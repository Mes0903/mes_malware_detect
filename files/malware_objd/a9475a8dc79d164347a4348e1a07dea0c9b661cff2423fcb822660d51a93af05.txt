
a9475a8dc79d164347a4348e1a07dea0c9b661cff2423fcb822660d51a93af05.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	and    DWORD PTR [edx],ecx
  411002:	inc    edx
  411003:	inc    esi
  411004:	test   BYTE PTR [eax+0x28114800],cl
  41100a:	inc    edx
  41100b:	adc    DWORD PTR [eax],edi
  41100d:	inc    edx
  41100e:	add    BYTE PTR [ecx+0x0],al
  411011:	add    eax,DWORD PTR [edx]
  411013:	inc    edx
  411014:	add    al,0x28
  411016:	add    BYTE PTR [eax+edx*1],0x5
  41101a:	add    al,dl
  41101c:	add    eax,0xaa0a1040
  411021:	add    BYTE PTR ds:0x20072900,0x34
  411028:	and    BYTE PTR [eax],ah
  41102a:	loop   0x411050
  41102c:	sub    dl,BYTE PTR [edx+0x1e1c9c0]
  411032:	or     eax,DWORD PTR [edx+0x42d041]
  411038:	test   BYTE PTR [eax+edi*1+0x3080188f],ah
  41103f:	call   0xe80:0x88c4b031
  411046:	inc    eax
  411047:	add    al,al
  411049:	push   eax
  41104a:	adc    al,0x96
  41104c:	sub    BYTE PTR [ebx],dh
  41104e:	inc    eax
  41104f:	add    BYTE PTR [ecx+ebp*1],al
  411052:	adc    bl,bl
  411054:	and    ch,BYTE PTR [eax-0x7e]
  411057:	cwde   
  411058:	adc    BYTE PTR [eax],0x9
  41105b:	add    al,0x0
  41105d:	and    al,0xb4
  41105f:	mov    DWORD PTR [eax+0x44],eax
  411062:	loopne 0x41109e
  411064:	add    DWORD PTR [eax],ebx
  411066:	push   es
  411067:	lds    esp,FWORD PTR [esi]
  411069:	or     dl,BYTE PTR fs:[edx]
  41106c:	and    BYTE PTR [eax],al
  41106e:	adc    al,0x2
  411070:	les    eax,FWORD PTR [edx+eax*2]
  411073:	popa   
  411074:	xor    al,BYTE PTR [esi]
  411076:	or     al,0x44
  411078:	or     al,0x1
  41107a:	add    DWORD PTR [ebx-0x80],ecx
  41107d:	test   al,0x22
  41107f:	call   0x2810:0xa000100
  411086:	add    DWORD PTR [eax],ecx
  411088:	xchg   ecx,eax
  411089:	int    0x32
  41108b:	add    ah,BYTE PTR [ecx]
  41108d:	enter  0x9080,0x40
  411091:	add    al,0xc0
  411093:	and    BYTE PTR [eax],dl
  411095:	add    BYTE PTR [ebp+0x2b],0x4
  411099:	add    BYTE PTR [eax+0x2a09107a],al
  41109f:	pusha  
  4110a0:	or     bl,BYTE PTR [ecx+0xd0e0040]
  4110a6:	mov    dl,BYTE PTR [edx+esi*1-0x6fb79ee0]
  4110ad:	mov    esp,0x9c1300
  4110b2:	add    cl,al
  4110b4:	rcl    BYTE PTR [eax+0x3],0x10
  4110b8:	xchg   esp,eax
  4110b9:	sbb    BYTE PTR [edx],al
  4110bb:	xchg   ecx,eax
  4110bc:	push   eax
  4110bd:	add    BYTE PTR [ecx],0x24
  4110c0:	inc    edx
  4110c1:	test   BYTE PTR [eax],al
  4110c3:	adc    BYTE PTR [eax+0x61],al
  4110c6:	adc    al,0x72
  4110c8:	cwde   
  4110c9:	add    eax,DWORD PTR [eax]
  4110cb:	and    al,0x2b
  4110cd:	mov    es,WORD PTR [eax]
  4110cf:	or     bh,BYTE PTR [eax]
  4110d1:	and    BYTE PTR [eax+0x21899d24],0x41
  4110d8:	dec    ebp
  4110d9:	add    dh,BYTE PTR [eax+eax*4+0x6]
  4110dd:	adc    al,BYTE PTR [ecx]
  4110df:	adc    BYTE PTR [eax-0x397ffb40],dh
  4110e5:	or     esi,DWORD PTR [esi+eax*2]
  4110e8:	je     0x4110ec
  4110ea:	dec    ecx
  4110eb:	add    BYTE PTR ss:[eax+eiz*1],al
  4110ef:	dec    esp
  4110f0:	or     BYTE PTR [eax],0x83
  4110f3:	adc    DWORD PTR [esi],eax
  4110f5:	add    edx,DWORD PTR [eax]
  4110f7:	inc    edx
  4110f8:	add    DWORD PTR [esi],edx
  4110fa:	push   eax
  4110fb:	sbb    al,0x0
  4110fd:	add    BYTE PTR [edx+0x8],bh
  411100:	add    BYTE PTR [ecx-0x3f],ah
  411103:	add    cl,BYTE PTR [eax]
  411105:	out    dx,eax
  411106:	and    BYTE PTR [eax],al
  411108:	adc    DWORD PTR [edx+esi*2],ebx
  41110b:	sbb    BYTE PTR [eax+0x20001d00],dl
  411111:	and    BYTE PTR [eax],al
  411113:	and    BYTE PTR [eax],al
  411115:	add    BYTE PTR [edx],0x40
  411118:	ror    BYTE PTR [edx],0x4
  41111b:	adc    dl,ah
  41111d:	add    BYTE PTR [eax],ah
  41111f:	adc    BYTE PTR [eax],0xb0
  411122:	sub    al,BYTE PTR [eax]
  411124:	and    DWORD PTR [edx],esp
  411126:	add    DWORD PTR [edx],eax
  411128:	sub    BYTE PTR [edx+0x234c0d],0xa
  41112f:	and    al,BYTE PTR [eax-0x3fddfdf6]
  411135:	adc    esi,DWORD PTR gs:[edx]
  411138:	jp     0x41110a
  41113a:	add    BYTE PTR [eax],al
  41113c:	add    BYTE PTR [eax],al
  41113e:	or     DWORD PTR [eax],0xc202c232
  411144:	dec    eax
  411145:	shr    BYTE PTR [edi],0x6a
  411148:	add    dh,BYTE PTR [ecx-0x57afa800]
  41114e:	xor    al,0x0
  411150:	xor    BYTE PTR [eax],al
  411152:	add    BYTE PTR [ecx],al
  411154:	add    BYTE PTR [esi],al
  411156:	inc    ecx
  411157:	cmp    esp,esp
  411159:	mov    eax,0x18720001
  41115e:	add    DWORD PTR [eax],ebp
  411160:	add    BYTE PTR [eax+edx*4+0x0],0x18
  411165:	inc    ecx
  411166:	add    BYTE PTR [eax],al
  411168:	xor    BYTE PTR [ecx],ah
  41116a:	inc    ecx
  41116b:	and    BYTE PTR [eax+eax*1],al
  41116e:	sbb    al,BYTE PTR [esp]
  411171:	or     al,cl
  411173:	and    BYTE PTR [ecx+0x11a048],al
  411179:	or     BYTE PTR [eax],0xca
  41117c:	inc    ecx
  41117d:	or     al,0x21
  41117f:	add    BYTE PTR [eax+0x82c4901],dh
  411185:	add    DWORD PTR [edx+0x2431011],ebp
  41118b:	xchg   DWORD PTR [eax],edx
  41118d:	mov    WORD PTR [eax+0xb044e],ss
  411193:	xor    BYTE PTR [ecx],dh
  411195:	pop    edi
  411196:	push   es
  411197:	jnp    0x4111c3
  411199:	nop
  41119a:	sbb    BYTE PTR [eax+0xe249400],0x6
  4111a1:	cmp    bh,BYTE PTR [edx+0x10700482]
  4111a7:	and    BYTE PTR [ecx],dh
  4111a9:	add    BYTE PTR [ecx+ebp*2],ch
  4111ac:	mov    al,ds:0x80852004
  4111b1:	add    al,BYTE PTR [eax]
  4111b3:	adc    BYTE PTR [edx+0x62104630],al
  4111b9:	add    BYTE PTR [edx],0x60
  4111bc:	add    al,0x21
  4111be:	or     ecx,DWORD PTR [eax+ecx*1+0x312002c]
  4111c5:	add    BYTE PTR [eax+0x4427810],cl
  4111cb:	and    eax,0x3480ac0a
  4111d0:	adc    al,0x11
  4111d2:	adc    dl,0x1
  4111d5:	push   cs
  4111d6:	add    BYTE PTR [eax],0x8
  4111d9:	push   ebx
  4111da:	sub    BYTE PTR [eax],ah
  4111dc:	inc    ebx
  4111dd:	add    al,0x12
  4111df:	test   al,0x2
  4111e1:	pop    eax
  4111e2:	inc    edi
  4111e3:	xor    BYTE PTR [ecx],0xc2
  4111e6:	dec    ecx
  4111e7:	adc    dl,al
  4111e9:	or     al,BYTE PTR [eax+0x8080]
  4111ef:	fs inc eax
  4111f1:	add    al,0xb2
  4111f3:	mov    al,ds:0x24045c9
  4111f8:	rcl    BYTE PTR [edi],1
  4111fa:	jno    0x4111be
  4111fc:	xor    BYTE PTR [eax],al
  4111fe:	add    al,BYTE PTR [eax]
  411200:	and    BYTE PTR [eax],cl
  411202:	add    DWORD PTR [eax+0x9],esp
  411205:	add    DWORD PTR [edx+eiz*1],eax
  411208:	loop   0x41123a
  41120a:	adc    ecx,DWORD PTR [eax]
  41120c:	and    al,BYTE PTR [edi]
  41120e:	and    BYTE PTR [eax],al
  411210:	les    eax,FWORD PTR [edx+0x1010101]
  411216:	add    BYTE PTR [edx],al
  411218:	(bad)  
  411219:	xor    al,0xf6
  41121b:	dec    eax
  41121c:	and    BYTE PTR [ecx+0x32089410],al
  411222:	push   ss
  411223:	mov    WORD PTR [edx+ebx*1+0x22a0090],ss
  41122a:	and    DWORD PTR [eax],edx
  41122c:	add    ch,BYTE PTR [eax]
  41122e:	add    BYTE PTR [eax+0x54],al
  411231:	adc    BYTE PTR [ecx],al
  411233:	dec    eax
  411234:	adc    dl,bl
  411236:	or     BYTE PTR [eax],al
  411238:	push   0x9c980388
  41123d:	add    BYTE PTR [eax+ecx*4+0x7c63ba],bl
  411244:	or     BYTE PTR [eax],al
  411246:	loopne 0x4111c8
  411248:	and    BYTE PTR [edx-0x7e],al
  41124b:	add    BYTE PTR [ecx],al
  41124d:	dec    edx
  41124e:	push   esi
  41124f:	mov    al,ds:0x2948
  411254:	add    BYTE PTR [eax],ah
  411256:	dec    ebx
  411257:	enter  0x30a0,0x98
  41125b:	or     ch,BYTE PTR [eax]
  41125d:	add    al,BYTE PTR [eax+ebx*1]
  411260:	add    DWORD PTR [eax+0x6],eax
  411263:	add    BYTE PTR [eax+0x4],dh
  411266:	add    BYTE PTR [ebp-0x7fedb7f0],cl
  41126c:	push   ss
  41126d:	add    BYTE PTR [ecx+0x12100100],dl
  411273:	adc    BYTE PTR [eax-0x7d91ebbd],al
  411279:	add    BYTE PTR [eax-0x7bff1f79],0x0
  411280:	inc    edx
  411281:	cmp    dh,BYTE PTR [eax]
  411283:	inc    eax
  411284:	adc    BYTE PTR [eax],cl
  411286:	add    BYTE PTR [eax],ah
  411288:	and    BYTE PTR [edx+0x2cc01480],al
  41128e:	mov    WORD PTR [eax+0x4800282],cs
  411294:	adc    BYTE PTR [edx],ah
  411296:	add    BYTE PTR [eax],al
  411298:	add    cl,BYTE PTR [edx]
  41129a:	or     DWORD PTR [eax],ecx
  41129c:	adc    eax,0x83400ba
  4112a1:	xchg   ecx,eax
  4112a2:	lods   al,BYTE PTR ds:[esi]
  4112a3:	adc    BYTE PTR [eax-0x77],dl
  4112a6:	adc    BYTE PTR [edx],0x42
  4112a9:	adc    dl,BYTE PTR [eax]
  4112ab:	les    edx,FWORD PTR [eax]
  4112ad:	adc    BYTE PTR [eax+eax*1],0x62
  4112b1:	or     al,0x24
  4112b3:	inc    ecx
  4112b4:	or     eax,0x432992ae
  4112b9:	mov    edx,DWORD PTR [ecx-0x76]
  4112bc:	sub    cl,BYTE PTR [edx+0x192eb4]
  4112c2:	bound  eax,QWORD PTR [eax+0x11]
  4112c5:	cmp    BYTE PTR [ebx+0x4],ah
  4112c8:	dec    edx
  4112c9:	or     BYTE PTR [eax],dh
  4112cb:	or     DWORD PTR [ecx+ecx*1],eax
  4112ce:	and    al,al
  4112d0:	mov    eax,gs:0xb400028c
  4112d6:	adc    dl,al
  4112d8:	adc    BYTE PTR [eax],al
  4112da:	xor    BYTE PTR [eax],0x30
  4112dd:	add    BYTE PTR [eax+eax*1],0x8
  4112e1:	add    al,BYTE PTR [eax]
  4112e3:	inc    ebx
  4112e4:	adc    DWORD PTR ds:0x10009211,edx
  4112ea:	adc    al,0x88
  4112ec:	mov    al,ds:0x2045d084
  4112f1:	in     al,dx
  4112f2:	xchg   ah,ch
  4112f4:	inc    ecx
  4112f5:	sub    al,0x2
  4112f7:	push   0xffffff80
  4112f9:	xor    al,bh
  4112fb:	add    al,BYTE PTR [eax]
  4112fd:	nop
  4112fe:	sub    BYTE PTR [eax+edi*1],al
  411301:	add    dl,BYTE PTR [eax+0x0]
  411304:	or     BYTE PTR [eax],dl
  411306:	inc    esi
  411307:	xor    ah,BYTE PTR [eax]
  411309:	mov    BYTE PTR [edx],cl
  41130b:	mov    al,ds:0x25048848
  411310:	popa   
  411311:	add    BYTE PTR [esi],bl
  411313:	adc    BYTE PTR ds:0x18412042,dh
  411319:	mov    BYTE PTR [eax-0x3f787ffe],al
  41131f:	add    BYTE PTR [edx+0x30],cl
  411322:	add    DWORD PTR [esi-0x2ffff380],0xc
  411329:	bound  esi,QWORD PTR [eax+0x42]
  41132c:	mov    al,0x49
  41132e:	and    al,0x80
  411330:	pusha  
  411331:	and    eax,0x2012
  411336:	add    BYTE PTR [eax],al
  411338:	jno    0x41139e
  41133a:	or     BYTE PTR [eax],0xf1
  41133d:	adc    BYTE PTR [ecx+0x33808294],al
  411343:	sbb    DWORD PTR ds:0x1048dc51,eax
  411349:	loopne 0x4112de
  41134b:	or     BYTE PTR [ecx],dl
  41134d:	and    ah,BYTE PTR [ecx+0xe]
  411350:	add    ah,BYTE PTR ds:0x414584a0
  411356:	or     al,al
  411358:	add    ch,BYTE PTR [ebx]
  41135a:	and    ecx,esp
  41135c:	and    bl,BYTE PTR [eax-0x10]
  41135f:	add    BYTE PTR [eax],ah
  411361:	sbb    BYTE PTR [eax+0x28],al
  411364:	add    eax,0x40032652
  411369:	add    BYTE PTR [ecx-0x80],dl
  41136c:	push   es
  41136d:	and    BYTE PTR [eax],al
  41136f:	les    eax,FWORD PTR [edx]
  411371:	and    ebp,DWORD PTR [eax+0x22410140]
  411377:	adc    DWORD PTR [eax],ecx
  411379:	test   al,0x13
  41137b:	enter  0x1020,0x60
  41137f:	mov    ds:0x20290741,al
  411384:	inc    eax
  411385:	add    DWORD PTR [ecx],edx
  411387:	or     DWORD PTR [eax],ecx
  411389:	add    ah,dl
  41138b:	push   eax
  41138c:	mov    al,0xa
  41138e:	ret    
  41138f:	add    BYTE PTR [edx],al
  411391:	rol    DWORD PTR [ebx],0x12
  411394:	sub    BYTE PTR [edx+eiz*1],ch
  411397:	and    BYTE PTR [edx-0x7dd7ca90],al
  41139d:	add    DWORD PTR [ecx],0x2b201110
  4113a3:	mov    ds:0x1020024,al
  4113a8:	nop
  4113a9:	add    dl,BYTE PTR [ecx]
  4113ab:	add    BYTE PTR [eax+0x10002320],al
  4113b1:	dec    esp
  4113b2:	and    BYTE PTR [ecx],ah
  4113b4:	or     al,0x92
  4113b7:	add    eax,0x40504200
  4113bc:	adc    BYTE PTR [eax],dl
  4113be:	pop    eax
  4113bf:	mov    ds:0x42833804,al
  4113c4:	add    DWORD PTR [edx],eax
  4113c6:	or     BYTE PTR [edx+0x1],al
  4113c9:	sub    BYTE PTR [edi+eiz*1-0x80],al
  4113cd:	add    al,0x68
  4113cf:	test   al,0x95
  4113d1:	adc    al,BYTE PTR [eax]
  4113d3:	mov    al,ds:0x2f00826
  4113d8:	test   al,dl
  4113da:	add    al,0x24
  4113dc:	nop
  4113dd:	mov    DWORD PTR [edx+0x4],0xc8400444
  4113e4:	add    BYTE PTR [eax+esi*1],0x16
  4113e8:	mov    al,ds:0xc4d10b40
  4113ed:	dec    esp
  4113ee:	dec    edx
  4113ef:	sub    DWORD PTR [esi+eiz*1+0x2],eax
  4113f3:	add    BYTE PTR [eax+0x46081938],0x3b
  4113fa:	xor    al,BYTE PTR [esp+ebx*4+0x2c]
  4113fe:	and    BYTE PTR [edx],dl
  411400:	inc    ecx
  411401:	and    al,0x24
  411403:	inc    ecx
  411404:	inc    edx
  411405:	cmp    BYTE PTR [eax-0xbf7cbd0],al
  41140b:	push   esi
  41140c:	add    al,0x20
  41140e:	test   BYTE PTR [edx+0x54],dl
  411411:	add    al,cl
  411413:	inc    eax
  411414:	sub    BYTE PTR [edx],al
  411416:	push   es
  411417:	inc    eax
  411418:	add    DWORD PTR [edx+0x2],edx
  41141b:	xor    BYTE PTR [eax],dl
  41141d:	nop
  41141e:	add    BYTE PTR [eax],al
  411420:	add    BYTE PTR [edx+0x40],al
  411423:	add    al,BYTE PTR [eax+ebx*1+0x0]
  411427:	pop    ebx
  411428:	adc    BYTE PTR [ebp+0x6a],al
  41142b:	or     BYTE PTR [eax],cl
  41142d:	pop    eax
  41142e:	xchg   esp,eax
  41142f:	inc    esp
  411430:	pop    ecx
  411431:	xchg   DWORD PTR [eax+0x1110812],eax
  411437:	inc    eax
  411438:	add    al,0x11
  41143a:	rol    BYTE PTR [esi],1
  41143c:	add    DWORD PTR [eax],ecx
  41143e:	rcr    BYTE PTR [eax],0xc6
  411441:	and    BYTE PTR [eax],al
  411443:	or     BYTE PTR [eax],cl
  411445:	or     BYTE PTR [eax+0x3],dl
  411448:	push   es
  411449:	mov    BYTE PTR [ecx],al
  41144b:	icebp  
  41144c:	or     al,0xc2
  41144e:	add    BYTE PTR [ecx],cl
  411450:	lock add BYTE PTR [ebx],cl
  411453:	adc    ch,BYTE PTR [eax]
  411455:	add    eax,0x2048a105
  41145a:	add    eax,0x144008ca
  41145f:	adc    eax,DWORD PTR [esi]
  411461:	add    dl,BYTE PTR [eax+0x60940182]
  411467:	add    BYTE PTR [eax],0x5d
  41146a:	and    BYTE PTR [eax],bl
  41146c:	add    BYTE PTR [esi],0xb0
  41146f:	cmp    DWORD PTR [edi+0x9],edx
  411472:	add    dl,BYTE PTR [eax]
  411474:	inc    eax
  411475:	add    BYTE PTR [ebx+0x2d007912],cl
  41147b:	and    eax,0x48290242
  411480:	sbb    ebp,DWORD PTR [eax]
  411482:	add    BYTE PTR [eax],ah
  411484:	add    al,0x42
  411486:	push   eax
  411487:	add    BYTE PTR [eax],al
  411489:	mov    ds:0x40026830,al
  41148e:	mov    BYTE PTR [eax+0x581234a0],0xa
  411495:	adc    BYTE PTR [eax],ch
  411497:	add    BYTE PTR [ecx+eax*4],0x4c
  41149b:	and    BYTE PTR [eax+0x280a66],al
  4114a1:	mov    eax,ds:0x11c0c00
  4114a6:	popa   
  4114a7:	fsub   DWORD PTR [eax+eax*1]
  4114aa:	les    edx,FWORD PTR [ecx]
  4114ac:	and    BYTE PTR [eax],al
  4114ae:	nop
  4114af:	adc    BYTE PTR [ecx+0x42536d9c],dl
  4114b5:	test   BYTE PTR [edx+eax*1],cl
  4114b8:	or     BYTE PTR [ecx+eax*1],bl
  4114bb:	shl    BYTE PTR [eax],1
  4114bd:	es inc eax
  4114bf:	push   es
  4114c0:	add    BYTE PTR [ecx-0x36ffd7fe],0xf0
  4114c7:	nop
  4114c8:	or     al,0x54
  4114ca:	and    BYTE PTR [edx],dh
  4114cc:	or     al,0x10
  4114ce:	xor    al,BYTE PTR [eax]
  4114d0:	pop    ecx
  4114d1:	adc    DWORD PTR [edx],eax
  4114d3:	push   eax
  4114d4:	add    BYTE PTR [ecx+0x21],ah
  4114d7:	add    BYTE PTR [eax],0x10
  4114da:	mov    ch,0x42
  4114dc:	and    BYTE PTR [ecx],dl
  4114de:	add    BYTE PTR [ecx],dl
  4114e0:	add    ecx,DWORD PTR [ecx+0x5]
  4114e3:	inc    edx
  4114e4:	add    DWORD PTR [eax],esp
  4114e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e7:	add    DWORD PTR [eax+0x4],eax
  4114ea:	add    BYTE PTR [ecx+0x9],ah
  4114ed:	pop    ecx
  4114ee:	xchg   esi,eax
  4114ef:	add    BYTE PTR [eax],dl
  4114f1:	pop    esp
  4114f2:	and    BYTE PTR [edx+eiz*2],bl
  4114f5:	leave  
  4114f6:	or     DWORD PTR [ebx+0x80202f0],edx
  4114fc:	mov    dl,BYTE PTR [eax]
  4114fe:	or     cl,BYTE PTR [esi+0x20518410]
  411504:	adc    BYTE PTR [ebx],dl
  411506:	gs push eax
  411508:	add    al,BYTE PTR [eax]
  41150a:	add    al,0x2
  41150c:	add    DWORD PTR [eax],eax
  41150e:	inc    edx
  41150f:	mov    ds:0x2451101,eax
  411514:	or     BYTE PTR [eax-0x7d8fe7ab],dl
  41151a:	or     al,0x42
  41151c:	nop
  41151d:	add    DWORD PTR ds:0xb1009e88,eax
  411523:	xchg   ecx,eax
  411524:	sub    al,cl
  411526:	xor    BYTE PTR [eax],dl
  411528:	nop
  411529:	dec    eax
  41152a:	inc    eax
  41152b:	xor    DWORD PTR [edx+edx*2],0x2007d00
  411532:	dec    esi
  411533:	add    DWORD PTR [eax],0xd09a8
  411539:	push   cs
  41153a:	or     BYTE PTR [eax],dl
  41153c:	bound  eax,QWORD PTR [edx]
  41153e:	add    BYTE PTR [eax],al
  411540:	enter  0x1102,0x42
  411544:	or     al,0x23
  411546:	add    BYTE PTR [edx],cl
  411548:	test   BYTE PTR [edx-0x7e],al
  41154b:	jo     0x4114d9
  41154d:	inc    edx
  41154e:	inc    eax
  41154f:	je     0x4114d1
  411551:	and    edx,DWORD PTR [ebx]
  411553:	and    al,0x21
  411555:	pusha  
  411556:	or     BYTE PTR [ebp+esi*1+0x0],dl
  41155a:	or     al,0x10
  41155c:	fwait
  41155d:	or     edi,ecx
  41155f:	inc    ebx
  411560:	and    al,0x92
  411562:	or     ebx,DWORD PTR [eax-0x47]
  411565:	push   ecx
  411566:	inc    ecx
  411567:	mov    ah,0xc3
  411569:	push   eax
  41156a:	add    BYTE PTR [esp+ecx*2+0x12ca80c5],al
  411571:	les    esp,FWORD PTR [eax]
  411573:	or     cl,dl
  411575:	adc    BYTE PTR [eax],al
  411577:	add    BYTE PTR [eax],al
  411579:	add    al,BYTE PTR [eax]
  41157b:	nop
  41157c:	pop    eax
  41157d:	enter  0x6200,0x60
  411581:	rcl    DWORD PTR [esp+edx*8],0xd
  411585:	add    DWORD PTR [eax],ecx
  411587:	inc    eax
  411588:	sub    DWORD PTR [ecx],esp
  41158a:	push   ss
  41158b:	inc    eax
  41158c:	push   es
  41158d:	add    al,BYTE PTR [eax-0x65]
  411590:	adc    BYTE PTR [eax],dl
  411592:	mov    ds:0x12002208,eax
  411597:	or     DWORD PTR [eax+eax*1],esp
  41159a:	and    dl,BYTE PTR ds:0x7420c192
  4115a0:	add    al,0x64
  4115a2:	mov    es,WORD PTR [edx]
  4115a4:	and    DWORD PTR [edx+0x70204112],edx
  4115aa:	add    BYTE PTR [eax+0x8409050],cl
  4115b0:	adc    al,dl
  4115b2:	dec    edx
  4115b3:	inc    ecx
  4115b4:	cmp    al,al
  4115b6:	add    ah,BYTE PTR [edx+0x10]
  4115b9:	inc    eax
  4115ba:	fadd   DWORD PTR [eax+0x70cc06eb]
  4115c0:	or     BYTE PTR [eax],ah
  4115c2:	add    BYTE PTR [esi],al
  4115c4:	pusha  
  4115c5:	inc    eax
  4115c6:	add    BYTE PTR [ebp-0x7df5cf90],ah
  4115cc:	add    bl,BYTE PTR [ecx]
  4115ce:	adc    dh,BYTE PTR [eax]
  4115d0:	dec    eax
  4115d1:	or     al,BYTE PTR [ecx]
  4115d3:	inc    ebp
  4115d4:	add    al,BYTE PTR [eax+0x8200100]
  4115da:	and    al,BYTE PTR [eax-0x3f5aff80]
  4115e0:	adc    dl,al
  4115e2:	add    bl,BYTE PTR [eax]
  4115e4:	dec    eax
  4115e5:	scas   eax,DWORD PTR es:[edi]
  4115e6:	adc    al,0x0
  4115e8:	and    al,BYTE PTR [esp+eax*1]
  4115eb:	push   esi
  4115ec:	or     BYTE PTR [eax],dh
  4115ee:	or     DWORD PTR [ecx],0xeb024600
  4115f4:	and    BYTE PTR [edx+0x4],al
  4115f7:	add    BYTE PTR [eax+0x39],ah
  4115fa:	add    eax,0xc4080620
  4115ff:	dec    edi
  411600:	rcr    DWORD PTR [eax],1
  411602:	add    al,0x2
  411604:	add    BYTE PTR [esp+eax*1+0x903820b],dl
  41160b:	mov    BYTE PTR [eax+esi*1],al
  41160e:	add    DWORD PTR [esp+ecx*4],esp
  411611:	adc    al,0x33
  411613:	mov    BYTE PTR [eax+0x1],ch
  411616:	or     al,0x28
  411618:	add    al,cl
  41161a:	mov    ah,0xd9
  41161c:	and    al,BYTE PTR [eax]
  41161e:	or     bl,BYTE PTR [ebp+0x20]
  411621:	pusha  
  411622:	xor    al,0x4
  411624:	push   esi
  411625:	xchg   edx,eax
  411626:	push   eax
  411627:	add    al,BYTE PTR [eax-0x143ffecf]
  41162d:	inc    eax
  41162e:	adc    BYTE PTR [ecx],ch
  411630:	add    BYTE PTR [ecx],al
  411632:	inc    ecx
  411633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411634:	and    BYTE PTR [edi],al
  411636:	add    BYTE PTR [eax],al
  411638:	mov    ch,0x0
  41163a:	cwde   
  41163b:	add    al,al
  41163d:	and    DWORD PTR [eax],eax
  41163f:	mov    ah,0x42
  411641:	sbb    BYTE PTR [ecx],al
  411643:	inc    ecx
  411644:	add    BYTE PTR [esi],0x40
  411647:	test   BYTE PTR [eax],cl
  411649:	or     BYTE PTR [ecx+esi*1],al
  41164c:	add    al,0x70
  41164e:	xchg   ecx,eax
  41164f:	mov    ds:0x4083800,eax
  411654:	add    al,0x83
  411656:	mov    eax,0x9a010848
  41165b:	push   ss
  41165c:	add    BYTE PTR [eax],al
  41165e:	mov    ds:0x800d021,al
  411663:	mov    ah,0x90
  411665:	sbb    DWORD PTR [eax+0xc],eax
  411668:	pop    es
  411669:	sbb    BYTE PTR [eax+0x9],dl
  41166c:	adc    eax,0xd62710e
  411671:	add    al,BYTE PTR [eax+0x531a060]
  411677:	adc    BYTE PTR [edx+0x20],bh
  41167a:	add    BYTE PTR [eax],0x62
  41167d:	inc    eax
  41167e:	sub    al,BYTE PTR [eax]
  411680:	inc    eax
  411681:	push   esi
  411682:	add    BYTE PTR [ecx+0x2c88086],al
  411688:	adc    eax,DWORD PTR [ecx]
  41168a:	and    DWORD PTR ds:0x560c1025,eax
  411690:	add    BYTE PTR [eax+0xa40c8c],bh
  411696:	add    ecx,DWORD PTR [edx]
  411698:	or     eax,0x38091168
  41169d:	and    BYTE PTR ds:0x871a0004,0x1
  4116a4:	in     eax,0x88
  4116a6:	rol    BYTE PTR [eax],0xd6
  4116a9:	add    eax,DWORD PTR [eax+0xc1204a0]
  4116af:	cmp    DWORD PTR [ebx],eax
  4116b1:	in     al,0x11
  4116b3:	sbb    dl,BYTE PTR [edx+0xe]
  4116b6:	ret    0x121
  4116b9:	sbb    DWORD PTR [ebp+0x6],eax
  4116bc:	les    eax,FWORD PTR [ebx]
  4116be:	add    al,0x81
  4116c0:	push   es
  4116c1:	xchg   edx,eax
  4116c2:	add    BYTE PTR [ecx],al
  4116c4:	or     BYTE PTR [ecx],al
  4116c6:	xor    eax,0x32220845
  4116cb:	or     al,0x44
  4116cd:	add    eax,DWORD PTR [ebp+0x194cf11]
  4116d3:	add    BYTE PTR [eax+eiz*1],0xa0
  4116d7:	nop
  4116d8:	stos   BYTE PTR es:[edi],al
  4116d9:	rol    DWORD PTR [esi],0x20
  4116dc:	or     BYTE PTR [ebx+0x50102440],al
  4116e2:	adc    BYTE PTR [ecx],al
  4116e4:	popa   
  4116e5:	push   es
  4116e6:	jo     0x4116e9
  4116e8:	xor    BYTE PTR [ecx+0x46220000],dl
  4116ee:	pusha  
  4116ef:	add    al,BYTE PTR [ecx]
  4116f1:	add    al,0x1
  4116f3:	adc    BYTE PTR [eax],0x8d
  4116f6:	nop
  4116f7:	in     al,0x90
  4116f9:	push   cs
  4116fa:	rol    BYTE PTR [edx],1
  4116fc:	add    eax,DWORD PTR [edx]
  4116fe:	add    DWORD PTR [eax],esp
  411700:	mov    ebx,DWORD PTR [eax]
  411702:	dec    edi
  411703:	ss dec eax
  411705:	push   ecx
  411706:	call   0x2c1210f
  41170b:	fs or  al,0x9
  41170e:	mov    ds:0x41021220,al
  411713:	rol    BYTE PTR [edi+0x8520120],0xb
  41171a:	sub    al,0x2
  41171c:	add    DWORD PTR [eax+eax*1],esp
  41171f:	add    BYTE PTR [eax],bl
  411721:	push   ss
  411722:	adc    dl,ch
  411724:	sub    al,BYTE PTR [ecx+ecx*1+0x10]
  411728:	cmp    al,BYTE PTR [eax+eax*1-0x4f]
  41172c:	mov    al,ds:0x20e0cc0
  411731:	les    eax,FWORD PTR [edx]
  411733:	mov    BYTE PTR [esp+edx*1],bl
  411736:	add    BYTE PTR [ecx],al
  411738:	add    eax,DWORD PTR [ebx]
  41173a:	adc    dh,0xc
  41173d:	add    DWORD PTR [eax+0x1c],0x4412065
  411744:	pop    ecx
  411745:	add    al,0x15
  411747:	arpl   WORD PTR [eax+eax*1],bx
  41174a:	mov    cs,WORD PTR [ebp-0x64]
  41174d:	add    BYTE PTR [edx],0x24
  411750:	fist   WORD PTR [ecx]
  411752:	call   0x900:0x4203ec02
  411759:	mov    eax,ds:0xd0848530
  41175e:	and    DWORD PTR [eax-0x7fffbcf0],eax
  411764:	xor    eax,0xe6904615
  411769:	add    ah,BYTE PTR [eax]
  41176b:	mov    BYTE PTR [eax],cl
  41176d:	xor    DWORD PTR [edx],eax
  41176f:	pusha  
  411770:	add    al,0x64
  411772:	xchg   BYTE PTR [eax+edx*8],cl
  411775:	add    ah,ch
  411777:	test   BYTE PTR [esi+0x1],dl
  41177a:	loopne 0x411781
  41177c:	add    ebx,DWORD PTR [eax]
  41177e:	add    BYTE PTR [ebx+0x62],dh
  411781:	add    al,BYTE PTR [ecx]
  411783:	and    BYTE PTR [ebx],al
  411785:	add    dl,BYTE PTR [eax-0x5befbfbf]
  41178b:	adc    eax,0x28a80139
  411790:	adc    BYTE PTR [edx],al
  411792:	mov    cl,BYTE PTR [esp+eax*1+0x4]
  411796:	mov    al,BYTE PTR [eax]
  411798:	adc    eax,0x8aa13104
  41179d:	add    al,BYTE PTR [edx]
  41179f:	add    BYTE PTR [edx-0x72],0x86
  4117a3:	sbb    BYTE PTR [eax],bl
  4117a5:	or     eax,DWORD PTR [edx+0x20]
  4117a8:	adc    dl,BYTE PTR [eax+0x20]
  4117ab:	adc    al,0x0
  4117ad:	or     BYTE PTR [ebx-0x7fb57af6],dh
  4117b3:	add    BYTE PTR [ecx],0x16
  4117b6:	and    al,BYTE PTR [edx]
  4117b8:	add    BYTE PTR [eax+ecx*1+0x4c6202a],al
  4117bf:	and    al,0x50
  4117c1:	inc    esp
  4117c2:	loopne 0x4117d4
  4117c4:	or     BYTE PTR [eax],0x49
  4117c7:	adc    al,0x2a
  4117c9:	add    al,0x10
  4117cb:	add    DWORD PTR [eax-0xcf876e],0x44fba415
  4117d5:	add    BYTE PTR [ebp+0x10100850],cl
  4117db:	cwde   
  4117dc:	sub    dl,BYTE PTR [eax+0x0]
  4117df:	push   es
  4117e0:	cmp    BYTE PTR [eax+ebp*1+0x1b],al
  4117e4:	push   es
  4117e5:	adc    BYTE PTR [ecx],dl
  4117e7:	mov    DWORD PTR [eax+0x7020000],ecx
  4117ed:	add    BYTE PTR [eax],bl
  4117ef:	add    al,0x23
  4117f1:	and    al,0x95
  4117f3:	push   es
  4117f4:	add    DWORD PTR [ecx-0x70],0x1cb200a4
  4117fb:	sbb    BYTE PTR [eax-0x28],dl
  4117fe:	xchg   BYTE PTR [eax],cl
  411800:	adc    DWORD PTR [edx+0x21],edx
  411803:	mov    BYTE PTR [eax],cl
  411805:	push   0x1e122ac2
  41180a:	js     0x41182c
  41180c:	push   esp
  41180d:	add    BYTE PTR [ebp+0x8b0000],cl
  411813:	retf   0x9118
  411816:	scas   al,BYTE PTR es:[edi]
  411817:	imul   eax,DWORD PTR [edx+0x10],0xffffff89
  41181b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41181c:	rcr    BYTE PTR [eax+0x30008856],0x2
  411823:	and    DWORD PTR [eax],eax
  411825:	add    dl,BYTE PTR [eax+eax*2]
  411828:	or     DWORD PTR [ecx-0x5e],0xe98a0551
  41182f:	or     DWORD PTR [ebx-0x1a],eax
  411832:	adc    eax,0x91678180
  411837:	xor    DWORD PTR [eax],0x80a23000
  41183d:	mov    BYTE PTR ds:0xa1182400,al
  411843:	inc    esp
  411844:	pop    edx
  411845:	add    al,0x2
  411847:	add    ah,BYTE PTR [eax]
  411849:	test   BYTE PTR [ecx+0x280709],al
  41184f:	call   0x14e78d4
  411854:	add    BYTE PTR [edx],al
  411856:	pusha  
  411857:	add    BYTE PTR [ecx],dl
  411859:	push   ss
  41185a:	sbb    al,0x80
  41185c:	mov    WORD PTR [eax+0x10],ds
  41185f:	or     dh,al
  411861:	adc    al,BYTE PTR [edx]
  411863:	inc    esi
  411864:	adc    esp,DWORD PTR [eax+0x0]
  411867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411868:	add    BYTE PTR [edx+edx*1],al
  41186b:	push   es
  41186c:	icebp  
  41186d:	push   ecx
  41186e:	push   ss
  41186f:	mov    al,0x1
  411871:	adc    al,BYTE PTR [edx]
  411873:	sub    al,BYTE PTR ds:0xa617ca1d
  411879:	add    dh,BYTE PTR [eax+0x2]
  41187c:	and    cl,BYTE PTR [eax]
  41187e:	push   ecx
  41187f:	push   edx
  411880:	and    al,0x26
  411882:	add    BYTE PTR [ecx],al
  411884:	test   DWORD PTR [ecx],edx
  411886:	sbb    al,BYTE PTR [eax-0x7e]
  411889:	mov    al,0x4
  41188b:	sbb    al,BYTE PTR [edi]
  41188d:	or     eax,0x5a622810
  411892:	add    al,BYTE PTR [eax*2-0x5dfe6f9e]
  411899:	dec    eax
  41189a:	or     ecx,eax
  41189c:	add    DWORD PTR [ebp-0x7f],0x40204800
  4118a3:	and    DWORD PTR [eax],esp
  4118a5:	or     BYTE PTR [esi],al
  4118a7:	add    BYTE PTR [ebx+0x2040080c],al
  4118ad:	adc    BYTE PTR [eax],al
  4118af:	pusha  
  4118b0:	ror    BYTE PTR [eax+0x55855950],0x0
  4118b7:	xchg   esi,eax
  4118b8:	add    BYTE PTR [eax],0x54
  4118bb:	add    BYTE PTR [eax],ah
  4118bd:	add    DWORD PTR [eax-0x76],eax
  4118c0:	mov    BYTE PTR [esi+edx*1+0x12014681],ah
  4118c7:	and    BYTE PTR [eax],ah
  4118c9:	add    DWORD PTR [ebp+0x31444241],eax
  4118cf:	and    DWORD PTR [edx-0x4f673f8e],esp
  4118d5:	add    esp,DWORD PTR [eax]
  4118d7:	xor    BYTE PTR [eax+0xb],0x5
  4118db:	bound  esp,QWORD PTR [esp+ebx*4-0x3dfe70bf]
  4118e2:	test   al,0x5
  4118e4:	rol    BYTE PTR [eax],0x0
  4118e7:	add    cl,BYTE PTR [ecx]
  4118e9:	add    BYTE PTR ds:0x129382a,dh
  4118ef:	or     eax,0x6004404
  4118f4:	add    BYTE PTR [edx],ah
  4118f6:	add    bl,0x1c
  4118f9:	add    BYTE PTR [ecx+eax*1],al
  4118fc:	or     al,BYTE PTR [edx+0x4]
  4118ff:	or     DWORD PTR [eax+0x19514422],ecx
  411905:	add    BYTE PTR [eax+0x4380080d],al
  41190b:	add    BYTE PTR [edx+0x3],dh
  41190e:	and    al,0x22
  411910:	or     eax,0x52a82042
  411915:	adc    al,al
  411917:	call   0x5090:0xa220028
  41191e:	ins    DWORD PTR es:[edi],dx
  41191f:	adc    DWORD PTR [eax+eiz*1+0x59314414],esp
  411926:	and    al,BYTE PTR [edx]
  411928:	or     al,0x14
  41192a:	or     al,0x30
  41192c:	es push 0x10f800
  411932:	inc    edx
  411933:	or     dl,BYTE PTR [ecx+0x2]
  411936:	inc    eax
  411937:	add    BYTE PTR [eax],0x32
  41193a:	bound  ecx,QWORD PTR [esi]
  41193c:	add    BYTE PTR [ebx+0xc6a1218],al
  411942:	test   BYTE PTR [ebx],ah
  411944:	push   es
  411945:	js     0x411997
  411947:	shl    BYTE PTR [esi],0xc3
  41194a:	adc    BYTE PTR [eax-0x4de1f3f8],dl
  411950:	inc    ecx
  411951:	sub    BYTE PTR [edx],dl
  411953:	add    BYTE PTR [esi],0x0
  411956:	add    DWORD PTR [esi],eax
  411958:	or     esp,DWORD PTR [eax]
  41195a:	inc    eax
  41195b:	add    BYTE PTR [edx],dh
  41195d:	retf   0x2102
  411960:	mov    al,ds:0x604100f0
  411965:	xor    bl,BYTE PTR [ecx]
  411967:	xor    al,0x20
  411969:	or     BYTE PTR [eax],ah
  41196b:	add    al,0x54
  41196d:	and    BYTE PTR [eax],al
  41196f:	mov    WORD PTR [eax],ds
  411971:	mov    al,0x6
  411973:	or     DWORD PTR [eax+0x182d6e1],ecx
  411979:	or     DWORD PTR [eax+eiz*1],eax
  41197c:	jo     0x4118fe
  41197e:	push   cs
  41197f:	adc    BYTE PTR [eax+0x4],al
  411982:	add    BYTE PTR [eax],0x0
  411985:	inc    edx
  411986:	push   eax
  411987:	add    DWORD PTR [esi],ecx
  411989:	adc    BYTE PTR [ecx],al
  41198b:	aaa    
  41198c:	inc    ecx
  41198d:	or     eax,DWORD PTR [eax]
  41198f:	add    BYTE PTR [ecx+edx*1],al
  411992:	pop    ecx
  411993:	pop    ss
  411994:	mov    al,ds:0x6408025c
  411999:	push   ss
  41199a:	sbb    cl,BYTE PTR [eax]
  41199c:	fiadd  DWORD PTR [eax+edx*2]
  41199f:	add    BYTE PTR [eax+eax*1],bl
  4119a2:	add    BYTE PTR [eax],ah
  4119a4:	push   es
  4119a5:	add    BYTE PTR [eax+0x48],dl
  4119a8:	inc    eax
  4119a9:	add    al,0x11
  4119ab:	ss add al,0x8
  4119ae:	es add al,0x1
  4119b1:	xor    eax,DWORD PTR [eax]
  4119b3:	push   esi
  4119b4:	mov    cl,0x80
  4119b6:	inc    esp
  4119b7:	and    BYTE PTR [ecx+0x21],0xe2
  4119bb:	test   DWORD PTR [eax],edx
  4119bd:	push   es
  4119be:	inc    eax
  4119bf:	and    DWORD PTR [eax+eax*1],edx
  4119c2:	mov    al,cs:0xa106a880
  4119c8:	add    BYTE PTR [eax],bh
  4119ca:	xor    edx,DWORD PTR [esi-0x30]
  4119cd:	add    BYTE PTR [eax],al
  4119cf:	and    eax,0xa0008403
  4119d4:	rol    DWORD PTR [eax+eax*1],0x1
  4119d8:	add    BYTE PTR [eax],al
  4119da:	add    al,0x5b
  4119dc:	adc    BYTE PTR [eax],cl
  4119de:	and    bh,BYTE PTR [esp+eax*1+0x62]
  4119e2:	add    DWORD PTR [eax],esp
  4119e4:	sbb    BYTE PTR [eax+0x800e0c0],dl
  4119ea:	add    BYTE PTR [eax+0x28],al
  4119ed:	add    BYTE PTR [eax],al
  4119ef:	adc    eax,eax
  4119f1:	add    BYTE PTR [ebx],dl
  4119f3:	inc    edx
  4119f4:	mov    BYTE PTR [eax+0x20],cl
  4119f7:	inc    ecx
  4119f8:	or     BYTE PTR [ecx],dl
  4119fa:	inc    esp
  4119fb:	sub    BYTE PTR [ecx-0x78],ah
  4119fe:	add    BYTE PTR [eax],al
  411a00:	pusha  
  411a01:	xor    BYTE PTR [edx],al
  411a03:	add    BYTE PTR ds:0x178004c3,al
  411a09:	add    BYTE PTR [edx+eax*1-0x7e],al
  411a0d:	xchg   edx,eax
  411a0e:	test   al,0x22
  411a10:	dec    eax
  411a11:	cmp    BYTE PTR [eax],al
  411a13:	xchg   esi,eax
  411a14:	and    BYTE PTR [ecx],ch
  411a16:	add    BYTE PTR [esi],dl
  411a18:	mov    ds:0x4028801a,eax
  411a1d:	add    al,0x62
  411a1f:	imul   eax,DWORD PTR [eax],0x38100114
  411a25:	xchg   esi,eax
  411a26:	sub    BYTE PTR [eax+0x647206],bl
  411a2c:	sub    eax,0x10246
  411a31:	sbb    ah,BYTE PTR [ecx+0x4]
  411a34:	and    BYTE PTR [ecx+edx*1],cl
  411a37:	add    BYTE PTR [edx+0x5e02a433],0x39
  411a3e:	and    BYTE PTR [eax+eax*2],al
  411a41:	mov    DWORD PTR [eax+eax*8],ecx
  411a44:	data16 add BYTE PTR [ecx+edi*1],dh
  411a48:	nop
  411a49:	xor    BYTE PTR [eax+0x42136080],dl
  411a4f:	add    BYTE PTR [eax],al
  411a51:	and    al,0x8
  411a53:	or     edx,DWORD PTR [edi+0xa]
  411a56:	add    al,BYTE PTR [eax]
  411a58:	and    cl,BYTE PTR [eax]
  411a5a:	inc    ebp
  411a5b:	or     BYTE PTR [ebp+0x64004232],0x4
  411a62:	sbb    al,0x18
  411a64:	mov    BYTE PTR [eax+0x10801094],al
  411a6a:	dec    eax
  411a6b:	inc    eax
  411a6c:	add    DWORD PTR [edx+0x12],esp
  411a6f:	xchg   ecx,eax
  411a70:	inc    esi
  411a71:	add    cl,BYTE PTR [esp+eax*2]
  411a74:	xchg   ecx,eax
  411a75:	ins    BYTE PTR es:[edi],dx
  411a76:	or     al,0x0
  411a78:	or     cl,BYTE PTR [eax]
  411a7a:	inc    ebp
  411a7b:	dec    eax
  411a7c:	and    BYTE PTR [ecx+edx*1+0x41],0x2e
  411a81:	sbb    BYTE PTR [eax+0x206012d],dl
  411a87:	add    BYTE PTR [edx+0x8],al
  411a8a:	repnz mov al,ds:0x1c016600
  411a90:	inc    eax
  411a91:	mov    WORD PTR [eax-0x80],?
  411a94:	adc    BYTE PTR [ebp+0x10],dh
  411a97:	or     BYTE PTR [eax],0xa6
  411a9a:	add    BYTE PTR [ebx],dl
  411a9c:	xchg   esp,eax
  411a9d:	adc    esi,DWORD PTR [eax]
  411a9f:	add    BYTE PTR [ecx],ah
  411aa1:	test   cl,ah
  411aa3:	add    BYTE PTR [eax+0x40],ch
  411aa6:	pusha  
  411aa7:	add    BYTE PTR [edx],bl
  411aa9:	or     ch,dh
  411aab:	add    BYTE PTR [eax],cl
  411aad:	mov    cl,0x32
  411aaf:	adc    ecx,ecx
  411ab1:	add    BYTE PTR [ecx],al
  411ab3:	and    BYTE PTR [edx],dh
  411ab5:	add    BYTE PTR [ebp+0x10],al
  411ab8:	inc    eax
  411ab9:	mov    al,ds:0x940850c4
  411abe:	retf   
  411abf:	add    ch,BYTE PTR [ecx]
  411ac1:	push   es
  411ac2:	and    BYTE PTR [eax],cl
  411ac4:	add    DWORD PTR [ecx],eax
  411ac6:	add    BYTE PTR [eax+eax*1-0x58],dl
  411aca:	loope  0x411aec
  411acc:	adc    BYTE PTR [edx],dl
  411ace:	adc    bl,BYTE PTR [ebx-0x7d]
  411ad1:	or     DWORD PTR [eax+eiz*4+0x0],eax
  411ad5:	sub    BYTE PTR [eax],al
  411ad7:	add    al,BYTE PTR [ecx+0x2444408e]
  411add:	mov    ax,ds:0x42224404
  411ae3:	xor    al,ah
  411ae5:	sbb    DWORD PTR [edx+eiz*4],ebx
  411ae8:	or     BYTE PTR [eax+eax*1],ah
  411aeb:	inc    eax
  411aec:	sar    BYTE PTR [ebp+0x70],0x2c
  411af0:	dec    eax
  411af1:	or     BYTE PTR [ecx],al
  411af3:	and    BYTE PTR [edx],dl
  411af5:	inc    esp
  411af6:	mov    ds:0x18409000,al
  411afb:	add    BYTE PTR [eax],al
  411afd:	add    DWORD PTR [ebx-0x7ab5de80],0x1
  411b04:	popa   
  411b05:	ror    BYTE PTR [eax],0x9
  411b08:	or     BYTE PTR [esi],al
  411b0a:	add    DWORD PTR [eax],eax
  411b0c:	add    BYTE PTR [esi+eax*1-0x67e7ade6],al
  411b13:	and    al,BYTE PTR [eax]
  411b15:	and    dl,BYTE PTR [eax+eax*1+0x822811a]
  411b1c:	mov    al,0x10
  411b1e:	or     al,0x1
  411b20:	jle    0x411b23
  411b22:	and    al,BYTE PTR [ecx-0x3b]
  411b25:	enter  0x354,0x1
  411b29:	pusha  
  411b2a:	or     BYTE PTR [edx+0xa],cl
  411b2d:	dec    edx
  411b2e:	mov    DWORD PTR [eax-0x6fefedf1],eax
  411b34:	add    BYTE PTR [eax+0x6],al
  411b37:	inc    esp
  411b38:	xor    BYTE PTR [eax],dl
  411b3a:	add    al,BYTE PTR [eax+ecx*1]
  411b3d:	and    eax,0x16049b02
  411b42:	sbb    dl,BYTE PTR [eax-0x80]
  411b45:	and    BYTE PTR [esi+eax*1+0x25],ah
  411b49:	push   es
  411b4a:	or     BYTE PTR [eax+0x79020c0d],al
  411b50:	inc    eax
  411b51:	pusha  
  411b52:	add    al,BYTE PTR [ecx]
  411b54:	cmp    al,0x80
  411b56:	add    cl,BYTE PTR ds:0x31380c00
  411b5c:	add    dl,ah
  411b5e:	ins    BYTE PTR es:[edi],dx
  411b5f:	or     BYTE PTR [eax+eiz*1-0x7ffffdfe],dh
  411b66:	adc    BYTE PTR [eax],al
  411b68:	add    BYTE PTR [eax+eiz*1],cl
  411b6b:	add    BYTE PTR [ecx],al
  411b6d:	popa   
  411b6e:	jo     0x411b88
  411b70:	and    BYTE PTR [edx],dl
  411b72:	mov    al,ds:0x10081002
  411b77:	and    DWORD PTR [eax-0x3f7fed9f],eax
  411b7d:	nop
  411b7e:	add    DWORD PTR [edx],eax
  411b80:	adc    DWORD PTR fs:[edi+eiz*2+0x40],eax
  411b85:	add    al,0x27
  411b87:	add    DWORD PTR [edx],esi
  411b89:	mov    cl,0xa8
  411b8b:	add    al,BYTE PTR [esi]
  411b8d:	dec    esi
  411b8e:	xor    BYTE PTR [ebx],dl
  411b90:	and    ch,BYTE PTR [edx]
  411b92:	or     eax,0x24904c42
  411b97:	test   eax,0x20004128
  411b9c:	add    BYTE PTR [eax],ch
  411b9e:	adc    BYTE PTR [esi+eiz*2],al
  411ba1:	or     dl,BYTE PTR [eax+0x42401266]
  411ba7:	push   esi
  411ba8:	mov    al,ds:0xc1501000
  411bad:	add    BYTE PTR [ecx-0x78],0x8
  411bb1:	inc    eax
  411bb2:	adc    edx,DWORD PTR [ecx+0x59]
  411bb5:	bound  eax,QWORD PTR [edx]
  411bb7:	add    DWORD PTR [edx+0x1050120b],esp
  411bbd:	add    al,0x0
  411bbf:	adc    DWORD PTR [ecx],eax
  411bc1:	inc    eax
  411bc2:	add    BYTE PTR [edx+0x8],al
  411bc5:	add    BYTE PTR [ecx],al
  411bc7:	add    BYTE PTR [ebx+eax*2+0x14],al
  411bcb:	xchg   BYTE PTR [esi+0x31],ch
  411bce:	inc    eax
  411bcf:	and    esp,DWORD PTR [ebp+0x28191660]
  411bd5:	add    DWORD PTR [edx],eax
  411bd7:	adc    BYTE PTR [eax+0x8],0x0
  411bdb:	adc    DWORD PTR [eax],ecx
  411bdd:	add    BYTE PTR [edi],al
  411bdf:	or     BYTE PTR [eax],ah
  411be1:	xor    DWORD PTR [ebx],eax
  411be3:	popa   
  411be4:	add    BYTE PTR [eax],0x92
  411be7:	and    al,0x6
  411be9:	js     0x411c2b
  411beb:	adc    eax,0x8d282202
  411bf0:	stc    
  411bf1:	inc    eax
  411bf2:	loopne 0x411bf8
  411bf4:	add    eax,DWORD PTR [eax+eiz*1]
  411bf7:	or     BYTE PTR [ecx],ah
  411bf9:	mov    al,BYTE PTR [esp+ecx*1]
  411bfc:	adc    DWORD PTR [eax+0x20281000],eax
  411c02:	and    BYTE PTR [edi-0x5fbfddd8],ah
  411c08:	or     eax,eax
  411c0a:	adc    BYTE PTR [ebx],0x71
  411c0d:	mov    esp,0x85009b54
  411c12:	inc    edx
  411c13:	pusha  
  411c14:	adc    DWORD PTR [ecx],eax
  411c16:	or     BYTE PTR [eax+eiz*1+0x383a4041],al
  411c1d:	add    DWORD PTR [edx],eax
  411c1f:	adc    ecx,0x8
  411c22:	adc    al,0x48
  411c24:	mov    BYTE PTR [eax],bh
  411c26:	adc    BYTE PTR [ecx],0x21
  411c29:	add    DWORD PTR [eax+eax*1-0x7e],edx
  411c2d:	adc    DWORD PTR [eax],edx
  411c2f:	cmp    cl,BYTE PTR [eax+0x28]
  411c32:	add    al,0xa0
  411c34:	add    BYTE PTR [eax],al
  411c36:	push   eax
  411c37:	add    DWORD PTR [edx],eax
  411c39:	adc    al,0x44
  411c3b:	or     DWORD PTR [edx],ecx
  411c3d:	mov    gs:0x51e02220,al
  411c43:	or     BYTE PTR [eax],bh
  411c45:	add    DWORD PTR [eax],eax
  411c47:	xor    dh,BYTE PTR [eax]
  411c49:	adc    al,BYTE PTR [edx]
  411c4b:	add    BYTE PTR [ecx-0x13],al
  411c4e:	push   esp
  411c4f:	add    esi,edx
  411c51:	mov    eax,ds:0x80cc001
  411c56:	add    BYTE PTR [eax],al
  411c58:	push   eax
  411c59:	sub    BYTE PTR [eax+0x1],dl
  411c5c:	sub    BYTE PTR [eax],0x0
  411c5f:	loope  0x411c94
  411c61:	add    DWORD PTR [eax],esp
  411c63:	add    BYTE PTR [eax],al
  411c65:	inc    edx
  411c66:	adc    BYTE PTR [edx],al
  411c68:	and    eax,0x48080015
  411c6d:	mov    eax,0x31aa061
  411c72:	push   edx
  411c73:	and    BYTE PTR [esp+edi*1+0x22],al
  411c77:	add    BYTE PTR [esi],ah
  411c79:	push   cs
  411c7a:	add    DWORD PTR [eax],eax
  411c7c:	inc    eax
  411c7d:	add    al,ah
  411c7f:	add    ah,BYTE PTR [esi]
  411c81:	add    BYTE PTR [edx+0x61251210],dl
  411c87:	jo     0x411ca9
  411c89:	inc    eax
  411c8a:	push   ds
  411c8b:	add    BYTE PTR [eax],al
  411c8d:	sub    al,0x21
  411c8f:	add    DWORD PTR [eax+ecx*1+0x3a],ecx
  411c93:	dec    esp
  411c94:	add    al,0x4b
  411c96:	add    al,BYTE PTR [ecx]
  411c98:	and    BYTE PTR [ecx],dl
  411c9a:	or     al,0x20
  411c9c:	add    BYTE PTR [eax+0x60010420],al
  411ca2:	dec    esp
  411ca3:	add    BYTE PTR [ecx+0x0],al
  411ca6:	and    BYTE PTR [ebx],al
  411ca8:	leave  
  411ca9:	sbb    BYTE PTR [ecx],al
  411cab:	inc    eax
  411cac:	push   es
  411cad:	add    DWORD PTR [eax],eax
  411caf:	jne    0x411c32
  411cb1:	or     BYTE PTR [ecx+0x2],al
  411cb4:	add    al,ah
  411cb6:	add    eax,0x3909320
  411cbb:	add    BYTE PTR [edi+ecx*1],al
  411cbe:	add    eax,0x8190d47
  411cc3:	sub    al,BYTE PTR [eax]
  411cc5:	mov    WORD PTR [edx-0x7e],ss
  411cc8:	dec    eax
  411cc9:	and    BYTE PTR [edx+0x8822442],al
  411ccf:	and    BYTE PTR [eax+0xd8c4298],dh
  411cd5:	xchg   DWORD PTR [eax+edx*2],eax
  411cd8:	add    BYTE PTR [ecx],bl
  411cda:	add    BYTE PTR [edx+0x1408300],dl
  411ce0:	xor    dl,BYTE PTR [eax]
  411ce2:	dec    eax
  411ce3:	add    al,0x82
  411ce5:	or     al,0x8
  411ce7:	adc    al,0x42
  411ce9:	and    BYTE PTR [esi],0x50
  411cec:	xchg   ecx,eax
  411ced:	and    eax,ebx
  411cef:	lsl    eax,ax
  411cf2:	add    BYTE PTR [eax+0x20008000],dh
  411cf8:	and    eax,DWORD PTR [eax]
  411cfa:	ror    BYTE PTR [edx-0x80],0xc
  411cfe:	add    BYTE PTR [ebx],al
  411d00:	add    BYTE PTR [eax],0x2
  411d03:	int3   
  411d04:	inc    edx
  411d05:	xchg   esp,eax
  411d06:	sub    ah,BYTE PTR [ecx]
  411d08:	sub    ebp,DWORD PTR [eax+eax*1]
  411d0b:	add    BYTE PTR fs:[eax],al
  411d0e:	add    BYTE PTR [edx],dl
  411d10:	mov    ds:0x1121c10,eax
  411d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d16:	ins    BYTE PTR es:[edi],dx
  411d17:	add    dl,BYTE PTR [edx+0x0]
  411d1a:	pop    eax
  411d1b:	fld    DWORD PTR [edx]
  411d1d:	and    al,BYTE PTR [ecx]
  411d1f:	or     BYTE PTR [eax],ah
  411d21:	sbb    DWORD PTR [eax-0x65db57eb],esp
  411d27:	add    BYTE PTR [ecx],al
  411d29:	add    BYTE PTR [ecx+0x15],dh
  411d2c:	add    DWORD PTR [eax],eax
  411d2e:	or     DWORD PTR [ebx+eax*4],0x1008005
  411d35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d36:	xchg   edx,eax
  411d37:	add    BYTE PTR [edx],al
  411d39:	adc    al,0x84
  411d3b:	inc    edi
  411d3c:	or     BYTE PTR [eax],ah
  411d3e:	inc    eax
  411d3f:	add    DWORD PTR [edx],esp
  411d41:	push   ecx
  411d42:	adc    BYTE PTR [eax],cl
  411d44:	add    BYTE PTR [ebp+0x2c],cl
  411d47:	add    DWORD PTR [ebx],esi
  411d49:	add    BYTE PTR [eax],cl
  411d4b:	add    BYTE PTR [ecx+0x3],dl
  411d4e:	dec    edx
  411d4f:	inc    ecx
  411d50:	or     edx,DWORD PTR [eax+0x4030d025]
  411d56:	dec    eax
  411d57:	and    BYTE PTR [ebx],cl
  411d59:	add    al,0x0
  411d5b:	and    al,0x11
  411d5d:	add    BYTE PTR [ecx],bl
  411d5f:	add    al,dl
  411d61:	cmp    BYTE PTR [eax+eax*4+0x20425480],0x1
  411d69:	or     BYTE PTR [eax],ah
  411d6b:	jo     0x411db6
  411d6d:	dec    edx
  411d6e:	mov    al,ds:0xb311010
  411d73:	add    DWORD PTR [ecx],0xc
  411d76:	inc    eax
  411d77:	add    BYTE PTR es:[edx],al
  411d7a:	add    BYTE PTR [edx+0x8420690],al
  411d80:	sub    DWORD PTR [edx+0x2],0x8000842a
  411d87:	or     ah,BYTE PTR [eax+0x31]
  411d8a:	adc    al,0xa
  411d8c:	xor    al,BYTE PTR [edx+0x46]
  411d8f:	adc    DWORD PTR [edx+0x2],ebx
  411d92:	xchg   DWORD PTR [eax],eax
  411d94:	add    ecx,DWORD PTR [eax]
  411d96:	or     BYTE PTR [edx-0x80],0xc
  411d9a:	adc    DWORD PTR [eax+eax*1],ebp
  411d9d:	inc    eax
  411d9e:	ror    DWORD PTR [eax+0x18004308],1
  411da4:	add    BYTE PTR [eax],cl
  411da6:	add    DWORD PTR [eax+0x1490000c],esp
  411dac:	lods   eax,DWORD PTR ds:[esi]
  411dad:	mov    al,ds:0x1000002
  411db2:	dec    ecx
  411db3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411db4:	or     BYTE PTR [eax],dl
  411db6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411db7:	adc    DWORD PTR [ecx],esp
  411db9:	test   al,0x24
  411dbb:	ror    BYTE PTR ds:0xc200a000,0x6
  411dc2:	add    DWORD PTR [eax],eax
  411dc4:	sbb    BYTE PTR [esi+esi*1+0x12],al
  411dc8:	inc    edx
  411dc9:	add    al,BYTE PTR [ecx]
  411dcb:	mov    BYTE PTR [edx],al
  411dcd:	nop
  411dce:	add    DWORD PTR [esi],edx
  411dd0:	adc    BYTE PTR [eax],dh
  411dd2:	enter  0x2502,0x2
  411dd6:	add    BYTE PTR [eax+0x412a2401],al
  411ddc:	and    BYTE PTR [edx-0x7c4bffdc],al
  411de2:	add    BYTE PTR [esi],al
  411de4:	add    BYTE PTR [ecx+0x10],al
  411de7:	and    DWORD PTR [eax],ebx
  411de9:	and    ah,BYTE PTR [eax+0x70]
  411dec:	and    BYTE PTR [eax+0x0],bh
  411def:	or     al,0x30
  411df1:	add    al,0x4
  411df3:	add    ebx,DWORD PTR [eax-0x3fbdadbf]
  411df9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dfa:	and    BYTE PTR [eax+0x1488104],dh
  411e00:	push   ss
  411e01:	rol    BYTE PTR [eax],0x8
  411e04:	add    BYTE PTR [eax+edx*1+0x4a],dl
  411e08:	or     al,BYTE PTR [esi]
  411e0a:	pushf  
  411e0b:	inc    ecx
  411e0c:	and    al,BYTE PTR [ebx+eax*4-0x7edaff80]
  411e13:	push   eax
  411e14:	add    dl,BYTE PTR [ebx]
  411e16:	mov    al,ds:0xc22423
  411e1b:	inc    edx
  411e1c:	or     al,BYTE PTR [ecx+0x0]
  411e1f:	add    BYTE PTR [eax+0x51],al
  411e22:	adc    ch,BYTE PTR [eax]
  411e24:	or     al,0xb
  411e26:	and    BYTE PTR [eax],cl
  411e28:	adc    BYTE PTR [eax],al
  411e2a:	xchg   ebx,eax
  411e2b:	add    BYTE PTR [ebp+0xe02620],dl
  411e31:	push   es
  411e32:	add    BYTE PTR [ecx],cl
  411e34:	inc    eax
  411e35:	inc    ebp
  411e36:	sbb    BYTE PTR [eax+eax*1+0x2],dl
  411e3a:	xor    DWORD PTR [eax],ecx
  411e3c:	xor    DWORD PTR [eax+eax*2],0x900200
  411e43:	mov    al,0x30
  411e45:	cmp    BYTE PTR [eax],ah
  411e47:	adc    BYTE PTR [eax],dl
  411e49:	add    dh,BYTE PTR [eax+0x8]
  411e4c:	push   eax
  411e4d:	add    al,0x82
  411e4f:	add    dl,dh
  411e51:	add    DWORD PTR [eax],esp
  411e53:	adc    al,BYTE PTR [edx-0x4f7ff66e]
  411e59:	or     BYTE PTR [eax],bl
  411e5b:	add    al,0x2
  411e5d:	and    BYTE PTR [edx],dl
  411e5f:	imul   edx,DWORD PTR [eax+0x2d45],0xc0340121
  411e69:	pop    eax
  411e6a:	or     cl,BYTE PTR [esi-0x28]
  411e6d:	add    DWORD PTR [eax+0x31],edx
  411e70:	add    DWORD PTR [ecx+0x2329801],eax
  411e76:	nop
  411e77:	add    dl,BYTE PTR [eax+0x1a]
  411e7a:	inc    edx
  411e7b:	xor    BYTE PTR [eax+edx*1],ah
  411e7e:	add    BYTE PTR [eax-0x38],al
  411e81:	add    BYTE PTR [edx],al
  411e83:	sub    al,BYTE PTR [ecx+0x43040341]
  411e89:	add    BYTE PTR [edx],al
  411e8b:	push   eax
  411e8c:	add    DWORD PTR [esp+esi*2],ebx
  411e8f:	pusha  
  411e90:	or     BYTE PTR [eax],al
  411e92:	adc    DWORD PTR [eax],esp
  411e94:	add    BYTE PTR [ecx+edx*2+0x10],ah
  411e98:	inc    eax
  411e99:	or     cl,BYTE PTR [eax+0x103a0088]
  411e9f:	inc    edx
  411ea0:	pop    edx
  411ea1:	add    al,0x41
  411ea3:	adc    BYTE PTR [ecx],0xd0
  411ea6:	push   es
  411ea7:	xchg   ecx,eax
  411ea8:	sbb    BYTE PTR [edx],al
  411eaa:	cmp    BYTE PTR [edx],dh
  411eac:	(bad)
  411eb0:	add    ah,BYTE PTR [ecx+0x0]
  411eb3:	rol    BYTE PTR [eax],0xac
  411eb6:	or     BYTE PTR [edx+ecx*1],al
  411eb9:	add    BYTE PTR [ecx+0x76],al
  411ebc:	inc    eax
  411ebd:	add    al,0x1
  411ebf:	mov    al,ds:0x5401a00
  411ec4:	add    BYTE PTR [eax+0x0],0x3
  411ec8:	add    BYTE PTR [eax+0x41],al
  411ecb:	pusha  
  411ecc:	inc    ebp
  411ecd:	or     BYTE PTR [eax],al
  411ecf:	ret    0x270
  411ed2:	xchg   esp,eax
  411ed3:	add    eax,0x2022341
  411ed8:	ror    DWORD PTR [eax+edx*4+0x12],1
  411edc:	and    eax,DWORD PTR [eax]
  411ede:	add    ah,al
  411ee0:	mov    WORD PTR [ebx+0x82b0b4],es
  411ee6:	and    BYTE PTR [ecx+0x20],ch
  411ee9:	adc    eax,DWORD PTR [eax*1+0x306010e0]
  411ef0:	sub    dl,BYTE PTR [edx+ecx*1]
  411ef3:	add    BYTE PTR [edx],al
  411ef5:	mov    esp,0xc2880414
  411efa:	and    DWORD PTR [esi+edx*1+0x4e],ecx
  411efe:	add    BYTE PTR [esi],bl
  411f00:	sub    BYTE PTR [ecx+0x0],al
  411f03:	xor    BYTE PTR [eax+0x32800100],0x24
  411f0a:	add    al,ah
  411f0c:	or     al,0x0
  411f0e:	add    BYTE PTR [ebp+0x6],ah
  411f11:	mov    DWORD PTR [eax-0x7f],ecx
  411f14:	add    cl,BYTE PTR [eax]
  411f16:	lods   eax,DWORD PTR ds:[esi]
  411f17:	push   es
  411f18:	sub    DWORD PTR [ecx+ecx*1],0x4029902
  411f1f:	add    BYTE PTR [eax+0x5c368210],al
  411f25:	mov    esi,DWORD PTR [eax]
  411f27:	rol    BYTE PTR [eax],1
  411f29:	inc    ebx
  411f2a:	add    BYTE PTR [eax],ah
  411f2c:	mov    BYTE PTR ds:0x14213452,0x21
  411f33:	loop   0x411f73
  411f35:	test   BYTE PTR [eax+0x40],cl
  411f38:	add    cl,BYTE PTR [eax]
  411f3a:	test   BYTE PTR [edx],cl
  411f3c:	nop
  411f3d:	dec    edx
  411f3e:	mov    al,0x10
  411f40:	inc    ecx
  411f41:	or     cl,BYTE PTR [eax]
  411f43:	or     BYTE PTR [eax+0x9050224],al
  411f49:	int3   
  411f4a:	adc    dh,BYTE PTR [eax]
  411f4c:	mov    ds:0x2550524,al
  411f51:	or     cl,BYTE PTR [ecx+0x4036111]
  411f57:	add    DWORD PTR [eax+esi*2],eax
  411f5a:	xchg   esi,eax
  411f5b:	sbb    BYTE PTR [eax+edx*1],dh
  411f5e:	inc    eax
  411f5f:	call   0x4c2:0x42475010
  411f66:	and    dh,BYTE PTR [ebx]
  411f68:	add    al,0xc
  411f6a:	add    BYTE PTR [eax],dl
  411f6c:	add    al,BYTE PTR [edx+0x70882442]
  411f72:	add    al,0x5
  411f74:	inc    eax
  411f75:	and    DWORD PTR [eax+0x2],eax
  411f78:	sbb    al,0x81
  411f7a:	xor    BYTE PTR [edx+0x42282604],0x6c
  411f81:	push   es
  411f82:	and    al,0x41
  411f84:	add    BYTE PTR [ecx+eax*4],al
  411f87:	adc    eax,0x402201c8
  411f8c:	dec    ecx
  411f8d:	inc    eax
  411f8e:	loopne 0x411fb6
  411f90:	and    BYTE PTR [eax],dh
  411f92:	add    BYTE PTR [eax],al
  411f94:	mov    al,ds:0xe0008423
  411f99:	add    BYTE PTR [eax-0x7fdbfff8],ah
  411f9f:	adc    DWORD PTR [eax],esp
  411fa1:	dec    ebx
  411fa2:	adc    edx,esp
  411fa4:	or     BYTE PTR [ebx],al
  411fa6:	call   DWORD PTR ds:0x44fa98
  411fac:	and    al,BYTE PTR [edx]
  411fae:	jo     0x411fb8
  411fb0:	or     BYTE PTR [ecx+eax*8],dl
  411fb3:	adc    BYTE PTR [edx-0x6c],dh
  411fb6:	lods   al,BYTE PTR ds:[esi]
  411fb7:	add    dl,dl
  411fb9:	cmp    esp,esp
  411fbb:	add    BYTE PTR [ecx+0x4],al
  411fbe:	or     DWORD PTR [ecx],eax
  411fc0:	add    al,0x0
  411fc2:	adc    DWORD PTR [eax-0x80],esp
  411fc5:	add    BYTE PTR [eax+edx*4],cl
  411fc8:	daa    
  411fc9:	adc    DWORD PTR [eax+eax*1],edx
  411fcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fcd:	push   es
  411fce:	adc    ecx,DWORD PTR [edx]
  411fd0:	bound  esp,QWORD PTR [ecx-0x80]
  411fd3:	mov    BYTE PTR [ecx],al
  411fd5:	adc    BYTE PTR [edx-0x20],cl
  411fd8:	and    cl,cl
  411fda:	and    DWORD PTR [ebx+eax*1+0x10],edx
  411fde:	xchg   esp,eax
  411fdf:	add    eax,0xc20260
  411fe4:	add    BYTE PTR [esi+edx*2],cl
  411fe7:	les    eax,FWORD PTR [ecx+0x28301040]
  411fed:	or     cl,BYTE PTR [ecx]
  411fef:	and    BYTE PTR [eax],ah
  411ff1:	inc    eax
  411ff2:	and    DWORD PTR [eax+0x1b38290],0xbf804460
  411ffc:	rol    BYTE PTR [ebx],0xa
  411fff:	add    BYTE PTR [eax],ah
  412001:	or     ecx,DWORD PTR [eax+0x1a]
  412004:	sbb    BYTE PTR [eax],bl
  412006:	mov    eax,ds:0x4008044c
  41200b:	sub    BYTE PTR [eax],al
  41200d:	add    DWORD PTR [eax+0x49],ebp
  412010:	adc    BYTE PTR [eax*1+0x4320c374],0x0
  412018:	add    eax,DWORD PTR [edx+0x9]
  41201b:	add    eax,DWORD PTR [eax+0x0]
  41201e:	or     DWORD PTR [edx+ecx*1],eax
  412021:	lods   al,BYTE PTR ds:[esi]
  412022:	adc    DWORD PTR [eax+0x42a21040],ecx
  412028:	xor    al,dl
  41202a:	jb     0x412032
  41202c:	add    eax,DWORD PTR [eax+0x9]
  41202f:	inc    ecx
  412030:	push   esi
  412031:	add    al,BYTE PTR [eax]
  412033:	sbb    BYTE PTR [eax+ecx*1],0xc6
  412037:	adc    al,0x13
  412039:	xchg   edx,eax
  41203a:	and    al,0x18
  41203c:	or     BYTE PTR [edx],ah
  41203e:	add    al,BYTE PTR [edx]
  412040:	xchg   ecx,eax
  412041:	adc    BYTE PTR es:[eax+0x18],al
  412045:	push   es
  412046:	shl    BYTE PTR [eax+0x802a003],0x2c
  41204d:	and    BYTE PTR [edx],al
  41204f:	dec    esp
  412050:	and    eax,0x21088404
  412055:	push   0xffffffb4
  412057:	repnz add BYTE PTR ds:0xe005065a,dl
  41205e:	inc    eax
  41205f:	xchg   edx,eax
  412060:	add    BYTE PTR [esp+ebx*1],ah
  412063:	test   BYTE PTR [esi],cl
  412065:	push   es
  412066:	or     edx,ecx
  412068:	and    al,0x6
  41206a:	adc    BYTE PTR [edx],dh
  41206c:	or     DWORD PTR [edx],ecx
  41206e:	and    BYTE PTR [edx+eax*1],al
  412071:	push   ds
  412072:	and    eax,0x42380411
  412077:	daa    
  412078:	add    esp,DWORD PTR [eax+0x1f618]
  41207e:	add    al,BYTE PTR [ecx]
  412080:	mov    al,ds:0x39021203
  412085:	pusha  
  412086:	dec    esi
  412087:	add    BYTE PTR [eax+eax*4],dl
  41208a:	xchg   edx,eax
  41208b:	add    DWORD PTR [eax],0xffffffcc
  41208e:	add    BYTE PTR [ecx+0x3012025],al
  412094:	add    DWORD PTR [eax+ecx*4+0x62],eax
  412098:	sub    BYTE PTR [edi],al
  41209a:	add    BYTE PTR [edx],al
  41209c:	add    ah,BYTE PTR [edx]
  41209e:	nop
  41209f:	inc    eax
  4120a0:	mov    eax,0x480a1103
  4120a5:	and    al,0x28
  4120a7:	add    eax,0x2002300
  4120ac:	test   BYTE PTR [ebx+0xc8010c0],bl
  4120b2:	dec    eax
  4120b3:	xor    al,0x20
  4120b5:	test   BYTE PTR [ecx+0x16],al
  4120b8:	inc    edx
  4120b9:	mov    ah,0x8
  4120bb:	add    BYTE PTR [eax],0x57
  4120be:	add    DWORD PTR [eax+0x6571c010],ecx
  4120c4:	add    DWORD PTR [eax+0x6810302],eax
  4120ca:	shl    DWORD PTR [ebx+ebp*8+0xa013042],0x47
  4120d2:	push   eax
  4120d3:	mov    DWORD PTR [eax+eax*1],edx
  4120d6:	add    al,0x2a
  4120d8:	adc    BYTE PTR [eax-0x20],0x40
  4120dc:	add    DWORD PTR [eax],eax
  4120de:	add    DWORD PTR [eax+0x20],edx
  4120e1:	popa   
  4120e2:	pop    es
  4120e3:	shr    BYTE PTR [edx+0x24],0xa0
  4120e7:	cmp    BYTE PTR [eax+0x4c8108],al
  4120ed:	push   ds
  4120ee:	and    esp,DWORD PTR ds:0xbd00836
  4120f4:	add    DWORD PTR [edx+0x41],eax
  4120f7:	xor    DWORD PTR [ebx],0x8554085
  4120fd:	add    DWORD PTR [eax],edx
  4120ff:	inc    eax
  412100:	adc    BYTE PTR [ebx+0x1080b82],0xe
  412107:	add    BYTE PTR [edx],bl
  412109:	adc    cl,BYTE PTR [esp+eax*1+0x1e016808]
  412110:	adc    BYTE PTR [eax],al
  412112:	sbb    dl,BYTE PTR [eax+0x20]
  412115:	adc    BYTE PTR [eax],dl
  412117:	add    bl,BYTE PTR [ebx+0x2]
  41211a:	add    BYTE PTR [edx+0x47],0x0
  41211e:	cmp    BYTE PTR [eax+0x40],al
  412121:	mov    al,0xc0
  412123:	dec    ebp
  412124:	rol    BYTE PTR [ecx+ecx*2],0x2
  412128:	dec    eax
  412129:	fldenvw [eax+0x9]
  41212d:	pop    es
  41212e:	add    BYTE PTR [eax],cl
  412130:	or     al,BYTE PTR [ecx]
  412132:	fidiv  DWORD PTR [eax]
  412134:	add    WORD PTR [eax],dx
  412137:	jle    0x412159
  412139:	sbb    al,ah
  41213b:	inc    eax
  41213c:	push   edx
  41213d:	sub    BYTE PTR [eax],dl
  41213f:	into   
  412140:	adc    BYTE PTR [edx+0x49404038],0x0
  412147:	and    eax,0x4c00e52
  41214c:	add    BYTE PTR [eax+ecx*8],0x38
  412150:	and    DWORD PTR [eax+0x1402d050],0x8
  412157:	inc    ebx
  412158:	xchg   edx,eax
  412159:	add    DWORD PTR [ecx],0xa0142021
  41215f:	add    dl,al
  412161:	add    DWORD PTR [edx],ebp
  412163:	loope  0x41217d
  412165:	and    BYTE PTR [eax],dh
  412167:	or     BYTE PTR [eax+0x240800bc],bl
  41216d:	inc    eax
  41216e:	add    dl,BYTE PTR [eax]
  412170:	add    BYTE PTR [eax],dh
  412172:	push   es
  412173:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412174:	adc    al,0x84
  412176:	add    BYTE PTR [ebx],dl
  412178:	inc    esi
  412179:	inc    edx
  41217a:	or     DWORD PTR [eax+0x60420c11],edx
  412180:	inc    edi
  412181:	or     dl,BYTE PTR [eax]
  412183:	push   esp
  412184:	test   BYTE PTR [esp+eiz*4+0x1],bh
  412188:	sbb    DWORD PTR [eax-0x7bbff940],ebx
  41218e:	pop    esp
  41218f:	add    cl,BYTE PTR [ecx]
  412191:	adc    BYTE PTR [esi+0x40],dl
  412194:	xor    BYTE PTR [ecx],bl
  412196:	xchg   edx,eax
  412197:	mov    WORD PTR [eax],es
  412199:	and    DWORD PTR [edx+0x4],edi
  41219c:	add    eax,0x6a15808f
  4121a1:	pop    eax
  4121a2:	add    ah,BYTE PTR [edx-0x1e]
  4121a5:	mov    al,BYTE PTR [ecx]
  4121a7:	add    DWORD PTR [eax],edx
  4121a9:	or     BYTE PTR [eax+0x1],dh
  4121ac:	daa    
  4121ad:	and    BYTE PTR [eax],al
  4121af:	or     BYTE PTR [eax+0x5c000050],ah
  4121b5:	or     al,0x30
  4121b7:	add    al,BYTE PTR [edx]
  4121b9:	inc    eax
  4121ba:	xor    BYTE PTR [eax+0x3],al
  4121bd:	and    al,0x5
  4121bf:	shl    BYTE PTR [eax],0x1
  4121c2:	cmovo  esp,DWORD PTR [eax]
  4121c5:	mov    al,ds:0x20146840
  4121ca:	add    al,0x88
  4121cc:	pusha  
  4121cd:	add    al,0x21
  4121cf:	or     BYTE PTR [eax],al
  4121d1:	push   es
  4121d2:	pusha  
  4121d3:	add    BYTE PTR ds:0x81085004,al
  4121d9:	test   cl,al
  4121db:	push   edx
  4121dc:	or     ah,BYTE PTR [ebx+0x2]
  4121df:	add    al,BYTE PTR [ecx-0x3ffef96d]
  4121e5:	xor    BYTE PTR [esi],0xd9
  4121e8:	or     al,0x4
  4121ea:	add    al,0x1
  4121ec:	sub    BYTE PTR [esp+eax*1],ah
  4121ef:	add    BYTE PTR [ecx],al
  4121f1:	test   BYTE PTR [ebx],dl
  4121f3:	push   es
  4121f4:	add    BYTE PTR [ecx+0x5],dl
  4121f7:	add    al,BYTE PTR [edx+0x68a08058]
  4121fd:	or     BYTE PTR [esi+0x0],bl
  412200:	and    al,0x23
  412202:	add    BYTE PTR [ebx],bl
  412204:	cmp    BYTE PTR [ebx],ah
  412206:	inc    esp
  412207:	add    al,0xd0
  412209:	adc    BYTE PTR [ecx+eax*1+0x50],al
  41220d:	or     al,0x80
  41220f:	or     BYTE PTR [esp+esi*1],dl
  412212:	sbb    BYTE PTR [eax],ah
  412214:	and    DWORD PTR [ecx+esi*4+0x34],0x40662314
  41221c:	lock adc BYTE PTR [esi],ah
  41221f:	xor    BYTE PTR [eax],al
  412221:	loopne 0x4121c4
  412223:	add    eax,edx
  412225:	add    DWORD PTR [eax+edx*4],0x56014865
  41222c:	or     BYTE PTR [ebx],0x81
  41222f:	add    BYTE PTR [ebx],al
  412231:	and    BYTE PTR [eax],cl
  412233:	adc    BYTE PTR [eax],al
  412235:	add    dl,BYTE PTR [edx+0x2a1d0d4a]
  41223b:	inc    edi
  41223c:	or     BYTE PTR [eax],dl
  41223e:	nop
  41223f:	and    BYTE PTR [eax],al
  412241:	inc    esp
  412242:	adc    al,0x81
  412244:	or     eax,0x1000a062
  412249:	add    BYTE PTR [eax],dl
  41224b:	mov    BYTE PTR [eax+0x50],al
  41224e:	add    al,0x8
  412250:	xor    DWORD PTR [eax],ebx
  412252:	push   eax
  412253:	and    DWORD PTR [ecx],ecx
  412255:	adc    eax,DWORD PTR [eax]
  412257:	dec    esp
  412258:	add    DWORD PTR [eax+0x5cf10108],0x6024005
  412262:	add    DWORD PTR [eax],eax
  412264:	sub    al,0x88
  412266:	popa   
  412267:	mov    al,ds:0x600c4210
  41226c:	sub    al,0x52
  41226e:	or     al,0xb
  412270:	inc    eax
  412271:	add    BYTE PTR [ecx+0x2],ah
  412274:	add    BYTE PTR [eax+0x8],cl
  412277:	push   eax
  412278:	or     al,0x46
  41227a:	xor    al,0xa7
  41227c:	mov    al,ds:0x4080504
  412281:	inc    eax
  412282:	add    BYTE PTR [esi],dl
  412284:	adc    BYTE PTR [edi+0x529c8420],dh
  41228a:	or     BYTE PTR [edx],al
  41228c:	test   DWORD PTR [ecx+0x8c00801],edx
  412292:	push   0x21c41080
  412297:	add    al,al
  412299:	test   al,cl
  41229b:	mov    al,ds:0x80440000
  4122a0:	add    BYTE PTR [eax],al
  4122a2:	push   es
  4122a3:	add    BYTE PTR [ecx],al
  4122a5:	inc    esp
  4122a6:	add    al,BYTE PTR [eax+eax*4+0x37106200]
  4122ad:	xor    BYTE PTR [edx],0x80
  4122b0:	dec    esp
  4122b1:	inc    eax
  4122b2:	xor    DWORD PTR [eax-0x80],eax
  4122b5:	add    al,BYTE PTR [ebx+eax*4-0x16]
  4122b9:	add    DWORD PTR ds:0xc0a18c02,eax
  4122bf:	mov    al,BYTE PTR [edx+0x9]
  4122c2:	pop    es
  4122c3:	inc    esp
  4122c4:	add    al,BYTE PTR [eax]
  4122c6:	mov    eax,ds:0x14008008
  4122cb:	inc    edx
  4122cc:	add    BYTE PTR fs:[eax+edx*1],ah
  4122d0:	push   cs
  4122d1:	add    DWORD PTR [edx+eiz*1],eax
  4122d4:	les    ebp,FWORD PTR [eax+0x10849022]
  4122da:	add    ah,cl
  4122dc:	add    al,0x84
  4122de:	add    BYTE PTR [eax],cl
  4122e0:	sbb    DWORD PTR [eax+0x3],ecx
  4122e3:	test   BYTE PTR [eax],al
  4122e5:	dec    edx
  4122e6:	nop
  4122e7:	add    BYTE PTR [edx],ah
  4122e9:	or     BYTE PTR [eax],dh
  4122eb:	or     DWORD PTR [eax],esp
  4122ed:	mov    al,ds:0x22010322
  4122f2:	adc    al,BYTE PTR [ebp+eax*1+0x1a]
  4122f6:	or     DWORD PTR [eax-0x3fdb59c0],eax
  4122fc:	cmp    al,0xa8
  4122fe:	and    BYTE PTR [edx],cl
  412300:	ret    
  412301:	add    BYTE PTR [eax+0x43],al
  412304:	ret    
  412305:	add    DWORD PTR [ecx],ebx
  412307:	add    BYTE PTR [eax],0x28
  41230a:	or     al,0x16
  41230c:	mov    al,ds:0x8081a800
  412311:	add    BYTE PTR [edx+eiz*1],bl
  412314:	add    BYTE PTR [eax],cl
  412316:	add    al,0x28
  412318:	inc    esp
  412319:	dec    eax
  41231a:	ins    BYTE PTR es:[edi],dx
  41231b:	and    BYTE PTR [eax],0x0
  41231e:	add    eax,0x76345002
  412323:	call   0x41412939
  412328:	sub    DWORD PTR [eax+0xa],eax
  41232b:	inc    esp
  41232c:	add    DWORD PTR [eax+0x4000806],edx
  412332:	push   es
  412333:	or     edx,DWORD PTR [edx]
  412335:	adc    BYTE PTR [ecx+eax*1],dl
  412338:	or     DWORD PTR [eax+ecx*2],ebx
  41233b:	dec    esp
  41233c:	add    al,0xd
  41233e:	and    eax,0xda348885
  412343:	nop
  412344:	cmp    BYTE PTR [eax],al
  412346:	add    BYTE PTR [ecx+edx*1],al
  412349:	sbb    al,BYTE PTR [edx]
  41234b:	add    DWORD PTR [eax],ebp
  41234d:	add    al,0x10
  41234f:	add    al,ah
  412351:	inc    eax
  412352:	inc    edx
  412353:	cmp    dl,BYTE PTR [eax+0x8]
  412356:	mov    al,0x10
  412358:	and    eax,DWORD PTR [eax]
  41235a:	mov    WORD PTR [eax+ebp*4+0x0],fs
  41235e:	add    BYTE PTR [edx],al
  412360:	jno    0x4123aa
  412362:	dec    edx
  412363:	enter  0x2082,0x2
  412367:	or     BYTE PTR [ecx+eax*2],ah
  41236a:	add    BYTE PTR [eax+eax*1+0x11c9c42],ah
  412371:	leave  
  412372:	ret    0x1a0a
  412375:	xchg   esp,eax
  412376:	xor    DWORD PTR [eax],edx
  412378:	adc    dl,BYTE PTR [eax+0x48011]
  41237e:	xor    eax,0x41a90a04
  412383:	adc    cl,BYTE PTR [eax-0x48]
  412386:	or     ebp,DWORD PTR [eiz*8+0x282432]
  41238d:	adc    BYTE PTR [eax-0x2c],al
  412390:	dec    ecx
  412391:	fadd   DWORD PTR [ecx]
  412393:	add    al,0x50
  412395:	add    al,0x30
  412397:	loope  0x412399
  412399:	add    dl,dh
  41239b:	inc    edx
  41239c:	mov    al,ds:0x95c21e0
  4123a1:	adc    BYTE PTR [eax],0x40
  4123a4:	add    ebx,DWORD PTR [eax]
  4123a6:	xor    BYTE PTR [edx],dh
  4123a8:	sub    BYTE PTR [eax],al
  4123aa:	ror    BYTE PTR [eax+0x20c101],0x4
  4123b1:	and    BYTE PTR [edx+0x9],ch
  4123b4:	add    al,0x7
  4123b6:	out    0x0,al
  4123b8:	es push ss
  4123ba:	xchg   ebp,eax
  4123bb:	and    BYTE PTR [edx],ah
  4123bd:	adc    al,0x49
  4123bf:	or     BYTE PTR [eax],ah
  4123c1:	and    al,0x68
  4123c3:	push   es
  4123c4:	add    BYTE PTR [ebp+eax*1+0x0],bh
  4123c8:	add    DWORD PTR [ecx+esi*1],ebp
  4123cb:	add    DWORD PTR es:[ecx-0x3dfbdf5c],esp
  4123d2:	sbb    cl,BYTE PTR [eax]
  4123d4:	add    BYTE PTR [eax],dl
  4123d6:	or     DWORD PTR [eax],eax
  4123d8:	add    BYTE PTR [edx],ch
  4123da:	or     al,0x80
  4123dc:	and    DWORD PTR [eax],edx
  4123de:	add    al,0x21
  4123e0:	mov    cl,ah
  4123e2:	adc    BYTE PTR [eax],al
  4123e4:	sub    eax,0x7110a024
  4123e9:	add    DWORD PTR [ecx],esp
  4123eb:	add    DWORD PTR [eax+eax*8+0x2080c402],0x1200204
  4123f6:	scas   al,BYTE PTR es:[edi]
  4123f7:	es retf 0x4d
  4123fb:	and    al,0xc4
  4123fd:	sbb    esi,DWORD PTR [ecx]
  4123ff:	and    BYTE PTR [ebx],dl
  412401:	inc    ebx
  412402:	or     DWORD PTR [eax],esp
  412404:	push   edx
  412405:	nop
  412406:	shl    BYTE PTR [eax-0x3c],1
  412409:	adc    BYTE PTR [eax],cl
  41240b:	pop    edx
  41240c:	xchg   edx,eax
  41240d:	inc    eax
  41240e:	adc    BYTE PTR [ecx],dl
  412410:	inc    eax
  412411:	adc    BYTE PTR [eax+0x10000240],0x65
  412418:	add    DWORD PTR [eax-0x18],ecx
  41241b:	adc    bl,BYTE PTR [eax+0x25]
  41241e:	mov    BYTE PTR [eax],cl
  412420:	adc    al,BYTE PTR es:[eax-0x7f9fffdc]
  412427:	inc    edx
  412428:	adc    DWORD PTR [edx],edx
  41242a:	and    al,BYTE PTR [edx]
  41242c:	adc    DWORD PTR [ecx],ebp
  41242e:	and    BYTE PTR [ecx+0x0],dh
  412431:	and    al,0x85
  412433:	or     cl,BYTE PTR [eax]
  412435:	bound  ebp,QWORD PTR [edx]
  412437:	push   es
  412438:	or     eax,eax
  41243a:	gs or  al,0x1
  41243d:	sbb    BYTE PTR [ecx+0x10],ah
  412440:	adc    al,0x3
  412442:	add    DWORD PTR [ecx+eiz*2+0x4],0x88222000
  41244a:	(bad)  
  41244b:	pusha  
  41244c:	adc    DWORD PTR [edx],0x2461815
  412452:	fs sbb al,0x80
  412455:	add    BYTE PTR [eax],ah
  412457:	inc    edx
  412458:	add    BYTE PTR [eax-0x57fffdf8],al
  41245e:	inc    ecx
  41245f:	or     BYTE PTR [eax+0x6],0x10
  412463:	fadd   DWORD PTR [esi+0x20]
  412466:	add    al,0x18
  412468:	cmc    
  412469:	xor    al,0x14
  41246b:	or     BYTE PTR [eax],al
  41246d:	adc    al,BYTE PTR [esi+0x40082403]
  412473:	cwde   
  412474:	add    DWORD PTR [eax],esp
  412476:	inc    eax
  412477:	and    BYTE PTR [eax],ah
  412479:	or     al,0x40
  41247b:	add    DWORD PTR [ebx+0x0],eax
  41247e:	push   0x2c4420
  412483:	fcom   DWORD PTR [eax]
  412485:	add    BYTE PTR [eax+0x0],bl
  412488:	and    BYTE PTR [ecx+0x0],0x28
  41248c:	and    BYTE PTR [eax-0x80],al
  41248f:	call   0xc8493d34
  412494:	adc    al,0x6c
  412496:	enter  0x4123,0x0
  41249a:	stos   BYTE PTR es:[edi],al
  41249b:	mov    al,ds:0x2015b99
  4124a0:	push   eax
  4124a1:	inc    esp
  4124a2:	bound  ecx,QWORD PTR [eax]
  4124a4:	add    DWORD PTR [eax],esp
  4124a6:	bound  ebp,QWORD PTR [esi+0x46]
  4124a9:	add    eax,DWORD PTR [eax+edx*1+0xa]
  4124ad:	or     al,0x0
  4124af:	and    BYTE PTR [ecx],al
  4124b1:	or     DWORD PTR [eax],ecx
  4124b3:	je     0x4124b5
  4124b5:	adc    al,BYTE PTR [eax]
  4124b7:	mov    ds:0x2904414,al
  4124bc:	xor    al,0x40
  4124be:	and    cl,BYTE PTR [ebp+0x70]
  4124c1:	add    BYTE PTR [eax+0x82a67a],dh
  4124c7:	adc    BYTE PTR [eax],cl
  4124c9:	pusha  
  4124ca:	and    al,BYTE PTR [edx+0xb635226]
  4124d0:	sbb    eax,0x90c0405
  4124d5:	add    eax,eax
  4124d7:	push   ecx
  4124d8:	add    bl,BYTE PTR [eax+ecx*2+0x0]
  4124dc:	push   ecx
  4124dd:	add    al,0x40
  4124df:	or     dh,BYTE PTR [eax+0x82a0044]
  4124e5:	sbb    bl,BYTE PTR [ebx-0x6ffdfb52]
  4124eb:	fs xor al,0x42
  4124ee:	or     DWORD PTR [esp+eax*8],0x12400c1
  4124f5:	test   BYTE PTR [ecx],al
  4124f7:	add    BYTE PTR [eax],cl
  4124f9:	or     BYTE PTR [ebx],al
  4124fb:	add    BYTE PTR [esi],dl
  4124fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124fe:	and    BYTE PTR [eax],ah
  412500:	adc    BYTE PTR [eax],al
  412502:	add    al,BYTE PTR [eax]
  412504:	add    BYTE PTR [edx+ecx*1+0x356c8cb],al
  41250b:	mov    ds:0xc0,eax
  412510:	sbb    al,0xa
  412512:	sub    BYTE PTR [ecx+0x12],ah
  412515:	xor    al,0x20
  412517:	xor    BYTE PTR [eax],0xe
  41251a:	mov    al,ds:0xc00831
  41251f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412520:	retf   0x8600
  412523:	add    DWORD PTR [eax],0x2a
  412526:	and    al,BYTE PTR [eax]
  412528:	add    BYTE PTR [ecx],al
  41252a:	push   es
  41252b:	inc    eax
  41252c:	add    BYTE PTR [eax+0x800127],al
  412532:	mov    al,ds:0x28482882
  412537:	add    DWORD PTR fs:[ecx],0x1021040
  41253e:	adc    edx,DWORD PTR [edx+0x4a2c080]
  412544:	bound  eax,QWORD PTR [eax+0x187c0020]
  41254a:	test   BYTE PTR [eax],bh
  41254c:	adc    ah,BYTE PTR [eax]
  41254e:	jp     0x412510
  412550:	sbb    cl,BYTE PTR [eax]
  412552:	inc    ecx
  412553:	adc    ah,BYTE PTR [ebp+0x822e804]
  412559:	and    BYTE PTR [eax],dl
  41255b:	add    ah,dh
  41255d:	push   eax
  41255e:	nop
  41255f:	add    al,BYTE PTR [eax+0xf]
  412562:	or     al,0x4e
  412564:	ss inc eax
  412566:	or     BYTE PTR [eax],al
  412568:	sub    BYTE PTR [eax+eax*1-0x5a],dh
  41256c:	mov    al,ds:0x28006400
  412571:	or     ah,BYTE PTR [edx]
  412573:	mov    BYTE PTR [eax+eiz*4],al
  412576:	add    BYTE PTR [eax-0x7f24fbae],0x2
  41257d:	or     ch,BYTE PTR [esi+0x50]
  412580:	add    BYTE PTR [eax],0x0
  412583:	add    BYTE PTR [ecx],al
  412585:	mov    eax,0x4630210
  41258a:	add    BYTE PTR [ecx],al
  41258c:	xchg   esi,eax
  41258d:	and    DWORD PTR [ebx],eax
  41258f:	adc    al,0x1
  412591:	mov    ds:0x89412650,al
  412596:	add    BYTE PTR [esi+eax*8],cl
  412599:	mov    WORD PTR [eax-0x67d9ffdb],fs
  41259f:	add    BYTE PTR ds:0x11241290,cl
  4125a5:	and    eax,0x7842120c
  4125aa:	adc    al,0x80
  4125ac:	jo     0x41254e
  4125ae:	xchg   esp,eax
  4125af:	add    BYTE PTR [eax],al
  4125b1:	icebp  
  4125b2:	add    al,0x40
  4125b4:	dec    esp
  4125b5:	and    al,0xd
  4125b7:	sbb    BYTE PTR [eax+edx*2+0x10],cl
  4125bb:	add    BYTE PTR [eax+ebx*1],cl
  4125be:	add    al,0x10
  4125c0:	cwde   
  4125c1:	rcl    ebp,0x39
  4125c4:	add    BYTE PTR [eax],al
  4125c6:	imul   eax,DWORD PTR [edx+0x2112800],0x41
  4125cd:	adc    BYTE PTR [ecx+0x61],dl
  4125d0:	or     BYTE PTR [ebx],al
  4125d2:	loopne 0x41261c
  4125d4:	and    BYTE PTR [ecx-0x80],0x10
  4125d8:	sbb    ah,BYTE PTR [eax]
  4125da:	or     BYTE PTR [eax],al
  4125dc:	adc    BYTE PTR [ecx-0x40],al
  4125df:	dec    ebp
  4125e0:	or     eax,ebx
  4125e2:	or     al,0x86
  4125e4:	xor    BYTE PTR [edx],cl
  4125e6:	add    BYTE PTR [ebx],al
  4125e8:	enter  0x4c6,0x48
  4125ec:	add    ecx,DWORD PTR [ecx]
  4125ee:	add    BYTE PTR es:[eax],ah
  4125f1:	adc    al,0x0
  4125f3:	inc    eax
  4125f4:	adc    BYTE PTR [esi],ah
  4125f6:	add    BYTE PTR [eax],dl
  4125f8:	add    BYTE PTR [eax+ebx*8],dl
  4125fb:	adc    esp,eax
  4125fd:	adc    al,0x12
  4125ff:	xor    al,0x31
  412601:	cs add al,0x22
  412604:	stos   BYTE PTR es:[edi],al
  412605:	xor    BYTE PTR [ecx],al
  412607:	and    DWORD PTR [eax-0x7e6b7b00],eax
  41260d:	add    al,0x98
  41260f:	or     BYTE PTR [ebx],0x90
  412612:	test   eax,0x40a28368
  412617:	add    BYTE PTR [eax-0x7ff47eb4],ah
  41261d:	repnz and BYTE PTR [ecx+0x21],cl
  412621:	or     ch,BYTE PTR [ebp+0x84000b]
  412627:	or     al,BYTE PTR [eax]
  412629:	test   BYTE PTR [eax],0x30
  41262c:	add    BYTE PTR [edx],al
  41262e:	fcom   DWORD PTR [esi]
  412630:	add    eax,DWORD PTR [esp+eiz*2]
  412633:	or     esp,DWORD PTR [eax+edx*1-0x30]
  412637:	add    BYTE PTR [eax],0x90
  41263a:	retf   0x44cc
  41263d:	push   edx
  41263e:	inc    esp
  41263f:	cmp    BYTE PTR [ebx],cl
  412641:	inc    eax
  412642:	jne    0x412668
  412644:	add    BYTE PTR [ecx],ch
  412646:	add    al,BYTE PTR [eax]
  412648:	push   ebx
  412649:	mov    ds:0x400aa510,al
  41264e:	or     DWORD PTR [ecx-0x7dbbdfb8],ecx
  412654:	add    BYTE PTR [edx],al
  412656:	or     eax,DWORD PTR [ecx]
  412658:	add    DWORD PTR [ecx],eax
  41265a:	add    BYTE PTR [eax],ah
  41265c:	ret    0xc01b
  41265f:	add    DWORD PTR [eax-0x3c],0x8240c803
  412666:	add    DWORD PTR [edx+0x820001],eax
  41266c:	xor    al,BYTE PTR [eax+0x50020480]
  412672:	mov    BYTE PTR [edx+0x1806024],dl
  412678:	add    BYTE PTR [eax],al
  41267a:	and    BYTE PTR [eax],0x2b
  41267d:	add    BYTE PTR [ecx+0x8],al
  412680:	cwde   
  412681:	adc    BYTE PTR [ecx],al
  412683:	in     eax,dx
  412684:	mov    al,0x1
  412686:	or     ah,BYTE PTR [edx]
  412688:	push   cs
  412689:	pop    eax
  41268a:	adc    BYTE PTR [esp+edx*1],dl
  41268d:	inc    eax
  41268e:	xor    DWORD PTR [edx-0x10],eax
  412691:	xchg   ecx,eax
  412692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412693:	popa   
  412694:	add    BYTE PTR [eax],al
  412696:	adc    DWORD PTR [eax],eax
  412698:	add    BYTE PTR [eax+0x2040e844],0x1
  41269f:	ret    0x8430
  4126a2:	add    DWORD PTR [esi],eax
  4126a4:	or     al,0x41
  4126a6:	sub    dh,al
  4126a8:	int3   
  4126a9:	and    DWORD PTR [eax],edx
  4126ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126ac:	xor    BYTE PTR [eax+esi*1],cl
  4126af:	add    DWORD PTR [eax+0x1000032],edx
  4126b5:	add    al,0x84
  4126b7:	mov    DWORD PTR [ecx],esi
  4126b9:	add    BYTE PTR [eax+0x19a8020],al
  4126bf:	and    dl,BYTE PTR [eax]
  4126c1:	adc    DWORD PTR [eax+0xa],edx
  4126c4:	push   ss
  4126c5:	int3   
  4126c6:	shr    DWORD PTR [esp],1
  4126c9:	mov    BYTE PTR [ecx],dl
  4126cb:	ror    cl,0x0
  4126ce:	sub    eax,DWORD PTR [edx+0x1]
  4126d1:	add    BYTE PTR [eax+edx*1],cl
  4126d4:	call   0x81:0x10a00080
  4126db:	push   ss
  4126dc:	push   eax
  4126dd:	or     eax,0x400040
  4126e2:	or     DWORD PTR ds:0x68a44910,ebp
  4126e8:	dec    ebp
  4126e9:	test   BYTE PTR [eax-0x74],dl
  4126ec:	add    BYTE PTR [eax],al
  4126ee:	ror    DWORD PTR [eax+0x54090e0],0x0
  4126f5:	add    al,0x2
  4126f7:	mov    BYTE PTR [eax],bl
  4126f9:	shl    BYTE PTR [eax],0xc
  4126fc:	nop
  4126fd:	adc    BYTE PTR [eax+ecx*1],cl
  412700:	dec    eax
  412701:	test   al,0x8
  412703:	rol    DWORD PTR [eax+0x44],0x5
  412707:	shl    BYTE PTR [edx+eax*4],0x42
  41270b:	or     DWORD PTR [eax],0x2e
  41270e:	rol    DWORD PTR [edx+0x28],0x0
  412712:	push   esi
  412713:	adc    ch,al
  412715:	dec    ebp
  412716:	and    cl,BYTE PTR [edx-0x7dd53d80]
  41271c:	adc    BYTE PTR [eax+eiz*2],0x91
  412720:	popa   
  412721:	sbb    cl,al
  412723:	adc    bh,BYTE PTR [ecx]
  412725:	and    BYTE PTR [eax],ah
  412727:	xchg   edx,eax
  412728:	or     BYTE PTR [edx-0x78],al
  41272b:	xor    eax,DWORD PTR [ebx+0x15]
  41272e:	bound  esi,QWORD PTR [edi+0x42]
  412731:	add    ah,BYTE PTR [ecx]
  412733:	mov    al,0x10
  412735:	sub    BYTE PTR [eax+0x51],dl
  412738:	call   0x9829:0xa4200203
  41273f:	dec    eax
  412740:	sub    eax,ecx
  412742:	add    BYTE PTR [ecx],cl
  412744:	add    eax,DWORD PTR [edi+eax*1]
  412747:	add    BYTE PTR [esp+edx*4+0x21],0xc0
  41274c:	add    esi,DWORD PTR [eax]
  41274e:	sbb    BYTE PTR [esp+eiz*8],0x72
  412752:	and    BYTE PTR ss:[esi+0x11e08400],cl
  412759:	add    BYTE PTR [eax],ah
  41275b:	push   es
  41275c:	or     al,0x90
  41275e:	cmp    BYTE PTR [eax],ah
  412760:	add    eax,0xaaf6324
  412765:	inc    eax
  412766:	sbb    al,0x0
  412768:	or     DWORD PTR [eax],eax
  41276a:	push   es
  41276b:	add    BYTE PTR [edx+edx*1+0x25],cl
  41276f:	ins    BYTE PTR es:[edi],dx
  412770:	mov    es,WORD PTR [eax]
  412772:	test   al,0x0
  412774:	add    BYTE PTR [eax-0x6a],dl
  412777:	and    eax,DWORD PTR [eax+0x48]
  41277a:	push   es
  41277b:	test   bh,bh
  41277d:	adc    eax,0x44faac
  412782:	adc    BYTE PTR [eax+0x4c],al
  412785:	add    bl,BYTE PTR [ecx+0x40d0854]
  41278b:	lods   al,BYTE PTR ds:[esi]
  41278c:	add    DWORD PTR [edx],ecx
  41278e:	gs push cs
  412790:	push   es
  412791:	inc    eax
  412792:	add    eax,0x80a0041a
  412797:	adc    al,BYTE PTR [ecx]
  412799:	adc    BYTE PTR [eax],0x4
  41279c:	add    BYTE PTR [ecx],dl
  41279e:	add    BYTE PTR [eax],0x8
  4127a1:	inc    ecx
  4127a2:	and    al,BYTE PTR [edx+0x3b]
  4127a5:	popa   
  4127a6:	xor    ecx,DWORD PTR [eax+0x44b40a0e]
  4127ac:	or     BYTE PTR [eax+eax*2+0x108d0],ah
  4127b3:	sbb    al,BYTE PTR [eax-0x57fffc70]
  4127b9:	add    al,0x19
  4127bb:	add    DWORD PTR [eax],eax
  4127bd:	cmp    DWORD PTR [eax+0x40004093],ebp
  4127c3:	adc    BYTE PTR [eax-0x40],al
  4127c6:	dec    eax
  4127c7:	and    BYTE PTR [eax],cl
  4127c9:	add    BYTE PTR [eax+eax*1],al
  4127cc:	sbb    DWORD PTR [edx],eax
  4127ce:	inc    ecx
  4127cf:	mov    eax,ds:0xd42000
  4127d4:	or     BYTE PTR [eax-0x7fff7b50],bl
  4127da:	cmp    BYTE PTR [eax+0x2a08222],al
  4127e0:	mov    al,ds:0xb1210200
  4127e5:	adc    al,BYTE PTR [ebx]
  4127e7:	push   eax
  4127e8:	or     BYTE PTR [edx+eax*4],dl
  4127eb:	add    eax,0x24040359
  4127f0:	adc    eax,0x4171c014
  4127f5:	add    eax,0xc10441c8
  4127fa:	add    al,0x96
  4127fc:	add    DWORD PTR [ecx],eax
  4127fe:	stos   BYTE PTR es:[edi],al
  4127ff:	or     eax,0x704a40
  412804:	inc    eax
  412805:	ror    BYTE PTR [edx],0x42
  412808:	and    ah,BYTE PTR [ebp+0x65]
  41280b:	add    al,BYTE PTR [esi+eax*2-0x77b74bd8]
  412812:	test   DWORD PTR [eax+0x3241801],eax
  412818:	and    BYTE PTR [edi+0x38802a88],al
  41281e:	adc    BYTE PTR [edx],0x18
  412821:	adc    BYTE PTR [eax+0xd],0x0
  412825:	and    DWORD PTR [edx+0x64883042],eax
  41282b:	inc    ebx
  41282c:	add    BYTE PTR [ecx+0x14c4e013],dh
  412832:	and    BYTE PTR [eax-0x48],al
  412835:	add    dh,BYTE PTR [eax]
  412837:	and    eax,0x70204b0a
  41283c:	add    BYTE PTR [esi-0x74d5bde0],al
  412842:	push   0x6d342042
  412847:	mov    ds:0x80046622,eax
  41284c:	xor    BYTE PTR [eax],dl
  41284e:	inc    eax
  41284f:	and    BYTE PTR [ecx],dl
  412851:	add    al,BYTE PTR [esi+0x0]
  412854:	add    al,0x43
  412856:	(bad)  
  412857:	and    BYTE PTR [edx],ah
  412859:	inc    ebp
  41285a:	lea    edx,[eax+0x20]
  41285d:	rcl    DWORD PTR [eax+0x452412],cl
  412863:	and    DWORD PTR [ecx],eax
  412865:	test   BYTE PTR [eax],dl
  412867:	inc    eax
  412868:	xor    dl,ch
  41286a:	or     BYTE PTR [edx+ecx*4],0x65
  41286e:	cmp    bl,BYTE PTR [eax]
  412870:	and    BYTE PTR [edx+0x4],0xa8
  412874:	add    cl,bl
  412876:	adc    al,BYTE PTR [eax]
  412878:	push   eax
  412879:	inc    eax
  41287a:	rcr    DWORD PTR [eax],0x82
  41287d:	sbb    al,BYTE PTR [ebx-0x6dabc6ee]
  412883:	jo     0x412899
  412885:	test   DWORD PTR [eax],ecx
  412887:	inc    esp
  412888:	or     BYTE PTR [esi],al
  41288a:	ds add al,0x91
  41288d:	add    BYTE PTR [eax],al
  41288f:	sbb    BYTE PTR [eax],dl
  412891:	add    BYTE PTR [ecx],0x90
  412894:	or     DWORD PTR [eax],eax
  412896:	or     BYTE PTR [eax+0x6720800],0x10
  41289d:	push   eax
  41289e:	bound  esp,QWORD PTR [eax-0x6ffbf400]
  4128a4:	ins    BYTE PTR es:[edi],dx
  4128a5:	adc    al,0xa
  4128a7:	ror    BYTE PTR [esi],0x11
  4128aa:	xchg   edx,eax
  4128ab:	and    DWORD PTR [ecx],eax
  4128ad:	leave  
  4128ae:	add    BYTE PTR [ecx],al
  4128b0:	xchg   ecx,eax
  4128b1:	mov    al,ds:0x100800d4
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	and    al,0x3
  4128ba:	xchg   edx,eax
  4128bb:	add    BYTE PTR [edi],ch
  4128bd:	adc    eax,DWORD PTR [eax]
  4128bf:	sbb    dl,BYTE PTR [eax+0x20]
  4128c2:	mov    DWORD PTR [eax-0x6d],0x40a30605
  4128c9:	sbb    al,0x0
  4128cb:	add    DWORD PTR [edx+0x2a2440c0],0x1
  4128d2:	add    BYTE PTR [eax],al
  4128d4:	loope  0x41287e
  4128d6:	and    BYTE PTR [eax],al
  4128d8:	mov    al,ds:0x2c429046
  4128dd:	adc    DWORD PTR [eax-0x745bbf00],ebp
  4128e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128e4:	js     0x4128eb
  4128e6:	push   eax
  4128e7:	adc    DWORD PTR [eax+ecx*4+0x20600a60],edx
  4128ee:	and    al,0x8a
  4128f0:	add    al,0x62
  4128f2:	add    cl,BYTE PTR [eax]
  4128f4:	and    DWORD PTR [ebx+ecx*1+0x1a],eax
  4128f8:	add    BYTE PTR [esi-0x76],bl
  4128fb:	and    dl,dl
  4128fd:	sub    ebp,DWORD PTR [eax]
  4128ff:	inc    eax
  412900:	add    al,0x2
  412902:	and    eax,DWORD PTR ds:0x200d4423
  412908:	cwde   
  412909:	add    BYTE PTR [eax],cl
  41290b:	mov    al,0x39
  41290d:	sub    BYTE PTR [ebx],cl
  41290f:	adc    BYTE PTR [eax+0x4a],dl
  412912:	and    BYTE PTR [edx],cl
  412914:	inc    edx
  412915:	dec    ebx
  412916:	add    BYTE PTR [eax+0x44],cl
  412919:	and    BYTE PTR [ecx*2-0x7d77bf80],cl
  412920:	add    edx,DWORD PTR [ebx-0x60]
  412923:	and    al,BYTE PTR [eax]
  412925:	xor    eax,0x2604020
  41292a:	mov    eax,DWORD PTR [ebx+ebx*4-0x76]
  41292e:	mov    eax,ds:0x61a60204
  412933:	adc    al,0x4
  412935:	dec    ecx
  412936:	or     BYTE PTR [eax],0x20
  412939:	and    BYTE PTR [edx],ah
  41293b:	aam    0x88
  41293d:	pushf  
  41293e:	adc    al,BYTE PTR [eax]
  412940:	add    bl,BYTE PTR [ecx+eax*8]
  412943:	test   BYTE PTR ds:0x84820a45,ch
  412949:	ret    0x4a0
  41294c:	mov    ah,0x45
  41294e:	add    ecx,DWORD PTR [eax+0x42]
  412951:	mov    WORD PTR [eax+0x3402013],gs
  412957:	xor    DWORD PTR [esp+ecx*1],ebp
  41295a:	push   eax
  41295b:	rol    BYTE PTR [eax+ecx*8],0x82
  41295f:	add    al,0x78
  412961:	add    BYTE PTR [edi],0x81
  412964:	adc    eax,0x485c2091
  412969:	nop
  41296a:	add    BYTE PTR [edx],dh
  41296c:	inc    eax
  41296d:	dec    ecx
  41296e:	adc    al,0xa0
  412970:	add    al,BYTE PTR [eax+0x130244]
  412976:	sbb    cl,BYTE PTR [edx]
  412978:	xor    BYTE PTR [ebx+0x2],0x1
  41297c:	es popa 
  41297e:	adc    DWORD PTR [ecx],eax
  412980:	or     DWORD PTR [eax-0x7feff0ff],edx
  412986:	dec    eax
  412987:	add    al,BYTE PTR [eax]
  412989:	and    BYTE PTR [eax+0x22],0xc2
  41298d:	add    DWORD PTR [ebx],edx
  41298f:	nop
  412990:	mov    BYTE PTR [edx+0x5],cl
  412993:	mov    dh,BYTE PTR [eax+0x1]
  412996:	jb     0x4129c0
  412998:	add    eax,0x51901818
  41299d:	mov    BYTE PTR [edx],cl
  41299f:	xor    BYTE PTR [eax+0x29],al
  4129a2:	add    DWORD PTR [eax],eax
  4129a4:	add    ch,al
  4129a6:	add    BYTE PTR [eax+0x78],al
  4129a9:	inc    ebx
  4129aa:	bound  esp,QWORD PTR [eax]
  4129ac:	add    dh,0x8a
  4129af:	inc    esp
  4129b0:	or     DWORD PTR [edx],eax
  4129b2:	loop   0x4129d9
  4129b4:	inc    eax
  4129b5:	add    DWORD PTR [ecx+0x48018a0],eax
  4129bb:	and    DWORD PTR [eax+0x68104a1],esp
  4129c1:	mov    WORD PTR [esp+eax*2+0x2288c351],fs
  4129c8:	or     BYTE PTR fs:[eax+ecx*1],0x10
  4129cd:	inc    ecx
  4129ce:	sbb    al,BYTE PTR [eax]
  4129d0:	dec    esp
  4129d1:	mov    al,ds:0x902400a
  4129d6:	add    BYTE PTR [eax],cl
  4129d8:	cdq    
  4129d9:	adc    eax,0xc808016b
  4129de:	(bad)  
  4129df:	and    BYTE PTR [eax],al
  4129e1:	adc    BYTE PTR [eax],0x24
  4129e4:	sbb    eax,DWORD PTR [ebp+0x3100a4a7]
  4129ea:	adc    BYTE PTR [eax+0x0],ah
  4129ed:	inc    esi
  4129ee:	inc    esp
  4129ef:	ret    0x3100
  4129f2:	mov    al,0x6
  4129f4:	jo     0x412a58
  4129f6:	adc    dl,BYTE PTR [eax]
  4129f8:	dec    ecx
  4129f9:	or     ecx,DWORD PTR [ebx+0x6]
  4129fc:	sub    BYTE PTR [edx+0x1001008],dl
  412a02:	add    BYTE PTR [edx+eiz*1],dl
  412a05:	or     BYTE PTR [eax],0x8
  412a08:	add    al,0x8
  412a0a:	adc    al,0x41
  412a0c:	icebp  
  412a0d:	or     al,0x12
  412a0f:	add    al,0xd1
  412a11:	add    al,0x4a
  412a13:	add    al,BYTE PTR [edx+0x3324038a]
  412a19:	push   0x10648000
  412a1e:	adc    BYTE PTR [edx],cl
  412a20:	pusha  
  412a21:	sub    BYTE PTR [esi+ebx*4],dl
  412a24:	dec    eax
  412a25:	mov    ds:0xe2404084,al
  412a2a:	adc    BYTE PTR [edx+eax*1+0x20a80880],ah
  412a31:	push   ss
  412a32:	add    eax,0xa120108
  412a37:	mov    ah,0x4
  412a39:	in     al,0x88
  412a3b:	inc    ecx
  412a3c:	cdq    
  412a3d:	add    al,BYTE PTR [ebx+0x40]
  412a40:	add    BYTE PTR [edx+0x0],al
  412a43:	or     BYTE PTR [eax],cl
  412a45:	and    al,0x88
  412a47:	mov    ds:0x88c80a89,eax
  412a4c:	xor    DWORD PTR [eax-0x1bf7bbfe],eax
  412a52:	xor    BYTE PTR ds:0x3119cca,dl
  412a58:	add    DWORD PTR [ecx-0x7e],edx
  412a5b:	add    BYTE PTR [esi+0x5860d080],dh
  412a61:	adc    al,BYTE PTR [edx]
  412a63:	(bad)
  412a67:	adc    BYTE PTR [eax],al
  412a69:	adc    BYTE PTR [eax-0x7b],al
  412a6c:	push   eax
  412a6d:	rol    BYTE PTR [eax],0x11
  412a70:	add    BYTE PTR [esi],al
  412a72:	add    BYTE PTR [ecx],al
  412a74:	inc    esi
  412a75:	bound  eax,QWORD PTR [ebx]
  412a77:	ret    
  412a78:	rcl    DWORD PTR [ecx-0x27d28f80],0x46
  412a7f:	test   BYTE PTR [eax+0x12],al
  412a82:	inc    eax
  412a83:	ret    0x1024
  412a86:	adc    BYTE PTR [esp+ebx*8+0x40200830],dl
  412a8d:	inc    eax
  412a8e:	and    al,BYTE PTR [eax]
  412a90:	add    eax,0x209a
  412a95:	or     BYTE PTR [edx+0x6885a24],al
  412a9b:	add    dl,BYTE PTR ds:0x2c00e0e8
  412aa1:	adc    cl,BYTE PTR [eax]
  412aa3:	sub    cl,BYTE PTR [ebx+edx*1]
  412aa6:	mov    BYTE PTR [eax],al
  412aa8:	adc    DWORD PTR [ebx+0x1],0x5042a080
  412aaf:	and    BYTE PTR [eax+eax*4+0x720805ac],al
  412ab6:	dec    eax
  412ab7:	add    al,0x8
  412ab9:	add    bl,BYTE PTR [eax]
  412abb:	add    BYTE PTR [eax],ah
  412abd:	and    DWORD PTR [eax],esi
  412abf:	mov    al,0x3
  412ac1:	and    DWORD PTR [eax],edx
  412ac3:	add    BYTE PTR [esi],al
  412ac5:	mov    eax,ds:0x2030820
  412aca:	add    BYTE PTR [ecx+0x802222f],al
  412ad0:	xchg   edx,eax
  412ad1:	xor    al,al
  412ad3:	test   al,0x0
  412ad5:	mov    al,ds:0x8130062c
  412ada:	and    BYTE PTR [eax+eax*1+0x5ce5d002],al
  412ae1:	rol    DWORD PTR [ebp-0x40],1
  412ae4:	and    bl,BYTE PTR [eax]
  412ae6:	add    BYTE PTR [eax-0x7bfedd44],dh
  412aec:	add    al,BYTE PTR [eax]
  412aee:	adc    BYTE PTR [esi],0x20
  412af1:	fadd   DWORD PTR [eax]
  412af3:	inc    eax
  412af4:	mov    al,ds:0x41600400
  412af9:	add    cl,cl
  412afb:	add    esp,eax
  412afd:	adc    DWORD PTR [eax],edx
  412aff:	add    DWORD PTR [ebx],0x628001b
  412b05:	push   eax
  412b06:	inc    eax
  412b07:	lods   al,BYTE PTR ds:[esi]
  412b08:	add    BYTE PTR [ecx+0x4004e702],dl
  412b0e:	ret    0x4406
  412b11:	bound  edx,QWORD PTR [ecx+0x30d8086a]
  412b17:	adc    BYTE PTR [ecx],al
  412b19:	xor    cl,dl
  412b1b:	add    BYTE PTR [eax+0x58001102],cl
  412b21:	sub    DWORD PTR [eax],ecx
  412b23:	xor    BYTE PTR [edx+0xb],0x15
  412b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b28:	add    BYTE PTR [eax-0x60],dl
  412b2b:	add    al,0x18
  412b2d:	add    BYTE PTR [ecx-0x67fbfcf0],al
  412b33:	add    BYTE PTR [ebx],0x58
  412b36:	dec    eax
  412b37:	add    eax,edx
  412b39:	sbb    ah,BYTE PTR [eax+0x10]
  412b3c:	jb     0x412b46
  412b3e:	or     BYTE PTR [eax],ah
  412b40:	and    BYTE PTR [eax],0x97
  412b43:	add    DWORD PTR [edx+eiz*2],eax
  412b46:	add    BYTE PTR [ecx],al
  412b48:	rol    BYTE PTR [ecx],1
  412b4a:	adc    BYTE PTR [eax],0x50
  412b4d:	adc    BYTE PTR [ecx+0x2b],al
  412b50:	enter  0xa04,0xa
  412b54:	xchg   DWORD PTR [ebx],eax
  412b56:	adc    BYTE PTR [eax],cl
  412b58:	pop    es
  412b59:	and    al,0x31
  412b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b5c:	and    BYTE PTR [eax-0x7e],al
  412b5f:	add    DWORD PTR [edx],eax
  412b61:	int3   
  412b62:	add    al,BYTE PTR [edx]
  412b64:	es push eax
  412b66:	xor    al,0x85
  412b68:	add    DWORD PTR [eax+0x1c261c0],eax
  412b6e:	add    BYTE PTR [eax+0x70],ah
  412b71:	add    BYTE PTR [eax],dl
  412b73:	inc    esp
  412b74:	mov    al,ds:0x4024390
  412b79:	inc    ecx
  412b7a:	sar    BYTE PTR [eax+0x21601800],1
  412b80:	add    al,al
  412b82:	shl    BYTE PTR [ebx],0x10
  412b85:	adc    DWORD PTR [eax+eax*1+0x11],ecx
  412b89:	push   ss
  412b8a:	add    DWORD PTR [edx+0x60],edx
  412b8d:	and    BYTE PTR [eax],ah
  412b8f:	add    BYTE PTR [edx],cl
  412b91:	ret    
  412b92:	inc    ecx
  412b93:	and    BYTE PTR [eax+0x8],bh
  412b96:	add    eax,0x28000500
  412b9b:	adc    BYTE PTR [edx],al
  412b9d:	inc    eax
  412b9e:	ror    BYTE PTR ds:0xc3710280,1
  412ba4:	and    DWORD PTR [ecx-0x6e],eax
  412ba7:	add    ecx,DWORD PTR [edx+0x202204]
  412bad:	rcl    DWORD PTR [edx+eax*2],0x0
  412bb1:	or     BYTE PTR [ecx],al
  412bb3:	add    BYTE PTR [edx],bl
  412bb5:	and    al,BYTE PTR [eax+0x26]
  412bb8:	sub    al,0x14
  412bba:	xor    edx,eax
  412bbc:	add    BYTE PTR [edx+0x30a40004],al
  412bc2:	add    BYTE PTR [eax],cl
  412bc4:	add    BYTE PTR [edx+0x10],al
  412bc7:	or     DWORD PTR [eax],ebx
  412bc9:	and    BYTE PTR [ecx],0x88
  412bcc:	add    DWORD PTR [eax+0xb],ecx
  412bcf:	enter  0xd008,0x42
  412bd3:	add    al,0x83
  412bd5:	cmp    al,BYTE PTR [esi+0x30c1221]
  412bdb:	adc    BYTE PTR [ebx],ah
  412bdd:	sbb    DWORD PTR [ecx],0x6a503810
  412be3:	xor    BYTE PTR [eax-0x60ebfdbf],0x10
  412bea:	xor    BYTE PTR [ecx+eax*1+0x4b100049],dl
  412bf1:	add    cl,al
  412bf3:	inc    esp
  412bf4:	or     BYTE PTR [eax],cl
  412bf6:	inc    eax
  412bf7:	and    al,0x94
  412bf9:	add    dl,0x12
  412bfc:	add    BYTE PTR [edx],al
  412bfe:	inc    eax
  412bff:	dec    edx
  412c00:	inc    eax
  412c01:	inc    edx
  412c02:	add    cl,al
  412c04:	add    DWORD PTR [ecx+0x601a0d6a],eax
  412c0a:	add    BYTE PTR [eax+0x12060020],cl
  412c10:	and    dh,BYTE PTR [edx]
  412c12:	and    al,0xec
  412c14:	js     0x412ba4
  412c16:	(bad)  
  412c18:	nop
  412c19:	or     dl,0x0
  412c1c:	add    eax,0xc0680880
  412c21:	jo     0x412c83
  412c23:	add    BYTE PTR [eax],dl
  412c25:	les    edx,FWORD PTR [eax]
  412c27:	and    BYTE PTR [eax],al
  412c29:	loope  0x412baf
  412c2b:	inc    edx
  412c2c:	inc    ecx
  412c2d:	mov    ah,BYTE PTR [ecx+0x0]
  412c30:	add    BYTE PTR [edx],0x1
  412c33:	or     bl,BYTE PTR [edx+eax*2+0x7]
  412c37:	adc    BYTE PTR [esp+edx*1],0x0
  412c3b:	add    BYTE PTR [esi+0x200190d2],al
  412c41:	add    BYTE PTR [edx],al
  412c43:	add    DWORD PTR [ecx+0x48],ecx
  412c46:	leave  
  412c47:	sbb    al,ah
  412c49:	inc    esp
  412c4a:	adc    BYTE PTR [eax+edx*1+0xa],cl
  412c4e:	add    BYTE PTR [eax],bl
  412c50:	add    BYTE PTR [edx-0x68],dh
  412c53:	add    BYTE PTR [ecx+0x30],al
  412c56:	add    ah,dl
  412c58:	push   esp
  412c59:	test   BYTE PTR fs:[edx+ebp*2+0x21],cl
  412c5e:	or     BYTE PTR [eax],0x20
  412c61:	inc    ecx
  412c62:	inc    edx
  412c63:	or     al,0x33
  412c65:	or     DWORD PTR [eax+eax*1],eax
  412c68:	ror    BYTE PTR gs:[eax],0x0
  412c6c:	push   ecx
  412c6d:	rcr    BYTE PTR [eax-0x3e],cl
  412c70:	push   ecx
  412c71:	add    DWORD PTR [ecx+eax*1],esp
  412c74:	test   al,0x9
  412c76:	cmp    DWORD PTR [ebx-0x7e],ebx
  412c79:	add    BYTE PTR [ebx],al
  412c7b:	add    BYTE PTR [eax+edx*1+0x46],cl
  412c7f:	adc    BYTE PTR [ecx],al
  412c81:	or     BYTE PTR [eax],al
  412c83:	or     BYTE PTR [ecx],al
  412c85:	inc    ecx
  412c86:	adc    BYTE PTR [ebx],0x9
  412c89:	cs and al,0x30
  412c8c:	add    BYTE PTR [ebx-0x7dffee00],al
  412c92:	add    BYTE PTR [edx-0x65f5ef00],dl
  412c98:	xor    al,BYTE PTR [eax]
  412c9a:	push   ss
  412c9b:	loopne 0x412cc8
  412c9d:	add    DWORD PTR [edi],edx
  412c9f:	add    BYTE PTR [edx+0x280c6126],cl
  412ca5:	inc    eax
  412ca6:	mov    al,ds:0x408c52
  412cab:	outs   dx,BYTE PTR es:[esi]
  412cad:	adc    al,0x2c
  412caf:	and    al,0xc8
  412cb1:	and    DWORD PTR [eax+eax*4],ecx
  412cb4:	inc    edx
  412cb5:	inc    ebp
  412cb6:	enter  0x4cc1,0x52
  412cba:	add    BYTE PTR [ecx],al
  412cbc:	add    cl,BYTE PTR [edi]
  412cbe:	add    al,0x6
  412cc0:	xchg   esp,eax
  412cc1:	add    BYTE PTR [ecx],dl
  412cc3:	inc    ebp
  412cc4:	inc    ebp
  412cc5:	adc    BYTE PTR [edx],ah
  412cc7:	add    BYTE PTR [edx-0x6e],0x40
  412ccb:	leave  
  412ccc:	and    DWORD PTR [eax-0x80],eax
  412ccf:	or     BYTE PTR [eax],bh
  412cd1:	or     dl,BYTE PTR [ecx-0x60]
  412cd4:	inc    ecx
  412cd5:	or     BYTE PTR [eax+0x1a100210],al
  412cdb:	enter  0xdc20,0x89
  412cdf:	sbb    eax,0x60820e01
  412ce4:	inc    eax
  412ce5:	and    BYTE PTR [edx],cl
  412ce7:	push   cs
  412ce8:	nop
  412ce9:	mov    DWORD PTR [eax],ecx
  412ceb:	mov    BYTE PTR [eax+0x3],al
  412cee:	or     eax,0xc68022c0
  412cf3:	add    BYTE PTR [eax+eiz*4],0x41
  412cf7:	sbb    BYTE PTR [eax],al
  412cf9:	or     BYTE PTR [esi+0x2],al
  412cfc:	inc    esp
  412cfd:	and    BYTE PTR [eax+0xa1da01f],0x65
  412d04:	and    al,BYTE PTR [eax+0x10241086]
  412d0a:	jo     0x412d3c
  412d0c:	fs inc eax
  412d0e:	dec    edx
  412d0f:	add    BYTE PTR [eax],dh
  412d11:	push   ss
  412d12:	mov    fs,ecx
  412d14:	nop
  412d15:	and    DWORD PTR [edx+0x61410087],ecx
  412d1b:	add    al,0x78
  412d1d:	add    al,0xe5
  412d1f:	in     al,0x86
  412d21:	push   ecx
  412d22:	adc    DWORD PTR [eax],esi
  412d24:	pusha  
  412d25:	add    BYTE PTR [ecx+0x31],al
  412d28:	add    BYTE PTR [eax+0x50],al
  412d2b:	and    BYTE PTR [eax],al
  412d2d:	add    BYTE PTR gs:[ecx],dl
  412d30:	add    BYTE PTR [edx],dl
  412d32:	inc    edx
  412d33:	or     BYTE PTR ss:[eax],ch
  412d36:	inc    esi
  412d37:	add    DWORD PTR [eax],ecx
  412d39:	adc    BYTE PTR [edx+eax*1+0x18],ah
  412d3d:	adc    DWORD PTR [esp+ecx*1-0x7e],esp
  412d41:	add    BYTE PTR [eax+0x400921a0],dl
  412d47:	xor    BYTE PTR [eax],0x1
  412d4a:	push   ss
  412d4b:	inc    eax
  412d4c:	add    ah,BYTE PTR [eax]
  412d4e:	adc    al,BYTE PTR [eax]
  412d50:	inc    eax
  412d51:	adc    BYTE PTR [eax],al
  412d53:	or     BYTE PTR ds:0x64d04020,al
  412d59:	adc    BYTE PTR [edx],ah
  412d5b:	adc    ch,BYTE PTR [eax+0x6022500]
  412d61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d62:	mov    dl,ch
  412d64:	mov    DWORD PTR [ecx+0x82270],ecx
  412d6a:	and    DWORD PTR [eax],edx
  412d6c:	or     BYTE PTR [eax+0x64600280],al
  412d72:	push   ss
  412d73:	xchg   ecx,eax
  412d74:	or     DWORD PTR [ecx+ecx*4],eax
  412d77:	ss dec eax
  412d79:	adc    esp,DWORD PTR [edx+0x26]
  412d7c:	add    bl,cl
  412d7e:	adc    ah,ch
  412d80:	push   esi
  412d81:	bound  eax,QWORD PTR [edx+0x60]
  412d84:	add    al,0x2
  412d86:	inc    eax
  412d87:	test   DWORD PTR [eax+0x44400284],ebx
  412d8d:	sbb    BYTE PTR [eax],al
  412d8f:	push   ds
  412d90:	adc    BYTE PTR [ecx],dh
  412d92:	or     BYTE PTR [eax],dl
  412d94:	sbb    al,0x41
  412d96:	and    bl,BYTE PTR [eax+0x9]
  412d99:	add    BYTE PTR [ecx],0x63
  412d9c:	push   es
  412d9d:	push   edx
  412d9e:	pop    eax
  412d9f:	adc    BYTE PTR [edx-0x7f2afd71],al
  412da5:	xor    DWORD PTR [ebp+eax*1+0x26],ebx
  412dac:	cmp    BYTE PTR [esi],dh
  412dae:	inc    ecx
  412daf:	adc    BYTE PTR [eax+ecx*4+0x41],0x89
  412db4:	xchg   ecx,eax
  412db5:	inc    eax
  412db6:	add    BYTE PTR [edx-0x67fffdde],cl
  412dbc:	add    BYTE PTR [eax],0xa4
  412dbf:	jl     0x412dc1
  412dc1:	and    BYTE PTR [edx],al
  412dc3:	add    dl,BYTE PTR [ebx+0x482a0818]
  412dc9:	add    BYTE PTR [eax-0x78],al
  412dcc:	add    BYTE PTR [eax-0x1dafdbd0],al
  412dd2:	sbb    cl,0xc
  412dd5:	shr    BYTE PTR [ecx+eax*2-0x7a],0x58
  412dda:	shr    BYTE PTR [ecx],0x90
  412ddd:	inc    esp
  412dde:	dec    edx
  412ddf:	mov    al,ds:0xe100150
  412de4:	adc    BYTE PTR [eax],dl
  412de6:	add    eax,0x5288520
  412deb:	cmp    BYTE PTR [ecx-0x5ebdf800],0xc8
  412df2:	add    ecx,eax
  412df4:	push   es
  412df5:	fld    QWORD PTR [eax+eax*1]
  412df8:	loopne 0x412d9a
  412dfa:	inc    edx
  412dfb:	add    al,BYTE PTR [eax]
  412dfd:	add    DWORD PTR [ebx+0x21800303],eax
  412e03:	adc    al,0x10
  412e05:	xor    BYTE PTR [ebp-0x58],al
  412e08:	mov    cl,0x8
  412e0a:	adc    DWORD PTR [eax],eax
  412e0c:	push   ecx
  412e0d:	add    BYTE PTR [edx+0x60],0x6
  412e11:	rol    DWORD PTR [eax],0x22
  412e14:	adc    al,BYTE PTR [ecx-0x72]
  412e17:	add    al,0xc0
  412e19:	add    al,0x18
  412e1b:	add    al,0xe0
  412e1d:	and    BYTE PTR [ecx-0x79],bh
  412e20:	mov    eax,ds:0x1600480b
  412e25:	add    BYTE PTR [eax],dl
  412e27:	mov    al,gs:0x16464005
  412e2d:	rcl    BYTE PTR [eax+0x2],0x42
  412e31:	push   es
  412e32:	add    BYTE PTR [eax],0x1
  412e35:	or     BYTE PTR [esi+0x11066384],al
  412e3b:	sbb    BYTE PTR [eax+0x507002d0],bl
  412e41:	inc    ecx
  412e42:	inc    esi
  412e43:	add    dl,BYTE PTR [edx]
  412e45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e46:	add    BYTE PTR [eax],0x40
  412e49:	and    eax,0x4040000
  412e4e:	shl    BYTE PTR [eax],1
  412e50:	add    BYTE PTR [eax],ah
  412e52:	pop    ebp
  412e53:	add    BYTE PTR [eax],cl
  412e55:	in     eax,0xc0
  412e57:	adc    eax,0x212540e8
  412e5c:	adc    cl,BYTE PTR [edx]
  412e5e:	add    BYTE PTR [esp+eax*1],ah
  412e61:	inc    ecx
  412e62:	and    eax,DWORD PTR [eax]
  412e64:	adc    bl,BYTE PTR [ebx]
  412e66:	add    DWORD PTR [esi+0x20],ebp
  412e69:	add    ah,BYTE PTR [eax]
  412e6b:	inc    ebp
  412e6c:	add    ch,BYTE PTR [eax]
  412e6e:	inc    eax
  412e6f:	inc    edx
  412e70:	adc    BYTE PTR [eax+0x0],cl
  412e73:	add    dl,BYTE PTR [esp+eiz*4]
  412e76:	stc    
  412e77:	and    al,BYTE PTR [ecx]
  412e79:	and    BYTE PTR [ebx],ah
  412e7b:	dec    edx
  412e7c:	sub    BYTE PTR [eax-0x1ceffaf6],dl
  412e82:	mov    cl,0x86
  412e84:	inc    esp
  412e85:	push   eax
  412e86:	adc    ecx,DWORD PTR [eax+ebx*8]
  412e89:	adc    BYTE PTR [esi],ch
  412e8b:	rcl    BYTE PTR [eax],0x14
  412e8e:	lock jo 0x412e99
  412e91:	rol    DWORD PTR [eax],0x80
  412e94:	push   eax
  412e95:	shl    BYTE PTR [eax],1
  412e97:	push   eax
  412e98:	cwde   
  412e99:	push   eax
  412e9a:	mov    WORD PTR [ecx+0x21120a08],fs
  412ea0:	and    BYTE PTR [ecx],al
  412ea2:	adc    ch,BYTE PTR [ecx+0x51a4c40b]
  412ea8:	shl    BYTE PTR [eax],1
  412eaa:	add    BYTE PTR [eax+eax*1],0x20
  412eae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eaf:	or     BYTE PTR [ecx-0x64fef7ee],bl
  412eb5:	mov    WORD PTR [edx-0x4effffef],ds
  412ebb:	xor    BYTE PTR [ecx+0x200c700a],dl
  412ec1:	or     ah,BYTE PTR [eax]
  412ec3:	and    BYTE PTR [eax+0x2ca001a],al
  412ec9:	dec    edx
  412eca:	sbb    BYTE PTR [edx],0x41
  412ecd:	push   edx
  412ece:	dec    eax
  412ecf:	add    BYTE PTR [eax],al
  412ed1:	add    BYTE PTR [edx+0x41],cl
  412ed4:	or     al,BYTE PTR gs:[eax+0x21]
  412ed8:	add    BYTE PTR [eax+0x4a],al
  412edb:	adc    BYTE PTR [ebx+0x11],al
  412ede:	xor    BYTE PTR [esi+eax*4],cl
  412ee1:	push   es
  412ee2:	add    BYTE PTR [ecx],bl
  412ee4:	sub    al,0x4
  412ee6:	mov    cl,0x12
  412ee8:	outs   dx,BYTE PTR ds:[esi]
  412ee9:	add    al,BYTE PTR [edx]
  412eeb:	mov    WORD PTR [eax+0xc001069],ss
  412ef1:	adc    BYTE PTR [esp+ebx*4+0x2b010140],al
  412ef8:	sub    BYTE PTR [eax],ah
  412efa:	adc    BYTE PTR [eax],al
  412efc:	or     BYTE PTR [eax],0x93
  412eff:	sub    eax,0x4411702
  412f04:	or     BYTE PTR [eax],cl
  412f06:	test   BYTE PTR [eax],al
  412f08:	or     cl,BYTE PTR [edx+0x11]
  412f0b:	cmp    eax,0xacc18a02
  412f10:	adc    BYTE PTR [esp+eax*1-0x7e],dl
  412f14:	sbb    eax,0x7302c093
  412f19:	add    al,0xa0
  412f1b:	push   ecx
  412f1c:	and    BYTE PTR [ecx],dl
  412f1e:	add    BYTE PTR [edx],bh
  412f20:	inc    esp
  412f21:	dec    eax
  412f22:	inc    ecx
  412f23:	or     BYTE PTR [edi],0x2
  412f26:	add    BYTE PTR [edx+0x1c],al
  412f29:	and    al,0x8d
  412f2b:	add    ah,BYTE PTR [eax+0x3003424]
  412f31:	push   es
  412f32:	add    al,0xc
  412f34:	add    eax,0x40414015
  412f39:	mov    BYTE PTR [eax],al
  412f3b:	and    DWORD PTR [eax],ebp
  412f3d:	hlt    
  412f3e:	and    DWORD PTR [ecx],eax
  412f40:	add    dl,BYTE PTR [eax]
  412f42:	cmp    BYTE PTR [eax+ecx*8],al
  412f45:	inc    ebp
  412f46:	add    al,0x62
  412f48:	mov    al,ds:0x89402931
  412f4d:	add    al,BYTE PTR [eax]
  412f4f:	add    cl,BYTE PTR [ecx-0x3c]
  412f52:	call   DWORD PTR ds:0x44f9b8
  412f58:	add    al,ah
  412f5a:	adc    al,BYTE PTR [esp+ebp*1]
  412f5d:	pusha  
  412f5e:	cmp    DWORD PTR [eax-0x5e],eax
  412f61:	add    ch,BYTE PTR [eax+esi*1+0x28044072]
  412f68:	or     bl,BYTE PTR [eax+eax*1]
  412f6b:	inc    eax
  412f6c:	add    al,0x95
  412f6e:	xor    BYTE PTR [edx],ch
  412f70:	push   eax
  412f71:	push   ebx
  412f72:	inc    eax
  412f73:	add    eax,0x73442208
  412f78:	add    dl,BYTE PTR [eax]
  412f7a:	inc    eax
  412f7b:	or     al,dl
  412f7d:	mov    al,ds:0xe8000126
  412f82:	test   BYTE PTR [eax+edx*1],al
  412f85:	add    BYTE PTR [edx],bl
  412f87:	add    BYTE PTR [eax+0x42000008],dl
  412f8d:	inc    ebx
  412f8e:	daa    
  412f8f:	and    eax,DWORD PTR [eax]
  412f91:	add    ah,dl
  412f93:	mov    BYTE PTR [ecx],bl
  412f95:	mov    DWORD PTR ds:0x5531a88,ecx
  412f9b:	add    esp,esp
  412f9d:	inc    eax
  412f9e:	inc    eax
  412f9f:	xor    al,BYTE PTR [eax]
  412fa1:	and    DWORD PTR [eax],ebx
  412fa3:	push   esi
  412fa4:	add    DWORD PTR [ecx+eax*1],eax
  412fa7:	adc    eax,eax
  412fa9:	inc    al
  412fab:	add    eax,DWORD PTR [edx]
  412fad:	inc    eax
  412fae:	add    ah,BYTE PTR [eax]
  412fb0:	adc    DWORD PTR [ebx],0x5330b20
  412fb6:	push   ebx
  412fb7:	adc    DWORD PTR [edx+eax*4-0x7ffe27f3],eax
  412fbe:	add    DWORD PTR [ecx],esp
  412fc0:	and    BYTE PTR [eax],al
  412fc2:	dec    ebx
  412fc3:	dec    ebx
  412fc4:	or     DWORD PTR [eax-0x1c],edx
  412fc7:	pushf  
  412fc8:	or     BYTE PTR [eax+0x40280304],al
  412fce:	add    BYTE PTR ds:0x68a1009,0x2
  412fd5:	add    BYTE PTR [eax],al
  412fd7:	add    BYTE PTR [esi],0xa
  412fda:	push   es
  412fdb:	mov    eax,ds:0x5100a108
  412fe0:	or     al,0x48
  412fe2:	dec    edx
  412fe3:	and    BYTE PTR [eax],al
  412fe5:	mov    al,ds:0x4100c482
  412fea:	adc    BYTE PTR [eax],cl
  412fec:	add    BYTE PTR [eax],0x36
  412fef:	and    cl,al
  412ff1:	add    BYTE PTR [eax+0x2],dl
  412ff4:	and    al,0x2
  412ff6:	cmp    eax,0x80401803
  412ffb:	push   eax
  412ffc:	xchg   BYTE PTR [eax+edx*1-0x80],al
  413000:	adc    eax,0x82880070
  413005:	or     BYTE PTR [ecx],ch
  413007:	xchg   esp,eax
  413008:	adc    DWORD PTR [edx+0x10],eax
  41300b:	adc    DWORD PTR [edx],eax
  41300d:	aad    0xc8
  41300f:	add    BYTE PTR ds:0x207cb10,al
  413015:	retf   0x821e
  413018:	inc    esp
  413019:	add    al,0xa5
  41301b:	inc    eax
  41301c:	or     BYTE PTR [eax],dl
  41301e:	add    eax,0x48001081
  413023:	push   es
  413024:	add    ah,BYTE PTR [edx+0x40000414]
  41302a:	add    BYTE PTR ds:0x24042322,dl
  413030:	fwait
  413031:	adc    BYTE PTR [eax],al
  413033:	push   ebp
  413034:	add    cl,0x2
  413037:	test   eax,0x2e901400
  41303c:	or     al,BYTE PTR [ecx+0x20]
  41303f:	or     BYTE PTR [ecx],dl
  413041:	xchg   edi,eax
  413042:	push   esp
  413043:	add    BYTE PTR es:[esi],al
  413046:	pop    eax
  413047:	and    BYTE PTR [ecx+0x400],al
  41304d:	add    al,0x30
  41304f:	add    dl,BYTE PTR [eax+0x4]
  413052:	add    al,0xc1
  413054:	pusha  
  413055:	add    BYTE PTR [ecx],al
  413057:	add    BYTE PTR [ebx],al
  413059:	or     BYTE PTR ds:0x10284020,bh
  41305f:	push   ebx
  413060:	add    ecx,DWORD PTR [eax]
  413062:	nop
  413063:	mov    fs,WORD PTR [ecx]
  413065:	shl    DWORD PTR [eax],1
  413067:	add    eax,0x8e310024
  41306c:	or     BYTE PTR [edx],al
  41306e:	and    BYTE PTR [ecx],0x9
  413071:	add    BYTE PTR [ecx+0x45],al
  413074:	add    BYTE PTR [eax],ah
  413076:	cmp    al,BYTE PTR [eax+0x24]
  413079:	ins    BYTE PTR es:[edi],dx
  41307a:	inc    edx
  41307b:	inc    edx
  41307c:	and    al,0x84
  41307e:	dec    ecx
  41307f:	adc    dl,dl
  413081:	mov    ah,0x0
  413083:	inc    eax
  413084:	add    BYTE PTR [eax],al
  413086:	rol    DWORD PTR [ecx-0x6dfefffc],0x44
  41308d:	or     cl,BYTE PTR [eax]
  41308f:	lar    esi,WORD PTR es:[eax-0x3c]
  413094:	push   eax
  413095:	push   eax
  413096:	adc    BYTE PTR [eax],al
  413098:	and    ecx,DWORD PTR [eax-0x38]
  41309b:	clc    
  41309c:	push   es
  41309d:	test   BYTE PTR [ecx],al
  41309f:	add    eax,0x322a5d15
  4130a4:	xor    dl,BYTE PTR [ebx]
  4130a6:	rol    DWORD PTR [eax+eax*1-0x4c],1
  4130aa:	push   es
  4130ab:	add    BYTE PTR [edx],al
  4130ad:	and    BYTE PTR [eax],dl
  4130af:	add    BYTE PTR ds:0xb2404b41,dl
  4130b5:	mov    ds:0x20344420,al
  4130ba:	adc    BYTE PTR [ecx],bl
  4130bc:	add    BYTE PTR [edx],al
  4130be:	sbb    eax,DWORD PTR [eax]
  4130c0:	and    BYTE PTR [ecx],al
  4130c2:	or     bl,BYTE PTR [eax]
  4130c4:	nop
  4130c5:	and    BYTE PTR [ebp+edx*1+0x63104140],al
  4130cc:	mov    al,ds:0x18050811
  4130d1:	add    BYTE PTR [ebx],bl
  4130d3:	add    eax,DWORD PTR [eax]
  4130d5:	imul   eax,edx,0xb
  4130d8:	sbb    BYTE PTR [eax],ah
  4130da:	sub    bl,BYTE PTR [eax]
  4130dc:	dec    eax
  4130dd:	loop   0x413120
  4130df:	add    BYTE PTR [edx],al
  4130e1:	nop
  4130e2:	or     al,0x52
  4130e4:	les    eax,FWORD PTR [eax]
  4130e6:	add    BYTE PTR [eax+0x27],al
  4130e9:	or     BYTE PTR [eax],cl
  4130eb:	es mov al,0xa
  4130ee:	sbb    al,0x33
  4130f0:	add    esp,DWORD PTR [eax]
  4130f2:	and    BYTE PTR [eax],0x80
  4130f5:	add    al,0x89
  4130f7:	popa   
  4130f8:	xor    al,0x34
  4130fa:	nop
  4130fb:	add    dl,BYTE PTR [eax+0x32]
  4130fe:	cmp    al,BYTE PTR [eax+0x999d2f8]
  413104:	xchg   BYTE PTR [edx],cl
  413106:	xor    cl,al
  413108:	mov    BYTE PTR [edi],dl
  41310a:	adc    DWORD PTR [edx],edx
  41310c:	add    BYTE PTR [eax],al
  41310e:	mov    WORD PTR [ebx+0x0],es
  413111:	rcl    DWORD PTR [esp+ecx*1],0x39
  413115:	inc    ecx
  413116:	add    cl,BYTE PTR [eax]
  413118:	inc    eax
  413119:	mov    WORD PTR [eax+0x14],ss
  41311c:	add    BYTE PTR [edx],dh
  41311e:	add    BYTE PTR [edx],ah
  413120:	add    cl,0x2
  413123:	rol    BYTE PTR [ecx+0x44834020],0x15
  41312a:	and    BYTE PTR [edx],al
  41312c:	sub    al,BYTE PTR [eax-0x5dfbea00]
  413132:	aam    0x6
  413134:	adc    al,0x26
  413136:	and    al,0xc0
  413138:	push   edx
  413139:	adc    eax,0x16220c0
  41313e:	sbb    bh,dh
  413140:	add    ah,BYTE PTR [eax]
  413142:	add    DWORD PTR [eax],ecx
  413144:	or     al,BYTE PTR [ebx]
  413146:	lds    esp,FWORD PTR [eax-0x38]
  413149:	mov    cl,ah
  41314b:	mov    eax,ds:0xfa035d10
  413150:	inc    eax
  413151:	add    BYTE PTR ds:0xa0820000,al
  413157:	aam    0x9
  413159:	push   edx
  41315a:	inc    ebx
  41315b:	adc    BYTE PTR [edx],al
  41315d:	mov    BYTE PTR [eax],cl
  41315f:	add    eax,DWORD PTR [eax]
  413161:	xchg   edx,eax
  413162:	jo     0x4131a6
  413164:	adc    eax,0x44942200
  413169:	add    BYTE PTR [edx],dl
  41316b:	inc    eax
  41316c:	and    DWORD PTR [esi+0x61824722],edx
  413172:	or     BYTE PTR [ecx+0x18],dl
  413175:	add    BYTE PTR [eax],dl
  413177:	add    DWORD PTR [eax],edx
  413179:	add    BYTE PTR ds:0x85020aa1,ch
  41317f:	sub    ecx,edi
  413181:	or     al,0x1
  413183:	inc    ecx
  413184:	add    BYTE PTR [eax],0xe
  413187:	add    eax,DWORD PTR [eax]
  413189:	inc    ecx
  41318a:	add    al,0x70
  41318c:	add    al,BYTE PTR [eax]
  41318e:	add    BYTE PTR [eax],al
  413190:	xchg   ebp,eax
  413191:	or     BYTE PTR [esi],0x12
  413194:	and    BYTE PTR [ecx],0x9
  413197:	or     ah,BYTE PTR [edi+ebx*1+0x1]
  41319b:	test   BYTE PTR [eax],al
  41319d:	and    eax,esi
  41319f:	and    al,0x61
  4131a1:	pop    ecx
  4131a2:	or     BYTE PTR [esi],dl
  4131a4:	push   eax
  4131a5:	or     al,BYTE PTR [ebp+0x41264600]
  4131ab:	inc    esi
  4131ac:	je     0x4131d2
  4131ae:	add    ch,al
  4131b0:	add    BYTE PTR [eax+0x0],0x41
  4131b4:	pop    eax
  4131b5:	push   ecx
  4131b6:	push   edi
  4131b7:	and    BYTE PTR [eax],0x4
  4131ba:	add    BYTE PTR [eax+0x228001b],0x90
  4131c1:	add    BYTE PTR [esp-0x50],0x49
  4131c6:	add    al,BYTE PTR [eax+0x60e2c00c]
  4131cc:	add    BYTE PTR [eax-0x7f7c6276],0x0
  4131d3:	sbb    dl,BYTE PTR [ebx+0x22900000]
  4131d9:	add    DWORD PTR [eax],esp
  4131db:	mov    al,ds:0x281a0434
  4131e0:	adc    ecx,DWORD PTR [eax+edx*2]
  4131e3:	add    DWORD PTR [eax+edx*1],0x1532a9
  4131ea:	xor    BYTE PTR [edx],cl
  4131ec:	add    esp,DWORD PTR [esi+0x34]
  4131ef:	or     al,BYTE PTR [eax]
  4131f1:	test   cl,ah
  4131f3:	inc    eax
  4131f4:	jp     0x4131fe
  4131f6:	and    al,ch
  4131f8:	add    al,BYTE PTR [esp+eax*1]
  4131fb:	and    BYTE PTR [eax],al
  4131fd:	xor    al,0x7d
  4131ff:	add    BYTE PTR [edx-0x7b],0x0
  413203:	add    BYTE PTR [edx+0x50],al
  413206:	xor    al,0xc1
  413208:	pusha  
  413209:	jb     0x41322b
  41320b:	add    dl,al
  41320d:	adc    BYTE PTR [eax],0x0
  413210:	sub    bl,al
  413212:	xor    BYTE PTR [eax],al
  413214:	ins    BYTE PTR es:[edi],dx
  413215:	push   edx
  413216:	add    BYTE PTR [eax-0x80],0x8
  41321a:	enter  0x9940,0x1a
  41321e:	and    DWORD PTR [eax],ebp
  413220:	and    BYTE PTR [edx],al
  413222:	rol    BYTE PTR [esi+edx*2],cl
  413225:	test   al,0x0
  413227:	dec    eax
  413228:	add    al,BYTE PTR [esi]
  41322a:	push   es
  41322b:	rol    BYTE PTR [edx],0x6e
  41322e:	or     bl,BYTE PTR [edx]
  413230:	test   al,al
  413232:	add    BYTE PTR [eax],0xe
  413235:	sbb    BYTE PTR [eax+0x1],0x14
  413239:	and    BYTE PTR [ecx],al
  41323b:	and    esp,esp
  41323d:	or     BYTE PTR [edx],al
  41323f:	and    DWORD PTR [ecx+0xc2a0],eax
  413245:	or     BYTE PTR [ecx+eiz*1],al
  413248:	add    al,0x0
  41324a:	ret    
  41324b:	sbb    DWORD PTR [eax+0x118c1],edx
  413251:	push   es
  413252:	nop
  413253:	add    al,0x41
  413255:	push   cs
  413256:	xchg   esp,eax
  413257:	rol    DWORD PTR [eax],0x36
  41325a:	jmp    0x8832:0x408598e1
  413261:	add    BYTE PTR [eax+eiz*1],ah
  413264:	xchg   esp,eax
  413265:	cdq    
  413266:	add    ebx,DWORD PTR [esp+eax*2+0x35c6c220]
  41326d:	or     DWORD PTR [edx],esp
  41326f:	add    eax,0xa86c4315
  413274:	and    al,0x8a
  413276:	xor    al,0x0
  413278:	add    BYTE PTR [eax+0x54],al
  41327b:	add    dh,BYTE PTR [ebp+0x5814020]
  413281:	add    DWORD PTR ss:[edx+0x185d2419],eax
  413288:	or     bl,cl
  41328a:	mov    dl,0xe5
  41328c:	jl     0x4132ce
  41328e:	mov    eax,0x1a070c
  413293:	mov    al,ds:0x10204410
  413298:	or     BYTE PTR [ecx],0x8
  41329b:	add    BYTE PTR [eax-0x5ffbd7e8],dl
  4132a1:	add    al,0x6a
  4132a3:	or     BYTE PTR [ecx-0x80],ah
  4132a6:	sub    DWORD PTR [eax],eax
  4132a8:	or     BYTE PTR [esi],al
  4132aa:	add    BYTE PTR [eax],ah
  4132ac:	add    BYTE PTR [ebx],0x1
  4132af:	mov    ds:0x33141ca8,al
  4132b4:	add    esi,DWORD PTR ds:0x8051ac09
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	add    al,0x29
  4132be:	adc    BYTE PTR [ecx+0x9],0xc1
  4132c2:	or     BYTE PTR [esi+0x5840201],cl
  4132c8:	add    BYTE PTR [edx],bh
  4132ca:	add    ah,BYTE PTR [eax]
  4132cc:	adc    al,0x45
  4132cf:	add    DWORD PTR [eax+0xb300618],esi
  4132d5:	or     BYTE PTR [eax],al
  4132d7:	and    cl,BYTE PTR [eax]
  4132d9:	cwde   
  4132da:	adc    BYTE PTR [eax+0x4103054],bh
  4132e0:	pop    esp
  4132e1:	ins    BYTE PTR es:[edi],dx
  4132e2:	adc    dl,BYTE PTR [eax+0x0]
  4132e5:	add    al,0x1
  4132e8:	or     BYTE PTR [edi+0x25aab0],ah
  4132ee:	add    dl,BYTE PTR [eax]
  4132f0:	dec    ebx
  4132f1:	and    al,BYTE PTR ds:0x28808011
  4132f7:	add    al,0x9
  4132f9:	inc    ecx
  4132fa:	add    BYTE PTR [eax+0xa],bl
  4132fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132fe:	inc    ebx
  4132ff:	je     0x413327
  413301:	adc    al,0x0
  413303:	add    dl,BYTE PTR [eax+edx*1]
  413306:	sub    BYTE PTR [eax+0x54],dl
  413309:	adc    DWORD PTR [eax+edx*4],ecx
  41330c:	and    al,BYTE PTR [ecx+0x46]
  41330f:	inc    edi
  413310:	es pop ebx
  413312:	or     al,BYTE PTR [edx]
  413314:	add    BYTE PTR [eax+0x5c6800c0],ah
  41331a:	xor    BYTE PTR [edx],al
  41331c:	add    BYTE PTR [ecx+ecx*2+0x44301026],0x5
  413324:	sub    BYTE PTR [eax+0x442044d1],al
  41332a:	or     al,BYTE PTR ds:0x8674114
  413330:	push   esp
  413331:	and    BYTE PTR [ebp+0x4],0x2
  413335:	adc    dl,BYTE PTR [eax]
  413337:	or     cl,BYTE PTR [eax]
  413339:	dec    eax
  41333a:	mov    eax,ds:0x91818088
  41333f:	add    BYTE PTR [ebx+0x51005220],al
  413345:	or     BYTE PTR [ecx],dl
  413347:	add    ch,BYTE PTR [eax+ebx*2+0x13404c]
  41334e:	push   eax
  41334f:	and    DWORD PTR [ecx+eax*1-0x2ffecdfe],esi
  413356:	dec    esi
  413357:	and    eax,0x4120411
  41335c:	fsub   QWORD PTR [edx+0x48]
  41335f:	test   eax,0xb2089b12
  413364:	add    al,BYTE PTR [edx+eiz*1]
  413367:	mov    DWORD PTR [eax+0x0],eax
  41336a:	pusha  
  41336b:	add    ch,BYTE PTR ds:0x7e009048
  413371:	popa   
  413372:	add    BYTE PTR [ebx+eax*4],ah
  413375:	add    DWORD PTR [eax+edx*1],eax
  413378:	and    DWORD PTR [eax+0x300e442],ebp
  41337e:	push   0x208061
  413383:	add    al,al
  413385:	xor    BYTE PTR [ecx],bh
  413387:	mov    dl,0x2
  413389:	push   es
  41338a:	add    DWORD PTR [eax],eax
  41338c:	add    eax,DWORD PTR ds:0x32902002
  413392:	or     DWORD PTR [ecx],0x1a20220
  413398:	test   BYTE PTR [ebx+eax*1],al
  41339b:	add    al,BYTE PTR [eax+0x10]
  41339e:	push   esp
  41339f:	inc    eax
  4133a0:	add    al,0x18
  4133a2:	inc    eax
  4133a3:	adc    BYTE PTR [edi+0x11809221],dl
  4133a9:	add    BYTE PTR [edx+0x40ac0742],al
  4133af:	stos   BYTE PTR es:[edi],al
  4133b0:	sbb    BYTE PTR [edx+0x51086c00],dl
  4133b6:	mov    DWORD PTR [eax+0x8],ecx
  4133b9:	or     al,0x2
  4133bb:	and    DWORD PTR [esi+0x8],0x683492
  4133c2:	add    al,0xc0
  4133c4:	sbb    BYTE PTR [eax+0x2000a998],bh
  4133ca:	add    BYTE PTR [eax],cl
  4133cc:	or     BYTE PTR [eax],0x56
  4133cf:	add    BYTE PTR [esi+0x20],al
  4133d2:	add    BYTE PTR [ecx],0x80
  4133d5:	and    edx,DWORD PTR [esp+ebp*4]
  4133d8:	mov    cl,BYTE PTR [edx-0x77]
  4133db:	add    ah,BYTE PTR [esi+edx*1-0x7b]
  4133df:	adc    al,0x61
  4133e1:	ret    0x1080
  4133e4:	and    dl,BYTE PTR [eax]
  4133e6:	inc    eax
  4133e7:	loope  0x4133f1
  4133e9:	or     BYTE PTR [ebx],al
  4133eb:	or     BYTE PTR [eax],ah
  4133ed:	push   0x44
  4133ef:	add    BYTE PTR [ecx+0x8],cl
  4133f2:	mov    al,ds:0x85502071
  4133f7:	push   ebx
  4133f8:	jp     0x41343a
  4133fa:	push   es
  4133fb:	imul   ebx,DWORD PTR [edx+ecx*1+0x200a60c0],0x1020921
  413406:	add    BYTE PTR [ecx+0xa00e4c2],al
  41340c:	add    al,al
  41340e:	add    DWORD PTR [ecx+eax*4],eax
  413411:	add    BYTE PTR [eax],0x0
  413414:	add    DWORD PTR [eax],0xf498a004
  41341a:	add    al,0x0
  41341c:	test   al,0x2
  41341e:	xor    BYTE PTR [edx],al
  413420:	push   ecx
  413421:	mov    cl,0x42
  413423:	and    cl,BYTE PTR [eax+eax*2]
  413426:	add    al,0x0
  413428:	push   edx
  413429:	push   eax
  41342a:	inc    esp
  41342b:	add    al,0x52
  41342d:	add    al,BYTE PTR [ecx]
  41342f:	add    BYTE PTR es:[eax],al
  413432:	dec    eax
  413433:	dec    eax
  413434:	and    BYTE PTR [esi+0x14],al
  413437:	and    al,BYTE PTR [eax+0x828120]
  41343d:	or     al,0x10
  41343f:	inc    eax
  413440:	and    BYTE PTR [edx],dl
  413442:	call   0x2020:0x8100010
  413449:	inc    ecx
  41344a:	xor    BYTE PTR [eax],dl
  41344c:	mov    eax,DWORD PTR [eax]
  41344e:	inc    eax
  41344f:	adc    BYTE PTR [ecx],cl
  413451:	nop
  413452:	mov    al,ds:0x41090a91
  413457:	push   es
  413458:	or     BYTE PTR [eax],dl
  41345a:	adc    BYTE PTR [edx],al
  41345c:	add    al,0x14
  41345e:	and    BYTE PTR fs:[eax],ah
  413461:	add    BYTE PTR [eax+eax*1+0x4a],bh
  413465:	mov    BYTE PTR ds:0x65802042,al
  41346b:	and    BYTE PTR [ebx+0x403b802],al
  413471:	pusha  
  413472:	inc    ecx
  413473:	mov    ch,0x86
  413475:	add    BYTE PTR ds:0x684044,cl
  41347b:	add    DWORD PTR [edx+ebp*2-0x5e],eax
  41347f:	inc    eax
  413480:	add    edx,DWORD PTR [eax-0x5e]
  413483:	enter  0x45a6,0x1a
  413487:	add    DWORD PTR [ecx-0x40],esp
  41348a:	add    al,0x0
  41348c:	adc    eax,DWORD PTR [eax]
  41348e:	and    DWORD PTR [edx+0x64],eax
  413491:	inc    ecx
  413492:	and    BYTE PTR [eax],al
  413494:	mov    BYTE PTR [eax],dl
  413496:	pop    ebx
  413497:	and    DWORD PTR [ecx],eax
  413499:	adc    al,BYTE PTR [edx]
  41349b:	adc    BYTE PTR [esi-0x7b],0x18
  41349f:	imul   esp,DWORD PTR [ecx+0x2],0x21401
  4134a6:	adc    esp,DWORD PTR [eax]
  4134a8:	inc    eax
  4134a9:	and    BYTE PTR [ecx+0x40],ah
  4134ac:	pop    ss
  4134ad:	add    BYTE PTR [eax+0x78],dh
  4134b0:	in     al,0x2
  4134b2:	xor    BYTE PTR [ecx+0x70484601],0x2
  4134b9:	nop
  4134ba:	mov    al,ds:0x24a5001
  4134bf:	jo     0x41344a
  4134c1:	or     al,0x14
  4134c3:	add    ch,dl
  4134c5:	and    eax,0x88428000
  4134ca:	add    BYTE PTR [ecx],al
  4134cc:	mov    WORD PTR [eax],cs
  4134ce:	and    BYTE PTR [eax],al
  4134d0:	add    esp,DWORD PTR [eax]
  4134d2:	add    eax,0x71038
  4134d7:	xchg   esp,eax
  4134d8:	add    BYTE PTR [eax+0x32004220],ch
  4134de:	add    DWORD PTR [ecx+0x6464080],edx
  4134e4:	scas   al,BYTE PTR es:[edi]
  4134e5:	or     BYTE PTR [ecx],0x40
  4134e8:	pop    ss
  4134e9:	add    BYTE PTR [eax+0x3124020],0x41
  4134f0:	add    BYTE PTR [eax+0x1],0x1c
  4134f4:	sbb    al,0xa1
  4134f6:	bound  eax,QWORD PTR [eax]
  4134f8:	pop    es
  4134f9:	add    DWORD PTR [eax],0x41039440
  4134ff:	push   es
  413500:	adc    DWORD PTR [edx+0x16],eax
  413503:	push   ebp
  413504:	and    eax,DWORD PTR [eax]
  413506:	inc    edx
  413507:	inc    eax
  413508:	lock mov al,0x0
  41350b:	jno    0x41350f
  41350d:	and    BYTE PTR ds:0x804b0148,dh
  413513:	add    BYTE PTR [edx+edi*4+0xc980c2],dh
  41351a:	push   es
  41351b:	cmp    BYTE PTR [edx-0x7a],al
  41351e:	or     BYTE PTR [edx],0x33
  413521:	push   edx
  413522:	add    al,0x0
  413524:	add    BYTE PTR [edx+0x20018049],dl
  41352a:	add    BYTE PTR [esi+eiz*1],0x4a
  41352e:	and    BYTE PTR [ecx-0x7c],0x6e
  413532:	and    edx,DWORD PTR [eax+0x4430540e]
  413538:	and    BYTE PTR [esi],al
  41353a:	xor    al,0x10
  41353c:	add    BYTE PTR [eax+0x2886000a],0xe0
  413543:	add    BYTE PTR [eax],al
  413545:	test   BYTE PTR [edx-0x70],cl
  413548:	add    al,0x81
  41354a:	or     DWORD PTR [edx],edx
  41354c:	enter  0x400,0x6e
  413550:	test   BYTE PTR [ecx],dh
  413552:	mov    al,ds:0xc2566111
  413557:	or     BYTE PTR [eax],ah
  413559:	sbb    ah,BYTE PTR ds:0xb100014
  41355f:	inc    ecx
  413560:	leave  
  413561:	rol    BYTE PTR [edx],0xd4
  413564:	and    BYTE PTR [ebx+eax*1],dl
  413567:	nop
  413568:	loop   0x4135d6
  41356a:	push   eax
  41356b:	fwait
  41356c:	cmp    eax,DWORD PTR [edx+0x2101214]
  413572:	add    BYTE PTR ds:0xa8128008,ah
  413578:	and    al,BYTE PTR [edx+0x6908c4a3]
  41357e:	or     al,BYTE PTR [eax+0x60]
  413581:	add    BYTE PTR [ecx+0x33283104],dh
  413587:	or     DWORD PTR [eax+ecx*1+0x40401],eax
  41358e:	ins    BYTE PTR es:[edi],dx
  41358f:	add    BYTE PTR [eax],cl
  413591:	add    BYTE PTR [esi+0x3a],al
  413594:	and    BYTE PTR [eax+ecx*2+0x10],dh
  413598:	cmp    al,BYTE PTR [ecx+0x6]
  41359b:	cdq    
  41359c:	or     DWORD PTR [eax+0x1],esp
  41359f:	inc    esp
  4135a0:	test   cl,al
  4135a2:	xor    eax,0x601020
  4135a7:	mov    al,ds:0x2668221
  4135ac:	and    al,BYTE PTR [eax-0x55c7bec0]
  4135b2:	popa   
  4135b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135b4:	add    al,0x5a
  4135b6:	sub    BYTE PTR [ebx],ah
  4135b8:	adc    BYTE PTR [ecx],al
  4135ba:	push   es
  4135bb:	add    DWORD PTR [eax+0xa220120],ecx
  4135c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135c2:	adc    BYTE PTR [ecx-0x5bcfa796],ch
  4135c8:	and    BYTE PTR [edx+edx*2+0x88ec030],al
  4135cf:	mov    DWORD PTR [eax],esp
  4135d1:	les    eax,FWORD PTR [eax*1+0x42100015]
  4135d8:	add    BYTE PTR [eax+edx*1],al
  4135db:	dec    eax
  4135dc:	or     DWORD PTR [ebp+0x9],esi
  4135df:	inc    edx
  4135e0:	inc    ecx
  4135e1:	cwde   
  4135e2:	and    eax,eax
  4135e4:	lea    esi,[eax-0x60]
  4135e7:	pusha  
  4135e8:	imul   edx,DWORD PTR [eax+0x62001121],0x11858a7
  4135f2:	add    BYTE PTR [edx],al
  4135f4:	inc    edx
  4135f5:	and    bl,BYTE PTR [edx+0x41]
  4135f8:	ret    
  4135f9:	add    BYTE PTR [edx+0x434c8271],ch
  4135ff:	dec    eax
  413600:	add    ah,BYTE PTR [ecx-0x40]
  413603:	add    al,BYTE PTR [eax]
  413605:	xor    DWORD PTR [eax],eax
  413607:	les    esi,FWORD PTR [eax+eiz*1]
  41360a:	shl    BYTE PTR [eax],1
  41360c:	add    DWORD PTR [eax+0x300e0147],0xd42010
  413616:	shr    BYTE PTR [edx-0x66],0x12
  41361a:	add    eax,0x6e000070
  41361f:	adc    BYTE PTR [ecx],0xd1
  413622:	adc    DWORD PTR [edx],ecx
  413624:	sub    BYTE PTR [ebx],0x16
  413627:	and    DWORD PTR [ebx+0x29],edx
  41362a:	add    BYTE PTR [eax],al
  41362c:	add    ecx,0x50102888
  413632:	and    al,BYTE PTR [ecx]
  413634:	or     BYTE PTR [eax],cl
  413636:	adc    DWORD PTR [edx],eax
  413638:	or     BYTE PTR [eax+0x54],al
  41363b:	sub    al,BYTE PTR [ecx+ecx*4]
  41363e:	fs add al,0x10
  413641:	add    BYTE PTR [eax+0x3484a80],ah
  413647:	add    BYTE PTR [eax+0x0],al
  41364a:	and    dh,BYTE PTR [esp+eax*4]
  41364d:	xor    BYTE PTR [eax],0x30
  413650:	add    DWORD PTR [ecx],0x53
  413653:	or     BYTE PTR [esi+0x4800100a],0x60
  41365a:	data16 and BYTE PTR [ecx+0x270901ab],al
  413661:	xor    eax,DWORD PTR [eax+0x122a9440]
  413667:	adc    DWORD PTR [eax],eax
  413669:	mov    DWORD PTR [eax],eax
  41366b:	add    al,0x81
  41366d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41366e:	push   ebx
  41366f:	inc    eax
  413670:	push   cs
  413671:	add    al,BYTE PTR [edx+0x720607]
  413677:	rcl    BYTE PTR [edx],0x34
  41367a:	adc    DWORD PTR [edx+0x6a00031],0x18
  413681:	sub    al,BYTE PTR [eax-0x56]
  413684:	or     DWORD PTR [eax],eax
  413686:	and    BYTE PTR [eax],cl
  413688:	inc    eax
  413689:	add    al,BYTE PTR [ecx]
  41368b:	pusha  
  41368c:	test   al,0x40
  41368e:	inc    eax
  41368f:	and    dl,BYTE PTR [eax+eax*2]
  413692:	adc    BYTE PTR [esi],dh
  413694:	sbb    BYTE PTR [eax-0x1bffbb3e],0xa7
  41369b:	nop
  41369c:	adc    al,BYTE PTR [ecx]
  41369e:	add    BYTE PTR [eax],ah
  4136a0:	inc    ecx
  4136a1:	inc    eax
  4136a2:	add    ah,BYTE PTR [esi]
  4136a4:	pusha  
  4136a5:	or     BYTE PTR [ecx+0x40],0x8
  4136a9:	add    DWORD PTR [ebp+0x32],eax
  4136ac:	xor    BYTE PTR [esp+eax*1+0x6104098],ah
  4136b3:	add    DWORD PTR [edx],eax
  4136b5:	add    eax,0x630000a6
  4136ba:	retf   0x2042
  4136bd:	test   dh,al
  4136bf:	push   eax
  4136c0:	or     al,0xc
  4136c2:	pusha  
  4136c3:	sbb    BYTE PTR [edx-0x7d326ffb],ah
  4136c9:	rol    BYTE PTR [edx],cl
  4136cb:	adc    DWORD PTR [eax],esp
  4136cd:	adc    BYTE PTR [eax+0x122f186],dl
  4136d3:	adc    DWORD PTR [ecx],ecx
  4136d5:	rol    BYTE PTR [eax],0x80
  4136d8:	xchg   DWORD PTR [eax+0x9384aec],ecx
  4136de:	add    eax,DWORD PTR [edi]
  4136e0:	and    eax,0xe1042108
  4136e5:	in     al,0x41
  4136e7:	add    BYTE PTR [eax+eax*4],ch
  4136ea:	inc    esp
  4136eb:	dec    edx
  4136ec:	adc    BYTE PTR [edx],0x4
  4136ef:	sysret 
  4136f1:	sbb    BYTE PTR [eax+0x4],0x61
  4136f5:	and    BYTE PTR [eax+0x220030c4],bl
  4136fb:	mov    ebx,0x97280600
  413700:	and    BYTE PTR [edx],al
  413702:	and    BYTE PTR [edx+0x40],ah
  413705:	add    ebx,0x81001c
  41370b:	add    BYTE PTR [eax],ah
  41370d:	push   cs
  41370e:	push   eax
  41370f:	and    dl,BYTE PTR [ecx]
  413711:	cmp    eax,0x1216685d
  413716:	add    BYTE PTR [edx-0x3e],0x11
  41371a:	xor    DWORD PTR [eax],eax
  41371c:	and    ah,0xc4
  41371f:	add    DWORD PTR [edi],ebp
  413721:	jmp    0x413725
  413723:	push   0x41c0260e
  413728:	call   DWORD PTR ds:0x44fc1c
  41372e:	mov    BYTE PTR [edx],al
  413730:	add    eax,DWORD PTR [eax-0x5dc8dcf4]
  413736:	add    BYTE PTR [edx],al
  413738:	add    BYTE PTR [eax],al
  41373a:	xor    DWORD PTR [ecx+0x45847400],eax
  413740:	add    BYTE PTR [ecx],ah
  413742:	xor    edx,DWORD PTR ds:0x48803403
  413748:	and    BYTE PTR [ecx+0x1a4d00c1],bl
  41374e:	mov    BYTE PTR [eax-0x68],ah
  413751:	sub    BYTE PTR [eax],al
  413753:	bound  ecx,QWORD PTR [edx-0x7ff26a00]
  413759:	adc    BYTE PTR [ebx],ah
  41375b:	and    ch,BYTE PTR [eax]
  41375d:	adc    cl,BYTE PTR [ecx]
  41375f:	adc    BYTE PTR [eax-0x4fb7edbb],cl
  413765:	add    eax,0x40020000
  41376a:	add    edx,DWORD PTR [eax-0x1efa76f0]
  413770:	add    eax,edx
  413772:	add    al,0x2c
  413774:	xor    cl,BYTE PTR [eax*2+0x30845090]
  41377b:	mov    ds:0x8a840400,eax
  413780:	push   es
  413781:	inc    eax
  413782:	jl     0x413789
  413784:	rcl    BYTE PTR [edx+0x38c80202],1
  41378a:	dec    ebx
  41378b:	add    al,0x0
  41378d:	les    ecx,FWORD PTR [ecx]
  41378f:	and    dl,BYTE PTR [edx+0x72]
  413792:	inc    ebx
  413793:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413794:	xchg   edx,eax
  413795:	push   edx
  413796:	pop    es
  413797:	popa   
  413798:	adc    DWORD PTR [esi],ecx
  41379a:	add    al,0x4
  41379c:	dec    esp
  41379d:	add    BYTE PTR [eax],ah
  41379f:	scas   al,BYTE PTR es:[edi]
  4137a0:	and    BYTE PTR [eax],0x40
  4137a3:	add    BYTE PTR [eax+0x16],cl
  4137a6:	adc    cl,dl
  4137a8:	mov    al,ds:0x2240100
  4137ad:	add    eax,DWORD PTR [eax+edx*4+0x40460c0]
  4137b4:	ror    BYTE PTR [ecx],0x28
  4137b7:	add    eax,0xe01101e8
  4137bc:	adc    BYTE PTR [eax],0x24
  4137bf:	push   ss
  4137c0:	and    eax,edx
  4137c2:	or     BYTE PTR [esi+0x76985941],cl
  4137c8:	add    BYTE PTR [ecx],cl
  4137ca:	and    al,0x70
  4137cc:	mov    eax,ds:0xc10b1046
  4137d1:	inc    eax
  4137d2:	add    BYTE PTR [eax],ch
  4137d4:	xchg   ecx,eax
  4137d5:	add    al,0x1
  4137d7:	push   es
  4137d8:	add    BYTE PTR ds:0x8901488,al
  4137de:	add    BYTE PTR [eax],dl
  4137e0:	adc    DWORD PTR [eax+ecx*4],eax
  4137e3:	add    DWORD PTR [eax-0x7dfdbcd9],eax
  4137e9:	stc    
  4137ea:	add    al,0xf
  4137ec:	mov    BYTE PTR [esi],al
  4137ee:	clc    
  4137ef:	mov    al,BYTE PTR [esi]
  4137f1:	les    esp,FWORD PTR [eax]
  4137f3:	push   es
  4137f4:	add    BYTE PTR [edx+0x40204050],0x8
  4137fb:	inc    eax
  4137fc:	add    BYTE PTR [eax],cl
  4137fe:	or     BYTE PTR [eax],dh
  413800:	loop   0x4137d2
  413802:	add    dl,BYTE PTR [eax+ebx*2-0x40]
  413806:	sbb    eax,DWORD PTR [eax]
  413808:	add    BYTE PTR [eax+edx*2],al
  41380b:	push   ss
  41380c:	push   es
  41380d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41380e:	inc    edx
  41380f:	loopne 0x41381b
  413811:	adc    BYTE PTR [eax],bh
  413813:	call   0x4282:0x53800073
  41381a:	or     eax,0xffffffa0
  41381d:	dec    esp
  41381e:	push   0x11140004
  413823:	add    al,0x0
  413825:	inc    ebx
  413826:	push   edx
  413827:	xchg   edx,eax
  413828:	pusha  
  413829:	mov    al,ds:0x1401a80
  41382e:	mov    al,ds:0x28605324
  413833:	add    BYTE PTR [edx],bl
  413835:	adc    BYTE PTR [ecx],bl
  413837:	sbb    ecx,DWORD PTR [edi+eax*1+0x24a20204]
  41383e:	pusha  
  41383f:	xor    BYTE PTR [edx],al
  413841:	dec    edx
  413842:	adc    BYTE PTR [edx+0x22012164],al
  413848:	sbb    eax,DWORD PTR [ecx+eax*1]
  41384b:	inc    ecx
  41384c:	and    al,0x58
  41384e:	pop    eax
  41384f:	rcr    bh,0xa
  413852:	sub    BYTE PTR [eax+0xa],bl
  413855:	add    BYTE PTR [ebx+0x0],al
  413858:	add    BYTE PTR es:[ebx],ah
  41385b:	sbb    al,0x0
  41385d:	add    eax,edx
  41385f:	inc    eax
  413860:	add    BYTE PTR [ecx+eax*8],dl
  413863:	cmp    edx,0xc0a00219
  413869:	dec    eax
  41386a:	add    al,ch
  41386c:	add    al,BYTE PTR [eax+0x20fa0c60]
  413872:	adc    DWORD PTR [eax],ecx
  413874:	rol    DWORD PTR [eax],0x80
  413877:	adc    eax,0x10400c54
  41387d:	mov    BYTE PTR [edx+0x23084688],al
  413883:	mov    eax,DWORD PTR [edi]
  413885:	inc    eax
  413886:	add    BYTE PTR [eax+0x402a2400],0x10
  41388d:	inc    edx
  41388e:	add    DWORD PTR [eax-0x7d9ee3de],edx
  413894:	add    BYTE PTR [ecx],dh
  413896:	add    dl,BYTE PTR [edx+esi*2]
  413899:	shr    BYTE PTR [edx],1
  41389b:	adc    al,BYTE PTR [eax]
  41389d:	add    al,0x40
  4138a0:	inc    ebx
  4138a1:	(bad)  
  4138a2:	and    eax,0x85080828
  4138a7:	or     al,BYTE PTR [eax]
  4138a9:	adc    BYTE PTR [eax-0x7fcfff9f],al
  4138af:	add    al,0x20
  4138b1:	test   DWORD PTR [edx],ebp
  4138b3:	or     DWORD PTR [eax-0x32],eax
  4138b6:	sub    BYTE PTR [ebx],cl
  4138b8:	sbb    eax,0x66410004
  4138bd:	and    al,BYTE PTR [eax]
  4138bf:	push   ecx
  4138c0:	daa    
  4138c1:	or     DWORD PTR ds:0x81c3024c,ebp
  4138c7:	add    BYTE PTR [edx-0x47d60000],al
  4138cd:	inc    ecx
  4138ce:	add    BYTE PTR [ebx],al
  4138d0:	add    al,0x0
  4138d2:	rol    BYTE PTR ds:0xe59c2c70,0x40
  4138d9:	adc    BYTE PTR ds:0x11840000,ah
  4138df:	add    BYTE PTR ds:0x281b1118,dl
  4138e5:	fs daa 
  4138e7:	push   edx
  4138e8:	inc    eax
  4138e9:	imul   edx,DWORD PTR [eax+0x21],0x20202219
  4138f0:	adc    eax,DWORD PTR [edx]
  4138f2:	add    BYTE PTR [eax-0x5c],0x80
  4138f6:	add    ah,BYTE PTR [eax+eax*2]
  4138f9:	or     BYTE PTR [ebx+0x0],0x20
  4138fd:	add    eax,0x17a10024
  413902:	push   cs
  413903:	ret    
  413904:	nop
  413905:	add    dl,BYTE PTR [eax+eax*1-0x4df7f72f]
  41390c:	xchg   ebp,eax
  41390d:	sub    BYTE PTR ds:0x18422c86,cl
  413913:	loopne 0x413916
  413915:	fadd   DWORD PTR [edx]
  413917:	xor    BYTE PTR [esi],al
  413919:	pop    edx
  41391a:	and    BYTE PTR [eax+0xa],al
  41391d:	add    BYTE PTR [edx],al
  41391f:	and    BYTE PTR [eax],al
  413921:	and    ah,BYTE PTR [eax]
  413923:	push   ss
  413924:	and    DWORD PTR [eax],eax
  413926:	loope  0x413928
  413928:	inc    ebp
  413929:	cmp    BYTE PTR [eax],dl
  41392b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41392c:	pop    eax
  41392d:	and    DWORD PTR [eax+0x14],esp
  413930:	add    BYTE PTR [edx],al
  413932:	inc    ecx
  413933:	xor    BYTE PTR [eax],cl
  413935:	inc    eax
  413936:	nop
  413937:	pop    eax
  413938:	nop
  413939:	add    DWORD PTR [edi],eax
  41393b:	add    ch,BYTE PTR [edx+0x20]
  41393e:	and    BYTE PTR ds:0x9e804,cl
  413944:	and    BYTE PTR [ebx],al
  413946:	rol    BYTE PTR [esp+eax*8],0x2
  41394a:	(bad)  
  41394b:	ror    BYTE PTR [edx],0x1d
  41394e:	and    dl,BYTE PTR [ecx]
  413950:	and    BYTE PTR [edx+ecx*1+0x1],al
  413954:	inc    esp
  413955:	add    al,0xf9
  413957:	adc    BYTE PTR [eax-0x77effbf6],al
  41395d:	adc    ecx,DWORD PTR [eax]
  41395f:	or     DWORD PTR [eiz*1-0x7f3ffaaf],esp
  413966:	xchg   esp,eax
  413967:	push   ecx
  413968:	and    BYTE PTR [ecx+0x8850000],dh
  41396e:	shl    BYTE PTR [edx+0x26],0x0
  413972:	mov    ecx,cs
  413974:	les    esp,FWORD PTR [ecx+0x2]
  413977:	add    al,0x4d
  413979:	push   ebp
  41397a:	and    dh,al
  41397c:	add    esp,DWORD PTR [eax]
  41397e:	adc    al,0x1
  413980:	and    BYTE PTR [eax],dl
  413982:	or     al,0x40
  413984:	adc    al,BYTE PTR [eax]
  413986:	xor    DWORD PTR ds:0x2a805020,edx
  41398c:	mov    al,ds:0x4881904
  413991:	and    ecx,DWORD PTR [eax-0x1c]
  413994:	and    BYTE PTR [edx+0x1c341390],ch
  41399a:	add    cl,BYTE PTR [eax]
  41399c:	sub    BYTE PTR [eax-0x4e9f3fba],ah
  4139a2:	cmp    BYTE PTR [eax],al
  4139a4:	mov    BYTE PTR [eax],0x20
  4139a7:	and    BYTE PTR [edx+0x1302108e],bh
  4139ad:	and    al,BYTE PTR [eax]
  4139af:	sbb    BYTE PTR [eax],al
  4139b1:	pop    eax
  4139b2:	dec    eax
  4139b3:	push   eax
  4139b4:	and    BYTE PTR [edx+0x49162960],al
  4139ba:	or     BYTE PTR [eax+edx*4-0x80],bh
  4139be:	add    BYTE PTR [eax],0xe0
  4139c1:	dec    ecx
  4139c2:	and    DWORD PTR [edx],eax
  4139c4:	push   es
  4139c5:	add    BYTE PTR ds:0x86447,ah
  4139cb:	lea    ebp,[ecx]
  4139cd:	shl    DWORD PTR [edx],cl
  4139cf:	and    BYTE PTR [esp+ecx*1-0x77f75fb0],al
  4139d6:	adc    BYTE PTR [eax+0x508d901],ah
  4139dc:	add    ah,BYTE PTR [eax]
  4139de:	nop
  4139df:	inc    eax
  4139e0:	inc    ebx
  4139e1:	add    eax,0x3004a0
  4139e6:	add    DWORD PTR [eax],eax
  4139e8:	sbb    DWORD PTR [eax],eax
  4139ea:	add    bl,BYTE PTR [eax]
  4139ec:	mov    al,ds:0x85890988
  4139f1:	bound  edx,QWORD PTR [eax]
  4139f3:	sbb    BYTE PTR [eax-0x79daefdf],dl
  4139f9:	or     BYTE PTR [eax+ebp*1],al
  4139fc:	data16 xor BYTE PTR [eax+edx*1+0x11d04],dh
  413a04:	pusha  
  413a05:	adc    BYTE PTR [eax+0x0],cl
  413a08:	sub    BYTE PTR [eax],dl
  413a0a:	adc    BYTE PTR [eax+0x68],dl
  413a0d:	rcl    DWORD PTR [edx-0x7c],1
  413a10:	add    dl,bl
  413a12:	sub    BYTE PTR [eax+0x4eef502],cl
  413a18:	dec    eax
  413a19:	popa   
  413a1a:	(bad)  
  413a1b:	enter  0x5a2,0x81
  413a1f:	or     al,BYTE PTR [eax]
  413a21:	add    BYTE PTR [ecx+eax*1],al
  413a24:	xor    al,0x10
  413a26:	adc    BYTE PTR [eax+ecx*1],al
  413a29:	add    BYTE PTR [ebx],0x10
  413a2c:	and    al,BYTE PTR [edx+0x0]
  413a2f:	sbb    DWORD PTR [ecx],esp
  413a31:	call   0x2a7fb5e
  413a36:	add    BYTE PTR [edx-0x77],al
  413a39:	push   ecx
  413a3a:	jb     0x413a3c
  413a3c:	jbe    0x413a81
  413a3e:	mov    eax,0x103101
  413a43:	pop    es
  413a44:	mov    BYTE PTR [eax],bh
  413a46:	or     DWORD PTR [edx+0x0],eax
  413a49:	and    cl,BYTE PTR [esi]
  413a4b:	mov    al,fs:0x2a110301
  413a51:	adc    DWORD PTR [edx-0x67be7df6],edx
  413a57:	or     al,0x80
  413a59:	add    al,BYTE PTR [esi]
  413a5b:	and    BYTE PTR [edi-0x75],dl
  413a5e:	add    al,0xa5
  413a60:	inc    edi
  413a61:	push   eax
  413a62:	and    BYTE PTR [ecx],cl
  413a64:	add    BYTE PTR [ecx+0xe0004],al
  413a6a:	call   0x2a0:0xea424872
  413a71:	xor    DWORD PTR [eax+edx*1-0x769d76f8],eax
  413a78:	and    DWORD PTR cs:[ebx-0x7feea400],ebx
  413a7f:	es cwde 
  413a81:	or     BYTE PTR [ecx+0x21242010],0x3
  413a88:	aam    0x44
  413a8a:	mov    BYTE PTR [eax+0x5c],al
  413a8d:	add    al,0x17
  413a8f:	adc    BYTE PTR [esi],ah
  413a91:	inc    ebx
  413a92:	adc    DWORD PTR [ecx],edx
  413a94:	jl     0x413aee
  413a96:	add    BYTE PTR [edi+ecx*1],bl
  413a99:	add    DWORD PTR [edi],eax
  413a9b:	sub    al,0x49
  413a9d:	push   cs
  413a9e:	inc    ecx
  413a9f:	mov    eax,ds:0xe42483b
  413aa4:	mov    BYTE PTR [ebp+eiz*2+0xe],al
  413aa8:	sub    al,0x8
  413aaa:	push   es
  413aab:	inc    eax
  413aac:	or     ah,BYTE PTR [eax+eax*1+0x20]
  413ab0:	add    DWORD PTR [eax+0x2c02882c],edx
  413ab6:	add    ch,BYTE PTR [eax]
  413ab8:	and    BYTE PTR [esi],al
  413aba:	add    DWORD PTR [eax+0x44],ecx
  413abd:	inc    eax
  413abe:	jo     0x413ae2
  413ac0:	add    DWORD PTR [edx-0x67efff90],edx
  413ac6:	add    ah,BYTE PTR [ecx+eax*1+0x11]
  413aca:	mov    BYTE PTR [edx],ah
  413acc:	inc    eax
  413acd:	sbb    DWORD PTR [ebp+0x1d],ecx
  413ad0:	add    BYTE PTR [eax],dl
  413ad2:	adc    DWORD PTR [eax],ecx
  413ad4:	add    dl,BYTE PTR [edx+0x53]
  413ad7:	sub    eax,0x92d48885
  413adc:	add    al,0x0
  413ade:	sbb    eax,0x3638002
  413ae3:	or     BYTE PTR [esi],dl
  413ae5:	sub    BYTE PTR [edx+0x24],al
  413ae8:	aam    0x12
  413aea:	inc    ecx
  413aeb:	add    BYTE PTR [ecx+0x8121024],0xa0
  413af2:	adc    ecx,DWORD PTR [eax]
  413af4:	sub    BYTE PTR [eax],al
  413af6:	nop
  413af7:	adc    BYTE PTR [ecx+0xd],al
  413afa:	push   ds
  413afb:	add    BYTE PTR [edx],0x12
  413afe:	and    BYTE PTR [eax+0x2],0x70
  413b02:	adc    DWORD PTR es:[eax+0x0],0xb0006008
  413b0a:	lahf   
  413b0b:	xchg   edx,eax
  413b0c:	adc    BYTE PTR [ebx],0x20
  413b0f:	bound  eax,QWORD PTR [eax]
  413b11:	adc    DWORD PTR [eax-0x77ef37fc],eax
  413b17:	or     BYTE PTR [ecx+0x1002a060],cl
  413b1d:	cmp    eax,DWORD PTR [eax]
  413b1f:	xor    BYTE PTR ds:0x38131,bl
  413b25:	push   es
  413b26:	inc    eax
  413b27:	add    BYTE PTR [ebx+0xa02006a],al
  413b2d:	nop
  413b2e:	inc    ecx
  413b2f:	and    BYTE PTR [eax],0x24
  413b32:	and    al,0x10
  413b34:	adc    BYTE PTR [ebp+0x8d20041],ah
  413b3a:	xor    DWORD PTR [eax],ebx
  413b3c:	add    BYTE PTR [eax],al
  413b3e:	mov    BYTE PTR [eax],0x28
  413b41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b42:	add    al,0x11
  413b44:	rol    BYTE PTR [ebx-0x27b1deb3],cl
  413b4a:	push   eax
  413b4b:	dec    esp
  413b4c:	or     BYTE PTR [eax+ebx*8],al
  413b4f:	push   esp
  413b50:	push   eax
  413b51:	adc    BYTE PTR ds:0x6403980,0x41
  413b58:	rcl    BYTE PTR [ebx+eax*2+0x8],0x4a
  413b5d:	mov    al,ds:0x44200880
  413b62:	stos   DWORD PTR es:[edi],eax
  413b63:	or     BYTE PTR [ecx+0x20],dl
  413b66:	nop
  413b67:	dec    edx
  413b68:	and    DWORD PTR [edx],0x14582022
  413b6e:	or     BYTE PTR ds:0x1989c549,ah
  413b74:	xor    BYTE PTR [eax+edx*8],ch
  413b77:	adc    BYTE PTR [ecx+eax*4],al
  413b7a:	push   eax
  413b7b:	hlt    
  413b7c:	mov    BYTE PTR [ecx+0x0],dl
  413b7f:	add    al,0x3
  413b81:	sbb    BYTE PTR [edx],al
  413b83:	or     BYTE PTR [eax+eax*1],0x6
  413b87:	adc    al,0x80
  413b89:	add    dh,BYTE PTR [esp+edx*1-0x6cd7677c]
  413b90:	add    dh,0x48
  413b93:	or     al,0x46
  413b95:	mov    ds:0x1102c46,al
  413b9a:	add    DWORD PTR [ecx+0x10],esp
  413b9d:	shl    BYTE PTR [ebx-0x20],0xc4
  413ba1:	add    DWORD PTR [edx+0x1120030],0x88006186
  413bab:	rol    BYTE PTR [eax-0x7a],0xc2
  413baf:	xor    BYTE PTR [eax],al
  413bb1:	pusha  
  413bb2:	inc    eax
  413bb3:	and    BYTE PTR [edx],al
  413bb5:	nop
  413bb6:	or     BYTE PTR [ebx+edx*1+0x43522a3],al
  413bbd:	push   0xa052604
  413bc2:	add    al,0x88
  413bc4:	inc    edx
  413bc5:	adc    BYTE PTR [ecx],cl
  413bc7:	push   eax
  413bc8:	inc    esp
  413bc9:	push   eax
  413bca:	add    BYTE PTR [eax-0x60],al
  413bcd:	sub    BYTE PTR [edx],cl
  413bcf:	add    esp,DWORD PTR [ecx]
  413bd1:	xor    eax,0xa240822c
  413bd6:	or     BYTE PTR [ecx],dl
  413bd8:	add    BYTE PTR [eax],ch
  413bda:	dec    ecx
  413bdb:	adc    BYTE PTR [ecx],al
  413bdd:	and    BYTE PTR [ebp+0x11780000],al
  413be3:	and    BYTE PTR [eax],al
  413be5:	add    BYTE PTR [eax+0x40],al
  413be8:	ret    
  413be9:	add    bl,BYTE PTR [eax-0x3e]
  413bec:	add    BYTE PTR [edx],al
  413bee:	adc    BYTE PTR [ebx],0x94
  413bf1:	add    cl,cl
  413bf3:	or     eax,0x890241
  413bf8:	fadd   st(0),st
  413bfa:	add    eax,0xa50ed045
  413bff:	add    BYTE PTR [edx],dl
  413c01:	add    ah,BYTE PTR [ecx]
  413c03:	nop
  413c04:	lods   eax,DWORD PTR ds:[esi]
  413c05:	add    BYTE PTR [edx+0x1d],al
  413c08:	inc    edx
  413c09:	or     eax,0x10e0404
  413c0e:	adc    DWORD PTR [eax-0x5f],ecx
  413c11:	adc    DWORD PTR [eax],ecx
  413c13:	inc    ecx
  413c14:	add    BYTE PTR [eax],cl
  413c16:	or     DWORD PTR [ecx],edx
  413c18:	add    BYTE PTR [edx],al
  413c1a:	push   edx
  413c1b:	add    DWORD PTR [esi],eax
  413c1d:	sbb    BYTE PTR [edx],0x44
  413c20:	add    BYTE PTR [eax+0x40367910],al
  413c26:	add    BYTE PTR [ebp+0x0],cl
  413c29:	stos   DWORD PTR es:[edi],eax
  413c2a:	cwde   
  413c2b:	loope  0x413c2d
  413c2d:	mov    DWORD PTR [eax],edx
  413c2f:	add    BYTE PTR [edx],al
  413c31:	rcl    DWORD PTR [eax+0x2],1
  413c34:	adc    cl,BYTE PTR [eax]
  413c36:	add    BYTE PTR [eax+0x23],al
  413c39:	inc    eax
  413c3a:	xchg   edi,eax
  413c3b:	adc    DWORD PTR [eax],eax
  413c3d:	mov    eax,0x4000200
  413c42:	push   ds
  413c43:	mov    dl,al
  413c45:	add    BYTE PTR [ebx],cl
  413c47:	add    BYTE PTR [edx],al
  413c49:	mov    al,ds:0x45006d05
  413c4e:	xchg   ecx,eax
  413c4f:	pusha  
  413c50:	push   eax
  413c51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c52:	or     BYTE PTR [edx],al
  413c54:	and    DWORD PTR [eax+0x808c72],0xe3240484
  413c5e:	adc    DWORD PTR [edx+ecx*2-0x7bf5cec8],eax
  413c65:	xor    BYTE PTR [eax-0x6e],al
  413c68:	add    cl,BYTE PTR [eax]
  413c6a:	pop    ecx
  413c6b:	add    BYTE PTR [eax],0x1
  413c6e:	add    BYTE PTR [eax],al
  413c70:	adc    al,BYTE PTR [ecx+0x0]
  413c73:	and    ah,dl
  413c75:	xor    ch,BYTE PTR [eax]
  413c77:	and    BYTE PTR [eax],0x8
  413c7a:	sub    BYTE PTR [eax+0x800204],0xa
  413c81:	add    DWORD PTR [edx],0x60
  413c84:	and    al,BYTE PTR [eax+0x12200380]
  413c8a:	mov    eax,ds:0x20009190
  413c8f:	adc    ecx,DWORD PTR [edx-0x7f]
  413c92:	and    BYTE PTR [ecx+0x0],al
  413c95:	xor    BYTE PTR [eax],0xa
  413c98:	add    al,0xb1
  413c9a:	add    DWORD PTR [eax-0x7f],ebp
  413c9d:	add    al,0xf
  413c9f:	inc    ecx
  413ca0:	or     al,BYTE PTR [eax+0x20]
  413ca3:	add    edx,DWORD PTR [ecx]
  413ca5:	add    al,al
  413ca7:	adc    al,0x25
  413ca9:	add    BYTE PTR [eax],cl
  413cab:	add    DWORD PTR [esi],eax
  413cad:	add    ah,0x0
  413cb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cb1:	test   BYTE PTR [ecx],ah
  413cb3:	push   eax
  413cb4:	push   esp
  413cb5:	xchg   esp,eax
  413cb6:	add    BYTE PTR [ecx+edx*2],dh
  413cb9:	add    al,0xd
  413cbb:	push   ecx
  413cbc:	mov    ds:0x4140654,eax
  413cc1:	add    BYTE PTR gs:[edx],dh
  413cc4:	add    al,0x94
  413cc6:	add    BYTE PTR [eax],ah
  413cc8:	and    DWORD PTR [edi],eax
  413cca:	inc    esp
  413ccb:	add    BYTE PTR [edx+0x44038000],al
  413cd1:	adc    BYTE PTR [edx],al
  413cd3:	sub    eax,DWORD PTR [ecx+eax*4]
  413cd6:	and    al,0x9
  413cd8:	adc    al,BYTE PTR [ecx-0x20]
  413cdb:	add    DWORD PTR fs:[eax],0x812114e0
  413ce2:	adc    eax,0xb2188002
  413ce7:	dec    edi
  413ce8:	add    BYTE PTR [eax],dl
  413cea:	or     al,BYTE PTR [eax]
  413cec:	popa   
  413ced:	and    cl,al
  413cef:	add    cl,dl
  413cf1:	cwde   
  413cf2:	stos   BYTE PTR es:[edi],al
  413cf3:	sbb    al,0x30
  413cf5:	add    BYTE PTR [esp+eiz*2],ah
  413cf8:	mov    ds:0x4634a801,al
  413cfd:	add    al,BYTE PTR [eax]
  413cff:	inc    edx
  413d00:	adc    al,0x4
  413d02:	and    DWORD PTR [eax+0x2],eax
  413d05:	add    BYTE PTR [esi+0x684060],0x8c
  413d0c:	add    BYTE PTR [eax],0x0
  413d0f:	pusha  
  413d10:	add    DWORD PTR [ecx+0x36a4d2a2],eax
  413d16:	add    BYTE PTR [ecx],bl
  413d18:	push   es
  413d19:	add    BYTE PTR [esi+ebp*1],dl
  413d1c:	adc    eax,eax
  413d1e:	add    al,0xa2
  413d20:	add    ah,BYTE PTR [ebp+0x24]
  413d23:	and    BYTE PTR [ebp+0x44],0x1
  413d27:	or     DWORD PTR [ebp+0x1209000],edx
  413d2d:	inc    eax
  413d2e:	push   es
  413d2f:	push   ss
  413d30:	inc    ecx
  413d31:	sbb    eax,0x18420102
  413d36:	pop    es
  413d37:	push   edx
  413d38:	adc    BYTE PTR [ecx],al
  413d3a:	inc    eax
  413d3b:	xor    BYTE PTR [ebx],al
  413d3d:	adc    al,0x4b
  413d3f:	jb     0x413cca
  413d41:	add    BYTE PTR [eax],cl
  413d43:	adc    al,BYTE PTR [eax]
  413d45:	mov    al,0x48
  413d47:	add    BYTE PTR [edx],dl
  413d49:	adc    DWORD PTR [eax],ecx
  413d4b:	adc    dl,BYTE PTR [ecx]
  413d4d:	xor    DWORD PTR [eax-0x59cddbff],ebx
  413d53:	and    DWORD PTR [eax],esp
  413d55:	add    ah,BYTE PTR [ebx+0x59004874]
  413d5b:	add    BYTE PTR [edx],cl
  413d5d:	inc    eax
  413d5e:	aam    0x45
  413d60:	add    BYTE PTR [ebx],dl
  413d62:	adc    DWORD PTR [eax],esi
  413d64:	add    al,0x81
  413d67:	sub    al,BYTE PTR [eax]
  413d69:	add    ah,al
  413d6b:	sbb    BYTE PTR [edx],al
  413d6d:	add    al,0x0
  413d6f:	and    BYTE PTR [eax],al
  413d71:	or     al,BYTE PTR [eax]
  413d73:	add    BYTE PTR [ebx],bl
  413d75:	add    BYTE PTR [eax+0xe],bh
  413d78:	inc    ecx
  413d79:	add    BYTE PTR [esp+eax*1],cl
  413d7c:	add    BYTE PTR ds:0xf0320800,al
  413d82:	or     DWORD PTR [edx],eax
  413d84:	sbb    BYTE PTR [edx],dl
  413d86:	rcl    BYTE PTR [edx],0xa
  413d89:	add    DWORD PTR [ecx],eax
  413d8b:	adc    al,BYTE PTR [eax]
  413d8d:	test   BYTE PTR [ebp+0x24],dl
  413d90:	add    al,0xb8
  413d92:	sahf   
  413d93:	and    al,BYTE PTR [eax]
  413d95:	mov    al,BYTE PTR [eax]
  413d97:	ret    0x8c02
  413d9a:	or     BYTE PTR [eax],dl
  413d9c:	adc    ah,BYTE PTR [edx+0x51]
  413d9f:	inc    esi
  413da0:	adc    DWORD PTR [eax+eax*1],edx
  413da3:	add    BYTE PTR [ebx],dl
  413da5:	or     eax,0xc414034
  413daa:	add    BYTE PTR [eax],ah
  413dac:	and    DWORD PTR [esi+0x54081083],0x60
  413db3:	add    BYTE PTR [eax-0x7f5fffb6],al
  413db9:	add    al,al
  413dbb:	add    al,0x42
  413dbd:	nop
  413dbe:	add    BYTE PTR [eax],ah
  413dc0:	and    BYTE PTR [eax],dh
  413dc2:	add    BYTE PTR [ecx],dl
  413dc4:	dec    esp
  413dc5:	or     BYTE PTR [esi],0x42
  413dc8:	or     BYTE PTR [ecx-0x27bbe7ff],0x80
  413dcf:	adc    eax,0x4182c482
  413dd4:	nop
  413dd5:	and    BYTE PTR [esp+eax*1-0x70],al
  413dd9:	shl    DWORD PTR [edx],1
  413ddb:	inc    ecx
  413ddc:	and    BYTE PTR [eax],al
  413dde:	adc    BYTE PTR ds:0xd0826,0x98
  413de5:	add    BYTE PTR [eax],0x8c
  413de8:	add    BYTE PTR [edx-0x7c],al
  413deb:	and    BYTE PTR [ebx],al
  413ded:	or     BYTE PTR [ecx],dl
  413def:	push   0x34b00004
  413df4:	dec    eax
  413df5:	or     DWORD PTR [eax],edx
  413df7:	add    dl,BYTE PTR [eax]
  413df9:	pusha  
  413dfa:	or     DWORD PTR [ecx],eax
  413dfc:	sbb    DWORD PTR [eax-0x6a],esp
  413dff:	rcr    DWORD PTR [edx],0xac
  413e02:	or     BYTE PTR [eax],0xc2
  413e05:	add    BYTE PTR [ecx+eax*4],ah
  413e08:	add    cl,BYTE PTR [eax]
  413e0a:	inc    eax
  413e0b:	add    DWORD PTR [edx],ecx
  413e0d:	test   al,0x40
  413e0f:	sbb    BYTE PTR [eax],al
  413e11:	and    eax,0x412080a0
  413e16:	adc    al,0x2
  413e18:	and    al,0x0
  413e1a:	or     BYTE PTR [eax],ah
  413e1c:	adc    al,0x0
  413e1e:	sbb    al,0x0
  413e20:	adc    cl,dl
  413e22:	xor    BYTE PTR [eax+0xa],cl
  413e25:	or     ah,BYTE PTR [eax-0x38]
  413e28:	fsub   QWORD PTR [eax]
  413e2a:	add    al,BYTE PTR [edx+0x1407607]
  413e30:	mov    BYTE PTR fs:[eax+0x44],al
  413e34:	adc    al,0x4c
  413e36:	adc    BYTE PTR [eax+eax*1+0x2470522],al
  413e3d:	leave  
  413e3e:	adc    al,BYTE PTR ds:0x8093740c
  413e44:	and    BYTE PTR [eax],ah
  413e46:	add    BYTE PTR [eax+0x52190826],dl
  413e4c:	or     DWORD PTR [eax],eax
  413e4e:	and    BYTE PTR [eax+0x48],al
  413e51:	push   es
  413e52:	dec    esp
  413e53:	inc    ebx
  413e54:	sbb    al,BYTE PTR [eax]
  413e56:	add    al,BYTE PTR [edx]
  413e58:	push   eax
  413e59:	adc    DWORD PTR [ecx],ecx
  413e5b:	and    al,0x0
  413e5d:	push   edx
  413e5e:	add    BYTE PTR [edx+eiz*1+0x51c2a4a0],cl
  413e65:	adc    DWORD PTR [eax+0x4],eax
  413e68:	inc    ecx
  413e69:	add    al,cl
  413e6b:	mov    BYTE PTR [esi-0x74],ah
  413e6e:	adc    BYTE PTR [eax],al
  413e70:	push   ebx
  413e71:	add    BYTE PTR [edi],al
  413e73:	or     BYTE PTR [eax],al
  413e75:	add    BYTE PTR [eax],al
  413e77:	add    BYTE PTR [ecx+0x5b3009],0x3b
  413e7e:	dec    ebp
  413e7f:	add    BYTE PTR [eax+0x49021a48],ah
  413e85:	data16 or al,BYTE PTR [eax]
  413e88:	mov    BYTE PTR [eax+0x20502014],cl
  413e8e:	add    DWORD PTR [ecx+0x0],ebp
  413e91:	inc    edx
  413e92:	adc    eax,0x1381050
  413e97:	add    BYTE PTR [eax],0x96
  413e9a:	push   esp
  413e9b:	add    BYTE PTR [ebx],ah
  413e9d:	and    al,0x4
  413e9f:	or     al,BYTE PTR [eax+0x4112060]
  413ea5:	sub    BYTE PTR [edx],cl
  413ea7:	dec    eax
  413ea8:	add    DWORD PTR [ecx],0x411c8094
  413eae:	add    al,0x8
  413eb0:	or     esp,DWORD PTR [eax]
  413eb2:	add    BYTE PTR [esi],al
  413eb4:	cdq    
  413eb5:	adc    al,0x8
  413eb7:	pop    es
  413eb8:	add    BYTE PTR [edx-0x7e],cl
  413ebb:	add    BYTE PTR [eax-0x7f7d7ff7],0xb0
  413ec2:	inc    ecx
  413ec3:	add    al,BYTE PTR ds:0x60225513
  413ec9:	inc    esp
  413eca:	push   ds
  413ecb:	rol    BYTE PTR [edx],1
  413ecd:	sub    BYTE PTR [eax+0x5b183801],al
  413ed3:	and    ebx,DWORD PTR [eax+0x8]
  413ed6:	bound  ecx,QWORD PTR [eax+0x33101060]
  413edc:	or     al,0x1
  413ede:	inc    eax
  413edf:	add    BYTE PTR [edx+eiz*1],al
  413ee2:	xor    BYTE PTR [ecx],0x4
  413ee5:	xor    BYTE PTR [ecx],ah
  413ee7:	inc    eax
  413ee8:	and    DWORD PTR [ebp+edx*1+0x40],ebp
  413eec:	inc    esp
  413eed:	add    al,BYTE PTR [edi]
  413eef:	and    BYTE PTR [eax],al
  413ef1:	cwde   
  413ef2:	inc    esp
  413ef3:	add    eax,0xb80500e0
  413ef8:	or     BYTE PTR [eax+0x71],bh
  413efb:	es loopne 0x413e9d
  413efe:	call   DWORD PTR ds:0x44fbac
  413f04:	add    BYTE PTR [ecx],ch
  413f06:	rol    BYTE PTR [eax],0x12
  413f09:	dec    esp
  413f0a:	add    al,0x90
  413f0c:	bound  ecx,QWORD PTR [eax]
  413f0e:	jo     0x413f10
  413f10:	add    DWORD PTR [ecx+0x48],eax
  413f13:	push   cs
  413f14:	add    BYTE PTR [edx+0x2],al
  413f17:	or     BYTE PTR [eax-0xf],dl
  413f1a:	int3   
  413f1b:	mov    BYTE PTR [eax+0x12444258],al
  413f21:	and    ch,BYTE PTR [eax]
  413f23:	push   es
  413f24:	or     al,0x0
  413f26:	mov    bh,0x20
  413f28:	add    BYTE PTR [edi],ah
  413f2a:	add    cl,al
  413f2c:	add    BYTE PTR cs:[ecx+0x2],0x29
  413f31:	loopne 0x413f38
  413f33:	add    al,0x13
  413f35:	add    BYTE PTR [eax+eax*8],ah
  413f38:	push   esp
  413f39:	add    BYTE PTR [eax+0x100004e],ch
  413f3f:	inc    edx
  413f40:	or     eax,DWORD PTR [eax+0x6]
  413f43:	je     0x413f46
  413f45:	add    al,0xc3
  413f47:	and    BYTE PTR [ecx],ah
  413f49:	mov    al,ds:0x1d00904
  413f4e:	adc    BYTE PTR [eax],al
  413f50:	add    al,al
  413f52:	xchg   BYTE PTR [eax],al
  413f54:	repnz mov WORD PTR [ecx],ss
  413f57:	sub    BYTE PTR [eax-0x6f],al
  413f5a:	fs nop
  413f5c:	and    BYTE PTR [eax-0x48],cl
  413f5f:	dec    esp
  413f60:	popa   
  413f61:	add    BYTE PTR [eax],0xa4
  413f64:	test   DWORD PTR [edx],eax
  413f66:	or     BYTE PTR [ebx],dl
  413f68:	add    BYTE PTR [eax],al
  413f6a:	adc    BYTE PTR [eax],al
  413f6c:	adc    ah,ah
  413f6e:	add    al,0x8
  413f70:	add    BYTE PTR [ecx],al
  413f72:	pop    esi
  413f73:	and    DWORD PTR [edx],edx
  413f75:	xor    DWORD PTR [edx],eax
  413f77:	or     BYTE PTR [esi+0x8400009],0x4
  413f7e:	and    al,BYTE PTR [eax+0x2]
  413f81:	arpl   WORD PTR [eax],dx
  413f83:	inc    eax
  413f84:	add    DWORD PTR [ecx+0x2a],ecx
  413f87:	lea    edi,[eax]
  413f89:	and    BYTE PTR [edx+0x42],ah
  413f8c:	add    DWORD PTR [eax+0x6],eax
  413f8f:	add    al,0x41
  413f91:	add    cl,al
  413f93:	add    BYTE PTR ds:0xe9330400,al
  413f99:	sbb    al,0x30
  413f9b:	mov    eax,ds:0xa40272
  413fa0:	push   es
  413fa1:	mov    ds:0x882d180a,al
  413fa6:	add    al,0x3
  413fa8:	adc    DWORD PTR [ecx+0x12],ebx
  413fab:	xor    BYTE PTR [ecx],0x22
  413fae:	add    al,BYTE PTR [eax+0x2]
  413fb1:	or     ebx,esi
  413fb3:	add    ch,BYTE PTR [edi-0x30]
  413fb6:	or     BYTE PTR [eax+0x158104],cl
  413fbc:	add    DWORD PTR ds:0x10a08101,ebp
  413fc2:	rol    DWORD PTR [eax],0x93
  413fc5:	adc    BYTE PTR [ecx],dl
  413fc7:	add    al,0x0
  413fc9:	add    BYTE PTR [eax+0x200d0460],0x74
  413fd0:	cmp    eax,0x8101a812
  413fd5:	add    al,0x0
  413fd7:	push   edx
  413fd8:	add    al,0xd4
  413fda:	sub    BYTE PTR [eax+0x3222400c],al
  413fe0:	inc    eax
  413fe1:	icebp  
  413fe2:	or     al,0x90
  413fe4:	inc    ecx
  413fe5:	or     BYTE PTR [eax+0x440cb00],al
  413feb:	and    DWORD PTR [ebx],esp
  413fed:	or     ah,BYTE PTR es:[ecx+0x12206824]
  413ff4:	add    BYTE PTR [eax],bl
  413ff6:	add    DWORD PTR [ecx+0x60],esp
  413ff9:	and    BYTE PTR [edx+0x19],0x52
  413ffd:	sbb    BYTE PTR [ebp-0x24],al
  414000:	add    DWORD PTR [esp],eax
  414003:	or     DWORD PTR [esi],esp
  414005:	xchg   ecx,eax
  414006:	call   0x81b9:0x11400023
  41400d:	dec    eax
  41400e:	rcl    BYTE PTR [eax],0x80
  414011:	sbb    eax,DWORD PTR ds:0xa1401600
  414017:	and    BYTE PTR [ecx],ah
  414019:	adc    BYTE PTR [edx+0x1842122],al
  41401f:	mov    al,0xb
  414021:	sbb    BYTE PTR [esi+eax*2],ah
  414024:	adc    BYTE PTR [edx+edx*2-0x4e],0xa2
  414029:	inc    eax
  41402a:	add    al,0xa2
  41402c:	push   ss
  41402d:	add    BYTE PTR [eax],ah
  41402f:	push   eax
  414030:	ret    
  414031:	and    DWORD PTR [eax],esp
  414033:	inc    eax
  414034:	and    BYTE PTR [edx],ch
  414036:	add    BYTE PTR [ecx+eax*4],cl
  414039:	mov    edx,DWORD PTR [ebx]
  41403b:	add    DWORD PTR [edx],eax
  41403d:	add    BYTE PTR [eax+eax*1],0x40
  414041:	add    BYTE PTR [edi+0x0],0x48
  414045:	add    BYTE PTR [ecx],dl
  414047:	mov    ds:0x638a020,al
  41404c:	nop
  41404d:	rcl    BYTE PTR ds:0x520e102,0x5
  414054:	ror    BYTE PTR [eax],0xa6
  414057:	mov    DWORD PTR [edx],ebp
  414059:	mov    ds:0x2140310,al
  41405e:	add    dl,ah
  414060:	and    DWORD PTR [ecx+0xc28f51b],edx
  414066:	push   ecx
  414067:	or     BYTE PTR [eax+0x31617080],0x1a
  41406e:	inc    eax
  41406f:	rol    DWORD PTR [edx+0x100221e],0x2
  414076:	xor    al,0xe8
  414078:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414079:	mov    eax,ds:0x2000a42
  41407e:	add    ah,BYTE PTR [ebp+0x200820c8]
  414084:	inc    ebx
  414085:	add    DWORD PTR [edx],esp
  414087:	add    al,BYTE PTR [eax]
  414089:	and    eax,esi
  41408b:	add    BYTE PTR [eax+0x3cc12800],al
  414091:	push   cs
  414092:	sub    BYTE PTR [esi],dl
  414094:	jp     0x4140d7
  414096:	add    BYTE PTR [edx],ah
  414098:	dec    bp
  41409a:	adc    BYTE PTR [eax],ah
  41409c:	adc    dh,BYTE PTR [eax-0x35ef9e5b]
  4140a2:	adc    esp,DWORD PTR [eax]
  4140a4:	mov    edx,0x2450b01
  4140a9:	add    BYTE PTR [eax+0x21a80460],dl
  4140af:	xor    al,0x0
  4140b1:	and    BYTE PTR [eax+eiz*4+0x12902601],al
  4140b8:	and    BYTE PTR [eax+eax*8+0x488222c0],dl
  4140bf:	pusha  
  4140c0:	add    BYTE PTR [eax],cl
  4140c2:	or     BYTE PTR [eax+eax*8+0x882c4eb],al
  4140c9:	or     ebp,DWORD PTR [eax]
  4140cb:	retf   0x4001
  4140ce:	or     DWORD PTR [eax-0x4faffeec],edx
  4140d4:	sbb    al,0x2
  4140d6:	or     BYTE PTR [eax],dl
  4140d8:	pusha  
  4140d9:	cwde   
  4140da:	or     cl,cl
  4140dc:	add    BYTE PTR [eax],dl
  4140de:	mov    edi,ecx
  4140e0:	and    al,BYTE PTR [eax]
  4140e2:	adc    al,BYTE PTR [edx+0x6]
  4140e5:	xlat   BYTE PTR ds:[ebx]
  4140e6:	add    DWORD PTR [eax+0x7c004007],ebp
  4140ec:	inc    ebp
  4140ed:	or     BYTE PTR [edx-0x7d],cl
  4140f0:	jbe    0x414073
  4140f2:	adc    BYTE PTR [edx],cl
  4140f4:	inc    esp
  4140f5:	add    edx,DWORD PTR [ebx]
  4140f7:	add    BYTE PTR [edx],al
  4140f9:	add    ah,BYTE PTR [eax-0x73]
  4140fc:	add    BYTE PTR [edx],dh
  4140fe:	inc    esi
  4140ff:	adc    BYTE PTR [eax],dh
  414101:	xchg   ecx,eax
  414102:	inc    eax
  414103:	data16 mov WORD PTR [esi],es
  414106:	and    BYTE PTR [edi+eax*1],al
  414109:	pop    edx
  41410a:	add    al,BYTE PTR [eax-0x7f2bf7e3]
  414110:	add    dl,cl
  414112:	adc    al,0x51
  414114:	add    eax,0x48000881
  414119:	sbb    BYTE PTR [edi],cl
  41411b:	mov    al,ds:0x82008082
  414120:	sbb    BYTE PTR [edx],bl
  414122:	add    DWORD PTR [eax],esp
  414124:	ret    0x1006
  414127:	and    BYTE PTR [ecx],bl
  414129:	mov    eax,ds:0x42012
  41412e:	cwde   
  41412f:	add    BYTE PTR [ebp+0x29410048],ah
  414135:	and    BYTE PTR [ecx],bl
  414137:	inc    esi
  414138:	or     edi,DWORD PTR [ecx]
  41413a:	inc    ecx
  41413b:	data16 adc al,BYTE PTR ds:0x29078300
  414142:	rol    BYTE PTR [eax+0x12453401],0x2
  414149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41414a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41414b:	lods   eax,DWORD PTR ds:[esi]
  41414c:	add    DWORD PTR [eax],ebp
  41414e:	and    DWORD PTR [edx],eax
  414150:	add    eax,0x14420c24
  414155:	adc    DWORD PTR [eax],eax
  414157:	and    eax,DWORD PTR [ecx+0x0]
  41415a:	add    BYTE PTR [ecx],al
  41415c:	add    dl,BYTE PTR [ecx+0x62]
  41415f:	adc    DWORD PTR [eax],eax
  414161:	mov    ds:0x42528221,eax
  414166:	add    DWORD PTR [ecx],esp
  414168:	adc    BYTE PTR [eax],cl
  41416a:	leave  
  41416b:	inc    eax
  41416c:	enter  0x1140,0x40
  414170:	push   esp
  414171:	mov    ah,0xb
  414173:	add    eax,0x6008655
  414178:	add    al,0x10
  41417a:	add    BYTE PTR [ecx+0x100605d0],dl
  414180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414181:	sbb    BYTE PTR [eax+eiz*1],dh
  414184:	add    BYTE PTR [ebx+0x8],dh
  414187:	push   es
  414188:	add    BYTE PTR [edx-0x70],cl
  41418b:	popa   
  41418c:	and    BYTE PTR [eax],cl
  41418e:	xor    al,0x21
  414190:	sbb    esp,DWORD PTR [ebx-0x20]
  414193:	add    BYTE PTR [eax],0x50
  414196:	add    DWORD PTR [eax-0x7faf7ff6],eax
  41419c:	or     eax,0x2e181040
  4141a1:	add    BYTE PTR [edx],bh
  4141a3:	nop
  4141a4:	add    BYTE PTR ds:0x80970a62,0x10
  4141ab:	shl    BYTE PTR [ecx+0x60183308],1
  4141b1:	add    DWORD PTR [edx+0x40c12120],ecx
  4141b7:	jmp    0x2081c1c6
  4141bc:	push   esi
  4141bd:	pusha  
  4141be:	or     al,0x0
  4141c0:	xor    BYTE PTR [eax+0x20004192],cl
  4141c6:	and    DWORD PTR [eax],0xffffffa9
  4141c9:	and    DWORD PTR [eax-0x7e],0x2250044
  4141d0:	add    BYTE PTR [ecx+0x33],bh
  4141d3:	adc    BYTE PTR [eax+ecx*2],ah
  4141d6:	inc    eax
  4141d7:	add    BYTE PTR [ecx-0x30],ch
  4141da:	add    BYTE PTR [eax],al
  4141dc:	sub    BYTE PTR [edx],al
  4141de:	add    BYTE PTR [eax-0x7b],bh
  4141e1:	xchg   ebx,eax
  4141e2:	dec    esp
  4141e3:	pop    es
  4141e4:	mov    BYTE PTR [eax+0x6001022b],bl
  4141ea:	leave  
  4141eb:	and    al,BYTE PTR es:[ecx+eax*8-0x293fffe0]
  4141f3:	add    BYTE PTR [ebp+0x2],cl
  4141f6:	or     DWORD PTR [eax],eax
  4141f8:	add    cl,al
  4141fa:	inc    eax
  4141fb:	sbb    BYTE PTR ds:0x14d912,dl
  414201:	inc    eax
  414202:	add    DWORD PTR [edx],ecx
  414204:	or     BYTE PTR ds:0x2122101,cl
  41420a:	loopne 0x41420c
  41420c:	mov    WORD PTR [edx],gs
  41420e:	sub    eax,0x918a4100
  414213:	add    DWORD PTR [edi],eax
  414215:	js     0x414217
  414217:	nop
  414218:	mov    al,dl
  41421a:	sbb    BYTE PTR [eiz*1+0x75030088],al
  414221:	add    DWORD PTR [eax],0x0
  414224:	inc    edx
  414225:	push   0x4244181
  41422a:	or     BYTE PTR [edi+0x18],ah
  41422d:	add    BYTE PTR [eax+eax*1],dh
  414230:	bound  eax,QWORD PTR [eax+0x6058000]
  414236:	or     DWORD PTR [eax],0xd0422c62
  41423c:	add    BYTE PTR [eax+eax*1+0x1],ah
  414240:	pop    esp
  414241:	or     BYTE PTR [eax+eiz*1+0x9],dl
  414245:	dec    eax
  414246:	and    ch,dl
  414248:	inc    ecx
  414249:	nop
  41424a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41424b:	adc    BYTE PTR [eax-0x70],cl
  41424e:	loopne 0x414250
  414250:	add    DWORD PTR [eax+eax*1],0x10085920
  414257:	adc    BYTE PTR [ecx],al
  414259:	inc    ecx
  41425a:	xor    BYTE PTR [eax+ebp*2+0x4002211],al
  414261:	and    al,0x22
  414263:	dec    eax
  414264:	pusha  
  414265:	mov    BYTE PTR [eax],dl
  414267:	and    DWORD PTR [ecx+ecx*1-0x39adefa0],esp
  41426e:	and    DWORD PTR [eax+0x50],0x4010820
  414275:	cmp    al,0x20
  414277:	and    DWORD PTR [ecx-0x7dfbd7c0],eax
  41427d:	add    eax,DWORD PTR [edx]
  41427f:	mov    eax,0x1a430000
  414284:	pop    eax
  414285:	inc    ecx
  414286:	bound  esi,QWORD PTR [eax-0x7eff39f0]
  41428c:	sbb    al,BYTE PTR [eax]
  41428e:	dec    eax
  41428f:	and    BYTE PTR [eax],al
  414291:	inc    eax
  414292:	imul   edx,DWORD PTR [eax+0x53d18802],0x1180008
  41429c:	adc    DWORD PTR [ebp+0x20],esp
  41429f:	xor    BYTE PTR [eax],al
  4142a1:	pusha  
  4142a2:	and    DWORD PTR [eax],0x49801
  4142a8:	add    DWORD PTR [ecx+eax*1+0x4a811860],0x8
  4142b0:	sbb    eax,DWORD PTR [ebx]
  4142b2:	and    BYTE PTR [ecx],0xd0
  4142b5:	arpl   WORD PTR [ecx+0x620d02],ax
  4142bb:	jo     0x414251
  4142bd:	sbb    DWORD PTR [esi],eax
  4142bf:	sub    eax,0x20000a08
  4142c4:	les    eax,FWORD PTR [edx+0x9000682]
  4142ca:	rol    BYTE PTR [eax],0x47
  4142cd:	add    ah,BYTE PTR [eax]
  4142cf:	push   ebx
  4142d0:	pusha  
  4142d1:	add    BYTE PTR [ecx],al
  4142d3:	pusha  
  4142d4:	add    DWORD PTR [eax],esp
  4142d6:	and    BYTE PTR [eax-0x7f7d733f],al
  4142dc:	add    esp,DWORD PTR [eax+0x53]
  4142df:	or     BYTE PTR [eax],cl
  4142e1:	add    al,0x1a
  4142e3:	add    DWORD PTR [eax],eax
  4142e5:	add    DWORD PTR [eax],eax
  4142e7:	dec    eax
  4142e8:	and    al,0x10
  4142ea:	add    ecx,DWORD PTR [ebx]
  4142ec:	add    cl,BYTE PTR [eax+0x1a2911c0]
  4142f2:	adc    BYTE PTR [eax-0x7cb1bf2e],al
  4142f8:	sbb    dl,bl
  4142fa:	xchg   edx,eax
  4142fb:	mov    dh,cl
  4142fd:	lods   eax,DWORD PTR ds:[esi]
  4142fe:	add    DWORD PTR [eax+0x11],esp
  414301:	add    BYTE PTR [eax],cl
  414303:	add    al,BYTE PTR [eax+0x48001281]
  414309:	inc    esp
  41430a:	add    BYTE PTR [edx+0x28],bh
  41430d:	inc    eax
  41430e:	add    DWORD PTR [edi],esi
  414310:	and    DWORD PTR [eax+ecx*2],ebx
  414313:	rol    BYTE PTR [eax],0x18
  414316:	add    BYTE PTR [eax],al
  414318:	add    eax,DWORD PTR [eax-0x46ef7fa0]
  41431e:	xor    BYTE PTR es:[eax],dl
  414321:	add    BYTE PTR [eax],ah
  414323:	adc    BYTE PTR [eax+0x14],al
  414326:	enter  0x2241,0xc5
  41432a:	call   0x84e1cd57
  41432f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414330:	add    DWORD PTR [eax],esp
  414332:	push   es
  414333:	adc    DWORD PTR [eax],eax
  414335:	add    BYTE PTR [esi],0x19
  414338:	les    eax,FWORD PTR [edx]
  41433a:	adc    ah,BYTE PTR [eax]
  41433c:	pusha  
  41433d:	and    al,0xe0
  41433f:	mov    al,ds:0x20100d09
  414344:	sub    DWORD PTR [esi+ebp*1],ebx
  414347:	fwait
  414348:	sbb    dh,BYTE PTR [edi+eiz*4]
  41434b:	add    BYTE PTR [eax],ah
  41434d:	sub    al,BYTE PTR [eax]
  41434f:	dec    edx
  414350:	mov    esp,0x1304604
  414355:	push   edx
  414356:	or     BYTE PTR [edx],cl
  414358:	xchg   ebp,eax
  414359:	xor    ecx,DWORD PTR [eax]
  41435b:	and    BYTE PTR [eax],ch
  41435d:	or     al,0x8
  41435f:	test   BYTE PTR [ecx+0x102800c0],bl
  414365:	and    BYTE PTR [esi],al
  414367:	xchg   ecx,eax
  414368:	adc    DWORD PTR [edx+0x2637899e],esi
  41436e:	popa   
  41436f:	add    BYTE PTR [edx+eax*1],al
  414372:	add    BYTE PTR [ebx],cl
  414374:	dec    edx
  414375:	cmp    DWORD PTR [esi+0x28],ecx
  414378:	sbb    BYTE PTR [eax+0x40],ah
  41437b:	xor    BYTE PTR [edx],dl
  41437d:	add    dl,BYTE PTR [eax+esi*4]
  414380:	add    dh,al
  414382:	add    DWORD PTR [eax+0x14],eax
  414385:	adc    al,dl
  414387:	or     al,0x24
  414389:	adc    BYTE PTR [eax+0x9],ah
  41438c:	add    DWORD PTR [eax+0x61],ebp
  41438f:	or     al,BYTE PTR [eax+0x25]
  414392:	add    BYTE PTR [ecx],ah
  414394:	test   BYTE PTR [esi],al
  414396:	sbb    DWORD PTR [eax+esi*1],esp
  414399:	push   eax
  41439a:	pop    es
  41439b:	add    DWORD PTR [eax],esi
  41439d:	dec    eax
  41439e:	or     DWORD PTR [eax-0x1e],eax
  4143a1:	add    BYTE PTR [eax+ebp*4],ch
  4143a4:	adc    BYTE PTR [eax],cl
  4143a6:	add    al,0x3a
  4143a8:	and    BYTE PTR [edx-0x56ffff6e],0xab
  4143af:	add    eax,0x60400050
  4143b4:	and    ah,al
  4143b6:	add    BYTE PTR [eax+ebp*1],0x22
  4143ba:	add    esi,eax
  4143bc:	popa   
  4143bd:	pusha  
  4143be:	les    eax,FWORD PTR [ecx]
  4143c0:	mov    al,ds:0x2c461d02
  4143c5:	call   0xa5c6:0x88183000
  4143cc:	bound  ecx,QWORD PTR [ecx]
  4143ce:	inc    eax
  4143cf:	add    ecx,DWORD PTR [ecx]
  4143d1:	cdq    
  4143d2:	or     DWORD PTR [eax],ecx
  4143d4:	lds    ebp,FWORD PTR [eax-0x7c]
  4143d7:	add    BYTE PTR [esi*1+0x40184042],al
  4143de:	add    ecx,DWORD PTR [eax+0x12a0024]
  4143e4:	adc    al,0xb5
  4143e6:	mov    al,ds:0x5dea0020
  4143eb:	and    al,BYTE PTR [eax+0x233240]
  4143f1:	add    eax,0x5020001c
  4143f6:	fs es and al,0x11
  4143fa:	add    al,BYTE PTR [eax]
  4143fc:	sub    BYTE PTR [eax],al
  4143fe:	rcr    BYTE PTR [ebx],0x4a
  414401:	test   DWORD PTR [esi+0x4061140],edx
  414407:	sub    BYTE PTR ds:0x22680052,dh
  41440d:	ror    BYTE PTR [edx],0x4c
  414410:	xchg   ebx,eax
  414411:	loop   0x414397
  414413:	sub    al,BYTE PTR [edi+0x10]
  414416:	add    BYTE PTR [eax],0xd6
  414419:	sbb    BYTE PTR [edx+eiz*4-0x80],dl
  41441d:	adc    DWORD PTR [eax-0x40],edx
  414420:	add    al,0x46
  414422:	in     al,dx
  414423:	lea    ebp,[ecx]
  414425:	dec    ecx
  414426:	add    BYTE PTR [ebx+0x5],ch
  414429:	adc    BYTE PTR [ecx+0x74],al
  41442c:	add    al,BYTE PTR [edi]
  41442e:	test   BYTE PTR [ecx],al
  414430:	or     BYTE PTR [esi+0x1],al
  414433:	and    al,cl
  414435:	xor    DWORD PTR [eax+eax*1],ebp
  414438:	adc    eax,eax
  41443a:	push   ss
  41443b:	add    BYTE PTR [ecx],ah
  41443d:	sub    dl,al
  41443f:	lea    eax,[ecx+0x3a]
  414442:	add    al,al
  414444:	pop    eax
  414445:	add    DWORD PTR [eax+eax*1],ecx
  414448:	and    DWORD PTR [eax+0x11],edx
  41444b:	adc    DWORD PTR [ebx+eiz*1],esi
  41444e:	xchg   edx,eax
  41444f:	push   eax
  414450:	add    BYTE PTR [ecx+0x682a5c80],al
  414456:	dec    edx
  414457:	add    dl,BYTE PTR [ebx*2+0x20019210]
  41445e:	inc    esi
  41445f:	data16 add al,0x4
  414462:	xor    bl,BYTE PTR [eax]
  414464:	add    al,0x22
  414466:	add    BYTE PTR [esp+eiz*2],bl
  414469:	enter  0x124,0x90
  41446d:	je     0x414473
  41446f:	sbb    DWORD PTR [esp+eax*1],ecx
  414472:	add    BYTE PTR [ecx+eiz*1],0x34
  414476:	inc    eax
  414477:	add    BYTE PTR [ecx-0x5f],al
  41447a:	add    BYTE PTR [edx],dh
  41447c:	add    DWORD PTR [edx-0x2ddf7af8],0xa0000820
  414486:	dec    esp
  414487:	add    al,0x0
  414489:	dec    eax
  41448a:	lea    eax,[eax-0x75]
  41448d:	cwde   
  41448e:	and    al,0x18
  414490:	inc    eax
  414491:	inc    ecx
  414492:	adc    BYTE PTR [edx],cl
  414494:	loopne 0x41449b
  414496:	push   es
  414497:	push   es
  414498:	add    al,0x30
  41449a:	or     DWORD PTR [eax],eax
  41449c:	add    DWORD PTR [eax],0x1800111
  4144a2:	add    DWORD PTR [ecx+0x21814a1],ecx
  4144a8:	add    dl,BYTE PTR [ebx]
  4144aa:	bound  eax,QWORD PTR [ecx]
  4144ac:	mov    DWORD PTR [eax+0x16c9a200],edx
  4144b2:	add    al,0x8
  4144b4:	or     al,BYTE PTR [ecx]
  4144b6:	sbb    al,0x24
  4144b8:	inc    ecx
  4144b9:	cmp    BYTE PTR [edx],dl
  4144bb:	add    BYTE PTR [ebx+0x44],al
  4144be:	add    BYTE PTR [ecx],dh
  4144c0:	or     al,BYTE PTR [ecx]
  4144c2:	add    BYTE PTR [edx+0x0],al
  4144c5:	sub    al,BYTE PTR [eax]
  4144c7:	add    BYTE PTR [eax],0x78
  4144ca:	add    BYTE PTR [eax],cl
  4144cc:	add    BYTE PTR [eax],ah
  4144ce:	inc    esp
  4144cf:	xor    BYTE PTR [edx],al
  4144d1:	add    BYTE PTR [edx+0x69],cl
  4144d4:	adc    al,cl
  4144d6:	or     bh,BYTE PTR [eax+0x40]
  4144d9:	or     cl,BYTE PTR [edx]
  4144db:	add    DWORD PTR [eax-0x7f92afde],ecx
  4144e1:	or     al,BYTE PTR [eax+ecx*2+0x1]
  4144e5:	and    DWORD PTR [eax+0x29263003],ecx
  4144eb:	xor    BYTE PTR [eax],dl
  4144ed:	scas   al,BYTE PTR es:[edi]
  4144ee:	and    BYTE PTR [eax],al
  4144f0:	and    ah,BYTE PTR [esi]
  4144f2:	and    BYTE PTR [eax+0x22],al
  4144f5:	mov    al,ds:0x100ab03d
  4144fa:	mov    al,ds:0x2180b225
  4144ff:	and    BYTE PTR [edx],dl
  414501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414502:	and    BYTE PTR [eax+eax*2+0x2c08208],al
  414509:	pop    edx
  41450a:	add    al,BYTE PTR [ecx+0x40]
  41450d:	push   eax
  41450e:	add    ah,BYTE PTR [ecx+eax*4]
  414511:	or     DWORD PTR [edx+eax*1+0x0],ebp
  414515:	xchg   BYTE PTR [ecx+ebx*1+0x1],cl
  414519:	inc    eax
  41451a:	add    eax,DWORD PTR [eax]
  41451c:	dec    ebx
  41451d:	nop
  41451e:	adc    BYTE PTR [eax],0x4a
  414521:	or     ch,BYTE PTR [eax]
  414523:	and    BYTE PTR [ecx],cl
  414525:	loopne 0x414541
  414527:	and    BYTE PTR [ecx+eax*2],0xb0
  41452b:	and    BYTE PTR [esi],ah
  41452d:	mov    eax,0x409c0b0
  414532:	test   DWORD PTR [eax+0x41],edx
  414535:	or     ecx,DWORD PTR [ecx]
  414537:	test   DWORD PTR [ecx],eax
  414539:	inc    eax
  41453a:	push   ecx
  41453b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41453c:	add    BYTE PTR [edx],al
  41453e:	inc    ecx
  41453f:	lock push eax
  414541:	add    DWORD PTR [eax+eax*1+0x15700304],edx
  414548:	and    DWORD PTR [esi+0x1b],0x21040030
  41454f:	xchg   BYTE PTR ds:0x22205c71,dl
  414555:	and    al,0x8
  414557:	add    esp,DWORD PTR [ecx]
  414559:	test   BYTE PTR [eax+0x4108018],dl
  41455f:	add    DWORD PTR [eax],ebx
  414561:	inc    esp
  414562:	add    BYTE PTR [eax],ch
  414564:	adc    BYTE PTR [eax-0x2e],dh
  414567:	mov    ds:0x200cac20,al
  41456c:	inc    esp
  41456d:	adc    ax,0x413
  414571:	xchg   esi,eax
  414572:	add    DWORD PTR [eax+0xf01c04],eax
  414578:	add    al,BYTE PTR [edx]
  41457a:	or     al,0x1b
  41457c:	add    BYTE PTR [ecx+0x44861104],ch
  414582:	add    DWORD PTR [eax],esp
  414584:	inc    edx
  414585:	push   ecx
  414586:	add    DWORD PTR [ecx],eax
  414588:	sbb    DWORD PTR [eax+0x65401a29],esp
  41458e:	push   0x82109018
  414593:	ret    0x914
  414596:	adc    eax,0x2000c248
  41459b:	inc    eax
  41459c:	sbb    esp,DWORD PTR [eax]
  41459e:	adc    al,0x83
  4145a0:	ret    0x4c94
  4145a3:	inc    esp
  4145a4:	push   ecx
  4145a5:	test   BYTE PTR [ecx],al
  4145a7:	adc    ah,BYTE PTR [edi]
  4145a9:	add    dl,BYTE PTR [eax]
  4145ab:	add    DWORD PTR [edi+0x54800e40],0x45
  4145b2:	mov    al,ds:0x500b1c00
  4145b7:	and    BYTE PTR [ecx],ch
  4145b9:	inc    eax
  4145ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145bb:	ror    BYTE PTR [eax-0x79b396b4],1
  4145c1:	add    al,0x82
  4145c3:	add    DWORD PTR [eax],eax
  4145c5:	or     BYTE PTR [edx*1+0x426601],al
  4145cc:	adc    BYTE PTR [eax],ah
  4145ce:	add    BYTE PTR [eax+eax*4+0x68],0x31
  4145d3:	mov    WORD PTR [edx],es
  4145d5:	dec    eax
  4145d6:	rcr    BYTE PTR [eax+0x1488a842],0x13
  4145dd:	or     al,BYTE PTR [eax]
  4145df:	xor    DWORD PTR [ecx+0x38a50],ecx
  4145e5:	add    BYTE PTR [eax+0x10],dl
  4145e8:	sub    BYTE PTR [ecx],ah
  4145ea:	push   eax
  4145eb:	push   ecx
  4145ec:	and    BYTE PTR [ebp+0x0],al
  4145ef:	dec    esp
  4145f0:	and    al,BYTE PTR [eax]
  4145f2:	add    BYTE PTR [eax],ah
  4145f4:	add    DWORD PTR [eax+0x18],esi
  4145f7:	push   esp
  4145f8:	inc    eax
  4145f9:	or     DWORD PTR [ecx+eiz*1-0x7f],ebx
  4145fd:	adc    ch,BYTE PTR [eax+eax*4]
  414600:	inc    eax
  414601:	add    BYTE PTR [ecx+eax*2+0x20],ch
  414605:	adc    BYTE PTR [edx],dl
  414607:	inc    eax
  414608:	or     BYTE PTR [eax+0x700410c2],ah
  41460e:	or     DWORD PTR [eax-0x1dfdfced],esp
  414614:	add    BYTE PTR [ecx],al
  414616:	add    BYTE PTR [ecx+0x7404a058],al
  41461c:	add    BYTE PTR [esi],al
  41461e:	or     BYTE PTR [eax],al
  414620:	add    al,BYTE PTR [edx]
  414622:	xchg   edx,eax
  414623:	add    al,0x0
  414625:	dec    eax
  414626:	add    BYTE PTR [eax+0x12062965],dl
  41462c:	dec    esi
  41462d:	add    dl,BYTE PTR [eax]
  41462f:	xchg   BYTE PTR [esi],dh
  414631:	add    BYTE PTR [ecx-0x69],ah
  414634:	or     bl,BYTE PTR [edx]
  414636:	inc    edx
  414637:	xchg   ebp,eax
  414638:	inc    ecx
  414639:	sbb    BYTE PTR [ecx+0x29],al
  41463c:	xchg   esp,eax
  41463d:	add    DWORD PTR [edx+0x42c83347],eax
  414643:	mov    BYTE PTR [edx+eiz*1],ah
  414646:	inc    eax
  414647:	xchg   ecx,eax
  414648:	xchg   ecx,eax
  414649:	xchg   esp,eax
  41464a:	inc    eax
  41464b:	lock push esp
  41464d:	add    BYTE PTR [eax],al
  41464f:	ret    
  414650:	jo     0x414652
  414652:	push   eax
  414653:	adc    ah,BYTE PTR [eax-0x7f]
  414656:	xchg   BYTE PTR [eax],bl
  414658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414659:	inc    esp
  41465a:	dec    eax
  41465b:	add    eax,0x32000825
  414660:	inc    esp
  414661:	add    dl,ch
  414663:	ror    BYTE PTR [eax+0x6894320],0x1a
  41466a:	and    BYTE PTR [eax+0x4824041a],cl
  414670:	adc    BYTE PTR [ecx+0x31003522],dh
  414676:	add    BYTE PTR [edx],al
  414678:	add    DWORD PTR [edx+0x11],eax
  41467b:	add    BYTE PTR ds:0x94024505,cl
  414681:	and    ah,BYTE PTR [eax+0x1c]
  414684:	inc    eax
  414685:	add    BYTE PTR [eax],dh
  414687:	dec    edx
  414688:	add    al,0x3
  41468a:	add    dl,BYTE PTR [edx]
  41468c:	add    BYTE PTR [eax+0x0],bh
  41468f:	add    al,0x26
  414691:	add    cl,BYTE PTR [eax-0x70]
  414694:	add    BYTE PTR ds:0xe8200c09,cl
  41469a:	and    al,0x94
  41469c:	daa    
  41469d:	push   ecx
  41469e:	xchg   edx,eax
  41469f:	add    WORD PTR [ebx],0x141
  4146a4:	or     DWORD PTR [eax-0x2f],edx
  4146a7:	pop    edx
  4146a8:	add    BYTE PTR [ecx+edx*1],al
  4146ab:	mov    dl,0x88
  4146ad:	inc    eax
  4146ae:	pushf  
  4146af:	inc    eax
  4146b0:	push   eax
  4146b1:	adc    cl,al
  4146b3:	rcl    BYTE PTR [ebx+0x21],1
  4146b6:	or     cl,BYTE PTR [edx+0x12]
  4146b9:	pusha  
  4146ba:	adc    BYTE PTR [ecx],al
  4146bc:	adc    BYTE PTR [ecx],dl
  4146be:	inc    edx
  4146bf:	(bad)  
  4146c0:	or     ch,BYTE PTR [ecx+0x0]
  4146c3:	add    ch,BYTE PTR [eax]
  4146c5:	adc    al,BYTE PTR [ecx]
  4146c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146c8:	rcl    BYTE PTR [eax+0x1],0x0
  4146cc:	dec    eax
  4146cd:	add    al,BYTE PTR [eax+0x85a9082]
  4146d3:	add    bh,bh
  4146d5:	adc    eax,0x44fa90
  4146da:	add    DWORD PTR [eax],edx
  4146dc:	rcl    DWORD PTR [eax],0x0
  4146df:	push   esi
  4146e0:	cmp    BYTE PTR [ecx],al
  4146e2:	add    BYTE PTR [edx+eiz*1],ah
  4146e5:	cdq    
  4146e6:	je     0x41472a
  4146e8:	ret    
  4146e9:	mov    al,0x0
  4146eb:	add    DWORD PTR [eax+0x26],esp
  4146ee:	xor    BYTE PTR [ecx+0x42],dl
  4146f1:	int3   
  4146f2:	add    BYTE PTR [ebx+edx*1+0x20420071],ah
  4146f9:	xor    BYTE PTR [eax],ch
  4146fb:	or     DWORD PTR [eax],ecx
  4146fd:	sub    DWORD PTR [eax],ebx
  4146ff:	adc    BYTE PTR [edx],ch
  414701:	add    BYTE PTR [eax],al
  414703:	push   eax
  414704:	mov    WORD PTR [edx-0x5ebeef66],?
  41470a:	sub    BYTE PTR [edx+eax*1],bl
  41470d:	mov    al,ah
  41470f:	out    0xc8,al
  414711:	add    BYTE PTR [eax+0x20851410],al
  414717:	ins    BYTE PTR es:[edi],dx
  414718:	or     BYTE PTR [edx],bh
  41471a:	add    DWORD PTR [eax],edx
  41471c:	inc    ecx
  41471d:	or     BYTE PTR [ebp+0x55044000],ch
  414723:	mov    eax,DWORD PTR [eax]
  414725:	sbb    al,BYTE PTR [eax]
  414727:	add    DWORD PTR [eax-0x34],eax
  41472a:	test   BYTE PTR [eax],cl
  41472c:	add    al,0x50
  41472e:	adc    al,al
  414730:	mov    DWORD PTR [ecx+0x0],eax
  414733:	adc    al,0x30
  414735:	push   es
  414736:	add    BYTE PTR [eax],al
  414738:	inc    ecx
  414739:	rcl    BYTE PTR [ecx],1
  41473b:	adc    al,0x20
  41473d:	add    BYTE PTR [edx],bl
  41473f:	(bad)  
  414740:	or     esp,ecx
  414742:	xor    al,BYTE PTR [ecx]
  414744:	and    DWORD PTR [ebx+0x1024010],edx
  41474a:	gs and eax,ebx
  41474d:	rol    BYTE PTR [ebx],0x40
  414750:	add    bl,BYTE PTR [eax+0x10]
  414753:	add    BYTE PTR [ecx],al
  414755:	add    BYTE PTR [ebp-0x68],al
  414758:	adc    esp,edx
  41475a:	inc    ecx
  41475b:	mov    es,WORD PTR [edx]
  41475d:	jmp    0x5041c792
  414762:	mov    eax,ds:0x4465101
  414767:	adc    DWORD PTR [ecx+ecx*4],esp
  41476a:	and    cl,BYTE PTR [eax+0x32285300]
  414770:	and    DWORD PTR [ebx],edx
  414772:	or     al,0x9d
  414774:	and    BYTE PTR [eax+edx*1],0x90
  414778:	adc    al,al
  41477a:	and    bh,BYTE PTR [ebp+0x40820]
  414780:	and    BYTE PTR [eax],0x0
  414783:	pusha  
  414784:	rol    BYTE PTR [eax],0x0
  414787:	add    DWORD PTR [esi+0x2260204],eax
  41478d:	push   es
  41478e:	inc    ebx
  41478f:	loopne 0x41471b
  414791:	jo     0x414793
  414793:	rol    BYTE PTR [eax],0x54
  414796:	add    al,0x20
  414798:	and    BYTE PTR [eax+0x9],ah
  41479b:	add    BYTE PTR [edx+0x6a04a892],al
  4147a1:	mov    ss,WORD PTR [ecx-0x2fed7ff6]
  4147a7:	xor    BYTE PTR [ebx+eiz*1],al
  4147aa:	adc    BYTE PTR [ebx],al
  4147ac:	inc    esp
  4147ad:	pushf  
  4147ae:	and    eax,0x889c40d4
  4147b3:	or     dl,dl
  4147b5:	popa   
  4147b6:	xchg   ecx,eax
  4147b7:	add    DWORD PTR [eax],eax
  4147b9:	cmp    BYTE PTR [esp+eax*4],al
  4147bc:	ror    BYTE PTR [eax],0x8d
  4147bf:	push   es
  4147c0:	adc    al,BYTE PTR [ecx]
  4147c2:	adc    BYTE PTR [edx],ch
  4147c4:	add    BYTE PTR [ebx-0x6bf91dbe],al
  4147ca:	add    DWORD PTR [eax],eax
  4147cc:	adc    BYTE PTR [eax+0x18009601],al
  4147d2:	and    al,0xa8
  4147d4:	pusha  
  4147d5:	add    DWORD PTR [ecx],eax
  4147d7:	add    eax,0x30004005
  4147dc:	sbb    al,BYTE PTR [eax]
  4147de:	pop    esp
  4147df:	adc    al,0x0
  4147e1:	fwait
  4147e2:	dec    eax
  4147e3:	sbb    BYTE PTR [edx+0x24e02190],0x81
  4147ea:	push   eax
  4147eb:	push   es
  4147ec:	add    BYTE PTR [eax],dl
  4147ee:	xor    BYTE PTR [edx+0x54599010],0x82
  4147f5:	add    BYTE PTR [edx+0x640816e0],al
  4147fb:	add    BYTE PTR ds:0x4108b0,al
  414801:	sbb    DWORD PTR [ecx-0x7d],esp
  414804:	mov    DWORD PTR [eax],edx
  414806:	and    BYTE PTR [esp+edx*1+0x32040687],0x4
  41480e:	adc    BYTE PTR [ecx],al
  414810:	xor    al,0x83
  414812:	add    al,0x52
  414814:	and    BYTE PTR [eax],dh
  414816:	or     esi,eax
  414818:	xor    BYTE PTR [edx],cl
  41481a:	mov    al,ds:0x14020c0
  41481f:	mov    ah,0x8
  414821:	add    al,al
  414823:	test   BYTE PTR [edx+0x2],cl
  414826:	add    BYTE PTR [ecx],al
  414828:	mov    BYTE PTR [ebp-0x7bfbe43f],dh
  41482e:	(bad)  
  41482f:	not    BYTE PTR [edx]
  414831:	and    al,BYTE PTR [edx+0xc01032]
  414837:	test   BYTE PTR [ecx-0x5f3ecbff],al
  41483d:	cmp    BYTE PTR fs:[eax],cl
  414840:	mov    BYTE PTR [edx],dl
  414842:	add    DWORD PTR [eax+ebp*1+0x2],ebx
  414846:	or     al,dl
  414848:	inc    eax
  414849:	ror    DWORD PTR [ebx+0x7440200],1
  41484f:	or     DWORD PTR fs:[edx],0x84010
  414856:	test   al,al
  414858:	adc    ch,BYTE PTR [esi]
  41485a:	add    DWORD PTR [ecx],eax
  41485c:	dec    ecx
  41485d:	add    DWORD PTR [esi],edx
  41485f:	inc    edx
  414860:	add    DWORD PTR [eax+0x1],0x8348600
  414867:	or     BYTE PTR [eax-0x73b8bc00],cl
  41486d:	add    BYTE PTR [ebx+eax*1+0x0],ah
  414871:	and    al,0x3
  414873:	inc    eax
  414874:	adc    dh,BYTE PTR [eax]
  414876:	sbb    BYTE PTR [eax+eax*4],al
  414879:	sbb    ah,BYTE PTR [ecx]
  41487b:	and    al,BYTE PTR [edx]
  41487d:	sub    BYTE PTR [eax],0x21
  414880:	inc    ebp
  414881:	add    DWORD PTR [eax],eax
  414883:	add    BYTE PTR [ebp+0x24],al
  414886:	sbb    dl,BYTE PTR [ebp+0x21]
  414889:	mov    WORD PTR [eax],es
  41488b:	add    BYTE PTR [esi+0x40],0x2b
  41488f:	inc    edx
  414890:	les    eax,FWORD PTR [edx+0x12]
  414893:	add    al,0xb
  414895:	push   cs
  414896:	pop    edx
  414897:	adc    DWORD PTR [eax],esp
  414899:	inc    ebx
  41489a:	add    ah,BYTE PTR [ecx+0x12100004]
  4148a0:	adc    al,0xe
  4148a2:	mov    BYTE PTR [eax+0x8911],dh
  4148a8:	inc    eax
  4148a9:	inc    eax
  4148aa:	adc    al,0x80
  4148ad:	mov    es,WORD PTR [eax+eax*2+0x20]
  4148b1:	sbb    esp,DWORD PTR [eax-0x4f]
  4148b4:	or     BYTE PTR [ebx+0x40],dl
  4148b7:	or     dl,BYTE PTR [edx]
  4148b9:	mov    edx,0x20c0002
  4148be:	push   edx
  4148bf:	and    ecx,DWORD PTR [eax]
  4148c1:	inc    ecx
  4148c2:	push   ss
  4148c3:	and    BYTE PTR [ebx],al
  4148c5:	inc    eax
  4148c6:	adc    esi,DWORD PTR [eax-0x7fefffc0]
  4148cc:	add    BYTE PTR [ebx+edx*2+0x5],0x8d
  4148d1:	dec    edx
  4148d2:	mov    al,ds:0x3220b512
  4148d7:	add    BYTE PTR [ebp+0x40],al
  4148da:	rcr    DWORD PTR [eax],1
  4148dc:	add    BYTE PTR [eax],dh
  4148de:	mov    BYTE PTR [ecx-0x3eaf9fe8],al
  4148e4:	adc    BYTE PTR [eax],al
  4148e6:	pusha  
  4148e7:	adc    DWORD PTR [esi],ecx
  4148e9:	add    eax,0xa180864
  4148ee:	and    BYTE PTR [esi+0x10],cl
  4148f1:	and    BYTE PTR [eax],bl
  4148f3:	and    DWORD PTR [ecx],ecx
  4148f5:	adc    eax,0x859021
  4148fa:	add    bl,al
  4148fc:	push   es
  4148fd:	cwde   
  4148fe:	adc    BYTE PTR [edx],al
  414900:	add    BYTE PTR [eax+0x1c],cl
  414903:	and    dl,al
  414905:	add    DWORD PTR [ecx+0x9a0041c],esp
  41490b:	sbb    BYTE PTR [edx-0x5e],dl
  41490e:	and    dl,BYTE PTR [eax]
  414910:	adc    BYTE PTR [eax],dl
  414912:	and    BYTE PTR [esp+eax*1],ah
  414915:	or     DWORD PTR [edx-0x7b],0x414cc2e0
  41491c:	add    DWORD PTR [eax],edx
  41491e:	or     dl,BYTE PTR [ecx+0x1]
  414921:	sub    BYTE PTR [ecx],dl
  414923:	add    BYTE PTR [ecx+ebx*1+0x30020041],dl
  41492a:	mov    cl,0x40
  41492c:	add    eax,0x1a10000a
  414931:	add    eax,eax
  414933:	data16 stos BYTE PTR es:[edi],al
  414935:	dec    eax
  414936:	inc    eax
  414937:	dec    eax
  414938:	bound  eax,QWORD PTR [ebx+0x0]
  41493b:	push   es
  41493c:	add    DWORD PTR [eax],0x44522000
  414942:	dec    esp
  414943:	cwde   
  414944:	test   al,al
  414946:	bound  ecx,QWORD PTR [esp+edx*4]
  414949:	push   esp
  41494a:	inc    eax
  41494b:	push   eax
  41494c:	or     al,ah
  41494e:	add    BYTE PTR fs:[ecx],dl
  414951:	add    DWORD PTR [eax],eax
  414953:	or     BYTE PTR [eax+0x0],al
  414956:	cmp    BYTE PTR [eax-0x37ff5d90],al
  41495c:	add    BYTE PTR [esi],0x9
  41495f:	sbb    eax,0x3222cc00
  414964:	and    BYTE PTR [eax+0x20],cl
  414967:	and    DWORD PTR ds:0xb04a4032,ecx
  41496d:	and    DWORD PTR [eax+0x31215229],eax
  414973:	inc    eax
  414974:	pusha  
  414975:	add    eax,0x69952010
  41497a:	enter  0x7004,0x38
  41497e:	jb     0x4149a1
  414980:	add    BYTE PTR [eax],dh
  414982:	add    BYTE PTR [ecx+0x22af2406],al
  414988:	(bad)  
  414989:	adc    al,0x20
  41498b:	or     BYTE PTR [ebx+eax*1+0x2e040100],al
  414992:	push   ss
  414993:	xor    BYTE PTR [edx+0x30],al
  414996:	add    BYTE PTR [edx+0x23],al
  414999:	add    al,0x1c
  41499b:	dec    ecx
  41499c:	sbb    dl,BYTE PTR [eax]
  41499e:	adc    eax,DWORD PTR [eax]
  4149a0:	push   es
  4149a1:	sbb    eax,edx
  4149a3:	add    BYTE PTR [ecx+edi*1],cl
  4149a6:	bound  edx,QWORD PTR [edx]
  4149a8:	inc    ecx
  4149a9:	add    BYTE PTR [edx],al
  4149ab:	add    al,BYTE PTR [edx+0xe]
  4149ae:	add    al,BYTE PTR [edx+0x520515]
  4149b4:	test   al,0x20
  4149b6:	and    esp,DWORD PTR [ebp+0x28]
  4149b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149ba:	inc    eax
  4149bb:	and    eax,0x148000c
  4149c0:	sub    DWORD PTR [esi],ecx
  4149c2:	xchg   ebx,eax
  4149c3:	pusha  
  4149c4:	add    al,0x53
  4149c6:	or     edx,DWORD PTR [edi]
  4149c8:	inc    edx
  4149c9:	add    BYTE PTR [ecx-0x7bfb790b],cl
  4149cf:	data16 adc al,BYTE PTR [eax]
  4149d2:	nop
  4149d3:	ror    DWORD PTR [ecx+eax*2],0x40
  4149d7:	add    dh,0x40
  4149da:	loopne 0x4149fd
  4149dc:	mov    eax,ds:0x23400f00
  4149e1:	add    ch,BYTE PTR [ecx]
  4149e3:	adc    DWORD PTR [eax+0x7440e408],eax
  4149e9:	add    BYTE PTR [edx+eax*2+0x59],al
  4149ed:	xor    BYTE PTR ds:0x4100014,dl
  4149f3:	add    BYTE PTR [eax+0x7],0x21
  4149f7:	xor    DWORD PTR [esi],0x8900a08
  4149fd:	or     DWORD PTR [eax],edi
  4149ff:	push   es
  414a00:	add    BYTE PTR [eax+0xc15000b],al
  414a06:	outs   dx,BYTE PTR ds:[esi]
  414a07:	or     BYTE PTR [eax+0x5190812],cl
  414a0d:	inc    eax
  414a0e:	and    al,0xc4
  414a10:	sbb    DWORD PTR [ecx],eax
  414a12:	or     BYTE PTR [ecx],dl
  414a14:	add    dl,BYTE PTR [eax+0x50e5700a]
  414a1a:	sbb    BYTE PTR [esi],al
  414a1c:	adc    al,0x94
  414a1e:	add    BYTE PTR [edx],cl
  414a20:	pop    eax
  414a21:	mov    al,ds:0x46803256
  414a26:	and    BYTE PTR [ebx],al
  414a28:	jo     0x414a5a
  414a2a:	xor    BYTE PTR [esp+ecx*4],ah
  414a2d:	add    BYTE PTR [eax],dl
  414a2f:	push   ebx
  414a30:	scas   eax,DWORD PTR es:[edi]
  414a31:	loop   0x4149fb
  414a33:	ins    BYTE PTR es:[edi],dx
  414a34:	or     DWORD PTR [eax],eax
  414a36:	add    BYTE PTR es:[eax],dl
  414a39:	or     BYTE PTR [eax],0xb
  414a3c:	or     BYTE PTR [eax],0x20
  414a3f:	inc    eax
  414a40:	xor    BYTE PTR [edx+edi*4],ch
  414a43:	or     al,0x70
  414a45:	adc    ah,BYTE PTR [esi]
  414a47:	xor    cl,cl
  414a49:	add    eax,0x23540813
  414a4e:	sbb    eax,0xa8216621
  414a53:	adc    BYTE PTR [eax+eax*1+0x4022ac00],ah
  414a5a:	add    BYTE PTR [ecx],0x0
  414a5d:	add    eax,DWORD PTR [eax+edx*2-0x40]
  414a61:	adc    BYTE PTR [eax+eax*4],al
  414a64:	or     BYTE PTR [eax+0x488700],al
  414a6a:	add    BYTE PTR [eax],cl
  414a6c:	and    eax,DWORD PTR [ecx]
  414a6e:	or     al,BYTE PTR [ebx]
  414a70:	add    al,0x2b
  414a72:	add    eax,DWORD PTR [edx]
  414a74:	xor    BYTE PTR [ecx],0x64
  414a77:	and    DWORD PTR [eax],eax
  414a79:	mov    BYTE PTR [eax],dh
  414a7b:	push   eax
  414a7c:	and    cl,BYTE PTR [eax+ebx*1]
  414a7f:	rol    al,1
  414a81:	add    BYTE PTR [eax],al
  414a83:	cmp    al,0x10
  414a85:	and    DWORD PTR [esi+ecx*1],ecx
  414a88:	and    DWORD PTR [eax],edx
  414a8a:	xor    DWORD PTR ds:0xc817a050,0x62904403
  414a94:	add    al,0x9
  414a96:	shr    BYTE PTR [ecx],0x2
  414a99:	push   edx
  414a9a:	mov    eax,ds:0x34310001
  414a9f:	lods   eax,DWORD PTR ds:[esi]
  414aa0:	adc    BYTE PTR [ecx+ecx*1],ah
  414aa3:	pop    ds
  414aa4:	add    BYTE PTR [ecx],0x20
  414aa7:	or     BYTE PTR [eax],cl
  414aa9:	mov    WORD PTR [eax+0x0],gs
  414aac:	xor    al,0x48
  414aae:	mov    ds:0x96410b40,eax
  414ab3:	inc    eax
  414ab4:	add    BYTE PTR [eax],bl
  414ab6:	aam    0x6c
  414ab8:	inc    eax
  414ab9:	loopne 0x414adb
  414abb:	add    al,BYTE PTR [esi]
  414abd:	retf   0x243
  414ac0:	or     al,BYTE PTR [eax]
  414ac2:	mov    BYTE PTR [edx+eax*2],ah
  414ac5:	lds    esi,FWORD PTR [eax]
  414ac7:	lock adc BYTE PTR [eax+eax*1-0x157df746],bl
  414acf:	or     al,al
  414ad1:	and    al,0xc0
  414ad3:	nop
  414ad4:	or     DWORD PTR [eax],eax
  414ad6:	inc    eax
  414ad7:	add    al,BYTE PTR [eax+0x1803a06b]
  414add:	add    BYTE PTR ds:0x1400081,al
  414ae3:	add    al,0x85
  414ae5:	dec    edx
  414ae6:	push   edx
  414ae7:	and    al,BYTE PTR [ecx+0x2]
  414aea:	push   esp
  414aeb:	or     al,BYTE PTR [edx]
  414aed:	ret    0x363
  414af0:	add    al,BYTE PTR [eax]
  414af2:	ins    BYTE PTR es:[edi],dx
  414af3:	mov    al,ds:0x12410456
  414af8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414af9:	call   0x20b0:0x23024059
  414b00:	add    dl,BYTE PTR [ebx]
  414b02:	add    BYTE PTR [esi-0x73fef6ff],al
  414b08:	popf   
  414b09:	add    al,0x44
  414b0b:	inc    eax
  414b0c:	xor    BYTE PTR [esi-0x72bb8000],cl
  414b12:	sub    DWORD PTR [eax],eax
  414b14:	add    eax,DWORD PTR [edx+eiz*2]
  414b17:	pusha  
  414b18:	or     al,0xb8
  414b1a:	push   eax
  414b1b:	xor    BYTE PTR [eax],ch
  414b1d:	or     al,ah
  414b1f:	add    ah,BYTE PTR [esi]
  414b21:	add    BYTE PTR [eax],0x40
  414b24:	mov    dl,0x26
  414b27:	sub    eax,0x10200060
  414b2c:	shl    BYTE PTR [eax],0x10
  414b2f:	adc    BYTE PTR [edx+0x17],al
  414b32:	test   DWORD PTR [ecx],eax
  414b34:	add    BYTE PTR [ecx+0x8118011],0x12
  414b3b:	sub    BYTE PTR [ecx+0x1],dl
  414b3e:	and    al,0x0
  414b40:	add    BYTE PTR [eax],dl
  414b42:	ror    BYTE PTR [ecx+0x41011810],0x94
  414b49:	add    eax,0x10aa2101
  414b4e:	call   0x880c:0x38084030
  414b55:	or     BYTE PTR [ebx],al
  414b57:	adc    BYTE PTR [ecx],al
  414b59:	add    BYTE PTR [edx+0x4],cl
  414b5c:	and    al,al
  414b5e:	and    al,0x10
  414b60:	or     DWORD PTR [ebx+0x6c],edx
  414b63:	push   0x21800642
  414b68:	and    BYTE PTR [eax],ah
  414b6a:	and    BYTE PTR [ecx+0x1201c200],0x38
  414b71:	add    BYTE PTR [eax],al
  414b73:	adc    ch,al
  414b75:	adc    BYTE PTR [ecx+0x5c],al
  414b78:	enter  0x8010,0xd1
  414b7c:	add    BYTE PTR [edx+eax*1],ah
  414b7f:	add    cl,BYTE PTR [eax]
  414b81:	(bad)  
  414b82:	retf   0x200
  414b85:	test   BYTE PTR [edx],al
  414b87:	sbb    DWORD PTR [ecx+0x40],edx
  414b8a:	add    al,0x18
  414b8c:	push   edx
  414b8d:	xor    al,BYTE PTR [eax+0x1e]
  414b90:	adc    al,BYTE PTR [eax+ecx*1]
  414b93:	or     BYTE PTR [eax],ch
  414b95:	and    eax,DWORD PTR [eax+0x62250859]
  414b9b:	inc    ebp
  414b9c:	or     BYTE PTR gs:[ecx],al
  414b9f:	outs   dx,DWORD PTR ds:[esi]
  414ba0:	sub    BYTE PTR [ebx-0x78],dh
  414ba3:	loop   0x414be6
  414ba5:	sub    BYTE PTR [ecx],dl
  414ba7:	xor    BYTE PTR [eax],al
  414ba9:	ss ins BYTE PTR es:[edi],dx
  414bab:	sub    ah,BYTE PTR [eax+0x1201003]
  414bb1:	add    BYTE PTR [ecx],0x12
  414bb4:	rol    BYTE PTR [ecx-0x56],0xa
  414bb8:	test   al,0x85
  414bba:	add    DWORD PTR [eax],0x42441060
  414bc0:	cwde   
  414bc1:	add    BYTE PTR [eax+0x61800602],ah
  414bc7:	push   eax
  414bc8:	and    dl,BYTE PTR [eax+0xb04040]
  414bce:	sbb    eax,0x1a401800
  414bd3:	and    al,0x1
  414bd5:	add    BYTE PTR [eax-0x37fbfff8],0x90
  414bdc:	inc    ecx
  414bdd:	stos   BYTE PTR es:[edi],al
  414bde:	or     BYTE PTR [eax],al
  414be0:	add    BYTE PTR [edx],al
  414be2:	xchg   BYTE PTR [eax],al
  414be4:	adc    DWORD PTR [eax+0x12],esp
  414be7:	add    al,0x88
  414be9:	add    DWORD PTR [ecx],eax
  414beb:	xor    BYTE PTR [eax],0x9
  414bee:	mov    dl,0x0
  414bf0:	add    al,0x82
  414bf2:	or     BYTE PTR [esi-0x4bf7fe70],0x13
  414bf9:	mov    al,BYTE PTR [eax]
  414bfb:	or     BYTE PTR [eax],al
  414bfd:	or     BYTE PTR [eax+0xc],ch
  414c00:	je     0x414c53
  414c02:	test   BYTE PTR [eax],al
  414c04:	adc    BYTE PTR [ebp+0x30],ah
  414c07:	or     BYTE PTR [eax],ah
  414c09:	sbb    al,0x6d
  414c0b:	adc    BYTE PTR [eax],cl
  414c0d:	sbb    BYTE PTR [edi],0x82
  414c10:	add    al,BYTE PTR [eax+ebx*1]
  414c13:	or     al,al
  414c15:	and    al,0x27
  414c17:	enter  0x1040,0x0
  414c1b:	inc    ecx
  414c1c:	and    BYTE PTR [ecx],dl
  414c1e:	inc    ecx
  414c1f:	add    BYTE PTR [ecx+0x1820300],cl
  414c25:	xor    BYTE PTR [ecx+ebx*4+0x10],dl
  414c29:	add    BYTE PTR [eax],0x10
  414c2c:	add    BYTE PTR [eax],dl
  414c2e:	add    al,0x6
  414c30:	add    eax,0x2289503
  414c35:	adc    BYTE PTR [esp+eax*4+0x50],al
  414c39:	cmp    BYTE PTR [esi+0x20089181],0x20
  414c40:	mov    bl,0x8
  414c42:	push   ss
  414c43:	sub    ebx,DWORD PTR [eax]
  414c45:	push   ecx
  414c46:	inc    eax
  414c47:	add    DWORD PTR [eax+eax*1],edi
  414c4a:	adc    al,0x40
  414c4c:	adc    cl,BYTE PTR [edx]
  414c4e:	add    DWORD PTR [eax+esi*2],esp
  414c51:	inc    ebx
  414c52:	add    DWORD PTR [eax+0x84030b],esp
  414c58:	cmp    al,BYTE PTR [eax+0x20022e2]
  414c5e:	push   ecx
  414c5f:	add    bl,BYTE PTR [ebx+eax*1-0x7f]
  414c63:	add    al,BYTE PTR [eax]
  414c65:	adc    dl,BYTE PTR [edx+0x8180410]
  414c6b:	inc    eax
  414c6c:	rol    BYTE PTR [ecx],0x48
  414c6f:	add    BYTE PTR [ecx],al
  414c71:	adc    BYTE PTR [edx],al
  414c73:	and    al,0x8
  414c75:	xchg   edx,eax
  414c76:	sbb    BYTE PTR [ecx],al
  414c78:	test   al,0x48
  414c7a:	add    cl,BYTE PTR ds:0x220a0202
  414c80:	adc    al,BYTE PTR [eax]
  414c82:	add    BYTE PTR [eax+0x3640847],0x3
  414c89:	inc    esp
  414c8a:	adc    BYTE PTR [eax],al
  414c8c:	mov    eax,ds:0x4000140
  414c91:	mov    al,BYTE PTR [ecx+eiz*4]
  414c94:	add    DWORD PTR [eax],edi
  414c96:	sbb    BYTE PTR [ecx+0x41],ch
  414c99:	mov    edx,DWORD PTR [edx]
  414c9b:	add    DWORD PTR [eax],ebp
  414c9d:	imul   esp,DWORD PTR [ecx],0x9000240
  414ca3:	jo     0x414cf6
  414ca5:	stos   BYTE PTR es:[edi],al
  414ca6:	add    DWORD PTR [eax+0x20],ecx
  414ca9:	nop
  414caa:	sub    BYTE PTR [eax],ah
  414cac:	mov    al,ds:0x10400001
  414cb1:	add    ch,BYTE PTR [edx-0x5af39970]
  414cb7:	add    BYTE PTR [eax-0x7eeffffe],al
  414cbd:	or     BYTE PTR [edx],al
  414cbf:	and    dl,BYTE PTR [ebx]
  414cc1:	mov    al,ds:0x29002221
  414cc6:	or     BYTE PTR [edx],dl
  414cc8:	sbb    dl,dl
  414cca:	or     eax,0x9c00620e
  414ccf:	test   BYTE PTR [eax-0x70],bl
  414cd2:	shl    BYTE PTR [esi],1
  414cd4:	add    BYTE PTR [esi+0x4],dl
  414cd7:	add    al,0x29
  414cd9:	adc    BYTE PTR [eax],cl
  414cdb:	pusha  
  414cdc:	add    BYTE PTR [edx-0x76],al
  414cdf:	add    DWORD PTR [eax],esp
  414ce1:	nop
  414ce2:	or     BYTE PTR [eax],al
  414ce4:	adc    ah,BYTE PTR [eax-0x75]
  414ce7:	rcl    al,0x4
  414cea:	add    al,0x40
  414cec:	adc    dl,BYTE PTR [ecx]
  414cee:	xor    BYTE PTR [eax+edx*1],ch
  414cf1:	xor    BYTE PTR [eax],dl
  414cf3:	mov    BYTE PTR [eax],dl
  414cf5:	and    al,BYTE PTR [eax]
  414cf7:	add    BYTE PTR [eax],ah
  414cf9:	ror    BYTE PTR [edx],0x82
  414cfc:	pop    esp
  414cfd:	inc    ecx
  414cfe:	add    al,0x44
  414d00:	sbb    ah,BYTE PTR [edx+eiz*1]
  414d03:	push   ebx
  414d04:	add    BYTE PTR [eax-0x7fefeab6],0xa8
  414d0b:	add    dl,BYTE PTR [ebx]
  414d0d:	mov    al,0x10
  414d0f:	sub    DWORD PTR [eax],eax
  414d11:	add    BYTE PTR [ecx],al
  414d13:	push   es
  414d14:	push   0x5181200
  414d19:	or     BYTE PTR [eax],al
  414d1b:	add    DWORD PTR [ecx+0x1106600],esp
  414d21:	add    al,ah
  414d23:	add    BYTE PTR [eax],ah
  414d25:	adc    BYTE PTR [ecx],al
  414d27:	test   al,0x2
  414d29:	add    BYTE PTR [eax+0x9071046],ch
  414d2f:	adc    BYTE PTR [ecx],al
  414d31:	es test al,0x6
  414d34:	add    DWORD PTR [ecx+0x15],eax
  414d37:	add    BYTE PTR [edx],al
  414d39:	xor    DWORD PTR [edx+esi*1],0x80800a9
  414d40:	popa   
  414d41:	add    BYTE PTR [eax+edx*4+0x4],dl
  414d45:	les    eax,FWORD PTR [edx]
  414d47:	push   es
  414d48:	or     al,BYTE PTR [ebx]
  414d4a:	sub    DWORD PTR [esi-0x5d5d5ff4],esp
  414d50:	add    BYTE PTR [eax+0x2626094],dl
  414d56:	and    dl,dl
  414d58:	add    BYTE PTR [edx],0x41
  414d5b:	and    cl,BYTE PTR [eax+ebp*1]
  414d5e:	add    ch,BYTE PTR [esi-0x674fd5fe]
  414d64:	push   edx
  414d65:	add    eax,0x5cea3022
  414d6a:	inc    eax
  414d6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d6c:	inc    ebx
  414d6d:	sbb    al,0x40
  414d6f:	inc    ecx
  414d70:	inc    edx
  414d71:	add    ah,BYTE PTR [ecx]
  414d73:	add    ch,BYTE PTR [eax]
  414d75:	mov    eax,ds:0x50c240c
  414d7a:	add    DWORD PTR [ebx-0x7deff9d8],eax
  414d80:	add    BYTE PTR [eax+0x408c2008],0x0
  414d87:	push   eax
  414d88:	push   eax
  414d89:	add    al,0x9a
  414d8b:	or     DWORD PTR [eax],ebx
  414d8d:	test   BYTE PTR [esi],al
  414d8f:	add    BYTE PTR [esi+0x60b60005],dl
  414d95:	add    BYTE PTR [esi+ecx*2],ah
  414d98:	push   esp
  414d99:	test   DWORD PTR [eax],eax
  414d9b:	ret    0x402a
  414d9e:	or     BYTE PTR [eax+esi*1+0x20],al
  414da2:	nop
  414da3:	adc    eax,0x207b4f01
  414da8:	or     al,BYTE PTR [eax+eax*1]
  414dab:	and    DWORD PTR [eax+0x4710000],0x11804418
  414db5:	lods   al,BYTE PTR ds:[esi]
  414db6:	add    BYTE PTR [eax],dl
  414db8:	call   0x100:0x80463002
  414dbf:	mov    al,ds:0x190095ca
  414dc4:	add    al,BYTE PTR [eax+0x1a2c4420]
  414dca:	and    BYTE PTR [ecx+0x24404108],al
  414dd0:	add    BYTE PTR [esi+0x51405580],ah
  414dd6:	and    BYTE PTR [eax+0xc805100],ah
  414ddc:	ds and al,0x13
  414ddf:	mov    BYTE PTR [eax],al
  414de1:	adc    DWORD PTR [eax+ebp*1],eax
  414de4:	lds    ecx,FWORD PTR [edx-0x32]
  414de7:	enter  0x80d0,0x24
  414deb:	arpl   WORD PTR [ebp+0x34d18884],ax
  414df1:	xor    BYTE PTR ds:0x80270291,dl
  414df7:	mov    al,ds:0x9cf54212
  414dfc:	mov    cl,0x8a
  414dfe:	push   edx
  414dff:	add    BYTE PTR [ecx+0x2],al
  414e02:	add    DWORD PTR [eax],esp
  414e04:	push   0xd5120
  414e09:	push   edx
  414e0a:	push   cs
  414e0b:	sub    DWORD PTR [ecx-0x77],ebp
  414e0e:	add    dl,BYTE PTR [eax]
  414e10:	nop
  414e11:	add    eax,DWORD PTR [ebx+eax*1-0x3d7caf20]
  414e18:	add    BYTE PTR ds:0x20ac1c,dh
  414e1e:	or     BYTE PTR fs:[ecx+eax*1],al
  414e22:	inc    ecx
  414e23:	add    BYTE PTR ds:0x1e132320,ch
  414e29:	inc    ecx
  414e2a:	inc    ecx
  414e2b:	pop    eax
  414e2c:	or     DWORD PTR [edx+0x50100857],eax
  414e32:	add    BYTE PTR [ecx-0x65a727b4],cl
  414e38:	nop
  414e39:	or     DWORD PTR [eax],ebp
  414e3b:	inc    ebx
  414e3c:	inc    eax
  414e3d:	add    al,0x88
  414e3f:	dec    eax
  414e40:	adc    al,0x9
  414e42:	push   esi
  414e43:	dec    esp
  414e44:	sbb    BYTE PTR [edx],dl
  414e46:	adc    BYTE PTR [eax+0x0],al
  414e49:	adc    al,0x1a
  414e4b:	sub    al,0x26
  414e4d:	pusha  
  414e4e:	and    cl,BYTE PTR [edx]
  414e50:	sub    BYTE PTR [ebx+eax*4+0x10],ah
  414e54:	dec    eax
  414e55:	add    BYTE PTR [ecx],al
  414e57:	rol    BYTE PTR [ebx+eax*4+0x20],1
  414e5b:	adc    al,0xa0
  414e5d:	or     BYTE PTR [eax+eiz*1],ah
  414e60:	inc    eax
  414e61:	pusha  
  414e62:	add    al,0x24
  414e64:	add    BYTE PTR [esi],cl
  414e66:	add    BYTE PTR [edx],0x52
  414e69:	push   es
  414e6a:	and    BYTE PTR [edx+0x400],0x6
  414e71:	or     al,0x1
  414e73:	sub    BYTE PTR [edx],al
  414e75:	mov    DWORD PTR [eax],esp
  414e77:	xor    dl,cl
  414e79:	adc    al,0xa6
  414e7b:	mov    al,ds:0x82a00541
  414e80:	or     BYTE PTR [eax],ah
  414e82:	pusha  
  414e83:	les    eax,FWORD PTR [ecx+0x78008200]
  414e89:	sbb    al,BYTE PTR [ebx+0x3204c104]
  414e8f:	add    BYTE PTR [eax+0x2204450],al
  414e95:	or     al,0x9
  414e97:	mov    BYTE PTR [eax],al
  414e99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e9a:	add    al,0xa8
  414e9c:	sub    DWORD PTR [eax+0x28229],ebx
  414ea2:	add    BYTE PTR [eax+0x24],dl
  414ea5:	and    BYTE PTR [eax],0xb3
  414ea8:	inc    esp
  414ea9:	dec    eax
  414eaa:	add    BYTE PTR [eax],al
  414eac:	and    BYTE PTR [eax],al
  414eae:	sbb    BYTE PTR [edx+eax*2+0x42246980],dl
  414eb5:	mov    eax,DWORD PTR [eax]
  414eb7:	inc    ecx
  414eb8:	or     al,0x2
  414eba:	add    BYTE PTR [eax+eiz*1],al
  414ebd:	and    BYTE PTR [edx+eax*8],cl
  414ec0:	add    esp,DWORD PTR [eax]
  414ec2:	add    BYTE PTR [eax],al
  414ec4:	and    BYTE PTR [eax+0x0],dh
  414ec7:	shl    BYTE PTR [edx],0x0
  414eca:	add    BYTE PTR [eax],bh
  414ecc:	add    BYTE PTR [ecx+0x3401040],al
  414ed2:	or     al,0x0
  414ed4:	aam    0x3
  414ed6:	cwde   
  414ed7:	add    al,0x30
  414ed9:	adc    DWORD PTR [eax+0x10],eax
  414edc:	xor    al,0x0
  414ede:	add    BYTE PTR [eax+0x42441020],al
  414ee4:	scas   al,BYTE PTR es:[edi]
  414ee5:	add    BYTE PTR [eax],al
  414ee7:	cmp    BYTE PTR [ebx+0x0],cl
  414eea:	inc    eax
  414eeb:	add    BYTE PTR [edx],al
  414eed:	add    edx,0x1806606
  414ef3:	or     cl,BYTE PTR [ecx+edx*1+0x10]
  414ef7:	add    al,BYTE PTR [eax]
  414ef9:	mov    BYTE PTR [ecx],al
  414efb:	dec    ebx
  414efc:	mov    eax,ds:0x908a42a0
  414f01:	add    DWORD PTR [ebp+0x40],eax
  414f04:	add    BYTE PTR [eax],al
  414f06:	add    BYTE PTR [eax],ah
  414f08:	add    BYTE PTR [eax-0x1d2dd4bc],dl
  414f0e:	sbb    ecx,DWORD PTR [eax]
  414f10:	and    cl,bl
  414f12:	jnp    0x414e96
  414f14:	add    BYTE PTR ds:0x4920c0,cl
  414f1a:	inc    ecx
  414f1b:	add    ah,BYTE PTR [eax+eiz*1]
  414f1e:	adc    BYTE PTR [eax+0x10],al
  414f21:	add    BYTE PTR [ecx+0x41414428],al
  414f27:	add    BYTE PTR [eax],0xc4
  414f2a:	add    BYTE PTR [eax],cl
  414f2c:	add    BYTE PTR [edx+0x20800011],al
  414f32:	xchg   esp,eax
  414f33:	add    BYTE PTR [edx],al
  414f35:	or     BYTE PTR [eax+eax*1],dh
  414f38:	test   al,0x0
  414f3a:	add    BYTE PTR [eax-0x79dfbff8],ah
  414f40:	adc    BYTE PTR [edx-0x3ffbffc6],al
  414f46:	add    al,0x11
  414f48:	push   es
  414f49:	sub    BYTE PTR [esi+0x440200],al
  414f4f:	add    al,0x3
  414f51:	and    BYTE PTR [eax+0x1501300],bh
  414f57:	or     DWORD PTR ds:0x601,eax
  414f5d:	add    BYTE PTR [eax],0x45
  414f60:	inc    ecx
  414f61:	add    al,0x82
  414f63:	add    BYTE PTR [ecx],al
  414f65:	sbb    BYTE PTR [ecx],al
  414f67:	rol    BYTE PTR [ebx+0x9445420],0x2
  414f6e:	or     al,0x5c
  414f70:	out    dx,eax
  414f71:	add    DWORD PTR [esi+0x52],0x11810d40
  414f78:	pop    ecx
  414f79:	and    BYTE PTR [eax],cl
  414f7b:	add    BYTE PTR [ecx-0x7e9aff40],al
  414f81:	add    BYTE PTR [eax+0x30],0x1
  414f85:	nop
  414f86:	add    DWORD PTR [eax],0x4141a104
  414f8c:	add    BYTE PTR [edx],cl
  414f8e:	add    BYTE PTR [esi+0x51248450],ah
  414f94:	pusha  
  414f95:	xor    BYTE PTR [eax],al
  414f97:	adc    BYTE PTR [ecx+0x28],al
  414f9a:	add    BYTE PTR [eax],bl
  414f9c:	adc    BYTE PTR [eax],0x0
  414f9f:	add    BYTE PTR [ecx+0x8],0x84
  414fa3:	add    eax,DWORD PTR [eax+0x0]
  414fa6:	add    BYTE PTR [edx],al
  414fa8:	mov    ah,0x0
  414faa:	add    eax,0xa0021
  414faf:	adc    ah,al
  414fb1:	pop    ecx
  414fb2:	and    BYTE PTR [eax+eax*1],al
  414fb5:	add    BYTE PTR [ecx],0x0
  414fb8:	adc    dh,BYTE PTR [ebx+0x60100f]
  414fbe:	sbb    BYTE PTR [eax+eax*1],cl
  414fc1:	add    BYTE PTR [esp+edx*1+0x14580],dl
  414fc8:	add    BYTE PTR [eax],al
  414fca:	and    BYTE PTR [eax],0x10
  414fcd:	add    al,BYTE PTR [eax]
  414fcf:	add    al,0x0
  414fd1:	xor    BYTE PTR [eax],al
  414fd3:	add    al,BYTE PTR [ebp-0x20]
  414fd6:	hlt    
  414fd7:	sbb    cl,BYTE PTR [eax]
  414fd9:	shl    BYTE PTR [eax],0x4
  414fdc:	xor    BYTE PTR [ebx],ah
  414fde:	dec    eax
  414fdf:	xor    al,0x2
  414fe1:	add    BYTE PTR [eax-0x7bff7400],ah
  414fe7:	add    al,BYTE PTR [esi]
  414fe9:	add    BYTE PTR [ecx+eax*1],al
  414fec:	inc    ecx
  414fed:	sub    eax,edx
  414fef:	xchg   edx,eax
  414ff0:	add    bl,al
  414ff2:	and    ch,BYTE PTR [eax+0x5a]
  414ff5:	and    BYTE PTR [ecx-0x6ee9fff0],al
  414ffb:	and    BYTE PTR [eax+0x2],dl
  414ffe:	mov    BYTE PTR [eax-0x6ffb8de8],al
  415004:	add    BYTE PTR [ecx+0x0],al
  415007:	add    DWORD PTR [ecx-0x679f5dfd],0x4408
  415011:	and    BYTE PTR [ecx-0x7ebcf000],al
  415017:	add    BYTE PTR [eax],al
  415019:	rol    BYTE PTR [eax],cl
  41501b:	or     BYTE PTR [eax+0x1],al
  41501e:	add    BYTE PTR [eax],al
  415020:	pop    eax
  415021:	loope  0x415063
  415023:	add    al,dl
  415025:	inc    edx
  415026:	add    BYTE PTR [eax],al
  415028:	add    al,BYTE PTR [ecx]
  41502a:	and    BYTE PTR [ebx],cl
  41502c:	add    al,cl
  41502e:	and    BYTE PTR [ecx+eax*1],cl
  415031:	push   cs
  415032:	add    edx,DWORD PTR [esi+0x44]
  415035:	xchg   BYTE PTR [eax],al
  415037:	add    BYTE PTR [eax+0x53],dl
  41503a:	add    BYTE PTR [eax],al
  41503c:	mov    al,ds:0x1064e00
  415041:	add    al,dh
  415043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415044:	add    al,cl
  415046:	mov    al,ds:0x10c00800
  41504b:	or     BYTE PTR [eax+0x31],al
  41504e:	add    BYTE PTR [eax],al
  415050:	add    al,BYTE PTR [ebx-0x7fdbfffa]
  415056:	inc    ecx
  415057:	inc    eax
  415058:	adc    dh,BYTE PTR [eax]
  41505a:	and    DWORD PTR [ecx],ecx
  41505c:	sub    DWORD PTR [edx],ecx
  41505e:	and    DWORD PTR [eax],eax
  415060:	add    BYTE PTR [ecx],0x4
  415063:	or     BYTE PTR [eax],cl
  415065:	dec    edi
  415066:	add    BYTE PTR [eax+0x20],dl
  415069:	xchg   ebx,eax
  41506a:	or     BYTE PTR [eax+eax*4],cl
  41506d:	add    BYTE PTR [eax],al
  41506f:	and    cl,BYTE PTR [esi]
  415071:	and    eax,0xd2110006
  415076:	add    ah,BYTE PTR [ecx+0x200084c]
  41507c:	nop
  41507d:	adc    BYTE PTR [esi+0x1],ah
  415080:	adc    BYTE PTR [ecx+0x1878801],al
  415086:	add    BYTE PTR [eax],al
  415088:	and    eax,DWORD PTR [eax]
  41508a:	add    BYTE PTR [eax+0x4d04c442],ah
  415090:	and    BYTE PTR [eax],al
  415092:	or     BYTE PTR [edx],ah
  415094:	and    al,0x31
  415096:	adc    BYTE PTR [edx+eax*4],al
  415099:	and    al,BYTE PTR [edx+0x433013c0]
  41509f:	inc    esp
  4150a0:	add    BYTE PTR [eax-0x1efffd67],al
  4150a6:	dec    eax
  4150a7:	lock or BYTE PTR [eax+eiz*1-0x50],al
  4150ac:	add    BYTE PTR [edx],al
  4150ae:	add    BYTE PTR [edx-0x3d4edf9e],al
  4150b4:	enter  0x2200,0x11
  4150b8:	or     BYTE PTR [ecx],al
  4150ba:	and    BYTE PTR [eax],0x8d
  4150bd:	and    BYTE PTR ss:[edx],0x10
  4150c1:	and    ebx,DWORD PTR [eax]
  4150c3:	add    al,BYTE PTR [eax+0x43]
  4150c6:	push   cs
  4150c7:	add    al,0x0
  4150c9:	xor    DWORD PTR [ecx+0x8],esp
  4150cc:	add    BYTE PTR [ebx],dl
  4150ce:	add    BYTE PTR [eax+0x22143],cl
  4150d4:	inc    ebx
  4150d5:	xchg   esp,eax
  4150d6:	pop    DWORD PTR [eax]
  4150d8:	add    DWORD PTR [eax+0x61010000],esp
  4150de:	xor    ecx,ecx
  4150e0:	sub    DWORD PTR [ecx+0x45],esi
  4150e3:	add    al,BYTE PTR [ecx]
  4150e5:	sbb    BYTE PTR [eax+0x1984260],dl
  4150eb:	and    BYTE PTR [eax],0x18
  4150ee:	pop    ecx
  4150ef:	sub    BYTE PTR [eax],dl
  4150f1:	add    BYTE PTR [esi+0x244910c1],ah
  4150f7:	rol    BYTE PTR [eax+eax*1],0x0
  4150fb:	add    BYTE PTR [eax],ah
  4150fd:	inc    eax
  4150fe:	pusha  
  4150ff:	add    BYTE PTR [ecx],cl
  415101:	add    BYTE PTR [eax+0x18],al
  415104:	add    al,BYTE PTR [esi]
  415106:	cwde   
  415107:	add    BYTE PTR [ebx],al
  415109:	adc    DWORD PTR [eax],eax
  41510b:	ret    
  41510c:	adc    DWORD PTR [eax],ecx
  41510e:	adc    BYTE PTR [eax],0x13
  415111:	add    BYTE PTR [eax+eax*1+0x16469202],dl
  415118:	and    al,0x0
  41511a:	or     eax,DWORD PTR [eax]
  41511c:	add    BYTE PTR [ecx-0x58],al
  41511f:	add    DWORD PTR [eax+0x20],ecx
  415122:	or     BYTE PTR [ecx+0x41001404],bh
  415128:	add    BYTE PTR [eax],al
  41512a:	and    BYTE PTR [eax],al
  41512c:	add    BYTE PTR [eax],0x20
  41512f:	add    BYTE PTR [edx+0x418240],al
  415135:	add    BYTE PTR [eax+0x42],al
  415138:	sub    DWORD PTR [eax],eax
  41513a:	or     al,cl
  41513c:	and    BYTE PTR [ecx+0x42],al
  41513f:	xlat   BYTE PTR ds:[ebx]
  415140:	dec    edx
  415141:	xor    DWORD PTR [ecx],edx
  415143:	inc    ecx
  415144:	add    BYTE PTR [eax],al
  415146:	add    DWORD PTR [eax+0x11126530],0x43001c16
  415150:	dec    eax
  415151:	and    BYTE PTR [ecx+0x0],ah
  415154:	add    DWORD PTR [ecx+0x61041000],eax
  41515a:	add    BYTE PTR [eax],cl
  41515c:	add    BYTE PTR [edx+0x100000],dl
  415162:	inc    ecx
  415163:	add    al,0x0
  415165:	add    eax,edx
  415167:	add    eax,0x8000a002
  41516c:	push   ebp
  41516d:	or     BYTE PTR [ecx],al
  41516f:	push   esp
  415170:	sbb    al,0x30
  415172:	loope  0x415194
  415174:	add    DWORD PTR [eax],eax
  415176:	push   ecx
  415177:	add    ah,al
  415179:	and    eax,0x10600814
  41517e:	add    BYTE PTR [edx],al
  415180:	mov    DWORD PTR [eax+eiz*8],eax
  415183:	inc    ecx
  415184:	rcr    dh,0x67
  415187:	add    al,0x0
  415189:	add    BYTE PTR [eax+0x0],al
  41518c:	add    BYTE PTR [edx+0x490004],al
  415192:	or     BYTE PTR gs:[edx],dl
  415195:	adc    eax,0xa4004202
  41519a:	int3   
  41519b:	add    BYTE PTR [eax],0xc0
  41519e:	add    cl,BYTE PTR [ecx+0x20]
  4151a1:	test   DWORD PTR [eax],eax
  4151a3:	add    BYTE PTR [eax],al
  4151a5:	and    al,0x0
  4151a7:	adc    BYTE PTR [eax+eax*1+0x811828],ah
  4151ae:	add    BYTE PTR [eax],0x48
  4151b1:	add    dl,BYTE PTR [edx]
  4151b3:	inc    ecx
  4151b4:	call   0xa06152e1
  4151b9:	add    BYTE PTR [edx],dl
  4151bb:	add    DWORD PTR [edx],eax
  4151bd:	add    DWORD PTR [edx],edx
  4151bf:	and    BYTE PTR [edx],0x0
  4151c2:	sbb    BYTE PTR [eax],al
  4151c4:	add    DWORD PTR [eax-0x60],eax
  4151c7:	xor    BYTE PTR [eax],al
  4151c9:	push   ebx
  4151ca:	add    DWORD PTR [eax],edx
  4151cc:	add    al,al
  4151ce:	imul   eax,ebx,0x0
  4151d1:	and    BYTE PTR [eax],al
  4151d3:	add    BYTE PTR [ecx],al
  4151d5:	sub    BYTE PTR [eax],al
  4151d7:	pusha  
  4151d8:	and    al,0x80
  4151da:	test   BYTE PTR [ecx],al
  4151dc:	add    BYTE PTR [eax],cl
  4151de:	shr    BYTE PTR [ecx-0x7f],0x0
  4151e2:	mov    ebp,0x90820000
  4151e7:	add    DWORD PTR [eax],eax
  4151e9:	and    BYTE PTR [eax+0x4],cl
  4151ec:	add    BYTE PTR [eax+eax*1],cl
  4151ef:	add    DWORD PTR [edx],edx
  4151f1:	add    BYTE PTR [ebx],bl
  4151f3:	add    al,al
  4151f5:	cmp    BYTE PTR [ecx],0x81
  4151f8:	sahf   
  4151f9:	dec    eax
  4151fa:	adc    eax,ebx
  4151fc:	adc    BYTE PTR [eax+0x482286],ah
  415202:	mov    eax,ds:0x404b1c02
  415207:	mov    al,BYTE PTR [eax+0x16]
  41520a:	add    BYTE PTR [ecx+eax*2],ah
  41520d:	and    bh,BYTE PTR [ebx]
  41520f:	add    DWORD PTR [eax],eax
  415211:	pop    ebp
  415212:	add    al,0xa0
  415214:	call   0xa208:0x89100400
  41521b:	or     BYTE PTR [ebx+0x9],ah
  41521e:	xchg   edx,eax
  41521f:	xchg   ebx,eax
  415220:	inc    edx
  415221:	inc    edx
  415222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415223:	or     BYTE PTR [eax],cl
  415225:	add    ecx,DWORD PTR [eax+0x0]
  415228:	add    eax,0x2b17300
  41522d:	add    BYTE PTR [edx],0x40
  415230:	add    BYTE PTR [ecx],ch
  415232:	test   DWORD PTR [eax],eax
  415234:	add    DWORD PTR [eax+0x8032085],eax
  41523a:	add    BYTE PTR [eax+0x4214c100],al
  415240:	adc    al,BYTE PTR [eax+0x0]
  415243:	add    cl,BYTE PTR [eax+0x246000a2]
  415249:	and    DWORD PTR [eax],0x20003210
  41524f:	inc    esp
  415250:	add    al,0x26
  415252:	and    BYTE PTR [eax],0x1
  415255:	add    eax,DWORD PTR [eax-0x80]
  415258:	add    al,0x28
  41525a:	dec    eax
  41525b:	add    BYTE PTR [edx-0x34],cl
  41525e:	add    BYTE PTR [eax],0xcc
  415261:	add    al,0x0
  415263:	popa   
  415264:	add    BYTE PTR gs:[edx],al
  415267:	add    BYTE PTR ds:0xb0410241,al
  41526d:	or     ch,BYTE PTR [ecx]
  41526f:	inc    edx
  415270:	add    eax,0x92140060
  415275:	adc    DWORD PTR [eax],ebp
  415277:	mov    ds:0x82024180,eax
  41527c:	adc    ch,BYTE PTR [edx]
  41527e:	add    BYTE PTR [eax],al
  415280:	inc    eax
  415281:	and    BYTE PTR [eax],0x8
  415284:	or     DWORD PTR [edx],esi
  415286:	add    BYTE PTR [ecx+eiz*4],al
  415289:	add    BYTE PTR [eax],al
  41528b:	cwde   
  41528c:	sbb    BYTE PTR [eax],al
  41528e:	add    BYTE PTR [ecx+0xaa30c1],ah
  415294:	add    BYTE PTR [eax-0x7e8ffec0],0x80
  41529b:	add    DWORD PTR [eax],eax
  41529d:	and    BYTE PTR [edx],dl
  41529f:	add    DWORD PTR [ebp+0x25],eax
  4152a2:	fst    DWORD PTR [eax+0x0]
  4152a5:	or     eax,0x42500a01
  4152aa:	push   esp
  4152ab:	and    DWORD PTR [eax],0xffffff84
  4152ae:	add    DWORD PTR [eax],eax
  4152b0:	add    BYTE PTR [eax],ch
  4152b2:	inc    ecx
  4152b3:	inc    ecx
  4152b4:	add    BYTE PTR [edx],dh
  4152b6:	and    BYTE PTR [esi+0x92a103],al
  4152bc:	sub    BYTE PTR [eax],al
  4152be:	and    DWORD PTR [ebp-0x58],eax
  4152c1:	add    BYTE PTR [edx],dl
  4152c3:	add    BYTE PTR [edi+0xe0094],ch
  4152c9:	dec    ecx
  4152ca:	inc    ecx
  4152cb:	or     BYTE PTR [eax],cl
  4152cd:	adc    edx,eax
  4152cf:	push   cs
  4152d0:	inc    esp
  4152d1:	add    bl,BYTE PTR [eax+eiz*1]
  4152d4:	and    BYTE PTR [eax+0x88040],dl
  4152da:	add    DWORD PTR [eax+eax*1+0x30],eax
  4152de:	or     BYTE PTR [esi],dl
  4152e0:	push   cs
  4152e1:	inc    eax
  4152e2:	add    DWORD PTR [edx],eax
  4152e4:	adc    DWORD PTR [eax+0x4],eax
  4152e7:	inc    ecx
  4152e8:	add    BYTE PTR [ecx],al
  4152ea:	and    BYTE PTR [edx],al
  4152ec:	add    DWORD PTR [edx+0x6],eax
  4152ef:	inc    edx
  4152f0:	or     BYTE PTR [ecx+0x8],al
  4152f3:	add    al,BYTE PTR [ecx+0x31]
  4152f6:	add    BYTE PTR [ebx],al
  4152f8:	or     BYTE PTR [eax+eax*4+0x4ecc1031],dl
  4152ff:	or     eax,0x6990a
  415304:	nop
  415305:	push   eax
  415306:	pushf  
  415307:	adc    DWORD PTR [eax],eax
  415309:	add    al,0x3
  41530b:	xor    al,BYTE PTR [ebx-0x80]
  41530e:	dec    eax
  41530f:	add    BYTE PTR [edx],al
  415311:	sub    esp,esp
  415313:	mov    WORD PTR [eax],es
  415315:	add    BYTE PTR [ecx],al
  415317:	add    BYTE PTR [eax],al
  415319:	add    ch,BYTE PTR [eax+eax*4+0x40000800]
  415320:	add    dl,BYTE PTR [eax]
  415322:	and    DWORD PTR [ebp+0x71],0x14005000
  415329:	and    al,BYTE PTR [edx]
  41532b:	rol    DWORD PTR [eax+eiz*4+0x2a],0x80
  415330:	inc    edx
  415331:	sub    BYTE PTR [eax+eax*1],cl
  415334:	or     al,0x13
  415336:	add    eax,DWORD PTR [ecx-0x80]
  415339:	add    BYTE PTR [eax],dl
  41533b:	sub    BYTE PTR [eax],dl
  41533d:	inc    eax
  41533e:	adc    BYTE PTR [eax+0x50412040],cl
  415344:	add    BYTE PTR [eax],dl
  415346:	mov    ds:0x40142000,eax
  41534b:	add    BYTE PTR [eax],ah
  41534d:	add    al,0x65
  41534f:	or     DWORD PTR ds:0x38200208,esp
  415355:	add    BYTE PTR [eax],bl
  415357:	or     al,BYTE PTR [eax]
  415359:	bound  ecx,QWORD PTR [eax]
  41535b:	add    ah,BYTE PTR [ecx]
  41535d:	add    al,0x0
  41535f:	or     BYTE PTR [ecx+0x200014],al
  415365:	adc    BYTE PTR [eax+eiz*1],dh
  415368:	xor    BYTE PTR [ecx],cl
  41536a:	add    dl,al
  41536c:	test   cl,ch
  41536e:	and    BYTE PTR [esi],dl
  415370:	add    al,BYTE PTR [eax+0x1]
  415373:	or     BYTE PTR [ebx],0x80
  415376:	add    BYTE PTR [eax],al
  415378:	add    dl,BYTE PTR [ecx]
  41537a:	add    al,0x0
  41537c:	add    BYTE PTR [ecx+0x0],dl
  41537f:	xor    BYTE PTR [eax+ecx*4],al
  415382:	dec    esi
  415383:	inc    eax
  415384:	add    BYTE PTR [esi+ebp*1],al
  415387:	(bad)  
  415388:	and    BYTE PTR [eax],dh
  41538a:	add    DWORD PTR [edx+eax*1],eax
  41538d:	or     BYTE PTR [edx],al
  41538f:	add    esi,DWORD PTR [eax+0x303019]
  415395:	and    BYTE PTR [ecx+0x44],al
  415398:	nop
  415399:	add    DWORD PTR [eax-0x7f],eax
  41539c:	add    DWORD PTR [ecx],eax
  41539e:	add    BYTE PTR [eax],al
  4153a0:	ret    
  4153a1:	nop
  4153a2:	add    dl,al
  4153a4:	add    al,BYTE PTR [ecx]
  4153a6:	test   BYTE PTR [eax],0x2
  4153a9:	mov    eax,ds:0xa24080cc
  4153ae:	xchg   esp,eax
  4153af:	inc    edx
  4153b0:	sbb    cl,BYTE PTR [eax]
  4153b2:	add    BYTE PTR [eax],dl
  4153b4:	push   cs
  4153b5:	and    ah,BYTE PTR [ebx+0x0]
  4153b8:	mov    al,ds:0x20339809
  4153bd:	add    al,BYTE PTR [eax]
  4153bf:	add    dl,al
  4153c1:	inc    edx
  4153c2:	adc    al,ah
  4153c4:	adc    BYTE PTR [eax],al
  4153c6:	inc    eax
  4153c7:	inc    ecx
  4153c8:	mov    BYTE PTR [ecx],al
  4153ca:	add    BYTE PTR [edx],0x0
  4153cd:	lods   al,BYTE PTR ds:[esi]
  4153ce:	or     dh,al
  4153d0:	add    DWORD PTR [eax+0x20040220],ecx
  4153d6:	xor    BYTE PTR [ecx+eax*2+0x4],al
  4153da:	inc    ebp
  4153db:	add    BYTE PTR [edx+0x1],dl
  4153de:	add    BYTE PTR [eax],ah
  4153e0:	add    al,BYTE PTR [eax]
  4153e2:	xchg   ebx,eax
  4153e3:	mov    BYTE PTR [eax],al
  4153e5:	add    al,0x0
  4153e7:	sbb    BYTE PTR [eax],al
  4153e9:	add    eax,0x42008091
  4153ee:	and    BYTE PTR [ecx],cl
  4153f0:	add    BYTE PTR ds:0x7003000,dl
  4153f6:	and    BYTE PTR [ebx+0x10200058],al
  4153fc:	add    BYTE PTR [eax+0x41022],cl
  415402:	add    al,0x0
  415404:	test   al,0x5
  415406:	add    BYTE PTR [ecx-0x78],0x0
  41540a:	add    BYTE PTR [eax],al
  41540c:	inc    eax
  41540d:	and    al,BYTE PTR [eax+eax*2]
  415410:	add    BYTE PTR [ecx+0x41],al
  415413:	adc    dl,BYTE PTR [eax]
  415415:	add    BYTE PTR [eax],al
  415417:	xchg   ebx,eax
  415418:	add    al,0x80
  41541a:	sbb    dl,BYTE PTR [eax+0x20804211]
  415420:	sbb    BYTE PTR [eax-0x7c],al
  415423:	push   0x21
  415425:	add    BYTE PTR [eax],dl
  415427:	add    DWORD PTR [eax],eax
  415429:	rol    BYTE PTR [edx],1
  41542b:	and    BYTE PTR [edx-0x76],al
  41542e:	add    BYTE PTR [ecx],al
  415430:	and    BYTE PTR [edx+0x4],ah
  415433:	inc    eax
  415434:	add    BYTE PTR [eax+0x10],al
  415437:	adc    BYTE PTR [ebx],cl
  415439:	dec    ebp
  41543a:	add    BYTE PTR [edx-0x7c],dl
  41543d:	adc    DWORD PTR [eax],eax
  41543f:	push   ds
  415440:	inc    edx
  415441:	inc    ecx
  415442:	add    BYTE PTR [ecx+ecx*1],0x0
  415446:	dec    eax
  415447:	add    BYTE PTR [eax],al
  415449:	adc    BYTE PTR [edx+0x51],dl
  41544c:	push   0x51880001
  415451:	add    al,0x21
  415453:	call   0x0:0x24000
  41545a:	push   cs
  41545b:	and    DWORD PTR [eax],esp
  41545d:	js     0x41547f
  41545f:	adc    BYTE PTR [eax],dl
  415461:	and    DWORD PTR [ecx-0x2bb7bb7d],eax
  415467:	add    BYTE PTR [eax],al
  415469:	test   al,0xb
  41546b:	add    BYTE PTR [eax+0xc25010],0x81
  415472:	mov    edx,0x1802
  415477:	sbb    al,BYTE PTR [ebx+0x53]
  41547a:	add    BYTE PTR [ecx],al
  41547c:	add    BYTE PTR [eax],ah
  41547e:	add    BYTE PTR [eax+0x4419610],al
  415484:	add    ah,dl
  415486:	and    BYTE PTR [eax],0x0
  415489:	push   es
  41548a:	xor    BYTE PTR [eax],0x60
  41548d:	push   ss
  41548e:	add    DWORD PTR [ecx+0x21],ebx
  415491:	and    BYTE PTR [esp],dl
  415494:	adc    BYTE PTR [eax],dl
  415496:	add    BYTE PTR [ecx+eax*1],bl
  415499:	inc    ecx
  41549a:	and    BYTE PTR [ecx+0x40],al
  41549d:	add    ah,BYTE PTR [ebx]
  41549f:	add    BYTE PTR [eax],al
  4154a1:	inc    eax
  4154a2:	js     0x415424
  4154a4:	adc    BYTE PTR [eax+eiz*2+0xc040041],0x4
  4154ac:	adc    dl,al
  4154ae:	inc    eax
  4154af:	adc    dl,al
  4154b1:	add    BYTE PTR [eax],al
  4154b3:	push   edx
  4154b4:	adc    BYTE PTR [eax],al
  4154b6:	add    BYTE PTR [eax],al
  4154b8:	push   eax
  4154b9:	adc    BYTE PTR [edx+0x47],al
  4154bc:	add    BYTE PTR [ecx],al
  4154be:	add    BYTE PTR [ebx],al
  4154c0:	add    BYTE PTR ds:0x204300,cl
  4154c6:	add    al,BYTE PTR [ecx-0x80]
  4154c9:	mov    ch,0x80
  4154cb:	add    eax,DWORD PTR [ecx]
  4154cd:	or     BYTE PTR ds:0x80042b18,al
  4154d3:	or     al,0x60
  4154d5:	xchg   ebp,eax
  4154d6:	js     0x4154de
  4154d8:	sub    DWORD PTR [eax+ecx*1],ecx
  4154db:	add    BYTE PTR [ecx],dl
  4154dd:	add    cl,BYTE PTR [eax]
  4154df:	inc    esi
  4154e0:	or     BYTE PTR [edx-0x7fbde000],ah
  4154e6:	add    BYTE PTR [eax],dl
  4154e8:	rol    BYTE PTR [eax],cl
  4154ea:	mov    BYTE PTR [eax],cl
  4154ec:	mov    DWORD PTR [eax],eax
  4154ee:	add    BYTE PTR [eax],al
  4154f0:	add    dl,dh
  4154f2:	adc    BYTE PTR [eax+eax*1],0x2
  4154f6:	add    BYTE PTR [edx],al
  4154f8:	or     DWORD PTR [ecx-0x7f],0x43444401
  4154ff:	and    BYTE PTR [ebx],cl
  415501:	add    BYTE PTR [eax],0x80
  415504:	add    BYTE PTR [eax],al
  415506:	rcr    BYTE PTR [eax],0x5
  415509:	add    BYTE PTR [ecx],al
  41550b:	add    BYTE PTR [eax+0x4],al
  41550e:	or     BYTE PTR [eax],ah
  415510:	add    BYTE PTR [edx+0x0],0x24
  415514:	add    BYTE PTR [eax],0x41
  415517:	and    eax,DWORD PTR [eax]
  415519:	add    BYTE PTR [ecx],al
  41551b:	dec    eax
  41551c:	add    BYTE PTR [eax+0x4],al
  41551f:	xor    BYTE PTR [eax-0x7f76edbe],al
  415525:	add    BYTE PTR [eax],cl
  415527:	mov    al,ds:0x40186000
  41552c:	and    dl,BYTE PTR [ecx+0x5284431]
  415532:	adc    BYTE PTR [eax+0x2061821],dl
  415538:	add    DWORD PTR [eax-0xefbdfa0],eax
  41553e:	jo     0x4154c0
  415540:	add    BYTE PTR [edx],al
  415542:	dec    edx
  415543:	inc    eax
  415544:	add    BYTE PTR [eax+eax*1],0x18
  415548:	add    DWORD PTR [eax],eax
  41554a:	add    BYTE PTR [eax+eax*1],0x1
  41554e:	rcl    DWORD PTR [eax],0x0
  415551:	add    DWORD PTR [ecx],esp
  415553:	add    BYTE PTR [eax],al
  415555:	and    DWORD PTR [ebx],esi
  415557:	es inc eax
  415559:	xchg   edx,eax
  41555a:	add    BYTE PTR [eax],al
  41555c:	add    BYTE PTR [ecx],al
  41555e:	add    BYTE PTR [eax+eax*4],0x1
  415562:	add    DWORD PTR [eax],0x89252800
  415568:	push   eax
  415569:	add    BYTE PTR [edx],al
  41556b:	rol    BYTE PTR [eax+0x0],0x10
  41556f:	add    BYTE PTR [edx+0x20],ah
  415572:	add    BYTE PTR [eax+eax*1],al
  415575:	addr16 push ecx
  415577:	mov    al,ds:0xe2041034
  41557c:	push   es
  41557d:	mov    al,BYTE PTR [ecx]
  41557f:	add    ah,BYTE PTR [eax]
  415581:	add    al,BYTE PTR es:[eax+ecx*1+0x2049120]
  415589:	push   esi
  41558a:	add    BYTE PTR [eax+0x20],al
  41558d:	and    BYTE PTR [eax],al
  41558f:	add    BYTE PTR [ecx+0x44],cl
  415592:	rol    BYTE PTR [edx],1
  415594:	add    al,BYTE PTR [eax+eax*1+0x1106508]
  41559b:	and    al,BYTE PTR [eax]
  41559d:	adc    BYTE PTR [edi+0x57001002],al
  4155a3:	adc    DWORD PTR [eax+eax*1],ecx
  4155a6:	dec    edx
  4155a7:	ret    0x8083
  4155aa:	adc    BYTE PTR [eax+0x55420100],ch
  4155b0:	add    ah,dl
  4155b2:	add    DWORD PTR [ecx],eax
  4155b4:	add    BYTE PTR [edx+0x0],0x0
  4155b8:	and    dl,BYTE PTR [eax]
  4155ba:	and    BYTE PTR [esp+eax*1],0x41
  4155be:	sbb    eax,DWORD PTR [eax]
  4155c0:	or     BYTE PTR [ecx-0x5f],al
  4155c3:	inc    eax
  4155c4:	mov    eax,ds:0x80558922
  4155c9:	popa   
  4155ca:	mov    eax,ds:0x40071000
  4155cf:	add    cl,BYTE PTR [ecx+0x0]
  4155d2:	inc    ecx
  4155d3:	xchg   BYTE PTR [edx+eax*1+0x10],al
  4155d7:	inc    ebx
  4155d8:	add    BYTE PTR [eax],0x0
  4155db:	mov    BYTE PTR [eax],dl
  4155dd:	add    BYTE PTR [ecx],al
  4155df:	adc    DWORD PTR [eax],eax
  4155e1:	or     BYTE PTR [eax],0x41
  4155e4:	adc    al,0x81
  4155e6:	cwde   
  4155e7:	or     al,BYTE PTR [edx+0x4]
  4155ea:	adc    BYTE PTR [eax],al
  4155ec:	popa   
  4155ed:	nop
  4155ee:	add    BYTE PTR [ecx+eax*1+0x2],dh
  4155f2:	dec    esi
  4155f3:	adc    al,0xc
  4155f5:	sbb    BYTE PTR [eax],al
  4155f7:	and    al,0x2
  4155f9:	add    DWORD PTR [edx],0x4004004
  4155ff:	add    BYTE PTR [edx+0x4180226],0x0
  415606:	add    ch,BYTE PTR [eax]
  415608:	pusha  
  415609:	add    BYTE PTR [ecx+0x40],ah
  41560c:	add    BYTE PTR [edi],al
  41560e:	mov    al,BYTE PTR [ebx]
  415610:	add    DWORD PTR [edx],esp
  415612:	inc    eax
  415613:	and    BYTE PTR [ecx],0x18
  415616:	les    ecx,FWORD PTR [ecx]
  415618:	adc    DWORD PTR [eax+ecx*1],eax
  41561b:	add    BYTE PTR [eax],cl
  41561d:	sbb    BYTE PTR [eax],al
  41561f:	inc    esp
  415620:	add    BYTE PTR [eax],0xc1
  415623:	add    BYTE PTR [eax+eax*1+0x0],ah
  415627:	and    BYTE PTR [edx],al
  415629:	inc    eax
  41562a:	add    BYTE PTR [eax+0x0],cl
  41562d:	sub    al,0x0
  41562f:	add    BYTE PTR [eax],al
  415631:	adc    BYTE PTR [eax],dl
  415633:	inc    ebx
  415634:	add    BYTE PTR [eax],al
  415636:	dec    eax
  415637:	mov    al,0x1
  415639:	add    BYTE PTR [eax],0x1a
  41563c:	or     BYTE PTR [esi+0x0],0xb0
  415640:	leave  
  415641:	add    BYTE PTR [esi],ah
  415643:	adc    al,0x0
  415645:	add    BYTE PTR [bx+0x100],dh
  41564a:	add    BYTE PTR [eax],al
  41564c:	inc    ebp
  41564d:	and    DWORD PTR [eax],eax
  41564f:	adc    BYTE PTR [eax],al
  415651:	add    al,0x0
  415653:	inc    edx
  415654:	or     BYTE PTR [eax],al
  415656:	rol    DWORD PTR [eax+0x14008040],0x20
  41565d:	inc    eax
  41565e:	add    eax,DWORD PTR [eax]
  415660:	and    BYTE PTR [ecx],ah
  415662:	add    BYTE PTR [eax+edx*2],dh
  415665:	add    ah,BYTE PTR [edx]
  415667:	add    BYTE PTR [eax],al
  415669:	adc    BYTE PTR [eax],0x40
  41566c:	add    BYTE PTR [edx+0x0],0x12
  415670:	or     al,BYTE PTR [eax]
  415672:	add    eax,0x80001450
  415677:	add    BYTE PTR [eax],al
  415679:	add    BYTE PTR [edx+eiz*1-0x17],al
  41567d:	mov    ds:0x4c90d0a0,al
  415682:	and    al,BYTE PTR [eax+eax*1+0x410c82af]
  415689:	inc    edx
  41568a:	add    BYTE PTR [ecx+0x6d],0x0
  41568e:	add    cl,BYTE PTR [eax]
  415690:	add    al,0x44
  415692:	nop
  415693:	and    esp,eax
  415695:	add    BYTE PTR [eax+eax*1],cl
  415698:	sub    BYTE PTR [edx],cl
  41569a:	add    DWORD PTR [eax+0x10100140],eax
  4156a0:	inc    ecx
  4156a1:	test   eax,0x8c0810e3
  4156a6:	add    BYTE PTR [edx+eiz*2+0x2],al
  4156aa:	add    al,BYTE PTR [eax]
  4156ac:	inc    eax
  4156ad:	inc    esp
  4156ae:	add    BYTE PTR [ebp-0x70],ah
  4156b1:	mov    ds:0x67010200,al
  4156b6:	inc    ecx
  4156b7:	add    DWORD PTR [eax+0x41],eax
  4156ba:	add    BYTE PTR [edx],dl
  4156bc:	and    cl,BYTE PTR [eax]
  4156be:	adc    BYTE PTR [edx+0xc101860],al
  4156c4:	and    bl,BYTE PTR [edx]
  4156c6:	add    BYTE PTR [eax],al
  4156c8:	pop    eax
  4156c9:	add    BYTE PTR [eax+eax*2],al
  4156cc:	add    BYTE PTR [ebx],0x4
  4156cf:	adc    al,BYTE PTR [eax]
  4156d1:	add    BYTE PTR [esi],dh
  4156d3:	adc    al,0x81
  4156d5:	inc    edx
  4156d6:	add    BYTE PTR [eax],ah
  4156d8:	push   es
  4156d9:	add    al,0x28
  4156db:	add    DWORD PTR [eax+eax*1],eax
  4156de:	and    BYTE PTR [edx],dh
  4156e0:	inc    ebx
  4156e1:	bound  ebx,QWORD PTR ds:0x4180000
  4156e7:	add    BYTE PTR [eax],al
  4156e9:	add    BYTE PTR [edx],al
  4156eb:	add    cl,BYTE PTR [eax]
  4156ed:	add    DWORD PTR [eax],eax
  4156ef:	adc    BYTE PTR [ebx+0x4],ah
  4156f2:	sbb    cl,BYTE PTR [eax]
  4156f4:	ror    BYTE PTR [eax],0x1
  4156f7:	add    DWORD PTR [esi+0x5],esp
  4156fa:	add    BYTE PTR [eax],0xa8
  4156fd:	xchg   esp,eax
  4156fe:	add    edx,DWORD PTR [eax]
  415700:	inc    eax
  415701:	and    eax,DWORD PTR [eax+0x4c008de]
  415707:	and    al,BYTE PTR [ecx+0x2]
  41570a:	adc    BYTE PTR [eax-0x7fbffd9f],0x20
  415711:	add    DWORD PTR [eax],edx
  415713:	add    BYTE PTR [esi+eax*4-0x7ecd0000],al
  41571a:	adc    BYTE PTR [eax],al
  41571c:	adc    DWORD PTR [edx],ecx
  41571e:	add    BYTE PTR [edx+0xd],al
  415721:	and    DWORD PTR [eax],eax
  415723:	add    eax,0x48860000
  415728:	add    BYTE PTR [eax+0xc0222],al
  41572e:	loopne 0x415734
  415730:	xchg   ecx,eax
  415731:	add    al,BYTE PTR [eax+0x1408260]
  415737:	dec    ecx
  415738:	add    BYTE PTR [eax],ah
  41573a:	add    al,0x11
  41573c:	test   BYTE PTR ds:0x25018100,dh
  415742:	add    BYTE PTR [eax],al
  415744:	adc    eax,0x48000090
  415749:	add    BYTE PTR [ebx+0x24c29000],0x0
  415750:	and    BYTE PTR [edx+ecx*1],al
  415753:	mov    BYTE PTR [edx],al
  415755:	add    ah,BYTE PTR [esp+eax*2+0x5001000]
  41575c:	or     DWORD PTR [eax-0x6a],eax
  41575f:	add    BYTE PTR [ebp-0x64feafef],dl
  415765:	add    BYTE PTR [eax],dl
  415767:	adc    BYTE PTR [eax+0x18],dl
  41576a:	add    BYTE PTR [eax],al
  41576c:	adc    BYTE PTR [eax+0x59219090],cl
  415772:	add    BYTE PTR [eax],dl
  415774:	add    BYTE PTR [edx+0x15],al
  415777:	sub    BYTE PTR [ebx+0x50000080],ah
  41577d:	and    al,0x0
  41577f:	xchg   edx,eax
  415780:	inc    ebp
  415781:	push   0x1
  415786:	inc    ebp
  415787:	inc    eax
  415788:	or     BYTE PTR [eax],al
  41578a:	rol    BYTE PTR [ecx+0x1],0x0
  41578e:	push   es
  41578f:	add    eax,0x4021c920
  415794:	add    dl,0x86
  415797:	or     al,al
  415799:	add    DWORD PTR [ebp+0x13],esp
  41579c:	add    dl,BYTE PTR [eax]
  41579e:	add    al,BYTE PTR [ecx]
  4157a0:	add    BYTE PTR [eax-0x38],al
  4157a3:	cdq    
  4157a4:	retf   
  4157a5:	fs pop ebp
  4157a7:	and    BYTE PTR [edx],ah
  4157a9:	test   BYTE PTR [eax],cl
  4157ab:	add    BYTE PTR [edx-0x7f],0x10
  4157af:	push   ecx
  4157b0:	sbb    BYTE PTR [eax],al
  4157b2:	add    BYTE PTR [edx],dh
  4157b4:	mov    BYTE PTR [ecx],al
  4157b6:	inc    ecx
  4157b7:	adc    BYTE PTR [ebx],0x0
  4157ba:	ror    DWORD PTR [eax+0x10],0x89
  4157be:	xor    al,0x80
  4157c0:	sbb    BYTE PTR [ebp+0x14018000],al
  4157c6:	add    al,0x8
  4157c8:	dec    ecx
  4157c9:	add    BYTE PTR [ecx-0x7feffb74],al
  4157cf:	adc    BYTE PTR [eax],al
  4157d1:	mov    BYTE PTR [eax],cl
  4157d3:	loop   0x4157dd
  4157d5:	lods   eax,DWORD PTR ds:[esi]
  4157d6:	xchg   BYTE PTR [eax+esi*4],dh
  4157d9:	adc    BYTE PTR [edx],al
  4157db:	mov    al,ds:0xc281002
  4157e0:	add    BYTE PTR [ecx],dh
  4157e2:	add    BYTE PTR [edx-0x7c],al
  4157e5:	adc    al,BYTE PTR [ecx]
  4157e7:	add    al,BYTE PTR [edx]
  4157e9:	xor    DWORD PTR [ecx],eax
  4157eb:	add    BYTE PTR [eax],al
  4157ed:	adc    BYTE PTR [eax],cl
  4157ef:	add    BYTE PTR [eax],al
  4157f1:	add    BYTE PTR [edx],al
  4157f3:	add    DWORD PTR [eax],eax
  4157f5:	add    BYTE PTR [edx],cl
  4157f7:	inc    eax
  4157f8:	add    BYTE PTR [ecx],al
  4157fa:	rol    BYTE PTR [ecx],0x0
  4157fd:	add    BYTE PTR [eax],0x0
  415800:	add    DWORD PTR [eax],ecx
  415802:	and    BYTE PTR [ecx+0x10],al
  415805:	pop    ecx
  415806:	add    BYTE PTR [ebp+0x4],al
  415809:	and    BYTE PTR [eax],al
  41580b:	add    BYTE PTR [esi],dl
  41580d:	ret    
  41580e:	and    BYTE PTR [eax],al
  415810:	inc    ebx
  415811:	add    ah,cl
  415813:	pushf  
  415814:	add    BYTE PTR [eax+0x301a12],al
  41581a:	and    BYTE PTR [eax],dl
  41581c:	and    al,0x11
  41581e:	pop    ecx
  41581f:	and    BYTE PTR [eax],dl
  415821:	nop
  415822:	and    al,BYTE PTR ds:0x51210d08
  415828:	add    DWORD PTR [edx],eax
  41582a:	add    al,0x20
  41582c:	mov    bl,0x32
  41582e:	add    DWORD PTR [eax+0x41000804],ebp
  415834:	add    BYTE PTR [esi+0x124291],dh
  41583a:	or     al,BYTE PTR [eax]
  41583c:	add    BYTE PTR [eax],dl
  41583e:	push   es
  41583f:	add    al,0x5c
  415841:	and    DWORD PTR [edx-0x4e],eax
  415844:	add    BYTE PTR [ecx],bl
  415846:	mov    eax,ds:0x84400412
  41584b:	inc    ecx
  41584c:	inc    ebx
  41584d:	adc    DWORD PTR [eax],eax
  41584f:	inc    ecx
  415850:	xchg   ebx,eax
  415851:	add    BYTE PTR [eax+eax*4+0x29092290],cl
  415858:	inc    eax
  415859:	adc    BYTE PTR [edx+0x43],al
  41585c:	add    DWORD PTR [eax+0x14121],ecx
  415862:	ret    
  415863:	adc    BYTE PTR [edx],al
  415865:	add    DWORD PTR [eax+0x22001982],edx
  41586b:	push   es
  41586c:	add    BYTE PTR [esi+0x10010202],al
  415872:	cmp    eax,DWORD PTR [eax+0x16100]
  415878:	dec    eax
  415879:	inc    ecx
  41587a:	add    BYTE PTR [eax],al
  41587c:	or     BYTE PTR [eax],dh
  41587e:	and    ah,dl
  415880:	dec    eax
  415881:	xor    dl,0x4
  415884:	or     ah,al
  415886:	retf   
  415887:	enter  0x4420,0x62
  41588b:	sbb    al,0x8
  41588d:	add    BYTE PTR [eax-0x7f7b5efe],ah
  415893:	or     al,BYTE PTR [edx]
  415895:	add    BYTE PTR [eax],0x1
  415898:	add    BYTE PTR ds:0x402011,al
  41589e:	add    BYTE PTR [eax],al
  4158a0:	pushf  
  4158a1:	inc    eax
  4158a2:	adc    dl,BYTE PTR fs:[eax+eax*1]
  4158a6:	push   0xd5412800
  4158ab:	add    BYTE PTR [eax],al
  4158ad:	add    al,BYTE PTR [ecx]
  4158af:	add    al,0x1
  4158b1:	add    BYTE PTR [eax],al
  4158b3:	add    BYTE PTR [eax],al
  4158b5:	add    al,0x0
  4158b7:	inc    eax
  4158b8:	or     BYTE PTR [eax],0x24
  4158bb:	inc    ecx
  4158bc:	add    DWORD PTR [eax],edx
  4158be:	or     al,0x48
  4158c0:	cmp    al,0x90
  4158c2:	xchg   edx,eax
  4158c3:	adc    BYTE PTR [eax+0x2022210],dl
  4158c9:	mov    al,ds:0x432400
  4158ce:	add    al,0x80
  4158d0:	adc    BYTE PTR [eax+0x0],al
  4158d3:	es dec esp
  4158d5:	or     DWORD PTR [edx],edx
  4158d7:	add    eax,0x40263802
  4158dc:	mov    eax,0x804010
  4158e1:	mov    al,ds:0x22000100
  4158e6:	sbb    eax,0x8084088
  4158eb:	add    BYTE PTR [ecx],al
  4158ed:	xor    BYTE PTR [ecx-0x80],al
  4158f0:	adc    BYTE PTR [eax+0x0],al
  4158f3:	mov    al,ds:0x8006052
  4158f8:	adc    BYTE PTR [edx],ah
  4158fa:	adc    BYTE PTR [ecx],0xc1
  4158fd:	add    BYTE PTR [eax],al
  4158ff:	ret    0x841
  415902:	add    eax,0x30c20022
  415907:	add    BYTE PTR [edx],al
  415909:	push   eax
  41590a:	rol    BYTE PTR [eax],1
  41590c:	popa   
  41590d:	mov    BYTE PTR [eax],dl
  41590f:	add    BYTE PTR [edx],al
  415911:	rol    eax,1
  415913:	or     BYTE PTR [eax+0x4090cb98],al
  415919:	add    BYTE PTR [edx+0x4108006f],0x0
  415920:	add    BYTE PTR [edx+0x4],dl
  415923:	add    al,al
  415925:	and    BYTE PTR [edx+0x62],dl
  415928:	add    DWORD PTR [eax+0x24e01218],eax
  41592e:	or     al,0xc3
  415930:	or     al,0x14
  415932:	inc    eax
  415933:	and    DWORD PTR [eax+0xc20400],ecx
  415939:	xchg   ecx,eax
  41593a:	and    DWORD PTR [eax+0x2],ecx
  41593d:	xor    BYTE PTR [eax+0x1048618a],ch
  415943:	pop    ebp
  415944:	mov    al,ds:0x200a00
  415949:	add    BYTE PTR [ecx],al
  41594b:	add    al,BYTE PTR [eax+0x8]
  41594e:	add    BYTE PTR [esi],al
  415950:	sub    BYTE PTR [ecx],0x0
  415953:	push   ss
  415954:	push   eax
  415955:	mov    ds:0x802834d5,al
  41595a:	xchg   ecx,eax
  41595b:	xchg   BYTE PTR [ebx+0x1],al
  41595e:	add    DWORD PTR [edx],edx
  415960:	inc    ecx
  415961:	adc    BYTE PTR [eax+0x23802000],al
  415967:	nop
  415968:	inc    edx
  415969:	add    al,0x12
  41596b:	and    dh,al
  41596d:	or     eax,0x44450
  415972:	test   BYTE PTR [edx],cl
  415974:	adc    DWORD PTR [eax],eax
  415976:	add    BYTE PTR [ecx+0x10],0x10
  41597a:	dec    ecx
  41597b:	xchg   BYTE PTR [eax],ah
  41597d:	add    BYTE PTR [eax+0x52090010],al
  415983:	add    BYTE PTR [eax],al
  415985:	add    BYTE PTR [eax],al
  415987:	add    al,BYTE PTR [eax+0x22]
  41598a:	add    al,0x4
  41598c:	rol    BYTE PTR [eax+0x12410080],0x1
  415993:	dec    eax
  415994:	adc    al,BYTE PTR [eax]
  415996:	call   0x4a35:0x9114
  41599d:	add    BYTE PTR [edx+ebx*1],ch
  4159a0:	add    ah,BYTE PTR [ecx+0x1d510066]
  4159a6:	add    BYTE PTR [eax],al
  4159a8:	and    BYTE PTR [eax],0x0
  4159ab:	adc    DWORD PTR [ebx+0x801800],ecx
  4159b1:	or     al,BYTE PTR [eax]
  4159b3:	add    BYTE PTR [eax+0x0],al
  4159b6:	ret    0xa20
  4159b9:	xor    al,BYTE PTR [eax]
  4159bb:	add    al,BYTE PTR [eax]
  4159bd:	add    eax,0x4a24000
  4159c2:	and    BYTE PTR [edx+0x1],al
  4159c5:	pop    es
  4159c6:	mov    ds:0x600410,al
  4159cb:	add    ah,BYTE PTR [eax]
  4159cd:	mov    BYTE PTR [edx+0x61a400a0],al
  4159d3:	xchg   esi,eax
  4159d4:	cwde   
  4159d5:	test   BYTE PTR [eax],al
  4159d7:	mov    ss,WORD PTR [eax+eax*1]
  4159da:	or     al,0x8
  4159dc:	sbb    BYTE PTR [eax],al
  4159de:	and    al,0x8a
  4159e0:	or     DWORD PTR [ecx],edx
  4159e2:	inc    eax
  4159e3:	add    al,BYTE PTR [eax+eax*1]
  4159e6:	retf   
  4159e7:	xor    al,0x1
  4159e9:	daa    
  4159ea:	adc    BYTE PTR [edx+0x0],0x3
  4159ee:	mov    ds:0x82800142,al
  4159f3:	push   esi
  4159f4:	push   eax
  4159f5:	adc    eax,DWORD PTR [eax-0x6beaff6f]
  4159fb:	add    al,0x0
  4159fe:	enter  0x91,0xa4
  415a02:	add    al,0x1
  415a04:	push   ecx
  415a05:	add    BYTE PTR [eax],dl
  415a07:	adc    al,0x4c
  415a09:	add    DWORD PTR [eax],ecx
  415a0b:	js     0x41598f
  415a0d:	bound  eax,QWORD PTR [eax+0x12]
  415a10:	push   es
  415a11:	mov    WORD PTR [esp+eax*4],es
  415a14:	add    DWORD PTR [eax],eax
  415a16:	add    BYTE PTR [ecx+0x0],al
  415a19:	add    ch,BYTE PTR [ecx]
  415a1b:	inc    ebp
  415a1c:	add    BYTE PTR [eax],ah
  415a1e:	add    DWORD PTR [eax],0x30260020
  415a24:	inc    edx
  415a25:	add    BYTE PTR [eax+0x8c22061],al
  415a2b:	add    al,0x0
  415a2d:	xchg   BYTE PTR [ecx],al
  415a2f:	add    bl,BYTE PTR [eax+0x41c01182]
  415a35:	add    al,0xc
  415a37:	xchg   BYTE PTR [ebx],cl
  415a39:	pusha  
  415a3a:	sub    al,BYTE PTR [eax-0x78]
  415a3d:	push   eax
  415a3e:	mov    al,ds:0x40003821
  415a43:	add    BYTE PTR [eax],dl
  415a45:	or     BYTE PTR [eax+edx*1+0xcc02860],cl
  415a4c:	add    BYTE PTR [eax],dl
  415a4e:	add    BYTE PTR [ecx+eax*1],al
  415a51:	inc    eax
  415a52:	xor    al,0x0
  415a54:	push   es
  415a55:	inc    esp
  415a56:	add    al,0x81
  415a58:	xchg   edx,eax
  415a59:	mov    es,WORD PTR [eax]
  415a5b:	add    eax,DWORD PTR [eax+eax*1]
  415a5e:	inc    edx
  415a5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a60:	adc    al,BYTE PTR [eax]
  415a62:	or     BYTE PTR [eax+0x22100000],ch
  415a68:	inc    esp
  415a69:	or     BYTE PTR [eax+0x41600000],cl
  415a6f:	add    BYTE PTR [eax+eiz*1+0xc],al
  415a73:	add    al,BYTE PTR [eax+eax*1]
  415a76:	add    BYTE PTR [edx+eax*1],0xa2
  415a7a:	adc    eax,0xe002a381
  415a7f:	and    cl,al
  415a81:	add    ecx,DWORD PTR [eax]
  415a83:	and    BYTE PTR [ecx+0x4406a0a],0x6
  415a8a:	add    BYTE PTR [edx],ah
  415a8c:	add    DWORD PTR [esi],esi
  415a8e:	or     al,0x4
  415a90:	add    BYTE PTR [ecx+0x190080],al
  415a96:	or     BYTE PTR [eax],al
  415a98:	add    al,0x82
  415a9a:	or     ch,al
  415a9c:	pusha  
  415a9d:	dec    ecx
  415a9e:	add    DWORD PTR [ecx+0x20438008],ecx
  415aa4:	and    al,BYTE PTR [eax]
  415aa6:	add    DWORD PTR [eax],ecx
  415aa8:	add    cl,BYTE PTR [eax]
  415aaa:	add    BYTE PTR [ecx-0x7c],cl
  415aad:	add    BYTE PTR [eax],dl
  415aaf:	rol    BYTE PTR [eax],1
  415ab1:	add    BYTE PTR [esi],ch
  415ab3:	inc    esp
  415ab4:	add    BYTE PTR [eax+0x2140a01],ah
  415aba:	add    al,BYTE PTR [eax-0x3a7f5bc0]
  415ac0:	add    BYTE PTR [eax],dl
  415ac2:	adc    BYTE PTR [eax-0x6df7fbf5],dh
  415ac8:	add    BYTE PTR [ecx-0x70],al
  415acb:	add    BYTE PTR [ecx],al
  415acd:	and    BYTE PTR [eax],al
  415acf:	add    ebp,DWORD PTR [eax]
  415ad1:	inc    eax
  415ad2:	adc    BYTE PTR [eax+eax*1+0x1a284208],ah
  415ad9:	mov    ds:0xc1415c00,eax
  415ade:	add    BYTE PTR [eax],ah
  415ae0:	add    BYTE PTR [ecx],al
  415ae2:	add    BYTE PTR [eax],0x91
  415ae5:	or     BYTE PTR [eax-0x71f7fff0],dl
  415aeb:	adc    BYTE PTR [eax],al
  415aed:	add    al,0x90
  415aef:	push   esp
  415af0:	nop
  415af1:	add    BYTE PTR [eax+0x20920610],dl
  415af7:	mov    BYTE PTR [ebp-0x80],al
  415afa:	add    BYTE PTR [eax+0x2a],0x1
  415afe:	inc    edx
  415aff:	dec    esp
  415b00:	or     al,0x68
  415b02:	add    al,0x2c
  415b04:	add    al,BYTE PTR [eax+0x818100]
  415b0a:	add    al,0x42
  415b0c:	adc    BYTE PTR [edx],0x8
  415b0f:	add    BYTE PTR [eax],bl
  415b11:	add    BYTE PTR [eax],al
  415b13:	or     BYTE PTR [eax+eax*2],dh
  415b16:	add    BYTE PTR [ecx+0x20c22090],dl
  415b1c:	add    BYTE PTR [eax],al
  415b1e:	add    BYTE PTR [eax],dl
  415b20:	add    BYTE PTR [edx+0x1],dh
  415b23:	add    BYTE PTR [edx],dl
  415b25:	add    DWORD PTR [eax+eax*4],eax
  415b28:	inc    eax
  415b29:	add    BYTE PTR [eax+0x240a908],al
  415b2f:	add    BYTE PTR [edx+0xe],dl
  415b32:	push   es
  415b33:	inc    edx
  415b34:	adc    BYTE PTR [ecx],0x20
  415b37:	add    BYTE PTR [eax],al
  415b39:	adc    esp,DWORD PTR [eax]
  415b3b:	in     al,0x7d
  415b3d:	cmp    al,BYTE PTR [ebp+0x20028132]
  415b43:	push   ebp
  415b44:	adc    BYTE PTR [eax],ah
  415b46:	xchg   DWORD PTR [esi+0x42100031],eax
  415b4c:	and    al,al
  415b4e:	add    cl,BYTE PTR [ebx]
  415b50:	inc    eax
  415b51:	or     eax,0x81630000
  415b56:	inc    eax
  415b57:	add    BYTE PTR [eax],al
  415b59:	and    BYTE PTR [ecx+0x24140d],al
  415b5f:	add    BYTE PTR [eax+0x24190005],al
  415b65:	inc    ecx
  415b66:	or     DWORD PTR [eax-0x7d],eax
  415b69:	add    al,0x0
  415b6b:	add    BYTE PTR [eax],0x90
  415b6e:	inc    ecx
  415b6f:	adc    BYTE PTR [edx],al
  415b71:	add    BYTE PTR [eax],ah
  415b73:	add    DWORD PTR [ebx],ebp
  415b75:	add    BYTE PTR [ebx+ebx*2],ch
  415b78:	add    al,al
  415b7a:	adc    BYTE PTR [eax],cl
  415b7c:	and    BYTE PTR [edx],0x0
  415b7f:	and    al,0xc5
  415b81:	inc    esp
  415b82:	add    BYTE PTR [eax],dl
  415b84:	add    BYTE PTR [edx],al
  415b86:	fwait
  415b87:	mov    eax,0x16120100
  415b8c:	retf   0xd10
  415b8f:	add    DWORD PTR [edx+eax*1],esp
  415b92:	add    BYTE PTR [ebp+0x10007280],al
  415b98:	add    BYTE PTR [eax+0x18],ah
  415b9b:	xor    al,BYTE PTR [ecx+eax*4]
  415b9e:	add    BYTE PTR [edx],dl
  415ba0:	push   0x1041000
  415ba5:	add    al,BYTE PTR [edx+0x10922682]
  415bab:	add    BYTE PTR [eax],al
  415bad:	inc    esp
  415bae:	add    eax,DWORD PTR [eax]
  415bb0:	inc    eax
  415bb1:	fsub   DWORD PTR [edx]
  415bb3:	xchg   esp,eax
  415bb4:	or     BYTE PTR [esi],ah
  415bb6:	add    BYTE PTR [ecx],dl
  415bb8:	ret    
  415bb9:	or     DWORD PTR [edx],eax
  415bbb:	nop
  415bbc:	and    cl,al
  415bbe:	push   cs
  415bbf:	inc    eax
  415bc0:	and    BYTE PTR [eax],al
  415bc2:	push   esp
  415bc3:	add    BYTE PTR [edx],0x41
  415bc6:	mov    BYTE PTR [eax],0x43
  415bc9:	sub    DWORD PTR [eax],eax
  415bcb:	inc    edx
  415bcc:	add    ebx,DWORD PTR [ecx+0x0]
  415bcf:	add    BYTE PTR [eax+0x1c811501],0x51
  415bd6:	add    BYTE PTR [eax-0x6b],ah
  415bd9:	mov    fs,WORD PTR [eax]
  415bdb:	rol    DWORD PTR [eax+eax*1],0x8a
  415bdf:	adc    DWORD PTR [eax],ecx
  415be1:	add    al,dl
  415be3:	add    BYTE PTR [eax-0x1cfb5ff6],al
  415be9:	inc    ebp
  415bea:	pop    es
  415beb:	or     DWORD PTR [eax+0x12],edx
  415bee:	or     BYTE PTR [edx],0x0
  415bf1:	or     BYTE PTR [eax+0x10],al
  415bf4:	inc    eax
  415bf5:	sub    BYTE PTR [eax],bh
  415bf7:	add    ah,BYTE PTR [eax+eax*2]
  415bfa:	adc    al,BYTE PTR [ecx]
  415bfc:	add    dl,BYTE PTR [ecx-0x3effff76]
  415c02:	adc    DWORD PTR [eax],ebp
  415c04:	dec    eax
  415c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c06:	push   ebp
  415c07:	test   DWORD PTR [edx-0x40],eax
  415c0a:	add    BYTE PTR [eax],0xb7
  415c0d:	add    DWORD PTR [eax],eax
  415c0f:	or     BYTE PTR [ecx+eax*2],ch
  415c12:	inc    eax
  415c13:	or     eax,0xc004060
  415c18:	fs dec eax
  415c1a:	nop
  415c1b:	ret    0x1
  415c1e:	sub    al,0xb
  415c20:	add    BYTE PTR [eax],al
  415c22:	test   eax,0xc180030b
  415c27:	and    BYTE PTR ds:0x418204a,cl
  415c2d:	add    DWORD PTR [eax],0x4920000
  415c33:	adc    ebp,DWORD PTR [eax]
  415c35:	icebp  
  415c36:	xor    BYTE PTR [ecx+0x2],al
  415c39:	add    BYTE PTR [edi+0x8100a9],al
  415c3f:	dec    ebx
  415c40:	arpl   WORD PTR [eax],ax
  415c42:	push   cs
  415c43:	xor    BYTE PTR ds:0xe8010,ch
  415c49:	sbb    al,BYTE PTR [edx]
  415c4b:	add    BYTE PTR [eax+0x1],cl
  415c4e:	or     BYTE PTR [eax-0x70],al
  415c51:	inc    eax
  415c52:	rol    DWORD PTR [eax],1
  415c54:	adc    DWORD PTR [eax+eax*4],edx
  415c57:	add    al,0x0
  415c59:	test   eax,0x4a103810
  415c5e:	add    BYTE PTR [eax-0x3e],dl
  415c61:	adc    al,0x80
  415c63:	inc    eax
  415c64:	mov    ecx,es
  415c66:	add    al,0x0
  415c68:	add    BYTE PTR [esi],cl
  415c6a:	add    BYTE PTR [eax],0x0
  415c6d:	xor    BYTE PTR [edx],al
  415c6f:	and    BYTE PTR [eax-0x78],cl
  415c72:	add    BYTE PTR [esi],cl
  415c74:	adc    eax,0x20082480
  415c79:	add    BYTE PTR [edx],dl
  415c7b:	add    al,0x40
  415c7d:	and    BYTE PTR [edi-0x28],al
  415c80:	or     BYTE PTR [eax+0x22000644],al
  415c86:	add    BYTE PTR [ecx],al
  415c88:	add    BYTE PTR [ebx+0x0],dh
  415c8b:	add    BYTE PTR [eax],al
  415c8d:	sub    al,0x4
  415c8f:	or     al,0x1
  415c91:	xor    al,BYTE PTR [ecx]
  415c93:	lock add BYTE PTR [eax],dl
  415c96:	inc    eax
  415c97:	add    BYTE PTR [eax+0x10],al
  415c9a:	or     DWORD PTR [eax],eax
  415c9c:	and    BYTE PTR [ecx],dl
  415c9e:	sahf   
  415c9f:	add    ah,BYTE PTR [eax]
  415ca1:	inc    ecx
  415ca2:	add    BYTE PTR [eax-0x3e],ah
  415ca5:	jl     0x415ca7
  415ca7:	sub    al,0x20
  415ca9:	dec    ebx
  415caa:	add    al,BYTE PTR [ecx+0x0]
  415cad:	or     BYTE PTR [eax-0x6d],al
  415cb0:	add    BYTE PTR [edx],ah
  415cb2:	inc    ecx
  415cb3:	add    BYTE PTR [eax],cl
  415cb5:	push   es
  415cb6:	inc    ecx
  415cb7:	or     bh,BYTE PTR [eax+0x8623153]
  415cbd:	add    DWORD PTR [eax],esp
  415cbf:	bound  esi,QWORD PTR [edx]
  415cc1:	add    al,bl
  415cc3:	inc    esp
  415cc4:	adc    eax,DWORD PTR [esi]
  415cc6:	add    BYTE PTR [edx+0x40004084],0x89
  415ccd:	xchg   esp,eax
  415cce:	pop    es
  415ccf:	dec    ecx
  415cd0:	adc    BYTE PTR [ecx],al
  415cd2:	xchg   edx,eax
  415cd3:	add    BYTE PTR [eax],cl
  415cd5:	add    eax,0x80629c00
  415cda:	add    BYTE PTR [eax-0x6eb7fffe],al
  415ce0:	and    BYTE PTR [ecx],al
  415ce2:	popa   
  415ce3:	and    BYTE PTR [ecx+eax*4],ah
  415ce6:	adc    BYTE PTR [ecx+ecx*8],cl
  415ce9:	add    DWORD PTR [eax],eax
  415ceb:	dec    eax
  415cec:	adc    BYTE PTR [eax+0x42],0x63
  415cf0:	and    BYTE PTR [eax],al
  415cf2:	dec    ebx
  415cf3:	or     cl,BYTE PTR [eax+0x20821e00]
  415cf9:	inc    eax
  415cfa:	inc    ebx
  415cfb:	add    al,ah
  415cfd:	add    BYTE PTR [edx+0x88c1831],bh
  415d03:	adc    BYTE PTR [eax+0x1],0x21
  415d07:	xor    BYTE PTR [eax+0x22],0x80
  415d0b:	add    BYTE PTR [eax],al
  415d0d:	add    BYTE PTR [edx],0x0
  415d10:	call   0x8008:0x401b104b
  415d17:	adc    BYTE PTR [eax+0x0],dl
  415d1a:	add    dl,BYTE PTR [eax]
  415d1c:	jae    0x415d5e
  415d1e:	add    al,0x15
  415d21:	add    DWORD PTR [edx+0xe8881c4],eax
  415d27:	mov    eax,ds:0x480124b
  415d2c:	add    BYTE PTR [eax],dh
  415d2e:	and    BYTE PTR [edx],al
  415d30:	jno    0x415cba
  415d32:	xchg   edx,eax
  415d33:	add    BYTE PTR [eax+0x10000194],ch
  415d39:	cmp    DWORD PTR [esi+eax*1],0x82104000
  415d40:	and    dl,BYTE PTR [eax+0x6]
  415d43:	add    BYTE PTR [eax],ah
  415d45:	push   es
  415d46:	add    BYTE PTR [eax],al
  415d48:	or     BYTE PTR [ecx],al
  415d4a:	xchg   BYTE PTR [eax],al
  415d4c:	dec    ecx
  415d4d:	add    BYTE PTR [ebx+0x43],al
  415d50:	pop    eax
  415d51:	add    BYTE PTR [eax],al
  415d53:	or     BYTE PTR [eax+0x5a1a8000],0x20
  415d5a:	inc    edx
  415d5b:	and    BYTE PTR [edx-0x1f],al
  415d5e:	and    DWORD PTR [eax+0xc010010],eax
  415d64:	adc    BYTE PTR [ecx-0x40],al
  415d67:	add    al,0x40
  415d69:	add    al,0x60
  415d6b:	sub    BYTE PTR [eax+ecx*2+0x540001],al
  415d72:	push   ebx
  415d73:	add    cl,BYTE PTR [eax+edx*2+0x40]
  415d77:	and    BYTE PTR [eax+0x6],cl
  415d7a:	add    DWORD PTR [eax],esi
  415d7c:	add    DWORD PTR [ecx],eax
  415d7e:	inc    ecx
  415d7f:	add    BYTE PTR [ecx],al
  415d81:	dec    eax
  415d82:	add    BYTE PTR [eax],al
  415d84:	or     BYTE PTR [ebx+0xa844e80],0x0
  415d8b:	inc    esp
  415d8c:	add    al,BYTE PTR [edi+0x0]
  415d8f:	add    BYTE PTR [eax+eax*1],cl
  415d92:	lds    edx,FWORD PTR fs:[eax+edx*1]
  415d96:	and    BYTE PTR [ebx],ah
  415d98:	or     BYTE PTR [eax+0x2],al
  415d9b:	add    al,0xd6
  415d9d:	or     DWORD PTR [ebx],ebp
  415d9f:	add    BYTE PTR [eax+0x2],ah
  415da2:	sub    BYTE PTR [ecx+0x12],cl
  415da5:	add    DWORD PTR [edx],eax
  415da7:	add    al,0x12
  415da9:	inc    ecx
  415daa:	sub    dl,BYTE PTR [ecx]
  415dac:	adc    eax,0xa000
  415db1:	add    BYTE PTR [edx+eax*1+0x0],ah
  415db5:	sub    DWORD PTR [eax+0x400],eax
  415dbb:	adc    al,0x0
  415dbd:	add    BYTE PTR [esp+eax*1],dl
  415dc0:	aam    0x0
  415dc2:	adc    al,0x10
  415dc4:	adc    BYTE PTR [eax+0x60084501],al
  415dca:	adc    al,0x1
  415dcc:	or     al,0xd0
  415dce:	or     DWORD PTR [ecx],eax
  415dd0:	dec    ebp
  415dd1:	or     BYTE PTR [eax],ch
  415dd3:	add    al,0x40
  415dd5:	pop    ebp
  415dd6:	pop    ecx
  415dd7:	adc    al,dl
  415dd9:	and    eax,0x60caa8
  415dde:	sbb    BYTE PTR [eax],al
  415de0:	inc    ecx
  415de1:	inc    ecx
  415de2:	and    BYTE PTR [ebp+0x48],ch
  415de5:	inc    esp
  415de6:	sub    BYTE PTR [eax],al
  415de8:	and    al,BYTE PTR [eax+0x1401000]
  415dee:	add    al,BYTE PTR [eax]
  415df0:	add    BYTE PTR [eax],dl
  415df2:	add    al,0x0
  415df4:	sub    BYTE PTR [eax],al
  415df6:	add    BYTE PTR [eax],al
  415df8:	inc    edx
  415df9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dfa:	and    BYTE PTR [eax],0x28
  415dfd:	inc    ecx
  415dfe:	add    BYTE PTR [eax+ecx*1+0x8],al
  415e02:	inc    edx
  415e03:	xor    esp,DWORD PTR [ebp+0x5000430c]
  415e09:	test   BYTE PTR [ebx],0x0
  415e0c:	add    BYTE PTR [eax],0x0
  415e0f:	mov    BYTE PTR [edx-0x5c],bh
  415e12:	adc    BYTE PTR [esi],al
  415e14:	and    dh,BYTE PTR [eax]
  415e16:	add    BYTE PTR [eax],al
  415e18:	mov    eax,ds:0xc8980951
  415e1d:	imul   eax,DWORD PTR [eax+edx*1],0xc20090
  415e24:	inc    ecx
  415e25:	add    BYTE PTR [eax],al
  415e27:	add    BYTE PTR [esi+0x8080e],dl
  415e2d:	jno    0x415dc1
  415e2f:	or     BYTE PTR [eax],0x0
  415e32:	mov    WORD PTR [edx+0x61012047],?
  415e38:	sbb    BYTE PTR [edx-0x77fff800],0x91
  415e3f:	add    esp,DWORD PTR [ecx]
  415e41:	or     al,0x2
  415e43:	add    al,BYTE PTR [ecx+eax*4]
  415e46:	mov    al,ds:0x41b40180
  415e4b:	or     BYTE PTR [edx],cl
  415e4d:	sbb    BYTE PTR [eax],al
  415e4f:	xor    BYTE PTR [edx+0x0],0x2
  415e53:	xchg   esp,eax
  415e54:	add    BYTE PTR [eax],al
  415e56:	add    BYTE PTR [eax],al
  415e58:	aaa    
  415e59:	loopne 0x415e76
  415e5b:	js     0x415de0
  415e5d:	in     eax,dx
  415e5e:	lods   al,BYTE PTR ds:[esi]
  415e5f:	dec    eax
  415e60:	and    dh,ah
  415e62:	add    bl,BYTE PTR ds:0x229c129f
  415e68:	xor    eax,0x5dd25672
  415e6d:	add    al,0xec
  415e6f:	inc    ecx
  415e70:	mov    eax,ds:0x92f2f620
  415e75:	es lock inc edx
  415e78:	mov    ds:0xce41e63c,eax
  415e7d:	dec    ebx
  415e7e:	dec    ebx
  415e7f:	push   edi
  415e80:	add    al,0x5a
  415e82:	dec    ebx
  415e83:	icebp  
  415e84:	retf   0x6850
  415e87:	shr    edi,cl
  415e89:	pop    ebp
  415e8a:	dec    ebx
  415e8b:	setbe  BYTE PTR [ebp-0x71]
  415e8f:	rcr    BYTE PTR [ebp+0x59],cl
  415e92:	dec    ebx
  415e93:	sub    DWORD PTR [eax-0x36c80eb5],esi
  415e99:	mov    ah,BYTE PTR ds:0xf725b1ec
  415e9f:	ror    bh,cl
  415ea1:	dec    ebp
  415ea2:	out    dx,eax
  415ea3:	cs leave 
  415ea5:	addr16 out dx,eax
  415ea7:	cs leave 
  415ea9:	pop    ecx
  415eaa:	clc    
  415eab:	dec    ecx
  415eac:	dec    ecx
  415ead:	es es xchg edx,eax
  415eb0:	jmp    0x2e45:0xa849532c
  415eb7:	mov    ah,BYTE PTR [eax+0xfb8de43]
  415ebd:	dec    ebp
  415ebe:	pusha  
  415ebf:	add    ch,dl
  415ec1:	xchg   BYTE PTR ds:0x24962688,bh
  415ec7:	rcl    BYTE PTR [ebx+0x35a3530a],1
  415ecd:	dec    ebx
  415ece:	dec    eax
  415ecf:	pop    es
  415ed0:	jge    0x415eac
  415ed2:	mov    ds:0xdf833faf,al
  415ed7:	shl    DWORD PTR [ebx],0xa2
  415eda:	pop    ecx
  415edb:	mov    ds:0xde2f1dd4,eax
  415ee0:	mov    esp,0x5dca9480
  415ee5:	sub    al,0xde
  415ee7:	scas   al,BYTE PTR es:[edi]
  415ee8:	fcomp  QWORD PTR [ebp-0x48c1429e]
  415eee:	jmp    0x3eb2:0x60b1d095
  415ef5:	inc    esi
  415ef6:	dec    ebx
  415ef7:	rcr    BYTE PTR [ebp-0x26],cl
  415efa:	out    0xca,eax
  415efc:	pop    ebp
  415efd:	inc    esi
  415efe:	iret   
  415eff:	jne    0x415f5e
  415f01:	pop    ecx
  415f02:	dec    ebx
  415f03:	dec    ecx
  415f04:	mov    al,ds:0x5d7fd041
  415f09:	mov    dh,0x61
  415f0b:	mov    dl,0xe4
  415f0d:	pop    ecx
  415f0e:	push   esp
  415f0f:	rcr    BYTE PTR [ebp-0x1b],cl
  415f12:	adc    esp,DWORD PTR es:[ebx-0x59e7d8a1]
  415f19:	pop    ebx
  415f1a:	aaa    
  415f1b:	mov    dl,0xb
  415f1d:	inc    eax
  415f1e:	mov    eax,DWORD PTR [esi+0x54]
  415f21:	add    BYTE PTR [edx+0x56],dl
  415f24:	rcr    DWORD PTR [ecx+0x4b],cl
  415f27:	ror    BYTE PTR [edx-0x41],cl
  415f2a:	xlat   BYTE PTR ds:[ebx]
  415f2b:	xchg   DWORD PTR [ebp-0x4a],ebx
  415f2e:	popa   
  415f2f:	mov    dl,0x8a
  415f31:	mov    bh,0xd5
  415f33:	mov    ebp,0x28e64f5c
  415f38:	pop    ebp
  415f39:	das    
  415f3a:	jae    0x415f6a
  415f3c:	ds mov bh,0x61
  415f3f:	dec    eax
  415f40:	shl    BYTE PTR [ebp+0x3a3eb260],1
  415f46:	fsubrp st(7),st
  415f48:	ins    DWORD PTR es:[edi],dx
  415f49:	pop    ecx
  415f4a:	dec    ebx
  415f4b:	shr    dl,cl
  415f4d:	sub    edx,DWORD PTR [edi+0x49]
  415f50:	add    DWORD PTR [ebp-0x22],0xffffff98
  415f54:	dec    edx
  415f55:	pop    esp
  415f56:	fsubrp st(0),st
  415f58:	jp     0x415f04
  415f5a:	fimul  WORD PTR [edx+ebp*8]
  415f5d:	dec    ebx
  415f5e:	sbb    ecx,DWORD PTR [edi-0x8]
  415f61:	pop    ecx
  415f62:	bound  esi,QWORD PTR [edx-0x2cb50ec2]
  415f68:	pop    ebp
  415f69:	pop    ecx
  415f6a:	pop    esi
  415f6b:	les    esp,FWORD PTR [ecx+0x796fe8a1]
  415f71:	sbb    ch,ah
  415f73:	aam    0x79
  415f75:	adc    ebx,edx
  415f77:	ror    BYTE PTR [ecx+0x1dc8bcb9],1
  415f7d:	dec    edx
  415f7e:	dec    eax
  415f7f:	or     esp,DWORD PTR [ecx-0x17568253]
  415f85:	or     al,0x4b
  415f87:	mov    ebp,0xbc3db73e
  415f8c:	shl    BYTE PTR [esi+0x2010444b],cl
  415f92:	dec    ebx
  415f93:	and    al,0x35
  415f95:	imul   esp,DWORD PTR [edx-0x4e],0xbec8733e
  415f9c:	aas    
  415f9d:	mov    bh,0x61
  415f9f:	inc    esp
  415fa0:	loopne 0x415f64
  415fa2:	adc    al,0xda
  415fa4:	aam    0xdc
  415fa6:	bound  edi,QWORD PTR [ebp+0x49ebb73e]
  415fac:	shl    BYTE PTR [ecx-0x7ec14da0],1
  415fb2:	xchg   esp,eax
  415fb3:	(bad)  
  415fb4:	pop    ebp
  415fb5:	sub    al,0xde
  415fb7:	scas   al,BYTE PTR es:[edi]
  415fb8:	bound  ebx,QWORD PTR [ecx+0x4190fbea]
  415fbe:	fisttp WORD PTR [eax]
  415fc0:	jmp    0xde75:0x9ad15314
  415fc7:	sbb    DWORD PTR [ebp-0x1535ffa6],esp
  415fcd:	dec    edx
  415fce:	sub    edx,ecx
  415fd0:	mov    al,ds:0x7aa02641
  415fd5:	sub    al,BYTE PTR [ebx+0x41]
  415fd8:	ins    BYTE PTR es:[edi],dx
  415fd9:	in     al,0x55
  415fdb:	pop    ss
  415fdc:	push   ebp
  415fdd:	and    ecx,DWORD PTR [ebx+0x22]
  415fe0:	xor    eax,0x3eb2609d
  415fe5:	jno    0x415fef
  415fe7:	into   
  415fe8:	mov    eax,ds:0x36a9155a
  415fed:	test   eax,0x7d82d674
  415ff2:	push   esi
  415ff3:	daa    
  415ff4:	push   ebp
  415ff5:	inc    esi
  415ff6:	call   0x92d1:0x54a61cd0
  415ffd:	push   ebp
  415ffe:	push   esi
  415fff:	pop    ss
  416000:	push   ebp
  416001:	ret    0xd14a
  416004:	nop
  416005:	inc    ecx
  416006:	fcom   QWORD PTR [esi]
  416008:	jno    0x41605f
  41600a:	hlt    
  41600b:	mov    edx,DWORD PTR [ebx]
  41600d:	dec    esi
  41600e:	dec    ebx
  41600f:	daa    
  416010:	jmp    0xdfb6:0x694461a5
  416017:	retf   0xde35
  41601a:	popa   
  41601b:	mov    dl,0x3e
  41601d:	or     ecx,0xede71d6
  416023:	not    BYTE PTR [ebp-0x65]
  416026:	dec    esi
  416027:	rol    BYTE PTR [eax+0x115676c2],cl
  41602d:	mov    ds:0x595daaea,al
  416032:	dec    ebx
  416033:	rcr    ah,cl
  416035:	gs das 
  416037:	pusha  
  416038:	inc    edx
  416039:	sbb    DWORD PTR [ebx+0x19],ecx
  41603c:	call   0x9e21c11b
  416041:	pop    ecx
  416042:	sti    
  416043:	stos   BYTE PTR es:[edi],al
  416044:	fdiv   DWORD PTR [edi+0x1cd4b261]
  41604a:	sub    eax,DWORD PTR ds:0xaf36
  41604f:	add    eax,0xab674d3e
  416054:	cwde   
  416055:	mov    dh,0x61
  416057:	mov    dl,0xd4
  416059:	sbb    al,0x63
  41605b:	sub    ebp,DWORD PTR [ebx+0x3ec5b9e8]
  416061:	dec    ebp
  416062:	stos   DWORD PTR es:[di],eax
  416064:	test   al,0xb6
  416066:	popa   
  416067:	mov    dl,0xd4
  416069:	sbb    al,0x5f
  41606b:	dec    esi
  41606c:	nop
  41606d:	mov    ch,0x55
  41606f:	adc    bh,BYTE PTR [ecx+0x46]
  416072:	call   0x45d0:0xec44122
  416079:	ret    0xcefa
  41607c:	push   edx
  41607d:	sub    al,0x67
  41607f:	dec    eax
  416080:	or     cl,0x55
  416083:	and    cl,BYTE PTR [ebp-0x40]
  416086:	jmp    FWORD PTR [esi+0x4e7734ea]
  41608c:	mov    al,ds:0xa1c52dc9
  416091:	cmp    al,0xb7
  416093:	(bad)  
  416094:	xor    eax,0x574e5a4d
  416099:	les    ecx,FWORD PTR [esi]
  41609b:	add    dl,BYTE PTR [ecx+0x72]
  41609e:	or     BYTE PTR [edx-0xd5c5a60],bh
  4160a4:	pop    ebp
  4160a5:	pop    ecx
  4160a6:	dec    ebx
  4160a7:	dec    edi
  4160a8:	xchg   DWORD PTR [esp+ebx*1-0x28c23cc],esi
  4160af:	retf   
  4160b0:	mov    eax,ds:0x4ac5755d
  4160b5:	sahf   
  4160b6:	sbb    al,0x52
  4160b8:	jnp    0x41605b
  4160ba:	(bad)  
  4160bc:	jmp    0x4868:0xa94f5403
  4160c3:	stc    
  4160c4:	test   al,0xc9
  4160c6:	in     al,0xce
  4160c8:	jp     0x4160ce
  4160ca:	ja     0x416112
  4160cc:	push   esi
  4160cd:	jb     0x4160df
  4160cf:	(bad)  
  4160d0:	mov    eax,ds:0xdc797e5b
  4160d5:	jae    0x416092
  4160d7:	(bad)  
  4160d8:	int    0xe9
  4160da:	fsubrp st(4),st
  4160dc:	jmp    0x5ab6:0x2dc2285b
  4160e3:	cld    
  4160e4:	lea    ebp,[ecx]
  4160e6:	sti    
  4160e7:	and    ah,BYTE PTR [eax+0x3f38cb5f]
  4160ed:	mov    ds:0x9a4ad7de,eax
  4160f2:	aad    0x90
  4160f4:	push   ecx
  4160f5:	mov    dh,0x84
  4160f7:	xor    edx,DWORD PTR [eax+ebx*4]
  4160fa:	dec    esi
  4160fb:	rol    BYTE PTR [eax-0x15cc893e],cl
  416101:	dec    esp
  416102:	push   edi
  416103:	dec    ecx
  416104:	mov    eax,0xdd816741
  416109:	mov    cl,BYTE PTR [esi+0x735be276]
  41610f:	sub    al,0x5d
  416111:	pop    ecx
  416112:	dec    ebx
  416113:	inc    ecx
  416114:	daa    
  416115:	mov    ebx,DWORD PTR [edx+ebp*4-0x2db4a64f]
  41611c:	mov    ds:0x35922655,al
  416121:	adc    ecx,DWORD PTR [ebx-0x2e]
  416124:	pop    ebp
  416125:	dec    edx
  416126:	adc    DWORD PTR ss:[ebx+0x18],0x735e29b
  41612e:	dec    ebx
  41612f:	rcr    BYTE PTR [ebp+0x6b],cl
  416132:	mov    eax,DWORD PTR [ecx+0x26]
  416135:	dec    ebp
  416136:	and    ch,BYTE PTR [eax+0x4a]
  416139:	stos   BYTE PTR es:[edi],al
  41613a:	jb     0x416148
  41613c:	pop    ebp
  41613d:	pop    ecx
  41613e:	dec    ebx
  41613f:	jmp    0xaa7cae6e
  416144:	xchg   ebx,eax
  416145:	pop    ecx
  416146:	dec    ebx
  416147:	ror    BYTE PTR [edx+0x6e],cl
  41614a:	mov    bh,0xa3
  41614c:	xor    eax,0x14e1104a
  416151:	mov    ds:0x98956346,eax
  416156:	push   0xffffffcb
  416158:	or     DWORD PTR [esi+0x595dd236],ebp
  41615e:	and    dl,dl
  416160:	mov    eax,0x6b414b59
  416165:	fldenv [esi-0x2c]
  416168:	mov    ds:0xbebad65f,al
  41616d:	dec    esi
  41616e:	push   ebp
  41616f:	adc    ebx,DWORD PTR [esp+ebp*8+0x58e297dd]
  416176:	stc    
  416177:	dec    ecx
  416178:	arpl   WORD PTR es:[ebx-0x3a],bx
  41617c:	icebp  
  41617d:	pop    ss
  41617e:	jle    0x4161cd
  416180:	push   ebx
  416181:	stos   DWORD PTR es:[edi],eax
  416182:	(bad)  
  416184:	jmp    0x4161f5
  416186:	or     eax,esp
  416188:	add    ebx,DWORD PTR [ebx-0x5e6374db]
  41618e:	jo     0x416142
  416190:	ds mov bh,0x45
  416193:	mov    esi,DWORD PTR ds:0x3eb261bf
  416199:	dec    eax
  41619a:	gs xchg esi,eax
  41619c:	mov    dh,BYTE PTR ds:0x35d4ea2f
  4161a2:	das    
  4161a3:	fidivr WORD PTR [eax+eax*4+0x2c5dca94]
  4161aa:	fisubr WORD PTR [esi+0x335a9dd2]
  4161b0:	jmp    0x61c9:0x5df7531c
  4161b7:	mov    dl,0xb7
  4161b9:	fsub   DWORD PTR [edx]
  4161bb:	setnp  BYTE PTR [esi+eax*2+0x49]
  4161c0:	lea    esi,[ebp-0x2c]
  4161c3:	mov    eax,0xd24b695d
  4161c8:	mov    ds:0x7953e941,al
  4161cd:	pop    ebx
  4161ce:	sti    
  4161cf:	pop    ss
  4161d0:	mov    eax,ds:0x4dd2305e
  4161d5:	pop    ecx
  4161d6:	dec    ebx
  4161d7:	test   eax,0xca0fc11e
  4161dc:	xor    eax,0x5dd24b46
  4161e1:	fdiv   DWORD PTR [esi]
  4161e3:	idiv   BYTE PTR [esi+0x6c]
  4161e6:	or     edx,edx
  4161e8:	call   0x4b19:0x4cc3d5c4
  4161ef:	and    dh,BYTE PTR ds:0x3eb266b6
  4161f5:	ror    DWORD PTR [edi],0xc2
  4161f8:	in     al,0x61
  4161fa:	dec    ecx
  4161fb:	rcr    BYTE PTR [ebp+0x5a],cl
  4161fe:	ficomp WORD PTR [edi+0x4b4b194c]
  416204:	test   al,0xb1
  416206:	cld    
  416207:	adc    dh,BYTE PTR [ebp+0x5dd21b59]
  41620d:	sub    ch,bh
  41620f:	shl    BYTE PTR [ebp+0x548c5003],cl
  416215:	mov    dh,0xdf
  416217:	ret    0xc835
  41621a:	addr16 mov dl,0x3e
  41621d:	ror    DWORD PTR [edi],0xbe
  416220:	call   0x9e24ed2f
  416225:	pop    ecx
  416226:	fidivr WORD PTR [edi]
  416228:	cmp    ebx,eax
  41622a:	pop    ss
  41622b:	mov    edx,0x9c3d9652
  416230:	and    bh,dl
  416232:	xlat   BYTE PTR ds:[ebx]
  416233:	push   ecx
  416234:	lds    ebp,FWORD PTR [ebx+ecx*1-0x2e]
  416238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41623a:	xlat   BYTE PTR ds:[ebx]
  41623b:	xor    DWORD PTR ds:0x3ed20b6f,0x9de3800b
  416245:	pop    ecx
  416246:	stc    
  416247:	stos   BYTE PTR es:[edi],al
  416248:	lahf   
  416249:	mov    ch,0x61
  41624b:	mov    dl,0x7a
  41624d:	fisubr DWORD PTR [ebx-0x20]
  416250:	popf   
  416251:	pop    ecx
  416252:	push   edx
  416253:	push   edi
  416254:	jb     0x4162b1
  416256:	dec    ebx
  416257:	sar    BYTE PTR [esi],cl
  416259:	or     ebp,DWORD PTR [eax-0x20]
  41625c:	popf   
  41625d:	pop    ecx
  41625e:	std    
  41625f:	adc    dh,BYTE PTR [ebp-0x41812078]
  416265:	mov    dh,0xdf
  416267:	ret    0xf835
  41626a:	addr16 mov dl,0x3e
  41626d:	ror    DWORD PTR [edi],0xc6
  416270:	push   0xffffff99
  416272:	push   ecx
  416273:	push   esi
  416274:	push   edx
  416275:	pop    ebx
  416276:	dec    ebx
  416277:	shr    dl,cl
  416279:	mov    cl,0xf8
  41627b:	and    eax,0xb2613335
  416280:	ds jae 0x416259
  416283:	mov    bh,0x4c
  416285:	sbb    DWORD PTR [ebx-0x33],ecx
  416288:	shl    BYTE PTR [edi+0x295dd24b],1
  41628e:	cli    
  41628f:	stos   BYTE PTR es:[edi],al
  416290:	inc    edi
  416291:	mov    ch,0x61
  416293:	mov    dl,0x7a
  416295:	fidiv  DWORD PTR [ebx-0x20]
  416298:	popf   
  416299:	pop    ecx
  41629a:	push   edx
  41629b:	push   edi
  41629c:	sbb    bl,BYTE PTR [ecx+0x4b]
  41629f:	shr    dl,cl
  4162a1:	dec    esp
  4162a2:	push   ebx
  4162a3:	dec    ecx
  4162a4:	mov    eax,0x5dfea3cd
  4162a9:	pop    ecx
  4162aa:	dec    ebx
  4162ab:	sti    
  4162ac:	imul   esi,DWORD PTR [eax-0x1b],0xddfa22d0
  4162b3:	inc    edi
  4162b4:	push   ebp
  4162b5:	ret    0xc6e7
  4162b8:	push   edx
  4162b9:	ss daa 
  4162bb:	shl    DWORD PTR [edi-0x68b6168b],1
  4162c1:	outs   dx,DWORD PTR ds:[esi]
  4162c2:	jmp    0xdeb0f912
  4162c7:	mov    ebx,db3
  4162ca:	sbb    al,0xfe
  4162cc:	retf   
  4162cd:	pop    ecx
  4162ce:	jmp    FWORD PTR [eax]
  4162d0:	popf   
  4162d1:	mov    dh,0xdb
  4162d3:	and    bh,BYTE PTR [esi]
  4162d5:	dec    ebp
  4162d6:	push   ebx
  4162d7:	sub    cl,BYTE PTR [esi+0x3ee24926]
  4162dd:	dec    ebp
  4162de:	pop    ebx
  4162df:	stos   DWORD PTR es:[edi],eax
  4162e0:	mov    dh,BYTE PTR [ecx+eiz*2-0x183d7a4e]
  4162e7:	retf   0x4cea
  4162ea:	pop    edi
  4162eb:	dec    esi
  4162ec:	das    
  4162ed:	pop    ebx
  4162ee:	adc    esi,edi
  4162f0:	jmp    0x7c2:0xf1c1ff00
  4162f7:	retf   0x1252
  4162fa:	daa    
  4162fb:	int    0xe6
  4162fd:	add    cl,BYTE PTR [ecx-0x33]
  416300:	out    0x4a,al
  416302:	aas    
  416303:	dec    edi
  416304:	mov    eax,ds:0x8c244357
  416309:	ret    0xcae7
  41630c:	push   edx
  41630d:	aaa    
  41630e:	push   edi
  41630f:	dec    ecx
  416310:	scas   eax,DWORD PTR es:[edi]
  416311:	inc    ecx
  416312:	ficom  WORD PTR [ecx]
  416314:	add    DWORD PTR gs:[esi-0x76],edx
  416318:	es xchg esi,eax
  41631a:	xor    eax,0x54a11c8a
  41631f:	add    DWORD PTR ds:0xaf49bdcb,ebx
  416325:	imul   ebx,esi,0xd8c2693c
  41632b:	out    0x52,al
  41632d:	dec    esp
  41632e:	pop    edi
  41632f:	(bad)  
  416330:	mov    eax,0x84776641
  416335:	pop    ss
  416336:	(bad)  
  416337:	xchg   esp,eax
  416338:	jne    0x4162f5
  41633a:	xchg   esi,eax
  41633b:	mov    ebp,0x5ff2cda0
  416340:	pop    edi
  416341:	and    dh,dh
  416343:	mov    ebp,0x9772c9a0
  416348:	cmp    DWORD PTR [edi-0x2215b19f],esi
  41634e:	dec    edx
  41634f:	rcr    BYTE PTR [ebp-0x46],cl
  416352:	std    
  416353:	dec    ecx
  416354:	fcmovu st,st(1)
  416356:	dec    edx
  416357:	rcr    BYTE PTR [ebp+0x5a],cl
  41635a:	add    dl,cl
  41635c:	jmp    0xe4a:0x27c9574a
  416363:	shl    DWORD PTR [eax-0x5b5506bf],1
  416369:	mov    dl,0x61
  41636b:	mov    dl,0x6a
  41636d:	cdq    
  41636e:	fnstsw ax
  416370:	xchg   DWORD PTR [ecx],esp
  416372:	sar    BYTE PTR [edi+0x1c],1
  416375:	ja     0x4163d9
  416377:	inc    esp
  416378:	sub    eax,0x3ebebbae
  41637d:	mov    bh,0x5d
  41637f:	xchg   edx,eax
  416380:	mov    eax,ds:0xeaa2de8e
  416385:	xor    bh,BYTE PTR [ebx]
  416387:	dec    ecx
  416388:	bound  eax,QWORD PTR [edx+0x59]
  41638b:	inc    esp
  41638c:	push   ebx
  41638d:	ret    0xd659
  416390:	mov    al,ds:0x553f5641
  416395:	in     al,0x5d
  416397:	xchg   edx,eax
  416398:	mov    eax,ds:0x2d785256
  41639d:	push   edi
  41639e:	in     eax,0xd7
  4163a0:	push   edx
  4163a1:	sbb    al,0x53
  4163a3:	adc    bl,BYTE PTR [ebp-0x4adf04d5]
  4163a9:	mov    dh,0x41
  4163ab:	ds adc al,0xb7
  4163ae:	ffreep st(2)
  4163b0:	xor    eax,0x3eb26710
  4163b5:	adc    BYTE PTR [esi-0x6a24e657],bh
  4163bb:	out    0x4a,al
  4163bd:	aam    0xdd
  4163bf:	daa    
  4163c0:	push   ebp
  4163c1:	ret    0xca07
  4163c4:	push   edx
  4163c5:	adc    ah,BYTE PTR [edi]
  4163c7:	jmp    0x2320f14e
  4163cc:	mov    bh,0x46
  4163ce:	lods   eax,DWORD PTR ds:[esi]
  4163cf:	xor    DWORD PTR [edi+0x59],eax
  4163d2:	in     eax,0xa
  4163d4:	shl    dl,cl
  4163d6:	scas   al,BYTE PTR es:[edi]
  4163d7:	rcr    BYTE PTR [ebp+0x59],cl
  4163da:	dec    ebx
  4163db:	inc    esi
  4163dc:	jle    0x4163a0
  4163de:	(bad)  
  4163e0:	push   edx
  4163e1:	or     ch,BYTE PTR [ebx-0x21a6a22e]
  4163e7:	cld    
  4163e8:	push   edx
  4163e9:	xor    al,0x53
  4163eb:	dec    ecx
  4163ec:	scas   eax,DWORD PTR es:[edi]
  4163ed:	pop    ebp
  4163ee:	(bad)  
  4163ef:	stos   DWORD PTR es:[edi],eax
  4163f0:	push   ebp
  4163f1:	test   al,0x73
  4163f3:	mov    dh,0x76
  4163f5:	in     al,0xb7
  4163f7:	xor    al,0x8
  4163f9:	cmp    al,0xbc
  4163fb:	shr    BYTE PTR [ebp+0x4d],cl
  4163fe:	push   ebx
  4163ff:	idiv   DWORD PTR [esi]
  416401:	inc    edi
  416402:	dec    ebx
  416403:	rcr    BYTE PTR [ebp+ebp*2+0x23],cl
  416407:	mov    al,0x4f
  416409:	ret    
  41640a:	bswap  edx
  41640c:	push   edx
  41640d:	fisubr DWORD PTR [edx+0x56595dd2]
  416413:	push   ecx
  416414:	icebp  
  416415:	pop    ecx
  416416:	dec    ebx
  416417:	sar    BYTE PTR [edx-0x37],cl
  41641a:	in     al,0x88
  41641c:	jmp    0x7659:0x5dd28ec2
  416423:	retf   
  416424:	ds dec ebp
  416426:	push   ebx
  416427:	stos   BYTE PTR es:[edi],al
  416428:	cmp    DWORD PTR [ebx-0x74e4d9f],esi
  41642e:	sbb    dl,dl
  416430:	pop    ebp
  416431:	pop    ecx
  416432:	ficom  WORD PTR [edx]
  416434:	imul   eax,edx,0x1eace0a
  41643a:	inc    ebx
  41643b:	dec    ecx
  41643c:	add    BYTE PTR [ecx+0x2c],0x22
  416440:	inc    ebp
  416441:	dec    ebp
  416442:	pop    esp
  416443:	dec    ecx
  416444:	pop    ebp
  416445:	jo     0x41645a
  416447:	fisub  DWORD PTR [eax-0x151d8233]
  41644d:	add    dh,BYTE PTR [ebx]
  41644f:	shr    DWORD PTR [eax+0x590adc41],1
  416455:	rcl    BYTE PTR [edi],0xd6
  416458:	push   ss
  416459:	push   es
  41645a:	sub    edx,ebx
  41645c:	pop    ebp
  41645d:	pop    ecx
  41645e:	dec    ebx
  41645f:	xor    al,0x26
  416461:	sbb    edi,DWORD PTR [ecx]
  416463:	sar    BYTE PTR [ebp+0x4c],cl
  416466:	dec    edx
  416467:	xchg   ebp,eax
  416468:	nop
  416469:	imul   ecx,DWORD PTR [ebx-0x2e],0x168a595d
  416470:	jno    0x4164c7
  416472:	dec    ebx
  416473:	rcr    BYTE PTR [ebp+0x59],cl
  416476:	hlt    
  416477:	mov    edx,DWORD PTR [ebx]
  416479:	pop    edx
  41647a:	dec    ebx
  41647b:	sub    BYTE PTR [ebp+0x21],bl
  41647e:	xchg   edi,eax
  41647f:	gs dec ebp
  416481:	jl     0x4164e5
  416483:	inc    esp
  416484:	sub    eax,0x3eb9cfae
  416489:	mov    bh,0x17
  41648b:	cli    
  41648c:	fwait
  41648d:	jmp    0x5bf935b4
  416492:	dec    edi
  416493:	retf   
  416494:	lods   al,BYTE PTR ds:[esi]
  416495:	mov    dh,0xcb
  416497:	jp     0x4164ac
  416499:	jmp    0x6d5476e9
  41649e:	mov    DWORD PTR [edx-0x22aeaaac],edi
  4164a4:	sti    
  4164a5:	mov    cl,0x4a
  4164a7:	xchg   BYTE PTR [esp+eax*4+0x2b],dl
  4164ab:	jp     0x416509
  4164ad:	add    eax,0x2181c88b
  4164b2:	cld    
  4164b3:	inc    ecx
  4164b4:	jge    0x4164fd
  4164b6:	fild   DWORD PTR [eax-0x32]
  4164b9:	ds jmp 0xcf15:0xf5dec833
  4164c1:	push   esi
  4164c2:	adc    al,BYTE PTR [esi+0x36]
  4164c5:	cmp    al,ch
  4164c7:	ins    DWORD PTR es:[edi],dx
  4164c8:	cs dec ebp
  4164ca:	add    bl,BYTE PTR [edx-0x4c]
  4164cd:	pop    edi
  4164ce:	prefetch BYTE PTR [edi-0x31d0a9d6]
  4164d5:	cmp    eax,0xc068ece8
  4164da:	pop    esp
  4164db:	imul   BYTE PTR [ecx-0x3b2cb5e3]
  4164e1:	mov    ch,0x3
  4164e3:	adc    DWORD PTR ds:0x511a5ce8,esp
  4164e9:	adc    DWORD PTR [ecx],esp
  4164eb:	aaa    
  4164ec:	imul   esp,DWORD PTR [ebx+0x2],0x1671b9ca
  4164f3:	nop
  4164f4:	jg     0x416566
  4164f6:	xor    eax,0xd1657d2a
  4164fb:	push   ss
  4164fc:	xchg   edi,eax
  4164fd:	add    ebx,DWORD PTR [edi]
  4164ff:	push   edx
  416500:	dec    esp
  416501:	inc    ecx
  416502:	adc    dl,cl
  416504:	pop    esp
  416505:	jno    0x41654d
  416507:	push   es
  416508:	ret    0x32b8
  41650b:	mov    ebx,0x9aa269d6
  416510:	fstp   QWORD PTR [edi+edx*1-0x228b92f3]
  416517:	retf   0xf255
  41651a:	out    0x11,al
  41651c:	xchg   ebx,eax
  41651d:	js     0x416571
  41651f:	push   eax
  416520:	and    DWORD PTR [eax],0xfffffff6
  416523:	sub    dl,ch
  416525:	cmp    DWORD PTR [edi-0x34e372de],esp
  41652b:	push   cs
  41652c:	pop    esp
  41652d:	dec    ecx
  41652e:	push   ebp
  41652f:	enter  0xbb49,0x1
  416533:	or     eax,0x506a9d41
  416538:	imul   ebx,DWORD PTR [eax+0x5e],0xffffff89
  41653c:	dec    ebp
  41653d:	push   ds
  41653e:	ja     0x416517
  416540:	mov    ds:0x38e6492c,al
  416545:	cmc    
  416546:	(bad)  
  416547:	leave  
  416548:	dec    ebp
  416549:	jnp    0x41655a
  41654b:	xlat   BYTE PTR ds:[ebx]
  41654c:	pushf  
  41654d:	std    
  41654e:	push   esi
  41654f:	and    dl,BYTE PTR [ebx+0x47]
  416552:	push   esp
  416553:	mov    ds:0xd0aa419c,al
  416558:	fld    QWORD PTR [edx+0x9]
  41655b:	pop    ss
  41655c:	inc    ecx
  41655d:	hlt    
  41655e:	sbb    edx,edi
  416560:	pop    esi
  416561:	aaa    
  416562:	jnp    0x41658a
  416564:	gs test al,0x52
  416567:	pop    eax
  416568:	outs   dx,BYTE PTR ds:[esi]
  416569:	xlat   BYTE PTR ds:[ebx]
  41656a:	es add cl,dl
  41656d:	daa    
  41656e:	jmp    0x41659b
  416570:	xchg   ecx,eax
  416571:	xor    dh,dh
  416573:	add    cl,BYTE PTR [ebp-0x7a]
  416576:	daa    
  416577:	push   edi
  416578:	retf   0x5b58
  41657b:	in     eax,dx
  41657c:	mov    eax,ds:0x3c3ae63c
  416581:	imul   ebp,DWORD PTR [ebx],0x2ce885c9
  416587:	and    DWORD PTR [ecx-0xf],edx
  41658a:	cli    
  41658b:	loop   0x41651f
  41658d:	jge    0x4165b4
  41658f:	imul   edi,DWORD PTR es:[ebp+0x676a622a],0xffffffe5
  416597:	inc    ecx
  416598:	xor    DWORD PTR [ebx],edi
  41659a:	(bad)  
  41659b:	jmp    0x41658f
  41659d:	std    
  41659e:	xor    al,0xca
  4165a0:	je     0x416619
  4165a2:	dec    edi
  4165a3:	push   cs
  4165a4:	xor    eax,0x5c24236e
  4165a9:	mov    dh,0x9b
  4165ab:	adc    eax,0xe25b764f
  4165b0:	les    eax,FWORD PTR [ebx-0x35]
  4165b3:	call   0x351cf9ab
  4165b8:	ds inc esi
  4165ba:	xor    BYTE PTR [esi+edx*8+0x29],bl
  4165be:	jo     0x4165c5
  4165c0:	xor    eax,0xc086216b
  4165c5:	aaa    
  4165c6:	cs push esi
  4165c8:	fstp   DWORD PTR [ebx+0x6f244785]
  4165cf:	dec    ecx
  4165d0:	fcomp  QWORD PTR [ecx-0x77]
  4165d3:	in     al,dx
  4165d4:	mov    bl,0xe9
  4165d6:	and    ebx,edi
  4165d8:	bound  eax,QWORD PTR [esi]
  4165da:	popa   
  4165db:	fisubr DWORD PTR [ebp-0x90ab485]
  4165e1:	sar    edi,0x23
  4165e4:	enter  0x24e0,0xdd
  4165e8:	js     0x41657e
  4165ea:	ds xchg edx,eax
  4165ec:	mov    ebp,0x4cf40e69
  4165f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165f2:	dec    edx
  4165f3:	sub    edi,esp
  4165f5:	and    eax,0x9e89796a
  4165fa:	xlat   BYTE PTR ds:[ebx]
  4165fb:	rol    BYTE PTR [ecx+0x284218b7],cl
  416601:	rcl    DWORD PTR [edx+esi*2+0x5d],1
  416605:	or     BYTE PTR [esi+0x65],0xa4
  416609:	jbe    0x416652
  41660b:	inc    edi
  41660c:	pop    eax
  41660d:	pop    ecx
  41660e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41660f:	ins    BYTE PTR es:[edi],dx
  416610:	push   es
  416611:	rol    DWORD PTR [edx+0x4a45ab15],cl
  416617:	or     ebp,DWORD PTR [eax+0x25]
  41661a:	lods   eax,DWORD PTR ds:[esi]
  41661b:	dec    eax
  41661c:	popf   
  41661d:	add    DWORD PTR [ecx-0x4b],esp
  416620:	es test dh,0xd2
  416624:	mov    al,0x2f
  416626:	cdq    
  416627:	xchg   ecx,eax
  416628:	fistp  WORD PTR [ecx+0x252a4ea]
  41662e:	push   ss
  41662f:	mov    dh,0x33
  416631:	mov    eax,ds:0x91d2837a
  416636:	cmp    eax,0x7e5dfdd1
  41663b:	dec    esi
  41663c:	fistp  WORD PTR ds:0x7aa39a73
  416642:	dec    ebx
  416643:	aad    0x88
  416645:	stos   BYTE PTR es:[edi],al
  416646:	jp     0x416638
  416648:	mov    al,0x13
  41664a:	adc    edx,edx
  41664c:	jg     0x416676
  41664e:	(bad)  
  41664f:	mov    ss,WORD PTR [edx+0x5dd17dad]
  416655:	mov    eax,ds:0x1613888c
  41665a:	xor    ah,dh
  41665c:	scas   eax,DWORD PTR es:[edi]
  41665d:	pop    eax
  41665e:	cdq    
  41665f:	stc    
  416660:	mov    eax,0xd07d95bd
  416665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416666:	shl    BYTE PTR [ecx],0x5d
  416669:	mov    edi,DWORD PTR [esi]
  41666b:	and    DWORD PTR [esi],0xffffffa7
  41666e:	addr16 mov eax,0x4d664636
  416674:	sub    dl,BYTE PTR [eax]
  416676:	repz out dx,eax
  416678:	retf   
  416679:	pop    ebp
  41667a:	jecxz  0x416634
  41667c:	pop    esp
  41667d:	push   ds
  41667e:	leave  
  41667f:	pop    edx
  416680:	jnp    0x416659
  416682:	pop    eax
  416683:	enter  0xe104,0x96
  416687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416688:	das    
  416689:	inc    esi
  41668a:	mov    dh,0x75
  41668c:	or     eax,0x737740aa
  416691:	xchg   ebx,eax
  416692:	dec    edx
  416693:	call   0x3b49:0x1f721a
  41669a:	fwait
  41669b:	ror    dh,cl
  41669d:	push   0x2dbadc75
  4166a2:	jg     0x4166c5
  4166a4:	outs   dx,DWORD PTR ds:[esi]
  4166a5:	call   0xf9a5c8e1
  4166aa:	mov    ecx,0xa8ab2a56
  4166af:	rcr    BYTE PTR [edx],cl
  4166b1:	pop    ds
  4166b2:	ds sbb edx,eax
  4166b5:	popf   
  4166b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166b7:	shl    BYTE PTR [edx-0x4480a11f],0x5a
  4166be:	dec    ebx
  4166bf:	xor    DWORD PTR [edx-0x50acb70e],eax
  4166c5:	(bad)  
  4166c6:	ret    
  4166c7:	ret    0x345f
  4166ca:	loopne 0x41669e
  4166cc:	out    dx,al
  4166cd:	bound  edi,QWORD PTR [esi+0x2493908d]
  4166d3:	xor    al,0x5f
  4166d5:	pop    ds
  4166d6:	adc    dh,BYTE PTR [ebp-0x23]
  4166d9:	out    dx,al
  4166da:	dec    eax
  4166db:	(bad)  
  4166dc:	fsubr  QWORD PTR [esi-0x17740540]
  4166e2:	lods   al,BYTE PTR ds:[esi]
  4166e3:	out    dx,al
  4166e4:	test   DWORD PTR [esi+0x27],ebp
  4166e7:	stc    
  4166e8:	frstor [esi+0x6b4f6139]
  4166ee:	mov    al,ds:0x675b5d92
  4166f3:	(bad)
  4166f6:	xchg   BYTE PTR [eax-0x2dbc51d4],dh
  4166fc:	in     al,0xa4
  4166fe:	arpl   WORD PTR [ebx+eax*4],dx
  416701:	mov    cl,0x23
  416703:	mov    bh,0x5d
  416705:	inc    ebx
  416706:	(bad)  
  416707:	out    dx,eax
  416708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416709:	mov    eax,ebx
  41670b:	test   al,0x3c
  41670d:	inc    esi
  41670e:	or     al,0xc7
  416710:	daa    
  416711:	fwait
  416712:	js     0x4166de
  416714:	popf   
  416715:	sub    ecx,DWORD PTR [ebx+0x6b]
  416718:	mov    ch,0xc9
  41671a:	push   eax
  41671b:	into   
  41671c:	jns    0x41678a
  41671e:	or     al,cl
  416720:	or     BYTE PTR [edi+0x463c678e],ah
  416726:	mov    sp,0xffbf
  41672a:	pop    ebx
  41672b:	jge    0x41678a
  41672d:	into   
  41672e:	xor    eax,DWORD PTR [eax-0x5046c5e4]
  416734:	repnz int 0x18
  416737:	shl    BYTE PTR [eax],cl
  416739:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41673a:	mov    ds:0xa626d520,al
  41673f:	pop    ecx
  416740:	pop    ebp
  416741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416742:	pop    ebp
  416743:	sbb    BYTE PTR [esi+0x2ce1c744],0x44
  41674a:	mov    eax,0xaabffa5d
  41674f:	xchg   ebx,eax
  416750:	jge    0x416789
  416752:	pop    ds
  416753:	fstp   QWORD PTR [ebp+0x17]
  416756:	int    0xfe
  416758:	imul   edi,DWORD PTR [edx],0x37
  41675b:	mov    bl,0xb
  41675d:	inc    edi
  41675e:	sbb    eax,0xb44a7836
  416763:	mov    edi,0x8a1793c3
  416768:	mov    edi,0x83964b60
  41676d:	in     eax,dx
  41676e:	mov    eax,ds:0x93deb69b
  416773:	shr    BYTE PTR ds:0x58bb9a3c,cl
  416779:	mov    edx,0xee537f8b
  41677e:	adc    bh,BYTE PTR [esi]
  416780:	cmc    
  416781:	vpmadcswd xmm5,xmm5,XMMWORD PTR [edi+eiz*2-0x1a],xmm4
  416789:	jne    0x416717
  41678b:	and    eax,0x39924439
  416790:	mov    dh,0x65
  416792:	dec    ebx
  416793:	(bad)  
  416794:	push   ds
  416795:	in     al,0xfc
  416797:	call   0xa29a72f9
  41679c:	sub    al,0x91
  41679e:	xor    al,0x7c
  4167a0:	lods   eax,DWORD PTR ds:[esi]
  4167a1:	pop    ecx
  4167a2:	test   eax,0x90fee2c6
  4167a7:	ins    BYTE PTR es:[edi],dx
  4167a8:	jno    0x41672f
  4167aa:	dec    edx
  4167ab:	jmp    0xd9b0bd9a
  4167b0:	aad    0x94
  4167b2:	aam    0xd2
  4167b4:	js     0x416741
  4167b6:	pop    edx
  4167b7:	or     al,dh
  4167b9:	inc    eax
  4167ba:	inc    edx
  4167bb:	jp     0x41681a
  4167bd:	mov    eax,0x12203c40
  4167c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167c3:	(bad)  
  4167c4:	aad    0x59
  4167c6:	mov    esp,0x6a9e41cc
  4167cb:	daa    
  4167cc:	and    eax,0x58f84b5b
  4167d1:	inc    edx
  4167d2:	jecxz  0x416839
  4167d4:	into   
  4167d5:	inc    esi
  4167d6:	psrld  mm5,QWORD PTR [edi-0x2ad1c7c1]
  4167dd:	into   
  4167de:	xor    al,0xca
  4167e0:	push   esi
  4167e1:	xchg   ebp,eax
  4167e2:	pop    es
  4167e3:	add    DWORD PTR [esp+ebp*8],esp
  4167e6:	stos   BYTE PTR es:[edi],al
  4167e7:	jle    0x416842
  4167e9:	cdq    
  4167ea:	cmp    edx,edx
  4167ec:	jp     0x416840
  4167ee:	jg     0x41685b
  4167f0:	dec    edx
  4167f1:	fistp  QWORD PTR [edi-0x3b3a2ec]
  4167f7:	ja     0x41680b
  4167f9:	rol    BYTE PTR [eax-0x11],cl
  4167fc:	ds inc esi
  4167fe:	xchg   edx,eax
  4167ff:	mov    cl,0x74
  416801:	xchg   esi,eax
  416802:	stos   DWORD PTR es:[edi],eax
  416803:	lods   eax,DWORD PTR ds:[esi]
  416804:	retf   
  416805:	repnz and esp,DWORD PTR [ebx+0x51394625]
  41680c:	xor    DWORD PTR [ebx+0x595a735b],eax
  416812:	aas    
  416813:	cs mov eax,0x5008f900
  416819:	push   cs
  41681a:	dec    ebx
  41681b:	js     0x4167e5
  41681d:	push   ds
  41681e:	ins    BYTE PTR es:[edi],dx
  41681f:	adc    eax,0xd19c469e
  416824:	fistp  DWORD PTR [edi+0x44]
  416827:	cmp    eax,0x8abafdc9
  41682c:	rcl    DWORD PTR ds:0x525d68e7,cl
  416832:	lahf   
  416833:	push   ss
  416834:	or     BYTE PTR [eax],0x11
  416837:	test   eax,0x8fea461b
  41683c:	inc    edi
  41683d:	inc    esp
  41683e:	adc    BYTE PTR [edx+edx*2-0x3b],0x4a
  416843:	mov    edi,0xed9c2bcf
  416848:	jl     0x41687e
  41684a:	and    ch,cl
  41684c:	mov    al,0x8
  41684e:	jbe    0x416894
  416850:	fst    QWORD PTR [edi-0x14269d5e]
  416856:	push   ecx
  416857:	lahf   
  416858:	clc    
  416859:	inc    eax
  41685a:	daa    
  41685b:	mov    cl,0x13
  41685d:	loope  0x4168ca
  41685f:	xchg   ebx,eax
  416860:	aas    
  416861:	and    edx,DWORD PTR [esi+0x4bcc80dd]
  416867:	rol    ah,cl
  416869:	arpl   WORD PTR [ebx],sp
  41686b:	sub    al,0x36
  41686d:	ss push edx
  41686f:	popa   
  416870:	dec    edx
  416871:	mov    ebx,0x6510323a
  416876:	jge    0x4168b6
  416878:	xor    eax,0xa65a5046
  41687d:	and    esp,ecx
  41687f:	imul   esp,DWORD PTR es:[edx+0x4b],0x3c74c710
  416887:	mov    eax,0xc41bed3a
  41688c:	sbb    BYTE PTR [ebx+0x28],dh
  41688f:	inc    ebx
  416890:	pop    ebp
  416891:	push   0xa417fba8
  416896:	inc    edx
  416897:	ins    DWORD PTR es:[edi],dx
  416898:	xor    eax,0xef5b4a92
  41689d:	mov    ebp,0x5306576c
  4168a2:	pop    ds
  4168a3:	rol    BYTE PTR [ecx+0x3a],cl
  4168a6:	scas   eax,DWORD PTR es:[edi]
  4168a7:	mov    ecx,0x633ae5ff
  4168ac:	push   edx
  4168ad:	repnz test DWORD PTR [edi+0x7b7650a7],esi
  4168b4:	dec    eax
  4168b5:	inc    ebx
  4168b6:	ds rcl ch,cl
  4168b9:	addps  xmm0,xmm1
  4168bc:	mov    dh,0x3b
  4168be:	jge    0x4168f3
  4168c0:	test   eax,0xf9d2f28b
  4168c5:	mov    ebp,0xe2958e3c
  4168ca:	(bad)  
  4168cc:	jbe    0x416929
  4168ce:	retf   0xe817
  4168d1:	sub    cl,dl
  4168d3:	bound  ebx,QWORD PTR [ebp+0x5cc5b552]
  4168d9:	inc    esi
  4168da:	shr    BYTE PTR [edi],cl
  4168dc:	pop    ecx
  4168dd:	mov    al,0xb5
  4168df:	mov    edx,0xc8580201
  4168e4:	sub    eax,0xd28f7a12
  4168e9:	hlt    
  4168ea:	jo     0x4168f6
  4168ec:	cmc    
  4168ed:	jne    0x416967
  4168ef:	push   cs
  4168f0:	pop    ebp
  4168f1:	les    esp,FWORD PTR [bx+di]
  4168f4:	fwait
  4168f5:	ins    BYTE PTR es:[edi],dx
  4168f6:	or     al,0xe8
  4168f8:	and    al,BYTE PTR [esi-0x55]
  4168fb:	dec    ecx
  4168fc:	mov    edx,0xf384a0b
  416901:	loope  0x416944
  416903:	inc    esp
  416904:	xlat   BYTE PTR ds:[ebx]
  416905:	(bad)  
  416906:	mov    ds:0x5070cbd2,eax
  41690b:	push   ebx
  41690c:	sbb    BYTE PTR [eax+0x3b],bl
  41690f:	aad    0x47
  416911:	test   edx,ecx
  416913:	mov    dl,0xb4
  416915:	mov    ecx,0x32d31eb5
  41691a:	dec    ebx
  41691b:	in     al,dx
  41691c:	xchg   BYTE PTR [esi-0x11507acd],ah
  416922:	or     dl,ch
  416924:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416925:	lock ins BYTE PTR es:[edi],dx
  416927:	or     al,BYTE PTR [ecx+0x59]
  41692a:	not    DWORD PTR [ecx+0x69]
  41692d:	retf   0x6a49
  416930:	call   DWORD PTR ds:0xde02f431
  416936:	sbb    eax,0x5950f962
  41693b:	ret    0x5c33
  41693e:	sub    esi,DWORD PTR [edi-0x6c]
  416941:	leave  
  416942:	aad    0x16
  416944:	cmc    
  416945:	mov    BYTE PTR [edx+0x4abe771a],0xe1
  41694c:	ins    BYTE PTR es:[edi],dx
  41694d:	addr16 xchg edx,eax
  41694f:	mov    al,0xa0
  416951:	jns    0x4168e9
  416953:	rcr    BYTE PTR [ebx+ebp*1],cl
  416956:	mov    ah,0x5
  416958:	inc    esp
  416959:	push   ecx
  41695a:	mov    ?,WORD PTR [ecx+0x6245b15d]
  416960:	sub    ch,BYTE PTR ds:0x59c6dc10
  416966:	inc    eax
  416967:	(bad)  
  416968:	(bad)  
  416969:	push   es
  41696a:	xlat   BYTE PTR ds:[ebx]
  41696b:	lods   al,BYTE PTR ds:[esi]
  41696c:	mov    dl,BYTE PTR [edx+0x693c604a]
  416972:	cmp    DWORD PTR [ebp-0x2d7e938b],eax
  416978:	sti    
  416979:	neg    ebp
  41697b:	inc    edx
  41697c:	lock xchg esp,eax
  41697e:	adc    BYTE PTR [ebx],dl
  416980:	pop    ebp
  416981:	pop    DWORD PTR [ebx+0x50]
  416984:	sub    cl,BYTE PTR [ebx]
  416986:	out    0xb7,eax
  416988:	icebp  
  416989:	jo     0x41697f
  41698b:	mov    edx,0xb34e553
  416990:	sbb    BYTE PTR [edx+ecx*1+0x407d0455],bl
  416997:	adc    cl,BYTE PTR [edx-0x18]
  41699a:	mov    dl,BYTE PTR [edx-0x1d836819]
  4169a0:	push   edi
  4169a1:	or     DWORD PTR [ecx],ebx
  4169a3:	shl    DWORD PTR [ebx+0x4652fba6],1
  4169a9:	inc    edi
  4169aa:	ret    
  4169ab:	sub    al,0x39
  4169ad:	das    
  4169ae:	and    ecx,ecx
  4169b0:	xor    eax,0xaf746846
  4169b5:	mov    bl,0x1a
  4169b7:	rol    DWORD PTR [edi],cl
  4169b9:	inc    esi
  4169ba:	pop    ss
  4169bb:	xchg   esp,eax
  4169bc:	ss xchg ecx,eax
  4169be:	fild   WORD PTR [ebp-0x2fb48cc2]
  4169c4:	fwait
  4169c5:	sub    ebx,DWORD PTR [ebx+ebp*8]
  4169c8:	sahf   
  4169c9:	enter  0xd25d,0x84
  4169cd:	sti    
  4169ce:	leave  
  4169cf:	icebp  
  4169d0:	shr    DWORD PTR [ecx+0x2b],0x8f
  4169d4:	mov    ds:0x6e0f4ab3,eax
  4169d9:	sub    ebx,eax
  4169db:	arpl   WORD PTR [eiz*4+0x2821d36d],dx
  4169e2:	pop    eax
  4169e3:	sti    
  4169e4:	fsubr  DWORD PTR [edx-0x62]
  4169e7:	mov    ebp,0x529f797f
  4169ec:	or     cl,BYTE PTR [esi+0x4195e4f8]
  4169f2:	test   eax,0x7ae5afd2
  4169f7:	inc    esi
  4169f8:	stos   DWORD PTR es:[edi],eax
  4169f9:	add    eax,0x105d3f60
  4169fe:	mov    es,edi
  416a00:	arpl   WORD PTR [ebx],si
  416a02:	inc    ecx
  416a03:	fwait
  416a04:	(bad)  
  416a05:	pop    ecx
  416a06:	stc    
  416a07:	scas   al,BYTE PTR es:[edi]
  416a08:	inc    ecx
  416a09:	rcl    DWORD PTR [edx+0x4aba6042],1
  416a0f:	mov    ebp,0xfb10b7ba
  416a14:	mov    ah,0x1c
  416a16:	adc    BYTE PTR ds:0xda6f59ed,bh
  416a1c:	daa    
  416a1d:	push   edx
  416a1e:	and    eax,0xe7fade76
  416a23:	outs   dx,DWORD PTR ds:[esi]
  416a24:	push   esi
  416a25:	ret    0x749
  416a28:	sub    BYTE PTR [edx+edi*2+0x6d8f6e6e],dl
  416a2f:	rol    esi,cl
  416a31:	fsubr  QWORD PTR [eax-0x3bbd2b6b]
  416a37:	jecxz  0x416a96
  416a39:	sub    edi,edi
  416a3b:	push   es
  416a3c:	iret   
  416a3d:	sbb    eax,0x59ea4564
  416a42:	mov    ecx,0x58744fab
  416a47:	add    BYTE PTR [ecx-0xb],ch
  416a4a:	dec    ecx
  416a4b:	cmp    edi,DWORD PTR [ecx+0x34]
  416a4e:	hlt    
  416a4f:	mov    ah,0xad
  416a51:	fisttp DWORD PTR [ecx+0x1f]
  416a54:	gs pop ecx
  416a56:	idiv   DWORD PTR [bx]
  416a59:	sbb    eax,DWORD PTR [edx]
  416a5b:	dec    ebx
  416a5c:	lds    edi,FWORD PTR [edx]
  416a5e:	dec    ebx
  416a5f:	xor    BYTE PTR [ebx],ah
  416a61:	arpl   WORD PTR [esi+0x67],cx
  416a64:	jae    0x416a01
  416a66:	xor    edx,edx
  416a68:	xchg   esi,eax
  416a69:	xor    al,0xef
  416a6b:	neg    esi
  416a6d:	or     ebp,DWORD PTR [esi+eax*8-0x146eeca3]
  416a74:	push   esi
  416a75:	ror    DWORD PTR [edi],0xd1
  416a78:	in     eax,dx
  416a79:	jmp    0xb96c3d5b
  416a7e:	pop    edi
  416a7f:	mov    esi,0x555d9626
  416a84:	pop    ebp
  416a85:	(bad)  
  416a86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a87:	jl     0x416a95
  416a89:	lods   al,BYTE PTR ds:[esi]
  416a8a:	or     eax,0x597ffb76
  416a8f:	rol    al,cl
  416a91:	pop    ecx
  416a92:	xchg   ebx,eax
  416a93:	inc    esp
  416a94:	add    eax,0xad9044f3
  416a99:	pop    ebx
  416a9a:	dec    ebx
  416a9b:	sbb    bl,ch
  416a9d:	fistp  QWORD PTR [ecx]
  416a9f:	jae    0x416a95
  416aa1:	adc    dh,BYTE PTR [edx]
  416aa3:	shl    BYTE PTR [esi+ebx*1-0x68a597de],cl
  416aaa:	neg    DWORD PTR [edi-0x156171ae]
  416ab0:	clc    
  416ab1:	xor    cl,BYTE PTR [edi-0x66]
  416ab4:	arpl   WORD PTR ds:0x6941d2c2,sp
  416aba:	ror    BYTE PTR [edx+0x47],1
  416abd:	add    DWORD PTR [edi+0x7d],0x5d
  416ac1:	cs push esp
  416ac3:	repz (bad) 
  416ac5:	jns    0x416a88
  416ac7:	jno    0x416a59
  416ac9:	pop    ecx
  416aca:	xchg   esp,eax
  416acb:	test   DWORD PTR [edx-0x3b],edi
  416ace:	ficomp WORD PTR [ebp+0x69]
  416ad1:	adc    al,BYTE PTR [ebp-0x4]
  416ad4:	mov    ecx,0xd6d94b15
  416ad9:	stos   BYTE PTR es:[edi],al
  416ada:	adc    DWORD PTR [edi+0x79],edx
  416add:	pop    ecx
  416ade:	sbb    eax,0x9e99297d
  416ae3:	xchg   ecx,eax
  416ae4:	rcr    ebp,cl
  416ae6:	out    0x40,al
  416ae8:	pop    ebp
  416ae9:	mov    esp,0x5e7d11a
  416aee:	fistp  WORD PTR [esi-0x45]
  416af1:	pop    eax
  416af2:	xor    DWORD PTR [edi+0xf],eax
  416af5:	lea    ecx,[ebx]
  416af7:	or     bl,BYTE PTR [edi-0x5b]
  416afa:	cmp    dh,ch
  416afc:	int    0x9c
  416afe:	dec    edx
  416aff:	ror    DWORD PTR [ebp+0x8],0x2a
  416b03:	and    BYTE PTR [esi-0x3b2d5226],0x33
  416b0a:	cmp    ch,BYTE PTR [eax-0x656315e6]
  416b10:	pop    esp
  416b11:	sar    ebp,cl
  416b13:	push   edi
  416b14:	inc    eax
  416b15:	mov    ebx,0x38254623
  416b1a:	fst    st(2)
  416b1c:	or     DWORD PTR [ecx-0x47],ebp
  416b1f:	mov    esp,0x2e1d822c
  416b24:	push   esi
  416b25:	sub    al,0x76
  416b27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b28:	xchg   esp,eax
  416b29:	fild   DWORD PTR ds:0xd0e9f48f
  416b2f:	push   ebp
  416b30:	rcr    BYTE PTR [ecx-0x1f],1
  416b33:	in     al,0x3d
  416b35:	repz loop 0x416b01
  416b38:	lods   al,BYTE PTR ds:[esi]
  416b39:	add    ecx,DWORD PTR [ebx-0x7b]
  416b3c:	repnz mov ebp,cs
  416b3f:	xlat   BYTE PTR ds:[ebx]
  416b40:	arpl   WORD PTR [esi+0x2d85d2dc],si
  416b46:	(bad)  
  416b47:	cmp    BYTE PTR [edx],dh
  416b49:	inc    ecx
  416b4a:	cs test al,0x5d
  416b4d:	jmp    0xf8bf3d01
  416b52:	adc    BYTE PTR [ebx-0xb],dl
  416b55:	jbe    0x416b67
  416b57:	ins    BYTE PTR es:[edi],dx
  416b58:	daa    
  416b59:	jle    0x416afb
  416b5b:	mov    dl,0x5d
  416b5d:	repz enterw 0x60e5,0xca
  416b63:	adc    BYTE PTR [ebp-0x7f],bl
  416b66:	or     dh,al
  416b68:	sbb    eax,0xb38886d4
  416b6d:	pop    ecx
  416b6e:	into   
  416b6f:	mov    edi,DWORD PTR [ebx-0x3]
  416b72:	xor    DWORD PTR [edx-0x45],0x32
  416b76:	dec    ebx
  416b77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b78:	xor    esp,edi
  416b7a:	in     eax,0xa1
  416b7c:	mov    ch,0x6
  416b7e:	imul   ecx,ebp,0xffffffc3
  416b81:	jmp    0xb05a603e
  416b86:	rol    DWORD PTR [edx-0x7c5d6610],0x63
  416b8d:	xchg   ecx,eax
  416b8e:	sbb    ah,ah
  416b90:	pop    ebp
  416b91:	adc    DWORD PTR [esi],0x3d0773f6
  416b97:	push   edi
  416b98:	cli    
  416b99:	xor    ecx,edx
  416b9b:	rol    BYTE PTR [eax-0x66],cl
  416b9e:	mov    WORD PTR [ebp-0x7e593920],?
  416ba4:	outs   dx,DWORD PTR ds:[esi]
  416ba5:	das    
  416ba6:	sub    ebp,DWORD PTR [esi-0x2f4fc63b]
  416bac:	or     bl,BYTE PTR [edx+0x75]
  416baf:	or     eax,DWORD PTR ds:0xead94aca
  416bb5:	pushf  
  416bb6:	call   0xe889:0x4ab4c8f0
  416bbd:	out    0x12,eax
  416bbf:	rcl    DWORD PTR [esi-0x26],0xca
  416bc3:	ror    BYTE PTR [edx],cl
  416bc5:	(bad)  
  416bc6:	pushf  
  416bc7:	dec    esi
  416bc8:	les    ebp,FWORD PTR [eax-0x71a3f8a5]
  416bce:	xchg   esi,eax
  416bcf:	jo     0x416b8e
  416bd1:	xrelease mov DWORD PTR [esi],edi
  416bd4:	and    edx,ebx
  416bd6:	cmp    edx,edx
  416bd8:	mov    DWORD PTR [ebp-0x77b4a7db],esi
  416bde:	add    DWORD PTR [ebx-0x1f2caea3],eax
  416be4:	cmp    dh,dl
  416be6:	push   ds
  416be7:	push   cs
  416be8:	mov    edx,0x7bb4b259
  416bed:	pop    edx
  416bee:	jmp    0x4099dc1f
  416bf3:	int    0x66
  416bf5:	lods   eax,DWORD PTR ds:[esi]
  416bf6:	dec    edx
  416bf7:	in     eax,dx
  416bf8:	xlat   BYTE PTR ds:[ebx]
  416bf9:	mov    ds:0x5d452870,al
  416bfe:	fidiv  WORD PTR [edx+0x53f1bd57]
  416c04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c05:	outs   dx,DWORD PTR ds:[esi]
  416c06:	inc    edi
  416c07:	mov    ch,0xe6
  416c09:	xchg   BYTE PTR [edx],ch
  416c0b:	jo     0x416c3f
  416c0d:	lock sub BYTE PTR [ebp+0x1000da5d],cl
  416c14:	push   ebx
  416c15:	fidiv  WORD PTR [esi+eiz*2]
  416c18:	pop    ecx
  416c19:	jae    0x416bf3
  416c1b:	push   0x3586ebdd
  416c20:	push   edx
  416c21:	mov    edi,ss
  416c23:	jp     0x416ca0
  416c25:	or     al,0x22
  416c27:	aad    0x44
  416c29:	dec    ecx
  416c2a:	pop    ebx
  416c2b:	jecxz  0x416bbc
  416c2d:	fld    st(6)
  416c2f:	xchg   ecx,eax
  416c30:	mov    edx,0xd2d23c1c
  416c35:	ja     0x416c3a
  416c37:	or     DWORD PTR ds:0x5d430164,0x63
  416c3e:	pushf  
  416c3f:	ror    DWORD PTR [edi],cl
  416c41:	std    
  416c42:	sbb    ecx,DWORD PTR [ebp+0xc96461d]
  416c48:	in     eax,0x4f
  416c4a:	mov    es,WORD PTR [esi-0x77]
  416c4d:	retf   0x7b02
  416c50:	nop
  416c51:	push   edi
  416c52:	xor    al,0x12
  416c54:	fstp   st(1)
  416c56:	nop
  416c57:	call   0xd2ff5067
  416c5c:	sbb    BYTE PTR [eax+0x2bff5274],dl
  416c62:	retf   0x6453
  416c65:	mov    cl,BYTE PTR [ecx-0x2e]
  416c68:	pop    esi
  416c69:	add    BYTE PTR [esi+0x2d],0x9b
  416c6d:	aaa    
  416c6e:	push   esi
  416c6f:	sbb    BYTE PTR [ebp-0x41d0a7a7],0x9f
  416c76:	ins    BYTE PTR es:[edi],dx
  416c77:	xchg   DWORD PTR [edi+0x3],esp
  416c7a:	dec    ebx
  416c7b:	test   BYTE PTR [edx-0x1b],al
  416c7e:	out    dx,al
  416c7f:	adc    al,0x51
  416c81:	cmp    al,0x5a
  416c83:	mov    dl,BYTE PTR [ebx-0x7c]
  416c86:	(bad)  
  416c87:	rcr    DWORD PTR [ebx],1
  416c89:	xchg   ebx,eax
  416c8a:	mov    dl,0x9
  416c8c:	xchg   ecx,eax
  416c8d:	int3   
  416c8e:	dec    edx
  416c8f:	fcomp  st(7)
  416c91:	stc    
  416c92:	push   edi
  416c93:	repnz mov ch,0x57
  416c96:	icebp  
  416c97:	rol    BYTE PTR [eax],cl
  416c99:	dec    ebx
  416c9a:	out    0x1,eax
  416c9c:	sub    BYTE PTR [ebx-0x6790905e],bh
  416ca2:	out    0xf5,eax
  416ca4:	lods   al,BYTE PTR ds:[esi]
  416ca5:	fst    DWORD PTR [ecx+0x5cf2a7b]
  416cab:	rcr    BYTE PTR [esi-0x41],cl
  416cae:	mov    edx,0xa9c0167e
  416cb3:	inc    eax
  416cb4:	pop    ebp
  416cb5:	int3   
  416cb6:	mov    eax,ds:0x5d6601de
  416cbb:	or     eax,0x33ad59df
  416cc0:	jl     0x416d01
  416cc2:	(bad)  
  416cc3:	lock (bad) 
  416cc5:	repnz dec edx
  416cc7:	adc    eax,0x87ff2a7f
  416ccc:	stos   DWORD PTR es:[edi],eax
  416ccd:	dec    eax
  416cce:	dec    ecx
  416ccf:	rol    DWORD PTR [edi-0x192c619c],cl
  416cd5:	cmp    ebp,DWORD PTR [edx+0x4b1b4a8e]
  416cdb:	push   ss
  416cdc:	mov    ah,0x4f
  416cde:	clc    
  416cdf:	sub    bl,BYTE PTR [ecx+0x1cc82f51]
  416ce5:	sub    bl,BYTE PTR [ebp+esi*8+0x6ab55913]
  416cec:	xor    DWORD PTR [esi-0x46064415],ebp
  416cf2:	jmp    0x86b4:0x90d05d3b
  416cf9:	pop    edx
  416cfa:	adc    ebx,DWORD PTR [edi+eiz*4+0x40]
  416cfe:	lds    esp,FWORD PTR [ecx+ebx*2]
  416d01:	mov    eax,0x48a8beca
  416d06:	xor    DWORD PTR [ebp+0x6ef9c56c],eax
  416d0c:	fcomi  st,st(3)
  416d0e:	je     0x416d43
  416d10:	stos   BYTE PTR es:[edi],al
  416d11:	add    ebx,ecx
  416d13:	fistp  QWORD PTR [ebp-0x75]
  416d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d17:	dec    ebp
  416d18:	sbb    BYTE PTR [esp+esi*8],ch
  416d1b:	aad    0x9
  416d1d:	push   0x69d142a6
  416d22:	dec    ebx
  416d23:	jno    0x416d43
  416d25:	retf   
  416d26:	imul   ebp,DWORD PTR [ecx],0xd23eaa8e
  416d2c:	mov    ds:0x1d35e12f,al
  416d31:	ins    BYTE PTR es:[edi],dx
  416d32:	repz scas al,BYTE PTR es:[edi]
  416d34:	pop    ebp
  416d35:	enter  0x5ffb,0x26
  416d39:	call   0x5a32b86f
  416d3e:	mov    esp,0x9cef3d67
  416d43:	rol    DWORD PTR [eax+0x3c],cl
  416d46:	dec    ebx
  416d47:	mov    al,0x9c
  416d49:	es jg  0x416d34
  416d4c:	inc    ecx
  416d4d:	fs stos DWORD PTR es:[edi],eax
  416d4f:	int    0xff
  416d51:	fwait
  416d52:	mov    eax,ds:0xb3c6dd96
  416d57:	pop    ecx
  416d58:	or     DWORD PTR ds:0xe9c5dceb,esi
  416d5e:	mov    esi,0xdf55f13d
  416d63:	mov    edi,0x95ac1aeb
  416d68:	les    esp,FWORD PTR es:[edx+0x2]
  416d6c:	stos   BYTE PTR es:[edi],al
  416d6d:	mov    bl,0x50
  416d6f:	add    DWORD PTR ds:0xf7b2d3b3,eax
  416d75:	dec    ecx
  416d76:	cli    
  416d77:	addr16 js 0x416dc0
  416d7a:	pop    ecx
  416d7b:	mov    dl,0x98
  416d7d:	mov    ch,0x2a
  416d7f:	xor    bl,BYTE PTR [ecx+ecx*1]
  416d82:	jl     0x416d7c
  416d84:	pop    esp
  416d85:	inc    eax
  416d86:	cwde   
  416d87:	fs dec ebx
  416d89:	cli    
  416d8a:	out    0x70,eax
  416d8c:	and    DWORD PTR [edx+0x4c],esp
  416d8f:	ficomp DWORD PTR [edx+ecx*1+0x71]
  416d93:	mov    edi,0x8c4eaf4d
  416d98:	jecxz  0x416dbd
  416d9a:	cwde   
  416d9b:	sbb    al,0x1d
  416d9d:	add    edx,esp
  416d9f:	jle    0x416e1a
  416da1:	pop    ecx
  416da2:	inc    esi
  416da3:	lahf   
  416da4:	enter  0xdd96,0x7f
  416da8:	push   ecx
  416da9:	push   ss
  416daa:	dec    ebx
  416dab:	dec    esi
  416dac:	ror    DWORD PTR [edi],0xda
  416daf:	inc    edi
  416db0:	ficom  WORD PTR [ebx+ecx*8]
  416db3:	shl    al,cl
  416db5:	jl     0x416ddd
  416db7:	aaa    
  416db8:	inc    eax
  416db9:	and    eax,0x32
  416dbc:	pop    esi
  416dbd:	jne    0x416e24
  416dbf:	or     BYTE PTR [ebp+0x6b754e23],bl
  416dc5:	mov    ds,ebp
  416dc7:	rcr    al,cl
  416dc9:	icebp  
  416dca:	inc    ebp
  416dcb:	xchg   esi,eax
  416dcc:	push   ecx
  416dcd:	hlt    
  416dce:	lea    esp,[edx]
  416dd0:	pop    ebp
  416dd1:	push   ds
  416dd2:	jmp    0x349fc668
  416dd7:	mov    BYTE PTR [ebx+0x59],bh
  416dda:	and    al,0x30
  416ddc:	lds    esi,FWORD PTR [edx]
  416dde:	push   0x4af70613
  416de3:	push   esp
  416de4:	cmp    bh,0x90
  416de7:	or     eax,0xd2ca84d5
  416dec:	dec    ebx
  416ded:	outs   dx,DWORD PTR ds:[esi]
  416dee:	mov    eax,0xc36b9859
  416df3:	loope  0x416e51
  416df5:	xchg   BYTE PTR [ecx-0x5a],bh
  416df8:	push   0x24
  416dfa:	and    eax,0x9f3021a3
  416dff:	ror    BYTE PTR [ebx+0x7],cl
  416e02:	cmp    DWORD PTR [esi+0x3fdebabc],0x8e769b5d
  416e0c:	ins    DWORD PTR es:[edi],dx
  416e0d:	retf   0xedc9
  416e10:	lds    ebx,FWORD PTR [ecx+0x6d]
  416e13:	pop    eax
  416e14:	cs xchg edx,eax
  416e16:	add    esi,DWORD PTR ds:0x614b0674
  416e1c:	xchg   ebp,eax
  416e1d:	or     eax,0x2cf55ea8
  416e22:	push   edi
  416e23:	ror    BYTE PTR [ecx-0x1f],cl
  416e26:	mov    dh,0xa8
  416e28:	dec    edi
  416e29:	adc    al,0x28
  416e2b:	popf   
  416e2c:	pop    ebp
  416e2d:	and    BYTE PTR [ecx+0x18],al
  416e30:	and    bh,cl
  416e32:	popf   
  416e33:	cdq    
  416e34:	bound  esi,QWORD PTR [ebx-0x19]
  416e37:	push   eax
  416e38:	outs   dx,BYTE PTR ds:[esi]
  416e39:	fsin   
  416e3b:	adc    BYTE PTR [ebp+0x11249b1c],bl
  416e41:	lahf   
  416e42:	dec    edx
  416e43:	cld    
  416e44:	add    al,0x79
  416e46:	sub    bl,BYTE PTR [esi-0x3]
  416e49:	ins    DWORD PTR es:[edi],dx
  416e4a:	in     eax,0x44
  416e4c:	adc    eax,DWORD PTR [esi+0x4a]
  416e4f:	pop    eax
  416e50:	stc    
  416e51:	inc    esi
  416e52:	cmp    bh,BYTE PTR [eax+edx*2+0x5d2b68e7]
  416e59:	push   0x9
  416e5b:	jl     0x416e11
  416e5d:	in     al,dx
  416e5e:	and    edx,DWORD PTR [edx+0x40]
  416e61:	pop    ecx
  416e62:	in     al,dx
  416e63:	or     BYTE PTR [edx],0xdd
  416e66:	cmc    
  416e67:	lods   al,BYTE PTR ds:[esi]
  416e68:	(bad)
  416e6c:	inc    ecx
  416e6d:	xchg   DWORD PTR [eax-0x1516ee0d],ebp
  416e73:	or     al,0xd
  416e75:	mov    esi,0xab9ad2ed
  416e7a:	adc    dh,BYTE PTR [ecx-0x120b6716]
  416e80:	pop    ebp
  416e81:	fimul  DWORD PTR [ecx+0x4e6ca5be]
  416e87:	sub    esi,esp
  416e89:	pop    ecx
  416e8a:	arpl   si,bp
  416e8c:	mov    eax,0x1a08e4c5
  416e91:	sbb    al,0x56
  416e93:	fsubr  DWORD PTR [esi]
  416e95:	aad    0x74
  416e97:	ins    BYTE PTR es:[edi],dx
  416e98:	jns    0x416e78
  416e9a:	mov    dl,bh
  416e9c:	xchg   esi,eax
  416e9d:	pop    DWORD PTR [edi]
  416e9f:	ficom  WORD PTR [edx]
  416ea1:	sub    al,0xde
  416ea3:	push   ebx
  416ea4:	jmp    DWORD PTR fs:[edi-0x736b5903]
  416eab:	stos   BYTE PTR es:[edi],al
  416eac:	jae    0x416eec
  416eae:	dec    edi
  416eaf:	clc    
  416eb0:	les    ebx,FWORD PTR [esi-0x6e]
  416eb3:	fcmovnu st,st(5)
  416eb5:	jp     0x416f32
  416eb7:	xchg   BYTE PTR [ecx-0x172c8bb6],bl
  416ebd:	cmc    
  416ebe:	mov    ebp,?
  416ec0:	ror    ecx,1
  416ec2:	pop    es
  416ec3:	(bad)  
  416ec4:	pop    ebp
  416ec5:	jno    0x416e81
  416ec7:	in     eax,0x1f
  416ec9:	ret    
  416eca:	pop    ebp
  416ecb:	clc    
  416ecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ecd:	pop    ecx
  416ece:	jl     0x416eb7
  416ed0:	aam    0x0
  416ed2:	sar    DWORD PTR [esi-0x4f],1
  416ed5:	call   0x9c0e:0x4627d802
  416edc:	ss pop ds
  416ede:	inc    ebp
  416edf:	adc    al,BYTE PTR [edi]
  416ee1:	push   esp
  416ee2:	std    
  416ee3:	or     DWORD PTR [ecx+0x19],esp
  416ee6:	push   ebp
  416ee7:	jmp    0x416f5c
  416ee9:	stc    
  416eea:	ins    BYTE PTR es:[edi],dx
  416eeb:	dec    eax
  416eec:	aas    
  416eed:	cmp    cl,BYTE PTR [ebx-0x4c]
  416ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ef1:	fisub  DWORD PTR [esi]
  416ef3:	xchg   edi,eax
  416ef4:	loope  0x416f4d
  416ef6:	sbb    eax,0x66f3ddd2
  416efb:	(bad)  
  416efc:	int    0xf9
  416efe:	imul   ebx,DWORD PTR [eax+0x5d],0xffffffdb
  416f02:	pop    edx
  416f03:	add    al,0x14
  416f05:	rol    BYTE PTR [edi],cl
  416f07:	retf   
  416f08:	fistp  DWORD PTR [ecx+0x70]
  416f0b:	(bad)  
  416f0c:	aas    
  416f0d:	pop    ds
  416f0e:	bsr    esp,DWORD PTR [esi]
  416f11:	adc    DWORD PTR [ebx+0x18],ecx
  416f14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f15:	cld    
  416f16:	add    DWORD PTR [edx-0x2d],0xffffffe8
  416f1a:	jb     0x416eef
  416f1c:	and    edx,DWORD PTR [edx+edi*1+0x90465b2]
  416f23:	xor    eax,0x604b03e5
  416f28:	push   esp
  416f29:	or     DWORD PTR [eax+0x48d934d7],esi
  416f2f:	pop    edx
  416f30:	dec    esp
  416f31:	pop    esp
  416f32:	dec    edi
  416f33:	xor    edx,ebx
  416f35:	push   0xd9e3951d
  416f3a:	mov    dl,0x82
  416f3c:	and    al,0xbe
  416f3e:	push   eax
  416f3f:	sub    al,BYTE PTR gs:[edx+0x17eb7338]
  416f46:	pop    esi
  416f47:	cmp    eax,0xcd3f5d1d
  416f4c:	nop
  416f4d:	sbb    eax,0x3b5de3c6
  416f52:	outs   dx,BYTE PTR ds:[esi]
  416f53:	cs ja  0x416ede
  416f56:	dec    ebx
  416f57:	mov    ah,0xc5
  416f59:	mov    eax,0x5b640ef6
  416f5e:	(bad)  
  416f60:	cli    
  416f61:	or     eax,0xb3886693
  416f66:	inc    ebx
  416f67:	xchg   ebp,eax
  416f68:	pop    ebp
  416f69:	sub    bl,ch
  416f6b:	add    al,0x79
  416f6d:	in     al,dx
  416f6e:	inc    edx
  416f6f:	jno    0x416eff
  416f71:	gs call 0x2fa0:0x94461174
  416f79:	push   cs
  416f7a:	and    dl,bh
  416f7c:	mov    ebx,0x50f006a6
  416f81:	inc    edi
  416f82:	(bad)  
  416f83:	out    dx,eax
  416f84:	push   esp
  416f85:	sbb    BYTE PTR [edi-0x2477adb2],ch
  416f8b:	fmul   DWORD PTR ds:0x26d2cf4d
  416f91:	push   cs
  416f92:	je     0x416f6b
  416f94:	in     al,0x8c
  416f96:	mov    eax,0xa3195d55
  416f9b:	push   edi
  416f9c:	xchg   edx,eax
  416f9d:	dec    edx
  416f9e:	movd   DWORD PTR [ecx-0x771fb2a7],mm7
  416fa5:	aaa    
  416fa6:	ss dec eax
  416fa8:	mov    bh,0xd1
  416faa:	push   ecx
  416fab:	or     DWORD PTR [ebp-0x736dbf4a],eax
  416fb1:	es mov eax,0xc9463aba
  416fb7:	dec    esi
  416fb8:	push   edi
  416fb9:	sti    
  416fba:	or     esi,edi
  416fbc:	idiv   BYTE PTR [edx+ecx*2+0x55]
  416fc0:	mov    bl,BYTE PTR [edi]
  416fc2:	lea    edx,[ebx]
  416fc4:	dec    ebp
  416fc5:	lods   al,BYTE PTR ds:[esi]
  416fc6:	out    dx,al
  416fc7:	clc    
  416fc8:	dec    ebp
  416fc9:	add    eax,0xf8561325
  416fce:	mov    dl,0xbc
  416fd0:	cdq    
  416fd1:	stc    
  416fd2:	mov    edi,0x4b6ddbc5
  416fd7:	sub    al,0x48
  416fd9:	dec    esi
  416fda:	aaa    
  416fdb:	shl    esp,1
  416fdd:	shr    eax,0xd2
  416fe0:	mul    BYTE PTR [eax]
  416fe2:	jno    0x416f7b
  416fe4:	aas    
  416fe5:	div    esp
  416fe7:	(bad)  
  416fe8:	push   eax
  416fe9:	ret    0x3d62
  416fec:	les    ecx,FWORD PTR [ebx]
  416fee:	mov    ch,BYTE PTR [ebp+0x3d]
  416ff1:	lds    edx,FWORD PTR [esi]
  416ff3:	js     0x416f8d
  416ff5:	pop    ecx
  416ff6:	mov    esp,0x5ec9d562
  416ffb:	popa   
  416ffc:	mov    ecx,esp
  416ffe:	dec    edx
  416fff:	xchg   esp,eax
  417000:	and    BYTE PTR [ebx+0x380189a7],bl
  417006:	pop    ebp
  417007:	out    dx,al
  417008:	or     ecx,DWORD PTR [esp+ebp*8-0x4035d82e]
  41700f:	pop    ds
  417010:	sti    
  417011:	inc    eax
  417012:	pop    edi
  417013:	dec    esp
  417014:	cdq    
  417015:	mov    al,0xb9
  417017:	fcomp  QWORD PTR [ecx+eiz*8+0x49]
  41701b:	push   esi
  41701c:	fist   DWORD PTR [ebp-0x15]
  41701f:	xchg   ebp,eax
  417020:	fcom   st(5)
  417022:	pop    ebx
  417023:	ror    DWORD PTR ds:0x58267a7c,cl
  417029:	ins    BYTE PTR es:[edi],dx
  41702a:	out    0x82,eax
  41702c:	test   eax,0x5d37f9d
  417031:	sub    eax,0xc3844314
  417036:	push   ecx
  417037:	sar    DWORD PTR [edx-0x4a5ea00e],cl
  41703d:	push   ss
  41703e:	lock repnz pop edi
  417041:	out    0x4a,al
  417043:	sbb    DWORD PTR [ebp-0x41],edi
  417046:	dec    esp
  417047:	inc    esp
  417048:	xlat   BYTE PTR ds:[ebx]
  417049:	jle    0x416fce
  41704b:	shl    DWORD PTR [ebx-0x5b815a8f],cl
  417051:	sti    
  417052:	dec    ebp
  417053:	mov    fs,esp
  417055:	in     al,0x4a
  417057:	retf   0x9d66
  41705a:	call   0x57f6:0x28774507
  417061:	clc    
  417062:	xor    al,bh
  417064:	fucom  st(1)
  417066:	xor    al,0xe2
  417068:	push   ecx
  417069:	test   eax,0x815d5e1a
  41706e:	cmp    BYTE PTR [ecx+eiz*2],bh
  417071:	sbb    DWORD PTR [edx],eax
  417073:	in     al,dx
  417074:	dec    ebx
  417075:	inc    esi
  417076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417077:	xchg   esi,eax
  417078:	sbb    ebp,DWORD PTR [eax+0x1b9b3849]
  41707e:	pop    es
  41707f:	int3   
  417080:	push   ebx
  417081:	pop    ecx
  417082:	sub    al,0xa9
  417084:	jecxz  0x41702c
  417086:	(bad)  
  417087:	jl     0x417081
  417089:	xor    esi,esi
  41708b:	rcr    BYTE PTR [ebx+ebp*8+0x25caacc],cl
  417092:	dec    edi
  417093:	and    eax,0x2d66b15d
  417098:	xor    al,0x81
  41709a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41709b:	test   BYTE PTR [esi+0x7707c05d],ch
  4170a1:	xchg   DWORD PTR [esi+0x53],ebx
  4170a4:	jbe    0x41711f
  4170a6:	adc    BYTE PTR [ebx],ah
  4170a8:	pop    ebp
  4170a9:	sti    
  4170aa:	push   es
  4170ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170ac:	add    eax,0x71575faa
  4170b1:	inc    esi
  4170b2:	fsubr  QWORD PTR ds:[esi]
  4170b5:	mov    ebp,0x5c1dd790
  4170ba:	xchg   ecx,eax
  4170bb:	dec    ebx
  4170bc:	push   ebx
  4170bd:	and    al,0x4b
  4170bf:	je     0x417066
  4170c1:	xor    ebx,DWORD PTR [ebp-0x60]
  4170c4:	push   es
  4170c5:	sti    
  4170c6:	es (bad) 
  4170c8:	out    dx,al
  4170c9:	push   ss
  4170ca:	inc    edi
  4170cb:	push   ebx
  4170cc:	fstenv ds:0x2047de3f
  4170d3:	fsubr  DWORD PTR [ecx]
  4170d5:	(bad)  
  4170d6:	or     ecx,DWORD PTR [eax+edx*8+0xc]
  4170da:	mov    WORD PTR [esi+0x8],gs
  4170dd:	retf   0xd237
  4170e0:	fsubr  DWORD PTR [esi+0x69a4c26e]
  4170e6:	iret   
  4170e7:	cwde   
  4170e8:	pop    esi
  4170e9:	inc    eax
  4170ea:	or     ebp,DWORD PTR [ebx-0xab7baa3]
  4170f0:	dec    esp
  4170f1:	not    al
  4170f3:	lods   al,BYTE PTR ds:[esi]
  4170f4:	inc    ecx
  4170f5:	pop    ecx
  4170f6:	sub    BYTE PTR [edx],dh
  4170f8:	js     0x417098
  4170fa:	adc    eax,0x4aa6d608
  4170ff:	in     eax,0x63
  417101:	imul   ecx,DWORD PTR [esi],0x4e
  417104:	cmp    eax,0x2dca6d08
  417109:	jo     0x4170dc
  41710b:	ss mov ebx,0x50533909
  417111:	dec    bx
  417113:	xchg   BYTE PTR [eax+0x7506df30],ah
  417119:	mov    ebp,0xa920d2f2
  41711e:	push   ecx
  41711f:	lods   eax,DWORD PTR ds:[esi]
  417120:	icebp  
  417121:	push   ebx
  417122:	into   
  417123:	and    al,0x25
  417125:	mov    ebp,DWORD PTR [esi+eiz*4]
  417128:	mov    al,ds:0x86675b59
  41712d:	jp     0x4170b6
  41712f:	ins    DWORD PTR es:[edi],dx
  417130:	dec    ebx
  417131:	inc    esi
  417132:	test   al,0xe2
  417134:	sbb    eax,0x5439e8cb
  417139:	aad    0x55
  41713b:	lahf   
  41713c:	repnz adc BYTE PTR [edx-0x35523edc],0x17
  417144:	push   ds
  417145:	popf   
  417146:	mov    ecx,ecx
  417148:	cmp    edx,DWORD PTR [edi]
  41714a:	cmp    ebp,ebx
  41714c:	pop    ebp
  41714d:	mov    dh,0x3
  41714f:	xchg   DWORD PTR [eax-0x6dcdb509],esp
  417155:	sub    BYTE PTR [edx-0x5172fd3d],dl
  41715b:	int    0xbe
  41715d:	push   ss
  41715e:	push   edx
  41715f:	adc    BYTE PTR [eax+eiz*2-0x4a80adcf],bl
  417166:	mov    al,0x9f
  417168:	pop    ebp
  417169:	(bad)  
  41716a:	ins    BYTE PTR es:[edi],dx
  41716b:	sub    esi,DWORD PTR [edx-0x52]
  41716e:	add    al,0x87
  417170:	mov    ebx,DWORD PTR [ecx+0x76]
  417173:	lea    eax,[edx+0x7097ee4f]
  417179:	fisttp DWORD PTR [edx-0x3]
  41717c:	lods   eax,DWORD PTR ds:[esi]
  41717d:	lea    esp,[ecx+0x5d]
  417180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417181:	push   cs
  417182:	mov    ch,0xd2
  417184:	cs sbb esi,DWORD PTR ds:[ebx]
  417188:	or     ch,BYTE PTR [esp+eax*2]
  41718b:	lds    ebx,FWORD PTR [ebp-0x24]
  41718e:	in     al,dx
  41718f:	sbb    ch,dl
  417191:	push   esi
  417192:	addr16 inc dx
  417195:	pop    eax
  417196:	rol    DWORD PTR [esi-0x5d],cl
  417199:	aaa    
  41719a:	or     al,0x3a
  41719c:	sub    al,0xca
  41719e:	pop    ecx
  41719f:	add    DWORD PTR [eax+esi*2-0x50],ebx
  4171a3:	(bad)  
  4171a4:	fdiv   DWORD PTR [esi+0x23]
  4171a7:	fisub  WORD PTR [ecx]
  4171a9:	nop
  4171aa:	jge    0x417161
  4171ac:	iret   
  4171ad:	pop    ecx
  4171ae:	adc    dh,cl
  4171b0:	fist   WORD PTR [eax+0x62c07dd2]
  4171b6:	push   esi
  4171b7:	data16 adc BYTE PTR [ecx],bl
  4171ba:	(bad)  [esi]
  4171bc:	fadd   st(2),st
  4171be:	jge    0x417159
  4171c0:	xor    bl,BYTE PTR [ecx]
  4171c2:	idiv   BYTE PTR [ecx+eiz*1]
  4171c5:	lock jg 0x41719b
  4171c8:	add    DWORD PTR [eax+eiz*4-0x53],esi
  4171cc:	stc    
  4171cd:	imul   ebp,DWORD PTR [ecx-0x7d],0x5d
  4171d1:	sub    BYTE PTR [edx+ebx*1],0xc8
  4171d5:	jno    0x41716f
  4171d7:	push   0xb2ae461f
  4171dc:	pop    edx
  4171dd:	xor    cl,BYTE PTR [edi-0x1205fbbb]
  4171e3:	lods   eax,DWORD PTR ds:[esi]
  4171e4:	pop    ebp
  4171e5:	mov    dh,BYTE PTR [ebx-0x31323e66]
  4171eb:	sbb    cl,BYTE PTR [edi+edi*4-0x77]
  4171ef:	rol    DWORD PTR [esi-0x28],cl
  4171f2:	std    
  4171f3:	idiv   BYTE PTR [eax+0x5af2b207]
  4171f9:	popa   
  4171fa:	out    0x18,eax
  4171fc:	pop    ebp
  4171fd:	mov    edi,0x4a1560b9
  417202:	aaa    
  417203:	into   
  417204:	mov    ebp,0x35a22559
  417209:	std    
  41720a:	xchg   edi,eax
  41720b:	(bad)  
  41720c:	mov    bh,0x9d
  41720e:	dec    edx
  41720f:	test   eax,0xca1816fc
  417214:	je     0x41723a
  417216:	cmp    edx,edx
  417218:	adc    al,0xbb
  41721a:	pop    ebx
  41721b:	jmp    0x207476f7
  417220:	pop    ebp
  417221:	mov    cl,0x41
  417223:	sub    eax,DWORD PTR ds:0xc995f484
  417229:	pop    ecx
  41722a:	lods   eax,DWORD PTR ds:[esi]
  41722b:	dec    DWORD PTR [ebx]
  41722d:	jmp    0xa94b:0x4f6ab9e
  417234:	jl     0x417224
  417236:	ficomp DWORD PTR [edx-0x4]
  417239:	cmp    al,0x23
  41723b:	std    
  41723c:	xor    eax,0xde54bcb
  417241:	gs call 0x5dd6:0xbeb1d57b
  417249:	dec    ebp
  41724a:	cdq    
  41724b:	jle    0x41728f
  41724d:	mov    bl,0xeb
  41724f:	ja     0x4171e4
  417251:	inc    edi
  417252:	push   es
  417253:	cmp    BYTE PTR [eax-0x6f],dh
  417256:	stos   BYTE PTR es:[edi],al
  417257:	scas   eax,DWORD PTR es:[edi]
  417258:	ins    DWORD PTR es:[edi],dx
  417259:	mov    ds:0x55d177a,al
  41725e:	or     ah,BYTE PTR [edx]
  417260:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417261:	adc    al,0x81
  417263:	retf   0x310a
  417266:	and    BYTE PTR [esi-0x2c014de8],dh
  41726c:	push   ecx
  41726d:	enter  0x58f1,0xb6
  417271:	fisub  DWORD PTR [ebx-0x39dd14ee]
  417277:	(bad)  
  417278:	imul   edi,DWORD PTR [edx],0x2ffb6378
  41727e:	(bad)  
  41727f:	rcl    BYTE PTR [edx+0x6e],cl
  417282:	popf   
  417283:	sbb    ah,BYTE PTR [edi+0x5d9b4c1c]
  417289:	mov    edi,0xf2926f60
  41728e:	jae    0x41723b
  417290:	test   al,0x59
  417292:	push   esi
  417293:	out    dx,al
  417294:	ret    0xdc24
  417297:	adc    ebx,0x8ebe5e1b
  41729d:	fs (bad) 
  41729f:	push   edx
  4172a0:	hlt    
  4172a1:	xor    eax,0x59e41e81
  4172a6:	shr    DWORD PTR [esi],0x95
  4172a9:	sub    DWORD PTR [ebp+eiz*1-0x10],0x61
  4172ae:	dec    edx
  4172af:	and    eax,0x8b52b191
  4172b4:	push   es
  4172b5:	pop    ss
  4172b6:	jmp    0x4172a3
  4172b8:	cli    
  4172b9:	lock test BYTE PTR ds:0xb81359e9,bh
  4172c0:	add    dh,BYTE PTR [ebx+0x40acf31c]
  4172c6:	dec    ebx
  4172c7:	(bad)  [edx-0x54]
  4172ca:	je     0x41733f
  4172cc:	dec    ecx
  4172cd:	out    0x39,eax
  4172cf:	std    
  4172d0:	mov    edx,0xad3d666
  4172d5:	clc    
  4172d6:	xor    eax,0xfe7b8f52
  4172db:	lds    edx,FWORD PTR [esi-0x44]
  4172de:	pusha  
  4172df:	in     eax,dx
  4172e0:	sbb    eax,0xe3062f4c
  4172e5:	xor    esi,DWORD PTR [edx+0x7ff10cd2]
  4172eb:	shr    BYTE PTR [ebp+0x5df4dccd],1
  4172f1:	imul   ebp,edx,0x68
  4172f4:	sub    eax,0xcf463ce2
  4172f9:	pop    esi
  4172fa:	push   ebp
  4172fb:	fsubr  DWORD PTR [eax+eax*1]
  4172fe:	xchg   BYTE PTR [edx+0x65b16ce3],dl
  417304:	push   esi
  417305:	jo     0x417373
  417307:	dec    edi
  417308:	pop    eax
  417309:	les    ecx,FWORD PTR [edx+0x5c84db5d]
  41730f:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  417311:	pop    ecx
  417312:	mov    ?,WORD PTR [esi+0x4d]
  417315:	add    ch,BYTE PTR [edi]
  417317:	jge    0x417354
  417319:	jne    0x417366
  41731b:	in     al,0x13
  41731d:	fdivr  DWORD PTR [esi-0x22]
  417320:	jp     0x41730b
  417322:	out    dx,eax
  417323:	cli    
  417324:	inc    edx
  417325:	mov    esp,0x7cc1f4a
  41732a:	idiv   BYTE PTR [eax+0x26]
  41732d:	sahf   
  41732e:	and    dl,BYTE PTR [edi+0x3a]
  417331:	jl     0x417338
  417333:	mov    WORD PTR [ecx+0x57],?
  417336:	dec    ebx
  417337:	push   0x11
  417339:	xor    eax,0x596219df
  41733e:	xchg   ebp,eax
  41733f:	stos   BYTE PTR es:[edi],al
  417340:	xlat   BYTE PTR ds:[ebx]
  417341:	aas    
  417342:	mov    cs,edx
  417344:	pop    ebx
  417345:	jl     0x417392
  417347:	scas   eax,DWORD PTR es:[edi]
  417348:	shl    edi,cl
  41734a:	xchg   ebx,eax
  41734b:	fs inc ecx
  41734d:	repz retf 0x40b4
  417351:	pop    eax
  417352:	ja     0x41732c
  417354:	jno    0x417318
  417356:	inc    ebp
  417357:	ins    BYTE PTR es:[edi],dx
  417358:	mov    bl,0xc9
  41735a:	cmp    ebx,DWORD PTR [esi]
  41735c:	pop    ebp
  41735d:	sbb    BYTE PTR [eax+0x40],ah
  417360:	(bad)  
  417361:	shl    ch,cl
  417363:	mov    BYTE PTR [edx+0x5aff745d],dl
  417369:	cmp    BYTE PTR [edi+0x53],ch
  41736c:	mov    edx,0x5d18b2e2
  417371:	inc    ebx
  417372:	mov    edi,DWORD PTR [eax+0x4dc0e6b0]
  417378:	rcr    DWORD PTR [ebp+0x19],0x82
  41737c:	jae    0x4173ed
  41737e:	cmc    
  41737f:	xchg   edx,eax
  417380:	and    BYTE PTR [esi-0x1ca289d2],ch
  417386:	stc    
  417387:	adc    bh,dh
  417389:	inc    edx
  41738a:	push   ebp
  41738b:	mov    bl,0xe6
  41738d:	pop    ecx
  41738e:	cwde   
  41738f:	xor    al,0xbd
  417391:	(bad)  
  417392:	fist   DWORD PTR [edi+0x6e4b6495]
  417398:	pop    esp
  417399:	jmp    0xd2d9:0xfc9ffc01
  4173a0:	push   0xfffffff5
  4173a2:	test   DWORD PTR [eax+0x5bbfa6ee],ebx
  4173a8:	push   esi
  4173a9:	inc    edi
  4173aa:	xchg   esp,eax
  4173ab:	cdq    
  4173ac:	adc    BYTE PTR [edx+0x31dbe4f],bh
  4173b2:	std    
  4173b3:	fs push 0x48d62559
  4173b9:	cmp    edx,esi
  4173bb:	xor    eax,0xa84b60c3
  4173c0:	popf   
  4173c1:	pop    esi
  4173c2:	(bad)  
  4173c3:	and    ebx,esi
  4173c5:	jb     0x417390
  4173c7:	(bad)  
  4173c8:	jmp    0x279f:0x39804b8b
  4173cf:	push   ebp
  4173d0:	pop    ds
  4173d1:	dec    DWORD PTR [ebx+0x41]
  4173d4:	adc    edi,0x8059fb1e
  4173da:	jbe    0x4173e9
  4173dc:	sar    BYTE PTR [edi-0x6f],0x43
  4173e0:	pop    cx
  4173e2:	data16 jne 0x417396
  4173e5:	push   esi
  4173e6:	jmp    0x4653d132
  4173eb:	js     0x41736d
  4173ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173ef:	popf   
  4173f0:	xor    BYTE PTR [ebp+0x78],cl
  4173f3:	mov    ah,0xad
  4173f5:	pop    esp
  4173f6:	sub    edx,edx
  4173f8:	mov    ds:0x8d815e18,eax
  4173fd:	inc    ecx
  4173fe:	cmp    ecx,DWORD PTR ds:0xf8d8d55c
  417404:	(bad)  
  417405:	adc    BYTE PTR [edi+esi*1-0x7d1dddef],0x73
  41740d:	pop    ecx
  41740e:	fld    TBYTE PTR [eax]
  417410:	jae    0x417482
  417412:	shl    ebp,1
  417414:	xor    al,0x4a
  417417:	push   esp
  417418:	ret    
  417419:	cmp    esi,DWORD PTR [ebp+0x30]
  41741c:	ja     0x417484
  41741e:	push   edx
  41741f:	shl    BYTE PTR [eax],cl
  417421:	sbb    ecx,DWORD PTR [edi]
  417423:	out    0x27,eax
  417425:	aam    0x40
  417427:	pop    eax
  417428:	pop    esp
  417429:	dec    ecx
  41742a:	xor    eax,edi
  41742c:	mov    ebp,0x9d8a8a0c
  417431:	xchg   esp,eax
  417432:	or     BYTE PTR [edi+0x7f],ch
  417435:	sub    DWORD PTR [ebx-0x22a63440],ebx
  41743b:	ja     0x4174af
  41743d:	inc    ebp
  41743e:	imul   edx,DWORD PTR [ebp+esi*2+0x3744b8c],0x29
  417446:	not    BYTE PTR [edi-0x17]
  417449:	fimul  DWORD PTR [ebx-0x2e]
  41744c:	mov    eax,cs:0xea27d6b4
  417452:	(bad)  
  417453:	dec    ecx
  417454:	pop    ebp
  417455:	ds jg  0x4173f6
  417458:	retf   0xccb
  41745b:	das    
  41745c:	out    0x6e,eax
  41745e:	es repnz add eax,0x57afcf46
  417465:	inc    eax
  417466:	cmp    BYTE PTR [edx-0x41889a2],0xd2
  41746d:	(bad)  
  41746f:	in     eax,dx
  417470:	inc    edx
  417471:	test   eax,0x59440536
  417476:	mul    DWORD PTR [ebx-0x5f]
  417479:	stos   BYTE PTR es:[edi],al
  41747a:	xchg   ecx,eax
  41747b:	in     al,0xc6
  41747d:	xchg   ebp,eax
  41747e:	dec    edx
  41747f:	imul   edx,DWORD PTR [esi],0xffffffda
  417482:	sub    DWORD PTR [ebx+0x26],ebx
  417485:	loopne 0x4174b9
  417487:	fisttp WORD PTR [esi-0xcedab49]
  41748d:	lahf   
  41748e:	cld    
  41748f:	push   ss
  417490:	jle    0x41749b
  417492:	dec    ebx
  417493:	mov    dh,0x48
  417495:	xor    ecx,esi
  417497:	rol    DWORD PTR [ecx+0x4ad2f850],0xef
  41749e:	mov    ch,BYTE PTR [esi]
  4174a0:	mov    eax,DWORD PTR [ebp+0x39]
  4174a3:	mov    ah,0x43
  4174a5:	adc    al,0x27
  4174a7:	mov    ebx,DWORD PTR [ebp+0x45]
  4174aa:	add    edi,esp
  4174ac:	(bad)  
  4174ad:	int    0x79
  4174af:	clc    
  4174b0:	shl    DWORD PTR [edi],cl
  4174b2:	dec    ebx
  4174b3:	push   cs
  4174b4:	and    eax,0x340766a8
  4174b9:	in     al,0x5d
  4174bb:	xor    ebp,0x2c52e362
  4174c1:	hlt    
  4174c2:	pop    edi
  4174c3:	gs int3 
  4174c5:	shl    DWORD PTR [edx],1
  4174c7:	int3   
  4174c8:	repz inc ecx
  4174ca:	fscale 
  4174cc:	pop    ebp
  4174cd:	popf   
  4174ce:	inc    ebp
  4174cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174d0:	push   ss
  4174d1:	in     eax,0x4b
  4174d3:	imul   edi,eax,0xcfc4c8b0
  4174d9:	cmp    BYTE PTR [ebx+0x37],bl
  4174dc:	cmp    DWORD PTR [esi+0x14],eax
  4174df:	fcmovu st,st(3)
  4174e1:	dec    esp
  4174e2:	or     BYTE PTR [ecx+edi*8+0x69672e72],ch
  4174e9:	pop    edx
  4174ea:	adc    ch,BYTE PTR [eax]
  4174ec:	add    ebp,DWORD PTR [edx]
  4174ee:	outs   dx,DWORD PTR ds:[esi]
  4174ef:	jnp    0x4174af
  4174f1:	mov    eax,0x5b3bd658
  4174f6:	cwde   
  4174f7:	retf   
  4174f8:	into   
  4174f9:	pushf  
  4174fa:	rcr    BYTE PTR [edi],cl
  4174fc:	adc    ah,BYTE PTR [eax+0xf9ba14a]
  417502:	outs   dx,DWORD PTR ds:[esi]
  417503:	sahf   
  417504:	leave  
  417505:	dec    edi
  417506:	pop    ds
  417507:	shl    BYTE PTR [ebx+0x409360be],cl
  41750d:	js     0x4174f9
  41750f:	sub    edi,DWORD PTR [edi]
  417511:	push   ebx
  417512:	dec    ebx
  417513:	mov    ecx,0x386659d
  417518:	add    DWORD PTR [ebp+0x1a],esi
  41751b:	sar    BYTE PTR [ecx+0x3f],cl
  41751e:	out    dx,eax
  41751f:	mov    edi,0x3b550d81
  417524:	pop    ebp
  417525:	int    0x9d
  417527:	dec    edx
  417528:	lods   al,BYTE PTR ds:[esi]
  417529:	adc    esp,DWORD PTR [ebx]
  41752b:	lock arpl WORD PTR [esi+0x59a7351a],sp
  417532:	pop    ecx
  417533:	pop    ecx
  417534:	jle    0x41750c
  417536:	pop    ebx
  417537:	xchg   ebp,eax
  417538:	int3   
  417539:	les    eax,FWORD PTR [ecx-0x1c]
  41753c:	out    dx,al
  41753d:	js     0x41758a
  41753f:	xor    al,0x97
  417541:	nop
  417542:	retf   0x48ad
  417545:	push   ds
  417546:	int3   
  417547:	rcr    DWORD PTR [ebp-0x26],0x4d
  41754b:	or     eax,0xe869aff4
  417550:	pop    ebp
  417551:	inc    eax
  417552:	icebp  
  417553:	hlt    
  417554:	dec    esp
  417555:	test   ebp,ebx
  417557:	xchg   DWORD PTR [ebp+0x1f1e3b55],ebp
  41755d:	pop    ecx
  41755e:	add    cl,BYTE PTR ds:0x9376ca67
  417564:	stc    
  417565:	dec    esp
  417566:	push   ecx
  417567:	add    ah,BYTE PTR ds:0xa77213da
  41756d:	in     eax,dx
  41756e:	daa    
  41756f:	push   eax
  417570:	fistp  WORD PTR [edx-0x58]
  417573:	sub    eax,0x7b262d6f
  417578:	pop    ebp
  417579:	add    edi,DWORD PTR [eax+0x1c]
  41757c:	shl    BYTE PTR ds:[eax+ecx*1+0x20cf6a0b],1
  417584:	retf   
  417585:	cdq    
  417586:	xor    BYTE PTR [edx+0x0],dh
  417589:	jb     0x417556
  41758b:	test   BYTE PTR [esp+edi*2-0x66],bl
  41758f:	neg    BYTE PTR [ebp-0x2d58b558]
  417595:	(bad)  
  417596:	pop    ecx
  417597:	mov    al,0x17
  417599:	mov    ebx,0x59f4ae09
  41759e:	call   DWORD PTR [ecx-0xec8a7a8]
  4175a4:	jbe    0x41755f
  4175a6:	dec    edx
  4175a7:	repz cmp BYTE PTR [ebx+0x4ec0643c],ah
  4175ae:	ja     0x417586
  4175b0:	imul   ebx,DWORD PTR [ebx],0xbbce3186
  4175b6:	mov    edx,0x4aac3a5e
  4175bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175bc:	or     al,0xb7
  4175be:	stos   BYTE PTR es:[edi],al
  4175bf:	jo     0x41760a
  4175c1:	imul   ebx,DWORD PTR [edi],0x11ef6dd2
  4175c7:	(bad)  
  4175c8:	fdivp  st(6),st
  4175ca:	mov    ds:0xf49b5661,eax
  4175cf:	retf   
  4175d0:	cwde   
  4175d1:	add    ecx,ebx
  4175d3:	(bad)  
  4175d4:	and    edi,esp
  4175d6:	dec    eax
  4175d7:	shl    BYTE PTR [eax],cl
  4175d9:	sub    DWORD PTR [esi-0x77],0x315b06e9
  4175e0:	jns    0x4175b8
  4175e2:	int    0x53
  4175e4:	jge    0x417581
  4175e6:	nop
  4175e7:	adc    al,0xe6
  4175e9:	lods   eax,DWORD PTR ds:[esi]
  4175ea:	jns    0x417667
  4175ec:	ja     0x4175e9
  4175ee:	(bad)  
  4175f0:	xor    ebp,DWORD PTR [ecx+0x46]
  4175f3:	mov    dh,0x7b
  4175f5:	cmp    bl,ah
  4175f7:	push   edx
  4175f8:	push   edx
  4175f9:	cmp    al,0x1c
  4175fb:	mov    cl,0xb4
  4175fd:	cld    
  4175fe:	cdq    
  4175ff:	dec    edx
  417600:	push   edx
  417601:	in     eax,0x71
  417603:	into   
  417604:	jb     0x417586
  417606:	rol    DWORD PTR [eax+0x52408aef],cl
  41760c:	adc    eax,0x96894f36
  417611:	fisub  WORD PTR [ebx]
  417613:	mov    ds,WORD PTR [edi+0x5dd5e3c9]
  417619:	out    dx,al
  41761a:	jbe    0x417613
  41761c:	scas   al,BYTE PTR es:[edi]
  41761d:	outs   dx,DWORD PTR ds:[esi]
  41761e:	(bad)  
  41761f:	outs   dx,BYTE PTR ds:[esi]
  417620:	fistp  WORD PTR [ecx+0xe]
  417623:	push   ss
  417624:	std    
  417625:	jb     0x41765d
  417627:	enter  0x8065,0x4a
  41762b:	jle    0x4175f4
  41762d:	push   0xe5eab167
  417632:	xchg   esi,eax
  417633:	stos   BYTE PTR es:[edi],al
  417634:	jnp    0x41768f
  417636:	mov    ch,0xde
  417638:	enter  0x36a5,0x46
  41763c:	mov    ch,0x3
  41763e:	dec    ebx
  41763f:	mov    ebx,0x886dd2fb
  417644:	aas    
  417645:	or     DWORD PTR [ecx],eax
  417647:	jmp    0x545a:0xdc856e6f
  41764e:	stc    
  41764f:	adc    esp,DWORD PTR [eax-0x6bdff985]
  417655:	mov    cl,0x49
  417657:	fwait
  417658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417659:	into   
  41765a:	dec    edx
  41765b:	lahf   
  41765c:	push   fs
  41765e:	imul   edx,DWORD PTR ds:0xd2b7517c,0x22fe2dfc
  417668:	xor    ch,BYTE PTR [ebx-0x69a38073]
  41766e:	call   0xd5c:0xc6b882ea
  417675:	inc    ebx
  417676:	push   0xffffffa9
  417678:	mov    bl,BYTE PTR [ecx-0x55]
  41767b:	jl     0x41764f
  41767d:	jp     0x41760e
  41767f:	out    dx,al
  417680:	mov    ds:0x7c124ae4,eax
  417685:	(bad)  
  417687:	xchg   esp,eax
  417688:	jno    0x4176cd
  41768a:	sar    BYTE PTR [ecx],cl
  41768c:	into   
  41768d:	pop    ecx
  41768e:	shl    DWORD PTR [ecx],1
  417690:	paddd  mm2,QWORD PTR [esi]
  417693:	or     eax,ecx
  417695:	les    edx,FWORD PTR [ebx+0x5e]
  417698:	mov    bl,0x67
  41769a:	push   ebx
  41769b:	aad    0x7a
  41769d:	push   ebx
  41769e:	and    DWORD PTR [esi+0x10],edx
  4176a1:	push   edi
  4176a2:	mov    edx,DWORD PTR [ecx+edx*2]
  4176a5:	gs lock in al,dx
  4176a8:	jbe    0x4176f0
  4176aa:	(bad)  
  4176ab:	ror    BYTE PTR [eax+0x71a7692a],cl
  4176b1:	das    
  4176b2:	dec    ebx
  4176b3:	mov    bl,0xe1
  4176b5:	cmp    BYTE PTR [ebx+0x48b836ca],dl
  4176bb:	aas    
  4176bc:	not    BYTE PTR [edi+0x66]
  4176bf:	jle    0x4176e5
  4176c1:	xchg   BYTE PTR [esi-0x622fd9d],al
  4176c7:	xchg   ecx,eax
  4176c8:	jle    0x4176d7
  4176ca:	cmp    BYTE PTR gs:[esi+0x1f],bh
  4176ce:	js     0x417723
  4176d0:	test   ch,cl
  4176d2:	add    al,0x96
  4176d4:	mov    BYTE PTR [esi-0x63],dh
  4176d7:	ror    BYTE PTR [edi+eiz*2-0x36bd2944],cl
  4176de:	or     ch,bl
  4176e0:	pop    ebp
  4176e1:	sar    DWORD PTR [edi+eax*8],cl
  4176e4:	not    BYTE PTR [ecx+0x71]
  4176e7:	mov    cl,0xdf
  4176e9:	ss retf 
  4176eb:	int3   
  4176ec:	cli    
  4176ed:	ret    
  4176ee:	dec    esi
  4176ef:	inc    ebx
  4176f0:	mov    ebp,0x14760866
  4176f5:	sbb    DWORD PTR [edx+0x7b],0x5d
  4176f9:	mov    esp,0x8217cd25
  4176fe:	repnz adc DWORD PTR [ecx-0x6b799ba2],ecx
  417705:	cmp    eax,0xae8fa21f
  41770a:	in     al,0x6e
  41770c:	pop    ebp
  41770d:	jmp    0x417768
  41770f:	ret    
  417710:	mov    ss,edi
  417712:	call   0xa511:0xe2597cc4
  417719:	ret    
  41771a:	push   es
  41771b:	das    
  41771c:	dec    ebp
  41771d:	out    dx,eax
  41771e:	dec    edx
  41771f:	in     al,dx
  417720:	sub    al,0xb2
  417722:	(bad)  
  417723:	ss dec ecx
  417725:	pop    ecx
  417726:	in     al,dx
  417727:	shr    BYTE PTR [ebx+0x7445433f],cl
  41772d:	test   DWORD PTR [ebx-0x34],0x545a85d
  417734:	addr16 xor eax,0x59931e4a
  41773a:	dec    esi
  41773b:	pop    es
  41773c:	adc    DWORD PTR [esi],esp
  41773e:	das    
  41773f:	(bad)  
  417740:	sbb    BYTE PTR [edx+ecx*2+0x6e7caddf],bh
  417747:	lods   eax,DWORD PTR ds:[esi]
  417748:	rcl    ebx,1
  41774a:	stos   DWORD PTR es:[edi],eax
  41774b:	shl    BYTE PTR [esp+ecx*2],cl
  41774e:	sub    ebp,ebx
  417750:	clc    
  417751:	fwait
  417752:	scas   al,BYTE PTR es:[edi]
  417753:	mov    WORD PTR [edx+0x1e],ss
  417756:	std    
  417757:	mov    edx,0xa2db83eb
  41775c:	ins    BYTE PTR es:[edi],dx
  41775d:	dec    ecx
  41775e:	cld    
  41775f:	shl    BYTE PTR [edi-0xb],cl
  417762:	jbe    0x4177a0
  417764:	jno    0x4177de
  417766:	clc    
  417767:	sbb    BYTE PTR [ebp+0x54],0x3
  41776b:	fstp   QWORD PTR [edx+ecx*4]
  41776e:	sub    edi,ebx
  417770:	push   eax
  417771:	pop    ecx
  417772:	nop
  417773:	sbb    BYTE PTR [ebx],bh
  417775:	mov    esi,0xdccc1d7b
  41777a:	dec    edx
  41777b:	jmp    0x26d6a60b
  417780:	inc    edi
  417781:	out    0x82,al
  417783:	rol    BYTE PTR [esi-0x28],cl
  417786:	jp     0x417775
  417788:	iret   
  417789:	jne    0x417736
  41778b:	neg    BYTE PTR [eax+0x2c]
  41778e:	lahf   
  41778f:	xchg   edx,eax
  417790:	pop    ebp
  417791:	push   ss
  417792:	or     BYTE PTR [edx-0x76],0x36
  417796:	aas    
  417797:	fcom   QWORD PTR [ecx]
  417799:	jae    0x4177ec
  41779b:	adc    eax,0x42ab8281
  4177a0:	les    ebp,FWORD PTR [ebx]
  4177a2:	scas   eax,DWORD PTR es:[edi]
  4177a3:	push   ebp
  4177a4:	pop    ebp
  4177a5:	lods   al,BYTE PTR ds:[esi]
  4177a6:	cmp    DWORD PTR [ecx+0x197ab3a7],0xffffff9f
  4177ad:	outs   dx,DWORD PTR ds:[esi]
  4177ae:	dec    esi
  4177af:	stos   BYTE PTR es:[edi],al
  4177b0:	mov    edx,0x5cd2c56f
  4177b5:	mov    ch,0x53
  4177b7:	dec    eax
  4177b8:	and    al,0xee
  4177ba:	dec    edx
  4177bb:	(bad)  
  4177bc:	dec    esi
  4177bd:	or     eax,0x4ddc0a1b
  4177c2:	jmp    0x678d:0xfe57af38
  4177c9:	pop    edx
  4177ca:	push   0x44
  4177cc:	mov    esp,0x2561d349
  4177d1:	add    cl,BYTE PTR [ebx-0x3c]
  4177d4:	mov    ah,0x90
  4177d6:	lea    edi,[ecx]
  4177d8:	mov    ds:0xc7dc2554,al
  4177dd:	mov    edi,0xa8f23952
  4177e3:	daa    
  4177e4:	addr16 in al,0x4a
  4177e7:	xchg   esi,eax
  4177e8:	sbb    BYTE PTR [ecx+0x364a939d],ah
  4177ee:	ja     0x4177c3
  4177f0:	daa    
  4177f1:	fiadd  DWORD PTR [ebp+0xb0e3a4a]
  4177f7:	fwait
  4177f8:	pop    ebp
  4177f9:	aad    0x16
  4177fb:	push   0x5070f26b
  417800:	sbb    DWORD PTR [ecx+0x18],0x62
  417804:	mov    ds:0x6ffc2f33,eax
  417809:	je     0x417856
  41780b:	(bad)
  41780e:	fistp  DWORD PTR [edx+0xc]
  417811:	xchg   ebx,eax
  417812:	stc    
  417813:	shr    ah,cl
  417815:	mov    edx,fs
  417817:	push   ebx
  417818:	daa    
  417819:	adc    BYTE PTR [ebp+0x4ffc532c],0xb1
  417820:	inc    ecx
  417821:	fisubr DWORD PTR [edx+0x53]
  417824:	fucomi st,st(3)
  417826:	call   0x1f7882d1
  41782b:	mov    esi,0xf2a7596e
  417830:	add    al,0xef
  417832:	jmp    0x41789e
  417834:	mul    DWORD PTR [ecx+edx*2-0x4ee5b001]
  41783b:	adc    dl,BYTE PTR [eax+0x7be81904]
  417841:	pop    edx
  417842:	gs push esi
  417844:	aam    0x6c
  417846:	push   esp
  417847:	xchg   ebp,edi
  417849:	fcomp  DWORD PTR [ebp-0x1254a244]
  41784f:	jle    0x4177d4
  417851:	push   esi
  417852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417853:	mov    al,0x2b
  417855:	ja     0x4178c3
  417857:	jae    0x417836
  417859:	jg     0x417831
  41785b:	sbb    al,0xe4
  41785d:	sub    BYTE PTR [eax+edi*2+0x755c965d],cl
  417864:	test   BYTE PTR [eax+0x35f4c54f],cl
  41786a:	jmp    0x41784c
  41786c:	pop    eax
  41786d:	ins    BYTE PTR es:[edi],dx
  41786e:	test   dl,dl
  417870:	out    dx,al
  417871:	sub    eax,0xf7825116
  417876:	fs pop bp
  417879:	sbb    BYTE PTR [ebx],bl
  41787b:	sub    ecx,DWORD PTR [esi-0x74bbc4d0]
  417881:	pop    ecx
  417882:	in     eax,dx
  417883:	sbb    bh,0x52
  417886:	aas    
  417887:	sahf   
  417888:	or     DWORD PTR [esi],0xffffff82
  41788b:	and    bh,BYTE PTR [eax]
  41788d:	(bad)  
  41788e:	mov    ds:0x1f0cf16f,al
  417893:	mov    esp,?
  417895:	pop    ecx
  417896:	sbb    ebx,DWORD PTR [esp+ebx*1]
  417899:	cmp    ah,BYTE PTR [edi]
  41789b:	shl    BYTE PTR [edx],0x4a
  41789e:	adc    ebx,DWORD PTR [edx-0x324da60e]
  4178a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178a5:	fist   WORD PTR [ebp+0x5c]
  4178a8:	neg    BYTE PTR [ecx+0x14]
  4178ab:	pop    ecx
  4178ac:	sbb    BYTE PTR [esi-0x59],dl
  4178af:	ds repnz ss dec edx
  4178b3:	iret   
  4178b4:	mov    WORD PTR [ecx+ecx*1],ss
  4178b7:	ret    0xc6b2
  4178ba:	and    al,0x7a
  4178bc:	loope  0x4178af
  4178be:	add    eax,0xfdd3cfdc
  4178c3:	push   edx
  4178c4:	mov    ecx,DWORD PTR [ebx]
  4178c6:	xchg   ebx,eax
  4178c7:	inc    eax
  4178c8:	popa   
  4178c9:	and    DWORD PTR [ebx],esp
  4178cb:	(bad)  
  4178cc:	repz fst DWORD PTR [ebx+eiz*8]
  4178d0:	mov    edi,0x500dfbba
  4178d5:	pop    ecx
  4178d6:	xor    BYTE PTR [ebx],ch
  4178d8:	xchg   BYTE PTR [ebx+0x4a6ece1a],dh
  4178de:	push   edx
  4178df:	(bad)  
  4178e0:	aas    
  4178e1:	mov    cl,0x23
  4178e3:	in     eax,dx
  4178e4:	out    dx,al
  4178e5:	mov    edi,0x5999ecdf
  4178ea:	(bad)  
  4178eb:	dec    edi
  4178ec:	or     dl,bl
  4178ee:	mov    edx,0x4b3e5b5f
  4178f3:	fwait
  4178f4:	daa    
  4178f5:	fist   WORD PTR [edx]
  4178f7:	xor    BYTE PTR [edx],dh
  4178f9:	data16 mov bh,0xd5
  4178fc:	push   0xe
  4178fe:	nop
  4178ff:	inc    edx
  417900:	stc    
  417901:	sbb    DWORD PTR [edi+esi*2-0x70],ebp
  417905:	aad    0x4a
  417907:	(bad)  
  417908:	enter  0x51ca,0xfa
  41790c:	leave  
  41790d:	fs mov cl,0xd2
  417910:	out    0x34,eax
  417912:	xor    al,0xbd
  417914:	shl    BYTE PTR [esi],0x2
  417917:	push   0x5d
  417919:	dec    eax
  41791a:	or     DWORD PTR [edx-0x55],edx
  41791d:	fild   WORD PTR [eax]
  41791f:	mov    bl,BYTE PTR [ebx-0x315c41a2]
  417925:	sub    ecx,DWORD PTR [esi+0x3f82e312]
  41792b:	and    bl,BYTE PTR [esi+0x4a]
  41792e:	mov    DWORD PTR [ebp+0x40f93b38],eax
  417934:	scas   eax,DWORD PTR es:[edi]
  417935:	add    ebp,0x27a3443a
  41793b:	rcr    BYTE PTR [ebx+0x148da7da],cl
  417941:	mov    al,ds:0xff5d9a87
  417946:	pop    ebp
  417947:	cmc    
  417948:	retf   
  417949:	adc    DWORD PTR [ecx],eax
  41794b:	pop    ecx
  41794c:	dec    eax
  41794d:	pop    ecx
  41794e:	mov    al,0xc7
  417950:	stos   BYTE PTR es:[edi],al
  417951:	mov    cs,WORD PTR [ebp+0x7e]
  417954:	mov    cl,0xb1
  417956:	jns    0x41798c
  417958:	pop    ebp
  417959:	(bad)  
  41795a:	cmp    BYTE PTR [ebp+esi*1+0x50381307],dl
  417961:	pop    ecx
  417962:	cld    
  417963:	scas   al,BYTE PTR es:[edi]
  417964:	test   ch,0x32
  417967:	adc    al,0xad
  417969:	and    eax,0xc1b9254b
  41796e:	sti    
  41796f:	pop    edi
  417970:	in     al,0x70
  417972:	mov    edx,edx
  417974:	sub    eax,0xcbe73a27
  417979:	cwde   
  41797a:	mov    bl,0x1
  41797c:	(bad)  
  41797d:	jbe    0x41791f
  41797f:	inc    ecx
  417980:	push   esi
  417981:	retf   0xb7ca
  417984:	sub    eax,0x55ad143
  417989:	inc    esi
  41798a:	xchg   edi,eax
  41798b:	mov    dh,BYTE PTR [edi+0x1a]
  41798e:	jp     0x4179ad
  417990:	repnz fmul DWORD PTR [edx+0x12]
  417994:	test   al,0x14
  417996:	scas   eax,DWORD PTR es:[edi]
  417997:	jmp    0xf60b:0xfd2872a5
  41799e:	sub    eax,0x9c7f5db3
  4179a3:	jae    0x41793f
  4179a5:	iret   
  4179a6:	xor    ecx,0xd2555664
  4179ac:	and    DWORD PTR [ebx],0xd6945d9
  4179b2:	adc    eax,eax
  4179b4:	add    eax,DWORD PTR [esi+0x4a]
  4179b7:	push   ebx
  4179b8:	xor    al,0xef
  4179ba:	retf   0x10e2
  4179bd:	jne    0x417a0a
  4179bf:	daa    
  4179c0:	push   edi
  4179c1:	cwde   
  4179c2:	aam    0x99
  4179c4:	retf   
  4179c5:	sti    
  4179c6:	add    dl,dl
  4179c8:	aas    
  4179c9:	add    ebp,DWORD PTR [ebx-0x15]
  4179cc:	push   ss
  4179cd:	aas    
  4179ce:	popf   
  4179cf:	rcr    BYTE PTR [ebp-0x4a],1
  4179d2:	xchg   ebx,edi
  4179d4:	js     0x417a3e
  4179d6:	je     0x4179d3
  4179d8:	outs   dx,DWORD PTR ds:[esi]
  4179d9:	pop    ecx
  4179da:	(bad)  
  4179db:	push   esi
  4179dc:	xchg   ebp,eax
  4179dd:	and    BYTE PTR [edx],cl
  4179df:	mov    edx,0x9c50d6e8
  4179e4:	add    BYTE PTR [ecx+0x25755290],ch
  4179ea:	jnp    0x41796e
  4179ec:	pop    ebx
  4179ed:	pop    ecx
  4179ee:	fsubr  DWORD PTR [ebx]
  4179f0:	cli    
  4179f1:	or     eax,DWORD PTR [edi-0x199c03b5]
  4179f7:	mov    cl,0x5d
  4179f9:	fbstp  TBYTE PTR [ecx+0x5383b920]
  4179ff:	out    0xbd,eax
  417a01:	icebp  
  417a02:	int    0xd2
  417a04:	add    al,0x3
  417a06:	mov    edx,0x9efd4f1f
  417a0b:	shr    ebp,cl
  417a0d:	dec    edx
  417a0e:	pop    ss
  417a0f:	(bad)  
  417a10:	into   
  417a11:	pop    ecx
  417a12:	xchg   edi,eax
  417a13:	xchg   edx,eax
  417a14:	xor    al,0xe0
  417a16:	scas   al,BYTE PTR es:[edi]
  417a17:	xor    al,0x17
  417a19:	inc    esi
  417a1a:	out    0xdd,eax
  417a1c:	cs jbe 0x4179f3
  417a1f:	mov    esi,0x2e6d20cb
  417a24:	pop    ebp
  417a25:	scas   al,BYTE PTR es:[edi]
  417a26:	and    al,0x44
  417a29:	cdq    
  417a2a:	and    BYTE PTR [ebx],ah
  417a2c:	test   al,0x70
  417a2e:	add    eax,0xf78dd0b4
  417a33:	xchg   ebx,eax
  417a34:	pop    ecx
  417a35:	cdq    
  417a36:	mov    dh,BYTE PTR [edi+0x3e511222]
  417a3c:	xchg   ebp,eax
  417a3d:	ins    DWORD PTR es:[edi],dx
  417a3e:	add    dh,bl
  417a40:	push   es
  417a41:	add    al,0x91
  417a43:	inc    esp
  417a44:	add    eax,0x8fd369fe
  417a49:	push   edi
  417a4a:	jo     0x417a46
  417a4c:	mov    ah,0x3a
  417a4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a4f:	inc    ebp
  417a50:	pop    edi
  417a51:	nop
  417a52:	push   ebx
  417a53:	ins    DWORD PTR es:[edi],dx
  417a54:	pop    ebp
  417a55:	sbb    eax,DWORD PTR [eax+0x5f7c0fbe]
  417a5b:	ror    DWORD PTR [ebx],cl
  417a5d:	ret    0xcdf3
  417a60:	pop    ecx
  417a61:	dec    esi
  417a62:	lods   al,BYTE PTR ds:[esi]
  417a63:	mov    ds:0xaec0b95d,al
  417a68:	fdiv   DWORD PTR [edi-0x80]
  417a6b:	jle    0x417a9e
  417a6d:	inc    esi
  417a6e:	mov    dl,al
  417a70:	pop    es
  417a71:	les    ebx,FWORD PTR [ebp-0x23]
  417a74:	jo     0x417a96
  417a76:	dec    ebx
  417a77:	pushf  
  417a78:	xor    bl,al
  417a7a:	add    DWORD PTR [esi-0x2a590bf6],ebp
  417a80:	mov    dl,0x8b
  417a82:	sub    esp,ecx
  417a84:	and    DWORD PTR [esi],esi
  417a86:	adc    DWORD PTR [esp+ebp*1+0x2d],esi
  417a8a:	inc    esi
  417a8b:	xor    al,0xfc
  417a8d:	fs dec ebx
  417a8f:	xchg   DWORD PTR [edx],edi
  417a91:	les    ebx,FWORD PTR [ecx-0xfa60418]
  417a97:	cmovl  esi,DWORD PTR [eax]
  417a9a:	aad    0xab
  417a9c:	std    
  417a9d:	imul   edx,DWORD PTR [ecx+edi*2+0x64],0x4f
  417aa2:	xor    DWORD PTR [ebx-0x4a788a8f],0x2a
  417aa9:	ds xor edx,edx
  417aac:	jae    0x417a77
  417aae:	sub    ah,BYTE PTR [edi-0x240984da]
  417ab4:	test   DWORD PTR [edx],esp
  417ab6:	jo     0x417a82
  417ab8:	in     eax,dx
  417ab9:	cmc    
  417aba:	xor    DWORD PTR [eax-0x3],0x8d93c063
  417ac1:	shl    DWORD PTR [ecx+0x48926ad2],1
  417ac7:	or     bl,BYTE PTR [ebx-0x1c]
  417aca:	lods   al,BYTE PTR ds:[esi]
  417acb:	mov    al,ds:0xd251a978
  417ad0:	(bad)  
  417ad1:	pop    edx
  417ad2:	repnz inc edi
  417ad4:	retf   0xf300
  417ad7:	rcl    BYTE PTR ds:0xbda49270,cl
  417add:	push   ecx
  417ade:	aaa    
  417adf:	sub    ebx,DWORD PTR [ebp+0x7f]
  417ae2:	daa    
  417ae3:	xor    eax,0x6a6ad30c
  417ae8:	lea    esp,[ebx-0x7e0e212a]
  417aee:	adc    esp,DWORD PTR [esi-0x3a]
  417af1:	les    eax,FWORD PTR [eax+0x6]
  417af4:	bound  ebx,QWORD PTR [ecx-0x178485f3]
  417afa:	jb     0x417b64
  417afc:	pop    ebp
  417afd:	ins    DWORD PTR es:[edi],dx
  417afe:	sahf   
  417aff:	aam    0xc1
  417b01:	fadd   QWORD PTR [esi+ecx*2-0x44d1a622]
  417b08:	pop    ds
  417b09:	rcl    BYTE PTR [ebx+0x4b0c1b40],0x73
  417b10:	aas    
  417b11:	inc    BYTE PTR [eax]
  417b13:	scas   eax,DWORD PTR es:[edi]
  417b14:	or     esp,DWORD PTR [edx-0x6d]
  417b17:	inc    edi
  417b18:	imul   edx,DWORD PTR [edi+0x1b],0xfffffffe
  417b1c:	mov    ch,0x9e
  417b1e:	or     DWORD PTR [ecx],edx
  417b20:	mov    BYTE PTR [ecx-0x54496369],bl
  417b26:	push   eax
  417b27:	mov    ecx,0x9e18b7c6
  417b2c:	pop    ebp
  417b2d:	repz cmp al,0x47
  417b30:	pop    ss
  417b31:	js     0x417b76
  417b33:	mov    ah,0xed
  417b35:	pop    ecx
  417b36:	cmc    
  417b37:	out    dx,eax
  417b38:	adc    BYTE PTR [edi-0x5d],dh
  417b3b:	dec    edx
  417b3c:	ficomp WORD PTR [ebp+0x4b]
  417b3f:	aaa    
  417b40:	gs dec edx
  417b42:	arpl   WORD PTR [edx-0x2d6375a8],ax
  417b48:	pop    esi
  417b49:	scas   al,BYTE PTR es:[edi]
  417b4a:	iret   
  417b4b:	jo     0x417b74
  417b4d:	pop    edi
  417b4e:	jns    0x417bbc
  417b50:	jnp    0x417b3a
  417b52:	mov    edi,0x735d89d2
  417b57:	add    al,0x3
  417b59:	sbb    eax,0x59f8baa8
  417b5e:	cmp    DWORD PTR [eax+0x29],esp
  417b61:	cdq    
  417b62:	popa   
  417b63:	rcr    ecx,0xe7
  417b66:	dec    edx
  417b67:	jecxz  0x417bb6
  417b69:	(bad)  
  417b6a:	div    DWORD PTR [ebx]
  417b6c:	add    al,dh
  417b6e:	push   edi
  417b6f:	rol    BYTE PTR [edi+0x1b],cl
  417b72:	mov    edi,0xffd6b94d
  417b77:	retf   
  417b78:	mov    edx,0x58e0c317
  417b7d:	mov    ch,0x42
  417b7f:	jnp    0x417b9e
  417b81:	cmp    esi,esp
  417b83:	mov    edi,0xcc95cde9
  417b88:	in     eax,0x1c
  417b8a:	icebp  
  417b8b:	loopne 0x417bca
  417b8d:	mov    ds:0xd4944a36,eax
  417b92:	and    dl,BYTE PTR [eax+eax*8-0x3b]
  417b96:	ret    
  417b97:	cmp    al,0x76
  417b99:	rol    DWORD PTR [ebx],0xe1
  417b9c:	xor    DWORD PTR [eax+ebx*2-0x30],ebp
  417ba0:	test   eax,0xdc44fa3
  417ba5:	xchg   ebx,eax
  417ba6:	mov    ds:0x48541738,al
  417bab:	jmp    0x417bd6
  417bad:	and    BYTE PTR [edi],cl
  417baf:	in     al,0xdd
  417bb1:	repz data16 jns 0x417c02
  417bb5:	pop    ecx
  417bb6:	sbb    esp,ebp
  417bb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417bb9:	sbb    DWORD PTR [ebx+0x28d8069a],ebx
  417bbf:	push   ebx
  417bc0:	push   esp
  417bc1:	leave  
  417bc2:	dec    edx
  417bc3:	push   es
  417bc4:	call   0x3459:0xaeabc496
  417bcb:	jp     0x417b7d
  417bcd:	daa    
  417bce:	fwait
  417bcf:	or     esi,DWORD PTR ds:0x5df1e63c
  417bd5:	in     al,dx
  417bd6:	int    0xf6
  417bd8:	inc    eax
  417bd9:	scas   al,BYTE PTR es:[edi]
  417bda:	in     eax,dx
  417bdb:	jmp    0xd5cad64d
  417be0:	outs   dx,DWORD PTR ds:[esi]
  417be1:	sbb    al,0x54
  417be3:	xor    eax,0xb11594e5
  417be8:	dec    ecx
  417be9:	cmp    cl,BYTE PTR [ebx+0x44]
  417bec:	test   cl,bl
  417bee:	call   0x93d2:0x8a657f03
  417bf5:	adc    eax,0x4be1d70a
  417bfa:	addr16 and al,0x5d
  417bfd:	(bad)  
  417bfe:	xchg   esi,eax
  417bff:	loope  0x417bb7
  417c01:	xchg   edx,eax
  417c02:	bound  edx,QWORD PTR ds:0x9e86596f
  417c08:	nop
  417c09:	jne    0x417ba8
  417c0b:	(bad)  
  417c0c:	mov    edi,0xbc1f47cd
  417c11:	out    dx,al
  417c12:	or     ah,BYTE PTR [ebx+0x64]
  417c15:	scas   eax,DWORD PTR es:[edi]
  417c16:	sbb    BYTE PTR [ebp+0x1e],dl
  417c19:	inc    esi
  417c1a:	ret    
  417c1b:	(bad)  
  417c1c:	iret   
  417c1d:	adc    eax,0xf57e6fda
  417c22:	inc    ebp
  417c23:	not    DWORD PTR [esp+ebx*4+0x22271c4b]
  417c2a:	push   edi
  417c2b:	mov    ah,0x2f
  417c2d:	(bad)  
  417c2e:	mov    cl,0x8
  417c30:	mov    al,0x5f
  417c32:	dec    esp
  417c33:	ror    BYTE PTR [esi],cl
  417c35:	hlt    
  417c36:	int3   
  417c37:	jbe    0x417ca8
  417c39:	pop    es
  417c3a:	jp     0x417c66
  417c3c:	pop    eax
  417c3d:	call   0xf9be:0xeaddc260
  417c44:	mov    ebp,DWORD PTR [ebp-0x4fd42d3e]
  417c4a:	adc    bh,BYTE PTR [esi-0x120ab1a0]
  417c50:	pop    ebp
  417c51:	sbb    DWORD PTR [ebp-0x57517f26],ebp
  417c57:	cmp    dl,dh
  417c59:	inc    esi
  417c5a:	je     0x417c22
  417c5c:	dec    eax
  417c5d:	les    ecx,FWORD PTR [edi+0x59]
  417c60:	and    BYTE PTR [esi+0x149f57ef],al
  417c66:	dec    ebx
  417c67:	jns    0x417c33
  417c69:	jne    0x417c6d
  417c6b:	push   edx
  417c6c:	pop    es
  417c6d:	test   DWORD PTR [esi],ecx
  417c6f:	fsub   st(3),st
  417c71:	or     esi,DWORD PTR [ebx+edx*8-0x1]
  417c75:	cwde   
  417c76:	lods   al,BYTE PTR ds:[esi]
  417c77:	loopne 0x417cdd
  417c79:	test   eax,0x61c4c84a
  417c7e:	push   edx
  417c7f:	xor    edi,DWORD PTR [edx]
  417c81:	xchg   ecx,eax
  417c82:	jb     0x417c57
  417c84:	adc    bh,BYTE PTR [ecx+ecx*1-0x36733f63]
  417c8b:	call   0x76e070ed
  417c90:	mov    ds:0x81cb0de6,al
  417c95:	inc    edx
  417c96:	dec    edx
  417c97:	pushf  
  417c98:	aam    0x85
  417c9a:	retf   0x5ba4
  417c9d:	xor    ch,bh
  417c9f:	sbb    BYTE PTR [ebp+0x9],bl
  417ca2:	bound  edi,QWORD PTR [esi-0x1b]
  417ca5:	lods   al,BYTE PTR fs:[esi]
  417ca7:	mov    ah,0x92
  417ca9:	pop    ecx
  417caa:	xlat   BYTE PTR ds:[ebx]
  417cab:	out    0x10,eax
  417cad:	dec    ebp
  417cae:	and    eax,0x4b31f099
  417cb3:	push   0xffffff8e
  417cb5:	inc    ecx
  417cb6:	jo     0x417cd0
  417cb8:	xchg   ebx,eax
  417cb9:	sbb    eax,0xd6c1d2cd
  417cbe:	aad    0x9b
  417cc0:	inc    eax
  417cc1:	icebp  
  417cc2:	dec    edi
  417cc3:	fcom   QWORD PTR [ecx+0x63]
  417cc6:	xor    edx,DWORD PTR [edx-0x6e34a487]
  417ccc:	test   eax,0x4cd23f58
  417cd1:	inc    esi
  417cd2:	sti    
  417cd3:	in     al,dx
  417cd4:	mov    bl,0x7f
  417cd6:	xchg   edi,eax
  417cd7:	and    BYTE PTR [edx+0x18],dl
  417cda:	and    al,0x83
  417cdc:	or     al,0xd9
  417cde:	mov    ch,BYTE PTR [edx-0x33]
  417ce1:	(bad)  
  417ce2:	fcom   st(2)
  417ce4:	pop    eax
  417ce5:	xchg   DWORD PTR ds:0x732ed2ea,eax
  417ceb:	or     DWORD PTR [ebx+0x2e745432],esp
  417cf1:	jae    0x417d4a
  417cf3:	push   cs
  417cf4:	inc    ebp
  417cf5:	adc    dl,BYTE PTR [ebx-0x2da66824]
  417cfb:	scas   al,BYTE PTR es:[edi]
  417cfc:	jle    0x417cb6
  417cfe:	cwde   
  417cff:	in     eax,dx
  417d00:	push   0x1d
  417d02:	dec    edx
  417d03:	sub    eax,0x49da3657
  417d08:	int3   
  417d09:	iret   
  417d0a:	cmp    DWORD PTR [ecx-0x2c831853],esp
  417d10:	jg     0x417cfc
  417d12:	inc    edi
  417d13:	(bad)  
  417d14:	es pusha 
  417d16:	test   al,0xc2
  417d18:	outs   dx,DWORD PTR ds:[esi]
  417d19:	dec    esp
  417d1a:	sahf   
  417d1b:	jns    0x417d33
  417d1d:	mov    edi,0x7aad593b
  417d22:	cli    
  417d23:	iret   
  417d24:	adc    DWORD PTR [esi-0x68],eax
  417d27:	arpl   WORD PTR [edi+0x137cd994],di
  417d2d:	inc    ebx
  417d2e:	dec    ebx
  417d2f:	adc    DWORD PTR [edi-0x23513b46],ebx
  417d35:	xchg   ebp,eax
  417d36:	addr16 shr eax,cl
  417d39:	fs pop edx
  417d3b:	xchg   esi,eax
  417d3c:	scas   eax,DWORD PTR es:[edi]
  417d3d:	cmc    
  417d3e:	mov    ebx,0xb74d5dde
  417d43:	cmp    eax,0xc891d30b
  417d48:	mov    ds,WORD PTR [esp+ecx*1-0x5f]
  417d4c:	in     eax,0x6f
  417d4e:	mov    dl,bl
  417d50:	or     DWORD PTR [ecx+0x53],ebx
  417d53:	gs jecxz 0x417d9f
  417d56:	xchg   ecx,eax
  417d57:	test   eax,0xfe62f95d
  417d5c:	test   DWORD PTR [esi+0x59bfedd8],esi
  417d62:	rol    ecx,cl
  417d64:	int    0xdc
  417d66:	inc    ebp
  417d67:	popa   
  417d68:	xor    ebx,DWORD PTR [edx-0x72e363b6]
  417d6e:	mov    bl,0xd1
  417d70:	fsubr  st(3),st
  417d72:	or     dl,dl
  417d74:	(bad)  
  417d76:	or     DWORD PTR [ecx+0x74],edx
  417d79:	leave  
  417d7a:	shl    DWORD PTR ds:0x413ee25d,cl
  417d80:	or     al,0x8e
  417d82:	arpl   WORD PTR [ebx+ebp*1-0x16355cbd],cx
  417d89:	xchg   edx,eax
  417d8a:	rcl    DWORD PTR [ebx+0x76],1
  417d8d:	add    ah,bh
  417d8f:	adc    dl,BYTE PTR [esi+0x10]
  417d92:	add    edx,ecx
  417d94:	pop    ebp
  417d95:	sbb    DWORD PTR [esi-0x1aad420a],ebx
  417d9b:	push   edi
  417d9c:	icebp  
  417d9d:	mov    ds:0x599745b7,eax
  417da2:	adc    BYTE PTR [edx+0x7f],ah
  417da5:	push   cs
  417da6:	cmc    
  417da7:	mov    ds:0xbd4b5f9d,eax
  417dac:	push   es
  417dad:	push   esp
  417dae:	xor    al,0xc0
  417db0:	ret    0x55d2
  417db3:	sar    BYTE PTR [esi-0x60],cl
  417db6:	daa    
  417db7:	retf   
  417db8:	mov    eax,ds:0x5c3bf910
  417dbd:	and    BYTE PTR [ecx-0x76],cl
  417dc0:	data16 es mov dl,0x3
  417dc4:	and    DWORD PTR [esp+eax*4-0x271a2b33],eax
  417dcb:	cmp    eax,0x422c9a1d
  417dd0:	mov    ebx,0x5ba7474c
  417dd5:	(bad)  
  417dd6:	dec    edx
  417dd7:	in     al,0xb7
  417dd9:	cmp    ebp,ecx
  417ddb:	dec    ecx
  417ddc:	mov    es,WORD PTR [esi-0x5c]
  417ddf:	pop    edx
  417de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417de1:	mov    dh,BYTE PTR [ebp+eiz*4-0x4c87f3e9]
  417de8:	mov    cl,0x72
  417dea:	dec    ebx
  417deb:	ds cwde 
  417ded:	xor    edi,DWORD PTR [eax-0x7464a7ba]
  417df3:	shl    BYTE PTR [edx+ebx*2],cl
  417df6:	mov    bl,0x78
  417df8:	sbb    eax,0x3585716f
  417dfd:	stc    
  417dfe:	dec    ebx
  417dff:	cld    
  417e00:	iret   
  417e01:	and    eax,0x60e1198f
  417e06:	ja     0x417e6a
  417e08:	lds    ebx,FWORD PTR [ecx+0x1f]
  417e0b:	inc    edi
  417e0c:	or     BYTE PTR [ebx+edx*2+0x17],bl
  417e10:	inc    edx
  417e11:	fisttp WORD PTR [edx-0x3d]
  417e14:	sar    DWORD PTR [ecx-0x1b],cl
  417e17:	adc    eax,DWORD PTR [ebx+0x54]
  417e1a:	and    al,0xcb
  417e1c:	out    0x4d,al
  417e1e:	fisubr DWORD PTR [edi-0xe66a92a]
  417e24:	(bad)  
  417e25:	jl     0x417ea2
  417e27:	sub    DWORD PTR [edx+0xe674aaf],esp
  417e2d:	ins    DWORD PTR es:[edi],dx
  417e2e:	loope  0x417dff
  417e30:	dec    ebx
  417e31:	jnp    0x417dd4
  417e33:	ror    BYTE PTR [edx+0x5c76f128],cl
  417e39:	loopne 0x417e8a
  417e3b:	sub    eax,0x2a4b6bb8
  417e40:	and    edx,DWORD PTR [ebx+ecx*1]
  417e43:	pop    ebp
  417e44:	ins    DWORD PTR es:[edi],dx
  417e45:	jb     0x417ebe
  417e47:	fnstsw WORD PTR [ebp+0x2a]
  417e4a:	inc    ebx
  417e4b:	adc    bh,BYTE PTR [edx+0x241814aa]
  417e51:	(bad)  
  417e52:	fdiv   DWORD PTR [edi+0x2ddcf35d]
  417e58:	mov    eax,ds:0xe5a7b53e
  417e5d:	pop    ecx
  417e5e:	mov    dh,0xca
  417e60:	jb     0x417eac
  417e62:	lock mov ah,0x43
  417e65:	push   cs
  417e66:	inc    edi
  417e67:	mov    eax,ds:0x1ccadcf9
  417e6c:	(bad)  
  417e6d:	jg     0x417edf
  417e6f:	stc    
  417e70:	inc    esp
  417e71:	pop    ecx
  417e72:	into   
  417e73:	repnz inc ecx
  417e75:	sub    cl,BYTE PTR ds:0xe160115e
  417e7b:	jmp    0x417e42
  417e7d:	sub    DWORD PTR [ebx-0x71],ebp
  417e80:	jnp    0x417ea1
  417e82:	and    al,0x8e
  417e84:	cmp    eax,DWORD PTR [esi-0x1f]
  417e87:	enter  0x6402,0xd7
  417e8b:	daa    
  417e8c:	jae    0x417eec
  417e8e:	iret   
  417e8f:	addr16 gs call 0xc388:0x195f253e
  417e98:	jnp    0x417e5a
  417e9a:	dec    edx
  417e9b:	scas   eax,DWORD PTR es:[edi]
  417e9c:	lea    esi,[eax]
  417e9e:	es inc ebp
  417ea0:	xchg   bh,dh
  417ea2:	mov    eax,ds:0x54256ad2
  417ea7:	jle    0x417eb4
  417ea9:	inc    esp
  417eaa:	push   cs
  417eab:	mov    ds:0x82a40d52,al
  417eb0:	ins    DWORD PTR es:[edi],dx
  417eb1:	sub    BYTE PTR [edi-0x45],ah
  417eb4:	mov    ebx,0xb7d24805
  417eb9:	push   edi
  417eba:	push   esp
  417ebb:	sub    DWORD PTR [eax+0x5fc9e697],ecx
  417ec1:	sub    DWORD PTR [ecx+eiz*1-0x23],esi
  417ec5:	sbb    al,0x8e
  417ec7:	stos   BYTE PTR es:[edi],al
  417ec8:	push   ecx
  417ec9:	jle    0x417f19
  417ecb:	ror    BYTE PTR [esi-0x4c],cl
  417ece:	inc    ebp
  417ecf:	in     al,0x8b
  417ed1:	xor    al,0xcd
  417ed3:	out    dx,al
  417ed4:	mov    ecx,0x55921b8b
  417ed9:	stc    
  417eda:	jne    0x417ec8
  417edc:	inc    esi
  417edd:	pop    ecx
  417ede:	xchg   edi,eax
  417edf:	push   0x19
  417ee1:	mov    eax,ds:0xc45eba3f
  417ee6:	dec    edx
  417ee7:	xchg   esp,eax
  417ee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ee9:	cmp    DWORD PTR [eax],ebx
  417eeb:	mov    ah,0x3c
  417eed:	push   es
  417eee:	jbe    0x417eb2
  417ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ef1:	fbld   TBYTE PTR [eax-0x7a]
  417ef4:	jge    0x417f3b
  417ef6:	push   edx
  417ef7:	cmp    eax,0x572c6d05
  417efc:	pop    edx
  417efd:	push   esp
  417efe:	hlt    
  417eff:	sbb    al,0x9d
  417f01:	js     0x417e90
  417f03:	mov    al,0xf
  417f05:	add    esi,DWORD PTR [ebx-0x67b9ddba]
  417f0b:	scas   al,BYTE PTR es:[edi]
  417f0c:	push   0x2a
  417f0e:	jmp    0x5240e24f
  417f13:	daa    
  417f14:	jecxz  0x417f59
  417f16:	and    BYTE PTR [edx-0x522e7d30],dh
  417f1c:	pop    ss
  417f1d:	xor    DWORD PTR [edx+edx*8],esp
  417f20:	leave  
  417f21:	xor    eax,0x32acdb9a
  417f26:	aad    0x9c
  417f28:	push   esp
  417f29:	sub    dl,BYTE PTR [edi-0x2ba579b1]
  417f2f:	popa   
  417f30:	push   cs
  417f31:	out    dx,al
  417f32:	loopne 0x417f6c
  417f34:	out    dx,eax
  417f35:	pop    eax
  417f36:	cwde   
  417f37:	inc    esi
  417f38:	dec    ecx
  417f39:	sub    eax,0x79691103
  417f3e:	gs mov eax,0x3570c337
  417f44:	and    esp,DWORD PTR [edx]
  417f46:	dec    ebx
  417f47:	in     al,dx
  417f48:	dec    eax
  417f49:	(bad)  
  417f4a:	aaa    
  417f4b:	inc    eax
  417f4c:	xor    ah,BYTE PTR [eax+0x48]
  417f4f:	shr    BYTE PTR [ebx],cl
  417f51:	aam    0x73
  417f53:	mov    dl,0xb3
  417f55:	mov    bl,BYTE PTR [ebp+0x10]
  417f58:	pop    ebp
  417f59:	rol    BYTE PTR [edx+0x38da7f6],0x6e
  417f60:	push   eax
  417f61:	pop    edx
  417f62:	stc    
  417f63:	js     0x417f61
  417f65:	jno    0x417f71
  417f67:	or     al,0x35
  417f69:	jmp    0xa972ebe3
  417f6e:	mov    edx,0xb55b6e1e
  417f73:	xor    DWORD PTR [esi+eax*4],0x281bdd87
  417f7a:	inc    ebx
  417f7b:	shl    BYTE PTR [edi-0x5c],cl
  417f7e:	adc    DWORD PTR [edi],esi
  417f80:	mov    cl,0x7c
  417f82:	int3   
  417f83:	or     bl,BYTE PTR [ebp-0x43]
  417f86:	and    DWORD PTR [ebp-0x242cc774],0x145159cc
  417f90:	fldenv [esi+0x49]
  417f93:	lock test BYTE PTR [edx],bl
  417f96:	dec    ebx
  417f97:	mov    ebx,DWORD PTR [ebx+0x6d47c60b]
  417f9d:	cli    
  417f9e:	call   0x8a53:0xe279b6dd
  417fa5:	call   0x3b2d:0xa587f125
  417fac:	pop    ebp
  417fad:	stos   BYTE PTR es:[edi],al
  417fae:	hlt    
  417faf:	mov    ds:0x6b88effd,al
  417fb4:	push   esp
  417fb5:	pop    ecx
  417fb6:	adc    eax,0x873d9512
  417fbb:	jae    0x417fc3
  417fbd:	xchg   esp,eax
  417fbe:	sub    eax,0x175ad9d7
  417fc3:	mov    esp,edx
  417fc5:	fild   QWORD PTR [esi+0x77299392]
  417fcb:	shl    esi,cl
  417fcd:	cwde   
  417fce:	mov    edx,0x7f2188bf
  417fd3:	pusha  
  417fd4:	pop    ebp
  417fd5:	ror    BYTE PTR [edi+edx*1+0x32f0b435],cl
  417fdc:	push   esi
  417fdd:	pop    ebx
  417fde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fdf:	addr16 jns 0x417fc3
  417fe2:	cs loop 0x417fa2
  417fe5:	pop    esi
  417fe6:	jne    0x41804d
  417fe8:	outs   dx,DWORD PTR ds:[esi]
  417fe9:	pop    ebx
  417fea:	(bad)  
  417feb:	xchg   edi,eax
  417fec:	adc    al,0xbb
  417fee:	jmp    0x811ad94c
  417ff3:	pop    ebp
  417ff4:	mov    edx,0xb8eb6b5e
  417ff9:	xchg   ecx,eax
  417ffa:	mov    eax,0xb69c16d2
  417fff:	ret    
  418000:	pop    ebp
  418001:	fs stos DWORD PTR es:[edi],eax
  418003:	ja     0x417f88
  418005:	inc    esi
  418006:	pop    es
  418007:	mov    esi,0xf11e5ed3
  41800c:	adc    al,0xb9
  41800e:	sub    DWORD PTR [edx+0x238736c7],esi
  418014:	pop    ebp
  418015:	das    
  418016:	inc    DWORD PTR [ecx]
  418018:	sub    DWORD PTR [edx-0x66],ecx
  41801b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41801c:	inc    ecx
  41801d:	pop    edx
  41801e:	mov    ds:0x36cdfaf2,eax
  418023:	bound  edi,QWORD PTR ds:0x5d7e0ff6
  418029:	jo     0x417fc2
  41802b:	ins    BYTE PTR es:[edi],dx
  41802c:	in     al,dx
  41802d:	adc    al,0x3d
  41802f:	inc    ecx
  418030:	mov    eax,0x31d24da3
  418035:	adc    bh,BYTE PTR [esi+0x12271f51]
  41803b:	sub    DWORD PTR [edi+0x40],0x19be9550
  418042:	dec    eax
  418043:	dec    edi
  418044:	mov    edx,0x58d2ef02
  418049:	xchg   edx,eax
  41804a:	repnz lods eax,DWORD PTR ds:[esi]
  41804c:	and    esi,DWORD PTR [ebx+0x4]
  41804f:	sti    
  418050:	cdq    
  418051:	xchg   ah,al
  418053:	fbld   TBYTE PTR [ecx]
  418055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418056:	inc    eax
  418057:	(bad)  
  418058:	xchg   ebx,eax
  418059:	mov    edx,edx
  41805b:	mov    BYTE PTR [esi],cl
  41805d:	push   es
  41805e:	scas   eax,DWORD PTR es:[edi]
  41805f:	clc    
  418060:	jo     0x4180ba
  418062:	sbb    dl,BYTE PTR ds:0xad5a4bc8
  418068:	rcr    BYTE PTR [ebp-0x1a027f28],1
  41806e:	mov    ebp,0xe20f5d74
  418073:	sar    DWORD PTR [ecx],cl
  418075:	sbb    ah,ch
  418077:	in     eax,0x3b
  418079:	inc    esi
  41807a:	mov    esi,edi
  41807c:	popa   
  41807d:	jmp    0x41807e
  41807f:	pop    es
  418080:	inc    ecx
  418081:	ror    BYTE PTR [edx+0x2b],1
  418084:	adc    edx,DWORD PTR [eax+0x48424508]
  41808a:	inc    edx
  41808b:	mov    ah,0x90
  41808d:	pop    ecx
  41808e:	pop    ss
  41808f:	push   ss
  418090:	mov    ds:0xfe444bfc,al
  418095:	std    
  418096:	dec    edx
  418097:	ret    0x9c19
  41809a:	cmp    bl,BYTE PTR [ebx]
  41809c:	imul   eax,DWORD PTR [ecx-0x65242d3c],0x1dbc8ba7
  4180a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180a7:	sub    dl,BYTE PTR [esi+0x56]
  4180aa:	push   ss
  4180ab:	shl    DWORD PTR [esi-0x23],1
  4180ae:	mov    edx,0x44542e4f
  4180b3:	rol    BYTE PTR [edx],1
  4180b5:	arpl   WORD PTR [edi],bx
  4180b7:	mov    BYTE PTR [ebp-0x63c57563],cl
  4180bd:	sbb    cl,BYTE PTR [ebx-0x5e]
  4180c0:	mov    eax,ds:0xa9dd6148
  4180c5:	push   0x2b
  4180c7:	int3   
  4180c8:	cmp    al,0x74
  4180ca:	sbb    al,0x89
  4180cc:	jge    0x418137
  4180ce:	mov    esp,0x428e138c
  4180d3:	xchg   ebx,eax
  4180d4:	mov    edi,0x8e760e85
  4180d9:	pop    esp
  4180da:	outs   dx,BYTE PTR ds:[esi]
  4180db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180dc:	pop    esp
  4180dd:	mov    DWORD PTR [eax],ecx
  4180df:	push   edx
  4180e0:	ret    0xf5f5
  4180e3:	and    ebx,DWORD PTR [ebp+0x4]
  4180e6:	push   es
  4180e7:	icebp  
  4180e8:	cmp    eax,0x28315fc8
  4180ed:	inc    edi
  4180ee:	xchg   DWORD PTR [ebx],edi
  4180f0:	fcmovb st,st(3)
  4180f2:	mov    al,BYTE PTR [edx]
  4180f4:	cmp    bl,BYTE PTR [ebx-0x64a24479]
  4180fa:	loopne 0x4180b0
  4180fc:	mov    al,ds:0xac8c4396
  418101:	pop    ecx
  418102:	push   ds
  418103:	test   DWORD PTR [esi+edi*4-0xc],edi
  418107:	cli    
  418108:	lods   eax,DWORD PTR ds:[esi]
  418109:	getsec 
  41810b:	xor    dl,BYTE PTR [ebx+eax*8+0x675db728]
  418112:	add    al,0xe3
  418114:	push   es
  418115:	test   esp,edx
  418117:	sar    DWORD PTR [ecx-0x1d321d05],1
  41811d:	outs   dx,BYTE PTR ds:[esi]
  41811e:	pop    ebx
  41811f:	mov    al,0xe
  418121:	xchg   ebp,eax
  418122:	dec    ecx
  418123:	loop   0x4180e8
  418125:	sbb    bl,BYTE PTR [ebx]
  418127:	push   cs
  418128:	fnsave [ecx+0x59608312]
  41812e:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  418130:	inc    eax
  418131:	shl    ebx,0x5d
  418134:	pop    edx
  418135:	icebp  
  418136:	push   ebp
  418137:	mov    al,ds:0xa7fc9179
  41813c:	sar    cl,0x2b
  41813f:	or     ecx,DWORD PTR [ecx-0x25c294ab]
  418145:	repz inc eax
  418147:	add    ebp,DWORD PTR ds:0xdd050344
  41814d:	add    eax,0x3e6375b7
  418152:	dec    ebx
  418153:	pop    ss
  418154:	sbb    DWORD PTR [edi+0x37d996b5],eax
  41815a:	dec    edx
  41815b:	ror    BYTE PTR [edi-0x7c207b7f],cl
  418161:	sub    eax,0x21648016
  418166:	xor    eax,0x40aa574c
  41816b:	xchg   edx,eax
  41816c:	in     eax,dx
  41816d:	jmp    0x949c:0x460e5ac9
  418174:	pop    ebx
  418175:	mov    ah,BYTE PTR [edi+0x4b1df776]
  41817b:	add    edi,0xbbfdc4a7
  418181:	pop    esi
  418182:	jle    0x418157
  418184:	xchg   esp,eax
  418185:	pop    edx
  418186:	lods   eax,DWORD PTR ds:[esi]
  418187:	icebp  
  418188:	enter  0xf6da,0x1d
  41818c:	pop    ebp
  41818d:	push   edx
  41818e:	rcl    DWORD PTR [ebx+0x670f08b6],cl
  418194:	sub    BYTE PTR [esi-0x1b],al
  418197:	scas   al,BYTE PTR es:[edi]
  418198:	fistp  QWORD PTR [esi-0x205b691a]
  41819e:	dec    edx
  41819f:	or     bl,dh
  4181a1:	js     0x41812e
  4181a3:	(bad)  
  4181a4:	adc    eax,0xf3d22a22
  4181a9:	sub    ch,ch
  4181ab:	mov    gs,WORD PTR [edi-0x55]
  4181ae:	pop    esi
  4181af:	fwait
  4181b0:	pop    esp
  4181b1:	cld    
  4181b2:	test   DWORD PTR [eax-0x5445c19c],edi
  4181b8:	add    eax,0x3fd22514
  4181bd:	xor    al,0x93
  4181bf:	cmp    dl,BYTE PTR [ebp+0x4d]
  4181c2:	gs push 0xd2e4e585
  4181c8:	cmp    eax,esi
  4181ca:	outs   dx,DWORD PTR ds:[esi]
  4181cb:	mov    eax,0x4772d2bb
  4181d0:	loop   0x418218
  4181d2:	icebp  
  4181d3:	jnp    0x418236
  4181d5:	or     al,0xd6
  4181d7:	fiadd  WORD PTR [ebx]
  4181d9:	xor    ch,BYTE PTR [ebx-0x78]
  4181dc:	ret    0x4b10
  4181df:	inc    ecx
  4181e0:	sub    DWORD PTR [ecx+ecx*8],ebp
  4181e3:	std    
  4181e4:	mov    edi,edx
  4181e6:	stos   DWORD PTR es:[edi],eax
  4181e7:	mov    cl,0xad
  4181e9:	mov    dl,0x1a
  4181eb:	shl    BYTE PTR [esi+0x648be86],cl
  4181f1:	jns    0x418236
  4181f3:	into   
  4181f4:	jns    0x41818d
  4181f6:	mov    ecx,0x2ab08752
  4181fb:	adc    edx,esi
  4181fd:	jecxz  0x418214
  4181ff:	aad    0x93
  418201:	les    ebx,FWORD PTR [eax-0x79]
  418204:	cmc    
  418205:	test   eax,0xcf290632
  41820a:	daa    
  41820b:	push   ss
  41820c:	inc    edi
  41820d:	xor    dl,BYTE PTR [edi+eax*8+0x7c]
  418211:	bnd js 0x418242
  418214:	xlat   BYTE PTR ds:[ebx]
  418215:	pop    edx
  418216:	adc    DWORD PTR [ebx+eiz*8],0x40
  41821a:	int    0x8f
  41821c:	push   0xcbb04875
  418221:	fld    DWORD PTR [edi+0x4ac27667]
  418227:	not    BYTE PTR [edx+0x70]
  41822a:	jb     0x4181bd
  41822c:	adc    BYTE PTR [esi+0x14],cl
  41822f:	shl    BYTE PTR [ebx-0x3281a6ea],cl
  418235:	adc    esp,DWORD PTR [eax]
  418237:	mov    al,ds:0xf34e6e5d
  41823c:	sub    al,0x90
  41823e:	fst    st(7)
  418240:	iret   
  418241:	pop    ecx
  418242:	(bad)  
  418243:	cmp    ebp,DWORD PTR [edi+0x7e]
  418246:	mov    ah,0x25
  418248:	retf   0x562b
  41824b:	mov    eax,0x13e2c1ac
  418250:	les    esp,FWORD PTR [ecx+0x5f1ff95c]
  418256:	sbb    BYTE PTR [ecx+0x37],bl
  418259:	in     eax,dx
  41825a:	fcomip st,st(2)
  41825c:	add    ah,BYTE PTR ss:[ecx-0x3515a92c]
  418263:	adc    eax,DWORD PTR [ebx]
  418265:	mov    esi,0x20c79bda
  41826a:	adc    esi,ebx
  41826c:	pusha  
  41826d:	adc    bl,BYTE PTR [edx+0x25]
  418270:	(bad)  
  418271:	pop    ecx
  418272:	jle    0x4181f7
  418274:	ins    BYTE PTR es:[edi],dx
  418275:	pop    ds
  418276:	push   es
  418277:	ds pop ebp
  418279:	xlat   BYTE PTR ds:[ebx]
  41827a:	xor    eax,0xe8e5a774
  41827f:	or     eax,0xa6265b37
  418284:	inc    eax
  418285:	cmp    al,0x13
  418287:	jmp    0x41825e
  418289:	lock jnp 0x418210
  41828c:	push   ebx
  41828d:	or     BYTE PTR [ecx-0xa7c025c],ch
  418293:	adc    ecx,DWORD PTR [eax+0x69]
  418296:	sub    esp,DWORD PTR [ecx+0x58]
  418299:	pop    ecx
  41829a:	mov    al,ds:0x127e1502
  41829f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182a0:	mov    cl,0xc3
  4182a2:	dec    ecx
  4182a3:	sub    bh,BYTE PTR [eax+0x0]
  4182a6:	inc    ecx
  4182a7:	je     0x418246
  4182a9:	xor    ah,BYTE PTR [ecx-0x9]
  4182ac:	sub    al,0x46
  4182ae:	rcl    BYTE PTR [ebx+0x4d877a8f],0x8b
  4182b5:	sub    cl,BYTE PTR [ebx+0x5a]
  4182b8:	xor    bl,BYTE PTR [ebp-0x34]
  4182bb:	sub    BYTE PTR [ebx],bh
  4182bd:	adc    BYTE PTR [edx+ecx*1],0x4a
  4182c1:	inc    ebx
  4182c2:	dec    ebx
  4182c3:	dec    eax
  4182c4:	inc    ecx
  4182c5:	inc    edx
  4182c6:	xchg   edx,eax
  4182c7:	sub    eax,eax
  4182c9:	fisttp DWORD PTR [edx+0x65]
  4182cc:	(bad)  
  4182ce:	inc    ebp
  4182cf:	xchg   edx,eax
  4182d0:	pop    eax
  4182d1:	cmp    BYTE PTR [esi+0xa7470d2],0x1f
  4182d8:	cmp    BYTE PTR [ebx+ecx*2+0x70cf7ecb],al
  4182df:	bnd jmp 0x41833c
  4182e2:	sbb    bl,BYTE PTR ds:0xb010387c
  4182e8:	inc    esp
  4182e9:	sbb    DWORD PTR [ecx-0x3],edi
  4182ec:	ins    DWORD PTR es:[edi],dx
  4182ed:	pop    edx
  4182ee:	out    0xe4,al
  4182f0:	out    dx,eax
  4182f1:	cs xchg dh,bh
  4182f4:	add    eax,0x5d6e1fea
  4182f9:	gs pop ebp
  4182fb:	mov    al,0xe2
  4182fd:	sbb    DWORD PTR [ebp-0x1950222],edi
  418303:	gs leave 
  418305:	or     edi,edi
  418307:	mov    edx,DWORD PTR [esi-0x76]
  41830a:	push   es
  41830b:	dec    esi
  41830d:	push   ecx
  41830e:	xor    al,0x49
  418310:	fimul  WORD PTR [ebx+0x5ea62b8b]
  418316:	mov    bl,0x93
  418318:	mov    ebp,0xdf2186b
  41831d:	imul   ebp,DWORD PTR [ecx+0x319f5dbf],0x23cf76fd
  418327:	dec    ebp
  418328:	sbb    eax,0x99b5b946
  41832d:	or     ecx,DWORD PTR [eax+0x2d7e22b0]
  418333:	sub    BYTE PTR [esi-0x2b],dl
  418336:	inc    ebp
  418337:	iret   
  418338:	out    dx,eax
  418339:	fucomp st(5)
  41833b:	repnz mov eax,0xee3ca633
  418341:	push   0x61
  418343:	mov    esi,0xd2525541
  418348:	mov    bl,0xb
  41834a:	xchg   BYTE PTR [esi],bh
  41834c:	lds    ebx,FWORD PTR [edi]
  41834e:	dec    ebx
  41834f:	ror    ebx,1
  418351:	pusha  
  418352:	cmp    ah,BYTE PTR [ecx]
  418354:	push   esp
  418355:	outs   dx,DWORD PTR ds:[esi]
  418356:	lods   eax,DWORD PTR ds:[esi]
  418357:	shl    edx,cl
  418359:	imul   edx,ebp,0x9e8d15ad
  41835f:	stos   BYTE PTR es:[edi],al
  418360:	neg    BYTE PTR [edx]
  418362:	dec    ebx
  418363:	xchg   edx,eax
  418364:	mov    edx,0xa59f484a
  418369:	mov    esp,0xdaf7d200
  41836e:	xor    eax,0x464e057d
  418373:	add    BYTE PTR [ebp+0x42],bl
  418376:	jmp    0x418319
  418378:	jmp    0xaa1a3967
  41837d:	icebp  
  41837e:	pop    ecx
  41837f:	(bad)  
  418380:	lods   eax,DWORD PTR ds:[esi]
  418381:	neg    BYTE PTR ds:[bp+si-0x2d]
  418386:	iret   
  418387:	sar    BYTE PTR [edi-0x37],cl
  41838a:	fisttp WORD PTR [eax]
  41838c:	xor    bh,ah
  41838e:	dec    edx
  41838f:	cmp    al,0x7
  418391:	mov    cl,0x3
  418393:	or     edi,DWORD PTR [esi-0x352df827]
  418399:	jbe    0x418396
  41839b:	adc    edx,DWORD PTR [edx-0x64]
  41839e:	or     BYTE PTR [ecx+0x5d],0xfa
  4183a2:	imul   ecx,DWORD PTR [edx],0xffffffaa
  4183a5:	jmp    0xbc8b0cdd
  4183aa:	sub    dl,dl
  4183ac:	mov    edx,ecx
  4183ae:	push   0x51
  4183b0:	push   0x3196c538
  4183b5:	in     eax,0x4a
  4183b7:	mov    ah,0x77
  4183b9:	xchg   edi,eax
  4183ba:	adc    edi,DWORD PTR [edi]
  4183bc:	sti    
  4183bd:	jmp    0x5de05661
  4183c2:	leave  
  4183c3:	ret    
  4183c4:	dec    eax
  4183c5:	jecxz  0x4183ff
  4183c7:	push   cs
  4183c8:	pop    eax
  4183c9:	mov    ds:0xd9e4fbe5,eax
  4183ce:	mov    ds:0xd4f56553,eax
  4183d3:	pop    esi
  4183d4:	fistp  WORD PTR [ecx+0x7f]
  4183d7:	ror    BYTE PTR [ebx],1
  4183d9:	or     eax,DWORD PTR [edi]
  4183db:	add    eax,0xfb4adcd5
  4183e0:	dec    edi
  4183e1:	xchg   ebp,eax
  4183e2:	pop    esp
  4183e3:	xor    eax,0x5af3a1f0
  4183e8:	loop   0x418443
  4183ea:	adc    eax,0x9cd0b561
  4183ef:	adc    eax,0xc54af73d
  4183f4:	lods   al,BYTE PTR ds:[esi]
  4183f5:	sub    eax,0xd774bc36
  4183fa:	std    
  4183fb:	shr    BYTE PTR [ebp+0x7c2cf282],cl
  418401:	std    
  418402:	inc    edi
  418403:	aad    0x7e
  418405:	xchg   ebp,eax
  418406:	mov    edx,edx
  418408:	mov    edx,0x792bdff1
  41840d:	sub    BYTE PTR [eax+0x514201d2],ch
  418413:	xlat   BYTE PTR ds:[ebx]
  418414:	pop    edi
  418415:	push   ecx
  418416:	push   0x2a
  418418:	aaa    
  418419:	aad    0x4a
  41841b:	adc    eax,0x461adfe7
  418420:	lahf   
  418421:	jp     0x41840f
  418423:	inc    edi
  418424:	out    0x73,al
  418426:	add    bl,BYTE PTR [ebp+0x5d]
  418429:	lods   al,BYTE PTR ds:[esi]
  41842a:	rcl    BYTE PTR [eax-0x25bba3a],cl
  418430:	pop    ebp
  418431:	sbb    DWORD PTR [eax+edi*4+0x12],edi
  418435:	jge    0x4183ca
  418437:	sbb    edx,esp
  418439:	inc    esi
  41843a:	pop    edx
  41843b:	ins    DWORD PTR es:[edi],dx
  41843c:	xor    DWORD PTR [edi+0x5b7d4f50],0xffffffd1
  418443:	dec    ebp
  418444:	mov    dl,BYTE PTR [esi+edx*2]
  418447:	imul   esi,DWORD PTR [ebx-0x16704b60],0xffffffe2
  41844e:	jno    0x41840e
  418450:	outs   dx,BYTE PTR ds:[esi]
  418451:	mov    eax,ds:0x599197fb
  418456:	mov    ds:0xdfb77baa,al
  41845b:	lds    ebp,FWORD PTR [edi]
  41845d:	mov    ebx,0x49a6bd4a
  418462:	pusha  
  418463:	cwde   
  418464:	mov    bh,0x5b
  418466:	push   0xffffffd0
  418468:	cli    
  418469:	mov    BYTE PTR [edi+0x53],ch
  41846c:	add    dl,BYTE PTR [ecx]
  41846e:	daa    
  41846f:	xchg   edx,eax
  418470:	add    ebp,DWORD PTR [ebx]
  418472:	dec    ebx
  418473:	mov    eax,0x4c49a9bc
  418478:	outs   dx,BYTE PTR ss:[esi]
  41847a:	xchg   edi,eax
  41847b:	rcl    DWORD PTR [ebp-0x29],cl
  41847e:	loope  0x418469
  418480:	xor    eax,0x31272a30
  418486:	pop    esp
  418487:	ret    
  418488:	push   ecx
  418489:	mov    al,ah
  41848b:	rcr    dh,cl
  41848d:	sub    al,0x42
  41848f:	test   BYTE PTR [edx+eiz*2],al
  418492:	xlat   BYTE PTR ds:[ebx]
  418493:	adc    BYTE PTR [esi+eax*2],al
  418496:	shl    BYTE PTR [ecx+0x2caa8b70],cl
  41849c:	outs   dx,BYTE PTR ds:[esi]
  41849d:	adc    DWORD PTR [ecx-0x64],edx
  4184a0:	adc    eax,DWORD PTR [esi-0x7f59b653]
  4184a6:	in     eax,0xd2
  4184a8:	pop    edx
  4184a9:	mov    eax,0xf8bbfec7
  4184ae:	hlt    
  4184af:	outs   dx,BYTE PTR ds:[esi]
  4184b0:	pop    edi
  4184b1:	mov    edi,0x729d4216
  4184b6:	xchg   ecx,eax
  4184b7:	lock (bad) 
  4184b9:	adc    BYTE PTR ds:0xb09ff0d3,ch
  4184bf:	lods   eax,DWORD PTR ds:[esi]
  4184c0:	fsubr  QWORD PTR [esi+0x30]
  4184c3:	scas   eax,DWORD PTR es:[edi]
  4184c4:	jo     0x418483
  4184c6:	and    DWORD PTR [edi],ebx
  4184c8:	pop    ebp
  4184c9:	inc    edi
  4184ca:	addr16 cwde 
  4184cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184cd:	dec    edi
  4184ce:	jl     0x418506
  4184d0:	sbb    BYTE PTR [ecx+0x74],0xbd
  4184d4:	repz fnstenv [ecx]
  4184d7:	inc    edi
  4184d8:	cmp    cl,dl
  4184da:	push   ebp
  4184db:	(bad)  
  4184dc:	push   edi
  4184dd:	inc    edi
  4184de:	mov    dh,0x15
  4184e0:	sub    eax,0x6056a1a6
  4184e5:	pop    ecx
  4184e6:	in     eax,dx
  4184e7:	and    dl,dl
  4184e9:	pop    esi
  4184ea:	out    dx,al
  4184eb:	popa   
  4184ec:	aam    0x5c
  4184ee:	dec    ebx
  4184ef:	push   ebp
  4184f0:	loop   0x4184c9
  4184f2:	sti    
  4184f3:	adc    esp,edi
  4184f5:	cld    
  4184f6:	std    
  4184f7:	int3   
  4184f8:	sar    ebp,1
  4184fa:	mov    ebp,0xde7fbd25
  4184ff:	gs cmc 
  418501:	adc    ecx,DWORD PTR [ebx-0x73]
  418504:	iret   
  418505:	dec    ebx
  418506:	retf   
  418507:	or     bl,al
  418509:	pop    ds
  41850a:	add    cl,bl
  41850c:	and    al,0xe3
  41850e:	mov    ebx,0xb329e5e4
  418513:	stc    
  418514:	pop    ebp
  418515:	xchg   ebx,eax
  418516:	inc    edx
  418517:	mov    edi,0x92a77d81
  41851c:	pop    ds
  41851d:	imul   esi,DWORD PTR [edi-0x21b9e86d],0xffffffcf
  418524:	fdivr  DWORD PTR [eax+0xf]
  418527:	gs pop esp
  418529:	dec    esp
  41852a:	leave  
  41852b:	lock out 0x17,eax
  41852e:	rcl    BYTE PTR [ecx-0x3781d6ff],cl
  418534:	cmp    BYTE PTR [ebp+0x4e5d7a46],ah
  41853a:	push   ss
  41853b:	ja     0x418509
  41853d:	loope  0x41858a
  41853f:	push   0xc7efdc21
  418544:	mov    esi,0x537e62dc
  418549:	pop    edx
  41854a:	fs xchg esp,eax
  41854c:	pop    eax
  41854d:	mov    ds:0xd9c5cd0b,eax
  418552:	sti    
  418553:	test   DWORD PTR [ebp+0x3a],ebx
  418556:	fstp   st(2)
  418558:	mov    edx,0xde0dcb90
  41855d:	pop    eax
  41855e:	stos   BYTE PTR es:[edi],al
  41855f:	push   ecx
  418560:	imul   ecx,ebx,0xffffffa5
  418563:	outs   dx,DWORD PTR ds:[esi]
  418564:	pop    ds
  418565:	lahf   
  418566:	jb     0x4185d1
  418568:	test   eax,0x5d49e74d
  41856d:	jmp    0x4185d8
  41856f:	adc    ebp,DWORD PTR [ecx+0x3]
  418572:	inc    esp
  418573:	fwait
  418574:	mov    DWORD PTR [ecx-0x4e],ebx
  418577:	(bad)  
  418578:	jp     0x418504
  41857a:	in     eax,dx
  41857b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41857c:	pop    es
  41857d:	push   ecx
  41857e:	dec    ebx
  41857f:	pop    es
  418580:	xchg   esp,eax
  418581:	call   0xc4b7:0x125bed7a
  418588:	nop
  418589:	pop    edx
  41858a:	add    BYTE PTR [esi+0x2562d1c9],0xfc
  418591:	int    0xdf
  418593:	scas   al,BYTE PTR es:[edi]
  418594:	mov    ah,0x8
  418596:	inc    ecx
  418597:	cmp    BYTE PTR [ecx+0x4c718a30],ah
  41859d:	sub    ch,dh
  41859f:	lods   al,BYTE PTR ds:[esi]
  4185a0:	rcr    DWORD PTR [ecx+0x463f17db],cl
  4185a6:	jecxz  0x41853b
  4185a8:	fnstenv [edx-0x198a516]
  4185ae:	dec    edx
  4185af:	in     al,0x82
  4185b1:	into   
  4185b2:	cdq    
  4185b3:	std    
  4185b4:	push   ds
  4185b5:	sbb    BYTE PTR [ecx-0x73f22a2e],cl
  4185bb:	leave  
  4185bc:	out    dx,al
  4185bd:	xchg   esp,eax
  4185be:	sbb    BYTE PTR [ebx+0x6e25026f],ah
  4185c4:	add    eax,DWORD PTR [esi+0x1f15ae99]
  4185ca:	out    0xd2,al
  4185cc:	mov    BYTE PTR [esi+0x7f5afe2e],al
  4185d2:	mov    edi,0x61e05f1a
  4185d7:	aas    
  4185d8:	push   esp
  4185d9:	and    BYTE PTR [edi-0x2e],dl
  4185dc:	push   esp
  4185dd:	or     BYTE PTR [ebx-0x60],ch
  4185e0:	scas   eax,DWORD PTR es:[edi]
  4185e1:	pop    ecx
  4185e2:	jns    0x418610
  4185e4:	les    ebx,FWORD PTR [edx-0x523cb547]
  4185ea:	dec    edx
  4185eb:	jmp    0x4185bc
  4185ed:	and    esp,DWORD PTR [ebx+0x14abb404]
  4185f3:	sar    BYTE PTR [ecx+0x4c41f9c3],1
  4185f9:	loopne 0x418605
  4185fb:	jno    0x41861a
  4185fd:	sbb    al,0x20
  4185ff:	sub    al,BYTE PTR [ebp+0x59]
  418602:	sub    BYTE PTR [esi+0x2d],0x37
  418606:	nop
  418607:	(bad)  
  418609:	pop    eax
  41860a:	jno    0x418622
  41860c:	sbb    bl,BYTE PTR [ecx+0x25]
  41860f:	pop    ebx
  418610:	mov    DWORD PTR [esi+0x1bb058ba],ebp
  418616:	dec    edx
  418617:	dec    esp
  418618:	inc    esp
  418619:	and    ebx,esp
  41861b:	cwde   
  41861c:	xchg   esi,eax
  41861d:	icebp  
  41861e:	jmp    0xa7d2:0x2046fdf
  418625:	dec    ecx
  418626:	ins    DWORD PTR es:[edi],dx
  418627:	lods   al,BYTE PTR ds:[esi]
  418628:	jl     0x418677
  41862a:	push   eax
  41862b:	icebp  
  41862c:	pop    eax
  41862d:	stc    
  41862e:	jae    0x4185b9
  418630:	jns    0x41860b
  418632:	sub    DWORD PTR [ecx+0x4],edi
  418635:	jae    0x4186b6
  418637:	dec    ebx
  418638:	das    
  418639:	retf   0x92b1
  41863c:	adc    esi,0x3170bac4
  418642:	jmp    0x41869e
  418644:	repz or edx,ebp
  418647:	lea    edx,ds:0x32dd1246
  41864d:	and    eax,0x18f6ce80
  418652:	dec    edx
  418653:	stc    
  418654:	into   
  418655:	sahf   
  418656:	ins    BYTE PTR es:[edi],dx
  418657:	je     0x4186c8
  418659:	mov    ecx,0xaaa5fd3
  41865e:	mov    dl,0xd2
  418660:	adc    BYTE PTR [ebp+eax*2+0x3],al
  418664:	or     DWORD PTR [eax],edx
  418666:	xor    eax,0x8ac55d16
  41866b:	jmp    0x418684
  41866d:	pop    eax
  41866e:	cmp    eax,0xcf59d3bc
  418673:	cli    
  418674:	push   ds
  418675:	jne    0x41861b
  418677:	leave  
  418678:	aam    0x76
  41867a:	inc    eax
  41867b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41867c:	mov    ch,0xde
  41867e:	mov    dh,BYTE PTR [edx+0x30]
  418681:	stc    
  418682:	sub    DWORD PTR [eax+eax*8+0x59],edx
  418686:	and    eax,0xb4e66582
  41868b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41868c:	push   eax
  41868d:	jg     0x4186da
  41868f:	cs push ss
  418691:	ds dec edx
  418693:	push   eax
  418694:	dec    ebx
  418695:	and    BYTE PTR [edx+edi*4-0x2d5fccc3],al
  41869c:	push   edx
  41869d:	pop    ss
  41869e:	xchg   esi,eax
  41869f:	ja     0x4186bd
  4186a1:	jge    0x4186d5
  4186a3:	int    0x5d
  4186a5:	mov    al,0x97
  4186a7:	(bad)  
  4186a8:	jecxz  0x41866c
  4186aa:	int3   
  4186ab:	cmp    edi,DWORD PTR [ebx+0x5dfee677]
  4186b1:	clc    
  4186b2:	mov    DWORD PTR [ecx],edi
  4186b4:	sahf   
  4186b5:	pop    eax
  4186b6:	int3   
  4186b7:	and    al,0x5d
  4186b9:	lods   eax,DWORD PTR ds:[esi]
  4186ba:	mov    ebp,0xb310ab9d
  4186bf:	repnz repnz iret 
  4186c2:	cmp    dl,dl
  4186c4:	and    ebx,edx
  4186c6:	test   DWORD PTR [edi-0x68],ebx
  4186c9:	push   ss
  4186ca:	jge    0x418705
  4186cc:	jecxz  0x4186bf
  4186ce:	dec    edx
  4186cf:	ret    0x44c2
  4186d2:	out    0xc9,al
  4186d4:	push   edi
  4186d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186d6:	push   ecx
  4186d7:	sar    cl,1
  4186d9:	pop    esi
  4186da:	xlat   BYTE PTR ds:[ebx]
  4186db:	loop   0x41868b
  4186dd:	sbb    al,0xcb
  4186df:	xchg   BYTE PTR ds:0x5d3885e8,dl
  4186e5:	shl    DWORD PTR [ebx-0x4a],1
  4186e8:	dec    esp
  4186e9:	sbb    BYTE PTR [edi+0x25cd91ea],ch
  4186ef:	rcr    BYTE PTR [eax-0x24d562b1],cl
  4186f5:	lods   eax,DWORD PTR ds:[esi]
  4186f6:	test   al,0x4d
  4186f8:	pop    ebp
  4186f9:	inc    edi
  4186fa:	out    0xc5,al
  4186fc:	cli    
  4186fd:	ss mov esi,cs
  418700:	sbb    DWORD PTR [ecx+0x39],0xffffff82
  418704:	mov    ebp,0x70a54732
  418709:	lods   eax,DWORD PTR ds:[esi]
  41870a:	sub    eax,0x8d94340
  41870f:	and    eax,0x53f04b0c
  418714:	pusha  
  418715:	inc    edi
  418716:	add    eax,0xeb082905
  41871b:	daa    
  41871c:	xor    eax,0x53770c12
  418721:	faddp  st(4),st
  418723:	sub    edx,DWORD PTR [ebx-0x34]
  418726:	mov    DWORD PTR [edx-0x2d3cebe8],esi
  41872c:	in     eax,dx
  41872d:	inc    ecx
  41872e:	enter  0x2453,0xa5
  418732:	adc    eax,0x56885d07
  418737:	pop    ds
  418738:	fidivr WORD PTR [ecx+edx*1+0x3e5b9a2b]
  41873f:	(bad)  
  418740:	std    
  418741:	aad    0x29
  418743:	into   
  418744:	popf   
  418745:	inc    edx
  418746:	jp     0x41879f
  418748:	pop    ebp
  418749:	imul   BYTE PTR [ebp+0x1f]
  41874c:	test   eax,0xba1b8fb0
  418752:	ror    DWORD PTR [esi],cl
  418754:	pusha  
  418755:	adc    cl,BYTE PTR [ebx+0x22]
  418758:	add    eax,0x86277e0a
  41875d:	fisub  WORD PTR [ecx-0x4d]
  418760:	xlat   BYTE PTR ds:[ebx]
  418761:	sahf   
  418762:	dec    edx
  418763:	jne    0x41874a
  418765:	pop    eax
  418766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418767:	cmp    ecx,ebp
  418769:	gs dec ecx
  41876b:	shl    BYTE PTR [ebx-0x4b],cl
  41876e:	sbb    ch,BYTE PTR [eax+0x3da5908a]
  418774:	pop    edi
  418775:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418776:	aam    0x60
  418778:	push   esi
  418779:	dec    ebx
  41877a:	mov    ebx,0xfed6cd9e
  41877f:	addr16 push ecx
  418781:	pop    ecx
  418782:	ds push ecx
  418784:	cmp    DWORD PTR [edi-0x62],ebp
  418787:	aad    0xe4
  418789:	or     BYTE PTR [ebx-0x51],cl
  41878c:	xor    esp,DWORD PTR [edx-0x4c]
  41878f:	or     dh,BYTE PTR [ebx+0x32d29932]
  418795:	lds    esp,FWORD PTR [ebx-0x53]
  418798:	mov    BYTE PTR [edx+edx*1],dh
  41879b:	sbb    ebx,DWORD PTR [ebp+0x5f]
  41879e:	sub    ah,BYTE PTR [edi-0x32]
  4187a1:	dec    edx
  4187a2:	and    edi,DWORD PTR [edi+esi*8]
  4187a5:	pop    ecx
  4187a6:	stos   DWORD PTR es:[edi],eax
  4187a7:	popa   
  4187a8:	or     dl,ah
  4187aa:	fiadd  DWORD PTR [ebx]
  4187ac:	push   esp
  4187ad:	repz dec edx
  4187af:	or     ecx,DWORD PTR [ebp-0x2d]
  4187b2:	pusha  
  4187b3:	mov    eax,ds:0xd117c1a4
  4187b8:	push   ebp
  4187b9:	jae    0x41876a
  4187bb:	xchg   esp,eax
  4187bc:	sub    DWORD PTR [esi+0xafd9595],edi
  4187c2:	mov    ebx,DWORD PTR [esi-0x1b52c54]
  4187c8:	xor    eax,0x10cad9db
  4187cd:	iret   
  4187ce:	scas   al,BYTE PTR es:[edi]
  4187cf:	sar    BYTE PTR [edi+0x1ca0c182],1
  4187d5:	sub    al,0xeb
  4187d7:	or     al,0xc2
  4187d9:	es push esp
  4187db:	outs   dx,DWORD PTR ds:[esi]
  4187dc:	addr16 dec esp
  4187de:	jns    0x4187c2
  4187e0:	in     eax,dx
  4187e1:	ds addr16 fs mov eax,0x5cfcb159
  4187e9:	jmp    0x41881e
  4187eb:	adc    ebp,esi
  4187ed:	cmp    DWORD PTR [ebx-0x64],esi
  4187f0:	pop    edi
  4187f1:	cmp    eax,0xc85d61b6
  4187f6:	pusha  
  4187f7:	xchg   BYTE PTR [edx+0x54],ch
  4187fa:	push   cs
  4187fb:	mov    esp,0x8356022d
  418800:	pop    ebp
  418801:	dec    esi
  418802:	(bad)  
  418803:	push   ebx
  418804:	mov    ah,0x2d
  418806:	ret    0x5de3
  418809:	and    eax,DWORD PTR [edx]
  41880b:	ror    al,1
  41880d:	(bad)  
  41880f:	test   edi,edx
  418811:	imul   eax,DWORD PTR [edi-0x71],0x3
  418815:	inc    esp
  418816:	pop    esp
  418817:	lea    ecx,[edi+0x2a]
  41881a:	imul   ebp,DWORD PTR [edx],0xffffffec
  41881d:	jmp    0xc517:0xc95d9578
  418824:	inc    edx
  418825:	pop    ebx
  418826:	mov    ecx,0xc75c5b72
  41882b:	leave  
  41882c:	dec    esp
  41882d:	std    
  41882e:	xlat   BYTE PTR ds:[ebx]
  41882f:	xchg   edx,eax
  418830:	dec    ecx
  418831:	(bad)  
  418832:	xor    al,0xd5
  418834:	pop    ebp
  418835:	push   esp
  418836:	pop    ds
  418837:	add    esp,ecx
  418839:	dec    esp
  41883a:	cli    
  41883b:	mov    ecx,0xde1e4c8d
  418840:	dec    edi
  418841:	sbb    eax,0x9ebd52c0
  418846:	and    BYTE PTR [edi+edx*1+0x55],dh
  41884a:	dec    ebx
  41884b:	cmp    BYTE PTR [eax-0x21],ah
  41884e:	iret   
  41884f:	imul   edx,edx,0x96d37509
  418855:	out    dx,eax
  418856:	outs   dx,BYTE PTR ds:[esi]
  418857:	inc    edx
  418858:	arpl   WORD PTR cs:[eiz*1+0x3fdbbe6e],di
  418860:	push   ss
  418861:	xchg   BYTE PTR [edx],ch
  418863:	les    ebp,FWORD PTR [ebx+0x7fd2b538]
  418869:	mov    ds:0xe2ec9e60,al
  41886e:	sbb    eax,0x14655d21
  418873:	add    edx,DWORD PTR [ebx+0x1705303f]
  418879:	inc    esi
  41887a:	sahf   
  41887b:	mov    ecx,0xf31741dd
  418880:	stos   BYTE PTR es:[edi],al
  418881:	jbe    0x4188ce
  418883:	dec    ecx
  418884:	xor    ah,BYTE PTR [esp+ebx*8]
  418887:	inc    ebp
  418888:	fstp   TBYTE PTR [ecx-0x4f]
  41888b:	int3   
  41888c:	or     ebx,DWORD PTR [ecx]
  41888e:	cmp    esi,edx
  418890:	popf   
  418891:	xchg   edx,eax
  418892:	mov    BYTE PTR [ebx+esi*1],ah
  418895:	add    ecx,DWORD PTR [ebx-0x69]
  418898:	(bad)  ds:0x64c55d1c
  41889e:	fs shl ebx,cl
  4188a1:	ins    DWORD PTR es:[edi],dx
  4188a2:	sub    BYTE PTR [ebp+0x0],bh
  4188a5:	push   ecx
  4188a6:	cli    
  4188a7:	pop    ds
  4188a8:	push   esi
  4188a9:	mov    bl,0xff
  4188ab:	fucomip st,st(2)
  4188ad:	xor    BYTE PTR ds:0x7286185c,ah
  4188b3:	into   
  4188b4:	scas   al,BYTE PTR es:[edi]
  4188b5:	pop    ecx
  4188b6:	cmc    
  4188b7:	test   DWORD PTR [ecx+0x6b],0xae015e68
  4188be:	xor    ch,BYTE PTR [edx+eax*8+0x77a44aa9]
  4188c5:	xor    eax,0xb13ea981
  4188ca:	inc    esi
  4188cb:	inc    esp
  4188cc:	cs pop edi
  4188ce:	ror    al,0x11
  4188d1:	test   DWORD PTR [edi],0x8269f895
  4188d7:	out    0xcb,eax
  4188d9:	fimul  DWORD PTR [ebx-0x2c]
  4188dc:	aad    0x6a
  4188de:	mov    BYTE PTR [eax-0x41],ah
  4188e1:	cli    
  4188e2:	data16 test bh,bh
  4188e5:	pop    ecx
  4188e6:	inc    eax
  4188e7:	clc    
  4188e8:	adc    al,0xd7
  4188ea:	pop    edi
  4188eb:	test   eax,0x864047fb
  4188f0:	aad    0xf5
  4188f2:	mov    ch,BYTE PTR [ebp+esi*1+0x29b1e773]
  4188f9:	pop    ebx
  4188fa:	sbb    dh,0x5b
  4188fd:	mov    eax,cs
  4188ff:	add    DWORD PTR ds:0x6ac52c47,0xffffffb5
  418906:	push   0xdfc00f23
  41890b:	or     bl,BYTE PTR [ebp+0x16]
  41890e:	aas    
  41890f:	and    BYTE PTR [edi-0x2a548b],0x17
  418916:	sub    DWORD PTR [eax+0xfd3f973],ebx
  41891c:	and    edi,DWORD PTR [ebx+ecx*2]
  41891f:	push   es
  418920:	pop    ecx
  418921:	ins    BYTE PTR es:[edi],dx
  418922:	or     DWORD PTR cs:[edx-0x442dc2cc],esi
  418929:	jno    0x4188c5
  41892b:	push   ds
  41892c:	dec    esi
  41892d:	ja     0x4188bf
  41892f:	push   ebx
  418930:	mov    DWORD PTR [eax+0x705dd090],ebx
  418936:	mov    ebp,0xa0f57425
  41893b:	rol    BYTE PTR [edi-0x5b],cl
  41893e:	and    BYTE PTR cs:[edi+ebx*1],cl
  418942:	clc    
  418943:	bound  esi,QWORD PTR [ebx]
  418945:	push   0x4b
  418947:	scas   eax,DWORD PTR es:[edi]
  418948:	xor    al,ah
  41894a:	call   0xdc11de86
  41894f:	loopne 0x4189cc
  418951:	xchg   esi,eax
  418952:	imul   edx,ebx,0xba2f580a
  418958:	fs push ebx
  41895a:	ja     0x4188e9
  41895c:	pop    ebp
  41895d:	xchg   esp,eax
  41895e:	push   0xbddb2d7a
  418963:	mov    ebx,0x669b59a3
  418968:	int3   
  418969:	inc    edx
  41896a:	das    
  41896b:	lea    esp,[eax-0x752badd6]
  418971:	ror    DWORD PTR [esi-0x77aa600e],1
  418977:	mov    al,ds:0xd242bbec
  41897c:	jo     0x4189fd
  41897e:	mov    dh,0x36
  418980:	cwde   
  418981:	xchg   edx,eax
  418982:	push   es
  418983:	pop    es
  418984:	inc    edx
  418985:	call   0x259f39a5
  41898a:	xor    eax,ebp
  41898c:	ins    DWORD PTR es:[edi],dx
  41898d:	ss bswap esp
  418990:	xor    al,0xc7
  418992:	(bad)  
  418993:	imul   edi,DWORD PTR [ebp+0x44],0x5
  418997:	out    0x19,eax
  418999:	sbb    esi,0x21
  41899c:	pop    ebp
  41899d:	push   ds
  41899e:	in     eax,0x84
  4189a0:	mov    edx,ecx
  4189a2:	xor    bl,BYTE PTR [edi]
  4189a4:	clc    
  4189a5:	pop    ecx
  4189a6:	icebp  
  4189a7:	test   al,0x32
  4189a9:	or     DWORD PTR [edx-0x2],edx
  4189ac:	mov    WORD PTR [ecx+0x39c5d275],cs
  4189b2:	fwait
  4189b3:	in     al,dx
  4189b4:	push   esi
  4189b5:	stos   BYTE PTR es:[edi],al
  4189b6:	iret   
  4189b7:	mov    al,0x78
  4189b9:	les    ebx,FWORD PTR [edx]
  4189bb:	xor    BYTE PTR [edx],ch
  4189bd:	sti    
  4189be:	rcl    dl,cl
  4189c0:	fdivr  QWORD PTR [ecx]
  4189c2:	(bad)  
  4189c4:	xchg   ebp,eax
  4189c5:	mov    bh,ch
  4189c7:	outs   dx,DWORD PTR ds:[esi]
  4189c8:	pop    ebp
  4189c9:	xchg   esi,eax
  4189ca:	or     BYTE PTR [edi],cl
  4189cc:	rol    DWORD PTR [ecx+edx*1+0x4659dbe6],1
  4189d3:	sub    BYTE PTR [ecx+0x3c],bh
  4189d6:	pop    esi
  4189d7:	(bad)  
  4189d8:	or     eax,0x3a20513a
  4189dd:	fs dec eax
  4189df:	shl    BYTE PTR [edx+0x1af9d9d],cl
  4189e5:	retf   0xd2b6
  4189e8:	(bad)  
  4189e9:	cwde   
  4189ea:	pop    edx
  4189eb:	lea    eax,[ebp+0x5d412286]
  4189f1:	mov    ebx,0x8196a119
  4189f6:	adc    cl,BYTE PTR [ebx]
  4189f8:	or     esi,DWORD PTR [edx-0x1b]
  4189fb:	sbb    esi,edx
  4189fd:	or     DWORD PTR [eax+0x4469bc92],edi
  418a03:	inc    edx
  418a04:	xor    eax,0xf4b94b02
  418a09:	mov    ebx,eax
  418a0b:	xor    DWORD PTR [ecx+0x3ddcb251],edi
  418a11:	dec    ebp
  418a12:	xchg   DWORD PTR [edx],edx
  418a14:	mov    edi,0xbc442000
  418a19:	adc    DWORD PTR [esi+0x23],edx
  418a1c:	pop    edi
  418a1d:	inc    ebx
  418a1e:	jecxz  0x4189f7
  418a20:	jbe    0x4189f7
  418a22:	mov    cl,bh
  418a24:	popa   
  418a25:	imul   BYTE PTR [edx-0x30]
  418a28:	mov    dl,0x7b
  418a2a:	push   ebx
  418a2b:	inc    esi
  418a2c:	aaa    
  418a2d:	jl     0x4189ba
  418a2f:	test   eax,0x2bd69a25
  418a34:	pop    ebp
  418a35:	mov    al,dh
  418a37:	sbb    dl,dl
  418a39:	push   cs
  418a3a:	mov    esi,0xd35ef376
  418a3f:	arpl   sp,bp
  418a41:	adc    eax,0xe97a4293
  418a46:	cwde   
  418a47:	loop   0x418aa6
  418a49:	sub    eax,DWORD PTR [ebp+0x222cbf85]
  418a4f:	mov    ?,WORD PTR [edx-0x1e9106a7]
  418a55:	or     edi,DWORD PTR [eax+eax*8]
  418a58:	jae    0x418aaa
  418a5a:	dec    ebx
  418a5b:	cmc    
  418a5c:	jb     0x418ac4
  418a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a5f:	xchg   ecx,eax
  418a60:	cmp    eax,0xfed2d9f1
  418a65:	(bad)  
  418a67:	mov    ch,cl
  418a69:	ja     0x418a3c
  418a6b:	mov    bh,0x50
  418a6d:	pusha  
  418a6e:	cmp    eax,0xd5d376e7
  418a73:	xlat   BYTE PTR ds:[ebx]
  418a74:	neg    ecx
  418a76:	ficomp WORD PTR [eax+0x2a8a59ad]
  418a7c:	gs mov esp,0x40d9e2c2
  418a82:	dec    ebx
  418a83:	mov    dh,dh
  418a85:	mov    ecx,eax
  418a87:	stos   DWORD PTR es:[edi],eax
  418a88:	stos   DWORD PTR es:[edi],eax
  418a89:	mov    ah,0x3e
  418a8b:	rcr    BYTE PTR [ebp-0x5f5a1dc6],1
  418a91:	sahf   
  418a92:	jmp    0x651a:0x6568aad9
  418a99:	or     eax,0xf95ad2a0
  418a9e:	popf   
  418a9f:	push   esp
  418aa0:	jl     0x418ae1
  418aa2:	xor    edx,ebp
  418aa4:	test   eax,0xa8eb40ea
  418aa9:	pop    ecx
  418aaa:	add    ebp,DWORD PTR [ecx+0x38]
  418aad:	stos   DWORD PTR es:[edi],eax
  418aae:	es call 0x28bee1cc
  418ab4:	scas   al,BYTE PTR es:[edi]
  418ab5:	sbb    DWORD PTR [eax+0x52],edx
  418ab8:	jne    0x418ab8
  418aba:	xchg   ebp,eax
  418abb:	mov    edx,0x69375976
  418ac0:	mov    al,ds:0x62515d88
  418ac5:	xor    DWORD PTR [esi+esi*2-0x28],edx
  418ac9:	cmp    DWORD PTR [ecx+0x736e58c1],edx
  418acf:	daa    
  418ad0:	xchg   ecx,eax
  418ad1:	pop    ecx
  418ad2:	push   0x2f
  418ad4:	clc    
  418ad5:	lods   al,BYTE PTR es:[esi]
  418ad7:	inc    ebp
  418ad9:	cld    
  418ada:	dec    edx
  418adb:	cmp    BYTE PTR [ecx-0x4f9df954],0x18
  418ae2:	(bad)  
  418ae3:	rol    BYTE PTR [esi],1
  418ae5:	aad    0x92
  418ae7:	and    eax,0x268aeddc
  418aec:	pop    esi
  418aed:	sub    BYTE PTR [ebx-0x40],dh
  418af0:	pop    ebp
  418af1:	(bad)  
  418af2:	shr    DWORD PTR [edi+eax*8-0xf],0xa5
  418af7:	jnp    0x418aef
  418af9:	xor    esp,ebp
  418afb:	fsub   QWORD PTR [eax+0x64]
  418afe:	xor    al,0xd2
  418b00:	mov    DWORD PTR [esi-0x68],esp
  418b03:	int    0xcb
  418b05:	cmp    eax,0xf0b32254
  418b0a:	mov    edx,0x2b4e6239
  418b0f:	test   al,0xe6
  418b11:	retf   
  418b12:	jb     0x418ae7
  418b14:	sbb    BYTE PTR [edi-0x35],0x65
  418b18:	ret    
  418b19:	mov    al,0x95
  418b1b:	push   eax
  418b1c:	outs   dx,DWORD PTR ds:[esi]
  418b1d:	hlt    
  418b1e:	cmp    al,0x11
  418b20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b21:	pop    ecx
  418b22:	mov    dh,0xd6
  418b24:	fsub   QWORD PTR [ecx]
  418b26:	daa    
  418b27:	fsubrp st(5),st
  418b29:	ficom  WORD PTR [edx+0x3d970c52]
  418b2f:	jb     0x418b80
  418b31:	fmul   DWORD PTR [ecx+0x45]
  418b34:	scas   al,BYTE PTR es:[edi]
  418b35:	cdq    
  418b36:	popf   
  418b37:	fcomp  DWORD PTR [esi+0x7db59239]
  418b3d:	push   ds
  418b3e:	in     eax,dx
  418b3f:	shl    BYTE PTR [ecx+esi*8-0x47d97c08],cl
  418b46:	ret    0x5d4c
  418b49:	xchg   edi,eax
  418b4a:	and    BYTE PTR [ebx+0x1a],bh
  418b4d:	jbe    0x418ad9
  418b4f:	fdivr  QWORD PTR [ecx]
  418b51:	inc    esi
  418b52:	add    esi,esi
  418b54:	mov    eax,ds:0x9d26661
  418b59:	ret    
  418b5a:	dec    edx
  418b5b:	mov    edi,0x98d3ffad
  418b60:	cmc    
  418b61:	and    DWORD PTR [esi-0x2d],0x3ed607be
  418b68:	nop
  418b69:	lods   eax,DWORD PTR ds:[esi]
  418b6a:	pop    es
  418b6b:	mov    bh,0x5d
  418b6d:	mov    dl,0xc9
  418b6f:	adc    dl,BYTE PTR [esi-0x3c]
  418b72:	mov    dh,0xc5
  418b74:	jns    0x418bcf
  418b76:	icebp  
  418b77:	jae    0x418b41
  418b79:	aam    0x7c
  418b7b:	shr    DWORD PTR [edx-0x1],0x55
  418b7f:	push   ss
  418b80:	xchg   ebx,eax
  418b81:	adc    BYTE PTR [edi-0x30],bl
  418b84:	jno    0x418b18
  418b86:	bound  edx,QWORD PTR [esi+0x1e]
  418b89:	(bad)  
  418b8a:	je     0x418b73
  418b8c:	sbb    edx,esi
  418b8e:	fstp   st(6)
  418b90:	je     0x418b9d
  418b92:	inc    edx
  418b93:	xchg   ebx,eax
  418b94:	and    BYTE PTR [ebx-0x460aec60],dh
  418b9a:	jne    0x418bec
  418b9c:	pop    ebp
  418b9d:	cs mov ecx,0xd0f50b03
  418ba3:	add    eax,0x44485957
  418ba8:	ror    DWORD PTR [ecx],cl
  418baa:	cmp    BYTE PTR gs:[edi+eiz*2+0x4b],dl
  418baf:	and    DWORD PTR ds:0xac67f2a7,ebp
  418bb5:	xor    esp,ebx
  418bb7:	shl    ebp,cl
  418bb9:	and    ah,BYTE PTR [esi+0x36]
  418bbc:	and    eax,0x8c946392
  418bc1:	mov    cl,0x33
  418bc3:	aaa    
  418bc4:	pop    ebp
  418bc5:	inc    ebx
  418bc6:	jmp    0x418ba3
  418bc8:	aaa    
  418bc9:	fs jmp 0x2e5c:0x4e1616a9
  418bd1:	inc    esi
  418bd2:	adc    al,0x45
  418bd4:	dec    eax
  418bd5:	(bad)  
  418bd6:	(bad)  
  418bd8:	mov    dl,BYTE PTR [edx-0x6edcdbb6]
  418bde:	in     al,0xed
  418be0:	js     0x418be3
  418be2:	pop    esi
  418be3:	aad    0x7b
  418be5:	inc    esp
  418be6:	fld    DWORD PTR [ecx-0x16eef64e]
  418bec:	pop    eax
  418bed:	add    al,0x4a
  418bef:	pusha  
  418bf0:	rcl    BYTE PTR [esi+0x4f],0x13
  418bf4:	int    0x3
  418bf6:	dec    ecx
  418bf7:	and    BYTE PTR gs:[ecx+0x2f],cl
  418bfb:	jmp    DWORD PTR [eax-0x52e6352c]
  418c01:	inc    esi
  418c02:	pushf  
  418c03:	fldcw  WORD PTR [ebx]
  418c05:	mov    DWORD PTR [ebx],edx
  418c07:	dec    esi
  418c08:	jnp    0x418c63
  418c0a:	(bad)  
  418c0b:	aam    0x8
  418c0d:	je     0x418c57
  418c0f:	xchg   edx,eax
  418c10:	loop   0x418c6b
  418c12:	jl     0x418bfe
  418c14:	xchg   edi,eax
  418c15:	sub    dl,cl
  418c17:	scas   eax,DWORD PTR es:[edi]
  418c18:	inc    esp
  418c19:	lea    ebp,[edi]
  418c1b:	jae    0x418c50
  418c1d:	sbb    ch,BYTE PTR [edi]
  418c1f:	lods   al,BYTE PTR ds:[esi]
  418c20:	pop    edi
  418c21:	add    al,0xcb
  418c23:	or     BYTE PTR [edi],cl
  418c25:	xor    al,0x45
  418c27:	and    eax,0x3f6ebf3e
  418c2c:	sub    eax,0xdba6f146
  418c31:	mov    ds:0x411d2019,al
  418c36:	pop    esi
  418c37:	in     al,0x6
  418c39:	lahf   
  418c3a:	imul   edx,DWORD PTR [ebx+0x3a],0x3f621ac4
  418c41:	jo     0x418c11
  418c43:	push   eax
  418c44:	(bad)  ds:0x305a4f03
  418c4a:	sbb    al,0xea
  418c4c:	mov    esi,0xcc67521b
  418c51:	iret   
  418c52:	inc    esi
  418c53:	xchg   edx,eax
  418c54:	inc    ebx
  418c55:	sub    eax,edi
  418c57:	pop    ecx
  418c58:	jo     0x418cb3
  418c5a:	loopne 0x418c50
  418c5c:	in     al,dx
  418c5d:	push   ebx
  418c5e:	retf   
  418c5f:	popf   
  418c60:	test   bl,ah
  418c62:	push   ebx
  418c63:	sti    
  418c64:	push   edx
  418c65:	push   cs
  418c66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c67:	ret    0x5b8b
  418c6a:	mov    BYTE PTR [esi],cl
  418c6c:	xchg   ebp,eax
  418c6d:	imul   BYTE PTR ds:0x89f83d9f
  418c73:	aad    0x5c
  418c75:	(bad)  
  418c76:	(bad)
  418c79:	fadd   QWORD PTR [esi]
  418c7b:	inc    edx
  418c7c:	jge    0x418c6a
  418c7e:	jg     0x418c42
  418c80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c81:	arpl   WORD PTR [ebx],sp
  418c83:	inc    esi
  418c84:	(bad)  
  418c85:	or     eax,0xae511f8b
  418c8a:	and    DWORD PTR [edi+0x6f],esp
  418c8d:	inc    edx
  418c8e:	std    
  418c8f:	cld    
  418c90:	mov    edx,0x8bd967
  418c95:	inc    esi
  418c96:	cmc    
  418c97:	cmp    eax,0xd390b643
  418c9c:	and    eax,0x4d6c0cc0
  418ca1:	aam    0x1b
  418ca3:	ret    0x2c4b
  418ca6:	xor    esi,esp
  418ca8:	fsub   QWORD PTR [esi+0x3c2b474a]
  418cae:	loope  0x418c77
  418cb0:	int    0xa1
  418cb2:	jno    0x418c87
  418cb4:	test   DWORD PTR [edx-0x38],esi
  418cb7:	inc    esi
  418cb8:	and    ch,BYTE PTR [esi-0x5d]
  418cbb:	call   FWORD PTR [ebp+0x2c]
  418cbe:	cmp    eax,0xc08a98be
  418cc3:	imul   eax,DWORD PTR [esi+0x5d496405],0x285b366a
  418ccd:	xchg   DWORD PTR [ebp-0x607aa2a0],esi
  418cd3:	in     al,dx
  418cd4:	call   0x7f2d0497
  418cd9:	pop    ecx
  418cda:	fnstcw WORD PTR [ebx]
  418cdc:	mov    al,ds:0xd324a02d
  418ce1:	inc    ebx
  418ce2:	push   edx
  418ce3:	leave  
  418ce4:	or     BYTE PTR [ebp-0x5afc6c7a],0x46
  418ceb:	inc    ecx
  418cec:	ins    DWORD PTR es:[edi],dx
  418ced:	xchg   ebp,eax
  418cee:	(bad)  
  418cf0:	mov    ds:0xee924caf,eax
  418cf5:	mov    WORD PTR [edx-0x68],?
  418cf8:	outs   dx,DWORD PTR ds:[esi]
  418cf9:	fild   QWORD PTR [esi-0x44]
  418cfc:	fstp   QWORD PTR ds:0x63d39456
  418d02:	bound  edx,QWORD PTR [ebx+0x1a09abc7]
  418d08:	push   0x2e
  418d0a:	dec    ebx
  418d0b:	dec    esi
  418d0c:	test   eax,0x5409c3db
  418d11:	out    0x4a,eax
  418d13:	xor    al,0xa
  418d15:	sahf   
  418d16:	daa    
  418d17:	fcmovnbe st,st(5)
  418d19:	xchg   edi,eax
  418d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d1b:	(bad)  
  418d1c:	neg    DWORD PTR [ecx-0x4d]
  418d1f:	outs   dx,DWORD PTR ds:[esi]
  418d20:	mov    ds:0xc87b56f2,al
  418d25:	pop    ss
  418d26:	dec    ebx
  418d27:	mov    eax,0xaec0255c
  418d2c:	jnp    0x418cd4
  418d2e:	icebp  
  418d2f:	jmp    FWORD PTR ds:0x15cbe22e
  418d35:	arpl   WORD PTR [edi-0x27],sp
  418d38:	fnsave [edx-0x2700215a]
  418d3e:	and    BYTE PTR [ebx],dh
  418d40:	pop    eax
  418d41:	(bad)  
  418d43:	mov    WORD PTR [edi],fs
  418d45:	sbb    BYTE PTR [edx],dh
  418d47:	rol    DWORD PTR [eax+0x59],1
  418d4a:	clc    
  418d4b:	or     DWORD PTR [esi+ebp*4+0x57bb2b2b],edx
  418d52:	je     0x418d57
  418d54:	mov    esi,0xaede4a83
  418d59:	inc    edx
  418d5a:	pusha  
  418d5b:	xor    BYTE PTR [ebp-0x6c],dl
  418d5e:	aad    0xd2
  418d60:	test   eax,0xb135bb73
  418d65:	jmp    DWORD PTR [ebx]
  418d67:	sbb    eax,0xf0444f56
  418d6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d6d:	ret    0x2c4a
  418d70:	xor    esi,DWORD PTR [edi+0x3ed7d37f]
  418d76:	(bad)  
  418d77:	mov    ah,0x26
  418d79:	push   0x4c5cd79d
  418d7e:	popa   
  418d7f:	(bad)  
  418d80:	je     0x418d67
  418d82:	sbb    BYTE PTR [ecx-0x2ce9e0e3],0x19
  418d89:	and    DWORD PTR [ecx-0x3fc9686c],0x4ab74bae
  418d93:	xchg   ebp,eax
  418d94:	jmp    0x418e11
  418d96:	stc    
  418d97:	add    ah,bl
  418d99:	sti    
  418d9a:	inc    edx
  418d9b:	rol    BYTE PTR [ecx],cl
  418d9d:	or     BYTE PTR [esi+0x2a],al
  418da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418da1:	call   0x580:0xa5d1e91
  418da8:	mov    esi,cs
  418daa:	mov    al,ds:0x88595286
  418daf:	test   al,0x75
  418db1:	ja     0x418d40
  418db3:	inc    ebx
  418db4:	call   0x7947:0xa8024b07
  418dbb:	mov    cl,0xfa
  418dbd:	xchg   edx,eax
  418dbe:	test   edx,edx
  418dc0:	cmp    bh,dh
  418dc2:	pop    esp
  418dc3:	in     eax,0x89
  418dc5:	push   ebx
  418dc6:	jmp    0x6c59eae0
  418dcb:	inc    edi
  418dcc:	adc    BYTE PTR [ecx],cl
  418dce:	outs   dx,DWORD PTR ds:[esi]
  418dcf:	enter  0x541,0x29
  418dd3:	lahf   
  418dd4:	pop    ebp
  418dd5:	xor    dh,ch
  418dd7:	push   edx
  418dd8:	mov    al,0x81
  418dda:	loope  0x418dee
  418ddc:	pop    ebp
  418ddd:	push   ss
  418dde:	push   edx
  418ddf:	jae    0x418e45
  418de1:	jns    0x418e1e
  418de3:	mov    ecx,0xaa3f7244
  418de8:	pop    ebp
  418de9:	mov    ds:0x85455fa2,eax
  418dee:	lods   al,BYTE PTR ds:[esi]
  418def:	in     eax,dx
  418df0:	push   esp
  418df1:	cwde   
  418df2:	cwde   
  418df3:	jle    0x418e24
  418df5:	fcmovnbe st,st(3)
  418df7:	icebp  
  418df8:	aad    0xfb
  418dfa:	inc    esp
  418dfb:	xchg   edx,eax
  418dfc:	dec    ebx
  418dfd:	ss (bad) 
  418dff:	aad    0x84
  418e01:	mov    eax,ds:0xe8a0f379
  418e06:	fwait
  418e07:	pop    es
  418e08:	pop    ebx
  418e09:	jns    0x418dc9
  418e0b:	rcr    BYTE PTR [ebp-0x3d],0xea
  418e0f:	pop    edx
  418e10:	push   ecx
  418e11:	pop    edi
  418e12:	jo     0x418e0c
  418e14:	mov    ch,0x59
  418e16:	rcl    edi,1
  418e18:	arpl   dx,di
  418e1a:	jo     0x418de9
  418e1c:	jbe    0x418e40
  418e1e:	dec    ebx
  418e1f:	cli    
  418e20:	into   
  418e21:	xchg   edx,eax
  418e22:	ret    
  418e23:	sbb    ch,ch
  418e25:	hlt    
  418e26:	jb     0x418dfb
  418e28:	aam    0x6d
  418e2a:	rcl    ebp,0xd7
  418e2d:	loopne 0x418e63
  418e2f:	inc    edx
  418e30:	xchg   ebp,eax
  418e31:	fst    QWORD PTR [esi-0x2e]
  418e34:	ja     0x418e19
  418e36:	daa    
  418e37:	(bad)  
  418e38:	dec    esi
  418e39:	xor    al,0x23
  418e3b:	sar    BYTE PTR [eax],cl
  418e3d:	cwde   
  418e3e:	add    BYTE PTR [ebp-0x67],ch
  418e41:	or     al,0xb7
  418e43:	mov    ecx,0x1f84665d
  418e48:	jbe    0x418e1c
  418e4a:	add    eax,0x7256d974
  418e4f:	out    0xf,al
  418e51:	inc    eax
  418e52:	fdivr  DWORD PTR [esi+0x54cc5eda]
  418e58:	nop
  418e59:	pop    ecx
  418e5a:	pop    esp
  418e5b:	jbe    0x418e1d
  418e5d:	fmul   DWORD PTR [edx-0x4b]
  418e60:	inc    eax
  418e61:	ja     0x418e32
  418e63:	fwait
  418e64:	sbb    DWORD PTR [eax-0x6e962dd5],esp
  418e6a:	cmp    DWORD PTR cs:[ecx],edi
  418e6d:	sar    dl,1
  418e6f:	loope  0x418ece
  418e71:	int    0xad
  418e73:	mov    ch,ch
  418e75:	push   esp
  418e76:	lock xor al,0xf0
  418e79:	pop    ecx
  418e7a:	popf   
  418e7b:	(bad)  
  418e7c:	jnp    0x418e4e
  418e7e:	or     dl,BYTE PTR [eax+eax*1+0x5d197720]
  418e85:	cs jne 0x418e85
  418e88:	add    ebp,edi
  418e8a:	test   eax,0xa159adde
  418e8f:	mov    bp,0xcd8c
  418e93:	or     BYTE PTR [edi],ah
  418e95:	jnp    0x418ee2
  418e97:	pop    esp
  418e98:	cmp    eax,0xcaf3c385
  418e9d:	test   eax,0x76f4d2c5
  418ea2:	fwait
  418ea3:	mov    eax,ds:0x2161f9c1
  418ea8:	pop    ebp
  418ea9:	and    DWORD PTR [ebp+0x53],edi
  418eac:	sub    eax,0x5f9e3c2a
  418eb1:	pop    ecx
  418eb2:	cs retf 0xcc79
  418eb6:	mov    esp,0x4b0825e7
  418ebb:	dec    ebx
  418ebc:	xchg   ebx,eax
  418ebd:	sub    ah,BYTE PTR [edi+edx*4+0x39]
  418ec1:	out    0x1,eax
  418ec3:	scas   al,BYTE PTR es:[edi]
  418ec4:	hlt    
  418ec5:	pop    ecx
  418ec6:	cmp    DWORD PTR [edx],ebx
  418ec8:	mov    cl,0x6c
  418eca:	push   0xffffffa5
  418ecc:	(bad)  
  418ecd:	gs dec ebx
  418ecf:	mov    edx,0x4fb7a384
  418ed4:	jmp    0x418ea4
  418ed6:	cmp    eax,0xfba68d1
  418edb:	cmp    al,0x2a
  418edd:	into   
  418ede:	stos   BYTE PTR es:[edi],al
  418edf:	mov    ebx,edi
  418ee1:	adc    BYTE PTR [ebx+0x3b],cl
  418ee4:	lea    ebx,[ebx]
  418ee6:	sub    DWORD PTR [ebx-0x2d1532ab],edx
  418eec:	shl    BYTE PTR [ebp+0x277afd4f],1
  418ef2:	inc    esi
  418ef3:	xchg   ebp,eax
  418ef4:	gs dec ecx
  418ef6:	pop    eax
  418ef7:	shr    DWORD PTR [esi-0x41bfc279],1
  418efd:	mov    eax,0x9d19a338
  418f02:	(bad)  
  418f03:	rol    BYTE PTR [edi+0x4ced500a],cl
  418f09:	arpl   WORD PTR [eax],ax
  418f0b:	fwait
  418f0c:	pop    eax
  418f0d:	mov    bh,0x2
  418f0f:	and    BYTE PTR [ecx+0xe],dl
  418f12:	sbb    eax,0xd807dd2c
  418f17:	pop    ss
  418f18:	loope  0x418f73
  418f1a:	inc    ebp
  418f1b:	jb     0x418f6a
  418f1d:	(bad)  
  418f1e:	and    DWORD PTR ds:0xbc44b916,ebp
  418f24:	repnz add al,0x47
  418f27:	mov    ebp,0x155296dd
  418f2c:	xchg   DWORD PTR [ebx],ecx
  418f2e:	outs   dx,DWORD PTR ds:[esi]
  418f2f:	fbstp  TBYTE PTR [edx+edi*4-0x4d]
  418f33:	xchg   edx,eax
  418f34:	mov    bl,0x9f
  418f36:	fidivr DWORD PTR [ecx-0x23]
  418f39:	mul    DWORD PTR [edx]
  418f3b:	add    ch,BYTE PTR [ebx+0x19eea759]
  418f41:	jns    0x418f4d
  418f43:	ins    DWORD PTR es:[edi],dx
  418f44:	mov    edi,0x852b7a59
  418f49:	mov    eax,ds:0x35e28fcc
  418f4e:	and    ecx,esp
  418f50:	jno    0x418fc1
  418f52:	rcr    bh,cl
  418f54:	pop    ebp
  418f55:	push   es
  418f56:	or     BYTE PTR [edx-0x4a],bh
  418f59:	jns    0x418f16
  418f5b:	shr    ch,cl
  418f5d:	out    0x6c,eax
  418f5f:	xor    dl,ch
  418f61:	jp     0x418eec
  418f63:	call   0xd98b4999
  418f68:	xor    al,0x1
  418f6a:	imul   ebx,DWORD PTR [esi+0x16],0xffffffa9
  418f6e:	inc    ebx
  418f6f:	push   edx
  418f70:	mov    bh,0x8b
  418f72:	pcmpeqb mm7,mm5
  418f75:	pop    ecx
  418f76:	int3   
  418f77:	mov    BYTE PTR [esi+0x28063c9b],cl
  418f7d:	sbb    eax,0xfca4fd4a
  418f82:	pop    edi
  418f83:	repz jmp 0xfaa8:0x9eb280c6
  418f8b:	and    eax,0x6f1c4616
  418f90:	add    cl,BYTE PTR [bx+si-0x2e20]
  418f95:	jmp    0x418fe1
  418f97:	(bad)  
  418f98:	fimul  WORD PTR [ecx-0x7e6516c1]
  418f9e:	in     al,0xd5
  418fa0:	push   ebp
  418fa1:	pop    ebp
  418fa2:	gs ss inc eax
  418fa5:	test   eax,0xa4ae10dd
  418faa:	dec    edx
  418fab:	adc    bh,BYTE PTR [esi-0x45deb606]
  418fb1:	fisubr WORD PTR [edi]
  418fb3:	rcr    dl,cl
  418fb5:	adc    BYTE PTR [edx+edx*4-0xa227387],ah
  418fbc:	push   edx
  418fbd:	(bad)  
  418fbf:	sbb    bl,BYTE PTR [ebx+ebx*8-0x6b]
  418fc3:	dec    edx
  418fc4:	sub    DWORD PTR [ebx-0x29],edi
  418fc7:	int3   
  418fc8:	(bad)  
  418fc9:	xor    BYTE PTR [ecx],ah
  418fcb:	push   0x53
  418fcd:	cmp    al,0x73
  418fcf:	ss mov ebp,0x3d7b703d
  418fd5:	cld    
  418fd6:	push   esp
  418fd7:	(bad)  
  418fd8:	out    dx,eax
  418fd9:	hlt    
  418fda:	or     DWORD PTR [ebx-0x5a34e91f],ecx
  418fe0:	inc    edx
  418fe1:	leave  
  418fe2:	call   0x32f5ed71
  418fe7:	push   esi
  418fe8:	dec    eax
  418fea:	fs aas 
  418fec:	scas   eax,DWORD PTR es:[edi]
  418fed:	pop    ecx
  418fee:	push   es
  418fef:	cmp    al,0x3a
  418ff1:	sub    eax,0xcd4f9a2c
  418ff6:	dec    edx
  418ff7:	pop    esi
  418ff8:	sbb    DWORD PTR [esi-0x45033db1],edx
  418ffe:	lahf   
  418fff:	shl    BYTE PTR [eax-0x69dbb9ec],cl
  419005:	fwait
  419006:	sub    DWORD PTR [ebp+0x599e3c5d],ebx
  41900c:	or     esi,DWORD PTR [eax+edx*2-0x12a69c93]
  419013:	iret   
  419014:	lods   al,BYTE PTR ds:[esi]
  419015:	mov    ds:0x5ffe2686,eax
  41901a:	dec    ebx
  41901b:	mov    WORD PTR [esi-0x21],gs
  41901e:	jecxz  0x418fc4
  419020:	jo     0x418fc3
  419022:	icebp  
  419023:	aad    0x4f
  419025:	adc    DWORD PTR [edi+ecx*8-0x1772a9b6],edx
  41902c:	sbb    DWORD PTR [ecx],esp
  41902e:	push   esp
  41902f:	adc    BYTE PTR [ecx-0x464ce762],dh
  419035:	add    al,0x2b
  419037:	xchg   edi,eax
  419038:	(bad)  
  419039:	pop    ebx
  41903a:	rol    edi,cl
  41903c:	jmp    0x41902e
  41903e:	rcr    DWORD PTR [ebx],cl
  419040:	cmp    eax,0x5d3492a7
  419045:	xor    DWORD PTR [ecx+0x5c],ebx
  419048:	jp     0x41904f
  41904a:	out    dx,al
  41904b:	ss fs pop esi
  41904e:	xor    al,0x7b
  419050:	sub    DWORD PTR [edi-0x2],esp
  419053:	xchg   ebp,eax
  419054:	lea    ebp,[ecx+0x3bc3c59e]
  41905a:	dec    ebx
  41905b:	sbb    eax,0xf2587b9f
  419060:	push   ebx
  419061:	mov    esi,0xaf0bd30e
  419066:	inc    esi
  419067:	fistp  WORD PTR [ebx-0x3e5aa8db]
  41906d:	cdq    
  41906e:	jbe    0x419064
  419070:	ret    
  419071:	ss dec edx
  419073:	pop    edx
  419074:	xchg   ebp,eax
  419075:	push   esi
  419076:	call   0x41696e54
  41907b:	call   0xd32c:0x708a59f9
  419082:	push   ds
  419083:	lds    edi,FWORD PTR [esi+0x5cd14b62]
  419089:	aas    
  41908a:	mov    bp,ax
  41908d:	mov    ebx,tr1
  419090:	aad    0x68
  419092:	or     esp,DWORD PTR [edi-0xd734a23]
  419098:	xchg   edx,eax
  419099:	mov    ecx,0x5a540c02
  41909e:	or     DWORD PTR [ebp-0x4e0e6299],ecx
  4190a4:	lods   eax,DWORD PTR ds:[esi]
  4190a5:	adc    BYTE PTR [ebx],0x87
  4190a8:	sub    eax,0x903bab80
  4190ad:	inc    edi
  4190ae:	pop    esi
  4190af:	imul   eax,DWORD PTR [ecx],0xffffff87
  4190b2:	push   0xffffffe8
  4190b4:	neg    cl
  4190b6:	(bad)  
  4190b8:	pop    ebp
  4190b9:	outs   dx,BYTE PTR ds:[esi]
  4190ba:	fdivr  QWORD PTR [edx+0x67]
  4190bd:	push   DWORD PTR [esi]
  4190bf:	retf   
  4190c0:	mov    al,0xbb
  4190c2:	xor    esi,ebp
  4190c4:	into   
  4190c5:	jno    0x4190e5
  4190c7:	shr    ebp,1
  4190c9:	inc    esp
  4190ca:	ins    BYTE PTR es:[edi],dx
  4190cb:	push   edx
  4190cc:	(bad)  
  4190cd:	stc    
  4190ce:	pop    esi
  4190cf:	xlat   BYTE PTR ds:[ebx]
  4190d0:	popf   
  4190d1:	xor    eax,0x337a30ee
  4190d6:	stos   BYTE PTR es:[edi],al
  4190d7:	rcr    DWORD PTR ds:0x848a33d4,cl
  4190dd:	and    bl,BYTE PTR [edi+0x3a]
  4190e0:	stos   DWORD PTR es:[edi],eax
  4190e1:	push   esp
  4190e2:	sbb    BYTE PTR [ecx+0x61],al
  4190e5:	pop    esi
  4190e6:	push   edx
  4190e7:	es jnp 0x4190e3
  4190ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190eb:	and    eax,0x6d4b02fa
  4190f0:	add    dl,BYTE PTR [edi]
  4190f2:	adc    DWORD PTR [edi],esp
  4190f4:	push   ss
  4190f5:	test   al,0xb6
  4190f7:	shr    BYTE PTR [ecx+0x5ae93bf4],cl
  4190fd:	rol    DWORD PTR [ebp+0x23],1
  419100:	pop    esp
  419101:	loope  0x419157
  419103:	mov    esp,0x660a15a5
  419108:	adc    al,0xdc
  41910a:	(bad)  
  41910b:	out    dx,eax
  41910c:	popf   
  41910d:	pop    ecx
  41910e:	rcr    DWORD PTR [ebx+0x1e],cl
  419111:	outs   dx,BYTE PTR ds:[esi]
  419112:	inc    ebp
  419113:	ret    0x994
  419116:	push   ebp
  419117:	sbb    al,0x11
  419119:	mov    ah,0x61
  41911b:	call   0x5aef:0xba66b9bf
  419122:	(bad)  
  419123:	in     al,0x18
  419125:	xor    BYTE PTR [ecx+0x49ee2dad],bh
  41912b:	retf   
  41912c:	pop    ebp
  41912d:	mov    WORD PTR [eax+0x1bb57dbf],ds
  419133:	mov    ds:0xcfcc597e,al
  419138:	pop    esi
  419139:	jae    0x4190cb
  41913b:	and    DWORD PTR [ebx+0x17],0x31
  41913f:	jne    0x419171
  419141:	inc    edx
  419142:	dec    ebx
  419143:	xlat   BYTE PTR ds:[ebx]
  419144:	sbb    dl,BYTE PTR [esi]
  419146:	dec    edi
  419147:	cmp    eax,0x39f05949
  41914c:	sbb    BYTE PTR [ecx-0x6e826d62],ah
  419152:	test   eax,0x28545dd9
  419157:	push   esi
  419158:	clc    
  419159:	in     eax,dx
  41915a:	push   cs
  41915b:	adc    ebp,edx
  41915d:	int    0x29
  41915f:	cli    
  419160:	add    DWORD PTR [eax+0x64def1d5],edi
  419166:	inc    ebp
  419167:	push   esp
  419168:	dec    edi
  419169:	call   0xa6fc5ed6
  41916e:	daa    
  41916f:	adc    ah,cl
  419171:	ficomp DWORD PTR [eax-0x3f402413]
  419177:	xchg   ebx,eax
  419178:	cwde   
  419179:	push   ebx
  41917a:	xchg   ebx,eax
  41917b:	dec    edi
  41917c:	inc    edx
  41917d:	pop    esi
  41917e:	ret    0x748b
  419181:	cli    
  419182:	dec    eax
  419183:	mov    cl,0x31
  419185:	shl    DWORD PTR [edx+0x521aa514],0x5a
  41918c:	mov    cl,0x36
  41918e:	fs adc ebp,eax
  419191:	dec    esp
  419192:	adc    bh,cl
  419194:	in     eax,dx
  419195:	jbe    0x41920e
  419197:	push   es
  419198:	fst    QWORD PTR [esp+ecx*1+0x6230d4ee]
  41919f:	loop   0x4191fe
  4191a1:	cmp    DWORD PTR [edi+0x20721972],0xffffff91
  4191a8:	fcomp  QWORD PTR [ecx-0x20]
  4191ab:	neg    BYTE PTR [esi-0x516d7a93]
  4191b1:	sti    
  4191b2:	dec    edx
  4191b3:	pop    ecx
  4191b4:	or     bh,ch
  4191b6:	sub    al,0x85
  4191b8:	cmp    ch,ah
  4191ba:	call   0xa53d:0xbd08bad2
  4191c1:	(bad)  
  4191c2:	mov    ch,BYTE PTR [esp+ebp*4+0x39]
  4191c6:	dec    ebx
  4191c7:	ret    0x90a7
  4191ca:	scas   eax,DWORD PTR es:[edi]
  4191cb:	mov    ch,0x9
  4191cd:	stc    
  4191ce:	aaa    
  4191cf:	inc    ebp
  4191d0:	dec    eax
  4191d1:	inc    esi
  4191d2:	jno    0x4191b1
  4191d4:	push   edx
  4191d5:	push   0x69b57440
  4191da:	dec    ebx
  4191db:	dec    ecx
  4191dc:	adc    cl,BYTE PTR [ebp+0x3a9d7dfc]
  4191e2:	pushf  
  4191e3:	rcl    bh,cl
  4191e5:	mov    esi,0xd5d8167a
  4191ea:	in     eax,0xa0
  4191ec:	pop    ebp
  4191ed:	fsubr  st(4),st
  4191ef:	mov    bh,0xc
  4191f2:	dec    ebp
  4191f3:	out    0x4c,al
  4191f5:	pop    edx
  4191f6:	xor    BYTE PTR [ecx],al
  4191f8:	imul   esi,edi,0xffffffc1
  4191fb:	in     al,0xde
  4191fd:	stc    
  4191fe:	or     ebx,DWORD PTR [eax-0x53]
  419201:	add    BYTE PTR [ebp-0x31],al
  419204:	loopne 0x4191bf
  419206:	dec    edx
  419207:	pop    eax
  419208:	mov    WORD PTR [edi+0x0],fs
  41920b:	ss cdq 
  41920d:	pop    ecx
  41920e:	popa   
  41920f:	div    BYTE PTR [edx]
  419211:	push   ds
  419212:	or     eax,edx
  419214:	or     DWORD PTR [ecx],ebx
  419216:	dec    ebx
  419217:	fstp   DWORD PTR ds:0x66aba373
  41921d:	sub    DWORD PTR [edx+edx*8+0x4c],edx
  419221:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419222:	inc    ebp
  419223:	nop
  419224:	stos   DWORD PTR es:[edi],eax
  419225:	repz das 
  419227:	mov    ds:0xa353bc52,al
  41922c:	shl    ah,1
  41922e:	out    dx,eax
  41922f:	push   0x4d
  419231:	stc    
  419232:	xchg   edx,eax
  419233:	aad    0xe
  419235:	xor    esp,DWORD PTR [ebx]
  419237:	test   BYTE PTR [ecx+ebx*2-0x68],bh
  41923b:	out    dx,al
  41923c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41923d:	ds push esi
  41923f:	xor    bh,dl
  419241:	pop    ds
  419242:	sbb    esp,DWORD PTR [ebx+0x7496f984]
  419248:	jg     0x419215
  41924a:	cs leave 
  41924c:	icebp  
  41924d:	imul   ebp,DWORD PTR [eax-0x24],0xf2506756
  419254:	popa   
  419255:	jns    0x419281
  419257:	sub    al,0x75
  419259:	pop    esi
  41925a:	mov    cl,0x4b
  41925c:	push   eax
  41925d:	mov    ebp,0x6b44115c
  419262:	mov    esp,edi
  419264:	(bad)  
  419265:	cld    
  419266:	mov    cl,0xbc
  419268:	xor    BYTE PTR [eax-0x3e],bl
  41926b:	or     al,ah
  41926d:	ds xor eax,0x26f9bdad
  419273:	and    DWORD PTR [edx+0x25],edx
  419276:	jg     0x4192ae
  419278:	push   ds
  419279:	enter  0xa246,0xa0
  41927d:	mov    eax,ds:0x74d6d61a
  419282:	aaa    
  419283:	sub    DWORD PTR [ecx+ebx*4+0x7243bc9d],ebx
  41928a:	dec    edx
  41928b:	scas   eax,DWORD PTR es:[edi]
  41928c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41928d:	add    ah,BYTE PTR [edi]
  41928f:	jne    0x4192ce
  419291:	scas   eax,DWORD PTR es:[edi]
  419292:	mov    BYTE PTR [ebp-0x7fbeb88f],cl
  419298:	jle    0x2f941608
  41929e:	(bad)  
  41929f:	mov    esp,0x8644545d
  4192a4:	enter  0xa833,0x5e
  4192a8:	pop    ds
  4192a9:	mov    al,ds:0x59e8be86
  4192ae:	add    ecx,ecx
  4192b0:	je     0x4192f2
  4192b2:	pop    ss
  4192b3:	out    dx,al
  4192b4:	xor    DWORD PTR [esi+0x73076c4a],edi
  4192ba:	call   0x95d2:0xd2930ce7
  4192c1:	inc    ebx
  4192c2:	or     al,0x19
  4192c4:	mov    eax,ds:0x5d2d5e19
  4192c9:	ss mov cl,0xa6
  4192cc:	dec    eax
  4192cd:	bnd ret 0x39e8
  4192d1:	inc    esi
  4192d2:	xor    BYTE PTR [edi],dh
  4192d4:	scas   al,BYTE PTR es:[edi]
  4192d5:	in     al,0x68
  4192d7:	mov    ah,0x6e
  4192d9:	out    dx,eax
  4192da:	dec    edx
  4192db:	sub    edx,DWORD PTR [ebx+ecx*4-0x33]
  4192df:	js     0x41933a
  4192e1:	and    DWORD PTR [esi],esi
  4192e3:	cli    
  4192e4:	stos   DWORD PTR es:[edi],eax
  4192e5:	push   esi
  4192e6:	ins    DWORD PTR es:[edi],dx
  4192e7:	rol    DWORD PTR [ebp+0x18],cl
  4192ea:	adc    dh,BYTE PTR [eax+edi*1-0x3c]
  4192ee:	pop    ds
  4192ef:	jnp    0x41934e
  4192f1:	jge    0x41935f
  4192f3:	mov    dl,0x92
  4192f5:	mov    edi,0x59f5e3b0
  4192fa:	jmp    0xec3f:0x10958f57
  419301:	std    
  419302:	jbe    0x419303
  419304:	push   edx
  419305:	push   ebx
  419306:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419307:	retf   
  419308:	leave  
  419309:	ins    BYTE PTR es:[edi],dx
  41930a:	js     0x419387
  41930c:	test   al,0x70
  41930e:	xchg   esp,eax
  41930f:	shl    BYTE PTR [ebx],cl
  419311:	je     0x419363
  419313:	xchg   edx,eax
  419314:	inc    ecx
  419315:	and    BYTE PTR [ecx],bl
  419317:	or     eax,0x8c5479a2
  41931c:	push   ecx
  41931d:	std    
  41931e:	dec    eax
  419320:	lods   al,BYTE PTR ds:[esi]
  419321:	pop    ebx
  419322:	sbb    edx,DWORD PTR [edi+0x32]
  419325:	pop    ecx
  419326:	sub    eax,0xa3c424c4
  41932b:	mov    esp,0x696e9d64
  419330:	push   esp
  419331:	inc    edi
  419332:	sti    
  419333:	jg     0x4192cd
  419335:	(bad)  
  419337:	pop    es
  419338:	xchg   edi,eax
  419339:	imul   DWORD PTR [ebx+0x11bf13d2]
  41933f:	mov    esi,0x3e818f12
  419344:	pop    ebp
  419345:	jae    0x4193b5
  419347:	std    
  419348:	(bad)  
  419349:	push   edx
  41934a:	stos   BYTE PTR es:[edi],al
  41934b:	lods   eax,DWORD PTR ds:[esi]
  41934c:	repnz ss inc ebx
  41934f:	sar    BYTE PTR [ebx+edx*1],cl
  419352:	add    DWORD PTR [eax+0x7d],0xffffffc2
  419356:	shl    DWORD PTR [esi+0x21219d5d],0xc1
  41935d:	mov    ecx,esp
  41935f:	sbb    ecx,ebp
  419361:	pop    ecx
  419362:	xchg   ecx,eax
  419363:	xlat   BYTE PTR ds:[ebx]
  419364:	add    DWORD PTR [edx-0x3abfb6d2],0x26
  41936b:	jl     0x4192f7
  41936d:	(bad)  [ecx-0x46]
  419370:	mov    DWORD PTR [eax+0x72952da9],edx
  419376:	mov    eax,0xe5cd50a9
  41937b:	pop    esi
  41937c:	imul   ebx,ecx,0xffffff82
  41937f:	dec    edi
  419380:	daa    
  419381:	retf   
  419382:	push   esi
  419383:	push   ecx
  419384:	sub    BYTE PTR [ebp+ebx*4+0x7a],ah
  419388:	inc    esi
  419389:	pop    ecx
  41938a:	loop   0x41938b
  41938c:	inc    ebp
  41938d:	xor    al,0xd
  41938f:	pusha  
  419390:	test   eax,0x317f4b5f
  419395:	xor    al,0xc4
  419397:	call   0x59c1:0xbe9b176e
  41939e:	fimul  DWORD PTR [esi-0x3e0b0328]
  4193a4:	cmc    
  4193a5:	push   cs
  4193a6:	jle    0x4193db
  4193a8:	mov    bl,0xef
  4193aa:	dec    ecx
  4193ab:	jne    0x4193dc
  4193ad:	outs   dx,BYTE PTR ds:[esi]
  4193ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193af:	cmp    DWORD PTR [edx-0x2c8567ed],esi
  4193b5:	in     eax,dx
  4193b6:	iret   
  4193b7:	call   DWORD PTR [esi+0x77]
  4193ba:	dec    ebx
  4193bb:	sbb    eax,DWORD PTR [edx+0x33581bf5]
  4193c1:	lea    ebx,[esi-0x2d]
  4193c4:	loope  0x4193ac
  4193c6:	jnp    0x41938a
  4193c8:	(bad)  
  4193c9:	jns    0x4193d2
  4193cb:	sbb    al,0xc7
  4193cd:	dec    ebx
  4193ce:	mov    ah,0xd2
  4193d0:	inc    ebp
  4193d1:	adc    ch,0xd4
  4193d4:	(bad)  
  4193d5:	cmp    eax,0xea565a2d
  4193da:	enter  0x775b,0xa7
  4193de:	dec    edx
  4193df:	pop    ecx
  4193e0:	jle    0x419431
  4193e2:	xor    eax,0xe6d3f3d1
  4193e7:	test   al,0x9c
  4193e9:	into   
  4193ea:	mov    dl,0xea
  4193ec:	mov    esp,0xe5a04b1f
  4193f1:	clc    
  4193f2:	ins    BYTE PTR es:[edi],dx
  4193f3:	mov    dh,0x5f
  4193f5:	adc    al,0x5
  4193f7:	aad    0xd8
  4193f9:	or     ebp,ecx
  4193fb:	sbb    eax,ecx
  4193fd:	mov    ds:0x7f5cce55,al
  419402:	stos   DWORD PTR es:[edi],eax
  419403:	not    BYTE PTR [esi]
  419405:	ror    DWORD PTR [edx-0x72],cl
  419408:	in     eax,dx
  419409:	mov    al,cs:0x7ffc5a7c
  41940f:	ror    DWORD PTR [ecx+ebx*1],cl
  419412:	xchg   ecx,eax
  419413:	mov    al,ds:0x60670f7c
  419418:	pop    ebp
  419419:	push   ss
  41941a:	adc    BYTE PTR [ecx-0x1c],ch
  41941d:	std    
  41941e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41941f:	mov    BYTE PTR [ebx],bh
  419421:	inc    esi
  419422:	pop    ecx
  419423:	jg     0x419414
  419425:	leave  
  419426:	mov    BYTE PTR [eax],dh
  419428:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419429:	dec    BYTE PTR [ebx-0x64]
  41942c:	pop    esp
  41942d:	dec    ebp
  41942e:	xlat   BYTE PTR ds:[ebx]
  41942f:	pop    edx
  419430:	call   0x7fd3c4f0
  419435:	xchg   DWORD PTR [eax-0x4b],ebx
  419438:	pop    ebp
  419439:	inc    ecx
  41943a:	(bad)
  41943d:	js     0x4193c5
  41943f:	push   edx
  419440:	dec    edi
  419441:	inc    esp
  419442:	or     al,BYTE PTR [edx]
  419444:	div    DWORD PTR [esi+0x642e120a]
  41944a:	pop    ebp
  41944b:	mov    dl,0x5d
  41944d:	mov    eax,0xe1a0ab19
  419452:	inc    ecx
  419453:	jmp    0x4ec6ee08
  419458:	ds xor al,0xcd
  41945b:	lods   al,BYTE PTR ds:[esi]
  41945c:	icebp  
  41945d:	xor    al,0x54
  41945f:	leave  
  419460:	xlat   BYTE PTR ds:[ebx]
  419461:	mov    bh,0x2c
  419463:	xor    al,0x94
  419465:	xor    ch,BYTE PTR [ebx+0x76]
  419468:	adc    al,0x46
  41946a:	in     al,dx
  41946b:	(bad)  
  41946e:	bound  esp,QWORD PTR [ebx+edi*4]
  419471:	in     eax,0x47
  419473:	cmp    cl,BYTE PTR [edi+0x13]
  419476:	or     esi,DWORD PTR [edx+0x434f6b42]
  41947c:	mov    ah,0x59
  41947e:	popa   
  41947f:	gs and al,0x39
  419482:	retf   0xe879
  419485:	mov    al,ds:0xcd837c43
  41948a:	clc    
  41948b:	xchg   ebp,eax
  41948c:	fld    QWORD PTR [ecx-0x32]
  41948f:	inc    eax
  419490:	adc    edi,eax
  419492:	cmp    al,0x33
  419494:	mov    ecx,0xd0524ae7
  419499:	and    bh,cl
  41949b:	xor    bh,cl
  41949d:	or     eax,0x7076d287
  4194a2:	loopne 0x41945b
  4194a4:	push   ss
  4194a5:	xchg   DWORD PTR [edx],eax
  4194a7:	imul   ebx,DWORD PTR [ebp-0x1b],0xa70d88bf
  4194ae:	in     eax,0x2
  4194b0:	sbb    DWORD PTR [esi-0x70a2861],edi
  4194b6:	sbb    esi,DWORD PTR [eax+ebp*2+0x4135cbd9]
  4194bd:	fmul   QWORD PTR [edx-0x1]
  4194c0:	sub    bl,al
  4194c2:	inc    ecx
  4194c3:	or     BYTE PTR [ecx-0x342a4b12],al
  4194c9:	or     ebp,eax
  4194cb:	imul   edi,edx,0x79
  4194ce:	adc    al,0xa4
  4194d0:	jae    0x419548
  4194d2:	dec    ebx
  4194d3:	sub    edx,0x16e6c45
  4194d9:	sub    al,0x18
  4194db:	ror    BYTE PTR [edx-0x1e],cl
  4194de:	outs   dx,BYTE PTR ds:[esi]
  4194df:	mov    eax,0x525e5390
  4194e5:	hlt    
  4194e6:	loope  0x419489
  4194e8:	cmp    bh,al
  4194ea:	sahf   
  4194eb:	pop    ebx
  4194ec:	xchg   DWORD PTR [ecx+0xc89be4a],ebp
  4194f2:	dec    ebx
  4194f3:	push   ds
  4194f4:	arpl   WORD PTR [esi+0x66ac417f],si
  4194fa:	fcmovbe st,st(2)
  4194fc:	lea    edx,[edx+0x45]
  4194ff:	ins    DWORD PTR es:[edi],dx
  419500:	push   eax
  419501:	bound  esp,QWORD PTR [eax-0x6d]
  419504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419505:	dec    ecx
  419506:	dec    ebx
  419507:	sar    BYTE PTR [ebp+0x13],1
  41950a:	xchg   ebp,eax
  41950b:	xchg   al,ah
  41950d:	jecxz  0x419586
  41950f:	sti    
  419510:	lahf   
  419511:	add    eax,0x5551a92f
  419516:	xor    DWORD PTR [edx+0x3c],edx
  419519:	aas    
  41951a:	dec    ebp
  41951b:	sbb    ecx,esp
  41951d:	mov    ds:0xfe28a04a,eax
  419522:	push   0xbd60952b
  419527:	inc    ebp
  419528:	mov    al,0x5e
  41952a:	out    0xb9,eax
  41952c:	repnz iret 
  41952e:	test   al,0xe1
  419530:	(bad)  
  419532:	mov    ds:0xdee11bfb,eax
  419537:	test   eax,0x4f261257
  41953c:	push   cs
  41953d:	test   al,0xcc
  41953f:	int    0x5e
  419541:	ins    DWORD PTR es:[edi],dx
  419542:	rol    BYTE PTR [edx+0x52],cl
  419545:	ja     0x4194e6
  419547:	cmp    edx,DWORD PTR [esi]
  419549:	mov    dh,0x55
  41954b:	imul   ebx,esi,0x3d664b13
  419551:	rcr    BYTE PTR [edx],1
  419553:	bound  eax,QWORD PTR [ebp+0x1a]
  419556:	xor    dl,dl
  419558:	cmp    edi,DWORD PTR [ecx+0x3]
  41955b:	sub    BYTE PTR [ecx-0x2e],0x94
  41955f:	stc    
  419560:	jg     0x419552
  419562:	jbe    0x419537
  419564:	pusha  
  419565:	jbe    0x419567
  419567:	jmp    0x2aff:0xd375f717
  41956e:	push   0xffffffb4
  419570:	adc    al,0xe0
  419572:	xor    al,0x97
  419574:	push   edx
  419575:	test   esi,ecx
  419577:	sub    al,0xc1
  419579:	xor    BYTE PTR [edi-0x194f3996],0xd2
  419580:	imul   esp,DWORD PTR ds:0x2b4c24e9,0xffffffb7
  419587:	ins    DWORD PTR es:[edi],dx
  419588:	pop    ebp
  419589:	aam    0xb4
  41958b:	out    0x1e,al
  41958d:	sti    
  41958e:	push   0x55
  419590:	outs   dx,DWORD PTR ds:[esi]
  419591:	retf   
  419592:	shl    esi,cl
  419594:	outs   dx,BYTE PTR ds:[esi]
  419595:	inc    eax
  419596:	js     0x419617
  419598:	push   ebx
  419599:	and    al,0x37
  41959b:	icebp  
  41959c:	test   DWORD PTR [esi+0xb],0x4ada523b
  4195a3:	div    DWORD PTR [edi]
  4195a5:	shl    DWORD PTR ds:0xe69b06d6,0xb6
  4195ac:	fwait
  4195ad:	stc    
  4195ae:	jge    0x419560
  4195b0:	cmp    eax,DWORD PTR [esi+0xc]
  4195b3:	test   BYTE PTR [ebp+0x336ff44b],cl
  4195b9:	mov    ch,dh
  4195bb:	rcr    DWORD PTR [ebp-0x7],cl
  4195be:	mov    esp,0xb90ac5fe
  4195c3:	sub    eax,0x69bc71d7
  4195c8:	icebp  
  4195c9:	call   0xff4b:0x29a0ccfe
  4195d0:	in     al,0xff
  4195d2:	pop    es
  4195d3:	icebp  
  4195d4:	pop    ebp
  4195d5:	jns    0x41958c
  4195d7:	stos   DWORD PTR es:[edi],eax
  4195d8:	addr16 mov edx,0x59b9e53c
  4195de:	mov    edi,0x30ad864e
  4195e3:	fnstsw WORD PTR [edi+edi*8-0x1c]
  4195e7:	jae    0x419645
  4195e9:	and    BYTE PTR [ebx],al
  4195eb:	pusha  
  4195ec:	push   esi
  4195ed:	xor    al,0xb5
  4195ef:	adc    al,0x11
  4195f1:	pop    es
  4195f2:	inc    ecx
  4195f3:	std    
  4195f4:	fisttp WORD PTR [edx+0x2304e56b]
  4195fa:	mov    bl,0x50
  4195fc:	inc    esi
  4195fd:	jnp    0x419624
  4195ff:	lods   eax,DWORD PTR ds:[esi]
  419600:	pop    ebp
  419601:	and    eax,0x171caf73
  419606:	retf   0xe4d7
  419609:	test   al,0x84
  41960b:	mov    bl,0x6c
  41960d:	cdq    
  41960e:	xor    eax,0x4a21ae4a
  419613:	bound  esi,QWORD PTR [ebx+0x2df874f5]
  419619:	pop    ebp
  41961a:	sub    al,BYTE PTR [edx+0x7cae4605]
  419620:	test   eax,0x6a9931d4
  419625:	jp     0x41967d
  419627:	ss xchg esp,eax
  419629:	adc    al,ch
  41962b:	call   0xef3f745a
  419630:	cli    
  419631:	dec    edi
  419632:	dec    edi
  419633:	ror    BYTE PTR [eax+0xf7611d3],cl
  419639:	xchg   BYTE PTR [eax+ebx*1],ah
  41963c:	pop    ebp
  41963d:	mov    edi,0x9da14399
  419642:	jmp    0x419643
  419644:	push   cs
  419645:	pop    eax
  419646:	into   
  419647:	inc    esp
  419648:	in     eax,dx
  419649:	sbb    WORD PTR [edi-0x44],cx
  41964d:	les    ebx,FWORD PTR [eax+0x4ea4f18e]
  419653:	mov    ecx,0xf2c5ec93
  419658:	(bad)  
  419659:	xchg   ecx,eax
  41965a:	cmp    esi,edi
  41965c:	std    
  41965d:	inc    eax
  41965e:	sar    DWORD PTR [esi-0x60],1
  419661:	jb     0x41967b
  419663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419664:	(bad)  [edx+0x28e26e5e]
  41966a:	aam    0xed
  41966c:	pop    esp
  41966d:	call   0x4ff:0x5d498fd9
  419674:	sbb    al,0x63
  419676:	outs   dx,DWORD PTR ds:[esi]
  419677:	call   0x604a:0xddcc3498
  41967e:	pop    esi
  41967f:	or     al,0xd5
  419681:	mov    cl,0xca
  419683:	add    BYTE PTR [esi],bl
  419685:	xchg   ebx,eax
  419686:	pop    ds
  419687:	or     ebx,DWORD PTR [ebp+0x15]
  41968a:	cmp    DWORD PTR [eax+0x22bbd372],edx
  419690:	mov    bh,0x5e
  419692:	jl     0x41969f
  419694:	daa    
  419695:	clc    
  419696:	mov    al,ds:0x916df432
  41969b:	(bad)  
  41969c:	aaa    
  41969d:	stc    
  41969e:	push   ecx
  41969f:	jnp    0x419647
  4196a1:	sbb    eax,0xa48c72d5
  4196a6:	outs   dx,BYTE PTR cs:[esi]
  4196a8:	cli    
  4196a9:	pop    ecx
  4196aa:	push   edx
  4196ab:	xlat   BYTE PTR cs:[ebx]
  4196ad:	sub    eax,0x72a484cf
  4196b2:	inc    esi
  4196b3:	(bad)  
  4196b4:	pop    esp
  4196b5:	fimul  WORD PTR [ebx+0x69]
  4196b8:	popf   
  4196b9:	jecxz  0x4196e4
  4196bb:	imul   ebp,DWORD PTR [ecx],0xffffffb1
  4196be:	dec    ecx
  4196bf:	sar    BYTE PTR [esi-0x7c4011f2],cl
  4196c5:	sahf   
  4196c6:	push   0x43
  4196c8:	outs   dx,DWORD PTR ds:[esi]
  4196c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196ca:	xchg   esp,eax
  4196cb:	inc    ebp
  4196cc:	out    0xc7,eax
  4196ce:	gs mov bl,0x70
  4196d1:	mov    eax,ds:0x3e0fa340
  4196d6:	fwait
  4196d7:	sar    ch,cl
  4196d9:	cmp    DWORD PTR [edi-0x2d],edx
  4196dc:	idiv   BYTE PTR [ebx-0x39b464bb]
  4196e2:	dec    edx
  4196e3:	imul   esp,DWORD PTR [ebx-0x24302a38],0x62d5a530
  4196ed:	sbb    edi,DWORD PTR [edi+0x4459e463]
  4196f3:	push   eax
  4196f4:	std    
  4196f5:	or     DWORD PTR [ebx-0x7a],ecx
  4196f8:	push   esi
  4196f9:	repnz (bad)
  4196fc:	jb     0x419755
  4196fe:	cs retf 
  419700:	ret    0xf5eb
  419703:	mov    esi,0xfb68fa5d
  419708:	or     eax,ebx
  41970a:	dec    edx
  41970b:	mov    dh,0x76
  41970d:	sub    dh,BYTE PTR [eax+0x43]
  419710:	mov    al,ds:0x4cd2a4ff
  419715:	hlt    
  419716:	mov    esi,0xacea67a
  41971b:	or     ebx,DWORD PTR [ebp+0x63]
  41971e:	mov    dl,0xa5
  419720:	adc    eax,DWORD PTR ds:0x429a2d74
  419726:	push   esp
  419727:	jmp    0xaf74:0x31cacf5f
  41972e:	cs jne 0x4196f0
  419731:	call   0x31e5:0x4110b04a
  419738:	lods   eax,DWORD PTR ds:[esi]
  419739:	push   ebp
  41973a:	ins    DWORD PTR es:[edi],dx
  41973b:	ret    0xfd5b
  41973e:	retf   0x7c88
  419741:	pop    ebp
  419742:	adc    DWORD PTR [edx-0x85041ef],esi
  419748:	push   esp
  419749:	xor    al,0x97
  41974b:	mov    cl,0x90
  41974d:	pop    ecx
  41974e:	mov    ebp,0x4665102f
  419753:	ror    BYTE PTR [ebx],cl
  419755:	or     eax,0x7d7522ab
  41975a:	xchg   esp,eax
  41975b:	cmp    al,0x5d
  41975d:	xchg   BYTE PTR [ebp-0x11649c8],bl
  419763:	and    DWORD PTR [ebp+0x59],edi
  419766:	aaa    
  419767:	xchg   ebp,eax
  419768:	imul   ecx,DWORD PTR [eax],0x3a
  41976b:	and    eax,0xaf413ad0
  419770:	sbb    eax,0x651e0f3
  419775:	xchg   edx,eax
  419776:	cmp    BYTE PTR [eax],al
  419778:	dec    edx
  419779:	(bad)  
  41977a:	rol    eax,1
  41977c:	jl     0x4197d7
  41977e:	lahf   
  41977f:	in     eax,0xc1
  419781:	jge    0x4197e7
  419783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419784:	das    
  419785:	push   ds
  419786:	dec    ebx
  419787:	dec    ebx
  419788:	stos   DWORD PTR es:[edi],eax
  419789:	push   0x1d422e31
  41978e:	mov    dl,dl
  419790:	rol    dh,0xad
  419793:	cdq    
  419794:	mov    esi,0x567d0751
  419799:	jl     0x419728
  41979b:	sbb    bl,ah
  41979d:	mov    al,0xda
  41979f:	push   cs
  4197a0:	scas   al,BYTE PTR es:[edi]
  4197a1:	(bad)  
  4197a3:	ror    ah,cl
  4197a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197a6:	sub    BYTE PTR ds:[ebp+0x5d59f0df],ch
  4197ad:	outs   dx,DWORD PTR ds:[esi]
  4197ae:	xor    eax,ebx
  4197b0:	push   0x11eaec80
  4197b5:	xor    BYTE PTR ds:0x62f6d9d2,bh
  4197bb:	aam    0x4
  4197bd:	jle    0x419836
  4197bf:	iret   
  4197c0:	pop    ebp
  4197c1:	push   0x4b82c7f9
  4197c6:	xchg   DWORD PTR [ecx-0x73],ecx
  4197c9:	pop    ecx
  4197ca:	ss mov ecx,0x84f61fa7
  4197d0:	fcom   st(3)
  4197d2:	dec    edx
  4197d3:	mov    ah,0x25
  4197d5:	jge    0x41976a
  4197d7:	jg     0x419855
  4197d9:	out    dx,eax
  4197da:	(bad)  
  4197db:	sar    DWORD PTR [ecx-0x657e7e26],1
  4197e1:	bound  ax,DWORD PTR [ebx+0x75]
  4197e5:	sbb    al,0x1f
  4197e7:	add    bl,BYTE PTR [ebp+0x5b]
  4197ea:	pop    ecx
  4197eb:	imul   edx,esi,0xe6b326f3
  4197f1:	pop    ecx
  4197f2:	jecxz  0x419844
  4197f4:	add    DWORD PTR [ecx-0x6fbc30a4],esp
  4197fa:	adc    bl,BYTE PTR [ecx+ebx*8+0x35ae4b4d]
  419801:	jmp    0x4197cc
  419803:	add    al,0x13
  419805:	and    bl,0xd2
  419808:	xor    bl,ah
  41980a:	out    0x32,eax
  41980c:	mov    BYTE PTR [ecx+eiz*1],ch
  41980f:	jnp    0x41986e
  419811:	sbb    eax,0x57f1939f
  419816:	loope  0x419879
  419818:	neg    BYTE PTR [eax+0x5a]
  41981b:	xor    eax,0x24735cc
  419820:	lea    ebx,[esi-0x573de86]
  419826:	mov    edx,0x907b5dec
  41982b:	in     al,0x11
  41982d:	mov    ebx,0xcfee3c95
  419832:	cmp    ebp,esp
  419834:	or     ebp,DWORD PTR [eax+0x5952e12e]
  41983a:	dec    ecx
  41983b:	aad    0x44
  41983d:	iret   
  41983e:	inc    ecx
  41983f:	jne    0x419893
  419841:	cdq    
  419842:	lods   al,BYTE PTR ds:[esi]
  419843:	prefetchnta BYTE PTR [edi+0xb]
  419847:	call   0x7c02:0xd28dda36
  41984e:	mov    al,ds:0x1528d28d
  419853:	mov    cl,0x5d
  419855:	outs   dx,DWORD PTR ds:[esi]
  419856:	or     eax,0x6763a08a
  41985b:	sub    BYTE PTR [ebx+0x7731f759],dh
  419861:	jo     0x4198b5
  419863:	(bad)  
  419864:	je     0x4198d8
  419866:	dec    ebx
  419867:	lock xchg edi,eax
  419869:	into   
  41986a:	shl    DWORD PTR [ebx],0x8f
  41986d:	dec    ebp
  41986e:	inc    esp
  41986f:	jmp    0x9eb3:0xd372dfc0
  419876:	out    dx,eax
  419877:	fmul   QWORD PTR [ebp+0x5d7bd254]
  41987d:	rcr    BYTE PTR [esi-0x722acf00],1
  419883:	aas    
  419884:	xor    al,0x47
  419886:	cmp    al,bh
  419888:	dec    esi
  419889:	lock sub edi,DWORD PTR [ecx-0x765ffa10]
  419890:	in     eax,0x22
  419892:	mov    eax,0xe85a6435
  419897:	sar    BYTE PTR [ebx+eax*4+0x21],cl
  41989b:	inc    eax
  41989c:	rol    BYTE PTR [bp+0x35cb],0xef
  4198a2:	fucomip st,st(5)
  4198a4:	(bad)  
  4198a5:	mov    DWORD PTR [edx-0x5e],ecx
  4198a8:	gs popf 
  4198aa:	lea    ebx,[esi+0x65]
  4198ad:	mov    eax,0x2232d476
  4198b2:	sub    al,0x9d
  4198b4:	pop    ebp
  4198b5:	xchg   edi,eax
  4198b6:	mov    esi,ecx
  4198b8:	call   0x8f13aae0
  4198bd:	enter  0x6f64,0xb8
  4198c1:	fdivr  DWORD PTR [edx]
  4198c3:	fnsave [ecx]
  4198c5:	or     ecx,DWORD PTR [ebx+0x71]
  4198c8:	ret    0x19cc
  4198cb:	daa    
  4198cc:	xor    BYTE PTR [edx-0x70],dh
  4198cf:	rol    BYTE PTR ds:0x467bd5dc,1
  4198d5:	mov    ebp,0xfb4728a
  4198da:	dec    ebx
  4198db:	mov    BYTE PTR cs:[ebp+0x7d],ah
  4198df:	les    edx,FWORD PTR [esi-0x4c09313f]
  4198e5:	xchg   edi,eax
  4198e6:	inc    esi
  4198e7:	rcl    BYTE PTR [ebp+edx*4+0x4fc36505],cl
  4198ee:	jno    0x4198d0
  4198f0:	aaa    
  4198f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198f2:	push   es
  4198f3:	xchg   BYTE PTR [ebx-0x1dc107a7],al
  4198f9:	sub    DWORD PTR [ebx+0x28],ebx
  4198fc:	mov    ch,0x6a
  4198fe:	mov    ds:0x5d462202,al
  419903:	add    al,0x5f
  419905:	or     al,0x11
  419907:	mov    ds:0xa555e65d,al
  41990c:	stos   BYTE PTR es:[edi],al
  41990d:	sub    DWORD PTR [ebp+0x6a5ebda9],ebp
  419913:	xlat   BYTE PTR ds:[ebx]
  419914:	add    eax,0x18222ae1
  419919:	cwde   
  41991a:	int    0x1d
  41991c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41991d:	push   ebp
  41991e:	dec    ebx
  41991f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419920:	lods   al,BYTE PTR ds:[esi]
  419921:	mov    DWORD PTR [ecx-0x28],edx
  419924:	push   esp
  419925:	xchg   edx,eax
  419926:	test   eax,0x7c5304d0
  41992b:	cmp    esp,esi
  41992d:	add    DWORD PTR [ebx-0x54],ebp
  419930:	fwait
  419931:	jo     0x41991f
  419933:	push   ss
  419934:	pop    esp
  419935:	mov    gs,eax
  419937:	add    al,0x2e
  419939:	push   esp
  41993a:	xor    eax,0x57a215d1
  41993f:	shl    BYTE PTR [esi+0x7d],cl
  419942:	data16 and al,0x84
  419945:	xor    dh,0x89
  419948:	outs   dx,BYTE PTR ds:[esi]
  419949:	xor    eax,0x3ec224b6
  41994e:	test   BYTE PTR [ecx],bh
  419950:	pop    ebp
  419951:	xchg   ebx,eax
  419952:	cmp    ah,bl
  419954:	cmp    ebx,DWORD PTR [edi+0x53]
  419957:	test   eax,0xaa74435b
  41995c:	popa   
  41995d:	mov    ecx,0xa144028b
  419962:	and    dh,dh
  419964:	sbb    dh,al
  419966:	test   al,0xf3
  419968:	adc    DWORD PTR [ebx],ecx
  41996a:	ret    0xc5e6
  41996d:	pop    edx
  41996e:	mov    cs,edi
  419970:	daa    
  419971:	jae    0x419996
  419973:	imul   edx,DWORD PTR ds:0x21a40feb,0xffffffef
  41997a:	inc    esi
  41997b:	aad    0xac
  41997d:	inc    edi
  41997e:	dec    ebx
  41997f:	loop   0x4199f6
  419981:	aas    
  419982:	(bad)  
  419984:	xchg   BYTE PTR [ecx+0x71],bl
  419987:	xchg   esi,eax
  419988:	mov    esp,0xb15bcbe8
  41998d:	out    dx,eax
  41998e:	pushw  0x165c
  419992:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419993:	icebp  
  419994:	push   ebx
  419995:	leave  
  419996:	imul   al
  419998:	xor    DWORD PTR [ebx],esp
  41999a:	mov    ah,0xb8
  41999c:	jl     0x4199fb
  41999e:	std    
  41999f:	or     BYTE PTR [esi],0x36
  4199a2:	or     BYTE PTR [edx+0x5009c303],dl
  4199a8:	mov    ebp,esi
  4199aa:	in     al,dx
  4199ab:	outs   dx,DWORD PTR ds:[esi]
  4199ac:	jns    0x419987
  4199ae:	cs mov ecx,0xd724d3eb
  4199b4:	fs jb  0x419a00
  4199b7:	test   eax,0x3c9554ef
  4199bc:	std    
  4199bd:	repnz mov ebx,edx
  4199c0:	stc    
  4199c1:	sub    dl,BYTE PTR [ebp+0x20]
  4199c4:	pushaw 
  4199c6:	sbb    DWORD PTR [ebx+0x4d],ebx
  4199c9:	sbb    ebp,ebp
  4199cb:	mov    ebx,DWORD PTR [esi+eax*2]
  4199ce:	call   0x1d79e410
  4199d3:	data16 jns 0x419976
  4199d6:	dec    edx
  4199d7:	or     al,0xf6
  4199da:	xor    al,0xfb
  4199dc:	sahf   
  4199dd:	mov    ah,0x3a
  4199df:	shr    BYTE PTR ds:0x3e7002dc,cl
  4199e5:	mov    al,ds:0xa55175a2
  4199ea:	(bad)  
  4199eb:	mov    dh,0x6a
  4199ed:	std    
  4199ee:	mov    dl,0x93
  4199f0:	pop    ebp
  4199f1:	(bad)  
  4199f2:	or     eax,0xd765f9fe
  4199f7:	cmp    DWORD PTR [ebx-0x35],edx
  4199fa:	test   eax,0xdaf17636
  4199ff:	mov    dl,0x81
  419a01:	addr16 in eax,0xd3
  419a04:	cmp    esi,ebx
  419a06:	add    al,0xaf
  419a08:	pop    ds
  419a09:	jns    0x4199bd
  419a0b:	repnz sbb DWORD PTR [ecx],esp
  419a0e:	dec    edi
  419a0f:	stc    
  419a10:	mov    eax,0xddfae0d2
  419a15:	enter  0xb4e6,0xe7
  419a19:	int    0xb2
  419a1b:	shl    BYTE PTR [esi-0x7],cl
  419a1e:	dec    esp
  419a1f:	call   0x1f7b:0xcfb55aa5
  419a26:	rol    DWORD PTR [si-0x2b1],cl
  419a2b:	das    
  419a2c:	aaa    
  419a2d:	pop    ds
  419a2e:	and    al,0xd2
  419a30:	or     eax,0x563dfdd4
  419a35:	sbb    esp,DWORD PTR [edx+0xe]
  419a38:	gs retf 
  419a3a:	cmp    DWORD PTR [ecx+0x48d8975c],0xffffffe6
  419a41:	inc    ecx
  419a42:	popa   
  419a43:	stos   DWORD PTR es:[edi],eax
  419a44:	fld    QWORD PTR [ebx-0x362975]
  419a4a:	mov    al,ds:0x4b263d23
  419a4f:	xor    al,0xab
  419a51:	jecxz  0x419a4c
  419a53:	call   0xbdf9:0xd214fed4
  419a5a:	mov    eax,ds:0xde85e7c2
  419a5f:	out    dx,al
  419a60:	pop    ebp
  419a61:	push   esp
  419a62:	daa    
  419a63:	xor    eax,0x9db1d862
  419a68:	(bad)  
  419a69:	dec    ecx
  419a6a:	into   
  419a6b:	cli    
  419a6c:	cld    
  419a6d:	mov    ebp,0x63dd744a
  419a72:	add    DWORD PTR [edi-0x61fe10b],0x52
  419a79:	sbb    al,0x33
  419a7b:	sub    edx,DWORD PTR [ecx]
  419a7d:	mov    al,0xc
  419a7f:	ret    0x361b
  419a82:	mov    dh,0xd5
  419a84:	mov    esi,0xf9850302
  419a89:	cdq    
  419a8a:	imul   ecx,DWORD PTR [edi+0x44],0x32436403
  419a91:	pop    ds
  419a92:	pop    esp
  419a93:	cmp    dl,bh
  419a95:	fucom  st(6)
  419a97:	rcr    BYTE PTR [ebp+0x52],cl
  419a9a:	cmp    al,0x27
  419a9c:	cmc    
  419a9d:	pop    ecx
  419a9e:	adc    eax,0xcbd6b224
  419aa3:	(bad)  
  419aa4:	and    esp,ebp
  419aa6:	sbb    bh,BYTE PTR [ecx+0x7003bddb]
  419aac:	repnz pop ecx
  419aae:	dec    edx
  419aaf:	mov    bl,0x28
  419ab1:	(bad)  ds:0x4b379d94
  419ab7:	mov    ds:0x77a4235,eax
  419abc:	xor    al,0x48
  419abe:	sub    dl,dl
  419ac0:	add    al,0x2d
  419ac2:	adc    eax,0xef0c86b3
  419ac7:	push   0x522e417e
  419acc:	sbb    ebx,edi
  419ace:	pop    ss
  419acf:	cld    
  419ad0:	dec    esp
  419ad1:	xchg   DWORD PTR [eax-0x2e],edx
  419ad4:	xchg   ebp,eax
  419ad5:	jmp    0xcdb0:0xe5056dcc
  419adc:	jp     0x419a92
  419ade:	jbe    0x419b33
  419ae0:	enter  0x2322,0x36
  419ae4:	mov    BYTE PTR [ecx-0x6a112dd1],al
  419aea:	and    al,0x38
  419aec:	adc    cl,bl
  419aee:	cmp    BYTE PTR [ecx],dl
  419af0:	pop    ebp
  419af1:	push   ecx
  419af2:	push   es
  419af3:	sti    
  419af4:	sbb    dh,BYTE PTR [ebx+0x24]
  419af7:	add    eax,0x79514616
  419afc:	pop    es
  419afd:	mov    ch,0x9f
  419aff:	push   es
  419b00:	jne    0x419b69
  419b02:	dec    ebx
  419b03:	xor    edi,DWORD PTR [edx-0x610f5619]
  419b09:	sbb    DWORD PTR [ebx-0x22474d2e],ecx
  419b0f:	jge    0x419af3
  419b11:	mov    ebx,0x8b5dfec8
  419b16:	out    dx,al
  419b17:	je     0x419b58
  419b19:	data16 fild DWORD PTR [ebx+0x4c6a4413]
  419b20:	mov    esp,0x78a0f439
  419b25:	das    
  419b26:	push   ebx
  419b27:	mov    dl,0xed
  419b29:	pop    ss
  419b2a:	pop    edi
  419b2b:	shr    BYTE PTR [edi-0x41],cl
  419b2e:	arpl   bp,dx
  419b30:	ficomp WORD PTR [ecx+0x73a7308c]
  419b36:	jp     0x419b0b
  419b38:	dec    esp
  419b39:	inc    edi
  419b3a:	sub    edi,DWORD PTR [edi-0x58cda19d]
  419b40:	pop    ebp
  419b41:	push   ebp
  419b42:	sbb    BYTE PTR [edi+0x37],dl
  419b45:	out    dx,al
  419b46:	stos   DWORD PTR es:[edi],eax
  419b47:	popa   
  419b48:	adc    eax,DWORD PTR [esi-0x29]
  419b4b:	mov    ch,0xe1
  419b4d:	jnp    0x419b90
  419b4f:	call   0x2e6:0x234b3740
  419b56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b57:	adc    eax,0xd2039d16
  419b5c:	mov    bh,0xb7
  419b5e:	mov    ch,0xc0
  419b60:	jmp    0x419b04
  419b62:	adc    cl,cl
  419b64:	cmp    esi,esp
  419b66:	dec    edx
  419b67:	pop    es
  419b68:	and    DWORD PTR [edx],0xffffffd1
  419b6b:	mov    ch,0x78
  419b6d:	gs stc 
  419b6f:	ds ins BYTE PTR es:[edi],dx
  419b71:	pop    ecx
  419b72:	pop    es
  419b73:	pop    edx
  419b74:	fisubr WORD PTR [ebx+0x5c9e473b]
  419b7a:	inc    ecx
  419b7b:	inc    ecx
  419b7c:	mov    bl,0x85
  419b7e:	or     ah,BYTE PTR [eax-0x4b]
  419b81:	inc    ecx
  419b82:	sub    BYTE PTR [ecx+eiz*8+0x59],0x71
  419b87:	add    ebp,ecx
  419b89:	jge    0x419b60
  419b8b:	in     al,dx
  419b8c:	mov    edi,0xf95f4b1f
  419b91:	mov    ecx,0x2c0e36ec
  419b96:	xchg   ebp,eax
  419b97:	cli    
  419b98:	out    0xee,al
  419b9a:	retf   0x4c76
  419b9d:	lods   eax,DWORD PTR ds:[esi]
  419b9e:	push   ss
  419b9f:	jae    0x419bdc
  419ba1:	xchg   ebx,eax
  419ba2:	dec    edx
  419ba3:	aam    0xe9
  419ba5:	(bad)  
  419ba6:	mov    eax,0xf0f3cc4a
  419bab:	sar    BYTE PTR [edx],cl
  419bad:	add    al,dl
  419baf:	loop   0x419c03
  419bb1:	fdivr  st(4),st
  419bb3:	add    al,0x52
  419bb5:	aas    
  419bb6:	mov    ?,WORD PTR ds:0x77df445e
  419bbc:	fstp   QWORD PTR [edx]
  419bbe:	sbb    al,0xe1
  419bc0:	ds pop edi
  419bc2:	cmp    DWORD PTR [ecx],eax
  419bc4:	inc    cl
  419bc6:	hlt    
  419bc7:	bound  ebx,QWORD PTR [ecx-0x3e]
  419bca:	(bad)  
  419bcb:	ficomp DWORD PTR [ebp-0x4c]
  419bce:	mov    ds:0xf1f4d9f8,eax
  419bd3:	nop
  419bd4:	xchg   ebp,eax
  419bd5:	pop    ecx
  419bd6:	std    
  419bd7:	leave  
  419bd8:	adc    eax,0x57e34f75
  419bdd:	mov    ch,0x55
  419bdf:	mov    ebp,0x34e6a5f1
  419be4:	mov    cl,cl
  419be6:	dec    ecx
  419be7:	stc    
  419be8:	and    eax,DWORD PTR [esi-0x6a]
  419beb:	jg     0x419c5d
  419bed:	jae    0x419beb
  419bef:	dec    ebp
  419bf0:	xchg   DWORD PTR [edx+0x4b],ebx
  419bf3:	sub    al,0x32
  419bf5:	icebp  
  419bf6:	jge    0x419bb4
  419bf8:	test   eax,0x1bd098e0
  419bfd:	mov    esi,0x1f58f003
  419c02:	add    dl,BYTE PTR [ebp+0xd]
  419c05:	scas   eax,DWORD PTR es:[edi]
  419c06:	lds    eax,FWORD PTR [esi]
  419c08:	ret    0x5ade
  419c0b:	je     0x419c0b
  419c0d:	dec    ecx
  419c0e:	gs mov ebx,0x7ac9521c
  419c14:	dec    esi
  419c15:	inc    esi
  419c16:	sub    ch,ah
  419c18:	sti    
  419c19:	inc    bx
  419c1b:	mov    ebx,DWORD PTR [ebp+0x50]
  419c1e:	xchg   ecx,eax
  419c1f:	fs loopne 0x419c87
  419c22:	ret    
  419c23:	bound  edi,QWORD PTR [ebp+0x7131055e]
  419c29:	pop    ss
  419c2a:	push   0xffffffb3
  419c2c:	in     al,dx
  419c2d:	mov    ecx,DWORD PTR [ebp-0x272fa252]
  419c33:	cld    
  419c34:	into   
  419c35:	fs jecxz 0x419c55
  419c38:	test   DWORD PTR [esi+0x60],esi
  419c3b:	shl    edi,1
  419c3d:	shr    DWORD PTR [esi-0x5722f824],1
  419c43:	jmp    0x46fd:0x70b09b0e
  419c4a:	mov    eax,0xfd385db1
  419c4f:	xchg   ecx,eax
  419c50:	dec    ecx
  419c51:	add    al,0x56
  419c53:	(bad)  
  419c54:	push   0x59
  419c56:	call   0x24bc1eb6
  419c5b:	mov    ebp,0xc74adc39
  419c60:	sbb    eax,0x83015eb3
  419c65:	sbb    eax,DWORD PTR [ebp-0x34]
  419c68:	pushf  
  419c69:	(bad)  
  419c6a:	clc    
  419c6b:	sahf   
  419c6c:	cmp    eax,0xb55b3805
  419c71:	aam    0x5d
  419c73:	mov    cs,edi
  419c75:	stos   BYTE PTR es:[edi],al
  419c76:	push   cs
  419c77:	repnz inc ecx
  419c79:	inc    edx
  419c7a:	imul   eax,DWORD PTR [ebx],0xffffffa1
  419c7d:	pop    ecx
  419c7e:	add    al,0xd8
  419c80:	and    ebp,edi
  419c82:	out    0xb5,al
  419c84:	and    al,bh
  419c86:	dec    ebx
  419c87:	mov    bh,0x18
  419c89:	lahf   
  419c8a:	in     eax,dx
  419c8b:	pop    esi
  419c8c:	jno    0x419cea
  419c8e:	retf   
  419c8f:	and    BYTE PTR ds:0x884f39d3,ah
  419c95:	lds    ecx,FWORD PTR [edx+0x75]
  419c98:	sahf   
  419c99:	fistp  WORD PTR [eax-0x6d]
  419c9c:	xor    al,0xba
  419c9e:	sbb    eax,0xdf625ecd
  419ca3:	jnp    0x419cc2
  419ca5:	mov    edi,0x1a217390
  419caa:	dec    ebx
  419cab:	imul   ebx,DWORD PTR [ecx+0x29],0x1ec22179
  419cb2:	pop    ebx
  419cb3:	shl    DWORD PTR [ebp+eax*1+0x5c],cl
  419cb7:	cmp    esi,DWORD PTR [ebx-0x5f]
  419cba:	std    
  419cbb:	outs   dx,DWORD PTR fs:[esi]
  419cbd:	dec    ecx
  419cbe:	sbb    DWORD PTR [ebp+0x7b],ecx
  419cc1:	jns    0x419c76
  419cc3:	mov    BYTE PTR [edi+edi*2-0x1c81550],bh
  419cca:	arpl   dx,ax
  419ccc:	ds dec eax
  419cce:	pushf  
  419ccf:	(bad)  
  419cd0:	std    
  419cd1:	push   0x35
  419cd3:	and    DWORD PTR [ecx-0x5c1f8326],ebp
  419cd9:	sbb    BYTE PTR [edi],dh
  419cdb:	sub    ecx,edi
  419cdd:	js     0x419d08
  419cdf:	test   BYTE PTR [ebp+0xe],bl
  419ce2:	leave  
  419ce3:	cld    
  419ce4:	and    DWORD PTR [ecx],ecx
  419ce6:	not    dl
  419ce8:	xchg   BYTE PTR [ebp-0x51bbdf3d],dl
  419cee:	or     BYTE PTR [ebx+0x4f],dh
  419cf1:	lahf   
  419cf2:	pushaw 
  419cf4:	pop    ebp
  419cf5:	mov    al,cl
  419cf7:	cdq    
  419cf8:	mov    cl,0x5c
  419cfa:	xchg   ebx,eax
  419cfb:	inc    esi
  419cfc:	mov    bl,0x5e
  419cfe:	loope  0x419c9c
  419d00:	rcl    DWORD PTR [ebx+0x6b],cl
  419d03:	adc    esi,ebx
  419d05:	sbb    DWORD PTR ds:0xe761a1b5,esi
  419d0b:	lods   al,BYTE PTR ds:[esi]
  419d0c:	pop    ebp
  419d0d:	gs mov ebp,0xfb6c1821
  419d13:	inc    edi
  419d14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d15:	push   ebp
  419d16:	adc    eax,0xd719c8c3
  419d1b:	fnstcw WORD PTR [ecx-0x5c014695]
  419d21:	or     BYTE PTR [edx-0x60],0x92
  419d25:	push   ebx
  419d26:	xchg   bh,ah
  419d28:	fdivp  st(7),st
  419d2a:	jbe    0x419d17
  419d2c:	push   esp
  419d2d:	sbb    DWORD PTR [eax-0x370d72e],ebp
  419d33:	jns    0x419cc1
  419d35:	inc    ebp
  419d36:	and    DWORD PTR [esi],edx
  419d38:	pop    esp
  419d39:	mov    dl,0xc9
  419d3b:	cli    
  419d3c:	mov    ebp,0x15ae31f4
  419d41:	mov    esi,0x4099d2b2
  419d46:	je     0x419dc5
  419d48:	or     DWORD PTR [esi-0x23],esi
  419d4b:	inc    ebx
  419d4c:	pop    ebp
  419d4d:	ss aad 0xa4
  419d50:	cmp    DWORD PTR [ecx+ebp*2-0x23],ecx
  419d54:	xchg   BYTE PTR [edi+0xd0ed361],bh
  419d5a:	push   0x2b4a3b4e
  419d5f:	out    0x5d,al
  419d61:	into   
  419d62:	mov    edx,0x487175d4
  419d67:	nop
  419d68:	cmp    BYTE PTR [esi-0x3f],al
  419d6b:	sub    BYTE PTR [edi+0x3b662be],dl
  419d71:	cmp    BYTE PTR [ecx],0x22
  419d74:	add    al,0xb8
  419d76:	dec    edx
  419d77:	xchg   esi,eax
  419d78:	retf   0x1687
  419d7b:	cmc    
  419d7c:	sbb    BYTE PTR [ecx-0x44],0x3c
  419d80:	mov    ah,0xf0
  419d82:	fst    QWORD PTR [edx+0x3]
  419d85:	push   esp
  419d86:	dec    ebx
  419d87:	dec    eax
  419d88:	mov    ebp,0xba973395
  419d8d:	(bad)  
  419d8f:	std    
  419d90:	jo     0x419d79
  419d92:	(bad)  
  419d93:	push   eax
  419d94:	lock mov dl,0x4a
  419d97:	mov    esp,0xaf96bf88
  419d9c:	std    
  419d9d:	cmp    eax,0xfea5bfeb
  419da2:	jecxz  0x419d2d
  419da4:	or     dh,BYTE PTR [ecx]
  419da6:	ins    BYTE PTR es:[edi],dx
  419da7:	rcl    BYTE PTR [ecx],1
  419da9:	dec    ecx
  419daa:	imul   eax,DWORD PTR [edi+eax*1+0xb],0xffffffa1
  419daf:	scas   al,BYTE PTR es:[edi]
  419db0:	fnsave [ebx-0x3180d946]
  419db6:	imul   edx,DWORD PTR [ebx+0x6c],0xdbb011
  419dbd:	and    ch,BYTE PTR [esi]
  419dbf:	rol    ch,cl
  419dc1:	lods   eax,DWORD PTR ds:[esi]
  419dc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dc3:	js     0x419d78
  419dc5:	mov    dl,0x4c
  419dc7:	xchg   edi,eax
  419dc8:	pop    ebp
  419dc9:	aaa    
  419dca:	sbb    esp,esi
  419dcc:	and    al,0xed
  419dce:	cli    
  419dcf:	in     eax,dx
  419dd0:	dec    ebp
  419dd1:	pop    ecx
  419dd2:	icebp  
  419dd3:	dec    edx
  419dd4:	xor    bh,BYTE PTR [esi-0x5918bc59]
  419dda:	dec    edx
  419ddb:	inc    ebp
  419ddc:	pop    es
  419ddd:	es and al,cl
  419de0:	into   
  419de1:	push   edi
  419de2:	stos   DWORD PTR es:[edi],eax
  419de3:	sar    BYTE PTR [ecx+0x5c6ad8b7],cl
  419de9:	adc    ebp,edx
  419deb:	sub    BYTE PTR [ebp+0x65],bl
  419dee:	out    0xde,al
  419df0:	idiv   BYTE PTR es:[eax-0x3a7b242]
  419df7:	mov    ebp,0x55921a9e
  419dfc:	and    esp,DWORD PTR [esi+0x72]
  419dff:	or     DWORD PTR [ebp-0x77],ebx
  419e02:	mov    al,ds:0x4a715bd0
  419e07:	mov    edi,0xd2e8cb91
  419e0c:	cmp    esi,DWORD PTR [edx]
  419e0e:	and    DWORD PTR cs:[ebp+esi*8-0x74a2fbf9],esi
  419e16:	dec    DWORD PTR [esi-0x73]
  419e19:	bound  ecx,QWORD PTR [ecx]
  419e1b:	inc    esi
  419e1c:	cmc    
  419e1d:	pop    ecx
  419e1e:	cdq    
  419e1f:	ficom  DWORD PTR [edx+0xaddffa8]
  419e25:	(bad)  
  419e26:	push   esp
  419e27:	cdq    
  419e28:	inc    ecx
  419e29:	adc    DWORD PTR [edx+edi*8+0x3666d340],esp
  419e30:	icebp  
  419e31:	pop    ecx
  419e32:	stc    
  419e33:	adc    esi,edx
  419e35:	mov    bh,0x30
  419e37:	fwait
  419e38:	adc    DWORD PTR [ecx+0x4b],esp
  419e3b:	jle    0x419eb2
  419e3d:	add    DWORD PTR [ecx+0x70],ecx
  419e40:	mov    esp,0x3bd2c019
  419e45:	std    
  419e46:	mov    ebx,0x43b2b4b1
  419e4b:	fisub  WORD PTR [ebp+0x62]
  419e4e:	add    ebx,DWORD PTR [esi-0x23]
  419e51:	xchg   esi,eax
  419e52:	or     bl,BYTE PTR [ebx]
  419e54:	or     BYTE PTR [esi+0x23],dl
  419e57:	or     DWORD PTR [edi+0x1ae4d259],esp
  419e5d:	pop    ds
  419e5e:	mov    ecx,esp
  419e60:	pop    ds
  419e61:	pop    ss
  419e62:	and    dl,bl
  419e64:	mov    WORD PTR [ecx-0x4c],ds
  419e67:	or     BYTE PTR [ecx],bh
  419e69:	jge    0x419e4d
  419e6b:	jle    0x419e55
  419e6d:	pop    ecx
  419e6e:	sti    
  419e6f:	out    0xb4,eax
  419e71:	mov    ch,dh
  419e73:	xchg   edi,eax
  419e74:	rcl    BYTE PTR [ebx+0x5c],1
  419e77:	mov    edx,0xd233f88b
  419e7c:	lods   eax,DWORD PTR ds:[esi]
  419e7d:	xlat   BYTE PTR ds:[ebx]
  419e7e:	test   BYTE PTR [edx],cl
  419e80:	jo     0x419e4b
  419e82:	out    dx,eax
  419e83:	rcr    cl,cl
  419e85:	shl    BYTE PTR [ecx+0x7e850e2d],0x1
  419e8c:	push   esi
  419e8d:	outs   dx,DWORD PTR ds:[esi]
  419e8e:	jmp    0xa2bf:0x3ae84503
  419e95:	adc    eax,0x829ed24c
  419e9a:	rcr    BYTE PTR fs:[ebx+0x56de00a2],0x4b
  419ea2:	adc    dl,ch
  419ea4:	xlat   BYTE PTR ds:[ebx]
  419ea5:	jmp    FWORD PTR [edx-0x69f9b1b4]
  419eab:	sar    BYTE PTR [eax+0x2e],cl
  419eae:	hlt    
  419eaf:	in     eax,dx
  419eb0:	mov    edi,0x3f212149
  419eb5:	xchg   BYTE PTR [edx-0x7d],cl
  419eb8:	ret    0x176a
  419ebb:	stos   BYTE PTR es:[edi],al
  419ebc:	or     eax,0x19d2ca5e
  419ec1:	cdq    
  419ec2:	hlt    
  419ec3:	jmp    0x419f23
  419ec5:	push   cs
  419ec6:	test   eax,0x6ecc5f8e
  419ecb:	sahf   
  419ecc:	ficomp WORD PTR [edx-0x2f]
  419ecf:	into   
  419ed0:	cmp    eax,0x26143766
  419ed5:	mov    bl,0xfb
  419ed7:	ror    BYTE PTR [ebx+0x2f59b455],cl
  419edd:	mov    ds:0xbe5dcae4,al
  419ee2:	out    0x2,al
  419ee4:	arpl   WORD PTR [esi],bx
  419ee6:	cmp    BYTE PTR [esi+0x6a],al
  419ee9:	pop    eax
  419eea:	ins    DWORD PTR es:[edi],dx
  419eeb:	dec    eax
  419eec:	mov    bh,0xf8
  419eee:	inc    esp
  419eef:	inc    edi
  419ef0:	daa    
  419ef1:	xchg   ecx,eax
  419ef2:	mov    ecx,0x4b4f518e
  419ef7:	jp     0x419f4d
  419ef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419efa:	sar    al,cl
  419efc:	cs data16 (bad) 
  419eff:	in     eax,0x80
  419f01:	pop    edi
  419f02:	mov    eax,0xcce1b4d2
  419f07:	xor    DWORD PTR [ecx],0x4f
  419f0a:	dec    ebx
  419f0b:	jmp    0x419f5c
  419f0d:	mov    bh,0x6a
  419f0f:	retf   0x1ed1
  419f12:	test   dl,dl
  419f14:	pop    ebx
  419f15:	stos   DWORD PTR es:[edi],eax
  419f16:	pop    ebx
  419f17:	push   0xfffffffd
  419f19:	ret    
  419f1a:	fidiv  DWORD PTR [ecx+0x47b5905d]
  419f20:	ret    
  419f21:	pop    edx
  419f22:	pop    es
  419f23:	add    ebp,DWORD PTR [edx+0x3a13665e]
  419f29:	cmp    edi,DWORD PTR [ebp-0x2759a287]
  419f2f:	inc    ebp
  419f30:	jnp    0x419f42
  419f32:	push   esp
  419f33:	mov    cl,al
  419f35:	rcr    DWORD PTR ds:0x95b0f35b,1
  419f3b:	jb     0x419ec8
  419f3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f3e:	push   ebp
  419f3f:	shr    BYTE PTR ds:0x86ab5366,cl
  419f45:	sub    BYTE PTR [eax-0x5b],bl
  419f48:	outs   dx,BYTE PTR ds:[esi]
  419f49:	jge    0x419f0f
  419f4b:	inc    ebp
  419f4c:	cmp    DWORD PTR [eax-0x56],0xffffffa8
  419f50:	das    
  419f51:	sub    dl,0xb1
  419f54:	xchg   edx,eax
  419f55:	pop    ecx
  419f56:	ja     0x419edf
  419f58:	popa   
  419f59:	jl     0x419f4a
  419f5b:	or     esi,ebp
  419f5d:	adc    ecx,DWORD PTR [ebx-0x6f]
  419f60:	and    DWORD PTR [esi],esp
  419f62:	mov    dl,0xa
  419f64:	fcmovb st,st(4)
  419f66:	cmp    eax,0x34d7bbec
  419f6b:	shr    BYTE PTR [eax-0x4],cl
  419f6e:	xor    DWORD PTR [edx+ebp*4-0x3e],0xde6d834a
  419f76:	aad    0xee
  419f78:	push   esi
  419f79:	push   esp
  419f7a:	and    eax,DWORD PTR [ebp-0x2b]
  419f7d:	pop    edx
  419f7e:	outs   dx,BYTE PTR ds:[esi]
  419f7f:	add    BYTE PTR [edi],bh
  419f81:	popf   
  419f82:	(bad)  
  419f83:	(bad)  
  419f84:	fisttp QWORD PTR [esi+0x7]
  419f87:	cdq    
  419f88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f89:	xor    DWORD PTR [ebx+0x30],ecx
  419f8c:	mov    esi,0x9cbfae2
  419f91:	stc    
  419f92:	fcmovbe st,st(2)
  419f94:	scas   al,BYTE PTR es:[edi]
  419f95:	out    0x8c,eax
  419f97:	test   DWORD PTR [ebx+0x59e0f46e],ebp
  419f9d:	push   ds
  419f9e:	xor    eax,0xaebd9d52
  419fa3:	dec    ebp
  419fa4:	mov    WORD PTR ds:0xda8ed212,ss
  419faa:	enter  0xa8e5,0xe9
  419fae:	mov    BYTE PTR [eax-0x3218479c],al
  419fb4:	sbb    al,0x65
  419fb6:	xor    cx,WORD PTR [eax]
  419fb9:	fild   WORD PTR [ecx+0x27]
  419fbc:	adc    al,BYTE PTR [esi+0x38]
  419fbf:	cmp    dl,BYTE PTR [eax+0x77]
  419fc2:	loop   0x419ffd
  419fc4:	hlt    
  419fc5:	leave  
  419fc6:	dec    edx
  419fc7:	lods   al,BYTE PTR ds:[esi]
  419fc8:	push   ebp
  419fc9:	sti    
  419fca:	push   ecx
  419fcb:	push   ebx
  419fcc:	mov    cl,0x23
  419fce:	mov    ebx,0x46b669d2
  419fd3:	xchg   esi,eax
  419fd4:	jmp    0x538d:0x51f60582
  419fdb:	invd   
  419fdd:	cdq    
  419fde:	mov    cl,BYTE PTR [esi-0x76]
  419fe1:	mov    edi,cs
  419fe3:	rol    BYTE PTR [ecx+0x3ac46c0e],cl
  419fe9:	sti    
  419fea:	jge    0x41a064
  419fec:	pop    ebp
  419fed:	jb     0x41a005
  419fef:	pop    edi
  419ff0:	and    esp,esp
  419ff2:	xchg   BYTE PTR [ebp-0x48dd16a6],ah
  419ff8:	and    eax,0x55937ab0
  419ffd:	mov    BYTE PTR [ebp+0x2e0cf614],dl
  41a003:	hlt    
  41a004:	mov    ebx,DWORD PTR [ecx+0x27]
  41a007:	xor    eax,0x5a0da5e7
  41a00c:	jne    0x41a067
  41a00e:	dec    ebp
  41a00f:	int3   
  41a010:	inc    edi
  41a011:	add    dh,BYTE PTR [ecx]
  41a013:	fldl2e 
  41a015:	sbb    eax,0x1eb8dc4b
  41a01a:	add    ecx,0x1ace5b8d
  41a020:	jne    0x41a069
  41a022:	and    DWORD PTR [edi-0x41807aa4],edi
  41a028:	rcr    DWORD PTR [ebx+ebp*2],1
  41a02b:	mov    edi,0xa44ae352
  41a030:	scas   eax,DWORD PTR es:[edi]
  41a031:	push   0x1
  41a033:	mov    ebp,0xd3b78989
  41a038:	mov    esp,0x63fe7b37
  41a03d:	js     0x41a044
  41a03f:	call   0x7358:0x84ac8d5
  41a046:	outs   dx,DWORD PTR ds:[esi]
  41a047:	lods   eax,DWORD PTR ds:[esi]
  41a048:	xchg   edi,eax
  41a049:	div    DWORD PTR [ebp-0x48534d23]
  41a04f:	xchg   ebx,eax
  41a050:	not    ebx
  41a052:	aam    0x47
  41a054:	adc    al,0x9b
  41a056:	jp     0x419ff0
  41a058:	fwait
  41a059:	pop    esp
  41a05a:	dec    ebx
  41a05b:	outs   dx,BYTE PTR cs:[esi]
  41a05d:	xor    eax,0x31336435
  41a062:	mov    esp,ecx
  41a064:	pop    ebx
  41a065:	test   eax,0xe93cae25
  41a06a:	in     al,0x17
  41a06c:	daa    
  41a06d:	mov    ds:0x616f7cb3,al
  41a072:	test   eax,0x2fbe6cf5
  41a077:	mov    ah,0xbd
  41a079:	test   eax,0x59c75eec
  41a07e:	inc    eax
  41a07f:	or     DWORD PTR [ebp+0x12a53daa],ebx
  41a085:	cdq    
  41a086:	loop   0x41a06e
  41a088:	outs   dx,BYTE PTR ds:[esi]
  41a089:	push   eax
  41a08a:	into   
  41a08b:	sub    al,BYTE PTR [eax+0x1a239779]
  41a091:	mov    gs,WORD PTR [edx]
  41a093:	ret    0x5972
  41a096:	test   eax,0xdff62b1d
  41a09b:	aad    0xc8
  41a09d:	(bad)  
  41a09e:	dec    edx
  41a09f:	push   ss
  41a0a0:	test   DWORD PTR [eax+0x54],ebp
  41a0a3:	scas   al,BYTE PTR es:[edi]
  41a0a4:	push   ecx
  41a0a5:	test   DWORD PTR [eax-0x29e6812e],esp
  41a0ab:	push   es
  41a0ac:	int3   
  41a0ad:	das    
  41a0ae:	push   ss
  41a0af:	neg    DWORD PTR [ebp-0x20]
  41a0b2:	fmul   QWORD PTR [ebx]
  41a0b4:	dec    edx
  41a0b5:	jg     0x41a0e5
  41a0b7:	fimul  WORD PTR [ecx-0x2226638d]
  41a0bd:	(bad)  
  41a0be:	(bad)  
  41a0bf:	scas   al,BYTE PTR es:[edi]
  41a0c0:	push   cs
  41a0c1:	add    dh,BYTE PTR [esi+0x1350588a]
  41a0c7:	xchg   BYTE PTR [ecx-0x5f],dh
  41a0ca:	dec    edx
  41a0cb:	fadd   QWORD PTR [esi+eax*8+0x59d2e9c1]
  41a0d2:	and    eax,0xeb364f57
  41a0d7:	jns    0x41a077
  41a0d9:	jmp    0xc81d:0xb06d2649
  41a0e0:	ins    DWORD PTR es:[edi],dx
  41a0e1:	jno    0x41a09d
  41a0e3:	inc    ebp
  41a0e4:	fstp   DWORD PTR [ecx+0x28]
  41a0e7:	cld    
  41a0e8:	inc    ecx
  41a0e9:	pop    es
  41a0ea:	js     0x41a0cf
  41a0ec:	jp     0x41a130
  41a0ee:	dec    ebx
  41a0ef:	dec    eax
  41a0f0:	data16 mov dl,0xae
  41a0f3:	xor    DWORD PTR [eax+0x68ccf1db],edx
  41a0f9:	int    0x9f
  41a0fb:	and    ah,bl
  41a0fd:	gs xchg ecx,eax
  41a0ff:	mov    eax,0xf488b9a4
  41a104:	mov    ds:0x4d8d4ac9,eax
  41a109:	shl    DWORD PTR [edx],cl
  41a10b:	adc    al,0x7f
  41a10d:	fld    TBYTE PTR [edx-0x25e8932e]
  41a113:	jle    0x41a095
  41a115:	(bad)
  41a119:	push   es
  41a11a:	cld    
  41a11b:	add    bl,BYTE PTR [ecx+ecx*1]
  41a11e:	out    0xf,eax
  41a120:	fwait
  41a121:	pop    ecx
  41a122:	daa    
  41a123:	call   0x56730430
  41a128:	push   ebx
  41a129:	mov    dl,0x5e
  41a12b:	pop    ds
  41a12c:	pop    ebp
  41a12d:	mov    BYTE PTR [eax],0xe
  41a130:	and    DWORD PTR [ecx+eiz*4+0x1376bd7f],edx
  41a137:	push   ebx
  41a138:	pop    esp
  41a139:	mov    esp,0xb76e7e08
  41a13e:	inc    dh
  41a140:	mov    bl,0x15
  41a142:	dec    ebx
  41a143:	pop    ss
  41a144:	mov    al,0x6c
  41a146:	mov    ds:0x9963cc45,al
  41a14b:	rcr    BYTE PTR [ebx-0x1d],cl
  41a14e:	xlat   BYTE PTR ds:[ebx]
  41a14f:	push   cs
  41a150:	mov    edi,0x5cdd9296
  41a155:	add    edi,DWORD PTR [esi+0x37]
  41a158:	repnz addr16 push cs
  41a15b:	(bad)  
  41a15c:	and    DWORD PTR [ecx],ecx
  41a15e:	xchg   esi,eax
  41a15f:	int    0x5a
  41a161:	sub    DWORD PTR [ebp-0x23],esi
  41a164:	cmp    BYTE PTR [edi+0x5b],cl
  41a167:	inc    ebx
  41a168:	cli    
  41a169:	rcr    DWORD PTR [ebx+esi*8+0x1bd9f85d],1
  41a170:	or     DWORD PTR [edi+0x5ae63059],eax
  41a176:	and    bh,dh
  41a178:	and    cl,BYTE PTR [ebp-0x16399def]
  41a17e:	pop    esp
  41a17f:	fucomp st(2)
  41a181:	mov    ch,0x4a
  41a183:	pop    esp
  41a184:	inc    eax
  41a185:	cwde   
  41a186:	pushf  
  41a187:	cmp    dh,BYTE PTR ds:0xd4d2d0da
  41a18d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a18e:	cmova  eax,ebp
  41a191:	mov    cl,0x0
  41a193:	aam    0xb8
  41a195:	or     eax,0x6e74f54b
  41a19a:	imul   ecx,DWORD PTR [esi],0xd36047a1
  41a1a0:	pop    es
  41a1a1:	jl     0x41a15c
  41a1a3:	enter  0xed96,0xda
  41a1a7:	pop    ss
  41a1a8:	pop    ebp
  41a1a9:	inc    esi
  41a1aa:	cwde   
  41a1ab:	sbb    DWORD PTR [ebx],ecx
  41a1ad:	jecxz  0x41a17f
  41a1af:	jl     0x41a17c
  41a1b1:	jo     0x41a133
  41a1b3:	add    BYTE PTR [edx-0x7c],dl
  41a1b6:	test   BYTE PTR [edi],bh
  41a1b8:	loop   0x41a1e8
  41a1ba:	retf   
  41a1bb:	mov    ebp,0x584b8672
  41a1c0:	cld    
  41a1c1:	push   esp
  41a1c2:	out    0x1a,al
  41a1c4:	out    0xc3,al
  41a1c6:	xchg   esi,eax
  41a1c7:	inc    ebx
  41a1c8:	fsubr  DWORD PTR [esi-0x17]
  41a1cb:	in     al,0x93
  41a1cd:	pop    eax
  41a1ce:	xor    eax,DWORD PTR [edi-0x693abd74]
  41a1d4:	jl     0x41a231
  41a1d6:	push   ebp
  41a1d7:	and    dh,al
  41a1d9:	fwait
  41a1da:	jne    0x41a1a9
  41a1dc:	ja     0x41a196
  41a1de:	jmp    0x41a23a
  41a1e0:	mov    ebp,0xf8d2f3a1
  41a1e5:	xchg   ebx,eax
  41a1e6:	inc    ebp
  41a1e7:	dec    esi
  41a1e8:	es int3 
  41a1ea:	popa   
  41a1eb:	xor    al,0x5d
  41a1ed:	pushf  
  41a1ee:	lock sbb esp,DWORD PTR [edi-0x3d]
  41a1f2:	adc    al,0x7e
  41a1f4:	pop    cx
  41a1f6:	fdivr  DWORD PTR [edi-0x266d37a5]
  41a1fc:	xchg   ecx,eax
  41a1fd:	dec    ecx
  41a1fe:	dec    ebx
  41a1ff:	and    DWORD PTR [edi-0x2e],ecx
  41a202:	sbb    cl,cl
  41a204:	sti    
  41a205:	cmp    al,0x25
  41a207:	aad    0x51
  41a209:	call   0x599951dc
  41a20e:	test   BYTE PTR [edx-0x37],ah
  41a211:	xchg   BYTE PTR [edx-0x4a],cl
  41a214:	aam    0xe7
  41a216:	cmp    bl,cl
  41a218:	jbe    0x41a1fa
  41a21a:	ins    DWORD PTR es:[edi],dx
  41a21b:	leave  
  41a21c:	enter  0x54a3,0xf
  41a220:	es inc esi
  41a222:	stos   DWORD PTR es:[edi],eax
  41a223:	bound  eax,QWORD PTR [edi+0x4126d1c0]
  41a229:	or     dh,BYTE PTR [ebx-0x9]
  41a22c:	sbb    BYTE PTR [ebx-0x33],bl
  41a22f:	enter  0xe5f3,0xe8
  41a233:	ret    0xfa9
  41a236:	jmp    0xcbc9:0xc79d24d2
  41a23d:	pusha  
  41a23e:	retf   0x5dd0
  41a241:	jp     0x41a2bf
  41a243:	adc    eax,0x8f675051
  41a248:	ja     0x41a2b7
  41a24a:	mov    edi,0x4a9ab5b2
  41a24f:	mov    al,ds:0x887deaea
  41a254:	jno    0x41a2ad
  41a256:	dec    ebx
  41a257:	out    0xd1,al
  41a259:	call   DWORD PTR [edx+ebp*8-0x2d13a30f]
  41a260:	in     al,0xa5
  41a262:	xchg   DWORD PTR [ecx],eax
  41a264:	jp     0x41a2d7
  41a266:	out    dx,eax
  41a267:	adc    DWORD PTR [edx],0x68
  41a26a:	call   0x707b364
  41a26f:	(bad)  
  41a270:	jge    0x41a2d7
  41a272:	imul   DWORD PTR [ebx-0x6fba693]
  41a278:	outs   dx,DWORD PTR ds:[esi]
  41a279:	xor    BYTE PTR [edx],cl
  41a27b:	xchg   ebx,eax
  41a27c:	pop    ebp
  41a27d:	inc    esp
  41a27e:	dec    esp
  41a27f:	pop    ds
  41a280:	mov    si,0xd48c
  41a284:	push   cs
  41a285:	jb     0x41a2e8
  41a287:	fcmovnu st,st(5)
  41a289:	adc    BYTE PTR [eax+0x20],cl
  41a28c:	daa    
  41a28d:	fbld   TBYTE PTR [ebx-0x4807a258]
  41a293:	mov    ebp,0x97e15ae9
  41a298:	and    dh,BYTE PTR [esi]
  41a29a:	add    ebx,DWORD PTR [edx-0x39]
  41a29d:	pop    ecx
  41a29e:	mov    al,ds:0xeeeb21ac
  41a2a3:	push   es
  41a2a4:	addr16 (bad) 
  41a2a6:	push   ebp
  41a2a7:	dec    esp
  41a2a8:	jnp    0x41a2db
  41a2aa:	xchg   ecx,eax
  41a2ab:	sub    eax,0x9062b1df
  41a2b0:	cmp    al,0x46
  41a2b2:	enter  0x59c7,0x6d
  41a2b6:	aaa    
  41a2b7:	pushf  
  41a2b8:	aas    
  41a2b9:	mov    al,ds:0x5caa4a
  41a2be:	lods   al,BYTE PTR ds:[esi]
  41a2bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2c0:	jb     0x41a341
  41a2c2:	fistp  DWORD PTR [edx]
  41a2c4:	pop    eax
  41a2c5:	es inc eax
  41a2c7:	jmp    0x41a272
  41a2c9:	(bad)  
  41a2ca:	stc    
  41a2cb:	or     DWORD PTR [esi],eax
  41a2cd:	push   edi
  41a2ce:	in     eax,dx
  41a2cf:	shl    cl,cl
  41a2d1:	xchg   esp,eax
  41a2d2:	mov    ebx,0x49b1c196
  41a2d7:	sub    bl,BYTE PTR ds:0x9dbb8cd4
  41a2dd:	mov    edx,0x59c96bd6
  41a2e2:	mov    dh,0x89
  41a2e4:	add    DWORD PTR [esi-0x72],esi
  41a2e7:	dec    eax
  41a2e8:	loope  0x41a2d9
  41a2ea:	dec    edx
  41a2eb:	mov    esp,0x7a148835
  41a2f0:	test   ch,ch
  41a2f2:	fst    st(2)
  41a2f4:	inc    eax
  41a2f5:	test   BYTE PTR [edi-0x70],al
  41a2f8:	dec    eax
  41a2f9:	jns    0x41a27e
  41a2fb:	pop    ebx
  41a2fc:	push   esi
  41a2fd:	xor    eax,0x8117db5c
  41a302:	sub    dl,BYTE PTR [eax-0x4a]
  41a305:	cmp    cl,dh
  41a307:	ror    BYTE PTR [ebx+0x5178b6b2],cl
  41a30d:	or     ah,bh
  41a30f:	and    BYTE PTR [esi-0x16],dl
  41a312:	fcomi  st,st(1)
  41a314:	add    edi,DWORD PTR [ebp+0x87f77b]
  41a31a:	imul   ecx,DWORD PTR [edx+0x8c05989],0xffffffc4
  41a321:	mov    eax,ds:0x342639bb
  41a326:	dec    ebx
  41a327:	adc    ecx,DWORD PTR ds:0x9af29aac
  41a32d:	es aad 0xd2
  41a330:	div    BYTE PTR [ebp+0x59]
  41a333:	in     al,0xde
  41a335:	out    0xd9,al
  41a337:	in     al,dx
  41a338:	push   esi
  41a339:	mov    ebx,0x8bcbb7f8
  41a33e:	cmp    esi,DWORD PTR [edi]
  41a340:	cwde   
  41a341:	mov    WORD PTR [esi],ds
  41a343:	shl    BYTE PTR [edx+0x24606f26],cl
  41a349:	sbb    ecx,DWORD PTR [ebx+eiz*4]
  41a34c:	outs   dx,DWORD PTR ds:[esi]
  41a34d:	out    dx,eax
  41a34e:	iret   
  41a34f:	lock pandn mm0,QWORD PTR [ebx+0x7c33dd66]
  41a357:	loope  0x41a2f7
  41a359:	pop    ecx
  41a35a:	aad    0xf
  41a35c:	es cmp ebx,DWORD PTR gs:[ebx+0x4e]
  41a361:	fisubr WORD PTR [esp+ecx*2+0x5d]
  41a365:	loopne 0x41a3cb
  41a367:	cmp    dl,BYTE PTR [ebp+0x1dcb9d8c]
  41a36d:	inc    esi
  41a36e:	pop    ebx
  41a36f:	loop   0x41a3df
  41a371:	push   es
  41a372:	retf   
  41a373:	sub    ebx,DWORD PTR [edi-0x569fabc3]
  41a379:	or     al,0xf
  41a37b:	cmp    BYTE PTR [ebx],dh
  41a37d:	or     DWORD PTR [ebx-0x62bbfa2a],0xffffffd2
  41a384:	push   0x57
  41a386:	inc    esi
  41a387:	jmp    0x9d0473db
  41a38c:	pop    ebp
  41a38d:	int3   
  41a38e:	fidiv  DWORD PTR [esi+0x39e8489c]
  41a394:	ins    DWORD PTR es:[edi],dx
  41a395:	pop    ecx
  41a396:	cmp    al,0x16
  41a398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a399:	fld    TBYTE PTR [edi]
  41a39b:	adc    eax,0xe64ab1c2
  41a3a0:	imul   ebp,edi,0xf876880c
  41a3a6:	scas   al,BYTE PTR es:[edi]
  41a3a7:	int3   
  41a3a8:	mov    BYTE PTR [ebp+0xe3dd53a],ch
  41a3ae:	out    0xca,eax
  41a3b0:	fiadd  WORD PTR [ebx-0x25]
  41a3b3:	fwait
  41a3b4:	pop    ebp
  41a3b5:	shr    esp,cl
  41a3b7:	icebp  
  41a3b8:	push   cs
  41a3b9:	adc    ch,BYTE PTR [ebp-0x41]
  41a3bc:	bound  esp,QWORD PTR [ecx+0x5e]
  41a3bf:	inc    edx
  41a3c0:	ficomp WORD PTR [ecx+0x3b]
  41a3c3:	mov    eax,ds:0x3b7a6195
  41a3c8:	push   ebp
  41a3c9:	ret    0xd747
  41a3cc:	fisubr WORD PTR [eax+0x45e27f0a]
  41a3d2:	fld    QWORD PTR [eax-0x2019a653]
  41a3d8:	cmp    bh,ch
  41a3da:	jge    0x41a420
  41a3dc:	inc    edx
  41a3dd:	sti    
  41a3de:	dec    edx
  41a3df:	cld    
  41a3e0:	push   esi
  41a3e1:	xchg   cl,dh
  41a3e3:	pop    ebp
  41a3e4:	scas   eax,DWORD PTR es:[edi]
  41a3e5:	or     eax,edx
  41a3e7:	shr    BYTE PTR [ecx],cl
  41a3e9:	seto   BYTE PTR [edx-0x68ee4940]
  41a3f0:	pop    ebp
  41a3f1:	(bad)  
  41a3f2:	sub    al,0x9e
  41a3f4:	mov    al,0x93
  41a3f6:	in     eax,0x93
  41a3f8:	mov    ah,0x59
  41a3fa:	aam    0x9f
  41a3fc:	xchg   edi,eax
  41a3fd:	mov    es,edi
  41a3ff:	fsub   DWORD PTR [ebx+eiz*1+0x59ef332e]
  41a406:	inc    edi
  41a407:	aam    0xc9
  41a409:	iret   
  41a40a:	(bad)  
  41a40c:	lods   al,BYTE PTR ds:[esi]
  41a40d:	pop    ecx
  41a40e:	jo     0x41a395
  41a410:	out    dx,al
  41a411:	mov    ds:0x691e3fa8,al
  41a416:	push   0xffffffb6
  41a418:	cmc    
  41a419:	adc    eax,0x945d3160
  41a41e:	and    eax,DWORD PTR [edx]
  41a420:	mov    ?,WORD PTR [edx-0x5d]
  41a423:	lods   al,BYTE PTR ds:[esi]
  41a424:	mov    ds:0x7111ff59,eax
  41a429:	bound  edx,QWORD PTR [ebx]
  41a42b:	mov    ds:0x9636cbd7,al
  41a430:	(bad)  
  41a431:	into   
  41a432:	dec    edx
  41a433:	ja     0x41a3c5
  41a435:	pop    ebx
  41a436:	pop    edi
  41a437:	imul   eax,DWORD PTR [edi-0x73f7f3a7],0x5b3f12af
  41a441:	(bad)  
  41a442:	dec    edx
  41a443:	adc    DWORD PTR [ebp+0x11d26d0a],ecx
  41a449:	outs   dx,DWORD PTR ds:[esi]
  41a44a:	lods   al,BYTE PTR ds:[esi]
  41a44b:	shr    BYTE PTR [ebx+eiz*8-0x58],cl
  41a44f:	cmp    eax,0x24758822
  41a454:	sub    DWORD PTR ds:[ebp-0x76],0xffffffdd
  41a459:	jmp    0x41a420
  41a45b:	and    edi,DWORD PTR [edi+0x13]
  41a45e:	in     eax,dx
  41a45f:	push   edx
  41a460:	stc    
  41a461:	ror    DWORD PTR [esi],0x9b
  41a464:	or     al,0xa5
  41a466:	jge    0x41a43b
  41a468:	push   esi
  41a469:	sub    ecx,DWORD PTR [ecx]
  41a46b:	mov    bl,0x4f
  41a46d:	test   DWORD PTR [edi-0xe],0xa881065d
  41a474:	or     eax,0xcd27876
  41a479:	jl     0x41a4b7
  41a47b:	hlt    
  41a47c:	neg    DWORD PTR [ecx+0x6]
  41a47f:	xor    ah,ah
  41a481:	stos   DWORD PTR es:[edi],eax
  41a482:	mov    esp,0x75076f73
  41a487:	xchg   esi,eax
  41a488:	push   esi
  41a489:	sahf   
  41a48a:	test   eax,0xc73b2ded
  41a48f:	cmp    bh,BYTE PTR [edx+ebx*2-0x68]
  41a493:	stos   BYTE PTR es:[edi],al
  41a494:	cmc    
  41a495:	dec    esi
  41a496:	sbb    BYTE PTR [ebx],ah
  41a498:	or     eax,0xa662999b
  41a49d:	mov    dh,0x55
  41a49f:	(bad)  
  41a4a1:	xor    al,0x64
  41a4a3:	dec    esp
  41a4a4:	test   BYTE PTR [ecx+0x6d406ac0],bh
  41a4aa:	cmp    al,0xda
  41a4ac:	xor    DWORD PTR [edx+ecx*2+0x1f406a59],0x4acb0e87
  41a4b7:	(bad)  
  41a4b8:	adc    eax,0x943e3c9e
  41a4bd:	gs or  ch,bl
  41a4c0:	sbb    ecx,DWORD PTR [ebx]
  41a4c2:	mov    ds:0xb259bc21,al
  41a4c7:	xlat   BYTE PTR ds:[ebx]
  41a4c8:	jb     0x41a51b
  41a4ca:	push   0x4b23331d
  41a4cf:	(bad)  
  41a4d0:	mov    ds:0xf50f74f9,eax
  41a4d5:	dec    eax
  41a4d6:	mov    al,ds:0x2e06a6d0
  41a4db:	ud1    esi,DWORD PTR [edx-0x12543896]
  41a4e2:	dec    edx
  41a4e3:	cmp    DWORD PTR [edx+ebx*4],ebx
  41a4e6:	jbe    0x41a4e0
  41a4e8:	outs   dx,BYTE PTR ds:[esi]
  41a4e9:	xchg   DWORD PTR [eax-0x2e],edx
  41a4ec:	fnsave [ebp+0x71ee7fdd]
  41a4f2:	fnstenv [esi+edx*2]
  41a4f5:	(bad)  
  41a4f7:	sub    eax,0x89aa9ee9
  41a4fc:	dec    edx
  41a4fd:	inc    edx
  41a4fe:	rcl    cl,1
  41a500:	dec    ecx
  41a501:	loop   0x41a553
  41a503:	pop    ds
  41a504:	jnp    0xb859947d
  41a50a:	daa    
  41a50b:	sbb    esi,edi
  41a50d:	pop    ecx
  41a50e:	xor    eax,0xcee32ed4
  41a513:	(bad)  
  41a514:	hlt    
  41a515:	pop    ecx
  41a516:	(bad)  
  41a518:	lds    ebp,FWORD PTR ds:0xe53b5d78
  41a51e:	dec    ecx
  41a51f:	mov    ah,0x3f
  41a521:	div    BYTE PTR [ebx+0x21]
  41a524:	pop    edx
  41a525:	frndint 
  41a527:	jnp    0x41a4fd
  41a529:	cmp    DWORD PTR [edx-0x2d],0xb978000c
  41a530:	push   ebp
  41a531:	mov    eax,ds:0xc75e2839
  41a536:	call   0x87cb:0xf06c1d2d
  41a53d:	fnstcw WORD PTR [esp+ecx*8]
  41a540:	xchg   edx,eax
  41a541:	jp     0x41a4d2
  41a543:	sti    
  41a544:	jge    0x41a5bc
  41a546:	es out dx,al
  41a548:	fcomip st,st(0)
  41a54a:	push   0xcc44653b
  41a54f:	aad    0x14
  41a551:	mov    al,0xf8
  41a553:	inc    esp
  41a554:	fisttp QWORD PTR [esi+0x5974cbf2]
  41a55a:	ins    BYTE PTR es:[edi],dx
  41a55b:	mov    al,ds:0x91d828f3
  41a560:	clc    
  41a561:	cwde   
  41a562:	dec    edx
  41a563:	dec    esp
  41a564:	in     eax,0x96
  41a566:	or     DWORD PTR [edx-0x608a145],edi
  41a56c:	mov    edx,0x5775cb73
  41a571:	push   eax
  41a572:	sub    bh,BYTE PTR [edx]
  41a574:	stc    
  41a575:	xchg   BYTE PTR [edi-0x22],al
  41a578:	in     eax,dx
  41a579:	and    BYTE PTR [ebx],cl
  41a57b:	and    eax,eax
  41a57d:	or     BYTE PTR [ecx],bl
  41a57f:	sahf   
  41a580:	mov    ds:0x7ce19667,al
  41a585:	inc    edi
  41a586:	jle    0x41a5dd
  41a588:	iret   
  41a589:	dec    ebx
  41a58a:	stos   DWORD PTR es:[edi],eax
  41a58b:	xchg   ebx,eax
  41a58c:	push   ds
  41a58d:	push   eax
  41a58e:	sahf   
  41a58f:	and    DWORD PTR [edx+0x7ffe4b48],esp
  41a595:	or     dl,bh
  41a597:	add    eax,eax
  41a599:	cmp    ebx,DWORD PTR [ebx-0x74cb930c]
  41a59f:	shr    bl,cl
  41a5a1:	call   0x7f46f6be
  41a5a6:	dec    ebx
  41a5a7:	push   es
  41a5a8:	dec    edi
  41a5a9:	or     eax,0xbe85c25
  41a5ae:	repz rcr BYTE PTR [ecx],cl
  41a5b1:	xchg   DWORD PTR [ecx+0xa],eax
  41a5b4:	stc    
  41a5b5:	pop    ebx
  41a5b6:	xchg   esi,eax
  41a5b7:	mov    al,0x6e
  41a5b9:	in     al,0x8d
  41a5bb:	(bad)  [esi+0x59]
  41a5be:	adc    al,0x60
  41a5c0:	leave  
  41a5c1:	xor    al,0xde
  41a5c3:	rcl    BYTE PTR [esi+0x40d7b3b3],cl
  41a5c9:	jecxz  0x41a5ed
  41a5cb:	ficom  WORD PTR [edx+0x58]
  41a5ce:	mov    ds:0xcaf66ccd,eax
  41a5d3:	stos   BYTE PTR es:[edi],al
  41a5d4:	sbb    al,0x48
  41a5d6:	ins    BYTE PTR es:[edi],dx
  41a5d7:	out    0x22,al
  41a5d9:	aam    0x5
  41a5db:	ror    BYTE PTR [ebx],cl
  41a5dd:	les    ebp,FWORD PTR [edi]
  41a5df:	je     0x41a62f
  41a5e1:	dec    bx
  41a5e3:	ss jmp 0x2070db1b
  41a5e9:	jg     0x41a5e2
  41a5eb:	fist   WORD PTR [eax-0x23]
  41a5ee:	sbb    eax,0x5a701910
  41a5f3:	push   ecx
  41a5f4:	popf   
  41a5f5:	mov    dl,0xbd
  41a5f7:	sbb    BYTE PTR [ebp+0x79],bl
  41a5fa:	pop    ecx
  41a5fb:	mov    DWORD PTR [edi+0x6c],ebx
  41a5fe:	and    cl,BYTE PTR [eax-0x78]
  41a601:	pop    ecx
  41a602:	in     al,0x71
  41a604:	or     eax,0xecb37334
  41a609:	xlat   BYTE PTR ds:[ebx]
  41a60a:	dec    edx
  41a60b:	fst    QWORD PTR [esi]
  41a60d:	push   eax
  41a60e:	xchg   edx,eax
  41a60f:	push   esp
  41a610:	retf   
  41a611:	scas   eax,DWORD PTR es:[edi]
  41a612:	sub    edx,edx
  41a614:	das    
  41a615:	jecxz  0x41a5c7
  41a617:	shr    DWORD PTR [bx+di+0x3e],0x42
  41a61c:	pop    ebp
  41a61d:	push   ss
  41a61e:	out    0xef,al
  41a620:	inc    eax
  41a621:	xlat   BYTE PTR ds:[ebx]
  41a622:	xor    bh,dl
  41a624:	add    BYTE PTR [edi+0x3d],0x29
  41a628:	mov    al,0xd
  41a62a:	or     esi,DWORD PTR [ecx+0x6c9e125b]
  41a630:	pop    ebp
  41a631:	mov    dl,0x6f
  41a633:	mov    eax,gs:0xc94ff175
  41a639:	dec    eax
  41a63a:	jo     0x41a66e
  41a63c:	adc    al,0x46
  41a63e:	dec    ecx
  41a63f:	mov    edx,0x773e945e
  41a644:	in     eax,dx
  41a645:	jp     0x41a692
  41a647:	pop    edi
  41a648:	bound  ebp,QWORD PTR [ecx+0x6fcdf82e]
  41a64e:	or     edi,esi
  41a650:	repnz push ebx
  41a652:	lods   eax,DWORD PTR ds:[esi]
  41a653:	call   0x5ac83935
  41a658:	inc    ecx
  41a659:	(bad)  
  41a65a:	push   ecx
  41a65b:	scas   al,BYTE PTR es:[edi]
  41a65c:	mov    ebx,0x5f385688
  41a661:	aas    
  41a662:	into   
  41a663:	pushw  0x41d9
  41a667:	mov    ah,0x99
  41a669:	pop    ecx
  41a66a:	jb     0x41a6a8
  41a66c:	jl     0x41a68c
  41a66e:	jge    0x41a616
  41a670:	pop    eax
  41a671:	jl     0x41a6be
  41a673:	mov    ch,0xcb
  41a675:	call   0xe7b6d94a
  41a67a:	sbb    eax,0xd24ae3d2
  41a67f:	push   edx
  41a680:	push   eax
  41a681:	xchg   ecx,eax
  41a682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a683:	cwde   
  41a684:	pop    edi
  41a685:	shl    cl,0x8
  41a688:	popf   
  41a689:	xchg   DWORD PTR [ebx+0x5d82ddf],edx
  41a68f:	aad    0x3d
  41a691:	js     0x41a635
  41a693:	lods   eax,DWORD PTR ds:[esi]
  41a694:	jns    0x41a67f
  41a696:	or     al,0x82
  41a698:	mov    eax,0x512c4029
  41a69d:	stos   DWORD PTR es:[edi],eax
  41a69e:	xchg   ebp,eax
  41a69f:	repz xlat BYTE PTR ds:[ebx]
  41a6a1:	mov    WORD PTR [ebx-0x4f],fs
  41a6a4:	sbb    DWORD PTR [esi+0x595a3a8a],eax
  41a6aa:	test   eax,0xbb455f4
  41a6af:	mov    eax,0xae20f186
  41a6b4:	pop    esp
  41a6b5:	pop    esi
  41a6b6:	xor    eax,0x81ac1a2a
  41a6bb:	mov    ch,0x93
  41a6bd:	(bad)  
  41a6bf:	ret    0xdb8
  41a6c2:	fld    TBYTE PTR [eax]
  41a6c4:	mov    ebx,0xa3eca859
  41a6c9:	inc    esi
  41a6ca:	or     esi,ecx
  41a6cc:	pop    ds
  41a6cd:	lock dec edx
  41a6cf:	or     bl,cl
  41a6d1:	aas    
  41a6d2:	jno    0x41a670
  41a6d4:	mov    ds:0x20dc4d2c,al
  41a6d9:	pushf  
  41a6da:	pop    eax
  41a6db:	in     eax,dx
  41a6dc:	jne    0x41a736
  41a6de:	enter  0x8e78,0x9
  41a6e2:	div    BYTE PTR [edx]
  41a6e4:	leave  
  41a6e5:	dec    edx
  41a6e6:	and    esi,DWORD PTR [edi-0x25]
  41a6e9:	fnstcw WORD PTR [ebx-0x7e5c6608]
  41a6ef:	stos   BYTE PTR es:[edi],al
  41a6f0:	rcr    BYTE PTR [ecx-0x10],1
  41a6f3:	cmp    edx,esi
  41a6f5:	mov    edi,0x79e5e247
  41a6fa:	push   edx
  41a6fb:	fstp   TBYTE PTR [esp+eax*8-0x1f]
  41a6ff:	xor    ah,BYTE PTR [ecx-0x38]
  41a702:	sahf   
  41a703:	mov    bh,0xfa
  41a705:	pop    ecx
  41a706:	(bad)  
  41a707:	mov    ah,0x24
  41a709:	int3   
  41a70a:	and    dh,BYTE PTR [ebp+0x39]
  41a70d:	clc    
  41a70e:	dec    edx
  41a70f:	lds    ebp,FWORD PTR [edx+0x39]
  41a712:	mov    dl,0xe2
  41a714:	or     bh,BYTE PTR [eax]
  41a716:	add    edx,edx
  41a718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a719:	push   ebp
  41a71a:	ror    DWORD PTR ds:0x89af3c81,cl
  41a720:	pop    ebp
  41a721:	addr16 mov ds:0xe3a9,al
  41a725:	aad    0x75
  41a727:	mov    bl,0xbc
  41a729:	ja     0x41a716
  41a72b:	sbb    ch,bl
  41a72d:	or     al,0x53
  41a72f:	sbb    dh,BYTE PTR [edi+0x5d7e6771]
  41a735:	sub    DWORD PTR [eax],ebx
  41a737:	xchg   esi,eax
  41a738:	cld    
  41a739:	int    0xeb
  41a73b:	cmp    BYTE PTR [ebx-0x49e86aa7],cl
  41a741:	or     BYTE PTR [esi+esi*4-0x4c],dl
  41a745:	addr16 dec ebx
  41a747:	lds    esp,FWORD PTR [edx]
  41a749:	and    ecx,DWORD PTR [ebp-0x43]
  41a74c:	push   0xffffffa8
  41a74e:	adc    al,0xd2
  41a750:	fbstp  TBYTE PTR [ebx+edx*8-0x56]
  41a754:	mov    esi,0x5d3cd697
  41a759:	cli    
  41a75a:	scas   al,BYTE PTR es:[edi]
  41a75b:	pop    ebp
  41a75c:	mov    eax,0xdde8726a
  41a761:	pop    ecx
  41a762:	push   edi
  41a763:	ret    
  41a764:	iret   
  41a765:	in     al,0x7a
  41a767:	aaa    
  41a768:	out    0xb7,al
  41a76a:	dec    edx
  41a76b:	mov    al,0xfa
  41a76d:	and    edi,DWORD PTR [eax]
  41a76f:	(bad)
  41a774:	pop    es
  41a775:	pop    ebp
  41a776:	addr16 (bad) 
  41a779:	pop    ebp
  41a77a:	ficom  WORD PTR [eax+0x23556527]
  41a780:	stos   DWORD PTR es:[edi],eax
  41a781:	cld    
  41a782:	xchg   ebp,eax
  41a783:	and    al,0x2
  41a785:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a786:	pop    edi
  41a787:	lds    edi,FWORD PTR [eax+0x4f]
  41a78a:	retf   
  41a78b:	ror    ch,cl
  41a78d:	jno    0x41a723
  41a78f:	pop    ds
  41a790:	lods   al,BYTE PTR ds:[esi]
  41a791:	les    edx,FWORD PTR es:[edi-0x2d7be767]
  41a798:	ins    DWORD PTR es:[edi],dx
  41a799:	cmp    DWORD PTR [edx],ebx
  41a79b:	pushf  
  41a79c:	or     eax,0x7fd36f6a
  41a7a1:	jl     0x41a802
  41a7a3:	sbb    eax,0x1293b78f
  41a7a8:	outs   dx,BYTE PTR ds:[esi]
  41a7a9:	aam    0xa0
  41a7ab:	and    eax,DWORD PTR [edx]
  41a7ad:	push   es
  41a7ae:	shr    edi,cl
  41a7b0:	dec    ecx
  41a7b1:	retf   
  41a7b2:	out    0xb7,eax
  41a7b4:	cmp    eax,0x5af681e
  41a7b9:	inc    esi
  41a7ba:	mov    ebx,0xa247a637
  41a7bf:	pop    edi
  41a7c0:	cld    
  41a7c1:	test   BYTE PTR [edx+0x29],cl
  41a7c4:	fnstcw WORD PTR [eax]
  41a7c6:	mov    bl,0xb9
  41a7c8:	push   es
  41a7c9:	adc    BYTE PTR [esi+ebx*1-0x5af65a2],ah
  41a7d0:	mov    edx,0x411d14b1
  41a7d5:	dec    ebp
  41a7d6:	jmp    0x41a7b5
  41a7d8:	xchg   DWORD PTR [ebp-0x35b700ab],ebx
  41a7de:	icebp  
  41a7df:	dec    ecx
  41a7e0:	push   edx
  41a7e1:	sar    DWORD PTR [esp+ebx*1-0x305389c0],1
  41a7e8:	outs   dx,BYTE PTR ds:[esi]
  41a7e9:	bound  ecx,QWORD PTR [edi]
  41a7eb:	dec    edx
  41a7ec:	cmp    eax,0x9e7889fc
  41a7f1:	sbb    ecx,DWORD PTR [ebx-0x70]
  41a7f4:	xlat   BYTE PTR ds:[ebx]
  41a7f5:	or     esp,DWORD PTR [edi+ecx*1]
  41a7f8:	cmp    ecx,DWORD PTR [esp+eiz*4]
  41a7fb:	sar    BYTE PTR [edi],cl
  41a7fd:	mov    ebp,0xf918ce69
  41a802:	push   esp
  41a803:	pushf  
  41a804:	pop    ebp
  41a805:	cmp    ecx,DWORD PTR [ecx-0x5b]
  41a808:	push   esp
  41a809:	dec    eax
  41a80a:	icebp  
  41a80b:	inc    ebp
  41a80c:	es inc esi
  41a80e:	inc    ecx
  41a80f:	mov    ss,WORD PTR [esi-0x49225344]
  41a815:	jo     0x41a862
  41a817:	or     DWORD PTR [ebx+ecx*1-0x19],edi
  41a81b:	cmp    eax,0xd2979673
  41a820:	xchg   BYTE PTR [esp+ebp*2-0x5f],ah
  41a824:	mov    ebx,DWORD PTR ds:0x5e5dee76
  41a82a:	leave  
  41a82b:	ja     0x41a7cf
  41a82d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a82e:	sub    eax,0x77478cfd
  41a833:	mov    WORD PTR [edi-0x2db714c6],gs
  41a839:	sbb    eax,0xef3fdd0c
  41a83e:	and    cl,ch
  41a840:	repnz fstp DWORD PTR [esi-0x6c]
  41a844:	ja     0x41a7e5
  41a846:	stc    
  41a847:	push   0xb2da041a
  41a84c:	push   esi
  41a84d:	adc    cl,BYTE PTR [ebx-0x4b]
  41a850:	mov    ebp,0x5a52a296
  41a855:	sbb    DWORD PTR [edx-0x3c],0x17e39dd
  41a85c:	jle    0x41a88f
  41a85e:	jp     0x41a83a
  41a860:	pop    ebp
  41a861:	push   0xdf29fc3
  41a866:	cli    
  41a867:	ds dec ecx
  41a869:	inc    esi
  41a86a:	loopne 0x41a855
  41a86c:	call   0x959499f1
  41a871:	ror    BYTE PTR [edx-0x24],1
  41a874:	fs xchg ebp,eax
  41a876:	lods   al,BYTE PTR ds:[esi]
  41a877:	addr16 cdq 
  41a879:	test   BYTE PTR [ebx+edx*8-0x4e],ch
  41a87d:	cmp    BYTE PTR ds:0xbdc72cc0,dh
  41a883:	das    
  41a884:	pop    ebp
  41a885:	jb     0x41a8fc
  41a887:	xor    DWORD PTR [ebp+edi*4+0x21],eax
  41a88b:	dec    esp
  41a88c:	mov    al,ds:0xe0d213a3
  41a891:	jg     0x41a8ca
  41a893:	mov    edx,DWORD PTR [eax+0x27ebefcd]
  41a899:	repz and BYTE PTR [ecx+0x4d],al
  41a89d:	pop    ecx
  41a89e:	mov    WORD PTR [ebp+0x72],ds
  41a8a1:	arpl   ax,di
  41a8a3:	push   es
  41a8a4:	sbb    ebx,DWORD PTR [edi+0x59]
  41a8a7:	fisubr DWORD PTR [edi+ebp*1]
  41a8aa:	sbb    DWORD PTR [edx],eax
  41a8ac:	pop    edx
  41a8ad:	dec    edx
  41a8ae:	(bad)  
  41a8af:	xlat   BYTE PTR ds:[ebx]
  41a8b0:	jg     0x41a8f1
  41a8b2:	rcr    bh,cl
  41a8b4:	lods   eax,DWORD PTR ds:[esi]
  41a8b5:	xor    DWORD PTR [ebx],ecx
  41a8b7:	mov    BYTE PTR ds:0x914c1122,bl
  41a8bd:	pop    esp
  41a8be:	jmp    0x41a851
  41a8c0:	loop   0x41a918
  41a8c2:	xlat   BYTE PTR ds:[ebx]
  41a8c3:	sar    ch,cl
  41a8c5:	fnsave gs:[esp+edi*2+0x5d]
  41a8ca:	dec    ebx
  41a8cb:	sub    eax,0x5894b3e1
  41a8d0:	cli    
  41a8d1:	outs   dx,DWORD PTR ds:[esi]
  41a8d2:	lods   eax,DWORD PTR ds:[esi]
  41a8d3:	rcl    BYTE PTR [edi],cl
  41a8d5:	push   0x33b64b76
  41a8da:	mov    ebp,0xe6135de6
  41a8df:	mov    ebp,0xecc38102
  41a8e4:	mov    DWORD PTR [ecx+0x1e],ebx
  41a8e7:	xor    esi,DWORD PTR [edi]
  41a8e9:	dec    esp
  41a8ea:	push   esp
  41a8eb:	jno    0x41a94f
  41a8ed:	add    DWORD PTR [ebx+0x7a],ecx
  41a8f0:	jecxz  0x41a877
  41a8f2:	add    edx,esp
  41a8f4:	dec    esp
  41a8f5:	adc    eax,ebp
  41a8f7:	(bad)  
  41a8f8:	test   DWORD PTR [edx+ecx*4+0x77],0xe5fbb600
  41a900:	sub    cl,BYTE PTR [edx+0x5889f969]
  41a906:	inc    eax
  41a907:	push   ebx
  41a908:	pop    ebp
  41a909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a90a:	retf   
  41a90b:	cwde   
  41a90c:	and    dh,BYTE PTR [ebp-0x4dfe2361]
  41a912:	pop    es
  41a913:	adc    cl,BYTE PTR [eax+0x2f]
  41a916:	jns    0x41a89d
  41a918:	ror    DWORD PTR [ebp+0x54],cl
  41a91b:	mov    edx,0x965508e3
  41a920:	xchg   ecx,eax
  41a921:	jmp    0x59826880
  41a926:	sub    esi,DWORD PTR [edx+edx*2-0x17f948e6]
  41a92d:	mov    edx,0xd7491e7c
  41a932:	inc    eax
  41a933:	ds dec edi
  41a935:	out    dx,al
  41a936:	retf   
  41a937:	pop    esp
  41a938:	outs   dx,BYTE PTR ds:[esi]
  41a939:	fidiv  WORD PTR [esi]
  41a93b:	mov    edx,0xd282ef31
  41a940:	data16 sahf 
  41a942:	mov    esp,0x26e2585a
  41a947:	int3   
  41a948:	pop    ebp
  41a949:	pop    ebp
  41a94a:	mov    eax,0x18bab2cd
  41a94f:	push   ebp
  41a950:	in     eax,0x59
  41a952:	nop
  41a953:	xchg   BYTE PTR [edx+edi*1],al
  41a956:	pushf  
  41a957:	sub    BYTE PTR [esi],dh
  41a959:	mov    ecx,0xf06410ed
  41a95e:	mov    edx,0xf3afa5d2
  41a963:	mov    cl,0x5e
  41a965:	jecxz  0x41a9e6
  41a967:	retf   0xbc3e
  41a96a:	clc    
  41a96b:	mov    al,ds:0x1cc5c9cb
  41a970:	js     0x41a92d
  41a972:	dec    edx
  41a973:	sub    eax,0x4d12c7fc
  41a978:	and    ch,BYTE PTR [ebp-0x6a]
  41a97b:	fst    QWORD PTR [esi+eiz*2-0x30]
  41a97f:	push   edx
  41a980:	pop    edi
  41a981:	push   edx
  41a982:	jp     0x41a911
  41a984:	gs push cs
  41a986:	dec    ebx
  41a987:	xchg   ebp,eax
  41a988:	sar    DWORD PTR [eax+eiz*2+0x62],cl
  41a98c:	fsubp  st(0),st
  41a98e:	xor    al,0xd2
  41a990:	popf   
  41a991:	push   esi
  41a992:	and    eax,0x19671d64
  41a997:	push   ebx
  41a998:	pop    eax
  41a999:	xor    DWORD PTR [ecx+0x135edde4],ebp
  41a99f:	pop    edi
  41a9a0:	js     0x41a9ca
  41a9a2:	cmp    edx,edx
  41a9a4:	lods   al,BYTE PTR ds:[esi]
  41a9a5:	fsubrp st(5),st
  41a9a7:	stos   DWORD PTR es:[edi],eax
  41a9a8:	fnstcw WORD PTR [eax+0x37526b15]
  41a9ae:	pushf  
  41a9af:	mov    ah,0x91
  41a9b1:	ins    DWORD PTR es:[edi],dx
  41a9b2:	aad    0xc2
  41a9b4:	inc    ebp
  41a9b5:	outs   dx,DWORD PTR ds:[esi]
  41a9b6:	mov    edx,0xc588becc
  41a9bb:	aas    
  41a9bc:	std    
  41a9bd:	sbb    ch,BYTE PTR [ecx+0x40a3af36]
  41a9c3:	pop    ecx
  41a9c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9c5:	mov    bh,0x4a
  41a9c7:	xchg   dl,ah
  41a9c9:	xlat   BYTE PTR ds:[ebx]
  41a9ca:	ror    DWORD PTR [ecx],cl
  41a9cc:	out    dx,al
  41a9cd:	mov    ecx,0x469bd2be
  41a9d2:	fwait
  41a9d3:	jg     0x41aa0c
  41a9d5:	inc    ebx
  41a9d6:	add    esp,0x22889b5c
  41a9dc:	std    
  41a9dd:	pop    esi
  41a9de:	and    bl,cl
  41a9e0:	dec    ecx
  41a9e1:	mov    al,0x9d
  41a9e3:	xor    ch,BYTE PTR [eax]
  41a9e5:	mov    ?,WORD PTR [edi]
  41a9e7:	jp     0x41aa02
  41a9e9:	mov    ds:0x6b62f54a,al
  41a9ee:	js     0x41aa08
  41a9f0:	scas   eax,DWORD PTR es:[edi]
  41a9f1:	jb     0x41a9ca
  41a9f3:	shr    BYTE PTR [edi],cl
  41a9f5:	dec    edx
  41a9f6:	xchg   ebp,eax
  41a9f7:	mov    cl,0xf7
  41a9f9:	jecxz  0x41a9c0
  41a9fb:	minps  xmm6,XMMWORD PTR [ecx]
  41a9fe:	test   DWORD PTR [edx+0x24],0xbc93a0f8
  41aa05:	xor    ebp,DWORD PTR [ebp-0x2a27fe2e]
  41aa0b:	cmp    al,0xf5
  41aa0d:	scas   al,BYTE PTR es:[edi]
  41aa0e:	dec    eax
  41aa0f:	leave  
  41aa10:	push   esi
  41aa11:	pop    edx
  41aa12:	cmp    DWORD PTR [ebx],ebp
  41aa14:	dec    eax
  41aa15:	idiv   dl
  41aa17:	addr16 sub dl,bl
  41aa1a:	xor    eax,0xf3382ad5
  41aa1f:	iret   
  41aa20:	stc    
  41aa21:	jmp    0x34dec4ec
  41aa26:	push   edi
  41aa27:	outs   dx,DWORD PTR ds:[esi]
  41aa28:	out    dx,eax
  41aa29:	pop    ss
  41aa2a:	ror    DWORD PTR [eax+0x2e805aa1],cl
  41aa30:	js     0x41aa59
  41aa32:	xlat   BYTE PTR ds:[ebx]
  41aa33:	es adc eax,0x5dece518
  41aa39:	mov    al,BYTE PTR ds:0xf514b921
  41aa3f:	fild   QWORD PTR [eax]
  41aa41:	inc    esi
  41aa42:	imul   esp,DWORD PTR [edi+0x21],0xc72ba8f2
  41aa49:	test   DWORD PTR [edx-0x54],0x97b86c89
  41aa50:	out    dx,al
  41aa51:	sbb    ebp,DWORD PTR [edi-0x2d]
  41aa54:	outs   dx,BYTE PTR ds:[esi]
  41aa55:	popa   
  41aa56:	(bad)  
  41aa57:	jb     0x41aaa2
  41aa59:	or     BYTE PTR [ebp+ebx*8+0x3ea8b26f],dl
  41aa60:	dec    ebp
  41aa61:	sbb    DWORD PTR [ecx+0x44],ebp
  41aa64:	sub    dh,BYTE PTR [ebp+0x2d]
  41aa67:	sar    dh,cl
  41aa69:	movups xmm1,XMMWORD PTR [edi+0x2deb1bc0]
  41aa70:	pop    ebp
  41aa71:	inc    ecx
  41aa72:	cld    
  41aa73:	push   cs
  41aa74:	xchg   ah,bh
  41aa76:	mov    ds:0x1a5942ba,eax
  41aa7b:	jge    0x41aa8a
  41aa7d:	add    ecx,DWORD PTR [esi+0x19]
  41aa80:	mov    al,ds:0x57c34ac1
  41aa85:	ja     0x41aa73
  41aa87:	ins    DWORD PTR es:[edi],dx
  41aa88:	repnz push ss
  41aa8a:	imul   esp,DWORD PTR [ebx-0x6],0x3eacf59
  41aa91:	scas   eax,DWORD PTR es:[edi]
  41aa92:	leave  
  41aa93:	xor    al,0x8
  41aa95:	es dec ebx
  41aa97:	jbe    0x41aa68
  41aa99:	push   edi
  41aa9a:	xchg   ebx,eax
  41aa9b:	dec    esp
  41aa9c:	mov    ?,WORD PTR [esi]
  41aa9e:	jo     0x41aa85
  41aaa0:	out    0xfb,al
  41aaa2:	inc    ebp
  41aaa3:	ror    BYTE PTR [edx-0x5c],cl
  41aaa6:	push   eax
  41aaa7:	mov    ah,0x88
  41aaa9:	imul   ecx,DWORD PTR [ebx+0x44],0x5e
  41aaad:	lods   eax,DWORD PTR ds:[esi]
  41aaae:	scas   eax,DWORD PTR es:[edi]
  41aaaf:	(bad)  
  41aab0:	sub    al,0x59
  41aab2:	mov    ebx,0x8e5efc46
  41aab7:	mov    BYTE PTR [eax],ch
  41aab9:	cmp    al,0xb5
  41aabb:	add    dh,dl
  41aabd:	xor    al,0x39
  41aabf:	inc    edi
  41aac0:	pop    ebp
  41aac1:	xchg   DWORD PTR [ecx+0x7325c0fb],edi
  41aac7:	jg     0x41aac1
  41aac9:	pop    eax
  41aaca:	add    esp,edi
  41aacc:	cmovno edi,DWORD PTR [edx+eiz*8-0x2ee18642]
  41aad4:	pop    ebp
  41aad5:	ret    0x5bed
  41aad8:	rcl    ecx,1
  41aada:	xchg   ebx,eax
  41aadb:	mov    edx,0xcfa7582c
  41aae0:	inc    edx
  41aae1:	bound  edx,QWORD PTR [ebx-0x7f]
  41aae4:	test   DWORD PTR [edi],ecx
  41aae6:	sub    DWORD PTR [eax],edx
  41aae8:	adc    ah,BYTE PTR [ecx+eax*2]
  41aaeb:	pop    es
  41aaec:	popf   
  41aaed:	xor    esi,DWORD PTR [esi+0x5c50c0bd]
  41aaf3:	fcomp  QWORD PTR [edi-0x406d34f9]
  41aaf9:	push   0xffffffcc
  41aafb:	nop
  41aafc:	mov    eax,0x9aaf4b69
  41ab01:	push   ebp
  41ab02:	out    0x2c,eax
  41ab04:	out    dx,eax
  41ab05:	cmp    eax,0x3ee6d20a
  41ab0a:	add    bh,bh
  41ab0c:	sbb    bp,WORD PTR [edi+0x34945db6]
  41ab13:	mov    esp,DWORD PTR [esi+0x577e2c5d]
  41ab19:	dec    ebx
  41ab1a:	pop    ss
  41ab1b:	rcr    dl,cl
  41ab1d:	jecxz  0x41ab8b
  41ab1f:	adc    ebp,edx
  41ab21:	push   esp
  41ab22:	xlat   BYTE PTR ds:[ebx]
  41ab23:	mov    edi,0xec162b5d
  41ab28:	xor    ebx,esi
  41ab2a:	xchg   esp,eax
  41ab2b:	in     eax,0xa4
  41ab2d:	mov    ebp,0xa20fd287
  41ab32:	ja     0x41ab96
  41ab34:	ficomp DWORD PTR [ecx+0x696e72a3]
  41ab3a:	sar    ebx,cl
  41ab3c:	inc    edx
  41ab3d:	cmp    esp,esp
  41ab3f:	mov    esi,0xd22414dd
  41ab44:	xor    al,0xa3
  41ab46:	or     eax,0x73528e33
  41ab4b:	ss pop esi
  41ab4d:	and    bl,BYTE PTR [edi-0x1b492233]
  41ab53:	iret   
  41ab54:	sbb    esi,DWORD PTR ds:0xeddfd36c
  41ab5a:	dec    esi
  41ab5b:	mov    edx,DWORD PTR [esi-0x5c]
  41ab5e:	cwde   
  41ab5f:	rol    BYTE PTR [ecx+0x2d],0x4c
  41ab63:	fs adc al,0x44
  41ab66:	loope  0x41ab56
  41ab68:	aas    
  41ab69:	out    0xbb,al
  41ab6b:	inc    esi
  41ab6c:	popa   
  41ab6d:	fcomp  st(0)
  41ab6f:	shl    BYTE PTR [eax-0x66],cl
  41ab72:	xchg   ebx,eax
  41ab73:	dec    esi
  41ab74:	repnz scas al,BYTE PTR es:[edi]
  41ab76:	mov    eax,0xc35f5d47
  41ab7b:	xchg   ebx,eax
  41ab7d:	push   edx
  41ab7e:	add    dl,BYTE PTR [ecx+ecx*2+0x46]
  41ab82:	shl    BYTE PTR ds:0xc91681bf,1
  41ab88:	idiv   BYTE PTR [edx]
  41ab8a:	aas    
  41ab8b:	das    
  41ab8c:	push   es
  41ab8d:	cmc    
  41ab8e:	cwde   
  41ab8f:	shl    BYTE PTR [ecx+0x70],cl
  41ab92:	mov    dh,0xa6
  41ab94:	sbb    ch,al
  41ab96:	mov    eax,ds:0x7216bed2
  41ab9b:	mov    dl,0xb0
  41ab9d:	dec    edi
  41ab9e:	add    al,0x29
  41aba0:	pop    ebp
  41aba1:	out    dx,eax
  41aba2:	test   eax,0xed902900
  41aba7:	icebp  
  41aba8:	or     dh,BYTE PTR [edx+0x52]
  41abab:	outs   dx,DWORD PTR ds:[esi]
  41abac:	cdq    
  41abad:	popa   
  41abae:	dec    ebx
  41abaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abb0:	xchg   ebx,eax
  41abb1:	inc    edi
  41abb2:	sbb    eax,0x47bbd9c6
  41abb7:	in     al,0x56
  41abb9:	inc    esp
  41abba:	dec    ebx
  41abbb:	inc    ecx
  41abbd:	xor    edx,DWORD PTR [edi+0x7ea09c55]
  41abc3:	push   ecx
  41abc4:	(bad)  
  41abc5:	pop    ecx
  41abc6:	xor    BYTE PTR [edx+0x14],0x9
  41abca:	and    ebx,DWORD PTR [esp+edi*8]
  41abcd:	mov    WORD PTR [ebx-0x3b],ds
  41abd0:	push   esi
  41abd1:	ins    BYTE PTR es:[edi],dx
  41abd2:	ficom  WORD PTR [edx]
  41abd4:	sbb    DWORD PTR [ebp+0x236af39a],0x802dd2a4
  41abde:	push   eax
  41abdf:	dec    edx
  41abe0:	lock mov ch,BYTE PTR [edx+0x4c]
  41abe4:	pop    ebp
  41abe5:	sbb    BYTE PTR ds:0xc197ab69,ch
  41abeb:	jmp    0x41abf9
  41abed:	pop    edi
  41abee:	call   0x9a2:0xe37eccee
  41abf5:	cmp    al,0xf7
  41abf7:	scas   eax,DWORD PTR es:[edi]
  41abf8:	pop    ebp
  41abf9:	out    dx,eax
  41abfa:	(bad)
  41abfd:	es out 0xe3,al
  41ac00:	mov    bl,0x59
  41ac02:	mov    edx,0x3e3e755b
  41ac07:	fistp  QWORD PTR [ecx]
  41ac09:	push   ebx
  41ac0a:	push   esi
  41ac0b:	or     bh,BYTE PTR [ebx+0x70]
  41ac0e:	cmp    DWORD PTR [ebx],0xd44ea63a
  41ac14:	jl     0x41ac77
  41ac16:	dec    eax
  41ac17:	loopne 0x41ac36
  41ac19:	inc    eax
  41ac1a:	mov    ch,0x8e
  41ac1c:	and    esi,esp
  41ac1e:	or     ch,0x3f
  41ac21:	lea    esi,ds:0xeb44cf27
  41ac27:	jp     0x41ac5e
  41ac29:	inc    edi
  41ac2a:	inc    ecx
  41ac2b:	bound  ecx,QWORD PTR [ebp+0x280dcb3d]
  41ac31:	hlt    
  41ac32:	adc    eax,0x4c595534
  41ac37:	shr    DWORD PTR [edi+0x32],cl
  41ac3a:	sub    DWORD PTR [ecx+0x13],edx
  41ac3d:	rcl    DWORD PTR [ebx-0x9],0x78
  41ac41:	jbe    0x41ac8b
  41ac43:	push   ebx
  41ac44:	stc    
  41ac45:	(bad)  
  41ac46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac47:	ins    BYTE PTR es:[edi],dx
  41ac48:	mov    ebp,0x4bfb0a2d
  41ac4d:	out    0x4a,al
  41ac4f:	push   eax
  41ac50:	out    0x49,al
  41ac52:	push   eax
  41ac53:	add    BYTE PTR [esi+0xa],0x4b
  41ac57:	aam    0xc9
  41ac59:	xor    BYTE PTR [edi-0x25f06d1a],0xd2
  41ac60:	sahf   
  41ac61:	or     ebp,ecx
  41ac63:	and    BYTE PTR [ebx-0x59],dh
  41ac66:	jnp    0x41ace1
  41ac68:	pop    ebp
  41ac69:	daa    
  41ac6a:	cwde   
  41ac6b:	push   DWORD PTR [eax+0xe31bd89]
  41ac71:	pop    ecx
  41ac72:	fiadd  DWORD PTR [edx+0x7a]
  41ac75:	dec    ebp
  41ac76:	lock lods eax,DWORD PTR ds:[esi]
  41ac78:	push   edx
  41ac79:	into   
  41ac7a:	ret    0x47d4
  41ac7d:	and    eax,0x88bb954b
  41ac82:	sub    DWORD PTR [ecx-0x57],esp
  41ac85:	or     BYTE PTR [ecx],ah
  41ac87:	inc    ebx
  41ac88:	push   es
  41ac89:	inc    esi
  41ac8a:	xlat   BYTE PTR ds:[ebx]
  41ac8b:	push   es
  41ac8c:	xchg   ecx,eax
  41ac8d:	cdq    
  41ac8e:	mov    cl,0x74
  41ac90:	adc    bl,ch
  41ac92:	sub    eax,0xe8464ddc
  41ac97:	pop    ds
  41ac98:	jnp    0x41acb3
  41ac9a:	cli    
  41ac9b:	sub    DWORD PTR [ecx+0x3cd3a4e9],esp
  41aca1:	xchg   edx,eax
  41aca2:	mov    dh,0xcd
  41aca4:	inc    ebp
  41aca5:	push   ebp
  41aca6:	jbe    0x41ac4b
  41aca8:	mov    ds:0xdfa2485b,eax
  41acad:	call   FWORD PTR [ebx+0x19]
  41acb0:	fst    st(0)
  41acb2:	ds mov ecx,0xdde27f90
  41acb8:	into   
  41acb9:	pop    ecx
  41acba:	xchg   esi,eax
  41acbb:	mov    eax,ds:0xe0b8fbce
  41acc0:	pop    ebp
  41acc1:	xchg   ecx,eax
  41acc2:	push   0xffffffe2
  41acc4:	dec    edx
  41acc5:	add    esp,DWORD PTR [ebx]
  41acc7:	xchg   esi,eax
  41acc8:	ins    BYTE PTR es:[edi],dx
  41acc9:	or     DWORD PTR [edx-0x29],esp
  41accc:	(bad)  
  41accd:	(bad)  
  41acce:	hlt    
  41accf:	dec    esp
  41acd0:	js     0x41acab
  41acd2:	ss jo  0x41acc5
  41acd5:	imul   ecx,DWORD PTR [ebx+0x57],0x5c
  41acd9:	push   es
  41acda:	aaa    
  41acdb:	dec    ebx
  41acdc:	outs   dx,DWORD PTR ds:[esi]
  41acdd:	lds    edi,FWORD PTR [edx+edx*8]
  41ace0:	fimul  WORD PTR [edx-0x75]
  41ace3:	lahf   
  41ace4:	dec    ebx
  41ace5:	retf   
  41ace6:	or     eax,0x79385921
  41aceb:	sub    ebx,DWORD PTR [ebp+0x3b5adbc]
  41acf1:	fs test al,0xd2
  41acf4:	or     dh,BYTE PTR [eax-0x75]
  41acf7:	fucomi st,st(5)
  41acf9:	and    eax,0xbb5dd899
  41acfe:	sbb    eax,0xdabdf2b4
  41ad03:	hlt    
  41ad04:	sbb    BYTE PTR [eax+0x31a9a95a],dh
  41ad0a:	pop    edi
  41ad0b:	jnp    0x41acdb
  41ad0d:	pop    ecx
  41ad0e:	das    
  41ad0f:	std    
  41ad10:	mov    esi,0x96aedbea
  41ad15:	ret    0xe955
  41ad18:	test   BYTE PTR ds:0xb6cd6a5a,dh
  41ad1e:	cli    
  41ad1f:	mov    bl,0x28
  41ad21:	ja     0x41acb4
  41ad23:	shr    dh,cl
  41ad25:	cmp    ah,BYTE PTR [edi+edi*8-0x6c]
  41ad29:	mov    bh,0xff
  41ad2b:	retf   0xae5
  41ad2e:	dec    edi
  41ad2f:	out    dx,al
  41ad30:	push   eax
  41ad31:	xor    al,al
  41ad33:	mov    cl,0x1d
  41ad35:	sbb    BYTE PTR [edx-0x1e],0x85
  41ad39:	pop    ecx
  41ad3a:	xor    DWORD PTR [edx],ebp
  41ad3c:	xchg   ecx,eax
  41ad3d:	icebp  
  41ad3e:	mov    esp,0xdea915f9
  41ad43:	mov    eax,ds:0x9482805c
  41ad48:	inc    BYTE PTR [ecx]
  41ad4a:	or     DWORD PTR [eax],esi
  41ad4c:	and    eax,0xecfca9f4
  41ad51:	popa   
  41ad52:	retf   
  41ad53:	inc    ebp
  41ad54:	cmp    al,0x1f
  41ad56:	clc    
  41ad57:	dec    edx
  41ad58:	icebp  
  41ad59:	ret    0xf54a
  41ad5c:	lahf   
  41ad5d:	xor    al,0x83
  41ad5f:	sub    DWORD PTR [edi],ecx
  41ad61:	pop    ebp
  41ad62:	aaa    
  41ad63:	aad    0x7a
  41ad65:	mov    bl,0xce
  41ad67:	sbb    ecx,esp
  41ad69:	mov    ebx,esp
  41ad6b:	adc    bh,cl
  41ad6d:	mov    ecx,DWORD PTR [ebx+0x13]
  41ad70:	int3   
  41ad71:	jmp    0xd25c:0xa45528a0
  41ad78:	push   ecx
  41ad79:	adc    bh,BYTE PTR [eax+0x25]
  41ad7c:	lea    esp,[edx-0x72]
  41ad7f:	push   ecx
  41ad80:	dec    ecx
  41ad81:	xchg   ebp,eax
  41ad82:	adc    bh,BYTE PTR [ebp+0x21]
  41ad85:	push   esp
  41ad86:	and    DWORD PTR [eax-0x1568712e],esi
  41ad8c:	lahf   
  41ad8d:	stc    
  41ad8e:	xlat   BYTE PTR ds:[ebx]
  41ad8f:	and    BYTE PTR [eax+0x59],ch
  41ad92:	out    0x18,eax
  41ad94:	repz pop ebp
  41ad96:	outs   dx,DWORD PTR ds:[esi]
  41ad97:	pop    ds
  41ad98:	jg     0x41ad1a
  41ad9a:	dec    ecx
  41ad9b:	jg     0x41ad88
  41ad9d:	loope  0x41ae07
  41ad9f:	loop   0x41ad4e
  41ada1:	add    BYTE PTR [eax+0x22],ah
  41ada4:	outs   dx,DWORD PTR ds:[esi]
  41ada5:	push   esi
  41ada6:	nop
  41ada7:	fisub  DWORD PTR [esi+0x19]
  41adaa:	or     DWORD PTR [ebx+0x551669c4],edi
  41adb0:	imul   ebx,DWORD PTR [eax+0x79096b9],0xda56ccbf
  41adba:	pop    esp
  41adbb:	ins    BYTE PTR es:[edi],dx
  41adbc:	mov    ebp,0x2177984c
  41adc1:	pop    ss
  41adc2:	dec    ebx
  41adc3:	std    
  41adc4:	mov    edi,0x50010b3f
  41adc9:	rcr    DWORD PTR [esp+ecx*8-0x79d88d35],0x56
  41add1:	pop    es
  41add2:	pushf  
  41add3:	xor    dl,dl
  41add5:	xor    DWORD PTR [edx-0x4ab3a2fd],ecx
  41addb:	xor    BYTE PTR [ebx-0x5ce422a3],0x47
  41ade2:	dec    ecx
  41ade3:	sbb    dl,BYTE PTR [edx-0x752654ad]
  41ade9:	gs stos BYTE PTR es:[edi],al
  41adeb:	xor    edi,DWORD PTR [edx+0x5dd7e5de]
  41adf1:	jns    0x41ae6d
  41adf3:	add    eax,0x6064f495
  41adf8:	xchg   edx,eax
  41adf9:	pop    ecx
  41adfa:	or     eax,0xa52944f4
  41adff:	addr16 mov al,0x51
  41ae02:	dec    ebx
  41ae03:	push   cs
  41ae04:	mov    esp,0x375bfeb9
  41ae09:	push   ebp
  41ae0a:	dec    eax
  41ae0b:	rcl    BYTE PTR [edi+0x30],cl
  41ae0e:	cdq    
  41ae0f:	int    0x1a
  41ae11:	sbb    al,cl
  41ae13:	push   ebp
  41ae14:	jg     0x41adc7
  41ae16:	dec    ebp
  41ae17:	push   ecx
  41ae18:	adc    ebp,esp
  41ae1a:	mov    dl,0x52
  41ae1c:	das    
  41ae1d:	into   
  41ae1e:	mov    esi,0x945a5541
  41ae23:	mov    eax,0x7d8e535e
  41ae28:	xor    eax,0x5d23110b
  41ae2d:	in     al,0x5d
  41ae2f:	fist   WORD PTR [esi+0x73]
  41ae32:	test   ebx,0x8c8857f9
  41ae38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae39:	ja     0x41ae7b
  41ae3b:	or     esp,DWORD PTR [eax]
  41ae3d:	fndisi(8087 only) 
  41ae3f:	arpl   WORD PTR [eax-0x30],si
  41ae42:	stos   BYTE PTR es:[edi],al
  41ae43:	jns    0x41ae15
  41ae45:	scas   al,BYTE PTR es:[edi]
  41ae46:	push   ebp
  41ae47:	dec    eax
  41ae48:	pop    esi
  41ae49:	mov    ecx,0xf946ec2c
  41ae4e:	je     0x41ae48
  41ae50:	xchg   edx,eax
  41ae51:	inc    edi
  41ae52:	icebp  
  41ae53:	gs inc ecx
  41ae55:	cwde   
  41ae56:	sub    bl,BYTE PTR [eax+0x55]
  41ae59:	sbb    al,0x37
  41ae5b:	ds mov esi,0xf9574fad
  41ae61:	out    0xa2,al
  41ae63:	mov    ds:0x3138af1d,eax
  41ae68:	pop    ss
  41ae69:	inc    esi
  41ae6a:	or     al,BYTE PTR [edx]
  41ae6c:	xor    edx,DWORD PTR gs:[edx]
  41ae6f:	xor    BYTE PTR [esi-0x3b23b535],bl
  41ae75:	shl    edx,cl
  41ae77:	pop    esi
  41ae78:	xchg   ecx,eax
  41ae79:	mul    DWORD PTR [ecx-0xe45f92e]
  41ae7f:	pop    ecx
  41ae80:	push   esp
  41ae81:	into   
  41ae82:	les    ebp,FWORD PTR [ebx]
  41ae84:	fs jns 0x41ae0a
  41ae87:	fnsave [ebx+0x44]
  41ae8a:	push   ds
  41ae8b:	imul   esi,ecx,0x59
  41ae8e:	pushaw 
  41ae90:	jns    0x41aec8
  41ae92:	shr    BYTE PTR cs:[edi-0x3c14c53c],cl
  41ae99:	mov    eax,0xde51fdfc
  41ae9e:	sbb    al,0x27
  41aea0:	mov    esi,DWORD PTR [edi]
  41aea2:	xchg   esp,eax
  41aea3:	test   BYTE PTR [ebx],0x42
  41aea6:	ja     0x41ae55
  41aea8:	arpl   WORD PTR [esi+0x5a],bx
  41aeab:	xchg   ebp,eax
  41aeac:	fisubr WORD PTR [esi-0x55]
  41aeaf:	mov    dl,0xc8
  41aeb1:	pop    esi
  41aeb2:	pop    ds
  41aeb3:	or     bl,BYTE PTR [edi+eiz*8+0x5e]
  41aeb7:	push   ebx
  41aeb8:	xor    edx,edx
  41aeba:	ror    ch,cl
  41aebc:	dec    esi
  41aebd:	(bad)  
  41aebe:	mov    dl,BYTE PTR [edx]
  41aec0:	fwait
  41aec1:	pop    ecx
  41aec2:	and    al,0x11
  41aec4:	push   esi
  41aec5:	mov    ss,WORD PTR [edx+eax*8+0x24b57fb]
  41aecc:	rcl    BYTE PTR [edi],cl
  41aece:	pusha  
  41aecf:	out    dx,al
  41aed0:	aaa    
  41aed1:	pop    esi
  41aed2:	mov    esi,0xbc822ad3
  41aed7:	leave  
  41aed8:	int    0x15
  41aeda:	inc    ebp
  41aedb:	xchg   edx,eax
  41aedc:	xor    BYTE PTR [esp+eiz*8+0x14125d90],al
  41aee3:	(bad)  
  41aee4:	xchg   esi,eax
  41aee5:	mov    ebp,0x46229a96
  41aeea:	add    eax,0xe90d01f
  41aeef:	fnstcw WORD PTR [edx]
  41aef1:	aas    
  41aef2:	daa    
  41aef3:	inc    edx
  41aef4:	jbe    0x41af4f
  41aef6:	mov    ds:0xa61960e3,eax
  41aefb:	mov    ah,BYTE PTR [edi-0x77]
  41aefe:	pusha  
  41aeff:	ja     0x41af0a
  41af01:	mov    eax,ds:0xd956d0de
  41af06:	lods   eax,DWORD PTR ds:[esi]
  41af07:	xchg   esp,eax
  41af08:	push   ebp
  41af09:	pop    esi
  41af0a:	mov    ebx,DWORD PTR [eax]
  41af0c:	mov    edx,0xced2fe31
  41af11:	push   edi
  41af12:	dec    ebp
  41af13:	sbb    al,0xbf
  41af15:	(bad)  
  41af16:	sahf   
  41af17:	and    BYTE PTR [ebp-0x8],bl
  41af1a:	out    0x9d,al
  41af1c:	mov    al,0x15
  41af1e:	jge    0x41af77
  41af20:	and    eax,0x5261087e
  41af25:	pusha  
  41af26:	sahf   
  41af27:	xchg   DWORD PTR [edx+0x42ab7b80],edi
  41af2d:	lods   al,BYTE PTR ds:[esi]
  41af2e:	test   edx,eax
  41af30:	adc    esp,eax
  41af32:	and    BYTE PTR [edi+0x34],dl
  41af35:	adc    bh,BYTE PTR [edx+edx*8-0x6122de1c]
  41af3c:	sti    
  41af3d:	cld    
  41af3e:	or     dl,bh
  41af40:	stc    
  41af41:	popf   
  41af42:	dec    edx
  41af43:	push   esp
  41af44:	bound  eax,QWORD PTR [ebx+0x57]
  41af47:	dec    esp
  41af48:	dec    ecx
  41af49:	jae    0x41af96
  41af4b:	inc    edi
  41af4c:	inc    ebx
  41af4d:	(bad)  
  41af4e:	mov    ecx,0x2bd18da1
  41af53:	rol    BYTE PTR [edx-0x644bd8ab],cl
  41af59:	loopne 0x41af96
  41af5b:	loope  0x41afb9
  41af5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af5e:	(bad)  
  41af5f:	mov    ds,WORD PTR [eax+ebx*4-0x12]
  41af63:	mov    esp,0xd1fad36d
  41af68:	cmc    
  41af69:	or     esi,DWORD PTR [ecx+0x47]
  41af6c:	xchg   esp,eax
  41af6d:	or     al,0xa3
  41af6f:	outs   dx,DWORD PTR ds:[esi]
  41af70:	cmp    al,0x7
  41af72:	dec    ebx
  41af73:	add    dl,dl
  41af75:	out    dx,al
  41af76:	nop
  41af77:	lahf   
  41af78:	gs pop ebx
  41af7a:	in     eax,0xd2
  41af7c:	pop    ebx
  41af7d:	dec    edi
  41af7e:	add    eax,0x9bcd8495
  41af83:	sar    BYTE PTR [ecx],0x31
  41af86:	dec    ebx
  41af87:	xor    edi,ebx
  41af89:	loop   0x41af3c
  41af8b:	xor    al,0x38
  41af8d:	int3   
  41af8e:	or     BYTE PTR [edi],bh
  41af90:	repnz pop ecx
  41af92:	fwait
  41af93:	jmp    0x90b36d45
  41af98:	push   esi
  41af99:	xchg   DWORD PTR [ebp+0x7c],edx
  41af9c:	cmc    
  41af9d:	and    al,0xce
  41af9f:	sbb    eax,0x67a5d6e9
  41afa4:	xor    ecx,DWORD PTR [esi+0x5ad1a369]
  41afaa:	add    eax,0x7d70d0ed
  41afaf:	(bad)  
  41afb1:	or     al,0xa1
  41afb3:	push   ss
  41afb4:	pop    ebp
  41afb5:	das    
  41afb6:	inc    eax
  41afb7:	gs inc edx
  41afb9:	stos   DWORD PTR es:[edi],eax
  41afba:	aam    0xdc
  41afbc:	jecxz  0x41b00c
  41afbe:	out    dx,al
  41afbf:	rcl    BYTE PTR [esi-0x60164054],cl
  41afc5:	sahf   
  41afc6:	neg    dl
  41afc8:	pop    ebp
  41afc9:	cs or  eax,0x408eef01
  41afcf:	fisub  WORD PTR [ebp-0x7dbfdda7]
  41afd5:	cli    
  41afd6:	pushf  
  41afd7:	pop    edx
  41afd8:	inc    ecx
  41afd9:	xchg   BYTE PTR [eax+esi*1+0x5d],ah
  41afdd:	test   ch,bl
  41afdf:	mov    ebp,0xf8931f06
  41afe4:	iret   
  41afe5:	stc    
  41afe6:	lods   al,BYTE PTR ds:[esi]
  41afe7:	fld    DWORD PTR [ebx+0x59]
  41afea:	lods   eax,DWORD PTR ds:[esi]
  41afeb:	pop    ebx
  41afec:	nop
  41afed:	out    0x7b,al
  41afef:	sbb    eax,0xbb4a803d
  41aff4:	or     ebp,DWORD PTR [ebp-0x3b266969]
  41affa:	imul   edx,esp,0xe75f2cea
  41b000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b001:	repnz dec edx
  41b003:	xchg   ebp,eax
  41b004:	shr    DWORD PTR ds:[edx],0xf6
  41b008:	adc    al,0x34
  41b00a:	push   edx
  41b00b:	rol    DWORD PTR [eax],cl
  41b00d:	adc    dh,BYTE PTR [esi]
  41b00f:	add    al,0xcb
  41b011:	ret    
  41b012:	not    BYTE PTR [esi+0x1c4b3e96]
  41b018:	lea    esi,[ebx]
  41b01a:	in     eax,0xde
  41b01c:	xor    DWORD PTR [ecx+0x53],edi
  41b01f:	shr    edx,cl
  41b021:	jo     0x41b004
  41b023:	fist   WORD PTR [edi]
  41b025:	cli    
  41b026:	mov    cl,0x2
  41b028:	jo     0x41b042
  41b02a:	dec    ebx
  41b02b:	mov    al,0x50
  41b02d:	jns    0x41b08b
  41b02f:	icebp  
  41b030:	retf   0x98bc
  41b033:	shr    bh,cl
  41b035:	imul   esp,DWORD PTR [edx+0x7b862db1],0x923e5f6d
  41b03f:	loope  0x41b05f
  41b041:	dec    edi
  41b042:	dec    ebx
  41b043:	mov    dl,0xea
  41b045:	retf   0xbfd7
  41b048:	pop    eax
  41b049:	pop    ecx
  41b04a:	stos   DWORD PTR es:[edi],eax
  41b04b:	call   0x5655:0xd0c79bbd
  41b052:	dec    ebx
  41b053:	cmp    eax,0x670182e4
  41b058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b059:	inc    eax
  41b05a:	mov    esp,0xc09dfdd2
  41b05f:	fwait
  41b060:	enter  0xec29,0x8
  41b064:	outs   dx,DWORD PTR ds:[esi]
  41b065:	out    0x7c,eax
  41b067:	push   edx
  41b068:	dec    esp
  41b069:	cmp    DWORD PTR [edi],esi
  41b06b:	pop    es
  41b06c:	icebp  
  41b06d:	mov    esi,0xc7a8d397
  41b072:	inc    edx
  41b073:	pop    ds
  41b074:	fwait
  41b075:	adc    BYTE PTR [edi],ah
  41b077:	(bad)  
  41b078:	mov    BYTE PTR [edi],al
  41b07a:	fbld   TBYTE PTR [eax+0x5d]
  41b07d:	shl    BYTE PTR [edi+0x69],cl
  41b080:	jae    0x41b0a9
  41b082:	stos   DWORD PTR es:[edi],eax
  41b083:	add    DWORD PTR [ebx],esi
  41b085:	inc    esi
  41b086:	or     eax,0x7263cc94
  41b08b:	and    BYTE PTR [ebx],0xba
  41b08e:	dec    ecx
  41b08f:	in     al,0xd8
  41b091:	mov    esi,DWORD PTR [ecx-0x3d03cdc1]
  41b097:	lahf   
  41b098:	sbb    eax,0x2a0247f6
  41b09d:	inc    esi
  41b09e:	mov    edi,0x6769c6c5
  41b0a3:	sub    al,0x18
  41b0a5:	add    eax,0x6c529c9b
  41b0aa:	lds    edx,FWORD PTR [eax-0x749b520b]
  41b0b0:	jb     0x41b108
  41b0b2:	xor    al,0xd2
  41b0b4:	sub    DWORD PTR [esi],edi
  41b0b6:	or     DWORD PTR [ebx],0xffffffeb
  41b0b9:	and    BYTE PTR [ecx],ah
  41b0bb:	fwait
  41b0bc:	std    
  41b0bd:	stc    
  41b0be:	xchg   edi,eax
  41b0bf:	jae    0x41b04a
  41b0c1:	aad    0x24
  41b0c3:	sbb    DWORD PTR [ebp-0xc],0x9187592e
  41b0ca:	(bad)  
  41b0cb:	shl    BYTE PTR ds:0xbe6c98b6,cl
  41b0d1:	mov    ecx,ebp
  41b0d3:	jne    0x41b093
  41b0d5:	xor    cl,BYTE PTR [edx-0x29]
  41b0d8:	arpl   WORD PTR [ebp-0x43],cx
  41b0db:	sar    ebp,0xe9
  41b0de:	add    DWORD PTR [edi+0x44da4610],esp
  41b0e4:	retf   0x8896
  41b0e7:	pop    es
  41b0e8:	dec    esp
  41b0e9:	dec    esp
  41b0ea:	pop    esi
  41b0eb:	std    
  41b0ec:	aas    
  41b0ed:	pusha  
  41b0ee:	icebp  
  41b0ef:	dec    ebp
  41b0f0:	mov    bh,0xb9
  41b0f2:	push   eax
  41b0f3:	hlt    
  41b0f4:	sub    ebp,DWORD PTR [ebx-0x35]
  41b0f7:	ror    BYTE PTR [ecx-0x29],cl
  41b0fa:	in     al,0x73
  41b0fc:	cmp    al,0x4f
  41b0fe:	dec    esi
  41b0ff:	jg     0x41b17b
  41b101:	and    esi,DWORD PTR [ecx]
  41b103:	push   edx
  41b104:	int3   
  41b105:	lods   eax,DWORD PTR ds:[esi]
  41b106:	out    0x4f,eax
  41b108:	jl     0x41b09a
  41b10a:	icebp  
  41b10b:	shl    BYTE PTR [ecx-0x20bf4325],cl
  41b111:	mov    ecx,0x45da952
  41b116:	in     al,dx
  41b117:	add    eax,0xe0f853c1
  41b11c:	fcomp  QWORD PTR [ecx-0x48]
  41b11f:	dec    esp
  41b120:	sbb    DWORD PTR [eax+0x958cd42],0x4b
  41b127:	(bad)  
  41b128:	add    BYTE PTR [esi],dh
  41b12a:	inc    edx
  41b12b:	outs   dx,DWORD PTR ds:[esi]
  41b12c:	into   
  41b12d:	daa    
  41b12e:	mov    edx,edi
  41b130:	adc    eax,0xe1d8cad3
  41b135:	clc    
  41b136:	cmp    al,0xb8
  41b138:	inc    ecx
  41b139:	stc    
  41b13a:	pop    esp
  41b13b:	mov    ecx,0x70ec650f
  41b140:	pop    ebp
  41b141:	(bad)  
  41b142:	pop    esi
  41b143:	pop    ds
  41b144:	enter  0x1225,0xd2
  41b148:	jmp    0x991:0x4b513941
  41b14f:	cmp    BYTE PTR [ebp+0x6c],bl
  41b152:	push   ss
  41b153:	ja     0x41b182
  41b155:	call   0xc05d:0x59455b49
  41b15c:	int    0x61
  41b15e:	pusha  
  41b15f:	lea    edi,[ebp-0x3120b49a]
  41b165:	mov    ecx,0x17280485
  41b16a:	in     eax,dx
  41b16b:	(bad)  
  41b16c:	repnz push eax
  41b16e:	retf   
  41b16f:	or     al,0x30
  41b171:	lock ret 0x79c8
  41b175:	call   0xc99e13c4
  41b17a:	xchg   ecx,eax
  41b17b:	lods   al,BYTE PTR ds:[esi]
  41b17c:	pop    edx
  41b17d:	or     DWORD PTR [ebp+0x7dc26d2],0xe60572b1
  41b187:	mov    eax,0x52c7e964
  41b18c:	retf   
  41b18d:	hlt    
  41b18e:	and    al,0xe4
  41b190:	pop    eax
  41b191:	cdq    
  41b192:	out    0xd3,eax
  41b194:	fs ja  0x41b13e
  41b197:	inc    eax
  41b198:	mov    ah,BYTE PTR [ebx-0x44]
  41b19b:	ret    
  41b19c:	enter  0xa39,0x32
  41b1a0:	pop    ebp
  41b1a1:	pusha  
  41b1a2:	stos   DWORD PTR es:[edi],eax
  41b1a3:	pop    edi
  41b1a4:	mov    dh,0x9a
  41b1a6:	dec    ebx
  41b1a7:	int    0xa8
  41b1a9:	push   ebp
  41b1aa:	xchg   ecx,eax
  41b1ab:	outs   dx,DWORD PTR ds:[esi]
  41b1ac:	ins    DWORD PTR es:[edi],dx
  41b1ad:	cdq    
  41b1ae:	or     eax,esi
  41b1b0:	ror    BYTE PTR [edi+0x76],1
  41b1b3:	jg     0x41b1ea
  41b1b5:	adc    BYTE PTR [ebx-0x1a],cl
  41b1b8:	iret   
  41b1b9:	mov    ecx,0x4d93d0d0
  41b1be:	ja     0x41b1b9
  41b1c0:	leave  
  41b1c1:	pop    esi
  41b1c2:	dec    ebx
  41b1c3:	jo     0x41b1e8
  41b1c5:	pop    esp
  41b1c6:	or     DWORD PTR [edi+0x1d],0x3c774abf
  41b1cd:	jo     0x41b242
  41b1cf:	add    bh,BYTE PTR [esi-0x4a]
  41b1d2:	aaa    
  41b1d3:	shl    BYTE PTR [ebp+0x607ec35d],cl
  41b1d9:	sahf   
  41b1da:	mov    dl,0x5d
  41b1dc:	pop    ebp
  41b1dd:	or     bl,BYTE PTR [edi+0x51]
  41b1e0:	mov    dl,0x5b
  41b1e2:	jmp    0x21984f46
  41b1e7:	cwde   
  41b1e8:	pop    edi
  41b1e9:	sbb    DWORD PTR [edi+0x497a7e69],ebp
  41b1ef:	dec    ecx
  41b1f0:	and    eax,0xd23e2ce4
  41b1f5:	pop    esi
  41b1f6:	(bad)  
  41b1f7:	xor    BYTE PTR [ebp-0x4ede7549],al
  41b1fd:	outs   dx,DWORD PTR ds:[esi]
  41b1fe:	add    ah,bl
  41b200:	aam    0x62
  41b202:	fist   WORD PTR [ebp-0x7f]
  41b205:	hlt    
  41b206:	imul   edi,DWORD PTR [ebp+0x45bb0d3d],0xe44ab45e
  41b210:	ror    DWORD PTR [edx],cl
  41b212:	sub    bh,BYTE PTR [ebp+0x2f]
  41b215:	xor    al,0x8b
  41b217:	int    0x53
  41b219:	cli    
  41b21a:	xchg   ebp,eax
  41b21b:	or     al,0x1d
  41b21d:	cld    
  41b21e:	xchg   ebx,eax
  41b21f:	arpl   cx,di
  41b221:	imul   ecx,DWORD PTR [ebx-0x38],0x9d6712a6
  41b228:	mov    al,0x67
  41b22a:	call   edx
  41b22c:	fidivr DWORD PTR ds:0xc8157dd5
  41b232:	mov    es,ebp
  41b234:	pop    ebp
  41b235:	sub    ah,BYTE PTR [edi-0x7efcdd70]
  41b23b:	inc    ecx
  41b23c:	imul   ebx,DWORD PTR [ecx-0x78],0xffffffad
  41b240:	ins    BYTE PTR es:[edi],dx
  41b241:	gs fs repnz mov edx,0x43a84b5f
  41b249:	mov    bh,0x6b
  41b24b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b24c:	xchg   ebx,eax
  41b24d:	(bad)  
  41b24e:	mov    esp,0xa1bed2d1
  41b253:	jmp    0x8d5a:0xa6c328eb
  41b25a:	dec    ebx
  41b25b:	dec    ebp
  41b25c:	xor    ebx,edx
  41b25e:	xor    ecx,DWORD PTR [esi]
  41b260:	mov    eax,ds:0xa6dd1967
  41b265:	mov    bl,0xc5
  41b267:	push   edx
  41b268:	aaa    
  41b269:	lods   al,BYTE PTR ds:[esi]
  41b26a:	sub    BYTE PTR [esi+esi*4-0x25],al
  41b26e:	jmp    0xc57f:0x81cf6f57
  41b275:	pop    ecx
  41b276:	xor    BYTE PTR [eax+0x2420370e],ah
  41b27c:	xor    al,0x64
  41b27e:	inc    edx
  41b27f:	outs   dx,DWORD PTR ds:[esi]
  41b280:	test   al,0x9b
  41b282:	dec    edx
  41b283:	sub    cl,bh
  41b285:	imul   BYTE PTR [eax-0x23]
  41b288:	push   ebx
  41b289:	jo     0x41b22e
  41b28b:	mov    esi,0xd292f00f
  41b290:	das    
  41b291:	popf   
  41b292:	pushf  
  41b293:	enter  0x949c,0x46
  41b297:	mov    dh,0x32
  41b299:	addr16 dec ebx
  41b29b:	ins    DWORD PTR es:[edi],dx
  41b29c:	dec    edx
  41b29d:	jns    0x41b26d
  41b29f:	out    dx,eax
  41b2a0:	aam    0x59
  41b2a2:	jp     0x41b2cf
  41b2a4:	mov    ebp,0x624dd530
  41b2a9:	fisttp QWORD PTR [edx+0x51]
  41b2ac:	mov    bh,0x97
  41b2ae:	dec    esp
  41b2af:	pusha  
  41b2b0:	jns    0x41b321
  41b2b2:	and    dl,dl
  41b2b4:	aam    0xdc
  41b2b6:	xor    ecx,ecx
  41b2b8:	lods   al,BYTE PTR ds:[esi]
  41b2b9:	mov    ds:0x8e79b7bd,al
  41b2be:	jo     0x41b293
  41b2c0:	sub    esi,0x7e
  41b2c3:	aaa    
  41b2c4:	scas   eax,DWORD PTR es:[edi]
  41b2c5:	mov    dh,0x84
  41b2c7:	int3   
  41b2c8:	repnz add cl,BYTE PTR [edx-0x1a]
  41b2cc:	std    
  41b2cd:	jns    0x41b2c8
  41b2cf:	xchg   esi,eax
  41b2d0:	inc    ebx
  41b2d1:	clc    
  41b2d2:	dec    ecx
  41b2d3:	pop    ebp
  41b2d4:	cwde   
  41b2d5:	xlat   BYTE PTR ds:[ebx]
  41b2d6:	mov    ds:0xb3d0524b,eax
  41b2db:	mov    ds:0xa985dcd,al
  41b2e0:	mov    al,0x1d
  41b2e2:	out    0xdc,al
  41b2e4:	std    
  41b2e5:	or     eax,0x2752920b
  41b2ea:	jns    0x41b2ce
  41b2ec:	lea    eax,[ebp-0x4091bbb6]
  41b2f2:	cld    
  41b2f3:	mov    eax,0xd2d0a08b
  41b2f8:	fiadd  WORD PTR ds:0x1bd84d19
  41b2fe:	xchg   edx,eax
  41b2ff:	push   ecx
  41b300:	push   ebx
  41b301:	popf   
  41b302:	out    0x17,eax
  41b304:	not    DWORD PTR [ecx+eax*2+0x52]
  41b308:	sar    BYTE PTR [ecx+0x32486117],1
  41b30e:	jmp    0x965f65e6
  41b313:	cli    
  41b314:	dec    edx
  41b315:	push   0x580c68a
  41b31a:	dec    ebx
  41b31b:	push   eax
  41b31c:	js     0x41b393
  41b31e:	in     eax,0x71
  41b320:	nop
  41b321:	addr16 sahf 
  41b323:	rcl    BYTE PTR ds:0x3846196c,cl
  41b329:	out    0xbe,eax
  41b32b:	ret    
  41b32c:	pop    ebp
  41b32d:	ss xchg ch,dh
  41b330:	jae    0x41b305
  41b332:	xchg   ebp,eax
  41b333:	and    al,0x31
  41b335:	pop    eax
  41b336:	xchg   esp,eax
  41b337:	jo     0x41b305
  41b339:	xchg   ebp,eax
  41b33a:	add    eax,0x83109dbb
  41b33f:	xor    DWORD PTR [esi+ebx*1+0x3b],ebx
  41b343:	xchg   al,bl
  41b345:	ret    0x7f16
  41b348:	xor    eax,0xe7d2e527
  41b34d:	add    dl,BYTE PTR [ebx+0x76]
  41b350:	fwait
  41b351:	jmp    0x41b2f8
  41b353:	cdq    
  41b354:	js     0x41b34f
  41b356:	das    
  41b357:	rol    BYTE PTR [edi-0x4d508b51],cl
  41b35d:	mov    DWORD PTR [ebp-0x34d8762e],edi
  41b363:	fild   WORD PTR [eax+0x62ef20b4]
  41b369:	and    eax,0xfa6c2088
  41b36e:	dec    ebx
  41b36f:	xchg   edx,eax
  41b370:	or     al,0xdb
  41b372:	(bad)  
  41b373:	clc    
  41b374:	xlat   BYTE PTR ds:[ebx]
  41b375:	ror    dl,cl
  41b377:	mov    bl,0x82
  41b379:	dec    ebp
  41b37a:	es ret 
  41b37c:	mov    esp,0x82a5242
  41b381:	dec    esi
  41b382:	push   cs
  41b383:	or     eax,0xe61b9a0
  41b388:	push   ss
  41b389:	popf   
  41b38a:	xlat   BYTE PTR ds:[ebx]
  41b38b:	fadd   st(0),st
  41b38d:	test   ah,cl
  41b38f:	adc    bh,BYTE PTR [eax+0x12c5d71b]
  41b395:	scas   eax,DWORD PTR es:[edi]
  41b396:	dec    edx
  41b397:	leave  
  41b398:	mov    esi,DWORD PTR [edi-0x57]
  41b39b:	jle    0x41b3d3
  41b39d:	pop    ecx
  41b39e:	(bad)  
  41b39f:	aad    0x4a
  41b3a1:	jg     0x41b3ad
  41b3a3:	pop    ss
  41b3a4:	add    DWORD PTR [edx+ebp*2+0x21ab8162],eax
  41b3ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3ac:	pop    ebp
  41b3ad:	xor    edi,0xffffffe0
  41b3b0:	addr16 mov edi,0x5e86ad60
  41b3b6:	ret    
  41b3b7:	sahf   
  41b3b8:	add    ch,al
  41b3ba:	sub    al,0xd3
  41b3bc:	ret    
  41b3bd:	mov    al,dl
  41b3bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3c0:	std    
  41b3c1:	pop    edx
  41b3c2:	scas   al,BYTE PTR es:[edi]
  41b3c3:	dec    ebp
  41b3c4:	push   eax
  41b3c5:	push   edx
  41b3c6:	mov    ebp,0xd5dac09f
  41b3cb:	loopne 0x41b446
  41b3cd:	fsub   DWORD PTR [esp+eax*2-0x2e3e4dfb]
  41b3d4:	leave  
  41b3d5:	in     eax,0xc7
  41b3d7:	out    dx,al
  41b3d8:	lock arpl bx,cx
  41b3db:	mov    ebp,0x274ad2d5
  41b3e0:	xchg   ecx,eax
  41b3e1:	adc    eax,DWORD PTR ds:0xae764762
  41b3e7:	shl    DWORD PTR [eax+0x7c02d4fe],cl
  41b3ed:	push   eax
  41b3ee:	shl    dl,cl
  41b3f0:	xchg   edi,eax
  41b3f1:	adc    al,0x4b
  41b3f3:	in     eax,0x2e
  41b3f5:	mov    WORD PTR [eax-0x5b],es
  41b3f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3f9:	cmp    DWORD PTR [ebx-0x49c97e33],esi
  41b3ff:	pushf  
  41b400:	repnz sar DWORD PTR [eax],cl
  41b403:	sbb    eax,0xc26a1d3d
  41b408:	pop    ebp
  41b409:	adc    eax,0xa3a31889
  41b40e:	stos   DWORD PTR es:[edi],eax
  41b40f:	push   ebx
  41b410:	cmp    eax,DWORD PTR [esi-0x74]
  41b413:	xor    bl,bl
  41b415:	inc    ebx
  41b416:	mov    ecx,0x4ba5929f
  41b41b:	or     BYTE PTR [edi],dh
  41b41d:	test   ecx,0x6aa6ff9a
  41b423:	and    BYTE PTR [esi-0xf],0x85
  41b427:	shl    BYTE PTR [eax-0x35b176b8],cl
  41b42d:	push   edi
  41b42e:	sub    al,0x77
  41b430:	push   edx
  41b431:	push   DWORD PTR [edi+0x53]
  41b434:	and    al,0xc0
  41b436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b437:	push   edi
  41b438:	sbb    eax,0x14254016
  41b43d:	pop    eax
  41b43e:	inc    edx
  41b43f:	inc    esp
  41b440:	jle    0x41b481
  41b442:	out    0xe2,al
  41b444:	cmp    eax,0xa60889eb
  41b449:	mov    ch,0x46
  41b44b:	out    0xfc,eax
  41b44d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b44e:	dec    ecx
  41b44f:	mov    ah,0x95
  41b451:	dec    edi
  41b452:	mov    ecx,edi
  41b454:	pop    ss
  41b455:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b456:	(bad)  
  41b458:	pop    es
  41b459:	packuswb mm7,QWORD PTR [esi+0x368cd99f]
  41b460:	(bad)  
  41b461:	call   0xe54e:0xae0bc74a
  41b468:	(bad)  
  41b46a:	mov    cl,0x32
  41b46c:	pop    ss
  41b46d:	dec    edx
  41b46e:	sti    
  41b46f:	xor    eax,0x704b3382
  41b474:	fld    QWORD PTR [eax]
  41b476:	or     dl,ch
  41b478:	ret    
  41b479:	loopne 0x41b4fa
  41b47b:	sar    DWORD PTR [esp+ebx*4-0x65],cl
  41b47f:	into   
  41b480:	(bad)  
  41b481:	loope  0x41b495
  41b483:	test   DWORD PTR [ebx+0x2f],edx
  41b486:	inc    ecx
  41b487:	div    DWORD PTR [edi-0x1b]
  41b48a:	sub    al,0x92
  41b48c:	dec    esp
  41b48d:	(bad)  
  41b48e:	jne    0x41b463
  41b490:	pop    edx
  41b491:	adc    BYTE PTR [eax-0x75],al
  41b494:	enter  0x6d4f,0xc4
  41b498:	lds    edx,FWORD PTR [eax+0x2d79924a]
  41b49e:	jmp    0xc3d2:0x1d0d2f45
  41b4a5:	mov    ecx,?
  41b4a7:	xchg   ecx,eax
  41b4a8:	xlat   BYTE PTR ds:[ebx]
  41b4a9:	mov    dl,0xd0
  41b4ab:	and    bl,BYTE PTR [ebp+0x73]
  41b4ae:	in     eax,0x51
  41b4b0:	inc    edi
  41b4b1:	sbb    DWORD PTR [edi],eax
  41b4b3:	sub    DWORD PTR ds:0x1dd2aba6,ebp
  41b4b9:	mov    eax,ds:0x8a36ee44
  41b4be:	mov    ds:0x7ec15d2a,eax
  41b4c3:	sub    ch,BYTE PTR [ecx-0x437d2bea]
  41b4c9:	push   esi
  41b4ca:	mov    edx,0xab5db18e
  41b4cf:	shr    DWORD PTR [esi],1
  41b4d1:	(bad)  
  41b4d2:	test   al,0x70
  41b4d4:	stos   BYTE PTR es:[edi],al
  41b4d5:	aaa    
  41b4d6:	dec    ebx
  41b4d7:	imul   edi,DWORD PTR [ecx],0xffffff99
  41b4da:	cmp    al,0x56
  41b4dc:	sbb    DWORD PTR [ebp+0x450ed29d],esi
  41b4e2:	add    esp,DWORD PTR [eax+0x43f6e778]
  41b4e8:	jle    0x41b506
  41b4ea:	dec    edi
  41b4eb:	shl    DWORD PTR [edi+0x22],cl
  41b4ee:	sar    DWORD PTR [eax+0x60],1
  41b4f1:	cmp    eax,DWORD PTR [edi+0x2c461e77]
  41b4f7:	mov    al,ds:0x6f62df59
  41b4fc:	mov    edx,0x2d824a80
  41b501:	in     al,0x1f
  41b503:	add    DWORD PTR [ebx+0x2ad29f07],ecx
  41b509:	popf   
  41b50a:	mov    WORD PTR [ebp*4+0x5d452ab6],ds
  41b511:	sub    BYTE PTR [esi],al
  41b513:	mov    al,ds:0x47ffa534
  41b518:	jno    0x41b573
  41b51a:	mov    ebp,0x6bbdf2de
  41b51f:	pop    esi
  41b520:	jge    0x41b500
  41b522:	dec    edx
  41b523:	cwde   
  41b524:	mov    ebp,0xe328a5a2
  41b529:	cdq    
  41b52a:	push   ds
  41b52b:	sti    
  41b52c:	js     0x41b56a
  41b52e:	dec    ebx
  41b52f:	pop    edi
  41b530:	jmp    0xed284f4e
  41b535:	add    BYTE PTR [eax-0x4],al
  41b538:	retf   0x9129
  41b53b:	jge    0x41b4fa
  41b53d:	jns    0x41b5a2
  41b53f:	adc    BYTE PTR [edi],bh
  41b541:	dec    edx
  41b542:	and    al,0xcd
  41b544:	popf   
  41b545:	xchg   edx,eax
  41b546:	dec    ebp
  41b547:	arpl   WORD PTR [esi],dx
  41b549:	sahf   
  41b54a:	ret    0x7342
  41b54d:	rcr    BYTE PTR [esi],cl
  41b54f:	cmp    ebx,DWORD PTR [ebp+0x3f]
  41b552:	xchg   esp,eax
  41b553:	fsubp  st(0),st
  41b555:	ins    BYTE PTR es:[edi],dx
  41b556:	pushf  
  41b557:	dec    eax
  41b558:	mov    ds:0xc835c547,eax
  41b55d:	out    0x8a,eax
  41b55f:	push   edi
  41b560:	into   
  41b561:	mov    bl,0x54
  41b564:	pop    ebp
  41b565:	xor    bl,bl
  41b567:	xchg   esp,ebp
  41b569:	sub    dl,dh
  41b56b:	sub    al,0x85
  41b56d:	push   esi
  41b56e:	inc    ebp
  41b56f:	stos   DWORD PTR es:[edi],eax
  41b570:	daa    
  41b571:	cs mov edi,0x6dc937cd
  41b577:	in     al,0xe
  41b579:	jae    0x41b56d
  41b57b:	ret    0xca7c
  41b57e:	mov    ds:0x22b5c071,al
  41b583:	mov    ebp,0x609005d
  41b588:	sbb    DWORD PTR ds:0x59690308,eax
  41b58e:	lods   eax,DWORD PTR ds:[esi]
  41b58f:	sbb    al,0x7a
  41b591:	lds    edx,FWORD PTR [edi+0x4b3e3c8c]
  41b597:	mov    ds:0xb2830d8f,eax
  41b59c:	lock (bad) 
  41b59f:	aad    0xc7
  41b5a1:	cmp    bh,BYTE PTR [edi-0x7d]
  41b5a4:	int3   
  41b5a5:	sub    DWORD PTR [esi-0x56],eax
  41b5a8:	inc    ecx
  41b5a9:	add    eax,0x4ef564b
  41b5ae:	mov    ds:0xb6722445,al
  41b5b3:	ror    BYTE PTR [eax+0x30],cl
  41b5b6:	out    dx,al
  41b5b7:	sbb    BYTE PTR [edx],0xd4
  41b5ba:	add    eax,DWORD PTR [edi]
  41b5bc:	pop    ebp
  41b5bd:	fidivr DWORD PTR [edx+0x2d5e888d]
  41b5c3:	xor    BYTE PTR [eax+0x35],bh
  41b5c6:	sar    esi,1
  41b5c8:	cld    
  41b5c9:	aas    
  41b5ca:	(bad)  
  41b5cb:	adc    eax,0xe15f5994
  41b5d0:	sar    BYTE PTR [ecx+esi*4],cl
  41b5d3:	pop    eax
  41b5d4:	pop    ebp
  41b5d5:	jmp    0x41b638
  41b5d7:	add    al,0xb5
  41b5d9:	sar    dl,cl
  41b5db:	push   ss
  41b5dc:	pop    esp
  41b5dd:	pop    ecx
  41b5de:	aad    0xb6
  41b5e0:	push   cs
  41b5e1:	ss push ebx
  41b5e3:	(bad)  
  41b5e4:	xchg   ebp,eax
  41b5e5:	out    0x74,eax
  41b5e7:	std    
  41b5e8:	shr    BYTE PTR [ecx-0x27a02c8b],0x98
  41b5ef:	sub    BYTE PTR [ebp+0x61],al
  41b5f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5f3:	pop    ecx
  41b5f4:	test   eax,0xc4ffbf38
  41b5f9:	pop    ecx
  41b5fa:	scas   al,BYTE PTR es:[edi]
  41b5fb:	je     0x41b62b
  41b5fd:	mov    ebx,0x46cdaa47
  41b602:	push   cs
  41b603:	dec    esp
  41b604:	add    DWORD PTR [esi+0x6edfa04a],esi
  41b60a:	sub    eax,0x28895c27
  41b60f:	xadd   BYTE PTR [edi+0x5e31230b],bl
  41b616:	and    al,0xd2
  41b618:	dec    BYTE PTR [edi+0x5ad85ee9]
  41b61e:	mov    al,0x9d
  41b620:	pop    ebp
  41b621:	lds    ecx,FWORD PTR [ecx+0x3ca033b6]
  41b627:	mov    ch,0xc3
  41b629:	je     0x41b619
  41b62b:	mov    cs,WORD PTR [edi]
  41b62d:	les    ebp,FWORD PTR [edx+edx*8]
  41b630:	jb     0x41b661
  41b632:	pop    ebx
  41b633:	cmp    DWORD PTR [eax-0x58],esi
  41b636:	dec    ecx
  41b637:	outs   dx,DWORD PTR ds:[esi]
  41b638:	xchg   edi,eax
  41b639:	fmul   DWORD PTR [edi]
  41b63b:	fimul  WORD PTR [ebp-0x6d5a3640]
  41b641:	xor    eax,0x463882f1
  41b646:	stos   BYTE PTR es:[edi],al
  41b647:	push   esi
  41b648:	pop    eax
  41b649:	mov    ch,0x9e
  41b64b:	push   eax
  41b64c:	push   ecx
  41b64d:	inc    edi
  41b64e:	push   esp
  41b64f:	(bad)  
  41b650:	femms  
  41b652:	mov    edi,0x76cbbda7
  41b657:	mov    bl,0x94
  41b659:	xor    DWORD PTR [ebp-0x2e],eax
  41b65c:	inc    ebp
  41b65d:	fs dec ebp
  41b65f:	lea    edi,[si]
  41b662:	outs   dx,DWORD PTR ds:[esi]
  41b663:	icebp  
  41b664:	pop    esp
  41b665:	leave  
  41b666:	xchg   esi,eax
  41b667:	mov    edx,0x4ab9d49a
  41b66c:	cmp    DWORD PTR [ebx+ebx*4-0x3496ea06],eax
  41b673:	jg     0x41b653
  41b675:	loopne 0x41b697
  41b677:	out    dx,al
  41b678:	push   esi
  41b679:	push   ebp
  41b67a:	dec    ebx
  41b67b:	pop    esp
  41b67c:	in     eax,0xa1
  41b67e:	or     dl,dh
  41b680:	dec    ebx
  41b681:	mov    esi,0xb0c9d358
  41b686:	xchg   ebp,eax
  41b687:	dec    esp
  41b688:	inc    esp
  41b689:	(bad)  
  41b68a:	cmp    edx,esp
  41b68c:	pop    ebp
  41b68d:	in     al,dx
  41b68e:	fdivr  st,st(2)
  41b690:	push   es
  41b691:	in     al,dx
  41b692:	outs   dx,BYTE PTR ds:[esi]
  41b693:	xchg   ebp,eax
  41b694:	cmovbe ebx,DWORD PTR [ecx-0x30]
  41b698:	jmp    0xe1f0:0xfa568c43
  41b69f:	mov    ebx,0xf088778d
  41b6a4:	js     0x41b69a
  41b6a6:	jb     0x41b6fb
  41b6a8:	dec    edi
  41b6a9:	jno    0x41b6f0
  41b6ab:	or     DWORD PTR [ebp-0x3a2d390a],0xffffffc9
  41b6b2:	jnp    0x41b69a
  41b6b4:	sbb    edx,DWORD PTR [ebx]
  41b6b6:	or     ch,dl
  41b6b8:	pop    ebp
  41b6b9:	mov    esp,0xc539eb57
  41b6be:	cmp    eax,0xba42b07f
  41b6c3:	cmp    edx,DWORD PTR [ecx-0x34fa34f1]
  41b6c9:	shl    DWORD PTR [ebp-0x3],1
  41b6cc:	pop    ebp
  41b6cd:	dec    esi
  41b6ce:	daa    
  41b6cf:	iret   
  41b6d0:	push   0xffffffd7
  41b6d2:	mov    ah,0xad
  41b6d4:	rcr    DWORD PTR [edx+0x22],cl
  41b6d7:	mov    ebx,0x51897da
  41b6dc:	cmp    eax,0x564a2fab
  41b6e1:	mov    ebx,0xcdbc1375
  41b6e6:	dec    edx
  41b6e7:	push   ecx
  41b6e8:	cdq    
  41b6e9:	out    dx,al
  41b6ea:	mov    eax,0x1f33fdd1
  41b6ef:	popf   
  41b6f0:	jbe    0x41b757
  41b6f2:	xchg   ebx,eax
  41b6f3:	pop    esp
  41b6f4:	shl    BYTE PTR [ebx+0x4b],0x62
  41b6f8:	mov    bh,0x7b
  41b6fa:	jl     0x41b73c
  41b6fc:	and    cl,al
  41b6fe:	dec    edi
  41b6ff:	shl    bh,cl
  41b701:	shr    ch,1
  41b703:	jecxz  0x41b70d
  41b705:	mov    edi,0x945dd637
  41b70a:	repnz adc BYTE PTR [edx+0x47],cl
  41b70e:	xor    bh,BYTE PTR [eax+0x35]
  41b711:	inc    esi
  41b712:	push   0xa39c2a99
  41b717:	pop    es
  41b718:	fmul   QWORD PTR [esi+0x465a692c]
  41b71e:	xlat   BYTE PTR ds:[ebx]
  41b71f:	mov    WORD PTR [edx+eax*1+0x1b615511],?
  41b726:	mov    esi,DWORD PTR ds:0xd06e9990
  41b72c:	jecxz  0x41b7a8
  41b72e:	pop    es
  41b72f:	pop    ecx
  41b730:	iret   
  41b731:	fs xchg esp,eax
  41b733:	(bad)  
  41b734:	xchg   edi,eax
  41b735:	std    
  41b736:	push   ebp
  41b737:	loop   0x41b7ac
  41b739:	xchg   edx,eax
  41b73a:	loope  0x41b76a
  41b73c:	sbb    cl,bh
  41b73e:	data16 add bh,BYTE PTR [esp+esi*1+0x5f]
  41b743:	sbb    al,0x5e
  41b746:	idiv   ch
  41b748:	jge    0x41b791
  41b74a:	pop    DWORD PTR [edx+0x75]
  41b74d:	retf   
  41b74e:	jnp    0x41b760
  41b750:	pop    esp
  41b751:	inc    ebx
  41b752:	mov    DWORD PTR [ebx+0x1bfc1c88],ebp
  41b758:	mov    ebp,0x2dd2882b
  41b75d:	fwait
  41b75e:	mov    al,ds:0x3b47d1d8
  41b763:	cmp    BYTE PTR [ecx-0x21],0x7f
  41b767:	push   ebx
  41b768:	mov    cl,0xc1
  41b76a:	add    DWORD PTR [ebp-0x6fef9be],eax
  41b770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b771:	cli    
  41b772:	leave  
  41b773:	jmp    0x33ae30b4
  41b778:	mov    dl,0xe0
  41b77a:	add    eax,0xa93e5d5e
  41b77f:	xor    al,cl
  41b781:	test   BYTE PTR [esi+0x64],ch
  41b784:	popf   
  41b785:	pop    ecx
  41b786:	shl    DWORD PTR [edx+0x6c],1
  41b789:	mov    ds:0xfd812475,al
  41b78e:	inc    ecx
  41b78f:	mov    dl,0x8c
  41b791:	cld    
  41b792:	or     bl,BYTE PTR [edx+ebp*8+0x24d87b04]
  41b799:	inc    BYTE PTR [eax+0xe]
  41b79c:	test   BYTE PTR [edi+0x4b],al
  41b79f:	mov    al,ds:0x54355ee
  41b7a4:	mov    eax,edi
  41b7a6:	dec    edx
  41b7a7:	pop    edx
  41b7a8:	in     eax,0xb8
  41b7aa:	dec    ebp
  41b7ab:	imul   ebx,DWORD PTR [edi-0x80],0xfffffffe
  41b7af:	shl    BYTE PTR [ecx+0x55ae6500],cl
  41b7b5:	fcmove st,st(1)
  41b7b7:	mov    edx,0xe00a4e47
  41b7bc:	pop    ebp
  41b7bd:	mov    edx,DWORD PTR [ecx+0x7b]
  41b7c0:	pushw  0xd28b
  41b7c4:	adc    eax,0x565b4ca3
  41b7c9:	fwait
  41b7ca:	push   esp
  41b7cb:	call   0xbd510926
  41b7d0:	cmp    DWORD PTR [edx],edx
  41b7d2:	jnp    0x41b7ff
  41b7d4:	pop    edx
  41b7d5:	int    0xc7
  41b7d7:	shr    DWORD PTR [edx-0x1d],cl
  41b7da:	push   ecx
  41b7db:	dec    esp
  41b7dc:	fwait
  41b7dd:	ret    0x8842
  41b7e0:	sbb    eax,0x5d299892
  41b7e5:	sbb    DWORD PTR [eax],edx
  41b7e7:	and    edx,DWORD PTR [esi-0x320e0d36]
  41b7ed:	pop    eax
  41b7ee:	xlat   BYTE PTR ds:[ebx]
  41b7ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7f0:	inc    eax
  41b7f1:	mov    ?,WORD PTR [ebx]
  41b7f3:	xchg   ebp,eax
  41b7f4:	in     al,dx
  41b7f5:	mov    ch,0x5b
  41b7f7:	je     0x41b82b
  41b7f9:	jbe    0x41b852
  41b7fb:	inc    esi
  41b7fc:	push   ebx
  41b7fd:	inc    eax
  41b7fe:	ins    BYTE PTR es:[edi],dx
  41b7ff:	clc    
  41b800:	and    BYTE PTR [ecx],bl
  41b802:	xlat   BYTE PTR ds:[ebx]
  41b803:	push   edx
  41b804:	sti    
  41b805:	fnstcw WORD PTR [esi-0x56b9eda5]
  41b80b:	xchg   esi,eax
  41b80c:	sub    al,0x6a
  41b80e:	sbb    BYTE PTR [esi-0x6d],bl
  41b811:	repnz dec edx
  41b813:	stos   DWORD PTR es:[edi],eax
  41b814:	loopne 0x41b7a4
  41b816:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b817:	xor    eax,edi
  41b819:	stos   DWORD PTR es:[edi],eax
  41b81a:	jmp    0x39d973f1
  41b81f:	sbb    DWORD PTR [edx+0x5d5fd0ed],esi
  41b825:	addr16 mov bl,0x56
  41b828:	mov    cl,0x32
  41b82a:	sub    cl,BYTE PTR [eax-0x7d]
  41b82d:	pop    eax
  41b82e:	push   esp
  41b82f:	pop    ebx
  41b830:	push   ebx
  41b831:	pop    ebp
  41b832:	ds mov dl,0x1a
  41b835:	mov    dh,0x78
  41b837:	inc    edi
  41b838:	push   esi
  41b839:	iret   
  41b83a:	lods   eax,DWORD PTR ds:[esi]
  41b83b:	push   0x81ab1f28
  41b840:	pop    ecx
  41b841:	adc    BYTE PTR [ebx-0x2d],ah
  41b844:	cs stos DWORD PTR es:[edi],eax
  41b846:	sub    BYTE PTR [ebx],cl
  41b848:	sub    DWORD PTR [edi+0x605d42f3],esi
  41b84e:	scas   eax,DWORD PTR es:[edi]
  41b84f:	jnp    0x41b7e9
  41b851:	sbb    eax,0x478ed13f
  41b856:	push   0xeadd6ee6
  41b85b:	xor    al,0x7b
  41b85d:	xor    dh,BYTE PTR [esi+edi*4+0x57]
  41b861:	or     al,0x63
  41b863:	cmp    ebx,eax
  41b865:	sub    cl,bl
  41b867:	sar    BYTE PTR [eax],cl
  41b869:	xchg   ecx,eax
  41b86a:	inc    edx
  41b86b:	scas   al,BYTE PTR es:[edi]
  41b86c:	inc    ecx
  41b86d:	call   0xd39f60e1
  41b872:	lahf   
  41b873:	inc    ebx
  41b874:	cmp    eax,0xfb57ac8
  41b879:	jno    0x41b8e8
  41b87b:	push   edx
  41b87c:	jmp    0x95e1:0xddb62a40
  41b883:	jle    0x41b8ae
  41b885:	mov    ecx,DWORD PTR [ebx-0x9]
  41b888:	or     BYTE PTR [ebp+0x54],ch
  41b88b:	sbb    ch,0x95
  41b88e:	ror    DWORD PTR fs:[eax-0x236da260],cl
  41b895:	dec    ebp
  41b896:	xlat   BYTE PTR ds:[ebx]
  41b897:	mov    edx,0x3697fb59
  41b89c:	sbb    eax,0xac63423b
  41b8a1:	cmp    ebp,ecx
  41b8a3:	bound  esp,QWORD PTR [ebp+0x59]
  41b8a6:	push   es
  41b8a7:	test   DWORD PTR [ebx],0x402baf47
  41b8ad:	fcom   QWORD PTR [esi+ecx*4-0x42]
  41b8b1:	push   ebp
  41b8b2:	dec    eax
  41b8b3:	aam    0x3c
  41b8b5:	(bad)  
  41b8b6:	mov    ebp,DWORD PTR [esi-0x1e]
  41b8b9:	xor    eax,0x2901dfe1
  41b8be:	adc    ecx,DWORD PTR gs:[eax+0x10]
  41b8c2:	inc    esp
  41b8c3:	hlt    
  41b8c4:	ins    BYTE PTR es:[edi],dx
  41b8c5:	loopne 0x41b918
  41b8c7:	mov    bh,0xcd
  41b8c9:	sub    dh,BYTE PTR [eax+0x623e0f52]
  41b8cf:	shr    BYTE PTR [eax+0x58],1
  41b8d2:	xchg   ecx,eax
  41b8d3:	mov    dh,0x3b
  41b8d5:	and    edi,DWORD PTR [ecx+0x65397351]
  41b8db:	stos   BYTE PTR es:[edi],al
  41b8dc:	pop    ebp
  41b8dd:	xchg   esp,eax
  41b8de:	mov    ah,0x95
  41b8e0:	inc    edx
  41b8e1:	jb     0x41b902
  41b8e3:	adc    BYTE PTR [esi+eax*2],0x8e
  41b8e7:	idiv   al
  41b8e9:	in     eax,0x3e
  41b8eb:	cmp    ebx,esp
  41b8ed:	inc    ebp
  41b8ee:	dec    ebx
  41b8ef:	sub    al,0x9b
  41b8f1:	div    DWORD PTR [edx+0x6aed231c]
  41b8f7:	shl    DWORD PTR [edi+0x67063c2d],cl
  41b8fd:	out    0xf1,eax
  41b8ff:	cmp    eax,DWORD PTR [edx+0x6]
  41b902:	outs   dx,DWORD PTR ds:[esi]
  41b903:	int    0x59
  41b905:	mov    ebx,0xa1f06a0a
  41b90a:	or     BYTE PTR [ecx+edi*2+0x2d123c59],bl
  41b911:	inc    ecx
  41b912:	shl    esi,1
  41b914:	retf   
  41b915:	inc    edx
  41b916:	dec    ebx
  41b917:	icebp  
  41b918:	ins    DWORD PTR es:[edi],dx
  41b919:	out    dx,eax
  41b91a:	jecxz  0x41b962
  41b91c:	fsubr  QWORD PTR [edx+0x4d]
  41b91f:	shr    BYTE PTR [edx+0x539c10ab],cl
  41b925:	int    0x1e
  41b927:	pop    esi
  41b928:	xchg   ebp,eax
  41b929:	xlat   BYTE PTR ds:[ebx]
  41b92a:	in     eax,0xcb
  41b92c:	jge    0x41b9a8
  41b92e:	dec    esi
  41b92f:	daa    
  41b930:	fld    QWORD PTR [edi+0x6f39d5e5]
  41b936:	dec    ebx
  41b937:	std    
  41b938:	jbe    0x41b8d4
  41b93a:	or     esp,DWORD PTR [eax-0x19]
  41b93d:	xor    eax,0x6a0bd251
  41b942:	add    eax,0x3cd5c700
  41b947:	rcr    DWORD PTR [ebp-0x6],1
  41b94a:	inc    esi
  41b94b:	lea    ecx,[ecx]
  41b94d:	into   
  41b94e:	icebp  
  41b94f:	mov    cl,0x5
  41b951:	inc    esi
  41b952:	in     al,0x85
  41b954:	cld    
  41b955:	in     al,0x6c
  41b957:	inc    edi
  41b958:	sub    al,0x76
  41b95a:	push   DWORD PTR cs:[eax+0x30]
  41b95e:	dec    ebx
  41b95f:	or     cl,bh
  41b961:	or     ebx,DWORD PTR [edx-0x7e]
  41b964:	mov    ?,WORD PTR [ebx+0x6a]
  41b967:	rcl    edi,cl
  41b969:	pop    esi
  41b96a:	dec    esi
  41b96b:	mov    cl,0x3d
  41b96d:	(bad)  
  41b96f:	rcr    BYTE PTR [ebp-0x4e],0xca
  41b973:	pcmpgtd mm0,QWORD PTR [eax]
  41b976:	stos   BYTE PTR es:[edi],al
  41b977:	bound  eax,QWORD PTR ds:0xba6ac546
  41b97d:	lods   eax,DWORD PTR ds:[esi]
  41b97e:	inc    edi
  41b97f:	out    dx,al
  41b980:	mov    ecx,0xabc14b6d
  41b985:	call   0x223a1b85
  41b98a:	mov    ds:0xdc2331d2,eax
  41b98f:	xchg   edx,eax
  41b990:	sbb    esi,DWORD PTR [esi+0x42]
  41b993:	call   0xa89a:0x39269d5d
  41b99a:	mov    ebp,0x9d595b4f
  41b99f:	loopne 0x41b9b5
  41b9a1:	pop    esp
  41b9a2:	inc    ebx
  41b9a3:	out    0x47,eax
  41b9a5:	push   0x4b
  41b9a7:	cld    
  41b9a8:	fisttp WORD PTR [esi+eiz*1+0x6b]
  41b9ac:	push   ds
  41b9ad:	mov    WORD PTR [edx-0x2d],fs
  41b9b0:	cld    
  41b9b1:	jne    0x41b95a
  41b9b3:	pop    esi
  41b9b4:	ror    BYTE PTR [eax+esi*1],cl
  41b9b7:	aam    0x79
  41b9b9:	data16 jae 0x41ba37
  41b9bc:	loop   0x41b99c
  41b9be:	retf   0xa417
  41b9c1:	pop    ss
  41b9c2:	mov    ebx,0x1fd78b65
  41b9c7:	fcomp  QWORD PTR [eax]
  41b9c9:	and    eax,0x3200eac7
  41b9ce:	sub    al,0xd2
  41b9d0:	fimul  DWORD PTR [ebx-0x4ab3dda5]
  41b9d6:	add    al,0x72
  41b9d8:	push   0xffffff9b
  41b9da:	xor    eax,0xe8597413
  41b9df:	jmp    0xd2568d24
  41b9e4:	jle    0x41ba05
  41b9e6:	add    ah,bh
  41b9e8:	(bad)  
  41b9e9:	cmp    ch,BYTE PTR [edi+0x2b]
  41b9ec:	outs   dx,DWORD PTR ds:[esi]
  41b9ed:	cwde   
  41b9ee:	lods   eax,DWORD PTR ds:[esi]
  41b9ef:	inc    ebx
  41b9f0:	and    al,0x26
  41b9f2:	push   ds
  41b9f3:	out    dx,al
  41b9f4:	aam    0x71
  41b9f6:	in     al,dx
  41b9f7:	shl    BYTE PTR [eax+0x23],cl
  41b9fa:	mov    DWORD PTR [eax+edi*4+0x6e039a5d],ebp
  41ba01:	dec    ecx
  41ba02:	sbb    ah,BYTE PTR [esi]
  41ba04:	and    esp,DWORD PTR [esi+0x2a]
  41ba07:	les    esi,FWORD PTR [edx+0x1d37dfd]
  41ba0d:	fsubr  QWORD PTR [edi+0x72ad262d]
  41ba13:	push   ds
  41ba14:	jp     0x41ba51
  41ba16:	mov    ds:0xf846071a,eax
  41ba1b:	fiadd  WORD PTR [edx-0x57]
  41ba1e:	int    0x5b
  41ba20:	jo     0x41ba0b
  41ba22:	popa   
  41ba23:	out    0xf4,al
  41ba25:	adc    DWORD PTR [esi-0x30],esp
  41ba28:	dec    edx
  41ba29:	out    dx,al
  41ba2a:	js     0x41ba56
  41ba2c:	inc    esp
  41ba2d:	mov    DWORD PTR [eax],ebx
  41ba2f:	adc    ebx,DWORD PTR [ebp+0x7d]
  41ba32:	int3   
  41ba33:	xchg   si,ax
  41ba35:	fsubr  QWORD PTR [ebx+ebp*8+0x7da3599f]
  41ba3c:	mov    ds:0xee7b1385,eax
  41ba41:	mov    al,0x4a
  41ba43:	push   ebp
  41ba44:	pop    ecx
  41ba45:	mov    eax,ds:0x7c4ca175
  41ba4b:	jg     0x41ba45
  41ba4d:	inc    edi
  41ba4e:	mov    bl,0xdd
  41ba50:	cmp    eax,0x6ea75a8e
  41ba55:	sub    eax,0x7f528e4a
  41ba5a:	jmp    0x41ba69
  41ba5c:	fisttp QWORD PTR [esi-0x32]
  41ba5f:	(bad)
  41ba63:	mov    al,ds:0x37887727
  41ba68:	mov    dh,0x9d
  41ba6a:	das    
  41ba6b:	push   esi
  41ba6c:	pop    ebp
  41ba6d:	or     edi,0x3e
  41ba70:	and    al,0x5a
  41ba72:	(bad)  
  41ba73:	cmc    
  41ba74:	loop   0x41bacf
  41ba76:	adc    al,0x80
  41ba78:	je     0x41bae2
  41ba7a:	xor    DWORD PTR [edi],ecx
  41ba7c:	sub    eax,ebx
  41ba7e:	dec    edx
  41ba7f:	xor    cl,BYTE PTR [ebp+0x6e2acf93]
  41ba85:	xor    ecx,0xce2e69d2
  41ba8b:	arpl   WORD PTR [ebx-0x72205df7],si
  41ba91:	shr    BYTE PTR [edi-0x659ca1f0],0xd5
  41ba98:	shr    DWORD PTR [eax-0x7f],cl
  41ba9b:	mov    WORD PTR [edi-0x67],?
  41ba9e:	std    
  41ba9f:	mov    bh,0xaa
  41baa1:	pop    ecx
  41baa2:	iret   
  41baa3:	dec    esi
  41baa4:	ds addr16 out 0x46,eax
  41baa8:	jno    0x41ba2a
  41baaa:	push   ebp
  41baab:	in     eax,0xbf
  41baad:	dec    DWORD PTR [ebx-0x32]
  41bab0:	jge    0x41ba90
  41bab2:	retf   0xdb12
  41bab5:	enter  0xd281,0xdf
  41bab9:	xor    DWORD PTR [ebx],0xcde83b5d
  41babf:	add    al,0x5d
  41bac1:	ins    BYTE PTR es:[edi],dx
  41bac2:	jnp    0x41ba68
  41bac4:	outs   dx,BYTE PTR ds:[esi]
  41bac5:	adc    esp,DWORD PTR [esi+0x8462b4c]
  41bacb:	sbb    DWORD PTR [ebx+edx*4+0x2],ebx
  41bacf:	mov    ah,0xb1
  41bad1:	add    al,0xda
  41bad3:	test   al,0x53
  41bad5:	outs   dx,BYTE PTR ds:[esi]
  41bad6:	mov    al,0xd4
  41bad8:	sbb    bl,BYTE PTR [ebx]
  41bada:	cmp    DWORD PTR [edx],esi
  41badc:	xchg   edi,eax
  41badd:	mov    dl,0xe3
  41badf:	inc    ebp
  41bae0:	pusha  
  41bae1:	pop    ecx
  41bae2:	js     0x41ba9c
  41bae4:	cmp    eax,0xcbfffb27
  41bae9:	push   esi
  41baea:	push   ecx
  41baeb:	dec    edx
  41baec:	push   es
  41baed:	hlt    
  41baee:	es push ebx
  41baf0:	dec    edx
  41baf1:	jge    0x41bab4
  41baf3:	fist   WORD PTR ds:0x85ddbbab
  41baf9:	jle    0x41bb2f
  41bafb:	push   edx
  41bafc:	fneni(8087 only) 
  41bafe:	xchg   ecx,eax
  41baff:	pop    edx
  41bb00:	cld    
  41bb01:	dec    eax
  41bb02:	dec    ebx
  41bb03:	dec    eax
  41bb04:	mov    ebp,0x42288d99
  41bb09:	cld    
  41bb0a:	or     eax,0x5659d743
  41bb0f:	aad    0x5
  41bb11:	sbb    eax,0xe779f4bb
  41bb16:	push   eax
  41bb17:	rcl    ecx,0xfb
  41bb1a:	pop    es
  41bb1b:	lock sub eax,DWORD PTR [ebx-0x2c]
  41bb1f:	mov    dl,0xbf
  41bb21:	pop    eax
  41bb22:	call   0x78fb01f3
  41bb27:	ins    DWORD PTR es:[edi],dx
  41bb28:	clc    
  41bb29:	push   esp
  41bb2a:	jl     0x41baae
  41bb2c:	ficom  DWORD PTR [edi]
  41bb2e:	retf   
  41bb2f:	or     al,0x6c
  41bb32:	in     eax,0x86
  41bb34:	pop    ebp
  41bb35:	fsubr  QWORD PTR [edi+0x3ef3ea8e]
  41bb3b:	aam    0x9c
  41bb3d:	xor    ebx,DWORD PTR [eax]
  41bb3f:	mov    bh,0x7d
  41bb41:	mov    esp,0x2c96d22e
  41bb46:	mov    bh,0x0
  41bb48:	push   ss
  41bb49:	in     al,dx
  41bb4a:	(bad)  
  41bb4b:	ins    BYTE PTR es:[edi],dx
  41bb4c:	pop    ebp
  41bb4d:	and    BYTE PTR [ecx+0x5890e71d],al
  41bb53:	sbb    ebp,ebp
  41bb55:	pop    eax
  41bb56:	fcmove st,st(0)
  41bb58:	sbb    al,BYTE PTR ds:0xae24c2d0
  41bb5e:	xor    al,0xa1
  41bb60:	pop    ebp
  41bb61:	or     bh,ch
  41bb63:	jp     0x41bb21
  41bb65:	mov    dh,BYTE PTR [ebp+0x2]
  41bb68:	push   es
  41bb69:	push   edx
  41bb6a:	sub    ch,BYTE PTR [ebp+esi*2-0x7b]
  41bb6e:	fild   QWORD PTR [ebx]
  41bb70:	jmp    0x41bb9a
  41bb72:	dec    ebx
  41bb73:	fisubr DWORD PTR [ecx+0x13ec2583]
  41bb79:	dec    ecx
  41bb7a:	psrld  mm5,QWORD PTR [ecx-0x6c]
  41bb7e:	pop    ss
  41bb7f:	sbb    dh,ah
  41bb81:	add    BYTE PTR [edx+esi*4+0x4b5fbb52],dh
  41bb88:	mov    WORD PTR [ebp-0x77],ss
  41bb8b:	imul   edi,DWORD PTR [edi],0x26
  41bb8e:	xchg   ebx,eax
  41bb8f:	mov    dh,0xf6
  41bb91:	pop    ecx
  41bb92:	mov    ebx,DWORD PTR [edx-0x42]
  41bb95:	xchg   esp,eax
  41bb96:	test   DWORD PTR [esi],ecx
  41bb98:	mov    bl,BYTE PTR [ebx+ecx*2]
  41bb9b:	test   al,0x8d
  41bb9d:	jmp    DWORD PTR [eax+0x2f930cc]
  41bba3:	std    
  41bba4:	ret    
  41bba5:	xchg   DWORD PTR [edx+0x77],ecx
  41bba8:	int3   
  41bba9:	push   esi
  41bbaa:	and    ah,BYTE PTR [ebx]
  41bbac:	jmp    0x41bc19
  41bbae:	dec    ebx
  41bbaf:	test   al,0x8e
  41bbb1:	ins    DWORD PTR es:[edi],dx
  41bbb2:	setb   BYTE PTR [eax]
  41bbb5:	jae    0x41bb38
  41bbb7:	mov    al,0xe1
  41bbb9:	mov    bl,0xe9
  41bbbb:	shl    ch,cl
  41bbbd:	das    
  41bbbe:	gs out dx,al
  41bbc0:	outs   dx,DWORD PTR ds:[esi]
  41bbc1:	and    BYTE PTR [edi+0x2bd05d79],ch
  41bbc7:	add    eax,0xf1eeb5cd
  41bbcc:	push   edi
  41bbcd:	pop    ecx
  41bbce:	cmp    bl,cl
  41bbd0:	mov    dl,0x71
  41bbd2:	sbb    eax,0x4afa7b12
  41bbd7:	outs   dx,DWORD PTR ds:[esi]
  41bbd8:	add    ebp,esi
  41bbda:	add    ebp,ebp
  41bbdc:	pop    ds
  41bbdd:	or     eax,0xc2911af0
  41bbe2:	dec    ecx
  41bbe3:	inc    edx
  41bbe4:	(bad)  
  41bbe5:	shr    bh,cl
  41bbe7:	repnz add DWORD PTR [esi],ebp
  41bbea:	mov    esp,0xeb1f5d5f
  41bbef:	sbb    ecx,DWORD PTR [esi]
  41bbf1:	jmp    0x5a16bdb0
  41bbf6:	inc    ecx
  41bbf7:	out    dx,al
  41bbf8:	push   0x5ea860f8
  41bbfd:	addr16 push esi
  41bbff:	push   esi
  41bc00:	lahf   
  41bc01:	imul   esi,ecx,0xffffffa5
  41bc04:	mov    ds:0x11e538d9,al
  41bc09:	pop    edi
  41bc0a:	stos   DWORD PTR es:[edi],eax
  41bc0b:	scas   al,BYTE PTR es:[edi]
  41bc0c:	fcomp  QWORD PTR [eax-0x1f59bd09]
  41bc12:	mov    dh,0x3f
  41bc14:	jnp    0x41bc63
  41bc16:	jb     0x41bc6b
  41bc18:	(bad)  
  41bc19:	lock push esp
  41bc1b:	cmp    eax,0x388c488b
  41bc20:	sahf   
  41bc21:	pop    ecx
  41bc22:	pop    esi
  41bc23:	cdq    
  41bc24:	fist   DWORD PTR [ebx]
  41bc26:	cld    
  41bc27:	stos   BYTE PTR es:[edi],al
  41bc28:	leave  
  41bc29:	cld    
  41bc2a:	xor    BYTE PTR [esi+0x324b39f1],ch
  41bc30:	loope  0x41bc4f
  41bc32:	fistp  DWORD PTR [edi-0x24]
  41bc35:	pop    ecx
  41bc36:	test   eax,0x75827cd6
  41bc3b:	test   BYTE PTR [ecx-0x5a],0x47
  41bc3f:	enter  0x255a,0x8b
  41bc43:	ins    BYTE PTR es:[edi],dx
  41bc44:	sub    DWORD PTR [edx+0x2e],ebp
  41bc47:	adc    bh,BYTE PTR [ecx+0x73]
  41bc4a:	in     eax,dx
  41bc4b:	mov    ebp,0x250527dd
  41bc50:	mov    eax,ds:0x5dd168ec
  41bc55:	or     bl,BYTE PTR [ebx+0x5e]
  41bc58:	xor    BYTE PTR [edi+0x59510819],ah
  41bc5e:	outs   dx,BYTE PTR ds:[esi]
  41bc5f:	or     BYTE PTR [edi-0x9],bl
  41bc62:	mov    esi,0x218cde46
  41bc67:	pop    edx
  41bc68:	adc    dh,al
  41bc6a:	add    esp,DWORD PTR [edx]
  41bc6c:	inc    edx
  41bc6d:	jge    0x41bc4a
  41bc6f:	leave  
  41bc70:	xchg   BYTE PTR [edi-0x33],al
  41bc73:	adc    al,0xd8
  41bc75:	lahf   
  41bc76:	mov    edi,edx
  41bc78:	sub    al,BYTE PTR [ebp+edx*2+0x42]
  41bc7c:	in     eax,0x77
  41bc7e:	dec    ebx
  41bc7f:	scas   al,BYTE PTR es:[edi]
  41bc80:	lods   al,BYTE PTR ds:[esi]
  41bc81:	setge  BYTE PTR [esi+ebx*4+0x68392969]
  41bc89:	pop    ecx
  41bc8a:	dec    esi
  41bc8b:	sbb    BYTE PTR [eax],0xcc
  41bc8e:	jmp    0x41bc49
  41bc90:	ss lahf 
  41bc92:	push   ebp
  41bc93:	and    al,0x6e
  41bc95:	adc    DWORD PTR [esi-0x9660129],ecx
  41bc9b:	(bad)  
  41bc9c:	cmp    esi,DWORD PTR [ecx+0x51]
  41bc9f:	ficomp WORD PTR [ebp-0x7]
  41bca2:	inc    BYTE PTR [ebp-0x72f0d0ec]
  41bca8:	xor    DWORD PTR [ebx+0x54],edx
  41bcab:	inc    edx
  41bcac:	test   BYTE PTR [ebx+0x12786072],cl
  41bcb2:	js     0x41bcf9
  41bcb4:	xor    DWORD PTR [eax-0x77742f82],ebx
  41bcba:	test   BYTE PTR [edx],ch
  41bcbc:	dec    edi
  41bcbd:	ror    dh,cl
  41bcbf:	call   0x51e9:0xc54a8296
  41bcc6:	vaddsubps xmm0,xmm4,XMMWORD PTR [edi]
  41bcca:	mov    eax,0x5101e145
  41bccf:	xor    ebx,DWORD PTR [ebp-0x1e]
  41bcd2:	jge    0x41bd48
  41bcd4:	xor    bh,BYTE PTR [eax]
  41bcd6:	stos   DWORD PTR es:[edi],eax
  41bcd7:	inc    esp
  41bcd8:	push   ebx
  41bcd9:	fstp   st(6)
  41bcdb:	cmc    
  41bcdc:	repz std 
  41bcde:	bound  edx,QWORD PTR [ebx]
  41bce0:	jle    0x41bd4c
  41bce2:	sub    edx,edx
  41bce4:	(bad)  
  41bce5:	aas    
  41bce6:	sub    BYTE PTR [esi-0x660e9e2c],dl
  41bcec:	pop    ebp
  41bced:	mov    edi,0xb95588d2
  41bcf2:	aas    
  41bcf3:	lods   al,BYTE PTR ds:[esi]
  41bcf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcf5:	pop    ecx
  41bcf6:	xor    DWORD PTR [edx],esp
  41bcf8:	aas    
  41bcf9:	push   esi
  41bcfa:	pop    es
  41bcfb:	push   es
  41bcfc:	cmp    dl,ch
  41bcfe:	dec    edx
  41bcff:	cld    
  41bd00:	or     al,0x8d
  41bd02:	push   cs
  41bd03:	sub    al,bh
  41bd05:	ds jne 0x41bcdb
  41bd08:	ss sub eax,0x68770ab2
  41bd0e:	xor    ecx,DWORD PTR [edi+0x39]
  41bd11:	pop    ecx
  41bd12:	dec    ebx
  41bd13:	inc    edi
  41bd14:	cmp    al,0xcd
  41bd16:	cwde   
  41bd17:	xlat   BYTE PTR ds:[ebx]
  41bd18:	aam    0x2a
  41bd1a:	xchg   ecx,eax
  41bd1b:	rcr    ah,cl
  41bd1d:	push   ebx
  41bd1e:	push   eax
  41bd1f:	loop   0x41bcce
  41bd21:	mov    al,0xd8
  41bd23:	pushf  
  41bd24:	pop    ebp
  41bd25:	pop    esi
  41bd27:	push   ebp
  41bd28:	mov    esi,0x38fe7e6
  41bd2d:	imul   edx,DWORD PTR [ebx+0x69],0xffffff89
  41bd31:	pop    ecx
  41bd32:	push   ebx
  41bd33:	aad    0xf6
  41bd35:	push   ecx
  41bd36:	xchg   esp,eax
  41bd37:	jbe    0x41bd96
  41bd39:	or     DWORD PTR [eax+eiz*1],edx
  41bd3c:	sbb    eax,0x16b756f0
  41bd41:	jle    0x41bdbb
  41bd43:	add    DWORD PTR [esi-0x338b21ab],esp
  41bd49:	(bad)  
  41bd4b:	sbb    eax,0xb19b12c8
  41bd50:	outs   dx,BYTE PTR ds:[esi]
  41bd51:	jo     0x41bd84
  41bd53:	fisttp WORD PTR [esi+ebx*1+0x238db9cf]
  41bd5a:	shl    DWORD PTR [ebx+ecx*4-0x1cd6ca7],cl
  41bd61:	in     al,0xf
  41bd63:	add    BYTE PTR [edx],dh
  41bd65:	jne    0x41bdb2
  41bd67:	test   BYTE PTR [ebx-0x8],0x89
  41bd6b:	sbb    al,BYTE PTR [edi+0x5e]
  41bd6e:	jecxz  0x41bd42
  41bd70:	pop    ecx
  41bd71:	pop    ss
  41bd72:	aam    0xb4
  41bd74:	test   BYTE PTR [esp+edi*8+0x59d06af0],bl
  41bd7b:	mov    ebx,edx
  41bd7d:	inc    edi
  41bd7e:	mov    ch,0x72
  41bd80:	test   al,0x4f
  41bd82:	mov    ah,0x7a
  41bd84:	mov    edi,0x63ca6f56
  41bd89:	fld    st(0)
  41bd8b:	jns    0x41bd8d
  41bd8d:	xlat   BYTE PTR ds:[ebx]
  41bd8e:	ja     0x41be0c
  41bd90:	pop    ebp
  41bd91:	mov    ebx,0x8449b9f6
  41bd96:	(bad)  ds:[esi+0x45d17b59]
  41bd9d:	sub    BYTE PTR [ecx+edx*2],ah
  41bda0:	xchg   edi,ecx
  41bda2:	in     eax,dx
  41bda3:	dec    ebp
  41bda4:	pop    ebp
  41bda5:	(bad)  
  41bda7:	and    DWORD PTR [eax-0x11],eax
  41bdaa:	(bad)  
  41bdab:	adc    bh,BYTE PTR [esi+0x59]
  41bdae:	repnz icebp 
  41bdb0:	pop    esi
  41bdb1:	call   0x944a:0xe85131b9
  41bdb8:	int    0x4c
  41bdba:	cs mov ch,0x89
  41bdbd:	inc    ebx
  41bdbe:	jmp    0x41bd92
  41bdc0:	mov    ebx,0x9afcc76b
  41bdc5:	lods   al,BYTE PTR ds:[esi]
  41bdc6:	lds    edi,FWORD PTR [esp+esi*1-0x36]
  41bdca:	cmp    eax,0x862f6e13
  41bdcf:	stos   DWORD PTR es:[edi],eax
  41bdd0:	mov    ds:0x58462a1a,al
  41bdd5:	rcl    DWORD PTR [ebx-0x1548f6ec],0xc1
  41bddc:	sbb    DWORD PTR [esi+0x23],eax
  41bddf:	in     eax,0xb0
  41bde1:	sahf   
  41bde2:	(bad)  
  41bde3:	retf   
  41bde4:	dec    esi
  41bde5:	sub    al,0x4b
  41bde7:	jae    0x41bd8f
  41bde9:	mov    bh,0x6
  41bdeb:	nop
  41bdec:	fs call 0x1dbd906f
  41bdf2:	fwait
  41bdf3:	xchg   edx,eax
  41bdf4:	lods   al,BYTE PTR ds:[esi]
  41bdf5:	mov    bl,0x85
  41bdf7:	lock outs dx,BYTE PTR ds:[esi]
  41bdf9:	popa   
  41bdfa:	push   ecx
  41bdfb:	popf   
  41bdfc:	jmp    0x41be6a
  41bdfe:	push   ebp
  41bdff:	repnz jmp 0xd659:0xc0e8bc90
  41be07:	es into 
  41be09:	xchg   edi,eax
  41be0a:	in     eax,dx
  41be0b:	cmp    BYTE PTR [eax],ch
  41be0d:	lods   eax,DWORD PTR ds:[esi]
  41be0e:	dec    edx
  41be0f:	and    esp,DWORD PTR [edi+0x8]
  41be12:	in     al,0xa4
  41be14:	adc    al,0xe9
  41be16:	pop    eax
  41be17:	shl    DWORD PTR [esi-0x35639bf2],cl
  41be1d:	mov    bl,0xf
  41be1f:	mov    al,ds:0x624ec5d
  41be24:	mov    ds:0xa3f3b1c1,al
  41be29:	pop    ecx
  41be2a:	test   al,0x91
  41be2c:	data16 sbb BYTE PTR [edi],al
  41be2f:	or     edx,DWORD PTR [ecx]
  41be31:	adc    ecx,DWORD PTR [ebx+0x52]
  41be34:	dec    ebp
  41be35:	into   
  41be36:	mov    WORD PTR [ebx-0x2d32b3dd],?
  41be3c:	aam    0x8a
  41be3e:	jle    0x41be91
  41be40:	cmp    eax,0x99c26e26
  41be45:	rol    DWORD PTR [edx+0x43],1
  41be48:	outs   dx,DWORD PTR ds:[esi]
  41be49:	jmp    0xc37b:0x998840a3
  41be50:	jb     0x41be56
  41be52:	daa    
  41be53:	rcr    ah,cl
  41be55:	mov    esi,0xe916b223
  41be5a:	pop    ds
  41be5b:	pop    esi
  41be5c:	cmp    eax,DWORD PTR [ebp+0x4b]
  41be5f:	bound  edi,QWORD PTR [esi+edi*1+0x3972d001]
  41be66:	pushf  
  41be67:	shr    DWORD PTR [edi],1
  41be69:	js     0x41be21
  41be6b:	inc    esi
  41be6c:	dec    edx
  41be6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be6e:	call   0x1d61:0x42391e89
  41be75:	fmul   DWORD PTR [edx+0x44]
  41be78:	sbb    esi,ebx
  41be7a:	add    edi,esp
  41be7c:	iret   
  41be7d:	pop    ecx
  41be7e:	sub    bl,BYTE PTR [ecx+0x4d]
  41be81:	xor    DWORD PTR [edi+0x484ae1f3],edx
  41be87:	ret    
  41be88:	outs   dx,DWORD PTR ds:[esi]
  41be89:	pop    esp
  41be8a:	mov    dh,dh
  41be8c:	fst    st(7)
  41be8e:	mov    ds:0xbc462005,eax
  41be93:	jl     0x41bee8
  41be95:	pusha  
  41be96:	push   ss
  41be97:	hlt    
  41be98:	imul   ebx,DWORD PTR [ecx],0x46494327
  41be9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be9f:	adc    ebp,esp
  41bea1:	and    DWORD PTR [ecx],esi
  41bea3:	sub    al,0x71
  41bea5:	pop    ecx
  41bea6:	mov    eax,0xaff152fb
  41beab:	cmp    BYTE PTR [esi+ebp*4],ch
  41beae:	dec    edx
  41beaf:	pop    esp
  41beb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41beb1:	jl     0x41be76
  41beb3:	pop    ebx
  41beb4:	sbb    al,0x35
  41beb6:	mov    ch,0xaa
  41beb8:	outs   dx,BYTE PTR ds:[esi]
  41beb9:	pop    ecx
  41beba:	ja     0x41be65
  41bebc:	fsubr  QWORD PTR [ebx]
  41bebe:	mov    al,ds:0x4b69b750
  41bec3:	sub    al,0xab
  41bec5:	mov    ds:0xf82df588,al
  41beca:	mov    ss,edx
  41becc:	dec    esi
  41becd:	mov    edi,0xea0f4ef2
  41bed2:	pop    ebx
  41bed3:	jg     0x41bf32
  41bed5:	mov    esi,fs
  41bed7:	test   DWORD PTR cs:[edi+edi*8],esp
  41bedb:	and    ebx,DWORD PTR [ebx+0x68a91a59]
  41bee1:	push   es
  41bee2:	push   es
  41bee3:	cmp    dl,cl
  41bee5:	mov    ecx,ebx
  41bee7:	pushf  
  41bee8:	cwde   
  41bee9:	cmp    al,al
  41beeb:	rcr    BYTE PTR [edx+0x29],cl
  41beee:	cmp    BYTE PTR [ebp-0x79],cl
  41bef1:	icebp  
  41bef2:	lea    esp,[edx+0x50]
  41bef5:	pop    eax
  41bef6:	sbb    eax,0x790ec258
  41befb:	pop    esp
  41befc:	test   eax,0x5621dc89
  41bf01:	dec    ecx
  41bf02:	or     dl,dh
  41bf04:	sub    DWORD PTR [ebp+0x4aef91ba],ebx
  41bf0a:	ror    WORD PTR [eax],cl
  41bf0d:	sub    eax,0x1e179876
  41bf12:	fisubr DWORD PTR [edx-0x7b]
  41bf15:	inc    esp
  41bf16:	cmp    dl,dl
  41bf18:	jns    0x41bf15
  41bf1a:	rep ins DWORD PTR es:[edi],dx
  41bf1c:	pop    eax
  41bf1d:	or     al,0xe1
  41bf1f:	ror    BYTE PTR [ebx+ebx*8+0xb],cl
  41bf23:	pop    esi
  41bf24:	mov    dl,BYTE PTR [ecx-0x7b]
  41bf27:	pusha  
  41bf28:	and    eax,0xc735e8f
  41bf2d:	fld    st(3)
  41bf2f:	rcl    BYTE PTR [ecx+0x41],cl
  41bf32:	mov    DWORD PTR [ebx-0x2ee2a697],ecx
  41bf38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf39:	xor    al,0x87
  41bf3b:	repnz mov ebx,0x91bf4af0
  41bf41:	or     BYTE PTR [edi-0x6a],bh
  41bf44:	push   es
  41bf45:	imul   esp,ecx,0x5dbb42d4
  41bf4b:	pop    eax
  41bf4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf4d:	stc    
  41bf4e:	inc    ecx
  41bf4f:	js     0x41bf6b
  41bf51:	jmp    0x7777a4ab
  41bf56:	push   es
  41bf57:	stos   BYTE PTR es:[edi],al
  41bf58:	popf   
  41bf59:	fldenv [edi-0x2d]
  41bf5c:	mov    esi,0xe9f30f6a
  41bf61:	jae    0x41bf7d
  41bf63:	int    0x5f
  41bf65:	test   eax,0xcd5dc815
  41bf6a:	push   0x19
  41bf6c:	ror    ah,1
  41bf6e:	jge    0x41bf43
  41bf70:	cdq    
  41bf71:	pop    ebx
  41bf72:	sbb    DWORD PTR [ebx-0x80],edx
  41bf75:	pusha  
  41bf76:	sbb    al,0x2e
  41bf78:	pop    ebp
  41bf79:	jl     0x41bf14
  41bf7b:	popa   
  41bf7c:	sbb    DWORD PTR [ebx+0x59c40cfc],ebp
  41bf82:	adc    DWORD PTR [esi+edi*4-0x39],0x8e965744
  41bf8a:	jae    0x41bf82
  41bf8c:	xor    eax,DWORD PTR [eax+0x31]
  41bf8f:	or     BYTE PTR [eax],0xe0
  41bf92:	push   ecx
  41bf93:	xchg   DWORD PTR [esi],esp
  41bf95:	xchg   BYTE PTR [ebp+0x60],dh
  41bf98:	das    
  41bf99:	mov    ds:0xdf37e2d2,ax
  41bf9f:	mov    edx,0x12d0ff3d
  41bfa4:	pop    ebp
  41bfa5:	test   DWORD PTR [ebp-0x63],esp
  41bfa8:	dec    ecx
  41bfa9:	out    0xab,eax
  41bfab:	(bad)  
  41bfac:	rol    BYTE PTR ds:0x7a5d2c74,cl
  41bfb2:	ins    DWORD PTR es:[edi],dx
  41bfb3:	push   ecx
  41bfb4:	dec    esi
  41bfb5:	xor    ch,BYTE PTR [esi]
  41bfb7:	mov    ebx,0xe712645d
  41bfbc:	or     ecx,ebx
  41bfbe:	lods   eax,DWORD PTR ds:[esi]
  41bfbf:	iret   
  41bfc0:	push   edi
  41bfc1:	pop    ecx
  41bfc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfc3:	mov    al,ds:0x3d5fc7a4
  41bfc8:	mov    bl,0x67
  41bfca:	dec    ebx
  41bfcb:	sub    BYTE PTR [edx-0x7eb5ba76],dh
  41bfd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfd2:	jnp    0x41bfc3
  41bfd4:	mov    cl,0xdb
  41bfd6:	inc    ecx
  41bfd7:	fbstp  TBYTE PTR [eax+ebx*1-0x7a699e4f]
  41bfde:	jns    0x41bf77
  41bfe0:	retf   0x4b16
  41bfe3:	(bad)  
  41bfe4:	in     al,0xfa
  41bfe6:	mov    al,ds:0x39476dea
  41bfeb:	rcl    eax,cl
  41bfed:	aad    0x54
  41bfef:	test   edx,0x121237ab
  41bff5:	jle    0x41c06d
  41bff7:	enter  0x3258,0xcf
  41bffb:	mov    eax,ds:0x43d4a11d
  41c000:	fdivr  DWORD PTR [ebp+0x1b]
  41c003:	rcr    BYTE PTR [eax+ebp*8+0x35df37f8],cl
  41c00a:	mov    ds:0x4b49a20e,al
  41c00f:	fnsave [edx-0x2]
  41c012:	hlt    
  41c013:	(bad)  
  41c014:	or     BYTE PTR [ebp+eax*8-0x1f],cl
  41c018:	mov    ebx,0xdcd362d9
  41c01d:	lahf   
  41c01e:	std    
  41c01f:	cmp    eax,0x84718e67
  41c024:	pop    ecx
  41c025:	push   0x74
  41c027:	ds sbb eax,0x4c262db4
  41c02d:	xor    ebp,DWORD PTR [ebp-0x2d]
  41c030:	adc    al,BYTE PTR [eax]
  41c032:	xor    eax,0xb2e31335
  41c037:	mov    edx,0x31b3ff5d
  41c03c:	outs   dx,DWORD PTR ds:[esi]
  41c03d:	or     dl,BYTE PTR [ebx+0x214617ce]
  41c043:	call   0x40fd:0x3a50084e
  41c04a:	dec    ebx
  41c04b:	dec    esp
  41c04c:	jno    0x41c060
  41c04e:	cmp    al,ah
  41c050:	mov    BYTE PTR [ebp+0x3],ch
  41c053:	rol    cl,cl
  41c055:	adc    edx,DWORD PTR [eax+0x45e81fc4]
  41c05b:	sub    bl,BYTE PTR [ecx-0x7b]
  41c05e:	cmp    eax,0xb809dd6e
  41c063:	and    DWORD PTR ds:0xcdde4824,edx
  41c069:	lock stos DWORD PTR es:[edi],eax
  41c06b:	nop
  41c06c:	popf   
  41c06d:	popa   
  41c06e:	pop    ebp
  41c06f:	int3   
  41c070:	popf   
  41c071:	test   BYTE PTR [edx],0xc3
  41c074:	aaa    
  41c075:	cdq    
  41c076:	dec    edx
  41c077:	ins    DWORD PTR es:[edi],dx
  41c078:	xchg   ebx,esi
  41c07a:	sbb    bl,BYTE PTR [ebx]
  41c07c:	fsub   QWORD PTR [eax+ebx*8]
  41c07f:	rol    ch,cl
  41c081:	push   esi
  41c082:	loope  0x41c0e9
  41c084:	inc    ecx
  41c085:	dec    ebp
  41c086:	mov    ecx,esi
  41c088:	jle    0x41c0f0
  41c08a:	mov    ecx,0x56894dd2
  41c08f:	clc    
  41c090:	xchg   edi,eax
  41c091:	call   0xefcb:0x550bd136
  41c098:	add    al,0xc5
  41c09a:	pop    ecx
  41c09b:	pusha  
  41c09c:	dec    eax
  41c09d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c09e:	arpl   di,ax
  41c0a0:	(bad)  
  41c0a1:	pop    ds
  41c0a2:	dec    ebx
  41c0a3:	ror    DWORD PTR [ecx-0x6c],1
  41c0a6:	fld    DWORD PTR [ebx-0x53e3bb99]
  41c0ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0ad:	pop    ecx
  41c0ae:	rcr    DWORD PTR [esi-0x5c],0x3d
  41c0b2:	and    DWORD PTR [esi-0x24b49722],esi
  41c0b8:	lock mov BYTE PTR [eax-0x7f662a5b],al
  41c0bf:	cmp    edx,edx
  41c0c1:	pop    ecx
  41c0c2:	imul   edx,esi,0xffffff9e
  41c0c5:	jmp    0xfbbce5d6
  41c0ca:	push   ecx
  41c0cb:	dec    ecx
  41c0cc:	xlat   BYTE PTR ds:[ebx]
  41c0cd:	pop    ebx
  41c0ce:	daa    
  41c0cf:	ds inc ecx
  41c0d1:	push   edi
  41c0d2:	jae    0x41c0a7
  41c0d4:	mov    eax,ds:0x8623af6a
  41c0d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0da:	add    edx,edx
  41c0dc:	retf   
  41c0dd:	pop    ds
  41c0de:	repz (bad) 
  41c0e0:	adc    eax,0x5d8906cd
  41c0e5:	mov    edi,0x2b90b75d
  41c0ea:	nop
  41c0eb:	(bad)  
  41c0ec:	scas   eax,DWORD PTR es:[edi]
  41c0ed:	pop    ecx
  41c0ee:	fmul   st(6),st
  41c0f0:	inc    ebx
  41c0f1:	out    0x87,al
  41c0f3:	ret    
  41c0f4:	test   DWORD PTR [ecx-0xa4120b6],esp
  41c0fa:	xor    BYTE PTR [ebp-0x77],0x2e
  41c0fe:	repnz mov al,0xb2
  41c101:	xor    dh,ah
  41c103:	shl    BYTE PTR [edi-0x66],cl
  41c106:	or     esp,DWORD PTR [eax+ebp*8+0x7b0bb263]
  41c10d:	in     eax,dx
  41c10e:	mov    al,ds:0x5e031d52
  41c113:	fimul  WORD PTR [ebx+0x29]
  41c116:	fwait
  41c117:	(bad)  
  41c118:	inc    esp
  41c119:	mov    BYTE PTR [esi],cl
  41c11b:	jb     0x41c0be
  41c11d:	fdecstp 
  41c11f:	sbb    BYTE PTR [eax+ebx*1],ch
  41c122:	dec    ebx
  41c123:	fisttp WORD PTR [esi]
  41c125:	les    ebp,FWORD PTR ds:0x2a079e88
  41c12b:	int    0xfc
  41c12d:	mov    ds:0xf05fa30e,eax
  41c132:	ins    BYTE PTR es:[edi],dx
  41c133:	mov    ebp,0x99d45963
  41c138:	test   DWORD PTR [edx],esp
  41c13a:	mov    ds:0x5141109c,al
  41c13f:	fadd   DWORD PTR [edi+0x658b1afd]
  41c145:	adc    eax,0xa02fd20f
  41c14a:	shl    DWORD PTR [edx+0x14],1
  41c14d:	mov    ecx,DWORD PTR [ebx+0x14]
  41c150:	xor    DWORD PTR [edi+eax*4],ecx
  41c153:	xor    al,0xb
  41c155:	dec    edi
  41c156:	xor    DWORD PTR [esp+esi*8+0x5b],eax
  41c15a:	jo     0x41c19c
  41c15c:	add    DWORD PTR [ebp-0x14],ecx
  41c15f:	xchg   ebp,eax
  41c160:	sbb    eax,0x525472e7
  41c165:	xor    edi,eax
  41c167:	ret    
  41c168:	data16 jl 0x41c15d
  41c16b:	pop    ecx
  41c16c:	pop    edx
  41c16d:	mov    eax,ds:0xcbb80b79
  41c172:	dec    esi
  41c173:	rcl    BYTE PTR [edx+0x2d],cl
  41c176:	pushf  
  41c177:	ins    DWORD PTR es:[edi],dx
  41c178:	cmp    BYTE PTR [esi+0x2a],dh
  41c17b:	mov    eax,0x784ad02d
  41c180:	sbb    DWORD PTR [edx+edx*8],esi
  41c183:	dec    eax
  41c184:	or     al,BYTE PTR [eax]
  41c186:	into   
  41c187:	aad    0x2d
  41c189:	dec    esp
  41c18a:	fmul   DWORD PTR [esp+ebx*2-0x723cd357]
  41c191:	cmc    
  41c192:	dec    edx
  41c193:	outs   dx,DWORD PTR ds:[esi]
  41c194:	int3   
  41c195:	retf   0x477e
  41c198:	test   DWORD PTR [ebp-0x5e],ebp
  41c19b:	shl    ah,cl
  41c19d:	mov    al,0x9
  41c19f:	int    0x82
  41c1a1:	(bad)  
  41c1a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1a3:	mov    edi,0x8921f26f
  41c1a8:	aam    0xb9
  41c1aa:	sub    eax,0x397949a7
  41c1af:	hlt    
  41c1b0:	stos   BYTE PTR es:[edi],al
  41c1b1:	push   ds
  41c1b2:	pop    edi
  41c1b3:	ret    0xb703
  41c1b6:	push   0x9
  41c1b8:	leave  
  41c1b9:	cmc    
  41c1ba:	mov    esp,0xc2da5c13
  41c1bf:	iret   
  41c1c0:	jnp    0x41c16a
  41c1c2:	mov    esi,ebp
  41c1c4:	add    DWORD PTR [ecx-0x46fb2f99],esi
  41c1ca:	cwde   
  41c1cb:	inc    ecx
  41c1cc:	mov    WORD PTR [edx],cs
  41c1ce:	scas   eax,DWORD PTR es:[edi]
  41c1cf:	call   0x1ad5:0x6b4b572f
  41c1d6:	jmp    0x9e47e7b2
  41c1db:	aam    0xd0
  41c1dd:	and    DWORD PTR [eax-0x68],eax
  41c1e0:	lds    eax,FWORD PTR [ebx+0x4b]
  41c1e3:	mov    ch,BYTE PTR ds:0x65c50e00
  41c1e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1ea:	sbb    dl,dl
  41c1ec:	mov    esi,0x7ddec8be
  41c1f1:	adc    eax,0x987a011e
  41c1f6:	test   dl,dl
  41c1f8:	scas   eax,DWORD PTR es:[edi]
  41c1f9:	shr    DWORD PTR [ecx],cl
  41c1fb:	jne    0x41c26f
  41c1fd:	sahf   
  41c1fe:	or     eax,0xaa2f1cd
  41c203:	pop    ecx
  41c204:	xchg   esi,eax
  41c205:	pop    edi
  41c206:	das    
  41c207:	ret    0xa0ca
  41c20a:	arpl   WORD PTR [ebx],bp
  41c20c:	cmp    ebx,esi
  41c20e:	push   eax
  41c20f:	ds stc 
  41c211:	neg    DWORD PTR [ebx]
  41c213:	mov    dl,0x9d
  41c215:	push   es
  41c216:	into   
  41c217:	pop    esi
  41c218:	dec    edx
  41c219:	jl     0x41c29a
  41c21b:	xchg   BYTE PTR ds:0xb6924b71,al
  41c221:	xchg   BYTE PTR [eax+0x4aab8d3c],bl
  41c227:	xchg   DWORD PTR [ebx],ebp
  41c229:	mov    bl,0xa7
  41c22b:	pop    ss
  41c22c:	(bad)  
  41c22d:	push   ss
  41c22e:	and    eax,0x67badbd2
  41c233:	fwait
  41c234:	(bad)  
  41c235:	and    al,0xc0
  41c237:	sub    BYTE PTR [ebx+0x18],al
  41c23a:	imul   eax,DWORD PTR [esi],0x300c1f5d
  41c240:	out    0x60,al
  41c242:	psrld  mm4,QWORD PTR [eax-0x23f5dc71]
  41c249:	outs   dx,BYTE PTR ds:[esi]
  41c24a:	mov    ecx,0x84c86fb4
  41c24f:	or     eax,0xdec7462f
  41c254:	fisttp WORD PTR ds:0x9994d2fd
  41c25a:	sar    DWORD PTR [ebx],1
  41c25c:	ins    BYTE PTR es:[edi],dx
  41c25d:	mov    eax,ds:0x575dc85e
  41c262:	fdiv   DWORD PTR [ecx-0xcdf4882]
  41c268:	lea    ebx,[ecx+0x69]
  41c26b:	ins    DWORD PTR es:[edi],dx
  41c26c:	enter  0x1931,0x1
  41c270:	mov    al,cl
  41c272:	dec    edx
  41c273:	outs   dx,BYTE PTR ds:[esi]
  41c274:	add    DWORD PTR [esp+edx*4+0x208c75da],eax
  41c27b:	call   DWORD PTR [eax]
  41c27d:	or     cl,bl
  41c27f:	mov    edx,0xbe01e250
  41c284:	xchg   esi,eax
  41c285:	adc    DWORD PTR [ebx-0x49],ecx
  41c288:	xchg   ecx,eax
  41c289:	pop    ebx
  41c28a:	push   0xffffffe5
  41c28c:	mov    ah,0x34
  41c28e:	retf   0x6bac
  41c291:	pop    ecx
  41c292:	xor    BYTE PTR [ebp+0x66],al
  41c295:	je     0x41c2fb
  41c297:	lods   al,BYTE PTR ds:[esi]
  41c298:	adc    ch,BYTE PTR [ecx]
  41c29a:	dec    ebx
  41c29b:	pushf  
  41c29c:	dec    edi
  41c29d:	mov    al,0xc
  41c29f:	lock xchg edx,eax
  41c2a1:	xor    bl,BYTE PTR [esi-0x34]
  41c2a4:	es sub DWORD PTR es:[ecx+0x7d],ebx
  41c2a9:	push   0x86866c47
  41c2ae:	dec    edx
  41c2af:	in     eax,dx
  41c2b0:	xor    BYTE PTR [ebp+0x16],0x58
  41c2b4:	sub    al,0x1d
  41c2b6:	or     edx,edx
  41c2b8:	fst    DWORD PTR [esi+0x16783038]
  41c2be:	fist   WORD PTR [edx+0x5d]
  41c2c1:	(bad)  
  41c2c2:	and    al,BYTE PTR [edi+ebp*8]
  41c2c5:	fisttp WORD PTR [ecx+0x43a5c2c9]
  41c2cb:	fiadd  WORD PTR [ecx+0x66]
  41c2ce:	icebp  
  41c2cf:	adc    dl,ah
  41c2d1:	in     al,0x9d
  41c2d3:	jmp    0xb8cd283
  41c2d8:	outs   dx,DWORD PTR ds:[esi]
  41c2d9:	cwde   
  41c2da:	mov    bl,0x58
  41c2dc:	popa   
  41c2dd:	pop    ebx
  41c2de:	lods   eax,DWORD PTR ds:[esi]
  41c2df:	and    ch,cl
  41c2e1:	retf   0x452e
  41c2e4:	loopne 0x41c2ef
  41c2e6:	out    0xae,eax
  41c2e8:	adc    ebx,DWORD PTR [ebx-0x5f]
  41c2eb:	adc    al,0x1c
  41c2ed:	jns    0x41c27f
  41c2ef:	lods   al,BYTE PTR ds:[esi]
  41c2f0:	in     eax,dx
  41c2f1:	out    0xce,eax
  41c2f3:	stc    
  41c2f4:	pop    DWORD PTR [ecx]
  41c2f6:	pop    ecx
  41c2f7:	loopne 0x41c356
  41c2f9:	jo     0x41c2de
  41c2fb:	(bad)
  41c2fe:	in     al,dx
  41c2ff:	rcr    BYTE PTR [edx-0x34],1
  41c302:	jb     0x41c320
  41c304:	adc    BYTE PTR [edi-0xf53c776],ch
  41c30a:	dec    edx
  41c30b:	sub    al,0x7e
  41c30d:	pop    edi
  41c30e:	and    esp,0xffffffb1
  41c311:	ret    0xd11d
  41c314:	ss in  eax,dx
  41c316:	mov    al,0x58
  41c318:	test   al,0x2b
  41c31a:	mov    ecx,DWORD PTR [esi-0x72b56518]
  41c320:	inc    ebp
  41c321:	push   ds
  41c322:	dec    edx
  41c323:	and    DWORD PTR [ebp+esi*4-0x2c],edi
  41c327:	shl    BYTE PTR [eax+0x4ce6afbe],cl
  41c32d:	mov    al,ds:0x856a4a8
  41c332:	dec    esi
  41c333:	mov    dh,BYTE PTR [ebx-0x6bf08b81]
  41c339:	std    
  41c33a:	xchg   edx,eax
  41c33b:	bound  ecx,QWORD PTR [eax+0xe0dbf59]
  41c341:	call   0xbc56:0x3fdd5499
  41c348:	int3   
  41c349:	mov    esp,0xb63cf0c4
  41c34e:	push   esi
  41c34f:	fistp  WORD PTR [ebx+0x1887f659]
  41c355:	imul   edx,DWORD PTR [edx],0x44
  41c358:	dec    ecx
  41c359:	add    esp,DWORD PTR [ebx-0x65]
  41c35c:	pop    ebp
  41c35d:	and    DWORD PTR [esi],eax
  41c35f:	push   cs
  41c360:	dec    DWORD PTR [edx+0x7d]
  41c363:	cmp    dl,cl
  41c365:	pop    ecx
  41c366:	mov    dh,0x85
  41c368:	js     0x41c3c5
  41c36a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c36b:	jg     0x41c3cf
  41c36d:	sbb    eax,0xbee94243
  41c372:	and    BYTE PTR [ebx+edi*1],0x5f
  41c376:	adc    al,0x61
  41c378:	lods   al,BYTE PTR ds:[esi]
  41c379:	push   ebp
  41c37a:	ret    0xe6b2
  41c37d:	jmp    0x41c376
  41c37f:	mov    al,ds:0xd00de364
  41c384:	test   ah,ch
  41c386:	mov    ebx,0x3739664e
  41c38b:	dec    ebx
  41c38c:	scas   al,BYTE PTR es:[edi]
  41c38d:	pop    ecx
  41c38e:	repz sub BYTE PTR [eax-0x3092d46c],ch
  41c395:	fisttp WORD PTR [edx+0x5c]
  41c398:	aaa    
  41c399:	fs sbb al,0x6c
  41c39c:	jnp    0x41c328
  41c39e:	and    DWORD PTR [edx+0x6060641c],ebp
  41c3a4:	mov    dh,0x5e
  41c3a6:	xchg   DWORD PTR [eax],ebp
  41c3a8:	sahf   
  41c3a9:	or     DWORD PTR [ebp+0x597e4656],ebp
  41c3af:	lods   al,BYTE PTR ds:[esi]
  41c3b0:	mov    eax,0x175e4ab7
  41c3b5:	mov    bh,0xcb
  41c3b7:	fdiv   st(2),st
  41c3b9:	popf   
  41c3ba:	out    0xd2,eax
  41c3bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3bd:	loop   0x41c35d
  41c3bf:	(bad)  
  41c3c0:	in     eax,0x9b
  41c3c2:	jecxz  0x41c369
  41c3c4:	mov    ebx,0x4da03ebb
  41c3c9:	mov    ?,WORD PTR [ecx+0x44]
  41c3cc:	pop    ebp
  41c3cd:	and    DWORD PTR [ecx],eax
  41c3cf:	std    
  41c3d0:	test   ebx,0x583b6aec
  41c3d6:	out    dx,al
  41c3d7:	ds (bad) 
  41c3d9:	sub    DWORD PTR [bp+si],esi
  41c3dc:	push   es
  41c3dd:	(bad)  
  41c3de:	ja     0x41c3d6
  41c3e0:	dec    esi
  41c3e1:	scas   al,BYTE PTR es:[edi]
  41c3e2:	mov    ds:0xbafb215a,eax
  41c3e7:	clc    
  41c3e8:	in     al,dx
  41c3e9:	push   0x22
  41c3eb:	dec    ebp
  41c3ec:	(bad)  
  41c3ed:	pop    ds
  41c3ee:	xor    bl,BYTE PTR [edx+0x66]
  41c3f1:	or     DWORD PTR [edx],edx
  41c3f3:	shl    BYTE PTR [esp+esi*8+0x5e],1
  41c3f7:	jg     0x41c38e
  41c3f9:	mov    bh,0xef
  41c3fb:	rol    BYTE PTR [edx-0x3a1c6aec],cl
  41c401:	shr    BYTE PTR [eax+0x37533bd1],0x15
  41c408:	loope  0x41c462
  41c40a:	imul   ecx,DWORD PTR [edi-0x7fb540d4],0x40
  41c411:	jmp    0xcae91732
  41c416:	ret    
  41c417:	shr    BYTE PTR [edi],cl
  41c419:	loopne 0x41c3dc
  41c41b:	pop    ecx
  41c41c:	jns    0x41c3e1
  41c41e:	jb     0x41c415
  41c420:	pop    ebp
  41c421:	scas   al,BYTE PTR es:[edi]
  41c422:	icebp  
  41c423:	test   eax,0xf8677e9a
  41c428:	ds inc esi
  41c42a:	stos   DWORD PTR es:[edi],eax
  41c42b:	(bad)  
  41c42c:	repnz arpl WORD PTR [ebx+0x4aaa5fef],si
  41c433:	hlt    
  41c434:	sar    ah,1
  41c436:	aas    
  41c437:	scas   eax,DWORD PTR es:[edi]
  41c438:	jne    0x41c45b
  41c43a:	aaa    
  41c43b:	mov    esi,0x340e7e34
  41c440:	pop    ebp
  41c441:	popf   
  41c442:	jo     0x41c3dd
  41c444:	jmp    0x41c44b
  41c446:	fistp  QWORD PTR [ebp+ebx*2-0x33]
  41c44a:	mov    esp,0x86b568ec
  41c44f:	outs   dx,BYTE PTR ds:[esi]
  41c450:	cmp    BYTE PTR [edi-0x5c],al
  41c453:	repnz dec ebp
  41c455:	lahf   
  41c456:	dec    edx
  41c457:	add    eax,0x97abdae
  41c45c:	pop    ebp
  41c45d:	cli    
  41c45e:	pop    esp
  41c45f:	mov    ecx,DWORD PTR [esi+0x2c7d0a75]
  41c465:	inc    esi
  41c466:	cmc    
  41c467:	dec    ebp
  41c468:	push   es
  41c469:	mov    esp,0x98e24463
  41c46e:	and    bl,bh
  41c470:	ficomp WORD PTR [eax-0x20]
  41c473:	das    
  41c474:	xchg   ebx,eax
  41c475:	ret    
  41c476:	cmp    ch,BYTE PTR [ebx+0x39]
  41c479:	sbb    ebx,DWORD PTR [edx-0x33]
  41c47c:	fldenv [esi+0xf]
  41c47f:	and    BYTE PTR ds:0x1531edbd,bh
  41c485:	pusha  
  41c486:	dec    ebx
  41c487:	jo     0x41c48e
  41c489:	in     al,0x5e
  41c48b:	scas   al,BYTE PTR es:[edi]
  41c48c:	and    al,0x54
  41c48e:	iret   
  41c48f:	in     al,0xf0
  41c491:	aas    
  41c492:	test   eax,0xbc0fd8d2
  41c497:	jbe    0x41c485
  41c499:	mov    ecx,DWORD PTR [ebx-0xc]
  41c49c:	xchg   ecx,eax
  41c49d:	repz adc dl,BYTE PTR ds:0x6255d264
  41c4a4:	in     eax,dx
  41c4a5:	pop    ecx
  41c4a6:	arpl   ax,si
  41c4a8:	jge    0x41c437
  41c4aa:	xchg   ebx,eax
  41c4ab:	scas   eax,DWORD PTR es:[edi]
  41c4ac:	pop    edi
  41c4ad:	cmp    ecx,DWORD PTR [ebx+0x74]
  41c4b0:	jecxz  0x41c448
  41c4b2:	xchg   ecx,eax
  41c4b3:	iret   
  41c4b4:	add    DWORD PTR [edx-0x59263308],0x7
  41c4bb:	jne    0x41c479
  41c4bd:	lods   al,BYTE PTR ds:[esi]
  41c4be:	xor    esi,DWORD PTR [esi]
  41c4c0:	call   0x4a84:0x32197219
  41c4c7:	and    dh,ah
  41c4c9:	mov    dh,BYTE PTR [edx]
  41c4cb:	ins    DWORD PTR es:[edi],dx
  41c4cc:	pushf  
  41c4cd:	mov    eax,ds:0xc111d2b9
  41c4d2:	inc    esi
  41c4d3:	push   esi
  41c4d4:	push   ds
  41c4d5:	or     dl,BYTE PTR [ebp-0x3eaea7df]
  41c4db:	mov    bl,0xe4
  41c4dd:	mov    ah,0x4a
  41c4df:	push   ebx
  41c4e0:	jb     0x41c4df
  41c4e2:	mov    bh,0x2b
  41c4e4:	push   cs
  41c4e5:	cld    
  41c4e6:	jmp    0x97fe:0x6352aae
  41c4ed:	xchg   edi,eax
  41c4ee:	dec    ebx
  41c4ef:	jmp    0x41c4b0
  41c4f1:	dec    eax
  41c4f2:	call   0x3cca6b06
  41c4f7:	xchg   esi,eax
  41c4f8:	sbb    ch,ch
  41c4fa:	dec    edx
  41c4fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4fc:	loope  0x41c4b1
  41c4fe:	jbe    0x41c4e9
  41c500:	push   edx
  41c501:	sahf   
  41c502:	jne    0x41c4eb
  41c504:	stc    
  41c505:	or     DWORD PTR [esp+eiz*2-0x5919a2a4],esp
  41c50c:	xor    esi,DWORD PTR [eax]
  41c50e:	lahf   
  41c50f:	ret    0xda1f
  41c512:	dec    edx
  41c513:	push   eax
  41c514:	xchg   ecx,eax
  41c515:	popa   
  41c516:	sub    al,0x14
  41c518:	xchg   edx,eax
  41c519:	push   ecx
  41c51a:	mov    al,0xd3
  41c51c:	lea    esp,[edx-0x39]
  41c51f:	rcr    esp,1
  41c521:	neg    DWORD PTR [ebx-0xd]
  41c524:	test   al,0x3f
  41c526:	dec    edx
  41c527:	fstp   QWORD PTR ds:0x5d10c533
  41c52d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c52e:	shl    BYTE PTR [eax+0x761b6b97],cl
  41c534:	adc    eax,DWORD PTR [esi+0x7a]
  41c537:	pop    ebx
  41c538:	in     eax,dx
  41c539:	xor    dh,BYTE PTR cs:[ebx]
  41c53c:	pop    ebp
  41c53d:	mov    ?,WORD PTR [ecx]
  41c53f:	lahf   
  41c540:	retf   
  41c541:	stc    
  41c542:	push   eax
  41c543:	movhps QWORD PTR [esi-0x2e],xmm0
  41c547:	ss icebp 
  41c549:	inc    ebx
  41c54a:	add    bl,BYTE PTR [edi]
  41c54c:	add    dl,BYTE PTR es:[eax+ebp*8+0x57]
  41c551:	out    dx,eax
  41c552:	out    0xe3,al
  41c554:	fld    st(4)
  41c556:	fisub  DWORD PTR [ecx-0x1548b9ff]
  41c55c:	add    esp,DWORD PTR [edi+0x71]
  41c55f:	dec    edx
  41c560:	push   esi
  41c561:	xchg   esp,eax
  41c562:	dec    edx
  41c563:	scas   al,BYTE PTR es:[edi]
  41c564:	mov    al,0xb3
  41c566:	or     DWORD PTR [esi+0x35],eax
  41c569:	inc    esp
  41c56a:	arpl   dx,cx
  41c56c:	(bad)  
  41c56d:	mov    esi,0x664f5d1d
  41c572:	fnstcw WORD PTR [esi]
  41c574:	pushf  
  41c575:	pop    eax
  41c576:	dec    ebx
  41c577:	leave  
  41c578:	in     eax,dx
  41c579:	fist   WORD PTR [edi]
  41c57b:	mov    ebx,0xfce44e7c
  41c580:	xchg   edx,eax
  41c581:	frstor [esp+edi*8+0x38]
  41c585:	hlt    
  41c586:	dec    edx
  41c587:	adc    BYTE PTR [eax],bl
  41c589:	dec    esp
  41c58a:	and    DWORD PTR [edi-0x1ab4b6a2],0x8e790105
  41c594:	jmp    0x41c58c
  41c596:	lods   al,BYTE PTR ds:[esi]
  41c597:	int    0x9e
  41c599:	inc    ecx
  41c59a:	xchg   ecx,eax
  41c59b:	sti    
  41c59c:	bound  ebx,QWORD PTR [eax-0x78]
  41c59f:	call   0x77b7e7b3
  41c5a4:	dec    ebx
  41c5a5:	xor    eax,0xbd443e4b
  41c5aa:	mov    esi,0x99598c1a
  41c5af:	xchg   BYTE PTR [esi-0x36],bl
  41c5b2:	fimul  DWORD PTR [ebp-0x12b491c1]
  41c5b8:	test   al,0xc9
  41c5ba:	xchg   edi,eax
  41c5bb:	outs   dx,DWORD PTR ds:[esi]
  41c5bc:	imul   eax,DWORD PTR [edx-0x31],0xffffffc9
  41c5c0:	xor    BYTE PTR [esp+ebx*2],dl
  41c5c3:	jbe    0x41c622
  41c5c5:	stc    
  41c5c6:	cs add al,0x88
  41c5c9:	ret    
  41c5ca:	dec    edx
  41c5cb:	cmp    ch,BYTE PTR [edx+ecx*8+0x2399a0a6]
  41c5d2:	(bad)
  41c5d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5d6:	push   ds
  41c5d7:	push   ss
  41c5d8:	(bad)  
  41c5d9:	(bad)  [ebx+0x200ab364]
  41c5df:	mov    ch,0x9d
  41c5e1:	fstp   DWORD PTR [eax-0x5ea7ee76]
  41c5e7:	adc    eax,0xd2304891
  41c5ec:	cmp    eax,0x951dcac8
  41c5f1:	imul   esp,DWORD PTR ds:0xb02b5c36,0xffffffbf
  41c5f8:	jo     0x41c659
  41c5fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5fb:	fs push ds
  41c5fd:	mov    dh,0xd3
  41c5ff:	pop    esi
  41c600:	and    al,0x46
  41c602:	div    BYTE PTR [edx]
  41c604:	xchg   BYTE PTR [edi-0x6d1b3205],bl
  41c60a:	dec    edx
  41c60b:	fucomip st,st(2)
  41c60d:	add    eax,ebp
  41c60f:	mov    bl,0xa0
  41c611:	and    eax,0x83b1d23a
  41c616:	fisttp DWORD PTR ds:0x6b62d4a
  41c61c:	pop    ebp
  41c61d:	cwde   
  41c61e:	or     al,0x54
  41c620:	sub    dl,BYTE PTR [ebx]
  41c622:	shr    dh,1
  41c624:	loopne 0x41c67f
  41c626:	scas   eax,DWORD PTR es:[edi]
  41c627:	int    0x33
  41c629:	add    eax,DWORD PTR [edi]
  41c62b:	pop    esp
  41c62c:	jne    0x41c5ee
  41c62e:	dec    edx
  41c62f:	es lahf 
  41c631:	leave  
  41c632:	mov    dl,0x7a
  41c634:	push   esi
  41c635:	int    0x58
  41c637:	ror    BYTE PTR [edi],1
  41c639:	mov    dl,0x97
  41c63b:	jns    0x41c61e
  41c63d:	and    bh,BYTE PTR [ecx+0x3]
  41c640:	into   
  41c641:	sahf   
  41c642:	dec    ebx
  41c643:	clc    
  41c644:	mov    ch,0xc6
  41c646:	daa    
  41c647:	inc    ecx
  41c648:	lds    edx,FWORD PTR [esi+0x5b173172]
  41c64e:	mov    esi,0x792c4279
  41c653:	aaa    
  41c654:	cmc    
  41c655:	les    ebp,FWORD PTR [ecx+0x76]
  41c658:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c659:	xor    cl,BYTE PTR [ebx+0x44]
  41c65c:	ror    DWORD PTR [esi+ebx*8-0x55092db8],1
  41c663:	rol    dh,0x59
  41c666:	inc    ebp
  41c667:	mov    bh,0xa9
  41c669:	outs   dx,DWORD PTR ds:[esi]
  41c66a:	xor    al,0x81
  41c66c:	sbb    BYTE PTR [edx+0x4b],ah
  41c66f:	mov    bl,0xec
  41c671:	mov    bl,cl
  41c673:	xor    BYTE PTR [edi-0xf13f0e9],0xd1
  41c67a:	pop    edx
  41c67b:	shl    DWORD PTR [ecx-0x56],cl
  41c67e:	push   es
  41c67f:	or     bl,BYTE PTR [eax]
  41c681:	sub    ecx,DWORD PTR [ebx+0x2c]
  41c684:	mov    eax,0x4b2d08f4
  41c689:	pop    esi
  41c68a:	jl     0x41c65f
  41c68c:	(bad)  
  41c68d:	fisttp QWORD PTR [edx-0x537f3698]
  41c693:	mov    ds:0x4f17a76e,eax
  41c698:	sbb    al,0xe6
  41c69a:	(bad)  
  41c69b:	mov    bh,0x61
  41c69d:	jg     0x41c62d
  41c69f:	rcl    BYTE PTR [ecx+0x70de562c],cl
  41c6a5:	xchg   edi,eax
  41c6a6:	hlt    
  41c6a7:	leave  
  41c6a8:	inc    edi
  41c6a9:	xor    esp,ebx
  41c6ab:	out    0x5c,al
  41c6ad:	retf   0xafa1
  41c6b0:	sub    edx,0xe3b95b75
  41c6b6:	mov    ecx,ebp
  41c6b8:	imul   ebp,DWORD PTR [ebp+ecx*8+0x13],0xffffffdd
  41c6bd:	or     DWORD PTR [eax+0x4b8ff93b],0xbff1bdce
  41c6c7:	inc    edx
  41c6c8:	(bad)  
  41c6c9:	xchg   ebx,eax
  41c6ca:	mov    al,0xfd
  41c6cc:	int    0xb0
  41c6ce:	dec    edx
  41c6cf:	push   ebx
  41c6d0:	lods   al,BYTE PTR ds:[esi]
  41c6d1:	(bad)  
  41c6d2:	xlat   BYTE PTR ds:[ebx]
  41c6d3:	mov    edx,0xb94b4428
  41c6d8:	jl     0x41c67c
  41c6da:	stc    
  41c6db:	cmc    
  41c6dc:	mov    al,0xeb
  41c6de:	cmp    eax,0xa1597f44
  41c6e3:	outs   dx,BYTE PTR ds:[esi]
  41c6e4:	sbb    esp,edi
  41c6e6:	jbe    0x41c72c
  41c6e8:	out    0x27,al
  41c6ea:	dec    ebx
  41c6eb:	xor    cl,BYTE PTR [eax+0xe]
  41c6ee:	call   0x6426315e
  41c6f3:	(bad)  
  41c6f4:	mov    fs,ebx
  41c6f6:	int    0xb4
  41c6f8:	xor    edi,DWORD PTR [eax]
  41c6fa:	jae    0x41c71e
  41c6fc:	addr16 adc eax,ebx
  41c6ff:	sub    BYTE PTR [ebp-0x38],bl
  41c702:	out    0x65,eax
  41c704:	push   edi
  41c705:	push   ss
  41c706:	inc    ebp
  41c707:	mov    BYTE PTR [esi+0x59],0x37
  41c70b:	ror    DWORD PTR [eax+0x68458b95],0xe7
  41c712:	dec    edx
  41c713:	adc    dl,BYTE PTR [esi+0x1a]
  41c716:	sbb    edi,esp
  41c718:	mov    edx,0x8bd3765c
  41c71d:	dec    esp
  41c71e:	int    0x86
  41c720:	and    eax,DWORD PTR [ecx-0x64]
  41c723:	cdq    
  41c724:	pop    ebp
  41c725:	jbe    0x41c706
  41c727:	das    
  41c728:	into   
  41c729:	(bad)  
  41c72b:	js     0x41c7a4
  41c72d:	pop    ecx
  41c72e:	jmp    0xa4d7634b
  41c733:	lods   eax,DWORD PTR ds:[esi]
  41c734:	ins    BYTE PTR es:[edi],dx
  41c735:	cmp    BYTE PTR [ebx-0x49],cl
  41c738:	jns    0x41c790
  41c73a:	sahf   
  41c73b:	xlat   BYTE PTR ds:[ebx]
  41c73c:	repnz xor bh,ch
  41c73f:	ror    DWORD PTR [eax+0x235cff34],cl
  41c745:	loope  0x41c746
  41c747:	xor    cl,BYTE PTR [esi-0x36]
  41c74a:	dec    edx
  41c74b:	pop    edi
  41c74c:	ins    BYTE PTR es:[edi],dx
  41c74d:	jae    0x41c6f0
  41c74f:	cdq    
  41c750:	or     edi,ecx
  41c752:	xchg   edi,eax
  41c753:	in     al,dx
  41c754:	mov    ebx,0xf4dfb3c8
  41c759:	sbb    DWORD PTR [ebx-0x1a350550],ebp
  41c75f:	addr16 pop esp
  41c761:	push   esp
  41c762:	mov    DWORD PTR [eax+ebx*1-0x46],esp
  41c766:	and    DWORD PTR [ebx],esi
  41c768:	add    ebx,ecx
  41c76a:	js     0x41c700
  41c76c:	lods   eax,DWORD PTR ds:[esi]
  41c76d:	jecxz  0x41c750
  41c76f:	xchg   edx,eax
  41c770:	jmp    0x2393:0xe57aadcd
  41c777:	pop    edx
  41c778:	(bad)  
  41c779:	fiadd  WORD PTR [esi+edx*8+0x74bb49ba]
  41c780:	sahf   
  41c781:	sub    BYTE PTR [eax],bh
  41c783:	shr    BYTE PTR [ebp+eiz*4-0x501cc995],cl
  41c78a:	mov    ch,0x9d
  41c78c:	xor    edx,esi
  41c78e:	in     al,0x51
  41c790:	push   edx
  41c791:	jne    0x41c7f1
  41c793:	clc    
  41c794:	test   eax,0x64c25594
  41c799:	push   ebp
  41c79a:	dec    eax
  41c79b:	shl    BYTE PTR [edx+0x6339f095],cl
  41c7a1:	sbb    al,0x52
  41c7a3:	xchg   ecx,eax
  41c7a4:	push   edx
  41c7a5:	pop    es
  41c7a6:	jns    0x41c7cb
  41c7a8:	es nop
  41c7aa:	rcl    DWORD PTR [edx-0x7b],cl
  41c7ad:	inc    ebx
  41c7ae:	(bad)  
  41c7b0:	ret    0xe86f
  41c7b3:	js     0x41c7a6
  41c7b5:	sbb    DWORD PTR [esi],esi
  41c7b7:	imul   eax,DWORD PTR [esi-0x2],0x7ef24d41
  41c7be:	mov    ebp,ebx
  41c7c0:	test   DWORD PTR [esi+eiz*2],0xf0589e1e
  41c7c7:	sbb    cl,bl
  41c7c9:	call   0x81b35413
  41c7ce:	(bad)  
  41c7cf:	fst    QWORD PTR [ebx-0x3a]
  41c7d2:	cld    
  41c7d3:	or     al,0xb4
  41c7d5:	mov    cl,BYTE PTR [ebx-0x73b469ce]
  41c7db:	aad    0x40
  41c7dd:	lock fcom QWORD PTR [eax-0x16582603]
  41c7e4:	push   esp
  41c7e5:	clc    
  41c7e6:	dec    edx
  41c7e7:	xlat   BYTE PTR ds:[ebx]
  41c7e8:	jo     0x41c815
  41c7ea:	jmp    0x34e0b835
  41c7ef:	ror    BYTE PTR [ecx-0x20f54710],cl
  41c7f5:	sub    al,0x29
  41c7f7:	stos   BYTE PTR es:[edi],al
  41c7f8:	jno    0x41c84a
  41c7fa:	int3   
  41c7fb:	dec    edx
  41c7fc:	pop    ebp
  41c7fd:	sbb    bl,bh
  41c7ff:	xor    ebx,DWORD PTR [edi]
  41c801:	mov    esi,0x544aa95b
  41c806:	test   al,0x43
  41c808:	int    0xd9
  41c80a:	shl    BYTE PTR [edi+0x2f3b1c1c],cl
  41c810:	pop    ebp
  41c811:	imul   ebx,esp,0x56
  41c814:	or     ah,BYTE PTR [ecx-0x16]
  41c817:	xlat   BYTE PTR ds:[ebx]
  41c818:	xchg   BYTE PTR [ebx-0x7],bl
  41c81b:	sbb    edi,DWORD PTR [edi]
  41c81d:	or     BYTE PTR [ecx],ch
  41c81f:	or     edi,DWORD PTR [ebp+0x5dc8bf55]
  41c825:	imul   eax,DWORD PTR [eax+edx*1+0x2e],0x1789c091
  41c82d:	pop    ebx
  41c82e:	dec    esi
  41c82f:	call   0x28ed:0xb10f318
  41c836:	retf   
  41c837:	inc    edi
  41c838:	pop    ebp
  41c839:	adc    al,0x58
  41c83b:	cmp    BYTE PTR [eax+0x71],bl
  41c83e:	cld    
  41c83f:	mov    ds:0xa7fa59f1,al
  41c844:	retf   0x8577
  41c847:	or     bl,BYTE PTR ss:[edi+0x710f6f12]
  41c84e:	in     eax,dx
  41c84f:	push   edx
  41c850:	(bad)  
  41c851:	jb     0x41c818
  41c853:	pop    ebp
  41c854:	jae    0x41c847
  41c856:	daa    
  41c857:	cmp    ch,BYTE PTR [edx+0x52a80073]
  41c85d:	mov    ds:0x8e008db3,al
  41c862:	stos   BYTE PTR es:[edi],al
  41c863:	mov    ecx,0x604987d4
  41c868:	dec    esp
  41c869:	enter  0x79c1,0xa4
  41c86d:	fstp   DWORD PTR [esi]
  41c86f:	daa    
  41c870:	inc    ebp
  41c871:	and    esi,DWORD PTR [ebx]
  41c873:	sar    BYTE PTR [eax-0x1855ab5d],cl
  41c879:	or     ecx,esp
  41c87b:	mov    ebx,0xa46deb5c
  41c880:	(bad)
  41c884:	and    edi,edi
  41c886:	cs rcr ch,cl
  41c889:	fwait
  41c88a:	sbb    eax,0xb3dcb421
  41c88f:	imul   DWORD PTR [esi-0x48]
  41c892:	jmp    0xe1fb6fb3
  41c897:	outs   dx,BYTE PTR ds:[esi]
  41c898:	cld    
  41c899:	sbb    DWORD PTR ds:0xec41bdd2,esp
  41c89f:	sar    DWORD PTR [esi],1
  41c8a1:	cld    
  41c8a2:	adc    ch,0x5d
  41c8a5:	cmp    BYTE PTR [edi-0x2fe1561a],dl
  41c8ab:	cmc    
  41c8ac:	dec    edx
  41c8ad:	inc    esi
  41c8ae:	mov    edx,0xfd87d54b
  41c8b3:	mov    ebx,DWORD PTR [ecx+0xb]
  41c8b6:	dec    edx
  41c8b7:	or     edx,DWORD PTR [edi-0x26b9948]
  41c8bd:	push   edx
  41c8be:	cmp    DWORD PTR [edi+ecx*8-0x6741d445],eax
  41c8c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8c6:	jnp    0x41c89b
  41c8c8:	xchg   ecx,eax
  41c8c9:	ds ins DWORD PTR es:[edi],dx
  41c8cb:	gs aaa 
  41c8cd:	jb     0x41c87b
  41c8cf:	xchg   ecx,eax
  41c8d0:	xor    eax,0xa4cbee23
  41c8d5:	cdq    
  41c8d6:	dec    edx
  41c8d7:	inc    eax
  41c8d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8d9:	jnp    0x41c931
  41c8db:	ins    BYTE PTR es:[edi],dx
  41c8dc:	xlat   BYTE PTR ds:[ebx]
  41c8dd:	xor    eax,DWORD PTR [edx-0x16f4a51a]
  41c8e3:	call   0x909d:0xda63185d
  41c8ea:	mov    ebx,0x35dc5d35
  41c8ef:	sbb    ah,bh
  41c8f1:	pop    esi
  41c8f2:	test   edx,ebp
  41c8f4:	clc    
  41c8f5:	pop    eax
  41c8f6:	inc    esi
  41c8f7:	dec    ebp
  41c8f8:	mov    esp,0x514f1d2a
  41c8fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8fe:	or     BYTE PTR [esi-0x333c8f57],0x5d
  41c905:	pop    ds
  41c906:	das    
  41c907:	in     eax,0xeb
  41c909:	aaa    
  41c90a:	pusha  
  41c90b:	add    dl,BYTE PTR [ebx]
  41c90d:	jp     0x41c985
  41c90f:	xor    BYTE PTR [ebx+0x59],dh
  41c912:	pop    edx
  41c913:	push   ss
  41c914:	mov    al,ds:0x5dd62b7b
  41c919:	inc    eax
  41c91a:	and    al,0xf
  41c91c:	sbb    DWORD PTR [ebp+eax*4-0x7fa62506],ebp
  41c923:	ins    DWORD PTR es:[edi],dx
  41c924:	pusha  
  41c925:	sub    ebp,DWORD PTR [eax+0x4a7fe278]
  41c92b:	xchg   edx,eax
  41c92c:	fwait
  41c92d:	xor    al,BYTE PTR [edx+ecx*8]
  41c930:	ins    DWORD PTR es:[edi],dx
  41c931:	mov    ds:0x5eaa0217,al
  41c936:	sbb    al,0x2f
  41c938:	or     edi,DWORD PTR [ecx+0x2a52f215]
  41c93e:	sar    DWORD PTR [edi+0x5d],cl
  41c941:	aaa    
  41c942:	(bad)  
  41c943:	sub    dl,BYTE PTR [ecx+0x2c]
  41c946:	rcr    DWORD PTR [ebp+0x68048630],0xc7
  41c94d:	mov    al,0xcb
  41c94f:	and    al,0x5d
  41c951:	adc    BYTE PTR [ecx+0x480cc31a],0xc4
  41c958:	rcl    DWORD PTR [edi+0x6b],0x12
  41c95c:	bound  esp,QWORD PTR [ebp-0x78172c86]
  41c962:	or     al,0xe8
  41c964:	sub    al,0x2
  41c966:	jne    0x41c91d
  41c968:	jns    0x41c8ed
  41c96a:	ficom  DWORD PTR [edx-0x6c]
  41c96d:	loopne 0x41c940
  41c96f:	jecxz  0x41c91d
  41c971:	mov    bh,0xe0
  41c973:	fsub   QWORD PTR [edi]
  41c975:	xchg   ecx,eax
  41c976:	inc    esi
  41c977:	aad    0x5f
  41c979:	add    al,0xce
  41c97b:	bound  eax,QWORD PTR [edi+eax*2-0x7]
  41c97f:	and    BYTE PTR [edx-0x60],dl
  41c982:	icebp  
  41c983:	xchg   esp,eax
  41c984:	add    ch,BYTE PTR [ebx]
  41c986:	sbb    bl,BYTE PTR [edx-0x2dd9a376]
  41c98c:	sahf   
  41c98d:	fstp   QWORD PTR [ebx-0x41]
  41c990:	push   esp
  41c991:	stos   DWORD PTR es:[edi],eax
  41c992:	pop    eax
  41c993:	mov    DWORD PTR [ebp-0x22],ebx
  41c996:	or     edx,ebp
  41c998:	inc    edx
  41c999:	xchg   ebp,eax
  41c99a:	je     0x41c91d
  41c99c:	arpl   WORD PTR ds:0x127ff6aa,ax
  41c9a2:	retf   
  41c9a3:	adc    al,0xac
  41c9a5:	and    bl,dh
  41c9a7:	test   bl,0x8a
  41c9aa:	dec    ebx
  41c9ab:	je     0x41c973
  41c9ad:	mov    bl,0x63
  41c9af:	mov    bl,0x28
  41c9b1:	fs retf 0x6bd1
  41c9b5:	fcom   DWORD PTR [edx+0x7b57aafb]
  41c9bb:	shl    BYTE PTR [edx],0x9a
  41c9be:	ret    0x5e97
  41c9c1:	mov    edi,0xe85d6ca7
  41c9c6:	mov    cl,0xea
  41c9c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9c9:	and    bh,BYTE PTR [edi+0x31ce5cd5]
  41c9cf:	ds inc ebp
  41c9d1:	cmp    DWORD PTR [ebp-0x11],edx
  41c9d4:	xor    ebp,ebx
  41c9d6:	dec    edx
  41c9d7:	and    cl,ch
  41c9d9:	cld    
  41c9da:	sub    BYTE PTR [ebx+edi*1-0x70],0x97
  41c9df:	rcr    BYTE PTR [edx+ebp*8-0x72],cl
  41c9e3:	into   
  41c9e4:	scas   al,BYTE PTR es:[edi]
  41c9e5:	data16 jmp 0x41c9c1
  41c9e8:	pop    ebp
  41c9e9:	lock xor BYTE PTR [edx-0x6d9bd029],ch
  41c9f0:	cmc    
  41c9f1:	pop    ecx
  41c9f2:	call   0x8c16:0xc5d25b51
  41c9f9:	test   DWORD PTR [edx-0x16],ebp
  41c9fc:	pop    ebp
  41c9fd:	push   esp
  41c9fe:	xor    al,0x4
  41ca00:	dec    esp
  41ca01:	pop    ebp
  41ca02:	xchg   esp,eax
  41ca03:	in     eax,dx
  41ca04:	out    0x73,eax
  41ca06:	add    DWORD PTR [eax+0x5d],edi
  41ca09:	icebp  
  41ca0a:	push   0x89539402
  41ca0f:	xor    DWORD PTR [edx+0x5c],edi
  41ca12:	int    0xd4
  41ca14:	ja     0x41ca42
  41ca16:	hlt    
  41ca17:	xor    al,0x85
  41ca19:	inc    esi
  41ca1a:	inc    ebp
  41ca1b:	iret   
  41ca1c:	dec    esp
  41ca1d:	fcmove st,st(2)
  41ca1f:	or     al,0x79
  41ca21:	mov    al,ds:0xd9561411
  41ca26:	mov    al,ds:0x5abb73ee
  41ca2b:	and    al,0x3e
  41ca2d:	push   ebx
  41ca2e:	test   edx,edx
  41ca30:	mov    esp,0x8e6f05ca
  41ca35:	xchg   esi,eax
  41ca36:	out    0x89,eax
  41ca38:	push   ecx
  41ca39:	mov    bl,0x71
  41ca3b:	pop    edx
  41ca3c:	add    DWORD PTR [eax+0x7e],ebp
  41ca3f:	shr    DWORD PTR [ecx-0x3],cl
  41ca42:	sbb    DWORD PTR [esi-0x13],edx
  41ca45:	popa   
  41ca46:	push   ecx
  41ca47:	mov    esp,0xd5e1dcf6
  41ca4c:	xchg   edi,eax
  41ca4d:	mov    bh,BYTE PTR [ebx]
  41ca4f:	sub    DWORD PTR [edi+ebp*1+0x46014055],ebx
  41ca56:	data16 mov dl,0xb3
  41ca59:	jmp    0xf83fc457
  41ca5e:	pusha  
  41ca5f:	xlat   BYTE PTR ds:[ebx]
  41ca60:	pop    ebp
  41ca61:	sbb    eax,0xd9c6fff4
  41ca66:	std    
  41ca67:	dec    edx
  41ca68:	inc    ebp
  41ca69:	mov    edi,0x67a1d214
  41ca6e:	shl    DWORD PTR [ebp-0x5f6daf8],0x85
  41ca75:	fnstsw WORD PTR [esi-0x2d]
  41ca78:	mov    gs,eax
  41ca7a:	push   0x52094834
  41ca7f:	fsubr  QWORD PTR [ecx-0xd]
  41ca82:	jno    0x41ca12
  41ca84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca85:	jno    0x41cb06
  41ca87:	les    ebx,FWORD PTR [ebp+0x79]
  41ca8a:	rcl    DWORD PTR [edx-0x2daf5836],0xb8
  41ca91:	fstp   TBYTE PTR [edx+0x67bb4c78]
  41ca97:	mov    ds:0xe799925d,eax
  41ca9c:	sahf   
  41ca9d:	sbb    eax,0x59c40cd0
  41caa2:	cmp    esp,DWORD PTR [eax+0x7b0ae905]
  41caa8:	imul   esi,DWORD PTR [esi+0x4b],0x2b
  41caac:	(bad)  
  41caad:	pop    ds
  41caae:	cli    
  41caaf:	sar    BYTE PTR [esi-0x2c2d4f92],0xd0
  41cab6:	neg    edi
  41cab8:	xor    al,bh
  41caba:	sub    esi,ebx
  41cabc:	pop    ebp
  41cabd:	imul   eax,DWORD PTR [esi],0xffffffb8
  41cac0:	or     bh,dh
  41cac2:	xor    al,0x2e
  41cac5:	inc    esi
  41cac6:	mov    al,0x57
  41cac8:	and    BYTE PTR [edi+0x37ad5678],bh
  41cace:	push   ecx
  41cacf:	fcmovb st,st(6)
  41cad1:	sub    BYTE PTR [edi-0x7ba80cee],ah
  41cad7:	xchg   esi,eax
  41cad8:	les    edx,FWORD PTR [ebp+0x5e]
  41cadb:	mov    edi,0x483c5f8a
  41cae0:	jae    0x41cb3d
  41cae2:	dec    edx
  41cae3:	aam    0xfe
  41cae5:	cld    
  41cae6:	and    ah,ah
  41cae8:	cmp    eax,0x58d3b1c9
  41caed:	pop    ecx
  41caee:	pop    ebp
  41caef:	lods   al,BYTE PTR ds:[esi]
  41caf0:	dec    ebp
  41caf1:	jp     0x41cae6
  41caf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caf4:	add    eax,0x982a8b57
  41caf9:	cmp    al,0xca
  41cafb:	xadd   DWORD PTR [ecx+0x35],ebx
  41caff:	sub    eax,edi
  41cb01:	addr16 je 0x41cb70
  41cb04:	mov    ecx,0x594e9b46
  41cb09:	enter  0x937e,0x9d
  41cb0d:	add    dh,al
  41cb0f:	outs   dx,BYTE PTR ds:[esi]
  41cb10:	ror    BYTE PTR [eax+eax*4-0x46c1c72e],0xcd
  41cb18:	or     eax,0x5f175718
  41cb1d:	in     eax,dx
  41cb1e:	or     eax,DWORD PTR [ebx+0x6f]
  41cb21:	pop    ebx
  41cb22:	xchg   BYTE PTR [edx-0x6f],dh
  41cb25:	push   edi
  41cb26:	lea    edx,[ebp+0x27559a0]
  41cb2c:	inc    edi
  41cb2d:	pop    edx
  41cb2e:	shr    bl,cl
  41cb30:	loop   0x41cb41
  41cb32:	push   esp
  41cb33:	xchg   edx,eax
  41cb34:	and    al,0x95
  41cb36:	mov    ebx,0x736aca3f
  41cb3b:	std    
  41cb3c:	dec    ebp
  41cb3d:	iret   
  41cb3e:	jl     0x41caf5
  41cb40:	jecxz  0x41cbc1
  41cb42:	jae    0x41cb57
  41cb44:	push   ss
  41cb45:	inc    esi
  41cb46:	pusha  
  41cb47:	add    DWORD PTR [ecx],esi
  41cb49:	and    DWORD PTR [esi-0x18],0xb8a74a5d
  41cb50:	mov    ecx,0xb599e406
  41cb55:	je     0x41cb8e
  41cb57:	mov    bl,BYTE PTR [ebp-0x66]
  41cb5a:	add    dh,BYTE PTR [eax]
  41cb5c:	fst    st(0)
  41cb5e:	jb     0x41caec
  41cb60:	pop    ebp
  41cb61:	ds or  eax,0xe18ffc2c
  41cb67:	icebp  
  41cb68:	cdq    
  41cb69:	mov    ds:0x62c00ecf,eax
  41cb6e:	dec    ebx
  41cb6f:	inc    ebx
  41cb70:	rcr    cl,cl
  41cb72:	xchg   ebp,eax
  41cb73:	stos   BYTE PTR es:[edi],al
  41cb74:	dec    ebp
  41cb75:	push   esp
  41cb76:	pop    esp
  41cb77:	outs   dx,BYTE PTR ds:[esi]
  41cb78:	xor    al,0x6d
  41cb7a:	daa    
  41cb7b:	push   edx
  41cb7c:	or     dl,BYTE PTR [esp+ebx*1-0x72a84245]
  41cb83:	arpl   WORD PTR [ecx+0x2f82c31e],ax
  41cb89:	lahf   
  41cb8a:	jg     0x41cbaf
  41cb8c:	or     eax,0x5d5d2a76
  41cb91:	ja     0x41cb7a
  41cb93:	in     al,dx
  41cb94:	idiv   cl
  41cb96:	add    al,0x83
  41cb98:	adc    eax,DWORD PTR [esi-0x76]
  41cb9b:	xchg   edx,eax
  41cb9c:	(bad)  
  41cb9e:	xlat   BYTE PTR ds:[ebx]
  41cb9f:	mov    al,0x4a
  41cba1:	iret   
  41cba2:	loop   0x41cbcd
  41cba4:	mov    ds:0x2a1a4ad6,al
  41cba9:	scas   eax,DWORD PTR es:[edi]
  41cbaa:	sub    al,0xdf
  41cbac:	retf   
  41cbad:	retf   
  41cbae:	and    edx,edx
  41cbb0:	cvtps2pi mm4,QWORD PTR [esi-0x284f4fff]
  41cbb7:	jae    0x41cc16
  41cbb9:	pop    ebx
  41cbba:	jmp    0x21af:0x96336741
  41cbc1:	inc    esi
  41cbc2:	jmp    0xf9f89bab
  41cbc7:	inc    esp
  41cbc8:	icebp  
  41cbc9:	call   0x74a6cbd0
  41cbce:	pop    ecx
  41cbcf:	rcl    DWORD PTR [ebp-0x68],cl
  41cbd2:	imul   esp,DWORD PTR [ebx],0xffffff8b
  41cbd5:	jmp    0x3e99:0xd9cbd214
  41cbdc:	xor    BYTE PTR [ebx],cl
  41cbde:	ror    BYTE PTR [edx+0x7e06f85d],cl
  41cbe4:	mov    ebx,0x76df0ea5
  41cbe9:	pop    ecx
  41cbea:	xchg   ebp,eax
  41cbeb:	arpl   WORD PTR [eax],dx
  41cbed:	mov    al,ds:0x9eaa8d69
  41cbf2:	out    0x13,eax
  41cbf4:	pop    ebp
  41cbf5:	or     al,BYTE PTR [edx]
  41cbf7:	jmp    0x80f5665b
  41cbfc:	add    DWORD PTR [esi+0x3f],eax
  41cbff:	adc    al,0x50
  41cc01:	in     eax,0xeb
  41cc03:	in     al,dx
  41cc04:	enter  0x8b05,0xfc
  41cc08:	loopne 0x41cc01
  41cc0a:	(bad)  
  41cc0c:	sbb    al,BYTE PTR [esi+0x4c]
  41cc0f:	cmp    eax,0x5e3a0e69
  41cc14:	dec    esp
  41cc15:	mov    dh,0x4a
  41cc17:	adc    DWORD PTR [edx-0x3],edx
  41cc1a:	add    al,0x40
  41cc1c:	mov    eax,ds:0xc5d36fcc
  41cc21:	rol    ecx,cl
  41cc23:	mov    ebp,DWORD PTR [edi]
  41cc25:	adc    ecx,DWORD PTR [edi+0x7e45bafa]
  41cc2b:	xchg   ebx,eax
  41cc2c:	int    0xc8
  41cc2e:	dec    ecx
  41cc2f:	dec    eax
  41cc30:	and    eax,0x6d3474f7
  41cc35:	dec    eax
  41cc36:	stc    
  41cc37:	cmc    
  41cc38:	pop    es
  41cc39:	jo     0x41cc09
  41cc3b:	nop
  41cc3c:	pop    ebp
  41cc3d:	mov    eax,0xadb52dd3
  41cc42:	push   ss
  41cc43:	xlat   BYTE PTR ds:[ebx]
  41cc44:	pop    ebp
  41cc45:	stos   BYTE PTR es:[edi],al
  41cc46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc47:	dec    esi
  41cc48:	loope  0x41cc7f
  41cc4a:	add    DWORD PTR [ecx],ebp
  41cc4c:	cmp    DWORD PTR [eax-0x4],ebp
  41cc4f:	lock test BYTE PTR [ecx-0x53],bl
  41cc53:	mov    ecx,0xeaefda6f
  41cc58:	pop    ebp
  41cc59:	sub    BYTE PTR [edi-0x5b69075b],al
  41cc5f:	sub    ch,BYTE PTR [eax+0x3165ea58]
  41cc65:	outs   dx,DWORD PTR ds:[esi]
  41cc66:	sub    al,0x31
  41cc68:	sbb    ch,BYTE PTR [ecx+0x1d8642fe]
  41cc6e:	dec    ebx
  41cc6f:	xor    dh,ch
  41cc71:	jl     0x41cc93
  41cc73:	pop    eax
  41cc74:	stos   DWORD PTR es:[edi],eax
  41cc75:	mov    ebx,0x5b85d360
  41cc7a:	cmp    eax,0x7617153a
  41cc7f:	pusha  
  41cc80:	push   esp
  41cc81:	aam    0x11
  41cc83:	inc    edi
  41cc84:	jns    0x41cc4c
  41cc86:	(bad)  
  41cc87:	sar    BYTE PTR ds:0x2d9a7e38,cl
  41cc8d:	jae    0x41cc1f
  41cc8f:	mov    ebx,edi
  41cc91:	sbb    al,0x4b
  41cc93:	add    esi,eax
  41cc95:	mov    edi,0x8c33d263
  41cc9a:	dec    ebx
  41cc9b:	push   ebx
  41cc9c:	sti    
  41cc9d:	jge    0x41cc64
  41cc9f:	or     BYTE PTR [edi+0x3f],bl
  41cca2:	fcmovbe st,st(2)
  41cca4:	enter  0x5334,0xee
  41cca8:	add    ch,BYTE PTR [edx+0x11]
  41ccab:	and    esp,DWORD PTR [ebp+0x2a]
  41ccae:	cmp    dl,bh
  41ccb0:	or     ebp,DWORD PTR [ecx-0x28]
  41ccb3:	ds fucomp st(0)
  41ccb6:	std    
  41ccb7:	xchg   DWORD PTR [ebx+0x5e],esp
  41ccba:	pushf  
  41ccbb:	push   ss
  41ccbc:	out    dx,al
  41ccbd:	ja     0x41cc54
  41ccbf:	add    eax,DWORD PTR [ebp+0x17]
  41ccc2:	stos   DWORD PTR es:[edi],eax
  41ccc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccc4:	and    eax,0x512d9e9c
  41ccc9:	push   0x31
  41cccb:	push   eax
  41cccc:	and    ecx,edx
  41ccce:	mov    bh,BYTE PTR [ebp-0x2c887997]
  41ccd4:	ror    bl,cl
  41ccd6:	pop    esp
  41ccd7:	add    dl,ch
  41ccd9:	js     0x41ccac
  41ccdb:	adc    bl,BYTE PTR [ebp+0xa]
  41ccde:	out    dx,al
  41ccdf:	pushf  
  41cce0:	sbb    edx,esi
  41cce2:	sbb    eax,0x8846005e
  41cce7:	mov    edx,0x943a34a0
  41ccec:	jge    0x41ccb3
  41ccee:	daa    
  41ccef:	ret    
  41ccf0:	sbb    eax,esi
  41ccf2:	mov    dl,0x53
  41ccf4:	jg     0x41ccca
  41ccf6:	dec    esp
  41ccf7:	mov    ch,0xfc
  41ccf9:	pop    ecx
  41ccfa:	xor    al,dl
  41ccfc:	sub    bh,BYTE PTR [ecx]
  41ccfe:	retf   
  41ccff:	push   0xcf49be21
  41cd04:	fiadd  DWORD PTR [ebx+ecx*4]
  41cd07:	jo     0x41cd26
  41cd09:	cs and al,0xa0
  41cd0c:	jge    0x41cd6a
  41cd0e:	cmp    dl,ah
  41cd10:	sub    BYTE PTR [esi+0x28185200],cl
  41cd16:	cmp    DWORD PTR [edi+0x2c78d45d],esp
  41cd1c:	in     al,dx
  41cd1d:	sub    eax,0x59dfc537
  41cd22:	push   es
  41cd23:	ins    BYTE PTR es:[edi],dx
  41cd24:	shr    DWORD PTR [eax+0x4dc2c8ac],cl
  41cd2a:	dec    ebx
  41cd2b:	push   ecx
  41cd2c:	push   eax
  41cd2d:	cmp    BYTE PTR [ebp-0x2e],dh
  41cd30:	xor    al,0x21
  41cd32:	int    0x44
  41cd34:	jb     0x41cd8f
  41cd36:	jb     0x41cd46
  41cd38:	mov    dl,0x35
  41cd3a:	das    
  41cd3b:	inc    edx
  41cd3c:	inc    ebx
  41cd3d:	ins    DWORD PTR es:[edi],dx
  41cd3e:	dec    ebx
  41cd3f:	(bad)  
  41cd40:	xchg   ebp,eax
  41cd41:	adc    DWORD PTR [edi+0x6df55eb4],ebx
  41cd47:	rcl    DWORD PTR [edi-0x28],cl
  41cd4a:	int3   
  41cd4b:	rdmsr  
  41cd4d:	sub    al,0x7d
  41cd4f:	rcr    DWORD PTR [ebp-0x34],0x42
  41cd53:	ret    0xf4f5
  41cd56:	xor    dh,cl
  41cd58:	sbb    eax,0x8a4e2459
  41cd5d:	test   al,0x45
  41cd5f:	in     al,0x11
  41cd61:	popf   
  41cd62:	(bad)  [esi-0x7b50d7c]
  41cd68:	ss jns 0x41cd75
  41cd6b:	fnsave [ecx]
  41cd6d:	div    BYTE PTR [eax-0x336c112d]
  41cd73:	mov    esp,0x43725b7a
  41cd78:	jne    0x41cd56
  41cd7a:	dec    edx
  41cd7b:	test   DWORD PTR [eax],ebx
  41cd7d:	adc    DWORD PTR fs:[edx],0xffffff92
  41cd81:	mov    eax,ds:0xa5e8d2b6
  41cd86:	imul   ecx,ecx,0xffffffe5
  41cd89:	aas    
  41cd8a:	(bad)  
  41cd8b:	dec    esi
  41cd8c:	js     0x41cddd
  41cd8e:	lea    ecx,[ebp+0x3b]
  41cd91:	clc    
  41cd92:	jmp    0xf64448a
  41cd97:	or     eax,0xafc6f15
  41cd9c:	inc    edi
  41cd9d:	add    ecx,DWORD PTR [ebx-0x51]
  41cda0:	shr    DWORD PTR [ecx+ebx*8+0x54262fe6],1
  41cda7:	sub    DWORD PTR [edx+0x74567d1a],0xffffffad
  41cdae:	adc    BYTE PTR [bx+di],bl
  41cdb1:	dec    esi
  41cdb2:	mov    ebx,0x5f4732d2
  41cdb7:	inc    esi
  41cdb8:	mov    esp,0x5da82d35
  41cdbd:	cmp    DWORD PTR [esi+0x54],ebx
  41cdc0:	sub    esi,DWORD PTR [ecx+0x586b68df]
  41cdc6:	jo     0x41cd7c
  41cdc8:	adc    eax,DWORD PTR [edi-0x69da10c7]
  41cdce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdcf:	int    0x5d
  41cdd1:	xor    al,0xed
  41cdd3:	xor    BYTE PTR [ebx],ch
  41cdd5:	dec    edi
  41cdd6:	inc    dx
  41cdd8:	xor    eax,DWORD PTR [esi+0x77]
  41cddb:	shl    al,1
  41cddd:	sahf   
  41cdde:	sti    
  41cddf:	out    0x24,eax
  41cde1:	scas   eax,DWORD PTR es:[edi]
  41cde2:	dec    edx
  41cde3:	xor    bh,0x3f
  41cde6:	xchg   ebx,eax
  41cde7:	mov    dl,0x83
  41cde9:	call   0x2af89e44
  41cdee:	push   eax
  41cdef:	mov    WORD PTR [ebx-0x6214eac4],fs
  41cdf5:	in     eax,0x1
  41cdf7:	adc    BYTE PTR [ebp-0x10],bl
  41cdfa:	fld    TBYTE PTR [eax-0x5b]
  41cdfd:	xlat   BYTE PTR ds:[ebx]
  41cdfe:	push   eax
  41cdff:	(bad)  
  41ce00:	and    eax,DWORD PTR [esi+0x13]
  41ce03:	push   eax
  41ce04:	mov    esi,0xbb14db8d
  41ce09:	scas   al,BYTE PTR es:[edi]
  41ce0a:	fsqrt  
  41ce0c:	outs   dx,BYTE PTR ds:[esi]
  41ce0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce0e:	cs xor eax,0x86f7ba6c
  41ce14:	add    dh,ah
  41ce16:	inc    ebx
  41ce17:	out    dx,eax
  41ce18:	sbb    BYTE PTR [esi-0x3f],al
  41ce1b:	stos   BYTE PTR es:[edi],al
  41ce1c:	aam    0xe9
  41ce1e:	push   cs
  41ce1f:	pop    eax
  41ce20:	popa   
  41ce21:	jae    0x41ce64
  41ce23:	fxch   st(7)
  41ce25:	mov    bh,0x8a
  41ce27:	repnz in eax,0xc7
  41ce2a:	mov    esp,0x5aa49c67
  41ce2f:	ret    
  41ce30:	hlt    
  41ce31:	shr    DWORD PTR [edx],1
  41ce33:	mov    ebx,0xdf66b125
  41ce38:	dec    esp
  41ce39:	cmp    al,0xd1
  41ce3b:	xchg   edx,eax
  41ce3c:	icebp  
  41ce3d:	fistp  QWORD PTR [edx]
  41ce3f:	dec    esi
  41ce40:	shr    BYTE PTR [edi],cl
  41ce42:	dec    ebx
  41ce43:	loopne 0x41ce11
  41ce45:	cmp    DWORD PTR [esi+0x6d],ebp
  41ce48:	push   ss
  41ce49:	inc    ebp
  41ce4a:	fcmovnbe st,st(2)
  41ce4c:	loop   0x41cec2
  41ce4e:	fwait
  41ce4f:	stc    
  41ce50:	xor    dh,BYTE PTR [edx]
  41ce52:	(bad)  
  41ce53:	sbb    ebx,DWORD PTR [ebp-0x68]
  41ce56:	fdivr  QWORD PTR [ebp+0x5e0e9187]
  41ce5c:	std    
  41ce5d:	pop    edx
  41ce5e:	in     eax,dx
  41ce5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce60:	sub    al,BYTE PTR [eax]
  41ce62:	jge    0x41ce61
  41ce64:	fst    QWORD PTR [edi]
  41ce66:	xor    esi,DWORD PTR [edx-0x4f6089a3]
  41ce6c:	pop    eax
  41ce6d:	cmp    edx,DWORD PTR [edx+0x525ad56b]
  41ce73:	les    edi,FWORD PTR [eax]
  41ce75:	sub    al,0x7c
  41ce77:	cs std 
  41ce79:	pop    esi
  41ce7a:	les    esp,FWORD PTR [esi-0x5d1ed8b0]
  41ce80:	and    ch,BYTE PTR [edi+0x4b]
  41ce83:	xchg   ebx,eax
  41ce84:	xchg   ebp,eax
  41ce85:	leave  
  41ce86:	inc    edx
  41ce87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce88:	adc    DWORD PTR [ebx-0x1a],ebx
  41ce8b:	aam    0x8
  41ce8d:	das    
  41ce8e:	xor    ch,BYTE PTR [ebx-0x1b]
  41ce91:	mov    ebx,es
  41ce93:	xchg   ebp,eax
  41ce94:	pop    ebp
  41ce95:	in     eax,0x9e
  41ce97:	dec    ecx
  41ce98:	scas   al,BYTE PTR es:[edi]
  41ce99:	imul   eax,DWORD PTR [edi],0x4cb9ec0b
  41ce9f:	int3   
  41cea0:	pop    edx
  41cea1:	cli    
  41cea2:	out    dx,al
  41cea3:	les    ebx,FWORD PTR [ebp+0x2a]
  41cea6:	mov    esp,0x50c42498
  41ceab:	out    0x4c,al
  41cead:	push   esi
  41ceae:	(bad)  
  41ceaf:	lods   eax,DWORD PTR ds:[esi]
  41ceb0:	test   al,0x59
  41ceb2:	add    cl,BYTE PTR [edi-0x63]
  41ceb5:	sub    edx,0xffffffd3
  41ceb8:	pusha  
  41ceb9:	into   
  41ceba:	imul   ebp,DWORD PTR [edi-0x68],0xffbead52
  41cec1:	mov    ebx,0x67e58647
  41cec6:	retf   
  41cec7:	xlat   BYTE PTR ds:[ebx]
  41cec8:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceca:	les    ebx,FWORD PTR [esi-0x6a06a79f]
  41ced0:	call   0xeebd:0xd0850c56
  41ced7:	push   ds
  41ced8:	mov    ds:0x83224b6a,al
  41cedd:	mov    edx,0x544505d
  41cee2:	add    dl,dl
  41cee4:	xor    eax,0xd989c4fc
  41cee9:	push   esi
  41ceea:	cwde   
  41ceeb:	scas   al,BYTE PTR es:[edi]
  41ceec:	pop    esp
  41ceed:	mov    ch,0xb
  41ceef:	pop    esp
  41cef0:	pop    ds
  41cef1:	(bad)  
  41cef2:	cld    
  41cef3:	int    0x15
  41cef5:	ins    DWORD PTR es:[edi],dx
  41cef6:	add    ecx,edi
  41cef8:	cmp    al,0xaa
  41cefa:	into   
  41cefb:	mov    al,ds:0x5230e619
  41cf00:	std    
  41cf01:	dec    ebp
  41cf02:	mov    bh,BYTE PTR [eax]
  41cf04:	pop    ebp
  41cf05:	sbb    ecx,edx
  41cf07:	push   0x3406cb88
  41cf0c:	xchg   BYTE PTR [ecx-0x44],bl
  41cf0f:	adc    eax,0x66e51267
  41cf14:	dec    eax
  41cf15:	sbb    cl,BYTE PTR [ebx+0x39]
  41cf18:	lods   al,BYTE PTR ds:[esi]
  41cf19:	ins    DWORD PTR es:[edi],dx
  41cf1a:	ja     0x41cf35
  41cf1c:	gs sub edi,esi
  41cf1f:	mov    edi,0xd2177b7d
  41cf24:	sub    DWORD PTR [ecx+0x1b],edi
  41cf27:	pop    es
  41cf28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf29:	popf   
  41cf2a:	lahf   
  41cf2b:	xchg   esp,eax
  41cf2c:	pop    ebp
  41cf2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf2e:	shr    bl,cl
  41cf30:	fcomp  QWORD PTR [edx]
  41cf32:	mov    ah,0x67
  41cf34:	dec    edi
  41cf35:	inc    esi
  41cf36:	push   es
  41cf37:	add    BYTE PTR [edi-0x1a],dh
  41cf3a:	js     0x41cf77
  41cf3c:	pop    eax
  41cf3d:	data16 (bad) [edi-0x45]
  41cf41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf42:	dec    ebx
  41cf43:	mov    eax,0xb2cecbc9
  41cf48:	jo     0x41ced2
  41cf4a:	nop
  41cf4b:	xchg   edi,eax
  41cf4c:	ds sti 
  41cf4e:	xor    DWORD PTR [edx-0x6e],0x66d236d9
  41cf55:	add    eax,0x354b78ac
  41cf5a:	fldl2t 
  41cf5c:	mov    ds:0x3a1e4ab1,al
  41cf61:	retf   
  41cf62:	mov    DWORD PTR [ebx],esi
  41cf64:	ret    0x1ffd
  41cf67:	rcl    BYTE PTR [esi+0x19e39a2],cl
  41cf6d:	sub    edx,DWORD PTR [ecx]
  41cf6f:	shl    BYTE PTR [esi-0x1e07b483],0xc0
  41cf76:	idiv   DWORD PTR [eax+0x3f]
  41cf79:	sbb    DWORD PTR [ebp-0x28efb82e],ebx
  41cf7f:	leave  
  41cf80:	sub    BYTE PTR [ebp+0x4e5de1f4],0xf2
  41cf87:	aas    
  41cf88:	or     eax,0xeb02f5f1
  41cf8d:	pop    ecx
  41cf8e:	or     BYTE PTR [eax-0x7b],ch
  41cf91:	outs   dx,BYTE PTR ds:[esi]
  41cf92:	inc    edx
  41cf93:	(bad)  [ebx]
  41cf95:	arpl   WORD PTR [ebx-0x2a],cx
  41cf98:	(bad)  
  41cf99:	sub    ebp,DWORD PTR [edx-0xf]
  41cf9c:	jp     0x41cfe5
  41cf9e:	dec    edx
  41cf9f:	rcl    DWORD PTR [eax+0x1b33d4af],cl
  41cfa5:	dec    ecx
  41cfa6:	pop    esp
  41cfa7:	mov    dl,0x24
  41cfa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfaa:	dec    ecx
  41cfab:	push   ds
  41cfac:	addr16 jnp 0x41cf69
  41cfaf:	dec    esi
  41cfb0:	fisttp QWORD PTR [ecx+0x59abe130]
  41cfb6:	inc    edx
  41cfb7:	pop    edi
  41cfb8:	int    0x81
  41cfba:	mov    al,ds:0x4b072d57
  41cfbf:	mov    edx,0x63cc0801
  41cfc4:	outs   dx,DWORD PTR ds:[esi]
  41cfc5:	mov    al,0x39
  41cfc7:	aad    0x8e
  41cfc9:	xor    al,0x54
  41cfcb:	sub    dl,BYTE PTR [eax-0x7]
  41cfce:	add    eax,0x4b4097a8
  41cfd3:	dec    edx
  41cfd4:	popa   
  41cfd5:	retf   
  41cfd6:	fmul   st,st(1)
  41cfd8:	in     eax,0x45
  41cfda:	cmp    BYTE PTR es:[eax],ah
  41cfdd:	inc    esi
  41cfde:	cmp    bh,BYTE PTR [edi+0x60]
  41cfe1:	leave  
  41cfe2:	xchg   ebx,eax
  41cfe3:	xchg   ebx,eax
  41cfe4:	in     eax,dx
  41cfe5:	inc    ecx
  41cfe6:	out    0xec,eax
  41cfe8:	outs   dx,BYTE PTR ds:[esi]
  41cfe9:	pop    esi
  41cfea:	in     eax,dx
  41cfeb:	idiv   BYTE PTR [ebp-0x28]
  41cfee:	sub    edx,ebp
  41cff0:	mov    ch,0xb0
  41cff2:	data16 mov bl,0x21
  41cff5:	mov    ah,0x95
  41cff7:	rcr    BYTE PTR [edx+0x20104e5c],cl
  41cffd:	push   ds
  41cffe:	loop   0x41cfe4
  41d000:	push   eax
  41d001:	sbb    BYTE PTR [esi+ecx*1+0x11d4142d],cl
  41d008:	or     DWORD PTR [esi+0x63],0xdf5ad52b
  41d00f:	mov    bh,0x1e
  41d011:	xor    BYTE PTR [ebp+0x255aed1b],cl
  41d017:	push   eax
  41d018:	(bad)
  41d01b:	sbb    eax,0x7bbeda2e
  41d020:	push   eax
  41d021:	push   esi
  41d022:	add    al,0x38
  41d024:	adc    ebx,DWORD PTR [eax-0x5c]
  41d027:	jb     0x41d037
  41d029:	shl    DWORD PTR [esi],cl
  41d02b:	mov    DWORD PTR [ebp+0x5d970c99],edi
  41d031:	jo     0x41d00e
  41d033:	mov    ch,0xe4
  41d035:	or     al,0xf9
  41d037:	mov    ebx,0x747965d1
  41d03c:	jo     0x41d097
  41d03e:	push   edx
  41d03f:	cli    
  41d040:	je     0x41d087
  41d042:	xchg   ecx,eax
  41d043:	dec    edi
  41d044:	pop    ebp
  41d045:	or     bh,BYTE PTR [esp+ecx*8+0x3d]
  41d049:	repz jns 0x41cfee
  41d04c:	pop    esp
  41d04d:	push   ebp
  41d04e:	or     eax,0x8e87ddb1
  41d053:	adc    BYTE PTR [edx+0x75],dh
  41d056:	sbb    edi,DWORD PTR [ecx]
  41d058:	adc    eax,0x5d7db03a
  41d05d:	mov    al,ds:0x23316bcd
  41d062:	das    
  41d063:	xor    al,0x59
  41d065:	push   esi
  41d066:	mov    ah,0x23
  41d068:	(bad)  
  41d069:	fldcw  WORD PTR [ecx+0x7e]
  41d06c:	cmp    BYTE PTR [ebx-0x48a29a52],ch
  41d072:	daa    
  41d073:	ins    DWORD PTR es:[edi],dx
  41d074:	rol    eax,cl
  41d076:	or     BYTE PTR [esi+0xd],cl
  41d079:	ja     0x41d0de
  41d07b:	cli    
  41d07c:	fstp   QWORD PTR ds:0xb38f8dbb
  41d082:	mov    eax,0xe6615d7c
  41d087:	jne    0x41d0f5
  41d089:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d08a:	mov    cl,0xc8
  41d08c:	push   ecx
  41d08d:	pop    ecx
  41d08e:	bound  ebx,QWORD PTR [ebp-0x5e7b3aed]
  41d094:	fsub   QWORD PTR [esi-0x370de2b6]
  41d09a:	into   
  41d09b:	je     0x41d0b2
  41d09d:	push   ebx
  41d09e:	pop    ecx
  41d09f:	shl    DWORD PTR [ebx+0x20],cl
  41d0a2:	loopne 0x41d110
  41d0a4:	ins    BYTE PTR es:[edi],dx
  41d0a5:	push   ebx
  41d0a6:	mov    al,ds:0x3e635d04
  41d0ab:	lock stos DWORD PTR es:[edi],eax
  41d0ad:	cmp    DWORD PTR [esi+0x4b],eax
  41d0b0:	cmp    al,0x46
  41d0b2:	rol    DWORD PTR [edx],1
  41d0b4:	mov    al,0x1d
  41d0b6:	sub    BYTE PTR [ecx],ch
  41d0b8:	add    eax,0x221e4845
  41d0bd:	rcl    BYTE PTR [ecx-0x7e27223c],1
  41d0c3:	out    0x15,al
  41d0c5:	inc    esi
  41d0c6:	test   eax,0xf52fff1b
  41d0cb:	inc    ecx
  41d0cc:	or     BYTE PTR [esi+0x4b],0x8b
  41d0d0:	sub    DWORD PTR [esi],ecx
  41d0d2:	jo     0x41d11b
  41d0d4:	or     eax,0x48a5d232
  41d0da:	add    eax,DWORD PTR [esi+ebp*2+0x5d991117]
  41d0e1:	cld    
  41d0e2:	xchg   DWORD PTR [eax],ecx
  41d0e4:	in     al,dx
  41d0e5:	and    al,BYTE PTR [ebx+eax*8]
  41d0e8:	jnp    0x41d143
  41d0ea:	adc    dh,BYTE PTR [ecx+0x47]
  41d0ed:	jle    0x41d161
  41d0ef:	das    
  41d0f0:	mov    ecx,0xadc4ae5
  41d0f5:	outs   dx,DWORD PTR ds:[esi]
  41d0f6:	adc    esp,DWORD PTR [eax-0x2dae221a]
  41d0fc:	cmp    bl,BYTE PTR [edx-0x3f]
  41d0ff:	pop    edx
  41d100:	retf   
  41d101:	xchg   esi,eax
  41d102:	imul   esp,esi,0xc7df905d
  41d108:	ret    
  41d109:	pop    ebx
  41d10a:	pop    esp
  41d10b:	test   al,0x83
  41d10d:	pop    ecx
  41d10e:	inc    esp
  41d10f:	jb     0x41d187
  41d111:	lods   al,BYTE PTR ds:[esi]
  41d112:	pop    edx
  41d113:	inc    eax
  41d114:	rcl    BYTE PTR [ebx+ebx*2],1
  41d117:	lods   al,BYTE PTR ds:[esi]
  41d118:	in     eax,0x85
  41d11a:	add    ch,BYTE PTR [edx]
  41d11c:	dec    ebp
  41d11d:	xor    ecx,DWORD PTR [ebx+0x2b]
  41d120:	stos   BYTE PTR es:[edi],al
  41d121:	call   0xd2fd:0x7cd7cd88
  41d128:	cmp    bl,BYTE PTR [ebp+0x5d]
  41d12b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d12c:	sbb    edi,edx
  41d12e:	pop    eax
  41d12f:	aaa    
  41d130:	pop    esp
  41d131:	js     0x41d0cc
  41d133:	aas    
  41d134:	pop    ecx
  41d135:	jbe    0x41d0e4
  41d137:	cmp    DWORD PTR [ecx],ebx
  41d139:	mov    ch,0x14
  41d13b:	shr    BYTE PTR [ebp-0x5b],cl
  41d13e:	cdq    
  41d13f:	(bad)  
  41d141:	test   eax,0xbc501ec
  41d146:	dec    ebx
  41d147:	call   DWORD PTR [ebx]
  41d149:	dec    edi
  41d14a:	or     cl,BYTE PTR [esi+edi*1]
  41d14d:	mov    fs,WORD PTR [edi+0x685988c4]
  41d153:	xchg   ebx,eax
  41d154:	icebp  
  41d155:	repz ja 0x41d111
  41d158:	mov    eax,ds:0x5dff5965
  41d15d:	sar    BYTE PTR [edx],cl
  41d15f:	add    eax,0x5db0159f
  41d164:	mov    edi,0x1c37675e
  41d169:	das    
  41d16a:	int3   
  41d16b:	repnz push 0x62
  41d16e:	jmp    0x1648:0x20a55d46
  41d175:	popa   
  41d176:	ss and al,0xe0
  41d179:	push   esp
  41d17a:	loope  0x41d17a
  41d17c:	data16 fxch st(5)
  41d17f:	sbb    ah,0x92
  41d182:	je     0x41d11d
  41d184:	push   edx
  41d185:	jbe    0x41d1d6
  41d187:	or     DWORD PTR [eax+0x3665f769],ebx
  41d18d:	jmp    0x41d1e9
  41d18f:	sub    DWORD PTR [edx-0x26],edi
  41d192:	mov    dl,0xdd
  41d194:	out    dx,al
  41d195:	fistp  WORD PTR [edx+0xa]
  41d198:	mov    dh,0x1f
  41d19a:	pop    ebp
  41d19b:	push   ecx
  41d19c:	add    ebx,0xffffff8a
  41d19f:	push   0x754b5fe2
  41d1a4:	dec    edi
  41d1a5:	stc    
  41d1a6:	push   esi
  41d1a7:	aas    
  41d1a8:	mov    bh,0x2c
  41d1aa:	je     0x41d17f
  41d1ac:	push   cs
  41d1ad:	dec    ebp
  41d1ae:	mov    ds:0xfbae5579,eax
  41d1b3:	in     al,0x56
  41d1b5:	dec    edi
  41d1b6:	in     al,dx
  41d1b7:	imul   esi,DWORD PTR [ebx],0xffffff82
  41d1ba:	fldcw  WORD PTR [ecx-0x5a8ab9b6]
  41d1c0:	inc    esi
  41d1c1:	cdq    
  41d1c2:	lods   al,BYTE PTR ds:[esi]
  41d1c3:	rol    BYTE PTR [ecx+0x964a5b5],cl
  41d1c9:	mov    dl,bh
  41d1cb:	ret    0x6751
  41d1ce:	jo     0x41d199
  41d1d0:	ja     0x41d229
  41d1d2:	(bad)  
  41d1d3:	jmp    0x41d1c0
  41d1d5:	(bad)  
  41d1d6:	jmp    0x1ad2:0xb4c30f4f
  41d1dd:	in     eax,0xe8
  41d1df:	addr16 stc 
  41d1e1:	mov    DWORD PTR [edx],edi
  41d1e3:	xchg   ecx,eax
  41d1e4:	pop    ebp
  41d1e5:	loopne 0x41d1c2
  41d1e7:	jns    0x41d200
  41d1e9:	push   eax
  41d1ea:	pop    es
  41d1eb:	adc    dl,BYTE PTR [ecx+0x6f]
  41d1ee:	(bad)  
  41d1ef:	lahf   
  41d1f0:	cmp    al,0x46
  41d1f2:	xchg   edi,eax
  41d1f3:	jae    0x41d17b
  41d1f5:	jle    0x41d24e
  41d1f7:	push   esp
  41d1f8:	pop    ebp
  41d1f9:	dec    ebp
  41d1fa:	or     DWORD PTR [eax+eax*8-0x6a],eax
  41d1fe:	cdq    
  41d1ff:	pusha  
  41d200:	test   al,0x40
  41d202:	add    ebx,DWORD PTR [ebx]
  41d204:	mov    fs,WORD PTR [edx+0x4b]
  41d207:	mov    DWORD PTR [ebx+0x24],0xcd5ebddc
  41d20e:	aad    0x39
  41d210:	popf   
  41d211:	and    DWORD PTR [edi+ebp*2+0x3ca6f7ca],0x1e
  41d219:	inc    esi
  41d21a:	push   0x6b
  41d21c:	icebp  
  41d21d:	data16 or al,0x0
  41d220:	gs push 0xffffffc3
  41d223:	sbb    BYTE PTR [ebp+0xa],bl
  41d226:	jbe    0x41d205
  41d228:	stos   WORD PTR es:[edi],ax
  41d22a:	sbb    ebx,DWORD PTR [eax+0x418a546b]
  41d230:	mov    dh,0x19
  41d232:	shr    BYTE PTR [edx+0x68],cl
  41d235:	iret   
  41d236:	out    dx,eax
  41d237:	repnz pop ebp
  41d239:	outs   dx,DWORD PTR ds:[esi]
  41d23a:	dec    esp
  41d23b:	jp     0x41d25b
  41d23d:	adc    BYTE PTR [edx-0x4],ah
  41d240:	xchg   ebp,eax
  41d241:	jno    0x41d260
  41d243:	inc    eax
  41d244:	pop    ebp
  41d245:	sub    al,0x89
  41d247:	push   edi
  41d248:	imul   ebx,DWORD PTR [edx+eax*1],0x73
  41d24c:	pop    ebp
  41d24d:	or     al,0xc7
  41d24f:	jl     0x41d215
  41d251:	ins    BYTE PTR es:[edi],dx
  41d252:	xchg   ebp,eax
  41d253:	sub    ecx,DWORD PTR [esi-0x585ffea7]
  41d259:	xchg   edi,eax
  41d25a:	xor    eax,0x55cdc5a2
  41d25f:	jbe    0x41d27e
  41d261:	and    ebx,eax
  41d263:	in     eax,0xba
  41d265:	xchg   ecx,eax
  41d266:	mov    BYTE PTR [edx],bl
  41d268:	xchg   DWORD PTR [ecx-0x6e],ebx
  41d26b:	inc    ebx
  41d26c:	(bad)  
  41d26d:	loope  0x41d215
  41d26f:	fnstenv [ebp+0xf094b7e]
  41d275:	stos   BYTE PTR es:[edi],al
  41d276:	xor    ebp,edi
  41d278:	xor    DWORD PTR [ecx-0x79812dd3],0xffffffee
  41d27f:	shl    DWORD PTR [edi+ebp*8+0x3856655d],1
  41d286:	inc    ebp
  41d287:	jl     0x41d2c2
  41d289:	(bad)  
  41d28a:	cmp    cl,dh
  41d28c:	cmc    
  41d28d:	shr    BYTE PTR [edi],0xd2
  41d290:	fmul   DWORD PTR [edx]
  41d292:	rcl    DWORD PTR [esi+eax*4-0x50de6b26],cl
  41d299:	ret    0x5272
  41d29c:	pop    ebp
  41d29d:	add    DWORD PTR [eax],edx
  41d29f:	leave  
  41d2a0:	loopne 0x41d2e3
  41d2a2:	cmp    BYTE PTR ss:[ebp+0x67],bl
  41d2a6:	sub    eax,0xeb1e1df9
  41d2ab:	lods   al,BYTE PTR ds:[esi]
  41d2ac:	pop    cx
  41d2ae:	and    al,0x66
  41d2b0:	xchg   ebx,eax
  41d2b1:	out    dx,eax
  41d2b2:	test   al,0xe7
  41d2b4:	aaa    
  41d2b5:	loop   0x41d301
  41d2b7:	aaa    
  41d2b8:	fist   WORD PTR [ebp*4-0x85cda37]
  41d2bf:	inc    edi
  41d2c0:	cmc    
  41d2c1:	pop    ecx
  41d2c2:	int    0xc3
  41d2c4:	jp     0x41d2af
  41d2c6:	add    eax,0x4a8428e1
  41d2cb:	cmp    DWORD PTR ds:0x3df0ac4e,esi
  41d2d1:	dec    edx
  41d2d2:	stc    
  41d2d3:	rol    DWORD PTR [edi+ecx*2-0x52],1
  41d2d7:	mov    es,WORD PTR [ebx]
  41d2d9:	mov    BYTE PTR [ebx+0x55c91bfc],al
  41d2df:	mov    ah,0xe0
  41d2e1:	adc    eax,0xd1882783
  41d2e6:	or     eax,0x67596e5a
  41d2eb:	pop    ebp
  41d2ec:	mov    ds:0x3d6c4442,eax
  41d2f1:	sbb    BYTE PTR [ebx+0x6d],cl
  41d2f4:	shl    BYTE PTR cs:[ecx-0x7305031b],0xcd
  41d2fc:	fs enter 0xcdac,0xef
  41d301:	test   BYTE PTR [ebx-0x2b],dh
  41d304:	pop    ebp
  41d305:	mov    WORD PTR [eax+0x4aea34d5],?
  41d30b:	psadbw mm2,QWORD PTR [edx]
  41d30e:	adc    DWORD PTR [ebp+0x43],eax
  41d311:	dec    ebp
  41d312:	or     ebx,esp
  41d314:	fwait
  41d315:	push   ds
  41d316:	sub    dl,cl
  41d318:	ret    0x41f9
  41d31b:	(bad)  
  41d31c:	in     eax,dx
  41d31d:	push   edx
  41d31e:	pop    esp
  41d31f:	aas    
  41d320:	pop    ebp
  41d321:	mov    dh,0xb6
  41d323:	data16 sub cl,BYTE PTR [edi]
  41d326:	emms   
  41d328:	mov    ch,0x58
  41d32a:	xor    BYTE PTR [ebx],cl
  41d32c:	(bad)  
  41d32d:	inc    ebx
  41d32e:	jl     0x41d2e9
  41d330:	push   ebx
  41d331:	pushf  
  41d332:	mov    ebx,0xe6040002
  41d337:	pop    ebx
  41d338:	push   esi
  41d339:	xor    ch,bl
  41d33b:	ins    DWORD PTR es:[edi],dx
  41d33c:	aas    
  41d33d:	mov    esi,0xc07a57ca
  41d342:	into   
  41d343:	shr    BYTE PTR [ebx],cl
  41d345:	aad    0x35
  41d347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d348:	std    
  41d349:	pop    ss
  41d34a:	rcl    BYTE PTR [ebp+0x54],cl
  41d34d:	jns    0x41d361
  41d34f:	lea    ebp,[ebp-0x62454b27]
  41d355:	xor    DWORD PTR [ebx+edx*8+0x73],esp
  41d359:	scas   eax,DWORD PTR es:[edi]
  41d35a:	lods   eax,DWORD PTR ds:[esi]
  41d35b:	pop    edi
  41d35c:	sbb    DWORD PTR [edi-0x4d12ebae],0x846acf49
  41d366:	inc    esp
  41d367:	cdq    
  41d368:	pushf  
  41d369:	mov    ebp,edi
  41d36b:	jne    0x41d395
  41d36d:	ja     0x41d39a
  41d36f:	ss and al,0x59
  41d372:	xor    eax,0xe291a96c
  41d377:	nop
  41d378:	cmp    al,0xa6
  41d37a:	push   esp
  41d37b:	push   ds
  41d37c:	pop    ebp
  41d37d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d37e:	pop    ebx
  41d37f:	add    dl,BYTE PTR ds:0xdd0c8c0f
  41d385:	icebp  
  41d386:	scas   al,BYTE PTR es:[edi]
  41d387:	rcl    BYTE PTR [esi],cl
  41d389:	(bad)
  41d38c:	leave  
  41d38d:	ret    0x8e09
  41d390:	pop    esp
  41d391:	sub    dl,BYTE PTR [eax-0x39d9d91c]
  41d397:	mov    bl,0x8f
  41d399:	stc    
  41d39a:	(bad)  [eax]
  41d39c:	pop    ebp
  41d39d:	mov    bl,0xfa
  41d39f:	xchg   ecx,eax
  41d3a0:	jecxz  0x41d36c
  41d3a2:	push   edi
  41d3a3:	push   es
  41d3a4:	ins    BYTE PTR es:[edi],dx
  41d3a5:	pop    esi
  41d3a6:	cs sti 
  41d3a8:	sub    bl,ch
  41d3aa:	add    BYTE PTR ss:[esi+0x5876cbf6],0x4
  41d3b2:	out    dx,al
  41d3b3:	loope  0x41d392
  41d3b5:	loopne 0x41d337
  41d3b7:	xchg   ebx,eax
  41d3b8:	pop    eax
  41d3b9:	fs pop ebp
  41d3bb:	bound  esp,QWORD PTR ds:0x9cb8a46
  41d3c1:	outs   dx,BYTE PTR ds:[esi]
  41d3c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3c3:	sbb    DWORD PTR [edi-0x349b52d],ecx
  41d3c9:	adc    DWORD PTR [edx+0x36],0xd2b884af
  41d3d0:	leave  
  41d3d1:	and    BYTE PTR ds:0x2d715cf6,0x2f
  41d3d8:	pop    esp
  41d3d9:	push   eax
  41d3da:	xchg   DWORD PTR [esi+0x6],ecx
  41d3dd:	adc    BYTE PTR [ebx-0x3a],ch
  41d3e0:	or     BYTE PTR es:[edx+0x14e5f432],bh
  41d3e7:	ror    bl,cl
  41d3e9:	test   DWORD PTR [edi-0x1ee99736],0x428c5d39
  41d3f3:	or     DWORD PTR [ecx+0x6a],eax
  41d3f6:	arpl   bp,dx
  41d3f8:	mov    ds:0xddc9a359,al
  41d3fd:	outs   dx,BYTE PTR ds:[esi]
  41d3fe:	repnz mov ebx,0xc64a5090
  41d404:	fisttp WORD PTR [esi]
  41d406:	xor    ch,BYTE PTR [edx]
  41d408:	or     eax,0xb02f406
  41d40d:	dec    eax
  41d40e:	shr    BYTE PTR [edx-0x1890a611],1
  41d414:	bnd jle 0x41d397
  41d417:	mov    ds:0x964a9949,eax
  41d41c:	push   eax
  41d41d:	fs xchg ah,dl
  41d420:	jp     0x41d3ec
  41d422:	mov    dl,dl
  41d424:	lods   eax,DWORD PTR ds:[esi]
  41d425:	cs inc edx
  41d427:	inc    ebp
  41d428:	in     eax,0xa8
  41d42a:	arpl   WORD PTR [edx+0x74c6956],si
  41d430:	cmp    eax,0x45cc4592
  41d435:	stc    
  41d436:	scas   al,BYTE PTR es:[edi]
  41d437:	dec    ebx
  41d438:	mov    ebx,DWORD PTR [ecx-0x6e]
  41d43b:	mov    DWORD PTR [esi+edi*1+0x362f8eb5],0x9d953068
  41d446:	dec    ecx
  41d447:	dec    esi
  41d448:	pop    ebp
  41d449:	mov    ah,0x2e
  41d44b:	bound  esi,QWORD PTR [eax+0x74]
  41d44e:	or     eax,0x4bbc4b9
  41d453:	rol    BYTE PTR [edx-0x698b5eb0],cl
  41d459:	vmread DWORD PTR [ecx-0x16b55fc1],eax
  41d460:	je     0x41d3e6
  41d462:	aas    
  41d463:	add    dl,ah
  41d465:	jo     0x41d3ef
  41d467:	rcl    ebx,cl
  41d469:	jecxz  0x41d482
  41d46b:	mov    ch,0x80
  41d46d:	and    eax,0xf315b67c
  41d472:	das    
  41d473:	mov    ebx,0x4ddcb552
  41d478:	inc    edi
  41d479:	xor    dl,bl
  41d47b:	ret    0x19bb
  41d47e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d47f:	rcl    al,cl
  41d481:	pop    ebx
  41d482:	mov    edx,0x60626df1
  41d487:	stos   BYTE PTR es:[edi],al
  41d488:	inc    edi
  41d489:	nop
  41d48a:	xchg   ecx,eax
  41d48b:	pushf  
  41d48c:	pop    ebp
  41d48d:	jns    0x41d4c1
  41d48f:	add    ah,bl
  41d491:	paddb  mm2,mm2
  41d494:	or     al,0xfb
  41d496:	push   es
  41d497:	sbb    ah,BYTE PTR [eax-0x60]
  41d49a:	imul   ebx,DWORD PTR [edx+0x5d],0x5850f727
  41d4a1:	mov    ecx,0x460f38b1
  41d4a6:	mov    ds:0xb4a79704,eax
  41d4ab:	call   0x26ea:0x894aa0a4
  41d4b2:	aam    0x8
  41d4b4:	mov    ds:0xc4d2079f,al
  41d4b9:	imul   ebx,ebx,0xbb666b2f
  41d4bf:	mov    al,ds:0xeb23eb52
  41d4c4:	mov    ecx,0xf35aa4ec
  41d4c9:	jecxz  0x41d4c4
  41d4cb:	sbb    bh,BYTE PTR [edx-0x36]
  41d4ce:	and    bh,BYTE PTR [edi+0x7fff5558]
  41d4d4:	pop    esp
  41d4d5:	dec    ebx
  41d4d6:	addr16 je 0x41d538
  41d4d9:	adc    ch,ch
  41d4db:	ret    0xd2d0
  41d4de:	inc    eax
  41d4df:	mov    cl,0x95
  41d4e1:	int3   
  41d4e2:	mov    ecx,0xbf6f5db9
  41d4e7:	sub    al,0xf8
  41d4e9:	fs loopne 0x41d4be
  41d4ec:	adc    al,cl
  41d4ee:	retf   0x4ebb
  41d4f1:	inc    esp
  41d4f2:	cmp    DWORD PTR ds:0xe13aa86b,edi
  41d4f8:	xor    al,0xa0
  41d4fa:	push   ebp
  41d4fb:	jae    0x41d4a1
  41d4fd:	xchg   ebp,eax
  41d4fe:	into   
  41d4ff:	mov    al,BYTE PTR [esi]
  41d501:	mov    esi,0x8dc0d2ac
  41d506:	push   ebp
  41d507:	pop    edi
  41d508:	xchg   BYTE PTR [esi],bh
  41d50a:	sbb    al,0x11
  41d50c:	pop    ebp
  41d50d:	(bad)  
  41d50e:	addr16 sbb al,0x99
  41d511:	mov    ebx,0xa63a639d
  41d516:	jl     0x41d4eb
  41d518:	xor    DWORD PTR [esi-0x2dab2f82],eax
  41d51e:	jecxz  0x41d557
  41d520:	pop    ebp
  41d521:	out    0x4c,eax
  41d523:	stc    
  41d524:	fwait
  41d525:	jne    0x41d501
  41d527:	jmp    0xc19c:0xd2a2f164
  41d52e:	aam    0xb7
  41d530:	mov    ch,0x5f
  41d532:	mov    edi,0xc9435d32
  41d537:	pop    ecx
  41d538:	xor    BYTE PTR [ecx],0x47
  41d53b:	adc    al,0x75
  41d53d:	pop    ecx
  41d53e:	inc    ecx
  41d53f:	xor    DWORD PTR [esi-0x64bcb437],0xffffffc3
  41d546:	dec    edx
  41d547:	adc    al,BYTE PTR [ebx-0x2]
  41d54a:	popa   
  41d54b:	(bad)  
  41d54d:	add    al,0xeb
  41d54f:	ror    BYTE PTR [esi-0x12],cl
  41d552:	push   ecx
  41d553:	mov    esp,0x11c617a6
  41d558:	fs jb  0x41d510
  41d55b:	int    0x3b
  41d55d:	cmp    esi,DWORD PTR [ebx]
  41d55f:	adc    bh,bl
  41d561:	std    
  41d562:	scas   eax,DWORD PTR es:[edi]
  41d563:	sub    eax,0x12c859cf
  41d568:	push   ebp
  41d569:	jnp    0x41d535
  41d56b:	imul   esi,edx,0x5b
  41d56e:	mov    ebx,0xba8364fa
  41d573:	jg     0x41d55d
  41d575:	(bad)  
  41d577:	je     0x41d5d5
  41d579:	xor    ch,bh
  41d57b:	loopne 0x41d538
  41d57d:	jne    0x41d5b7
  41d57f:	stos   BYTE PTR es:[edi],al
  41d580:	pop    ebp
  41d581:	fcomip st,st(5)
  41d583:	mov    ebp,0x34071907
  41d588:	pop    ebp
  41d589:	dec    ebx
  41d58a:	pop    ss
  41d58b:	test   BYTE PTR [ecx],dh
  41d58d:	cmovs  edi,esi
  41d590:	call   FWORD PTR [ecx-0xc]
  41d593:	rcl    DWORD PTR [esi+eax*8+0x2e4d65ef],1
  41d59a:	dec    ebx
  41d59b:	sub    esi,DWORD PTR [edx-0x6313fa15]
  41d5a1:	push   ebp
  41d5a2:	pushf  
  41d5a3:	shr    BYTE PTR [edx-0x77013552],cl
  41d5a9:	test   al,0x42
  41d5ab:	into   
  41d5ac:	pop    ebp
  41d5ad:	iret   
  41d5ae:	cli    
  41d5af:	xchg   BYTE PTR [ebp-0x20e20b10],dh
  41d5b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5b6:	xor    al,0xd1
  41d5b8:	popa   
  41d5b9:	aad    0xa5
  41d5bb:	xchg   esp,eax
  41d5bc:	adc    DWORD PTR [esi-0x7d],edi
  41d5bf:	imul   ecx,DWORD PTR [ebx+0x1f],0xc655422d
  41d5c6:	(bad)  
  41d5c7:	repz mov al,ds:0x1938cbb9
  41d5cd:	cmp    ebp,DWORD PTR [ebx-0x755b122e]
  41d5d3:	push   ds
  41d5d4:	sbb    al,BYTE PTR [edi-0x5]
  41d5d7:	aas    
  41d5d8:	pop    ebp
  41d5d9:	cmp    DWORD PTR [ecx+edi*8-0x44],edx
  41d5dd:	sub    al,0xa1
  41d5df:	pop    ds
  41d5e0:	jmp    0x41d63b
  41d5e2:	xchg   ebx,eax
  41d5e3:	sub    bh,BYTE PTR [ebx]
  41d5e5:	sub    DWORD PTR [ebp+0x4b6cfb39],esi
  41d5eb:	bound  edi,QWORD PTR [edi-0x49d9f0b6]
  41d5f1:	cs and ecx,ecx
  41d5f4:	jmp    0xbed2:0xdd1260a6
  41d5fb:	ds test eax,0x174d4a83
  41d601:	nop
  41d602:	xor    al,0xf5
  41d604:	(bad)  
  41d605:	loopne 0x41d628
  41d607:	xor    al,0x59
  41d60a:	cmp    dl,dh
  41d60c:	mov    dl,0x14
  41d60e:	sub    BYTE PTR [edx],cl
  41d610:	push   edi
  41d611:	add    esp,DWORD PTR [ecx]
  41d613:	ds jae 0x41d5ef
  41d616:	or     al,0xfc
  41d618:	adc    ecx,DWORD PTR [edx]
  41d61a:	or     BYTE PTR [ebx],dh
  41d61c:	pop    es
  41d61d:	pop    ecx
  41d61e:	mov    ebp,0xd7ab0fe8
  41d623:	retf   
  41d624:	call   0xfb2f:0xdc4ecb72
  41d62b:	ds xchg ecx,eax
  41d62d:	pop    eax
  41d62e:	pop    ebx
  41d62f:	popf   
  41d630:	mov    esi,edx
  41d632:	jp     0x41d5da
  41d634:	push   0x32675a19
  41d639:	xchg   DWORD PTR [eax],ebp
  41d63b:	aam    0x54
  41d63d:	sub    bl,BYTE PTR [ecx+ecx*8-0x66]
  41d641:	pop    ecx
  41d642:	stc    
  41d643:	pop    edi
  41d644:	jno    0x41d6a2
  41d646:	xchg   esi,eax
  41d647:	rol    al,cl
  41d649:	cmp    al,0x95
  41d64b:	jg     0x41d674
  41d64d:	test   al,0xe6
  41d64f:	sbb    DWORD PTR [ecx-0x5b32a162],0xffffff92
  41d656:	jmp    0x2ba1440d
  41d65b:	push   0xffffffdc
  41d65d:	imul   edx,DWORD PTR [esi+0x4bf7cb16],0x7c
  41d664:	dec    edx
  41d665:	sub    esi,DWORD PTR [ebx]
  41d667:	(bad)  
  41d668:	frstor ds:0x8ab07e62
  41d66e:	jno    0x41d6c3
  41d670:	pop    ebp
  41d671:	inc    ebx
  41d672:	rcr    BYTE PTR [ebx],0x40
  41d675:	sti    
  41d676:	push   esp
  41d677:	leave  
  41d678:	fcomp  QWORD PTR [eax-0x39]
  41d67b:	sub    eax,0xb879dcef
  41d680:	aad    0x91
  41d682:	cwde   
  41d683:	sub    DWORD PTR [esi+0x52],ebp
  41d686:	mov    esp,0x83062d70
  41d68b:	ds es jne 0x41d6c5
  41d68f:	rcr    BYTE PTR [eax],cl
  41d691:	cmp    al,0xb
  41d693:	xchg   esp,eax
  41d694:	scas   al,BYTE PTR es:[edi]
  41d695:	cdq    
  41d696:	add    BYTE PTR [edx+edx*2],al
  41d699:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d69a:	dec    ecx
  41d69b:	sbb    BYTE PTR [esi+0x30925d53],cl
  41d6a1:	(bad)  
  41d6a2:	mov    esp,0xac5107d2
  41d6a7:	(bad)  
  41d6a8:	rol    DWORD PTR [esi+eax*8],cl
  41d6ab:	mov    dl,0x2d
  41d6ad:	hlt    
  41d6ae:	fs cs pop ebp
  41d6b1:	out    dx,al
  41d6b2:	xchg   esp,eax
  41d6b3:	inc    edi
  41d6b4:	pusha  
  41d6b5:	(bad)  [edx]
  41d6b7:	mov    dl,BYTE PTR [ecx]
  41d6b9:	inc    esi
  41d6ba:	enter  0xd31,0x14
  41d6be:	push   eax
  41d6bf:	dec    eax
  41d6c0:	dec    esp
  41d6c1:	or     BYTE PTR [ebx+0x6],0x33
  41d6c5:	das    
  41d6c6:	inc    ecx
  41d6c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6c8:	mov    edi,0x44745eb0
  41d6cd:	pop    ecx
  41d6ce:	jae    0x41d6e7
  41d6d0:	dec    eax
  41d6d1:	cdq    
  41d6d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6d3:	rol    BYTE PTR [edx+0x273b2343],1
  41d6d9:	fcmovnu st,st(5)
  41d6db:	cmp    ch,bh
  41d6dd:	addr16 data16 rol bl,0x26
  41d6e2:	arpl   WORD PTR [ecx-0x72],bp
  41d6e5:	inc    edi
  41d6e6:	inc    edi
  41d6e7:	push   eax
  41d6e8:	bound  edx,QWORD PTR [edx-0x6377f196]
  41d6ee:	jbe    0x41d6b4
  41d6f0:	xor    eax,0x1ba4ae6
  41d6f5:	jmp    0xb4e8:0x5211bd8a
  41d6fc:	sub    eax,0x663e1846
  41d701:	jle    0x41d6b3
  41d703:	aam    0x22
  41d705:	in     eax,dx
  41d706:	dec    ebx
  41d707:	(bad)  
  41d708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d709:	sahf   
  41d70a:	sub    al,0x4f
  41d70d:	adc    al,BYTE PTR [edi-0x20a62122]
  41d713:	adc    esi,DWORD PTR [edi]
  41d715:	in     al,dx
  41d716:	test   DWORD PTR [esp+ebx*8-0x7f],edx
  41d71a:	dec    edx
  41d71b:	mov    cl,0x78
  41d71d:	lock clc 
  41d71f:	inc    eax
  41d720:	not    DWORD PTR [ecx-0x3992c94]
  41d726:	imul   esi,DWORD PTR [edi+0x7],0x7e
  41d72a:	add    al,ch
  41d72c:	pop    ebp
  41d72d:	lods   al,BYTE PTR ds:[esi]
  41d72e:	adc    al,0xd7
  41d730:	into   
  41d731:	jnp    0x41d775
  41d733:	adc    eax,0xe2d85ab5
  41d738:	jle    0x41d77f
  41d73a:	sahf   
  41d73b:	neg    ch
  41d73d:	mov    ch,0x7a
  41d73f:	ja     0x41d79e
  41d741:	or     edi,DWORD PTR [eax]
  41d743:	mov    ds,edx
  41d745:	push   ss
  41d746:	fldcw  WORD PTR [edx-0x49c1b8e4]
  41d74c:	push   edi
  41d74d:	in     al,dx
  41d74e:	push   0xffffffef
  41d750:	jbe    0x41d796
  41d752:	imul   edx,ecx,0x5f99ae5d
  41d758:	shl    DWORD PTR [ebp+0x4609512a],0x54
  41d75f:	and    esp,DWORD PTR [esi+0x3c]
  41d762:	or     al,0x14
  41d764:	outs   dx,DWORD PTR ds:[esi]
  41d765:	or     ebx,DWORD PTR [ebx-0x5335a285]
  41d76b:	fmul   DWORD PTR [edx-0x7d660e8e]
  41d771:	pop    ecx
  41d772:	mov    esp,0x8f122472
  41d777:	scas   al,BYTE PTR es:[edi]
  41d778:	jle    0x41d79a
  41d77a:	dec    ebx
  41d77b:	gs mov dh,0xe9
  41d77e:	or     al,0x93
  41d780:	xchg   ebp,eax
  41d781:	dec    esi
  41d782:	or     dl,dl
  41d784:	(bad)
  41d788:	jne    0x41d726
  41d78a:	mov    ebx,0xff165d7a
  41d78f:	retf   0x8100
  41d792:	out    0xd0,eax
  41d794:	dec    ebx
  41d795:	inc    esi
  41d796:	jl     0x41d725
  41d798:	test   BYTE PTR [eax-0x4f],0x4d
  41d79c:	jne    0x41d7f6
  41d79e:	dec    ebx
  41d79f:	or     dh,BYTE PTR [ecx]
  41d7a1:	rcr    edx,1
  41d7a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7a4:	sub    ebx,DWORD PTR [edi+0x28]
  41d7a7:	sar    BYTE PTR [edi-0x190c719c],cl
  41d7ad:	jp     0x41d7a2
  41d7af:	push   0x5d
  41d7b1:	aas    
  41d7b2:	lods   eax,DWORD PTR ds:[esi]
  41d7b3:	push   ss
  41d7b4:	lods   al,BYTE PTR ds:[esi]
  41d7b5:	fcom   DWORD PTR [ebx-0x16]
  41d7b8:	imul   eax,DWORD PTR [ebx-0x59],0x9926739c
  41d7bf:	shl    cl,cl
  41d7c1:	loopne 0x41d758
  41d7c3:	repz jmp 0x5f1a2dbf
  41d7c9:	inc    esp
  41d7ca:	sbb    BYTE PTR [edx+0x46fd59f0],0x3b
  41d7d1:	dec    esp
  41d7d2:	cmp    al,0xc6
  41d7d4:	shl    WORD PTR [eax-0x69],0x5d
  41d7d9:	lahf   
  41d7da:	pop    edx
  41d7db:	add    esi,ecx
  41d7dd:	repnz scas eax,DWORD PTR es:[edi]
  41d7df:	sbb    dl,BYTE PTR [ecx+0x5a]
  41d7e2:	inc    DWORD PTR [esp+ebx*4]
  41d7e5:	pop    esp
  41d7e6:	fisubr WORD PTR [edi]
  41d7e8:	or     eax,0x5dde2cc8
  41d7ed:	scas   al,BYTE PTR es:[edi]
  41d7ee:	fdiv   DWORD PTR [eax]
  41d7f0:	cld    
  41d7f1:	jmp    DWORD PTR [ebx]
  41d7f3:	mov    es,ebx
  41d7f5:	pop    ecx
  41d7f6:	bound  edx,QWORD PTR [edi+0x44]
  41d7f9:	in     al,dx
  41d7fa:	mov    ebx,0x545d2e39
  41d7ff:	adc    al,0xbb
  41d801:	dec    esi
  41d802:	aad    0x27
  41d804:	xchg   edx,eax
  41d805:	std    
  41d806:	sbb    dh,BYTE PTR [ebp+0x4b]
  41d809:	inc    esi
  41d80a:	push   edx
  41d80b:	sub    DWORD PTR [edi+0x5686062f],0xd8544acf
  41d815:	pop    ebp
  41d816:	xchg   ebx,eax
  41d817:	xchg   ecx,eax
  41d818:	shr    BYTE PTR [edi-0x3b],1
  41d81b:	(bad)  
  41d81c:	call   DWORD PTR [ebx]
  41d81e:	es aaa 
  41d820:	sub    ebx,ecx
  41d822:	mov    esp,0x9618d5ef
  41d827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d828:	xor    esp,DWORD PTR [esi]
  41d82a:	in     al,dx
  41d82b:	scas   eax,DWORD PTR es:[edi]
  41d82c:	mov    DWORD PTR [eax],edi
  41d82e:	imul   esi,DWORD PTR [edi+0x6af3b352],0x2e
  41d835:	or     DWORD PTR [esi],esp
  41d837:	les    edi,FWORD PTR [ecx]
  41d839:	iret   
  41d83a:	or     ch,bl
  41d83c:	aad    0x8d
  41d83e:	xor    BYTE PTR [edx],dl
  41d840:	mov    ebp,0x66f44c42
  41d845:	jb     0x41d7ea
  41d847:	ficomp DWORD PTR [ebp-0x59]
  41d84a:	in     al,0x6d
  41d84c:	int3   
  41d84d:	mov    esi,0x59815cc3
  41d852:	fild   QWORD PTR [edx-0x32d5262f]
  41d858:	jl     0x41d8ae
  41d85a:	inc    eax
  41d85b:	not    DWORD PTR [edx+0x13]
  41d85e:	retf   
  41d85f:	inc    esp
  41d860:	(bad)
  41d864:	push   ds
  41d865:	inc    esi
  41d866:	inc    ecx
  41d867:	js     0x41d7f0
  41d869:	inc    edi
  41d86a:	mov    ebp,0x4b282846
  41d86f:	xchg   ebp,eax
  41d870:	mov    ebx,0x5360ccb0
  41d875:	scas   eax,DWORD PTR es:[edi]
  41d876:	sub    al,0xd2
  41d878:	inc    ecx
  41d879:	inc    eax
  41d87a:	sub    DWORD PTR [ebp+0x37faf1e8],esi
  41d880:	pop    ebp
  41d881:	ds inc eax
  41d883:	sub    al,BYTE PTR [edx+0x19]
  41d886:	mov    al,0xef
  41d888:	fld    DWORD PTR [esi-0x33]
  41d88b:	out    dx,al
  41d88c:	mov    edi,0x7998cb58
  41d891:	fisttp QWORD PTR [ebp+0x4a5ba036]
  41d897:	(bad)  
  41d898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d899:	jnp    0x41d906
  41d89b:	xlat   BYTE PTR ds:[ebx]
  41d89c:	(bad)  
  41d89d:	xor    DWORD PTR [esi-0x49f4b7b3],esi
  41d8a3:	mov    dl,0x44
  41d8a5:	sbb    DWORD PTR [edi-0x3d],esi
  41d8a8:	lods   al,BYTE PTR ds:[esi]
  41d8a9:	pop    ecx
  41d8aa:	sub    esp,DWORD PTR [edi-0x28b2249d]
  41d8b0:	dec    edx
  41d8b1:	xchg   esi,eax
  41d8b2:	dec    edx
  41d8b3:	daa    
  41d8b4:	lock pop eax
  41d8b6:	mov    ebp,0xd367adb7
  41d8bc:	fwait
  41d8bd:	inc    ebp
  41d8be:	mov    bl,0x9c
  41d8c0:	scas   eax,DWORD PTR es:[edi]
  41d8c1:	call   0x59ac:0x176e14c4
  41d8c8:	pusha  
  41d8c9:	cmp    DWORD PTR [ebx-0x6d479162],edi
  41d8cf:	shr    BYTE PTR ds:0x5a0e0b46,0x9a
  41d8d6:	mov    al,0x6b
  41d8d8:	inc    esp
  41d8d9:	ja     0x41d896
  41d8db:	into   
  41d8dc:	outs   dx,BYTE PTR ds:[esi]
  41d8dd:	cli    
  41d8de:	aas    
  41d8df:	ins    DWORD PTR es:[edi],dx
  41d8e0:	mov    ds:0x1839af39,al
  41d8e5:	pop    eax
  41d8e6:	sbb    dl,dl
  41d8e8:	das    
  41d8e9:	leave  
  41d8ea:	std    
  41d8eb:	adc    edi,DWORD PTR [edi-0x9]
  41d8ee:	scas   eax,DWORD PTR es:[edi]
  41d8ef:	pop    ecx
  41d8f0:	push   esi
  41d8f1:	rcr    DWORD PTR [esi+0x33],1
  41d8f4:	sub    bl,cl
  41d8f6:	pop    edx
  41d8f7:	nop
  41d8f8:	es loop 0x41d908
  41d8fb:	rcl    BYTE PTR [eax],cl
  41d8fd:	js     0x41d8ba
  41d8ff:	jp     0x41d8f8
  41d901:	add    edi,ebx
  41d903:	aam    0x5d
  41d905:	int3   
  41d906:	test   esi,0xcaa1baca
  41d90c:	aaa    
  41d90d:	ss cmp eax,0x856e6d2
  41d913:	fs call 0xd61f:0x5de27183
  41d91b:	(bad)  
  41d91c:	je     0x41d90e
  41d91e:	mov    ecx,esi
  41d920:	fwait
  41d921:	je     0x41d90a
  41d923:	sub    ebp,DWORD PTR [edi-0x4]
  41d926:	or     ebp,0x34
  41d929:	arpl   WORD PTR [ebx+0x28],cx
  41d92c:	adc    eax,0x5236b527
  41d931:	dec    edx
  41d933:	(bad)  
  41d934:	push   ds
  41d935:	test   al,ah
  41d937:	or     bl,0xc
  41d93a:	push   ecx
  41d93b:	rcr    BYTE PTR [edi+ebp*2],cl
  41d93e:	je     0x41d915
  41d940:	push   esi
  41d941:	retf   
  41d942:	aad    0x70
  41d944:	pop    ebp
  41d945:	jns    0x41d906
  41d947:	and    al,BYTE PTR [ebp-0x65]
  41d94a:	xchg   ecx,eax
  41d94b:	retf   
  41d94c:	aas    
  41d94d:	inc    esi
  41d94e:	push   edx
  41d94f:	loopne 0x41d93e
  41d951:	push   0x492157a5
  41d956:	dec    ebx
  41d957:	mov    bh,0x5f
  41d959:	test   esp,0x18ccb0e1
  41d95f:	shr    BYTE PTR [esi-0x394515f6],cl
  41d965:	in     al,dx
  41d966:	out    0x98,al
  41d968:	test   DWORD PTR [edx-0x12],ebx
  41d96b:	sar    BYTE PTR [edx],cl
  41d96d:	jge    0x41d95f
  41d96f:	sbb    eax,0xd3614265
  41d974:	mov    DWORD PTR [eax],ebp
  41d976:	mov    ah,0xfb
  41d978:	adc    eax,0xb93c8975
  41d97d:	or     BYTE PTR [edx-0x21],0x28
  41d981:	add    eax,0xad672fb8
  41d986:	and    eax,0x33cb46d2
  41d98b:	pushf  
  41d98c:	fwait
  41d98d:	sub    eax,0x2e6e0e82
  41d992:	xchg   ebp,eax
  41d993:	imul   edi,DWORD PTR [ebx+0x19],0xddc6dda1
  41d99a:	outs   dx,DWORD PTR ds:[esi]
  41d99b:	shr    DWORD PTR [eax+0x4f78aa8c],cl
  41d9a1:	or     al,0x98
  41d9a3:	xchg   edx,eax
  41d9a4:	pop    ebp
  41d9a5:	dec    ebp
  41d9a6:	lods   al,BYTE PTR ds:[esi]
  41d9a7:	inc    ecx
  41d9a8:	and    al,0x8e
  41d9aa:	mov    ebp,0x3359ce1e
  41d9af:	mov    eax,0x57d2bc4d
  41d9b4:	sbb    al,0x87
  41d9b6:	dec    edx
  41d9b7:	fcom   QWORD PTR [ebp-0x74]
  41d9ba:	push   0x35
  41d9bc:	pop    edx
  41d9bd:	xchg   ecx,eax
  41d9be:	sar    BYTE PTR es:[edi+edx*4],cl
  41d9c2:	mov    eax,ds:0x24cb6a24
  41d9c7:	dec    ebp
  41d9c8:	outs   dx,BYTE PTR ds:[esi]
  41d9c9:	addr16 or ebx,edx
  41d9cc:	fwait
  41d9cd:	pop    ecx
  41d9ce:	in     eax,0x99
  41d9d0:	cmp    ebx,ecx
  41d9d2:	push   cs
  41d9d3:	inc    esp
  41d9d4:	clc    
  41d9d5:	pop    esi
  41d9d6:	pop    esp
  41d9d7:	push   0xb331bbb9
  41d9dc:	sub    eax,0x1b9b72df
  41d9e1:	add    BYTE PTR [ebx-0x4d],cl
  41d9e4:	int3   
  41d9e5:	adc    eax,ecx
  41d9e7:	repnz clc 
  41d9e9:	xor    DWORD PTR [esi+0x2d14e3f9],ebx
  41d9ef:	push   ss
  41d9f0:	pop    esp
  41d9f1:	jno    0x41da50
  41d9f3:	xchg   esp,eax
  41d9f4:	push   0x77
  41d9f6:	ins    BYTE PTR es:[edi],dx
  41d9f7:	xor    esi,DWORD PTR [edi]
  41d9f9:	add    al,0xe2
  41d9fb:	pop    edi
  41d9fc:	pop    ebp
  41d9fd:	or     DWORD PTR gs:[ebx+0x45fefe9f],0x51
  41da05:	dec    esi
  41da06:	sbb    al,0x1e
  41da08:	call   esi
  41da0a:	in     eax,dx
  41da0b:	shr    BYTE PTR [eax-0x31ab17fb],cl
  41da11:	mov    bh,0xcc
  41da13:	ins    BYTE PTR es:[edi],dx
  41da14:	pop    ebp
  41da15:	mov    dh,0x37
  41da17:	stc    
  41da18:	ror    BYTE PTR [eax+edx*8+0x1f],1
  41da1c:	or     al,0x46
  41da1e:	jns    0x41da10
  41da20:	pop    ss
  41da21:	inc    esp
  41da22:	xor    eax,0x4ad2afa6
  41da27:	xchg   BYTE PTR [eax-0x44],dh
  41da2a:	push   cs
  41da2b:	in     eax,0xfa
  41da2d:	adc    BYTE PTR [edx+edx*8-0x1bcc319e],0xfe
  41da35:	mov    ds:0xd65da7ff,eax
  41da3a:	push   ecx
  41da3b:	test   dh,cl
  41da3d:	xor    al,0x3e
  41da3f:	iret   
  41da40:	inc    esp
  41da41:	pop    ecx
  41da42:	jnp    0x41da18
  41da44:	xor    ebp,esi
  41da46:	mov    ds:0x4af43e8c,al
  41da4b:	out    dx,eax
  41da4c:	xchg   esp,eax
  41da4d:	mov    edx,0x19ad6e9d
  41da52:	jl     0x41da93
  41da54:	sbb    DWORD PTR [esi-0x13],eax
  41da57:	ret    
  41da58:	xor    BYTE PTR [edx+0x6f],0xf1
  41da5c:	mov    eax,0xcaa14b1d
  41da61:	mov    esi,0xab512578
  41da66:	jno    0x41da32
  41da68:	cmp    BYTE PTR [ebx+eiz*4],cl
  41da6b:	cmp    BYTE PTR [eax-0x4fc93737],al
  41da71:	sub    eax,0x7859b9df
  41da76:	int    0xa4
  41da78:	popf   
  41da79:	outs   dx,DWORD PTR ds:[esi]
  41da7a:	fcmovnb st,st(7)
  41da7c:	inc    ecx
  41da7d:	sub    al,0x31
  41da7f:	shr    BYTE PTR [eax+0x27],cl
  41da82:	lock mov ebx,0x584b8198
  41da88:	mov    esi,0xf8a846b3
  41da8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da8e:	retf   0xab3f
  41da91:	leave  
  41da92:	and    esp,DWORD PTR [esi+0x20]
  41da95:	inc    esi
  41da96:	ds dec eax
  41da98:	div    BYTE PTR [esi+edx*1+0x4b64b97d]
  41da9f:	or     DWORD PTR [ebx-0x5],0xc
  41daa3:	sar    edx,0x73
  41daa6:	js     0x41da6a
  41daa8:	jne    0x41da75
  41daaa:	pop    edx
  41daab:	add    eax,0x22393af6
  41dab0:	call   0x5d6bc733
  41dab5:	sahf   
  41dab6:	data16 (bad) 
  41dab9:	push   eax
  41daba:	arpl   sp,sp
  41dabc:	mov    WORD PTR [ecx-0x1a],ds
  41dabf:	adc    esp,esi
  41dac1:	mov    edi,0xea88c514
  41dac6:	mov    ds:0xdbf84b4d,al
  41dacb:	sub    eax,0xa2b9495d
  41dad0:	retf   0x9d6b
  41dad3:	mov    bh,ah
  41dad5:	pop    ecx
  41dad6:	and    BYTE PTR [eax-0x3a],ch
  41dad9:	fs sbb eax,0x4ade4723
  41dadf:	mov    dl,0x76
  41dae1:	fild   DWORD PTR [edx]
  41dae3:	xchg   DWORD PTR [eax+0x23d67fd0],edi
  41dae9:	out    0x7e,eax
  41daeb:	and    DWORD PTR ds:0x3560ce11,0x5df4d5fe
  41daf5:	ficom  WORD PTR [edi+esi*4-0x4a8e3453]
  41dafc:	test   eax,0x5be83659
  41db01:	sub    eax,0x3a0384c4
  41db06:	push   esp
  41db07:	mov    cl,0xaf
  41db09:	push   0xf7e8db02
  41db0e:	mov    ss,WORD PTR [ebx]
  41db10:	jmp    0x4763:0x9dd05636
  41db17:	jge    0x41da9f
  41db19:	clc    
  41db1a:	mov    ah,BYTE PTR [edi+eax*4]
  41db1d:	dec    esp
  41db1e:	cmp    DWORD PTR [esi],edx
  41db20:	jnp    0x41db2a
  41db22:	dec    ebx
  41db23:	scas   eax,DWORD PTR es:[edi]
  41db24:	push   cs
  41db25:	rcr    DWORD PTR [edi-0x79],cl
  41db28:	retf   
  41db29:	inc    esi
  41db2a:	outs   dx,BYTE PTR ds:[esi]
  41db2b:	pop    eax
  41db2c:	and    edi,DWORD PTR [edi+0x3c8e988a]
  41db32:	or     BYTE PTR [ecx],bl
  41db34:	pop    esp
  41db35:	stc    
  41db36:	mov    ah,cl
  41db38:	pushf  
  41db39:	scas   eax,DWORD PTR es:[edi]
  41db3a:	gs dec eax
  41db3c:	mov    ebp,0x10d3753e
  41db41:	leave  
  41db42:	sbb    dh,BYTE PTR [ebp+0x39ad2943]
  41db48:	inc    esi
  41db49:	jno    0x41db91
  41db4b:	and    al,0x52
  41db4d:	aas    
  41db4e:	mov    eax,DWORD PTR [ecx-0x18]
  41db51:	shr    edi,0x6d
  41db54:	mov    BYTE PTR [ecx-0xf],bl
  41db57:	test   eax,0xb8871793
  41db5c:	cwde   
  41db5d:	ret    0xe84a
  41db60:	adc    dh,BYTE PTR ds:0x4da02182
  41db66:	pop    ss
  41db67:	rol    bh,cl
  41db69:	aaa    
  41db6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db6b:	imul   bh
  41db6d:	pop    edi
  41db6e:	cmp    DWORD PTR [edi+0x5d],esi
  41db71:	adc    ah,cl
  41db73:	repz cs mov al,0x3d
  41db77:	call   0xf235357b
  41db7c:	sbb    ebx,DWORD PTR [ebx-0x2bccba1]
  41db82:	inc    edi
  41db83:	jmp    0x41db9d
  41db85:	mov    eax,ds:0x196da851
  41db8a:	push   ds
  41db8b:	mov    dl,0xc1
  41db8d:	dec    edx
  41db8e:	push   ebp
  41db8f:	int    0x9
  41db91:	add    ch,BYTE PTR [esi-0x41]
  41db94:	cmp    eax,0xf32a44f
  41db99:	and    edx,DWORD PTR [eax+ebp*1+0x27]
  41db9d:	neg    edi
  41db9f:	dec    ecx
  41dba0:	xchg   BYTE PTR [ebp-0x25],ch
  41dba3:	and    bl,BYTE PTR ds:0xa25c3746
  41dba9:	xor    BYTE PTR [eax-0x64],cl
  41dbac:	in     eax,dx
  41dbad:	add    ecx,DWORD PTR [ebx+0x53]
  41dbb0:	and    DWORD PTR [ebp+0x24a7cf78],0xffffffdd
  41dbb7:	fsub   QWORD PTR [eax]
  41dbb9:	or     ebp,0xdc06fc52
  41dbbf:	in     al,dx
  41dbc0:	(bad)  
  41dbc1:	js     0x41dc0e
  41dbc3:	nop
  41dbc4:	pusha  
  41dbc5:	push   edx
  41dbc6:	cmp    ebx,DWORD PTR [edi-0x61]
  41dbc9:	out    dx,eax
  41dbca:	inc    esi
  41dbcb:	mov    edx,0x6224633
  41dbd0:	jecxz  0x41dba0
  41dbd2:	test   BYTE PTR [esi-0x3c],ah
  41dbd5:	imul   ebp,DWORD PTR [esp+eiz*8],0x34
  41dbd9:	inc    esi
  41dbda:	dec    esp
  41dbdb:	jmp    0x41dbf1
  41dbdd:	xchg   ebp,eax
  41dbde:	add    DWORD PTR [edx],ebp
  41dbe0:	xor    BYTE PTR [esi],bl
  41dbe2:	imul   bl
  41dbe4:	lods   eax,DWORD PTR ds:[esi]
  41dbe5:	gs push eax
  41dbe7:	push   es
  41dbe8:	repnz pop ecx
  41dbea:	push   ss
  41dbeb:	push   ecx
  41dbec:	out    0x74,eax
  41dbee:	pop    ecx
  41dbef:	das    
  41dbf0:	jg     0x41dc4e
  41dbf2:	sbb    eax,0x4526a5d2
  41dbf7:	pop    ecx
  41dbf8:	retf   0xc5f5
  41dbfb:	rcl    BYTE PTR [ebx],cl
  41dbfd:	xchg   edi,eax
  41dbfe:	xor    esp,ecx
  41dc00:	js     0x41dbaa
  41dc02:	sub    eax,0xde355dda
  41dc07:	adc    al,BYTE PTR ds:0x3acbc9e6
  41dc0d:	jo     0x41dc73
  41dc0f:	jecxz  0x41dc6e
  41dc11:	sbb    BYTE PTR [edi-0x522a8f45],bh
  41dc17:	and    bl,BYTE PTR [ecx-0x622d354c]
  41dc1d:	pop    edi
  41dc1e:	mov    ds:0x890293e1,al
  41dc23:	shr    BYTE PTR [ebp+eax*8-0x129ef1be],cl
  41dc2a:	pop    ebp
  41dc2b:	ret    0x7a5d
  41dc2e:	je     0x41dbd3
  41dc30:	cwde   
  41dc31:	(bad)  
  41dc33:	or     eax,0xd3753432
  41dc38:	repnz test al,0xab
  41dc3b:	pop    edx
  41dc3c:	je     0x41dc04
  41dc3e:	pushf  
  41dc3f:	add    bl,BYTE PTR [ebp-0x31]
  41dc42:	inc    ecx
  41dc43:	adc    ebp,DWORD PTR [ecx+0x41]
  41dc46:	adc    BYTE PTR [ecx+edi*1-0x6739dbba],ch
  41dc4d:	adc    dl,BYTE PTR [ebx+edx*8-0xfb4a2ae]
  41dc54:	cmp    BYTE PTR [ebp-0x68],bl
  41dc57:	mov    ah,bh
  41dc59:	cmc    
  41dc5a:	cmp    edi,DWORD PTR [edi+ebp*2]
  41dc5d:	push   esp
  41dc5e:	dec    esp
  41dc5f:	(bad)  
  41dc60:	pop    eax
  41dc61:	fldl2e 
  41dc63:	push   eax
  41dc64:	push   es
  41dc65:	fcmovnu st,st(7)
  41dc67:	aad    0x5d
  41dc69:	mov    bl,bh
  41dc6b:	aas    
  41dc6c:	jne    0x41dc6d
  41dc6e:	sub    al,BYTE PTR [edi]
  41dc70:	sbb    BYTE PTR [esi+0x72],al
  41dc73:	inc    edx
  41dc74:	test   BYTE PTR [eax],cl
  41dc76:	mov    ch,ah
  41dc78:	inc    eax
  41dc79:	lods   al,BYTE PTR ds:[esi]
  41dc7a:	dec    edx
  41dc7b:	push   ebp
  41dc7c:	and    ch,BYTE PTR [ebp+esi*8+0x790dc24]
  41dc83:	inc    esi
  41dc84:	das    
  41dc85:	inc    esp
  41dc86:	pop    esi
  41dc87:	mov    eax,0x37f45a1d
  41dc8c:	test   eax,0xbe32e133
  41dc91:	mov    al,0x4a
  41dc93:	sub    esi,DWORD PTR [edi+ebx*4+0x17]
  41dc97:	cli    
  41dc98:	jae    0x41dc62
  41dc9a:	jmp    0x2301:0x429019d2
  41dca1:	jg     0x41dd1e
  41dca3:	sub    DWORD PTR [edx+esi*8-0x4f],ebx
  41dca7:	xor    edi,DWORD PTR [ecx+0x29]
  41dcaa:	xchg   edi,eax
  41dcab:	imul   eax,DWORD PTR ds:0xccd774d0,0x15ac2fb3
  41dcb5:	xchg   BYTE PTR [ecx+ebp*4-0x77b52bca],dl
  41dcbc:	sub    DWORD PTR [esi+0x76],ebp
  41dcbf:	cmp    al,0xed
  41dcc1:	cmp    ecx,DWORD PTR [ebx]
  41dcc3:	shr    al,1
  41dcc5:	push   ebp
  41dcc6:	jmp    0x7a54c9c4
  41dccb:	push   ebx
  41dccc:	in     eax,0xa6
  41dcce:	dec    ecx
  41dccf:	cld    
  41dcd0:	(bad)  
  41dcd1:	push   esi
  41dcd2:	adc    eax,esi
  41dcd4:	clc    
  41dcd5:	cdq    
  41dcd6:	push   0x8
  41dcd8:	add    esp,ebx
  41dcda:	cmp    ecx,DWORD PTR [esi+eiz*4]
  41dcdd:	inc    eax
  41dcde:	dec    ebx
  41dcdf:	mov    ch,0xe9
  41dce1:	mov    eax,ds:0xe6d174a3
  41dce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dce7:	shl    bh,cl
  41dce9:	xchg   edi,eax
  41dcea:	stc    
  41dceb:	js     0x41dc81
  41dced:	xor    ch,BYTE PTR [ecx-0x5]
  41dcf0:	push   esi
  41dcf1:	sub    ebx,ebx
  41dcf3:	xlat   BYTE PTR ds:[ebx]
  41dcf4:	dec    ecx
  41dcf5:	push   cs
  41dcf6:	mov    dh,0x9
  41dcf8:	cs sahf 
  41dcfa:	adc    eax,0x7e5996ca
  41dcff:	je     0x41dd25
  41dd01:	outs   dx,BYTE PTR ds:[esi]
  41dd02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd03:	mov    al,ds:0xf44af64d
  41dd08:	aas    
  41dd09:	adc    eax,0x80d72cb1
  41dd0e:	cmp    al,0xe6
  41dd10:	int3   
  41dd11:	cdq    
  41dd12:	out    dx,al
  41dd13:	mov    eax,ds:0xcf2b945d
  41dd18:	in     eax,dx
  41dd19:	bound  ebp,QWORD PTR ds:0x8c9e5e7b
  41dd1f:	xchg   edi,eax
  41dd20:	xchg   esi,eax
  41dd21:	ret    
  41dd22:	ds adc bh,ch
  41dd25:	or     al,BYTE PTR [ebx]
  41dd27:	cli    
  41dd28:	jns    0x41dd83
  41dd2a:	retf   
  41dd2b:	cmc    
  41dd2c:	sti    
  41dd2d:	pop    eax
  41dd2e:	popf   
  41dd2f:	inc    ebp
  41dd30:	mov    edi,0x46244870
  41dd35:	mov    al,ds:0xc1d91d1
  41dd3a:	adc    esp,ecx
  41dd3c:	add    al,0x77
  41dd3e:	and    DWORD PTR [ebx-0x12],edi
  41dd41:	sti    
  41dd42:	lods   eax,DWORD PTR ds:[esi]
  41dd43:	fnstcw WORD PTR [ebp-0x53]
  41dd46:	dec    esp
  41dd47:	push   esp
  41dd48:	dec    eax
  41dd49:	inc    edi
  41dd4a:	dec    ebx
  41dd4b:	outs   dx,BYTE PTR ds:[esi]
  41dd4c:	push   esi
  41dd4d:	fmul   QWORD PTR [esi+0x6f36f8a0]
  41dd53:	out    dx,eax
  41dd54:	mov    ch,0x7c
  41dd56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd57:	rcr    BYTE PTR [edi+0x5f950fa2],cl
  41dd5d:	and    esp,DWORD PTR [eax]
  41dd5f:	adc    eax,0xed3d9bc
  41dd64:	xor    BYTE PTR [edi+0x4ccc93f4],al
  41dd6a:	je     0x41dd3f
  41dd6c:	ins    DWORD PTR es:[edi],dx
  41dd6d:	repnz inc ebx
  41dd6f:	imul   edx,DWORD PTR [eax-0x5d5a973d],0x49
  41dd76:	dec    ebx
  41dd77:	stos   DWORD PTR es:[edi],eax
  41dd78:	jge    0x41dd8b
  41dd7a:	das    
  41dd7b:	popa   
  41dd7c:	mov    eax,0xd8d3620f
  41dd81:	and    edi,DWORD PTR [edi-0x3c0694ea]
  41dd87:	push   ebx
  41dd88:	outs   dx,DWORD PTR ds:[esi]
  41dd89:	pop    es
  41dd8a:	sub    ebp,eax
  41dd8c:	mov    ds:0x60d2934d,al
  41dd91:	or     ecx,DWORD PTR [eax-0x26]
  41dd94:	mov    dl,0x32
  41dd96:	jne    0x41dd6b
  41dd98:	in     eax,dx
  41dd99:	hlt    
  41dd9a:	sub    al,BYTE PTR [edx]
  41dd9c:	xor    BYTE PTR ds:0xda5dc8a3,dl
  41dda2:	push   es
  41dda3:	pop    edi
  41dda4:	jo     0x41dddc
  41dda6:	fmul   QWORD PTR [edx-0x29]
  41dda9:	mov    ds:0x686cd10d,eax
  41ddae:	adc    ebx,0x55ce6377
  41ddb4:	aad    0xed
  41ddb6:	rcr    BYTE PTR [ecx+0x5d],1
  41ddb9:	inc    BYTE PTR [ecx+0x54d5366a]
  41ddbf:	sub    esi,edi
  41ddc1:	pop    ecx
  41ddc2:	jo     0x41dd4b
  41ddc4:	push   edx
  41ddc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddc6:	dec    ebp
  41ddc7:	lock mov dh,0x26
  41ddca:	inc    eax
  41ddcb:	dec    edx
  41ddcc:	sbb    eax,0xbd374b29
  41ddd1:	ja     0x41ddef
  41ddd3:	jl     0x41de4e
  41ddd5:	pop    ecx
  41ddd6:	sub    bh,bl
  41ddd8:	jbe    0x41ddd7
  41ddda:	sbb    eax,0x4b2a6762
  41dddf:	xchg   esp,eax
  41dde0:	or     DWORD PTR [esi-0x40],0x12
  41dde4:	sub    al,0xd3
  41dde6:	clc    
  41dde7:	rcl    dl,cl
  41dde9:	push   esp
  41ddea:	and    edx,DWORD PTR ss:[eax+0x79]
  41ddee:	(bad)  
  41ddef:	pop    esp
  41ddf0:	pop    ebp
  41ddf1:	fs push ds
  41ddf3:	xor    ebp,DWORD PTR [esi-0x72392956]
  41ddf9:	pop    ecx
  41ddfa:	jmp    0xe7b62abc
  41ddff:	cmp    eax,0xbe8b569d
  41de04:	and    cl,ah
  41de06:	fimul  DWORD PTR [esi-0x29eaa699]
  41de0c:	inc    esi
  41de0d:	pop    eax
  41de0e:	arpl   WORD PTR [edi-0x5ab49d6f],bx
  41de14:	arpl   WORD PTR [ebp+0x6b21513c],sp
  41de1a:	fild   DWORD PTR [edx-0x40]
  41de1d:	pop    eax
  41de1e:	adc    eax,0x83dfa24d
  41de23:	jns    0x41de2e
  41de25:	sahf   
  41de26:	xchg   esp,eax
  41de27:	pop    ebx
  41de28:	pop    ebp
  41de29:	das    
  41de2a:	imul   esi,ecx,0x731a108d
  41de30:	(bad)  
  41de31:	push   esp
  41de32:	popf   
  41de33:	(bad)  
  41de34:	daa    
  41de35:	(bad)  
  41de36:	cmp    al,0xf8
  41de38:	mov    bl,0xc3
  41de3a:	fs in  eax,dx
  41de3c:	pop    edi
  41de3d:	shl    DWORD PTR [edi+0x43],cl
  41de40:	pop    esp
  41de41:	inc    edx
  41de42:	and    eax,0x7f3db55c
  41de47:	jg     0x41deb9
  41de49:	inc    edi
  41de4a:	(bad)  
  41de4b:	into   
  41de4c:	dec    ebp
  41de4d:	adc    ecx,DWORD PTR [ebx-0x5d]
  41de50:	jg     0x41de96
  41de52:	jbe    0x41ddf8
  41de54:	pop    ebp
  41de55:	mov    ch,0xe1
  41de57:	mov    al,ds:0x2322adb5
  41de5c:	mov    cl,0x46
  41de5e:	lods   al,BYTE PTR ds:[esi]
  41de5f:	out    dx,eax
  41de60:	xor    eax,0x45488be7
  41de65:	(bad)  
  41de66:	popa   
  41de67:	inc    ebx
  41de68:	xchg   DWORD PTR [ebx+0x4210b84a],ebx
  41de6e:	jno    0x41de76
  41de70:	sub    al,BYTE PTR [ecx+0x1d]
  41de73:	ror    bl,cl
  41de75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de76:	push   cs
  41de77:	ja     0x41de74
  41de79:	adc    BYTE PTR [ebx+0x4ae427bd],dh
  41de7f:	and    BYTE PTR [esi],0x2
  41de82:	(bad)  
  41de83:	bound  ebx,QWORD PTR [esi+0x34d183dd]
  41de89:	rcl    DWORD PTR [eax],0x9f
  41de8c:	xchg   edi,eax
  41de8d:	arpl   WORD PTR [ebx+0x4a83d5b0],dx
  41de93:	icebp  
  41de94:	nop
  41de95:	cwde   
  41de96:	inc    ecx
  41de97:	ins    BYTE PTR es:[edi],dx
  41de98:	cmp    ah,al
  41de9a:	mov    edi,0x962ca5e1
  41de9f:	shl    BYTE PTR [edi],cl
  41dea1:	lods   al,BYTE PTR ds:[esi]
  41dea2:	mov    dl,0xf
  41dea4:	fsub   QWORD PTR [edi-0xf6c6bb6]
  41deaa:	mov    cl,0xab
  41deac:	and    al,0x59
  41deae:	mov    ch,0xd2
  41deb0:	dec    eax
  41deb1:	adc    eax,0x8b78a0a6
  41deb6:	sub    al,0x31
  41deb8:	sub    eax,0x16cc4a33
  41debd:	push   ss
  41debe:	scas   al,BYTE PTR es:[edi]
  41debf:	js     0x41dea5
  41dec1:	fstp   QWORD PTR [edi+0x24dfd694]
  41dec7:	adc    dl,ch
  41dec9:	sbb    BYTE PTR [ebx],bh
  41decb:	mov    esp,0xcd725e7d
  41ded0:	sbb    bl,BYTE PTR [ebx]
  41ded2:	loope  0x41def9
  41ded4:	sbb    eax,0x6404d7c
  41ded9:	ds dec ebx
  41dedb:	dec    edi
  41dedc:	stos   DWORD PTR es:[edi],eax
  41dedd:	cmp    edi,DWORD PTR [edi+ecx*1]
  41dee0:	mov    edx,0x6bd29189
  41dee5:	jb     0x41ded2
  41dee7:	xor    BYTE PTR [edx],0x3b
  41deea:	psadbw mm3,QWORD PTR [ebp-0x75]
  41deee:	add    DWORD PTR [edx],esp
  41def0:	stos   BYTE PTR es:[edi],al
  41def1:	loope  0x41deaa
  41def3:	shl    cl,1
  41def5:	aaa    
  41def6:	(bad)  
  41def7:	shl    bl,cl
  41def9:	xor    ah,BYTE PTR [edx-0x61]
  41defc:	jge    0x41df22
  41defe:	sahf   
  41deff:	sub    bl,BYTE PTR [ebp-0x14]
  41df02:	or     al,0xac
  41df04:	dec    eax
  41df05:	out    0x40,eax
  41df07:	or     edx,edi
  41df09:	pop    ebx
  41df0a:	sbb    eax,0xb90d3a84
  41df0f:	cld    
  41df10:	cmp    eax,0x5851d6b4
  41df15:	cmp    bh,BYTE PTR [edi]
  41df17:	xchg   edx,eax
  41df18:	popf   
  41df19:	push   cs
  41df1a:	(bad)  
  41df1b:	pop    esp
  41df1c:	call   0xe33c7f41
  41df21:	and    cl,BYTE PTR [ebx+0x7e]
  41df24:	pop    ds
  41df25:	jle    0x41df3a
  41df27:	sub    BYTE PTR [eax],cl
  41df29:	dec    eax
  41df2a:	dec    ebx
  41df2b:	aam    0x3
  41df2d:	hlt    
  41df2e:	mov    al,bh
  41df30:	or     eax,0xb0d62cdc
  41df35:	mov    ds:0xc63e4a30,al
  41df3a:	arpl   WORD PTR [eax-0x3a1e99bd],bp
  41df40:	pop    ebp
  41df41:	out    0x3e,al
  41df43:	aad    0x72
  41df45:	pop    es
  41df46:	mov    edx,eax
  41df48:	gs pop esi
  41df4a:	sbb    DWORD PTR [ebx],0x32f7522a
  41df50:	or     DWORD PTR [esi],esp
  41df52:	xor    ch,0x5d
  41df55:	or     al,ah
  41df57:	xchg   ecx,eax
  41df58:	sbb    esp,DWORD PTR [ecx+esi*4]
  41df5b:	(bad)  
  41df5c:	mov    esi,0xc8857a58
  41df61:	xor    eax,DWORD PTR [ebx]
  41df63:	jl     0x41df59
  41df65:	xchg   ecx,eax
  41df66:	js     0x41df45
  41df68:	push   esi
  41df69:	and    DWORD PTR [ebp+0x6b77c6e3],esi
  41df6f:	psubusb mm0,QWORD PTR [edi+0x5a]
  41df73:	rcl    DWORD PTR [edx-0x4f],cl
  41df76:	imul   eax,DWORD PTR [ebx+0x6d],0x5da4fb6c
  41df7d:	call   FWORD PTR [edi+0x2ae40dd8]
  41df83:	(bad)  
  41df84:	fdivr  DWORD PTR [ecx-0x48182d2e]
  41df8a:	cmp    esi,ebp
  41df8c:	imul   ebx,DWORD PTR [edx+0x3f5d243b],0x1472c1c4
  41df96:	adc    dh,BYTE PTR [edx+0x60]
  41df99:	pop    ecx
  41df9a:	xchg   esp,eax
  41df9b:	mov    ch,0x94
  41df9d:	jbe    0x41e012
  41df9f:	lds    esi,FWORD PTR [esi+0xb985651]
  41dfa5:	ror    al,1
  41dfa7:	jge    0x41dfb7
  41dfa9:	shl    DWORD PTR [edx+edx*8-0x3690b021],cl
  41dfb0:	pop    eax
  41dfb1:	sub    al,0xa8
  41dfb3:	fst    DWORD PTR [esi+ebx*8+0xa]
  41dfb7:	aas    
  41dfb8:	ss (bad) 
  41dfbb:	mov    ds:0xc359d97a,eax
  41dfc0:	mov    esi,0xa7d239f8
  41dfc5:	push   edx
  41dfc6:	outs   dx,DWORD PTR ds:[esi]
  41dfc7:	cmp    eax,0xeb208ba4
  41dfcc:	xchg   ebp,eax
  41dfcd:	pop    ds
  41dfce:	daa    
  41dfcf:	rol    BYTE PTR [ebx],cl
  41dfd1:	or     dl,BYTE PTR [edx]
  41dfd3:	(bad)  
  41dfd4:	shr    DWORD PTR [edi],1
  41dfd6:	xchg   ebx,edx
  41dfd8:	jl     0x41dfa1
  41dfda:	xchg   esi,eax
  41dfdb:	sti    
  41dfdc:	into   
  41dfdd:	sub    BYTE PTR [esi+0x40f2ac32],dh
  41dfe3:	mov    DWORD PTR ds:0xd7c7caff,ecx
  41dfe9:	sbb    DWORD PTR [eax+edx*4+0x76],0x7566d359
  41dff1:	outs   dx,BYTE PTR ds:[esi]
  41dff2:	push   es
  41dff3:	xchg   DWORD PTR [ebx+ecx*8],edi
  41dff6:	dec    edx
  41dff7:	(bad)  
  41dff9:	mov    ebx,0x71580835
  41dffe:	mov    edx,edx
  41e000:	xor    al,bh
  41e002:	shr    BYTE PTR ds:0x63ce60b2,0x5c
  41e009:	mov    ecx,ss
  41e00b:	jbe    0x41e026
  41e00d:	(bad)  
  41e00e:	xcrypt-ctr (bad)
  41e00f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e010:	sbb    eax,0xb5d2206c
  41e015:	inc    esi
  41e016:	cmp    BYTE PTR [eax],0x64
  41e019:	mov    ds:0xfb590969,eax
  41e01e:	inc    esi
  41e01f:	sub    BYTE PTR [edx+0x11],dl
  41e022:	ror    dh,1
  41e024:	xchg   cl,dh
  41e026:	sbb    BYTE PTR [edx-0x34],dh
  41e029:	pop    ecx
  41e02a:	in     eax,0x43
  41e02c:	call   0x4b77:0xae1ef242
  41e033:	pop    edx
  41e034:	mov    al,ds:0x879a33ef
  41e039:	sahf   
  41e03a:	add    bh,BYTE PTR [edi]
  41e03c:	neg    BYTE PTR [eax-0x6e]
  41e03f:	sti    
  41e040:	pop    eax
  41e041:	ret    0xaed1
  41e044:	test   eax,0x5dc6fba1
  41e049:	pop    ebp
  41e04a:	fild   DWORD PTR [ebx+0x4e]
  41e04d:	dec    ebp
  41e04e:	jge    0x41e055
  41e050:	(bad)  
  41e051:	je     0x41e0b8
  41e053:	repz and eax,DWORD PTR [esi+0x44]
  41e057:	adc    BYTE PTR [edx],bh
  41e059:	cdq    
  41e05a:	iret   
  41e05b:	ja     0x41e070
  41e05d:	jmp    0x200a:0xe96bf947
  41e064:	inc    esp
  41e065:	ss aam 0x30
  41e068:	enter  0x2d5a,0xde
  41e06c:	cmp    dh,bh
  41e06e:	je     0x41e01c
  41e070:	jmp    0x41e059
  41e072:	push   0x1a
  41e074:	neg    BYTE PTR [edi+0x4b]
  41e077:	imul   eax,DWORD PTR [ebx-0x17],0xf9466c69
  41e07e:	arpl   ax,di
  41e080:	es fs dec ebx
  41e083:	out    dx,al
  41e084:	shl    BYTE PTR [ebx-0x5a],1
  41e087:	int    0xca
  41e089:	mov    ds:0xaa5c1a50,eax
  41e08e:	and    dl,BYTE PTR [edx-0x11]
  41e091:	mov    ds:0x46252f57,al
  41e096:	addr16 inc ebx
  41e098:	(bad)  
  41e09a:	popa   
  41e09b:	lods   al,BYTE PTR ds:[esi]
  41e09c:	repz add ecx,DWORD PTR [ebx+0x24]
  41e0a0:	hlt    
  41e0a1:	enter  0x525f,0xd9
  41e0a5:	fisub  DWORD PTR [edx-0xb]
  41e0a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0a9:	stos   DWORD PTR es:[edi],eax
  41e0aa:	into   
  41e0ab:	int3   
  41e0ac:	das    
  41e0ad:	mov    gs,WORD PTR [edx]
  41e0af:	call   0x5741f808
  41e0b4:	pop    ebp
  41e0b5:	rcl    BYTE PTR [edx-0x39],cl
  41e0b8:	jns    0x41e126
  41e0ba:	mov    bl,0xe6
  41e0bc:	ficomp WORD PTR [ecx+0x21]
  41e0bf:	jb     0x41e0a6
  41e0c1:	outs   dx,DWORD PTR ds:[esi]
  41e0c2:	and    al,0xaf
  41e0c4:	mov    ebx,0xc0294b21
  41e0c9:	iret   
  41e0ca:	xchg   esp,eax
  41e0cb:	int    0x53
  41e0cd:	adc    eax,0xdf61d70d
  41e0d2:	test   DWORD PTR [ebx],0x624e9996
  41e0d8:	push   ecx
  41e0d9:	mov    ds:0xf32d2d48,eax
  41e0de:	push   esi
  41e0df:	mov    esp,0xd96671f7
  41e0e4:	pop    ebp
  41e0e5:	ins    DWORD PTR es:[edi],dx
  41e0e6:	mov    eax,ds:0x32be87e9
  41e0eb:	jmp    0x41e14a
  41e0ed:	dec    ebp
  41e0ee:	popf   
  41e0ef:	(bad)  
  41e0f0:	jg     0x41e0e1
  41e0f2:	xchg   ebx,eax
  41e0f3:	call   0x7d5a:0x5bb595f
  41e0fa:	push   cs
  41e0fb:	int3   
  41e0fc:	inc    esi
  41e0fd:	enter  0xede0,0x52
  41e101:	mov    dl,0xd9
  41e103:	shl    ebp,1
  41e105:	sbb    ch,BYTE PTR [esi]
  41e107:	dec    edx
  41e108:	inc    ecx
  41e109:	xchg   ebx,eax
  41e10a:	xchg   ebp,eax
  41e10b:	sar    dl,cl
  41e10d:	mov    ebp,0x38d47eba
  41e112:	jbe    0x41e0f6
  41e114:	pop    ebp
  41e115:	xor    al,0xb3
  41e117:	xor    DWORD PTR [edx],edi
  41e119:	cmc    
  41e11a:	sub    eax,DWORD PTR [esi-0x4f]
  41e11d:	pop    ecx
  41e11e:	ret    
  41e11f:	pushf  
  41e120:	pop    edx
  41e121:	jecxz  0x41e18f
  41e123:	xor    BYTE PTR ds:0x1ff5162,al
  41e129:	loop   0x41e1a6
  41e12b:	adc    DWORD PTR [ebx-0x2e],esi
  41e12e:	jg     0x41e163
  41e130:	lock mov ecx,0x97ad21c
  41e136:	xor    ecx,edi
  41e138:	fcom   DWORD PTR [ecx+ebx*1]
  41e13b:	mov    al,0x56
  41e13d:	cmp    ch,BYTE PTR ds:0xda9735e4
  41e143:	xchg   ecx,eax
  41e144:	sbb    cl,dh
  41e146:	pop    ebx
  41e147:	shl    DWORD PTR [edi],cl
  41e149:	mov    dl,0x5a
  41e14b:	mov    al,ds:0x4954759a
  41e150:	pop    ebp
  41e151:	or     BYTE PTR [eax+0x6d],bh
  41e154:	repz push ecx
  41e156:	push   0xffffff9d
  41e158:	sbb    dh,dh
  41e15a:	push   esp
  41e15b:	rol    dl,cl
  41e15d:	adc    ebx,DWORD PTR [eax+edx*2]
  41e160:	es and al,0xb0
  41e163:	in     al,dx
  41e164:	pop    ebp
  41e165:	and    BYTE PTR [ebx-0x7ec2d50c],ah
  41e16b:	cmc    
  41e16c:	fadd   QWORD PTR [esi+0x41]
  41e16f:	shr    DWORD PTR [esi+0x5da53f33],0xe0
  41e176:	jnp    0x41e124
  41e178:	std    
  41e179:	mov    ah,0xd1
  41e17b:	dec    esp
  41e17c:	pop    ebp
  41e17d:	push   edx
  41e17e:	fisttp WORD PTR [ecx+0x1caf2605]
  41e184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e185:	pop    ecx
  41e186:	mov    dl,0xac
  41e188:	push   esp
  41e189:	in     eax,0x93
  41e18b:	mov    bh,0x43
  41e18d:	adc    cl,BYTE PTR [ebx-0x2d]
  41e190:	xchg   DWORD PTR [ebx],edx
  41e192:	jo     0x41e182
  41e194:	ds stos BYTE PTR es:[edi],al
  41e196:	sbb    eax,0xed507fd2
  41e19b:	cwde   
  41e19c:	xor    al,0x75
  41e19e:	pushf  
  41e19f:	icebp  
  41e1a0:	pop    ebp
  41e1a1:	call   0x24b2f237
  41e1a6:	stos   BYTE PTR es:[edi],al
  41e1a7:	retf   0x5b48
  41e1aa:	fsubr  st(6),st
  41e1ac:	sbb    ch,al
  41e1ae:	mov    cl,0x66
  41e1b0:	adc    DWORD PTR [esi+0x5d45bc48],eax
  41e1b6:	dec    ebx
  41e1b7:	cmp    BYTE PTR [edx],cl
  41e1b9:	or     eax,0x5964628
  41e1be:	pop    ebx
  41e1bf:	fdivr  QWORD PTR [edx+0x71]
  41e1c2:	(bad)  
  41e1c4:	arpl   WORD PTR [ebp-0x217bcd5e],cx
  41e1ca:	jne    0x41e17b
  41e1cc:	inc    ecx
  41e1cd:	inc    esp
  41e1ce:	pop    eax
  41e1cf:	adc    ecx,0x5562f59
  41e1d5:	fnstenv [ecx]
  41e1d7:	push   ecx
  41e1d8:	jge    0x41e233
  41e1da:	pusha  
  41e1db:	mov    bh,0xdb
  41e1dd:	jno    0x41e1bf
  41e1df:	adc    BYTE PTR [edi-0x66],bl
  41e1e2:	dec    edx
  41e1e3:	add    al,0x44
  41e1e5:	fdiv   st(7),st
  41e1e7:	jp     0x41e1ba
  41e1e9:	in     al,dx
  41e1ea:	mov    eax,ds:0x69ce8bd5
  41e1ef:	icebp  
  41e1f0:	push   ss
  41e1f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1f2:	scas   al,BYTE PTR es:[edi]
  41e1f3:	push   ds
  41e1f4:	nop
  41e1f5:	pop    ss
  41e1f6:	inc    edx
  41e1f7:	(bad)  
  41e1f9:	(bad)  
  41e1fa:	retf   
  41e1fb:	inc    eax
  41e1fc:	test   eax,0x358d01cd
  41e201:	lock dec esp
  41e203:	rol    BYTE PTR [eax+0x40],cl
  41e206:	inc    esp
  41e207:	fstp   TBYTE PTR [edi-0x74]
  41e20a:	fnstenv [ecx]
  41e20c:	jnp    0x41e1b6
  41e20e:	dec    edi
  41e20f:	cld    
  41e210:	jmp    0x9da2:0x9d64aed9
  41e217:	es ss pop ecx
  41e21a:	out    0xfe,eax
  41e21c:	retf   
  41e21d:	mov    edi,0x661e5961
  41e222:	loopne 0x41e2a2
  41e224:	pop    ebp
  41e225:	lahf   
  41e226:	sub    al,BYTE PTR [ecx]
  41e228:	adc    edi,ebp
  41e22a:	enter  0x9eeb,0x5d
  41e22e:	aad    0xa4
  41e230:	sbb    esi,DWORD PTR [ebp-0x4c8cad44]
  41e236:	dec    esi
  41e237:	mov    ebp,0x90031c6a
  41e23c:	cmp    al,BYTE PTR [esi-0x5d]
  41e23f:	mov    al,ds:0xd2b5518a
  41e244:	mov    ebx,0x9ec0a3a4
  41e249:	mov    al,0xc5
  41e24b:	sbb    al,0x5d
  41e24d:	test   BYTE PTR [edi],dh
  41e24f:	call   0xad709d89
  41e254:	call   0xaac1:0x94527447
  41e25b:	inc    ecx
  41e25c:	test   al,0xf8
  41e25e:	enter  0x5d7b,0x9a
  41e262:	xor    eax,0x3906811b
  41e267:	sub    bl,BYTE PTR [ecx+ebx*2-0x3693f5e6]
  41e26e:	or     al,0x81
  41e270:	int    0x99
  41e272:	dec    edx
  41e273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e275:	ret    
  41e276:	lahf   
  41e277:	loope  0x41e227
  41e279:	push   0x8db5d254
  41e27e:	call   0xe00f088
  41e283:	jo     0x41e2e2
  41e285:	sub    BYTE PTR [ebx+0x1279daaf],cl
  41e28b:	ret    0x5967
  41e28e:	arpl   WORD PTR [eax+0x55b409e0],di
  41e294:	aam    0x29
  41e296:	and    ch,BYTE PTR [ebp+0x643f59c5]
  41e29c:	push   edx
  41e29d:	cmc    
  41e29e:	and    DWORD PTR [ebx+esi*1+0x72dc2655],ebp
  41e2a5:	sbb    DWORD PTR [esi-0x78],edi
  41e2a8:	dec    esp
  41e2a9:	adc    eax,0xa55d08c3
  41e2ae:	dec    ebp
  41e2af:	push   ebx
  41e2b0:	popa   
  41e2b1:	pop    ss
  41e2b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2b3:	daa    
  41e2b4:	add    eax,0xd2513671
  41e2b9:	out    0xd0,eax
  41e2bb:	jp     0x41e282
  41e2bd:	arpl   sp,cx
  41e2bf:	pop    es
  41e2c0:	or     DWORD PTR [eax-0x55],esi
  41e2c3:	mov    dl,0x39
  41e2c5:	inc    esi
  41e2c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2c7:	aad    0xb3
  41e2c9:	bnd es je 0x41e2ef
  41e2cd:	into   
  41e2ce:	dec    ebx
  41e2cf:	mov    dl,0x6d
  41e2d1:	fxch   st(5)
  41e2d3:	or     al,0x9
  41e2d5:	nop
  41e2d6:	xchg   BYTE PTR [ecx-0x757e8a76],dh
  41e2dc:	fild   QWORD PTR [ebp+0x1e391596]
  41e2e2:	xchg   ecx,eax
  41e2e3:	loop   0x41e32e
  41e2e5:	mov    ch,0xdb
  41e2e7:	mov    dl,0x5d
  41e2e9:	sub    bh,BYTE PTR [ecx]
  41e2eb:	and    BYTE PTR [eax+0x16],cl
  41e2ee:	sbb    ch,BYTE PTR [edx+edx*1]
  41e2f1:	pop    edi
  41e2f2:	(bad)  
  41e2f3:	xor    cl,BYTE PTR [edx-0x3b]
  41e2f6:	push   bx
  41e2f8:	lods   al,BYTE PTR ds:[esi]
  41e2f9:	and    ch,BYTE PTR [ecx-0x33]
  41e2fc:	pop    esp
  41e2fd:	sbb    esp,ebp
  41e2ff:	test   si,sp
  41e302:	xchg   BYTE PTR [ebx],bh
  41e304:	add    BYTE PTR [edi+edx*4-0x3d],ah
  41e308:	leave  
  41e309:	pop    ecx
  41e30a:	arpl   WORD PTR [esi+0x20],sp
  41e30d:	fimul  WORD PTR [eax]
  41e30f:	jmp    0x41e37c
  41e311:	sbb    cl,BYTE PTR [ebx+0x22]
  41e314:	sbb    dh,BYTE PTR [edi-0x42]
  41e317:	and    al,0x31
  41e319:	inc    esp
  41e31a:	add    dl,dl
  41e31c:	adc    esi,esi
  41e31e:	ret    
  41e31f:	shr    DWORD PTR [eax+ecx*2+0x1a],1
  41e323:	cmp    al,0x5d
  41e325:	cmp    al,0xea
  41e327:	and    DWORD PTR [edi+0x1fbd8bfd],ebp
  41e32d:	inc    esi
  41e32e:	add    eax,DWORD PTR [edx-0x44]
  41e331:	jae    0x41e366
  41e333:	adc    esp,DWORD PTR [eax-0x25]
  41e336:	dec    edx
  41e337:	not    DWORD PTR [eax]
  41e339:	cld    
  41e33a:	pop    edi
  41e33b:	jno    0x41e2fb
  41e33d:	or     DWORD PTR [ecx-0x2e],0xa259a29b
  41e344:	ss in  eax,dx
  41e346:	data16 rcr BYTE PTR [ebp-0x51],1
  41e34a:	ss xchg dh,dh
  41e34d:	shl    BYTE PTR [ecx+0x25488364],1
  41e353:	sar    BYTE PTR ds:0x31a53643,cl
  41e359:	sub    ecx,DWORD PTR [edx]
  41e35b:	jo     0x41e3ba
  41e35d:	cmp    dh,al
  41e35f:	sub    edx,DWORD PTR [ebx+0x5d]
  41e362:	pop    ecx
  41e363:	fdivr  DWORD PTR [eax+ebx*2+0x64]
  41e367:	test   eax,0xfa713da2
  41e36c:	push   0xffffffea
  41e36e:	shl    ah,cl
  41e370:	xor    eax,0xc5aa4ab8
  41e375:	or     BYTE PTR [eax],dl
  41e377:	push   cs
  41e378:	stos   DWORD PTR es:[edi],eax
  41e379:	call   0x92f2e5c8
  41e37e:	pop    ebx
  41e37f:	push   ebp
  41e380:	aaa    
  41e381:	lock mov edx,ss
  41e384:	xor    eax,DWORD PTR [edx-0x19]
  41e387:	(bad)  
  41e388:	fnsave [edx]
  41e38a:	cmp    bh,ch
  41e38c:	jg     0x41e3e8
  41e38e:	jnp    0x41e3e3
  41e390:	mov    al,0x61
  41e392:	mov    ebx,0x91167ca
  41e397:	cld    
  41e398:	ret    
  41e399:	in     al,dx
  41e39a:	retf   0x9e1c
  41e39d:	or     eax,0x325a06b7
  41e3a2:	dec    ebx
  41e3a3:	adc    BYTE PTR [eax-0x1d70cb93],0x94
  41e3aa:	inc    ecx
  41e3ab:	rol    BYTE PTR [esp+ecx*1],cl
  41e3ae:	jae    0x41e3c0
  41e3b0:	push   edi
  41e3b1:	or     BYTE PTR ds:0xa8835d4b,ah
  41e3b7:	mov    cl,0xbe
  41e3b9:	rcr    BYTE PTR [esi-0x1fb9e7f2],1
  41e3bf:	dec    eax
  41e3c0:	data16 add ah,BYTE PTR [ecx+0x79]
  41e3c4:	scas   eax,DWORD PTR es:[edi]
  41e3c5:	push   edi
  41e3c6:	cs cmp ch,cl
  41e3c9:	fnstcw WORD PTR [ebx]
  41e3cb:	add    al,0x49
  41e3cd:	dec    ebp
  41e3ce:	push   ebp
  41e3cf:	xor    BYTE PTR [esi-0x457423b9],al
  41e3d5:	les    edx,FWORD PTR [eax-0x18]
  41e3d8:	adc    dh,dh
  41e3da:	jecxz  0x41e3f8
  41e3dc:	add    eax,0x5cd59de6
  41e3e1:	stos   BYTE PTR es:[edi],al
  41e3e2:	push   0xffffff81
  41e3e4:	add    BYTE PTR [edi+0x45],0x13
  41e3e8:	sbb    eax,0x39408481
  41e3ed:	inc    esi
  41e3ee:	rcr    DWORD PTR [edi+0x18],0xf3
  41e3f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3f3:	mov    dh,0xb3
  41e3f5:	mov    cl,BYTE PTR [ebx+0x47]
  41e3f8:	sbb    al,0x10
  41e3fa:	push   ebp
  41e3fb:	adc    eax,0xd28d4ee9
  41e400:	ds xor bh,bh
  41e403:	sbb    dh,BYTE PTR [esi+edi*2]
  41e406:	popa   
  41e407:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e409:	ror    DWORD PTR [edx-0x37],cl
  41e40c:	jae    0x41e44d
  41e40e:	mov    ebx,0xb78f3a6b
  41e413:	rcl    BYTE PTR [eax],cl
  41e415:	gs aas 
  41e417:	mov    al,ds:0xa5bd71aa
  41e41c:	pop    ebp
  41e41d:	out    dx,eax
  41e41e:	pop    ss
  41e41f:	loop   0x41e3a8
  41e421:	cmp    BYTE PTR [eax+0x78],cl
  41e424:	cli    
  41e425:	xor    dh,BYTE PTR ds:0x42f1a344
  41e42b:	rcr    DWORD PTR [ebp+0x695d1c09],cl
  41e431:	adc    DWORD PTR [esi+0x51d4c4ae],eax
  41e437:	mov    dh,dh
  41e439:	aaa    
  41e43a:	ret    
  41e43b:	xor    al,bh
  41e43d:	repnz and DWORD PTR [bx+di+0x59],esi
  41e442:	leave  
  41e443:	test   al,0xf5
  41e445:	mov    eax,0x756b222a
  41e44a:	dec    ebx
  41e44b:	add    eax,DWORD PTR [esi+0x64525e04]
  41e451:	test   DWORD PTR [edi-0x2e],ecx
  41e454:	pop    edi
  41e455:	ror    BYTE PTR [edi+0x1e303f57],1
  41e45b:	or     al,0xba
  41e45d:	pop    ebx
  41e45e:	dec    ebx
  41e45f:	mov    dh,0xe8
  41e461:	repz out dx,eax
  41e463:	xchg   edx,eax
  41e464:	mov    eax,ds:0x30d22930
  41e469:	rcl    BYTE PTR [ebx+0x50386165],1
  41e46f:	jecxz  0x41e4ce
  41e471:	sbb    cl,BYTE PTR [edi]
  41e473:	popa   
  41e474:	add    cl,ah
  41e476:	(bad)  [ecx+esi*4+0x55]
  41e47a:	mov    BYTE PTR [esi-0x5a782057],dh
  41e480:	es add al,0x4b
  41e483:	mov    ch,0x3a
  41e485:	sar    BYTE PTR [esi],1
  41e487:	in     al,dx
  41e488:	stos   BYTE PTR es:[edi],al
  41e489:	push   0xffffff95
  41e48b:	int    0x61
  41e48d:	mov    eax,ds:0xdb1d25fd
  41e492:	sbb    bh,BYTE PTR [ebp+0x7d]
  41e495:	gs dec ebx
  41e497:	fdivr  QWORD PTR [ecx]
  41e499:	seta   BYTE PTR [ebx-0x4dd78282]
  41e4a0:	jmp    0x74abd5fc
  41e4a5:	cdq    
  41e4a6:	shr    BYTE PTR [edi-0xb],0x47
  41e4aa:	je     0x41e44d
  41e4ac:	jp     0x41e4b1
  41e4ae:	aaa    
  41e4af:	push   edx
  41e4b0:	dec    ebx
  41e4b1:	(bad)  
  41e4b2:	inc    ebp
  41e4b3:	stc    
  41e4b4:	jle    0x41e463
  41e4b6:	sub    al,0xd2
  41e4b8:	push   edx
  41e4b9:	fcmovbe st,st(1)
  41e4bb:	or     al,0x90
  41e4bd:	jmp    0xc4da:0xff58bd9d
  41e4c4:	lahf   
  41e4c5:	aaa    
  41e4c6:	dec    ebx
  41e4c7:	es jle 0x41e49f
  41e4ca:	jp     0x41e533
  41e4cc:	call   0xb8ad142a
  41e4d1:	mov    BYTE PTR [ecx+0x4b1cf37a],cl
  41e4d7:	xor    al,0xbb
  41e4d9:	mov    ebp,0x68ea035a
  41e4de:	lock shl BYTE PTR [eax+0x715c4077],cl
  41e4e5:	mov    eax,ds:0xd5d3daa
  41e4ea:	sar    BYTE PTR [ebp-0x5e],cl
  41e4ed:	or     edi,esi
  41e4ef:	jne    0x41e4a1
  41e4f1:	pop    ecx
  41e4f2:	mov    al,0xda
  41e4f4:	and    ebx,ebp
  41e4f6:	sub    ch,BYTE PTR [esi+0x74]
  41e4f9:	std    
  41e4fa:	sub    BYTE PTR [esi],al
  41e4fc:	inc    eax
  41e4fd:	les    ecx,FWORD PTR [ebx-0x74]
  41e500:	push   0x6b
  41e502:	in     eax,dx
  41e503:	cs or  eax,0xa1ab64c0
  41e509:	pop    ecx
  41e50a:	call   0xab16737a
  41e50f:	dec    edx
  41e510:	pop    ds
  41e511:	inc    edx
  41e512:	dec    edi
  41e513:	es mov ebx,0x1d631aab
  41e519:	pusha  
  41e51a:	ds pop esi
  41e51c:	pop    cx
  41e51e:	lds    ebp,FWORD PTR [edx+0x61]
  41e521:	loop   0x41e563
  41e523:	adc    al,BYTE PTR [eax]
  41e525:	lahf   
  41e526:	dec    edx
  41e527:	mov    ecx,0x9d2c0f82
  41e52c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e52d:	xor    ecx,DWORD PTR [edi-0x2e]
  41e530:	push   es
  41e531:	(bad)  
  41e532:	int    0xef
  41e534:	dec    edx
  41e535:	nop
  41e536:	stos   DWORD PTR es:[edi],eax
  41e537:	and    eax,0xc7fb3a5d
  41e53c:	pop    edx
  41e53d:	jp     0x41e54f
  41e53f:	mov    ah,0x8a
  41e541:	pop    esi
  41e542:	mov    eax,ds:0xb3a9b7de
  41e547:	adc    al,BYTE PTR [ebp-0x22]
  41e54a:	xchg   esp,eax
  41e54b:	push   esi
  41e54c:	push   ebx
  41e54d:	inc    edi
  41e54e:	lods   al,BYTE PTR ds:[esi]
  41e54f:	mov    al,al
  41e551:	mov    esi,0x2970922b
  41e556:	sar    BYTE PTR ds:[edx-0x24],cl
  41e55a:	mul    DWORD PTR [edi+0x2e52d161]
  41e560:	pop    ebp
  41e561:	ja     0x41e589
  41e563:	jae    0x41e53d
  41e565:	sub    eax,0x5970cd70
  41e56a:	and    al,0x54
  41e56c:	push   ebx
  41e56d:	stos   DWORD PTR es:[edi],eax
  41e56e:	popa   
  41e56f:	pop    es
  41e570:	fnstenv [edx+ecx*2-0x19d533c]
  41e577:	ins    DWORD PTR es:[edi],dx
  41e578:	popf   
  41e579:	stos   BYTE PTR es:[edi],al
  41e57a:	and    dl,dl
  41e57c:	mov    ds:0xf535b0f1,eax
  41e581:	pop    ss
  41e582:	and    al,0x82
  41e584:	pop    ebp
  41e585:	mov    ecx,0x164dc734
  41e58a:	fsub   QWORD PTR [ecx-0x634aaff]
  41e590:	into   
  41e591:	aaa    
  41e592:	push   esp
  41e593:	test   BYTE PTR [esi-0x5f],bl
  41e596:	dec    ch
  41e598:	push   edx
  41e599:	bound  ecx,QWORD PTR [ebx+0x73]
  41e59c:	xchg   ecx,eax
  41e59d:	push   0xffffff8a
  41e59f:	das    
  41e5a0:	adc    BYTE PTR [esi-0x3],al
  41e5a3:	and    edi,edx
  41e5a5:	push   ss
  41e5a6:	ret    
  41e5a7:	push   esi
  41e5a8:	js     0x41e538
  41e5aa:	inc    esi
  41e5ab:	pop    ebp
  41e5ac:	dec    esp
  41e5ad:	inc    esi
  41e5ae:	retf   
  41e5af:	clc    
  41e5b0:	scas   al,BYTE PTR es:[edi]
  41e5b1:	xor    dh,al
  41e5b3:	les    ebx,FWORD PTR [ebx+0x59]
  41e5b6:	jle    0x41e5d6
  41e5b8:	stc    
  41e5b9:	shr    DWORD PTR ds:0x4afc2576,cl
  41e5bf:	sub    al,0x79
  41e5c1:	sub    bh,BYTE PTR [edx-0x2bcc0751]
  41e5c7:	rcl    BYTE PTR [ebp+0x1ab302d9],cl
  41e5cd:	or     BYTE PTR [eax-0x252aa24a],0xe0
  41e5d4:	dec    WORD PTR [ecx-0x50bbcbb8]
  41e5db:	xchg   ecx,eax
  41e5dc:	enter  0x545c,0xcc
  41e5e0:	das    
  41e5e1:	data16 xor al,0x32
  41e5e4:	repnz sti 
  41e5e6:	dec    ecx
  41e5e7:	(bad)  
  41e5e8:	in     al,dx
  41e5e9:	inc    ebp
  41e5ea:	imul   DWORD PTR [ebx]
  41e5ec:	lea    eax,[eax]
  41e5ee:	imul   ecx,DWORD PTR [ebx-0x1e83a6bb],0xffffff8f
  41e5f5:	lock adc DWORD PTR [ecx+0x70],0xffffffb1
  41e5fa:	dec    edx
  41e5fb:	mov    bl,0xe
  41e5fd:	call   0xd221:0xf88109ca
  41e604:	xchg   BYTE PTR [ecx],cl
  41e606:	loope  0x41e619
  41e608:	pop    ebx
  41e609:	(bad)
  41e60c:	pop    ebp
  41e60d:	cwde   
  41e60e:	sub    BYTE PTR [eax],bh
  41e610:	push   es
  41e611:	or     dl,BYTE PTR [ecx-0x10]
  41e614:	inc    esi
  41e615:	pop    ecx
  41e616:	adc    cl,BYTE PTR [ebp-0x65]
  41e619:	jmp    DWORD PTR [esi+0x4b644144]
  41e61f:	outs   dx,BYTE PTR ds:[esi]
  41e620:	jbe    0x41e5df
  41e622:	scas   al,BYTE PTR es:[edi]
  41e623:	daa    
  41e624:	mov    ecx,0xbad35e41
  41e629:	xchg   esp,eax
  41e62a:	sub    BYTE PTR [esi],0x4b
  41e62d:	out    dx,eax
  41e62e:	jecxz  0x41e672
  41e630:	jp     0x41e5b5
  41e632:	dec    ebx
  41e633:	mov    bh,0x69
  41e635:	xor    edx,DWORD PTR [ebp+0x5adbdf13]
  41e63b:	sbb    al,0x8c
  41e63d:	pop    ecx
  41e63e:	mov    dh,0x7c
  41e640:	ins    BYTE PTR es:[edi],dx
  41e641:	sbb    al,0xa0
  41e643:	aad    0xe0
  41e645:	mov    edi,0xaca7c84a
  41e64a:	in     al,dx
  41e64b:	pop    esi
  41e64c:	mov    ecx,0xd438ccb5
  41e651:	pop    ecx
  41e652:	jle    0x41e5f9
  41e654:	adc    BYTE PTR [edi],bl
  41e656:	lock test BYTE PTR [esi-0x68],cl
  41e65a:	dec    edx
  41e65b:	xchg   esi,eax
  41e65c:	sti    
  41e65d:	call   0xfbef3cea
  41e662:	cmp    dl,cl
  41e664:	xlat   BYTE PTR ds:[ebx]
  41e665:	sub    BYTE PTR fs:[esi-0x1c],dh
  41e669:	cmc    
  41e66a:	sar    BYTE PTR [eax],cl
  41e66c:	pop    ebx
  41e66d:	iret   
  41e66e:	dec    edx
  41e66f:	mov    bl,0x5a
  41e671:	test   ah,dh
  41e673:	push   ebp
  41e674:	rcl    edi,1
  41e676:	xchg   esp,eax
  41e677:	sar    BYTE PTR [esi+0x5c],cl
  41e67a:	mov    al,ds:0x7989520a
  41e67f:	sahf   
  41e680:	push   edx
  41e681:	dec    ebp
  41e682:	push   eax
  41e683:	mov    edi,0x8b12457c
  41e688:	inc    ebp
  41e689:	adc    ch,ch
  41e68b:	and    BYTE PTR [ecx+0x73],0x41
  41e68f:	lods   al,BYTE PTR ds:[esi]
  41e690:	fs inc ebx
  41e692:	mov    ah,dh
  41e694:	inc    ebx
  41e695:	jbe    0x41e65c
  41e697:	pop    edi
  41e698:	pushf  
  41e699:	cmp    esp,ebp
  41e69b:	in     eax,dx
  41e69c:	push   ebp
  41e69d:	push   edi
  41e69e:	and    ebp,DWORD PTR [ebp-0x15]
  41e6a1:	pop    ecx
  41e6a2:	retf   0x248a
  41e6a5:	mul    dh
  41e6a7:	jecxz  0x41e706
  41e6a9:	imul   edi,DWORD PTR [edi+0x387a5335],0x42
  41e6b0:	inc    ebp
  41e6b1:	jge    0x41e651
  41e6b3:	xor    eax,DWORD PTR [edx]
  41e6b5:	inc    esi
  41e6b6:	clc    
  41e6b7:	cwde   
  41e6b8:	idiv   eax
  41e6ba:	cmp    eax,0x239f5d1b
  41e6bf:	call   0xce50b742
  41e6c4:	xchg   BYTE PTR [ecx-0x6a],bl
  41e6c7:	adc    dh,BYTE PTR [esi-0x514c5b60]
  41e6cd:	scas   al,BYTE PTR es:[edi]
  41e6ce:	dec    edx
  41e6cf:	xchg   DWORD PTR [ecx],eax
  41e6d1:	shl    DWORD PTR [ebx+0x5b316ed3],0xd3
  41e6d8:	xchg   bh,bl
  41e6da:	sbb    DWORD PTR [eax],esi
  41e6dc:	cmp    BYTE PTR [eax],al
  41e6de:	jno    0x41e6ad
  41e6e0:	test   eax,0x5bd28fa2
  41e6e5:	sbb    al,0x67
  41e6e7:	push   edx
  41e6e8:	pushf  
  41e6e9:	ja     0x41e6fe
  41e6eb:	shr    BYTE PTR [ecx+0x65],cl
  41e6ee:	fwait
  41e6ef:	fs pop edx
  41e6f1:	das    
  41e6f2:	xchg   ebx,eax
  41e6f3:	mov    ecx,0xf74b7e3d
  41e6f8:	jge    0x41e713
  41e6fa:	dec    edx
  41e6fb:	mov    dl,0xd7
  41e6fd:	in     eax,dx
  41e6fe:	(bad)  
  41e700:	sbb    bh,dl
  41e702:	sbb    edi,DWORD PTR [edi]
  41e704:	push   eax
  41e705:	repnz out dx,eax
  41e707:	fs inc ebx
  41e709:	jmp    0x7176:0x345d97d3
  41e710:	loope  0x41e69b
  41e712:	add    eax,0x6f595bc2
  41e717:	(bad)  [edx-0x3d]
  41e71a:	and    al,0x28
  41e71c:	push   es
  41e71d:	lods   al,BYTE PTR ds:[esi]
  41e71e:	dec    edx
  41e71f:	mov    ebp,0x5e24077b
  41e724:	clc    
  41e725:	cwde   
  41e726:	add    dl,dl
  41e728:	ins    DWORD PTR es:[edi],dx
  41e729:	mov    ecx,0x5d0a312a
  41e72e:	cli    
  41e72f:	sbb    BYTE PTR [ebp+0x41],bl
  41e732:	xor    dl,bl
  41e734:	xchg   ecx,eax
  41e735:	fmul   DWORD PTR [edi-0x20a6757c]
  41e73b:	push   ecx
  41e73c:	sub    eax,0x8e0dbc48
  41e742:	inc    edi
  41e743:	adc    al,0x55
  41e745:	cmp    ecx,DWORD PTR [ebx-0x65427050]
  41e74b:	cmp    eax,0xd2f135ea
  41e750:	(bad)  
  41e751:	xchg   esp,eax
  41e752:	mov    esp,0x7d3e8cf2
  41e757:	int    0x7e
  41e759:	pop    es
  41e75a:	test   al,0x66
  41e75c:	aas    
  41e75d:	(bad)  
  41e75e:	iret   
  41e75f:	hlt    
  41e760:	sar    edi,cl
  41e762:	dec    edx
  41e763:	icebp  
  41e764:	loopne 0x41e711
  41e766:	les    esi,FWORD PTR [edx+0x4485994]
  41e76c:	sbb    ecx,DWORD PTR [esi-0x46]
  41e76f:	inc    BYTE PTR [esi+0x691b4add]
  41e775:	sub    ah,BYTE PTR [eax]
  41e777:	push   cs
  41e778:	fmul   st,st(2)
  41e77a:	loope  0x41e7de
  41e77c:	imul   ebx,DWORD PTR [edx-0x41],0xda6bed59
  41e783:	test   eax,0x9454decd
  41e788:	cmp    esi,DWORD PTR [ebx+0x4b]
  41e78b:	fstp   TBYTE PTR [edx+eax*4+0x303018b7]
  41e792:	cmp    DWORD PTR [edx],ecx
  41e794:	xchg   ebx,eax
  41e795:	mov    ebp,0x6e5ed14b
  41e79a:	mov    edi,0xa991d5d6
  41e79f:	fcom   DWORD PTR [ebp+0x5d3e8f4c]
  41e7a5:	imul   esp,DWORD PTR [ebp+edx*8+0x2f],0x90075101
  41e7ad:	pop    edx
  41e7ae:	rcl    al,1
  41e7b0:	loop   0x41e766
  41e7b2:	test   DWORD PTR [esi],edx
  41e7b4:	in     eax,dx
  41e7b5:	xchg   esp,eax
  41e7b6:	add    BYTE PTR ds:0xe45175ad,bh
  41e7bc:	mov    ebx,0xe2d8b3a
  41e7c1:	out    0x49,al
  41e7c3:	mov    BYTE PTR [ebp+0x49d2ab3f],0xb
  41e7ca:	xchg   edx,eax
  41e7cb:	fsub   QWORD PTR [edi+0x5df1af47]
  41e7d1:	scas   eax,DWORD PTR es:[edi]
  41e7d2:	adc    al,0x5a
  41e7d4:	nop
  41e7d5:	neg    edx
  41e7d7:	ret    
  41e7d8:	sub    DWORD PTR [esi+0x1f],eax
  41e7db:	and    dl,ah
  41e7dd:	(bad)  
  41e7df:	or     dl,BYTE PTR [edi+0x33]
  41e7e2:	dec    ebx
  41e7e3:	jns    0x41e76e
  41e7e5:	push   ebp
  41e7e6:	push   ecx
  41e7e7:	sar    DWORD PTR [eax+0x2f],cl
  41e7ea:	or     ah,0x53
  41e7ed:	loope  0x41e7a0
  41e7ef:	push   es
  41e7f0:	jge    0x41e81c
  41e7f2:	outs   dx,BYTE PTR ds:[esi]
  41e7f3:	fwait
  41e7f4:	and    eax,ecx
  41e7f6:	dec    edx
  41e7f7:	add    BYTE PTR [eax],ah
  41e7f9:	dec    ebx
  41e7fa:	ss repnz iret 
  41e7fd:	sti    
  41e7fe:	call   0xc8e9:0x469ab8d2
  41e805:	test   DWORD PTR [edx+0x45],ebx
  41e808:	pop    ebp
  41e809:	pop    es
  41e80a:	add    esp,eax
  41e80c:	mov    al,0x89
  41e80e:	and    DWORD PTR [edi],ecx
  41e810:	push   edi
  41e811:	pop    ecx
  41e812:	icebp  
  41e813:	or     eax,0x7523a0ff
  41e818:	(bad)  
  41e819:	pop    ebp
  41e81a:	dec    ebx
  41e81b:	sub    DWORD PTR [eax-0x26],edi
  41e81e:	test   DWORD PTR ds:[esi],0x74d2e62e
  41e825:	aam    0xe9
  41e827:	fld    DWORD PTR [ecx]
  41e829:	xchg   esp,eax
  41e82a:	jg     0x41e7fc
  41e82c:	push   ebx
  41e82d:	sub    eax,0x26d8574
  41e832:	mov    edx,DWORD PTR [edx]
  41e834:	inc    ebx
  41e835:	or     BYTE PTR [ebp-0x584b362e],bl
  41e83b:	and    BYTE PTR [esi-0x6a2e0c10],cl
  41e841:	retf   
  41e842:	dec    ebp
  41e843:	retf   
  41e844:	xchg   BYTE PTR [edx+0x63],bh
  41e847:	sar    DWORD PTR ds:0x14145e80,cl
  41e84d:	dec    edx
  41e84e:	aas    
  41e84f:	cli    
  41e850:	out    0x0,al
  41e852:	retf   
  41e853:	mov    eax,0x13c9723c
  41e858:	or     ecx,eax
  41e85a:	dec    ebx
  41e85b:	sar    DWORD PTR [esi+edi*8-0x16],cl
  41e85f:	sti    
  41e860:	pusha  
  41e861:	mov    ch,0x79
  41e863:	jae    0x41e865
  41e865:	gs popa 
  41e867:	shl    DWORD PTR [edi-0x7a56455],cl
  41e86d:	int    0xfb
  41e86f:	xchg   ebx,eax
  41e870:	outs   dx,BYTE PTR ds:[esi]
  41e871:	add    al,0x11
  41e873:	push   ss
  41e874:	aaa    
  41e875:	data16 adc BYTE PTR [ebx+eiz*4-0x1c02c58d],0xd4
  41e87e:	push   ecx
  41e87f:	test   edx,edx
  41e881:	or     al,0x11
  41e883:	(bad)  
  41e884:	mul    BYTE PTR [ebx]
  41e886:	jmp    0x41e80a
  41e888:	dec    ebp
  41e889:	dec    ecx
  41e88a:	jne    0x41e8f9
  41e88c:	pop    ebp
  41e88d:	cmp    DWORD PTR [ebp+0x45],0xffffff9d
  41e891:	iret   
  41e892:	dec    esi
  41e893:	and    DWORD PTR [ebx+0x56],edx
  41e896:	or     BYTE PTR [ecx],dl
  41e898:	and    al,0xc6
  41e89a:	mov    WORD PTR [edi],fs
  41e89c:	mov    eax,ds:0x5d2b3eec
  41e8a1:	xor    eax,0xd783a0fd
  41e8a6:	popa   
  41e8a7:	clc    
  41e8a8:	sbb    eax,0xdd841572
  41e8ad:	sub    al,0xf6
  41e8af:	js     0x41e8b2
  41e8b1:	(bad)  
  41e8b2:	addr16 leave 
  41e8b4:	pop    ebp
  41e8b5:	or     eax,0xe355954a
  41e8ba:	push   ebp
  41e8bb:	cli    
  41e8bc:	nop
  41e8bd:	pop    ecx
  41e8be:	mov    dl,0x5b
  41e8c0:	fisttp QWORD PTR [ecx+0x7f]
  41e8c3:	sbb    bh,bh
  41e8c5:	xchg   ebx,eax
  41e8c6:	push   ecx
  41e8c7:	mov    bl,0xe0
  41e8c9:	fcmovne st,st(3)
  41e8cb:	sar    BYTE PTR [eax],cl
  41e8cd:	aas    
  41e8ce:	dec    al
  41e8d0:	daa    
  41e8d1:	mov    esi,0x6c44d216
  41e8d6:	xchg   ebp,eax
  41e8d7:	test   al,0x7c
  41e8d9:	sbb    al,0x3e
  41e8db:	xchg   edx,eax
  41e8dc:	cmp    ebp,ebx
  41e8de:	dec    edx
  41e8df:	adc    bl,BYTE PTR [edx+ebp*4]
  41e8e2:	rol    ebp,0xb5
  41e8e5:	xchg   ah,bh
  41e8e7:	rol    BYTE PTR [eax],cl
  41e8e9:	fcom   DWORD PTR [edx+0x635f035c]
  41e8ef:	adc    al,0x5d
  41e8f1:	scas   eax,DWORD PTR es:[edi]
  41e8f2:	adc    DWORD PTR [ecx+0x20],edx
  41e8f5:	in     eax,dx
  41e8f6:	xchg   edi,eax
  41e8f7:	xchg   esp,eax
  41e8f8:	retf   
  41e8f9:	pop    esi
  41e8fa:	jne    0x41e880
  41e8fc:	push   ds
  41e8fd:	jmp    0xbf55:0xa9cac360
  41e904:	pop    ebp
  41e905:	das    
  41e906:	push   ecx
  41e907:	les    edi,FWORD PTR [eax+0x3b]
  41e90a:	jmp    0x41e8a7
  41e90c:	xor    DWORD PTR [edi+esi*8-0x7e],eax
  41e910:	(bad)  
  41e911:	cmp    eax,0xa2392ccb
  41e916:	inc    esi
  41e917:	jno    0x41e975
  41e919:	cmp    bl,BYTE PTR [edi-0x6d68451e]
  41e91f:	and    eax,0xd22a692d
  41e924:	sbb    DWORD PTR ds:0x904bb5b5,esp
  41e92a:	push   cs
  41e92b:	int    0x3f
  41e92d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e92e:	dec    edx
  41e92f:	icebp  
  41e930:	sbb    ah,BYTE PTR [edi-0x41d3a9c6]
  41e936:	call   0x29da5f0c
  41e93b:	imul   ecx,DWORD PTR [eax],0xffffffdc
  41e93e:	mov    edx,0x4b051337
  41e943:	dec    eax
  41e944:	(bad)  
  41e945:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e946:	std    
  41e947:	sbb    DWORD PTR [esi+0x64],ebx
  41e94a:	sti    
  41e94b:	shr    DWORD PTR [edi+esi*4+0x7e567142],cl
  41e952:	cmp    al,0xc6
  41e954:	ins    BYTE PTR es:[edi],dx
  41e955:	push   esp
  41e956:	dec    ebx
  41e957:	xchg   esi,eax
  41e958:	inc    esi
  41e959:	(bad)  [ecx-0x49]
  41e95c:	loopne 0x41e96f
  41e95e:	pop    edi
  41e95f:	ror    edi,cl
  41e961:	or     bl,cl
  41e963:	es xchg esi,eax
  41e965:	mov    edx,0x90213cc5
  41e96a:	dec    edx
  41e96b:	loope  0x41e970
  41e96d:	in     al,0x2b
  41e96f:	push   ebx
  41e970:	xor    DWORD PTR [esi+0x5aeecda2],edi
  41e976:	js     0x41e975
  41e978:	js     0x41e9c0
  41e97a:	mov    ds,WORD PTR [eax]
  41e97c:	xor    BYTE PTR [ebx],bl
  41e97e:	push   eax
  41e97f:	xchg   edx,eax
  41e980:	cld    
  41e981:	shr    DWORD PTR [esi-0x4fcba241],1
  41e987:	and    al,0xe1
  41e989:	xlat   BYTE PTR ds:[ebx]
  41e98a:	xor    DWORD PTR [edx+0x3e],eax
  41e98d:	mov    ah,0xd0
  41e98f:	shr    BYTE PTR [eax-0x3055282e],cl
  41e995:	inc    ebp
  41e996:	sbb    ch,BYTE PTR [ecx]
  41e998:	pop    ebp
  41e999:	push   ecx
  41e99a:	and    eax,0x187c6e1e
  41e99f:	cmc    
  41e9a0:	jle    0x41e9fb
  41e9a2:	out    0xc7,al
  41e9a4:	shl    BYTE PTR [ebx-0x6a],1
  41e9a7:	xor    BYTE PTR [eax-0x2cd4b472],0xff
  41e9ae:	mov    ebx,0x63b40ad
  41e9b3:	sar    edi,1
  41e9b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9b6:	test   DWORD PTR [esi+0x16be531f],0x9694f014
  41e9c0:	dec    esp
  41e9c1:	clc    
  41e9c2:	dec    edx
  41e9c3:	test   eax,0xc5df26af
  41e9c8:	jb     0x41e96e
  41e9ca:	mov    eax,0x3c5997b2
  41e9cf:	mov    bh,0x83
  41e9d1:	test   BYTE PTR [ecx],ah
  41e9d3:	push   esi
  41e9d4:	loope  0x41e9a0
  41e9d6:	dec    edx
  41e9d7:	inc    DWORD PTR [eax+esi*2]
  41e9da:	sti    
  41e9db:	push   ss
  41e9dc:	or     dh,bh
  41e9de:	dec    esp
  41e9df:	test   bl,0xfd
  41e9e2:	cmc    
  41e9e3:	shl    BYTE PTR [eax+edx*8-0x67882917],cl
  41e9ea:	and    DWORD PTR [esp+ecx*8+0x6e2b346a],esi
  41e9f1:	sbb    bl,cl
  41e9f3:	jno    0x41e989
  41e9f5:	scas   al,BYTE PTR es:[edi]
  41e9f6:	push   DWORD PTR [edx-0x287d8fe]
  41e9fc:	mov    edi,0x2a3d621b
  41ea01:	outs   dx,BYTE PTR ds:[esi]
  41ea02:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea04:	lds    ebx,FWORD PTR [ecx+0x37]
  41ea07:	pop    edi
  41ea08:	jg     0x41e98a
  41ea0a:	push   ebp
  41ea0b:	pop    eax
  41ea0c:	scas   al,BYTE PTR es:[edi]
  41ea0d:	cdq    
  41ea0e:	loop   0x41ea8f
  41ea10:	pop    ebp
  41ea11:	aaa    
  41ea12:	xor    al,0xed
  41ea14:	repz loope 0x41e9d9
  41ea17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea18:	pop    esi
  41ea19:	pop    ecx
  41ea1a:	call   0xf70767bc
  41ea1f:	add    eax,0x70a2ff89
  41ea24:	pop    ebp
  41ea25:	adc    BYTE PTR [edx+0x76cd8c6c],ch
  41ea2b:	pop    edx
  41ea2c:	call   0x3369:0xd3cad459
  41ea33:	push   ds
  41ea34:	jns    0x41ea0a
  41ea36:	out    0xc,eax
  41ea38:	pop    esp
  41ea39:	repnz push cs
  41ea3b:	mov    fs,ebx
  41ea3d:	and    dl,BYTE PTR [edx-0xe]
  41ea40:	dec    ecx
  41ea41:	inc    ecx
  41ea42:	(bad)  
  41ea44:	ret    0x5bdb
  41ea47:	adc    eax,0x5a02f1cf
  41ea4c:	pop    ebp
  41ea4d:	dec    esp
  41ea4e:	xchg   esi,eax
  41ea4f:	inc    eax
  41ea50:	retf   0x2cd2
  41ea53:	test   al,0x92
  41ea55:	jo     0x41eab3
  41ea57:	loop   0x41eab6
  41ea59:	xor    eax,ecx
  41ea5b:	or     al,0x30
  41ea5d:	hlt    
  41ea5e:	pop    bx
  41ea60:	push   edx
  41ea61:	mov    ebp,0x9c9a80c5
  41ea66:	push   ss
  41ea67:	scas   al,BYTE PTR es:[edi]
  41ea68:	sbb    eax,0x3ef4f971
  41ea6d:	inc    esi
  41ea6e:	adc    DWORD PTR [edi],esp
  41ea70:	inc    esi
  41ea71:	in     al,0xbd
  41ea73:	sub    eax,0xd6560470
  41ea78:	jg     0x41ea72
  41ea7a:	jle    0x41eabd
  41ea7c:	xor    DWORD PTR [esi+0x5b3fa237],esi
  41ea82:	rol    DWORD PTR [ecx+0x5275f83],0x25
  41ea89:	js     0x41ea5e
  41ea8b:	je     0x41eacb
  41ea8d:	mov    ds:0x697c8c9a,eax
  41ea92:	mov    ebx,0x49395636
  41ea97:	lods   eax,DWORD PTR ds:[esi]
  41ea98:	ror    BYTE PTR [ecx+0x1b],cl
  41ea9b:	mov    ch,0x8d
  41ea9d:	pop    ds
  41ea9e:	(bad)  
  41eaa0:	mov    ds:0x82e45aa3,eax
  41eaa5:	jo     0x41eae9
  41eaa7:	imul   ebx,DWORD PTR [ebp+0x60],0x4a
  41eaab:	sbb    eax,edi
  41eaad:	mov    ebx,0x5bcd850a
  41eab2:	dec    ebp
  41eab3:	inc    ebx
  41eab4:	mov    eax,0x12714829
  41eab9:	mov    ecx,ebp
  41eabb:	add    eax,0x83d41e9d
  41eac0:	pop    ebp
  41eac1:	mov    WORD PTR [ecx-0x2e],?
  41eac4:	inc    esp
  41eac5:	(bad)  
  41eac6:	xchg   edi,eax
  41eac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eac8:	dec    ebx
  41eac9:	push   esp
  41eaca:	inc    esi
  41eacb:	sbb    eax,0x83665abf
  41ead0:	not    eax
  41ead2:	xchg   edx,eax
  41ead3:	adc    cl,bh
  41ead5:	repz dec ecx
  41ead7:	es mov al,0x4d
  41eada:	out    0x25,eax
  41eadc:	pop    ebp
  41eadd:	int    0xa9
  41eadf:	lea    eax,[eax+0x29fc5459]
  41eae5:	xchg   ebx,eax
  41eae6:	pop    eax
  41eae7:	or     ch,al
  41eae9:	push   cs
  41eaea:	sub    eax,0x15d946c9
  41eaef:	mov    cl,0x9f
  41eaf1:	mov    dl,0x14
  41eaf3:	fs jns 0x41eb4b
  41eaf6:	jns    0x41eb77
  41eaf8:	rcr    DWORD PTR [ecx-0x787699ce],1
  41eafe:	lds    ecx,FWORD PTR [edi]
  41eb00:	pop    ebp
  41eb01:	js     0x41ea87
  41eb03:	mov    ss,WORD PTR [esi-0x7a420af0]
  41eb09:	pop    ecx
  41eb0a:	xchg   DWORD PTR [esi+0x39],ecx
  41eb0d:	fdiv   DWORD PTR [esi]
  41eb0f:	js     0x41eb36
  41eb11:	pop    esi
  41eb12:	push   esp
  41eb13:	ins    DWORD PTR es:[edi],dx
  41eb14:	test   eax,0x3ba1d60d
  41eb19:	mov    dh,0xda
  41eb1b:	fcom   DWORD PTR [ebx]
  41eb1d:	inc    esi
  41eb1e:	je     0x41eb6e
  41eb20:	push   edi
  41eb21:	je     0x41eb0c
  41eb23:	(bad)  
  41eb24:	nop
  41eb25:	xor    BYTE PTR [ebx+0x3f],cl
  41eb28:	pop    ecx
  41eb29:	mov    al,0x4e
  41eb2b:	leave  
  41eb2c:	pop    esp
  41eb2d:	inc    esp
  41eb2e:	add    dl,dl
  41eb30:	out    dx,al
  41eb31:	mov    ss,WORD PTR [esi+0x6a]
  41eb34:	xor    DWORD PTR [eax],edi
  41eb36:	call   0xad24893
  41eb3b:	jge    0x41eb86
  41eb3d:	sub    bl,cl
  41eb3f:	xor    ebx,edx
  41eb41:	inc    esi
  41eb42:	(bad)  
  41eb43:	(bad)  [ebx]
  41eb45:	jno    0x41eb52
  41eb47:	addr16 dec ebp
  41eb49:	push   eax
  41eb4a:	cdq    
  41eb4b:	int    0x5d
  41eb4d:	rcl    BYTE PTR [eax+0x30],0xae
  41eb51:	pop    ds
  41eb52:	stos   DWORD PTR es:[edi],eax
  41eb53:	test   DWORD PTR [edx],0x2cd65fbc
  41eb59:	icebp  
  41eb5a:	cmp    BYTE PTR [ebp+0x62a2a203],al
  41eb60:	mov    bh,0xcb
  41eb62:	push   ebx
  41eb63:	sub    eax,0x52932537
  41eb68:	popf   
  41eb69:	sub    dh,BYTE PTR [edi+esi*1-0x48]
  41eb6d:	pop    ecx
  41eb6e:	(bad)
  41eb71:	sub    DWORD PTR [eax+esi*1-0x4b550b2],esp
  41eb78:	sub    BYTE PTR ss:[edx-0x18be61b5],0xcd
  41eb80:	fucomi st,st(6)
  41eb82:	mov    al,0x40
  41eb84:	push   ss
  41eb85:	push   esp
  41eb86:	cmp    dh,BYTE PTR [edx]
  41eb88:	xchg   ebx,eax
  41eb89:	sbb    eax,0x695dd47b
  41eb8e:	jle    0x41ebe4
  41eb90:	push   edi
  41eb91:	mov    eax,0xcd428fa5
  41eb96:	pop    ebx
  41eb97:	out    dx,eax
  41eb98:	and    DWORD PTR [esi],eax
  41eb9a:	mov    esi,0x169b72d2
  41eb9f:	xor    BYTE PTR [esp+eax*8-0x631be3b6],cl
  41eba6:	imul   ebp,DWORD PTR [ebp-0x2ca7e512],0x855b02e
  41ebb0:	mov    dl,0x58
  41ebb2:	cmp    DWORD PTR [ebx-0x23d469a3],edi
  41ebb8:	pop    ebx
  41ebb9:	and    BYTE PTR [eax],al
  41ebbb:	inc    ebp
  41ebbc:	inc    esp
  41ebbd:	pop    ecx
  41ebbe:	mov    esp,0xf5aa9c30
  41ebc3:	retf   0x8533
  41ebc6:	in     al,dx
  41ebc7:	mov    ds,WORD PTR [ebp+0x74]
  41ebca:	xor    dh,BYTE PTR [ecx+0x2816c077]
  41ebd0:	fcom   DWORD PTR [ebp-0x55]
  41ebd3:	push   esp
  41ebd4:	rcr    DWORD PTR [ecx+0x27],cl
  41ebd7:	test   BYTE PTR [edi+0x7ef22c83],bh
  41ebdd:	rcr    BYTE PTR [edx-0x45],1
  41ebe0:	pop    ebp
  41ebe1:	cmp    cl,BYTE PTR [edi+0x65]
  41ebe4:	stos   DWORD PTR es:[edi],eax
  41ebe5:	sbb    al,0x23
  41ebe7:	xor    eax,0x59846b76
  41ebec:	(bad)  
  41ebed:	pop    ecx
  41ebee:	cwde   
  41ebef:	mov    edx,0x6450b037
  41ebf4:	pop    ebp
  41ebf5:	jl     0x41eb79
  41ebf7:	and    esi,DWORD PTR [esi]
  41ebf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebfa:	jmp    0x849b48dd
  41ebff:	test   BYTE PTR [edx+edi*8],0x2b
  41ec03:	out    0x42,al
  41ec05:	fimul  DWORD PTR [edx+0x53]
  41ec08:	sub    ebp,edx
  41ec0a:	xchg   edi,eax
  41ec0b:	push   cs
  41ec0c:	dec    eax
  41ec0d:	dec    ebp
  41ec0e:	jae    0x41ebdd
  41ec10:	test   al,0xc1
  41ec12:	sbb    bl,ch
  41ec14:	popf   
  41ec15:	pushf  
  41ec16:	jl     0x41ebaf
  41ec18:	ds pushf 
  41ec1a:	dec    edx
  41ec1b:	rol    bh,1
  41ec1d:	clc    
  41ec1e:	cmp    DWORD PTR [ebx-0x2d01e0af],eax
  41ec24:	shl    BYTE PTR [ebx-0x1ab075de],0xd3
  41ec2b:	push   ss
  41ec2c:	pop    ebp
  41ec2d:	ss jbe 0x41ebef
  41ec30:	leave  
  41ec31:	test   eax,0x5536c5c4
  41ec36:	cmp    eax,0xcb595176
  41ec3b:	push   ds
  41ec3c:	popa   
  41ec3d:	popa   
  41ec3e:	(bad)  
  41ec3f:	push   eax
  41ec40:	pop    esp
  41ec41:	xchg   edx,eax
  41ec42:	clc    
  41ec43:	xor    ch,bh
  41ec45:	pop    ss
  41ec46:	pop    esp
  41ec47:	jp     0x41ec6a
  41ec49:	add    DWORD PTR [esi],ebx
  41ec4b:	sar    BYTE PTR [edi+eax*2-0x52],cl
  41ec4f:	mov    ebx,0xab9b7c4e
  41ec54:	pop    ebp
  41ec55:	repz imul ecx,DWORD PTR [ebp+0x407a3d90],0x3b
  41ec5d:	inc    esi
  41ec5e:	retf   0xee62
  41ec61:	sti    
  41ec62:	shl    ch,0x41
  41ec65:	jle    0x41ecb2
  41ec67:	jp     0x41ecda
  41ec69:	or     DWORD PTR [eax-0x50],ebp
  41ec6c:	jecxz  0x41eca2
  41ec6e:	adc    bh,ah
  41ec70:	dec    esi
  41ec71:	mov    DWORD PTR [ebp+0x2a],edx
  41ec74:	xchg   edx,eax
  41ec75:	xchg   ecx,edi
  41ec77:	push   esp
  41ec78:	fisttp QWORD PTR [edi]
  41ec7a:	inc    eax
  41ec7b:	push   ecx
  41ec7c:	ins    DWORD PTR es:[edi],dx
  41ec7d:	scas   eax,DWORD PTR es:[edi]
  41ec7e:	dec    edx
  41ec7f:	mov    esp,0x756dc478
  41ec84:	jl     0x41ecfb
  41ec86:	jo     0x41ec5b
  41ec88:	push   ebp
  41ec89:	pop    ss
  41ec8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec8b:	ja     0x41ec9d
  41ec8d:	mov    ecx,0x623d48f9
  41ec92:	dec    ebx
  41ec93:	or     esi,DWORD PTR [ebx-0x74]
  41ec96:	jae    0x41ec3b
  41ec98:	icebp  
  41ec99:	mov    eax,DWORD PTR [eax-0x2e]
  41ec9c:	and    ebx,DWORD PTR [esi+0x3a]
  41ec9f:	cmp    edi,ebx
  41eca1:	adc    al,0xa7
  41eca3:	jmp    0x41ed01
  41eca5:	adc    eax,0x55434bcd
  41ecaa:	or     al,0x7f
  41ecac:	add    DWORD PTR [esi-0x3],ecx
  41ecaf:	shr    BYTE PTR [edx-0x72],cl
  41ecb2:	lods   al,BYTE PTR ds:[esi]
  41ecb3:	sar    ch,1
  41ecb5:	scas   eax,DWORD PTR es:[edi]
  41ecb6:	and    DWORD PTR [edx],esi
  41ecb8:	jno    0x41ecc1
  41ecba:	mov    cl,0x13
  41ecbc:	push   esi
  41ecbd:	in     al,dx
  41ecbe:	xchg   edx,eax
  41ecbf:	xor    DWORD PTR [ebp-0x7434bf2],edi
  41ecc5:	pop    ecx
  41ecc6:	pop    ebx
  41ecc7:	lods   al,BYTE PTR ds:[esi]
  41ecc8:	cmc    
  41ecc9:	sbb    BYTE PTR [eax+0x4b312b6e],dl
  41eccf:	xchg   edi,eax
  41ecd0:	gs pop es
  41ecd2:	mov    ebp,DWORD PTR [eax-0x47cd4d88]
  41ecd8:	pop    es
  41ecd9:	xor    BYTE PTR [edi],cl
  41ecdb:	jp     0x41ed3f
  41ecdd:	inc    eax
  41ecde:	push   0x57
  41ece0:	aam    0xbb
  41ece2:	fnstsw WORD PTR [ebp+0x5d]
  41ece5:	rcl    BYTE PTR [edx],1
  41ece7:	sbb    eax,0x7b4765af
  41ecec:	xor    eax,0x15e54af3
  41ecf1:	add    DWORD PTR [ebp+0xb546ee7],eax
  41ecf7:	push   cs
  41ecf8:	xor    al,dh
  41ecfa:	retf   0x47ac
  41ecfd:	mov    eax,0x9d039e9
  41ed02:	dec    ebx
  41ed03:	xchg   esp,eax
  41ed04:	out    dx,eax
  41ed05:	jge    0x41ed07
  41ed07:	js     0x41ed27
  41ed09:	lahf   
  41ed0a:	mov    al,ds:0xc3f675d2
  41ed0f:	xlat   BYTE PTR ds:[ebx]
  41ed10:	call   0xd16c:0x5da9ea4c
  41ed17:	clc    
  41ed18:	iret   
  41ed19:	lods   eax,DWORD PTR ds:[esi]
  41ed1a:	add    BYTE PTR [esp+esi*1+0x46],ah
  41ed1e:	hlt    
  41ed1f:	test   al,0xf5
  41ed21:	adc    ecx,DWORD PTR [edi]
  41ed23:	jecxz  0x41ed0f
  41ed25:	xor    ch,BYTE PTR [edi]
  41ed27:	push   cs
  41ed28:	clc    
  41ed29:	mov    cl,BYTE PTR [ebx-0x68]
  41ed2c:	out    0x35,al
  41ed2e:	adc    al,0x3b
  41ed30:	ss inc esi
  41ed32:	sub    BYTE PTR [ebx],0x5
  41ed35:	(bad)  
  41ed36:	push   edx
  41ed37:	xchg   ebp,eax
  41ed38:	in     eax,0x4a
  41ed3a:	push   esp
  41ed3b:	(bad)  
  41ed3c:	fdivp  st(3),st
  41ed3e:	fld    QWORD PTR [ebx+0x14cafedc]
  41ed44:	push   ebx
  41ed45:	js     0x41ed50
  41ed47:	dec    edx
  41ed48:	cmc    
  41ed49:	mov    ds:0xc65ec22d,al
  41ed4e:	jg     0x41ed8c
  41ed50:	aam    0x17
  41ed52:	mov    eax,DWORD PTR [eax-0x1e]
  41ed55:	xchg   edi,eax
  41ed56:	inc    ebx
  41ed57:	and    al,0x82
  41ed59:	outs   dx,BYTE PTR ds:[esi]
  41ed5a:	ret    0x81d7
  41ed5d:	pop    eax
  41ed5e:	xor    DWORD PTR [esi+eax*2],ebp
  41ed61:	fsub   DWORD PTR [esi-0x71]
  41ed64:	cdq    
  41ed65:	pop    ss
  41ed66:	dec    ebx
  41ed67:	repnz sahf 
  41ed69:	test   al,0xb4
  41ed6b:	add    al,0x6d
  41ed6d:	(bad)  
  41ed6e:	sbb    eax,0x4a331ffc
  41ed73:	mov    cl,al
  41ed75:	xchg   ebp,eax
  41ed76:	int3   
  41ed77:	or     BYTE PTR [ebx+0x1d],0x33
  41ed7b:	test   eax,0x4175aa5d
  41ed80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed81:	inc    esi
  41ed82:	and    al,0x97
  41ed84:	fstp   QWORD PTR [ecx-0x76]
  41ed87:	out    0xb0,al
  41ed89:	lods   al,BYTE PTR ds:[esi]
  41ed8a:	push   edx
  41ed8b:	add    BYTE PTR [ebx+0x45c655e5],dl
  41ed91:	fsubr  DWORD PTR [edx-0x65]
  41ed94:	push   ecx
  41ed95:	fnstcw WORD PTR [eax+0x184c0132]
  41ed9b:	rcl    dh,cl
  41ed9d:	mov    cl,BYTE PTR [edi+0x56fac6f4]
  41eda3:	int3   
  41eda4:	pop    ebp
  41eda5:	mov    ds:0x5e09521b,eax
  41edaa:	cmp    esi,DWORD PTR [esi+0x6a]
  41edad:	pop    ecx
  41edae:	jg     0x41edfe
  41edb0:	jge    0x41edaa
  41edb2:	add    BYTE PTR [ecx],bl
  41edb4:	push   ebp
  41edb5:	leave  
  41edb6:	push   eax
  41edb7:	xchg   esi,eax
  41edb8:	(bad)  
  41edb9:	das    
  41edba:	push   ebp
  41edbb:	xchg   edx,eax
  41edbc:	dec    ecx
  41edbd:	lods   al,BYTE PTR ds:[esi]
  41edbe:	shr    DWORD PTR [edi],1
  41edc0:	sbb    BYTE PTR [ebp-0x67],dl
  41edc3:	add    edx,DWORD PTR [ecx-0x22]
  41edc6:	mov    ch,bl
  41edc8:	or     edx,0xa5dd97d7
  41edce:	xor    dl,bh
  41edd0:	pop    esp
  41edd1:	imul   ebx,DWORD PTR [ebx-0x3970f531],0xffffffed
  41edd8:	sub    ebp,esi
  41edda:	int3   
  41eddb:	aad    0x29
  41eddd:	xor    ebp,DWORD PTR [edi]
  41eddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ede0:	movsx  edi,bp
  41ede3:	mov    ds:0xb1c021f3,al
  41ede8:	ja     0x41ee2a
  41edea:	sbb    BYTE PTR [edi],al
  41edec:	push   esi
  41eded:	dec    eax
  41edee:	adc    BYTE PTR [esi+0x1d],0x66
  41edf2:	in     al,dx
  41edf3:	or     BYTE PTR [esi],ch
  41edf5:	ja     0x41ee0b
  41edf7:	inc    edx
  41edf8:	pop    ebp
  41edf9:	sub    al,0x6c
  41edfb:	jle    0x41ede3
  41edfd:	cmc    
  41edfe:	xchg   edi,eax
  41edff:	hlt    
  41ee00:	xor    eax,0x73ed4aec
  41ee05:	(bad)  
  41ee06:	cmovl  ebp,DWORD PTR [edx+eiz*2]
  41ee0a:	adc    ecx,edx
  41ee0c:	sbb    ah,dl
  41ee0e:	(bad)  
  41ee0f:	sbb    ecx,esi
  41ee11:	mov    al,ds:0x6a53fc92
  41ee16:	dec    ebx
  41ee17:	xor    DWORD PTR [ebx],edx
  41ee19:	fisttp DWORD PTR [esi-0x79]
  41ee1c:	stos   DWORD PTR es:[edi],eax
  41ee1d:	jg     0x41eddc
  41ee1f:	ds call 0x1174:0xb7db7a46
  41ee27:	or     DWORD PTR ds:0x9b365ed,ebx
  41ee2d:	(bad)  
  41ee2e:	aaa    
  41ee2f:	clc    
  41ee30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee31:	jne    0x41ee87
  41ee33:	adc    BYTE PTR [esi+0x1a09b5d],dl
  41ee39:	cmp    eax,0xb46cded4
  41ee3e:	cmp    BYTE PTR [edx-0x47a20deb],dl
  41ee44:	sbb    al,0x54
  41ee46:	dec    ebx
  41ee47:	and    BYTE PTR [bx+di],ah
  41ee4a:	and    ah,cl
  41ee4c:	or     BYTE PTR [ebx-0x65c91287],al
  41ee52:	pop    eax
  41ee53:	rcr    DWORD PTR [edi+0x1d4f7e03],cl
  41ee59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee5a:	dec    ecx
  41ee5b:	pop    esi
  41ee5c:	dec    esi
  41ee5d:	fisub  DWORD PTR [ebp+0x32ec7d54]
  41ee63:	cmp    ecx,DWORD PTR [ecx]
  41ee65:	jae    0x41ee66
  41ee67:	mov    dl,0x99
  41ee69:	sbb    DWORD PTR [ebx+0x6a],ecx
  41ee6c:	add    DWORD PTR [edi],esi
  41ee6e:	es jo  0x41ee06
  41ee71:	xor    eax,0xc631a854
  41ee76:	test   BYTE PTR [ecx],bl
  41ee78:	jecxz  0x41eeba
  41ee7a:	pop    ebx
  41ee7b:	xchg   esp,eax
  41ee7c:	inc    ecx
  41ee7d:	push   edi
  41ee7e:	xchg   edi,eax
  41ee7f:	mov    ebp,0x83ab197b
  41ee84:	add    al,0x3a
  41ee86:	jb     0x41eee9
  41ee88:	pop    ebp
  41ee89:	add    DWORD PTR [ebx],eax
  41ee8b:	fild   DWORD PTR [ebx]
  41ee8d:	pop    ebp
  41ee8e:	fadd   DWORD PTR [ecx-0x4b]
  41ee91:	pop    ecx
  41ee92:	and    DWORD PTR [ebp+0x3fcfc09f],eax
  41ee98:	mov    ds:0xe8174b73,eax
  41ee9d:	xchg   BYTE PTR [ebp-0x6a61859d],bh
  41eea3:	out    dx,eax
  41eea4:	aas    
  41eea5:	arpl   WORD PTR [ebx-0x11d1a28f],ax
  41eeab:	add    al,0x55
  41eead:	push   ebp
  41eeae:	mov    edx,0x435a74d7
  41eeb3:	fcomp  st(6)
  41eeb5:	dec    ebp
  41eeb6:	jmp    0x41eee6
  41eeb8:	add    eax,0x71ed2757
  41eebd:	jo     0x41ee7e
  41eebf:	lea    ebx,[ebp-0x2b]
  41eec2:	les    esp,FWORD PTR [edx+esi*8]
  41eec5:	xchg   eax,edx
  41eec7:	aad    0x91
  41eec9:	addr16 test al,0x7e
  41eecc:	or     DWORD PTR [esi],esi
  41eece:	jmp    0xb511:0x4a85cdfd
  41eed5:	push   edi
  41eed6:	xchg   esi,eax
  41eed7:	pusha  
  41eed8:	cmp    bh,0xf8
  41eedb:	rcr    BYTE PTR [eax+0x20e24a61],cl
  41eee1:	hlt    
  41eee2:	xor    al,0x59
  41eee4:	pop    esp
  41eee5:	adc    dl,al
  41eee7:	dec    eax
  41eee8:	adc    al,0x31
  41eeea:	fisttp WORD PTR [esi]
  41eeec:	adc    eax,0x88ccfa69
  41eef1:	data16 out 0x4c,al
  41eef4:	std    
  41eef5:	call   0xa8379443
  41eefa:	dec    edx
  41eefb:	mov    dh,0x3c
  41eefd:	mov    edi,cs
  41eeff:	jnp    0x41ef7e
  41ef01:	es jne 0x41eed7
  41ef04:	add    eax,0x79394800
  41ef09:	cwde   
  41ef0a:	fdiv   QWORD PTR [ebx+0x51]
  41ef0d:	cmp    eax,0x1a80fbe8
  41ef12:	retf   
  41ef13:	fcmovnbe st,st(6)
  41ef15:	push   es
  41ef16:	shl    DWORD PTR gs:[edx],1
  41ef19:	sub    al,0x68
  41ef1b:	loopne 0x41ef72
  41ef1d:	inc    edx
  41ef1e:	or     esp,DWORD PTR [esp+ecx*1]
  41ef21:	dec    edi
  41ef22:	dec    ebx
  41ef23:	sub    esi,DWORD PTR [edx]
  41ef25:	add    DWORD PTR [esi+0x58],0xd2a29fc0
  41ef2c:	sub    esp,esi
  41ef2e:	push   ecx
  41ef2f:	xor    esp,ebx
  41ef31:	cmp    BYTE PTR [edx],dl
  41ef33:	ds inc edi
  41ef35:	adc    al,0xd
  41ef37:	js     0x41ef96
  41ef39:	or     ebp,edx
  41ef3b:	add    DWORD PTR [ecx-0x2d1363],ebp
  41ef41:	xchg   ebx,eax
  41ef42:	outs   dx,DWORD PTR ds:[esi]
  41ef43:	xchg   BYTE PTR [edi],bh
  41ef45:	xchg   ebp,eax
  41ef46:	loop   0x41efaf
  41ef48:	mov    edx,0xad274ae0
  41ef4d:	mov    cl,0xe9
  41ef4f:	repnz or eax,0xa9dc865a
  41ef55:	sub    BYTE PTR [edx+0x47303fd2],0x44
  41ef5c:	xor    al,0x78
  41ef5e:	inc    edx
  41ef5f:	aaa    
  41ef60:	adc    bh,BYTE PTR [ebx-0x75]
  41ef63:	add    BYTE PTR [ebp+0x14],al
  41ef66:	pop    ds
  41ef67:	je     0x41efc9
  41ef69:	pop    ecx
  41ef6a:	icebp  
  41ef6b:	fucomp st(7)
  41ef6d:	hlt    
  41ef6e:	rcr    bl,0x1
  41ef71:	mov    cl,0x47
  41ef73:	outs   dx,DWORD PTR ds:[esi]
  41ef74:	push   es
  41ef75:	jns    0x41efc2
  41ef77:	add    bl,ch
  41ef79:	push   0x59fb4dc9
  41ef7e:	into   
  41ef7f:	add    DWORD PTR [edx-0x1922c05a],0x22105e61
  41ef89:	adc    DWORD PTR [ecx],ebp
  41ef8b:	shl    BYTE PTR [eax+0x1c],cl
  41ef8e:	jge    0x41eff4
  41ef90:	popf   
  41ef91:	pop    ecx
  41ef92:	xchg   ecx,eax
  41ef93:	sbb    esp,eax
  41ef95:	pushf  
  41ef96:	les    esp,FWORD PTR [eax]
  41ef98:	push   es
  41ef99:	ss dec ebx
  41ef9b:	jmp    0x41f016
  41ef9d:	push   ds
  41ef9e:	mov    eax,ds:0x77d38b65
  41efa3:	(bad)  
  41efa4:	data16 cmc 
  41efa6:	and    al,BYTE PTR [ebx+0x7972b2fc]
  41efac:	mov    dh,0x95
  41efae:	dec    edx
  41efaf:	cs cs ds (bad) 
  41efb3:	mov    ah,0xbe
  41efb5:	gs in  al,dx
  41efb7:	shl    ecx,1
  41efb9:	cli    
  41efba:	lock les ebp,FWORD PTR [ebx+esi*4+0x62]
  41efbf:	mov    al,ds:0x7b4b446a
  41efc4:	adc    dh,al
  41efc6:	test   DWORD PTR [edx-0x2d17aa10],eax
  41efcc:	mov    esp,0x115b40e0
  41efd1:	aam    0x4f
  41efd3:	push   0x5c
  41efd5:	jb     0x41f00f
  41efd7:	fmul   QWORD PTR ss:[ebx-0x80]
  41efdb:	lock or eax,0xd2e028
  41efe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41efe2:	mov    BYTE PTR [esi],al
  41efe4:	xchg   DWORD PTR [edi+0xe6d4fc4],edi
  41efea:	ja     0x41effd
  41efec:	out    dx,al
  41efed:	xor    DWORD PTR [edx+edx*8+0x1a],eax
  41eff1:	push   ebx
  41eff2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eff3:	xchg   esi,eax
  41eff4:	imul   esi,ebx,0xc352dfd9
  41effa:	push   cs
  41effb:	jmp    0x9247c059
  41f000:	push   edx
  41f001:	(bad)  
  41f003:	rcr    ah,cl
  41f005:	mov    edi,0x5ba9ebb6
  41f00a:	stc    
  41f00b:	aaa    
  41f00c:	outs   dx,BYTE PTR ds:[esi]
  41f00d:	ins    DWORD PTR es:[edi],dx
  41f00e:	jne    0x41f04d
  41f010:	stc    
  41f011:	pop    ecx
  41f012:	shl    DWORD PTR [edx-0x47],cl
  41f015:	outs   dx,DWORD PTR ds:[esi]
  41f016:	and    ebp,0xffffffcf
  41f019:	xchg   edx,eax
  41f01a:	popf   
  41f01b:	sar    BYTE PTR [edi],cl
  41f01d:	sti    
  41f01e:	ret    0x97c2
  41f021:	xchg   edi,eax
  41f022:	dec    ebx
  41f023:	cmc    
  41f024:	imul   ebp,DWORD PTR [edx-0x21],0x7a09a0eb
  41f02b:	mov    eax,DWORD PTR [eax]
  41f02d:	shr    DWORD PTR [esi+edx*8-0x78e38052],0x30
  41f035:	(bad)  
  41f036:	jno    0x41f004
  41f038:	add    al,0x88
  41f03a:	dec    ebx
  41f03b:	out    0xab,eax
  41f03d:	inc    edi
  41f03e:	jmp    0x41f05a
  41f040:	jmp    0x535f:0x313eae54
  41f047:	dec    edi
  41f048:	pop    ss
  41f049:	sub    eax,0xa18d9229
  41f04e:	push   ds
  41f04f:	push   ebx
  41f050:	jle    0x41f076
  41f052:	gs retf 0x9d22
  41f056:	xchg   edi,eax
  41f057:	inc    edi
  41f058:	sbb    eax,0x19ae9e0a
  41f05d:	inc    esi
  41f05e:	adc    al,0x37
  41f060:	sub    ebx,DWORD PTR [ecx-0x7e]
  41f063:	sub    al,0x8d
  41f065:	lock dec edx
  41f067:	(bad)  
  41f068:	icebp  
  41f069:	inc    ecx
  41f06a:	loop   0x41efff
  41f06c:	lahf   
  41f06d:	repnz sub al,0x44
  41f070:	mov    ah,0x54
  41f072:	lods   eax,DWORD PTR ds:[esi]
  41f073:	and    edi,DWORD PTR [edi+ebx*4]
  41f076:	inc    edx
  41f077:	cs mov edx,0x562ddb29
  41f07d:	outs   dx,DWORD PTR ds:[esi]
  41f07e:	dec    ebx
  41f07f:	daa    
  41f080:	and    DWORD PTR [edi+edx*1+0x78b5a525],0x437374cd
  41f08b:	jnp    0x41f08a
  41f08d:	cmp    DWORD PTR [esi],0x4b3937f1
  41f093:	cmp    DWORD PTR ds:0x2004e602,eax
  41f099:	adc    cl,BYTE PTR [eax]
  41f09b:	call   ebp
  41f09d:	xor    eax,0x704a8856
  41f0a2:	sub    al,0x2f
  41f0a4:	fstp   QWORD PTR [edi]
  41f0a6:	dec    ecx
  41f0a7:	mov    al,ds:0xb00ba5d
  41f0ac:	dec    ebx
  41f0ad:	stos   BYTE PTR es:[edi],al
  41f0ae:	ret    0x94a
  41f0b1:	ja     0x41f037
  41f0b3:	or     bl,bh
  41f0b5:	repnz mov eax,ds:0xa8beddbb
  41f0bb:	mov    eax,ds:0x48bc3a19
  41f0c0:	pop    ebp
  41f0c1:	xchg   DWORD PTR [edx-0x4044f855],ebp
  41f0c7:	in     eax,dx
  41f0c8:	ins    DWORD PTR es:[edi],dx
  41f0c9:	jne    0x41f084
  41f0cb:	test   al,0x5d
  41f0cd:	(bad)  
  41f0ce:	adc    edi,esp
  41f0d0:	hlt    
  41f0d1:	jns    0x41f05e
  41f0d3:	mov    ah,0x5d
  41f0d5:	jecxz  0x41f06f
  41f0d7:	mov    WORD PTR [eax],ds
  41f0d9:	into   
  41f0da:	popf   
  41f0db:	(bad)  [ebx+ebx*2]
  41f0de:	rcl    BYTE PTR [edx],0x74
  41f0e1:	jl     0x41f0f6
  41f0e3:	(bad)  
  41f0e4:	in     eax,0x7e
  41f0e6:	cmc    
  41f0e7:	test   al,0x54
  41f0e9:	inc    esp
  41f0ea:	push   edi
  41f0eb:	aam    0x9
  41f0ed:	inc    esi
  41f0ee:	sub    DWORD PTR [ecx-0x11],0x29
  41f0f2:	imul   edx,ebx,0x3d34fd99
  41f0f8:	cmp    ebp,ebx
  41f0fa:	dec    edi
  41f0fb:	mov    esp,0x9580415d
  41f100:	nop
  41f101:	nop
  41f102:	xchg   BYTE PTR ds:0xcce3b16d,ah
  41f108:	in     al,0xcd
  41f10a:	leave  
  41f10b:	fstp   QWORD PTR cs:[ecx]
  41f10e:	lds    edi,FWORD PTR [ecx+0x22]
  41f111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f112:	ret    0x5dd3
  41f115:	cdq    
  41f116:	jb     0x41f0cd
  41f118:	bound  edi,QWORD PTR [eax]
  41f11a:	daa    
  41f11b:	cdq    
  41f11c:	imul   ebx,DWORD PTR [ecx-0x30],0x6a
  41f120:	lds    edx,FWORD PTR [eax+0x11b70ea2]
  41f126:	addr16 mov ah,0x56
  41f129:	jge    0x41f183
  41f12b:	jg     0x41f0c6
  41f12d:	lock fisubr DWORD PTR [edi*1+0x5ed2dca2]
  41f135:	fs jo  0x41f138
  41f138:	jp     0x41f0bc
  41f13a:	lahf   
  41f13b:	pop    ebp
  41f13c:	pop    ebp
  41f13d:	push   eax
  41f13e:	mov    ecx,0x6cc838df
  41f143:	ret    0x58b3
  41f146:	sti    
  41f147:	xlat   BYTE PTR ds:[ebx]
  41f148:	mov    cl,0xe1
  41f14a:	inc    eax
  41f14b:	cmp    al,0x7c
  41f14d:	arpl   WORD PTR [ebx-0x1beb1ee],cx
  41f153:	shl    BYTE PTR [esi],cl
  41f155:	test   edi,edx
  41f157:	jnp    0x41f0ef
  41f159:	(bad)  
  41f15a:	xchg   edx,eax
  41f15b:	cmp    ebx,DWORD PTR [ebp-0x21]
  41f15e:	in     eax,dx
  41f15f:	dec    edx
  41f160:	jne    0x41f183
  41f162:	and    dh,dh
  41f164:	inc    edx
  41f165:	pop    ecx
  41f166:	cmp    BYTE PTR [esi],ch
  41f168:	(bad)  
  41f169:	fdiv   QWORD PTR [ebx]
  41f16b:	into   
  41f16c:	push   eax
  41f16d:	in     eax,0x68
  41f16f:	pop    eax
  41f170:	jns    0x41f1c3
  41f172:	popa   
  41f173:	stc    
  41f174:	push   ds
  41f175:	inc    esi
  41f176:	mov    esp,0xefddf68c
  41f17b:	and    DWORD PTR [ebp+esi*2+0x52],ecx
  41f17f:	retf   0xd071
  41f182:	sub    eax,0xb34626fd
  41f187:	inc    al
  41f189:	dec    ebx
  41f18a:	or     eax,0x203db5e2
  41f18f:	push   ebp
  41f190:	push   esp
  41f191:	fisub  WORD PTR [edx+ebx*2]
  41f194:	sbb    eax,0x3d74f9e0
  41f199:	inc    ebx
  41f19a:	xlat   BYTE PTR ds:[ebx]
  41f19b:	xchg   ebx,eax
  41f19c:	aad    0x59
  41f19e:	pop    ds
  41f19f:	xlat   BYTE PTR ds:[ebx]
  41f1a0:	fiadd  WORD PTR ds:0xa2b745eb
  41f1a6:	out    0xab,eax
  41f1a8:	pop    ebp
  41f1a9:	adc    BYTE PTR [edx-0x5d4be8fe],0x38
  41f1b0:	fstp   DWORD PTR [ecx-0x45]
  41f1b3:	jmp    0x1c72:0x2c202ea3
  41f1ba:	push   ecx
  41f1bb:	test   BYTE PTR [edx],dl
  41f1bd:	cmc    
  41f1be:	push   cs
  41f1bf:	push   edx
  41f1c0:	scas   eax,DWORD PTR es:[edi]
  41f1c1:	and    esp,DWORD PTR [ebx]
  41f1c3:	nop
  41f1c4:	cvtdq2ps xmm1,xmm4
  41f1c7:	push   ebp
  41f1c8:	inc    eax
  41f1c9:	sbb    dh,dh
  41f1cb:	pop    esp
  41f1cc:	in     eax,dx
  41f1cd:	in     al,dx
  41f1ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1cf:	xor    BYTE PTR [esp+ecx*2+0x4],bl
  41f1d3:	sbb    eax,0xf9848a4b
  41f1d8:	adc    DWORD PTR [ebx+0x59a9466f],ecx
  41f1de:	cld    
  41f1df:	int3   
  41f1e0:	inc    ebp
  41f1e1:	push   0x10
  41f1e3:	cmp    eax,0x424b4ff7
  41f1e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1e9:	xor    eax,0xe84d58d8
  41f1ee:	sub    edx,edx
  41f1f0:	or     eax,0xba7b98a1
  41f1f5:	outs   dx,BYTE PTR ds:[esi]
  41f1f6:	shl    BYTE PTR [eax],1
  41f1f8:	pop    ebp
  41f1f9:	inc    ebp
  41f1fa:	sub    eax,0xc62b6490
  41f1ff:	and    eax,0xdf92728e
  41f204:	fst    DWORD PTR [esi-0x658edf4]
  41f20a:	test   cl,bh
  41f20c:	adc    DWORD PTR [ecx+0x1095a54a],esi
  41f212:	icebp  
  41f213:	enter  0x1493,0x9c
  41f217:	aad    0x29
  41f219:	stos   DWORD PTR es:[edi],eax
  41f21a:	repnz push 0x68
  41f21d:	sub    esp,eax
  41f21f:	lods   eax,DWORD PTR ds:[esi]
  41f220:	mov    dh,0xde
  41f222:	dec    edx
  41f223:	in     eax,0xe5
  41f225:	out    0xcf,al
  41f227:	dec    edx
  41f228:	cmp    BYTE PTR [edx],dl
  41f22a:	loopne 0x41f24e
  41f22c:	xlat   BYTE PTR ds:[ebx]
  41f22d:	mov    ds:0x44bcd2d4,eax
  41f232:	sub    ebx,DWORD PTR [eax-0x397bd270]
  41f238:	sub    eax,0x69c953f6
  41f23d:	in     al,0x83
  41f23f:	push   edx
  41f240:	inc    eax
  41f241:	jp     0x41f231
  41f243:	xor    DWORD PTR [eax+0x5c],edx
  41f246:	adc    DWORD PTR [ecx],0xffffffbd
  41f249:	jbe    0x41f26b
  41f24b:	xchg   edx,eax
  41f24c:	sub    edx,edi
  41f24e:	adc    bl,bh
  41f250:	push   edx
  41f251:	out    dx,al
  41f252:	or     esi,ecx
  41f254:	mov    esp,0x47ba9982
  41f259:	fcom   QWORD PTR [esi+esi*4-0x68deb9f7]
  41f260:	and    al,0x55
  41f262:	sbb    DWORD PTR [ebx+esi*2+0x5d126299],edx
  41f269:	mov    ch,0x10
  41f26b:	cmp    ah,0x7a
  41f26e:	and    eax,0xd59ddc5
  41f273:	mov    bh,0xf4
  41f275:	or     al,0xaf
  41f277:	idiv   BYTE PTR [edi+0x5daee0c0]
  41f27d:	lock pop ds
  41f27f:	enter  0x831f,0xc9
  41f283:	popf   
  41f284:	dec    esi
  41f285:	pop    edx
  41f286:	test   BYTE PTR [eax+0x5254bcf1],ah
  41f28c:	push   0x52ed4bb1
  41f291:	or     eax,0x3ab42c30
  41f296:	inc    eax
  41f297:	jp     0x41f2d0
  41f299:	lahf   
  41f29a:	push   0xffffffc8
  41f29c:	call   0xc0d4:0xddd508f8
  41f2a3:	aaa    
  41f2a4:	aas    
  41f2a5:	es inc ebp
  41f2a7:	sub    ah,BYTE PTR [ebx]
  41f2a9:	or     eax,0x282ee14b
  41f2ae:	mov    gs,WORD PTR [ecx]
  41f2b0:	mov    WORD PTR [ecx-0x4c],ds
  41f2b3:	cmp    ebx,ebp
  41f2b5:	test   DWORD PTR [ebx-0x29],edx
  41f2b8:	dec    edx
  41f2b9:	mov    ah,0x4a
  41f2bb:	hlt    
  41f2bc:	dec    eax
  41f2bd:	out    0xe7,al
  41f2bf:	int    0x5e
  41f2c1:	jp     0x41f2a8
  41f2c3:	aad    0x27
  41f2c5:	xchg   ebp,eax
  41f2c6:	pop    edi
  41f2c7:	lahf   
  41f2c8:	clc    
  41f2c9:	jns    0x41f330
  41f2cb:	xchg   edx,eax
  41f2cc:	inc    ebx
  41f2cd:	inc    ebp
  41f2ce:	dec    ebx
  41f2cf:	call   0xa9e4faab
  41f2d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2d5:	jne    0x41f263
  41f2d7:	ror    DWORD PTR [eax-0x4a75bfad],cl
  41f2dd:	popf   
  41f2de:	adc    DWORD PTR [edx],esi
  41f2e0:	scas   eax,DWORD PTR es:[edi]
  41f2e1:	mov    al,0xe7
  41f2e3:	xchg   esp,eax
  41f2e4:	pop    ebp
  41f2e5:	arpl   bx,bp
  41f2e7:	mov    edi,0xaa53fae1
  41f2ec:	or     al,0x46
  41f2ee:	cmp    al,0xe3
  41f2f0:	mov    edi,0xa6752b0b
  41f2f5:	aam    0x2d
  41f2f7:	lods   al,BYTE PTR ds:[esi]
  41f2f8:	lahf   
  41f2f9:	fisubr DWORD PTR [esi]
  41f2fb:	pusha  
  41f2fc:	ror    DWORD PTR [edi-0x4e4d8c9b],cl
  41f302:	iret   
  41f303:	shl    dh,cl
  41f305:	sub    eax,0x1e474442
  41f30a:	rcr    DWORD PTR [esi+0x124adda6],cl
  41f310:	cmp    BYTE PTR [edx-0x5de799fd],al
  41f316:	(bad)  
  41f318:	xor    ch,BYTE PTR [esi-0x364577ef]
  41f31e:	les    edx,FWORD PTR [ebx+0x5d]
  41f321:	push   edx
  41f322:	and    eax,0x86607a95
  41f327:	jnp    0x41f2ea
  41f329:	pop    ecx
  41f32a:	sbb    ecx,DWORD PTR [ebp-0x7b212ab1]
  41f330:	sbb    al,0x7a
  41f332:	dec    ebx
  41f333:	arpl   WORD PTR ds:0xd2954d81,di
  41f339:	std    
  41f33a:	mov    dh,0xb8
  41f33c:	mov    ds:0x967da159,eax
  41f341:	push   ebp
  41f342:	loope  0x41f37f
  41f344:	jnp    0x41f2ce
  41f346:	inc    ebx
  41f347:	mov    WORD PTR [ebp+0x74e9472f],es
  41f34d:	pop    ecx
  41f34e:	jo     0x41f339
  41f350:	cmp    bh,bl
  41f352:	call   0x2db7:0x4aa829d9
  41f359:	jp     0x41f30f
  41f35b:	mov    ebp,0x4375f0cd
  41f360:	and    ecx,eax
  41f362:	push   0xffffffd3
  41f364:	retf   0x5316
  41f367:	call   edi
  41f369:	lahf   
  41f36a:	add    BYTE PTR ds:0xd4df3d5d,ch
  41f370:	sar    BYTE PTR [edi-0x1a],0xc4
  41f374:	neg    BYTE PTR [esi+0x52]
  41f377:	sbb    ebx,DWORD PTR [ebp+eiz*2+0x4a]
  41f37b:	mov    al,ds:0x900b77ac
  41f380:	xchg   bl,ch
  41f382:	dec    edx
  41f383:	fwait
  41f384:	jbe    0x41f3be
  41f386:	adc    al,0x30
  41f388:	xchg   ecx,eax
  41f389:	ins    DWORD PTR es:[edi],dx
  41f38a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f38b:	shl    BYTE PTR [ebp+ecx*1-0x30],cl
  41f38f:	dec    eax
  41f390:	cmp    BYTE PTR [edx],0x82
  41f393:	pop    edx
  41f394:	pop    eax
  41f395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f396:	cmp    DWORD PTR [esi+edx*4-0x327f2e16],esi
  41f39d:	int    0x8f
  41f39f:	aam    0xb
  41f3a1:	adc    cl,BYTE PTR [edx+0x7ae25f08]
  41f3a7:	(bad)  
  41f3a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3a9:	and    eax,0x9de6455
  41f3ae:	jg     0x41f3cc
  41f3b0:	es pusha 
  41f3b2:	dec    ebx
  41f3b3:	cmp    eax,0x939b1405
  41f3b8:	loop   0x41f3e9
  41f3ba:	jmp    0x41f3b9
  41f3bc:	inc    edx
  41f3bd:	nop
  41f3be:	dec    edx
  41f3bf:	mov    dl,0xec
  41f3c1:	pop    esp
  41f3c2:	xor    eax,0x4bf36e8b
  41f3c7:	and    DWORD PTR [edi],ebx
  41f3c9:	mov    edx,0xdd72d777
  41f3ce:	sub    bh,dh
  41f3d0:	push   esp
  41f3d1:	pop    esi
  41f3d2:	lods   al,BYTE PTR ds:[esi]
  41f3d3:	shl    DWORD PTR ds:0x3dd3a5df,cl
  41f3d9:	(bad)  
  41f3da:	stc    
  41f3db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3dc:	mov    esi,0x58224ae3
  41f3e1:	imul   ecx,DWORD PTR ds:0xa09feb70,0xffffffd2
  41f3e8:	loope  0x41f3a7
  41f3ea:	loopne 0x41f41d
  41f3ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3ed:	fwait
  41f3ee:	ror    BYTE PTR [ebp+ebx*2+0x715a70cd],0xb9
  41f3f6:	pusha  
  41f3f7:	push   edx
  41f3f8:	mov    ds:0x6bd34559,eax
  41f3fd:	leave  
  41f3fe:	mov    ebp,0x4b601a38
  41f403:	adc    al,0xc0
  41f405:	mov    ah,0xb3
  41f407:	mov    dl,0xe8
  41f409:	jecxz  0x41f45f
  41f40b:	shl    ch,cl
  41f40d:	xor    ebp,ebx
  41f40f:	xchg   edi,eax
  41f410:	or     dl,0x7d
  41f413:	sub    ebx,DWORD PTR [ebp-0x3f]
  41f416:	imul   ebp,eax,0xc97bbcec
  41f41c:	fdiv   QWORD PTR [ebx+0x58]
  41f41f:	or     edx,ebx
  41f421:	push   ecx
  41f422:	icebp  
  41f423:	cmc    
  41f424:	mov    ah,0xd9
  41f426:	loope  0x41f47a
  41f428:	ins    BYTE PTR es:[edi],dx
  41f429:	popf   
  41f42a:	push   eax
  41f42b:	loope  0x41f453
  41f42d:	inc    esi
  41f42e:	scas   al,BYTE PTR es:[edi]
  41f42f:	sub    eax,0x55a6eea5
  41f434:	stos   DWORD PTR es:[edi],eax
  41f435:	pop    ebx
  41f436:	dec    ebx
  41f437:	fdivr  QWORD PTR [ebp-0x2b]
  41f43a:	ret    0x72db
  41f43d:	inc    eax
  41f43e:	jmp    0xc10d:0xc4b433d2
  41f445:	xor    ebp,DWORD PTR [eax-0x280a2c7]
  41f44b:	mov    edi,eax
  41f44d:	call   0x491d5320
  41f452:	ins    DWORD PTR es:[edi],dx
  41f453:	sar    DWORD PTR [ebp+0x5e1f48a6],cl
  41f459:	push   ecx
  41f45a:	bound  ecx,QWORD PTR [edi-0x4d667673]
  41f460:	pop    ebp
  41f461:	shl    DWORD PTR [ebx+0x4a],0xc4
  41f465:	lods   al,BYTE PTR ds:[esi]
  41f466:	pop    ecx
  41f467:	push   eax
  41f468:	inc    ecx
  41f469:	pop    ecx
  41f46a:	mov    edi,0x64903368
  41f46f:	ins    BYTE PTR es:[edi],dx
  41f470:	rol    BYTE PTR [edx+0x63],0x5a
  41f474:	jns    0x41f455
  41f476:	push   edi
  41f477:	stc    
  41f478:	cmp    dh,al
  41f47a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f47b:	push   eax
  41f47c:	fiadd  DWORD PTR cs:[ecx+0x6630943d]
  41f483:	repnz lea ebx,[esi+0x31dc1d55]
  41f48a:	adc    DWORD PTR [edx-0x3b],ecx
  41f48d:	adc    ch,BYTE PTR [ebx-0x17]
  41f490:	ins    DWORD PTR es:[edi],dx
  41f491:	inc    esi
  41f492:	sbb    DWORD PTR [eax+edx*4-0x60],ebp
  41f496:	mov    edx,0xc9d47efb
  41f49b:	retf   
  41f49c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f49d:	mov    edi,DWORD PTR [edi-0x5c53f7ce]
  41f4a3:	test   al,0x5c
  41f4a5:	jecxz  0x41f487
  41f4a7:	or     eax,0x9b495084
  41f4ac:	into   
  41f4ad:	mov    ecx,0xd97b501a
  41f4b2:	push   cs
  41f4b3:	push   edx
  41f4b4:	and    BYTE PTR [esi-0x33],dl
  41f4b7:	stos   DWORD PTR es:[edi],eax
  41f4b8:	adc    ebx,edx
  41f4ba:	dec    ebp
  41f4bb:	sar    dh,cl
  41f4bd:	jmp    0xb4b7:0xb16db937
  41f4c4:	pop    ebp
  41f4c5:	ins    DWORD PTR es:[edi],dx
  41f4c6:	(bad)  
  41f4c7:	mov    cl,0x63
  41f4c9:	push   0x59bdd3cb
  41f4ce:	cmp    ecx,DWORD PTR [ebp-0x7]
  41f4d1:	out    0x10,eax
  41f4d3:	jmp    0xc085:0x40693043
  41f4da:	cmp    cl,BYTE PTR [ecx]
  41f4dc:	pop    ebp
  41f4dd:	push   edi
  41f4de:	fist   WORD PTR ds:0xdfc65353
  41f4e4:	jb     0x41f558
  41f4e6:	(bad)  
  41f4e8:	jle    0x41f475
  41f4ea:	xchg   DWORD PTR [eax],edx
  41f4ec:	or     esi,eax
  41f4ee:	dec    edx
  41f4ef:	sbb    BYTE PTR [eax],ah
  41f4f1:	fistp  WORD PTR [edi-0x2d41eef2]
  41f4f7:	cmp    edx,DWORD PTR [eax+0x11]
  41f4fa:	nop
  41f4fb:	cmp    al,0xbe
  41f4fd:	pop    ecx
  41f4fe:	das    
  41f4ff:	jbe    0x41f483
  41f501:	lds    eax,FWORD PTR [eax+esi*8]
  41f504:	test   BYTE PTR [ebx-0x24b37ebe],cl
  41f50a:	mov    bh,cl
  41f50c:	ins    BYTE PTR es:[edi],dx
  41f50d:	jp     0x41f572
  41f50f:	mov    edx,0xe6874627
  41f514:	mov    al,0x15
  41f516:	fidiv  DWORD PTR [edx]
  41f518:	ret    
  41f519:	or     BYTE PTR [edx-0x7f],0xf3
  41f51d:	sub    eax,0x80e92a43
  41f522:	xor    BYTE PTR [esi-0x5115b8aa],0xff
  41f529:	fs mov dl,0x98
  41f52c:	sbb    eax,0x5a453869
  41f531:	out    0x4a,eax
  41f533:	fiadd  DWORD PTR [ebx]
  41f535:	inc    edx
  41f536:	mov    dl,0x5e
  41f538:	sbb    eax,0xfed2100a
  41f53d:	or     edx,esp
  41f53f:	push   cs
  41f540:	jp     0x41f511
  41f542:	or     BYTE PTR [ebp+ebx*2+0x19664ddb],bh
  41f549:	sahf   
  41f54a:	addr16 mov ds:0x3312,eax
  41f54e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f54f:	shr    BYTE PTR [ebp+0x18e86538],cl
  41f555:	mov    ecx,0xa87e7a0d
  41f55a:	stc    
  41f55b:	jns    0x41f591
  41f55d:	(bad)  
  41f55e:	jg     0x41f57b
  41f560:	pop    esi
  41f561:	fwait
  41f562:	daa    
  41f563:	inc    esp
  41f564:	stc    
  41f565:	pop    ebx
  41f566:	loopne 0x41f532
  41f568:	xchg   edi,eax
  41f569:	sbb    edi,eax
  41f56b:	xchg   ebx,eax
  41f56c:	mov    ebp,0x7ac766cb
  41f571:	imul   esp,DWORD PTR [esi+0x4a],0x3593649a
  41f578:	int    0x24
  41f57a:	jns    0x41f5e8
  41f57c:	fistp  WORD PTR [esi+0x54]
  41f57f:	mov    ebp,0x9ca33d1a
  41f584:	(bad)  [ecx]
  41f586:	xchg   esi,eax
  41f587:	pop    ebx
  41f588:	pop    esi
  41f589:	ret    
  41f58a:	dec    edx
  41f58b:	into   
  41f58c:	sub    eax,DWORD PTR [edi+eax*2]
  41f58f:	rol    DWORD PTR [eax],1
  41f591:	mov    esp,0xd35d3d3
  41f596:	cmp    al,0x3c
  41f598:	call   0x4aef:0x15c35fa4
  41f59f:	les    ebp,FWORD PTR [edi-0x5b0e391d]
  41f5a5:	frstor [esi+ebp*8-0x2d262e32]
  41f5ac:	sti    
  41f5ad:	(bad)  
  41f5ae:	push   eax
  41f5af:	sub    ecx,DWORD PTR [ecx-0x37]
  41f5b2:	dec    edx
  41f5b3:	mov    ecx,DWORD PTR [ebp+0x31]
  41f5b6:	dec    ebp
  41f5b7:	jge    0x41f57f
  41f5b9:	leave  
  41f5ba:	enter  0x1ad2,0xbf
  41f5be:	lahf   
  41f5bf:	xchg   ecx,eax
  41f5c0:	test   eax,0x5d4be045
  41f5c5:	lock and bl,BYTE PTR [ecx+ebp*8+0x5f470cb7]
  41f5cd:	mov    eax,ds:0x2760d283
  41f5d2:	add    edi,edx
  41f5d4:	sbb    DWORD PTR [edx-0x1fa2593c],ebx
  41f5da:	lea    ebp,ds:0x8365f30
  41f5e0:	call   0x6b05:0x1d9b9447
  41f5e7:	xor    bl,BYTE PTR [edi]
  41f5e9:	adc    eax,0xa21caa47
  41f5ee:	xchg   esp,eax
  41f5ef:	sbb    bl,BYTE PTR [ebx-0x33]
  41f5f2:	sub    bl,BYTE PTR [ecx-0x36]
  41f5f5:	pop    ecx
  41f5f6:	arpl   WORD PTR [esi+0x15],sp
  41f5f9:	shl    BYTE PTR [edx],0x8e
  41f5fc:	in     eax,0xbc
  41f5fe:	dec    edx
  41f5ff:	shr    DWORD PTR [ebx+edi*8+0x1f],1
  41f603:	jnp    0x41f67b
  41f605:	sbb    al,0x9e
  41f607:	shr    dh,cl
  41f609:	fs retf 
  41f60b:	jmp    0x41f609
  41f60d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f60e:	addr16 out 0x5d,al
  41f611:	xlat   BYTE PTR ds:[ebx]
  41f612:	push   esp
  41f613:	(bad)  
  41f615:	mov    bh,al
  41f617:	inc    ebp
  41f618:	es inc esi
  41f61a:	shl    BYTE PTR [ecx],cl
  41f61c:	or     cl,BYTE PTR [ecx]
  41f61e:	inc    esp
  41f61f:	add    eax,0xf445c4d4
  41f624:	xchg   ebp,eax
  41f625:	fisttp WORD PTR [edx-0x7e]
  41f628:	and    ebx,ebp
  41f62a:	ficomp DWORD PTR [esi]
  41f62c:	push   esp
  41f62d:	pop    esi
  41f62e:	popa   
  41f62f:	data16 mov ah,0x2d
  41f632:	fsubr  st,st(1)
  41f634:	fsub   QWORD PTR [eax-0x4633c889]
  41f63a:	push   ebp
  41f63b:	mov    dh,0xa7
  41f63d:	mov    ecx,DWORD PTR [ebx-0x5a]
  41f640:	jge    0x41f66b
  41f642:	jmp    0xc006c936
  41f647:	bound  eax,QWORD PTR [eax+0x21ad7259]
  41f64d:	jl     0x41f5d0
  41f64f:	and    eax,0xb551232d
  41f654:	repz and edi,esp
  41f657:	xor    bh,BYTE PTR [ebx+0x14]
  41f65a:	lds    ecx,FWORD PTR [esi+0x0]
  41f65d:	push   edx
  41f65e:	xchg   esi,ebx
  41f660:	xor    eax,esi
  41f662:	adc    eax,0x384a8a03
  41f667:	xor    bl,BYTE PTR [ebp-0x27]
  41f66a:	cdq    
  41f66b:	inc    esp
  41f66c:	mov    esi,0x9eaef7f9
  41f671:	pop    ecx
  41f672:	dec    edi
  41f673:	shl    DWORD PTR [eax],cl
  41f675:	dec    ebp
  41f676:	cmp    al,0xb7
  41f678:	or     DWORD PTR [ebx+0x3b1bd94a],esi
  41f67e:	fs mov al,0xd8
  41f681:	scas   al,BYTE PTR es:[edi]
  41f682:	out    dx,eax
  41f683:	shl    BYTE PTR [ecx-0x6adb28e0],cl
  41f689:	xchg   edx,eax
  41f68a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f68b:	add    edx,DWORD PTR [esi+0x35]
  41f68e:	pop    edi
  41f68f:	jbe    0x41f639
  41f691:	push   eax
  41f692:	mov    dl,dh
  41f694:	(bad)  
  41f695:	(bad)  
  41f696:	jg     0x41f679
  41f698:	dec    esp
  41f699:	pop    ecx
  41f69a:	xor    DWORD PTR [ebx-0x6b],esp
  41f69d:	lahf   
  41f69e:	sbb    cl,BYTE PTR [ecx]
  41f6a0:	xchg   edi,eax
  41f6a1:	xor    al,0x45
  41f6a3:	sub    bl,ah
  41f6a5:	hlt    
  41f6a6:	dec    ebx
  41f6a7:	push   es
  41f6a8:	adc    bh,BYTE PTR [ecx-0x26453d34]
  41f6ae:	xchg   ebp,eax
  41f6af:	sbb    al,0x1
  41f6b1:	out    dx,eax
  41f6b2:	mov    ds:0x9a505d66,al
  41f6b7:	jnp    0x41f6dd
  41f6b9:	push   0x5a8bdc7d
  41f6be:	jp     0x41f73b
  41f6c0:	rol    DWORD PTR [ecx],1
  41f6c2:	and    ebp,DWORD PTR [esi+0x15]
  41f6c5:	adc    BYTE PTR [esi-0x6e],cl
  41f6c8:	pop    ebp
  41f6c9:	pop    eax
  41f6ca:	inc    DWORD PTR [eax+0x32cf9c4a]
  41f6d0:	push   ss
  41f6d1:	inc    edi
  41f6d2:	scas   al,BYTE PTR es:[edi]
  41f6d3:	jmp    0x7a4d:0xa20ab4db
  41f6da:	sbb    DWORD PTR [ebx+0x52],ecx
  41f6dd:	inc    ebx
  41f6de:	imul   ecx,DWORD PTR [ecx+0x2f],0x7a92a03c
  41f6e5:	or     eax,0x21e5ff0c
  41f6ea:	retf   0x309b
  41f6ed:	(bad)
  41f6f1:	sbb    eax,ebp
  41f6f3:	dec    edx
  41f6f4:	pop    ebp
  41f6f5:	ins    BYTE PTR es:[edi],dx
  41f6f6:	add    al,bl
  41f6f8:	mov    ebx,0x7c569948
  41f6fd:	jo     0x41f6f8
  41f6ff:	sbb    eax,0x2d805e5d
  41f704:	sub    eax,0x5d078a18
  41f709:	cmc    
  41f70a:	jmp    0xefdb:0x4bd4d536
  41f711:	mov    ch,0xba
  41f713:	shl    ch,0x5a
  41f716:	sbb    eax,0x9ad12a2d
  41f71b:	inc    esp
  41f71c:	adc    eax,0x5dff2bff
  41f721:	push   cs
  41f722:	out    0x54,al
  41f724:	gs pop ss
  41f726:	add    eax,0x7cf62bd7
  41f72b:	ror    DWORD PTR [ebp+0x28],cl
  41f72e:	jecxz  0x41f6c7
  41f730:	lods   eax,DWORD PTR ds:[esi]
  41f731:	mov    edi,0x2f3b6e51
  41f736:	and    DWORD PTR [ebp-0x6e45264e],esp
  41f73c:	sbb    al,0xe7
  41f73e:	in     al,dx
  41f73f:	or     al,0x95
  41f741:	pop    ecx
  41f742:	dec    edi
  41f743:	fisubr DWORD PTR [eax-0x55]
  41f746:	pop    edx
  41f747:	sub    eax,0xa24b4750
  41f74c:	push   esi
  41f74d:	pushf  
  41f74e:	jns    0x41f773
  41f750:	push   cs
  41f751:	mov    edx,0x59e23a7f
  41f756:	sub    eax,0x73a74cad
  41f75b:	les    eax,FWORD PTR [edx]
  41f75d:	sahf   
  41f75e:	and    ch,BYTE PTR [eax-0x76]
  41f761:	pop    ecx
  41f762:	inc    ecx
  41f763:	rcl    BYTE PTR [eax+0x33],0x5b
  41f767:	aas    
  41f768:	push   es
  41f769:	pop    ecx
  41f76a:	shl    DWORD PTR [edx-0x2a],cl
  41f76d:	push   ds
  41f76e:	xchg   ebx,eax
  41f76f:	add    eax,0xd35cbdd2
  41f774:	jns    0x41f790
  41f776:	cmp    al,0x52
  41f778:	xchg   edi,eax
  41f779:	retf   0xa448
  41f77c:	cmp    BYTE PTR [ebp-0x4916020c],al
  41f782:	retf   0x7a40
  41f785:	cli    
  41f786:	inc    esi
  41f787:	xor    eax,0xd355eb65
  41f78c:	mov    eax,DWORD PTR [ebx-0x2b]
  41f78f:	pop    ebx
  41f790:	xchg   DWORD PTR [ecx+0x59c21a08],esi
  41f796:	sub    DWORD PTR cs:[esi+0x2ca364b3],edx
  41f79d:	stos   DWORD PTR es:[edi],eax
  41f79e:	dec    edx
  41f79f:	int    0xb8
  41f7a1:	dec    eax
  41f7a2:	(bad)  
  41f7a3:	mov    edx,0xd2c084a6
  41f7a8:	lds    edi,FWORD PTR [edi]
  41f7aa:	lock sub bl,BYTE PTR gs:[esi]
  41f7ae:	pop    ds
  41f7af:	dec    ebp
  41f7b0:	pop    ebp
  41f7b1:	jle    0x41f7fa
  41f7b3:	sub    eax,0xe12b2290
  41f7b8:	popf   
  41f7b9:	jg     0x41f771
  41f7bb:	pop    edx
  41f7bc:	gs pop ecx
  41f7be:	dec    esi
  41f7bf:	jmp    0xa95c:0x1d851dae
  41f7c6:	out    dx,eax
  41f7c7:	aam    0x3e
  41f7c9:	das    
  41f7ca:	ds (bad) 
  41f7cc:	adc    eax,0x72d3687d
  41f7d1:	les    ecx,FWORD PTR [ecx+0x41b075bf]
  41f7d7:	push   cs
  41f7d8:	pop    ebp
  41f7d9:	inc    esp
  41f7da:	bound  edi,QWORD PTR [ebx-0x6e]
  41f7dd:	pop    edx
  41f7de:	shr    DWORD PTR [eax+0x64],0x55
  41f7e2:	dec    eax
  41f7e3:	daa    
  41f7e4:	gs cdq 
  41f7e6:	int3   
  41f7e7:	mov    al,0x87
  41f7e9:	adc    al,0xc0
  41f7eb:	dec    ebp
  41f7ec:	pop    ebp
  41f7ed:	not    BYTE PTR [eax-0x53]
  41f7f0:	mov    cl,0x8f
  41f7f2:	(bad)  
  41f7f3:	xchg   ecx,eax
  41f7f4:	rcr    BYTE PTR [esi+0x2],cl
  41f7f7:	aad    0x86
  41f7f9:	cmp    ecx,DWORD PTR [eax]
  41f7fb:	mov    ds:0xe25c09ce,al
  41f800:	pop    ebp
  41f801:	inc    ebx
  41f802:	dec    ecx
  41f803:	cmp    esp,ecx
  41f805:	xchg   ecx,eax
  41f806:	cli    
  41f807:	xchg   edx,eax
  41f808:	cmp    al,0x46
  41f80a:	mov    bh,0xef
  41f80c:	aam    0xe8
  41f80e:	int    0x9b
  41f810:	fld    DWORD PTR [ecx]
  41f812:	jmp    0x41f83f
  41f814:	leave  
  41f815:	icebp  
  41f816:	idiv   BYTE PTR [ecx]
  41f818:	push   ebx
  41f819:	pop    ecx
  41f81a:	pop    edi
  41f81b:	xlat   BYTE PTR ds:[ebx]
  41f81c:	jns    0x41f851
  41f81e:	pop    edx
  41f81f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f820:	xchg   ecx,eax
  41f821:	inc    edi
  41f822:	dec    ebx
  41f823:	mov    dl,0xb9
  41f825:	dec    edx
  41f826:	cmp    al,0x59
  41f828:	xor    al,0xaf
  41f82a:	sar    BYTE PTR [eax+0x353b7293],1
  41f830:	pop    esp
  41f831:	out    dx,eax
  41f832:	sub    eax,0xef5907aa
  41f837:	ret    
  41f838:	pop    eax
  41f839:	mov    ch,0xa9
  41f83b:	cdq    
  41f83c:	pop    ebp
  41f83d:	adc    al,BYTE PTR [ecx]
  41f83f:	pusha  
  41f840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f841:	pop    edx
  41f842:	and    bl,bl
  41f844:	mov    ebx,DWORD PTR [ecx-0x3c]
  41f847:	enter  0x97f5,0xe6
  41f84b:	dec    ecx
  41f84c:	or     cl,0x4b
  41f84f:	ins    DWORD PTR es:[edi],dx
  41f850:	and    eax,0xecb4a625
  41f855:	add    ch,BYTE PTR [ebx]
  41f857:	xor    ch,bl
  41f859:	je     0x41f890
  41f85b:	push   ss
  41f85c:	shl    DWORD PTR [ebp-0x58],0x7b
  41f860:	imul   ebx,DWORD PTR [eax],0xffffffbb
  41f863:	push   0xffffffd4
  41f865:	pop    ecx
  41f866:	cmp    ch,BYTE PTR [ebp+ebp*1+0x2f]
  41f86a:	test   eax,0x73ce5d22
  41f86f:	dec    ecx
  41f870:	sub    BYTE PTR [eax+0x59d6f4b5],bh
  41f876:	je     0x41f88c
  41f878:	adc    ch,dl
  41f87a:	cmc    
  41f87b:	in     al,dx
  41f87c:	add    cl,dh
  41f87e:	pop    esi
  41f87f:	enter  0x895d,0x8d
  41f883:	mov    esi,DWORD PTR [edi]
  41f885:	cmp    dh,BYTE PTR [edx-0x7a16049c]
  41f88b:	shl    BYTE PTR ds:0x89d91f8c,cl
  41f891:	sti    
  41f892:	sbb    eax,0x4ecaa7ff
  41f897:	xlat   BYTE PTR ds:[ebx]
  41f898:	cmc    
  41f899:	mov    ss,ecx
  41f89b:	in     al,0x3b
  41f89d:	(bad)  
  41f89e:	mov    dh,0x3b
  41f8a0:	jp     0x41f866
  41f8a2:	dec    edx
  41f8a3:	inc    edx
  41f8a4:	aam    0x36
  41f8a6:	pop    esp
  41f8a7:	sbb    DWORD PTR [esi-0x10039c1c],esp
  41f8ad:	add    eax,0x58a5b5b7
  41f8b2:	ror    DWORD PTR [ecx+0x4371af97],cl
  41f8b8:	std    
  41f8b9:	mov    cl,0x58
  41f8bb:	fcomp  QWORD PTR [ebp+0x17]
  41f8be:	push   ebp
  41f8bf:	ficomp DWORD PTR [esi+0x15]
  41f8c2:	test   DWORD PTR [esi-0x52],0x43e3b159
  41f8c9:	test   BYTE PTR [ebx+0x74],dh
  41f8cc:	or     ebx,DWORD PTR [esi-0x77f171b5]
  41f8d2:	lahf   
  41f8d3:	push   eax
  41f8d4:	fs mov ebx,0x300158ea
  41f8da:	sahf   
  41f8db:	shr    ah,cl
  41f8dd:	add    al,0x56
  41f8df:	pop    cx
  41f8e1:	dec    ecx
  41f8e2:	enter  0x5d91,0xc2
  41f8e6:	dec    ecx
  41f8e7:	sub    eax,0xc6ab50f3
  41f8ec:	sub    al,0x46
  41f8ee:	icebp  
  41f8ef:	(bad)  
  41f8f0:	jbe    0x41f8bd
  41f8f2:	jle    0x41f91e
  41f8f4:	pop    ecx
  41f8f5:	push   edi
  41f8f6:	dec    ebx
  41f8f7:	inc    ebx
  41f8f8:	ins    DWORD PTR es:[edi],dx
  41f8f9:	and    eax,0x80e6052d
  41f8fe:	adc    edx,0x80116cd0
  41f904:	sub    eax,0x56e59364
  41f909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f90a:	add    ah,bl
  41f90c:	mov    eax,ds:0x3acecabc
  41f911:	pop    eax
  41f912:	adc    al,0xd2
  41f914:	sbb    DWORD PTR [esi],0x8a5967b6
  41f91a:	repz loopne 0x41f97a
  41f91d:	jo     0x41f959
  41f91f:	inc    edx
  41f920:	fcomp  QWORD PTR [edi+0x595faa42]
  41f926:	aas    
  41f927:	mov    dh,0xf
  41f929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f92a:	mov    cl,0x7e
  41f92c:	inc    esp
  41f92d:	add    DWORD PTR [esi-0x1e],eax
  41f930:	popf   
  41f931:	(bad)  
  41f932:	dec    edx
  41f933:	fs push ecx
  41f935:	pop    DWORD PTR [esi]
  41f937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f938:	push   edi
  41f939:	pop    ecx
  41f93a:	xor    BYTE PTR [edx+0xb],al
  41f93d:	mov    ecx,0xec58bae9
  41f942:	dec    edx
  41f943:	xor    BYTE PTR [ebx],al
  41f945:	js     0x41f959
  41f947:	les    ecx,FWORD PTR [edi-0x672d4736]
  41f94d:	add    edx,DWORD PTR [eax-0x3d0c7a3e]
  41f953:	loopne 0x41f9a6
  41f955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f956:	mov    dl,BYTE PTR [ebp+0x69]
  41f959:	sbb    bl,cl
  41f95b:	pop    es
  41f95c:	sbb    BYTE PTR [edi-0x2350238f],dh
  41f962:	jmp    0xf67dd339
  41f967:	mov    eax,ds:0xc84a46b7
  41f96c:	ror    DWORD PTR [edx+esi*8],0xb6
  41f970:	jge    0x41f975
  41f972:	or     esi,DWORD PTR [eax+0x7]
  41f975:	inc    esi
  41f976:	pop    edi
  41f977:	xchg   ecx,eax
  41f978:	jmp    FWORD PTR [ecx+edi*1+0xe]
  41f97c:	cli    
  41f97d:	xchg   ecx,eax
  41f97e:	dec    edx
  41f97f:	sub    ecx,ebx
  41f981:	in     eax,dx
  41f982:	cwde   
  41f983:	and    esi,ecx
  41f985:	in     al,dx
  41f986:	cli    
  41f987:	aad    0xe0
  41f989:	loope  0x41f91f
  41f98b:	cli    
  41f98c:	(bad)  
  41f98d:	imul   ebx,edx,0x51955900
  41f993:	adc    eax,0x888057ca
  41f998:	dec    esp
  41f999:	cwde   
  41f99a:	dec    edx
  41f99b:	mov    al,ds:0xd425a7f3
  41f9a0:	lods   eax,DWORD PTR ds:[esi]
  41f9a1:	pop    ecx
  41f9a2:	arpl   dx,ax
  41f9a4:	adc    ecx,DWORD PTR [ecx]
  41f9a6:	xchg   esp,eax
  41f9a7:	jp     0x41f9bb
  41f9a9:	jmp    0x41f9f6
  41f9ab:	or     ch,0xd6
  41f9ae:	add    ebx,ebp
  41f9b0:	push   es
  41f9b1:	in     eax,dx
  41f9b2:	sub    ah,BYTE PTR [esi]
  41f9b4:	jnp    0x41fa0f
  41f9b6:	sbb    BYTE PTR [ebx+eiz*8+0x35],al
  41f9ba:	and    edi,eax
  41f9bc:	adc    BYTE PTR [edi],0x4b
  41f9bf:	je     0x41f9d7
  41f9c1:	jne    0x41f990
  41f9c3:	inc    ebp
  41f9c4:	cwde   
  41f9c5:	xchg   DWORD PTR [esi],ebp
  41f9c7:	shl    DWORD PTR [esp+edi*8+0x533ee459],1
  41f9ce:	imul   ebx,DWORD PTR [esi+edx*8+0x1b],0x29
  41f9d3:	jmp    0x448cf0e5
  41f9d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9d9:	fdivr  st,st(7)
  41f9db:	inc    ebx
  41f9dc:	adc    al,0x46
  41f9de:	cld    
  41f9df:	xchg   edi,eax
  41f9e0:	int3   
  41f9e1:	adc    eax,0x51c37613
  41f9e6:	sub    eax,0xb9550dde
  41f9eb:	sahf   
  41f9ec:	fnstcw WORD PTR [edi]
  41f9ee:	or     esp,DWORD PTR [edi+eax*4+0x7bb9ffc9]
  41f9f5:	pop    ecx
  41f9f6:	cdq    
  41f9f7:	xor    bl,0xc
  41f9fa:	scas   eax,DWORD PTR es:[edi]
  41f9fb:	stc    
  41f9fc:	push   ecx
  41f9fd:	(bad)  
  41f9fe:	push   eax
  41f9ff:	(bad)  
  41fa00:	not    DWORD PTR [ebp+0x6]
  41fa03:	shl    BYTE PTR [ecx+0xc43ae6e],cl
  41fa09:	inc    esi
  41fa0a:	cmp    al,0x1f
  41fa0c:	pop    ss
  41fa0d:	sti    
  41fa0e:	xlat   BYTE PTR ds:[ebx]
  41fa0f:	push   ebp
  41fa10:	mov    bl,0x32
  41fa12:	dec    ebx
  41fa13:	arpl   di,di
  41fa15:	addr16 std 
  41fa17:	jg     0x41fa50
  41fa19:	jnp    0x41f9e6
  41fa1b:	rcl    BYTE PTR [ebx-0x648072d],cl
  41fa21:	mov    bl,0x1c
  41fa23:	lahf   
  41fa24:	cdq    
  41fa25:	or     dh,dl
  41fa27:	sar    BYTE PTR [ecx+0x31],cl
  41fa2a:	jne    0x41fa1b
  41fa2c:	inc    ebx
  41fa2d:	in     al,dx
  41fa2e:	iret   
  41fa2f:	shl    BYTE PTR [eax+esi*2-0x482a0a69],cl
  41fa36:	shl    BYTE PTR [edx+0x1aecf256],1
  41fa3c:	push   ebx
  41fa3d:	(bad)  
  41fa3e:	jp     0x41fa03
  41fa40:	dec    edx
  41fa41:	mov    BYTE PTR [ecx-0x3e],dh
  41fa44:	jp     0x41fa72
  41fa46:	retf   0xbd75
  41fa49:	or     eax,0x86c0cb91
  41fa4e:	dec    edx
  41fa4f:	push   edx
  41fa50:	int    0x71
  41fa52:	mov    edx,0xf80f36c6
  41fa57:	rcr    BYTE PTR [eax+0x61],cl
  41fa5a:	data16 int3 
  41fa5c:	mov    al,0x11
  41fa5e:	fld    QWORD PTR [ecx]
  41fa60:	add    DWORD PTR gs:[ebx-0x6b264888],0x989adc0e
  41fa6b:	fmul   DWORD PTR [edi+edx*2+0x12]
  41fa6f:	adc    eax,0x9d17d960
  41fa74:	jmp    0xf36b:0x5d378892
  41fa7b:	adc    cl,BYTE PTR [edx]
  41fa7d:	mov    eax,0x597032f6
  41fa82:	adc    ebx,edx
  41fa84:	cld    
  41fa85:	aas    
  41fa86:	sbb    DWORD PTR [eax-0x47],edx
  41fa89:	jp     0x41fad6
  41fa8b:	test   DWORD PTR [edi],esi
  41fa8d:	adc    BYTE PTR [edi-0x1],al
  41fa90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa91:	rcl    bl,cl
  41fa93:	rol    BYTE PTR [esi+0x63],cl
  41fa96:	(bad)  
  41fa97:	xor    edx,edi
  41fa99:	adc    al,0x44
  41fa9b:	subps  xmm7,XMMWORD PTR [esi+0x7]
  41fa9f:	add    DWORD PTR [eax+0x1236902],esi
  41faa5:	push   ebp
  41faa6:	mov    edx,edx
  41faa8:	mov    esi,0x68221c9
  41faad:	addr16 jnp 0x41fa3b
  41fab0:	pop    ebp
  41fab1:	das    
  41fab2:	cld    
  41fab3:	inc    esi
  41fab4:	jl     0x41fa83
  41fab6:	ss (bad) 
  41fab8:	sbb    DWORD PTR [esi+0x33],ebx
  41fabb:	mov    edi,0xbdb4877a
  41fac0:	dec    edi
  41fac1:	xchg   esp,eax
  41fac2:	push   ecx
  41fac3:	sar    DWORD PTR [ebp+0x28d28a31],0x52
  41faca:	std    
  41facb:	push   0xa9d05e53
  41fad0:	jns    0x41fa62
  41fad2:	mov    eax,ds:0x486170f2
  41fad7:	stos   DWORD PTR es:[edi],eax
  41fad8:	pop    esp
  41fad9:	ja     0x41faed
  41fadb:	push   es
  41fadc:	fidivr DWORD PTR [ebx-0x4893b219]
  41fae2:	xchg   esi,eax
  41fae3:	xchg   DWORD PTR [edi+0x4e2e0e59],ecx
  41fae9:	cdq    
  41faea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41faeb:	pop    ss
  41faec:	adc    al,0xb
  41faee:	dec    ebx
  41faef:	pusha  
  41faf0:	aaa    
  41faf1:	xchg   ebx,eax
  41faf2:	sbb    BYTE PTR [edi+0x8],al
  41faf5:	xchg   esp,eax
  41faf6:	(bad)  
  41faf7:	rcl    bh,cl
  41faf9:	or     al,0xb2
  41fafb:	add    eax,0x46708a0f
  41fb00:	pop    ebp
  41fb01:	pop    edi
  41fb02:	out    dx,eax
  41fb03:	mov    esp,0x7808b59c
  41fb08:	pop    es
  41fb09:	inc    esi
  41fb0a:	jecxz  0x41fb83
  41fb0c:	push   esp
  41fb0d:	cmp    ch,bh
  41fb0f:	les    edx,FWORD PTR ds:0x91734255
  41fb15:	or     BYTE PTR [ebx-0x7a5cfb2a],cl
  41fb1b:	and    al,0xfb
  41fb1d:	push   esi
  41fb1e:	fwait
  41fb1f:	ds add bh,bl
  41fb22:	pop    ebp
  41fb23:	fs cs (bad) 
  41fb26:	or     ch,BYTE PTR [eax-0x4e]
  41fb29:	cmc    
  41fb2a:	dec    edx
  41fb2b:	mov    dh,0x41
  41fb2d:	scas   eax,DWORD PTR es:[edi]
  41fb2e:	scas   al,BYTE PTR es:[edi]
  41fb2f:	in     al,dx
  41fb30:	adc    al,0xa3
  41fb32:	jmp    0xd856:0x2746123e
  41fb39:	sub    BYTE PTR [edx-0x3b],bl
  41fb3c:	and    BYTE PTR [edi+0x4b],dh
  41fb3f:	sub    BYTE PTR ds:0xaf90e166,cl
  41fb45:	test   al,0xf9
  41fb47:	(bad)  
  41fb49:	xor    ah,BYTE PTR [esi-0x2f22cfee]
  41fb4f:	lds    esp,FWORD PTR [ebp-0x38]
  41fb52:	bound  esi,QWORD PTR [esi+0x444b1bbe]
  41fb58:	je     0x41fba6
  41fb5a:	pop    esp
  41fb5b:	cmpxchg ah,cl
  41fb5e:	sbb    ah,0xee
  41fb61:	or     eax,0x9db5928e
  41fb66:	lds    edi,FWORD PTR [esi+0x764aae43]
  41fb6c:	rcr    BYTE PTR [eax+0xd],1
  41fb6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb70:	cmp    DWORD PTR [esi-0x166a2a59],0x523df96c
  41fb7a:	and    eax,0x79d143f2
  41fb7f:	adc    bl,BYTE PTR [ebp-0x34]
  41fb82:	(bad)  
  41fb83:	mov    WORD PTR [ecx-0x622df9ca],es
  41fb89:	or     eax,0x89ceefcd
  41fb8e:	rcl    BYTE PTR [eax],0x5d
  41fb91:	push   0x63
  41fb93:	xor    al,0x7c
  41fb95:	jbe    0x41fb5e
  41fb97:	or     al,0x21
  41fb99:	push   edi
  41fb9a:	cmp    eax,0x6f46289e
  41fb9f:	dec    esi
  41fba0:	mov    esp,0xa7dbe14f
  41fba5:	mov    edx,DWORD PTR [esi+0x4f]
  41fba8:	dec    eax
  41fba9:	es push eax
  41fbab:	push   ebp
  41fbac:	mov    bh,0xe9
  41fbae:	into   
  41fbaf:	cdq    
  41fbb0:	sahf   
  41fbb1:	pop    ecx
  41fbb2:	loopne 0x41fb59
  41fbb4:	jnp    0x41fbbc
  41fbb6:	push   edi
  41fbb7:	push   es
  41fbb8:	ja     0x41fb58
  41fbba:	push   eax
  41fbbb:	cmp    eax,DWORD PTR [ebp-0x1cfe20b]
  41fbc1:	jp     0x41fb6e
  41fbc3:	adc    bh,dh
  41fbc5:	jne    0x41fbea
  41fbc7:	rol    BYTE PTR [ecx+0x18],cl
  41fbca:	sbb    BYTE PTR [ebx],bl
  41fbcc:	mov    WORD PTR [edx-0x6184ea7d],ds
  41fbd2:	dec    ebp
  41fbd3:	ror    BYTE PTR [edi],cl
  41fbd5:	scas   al,BYTE PTR es:[edi]
  41fbd6:	and    ebp,ebx
  41fbd8:	dec    ebx
  41fbd9:	mov    gs:0xd74aa5d2,eax
  41fbdf:	mov    ecx,0xb560c432
  41fbe4:	aas    
  41fbe5:	pop    ecx
  41fbe6:	dec    ebx
  41fbe7:	cdq    
  41fbe8:	mov    eax,0x67f34d88
  41fbed:	cmp    al,0x4a
  41fbef:	shl    BYTE PTR [ebx],cl
  41fbf1:	icebp  
  41fbf2:	or     BYTE PTR [ecx],bl
  41fbf4:	test   BYTE PTR ds:0xd52b1dc,bh
  41fbfa:	packssdw mm6,mm2
  41fbfd:	call   0xdf897e52
  41fc02:	inc    ebx
  41fc03:	int3   
  41fc04:	imul   edx
  41fc06:	mov    dl,0x9d
  41fc08:	mov    ebp,0x301b14c2
  41fc0d:	pop    esp
  41fc0e:	dec    edx
  41fc0f:	inc    edi
  41fc10:	fcom   QWORD PTR [esi+0x0]
  41fc13:	(bad)  
  41fc14:	mov    ebp,0x892dc4ca
  41fc19:	pop    ecx
  41fc1a:	inc    esi
  41fc1b:	cmp    eax,0xb07fc3e7
  41fc20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc21:	push   eax
  41fc22:	dec    ebx
  41fc23:	push   cs
  41fc24:	ds into 
  41fc26:	and    ebp,ecx
  41fc28:	int3   
  41fc29:	pop    edx
  41fc2a:	test   esi,ebx
  41fc2c:	cwde   
  41fc2d:	or     al,0x5c
  41fc2f:	xchg   ebx,eax
  41fc30:	sbb    al,BYTE PTR [ecx+0x7606ce31]
  41fc36:	xchg   ebx,eax
  41fc37:	das    
  41fc38:	pop    ebp
  41fc39:	mov    esi,0xb6565086
  41fc3e:	mov    WORD PTR [edx-0x2b],ss
  41fc41:	pop    ecx
  41fc42:	add    al,0xb2
  41fc44:	or     eax,0x3311496f
  41fc49:	dec    ebp
  41fc4a:	dec    ebx
  41fc4b:	pop    ss
  41fc4c:	test   DWORD PTR [ebx-0x4b201961],ebp
  41fc52:	out    0xd2,eax
  41fc54:	cmc    
  41fc55:	push   eax
  41fc56:	es iret 
  41fc58:	mov    BYTE PTR [edx+0x395db354],ch
  41fc5e:	fidiv  DWORD PTR [esp+eax*4-0x22]
  41fc62:	pop    es
  41fc63:	sbb    eax,0xbdc229d5
  41fc68:	or     DWORD PTR [esi-0x80],eax
  41fc6b:	xchg   esi,eax
  41fc6c:	ror    DWORD PTR [ecx+0x397a80f9],1
  41fc72:	fnsetpm(287 only) 
  41fc74:	jno    0x41fcf2
  41fc76:	out    dx,eax
  41fc77:	sahf   
  41fc78:	pop    edi
  41fc79:	ror    dl,cl
  41fc7b:	out    0xfc,al
  41fc7d:	xchg   edi,eax
  41fc7e:	sbb    DWORD PTR [esp+ebp*8+0x43c52f59],ecx
  41fc85:	fucom  st(2)
  41fc87:	mov    esp,0x374b6599
  41fc8c:	jo     0x41fcc5
  41fc8e:	push   0xffffffb6
  41fc90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc91:	idiv   edx
  41fc93:	shl    ah,1
  41fc95:	adc    bh,BYTE PTR [esi+0x633ad4bb]
  41fc9b:	daa    
  41fc9c:	std    
  41fc9d:	push   ebx
  41fc9e:	aas    
  41fc9f:	not    DWORD PTR [ebx+0x1b]
  41fca2:	jecxz  0x41fcc5
  41fca4:	outs   dx,DWORD PTR ds:[esi]
  41fca5:	hlt    
  41fca6:	lahf   
  41fca7:	push   edx
  41fca8:	ficomp WORD PTR [edi+0x1e]
  41fcab:	mov    cl,0x1d
  41fcad:	inc    esi
  41fcae:	lods   eax,DWORD PTR ds:[esi]
  41fcaf:	in     eax,dx
  41fcb0:	fcom   QWORD PTR [edi-0x3]
  41fcb3:	sbb    bl,BYTE PTR [edx+0x3a07fb00]
  41fcb9:	aaa    
  41fcba:	pop    ecx
  41fcbb:	xchg   ebp,eax
  41fcbc:	pop    ebp
  41fcbd:	jbe    0x41fd10
  41fcbf:	stc    
  41fcc0:	sti    
  41fcc1:	leave  
  41fcc2:	sar    DWORD PTR [esi+eax*2+0x4e],cl
  41fcc6:	add    ecx,edx
  41fcc8:	push   edx
  41fcc9:	js     0x41fd19
  41fccb:	ffreep st(5)
  41fccd:	into   
  41fcce:	retf   0xeff6
  41fcd1:	repnz dec edx
  41fcd3:	pop    ebp
  41fcd4:	test   eax,0x32a2d88a
  41fcd9:	cli    
  41fcda:	int    0xd2
  41fcdc:	xchg   BYTE PTR [edx+0x7d],ch
  41fcdf:	mov    al,BYTE PTR [ebx-0x7]
  41fce2:	vsubsd xmm5,xmm3,QWORD PTR [edi+0x256eda15]
  41fcea:	clc    
  41fceb:	push   0xd6835f25
  41fcf0:	cmp    esp,DWORD PTR [ebx-0x2686db42]
  41fcf6:	jle    0x41fd3b
  41fcf8:	shr    BYTE PTR [ebx-0x55033fb6],0x73
  41fcff:	pop    eax
  41fd00:	jbe    0x41fd25
  41fd02:	mov    bl,0xb8
  41fd04:	fist   DWORD PTR [esi-0x23]
  41fd07:	mov    BYTE PTR [ebx],dh
  41fd09:	push   es
  41fd0a:	inc    ebp
  41fd0b:	fdiv   QWORD PTR [edi+0x5d3650f3]
  41fd11:	pop    es
  41fd12:	add    eax,0xe0ba7c66
  41fd17:	test   BYTE PTR [ebp+0x64866b5e],0xa7
  41fd1e:	bound  eax,QWORD PTR [ebx+0x6bd36e29]
  41fd24:	pop    ebp
  41fd25:	out    0xc1,eax
  41fd27:	dec    esp
  41fd28:	cld    
  41fd29:	daa    
  41fd2a:	dec    edi
  41fd2b:	cmc    
  41fd2c:	rcr    BYTE PTR [ecx-0x6c],cl
  41fd2f:	aad    0xc9
  41fd31:	jnp    0x41fcd4
  41fd33:	add    al,0x7d
  41fd35:	adc    cl,BYTE PTR [ebx-0x7a]
  41fd38:	pop    ss
  41fd39:	pop    es
  41fd3a:	clc    
  41fd3b:	in     al,dx
  41fd3c:	lea    esp,[esi-0x6a]
  41fd3f:	ror    BYTE PTR [edx],cl
  41fd41:	mov    cl,bh
  41fd43:	add    DWORD PTR [edi],esp
  41fd45:	push   cs
  41fd46:	xchg   edi,eax
  41fd47:	push   ebp
  41fd48:	mov    ss,WORD PTR [edx+0x57]
  41fd4b:	inc    edx
  41fd4c:	jno    0x41fdbd
  41fd4e:	fs scas eax,DWORD PTR es:[edi]
  41fd50:	jne    0x41fda3
  41fd52:	lock mov dh,0x87
  41fd55:	jmp    0x771c:0x84e8d349
  41fd5c:	(bad)  
  41fd5d:	mov    ecx,0xc67070fa
  41fd62:	xchg   esp,eax
  41fd63:	ror    BYTE PTR [esi],cl
  41fd65:	mov    esp,0xfdc8478e
  41fd6a:	enter  0x5db3,0xf7
  41fd6e:	adc    dh,al
  41fd70:	mov    dh,0xe7
  41fd72:	pop    esp
  41fd73:	push   edx
  41fd74:	cmc    
  41fd75:	adc    ecx,ebp
  41fd77:	xchg   edx,eax
  41fd78:	or     al,BYTE PTR [esi-0x5890da08]
  41fd7e:	add    bh,BYTE PTR [bx+si+0x48de]
  41fd83:	std    
  41fd84:	outs   dx,BYTE PTR ds:[esi]
  41fd85:	cdq    
  41fd86:	xor    eax,0x59dfbefb
  41fd8b:	shr    ebx,cl
  41fd8d:	adc    ah,dh
  41fd8f:	inc    ebp
  41fd90:	mov    ecx,0x5d11369e
  41fd95:	scas   eax,DWORD PTR es:[edi]
  41fd96:	nop
  41fd97:	mov    bh,0x25
  41fd99:	das    
  41fd9a:	push   ebx
  41fd9b:	add    al,0x37
  41fd9d:	jo     0x41fe1d
  41fd9f:	cmc    
  41fda0:	and    al,BYTE PTR [edi-0x9]
  41fda3:	(bad)  
  41fda4:	jb     0x41fd70
  41fda6:	jmp    0x5fa5:0x3d529660
  41fdad:	jnp    0x41fe03
  41fdaf:	mov    al,ds:0x585ab15d
  41fdb4:	popa   
  41fdb5:	sub    edi,ecx
  41fdb7:	mov    dh,0x4d
  41fdb9:	pop    eax
  41fdba:	dec    esp
  41fdbb:	pop    eax
  41fdbc:	fmul   st,st(2)
  41fdbe:	pushf  
  41fdbf:	daa    
  41fdc0:	cld    
  41fdc1:	test   ebp,esp
  41fdc3:	fwait
  41fdc4:	js     0x41fdbf
  41fdc6:	cmp    edx,DWORD PTR [edx-0x3d]
  41fdc9:	xor    eax,0x671eb8cf
  41fdce:	jg     0x41fda3
  41fdd0:	xor    ebx,DWORD PTR [ebp-0x6]
  41fdd3:	hlt    
  41fdd4:	mov    eax,ds:0x410f4c7d
  41fdd9:	push   ebx
  41fdda:	repz pop ecx
  41fddc:	fcomp  DWORD PTR [eax+0x46]
  41fddf:	jo     0x41fd61
  41fde1:	jmp    0xc889:0xcd396b42
  41fde8:	ja     0x41fe0f
  41fdea:	dec    edi
  41fdeb:	dec    edi
  41fdec:	out    0x59,al
  41fdee:	fisubr DWORD PTR [ecx-0x79]
  41fdf1:	out    dx,eax
  41fdf2:	fs add eax,0x64ab33f
  41fdf8:	mov    edi,0x4fab6683
  41fdfd:	adc    al,0xa6
  41fdff:	shl    BYTE PTR [edx+ebx*8-0x649b82a5],cl
  41fe06:	sahf   
  41fe07:	rcr    BYTE PTR [ebp-0x67],1
  41fe0a:	aas    
  41fe0b:	enter  0xfee4,0x11
  41fe0f:	adc    al,0x96
  41fe11:	pop    ecx
  41fe12:	jno    0x41fdb4
  41fe14:	les    ebp,FWORD PTR [edi-0x4]
  41fe17:	push   0xffffffe7
  41fe19:	cld    
  41fe1a:	dec    edx
  41fe1b:	jle    0x41fe0e
  41fe1d:	in     eax,dx
  41fe1e:	out    0x30,al
  41fe20:	add    al,0xe3
  41fe22:	fcmove st,st(5)
  41fe24:	xchg   ecx,eax
  41fe25:	imul   ebp,DWORD PTR [edx],0x3f
  41fe28:	std    
  41fe29:	retf   0x8653
  41fe2c:	mov    al,ds:0x5dc16493
  41fe31:	enter  0xf10,0xa
  41fe35:	jns    0x41fe4c
  41fe37:	mov    al,0x69
  41fe39:	pop    ecx
  41fe3a:	addr16 int3 
  41fe3c:	adc    al,0xc5
  41fe3e:	test   BYTE PTR [edx+0x45],al
  41fe41:	xchg   edi,eax
  41fe42:	dec    edx
  41fe43:	xor    eax,0x127e7fe7
  41fe48:	adc    DWORD PTR [esi-0x458702b2],esp
  41fe4e:	retf   0xac33
  41fe51:	jae    0x41fdf8
  41fe53:	and    eax,0x8a4ae98a
  41fe58:	rol    BYTE PTR [esi+0x3a],0x83
  41fe5c:	xor    al,0x41
  41fe5e:	daa    
  41fe5f:	ror    BYTE PTR [esi],cl
  41fe61:	push   edi
  41fe62:	es pop esi
  41fe64:	loop   0x41fe28
  41fe66:	test   eax,0xdd155d1c
  41fe6b:	jb     0x41fe64
  41fe6d:	sbb    al,0x7e
  41fe6f:	mov    cl,0x4f
  41fe71:	inc    esi
  41fe72:	sahf   
  41fe73:	(bad)  
  41fe75:	xlat   BYTE PTR ds:[ebx]
  41fe76:	outs   dx,BYTE PTR ds:[esi]
  41fe77:	push   esp
  41fe78:	popf   
  41fe79:	cld    
  41fe7a:	dec    ebx
  41fe7b:	pop    esi
  41fe7c:	adc    ch,BYTE PTR [ebx-0x505bd8bd]
  41fe82:	arpl   bx,si
  41fe84:	lods   eax,DWORD PTR ds:[esi]
  41fe85:	adc    eax,0x4dccd2dc
  41fe8a:	mov    ebp,0xfceb5718
  41fe8f:	sub    eax,0x3505665d
  41fe94:	xor    al,0x1c
  41fe96:	ret    0xf867
  41fe99:	pop    ecx
  41fe9a:	lock inc edx
  41fe9c:	xchg   esi,eax
  41fe9d:	lods   eax,DWORD PTR ds:[esi]
  41fe9e:	imul   dh
  41fea0:	repnz fisttp WORD PTR [edx+0x23]
  41fea4:	pop    ds
  41fea5:	pushf  
  41fea6:	add    ebp,DWORD PTR [edx-0x2ac0e7d5]
  41feac:	shl    DWORD PTR [edi+edx*4-0x7a],cl
  41feb0:	dec    esi
  41feb1:	mul    BYTE PTR [eax-0x42]
  41feb4:	push   ebp
  41feb5:	and    dh,BYTE PTR ds:[edx+0x37325991]
  41febc:	jecxz  0x41fedf
  41febe:	pop    ebp
  41febf:	std    
  41fec0:	aam    0x59
  41fec2:	aaa    
  41fec3:	jp     0x41fe5e
  41fec5:	int    0xfc
  41fec7:	xchg   edi,eax
  41fec8:	xor    bh,BYTE PTR [eax+0x4b]
  41fecb:	push   ebx
  41fecc:	xchg   esi,eax
  41fecd:	cwde   
  41fece:	arpl   WORD PTR [ebx+0x46d4bfa5],ax
  41fed4:	lahf   
  41fed5:	inc    edx
  41fed6:	lock std 
  41fed8:	repz jno 0x41ff26
  41fedb:	jae    0x41ff50
  41fedd:	stos   DWORD PTR es:[edi],eax
  41fede:	mov    ecx,edi
  41fee0:	pop    esp
  41fee1:	dec    ebp
  41fee2:	dec    edi
  41fee3:	pushf  
  41fee4:	int3   
  41fee5:	push   DWORD PTR [eax]
  41fee7:	clc    
  41fee8:	cmp    DWORD PTR [esi+ecx*1-0x2724d72e],eax
  41feef:	dec    edx
  41fef0:	mov    ebp,0x5cbdb7d0
  41fef5:	mov    bl,0xb0
  41fef7:	sub    al,0x5e
  41fef9:	aaa    
  41fefa:	ret    0x19be
  41fefd:	fistp  QWORD PTR [ecx-0x2d]
  41ff00:	xchg   esi,eax
  41ff01:	mov    BYTE PTR [ebx+0x8e6e2fb],al
  41ff07:	jne    0x41ff66
  41ff09:	and    BYTE PTR [ecx+0x2b0f1672],bh
  41ff0f:	lock rcr BYTE PTR [ecx-0x69],cl
  41ff13:	outs   dx,DWORD PTR ds:[esi]
  41ff14:	ja     0x41fede
  41ff16:	icebp  
  41ff17:	mov    edi,0x354abd14
  41ff1c:	xchg   edi,eax
  41ff1d:	mov    ch,BYTE PTR [esi+0x596b4fb6]
  41ff23:	inc    esi
  41ff24:	repnz dec edx
  41ff26:	mov    ds:0x956b1b7a,al
  41ff2b:	test   DWORD PTR [ecx],0xcf8fe946
  41ff31:	ret    0x34d6
  41ff34:	mov    ds:0x57b4bc4,al
  41ff39:	aam    0x60
  41ff3b:	mov    ecx,0xb782a75f
  41ff40:	jnp    0x41ff9b
  41ff42:	mov    ds:0xc68f440,al
  41ff47:	sub    BYTE PTR [ebx+0x5d67718e],ch
  41ff4d:	dec    esp
  41ff4e:	mov    cl,0xee
  41ff50:	pop    edi
  41ff51:	retf   
  41ff52:	add    eax,0xe2523e90
  41ff57:	fwait
  41ff58:	cmp    al,BYTE PTR [esi+0x6b3be3ce]
  41ff5e:	icebp  
  41ff5f:	xor    eax,0x64722f5d
  41ff64:	mov    cl,0x5b
  41ff66:	stos   DWORD PTR es:[edi],eax
  41ff67:	into   
  41ff68:	fwait
  41ff69:	iret   
  41ff6a:	sub    dl,dl
  41ff6c:	inc    eax
  41ff6d:	xchg   esp,eax
  41ff6e:	pop    ss
  41ff6f:	mov    bh,0x88
  41ff71:	outs   dx,DWORD PTR ds:[esi]
  41ff72:	ret    0x5d04
  41ff75:	sub    BYTE PTR [edi-0x42ddf844],cl
  41ff7b:	and    eax,0x1923124b
  41ff80:	mov    esi,0x76d219b3
  41ff85:	or     ch,ah
  41ff87:	jns    0x41ff8c
  41ff89:	test   eax,0x2964b7a1
  41ff8e:	fcmovnbe st,st(2)
  41ff90:	ret    
  41ff91:	mov    WORD PTR [edx-0x17297e4f],ss
  41ff97:	shl    BYTE PTR [ecx+0x2ab06951],cl
  41ff9d:	jecxz  0x420006
  41ff9f:	jno    0x41fffe
  41ffa1:	add    DWORD PTR [ebx+0x25635555],0xffffffb1
  41ffa8:	sbb    DWORD PTR [ebp-0x5e],ebx
  41ffab:	popa   
  41ffac:	dec    esi
  41ffad:	lds    ebx,FWORD PTR [ebx-0x6d]
  41ffb0:	xchg   edx,eax
  41ffb1:	sub    edi,DWORD PTR [esi-0x19d6800c]
  41ffb7:	push   edx
  41ffb8:	push   0xffffffee
  41ffba:	mov    DWORD PTR [edx],ecx
  41ffbc:	js     0x41ff9d
  41ffbe:	inc    eax
  41ffbf:	inc    ebx
  41ffc0:	lahf   
  41ffc1:	pop    ecx
  41ffc2:	lock xor BYTE PTR [ebx-0x56fccd59],ch
  41ffc9:	push   ss
  41ffca:	dec    ebx
  41ffcb:	scas   eax,DWORD PTR es:[edi]
  41ffcc:	pop    esi
  41ffcd:	jg     0x41ff81
  41ffcf:	(bad)  
  41ffd0:	fmul   st(5),st
  41ffd2:	stc    
  41ffd3:	shr    ah,cl
  41ffd5:	mov    esp,DWORD PTR [edi+0x4]
  41ffd8:	push   0x5ddfcd71
  41ffdd:	sar    BYTE PTR [ebx+0xd],0xe8
  41ffe1:	cli    
  41ffe2:	loopne 0x41ff94
  41ffe4:	test   DWORD PTR [esi+0x16],0xea9b0239
  41ffeb:	std    
  41ffec:	adc    eax,0x5dee3e84
  41fff1:	fnstcw WORD PTR [esi-0x76c7583b]
  41fff7:	fnstenv cs:[edi]
  41fffa:	call   0xa38b:0x178fc6d2
  420001:	das    
  420002:	and    DWORD PTR [ecx+0x37],esp
  420005:	test   BYTE PTR [edx+0x19],cl
  420008:	xor    edi,DWORD PTR [ebx]
  42000a:	mov    esp,0x7c7dcbb4
  42000f:	ror    BYTE PTR ds:0x6cb2d290,1
  420015:	xchg   esi,eax
  420016:	lods   al,BYTE PTR ds:[esi]
  420017:	scas   al,BYTE PTR es:[edi]
  420018:	mov    bl,0x51
  42001a:	dec    ebx
  42001b:	cdq    
  42001c:	dec    ecx
  42001d:	push   edx
  42001e:	jbe    0x42009e
  420020:	not    DWORD PTR [ebp-0x18112df2]
  420026:	or     al,BYTE PTR [edi]
  420028:	arpl   WORD PTR [edx-0x76a983ef],cx
  42002e:	test   al,0xdb
  420030:	inc    ecx
  420031:	add    BYTE PTR [edx],bl
  420033:	mov    dl,0xbd
  420035:	repz sti 
  420037:	ret    
  420038:	mov    bh,0x59
  42003a:	push   eax
  42003b:	test   DWORD PTR [edi-0x7cd8b28b],edx
  420041:	cmp    edx,DWORD PTR [esi+0x61]
  420044:	sbb    eax,0x6b5f1c3d
  420049:	loope  0x41fff5
  42004b:	rol    BYTE PTR [esi],1
  42004d:	ss mov ah,0x3c
  420050:	scas   eax,DWORD PTR es:[edi]
  420051:	pop    ecx
  420052:	mov    BYTE PTR [edx+0x0],bh
  420055:	cs add ecx,eax
  420058:	aaa    
  420059:	sti    
  42005a:	fisttp DWORD PTR [ebp+0x23]
  42005d:	cmp    al,0x4b
  42005f:	jbe    0x420099
  420061:	pop    ebp
  420062:	dec    esp
  420063:	outs   dx,DWORD PTR ds:[esi]
  420064:	cmp    al,0x38
  420066:	test   al,0xd2
  420068:	pop    ss
  420069:	dec    ebp
  42006a:	fwait
  42006b:	jg     0x420041
  42006d:	xor    dl,bh
  42006f:	mov    al,ds:0xd3073f79
  420074:	shr    DWORD PTR [esi-0x5c7814e4],0x5a
  42007b:	jmp    0x420012
  42007d:	push   esi
  42007e:	ins    BYTE PTR es:[edi],dx
  42007f:	gs scas eax,DWORD PTR es:[edi]
  420081:	fst    DWORD PTR [edx+0x78c6aae1]
  420087:	xchg   BYTE PTR [ebx+0x1686566e],bh
  42008d:	les    edi,FWORD PTR [edx-0x384e9d39]
  420093:	mov    edx,0x9d0d59bc
  420098:	sbb    eax,0xad4b83e7
  42009d:	int    0x4a
  42009f:	in     eax,0x3
  4200a1:	out    dx,eax
  4200a2:	adc    DWORD PTR [esi],edi
  4200a4:	mov    edi,0xdccd09c3
  4200a9:	mov    edi,DWORD PTR [edi+0x56]
  4200ac:	popf   
  4200ad:	call   0x4c4a:0xed4f56d9
  4200b4:	icebp  
  4200b5:	out    0x62,eax
  4200b7:	in     al,0x60
  4200b9:	push   0xf073d2f0
  4200be:	pushf  
  4200bf:	push   ebp
  4200c0:	lahf   
  4200c1:	xor    ebx,DWORD PTR [edx+0x66]
  4200c4:	js     0x42008c
  4200c6:	xchg   ebx,eax
  4200c7:	push   edx
  4200c8:	add    eax,0x7dbe7775
  4200cd:	or     al,0x8f
  4200cf:	sar    bh,cl
  4200d1:	lock int3 
  4200d3:	add    al,0x6f
  4200d5:	aas    
  4200d6:	repz jle 0x420148
  4200d9:	cmp    cl,ah
  4200db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200dc:	mov    ds:0x60fe1a39,eax
  4200e1:	scas   al,BYTE PTR es:[edi]
  4200e2:	cld    
  4200e3:	shr    BYTE PTR [edi-0x4a5619fb],cl
  4200e9:	ficom  WORD PTR [eax+edx*8-0x6678f3a3]
  4200f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4200f1:	aad    0x60
  4200f3:	fldenv [ecx]
  4200f5:	cmp    DWORD PTR es:[eax+0x1],esp
  4200f9:	lods   al,BYTE PTR ds:[esi]
  4200fa:	push   0xfffffffc
  4200fc:	push   ebx
  4200fd:	push   ecx
  4200fe:	or     BYTE PTR [ecx],dl
  420100:	jp     0x420163
  420102:	pop    ds
  420103:	xor    edx,edi
  420105:	shl    DWORD PTR [esi+0x10],cl
  420108:	mov    BYTE PTR [ecx-0x5e],bl
  42010b:	jnp    0x42017c
  42010d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42010e:	xchg   ecx,eax
  42010f:	push   0x45
  420111:	fmul   QWORD PTR [edx+0x44]
  420114:	aaa    
  420115:	rol    DWORD PTR [eax+edx*2+0x66],0x2b
  42011a:	test   al,0xd2
  42011c:	inc    edi
  42011d:	cwde   
  42011e:	clc    
  42011f:	push   esi
  420120:	jl     0x420168
  420122:	test   eax,0x82e75de3
  420127:	sahf   
  420128:	mov    dl,0x18
  42012a:	mov    esi,0x154cbd5a
  42012f:	aad    0xef
  420131:	je     0x42012b
  420133:	les    esp,FWORD PTR [ecx-0x47]
  420136:	add    BYTE PTR [esi],ah
  420138:	cwde   
  420139:	pop    ds
  42013a:	dec    ebx
  42013b:	and    eax,0x2e697416
  420140:	pop    esp
  420141:	ins    BYTE PTR es:[edi],dx
  420142:	scas   al,BYTE PTR es:[edi]
  420143:	rol    ch,cl
  420145:	outs   dx,BYTE PTR ds:[esi]
  420146:	rol    BYTE PTR [edx+0x70],cl
  420149:	jns    0x42013e
  42014b:	sahf   
  42014c:	pop    ebp
  42014d:	or     al,0x94
  42014f:	int3   
  420150:	out    0xa3,eax
  420152:	jle    0x420104
  420154:	fwait
  420155:	dec    ebp
  420156:	into   
  420157:	clc    
  420158:	jbe    0x42010f
  42015a:	retf   0x1d17
  42015d:	cwde   
  42015e:	fwait
  42015f:	jmp    0x42017d
  420161:	cld    
  420162:	dec    edx
  420163:	pop    ds
  420164:	sub    bl,BYTE PTR [esi+eax*4-0x4]
  420168:	adc    edx,0x46193acf
  42016e:	xchg   edi,eax
  42016f:	mov    esi,0x5ee9ebf5
  420174:	jge    0x4201d6
  420176:	push   edx
  420177:	xor    cl,BYTE PTR ds:0xf3b2a627
  42017d:	cmp    ecx,esi
  42017f:	xchg   DWORD PTR [edi],esp
  420181:	inc    esi
  420182:	fs jo  0x42019c
  420185:	cmp    DWORD PTR [edi+0x4ad7c8a1],ebp
  42018b:	mov    bh,0x5
  42018d:	mov    ecx,0x5bf33201
  420192:	push   ebx
  420193:	rcr    BYTE PTR [edx-0x21],cl
  420196:	adc    DWORD PTR [ecx],eax
  420198:	imul   eax,edi,0xffffffb5
  42019b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42019c:	pop    ebp
  42019d:	sub    ah,ch
  42019f:	mov    ch,0x65
  4201a1:	inc    edi
  4201a2:	dec    ebp
  4201a3:	or     DWORD PTR [eax+0x6962e059],eax
  4201a9:	fucomp st(6)
  4201ab:	loop   0x420153
  4201ad:	inc    edx
  4201ae:	dec    edx
  4201af:	jge    0x42014e
  4201b1:	and    DWORD PTR [esi-0x1c],0xaecc785d
  4201b8:	mov    ebp,0xd1801abc
  4201bd:	pop    ecx
  4201be:	or     DWORD PTR [ebx],0x44bc02ef
  4201c4:	xchg   edi,eax
  4201c5:	in     al,0x4a
  4201c7:	mov    ah,0xd8
  4201c9:	jg     0x420193
  4201cb:	xchg   ebx,eax
  4201cc:	arpl   WORD PTR [ebx+0x1433d2d4],sp
  4201d2:	out    0x3,eax
  4201d4:	xchg   esp,eax
  4201d5:	mov    esp,0x2e548156
  4201da:	mov    eax,0xe6c2e068
  4201df:	sar    DWORD PTR [ecx],cl
  4201e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201e2:	scas   al,BYTE PTR es:[edi]
  4201e3:	cmc    
  4201e4:	add    DWORD PTR [ecx],ebp
  4201e6:	shr    DWORD PTR [esp+esi*2-0x56a6f1a7],0xe4
  4201ee:	adc    esp,DWORD PTR [esi+0x1451e18b]
  4201f4:	cmp    al,0x91
  4201f6:	jb     0x4201cb
  4201f8:	or     BYTE PTR [eax+0x55],0x78
  4201fc:	cmovbe eax,DWORD PTR [ebp+0x3b]
  420200:	cld    
  420201:	xchg   edx,eax
  420202:	or     al,0xd7
  420204:	fnsave [ebx]
  420206:	dec    ebx
  420207:	in     al,0x19
  420209:	fmul   QWORD PTR [eax+0x347ea396]
  42020f:	fisub  WORD PTR [esi+0x3552f28a]
  420215:	and    BYTE PTR ds:0x5174a006,dl
  42021b:	rcl    dl,1
  42021d:	out    0x23,al
  42021f:	mov    dl,0x8c
  420221:	cli    
  420222:	cmp    BYTE PTR [eax-0x67],bh
  420225:	pop    ecx
  420226:	lock leave 
  420228:	leave  
  420229:	idiv   DWORD PTR [edx-0x56]
  42022c:	int    0xce
  42022e:	push   0x91f45df9
  420233:	push   esi
  420234:	stos   BYTE PTR es:[edi],al
  420235:	cmp    esi,DWORD PTR [edx-0x31]
  420238:	fnsave [eax-0x20]
  42023b:	outs   dx,DWORD PTR ds:[esi]
  42023c:	push   cs
  42023d:	cld    
  42023e:	pop    eax
  42023f:	rcr    DWORD PTR [ebp+0x3a],1
  420242:	inc    ecx
  420243:	fwait
  420244:	sub    ah,BYTE PTR [edi+0x4c]
  420247:	in     al,dx
  420248:	mov    ebx,0x4dd3686c
  42024d:	dec    ebx
  42024e:	fidivr WORD PTR [edi-0x5f1395d0]
  420254:	pop    ebp
  420255:	xchg   edx,eax
  420256:	dec    esp
  420257:	test   BYTE PTR [edi+0x16],dl
  42025a:	imul   ecx,ecx,0xd371f1fe
  420260:	add    al,0x29
  420262:	xor    edx,DWORD PTR [ebx-0x38]
  420265:	and    ch,al
  420267:	lds    esp,FWORD PTR [esi+0x27a1fb5a]
  42026d:	mov    bl,bl
  42026f:	cmp    edx,DWORD PTR [esi-0x4d]
  420272:	jnp    0x4202c6
  420274:	jno    0x420210
  420276:	retf   0x8398
  420279:	pop    es
  42027a:	pop    ebx
  42027b:	fadd   QWORD PTR [esi-0x5d]
  42027e:	xchg   ebx,eax
  42027f:	dec    esp
  420280:	jl     0x4202fb
  420282:	push   esp
  420283:	mov    esp,0xf2940347
  420288:	xor    BYTE PTR [edx],0xfb
  42028b:	mov    ecx,0x384b46cd
  420290:	les    ebx,FWORD PTR [ecx]
  420292:	xchg   edx,eax
  420293:	inc    ecx
  420294:	or     al,0xd6
  420296:	ss int3 
  420298:	adc    al,0x35
  42029a:	stc    
  42029b:	repnz adc ebp,DWORD PTR gs:[ecx]
  42029f:	mov    ah,0x2d
  4202a1:	sub    eax,0x8b5dde2d
  4202a6:	inc    ebp
  4202a7:	xor    eax,0x1a81cda4
  4202ac:	sub    DWORD PTR [esi-0x4],eax
  4202af:	dec    ebx
  4202b0:	push   cs
  4202b1:	or     al,cl
  4202b3:	lods   eax,DWORD PTR ds:[esi]
  4202b4:	cmp    edx,0x4a
  4202b7:	mov    WORD PTR [edx+0x25],ss
  4202ba:	stos   BYTE PTR es:[edi],al
  4202bb:	mov    edi,0xd2829c4b
  4202c0:	in     al,0x99
  4202c2:	or     eax,0x1bac6508
  4202c7:	mov    ecx,0xb1e9395e
  4202cc:	scas   al,BYTE PTR es:[edi]
  4202cd:	push   ss
  4202ce:	in     al,0xb3
  4202d0:	lock addr16 ret 
  4202d3:	in     al,0x3d
  4202d5:	ins    DWORD PTR es:[edi],dx
  4202d6:	adc    al,0xd0
  4202d8:	add    BYTE PTR [ecx+eax*4+0x6b25d18b],ah
  4202df:	mov    esp,0x6fa38d24
  4202e4:	pop    ebp
  4202e5:	pop    edx
  4202e6:	in     al,dx
  4202e7:	scas   eax,DWORD PTR es:[edi]
  4202e8:	(bad)  [ecx]
  4202ea:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4202ec:	xchg   edi,eax
  4202ed:	pop    ecx
  4202ee:	xchg   ebp,eax
  4202ef:	and    eax,0x7e9efae6
  4202f4:	and    al,0xd
  4202f6:	dec    ebx
  4202f7:	push   ds
  4202f8:	fldenv [eax]
  4202fa:	lds    ebp,FWORD PTR [ebx+0x49]
  4202fd:	pop    esp
  4202fe:	sbb    dl,dl
  420300:	inc    eax
  420301:	lds    ebp,FWORD PTR [ebp-0x42351bd6]
  420307:	xchg   DWORD PTR [eax+0x5df5d8ee],esp
  42030d:	(bad)  
  42030e:	jl     0x42037a
  420310:	nop
  420311:	push   cs
  420312:	adc    al,0xe4
  420314:	jb     0x420362
  420316:	sbb    al,0xd6
  420318:	xchg   ebp,eax
  420319:	jecxz  0x420362
  42031b:	out    0xee,eax
  42031d:	cdq    
  42031e:	and    eax,DWORD PTR [esi+ebp*1-0x46ab50e]
  420325:	ret    
  420326:	dec    ebx
  420327:	cmp    bl,BYTE PTR [edi-0x17]
  42032a:	xchg   esi,eax
  42032b:	shl    ch,cl
  42032d:	call   0xe5a5ed31
  420332:	and    edx,esi
  420334:	pop    ebp
  420335:	imul   ebx,DWORD PTR [edi+0x11],0x1b730ec3
  42033c:	popa   
  42033d:	mov    ecx,0xf070e117
  420342:	and    edx,ebx
  420344:	out    0xc2,eax
  420346:	adc    eax,0x28ae0d33
  42034b:	cmp    ebp,esp
  42034d:	nop
  42034e:	dec    edx
  42034f:	lock repz ret 
  420352:	mov    ecx,0x1ebfc4ae
  420357:	shl    ch,cl
  420359:	and    eax,0xfab48a1d
  42035e:	(bad)  
  420360:	dec    edi
  420361:	fmul   DWORD PTR [edx-0x3f]
  420364:	dec    edi
  420365:	into   
  420366:	sub    esp,esp
  420368:	or     dh,BYTE PTR [edx-0x41]
  42036b:	(bad)  
  42036c:	cmp    BYTE PTR [ebx],bh
  42036e:	fs pop eax
  420370:	sti    
  420371:	fldcw  WORD PTR [edi]
  420373:	fwait
  420374:	cwde   
  420375:	push   ebp
  420376:	dec    ebx
  420377:	cmp    DWORD PTR [ecx+0xb],ecx
  42037a:	call   0x9a488f43
  42037f:	rcl    BYTE PTR [esi+0x24],cl
  420382:	add    edi,DWORD PTR [ebx-0x7e]
  420385:	enter  0xbf92,0x49
  420389:	aaa    
  42038a:	dec    ebx
  42038b:	pusha  
  42038c:	adc    al,0x10
  42038e:	mov    DWORD PTR [ecx+0x2f],edi
  420391:	mov    eax,0x17eed242
  420396:	push   0xffffffcb
  420398:	lea    ebp,[eax]
  42039a:	outs   dx,DWORD PTR ds:[esi]
  42039b:	scas   eax,DWORD PTR es:[edi]
  42039c:	outs   dx,DWORD PTR ds:[esi]
  42039d:	scas   al,BYTE PTR es:[edi]
  42039e:	fcom   QWORD PTR [edi-0x43]
  4203a1:	pop    ecx
  4203a2:	jnp    0x4203dd
  4203a4:	cmp    dh,BYTE PTR [ebp+edi*1-0x2e]
  4203a8:	ins    DWORD PTR es:[edi],dx
  4203a9:	pop    ebx
  4203aa:	xor    al,0x76
  4203ac:	stc    
  4203ad:	push   cs
  4203ae:	mov    al,ds:0x7373b85c
  4203b3:	bound  ebx,QWORD PTR [ebp+0x3f]
  4203b6:	and    BYTE PTR [edi+esi*2],bh
  4203b9:	pop    es
  4203ba:	xor    ch,ah
  4203bc:	ins    BYTE PTR es:[edi],dx
  4203bd:	pop    ecx
  4203be:	aas    
  4203bf:	push   edi
  4203c0:	cmp    bl,ch
  4203c2:	lods   eax,DWORD PTR ds:[esi]
  4203c3:	sub    dl,ah
  4203c5:	adc    DWORD PTR [edi+0x3b],ebp
  4203c8:	push   esi
  4203c9:	xor    al,0x51
  4203cb:	test   DWORD PTR [edx],eax
  4203cd:	sub    ecx,DWORD PTR [ebx-0x3c798fa3]
  4203d3:	cli    
  4203d4:	pop    ebx
  4203d5:	mov    bh,0x4a
  4203d7:	into   
  4203d8:	pop    esi
  4203d9:	in     eax,0x1b
  4203db:	out    0xfc,eax
  4203dd:	push   ds
  4203de:	dec    ebx
  4203df:	sysenter 
  4203e1:	dec    edx
  4203e2:	(bad)  
  4203e3:	jl     0x420433
  4203e5:	outs   dx,DWORD PTR ds:[esi]
  4203e6:	inc    esp
  4203e7:	mov    edx,0x4bdb4614
  4203ec:	leave  
  4203ed:	cmp    al,0x8c
  4203ef:	sub    esp,ebx
  4203f1:	pushf  
  4203f2:	dec    edx
  4203f3:	xchg   esp,eax
  4203f4:	loop   0x4203d0
  4203f6:	stos   BYTE PTR es:[edi],al
  4203f7:	and    ebp,DWORD PTR [ebx-0x32acb30]
  4203fd:	push   ebp
  4203fe:	xchg   edx,eax
  4203ff:	and    eax,0x320d4f3e
  420404:	sti    
  420405:	xor    al,0x11
  420407:	jle    0x420477
  420409:	(bad)  
  42040a:	sub    DWORD PTR [ebp-0x29],ebp
  42040d:	fldcw  WORD PTR [ebp+0x2ef98049]
  420413:	int3   
  420414:	mov    ch,0x8f
  420416:	push   edi
  420417:	and    ecx,DWORD PTR [edi]
  420419:	test   DWORD PTR [ecx-0x7c661484],ebp
  42041f:	mov    esp,0xdb4b1e8e
  420424:	jecxz  0x420493
  420426:	jae    0x42045d
  420428:	in     eax,0x83
  42042a:	lock inc edx
  42042c:	pop    ebx
  42042d:	inc    esi
  42042e:	test   eax,0xab125105
  420433:	in     al,0xc6
  420435:	rcr    edx,0xde
  420438:	pop    ebp
  420439:	popf   
  42043a:	fbld   TBYTE PTR [ebp+0x28f29727]
  420440:	mov    eax,0x8901ac58
  420445:	pop    esp
  420446:	(bad)  
  420447:	(bad)  
  420449:	lods   eax,DWORD PTR ds:[esi]
  42044a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42044b:	lahf   
  42044c:	pop    ebp
  42044d:	push   cs
  42044e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42044f:	pusha  
  420450:	pop    esi
  420451:	shl    BYTE PTR [eax-0x2ba9ef8],1
  420457:	outs   dx,BYTE PTR ds:[esi]
  420458:	inc    esp
  420459:	mov    fs,WORD PTR [ebp-0x3694a2c0]
  42045f:	mov    dh,0xc3
  420461:	les    ebx,FWORD PTR [eax+edi*2+0xc]
  420465:	inc    esi
  420466:	add    eax,0xdf070aa6
  42046b:	pinsrw mm1,eax,0x4a
  42046f:	push   0x79
  420471:	aam    0x59
  420473:	retf   0x8e9b
  420476:	enter  0x73dc,0xee
  42047a:	dec    ebx
  42047b:	xchg   edx,eax
  42047c:	aad    0xf6
  42047e:	nop
  42047f:	inc    ebp
  420480:	inc    edx
  420481:	push   ecx
  420482:	push   ecx
  420483:	repz fmul DWORD PTR [ebx+0x5f7192e1]
  42048a:	mov    dl,0x9e
  42048c:	mov    DWORD PTR [ecx-0x14],ebx
  42048f:	sbb    al,BYTE PTR [ebx+0x7546c154]
  420495:	ror    BYTE PTR [edx+0x28],0x5
  420499:	add    cl,BYTE PTR [edx]
  42049b:	clc    
  42049c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42049d:	pop    edi
  42049e:	loope  0x42045a
  4204a0:	rol    DWORD PTR [edi-0x1b8dc1b8],1
  4204a6:	dec    ecx
  4204a7:	arpl   WORD PTR ds:0x5d15f357,bx
  4204ad:	retf   
  4204ae:	push   0xffffffbb
  4204b0:	sbb    edi,DWORD PTR [ebp+0x5a]
  4204b3:	add    ecx,DWORD PTR ds:0x62bbfc46
  4204b9:	mov    gs,edx
  4204bb:	test   BYTE PTR [eax],dl
  4204bd:	scas   eax,DWORD PTR es:[edi]
  4204be:	dec    edx
  4204bf:	rcl    esi,cl
  4204c1:	test   al,0xb5
  4204c3:	and    al,0xe8
  4204c5:	mov    eax,0x6509d42f
  4204ca:	repz jbe 0x420549
  4204cd:	pop    es
  4204ce:	dec    ebx
  4204cf:	int    0x82
  4204d1:	adc    ebx,edi
  4204d3:	sub    eax,0xd3599a00
  4204d8:	and    al,BYTE PTR [eax-0x47]
  4204db:	and    BYTE PTR [ebx+0x61],bl
  4204de:	aas    
  4204df:	ret    
  4204e0:	pop    ebp
  4204e1:	das    
  4204e2:	(bad)  
  4204e3:	test   BYTE PTR [ebx],0xf1
  4204e6:	mul    eax
  4204e8:	pop    si
  4204ea:	mov    bh,BYTE PTR [eax+0x307ca37]
  4204f0:	and    al,0xb9
  4204f2:	retf   
  4204f3:	inc    edx
  4204f4:	pop    esp
  4204f5:	or     DWORD PTR [ebx+0x36],0xb28830b2
  4204fc:	mov    dh,BYTE PTR [esi]
  4204fe:	arpl   WORD PTR [edi+0x18],cx
  420501:	inc    esi
  420502:	sbb    esi,DWORD PTR [eax]
  420504:	pop    edi
  420505:	test   DWORD PTR [ecx],ebx
  420507:	pop    ebx
  420508:	gs push ebp
  42050a:	in     al,0x75
  42050c:	pop    ebp
  42050d:	adc    ebp,DWORD PTR [esi-0x2b]
  420510:	inc    eax
  420511:	mov    ebp,0x46490442
  420516:	ret    
  420517:	push   eax
  420518:	jecxz  0x42049f
  42051a:	dec    BYTE PTR ds:0x404bbd26
  420520:	xchg   ebx,eax
  420521:	jb     0x4204ca
  420523:	dec    ecx
  420524:	out    dx,eax
  420525:	rcr    DWORD PTR [ecx-0x65],0x44
  420529:	mov    WORD PTR [esp+ebx*8-0x1a],?
  42052d:	fild   QWORD PTR [eax-0x6d]
  420530:	xor    ah,bl
  420532:	push   0xffffffdc
  420534:	jno    0x4204db
  420536:	dec    edx
  420537:	xor    eax,DWORD PTR [ecx+0x617ddbf9]
  42053d:	bound  esi,QWORD PTR [ebx+edx*8+0x78]
  420541:	add    dl,BYTE PTR [edx]
  420543:	loope  0x4204fb
  420545:	clc    
  420546:	mov    esi,DWORD PTR [esi]
  420548:	push   edx
  420549:	cld    
  42054a:	jg     0x420563
  42054c:	inc    eax
  42054d:	ficom  WORD PTR [esi]
  42054f:	jp     0x4204e0
  420551:	sbb    al,0x51
  420553:	shl    BYTE PTR [ebx],cl
  420555:	xor    bl,BYTE PTR [esi]
  420557:	xchg   ebp,eax
  420558:	jno    0x42054f
  42055a:	inc    eax
  42055b:	(bad)  
  42055c:	pop    ebp
  42055d:	mov    ecx,0x91fb93b7
  420562:	mov    edi,0x76a0eba4
  420567:	sub    dh,ch
  420569:	pop    ecx
  42056a:	jb     0x420515
  42056c:	add    BYTE PTR [ebx+0x6f],dh
  42056f:	xor    al,BYTE PTR [ebp-0x1312b5d6]
  420575:	sar    BYTE PTR [ebx-0x4ad5e2bb],1
  42057b:	push   es
  42057c:	push   0x59
  42057e:	inc    edi
  42057f:	mov    esi,0x40a343a4
  420584:	add    eax,0xd50c4bf0
  420589:	daa    
  42058a:	cld    
  42058b:	lods   al,BYTE PTR ds:[esi]
  42058c:	frstor [ecx+0x5988e06e]
  420592:	pop    ebx
  420593:	pop    esi
  420594:	pop    ss
  420595:	sbb    eax,0xc3a7a09d
  42059a:	dec    edx
  42059b:	lock push eax
  42059d:	push   ss
  42059e:	retf   0x6233
  4205a1:	push   0x48cd45ff
  4205a6:	ret    
  4205a7:	gs popf 
  4205a9:	add    dl,al
  4205ab:	cmp    DWORD PTR [ebx-0x2c],ebp
  4205ae:	mov    ch,BYTE PTR [eax+0x7b]
  4205b1:	mov    edi,0x69cfd64f
  4205b6:	(bad)  
  4205b7:	mov    al,0xfa
  4205b9:	leave  
  4205ba:	lods   al,BYTE PTR ds:[esi]
  4205bb:	fst    DWORD PTR [eax+0x59]
  4205be:	shl    ebx,1
  4205c0:	into   
  4205c1:	stos   BYTE PTR es:[di],al
  4205c3:	lahf   
  4205c4:	stos   DWORD PTR es:[edi],eax
  4205c5:	mov    ecx,DWORD PTR [edx+0x6]
  4205c8:	sbb    eax,0xad0b06d4
  4205cd:	xchg   edi,eax
  4205ce:	int3   
  4205cf:	mov    eax,0xb270585e
  4205d4:	pop    ebx
  4205d5:	jae    0x420625
  4205d7:	sar    DWORD PTR ds:0x5da7668e,1
  4205dd:	jmp    0x6d11:0x1766af9
  4205e4:	into   
  4205e5:	push   edi
  4205e6:	jns    0x42059a
  4205e8:	sbb    ecx,0x671a4f20
  4205ee:	aad    0x2
  4205f0:	push   esp
  4205f1:	fwait
  4205f2:	add    eax,0xd3410554
  4205f7:	push   edx
  4205f8:	xor    BYTE PTR [ebp+0x75ce82cc],dh
  4205fe:	dec    ebx
  420600:	es inc esi
  420602:	pop    eax
  420603:	xor    dh,dh
  420605:	sar    BYTE PTR [edi],cl
  420607:	or     al,0x6d
  420609:	push   esp
  42060a:	dec    edx
  42060b:	aaa    
  42060c:	mov    bl,0x7a
  42060e:	call   0x6ec9:0x4df0ddbd
  420615:	addr16 pop edx
  420617:	push   ecx
  420618:	in     al,dx
  420619:	outs   dx,DWORD PTR ds:[esi]
  42061a:	and    dl,dl
  42061c:	add    DWORD PTR [ebx-0x6015c7ad],0xbc846741
  420626:	or     DWORD PTR [edi+0x78],esi
  420629:	ins    DWORD PTR es:[edi],dx
  42062a:	sub    esi,DWORD PTR [eax]
  42062c:	jmp    DWORD PTR [edi-0x268c1269]
  420632:	push   sp
  420634:	pop    ebp
  420635:	cwde   
  420636:	xchg   DWORD PTR [esp+edx*4],edx
  420639:	mov    bh,0xa3
  42063b:	loope  0x4205d8
  42063d:	loope  0x4205f4
  42063f:	rcl    al,cl
  420641:	mov    ebx,0x861fa826
  420646:	dec    edx
  420647:	call   FWORD PTR [eax-0x3b0e5dc9]
  42064d:	in     al,dx
  42064e:	mov    ecx,ss
  420650:	mov    ecx,0x5fac0c8
  420655:	sbb    al,0xa4
  420657:	push   edx
  420658:	jecxz  0x4205fc
  42065a:	cmp    BYTE PTR [edx+0x4359c947],0x4e
  420661:	cmp    BYTE PTR [edx+0x41],al
  420664:	cmp    eax,DWORD PTR [ebp+0x4b]
  420667:	mov    DWORD PTR ds:0x451e1d47,0x5035645d
  420671:	mov    al,ds:0x8d4552a6
  420676:	mov    eax,ds:0x691c502f
  42067b:	mov    edx,0x508b1176
  420680:	push   edx
  420681:	iret   
  420682:	cs aam 0xdc
  420685:	push   ecx
  420686:	or     eax,0x4aa1d29d
  42068b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42068c:	out    0x92,eax
  42068e:	sub    BYTE PTR [edi-0x2d3b4421],ah
  420694:	mov    ds:0xc7ef109b,al
  420699:	sahf   
  42069a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42069b:	ret    
  42069c:	pop    ebp
  42069d:	xchg   ebp,eax
  42069e:	push   eax
  42069f:	jae    0x42062e
  4206a1:	ins    BYTE PTR es:[edi],dx
  4206a2:	sahf   
  4206a3:	jl     0x4206f2
  4206a5:	pop    ecx
  4206a6:	and    al,0x80
  4206a8:	retf   
  4206a9:	pop    edx
  4206aa:	pop    edi
  4206ab:	sar    DWORD PTR [ecx-0x654fb49c],0x96
  4206b2:	imul   ecx
  4206b4:	call   0xbb15059c
  4206b9:	jno    0x42072c
  4206bb:	xchg   BYTE PTR [ebx+ebx*4],dh
  4206be:	sub    cl,ah
  4206c0:	pop    ebp
  4206c1:	adc    eax,0x856b7d9d
  4206c6:	fwait
  4206c7:	(bad)  
  4206c8:	(bad)  
  4206c9:	pop    ecx
  4206ca:	pop    esp
  4206cb:	aam    0x69
  4206cd:	xor    cl,bl
  4206cf:	sbb    eax,0x15564d08
  4206d4:	cmc    
  4206d5:	daa    
  4206d6:	repnz cmp ah,BYTE PTR [edi-0x3f790d07]
  4206dd:	pop    ecx
  4206de:	jg     0x42073b
  4206e0:	pushf  
  4206e1:	mov    edx,0x4438d74b
  4206e6:	dec    ebx
  4206e7:	cdq    
  4206e8:	mov    esi,0x640416e3
  4206ed:	dec    ebp
  4206ee:	jnp    0x4206c3
  4206f0:	and    BYTE PTR gs:[esi*8+0x3f7fe5e1],al
  4206f8:	pop    ebp
  4206f9:	xchg   esi,eax
  4206fa:	adc    cl,dl
  4206fc:	retf   
  4206fd:	adc    BYTE PTR [ebx],0x9e
  420700:	int3   
  420701:	push   ebp
  420702:	dec    edx
  420703:	mov    bl,0x93
  420705:	xchg   edi,eax
  420706:	mov    ds:0xe2ad7695,al
  42070b:	loopne 0x420743
  42070d:	scas   eax,DWORD PTR es:[edi]
  42070e:	retf   0x1848
  420711:	shl    BYTE PTR [ecx+0x27345dbf],cl
  420717:	or     eax,ecx
  420719:	or     eax,0xe941ace2
  42071e:	jne    0x4206f3
  420720:	sbb    ch,BYTE PTR [edi+0x1778f71b]
  420726:	adc    al,0x83
  420728:	outs   dx,DWORD PTR ds:[esi]
  420729:	repz repz inc ebx
  42072c:	mov    bl,0xb9
  42072e:	push   es
  42072f:	mov    bh,0xdb
  420731:	sahf   
  420732:	mov    esp,0xe7e8abd2
  420737:	sbb    DWORD PTR [eax+0x5dde1c29],0x4064ebfd
  420741:	rcr    dl,1
  420743:	or     al,0xf6
  420745:	pop    eax
  420746:	test   al,0x1c
  420748:	std    
  420749:	rdtsc  
  42074b:	sub    BYTE PTR [esi+0x5f70f685],dl
  420751:	jne    0x4207c3
  420753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420754:	sbb    eax,0xbcd98863
  420759:	xchg   ebp,eax
  42075a:	test   eax,0x92e59de
  42075f:	rol    dh,cl
  420761:	jae    0x42076f
  420763:	add    ah,BYTE PTR [edi+ebp*8+0x4a]
  420767:	sub    al,0x2
  420769:	scas   al,BYTE PTR es:[edi]
  42076a:	div    cl
  42076c:	dec    edi
  42076d:	mov    dh,0xee
  42076f:	shl    BYTE PTR [ebx+0x448ed12a],cl
  420775:	pop    ebx
  420776:	aas    
  420777:	xchg   ebx,eax
  420778:	pop    ecx
  420779:	in     al,0x73
  42077b:	or     BYTE PTR ds:0xd9e3e8c5,bl
  420781:	ja     0x4207b5
  420783:	sar    BYTE PTR [edx+0x2e],cl
  420786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420787:	cmp    eax,DWORD PTR [ecx]
  420789:	inc    ebp
  42078a:	and    DWORD PTR [ecx+0x4c086c5d],0x2c82196d
  420794:	pop    edx
  420795:	pop    ecx
  420796:	push   ebx
  420797:	push   edx
  420798:	or     bl,dh
  42079a:	fcomi  st,st(7)
  42079c:	out    dx,al
  42079d:	test   al,0x4a
  42079f:	shr    BYTE PTR cs:[edi-0x63967ba6],cl
  4207a6:	call   0xaa1e:0x29b78fd3
  4207ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207ae:	popa   
  4207af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207b0:	xor    ch,BYTE PTR [edi]
  4207b2:	push   esi
  4207b3:	mov    ?,WORD PTR [edi-0x7fec6ef6]
  4207b9:	sar    DWORD PTR [eax+0x13],0xad
  4207bd:	pop    ecx
  4207be:	pop    eax
  4207bf:	or     bl,BYTE PTR [edi-0x2]
  4207c2:	cmp    cl,BYTE PTR [ebx-0x7fbb1d30]
  4207c8:	fsub   QWORD PTR [edx+0x40]
  4207cb:	xor    BYTE PTR [eax-0x660e354d],bl
  4207d1:	int3   
  4207d2:	mov    ecx,0xb8774e1b
  4207d7:	ret    
  4207d8:	push   edx
  4207d9:	mov    dh,0x22
  4207db:	ds (bad) 
  4207dd:	lods   al,BYTE PTR ds:[esi]
  4207de:	mov    edx,0x4b6e9233
  4207e3:	dec    esp
  4207e4:	pop    ss
  4207e5:	adc    ebp,DWORD PTR [ebp-0x23663ad7]
  4207eb:	ror    BYTE PTR [edi+0x1c2abb8f],cl
  4207f1:	lahf   
  4207f2:	int3   
  4207f3:	loopne 0x420851
  4207f5:	popa   
  4207f6:	mov    ch,0x5e
  4207f8:	mov    edi,0x7df5df9a
  4207fd:	dec    esi
  4207fe:	nop
  4207ff:	rcr    BYTE PTR [ecx+0x25aa0a7c],cl
  420805:	sahf   
  420806:	ja     0x42084d
  420808:	in     eax,dx
  420809:	stc    
  42080a:	and    bl,dl
  42080c:	ret    
  42080d:	pop    ecx
  42080e:	scas   al,BYTE PTR es:[edi]
  42080f:	mov    esp,0xc24fd951
  420814:	rcr    BYTE PTR [esi+0x69],1
  420817:	outs   dx,BYTE PTR ds:[esi]
  420818:	imul   ebp,DWORD PTR [ecx-0xa27ed2e],0x56
  42081f:	ins    DWORD PTR es:[edi],dx
  420820:	pop    ebp
  420821:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420822:	cdq    
  420823:	xchg   edx,eax
  420824:	mov    ecx,0x752d0411
  420829:	push   ebp
  42082a:	cmp    BYTE PTR [ecx],ah
  42082c:	pop    ecx
  42082d:	sbb    DWORD PTR [eax+0x6f],ecx
  420830:	or     DWORD PTR [edi+0x6a5d7fe2],esp
  420836:	inc    esp
  420837:	pop    eax
  420838:	cmp    eax,0xd3ef62d1
  42083d:	pop    ecx
  42083e:	push   ebx
  42083f:	or     al,0xe8
  420841:	arpl   WORD PTR [esi],di
  420843:	pop    ss
  420844:	xchg   ebx,eax
  420845:	push   cs
  420846:	dec    ebx
  420847:	add    DWORD PTR [ebp-0x6ebeb00e],edx
  42084d:	in     al,dx
  42084e:	test   eax,0x81d996d2
  420853:	dec    ebx
  420854:	mov    dh,BYTE PTR [ecx-0x748ea1ed]
  42085a:	ss (bad) 
  42085c:	pop    ebp
  42085d:	fsubr  QWORD PTR [esi+0x42]
  420860:	and    edi,edx
  420862:	rcl    edx,0x34
  420865:	mov    edi,0x2e602063
  42086a:	fucomp st(5)
  42086c:	test   DWORD PTR ds:0xbd78d2a2,edx
  420872:	jmp    0x6840b671
  420877:	rcl    DWORD PTR [ebp+0x57],cl
  42087a:	adc    eax,0x58304497
  42087f:	mov    dl,0x56
  420881:	add    ecx,DWORD PTR [esi-0x56]
  420884:	or     ebx,edx
  420886:	pop    edx
  420887:	mov    al,ds:0xd778f5cf
  42088c:	adc    edi,DWORD PTR [ebp-0x663d6cef]
  420892:	(bad)  [edi]
  420894:	jg     0x4208dd
  420896:	das    
  420897:	mov    dl,0x1b
  420899:	mov    al,0x4a
  42089b:	cmp    DWORD PTR [eax-0x50],eax
  42089e:	loope  0x4208e5
  4208a0:	sub    eax,0x63da3746
  4208a5:	mov    ah,0x10
  4208a7:	sub    eax,0x6df4280
  4208ac:	pop    ecx
  4208ad:	or     eax,0x51d5151
  4208b2:	hlt    
  4208b3:	sbb    eax,0xef5abc1d
  4208b8:	test   BYTE PTR [eax+0x27e7d591],ch
  4208be:	fst    DWORD PTR [edx+0x4ec0189b]
  4208c4:	pop    ebp
  4208c5:	in     al,dx
  4208c6:	dec    ecx
  4208c7:	xchg   ebx,eax
  4208c8:	daa    
  4208c9:	and    al,BYTE PTR [edx+esi*8+0x5f]
  4208cd:	pop    edx
  4208ce:	jg     0x4208d2
  4208d0:	cmp    BYTE PTR ds:0xc62e6e85,al
  4208d6:	mov    al,0x70
  4208d8:	stos   BYTE PTR es:[edi],al
  4208d9:	pop    ds
  4208da:	dec    ebx
  4208db:	js     0x4208b0
  4208dd:	pop    ss
  4208de:	jmp    0x535d4750
  4208e3:	rol    BYTE PTR [edx+ecx*2],cl
  4208e6:	dec    esp
  4208e7:	mov    al,0xaf
  4208e9:	mov    al,ds:0xd85dc29b
  4208ee:	mov    ?,WORD PTR [edi]
  4208f0:	mov    esi,0x70408acc
  4208f5:	pop    ecx
  4208f6:	xor    al,0xdd
  4208f8:	mov    dl,0xde
  4208fa:	fcomi  st,st(6)
  4208fc:	test   eax,0x2d352d45
  420901:	inc    esp
  420902:	cmc    
  420903:	xchg   esp,eax
  420904:	xor    DWORD PTR [esi+0x4],esp
  420907:	mov    ch,0x18
  420909:	dec    ebx
  42090a:	dec    ecx
  42090b:	rcl    BYTE PTR [ebx+eax*4-0x76],cl
  42090f:	mov    al,0x42
  420911:	sbb    ebp,esp
  420913:	mov    ebx,DWORD PTR [ebp-0x1f]
  420916:	lds    eax,FWORD PTR [edx+0x7e]
  420919:	sbb    dl,BYTE PTR [eax]
  42091b:	sti    
  42091c:	(bad)  
  42091d:	pop    esi
  42091e:	ja     0x4208a6
  420920:	scas   eax,DWORD PTR es:[edi]
  420921:	mov    esi,0x81a292a0
  420926:	jecxz  0x42090a
  420928:	pop    ebp
  420929:	enter  0xc53b,0x39
  42092d:	sub    DWORD PTR [ecx+ecx*2+0x9],edx
  420931:	pop    ecx
  420932:	xor    dh,BYTE PTR [edx-0x79]
  420935:	fst    st(5)
  420937:	add    BYTE PTR [esi-0x7d],cl
  42093a:	call   0x5602:0xe17e23e7
  420941:	dec    ecx
  420942:	ins    DWORD PTR es:[edi],dx
  420943:	retf   
  420944:	loop   0x420924
  420946:	mov    edx,0x110d9a29
  42094b:	int3   
  42094c:	enter  0x8d88,0xf9
  420950:	test   BYTE PTR [eax-0x54],0x92
  420954:	mov    ch,0xee
  420956:	add    al,0x3c
  420958:	pop    ebp
  420959:	xor    al,0x26
  42095b:	aaa    
  42095c:	add    eax,0x5cea729a
  420961:	pop    ecx
  420962:	inc    ebp
  420963:	and    BYTE PTR cs:[ecx+0x7c],al
  420967:	or     DWORD PTR ds:0x6ecce60f,edx
  42096d:	mov    bl,BYTE PTR [eax+0x5798f60]
  420973:	in     al,0xb5
  420975:	push   esi
  420976:	lods   al,BYTE PTR ds:[esi]
  420977:	sar    DWORD PTR [eax-0x23698116],cl
  42097d:	adc    bl,BYTE PTR [esi+ebp*4]
  420980:	jle    0x4209fa
  420982:	dec    ebx
  420983:	cmc    
  420984:	mov    ds:0x497c7aeb,eax
  420989:	push   edx
  42098a:	pop    ss
  42098b:	shl    BYTE PTR [ecx+0x2d621349],cl
  420991:	loopne 0x42099c
  420993:	mov    BYTE PTR [ebp+0x53],bl
  420996:	clc    
  420997:	inc    ebp
  420998:	repnz xchg ebx,ebp
  42099b:	xchg   DWORD PTR [ecx+0x6a6a2358],esi
  4209a1:	ffreep st(0)
  4209a3:	cmc    
  4209a4:	ins    DWORD PTR es:[edi],dx
  4209a5:	add    DWORD PTR [eax-0x7a6ea2ef],0x26fb3399
  4209af:	jg     0x42099f
  4209b1:	pop    esi
  4209b2:	push   0xe272ab74
  4209b7:	inc    edx
  4209b8:	push   ds
  4209b9:	sub    esi,DWORD PTR [ecx+0x130f5d1e]
  4209bf:	stos   BYTE PTR es:[edi],al
  4209c0:	adc    BYTE PTR [eax+0x4a7f0bfd],bh
  4209c6:	(bad)  
  4209c7:	sar    BYTE PTR [ecx+0x6230cce0],cl
  4209cd:	or     BYTE PTR [edx+0x26],bl
  4209d0:	pop    ebp
  4209d1:	jae    0x420a45
  4209d3:	pop    edi
  4209d4:	adc    dl,BYTE PTR [eax]
  4209d6:	cs pushf 
  4209d8:	dec    edx
  4209d9:	fs or  dh,dh
  4209dc:	fs pop eax
  4209de:	outs   dx,BYTE PTR ds:[esi]
  4209df:	push   ebp
  4209e0:	mov    al,ds:0xbeba99cc
  4209e5:	nop
  4209e6:	push   eax
  4209e7:	repz dec esp
  4209e9:	stc    
  4209ea:	adc    DWORD PTR [edx],esi
  4209ec:	retf   
  4209ed:	jb     0x420a1c
  4209ef:	in     eax,dx
  4209f0:	jmp    0xb2e2:0x3cda8152
  4209f7:	mov    ah,0x63
  4209f9:	push   cs
  4209fa:	fwait
  4209fb:	mov    esi,0x44203b6e
  420a00:	cmp    DWORD PTR [esi-0x3e],esp
  420a03:	ret    
  420a04:	add    eax,0xf3dca5c2
  420a09:	hlt    
  420a0a:	add    dl,BYTE PTR [edx+0x7caf79f4]
  420a10:	add    BYTE PTR [ebx+0x5e5cfa4a],ah
  420a16:	jae    0x4209b1
  420a18:	mov    edx,0x23d22494
  420a1d:	icebp  
  420a1e:	jmp    0x5d88:0xf7500d70
  420a25:	shr    eax,1
  420a27:	sbb    BYTE PTR [ebx*2+0x462a46e5],cl
  420a2e:	add    BYTE PTR [ebx-0x39fa3477],dh
  420a34:	xchg   DWORD PTR [ecx],ecx
  420a36:	aas    
  420a37:	and    BYTE PTR [edi+eax*4],bl
  420a3a:	mov    ecx,0xff9f8cb
  420a3f:	push   edx
  420a40:	(bad)  
  420a41:	outs   dx,BYTE PTR ds:[esi]
  420a42:	(bad)  
  420a44:	xchg   ecx,eax
  420a45:	pop    esi
  420a46:	sbb    DWORD PTR [edx],edx
  420a48:	gs loop 0x420a64
  420a4b:	bound  edx,QWORD PTR [edi-0x3a]
  420a4e:	imul   ebx,eax,0x52
  420a51:	and    eax,0x9805d9b9
  420a56:	sbb    al,0x4a
  420a58:	and    ah,0x83
  420a5b:	sar    BYTE PTR [eax+0x3a382024],cl
  420a61:	leave  
  420a62:	std    
  420a63:	inc    eax
  420a64:	pop    ebp
  420a65:	jmp    0xe967092d
  420a6a:	inc    eax
  420a6b:	dec    ebx
  420a6c:	fisub  WORD PTR [ebp-0x7f9c34e9]
  420a72:	inc    edx
  420a73:	push   es
  420a74:	pop    ebp
  420a75:	cwde   
  420a76:	std    
  420a77:	sbb    al,0x42
  420a79:	cwde   
  420a7a:	dec    ebx
  420a7b:	push   cs
  420a7c:	mov    dh,0x7b
  420a7e:	inc    edx
  420a7f:	push   esi
  420a80:	sti    
  420a81:	pop    esp
  420a82:	pushf  
  420a83:	rcr    BYTE PTR [ecx],1
  420a85:	sub    eax,0x141ed2e6
  420a8a:	mov    bh,0xf3
  420a8c:	mov    DWORD PTR fs:[ebx+0x7e565d75],edx
  420a93:	sub    eax,0x9a83c5a6
  420a98:	in     eax,0x58
  420a9a:	repz pop edx
  420a9c:	adc    BYTE PTR [esi+ebx*2],0x4c
  420aa0:	shl    BYTE PTR [ebp-0x2fa247a7],0x78
  420aa7:	adc    eax,0x9ea8a760
  420aac:	aad    0x59
  420aae:	and    eax,0xaf6df0d1
  420ab3:	mov    al,0x82
  420ab5:	mov    ecx,0x6e94404a
  420aba:	mov    edx,0xb7b5748c
  420abf:	rol    BYTE PTR [eax+0x21311bf9],cl
  420ac5:	jo     0x420a61
  420ac7:	jns    0x420b26
  420ac9:	retf   0x9cab
  420acc:	adc    edi,DWORD PTR [eax+0x461e65dd]
  420ad2:	jb     0x420b02
  420ad4:	jl     0x420ae1
  420ad6:	in     al,0xa3
  420ad8:	xchg   DWORD PTR [ecx+0x5f],edx
  420adb:	fstp   QWORD PTR [ebp-0x61]
  420ade:	inc    esp
  420adf:	pop    esp
  420ae0:	popf   
  420ae1:	sti    
  420ae2:	or     ebx,edi
  420ae4:	test   al,0x5b
  420ae6:	cs sub eax,0x76282d30
  420aec:	popf   
  420aed:	scas   eax,DWORD PTR es:[edi]
  420aee:	cmp    cl,BYTE PTR [eax+0x35fb0d51]
  420af4:	(bad)  
  420af5:	out    0xca,al
  420af7:	inc    esi
  420af8:	sahf   
  420af9:	pop    eax
  420afa:	push   esi
  420afb:	aad    0x26
  420afd:	daa    
  420afe:	mov    ds:0x1509ad27,al
  420b03:	bound  eax,QWORD PTR [ebx+0x5e672d04]
  420b09:	mov    cl,0x4a
  420b0b:	or     DWORD PTR [edi],ebx
  420b0d:	mov    ds:0x5337840f,al
  420b12:	cmp    dl,dl
  420b14:	xchg   edi,eax
  420b15:	dec    edx
  420b16:	xchg   BYTE PTR [edi+0x233ac375],bl
  420b1c:	pop    eax
  420b1d:	xor    eax,0x231fa957
  420b22:	dec    ebx
  420b23:	pop    ebp
  420b24:	in     eax,0xf9
  420b26:	add    DWORD PTR [edx+0x55],eax
  420b29:	pop    edx
  420b2a:	fmul   DWORD PTR [ecx+0x4cd1a79c]
  420b30:	ficom  DWORD PTR [esi-0x2a1adc23]
  420b36:	mov    eax,ds:0x5e3956cd
  420b3b:	imul   ebx,DWORD PTR [edi+ecx*4],0x402f512b
  420b42:	retf   0xcf82
  420b45:	pop    ecx
  420b46:	repnz xlat BYTE PTR ds:[ebx]
  420b48:	push   cs
  420b49:	dec    ecx
  420b4a:	(bad)  
  420b4b:	je     0x420b9a
  420b4d:	and    BYTE PTR [ebx+0x6a],al
  420b50:	fistp  QWORD PTR [edx+0x59939678]
  420b56:	dec    DWORD PTR [ebp-0x5f40e05a]
  420b5c:	(bad)
  420b5f:	jecxz  0x420bbe
  420b61:	dec    ebp
  420b62:	repnz cld 
  420b64:	jge    0x420b83
  420b66:	sti    
  420b67:	or     eax,0x4f465a6b
  420b6c:	icebp  
  420b6d:	stos   DWORD PTR es:[edi],eax
  420b6e:	int3   
  420b6f:	ins    DWORD PTR es:[edi],dx
  420b70:	int    0xef
  420b72:	or     esi,DWORD PTR [ebp+0x56]
  420b75:	shl    DWORD PTR [edx],0x9
  420b78:	ins    DWORD PTR es:[edi],dx
  420b79:	call   0xfccb47e8
  420b7e:	jo     0x420b53
  420b80:	mov    esp,0x70c8245f
  420b85:	sti    
  420b86:	mov    ds:0x31635d1f,eax
  420b8b:	push   eax
  420b8c:	aaa    
  420b8d:	dec    edx
  420b8e:	mov    ah,0x24
  420b90:	sti    
  420b91:	pop    ebp
  420b92:	add    al,0x1d
  420b94:	cmp    eax,0xe592c1e4
  420b99:	or     al,0xfe
  420b9b:	cdq    
  420b9c:	pop    ebp
  420b9d:	and    al,0xdc
  420b9f:	and    DWORD PTR ds:0xda8a5cb6,0x5a
  420ba6:	and    al,0x71
  420ba8:	cld    
  420ba9:	fsub   QWORD PTR [edx+edx*2]
  420bac:	std    
  420bad:	cdq    
  420bae:	stc    
  420baf:	dec    ebp
  420bb0:	pop    ebp
  420bb1:	mov    dl,0x18
  420bb3:	cmp    BYTE PTR [esi+0x26],0x32
  420bb7:	mov    ah,0x23
  420bb9:	mov    ah,0xa4
  420bbb:	shl    cl,cl
  420bbd:	dec    ecx
  420bbe:	mov    ebp,0xc3710e7d
  420bc3:	retf   0xad52
  420bc6:	shl    BYTE PTR [esi],0x17
  420bc9:	adc    DWORD PTR [edx],edi
  420bcb:	push   edx
  420bcc:	xlat   BYTE PTR ds:[ebx]
  420bcd:	js     0x420be3
  420bcf:	leave  
  420bd0:	(bad)  
  420bd1:	mov    eax,ds:0x41d078ca
  420bd6:	imul   edx,DWORD PTR [ebx+0x382e2651],0x5d
  420bdd:	(bad)  
  420bde:	imul   DWORD PTR [esp+eiz*8+0x6751f3d5]
  420be5:	pop    ecx
  420be6:	add    eax,0x526b95f3
  420beb:	(bad)  
  420bec:	aam    0x61
  420bee:	dec    ebx
  420bef:	inc    esi
  420bf0:	mov    dh,0xa5
  420bf2:	test   eax,0x1976f722
  420bf7:	rcl    BYTE PTR [ecx+0x27213678],cl
  420bfd:	in     al,dx
  420bfe:	loop   0x420c6a
  420c00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c01:	xchg   ebx,eax
  420c02:	dec    edx
  420c03:	or     BYTE PTR [edx],dh
  420c05:	jge    0x420c43
  420c07:	or     dl,dl
  420c09:	in     al,dx
  420c0a:	push   ds
  420c0b:	inc    ebp
  420c0c:	ret    0xdbb9
  420c0f:	inc    BYTE PTR [ebx-0x3f]
  420c12:	gs repnz mov ah,0xcc
  420c16:	shl    DWORD PTR [esi+0xd],1
  420c19:	jb     0x420c31
  420c1b:	imul   BYTE PTR [ebp+0x3d49bb1c]
  420c21:	cmc    
  420c22:	dec    edx
  420c23:	call   0xbac6:0xedb03201
  420c2a:	mov    ds:0xcf44a4d2,al
  420c2f:	xor    BYTE PTR [ebp-0x30],dl
  420c32:	xchg   esi,eax
  420c33:	mov    edi,0xf055f4ba
  420c38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c39:	mov    ecx,DWORD PTR [eax+edi*8]
  420c3c:	pop    edi
  420c3d:	jmp    0xd63d:0x18795a1e
  420c44:	cmp    dh,BYTE PTR [ebx-0x21]
  420c47:	xchg   DWORD PTR [esi+0x75df0ed8],edi
  420c4d:	mov    ecx,ecx
  420c4f:	outs   dx,BYTE PTR ds:[esi]
  420c50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c51:	push   cs
  420c52:	push   esi
  420c53:	mov    al,ds:0x7cdb750e
  420c58:	xor    ecx,DWORD PTR [esi-0x581b2f03]
  420c5e:	lods   al,BYTE PTR ds:[esi]
  420c5f:	rcl    BYTE PTR [ecx],cl
  420c61:	or     al,BYTE PTR [eax+0x40]
  420c64:	sub    BYTE PTR [esi+0x4a],0x46
  420c68:	pop    ebp
  420c69:	mov    ch,0x1b
  420c6b:	mov    edx,0xff277c18
  420c70:	int    0x59
  420c72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c73:	mov    ch,0xd6
  420c75:	mov    edx,0x72f64599
  420c7a:	dec    ebx
  420c7b:	arpl   WORD PTR [ecx],sp
  420c7d:	shl    esi,cl
  420c7f:	fdivr  QWORD PTR [ecx+ecx*2+0x43]
  420c83:	rol    BYTE PTR [ebp+0x1f9512eb],cl
  420c89:	pop    eax
  420c8a:	fucom  st(3)
  420c8c:	pop    ebp
  420c8d:	dec    edx
  420c8e:	lods   eax,DWORD PTR ds:[esi]
  420c8f:	dec    esi
  420c90:	jae    0x420c12
  420c92:	pop    esp
  420c93:	push   eax
  420c94:	dec    edi
  420c95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c96:	pop    ebp
  420c97:	ror    BYTE PTR [ebx-0x7e65ed42],cl
  420c9d:	into   
  420c9e:	and    eax,0x5c3b5328
  420ca3:	ret    0xe4ae
  420ca6:	push   edx
  420ca7:	mov    dl,0x4e
  420ca9:	(bad)
  420cae:	pushf  
  420caf:	test   eax,0x2ee8d638
  420cb4:	fmul   QWORD PTR [ebp+0x4a]
  420cb7:	mov    ecx,0x21b6bd03
  420cbc:	shl    BYTE PTR [esi-0x5a3f7b76],1
  420cc2:	shr    esp,1
  420cc4:	call   edi
  420cc6:	rcl    dl,1
  420cc8:	aas    
  420cc9:	mov    ebx,0x4d0fba4c
  420cce:	dec    ebx
  420ccf:	cmp    eax,0x27f1047c
  420cd4:	push   eax
  420cd5:	cmp    al,0xbf
  420cd7:	rcl    ah,cl
  420cd9:	ins    DWORD PTR es:[edi],dx
  420cda:	mov    esp,DWORD PTR [edi+0x42]
  420cdd:	xchg   ebp,eax
  420cde:	repnz adc esp,DWORD PTR [ecx]
  420ce1:	pop    esp
  420ce2:	das    
  420ce3:	add    ah,BYTE PTR [ebx+0x55]
  420ce6:	dec    ebx
  420ce7:	leave  
  420ce8:	xchg   ecx,eax
  420ce9:	int    0xe3
  420ceb:	lea    esp,[edi+0x59]
  420cee:	cmp    bl,bl
  420cf0:	or     BYTE PTR [ebp-0x36],bh
  420cf3:	mov    dh,0xac
  420cf5:	cmp    DWORD PTR [ecx-0x2a],eax
  420cf8:	cmp    al,0x4f
  420cfa:	dec    ebx
  420cfb:	dec    esi
  420cfc:	(bad)  
  420cfd:	je     0x420cef
  420cff:	iret   
  420d00:	fstp   QWORD PTR [ecx+0x9]
  420d03:	add    BYTE PTR [ebx-0x17],dh
  420d06:	add    ebp,DWORD PTR [edx-0x14]
  420d09:	nop
  420d0a:	dec    edx
  420d0b:	ficomp WORD PTR [edi+0x5d]
  420d0e:	mov    eax,ds:0x3c943cf9
  420d13:	mov    edx,0x9df55962
  420d18:	mov    dl,0x16
  420d1a:	add    esi,DWORD PTR [edi]
  420d1c:	pop    ecx
  420d1d:	lds    ecx,FWORD PTR [edx+0x7a]
  420d20:	aaa    
  420d21:	mov    ch,BYTE PTR [ebp+0x29]
  420d24:	jae    0x420cbb
  420d26:	pop    edi
  420d27:	rol    ecx,cl
  420d29:	inc    edi
  420d2a:	or     edx,0x5b0d7321
  420d30:	pop    ebp
  420d31:	xor    BYTE PTR es:[edx+0x39],bl
  420d35:	lea    esi,[ebp-0x4]
  420d38:	ret    
  420d39:	pop    ecx
  420d3a:	lods   al,BYTE PTR ds:[esi]
  420d3b:	mov    fs,WORD PTR [edx+0x62]
  420d3e:	mov    ebp,0x4130e78c
  420d43:	mov    eax,ds:0x24ba766
  420d48:	lahf   
  420d49:	or     BYTE PTR [ebp-0x7f],ch
  420d4c:	and    eax,0x17d7b6ea
  420d51:	xchg   edx,eax
  420d52:	xchg   ebx,eax
  420d53:	rcr    DWORD PTR [ebp+0x7be37259],cl
  420d59:	add    ah,cl
  420d5b:	cmp    edi,DWORD PTR [edi+0x9]
  420d5e:	and    DWORD PTR [ecx+0x3a],edx
  420d61:	and    esp,DWORD PTR [edx+0x49b047a1]
  420d67:	sub    eax,0xd3b21d25
  420d6c:	popf   
  420d6d:	xchg   edx,esp
  420d6f:	ret    0xfe28
  420d72:	add    BYTE PTR [edx+0x19],0xd4
  420d76:	inc    esp
  420d77:	and    BYTE PTR [esi-0x34dfb5c4],ch
  420d7d:	cmp    DWORD PTR [edx+0x3748256b],0xffffffd2
  420d84:	jo     0x420d33
  420d86:	push   0xb492f75d
  420d8b:	add    BYTE PTR [edi+0x2d],ch
  420d8e:	leave  
  420d8f:	cwde   
  420d90:	test   al,0x36
  420d92:	or     ebp,DWORD PTR [ecx]
  420d94:	addr16 or al,0xa2
  420d97:	(bad)  
  420d98:	mov    bl,0x59
  420d9a:	scas   eax,DWORD PTR es:[edi]
  420d9b:	sbb    ebp,DWORD PTR [ebp-0x57]
  420d9e:	or     al,0xb
  420da0:	dec    ecx
  420da1:	inc    edx
  420da2:	gs ret 
  420da4:	outs   dx,DWORD PTR ds:[esi]
  420da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420da6:	vpsadbw ymm3,ymm2,YMMWORD PTR [ecx]
  420daa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dab:	mov    edi,0xd2fdddcd
  420db0:	pop    ds
  420db1:	jb     0x420daf
  420db3:	cli    
  420db4:	xchg   esi,eax
  420db5:	fwait
  420db6:	inc    eax
  420db7:	je     0x420e16
  420db9:	pop    esi
  420dba:	int3   
  420dbb:	out    dx,al
  420dbc:	aaa    
  420dbd:	mov    al,ds:0x47546e74
  420dc2:	scas   eax,DWORD PTR es:[edi]
  420dc3:	loopne 0x420d80
  420dc5:	aas    
  420dc6:	test   edx,edx
  420dc8:	push   ecx
  420dc9:	adc    esp,DWORD PTR [ebx+0x55bee120]
  420dcf:	outs   dx,BYTE PTR ds:[esi]
  420dd0:	es (bad) 
  420dd3:	jg     0x420dfe
  420dd5:	mov    dh,0x4b
  420dd7:	jmp    0x4adb5415
  420ddc:	enter  0xc416,0xd1
  420de0:	push   ds
  420de1:	pop    edx
  420de2:	dec    ebx
  420de3:	ret    0x1b67
  420de6:	test   al,0xa4
  420de8:	mov    edx,0xbfd28fa8
  420ded:	lea    edx,[ecx+0x5eb177f7]
  420df3:	pusha  
  420df4:	daa    
  420df5:	push   edx
  420df6:	pop    esp
  420df7:	lods   eax,DWORD PTR ds:[esi]
  420df8:	les    ebp,FWORD PTR [edi]
  420dfa:	cmp    dl,al
  420dfc:	or     DWORD PTR [eax+eiz*8-0x1ab4e2ee],esp
  420e03:	shl    BYTE PTR [ebp+0x4eb1b88c],cl
  420e09:	(bad)  
  420e0a:	or     eax,DWORD PTR [edx+0x5c]
  420e0d:	outs   dx,DWORD PTR ds:[esi]
  420e0e:	mov    ecx,0x592a0a5d
  420e13:	push   ecx
  420e14:	ins    BYTE PTR es:[edi],dx
  420e15:	push   edi
  420e16:	jae    0x420e49
  420e18:	aam    0x40
  420e1a:	push   eax
  420e1b:	(bad)  
  420e1d:	sbb    esi,edx
  420e1f:	dec    eax
  420e20:	loop   0x420da6
  420e22:	mov    ds:0x4b244c43,al
  420e27:	mov    dh,0xc6
  420e29:	rol    DWORD PTR [ebx-0x16df7734],1
  420e2f:	shl    BYTE PTR [ebx-0x1c],cl
  420e32:	out    0x3,al
  420e34:	stos   BYTE PTR es:[edi],al
  420e35:	sub    bl,BYTE PTR [esi+ebp*4+0x59]
  420e39:	add    ecx,DWORD PTR [edi-0x10]
  420e3c:	pop    ebp
  420e3d:	mov    edi,0x42d4360c
  420e42:	scas   al,BYTE PTR es:[edi]
  420e43:	shr    BYTE PTR [ebx],cl
  420e45:	jae    0x420e89
  420e47:	popf   
  420e48:	mul    DWORD PTR [eax]
  420e4a:	sbb    ecx,DWORD PTR [edi]
  420e4c:	pop    ebp
  420e4d:	aas    
  420e4e:	pop    edi
  420e4f:	aad    0x24
  420e51:	pop    edx
  420e52:	xchg   DWORD PTR [ecx],ebp
  420e54:	add    eax,0x50970e46
  420e59:	gs in  eax,dx
  420e5b:	xchg   DWORD PTR [edi+esi*2+0x51f3414b],esp
  420e62:	stos   DWORD PTR es:[edi],eax
  420e63:	loop   0x420e26
  420e65:	jmp    0x420e7d
  420e67:	fld    QWORD PTR [edi+eax*2]
  420e6a:	push   ax
  420e6c:	mul    BYTE PTR fs:[edi]
  420e6f:	add    DWORD PTR [ebx+0x5d395db5],ebx
  420e75:	arpl   di,ax
  420e77:	aaa    
  420e78:	cmp    al,0x11
  420e7a:	hlt    
  420e7b:	lds    ebp,FWORD PTR [ecx+0x4970bf58]
  420e81:	sub    BYTE PTR [ebp+0x5c8c0e6],ch
  420e87:	scas   al,BYTE PTR es:[edi]
  420e88:	repnz mov bl,0x4a
  420e8b:	dec    esi
  420e8c:	sbb    BYTE PTR [eax],0x54
  420e8f:	(bad)  
  420e90:	mov    ecx,0x1ad2b713
  420e95:	rol    al,1
  420e97:	add    BYTE PTR [si],bl
  420e9a:	add    eax,0x6e9d5c82
  420e9f:	xchg   ecx,eax
  420ea0:	jmp    0x420f1a
  420ea2:	dec    esi
  420ea3:	sar    DWORD PTR [esi+ecx*2-0xd],cl
  420ea7:	fistp  DWORD PTR [ebp+0x0]
  420eaa:	jge    0x420e95
  420eac:	inc    edi
  420ead:	call   0x9198bc91
  420eb2:	xchg   DWORD PTR [eax-0x3d],esi
  420eb5:	outs   dx,BYTE PTR ds:[esi]
  420eb6:	imul   edi,DWORD PTR [edi-0x5f],0xffffff8c
  420eba:	jo     0x420e86
  420ebc:	xchg   ebx,eax
  420ebd:	push   ds
  420ebe:	aaa    
  420ebf:	add    ah,BYTE PTR [eax]
  420ec1:	dec    ebp
  420ec2:	call   0x9705:0x8558d3d2
  420ec9:	inc    esp
  420eca:	loope  0x420ecf
  420ecc:	daa    
  420ecd:	jnp    0x420f21
  420ecf:	dec    esp
  420ed0:	sbb    eax,DWORD PTR [ebp-0x64556d25]
  420ed6:	jmp    0x7e9b5663
  420edb:	or     DWORD PTR [eax],esp
  420edd:	icebp  
  420ede:	sbb    DWORD PTR [esi-0x27dc5acb],0x73
  420ee5:	pop    ecx
  420ee6:	or     al,BYTE PTR [edx-0x3d]
  420ee9:	mov    bl,0xdb
  420eeb:	lds    ebp,FWORD PTR [eax+0x6b]
  420eee:	sar    BYTE PTR [ecx],cl
  420ef0:	dec    edx
  420ef1:	push   edx
  420ef2:	pushf  
  420ef3:	push   edx
  420ef4:	lahf   
  420ef5:	cmp    dh,dl
  420ef7:	cwde   
  420ef8:	push   ebx
  420ef9:	sbb    DWORD PTR [ebx+0x17],ecx
  420efc:	pop    esi
  420efd:	dec    ecx
  420efe:	out    0xf1,eax
  420f00:	addr16 mov al,ds:0xd284
  420f04:	aas    
  420f05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f06:	sbb    al,0xff
  420f08:	mov    BYTE PTR [ebp+ebx*2+0x2d],0xa0
  420f0d:	ror    BYTE PTR [edx-0xc],cl
  420f10:	lods   eax,DWORD PTR ds:[esi]
  420f11:	pop    ebx
  420f12:	xor    al,0xd5
  420f14:	loop   0x420f69
  420f16:	jg     0x420ecb
  420f18:	repnz pop ebx
  420f1a:	jge    0x420ef8
  420f1c:	inc    esi
  420f1d:	and    BYTE PTR [edx+edi*4-0x2e679443],dh
  420f24:	pop    ebp
  420f25:	add    DWORD PTR [ebp+esi*2-0x2b321c6],eax
  420f2c:	call   FWORD PTR [ecx-0x3a]
  420f2f:	xor    ch,BYTE PTR [ebp+0x19]
  420f32:	stos   DWORD PTR es:[edi],eax
  420f33:	and    ch,bl
  420f35:	xchg   ebx,eax
  420f36:	inc    ecx
  420f37:	sub    al,0x46
  420f39:	mov    edx,0x3810364a
  420f3e:	jmp    0x258857ca
  420f43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f44:	test   DWORD PTR [edx],esp
  420f46:	jnp    0x420f66
  420f48:	leave  
  420f49:	in     eax,0x4a
  420f4b:	popf   
  420f4c:	pop    ebx
  420f4d:	fwait
  420f4e:	jge    0x420f28
  420f50:	inc    eax
  420f51:	add    BYTE PTR [ebp-0x2d],dh
  420f54:	in     al,dx
  420f55:	and    DWORD PTR ds:[edi-0x33b6c90c],0xbe7aee5d
  420f60:	mul    DWORD PTR [ebp+0x27]
  420f63:	push   ebp
  420f64:	fstp   QWORD PTR [ecx+0x6d]
  420f67:	inc    BYTE PTR [ecx+0x16]
  420f6a:	xchg   ebp,eax
  420f6b:	fidivr DWORD PTR [ecx]
  420f6d:	adc    al,0x4b
  420f6f:	fild   QWORD PTR [ebp+0x5580dffd]
  420f75:	addr16 add dl,0x73
  420f79:	pop    ecx
  420f7a:	das    
  420f7b:	add    DWORD PTR [esi],ebx
  420f7d:	fcmovne st,st(2)
  420f7f:	xchg   ebp,eax
  420f80:	outs   dx,BYTE PTR ds:[esi]
  420f81:	push   ebx
  420f82:	dec    ebx
  420f83:	sbb    al,0x43
  420f85:	loope  0x420fe5
  420f87:	(bad)  
  420f88:	push   eax
  420f89:	xor    BYTE PTR [ebp-0x2a],0x79
  420f8d:	out    dx,al
  420f8e:	sar    BYTE PTR [edi],0xa6
  420f91:	and    BYTE PTR [ebx+0x76],bh
  420f94:	loope  0x420fdd
  420f96:	inc    edi
  420f97:	push   ebp
  420f98:	jnp    0x420f42
  420f9a:	retf   0x3ff1
  420f9d:	adc    eax,0x47e593e1
  420fa2:	outs   dx,BYTE PTR ds:[esi]
  420fa3:	mov    eax,0xe6514bba
  420fa8:	fld    QWORD PTR [ebx-0x589831af]
  420fae:	and    dl,bl
  420fb0:	fs pop ecx
  420fb2:	dec    eax
  420fb3:	in     al,dx
  420fb4:	jno    0x421005
  420fb6:	pop    edx
  420fb7:	hlt    
  420fb8:	push   0xd5312a59
  420fbd:	iret   
  420fbe:	out    dx,al
  420fbf:	push   edx
  420fc0:	imul   ebp,ebp,0xa3d3dc4a
  420fc6:	mov    al,ds:0xb6982a2d
  420fcb:	int3   
  420fcc:	mov    BYTE PTR [edi],cl
  420fce:	repz xchg esi,eax
  420fd0:	mov    eax,0x9cc2bc19
  420fd5:	push   edx
  420fd6:	sub    eax,0x441050b0
  420fdb:	xchg   edi,eax
  420fdc:	(bad)  
  420fdd:	daa    
  420fde:	retf   
  420fdf:	bound  esp,QWORD PTR ds:0x23d33841
  420fe5:	ret    
  420fe6:	enter  0x4870,0x5d
  420fea:	fidivr DWORD PTR [esi+0x3f4a97fb]
  420ff0:	(bad)  
  420ff2:	xlat   BYTE PTR gs:[ebx]
  420ff4:	mov    al,0xe
  420ff6:	retf   0x86d2
  420ff9:	loopne 0x420f8c
  420ffb:	stos   DWORD PTR es:[edi],eax
  420ffc:	sub    edi,DWORD PTR [esp+eax*4]
  420fff:	mov    esp,0xcd0d52
  421004:	iret   
  421005:	jecxz  0x42101d
  421007:	lea    eax,[ebx+0x2012f5f0]
  42100d:	xor    al,bl
  42100f:	cmp    DWORD PTR [ebp+0x47102b59],eax
  421015:	pop    ds
  421016:	mov    edx,0xbafd6858
  42101b:	xor    ebx,DWORD PTR [ebp-0x44]
  42101e:	gs iret 
  421020:	ror    DWORD PTR [ebp-0x7b],1
  421023:	mov    ebp,0xd212a745
  421028:	pop    ebx
  421029:	add    cl,dl
  42102b:	or     DWORD PTR [esi+0x20],0xce5dbcd7
  421032:	sub    eax,0x5029ed0c
  421037:	ror    DWORD PTR [edi+0xe],0xbe
  42103b:	or     eax,0xd972615d
  421040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421041:	jge    0x421058
  421043:	pop    eax
  421044:	pop    ebp
  421045:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421048:	mov    edi,0x6d184200
  42104d:	aaa    
  42104e:	or     dl,dl
  421050:	jl     0x42103b
  421052:	int    0xca
  421054:	push   ecx
  421055:	jecxz  0x421084
  421057:	adc    BYTE PTR [edi-0x4e],ch
  42105a:	outs   dx,WORD PTR ds:[esi]
  42105c:	mov    ds:0xb8f808f9,eax
  421061:	retf   0xe4a0
  421064:	mov    bl,0x48
  421066:	call   0xd4ee:0x92f886d2
  42106d:	leave  
  42106e:	dec    edx
  42106f:	out    0x2,eax
  421071:	popf   
  421072:	xchg   BYTE PTR [edx+0x46],dl
  421075:	jmp    0xa0f2e1ab
  42107a:	arpl   WORD PTR [edi+0x3a],dx
  42107d:	pop    edi
  42107e:	arpl   WORD PTR ds:0x6e4acff6,dx
  421084:	out    dx,al
  421085:	add    BYTE PTR [ecx],bl
  421087:	loop   0x421081
  421089:	aas    
  42108a:	imul   esi,DWORD PTR [ecx-0x6372a545],0x1d
  421091:	aam    0xdb
  421093:	repnz shr BYTE PTR cs:[ebp+edi*1+0x33c856bd],0x5e
  42109d:	lahf   
  42109e:	dec    ebx
  42109f:	test   eax,0xf3b02b1d
  4210a4:	mov    esi,DWORD PTR [edi+0x38]
  4210a7:	rcr    ah,cl
  4210a9:	inc    esp
  4210aa:	ds jb  0x4210fd
  4210ad:	mov    ecx,0xc15d09a0
  4210b2:	pop    es
  4210b3:	or     bh,dh
  4210b5:	push   edi
  4210b6:	xchg   esi,eax
  4210b7:	scas   al,BYTE PTR es:[edi]
  4210b8:	sahf   
  4210b9:	pop    ecx
  4210ba:	ins    DWORD PTR es:[edi],dx
  4210bb:	(bad)  
  4210bc:	out    0xbc,al
  4210be:	mov    ecx,0x5475a91c
  4210c3:	xchg   DWORD PTR [edi-0x4b],eax
  4210c6:	in     al,0xf9
  4210c8:	jge    0x421081
  4210ca:	mov    DWORD PTR [edx+0x38584e75],ecx
  4210d0:	rcr    DWORD PTR [ecx-0x3f],1
  4210d3:	xlat   BYTE PTR ds:[ebx]
  4210d4:	push   esp
  4210d5:	mov    esp,0xa73c5ba0
  4210da:	in     eax,0x76
  4210dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210dd:	dec    edi
  4210de:	push   esi
  4210df:	push   eax
  4210e0:	push   ds
  4210e1:	in     eax,dx
  4210e2:	inc    edx
  4210e3:	lea    edx,[edi]
  4210e5:	scas   al,BYTE PTR es:[edi]
  4210e6:	ror    bl,cl
  4210e8:	in     eax,dx
  4210e9:	xor    al,0xe0
  4210eb:	int    0xa1
  4210ed:	call   0xf0a4:0xb27db07a
  4210f4:	sub    dh,dl
  4210f6:	dec    edx
  4210f7:	dec    eax
  4210f8:	sub    al,0xfa
  4210fa:	jmp    0x421121
  4210fc:	push   es
  4210fd:	cdq    
  4210fe:	pop    ebp
  4210ff:	shr    BYTE PTR [edi+0x3be3eaee],cl
  421105:	pop    esp
  421106:	adc    eax,0x287b5dff
  42110b:	ds retf 
  42110d:	mov    edx,0x59710679
  421112:	pop    edi
  421113:	and    BYTE PTR es:[ebp-0x31],ah
  421117:	sti    
  421118:	mov    bl,0x44
  42111a:	dec    ebx
  42111b:	je     0x42109d
  42111d:	(bad)  
  42111e:	sahf   
  42111f:	dec    esi
  421120:	jge    0x421184
  421122:	xor    dl,bl
  421124:	sar    DWORD PTR [edi],0xce
  421127:	xlat   BYTE PTR ds:[ebx]
  421128:	adc    ebx,edi
  42112a:	outs   dx,DWORD PTR ds:[esi]
  42112b:	mov    edi,0x8b4ab9cf
  421130:	lods   eax,DWORD PTR ds:[esi]
  421131:	or     bh,ah
  421133:	inc    esi
  421134:	dec    ecx
  421135:	mov    al,0xd9
  421137:	ror    BYTE PTR [ebx-0x3156017d],cl
  42113d:	dec    edi
  42113e:	add    cl,ch
  421140:	jnp    0x4211a1
  421142:	stc    
  421143:	push   edx
  421144:	or     al,0xb5
  421146:	push   cs
  421147:	jno    0x421123
  421149:	mov    cl,0x13
  42114b:	ror    BYTE PTR [ebp+0x48],cl
  42114e:	popa   
  42114f:	sub    eax,0x97eb2271
  421154:	pop    ebp
  421155:	push   es
  421156:	scas   eax,DWORD PTR es:[edi]
  421157:	or     BYTE PTR [eax+0x49],ah
  42115a:	and    dh,BYTE PTR [esp+edx*4+0x58]
  42115e:	inc    esi
  42115f:	mov    cl,0x99
  421161:	mov    ch,0xdd
  421163:	or     bh,BYTE PTR [ecx-0x67]
  421166:	cs fs push edx
  421169:	push   ecx
  42116a:	pop    eax
  42116b:	ja     0x4211e3
  42116d:	jnp    0x421147
  42116f:	jo     0x4211da
  421171:	cdq    
  421172:	jg     0x421126
  421174:	addr16 pop esi
  421176:	sbb    DWORD PTR [ebp+0x53],0xe30137e6
  42117d:	mov    BYTE PTR [ecx+ebp*8+0x75],ch
  421181:	mov    esi,ebp
  421183:	mov    WORD PTR [edx+0x8],gs
  421186:	and    ah,dh
  421188:	add    al,dh
  42118a:	jmp    FWORD PTR [eax-0x5c1259]
  421190:	and    edx,DWORD PTR [eax]
  421192:	jnp    0x421129
  421194:	sub    dh,dh
  421196:	mov    ecx,0x40dec2d2
  42119b:	aad    0x38
  42119d:	neg    DWORD PTR ds:0x91785d79
  4211a3:	inc    esp
  4211a4:	ss and bl,dl
  4211a7:	je     0x4211a4
  4211a9:	pop    ecx
  4211aa:	popf   
  4211ab:	dec    BYTE PTR [ecx]
  4211ad:	inc    eax
  4211ae:	jno    0x421154
  4211b0:	mov    eax,0xc1054b77
  4211b5:	jecxz  0x42114e
  4211b7:	test   DWORD PTR [ecx+0x34d2fd16],eax
  4211bd:	js     0x4211b4
  4211bf:	and    edx,DWORD PTR [esi+eiz*8+0x0]
  4211c3:	dec    esi
  4211c4:	pop    ebp
  4211c5:	lahf   
  4211c6:	outs   dx,DWORD PTR ds:[esi]
  4211c7:	loop   0x4211a0
  4211c9:	cmp    DWORD PTR [ecx+0x715eb687],edx
  4211cf:	jmp    FWORD PTR [ebp+0x60]
  4211d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211d3:	adc    bl,0xbf
  4211d6:	test   eax,0xe61b5482
  4211db:	jg     0x42125a
  4211dd:	inc    ebx
  4211de:	div    DWORD PTR [edx]
  4211e0:	pop    esp
  4211e1:	fld    QWORD PTR [eax+0x7ba1ea60]
  4211e7:	mov    cl,0x9d
  4211e9:	lods   al,BYTE PTR ds:[esi]
  4211ea:	and    esp,esi
  4211ec:	sub    eax,0x551846
  4211f1:	lahf   
  4211f2:	test   al,0x46
  4211f4:	mov    BYTE PTR [esi],bl
  4211f6:	inc    ecx
  4211f7:	jbe    0x42119b
  4211f9:	sub    BYTE PTR [edx-0x4d],dl
  4211fc:	pushf  
  4211fd:	mov    ecx,0xad739975
  421202:	mov    ah,0xd3
  421204:	mov    al,0xa3
  421206:	push   ss
  421207:	adc    BYTE PTR [edi-0x70],bh
  42120a:	enter  0xa69e,0xa9
  42120e:	daa    
  42120f:	retf   0x462d
  421212:	and    ch,ch
  421214:	ja     0x42119f
  421216:	push   cs
  421217:	cmp    al,0xb1
  421219:	pop    ecx
  42121a:	loop   0x421263
  42121c:	int3   
  42121d:	mov    ebx,0x80fc809f
  421222:	dec    edx
  421223:	scas   al,BYTE PTR es:[edi]
  421224:	fldenv ds:0x5e3f9feb
  42122a:	push   esp
  42122b:	shr    BYTE PTR [ebx],cl
  42122d:	retf   
  42122e:	jb     0x42126b
  421230:	cli    
  421231:	lds    eax,FWORD PTR fs:[edx+0x5e22886f]
  421238:	adc    ah,BYTE PTR [esi-0x45]
  42123b:	call   0xd2d5c50b
  421240:	(bad)  [edi+0x61]
  421243:	mov    ebx,0x9475f8e5
  421248:	lea    edx,[ecx+eiz*2]
  42124b:	imul   ebx,DWORD PTR [ebp+0x1d],0xc6d52659
  421252:	push   es
  421253:	imul   ebp,DWORD PTR [eax+0x59],0x88ac918
  42125a:	pop    edx
  42125b:	xchg   ebx,eax
  42125c:	fwait
  42125d:	xchg   ebx,eax
  42125e:	dec    edx
  42125f:	mov    edi,0x344e4a4d
  421264:	mov    bl,0x6d
  421266:	daa    
  421267:	cmp    BYTE PTR [edx],ah
  421269:	push   edi
  42126a:	ins    BYTE PTR es:[edi],dx
  42126b:	rcr    ch,1
  42126d:	aas    
  42126e:	mov    ebx,0x114de7d3
  421273:	imul   esi,DWORD PTR [ecx+0x5db12d91],0x23
  42127a:	lods   al,BYTE PTR ds:[esi]
  42127b:	leave  
  42127c:	ficomp WORD PTR cs:[ecx+eiz*2-0x13f6a606]
  421284:	ds into 
  421286:	jmp    0x8a0d:0x4b4fcf52
  42128d:	ret    
  42128e:	sub    al,0xb6
  421290:	es sub al,0x3d
  421293:	jp     0x421225
  421295:	jne    0x421287
  421297:	retf   
  421298:	ror    bh,cl
  42129a:	lds    edx,FWORD PTR [eax+0x60baad32]
  4212a0:	sub    eax,esi
  4212a2:	fsubr  DWORD PTR [ecx+0x5d]
  4212a5:	inc    ebp
  4212a6:	xor    dl,cl
  4212a8:	stos   BYTE PTR es:[edi],al
  4212a9:	push   esi
  4212aa:	jecxz  0x4212d2
  4212ac:	lds    eax,FWORD PTR [edi-0x39]
  4212af:	pop    ss
  4212b0:	call   0xaa22:0x16a66b72
  4212b7:	xor    al,0x5d
  4212b9:	outs   dx,BYTE PTR ds:[esi]
  4212ba:	out    dx,eax
  4212bb:	sub    al,0x59
  4212bd:	(bad)  [esi]
  4212bf:	fxsave [esi+0x64]
  4212c3:	dec    esi
  4212c4:	xchg   edx,eax
  4212c5:	fsubr  DWORD PTR [edx+0x1f261914]
  4212cb:	pop    ecx
  4212cc:	mov    eax,ds:0x5d477189
  4212d1:	sub    al,al
  4212d3:	add    ebx,edx
  4212d5:	cwde   
  4212d6:	and    BYTE PTR [ecx-0x232cc09],0x84
  4212dd:	mov    dh,0x38
  4212df:	rol    BYTE PTR [esi+0x55b22f6b],1
  4212e5:	sbb    BYTE PTR [ebx-0x3c],cl
  4212e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212e9:	and    DWORD PTR [edx-0x446b1de8],esi
  4212ef:	rcr    BYTE PTR [edx-0x1495b830],cl
  4212f5:	imul   ecx,DWORD PTR [ebx+0x4d745d35],0x67
  4212fc:	test   BYTE PTR [eax-0x50],0xc8
  421300:	jle    0x421313
  421302:	pop    ss
  421303:	les    ebx,FWORD PTR [ebp+0x1d]
  421306:	scas   al,BYTE PTR es:[edi]
  421307:	jecxz  0x4212dc
  421309:	push   eax
  42130a:	add    DWORD PTR [edx-0x76b4955a],edx
  421310:	jmp    0xe337d0cf
  421315:	add    al,0x8
  421317:	shr    BYTE PTR [eax-0x71],cl
  42131a:	sub    al,0x1
  42131c:	loope  0x421392
  42131e:	in     eax,0x4d
  421320:	lods   eax,DWORD PTR ds:[esi]
  421321:	sbb    cl,BYTE PTR [ebx+0x5f]
  421324:	cld    
  421325:	add    eax,0xfd89ab38
  42132a:	cmc    
  42132b:	shl    BYTE PTR [edi-0x24],cl
  42132e:	and    al,0xae
  421330:	ins    BYTE PTR es:[edi],dx
  421331:	lds    ebp,FWORD PTR [ebx-0x14]
  421334:	pop    eax
  421335:	push   ebp
  421336:	inc    ebp
  421337:	aad    0x5c
  421339:	mov    edx,0xd1dbcc0c
  42133e:	bound  eax,QWORD PTR [esi+0x1d]
  421341:	inc    esi
  421342:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421343:	jg     0x4212eb
  421345:	mov    ah,0x34
  421347:	test   eax,0x314b42b0
  42134c:	mov    esp,0x3af4c941
  421351:	test   al,0x88
  421353:	int3   
  421354:	test   BYTE PTR [ecx+0x19dc9a59],bl
  42135a:	cdq    
  42135b:	sbb    bl,BYTE PTR [eax]
  42135d:	mov    DWORD PTR [eax],ebx
  42135f:	cmp    DWORD PTR [esi-0x61],ebx
  421362:	retf   0x38a9
  421365:	fldcw  WORD PTR [edx]
  421367:	push   0x4f
  421369:	inc    esi
  42136a:	mov    bh,0xdd
  42136c:	jmp    0x421314
  42136e:	push   ecx
  42136f:	mov    eax,ss
  421371:	cdq    
  421372:	push   esp
  421373:	mov    al,0x3b
  421375:	cld    
  421376:	(bad)  
  421377:	jmp    0x4213ed
  421379:	cmp    DWORD PTR [eax+0x12548219],ebp
  42137f:	lods   eax,DWORD PTR ds:[esi]
  421380:	push   eax
  421381:	xchg   ch,bl
  421383:	repz sbb eax,0x35ff508
  421389:	out    0x55,eax
  42138b:	xor    DWORD PTR [ebx],ebx
  42138d:	out    dx,al
  42138e:	(bad)  
  42138f:	js     0x42139a
  421391:	jmp    0x4213e4
  421393:	jne    0x4213f2
  421395:	sahf   
  421396:	jecxz  0x4213d4
  421398:	nop
  421399:	xor    ah,al
  42139b:	shl    cl,cl
  42139d:	mov    ah,0x9a
  42139f:	pop    ebx
  4213a0:	call   0xcdd5:0x547d5840
  4213a7:	or     esi,DWORD PTR [ebx-0x644dbe39]
  4213ad:	les    ebx,FWORD PTR [ebx-0x11adeb66]
  4213b3:	pop    eax
  4213b4:	xor    al,BYTE PTR [esi]
  4213b6:	dec    ebp
  4213b7:	adc    ch,BYTE PTR [edx-0x59]
  4213ba:	pop    edx
  4213bb:	jno    0x42142c
  4213bd:	cmc    
  4213be:	adc    DWORD PTR [edi],0x1b0cf9d8
  4213c4:	iret   
  4213c5:	mov    ah,0xd8
  4213c7:	rol    dh,cl
  4213c9:	and    bl,al
  4213cb:	push   0x808a0485
  4213d0:	outs   dx,DWORD PTR ds:[esi]
  4213d1:	add    dl,BYTE PTR [ecx]
  4213d3:	inc    esi
  4213d4:	mov    ds:0xe715e999,eax
  4213d9:	lds    esp,FWORD PTR [ebp+0x7c595482]
  4213df:	add    al,0x50
  4213e1:	sub    BYTE PTR [eax-0x42],dl
  4213e4:	or     al,0x6b
  4213e6:	dec    ebx
  4213e7:	pop    ds
  4213e8:	or     esi,DWORD PTR [edi-0xb]
  4213eb:	sbb    BYTE PTR [edx+esi*1],al
  4213ee:	ror    ebp,1
  4213f0:	test   BYTE PTR [edi+0x2d9d7d89],0x34
  4213f7:	js     0x42140f
  4213f9:	out    0x50,eax
  4213fb:	addr16 mov al,ds:0xfa55
  4213ff:	xor    cl,BYTE PTR [edx-0x1dfa3ee1]
  421405:	pop    ebx
  421406:	adc    eax,0xe70378ac
  42140b:	mov    al,ds:0x4f12e43d
  421410:	pop    ebp
  421411:	cmp    ecx,ecx
  421413:	outs   dx,DWORD PTR ds:[esi]
  421414:	retf   0x732b
  421417:	add    eax,0x6a005954
  42141c:	std    
  42141d:	div    BYTE PTR [esi+0x406f58c7]
  421423:	addr16 adc al,0xbe
  421426:	push   ecx
  421427:	outs   dx,DWORD PTR ds:[esi]
  421428:	ins    BYTE PTR es:[edi],dx
  421429:	cmp    DWORD PTR [ebp-0x7b7b32de],edi
  42142f:	(bad)  
  421430:	repnz pop ecx
  421432:	cmp    BYTE PTR [edi],dl
  421434:	ror    BYTE PTR [eax],0x3c
  421437:	add    al,BYTE PTR [eax]
  421439:	mov    ecx,0x2f5d16d9
  42143e:	and    al,0x3d
  421440:	aaa    
  421441:	push   0xffffff94
  421443:	in     eax,dx
  421444:	xor    eax,DWORD PTR [esi-0x3a]
  421447:	pusha  
  421448:	test   al,0x84
  42144a:	fist   WORD PTR [ecx+ebx*4-0x44]
  42144e:	dec    edx
  42144f:	jp     0x421499
  421451:	inc    eax
  421452:	jns    0x4213df
  421454:	ins    BYTE PTR es:[edi],dx
  421455:	pop    eax
  421456:	ret    0x6fdf
  421459:	push   es
  42145a:	mov    bl,0x12
  42145c:	push   cs
  42145d:	mov    bh,0xd
  42145f:	pop    ss
  421460:	mov    al,0x7e
  421462:	dec    eax
  421463:	jmp    0x370e2838
  421468:	(bad)  
  421469:	outs   dx,BYTE PTR ds:[esi]
  42146a:	jmp    0x6a5415e4
  42146f:	push   es
  421470:	pop    ebp
  421471:	test   DWORD PTR [ebp+0x181fd32b],ecx
  421477:	daa    
  421478:	ja     0x421430
  42147a:	shr    DWORD PTR [ebx+0x5d],0xa3
  42147e:	inc    esi
  42147f:	push   es
  421480:	sbb    al,0x66
  421482:	adc    esp,ecx
  421484:	xchg   ebx,eax
  421485:	pop    esp
  421486:	sti    
  421487:	jns    0x421446
  421489:	aas    
  42148a:	xor    bh,cl
  42148c:	out    0x46,al
  42148e:	dec    ebx
  42148f:	sbb    BYTE PTR [ebp+0x26],dl
  421492:	push   cs
  421493:	adc    al,0xf5
  421495:	and    eax,0x49aad2a4
  42149a:	jo     0x421489
  42149c:	xchg   ebp,eax
  42149d:	push   ecx
  42149e:	sub    BYTE PTR [edx-0x4274f2a3],ah
  4214a4:	mov    al,ds:0xba583219
  4214a9:	pop    ecx
  4214aa:	xchg   sp,ax
  4214ac:	xchg   edx,eax
  4214ad:	mov    ds:0x3d9f9276,al
  4214b2:	inc    edx
  4214b3:	xchg   esi,eax
  4214b4:	and    eax,0x88d22d04
  4214b9:	mov    esp,0x89a256ae
  4214be:	sahf   
  4214bf:	mov    esp,0xe19f6aab
  4214c4:	pop    es
  4214c5:	inc    edi
  4214c6:	je     0x42146b
  4214c8:	fst    st(6)
  4214ca:	sub    eax,0x49c5f905
  4214cf:	call   0xcd00992e
  4214d4:	in     eax,dx
  4214d5:	sbb    BYTE PTR [esp+ebx*8],0xc4
  4214d9:	pop    ecx
  4214da:	in     al,0x5a
  4214dc:	aas    
  4214dd:	xchg   edx,eax
  4214de:	pop    edi
  4214df:	sbb    al,ch
  4214e1:	pop    ss
  4214e2:	dec    ebx
  4214e3:	dec    eax
  4214e4:	mov    WORD PTR [esi+ebx*2-0x489c47e6],ds
  4214eb:	xlat   BYTE PTR ds:[ebx]
  4214ec:	cwde   
  4214ed:	jo     0x4214ea
  4214ef:	inc    edi
  4214f0:	test   al,0xd9
  4214f2:	jle    0x42151a
  4214f4:	cli    
  4214f5:	add    edx,DWORD PTR [esp+edi*1-0x4e]
  4214f9:	dec    ecx
  4214fa:	adc    al,0x7e
  4214fc:	test   BYTE PTR [ecx-0x30139286],ch
  421502:	mov    bl,0xd2
  421504:	retf   
  421505:	call   0xdd7f4f77
  42150a:	dec    edi
  42150b:	sub    al,0x5d
  42150d:	sub    eax,0xa5018fd8
  421512:	fiadd  DWORD PTR [esi+0x30]
  421515:	pop    edi
  421516:	repz mov ebx,0x3672d94b
  42151c:	pop    ebx
  42151d:	xor    eax,0x121523b3
  421522:	dec    edx
  421523:	daa    
  421524:	jnp    0x421530
  421526:	ins    DWORD PTR es:[edi],dx
  421527:	jnp    0x42159d
  421529:	pop    ecx
  42152a:	pop    esi
  42152b:	inc    ecx
  42152c:	fistp  WORD PTR [edx]
  42152e:	(bad)  
  42152f:	ficom  DWORD PTR [ecx]
  421531:	sbb    DWORD PTR [esi+0x4b060836],ebx
  421537:	or     BYTE PTR [ecx],ch
  421539:	mov    eax,0x96dad3c9
  42153e:	push   eax
  42153f:	int    0x7f
  421541:	stos   DWORD PTR es:[edi],eax
  421542:	cld    
  421543:	inc    ebx
  421544:	jge    0x4215c0
  421546:	out    0xbb,al
  421548:	xor    ch,bh
  42154a:	out    0x32,eax
  42154c:	pop    ebp
  42154d:	mov    WORD PTR [esi-0x6efe4010],ss
  421553:	push   ss
  421554:	ficomp DWORD PTR [ecx-0x3b]
  421557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421558:	pop    ss
  421559:	mov    esi,DWORD PTR [ebx]
  42155b:	(bad)  
  42155c:	pop    ecx
  42155d:	or     BYTE PTR [ecx-0x19],0x85
  421561:	jl     0x421543
  421563:	jecxz  0x4215e2
  421565:	mov    ah,0x81
  421567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421568:	push   cs
  421569:	inc    esi
  42156a:	jle    0x4215be
  42156c:	daa    
  42156d:	inc    edi
  42156e:	mov    ds:0x4ac2e9fb,al
  421573:	inc    eax
  421574:	sbb    al,BYTE PTR [esp+ecx*4-0x18182c82]
  42157b:	shl    BYTE PTR [ebx],cl
  42157d:	push   DWORD PTR cs:[ebx+0x27]
  421581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421582:	mov    esi,0xb3dc5d6a
  421587:	jb     0x4215d2
  421589:	adc    DWORD PTR [esi-0xb],ebp
  42158c:	int3   
  42158d:	pop    ecx
  42158e:	sbb    al,0x2f
  421590:	add    al,0x73
  421592:	push   ds
  421593:	and    eax,0x344b74ee
  421598:	inc    edx
  421599:	clc    
  42159a:	mov    ch,BYTE PTR ds:0xf8690f5b
  4215a0:	jae    0x4215d3
  4215a2:	cs scas al,BYTE PTR es:[edi]
  4215a4:	fst    QWORD PTR [eax+0x40a9e904]
  4215aa:	pop    ebx
  4215ab:	test   al,0x5d
  4215ad:	cmp    eax,ebp
  4215af:	xchg   esp,eax
  4215b0:	lods   eax,DWORD PTR ds:[esi]
  4215b1:	adc    DWORD PTR [edx+0x38bb6e59],ebp
  4215b7:	rcl    BYTE PTR [ebp-0x1a553fbf],cl
  4215bd:	sbb    ebx,DWORD PTR [edi-0x50]
  4215c0:	push   esi
  4215c1:	addr16 cld 
  4215c3:	pushf  
  4215c4:	jbe    0x4215a5
  4215c6:	jmp    0x42154e
  4215c8:	ds xchg ebx,eax
  4215ca:	mov    dl,al
  4215cc:	jno    0x421623
  4215ce:	xor    eax,0x33c7be07
  4215d3:	push   esi
  4215d4:	dec    esi
  4215d5:	stos   BYTE PTR es:[edi],al
  4215d6:	push   0x41
  4215d8:	gs test al,0xfc
  4215db:	pop    esi
  4215dc:	pop    ebp
  4215dd:	push   0x74b80175
  4215e2:	pusha  
  4215e3:	leave  
  4215e4:	add    al,BYTE PTR [esi-0x22]
  4215e7:	shr    DWORD PTR [ecx-0x7f],0x25
  4215eb:	sbb    edi,DWORD PTR [edx+0x65b4af9]
  4215f1:	cmp    bh,ah
  4215f3:	cmc    
  4215f4:	sbb    DWORD PTR [ebx-0x53],ebp
  4215f7:	cmp    ecx,DWORD PTR [eax+0x46]
  4215fa:	mov    bh,0x83
  4215fc:	(bad)  
  4215fd:	sub    eax,0x96dd5780
  421602:	push   ecx
  421603:	pop    ebp
  421604:	shrd   DWORD PTR [esp+ebp*4+0x69],eax,0x39
  42160a:	jg     0x42167e
  42160c:	lods   eax,DWORD PTR ds:[esi]
  42160d:	add    eax,0x54cfd5af
  421612:	xor    ch,BYTE PTR [edi-0x50]
  421615:	cmp    esp,eax
  421617:	jg     0x4215c5
  421619:	add    DWORD PTR [ebx-0x2c],ecx
  42161c:	cwde   
  42161d:	and    DWORD PTR [edi],edi
  42161f:	std    
  421620:	shr    BYTE PTR [ebx+0x505bcc05],1
  421626:	xor    ah,BYTE PTR [edx-0x79e43183]
  42162c:	fstp   QWORD PTR [ebx-0x71ae89b6]
  421632:	(bad)  
  421633:	mov    edi,0xd2502f64
  421638:	mov    esi,0x14ad8aaf
  42163d:	imul   edx,DWORD PTR [edx-0x4957a23d],0x14
  421644:	and    eax,0x177901dd
  421649:	jbe    0x4216b8
  42164b:	in     al,dx
  42164c:	bswap  ebx
  42164e:	pop    edx
  42164f:	in     al,0xbf
  421651:	jbe    0x42169d
  421653:	xlat   BYTE PTR ds:[ebx]
  421654:	inc    ecx
  421655:	je     0x42168e
  421657:	(bad)  [ebp-0x7d]
  42165a:	fst    DWORD PTR [ebp+0x20]
  42165d:	dec    edx
  42165e:	or     eax,0xa23ab7d2
  421663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421664:	not    BYTE PTR ds:0x435dc67b
  42166a:	sahf   
  42166b:	jb     0x4215f9
  42166d:	jns    0x421612
  42166f:	retf   
  421670:	dec    ebp
  421671:	pop    ecx
  421672:	push   ebx
  421673:	jmp    0x9f9:0x3a3dd653
  42167a:	popa   
  42167b:	outs   dx,BYTE PTR ds:[esi]
  42167c:	pop    ebp
  42167d:	push   cs
  42167e:	inc    ebp
  42167f:	das    
  421680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421681:	leave  
  421682:	mov    ds:0xc84635d7,al
  421687:	jmp    0x421687
  421689:	fucomip st,st(3)
  42168b:	nop
  42168c:	push   ecx
  42168d:	das    
  42168e:	fmul   DWORD PTR [eax]
  421690:	pop    ebp
  421691:	call   0xa2da:0xde0b1d62
  421698:	ret    0xa959
  42169b:	imul   edi,DWORD PTR [eax-0x5f],0x1
  42169f:	add    esp,DWORD PTR [edx]
  4216a1:	pop    edx
  4216a2:	dec    ebx
  4216a3:	lds    eax,FWORD PTR [ebp-0x6bee83c9]
  4216a9:	int3   
  4216aa:	jnp    0x42167f
  4216ac:	and    DWORD PTR [ebx-0x14],edi
  4216af:	into   
  4216b0:	mov    ecx,0x5d212269
  4216b5:	bound  eax,QWORD PTR [edi-0x6531232b]
  4216bb:	mov    al,ds:0xe8f35c7d
  4216c0:	push   ebp
  4216c1:	mov    al,0x38
  4216c3:	int3   
  4216c4:	out    0xa0,eax
  4216c6:	mov    ah,BYTE PTR [ebx]
  4216c8:	and    DWORD PTR [ebp+0x95db1a5],0xe7275812
  4216d2:	setnp  BYTE PTR ds:[eax+0x6c]
  4216d7:	jecxz  0x4216b3
  4216d9:	test   eax,0x85ebbde3
  4216de:	xor    eax,0x193b5d9c
  4216e3:	cmc    
  4216e4:	cld    
  4216e5:	in     al,0x2
  4216e7:	adc    ecx,DWORD PTR [ecx+0x4d69e959]
  4216ed:	(bad)  
  4216ee:	cli    
  4216ef:	dec    edi
  4216f0:	jno    0x4216c3
  4216f2:	push   ebp
  4216f3:	pop    edi
  4216f4:	jle    0x421689
  4216f6:	or     dh,cl
  4216f8:	hlt    
  4216f9:	rol    DWORD PTR [edi+0x40],0xcf
  4216fd:	pop    ecx
  4216fe:	fld    TBYTE PTR [ecx+0x26d41690]
  421704:	and    DWORD PTR [ebx+0x718f694b],ebp
  42170a:	mov    eax,0x72d398e2
  42170f:	cwde   
  421710:	pop    esi
  421711:	pop    ecx
  421712:	pop    ecx
  421713:	mov    ds:0xc14c9e35,eax
  421718:	stc    
  421719:	inc    ebx
  42171a:	dec    ebx
  42171b:	popa   
  42171c:	inc    eax
  42171d:	push   0xb0c4c6e4
  421722:	and    edx,edx
  421724:	adc    ah,BYTE PTR [ebp-0x1b0834bc]
  42172a:	pushf  
  42172b:	mov    esp,0x4c414d5e
  421730:	popf   
  421731:	adc    eax,0x74bd5c46
  421736:	fs shl ebx,cl
  421739:	cmp    ch,BYTE PTR [edi+0x3e]
  42173c:	xchg   bl,ah
  42173e:	ja     0x42170b
  421740:	push   esi
  421741:	mov    ebp,DWORD PTR [eax+0x4a]
  421744:	stos   BYTE PTR es:[edi],al
  421745:	js     0x421742
  421747:	pop    eax
  421748:	xchg   ebp,eax
  421749:	stc    
  42174a:	xchg   esi,eax
  42174b:	ror    BYTE PTR [edi],cl
  42174d:	scas   al,BYTE PTR es:[edi]
  42174e:	mov    ecx,0x63bfb1d0
  421753:	fisubr DWORD PTR [esi+0x52]
  421756:	aas    
  421757:	inc    esp
  421758:	call   0x6:0xe050d157
  42175f:	xchg   edx,eax
  421760:	mov    bh,0xa5
  421762:	adc    al,0x38
  421764:	mov    ebx,DWORD PTR [esi+0x74]
  421767:	ins    BYTE PTR es:[edi],dx
  421768:	mov    esi,0xe638617
  42176d:	les    edi,FWORD PTR [ecx]
  42176f:	rcr    ch,0xbb
  421772:	push   ebp
  421773:	(bad)  
  421774:	sbb    eax,0x1a4d4ae1
  421779:	leave  
  42177a:	xchg   ecx,eax
  42177b:	aad    0xf6
  42177d:	fidiv  DWORD PTR [edx-0x5a4ec62e]
  421783:	call   0x7e39fd2f
  421788:	pop    ebp
  421789:	popa   
  42178a:	xchg   DWORD PTR [edx],esp
  42178c:	lahf   
  42178d:	push   0x59df308a
  421792:	cld    
  421793:	dec    ebx
  421794:	into   
  421795:	or     BYTE PTR [ecx-0x44],dl
  421798:	fmul   QWORD PTR [edi]
  42179a:	dec    ebx
  42179b:	in     eax,dx
  42179c:	das    
  42179d:	jae    0x421721
  42179f:	repnz xor eax,0x7cd2a572
  4217a5:	retf   
  4217a6:	xchg   esp,eax
  4217a7:	jg     0x42177c
  4217a9:	dec    edx
  4217aa:	iret   
  4217ab:	(bad)  
  4217ac:	pop    ebp
  4217ad:	adc    bh,BYTE PTR [edx+0x49]
  4217b0:	mov    ebx,0x961fe92d
  4217b5:	inc    esi
  4217b6:	cld    
  4217b7:	or     DWORD PTR [eax+0x77cd8b10],edi
  4217bd:	cmp    eax,0x5522e99
  4217c2:	xchg   edi,eax
  4217c3:	adc    edi,DWORD PTR [esi+0x6692d899]
  4217c9:	mov    ecx,0x59ca4310
  4217ce:	mov    DWORD PTR [esi+0x5666d5de],esi
  4217d4:	call   0x4af6:0xadb3e668
  4217db:	mov    al,ds:0xa9acd024
  4217e0:	adc    ebp,esi
  4217e2:	(bad)  
  4217e4:	out    0x18,eax
  4217e6:	out    dx,al
  4217e7:	lock mov cl,0xd2
  4217ea:	mov    bh,0x46
  4217ec:	pop    ebp
  4217ed:	daa    
  4217ee:	sbb    al,0xfa
  4217f0:	loop   0x42178a
  4217f2:	xchg   edi,eax
  4217f3:	mov    DWORD PTR [esi-0x416d1b9],esi
  4217f9:	fwait
  4217fa:	stos   BYTE PTR es:[edi],al
  4217fb:	pop    ebx
  4217fc:	clc    
  4217fd:	xchg   ebx,eax
  4217fe:	fimul  DWORD PTR [esi+0x7f]
  421801:	pop    eax
  421802:	sti    
  421803:	sar    DWORD PTR [edx-0x2f03742f],1
  421809:	or     DWORD PTR [edx],eax
  42180b:	in     eax,0x28
  42180d:	inc    esi
  42180e:	adc    al,0x8c
  421810:	clc    
  421811:	jg     0x421879
  421813:	(bad)  
  421814:	fidivr WORD PTR [ecx]
  421816:	inc    eax
  421817:	push   ds
  421818:	hlt    
  421819:	sbb    cl,BYTE PTR [ebx+0x2e]
  42181c:	out    dx,eax
  42181d:	jge    0x4217f5
  42181f:	aam    0xee
  421821:	mov    bh,0x5b
  421823:	sar    BYTE PTR [edx+edx*1+0x717fc0f8],1
  42182a:	fwait
  42182b:	repnz stos DWORD PTR es:[edi],eax
  42182d:	cmp    eax,DWORD PTR [ecx+0x73]
  421830:	cmc    
  421831:	je     0x4217fe
  421833:	ins    BYTE PTR es:[edi],dx
  421834:	xchg   esp,eax
  421835:	js     0x421891
  421837:	jmp    FWORD PTR [ecx+0x55]
  42183a:	das    
  42183b:	mov    ch,0xb
  42183d:	xchg   al,dh
  42183f:	or     dh,BYTE PTR [edx+0x5d2d39c9]
  421845:	in     al,0x9b
  421847:	out    0x96,eax
  421849:	mov    WORD PTR [eax-0xf],es
  42184c:	jmp    0x5fb7f7aa
  421851:	dec    ecx
  421852:	and    bh,BYTE PTR [ecx]
  421854:	fisttp WORD PTR [ebx-0x26b896de]
  42185a:	xor    BYTE PTR [eax-0xe6d6505],ah
  421860:	ficom  DWORD PTR [esi-0x29]
  421863:	fs xchg edx,ebx
  421866:	push   es
  421867:	fmul   st(7),st
  421869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42186a:	arpl   WORD PTR [esp+eiz*2],di
  42186d:	jns    0x421821
  42186f:	mov    DWORD PTR [ebp+0x4c],ebx
  421872:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421873:	ins    DWORD PTR es:[edi],dx
  421874:	test   al,0xba
  421876:	mov    eax,ds:0x2a59fcb6
  42187b:	add    eax,0x31826c87
  421880:	mov    ah,0xa4
  421882:	loope  0x421818
  421884:	in     eax,0xbe
  421886:	dec    edx
  421887:	shr    DWORD PTR [edx-0x3a],1
  42188a:	xchg   dl,bh
  42188c:	rol    BYTE PTR [ecx+0x4729d2dc],cl
  421892:	popa   
  421893:	mov    dh,0x1d
  421895:	mov    bl,0xb9
  421897:	repnz fcom DWORD PTR [ecx+0x399cf758]
  42189e:	lods   al,BYTE PTR ds:[esi]
  42189f:	shl    BYTE PTR [ecx-0xb],1
  4218a2:	mov    ebp,edi
  4218a4:	popf   
  4218a5:	sub    BYTE PTR [esp+edi*4+0x5d],bh
  4218a9:	fcom   QWORD PTR [ecx]
  4218ab:	xor    al,0xd8
  4218ad:	pop    eax
  4218ae:	mov    ebp,0xd05b1bed
  4218b3:	(bad)  
  4218b4:	jbe    0x421924
  4218b6:	push   ds
  4218b7:	inc    esi
  4218b8:	ficomp WORD PTR [ecx-0x7464aa43]
  4218be:	loop   0x4218e2
  4218c0:	pop    ebp
  4218c1:	xor    eax,0x30efe66b
  4218c6:	xchg   ebp,eax
  4218c7:	into   
  4218c8:	push   eax
  4218c9:	pop    ecx
  4218ca:	mov    eax,ds:0xfe2d0047
  4218cf:	inc    esp
  4218d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218d1:	(bad)  
  4218d2:	add    ch,BYTE PTR [eax-0x22]
  4218d5:	pop    ecx
  4218d6:	jne    0x4218c6
  4218d8:	mov    ebx,0x9e2e0466
  4218dd:	pop    ecx
  4218de:	xor    ah,bl
  4218e0:	cs in  al,dx
  4218e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218e3:	jp     0x421894
  4218e5:	into   
  4218e6:	dec    edx
  4218e7:	sub    DWORD PTR [esi],ebx
  4218e9:	and    edx,0x11
  4218ec:	xchg   ebx,eax
  4218ed:	(bad)  
  4218ee:	pop    eax
  4218ef:	int    0x42
  4218f1:	xor    BYTE PTR [eax+0x42],ah
  4218f4:	jge    0x421907
  4218f6:	test   esi,eax
  4218f8:	fwait
  4218f9:	in     eax,dx
  4218fa:	dec    edx
  4218fb:	lock mov esi,?
  4218fe:	les    ecx,FWORD PTR [edx-0x2d094622]
  421904:	(bad)  
  421905:	hlt    
  421906:	add    eax,0x619d54e1
  42190b:	dec    ebx
  42190c:	cmp    ah,BYTE PTR [esi-0x12a27aee]
  421912:	aas    
  421913:	fnstcw WORD PTR [ebp-0x67]
  421916:	jbe    0x421961
  421918:	jecxz  0x421973
  42191a:	fucomip st,st(5)
  42191c:	cdq    
  42191d:	(bad)  
  42191e:	mov    al,0xb8
  421920:	and    eax,0x5da47480
  421925:	xor    ah,BYTE PTR [ebx-0x559c23a2]
  42192b:	pop    esp
  42192c:	and    al,0x1e
  42192e:	cmc    
  42192f:	pusha  
  421930:	pop    ebp
  421931:	pop    edx
  421932:	shl    BYTE PTR [edx],cl
  421934:	mov    ch,0x9b
  421936:	pop    ds
  421937:	ficomp DWORD PTR [ebp+0x79]
  42193a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42193b:	sar    DWORD PTR [esi],0xa0
  42193e:	call   0x458854e1
  421943:	ss push eax
  421945:	cld    
  421946:	inc    ecx
  421947:	and    eax,0xece67e9d
  42194c:	lods   eax,DWORD PTR ds:[esi]
  42194d:	xor    BYTE PTR [ebx+0x38],cl
  421950:	addr16 std 
  421952:	(bad)  
  421954:	and    al,0x42
  421956:	(bad)
  421959:	stos   BYTE PTR es:[edi],al
  42195a:	pop    eax
  42195b:	aaa    
  42195c:	mov    edx,0x3f4dff09
  421961:	jmp    0xa67e3db0
  421966:	inc    esp
  421967:	or     eax,0xd3729591
  42196c:	les    edx,FWORD PTR [edi]
  42196e:	fist   WORD PTR [ebx-0x7b]
  421971:	daa    
  421972:	lahf   
  421973:	inc    esp
  421974:	pop    ebp
  421975:	push   ss
  421976:	(bad)  
  421977:	ret    
  421978:	add    al,0x13
  42197a:	repz xchg edi,eax
  42197c:	jo     0x4219d3
  42197e:	mov    fs,ebx
  421980:	push   ecx
  421981:	pop    eax
  421982:	es cmp eax,0xa6c2d49d
  421988:	inc    edi
  421989:	ds dec ebx
  42198b:	data16 sbb al,0xf8
  42198e:	sbb    BYTE PTR [ecx-0x2b],ah
  421991:	js     0x42197a
  421993:	imul   ebx,DWORD PTR ds:[ecx+0x60],0xfd464cd4
  42199b:	mov    al,BYTE PTR [edi-0x72c5b83d]
  4219a1:	pop    ebx
  4219a2:	or     edi,DWORD PTR [ebp-0x4c]
  4219a5:	and    ah,BYTE PTR [esi]
  4219a7:	lock add al,0x46
  4219aa:	shl    cl,0x2
  4219ad:	outs   dx,DWORD PTR ds:[esi]
  4219ae:	add    al,0x5e
  4219b0:	ja     0x4219af
  4219b2:	dec    edx
  4219b3:	scas   eax,DWORD PTR es:[edi]
  4219b4:	sbb    DWORD PTR [eax-0x4a],eax
  4219b7:	shl    BYTE PTR [edi-0x10],0xef
  4219bb:	ror    BYTE PTR [ebp+0x66],cl
  4219be:	inc    esp
  4219bf:	bound  esp,QWORD PTR [eax+edi*1-0x7d]
  4219c3:	mov    eax,0x3d079e5d
  4219c8:	bound  ebp,QWORD PTR [edx]
  4219ca:	mov    esp,0xe6305cf2
  4219cf:	imul   ch
  4219d1:	add    DWORD PTR [ecx+edx*8],0xffffffe7
  4219d5:	cld    
  4219d6:	ret    0xddb8
  4219d9:	mov    edx,0x77c5cc68
  4219de:	push   ecx
  4219df:	adc    al,0x42
  4219e1:	lods   eax,DWORD PTR ds:[esi]
  4219e2:	mov    esi,0x24a40c12
  4219e7:	popa   
  4219e8:	fs push ebp
  4219ea:	ss call 0x9dd6:0x79021756
  4219f2:	ins    BYTE PTR es:[edi],dx
  4219f3:	gs in  al,dx
  4219f5:	sbb    edi,esp
  4219f7:	daa    
  4219f8:	(bad)  
  4219f9:	inc    eax
  4219fa:	jecxz  0x42198d
  4219fc:	jle    0x421a1b
  4219fe:	push   cs
  4219ff:	rol    BYTE PTR [ebx+0x7c708ca],cl
  421a05:	pop    es
  421a06:	cli    
  421a07:	mov    esp,0xc54a47d8
  421a0c:	(bad)  
  421a0d:	mov    eax,0xdcbb768a
  421a12:	cdq    
  421a13:	arpl   WORD PTR [ebx+0x71],ax
  421a16:	popf   
  421a17:	xchg   DWORD PTR [esi+edi*1+0x56],ebx
  421a1b:	test   BYTE PTR [ecx-0x76],bh
  421a1e:	pop    edi
  421a1f:	inc    edi
  421a20:	push   es
  421a21:	jle    0x421a1e
  421a23:	adc    dl,bl
  421a25:	(bad)  
  421a26:	jg     0x4219e2
  421a28:	inc    esp
  421a29:	(bad)  
  421a2a:	jle    0x421a05
  421a2c:	pop    esp
  421a2d:	ret    
  421a2e:	test   al,0x4
  421a30:	jae    0x4219c9
  421a32:	push   0x2e
  421a34:	sahf   
  421a35:	pop    ecx
  421a36:	add    ebp,edx
  421a38:	push   0xffffff9e
  421a3a:	mov    edi,0x4f1277fe
  421a3f:	mov    bh,0xb4
  421a41:	leave  
  421a42:	jo     0x4219e3
  421a44:	int    0x2b
  421a46:	inc    eax
  421a47:	imul   ecx,ebx,0x2a98d59
  421a4d:	dec    ebp
  421a4e:	fistp  WORD PTR [ebx-0x77b4c3bb]
  421a54:	std    
  421a55:	and    DWORD PTR [edi],ebx
  421a57:	ds aad 0xf7
  421a5a:	xchg   dl,dl
  421a5c:	mov    edx,DWORD PTR [ebp-0xe]
  421a5f:	dec    ebx
  421a60:	leave  
  421a61:	add    ch,BYTE PTR [ebp+0x16]
  421a64:	push   edx
  421a65:	adc    BYTE PTR [ebp+0x7ba09a1f],bl
  421a6b:	dec    ebx
  421a6c:	rol    DWORD PTR [eax+0x36],cl
  421a6f:	sar    dh,cl
  421a71:	sub    DWORD PTR [edx-0x36e9bdbc],edi
  421a77:	sti    
  421a78:	xchg   ebp,eax
  421a79:	add    DWORD PTR [ecx],eax
  421a7b:	shl    BYTE PTR [eax],cl
  421a7d:	and    DWORD PTR [ebp-0x52],0x21
  421a81:	ss add ebx,edi
  421a84:	fadd   QWORD PTR [esi+0x4481f6ca]
  421a8a:	dec    edx
  421a8b:	inc    ebx
  421a8c:	shl    DWORD PTR [eax+0x4b],0x71
  421a90:	ins    BYTE PTR es:[edi],dx
  421a91:	add    eax,0x2cf428ac
  421a96:	inc    edx
  421a97:	ror    BYTE PTR [ecx],cl
  421a99:	lods   eax,DWORD PTR ds:[esi]
  421a9a:	(bad)  
  421a9b:	and    eax,0x120b3f7
  421aa0:	outs   dx,BYTE PTR ds:[esi]
  421aa1:	dec    esp
  421aa2:	ror    DWORD PTR [edx-0x6860465c],0x20
  421aa9:	(bad)  
  421aaa:	aam    0xd1
  421aac:	shl    BYTE PTR [ecx-0x33],1
  421aaf:	into   
  421ab0:	lods   eax,DWORD PTR ds:[esi]
  421ab1:	les    ecx,FWORD PTR [edx+0x20]
  421ab4:	cmp    al,0xde
  421ab6:	addr16 add al,0xc2
  421ab9:	test   BYTE PTR [edx+0x786363d1],0x35
  421ac0:	stc    
  421ac1:	mov    eax,ds:0x3812dbaa
  421ac6:	dec    ebx
  421ac7:	scas   al,BYTE PTR es:[edi]
  421ac8:	out    0x15,al
  421aca:	hlt    
  421acb:	cmp    al,0x27
  421acd:	pop    ds
  421ace:	rcr    DWORD PTR [bx+di-0x70],cl
  421ad2:	adc    al,0x84
  421ad4:	sub    BYTE PTR [edx+ebx*8-0x5a],dh
  421ad8:	pop    ebp
  421ad9:	shl    DWORD PTR [ecx+ecx*4+0x7e],0x17
  421ade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421adf:	push   edi
  421ae0:	test   al,0xa1
  421ae2:	sub    dl,dl
  421ae4:	sti    
  421ae5:	mov    ecx,0xf6e1174c
  421aea:	test   DWORD PTR [ebp+0x34e7395e],0x774ab024
  421af4:	xchg   ebp,eax
  421af5:	inc    ebx
  421af6:	adc    al,0x38
  421af8:	lods   eax,DWORD PTR ds:[esi]
  421af9:	push   ecx
  421afa:	pop    edi
  421afb:	inc    ecx
  421afc:	inc    edi
  421afd:	aaa    
  421afe:	sahf   
  421aff:	rcr    BYTE PTR [edi+edx*8+0x3f],cl
  421b03:	stos   DWORD PTR es:[edi],eax
  421b04:	pop    edi
  421b05:	fnstcw WORD PTR [ebx+0x13]
  421b08:	pop    esp
  421b09:	pop    es
  421b0a:	cli    
  421b0b:	fmul   DWORD PTR [ebp+0x2de5dbf5]
  421b11:	jmp    0x59cbc3d6
  421b16:	jmp    0x3eb5:0xe2ed4218
  421b1d:	push   esi
  421b1e:	push   esp
  421b1f:	cmp    esi,DWORD PTR [edi+0x380c3f54]
  421b25:	adc    DWORD PTR [ebx+0x43],edi
  421b28:	xchg   BYTE PTR [ecx-0x65],bl
  421b2b:	aad    0x75
  421b2d:	jmp    0x38f76f9d
  421b32:	in     al,dx
  421b33:	mov    BYTE PTR [ebp+0x4b],bl
  421b36:	and    cl,BYTE PTR [ebp-0x52]
  421b39:	dec    ebp
  421b3a:	jb     0x421b49
  421b3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b3d:	pop    edx
  421b3e:	xchg   ebx,eax
  421b3f:	push   es
  421b40:	popf   
  421b41:	lock out 0xe1,al
  421b44:	aad    0xb1
  421b46:	sbb    eax,DWORD PTR [ebx-0x444120a3]
  421b4c:	mov    eax,0x9c33c714
  421b51:	pop    ecx
  421b52:	pop    edx
  421b53:	outs   dx,DWORD PTR ds:[esi]
  421b54:	clc    
  421b55:	retf   0x61f4
  421b58:	lds    ecx,FWORD PTR [edx]
  421b5a:	push   edx
  421b5b:	fsub   DWORD PTR [edi+0x4f7252bd]
  421b61:	js     0x421b57
  421b63:	not    DWORD PTR [eax]
  421b65:	inc    esi
  421b66:	add    al,0x94
  421b68:	ins    DWORD PTR es:[edi],dx
  421b69:	aaa    
  421b6a:	shl    DWORD PTR [eax-0x7b],1
  421b6d:	shr    ah,1
  421b6f:	call   0x2482:0x364ad949
  421b76:	mov    eax,ds:0x1bd9b5d9
  421b7b:	shl    BYTE PTR [ecx],cl
  421b7d:	push   esi
  421b7e:	sbb    ebx,DWORD PTR [ecx-0x76d5d768]
  421b84:	pop    ebp
  421b85:	(bad)  
  421b86:	rcl    DWORD PTR [esi],cl
  421b88:	sar    DWORD PTR [ebx+ebp*4],1
  421b8b:	jmp    ecx
  421b8d:	pop    edx
  421b8e:	ret    0x6bfa
  421b91:	xchg   ebp,eax
  421b92:	xchg   edi,eax
  421b93:	jmp    0xf33756cd
  421b98:	jnp    0x421b63
  421b9a:	xchg   ecx,eax
  421b9b:	(bad)  
  421b9c:	pop    ecx
  421b9d:	(bad)  
  421b9f:	sbb    al,0xfe
  421ba1:	mov    ah,0x22
  421ba3:	leave  
  421ba4:	lods   al,BYTE PTR ds:[esi]
  421ba5:	shl    ecx,1
  421ba7:	ror    BYTE PTR [eax],cl
  421ba9:	nop
  421baa:	jecxz  0x421c01
  421bac:	cmp    al,0x9c
  421bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421baf:	add    eax,0x884bce35
  421bb4:	fs cmp eax,0x51428efc
  421bba:	in     al,0xc
  421bbc:	xor    eax,0xed25793
  421bc1:	xchg   edi,eax
  421bc2:	repnz cli 
  421bc4:	or     ax,WORD PTR [ebp-0x66]
  421bc8:	pop    ebp
  421bc9:	dec    eax
  421bca:	(bad)  
  421bcb:	cmp    BYTE PTR [ebx+edx*1],dh
  421bce:	rcl    BYTE PTR [edi],cl
  421bd0:	stos   DWORD PTR es:[edi],eax
  421bd1:	pop    ecx
  421bd2:	xor    ebx,eax
  421bd4:	push   DWORD PTR [eax+0x6a063c9e]
  421bda:	dec    ebx
  421bdb:	or     bh,0xf0
  421bde:	dec    ecx
  421bdf:	call   0xa0ac:0xd2faf4e7
  421be6:	je     0x421b72
  421be8:	push   ebx
  421be9:	cmp    dl,BYTE PTR [edi-0x314ca268]
  421bef:	out    0x38,eax
  421bf1:	push   edx
  421bf2:	and    eax,0x3559f45a
  421bf7:	(bad)  
  421bf8:	dec    ebx
  421bf9:	inc    ebx
  421bfa:	dec    BYTE PTR [esi]
  421bfc:	mov    ds:0x350d4a95,eax
  421c01:	mov    eax,ds:0x37175d4d
  421c06:	jg     0x421bdb
  421c08:	or     cl,BYTE PTR [esi+0x6998ba91]
  421c0e:	pop    ebp
  421c0f:	test   al,0x5d
  421c11:	sub    DWORD PTR [edx],ebx
  421c13:	adc    eax,0x74b84f4
  421c18:	push   edx
  421c19:	pop    ecx
  421c1a:	dec    ebp
  421c1b:	out    dx,al
  421c1c:	jno    0x421c3d
  421c1e:	out    dx,eax
  421c1f:	sub    al,0x83
  421c21:	add    DWORD PTR [esi+0x67],edx
  421c24:	std    
  421c25:	ins    BYTE PTR es:[edi],dx
  421c26:	rcl    DWORD PTR [ecx+0x61],cl
  421c29:	cdq    
  421c2a:	sub    dh,BYTE PTR [edx-0x1c2b9ce]
  421c30:	fwait
  421c31:	sbb    DWORD PTR [ebx+0x4ac61803],eax
  421c37:	dec    cx
  421c39:	pop    ebx
  421c3a:	idiv   DWORD PTR [bp+di-0x3d]
  421c3e:	mov    ch,0xcd
  421c40:	jl     0x421c5d
  421c42:	int    0xd4
  421c44:	sbb    eax,0x26d9aa4b
  421c49:	mov    eax,0x16994b49
  421c4e:	jo     0x421c8d
  421c50:	popf   
  421c51:	mov    ds:0x59506e0d,al
  421c56:	test   ch,bh
  421c58:	ret    
  421c59:	ds in  eax,dx
  421c5b:	cdq    
  421c5c:	es enter 0x78ed,0x5d
  421c61:	sti    
  421c62:	(bad)
  421c65:	and    DWORD PTR [edi+0x77],eax
  421c68:	sub    eax,0x3dfcb65b
  421c6d:	addr16 inc esi
  421c6f:	pop    edx
  421c70:	std    
  421c71:	cmc    
  421c72:	sbb    ebp,DWORD PTR [ebx*2+0x7abe6995]
  421c79:	hlt    
  421c7a:	aad    0xb0
  421c7c:	lods   al,BYTE PTR ds:[esi]
  421c7d:	pop    ecx
  421c7e:	pop    ds
  421c7f:	push   eax
  421c80:	aad    0x1
  421c82:	sahf   
  421c83:	xor    bh,bh
  421c85:	jmp    0x421ca9
  421c87:	ja     0x421cae
  421c89:	(bad)  
  421c8a:	and    ch,BYTE PTR [ebp+esi*1-0x1327219a]
  421c91:	cmp    DWORD PTR [edi],ecx
  421c93:	sbb    cl,BYTE PTR [ecx+edi*8-0x2a325692]
  421c9a:	dec    edx
  421c9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c9c:	jecxz  0x421cc5
  421c9e:	xchg   ecx,eax
  421c9f:	xchg   edi,eax
  421ca0:	lea    esp,[esi+0x72bfcc33]
  421ca6:	sbb    BYTE PTR [ebx*8-0x3e026e56],cl
  421cad:	pop    eax
  421cae:	dec    eax
  421caf:	js     0x421d1e
  421cb1:	mov    ah,0x20
  421cb3:	call   0x3a652b95
  421cb8:	jl     0x421d13
  421cba:	push   ecx
  421cbb:	fdivp  st(4),st
  421cbd:	pop    edi
  421cbe:	loope  0x421d00
  421cc0:	es int 0x8a
  421cc3:	ins    BYTE PTR es:[edi],dx
  421cc4:	mov    ebx,0xbea6a0d4
  421cc9:	pop    eax
  421cca:	jnp    0x421c9c
  421ccc:	pushf  
  421ccd:	pop    ebx
  421cce:	mov    dh,BYTE PTR [ecx+edx*8-0x46b388b7]
  421cd5:	dec    ebp
  421cd6:	dec    ebx
  421cd7:	sbb    BYTE PTR [ebx-0x62b540f4],ah
  421cdd:	mov    dl,0x5d
  421cdf:	rcl    BYTE PTR [esi-0x60f22235],cl
  421ce5:	or     DWORD PTR es:[ebp+ebx*2+0x2ad0ff75],ecx
  421ced:	xor    dl,BYTE PTR [edi]
  421cef:	mov    esp,DWORD PTR [edi+0x59]
  421cf2:	mov    cl,0x2c
  421cf4:	add    al,0x29
  421cf6:	mov    ebx,0xedaf25ca
  421cfb:	hlt    
  421cfc:	pop    esp
  421cfd:	cmp    eax,0x12b094bc
  421d02:	push   es
  421d03:	call   0xcd77e521
  421d08:	xor    BYTE PTR [eax+0x93da0cb],cl
  421d0e:	int3   
  421d0f:	les    edx,FWORD PTR ds:0x452e4af9
  421d15:	xchg   ecx,eax
  421d16:	pop    esp
  421d17:	and    ah,ah
  421d19:	xchg   edi,eax
  421d1a:	leave  
  421d1b:	ret    0x59cd
  421d1e:	sbb    bl,BYTE PTR [eax-0x1f3494f9]
  421d24:	retf   
  421d25:	aas    
  421d26:	dec    ebx
  421d27:	loop   0x421d2e
  421d29:	sub    ecx,eax
  421d2b:	jmp    0x421cdd
  421d2d:	push   0x4ff8d219
  421d32:	add    BYTE PTR gs:[esp+ebx*2],cl
  421d36:	ror    BYTE PTR [eax-0x35b2dba3],1
  421d3c:	sub    al,0x1f
  421d3e:	enter  0xe960,0x55
  421d42:	push   ecx
  421d43:	xor    al,0xc4
  421d45:	fnstenv [edi-0x10]
  421d48:	push   eax
  421d49:	xchg   ecx,eax
  421d4a:	adc    al,0x91
  421d4c:	pop    ebp
  421d4d:	or     al,0xcf
  421d4f:	and    esp,ecx
  421d51:	and    DWORD PTR [edi+0x84c9f52],ebp
  421d57:	shl    BYTE PTR [ebp+0x7a],cl
  421d5a:	sbb    eax,0x1e6bff80
  421d5f:	sahf   
  421d60:	pop    ebp
  421d61:	jne    0x421da6
  421d63:	push   esp
  421d64:	sub    eax,0x5186ee3c
  421d69:	pop    ecx
  421d6a:	test   al,0x24
  421d6c:	iret   
  421d6d:	scas   eax,DWORD PTR es:[edi]
  421d6e:	int    0x75
  421d70:	mov    bl,0x6d
  421d72:	dec    ebx
  421d73:	popf   
  421d74:	pop    eax
  421d75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d76:	xchg   esp,eax
  421d77:	push   0xffffffe9
  421d79:	inc    ecx
  421d7a:	sub    ah,cl
  421d7c:	or     eax,0x5d6d6906
  421d81:	or     eax,0x2823f3f4
  421d86:	dec    ebx
  421d87:	les    esi,FWORD PTR [edi-0x7a]
  421d8a:	jne    0x421daf
  421d8c:	(bad)  
  421d8d:	pop    ds
  421d8e:	rcl    dl,1
  421d90:	add    al,0x3
  421d92:	inc    eax
  421d93:	jne    0x421dde
  421d95:	lahf   
  421d96:	pushf  
  421d97:	fcomp  DWORD PTR [ebp+0x3]
  421d9a:	inc    edx
  421d9b:	push   eax
  421d9c:	sub    BYTE PTR [ebx+0x21],dl
  421d9f:	iret   
  421da0:	(bad)  
  421da1:	pop    ebx
  421da2:	push   edi
  421da3:	fdiv   QWORD PTR [eax-0x62f63f22]
  421da9:	pop    edx
  421daa:	icebp  
  421dab:	call   FWORD PTR [ebp+0x6b]
  421dae:	xlat   BYTE PTR ds:[ebx]
  421daf:	mov    WORD PTR [esp+eax*1+0x312578ba],ds
  421db6:	push   ss
  421db7:	shl    BYTE PTR [esp+ecx*8-0xd1028f8],cl
  421dbe:	aad    0x16
  421dc0:	pop    ecx
  421dc1:	int    0xcd
  421dc3:	push   ebp
  421dc4:	fnstsw WORD PTR [edi-0x79ebcf63]
  421dca:	xor    edx,edx
  421dcc:	adc    ch,BYTE PTR [ecx-0x120b9135]
  421dd2:	stc    
  421dd3:	dec    esp
  421dd4:	pop    ebp
  421dd5:	push   esp
  421dd6:	inc    ebx
  421dd7:	aam    0x40
  421dd9:	clc    
  421dda:	test   DWORD PTR [esi+0x6d5e7710],esp
  421de0:	ret    
  421de1:	aaa    
  421de2:	push   edx
  421de3:	rcl    dl,cl
  421de5:	pop    eax
  421de6:	pop    ecx
  421de7:	xchg   edx,eax
  421de8:	test   edi,esi
  421dea:	dec    edx
  421deb:	push   esp
  421dec:	sahf   
  421ded:	xchg   edi,eax
  421dee:	xchg   edi,eax
  421def:	(bad)  
  421df1:	xchg   edx,eax
  421df2:	mov    ds:0xe02debd2,al
  421df7:	loop   0x421e68
  421df9:	jne    0x421e62
  421dfb:	sub    al,0x5d
  421dfd:	add    DWORD PTR [edx-0xc89a18c],esi
  421e03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e04:	pop    esp
  421e05:	pop    ecx
  421e06:	jg     0x421e04
  421e08:	das    
  421e09:	inc    ebx
  421e0a:	push   0xffffff9b
  421e0c:	lahf   
  421e0d:	cmp    BYTE PTR [edx-0x29],al
  421e10:	push   ecx
  421e11:	ror    DWORD PTR [edx-0x49],0x37
  421e15:	in     al,dx
  421e16:	cdq    
  421e17:	pop    esi
  421e18:	adc    bl,BYTE PTR [esi]
  421e1a:	in     al,dx
  421e1b:	or     DWORD PTR [ebp+0x18],ebx
  421e1e:	inc    eax
  421e1f:	das    
  421e20:	scas   eax,DWORD PTR es:[edi]
  421e21:	jo     0x421e1b
  421e23:	sbb    al,0x65
  421e25:	or     eax,0xf230da28
  421e2a:	jbe    0x421e3d
  421e2c:	int    0x72
  421e2e:	pop    esp
  421e2f:	mov    dl,0x56
  421e31:	and    BYTE PTR ds:0x6309293c,0x2f
  421e38:	push   0x5db0a0b9
  421e3d:	and    DWORD PTR [ecx+0xa24bb7b],ebx
  421e43:	xlat   BYTE PTR ds:[ebx]
  421e44:	test   BYTE PTR [eax-0x31],0xe2
  421e48:	je     0x421ebd
  421e4a:	dec    ecx
  421e4b:	xchg   esi,eax
  421e4c:	cmp    BYTE PTR [edx],cl
  421e4e:	push   esi
  421e4f:	cmp    DWORD PTR [eax-0x58],edi
  421e52:	push   es
  421e53:	ins    BYTE PTR es:[edi],dx
  421e54:	mov    bl,0xc9
  421e56:	jl     0x421e9b
  421e58:	es inc eax
  421e5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e5b:	mov    ebx,0xd35faf4c
  421e60:	jp     0x421e45
  421e62:	inc    eax
  421e63:	(bad)  
  421e64:	xchg   ebp,eax
  421e65:	cmp    DWORD PTR [esp+esi*1-0x72],edx
  421e69:	sahf   
  421e6a:	sbb    cl,ah
  421e6c:	mov    edx,0x193b5edf
  421e71:	inc    esi
  421e72:	and    ah,ch
  421e74:	adc    ch,bh
  421e76:	xor    bl,bh
  421e78:	call   0x83cc693c
  421e7d:	dec    edi
  421e7e:	aaa    
  421e7f:	pop    ds
  421e80:	out    0x46,al
  421e82:	mov    ch,0xd2
  421e84:	fsubr  QWORD PTR [edi+0x5b]
  421e87:	and    BYTE PTR [ebp+edx*1+0x327b8680],ah
  421e8e:	xchg   ecx,eax
  421e8f:	rol    BYTE PTR ds:0x853434b9,cl
  421e95:	iret   
  421e96:	push   0xffffffca
  421e98:	scas   al,BYTE PTR es:[edi]
  421e99:	sbb    DWORD PTR [edx-0x1e49d25a],edi
  421e9f:	(bad)  
  421ea1:	cwde   
  421ea2:	dec    edx
  421ea3:	xlat   BYTE PTR ds:[ebx]
  421ea4:	aam    0x8f
  421ea6:	xchg   BYTE PTR [edi],ch
  421ea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ea9:	test   al,0x5c
  421eab:	ror    cl,cl
  421ead:	jge    0x421edd
  421eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421eb0:	shl    DWORD PTR [edx+0x1f5d694c],cl
  421eb6:	sbb    BYTE PTR [esi+0x30b7cc9e],cl
  421ebc:	push   ebx
  421ebd:	push   esi
  421ebe:	or     dl,dh
  421ec0:	inc    ebx
  421ec1:	pop    esi
  421ec2:	push   esi
  421ec3:	xlat   BYTE PTR ds:[ebx]
  421ec4:	jg     0x421f1f
  421ec6:	adc    al,BYTE PTR [eax+0x214b60be]
  421ecc:	sbb    al,0x4
  421ece:	in     al,0x98
  421ed0:	mov    bh,0x70
  421ed2:	psrld  mm1,QWORD PTR [esi+0x12]
  421ed6:	inc    esi
  421ed7:	mov    eax,ds:0xf03a3d2
  421edc:	pop    edi
  421edd:	sub    bh,BYTE PTR [eax+0x6d8b1df1]
  421ee3:	push   ebx
  421ee4:	jmp    0x1e7b:0xc9ca769b
  421eeb:	adc    ebp,DWORD PTR [ebx+0x61c5cb22]
  421ef1:	and    edi,DWORD PTR [eax-0x6a]
  421ef4:	cwde   
  421ef5:	(bad)  
  421ef6:	rol    BYTE PTR es:0x40b5c5bb,cl
  421efd:	push   ds
  421efe:	pusha  
  421eff:	shr    DWORD PTR [eax+0x24],cl
  421f02:	nop
  421f03:	gs xchg edx,eax
  421f05:	cld    
  421f06:	iret   
  421f07:	enter  0xe254,0x4b
  421f0b:	cmp    eax,0x9a6a4633
  421f10:	repnz arpl di,dx
  421f13:	inc    eax
  421f14:	adc    al,BYTE PTR [esi+0x57]
  421f17:	not    DWORD PTR [edi]
  421f19:	push   edx
  421f1a:	pop    esi
  421f1b:	push   esp
  421f1c:	mov    bh,0x81
  421f1e:	inc    edi
  421f1f:	add    eax,0x284b52bd
  421f24:	dec    edx
  421f25:	mov    BYTE PTR [esi+ebx*2],bh
  421f28:	or     BYTE PTR [esi+0xd],al
  421f2b:	in     al,0xfd
  421f2d:	sti    
  421f2e:	mov    al,ds:0x4aff4d20
  421f33:	adc    bl,BYTE PTR [ecx]
  421f35:	(bad)  
  421f36:	jl     0x421f3b
  421f38:	add    bl,al
  421f3a:	mov    dh,0xfc
  421f3c:	or     BYTE PTR [ebp+0x4b],dl
  421f3f:	fisubr WORD PTR [eax]
  421f41:	adc    dl,BYTE PTR [ebx-0x32]
  421f44:	adc    eax,0x4ada4a86
  421f49:	jmp    0x2e68526
  421f4e:	dec    eax
  421f4f:	fistp  WORD PTR [esp+edi*1]
  421f52:	or     al,0x92
  421f54:	and    al,0x78
  421f56:	rol    DWORD PTR [eax+ebp*8+0x7f0b6742],0xa4
  421f5e:	sbb    al,0x5d
  421f60:	int3   
  421f61:	inc    edi
  421f62:	dec    ebx
  421f63:	std    
  421f64:	iret   
  421f65:	push   ss
  421f66:	adc    DWORD PTR [ecx-0x4676a159],0x40
  421f6d:	aaa    
  421f6e:	push   ebx
  421f6f:	adc    ebx,esi
  421f71:	jns    0x421f44
  421f73:	mov    esi,0xb77d52e7
  421f78:	pop    esp
  421f79:	mov    DWORD PTR [edi-0xa9a780f],ecx
  421f7f:	mov    ah,0x25
  421f81:	xchg   edi,eax
  421f82:	not    edx
  421f84:	sar    dh,0x83
  421f87:	dec    ecx
  421f88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f89:	cmp    DWORD PTR [ebx-0x5229080],edx
  421f8f:	(bad)  
  421f91:	fxam   
  421f93:	jmp    0xe151:0xd3719516
  421f9a:	add    DWORD PTR [ecx+0x67],ebp
  421f9d:	lahf   
  421f9e:	lea    edx,[ecx+ebx*2]
  421fa1:	out    dx,al
  421fa2:	xchg   edx,eax
  421fa3:	inc    esi
  421fa4:	pop    ebp
  421fa5:	aad    0xae
  421fa7:	popf   
  421fa8:	not    esp
  421faa:	test   BYTE PTR [esi+0xbc1548e],bh
  421fb0:	pop    ss
  421fb1:	mov    BYTE PTR [esi+0x636c1af2],0x21
  421fb8:	pop    ebp
  421fb9:	push   cs
  421fba:	in     eax,dx
  421fbb:	and    al,0xc
  421fbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fbe:	push   0x5c
  421fc0:	sub    esi,DWORD PTR [ebp-0x8]
  421fc3:	out    dx,al
  421fc4:	pop    eax
  421fc5:	dec    ebx
  421fc6:	daa    
  421fc7:	shl    dh,cl
  421fc9:	test   DWORD PTR [eax],ebp
  421fcb:	stos   BYTE PTR es:[edi],al
  421fcc:	clc    
  421fcd:	loope  0x421faf
  421fcf:	imul   edx,DWORD PTR [esi-0x69],0xf
  421fd3:	jns    0x421f5b
  421fd5:	cmp    bh,BYTE PTR [ebx-0x37]
  421fd8:	add    ecx,DWORD PTR [bx-0x2133]
  421fdd:	mov    al,0xe6
  421fdf:	ja     0x421fb7
  421fe1:	xchg   BYTE PTR [eax-0x6d470e4e],ah
  421fe7:	pop    eax
  421fe8:	pop    ebp
  421fe9:	aam    0x9f
  421feb:	jmp    FWORD PTR [edi-0x517a3568]
  421ff1:	pop    ecx
  421ff2:	cld    
  421ff3:	icebp  
  421ff4:	or     dh,BYTE PTR [edi+0x5b]
  421ff7:	imul   eax,DWORD PTR [edx],0xcac15659
  421ffd:	(bad)  
  421ffe:	sbb    ah,bl
  422000:	mov    ebp,DWORD PTR [ecx+0x5baa7a0e]
  422006:	mov    eax,0x3efa27eb
  42200b:	ja     0x42204a
  42200d:	in     al,0xa8
  42200f:	and    bl,BYTE PTR [ebp-0x28]
  422012:	mov    ah,0x37
  422014:	mov    cl,BYTE PTR [ebp-0x10]
  422017:	sbb    esi,DWORD PTR [eax+ebx*2-0x69cf38d3]
  42201e:	dec    ebp
  42201f:	inc    edi
  422020:	add    bh,BYTE PTR [esi+0x665d9a60]
  422026:	xchg   DWORD PTR [eax],ebx
  422028:	les    ecx,FWORD PTR [ebx+0x59615e62]
  42202e:	das    
  42202f:	xchg   BYTE PTR [eax],cl
  422031:	push   ds
  422032:	test   eax,0x4a80dca2
  422037:	sub    BYTE PTR [esi-0x5e],ch
  42203a:	outs   dx,BYTE PTR ds:[esi]
  42203b:	mov    esp,0x403f6cdd
  422040:	push   edx
  422041:	pop    ecx
  422042:	sbb    eax,0xaaa42271
  422047:	bound  esp,QWORD PTR [ebx+0x35213962]
  42204d:	adc    cl,BYTE PTR [ebx+0x61]
  422050:	pop    esi
  422051:	outs   dx,BYTE PTR ds:[esi]
  422052:	push   esi
  422053:	inc    esp
  422054:	out    dx,eax
  422055:	jno    0x422067
  422057:	push   0x830c356e
  42205c:	frstor [edx+ebx*2]
  42205f:	ret    
  422060:	mov    dh,0xc4
  422062:	dec    ecx
  422063:	push   es
  422064:	mov    dl,0x2f
  422066:	cmp    al,0x0
  422068:	mov    ebp,0x37d798ef
  42206d:	ds sbb al,0xe4
  422070:	js     0x42207a
  422072:	or     bh,BYTE PTR [ebp+0x53]
  422075:	xchg   edi,eax
  422076:	sub    cl,BYTE PTR gs:[ebx]
  422079:	(bad)  
  42207a:	je     0x422082
  42207c:	out    0x4,al
  42207e:	pusha  
  42207f:	shl    DWORD PTR [edi+0x6626dfe9],cl
  422085:	mov    dl,0xf9
  422087:	inc    ebp
  422088:	pop    esp
  422089:	jp     0x4220aa
  42208b:	cmp    ebx,0x39225872
  422091:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422092:	adc    dl,dl
  422094:	add    DWORD PTR [esi],0x21
  422097:	pop    esp
  422098:	and    eax,0x5d739ab2
  42209d:	in     al,0x87
  42209f:	les    edx,FWORD PTR [ecx]
  4220a1:	ja     0x42202f
  4220a3:	enter  0x59f0,0xe5
  4220a7:	xchg   ebp,eax
  4220a8:	ja     0x422041
  4220aa:	fwait
  4220ab:	push   ebp
  4220ac:	js     0x422120
  4220ae:	sub    al,0x1d
  4220b0:	gs pop ecx
  4220b2:	sbb    DWORD PTR [ecx],esi
  4220b4:	mov    ds:0x75666be6,al
  4220b9:	pop    ecx
  4220ba:	mov    edi,0xcacbe4da
  4220bf:	enter  0x9de1,0x4a
  4220c3:	repnz pop ds
  4220c5:	fadd   st(2),st
  4220c7:	int    0x2
  4220c9:	shl    BYTE PTR [edx+edx*8],1
  4220cc:	add    BYTE PTR [edx],0xdf
  4220cf:	and    al,0xe9
  4220d1:	or     al,0xaf
  4220d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220d4:	xor    eax,0x7eafedf7
  4220d9:	frstor ds:0xc63fbbd2
  4220df:	mov    al,ds:0xb8bbb4be
  4220e4:	mov    WORD PTR [esi+0x6b],ss
  4220e7:	inc    eax
  4220e8:	cli    
  4220e9:	push   ds
  4220ea:	je     0x422156
  4220ec:	cs mov dh,0xc0
  4220ef:	push   edi
  4220f0:	sar    BYTE PTR [esi*2-0x2170a233],cl
  4220f7:	cs jg  0x422156
  4220fa:	xor    al,0xd5
  4220fc:	mov    dl,0x59
  4220fe:	repnz inc eax
  422100:	and    ah,0xfb
  422103:	imul   ebp,ebp,0x5dd0edff
  422109:	lds    esp,FWORD PTR [ebp-0x286a0ccb]
  42210f:	mov    dh,BYTE PTR [ebp+0x5b]
  422112:	cmp    esp,ebp
  422114:	clc    
  422115:	inc    esi
  422116:	(bad)  
  422117:	pop    ebx
  422118:	mov    esp,0xeef37959
  42211d:	xor    edx,DWORD PTR [edx+0x58]
  422120:	inc    eax
  422121:	lds    ebp,FWORD PTR [edi+edi*4]
  422124:	push   esi
  422125:	mov    ebx,0xf26d874b
  42212a:	or     edi,DWORD PTR [ebp-0x4f0c5aa6]
  422130:	inc    ecx
  422131:	pop    ecx
  422132:	pop    esp
  422133:	xor    ecx,eax
  422135:	jns    0x422174
  422137:	xor    ch,0x46
  42213a:	dec    ebx
  42213b:	call   0xbc93:0xe1be84e9
  422142:	icebp  
  422143:	ror    BYTE PTR [esi],cl
  422145:	je     0x42216c
  422147:	mov    BYTE PTR [edi-0x3a],dl
  42214a:	hlt    
  42214b:	mov    eax,ds:0xbded3f53
  422150:	pop    ecx
  422151:	pusha  
  422152:	or     al,0xb2
  422154:	sbb    ah,bl
  422156:	fcom   st(2)
  422158:	ss aaa 
  42215a:	mov    eax,0xbaff2591
  42215f:	mov    edi,0x82fd7a5d
  422164:	iret   
  422165:	sbb    al,0x43
  422167:	xchg   BYTE PTR [edx-0x3b219aa7],al
  42216d:	mov    DWORD PTR [ebp-0x4d],ecx
  422170:	repnz mov ecx,0xf8df955
  422176:	(bad)  
  422177:	mov    ebx,0xa80aaea9
  42217c:	stos   DWORD PTR es:[edi],eax
  42217d:	les    ebx,FWORD PTR [edx+0x43b63fd7]
  422183:	int3   
  422184:	stc    
  422185:	fnstenv [edx+0x3d]
  422188:	mov    ah,0x41
  42218a:	and    dl,BYTE PTR [esi-0x117c39d2]
  422190:	jp     0x422164
  422192:	mov    ch,0x30
  422194:	rcr    DWORD PTR [ecx-0x5e],cl
  422197:	sub    eax,0xde9ad3ff
  42219c:	in     eax,0x23
  42219e:	dec    ebx
  42219f:	imul   BYTE PTR [esi+eiz*8+0x63f420c5]
  4221a6:	stc    
  4221a7:	shr    ah,cl
  4221a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221aa:	add    ah,al
  4221ac:	and    ebx,DWORD PTR [edx-0x48a2af14]
  4221b2:	cmp    esi,DWORD PTR [esi-0x48]
  4221b5:	sahf   
  4221b6:	jmp    0x1e63:0xe54738ea
  4221bd:	fmul   QWORD PTR [ebx-0x19]
  4221c0:	adc    esp,DWORD PTR [eax+0x5f]
  4221c3:	mov    DWORD PTR [edi-0x11],0xf5882a4a
  4221ca:	inc    edi
  4221cb:	mov    dh,0x5b
  4221cd:	xor    DWORD PTR [eax-0x2d],0xa5b61c2e
  4221d4:	ret    0xb002
  4221d7:	or     ebx,DWORD PTR [ebp-0x37]
  4221da:	or     DWORD PTR [ebx+0x71],edx
  4221dd:	add    al,0x7b
  4221df:	popa   
  4221e0:	je     0x42223b
  4221e2:	icebp  
  4221e3:	loopne 0x4221d8
  4221e5:	and    BYTE PTR [ebp+0x4b33b2f1],dl
  4221eb:	mov    BYTE PTR [ecx+ebp*4],bl
  4221ee:	mov    al,0x9b
  4221f0:	in     eax,0x43
  4221f2:	clc    
  4221f3:	in     al,dx
  4221f4:	fwait
  4221f5:	retf   0xd2bf
  4221f8:	xor    BYTE PTR [edx],bh
  4221fa:	punpckhdq mm7,QWORD PTR [ecx]
  4221fd:	mov    eax,ds:0x7c382a4b
  422202:	mov    WORD PTR [edi-0x70],fs
  422205:	mov    DWORD PTR [esi+0x3059a88b],0xcc2fb397
  42220f:	xchg   esi,eax
  422210:	test   ch,bl
  422212:	dec    edx
  422213:	mov    bh,0x5e
  422215:	ins    DWORD PTR es:[edi],dx
  422216:	cld    
  422217:	push   ebx
  422218:	push   ebx
  422219:	idiv   BYTE PTR [eax-0x1a]
  42221c:	xchg   esi,eax
  42221d:	mov    eax,0x4c32d2ac
  422222:	addr16 es in al,dx
  422225:	sbb    DWORD PTR [edi],esp
  422227:	cwde   
  422228:	aaa    
  422229:	inc    esi
  42222a:	repz iret 
  42222c:	in     eax,0x2b
  42222e:	jae    0x4221ee
  422230:	jl     0x42228b
  422232:	fwait
  422233:	mov    bh,0x13
  422235:	xlat   BYTE PTR ds:[ebx]
  422236:	hlt    
  422237:	arpl   WORD PTR [edi+ebx*1-0x7c5579b5],cx
  42223e:	mov    ds:0xf7c4a569,eax
  422243:	rcl    BYTE PTR [edi],cl
  422245:	lock add DWORD PTR [ebx],esi
  422248:	mov    ebp,0x331c2e51
  42224d:	cdq    
  42224e:	dec    edx
  42224f:	push   edi
  422250:	(bad)  
  422252:	adc    al,0x19
  422254:	pop    edi
  422255:	lds    esi,FWORD PTR [ebp-0x2e0b8103]
  42225b:	daa    
  42225c:	out    0xd,eax
  42225e:	retf   
  42225f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422260:	or     eax,0x6e372d09
  422265:	push   cs
  422266:	jmp    0xe7e82d69
  42226b:	popf   
  42226c:	retf   
  42226d:	cli    
  42226e:	inc    eax
  42226f:	shl    dl,cl
  422271:	cmc    
  422272:	or     eax,0xbf6ab1c6
  422277:	arpl   WORD PTR [ebp-0x67],bx
  42227a:	add    bh,BYTE PTR [ebp*8+0x3b06ff69]
  422281:	inc    esi
  422282:	and    DWORD PTR [ebx+eiz*8],esp
  422285:	sub    BYTE PTR [ebp-0xa],bh
  422288:	aas    
  422289:	dec    ecx
  42228a:	push   esp
  42228b:	or     eax,0x827ed835
  422290:	inc    ebx
  422291:	adc    al,0x73
  422293:	xor    ah,BYTE PTR ds:0xe2b63e46
  422299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42229a:	jecxz  0x422290
  42229c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42229d:	xchg   ebp,eax
  42229e:	dec    edx
  42229f:	sub    BYTE PTR [edi+ebx*2-0x23],dh
  4222a3:	xor    al,0x7b
  4222a5:	lds    eax,FWORD PTR [ecx]
  4222a7:	shl    BYTE PTR [eax+edx*2],cl
  4222aa:	mov    dh,ch
  4222ac:	mov    cs:0x232da4c6,al
  4222b2:	inc    ebp
  4222b3:	inc    esi
  4222b4:	jmp    0x9a90:0x9d684150
  4222bb:	inc    ebp
  4222bc:	std    
  4222bd:	scas   al,BYTE PTR es:[edi]
  4222be:	xchg   esp,eax
  4222bf:	shl    BYTE PTR [ebp+0x1e58921a],cl
  4222c5:	fild   QWORD PTR [ebp+0x3c]
  4222c8:	pop    esp
  4222c9:	dec    edi
  4222ca:	aam    0xbe
  4222cc:	sub    BYTE PTR [edx+0x15052da8],ah
  4222d2:	inc    ecx
  4222d3:	rcr    BYTE PTR [edx+0x67],cl
  4222d6:	or     eax,0x4ffb789f
  4222db:	lds    ebx,FWORD PTR [ebp-0x76]
  4222de:	or     BYTE PTR [ebx+0x5c],bh
  4222e1:	mov    ds:0x46307add,al
  4222e6:	ds mov ah,0xc2
  4222e9:	aam    0x63
  4222eb:	add    ecx,DWORD PTR [ecx+0x10294b7a]
  4222f1:	sahf   
  4222f2:	mov    esp,0xa4578cc4
  4222f7:	cld    
  4222f8:	jns    0x4222f0
  4222fa:	mov    ecx,0xa5ee619
  4222ff:	dec    ecx
  422301:	sbb    ebp,ebx
  422303:	fwait
  422304:	in     al,0x1b
  422306:	dec    edx
  422307:	(bad)  
  422308:	dec    edx
  422309:	call   0xecff6c32
  42230e:	jp     0x4222d0
  422310:	inc    ebp
  422311:	pop    ecx
  422312:	dec    ebp
  422313:	mov    ebx,0xd63abe48
  422318:	mov    ecx,0xbc194aad
  42231d:	jle    0x422395
  42231f:	cmp    al,0xf0
  422321:	hlt    
  422322:	pusha  
  422323:	rcl    eax,cl
  422325:	xchg   BYTE PTR [edi],ch
  422327:	aad    0x7f
  422329:	xchg   esp,eax
  42232a:	(bad)  
  42232b:	(bad)  
  42232c:	xchg   ebp,eax
  42232d:	inc    ecx
  42232e:	hlt    
  42232f:	retf   
  422330:	xchg   esp,eax
  422331:	jne    0x42235f
  422333:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422334:	pop    ebp
  422335:	loopne 0x4222d4
  422337:	jl     0x422384
  422339:	in     eax,dx
  42233a:	dec    edx
  42233b:	lods   al,BYTE PTR ds:[esi]
  42233c:	test   eax,0x554202fb
  422341:	mov    BYTE PTR [esi-0x1dd29b2b],dh
  422347:	loop   0x4223be
  422349:	leave  
  42234a:	daa    
  42234b:	idiv   BYTE PTR [edx]
  42234d:	ds cs loopne 0x42232f
  422351:	fld    st(2)
  422353:	aaa    
  422354:	mov    bl,0xee
  422356:	pop    edi
  422357:	push   cs
  422358:	mov    ds,WORD PTR [ecx+0x46]
  42235b:	sub    DWORD PTR [ebx+0x4c],0x2f33a1f6
  422362:	dec    ebx
  422363:	and    edx,DWORD PTR [eax+ebp*1]
  422366:	pop    ss
  422367:	mov    ch,0x44
  422369:	jns    0x4223b9
  42236b:	scas   al,BYTE PTR es:[edi]
  42236c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42236d:	adc    DWORD PTR [esi-0x5302a2c4],edx
  422373:	xchg   esp,eax
  422374:	mov    bl,0x54
  422376:	add    esi,DWORD PTR [ebx]
  422378:	pop    ebp
  422379:	out    0x59,al
  42237b:	xlat   BYTE PTR ds:[ebx]
  42237c:	jmp    0x7f58:0x61e6fdcd
  422383:	jmp    0xb1e5:0x7d6b69e8
  42238a:	cmp    eax,DWORD PTR ds:0x6c4ae6cd
  422390:	repnz ficomp DWORD PTR [edx+0x78]
  422394:	and    BYTE PTR [ebp+0x51fcd6df],ch
  42239a:	or     ebp,ecx
  42239c:	loopne 0x422377
  42239e:	pop    esi
  42239f:	jl     0x42239b
  4223a1:	fstp   st(1)
  4223a3:	xchg   ebp,eax
  4223a4:	pop    esi
  4223a5:	rol    DWORD PTR [eax+0x61579d0b],0x64
  4223ac:	adc    ebp,edx
  4223ae:	fiadd  WORD PTR [edi+0x48]
  4223b1:	enter  0x6225,0x67
  4223b5:	pop    ecx
  4223b6:	push   ss
  4223b7:	push   eax
  4223b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223b9:	inc    edx
  4223ba:	or     ch,BYTE PTR [ebx-0x45]
  4223bd:	ja     0x42240a
  4223bf:	jno    0x422385
  4223c1:	iret   
  4223c2:	mov    edi,eax
  4223c4:	adc    eax,0x66df2302
  4223c9:	jb     0x4223cb
  4223cb:	adc    ebp,DWORD PTR [eax-0x1637b286]
  4223d1:	mov    ebp,0xf05d3874
  4223d6:	bound  ebp,QWORD PTR [eax-0x70360215]
  4223dc:	jecxz  0x422437
  4223de:	or     BYTE PTR [eax-0x18ced205],bh
  4223e4:	pop    esi
  4223e5:	sub    BYTE PTR [ebx-0x60],cl
  4223e8:	xchg   edx,eax
  4223e9:	and    DWORD PTR [ebp+0x5b9b1ba6],esi
  4223ef:	shl    DWORD PTR [eax],cl
  4223f1:	adc    al,0x7c
  4223f3:	or     al,0x95
  4223f5:	rcl    edx,1
  4223f7:	aam    0x5d
  4223f9:	pop    esp
  4223fa:	data16 aaa 
  4223fc:	loope  0x42237e
  4223fe:	sbb    DWORD PTR [ebp-0x13d5a66d],ecx
  422404:	test   bl,bh
  422406:	cmp    al,0x12
  422408:	mov    edi,0xd19d4b39
  42240d:	jo     0x422484
  42240f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422410:	push   esi
  422411:	inc    ecx
  422412:	jae    0x4223e8
  422414:	mov    al,BYTE PTR [esi-0x218d5171]
  42241a:	pusha  
  42241b:	jecxz  0x4223cc
  42241d:	fsub   QWORD PTR [edx]
  42241f:	(bad)  
  422420:	xchg   ebp,eax
  422421:	stc    
  422422:	(bad)  
  422423:	rcr    BYTE PTR [edi+ecx*2],cl
  422426:	data16 scas al,BYTE PTR es:[edi]
  422428:	in     eax,dx
  422429:	jge    0x4223f9
  42242b:	shl    BYTE PTR [edi+0x6a],cl
  42242e:	ror    DWORD PTR [eax*8+0x5d4831f5],1
  422435:	test   al,0xcb
  422437:	jbe    0x4224a8
  422439:	enter  0xf785,0xdf
  42243d:	pop    ecx
  42243e:	add    BYTE PTR [esp+eax*4-0x168ec677],bl
  422445:	sbb    DWORD PTR [ebx-0x7a],ecx
  422448:	pop    esp
  422449:	fcom   QWORD PTR [edi-0x35]
  42244c:	add    DWORD PTR [edx-0x6a],ecx
  42244f:	aad    0x88
  422451:	mov    dl,0xc7
  422453:	and    al,0x4c
  422455:	fld    DWORD PTR [edi+eax*8+0x7e]
  422459:	jmp    0x4224a5
  42245b:	inc    edx
  42245c:	das    
  42245d:	xor    edx,DWORD PTR [eax+0x14b144b2]
  422463:	aad    0x73
  422465:	in     eax,0xfd
  422467:	push   ebx
  422468:	loop   0x422434
  42246a:	fwait
  42246b:	into   
  42246c:	in     eax,0x2
  42246e:	push   cs
  42246f:	jp     0x4224ca
  422471:	test   edi,esp
  422473:	push   cs
  422474:	push   edx
  422475:	sub    edi,ebp
  422477:	mov    ebp,0xac55df60
  42247c:	aam    0x49
  42247e:	sub    BYTE PTR [edx+0x62],cl
  422481:	cdq    
  422482:	pop    edx
  422483:	retf   
  422484:	pop    ebp
  422485:	sub    DWORD PTR [eax],ecx
  422487:	adc    esi,ecx
  422489:	and    al,0xdb
  42248b:	xor    esi,DWORD PTR [edx+0x5d00df71]
  422491:	js     0x422497
  422493:	xchg   edi,eax
  422494:	dec    edi
  422495:	mov    eax,ss
  422497:	fwait
  422498:	pop    ecx
  422499:	mov    cs,esp
  42249b:	in     al,0x9d
  42249d:	(bad)  
  42249e:	call   0x36c9:0x934b1a9d
  4224a5:	sbb    eax,0x1add271c
  4224aa:	loop   0x4224b9
  4224ac:	cmp    esi,0xac72e4a
  4224b2:	jecxz  0x4224ff
  4224b4:	mov    ecx,0xd6d28b4b
  4224b9:	aam    0x5d
  4224bb:	xor    ebx,DWORD PTR [ecx]
  4224bd:	cmp    eax,0x635dbf15
  4224c2:	mov    ebx,0x1a11219d
  4224c7:	idiv   esp
  4224c9:	dec    esi
  4224ca:	sbb    edx,edx
  4224cc:	call   0x3e38:0x64396f74
  4224d3:	bt     DWORD PTR [edx],0x4b
  4224d7:	jnp    0x422555
  4224d9:	ins    BYTE PTR es:[edi],dx
  4224da:	into   
  4224db:	test   DWORD PTR [ecx-0x4a],0x6021d372
  4224e2:	jb     0x42253f
  4224e4:	mov    esp,0x5db5e994
  4224e9:	push   esi
  4224ea:	ucomiss xmm5,DWORD PTR [ebx]
  4224ed:	invd   
  4224ef:	dec    ecx
  4224f0:	inc    ebx
  4224f1:	pop    ecx
  4224f2:	xlat   BYTE PTR ds:[ebx]
  4224f3:	mov    bh,BYTE PTR [ebx+edx*2+0x14]
  4224f7:	in     al,0x8e
  4224f9:	xchg   edi,eax
  4224fa:	push   esp
  4224fb:	fst    QWORD PTR [ebx-0x6e]
  4224fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224ff:	jnp    0x42251c
  422501:	(bad)  
  422502:	retf   
  422503:	dec    edx
  422504:	mov    bh,0x4d
  422506:	jbe    0x4224d8
  422508:	inc    ebp
  422509:	(bad)  
  42250a:	in     al,0x55
  42250c:	test   eax,0x3e4243e4
  422511:	cmc    
  422512:	dec    edx
  422513:	push   esp
  422514:	fsubr  DWORD PTR [ebp+0x55]
  422517:	loope  0x422598
  422519:	addr16 mov bl,0xf8
  42251c:	nop
  42251d:	fs dec ebx
  42251f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422520:	mov    edi,0x7a1397a2
  422525:	or     eax,0x924c514b
  42252a:	mov    eax,ds:0x9c63b05c
  42252f:	ror    BYTE PTR [ebp-0x2636e88c],cl
  422535:	idiv   DWORD PTR ds:[esi-0x33]
  422539:	jns    0x422586
  42253b:	outs   dx,DWORD PTR ds:[esi]
  42253c:	jo     0x4224d6
  42253e:	xor    ebx,DWORD PTR [edx+ebx*2-0x1a2c8b59]
  422545:	ret    0x2857
  422548:	not    DWORD PTR [eax-0x738184ff]
  42254e:	xor    eax,0xf0dabe52
  422553:	pop    esi
  422554:	rcl    DWORD PTR [ebx],1
  422556:	cmp    eax,edx
  422558:	shl    DWORD PTR [ebp+edi*1-0x59],cl
  42255c:	das    
  42255d:	jecxz  0x422569
  42255f:	pop    es
  422560:	cmc    
  422561:	add    cl,BYTE PTR [ebx-0x1e]
  422564:	mov    al,0xd9
  422566:	mov    edx,0x5ca9c98
  42256b:	fidivr DWORD PTR [edx+0xf]
  42256e:	sub    DWORD PTR [esi],esp
  422570:	xchg   esi,eax
  422571:	dec    edi
  422572:	push   esp
  422573:	out    0x83,eax
  422575:	xor    bh,bl
  422577:	push   esp
  422578:	add    ch,BYTE PTR [ebx-0x35]
  42257b:	and    BYTE PTR [ecx],cl
  42257d:	push   cs
  42257e:	cmp    ah,BYTE PTR [eax-0x15753456]
  422584:	pop    edi
  422585:	sub    bl,ch
  422587:	cwde   
  422588:	sub    eax,0xc0dd6836
  42258d:	test   al,0xe5
  42258f:	xchg   edx,eax
  422590:	mov    edx,0x3c4efc8d
  422595:	jns    0x4225e2
  422597:	jp     0x42257f
  422599:	mov    DWORD PTR [eax+eiz*2+0xe],edi
  42259d:	in     al,0x1b
  42259f:	int    0x2
  4225a1:	(bad)  
  4225a2:	pop    ss
  4225a3:	or     DWORD PTR [ebx-0x226d99f4],esi
  4225a9:	popf   
  4225aa:	adc    edi,DWORD PTR [esi+0x20]
  4225ad:	jmp    0x9921d3fc
  4225b2:	xor    esp,esp
  4225b4:	ins    DWORD PTR es:[edi],dx
  4225b5:	lods   al,BYTE PTR ds:[esi]
  4225b6:	dec    ecx
  4225b7:	in     al,0x7d
  4225b9:	loopne 0x42258c
  4225bb:	fadd   QWORD PTR [ebp-0x67]
  4225be:	pusha  
  4225bf:	test   DWORD PTR [ecx],eax
  4225c1:	pop    ss
  4225c2:	sahf   
  4225c3:	sub    al,0x5d
  4225c5:	stos   BYTE PTR es:[edi],al
  4225c6:	outs   dx,BYTE PTR ss:[esi]
  4225c8:	lahf   
  4225c9:	push   cs
  4225ca:	sub    ebp,esi
  4225cc:	fistp  DWORD PTR [ecx-0x3c]
  4225cf:	rcr    cl,1
  4225d1:	dec    esi
  4225d2:	xor    cl,ch
  4225d4:	(bad)  
  4225d5:	retf   0xa14a
  4225d8:	repnz xchg ebx,eax
  4225da:	ret    0x399c
  4225dd:	push   es
  4225de:	xchg   esi,eax
  4225df:	rcr    ebp,1
  4225e1:	dec    ebx
  4225e2:	test   DWORD PTR [edi-0x10],0x872fbd07
  4225e9:	pop    esi
  4225ea:	dec    ebx
  4225eb:	inc    DWORD PTR [ebx-0x31457641]
  4225f1:	pop    ecx
  4225f2:	fwait
  4225f3:	sbb    ecx,DWORD PTR [esi+0x34a26580]
  4225f9:	ror    BYTE PTR [edx+0x72],1
  4225fc:	xchg   edi,eax
  4225fd:	push   esp
  4225fe:	repz xchg esi,eax
  422600:	cmp    BYTE PTR [esi+ebx*8-0x2e],ch
  422604:	pop    edx
  422605:	ss adc al,0x94
  422608:	or     DWORD PTR [ecx],esi
  42260a:	jle    0x4225c7
  42260c:	pop    ebp
  42260d:	out    0xdb,eax
  42260f:	sbb    edi,DWORD PTR [ebx-0x2386d023]
  422615:	pop    ecx
  422616:	int    0x76
  422618:	jmp    0x422609
  42261a:	push   ds
  42261b:	out    dx,al
  42261c:	ret    
  42261d:	cmp    ah,BYTE PTR [edx+0x4146d2c2]
  422623:	or     ebp,DWORD PTR [edx-0x3b]
  422626:	or     ah,BYTE PTR [edi-0x98af3cb]
  42262c:	push   edx
  42262d:	mov    edx,0xe6c56e37
  422632:	mov    edi,0xdcc617a8
  422637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422638:	adc    BYTE PTR [edx],0x5c
  42263b:	shl    BYTE PTR [esp+ebx*8],cl
  42263e:	into   
  42263f:	lea    ebp,[edi+0x5f393951]
  422645:	adc    DWORD PTR [ebp-0x521b29b8],ebp
  42264b:	in     eax,0x3d
  42264d:	imul   esi,DWORD PTR [edi-0x2dbef4e5],0xffffff85
  422654:	push   ecx
  422655:	test   BYTE PTR [edx+0x45],cl
  422658:	nop
  422659:	repz xchg di,ax
  42265c:	pop    ecx
  42265d:	clc    
  42265e:	inc    edi
  42265f:	mov    ebx,ebp
  422661:	adc    BYTE PTR [ecx-0x52],ch
  422664:	xor    dh,BYTE PTR [ebp+ebp*1-0x2e]
  422668:	pop    esp
  422669:	xchg   esp,eax
  42266a:	test   DWORD PTR [ecx],edx
  42266c:	in     eax,0x19
  42266e:	stos   BYTE PTR es:[edi],al
  42266f:	pop    ecx
  422670:	pop    ebp
  422671:	dec    esi
  422672:	sbb    eax,0x23563b78
  422677:	push   es
  422678:	mov    eax,ds:0x3001e559
  42267d:	cdq    
  42267e:	(bad)  
  42267f:	sbb    al,0x1d
  422681:	stos   BYTE PTR es:[edi],al
  422682:	dec    edx
  422683:	push   0x3981a87
  422688:	add    BYTE PTR [ebp+ebp*1-0x5f42e2d],dl
  42268f:	jge    0x42264b
  422691:	pushf  
  422692:	jns    0x42264f
  422694:	jnp    0x422693
  422696:	dec    edx
  422697:	aad    0x3b
  422699:	sub    ch,BYTE PTR [ebx-0x6b]
  42269c:	mov    dl,0xcb
  42269e:	xor    dl,dl
  4226a0:	dec    edx
  4226a1:	mov    al,ds:0xe011c9c4
  4226a6:	push   ebx
  4226a7:	mov    edx,0x1a16b5d
  4226ac:	(bad)  
  4226ae:	clc    
  4226af:	fcomi  st,st(2)
  4226b1:	pop    edx
  4226b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b3:	mov    BYTE PTR [esi+0x5f8caf1],bh
  4226b9:	cmp    eax,0xde562aa7
  4226be:	and    eax,0x3aba6b3b
  4226c3:	pusha  
  4226c4:	fiadd  WORD PTR [ebp-0x4c152a09]
  4226ca:	test   DWORD PTR [edi+ecx*1+0x16],edi
  4226ce:	out    dx,eax
  4226cf:	out    0xce,al
  4226d1:	pop    ss
  4226d2:	dec    ebx
  4226d3:	xchg   ecx,eax
  4226d4:	out    0x34,al
  4226d6:	mov    al,0x5d
  4226d8:	push   edx
  4226d9:	cmp    al,0x88
  4226db:	shl    BYTE PTR [edi+0xb703227],cl
  4226e1:	out    dx,al
  4226e2:	jle    0x422749
  4226e4:	inc    ebx
  4226e5:	sub    al,0xe3
  4226e7:	sub    ebx,DWORD PTR [ecx-0x23]
  4226ea:	push   ebx
  4226eb:	les    esp,FWORD PTR [ecx]
  4226ed:	(bad)  
  4226ee:	sbb    al,0x85
  4226f0:	scas   al,BYTE PTR es:[edi]
  4226f1:	es (bad) 
  4226f4:	mov    esi,0x2d282ec3
  4226f9:	sub    BYTE PTR [esi-0x51],dl
  4226fc:	jle    0x4226a8
  4226fe:	sub    DWORD PTR [edx+0x4b],edx
  422701:	jmp    0x4226ce
  422703:	sbb    DWORD PTR [ebx+edi*1-0x13],ecx
  422707:	shl    BYTE PTR [edx-0x6b],cl
  42270a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42270b:	dec    esi
  42270c:	dec    ecx
  42270d:	mov    ebx,0x15d64e6
  422712:	int3   
  422713:	sub    DWORD PTR [edi+0x794a052a],eax
  422719:	pop    esi
  42271a:	add    DWORD PTR [ebx-0xf],0x3d
  42271e:	dec    esp
  42271f:	xor    bl,dh
  422721:	jbe    0x422780
  422723:	scas   eax,DWORD PTR es:[edi]
  422724:	pop    ebp
  422725:	xor    al,0x6a
  422727:	pop    ds
  422728:	in     eax,dx
  422729:	aad    0x44
  42272b:	lahf   
  42272c:	pop    esp
  42272d:	pop    edx
  42272e:	cmp    eax,0x2cb9a802
  422733:	inc    edx
  422734:	push   edx
  422735:	gs ret 
  422737:	adc    dh,dl
  422739:	out    dx,eax
  42273a:	shr    BYTE PTR [edx+0x6],cl
  42273d:	in     eax,dx
  42273e:	call   0xed0eda15
  422743:	fld    DWORD PTR [ebp+0x5f]
  422746:	sti    
  422747:	into   
  422748:	pop    ebp
  422749:	jno    0x4226cd
  42274b:	(bad)  
  42274c:	adc    DWORD PTR [edx+0x46179810],ecx
  422752:	pop    es
  422753:	test   BYTE PTR ds:0xed480eeb,ch
  422759:	inc    edi
  42275a:	dec    edx
  42275b:	sbb    DWORD PTR [eiz*8+0x653d47e7],esp
  422762:	dec    edi
  422763:	ss xchg ebx,eax
  422765:	mov    ebx,0x4199d2a5
  42276a:	ret    
  42276b:	(bad)
  42276f:	sbb    al,0x5d
  422771:	mov    WORD PTR [edx+0x7f6d0897],gs
  422777:	adc    DWORD PTR [eax+0x37ec3bb1],edi
  42277d:	push   0x3d
  42277f:	rcr    BYTE PTR [edx-0x687b4a60],cl
  422785:	push   ebp
  422786:	push   ecx
  422787:	pop    ds
  422788:	pop    edx
  422789:	les    esi,FWORD PTR cs:[edx+0x27]
  42278d:	add    BYTE PTR [ebx],0xe4
  422790:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422791:	pop    ecx
  422792:	mov    eax,0xa1ad9bc0
  422797:	dec    edx
  422798:	repnz mov eax,0x2e21a24a
  42279e:	jae    0x4227bd
  4227a0:	retf   
  4227a1:	daa    
  4227a2:	pop    ss
  4227a3:	jp     0x4227a0
  4227a5:	pop    ecx
  4227a6:	mov    ebx,0x81d1d7a3
  4227ab:	int3   
  4227ac:	mov    ebp,0x8f344b71
  4227b1:	out    0x1f,eax
  4227b3:	pop    ebx
  4227b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4227b5:	xchg   ebp,eax
  4227b6:	push   ds
  4227b7:	aad    0xe4
  4227b9:	dec    edi
  4227ba:	add    DWORD PTR [edi+0x67],0x5cffc69
  4227c1:	cdq    
  4227c2:	fisttp DWORD PTR [ebp+ebx*2+0x281dc045]
  4227c9:	mov    ch,dh
  4227cb:	jmp    0x9b64:0x43785ae7
  4227d2:	inc    ebx
  4227d3:	adc    cl,ch
  4227d5:	(bad)  
  4227d6:	xor    al,0xd3
  4227d8:	push   edx
  4227d9:	add    dh,0xed
  4227dc:	arpl   dx,si
  4227de:	push   0xbe8c5283
  4227e3:	rcl    BYTE PTR [ecx-0x3d],cl
  4227e6:	aas    
  4227e7:	xlat   BYTE PTR ds:[ebx]
  4227e8:	data16 or al,0xc3
  4227eb:	ds aaa 
  4227ed:	sbb    cl,BYTE PTR [ebx-0x67]
  4227f0:	lahf   
  4227f1:	jmp    0x9705a468
  4227f6:	call   edx
  4227f8:	push   ebp
  4227f9:	adc    ebx,DWORD PTR [edi+eax*1-0x5b6b94bc]
  422800:	outs   dx,BYTE PTR ds:[esi]
  422801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422803:	push   0x66
  422805:	sbb    ecx,ebx
  422807:	mov    ecx,0x428ea3cf
  42280c:	xchg   edx,eax
  42280d:	imul   BYTE PTR [edx+0x55]
  422810:	xor    DWORD PTR [edi-0x20],eax
  422813:	mov    edi,0xa77ae546
  422818:	pop    ebp
  422819:	test   al,0x98
  42281b:	pop    ds
  42281c:	int3   
  42281d:	push   eax
  42281e:	mov    dl,0x39
  422820:	xchg   ecx,eax
  422821:	ja     0x422847
  422823:	cdq    
  422824:	(bad)  [esi+0x34e046e6]
  42282a:	mov    DWORD PTR [si-0xc],edx
  42282e:	push   ss
  42282f:	xor    al,0x18
  422831:	inc    esi
  422832:	mov    ebp,0x50a523ca
  422837:	aad    0x42
  422839:	pop    ebp
  42283a:	and    DWORD PTR [ebx+0x45],edx
  42283d:	test   al,0x9e
  42283f:	loopne 0x42285a
  422841:	mov    dh,0x85
  422843:	xor    bl,BYTE PTR [ebp-0x63]
  422846:	jns    0x42288b
  422848:	jns    0x422836
  42284a:	rcr    DWORD PTR [ebp+0x5172ced0],0x6d
  422851:	pop    ecx
  422852:	shl    BYTE PTR [esi+ecx*4+0x60],0xba
  422857:	jns    0x422818
  422859:	xor    BYTE PTR [ebx+0x66],cl
  42285c:	sti    
  42285d:	dec    esi
  42285e:	sub    al,bh
  422860:	rcl    BYTE PTR [edi],cl
  422862:	mov    bl,dh
  422864:	aad    0x8
  422866:	not    bl
  422868:	aaa    
  422869:	or     edi,0xffffffb5
  42286c:	pop    ds
  42286d:	scas   al,BYTE PTR es:[edi]
  42286e:	jecxz  0x422829
  422870:	pop    ebp
  422871:	hlt    
  422872:	sbb    bl,cl
  422874:	cmp    eax,0x26af9657
  422879:	inc    esi
  42287a:	cli    
  42287b:	dec    edi
  42287c:	fidiv  DWORD PTR [ecx]
  42287e:	jb     0x422807
  422880:	cli    
  422881:	jo     0x4228ce
  422883:	jb     0x422868
  422885:	pop    ss
  422886:	xor    eax,0x16a4fcd1
  42288b:	rcr    DWORD PTR [ecx-0x291f10e2],cl
  422891:	loop   0x422888
  422893:	inc    edx
  422894:	hlt    
  422895:	jb     0x4228ed
  422897:	dec    eax
  422898:	adc    DWORD PTR [ebx+0x4f],0x2e
  42289c:	fldenvw [edx-0x71]
  4228a0:	adc    al,0xb0
  4228a2:	loope  0x422876
  4228a4:	cs mov al,0xe6
  4228a7:	sahf   
  4228a8:	inc    esi
  4228a9:	loop   0x4228f8
  4228ab:	push   0x45c19d6e
  4228b0:	sbb    al,0x6
  4228b2:	or     ecx,edi
  4228b4:	scas   eax,DWORD PTR es:[edi]
  4228b5:	sbb    edi,DWORD PTR [esi-0x4d]
  4228b8:	mov    esi,DWORD PTR [edx-0x4e]
  4228bb:	xchg   edx,eax
  4228bc:	pop    esi
  4228bd:	xor    bl,BYTE PTR [ebp+eiz*4-0x1e]
  4228c1:	pop    ecx
  4228c2:	scas   al,BYTE PTR es:[edi]
  4228c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228c4:	je     0x4228ef
  4228c6:	inc    ecx
  4228c7:	xchg   esi,eax
  4228c8:	in     eax,dx
  4228c9:	cmp    DWORD PTR [ebx-0x77f40c4e],ecx
  4228cf:	or     bl,BYTE PTR [esi+0x840f259]
  4228d5:	dec    esp
  4228d6:	or     al,0xf2
  4228d8:	adc    edx,DWORD PTR [esi]
  4228da:	dec    ebx
  4228db:	mov    ds:0xd78d6ad,eax
  4228e0:	pusha  
  4228e1:	push   cs
  4228e2:	adc    al,0xd2
  4228e4:	inc    edx
  4228e5:	das    
  4228e6:	lahf   
  4228e7:	add    eax,ecx
  4228e9:	loop   0x4228dc
  4228eb:	sub    al,0x5d
  4228ed:	pop    edi
  4228ee:	je     0x4228f1
  4228f0:	in     eax,dx
  4228f1:	hlt    
  4228f2:	sti    
  4228f3:	jo     0x42288a
  4228f5:	push   esi
  4228f6:	leave  
  4228f7:	or     BYTE PTR [eax+0x47],0x99
  4228fb:	mov    ch,0x1d
  4228fd:	jle    0x4228bd
  4228ff:	sbb    BYTE PTR [eax],dh
  422901:	sub    al,0x4b
  422903:	push   esi
  422904:	sti    
  422905:	pop    esi
  422906:	adc    dh,BYTE PTR [eax-0x2c1086ce]
  42290c:	adc    esi,esi
  42290e:	sbb    edx,DWORD PTR [edi-0x7d]
  422911:	inc    edi
  422912:	sub    edx,DWORD PTR [esi-0x27b524d9]
  422918:	or     al,cl
  42291a:	and    DWORD PTR [ebx-0x50],edx
  42291d:	or     al,0xfc
  42291f:	rcl    BYTE PTR [edi+0x33bea624],cl
  422925:	xlat   BYTE PTR ds:[ebx]
  422926:	call   0xe30a8626
  42292b:	pop    edi
  42292c:	push   ecx
  42292d:	and    DWORD PTR [ecx],0x4f
  422930:	adc    eax,0xf4ca7b28
  422935:	shl    BYTE PTR [ecx],cl
  422937:	int3   
  422938:	sbb    al,0xa6
  42293a:	neg    DWORD PTR [edx]
  42293c:	scas   al,BYTE PTR es:[edi]
  42293d:	adc    dl,BYTE PTR [ebx+eax*2-0x2d]
  422941:	out    dx,al
  422942:	test   BYTE PTR [eax+0x24eb16ed],bl
  422948:	loope  0x4229bc
  42294a:	scas   eax,DWORD PTR es:[edi]
  42294b:	jle    0x4228e6
  42294d:	dec    edx
  42294e:	xor    ebx,DWORD PTR [ecx+eax*8]
  422951:	jb     0x422914
  422953:	sub    dh,dl
  422955:	jnp    0x42294d
  422957:	mov    ch,0x5
  422959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42295a:	jnp    0x4228eb
  42295c:	inc    DWORD PTR [ecx+0x7777ea62]
  422962:	pop    ebp
  422963:	daa    
  422964:	push   edi
  422965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422966:	loope  0x4229ce
  422968:	test   DWORD PTR [ebx+0x7b],0x7a44d3
  42296f:	cmp    DWORD PTR [ecx],ebp
  422971:	cli    
  422972:	xchg   edi,eax
  422973:	test   eax,0x6e708f5d
  422978:	pusha  
  422979:	sbb    BYTE PTR [ecx+0x21],dh
  42297c:	jl     0x4229cb
  42297e:	push   edx
  42297f:	shr    ah,cl
  422981:	push   0x73baac5
  422986:	cmp    dh,ah
  422988:	pop    esp
  422989:	jns    0x42299c
  42298b:	jns    0x42297d
  42298d:	lods   al,BYTE PTR ds:[esi]
  42298e:	sub    al,0x8
  422990:	sbb    eax,0xe13ae57a
  422995:	outs   dx,DWORD PTR ds:[esi]
  422996:	dec    ecx
  422997:	lock and DWORD PTR [ecx+ebp*8+0x12],edx
  42299c:	xchg   DWORD PTR [eax-0x7287c87b],ebx
  4229a2:	push   esp
  4229a3:	imul   esi,DWORD PTR cs:[esp+edi*8-0x35b7323],0x4acd5f72
  4229af:	add    al,0xd8
  4229b1:	rcr    DWORD PTR [ecx],cl
  4229b3:	in     eax,0xa3
  4229b5:	sub    edi,DWORD PTR [eax-0x2d]
  4229b8:	pop    ecx
  4229b9:	xor    al,0xed
  4229bb:	mov    dh,0x35
  4229bd:	ds dec edi
  4229bf:	sbb    BYTE PTR [ebp-0x66],0x96
  4229c3:	jmp    0x4307:0x2bc5bb6b
  4229ca:	cmc    
  4229cb:	jp     0x422a05
  4229cd:	mov    ecx,cs
  4229cf:	mov    BYTE PTR [eax+0x791f28dd],cl
  4229d5:	mov    ebx,0x1984b050
  4229da:	loopne 0x422a52
  4229dc:	sub    al,0xe3
  4229de:	ss int3 
  4229e0:	fisub  DWORD PTR [esi]
  4229e2:	mov    ds:0x727e1297,al
  4229e7:	pop    ds
  4229e8:	sub    eax,0x5684bca4
  4229ed:	or     dh,BYTE PTR ds:0xfb2c35d4
  4229f3:	sbb    DWORD PTR [edx-0x7e1b0c74],esi
  4229f9:	jle    0x422a78
  4229fb:	push   esi
  4229fc:	sbb    edi,edi
  4229fe:	push   0x6c
  422a00:	mov    esi,0x4cee4aa1
  422a05:	or     BYTE PTR [ecx],0xc3
  422a08:	sbb    ebp,DWORD PTR [eax]
  422a0a:	outs   dx,BYTE PTR ds:[esi]
  422a0b:	sar    DWORD PTR [ecx+0x25ded64f],cl
  422a11:	jge    0x4229e2
  422a13:	adc    BYTE PTR [ebp+0x61],bl
  422a16:	pop    ds
  422a17:	fadd   DWORD PTR [eax-0x62]
  422a1a:	(bad)  
  422a1b:	or     eax,0xc7e25b2f
  422a20:	mov    al,ds:0xd5a8ef08
  422a25:	fmul   QWORD PTR [eax]
  422a27:	sbb    al,0x51
  422a29:	gs je  0x422a2a
  422a2c:	push   ds
  422a2d:	mov    cl,0xca
  422a2f:	enter  0xea8f,0xda
  422a33:	rcr    BYTE PTR [eax+0x48],cl
  422a36:	cdq    
  422a37:	mov    ds:0x31a9020e,eax
  422a3c:	mov    edi,0x12a04aeb
  422a41:	lea    ebp,[eax]
  422a43:	adc    BYTE PTR [esi+0x65d22130],bl
  422a49:	test   DWORD PTR [ebx-0x2f],0xecc97d8d
  422a50:	pop    esp
  422a51:	dec    eax
  422a52:	push   edx
  422a53:	mov    ds:0x1a76b6d8,eax
  422a58:	dec    ecx
  422a59:	ret    0xd23a
  422a5c:	jge    0x422a1a
  422a5e:	sbb    DWORD PTR [edx+ebx*8],eax
  422a61:	xchg   esp,eax
  422a62:	pushf  
  422a63:	push   ds
  422a64:	pop    ebp
  422a65:	sbb    ch,ch
  422a67:	mov    dl,0xae
  422a69:	nop
  422a6a:	mov    esi,0xb1cfe586
  422a6f:	ror    BYTE PTR [esi-0x639d3745],cl
  422a75:	into   
  422a76:	jb     0x422abf
  422a78:	pop    ebp
  422a79:	mov    bl,0x97
  422a7b:	xchg   edx,eax
  422a7c:	lahf   
  422a7d:	neg    DWORD PTR [ebp-0x43a79b36]
  422a83:	adc    cl,0x4f
  422a86:	and    eax,0x36a5ec27
  422a8b:	mov    ch,0x5d
  422a8d:	jbe    0x422a60
  422a8f:	cli    
  422a90:	push   ebx
  422a91:	stos   DWORD PTR es:[edi],eax
  422a92:	out    dx,al
  422a93:	popa   
  422a94:	jmp    0xabc958f0
  422a99:	cdq    
  422a9a:	ret    
  422a9b:	adc    BYTE PTR [ebp+0x799f874b],dl
  422aa1:	test   eax,0xab8cd365
  422aa6:	adc    BYTE PTR [edi+0x25],0xac
  422aaa:	add    edx,edx
  422aac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422aad:	sub    ebp,DWORD PTR [ebx-0x7dff679f]
  422ab3:	imul   edx,DWORD PTR [esi-0x2d],0x36
  422ab7:	xchg   esi,eax
  422ab8:	push   ecx
  422ab9:	das    
  422aba:	inc    esi
  422abb:	inc    ebp
  422abc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422abd:	icebp  
  422abe:	sbb    esi,DWORD PTR [eax-0x61]
  422ac1:	pop    esp
  422ac2:	jo     0x422b0d
  422ac4:	(bad)  
  422ac5:	or     edx,DWORD PTR [bx+di-0x4c]
  422ac9:	lods   eax,DWORD PTR ds:[esi]
  422aca:	retf   0xaec7
  422acd:	out    dx,al
  422ace:	pop    edx
  422acf:	and    BYTE PTR [ebp-0x15],bl
  422ad2:	out    0x9a,eax
  422ad4:	test   BYTE PTR [eax+0x59c03226],bl
  422ada:	std    
  422adb:	int    0x51
  422add:	(bad)  
  422adf:	loope  0x422b41
  422ae1:	sub    cl,BYTE PTR [ebx+0x69]
  422ae4:	dec    esp
  422ae5:	cld    
  422ae6:	shl    DWORD PTR [edx-0x2c923b3a],0x70
  422aed:	and    ebx,DWORD PTR [edx]
  422aef:	(bad)  
  422af0:	push   edx
  422af1:	dec    eax
  422af2:	cmp    DWORD PTR [edi],ebx
  422af4:	xor    eax,0x184a4a80
  422af9:	mov    al,ds:0xbb5e8aca
  422afe:	xchg   esp,eax
  422aff:	rol    BYTE PTR [ebx],cl
  422b01:	push   edx
  422b02:	mov    BYTE PTR ds:0x7a26c996,cl
  422b08:	pop    esp
  422b09:	iret   
  422b0a:	sbb    ebp,DWORD PTR [ebx]
  422b0c:	mov    ecx,0x31b1a10f
  422b11:	mov    esi,0x4348d2c8
  422b16:	sahf   
  422b17:	mov    dl,0xe8
  422b19:	mov    eax,esi
  422b1b:	adc    BYTE PTR [ebp-0x3e],bl
  422b1e:	or     al,0xe8
  422b20:	inc    esi
  422b21:	out    dx,eax
  422b22:	push   esi
  422b23:	addr16 aas 
  422b25:	pop    ebp
  422b26:	pop    ss
  422b27:	ror    BYTE PTR [edi-0x6e],0xcf
  422b2b:	xchg   ebp,eax
  422b2c:	cmp    al,0xc9
  422b2e:	pop    ds
  422b2f:	push   ebx
  422b30:	cmp    esp,DWORD PTR [esi-0x80]
  422b33:	and    BYTE PTR [ebp+0x7f],bl
  422b36:	or     edi,ecx
  422b38:	and    bh,BYTE PTR [esi-0xd]
  422b3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b3c:	mov    bl,0x58
  422b3e:	cmp    BYTE PTR [ebx-0x12f10218],bh
  422b44:	hlt    
  422b45:	mov    ebp,0x995db79a
  422b4a:	mov    al,ds:0x6923b998
  422b4f:	sub    eax,0x7a494619
  422b54:	jns    0x422b22
  422b56:	inc    esp
  422b57:	outs   dx,BYTE PTR ds:[esi]
  422b58:	fisub  DWORD PTR [ecx+0x4a]
  422b5b:	or     BYTE PTR [edi+0x66270d47],dl
  422b61:	mov    eax,ds:0x7fdd28e9
  422b66:	mov    edx,0x375ec751
  422b6b:	retf   
  422b6c:	call   0x9476:0xea2c676
  422b73:	or     BYTE PTR [edx-0x6e],dl
  422b76:	stos   BYTE PTR es:[edi],al
  422b77:	adc    BYTE PTR [esi+0x11],bl
  422b7a:	inc    eax
  422b7b:	rol    DWORD PTR [ecx],0x9e
  422b7e:	and    al,0xbc
  422b80:	in     al,dx
  422b81:	pop    ecx
  422b82:	or     edx,esi
  422b84:	stos   BYTE PTR es:[edi],al
  422b85:	sbb    dl,BYTE PTR [ebp-0x48]
  422b88:	into   
  422b89:	push   ss
  422b8a:	push   edx
  422b8b:	pop    ds
  422b8c:	test   al,0x5
  422b8f:	jb     0x422b52
  422b91:	mov    ah,0x59
  422b93:	out    0x8d,eax
  422b95:	jo     0x422b66
  422b97:	fsub   st(7),st
  422b99:	aas    
  422b9a:	jl     0x422b85
  422b9c:	xchg   esi,eax
  422b9d:	fidivr DWORD PTR [ecx]
  422b9f:	ret    0x8b75
  422ba2:	shr    ebp,0x5d
  422ba5:	adc    BYTE PTR [esp+edx*8],0xbe
  422ba9:	ds push ecx
  422bab:	jns    0x422b2e
  422bad:	pop    ecx
  422bae:	pusha  
  422baf:	sub    BYTE PTR [edi+0x58],cl
  422bb2:	retf   
  422bb3:	std    
  422bb4:	sbb    eax,0xb0214b8c
  422bb9:	fadd   QWORD PTR [ebp-0x4c]
  422bbc:	div    DWORD PTR [edx+0x6996d3a0]
  422bc2:	push   cs
  422bc3:	add    al,ch
  422bc5:	add    ebx,edx
  422bc7:	stos   BYTE PTR es:[edi],al
  422bc8:	xchg   BYTE PTR [ebp-0x3d],cl
  422bcb:	add    al,BYTE PTR [edi+0x30]
  422bce:	fisubr DWORD PTR [eax+0x5d]
  422bd1:	mov    al,cl
  422bd3:	jb     0x422c2d
  422bd5:	cmc    
  422bd6:	mov    al,0xf5
  422bd8:	mov    DWORD PTR [edx+eiz*2+0x3e395d37],0xd05c4c4a
  422be3:	icebp  
  422be4:	das    
  422be5:	inc    esi
  422be6:	aad    0x48
  422be8:	mov    eax,0x57a0068b
  422bed:	jne    0x422c3a
  422bef:	mov    cl,0xef
  422bf1:	je     0x422bc0
  422bf3:	mov    WORD PTR ss:[edx-0x59a62de9],ss
  422bfa:	aas    
  422bfb:	sbb    eax,0x88e63651
  422c00:	cdq    
  422c01:	push   esi
  422c02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c03:	sar    BYTE PTR [esi],cl
  422c05:	clc    
  422c06:	dec    edi
  422c07:	icebp  
  422c08:	inc    ecx
  422c09:	xlat   BYTE PTR ds:[ebx]
  422c0a:	not    edx
  422c0c:	jo     0x422bb4
  422c0e:	dec    ebx
  422c0f:	sub    bh,cl
  422c11:	jns    0x422b96
  422c13:	aam    0x5d
  422c15:	out    dx,eax
  422c16:	and    al,0x13
  422c18:	dec    eax
  422c19:	cmc    
  422c1a:	xchg   esp,eax
  422c1b:	jo     0x422c59
  422c1d:	inc    esi
  422c1e:	int    0x80
  422c20:	scas   al,BYTE PTR es:[edi]
  422c21:	pop    ebp
  422c22:	xlat   BYTE PTR ds:[ebx]
  422c23:	jae    0x422c0b
  422c25:	push   ebx
  422c26:	dec    ebx
  422c27:	out    dx,al
  422c28:	jbe    0x422bd6
  422c2a:	pop    esi
  422c2b:	or     BYTE PTR es:[esi-0x9],cl
  422c2f:	rol    BYTE PTR [ecx+0x4d20a949],cl
  422c35:	or     DWORD PTR [ebx],esp
  422c37:	mov    esi,0xfc49fea7
  422c3c:	std    
  422c3d:	(bad)  
  422c3e:	dec    edi
  422c3f:	arpl   WORD PTR [ebp-0x5b80e5eb],bx
  422c45:	pop    ecx
  422c46:	test   eax,0x9fe494b5
  422c4b:	cmp    BYTE PTR [ebx+0x4df14ac9],dh
  422c51:	jecxz  0x422c28
  422c53:	xor    BYTE PTR [ecx],0xeb
  422c56:	inc    ebp
  422c57:	rol    al,cl
  422c59:	xor    dh,BYTE PTR [eax+0x41]
  422c5c:	test   DWORD PTR ds:[eax+0x3d4e5d8c],edi
  422c63:	(bad)  
  422c64:	mov    esp,0x5469f00
  422c69:	jo     0x422ca5
  422c6b:	mov    ecx,0x9ead2fdd
  422c70:	out    0xe2,eax
  422c72:	sub    al,0xa8
  422c74:	pop    ebp
  422c75:	cwde   
  422c76:	xchg   ebp,eax
  422c77:	mov    eax,ds:0xb579ca32
  422c7c:	stc    
  422c7d:	pop    eax
  422c7e:	push   ecx
  422c7f:	sub    eax,DWORD PTR [ebx]
  422c81:	adc    eax,0x39ca3582
  422c86:	cli    
  422c87:	sbb    al,0x32
  422c89:	retf   0x842d
  422c8c:	inc    esi
  422c8d:	mov    ebx,DWORD PTR [esi]
  422c8f:	and    bl,BYTE PTR [ebp-0x6c]
  422c92:	jmp    0x422d06
  422c94:	push   ebx
  422c95:	jae    0x422c83
  422c97:	ror    BYTE PTR [edi+0x72],cl
  422c9a:	test   al,0x1e
  422c9c:	out    dx,al
  422c9d:	add    BYTE PTR [ebp-0x10],bl
  422ca0:	inc    esi
  422ca1:	pop    esi
  422ca2:	mov    bh,0xa4
  422ca4:	push   ebx
  422ca5:	(bad)  
  422ca6:	and    al,BYTE PTR [ebx]
  422ca8:	dec    eax
  422ca9:	sbb    edi,DWORD PTR [ebx+esi*4-0x17]
  422cad:	adc    DWORD PTR [ebp-0x4dcf52e],0x5b
  422cb4:	xchg   ecx,eax
  422cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422cb6:	dec    ebp
  422cb7:	lea    ebx,[ebp-0x49]
  422cba:	xor    ebp,eax
  422cbc:	and    ch,BYTE PTR [esi+0x57]
  422cbf:	fs js  0x422d1a
  422cc2:	xchg   esp,eax
  422cc3:	lods   eax,DWORD PTR ds:[esi]
  422cc4:	push   esi
  422cc5:	mov    bl,0x67
  422cc7:	mov    ch,0xa2
  422cc9:	mov    ecx,0x9658e4c4
  422cce:	mov    cl,0xc9
  422cd0:	pop    ebp
  422cd1:	les    edx,FWORD PTR [ebx+edi*8-0x2dc2beea]
  422cd8:	mov    edx,0xf45cce52
  422cdd:	and    cl,BYTE PTR [eax+0xb]
  422ce0:	int    0xc1
  422ce2:	(bad)  [edx-0x3df8dca3]
  422ce8:	mov    BYTE PTR [eax],cl
  422cea:	fnsave [ebx-0x18]
  422ced:	mov    ds:0x6e86d205,eax
  422cf2:	minps  xmm3,XMMWORD PTR [esi+0x58]
  422cf6:	cld    
  422cf7:	outs   dx,DWORD PTR ds:[esi]
  422cf8:	pop    ebp
  422cf9:	scas   eax,DWORD PTR es:[edi]
  422cfa:	out    0x55,al
  422cfc:	lea    edx,[ebp-0x7]
  422cff:	mov    ah,0x20
  422d01:	inc    esi
  422d02:	add    esp,DWORD PTR [ecx-0x110f0f23]
  422d08:	mov    eax,ds:0x23184a7f
  422d0d:	sbb    al,0x71
  422d0f:	test   BYTE PTR [ebp+0x6c],bl
  422d12:	stos   BYTE PTR es:[edi],al
  422d13:	pop    esp
  422d14:	inc    esp
  422d15:	dec    edx
  422d16:	in     eax,0xfd
  422d18:	dec    ebp
  422d19:	cmp    cl,bl
  422d1b:	shr    DWORD PTR [edi+0x1b],cl
  422d1e:	in     eax,dx
  422d1f:	pop    ss
  422d20:	cli    
  422d21:	jbe    0x422d6e
  422d23:	add    al,0x68
  422d25:	out    0xb5,al
  422d27:	je     0x422cae
  422d29:	call   0x2525feb7
  422d2e:	out    0xbc,eax
  422d30:	sub    BYTE PTR [edx],bl
  422d32:	mov    ds:0x650e2ffc,eax
  422d37:	jg     0x422d96
  422d39:	jmp    0x695e33a4
  422d3e:	jae    0x422db1
  422d40:	inc    esi
  422d41:	cwde   
  422d42:	cmp    ah,BYTE PTR [edi+0x12286689]
  422d48:	xlat   BYTE PTR ds:[ebx]
  422d49:	sub    eax,0xf152bf08
  422d4e:	aas    
  422d4f:	(bad)  
  422d50:	ja     0x422d8a
  422d52:	push   edx
  422d53:	mov    edx,0xfed9e913
  422d58:	fstp   st(5)
  422d5a:	dec    edx
  422d5b:	pop    eax
  422d5c:	and    eax,0x45c0ac8d
  422d61:	sti    
  422d62:	dec    edx
  422d63:	(bad)  
  422d65:	cmp    eax,0x6317a71b
  422d6a:	sar    DWORD PTR [esi],1
  422d6c:	scas   al,BYTE PTR es:[edi]
  422d6d:	pop    eax
  422d6e:	into   
  422d6f:	pop    edx
  422d70:	ror    BYTE PTR [esi+edi*2],0x1e
  422d74:	push   esi
  422d75:	mov    ecx,0xfc7935d9
  422d7a:	pop    ebp
  422d7b:	push   edx
  422d7c:	inc    ecx
  422d7d:	aad    0xf8
  422d7f:	pushf  
  422d80:	test   DWORD PTR [eax-0x46],0xa0ae2b47
  422d87:	rcr    ah,cl
  422d89:	sbb    eax,0xebb5b1b5
  422d8e:	test   BYTE PTR [eax-0x440bfda3],dl
  422d94:	pop    edx
  422d95:	xor    al,0xbc
  422d97:	xor    cl,bh
  422d99:	inc    eax
  422d9a:	pop    edi
  422d9b:	mov    ds:0x98cb0676,eax
  422da0:	test   al,0x40
  422da2:	lds    ebp,FWORD PTR [ecx+0x52]
  422da5:	jbe    0x422dcc
  422da7:	adc    dh,BYTE PTR [ebp+0x41]
  422daa:	popa   
  422dab:	pop    ebx
  422dac:	xor    al,0x7d
  422dae:	shl    BYTE PTR cs:0x9496a329,cl
  422db5:	dec    edi
  422db6:	add    bl,BYTE PTR [bx+si+0x13]
  422dba:	mov    al,0x7d
  422dbc:	cs ins DWORD PTR es:[edi],dx
  422dbe:	test   al,0x52
  422dc0:	push   eax
  422dc1:	pusha  
  422dc2:	jle    0x422daf
  422dc4:	test   BYTE PTR [ecx+0x52],bl
  422dc7:	pop    edi
  422dc8:	xor    eax,0xddc23cf6
  422dcd:	stos   DWORD PTR es:[edi],eax
  422dce:	arpl   WORD PTR [ebx+0x2a49e67e],bx
  422dd4:	or     eax,0xbfeddc81
  422dd9:	pop    ecx
  422dda:	mov    eax,ds:0xc0a02a64
  422ddf:	dec    ch
  422de1:	dec    ebp
  422de2:	xchg   DWORD PTR [ebp-0x448032a3],esi
  422de8:	and    al,0x27
  422dea:	lods   al,BYTE PTR ds:[esi]
  422deb:	jbe    0x422e49
  422ded:	push   edx
  422dee:	(bad)  
  422def:	jo     0x422d97
  422df1:	sbb    BYTE PTR [edi],0x7d
  422df4:	lods   eax,DWORD PTR ds:[esi]
  422df5:	inc    esp
  422df6:	sbb    ecx,edx
  422df8:	imul   edi,edx,0x68
  422dfb:	xor    al,0x24
  422dfd:	pushf  
  422dfe:	xchg   edx,eax
  422dff:	xchg   esi,eax
  422e00:	jg     0x422e52
  422e02:	dec    edi
  422e03:	int3   
  422e04:	daa    
  422e05:	inc    edi
  422e06:	fcomp  DWORD PTR [eax-0x23]
  422e09:	lahf   
  422e0a:	fucomp st(2)
  422e0c:	lods   eax,DWORD PTR ds:[esi]
  422e0d:	pop    ecx
  422e0e:	jmp    0xb088053c
  422e13:	xor    eax,0x16de85a3
  422e18:	pop    ebp
  422e19:	xchg   esp,eax
  422e1a:	fwait
  422e1b:	or     BYTE PTR [edi],ah
  422e1d:	push   edi
  422e1e:	and    al,0xd5
  422e20:	neg    DWORD PTR [ecx+0x4]
  422e23:	ins    BYTE PTR es:[edi],dx
  422e24:	(bad)  
  422e25:	sub    eax,0x228ecda0
  422e2a:	dec    ebx
  422e2b:	std    
  422e2c:	jecxz  0x422de1
  422e2e:	lods   eax,DWORD PTR ds:[esi]
  422e2f:	cmp    DWORD PTR [edx+0x73d28acd],ebx
  422e35:	jg     0x422e37
  422e37:	in     al,0x7a
  422e39:	mov    edx,0x2e5d1272
  422e3e:	cdq    
  422e3f:	ror    dh,0xad
  422e42:	dec    edi
  422e43:	xchg   ebp,eax
  422e44:	or     DWORD PTR [edx-0x1],edx
  422e47:	mov    ch,0xaa
  422e49:	pop    esp
  422e4a:	mov    edi,esi
  422e4c:	jmp    0x422ea7
  422e4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e4f:	fimul  WORD PTR [ecx+eax*4]
  422e52:	cdq    
  422e53:	mov    dh,0x5d
  422e55:	push   ds
  422e56:	retf   
  422e57:	mov    ds:0x633a4165,al
  422e5c:	sub    eax,DWORD PTR [esi-0x10]
  422e5f:	cwde   
  422e60:	loopne 0x422e84
  422e62:	mov    ecx,0x4abb18ac
  422e67:	ja     0x422ecd
  422e69:	aad    0xf6
  422e6b:	jne    0x422e7c
  422e6d:	(bad)  
  422e6e:	xchg   esp,eax
  422e6f:	shl    BYTE PTR [edi],cl
  422e71:	into   
  422e72:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e74:	in     eax,dx
  422e75:	fmul   DWORD PTR [ecx-0x7ffba2bd]
  422e7b:	push   ds
  422e7c:	and    ebx,DWORD PTR [ecx]
  422e7e:	jnp    0x422ec6
  422e80:	add    eax,DWORD PTR [ebx+0x57]
  422e83:	(bad)  
  422e84:	ins    BYTE PTR es:[edi],dx
  422e85:	or     dl,BYTE PTR [esi+0x49]
  422e88:	je     0x422e29
  422e8a:	call   0xd452:0x4b554e74
  422e91:	aas    
  422e92:	push   cs
  422e93:	mov    ecx,0xd3d143e5
  422e98:	cmp    al,0xa1
  422e9a:	icebp  
  422e9b:	push   es
  422e9c:	add    esi,edx
  422e9e:	dec    esi
  422e9f:	call   0xca5d:0xdd711bc0
  422ea6:	stc    
  422ea7:	es stos BYTE PTR es:[edi],al
  422ea9:	sub    esi,esp
  422eab:	mov    cl,0xd6
  422ead:	pop    ecx
  422eae:	or     BYTE PTR [edi+0x3e],dh
  422eb1:	stos   DWORD PTR es:[edi],eax
  422eb2:	jl     0x422eff
  422eb4:	(bad)  
  422eb5:	xlat   BYTE PTR ds:[ebx]
  422eb6:	jbe    0x422eba
  422eb8:	xor    eax,0x61d04b29
  422ebd:	test   bh,0x67
  422ec0:	jae    0x422e82
  422ec2:	mov    ecx,0xdd5c713c
  422ec7:	inc    ebp
  422ec8:	sub    dl,al
  422eca:	pop    eax
  422ecb:	push   ebx
  422ecc:	cmp    BYTE PTR [ecx-0xda269c0],0xdf
  422ed3:	jnp    0x422ef9
  422ed5:	test   DWORD PTR [edx-0x14a61199],0x6e442218
  422edf:	cmp    cx,ax
  422ee2:	adc    ch,BYTE PTR [ecx+0x79]
  422ee5:	jo     0x422eb8
  422ee7:	push   ebx
  422ee8:	lods   al,BYTE PTR ds:[esi]
  422ee9:	pop    eax
  422eea:	pop    DWORD PTR [edx-0x699d0923]
  422ef0:	ds pop edi
  422ef2:	ds in  al,dx
  422ef4:	add    ch,BYTE PTR [edi-0x7def8dcf]
  422efa:	cmp    DWORD PTR [ebx+0x5d],ebp
  422efd:	mov    edx,0xe1f60617
  422f02:	inc    ecx
  422f03:	xor    esp,DWORD PTR [edi+0x4953b857]
  422f09:	(bad)  
  422f0a:	sbb    ah,bh
  422f0c:	pushf  
  422f0d:	xchg   ecx,eax
  422f0e:	push   es
  422f0f:	and    bl,BYTE PTR [ebp+0x16]
  422f12:	cmp    BYTE PTR [esi+edx*1+0x23],0x4d
  422f17:	dec    ebp
  422f18:	jnp    0x422f73
  422f1a:	(bad)
  422f1f:	stos   BYTE PTR es:[edi],al
  422f20:	xchg   ebp,eax
  422f21:	mov    ds:0x1aaccc6a,al
  422f26:	jno    0x422f0c
  422f28:	pop    ebp
  422f29:	mov    ebp,0xc10f026b
  422f2e:	lahf   
  422f2f:	outs   dx,DWORD PTR ds:[esi]
  422f30:	sub    al,BYTE PTR [esi-0x30]
  422f33:	je     0x422f5a
  422f35:	ss pop es
  422f37:	pop    ebp
  422f38:	adc    dh,dl
  422f3a:	push   ebp
  422f3b:	rcr    DWORD PTR [ebx-0x1acce02d],1
  422f41:	call   0x2a7403ef
  422f46:	arpl   WORD PTR [ebp+0x7dc859c0],bp
  422f4c:	xchg   edx,eax
  422f4d:	and    cl,BYTE PTR [eax+0x5d7ddace]
  422f53:	stc    
  422f54:	in     eax,dx
  422f55:	xchg   esp,eax
  422f56:	mov    es,WORD PTR [ebx-0xd582ca3]
  422f5c:	dec    DWORD PTR [ecx-0x3d]
  422f5f:	inc    esi
  422f60:	and    eax,0x2a56ed5b
  422f65:	pop    ecx
  422f66:	or     eax,0x69264ed5
  422f6b:	not    BYTE PTR [ebp+ebp*8+0x4a]
  422f6f:	gs ret 
  422f71:	jnp    0x422f87
  422f73:	mov    esp,0xd2d14701
  422f78:	or     eax,0x2234c6c0
  422f7d:	ins    DWORD PTR es:[edi],dx
  422f7e:	jo     0x422f52
  422f80:	pop    ebp
  422f81:	in     al,0xa
  422f83:	mov    ch,BYTE PTR [edx]
  422f85:	pop    ds
  422f86:	in     al,0x6e
  422f88:	pop    ds
  422f89:	push   0x59e2e449
  422f8e:	stc    
  422f8f:	sbb    eax,ebx
  422f91:	dec    esi
  422f92:	loopne 0x42300d
  422f94:	outs   dx,BYTE PTR ds:[esi]
  422f95:	(bad)  
  422f97:	pop    ebp
  422f98:	inc    ebx
  422f99:	stc    
  422f9a:	push   0x76
  422f9c:	xchg   DWORD PTR [ecx-0x48],ebp
  422f9f:	jb     0x422fe0
  422fa1:	mov    bl,0x79
  422fa3:	rcl    DWORD PTR [edx+esi*2-0x76bafc],cl
  422faa:	icebp  
  422fab:	cmp    ebx,DWORD PTR [ebp+0x79]
  422fae:	inc    ecx
  422faf:	and    al,0x24
  422fb1:	jmp    0x422fa9
  422fb3:	inc    eax
  422fb5:	int    0xc8
  422fb7:	rol    ah,cl
  422fb9:	mov    ebp,esp
  422fbb:	dec    edi
  422fbc:	loopne 0x422fd7
  422fbe:	nop
  422fbf:	mov    al,ds:0xb522764e
  422fc4:	inc    edx
  422fc5:	sbb    eax,DWORD PTR [ecx]
  422fc7:	inc    ecx
  422fc8:	inc    ecx
  422fc9:	add    ah,BYTE PTR [ebx+0x2a24c2cd]
  422fcf:	adc    bl,BYTE PTR [edi+0x34]
  422fd2:	xchg   edx,eax
  422fd3:	es pop ds
  422fd5:	inc    esp
  422fd6:	or     ebx,edx
  422fd8:	mov    eax,ds:0x205247b7
  422fdd:	add    esp,DWORD PTR [eax+0x4abcdf69]
  422fe3:	xlat   BYTE PTR ds:[ebx]
  422fe4:	(bad)  
  422fe5:	and    ebp,DWORD PTR [esi]
  422fe7:	jnp    0x422fe3
  422fe9:	lods   eax,DWORD PTR ds:[esi]
  422fea:	mov    dh,BYTE PTR [edx-0x2a4649da]
  422ff0:	repnz push ebp
  422ff2:	sar    BYTE PTR [edx],1
  422ff4:	ret    
  422ff5:	pop    ecx
  422ff6:	(bad)  
  422ff7:	mov    esi,DWORD PTR [edx]
  422ff9:	fcmovnu st,st(7)
  422ffb:	lods   eax,DWORD PTR ds:[esi]
  422ffc:	pop    esp
  422ffd:	mov    esp,0xbf7fe1fa
  423002:	sbb    DWORD PTR [edx],ebx
  423004:	sub    DWORD PTR [edx],ebx
  423006:	mov    ebx,0x9165b5d2
  42300b:	push   edi
  42300c:	push   edx
  42300d:	xor    BYTE PTR [eax+0x6c0b567c],0x79
  423014:	inc    ecx
  423015:	sub    eax,0xe012b74b
  42301a:	jnp    0x422fef
  42301c:	push   esp
  42301d:	add    esi,esi
  42301f:	mov    esp,0xf24a7cc7
  423024:	mov    ds:0xd5dc8afe,al
  423029:	mov    WORD PTR [edx-0x6],fs
  42302c:	push   ss
  42302d:	inc    esi
  42302e:	mov    edi,0xd5e4f9f
  423033:	les    eax,FWORD PTR [ecx]
  423035:	pop    eax
  423036:	pop    ss
  423037:	out    dx,al
  423038:	outs   dx,BYTE PTR ds:[esi]
  423039:	pop    ecx
  42303a:	pusha  
  42303b:	daa    
  42303c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42303d:	xchg   DWORD PTR [eax],ecx
  42303f:	jo     0x42302b
  423041:	pop    ecx
  423042:	mov    ds:0x1f609aac,ax
  423048:	pop    ds
  423049:	es push esi
  42304b:	rol    DWORD PTR [edi],cl
  42304d:	leave  
  42304e:	mov    eax,0x2b0996af
  423053:	imul   edx,DWORD PTR [ebp+0x59],0xffffffc2
  423057:	push   0xf0ab5b3f
  42305c:	(bad)  
  42305d:	paddsb mm7,QWORD PTR ds:0x9b0ff45d
  423064:	adc    al,0xe2
  423066:	fcomp  DWORD PTR [edx-0x2eeb42c0]
  42306c:	sbb    BYTE PTR [ecx+esi*2-0x4d1cbcff],al
  423073:	daa    
  423074:	(bad)  
  423075:	xchg   esi,eax
  423076:	dec    edx
  423077:	repnz scas eax,DWORD PTR es:[edi]
  423079:	pop    ss
  42307a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42307b:	inc    edx
  42307c:	or     DWORD PTR [edx-0xa],esi
  42307f:	ror    DWORD PTR [ebp+0x7b],1
  423082:	adc    DWORD PTR [eax+0x496b8fc6],0x625651fb
  42308c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42308d:	retf   0x5c17
  423090:	out    dx,al
  423091:	jmp    0x59b84e7d
  423096:	cwde   
  423097:	fucomi st,st(7)
  423099:	pop    esi
  42309a:	cmp    BYTE PTR ds:0x34fad466,0xf5
  4230a1:	sbb    eax,0x746d4e54
  4230a6:	sti    
  4230a7:	mul    DWORD PTR [esp+ebp*8]
  4230aa:	jb     0x42308f
  4230ac:	mov    ebp,0xe0b48fb5
  4230b1:	pop    ecx
  4230b2:	mov    esi,ecx
  4230b4:	adc    bh,BYTE PTR es:[eax]
  4230b7:	jl     0x4230bb
  4230b9:	jmp    0x113ed009
  4230be:	jle    0x423049
  4230c0:	leave  
  4230c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230c2:	push   0x967a7093
  4230c7:	mov    ah,0xf8
  4230c9:	pop    ecx
  4230ca:	clc    
  4230cb:	mov    cl,0xd7
  4230cd:	xchg   esp,eax
  4230ce:	and    ebx,DWORD PTR [ebp+eiz*4+0x19]
  4230d2:	push   esi
  4230d3:	nop
  4230d4:	pop    edx
  4230d5:	inc    ebp
  4230d6:	shl    BYTE PTR [ecx],0x83
  4230d9:	mov    eax,ds:0xb1c8a993
  4230de:	pop    esp
  4230df:	inc    edi
  4230e0:	in     eax,0x59
  4230e2:	push   ebx
  4230e3:	lea    edx,[esi-0x4d55effe]
  4230e9:	test   DWORD PTR [ebp+0x20],edx
  4230ec:	push   es
  4230ed:	or     ecx,ecx
  4230ef:	outs   dx,BYTE PTR ds:[esi]
  4230f0:	mov    bh,0xa9
  4230f2:	js     0x4230e5
  4230f4:	add    BYTE PTR [edi-0x11],bl
  4230f7:	sar    BYTE PTR [ebp-0x4a5e7e50],1
  4230fd:	push   ss
  4230fe:	(bad)  
  4230ff:	mov    ch,BYTE PTR [edx]
  423101:	repz bound ecx,QWORD PTR [eax+edx*4]
  423105:	fs push ebp
  423107:	pop    ecx
  423108:	fdiv   DWORD PTR ds:0x99718c88
  42310e:	cmp    dl,BYTE PTR [ebx-0x2d6c448c]
  423114:	and    al,0x78
  423116:	sub    al,0xb9
  423118:	jmp    0x46712ad8
  42311d:	xchg   esp,eax
  42311e:	xor    DWORD PTR [esi],eax
  423120:	push   edx
  423121:	xchg   esi,eax
  423122:	sub    bl,BYTE PTR [ebx-0x3587e48]
  423128:	mov    DWORD PTR [esi-0x2a],eax
  42312b:	clc    
  42312c:	out    0x95,al
  42312e:	stos   BYTE PTR es:[edi],al
  42312f:	shl    BYTE PTR [edi],0xb0
  423132:	popa   
  423133:	neg    DWORD PTR [ebp+0x55]
  423136:	mov    edi,0x4dad99a0
  42313b:	cli    
  42313c:	jecxz  0x423197
  42313e:	retf   0x4658
  423141:	xchg   ebx,eax
  423142:	cmp    BYTE PTR [ecx-0x42],0xcc
  423146:	dec    esi
  423147:	adc    edx,DWORD PTR [eax+0x1d068fcd]
  42314d:	or     bh,BYTE PTR [ecx+ebp*8+0x24c5596e]
  423154:	cmp    BYTE PTR [ebx+ebx*1+0x5645f743],dl
  42315b:	inc    eax
  42315c:	pusha  
  42315d:	cmc    
  42315e:	and    dh,bl
  423160:	ds xchg esi,eax
  423162:	jl     0x4231cc
  423164:	jmp    0x8afc4ac2
  423169:	les    eax,FWORD PTR [edi+0x36]
  42316c:	test   BYTE PTR [edx+0x60839d46],dl
  423172:	push   esi
  423173:	leave  
  423174:	jb     0x4231de
  423176:	clc    
  423177:	jnp    0x42318f
  423179:	jno    0x423106
  42317b:	or     al,0xfc
  42317d:	pop    eax
  42317e:	popf   
  42317f:	push   0x1f
  423181:	add    eax,0x79f60af0
  423186:	inc    eax
  423187:	push   esp
  423188:	pop    ebp
  423189:	inc    ebx
  42318a:	pop    eax
  42318b:	mov    WORD PTR [ebp+0xcb7d2f1],gs
  423191:	adc    bh,BYTE PTR [ebx+0x4c]
  423194:	pop    ebp
  423195:	cmp    dl,dh
  423197:	mov    esi,0xd18db4a0
  42319c:	pop    ebp
  42319d:	mov    ebp,0x1c8aee1a
  4231a2:	out    0x8e,eax
  4231a4:	or     al,0xbe
  4231a6:	stos   BYTE PTR es:[edi],al
  4231a7:	rcr    BYTE PTR [ebx+edi*2-0x7d],cl
  4231ab:	cmp    DWORD PTR [edi+0x5d33d168],ebp
  4231b1:	imul   esi,DWORD PTR [ebx+0x1def8592],0xffffff98
  4231b8:	cdq    
  4231b9:	je     0x42313f
  4231bb:	and    al,0xdd
  4231bd:	mov    ds:0x2012e89c,eax
  4231c2:	enter  0x3dd0,0x88
  4231c6:	push   esi
  4231c7:	pop    es
  4231c8:	xchg   ecx,eax
  4231c9:	mov    al,ds:0xbe1840c5
  4231ce:	or     eax,0xca596e62
  4231d3:	inc    esp
  4231d4:	test   eax,0x6930d67b
  4231d9:	add    al,0x4b
  4231db:	sbb    BYTE PTR [ebp+0x7e884c35],0xbc
  4231e2:	sub    al,0xd2
  4231e4:	and    eax,0xb043d912
  4231e9:	xchg   ebp,eax
  4231ea:	jb     0x423257
  4231ec:	mov    ds:0x5dbfe40d,al
  4231f1:	cmp    al,BYTE PTR [esp+edi*4]
  4231f4:	xor    esp,DWORD PTR [edi+0x5970f218]
  4231fa:	push   es
  4231fb:	inc    edx
  4231fc:	pop    ebx
  4231fd:	inc    esp
  4231fe:	das    
  4231ff:	je     0x423229
  423201:	dec    edx
  423202:	dec    ebx
  423203:	stos   BYTE PTR es:[edi],al
  423204:	adc    al,0x3a
  423206:	inc    esp
  423207:	popa   
  423208:	add    esp,eax
  42320a:	mov    ds:0x7f4a3d2,eax
  42320f:	outs   dx,DWORD PTR ds:[esi]
  423210:	call   0xe3a3:0x4f8a237c
  423217:	bound  ebx,QWORD PTR [ebp-0x57]
  42321a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42321b:	cmp    al,0x75
  42321d:	adc    edi,DWORD PTR [eax]
  42321f:	adc    DWORD PTR [edi-0x3e0da4a7],ebp
  423225:	xor    eax,ecx
  423227:	sbb    dh,BYTE PTR [edx-0x5d0ab546]
  42322d:	jg     0x423253
  42322f:	inc    edx
  423230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423231:	cld    
  423232:	lea    eax,[edx-0xf]
  423235:	inc    edi
  423236:	push   ds
  423237:	scas   al,BYTE PTR es:[edi]
  423238:	jb     0x4232b5
  42323a:	jmp    0x423296
  42323c:	add    cl,BYTE PTR [eax-0x2e]
  42323f:	lds    ebx,FWORD PTR [ebp+0x39]
  423242:	cmc    
  423243:	jno    0x423214
  423245:	pop    eax
  423246:	jp     0x423272
  423248:	cmp    al,BYTE PTR [esi+edx*2-0x7f]
  42324c:	sbb    al,0x6f
  42324e:	mov    edx,eax
  423250:	fdiv   QWORD PTR [ebp+0x53]
  423253:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423254:	pop    ebp
  423255:	ins    BYTE PTR es:[edi],dx
  423256:	push   eax
  423257:	jl     0x4232ce
  423259:	push   cs
  42325a:	test   al,0xdf
  42325c:	cmp    al,0x46
  42325e:	mul    ecx
  423260:	xor    bh,BYTE PTR [ebp-0x6e455a8]
  423266:	mov    ds:0x4b112535,al
  42326b:	jle    0x4232d1
  42326d:	cmp    eax,0x18c4bc24
  423272:	icebp  
  423273:	rcl    BYTE PTR [ebp-0x59],cl
  423276:	adc    DWORD PTR [ebx-0x2f],ebp
  423279:	mov    esi,0xa45c5096
  42327e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42327f:	adc    eax,0x77f4156c
  423284:	dec    ecx
  423285:	or     ebp,ecx
  423287:	rcl    dl,cl
  423289:	stos   BYTE PTR es:[edi],al
  42328a:	cwde   
  42328b:	push   edi
  42328c:	or     eax,0x5dc704d3
  423291:	ss xchg esi,eax
  423293:	jae    0x4232f1
  423295:	sub    eax,0x583e7bd9
  42329a:	and    eax,DWORD PTR [eax]
  42329c:	scas   eax,DWORD PTR es:[edi]
  42329d:	sbb    dl,BYTE PTR [edx+eax*2]
  4232a0:	mov    ebp,0xa55a1a52
  4232a5:	push   edi
  4232a6:	push   ecx
  4232a7:	sub    al,BYTE PTR [eax-0x1e4db30e]
  4232ad:	lock lahf 
  4232af:	ret    
  4232b0:	jmp    0xc059:0x7b25a16e
  4232b7:	xor    ebp,ecx
  4232b9:	in     eax,0xa9
  4232bb:	push   ss
  4232bc:	pop    ebp
  4232bd:	xor    DWORD PTR [esi-0x3c93afb6],ebp
  4232c3:	inc    edi
  4232c4:	push   ecx
  4232c5:	pop    ecx
  4232c6:	or     DWORD PTR es:[edi-0x51],ebp
  4232ca:	repz out 0x2b,al
  4232cd:	sbb    cl,BYTE PTR [ebx+0x30]
  4232d0:	jb     0x42326d
  4232d2:	jne    0x4232f7
  4232d4:	jne    0x4232fd
  4232d6:	mov    edx,0x4b46eafa
  4232db:	dec    eax
  4232dc:	mov    DWORD PTR [ebp-0x18549cd4],ecx
  4232e2:	dec    edx
  4232e3:	sbb    ecx,DWORD PTR [ebx+0x4f]
  4232e6:	inc    edx
  4232e7:	inc    ecx
  4232e8:	out    0x23,eax
  4232ea:	lock fidiv WORD PTR [eax+ecx*4]
  4232ee:	nop
  4232ef:	adc    DWORD PTR ds:0xc5931ae9,ebp
  4232f5:	(bad)  
  4232f7:	sbb    bl,BYTE PTR [ebp+0x5d]
  4232fa:	xchg   edx,eax
  4232fb:	test   al,0x5
  4232fd:	pop    es
  4232fe:	xor    DWORD PTR [ecx-0x6c],esi
  423301:	pop    ecx
  423302:	(bad)  
  423303:	in     eax,0xdd
  423305:	test   BYTE PTR ds:[ebp-0x649a13bf],al
  42330c:	rcr    DWORD PTR [eax-0x342ce9b6],1
  423312:	jmp    0xced2:0xa117e5fb
  423319:	push   edx
  42331a:	aam    0x43
  42331c:	xor    ch,al
  42331e:	mov    edi,0x948864db
  423323:	shl    DWORD PTR [eax],cl
  423325:	stos   DWORD PTR es:[edi],eax
  423326:	inc    ebp
  423327:	xor    DWORD PTR [edx],edx
  423329:	loop   0x423305
  42332b:	lea    edx,[eax-0x297d72a7]
  423331:	cmc    
  423332:	jno    0x4233ad
  423334:	fsub   st,st(6)
  423336:	push   esp
  423337:	adc    al,0x4b
  423339:	inc    ebp
  42333a:	xchg   esp,eax
  42333b:	sub    al,0x1d
  42333d:	xchg   BYTE PTR [ecx+ecx*2],bl
  423340:	or     DWORD PTR [ebp+0x36],esi
  423343:	add    al,0x5d
  423345:	xchg   edx,eax
  423346:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423347:	or     esp,DWORD PTR [eax+0xa]
  42334a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42334b:	xor    BYTE PTR [ebp-0x2d],bl
  42334e:	sbb    BYTE PTR [esi-0x75],0x13
  423352:	pop    esp
  423353:	jge    0x423374
  423355:	imul   DWORD PTR [edx-0x7b]
  423358:	add    ecx,0x47
  42335b:	sbb    dl,BYTE PTR [ecx]
  42335d:	jnp    0x4232f3
  42335f:	add    ebp,DWORD PTR [esi+0x42]
  423362:	inc    ebx
  423363:	aad    0x1
  423365:	ins    DWORD PTR es:[edi],dx
  423366:	out    0xc9,al
  423368:	es push esp
  42336a:	xor    BYTE PTR [eax+0x5d],0xa6
  42336e:	sub    BYTE PTR [esi],dl
  423370:	cmp    al,0xaa
  423372:	and    ecx,DWORD PTR [esi]
  423374:	sti    
  423375:	pop    ecx
  423376:	mov    esp,0x7fe90560
  42337b:	out    0x9a,eax
  42337d:	pop    ecx
  42337e:	lock (bad) 
  423381:	nop
  423382:	int    0x35
  423384:	(bad)  
  423385:	sub    eax,0xd9ec332c
  42338a:	push   ebx
  42338b:	xor    al,BYTE PTR [edi+0x1a]
  42338e:	and    DWORD PTR [eax],esi
  423390:	in     al,0x59
  423392:	loopne 0x423318
  423394:	(bad)  
  423396:	sbb    eax,0x4a8706e0
  42339b:	cmp    al,0x58
  42339d:	cmp    BYTE PTR [eax+0x6c],bh
  4233a0:	push   0x5ca7ec6
  4233a5:	imul   eax,DWORD PTR [edi],0x2b
  4233a8:	out    0x6e,al
  4233aa:	cmp    BYTE PTR [edx-0x635bf358],dl
  4233b0:	pop    ebp
  4233b1:	jmp    0x423366
  4233b3:	adc    BYTE PTR [ecx-0x35],ch
  4233b6:	mov    edx,0x4047a5ac
  4233bb:	mov    esi,DWORD PTR [ebx-0x489354c0]
  4233c1:	jae    0x423383
  4233c3:	aaa    
  4233c4:	pop    ebp
  4233c5:	inc    ebx
  4233c6:	adc    al,0x8c
  4233c8:	lds    edi,FWORD PTR [esi]
  4233ca:	lods   eax,DWORD PTR ds:[esi]
  4233cb:	xor    esp,DWORD PTR [ebx+0x5e]
  4233ce:	adc    eax,0x26066ea0
  4233d3:	and    bl,BYTE PTR [edi]
  4233d5:	pusha  
  4233d6:	mov    ebp,0x717e7149
  4233db:	mov    eax,ds:0x5cdadd5d
  4233e0:	push   ds
  4233e1:	bound  ebp,QWORD PTR [edx+esi*8-0x52]
  4233e5:	cdq    
  4233e6:	sar    DWORD PTR [ecx],1
  4233e8:	ds adc ebp,0x9364d0df
  4233ef:	jg     0x4233c7
  4233f1:	cld    
  4233f2:	dec    edx
  4233f3:	push   edx
  4233f4:	std    
  4233f5:	jae    0x4233f4
  4233f7:	inc    esi
  4233f8:	inc    ebx
  4233f9:	and    ch,dh
  4233fb:	int3   
  4233fc:	push   edi
  4233fd:	inc    edx
  4233fe:	mov    dl,BYTE PTR [edi-0x43]
  423401:	nop
  423402:	or     bl,al
  423404:	mov    dh,0x2f
  423406:	out    0xb1,al
  423408:	pop    ebp
  423409:	xchg   esp,eax
  42340a:	shl    BYTE PTR [eax-0xd31bec8],0x6
  423411:	inc    edi
  423412:	push   eax
  423413:	mov    ds:0x368ab431,eax
  423418:	jo     0x423495
  42341a:	push   ecx
  42341b:	cld    
  42341c:	pop    esp
  42341d:	imul   esp,DWORD PTR [esp+edx*2-0x3a0fc86c],0xd379f12d
  423428:	cmp    BYTE PTR [edi],0x34
  42342b:	mov    ah,BYTE PTR ds:0x5d9e3e66
  423431:	mov    fs,WORD PTR [ecx+eax*8+0x5]
  423435:	push   0xb3d07fdf
  42343a:	popa   
  42343b:	rcl    DWORD PTR [esi],cl
  42343d:	scas   al,BYTE PTR es:[edi]
  42343e:	jecxz  0x4233fc
  423440:	jecxz  0x4233dc
  423442:	retf   0x5d4f
  423445:	xor    al,0x24
  423447:	push   ebx
  423448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423449:	mov    bl,0xe6
  42344b:	mov    eax,ds:0x15825958
  423450:	mov    ds,WORD PTR [eax]
  423452:	js     0x42345a
  423454:	sub    edi,DWORD PTR [edx+0x61c53350]
  42345a:	push   ds
  42345b:	shr    DWORD PTR [ebx-0x42cbabc0],cl
  423461:	sahf   
  423462:	mov    esp,0xd0e6f0fc
  423467:	stos   BYTE PTR es:[edi],al
  423468:	fdiv   st,st(2)
  42346a:	dec    edx
  42346b:	xor    BYTE PTR [ebp+0x32],0x68
  42346f:	dec    ecx
  423470:	pop    ebp
  423471:	sbb    BYTE PTR [esi+ebx*1-0x675bd36d],bl
  423478:	outs   dx,BYTE PTR ds:[esi]
  423479:	pop    ecx
  42347a:	mov    esi,0xfb256f11
  42347f:	push   esi
  423480:	dec    ebp
  423481:	ror    BYTE PTR [ecx+0x3f],cl
  423484:	ss jl  0x42341a
  423487:	(bad)  
  423488:	(bad)  
  423489:	neg    BYTE PTR [esi+ebp*2]
  42348c:	mov    ah,0x59
  42348e:	ins    DWORD PTR es:[edi],dx
  42348f:	adc    esp,edx
  423491:	jns    0x423471
  423493:	adc    bl,bl
  423495:	ins    BYTE PTR es:[edi],dx
  423496:	dec    ebx
  423497:	push   0xffffff89
  423499:	cdq    
  42349a:	loop   0x423453
  42349c:	push   ebp
  42349d:	xor    dl,BYTE PTR [ecx+0x2159e8ba]
  4234a3:	nop
  4234a4:	push   ss
  4234a5:	cdq    
  4234a6:	imul   ebx,esi,0xffffffcf
  4234a9:	into   
  4234aa:	stos   BYTE PTR es:[edi],al
  4234ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4234ac:	shl    dh,0x4a
  4234af:	test   ebx,ebp
  4234b1:	retf   
  4234b2:	mov    esi,0xf8f9b6c4
  4234b7:	mov    dl,0x57
  4234b9:	pop    ecx
  4234ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234bb:	fwait
  4234bc:	sti    
  4234bd:	mov    bh,0xf7
  4234bf:	add    BYTE PTR [ecx-0x20],ah
  4234c2:	dec    edx
  4234c3:	cld    
  4234c4:	ret    0x18a0
  4234c7:	lock xchg esp,eax
  4234c9:	pop    esi
  4234ca:	psrld  mm7,QWORD PTR [ebx-0x6a]
  4234ce:	imul   edx,DWORD PTR [esi-0x3ef6a273],0x23b32d5d
  4234d8:	sbb    DWORD PTR [ebp+0x568a482b],edx
  4234de:	out    0x45,al
  4234e0:	repnz cdq 
  4234e2:	or     edx,DWORD PTR [eax-0x7a]
  4234e5:	leave  
  4234e6:	push   ss
  4234e7:	aas    
  4234e8:	push   edx
  4234e9:	ja     0x42346d
  4234eb:	idiv   BYTE PTR [ebp-0x1e7dac1b]
  4234f1:	xchg   BYTE PTR [ebp+edx*8+0x30],cl
  4234f5:	sub    DWORD PTR [esi],esp
  4234f7:	cli    
  4234f8:	lock cdq 
  4234fa:	pop    ebp
  4234fb:	nop
  4234fc:	dec    esi
  4234fd:	or     ecx,DWORD PTR [ebx+0x2f]
  423500:	push   ds
  423501:	add    eax,0x15ee7ffc
  423506:	call   0x13d3:0x73c170e1
  42350d:	fidivr DWORD PTR [edi+0x55d10c97]
  423513:	stc    
  423514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423515:	out    dx,al
  423516:	fwait
  423517:	sub    BYTE PTR [edx-0x41aa850a],ah
  42351d:	dec    eax
  42351e:	fadd   QWORD PTR gs:[esi]
  423521:	loopne 0x4234b5
  423523:	xchg   ebp,eax
  423524:	jb     0x4234f8
  423526:	ins    BYTE PTR es:[edi],dx
  423527:	mov    bl,0x6d
  423529:	mov    bh,0xfe
  42352b:	call   0x2227:0xd23a9f78
  423532:	mov    ebp,0x3128c40f
  423537:	ror    BYTE PTR [ebp+0x1e3f19e0],cl
  42353d:	jecxz  0x423522
  42353f:	mov    al,ds:0xf925005d
  423544:	repz dec esi
  423546:	and    al,0x15
  423548:	xor    BYTE PTR [edx],dh
  42354a:	mov    ss,edx
  42354c:	push   edi
  42354d:	loope  0x42357a
  42354f:	jmp    0x502f5a07
  423554:	pop    ebp
  423555:	jle    0x4234f2
  423557:	daa    
  423558:	(bad)  
  423559:	into   
  42355a:	inc    ecx
  42355b:	cmp    eax,0x722959d4
  423560:	xchg   esi,eax
  423561:	mov    DWORD PTR [ecx],edi
  423563:	dec    ecx
  423564:	dec    edi
  423565:	dec    edx
  423566:	dec    ebx
  423567:	xchg   ebx,eax
  423568:	test   eax,0x86777862
  42356d:	mov    ch,0x76
  42356f:	std    
  423570:	jg     0x42351d
  423572:	dec    edx
  423573:	pcmpeqd mm2,QWORD PTR [ebp+0x64]
  423577:	or     ch,BYTE PTR [edi-0x36]
  42357a:	dec    edx
  42357b:	repnz (bad) 
  42357d:	jg     0x423523
  42357f:	ins    DWORD PTR es:[edi],dx
  423580:	sbb    al,0xd9
  423582:	adc    eax,0xf3bb31da
  423587:	out    0x40,al
  423589:	gs dec ebx
  42358b:	fld    DWORD PTR [esi]
  42358d:	xchg   esp,eax
  42358e:	jecxz  0x423540
  423590:	sar    BYTE PTR [edx],1
  423592:	add    dl,dl
  423594:	jmp    FWORD PTR [ecx-0x4d]
  423597:	sahf   
  423598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423599:	(bad)  
  42359a:	int3   
  42359b:	arpl   WORD PTR [ebp+0x4c],bx
  42359e:	(bad)  
  42359f:	add    ax,0xbe0e
  4235a3:	imul   esp,DWORD PTR [ecx+0x59],0xffffffba
  4235a7:	fsubr  st(7),st
  4235a9:	sbb    al,0xb1
  4235ab:	cmp    al,0x9d
  4235ad:	outs   dx,BYTE PTR ds:[esi]
  4235ae:	addr16 pop esi
  4235b0:	aas    
  4235b1:	or     DWORD PTR [edx-0x27],0xffffffdf
  4235b5:	or     ecx,DWORD PTR [ecx+edi*4]
  4235b8:	mov    bl,0x79
  4235ba:	xchg   edi,eax
  4235bb:	fistp  WORD PTR [esi-0x3b]
  4235be:	les    edx,FWORD PTR [edx+0x2b608f61]
  4235c4:	push   0xffffff84
  4235c6:	push   eax
  4235c7:	mov    cl,BYTE PTR [esi-0x2b]
  4235ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235cb:	repnz xchg edi,eax
  4235cd:	fnstcw WORD PTR ds:0xc45d3aee
  4235d3:	push   0x528d33a9
  4235d8:	call   0x3084:0x5d61f0c3
  4235df:	pop    ds
  4235e0:	in     al,0xfa
  4235e2:	pop    eax
  4235e3:	inc    esp
  4235e4:	mov    ds:0xc8fe73a1,al
  4235e9:	pusha  
  4235ea:	dec    ebx
  4235eb:	sub    DWORD PTR [esi],ecx
  4235ed:	mov    edx,0x3177ae55
  4235f2:	sub    al,0x39
  4235f4:	call   0x576e:0xfc240259
  4235fb:	call   0x595f:0xfba26568
  423602:	fcmovu st,st(7)
  423604:	std    
  423605:	mov    al,ds:0x2946fd1a
  42360a:	pop    ecx
  42360b:	mov    gs,WORD PTR [edi+0x1a]
  42360e:	js     0x42367f
  423610:	xchg   edx,eax
  423611:	ja     0x423668
  423613:	ror    DWORD PTR [ecx],cl
  423615:	out    dx,eax
  423616:	fdiv   st(4),st
  423618:	retf   0x4418
  42361b:	adc    ecx,DWORD PTR [ecx+edx*4]
  42361e:	not    DWORD PTR [edx-0x4fb4ab2b]
  423624:	or     eax,esi
  423626:	pop    edx
  423627:	leave  
  423628:	pop    ds
  423629:	retf   0xc23f
  42362c:	fs pop ecx
  42362e:	daa    
  42362f:	mov    al,ds:0x7ff4b935
  423634:	mov    eax,0xf94b4aa9
  423639:	xor    eax,0x999b3492
  42363e:	mov    edx,ss
  423640:	jg     0x42362a
  423642:	fsubr  QWORD PTR [eax+0x72f14d0b]
  423648:	jnp    0x42366b
  42364a:	xor    al,0x55
  42364c:	int    0x2a
  42364e:	xor    cl,BYTE PTR [ecx+0x7696030d]
  423654:	cld    
  423655:	push   esi
  423656:	lds    ebp,FWORD PTR [eax]
  423658:	(bad)  
  423659:	cdq    
  42365a:	cli    
  42365b:	pop    edx
  42365c:	xchg   BYTE PTR [ebx],bh
  42365e:	in     al,0xf1
  423660:	pop    ebp
  423661:	loop   0x4236a7
  423663:	xchg   BYTE PTR [edx-0x286cbbae],ah
  423669:	pop    eax
  42366a:	call   0x8917:0xb315392a
  423671:	lods   eax,DWORD PTR ds:[esi]
  423672:	je     0x42366b
  423674:	outs   dx,BYTE PTR ds:[esi]
  423675:	adc    DWORD PTR [esi],ebp
  423677:	add    al,0xc4
  423679:	fldcw  WORD PTR [eax]
  42367b:	and    DWORD PTR [edx],eax
  42367d:	pop    edi
  42367e:	repnz cld 
  423680:	push   esp
  423681:	xchg   bl,cl
  423683:	push   ecx
  423684:	mov    ebx,ss
  423686:	mov    ebp,0xc5bd97c3
  42368b:	mov    ds,WORD PTR [ebp-0x18]
  42368e:	add    DWORD PTR [ebp+0x334e0975],edx
  423694:	ss inc esi
  423696:	stos   DWORD PTR es:[edi],eax
  423697:	mov    BYTE PTR ds:0x6342d55d,ah
  42369d:	add    ecx,DWORD PTR [ebx-0x6]
  4236a0:	dec    edx
  4236a1:	push   esp
  4236a2:	out    dx,al
  4236a3:	sub    al,BYTE PTR [esp+ecx*2-0x4a852dad]
  4236aa:	push   0xffffffce
  4236ac:	add    ebx,0xffffffe4
  4236af:	mov    al,0x5c
  4236b1:	in     eax,dx
  4236b2:	lahf   
  4236b3:	in     eax,0xf0
  4236b5:	cli    
  4236b6:	inc    ebp
  4236b7:	pop    edi
  4236b8:	jge    0x423651
  4236ba:	sbb    al,0xac
  4236bc:	xchg   BYTE PTR [ebx],dl
  4236be:	es nop
  4236c0:	es xchg ecx,eax
  4236c2:	push   0x50
  4236c4:	scas   eax,DWORD PTR es:[edi]
  4236c5:	adc    DWORD PTR [ebx-0x22],0x52cd1174
  4236cc:	jge    0x423677
  4236ce:	test   BYTE PTR [esi],dh
  4236d0:	lahf   
  4236d1:	icebp  
  4236d2:	mov    dh,0xfb
  4236d4:	or     BYTE PTR [edi],bh
  4236d6:	retf   
  4236d7:	or     DWORD PTR [ecx+ecx*4+0x1d304b8d],ebx
  4236de:	inc    edx
  4236df:	mov    DWORD PTR [edi],eax
  4236e1:	test   BYTE PTR [edx+0x1f077fa3],0x83
  4236e8:	sbb    al,0x55
  4236ea:	xor    ebp,ebp
  4236ec:	jecxz  0x4236c7
  4236ee:	dec    esi
  4236ef:	sub    BYTE PTR [bx+0x51d3],dl
  4236f4:	pop    esp
  4236f5:	push   ecx
  4236f6:	or     ebx,ebx
  4236f8:	sti    
  4236f9:	jmp    0x9e7b9cea
  4236fe:	pop    ds
  4236ff:	cmp    bl,BYTE PTR [eax+0x5d886b01]
  423705:	xchg   esp,eax
  423706:	push   0x93ce3adb
  42370b:	mov    WORD PTR [ecx+0x5d2d890e],cs
  423711:	test   DWORD PTR [ebp+0x3e],ecx
  423714:	call   0x1993:0x19bfa183
  42371b:	les    ecx,FWORD PTR [esi+0x46]
  42371e:	data16 (bad) 
  423720:	sbb    DWORD PTR [eax],esp
  423722:	jge    0x42376e
  423724:	(bad)  
  423725:	in     eax,dx
  423726:	dec    ebx
  423727:	inc    ebp
  423728:	fsub   QWORD PTR [eax-0x46]
  42372b:	and    BYTE PTR [eax],al
  42372d:	neg    BYTE PTR [esi+0x37]
  423730:	loope  0x42378b
  423732:	jecxz  0x423746
  423734:	fnstsw WORD PTR [eax+0x4a752585]
  42373a:	dec    ebx
  42373b:	cmp    al,0xf7
  42373d:	(bad)  
  42373e:	and    BYTE PTR [edx+0x3f6c893a],cl
  423744:	test   DWORD PTR [ecx-0x6286c0d8],ebx
  42374a:	inc    eax
  42374b:	push   dx
  42374d:	push   eax
  42374e:	pushf  
  42374f:	push   edi
  423750:	cmp    edx,DWORD PTR [edx]
  423752:	mov    DWORD PTR [edx-0x2d27de8d],ebp
  423758:	cmc    
  423759:	sub    ebp,ebp
  42375b:	jecxz  0x423720
  42375d:	std    
  42375e:	sub    eax,0x3ddc5da8
  423763:	iret   
  423764:	mov    eax,0x96cd9a76
  423769:	pop    esi
  42376a:	push   0xffffffe5
  42376c:	jo     0x423701
  42376e:	xchg   ecx,eax
  42376f:	xor    al,BYTE PTR [edx+0x5c468808]
  423775:	(bad)  
  423776:	dec    ebp
  423777:	rcr    BYTE PTR [edi],1
  423779:	ja     0x423737
  42377b:	sbb    BYTE PTR ds:0x9cc40eb,0xea
  423782:	mov    al,ds:0x4a6654a2
  423787:	in     al,0xfd
  423789:	leave  
  42378a:	cmp    ebp,DWORD PTR [edi+0x2c4aa0ed]
  423790:	bound  bx,DWORD PTR [edi+esi*2]
  423794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423795:	sub    eax,DWORD PTR [esi]
  423797:	shr    BYTE PTR [edx*4-0x2aa3e4fe],cl
  42379e:	ret    0xe5b5
  4237a1:	inc    edi
  4237a2:	sub    eax,0x2bd57379
  4237a7:	lea    ebx,[ebp-0x44]
  4237aa:	sub    BYTE PTR [edi-0x7f],cl
  4237ad:	lea    esi,[ecx+0x4b50d9fb]
  4237b3:	xchg   DWORD PTR [edx-0x5265fc3f],ebx
  4237b9:	mov    eax,0x835d60ed
  4237be:	push   esp
  4237bf:	pop    es
  4237c0:	dec    eax
  4237c1:	cmp    al,BYTE PTR [eax-0x1fb9f98f]
  4237c7:	mov    bh,0x49
  4237c9:	pop    ds
  4237ca:	jne    0x42374d
  4237cc:	inc    ecx
  4237cd:	jmp    0xe9bf:0xb58dac4a
  4237d4:	clc    
  4237d5:	sbb    eax,0x7254d28b
  4237da:	jmp    0x26bcdd1c
  4237df:	inc    edx
  4237e0:	pop    ebp
  4237e1:	sub    eax,0xaa389771
  4237e6:	jne    0x42380e
  4237e8:	xor    eax,0x2f1bd17c
  4237ed:	imul   esi,DWORD PTR [edx],0xffffffd5
  4237f0:	cdq    
  4237f1:	repz test al,0x9c
  4237f4:	frstor [ebp+0x61]
  4237f7:	mov    al,0x1d
  4237f9:	in     al,dx
  4237fa:	dec    ecx
  4237fb:	hlt    
  4237fc:	jno    0x423795
  4237fe:	sub    ah,BYTE PTR [ebx-0x23]
  423801:	pop    esp
  423802:	add    BYTE PTR [edi-0x23],0x59
  423806:	pop    eax
  423807:	data16 lods al,BYTE PTR ds:[esi]
  423809:	test   DWORD PTR [ecx],esp
  42380b:	jnp    0x4237fa
  42380d:	jg     0x42385a
  42380f:	adc    eax,0x62801041
  423814:	or     al,0x1e
  423816:	push   edx
  423817:	aad    0xe3
  423819:	aad    0x36
  42381b:	dec    esp
  42381c:	mov    bh,0x9
  42381e:	jmp    0x4237f7
  423820:	adc    BYTE PTR [ebx],ah
  423822:	adc    esp,DWORD PTR [edx]
  423824:	test   al,0x59
  423826:	test   DWORD PTR [ebp-0x141b51dc],ebx
  42382c:	inc    esi
  42382d:	stc    
  42382e:	xchg   esi,eax
  42382f:	jl     0x423831
  423831:	jae    0x4237e5
  423833:	jne    0x423812
  423835:	in     eax,0x3b
  423837:	xchg   ebp,eax
  423838:	and    eax,eax
  42383a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42383c:	xor    ebp,DWORD PTR [ebx+0x4b]
  42383f:	arpl   WORD PTR [eax],bp
  423841:	adc    al,0x6a
  423843:	xor    bl,BYTE PTR [ebx-0x74]
  423846:	in     eax,0xd2
  423848:	sbb    al,0x7d
  42384a:	ret    
  42384b:	mov    eax,0x64c23a62
  423850:	pop    ebp
  423851:	push   ebp
  423852:	mov    eax,ds:0x4d03751e
  423857:	push   edx
  423858:	xchg   ebp,eax
  423859:	pop    ecx
  42385a:	xor    BYTE PTR [ecx],bh
  42385c:	ins    BYTE PTR es:[edi],dx
  42385d:	fild   DWORD PTR [eax-0x19c019e7]
  423863:	lds    ebx,FWORD PTR [ebp+0x73]
  423866:	cmp    edx,DWORD PTR [ebp+eiz*2-0xa]
  42386a:	jb     0x423895
  42386c:	jle    0x4238c7
  42386e:	mov    al,0x48
  423870:	scas   eax,DWORD PTR es:[edi]
  423871:	xlat   BYTE PTR ds:[ebx]
  423872:	dec    edi
  423873:	ins    BYTE PTR es:[edi],dx
  423874:	inc    esp
  423875:	sbb    ebx,0xffffffca
  423878:	outs   dx,BYTE PTR ds:[esi]
  423879:	and    DWORD PTR [ebx+0x781b3de6],esp
  42387f:	adc    dh,bh
  423881:	mov    cl,0xb4
  423883:	and    eax,0xf856a3bc
  423888:	fcmovne st,st(0)
  42388a:	retf   0x521c
  42388d:	cwde   
  42388e:	fild   DWORD PTR [eax+ebp*2+0x1c]
  423892:	dec    ebx
  423893:	xor    al,BYTE PTR [eax-0x1614ee5b]
  423899:	ss fcom st(2)
  42389c:	mov    bl,bl
  42389e:	cdq    
  42389f:	mov    esi,DWORD PTR [edi-0x2]
  4238a2:	jg     0x4238bf
  4238a4:	pop    ebp
  4238a5:	cwde   
  4238a6:	mov    al,0x8e
  4238a8:	add    DWORD PTR [ebx],ecx
  4238aa:	test   eax,0xf24612f9
  4238af:	(bad)  
  4238b0:	je     0x423889
  4238b2:	push   eax
  4238b3:	repz cld 
  4238b5:	jp     0x423902
  4238b7:	ss push eax
  4238b9:	out    0x7b,al
  4238bb:	enter  0x87b0,0x82
  4238bf:	ror    BYTE PTR [edi-0x2b],cl
  4238c2:	rcl    esp,1
  4238c4:	std    
  4238c5:	imul   BYTE PTR [ebx-0xe2dafda]
  4238cb:	(bad)  
  4238cc:	xchg   DWORD PTR [esi-0x6a],edi
  4238cf:	dec    ecx
  4238d0:	out    0xd9,eax
  4238d2:	aad    0x93
  4238d4:	sbb    eax,0x6f86f15f
  4238d9:	adc    al,0x8c
  4238db:	and    bl,BYTE PTR [esi]
  4238dd:	test   eax,0x72e5149f
  4238e2:	cmp    bl,dh
  4238e4:	lock aaa 
  4238e6:	push   esp
  4238e7:	cli    
  4238e8:	mov    dl,0x2a
  4238ea:	into   
  4238eb:	dec    ebp
  4238ec:	lods   eax,DWORD PTR ds:[esi]
  4238ed:	and    DWORD PTR [edx-0x26a7ae35],ecx
  4238f3:	repnz pop ebp
  4238f5:	cmp    dh,bl
  4238f7:	pop    ds
  4238f8:	or     DWORD PTR [ebp-0x25a4bfde],ebp
  4238fe:	and    eax,0x46b73167
  423903:	call   0x9b64:0xcde1a8c4
  42390a:	test   eax,0x80e17dc4
  42390f:	jae    0x4238d1
  423911:	(bad)  
  423912:	dec    edx
  423913:	jle    0x42389f
  423915:	ins    DWORD PTR es:[edi],dx
  423916:	les    edi,FWORD PTR [ebx+eax*8]
  423919:	sub    BYTE PTR [edx-0x2d],al
  42391c:	iret   
  42391d:	and    eax,0xdc09a456
  423922:	mov    edx,0x4af50ac2
  423927:	das    
  423928:	adc    eax,0x60caebd3
  42392d:	inc    esp
  42392e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42392f:	dec    BYTE PTR [eax+0x28c74aa6]
  423935:	imul   edx,DWORD PTR [edi-0x4d],0x31
  423939:	mov    al,ds:0x6e8bb544
  42393e:	dec    ebx
  42393f:	retf   0xb6fa
  423942:	sbb    DWORD PTR [edi+ebx*2],ebx
  423945:	je     0x423922
  423947:	scas   eax,DWORD PTR es:[edi]
  423948:	pop    ebp
  423949:	cmp    eax,0xd48477ec
  42394e:	mov    al,ds:0xce55d4e
  423953:	jmp    0x42398c
  423955:	mov    ch,0x36
  423957:	dec    ecx
  423958:	and    ebx,DWORD PTR [ebx+0x66]
  42395b:	imul   ebp,DWORD PTR [ecx-0x1362af64],0xffffffb2
  423962:	mov    eax,0x72ef06c6
  423967:	push   ebx
  423968:	pop    ebp
  423969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42396a:	adc    ecx,ebp
  42396c:	push   ebx
  42396d:	(bad)  
  42396e:	clc    
  42396f:	int3   
  423970:	jle    0x423919
  423972:	ret    
  423973:	aad    0xd4
  423975:	mov    ebp,0x59f8790b
  42397a:	adc    eax,0x23ed4d1e
  42397f:	pop    edx
  423980:	imul   ebx,ecx,0x73f7aa39
  423986:	and    al,0xa6
  423988:	adc    eax,DWORD PTR [esi+0x55]
  42398b:	les    esp,FWORD PTR [esi-0x465540]
  423991:	ds dec ebx
  423993:	retf   0x202a
  423996:	mov    al,BYTE PTR [ebp-0x2c8ecba5]
  42399c:	fcmovnbe st,st(1)
  42399e:	and    edi,esp
  4239a0:	arpl   WORD PTR [eax],sp
  4239a2:	mov    esp,DWORD PTR [edx+0x5d]
  4239a5:	sbb    bh,ah
  4239a7:	push   ds
  4239a8:	(bad)  
  4239a9:	pop    ebx
  4239aa:	cmp    ebx,DWORD PTR [ecx-0x1508a616]
  4239b0:	outs   dx,DWORD PTR ds:[esi]
  4239b1:	or     al,0x6b
  4239b3:	test   DWORD PTR [esi],edi
  4239b5:	repz dec edx
  4239b7:	or     BYTE PTR [eax+0x57],ah
  4239ba:	xchg   edx,eax
  4239bb:	mov    bh,0x67
  4239bd:	icebp  
  4239be:	xor    al,0xd2
  4239c0:	scas   eax,DWORD PTR es:[edi]
  4239c1:	adc    BYTE PTR [esi+ebp*1+0x21],al
  4239c5:	shl    BYTE PTR [ebp-0x6],cl
  4239c8:	pop    ebp
  4239c9:	jbe    0x42399e
  4239cb:	xchg   ebx,eax
  4239cc:	fnstsw WORD PTR [edx+0x59c23e26]
  4239d2:	xor    eax,0xcf3e597f
  4239d7:	(bad)  
  4239d8:	mov    ebx,0x54785f36
  4239dd:	stos   DWORD PTR es:[edi],eax
  4239de:	fstp   QWORD PTR [ebx-0x47b239b7]
  4239e4:	cli    
  4239e5:	lods   eax,DWORD PTR ds:[esi]
  4239e6:	inc    esp
  4239e7:	ror    BYTE PTR [ebx],cl
  4239e9:	outs   dx,BYTE PTR ds:[esi]
  4239ea:	add    al,0x6f
  4239ec:	stos   BYTE PTR es:[edi],al
  4239ed:	push   edx
  4239ee:	and    ebx,DWORD PTR [ecx+0x6e]
  4239f1:	stc    
  4239f2:	xor    DWORD PTR [esi-0x6d],0x79
  4239f6:	lds    ecx,FWORD PTR [ecx-0x556e0558]
  4239fc:	or     al,0xcc
  4239fe:	mov    esp,0x5ec238d2
  423a03:	inc    edx
  423a04:	mov    cl,0xd7
  423a06:	cmp    bh,cl
  423a08:	pop    eax
  423a09:	in     al,dx
  423a0a:	and    dh,BYTE PTR [ebx]
  423a0c:	popf   
  423a0d:	push   ds
  423a0e:	lock sar BYTE PTR [ecx+0x40],1
  423a12:	pushf  
  423a13:	shl    BYTE PTR [esi+0x6a],cl
  423a16:	aaa    
  423a17:	push   ebx
  423a18:	or     DWORD PTR [ebx+0xebe6150],0x4b
  423a1f:	pop    eax
  423a20:	mov    esp,0x8d1a3456
  423a25:	daa    
  423a26:	and    dl,dl
  423a28:	jns    0x4239d4
  423a2a:	shl    DWORD PTR [esi+0x3147cbae],1
  423a30:	jnp    0x423a80
  423a32:	dec    ebp
  423a33:	push   edx
  423a34:	call   0x9f3:0xdc44d0e9
  423a3b:	rol    cl,cl
  423a3d:	bnd jg 0x423a49
  423a40:	push   0x13
  423a42:	rcl    BYTE PTR [esi+0x56],1
  423a45:	bound  esp,QWORD PTR [edi-0x58]
  423a48:	inc    BYTE PTR [ebx+ebx*8]
  423a4b:	call   0x41c428bd
  423a50:	addr16 jge 0x423a88
  423a53:	pop    es
  423a54:	aad    0x74
  423a56:	dec    ebx
  423a57:	and    al,0x7e
  423a59:	int3   
  423a5a:	(bad)  
  423a5b:	cdq    
  423a5c:	sbb    eax,0xddd62d83
  423a61:	inc    esi
  423a62:	jmp    0xb074:0x2046395f
  423a69:	in     al,0x5b
  423a6b:	int    0x41
  423a6d:	xchg   ebp,eax
  423a6e:	repz push cs
  423a70:	(bad)  
  423a71:	and    ebp,ecx
  423a73:	xchg   edx,eax
  423a74:	mov    eax,0x5d8722ef
  423a79:	fninit 
  423a7b:	jne    0x423a9a
  423a7d:	add    eax,0x4608af62
  423a82:	mov    DWORD PTR [ebp+0x3b],ebx
  423a85:	aaa    
  423a86:	stos   DWORD PTR es:[edi],eax
  423a87:	cld    
  423a88:	fnsave [ebx+0x4b]
  423a8b:	jo     0x423ad0
  423a8d:	in     eax,0x11
  423a8f:	shl    esp,cl
  423a91:	mov    esi,0xcad2cd
  423a96:	sbb    esi,DWORD PTR [ebx-0x1bc0bead]
  423a9c:	pop    ebp
  423a9d:	add    al,0x1f
  423a9f:	mov    dl,BYTE PTR [ebx]
  423aa1:	gs xchg esp,eax
  423aa3:	imul   ecx,DWORD PTR [ebx],0x7704d355
  423aa9:	test   dl,0xa1
  423aac:	pop    di
  423aae:	adc    eax,ecx
  423ab0:	or     DWORD PTR [esi+0x4b],edx
  423ab3:	or     eax,0x74e38432
  423ab8:	mov    eax,ds:0xb5d2ffa1
  423abd:	dec    eax
  423abe:	sub    al,0xf6
  423ac0:	push   esp
  423ac1:	inc    ecx
  423ac2:	push   ds
  423ac3:	out    0x5c,al
  423ac5:	cli    
  423ac6:	shl    DWORD PTR [eax-0x22373f4d],0x21
  423acd:	dec    ebp
  423ace:	cwde   
  423acf:	shr    BYTE PTR [edx-0x75],cl
  423ad2:	or     eax,0xbc7fc533
  423ad7:	sub    al,0x5d
  423ad9:	sbb    DWORD PTR [eax-0x6a8e7925],esp
  423adf:	enter  0x597a,0xee
  423ae3:	mov    esp,0x291605fe
  423ae8:	add    eax,0x2ff83987
  423aed:	imul   ecx,DWORD PTR [ebx+0x10],0xfffffff3
  423af1:	jle    0x423b55
  423af3:	ja     0x423b01
  423af5:	inc    esi
  423af6:	jg     0x423afd
  423af8:	jno    0x423b2c
  423afa:	or     esp,DWORD PTR [ecx]
  423afc:	cmp    DWORD PTR [edx+ecx*2+0x5b2988db],0x66
  423b04:	fist   WORD PTR [ebx]
  423b06:	or     dl,dl
  423b08:	sahf   
  423b09:	test   al,0x58
  423b0b:	pop    esp
  423b0c:	push   cs
  423b0d:	pop    edi
  423b0e:	outs   dx,BYTE PTR ds:[esi]
  423b0f:	int    0x5d
  423b11:	test   DWORD PTR [edx+0x7],esp
  423b14:	lods   al,BYTE PTR es:[esi]
  423b16:	int    0x18
  423b18:	(bad)  
  423b19:	pop    ecx
  423b1a:	cld    
  423b1b:	sub    eax,0xfa71a202
  423b20:	fcom   DWORD PTR [edx]
  423b22:	dec    ebx
  423b23:	inc    edx
  423b24:	pop    ebx
  423b25:	loopne 0x423ac8
  423b27:	mov    WORD PTR [edx],ds
  423b29:	dec    ebp
  423b2a:	shr    BYTE PTR es:[esp+ebp*1],cl
  423b2e:	adc    eax,0x61d1e66
  423b33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b34:	pop    ebp
  423b35:	cmp    BYTE PTR [ebx],0x2c
  423b38:	jge    0x423b6c
  423b3a:	jl     0x423bba
  423b3c:	in     eax,0x59
  423b3e:	cmp    al,0x4c
  423b40:	mov    ds,WORD PTR [edx+0x2e1e8754]
  423b46:	dec    ebx
  423b47:	pminub mm3,QWORD PTR [esi]
  423b4a:	pop    edx
  423b4b:	push   cs
  423b4c:	sub    bl,BYTE PTR ds:0x663bd2f6
  423b52:	and    bl,BYTE PTR [eax+0x40]
  423b55:	mov    cl,BYTE PTR [esi]
  423b57:	mov    esp,0x17c2eb89
  423b5c:	pop    esp
  423b5d:	push   ecx
  423b5e:	fadd   QWORD PTR [ecx+edx*4]
  423b61:	jne    0x423bda
  423b63:	sbb    DWORD PTR [ebp+0xc4efe59],0x19
  423b6a:	cmp    eax,0x2144ff07
  423b6f:	imul   edx,DWORD PTR [eax-0x13a9b827],0xd99cb406
  423b79:	pop    ecx
  423b7a:	push   es
  423b7b:	xchg   edx,eax
  423b7c:	mov    ecx,0xabe752c
  423b81:	mov    al,ds:0x3d6fc9a2
  423b86:	(bad)  
  423b87:	out    0x45,al
  423b89:	cdq    
  423b8a:	loope  0x423b2c
  423b8c:	sbb    al,0x29
  423b8e:	push   0xc9ce64d2
  423b93:	(bad)  
  423b94:	int    0xf1
  423b96:	stos   BYTE PTR es:[edi],al
  423b97:	cmp    al,BYTE PTR [ecx+eax*2-0x129ac91a]
  423b9e:	js     0x423b70
  423ba0:	mov    bl,0xd9
  423ba2:	outs   dx,BYTE PTR ds:[esi]
  423ba3:	out    dx,eax
  423ba4:	xor    al,0x94
  423ba6:	bound  eax,QWORD PTR [ecx]
  423ba8:	aaa    
  423ba9:	inc    esi
  423baa:	pop    ecx
  423bab:	push   edx
  423bac:	mov    al,0x2d
  423bae:	add    al,0xf0
  423bb0:	stos   BYTE PTR es:[edi],al
  423bb1:	sbb    dl,BYTE PTR [ecx+eiz*8+0x7]
  423bb5:	lds    eax,FWORD PTR [ecx]
  423bb7:	jns    0x423b4a
  423bb9:	xor    bl,BYTE PTR [edi-0x51]
  423bbc:	aas    
  423bbd:	inc    esi
  423bbe:	adc    DWORD PTR [eax+0x4020d8ce],0x4
  423bc5:	adc    ecx,DWORD PTR [ebx+0x1a]
  423bc8:	xchg   edx,eax
  423bc9:	stos   BYTE PTR es:[edi],al
  423bca:	leave  
  423bcb:	sbb    eax,DWORD PTR [esi]
  423bcd:	and    esi,esi
  423bcf:	rcr    ebx,cl
  423bd1:	je     0x423c4c
  423bd3:	out    0xb6,al
  423bd5:	ins    DWORD PTR es:[edi],dx
  423bd6:	lea    esi,[esi-0x18b49135]
  423bdc:	sub    BYTE PTR [edi-0x61357859],bh
  423be2:	(bad)  
  423be3:	ror    BYTE PTR [edx],cl
  423be5:	jae    0x423bc2
  423be7:	ins    BYTE PTR es:[edi],dx
  423be8:	xor    eax,0x23bd5ab8
  423bed:	xchg   edx,eax
  423bee:	dec    edx
  423bef:	pop    esp
  423bf0:	mov    WORD PTR [eax-0x6d],fs
  423bf3:	inc    BYTE PTR [esi+0x77]
  423bf6:	mov    dl,dl
  423bf8:	fisttp QWORD PTR [ebx+0x2aef2d3]
  423bfe:	xor    edx,ecx
  423c00:	and    eax,0x84b34
  423c05:	mov    edi,0x31a47e27
  423c0a:	aam    0xcc
  423c0c:	add    dh,BYTE PTR ds:0x219d5a01
  423c12:	pop    edx
  423c13:	push   ds
  423c14:	push   edi
  423c15:	adc    ecx,DWORD PTR [ebx+0x3c]
  423c18:	daa    
  423c19:	inc    edi
  423c1a:	iret   
  423c1b:	in     al,dx
  423c1c:	outs   dx,DWORD PTR ds:[esi]
  423c1d:	pop    eax
  423c1e:	jg     0x423bf6
  423c20:	gs sub al,0xb6
  423c23:	in     al,0x31
  423c25:	pushf  
  423c26:	rcl    DWORD PTR [ebx+0x14],1
  423c29:	xchg   ebp,eax
  423c2a:	xor    al,0x42
  423c2c:	call   0xf5c7881d
  423c31:	mov    al,ds:0x770bdbd3
  423c36:	jl     0x423c5d
  423c38:	jge    0x423c03
  423c3a:	ror    ah,cl
  423c3c:	inc    edi
  423c3d:	mov    dl,0x95
  423c3f:	cld    
  423c40:	jge    0x423c69
  423c42:	in     eax,0xf2
  423c44:	push   0xffffff98
  423c46:	dec    edx
  423c47:	sbb    ecx,ebp
  423c49:	jp     0x423be5
  423c4b:	ins    DWORD PTR es:[edi],dx
  423c4c:	or     cl,bh
  423c4e:	and    dl,dl
  423c50:	jp     0x423c72
  423c52:	jo     0x423c57
  423c54:	xchg   edx,eax
  423c55:	test   al,0x60
  423c57:	fstp   DWORD PTR [ebp+0x0]
  423c5a:	enter  0xc394,0x3d
  423c5e:	jg     0x423be7
  423c60:	or     DWORD PTR [esi+0x79],eax
  423c63:	(bad)  
  423c64:	fsub   QWORD PTR [ecx]
  423c66:	mov    ds:0x4ab8b326,al
  423c6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c6c:	inc    eax
  423c6d:	pop    ss
  423c6e:	and    eax,0x7daa9de3
  423c73:	inc    esi
  423c74:	dec    ecx
  423c75:	inc    esi
  423c76:	(bad)  [ecx]
  423c78:	clc    
  423c79:	fdivr  QWORD PTR [esi]
  423c7b:	push   ebx
  423c7c:	retf   0x4aa9
  423c7f:	or     BYTE PTR [ebx],bl
  423c81:	ins    DWORD PTR es:[edi],dx
  423c82:	push   ebx
  423c83:	in     al,0x7e
  423c85:	call   ecx
  423c87:	shl    DWORD PTR [esi],cl
  423c89:	loopne 0x423ce8
  423c8b:	push   edx
  423c8c:	pop    esi
  423c8d:	add    BYTE PTR gs:[edx],al
  423c90:	xchg   edi,eax
  423c91:	adc    cl,BYTE PTR [ebx+0x20]
  423c94:	iret   
  423c95:	push   ebx
  423c96:	or     edx,ebp
  423c98:	loope  0x423c8e
  423c9a:	sti    
  423c9b:	ror    dh,cl
  423c9d:	ja     0x423d17
  423c9f:	jge    0x423cb9
  423ca1:	cmp    BYTE PTR [eax],dl
  423ca3:	jne    0x423d02
  423ca5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ca6:	(bad)  
  423ca8:	test   dh,dl
  423caa:	dec    ecx
  423cab:	repz inc edx
  423cad:	pop    ecx
  423cae:	sub    ebx,DWORD PTR [eax]
  423cb0:	sar    cl,1
  423cb2:	aad    0xfd
  423cb4:	mov    ebp,0xbbc14b09
  423cb9:	pop    edx
  423cba:	push   ecx
  423cbb:	cli    
  423cbc:	nop
  423cbd:	pop    ebp
  423cbe:	cmp    eax,0x4520ecd2
  423cc3:	ror    cl,1
  423cc5:	or     al,0x3f
  423cc7:	or     DWORD PTR [ebp+0x4a],ebx
  423cca:	fmulp  st(1),st
  423ccc:	adc    esp,DWORD PTR [ecx+0x6d]
  423ccf:	dec    esp
  423cd0:	jp     0x423d15
  423cd2:	test   eax,0xcc71e72d
  423cd7:	ror    cl,cl
  423cd9:	push   edx
  423cda:	rol    DWORD PTR [edi+0x164b2fd2],1
  423ce0:	in     al,0x92
  423ce2:	mov    dl,0xf5
  423ce4:	jp     0x423d48
  423ce6:	xchg   edx,edx
  423ce8:	and    al,0x2d
  423cea:	xchg   BYTE PTR [esi+ebp*8+0x5da62388],dh
  423cf1:	icebp  
  423cf2:	jb     0x423cf5
  423cf4:	push   eax
  423cf5:	lahf   
  423cf6:	pop    ss
  423cf7:	dec    esp
  423cf8:	jbe    0x423d52
  423cfa:	sub    al,0x7d
  423cfc:	sub    eax,0xc8e069e1
  423d01:	dec    ecx
  423d02:	jo     0x423d07
  423d04:	push   0xfffffffd
  423d06:	mov    al,0xcf
  423d08:	mov    esi,0x1a0272d9
  423d0d:	xor    ah,BYTE PTR [edi*8-0x5704dca8]
  423d14:	mov    eax,DWORD PTR [esi-0x15]
  423d17:	test   eax,0xf6aa52d
  423d1c:	sub    al,0xf7
  423d1e:	not    DWORD PTR [edi+0x5d]
  423d21:	adc    BYTE PTR [eax],0x50
  423d24:	(bad)  
  423d26:	repnz lods eax,DWORD PTR ds:[esi]
  423d28:	mov    al,ds:0xf4db3859
  423d2d:	cli    
  423d2e:	js     0x423cf8
  423d30:	xor    eax,0xd5b44b5e
  423d35:	sub    eax,0x9a091d30
  423d3a:	imul   edx,ebx,0x47a0bc8e
  423d40:	jmp    0x423da2
  423d42:	aas    
  423d43:	mov    esp,0x991eb06f
  423d48:	inc    ebp
  423d49:	outs   dx,BYTE PTR ds:[esi]
  423d4a:	push   ecx
  423d4b:	test   al,0xb9
  423d4d:	stc    
  423d4e:	pop    esi
  423d4f:	ins    DWORD PTR es:[edi],dx
  423d50:	xchg   ecx,eax
  423d51:	sahf   
  423d52:	pop    ss
  423d53:	rcr    DWORD PTR [edx-0x23],1
  423d56:	paddb  mm1,QWORD PTR [edx]
  423d59:	icebp  
  423d5a:	mov    ss,WORD PTR [edx-0x379a43f2]
  423d60:	pop    ebp
  423d61:	and    al,BYTE PTR [ecx+0x5a]
  423d64:	mov    esi,0xd977820a
  423d69:	pop    ecx
  423d6a:	xchg   ebp,eax
  423d6b:	je     0x423d7f
  423d6d:	jle    0x423cf5
  423d6f:	inc    esi
  423d70:	js     0x423ddb
  423d72:	dec    ebx
  423d73:	and    al,0x4
  423d75:	stc    
  423d76:	jmp    0x11ee:0x38eb57f1
  423d7d:	sbb    ah,bl
  423d7f:	rcr    BYTE PTR [ebp-0x51429fd5],cl
  423d85:	mov    ebp,0x463a3b2c
  423d8a:	jg     0x423dff
  423d8c:	sbb    eax,0xca324597
  423d91:	inc    esi
  423d92:	cld    
  423d93:	out    0xed,al
  423d95:	adc    al,0x80
  423d97:	push   edx
  423d98:	and    eax,0xc4cffabf
  423d9d:	aas    
  423d9e:	and    BYTE PTR [edx-0x22],al
  423da1:	ficom  DWORD PTR [ebx-0x69f764ac]
  423da7:	mov    bl,0x2c
  423da9:	mov    bl,0xec
  423dab:	ret    0x7025
  423dae:	in     al,0xe
  423db0:	and    ebx,edi
  423db2:	dec    edx
  423db3:	jb     0x423d5f
  423db5:	outs   dx,BYTE PTR ds:[esi]
  423db6:	mov    cl,al
  423db8:	pop    edx
  423db9:	in     eax,0xd8
  423dbb:	inc    ebx
  423dbc:	pushf  
  423dbd:	push   esi
  423dbe:	bnd jae 0x423dd7
  423dc1:	inc    esi
  423dc2:	out    dx,al
  423dc3:	or     DWORD PTR ds:0x6f30d5b5,0x5538f32b
  423dcd:	cdq    
  423dce:	dec    ebp
  423dcf:	mov    ch,BYTE PTR [edi]
  423dd1:	push   ss
  423dd2:	dec    edi
  423dd3:	rcr    edi,cl
  423dd5:	push   0x3b50f63a
  423dda:	mov    esp,0x45ddce42
  423ddf:	rol    DWORD PTR [edi-0x69324f3d],cl
  423de5:	jl     0x423e5b
  423de7:	pop    ss
  423de8:	mov    ?,WORD PTR [eax+ebx*4-0x1fdeea53]
  423def:	fstp   DWORD PTR ds:0x8c4bd7d6
  423df5:	cmp    al,0xd2
  423df7:	loope  0x423dea
  423df9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dfa:	mov    cl,0xd2
  423dfc:	xor    al,0xd3
  423dfe:	aaa    
  423dff:	test   eax,0xbe4aff74
  423e04:	inc    esp
  423e05:	sub    DWORD PTR [esi+eax*1+0x5c],0x84e4d685
  423e0d:	in     al,0xdc
  423e0f:	shr    DWORD PTR ds:0x3558e6f6,1
  423e15:	mov    al,ds:0xbc3da207
  423e1a:	dec    edx
  423e1b:	push   edi
  423e1c:	mov    edx,0xa06cf800
  423e21:	xchg   esp,eax
  423e22:	pop    edx
  423e23:	in     eax,0x56
  423e25:	push   ecx
  423e26:	cs jp  0x423e0e
  423e29:	pop    ecx
  423e2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e2b:	push   ecx
  423e2c:	xlat   BYTE PTR ds:[ebx]
  423e2d:	jecxz  0x423e6b
  423e2f:	es test eax,0xaffbab59
  423e35:	inc    esi
  423e36:	ror    eax,0xb7
  423e39:	add    al,0x71
  423e3b:	mov    WORD PTR [ebp+0x50],ds
  423e3e:	data16 std 
  423e40:	retf   
  423e41:	pop    ebx
  423e42:	add    ecx,ebx
  423e44:	iret   
  423e45:	pop    ecx
  423e46:	stc    
  423e47:	and    ebp,esi
  423e49:	cmp    DWORD PTR ds:0x4b8ffd82,0xd98d4d8d
  423e53:	mov    dh,0xd
  423e55:	adc    ebp,edi
  423e57:	fidiv  WORD PTR [eax]
  423e59:	loop   0x423e1c
  423e5b:	adc    cl,BYTE PTR [ebx]
  423e5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e5e:	jg     0x423ed0
  423e60:	in     al,dx
  423e61:	adc    eax,0x5a971d4b
  423e66:	inc    eax
  423e67:	mov    ebp,0xd369dc62
  423e6c:	xor    al,0xe5
  423e6e:	jmp    0xe5c5:0x5e7474b8
  423e75:	cli    
  423e76:	dec    edx
  423e77:	fstp   DWORD PTR [edi+0xc]
  423e7a:	loopne 0x423ec6
  423e7c:	xor    ah,BYTE PTR [ebp-0x19282d18]
  423e82:	lock loop 0x423e28
  423e85:	lds    edi,FWORD PTR [eax+eiz*2]
  423e88:	pop    ebp
  423e89:	push   cs
  423e8a:	repnz and ah,BYTE PTR [esi-0x54]
  423e8e:	push   0x66597bcc
  423e93:	sub    al,0xff
  423e95:	ins    BYTE PTR es:[edi],dx
  423e96:	inc    esi
  423e97:	fisubr DWORD PTR [eax]
  423e99:	test   eax,0x8c87a14a
  423e9e:	arpl   WORD PTR [ebx+ebp*1],di
  423ea1:	push   ss
  423ea2:	xchg   ecx,eax
  423ea3:	shl    bl,cl
  423ea5:	mov    eax,ds:0x2e0712b7
  423eaa:	pushf  
  423eab:	mov    edi,0x7996177f
  423eb0:	xchg   ecx,ebx
  423eb2:	adc    cl,BYTE PTR [ebx+ebx*1-0x4]
  423eb6:	jp     0x423f1f
  423eb8:	jo     0x423ebb
  423eba:	ret    
  423ebb:	pushf  
  423ebc:	push   esi
  423ebd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ebe:	xor    al,0xa9
  423ec0:	(bad)  
  423ec1:	fnstenv [ebx-0x2b]
  423ec4:	pop    es
  423ec5:	jo     0x423f12
  423ec7:	ret    
  423ec8:	pushf  
  423ec9:	adc    esi,esi
  423ecb:	mov    DWORD PTR [eax],ecx
  423ecd:	ret    0xd209
  423ed0:	mov    bh,0x17
  423ed2:	retf   
  423ed3:	adc    BYTE PTR [edx-0x74],bh
  423ed6:	push   eax
  423ed7:	fnstcw WORD PTR [edi]
  423ed9:	ror    BYTE PTR [edx-0x1a],1
  423edc:	add    eax,0xd583614b
  423ee1:	dec    esi
  423ee2:	ins    BYTE PTR es:[edi],dx
  423ee3:	rcr    BYTE PTR [edi],1
  423ee5:	inc    eax
  423ee6:	xchg   DWORD PTR [eax+0x9],eax
  423ee9:	rcl    DWORD PTR [ebx+0x23b8819e],cl
  423eef:	sub    bh,bh
  423ef1:	fldenv [ebx+0x58e9ee4e]
  423ef7:	mov    esp,edx
  423ef9:	pop    ecx
  423efa:	mov    bl,0x43
  423efc:	or     DWORD PTR [eax],eax
  423efe:	sti    
  423eff:	nop
  423f00:	jecxz  0x423f53
  423f02:	popa   
  423f03:	push   eax
  423f04:	pop    ebp
  423f05:	lds    ecx,FWORD PTR [ebx+edx*1-0x3d6dbec6]
  423f0c:	mov    bl,BYTE PTR [ecx+0x3]
  423f0f:	mov    al,ds:0x661ec1e7
  423f14:	or     al,0x7b
  423f16:	dec    ebx
  423f17:	pop    esp
  423f18:	fnop   
  423f1a:	out    dx,al
  423f1b:	retf   0x6f36
  423f1e:	jne    0x423ef3
  423f20:	(bad)  
  423f21:	ds aaa 
  423f23:	xlat   BYTE PTR ds:[ebx]
  423f24:	(bad)  
  423f25:	jno    0x423f28
  423f27:	cwde   
  423f28:	pop    ebp
  423f29:	and    eax,0xee56809
  423f2e:	fadd   QWORD PTR [ebx-0x68]
  423f31:	pop    ecx
  423f32:	sub    esi,edx
  423f34:	pushf  
  423f35:	push   es
  423f36:	rol    BYTE PTR [eax+0x19465207],1
  423f3c:	mov    DWORD PTR [ebx-0xdd8c0b6],eax
  423f42:	stc    
  423f43:	sub    bh,BYTE PTR [edi+0x55]
  423f46:	fdivr  QWORD PTR [edi+0x5c7559d0]
  423f4c:	fist   DWORD PTR [eax-0x4c]
  423f4f:	push   eax
  423f50:	pop    ebp
  423f51:	jg     0x423f8b
  423f53:	inc    ecx
  423f54:	(bad)  
  423f55:	sbb    eax,DWORD PTR [eax-0x23a65cbb]
  423f5b:	mov    ebp,0x1453a665
  423f60:	add    DWORD PTR [edx],eax
  423f62:	dec    ebx
  423f63:	scas   al,BYTE PTR es:[edi]
  423f64:	xchg   edx,eax
  423f65:	xchg   edx,eax
  423f66:	mov    ebx,0x8796df70
  423f6b:	div    BYTE PTR [edi-0x372dd811]
  423f71:	jg     0x423f70
  423f73:	add    edx,DWORD PTR [edx+0xd]
  423f76:	dec    ebx
  423f77:	mov    edx,0x523d0d11
  423f7c:	int3   
  423f7d:	aad    0x50
  423f7f:	shl    ch,cl
  423f81:	mov    ebp,DWORD PTR [ecx-0x34746d0]
  423f87:	adc    al,0x43
  423f89:	xchg   DWORD PTR [ecx+0x0],ebp
  423f8c:	pop    ebp
  423f8d:	adc    ch,BYTE PTR [eax]
  423f8f:	into   
  423f90:	andps  xmm6,XMMWORD PTR [eax]
  423f93:	int    0x32
  423f95:	cmp    eax,DWORD PTR [edx-0x17]
  423f98:	cmp    eax,0x6d15c5d5
  423f9d:	sti    
  423f9e:	dec    edx
  423f9f:	jmp    0xf205:0x349d6fb6
  423fa6:	adc    edx,0xffffff9f
  423fa9:	out    0xcc,al
  423fab:	stc    
  423fac:	test   BYTE PTR [eax-0x76],al
  423faf:	or     al,0x21
  423fb1:	std    
  423fb2:	dec    edx
  423fb3:	and    al,BYTE PTR [edx+0x4f33e793]
  423fb9:	mov    esp,0x2da2d2c5
  423fbe:	inc    eax
  423fbf:	retf   0x4103
  423fc2:	sbb    BYTE PTR ds:[ebp-0x72],0xe3
  423fc7:	xchg   ebx,eax
  423fc8:	mov    cl,0x15
  423fca:	(bad)  
  423fcb:	in     al,0xd5
  423fcd:	pop    ecx
  423fce:	pop    edi
  423fcf:	sbb    BYTE PTR [eax],bl
  423fd1:	enter  0x4c09,0x2c
  423fd5:	popa   
  423fd6:	dec    ebx
  423fd7:	jle    0x42400a
  423fd9:	int    0x41
  423fdb:	xor    eax,0x1a89e3a7
  423fe0:	int3   
  423fe1:	or     DWORD PTR [edx+0x58],0xcde71361
  423fe8:	nop    DWORD PTR [ebx+0x53]
  423fec:	imul   esp,edx,0xc3a9cc64
  423ff2:	gs clc 
  423ff4:	cmp    DWORD PTR [edx],edx
  423ff6:	cs ret 0x3a5d
  423ffa:	loop   0x423fa8
  423ffc:	and    DWORD PTR [esi+eax*2],ebx
  423fff:	pop    esp
  424000:	mov    ds:0x33f84b3d,eax
  424005:	cmp    DWORD PTR [ecx],0xffffff98
  424008:	outs   dx,DWORD PTR ds:[esi]
  424009:	dec    ecx
  42400a:	mov    al,0xd2
  42400c:	pop    edi
  42400d:	scas   al,BYTE PTR es:[edi]
  42400e:	inc    ebx
  42400f:	cmp    BYTE PTR ds:0x5ceb7e0f,ch
  424015:	enter  0x2b51,0xbe
  424019:	fs mov bl,0x17
  42401c:	or     eax,0x41d2f14b
  424021:	out    0xc8,al
  424023:	fsubr  st,st(0)
  424025:	ins    BYTE PTR es:[edi],dx
  424026:	gs push ecx
  424028:	pop    esp
  424029:	lahf   
  42402a:	push   ecx
  42402b:	(bad)  
  42402c:	cld    
  42402d:	addr16 jns 0x42405c
  424030:	and    eax,0x78d28703
  424035:	jno    0x423ff1
  424037:	sbb    eax,0x16209986
  42403c:	push   edx
  42403d:	sub    ah,ah
  42403f:	push   esp
  424040:	pminsw mm0,QWORD PTR [edi]
  424043:	ins    DWORD PTR es:[edi],dx
  424044:	int    0x83
  424046:	std    
  424047:	retf   
  424048:	fcomp  DWORD PTR [ecx-0x65]
  42404b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42404c:	add    BYTE PTR [ecx-0x34326bfa],bl
  424052:	dec    edx
  424053:	mov    esp,0x3a5b73aa
  424058:	leave  
  424059:	adc    ebp,DWORD PTR [edx+edx*8]
  42405c:	inc    esp
  42405d:	or     al,0x80
  42405f:	fbstp  TBYTE PTR [edi-0x5bd7d8f5]
  424065:	cli    
  424066:	dec    edx
  424067:	sub    DWORD PTR ds:0x3eb8a26e,0xffffff9f
  42406e:	adc    dl,0x83
  424071:	sar    ebp,cl
  424073:	sbb    ebp,edi
  424075:	addr16 pop esp
  424077:	fnstsw WORD PTR [esi-0x68]
  42407a:	fst    DWORD PTR [edx+0x2]
  42407d:	out    0xf2,al
  42407f:	int    0xec
  424081:	mov    edx,0xace6d1f9
  424086:	inc    esi
  424087:	ja     0x4240cc
  424089:	call   0xfa390f33
  42408e:	test   edi,edi
  424090:	inc    edx
  424091:	aad    0x47
  424093:	in     eax,0x90
  424095:	jmp    0x6862:0xb4a389ca
  42409c:	sbb    DWORD PTR [esi-0x4b],0xffffffd1
  4240a0:	xchg   ebp,eax
  4240a1:	jecxz  0x424030
  4240a3:	rcl    ecx,0x8f
  4240a6:	jae    0x424106
  4240a8:	fstp   DWORD PTR [edi+0x4b]
  4240ab:	pushf  
  4240ac:	jg     0x424056
  4240ae:	test   eax,0xf868bb8
  4240b3:	rol    BYTE PTR [ebx+0x72829749],cl
  4240b9:	das    
  4240ba:	sub    DWORD PTR [edx+0x5d],edi
  4240bd:	je     0x42410d
  4240bf:	dec    ebx
  4240c0:	retf   0x119b
  4240c3:	add    al,bl
  4240c5:	pop    ecx
  4240c6:	add    eax,ebx
  4240c8:	cmp    edi,DWORD PTR cs:[ebp+0x4b88809d]
  4240cf:	retf   
  4240d0:	addr16 xchg edi,eax
  4240d2:	inc    edx
  4240d3:	dec    esi
  4240d4:	xchg   ecx,eax
  4240d5:	outs   dx,DWORD PTR ds:[esi]
  4240d6:	mov    edi,0x66d876fa
  4240db:	enter  0x9d81,0xf1
  4240df:	mov    ebx,0x3f1c2a5d
  4240e4:	push   0xfffffffc
  4240e6:	dec    ecx
  4240e7:	inc    edx
  4240e8:	push   cs
  4240e9:	mov    dl,0x6b
  4240eb:	scas   eax,DWORD PTR es:[edi]
  4240ec:	and    bh,BYTE PTR [eax-0x13]
  4240ef:	ret    0x90a5
  4240f2:	pop    ecx
  4240f3:	ror    DWORD PTR [esi-0x78],cl
  4240f6:	icebp  
  4240f7:	mov    ebp,0x6505cc89
  4240fc:	pop    ebp
  4240fd:	cld    
  4240fe:	in     al,0x71
  424100:	jl     0x42412a
  424102:	fcomp  DWORD PTR [eax]
  424104:	lea    eax,[edx+0x1b]
  424107:	and    BYTE PTR [eax+0x2f524a90],dh
  42410d:	loop   0x424156
  42410f:	out    dx,eax
  424110:	pop    ebp
  424111:	xor    ecx,esp
  424113:	inc    esi
  424114:	imul   ecx,DWORD PTR [edx+0x3b],0xdd772a13
  42411b:	pop    ss
  42411c:	cmp    BYTE PTR [edi+0x34],bl
  42411f:	mov    edx,0x35c67c41
  424124:	out    0x39,al
  424126:	hlt    
  424127:	mov    eax,ds:0xe24ab127
  42412c:	mov    ds:0x8d65099a,al
  424131:	arpl   ax,di
  424133:	rcl    bh,cl
  424135:	adc    cl,al
  424137:	mov    esp,0xd3219e73
  42413c:	pop    ebp
  42413d:	mov    dh,0x2c
  42413f:	dec    ebx
  424140:	mov    ebx,0x94f51890
  424145:	push   ebp
  424146:	push   es
  424147:	sub    ebx,edi
  424149:	(bad)  
  42414b:	inc    ecx
  42414c:	mov    eax,0x74928b68
  424151:	rol    DWORD PTR [edi-0x2b],1
  424154:	jge    0x4240e1
  424156:	aad    0xd9
  424158:	icebp  
  424159:	retf   
  42415a:	xchg   ecx,eax
  42415b:	mov    dl,0xf7
  42415d:	add    eax,0x72d83a0f
  424162:	mov    bl,0xd8
  424164:	(bad)  
  424166:	jle    0x4241e6
  424168:	xchg   BYTE PTR [edi],ah
  42416a:	sub    DWORD PTR [ebp+0x134af9cd],edx
  424170:	pop    ecx
  424171:	sub    DWORD PTR [eax],edx
  424173:	cdq    
  424174:	test   eax,0x4bd2933d
  424179:	test   eax,0x385f1a12
  42417e:	pop    eax
  42417f:	push   cs
  424180:	dec    ebx
  424181:	sbb    al,0x4b
  424183:	imul   esp,DWORD PTR [edi+0x67ea085c],0x3dd2d366
  42418d:	hlt    
  42418e:	push   eax
  42418f:	hlt    
  424190:	xchg   BYTE PTR [edx+0x47],dh
  424193:	mov    ecx,0x4989f412
  424198:	xchg   esp,eax
  424199:	stc    
  42419a:	popa   
  42419b:	xchg   ebp,eax
  42419c:	popa   
  42419d:	pop    ecx
  42419e:	sub    BYTE PTR ds:[edi-0x69],bl
  4241a2:	jg     0x4241aa
  4241a4:	out    dx,eax
  4241a5:	ret    
  4241a6:	dec    eax
  4241a7:	das    
  4241a8:	(bad)  
  4241a9:	xchg   ecx,eax
  4241aa:	mov    fs,WORD PTR [edx-0x2235a4e5]
  4241b0:	mov    fs,WORD PTR [eax-0x6d120974]
  4241b6:	cmp    bl,BYTE PTR [di-0x68]
  4241ba:	cwde   
  4241bb:	adc    ecx,DWORD PTR [edx]
  4241bd:	pushf  
  4241be:	popf   
  4241bf:	mov    cl,cl
  4241c1:	icebp  
  4241c2:	push   esi
  4241c3:	fbstp  TBYTE PTR [edi-0x42]
  4241c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241c7:	aad    0x8f
  4241c9:	pop    edi
  4241ca:	xchg   ebp,eax
  4241cb:	jb     0x4241e3
  4241cd:	out    0x33,eax
  4241cf:	xchg   edx,eax
  4241d0:	pop    ebp
  4241d1:	xlat   BYTE PTR ds:[ebx]
  4241d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241d3:	ins    BYTE PTR es:[edi],dx
  4241d4:	aad    0x48
  4241d6:	popa   
  4241d7:	push   ebp
  4241d8:	(bad)  
  4241d9:	pop    ecx
  4241da:	inc    ebp
  4241db:	dec    eax
  4241dc:	cmp    DWORD PTR [ebx],esi
  4241de:	enter  0xc9d3,0x49
  4241e2:	push   esp
  4241e3:	dec    edi
  4241e4:	xor    ebx,DWORD PTR [ecx]
  4241e6:	mov    cl,0x51
  4241e8:	mov    eax,DWORD PTR [eax+0x443d7d66]
  4241ee:	mov    edx,edi
  4241f0:	dec    ebp
  4241f1:	popa   
  4241f2:	retf   0xd0f5
  4241f5:	or     DWORD PTR [ebp+0x4008ae4c],edi
  4241fb:	not    BYTE PTR [eax]
  4241fd:	jle    0x4241e8
  4241ff:	ja     0x424276
  424201:	leave  
  424202:	dec    edx
  424203:	dec    edx
  424204:	adc    eax,0x9b2f51fc
  424209:	cmp    al,0xf8
  42420b:	shl    BYTE PTR [ecx+0x8787d43],cl
  424211:	jmp    0x4241c8
  424213:	pusha  
  424214:	pop    ebp
  424215:	sub    eax,0x8a6a889a
  42421a:	pop    es
  42421b:	pop    ebx
  42421c:	arpl   WORD PTR [esi-0xc],bx
  42421f:	into   
  424220:	dec    edi
  424221:	or     eax,0xbc7d52d8
  424226:	js     0x4241cc
  424228:	pop    ebp
  424229:	inc    ecx
  42422a:	test   BYTE PTR [ebp+0x76e3a33f],bl
  424230:	dec    eax
  424231:	push   edi
  424232:	and    esi,DWORD PTR [eax-0xe3b665f]
  424238:	enter  0x51b4,0x1f
  42423c:	pop    ebp
  42423d:	inc    edx
  42423e:	fmul   DWORD PTR [ecx+0x5545af05]
  424244:	pusha  
  424245:	pop    ecx
  424246:	xor    ebx,DWORD PTR [esi-0xf41dc19]
  42424c:	test   BYTE PTR ds:0xe59fd44b,bl
  424252:	jno    0x4241ea
  424254:	mov    BYTE PTR [edi+0x59f8b223],cl
  42425a:	stos   BYTE PTR es:[edi],al
  42425b:	xchg   ebx,eax
  42425c:	frstor [edx-0x45e85def]
  424262:	dec    edx
  424263:	or     DWORD PTR [esi-0x64],ebp
  424266:	daa    
  424267:	(bad)  
  424268:	jg     0x424207
  42426a:	(bad)  
  42426b:	shl    BYTE PTR [eax],cl
  42426d:	test   eax,0x4bf44b73
  424272:	sbb    dh,BYTE PTR [ebx+0x5d]
  424275:	jle    0x42428d
  424277:	or     BYTE PTR [ecx+0x13],0x13
  42427b:	popf   
  42427c:	retf   0x9d36
  42427f:	fnstsw WORD PTR [esi+esi*8-0x45]
  424283:	push   ss
  424284:	xchg   cx,ax
  424286:	jo     0x4242db
  424288:	adc    DWORD PTR [eax-0x3b],eax
  42428b:	or     ch,0x28
  42428e:	dec    ebx
  42428f:	shl    al,0x5
  424292:	out    dx,al
  424293:	jg     0x424233
  424295:	sub    eax,0x83b6f48d
  42429a:	into   
  42429b:	ror    BYTE PTR ds:0x3f3774e7,cl
  4242a1:	sbb    BYTE PTR [ebx+0x5],cl
  4242a4:	shl    BYTE PTR [esi+eax*2+0x1e],cl
  4242a8:	push   ebp
  4242a9:	sar    DWORD PTR [ebx-0x2d],0x8c
  4242ad:	imul   esp,edx,0xffffff88
  4242b0:	pop    ds
  4242b1:	ins    DWORD PTR es:[edi],dx
  4242b2:	pop    fs
  4242b4:	pop    ebp
  4242b5:	push   0x34fffe76
  4242ba:	sub    eax,0x505e9fff
  4242bf:	cmp    ch,ah
  4242c1:	dec    ebp
  4242c2:	pop    ebp
  4242c3:	jb     0x424337
  4242c5:	idiv   cl
  4242c7:	dec    ecx
  4242c8:	pop    ebp
  4242c9:	mov    eax,ds:0x911334ab
  4242ce:	loope  0x424339
  4242d0:	xor    eax,DWORD PTR [esi-0x45]
  4242d3:	jbe    0x424310
  4242d5:	xor    eax,0x41a0b3fe
  4242da:	dec    ebx
  4242db:	xlat   BYTE PTR ds:[ebx]
  4242dc:	mov    esp,0xa9759caf
  4242e1:	js     0x4242cb
  4242e3:	ficom  WORD PTR [ecx+0x35]
  4242e6:	in     eax,dx
  4242e7:	adc    cl,BYTE PTR [ebx]
  4242e9:	mov    WORD PTR [ebp+0x1b],ds
  4242ec:	jae    0x424354
  4242ee:	dec    ebx
  4242ef:	pop    ebp
  4242f0:	jne    0x4242c0
  4242f2:	mov    al,BYTE PTR [ecx-0x40b0350]
  4242f8:	and    eax,0xc842cb32
  4242fd:	in     eax,0x5f
  4242ff:	daa    
  424300:	repnz int 0x4a
  424303:	add    eax,0xf6af7c16
  424308:	ins    DWORD PTR es:[edi],dx
  424309:	scas   al,BYTE PTR es:[edi]
  42430a:	add    eax,0x534814d2
  42430f:	sub    esi,DWORD PTR [eax-0x1a9a08b7]
  424315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424316:	dec    edx
  424317:	and    cl,0xc2
  42431a:	cli    
  42431b:	xchg   esi,eax
  42431c:	imul   ebx,DWORD PTR [edi-0x6d97f482],0x2707f4a
  424326:	mov    esp,0x4a930279
  42432b:	push   0x45aa25a0
  424330:	jns    0x4242df
  424332:	(bad)  
  424333:	fnstsw ax
  424335:	mov    ds:0x49fe4cf3,al
  42433a:	xchg   esp,eax
  42433b:	dec    eax
  42433c:	sub    cl,ch
  42433e:	sbb    DWORD PTR [edx+0x27],edx
  424341:	not    BYTE PTR [esi-0x13a77a0e]
  424347:	shr    BYTE PTR [ecx+0x18da24d9],cl
  42434d:	imul   eax,esp,0x2169e5ce
  424353:	sahf   
  424354:	dec    ebp
  424355:	fsubp  st(7),st
  424357:	repnz into 
  424359:	mov    al,ds:0x7715bf6a
  42435e:	adc    ebp,edi
  424360:	aas    
  424361:	push   0xffffff9b
  424363:	sub    edi,DWORD PTR [ecx]
  424365:	rcr    DWORD PTR [esi-0x5fcba2e7],1
  42436b:	xchg   ebp,eax
  42436c:	pusha  
  42436d:	pop    edx
  42436e:	xchg   BYTE PTR [ebx],bh
  424370:	in     al,dx
  424371:	pop    edx
  424372:	or     BYTE PTR [ebp-0x76],ah
  424375:	push   ds
  424376:	sub    eax,0x385e35d3
  42437b:	xchg   edx,eax
  42437c:	pop    ebp
  42437d:	cs dec esp
  42437f:	aam    0xd0
  424381:	mov    edi,0x5b19ec10
  424386:	xchg   ecx,eax
  424387:	hlt    
  424388:	aad    0x9b
  42438a:	cmc    
  42438b:	mov    eax,ds:0x55d88618
  424390:	fnstsw WORD PTR [eax+0x66093b4a]
  424396:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424397:	js     0x424339
  424399:	mov    edi,DWORD PTR [edx]
  42439b:	shl    BYTE PTR [eax+0xb],cl
  42439e:	sbb    ebx,DWORD PTR [ebp+0x2e]
  4243a1:	rcr    cl,0x92
  4243a4:	pop    ebp
  4243a5:	push   ebx
  4243a6:	cmp    bh,al
  4243a8:	lods   al,BYTE PTR ds:[esi]
  4243a9:	xor    ch,BYTE PTR [ebx]
  4243ab:	enter  0x5989,0xae
  4243af:	dec    esp
  4243b0:	ret    0xbbb1
  4243b3:	lods   al,BYTE PTR ds:[esi]
  4243b4:	ins    BYTE PTR es:[edi],dx
  4243b5:	pop    ss
  4243b6:	dec    edx
  4243b7:	ror    DWORD PTR [ecx],0x5a
  4243ba:	mov    ah,BYTE PTR [ecx]
  4243bc:	popf   
  4243bd:	mov    eax,0x59451282
  4243c2:	and    ecx,DWORD PTR [eax-0x6f]
  4243c5:	xor    eax,0x1cbe53e8
  4243ca:	dec    ebx
  4243cb:	or     bl,BYTE PTR [edi-0x2]
  4243ce:	scas   eax,DWORD PTR es:[edi]
  4243cf:	jge    0x424450
  4243d1:	sub    al,0x32
  4243d3:	int    0xc4
  4243d5:	cmp    ebp,DWORD PTR [edx+0x12]
  4243d8:	popf   
  4243d9:	sbb    bh,BYTE PTR [ebx]
  4243db:	and    DWORD PTR [ecx-0xe],edx
  4243de:	dec    edx
  4243df:	pop    esi
  4243e0:	inc    eax
  4243e1:	sti    
  4243e2:	jns    0x42444a
  4243e4:	xor    BYTE PTR [esp+edx*2],cl
  4243e7:	rol    bl,cl
  4243e9:	sbb    al,0x42
  4243eb:	imul   edi,DWORD PTR fs:[esi],0xfd704112
  4243f2:	mov    al,0xa2
  4243f4:	pop    edx
  4243f5:	pop    ecx
  4243f6:	xor    al,0xed
  4243f8:	outs   dx,DWORD PTR ds:[esi]
  4243f9:	adc    al,dl
  4243fb:	push   cs
  4243fc:	fs add al,0xe4
  4243ff:	ds pop ebp
  424401:	arpl   cx,si
  424403:	adc    cl,BYTE PTR [edi-0x4e68bc39]
  424409:	pop    ecx
  42440a:	jecxz  0x4243f2
  42440c:	dec    edi
  42440d:	mov    eax,0xaac735c6
  424412:	dec    edx
  424413:	mov    ds:0x2706057d,eax
  424418:	hlt    
  424419:	imul   esp,DWORD PTR [edx+0x4f9ed2d2],0x3308dc74
  424423:	retf   0x175d
  424426:	adc    BYTE PTR [eax-0x59720a74],bh
  42442c:	mov    eax,0xcb55159
  424431:	and    esp,esi
  424433:	cld    
  424434:	mov    BYTE PTR [eax+0x4a],cl
  424437:	call   0xc7dd:0x50b29bcd
  42443e:	data16 cli 
  424440:	aaa    
  424441:	inc    esi
  424442:	scas   eax,DWORD PTR es:[edi]
  424443:	mov    eax,ds:0x226edf20
  424448:	hlt    
  424449:	pop    ss
  42444a:	daa    
  42444b:	test   DWORD PTR [eax+0x54],esi
  42444e:	dec    eax
  42444f:	into   
  424450:	fldcw  WORD PTR fs:[esi]
  424453:	xchg   ebp,eax
  424454:	sub    BYTE PTR [eax],ah
  424456:	dec    ecx
  424457:	mov    edx,0x421559c8
  42445c:	rcl    DWORD PTR [esi],0x80
  42445f:	mov    ebp,0x604b73cd
  424464:	arpl   WORD PTR [edx],ax
  424466:	mov    dh,0x75
  424468:	mov    al,0x5f
  42446a:	stc    
  42446b:	fnstsw WORD PTR ds:0xc156677a
  424471:	fnsave [eax]
  424473:	mov    eax,ds:0xbbcc3956
  424478:	adc    eax,0x74feeab5
  42447d:	ds jnp 0x424453
  424480:	inc    esi
  424481:	and    DWORD PTR [ebx+0x405222e7],esp
  424487:	js     0x4244e6
  424489:	leave  
  42448a:	(bad)  
  42448b:	and    DWORD PTR [ebx+ecx*1-0x42],0x42
  424490:	push   esp
  424491:	pop    ecx
  424492:	mov    ch,0x82
  424494:	fsubp  st(5),st
  424496:	cli    
  424497:	fs and cl,cl
  42449a:	dec    edx
  42449b:	test   al,cl
  42449d:	(bad)  
  42449e:	mov    dl,0x43
  4244a0:	inc    ebx
  4244a1:	test   al,0x9
  4244a3:	inc    edi
  4244a4:	mov    al,0x59
  4244a6:	inc    edx
  4244a7:	mov    edi,0x1adebe84
  4244ac:	xor    cl,BYTE PTR [ebx]
  4244ae:	in     eax,0x7e
  4244b0:	pop    ebp
  4244b1:	mov    DWORD PTR [ecx],edi
  4244b3:	fdivr  DWORD PTR [ecx+ecx*8-0x18]
  4244b7:	cmp    eax,0xc4ad5eea
  4244bc:	dec    ebx
  4244bd:	mov    ds,esi
  4244bf:	inc    edx
  4244c0:	or     al,0x8
  4244c2:	les    edx,FWORD PTR [edx]
  4244c4:	outs   dx,BYTE PTR ds:[esi]
  4244c5:	call   ecx
  4244c7:	es jp  0x424483
  4244ca:	fcomp  QWORD PTR es:[ebx+0x4ed2297d]
  4244d1:	jbe    0x4244d5
  4244d3:	fistp  WORD PTR [ebx]
  4244d5:	loope  0x42446d
  4244d7:	scas   eax,DWORD PTR es:[edi]
  4244d8:	outs   dx,BYTE PTR ds:[esi]
  4244d9:	sbb    eax,0x59511056
  4244de:	cmp    eax,0x90b8cbac
  4244e3:	cmp    eax,0x13dc599b
  4244e8:	ins    DWORD PTR es:[edi],dx
  4244e9:	popf   
  4244ea:	add    ah,0x5c
  4244ed:	mov    cl,0x4a
  4244ef:	test   BYTE PTR [ebp+0x39],al
  4244f2:	lds    edi,FWORD PTR [edx+0x7a]
  4244f5:	js     0x4244c2
  4244f7:	shr    BYTE PTR [edx-0x7643bf3e],cl
  4244fd:	cmp    DWORD PTR [ebx],0xffffffeb
  424500:	pop    esp
  424501:	push   esi
  424502:	push   ecx
  424503:	in     eax,dx
  424504:	inc    esp
  424505:	ret    
  424506:	jecxz  0x4244db
  424508:	lods   eax,DWORD PTR ds:[esi]
  424509:	retf   
  42450a:	fs ret 0xeba0
  42450e:	and    ecx,DWORD PTR [edx-0xa4a1e23]
  424514:	leave  
  424515:	dec    ebp
  424516:	dec    ebx
  424517:	jmp    0x424581
  424519:	sar    DWORD PTR [ebp-0x469dba9],cl
  42451f:	aad    0xbc
  424521:	bound  eax,QWORD PTR [esi]
  424523:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424524:	pop    ds
  424525:	push   esi
  424526:	clc    
  424527:	scas   al,BYTE PTR es:[edi]
  424528:	mov    eax,ds:0x88d44b6e
  42452d:	adc    eax,0x803be6a1
  424532:	sbb    eax,0x93b5ddb7
  424537:	or     al,0x74
  424539:	adc    BYTE PTR [ecx],bh
  42453b:	xchg   ebx,eax
  42453c:	pop    esp
  42453d:	fcom   QWORD PTR [esi]
  42453f:	daa    
  424540:	neg    dh
  424542:	inc    edx
  424543:	ja     0x4244e2
  424545:	popf   
  424546:	ins    BYTE PTR es:[edi],dx
  424547:	cdq    
  424548:	(bad)  
  424549:	pop    ecx
  42454a:	rcr    BYTE PTR [edi+edx*2-0x3e701b81],cl
  424551:	dec    esi
  424552:	dec    ebx
  424553:	out    0x15,al
  424555:	es or  esi,edi
  424558:	xchg   DWORD PTR [esi+0x6b59bcdc],ecx
  42455e:	div    ch
  424560:	icebp  
  424561:	pop    edx
  424562:	push   es
  424563:	mov    dl,0x65
  424565:	imul   ebp,DWORD PTR [ebx+0x7c],0x2f
  424569:	fisttp QWORD PTR [edx+0x29]
  42456c:	add    eax,0xf5bab07a
  424571:	xchg   ebp,eax
  424572:	xor    esp,edi
  424574:	mov    dl,0xf3
  424576:	retf   
  424577:	dec    esi
  424578:	xor    cl,BYTE PTR [edi-0x6a2c9d17]
  42457e:	dec    ecx
  42457f:	cmp    BYTE PTR [ebp-0x36],bl
  424582:	(bad)  
  424583:	(bad)  
  424584:	dec    edx
  424585:	fstp   TBYTE PTR [ebx]
  424587:	jno    0x42453f
  424589:	mov    edi,0xb358d2b1
  42458e:	mov    DWORD PTR [edx],ebp
  424590:	out    0xa5,eax
  424592:	and    BYTE PTR [ebx],0x5d
  424595:	mov    WORD PTR [edx-0x66],cs
  424598:	cmp    DWORD PTR [edx+0x54],eax
  42459b:	mov    WORD PTR [edi],es
  42459d:	mov    al,0x67
  42459f:	shr    DWORD PTR [ecx+0x4ea46522],cl
  4245a5:	jno    0x42457b
  4245a7:	jbe    0x424606
  4245a9:	mov    ds,WORD PTR [eax]
  4245ab:	mov    al,ds:0xce4e6150
  4245b0:	je     0x424557
  4245b2:	or     dl,dl
  4245b4:	shl    bl,cl
  4245b6:	xchg   edx,eax
  4245b7:	adc    al,0xe6
  4245b9:	(bad)  
  4245ba:	mov    bl,0x61
  4245bc:	pop    ebp
  4245bd:	call   0xa546:0xc890f303
  4245c4:	pop    es
  4245c5:	inc    esi
  4245c6:	or     dh,BYTE PTR ds:0x1d0f06ab
  4245cc:	ja     0x42454e
  4245ce:	pusha  
  4245cf:	sbb    ebx,DWORD PTR [edi-0x8]
  4245d2:	push   0x4c
  4245d4:	out    dx,eax
  4245d5:	gs jbe 0x4245cb
  4245d8:	mov    ch,0xa
  4245da:	loopne 0x4245b8
  4245dc:	pop    edx
  4245dd:	dec    ecx
  4245de:	rcr    dh,0x60
  4245e1:	cmp    DWORD PTR ds:0xcf59eef4,esp
  4245e7:	xchg   ecx,eax
  4245e8:	sti    
  4245e9:	sub    eax,0xd052cf42
  4245ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245ef:	jo     0x4245a2
  4245f1:	mov    edi,0x9bea102
  4245f6:	pop    ds
  4245f7:	add    BYTE PTR [eax],0x77
  4245fa:	xchg   edx,eax
  4245fb:	push   ebx
  4245fc:	pop    ebp
  4245fd:	inc    ebp
  4245fe:	add    ah,BYTE PTR [esi+0x5c974e7f]
  424604:	pop    ebp
  424605:	xchg   edi,eax
  424606:	mov    esp,0x4ed820a0
  42460b:	and    al,BYTE PTR [ebp+0x61e5685a]
  424611:	ror    DWORD PTR [ebx-0x7d],1
  424614:	or     eax,0x31f4ecac
  424619:	mov    WORD PTR [ebx+0x66],cs
  42461c:	jo     0x4245b9
  42461e:	xor    eax,0x6cac7bc7
  424623:	rcr    DWORD PTR [edi+0x56],cl
  424626:	push   0xea314ffe
  42462b:	jbe    0x42468a
  42462d:	xchg   DWORD PTR [ebx+0x3e01818d],edx
  424633:	scas   eax,DWORD PTR es:[edi]
  424634:	inc    esp
  424635:	pop    ecx
  424636:	nop
  424637:	xchg   esi,eax
  424638:	aam    0x3c
  42463a:	icebp  
  42463b:	fmul   st,st(1)
  42463d:	sub    eax,DWORD PTR [eax-0x5b]
  424640:	mov    dh,0x9a
  424642:	mov    ah,dh
  424644:	mov    WORD PTR [ebp+0x59e386be],es
  42464a:	mov    al,0x6c
  42464c:	neg    BYTE PTR [ebx]
  42464e:	sub    ch,BYTE PTR [edx]
  424650:	and    ecx,0x50
  424653:	mov    al,ds:0x720fffb0
  424658:	popa   
  424659:	fs je  0x42463a
  42465c:	stos   BYTE PTR es:[edi],al
  42465d:	ss push esi
  42465f:	shl    bh,cl
  424661:	pop    esi
  424662:	add    bh,BYTE PTR [eax-0x12]
  424665:	xchg   esi,eax
  424666:	aam    0x69
  424668:	pop    ebp
  424669:	popf   
  42466a:	mov    eax,ds:0xc5cb2581
  42466f:	(bad)  
  424670:	lahf   
  424671:	pop    ecx
  424672:	or     al,0xef
  424674:	sbb    esi,ebp
  424676:	push   ecx
  424677:	repz xchg edi,eax
  424679:	stc    
  42467a:	push   0xffffffb0
  42467c:	pop    ebp
  42467d:	jg     0x424686
  42467f:	das    
  424680:	(bad)  
  424681:	mov    bh,0x7b
  424683:	outs   dx,DWORD PTR ds:[esi]
  424684:	mov    ds:0x71b4f59,eax
  424689:	(bad)  [edi-0x7b]
  42468c:	cmp    DWORD PTR ds:0x97922e4b,edi
  424692:	sbb    cl,dl
  424694:	inc    esi
  424695:	adc    BYTE PTR [esi],0xd2
  424698:	out    0x21,al
  42469a:	sbb    ch,bl
  42469c:	pop    ss
  42469d:	ins    DWORD PTR es:[edi],dx
  42469e:	arpl   WORD PTR [ebx*2-0x4e46fac5],bx
  4246a5:	add    eax,DWORD PTR [edx+0x78701cfd]
  4246ab:	xor    BYTE PTR [edx+0x2c],dl
  4246ae:	sbb    al,0xd8
  4246b0:	and    al,0x4c
  4246b2:	stos   DWORD PTR es:[edi],eax
  4246b3:	add    edx,DWORD PTR [ecx]
  4246b5:	mov    cl,BYTE PTR [ebx-0x71]
  4246b8:	mov    bh,0x37
  4246ba:	imul   ebp,DWORD PTR [ebp+0x65],0x4a
  4246be:	adc    al,0xd2
  4246c0:	inc    ebx
  4246c1:	aam    0x74
  4246c3:	(bad)  
  4246c4:	iret   
  4246c5:	pop    edi
  4246c6:	add    esi,edi
  4246c8:	pop    ebp
  4246c9:	xor    BYTE PTR [edx-0x3038753],0xcb
  4246d0:	imul   ebx,DWORD PTR [ecx-0x4c],0x56
  4246d4:	xchg   edx,eax
  4246d5:	and    bh,BYTE PTR [ecx]
  4246d7:	jp     0x4246e4
  4246d9:	(bad)  [edx+0x74]
  4246dc:	sub    al,0xdf
  4246de:	jmp    0x152ee89a
  4246e3:	rcr    cl,cl
  4246e5:	pop    eax
  4246e6:	mov    al,0xac
  4246e8:	sub    eax,0x5d72a3da
  4246ed:	inc    eax
  4246ee:	jl     0x4246bf
  4246f0:	sub    DWORD PTR [eax-0x43],0x54
  4246f4:	stos   DWORD PTR es:[edi],eax
  4246f5:	pop    ecx
  4246f6:	gs mov ah,0x1a
  4246f9:	mov    DWORD PTR [ecx+0x6b],ebp
  4246fc:	push   ss
  4246fd:	sbb    cl,BYTE PTR [ebx+0x70]
  424700:	daa    
  424701:	inc    ecx
  424702:	div    al
  424704:	dec    edx
  424705:	and    eax,0x6d4d23d
  42470a:	dec    edi
  42470b:	mov    edx,0x7373ed5a
  424710:	pop    ebp
  424711:	sub    ebx,DWORD PTR [ebx-0x262c2ec1]
  424717:	ins    BYTE PTR es:[edi],dx
  424718:	or     eax,DWORD PTR [esi+0x6c]
  42471b:	xchg   ebp,eax
  42471c:	ja     0x424786
  42471e:	imul   ebx,edx,0x1
  424721:	test   BYTE PTR [ecx+0x2a],cl
  424724:	fnop   
  424727:	cmp    al,0xd
  424729:	mov    dh,0x60
  42472b:	sbb    ebx,DWORD PTR [edi+0x48]
  42472e:	push   edi
  424730:	mov    eax,ds:0x5c860133
  424735:	aas    
  424736:	pop    ss
  424737:	sbb    esi,ecx
  424739:	out    0x6e,al
  42473b:	sbb    ch,BYTE PTR [esi+0x57891659]
  424741:	sbb    eax,0xa2a4ccff
  424746:	dec    ecx
  424747:	nop
  424748:	cld    
  424749:	jecxz  0x42478d
  42474b:	sbb    DWORD PTR ds:0x5fcbd527,ebp
  424751:	pop    ecx
  424752:	dec    edi
  424753:	push   edx
  424754:	xchg   ecx,eax
  424755:	iret   
  424756:	cdq    
  424757:	dec    ebx
  424758:	(bad)  
  424759:	lahf   
  42475a:	dec    edx
  42475b:	pop    esi
  42475c:	das    
  42475d:	enter  0x5896,0x35
  424761:	mov    esi,0xf7f1d6ce
  424766:	popf   
  424767:	or     edx,eax
  424769:	fldenv [eax]
  42476b:	in     al,dx
  42476c:	jo     0x42478c
  42476e:	dec    edx
  42476f:	inc    BYTE PTR [esi+0x7b]
  424772:	mov    ch,0x7b
  424774:	or     eax,0x7899fc70
  424779:	pop    ecx
  42477a:	shl    BYTE PTR [ebp+0x2c315bfb],1
  424780:	lods   al,BYTE PTR ds:[esi]
  424781:	test   BYTE PTR [edx+0x75],0x96
  424785:	jg     0x4247f6
  424787:	mov    edi,ebp
  424789:	sahf   
  42478a:	mov    cl,0xd1
  42478c:	xchg   ecx,eax
  42478d:	cdq    
  42478e:	push   eax
  42478f:	lea    esi,ds:[edx]
  424792:	mov    bl,0xa0
  424794:	scas   al,BYTE PTR es:[edi]
  424795:	(bad)  
  424796:	dec    edx
  424797:	jae    0x424805
  424799:	mov    dh,BYTE PTR [edi+0x355807fc]
  42479f:	sar    BYTE PTR [esi-0x7ce3f2bb],cl
  4247a5:	jl     0x424774
  4247a7:	sbb    eax,DWORD PTR [esi+0x76]
  4247aa:	ja     0x4247c1
  4247ac:	pop    ebp
  4247ad:	cmp    ecx,DWORD PTR [ebx]
  4247af:	jmp    0xd2e155e8
  4247b4:	(bad)  
  4247b5:	clc    
  4247b6:	sti    
  4247b7:	mov    edi,0x82035a7b
  4247bc:	pop    ebp
  4247bd:	and    eax,0x62e41982
  4247c2:	scas   al,BYTE PTR es:[edi]
  4247c3:	push   edi
  4247c4:	sbb    BYTE PTR [ebx+0x6d],bl
  4247c7:	ret    0x7f0a
  4247ca:	call   DWORD PTR [edx+0x35]
  4247cd:	int3   
  4247ce:	mov    WORD PTR [ebx+edi*4+0x16],?
  4247d2:	dec    ebx
  4247d3:	aas    
  4247d4:	jo     0x424791
  4247d6:	push   esi
  4247d7:	jle    0x424832
  4247d9:	mov    esi,0x3448d2ed
  4247de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	or     esp,DWORD PTR [eax]
  4247e2:	push   0x3e436594
  4247e7:	rol    BYTE PTR [ebp+0x3f6104a7],cl
  4247ed:	aad    0xfb
  4247ef:	shl    BYTE PTR ds:0x64cf1539,cl
  4247f5:	test   ah,0x1f
  4247f8:	pop    esp
  4247f9:	outs   dx,DWORD PTR ds:[esi]
  4247fa:	inc    eax
  4247fb:	(bad)  
  4247fc:	scas   eax,DWORD PTR es:[edi]
  4247fd:	xchg   eax,edi
  4247ff:	out    dx,al
  424800:	lods   eax,DWORD PTR ds:[esi]
  424801:	or     edi,DWORD PTR [edi+0x5cbb6cd2]
  424807:	fdiv   QWORD PTR [ecx+0x29]
  42480a:	sbb    edi,DWORD PTR [ebx+0x8caac5f]
  424810:	sbb    eax,0xdbc5022e
  424815:	rol    BYTE PTR [edi],1
  424817:	xchg   edx,eax
  424818:	(bad)  
  424819:	in     eax,0xbc
  42481b:	arpl   WORD PTR [ebp-0x59],dx
  42481e:	dec    edx
  42481f:	mov    esp,0x5000c4c6
  424824:	pop    edx
  424825:	add    eax,0xd515fbd4
  42482a:	dec    edx
  42482b:	dec    edx
  42482c:	sbb    ch,dh
  42482e:	sbb    al,0xf5
  424830:	mov    eax,0x79b94ac9
  424835:	cmc    
  424836:	gs arpl sp,dx
  424839:	mov    ds:0xfb95d241,eax
  42483e:	mov    bh,0x42
  424840:	fwait
  424841:	repz pop es
  424843:	pusha  
  424844:	outs   dx,BYTE PTR ds:[esi]
  424845:	dec    edx
  424846:	(bad)  
  424847:	cmp    edx,ecx
  424849:	frstor ds:0xb1e3dd47
  42484f:	mov    WORD PTR [esi+0x59],?
  424852:	loop   0x42482b
  424854:	mov    DWORD PTR [ecx+0x2ffdfb6],eax
  42485a:	dec    ebx
  42485b:	and    al,0xb5
  42485d:	out    dx,al
  42485e:	jns    0x424859
  424860:	mov    ebp,0xe9d1cf18
  424865:	data16 icebp 
  424867:	xor    DWORD PTR [eax+edx*4],esp
  42486a:	ret    0xf8d0
  42486d:	shl    eax,0x34
  424870:	pop    ebp
  424871:	div    DWORD PTR [edi+0x48]
  424874:	test   eax,0xea41b2eb
  424879:	push   ecx
  42487a:	mov    cs,WORD PTR [eax-0xd4ecdce]
  424880:	pop    ebp
  424881:	cmp    eax,0x80f4a1eb
  424886:	add    eax,0x47460e53
  42488b:	and    dh,BYTE PTR ds:0xc862bf7c
  424891:	nop
  424892:	dec    edx
  424893:	ret    0x4e75
  424896:	pusha  
  424897:	mov    ds:0xd5985c48,al
  42489c:	rol    BYTE PTR [edx+0x363f0b79],cl
  4248a2:	mov    ebp,0x4abd65f4
  4248a7:	loope  0x4248f0
  4248a9:	mov    ds:0x9fd5e6fb,eax
  4248ae:	sbb    ebx,edi
  4248b0:	cmp    BYTE PTR [ecx],cl
  4248b2:	pop    edi
  4248b3:	push   esi
  4248b4:	mov    ah,0x82
  4248b6:	mov    ebx,0xe036cd7d
  4248bb:	mov    ecx,0xcd7e6b52
  4248c0:	je     0x4248f2
  4248c2:	xlat   BYTE PTR ds:[ebx]
  4248c3:	ret    0x2033
  4248c6:	shr    BYTE PTR es:[ecx],cl
  4248c9:	fld    DWORD PTR [ebx]
  4248cb:	fdivr  DWORD PTR [eax]
  4248cd:	(bad)  
  4248ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248cf:	inc    edx
  4248d0:	pop    ebp
  4248d1:	jge    0x4248ed
  4248d3:	inc    ebx
  4248d4:	in     eax,dx
  4248d5:	push   eax
  4248d6:	and    esi,DWORD PTR ss:[eax]
  4248d9:	inc    esi
  4248da:	jne    0x424883
  4248dc:	and    eax,0xc7663cbb
  4248e1:	or     eax,0x50298b4b
  4248e6:	mov    eax,DWORD PTR [eax+0x5]
  4248e9:	scas   eax,DWORD PTR es:[edi]
  4248ea:	addr16 stc 
  4248ec:	or     ecx,edi
  4248ee:	dec    edx
  4248ef:	add    DWORD PTR [edi+0x727fdd02],ecx
  4248f5:	(bad)  
  4248f6:	xor    DWORD PTR es:[edx+edx*8],ecx
  4248fa:	dec    edi
  4248fb:	retf   0xd59d
  4248fe:	jmp    0x4248f2
  424900:	sbb    eax,esp
  424902:	pushf  
  424903:	sar    BYTE PTR [esi],1
  424905:	cld    
  424906:	sbb    BYTE PTR [ebx-0x1b],ah
  424909:	xchg   edx,ebp
  42490b:	aam    0x57
  42490d:	and    al,0x4b
  42490f:	ins    DWORD PTR es:[edi],dx
  424910:	aam    0xda
  424912:	xchg   edx,eax
  424913:	push   ebp
  424914:	scas   eax,DWORD PTR es:[edi]
  424915:	outs   dx,BYTE PTR ds:[esi]
  424916:	fwait
  424917:	rcr    BYTE PTR [ebx-0x34],cl
  42491a:	enter  0x8e0d,0x4a
  42491e:	sti    
  42491f:	sbb    BYTE PTR [ebp-0x3],bl
  424922:	fs scas eax,DWORD PTR es:[edi]
  424924:	outs   dx,DWORD PTR ds:[esi]
  424925:	fsub   DWORD PTR [esi+0x4]
  424928:	int3   
  424929:	pop    ecx
  42492a:	psubusw mm2,QWORD PTR [edi+0x4b2af198]
  424931:	ror    BYTE PTR [edx-0x6],cl
  424934:	fidiv  WORD PTR [ecx+0x2c059b1a]
  42493a:	in     al,dx
  42493b:	rcl    BYTE PTR [edx+0x17e40a2d],cl
  424941:	enter  0x803b,0x5d
  424945:	stos   DWORD PTR es:[edi],eax
  424946:	(bad)  
  424947:	out    0xc6,eax
  424949:	xor    eax,0x11e4629c
  42494e:	xor    al,0xda
  424950:	pop    ebp
  424951:	mov    bh,0xa
  424953:	es ret 0x3d9d
  424957:	push   cs
  424958:	pop    ebp
  424959:	ins    BYTE PTR es:[edi],dx
  42495a:	push   ebp
  42495b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42495c:	rol    bl,0x97
  42495f:	mov    al,ds:0xd076c9a3
  424964:	gs xor ch,ch
  424967:	scas   eax,DWORD PTR es:[edi]
  424968:	(bad)  
  424969:	fs repnz mov bl,0xfd
  42496d:	fldcw  WORD PTR [eax-0x63c4c637]
  424973:	jmp    0xcd2da319
  424978:	pop    esp
  424979:	mov    esp,0x6ba70053
  42497e:	inc    esi
  42497f:	imul   ebx,DWORD PTR [ecx-0x1074b47a],0x1d3b2c16
  424989:	inc    ebx
  42498a:	(bad)  
  42498c:	test   al,0xa6
  42498e:	dec    edx
  42498f:	mov    ebp,0xef174f76
  424994:	adc    al,0x9b
  424996:	dec    ecx
  424997:	jle    0x42493c
  424999:	adc    eax,0x4d9d1838
  42499e:	out    0x6a,al
  4249a0:	jne    0x4249fb
  4249a2:	test   al,0x27
  4249a4:	mov    ax,ds:0xaf4f0aa4
  4249aa:	dec    edx
  4249ab:	(bad)  
  4249ac:	jo     0x4249ef
  4249ae:	fdivr  DWORD PTR [ecx+0x33]
  4249b1:	ret    0xd255
  4249b4:	cmp    al,0x2c
  4249b6:	push   edi
  4249b7:	push   esi
  4249b8:	fcomp  DWORD PTR [esi+0x7e5897d9]
  4249be:	jnp    0x4249d6
  4249c0:	pop    ebp
  4249c1:	jecxz  0x4249b9
  4249c3:	sbb    edx,DWORD PTR [eax+0x35]
  4249c6:	inc    ecx
  4249c7:	shl    cl,cl
  4249c9:	call   0xa5ec:0x9c19f8f5
  4249d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4249d1:	mov    al,0x4a
  4249d3:	pop    ecx
  4249d4:	jp     0x42499b
  4249d6:	xchg   ecx,edx
  4249d8:	push   ebx
  4249d9:	jo     0x4249ec
  4249db:	shl    BYTE PTR [ecx-0x1346256d],cl
  4249e1:	inc    esi
  4249e2:	xchg   edx,eax
  4249e3:	ins    BYTE PTR es:[edi],dx
  4249e4:	mov    eax,ds:0x4f74230f
  4249e9:	fyl2x  
  4249eb:	mov    ch,0x37
  4249ed:	xchg   edi,eax
  4249ee:	add    BYTE PTR [eax-0x2c9a8c93],ah
  4249f4:	ds je  0x424a25
  4249f7:	sub    ebx,DWORD PTR [esi+0xd]
  4249fa:	fcmovne st,st(6)
  4249fc:	pop    ebp
  4249fd:	xchg   DWORD PTR [eax-0x47],esi
  424a00:	jmp    0x2c537171
  424a05:	inc    esp
  424a06:	mov    ds:0x8b89d2db,eax
  424a0b:	fldenv [eax-0x56]
  424a0e:	adc    dh,bh
  424a10:	pop    ebp
  424a11:	lock out 0x3e,eax
  424a14:	js     0x424a0f
  424a16:	pop    esp
  424a17:	cmp    dh,BYTE PTR [edx+0x5a]
  424a1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a1b:	gs mov ch,0xab
  424a1e:	and    BYTE PTR [eax-0xe],ah
  424a21:	mov    edx,0xb851015a
  424a26:	push   esp
  424a27:	ret    
  424a28:	ins    DWORD PTR es:[edi],dx
  424a29:	xor    eax,DWORD PTR fs:[edi]
  424a2c:	jmp    0x4249e3
  424a2e:	inc    esi
  424a2f:	shl    ah,cl
  424a31:	cmp    DWORD PTR [esi+0x49cb356e],ecx
  424a37:	sbb    dh,BYTE PTR [esi+0x75]
  424a3a:	lock inc ecx
  424a3c:	repz popa 
  424a3e:	and    eax,0x62ef1012
  424a43:	retf   0x5e45
  424a46:	mov    ds,WORD PTR [edx-0x4c]
  424a49:	mov    ecx,0xab2dd56e
  424a4e:	dec    edx
  424a4f:	xor    eax,0x4ae3660d
  424a54:	leave  
  424a55:	mov    cs,WORD PTR [edx-0x7ce40d2d]
  424a5b:	and    esi,0x78be5192
  424a61:	pop    ss
  424a62:	dec    ebx
  424a63:	add    BYTE PTR [ebx-0x80],bl
  424a66:	mov    ah,0x3a
  424a68:	inc    edx
  424a69:	outs   dx,BYTE PTR ds:[esi]
  424a6a:	adc    cl,cl
  424a6c:	popa   
  424a6d:	mov    ?,WORD PTR [eax]
  424a6f:	rcr    DWORD PTR [ebp+0xc],cl
  424a72:	popf   
  424a73:	dec    edx
  424a74:	pop    esi
  424a75:	push   ebp
  424a76:	dec    edx
  424a77:	cmc    
  424a78:	add    dl,dl
  424a7a:	out    0x92,al
  424a7c:	ins    DWORD PTR es:[edi],dx
  424a7d:	mov    ds:0x5983ba47,al
  424a82:	mov    eax,ds:0xe45121bf
  424a87:	mov    ds:0xd94b4723,al
  424a8c:	dec    esp
  424a8d:	jmp    0x424a64
  424a8f:	mov    al,ds:0xe4ea6182
  424a94:	inc    eax
  424a95:	or     BYTE PTR [ecx-0x6142aa2e],bl
  424a9b:	ffreep st(7)
  424a9d:	push   ebx
  424a9e:	dec    ebx
  424a9f:	pop    es
  424aa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424aa1:	xlat   BYTE PTR ds:[ebx]
  424aa2:	rcr    DWORD PTR [eax-0x39c273b2],cl
  424aa8:	sbb    al,0x77
  424aaa:	fwait
  424aab:	cmp    al,0x7e
  424aad:	aad    0xe2
  424aaf:	(bad)  
  424ab0:	xchg   ecx,eax
  424ab1:	mov    eax,ds:0xd8f2322e
  424ab6:	cmc    
  424ab7:	int    0xe2
  424ab9:	mov    ch,0x66
  424abb:	in     eax,dx
  424abc:	push   edx
  424abd:	in     eax,dx
  424abe:	(bad)  
  424abf:	fcmovnu st,st(2)
  424ac1:	retf   
  424ac2:	xchg   DWORD PTR [edx+0x54],edx
  424ac5:	and    ah,al
  424ac7:	rcr    bh,cl
  424ac9:	cdq    
  424aca:	das    
  424acb:	jne    0x424af8
  424acd:	lahf   
  424ace:	pop    ebp
  424acf:	jmp    0x424b3b
  424ad1:	call   0xdf53a56b
  424ad6:	push   ds
  424ad7:	(bad)  
  424ad8:	out    0x87,al
  424ada:	dec    esi
  424adb:	test   al,0x1d
  424add:	(bad)  
  424ade:	fstp   TBYTE PTR [ebx-0x10]
  424ae1:	pop    eax
  424ae2:	xchg   ebp,eax
  424ae3:	jle    0x424ae0
  424ae5:	frstor [eax]
  424ae7:	xchg   esi,eax
  424ae8:	sub    DWORD PTR [esi+0x3852205a],esp
  424aee:	inc    esp
  424aef:	(bad)  
  424af0:	xchg   esi,eax
  424af1:	sti    
  424af2:	mov    ecx,0x79feb8ba
  424af7:	rcl    BYTE PTR [ecx-0x63],1
  424afa:	bound  esp,QWORD PTR [eax+0x32]
  424afd:	xchg   esp,eax
  424afe:	xchg   edx,eax
  424aff:	push   eax
  424b00:	popa   
  424b01:	adc    edi,ecx
  424b03:	mov    dl,ah
  424b05:	mov    ecx,0x42cd74d4
  424b0a:	lea    esi,[edi-0x13]
  424b0d:	add    eax,0x5622cb4b
  424b12:	or     al,ah
  424b14:	mov    edx,0x5defe77c
  424b19:	mov    edx,0x4675b2df
  424b1e:	mov    eax,0x5d54d143
  424b23:	retf   
  424b24:	retf   
  424b25:	cdq    
  424b26:	pop    eax
  424b27:	or     DWORD PTR [ecx+ebp*2],ecx
  424b2a:	sub    al,0xe1
  424b2c:	pop    ebp
  424b2d:	int3   
  424b2e:	test   al,0x79
  424b30:	scas   eax,DWORD PTR es:[edi]
  424b31:	fwait
  424b32:	inc    edi
  424b33:	inc    edx
  424b34:	lods   al,BYTE PTR ds:[esi]
  424b35:	pop    ecx
  424b36:	xchg   DWORD PTR [edx+0x3849c4ae],ebp
  424b3c:	fmul   DWORD PTR [ecx+0x63feae57]
  424b42:	in     eax,0xce
  424b44:	adc    al,0x46
  424b46:	cwde   
  424b47:	adc    bh,ah
  424b49:	dec    esi
  424b4a:	push   ss
  424b4b:	jns    0x424ae4
  424b4d:	and    eax,0xc1cf8a4b
  424b52:	clc    
  424b53:	addr16 icebp 
  424b55:	outs   dx,BYTE PTR ds:[esi]
  424b56:	retf   
  424b57:	int    0xf6
  424b59:	lods   eax,DWORD PTR ds:[esi]
  424b5a:	outs   dx,DWORD PTR ds:[esi]
  424b5b:	stos   BYTE PTR es:[edi],al
  424b5c:	(bad)  
  424b5e:	(bad)  
  424b5f:	sti    
  424b60:	jecxz  0x424bd1
  424b62:	dec    ebx
  424b63:	scas   al,BYTE PTR es:[edi]
  424b64:	mov    bl,0x95
  424b66:	add    BYTE PTR [eax],al
  424b68:	push   ebp
  424b69:	mov    ebp,esp
  424b6b:	sub    esp,0x54
  424b6e:	push   0x54
  424b70:	push   0x502bd000
  424b75:	push   0x15
  424b77:	push   0xffffffb3
  424b79:	push   0xfc570800
  424b7e:	call   0x426f61
  424b83:	add    esp,0x14
  424b86:	push   0x10273e00
  424b8b:	push   0x26
  424b8d:	push   0xa44bfd00
  424b92:	push   0x540cca00
  424b97:	call   0x427075
  424b9c:	add    esp,0x10
  424b9f:	push   ebx
  424ba0:	push   0xffffffb3
  424ba2:	push   0xaf4f600
  424ba7:	push   0x51
  424ba9:	call   0x4279df
  424bae:	add    esp,0xc
  424bb1:	call   0x4276cd
  424bb6:	push   esi
  424bb7:	push   0xfffffff0
  424bb9:	call   0x4271b5
  424bbe:	add    esp,0x4
  424bc1:	push   0xffffffd3
  424bc3:	call   0x427075
  424bc8:	add    esp,0x4
  424bcb:	push   edi
  424bcc:	cmp    eax,0x6700
  424bd1:	jne    0x424beb
  424bd3:	test   eax,0x6a
  424bd8:	je     0x424beb
  424bda:	push   0xffffffce
  424bdc:	push   0x0
  424bde:	push   0xba93bf00
  424be3:	call   0x4273d1
  424be8:	add    esp,0xc
  424beb:	push   0x6e
  424bed:	push   0x746f3d00
  424bf2:	call   0x427075
  424bf7:	add    esp,0x8
  424bfa:	push   0xbaab0300
  424bff:	call   0x4271b5
  424c04:	add    esp,0x4
  424c07:	call   0x4273d1
  424c0c:	push   0x5c108d00
  424c11:	push   0xaa981300
  424c16:	push   0xfc05da00
  424c1b:	push   0x7a
  424c1d:	call   0x42751b
  424c22:	add    esp,0x10
  424c25:	push   0xf86b4500
  424c2a:	call   0x427075
  424c2f:	add    esp,0x4
  424c32:	push   0x69
  424c34:	push   0x1471ca00
  424c39:	push   0x12
  424c3b:	push   0x57
  424c3d:	push   0x27
  424c3f:	call   0x426f61
  424c44:	add    esp,0x14
  424c47:	call   0x4272e2
  424c4c:	xor    esi,esi
  424c4e:	push   0xaabf2000
  424c53:	push   0xffffffb8
  424c55:	call   0x4276cd
  424c5a:	add    esp,0x8
  424c5d:	mov    ecx,esi
  424c5f:	mov    DWORD PTR [ebp-0x50],ecx
  424c62:	push   0xffffff81
  424c64:	push   0xffffff95
  424c66:	push   0xffffffc9
  424c68:	push   0xd4730000
  424c6d:	call   0x4272e2
  424c72:	add    esp,0x10
  424c75:	push   0xffffffb9
  424c77:	push   0x184e7100
  424c7c:	push   0x7c7f9000
  424c81:	push   0xf8032200
  424c86:	push   0x1c64d100
  424c8b:	call   0x4273d1
  424c90:	add    esp,0x14
  424c93:	call   0x426f61
  424c98:	push   0xffffff93
  424c9a:	push   0xf829a100
  424c9f:	call   0x4271b5
  424ca4:	add    esp,0x8
  424ca7:	push   0xdab45e00
  424cac:	push   0xffffff9d
  424cae:	push   0xffffffc8
  424cb0:	push   0x1473e000
  424cb5:	push   0x56
  424cb7:	call   0x4273d1
  424cbc:	add    esp,0x14
  424cbf:	call   0x4271b5
  424cc4:	push   0xffffffe5
  424cc6:	push   0xc665d00
  424ccb:	push   0xffffff92
  424ccd:	push   0x8ad6e000
  424cd2:	call   0x426f61
  424cd7:	add    esp,0x10
  424cda:	sub    esi,eax
  424cdc:	cmp    esi,0xb
  424cdf:	je     0x424da9
  424ce5:	mov    ebx,DWORD PTR [ebp-0x50]
  424ce8:	push   0x51
  424cea:	push   0x43
  424cec:	push   0x1
  424cee:	push   0xffffffda
  424cf0:	push   0x342f9a00
  424cf5:	call   0x4272e2
  424cfa:	add    esp,0x14
  424cfd:	cmp    esi,0x4d
  424d00:	je     0x424da9
  424d06:	push   0x9ad86600
  424d0b:	push   0xfffffff2
  424d0d:	push   0xfffffff0
  424d0f:	call   0x4273d1
  424d14:	add    esp,0xc
  424d17:	and    ebx,eax
  424d19:	push   0x24
  424d1b:	call   0x42751b
  424d20:	add    esp,0x4
  424d23:	xor    ecx,ecx
  424d25:	push   0xfffffffc
  424d27:	push   0xc3b1400
  424d2c:	push   0x90ce1300
  424d31:	call   0x427075
  424d36:	add    esp,0xc
  424d39:	mov    ecx,DWORD PTR [ebp-0x50]
  424d3c:	sub    DWORD PTR [ebp-0x50],esi
  424d3f:	call   0x4271b5
  424d44:	sub    ebx,eax
  424d46:	add    ebx,eax
  424d48:	cmp    ebx,DWORD PTR [ebp-0x10]
  424d4b:	je     0x424da9
  424d4d:	mov    edi,DWORD PTR [ebp-0x50]
  424d50:	push   0xffffffd8
  424d52:	push   0x48
  424d54:	call   0x4279df
  424d59:	add    esp,0x8
  424d5c:	xor    ecx,ecx
  424d5e:	cmp    edi,0xffffff8a
  424d61:	je     0x424da9
  424d63:	sub    edi,ecx
  424d65:	mov    ecx,DWORD PTR [ebp-0x50]
  424d68:	cmp    ecx,DWORD PTR ds:0x450078
  424d6e:	je     0x424da9
  424d70:	push   0x5aa44700
  424d75:	push   0xc016f100
  424d7a:	push   0x7b
  424d7c:	call   0x4271b5
  424d81:	add    esp,0xc
  424d84:	cmp    ebx,0x12
  424d87:	je     0x424da9
  424d89:	sub    DWORD PTR [ebp-0x50],eax
  424d8c:	push   0xffffffac
  424d8e:	push   0xffffffac
  424d90:	push   0xa04ab500
  424d95:	push   0x68e06e00
  424d9a:	push   0x41
  424d9c:	call   0x42751b
  424da1:	add    esp,0x14
  424da4:	add    ebx,edi
  424da6:	sub    DWORD PTR [ebp-0x50],ebx
  424da9:	push   0x22
  424dab:	call   0x4279df
  424db0:	add    esp,0x4
  424db3:	call   0x4272e2
  424db8:	push   0x6f
  424dba:	push   0x63
  424dbc:	push   0x1c674700
  424dc1:	call   0x426f61
  424dc6:	add    esp,0xc
  424dc9:	or     esi,eax
  424dcb:	mov    ebx,0x4f
  424dd0:	sub    ebx,esi
  424dd2:	push   0x31
  424dd4:	push   0x402f2900
  424dd9:	push   0x3a8a3900
  424dde:	call   0x427075
  424de3:	add    esp,0xc
  424de6:	push   0x9ad3fa00
  424deb:	push   0xbaebe700
  424df0:	push   0x90712d00
  424df5:	push   0x53
  424df7:	push   0xae30e00
  424dfc:	call   0x426f61
  424e01:	add    esp,0x14
  424e04:	push   0xa446e400
  424e09:	call   0x4272e2
  424e0e:	add    esp,0x4
  424e11:	cmp    eax,DWORD PTR [ebp-0x18]
  424e14:	jne    0x424e44
  424e16:	test   ebx,0x3c
  424e1c:	je     0x424e44
  424e1e:	call   0x4272e2
  424e23:	cmp    edi,0xefba
  424e29:	jne    0x424e44
  424e2b:	push   0xffffffe5
  424e2d:	push   0x2d
  424e2f:	push   0xdacd5300
  424e34:	call   0x4272e2
  424e39:	add    esp,0xc
  424e3c:	cmp    esi,0xffffff81
  424e3f:	je     0x424e44
  424e41:	or     DWORD PTR [ebp-0x50],ebx
  424e44:	call   0x426f61
  424e49:	push   0x17
  424e4b:	push   0x37
  424e4d:	push   0xffffffb3
  424e4f:	call   0x4272e2
  424e54:	add    esp,0xc
  424e57:	call   0x4273d1
  424e5c:	sub    ebx,edi
  424e5e:	mov    ecx,DWORD PTR [ebp-0x50]
  424e61:	push   0x53
  424e63:	push   0xfffffffa
  424e65:	call   0x4276cd
  424e6a:	add    esp,0x8
  424e6d:	or     DWORD PTR [ebp-0x50],esi
  424e70:	mov    edx,DWORD PTR [ebp-0x50]
  424e73:	cmp    edx,0xffffffba
  424e76:	jne    0x424e8f
  424e78:	push   0xffffff82
  424e7a:	push   0x946ea600
  424e7f:	push   0x34371300
  424e84:	call   0x4273d1
  424e89:	add    esp,0xc
  424e8c:	add    DWORD PTR [ebp-0x50],ebx
  424e8f:	push   0x39
  424e91:	push   0xffffffa4
  424e93:	push   0x8
  424e95:	push   0xffffffe0
  424e97:	push   0x441d2f00
  424e9c:	call   0x4279df
  424ea1:	add    esp,0x14
  424ea4:	push   0x1e
  424ea6:	push   0x39
  424ea8:	push   0xd0319c00
  424ead:	call   0x4273d1
  424eb2:	add    esp,0xc
  424eb5:	push   0x881f9100
  424eba:	push   0xcc2e5a00
  424ebf:	call   0x4273d1
  424ec4:	add    esp,0x8
  424ec7:	push   0x12
  424ec9:	push   0xf43d8200
  424ece:	push   0xd435ba00
  424ed3:	push   0xc883cb00
  424ed8:	call   0x426f61
  424edd:	add    esp,0x10
  424ee0:	push   0xc7da000
  424ee5:	call   0x426f61
  424eea:	add    esp,0x4
  424eed:	or     esi,ebx
  424eef:	push   0x46
  424ef1:	push   0xc8d4c200
  424ef6:	push   0x10cbfc00
  424efb:	push   0xffffffb1
  424efd:	call   0x4273d1
  424f02:	add    esp,0x10
  424f05:	mov    ecx,DWORD PTR [ebp-0x50]
  424f08:	add    DWORD PTR [ebp-0x50],ebx
  424f0b:	push   0xffffffd6
  424f0d:	push   0x41
  424f0f:	push   0xb4666600
  424f14:	push   0xfaf28b00
  424f19:	call   0x4279df
  424f1e:	add    esp,0x10
  424f21:	sub    esi,edi
  424f23:	xor    DWORD PTR [ebp-0x50],esi
  424f26:	mov    DWORD PTR [ebp-0x50],edi
  424f29:	cmp    esi,eax
  424f2b:	jne    0x424f42
  424f2d:	push   0xffffffa7
  424f2f:	push   0xaab5bb00
  424f34:	push   0x53
  424f36:	push   0x3e
  424f38:	push   0xffffff88
  424f3a:	call   0x42751b
  424f3f:	add    esp,0x14
  424f42:	push   0x90721600
  424f47:	call   0x426f61
  424f4c:	add    esp,0x4
  424f4f:	push   0x32
  424f51:	push   0x0
  424f53:	call   DWORD PTR ds:0x44f8d4
  424f59:	add    DWORD PTR [ebp-0x50],edi
  424f5c:	cmp    eax,0x5d47
  424f61:	jne    0x4252d6
  424f67:	push   0xffffffd0
  424f69:	call   0x426f61
  424f6e:	add    esp,0x4
  424f71:	push   0x57
  424f73:	push   0x60
  424f75:	call   0x42751b
  424f7a:	add    esp,0x8
  424f7d:	mov    eax,DWORD PTR ds:0x450078
  424f83:	add    DWORD PTR [ebp-0x50],eax
  424f86:	add    DWORD PTR [ebp-0x50],ebx
  424f89:	xor    ebx,ebx
  424f8b:	mov    edi,DWORD PTR [ebp-0x50]
  424f8e:	sub    edi,ebx
  424f90:	sub    edi,eax
  424f92:	sub    DWORD PTR [ebp-0x50],ebx
  424f95:	test   edi,0x8e1d
  424f9b:	jne    0x424fbc
  424f9d:	mov    esi,DWORD PTR [ebp-0x50]
  424fa0:	cmp    esi,ebx
  424fa2:	je     0x424fbc
  424fa4:	mov    edx,0xa0
  424fa9:	or     edi,esi
  424fab:	cmp    edi,DWORD PTR ds:0x450078
  424fb1:	jne    0x424fbc
  424fb3:	add    DWORD PTR [ebp-0x50],eax
  424fb6:	add    DWORD PTR [ebp-0x50],edx
  424fb9:	add    DWORD PTR [ebp-0x50],edi
  424fbc:	mov    edx,0xd0
  424fc1:	mov    DWORD PTR [ebp-0x50],edx
  424fc4:	sub    eax,ebx
  424fc6:	mov    ecx,DWORD PTR [ebp-0x50]
  424fc9:	mov    edi,DWORD PTR [ebp-0x50]
  424fcc:	mov    DWORD PTR [ebp-0x54],edi
  424fcf:	and    ecx,edi
  424fd1:	sub    ecx,edx
  424fd3:	cmp    ecx,DWORD PTR ds:0x450078
  424fd9:	jne    0x424ffd
  424fdb:	mov    edi,0x69
  424fe0:	add    edi,edx
  424fe2:	add    DWORD PTR [ebp-0x54],ecx
  424fe5:	mov    esi,DWORD PTR ds:0x450048
  424feb:	and    edi,eax
  424fed:	add    esi,eax
  424fef:	sub    edi,edx
  424ff1:	add    DWORD PTR [ebp-0x54],esi
  424ff4:	add    edi,edx
  424ff6:	add    edi,esi
  424ff8:	and    edi,esi
  424ffa:	sub    DWORD PTR [ebp-0x50],edi
  424ffd:	or     esi,ebx
  424fff:	and    edx,esi
  425001:	add    edx,ecx
  425003:	cmp    edx,DWORD PTR [ebp-0x1c]
  425006:	je     0x4250e3
  42500c:	and    edx,eax
  42500e:	mov    ecx,DWORD PTR [ebp-0x54]
  425011:	cmp    ecx,0xffffffed
  425014:	je     0x4250e3
  42501a:	mov    esi,DWORD PTR [ebp-0x50]
  42501d:	add    DWORD PTR [ebp-0x54],edx
  425020:	add    DWORD PTR [ebp-0x50],ecx
  425023:	sub    esi,ebx
  425025:	test   edx,0x38
  42502b:	je     0x4250e3
  425031:	cmp    esi,0x9
  425034:	jne    0x4250e3
  42503a:	mov    edx,DWORD PTR [ebp-0x50]
  42503d:	mov    ecx,DWORD PTR [ebp-0x54]
  425040:	cmp    esi,0xffffffb9
  425043:	jne    0x4250e3
  425049:	add    ecx,edx
  42504b:	sub    esi,ecx
  42504d:	mov    edx,DWORD PTR ds:0x450048
  425053:	mov    DWORD PTR [ebp-0x54],edx
  425056:	cmp    esi,DWORD PTR ds:0x450048
  42505c:	jne    0x4250e3
  425062:	sub    esi,ecx
  425064:	cmp    esi,DWORD PTR ds:0x450048
  42506a:	je     0x4250e3
  42506c:	xor    DWORD PTR [ebp-0x54],edx
  42506f:	cmp    esi,DWORD PTR [ebp-0x44]
  425072:	jne    0x4250e3
  425074:	mov    edi,DWORD PTR [ebp-0x54]
  425077:	sub    DWORD PTR [ebp-0x54],esi
  42507a:	cmp    edi,0x4d
  42507d:	je     0x4250e3
  42507f:	sub    edi,ebx
  425081:	add    edi,edx
  425083:	test   edi,0x98
  425089:	je     0x4250e3
  42508b:	add    edi,eax
  42508d:	test   edi,0xc8
  425093:	jne    0x4250e3
  425095:	mov    esi,DWORD PTR ds:0x450078
  42509b:	mov    edx,DWORD PTR ds:0x450074
  4250a1:	add    edx,eax
  4250a3:	sub    edx,edi
  4250a5:	sub    edx,eax
  4250a7:	mov    DWORD PTR [ebp-0x8],esi
  4250aa:	cmp    edx,DWORD PTR ds:0x450078
  4250b0:	je     0x4250e3
  4250b2:	cmp    edx,DWORD PTR [ebp-0x40]
  4250b5:	jne    0x4250e3
  4250b7:	sub    edx,esi
  4250b9:	mov    ecx,DWORD PTR [ebp-0x54]
  4250bc:	cmp    ecx,DWORD PTR [ebp-0x4c]
  4250bf:	je     0x4250e3
  4250c1:	cmp    ecx,0x2
  4250c4:	je     0x4250e3
  4250c6:	cmp    edx,0x17
  4250c9:	jne    0x4250e3
  4250cb:	mov    edi,DWORD PTR [ebp-0x50]
  4250ce:	xor    esi,esi
  4250d0:	add    ecx,esi
  4250d2:	add    edi,ebx
  4250d4:	sub    edi,ebx
  4250d6:	mov    DWORD PTR [ebp-0x50],edx
  4250d9:	add    DWORD PTR [ebp-0x50],ecx
  4250dc:	sub    edi,esi
  4250de:	sub    edi,ecx
  4250e0:	add    DWORD PTR [ebp-0x54],edi
  4250e3:	and    ebx,eax
  4250e5:	add    DWORD PTR [ebp-0x50],ebx
  4250e8:	mov    ecx,DWORD PTR ds:0x45006c
  4250ee:	sub    ecx,ebx
  4250f0:	sub    DWORD PTR [ebp-0x50],ecx
  4250f3:	add    ebx,ebx
  4250f5:	add    ecx,eax
  4250f7:	and    ecx,esi
  4250f9:	mov    edx,DWORD PTR [ebp-0x50]
  4250fc:	or     ecx,esi
  4250fe:	sub    edx,edi
  425100:	sub    DWORD PTR [ebp-0x50],esi
  425103:	sub    DWORD PTR [ebp-0x54],eax
  425106:	and    ecx,ebx
  425108:	or     edx,esi
  42510a:	mov    edi,DWORD PTR [ebp-0x50]
  42510d:	add    DWORD PTR [ebp-0x50],edx
  425110:	sub    ecx,edi
  425112:	add    ecx,esi
  425114:	sub    ecx,esi
  425116:	or     DWORD PTR [ebp-0x50],ecx
  425119:	mov    DWORD PTR [ebp-0x28],ebx
  42511c:	mov    DWORD PTR [ebp-0x3c],eax
  42511f:	add    DWORD PTR [ebp-0x28],ecx
  425122:	cmp    edx,0x34
  425125:	jne    0x42512c
  425127:	add    edx,ecx
  425129:	and    DWORD PTR [ebp-0x28],edx
  42512c:	and    eax,ebx
  42512e:	cmp    ecx,DWORD PTR [ebp-0x8]
  425131:	je     0x42515a
  425133:	add    esi,ebx
  425135:	mov    edx,DWORD PTR [ebp-0x28]
  425138:	cmp    edx,DWORD PTR ds:0x450048
  42513e:	jne    0x42515a
  425140:	mov    ecx,DWORD PTR [ebp-0x28]
  425143:	add    DWORD PTR [ebp-0x28],esi
  425146:	add    ecx,esi
  425148:	mov    esi,0x18
  42514d:	sub    DWORD PTR [ebp-0x54],ecx
  425150:	add    edx,ebx
  425152:	sub    edx,eax
  425154:	add    DWORD PTR [ebp-0x28],edx
  425157:	mov    DWORD PTR [ebp-0x50],esi
  42515a:	mov    edi,DWORD PTR [ebp-0x54]
  42515d:	mov    ecx,DWORD PTR [ebp-0x28]
  425160:	sub    ecx,edi
  425162:	and    ecx,ebx
  425164:	cmp    edi,DWORD PTR [ebp-0x20]
  425167:	jne    0x425181
  425169:	sub    DWORD PTR [ebp-0x54],eax
  42516c:	and    ecx,edx
  42516e:	mov    edi,DWORD PTR ds:0x450058
  425174:	and    ecx,edi
  425176:	mov    esi,DWORD PTR ds:0x45007c
  42517c:	sub    esi,ecx
  42517e:	sub    DWORD PTR [ebp-0x28],esi
  425181:	sub    eax,ebx
  425183:	mov    ecx,DWORD PTR [ebp-0x50]
  425186:	and    ecx,edi
  425188:	sub    ecx,esi
  42518a:	test   ecx,0x6f
  425190:	je     0x42524e
  425196:	mov    edx,DWORD PTR ds:0x45007c
  42519c:	sub    edx,edi
  42519e:	mov    esi,DWORD PTR [ebp-0x50]
  4251a1:	cmp    esi,ebx
  4251a3:	je     0x42524e
  4251a9:	add    DWORD PTR [ebp-0x50],ecx
  4251ac:	mov    ecx,DWORD PTR [ebp-0x54]
  4251af:	and    esi,ebx
  4251b1:	cmp    ecx,DWORD PTR [ebp-0x34]
  4251b4:	je     0x42524e
  4251ba:	and    edx,ecx
  4251bc:	xor    ecx,ecx
  4251be:	cmp    esi,0x980b1280
  4251c4:	jne    0x42524e
  4251ca:	mov    edi,DWORD PTR [ebp-0x28]
  4251cd:	cmp    edx,DWORD PTR ds:0x450074
  4251d3:	jne    0x42524e
  4251d5:	xor    DWORD PTR [ebp-0x50],ecx
  4251d8:	mov    ecx,0x4a
  4251dd:	add    edi,ebx
  4251df:	add    DWORD PTR [ebp-0x54],edx
  4251e2:	sub    DWORD PTR [ebp-0x50],ebx
  4251e5:	cmp    esi,edi
  4251e7:	je     0x42524e
  4251e9:	cmp    edi,DWORD PTR [ebp-0x10]
  4251ec:	jne    0x42524e
  4251ee:	xor    edx,edx
  4251f0:	add    DWORD PTR [ebp-0x50],esi
  4251f3:	mov    esi,DWORD PTR [ebp-0x50]
  4251f6:	test   esi,0xe
  4251fc:	jne    0x42524e
  4251fe:	and    esi,edx
  425200:	cmp    edi,0x5b
  425203:	je     0x42524e
  425205:	mov    edx,DWORD PTR [ebp-0x54]
  425208:	cmp    esi,DWORD PTR ds:0x45007c
  42520e:	je     0x42524e
  425210:	sub    DWORD PTR [ebp-0x50],eax
  425213:	or     DWORD PTR [ebp-0x28],edi
  425216:	add    DWORD PTR [ebp-0x28],edx
  425219:	cmp    esi,DWORD PTR ds:0x45006c
  42521f:	je     0x42524e
  425221:	mov    edx,0xb4
  425226:	sub    ecx,ebx
  425228:	mov    edi,DWORD PTR [ebp-0x54]
  42522b:	mov    DWORD PTR [ebp-0x54],esi
  42522e:	cmp    edi,DWORD PTR [ebp-0x8]
  425231:	jne    0x42524e
  425233:	mov    esi,DWORD PTR [ebp-0x54]
  425236:	cmp    esi,0x66
  425239:	jne    0x42524e
  42523b:	add    DWORD PTR [ebp-0x28],edx
  42523e:	sub    DWORD PTR [ebp-0x50],edx
  425241:	add    DWORD PTR [ebp-0x50],ecx
  425244:	add    DWORD PTR [ebp-0x54],esi
  425247:	add    edi,eax
  425249:	or     edi,edx
  42524b:	add    DWORD PTR [ebp-0x28],edi
  42524e:	mov    ecx,DWORD PTR ds:0x45006c
  425254:	mov    ecx,edx
  425256:	add    DWORD PTR [ebp-0x50],ecx
  425259:	sub    eax,ebx
  42525b:	mov    esi,DWORD PTR [ebp-0x50]
  42525e:	sub    DWORD PTR [ebp-0x28],eax
  425261:	mov    edx,DWORD PTR ds:0x450074
  425267:	add    DWORD PTR [ebp-0x50],esi
  42526a:	sub    DWORD PTR [ebp-0x28],edx
  42526d:	test   esi,0x5b
  425273:	je     0x42528b
  425275:	mov    edx,DWORD PTR [ebp-0x50]
  425278:	cmp    edx,0xffffff91
  42527b:	je     0x42528b
  42527d:	mov    esi,DWORD PTR [ebp-0x28]
  425280:	mov    edi,DWORD PTR [ebp-0x54]
  425283:	sub    edi,esi
  425285:	xor    DWORD PTR [ebp-0x50],edi
  425288:	sub    DWORD PTR [ebp-0x50],edx
  42528b:	sub    eax,ebx
  42528d:	mov    DWORD PTR [ebp-0x54],esi
  425290:	xor    ecx,ecx
  425292:	mov    edi,0x43
  425297:	sub    edi,esi
  425299:	add    DWORD PTR [ebp-0x28],ecx
  42529c:	cmp    edi,0xffffffd2
  42529f:	jne    0x4252b1
  4252a1:	mov    edx,DWORD PTR [ebp-0x54]
  4252a4:	mov    esi,0x7e
  4252a9:	add    edi,edx
  4252ab:	add    DWORD PTR [ebp-0x50],esi
  4252ae:	add    DWORD PTR [ebp-0x28],edi
  4252b1:	sub    DWORD PTR [ebp-0x3c],eax
  4252b4:	push   0xfffffff0
  4252b6:	push   0x7aa95200
  4252bb:	push   0x78
  4252bd:	call   0x426f61
  4252c2:	add    esp,0xc
  4252c5:	push   0x72
  4252c7:	push   0xaa0a300
  4252cc:	push   0x33
  4252ce:	call   0x42751b
  4252d3:	add    esp,0xc
  4252d6:	call   0x4272e2
  4252db:	sub    eax,ebx
  4252dd:	call   0x4276cd
  4252e2:	call   DWORD PTR ds:0x44f8dc
  4252e8:	add    ebx,edi
  4252ea:	and    DWORD PTR [ebp-0x50],ebx
  4252ed:	mov    DWORD PTR [ebp-0x40],eax
  4252f0:	mov    edx,0xaf
  4252f5:	push   0x5af78f00
  4252fa:	push   0x50d7db00
  4252ff:	push   0xffffffd7
  425301:	push   0xa444c900
  425306:	push   0xa43ea200
  42530b:	call   0x4276cd
  425310:	add    esp,0x14
  425313:	push   0xc511e00
  425318:	push   0xb45f2a00
  42531d:	push   0x8a8e7b00
  425322:	push   0xffffffca
  425324:	call   0x4272e2
  425329:	add    esp,0x10
  42532c:	push   0xfad7cc42
  425331:	call   DWORD PTR ds:0x44f8e8
  425337:	mov    esi,DWORD PTR ds:0x450074
  42533d:	push   0xffffffd3
  42533f:	push   0x108e4400
  425344:	push   0xffffff94
  425346:	push   0xb8715b00
  42534b:	push   0x4c
  42534d:	call   0x4273d1
  425352:	add    esp,0x14
  425355:	sub    DWORD PTR [ebp-0x28],esi
  425358:	call   0x4273d1
  42535d:	call   DWORD PTR ds:0x44f90c
  425363:	xor    DWORD PTR [ebp-0x54],ebx
  425366:	mov    DWORD PTR [ebp-0x24],eax
  425369:	add    ebx,eax
  42536b:	push   0xbadfbc00
  425370:	call   0x42751b
  425375:	add    esp,0x4
  425378:	xor    ecx,ecx
  42537a:	sub    ecx,edi
  42537c:	push   0x4d
  42537e:	push   0x10f06b00
  425383:	call   0x4276cd
  425388:	add    esp,0x8
  42538b:	push   0x14
  42538d:	push   0x1bc700
  425392:	call   0x42751b
  425397:	add    esp,0x8
  42539a:	mov    eax,DWORD PTR [ebp-0x28]
  42539d:	push   0x17
  42539f:	push   0x3d
  4253a1:	push   0xac585400
  4253a6:	push   0x6c
  4253a8:	call   0x4276cd
  4253ad:	add    esp,0x10
  4253b0:	add    ebx,eax
  4253b2:	add    ebx,eax
  4253b4:	sub    DWORD PTR [ebp-0x28],edi
  4253b7:	push   0xffffffcb
  4253b9:	push   0xffffffd7
  4253bb:	call   0x42751b
  4253c0:	add    esp,0x8
  4253c3:	push   0xffffffba
  4253c5:	push   0xffffffd9
  4253c7:	push   0x25
  4253c9:	call   0x426f61
  4253ce:	add    esp,0xc
  4253d1:	push   0x906d6d00
  4253d6:	push   0xffffffba
  4253d8:	push   0xc227d00
  4253dd:	push   0xfffffffa
  4253df:	call   0x4272e2
  4253e4:	add    esp,0x10
  4253e7:	push   0x4aa92400
  4253ec:	push   0x72
  4253ee:	push   0xe47a4b00
  4253f3:	call   0x4279df
  4253f8:	add    esp,0xc
  4253fb:	sub    DWORD PTR [ebp-0x54],ebx
  4253fe:	cmp    edi,esi
  425400:	je     0x425405
  425402:	mov    DWORD PTR [ebp-0x54],ebx
  425405:	push   0xffffffa8
  425407:	push   0x2c0b6700
  42540c:	push   0xffffff8a
  42540e:	push   0xffffffff
  425410:	push   0xfffffffe
  425412:	call   0x4272e2
  425417:	add    esp,0x14
  42541a:	add    DWORD PTR [ebp-0x28],eax
  42541d:	push   0xffffffab
  42541f:	push   0x12
  425421:	push   0xffffff83
  425423:	push   0xb44bd600
  425428:	call   0x426f61
  42542d:	add    esp,0x10
  425430:	sub    DWORD PTR [ebp-0x50],ebx
  425433:	push   0x402e9e00
  425438:	push   0xffffff97
  42543a:	push   0xffffffca
  42543c:	call   0x42751b
  425441:	add    esp,0xc
  425444:	push   0xffffffe8
  425446:	push   0xffffff8f
  425448:	push   0x6aadf300
  42544d:	push   0xeac47a00
  425452:	call   0x4271b5
  425457:	add    esp,0x10
  42545a:	mov    ecx,DWORD PTR [ebp-0x54]
  42545d:	call   0x4273d1
  425462:	push   0x33
  425464:	push   0x74539a00
  425469:	call   0x4273d1
  42546e:	add    esp,0x8
  425471:	add    ebx,ebx
  425473:	mov    eax,0x2bfc
  425478:	push   0x2a
  42547a:	push   0xffffffed
  42547c:	call   0x4272e2
  425481:	add    esp,0x8
  425484:	push   0x9
  425486:	push   0x6accb600
  42548b:	push   0xc867f400
  425490:	call   0x4271b5
  425495:	add    esp,0xc
  425498:	call   0x42751b
  42549d:	sub    ebx,eax
  42549f:	push   0xf434a700
  4254a4:	call   0x426f61
  4254a9:	add    esp,0x4
  4254ac:	mov    eax,0xde19
  4254b1:	test   ebx,0xbfd2
  4254b7:	je     0x42550d
  4254b9:	push   0xc
  4254bb:	push   0xabaf700
  4254c0:	push   0xd454f700
  4254c5:	push   0x6d
  4254c7:	push   0xd8628400
  4254cc:	call   0x4279df
  4254d1:	add    esp,0x14
  4254d4:	push   0x6
  4254d6:	push   0xffffffc5
  4254d8:	push   0x13
  4254da:	push   0xfa905900
  4254df:	call   0x4279df
  4254e4:	add    esp,0x10
  4254e7:	push   0x50a79900
  4254ec:	push   0xffffff98
  4254ee:	push   0xa3000
  4254f3:	push   0xffffffd8
  4254f5:	call   0x4276cd
  4254fa:	add    esp,0x10
  4254fd:	push   0xd47c4800
  425502:	call   0x4276cd
  425507:	add    esp,0x4
  42550a:	add    DWORD PTR [ebp-0x50],ebx
  42550d:	push   0xc8f51600
  425512:	call   0x4272e2
  425517:	add    esp,0x4
  42551a:	push   0xdabf9600
  42551f:	push   0x1083f300
  425524:	push   0xd0f11b00
  425529:	push   0x605d1000
  42552e:	push   0xffffffb1
  425530:	call   0x4272e2
  425535:	add    esp,0x14
  425538:	push   0xaa997600
  42553d:	push   0xfffffffd
  42553f:	call   0x4273d1
  425544:	add    esp,0x8
  425547:	push   0x78
  425549:	call   0x4273d1
  42554e:	add    esp,0x4
  425551:	mov    ebx,edi
  425553:	or     DWORD PTR [ebp-0x54],ebx
  425556:	push   0xffffffe3
  425558:	call   0x42751b
  42555d:	add    esp,0x4
  425560:	add    edi,esi
  425562:	mov    ecx,edi
  425564:	push   0x57
  425566:	push   0x67
  425568:	push   0xfffffff5
  42556a:	call   0x4273d1
  42556f:	add    esp,0xc
  425572:	and    edi,eax
  425574:	mov    ebx,DWORD PTR [ebp-0x54]
  425577:	mov    ecx,DWORD PTR [ebp-0x50]
  42557a:	mov    DWORD PTR [ebp-0x54],edi
  42557d:	cmp    eax,0xffffff9e
  425580:	jne    0x425598
  425582:	call   0x42751b
  425587:	push   0xb
  425589:	push   0xffffffae
  42558b:	push   0x4
  42558d:	call   0x426f61
  425592:	add    esp,0xc
  425595:	sub    DWORD PTR [ebp-0x28],ebx
  425598:	push   0x88722100
  42559d:	push   0xffffffe1
  42559f:	call   0x4279df
  4255a4:	add    esp,0x8
  4255a7:	and    ebx,edi
  4255a9:	push   0xfac51b00
  4255ae:	push   0x2a87ab00
  4255b3:	call   0x4271b5
  4255b8:	add    esp,0x8
  4255bb:	xor    edx,edx
  4255bd:	push   0x28
  4255bf:	push   0xffffffc0
  4255c1:	push   0x46
  4255c3:	push   0x10209e00
  4255c8:	push   0x5043f500
  4255cd:	call   0x4273d1
  4255d2:	add    esp,0x14
  4255d5:	push   0x5e
  4255d7:	push   0xc8dd5700
  4255dc:	push   0x11
  4255de:	push   0xfffffff9
  4255e0:	push   0xffffffbd
  4255e2:	call   0x427075
  4255e7:	add    esp,0x14
  4255ea:	push   0x50a5eb00
  4255ef:	push   0x3
  4255f1:	push   0xffffffb6
  4255f3:	call   0x426f61
  4255f8:	add    esp,0xc
  4255fb:	mov    esi,0x47
  425600:	push   0xffffffb9
  425602:	push   0x4816d700
  425607:	push   0x24
  425609:	push   0x54302c00
  42560e:	call   0x42751b
  425613:	add    esp,0x10
  425616:	push   0x90770500
  42561b:	push   0xc8f0b200
  425620:	push   0xdaae3300
  425625:	call   0x427075
  42562a:	add    esp,0xc
  42562d:	push   0xffffffc6
  42562f:	push   0x80297200
  425634:	call   0x4276cd
  425639:	add    esp,0x8
  42563c:	call   0x4276cd
  425641:	add    esi,eax
  425643:	add    DWORD PTR [ebp-0x54],ebx
  425646:	or     esi,ebx
  425648:	cmp    esi,DWORD PTR ds:0x45007c
  42564e:	jne    0x425653
  425650:	sub    DWORD PTR [ebp-0x50],esi
  425653:	push   0x2c5e1700
  425658:	call   0x4272e2
  42565d:	add    esp,0x4
  425660:	mov    ecx,eax
  425662:	mov    esi,0xfa
  425667:	cmp    ecx,DWORD PTR ds:0x45006c
  42566d:	jne    0x42567f
  42566f:	push   0xd0e22f00
  425674:	call   0x426f61
  425679:	add    esp,0x4
  42567c:	xor    DWORD PTR [ebp-0x54],esi
  42567f:	mov    esi,DWORD PTR [ebp-0x50]
  425682:	call   0x42751b
  425687:	mov    edi,DWORD PTR [ebp-0x28]
  42568a:	push   0xffffffc7
  42568c:	push   0x60399400
  425691:	push   0x33
  425693:	push   0x2d
  425695:	push   0x50bcd800
  42569a:	call   0x426f61
  42569f:	add    esp,0x14
  4256a2:	add    DWORD PTR [ebp-0x50],edi
  4256a5:	sub    DWORD PTR [ebp-0x54],esi
  4256a8:	push   0xffffff9e
  4256aa:	call   0x4273d1
  4256af:	add    esp,0x4
  4256b2:	push   0xffffffc4
  4256b4:	push   0x50
  4256b6:	push   0x6c413600
  4256bb:	push   0xa8191c00
  4256c0:	call   0x426f61
  4256c5:	add    esp,0x10
  4256c8:	call   0x4272e2
  4256cd:	and    DWORD PTR [ebp-0x50],eax
  4256d0:	mov    ecx,DWORD PTR [ebp-0x54]
  4256d3:	push   0x24
  4256d5:	push   0x1af2c800
  4256da:	push   0x6e
  4256dc:	push   0x50f48400
  4256e1:	push   0xeaad8e00
  4256e6:	call   0x426f61
  4256eb:	add    esp,0x14
  4256ee:	push   0xa82c1300
  4256f3:	push   0x70515d00
  4256f8:	call   0x4276cd
  4256fd:	add    esp,0x8
  425700:	push   0xe4708d00
  425705:	push   0xb06b4f00
  42570a:	push   0x6c22d100
  42570f:	push   0x8a84d700
  425714:	call   0x4271b5
  425719:	add    esp,0x10
  42571c:	mov    esi,DWORD PTR [ebp-0x54]
  42571f:	push   0x2aa67900
  425724:	push   0x3af56800
  425729:	call   0x427075
  42572e:	add    esp,0x8
  425731:	push   0xbaebc300
  425736:	push   0xc8dc1f00
  42573b:	call   0x427075
  425740:	add    esp,0x8
  425743:	cmp    esi,0x88940208
  425749:	jne    0x42575d
  42574b:	push   0xfffffff6
  42574d:	push   0xc8eea400
  425752:	call   0x427075
  425757:	add    esp,0x8
  42575a:	add    DWORD PTR [ebp-0x50],esi
  42575d:	lea    edx,[ebp-0x30]
  425760:	add    DWORD PTR [ebp-0x28],edx
  425763:	mov    esi,DWORD PTR ds:0x450058
  425769:	add    esi,esi
  42576b:	xor    eax,eax
  42576d:	add    DWORD PTR [ebp-0x50],esi
  425770:	sub    eax,edx
  425772:	or     eax,ebx
  425774:	and    eax,esi
  425776:	sub    eax,edi
  425778:	add    DWORD PTR [ebp-0x50],edx
  42577b:	sub    eax,esi
  42577d:	cmp    eax,0xffffffd4
  425780:	je     0x4257b4
  425782:	cmp    eax,edx
  425784:	jne    0x4257b4
  425786:	mov    esi,DWORD PTR [ebp-0x54]
  425789:	mov    ecx,0x32
  42578e:	sub    ecx,ebx
  425790:	cmp    esi,0xfffffff3
  425793:	je     0x4257b4
  425795:	sub    DWORD PTR [ebp-0x54],esi
  425798:	sub    ecx,esi
  42579a:	mov    esi,eax
  42579c:	cmp    esi,0x82da
  4257a2:	je     0x4257b4
  4257a4:	test   ecx,0xbd
  4257aa:	jne    0x4257b4
  4257ac:	xor    DWORD PTR [ebp-0x54],ecx
  4257af:	or     esi,ecx
  4257b1:	sub    DWORD PTR [ebp-0x50],esi
  4257b4:	push   edx
  4257b5:	push   0xffffffef
  4257b7:	call   0x42751b
  4257bc:	add    esp,0x4
  4257bf:	push   0x5859a800
  4257c4:	push   0xdaf76c00
  4257c9:	call   0x4273d1
  4257ce:	add    esp,0x8
  4257d1:	push   0xfc434ad6
  4257d6:	mov    ebx,DWORD PTR ds:0x45004c
  4257dc:	mov    edi,0x2c
  4257e1:	push   0xb00a8400
  4257e6:	push   0xffffffea
  4257e8:	call   0x42751b
  4257ed:	add    esp,0x8
  4257f0:	sub    DWORD PTR [ebp-0x50],edi
  4257f3:	push   0x5ab30c00
  4257f8:	call   0x42751b
  4257fd:	add    esp,0x4
  425800:	call   0x4272e2
  425805:	sub    ebx,edi
  425807:	test   esi,0x18
  42580d:	je     0x425827
  42580f:	push   0xffffffc0
  425811:	push   0xffffffe7
  425813:	push   0xf0447200
  425818:	push   0x2af9b300
  42581d:	push   0x4f
  42581f:	call   0x42751b
  425824:	add    esp,0x14
  425827:	push   0xd8712800
  42582c:	push   0x1c530a00
  425831:	push   0x63
  425833:	push   0x8c1bc000
  425838:	push   0x50a8ed00
  42583d:	call   0x427075
  425842:	add    esp,0x14
  425845:	sub    DWORD PTR [ebp-0x54],ebx
  425848:	sub    DWORD PTR [ebp-0x54],ebx
  42584b:	call   0x425df3
  425850:	add    ebx,esi
  425852:	call   0x427075
  425857:	mov    ecx,0x4c
  42585c:	mov    edi,0xbb
  425861:	push   0x32
  425863:	push   0xffffff9f
  425865:	push   0x10ad6800
  42586a:	push   0xa45b5800
  42586f:	push   0x76
  425871:	call   0x427075
  425876:	add    esp,0x14
  425879:	add    ebx,edi
  42587b:	push   0xc8c0f500
  425880:	push   0x108e4900
  425885:	push   0xdab81200
  42588a:	push   0xb4707000
  42588f:	push   0xffffffca
  425891:	call   0x4276cd
  425896:	add    esp,0x14
  425899:	push   0xffffffa5
  42589b:	push   0xffffffc4
  42589d:	call   0x4272e2
  4258a2:	add    esp,0x8
  4258a5:	cmp    ebx,0x4f
  4258a8:	jne    0x4258e0
  4258aa:	cmp    ebx,DWORD PTR [ebp-0x20]
  4258ad:	jne    0x4258e0
  4258af:	mov    eax,DWORD PTR [ebp-0x54]
  4258b2:	push   0x7adb8400
  4258b7:	push   0x6c168300
  4258bc:	push   0x476cf00
  4258c1:	push   0xc8b0d300
  4258c6:	call   0x4271b5
  4258cb:	add    esp,0x10
  4258ce:	test   ebx,0x0
  4258d4:	je     0x4258e0
  4258d6:	and    ebx,eax
  4258d8:	xor    eax,eax
  4258da:	sub    DWORD PTR [ebp-0x54],ebx
  4258dd:	sub    DWORD PTR [ebp-0x28],eax
  4258e0:	mov    edi,DWORD PTR [ebp-0x30]
  4258e3:	or     DWORD PTR [ebp-0x28],edi
  4258e6:	push   0xfffffffe
  4258e8:	push   0x6d
  4258ea:	push   0xe0104400
  4258ef:	push   0xffffffd0
  4258f1:	call   0x4272e2
  4258f6:	add    esp,0x10
  4258f9:	shr    edi,0x10
  4258fc:	call   0x4276cd
  425901:	push   0xffffffd2
  425903:	push   0x24783900
  425908:	call   0x42751b
  42590d:	add    esp,0x8
  425910:	cmp    edi,0x8584
  425916:	jne    0x425d6c
  42591c:	xor    ebx,ebx
  42591e:	add    ebx,esi
  425920:	call   0x426f61
  425925:	push   0xa8168c00
  42592a:	call   0x4272e2
  42592f:	add    esp,0x4
  425932:	sub    ebx,esi
  425934:	push   0x18594d00
  425939:	push   0x5b
  42593b:	push   0xffffffc8
  42593d:	call   0x4279df
  425942:	add    esp,0xc
  425945:	call   0x4272e2
  42594a:	call   0x4272e2
  42594f:	push   0x9
  425951:	push   0x39
  425953:	push   0xffffffae
  425955:	push   0xfab43a00
  42595a:	push   0x8
  42595c:	call   0x426f61
  425961:	add    esp,0x14
  425964:	push   0xa0291e00
  425969:	push   0xffffffd6
  42596b:	push   0x6a
  42596d:	call   0x4279df
  425972:	add    esp,0xc
  425975:	and    ebx,eax
  425977:	push   0xffffffe7
  425979:	push   0xffffffe8
  42597b:	push   0xffffffc3
  42597d:	push   0x5c25fb00
  425982:	push   0x15
  425984:	call   0x427075
  425989:	add    esp,0x14
  42598c:	mov    esi,DWORD PTR [ebp-0x54]
  42598f:	push   0xffffffd2
  425991:	push   0xc8981100
  425996:	push   0xb
  425998:	push   0x39
  42599a:	push   0xffffffb0
  42599c:	call   0x4276cd
  4259a1:	add    esp,0x14
  4259a4:	sub    ebx,esi
  4259a6:	push   0x4f
  4259a8:	push   0xffffff95
  4259aa:	push   0x506c3400
  4259af:	push   0x10d94700
  4259b4:	push   0x45
  4259b6:	call   0x4279df
  4259bb:	add    esp,0x14
  4259be:	call   0x426f61
  4259c3:	push   0x6ae64100
  4259c8:	push   0xffffffc6
  4259ca:	call   0x4272e2
  4259cf:	add    esp,0x8
  4259d2:	add    DWORD PTR [ebp-0x28],ebx
  4259d5:	mov    ecx,0x85c6738b
  4259da:	add    DWORD PTR [ebp-0x50],ecx
  4259dd:	sub    ecx,DWORD PTR [ebp-0x30]
  4259e0:	cmp    esi,0xdf7f
  4259e6:	je     0x425a0b
  4259e8:	add    edi,eax
  4259ea:	sub    edi,esi
  4259ec:	mov    DWORD PTR [ebp-0x2c],eax
  4259ef:	cmp    ecx,0x4
  4259f2:	jne    0x425a0b
  4259f4:	mov    esi,DWORD PTR ds:0x450048
  4259fa:	sub    edi,ecx
  4259fc:	sub    DWORD PTR [ebp-0x2c],edi
  4259ff:	mov    edi,0x34d9
  425a04:	sub    esi,edi
  425a06:	sub    esi,ebx
  425a08:	sub    DWORD PTR [ebp-0x54],esi
  425a0b:	call   ecx
  425a0d:	mov    edi,eax
  425a0f:	cmp    eax,ebx
  425a11:	jne    0x425ace
  425a17:	mov    edx,eax
  425a19:	cmp    edi,0xffffffeb
  425a1c:	je     0x425ace
  425a22:	mov    ebx,DWORD PTR [ebp-0x54]
  425a25:	sub    edx,esi
  425a27:	test   edi,0x36
  425a2d:	jne    0x425ace
  425a33:	mov    ecx,0x3a
  425a38:	mov    esi,DWORD PTR [ebp-0x50]
  425a3b:	sub    ebx,ecx
  425a3d:	sub    esi,edx
  425a3f:	test   esi,0x10604404
  425a45:	je     0x425ace
  425a4b:	mov    ecx,DWORD PTR [ebp-0x28]
  425a4e:	cmp    esi,0xffffffff
  425a51:	je     0x425ace
  425a53:	cmp    esi,0xffffff91
  425a56:	je     0x425ace
  425a58:	cmp    ebx,DWORD PTR [ebp-0x54]
  425a5b:	jne    0x425ace
  425a5d:	cmp    ebx,0xffffffd6
  425a60:	jne    0x425ace
  425a62:	add    DWORD PTR [ebp-0x50],ecx
  425a65:	mov    ecx,DWORD PTR [ebp-0x50]
  425a68:	mov    edx,DWORD PTR [ebp-0x54]
  425a6b:	cmp    eax,DWORD PTR [ebp-0x20]
  425a6e:	jne    0x425ace
  425a70:	cmp    ecx,0x2cd9
  425a76:	jne    0x425ace
  425a78:	or     esi,edx
  425a7a:	mov    edx,DWORD PTR [ebp-0x28]
  425a7d:	sub    esi,edx
  425a7f:	sub    DWORD PTR [ebp-0x28],edx
  425a82:	test   ecx,0x6e
  425a88:	je     0x425ace
  425a8a:	sub    esi,ecx
  425a8c:	cmp    esi,DWORD PTR ds:0x450074
  425a92:	jne    0x425ace
  425a94:	cmp    edi,0xc8100111
  425a9a:	je     0x425ace
  425a9c:	cmp    ebx,0xffffffd3
  425a9f:	je     0x425ace
  425aa1:	mov    ecx,edx
  425aa3:	mov    edx,DWORD PTR [ebp-0x50]
  425aa6:	or     esi,edx
  425aa8:	add    ebx,esi
  425aaa:	test   edi,0x3
  425ab0:	jne    0x425ace
  425ab2:	and    ecx,edi
  425ab4:	mov    edx,DWORD PTR ds:0x450074
  425aba:	sub    DWORD PTR [ebp-0x28],ecx
  425abd:	mov    edi,0xbc
  425ac2:	add    ebx,edx
  425ac4:	sub    ebx,eax
  425ac6:	add    DWORD PTR [ebp-0x28],edi
  425ac9:	sub    ebx,edx
  425acb:	sub    DWORD PTR [ebp-0x50],ebx
  425ace:	mov    DWORD PTR [ebp-0xc],eax
  425ad1:	push   0xffffffb3
  425ad3:	push   0xd
  425ad5:	push   0x1c623f00
  425ada:	call   0x4273d1
  425adf:	add    esp,0xc
  425ae2:	mov    edx,0x4267a1
  425ae7:	xor    DWORD PTR [ebp-0x54],edx
  425aea:	push   DWORD PTR [ebp-0x30]
  425aed:	push   0x858541e2
  425af2:	push   DWORD PTR [ebp-0xc]
  425af5:	call   edx
  425af7:	mov    ecx,DWORD PTR [ebp-0x28]
  425afa:	add    DWORD PTR [ebp-0x50],ecx
  425afd:	push   0xffffffe1
  425aff:	push   0xffffffd3
  425b01:	push   0xffffffac
  425b03:	push   0x45
  425b05:	call   0x4279df
  425b0a:	add    esp,0x10
  425b0d:	add    DWORD PTR [ebp-0xc],0xa
  425b14:	mov    esi,edi
  425b16:	push   0x73
  425b18:	call   0x4273d1
  425b1d:	add    esp,0x4
  425b20:	and    esi,eax
  425b22:	and    esi,ebx
  425b24:	test   esi,0xc1
  425b2a:	jne    0x425b9f
  425b2c:	push   0x987bd400
  425b31:	call   0x4272e2
  425b36:	add    esp,0x4
  425b39:	cmp    esi,DWORD PTR ds:0x450048
  425b3f:	jne    0x425b9f
  425b41:	push   0x62
  425b43:	call   0x42751b
  425b48:	add    esp,0x4
  425b4b:	push   0xffffffae
  425b4d:	push   0xc0462c00
  425b52:	push   0xc8234200
  425b57:	call   0x4273d1
  425b5c:	add    esp,0xc
  425b5f:	push   0xffffffd1
  425b61:	push   0x58
  425b63:	push   0xcaede500
  425b68:	push   0xd4376b00
  425b6d:	push   0xffffffec
  425b6f:	call   0x426f61
  425b74:	add    esp,0x14
  425b77:	push   0x16
  425b79:	call   0x4271b5
  425b7e:	add    esp,0x4
  425b81:	mov    ecx,eax
  425b83:	push   0xc47b2800
  425b88:	push   0xffffff91
  425b8a:	push   0x3837e000
  425b8f:	call   0x4273d1
  425b94:	add    esp,0xc
  425b97:	cmp    esi,0xffffff90
  425b9a:	jne    0x425b9f
  425b9c:	add    DWORD PTR [ebp-0x54],esi
  425b9f:	mov    edi,DWORD PTR [ebp-0xc]
  425ba2:	push   0xc027d200
  425ba7:	push   0x3c703100
  425bac:	push   0x22
  425bae:	push   0xffffff8d
  425bb0:	call   0x42751b
  425bb5:	add    esp,0x10
  425bb8:	push   0x50
  425bba:	push   0xd85d3200
  425bbf:	call   0x4276cd
  425bc4:	add    esp,0x8
  425bc7:	call   edi
  425bc9:	call   0x4273d1
  425bce:	push   0x61
  425bd0:	call   0x4271b5
  425bd5:	add    esp,0x4
  425bd8:	mov    esi,DWORD PTR [ebp-0x50]
  425bdb:	mov    eax,ebx
  425bdd:	push   0xffffffeb
  425bdf:	push   0xead12f00
  425be4:	push   0xffffffe5
  425be6:	push   0xffffff88
  425be8:	push   0xc8e24a00
  425bed:	call   0x4272e2
  425bf2:	add    esp,0x14
  425bf5:	or     DWORD PTR [ebp-0x54],esi
  425bf8:	call   0x4276cd
  425bfd:	cmp    edi,ebx
  425bff:	je     0x425c27
  425c01:	mov    edx,DWORD PTR [ebp-0x50]
  425c04:	push   0x39
  425c06:	call   0x42751b
  425c0b:	add    esp,0x4
  425c0e:	mov    eax,DWORD PTR [ebp-0x50]
  425c11:	push   0x7e
  425c13:	push   0xffffff92
  425c15:	push   0x5a
  425c17:	push   0x8aee3d00
  425c1c:	call   0x4273d1
  425c21:	add    esp,0x10
  425c24:	sub    DWORD PTR [ebp-0x54],edi
  425c27:	cmp    eax,DWORD PTR [ebp-0x24]
  425c2a:	je     0x425d4b
  425c30:	mov    esi,0xd908
  425c35:	mov    edi,0xd4ec
  425c3a:	push   0x16
  425c3c:	call   0x4272e2
  425c41:	add    esp,0x4
  425c44:	push   0xffffffb3
  425c46:	push   0xf9195900
  425c4b:	push   0x193d5400
  425c50:	call   0x4276cd
  425c55:	add    esp,0xc
  425c58:	push   0x6b47d800
  425c5d:	push   0xffffffc3
  425c5f:	push   0xd32fc800
  425c64:	call   0x4273d1
  425c69:	add    esp,0xc
  425c6c:	push   0x2914dc00
  425c71:	push   0xffffffa9
  425c73:	call   0x4276cd
  425c78:	add    esp,0x8
  425c7b:	push   0xd319d300
  425c80:	push   0xffffff97
  425c82:	push   0x1938a700
  425c87:	push   0x6b691500
  425c8c:	push   0x6b217900
  425c91:	call   0x4273d1
  425c96:	add    esp,0x14
  425c99:	push   0x9115200
  425c9e:	push   0x940ce00
  425ca3:	push   0xb7d0da00
  425ca8:	push   0xcb152900
  425cad:	call   0x426f61
  425cb2:	add    esp,0x10
  425cb5:	push   0xffffff80
  425cb7:	push   0xfffffffa
  425cb9:	push   0x48
  425cbb:	call   0x426f61
  425cc0:	add    esp,0xc
  425cc3:	push   0xfbfbd000
  425cc8:	call   0x4272e2
  425ccd:	add    esp,0x4
  425cd0:	push   0x13830e00
  425cd5:	push   0xcb437000
  425cda:	push   0x2b
  425cdc:	push   0xffffff92
  425cde:	push   0x1ff80900
  425ce3:	call   0x4271b5
  425ce8:	add    esp,0x14
  425ceb:	or     DWORD PTR [ebp-0x54],esi
  425cee:	push   0x3f95c800
  425cf3:	push   0x17953600
  425cf8:	push   0x9fbbc100
  425cfd:	push   0x4e
  425cff:	push   0xffffffa9
  425d01:	call   0x4271b5
  425d06:	add    esp,0x14
  425d09:	push   0x48
  425d0b:	push   0x890e6400
  425d10:	push   0x5348a300
  425d15:	call   0x4279df
  425d1a:	add    esp,0xc
  425d1d:	push   0xffffffc0
  425d1f:	push   0xa95f4f00
  425d24:	push   0xffffff8c
  425d26:	push   0x57
  425d28:	call   0x4272e2
  425d2d:	add    esp,0x10
  425d30:	push   0x93402f00
  425d35:	push   0xffffffc1
  425d37:	push   0x4c
  425d39:	call   0x427075
  425d3e:	add    esp,0xc
  425d41:	sub    edi,eax
  425d43:	call   0x426f61
  425d48:	mov    DWORD PTR [ebp-0x50],edi
  425d4b:	push   0xffffffe2
  425d4d:	push   0x7d
  425d4f:	push   0x30
  425d51:	call   0x426f61
  425d56:	add    esp,0xc
  425d59:	call   0x426f61
  425d5e:	push   0x2b
  425d60:	push   0xffffffa0
  425d62:	push   0xfffffffb
  425d64:	call   0x42751b
  425d69:	add    esp,0xc
  425d6c:	push   0xf8a1a00
  425d71:	call   0x4276cd
  425d76:	add    esp,0x4
  425d79:	push   0x135e2e00
  425d7e:	push   0xffffffd5
  425d80:	push   0x3bf63400
  425d85:	call   0x4273d1
  425d8a:	add    esp,0xc
  425d8d:	push   0xc97b1300
  425d92:	push   0x99334500
  425d97:	push   0x8f917000
  425d9c:	push   0xffffffce
  425d9e:	call   0x426f61
  425da3:	add    esp,0x10
  425da6:	call   0x427075
  425dab:	pop    edi
  425dac:	push   0xcb1b7c00
  425db1:	push   0xffffffb0
  425db3:	push   0xffffffde
  425db5:	call   0x4279df
  425dba:	add    esp,0xc
  425dbd:	pop    esi
  425dbe:	push   0xffffffde
  425dc0:	call   0x4279df
  425dc5:	add    esp,0x4
  425dc8:	pop    ebx
  425dc9:	push   0x34
  425dcb:	push   0x57dde400
  425dd0:	call   0x4271b5
  425dd5:	add    esp,0x8
  425dd8:	push   0xef9bd400
  425ddd:	push   0x53033b00
  425de2:	push   0xffffffab
  425de4:	call   0x4272e2
  425de9:	add    esp,0xc
  425dec:	leave  
  425ded:	ret    
  425dee:	int3   
  425def:	int3   
  425df0:	int3   
  425df1:	int3   
  425df2:	int3   
  425df3:	push   ebp
  425df4:	mov    ebp,esp
  425df6:	sub    esp,0x50
  425df9:	xor    ecx,ecx
  425dfb:	mov    eax,DWORD PTR ds:0x450088
  425e01:	sub    eax,ecx
  425e03:	push   0xffffffe2
  425e05:	push   0xfffffff1
  425e07:	push   0x2
  425e09:	call   0x426f61
  425e0e:	add    esp,0xc
  425e11:	push   0x52
  425e13:	push   0x10
  425e15:	push   0xffffffca
  425e17:	push   0x9fb46200
  425e1c:	push   0xbb819800
  425e21:	call   0x4279df
  425e26:	add    esp,0x14
  425e29:	push   ebx
  425e2a:	add    eax,eax
  425e2c:	mov    edx,0x7b
  425e31:	push   0x5363a400
  425e36:	push   0xd3228e00
  425e3b:	push   0x44
  425e3d:	call   0x4279df
  425e42:	add    esp,0xc
  425e45:	push   esi
  425e46:	push   0x3bf75300
  425e4b:	push   0xffffffa8
  425e4d:	push   0xa918d900
  425e52:	push   0x57fbad00
  425e57:	push   0xdfe1b200
  425e5c:	call   0x4276cd
  425e61:	add    esp,0x14
  425e64:	push   edi
  425e65:	mov    esi,DWORD PTR ds:0x45005c
  425e6b:	add    esi,eax
  425e6d:	sub    esi,eax
  425e6f:	push   0xffffff9d
  425e71:	push   0x97ab0800
  425e76:	push   0x7fdd4500
  425e7b:	push   0x787ba00
  425e80:	push   0xcb614200
  425e85:	call   0x4276cd
  425e8a:	add    esp,0x14
  425e8d:	call   0x4276cd
  425e92:	push   0x1bcf3a00
  425e97:	call   0x4272e2
  425e9c:	add    esp,0x4
  425e9f:	push   0xfffffffd
  425ea1:	push   0x6b50b000
  425ea6:	push   0x48
  425ea8:	push   0xfbe37300
  425ead:	push   0x46
  425eaf:	call   0x42751b
  425eb4:	add    esp,0x14
  425eb7:	cmp    eax,0xffffffbd
  425eba:	je     0x425ed1
  425ebc:	push   0xd9630f00
  425ec1:	call   0x427075
  425ec6:	add    esp,0x4
  425ec9:	mov    DWORD PTR [ebp-0x38],eax
  425ecc:	sub    esi,eax
  425ece:	sub    DWORD PTR [ebp-0x38],esi
  425ed1:	mov    DWORD PTR [ebp-0x4],esi
  425ed4:	mov    DWORD PTR [ebp-0x3c],0xec534aed
  425edb:	push   0x4f
  425edd:	push   0xffffff95
  425edf:	call   0x427075
  425ee4:	add    esp,0x8
  425ee7:	call   0x426556
  425eec:	sub    DWORD PTR [ebp-0x4],eax
  425eef:	mov    DWORD PTR [ebp-0x20],eax
  425ef2:	call   0x427075
  425ef7:	call   0x426556
  425efc:	cmp    eax,DWORD PTR ds:0x450088
  425f02:	je     0x425fe8
  425f08:	and    esi,eax
  425f0a:	cmp    esi,DWORD PTR ds:0x45005c
  425f10:	jne    0x425fe8
  425f16:	mov    ebx,DWORD PTR [ebp-0x4]
  425f19:	cmp    ebx,0x7331
  425f1f:	je     0x425fe8
  425f25:	mov    edx,DWORD PTR [ebp-0x4]
  425f28:	add    edx,edx
  425f2a:	sub    ebx,esi
  425f2c:	cmp    edx,DWORD PTR ds:0x450088
  425f32:	jne    0x425fe8
  425f38:	mov    esi,DWORD PTR [ebp-0x4]
  425f3b:	add    ebx,ebx
  425f3d:	add    ebx,edx
  425f3f:	cmp    esi,DWORD PTR [ebp-0x24]
  425f42:	jne    0x425fe8
  425f48:	mov    edx,0xe8
  425f4d:	sub    edx,ebx
  425f4f:	test   esi,0x8
  425f55:	je     0x425fe8
  425f5b:	mov    ebx,DWORD PTR ds:0x450088
  425f61:	mov    ecx,0x54b4
  425f66:	test   esi,0xc
  425f6c:	jne    0x425fe8
  425f6e:	mov    edi,DWORD PTR ds:0x45005c
  425f74:	add    esi,ebx
  425f76:	or     ecx,ebx
  425f78:	cmp    esi,edx
  425f7a:	je     0x425fe8
  425f7c:	mov    ebx,DWORD PTR [ebp-0x4]
  425f7f:	or     esi,edi
  425f81:	mov    edi,esi
  425f83:	cmp    edi,DWORD PTR [ebp-0x38]
  425f86:	je     0x425fe8
  425f88:	test   esi,0xea
  425f8e:	je     0x425fe8
  425f90:	cmp    ebx,esi
  425f92:	je     0x425fe8
  425f94:	xor    DWORD PTR [ebp-0x4],ebx
  425f97:	mov    esi,DWORD PTR [ebp-0x4]
  425f9a:	cmp    edx,0x3f
  425f9d:	je     0x425fe8
  425f9f:	cmp    edx,DWORD PTR [ebp-0x44]
  425fa2:	jne    0x425fe8
  425fa4:	mov    ebx,DWORD PTR [ebp-0x4]
  425fa7:	mov    ecx,DWORD PTR [ebp-0x4]
  425faa:	cmp    edi,0x68
  425fad:	jne    0x425fe8
  425faf:	and    esi,eax
  425fb1:	cmp    esi,0x762d
  425fb7:	je     0x425fe8
  425fb9:	cmp    esi,ecx
  425fbb:	jne    0x425fe8
  425fbd:	cmp    esi,DWORD PTR ds:0x450088
  425fc3:	jne    0x425fe8
  425fc5:	sub    edi,ebx
  425fc7:	add    edx,edi
  425fc9:	mov    edi,edx
  425fcb:	mov    ebx,DWORD PTR [ebp-0x4]
  425fce:	sub    edi,edx
  425fd0:	and    DWORD PTR [ebp-0x4],ebx
  425fd3:	sub    esi,eax
  425fd5:	mov    DWORD PTR [ebp-0x4],edx
  425fd8:	sub    DWORD PTR [ebp-0x4],ecx
  425fdb:	and    esi,edx
  425fdd:	add    edi,eax
  425fdf:	or     DWORD PTR [ebp-0x4],edi
  425fe2:	add    DWORD PTR [ebp-0x4],edi
  425fe5:	mov    DWORD PTR [ebp-0x2c],esi
  425fe8:	mov    DWORD PTR [ebp-0xc],eax
  425feb:	sub    DWORD PTR [ebp-0x4],ecx
  425fee:	call   0x426556
  425ff3:	mov    ecx,0xa0
  425ff8:	sub    DWORD PTR [ebp-0x4],ecx
  425ffb:	mov    DWORD PTR [ebp-0x4c],eax
  425ffe:	call   0x4279df
  426003:	push   0xafe74a00
  426008:	push   0xffffffd1
  42600a:	push   0x2
  42600c:	push   0xffffffcd
  42600e:	call   0x42751b
  426013:	add    esp,0x10
  426016:	mov    ecx,DWORD PTR [ebp-0xc]
  426019:	cmp    ecx,DWORD PTR ds:0x450088
  42601f:	je     0x426088
  426021:	mov    edi,DWORD PTR [ebp-0x4]
  426024:	mov    DWORD PTR [ebp-0x4],ecx
  426027:	and    edi,ebx
  426029:	mov    eax,0x6374
  42602e:	sub    DWORD PTR [ebp-0x4],eax
  426031:	add    edi,ecx
  426033:	test   edi,0x51
  426039:	jne    0x426088
  42603b:	cmp    edi,esi
  42603d:	jne    0x426088
  42603f:	mov    ebx,0xed8e
  426044:	or     edi,eax
  426046:	add    ebx,edi
  426048:	mov    edx,DWORD PTR [ebp-0x4]
  42604b:	sub    edx,esi
  42604d:	cmp    edx,DWORD PTR ds:0x45005c
  426053:	jne    0x426088
  426055:	mov    esi,0x13
  42605a:	sub    DWORD PTR [ebp-0x4],ebx
  42605d:	mov    eax,DWORD PTR [ebp-0x4]
  426060:	add    esi,ebx
  426062:	add    esi,edi
  426064:	sub    esi,edx
  426066:	sub    eax,ebx
  426068:	or     DWORD PTR [ebp-0x4],edi
  42606b:	sub    eax,ecx
  42606d:	and    eax,edx
  42606f:	or     DWORD PTR [ebp-0x4],esi
  426072:	and    eax,edx
  426074:	test   eax,0x4c
  426079:	je     0x426088
  42607b:	mov    ebx,eax
  42607d:	xor    DWORD PTR [ebp-0x4],edx
  426080:	mov    edi,esi
  426082:	sub    DWORD PTR [ebp-0x4],ebx
  426085:	add    DWORD PTR [ebp-0x4],edi
  426088:	sub    ecx,DWORD PTR [ebp-0x20]
  42608b:	mov    ebx,DWORD PTR [ebp-0x4]
  42608e:	and    ebx,edi
  426090:	add    ebx,esi
  426092:	cmp    ebx,DWORD PTR ds:0x450088
  426098:	je     0x4260ea
  42609a:	cmp    ecx,0x7b
  42609d:	je     0x4260ea
  42609f:	test   ecx,0xad2d
  4260a5:	jne    0x4260ea
  4260a7:	mov    eax,DWORD PTR [ebp-0x4]
  4260aa:	sub    DWORD PTR [ebp-0x4],ecx
  4260ad:	test   eax,0xb1
  4260b2:	jne    0x4260ea
  4260b4:	cmp    eax,0x1fb8
  4260b9:	jne    0x4260ea
  4260bb:	sub    ebx,ecx
  4260bd:	sub    DWORD PTR [ebp-0x4],ebx
  4260c0:	mov    ebx,DWORD PTR [ebp-0x4]
  4260c3:	mov    DWORD PTR [ebp-0x8],ebx
  4260c6:	cmp    eax,DWORD PTR [ebp-0x28]
  4260c9:	jne    0x4260ea
  4260cb:	cmp    eax,ecx
  4260cd:	je     0x4260ea
  4260cf:	sub    DWORD PTR [ebp-0x4],ebx
  4260d2:	mov    edx,esi
  4260d4:	mov    edi,DWORD PTR ds:0x450088
  4260da:	add    eax,edi
  4260dc:	add    DWORD PTR [ebp-0x8],edx
  4260df:	cmp    eax,DWORD PTR ds:0x45005c
  4260e5:	jne    0x4260ea
  4260e7:	add    DWORD PTR [ebp-0x4],eax
  4260ea:	xor    ecx,0xdaa920d4
  4260f0:	cmp    ecx,esi
  4260f2:	jne    0x4260f7
  4260f4:	add    DWORD PTR [ebp-0x4],ecx
  4260f7:	mov    edi,DWORD PTR [ebp-0x4c]
  4260fa:	sub    DWORD PTR [ebp-0x4],edx
  4260fd:	sub    edi,DWORD PTR [ebp-0xc]
  426100:	sub    DWORD PTR [ebp-0x4],eax
  426103:	xor    edi,0xdaa920d1
  426109:	xor    eax,eax
  42610b:	mov    esi,0xda
  426110:	test   edi,0x24
  426116:	je     0x426167
  426118:	mov    ebx,0x6112
  42611d:	or     esi,ebx
  42611f:	sub    esi,ecx
  426121:	mov    edx,DWORD PTR ds:0x450080
  426127:	cmp    edi,0x16
  42612a:	je     0x426167
  42612c:	cmp    esi,0x64b6
  426132:	je     0x426167
  426134:	mov    ebx,DWORD PTR [ebp-0x4]
  426137:	cmp    ebx,DWORD PTR [ebp-0x34]
  42613a:	jne    0x426167
  42613c:	mov    edx,0x2d
  426141:	or     DWORD PTR [ebp-0x4],ebx
  426144:	mov    ebx,DWORD PTR [ebp-0x4]
  426147:	sub    DWORD PTR [ebp-0x4],edi
  42614a:	xor    DWORD PTR [ebp-0x4],esi
  42614d:	add    DWORD PTR [ebp-0x4],ebx
  426150:	sub    eax,ebx
  426152:	add    edx,ecx
  426154:	and    edx,edi
  426156:	cmp    eax,DWORD PTR ds:0x45005c
  42615c:	je     0x426167
  42615e:	add    DWORD PTR [ebp-0x4],edi
  426161:	add    DWORD PTR [ebp-0x4],edx
  426164:	or     DWORD PTR [ebp-0x4],eax
  426167:	cmp    ecx,edi
  426169:	je     0x4263b7
  42616f:	push   0x75
  426171:	push   0x22
  426173:	push   0x7de8800
  426178:	push   0xffffffd2
  42617a:	push   0xffffffe8
  42617c:	call   0x42751b
  426181:	add    esp,0x14
  426184:	mov    ecx,0x6c7a101c
  426189:	add    esi,esi
  42618b:	cmp    esi,ecx
  42618d:	jne    0x426196
  42618f:	cmp    esi,edi
  426191:	je     0x426196
  426193:	sub    DWORD PTR [ebp-0x4],esi
  426196:	add    ecx,0x93caf040
  42619c:	mov    edi,DWORD PTR [ebp-0x4]
  42619f:	mov    DWORD PTR [ebp-0x48],ebx
  4261a2:	sub    edi,ebx
  4261a4:	mov    esi,DWORD PTR [ebp-0x4]
  4261a7:	sub    esi,eax
  4261a9:	add    edi,ecx
  4261ab:	add    DWORD PTR [ebp-0x4],edi
  4261ae:	cmp    esi,0xffffff98
  4261b1:	je     0x42623d
  4261b7:	sub    esi,edi
  4261b9:	mov    ebx,DWORD PTR [ebp-0x48]
  4261bc:	or     ebx,ecx
  4261be:	xor    eax,eax
  4261c0:	sub    ebx,ecx
  4261c2:	cmp    esi,DWORD PTR ds:0x450080
  4261c8:	jne    0x42623d
  4261ca:	mov    edx,DWORD PTR [ebp-0x48]
  4261cd:	cmp    edi,DWORD PTR ds:0x45005c
  4261d3:	je     0x42623d
  4261d5:	sub    edx,ecx
  4261d7:	sub    DWORD PTR [ebp-0x4],edi
  4261da:	cmp    ebx,0xffffffad
  4261dd:	jne    0x42623d
  4261df:	mov    edi,0xd7
  4261e4:	sub    DWORD PTR [ebp-0x48],ebx
  4261e7:	sub    esi,ebx
  4261e9:	xor    ebx,ebx
  4261eb:	cmp    edx,0xffffffc1
  4261ee:	je     0x42623d
  4261f0:	cmp    edx,ebx
  4261f2:	jne    0x42623d
  4261f4:	add    DWORD PTR [ebp-0x48],ebx
  4261f7:	sub    DWORD PTR [ebp-0x48],esi
  4261fa:	xor    ebx,ebx
  4261fc:	add    ebx,ecx
  4261fe:	mov    esi,DWORD PTR [ebp-0x48]
  426201:	add    DWORD PTR [ebp-0x4],ebx
  426204:	and    DWORD PTR [ebp-0x48],edx
  426207:	sub    esi,ebx
  426209:	add    edi,esi
  42620b:	add    eax,ebx
  42620d:	cmp    edi,0xffffffe9
  426210:	je     0x42623d
  426212:	mov    ebx,0xf70a
  426217:	sub    DWORD PTR [ebp-0x4],ebx
  42621a:	add    eax,edi
  42621c:	and    DWORD PTR [ebp-0x48],esi
  42621f:	cmp    eax,0xffffffcd
  426222:	je     0x42623d
  426224:	cmp    eax,DWORD PTR [ebp-0x2c]
  426227:	je     0x42623d
  426229:	sub    eax,ecx
  42622b:	mov    ebx,DWORD PTR [ebp-0x4]
  42622e:	mov    edx,0xe705
  426233:	sub    eax,ebx
  426235:	sub    eax,esi
  426237:	add    DWORD PTR [ebp-0x48],eax
  42623a:	or     DWORD PTR [ebp-0x48],edx
  42623d:	push   ecx
  42623e:	call   DWORD PTR ds:0x44f94c
  426244:	sub    esi,ebx
  426246:	mov    edi,0x86
  42624b:	mov    ebx,edi
  42624d:	sub    DWORD PTR [ebp-0x48],esi
  426250:	cmp    eax,DWORD PTR [ebp-0x18]
  426253:	je     0x4262ab
  426255:	mov    esi,DWORD PTR [ebp-0x4]
  426258:	sub    esi,edi
  42625a:	add    DWORD PTR [ebp-0x48],ebx
  42625d:	add    esi,ebx
  42625f:	mov    edi,DWORD PTR [ebp-0x4]
  426262:	add    esi,esi
  426264:	sub    esi,edi
  426266:	cmp    esi,eax
  426268:	jne    0x4262ab
  42626a:	mov    ebx,0x5f
  42626f:	cmp    esi,DWORD PTR [ebp-0x50]
  426272:	je     0x4262ab
  426274:	mov    edx,0x13552981
  426279:	add    DWORD PTR [ebp-0x4],ebx
  42627c:	cmp    esi,0xffffffeb
  42627f:	je     0x4262ab
  426281:	cmp    edi,esi
  426283:	jne    0x4262ab
  426285:	mov    ecx,DWORD PTR [ebp-0x48]
  426288:	cmp    ecx,ebx
  42628a:	je     0x4262ab
  42628c:	mov    DWORD PTR [ebp-0x48],esi
  42628f:	and    ecx,edx
  426291:	mov    edi,ecx
  426293:	mov    esi,0xc4
  426298:	cmp    edi,0x6350
  42629e:	jne    0x4262a3
  4262a0:	sub    DWORD PTR [ebp-0x48],edi
  4262a3:	cmp    ecx,0xffffffe2
  4262a6:	jne    0x4262ab
  4262a8:	mov    DWORD PTR [ebp-0x4],esi
  4262ab:	or     eax,eax
  4262ad:	je     0x4263b7
  4262b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4262b6:	mov    ebx,DWORD PTR [ebp-0x4]
  4262b9:	cmp    ebx,0xffffffd7
  4262bc:	jne    0x4262cc
  4262be:	sub    DWORD PTR [ebp-0x4],ecx
  4262c1:	mov    esi,0x2b
  4262c6:	or     DWORD PTR [ebp-0x4],esi
  4262c9:	or     DWORD PTR [ebp-0x4],ebx
  4262cc:	add    DWORD PTR [ebp-0x3c],0xe8740854
  4262d3:	add    DWORD PTR [ebp-0x48],ebx
  4262d6:	lea    edx,[eax+0xbf8]
  4262dc:	mov    esi,0x5f
  4262e1:	xor    eax,eax
  4262e3:	xor    DWORD PTR [ebp-0x4],eax
  4262e6:	add    esi,edx
  4262e8:	add    esi,ecx
  4262ea:	add    DWORD PTR [ebp-0x4],esi
  4262ed:	inc    edx
  4262ee:	mov    edi,DWORD PTR [ebp-0x4]
  4262f1:	and    edi,ecx
  4262f3:	mov    esi,DWORD PTR [ebp-0x48]
  4262f6:	cmp    ebx,DWORD PTR [ebp-0x44]
  4262f9:	je     0x426326
  4262fb:	add    DWORD PTR [ebp-0x48],esi
  4262fe:	add    DWORD PTR [ebp-0x48],edx
  426301:	and    edi,ebx
  426303:	mov    ebx,0x298e
  426308:	mov    eax,0xa0ea
  42630d:	add    DWORD PTR [ebp-0x4],eax
  426310:	test   edi,0x36
  426316:	jne    0x42631b
  426318:	add    DWORD PTR [ebp-0x48],edi
  42631b:	and    ebx,eax
  42631d:	sub    DWORD PTR [ebp-0x48],edi
  426320:	and    DWORD PTR [ebp-0x48],esi
  426323:	add    DWORD PTR [ebp-0x48],ebx
  426326:	mov    ebx,DWORD PTR [edx]
  426328:	cmp    ebx,DWORD PTR [ebp-0x30]
  42632b:	je     0x426358
  42632d:	mov    eax,DWORD PTR [ebp-0x4]
  426330:	add    eax,ecx
  426332:	cmp    ebx,0xffffff94
  426335:	jne    0x426358
  426337:	cmp    eax,0x39
  42633a:	je     0x426358
  42633c:	mov    esi,DWORD PTR [ebp-0x48]
  42633f:	sub    DWORD PTR [ebp-0x48],esi
  426342:	xor    esi,esi
  426344:	cmp    eax,0xffffff99
  426347:	je     0x426358
  426349:	add    esi,ebx
  42634b:	cmp    esi,0x6f
  42634e:	jne    0x426358
  426350:	sub    DWORD PTR [ebp-0x48],edx
  426353:	add    esi,eax
  426355:	add    DWORD PTR [ebp-0x48],esi
  426358:	sub    ebx,0xcacf4f3b
  42635e:	mov    esi,0x58
  426363:	add    esi,esi
  426365:	and    esi,edi
  426367:	add    DWORD PTR [ebp-0x4],esi
  42636a:	cmp    ebx,0x7830b2c5
  426370:	jne    0x4262dc
  426376:	mov    eax,0x8
  42637b:	mov    ebx,DWORD PTR [ebp-0x4]
  42637e:	sub    DWORD PTR [ebp-0x48],eax
  426381:	or     DWORD PTR [ebp-0x4],ebx
  426384:	mov    ebx,DWORD PTR [edx+0x4]
  426387:	push   0x4fb3ba00
  42638c:	push   0x19564100
  426391:	call   0x427075
  426396:	add    esp,0x8
  426399:	push   0xcb645c00
  42639e:	push   0x7
  4263a0:	push   0x137b4600
  4263a5:	push   0x8bc30b00
  4263aa:	push   0xc
  4263ac:	call   0x42751b
  4263b1:	add    esp,0x14
  4263b4:	sub    DWORD PTR [ebp-0x3c],ebx
  4263b7:	mov    ebx,DWORD PTR [ebp-0x48]
  4263ba:	xor    ecx,ecx
  4263bc:	push   0x2d
  4263be:	push   0x3927ac00
  4263c3:	push   0x43fa1100
  4263c8:	call   0x4276cd
  4263cd:	add    esp,0xc
  4263d0:	push   0x79194600
  4263d5:	push   0x1966b900
  4263da:	call   0x427075
  4263df:	add    esp,0x8
  4263e2:	sub    DWORD PTR [ebp-0x48],ebx
  4263e5:	push   0x592afa00
  4263ea:	call   0x426f61
  4263ef:	add    esp,0x4
  4263f2:	push   0x79251600
  4263f7:	push   0xc
  4263f9:	call   0x426f61
  4263fe:	add    esp,0x8
  426401:	mov    edi,DWORD PTR [ebp+0xc]
  426404:	push   0xffffff97
  426406:	push   0x66
  426408:	push   0xffffffa3
  42640a:	push   0xffffffd7
  42640c:	call   0x4273d1
  426411:	add    esp,0x10
  426414:	push   0xe3a27d00
  426419:	call   0x4276cd
  42641e:	add    esp,0x4
  426421:	mov    ebx,DWORD PTR [ebp-0x3c]
  426424:	push   0x5bf75400
  426429:	push   0xffffffa5
  42642b:	push   0xc7e78500
  426430:	push   0xdfa26e00
  426435:	push   0xffffffd0
  426437:	call   0x4272e2
  42643c:	add    esp,0x14
  42643f:	push   0x4bdd4400
  426444:	push   0x7bab8d00
  426449:	push   0x22
  42644b:	call   0x42751b
  426450:	add    esp,0xc
  426453:	mov    DWORD PTR [edi+0x0],ebx
  426456:	add    eax,esi
  426458:	mov    edx,DWORD PTR [ebp-0x48]
  42645b:	add    DWORD PTR [ebp-0x48],edx
  42645e:	xor    edi,edi
  426460:	push   0xffffffc1
  426462:	call   0x427075
  426467:	add    esp,0x4
  42646a:	sub    edi,ebx
  42646c:	cmp    edi,DWORD PTR ds:0x450080
  426472:	jne    0x4264b5
  426474:	cmp    edi,DWORD PTR ds:0x450080
  42647a:	je     0x4264b5
  42647c:	push   0xcb3d7200
  426481:	push   0xeb545500
  426486:	push   0xfffffff9
  426488:	call   0x42751b
  42648d:	add    esp,0xc
  426490:	cmp    ebx,0xffffffb1
  426493:	jne    0x4264b5
  426495:	and    edi,ebx
  426497:	push   0x1330eb00
  42649c:	push   0x8bd9cc00
  4264a1:	push   0xffffffcf
  4264a3:	push   0x47b31600
  4264a8:	push   0x2
  4264aa:	call   0x42751b
  4264af:	add    esp,0x14
  4264b2:	add    DWORD PTR [ebp-0x4],edi
  4264b5:	push   0xffffffaf
  4264b7:	push   0x5ba10400
  4264bc:	push   0x1e
  4264be:	push   0x13df7f00
  4264c3:	call   0x4272e2
  4264c8:	add    esp,0x10
  4264cb:	sub    DWORD PTR [ebp-0x4],edi
  4264ce:	push   0x93781b00
  4264d3:	call   0x4276cd
  4264d8:	add    esp,0x4
  4264db:	pop    edi
  4264dc:	cmp    edi,DWORD PTR ds:0x45005c
  4264e2:	jne    0x4264f8
  4264e4:	push   0x53301e00
  4264e9:	push   0xffffffd8
  4264eb:	push   0x83a18d00
  4264f0:	call   0x4273d1
  4264f5:	add    esp,0xc
  4264f8:	pop    esi
  4264f9:	test   esi,0x93
  4264ff:	jne    0x426504
  426501:	add    DWORD PTR [ebp-0x4],esi
  426504:	push   0x1361cd00
  426509:	push   0x6bcb0300
  42650e:	push   0xcb45a600
  426513:	push   0x87d30800
  426518:	call   0x426f61
  42651d:	add    esp,0x10
  426520:	pop    ebx
  426521:	mov    eax,0x5df7
  426526:	push   0x77fd7100
  42652b:	push   0xf96c3000
  426530:	push   0xffffff8f
  426532:	push   0x9324a600
  426537:	push   0x1
  426539:	call   0x42751b
  42653e:	add    esp,0x14
  426541:	push   0xffffffb9
  426543:	push   0xffffffe3
  426545:	call   0x427075
  42654a:	add    esp,0x8
  42654d:	leave  
  42654e:	ret    0x8
  426551:	int3   
  426552:	int3   
  426553:	int3   
  426554:	int3   
  426555:	int3   
  426556:	push   ebp
  426557:	mov    ebp,esp
  426559:	sub    esp,0x20
  42655c:	push   0xd3042300
  426561:	push   0xffffffd9
  426563:	push   0xe78d4e00
  426568:	push   0xf9c1800
  42656d:	push   0x74
  42656f:	call   0x4272e2
  426574:	add    esp,0x14
  426577:	push   ebx
  426578:	mov    eax,0x74
  42657d:	push   0x6b7c4200
  426582:	push   0x50
  426584:	push   0xd929b200
  426589:	push   0xffffff9f
  42658b:	push   0xd3089f00
  426590:	call   0x4273d1
  426595:	add    esp,0x14
  426598:	push   0xbff57700
  42659d:	push   0x6b4c0200
  4265a2:	push   0x93081300
  4265a7:	push   0x997e0300
  4265ac:	call   0x4276cd
  4265b1:	add    esp,0x10
  4265b4:	push   esi
  4265b5:	xor    ebx,ebx
  4265b7:	mov    eax,0x5
  4265bc:	push   0xb867800
  4265c1:	push   0x5308d200
  4265c6:	call   0x426f61
  4265cb:	add    esp,0x8
  4265ce:	push   0x42
  4265d0:	push   0xffffffe4
  4265d2:	push   0xcb7e6500
  4265d7:	push   0xa7e47700
  4265dc:	push   0x5977bf00
  4265e1:	call   0x4271b5
  4265e6:	add    esp,0x14
  4265e9:	push   0x89567a00
  4265ee:	push   0x592fb600
  4265f3:	call   0x4271b5
  4265f8:	add    esp,0x8
  4265fb:	push   0x16
  4265fd:	push   0x37a82a00
  426602:	push   0xffffff97
  426604:	call   0x4276cd
  426609:	add    esp,0xc
  42660c:	mov    DWORD PTR [ebp-0xc],ebx
  42660f:	push   edi
  426610:	xor    eax,eax
  426612:	push   0xc9274900
  426617:	push   0x6bfe2900
  42661c:	push   0xeb241e00
  426621:	call   0x4279df
  426626:	add    esp,0xc
  426629:	mov    DWORD PTR [ebp-0xc],eax
  42662c:	push   0x46
  42662e:	push   0xfb46a00
  426633:	call   0x4271b5
  426638:	add    esp,0x8
  42663b:	rdtsc  
  42663d:	add    DWORD PTR [ebp-0xc],eax
  426640:	or     edx,ebx
  426642:	mov    esi,DWORD PTR [ebp-0xc]
  426645:	mov    ecx,DWORD PTR [ebp-0xc]
  426648:	sub    DWORD PTR [ebp-0xc],ebx
  42664b:	add    DWORD PTR [ebp-0xc],edx
  42664e:	cmp    ecx,DWORD PTR [ebp-0x10]
  426651:	je     0x426667
  426653:	mov    edi,DWORD PTR [ebp-0xc]
  426656:	sub    edi,esi
  426658:	xor    edx,edx
  42665a:	add    DWORD PTR [ebp-0xc],ecx
  42665d:	sub    edx,esi
  42665f:	or     edx,ebx
  426661:	add    DWORD PTR [ebp-0xc],edx
  426664:	sub    DWORD PTR [ebp-0xc],edi
  426667:	cmp    esi,ebx
  426669:	jne    0x4266ae
  42666b:	mov    ecx,DWORD PTR [ebp-0xc]
  42666e:	cmp    ecx,DWORD PTR [ebp-0x8]
  426671:	je     0x4266ae
  426673:	xor    edx,edx
  426675:	cmp    edi,edx
  426677:	je     0x4266ae
  426679:	sub    edx,eax
  42667b:	mov    edi,DWORD PTR ds:0x450084
  426681:	mov    esi,DWORD PTR ds:0x450084
  426687:	or     DWORD PTR [ebp-0xc],edx
  42668a:	cmp    ecx,0xffffffab
  42668d:	jne    0x4266ae
  42668f:	or     ecx,edx
  426691:	cmp    ecx,DWORD PTR [ebp-0x1c]
  426694:	je     0x4266ae
  426696:	mov    ebx,DWORD PTR [ebp-0xc]
  426699:	sub    DWORD PTR [ebp-0xc],ecx
  42669c:	or     DWORD PTR [ebp-0xc],ebx
  42669f:	mov    ecx,DWORD PTR [ebp-0xc]
  4266a2:	add    DWORD PTR [ebp-0xc],edi
  4266a5:	mov    DWORD PTR [ebp-0xc],ebx
  4266a8:	sub    DWORD PTR [ebp-0xc],ecx
  4266ab:	sub    DWORD PTR [ebp-0xc],esi
  4266ae:	and    DWORD PTR [ebp-0xc],ecx
  4266b1:	pop    edi
  4266b2:	mov    esi,DWORD PTR ds:0x450084
  4266b8:	mov    ecx,0xae
  4266bd:	cmp    edi,0x2d70
  4266c3:	je     0x426761
  4266c9:	mov    edx,DWORD PTR [ebp-0xc]
  4266cc:	add    edx,ebx
  4266ce:	sub    DWORD PTR [ebp-0xc],edx
  4266d1:	sub    DWORD PTR [ebp-0xc],edx
  4266d4:	or     DWORD PTR [ebp-0xc],ecx
  4266d7:	xor    edx,edx
  4266d9:	sub    esi,ebx
  4266db:	or     edx,ebx
  4266dd:	sub    DWORD PTR [ebp-0xc],edi
  4266e0:	sub    DWORD PTR [ebp-0xc],esi
  4266e3:	sub    edx,ecx
  4266e5:	cmp    edx,0x1d
  4266e8:	jne    0x426761
  4266ea:	mov    esi,DWORD PTR [ebp-0xc]
  4266ed:	mov    ebx,0xcb
  4266f2:	sub    esi,ebx
  4266f4:	sub    esi,ecx
  4266f6:	sub    edx,eax
  4266f8:	or     esi,edi
  4266fa:	cmp    esi,DWORD PTR [ebp-0x14]
  4266fd:	je     0x426761
  4266ff:	or     DWORD PTR [ebp-0xc],ebx
  426702:	cmp    edx,0x78
  426705:	jne    0x426761
  426707:	add    DWORD PTR [ebp-0xc],ecx
  42670a:	mov    ebx,DWORD PTR [ebp-0xc]
  42670d:	cmp    esi,0xffffff84
  426710:	jne    0x426761
  426712:	add    DWORD PTR [ebp-0xc],edx
  426715:	mov    edx,DWORD PTR ds:0x450044
  42671b:	add    edx,esi
  42671d:	test   edx,0xe4
  426723:	jne    0x426761
  426725:	mov    ecx,edx
  426727:	and    DWORD PTR [ebp-0xc],ecx
  42672a:	mov    edx,DWORD PTR [ebp-0xc]
  42672d:	add    ebx,ebx
  42672f:	sub    edx,eax
  426731:	test   edx,0x73
  426737:	je     0x426761
  426739:	mov    ecx,DWORD PTR ds:0x450084
  42673f:	add    ebx,ecx
  426741:	sub    DWORD PTR [ebp-0xc],edx
  426744:	mov    esi,DWORD PTR [ebp-0xc]
  426747:	cmp    ebx,0x20
  42674a:	je     0x426761
  42674c:	sub    esi,ebx
  42674e:	cmp    esi,ecx
  426750:	je     0x426761
  426752:	mov    ebx,eax
  426754:	mov    ecx,DWORD PTR [ebp-0xc]
  426757:	and    esi,ecx
  426759:	sub    ebx,ecx
  42675b:	and    DWORD PTR [ebp-0xc],ebx
  42675e:	sub    DWORD PTR [ebp-0xc],esi
  426761:	pop    esi
  426762:	sub    DWORD PTR [ebp-0xc],esi
  426765:	pop    ebx
  426766:	sub    ecx,eax
  426768:	xor    edx,edx
  42676a:	add    DWORD PTR [ebp-0xc],ebx
  42676d:	test   ecx,0xad
  426773:	je     0x42679a
  426775:	cmp    ecx,DWORD PTR ds:0x450084
  42677b:	jne    0x42679a
  42677d:	sub    ecx,edx
  42677f:	sub    ecx,ebx
  426781:	mov    edx,DWORD PTR [ebp-0xc]
  426784:	and    DWORD PTR [ebp-0xc],eax
  426787:	add    ecx,edi
  426789:	sub    DWORD PTR [ebp-0xc],esi
  42678c:	cmp    edx,DWORD PTR ds:0x450044
  426792:	je     0x42679a
  426794:	add    DWORD PTR [ebp-0xc],ecx
  426797:	add    DWORD PTR [ebp-0xc],edx
  42679a:	leave  
  42679b:	ret    
  42679c:	int3   
  42679d:	int3   
  42679e:	int3   
  42679f:	int3   
  4267a0:	int3   
  4267a1:	push   ebp
  4267a2:	mov    ebp,esp
  4267a4:	sub    esp,0x3c
  4267a7:	push   0xd3724f00
  4267ac:	push   0x195e4800
  4267b1:	push   0xe3bee800
  4267b6:	push   0xd9658400
  4267bb:	call   0x4272e2
  4267c0:	add    esp,0x10
  4267c3:	push   0xffffffce
  4267c5:	call   0x4273d1
  4267ca:	add    esp,0x4
  4267cd:	push   ebx
  4267ce:	mov    ecx,0x63
  4267d3:	push   0x39
  4267d5:	push   0x47
  4267d7:	push   0xa7a80c00
  4267dc:	push   0x30
  4267de:	push   0x6b770900
  4267e3:	call   0x42751b
  4267e8:	add    esp,0x14
  4267eb:	push   esi
  4267ec:	mov    DWORD PTR [ebp-0x30],eax
  4267ef:	push   edi
  4267f0:	push   0x37d76600
  4267f5:	push   0x534db600
  4267fa:	push   0x13c37600
  4267ff:	push   0xcb60ea00
  426804:	call   0x4279df
  426809:	add    esp,0x10
  42680c:	call   0x426f61
  426811:	mov    eax,DWORD PTR [ebp+0x10]
  426814:	mov    ebx,eax
  426816:	sub    DWORD PTR [ebp-0x30],ebx
  426819:	mov    ecx,DWORD PTR [ebp+0x8]
  42681c:	cmp    ecx,ebx
  42681e:	jne    0x426871
  426820:	mov    edx,DWORD PTR [ebp-0x30]
  426823:	cmp    edx,0x2d
  426826:	je     0x426871
  426828:	mov    esi,DWORD PTR [ebp-0x30]
  42682b:	cmp    ecx,0xffffffea
  42682e:	je     0x426871
  426830:	mov    edi,DWORD PTR ds:0x450040
  426836:	xor    ebx,ebx
  426838:	and    DWORD PTR [ebp-0x30],edi
  42683b:	add    DWORD PTR [ebp-0x30],ecx
  42683e:	test   esi,0xf4
  426844:	jne    0x426871
  426846:	sub    DWORD PTR [ebp-0x30],edx
  426849:	add    DWORD PTR [ebp-0x30],esi
  42684c:	xor    esi,esi
  42684e:	cmp    edx,edi
  426850:	je     0x426871
  426852:	sub    DWORD PTR [ebp-0x30],ebx
  426855:	sub    DWORD PTR [ebp-0x30],ecx
  426858:	sub    DWORD PTR [ebp-0x30],edi
  42685b:	and    esi,edi
  42685d:	and    esi,eax
  42685f:	xor    edx,edx
  426861:	mov    ebx,DWORD PTR [ebp-0x30]
  426864:	sub    esi,edi
  426866:	add    esi,eax
  426868:	add    DWORD PTR [ebp-0x30],ebx
  42686b:	add    DWORD PTR [ebp-0x30],edx
  42686e:	sub    DWORD PTR [ebp-0x30],esi
  426871:	cmp    DWORD PTR [ebp+0xc],eax
  426874:	je     0x426906
  42687a:	mov    DWORD PTR [ebp-0x30],ebx
  42687d:	dec    DWORD PTR [ebp+0xc]
  426880:	sub    DWORD PTR [ebp-0x30],ebx
  426883:	xor    DWORD PTR [ecx],eax
  426885:	sub    DWORD PTR [ebp-0x30],ecx
  426888:	add    DWORD PTR [ecx],0x38257847
  42688e:	mov    edx,DWORD PTR [ebp-0x30]
  426891:	add    edx,esi
  426893:	mov    edi,DWORD PTR [ebp-0x30]
  426896:	add    DWORD PTR [ebp-0x30],edx
  426899:	sub    edi,ecx
  42689b:	add    edi,ebx
  42689d:	cmp    edi,0xa
  4268a0:	je     0x4268e9
  4268a2:	and    DWORD PTR [ebp-0x30],ebx
  4268a5:	add    DWORD PTR [ebp-0x30],ecx
  4268a8:	cmp    edi,ebx
  4268aa:	jne    0x4268e9
  4268ac:	mov    esi,0x85
  4268b1:	mov    edx,0x40
  4268b6:	and    edx,esi
  4268b8:	xor    DWORD PTR [ebp-0x30],edx
  4268bb:	add    edi,edi
  4268bd:	add    edi,ecx
  4268bf:	and    edi,ebx
  4268c1:	test   edi,0x51f8
  4268c7:	je     0x4268e9
  4268c9:	cmp    eax,0xffffffba
  4268cc:	jne    0x4268e9
  4268ce:	cmp    edi,0xffffffe7
  4268d1:	je     0x4268e9
  4268d3:	add    edi,eax
  4268d5:	mov    esi,DWORD PTR [ebp-0x30]
  4268d8:	mov    edx,DWORD PTR [ebp-0x30]
  4268db:	sub    DWORD PTR [ebp-0x30],esi
  4268de:	cmp    edx,DWORD PTR [ebp-0x18]
  4268e1:	je     0x4268e9
  4268e3:	add    DWORD PTR [ebp-0x30],edx
  4268e6:	sub    DWORD PTR [ebp-0x30],edi
  4268e9:	neg    DWORD PTR [ecx]
  4268eb:	sub    DWORD PTR [ebp-0x30],esi
  4268ee:	xor    DWORD PTR [ecx],0x700b3711
  4268f4:	mov    edx,ecx
  4268f6:	add    edx,eax
  4268f8:	add    DWORD PTR [ebp-0x30],edx
  4268fb:	add    ecx,0x4
  4268fe:	or     DWORD PTR [ebp-0x30],ecx
  426901:	jmp    0x42681c
  426906:	mov    eax,0xa536
  42690b:	sub    DWORD PTR [ebp-0x30],edx
  42690e:	call   0x4271b5
  426913:	xor    DWORD PTR [ebp-0x30],eax
  426916:	test   eax,0x2a
  42691b:	jne    0x426935
  42691d:	push   0xb7b46600
  426922:	push   0xffffffd7
  426924:	push   0xc79fb300
  426929:	push   0xffffffbf
  42692b:	push   0x30
  42692d:	call   0x427075
  426932:	add    esp,0x14
  426935:	pop    edi
  426936:	push   0x7a
  426938:	push   0x931ff00
  42693d:	push   0x4bc30600
  426942:	push   0x0
  426944:	push   0xfffffff8
  426946:	call   0x4276cd
  42694b:	add    esp,0x14
  42694e:	pop    esi
  42694f:	push   0xd39a3a00
  426954:	call   0x4273d1
  426959:	add    esp,0x4
  42695c:	pop    ebx
  42695d:	sub    eax,edi
  42695f:	push   0xffffffb9
  426961:	push   0x492a9300
  426966:	push   0x21
  426968:	push   0x59277300
  42696d:	call   0x4279df
  426972:	add    esp,0x10
  426975:	push   0x5fa3be00
  42697a:	push   0x56
  42697c:	push   0xffffff8a
  42697e:	push   0x1fcc1300
  426983:	push   0x6f
  426985:	call   0x4271b5
  42698a:	add    esp,0x14
  42698d:	leave  
  42698e:	ret    0xc
  426991:	int3   
  426992:	int3   
  426993:	int3   
  426994:	int3   
  426995:	int3   
  426996:	push   ebp
  426997:	mov    ebp,esp
  426999:	sub    esp,0x48
  42699c:	push   0xffffff82
  42699e:	push   0x59763b00
  4269a3:	push   0x7e
  4269a5:	call   0x4271b5
  4269aa:	add    esp,0xc
  4269ad:	push   0xffffff9c
  4269af:	push   0xa3ef0f00
  4269b4:	call   0x426f61
  4269b9:	add    esp,0x8
  4269bc:	push   ebx
  4269bd:	mov    DWORD PTR [ebp-0x3c],eax
  4269c0:	push   0x63
  4269c2:	push   0x7d
  4269c4:	push   0x5a
  4269c6:	push   0x39
  4269c8:	call   0x4276cd
  4269cd:	add    esp,0x10
  4269d0:	push   esi
  4269d1:	add    eax,eax
  4269d3:	push   0xfffffff8
  4269d5:	call   0x4271b5
  4269da:	add    esp,0x4
  4269dd:	push   edi
  4269de:	push   0xffffffc0
  4269e0:	push   0x33
  4269e2:	push   0xffffff80
  4269e4:	push   0xffffffb4
  4269e6:	push   0x25
  4269e8:	call   0x4273d1
  4269ed:	add    esp,0x14
  4269f0:	call   0x4279df
  4269f5:	push   0x93a8b900
  4269fa:	push   0x47
  4269fc:	push   0x26
  4269fe:	call   0x4272e2
  426a03:	add    esp,0xc
  426a06:	push   0x2bcb2200
  426a0b:	push   0xeba40e00
  426a10:	push   0xabc8ac00
  426a15:	call   0x4271b5
  426a1a:	add    esp,0xc
  426a1d:	mov    edi,0x7ae53ec1
  426a22:	mov    ebx,DWORD PTR [ebp-0x3c]
  426a25:	push   0xffffffd9
  426a27:	push   0x5d
  426a29:	push   0xffffffce
  426a2b:	push   0xffffffc2
  426a2d:	call   0x426f61
  426a32:	add    esp,0x10
  426a35:	push   0x2b
  426a37:	push   0xd
  426a39:	push   0x43d8e200
  426a3e:	push   0x131e4d00
  426a43:	call   0x4276cd
  426a48:	add    esp,0x10
  426a4b:	xor    eax,eax
  426a4d:	sub    DWORD PTR [ebp-0x3c],edi
  426a50:	test   ebx,0xb4
  426a56:	jne    0x426b29
  426a5c:	call   0x42751b
  426a61:	mov    edx,DWORD PTR [ebp-0x3c]
  426a64:	push   0xd9782900
  426a69:	push   0xffffff8a
  426a6b:	push   0xffffff80
  426a6d:	push   0xffffffd8
  426a6f:	push   0xffffffc5
  426a71:	call   0x42751b
  426a76:	add    esp,0x14
  426a79:	cmp    ebx,eax
  426a7b:	je     0x426b29
  426a81:	cmp    eax,0xcd9d
  426a86:	jne    0x426b29
  426a8c:	xor    ecx,ecx
  426a8e:	push   0xf3814400
  426a93:	push   0x55
  426a95:	push   0xffffffb7
  426a97:	push   0x79
  426a99:	call   0x427075
  426a9e:	add    esp,0x10
  426aa1:	push   0xffffffb1
  426aa3:	push   0x76
  426aa5:	push   0x14
  426aa7:	push   0x59794000
  426aac:	call   0x4273d1
  426ab1:	add    esp,0x10
  426ab4:	mov    esi,DWORD PTR [ebp-0x3c]
  426ab7:	push   0xffffffdf
  426ab9:	push   0xffffffe5
  426abb:	push   0xd35c3800
  426ac0:	push   0xeb259a00
  426ac5:	call   0x4273d1
  426aca:	add    esp,0x10
  426acd:	add    DWORD PTR [ebp-0x3c],esi
  426ad0:	push   0xcb336200
  426ad5:	push   0x893e9c00
  426ada:	push   0x30
  426adc:	call   0x42751b
  426ae1:	add    esp,0xc
  426ae4:	cmp    esi,0x3
  426ae7:	jne    0x426b29
  426ae9:	test   ebx,0xb9
  426aef:	je     0x426b29
  426af1:	push   0x693e1000
  426af6:	push   0x69219d00
  426afb:	push   0x5bfd9500
  426b00:	push   0x4b
  426b02:	push   0x7a4d700
  426b07:	call   0x4272e2
  426b0c:	add    esp,0x14
  426b0f:	push   0x79682f00
  426b14:	push   0x194f9e00
  426b19:	push   0xbbc9d400
  426b1e:	call   0x426f61
  426b23:	add    esp,0xc
  426b26:	add    DWORD PTR [ebp-0x3c],ebx
  426b29:	push   0x25
  426b2b:	call   0x4271b5
  426b30:	add    esp,0x4
  426b33:	sub    edi,0x7ae53e81
  426b39:	and    eax,ebx
  426b3b:	call   0x4271b5
  426b40:	push   edi
  426b41:	push   0x9951c900
  426b46:	call   0x426f61
  426b4b:	add    esp,0x4
  426b4e:	mov    ecx,0xe457f371
  426b53:	mov    ebx,DWORD PTR [ebp-0x3c]
  426b56:	mov    eax,DWORD PTR [ebp-0x3c]
  426b59:	add    ebx,ecx
  426b5b:	cmp    ebx,0x73
  426b5e:	jne    0x426b8b
  426b60:	mov    edi,DWORD PTR [ebp-0x3c]
  426b63:	test   edi,0xd7
  426b69:	jne    0x426b8b
  426b6b:	mov    esi,DWORD PTR [ebp-0x3c]
  426b6e:	sub    DWORD PTR [ebp-0x3c],eax
  426b71:	and    DWORD PTR [ebp-0x3c],ebx
  426b74:	mov    ebx,DWORD PTR [ebp-0x3c]
  426b77:	or     DWORD PTR [ebp-0x3c],esi
  426b7a:	sub    edi,esi
  426b7c:	sub    ebx,edi
  426b7e:	test   ebx,0xdb
  426b84:	je     0x426b8b
  426b86:	sub    ebx,edi
  426b88:	sub    DWORD PTR [ebp-0x3c],ebx
  426b8b:	add    ecx,0x1ba83c8f
  426b91:	add    DWORD PTR [ebp-0x3c],ebx
  426b94:	push   ecx
  426b95:	call   0x427075
  426b9a:	push   0x4bf50200
  426b9f:	push   0x2bf57800
  426ba4:	call   0x4271b5
  426ba9:	add    esp,0x8
  426bac:	push   0x5ccec
  426bb1:	push   0xffffffee
  426bb3:	push   0x53
  426bb5:	push   0x535e4b00
  426bba:	call   0x4279df
  426bbf:	add    esp,0xc
  426bc2:	push   0x0
  426bc4:	call   0x4276cd
  426bc9:	push   0xa9329700
  426bce:	push   0x931deb00
  426bd3:	push   0xb9266f00
  426bd8:	call   0x426f61
  426bdd:	add    esp,0xc
  426be0:	mov    ecx,0xa0af901b
  426be5:	xor    eax,eax
  426be7:	sub    ebx,ecx
  426be9:	and    ebx,esi
  426beb:	sub    eax,esi
  426bed:	and    ebx,eax
  426bef:	add    DWORD PTR [ebp-0x3c],ebx
  426bf2:	sub    ecx,0xa06a96bb
  426bf8:	or     DWORD PTR [ebp-0x3c],ecx
  426bfb:	call   DWORD PTR [ecx]
  426bfd:	add    DWORD PTR [ebp-0x3c],ebx
  426c00:	mov    DWORD PTR [ebp-0x10],eax
  426c03:	push   0xffffff91
  426c05:	call   0x4276cd
  426c0a:	add    esp,0x4
  426c0d:	push   0xffffffe9
  426c0f:	call   0x427075
  426c14:	add    esp,0x4
  426c17:	mov    edi,0x90c77377
  426c1c:	push   0xd314fc00
  426c21:	call   0x4279df
  426c26:	add    esp,0x4
  426c29:	add    edi,0x6f7d8c89
  426c2f:	mov    ebx,DWORD PTR [ebp-0x3c]
  426c32:	sub    ebx,edi
  426c34:	push   0x6b9fdb00
  426c39:	call   0x4271b5
  426c3e:	add    esp,0x4
  426c41:	push   0x3ffc1e00
  426c46:	push   0x3a
  426c48:	push   0xf7f0f300
  426c4d:	push   0x291f9500
  426c52:	call   0x426f61
  426c57:	add    esp,0x10
  426c5a:	sub    ebx,edi
  426c5c:	add    ebx,edi
  426c5e:	push   0xffffffe4
  426c60:	push   0xf397ab00
  426c65:	push   0xb3d59500
  426c6a:	push   0xa3e02500
  426c6f:	call   0x4273d1
  426c74:	add    esp,0x10
  426c77:	push   0xffffffe8
  426c79:	push   0xdff57900
  426c7e:	push   0xd347a800
  426c83:	call   0x4273d1
  426c88:	add    esp,0xc
  426c8b:	sub    ebx,eax
  426c8d:	call   0x4279df
  426c92:	push   0x39
  426c94:	push   0x59078900
  426c99:	call   0x4272e2
  426c9e:	add    esp,0x8
  426ca1:	push   0x18
  426ca3:	call   0x4271b5
  426ca8:	add    esp,0x4
  426cab:	push   0x69
  426cad:	push   0xb915500
  426cb2:	push   0x17e83e00
  426cb7:	call   0x4276cd
  426cbc:	add    esp,0xc
  426cbf:	sub    DWORD PTR [ebp-0x3c],ebx
  426cc2:	call   0x427075
  426cc7:	mov    DWORD PTR [ebp-0x1c],edi
  426cca:	push   0x10
  426ccc:	call   0x427075
  426cd1:	add    esp,0x4
  426cd4:	push   0x2bff2200
  426cd9:	push   0xffffffa9
  426cdb:	call   0x427075
  426ce0:	add    esp,0x8
  426ce3:	mov    edi,DWORD PTR [ebp-0x10]
  426ce6:	mov    ecx,DWORD PTR [ebp-0x3c]
  426ce9:	sub    ecx,ebx
  426ceb:	push   0x73
  426ced:	call   0x427075
  426cf2:	add    esp,0x4
  426cf5:	push   0x8b87e200
  426cfa:	call   0x4279df
  426cff:	add    esp,0x4
  426d02:	push   0xc
  426d04:	call   0x4272e2
  426d09:	add    esp,0x4
  426d0c:	mov    ebx,DWORD PTR [ebp-0x1c]
  426d0f:	push   0x67
  426d11:	push   0x3e
  426d13:	push   0x4945f700
  426d18:	call   0x4276cd
  426d1d:	add    esp,0xc
  426d20:	call   0x42751b
  426d25:	mov    esi,DWORD PTR [ebx]
  426d27:	sub    DWORD PTR [ebp-0x3c],edi
  426d2a:	mov    ecx,DWORD PTR [ebx+0x4]
  426d2d:	mov    edx,0x89041220
  426d32:	sub    edx,edi
  426d34:	add    DWORD PTR [ebp-0x3c],esi
  426d37:	mov    eax,DWORD PTR [ebp-0x3c]
  426d3a:	add    DWORD PTR [ebp-0x3c],edx
  426d3d:	add    DWORD PTR [ebp-0x3c],eax
  426d40:	or     esi,esi
  426d42:	je     0x426ead
  426d48:	test   ecx,0x7
  426d4e:	je     0x426d74
  426d50:	cmp    ecx,eax
  426d52:	je     0x426d74
  426d54:	mov    edx,ebx
  426d56:	add    edx,ebx
  426d58:	and    edx,esi
  426d5a:	mov    eax,DWORD PTR [ebp-0x3c]
  426d5d:	add    eax,edx
  426d5f:	cmp    eax,ecx
  426d61:	jne    0x426d74
  426d63:	mov    edx,DWORD PTR [ebp-0x3c]
  426d66:	sub    edx,ecx
  426d68:	sub    DWORD PTR [ebp-0x3c],edx
  426d6b:	and    eax,edx
  426d6d:	add    eax,edi
  426d6f:	sub    eax,edi
  426d71:	add    DWORD PTR [ebp-0x3c],eax
  426d74:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d76:	push   0xffffffea
  426d78:	push   0xffffffba
  426d7a:	push   0x1c
  426d7c:	call   0x4271b5
  426d81:	add    esp,0xc
  426d84:	add    esi,ebx
  426d86:	push   0x45
  426d88:	push   0x4a
  426d8a:	push   0x23
  426d8c:	push   0xffffff9f
  426d8e:	call   0x4271b5
  426d93:	add    esp,0x10
  426d96:	push   0xb9052700
  426d9b:	push   0xffffffd2
  426d9d:	push   0x5b
  426d9f:	push   0xefad3900
  426da4:	push   0xf9387700
  426da9:	call   0x42751b
  426dae:	add    esp,0x14
  426db1:	push   0x57
  426db3:	push   0x59304600
  426db8:	push   0xb933cb00
  426dbd:	call   0x4271b5
  426dc2:	add    esp,0xc
  426dc5:	cmp    esi,DWORD PTR [ebp-0x30]
  426dc8:	je     0x426e82
  426dce:	mov    ecx,DWORD PTR [ebp-0x3c]
  426dd1:	push   0xffffffa9
  426dd3:	push   0x26
  426dd5:	push   0xffffffc2
  426dd7:	push   0xffffff8c
  426dd9:	call   0x4271b5
  426dde:	add    esp,0x10
  426de1:	cmp    esi,0x12
  426de4:	je     0x426e82
  426dea:	cmp    esi,eax
  426dec:	jne    0x426e82
  426df2:	sub    DWORD PTR [ebp-0x3c],edi
  426df5:	sub    esi,ebx
  426df7:	mov    DWORD PTR [ebp-0x3c],edi
  426dfa:	push   0xffffffac
  426dfc:	push   0x6bf72b00
  426e01:	push   0x6b894300
  426e06:	call   0x427075
  426e0b:	add    esp,0xc
  426e0e:	mov    eax,0x41
  426e13:	mov    ecx,DWORD PTR [ebp-0x3c]
  426e16:	push   0x19
  426e18:	push   0xffffffca
  426e1a:	push   0xf95bfc00
  426e1f:	call   0x4276cd
  426e24:	add    esp,0xc
  426e27:	push   0x2d
  426e29:	push   0x41
  426e2b:	push   0x2c
  426e2d:	push   0xffffffe8
  426e2f:	push   0xeb3e6800
  426e34:	call   0x4279df
  426e39:	add    esp,0x14
  426e3c:	cmp    esi,edi
  426e3e:	je     0x426e82
  426e40:	mov    ecx,DWORD PTR [ebp-0x3c]
  426e43:	push   0x53
  426e45:	push   0x33986a00
  426e4a:	push   0x49582e00
  426e4f:	call   0x426f61
  426e54:	add    esp,0xc
  426e57:	push   0xeb630300
  426e5c:	push   0xffffff8b
  426e5e:	push   0x27922c00
  426e63:	push   0xe79c9600
  426e68:	call   0x4272e2
  426e6d:	add    esp,0x10
  426e70:	push   0x7b967000
  426e75:	push   0xffffffa6
  426e77:	call   0x4276cd
  426e7c:	add    esp,0x8
  426e7f:	and    DWORD PTR [ebp-0x3c],esi
  426e82:	call   0x42751b
  426e87:	add    DWORD PTR [ebp-0x1c],0x8
  426e8b:	push   0x70
  426e8d:	push   0x5e
  426e8f:	push   0x7d
  426e91:	push   0xffffff8d
  426e93:	call   0x4273d1
  426e98:	add    esp,0x10
  426e9b:	push   0xefbd7b00
  426ea0:	call   0x42751b
  426ea5:	add    esp,0x4
  426ea8:	jmp    0x426ce6
  426ead:	mov    ebx,DWORD PTR [ebp-0x3c]
  426eb0:	mov    DWORD PTR [ebp-0x3c],ebx
  426eb3:	mov    DWORD PTR [ebp-0x3c],ecx
  426eb6:	push   0x70
  426eb8:	push   0x196fd200
  426ebd:	push   0x9335a900
  426ec2:	push   0x790ab000
  426ec7:	push   0x536fcf00
  426ecc:	call   0x426f61
  426ed1:	add    esp,0x14
  426ed4:	xor    edx,edx
  426ed6:	sub    DWORD PTR [ebp-0x3c],edx
  426ed9:	mov    eax,DWORD PTR [ebp-0x10]
  426edc:	and    DWORD PTR [ebp-0x3c],eax
  426edf:	xor    edi,edi
  426ee1:	mov    ebx,DWORD PTR [ebp-0x3c]
  426ee4:	sub    DWORD PTR [ebp-0x3c],edx
  426ee7:	cmp    ebx,edx
  426ee9:	je     0x426efa
  426eeb:	xor    ecx,ecx
  426eed:	xor    edx,edx
  426eef:	sub    ecx,edx
  426ef1:	sub    ebx,ecx
  426ef3:	add    ebx,ebx
  426ef5:	and    edi,ebx
  426ef7:	mov    DWORD PTR [ebp-0xc],edi
  426efa:	pop    edi
  426efb:	mov    edx,DWORD PTR [ebp-0x3c]
  426efe:	mov    ecx,DWORD PTR [ebp-0x3c]
  426f01:	cmp    edx,0xb9ba
  426f07:	jne    0x426f33
  426f09:	cmp    ecx,edx
  426f0b:	jne    0x426f33
  426f0d:	mov    esi,0x1e
  426f12:	mov    ebx,DWORD PTR [ebp-0x3c]
  426f15:	add    edx,esi
  426f17:	cmp    edi,0x7800941
  426f1d:	jne    0x426f33
  426f1f:	mov    esi,ebx
  426f21:	add    DWORD PTR [ebp-0x3c],ecx
  426f24:	and    edx,eax
  426f26:	sub    DWORD PTR [ebp-0x3c],edx
  426f29:	mov    edx,ecx
  426f2b:	sub    DWORD PTR [ebp-0x3c],esi
  426f2e:	and    edx,ebx
  426f30:	mov    DWORD PTR [ebp-0x3c],edx
  426f33:	pop    esi
  426f34:	xor    ecx,ecx
  426f36:	mov    edx,DWORD PTR [ebp-0x3c]
  426f39:	add    DWORD PTR [ebp-0x3c],edx
  426f3c:	add    DWORD PTR [ebp-0x3c],esi
  426f3f:	add    ecx,esi
  426f41:	sub    ecx,eax
  426f43:	add    ecx,ecx
  426f45:	or     ecx,ebx
  426f47:	add    DWORD PTR [ebp-0x3c],edi
  426f4a:	cmp    ecx,ebx
  426f4c:	je     0x426f51
  426f4e:	add    DWORD PTR [ebp-0x3c],ecx
  426f51:	pop    ebx
  426f52:	cmp    ebx,DWORD PTR [ebp-0x28]
  426f55:	jne    0x426f5a
  426f57:	sub    DWORD PTR [ebp-0x3c],eax
  426f5a:	leave  
  426f5b:	ret    
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	int3   
  426f61:	push   ebp
  426f62:	mov    ebp,esp
  426f64:	sub    esp,0x18
  426f67:	mov    ecx,0xab
  426f6c:	push   0xcb1c3300
  426f71:	push   0x8900ad00
  426f76:	push   0xfffffffc
  426f78:	call   0x4273d1
  426f7d:	add    esp,0xc
  426f80:	push   ebx
  426f81:	add    eax,eax
  426f83:	push   0xeb316d00
  426f88:	call   0x4276cd
  426f8d:	add    esp,0x4
  426f90:	push   0xffffffb2
  426f92:	call   0x42751b
  426f97:	add    esp,0x4
  426f9a:	push   esi
  426f9b:	push   0x74
  426f9d:	push   0xd7f53400
  426fa2:	call   0x4273d1
  426fa7:	add    esp,0x8
  426faa:	call   0x4279df
  426faf:	push   edi
  426fb0:	push   0xdb93e700
  426fb5:	call   0x42751b
  426fba:	add    esp,0x4
  426fbd:	push   0xffffffcf
  426fbf:	push   0x57b8f900
  426fc4:	push   0xffffffe4
  426fc6:	call   0x4276cd
  426fcb:	add    esp,0xc
  426fce:	mov    DWORD PTR [ebp-0x4],eax
  426fd1:	push   0x37e8b200
  426fd6:	call   0x42751b
  426fdb:	add    esp,0x4
  426fde:	push   0x32
  426fe0:	push   0x77
  426fe2:	push   0x47dbc600
  426fe7:	push   0x2d
  426fe9:	call   0x42751b
  426fee:	add    esp,0x10
  426ff1:	mov    ecx,DWORD PTR [ebp-0x4]
  426ff4:	push   0xc9262b00
  426ff9:	push   0xcb641300
  426ffe:	call   0x42751b
  427003:	add    esp,0x8
  427006:	push   0x6a
  427008:	call   0x42751b
  42700d:	add    esp,0x4
  427010:	call   0x4273d1
  427015:	push   0x2b
  427017:	push   0xffffff88
  427019:	push   0x5324cf00
  42701e:	call   0x42751b
  427023:	add    esp,0xc
  427026:	mov    ecx,DWORD PTR [ebp-0x4]
  427029:	push   0xd91f8c00
  42702e:	call   0x42751b
  427033:	add    esp,0x4
  427036:	push   0x0
  427038:	push   0xcb49b500
  42703d:	push   0xd3466400
  427042:	push   0xffffff9b
  427044:	call   0x4276cd
  427049:	add    esp,0x10
  42704c:	pop    edi
  42704d:	mov    eax,DWORD PTR [ebp-0x4]
  427050:	add    DWORD PTR [ebp-0x4],edi
  427053:	cmp    edi,0xffffffc5
  427056:	jne    0x427064
  427058:	cmp    eax,0xde2d
  42705d:	jne    0x427064
  42705f:	sub    eax,edi
  427061:	add    DWORD PTR [ebp-0x4],eax
  427064:	pop    esi
  427065:	add    DWORD PTR [ebp-0x4],esi
  427068:	pop    ebx
  427069:	call   0x4276cd
  42706e:	leave  
  42706f:	ret    
  427070:	int3   
  427071:	int3   
  427072:	int3   
  427073:	int3   
  427074:	int3   
  427075:	push   ebp
  427076:	mov    ebp,esp
  427078:	sub    esp,0x2c
  42707b:	call   0x4279df
  427080:	push   ebx
  427081:	push   0xffffffe7
  427083:	push   0xbe64800
  427088:	push   0x4faf3b00
  42708d:	push   0x4f
  42708f:	call   0x4273d1
  427094:	add    esp,0x10
  427097:	push   esi
  427098:	push   0x994e1e00
  42709d:	call   0x4279df
  4270a2:	add    esp,0x4
  4270a5:	push   edi
  4270a6:	mov    DWORD PTR [ebp-0x14],eax
  4270a9:	push   0x5
  4270ab:	call   0x4279df
  4270b0:	add    esp,0x4
  4270b3:	push   0x31
  4270b5:	push   0xcb423d00
  4270ba:	push   0x33c1e100
  4270bf:	push   0xffffffc1
  4270c1:	push   0xcb580b00
  4270c6:	call   0x4279df
  4270cb:	add    esp,0x14
  4270ce:	push   0xd7e0ee00
  4270d3:	push   0x32
  4270d5:	push   0x7780d800
  4270da:	push   0x1959eb00
  4270df:	push   0xd952ed00
  4270e4:	call   0x4273d1
  4270e9:	add    esp,0x14
  4270ec:	push   0x67bb1f00
  4270f1:	push   0xfffffff0
  4270f3:	push   0x5b
  4270f5:	push   0x63a86200
  4270fa:	push   0x42
  4270fc:	call   0x4276cd
  427101:	add    esp,0x14
  427104:	mov    edi,0xb
  427109:	mov    ecx,DWORD PTR [ebp-0x14]
  42710c:	push   0xebc95d00
  427111:	call   0x42751b
  427116:	add    esp,0x4
  427119:	and    edi,eax
  42711b:	call   0x4276cd
  427120:	push   0x12
  427122:	push   0x23e59f00
  427127:	push   0xffffffb2
  427129:	call   0x42751b
  42712e:	add    esp,0xc
  427131:	push   0x31
  427133:	push   0x2f
  427135:	push   0x77db5000
  42713a:	push   0xeb79b400
  42713f:	call   0x4273d1
  427144:	add    esp,0x10
  427147:	and    edi,eax
  427149:	sub    edi,eax
  42714b:	push   0x87cb6d00
  427150:	push   0xffffffc1
  427152:	push   0xeb398600
  427157:	push   0x7b1b600
  42715c:	call   0x4279df
  427161:	add    esp,0x10
  427164:	add    DWORD PTR [ebp-0x14],edi
  427167:	pop    edi
  427168:	cmp    edi,0x13
  42716b:	jne    0x427185
  42716d:	push   0x1c
  42716f:	push   0x5940db00
  427174:	push   0xffffffd5
  427176:	push   0x45
  427178:	push   0x93db1b00
  42717d:	call   0x4279df
  427182:	add    esp,0x14
  427185:	push   0x3e
  427187:	push   0x6a
  427189:	push   0xf
  42718b:	push   0xffffff80
  42718d:	push   0xfffffff1
  42718f:	call   0x42751b
  427194:	add    esp,0x14
  427197:	pop    esi
  427198:	xor    DWORD PTR [ebp-0x14],esi
  42719b:	push   0xd97a4900
  4271a0:	call   0x4279df
  4271a5:	add    esp,0x4
  4271a8:	pop    ebx
  4271a9:	call   0x42751b
  4271ae:	leave  
  4271af:	ret    
  4271b0:	int3   
  4271b1:	int3   
  4271b2:	int3   
  4271b3:	int3   
  4271b4:	int3   
  4271b5:	push   ebp
  4271b6:	mov    ebp,esp
  4271b8:	sub    esp,0x3c
  4271bb:	xor    edx,edx
  4271bd:	push   0x934b9900
  4271c2:	push   0x0
  4271c4:	push   0x46
  4271c6:	call   0x42751b
  4271cb:	add    esp,0xc
  4271ce:	push   0x39375100
  4271d3:	push   0x438fa300
  4271d8:	call   0x4276cd
  4271dd:	add    esp,0x8
  4271e0:	push   ebx
  4271e1:	push   0xcb468400
  4271e6:	push   0xffffffd7
  4271e8:	push   0x36
  4271ea:	push   0xffffff99
  4271ec:	push   0x792fd200
  4271f1:	call   0x4279df
  4271f6:	add    esp,0x14
  4271f9:	push   esi
  4271fa:	push   0x2c
  4271fc:	push   0x46
  4271fe:	push   0xffffffe5
  427200:	push   0x72
  427202:	push   0x11
  427204:	call   0x4279df
  427209:	add    esp,0x14
  42720c:	push   edi
  42720d:	cmp    eax,0xe875
  427212:	je     0x42722a
  427214:	push   0x4b86d300
  427219:	push   0xa9058200
  42721e:	push   0x68
  427220:	push   0xfffffff3
  427222:	call   0x4279df
  427227:	add    esp,0x10
  42722a:	push   0xb906b00
  42722f:	push   0xcb7f7a00
  427234:	push   0x6e
  427236:	push   0xd398e400
  42723b:	call   0x4273d1
  427240:	add    esp,0x10
  427243:	mov    edx,eax
  427245:	mov    DWORD PTR [ebp-0x34],edx
  427248:	push   0xd9210400
  42724d:	push   0xcb68f600
  427252:	push   0xffffffd6
  427254:	push   0x195dda00
  427259:	call   0x4279df
  42725e:	add    esp,0x10
  427261:	call   0x4276cd
  427266:	push   0xe3903a00
  42726b:	push   0x297eb000
  427270:	push   0x1b99b800
  427275:	call   0x4276cd
  42727a:	add    esp,0xc
  42727d:	cmp    eax,0x2c
  427280:	jne    0x427287
  427282:	call   0x4279df
  427287:	push   0x131fe800
  42728c:	push   0x66
  42728e:	push   0x10
  427290:	push   0x292d2d00
  427295:	push   0xffffffca
  427297:	call   0x4273d1
  42729c:	add    esp,0x14
  42729f:	pop    edi
  4272a0:	push   0xd32cd800
  4272a5:	push   0x530ac400
  4272aa:	push   0x0
  4272ac:	push   0x12
  4272ae:	call   0x4276cd
  4272b3:	add    esp,0x10
  4272b6:	pop    esi
  4272b7:	sub    eax,esi
  4272b9:	push   0x15
  4272bb:	push   0xffffffef
  4272bd:	push   0xc
  4272bf:	push   0xffffff91
  4272c1:	push   0x49714d00
  4272c6:	call   0x42751b
  4272cb:	add    esp,0x14
  4272ce:	pop    ebx
  4272cf:	push   0x1e
  4272d1:	push   0xffffffe7
  4272d3:	call   0x4276cd
  4272d8:	add    esp,0x8
  4272db:	leave  
  4272dc:	ret    
  4272dd:	int3   
  4272de:	int3   
  4272df:	int3   
  4272e0:	int3   
  4272e1:	int3   
  4272e2:	push   ebp
  4272e3:	mov    ebp,esp
  4272e5:	sub    esp,0x40
  4272e8:	xor    edx,edx
  4272ea:	mov    DWORD PTR [ebp-0x10],edx
  4272ed:	push   0x47fb8200
  4272f2:	call   0x4279df
  4272f7:	add    esp,0x4
  4272fa:	push   ebx
  4272fb:	test   eax,0x30
  427300:	jne    0x42730c
  427302:	mov    eax,0x19
  427307:	call   0x4279df
  42730c:	push   esi
  42730d:	push   0x67bf3200
  427312:	call   0x42751b
  427317:	add    esp,0x4
  42731a:	push   0xe9145f00
  42731f:	push   0xffffffed
  427321:	push   0x45
  427323:	push   0x27ef2200
  427328:	call   0x4279df
  42732d:	add    esp,0x10
  427330:	push   edi
  427331:	cmp    eax,0x48
  427334:	je     0x427343
  427336:	push   0xcb6b6a00
  42733b:	call   0x42751b
  427340:	add    esp,0x4
  427343:	push   0xffffff8c
  427345:	push   0xa
  427347:	push   0x23d6b000
  42734c:	call   0x4276cd
  427351:	add    esp,0xc
  427354:	add    eax,eax
  427356:	cmp    eax,DWORD PTR [ebp-0x2c]
  427359:	jne    0x427364
  42735b:	mov    ebx,DWORD PTR [ebp-0x10]
  42735e:	add    DWORD PTR [ebp-0x10],ebx
  427361:	sub    DWORD PTR [ebp-0x10],eax
  427364:	push   0xffffffde
  427366:	call   0x42751b
  42736b:	add    esp,0x4
  42736e:	push   0x47
  427370:	call   0x4273d1
  427375:	add    esp,0x4
  427378:	push   0xffffffd3
  42737a:	call   0x42751b
  42737f:	add    esp,0x4
  427382:	pop    edi
  427383:	push   0xffffff93
  427385:	push   0x137ecf00
  42738a:	push   0x25
  42738c:	push   0xd3c96f00
  427391:	push   0x392f4c00
  427396:	call   0x42751b
  42739b:	add    esp,0x14
  42739e:	pop    esi
  42739f:	mov    eax,0xb1
  4273a4:	push   0xffffffb3
  4273a6:	push   0xffffff8d
  4273a8:	push   0xffffffda
  4273aa:	push   0x9fb6a800
  4273af:	call   0x4279df
  4273b4:	add    esp,0x10
  4273b7:	pop    ebx
  4273b8:	push   0x13b53a00
  4273bd:	push   0x7bd0df00
  4273c2:	call   0x42751b
  4273c7:	add    esp,0x8
  4273ca:	leave  
  4273cb:	ret    
  4273cc:	int3   
  4273cd:	int3   
  4273ce:	int3   
  4273cf:	int3   
  4273d0:	int3   
  4273d1:	push   ebp
  4273d2:	mov    ebp,esp
  4273d4:	sub    esp,0x20
  4273d7:	xor    edx,edx
  4273d9:	mov    ecx,0xa7f5
  4273de:	sub    edx,ecx
  4273e0:	mov    DWORD PTR [ebp-0x1c],edx
  4273e3:	push   ebx
  4273e4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4273e7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4273ea:	add    ecx,edx
  4273ec:	add    DWORD PTR [ebp-0x1c],ecx
  4273ef:	sub    ebx,edx
  4273f1:	add    DWORD PTR [ebp-0x1c],ebx
  4273f4:	push   esi
  4273f5:	sub    DWORD PTR [ebp-0x1c],ebx
  4273f8:	push   edi
  4273f9:	mov    ebx,DWORD PTR [ebp-0x1c]
  4273fc:	mov    esi,DWORD PTR [ebp-0x1c]
  4273ff:	add    DWORD PTR [ebp-0x1c],esi
  427402:	add    DWORD PTR [ebp-0x1c],ebx
  427405:	cmp    ebx,0x4f
  427408:	jne    0x42740d
  42740a:	sub    DWORD PTR [ebp-0x1c],ecx
  42740d:	sub    edx,esi
  42740f:	sub    edx,ecx
  427411:	or     edx,esi
  427413:	cmp    edx,0x5
  427416:	jne    0x427426
  427418:	mov    esi,DWORD PTR [ebp-0x1c]
  42741b:	sub    edx,esi
  42741d:	sub    edx,ebx
  42741f:	sub    edx,esi
  427421:	and    edx,ebx
  427423:	add    DWORD PTR [ebp-0x1c],edx
  427426:	sub    esi,ecx
  427428:	sub    esi,ebx
  42742a:	sub    DWORD PTR [ebp-0x1c],esi
  42742d:	sub    DWORD PTR [ebp-0x1c],esi
  427430:	pop    edi
  427431:	add    esi,ecx
  427433:	add    esi,ebx
  427435:	cmp    esi,DWORD PTR [ebp-0xc]
  427438:	jne    0x427451
  42743a:	add    esi,ebx
  42743c:	cmp    esi,0xffffffda
  42743f:	je     0x427451
  427441:	mov    ecx,0xee
  427446:	mov    ebx,esi
  427448:	sub    DWORD PTR [ebp-0x1c],ecx
  42744b:	add    DWORD PTR [ebp-0x1c],edi
  42744e:	xor    DWORD PTR [ebp-0x1c],ebx
  427451:	pop    esi
  427452:	cmp    esi,0x7b5
  427458:	jne    0x427478
  42745a:	mov    ecx,0x79
  42745f:	mov    eax,0xb196
  427464:	mov    DWORD PTR [ebp-0x1c],eax
  427467:	or     ecx,esi
  427469:	add    ecx,esi
  42746b:	cmp    ecx,0xa726
  427471:	jne    0x427478
  427473:	sub    ecx,ebx
  427475:	sub    DWORD PTR [ebp-0x1c],ecx
  427478:	pop    ebx
  427479:	xor    edx,edx
  42747b:	sub    DWORD PTR [ebp-0x1c],esi
  42747e:	sub    edx,eax
  427480:	mov    eax,esi
  427482:	cmp    esi,0xffffff8d
  427485:	jne    0x427514
  42748b:	sub    DWORD PTR [ebp-0x1c],ebx
  42748e:	mov    ecx,0x3a8a
  427493:	sub    eax,esi
  427495:	add    edx,esi
  427497:	cmp    edx,esi
  427499:	jne    0x427514
  42749b:	test   edx,0x67
  4274a1:	je     0x427514
  4274a3:	cmp    eax,DWORD PTR [ebp-0x1c]
  4274a6:	jne    0x427514
  4274a8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4274ab:	and    edx,esi
  4274ad:	cmp    edx,DWORD PTR [ebp-0x10]
  4274b0:	jne    0x427514
  4274b2:	and    DWORD PTR [ebp-0x1c],edx
  4274b5:	or     DWORD PTR [ebp-0x1c],ecx
  4274b8:	mov    edx,DWORD PTR [ebp-0x1c]
  4274bb:	and    eax,esi
  4274bd:	cmp    edx,DWORD PTR [ebp-0x20]
  4274c0:	je     0x427514
  4274c2:	sub    DWORD PTR [ebp-0x1c],edx
  4274c5:	cmp    eax,0x6c
  4274c8:	je     0x427514
  4274ca:	and    eax,esi
  4274cc:	mov    edx,0x6b
  4274d1:	mov    ecx,DWORD PTR [ebp-0x1c]
  4274d4:	or     DWORD PTR [ebp-0x1c],edx
  4274d7:	test   eax,0xafd8
  4274dc:	jne    0x427514
  4274de:	add    eax,edi
  4274e0:	mov    edx,ebx
  4274e2:	add    DWORD PTR [ebp-0x1c],eax
  4274e5:	mov    eax,0xa7
  4274ea:	or     eax,ebx
  4274ec:	cmp    ecx,0x3d
  4274ef:	jne    0x427514
  4274f1:	add    DWORD PTR [ebp-0x1c],eax
  4274f4:	mov    eax,DWORD PTR ds:0x450050
  4274fa:	cmp    ecx,0xfffffff1
  4274fd:	jne    0x427514
  4274ff:	and    eax,ecx
  427501:	mov    ecx,0xf134
  427506:	sub    edx,eax
  427508:	add    edx,edx
  42750a:	and    ecx,edi
  42750c:	sub    edx,ebx
  42750e:	xor    DWORD PTR [ebp-0x1c],ecx
  427511:	add    DWORD PTR [ebp-0x1c],edx
  427514:	leave  
  427515:	ret    
  427516:	int3   
  427517:	int3   
  427518:	int3   
  427519:	int3   
  42751a:	int3   
  42751b:	push   ebp
  42751c:	mov    ebp,esp
  42751e:	sub    esp,0x38
  427521:	xor    eax,eax
  427523:	mov    DWORD PTR [ebp-0x20],eax
  427526:	push   ebx
  427527:	mov    ebx,DWORD PTR [ebp-0x20]
  42752a:	or     ebx,eax
  42752c:	cmp    ebx,DWORD PTR [ebp-0x38]
  42752f:	je     0x427541
  427531:	add    ebx,eax
  427533:	mov    eax,DWORD PTR [ebp-0x20]
  427536:	mov    ecx,DWORD PTR [ebp-0x20]
  427539:	add    DWORD PTR [ebp-0x20],eax
  42753c:	add    ebx,ecx
  42753e:	sub    DWORD PTR [ebp-0x20],ebx
  427541:	push   esi
  427542:	test   ebx,0x9c
  427548:	je     0x427558
  42754a:	mov    ecx,DWORD PTR [ebp-0x20]
  42754d:	cmp    ecx,eax
  42754f:	jne    0x427558
  427551:	or     ecx,eax
  427553:	and    ecx,ebx
  427555:	xor    DWORD PTR [ebp-0x20],ecx
  427558:	push   edi
  427559:	sub    DWORD PTR [ebp-0x20],ecx
  42755c:	mov    edx,DWORD PTR ds:0x450070
  427562:	mov    eax,ecx
  427564:	add    DWORD PTR [ebp-0x20],edx
  427567:	sub    DWORD PTR [ebp-0x20],eax
  42756a:	mov    ecx,DWORD PTR [ebp-0x20]
  42756d:	or     ecx,eax
  42756f:	mov    edx,DWORD PTR [ebp-0x20]
  427572:	sub    DWORD PTR [ebp-0x20],ebx
  427575:	sub    DWORD PTR [ebp-0x20],ecx
  427578:	or     edx,eax
  42757a:	test   eax,0xe0
  42757f:	jne    0x42759e
  427581:	add    DWORD PTR [ebp-0x20],ecx
  427584:	cmp    edx,0xffffff99
  427587:	je     0x42759e
  427589:	mov    ecx,0xdf
  42758e:	mov    ebx,edx
  427590:	cmp    ebx,DWORD PTR ds:0x450070
  427596:	jne    0x42759b
  427598:	add    DWORD PTR [ebp-0x20],ebx
  42759b:	xor    DWORD PTR [ebp-0x20],ecx
  42759e:	add    ecx,eax
  4275a0:	mov    edi,ecx
  4275a2:	mov    edx,DWORD PTR ds:0x450070
  4275a8:	and    edx,ebx
  4275aa:	sub    DWORD PTR [ebp-0x20],edx
  4275ad:	sub    DWORD PTR [ebp-0x20],edi
  4275b0:	pop    edi
  4275b1:	mov    ecx,edi
  4275b3:	cmp    ecx,0x61
  4275b6:	jne    0x42761b
  4275b8:	add    ecx,ecx
  4275ba:	cmp    ecx,eax
  4275bc:	jne    0x42761b
  4275be:	xor    eax,eax
  4275c0:	mov    esi,DWORD PTR [ebp-0x20]
  4275c3:	or     esi,eax
  4275c5:	add    esi,esi
  4275c7:	or     DWORD PTR [ebp-0x20],esi
  4275ca:	cmp    ecx,0x50
  4275cd:	jne    0x42761b
  4275cf:	mov    ebx,0xb4
  4275d4:	mov    eax,DWORD PTR [ebp-0x20]
  4275d7:	sub    DWORD PTR [ebp-0x20],ecx
  4275da:	cmp    eax,DWORD PTR ds:0x450070
  4275e0:	je     0x42761b
  4275e2:	mov    edx,0x3080400
  4275e7:	sub    edx,ebx
  4275e9:	add    DWORD PTR [ebp-0x20],eax
  4275ec:	sub    edx,eax
  4275ee:	mov    ecx,0xd3
  4275f3:	sub    DWORD PTR [ebp-0x20],edx
  4275f6:	cmp    esi,DWORD PTR [ebp-0x14]
  4275f9:	jne    0x42761b
  4275fb:	mov    ebx,eax
  4275fd:	add    DWORD PTR [ebp-0x20],ecx
  427600:	add    ebx,edx
  427602:	mov    eax,0xe30c
  427607:	sub    DWORD PTR [ebp-0x20],ecx
  42760a:	add    ebx,esi
  42760c:	sub    DWORD PTR [ebp-0x20],ebx
  42760f:	add    eax,ecx
  427611:	sub    eax,ebx
  427613:	and    eax,edx
  427615:	add    DWORD PTR [ebp-0x20],edx
  427618:	mov    DWORD PTR [ebp-0x20],eax
  42761b:	pop    esi
  42761c:	cmp    ebx,DWORD PTR [ebp-0x30]
  42761f:	je     0x427624
  427621:	sub    DWORD PTR [ebp-0x20],edi
  427624:	pop    ebx
  427625:	mov    edx,DWORD PTR [ebp-0x20]
  427628:	mov    ecx,0x6c
  42762d:	cmp    edx,DWORD PTR ds:0x450070
  427633:	je     0x4276c6
  427639:	cmp    edx,DWORD PTR [ebp-0x34]
  42763c:	je     0x4276c6
  427642:	mov    ecx,DWORD PTR [ebp-0x20]
  427645:	cmp    edx,ebx
  427647:	jne    0x4276c6
  427649:	cmp    ebx,DWORD PTR [ebp-0x24]
  42764c:	jne    0x4276c6
  42764e:	test   ecx,0x37
  427654:	jne    0x4276c6
  427656:	sub    ecx,esi
  427658:	xor    DWORD PTR [ebp-0x20],ecx
  42765b:	mov    eax,DWORD PTR [ebp-0x20]
  42765e:	cmp    eax,DWORD PTR ds:0x450070
  427664:	je     0x4276c6
  427666:	sub    edx,ecx
  427668:	mov    ecx,DWORD PTR [ebp-0x20]
  42766b:	sub    edx,ecx
  42766d:	add    DWORD PTR [ebp-0x20],eax
  427670:	sub    edx,esi
  427672:	cmp    ebx,0xffffff95
  427675:	je     0x4276c6
  427677:	mov    eax,DWORD PTR ds:0x450070
  42767d:	mov    ecx,DWORD PTR [ebp-0x20]
  427680:	sub    edx,ecx
  427682:	add    edx,edx
  427684:	cmp    edx,0x65
  427687:	je     0x4276c6
  427689:	mov    ecx,0x38
  42768e:	cmp    esi,DWORD PTR ds:0x450070
  427694:	je     0x4276c6
  427696:	sub    DWORD PTR [ebp-0x20],eax
  427699:	mov    eax,0xe3
  42769e:	sub    DWORD PTR [ebp-0x20],esi
  4276a1:	cmp    ebx,0xffffffe1
  4276a4:	jne    0x4276c6
  4276a6:	add    DWORD PTR [ebp-0x20],edx
  4276a9:	sub    ecx,edx
  4276ab:	mov    edx,DWORD PTR ds:0x450070
  4276b1:	add    DWORD PTR [ebp-0x20],ecx
  4276b4:	sub    DWORD PTR [ebp-0x20],ebx
  4276b7:	add    DWORD PTR [ebp-0x20],edx
  4276ba:	sub    eax,edi
  4276bc:	mov    DWORD PTR [ebp-0x20],edx
  4276bf:	sub    eax,esi
  4276c1:	and    eax,esi
  4276c3:	sub    DWORD PTR [ebp-0x20],eax
  4276c6:	leave  
  4276c7:	ret    
  4276c8:	int3   
  4276c9:	int3   
  4276ca:	int3   
  4276cb:	int3   
  4276cc:	int3   
  4276cd:	push   ebp
  4276ce:	mov    ebp,esp
  4276d0:	sub    esp,0x34
  4276d3:	xor    eax,eax
  4276d5:	mov    edx,0x57
  4276da:	add    edx,eax
  4276dc:	sub    eax,edx
  4276de:	add    eax,eax
  4276e0:	sub    eax,edx
  4276e2:	and    eax,edx
  4276e4:	sub    eax,edx
  4276e6:	mov    DWORD PTR [ebp-0x14],edx
  4276e9:	or     DWORD PTR [ebp-0x14],eax
  4276ec:	push   ebx
  4276ed:	add    DWORD PTR [ebp-0x14],eax
  4276f0:	push   esi
  4276f1:	sub    eax,edx
  4276f3:	mov    esi,DWORD PTR [ebp-0x14]
  4276f6:	sub    eax,edx
  4276f8:	cmp    esi,DWORD PTR [ebp-0x34]
  4276fb:	je     0x42778a
  427701:	mov    DWORD PTR [ebp-0x14],eax
  427704:	mov    ebx,DWORD PTR [ebp-0x14]
  427707:	mov    ecx,DWORD PTR [ebp-0x14]
  42770a:	xor    DWORD PTR [ebp-0x14],ebx
  42770d:	cmp    esi,0xffffffc8
  427710:	jne    0x42778a
  427712:	and    ecx,esi
  427714:	mov    edx,DWORD PTR [ebp-0x14]
  427717:	xor    esi,esi
  427719:	add    ecx,eax
  42771b:	add    DWORD PTR [ebp-0x14],edx
  42771e:	sub    DWORD PTR [ebp-0x14],ebx
  427721:	test   ecx,0xb
  427727:	je     0x42778a
  427729:	mov    edx,DWORD PTR [ebp-0x14]
  42772c:	xor    esi,esi
  42772e:	sub    DWORD PTR [ebp-0x14],ecx
  427731:	add    esi,esi
  427733:	sub    esi,eax
  427735:	mov    DWORD PTR [ebp-0x14],esi
  427738:	and    edx,ecx
  42773a:	sub    DWORD PTR [ebp-0x14],ecx
  42773d:	add    edx,ecx
  42773f:	add    edx,ecx
  427741:	cmp    edx,esi
  427743:	je     0x42778a
  427745:	cmp    edx,0xffffffed
  427748:	jne    0x42778a
  42774a:	mov    ecx,0x3b
  42774f:	test   ebx,0xa3ed
  427755:	jne    0x42778a
  427757:	xor    esi,esi
  427759:	mov    ebx,DWORD PTR [ebp-0x14]
  42775c:	add    edx,esi
  42775e:	sub    ebx,ecx
  427760:	cmp    ebx,0xfffffffa
  427763:	je     0x42778a
  427765:	sub    edx,ecx
  427767:	test   edx,0xd5
  42776d:	jne    0x42778a
  42776f:	mov    esi,eax
  427771:	mov    ecx,edx
  427773:	and    ecx,esi
  427775:	cmp    ecx,0x5a
  427778:	je     0x42778a
  42777a:	sub    DWORD PTR [ebp-0x14],ecx
  42777d:	mov    ecx,DWORD PTR [ebp-0x14]
  427780:	sub    ebx,ecx
  427782:	cmp    ebx,0xffffff9b
  427785:	je     0x42778a
  427787:	sub    DWORD PTR [ebp-0x14],ebx
  42778a:	push   edi
  42778b:	sub    DWORD PTR [ebp-0x14],ebx
  42778e:	mov    edi,DWORD PTR [ebp-0x14]
  427791:	sub    edi,edx
  427793:	sub    DWORD PTR [ebp-0x14],edi
  427796:	or     edi,eax
  427798:	or     edi,ebx
  42779a:	or     edi,ecx
  42779c:	add    edi,edi
  42779e:	test   edx,0xe4
  4277a4:	je     0x4277d6
  4277a6:	cmp    edi,DWORD PTR [ebp-0x20]
  4277a9:	je     0x4277d6
  4277ab:	mov    ecx,0xd84e
  4277b0:	mov    ebx,DWORD PTR [ebp-0x14]
  4277b3:	sub    ecx,eax
  4277b5:	cmp    ebx,eax
  4277b7:	jne    0x4277d6
  4277b9:	mov    edx,0x25
  4277be:	sub    edi,ecx
  4277c0:	sub    DWORD PTR [ebp-0x14],edi
  4277c3:	mov    edi,0x51
  4277c8:	sub    DWORD PTR [ebp-0x14],eax
  4277cb:	or     DWORD PTR [ebp-0x14],edi
  4277ce:	add    ebx,eax
  4277d0:	sub    DWORD PTR [ebp-0x14],ebx
  4277d3:	add    DWORD PTR [ebp-0x14],edx
  4277d6:	add    DWORD PTR [ebp-0x14],esi
  4277d9:	sub    edx,edi
  4277db:	sub    edx,ebx
  4277dd:	cmp    edx,DWORD PTR [ebp-0x14]
  4277e0:	je     0x42792b
  4277e6:	sub    edx,esi
  4277e8:	mov    ebx,DWORD PTR [ebp-0x14]
  4277eb:	cmp    edx,edi
  4277ed:	jne    0x42792b
  4277f3:	mov    esi,0xb3
  4277f8:	mov    edi,DWORD PTR [ebp-0x14]
  4277fb:	add    esi,edi
  4277fd:	test   edx,0x4fa0
  427803:	je     0x42792b
  427809:	cmp    edx,0xffffffa6
  42780c:	je     0x42792b
  427812:	mov    edi,DWORD PTR [ebp-0x14]
  427815:	sub    ebx,edx
  427817:	sub    DWORD PTR [ebp-0x14],ebx
  42781a:	test   esi,0xeca2
  427820:	je     0x42792b
  427826:	mov    edx,ebx
  427828:	mov    DWORD PTR [ebp-0x14],edi
  42782b:	mov    ebx,DWORD PTR [ebp-0x14]
  42782e:	or     edx,esi
  427830:	or     ebx,esi
  427832:	cmp    ebx,0xffffffec
  427835:	jne    0x42792b
  42783b:	cmp    ebx,0xffffff98
  42783e:	jne    0x42792b
  427844:	mov    eax,edx
  427846:	add    DWORD PTR [ebp-0x14],ecx
  427849:	mov    ecx,DWORD PTR [ebp-0x14]
  42784c:	cmp    ebx,DWORD PTR [ebp-0x14]
  42784f:	jne    0x42792b
  427855:	add    DWORD PTR [ebp-0x14],ecx
  427858:	mov    esi,ecx
  42785a:	test   ebx,0xef
  427860:	je     0x42792b
  427866:	cmp    eax,DWORD PTR [ebp-0x34]
  427869:	je     0x42792b
  42786f:	or     eax,edx
  427871:	mov    edi,DWORD PTR [ebp-0x14]
  427874:	add    eax,esi
  427876:	mov    edx,DWORD PTR [ebp-0x14]
  427879:	and    edx,ebx
  42787b:	add    eax,edi
  42787d:	cmp    ebx,0x1110802
  427883:	jne    0x42792b
  427889:	cmp    eax,DWORD PTR [ebp-0x1c]
  42788c:	je     0x42792b
  427892:	sub    eax,ecx
  427894:	add    edx,ecx
  427896:	mov    edi,DWORD PTR ds:0x45008c
  42789c:	xor    esi,esi
  42789e:	sub    DWORD PTR [ebp-0x14],edx
  4278a1:	cmp    edx,edi
  4278a3:	je     0x42792b
  4278a9:	add    eax,edx
  4278ab:	or     DWORD PTR [ebp-0x14],eax
  4278ae:	cmp    eax,0xa934
  4278b3:	je     0x42792b
  4278b5:	mov    ebx,DWORD PTR ds:0x450054
  4278bb:	mov    esi,DWORD PTR [ebp-0x14]
  4278be:	cmp    esi,0x3e38
  4278c4:	je     0x4278d9
  4278c6:	add    edi,edx
  4278c8:	cmp    esi,0xffffffa2
  4278cb:	je     0x4278d9
  4278cd:	and    edi,edx
  4278cf:	xor    DWORD PTR [ebp-0x14],esi
  4278d2:	sub    edi,ecx
  4278d4:	add    edi,edi
  4278d6:	add    DWORD PTR [ebp-0x14],edi
  4278d9:	and    DWORD PTR [ebp-0x14],edi
  4278dc:	sub    ebx,edi
  4278de:	sub    ebx,edx
  4278e0:	test   ebx,0x4ca5
  4278e6:	jne    0x42792b
  4278e8:	mov    ecx,esi
  4278ea:	sub    ebx,eax
  4278ec:	mov    eax,0x56
  4278f1:	mov    DWORD PTR [ebp-0x14],ecx
  4278f4:	cmp    ecx,DWORD PTR ds:0x45008c
  4278fa:	je     0x42792b
  4278fc:	mov    ecx,0x289a
  427901:	sub    ebx,edx
  427903:	mov    edi,DWORD PTR [ebp-0x14]
  427906:	xor    DWORD PTR [ebp-0x14],ecx
  427909:	and    eax,ebx
  42790b:	cmp    eax,0xc1d3
  427910:	je     0x42792b
  427912:	mov    ecx,edi
  427914:	mov    edx,ecx
  427916:	or     DWORD PTR [ebp-0x14],ebx
  427919:	add    eax,eax
  42791b:	sub    DWORD PTR [ebp-0x14],eax
  42791e:	cmp    edx,DWORD PTR ds:0x45008c
  427924:	jne    0x42792b
  427926:	and    edx,eax
  427928:	add    DWORD PTR [ebp-0x14],edx
  42792b:	pop    edi
  42792c:	cmp    edi,eax
  42792e:	je     0x42796c
  427930:	cmp    eax,DWORD PTR [ebp-0x14]
  427933:	jne    0x42796c
  427935:	mov    eax,esi
  427937:	mov    ecx,DWORD PTR ds:0x450054
  42793d:	add    ecx,edi
  42793f:	cmp    ecx,0xffffff88
  427942:	jne    0x42796c
  427944:	mov    edx,DWORD PTR [ebp-0x14]
  427947:	and    ecx,edi
  427949:	mov    ebx,0xc60d
  42794e:	add    DWORD PTR [ebp-0x14],edx
  427951:	add    DWORD PTR [ebp-0x14],ecx
  427954:	sub    eax,edi
  427956:	mov    DWORD PTR [ebp-0x14],ebx
  427959:	or     eax,ebx
  42795b:	add    eax,ebx
  42795d:	and    eax,edx
  42795f:	and    DWORD PTR [ebp-0x14],edx
  427962:	cmp    edx,0x5e
  427965:	jne    0x42796c
  427967:	mov    edx,eax
  427969:	sub    DWORD PTR [ebp-0x14],edx
  42796c:	pop    esi
  42796d:	cmp    esi,0x15
  427970:	je     0x4279c5
  427972:	and    eax,edx
  427974:	cmp    edi,0x5fb6
  42797a:	je     0x4279c5
  42797c:	xor    DWORD PTR [ebp-0x14],esi
  42797f:	sub    DWORD PTR [ebp-0x14],edi
  427982:	mov    ecx,DWORD PTR [ebp-0x14]
  427985:	mov    edx,eax
  427987:	xor    DWORD PTR [ebp-0x14],ecx
  42798a:	and    edx,edi
  42798c:	add    edx,ecx
  42798e:	or     DWORD PTR [ebp-0x14],eax
  427991:	sub    edx,esi
  427993:	cmp    edx,DWORD PTR [ebp-0x34]
  427996:	je     0x4279c5
  427998:	mov    ecx,0xc6
  42799d:	cmp    edx,0xffffffee
  4279a0:	je     0x4279c5
  4279a2:	mov    eax,0xe2
  4279a7:	xor    ebx,ebx
  4279a9:	xor    DWORD PTR [ebp-0x14],ebx
  4279ac:	add    DWORD PTR [ebp-0x14],edx
  4279af:	or     ecx,ebx
  4279b1:	sub    DWORD PTR [ebp-0x14],edi
  4279b4:	cmp    edx,DWORD PTR [ebp-0x20]
  4279b7:	je     0x4279c2
  4279b9:	mov    DWORD PTR [ebp-0x8],edx
  4279bc:	or     DWORD PTR [ebp-0x14],ebx
  4279bf:	add    DWORD PTR [ebp-0x14],eax
  4279c2:	or     DWORD PTR [ebp-0x14],ecx
  4279c5:	pop    ebx
  4279c6:	mov    eax,DWORD PTR ds:0x45008c
  4279cc:	mov    edx,eax
  4279ce:	sub    DWORD PTR [ebp-0x14],ebx
  4279d1:	add    edx,edx
  4279d3:	add    edx,edi
  4279d5:	sub    DWORD PTR [ebp-0x14],edx
  4279d8:	leave  
  4279d9:	ret    
  4279da:	int3   
  4279db:	int3   
  4279dc:	int3   
  4279dd:	int3   
  4279de:	int3   
  4279df:	push   ebp
  4279e0:	mov    ebp,esp
  4279e2:	sub    esp,0x34
  4279e5:	xor    ecx,ecx
  4279e7:	add    ecx,ecx
  4279e9:	mov    eax,ecx
  4279eb:	mov    DWORD PTR [ebp-0xc],eax
  4279ee:	push   ebx
  4279ef:	and    DWORD PTR [ebp-0xc],eax
  4279f2:	push   esi
  4279f3:	mov    eax,DWORD PTR [ebp-0xc]
  4279f6:	mov    edx,DWORD PTR [ebp-0xc]
  4279f9:	add    eax,edx
  4279fb:	sub    DWORD PTR [ebp-0xc],ecx
  4279fe:	sub    DWORD PTR [ebp-0xc],eax
  427a01:	push   edi
  427a02:	and    DWORD PTR [ebp-0xc],edx
  427a05:	sub    edx,eax
  427a07:	cmp    edx,DWORD PTR [ebp-0x4]
  427a0a:	je     0x427a18
  427a0c:	xor    ecx,ecx
  427a0e:	and    ecx,edx
  427a10:	sub    ecx,eax
  427a12:	add    DWORD PTR [ebp-0xc],eax
  427a15:	or     DWORD PTR [ebp-0xc],ecx
  427a18:	test   ecx,0x17f6
  427a1e:	jne    0x427a2c
  427a20:	mov    eax,DWORD PTR [ebp-0xc]
  427a23:	xor    edx,edx
  427a25:	sub    eax,edx
  427a27:	add    eax,edx
  427a29:	add    DWORD PTR [ebp-0xc],eax
  427a2c:	sub    eax,ecx
  427a2e:	sub    eax,ecx
  427a30:	add    DWORD PTR [ebp-0xc],eax
  427a33:	mov    esi,DWORD PTR [ebp-0xc]
  427a36:	sub    DWORD PTR [ebp-0xc],esi
  427a39:	pop    edi
  427a3a:	mov    ecx,DWORD PTR [ebp-0xc]
  427a3d:	cmp    esi,DWORD PTR [ebp-0x8]
  427a40:	jne    0x427b63
  427a46:	mov    edx,DWORD PTR [ebp-0xc]
  427a49:	cmp    edi,DWORD PTR [ebp-0x4]
  427a4c:	je     0x427b63
  427a52:	mov    ebx,edi
  427a54:	mov    eax,DWORD PTR [ebp-0xc]
  427a57:	add    edx,edi
  427a59:	sub    edx,eax
  427a5b:	add    edx,edx
  427a5d:	sub    edx,eax
  427a5f:	add    DWORD PTR [ebp-0xc],esi
  427a62:	sub    ebx,ecx
  427a64:	cmp    ebx,0x3495
  427a6a:	je     0x427b63
  427a70:	add    edx,edx
  427a72:	mov    ecx,DWORD PTR [ebp-0xc]
  427a75:	mov    eax,DWORD PTR [ebp-0xc]
  427a78:	cmp    edx,0xfffffff3
  427a7b:	je     0x427b63
  427a81:	mov    esi,0x87
  427a86:	test   edx,0xe7
  427a8c:	jne    0x427b63
  427a92:	or     esi,ecx
  427a94:	add    ebx,ecx
  427a96:	cmp    ebx,0x87f
  427a9c:	je     0x427b63
  427aa2:	mov    ecx,DWORD PTR [ebp-0xc]
  427aa5:	sub    DWORD PTR [ebp-0xc],eax
  427aa8:	add    esi,edx
  427aaa:	mov    eax,DWORD PTR [ebp-0xc]
  427aad:	mov    DWORD PTR [ebp-0xc],ebx
  427ab0:	test   esi,0xe4
  427ab6:	jne    0x427b63
  427abc:	add    DWORD PTR [ebp-0xc],edi
  427abf:	cmp    eax,DWORD PTR [ebp-0x1c]
  427ac2:	je     0x427b63
  427ac8:	cmp    ecx,0x6a
  427acb:	jne    0x427b63
  427ad1:	mov    ebx,DWORD PTR [ebp-0xc]
  427ad4:	mov    edx,ecx
  427ad6:	add    DWORD PTR [ebp-0xc],edx
  427ad9:	cmp    esi,0x10
  427adc:	je     0x427b63
  427ae2:	cmp    ebx,0x3f
  427ae5:	je     0x427b63
  427ae7:	mov    ecx,0xbe
  427aec:	xor    edx,edx
  427aee:	or     edx,esi
  427af0:	cmp    ebx,0xc1e6
  427af6:	je     0x427b63
  427af8:	xor    esi,esi
  427afa:	add    DWORD PTR [ebp-0xc],ebx
  427afd:	cmp    edx,ebx
  427aff:	jne    0x427b63
  427b01:	sub    DWORD PTR [ebp-0xc],edx
  427b04:	mov    ebx,DWORD PTR [ebp-0xc]
  427b07:	mov    edx,0xc9
  427b0c:	add    DWORD PTR [ebp-0xc],esi
  427b0f:	cmp    ebx,eax
  427b11:	je     0x427b63
  427b13:	and    ebx,edi
  427b15:	mov    esi,DWORD PTR [ebp-0xc]
  427b18:	sub    ebx,ecx
  427b1a:	mov    ecx,0x6333
  427b1f:	sub    DWORD PTR [ebp-0xc],esi
  427b22:	add    ecx,esi
  427b24:	add    ecx,eax
  427b26:	sub    DWORD PTR [ebp-0xc],edi
  427b29:	sub    DWORD PTR [ebp-0xc],ecx
  427b2c:	cmp    esi,DWORD PTR [ebp-0x4]
  427b2f:	je     0x427b63
  427b31:	mov    esi,DWORD PTR [ebp-0xc]
  427b34:	add    DWORD PTR [ebp-0xc],ebx
  427b37:	cmp    esi,0xffffffec
  427b3a:	jne    0x427b63
  427b3c:	sub    esi,ecx
  427b3e:	mov    ebx,DWORD PTR [ebp-0xc]
  427b41:	cmp    ebx,DWORD PTR [ebp-0x24]
  427b44:	je     0x427b63
  427b46:	cmp    ebx,DWORD PTR [ebp-0x18]
  427b49:	jne    0x427b63
  427b4b:	add    edx,ecx
  427b4d:	add    DWORD PTR [ebp-0xc],ebx
  427b50:	cmp    esi,0x6a
  427b53:	jne    0x427b63
  427b55:	add    DWORD PTR [ebp-0xc],edx
  427b58:	mov    ecx,0x14
  427b5d:	sub    DWORD PTR [ebp-0xc],ecx
  427b60:	sub    DWORD PTR [ebp-0xc],esi
  427b63:	pop    esi
  427b64:	add    edx,esi
  427b66:	sub    edx,eax
  427b68:	cmp    eax,0xc3a5
  427b6d:	je     0x427b72
  427b6f:	add    DWORD PTR [ebp-0xc],edx
  427b72:	pop    ebx
  427b73:	mov    edx,DWORD PTR [ebp-0xc]
  427b76:	sub    DWORD PTR [ebp-0xc],ebx
  427b79:	mov    eax,0xbd
  427b7e:	xor    DWORD PTR [ebp-0xc],edx
  427b81:	add    eax,esi
  427b83:	and    eax,edx
  427b85:	cmp    eax,0x19b7
  427b8a:	je     0x427bb4
  427b8c:	mov    edx,ebx
  427b8e:	mov    ecx,DWORD PTR [ebp-0xc]
  427b91:	sub    edx,edi
  427b93:	sub    DWORD PTR [ebp-0xc],edx
  427b96:	cmp    eax,0x63
  427b99:	jne    0x427bb4
  427b9b:	mov    edx,DWORD PTR [ebp-0xc]
  427b9e:	sub    ecx,edx
  427ba0:	mov    edx,DWORD PTR [ebp-0xc]
  427ba3:	add    eax,esi
  427ba5:	sub    DWORD PTR [ebp-0xc],ecx
  427ba8:	and    DWORD PTR [ebp-0xc],eax
  427bab:	sub    edx,eax
  427bad:	sub    edx,ebx
  427baf:	sub    edx,ebx
  427bb1:	sub    DWORD PTR [ebp-0xc],edx
  427bb4:	leave  
  427bb5:	ret    
	...
